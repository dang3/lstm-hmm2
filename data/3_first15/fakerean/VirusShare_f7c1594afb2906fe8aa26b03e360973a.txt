sbb
add
mov
loop
shl
xchg
inc
add
pop
inc
jg
mov
mov
lret
mov
insl
test
and
mov
xchg
icebp
adc
sub
lds
lock
les
lret
cmp
fistpl
and
dec
nop
xchg
push
adcb
jne
or
push
adc
rolb
mov
loopne
sub
sub
imul
dec
inc
outsl
jo
xor
mov
jo
sahf
mov
mov
pop
jo
jne
out
loop
mov
pop
in
sbb
dec
std
inc
mov
mov
pop
bound
jb
subl
addr16
sahf
pop
sbb
lds
jno
stos
or
xchg
xor
scas
adc
insl
add
out
mov
rol
aam
sub
dec
nop
shr
pop
call
scas
jne
arpl
or
loop
add
cmp
jne
xchg
or
loope
or
mov
sub
outsb
mov
dec
add
icebp
push
mov
jecxz
mov
stc
aad
ds
scas
sbb
and
in
pop
mov
mov
ss
dec
push
fbstp
ret
jns
sbb
fmull
push
cmc
cmpsl
cmp
pop
mov
flds
and
sub
popf
add
jbe
lds
mov
int3
scas
fidivs
mov
std
mov
xor
jo
inc
cltd
nop
idivl
xor
rclb
fucomi
sti
orb
fisubrl
in
cmp
ret
enter
xchg
sub
int3
stos
cld
add
and
xor
lods
fidivl
xchg
inc
lcall
mov
ret
mov
int3
jno
insl
sbb
mov
or
jl
ljmp
fwait
clc
sbb
adc
add
jnp
xor
xor
aad
out
outsb
dec
lock
pop
jmp
outsb
xchg
in
push
icebp
add
xchg
adc
loop
dec
das
data16
rcl
faddl
mov
pop
adc
clc
popa
lea
jns
mov
xchg
pop
testl
lods
into
lret
mov
iret
fwait
xchg
call
mov
jge
fdivrs
adc
inc
cli
insb
sub
cmp
mov
sarl
or
push
dec
add
pop
push
lea
mov
cmp
sub
jno
dec
inc
test
scas
jno
into
fwait
cmp
inc
mov
iret
imul
adc
insw
sbb
movl
daa
sub
push
sbb
les
inc
rol
sar
adc
and
mov
sub
pop
ret
add
add
cmp
push
frstor
pop
sahf
lds
ret
hlt
mov
in
mov
inc
mov
imul
lods
rorl
in
fdivrl
jg
bound
and
jbe
out
mull
inc
push
jb
js
cs
mov
shll
mov
push
sbb
popa
ljmp
adcb
pushf
sub
cmp
ret
dec
repnz
fs
outsl
xchg
arpl
scas
fisubl
xor
fldln2
adc
pop
loope
xchg
pop
fcomps
data16
in
dec
jg
repz
xchg
sub
mov
and
lea
sub
jge
and
and
inc
je
lahf
sub
pop
pop
sub
sbb
jae
shll
inc
lock
jg
imul
or
jecxz
int3
insb
mov
out
dec
xor
pop
inc
addr16
dec
cmc
test
mov
or
cld
mov
pop
mov
push
arpl
les
jmp
das
test
xlat
ret
push
jb
orl
sar
xor
cmpsl
loop
jmp
ret
adc
inc
inc
outsb
mov
aaa
mov
cmpsl
cmp
jg
xchg
test
dec
mov
movsl
clc
cltd
inc
inc
add
std
jle
cmpsl
mov
add
cmp
inc
mov
sti
cmp
es
mov
jg
adc
xchg
inc
in
orl
cmc
push
ja
xor
push
xchg
loopne
jmp
xorl
and
cld
jae
xchg
movsb
inc
ret
jb
les
add
jno
lret
repnz
jg
in
jbe
jo
inc
into
inc
cld
test
arpl
test
pusha
add
arpl
push
pop
loope
mov
cmp
mov
pop
adcl
hlt
sti
popl
int3
negb
lahf
dec
andl
mov
dec
inc
lea
gs
inc
push
mov
mov
mov
cmpl
sbb
lock
movsl
stos
pusha
adc
movsl
mov
push
mov
shl
dec
adc
mov
push
xor
cmp
shl
in
and
lds
jo
stc
sti
test
popf
clc
and
into
adc
shlb
and
dec
jo
mov
imul
lret
rolw
mov
sbb
std
js
rorb
fbstp
xor
into
insb
fldenv
lods
push
pop
cwtl
add
inc
push
jne
shll
orl
or
push
push
xchg
mov
xor
inc
cmpxchg
pusha
pop
es
rol
icebp
sbb
push
add
and
frstor
jle
aad
dec
dec
dec
dec
in
fldcw
mov
cmpb
cmp
ret
inc
insl
pop
jle
xor
mov
movsb
adc
and
mov
and
mov
fwait
sub
cwtl
xchg
add
mov
stos
cmp
push
sub
lock
lods
jnp
cmp
jle
jns
mov
or
push
out
nop
leave
pop
fwait
sub
xchg
xor
imul
lods
fsub
sub
lahf
xor
movsb
int
ss
fdivs
and
into
movsb
repnz
gs
clc
push
cmc
push
xchg
jl,pn
stos
push
shrl
imul
dec
jg
jnp
imul
pop
push
sti
xchg
xchg
mov
addr16
pop
ret
popa
mov
pop
sbb
adc
stos
dec
mov
cmp
insl
je
sub
mov
push
shl
dec
int3
lods
sbb
cmc
out
mov
mov
ficompl
cmpb
xor
jl
dec
xchg
dec
in
lods
mov
adc
rcr
orb
sbb
fldl
adc
cmpsl
arpl
jno
ret
fcmovnu
mov
pusha
das
push
pusha
fisubrs
loope
xchg
fsubrl
rorb
push
mov
ja
push
stc
sub
pusha
cmpsl
ja
test
mov
xchg
adcl
leave
pop
test
shrb
jns
pushf
pop
cmp
push
dec
cmc
ds
mov
push
test
cld
das
cmpsl
push
jl
filds
and
pop
in
mov
lods
in
add
sbb
or
popa
jl
fwait
xchg
stc
dec
xchg
outsb
dec
sahf
lahf
fcmovnbe
xor
dec
fucompp
enter
fstl
adc
jp
and
or
pushf
outsb
popa
mov
sub
push
jae
insl
sbbl
sbb
or
rcrl
outsb
cmp
ljmp
push
out
dec
push
fldcw
xor
or
jne
add
push
negb
or
divl
mov
rorb
sarl
imul
cmp
insb
stc
ret
cmp
cmp
cmp
andb
daa
push
mov
pop
sahf
push
mov
in
mov
bound
lcall
push
inc
bound
test
add
in
mov
stos
test
cltd
scas
jmp
mov
mov
fadd
adc
inc
dec
inc
or
jbe
or
mov
sub
daa
nop
ret
int3
push
sbb
lock
test
jno
inc
cmp
jno
inc
mov
fists
xor
cs
sbb
sub
nop
out
iret
call
pop
pushf
loopne
inc
int3
popa
cmp
mov
repnz
lds
mov
aaa
add
fsubp
movsb
mov
call
adc
pop
repnz
inc
push
sub
mov
mov
int
mov
push
pop
jo
fbld
imul
popa
mov
add
rcll
scas
cmp
push
xchg
add
arpl
out
sub
and
rcll
and
out
fstpt
mov
rcrb
cld
pop
fbld
jl
and
imul
dec
fcoml
pop
jle
jge
inc
sbb
fwait
mov
movsl
shll
fistps
pop
in
pushf
jg
sbb
roll
push
popf
es
rep
adc
mov
data16
pop
jns
xor
add
daa
mov
xor
pusha
dec
and
std
add
test
sbb
cmpsb
xchg
jle
fstps
scas
sub
dec
and
inc
hlt
mov
stos
push
or
cmp
repnz
cmp
dec
or
xchg
mov
aaa
sbb
rolb
lods
mov
call
fucomip
in
inc
fisttps
int3
sub
inc
pop
push
add
test
push
xor
jp
sub
push
cmp
add
jge
test
push
adc
add
xchg
out
lret
addl
cwtl
nop
paddw
outsl
sbb
scas
ds
push
sub
outsb
test
push
hlt
lcall
addr16
xchg
mov
stos
cmp
scas
insb
subb
stos
orb
icebp
test
xlat
rcr
adc
in
cmp
cmp
out
add
or
ds
jnp
sub
add
das
cmp
push
pop
pop
fistps
jns
sbb
xchg
imul
fwait
out
and
fmul
std
lock
lods
outsb
xchg
scas
and
dec
sbb
sub
sbb
fsubs
mov
scas
hlt
sub
mov
xor
cs
out
daa
jnp
mov
pop
push
popf
insl
into
sbb
sbb
jmp
fcomp
add
inc
aad
enter
add
outsl
int
push
imul
outsb
inc
fs
jbe
sbb
movsb
mov
mov
push
fnstcw
pusha
mov
jmp
xchg
dec
int3
jbe
stc
sub
jne
lahf
insl
lods
in
sarl
dec
add
in
sub
aad
lock
mov
sbb
pop
sti
mov
jecxz
gs
xchg
fldl
dec
mov
cld
push
jge
setle
sarb
cvttps2pi
pop
push
pop
ret
mov
mov
mov
ss
mov
pusha
out
jp
outsl
rorl
dec
xchg
adcb
shl
mov
ja
test
sub
loopne
xor
enter
push
xchg
xchg
mov
sub
sbb
notb
push
xchg
outsb
pop
inc
jo
aad
divl
bound
loopne
jg
pushf
inc
mov
mov
dec
mov
pop
jmp
lret
dec
and
xor
out
xchg
xchg
out
pop
icebp
xchg
dec
cld
lock
xor
les
movsl
adcb
cwtl
mov
scas
mov
mov
enter
movsb
or
and
or
or
add
mov
and
adc
dec
clc
data16
xchg
clc
cmp
push
xchg
shrb
inc
sti
shrb
sbb
mov
lods
in
out
or
mov
mov
mov
les
xchg
clc
cmc
push
addr16
bound
mov
lods
jl
inc
aaa
and
pop
mov
push
cmpl
pop
movsb
ret
push
incl
subl
mov
push
ret
rclb
cli
xchg
jo
adc
aas
or
inc
xchg
incl
dec
pop
dec
push
pusha
std
js
xchg
lods
hlt
mov
mov
push
fisubrl
xorb
dec
aad
lcall
adc
sti
lds
aaa
leave
jno
imul
jno
gs
push
xor
pop
mov
cs
in
test
jae
icebp
and
mov
push
in
mov
faddl
test
mov
xchg
fdivl
pusha
aaa
sbb
add
xchg
dec
cli
add
lret
cmp
and
and
insb
adc
decl
iret
xchg
lcall
pop
rcll
cwtl
mov
or
ret
inc
sar
aam
pop
popa
arpl
add
sub
rorb
pop
dec
ret
mov
dec
add
jmp
aad
inc
push
cltd
jp
lahf
add
lea
pop
outsb
xchg
mov
in
sahf
int
cmp
push
mov
push
adc
adc
cmp
aaa
or
cmc
adc
lcall
jae
sbb
dec
cmpsl
insl
cmp
or
hlt
lcall
mov
dec
shrb
mov
sub
push
mov
cmp
lds
mov
lods
push
mov
fstps
add
push
bound
cmc
jg
scas
xor
ja
push
mov
fadd
repz
sub
xor
movsb
repnz
andb
xchg
jle
cmpsb
xchg
out
sbb
dec
or
push
xor
pusha
mov
mov
arpl
nop
ret
add
divl
cmpsl
shll
out
jae
arpl
pop
jmp
dec
rcpps
lret
jecxz
cmp
xchg
pop
imul
and
mov
rolb
insb
fwait
jmp
ss
cmpsl
bound
cmp
int3
add
in
stos
gs
cmp
mov
bound
ret
mov
or
inc
popa
pop
and
adc
fmull
cs
bnd
fisubs
aam
cwtl
js
pop
xor
cmp
insb
imul
sub
cld
dec
cmp
pushf
jnp
push
sbb
adc
cmp
xor
andl
and
test
out
or
mov
loope
xor
lret
add
mov
ljmp
mov
ficoml
loope
test
mov
loop
movsl
push
inc
fadds
dec
pop
sbb
popf
daa
xchg
xor
mov
in
sbb
fiaddl
mov
jo
xor
inc
dec
rorl
xor
out
xchg
sarb
jne
out
mov
mov
loop
and
stos
and
sbbl
xor
mov
mov
jmp
sbb
ficompl
pop
cmp
shll
pushf
mov
pop
pushf
pop
leave
mov
pop
mov
mov
popa
fstpl
or
push
je
dec
lock
push
push
mull
dec
lahf
faddp
movsb
mov
adc
ficoml
stos
aaa
leave
xor
dec
or
fmuls
or
cmpsl
sub
inc
xor
jb
jno
pop
fcoms
out
and
loop
pop
jno
sbb
nop
xchg
pop
dec
xchg
mov
jo
iret
in
mov
in
enter
push
lcall
pop
subl
pop
rcrb
int
xchg
js
pop
jge
pavgw
pop
push
mov
sub
aad
xchg
sbb
sbb
jp
add
test
jecxz
ret
mov
jb
jo
cli
xlat
out
cltd
nop
xor
mov
lods
mov
lret
dec
cmp
gs
xchg
mov
pop
and
cmc
jge
imul
sub
jge
cmp
adc
xchg
mov
loop
and
in
shl
pop
jle
loop
ds
cltd
and
lret
data16
mov
mov
dec
and
mov
inc
aad
mov
gs
std
xor
jo
sbb
cmp
pop
loopne
std
mov
je
jecxz
pop
push
fwait
mov
lds
addr16
loopne
jns
jmp
sub
xor
push
data16
mov
and
sub
cmp
popa
addr16
sub
cs
call
jns
push
ret
imul
cmp
sbb
sbb
inc
push
out
sub
movsb
fistl
pop
bnd
mov
cmp
push
push
popa
sahf
lahf
dec
mull
fdivrs
inc
add
fistpll
movsb
hlt
movsb
stc
ficompl
sub
inc
call
cmpsb
mov
cmp
cltd
or
mull
mov
jmp
arpl
fnstcw
dec
aam
sbb
fistpll
repz
jae
xchg
pop
mov
sbbb
fstps
fistps
or
scas
push
mov
add
test
movb
mov
scas
and
xchg
push
mov
in
push
push
pop
js
in
push
mov
push
stc
leave
jle
or
test
fidivs
xchg
jp
sarl
aaa
sub
mov
push
test
daa
jne
rcr
lret
pop
fildl
mov
xor
and
mov
roll
hlt
in
mov
sahf
mul
dec
cli
adc
das
dec
test
in
cli
and
xor
or
fidivrs
jno
sarl
or
movntps
leave
mov
hlt
sbb
pop
cmp
mov
adc
popf
xchg
add
pusha
arpl
outsl
jg
stc
or
jle
push
mov
inc
out
mov
inc
xor
in
jns
loop
adc
lahf
sbb
insl
jns
or
imull
sub
test
jo
cmp
jnp
sub
mov
shr
outsb
cld
pusha
stos
stos
xchg
lret
xchg
mov
pop
jo
adc
mov
dec
sub
mov
and
out
push
insl
dec
in
nop
shll
jnp
je
dec
fsts
xchg
or
xchg
mov
test
clc
rcrb
inc
sarl
rorb
das
popa
gs
repz
daa
add
push
in
loopne
fldt
jne
xor
lcall
fsubs
mov
sbb
sub
sub
add
xor
mov
adc
pop
aam
adc
adc
and
add
divb
test
jge
ret
stos
bound
test
pop
es
xchg
push
lret
cmpl
push
inc
addr16
das
push
cmpsb
xchg
xor
inc
mov
data16
mov
test
inc
dec
outsl
cs
mov
mov
jns
push
out
pop
jmp
les
sbb
mov
lahf
lock
call
mov
mov
mov
popa
xor
repnz
das
les
mov
idivb
aad
les
aas
pop
data16
pop
cmp
mov
cmpsb
or
pop
jl
or
call
fiaddl
daa
xchg
lahf
inc
xor
movsl
std
push
xchg
int3
cld
mov
mov
cltd
sbb
das
lcall
mov
insb
push
stc
add
mov
repz
mov
pop
cmc
jmpw
xor
sarb
in
cmpsl
cmp
and
movsb
lcall
mov
test
or
mov
xchg
xor
adc
mov
push
cwtl
hlt
sub
ds
cmpsb
jecxz
loopne
cs
fsubl
lods
mov
mov
push
jb
xchg
in
cmpsb
sbb
ds
stos
pop
xchg
push
or
pop
sbb
call
sbb
jns
push
jo
mov
pusha
aad
ret
mov
shll
pop
lcall
sarl
int3
jns
xchg
test
fisubs
daa
add
push
lods
jge
das
loopne
push
icebp
stc
fsts
outsb
mov
add
dec
cmp
neg
and
subl
xchg
sub
xchg
jne
mov
and
out
push
sub
int3
or
lret
jl
aas
lret
outsl
testl
jecxz
push
std
adc
cmpsl
fidivrl
xlat
stc
jle
sbb
ss
pop
bound
xor
and
pop
xchg
or
or
push
or
das
dec
pushf
inc
lds
dec
cli
aad
test
push
add
addr16
inc
test
pop
data16
jg
and
pop
cmpsl
call
push
popa
aas
push
mov
ds
fbld
add
test
dec
push
std
add
inc
mov
rorb
lea
add
cwtl
adc
mov
jle
sbb
and
sub
addb
loopne
idivl
cmp
enter
repnz
sub
mov
jae
dec
je
xchg
xchg
lcall
aad
in
sbb
into
xchg
mov
divl
xchg
pop
sub
loope
fldenv
xchg
shrl
xor
jb
push
push
xor
adc
jp
out
pop
and
sbb
int
xchg
pop
in
mov
dec
adc
xor
xor
pop
sbbb
jae
out
mov
sbb
sub
xchg
or
xor
cmp
out
cmp
movsb
shll
push
lret
lods
inc
push
jecxz
je
ds
xchg
pop
std
and
flds
ficoml
lods
test
sbb
jge
repz
das
bound
lret
div
xor
std
xlat
negl
lcall
and
ljmp
ret
icebp
loop
and
sbb
add
mov
mov
push
lock
add
xlat
sbb
xor
mov
movsl
and
int
or
test
in
mov
xchg
jb
and
iret
cmp
inc
mov
es
xchg
sub
mov
xchg
imul
repnz
mov
xchg
in
pop
jge
mov
stc
sub
add
popf
jg
stc
push
dec
sub
cmp
cmp
pusha
jno
lahf
sarl
mov
dec
sarb
mov
add
or
test
enter
or
sub
jl
or
shl
ds
push
subb
and
pop
push
mov
or
shll
test
jne
repz
jl
inc
inc
push
sub
mov
lahf
jge
and
filds
add
std
push
adc
cmp
mov
fisubrl
pushf
add
gs
icebp
or
inc
pop
dec
rcrb
and
lahf
mov
fadds
in
ret
lods
sti
dec
xchg
clc
neg
jne
cmc
and
jo
ss
inc
rcr
mov
add
push
mov
adc
mov
ret
movsl
fstl
enter
sbb
imul
mov
enter
xchg
jg
testl
cld
sbb
shr
push
dec
xchg
mov
mov
fs
xor
orb
add
rclb
mov
imul
sub
aas
mov
jne
iret
push
int3
lea
jb
outsb
cld
push
int3
in
sti
pop
movsb
adc
andb
cli
insl
movsb
xor
inc
fidivl
into
mov
gs
xchg
inc
inc
jg
into
imul
mov
inc
adc
sbb
or
jmp
add
popf
scas
scas
es
fcmovnb
sbb
inc
mov
ss
fwait
cmp
mov
xchg
loope
adc
out
push
aam
mov
mov
mov
pop
inc
xor
stc
pop
xchg
cld
insb
lahf
push
xlat
stos
push
mov
bound
mov
add
mov
lea
push
pushw
lahf
pop
cmpsb
jnp
adc
aas
xchg
and
cwtl
xchg
pop
pushf
xchg
loope
out
sub
sahf
gs
jns
xchg
xchg
jl
push
scas
adc
movsb
lock
aad
rolb
jecxz
jno
or
fmull
and
daa
and
sub
int
aas
mov
push
cltd
inc
lods
cmp
dec
ljmp
sti
fxch
repnz
push
mov
or
mov
xchg
data16
jno
xchg
in
ret
xchg
add
and
cmpsb
xor
dec
cmpsl
jecxz
je
lock
lds
nop
out
repz
sub
add
in
dec
xchg
xchg
push
adc
mov
loope
rolb
cmpsl
jo
stc
test
rcll
mov
push
nop
out
inc
arpl
cmp
orl
xchg
mov
xor
inc
test
or
jle
sub
in
push
outsb
paddw
push
fmuls
dec
mov
sbb
xor
aas
lea
mov
dec
dec
mov
mov
push
in
fsubr
imul
es
test
inc
adcl
xor
nop
mov
mov
imul
mov
cmp
lock
addr16
test
subb
cmp
pushf
or
inc
call
pop
les
mov
loop
clc
inc
int
fldenv
popa
imul
pop
cmp
sbb
adc
outsl
cmp
or
mov
sti
ret
loope
push
sub
int3
sbb
lods
in
jge
push
enter
ljmp
pop
lret
lahf
jmp
dec
rolb
xchg
rorl
movsl
loope
jge
push
mov
sbb
adc
push
mull
cmp
push
jl
icebp
rolb
jne
sub
pop
jne
movsb
rorb
inc
pcmpeqd
cmp
popf
mov
cmp
mov
or
add
mov
jp
mov
es
pop
mov
add
test
fists
pop
sub
popf
cwtl
pop
sub
ret
jb
dec
fsub
mov
ds
jecxz
out
test
cmc
inc
ret
jbe
aad
jo
pop
xor
addr16
jecxz
push
mov
imul
adc
mov
mov
in
scas
sbb
xor
sbb
mov
movsb
rep
pusha
sub
insb
aaa
sahf
les
jle
mov
inc
xor
sub
xchg
test
cwtl
xchg
sub
cwtl
sahf
orl
jp
lods
push
clc
insb
dec
into
int3
lock
xor
out
decl
dec
mov
cld
cmp
add
mov
add
dec
test
adc
ror
or
add
int3
cmp
repz
cmc
cmp
and
loope
ret
ficompl
dec
repz
mov
enter
fcomp
push
jp
ljmp
sub
in
and
mov
sbb
inc
jge
imul
mov
inc
mov
push
sbb
fmull
stc
outsl
aam
int3
mov
test
movl
adc
scas
pushf
rol
popa
fmuls
cmp
pop
ja
push
jb
pop
cmp
sbb
scas
xchg
andl
das
add
js
movsl
pop
loope
into
fists
sbb
and
mov
dec
sub
ret
sahf
inc
clc
mov
cli
leave
adc
push
and
lods
hlt
fwait
dec
and
adc
dec
sbb
fwait
inc
fsubrl
movsb
mov
jbe
and
push
gs
das
xchg
int
xor
repz
jno
mov
push
or
add
clc
fwait
jp
nop
add
fidivl
or
dec
test
shr
jmp
cmpsl
mov
pop
stc
out
fbld
inc
cmpsb
lods
adc
adc
popaw
fists
adc
add
sbb
out
popf
pop
sbb
or
pop
add
fsts
pop
push
movq
mov
dec
dec
xor
sub
scas
and
mov
mov
sbb
push
std
xor
sub
or
xchg
and
lods
js
mov
jnp
xchg
orl
jle
test
inc
lret
jb
push
dec
dec
out
cmp
or
pushf
pop
orl
stc
leave
out
mov
sub
icebp
xor
out
lret
out
xchg
sub
out
fsubl
lea
mov
ss
jge
jecxz
testb
inc
hlt
lret
bound
ja
or
test
arpl
ret
adc
rorb
jge
outsb
adc
out
and
dec
mov
xchg
push
pop
ljmp
testb
ficompl
sub
fxch
sbb
jg
jp
cs
rcrl
ret
inc
enter
sbb
sti
sarb
push
mov
icebp
int3
push
jle
fdivr
pop
push
jbe
jb
rolb
test
push
cmc
clc
fistl
rclb
xor
mov
mov
loope
int
mov
jg
rol
imul
xchg
test
lods
inc
pushf
les
xchg
mov
jo
cmpsl
ss
sbb
and
aam
ds
nop
cmpsl
pop
ret
scas
repz
icebp
lods
test
imul
aas
sub
jmp
push
pop
mov
sbb
adc
push
sahf
sub
lahf
mov
push
jle
or
inc
ret
lods
cwtl
jno
out
inc
jg
push
mov
rcrb
cmpsl
fmuls
and
cmp
xor
scas
xor
fs
dec
outsl
push
pusha
mov
push
jb
pop
cwtl
mov
mov
xchg
fdivrl
and
and
pop
loop
xchg
stc
jno
outsb
imul
out
hlt
pop
dec
sti
outsl
loop
xor
xchg
aaa
in
imul
jno
lret
outsb
push
dec
loopne
data16
lea
rorb
lahf
in
inc
out
shll
adc
gs
inc
call
push
jecxz
jle
fstpt
imul
das
and
sub
and
aaa
xor
jle
pop
cmp
mov
pop
insb
ds
jge
and
jnp
pusha
add
dec
inc
out
sbb
scas
inc
aaa
dec
mov
mov
inc
fistps
rolb
lahf
arpl
xchg
test
pusha
push
adcb
out
adc
lcall
fnstsw
or
fdivrl
lods
cltd
push
nop
nop
cmp
or
sbb
inc
lea
out
in
jnp
dec
xchg
bound
loopne
es
je
mov
enter
or
das
push
movsl
pop
mov
scas
sbb
loope
dec
add
into
push
xchg
adc
push
sub
loopne
pushf
lcall
mov
inc
cmc
or
loope
movsb
and
es
xor
outsb
jbe
xor
pop
xor
mov
fwait
cwtl
rcll
jb
sbb
das
pusha
dec
or
int3
int3
shrl
inc
jns
inc
out
adc
inc
xchg
mov
dec
push
cmp
rcr
stc
mov
inc
inc
sub
jmp
fimull
push
pop
fldt
pop
sub
jae,pn
repnz
ljmp
rcrb
enter
popf
fst
fwait
cmp
adc
mov
pop
fiadds
scas
ret
lahf
cmp
jb
gs
and
data16
ja
fimull
or
inc
inc
push
test
bound
sub
jecxz
dec
push
mov
sub
inc
xchg
sbb
sbb
mov
add
decl
test
cmpsl
loop
xor
popf
inc
sbb
add
mov
inc
movsl
pop
sbb
das
movsb
nop
bound
scas
scas
mov
adc
cmp
push
test
inc
cmp
push
fwait
into
push
cmp
arpl
es
adc
pop
aam
pop
into
out
lret
mov
add
in
jbe
or
adc
inc
mov
outsl
testb
roll
add
adc
push
xchg
jo
push
mov
jle
mov
inc
mov
jae
icebp
cs
lret
popa
xchg
mov
cmp
pop
sbbl
fmulp
fsubrp
xchg
fldl
adc
in
mov
push
jae
add
mov
pop
mov
rcr
cmp
pop
repz
sub
test
xchg
fstps
shlb
inc
xchg
fsubl
arpl
inc
stc
rolb
andb
push
ja
push
cmp
lock
in
mov
xor
cmpl
fs
shr
cld
adc
repnz
or
subb
sysexit
leave
fs
pop
add
inc
mov
sbb
mov
cmpsb
addl
lret
inc
movsl
clc
jge
pusha
test
outsb
adc
test
mov
xchg
xchg
adc
xchg
sbb
inc
xor
ficoml
cld
or
popf
cld
ljmp
daa
hlt
aas
adc
imul
adc
xor
sbb
in
js
add
in
pop
pcmpeqb
adc
push
cmc
or
and
fstpt
mov
sbb
out
jae
stc
stos
loop
inc
xchg
dec
push
and
ja
push
and
dec
and
lret
lret
cmp
popl
sbbb
mov
in
cmpsb
and
andb
out
decl
ficoml
cmc
push
in
xchg
pop
push
mov
dec
std
insb
fisttps
mov
arpl
cmp
mov
pop
sub
shlb
cmc
je
popa
xor
fsubl
jne
cmp
sub
in
hlt
mov
sbb
or
out
jne
adc
sbb
cwtl
jmp
cmp
mov
cld
mov
add
int
es
cmpsl
mov
pop
imul
mov
inc
adc
xchg
mov
in
cld
aas
fwait
test
cmp
mov
or
cmp
leave
testl
loopne
lret
jl
ret
pop
xchg
mov
adc
int
shl
in
sbb
rcll
push
cltd
test
js
cli
xor
iret
push
xchg
lock
es
test
movsl
jne
out
js
xor
fwait
sbb
mov
cmpsl
adcl
sub
cmc
in
inc
es
mov
mov
inc
mov
insb
mov
repz
in
cmp
jb
mov
arpl
jae
jns
and
push
pop
pop
sbb
loop
stos
dec
rcl
add
push
xlat
clc
aam
cmpsl
xlat
inc
mov
bound
mov
mov
jo
loopne
and
or
loope
jl,pn
nop
pusha
in
and
mov
fbld
cmp
or
sub
mov
lods
sbb
mov
push
movsb
sbb
mov
mov
scas
push
mov
add
ret
xor
lock
cmp
sub
clc
mov
jp
xor
aas
pusha
repz
nop
mov
xchg
jo
out
cltd
inc
dec
dec
in
xchg
jle
sti
imul
enter
cmp
outsb
pop
jl
out
insl
in
js
jmp
or
mov
or
adc
cmp
mov
push
push
hlt
xchg
or
push
les
out
mov
jnp
jnp
jb,pt
aaa
or
jecxz
lret
pop
mov
addr16
dec
add
stos
nop
inc
cmp
jb
pop
in
les
adc
gs
mov
or
push
fidivl
cmp
scas
mov
and
sahf
fists
in
shl
jae
push
lods
xor
fstps
cmp
mov
imul
je
cmp
in
in
mov
mov
mov
int
in
out
sbb
imul
sbb
or
int3
sti
mov
mov
mov
js
bound
pusha
in
movsb
je
xchg
imul
mov
sahf
in
push
sti
mov
push
mov
movb
push
add
sub
test
cmp
aas
nop
mov
lea
mov
outsb
mov
sub
jle
fnstenv
mov
pop
mov
lods
insl
sbbb
jbe
add
and
mov
and
or
mov
in
sub
test
lods
stc
cwtl
fxch
les
xchg
sbb
sarb
bound
enter
mov
test
mov
jmp
and
sarl
cmp
imul
push
dec
push
out
lret
dec
xchg
push
adc
mov
repnz
mov
sahf
std
add
arpl
mov
fcmovb
dec
cmp
sub
stos
insb
and
lcall
mov
mov
xor
mov
push
fdivrp
mov
adc
pop
mov
sub
in
and
sub
xchg
push
int
xor
movsb
pop
pop
xor
testb
push
mov
fisubl
sub
pop
nop
dec
cltd
pop
cmp
out
in
pop
iret
push
fs
hlt
push
and
or
in
adc
lcall
pop
lds
jns
push
jmp
pop
pop
arpl
ds
in
add
loopne
fidivs
and
xchg
and
inc
xchg
bound
int3
in
repnz
es
mov
sub
mov
js
or
push
lret
jbe
test
aas
in
push
repnz
xchg
xchg
je
push
jb
int3
jmp
push
repnz
fdivl
inc
cmp
xchg
xor
subl
adc
repnz
gs
out
ret
loopne
lret
or
dec
out
ret
divl
mov
sbb
fwait
jns
dec
xchg
dec
arpl
adc
sub
into
jno
and
loope
mov
rolb
std
and
les
and
mov
push
sub
jno
push
pusha
dec
add
jg
lret
cmp
cmc
or
inc
mov
pusha
ret
xor
sub
push
dec
jb
dec
dec
xchg
and
ficompl
adc
fxch
dec
rol
loopne
cltd
inc
and
lods
dec
ljmp
jbe
int3
inc
sti
or
jo
cltd
nop
ret
les
push
mov
mov
mov
lret
push
add
lds
mov
and
nop
pop
mov
cmp
das
cld
aaa
xor
jnp
rcl
xor
xchg
leave
adc
rorl
pop
pushf
and
and
hlt
ret
sub
push
pop
jle
cmp
inc
sbb
jl
cmpl
icebp
mov
js
pop
and
call
mov
sub
sti
lret
icebp
lods
das
add
push
mov
cwtl
add
into
xchg
jne
leave
mov
jno
sub
adc
lret
push
adc
dec
jns
outsb
fs
pop
ror
push
cwtl
mov
fidivrl
add
adc
mov
xchg
cmp
shll
mov
jecxz
adc
push
pop
cmpl
js
and
divl
scas
jne
push
dec
loopne
xchg
loope
mov
mov
test
sub
mov
add
sbb
jns
add
dec
std
and
adc
sbbl
push
pop
add
ljmp
sbb
rorb
ljmp
adc
andl
and
cmp
xchg
jmp
push
test
clc
aam
jl
pop
push
push
pop
inc
in
sub
stos
in
and
or
xchg
jae
cmp
lea
nop
mov
sbb
mov
rorb
jae
mov
mov
fidivrl
pushf
imul
fst
pusha
std
lea
jno
xorb
lcall
cmc
and
sub
xor
int
in
test
sti
imul
jno
in
cmc
xchg
frstor
jne
in
lret
xor
ret
adc
push
sbb
jmp
daa
pushf
push
loop
inc
aam
pop
ror
loope
inc
push
or
add
pavgw
loop
push
adc
or
mov
int3
xchg
mov
or
ja
dec
jns
pop
jg
jnp
cmc
out
vmwrite
orb
das
mov
cmpl
lock
mov
fdivl
pop
fwait
inc
leave
xor
arpl
adc
ss
and
xchg
cli
data16
adc
and
inc
mov
loop
jb
mov
dec
sbb
repnz
aam
pop
addr16
repnz
xor
lods
dec
sub
movsl
cmp
xor
adc
xchg
aas
sti
repnz
imul
ja
fld
flds
push
fsubl
sahf
and
rorl
in
lods
push
jnp
cmp
insb
fadd
mov
lcall
daa
mov
mov
sbbl
in
dec
inc
xor
add
jmp
dec
add
hlt
xchg
and
and
not
inc
jbe
fcom
or
mov
mov
repz
test
imul
dec
dec
sub
pop
ret
push
repz
ret
out
frstor
shlb
daa
pushf
and
outsl
fxch
mov
sahf
sub
push
icebp
xor
and
rorb
inc
jno
push
xor
xor
mov
push
ja
in
sarl
cmovne
fsubs
mov
fimull
xchg
inc
mov
das
addr16
jge
sub
iret
or
ret
pop
or
xor
jmp
jg
insl
pop
sub
ds
push
lcall
sbb
cmpsl
in
mov
add
jmp
ja
movsb
cmp
adc
iret
mov
mov
repz
mov
dec
mov
push
cli
stos
mov
xchg
jge
pushf
fwait
pop
decl
inc
dec
xor
add
sarb
lock
xchg
adc
fidivs
int3
les
ret
std
ljmp
fs
push
lret
arpl
dec
test
xchg
mov
cltd
mov
and
aam
or
mov
jg
dec
sbb
inc
pop
pop
jmp
xchg
mov
cld
aas
mov
dec
inc
jge
or
mov
push
cld
mov
and
in
icebp
shrb
mov
enter
xchg
inc
mov
cmpl
fwait
dec
popf
test
andl
int
mov
jl
inc
or
jl
xor
test
movsl
sub
push
orl
pop
mov
pop
inc
adc
xchg
dec
lods
cmp
adc
cltd
pop
testb
mov
lahf
adcl
fimull
adcl
in
rcrb
push
jmp
rcr
adc
imul
xor
push
xor
int3
and
insl
xchg
push
sbbl
mov
push
add
pop
ds
dec
sub
pusha
xor
or
cwtl
pop
in
jg
pop
pop
mov
push
lahf
addr16
push
cmp
adc
add
pop
dec
pop
inc
inc
dec
mov
iret
popa
mov
aam
scas
mov
arpl
ret
cmp
test
hlt
jns
mov
or
add
xor
xor
mov
fidivrl
cli
lods
movsl
xor
mov
int3
xchg
push
shlb
jg
fnsave
je
andl
enter
ret
adc
ret
cmpl
jbe
xchg
cmp
sub
cmp
pop
aad
cltd
js
hlt
jl
test
cmpsl
inc
sahf
push
mov
or
or
cmp
cmc
inc
imul
vrcpss
add
or
outsb
cmp
jle
push
xchg
push
clc
out
mov
lock
dec
shr
dec
mulb
xor
test
fs
push
mov
and
jae
aam
std
mov
popf
push
pop
movsl
xchg
add
mov
vxorps
pop
jo
adc
dec
movsl
insb
mulb
xor
scas
inc
mov
push
mov
pop
mov
dec
add
adc
or
repz
adc
mov
outsb
push
dec
push
push
clc
push
mov
mov
lock
inc
or
push
mov
ror
xchg
adc
mov
jge
repnz
mov
mov
mov
lock
sbb
jmp
fs
jnp
sbb
xor
movsl
bound
flds
jbe
ror
and
rclb
daa
inc
mov
and
xchg
xor
mov
push
cmp
mov
hlt
mov
aam
inc
pop
loop
in
mov
je
mov
lcall
pop
xchg
pop
cmp
xor
rcrl
movsb
scas
cmp
xor
aas
std
inc
adc
out
add
cmpl
rcrl
inc
sbb
cwtl
push
and
jnp
mov
mov
mov
es
mov
std
decl
inc
pop
mov
xchg
mov
addr16
pop
or
lods
add
mov
dec
mov
push
lret
aaa
hlt
popf
pusha
or
test
test
lcall
jb
add
out
ds
push
adc
pop
icebp
jmp
mov
dec
jg
dec
leave
mov
push
ret
es
sub
jno
rolb
cmp
jmp
mov
push
cmp
jg
int
sub
ljmp
jbe
jmp
test
inc
adc
mov
xor
jne
inc
pop
scas
rclb
in
int3
rcll
jmp
pop
imul
add
movsl
xchg
mov
imul
or
fidivl
sbb
aas
xor
mov
sbb
sbb
or
jmp
orl
xor
out
js
filds
les
pop
cmc
mov
cmp
dec
rcrl
cld
jns
mov
push
imul
cmp
pop
ret
cmpsl
subl
fcoml
mov
cmpsb
in
sbbl
or
les
dec
push
loopne
imul
aam
test
add
std
in
xchg
sti
mov
jg
push
inc
ss
xor
mov
mov
cltd
loope
rcrb
add
stos
add
imul
bound
mov
jg
fiaddl
mov
mov
jp
jns
xchg
mov
movb
xor
xor
sbb
xchg
jne
inc
jne
sbbb
xchg
lods
mov
mov
inc
push
mov
push
push
or
fisttpll
aad
cmc
insb
ret
push
push
loope
push
and
mov
sub
xchg
or
int3
test
adc
shrl
jae
loopne
incb
lds
mov
test
sub
bound
dec
fimull
adc
mov
inc
inc
pop
rcr
shll
aaa
mov
into
in
fwait
adc
jp
and
or
arpl
inc
xchg
std
mov
outsl
jns
xor
cmp
add
or
and
push
aad
inc
cmp
loop
cld
stos
push
mov
xor
mov
fsubrs
or
inc
sbb
in
dec
js
imul
hlt
lret
stc
add
mov
in
repz
push
mov
leave
mov
clc
add
add
in
cmc
iret
fwait
enter
mov
or
mov
sbb
xchg
fidivrs
push
nop
call
jae
adc
cmpsl
dec
xchg
adc
daa
js
divb
mov
addb
test
out
shl
mov
fwait
shll
adc
or
push
fcmovnu
mov
into
xor
push
push
push
xor
arpl
js
shlb
xor
cli
loopne
adc
enter
jo
and
cli
into
fists
repnz
decb
push
pushl
imul
add
fwait
adc
mov
repz
arpl
or
push
rclb
dec
jmp
xchg
mov
or
sub
leave
and
test
lret
xchg
adc
mov
xchg
mov
xor
jp
add
jb
les
mov
or
fcompl
cmp
pop
inc
and
inc
sbb
cmpsb
movsb
xchg
scas
and
mov
and
pop
bnd
outsb
pop
and
xor
mov
lahf
cmpsl
sub
ret
sahf
lret
dec
sti
popf
push
rcr
inc
mov
std
add
xchg
lds
or
xchg
jb
or
pusha
std
mov
sub
int
and
mov
push
and
repz
out
stos
ret
sbb
inc
and
pop
imul
inc
sub
mov
cmp
mov
push
sbb
cmp
inc
pop
ret
jns
cmpb
pushf
aas
lret
dec
iret
jo
jbe
mov
rcl
dec
js
ljmp
pop
push
pushf
pop
aad
mov
xchg
out
jns
xchg
mov
push
pop
xchg
push
test
mov
leave
ret
out
outsl
mov
mov
ret
arpl
xor
icebp
subb
les
sub
xchg
add
mov
push
dec
fs
mov
mov
lret
xor
in
or
jb
cmp
pushf
inc
xchg
sub
icebp
mov
or
xor
sti
mov
xor
negl
lds
subb
jno
mov
gs
mov
scas
int
sub
fsts
or
xchg
call
arpl
xchg
dec
insb
lds
push
mov
test
pusha
mov
mov
xlat
mov
cmp
iret
jb
gs
rcrb
mov
mov
jns
mov
inc
test
push
lret
inc
add
inc
clc
sub
and
xchg
xor
dec
sub
mov
jno
push
gs
push
ficomps
dec
je
lret
mov
call
mov
in
inc
adc
inc
adc
jno
sti
jb
lcall
ja
mov
mov
jge
divl
popl
dec
jnp
stos
jmp
ret
push
xlat
push
repz
push
mov
pop
shrd
inc
xor
mov
push
xchg
fwait
lcall
ficoms
jno
out
rclb
push
out
pop
mov
outsl
outsb
sub
and
cltd
mov
sti
or
in
push
xor
mov
jge
add
je
xor
xlat
pop
add
cld
xchg
sarb
cmpsl
fstps
fsubrl
and
prefetch
or
into
push
icebp
roll
inc
stos
addr16
push
aas
rclb
sub
and
sub
fcmovu
push
scas
cmp
sbb
jp
fidivs
xlat
adc
testl
push
sub
in
outsb
ljmp
bound
mov
cmp
lods
es
adc
mov
cltd
sub
in
sbb
sbb
mov
and
daa
mov
dec
movsl
sahf
mov
jnp
cli
int
rcr
pop
cli
cwtl
fcmovnbe
pop
repnz
dec
sub
cmp
inc
in
mov
dec
cmp
enter
sub
cli
aas
lods
out
mov
jge
lds
jno
inc
inc
dec
mov
xchg
xor
icebp
push
dec
push
or
mov
sub
stos
jns
adc
fidivrs
cwtl
insb
imul
daa
xchg
mov
loopne
cld
imul
mov
out
inc
xchg
push
sub
mov
push
adc
dec
sub
pop
xchg
inc
inc
or
imul
lock
mov
sbb
sub
inc
shlb
jg
sbb
loop
fiaddl
mov
or
les
xor
add
outsl
das
repnz
cmp
imul
scas
and
mov
dec
ret
inc
dec
fs
lea
pop
jmp
inc
mov
sbb
clc
mov
scas
fs
cmp
pop
xchg
xchg
aas
cmc
andps
fcoms
jbe
stos
pushf
xchg
shlb
jbe
mov
ss
out
out
out
dec
mov
je
push
ret
popl
inc
test
loop
outsb
inc
iret
jnp
xchg
cmp
lods
add
mov
smsw
add
xchg
sub
lock
mov
jno
dec
cmc
in
adc
mov
inc
leave
repnz
sub
mov
sub
adc
or
adcb
inc
in
out
or
fxtract
lods
dec
pop
shrl
int3
sbb
mov
sbb
add
jns
fsts
xor
pop
mov
loopne
mov
jp
call
sbb
shlb
jle
add
cmc
fstpt
push
cwtl
lcall
arpl
xorb
mov
dec
mov
outsb
inc
pop
inc
mov
jo
sahf
scas
lds
bound
mov
in
mov
or
stos
mov
jne,pn
mov
clc
scas
lods
mov
sbb
or
imul
jo
loope
fistps
lcall
inc
and
adc
loop
push
cmpsl
jne
call
mov
dec
cmp
push
ss
cli
outsl
jmp
add
push
cld
add
pop
inc
test
loope
out
ret
mov
ss
ljmp
clc
sti
and
add
fisttps
pop
loopne
mov
xchg
xchg
aam
insb
fnop
cmp
mov
mov
pusha
lods
add
push
mov
popf
jmp
xor
push
out
jl
ror
or
cmpsl
outsb
lea
bound
test
push
adc
pop
mov
adc
lock
mov
sbb
sbb
mov
or
push
push
xor
pop
sub
outsb
sub
push
pop
cmc
cmp
pop
ds
mov
dec
sbb
fs
jge
gs
cs
and
repnz
push
inc
jge
jnp
add
fdivs
mulb
sub
cmp
fisttpl
ja
push
xchg
and
daa
mov
jo
push
push
dec
mov
dec
inc
aad
arpl
data16
or
push
jae
xor
adc
rcr
or
xchg
sbb
jmp
xchg
scas
or
mov
ret
xchg
adc
xchg
pop
aaa
pop
cs
repnz
sub
test
jge
in
shll
mov
into
jb
adc
ljmp
xchg
dec
ds
addl
jne
ds
out
inc
cltd
in
dec
outsb
push
jle
divl
jno
orb
push
sbb
jge
push
movsb
call
xor
in
jno
mov
cs
das
leave
les
jl
into
nop
arpl
xchg
add
push
jge
repz
ss
pop
dec
adc
scas
lods
ficomps
mov
mov
jne
mov
dec
mov
jp
in
xchg
jmp
mov
mov
jo
out
sub
stos
jg
stos
inc
and
dec
xchg
mov
pop
push
loop
or
push
pop
cmc
adc
hlt
das
out
or
sub
pop
div
je
adc
je
cmp
das
mov
call
orb
lock
fidivl
test
repz
arpl
xchg
les
movsl
int3
push
inc
fistl
mov
in
pop
adc
cld
pop
push
lret
pop
cwtl
mov
scas
loope
and
push
lea
mov
mov
dec
dec
lret
cmpb
fidivs
push
dec
adc
mov
cli
mov
pop
xchg
pop
imul
arpl
adc
aaa
cli
daa
clc
cltd
in
out
jns
xlat
jno
fwait
aaa
inc
fucomp
test
dec
call
enter
inc
or
hlt
out
rol
loopne
push
pop
in
lret
lahf
jge,pt
and
enter
loop
jg
outsb
outsb
mov
aad
pop
call
pop
fsubl
out
cmp
sbb
adc
xchg
push
push
sti
mov
xor
enter
ds
adc
sbb
out
popf
sbb
call
out
adc
sbb
jg
push
jg
dec
xchg
xor
cmp
mov
cmc
shlb
insl
addb
push
lahf
lahf
pminub
lock
js
or
pushf
cmp
sbb
rcrl
bts
js
push
xor
ljmp
out
aaa
daa
or
jmp
cmp
jo
cmp
out
push
mov
or
and
add
jecxz
ja
es
mov
push
jb
or
jo
cmpsb
gs
jb
cwtl
pusha
ss
paddsw
pop
push
out
cmp
jb
cltd
mov
ret
int
mov
mov
imul
mov
push
iret
sub
cs
xorl
and
mov
ds
stos
mov
subl
and
adc
insl
arpl
xor
repz
int
int3
cmp
cmp
sub
ja,pt
loope
or
mov
aaa
psubusb
iret
add
pushf
cwtl
jl
ret
push
test
mov
movsb
dec
data16
or
stc
jns
xor
mov
pop
fisttps
fmuls
push
adc
mov
or
outsl
lret
mov
xchg
leave
int3
in
adc
adc
es
cmp
enter
std
ret
push
jmp
or
jns
pop
adcb
inc
shll
cltd
cli
nop
xorl
adc
xchg
push
hlt
cmc
xor
pop
xor
mov
mov
js
out
pop
mov
mov
daa
sbbl
gs
lea
fldl
dec
inc
or
push
cltd
adc
cwtl
mov
rcrb
fs
and
pop
adc
jo
adc
inc
loopne
jecxz
push
or
repz
cmp
outsb
insl
cld
mov
or
jo
mov
mov
xchg
ljmp
push
addr16
add
in
mov
xor
test
xor
push
outsl
xchg
iret
hlt
icebp
sbb
cmp
jle
ret
repz
adc
aas
lds
into
mov
add
push
vpaddd
xchg
xchg
daa
movsb
loop
inc
in
lret
mov
add
test
mov
into
pop
sub
xchg
adc
shlb
push
fs
into
xchg
dec
nop
cmp
cmp
lock
lahf
push
sub
into
mov
shl
jecxz
loopne
jecxz
clc
jmp
pop
dec
or
pop
shr
mov
mov
pop
aas
xchg
mov
orl
int3
repnz
pop
in
aam
fstpl
jbe
stos
xchg
nop
lods
out
mov
mulb
cwtl
cmp
popf
fcmove
rcl
mov
mov
ret
jp
mov
out
std
fdivs
test
pushf
mov
call
gs
dec
arpl
pop
adc
sbb
jmp
std
fidivl
pop
push
sub
andb
into
jecxz
movb
jns
out
outsb
xor
jle
mov
push
mov
in
cmp
lea
out
or
push
aaa
mov
hlt
add
test
mov
dec
stc
ljmp
negl
insb
filds
loopne
cmp
sub
xchg
xchg
add
mov
add
lock
mov
movsl
dec
std
aam
jge,pn
xor
movsl
jae
loope
in
fstl
fucom
sarl
xchg
add
sbb
pop
mov
fldcw
add
mov
mov
mov
adc
jmp
div
popf
jb
sub
or
popf
fldenv
xchg
pop
insb
lods
push
mov
sbb
pop
jge
pop
sar
or
fsubs
mov
cli
test
int3
mov
shlb
inc
mov
jns
repz
and
xlat
ss
sbb
fistps
sub
jg
bound
dec
aam
lods
pop
push
mov
sub
cmpsb
cwtl
mov
lcall
mov
push
imul
daa
adc
cld
or
adc
and
jecxz
rcll
shlb
cs
sahf
loopne
or
out
push
dec
pop
outsl
xchg
popl
add
mov
cmp
pop
inc
mov
daa
jb
sub
stc
inc
push
aas
scas
inc
lods
lds
pop
das
fstl
in
sbb
inc
pop
fisttpl
ja
push
cld
pop
sub
dec
xlat
cmp
jns
out
mov
jbe
stos
dec
in
sbb
inc
jbe
adc
or
pushf
lods
rolb
adc
dec
hlt
pop
xor
rorl
xor
fwait
stos
sbb
mov
mov
sahf
pop
mov
fcomi
inc
rclb
sub
and
sahf
flds
cs
inc
jae
cs
mov
add
and
sbb
mov
add
aas
lods
je
jl
jl
mov
cmp
es
jae
xchg
jl
sub
arpl
jne
fcompl
test
lahf
notb
cmp
or
notl
lea
nop
hlt
jne
inc
fld
leave
int
pusha
adc
adc
mov
test
xor
push
aad
repnz
jmp
mov
jg
ficompl
int3
jmp
cmpsl
push
into
bound
jno
push
ret
sbb
mov
lcall
sub
mov
fcompl
or
mov
loopne
test
xchg
outsb
ja
bound
mov
fimull
push
jp
call
push
add
xor
and
inc
mov
fsub
mov
xchg
inc
into
test
aam
es
add
xchg
cld
and
hlt
stos
sbb
ret
pop
or
test
jno
or
lret
sub
cmp
mov
pop
xchg
ja
insl
lods
ja
es
mov
pop
loope
xchg
std
sub
and
outsb
pop
dec
test
cmp
popa
pop
jae
inc
xor
xor
xchg
outsl
jecxz
dec
xor
sbb
lahf
mov
scas
fidivl
nop
dec
mov
add
jnp
sub
lods
into
aaa
popf
mov
fcoms
mov
insb
pop
stos
adc
pop
xchg
or
ljmp
repz
adc
jb
std
pushf
daa
mov
mov
jmp
sti
inc
mov
mov
cmp
iret
pusha
pminsw
movsb
mov
mov
sti
mov
push
fadd
mov
cltd
add
pop
dec
clc
push
pop
clc
sbb
ja
jnp
dec
shll
cmp
sbb
add
daa
and
movsl
add
iret
jmp
sub
lods
in
cmp
push
hlt
mov
lods
imul
add
cmp
das
inc
fwait
cltd
test
das
mov
sub
add
std
inc
or
xlat
mov
push
jns
sahf
out
scas
pushf
jnp
sub
or
les
push
mov
into
cmp
adcb
pop
jge
sub
push
lods
sub
adcb
insl
scas
jle
adc
sbb
sbb
push
and
imul
popa
cmpsl
insl
call
xor
xchg
testl
inc
sti
out
fimuls
stc
sbb
clc
stc
arpl
push
fs
mov
or
test
mov
xorb
mov
adc
inc
sbb
xchg
or
stc
orb
fwait
add
pop
sbb
notb
repnz
adc
orb
insl
insb
jnp
mov
ss
push
popf
xchg
les
out
and
insl
stos
push
or
call
bound
or
test
xchg
adc
cmpsb
mov
cld
arpl
pusha
dec
sti
gs
push
adc
loope
adc
rclb
imul
mov
xor
and
sbb
dec
xchg
mov
sahf
fdivrl
sbb
gs
out
iret
jb
aad
lret
stos
ja
cmc
out
loopne
shl
bound
sub
sar
jns
sub
inc
jne
aas
aad
pop
and
inc
ffreep
sbb
jne
bound
into
xor
inc
mov
arpl
xchg
das
rcr
jmp
in
std
mov
and
mov
cmp
clc
nop
cmp
jle
mov
mov
imul
mov
push
inc
mov
fiadds
aam
mov
scas
insl
nop
add
sti
in
xchg
ds
insl
jge
shrb
jge
pop
cli
fdivrs
xchg
nop
mov
jns
mov
mov
sub
adc
mov
lock
movsb
jmp
scas
adcl
dec
jnp
into
mov
jnp
xchg
enter
sbb
pop
sbb
mov
jno
pushf
testb
cmpsl
insl
call
scas
adc
jge
jns
ror
je
and
xorb
xchg
in
adc
xor
ret
je
adc
push
xchg
xor
mov
sub
and
sti
jl
xor
sbb
lds
sub
ret
jo
jmp
out
or
sbb
sbb
mov
mov
sahf
sub
xor
push
or
test
jae
xchg
jl
in
sahf
cmc
add
jne
add
orb
jp
dec
cmp
cld
lock
movsl
mov
xor
call
call
ljmp
mov
fstpl
cli
test
jg,pt
orb
pop
push
mov
in
xchg
cmpb
or
enter
gs
or
sbb
xor
add
pop
cmc
out
addr16
stc
mov
dec
inc
bnd
add
sub
shll
addl
adc
push
iret
jg
les
mov
xchg
in
inc
mov
pop
mov
das
out
mov
pop
mov
xor
sbb
aaa
shrb
xchg
cmp
or
movsb
or
std
push
mov
mov
jmp
rolb
loope
add
data16
xchg
jl
into
mov
outsl
incl
fucomi
arpl
push
insb
out
pushf
add
out
cwtl
or
rorl
pop
mov
pop
sbb
jecxz
jecxz
add
add
inc
mov
and
inc
stos
pushf
xor
shll
iret
dec
jl
add
cmc
dec
cmc
shll
comiss
movsb
sbb
cmp
mov
js
cmp
adc
xor
or
fwait
into
fnstsw
vmulpd
and
jnp
out
pop
inc
push
out
cltd
adc
add
int3
and
insb
sbb
lods
jl
push
je
imul
push
push
pop
push
cltd
push
lret
rcll
add
cmp
out
std
rolb
add
int
dec
insl
sub
shlb
cmp
aad
jno
mov
or
pop
movsb
cli
mov
ret
add
sub
in
cli
push
in
jne
ds
or
dec
mov
lret
ja
gs
or
hlt
push
int3
and
cvtps2pi
movsl
cli
adc
aam
scas
les
pop
ss
das
pop
sub
xor
add
popf
ret
sub
xchg
loopne
sahf
adc
nop
addr16
cmp
cs
and
dec
scas
sub
sbb
xchg
add
lds
lock
push
or
out
adc
fmuls
cmp
jns
pop
mov
fwait
xor
push
scas
pop
jb
mov
jo
icebp
sub
mov
cmpsl
mov
mov
movsl
mov
mov
xor
into
inc
cld
sbb
js
xor
jo
fildll
rcll
push
aad
xor
mov
fmul
fbstp
mov
or
bound
push
cs
add
jo
cli
rcll
push
and
and
mov
mov
push
outsb
in
scas
adc
xor
daa
adc
cmp
cld
pushf
xchg
cmp
sahf
fimull
cmpsl
cmp
sar
pop
nop
lods
jle
gs
adc
sbb
insb
cmp
outsl
scas
stc
or
push
inc
jle
sbb
xor
push
adc
cmp
add
pusha
imul
mov
jl
add
mov
push
rcll
push
xor
mov
adc
sbb
push
push
push
fisttpll
xor
push
je
lret
add
mov
pop
or
cmpsl
dec
arpl
test
leave
rcll
push
adc
jge
aaa
or
call
mov
sbb
and
add
insl
or
push
dec
aad
and
ret
shlb
xchg
stc
sbb
adc
clc
pop
mov
cltd
leave
or
or
mov
scas
inc
mov
dec
rclb
stos
ljmp
sub
sbb
loope
inc
dec
push
test
lock
loopne
mov
outsb
mov
inc
gs
repz
es
mov
subl
sbbl
dec
ja
gs
inc
sub
xor
iret
rclb
or
out
leave
test
arpl
cmp
sbb
fbstp
inc
mov
outsb
loope
dec
jl
xor
enter
cwtl
sahf
out
and
repz
dec
stos
jbe
mov
loop
loop
xchg
leave
inc
mov
push
test
jg
lret
rorb
dec
clc
loop
sub
sub
pop
jecxz
jno
xor
mov
mov
pop
adc
js
cmp
push
fs
out
mov
insl
loope
filds
ja
or
pusha
mov
xchg
or
or
cmpb
sub
push
cli
cmp
ret
pop
cli
arpl
add
and
mov
inc
cmpsl
sbb
push
subb
xchg
push
mov
mov
les
cmp
aas
clc
push
mov
mov
mov
cmpsl
push
and
mov
jnp
jg
icebp
es
int
outsl
add
cmp
je
out
and
xor
ret
shrl
cmp
pop
push
xor
movsl
push
mov
das
mov
xchg
or
pop
and
xorl
out
int3
ret
fcomi
fwait
jne
push
push
arpl
loop
add
incl
outsb
es
mov
shrb
daa
mov
sub
jmp
insb
mov
xchg
jge
inc
xchg
pop
call
add
push
sub
pop
lock
aas
pop
rclb
idivb
jl
adc
nop
imul
lret
lret
mov
test
shlb
xchg
insb
inc
push
add
mov
lcall
dec
mov
ljmp
lret
popa
mov
sub
sbb
cmc
pop
jb
mov
lods
sti
push
jbe
or
pop
jg
sub
cwtl
icebp
int3
shufps
and
test
mov
or
outsb
inc
mov
xor
and
push
repnz
xchg
cld
lods
notl
ss
fstl
sub
cld
call
xor
ja
call
sub
sub
mov
adcb
in
xchg
stc
jecxz
fsubr
sbb
out
fwait
add
mov
adc
ds
sti
in
ss
popl
and
cli
fstps
inc
sbb
mov
xchg
iret
push
roll
cs
pop
js
xor
sub
and
or
xor
es
or
gs
sbb
test
iret
add
add
xor
mov
adc
jo
jmp
lods
push
in
xor
aaa
push
ss
sub
mov
add
popf
sbb
xor
cs
sti
xchg
sub
xor
inc
push
fimuls
ret
fwait
add
cltd
mov
mov
cmp
dec
call
push
adc
movsb
mov
mov
jg
insb
stos
icebp
jge
call
inc
jo
xor
xchg
das
jno
add
fidivs
push
push
push
mov
mov
shlb
movsb
out
cmp
test
xor
jmp
int
int
adc
sub
add
lds
ja
imul
or
clc
dec
out
test
or
push
inc
jb
dec
das
mov
jbe
jb
sbb
push
aad
pop
or
xor
fsqrt
vandnps
push
int3
cmpsb
or
rolb
mov
cmpl
or
jo
and
fnsave
test
jno
and
jns
jmp
push
or
mov
popa
xor
sub
cmpsl
ja
push
adc
popa
fmuls
out
mov
push
bound
movsl
jns
sub
xchg
sbb
add
adc
inc
adc
inc
pop
mov
cltd
enter
faddp
decb
pop
sbbl
es
push
fs
sahf
popa
jge
xchg
ja
inc
push
stos
sub
adc
pop
daa
mov
pop
add
and
test
pop
adc
pop
sub
packuswb
pop
sub
fnstenv
push
cmpsb
dec
in
xorl
mov
cs
outsl
sbb
mov
xchg
call
shrb
test
das
sarb
push
adc
lods
icebp
je
mov
aad
push
pop
inc
add
std
je
adc
pusha
imul
jmp
mov
outsl
pop
lahf
enter
xchg
aaa
sbb
into
mov
ljmp
jnp
pushf
lahf
adc
sub
loop
sbb
imul
sahf
mov
jge
push
pop
dec
pop
dec
incl
xlat
fiaddl
cli
out
insl
cmp
and
js
leave
sub
sbb
or
add
inc
rcrl
dec
xor
pop
add
jecxz
arpl
mov
or
push
imul
push
adc
test
mov
mov
stos
fdivrs
xor
cmp
lret
pop
or
dec
dec
nop
lret
mov
lea
dec
pop
cmp
xchg
inc
sti
divb
daa
int3
and
jns
push
scas
mov
cmc
test
cltd
dec
xchg
add
xor
aad
mov
sbb
fwait
lahf
out
sub
enter
ja
lea
imul
ss
pushf
sub
adc
or
std
mov
push
inc
mov
push
repz
cli
xchg
sbb
sbb
sbb
pushf
push
adc
pop
and
test
enter
lret
loopne
xchg
insb
cmp
pop
mov
stc
add
shlb
insl
cwtl
lahf
sub
or
stc
mov
and
and
dec
insb
mov
cmpl
fwait
lock
or
xchg
xor
or
pop
mov
sbb
dec
fldcw
in
pop
fs
xor
imul
push
adc
mov
fwait
stos
mov
fs
ljmp
jl
and
mov
sarb
test
aam
sub
pop
aam
ljmp
or
test
dec
out
enter
or
out
or
mov
adc
pop
xchg
loop
xchg
cltd
stc
and
inc
jmp
stc
les
lret
addr16
xor
mov
sub
xor
mov
inc
cmp
rorl
aad
mov
insl
insb
loopne
imul
xor
sahf
add
test
in
jns
or
or
xchg
add
daa
lret
cmpb
dec
mov
jbe
adc
imul
jmp
andl
xchg
jae
and
and
ret
jmp
rcl
sub
pop
data16
dec
and
jge
movsl
inc
lea
jae
rcrl
jmp
sti
pusha
cmpb
sub
jb
adc
sbb
push
and
push
ljmp
inc
fisubl
pop
test
rorb
cld
std
xlat
jno
push
cmpsb
scas
xchg
inc
xchg
pop
cmp
sti
lods
adc
or
jns
ffreep
or
mov
loop
fwait
jo
loop
adc
hlt
iret
and
and
rcrb
push
sti
jns
dec
push
ljmp
es
lods
mov
lods
pushf
test
repz
popf
dec
cmp
js
inc
insl
mov
out
es
or
clc
mov
jp
movsb
ret
fidivs
das
push
jp
jne
and
jl
cmp
frstor
sub
in
jg
in
mov
cli
pop
aaa
adc
fldenv
jmp
mov
std
hlt
push
imul
dec
cmpsl
or
popa
mov
stc
mov
movsb
loopne
push
je
das
lcall
and
jne
cmp
outsb
push
fcmovnu
cmpl
mov
lret
mov
xchg
mov
out
adc
add
cs
dec
imul
lret
sbb
add
incb
fwait
jo
sub
cltd
jle
lds
cmpsb
cli
pusha
xchg
adc
lock
movsb
add
cmp
and
xchg
mov
mov
push
js
loopne
jl
jo
cmp
jp
outsl
mov
imul
jge
jnp
dec
mov
jne
pop
sub
push
loop
loopne
hlt
dec
sub
mov
loopne
cs
xchg
iret
andb
jl
and
xor
mov
pop
test
push
pop
inc
shlb
and
push
jne
sarl
mov
jnp
jns
xor
lock
push
jne
sbb
inc
mov
je
sub
test
mov
imul
loopne
mov
adc
vdivps
stos
repz
popl
mov
mov
es
mov
vandps
inc
loop
pop
sbb
xchg
lds
jmp
hlt
cld
fistpl
dec
sbb
push
fsubr
mov
inc
pushf
mov
loop
imul
ljmp
sbb
loop
jl
or
xor
or
rcrb
popf
xchg
subl
and
mov
scas
xchg
mov
mov
enter
sub
jg
inc
xor
xor
pop
sbb
adc
shlb
lret
mov
or
ds
sbb
sbb
cmp
add
mov
mov
cmpsb
xchg
pop
sbb
callw
fstpl
std
sbb
push
loopne
and
cmp
hlt
xchg
bound
xchg
or
pop
mov
push
les
xor
imul
inc
repnz
xor
or
adc
dec
ret
sub
jp
inc
pop
cmc
pop
aam
insl
clc
jb
inc
insb
ja
and
cmpsb
mov
bound
jmp
ficoms
fisubl
sbb
sub
addr16
inc
bound
mov
pop
inc
out
mov
mov
inc
dec
scas
sbb
mov
xorb
cli
scas
ds
xor
jns
call
lret
punpcklbw
mov
push
pop
fs
into
bound
xchg
cmpsb
pusha
mov
dec
or
xchg
and
push
xchg
sbb
cmc
imulb
mov
xchg
stos
hlt
into
mov
mov
push
in
out
cmp
pop
arpl
mov
iret
cmp
xchg
inc
push
dec
xchg
push
lods
push
sbb
push
rcl
and
adc
cmc
pushf
loop
jns
cli
int3
sbb
call
es
sahf
mov
jmp
loope
push
out
or
xchg
and
insb
outsb
pop
pop
add
loope
push
test
lods
dec
sub
and
ss
add
test
push
sub
xchg
in
mov
jecxz
xchg
lds
cmp
xor
jb
repnz
es
fistl
mov
pop
push
add
data16
in
push
jmp
mov
insb
sub
fimull
fwait
out
sbb
pop
sbb
add
mov
sbb
or
ret
or
mov
fmull
fiaddl
mov
cmp
out
roll
jae
frstpm(287
outsb
mov
sub
xchg
cs
and
mov
jl
xor
lret
inc
inc
add
sub
jle
pop
cwtl
enter
clc
push
jno
fmull
inc
and
shr
les
into
jmp
xchg
sbb
dec
mov
ret
ffreep
sbb
mov
mov
dec
fnsave
ficomps
imul
dec
loopne
ds
ja
fcompl
xor
mov
jl
adc
push
push
mov
fisttpll
inc
inc
mov
jb
daa
hlt
sbb
pop
imul
ja
loop
mov
cld
xchg
jo
insb
pop
jnp
cmpl
lcall
ret
add
jecxz
lea
nop
push
mov
sbb
jecxz
out
push
movsb
andl
out
mov
mov
dec
out
shlb
mov
or
adc
out
test
lock
pop
and
test
dec
arpl
jg
cmp
jb
xchg
test
pop
jb
fistpl
iret
pusha
je
mov
xchg
mov
inc
mov
icebp
outsl
mov
and
dec
sbb
add
bnd
test
jne
mov
sbb
loopne
je
sbb
imul
je
cmp
sub
imul
pop
mov
in
mov
andb
push
icebp
mov
dec
test
adc
dec
fnsave
mov
int
lret
arpl
mov
je
push
ja
cmp
popf
or
daa
jns
imul
inc
sbb
inc
nop
push
in
push
add
cmp
pop
or
sbb
cwtl
add
dec
inc
popf
sub
pop
stos
and
in
lock
mov
push
add
out
in
adc
lahf
les
jge
mov
mov
lret
orb
pushf
lcall
mov
mov
ret
adc
pop
adc
and
dec
add
mov
mov
lods
adc
mov
xchg
mov
cmpsl
out
inc
and
mov
icebp
jne
mov
loop
addl
inc
dec
test
dec
loope
ds
mov
in
es
mov
pop
push
mov
repnz
pop
ja
xor
outsl
inc
add
pop
mov
jge
aad
pop
test
pop
in
and
je
mov
rcl
and
mov
in
xlat
cmc
jb
mov
lods
adcb
incb
adc
mov
dec
push
lahf
outsl
jg
mov
xorb
mov
mov
inc
scas
add
iret
loopne
mov
imul
cld
loopne
jmp
and
into
pop
subl
addb
outsb
scas
rcll
aam
dec
das
test
ret
addb
sub
add
stc
rcr
xor
xor
xchg
xorl
mov
fsubl
orl
mov
in
mov
loop
push
pop
out
inc
cmp
mov
ret
pop
xor
stos
mov
sub
mov
insl
lcall
cwtl
mov
add
or
inc
mov
in
xchg
mov
ror
insl
rsqrtps
cli
inc
addr16
adc
dec
push
mov
mov
rol
fnstenv
sbb
ret
cwtl
lock
mov
jle
xchg
fwait
jns
jecxz
sahf
cwtl
push
dec
loope
add
lock
pop
mov
and
lret
add
jle
lods
in
or
ds
cmc
lods
or
fistpll
out
push
aas
fdivs
pop
inc
ss
cmp
jl
push
dec
scas
insb
cmp
scas
mov
ds
and
mov
pop
or
into
std
jle
adc
add
arpl
mov
mov
xor
xor
std
sar
and
cmp
sub
mov
jecxz
add
jnp
dec
shr
loope
dec
fcomi
pop
mov
mov
aaa
pop
inc
add
xchg
outsb
pop
test
adc
xchg
mov
lock
sub
sarl
jl
fisttps
jecxz
scas
lea
mov
pop
dec
lahf
cld
dec
dec
inc
loope
xchg
cmovno
cld
mov
pcmpgtw
iret
or
pop
cmp
lcall
push
test
adc
sub
mov
cltd
jo
dec
test
ss
out
xor
js
inc
xchg
pop
out
mov
mov
jmp
and
dec
ret
ret
sbb
mov
adc
jnp
dec
outsb
jno
adc
cmc
sub
pop
mov
jb
jne
push
xchg
mov
fcmovnb
lahf
int
sti
jg
add
idivl
enter
mov
pop
mov
in
dec
nop
mov
push
gs
pushf
popf
mov
sarb
xchg
inc
jl
push
fwait
lea
imul
sub
addr16
push
mov
std
inc
mov
fldl
or
fldt
insb
repnz
cli
lds
cmp
mov
inc
leave
jmp
outsb
imul
mov
adc
mov
pop
sub
lds
cmpsl
pop
jmp
cmp
sti
or
sbb
xchg
mov
insl
mov
push
xor
mov
fnstcw
sbb
mov
xor
cld
add
adc
cmp
call
or
roll
inc
cmpl
mov
daa
pop
aaa
mov
xchg
pop
addl
jb
addr16
cmp
xchg
pop
pop
std
adcb
ss
pop
cmc
mov
push
hlt
cmp
push
test
jo
and
mov
inc
push
and
and
dec
cltd
xchg
aam
jb
test
dec
or
negb
scas
es
xchg
lret
push
xchg
addr16
sbb
inc
push
fnsave
dec
iret
arpl
lahf
sub
inc
sbb
or
aad
sbb
popa
dec
adc
pop
out
mov
push
adc
lret
add
xor
xchg
dec
ljmp
frstor
pop
mov
es
pop
sub
movsl
out
int
mov
cmp
popa
mov
sub
and
ret
add
decl
lret
mov
push
test
hlt
imul
aaa
testb
in
cwtl
mov
xor
cmp
mov
scas
jns
cs
pushf
and
mov
int
xchg
pop
xchg
add
pop
jl
scas
xchg
xchg
addr16
lock
mov
or
inc
aad
push
push
xor
je
push
sub
es
push
les
xor
xlat
jl
call
int
insl
mov
pop
xor
dec
adc
aas
or
outsb
xchg
mov
xor
stc
mov
sub
fbld
sarl
and
orl
popf
out
xchg
jne
push
sub
mov
jl
fisttps
or
mov
dec
xor
xchg
imul
sbb
push
movsl
out
push
xchg
cvttps2pi
dec
pop
jl
and
add
sbb
or
out
movsl
inc
and
jg
loopne
dec
lcall
adc
data16
dec
mov
testl
sub
rcrl
ja
sbb
mov
ljmp
ror
fcmovu
pop
pushf
xchg
sbb
inc
and
jbe
push
inc
lret
xor
xlat
cmp
dec
iret
xchg
shll
aam
jl
mov
push
jne
loopne
jb
call
jbe
movsl
xchg
pop
xor
repnz
js
or
gs
mov
adc
xchg
dec
subb
jne
lea
scas
je
lret
xchg
jno
mov
scas
ljmp
jae
pop
std
cmp
mov
jl
cmpsb
out
and
aaa
push
mov
sbb
pop
mov
std
lds
sub
sbb
jp
cmp
xor
rcrl
sti
mov
jb
sbb
dec
fs
outsb
fs
popa
ret
push
fs
ja
pop
push
push
jbe
pop
push
fcoms
out
out
push
pop
adc
nop
add
mov
aaa
enter
movsl
cmpsb
cmc
inc
mov
scas
dec
add
mov
sbb
sbb
loope
sahf
cmpsb
mov
call
clc
test
and
push
nop
out
lahf
xor
inc
mov
in
sub
pop
gs
dec
cmp
lcall
leave
stos
mov
pushf
cmpsl
mov
pop
jge
into
xchg
xlat
inc
fists
and
jp
sbb
sbb
push
filds
add
pop
mov
push
add
mov
leave
loop
cmp
rcrb
or
mov
andl
xor
lock
shrb
cmc
pop
jo,pt
jmp
int3
fndisi(8087
ret
mov
lret
divb
cld
out
or
sbb
loope
iret
cmp
cmp
gs
push
mov
fcmovnbe
aas
gs
aas
mov
mov
rcrl
push
or
aam
mov
out
iret
lock
stc
mov
dec
cli
in
aam
cwtl
mov
cmp
cmp
pop
sbb
test
dec
push
mov
jmp
pop
leave
mov
xchg
shr
pop
xchg
jge
sbb
push
xor
lahf
bound
dec
mov
adc
sbb
outsb
ret
mov
adc
mov
jb
pop
cmpb
push
ret
sub
insl
test
mov
je
mov
xchg
shll
or
dec
jae
out
testb
idivb
lods
jns
fildl
lahf
sti
xor
scas
xor
and
daa
jge
lret
mov
fstpt
daa
leave
mov
xor
push
mov
fwait
sub
aam
outsb
inc
movsb
pop
jge
add
or
dec
negl
cmc
test
decb
sub
fs
push
xchg
cs
subb
aad
std
mov
mov
lock
into
int
cmpsl
mov
movsb
inc
inc
xchg
jbe
push
xchg
mov
and
mov
lea
popf
mov
orl
inc
and
or
hlt
xlat
push
sub
xchg
sub
fs
ret
pop
mov
pop
push
insb
pop
mov
enter
leave
adc
inc
sub
mov
xor
mov
movsl
and
imul
out
sbb
cld
mov
fisttps
shlb
pop
in
pop
stos
imul
mov
shr
mov
jg
push
sub
cmp
outsb
shlb
scas
pop
movsb
sub
add
jle
ja
ret
jmp
das
sub
out
lahf
pop
mov
pop
insl
lds
add
clc
ljmp
outsl
xchg
xchg
mov
sbb
mov
ror
movsb
rorb
lahf
dec
xchg
outsl
test
dec
jo
insl
or
push
lods
loop
lret
divl
hlt
cli
pop
pop
xchg
sbb
lds
dec
push
xor
cmpb
popf
test
push
pop
test
cmpsb
daa
rcrl
sbb
jmp
mov
andl
mov
repnz
add
nop
cli
je
push
mov
movsb
xor
mov
push
in
mov
scas
ss
cmpsl
lcall
clc
test
mov
cmpsl
test
mov
or
loop
aaa
lock
jle
xchg
pushl
add
inc
push
xchg
sbb
fistpll
mov
out
test
fildll
mov
mov
imul
adc
test
add
outsl
pop
insl
arpl
sub
out
les
das
jg
lea
push
lock
pop
jbe
lcall
inc
in
inc
push
out
out
daa
add
lock
outsb
ret
xchg
mov
outsb
pop
scas
mov
jl
pop
or
xor
cmpsl
into
psrld
and
std
popa
das
aad
pop
aas
call
or
hlt
mov
std
mov
and
leave
jle
adc
fistl
pop
loop
cmp
idivb
sti
xor
dec
cmpsl
jle
test
test
fwait
cmp
jno
mov
pop
in
ja
andl
xor
orb
mov
scas
inc
sub
popa
push
mov
push
popa
into
or
xor
loopne
aad
jl
sbb
push
pop
sarl
sub
pop
mov
jno
pop
mov
pop
clc
imul
pop
sarl
mov
movsl
and
out
stos
xchg
mov
bnd
sbb
xchg
out
btl
pushf
push
out
dec
and
jmp
cld
cmp
pushf
aam
xor
outsb
or
cmc
fs
fistpll
imul
jecxz
push
lods
leave
fistl
adc
pop
dec
and
aad
cmpsl
dec
push
je
fiaddl
mov
lret
fistpll
fistps
ds
arpl
dec
cwtl
lret
sub
xchg
cmp
pop
int
leave
in
in
adc
dec
fiaddl
add
xchg
lock
push
push
notb
mov
add
cmp
push
ret
xchg
add
sbb
out
shlb
jmp
sahf
ror
cld
xchg
fsubs
loopne
notb
fmul
and
jle
xor
scas
pop
mov
push
cmpsb
test
adc
push
dec
pop
cli
ret
dec
mov
ret
sub
lret
push
jp
xchg
inc
pop
sub
sahf
test
inc
stos
adc
outsl
outsb
sub
cltd
mov
jae
sbb
in
aad
lret
imulb
cmp
xor
loopne
fwait
mov
sbb
ret
repnz
mov
arpl
test
dec
sub
cmp
push
sahf
lcall
test
je
ds
sahf
fiadds
js
cmc
and
out
pop
call
pop
or
or
fucomip
jmp
rorl
fistps
mov
lods
loopne
out
cmp
adc
dec
mov
xchg
mov
cmp
rol
sub
stos
fcompl
add
xor
fists
into
xor
in
testb
ret
cmp
pop
xchg
mov
sub
aas
xchg
push
mov
pop
fbld
aaa
in
mov
push
fisttpll
push
xor
inc
sti
mov
xchg
push
sbb
push
sub
push
inc
pop
lock
jle
les
and
push
test
addr16
xchg
int3
add
jae
dec
sbb
adc
imul
test
es
pop
or
add
aad
andl
mov
mov
leave
clc
ret
fs
sbb
add
insl
mov
in
fwait
lds
clc
mov
popf
fsubrp
xlat
push
mov
mov
call
dec
cmp
push
push
push
int
push
pop
cli
mov
and
sub
cmp
xchg
sub
or
enter
pop
mov
add
out
sbb
jl
adc
xchg
xchg
xchg
mov
loopne
lret
insl
jp
outsb
lcall
mov
clc
inc
clc
mov
faddl
dec
je
cmpsb
adc
loope
add
ss
xchg
hlt
jo
aaa
repz
jl
pop
cmpsl
addr16
call
dec
ret
fistps
jmp
es
jae
xor
mov
and
repz
cmp
cmp
xchg
adcl
xchg
lret
stc
arpl
sub
mov
and
xchg
add
mov
or
jp
xchg
ss
mov
pop
popa
dec
int3
mov
lea
mov
xlat
pop
lds
and
cmp
mov
cvtps2pi
adc
movb
cmp
cmpsb
imul
movsb
mov
imul
adc
xor
xchg
mov
cltd
sahf
push
push
outsl
in
fwait
push
dec
dec
mov
fsubrl
and
je
in
test
xor
mov
mov
cld
or
pop
mov
iret
incb
add
mov
clc
icebp
jb
and
outsl
sbb
dec
pushf
xor
jne
and
add
stos
jo
dec
cmp
enter
leave
xchg
mov
push
xchg
in
or
jno
sub
mov
test
fisttpll
ss
into
adc
cld
pop
repz
aas
mov
push
mov
popl
and
loope
mov
aas
dec
jne
sub
jnp
push
pop
test
push
inc
and
popa
mov
adcl
enter
sbb
or
lods
jl
mov
fldcw
cmc
push
mov
xorl
cli
mov
stos
scas
subb
mov
ljmp
rcr
mov
and
jbe
ljmp
mulb
mov
xchg
or
lds
pop
fs
incl
lods
into
insb
xlat
inc
mov
and
loop
outsl
sub
pusha
or
mov
sar
insl
outsb
jno
test
lcall
imul
add
dec
test
lcall
mov
es
loop
adc
sub
push
push
push
inc
mov
xchg
push
mov
in
add
xor
fs
repnz
clc
push
test
pop
inc
stos
cmp
nop
push
loop
push
jo
mov
btr
inc
cwtl
jb
leave
jp
fcoml
aas
cs
cld
sahf
dec
mov
dec
cmc
sub
adc
xchg
pop
movsl
movl
xchg
push
mov
xor
stc
pop
pop
adcl
fs
incl
sbb
popf
ret
enter
mov
cmpsb
and
jnp
add
jecxz
aas
adc
hlt
out
jmp
dec
mov
xchg
ror
popf
rep
lret
mov
add
cmp
in
mov
and
cmc
pop
xor
ds
lock
push
pop
cmp
and
lods
mov
mov
bound
inc
adc
ljmp
pop
scas
sbb
mov
inc
je
mov
lret
test
mov
test
jbe
aas
pop
sub
in
out
xchg
fs
aaa
xor
cld
addb
xor
mov
push
mov
shll
push
cmp
mov
out
inc
mov
mov
fwait
mov
add
xor
or
call
inc
std
push
loopne
add
dec
jno
sbb
call
lds
test
pop
push
jnp
mov
jns
cmc
lock
jns
sbb
mov
xchg
jg
nop
mov
sub
leave
and
aaa
or
das
mov
test
add
xor
dec
loope
push
daa
stos
adc
jl
xchg
insl
repnz
jnp
pop
dec
adc
sbb
push
out
push
and
cmp
test
orl
pop
repz
sub
mov
mov
mov
mov
imul
subb
sbb
aam
mov
and
dec
out
mov
inc
jne
inc
jmp
arpl
insl
or
lcall
pushf
jbe
add
adc
jno
fisttps
ja
mov
push
addr16
in
mov
push
dec
repnz
fisttps
sbb
mov
bound
adc
push
test
sti
and
add
mov
gs
mov
adc
mov
xchg
iret
cmpsb
pop
push
push
ror
out
imul
dec
inc
fildl
mov
fisttps
in
and
sbb
mulb
fildll
lea
and
pushf
sbb
or
ja
adc
mov
inc
push
rcrb
sub
je
lock
pop
pop
out
xchg
push
dec
sub
jo
cmp
outsb
jl
xor
or
ja
rcrl
push
add
enter
pop
mov
lret
leave
pmuludq
xchg
add
pusha
push
sub
imul
iret
mov
pop
loop
popf
cmp
cli
ss
push
jbe
mov
fstl
sub
jns
or
push
push
jge
add
leave
mov
sub
adc
rcrb
dec
add
jb
shrb
in
loop
popa
xchg
rorb
sarl
aas
or
sub
leave
mov
xor
xor
lea
aad
cmp
dec
inc
jecxz
cmpsl
xchg
inc
push
test
icebp
push
sub
lods
les
popf
subl
in
jne
dec
jecxz
cmp
std
mov
xchg
arpl
aad
or
add
xchg
insl
push
stos
mov
add
or
int
xchg
push
lds
js
ret
dec
popa
stos
sbb
xchg
ret
dec
cmc
lods
ficompl
pop
pop
push
jle
stos
and
dec
pshufw
rcrl
xorb
xor
js
mov
mov
lcall
mov
push
inc
mov
mov
cmp
adc
lods
jp
xor
xchg
insl
nop
and
cld
jo
inc
ljmp
pusha
ss
out
jne
mov
cmp
mov
pop
or
into
cmpsl
imul
repnz
dec
lret
xor
div
icebp
sub
lcall
dec
cld
or
mov
adc
cmp
pop
shll
jg
xlat
shll
mov
adc
dec
add
or
pushf
and
and
cmp
in
stos
mov
jb
cwtl
mov
inc
pop
std
mov
test
lret
sub
inc
sbb
jne
or
out
cmp
rorb
jecxz
ror
movsb
lret
bound
js
add
setbe
ret
fisttpl
idivb
dec
push
fdivl
sub
leave
and
xor
push
jno
scas
push
fdivrp
push
mov
pusha
cmp
pop
loope
out
jmp
push
jnp
xor
aad
sub
leave
fmul
jb
dec
imul
sbb
xchg
roll
leave
call
mov
jl
mov
xchg
mov
outsb
dec
ss
mov
dec
stos
inc
ljmp
mov
loope
rol
cltd
jge
sbb
sbb
mov
arpl
fwait
dec
push
sbb
es
mov
les
or
mov
and
and
clc
push
jmp
popa
stos
fsubr
leave
lret
jle
cmpsl
imul
icebp
jmp
mov
mov
cmp
js
in
arpl
push
pop
inc
xchg
mov
sub
fs
dec
dec
or
test
cmp
or
fiaddl
jl
gs
sbb
iret
imul
xlat
les
in
mov
lods
cmp
xor
jno
and
fwait
aad
adc
das
mov
cmp
fs
mov
inc
mov
bound
add
das
sbb
pushf
stos
dec
cmp
pop
lods
cld
cmp
std
fistpl
fstl
repnz
cmp
cmc
and
daa
xchg
imul
scas
data16
xchg
int3
xor
repnz
dec
jae
mov
sub
add
add
mov
sub
jae
daa
adc
or
inc
push
loop
lods
xor
adc
jge
dec
fidivl
or
mov
enter
jae
pop
pop
scas
fmull
mov
add
shlb
sub
out
mov
pop
testb
rolb
lea
add
cmp
adc
mov
dec
or
inc
lret
je
sub
mov
pop
cmpsb
mov
and
lods
inc
sub
jge
dec
cmpsb
pop
xor
mov
jno
mov
dec
addr16
inc
mov
adc
pusha
in
int3
push
sti
pushf
add
mov
rcr
mov
pop
mov
int
pop
jne
sti
mov
pop
pop
fwait
andb
repz
ret
jne
and
pop
sbb
inc
imul
xchg
mov
das
scas
mov
in
jle
pop
mov
push
add
xor
cmp
inc
cmp
or
xchg
jmp
sub
call
sbb
test
cwtl
aad
push
cmpsb
aad
cld
or
out
mov
mov
jno
rolb
mov
test
sbb
pop
shlb
mov
or
rolb
pop
jno
vpaddd
pop
mov
xor
std
push
pop
imul
sub
or
pop
fdivrs
dec
ret
stos
arpl
add
ficoms
push
orl
and
int3
cmpsl
add
stc
xchg
mov
pusha
lods
cmpsb
pop
frstor
fiaddl
jl
test
mov
fldenv
lods
push
and
mov
aaa
xchg
or
test
jnp
xchg
xor
xchg
clc
lea
jno
sub
aam
sbb
test
in
mov
lret
leave
roll
bound
pop
es
jecxz
movsl
push
pusha
mov
arpl
sbb
pop
insb
inc
shr
mov
sti
adc
mov
mov
mov
add
ja
xor
push
shll
adc
bound
push
cmp
ss
push
xor
clc
cmp
lods
and
xchg
hlt
cmc
movsb
jecxz
lds
test
jbe
cltd
fldcw
xchg
mov
mov
les
push
fsubl
pop
lods
pop
add
inc
adc
add
clc
hlt
xor
jp
pop
pop
aad
rcll
rolb
push
xchg
xor
mov
add
jecxz
push
xor
lea
inc
pusha
ja
stos
das
lods
cmp
mov
fbstp
add
push
mov
imul
mov
lahf
out
mov
fmuls
mov
loop
outsb
mov
inc
inc
mov
lret
fwait
jg
imul
ljmp
loop
cmpsb
int
test
out
outsb
addb
jb
push
mov
sub
xchg
fs
push
or
inc
jmp
loop
adc
mov
push
xlat
adc
xor
jecxz
in
stos
mov
inc
sahf
fsub
push
mov
stos
out
and
ret
imul
jne
xorb
lret
pushf
cs
xor
mov
rolb
push
dec
out
popa
incb
pop
push
jb
or
in
call
mov
punpckldq
push
lret
jae
clc
mov
aad
lahf
and
iret
lods
mov
pusha
dec
xchg
push
push
cmp
jecxz
mov
gs
cmp
cld
sbb
jmp
or
xor
ljmp
jno
xor
mov
dec
pop
xchg
dec
dec
insb
aas
fadds
sub
cmp
test
icebp
hlt
mov
in
cwtl
loopne
mov
lret
out
mov
movsl
mov
jnp
test
decb
adc
push
mov
clc
xor
xor
pop
push
in
js
ret
push
inc
jle
xchg
out
pop
in
es
mov
out
mov
cmp
int3
push
arpl
pop
pop
adc
or
jo
loopne
jno
call
imul
mov
ficoml
sub
inc
negb
dec
and
out
andl
push
test
ljmp
mov
int3
les
sbb
shlb
inc
inc
xchg
dec
loop
sub
aad
xor
mov
dec
jg
scas
outsl
pop
dec
xchg
dec
push
inc
loopne
xchg
adc
test
push
scas
lahf
mov
insl
cmpsl
lahf
add
sbb
bound
xchg
cli
lds
push
cwtl
popf
negb
push
cld
mov
add
lret
sti
xor
dec
push
cmpsb
or
pop
ljmp
xchg
sub
push
bound
and
mov
push
jne
mov
int
aaa
rcl
or
scas
xchg
es
je
pop
in
jno
dec
push
sar
push
addr16
xor
test
xchg
and
sub
sub
adcb
fistpll
test
adc
pop
fdivrl
ja
pop
jnp
fcmovbe
fstpl
xchg
sub
mov
pop
fistpl
jne
cmp
repz
jno
icebp
stc
adc
push
add
subl
jle
test
xor
mov
cmp
test
rcl
fsubr
js
lret
jmp
lret
pop
sub
sarb
fsubrp
jge
pop
mov
xor
mov
adcb
insl
test
out
pop
sbb
inc
das
stc
adc
fisttps
jnp
jl
mov
cmpl
dec
rcrl
in
popa
pmulhuw
cs
xchg
adc
cwtl
xchg
jo
lret
xlat
xchg
and
mov
imul
aam
cli
mov
leave
cmp
mov
xor
sbb
mov
xor
pop
push
adc
stos
pop
jecxz
mov
lods
test
pop
push
out
mov
mov
push
xchg
cli
rorl
cwtl
stos
scas
mov
flds
dec
inc
inc
aam
in
mov
nop
xchg
lret
std
nop
std
xchg
push
popa
test
push
outsl
xor
push
and
mov
ret
hlt
mov
cltd
adc
inc
adc
daa
addr16
cmp
push
movsb
jecxz
clc
test
mov
int
mov
adc
dec
test
pop
xlat
mov
cmp
call
sbb
ret
pop
push
aaa
xor
pop
pop
pop
and
mov
iret
lret
aaa
dec
mov
lret
ffreep
sub
out
lods
movsl
xor
insl
int
xchg
pop
adc
cmc
orb
imul
rcrl
sahf
in
and
and
jbe
mov
rorl
cmp
in
sub
in
popf
pop
xchg
sub
stos
loop
push
xor
sbb
cmpsl
cs
repnz
lahf
inc
add
mov
push
jmp
ret
jae
leave
sub
mov
pop
jns
cli
xor
jnp
xchg
gs
iret
fistl
repz
pusha
jmp
out
dec
sub
jb
cmp
push
inc
mov
xor
sti
aam
loop
pop
inc
pop
outsb
lcall
imul
fistps
lock
insb
movsb
in
jb
sub
xchg
pop
jo
pop
pop
or
stos
mov
xchg
push
mov
jno
movsl
in
ljmp
xor
push
jo
jecxz
movsb
xchg
add
mov
jecxz
push
je
aad
fldl
out
dec
aaa
sbb
xor
outsb
pop
mov
out
jg
in
shlb
push
mov
lock
icebp
sbb
inc
push
movsl
jmp
xchg
push
dec
jne
in
xor
dec
or
xchg
lods
mov
pop
sub
lods
mov
adc
scas
mov
in
out
inc
loope
cmc
inc
xlat
std
movsb
mov
fidivs
sbb
popf
dec
rcl
push
fidivrl
dec
int3
adc
xchg
add
ss
add
orl
cmp
mov
push
or
and
mov
popl
lcall
jmp
pop
out
into
xchg
rcr
mov
imul
les
sub
stos
jmp
inc
iret
bound
jnp
jecxz
ja
adc
pop
repnz
inc
stos
jne
mov
pop
sub
sub
lods
dec
in
push
or
mov
aad
scas
shlb
cmp
testl
xor
xchg
je
lds
icebp
addr16
adc
mov
or
das
imulb
iret
out
in
in
jecxz
dec
mov
aad
jne
enter
stos
add
out
dec
mov
push
outsb
cmpsb
mov
test
aad
pop
iret
je
ficomps
or
sbb
or
hlt
xor
mov
aad
pusha
fisubrs
push
mov
sar
rcrl
xchg
test
mov
cs
int
lahf
jne
int
jo
inc
sbb
pop
mov
loop
cld
mov
jmp
cs
add
cs
loopne
mull
inc
push
jl
mov
mov
mov
mov
call
sub
mulb
mov
xchg
sbb
xor
and
push
xor
pushf
mov
jecxz
cmpsl
lods
mov
popa
in
lock
xchg
int
bound
shr
mov
in
sbb
dec
fistpll
sub
push
stc
enter
xchg
jl
mov
sub
js
push
push
ret
cmpsb
mov
inc
outsl
jg
xchg
jg
add
and
sarl
xchg
sbb
loopne
sbb
sbb
mov
sbbb
mov
testl
jne
push
das
mov
dec
clc
fists
fxch
mov
int3
cwtl
lock
push
rcr
or
push
push
mov
jmp
daa
mov
mov
jmp
and
out
js
mov
orb
jecxz
pusha
push
and
pop
add
aas
inc
popa
xor
sub
sahf
push
and
ds
pop
insl
and
mov
outsb
or
mov
push
outsb
dec
jl
fwait
popf
inc
fdivrl
sub
dec
cmp
adc
push
pop
cld
lret
sbb
mov
outsl
ficoml
mov
fcoms
imul
or
stos
mov
push
popf
jo
ret
adcb
cmp
out
or
rcrb
jae
into
pop
pushf
scas
ss
or
mov
inc
add
jmp
mov
ljmp
stos
push
xor
rcrb
sbb
add
lods
ret
push
sub
mov
std
sbb
pusha
push
dec
dec
es
bnd
fisubl
or
lcall
popa
cmp
cli
or
popf
adc
movsl
xchg
mov
mov
and
jnp
add
ret
dec
and
mov
pop
jg
sub
mov
sbb
fucom
sbb
and
and
xor
lds
mov
mov
and
std
cmpsb
shr
sbb
push
mov
dec
test
loope
neg
ficoml
fisttps
test
ljmp
inc
faddl
lods
insb
push
mov
mov
fbstp
insb
fwait
cmc
add
rcrb
movb
mov
idivl
pop
dec
popa
fcompl
lret
mov
ss
dec
mov
dec
push
mov
gs
fs
fdivs
and
lods
inc
or
xor
adc
je
jle
and
or
into
pop
movsl
in
push
ja
xchg
pop
inc
insl
pop
add
ret
xchg
inc
sbb
jge
lcall
add
mov
les
rclb
cltd
xor
xor
lcall
push
lret
mov
in
and
jb
dec
fistpl
cmp
movsb
or
sub
aaa
lock
in
aas
adc
sub
push
fnsave
push
mov
addr16
sub
std
xchg
cmp
insb
and
aam
add
lds
xchg
xlat
pop
nop
cmpsb
add
dec
andb
fildl
sub
test
mov
dec
les
lret
in
xchg
stos
gs
lock
outsb
or
xchg
ss
inc
pusha
add
adc
testb
inc
insb
or
sbb
sub
aaa
test
adc
push
mov
xor
jmp
push
frstor
mov
js
jo
in
arpl
xchg
subl
sub
imul
cld
xor
jge
mov
adc
add
mov
lahf
xchg
cmpsl
movsl
or
sbb
mov
sub
loopne
lahf
movsl
clc
or
fistpl
iret
mov
nop
shl
aaa
push
ret
outsl
stos
test
lea
gs
ds
cmpsb
mov
cwtl
cmpsl
add
cmp
jae
ds
jno
repz
mov
sub
xchg
js
mov
add
lcall
jg
bound
fldcw
fwait
or
mov
add
fists
inc
and
mov
in
push
mov
xor
mov
pop
inc
jl
dec
std
es
jecxz
jne
xchg
push
sbb
xchg
adc
dec
out
or
das
or
lahf
fldt
xacquire
loop
ret
xchg
lret
lahf
pop
mov
mov
mov
enter
rolb
imul
andl
xchg
andl
insl
addr16
stos
add
test
ja
jle
test
mov
orb
mov
sub
sti
rcrl
pop
imul
out
adc
inc
mov
dec
sub
dec
pop
dec
dec
mov
cs
out
clc
daa
jge
dec
inc
sub
cmp
push
movsl
fucomip
add
or
es
jnp
jecxz
mov
fidivl
in
jo
mov
dec
jge
dec
aam
cmc
icebp
loope
cmp
pop
clc
test
pop
jae
mov
cmp
jno
into
fimuls
loope
xor
jecxz
sbb
into
lea
rcll
out
pop
fisubs
pop
outsb
xor
mov
xor
shr
pop
jo
popa
xchg
cld
xchg
addb
xchg
es
mov
mov
adcb
shlb
aam
sbb
sbbb
inc
adc
mov
jne
data16
mov
jne
cmpsl
in
adc
xlat
cmpl
aad
shll
inc
pop
pop
stc
aaa
push
les
inc
cmp
push
gs
js
add
ja
les
push
int
cli
out
test
aaa
cltd
idivb
mul
shll
mov
mov
pop
adc
flds
hlt
jno
mov
push
mov
mov
dec
mov
jg
xchg
cmc
xor
lock
jnp
in
ret
adc
jns
cmp
mov
fldl
scas
inc
ds
pop
mov
push
stos
mov
mov
jbe
mov
jno
aas
lahf
mov
sub
pop
xchg
shl
out
lret
out
stc
jp
jl
test
and
lcall
mov
pop
cmpsb
or
jcxz
ljmp
mov
push
inc
roll
enter
enter
movsb
pop
test
pop
or
xchg
jb
jae
mov
gs
scas
jbe
cmpsb
out
inc
std
aaa
repnz
xchg
jno
insl
sub
movsb
sub
lahf
outsb
dec
nop
lret
cmp
and
std
inc
mov
pop
and
fs
mov
xor
mov
sub
arpl
jbe
xor
add
xor
lcall
push
lret
loopne
mov
or
inc
push
fldenv
pusha
aas
push
test
ja
push
or
outsl
sub
inc
xor
ss
or
cpuid
jbe
inc
xchg
and
out
adc
jbe
out
push
cmpsl
inc
ja
popf
or
in
mov
psubd
shlb
stc
mov
divb
or
into
xchg
lods
mov
aam
test
jle
js
or
mov
and
cmp
sub
sarb
pop
sti
mov
jp
mov
es
adc
arpl
loopne
inc
sub
xchg
fldl
clc
divb
enter
pop
fimull
cltd
test
push
lea
pmulhw
lcall
gs
inc
das
xchg
out
fmul
pop
adc
fwait
andl
adc
xor
dec
sbb
and
push
inc
cmp
out
into
loop
aad
cmpsl
push
jae
cmp
mov
sub
dec
sbb
mov
xor
and
mov
fsubr
mov
dec
fadds
xor
mov
rorb
pop
jp
or
mov
jno
cld
stc
ret
popa
outsb
mov
push
adc
lahf
vminpd
add
cmp
test
jnp
sub
pop
sub
sub
dec
cmpsl
or
out
lcall
lods
aas
out
xor
shrb
clc
push
mov
scas
andl
fbstp
jmp
xchg
mov
pushf
adc
fldenv
cmp
pop
sub
and
jge
pop
add
and
sti
push
repz
ret
jp
jne
js
in
push
shll
ret
enter
push
mov
mov
adc
and
fcmove
jno
add
inc
das
popa
lods
adc
push
add
loopne
repnz
fwait
lock
or
rcrl
lods
mov
nop
stos
push
pushf
inc
iret
sbb
jmp
sub
mov
test
nop
or
movsl
push
lret
test
push
sub
icebp
stos
cltd
in
fisttps
adc
and
sbb
dec
mov
dec
jmp
bound
fstpt
inc
in
lods
sub
add
add
pusha
mov
cmp
add
mov
loop
adc
sarb
into
pop
fxtract
mov
push
push
minps
ja
xor
rcrb
pop
xchg
sarb
xchg
jbe
jb
iret
jns
jbe
xchg
int3
in
rorl
test
add
dec
icebp
push
push
jmp
jae
xchg
rorb
sbb
lods
pop
cltd
xchg
jge
in
dec
lods
popl
bound
lret
sarb
cmp
imul
imul
and
aad
pop
cmp
mov
push
jbe
push
push
mov
std
or
rcl
out
rcrb
icebp
mov
mov
mov
cwtl
adc
pop
rclb
repz
xlat
jecxz
bound
mov
scas
or
sbb
cli
pop
aad
cs
push
sarl
jo
sub
movsb
inc
jecxz
add
subl
sbb
jp
push
sub
lods
pop
mov
addr16
push
and
cwtl
adc
xchg
insb
and
in
test
mov
inc
mov
bound
int
sti
call
cmc
imul
dec
cmp
sbb
cmp
cld
cwtl
jecxz
test
incb
lea
shl
int
dec
xchg
out
test
mov
dec
add
push
inc
mov
mov
imul
ljmp
outsb
cwtl
popf
push
jne
les
jl
addl
aas
outsl
or
cmp
dec
inc
mov
cmpsl
aas
aad
mov
mov
flds
mov
testb
daa
sti
cmp
inc
sahf
pop
xor
fdiv
leave
xchg
adc
sbb
mov
cmpb
xor
sbb
adc
int
mov
push
xor
imull
decl
adc
mov
aaa
aas
mov
cmpsl
divb
jns
fists
out
mov
mov
ja
fstpt
cmp
and
sahf
pushf
push
pop
push
mov
fisttpll
out
lods
in
dec
mov
nop
and
lret
aaa
sbb
iret
adc
jge
into
jle
dec
xchg
cs
sbb
popa
cmp
std
loop
loope
mov
sub
cli
add
mov
mov
adcl
movsb
lret
push
outsb
imul
jg
push
xchg
pushf
inc
jnp
repz
and
push
add
inc
pop
sarl
cs
mov
lds
ss
cmp
lods
xchg
fdivl
rcrb
movsb
xor
add
inc
push
outsb
movsb
aad
orl
out
jle
into
inc
pop
enter
ficompl
jo
mov
mov
imul
sbb
sbb
push
jno
pop
mov
js
imul
sbb
mov
shlb
adc
sbb
lret
mov
rorl
mov
mov
adc
lock
push
cmp
test
lea
insl
fildl
addr16
jecxz
ret
push
sub
or
std
mov
notl
stos
and
jg
cld
movsl
or
pop
inc
inc
shll
xor
jne
fmul
aam
test
bt
test
or
pop
or
add
addl
enter
and
sbb
xor
sub
and
stos
add
push
cwtl
push
xlat
mov
aas
cwtl
adcb
jae
popf
sub
sbb
and
imul
jb
fidivl
dec
out
enter
and
jge
int
adc
jbe
push
mov
mov
mov
sbb
inc
sub
xchg
fcmovne
xor
icebp
sub
jnp
popa
sbb
stos
in
jecxz
inc
outsl
cmp
lret
jae
ret
ljmp
mov
into
sub
leave
add
add
icebp
cmp
idiv
push
notl
xor
adc
sbb
insb
loopne
ljmp
ss
lods
jle
shrl
fcmovnb
inc
pusha
sub
xor
out
lods
clc
sub
push
and
or
rolb
inc
nop
cmpsl
inc
xor
and
loope
dec
fisubrl
or
rorl
ret
aam
hlt
adc
leave
ret
sahf
shll
aam
movsl
pop
mov
les
pop
and
cmp
mov
sub
inc
xor
mov
xor
cmp
push
xchg
mov
mov
out
xor
dec
or
jl
xor
xor
sub
call
icebp
mov
mov
dec
push
cmp
pop
lret
adc
sti
les
pop
jl
cs
in
sbb
addr16
je
pextrw
or
jmp
incb
pusha
jecxz
dec
nop
xchg
xor
cmp
jno
xor
lods
inc
lods
repz
or
lock
push
adc
mov
add
lret
sahf
adc
cli
subl
les
and
pusha
mov
cmp
sub
into
cmp
xor
movsb
push
sub
push
lock
mov
mov
jg
and
popf
mov
jmp
jmp
sbb
ret
mov
test
adc
sub
jno
cmpsb
loopne
mov
shlb
lds
xchg
cli
jb
mov
adc
outsb
pop
xchg
pop
arpl
add
lods
ret
dec
xchg
sbb
test
xor
fwait
cmp
cmp
xlat
in
insl
stos
push
push
mov
rclb
cld
jb
dec
cld
lcall
mov
cmpsl
psadbw
into
jae
xchg
jbe
mov
icebp
mov
int3
cmpsb
repz
and
sbb
add
ds
nop
xchg
inc
test
std
dec
dec
adc
rclb
cmp
jmp
movsb
fists
pop
and
fwait
in
jno
sub
addb
cmp
mov
repnz
jbe
mov
outsb
je
dec
cli
cmpsb
jne
lods
fwait
cltd
scas
icebp
sub
cmpsl
in
fistpll
sub
jl
and
lds
jne
cmp
pop
and
push
out
xchg
aas
test
fwait
mov
enter
addr16
cmp
test
push
arpl
les
cvtps2pi
lods
loope
push
pushf
fs
jnp
into
jecxz
xchg
cmp
push
icebp
imul
pop
fsubs
sbb
pushf
daa
push
sub
mov
sbb
imul
and
jp
lods
pop
xor
movsl
adc
repz
mov
lea
inc
jb
add
movsb
add
dec
xchg
push
push
push
mov
icebp
mov
scas
sub
popf
or
or
jns
xlat
xor
pop
push
mov
les
into
ja
cmp
jmp
lods
jmp
sbb
push
inc
or
and
add
xchg
fsubrs
jns
lret
push
loope
mov
fcompl
or
jae
das
jle
mov
mov
or
sbb
outsl
fdivrl
cwtl
mov
jmp
stos
or
inc
sbb
sub
inc
lea
not
cli
cmp
xor
lahf
imul
add
fbstp
or
xchg
lcall
sbb
sub
loope
mov
cmpsb
sub
scas
insl
stos
shll
xchg
xor
shll
cmpsl
mov
cld
dec
ret
cld
jl
fnsave
cmp
sub
ret
outsb
cmp
clc
push
inc
incb
xchg
jb
cld
lret
jae
aad
mov
lds
pop
call
sbbb
push
in
int3
iret
imul
adc
rol
sub
pusha
xchg
out
int
inc
cmp
sar
cmp
inc
cmp
adc
jle
repz
fimull
pushf
ss
mov
push
mov
mov
and
popa
ja
mov
clc
jecxz
mov
icebp
les
or
fs
pusha
xchg
lock
in
mov
pop
outsl
or
push
dec
fisttpl
sahf
out
xchg
imul
stos
sbb
cmpsl
shrl
push
xchg
call
scas
push
popa
mov
sub
lods
std
sarb
aaa
iret
jge
aam
pop
push
xor
movsl
cmp
mov
scas
fstpl
iret
in
push
push
scas
sbb
mov
inc
sbb
adc
dec
cli
push
aad
lret
push
fs
sahf
jno
lea
jecxz
push
mov
push
js
mov
insb
sbb
inc
lret
jecxz
xor
mov
test
push
mov
imul
jle
pushf
adc
das
ja
pop
aam
out
push
pushl
cmp
jl,pn
int
shll
scas
push
loopne
inc
fadd
scas
cmpsl
out
add
add
and
push
jno
call
cmp
mov
pop
sub
lods
and
clc
daa
xchg
adc
push
mov
sbb
add
test
mov
jle
pop
add
push
mov
mov
jecxz
inc
adc
ljmp
lods
mov
shll
int3
loop
adc
rolb
pop
repz
shr
fdivrs
out
xor
add
int3
jns
mov
loopne
mov
je
mov
pop
adcl
mov
jb
fldt
inc
jge
daa
repnz
ficomps
add
nop
mov
xchg
cmp
pop
xchg
mov
inc
and
fwait
push
mov
adc
daa
xor
repz
fwait
rolb
fcmovne
stos
mov
or
in
lds
sub
inc
loopne
out
jo
loopw
cmc
out
shlb
in
mov
icebp
and
outsl
sbb
icebp
jp
iret
pop
adc
lea
popf
xchg
cmpsl
outsb
sbb
cmpsb
jnp
jns
mov
xchg
mov
dec
mov
cmpsb
imul
xor
mov
outsl
sub
lahf
out
nop
inc
fnstenv
ret
hlt
fwait
jno
pop
adc
outsb
in
into
fsubl
outsl
enter
outsb
lock
test
adc
mov
jo
iret
je
mov
movsl
icebp
ret
stc
xor
es
push
ja
inc
mov
sbb
imul
mov
in
pop
pop
scas
jo
cmp
pop
cmp
jae
mov
adc
add
out
rorb
push
sbb
rorb
sub
jne
stc
in
scas
or
icebp
xchg
fldln2
in
sbb
iret
adc
nop
sbb
and
stos
loope
cmp
add
and
lea
fldl
gs
sbb
sub
dec
mov
jp
jno
mov
cld
inc
push
test
mov
imul
test
lock
test
test
jl
jg
cmc
lock
pop
cmp
movsl
stos
add
shll
sub
cld
insb
xor
and
sub
ja
out
push
sbb
mov
push
xchg
mov
cmpb
stc
lds
fdivrl
sub
jns
and
cld
int3
pusha
adc
aad
in
insb
push
fstl
xchg
divl
fisttpl
pop
mov
scas
sub
mov
sbbl
and
xor
jmp
idivb
sub
push
fcmovu
xchg
add
stos
inc
inc
scas
sub
fdivl
xchg
popa
push
sbb
dec
enter
jbe
leave
fs
les
add
push
sbb
insb
jb
dec
adc
cmp
daa
cmc
in
loopne
repz
int3
push
inc
and
in
outsb
lods
push
fucomip
mull
les
jne
sbb
fsubp
lock
and
leave
mov
mulb
jbe
dec
cmp
mov
or
fwait
and
pop
mov
push
fidivs
adc
lods
inc
test
inc
pop
xlat
push
pop
jp
pusha
mov
orl
outsl
dec
xchg
xchg
out
test
jg
jae
stc
mov
mov
and
xchg
xor
inc
in
sub
fxch
aaa
inc
or
mov
mov
out
and
test
jns
stos
outsl
cld
inc
inc
or
pop
fcmovne
pop
into
imul
sbb
imul
lock
mov
int3
or
fwait
imul
stc
pop
mov
mov
imul
push
and
jp
mov
ds
adc
sub
insl
mov
jge
inc
and
sub
cmp
xor
lcall
add
jp
negl
xor
dec
cmpsl
inc
add
fwait
movsb
sub
in
or
dec
stc
hlt
sub
xor
lret
movsb
cmp
xchg
jb
imul
inc
xor
shll
jno
xor
add
cmp
and
in
and
adc
sti
or
lock
jae
gs
xchg
pop
jno
sub
mov
xchg
test
pop
es
movsl
or
mov
push
push
xchg
xchg
push
hlt
dec
andl
cmp
stos
les
add
adc
jmp
or
mov
dec
fmull
jg
call
mov
pop
mov
mov
mov
xchg
rorb
sub
xor
mov
push
xchg
push
xchg
in
jbe
loop
or
push
inc
inc
mov
jmp
fldlg2
inc
testl
stc
add
and
je
out
cmp
dec
mov
xorb
lds
pop
int
pop
pop
stos
mov
jb
pushf
sub
shrb
dec
test
pmulhuw
xor
fisttps
lds
dec
dec
sub
cmp
push
jecxz
xchg
jg
fmull
mov
rorl
or
and
test
cmp
in
bound
push
pop
mov
out
cmp
in
mov
scas
lods
dec
sub
aaa
push
ret
push
popf
sbb
aas
es
cs
jbe
push
test
fsubrs
inc
loop
sub
outsl
mov
xchg
ret
setge
sbb
cmp
or
scas
movb
mov
pop
push
push
iret
push
mov
jecxz
push
push
mov
add
adc
and
outsb
fisubl
pop
sbb
and
and
gs
jecxz
and
gs
mov
pop
cld
adc
fsubrp
js
flds
mov
sub
out
sbbl
push
or
adc
cmp
scas
lea
sub
stos
out
add
jb
mov
mov
xchg
jle
pop
data16
xchg
cmp
bound
jb
mov
sti
add
mov
std
test
dec
inc
xchg
inc
mov
cltd
pop
shr
sub
enter
pop
cmp
add
mov
sub
push
cmp
cmp
divl
push
dec
mov
xchg
lock
cmp
mov
ds
fwait
aaa
mov
shll
cmp
cmp
lds
xchg
pop
in
das
jno
and
or
test
pop
push
loope
aam
fistpl
sbb
add
outsl
imul
pop
icebp
adcb
shrb
xor
lock
mov
jmp
fstp
pop
add
ret
sbb
lods
adc
ret
push
push
mov
rcrl
mov
je
inc
pop
arpl
cld
lret
adc
hlt
mov
test
push
sub
test
pop
repz
adc
stos
imul
scas
es
jmp
pop
add
out
jge
movsl
push
dec
ss
xchg
mov
inc
or
test
es
subb
xchg
inc
test
or
sbb
inc
ljmp
cmp
sbb
mov
fsubrl
pushf
je
rolb
sub
into
cmp
jge
es
enter
mov
sub
cmpsl
push
inc
mov
and
xor
test
mov
arpl
jle
rcrl
mov
out
push
pop
cmpsl
mov
gs
push
cli
in
in
hlt
jo
loop
xor
xchg
mov
jp
notb
imul
clc
int
es
hlt
or
out
mov
xchg
pop
push
ss
fs
jne
stos
pop
push
test
mov
push
add
into
outsb
mov
xor
lods
pop
sbb
aad
out
and
popf
loope
adc
cmc
push
leave
or
fidivrl
stos
ss
and
pop
mov
clc
mov
xlat
stos
stos
mov
jl
adc
sbb
xchg
stos
movsl
sbb
insb
xor
dec
popa
sarb
test
xor
sub
add
xchg
scas
pop
push
pop
cmp
pop
mov
hlt
movsb
pop
lcall
xor
imul
std
cmp
adc
imul
cmpl
in
repz
sub
mov
pandn
mov
inc
adc
cmp
je
sbb
shrl
in
sbb
lods
sub
adc
out
pop
push
pop
jl
fucomip
pop
push
imul
pop
xor
inc
push
push
daa
jge
mov
push
aaa
cmp
jbe
sarl
cmp
aas
jno
sbb
lret
mov
sar
out
pop
out
ss
lock
mov
popa
mov
out
fldt
faddp
fwait
bound
push
adc
xor
iret
xchg
mov
mov
jo
bnd
inc
fs
sbb
icebp
aas
inc
ret
mov
cltd
jmp
mov
sti
jl
dec
fnstsw
xor
jnp
jae
lret
in
cmp
cltd
out
outsb
add
dec
cmp
jge
inc
push
aas
cmp
in
push
stc
loope
daa
xchg
inc
gs
sbb
mov
mov
or
xor
mov
xchg
pushf
orb
push
mov
jae
cmp
mov
test
and
ljmp
pusha
mov
and
sti
cmpsl
cld
stc
push
iret
pusha
aas
mov
sbbb
pop
shrb
xlat
xorb
jle
inc
dec
movswl
cmp
inc
inc
aaa
addr16
lahf
mov
or
negb
sti
mov
dec
mov
sti
mov
leave
jmp
pop
jge
mov
pusha
cwtl
movsl
mov
insb
std
or
outsb
lahf
in
lock
repnz
add
jno
jne
in
mov
cmpsb
xchg
pop
divl
arpl
cmpsl
mov
imul
cltd
stc
les
es
aad
inc
push
push
xchg
cmp
pop
mov
mov
cmpl
nop
mov
into
xlat
dec
cmpsb
mov
shrb
and
mov
ds
imul
popf
in
dec
inc
and
and
imul
cmp
mov
insl
out
push
insl
decb
xlat
icebp
les
xor
add
jmp
ljmp
shlb
in
jo
in
clc
or
ret
stc
push
inc
dec
mov
jge
cli
and
cwtl
inc
rcl
test
repnz
mov
or
iret
and
shll
mov
jge
inc
pop
inc
mov
stos
ret
nop
test
jae
mov
mulb
sub
jne
or
pop
and
jecxz
mov
aas
mov
popa
pop
popa
test
sbb
mov
stos
ror
xchg
out
scas
adc
jae
gs
icebp
lahf
mov
adc
dec
subb
or
ss
test
cmp
xor
jmp
inc
jl
dec
xor
les
in
lret
test
and
orl
dec
ret
pop
leave
inc
call
faddl
mov
mov
test
sahf
cmp
out
jge
jecxz
push
pusha
push
adc
cmp
stos
xchg
rcr
test
incl
test
sub
data16
push
jmp
jno
das
mov
sbb
dec
cmp
cmp
int
mov
cli
lahf
in
dec
stos
lods
mov
prefetch
in
sbb
jbe
int3
inc
aaa
in
mov
call
sbb
mov
pop
loop
pusha
sub
xchg
loopne
dec
cs
stos
sbb
mov
das
and
or
and
add
add
xlat
fdivrs
stos
in
mov
mov
jp
inc
ljmp
mov
sti
in
add
lea
test
xlat
pop
sahf
in
xor
sbb
xchg
in
sti
sbb
ss
out
pop
stos
mov
add
and
jno
and
fimull
push
cwtl
pop
aad
push
jae
inc
imul
mov
aas
inc
ss
mov
dec
inc
or
sub
sbb
loopne
fwait
cmpsl
lcall
jmp
in
test
xchg
mov
test
xchg
test
dec
imul
bound
pushf
pushaw
sub
xchg
mov
mov
jne
mov
cwtl
mov
lods
les
adc
xor
sbb
xor
or
xchg
loope
mov
sub
cmp
inc
loope
test
pushf
mov
push
fcoml
xor
ljmp
lret
in
fidivl
das
sarb
sub
rcr
dec
pop
xlat
push
jbe
pop
add
call
ret
mull
jp
mov
cmpsb
fisubs
mov
arpl
pop
adc
loope
inc
lods
and
xchg
mov
jb
and
clc
mov
movsb
sub
dec
cltd
test
mov
dec
jno
mov
cmc
xchg
int3
jle
inc
mov
fmull
pop
in
adc
cltd
and
push
adc
gs
xor
in
scas
xor
push
dec
pop
ds
push
fisttps
lds
lds
sub
and
pop
fimull
mov
into
and
inc
out
test
xor
jle
jne
and
das
xchg
pop
addr16
add
shlb
rolb
fldt
push
mov
dec
add
int
push
push
js
sbb
dec
inc
vmptrld
dec
negl
mov
mull
xchg
leave
push
sub
xchg
sbb
mov
xor
cltd
sub
aam
in
dec
jno
jmp
and
imul
sub
enter
lret
sub
insb
jmp
pushf
out
int3
cmp
or
call
and
cmp
in
or
dec
addr16
ss
cmc
iret
sub
mov
ja
mov
dec
xchg
cltd
add
and
sub
sub
loop
bound
icebp
sub
das
pop
mov
sbb
inc
jle
sbb
fsubs
stos
insb
mov
scas
ret
mov
arpl
je
mov
out
cmc
push
cld
push
or
ret
add
fwait
aas
fadds
pop
add
mov
pop
jae
pop
imul
shl
fs
clc
xchg
pop
mov
dec
push
and
jb
cmp
xchg
pop
stos
sar
jns
jb
sbb
or
add
jbe
rcr
loopne
mov
mov
adc
xlat
push
mov
dec
roll
es
int
das
lods
jb
lock
xor
out
mov
inc
push
insl
pop
popf
lds
test
xchg
push
cmp
jge
lret
jle
or
push
add
or
fsubr
xor
je
scas
iret
pop
jno
test
test
pop
push
sti
imul
sahf
mov
sbb
push
adcl
sub
mov
jp
xor
jge
xor
lea
xchg
inc
das
jecxz
jno
std
pushf
xchg
adc
jns
lods
inc
or
test
loop
sbbb
outsb
popf
pop
xchg
jl
mov
push
cmp
iret
push
arpl
dec
jne
imul
ljmp
mov
xchg
cmc
fstl
mov
inc
inc
loopne
or
scas
shl
dec
in
cmp
jle
xor
or
adc
stos
das
mov
adc
pop
cs
push
ljmp
movsl
in
fsubp
sbb
sahf
stos
fwait
mov
cmc
sbbb
imul
shrb
pop
sbb
pop
ret
dec
push
mov
jae
jle
sub
push
and
fldl2e
sbb
sbb
test
xor
pop
out
scas
or
es
push
mov
inc
adc
rcrl
aaa
daa
scas
movsb
arpl
sbb
nop
test
rorb
sub
jp
stos
push
xchg
mov
mov
mov
inc
pop
stos
or
sub
clc
lock
mov
mov
fsubr
fisttpl
sbb
lock
ss
test
lahf
jecxz
or
stc
insl
adc
es
xor
jno
push
call
xchg
jp
mov
xor
and
push
outsb
inc
pop
cmp
cltd
adc
push
scas
mov
ret
mov
fisubrl
jnp
sub
frstor
push
cmp
cli
test
insl
jbe
rol
inc
daa
mov
sbb
imul
fsubrs
xchg
fs
ret
xchg
add
mov
shlb
loope
pop
inc
addb
push
dec
repz
mov
lods
add
add
aam
inc
lcall
jnp
aad
xor
repnz
xor
fwait
scas
loop
xchg
insl
outsl
loopne
loope
stos
sub
dec
and
repnz
lock
cmp
xor
mov
mov
jmp
pop
push
push
jae
add
fistl
aad
and
xchg
pop
mov
addl
xchg
es
cmp
ret
pop
mov
sti
and
xchg
jmp
cmp
imul
cmp
fs
dec
fiadds
xorb
fstl
fsubrl
test
push
adc
dec
subl
imul
movsb
or
jno
xor
cltd
sahf
repnz
aaa
lock
cwtl
neg
adc
xor
test
lahf
pop
stc
outsb
inc
int
ljmp
testb
inc
ret
dec
test
cwtl
ficompl
mov
repnz
cmp
xchg
loop
shrb
adc
mov
or
cmp
out
xchg
sbb
pop
clc
and
xchg
push
cs
out
and
repz
xchg
sub
push
ret
idiv
sbb
fistps
ljmp
pusha
push
in
lea
mov
out
jns
mov
mov
mov
add
lcall
and
sbb
into
dec
and
xchg
loope
sbb
out
inc
daa
adc
adc
cmp
ja
movsl
and
scas
xlat
scas
les
jae
mov
cli
add
cmp
or
mov
jg
and
insb
repz
cld
mov
lods
push
inc
inc
sti
xchg
outsl
out
push
int
jno
push
jecxz
fistpl
xchg
out
mov
je
mov
jb
hlt
jecxz
incl
fisttps
dec
pop
and
push
aas
jnp
and
clc
stos
lcall
sti
sub
and
xchg
xchg
hlt
xor
inc
mov
cmpl
fmull
xchg
shl
rcll
daa
pop
test
inc
cmp
adc
sbb
xorb
xchg
shll
adc
andl
ja
add
std
mov
cs
fdivl
rcll
cmp
dec
pop
mulb
aas
pop
jle
pop
or
or
inc
push
cmp
adc
leave
daa
inc
aam
out
icebp
or
loope
lret
lahf
imul
dec
sub
push
or
dec
cld
push
sub
pop
mov
pop
fstp
mov
cmpsl
call
scas
aaa
mov
mov
push
hlt
out
jns
sbbb
fiaddl
push
cwtl
push
add
test
adc
ja
mov
sub
cmp
mov
adc
push
call
mov
inc
mov
out
lcall
xchg
jno
in
pusha
repz
cmp
or
xchg
jl
fidivl
lods
adc
xor
jb
lret
jecxz
test
lods
pop
inc
xor
inc
mov
aam
pop
xchg
jo
popf
mov
push
add
xchg
xchg
lret
mov
mov
popa
in
xor
fs
mov
out
mov
push
in
lock
mov
fucom
std
dec
jle
mov
pop
rcr
aam
mov
adc
inc
aaa
imul
lds
dec
jns
jge,pn
inc
stos
sbb
lods
and
addl
les
sbb
xchg
cmpl
mov
adc
push
adc
fwait
repz
cmp
leave
cmp
lock
imul
xchg
or
push
mov
push
sub
or
and
cmp
lret
mov
cmp
popf
adc
adc
idivb
and
lock
in
xchg
pop
pop
jne
mov
and
fsubrl
xor
xchg
nop
pop
pop
push
arpl
cmp
lcall
pop
gs
repz
mov
jns
adc
mov
lds
xchg
fs
loope
xchg
mov
jp
cmc
cli
inc
int3
ret
outsl
pop
push
lock
pop
sbb
push
mov
adc
sti
hlt
test
mov
in
sub
xor
ret
dec
scas
sub
jne
out
mov
pop
lret
testb
add
cld
sbb
xlat
mov
pop
pop
pop
xor
movb
or
in
sbbl
cmp
in
xchg
xor
fcoml
movsb
pushf
inc
dec
mov
mov
rclb
aas
adc
xchg
mov
ljmp
mov
sub
sbbl
mov
push
rcrl
pop
pushf
cmp
data16
lret
mov
jle
jno
jns
in
add
add
stos
sbb
mov
mov
aam
inc
sbb
cmp
sbb
mov
sub
in
daa
int
and
testb
lret
inc
and
icebp
inc
sbb
inc
mov
aaa
out
mov
and
jbe
js
dec
mov
arpl
xchg
inc
fdivrl
movsb
push
mov
outsb
std
mov
mov
fdivrl
sbb
and
ret
and
arpl
test
das
in
call
cmp
adcb
test
jg
inc
mov
lods
mov
test
sub
sarb
sub
loopne
int3
lcall
xchg
inc
mov
jl
adc
jno
ds
es
and
bound
inc
adc
mov
pop
adc
jmp
sub
movsl
xchg
ret
sub
xor
cmp
std
sbb
into
push
sbb
dec
fsubrl
imul
call
add
mov
cmp
mov
std
mov
push
jmp
cs
in
pop
cltd
xchg
cmp
jb
dec
sub
mov
out
inc
nop
add
jb,pt
es
lods
xor
xchg
loopne
xorb
mov
or
repnz
jo
push
lea
cmp
aam
daa
ja
mov
mov
leave
jl
sahf
fcmove
test
cmp
inc
sbb
sub
cmpb
add
mov
push
in
daa
cld
xor
movb
rcrl
or
sbb
aad
out
repz
repz
inc
push
sar
aas
jp
inc
aas
sub
stos
arpl
bound
imul
fsubr
testl
jo
push
jno
cmp
addr16
in
mov
cmovg
sbb
iret
popl
sbb
out
adc
lret
inc
mov
xor
xor
adc
jp
mov
rclb
bound
dec
add
xor
fsubs
xor
hlt
mov
ret
stos
sub
mov
orb
pop
pop
out
jp
scas
enter
dec
and
in
or
mov
or
stos
in
xchg
and
ljmp
dec
or
insl
mov
cmovs
or
arpl
pusha
push
xor
mov
in
roll
cmc
adc
fwait
pop
mov
repz
lret
ds
lods
jg
or
popaw
ja
roll
jg
cwtl
add
jnp
test
aas
insl
or
or
jge
push
mov
mov
add
cmpsb
sub
fucomi
ds
pop
shrl
jb
gs
or
aas
mov
xor
fdivrs
cltd
or
add
insb
movsl
mull
mov
mov
test
clc
repz
push
sbb
xchg
adc
adc
inc
add
and
cmpsl
pop
mov
icebp
shrl
je
imul
and
pop
sub
stc
jne
cli
push
xchg
sarl
xchg
mov
add
cmpl
sti
lcall
mov
arpl
add
es
mov
mov
adc
jae
xlat
or
inc
push
lea
jnp
mov
and
aam
mov
sub
mov
in
orb
out
dec
jno
daa
icebp
mov
decl
xchg
inc
ret
xchg
mov
cmp
inc
shrb
inc
addr16
add
xor
dec
xchg
dec
add
jno
enter
mov
pop
scas
inc
jo,pn
out
mov
mov
mov
cmp
jge
fildl
jecxz
mov
push
rcl
and
mov
mov
mov
lock
pushf
mov
cmp
sub
cmc
xor
outsb
pop
xchg
outsl
mov
cltd
pop
ljmp
xchg
jo
cltd
and
push
or
cmp
push
adc
fsubrs
mov
jo
cld
push
inc
or
scas
bound
cmp
xor
jge
add
mov
push
pop
mov
shrb
pop
pop
pop
cltd
iret
or
or
and
and
sarl
adc
jge
movsl
dec
neg
and
push
sub
cld
pop
outsl
test
push
add
push
pop
mov
push
push
movsb
jns
sub
pushl
push
push
mov
std
arpl
gs
stc
xchg
stos
int
imul
inc
mov
outsb
ljmp
stos
xchg
xchg
jmp
ret
or
jbe
loopne
mov
and
call
xor
push
push
outsl
int3
pushf
pop
adc
pushf
xor
xchg
mov
shlb
dec
or
push
loopne
fwait
push
iret
outsb
stc
or
inc
mov
lock
jg
fwait
fwait
push
or
in
add
jb
jae
jo
inc
cmpsb
imul
arpl
or
call
popf
fcmovu
and
sub
dec
adc
fsubrs
cmp
das
clc
push
fisubrl
xchg
outsb
sub
jb
add
out
jae
cmp
std
stos
adc
dec
xorb
sti
popa
xor
scas
lds
mov
test
sbb
ds
fwait
pop
fidivs
lds
jge
cmpsb
sub
icebp
dec
ficoms
mov
sbb
push
jg
cmpxchg
xchg
cmp
popa
mov
in
popa
xchg
push
sub
imul
mov
ret
add
aam
nop
mov
or
negl
mov
pusha
and
xchg
test
sub
push
add
or
adc
sbb
scas
lods
insb
lret
fs
mov
lea
push
xor
inc
dec
fcmovnu
sarb
lock
ret
sub
dec
scas
xor
xchg
jge
pushf
out
imul
cmp
imul
cmp
int3
fnstenv
fistl
pop
das
mul
xor
xchg
push
sarl
lahf
mov
inc
idivb
xchg
or
xchg
cmp
out
aad
sbb
idiv
rcrl
test
sub
pop
mov
jae
cmp
sub
lcall
jg
repz
mov
gs
inc
push
cmp
cmpl
test
mov
xchg
cmp
xor
push
dec
cs
xor
jg
in
out
lock
mov
pop
lock
mov
outsb
cmc
add
addr16
lret
xchg
jge
push
mov
repz
cmp
aaa
rolb
push
add
push
imul
mov
lods
fnstcw
jmp
cs
aad
mov
push
add
adc
fistps
test
sub
add
jbe
ret
aas
xor
jne
inc
pop
inc
mov
and
push
ljmp
lret
sbb
mov
dec
lds
fadd
inc
adc
inc
mov
lock
popf
mov
push
xor
xor
or
add
jle
mov
or
outsb
cmpl
clc
pop
test
ret
pop
shll
xor
movsl
iret
xor
sub
insl
mov
sbb
outsl
stos
jmp
cmpsl
jg
dec
xchg
js
xlat
in
call
hlt
or
cmpsb
or
mov
dec
cs
jns
mov
push
dec
mov
fstps
loope
inc
cmp
push
scas
and
pop
pop
aaa
std
mov
adc
cmc
mov
jl
inc
fwait
add
cmp
or
daa
push
xor
movsl
lock
push
repnz
lods
int3
sub
out
mov
cwtl
push
add
addl
mov
pop
aaa
and
iret
push
call
nop
cmpb
xchg
dec
imul
loope
ljmp
xrelease
call
mov
dec
sahf
cmp
pop
xor
push
stc
add
dec
addb
push
or
adc
sbb
insb
cwtl
xchg
xchg
or
lret
fiadds
std
mov
cwtl
fwait
cmp
push
mov
pop
xor
int
movsb
push
and
inc
mov
lahf
pop
pusha
and
lods
lret
cld
sub
xor
fnop
lcall
xor
negl
ds
out
nop
adc
inc
pop
adc
or
cmp
lock
out
fcompl
xchg
xchg
fwait
sub
sbbb
imul
push
cld
dec
push
out
stc
xor
imul
sbb
stos
into
inc
mov
test
vpsubd
mov
jge
cltd
fdivs
pop
cltd
ret
push
fcoml
jns
mov
dec
mov
xor
pop
adc
sbb
fidivrl
rorb
stos
fldt
xchg
mov
mov
ds
repz
or
stos
push
mov
mov
fsubrp
out
jecxz
shll
xchg
hlt
mov
add
sub
and
in
enter
div
xchg
jo
aam
cmc
arpl
sub
inc
out
cmpsb
fists
push
out
popf
or
aaa
mov
shll
mov
adc
ds
xor
cmc
mov
inc
lret
mov
fisubrl
or
dec
mov
sbb
arpl
push
orb
pop
mov
jns
or
decb
out
pop
dec
dec
in
mov
int
mov
jb
adc
insl
push
cmp
mov
fs
pop
loop
stos
int
adc
pop
and
gs
inc
in
mov
mov
xchg
mov
fidivrl
sbb
push
lret
jle
mov
ss
dec
andl
fstpt
sub
add
roll
jle
imul
test
sub
add
sar
mov
mov
test
jnp
xchg
xchg
mov
adc
leave
mov
dec
mov
adc
dec
inc
and
out
cmp
xchg
adc
aas
sub
data16
push
das
addr16
pop
fmulp
sbb
inc
inc
and
sbb
enter
fnsave
pop
xchg
mov
xlat
jns
mov
in
adcl
mov
sub
and
jno
cmp
pop
andl
inc
xor
data16
pop
je
sbb
xchg
mov
faddp
pusha
dec
lods
andl
loope
xchg
sahf
pusha
mov
cmp
std
jae
aam
push
xor
pop
pop
sub
jmp
cwtl
shrb
rclb
inc
adc
lcall
pushf
xchg
ret
arpl
mov
and
adc
subl
pushf
sahf
fsts
enter
leave
sarb
popf
stos
pop
xchg
push
xchg
pushf
ljmp
mov
mov
jl
outsb
dec
push
cld
je
pop
popa
icebp
or
mov
add
push
out
daa
int
mov
push
imul
or
and
daa
mov
sub
cltd
ret
sbb
movsl
insl
es
inc
les
sub
sar
rcr
ret
xor
lods
int3
push
mov
push
out
and
cmpsb
shll
inc
and
aam
imul
add
jns
xorl
mov
adc
std
cmpb
cs
pop
mov
fmul
or
dec
cmp
lds
fildll
jo
bound
or
std
add
xchg
stc
aas
leave
fldenv
mov
pop
hlt
sub
scas
jnp
and
rcrb
repnz
jno
notl
mov
hlt
mov
jl
mov
dec
xor
add
cmpsl
je
loop
mov
pop
dec
shr
lock
call
sbb
mov
jne
jns
adc
frstor
mov
lods
pop
or
and
movsl
stc
mov
adc
sub
gs
pushf
adc
sbb
cmc
xchg
push
lret
and
fstps
les
pusha
cs
push
xor
jae
jmp
or
sbb
into
cld
mov
cltd
dec
aad
fnsave
xor
xchg
mov
mov
imul
adc
mov
push
je
mov
cmp
cmp
shll
push
xor
sbb
push
mov
je,pn
in
inc
or
jae
stos
data16
sahf
push
push
sub
mov
inc
aad
jg
inc
pop
mov
mov
inc
xchg
imul
sub
imul
sarb
insb
sbb
test
sub
rorb
sbb
cwtl
xlat
and
mov
enter
or
mov
popa
jbe
divb
rcll
fwait
arpl
mov
cmpsl
call
xchg
xchg
sub
sub
push
out
mov
mov
data16
aam
jbe
cmp
movsb
add
out
lock
inc
pop
inc
adc
fxch
lea
insl
inc
movsl
xchg
mov
imul
lcall
jmp
data16
minps
test
cmp
fcomps
pop
lods
xchg
ficompl
call
adc
xor
add
add
or
xor
popa
and
lea
mov
mov
pop
repnz
leave
lret
pop
pop
in
test
fbld
mov
xchg
or
mov
push
inc
xchg
clc
push
xchg
je
mov
lahf
ljmp
mov
dec
clc
push
mov
mov
push
aaa
scas
fstl
mov
fdivr
mov
or
sbb
sub
pop
loop
lcall
scas
shll
fmul
shl
lcall
push
inc
bound
ds
jecxz
jmp
addb
add
cmp
clc
mov
fcoms
cmp
xchg
xchg
cmpsl
and
jl
dec
leave
mov
mov
dec
pop
sub
cli
icebp
inc
dec
jl
cmc
pop
out
mov
pop
mov
icebp
mov
loope
outsb
ficomps
or
idivb
jb
imulb
pshufw
roll
xchg
shll
loop
imul
mov
int
lret
les
cmp
mov
jg
xchg
out
rolb
dec
xor
sub
adc
fcoml
xor
pop
and
sahf
cmp
jae
je
mov
dec
pop
mov
pop
jne
cmp
push
pop
jo
jae
int3
test
push
test
mov
adc
arpl
cmp
ret
das
leave
aas
push
pop
scas
add
sub
xor
lret
stos
xchg
rolb
pop
adc
add
mov
popa
repz
pop
jbe
ljmp
inc
dec
dec
dec
xchg
hlt
push
xor
pop
in
arpl
cs
jbe
sub
testb
dec
shll
xor
jbe
xlat
mov
xor
xor
loope
imul
ds
lahf
and
mov
pop
hlt
push
cmp
add
adc
inc
jnp
cltd
scas
add
loop
push
push
or
inc
inc
sti
or
pop
mov
xchg
sahf
push
aam
mov
imul
addb
scas
sbb
xchg
cltd
cltd
fidivl
jl
in
mov
outsb
into
mov
iret
ss
mov
inc
popa
sub
dec
ljmp
pop
jnp
daa
dec
push
pop
mov
cmp
into
das
mov
fsub
pushf
test
or
imul
mov
enter
insb
or
popf
int
push
push
dec
aam
icebp
sub
stos
in
scas
loopne
je
fadds
fwait
subb
push
or
push
dec
es
jnp
cli
mov
out
xor
mov
dec
div
push
ja
mov
dec
jecxz
lock
enter
push
mov
arpl
inc
xchg
aaa
les
into
cmp
jb
add
push
call
jg
jp
mov
push
mov
les
jle
stc
ret
into
or
inc
icebp
dec
and
lds
dec
mov
mov
cltd
outsb
cmp
xchg
mov
adc
cwtl
sub
jg
push
aad
jno
mov
nop
ss
add
repz
ja
push
mov
icebp
scas
stc
sub
incb
cmp
popf
test
mov
enter
jbe
xchg
pushf
lea
icebp
cmpsl
adc
call
lret
pop
mov
lods
jnp
or
jae
xchg
inc
xor
mov
mov
mov
pop
or
pushf
fs
out
cltd
cmp
mov
out
movsl
stc
dec
add
das
lret
mov
pop
dec
loopne
lods
xor
outsb
mov
js
out
fidivs
imul
and
loopne
loopne
fstp
mov
mov
jnp
sarl
push
andb
std
mov
lret
pop
inc
mov
sub
adc
or
pop
mov
mov
adc
mov
in
mov
fsincos
jno
pop
les
int3
arpl
cmp
sub
jb
sub
mov
out
mov
cmpsb
xchg
jns
int3
push
stos
dec
mov
into
movsl
jbe
dec
add
in
dec
pop
hlt
ja
jmp
mov
cltd
jl
or
movsb
or
cmp
pop
mov
cs
add
orb
repnz
fcomp
cmovs
or
dec
es
pcmpgtd
hlt
ficoms
scas
pop
or
xchg
xor
and
adcb
pop
xor
push
add
mov
scas
jg
stc
lods
cmpl
leave
and
dec
cmp
cltd
inc
adc
fimuls
pop
mov
sbb
add
out
inc
mov
adc
sub
rclb
add
or
iret
mov
xlat
sub
adc
test
and
cltd
inc
pop
into
push
fdivrp
hlt
inc
inc
mov
pop
push
sti
scas
jmp
mov
xchg
or
pushf
push
and
xchg
insl
push
adc
inc
or
cmp
push
adcl
insl
inc
dec
mov
out
cmc
push
jmp
mov
jecxz
in
add
cmp
imul
mov
xor
dec
pop
dec
scas
push
icebp
or
pop
loop
push
arpl
adcb
imul
je
mov
hlt
jne
aas
cmp
add
push
lahf
enter
xchg
cltd
dec
fcmovb
enter
mov
inc
lret
xchg
sub
addl
in
sbb
sarl
ss
mov
repz
add
lods
stc
shll
xor
sub
mov
push
addr16
sub
sti
push
pop
xchg
stos
aaa
cli
jns
lahf
rcl
dec
cmp
inc
push
dec
push
mov
or
mov
mov
mov
nop
cltd
insl
mov
mov
jmp
je
or
cltd
push
scas
fs
mov
lods
outsl
sbb
stos
shll
repnz
psubw
mov
inc
cmpsl
pop
xor
pop
pop
fsubs
xlat
imul
fisttpl
jp
pop
sbb
xor
ss
mov
call
test
pop
sti
jnp
inc
mov
mov
psadbw
and
aad
xchg
push
pop
jnp
dec
or
or
les
out
in
mov
xor
nop
data16
sub
scas
xor
addr16
idivl
stos
je
insl
in
mov
xchg
push
or
nop
sti
jecxz
dec
js
mov
cmp
pcmpgtb
adc
stc
cmp
ds
xor
aad
into
cmp
repz
dec
push
daa
mov
jne
ljmp
push
aad
mov
out
pop
inc
inc
xchg
fisubl
xchg
dec
fimull
sbb
and
dec
dec
and
and
mov
popfw
fisubl
or
inc
jmp
ret
out
call
mov
aas
test
test
test
jne
xchg
clc
jnp
sub
sbb
jbe
mov
pushf
mov
sub
sbb
sbb
ficoml
scas
in
pop
out
jno
gs
or
fmull
pop
aad
sbb
jmp
xchg
std
repz
int
jp
mov
nop
mov
inc
xlat
fsubrp
push
inc
popa
jno
fadds
addb
add
loope
stos
xchg
push
mov
aam
imul
mov
stc
and
jne
mov
cwtl
adc
add
dec
dec
mov
out
add
cmp
jecxz
mov
dec
shlb
fldenv
mov
sub
dec
jl
push
mov
fdivl
movsl
andb
lcall
sub
adc
mov
leave
sub
inc
ss
adc
setnp
mov
imul
add
popf
in
in
cmp
cvtps2pi
pop
out
push
cld
push
jecxz
sbb
mov
or
xchg
js
iret
lahf
mov
pop
mov
cmp
xchg
push
int3
mov
pop
add
cmp
fldenv
outsl
das
jl
jle
inc
xchg
jl
adcb
xchg
mov
xor
mov
out
jns
pop
push
inc
shrb
jg
enter
cmp
dec
pop
or
mov
mov
aam
adc
mov
ret
mov
push
orb
out
sbb
bound
sub
gs
ss
push
enter
shl
mov
rolb
out
repnz
ficomps
int
inc
pop
inc
xchg
icebp
aas
inc
cmp
sbbl
ja
inc
inc
add
fdivl
or
enter
pop
ficompl
ret
xorl
sbb
sub
loop
jmp
stos
loope
mov
lcall
xlat
ss
shrl
xor
fimull
lea
inc
js
loopne
rclb
imul
call
inc
leave
hlt
xchg
arpl
gs
cmp
mov
dec
mov
push
mov
sbb
es
pusha
scas
outsb
inc
lret
lcall
pop
inc
fldenv
cmp
je
call
adc
cmc
es
bound
ret
scas
push
aaa
push
adc
dec
decl
jle
fisttps
call
sbb
movsb
lods
sbb
push
or
mov
xchg
push
repz
push
pop
mov
add
adc
inc
bound
xchg
dec
repz
cmc
mov
dec
jmp
iret
dec
push
jns
dec
nop
adc
jb
int3
push
add
xor
pusha
sub
mov
lahf
nop
scas
dec
push
add
pop
cld
adcb
sub
rorl
or
es
mov
push
mov
jns
mov
mov
inc
test
lods
pop
mov
pop
jb
sbb
das
shr
jne
dec
out
add
dec
enter
sub
xor
jmp
mov
inc
pushf
cmp
je
es
adc
push
or
xorl
fimull
pop
les
xor
and
lods
pop
mov
js
xchg
xchg
dec
mov
test
fwait
push
mov
add
adc
out
push
xchg
movsb
inc
xor
into
idiv
cld
cmp
mov
sbb
adc
insb
sub
lret
push
fistpll
popa
gs
push
jl
insb
sbb
paddb
mov
push
cmp
xorl
icebp
and
ss
ret
cwtl
dec
inc
xchg
fsubl
pop
dec
jge
in
leave
jae
cmp
mov
xchg
cli
lcall
pop
mov
dec
jb
xor
xchg
aaa
lds
ljmp
fcmovnu
cmp
fcmovnu
repnz
sbb
adc
leave
jmp
push
shrl
pop
mov
xor
loope
in
out
into
aam
loopne
push
pop
sbb
jle
add
into
adc
push
das
outsl
xchg
inc
movsb
cmc
jmp
xchg
mov
repnz
jmp
test
jno
dec
jnp
lahf
cmp
push
and
cmp
xchg
mov
out
test
push
lret
push
insl
insl
iret
outsl
mov
jnp
stc
icebp
shlb
mov
icebp
daa
and
dec
sub
insl
xor
jp
mov
jecxz
std
cmp
cmp
lea
sub
out
inc
cmp
mov
vmwrite
pop
stos
inc
ret
pop
clc
sbb
mov
add
mov
daa
sub
ds
rorl
cmpsl
push
add
and
gs
mov
mov
xor
mov
imull
inc
pop
inc
sub
ficoms
hlt
imul
lcall
stos
inc
ljmp
shl
cli
xchg
ret
stc
daa
aad
fcmovnu
xchg
cli
pop
and
hlt
inc
jle
lret
sti
pop
pop
gs
sbb
cmp
ret
cltd
fiaddl
mov
lahf
push
clc
repz
dec
call
xor
add
cld
jne
mov
loopne
push
adc
sbb
jl
sub
fldenv
data16
fcmovnbe
leave
nop
xchg
addr16
xchg
cmpsb
lods
inc
rcrb
xor
adc
test
and
fwait
cmp
xorb
xor
xor
movsb
addb
xorl
mov
jns
je
out
pusha
jecxz
lods
pop
adc
add
out
xchg
mov
mov
enter
xchg
in
sbb
jb
repnz
sbb
push
push
add
push
enter
movsb
imul
arpl
cli
add
stos
fidivrl
mov
aam
test
loope
hlt
pop
cmpsb
lock
loopne
outsb
inc
sub
xchg
les
les
test
pop
jnp
jnp
mov
xchg
xor
mov
scas
or
sbbl
cmp
vpcmpgtw
dec
mov
ss
lock
adc
push
sti
mov
shrl
out
dec
dec
je
js
dec
not
pmaxsw
fstpl
mov
jp
mov
fstl
ret
mov
or
mov
int
and
outsb
std
add
mov
pop
cmpsb
out
stc
daa
xor
mov
aaa
aaa
jb
sub
into
adc
mov
sbb
sbb
mov
imul
fcoms
add
mov
mov
inc
mov
lds
xlat
fcomps
mov
cld
in
xor
mov
jno
sti
xchg
insb
insl
outsb
out
inc
movsl
addb
lret
sbb
jmp
mov
fs
jmp
mov
out
cmp
cmc
aam
mov
fisttpl
cmp
cmp
daa
movsl
icebp
xchg
outsb
and
movl
cmpsl
jge
shrl
cltd
sub
pop
pushfw
nop
and
lock
fisttpl
add
mull
mov
pop
jmp
push
fldl
mov
adc
xchg
fadd
jbe
or
push
inc
push
outsb
dec
es
sbb
test
and
adc
sbb
in
aas
mov
std
push
dec
pop
or
loopne
mov
aaa
ss
ljmp
ficompl
in
push
stos
or
into
int
dec
sub
jne
out
jo
fbstp
mov
and
bound
mov
jae
lds
arpl
xor
jmp
test
out
and
adc
inc
jl
jmp
and
js
shll
mov
loope
cmp
popa
xchg
in
and
cmpsl
mov
mov
fmul
push
icebp
xor
loopne
jmp
popf
test
lea
test
cwtl
dec
in
jg
shl
gs
fsts
mov
es
or
push
sub
in
mov
stos
push
xchg
loopne
popf
pop
mov
lods
inc
pop
sub
insl
mov
imul
dec
ret
adc
bound
fldcw
repz
cmp
mov
and
adc
stos
sub
int3
adc
inc
leave
xchg
clc
movb
jmp
pop
std
sbb
jecxz
or
and
sub
std
clc
shlb
push
loop
dec
cmpb
sbbb
jno
mov
mov
pushf
mov
xor
gs
push
xchg
insb
les
cltd
aaa
xchg
and
dec
sub
xchg
pop
or
or
ret
out
jle
xor
push
scas
mov
popa
sub
sub
daa
ret
loope
xchg
sbb
in
xor
and
testl
fidivrs
dec
jl
add
and
mulb
out
and
push
or
fisubrl
inc
stos
stc
jmp
pop
repnz
or
sub
xor
icebp
sti
lds
cmp
jmp
xchg
sahf
pop
mov
adc
stos
mov
into
mov
push
or
mov
nop
scas
mov
sub
lds
orl
xor
inc
imul
mov
loop
pop
mov
rcrb
pop
les
push
mov
imul
adc
push
pop
sbb
mov
lea
test
loopne
xor
test
movsb
mov
lret
cmc
inc
push
push
mov
xor
xor
js
jb
mov
fnstenv
cltd
ljmp
test
lock
pop
push
adc
dec
and
outsb
bnd
test
jbe
sub
pop
jp
fs
cmp
js
push
fcoms
mov
mov
jmp
lock
dec
mov
js
and
mov
sbb
jae
imul
pop
add
icebp
push
outsl
lods
pop
mov
pop
fxch
cmpsb
dec
or
add
cltd
call
lret
xchg
push
sarl
movsb
dec
scas
push
mov
je
mov
and
add
push
pop
rcrb
mov
inc
sub
mov
xchg
and
pop
add
es
sbb
movsl
hlt
xchg
jge
aaa
stos
and
adc
sbb
arpl
das
popa
cmp
push
jecxz
mov
jl
aam
mov
jne
pop
xchg
dec
divb
ljmp
les
inc
aam
shlb
and
bswap
mov
fwait
pushf
pushf
dec
xorb
cmp
das
inc
ljmp
addr16
and
enter
stos
out
mov
fwait
lcall
xchg
or
push
adcl
xchg
xor
lea
mov
xor
lods
out
lods
mov
inc
lock
mov
jne
push
inc
pop
int
lods
or
xchg
call
lock
adc
repz
push
cld
mov
jle
adc
cmpb
mov
push
clc
loop
sbb
jne
das
aas
push
mov
test
repz
in
jg
xlat
addl
mov
in
jle
int3
aam
lock
or
jae
cld
iret
adc
push
and
mov
fstps
add
stos
outsl
ljmp
stos
pop
dec
ret
xchg
out
ds
leave
pushf
ljmp
and
push
pop
addl
jbe
int
pop
lret
push
sbb
testl
and
fcmove
pop
xchg
test
xor
xchg
mov
jge
push
mov
test
jb
aam
mov
xor
movsl
std
pop
leave
push
stos
lock
imul
imul
mov
cwtl
adc
mov
xchg
aad
ss
xor
imul
insl
mov
rorl
and
scas
pop
pop
fmulp
add
adc
pusha
xchg
call
adc
xlat
push
fwait
shrl
ds
jecxz
das
fisttps
lods
xor
sti
xchg
mov
adc
sahf
movsl
arpl
imul
rcrb
movb
dec
insb
repnz
or
bound
dec
add
inc
mov
cmpsb
xchg
shrb
mov
fdivr
mov
fucom
cmpsb
andb
ss
push
inc
cmp
lods
inc
cmpsl
xor
ret
mov
mov
sti
idiv
xor
iret
jmp
popf
out
ljmp
adc
into
push
shr
cmpsb
outsb
roll
xchg
push
push
subl
ljmp
xchg
movsb
dec
mov
out
test
popa
sub
jmp
xor
cmpb
or
push
in
sub
jne
mov
add
loope
xchg
pop
es
pop
scas
jno
pusha
inc
btc
repz
dec
mov
jecxz
mov
cs
clc
js
push
shll
jp
insl
leave
popf
jl
pop
cmpl
jmp
sbb
addr16
jne
and
gs
arpl
int3
push
mov
push
fwait
and
inc
mov
inc
mov
mov
mov
sub
pop
fsubs
fisubrl
add
pop
sub
ljmp
and
lock
xchg
push
push
in
sbb
test
std
sarb
mov
sbb
fnstcw
gs
ret
and
out
jmp
loope
jle
adcl
or
cld
into
into
xor
imul
xchg
xor
int3
enter
test
jmp
test
sub
dec
fistpl
insl
mov
stos
lcall
mov
enter
call
fs
je
repnz
mov
cmp
jne
andb
test
dec
jo
and
jmp
test
push
fsts
jae
shll
or
pusha
std
cmpsb
add
xchg
and
xchg
sub
lds
fstpt
inc
into
push
call
int
out
pop
xor
add
cli
repz
bound
xor
pop
sbb
sbb
and
shlb
adc
jmp
leave
xchg
add
out
xchg
test
mov
jnp
or
call
cld
aam
mov
out
incl
js
aaa
in
add
fcmovnb
and
loopne
mov
pop
sub
out
imul
int
push
clc
push
add
pop
test
stos
daa
cmpsb
mov
cmp
imul
add
je
add
shlb
imul
dec
mov
loopne
inc
clc
mov
xchg
idivb
out
call
je
iret
addr16
xchg
xor
rcrl
shr
xchg
out
inc
shll
rorb
cld
jns
adc
xchg
or
pusha
xor
xor
inc
or
mov
out
sahf
cmp
sbb
cmp
bound
arpl
call
aad
jecxz
popf
popl
xchg
sub
mov
arpl
mov
jo
mov
cltd
leave
push
not
stos
xor
rclb
push
repnz
nop
jge
fst
mov
mov
push
rcrl
nop
mov
dec
cld
dec
scas
in
xchg
leave
jg
imul
das
filds
aam
or
mov
inc
fsubs
mov
rclb
in
and
das
hlt
jne
push
sti
lret
lods
pop
call
ja
inc
subl
dec
sahf
fdivrs
cmp
andb
mov
add
push
mov
jecxz
ljmp
shlb
and
mov
cmp
into
mov
dec
adc
je
inc
xor
cmpsb
xor
xchg
and
das
popf
mov
sub
loope
sub
cmpsl
mov
adc
dec
and
std
rolb
cs
mov
xchg
sbb
cmp
xor
mov
test
jle
das
and
test
push
or
pop
push
mov
mov
dec
lret
push
jmp
outsl
or
add
imul
cmp
or
data16
test
vsqrtss
popf
adc
leave
add
mov
mov
fcmovnu
xchg
enter
orl
xchg
aaa
es
jle
data16
push
fwait
stc
or
out
lock
mov
pop
mov
lods
pop
inc
movsb
sub
mov
icebp
pop
cmp
cmp
out
jmp
movsl
xchg
mov
inc
and
add
cwtl
add
mov
out
js
shrb
inc
stc
push
wbinvd
lahf
inc
jne
outsb
push
bound
or
xor
xor
mov
out
and
cmp
xchg
adc
scas
mov
mov
add
arpl
imul
lret
aam
or
sbb
cmp
fcmovb
mov
test
loop
push
jno
fsubrs
mov
cmp
inc
add
xor
xchg
xchg
dec
rolb
iret
cmp
or
fnstcw
mov
add
inc
mov
stos
pop
in
mov
cld
sbb
mov
mov
stos
mov
fyl2xp1
jmp
es
arpl
shll
jnp
cmc
mov
lret
xchg
pop
xchg
sub
orb
xor
lods
scas
mov
loopne
jg
adc
fmuls
mov
repz
jae
bswap
bound
out
mov
sysret
xor
xchg
xor
xor
movsb
bnd
lret
mov
pushf
sarb
dec
adc
mov
aas
stos
push
adc
bound
add
pop
stc
nop
lea
inc
cwtl
xchg
je
push
pop
je
imul
jle
cs
fmuls
inc
xor
mov
adc
inc
push
lods
dec
out
icebp
or
mov
push
push
cltd
and
mov
mov
jp
mov
cmpl
int3
rclb
pop
adc
and
jle
lcall
lds
cwtl
cmpsb
adc
call
je
outsb
lods
mov
and
inc
les
lahf
stos
xchg
mov
repnz
mov
xor
jb
jo
stc
in
jle
loope
test
int
outsb
sub
movsb
loop
loopne
mov
repz
jecxz
sub
daa
outsb
in
xor
pop
lcall
jmp
test
ret
sbb
test
mov
into
sub
xchg
adcl
cmp
lods
std
pushf
lds
in
inc
insb
pop
enter
sub
stos
test
and
lds
bnd
ss
inc
out
and
push
dec
icebp
adcl
adc
test
repnz
xchg
les
into
or
jae
push
andb
clc
jns
cmp
mov
or
inc
dec
repnz
jns
scas
dec
push
psllw
lds
push
pop
subb
lods
insb
mov
pop
ret
mov
adc
out
lods
adc
ljmp
push
lret
push
mov
or
sub
cltd
fcomps
ret
iret
lods
jb
mov
dec
add
push
push
lea
es
inc
push
cltd
adc
jl
movsl
and
add
out
xchg
sbb
stos
lods
popa
cmc
hlt
dec
pop
push
stos
rcll
inc
cld
lock
push
pop
aam
pop
mov
lret
mov
lock
sarb
out
pop
xor
test
and
out
push
dec
test
out
sbb
mov
lret
pop
into
adc
xchg
testl
out
gs
push
movsb
stos
fucomip
inc
fdivr
mov
mov
mov
mov
mov
sub
inc
sub
mov
inc
lret
xor
clc
push
dec
adc
out
xor
outsb
sbb
and
cmp
dec
mov
and
push
sahf
in
pop
lcall
test
out
sahf
stos
stos
cmp
jb
cmp
mov
pop
pop
and
and
jl
xchg
cmc
loop
movsb
stc
push
cmp
lret
xor
pop
es
aaa
pop
fstpl
lock
dec
pop
lods
mov
fisubrs
push
lock
fdivl
out
add
mov
loop
cmp
inc
mov
iret
sbb
pop
cmp
rcr
jp
clc
ficoml
xor
xor
cmpsb
stos
pusha
jno
out
adc
hlt
fildll
sbb
cmp
fwait
leave
mov
nop
outsl
and
push
sar
insb
les
push
add
mov
xchg
pop
push
cli
sbb
mov
mov
xorb
dec
adc
cmp
incb
pop
xchg
push
ret
cli
adcl
loope
movsl
ja
push
in
mov
out
push
sbb
divb
jo
or
lods
xchg
xchg
cwtl
insl
lahf
repnz
mov
cmp
je
sti
push
and
int
subl
mov
pop
repnz
nop
xor
ret
jae
push
pop
in
push
inc
leave
pusha
jmp
xchg
imul
aas
sbbl
into
nop
mov
negb
cli
jns
pop
push
sub
icebp
and
andb
lods
hlt
scas
leave
test
mov
inc
jge
adc
enter
pop
test
mov
cmpsl
mov
push
mov
xor
int3
insb
xor
arpl
xchg
xchg
out
dec
or
shl
or
enter
dec
fwait
or
mov
jns
or
adc
dec
fstpl
lods
cs
mov
lock
loop
xchg
dec
sbb
inc
in
arpl
fimull
fwait
push
cmp
or
mov
mov
cli
rclb
lea
or
test
cmp
mov
aaa
push
scas
adc
mov
cmpsb
or
js
roll
inc
in
inc
inc
and
int
movsb
loop
pop
imul
inc
jb
push
pop
cmp
inc
xchg
nop
std
fcomps
stos
push
insl
orb
pop
lock
jno
push
sbbl
std
divb
xchg
mov
loope
jecxz
test
repz
inc
mov
enter
mov
aas
mov
pop
xchg
fwait
sub
xchg
lods
int
sub
cli
cli
jne
cmp
gs
cld
rclb
jnp
es
mov
insl
mov
mov
and
stos
icebp
paddsw
pop
lods
ret
ficoms
xchg
mov
xlat
push
pop
lahf
mov
jnp
inc
mov
loopne
mov
and
mov
sub
xor
movsb
lock
out
shrl
lret
lods
push
in
cmp
or
fs
lret
cmc
adc
out
and
sbb
lret
pop
lea
xchg
shll
cmpsb
cmp
outsl
in
jge
sahf
jo
jmp
lcall
stc
outsb
cmpsb
jmp
push
xor
jo
xchg
dec
testb
mov
mov
int
jl
sbb
mov
dec
test
mov
push
xor
add
lret
lret
mov
sahf
xchg
or
enter
add
pop
cwtl
scas
mov
dec
es
xchg
in
xchg
cmpsb
mov
xor
ret
lods
adc
add
sti
xlat
shll
ljmp
pop
fld
iret
xchg
in
add
mov
jecxz
sbb
xor
out
xor
dec
test
pop
cmp
lods
bound
dec
adc
mov
mov
add
icebp
mov
or
or
je
lock
mov
jmp
int
repz
int3
in
lcall
or
xchg
mov
lea
stos
pop
popa
fstpl
inc
push
mov
add
push
pop
mov
cmpsl
imul
mulb
pop
mov
mulb
lock
aaa
loop
mov
dec
or
push
lods
pop
sub
loop
xchg
lea
sbb
test
nop
mov
inc
or
mov
push
in
std
aad
sbb
xchg
insb
push
push
inc
cmp
pop
xlat
mov
shrl
fildl
mov
js
pshufw
push
mov
xchg
jmp
pop
lds
repz
xchg
jnp
jecxz
jae
dec
xor
incl
mov
jbe
fdiv
or
pop
sahf
fwait
shll
dec
cmp
pop
push
in
xor
ret
mull
inc
xlat
mov
cmp
or
mov
call
and
incb
and
out
adc
pop
xchg
sub
cmp
bswap
xor
lods
in
sbb
jmp
in
push
mov
pop
dec
jns
inc
imul
mov
mov
cmp
test
imul
xor
into
test
subl
test
cmp
jg
sub
je
lock
xor
pop
or
xor
dec
ja
je
dec
or
add
cwtl
adc
add
sub
jg
aas
pop
mov
or
shl
jnp
sbb
adc
mov
cmpsb
inc
xchg
and
xchg
out
push
orl
mov
fs
push
adc
inc
pop
mov
xchg
stos
les
xor
lods
sub
sarb
sti
lahf
roll
scas
mov
mov
inc
movsl
dec
movsb
fsubr
inc
aam
sbb
mov
insl
ss
sbb
shl
push
fcompl
xor
fcoms
in
nop
mov
aam
add
loop
ljmp
popa
cltd
aam
pop
mov
adc
push
jbe
xor
in
out
icebp
xchg
xchg
popf
lods
xchg
clc
mov
popl
fsts
push
push
mov
pop
sbb
in
mov
adc
sbb
sbb
mov
jno
jnp
idiv
adc
test
rcrb
push
orl
rorl
add
imul
ljmp
jae
daa
cmpsb
pandn
cli
adc
xchg
push
push
es
jo
repz
stos
outsb
adc
sub
jge
xchg
xchg
sub
mov
notb
call
loopne
inc
scas
jb
dec
repnz
mov
dec
adcb
xor
push
mov
cmpsl
jnp
push
test
push
out
cmc
andb
cmp
cwtl
lds
adc
adc
add
pop
jmp
fs
and
or
xchg
and
adc
jg
stos
push
aas
lock
and
roll
xor
xchg
pop
xchg
int3
cmp
pop
cmc
fimull
fcompl
mov
movb
das
mov
inc
adcb
push
stos
je
push
cs
inc
adc
pop
ss
ret
arpl
sbb
test
dec
add
add
incb
or
int3
scas
cmc
xor
jae
test
mov
sub
add
bound
cmpb
in
jbe
andb
into
lods
dec
scas
adc
js
dec
dec
add
bound
lods
sub
outsl
test
fisttps
dec
movsb
cwtl
inc
ss
jb
repz
and
xor
outsl
aad
jp
in
dec
cld
test
std
sarb
jae
dec
stc
int3
mov
and
cmp
lods
inc
sahf
xchg
loope
xor
or
mov
ja
fadds
push
jle
inc
jmp
arpl
pop
mov
add
dec
popf
xor
xchg
aaa
fadd
inc
fsubrs
test
pop
or
loope
mov
jge
enter
or
out
lds
mov
adc
fbstp
pop
scas
or
ret
fcoms
aaa
cmpsl
stc
lods
mov
addr16
jae
cltd
push
sti
xor
fbld
lds
xchg
mov
ja
xchg
sbb
xor
mov
test
pushf
jg
jg
cmp
ljmp
test
in
fwait
stos
jns
inc
popf
lds
and
lods
sbb
xor
ja
insb
push
mov
insb
inc
jbe
fsubrl
cld
iret
daa
aam
loopne
lcall
fistps
lods
in
dec
repnz
pop
sub
mov
lret
bound
pusha
cli
stc
pop
scas
cld
aam
mov
stc
mov
jo
ficoms
orb
pop
adc
adc
imul
xor
imul
mov
js
pop
out
cwtl
dec
fcomps
insl
neg
dec
fstps
sbb
int
shrl
jo
xchg
enter
ljmp
insl
int
in
add
cmp
iret
mov
jle
std
fsubrl
int
scas
xor
arpl
mov
in
sbb
jo
push
dec
cmp
xor
into
mov
cmp
cmp
xchg
pop
insb
mov
xchg
push
out
hlt
lcall
mov
cmp
fidivs
popl
and
jecxz
pop
pusha
inc
adc
mov
xor
xor
adc
int
outsb
jne
jmp
outsb
pop
cmc
loop
call
push
cli
jns
std
insb
adc
sar
xchg
pop
xor
fnsave
jns
jne
sbb
pop
stos
push
inc
ror
dec
stc
push
pop
mov
sub
out
and
je
fsubrs
dec
push
jo
inc
mov
mov
and
gs
push
jns
push
out
ficoms
sbb
out
inc
and
mov
in
fistl
mov
outsl
jle
cmpsl
jne
push
inc
cwtl
inc
jbe
jg
push
andl
cmp
in
xor
fbstp
dec
out
scas
and
shll
aaa
xor
popf
lds
adc
cs
push
mov
cmc
jl
cmp
repnz
es
imul
cmpsl
arpl
std
sarb
inc
lea
sbb
stos
push
cld
or
mov
clc
mov
jbe
pop
int3
ljmp
pop
pop
ret
dec
test
aas
aas
out
lea
pushf
xchg
xorb
and
hlt
add
mov
inc
sti
pop
sub
clc
push
clc
xchg
call
lea
xor
cmp
imul
cmpsb
pusha
mov
fcmovnb
js
xchg
mov
mov
inc
cmp
or
aaa
daa
div
std
add
pop
push
dec
cmp
mov
jmp
outsb
jnp
popf
lahf
pop
mov
sub
and
inc
add
lea
lods
dec
cmp
out
xor
leave
inc
add
popa
cltd
loopne
call
fadds
cld
mov
addr16
out
test
cmp
sub
mov
int3
pop
scas
out
mov
cmp
jne
dec
dec
rcrl
fstp
mov
in
mov
aad
ljmp
dec
test
xor
dec
pop
mov
push
and
scas
push
jp
xor
out
mov
and
cs
jle
scas
adc
into
mov
insb
mov
bound
and
adc
setno
cmp
out
cmp
addr16
push
adc
cmpsb
cltd
outsl
mov
fldt
push
pop
stos
xlat
xor
mov
stc
dec
pushf
and
jecxz
xchg
lret
mul
fstpl
mov
push
and
stc
mov
jp
or
mov
jb
mov
pop
push
data16
cmp
pop
xor
sbb
mov
inc
sub
frstor
mov
cmp
mov
sub
fincstp
popf
pop
mov
xchg
clc
sub
testl
xchg
mov
and
subl
push
jmp
rorb
mov
jecxz
xor
inc
es
push
stc
cmp
push
shrl
cld
cltd
in
xlat
mov
fstpt
repz
jecxz
ds
mov
xchg
add
sbb
and
cwtl
xchg
pop
xchg
int
iret
dec
scas
jmp
and
hlt
mov
pop
aas
jne
repnz
cmp
sub
sbb
jae
jmp
jecxz
xchg
xlat
xlat
sub
mov
xorl
leave
mov
mov
movsb
mov
stos
sarl
sbb
pop
gs
arpl
arpl
adc
mov
imul
enter
shlb
rclb
mov
push
sub
jge
mov
sbb
mov
sbbb
jns
out
aaa
inc
movsl
and
and
and
setg
out
lea
sbb
mov
and
int
cmp
or
push
mov
jnp
adc
clc
jg
stc
arpl
inc
pop
frstor
sahf
rclb
inc
fsubl
jb
mov
jne
jo
mov
out
imul
loop
cld
mov
sub
mov
out
out
ljmp
test
mov
inc
add
or
cli
mov
add
sub
cmpsb
test
sarl
std
push
dec
and
rolb
out
ds
int3
push
int
adc
arpl
out
lock
out
lret
je
dec
out
dec
xchg
push
pop
fdivl
pop
enter
scas
pop
push
subb
pop
inc
adc
jno
dec
xchg
loopne
rclb
adc
es
fdivrp
insl
lret
jbe
sbb
xchg
mov
dec
loop
mulb
or
cli
cmp
pop
imull
xchg
rcll
iret
fcompl
std
push
adc
cmpsl
or
mov
xor
loope
ret
mov
hlt
xchg
mov
sbb
insl
data16
dec
dec
xchg
cmp
mov
xchg
shrl
mov
lret
je
mov
in
and
cld
jno
nop
lods
inc
test
andl
aam
cmp
cmp
mov
mov
or
pop
sbb
lcall
movsb
les
xchg
mov
jge
or
mov
xchg
mov
mov
cwtl
aad
out
xchg
xchg
adc
push
inc
add
xlat
inc
scas
into
test
mov
dec
lock
cltd
iret
cs
mov
div
lea
out
pusha
jle
test
ss
std
iret
dec
fimull
jecxz
mov
jb
xor
scas
fildll
adc
loop
push
rorl
ljmp
decb
aaa
ficoms
cmp
xchg
xor
fistpll
xchg
mov
aaa
pop
push
test
in
mov
dec
jno
sbb
dec
in
xchg
pop
add
xlat
stos
push
enter
mov
mov
mov
cmp
mov
rcl
out
cwtl
xchg
aam
hlt
jnp
mov
mov
js
xor
xor
cmpsl
jae
xchg
aam
scas
mov
es
xor
sub
stos
add
jp
arpl
stos
jg
ss
xchg
test
inc
test
ljmp
mov
jbe
test
jbe
mov
lahf
dec
shll
scas
lea
push
sub
loope
inc
sbb
inc
jp
iret
mov
sbb
mov
test
push
int
int
mov
push
test
dec
addr16
push
test
dec
vucomiss
cmp
int3
imul
mov
call
iret
addr16
sub
int3
mov
cwtl
inc
xor
inc
pop
sarl
jo
and
cld
pop
push
adc
push
scas
insl
cltd
adc
fsts
inc
rcrb
cmpsl
movsb
lret
scas
dec
imul
cmp
in
xchg
mov
cmp
pushf
jmp
push
xchg
adc
pop
sub
jmp
push
outsl
push
and
test
push
push
pop
iret
ljmp
rorl
mov
mov
inc
xchg
je
icebp
je
cmpsl
in
pop
sbb
outsb
cwtl
add
into
daa
out
stc
hlt
and
push
jne
pushf
popa
xchg
faddl
mov
xchg
mov
lret
ffree
pop
test
xor
mov
daa
les
jp
nop
enter
xchg
or
cmc
xchg
mov
flds
stc
rcl
inc
xchg
mov
ja
jns
mov
xor
dec
fs
jbe
fiaddl
mov
push
dec
jne
mov
addl
loope
dec
cmpsb
lret
cwtl
cli
lret
mov
fdiv
jle
and
inc
sub
mov
push
jno
mov
jb
popf
jnp
shr
push
stos
out
leave
adcl
cs
in
das
mov
adc
push
out
sbb
mov
cmp
stos
xchg
adc
mov
mov
data16
xlat
jle
add
clc
fimull
lds
sub
add
ficomps
loopne
mov
dec
jns
cwtl
dec
into
dec
dec
push
jo
or
sbb
sub
repnz
stc
loopne
xor
push
aaa
inc
inc
mov
mov
insl
ljmp
xor
jae
cmc
test
dec
lret
bound
bound
ss
pop
mov
mov
sbb
fwait
lods
fcoms
gs
fdivr
insl
ret
jae
cwtl
mov
test
jg
enter
jae
push
xchg
mov
js
stc
sub
mov
loope
in
insb
cmpsl
xchg
sub
push
std
jle
cs
mov
repnz
jb
mov
pop
inc
mov
mov
xchg
add
and
adc
iret
aam
data16
add
mov
das
scas
pop
jg
popa
xchg
aas
sbb
ss
popf
mov
mov
or
shlb
call
mov
xlat
sub
xchg
es
and
add
add
mov
jl
addr16
mov
pop
ljmp
mov
sbb
mov
push
bound
outsl
mov
cmpsl
stos
enter
mov
out
xchg
pop
mov
xor
mov
dec
insl
addb
pop
into
xchg
ret
fistpl
in
rolb
int3
leave
out
mov
jge
push
test
inc
cmp
stos
xor
sub
sbb
fnstenv
jl
mov
repnz
mov
push
sti
cwtl
sbb
aam
loop
gs
jg
mov
imul
mov
movsl
bound
lods
and
sbb
sbb
inc
out
or
lea
int
les
out
pop
add
ret
outsb
sub
cmp
add
fildl
stos
hlt
jnp
cld
sub
sub
fcmovb
shlb
ret
jle
inc
lds
cmp
add
cmp
pop
notrack
es
and
andl
xchg
js
pop
jmp
xchg
mov
mov
pushf
gs
inc
mov
cli
rep
enter
fdivrs
std
shr
lock
pop
sahf
fwait
xchg
clc
lods
mov
push
aad
or
xchg
lock
insb
adc
shrl
push
inc
jl
outsl
mov
mov
das
or
pop
lcall
test
xchg
cmp
dec
sub
fbld
out
push
out
add
jle
xlat
mov
imul
sbb
popf
mov
pop
gs
int3
call
lahf
push
mov
icebp
push
push
je
test
popf
inc
jecxz
pusha
cmp
aaa
outsb
fisubrl
out
or
jg
pusha
leave
mov
or
jp
je
push
push
cs
adc
push
data16
std
jmp
pop
loop
loopne
and
mov
ja
dec
loopne
and
imul
inc
in
push
cmp
gs
push
inc
scas
nop
inc
dec
mov
test
lea
pop
push
inc
out
and
stc
add
jmp
and
sbb
idivl
mov
adc
mov
and
cld
xor
pop
inc
xchg
sbb
ss
pop
js
cmc
push
jo
idivb
adc
out
xchg
cwtl
ret
aad
xor
in
mov
push
je
mov
test
icebp
lret
adc
ljmp
mov
sub
xor
inc
vpshufd
xchg
push
mov
jl
sub
insl
push
insb
in
hlt
push
in
xor
fstpt
sbb
movsb
fdivrs
xchg
cmpsl
add
in
enter
jnp
add
lcall
or
nop
xor
cwtl
ret
les
cmpsl
insl
mov
cli
pop
cmp
movsb
lret
test
test
jnp
mov
cmpb
fnstenv
inc
repnz
sub
jb
iret
lret
push
bound
hlt
push
cli
js
add
stos
push
dec
pop
sub
imul
sub
fsubr
push
xor
sub
imul
lret
mov
js
inc
pop
or
pop
dec
jecxz
inc
ficomps
add
dec
cmpsl
pop
movsl
or
mov
dec
push
hlt
cmp
sbb
mov
dec
data16
mov
out
ret
mov
and
pop
adc
int3
loop
mov
mov
scas
inc
mov
cld
daa
pushf
xchg
mov
dec
pop
fnstenv
insb
dec
push
mov
xchg
pop
push
sub
pushl
cltd
fbld
test
test
fcomip
sahf
cmp
or
adc
pop
sbb
daa
bound
sbb
xor
cmc
push
dec
mov
clc
aad
subl
adc
mov
das
inc
sbb
push
fisubrs
xchg
rclb
fiaddl
ja
cmpsl
lock
xor
lods
lods
shlb
sbb
lahf
add
movsl
in
pop
les
ret
xchg
sub
rolb
movsl
int
pop
jnp
cmpsb
mov
fs
in
xor
sbb
add
dec
jne
test
push
cwtl
into
stc
inc
xchg
push
cmpsb
cmp
sti
or
bound
pop
mov
shrl
push
add
out
jnp
jns
or
add
sub
pop
int3
sub
mov
test
push
out
ljmp
into
pusha
test
test
cmp
mov
or
inc
test
test
in
adc
incb
pop
out
nop
cld
in
mov
sub
pop
test
push
les
push
mov
jg
sbb
lret
inc
inc
xchg
xchg
gs
ret
push
mov
mov
int3
in
aam
mov
jle
test
adc
mov
add
sub
je
and
ficomps
pop
lret
flds
fisttps
in
dec
shlb
fwait
loope
fimuls
cmp
push
mov
xchg
pop
fcompl
xchg
std
mov
dec
fists
adc
cmp
nop
out
pop
rcrl
sub
inc
xor
push
mov
repz
shrb
push
push
leave
add
mov
js
jae
shlb
xlat
pop
pushf
out
je
mov
cmp
test
jge
popf
push
cmp
fxtract
in
mov
mov
cmpsl
or
stos
out
ss
jge
push
push
inc
leave
ds
mov
lcall
lret
pushf
je
push
adc
xchg
ja
sbb
fnstsw
jae
inc
pop
or
andb
xor
or
mov
out
pop
std
inc
xlat
cltd
jbe
fildll
test
pop
jb
jnp
pop
clc
rolb
pop
test
inc
xor
loop
rdtsc
popf
mov
fldl
fidivrl
mov
jo
jb
arpl
and
and
xchg
lods
mov
test
inc
fildll
icebp
mov
test
mov
and
or
nop
int3
pop
sbb
popf
insb
sub
mov
mov
dec
push
sub
lock
ret
mov
push
mov
mov
ret
jb
mov
push
shll
repz
outsl
cmp
and
ds
or
or
cwtl
imul
mov
pop
add
mov
push
addl
aaa
mov
cs
push
cmp
es
insl
repz
mov
add
cmp
fmul
lea
fcmovu
mov
xor
jmp
es
repnz
insb
pop
mov
mov
idivl
mov
mov
xchg
push
dec
and
int
int3
in
jl
jg
dec
inc
out
das
test
jl
mov
mov
mov
mov
add
pop
pop
ja
fcomi
sub
mov
sbb
out
fmul
movl
das
out
stos
dec
pop
cmp
dec
push
orb
mov
cmpsl
jb
mov
flds
out
mov
gs
out
icebp
rcrb
mov
add
cmp
sbb
repnz
or
leave
dec
pop
aad
es
pop
jmp
divl
nop
outsl
mov
push
mov
roll
cwtl
call
add
lods
iret
hlt
fwait
stos
mov
jg
xchg
ds
shrl
push
divb
sbb
xor
lds
xor
xor
lahf
orl
xor
dec
jmp
jnp
addr16
adcl
dec
es
and
mov
adc
ss
bound
xchg
mov
fwait
insl
dec
test
adc
ret
push
js
rorl
add
out
das
sbb
arpl
xlat
mov
cmpsl
mov
insb
pushf
imul
jns
sub
movhps
push
inc
or
and
sub
aam
cli
cmp
lret
adc
sbb
mov
mov
and
sbb
adc
xor
imul
nop
push
jbe
adc
mov
int3
push
and
jns
or
cmpb
xchg
xor
inc
jno
mov
jmp
cli
call
les
pop
or
and
lret
adc
sbb
add
and
aas
sbb
mov
xor
in
loopne
js
adc
ss
lds
imul
pusha
ds
bound
out
bound
out
sbb
inc
data16
mov
inc
int3
sarl
add
shlb
loopne
mov
mov
and
out
or
das
push
outsl
pop
out
xor
ja
adc
adc
ds
divl
or
inc
push
add
mov
fdiv
cmc
xchg
test
xor
aad
shrb
xor
mov
adcl
sbb
mov
inc
popf
adc
sub
jge
cmp
and
je
inc
inc
outsb
std
aam
push
xor
rcrl
sub
jge
into
movsb
test
arpl
inc
js
out
in
dec
call
push
pop
repz
cmp
shlb
jp
sbb
mov
xchg
adc
sbb
pusha
inc
add
popa
push
push
js
mov
decb
jge
out
xchg
data16
call
inc
cmp
jl
push
inc
lcall
mov
js
shlb
in
dec
mov
loope
mov
pop
mov
push
xor
pop
dec
sarb
das
leave
push
aad
and
sub
in
ja
stos
sbb
ror
daa
xchg
test
sbb
adc
xor
push
cmc
add
adc
aas
lea
call
and
sbb
or
js
repnz
es
iret
push
mov
adc
ljmp
xchg
rclb
and
subb
daa
repnz
divb
inc
or
pop
lretw
jg
push
or
jp
push
cmc
orb
adc
xchg
pop
sbb
jnp
mov
dec
pop
adc
ret
iret
jne
iret
ds
or
mov
int3
fiadds
dec
cs
popl
push
mov
dec
xchg
dec
stos
das
popf
loope
mov
imul
cmp
xchg
scas
fsubrs
inc
fs
test
hlt
mov
mov
dec
fadds
push
xor
cmp
sbb
out
pop
mov
inc
lock
push
popa
pop
clc
sbb
jge
xchg
popa
xlat
or
sub
dec
mov
jbe
iret
xchg
sub
inc
jns
xlat
cltd
movb
lock
aaa
inc
shlb
cmc
mov
shrb
xlat
pop
jecxz
pusha
clc
inc
dec
mov
ficompl
ljmp
stos
notb
mov
pushf
mov
add
xchg
push
and
or
filds
outsl
sbb
adc
add
mov
iret
pop
outsl
jle
xor
sarl
and
inc
mov
adc
inc
leave
nop
hlt
xchg
cwtl
sbb
mov
ja
cltd
xor
movsl
pusha
adc
xor
sbb
mov
dec
scas
xchg
daa
fsubr
mov
negl
sbb
cmpl
mov
and
fdivrs
call
xchg
xlat
jno
flds
or
repz
fwait
das
mov
jb
mov
mov
ljmp
add
in
fsubs
push
mov
sub
insl
adc
inc
dec
dec
add
fdivrl
rcll
or
cs
mov
pushf
jmp
lds
mov
andb
hlt
gs
test
add
loopne
and
pop
call
fldenv
addr16
sbb
xchg
push
in
into
jg
int3
vcvtss2sd
loopne
dec
mov
mov
and
pop
loopne
pop
jbe
dec
and
xor
loope
outsl
lds
lret
mov
and
pop
cmp
cmpsl
cvtdq2ps
xchg
lret
repnz
scas
mov
iret
and
insb
sahf
mov
xchg
into
xchg
call
enter
jl
xor
mov
add
popa
bnd
cmp
neg
xchg
addr16
pop
cli
hlt
sub
addr16
add
lods
dec
xchg
movsb
mov
pop
or
imul
movb
pop
and
mov
out
adc
flds
inc
xor
mov
iret
lock
in
jae
sar
jbe
mov
pop
pop
movsb
adc
ljmp
jnp
out
mov
pop
mov
sbb
cld
ss
cltd
das
xor
sub
pop
stc
jno
rcrl
mov
rcrb
fldenv
and
scas
mov
xchg
inc
lahf
mov
sbb
xor
sbb
xor
and
xor
add
dec
push
sub
push
dec
popa
xor
mov
jne
cld
lahf
and
cmp
mov
jge
sahf
shll
outsl
fsts
and
sahf
push
enter
sbb
dec
shl
test
sbb
pusha
and
or
mov
and
cltd
in
or
popf
sbb
inc
sub
sahf
daa
fdivrs
jo
bound
stos
out
push
adc
sbb
aad
cmp
push
or
jns
stc
jo
fcoms
mov
stos
in
dec
icebp
sbb
sarl
add
lcall
dec
lods
mov
or
pop
je
add
lret
mov
inc
lret
rorb
jno
js
xchg
cmp
push
fcmovnb
adc
lahf
int
cmpsl
stc
daa
shlb
scas
pop
and
repz
and
cmp
scas
aaa
mov
mov
or
fsubr
ds
xor
addr16
imul
aaa
jno
push
sbb
ret
adc
dec
insb
imul
daa
pop
shr
mov
mov
sbb
jb
mov
add
cmpsl
imul
adc
add
push
cmp
mov
jnp
cmp
cmpl
shrb
scas
dec
js
call
shll
cmp
ja
sbb
in
test
inc
jl
xchg
stos
popf
stos
adc
ret
int
sbb
pusha
push
mov
adc
adc
cmp
and
mov
int3
and
in
inc
or
nop
cmc
cmp
jo
mov
adc
je
push
jo
cli
pop
shrb
pop
test
mov
mull
std
add
fisttpl
inc
pop
dec
mov
mov
in
scas
data16
jecxz
xchg
pop
mov
imul
sbb
call
sub
and
imul
and
clc
ror
adc
sub
inc
addr16
test
pop
test
jnp
scas
lret
out
jecxz
or
lea
jno
sbb
cltd
aam
rcl
sub
clc
mov
addb
outsb
push
in
ds
sti
enter
sub
mov
scas
xor
imul
repnz
int
and
mov
dec
mov
cli
and
lods
xor
add
fsubs
mov
mov
cli
push
cld
jecxz
sti
addr16
cmp
cmp
or
popa
mov
cmp
jns
jns
cmp
push
fnstenv
negb
pop
add
adc
popa
jl
inc
loopne
push
cltd
cmpl
xchg
fcoml
jo
cmc
sub
sbb
push
inc
mov
js
mov
and
lcall
pop
inc
roll
jnp
cmp
ljmp
adc
iret
jns
arpl
sbb
clc
or
cmp
xchg
nop
dec
adc
int
sub
nop
lods
scas
xorl
dec
xor
cs
cmp
jb
cmp
clc
insl
fldl
scas
outsb
mov
sbbl
adc
imul
gs
pop
and
adc
fsubr
sahf
cmpsb
fnstsw
cwtl
inc
mov
popf
hlt
mov
aam
mov
outsb
fisubl
push
mov
bound
dec
mov
mov
mov
sbb
adc
mov
xorb
inc
jmp
dec
push
fwait
js
loop
inc
push
cltd
clc
repz
enter
or
push
inc
faddl
pop
pop
sub
or
jge
pushf
pushf
enter
or
jb
xchg
cs
rcrl
clc
mov
fstpt
sub
push
fnstsw
and
push
inc
or
or
fmul
sbb
aad
pop
fnstenv
pop
fnstsw
push
outsl
mov
adc
fistpll
pop
js
shrb
repnz
lock
loop
lods
jnp
loope
hlt
ds
cwtl
cmc
or
fiadds
addr16
xor
inc
ret
fwait
dec
loope
add
mov
mov
nop
movsb
lret
dec
rclb
call
xchg
mov
arpl
popfw
jns
push
fcmovnu
jp
popa
fidivrs
ret
sbb
repz
rcrl
testb
inc
sbb
test
push
mov
mov
scas
push
cmpb
stc
daa
int3
cmp
movsb
push
or
sub
iret
pop
xchg
push
mov
cmpsb
mov
pop
ss
sahf
push
push
test
loopne
mov
xchg
push
add
adc
movsl
es
push
add
sub
inc
xor
scas
cli
xchg
jle
ss
add
sbbb
lock
push
ficoml
ljmp
lahf
repnz
jle
mov
sbb
cwtl
xlat
dec
push
test
cmp
push
cmp
xchg
iret
mov
mov
mov
and
es
stos
jecxz
repz
iret
int3
cmp
mov
jne
lea
iret
std
xchg
cmp
jns
mov
cwtl
pop
push
fs
into
jg
sub
bound
test
jo
jae
jle
adc
inc
inc
pop
stos
sub
sub
adc
cmp
mov
insb
int
or
jb
lret
push
and
ds
add
jge
add
xor
push
test
add
inc
cmp
fidivrl
icebp
int
dec
inc
mov
sti
cmp
or
popa
xchg
mov
cmpl
adc
lahf
mov
jae
push
dec
jge
mov
std
cmp
sbb
mov
scas
insb
add
and
in
call
and
insb
cmp
subl
ljmp
jl
ja
push
sub
leave
mov
add
push
lea
jb
push
scas
sarb
pop
cmpsl
pusha
adc
pop
jmp
icebp
mov
js
lahf
jno
dec
sub
mov
lds
mov
mov
xchg
push
push
aad
js
add
or
inc
in
stos
int
and
inc
mov
sarb
xor
mov
inc
and
jecxz
or
mov
ja
js
and
stc
sub
ss
push
cmp
fiadds
pop
add
sbb
in
in
sahf
jmp
jecxz
je
jo
addr16
adc
push
jge
aad
cmp
jbe
scas
jno
and
cmpsl
fbstp
loopne
adcl
xchg
adc
fadds
cmpsl
or
idivb
pop
aad
bound
xor
mov
in
fimull
lret
movsb
mov
fmull
xor
popa
jmp
pop
add
dec
mov
jge
mov
mov
jae
dec
stos
std
daa
in
or
push
addb
xor
xchg
mov
jbe
sbb
test
pushf
inc
lcall
mov
fsubp
sub
mov
sub
ja
pop
or
sub
dec
jp
dec
push
pop
pushf
mov
mov
adc
pop
std
add
xchg
mov
add
inc
repz
push
pop
outsl
clc
adc
mov
cmp
outsb
sub
adc
jb
jmp
inc
inc
ret
insl
mov
cmp
adc
cmpsl
push
cmpsb
inc
sub
nop
pop
dec
hlt
arpl
aas
ffreep
inc
xchg
push
arpl
jl
mov
stos
rolb
std
add
or
shlb
cmc
rcrl
shlb
sub
jle
outsl
jnp
test
imulb
loopne
test
inc
pop
mov
xor
inc
test
sbb
mov
ja
cmp
xor
cltd
out
jle
mov
scas
ret
or
sub
aaa
xchg
out
dec
imul
es
out
ljmp
lock
adc
shl
adc
jno
mov
jae
dec
or
adc
lods
jo
jnp
jnp
es
jmp
pop
adc
pop
push
call
inc
in
add
popa
leave
shlb
jae
xor
push
fistpll
push
push
ja
inc
xchg
aam
mov
sbb
adc
stos
sub
dec
inc
pop
shl
mov
xchg
push
fsubrl
stc
out
xor
aaa
fbstp
and
push
push
arpl
cmc
cmp
push
cmp
cmp
jp
pop
enter
test
pop
test
pop
push
xor
in
ljmp
movsb
jmp
loope
pop
stc
pop
mov
int
fsts
ljmp
imul
cmp
cmp
pop
pop
and
mov
fs
adcl
pop
xchg
lret
subps
or
jp
xor
push
loope
mov
jge
xchg
jnp
fmuls
xor
popf
pop
lret
xchg
pop
ja
movsl
aam
int3
gs
pop
ss
fdivrl
ja
fstps
push
jl
push
rcrb
shrl
mov
stos
pop
or
cmpsb
mov
bound
aaa
jp
and
xchg
adc
fildll
dec
sarl
stos
pop
mov
mov
insb
lea
add
or
jle
pop
cwtl
arpl
pop
pop
sbb
jno
mov
dec
repnz
push
xchg
jne
dec
push
push
imull
addr16
push
mov
in
adc
sahf
stc
cwtl
sbb
rorl
sbb
add
subl
adc
cwtl
xor
pop
sbb
mov
xchg
lcall
ja
adc
sbb
test
dec
sub
mov
std
outsl
repz
push
loop
je
xor
mov
lret
outsl
rsqrtps
imul
fdivs
stos
out
add
push
lea
adcl
or
add
loope
testl
adc
cmp
add
rol
xchg
cmc
pusha
es
shl
dec
inc
cmp
in
into
ficompl
add
mov
enter
rcrl
push
dec
xchg
add
fdivs
mov
insb
vhsubpd
pause
jne
dec
add
sub
xchg
cmp
sub
jg
jp
enter
xor
popf
imul
jle
pop
ficoml
adc
fisubs
xchg
loope
mov
jge
cli
mov
jno
movsl
xor
les
std
es
imul
lret
or
pop
inc
mov
cmp
test
inc
push
cld
jle
in
mov
aad
orl
jo
lret
nop
xchg
in
xchg
fldt
sahf
out
int3
enter
iret
mov
mov
adcl
and
stos
ret
les
lock
xor
inc
mov
sub
out
inc
or
jge
sbb
dec
and
pop
jno
sahf
dec
test
mov
mov
mov
xchg
mov
icebp
cwtl
sub
jmp
xchg
inc
jge
fwait
jo
and
sbb
aad
add
jle
leave
fs
mov
add
mov
add
call
sbb
sahf
inc
cmpl
sbb
sub
inc
dec
push
hlt
dec
jecxz
lahf
sbb
ss
pop
dec
pop
sbb
mov
inc
loop
leave
mov
int
faddl
lods
lods
stc
nop
inc
aaa
fstl
jl
or
mov
loop
sbb
mov
repnz
das
shlb
pop
mov
and
ss
mov
enter
xor
lock
push
ret
incb
cmpl
mov
inc
push
mov
jp
sub
xor
dec
call
aaa
insb
sti
fldl
adc
jbe
mov
rolb
stos
mov
xchg
xlat
add
shll
ret
mov
cltd
cwtl
imul
insb
data16
stos
push
mov
dec
mov
cmpsl
stc
inc
or
xchg
dec
ret
es
xlat
out
loop
mov
dec
mov
leave
sub
jns
push
or
call
adc
pop
sbb
ds
mov
std
lret
xchg
sbb
jecxz
dec
dec
inc
fsts
dec
nop
jo
jl
adc
leave
and
mov
pop
or
cmp
mov
jle
push
mov
lret
push
subl
jl
addr16
sbb
push
lods
adc
enter
dec
jns
aas
arpl
mov
lahf
jnp
sbb
cmp
inc
fnstcw
fbld
ds
mov
push
jl
jnp
mov
pop
push
dec
aas
imul
cld
shll
xchg
and
mov
push
out
push
push
je
insl
addr16
sub
mov
sahf
and
add
or
mov
pushf
xor
cld
xchg
fsubrp
scas
imul
mov
xor
rolb
lahf
aam
test
inc
sbb
mov
push
clc
sub
lods
and
xchg
jecxz
sbb
arpl
out
imul
adc
push
cmp
andb
ds
clc
push
out
test
ljmp
cmp
mov
adc
scas
adc
sarb
inc
cmp
push
js
loopne
jg
ret
iret
shlb
jno
fadd
add
mov
aas
loope
adc
ja
sbb
xor
dec
sub
pop
pop
inc
or
mov
xchg
mov
pop
or
data16
sahf
lds
loop
dec
push
mov
mov
fisubl
fwait
mov
rolb
xor
push
add
cld
loopne
pop
loop
cmc
shlb
xchg
mov
std
push
out
in
mov
and
int
pop
dec
xor
xchg
mov
bound
fs
mov
out
ja
outsb
into
repnz
adc
jbe
pop
pop
push
sbb
pop
loope
inc
bound
shrb
test
outsb
jo
mov
adc
rorl
negb
fimull
adc
sahf
adc
loop
lret
cmpsb
fstpt
mov
pop
mov
push
inc
mov
mov
out
cmc
stos
mov
ljmp
andl
lret
lea
out
imul
dec
or
xchg
push
das
shlb
hlt
fldcw
jb
cmc
add
mov
push
mov
xchg
lahf
mov
inc
imul
clc
call
in
mov
and
sub
adc
mov
pop
mov
sub
sbb
pop
mov
xor
sbb
sub
or
fadds
add
std
scas
lcall
mov
in
mov
je
sub
adcl
xchg
fwait
mov
sub
xchg
shlb
movsb
xchg
and
clc
out
push
int3
imul
js
add
xchg
push
mov
mov
call
in
xchg
lret
mov
xchg
jno
rdmsr
out
adc
mov
jbe
aas
sub
mov
adc
addr16
sbb
push
jmp
push
sarl
arpl
and
sbb
jmp
sub
repz
imul
call
jae
cmc
negl
ret
push
add
sbb
push
je
add
cld
in
nop
fcompl
push
popa
cld
pop
cmp
jno
popa
mov
pop
rcr
sbbl
jnp
inc
xchg
movsl
mov
push
push
out
sub
cmc
or
push
ja
cs
pop
roll
out
fistpl
nop
enter
jecxz
and
xchg
repz
sbb
mov
imul
enter
push
sbb
and
xor
cltd
mov
sub
stc
test
icebp
icebp
lock
adc
sbb
push
cld
mov
xor
inc
in
stc
pushf
loopne
test
pop
clc
mov
xor
inc
leave
js,pt
and
mov
pop
pop
push
loopne
ljmp
pop
and
xor
pop
cmp
mov
jbe
and
pop
and
mov
mov
sbb
mov
mov
inc
push
add
push
leave
fcoms
xchg
and
cmp
dec
imul
out
adc
sbb
pop
lods
mov
jne
jle
cmp
jbe
xchg
dec
in
lds
aaa
mov
inc
pusha
dec
aas
and
clc
fcomi
out
outsb
cmp
xor
mov
ss
int3
cmp
dec
dec
or
add
xchg
stos
cmc
stos
inc
loop
xchg
xchg
stos
out
jne
xor
icebp
stos
lods
and
ja
cld
loope
sti
sub
pop
std
out
mov
push
into
lahf
adc
imul
stc
das
add
xchg
popa
sahf
repz
xchg
pop
popw
lods
jecxz
test
aas
cwtl
or
pop
fnstsw
sub
je
cmp
scas
inc
test
xor
add
sbb
mov
xor
mov
adc
daa
pop
cs
fidivrl
popf
ljmp
jle
mov
mov
ret
pop
mov
repnz
cwtl
out
outsb
add
fildl
sti
mov
sub
imul
sbb
and
jo
push
imul
push
je
mov
repz
shll
xchg
out
scas
out
lods
sti
aam
mov
and
pop
lea
sub
fs
dec
mov
dec
push
pop
dec
out
and
mov
cmp
xchg
jp
ficomps
jns
sbb
cmpsl
jns
lcall
xchg
or
pop
xchg
lods
xchg
fwait
pop
dec
and
shrl
sub
inc
or
xchg
jnp
sub
lcall
cmp
pop
jecxz
sbb
mov
mov
fmuls
insb
or
mov
xor
adc
aad
ss
fsts
popa
mov
mov
ret
adcb
out
push
pushf
cld
lods
int
add
adc
aam
roll
arpl
cwtl
or
cmpb
mov
add
cld
sbb
adc
and
bswap
std
xor
pushf
mov
adc
inc
lret
mov
in
dec
mov
xorb
int3
stos
out
add
jge
jg
mov
cmp
xor
clc
pop
pop
ss
fstpt
lods
stc
mov
xchg
pushf
loop
xchg
dec
sub
test
jmp
xchg
pop
stos
stos
sbb
dec
cmc
leave
std
lcall
mov
jle
jae
cmp
xchg
jbe
jle
test
jae
ss
add
mov
mov
loop
icebp
sti
mov
dec
and
cmpsl
pushf
xchg
stos
sbbb
les
shlb
jmp
loopne
sbb
jmp
jno
aas
mov
pop
inc
mov
sub
inc
lahf
repnz
out
or
xor
lret
rcll
push
mov
jnp
loope
pusha
addl
movl
mov
mov
add
add
dec
mov
sub
ljmp
aaa
sahf
out
aaa
inc
dec
dec
jae
jbe
sbb
sbb
inc
ret
repz
jbe
mov
aam
std
jle
sub
or
jae
and
mov
js
mov
je
dec
mov
and
insb
or
pop
repnz
outsb
push
adc
out
loop
shlb
mov
jecxz
cltd
jge
movsb
cwtl
pop
xchg
xchg
and
iret
ficompl
pop
inc
pushf
mov
insb
call
cld
aam
or
fnclex
dec
sbb
rcll
ficoml
push
dec
adc
push
sbb
mov
lock
pusha
mov
mov
jle
ret
pop
fs
mov
jns
dec
pop
nop
into
roll
push
pop
inc
adc
fwait
arpl
mov
insb
jmp
push
mov
fcompl
cmc
arpl
cmpsb
adc
add
dec
enter
add
sbb
imul
pop
adcb
je
repnz
divb
loopne
scas
pop
jmp
xlat
mov
outsl
mov
add
ja
dec
ja
in
sbb
mov
call
bswap
jl
movsb
daa
mov
repnz
mov
hlt
cltd
cmc
xor
into
pop
push
mov
xor
jns
mov
mov
adc
fstps
mov
aad
je
ss
test
pop
or
hlt
loopne
in
adc
jmp
out
sub
dec
in
xchg
lea
and
fs
js
mov
xchg
daa
lock
cmp
or
push
mov
or
and
push
arpl
mov
comiss
lahf
xor
sbb
int
scas
cmp
xor
cwtl
mov
cmp
adc
mov
cs
fisubrs
in
xlat
test
cmpsl
jno
repnz
fisubl
scas
rorb
je
lea
or
xlat
jge
orb
pop
aad
stc
imull
in
cs
xor
popf
cltd
test
push
int
in
loope
movsl
fists
sbb
aas
popa
xor
inc
js
dec
das
imul
insb
inc
adc
adc
pop
mov
adc
inc
mov
jmp
pop
aaa
pop
aad
fwait
mov
bound
repz
sub
or
popl
xlat
jae
adc
rclb
bound
and
roll
adc
pop
dec
sti
stc
cmp
mov
lahf
add
pop
fcmovnu
nop
push
sbb
xchg
lods
scas
cmp
jp
leave
push
cmp
inc
xchg
pop
dec
in
pop
xor
mov
push
mov
cmp
arpl
dec
push
call
decl
data16
mov
test
mov
fimuls
jecxz
push
shll
xchg
sbb
cmpsb
or
cmp
fisubrs
or
jl
dec
inc
movsb
icebp
jo
add
ds
rolb
dec
jo
jae
push
sub
or
push
pop
mov
movsb
mov
out
cwtl
imul
hlt
out
cmp
pop
ljmp
xchg
mov
cmc
adc
lea
repz
fwait
cmp
mov
sti
dec
test
xchg
jecxz
ret
mov
sub
mov
and
aas
out
test
js
mov
lds
xchg
sbb
pop
mov
cmp
lods
aad
aas
jae
fsubl
or
filds
cs
add
aam
int
xchg
mov
es
push
inc
push
jnp
xchg
fs
adcb
outsl
jl
pop
pop
cs
xor
test
push
cld
xchg
and
fdivs
adc
out
stos
mov
and
inc
and
outsl
add
jle
testb
lds
outsl
push
pop
dec
xor
fwait
adc
lret
push
or
leave
das
cli
daa
sbb
in
adc
and
xor
fcmovnb
jge
clc
mov
aas
sbbl
or
pop
push
icebp
daa
inc
mov
xchg
cmpsl
lret
and
inc
sub
xchg
std
cmp
mov
test
ljmp
mov
in
addl
fcoml
leave
mov
xchg
in
xchg
jns
cwtl
nop
jbe
xorb
repnz
mov
xchg
cltd
inc
mov
int3
pop
test
test
xor
arpl
jb
popf
lret
adcl
inc
cltd
adc
sbb
jae
xchg
add
mov
sub
sub
test
jmp
jg
inc
cmp
sahf
loop
mov
push
jg
mov
movsb
aas
or
call
pop
dec
jne
mov
inc
cmpb
in
mov
fwait
insb
clc
xlat
cwtl
adc
pop
shrb
lahf
mov
iret
and
sti
mov
je
leave
or
clc
pop
into
pop
arpl
xor
xchg
enter
imul
stos
push
inc
mov
and
jp
jae
in
sub
jl
xor
xor
jno
mov
xchg
cmp
ret
xchg
adcl
xor
jle
addr16
cwtl
xchg
iret
add
fs
adc
les
fwait
xchg
dec
pop
xor
lret
enter
inc
add
sub
pop
pmullw
hlt
mov
xchg
xor
outsb
imul
add
cld
mov
add
xchg
aaa
aas
jl
lods
push
lods
popa
xchg
xchg
scas
inc
into
sbb
jnp
add
ret
test
adc
movsb
cld
dec
addr16
mov
cmp
jne
or
es
sub
shll
inc
and
lret
push
jl
enter
and
mov
popf
inc
and
xchg
nop
and
mov
outsb
cmpsb
cmpsb
and
or
nop
pop
out
insb
hlt
je
sbb
fsubrl
mov
stos
mov
jo
ret
and
cld
jns
push
dec
aas
sub
and
dec
adc
ja
xor
outsl
sub
jae
xor
rcrb
mov
test
adc
lock
fmul
push
popa
in
adc
fcmovnbe
popa
mov
scas
inc
daa
orl
nop
addr16
pop
sbb
adc
clc
test
lret
es
aam
lret
fcomps
jnp
inc
aas
outsb
sub
and
test
ret
inc
aam
mov
popl
stos
pshufw
pop
cmc
xchg
out
sbb
or
mov
test
pushl
int
sub
jo
mov
stos
shll
and
push
push
xchg
push
inc
pop
mov
mov
rolb
adc
pop
mov
cld
add
xor
and
cmp
int
mov
mov
mov
aad
inc
adc
sub
adc
lods
cmp
stc
fistpll
aas
mov
rcrb
push
mov
test
int
push
or
incl
outsl
pushf
enter
xchg
ret
lock
jne
cmp
jne
repnz
jo
sub
jg
daa
xor
xchg
dec
outsl
jno
mov
nop
ja
pop
into
and
decb
imul
inc
and
fwait
addl
dec
xor
mov
jo
xchg
mov
scas
in
or
xchg
scas
pusha
les
mov
or
stc
je
int
sub
cmp
jmp
cli
repz
repz
pushf
fwait
dec
fcomi
in
sbb
mov
cmpsl
hlt
sub
ljmp
pop
movsb
add
out
arpl
xchg
add
rcll
jns
rorb
add
ds
lahf
iret
fdivrp
and
pop
dec
pushf
pop
ja
hlt
lcall
dec
out
and
sub
mov
cmp
insl
test
ljmp
loop
scas
dec
pop
sbb
mov
lock
xor
js
cwtl
xchg
push
adc
xchg
jnp
int3
shll
inc
fwait
mov
pushf
ficoms
shlb
mov
or
js
repz
scas
xor
sbb
cltd
fcmovu
sub
pusha
fdivrl
lret
xchg
repz
or
push
add
imull
and
lret
enter
jb
jle
inc
mov
aaa
cmpsl
jns
xchg
adc
ja
dec
scas
iret
shlb
les
adc
aaa
adc
and
push
mov
push
in
hlt
mov
push
push
push
in
pop
mov
mov
rcll
cltd
push
sub
or
push
add
mov
outsl
sbb
mov
sbb
add
xchg
aaa
pusha
sbb
jns
lods
or
data16
push
cld
fisubrl
lret
or
xchg
popa
cmpsb
mov
mov
push
push
xchg
jb
mov
xchg
push
je
scas
pop
nop
xchg
jle
sbb
push
cmp
pop
dec
cmp
inc
scas
or
std
xor
jge
ja
inc
test
xchg
mov
adc
add
cs
call
out
mov
push
test
fisttpll
ss
popf
clc
inc
jl
inc
mov
mov
aas
sbb
sbb
ret
xchg
imul
clc
fs
sub
loope
dec
cmp
mov
xchg
jecxz
jge
fidivl
inc
inc
cs
cwtl
lret
dec
dec
jo
xchg
fbstp
lret
negb
cmc
or
roll
pop
xor
and
into
pop
mov
jne
mov
sbbb
mov
mov
xchg
ja
mov
xchg
push
icebp
mov
fisttps
repz
push
cwtl
push
or
sbb
mov
lcall
adcb
dec
pusha
or
jg
inc
cmp
add
pushf
into
jae
sub
scas
je
mov
popa
out
imul
loope
imul
cmp
arpl
fsubs
jno
aaa
fsts
xchg
cli
imul
dec
mov
jmp
and
fcomps
mov
sub
stos
cs
notl
xchg
call
cmpsl
ret
addr16
outsb
lcall
push
adc
sbb
sbb
dec
jo
add
insl
mov
mov
adc
cmovns
add
dec
sbb
insl
outsb
or
nop
pusha
xchg
pop
cmp
movsb
jl
add
pop
adc
dec
ljmp
inc
scas
jp
sti
pop
fs
xor
pusha
mov
xchg
pop
andl
add
aad
push
push
dec
shll
mov
in
xchg
cmp
jmp
ret
orb
add
popf
cmp
shrb
pop
dec
push
fs
push
push
clc
insl
icebp
into
nop
jg
or
mov
clc
cmpsb
or
cld
sub
daa
push
pop
jo
jmp
dec
in
pop
popa
enter
inc
pop
xlat
test
ret
sub
dec
and
je
mov
add
xchg
daa
aaa
fldt
ret
aas
cs
adc
dec
movsl
dec
xchg
push
pushf
iret
add
xor
dec
leave
xchg
xchg
sbb
pop
daa
inc
stos
and
sbb
pushl
sub
and
jns
push
inc
xlat
out
ret
stos
inc
jo
and
adcl
xchg
sbb
pop
lods
sbb
aas
mov
push
popf
ret
ret
pushf
push
je
mov
or
test
cmp
mov
cmpsb
jo
gs
in
xchg
dec
lea
in
cmp
out
mov
stc
mov
clc
pop
or
inc
fwait
sbb
dec
daa
loop
sbb
test
movsb
loop
rcrl
jae
jbe
shlb
dec
lea
mov
sbb
and
movsl
pop
xchg
rol
jg
clc
cs
pop
or
daa
and
add
enter
je
imul
cmp
imul
call
sbb
dec
mov
push
test
adc
notb
enter
outsb
addr16
and
test
rcll
movsl
insl
dec
inc
shlb
push
cmp
pop
rol
fst
inc
jg
insl
imul
repnz
or
xor
fnsave
rorb
or
shll
stos
lock
push
mov
dec
std
jl
adc
sti
mov
sbb
mov
in
das
and
pushf
pop
xchg
dec
xchg
and
mov
jno
out
inc
cltd
fistps
push
or
xchg
pminub
or
cmpsb
mov
pop
test
pusha
fwait
inc
aas
insb
pop
and
aaa
iret
out
jne
jno
ljmp
lods
sysenter
leave
ficomps
andl
negb
xlat
cwtl
sub
add
nop
cmc
xor
fsubr
jne
sub
pop
das
xchg
cli
popa
jmp
test
push
icebp
sub
cmp
sub
pop
jmp
dec
sub
xor
mov
fildll
test
inc
push
dec
inc
scas
xchg
xchg
das
sbb
jno
out
sbbl
cmp
cmpb
sub
ret
pop
xor
pop
clc
pop
xchg
neg
xchg
sbb
fidivl
mov
ret
pop
and
mov
aad
rcr
mov
cmp
mov
imul
in
test
pop
aam
stos
incb
mov
repz
xchg
and
decb
pop
imul
mov
in
lret
xchg
je
jmp
pusha
cwtl
and
and
mov
push
or
inc
leave
jno
sub
adc
addr16
lods
mov
stos
pop
sub
lods
idiv
movsl
jb
pop
pushf
or
das
xlat
inc
push
jmp
hlt
push
xor
mov
xchg
jne
xchg
imul
insb
cwtl
sbbl
ror
sti
mov
fstl
push
push
jo
idivb
pop
and
cmc
add
xchg
in
inc
fldt
es
stos
push
stos
add
sub
add
pop
pop
pushf
les
rcpps
sahf
std
andb
push
add
cli
sbb
jecxz
and
mov
imul
or
sti
pop
or
mov
mov
sub
mov
and
lods
jl
mov
add
jecxz
and
mov
adc
mov
jns
push
test
inc
aaa
or
mov
out
icebp
mov
psubsw
xchg
popf
xchg
jb
mov
sti
push
or
bound
jge
lods
pop
lods
xchg
icebp
jno
adc
xor
mov
pop
faddl
adc
pop
or
ja
call
popf
xor
dec
fdiv
test
jo
scas
mov
fisubrs
sub
shr
imul
pop
test
ffree
addb
push
sbb
aam
jnp
dec
inc
adc
inc
and
je
into
dec
icebp
push
jecxz
test
add
or
aam
push
pop
jecxz
ja
ds
leave
pusha
mov
rcrb
jmp
xchg
insb
das
xchg
jle
test
mov
push
fistpll
pop
mov
jle
cwtl
stc
stos
repnz
mov
add
and
fwait
cltd
mov
pop
out
or
pop
rcrl
pushf
pushf
mov
mov
fsubp
or
adc
test
dec
adc
jne
dec
test
push
loopne
pop
sbb
pop
test
jmp
in
fs
lock
mov
lahf
inc
cmp
or
imul
outsb
mov
hlt
pushf
dec
in
adc
cmp
repnz
arpl
xor
push
push
loope
xchg
jmp
jnp
and
mov
jge
pop
mov
aam
pop
pushf
loope
jge
cld
mov
inc
int
xor
xor
or
xor
shrb
xchg
mov
cmp
loop
xchg
mov
dec
and
dec
or
adc
jle
aaa
cltd
addl
cmc
dec
ret
sahf
arpl
rol
mov
scas
mov
adc
js
addl
sub
jae
inc
daa
outsb
mov
jg
outsb
js
stos
iret
movsl
orb
out
adc
addb
mov
xchg
xchg
imul
int
mov
push
adc
inc
call
jno
push
sarb
and
das
sbb
adc
mov
or
shll
add
jle
xor
inc
mov
inc
mov
std
push
pushf
pop
rcll
fcmove
inc
dec
mov
imul
sbb
mov
icebp
add
cmp
or
in
dec
in
sbb
adc
je
js
dec
jmp
xlat
push
push
es
jp
sbb
arpl
inc
aad
mov
icebp
jg
sbb
inc
or
hlt
pop
jne
insb
pusha
es
cld
fildl
cmc
iret
sbb
jecxz
out
test
jbe
inc
shrb
jno
mov
xchg
push
lahf
mov
loope
lcall
call
iret
jmp
lahf
cmpsl
stos
adc
push
dec
xor
ret
test
pop
test
daa
inc
or
pusha
cwtl
xchg
inc
in
or
cmp
push
mov
call
adc
cmp
xchg
movsl
mov
lret
or
fisubs
dec
add
divl
and
insb
or
testl
inc
popa
jbe
outsb
imul
xor
or
dec
mov
bound
cmp
iret
jmp
imul
or
pop
fld
pop
sbb
cmp
xchg
push
loope
call
xor
jg
test
mov
mov
test
leave
sub
enter
dec
lcall
pop
enter
inc
lds
jne
or
jp
mov
jecxz
cli
pop
xchg
loope
add
arpl
xchg
ficompl
mov
int3
pop
xchg
outsl
ret
sub
sub
pop
jl
mov
jbe
add
loope
xlat
pop
add
or
add
outsb
cwtl
or
sbb
jae
jnp
aas
and
in
into
mov
out
cwtl
or
lds
sub
jl
jb
cmp
mov
adc
push
dec
xchg
push
add
xlat
and
dec
push
pop
mov
add
in
mov
sub
lock
push
pop
dec
mov
pop
sti
jl
ret
add
dec
test
enter
cmpsl
nop
and
dec
cmp
into
inc
add
push
jg
jecxz
jle
call
inc
fs
xchg
add
pop
fcoml
dec
lods
loop
repnz
mov
or
pop
add
outsl
lea
xor
outsb
pusha
jne
js
into
sub
cli
fs
stos
mov
in
mov
dec
lods
inc
sbb
jno
repnz
pop
scas
mov
jg
aaa
cli
popf
jl
out
pusha
sti
add
xor
jo
jo
cltd
adc
es
pop
xor
ret
add
lahf
rcrb
shufps
arpl
or
pop
stos
les
jp
mov
xor
xchg
mov
aas
xchg
in
mov
inc
cmpsb
xlat
mov
outsl
sbb
call
dec
xor
inc
mov
xchg
mov
and
cmp
adc
mov
fldln2
loope
fmuls
lea
fidivrs
ljmp
mov
xchg
aam
cmp
push
data16
mov
xchg
push
rcrb
dec
out
aaa
sti
and
mov
dec
call
or
mov
movsl
mov
add
lret
xor
nop
xor
aaa
pop
jle
flds
xchg
out
sbb
leave
stos
fdivs
scas
and
incb
out
jecxz
leave
stc
inc
sub
jecxz
push
add
out
cmp
movl
mov
push
ljmp
and
roll
xchg
fimuls
movsb
cmp
stos
pop
jp
mov
fldl
lods
dec
dec
mov
loopne
lock
data16
mov
out
nop
sbbl
push
fisttpll
sub
addb
out
dec
clc
js
cmp
inc
xchg
loopne
xchg
gs
dec
mov
inc
and
lahf
push
adc
mov
or
pop
mov
sbb
push
add
adc
or
int3
mov
les
adc
sub
mov
dec
cltd
xchg
dec
sub
dec
push
test
xor
sub
mov
fldln2
cmpsb
add
sti
or
clc
cmp
mov
push
pop
mov
lods
out
jg
or
pushf
push
mov
adc
xchg
mov
push
push
aad
pushf
cltd
cmp
test
mov
pop
xor
lret
stos
jne
dec
cmp
lahf
xor
xchg
push
sti
testl
lret
fcoml
inc
mov
int3
push
data16
lods
ret
xor
fcoms
aas
pop
fistps
sbb
sbb
repnz
cmpsl
rorl
mov
xor
sbb
out
loope
fildl
ret
sub
sbb
mov
pop
mov
sbb
aas
fsubrp
inc
adc
sti
pop
cltd
lea
sub
sti
xchg
mov
dec
das
cmpsl
outsb
dec
jecxz
xlat
or
sub
out
scas
push
and
xchg
incb
cmp
sbb
xor
dec
cmp
dec
xorl
adc
inc
je
add
pop
add
xchg
mov
pop
jae
cmp
sub
je
lcall
jb
cltd
sub
jne
pop
cmp
das
fs
sbb
stos
jns
xor
iret
push
push
lcall
addr16
xchg
inc
enter
and
add
cmpb
or
push
or
dec
repnz
mov
pop
mov
mov
jmp
inc
mov
test
mov
sbb
fcompp
scas
dec
outsb
test
jnp
jmp
mov
and
xchg
jge
xchg
mov
xchg
fidivrl
mov
rorl
mov
mov
inc
mov
or
jo
jmp
sbb
inc
je
das
or
mov
cld
cmp
mov
ret
mov
and
fidivrl
lret
imul
push
adc
es
in
lods
and
sbb
clc
movsl
xchg
pop
out
sti
imul
bound
je
cmpsb
notb
int3
jb
loopne
jne
cltd
sbb
ds
sbb
test
inc
cmpsb
loope
jp
outsb
xchg
push
int3
sbb
popf
loop
lds
sbb
stos
inc
pop
idiv
push
sub
push
push
imulb
jmp
test
dec
add
pop
js
xor
arpl
jle
lods
mov
xchg
mov
cltd
aad
mov
insl
sbb
out
movsl
jge
cli
shll
xchg
mov
pushf
inc
push
or
and
movsb
mov
xor
lahf
inc
cmp
push
cld
dec
int3
std
xor
mov
cmp
mov
and
hlt
js
xlat
pusha
das
aaa
dec
push
xlat
mov
mov
test
push
sbb
add
or
mov
leave
jb
mov
ds
movsl
es
xchg
ss
popa
std
push
fcomps
scas
and
ss
push
or
xchg
mov
push
pop
fisubrs
arpl
pop
adc
fidivs
pop
mov
mov
adc
xchg
movsb
psubsb
inc
xor
sbb
imul
pop
mov
cmpsl
pop
lds
cmp
jns
xor
dec
outsb
mov
jmp
imul
cltd
and
aas
adc
sti
icebp
call
daa
ljmp
jbe
scas
jl
nop
jne
popf
add
mov
cmp
das
sbbl
add
repz
dec
push
cmp
pushf
sbb
lcall
mov
dec
mov
cmpsb
test
repnz
add
loop
or
sub
pushf
cltd
and
cmp
sbb
shlb
shl
and
mov
inc
mul
aas
stc
out
inc
mov
jns
sbb
test
imul
push
sahf
test
inc
jbe
aas
leave
mov
nop
inc
popa
lea
hlt
inc
fcomps
movsb
sbb
pushf
xor
mov
repz
pop
gs
bound
test
xchg
vxorps
icebp
adcl
iret
or
mov
cmp
jmp
in
int3
pop
pop
push
push
dec
jge
test
mulb
lea
in
jmp
shrl
insl
sub
push
shlb
dec
dec
jcxz
popf
lods
sbb
icebp
cmp
data16
inc
sahf
lods
cwtl
push
scas
lods
lods
pusha
inc
mov
call
inc
dec
lock
jo
outsb
incb
sti
out
pop
fidivl
add
dec
fwait
adc
mov
xlat
jp
cli
imul
push
jg
adc
lock
hlt
notl
loop
push
lcall
cld
fucomip
pop
pop
xor
sbbl
xor
jl
ret
dec
fmulp
push
mov
loop
ljmp
test
insl
xchg
aaa
and
pusha
lahf
mov
inc
mov
das
ret
xchg
cmpl
adc
xor
lods
lahf
dec
mov
jg
adc
lret
cmpsb
insl
sbbl
push
pop
in
adc
icebp
cmp
jno
stc
push
fidivl
dec
rclb
mov
cmc
in
jb
adcl
test
push
or
mov
add
out
fs
int
sarl
add
je
subl
xchg
add
mov
sub
fbld
scas
and
dec
cmp
cli
pop
add
inc
mov
jl
std
shll
js
sarl
mov
jno
jp
push
mov
popf
push
mov
adc
dec
insl
xchg
push
push
setge
rcl
test
lcall
push
sub
adcl
cmpb
inc
testl
mov
fbld
repnz
mov
enter
enter
push
rcll
sbb
push
sub
pushl
dec
in
dec
cltd
data16
pop
aad
imul
sbb
adc
cld
jne
fsubrp
jo
pop
sub
notb
shl
dec
or
rorb
or
ficoms
push
add
push
jb
mov
add
xor
bound
setb
lea
mulb
push
xchg
mov
push
imul
bound
in
and
pop
inc
jae
dec
aam
dec
add
in
shll
push
or
adc
sub
jb
xchg
arpl
lret
out
pop
lret
jns
cmp
mov
cmpsb
out
loope
mov
cld
fadds
sub
add
aas
or
daa
cmc
pop
cmc
mov
les
mov
add
repz
push
lret
nop
jmp
adc
lret
pop
sbb
and
jo
mov
test
aam
test
or
rorb
sbb
mov
movsl
and
jge
inc
popa
leave
pop
dec
test
cmpsb
jle
sub
cmp
incb
and
fcoml
das
or
jecxz
pusha
mov
inc
mov
push
out
adc
xor
mov
sub
jle
mov
out
xor
insl
sub
mov
sbb
test
xchg
pop
ret
sti
insl
pop
ja
pop
aam
movsl
ficoml
dec
pop
adc
and
adc
lret
sahf
dec
stos
clc
fcomps
lods
popf
icebp
pop
pop
or
aas
push
cmp
fcomps
adc
adc
popa
pop
jmp
dec
push
sub
in
mov
test
fimull
mov
jl
sub
loope
cmp
imul
stos
lret
addr16
push
mov
fisubrs
mov
pusha
jnp
mov
mov
lahf
nop
xchg
pop
in
push
and
mov
adc
stos
adc
xchg
mov
xlat
stos
mov
jmp
and
out
jecxz
sub
xor
ret
inc
fldenv
and
xor
js
insl
jecxz
or
push
in
aaa
xchg
mov
mov
in
les
cmp
push
or
cmp
jp
or
mov
lds
and
ljmp
cmpsl
aas
jne
push
pushf
push
push
cmpsl
xor
call
cmp
mov
mov
mov
jmp
popf
xor
adc
lock
or
rcrb
call
js
shrl
or
aaa
dec
rcll
dec
and
xchg
loop
inc
and
jecxz
leave
or
loop
dec
in
jl
lea
out
push
adc
and
mov
fnclex
mov
mov
jl
jmp
jno
sub
cwtl
sbb
out
add
cltd
out
clc
or
int
popa
fldcw
add
pop
push
cmp
loope
clc
mov
jnp
fisttpll
xchg
scas
or
clc
jbe
lods
dec
fstps
mov
or
movsb
imul
sbb
add
lcall
call
aaa
gs
iret
or
xor
out
mov
jnp
mov
fstl
mov
add
idiv
orb
ja
stc
push
inc
xchg
pop
and
dec
push
dec
push
inc
and
aad
sahf
mov
mov
adcb
adc
int3
cmpsb
and
imul
rcrl
repz
movl
push
dec
add
in
inc
dec
fs
loope
add
jge
xor
jb
in
lods
insl
testb
add
scas
stc
shlb
int
and
push
shlb
mov
in
sbb
xor
cwtl
stc
xor
xor
xor
aas
test
mov
mov
in
push
loopne
ja
or
ret
lea
xchg
xor
mov
fiaddl
imul
iret
std
add
push
push
repnz
jecxz
insl
idivl
adc
fs
jg
mov
adc
mov
push
dec
lock
insb
pop
mov
cmp
push
mov
stos
jmp
popa
out
push
aas
dec
fsubr
mov
pop
dec
mov
bound
scas
or
pushf
out
in
sbb
xchg
cltd
data16
ret
fstp
adc
xchg
sbb
jmp
xchg
cli
or
dec
ret
push
mov
idiv
push
jg
dec
mov
into
in
iret
adc
stos
fcompl
inc
mov
push
imul
js
xor
lcall
sub
lock
loop
rcr
fildll
nop
or
adc
jl
jne
cmp
popf
mov
sbb
mov
adc
fildll
rol
in
mov
or
lea
jp
test
sbb
sub
enter
in
push
adc
sarl
das
mov
xchg
repnz
adc
mov
xchg
xchg
ljmp
sbb
cli
cld
jp
loopne
icebp
pop
fwait
mov
dec
jae
lcall
add
cmp
fmuls
shrl
add
in
bound
mov
mov
fs
dec
add
jp
arpl
dec
inc
fcoms
stc
movsl
and
lods
aaa
lret
mov
and
push
mov
comiss
inc
pop
inc
xor
fwait
sbb
dec
popf
mov
xchg
push
insl
adc
shll
xor
test
mov
fwait
inc
mov
adc
mov
push
les
fs
outsb
add
lret
sbb
pop
push
fstpl
pop
push
xchg
pop
and
add
insb
daa
and
xchg
mov
mov
mov
js
rcll
push
or
test
out
add
mov
ret
xchg
outsl
cmc
pop
push
std
jno
xchg
hlt
lea
cmp
inc
or
idiv
cmp
push
je
jl
dec
sbb
cmp
fmulp
hlt
jp
arpl
pop
rol
ret
and
cli
cmp
in
add
testl
mov
add
mov
jmp
scas
imul
mov
cltd
call
xchg
fiaddl
jle
fs
leave
rolb
fldcw
fidivrl
scas
mov
mov
push
stos
xor
xchg
and
mov
mov
push
xlat
push
inc
movsl
fld
adc
clc
sbb
dec
cli
cmc
mov
cmp
cmp
sub
loopne
sbb
in
or
stc
ret
mov
xor
pop
mov
addl
xor
push
or
js
sbb
or
loope
xor
test
out
fisubl
insl
js
xchg
arpl
xchg
out
dec
ret
sti
cmp
shll
movsl
push
movsb
and
outsb
popa
fwait
ljmp
fwait
or
mov
push
clc
ret
mov
pop
popf
ja
popf
loope
test
inc
pusha
mov
inc
sub
or
xlat
mov
push
lds
push
dec
movsb
or
rcll
dec
adcl
test
leave
inc
out
pusha
loop
out
push
ficoms
aam
mov
jecxz
outsl
mov
dec
cmp
sti
aas
iret
xor
mov
add
inc
mov
dec
mov
int3
std
std
cmp
cmp
imul
and
jge
in
xchg
xor
dec
jecxz
test
jne
out
in
push
mov
xchg
add
imul
ljmp
push
int3
in
cmp
orb
mov
stos
repnz
shlb
mov
dec
adc
sbb
mov
mov
inc
push
inc
adc
jns
mov
sbb
pop
repnz
ret
mov
popf
insl
imul
sbb
insb
cltd
int3
mov
xor
inc
adc
movsb
mov
adc
aaa
popf
xchg
shll
push
scas
fisubl
jo
fs
xchg
or
movsb
sahf
mov
insl
push
push
xchg
pop
sub
xchg
inc
ja
mov
push
sub
mov
ret
push
rorl
jbe
jecxz
popf
add
repnz
jnp
dec
pop
jl
popa
xor
roll
cmc
movsb
test
mov
fists
and
and
and
jp
pop
stos
lret
test
cmpsb
dec
jno
and
lret
call
scas
xchg
mov
lret
daa
movsl
mov
scas
fwait
cmpsl
pop
pop
push
outsl
stos
shll
pop
insb
add
and
in
push
insb
movups
push
scas
jge
add
sbb
dec
mov
mov
outsl
xor
lret
mov
xor
xchg
inc
out
iretw
mov
mov
fwait
out
into
mov
faddl
in
or
mov
mov
fs
scas
push
sub
push
pop
add
cld
mov
sub
sbb
insl
and
sbb
sub
in
filds
mov
cmp
stos
shr
sub
orl
scas
add
shrb
aaa
loop
jbe
xchg
xchg
or
dec
div
imul
aaa
cltd
dec
push
add
mov
leave
shrb
loopne
xchg
cmpsb
xor
push
or
mov
mov
xor
addr16
mov
insl
dec
push
cld
sbb
fs
adc
loope
gs
cmp
cmp
cmp
jo
testb
cmp
lods
lret
push
sbb
sub
scas
adc
std
pop
test
mov
mov
cmpsb
dec
add
inc
push
push
fnstsw
int
sub
lret
fidivrs
std
cmp
fidivrs
xchg
pop
dec
insl
add
mov
in
hlt
jne
cs
in
push
sbb
cmpsb
and
or
outsl
or
mov
and
outsb
adc
push
sub
rclb
fwait
cmp
xor
sub
sub
dec
rorb
scas
std
push
jl
sbb
in
repnz
sub
movsl
pop
xchg
icebp
jge
pusha
loope
rclb
push
xchg
lret
data16
movsl
dec
mov
pop
test
hlt
sbb
dec
leave
or
dec
xchg
xchg
insb
sbb
insb
sarb
add
add
sti
add
lds
mov
lret
lods
movsl
ja
mov
fnsave
insl
cmp
fists
pop
loop
pop
addr16
mov
mov
xor
xor
sbb
adc
test
cmp
mov
nop
loopne
mov
lret
or
push
data16
lret
mov
sar
lahf
inc
cmp
fs
hlt
pop
xchg
and
fsts
test
fsubrl
inc
lds
stc
jmp
jne
inc
jae
fldl
push
sbb
ret
mov
sahf
outsb
jp
jne
cltd
dec
jge
cld
js
test
add
fcmovb
fs
daa
jle
sub
das
aam
jno
sub
mov
cltd
push
xchg
mov
and
dec
in
add
fcmovb
fs
stc
notb
outsl
adc
sti
inc
sbb
cld
dec
push
sarb
sbb
fidivs
or
js
clc
add
and
jg
int3
jg
push
push
inc
in
mov
sbb
je
inc
push
cmpsb
xor
rclb
sub
sub
in
lahf
lods
add
leave
insb
ja
movsl
enter
mov
nop
push
mov
imul
xchg
dec
adc
inc
popa
mov
lret
mov
je
loop
je
inc
pop
lahf
xchg
leave
movsl
icebp
fistl
popf
mov
jnp
sbb
nop
dec
mov
data16
mov
mov
andl
negb
stc
dec
enter
pop
push
adc
and
and
fidivs
xchg
xchg
fs
xor
cmp
push
push
sbb
jbe
dec
in
es
adc
xchg
xchg
sub
punpckldq
popl
jnp
xor
xchg
mov
rcrl
pop
xor
pop
jl
xchg
xor
jns
orb
push
pop
ret
rclb
sub
and
inc
fimuls
scas
imul
aam
cs
mov
popf
push
push
mov
mov
hlt
cwtl
ja
inc
movsl
test
pushf
sub
imul
iret
cwtl
fcomps
add
rolb
pushf
inc
adc
sub
xchg
inc
insl
inc
in
add
lahf
or
sbb
ret
popa
fisubs
ja
test
and
cmp
jl
outsl
stos
jmp
fiadds
in
test
call
pusha
mov
sub
and
sbb
sti
sbbb
rol
adc
sub
mov
cwtl
mov
ja
mov
test
mov
add
ja
insb
pop
sub
xor
dec
mov
shll
rorl
andl
or
xor
lret
aaa
ret
cmc
xor
dec
jnp
jo
fisubrl
ss
in
jecxz
stc
sub
sub
jp
push
test
cmp
out
xchg
mov
xchg
inc
inc
pop
dec
xchg
stc
test
inc
cmp
and
addr16
sub
or
sub
mov
fdivp
leave
dec
leave
xor
pushf
mov
or
mov
pop
jle
mov
insb
std
into
jp
cmpsl
xchg
fcoml
push
ss
sub
movsl
cwtl
addr16
imul
fwait
je
cwtl
aaa
loope
pushf
movsb
mov
jo
incl
ret
jo
lds
jb
loope
movsb
repnz
insl
sarb
push
jb
lahf
mov
xchg
enter
cmpl
das
jo
lds
push
cmova
inc
mov
lahf
leave
repz
hlt
add
int
loop
xchg
push
repz
cmp
cli
mov
cmp
push
mov
inc
inc
cltd
add
mov
pop
and
lcall
leave
inc
and
addr16
loope
loop
cs
ja
pushf
pusha
scas
adc
pusha
ja
adc
or
mov
or
fdivs
imul
movsb
daa
das
xchg
fs
mov
add
outsb
cmp
outsb
and
pop
movsl
ds
xorl
cmpb
add
fmul
lea
xchg
lods
xchg
arpl
xor
and
lock
fsubp
xchg
popa
pop
pusha
lock
cmc
inc
cmp
and
cmp
movsl
cmp
js
cwtl
popf
aas
lods
sahf
movsl
push
or
mov
jne
mov
gs
fs
add
jmp
and
jle
cmp
out
in
icebp
xchg
mov
loopne
ss
add
cmp
cmpl
cltd
lods
adc
or
dec
aad
mov
scas
lcall
pusha
fdivrs
mov
jne
cwtl
scas
dec
repz
inc
sahf
int
movsl
cltd
imul
cmp
mov
aas
inc
push
sub
mov
mov
dec
pop
and
mov
add
int
in
shrb
lret
fmuls
push
add
insb
xlat
int3
xchg
mov
and
repz
out
pop
repz
in
out
jecxz
and
scas
and
mov
movsb
jge
xchg
aaa
xchg
popf
fwait
jnp
int3
adcl
jg
daa
hlt
jne
notb
imul
fcom
test
add
test
cmp
repnz
xlat
cmp
imul
and
dec
stos
sub
int3
pop
mov
inc
lods
jnp
idivl
dec
jbe
loope
jns
xchg
in
call
cmp
mov
mov
lods
jae
mov
and
fldt
xchg
loop
lcall
imul
pop
add
jns
push
jg
dec
fstpl
dec
es
mov
cmc
push
outsl
outsb
out
jp
push
adc
jge
xor
test
xchg
mov
jecxz
add
adc
mov
rorb
or
lock
mov
cmp
fmuls
inc
or
xor
popa
and
mov
lret
mov
mov
xor
mov
adc
inc
clc
mov
sahf
lahf
sti
adc
insb
fildl
jmp
xchg
jne
mov
iret
insl
clc
xchg
xchg
shr
inc
outsb
pop
fnsave
lret
out
cmp
pusha
mov
imul
addl
and
xchg
mov
fldt
sbb
and
mov
ja
repnz
jnp
mov
fldenv
mov
dec
xchg
dec
push
lods
jg
scas
push
jle
adc
inc
lock
inc
xor
mov
mov
int
pusha
shlb
jge
dec
push
push
cmpsb
adc
popa
imul
sbb
push
jle
ret
fcmovne
jne
jmp
or
outsl
jg
mov
adc
adc
sbb
ja
or
and
repz
lret
out
dec
mov
lret
sbb
pop
sbb
adc
dec
xor
lcall
test
mov
mov
fwait
lret
repnz
in
jo
inc
stos
push
cwtl
fistpl
lret
mov
notb
mov
fbstp
jne
sbb
mov
rcr
rolb
pop
mov
es
add
sub
out
mov
adc
pop
push
gs
mov
cmpsb
cltd
mov
leave
pop
pop
mov
mov
or
mov
dec
clc
leave
dec
orb
push
sbb
call
sub
xor
mulb
shlb
push
sahf
xchg
push
or
loop
jbe
repnz
cmp
aam
mov
std
sbb
nop
mov
cmpl
cmp
ret
es
cmp
pop
or
add
push
adc
cmpsb
xor
cmc
jmp
andb
push
push
mov
dec
xor
lods
daa
sub
fwait
cli
sub
fmull
pop
fiadds
and
mov
push
push
mov
inc
xlat
xor
test
stos
imul
pop
les
popf
mov
rolb
sti
sbb
das
push
add
sub
jecxz
xor
shlb
movsb
mov
jne
ret
in
fs
dec
ret
icebp
push
jne
sub
add
aas
and
out
out
aad
xor
repnz
mov
sub
push
cmp
sbb
jae
jle
jl
and
jno
daa
iret
nop
sbb
add
dec
xor
add
sbb
sbb
add
int3
pop
pop
and
stc
loope
sbb
icebp
sub
inc
push
sub
aaa
mov
orl
push
mov
cmpl
fwait
jmp
pop
cld
xor
out
cmp
dec
loope
adc
mov
jae
les
xchg
dec
arpl
inc
divb
mov
call
loop
jne
rolb
cld
movb
lea
ret
inc
add
cmc
aad
stos
jle
testl
fs
sbbl
pop
sub
xchg
push
out
test
outsl
sub
sub
add
bound
jecxz
inc
xor
ss
shr
xchg
lea
pop
push
sbb
sarl
into
shrl
sbb
dec
cmp
jns
jne
jl
mov
aaa
arpl
pop
mov
mov
test
jecxz
cmp
dec
stos
outsl
rcll
jp
jle
mov
arpl
pop
jb
shl
pop
push
pop
jg
inc
push
cmpsl
inc
push
jle
mov
sub
and
pop
das
pop
loope
or
in
cmp
xor
shrl
imul
cmp
mov
ficoml
xor
jle
dec
inc
fldenv
push
in
lahf
aaa
sub
push
out
sub
or
pop
subl
xchg
and
scas
ja
inc
mov
sub
int
mov
xor
mov
xor
jae
cmpsb
xor
jne
movsl
inc
fsts
test
sub
cli
jae
mov
mov
inc
sub
jmp
les
out
fwait
cmpsl
inc
fisubl
cmc
enter
popa
and
in
ffreep
cltd
fidivs
jp
aas
add
in
mov
cld
incb
fildl
inc
mov
xlat
inc
mov
loopne
sub
out
lock
adc
jb
mov
and
jl
bound
leave
xlat
jns
cld
sti
ret
sahf
and
mov
cmc
in
mov
push
jns
das
xor
push
ljmp
arpl
gs
test
arpl
movsl
rorl
mov
xchg
mov
jns
pusha
clc
out
mov
stos
jo
je
in
addl
dec
out
pop
aas
pop
cmp
dec
daa
fdivl
arpl
scas
call
int3
push
test
push
jmp
mov
shl
in
jl
leave
lea
ror
add
mov
dec
movsl
xchg
loop
sti
test
imul
push
arpl
pusha
mov
xor
adc
pop
add
inc
pop
ljmp
fldenv
inc
xor
mov
lds
fsubr
loop
aaa
call
cmp
lcall
jnp
loopne
and
lea
lahf
xor
xorb
push
pop
inc
mov
adc
xor
dec
ret
xchg
pushl
pop
jb
and
fs
xchg
or
iret
out
and
fs
dec
icebp
mov
pop
fiadds
push
lret
fidivl
adc
xchg
push
sbb
addr16
cmp
cmpsb
mov
mov
sbb
mov
xchg
fsts
sbb
icebp
jge
fmull
mov
dec
in
pop
fucomp
jg
jo
inc
popf
pop
or
lret
mov
test
push
aas
das
jne
dec
decb
inc
fsubrl
loop
or
xlat
xor
gs
push
mov
je
dec
ja
mov
std
in
sbb
xor
in
push
adc
inc
cmp
mov
sbb
push
nop
cld
out
stos
popa
mov
je
jns
movl
dec
imul
in
and
test
push
nop
pop
cwtl
mov
test
ret
clc
push
adc
js
jns
ret
arpl
jo
das
mov
sub
aaa
push
mov
test
insb
aam
mov
cmc
int
mov
testb
mov
pop
or
mov
test
inc
je
xchg
jp
pop
jg
push
push
out
add
mov
icebp
jbe
jmp
into
scas
cmp
test
aad
loop
inc
xor
fiaddl
pop
popw
xchg
xor
dec
fsubr
sbb
sbb
gs
xchg
cmpb
xor
mov
mov
notl
mov
push
sbb
mov
xchg
inc
sub
xor
inc
xor
and
idivb
dec
lds
test
jns
pop
mov
stos
pop
dec
inc
inc
inc
pop
andl
mov
mov
or
pop
xorl
sbb
mov
out
cmc
push
pop
orl
stos
lcall
jl
xor
mov
cltd
movsb
and
adc
lock
jno
sbb
push
or
and
shll
lds
cmp
xor
data16
xchg
jle
idivb
lret
leave
and
sbb
lahf
sbb
cmp
adc
pushf
mov
cmp
push
mov
sub
inc
in
scas
sub
inc
js
in
adc
fisttpll
or
mov
xchg
pop
mov
inc
loopne
push
or
sbb
cmpsb
push
mov
dec
stos
daa
or
insb
mov
or
push
or
sarb
and
sbbl
int3
popa
test
ret
out
sti
andb
ror
or
jns
out
xchg
mov
out
xor
or
jb
dec
in
icebp
push
cli
pop
dec
jnp
xchg
cs
pop
fstps
jge
cmpsb
daa
ds
pop
jne
loop
arpl
pop
mov
stos
pop
mov
or
dec
mov
hlt
push
jb
aaa
lods
and
inc
ret
outsl
xor
push
das
mull
push
inc
lcall
or
push
cs
sub
add
or
jbe
rcrl
fabs
cli
mov
sbb
dec
out
sbb
shrl
cmp
dec
data16
andps
xchg
adc
hlt
add
insl
ret
adc
mov
je
repz
push
fwait
clc
jno
sbb
fisubrl
sbb
xchg
ret
jge
fwait
xchg
sbb
jmp
or
sbbb
mov
movsb
into
loop
xor
push
repz
popf
insb
pop
leave
cmpsb
add
inc
or
xlat
cmp
in
push
mov
gs
test
outsl
xlat
push
lock
test
xchg
int3
iret
movl
test
fcompl
daa
aaa
lods
cmc
insb
or
dec
xchg
mov
popa
aaa
pop
xor
icebp
xchg
pop
fnstcw
into
xchg
icebp
push
dec
or
inc
lock
add
addl
ja
xchg
jns
mov
pop
fdiv
jg
pop
xchg
addr16
jg
mov
mov
nop
subb
je
jae
cmp
jne
sub
mov
fnstenv
cltd
dec
mov
push
sahf
sbb
fildl
pop
mov
xchg
jmp
push
sbb
jmp
xchg
xor
cmp
ret
shll
lret
add
push
jns
pop
ljmp
cmpsl
push
and
pusha
mov
repnz
test
mov
outsb
imul
mov
shlb
mov
cmp
in
xchg
sub
lods
in
xchg
call
repnz
xchg
and
lds
sbb
sub
jbe
xorl
repz
pop
dec
jne
mov
enter
mov
sbb
call
xchg
test
mov
rcrl
shrb
fsts
or
and
outsl
lds
imul
jge
pop
enter
cmp
icebp
cltd
mov
inc
sub
mov
adc
sub
pop
push
xor
cmp
test
add
mov
push
fmull
push
push
call
push
mov
cmp
and
jnp
xor
roll
js
jo
xor
sbbl
push
xor
mov
cmpsb
adc
sub
test
insb
xchg
and
test
push
fsubp
daa
testl
je
jl
pop
adc
inc
mov
inc
jmp
dec
decb
int3
fldlg2
sub
mov
je
cli
add
daa
in
je
cmc
ret
pop
push
sbb
loopne
js
xor
mov
pop
dec
xchg
dec
lcall
loop
sbb
imul
xor
mov
add
or
pxor
bound
xchg
xchg
mov
add
sbb
push
stos
xchg
cmpsb
pop
pop
lret
jb
xor
pop
cmc
sbb
out
adc
add
add
lock
or
mov
es
dec
mov
mov
imul
jno
push
mov
add
push
out
adc
adc
add
out
outsl
popa
daa
inc
mov
out
lea
out
insl
cld
mov
nop
movl
std
add
jns
xchg
add
adc
sub
into
pop
jne
outsl
pushf
es
mov
mov
cmc
xchg
leave
js
cmc
fcmove
push
mov
leave
sub
lret
stc
fldl
xchg
and
and
mov
test
sti
adc
lock
scas
ret
scas
aad
adc
jge
enter
sub
sti
sbb
mov
stos
sbb
cmp
int
dec
stos
clc
push
mov
push
xchg
and
stc
fsubl
mov
out
xor
iret
xlat
jno
cmpsb
call
in
dec
lock
inc
in
xor
xchg
cmp
xorb
mov
jmp
daa
add
and
and
and
pop
sub
adc
jns
or
add
fs
stos
frstor
pop
xchg
test
in
ror
adc
push
jmp
cmp
int3
stc
lahf
pop
lods
movsl
push
pusha
jge
fcoms
cmp
sahf
xchg
rcll
insb
push
push
adc
adc
pop
popa
in
int
mov
cli
jnp
enter
mov
adc
mov
gs
outsl
jmp
bound
adc
movsl
cmc
icebp
add
popl
dec
sbb
movaps
inc
fs
cmp
inc
lods
jns
rorb
cmp
dec
pop
out
outsb
xor
jge
shrb
pusha
ljmp
mov
scas
leave
bnd
xor
cmp
sbb
nop
icebp
dec
outsl
cmp
inc
test
mov
sub
or
lret
sbb
das
stc
push
push
negl
cmp
add
mov
ficompl
ljmp
cmpsb
std
sbb
cmp
outsl
dec
lcall
xor
stos
sbb
fsubrs
test
bound
mov
shl
repz
sub
outsb
das
sbb
jg
dec
fidivrs
xor
and
add
adc
movsb
cli
int3
std
push
movsb
sbb
nop
xlat
scas
out
lods
mov
push
aas
mov
aas
scas
mov
cmp
sbb
das
cmc
fs
pop
dec
mov
cmp
dec
adc
or
mov
dec
xchg
sbb
cmp
inc
push
mov
outsb
jo
mov
out
je
out
push
or
int3
push
bound
or
mov
mov
aaa
les
out
fsts
aad
std
arpl
insb
or
push
ret
mov
stc
push
and
and
or
mov
gs
popf
xchg
xor
ficoml
out
jmp
mov
data16
pop
add
jg
mov
inc
scas
ss
enter
fwait
xor
sbb
pusha
adc
push
and
inc
roll
lods
push
and
lods
movsl
xchg
lahf
fstpt
cmp
pop
adc
test
lods
xor
orb
fcomip
dec
xchg
iret
ljmp
lods
adc
xchg
jnp
dec
ret
mov
dec
gs
loopne
test
add
jmp
imul
xchg
std
fs
in
sub
sub
daa
mov
lods
ret
lods
add
lea
and
in
fsub
mov
or
sub
int3
aas
addr16
bound
mov
push
out
cmpl
inc
sbb
xchg
ja
sti
popa
mov
outsb
and
clc
pop
jnp
add
sub
xor
ret
decb
insl
or
lret
stos
cmpsl
popa
sbb
shl
shufps
call
test
add
jp
or
stos
cmovnp
popa
js
outsw
push
inc
dec
push
test
inc
fistl
sub
dec
lods
jnp
shll
mov
add
cli
pop
ss
mov
sti
dec
lret
adc
inc
call
mov
xor
movsb
cli
sbb
push
mov
es
push
rorl
sub
rcrb
add
addr16
mov
push
lods
mov
fsubl
xor
xchg
inc
adc
outsl
shl
jmp
jb
mov
sarl
movsb
dec
jecxz
icebp
popa
imul
mov
jo
in
and
or
imul
aaa
or
mull
outsl
jp
or
mov
stc
loope
mov
js
insl
mov
cmp
pmaddwd
cmp
and
adc
iret
xorl
push
sub
and
dec
pop
inc
jb
loop
movb
xor
shlb
adc
fucomp
mov
adc
mov
inc
xor
dec
adc
mov
imul
out
stc
int
shl
mov
jne
out
les
push
or
pop
sbb
les
leave
cltd
push
jnp
cmp
les
mov
in
cmp
es
lcall
addr16
lret
sub
in
test
dec
jno
xor
popa
jae
les
addb
mov
and
cmp
insl
nop
mov
fimull
xor
sbbb
sbb
push
mov
jo
sbb
inc
mov
push
aaa
cmp
jnp
adc
push
daa
arpl
outsb
shll
pushl
and
mov
jbe
gs
pop
xor
and
cli
dec
addr16
cmpsb
jo
inc
sbb
outsl
or
xor
xchg
ds
dec
push
ret
adc
inc
ret
sbb
ja
push
bound
pop
jecxz
xor
ss
mov
jno
loop
adc
jle
pop
mov
mov
mov
mov
fistpl
push
ffreep
lahf
aam
xor
xor
xchg
xchg
sub
mov
repz
xchg
ds
in
xchg
psraw
cld
inc
hlt
xchg
sub
ds
lret
push
mov
inc
pusha
fwait
arpl
push
nop
lea
aad
inc
call
mov
into
xor
jbe
cmp
pop
lahf
xor
in
push
loop
add
push
sbb
outsb
adc
xor
mov
cwtl
aad
jecxz
xor
insl
sub
mov
add
out
sub
pandn
jbe
xchg
pop
mov
add
sub
mov
add
push
sub
mov
movsb
mov
dec
testl
das
mov
sbb
mov
cs
cmp
cmpsl
std
and
push
mov
repz
pop
dec
arpl
xor
repz
cmp
xor
cld
ucomiss
xor
aaa
pop
mov
push
xor
aas
cmp
add
mov
mov
mov
add
pusha
bound
xor
add
test
dec
sub
stos
xchg
xor
cld
cmp
nop
mov
call
mov
xchg
add
dec
addr16
sti
ret
mov
sbb
lcall
lret
jnp
leave
sub
xchg
mov
dec
fidivl
sbb
inc
lcall
sbb
mov
push
fwait
and
data16
cmpb
adc
imul
mull
fs
int3
lock
fwait
xchg
js
stc
lea
mov
pusha
mov
xchg
mov
lds
dec
mov
cs
and
sub
jno
xor
push
adc
pop
out
fnstsw
add
int3
loope
add
movsb
ret
sbbb
mov
sbbl
out
int3
or
shlb
bound
adc
es
mov
dec
js
cs
popl
mov
daa
pop
lods
cmp
and
out
ds
pop
inc
jmp
sbb
jecxz
scas
cwtl
into
stos
leave
cld
scas
dec
dec
push
sub
adc
push
leave
and
mov
in
shl
ret
jns
insl
cmpb
mov
les
adc
sbb
stos
ret
call
push
fistpll
cmpsl
and
mov
mov
sub
cmpsl
dec
add
jne
into
and
lods
sbb
mov
mov
repz
or
dec
aad
push
lock
jl
popa
in
or
xchg
mov
xor
mov
daa
push
orb
mov
xor
jle
inc
pop
pop
cmpsb
xchg
orb
push
xor
pop
test
pop
xor
scas
add
sbb
inc
cmp
mov
outsb
lcall
dec
test
mov
imul
adc
and
add
xlat
sti
dec
sub
pop
aaa
mov
jg
fisubrs
ja
fsubl
in
lahf
cld
jmp
sbb
inc
sbb
adc
into
inc
int3
lcall
jbe
bound
popa
aaa
or
jno
lock
popf
dec
mov
xor
xor
aad
xorb
jl
and
pop
jge,pn
pop
mov
add
or
aad
pop
mov
mov
pop
out
mov
push
add
xchg
cmp
inc
outsb
cld
js
fistpll
push
mov
mov
adc
out
hlt
fildl
pushw
inc
sahf
add
adc
mov
push
and
push
mov
or
sub
sar
jno
cli
loopne
mov
add
arpl
loope
outsl
imul
and
jle
sbb
and
xlat
scas
inc
ja
mov
cmc
add
adc
dec
lahf
mov
cmp
cltd
jp
gs
cmp
sub
xlat
rorl
adc
mov
xor
fcoms
adc
pop
mov
into
xor
shrb
mov
shlw
pusha
sbb
dec
sbb
aas
jno
jae
adc
push
mov
pop
dec
jl
jnp
inc
cmp
push
adc
lret
jns
cmp
and
mov
pushf
dec
repnz
mov
mov
cmpsl
dec
gs
jb
pop
data16
xchg
cld
cmp
push
adc
mov
mov
outsb
lods
lret
outsb
pop
xlat
mov
and
adc
shrl
fstpl
mov
mov
pop
test
mov
mov
xchg
sbb
sub
in
fisttpll
adc
cli
push
cmpsb
adc
inc
sub
push
mov
inc
fisttpll
mov
dec
ds
std
loop,pt
or
cmp
xchg
or
adc
adc
lret
test
push
aad
push
jl
in
dec
into
rorl
out
or
stos
lcall
clc
pop
mov
fmuls
jne
iret
inc
add
stc
cmp
add
cmp
test
sbb
insl
cmp
sahf
sub
es
idiv
dec
cmp
push
xor
icebp
push
loope
mov
inc
ret
xchg
aaa
icebp
cltd
sahf
je
adc
int
jle
mov
add
push
sub
stos
std
pushf
push
pop
les
cmp
mov
inc
and
sahf
jnp
js
scas
cmpsb
mov
sbb
outsl
and
popf
xlat
jl
repnz
sub
out
fldl
es
push
out
sbb
aad
callw
adc
push
addr16
or
cmpl
ss
pop
js
add
in
cmp
scas
cwtl
cwtl
pop
sbb
ret
dec
sti
xor
sub
movsl
or
jg
in
inc
cld
and
out
lahf
jne
int
mov
test
pop
pop
inc
out
add
outsb
push
xchg
out
push
jnp
dec
cmp
fdiv
imul
lods
sub
xor
pop
inc
pop
les
shr
xchg
xor
sub
icebp
roll
sar
add
add
cmp
xchg
inc
sbb
push
mov
cmp
add
or
stos
in
sbb
cmp
sbb
jmp
mov
mov
sub
jecxz
inc
pop
jns
call
sahf
cmp
std
and
sub
dec
mov
popf
adc
mov
pop
adc
int
lds
sub
test
leave
sbb
not
shrl
jo
stos
nop
sbb
cmc
lods
aaa
xlat
dec
hlt
mov
fwait
cmp
cmp
pushf
dec
sti
ljmp
sub
gs
lret
cmp
repz
dec
cmp
fcomi
cmp
lds
fmuls
dec
fcomip
add
jae
xchg
lock
les
fldt
loope
mov
pop
or
cmovae
add
inc
cmp
push
xchg
add
test
xor
je
cmp
and
add
mov
popa
xchg
mov
jb
mov
and
loop
lret
icebp
ljmp
inc
stos
xor
xor
push
mov
mov
adc
es
out
push
dec
addl
jo
push
sbbl
test
sub
ret
pushf
sub
push
jnp
mov
inc
iret
push
ret
popa
dec
int
test
lock
inc
mov
inc
adc
sbbl
rolb
mov
movsl
pop
shrb
outsl
mov
dec
and
out
loop
sub
lds
std
add
lcall
mov
in
pop
jp
mov
fstps
mov
cmp
jp
insl
adc
xchg
inc
xor
and
and
adc
xchg
inc
inc
iret
mov
je
insl
jl
jnp
mov
push
adc
mov
out
js
inc
ljmp
lcall
js
xchg
sbb
inc
js
mov
stos
mov
sahf
rcr
mov
outsb
and
ret
xor
xchg
shlb
sbb
jo
jle
push
cmc
int
stos
mov
xchg
add
mov
xchg
mov
dec
sub
and
daa
aad
mov
xor
jnp
pop
clc
jmp
lea
xor
mov
fs
enter
lock
xchg
rcl
dec
mov
push
mov
cwtl
xor
loope
sub
pop
xchg
shll
push
enter
mov
fsubp
xchg
pop
pop
and
dec
aam
mov
mov
pop
cmp
mov
call
les
test
dec
xor
mov
adcl
rorl
adc
cli
push
xor
mov
mov
or
push
mov
dec
add
std
in
sbb
push
mov
stos
mov
repz
xchg
sahf
in
sbb
fsubrp
pop
ret
out
std
mov
push
lods
lea
shll
in
inc
shufps
xor
jbe
mov
dec
pop
add
jo
xor
repz
mov
mov
popf
cmp
pop
outsb
mov
jge
pop
mov
scas
jecxz
arpl
ds
jge
dec
shl
scas
push
daa
mov
and
jmp
das
push
inc
btc
or
das
pop
rolb
inc
scas
dec
fcmovnbe
or
scas
xchg
or
das
jno
popa
out
add
inc
xlat
pop
sti
dec
adc
mov
movsb
and
in
test
scas
movsl
aam
xchg
rolb
ficoml
xchg
or
pop
jecxz
sub
inc
loope
mov
jmp
xor
push
sbb
fstps
or
and
fbld
mov
push
jle
loopne
inc
int
outsb
aaa
pop
or
or
fsqrt
lods
mov
fisttpll
fbld
or
push
push
insl
aad
or
jg
insl
fs
outsl
xor
jl
push
adc
fnstsw
hlt
jl
fnstsw
push
adc
pop
xorl
in
sti
dec
cmp
dec
jno
sahf
shll
push
push
xchg
or
out
aam
clc
gs
add
sahf
dec
sbbl
aas
adc
mov
fidivl
ds
outsb
or
in
ljmp
and
inc
outsb
roll
mov
jp
jp
addb
icebp
add
sbb
out
cmp
ds
jmp
mov
push
sub
and
push
push
bnd
imul
aas
mov
or
xor
fsubp
xor
in
mov
push
adc
dec
out
add
mov
cmpsb
dec
mov
aad
pop
sbb
icebp
push
dec
pop
data16
in
add
mov
xchg
imul
and
and
out
jnp
or
and
xchg
push
out
iret
xor
mov
pop
lea
ret
adcb
push
mov
or
inc
cmp
cwtl
add
rcr
pushf
mov
inc
ret
jge
ret
add
cmp
jmp
mov
xchg
or
push
popl
jno
insb
pop
arpl
add
cmovo
mov
hlt
call
fdivl
repnz
jge
push
jle
ss
mov
icebp
mov
iret
scas
or
dec
adc
ja
insb
xor
jbe
stos
mov
sub
sar
fnclex
xor
inc
jo
and
push
dec
mov
push
fwait
adc
adc
jp
jl
lds
std
xor
xchg
movsl
and
fs
pushf
repnz
or
in
sbb
dec
sbb
mov
lahf
push
and
sbb
aam
mov
out
sub
mov
ljmp
add
les
lret
jg
add
xchg
sbb
inc
je
and
subb
call
mov
inc
imul
fisubrs
rcrl
imul
pop
add
pop
inc
push
xor
mov
leave
push
mov
pop
data16
nop
xchg
cmc
dec
sar
xchg
movlps
out
add
cwtl
loop
jge
aaa
xchg
mov
iret
sti
mov
outsb
jge
inc
jne
in
cltd
or
mov
push
mov
movsl
xor
stos
lret
mov
insl
adc
mov
xor
daa
adc
dec
push
xlat
test
dec
cmp
push
jmp
and
push
fnsave
add
ficoml
push
and
sub
nop
ds
inc
inc
movsl
lret
cmc
dec
bnd
lret
aam
jp
dec
lods
sbb
or
pop
movsl
mov
pop
sub
je
into
es
dec
inc
dec
add
out
mov
pop
inc
or
lods
sahf
and
xchg
pop
subb
pop
mov
pop
fnstsw
into
leave
fsts
lahf
repnz
popf
and
add
nop
mov
inc
push
mov
in
pop
add
sbbb
xor
cwtl
lret
lahf
mov
and
dec
sbb
inc
out
add
fisubs
shlb
lea
mov
test
xchg
mov
sahf
insl
xchg
sbb
xor
arpl
xor
and
push
xor
mov
xchg
shrb
mov
adc
test
sub
aam
mov
jmp
loop
cli
js
add
adc
mov
sbb
adc
mov
cmpsb
jle
inc
test
das
movsb
mov
in
inc
or
dec
push
mov
mov
test
dec
mov
mov
mov
imul
mov
stos
xchg
addr16
adc
xor
int3
mov
or
push
cmpsl
xchg
push
pop
adc
pop
or
lods
test
mov
arpl
mov
xor
orb
stos
pop
mov
sahf
int3
les
mov
dec
jle
adc
adc
cmc
hlt
mov
es
add
mov
ds
and
fldenv
cmpsl
das
fldl
adc
loopne
push
fisubs
fidivrs
sbb
jno
xchg
jnp
loope
and
jno
mov
mov
dec
pusha
addr16
or
fcoms
sub
in
sub
push
repz
adc
push
jge
scas
sub
jo
add
sbb
ficoms
test
xchg
outsl
sbb
movsl
iret
in
ljmp
inc
cmpb
stc
inc
lock
push
out
in
lahf
and
mov
push
rcll
sbb
pusha
mov
and
pop
xchg
lods
add
dec
out
pop
mov
shll
arpl
push
daa
xor
adcl
fimuls
add
pop
add
inc
pop
adcb
cmp
sub
fnstcw
lret
iret
in
dec
das
sub
pop
jae
xchg
push
mov
sub
mov
loop
dec
clc
sbb
cld
add
or
jae
jo
push
es
pop
lret
popf
in
cmpsl
add
mov
aas
into
insb
jne
add
repz
jp
cmpsl
mov
fwait
scas
jbe
mov
fcoml
rorl
inc
mov
add
lcall
and
xor
push
scas
mov
xor
jne
orb
mull
dec
ja
or
add
mov
push
pusha
data16
repnz
jp
dec
cmp
dec
or
jbe
inc
sbb
jo
sub
adc
leave
gs
sahf
or
js
lock
loopne
xor
daa
insl
call
mov
add
ljmp
mov
add
fxch
inc
lcall
or
xchg
add
sbb
add
je
ljmp
mov
popf
ror
sbbl
mov
idivb
adc
ja
mov
xor
enter
cmp
mov
inc
movsb
sahf
cmp
add
loopne
outsl
cmp
out
dec
xchg
test
adc
sbb
fwait
mov
ud0
or
cmp
mov
fwait
pushf
mov
or
imul
or
push
and
dec
pop
aas
movsl
xchg
out
data16
loope
mov
sbb
inc
aas
sbb
dec
fcompl
stc
mov
xor
and
out
pop
and
scas
dec
mov
nop
xor
test
push
xchg
mov
setne
cmp
cmp
xlat
cmp
push
stc
mov
mov
mov
mov
fimuls
push
ss
mov
out
add
inc
sahf
xor
aad
mul
popf
mov
mov
aas
loop
push
xchg
pop
xor
mov
and
lret
mov
clc
imul
out
addb
add
xlat
roll
push
lret
dec
fs
and
mov
jnp
xchg
int3
pop
icebp
adc
insl
adc
mov
shll
out
jae
push
sub
mov
cmp
xchg
jae
sbb
sbb
add
insl
or
mov
jbe
jmp
jp
pop
iret
lea
lds
das
mov
mov
push
andl
sahf
jp
data16
fmull
pop
loope
dec
outsl
imul
sub
enter
repz
push
repnz
adc
rclb
ret
mov
in
js
out
fstpl
mov
xchg
inc
lock
enter
nop
ret
sub
cmp
jns
mov
rcrb
pop
add
pushf
fstp
mov
lret
adcl
mov
cmp
push
adc
mov
push
or
pop
mov
mov
mov
cmc
pop
jo
dec
stos
fdivs
mov
xchg
sbb
push
mov
jle
popa
orl
jp
jge
pop
mov
cwtl
push
or
int3
call
xor
xor
shrb
bound
mov
pop
dec
data16
pop
pop
insl
rorl
adc
das
dec
lods
adc
test
out
fmuls
pop
fcmove
lods
enter
scas
movsl
bound
lods
addr16
push
mov
cmc
jns
scas
sbb
push
mov
out
daa
jg
dec
loopne
lods
leave
dec
xor
push
sub
fildl
enter
jns
and
add
cmp
cmp
shr
fistpll
addr16
fldt
mov
fidivs
add
outsb
pop
inc
mov
outsl
or
xchg
cld
int
and
movsl
adc
sub
lcall
sub
stos
cmc
arpl
aaa
xchg
ja
cmp
enter
stos
fcomi
sbb
into
mov
das
fidivrl
cld
xchg
ss
mov
xchg
mov
dec
push
pop
sub
jmp
lods
cmp
dec
xchg
insl
movhps
insl
addr16
mov
mov
adc
dec
gs
sahf
fidivrl
jl
mov
ret
jmp
mov
mov
in
insl
add
xchg
xlat
in
adc
inc
mov
mov
pop
sub
sbb
or
sbb
mov
lahf
pop
aas
sbb
jbe
or
mov
test
pop
daa
xchg
or
cmp
out
insl
roll
adc
icebp
or
dec
fsubl
jo
xor
xchg
fistl
iret
mov
mov
xor
and
inc
shlb
xor
pop
imul
xorl
push
mov
inc
fs
test
test
out
or
add
ds
cmpsb
ds
lea
sarb
inc
into
push
mov
daa
xlat
inc
xchg
sub
jecxz
shrl
push
movsb
sub
xor
iret
jnp
xchg
dec
xchg
pop
xchg
and
sbb
loope
stos
test
xchg
add
sti
fisttps
loop
call
inc
sub
xor
ficompl
and
xchg
mov
lret
mov
mov
sbbb
inc
loop
faddl
leave
add
pop
test
adc
or
out
mov
inc
daa
icebp
pop
mov
inc
repz
pop
push
fldl
je
push
in
lock
shl
int
pop
fistl
inc
ret
mov
inc
insb
es
sub
js
loope
and
ss
outsb
jne
gs
sub
cmp
xor
adc
test
add
les
mov
cmpsl
ja
movsl
movsl
jp
dec
lret
call
mov
sbb
mov
fbld
aas
hlt
orl
lods
int
xchg
inc
lret
lds
gs
xor
insb
notl
outsb
or
jecxz
adc
je
sbb
xchg
lea
cmp
xchg
stos
lods
adc
adc
cmp
daa
hlt
pop
and
mov
sarb
dec
pusha
inc
mov
mov
sub
push
mov
in
fdivr
sub
repz
push
movb
js
rorb
ja
pusha
in
sub
cmpsl
mov
cli
or
mov
inc
mov
mov
jg
loopne
jp
and
push
add
jl
push
adc
jno
mov
pop
jge
lahf
in
les
clc
pop
inc
xor
and
push
cmp
shl
sub
jg
mov
ss
arpl
call
pop
jmp
jmp
dec
loop
in
push
push
add
mov
mov
push
jp
popa
sahf
movsb
stc
adc
add
ficoms
cwtl
pop
sbb
fldl
dec
jae
lods
lods
sarl
pusha
out
mov
testb
mov
cmc
mov
sbb
inc
sbbb
xchg
jnp
jbe
les
repz
push
sub
or
xorb
test
adc
sbb
mov
mov
loope
push
mov
in
jecxz
push
ret
fildl
cmp
pandn
mov
mov
cwtl
mov
lods
inc
scas
pop
fldenv
lcall
dec
cli
cmp
or
cmpsl
ret
stos
push
lds
mov
xor
pop
xor
jmp
aam
cs
pop
and
mov
pop
sti
inc
jne
rclb
sub
and
jl
add
ret
xor
or
mov
test
sub
shl
adc
sarb
in
push
retw
inc
push
push
mov
into
or
jb
cltd
pop
popa
leave
jae
mov
sbb
in
sbb
mov
jp
daa
lea
out
in
add
cli
pop
movsb
push
ja
pushf
cwtl
sub
outsb
sub
inc
cmp
adc
mov
popf
repz
outsl
mov
lcall
inc
es
pusha
das
add
xor
sub
bnd
loope
mov
sub
ret
push
push
sbb
mov
push
ret
sub
dec
rorb
out
cmpsl
mov
stos
out
push
enter
xchg
out
ja
popa
mov
jns
es
gs
das
insb
mov
xchg
mov
lea
dec
xchg
scas
jmp
xor
pop
shlb
cltd
inc
mov
xchg
pop
pop
pop
leave
or
push
or
nop
jg
incl
nop
movsl
inc
xchg
ss
mov
mov
push
mull
and
insb
fisubl
inc
outsl
lds
into
das
push
leave
std
xchg
fcomp
faddl
arpl
out
test
mov
shll
icebp
loope
or
mov
sarb
loopne
inc
xlat
cmc
sub
ret
jge
addr16
movsl
test
mov
mov
rcll
mov
mov
lahf
hlt
cmp
pop
cmc
mov
or
and
shl
mov
dec
out
bound
outsb
in
cs
inc
push
push
cmp
daa
mov
dec
je
lods
sbb
xor
jge
sub
fisubrs
mov
jo
lcall
scas
sahf
or
adc
mov
out
outsl
mov
ret
mov
adc
pop
clc
scas
inc
out
xchg
repnz
pop
jno
jo
sub
push
adc
xor
fcmovbe
cwtl
jns
xor
clc
and
jl
mov
add
xor
js
xor
sbb
sbb
sahf
fisubrs
fsubs
ficompl
inc
aad
roll
ja
cltd
fsubr
inc
enter
push
add
jne
cli
rcll
cmpsl
dec
mov
cmp
test
and
jecxz
or
push
mov
xchg
jno
mov
sub
and
pop
lret
loop
aaa
mov
adc
xchg
push
arpl
mov
and
jns
mov
pop
out
push
fnstcw
inc
or
dec
ret
fs
inc
jae
sub
push
rclb
or
testl
pop
mov
scas
daa
add
dec
je
or
xchg
adc
and
inc
jp
out
bnd
movsl
mov
mov
ljmp
addr16
scas
push
inc
in
push
insb
add
and
push
mov
and
adc
imul
lods
add
popf
aaa
in
in
stc
adc
outsb
pop
jb
pop
sub
aas
dec
xor
xchg
es
out
pushf
sub
in
mov
add
into
add
or
cmpsl
inc
mov
and
hlt
popa
mov
add
aas
repnz
add
or
xor
mov
xorl
repz
jo
xchg
inc
icebp
dec
mov
pop
sbb
cli
mov
adc
sub
adcb
shrb
mov
js
mov
add
jnp
repz
push
je
pop
push
cmc
cmp
popf
call
jnp
rorb
inc
hlt
bound
mov
mov
test
xchg
xchg
clc
mov
jp
jno
dec
push
sti
lret
pop
cmp
rclb
mov
cmp
dec
mov
fisubs
loop
xchg
pop
in
movsl
xor
mov
cmc
jo
xor
ja
lcall
sbb
xor
sti
push
sbb
ja
into
je
xchg
xchg
aas
push
sub
xchg
push
mov
pop
fnstcw
push
push
loopne
xchg
test
ss
xchg
dec
sub
inc
push
outsb
xor
adc
sbb
lods
pop
or
test
cs
dec
dec
repz
mov
lahf
mov
xor
leave
cwtl
movsl
sub
std
inc
jmp
cmp
sub
mov
test
xor
push
popa
call
adc
loope
push
lret
xor
loop
or
aad
loopne
std
inc
out
or
push
jle
mov
hlt
and
add
lds
mov
pop
enter
es
add
fildl
push
xchg
mov
dec
fs
mov
pop
lcall
mov
xchg
dec
arpl
aas
fcmove
and
xor
pop
jne
fsub
sbb
ror
movsl
imul
out
xchg
xchg
shll
icebp
pop
stc
mov
cmp
in
dec
jge
cmc
push
sbb
fcoml
add
ja
imul
and
in
stos
jo
xchg
jns
xchg
xchg
dec
into
or
into
or
mov
pop
inc
mov
mov
das
cs
stos
lcall
pop
xchg
shlb
xchg
cld
add
je
pusha
adc
or
mov
std
and
gs
or
pushf
mov
add
jle
inc
pop
pop
dec
sub
push
mov
or
cmpsl
cmp
mov
xchg
cli
mov
movsl
xor
ss
sub
and
shrl
jmp
inc
or
jb
pop
dec
cs
xorb
and
and
fdiv
mov
push
addb
inc
jns
jp
imul
mov
inc
js
mov
jg
addr16
fsubl
xchg
nop
sbb
cmc
popa
xor
push
add
mov
fdivrl
subl
or
add
mov
aam
sbb
fs
repnz
lock
push
sbb
sub
bswap
aaa
jbe
leave
or
sub
adcb
jl
push
sub
mov
lret
xor
jp
adc
daa
jp
aam
sbb
cli
rclb
dec
mov
inc
shlb
sbb
jge
mov
jle
lret
dec
bound
cmp
inc
push
sub
push
inc
jl
jno
aam
dec
shll
xchg
cmc
push
lcall
imul
push
mov
sbb
data16
inc
add
xchg
test
jecxz
js
jl
and
jo
ljmp
mov
into
jge,pt
stc
adc
xchg
jbe
stos
mov
sub
mov
movsl
scas
enter
aad
jg
push
outsb
mov
leave
mov
add
call
or
jo
jo
aad
ja
lea
mov
jmp
or
clc
lret
or
ja
outsb
add
cmpsl
scas
or
sub
push
xchg
xchg
xchg
outsb
dec
insb
hlt
int3
cli
mov
mov
mov
cs
jae
movsb
jp
pop
inc
jbe
xor
xlat
mov
jne
cmp
pop
imul
dec
mov
xlat
jae
push
sti
fnstsw
xchg
movsl
xor
jb
xchg
ret
mov
or
inc
jmp
add
or
add
mov
xorb
shrb
dec
hlt
daa
inc
adc
and
loope
sub
ja
or
es
loopnew
leave
xor
loop
clc
rcrb
jb
jb
sbb
lods
push
inc
fiadds
movsb
add
add
mov
push
call
adc
aaa
jmp
clc
pop
clc
arpl
mov
mov
xchg
mov
ljmp
gs
jp
int3
negl
mov
dec
xor
sub
loopne
rorb
mov
and
pop
jno
scas
sbb
mov
rcrl
and
mov
adc
mov
xchg
adc
push
lahf
bound
mov
test
adc
pop
inc
xchg
icebp
lds
mov
es
dec
jmp
cld
es
aaa
mov
cmp
repz
mov
push
fwait
pop
dec
cmp
xor
or
stc
cmp
push
pop
shlb
xchg
jno
aad
movsl
int3
aas
ret
ljmp
cli
mov
hlt
or
cld
jne
ljmp
inc
adc
in
mov
std
mov
adc
push
loopne
push
sub
rolb
or
out
es
mov
aad
mov
imul
mov
xchg
faddl
jnp
inc
in
notl
inc
dec
pop
cli
cmpl
lea
nop
insl
mov
sbb
push
pop
in
sub
xchg
jb
lock
adc
call
sub
xchg
xor
insb
xlat
pop
or
arpl
add
cld
fnstenv
fmuls
and
in
push
jbe
addr16
cmp
scas
and
into
dec
negl
inc
cli
sub
sub
mov
loope
bound
push
pop
xchg
cmp
xor
xchg
inc
push
and
xchg
nop
enter
add
push
mov
call
mov
push
xor
cwtl
add
pop
inc
push
pop
fisubs
add
xor
xchg
sbb
xchg
lret
push
mov
inc
lcall
push
add
inc
lock
fwait
sbb
pusha
pusha
mov
add
clc
push
pusha
xchg
cmp
jle
mov
dec
mov
mov
in
daa
dec
lds
push
mov
sbb
sub
mov
imul
lret
pushf
xchg
or
negb
sbb
loopne
lods
add
ror
repz
push
ror
imul
clc
sbb
pop
fwait
adc
cwtl
xor
ret
rcl
lcall
push
lods
lcall
cmc
lods
dec
fwait
jecxz
repz
or
fidivrl
je
repnz
loopne
push
or
pop
push
ljmp
imul
test
or
pusha
push
lods
pop
cli
sbb
lahf
data16
ret
cltd
or
push
xor
pop
xor
push
repz
insb
aam
sbbb
and
movsl
mov
xor
xchg
sbb
push
icebp
mov
mov
xor
xor
ljmp
mov
cmpsb
push
xor
lret
scas
add
ja
push
adc
lret
shlb
cwtl
pop
in
or
sti
sti
mov
cli
ljmp
movsl
or
inc
lcall
dec
xor
adc
sub
iret
call
sahf
xor
dec
pop
inc
ljmp
add
cvtdq2ps
xchg
fcmove
mov
fistpl
ds
sub
dec
aad
push
jbe
and
add
filds
push
add
jecxz
and
sbb
sub
movsl
ja
jg
pop
sub
into
xlat
push
jge
loope
call
or
call
mov
and
jl
xchg
scas
push
out
jno
cli
jo
cmpb
fucomi
jne
jo
imul
pop
push
loop
fists
jge
imul
lret
mov
notl
movb
pop
xchg
into
icebp
add
pop
mov
jle
sub
mov
into
push
repz
hlt
sub
outsl
mov
dec
jb
adc
aas
aad
push
mov
sub
inc
mov
shll
je
in
lds
outsb
sbb
aam
test
xchg
stos
ret
lods
or
pop
pop
xchg
cmp
ret
adc
dec
xchg
sub
shrb
scas
fmuls
lcall
pusha
lods
and
cltd
lret
imul
mov
insb
mov
loope
mov
adc
addl
sbb
shr
push
cld
cli
mov
jnp
cmc
jge
std
insl
sbb
sbb
dec
pop
jb
pop
mul
leave
push
sahf
jno
push
mov
daa
insl
scas
cli
fnstsw
adc
or
ficomps
add
icebp
push
xchg
jg
daa
imul
jbe
out
pusha
mov
das
int3
loopne
cmp
dec
xlat
shlb
dec
lods
pop
mov
shll
sub
icebp
call
add
pop
into
sub
cmp
pushf
sbb
jl
and
push
push
mov
je
cs
lret
cmp
lods
jae
pop
jge
dec
insb
mov
mov
cmp
aas
rcr
sub
call
int
jnp,pn
inc
fmul
sub
testl
mov
mov
in
mov
stos
or
insb
dec
adc
and
stc
dec
out
in
cmp
push
or
repnz
inc
mov
sarl
aam
jns
mov
dec
jmp
xchg
sub
sub
les
cmp
test
pop
xchg
sbb
mov
cmp
cmp
jae
inc
xor
sti
iret
icebp
arpl
lret
mov
cmp
xor
mov
pop
lods
push
push
fldl
das
mov
pop
lds
jmp
in
ljmp
pop
and
imul
test
arpl
jbe
cmp
nop
mov
and
add
dec
icebp
in
sbb
add
sbb
test
pop
xlat
fwait
outsb
cmpsl
mov
in
sbb
pop
aad
pusha
mov
adc
push
in
mov
imul
mov
fucompp
lcall
pop
mov
and
pusha
ja
and
fwait
in
test
jne
add
hlt
xor
lods
imul
inc
push
mov
mov
cld
xor
jmp
minps
push
push
mov
test
cmp
adc
popf
xchg
out
push
ljmp
xchg
es
xchg
push
fildll
and
inc
outsb
cld
sbbb
call
xchg
jae
push
sub
mov
lcall
clc
dec
test
cwtl
movsb
pop
lods
inc
movsl
lahf
sbb
pop
mov
adc
cli
fldt
sbb
cli
loope
test
pop
int
inc
xor
and
cwtl
stos
and
imul
pop
inc
arpl
pop
mov
je
jl
mul
lods
push
test
imul
mov
and
arpl
ret
mov
inc
pop
push
and
pop
adc
pop
dec
lock
dec
xchg
into
jae
pop
dec
lret
inc
xor
mov
call
jecxz
pop
sbb
xchg
xor
cwtl
mov
aas
pop
pop
addb
sub
ror
outsb
movsl
fdivrs
add
enter
sbb
sub
cmp
xchg
mov
jnp
aas
or
pop
dec
ljmp
adc
loop
rolb
shll
add
sbb
test
cltd
adc
sub
add
sbb
cmp
xchg
jle
xchg
sub
cld
ret
je
fwait
pusha
scas
or
orb
imul
mov
into
pop
dec
cmp
inc
push
adc
lods
aad
mov
into
cltd
sbb
inc
int
enter
pop
lods
inc
repnz
loope
sub
dec
inc
push
js
jnp
xchg
sbb
mulb
repz
lods
imul
aas
sbb
in
scas
jb
dec
subb
inc
iret
jp
and
jmp
mov
inc
insl
repz
mov
loope
adc
movb
lock
call
xor
fs
in
sbbb
sbb
out
aaa
inc
lea
cmp
inc
in
ljmp
inc
inc
dec
pop
fimuls
nop
fstpt
std
inc
mov
cmp
jnp
enter
fwait
call
in
test
push
mov
sbb
xchg
inc
outsb
xor
jle
in
inc
lods
jmp
ljmp
and
out
gs
rcl
xchg
aaa
iret
push
xchg
xor
mov
int3
imul
clc
lcall
jmp
push
scas
sbb
xchg
popa
xchg
xor
mov
mov
sahf
and
das
into
mov
sbb
jge
loop
lods
lret
sub
inc
mov
inc
pop
xchg
fisttpl
push
push
in
cmp
outsb
call
jae
pop
loope
call
lret
adc
outsl
dec
bound
add
popa
mov
add
outsl
pop
inc
xor
mov
jge
inc
sbb
or
ret
push
paddsb
loop
test
test
jno
push
adc
push
leave
enter
jecxz
out
add
hlt
xchg
lahf
aad
mov
inc
outsb
inc
dec
cmp
stos
mov
int3
mov
xor
and
popf
in
rorl
fiaddl
adc
adc
ss
pop
inc
or
insl
push
pushf
or
xor
shlb
filds
dec
add
xorl
jl
sub
nop
out
sbb
in
gs
sbb
outsl
frstor
leave
arpl
fisubrs
adc
nop
sbb
sti
sbb
inc
cmp
les
fdivr
and
cmp
mov
bound
inc
cmp
bound
pop
dec
mov
loop
cli
insl
mov
xchg
sbb
xor
daa
shl
js
movsb
jne
xor
fwait
sub
inc
hlt
cmp
mov
bound
loop
mov
shll
xor
bound
popa
mov
xchg
inc
scas
fdivl
repnz
test
add
jns
imul
xor
adc
or
pop
int
mov
dec
and
shlb
movsl
mov
das
clc
cmp
lods
add
je
les
xchg
sub
in
je
adc
sti
jnp
mov
jno
mov
fildll
in
xor
sub
mov
sub
push
xor
cmp
cmp
popa
imul
jl
inc
inc
sbb
cli
push
cmp
jne
cmp
insl
sbb
mov
adc
sbb
testl
jl
mov
mov
in
sub
inc
fnstenv
data16
or
pusha
adcb
das
sbbb
push
jmp
push
nop
cmc
cmpb
pop
movsb
or
lock
jl
pop
leave
test
in
mov
mov
dec
std
push
push
in
iret
lock
loope
sub
push
inc
jbe
mov
pop
aad
into
mov
jp
je
pop
pop
stos
leave
loop
in
orl
ds
aam
lods
cld
lea
cmp
inc
call
popf
addr16
test
and
fnstcw
enter
inc
adc
divl
dec
or
xor
loop
ljmp
xor
bound
add
or
sbb
shrb
aaa
jnp
cli
addl
pop
lret
mov
sbb
mov
testb
call
movsb
jb
lods
sbb
jae
mov
sub
and
out
cmp
xchg
jo
aas
push
loope
jo
hlt
roll
push
mov
mov
aaa
sbb
mov
fiadds
lea
push
mov
scas
fnstsw
hlt
and
js
or
inc
pop
add
imul
adc
jge
add
ret
dec
icebp
sbb
sub
push
ss
test
es
sub
mov
data16
test
dec
push
xor
fsub
aas
or
leave
cli
iret
mov
leave
pop
add
cmp
push
mov
inc
loope
cmp
jp
fwait
sub
subl
sbb
jo
push
mov
mov
cmp
vshufps
roll
sbb
pop
jae
push
mov
dec
or
lcall
test
rcr
jecxz
in
jnp
sbb
xchg
xchg
int3
adc
mov
or
push
add
gs
xchg
mul
mov
lcall
shll
adc
dec
shll
cmp
xor
in
or
cmpsb
mov
sti
bound
sbb
xlat
push
xor
scas
aas
dec
sbbb
rcrl
sub
ret
add
cwtl
inc
je
jb
mov
fwait
push
stos
lret
and
les
into
jg
repnz
mov
push
fsubr
xchg
je
sbb
jle
test
imul
xlat
push
das
movsl
ljmp
nop
inc
lcall
ret
push
mov
lret
xor
inc
push
push
xor
add
addb
ljmp
leave
rcrl
push
cmp
fcomi
xchg
outsb
ljmp
int
pop
repz
movsl
xchg
or
sbb
dec
mov
mov
adc
jnp
jmp
push
call
or
lret
pushf
mov
sbb
xabort
das
enter
or
dec
cli
aam
sub
inc
in
mov
scas
jno
inc
out
sti
and
push
push
popa
mov
sub
test
test
sbb
mov
xchg
sbb
idivl
adc
pop
or
jbe
lods
in
inc
adc
movsb
out
rcrl
push
sbb
out
jb
adc
adc
push
push
movb
adc
mov
sbb
ror
mov
mov
aas
hlt
push
subb
ffreep
push
in
cld
icebp
es
out
and
scas
icebp
jg
add
adc
push
gs
or
out
js
inc
sti
movsb
loopne
jae
xchg
dec
call
imul
std
dec
lahf
pop
xorl
lret
lods
lcall
lret
xchg
int
imul
out
lret
adcb
lret
inc
adc
pop
inc
int
mov
sbb
incb
jo
mov
ss
lahf
rcll
jmp
les
in
aaa
cmp
daa
popa
jg
and
adc
adc
fcmovnb
stos
pop
roll
in
pop
ss
or
pop
jae
adc
jbe
sbb
outsb
scas
ret
ja
xlat
xchg
icebp
xor
cmp
jae
icebp
mov
inc
mov
aam
pop
es
sub
adc
sbb
popl
xchg
int3
add
mov
mov
fidivs
in
aaa
sbb
pop
dec
lock
bnd
inc
inc
sbb
add
nop
fnstsw
adc
cmc
push
mov
xchg
push
mov
cld
int3
cmp
xor
push
jbe
mov
lahf
xor
sti
push
fisubrs
jno
pop
mov
pop
ret
mov
jmp
imul
in
mov
in
jmp
mov
jb
jge
imul
push
jne
inc
lock
jmp
cmp
cmp
in
mov
dec
cmpl
arpl
enter
mov
pop
outsl
or
and
mov
imul
cmpsl
rcrb
sbb
aam
dec
ret
lret
sbb
lock
les
into
loop
jl
fwait
out
imul
jno
jmp
sub
mov
roll
enter
call
sbbl
das
dec
dec
hlt
mov
nop
cld
lret
push
mov
out
push
fs
mov
enter
mov
ds
ror
mov
push
xor
movsb
ret
inc
flds
pusha
pop
mov
aas
movsl
inc
pop
in
cmpsl
jns
sbb
lods
cld
out
aas
mov
enter
es
pop
pop
test
cmc
popa
mov
lahf
sti
add
rcrb
iret
in
mov
jb
addb
test
jnp
and
fwait
cmp
mov
bound
js
mov
or
ds
pop
lods
pop
in
sub
andb
rclb
mov
test
adc
js
cmp
pop
mov
dec
addb
dec
nop
insl
push
cmp
aaa
dec
call
andb
insb
pop
std
das
mov
sub
jle
adc
in
adc
push
sbb
insl
add
scas
ljmp
dec
xor
ja
mov
jg
jo
inc
mov
movsb
mov
mov
scas
aad
xor
dec
push
popa
add
shrl
or
fwait
push
dec
mov
lret
stc
enter
fstpl
and
pop
mov
pop
dec
adc
mov
clc
pusha
mov
push
iret
jno
dec
xchg
scas
push
xchg
pusha
neg
fdivr
sbb
add
sub
stc
inc
lods
cwtl
sbb
aas
jecxz
fnstcw
xchg
ja
or
jmp
jno
out
push
test
push
jnp
int
or
xchg
mov
into
inc
mov
gs
and
pushf
lock
dec
int
jo
gs
push
cmc
inc
setne
mulb
mov
xor
push
repnz
adcb
sbb
loopne
test
loope
push
dec
iret
enter
insl
dec
dec
js
mov
sahf
sub
cltd
push
loop
sub
sub
xchg
movsl
test
mov
outsb
jb
cmp
sbb
or
into
jp
mov
es
sub
insl
mov
or
js
pop
imul
enter
push
jno
cmp
mov
jae
sub
testb
inc
pop
xchg
xchg
pop
fmull
ffree
jno
js
test
stos
dec
int
mov
jp
add
adc
aaa
and
or
jb
inc
xor
add
shl
aad
mov
adc
stos
scas
sbb
ficomps
call
dec
lahf
shll
and
push
dec
xchg
xchg
sbb
out
pop
movl
jle
sub
lea
dec
in
sub
add
gs
js
sub
scas
add
push
stos
push
out
fstpt
das
xchg
mov
in
jge
dec
sbb
ja
mov
mov
pop
push
or
cli
sbb
sub
add
insl
js
out
cmp
inc
stos
data16
dec
and
nop
push
inc
adc
loopne
mov
outsl
mov
add
mov
je
dec
jle
test
loopne
push
inc
lret
pop
hlt
mov
and
mov
aas
outsb
and
pusha
ret
sahf
subl
in
aas
or
push
iret
cmp
mov
jecxz
sbb
int
add
hlt
outsb
pusha
or
xchg
shlb
inc
in
movsb
repz
dec
push
or
mov
icebp
fdivl
insb
push
jecxz
loop
popf
ss
cmpsl
adc
pop
jp
iret
pop
mov
fistps
mov
push
xchg
call
dec
inc
cmp
test
ret
int
xor
and
mov
cmp
xor
push
stc
lret
ljmp
push
cmc
cmc
mov
shl
mov
jne
pop
cld
repnz
cs
test
dec
mov
nop
jo
icebp
push
fisttps
push
pop
icebp
xchg
daa
outsb
push
add
pop
js
loop
sub
scas
cli
mov
xchg
stos
stc
shlb
lret
or
les
lods
es
cs
and
sbb
hlt
sbb
psubusb
mov
pusha
xor
imul
jmp
enter
inc
icebp
xchg
mov
mov
sbb
adc
lret
out
or
adc
lods
jo
movsb
mov
inc
push
lcall
icebp
hlt
push
insb
mov
cmp
or
pusha
scas
jnp
mov
fcomip
mov
leave
test
dec
add
sub
aam
adc
lock
xchg
mov
addr16
hlt
and
fisttps
cmpsb
sbb
mov
push
mov
mov
or
inc
les
adc
lods
les
bnd
xorl
or
dec
ds
dec
into
cld
test
cmp
lcall
jecxz
xchg
stc
xor
inc
pop
sub
aaa
scas
inc
out
cld
je
mov
sbb
jns
xchg
mov
and
js
in
push
push
mov
sub
lods
mov
cmp
cmp
scas
mov
sub
dec
xchg
xchg
mov
add
dec
fbstp
jle
adc
and
cmpsb
sub
sub
aas
call
loopne
test
out
mov
cmp
mov
hlt
mov
sahf
add
stos
pop
fisttpl
movsl
sub
pop
inc
or
sub
push
dec
loope
dec
push
pop
xchg
dec
jmp
adc
mov
mov
dec
aam
rcl
pop
jns
mov
lret
cmp
sub
dec
aad
mov
imul
cmp
aas
loope
test
in
fisubrs
adc
push
fwait
fwait
xchg
sbb
mov
xchg
push
dec
cmp
pop
std
mov
test
stos
int3
mov
or
out
and
xchg
in
iret
xor
add
push
sti
pop
sub
mov
fsubrs
sbb
mov
mov
jp
jnp
loop
cmp
dec
nop
push
mov
or
lds
xchg
cs
scas
jl
pop
aas
push
cli
imul
jnp
aaa
das
cmp
stos
enter
xor
shl
jo
mov
mov
and
and
pop
les
jecxz
popf
pop
ss
scas
jge
jmp
push
out
mov
cli
or
je
mov
mov
aad
dec
mov
cmp
and
aam
stos
and
sbb
inc
orb
mov
popa
mov
pusha
pop
mov
xor
outsl
ret
dec
std
or
outsl
gs
rcll
aam
fmul
xlat
sub
pop
icebp
fcmovnu
push
jne
mov
push
mov
incb
repz
mov
adc
add
xorb
cmp
xor
imul
inc
lgs
inc
lcall
add
xchg
rclb
inc
push
lea
dec
stos
mov
aad
pop
movsl
xchg
into
push
mov
inc
aas
negb
aad
adc
mov
jo
loope
mov
cld
push
bound
leave
pop
push
xchg
push
mov
push
push
dec
mov
das
jno
insb
rorb
jne
pop
cmp
mov
add
rorb
pop
repz
xor
in
jmp
mov
pop
adc
imul
mov
mov
push
cwtl
in
repnz
sbbl
inc
jmp
xor
shll
push
sahf
jnp
imul
loop
sbb
jae
enter
fdivl
dec
sub
add
xchg
outsl
dec
lods
mulb
pusha
sub
xchg
ds
popf
pop
jnp
fldz
in
ficoml
pop
cmpl
test
adc
sahf
and
push
loopne
loop
rol
push
inc
inc
jno
mov
inc
push
mov
rcl
outsl
push
xchg
sarl
mov
sub
mov
mov
fsubs
dec
pop
jecxz
sahf
arpl
mov
insb
pop
scas
ficoml
int
popa
imul
sub
leave
jns
out
fwait
pushf
jne
negb
and
mov
or
loop
jb
mulb
out
dec
jg
fsubr
xchg
cmp
xorl
adc
test
int
sub
fwait
mov
es
xchg
pushf
into
pop
adc
in
repz
loope
dec
cwtl
clc
push
test
lcall
push
adc
andl
mov
sub
inc
outsb
jmp
adc
or
out
mov
adc
sub
pop
xor
xchg
fstps
pop
mov
sbb
add
cld
fs
cli
std
jl
pop
add
inc
jns
gs
insb
push
fstpl
mov
or
testl
repnz
enter
popa
scas
mov
jno
cltd
ja
mov
ss
outsl
dec
inc
pop
rclb
xchg
mov
xor
mov
movsl
mov
fstps
std
mov
xchg
insl
push
gs
push
inc
je
mov
cwtl
iret
shl
sub
add
or
and
xor
mov
popf
pop
dec
data16
mov
xor
shll
mov
pop
daa
push
lock
cli
xchg
fs
mov
jno
cmp
push
sub
out
dec
fists
enter
cmp
cmc
or
lret
push
push
pop
mov
xchg
add
shlb
push
jo
fld
push
sub
push
cwtl
add
dec
mov
ds
orb
dec
mov
into
sbb
test
cmp
decb
mov
adc
in
icebp
int
lods
out
test
and
sbbb
lret
push
aaa
aad
adc
jp
out
mov
fnclex
call
movsb
xchg
dec
stc
and
sbb
scas
and
xchg
xchg
push
jne
jle
inc
add
mov
sbb
add
dec
push
jae
call
fdivr
fs
mov
dec
push
jp
ds
push
push
popf
cltd
das
movsb
popf
pop
pop
adc
jle
inc
gs
and
lods
xchg
loope
popf
mov
push
dec
mov
xchg
xlat
sub
xor
sahf
cmp
sub
stos
adc
test
int
out
xchg
pop
and
imul
mov
nop
adcl
iret
std
jns
insl
out
repz
cmpsb
in
jnp
push
sub
into
lea
stc
stos
or
or
nop
sbb
sbb
enter
dec
jmp
adc
lods
push
xchg
push
aam
push
cmp
imul
loop
in
cld
fnstenv
and
or
dec
bound
lahf
ja
cmp
popf
and
adc
pushf
xchg
xchg
lahf
outsl
cmpsl
xor
push
push
pop
jbe
xlat
icebp
dec
scas
and
clc
or
jge
inc
xchg
rorb
jo
mov
mov
mov
jge
sti
stos
stos
fdivl
testb
sub
jns
jl
inc
add
mov
fs
xlat
mov
fcmove
add
push
push
subl
pop
pop
rcr
adc
xchg
repnz
mov
jecxz
test
pop
xor
mov
shlb
jmp
jno
mov
gs
clc
push
nop
mov
scas
cmp
push
cmp
outsl
ss
mov
loope
jge
add
sbb
sub
shrb
and
mov
inc
and
push
repnz
jmp
lods
dec
mov
adc
sbb
inc
and
jmp
jl
aam
je
mov
nop
ja
push
or
das
cltd
and
loop
sub
loope
and
test
xchg
pop
xor
enter
cld
mov
adc
out
xchg
sbb
jge
mulb
ljmp
leave
in
arpl
negb
inc
lret
fsubrs
or
pop
pop
lods
dec
lret
sbb
jno
cmc
ficomps
movsl
jb
lcall
lahf
cs
sarb
inc
ret
cmpsl
pusha
loop
and
xor
loop
dec
push
jle
call
and
fs
mov
jl
mov
stc
push
in
jle
and
pop
jmp
aaa
test
rclb
push
push
fcoms
outsl
sahf
xchg
xor
call
mov
imul
dec
mov
mov
jb
sbbb
inc
adc
fldl
or
mov
jl
sub
jne
inc
xor
xchg
nop
jb
adc
dec
push
sti
adc
lret
jge
jae
mov
ja
mov
lret
shlb
push
cli
je
cmp
cltd
shll
repnz
add
outsb
mov
jle
jle
out
lods
or
mov
mov
clc
js
mov
jp
cmpsb
aas
push
fmull
test
data16
inc
xchg
js
scas
jbe
hlt
push
aam
mov
push
mov
pop
addb
cmp
mov
jl
test
cs
cli
inc
or
stos
or
mov
out
add
int
movsl
test
adcb
xchg
test
stc
adc
ficoml
jno
filds
fistl
inc
hlt
add
mov
mov
ljmp
cmpsl
push
lock
jle
or
ret
outsl
incb
pop
arpl
dec
ljmp
dec
testl
nop
fcoml
push
in
aas
dec
jbe
aam
stc
fistpll
ds
pop
xor
jg
dec
rcr
cmp
jle
js
repnz
movsl
ret
clc
sahf
inc
inc
xchg
lods
mov
jne
nop
and
int3
out
fwait
outsb
lretw
jp
and
sbb
popa
imul
arpl
icebp
jns
inc
mov
xchg
fnstenv
loope
mov
ss
outsl
jne
adcl
in
jo
or
push
and
gs
mov
mov
scas
sbb
ret
aas
lock
mov
icebp
test
in
ficoms
push
adc
sbbl
ss
mov
test
pop
inc
push
xor
sbb
add
sub
xchg
mov
out
shll
add
inc
insb
jns
lret
sbb
rcr
jp,pn
popl
in
dec
or
mov
and
dec
je
mov
sti
inc
lods
or
mov
std
mov
mov
fisubrl
popa
jecxz
test
iret
sbbb
test
mov
mov
aam
das
aam
aad
add
add
adc
test
push
cmpb
repz
mov
xchg
cli
call
popa
les
sbb
xor
stos
in
mov
jge
ds
inc
aad
dec
pop
test
insb
fwait
push
ja
test
sub
enter
test
jge
push
adc
inc
ds
iret
mov
dec
add
aad
cmp
notl
jns
pop
iret
fucomi
ret
scas
fiaddl
out
inc
fbld
stos
shrl
movsl
daa
xchg
aaa
adc
inc
push
mov
push
push
popf
call
mov
outsb
fs
inc
xor
and
mov
xorl
movhps
mov
inc
bound
ja
jmp
and
mov
or
lcall
dec
lods
jns
mov
lahf
ljmp
lea
roll
lea
jge
or
insl
jo
mov
shll
dec
adc
inc
lret
push
dec
cmp
dec
leave
jg
push
mov
push
cmp
jl
and
jmp
imul
lds
xchg
scas
sahf
in
sbb
push
das
lods
or
mov
movb
xchg
pusha
jmp
leavew
sbb
xchg
pop
sub
nop
pop
cmc
or
adc
pop
sbb
pop
lods
sbb
repnz
fs
js
add
outsl
jge
mov
mov
hlt
insl
ret
testb
stos
add
xlat
movsl
insb
jbe
insl
mov
mov
push
and
sbb
iret
fdivl
fnstenv
lock
adc
imul
sbb
jge
lret
sub
jb
testb
fs
in
xchg
aad
std
jo
popw
xor
jbe
push
imulb
clc
xor
xor
stc
and
xor
adc
push
xor
sti
cmp
jge
call
xchg
pusha
cmc
subb
push
mov
outsb
xchg
or
sti
fs
mov
pop
lcall
xor
pop
xchg
fildl
ja
jle
jl
or
mov
mov
jns
push
stos
inc
out
insb
cs
dec
push
mov
movsl
cmp
jbe
mov
xchg
xchg
enter
sbb
add
pop
xchg
sub
xchg
lods
js
gs
test
mov
int
mov
sbb
mov
adc
and
pop
jle
sarb
into
xor
pop
mov
lret
jl
mov
xchg
sub
ljmp
push
lret
clc
fidivs
push
xchg
jl
and
adc
pushf
jb
jmp
jb
sub
insl
cmp
stc
jge
fcomip
add
outsl
js
sbb
cmp
cmp
cld
inc
adc
xchg
mov
pusha
out
leave
rcl
xchg
insl
mov
fcomp
push
xor
in
adc
int3
insb
mov
repnz
push
pop
fistpll
lock
les
in
and
idivl
ret
rorl
ret
jne
das
inc
pushf
mov
nop
cmc
jl
jmp
loop
jge
xor
xchg
add
xor
mov
jae
xor
into
inc
pop
outsl
mov
dec
out
cmp
repnz
push
fimull
rorb
inc
mov
mov
pop
pop
push
add
cmp
mov
lea
or
xchg
sub
or
xchg
xor
dec
inc
lret
fucompp
in
xlat
bound
mov
adc
jecxz
or
cmp
jns
stos
add
jp
jl
fimull
lock
push
pop
loop
inc
push
sbb
dec
inc
movsl
lahf
sbb
mov
adcb
shrl
adc
fidivs
icebp
push
and
decb
aad
push
cmp
pop
push
int
jp
pusha
push
mov
lds
popa
mov
je
mov
imul
insb
lret
inc
testb
outsl
xor
data16
lods
jae
dec
stc
sub
fwait
pop
repnz
popa
ljmp
ret
stos
repnz
pop
std
xchg
xor
add
cmp
and
xor
jp
inc
xlat
insb
out
sbb
aad
or
adc
test
jg
xchg
lcall
imul
jbe
fsubrl
pusha
ss
das
icebp
stc
sbb
pop
dec
lahf
xchg
fdivrp
outsl
xchg
and
divl
mov
cmp
leave
dec
and
mov
cwtl
jns
leave
mov
icebp
daa
push
adc
cmp
jae
xor
cmp
fwait
push
sub
jo
fwait
or
add
pop
rcll
out
push
arpl
mov
cli
loop
jae
shl
adc
outsb
insb
cmpsb
iret
fstpt
ja
hlt
scas
xchg
pop
mov
mov
mov
lods
or
add
mov
test
pop
iret
pop
cmp
and
fcmovbe
or
xor
sbb
mov
cmpsl
inc
aaa
or
or
pop
sbb
sub
sbb
mov
sti
sbb
cmc
aam
xchg
ret
fimuls
cld
repz
adc
jmp
sbb
mov
adcb
lahf
sub
out
divb
sub
je
fcomps
fs
cmp
pop
push
and
add
iret
scas
gs
sbb
mov
fwait
ret
je
sahf
xorl
add
nop
fisttps
mov
inc
mov
scas
jp
int
outsl
jp
movsb
popa
stc
inc
sbb
xchg
sub
pop
shlb
lret
inc
neg
daa
jg
aam
imul
in
mov
insl
loop
das
adc
pushf
or
cmp
dec
aas
outsb
push
mov
mov
jmp
and
cmp
mov
xor
xchg
nop
inc
push
ja
push
jo
mov
gs
pop
inc
xor
sub
cltd
aaa
push
mov
and
lahf
pushf
adc
stc
xchg
fisubs
addb
pop
and
in
fnstsw
bound
leave
and
inc
shrl
divl
or
add
sbb
cmp
push
ja
xor
sub
and
subb
fadd
or
popl
xchg
jmp
dec
fimuls
jae
imul
cmc
xchg
jb
push
and
repz
mulb
mov
inc
mov
or
lret
mov
movsl
jle
out
jle
dec
stos
sbb
insl
in
sub
xchg
mov
dec
mov
mov
pusha
clc
xchg
inc
inc
dec
ljmp
jecxz
bnd
notb
rolb
fbld
xor
mov
std
bound
sub
adc
or
fldcw
or
push
inc
adc
ficoms
mov
stos
jno
stos
jns
bound
mov
add
leave
cmpsb
out
leave
fsubs
scas
mov
ret
add
out
dec
sub
pop
jo
test
std
adc
push
outsl
pop
mov
cmp
mov
sysenter
shr
cli
push
inc
add
addr16
cmc
xchg
mov
int3
dec
and
xchg
cmpsb
push
inc
cmp
add
das
mull
mov
dec
fsubl
dec
adc
loope
add
inc
call
jnp
jmp
dec
jmp
filds
inc
inc
rorb
fsub
mov
xchg
xor
fadds
sbb
dec
shr
test
jle
mov
or
or
arpl
cmp
xchg
addr16
and
idiv
mov
inc
pop
js
inc
xchg
movsb
into
lods
mov
lock
xor
or
es
jp
push
ljmp
pop
mov
lret
movsl
es
dec
outsl
mov
jnp
dec
jno
es
loopne
aaa
test
add
xchg
jne
inc
sbbb
jge
push
mov
or
addr16
mov
rol
das
pusha
jae
pop
push
inc
mov
pop
cli
fwait
mov
andb
cs
fsts
int
pusha
push
lds
cmpsb
jbe
push
sub
add
pop
into
iret
mov
add
pusha
popa
sub
imul
sbb
sbb
xchg
movsb
mov
shrl
push
lods
lods
into
ds
xchg
add
stos
mov
js
xchg
cli
aad
cmc
into
pushf
pop
fs
aas
pushw
mov
push
pop
dec
and
mov
lods
in
loop
xchg
test
popl
mov
dec
cmpsb
push
ljmp
out
add
clc
sar
loope
repnz
inc
add
cmp
lock
std
xor
std
jl
shl
shrb
mov
ret
in
in
cmc
and
sbb
xchg
xchg
mov
adc
mov
cli
pop
popf
add
add
push
lds
sub
sbbl
lods
addr16
shl
push
cmc
fistps
sbb
imul
fs
ljmp
in
lods
test
ss
ljmp
std
bound
inc
aad
lcall
scas
mov
push
aas
insb
sub
mulb
jge
data16
sbb
lock
ret
addb
je
fwait
insl
insb
js
gs
cmp
repz
or
sbb
cwtl
jp
lcall
in
mov
fcmovb
icebp
lds
dec
xchg
pop
dec
cmp
sbb
mov
clc
cmpsb
movsb
pop
and
or
stos
subl
lcall
jns
loope
scas
mov
mov
and
mov
mov
add
fwait
sarb
lret
mov
data16
pop
xlat
lea
out
popf
movsb
dec
loopne
pop
idivb
repz
xchg
push
adc
repnz
sbb
xor
cmp
mov
mov
jmp
inc
jg
nop
cmpb
popf
inc
mov
xorl
sub
cmp
es
imull
cmp
and
int
push
xchg
inc
pop
das
scas
ljmp
mov
aad
cs
pop
mov
cltd
sub
scas
push
or
or
sub
dec
cld
mov
jb
sbb
es
shll
or
mov
inc
insl
rcrl
inc
sbb
fimull
inc
adc
popa
xor
mov
pop
dec
mov
orl
negl
lods
scas
ja
xchg
pop
cmp
dec
inc
adc
and
sar
xchg
cmc
dec
rclb
pop
xchg
pop
sbb
cs
fnstcw
mov
or
ror
out
mov
popf
aaa
mov
imul
addb
inc
adc
pop
daa
stc
jg
leave
inc
jbe
test
scas
out
fisubrs
and
out
mov
cmpsb
daa
iret
movsb
out
add
push
xchg
movsl
push
cwtl
push
sahf
dec
sub
dec
stos
in
fistpl
scas
addr16
xlat
loop
cmc
inc
mov
and
add
sbb
aas
inc
cmp
mov
inc
icebp
aad
cmpsb
pop
call
jo
jae
fdivp
mov
pushl
std
icebp
popf
jb
frstor
mov
dec
adc
out
insl
xorb
mov
jmp
and
ret
out
btcl
push
push
in
into
lock
fidivrl
push
push
nop
sarl
pushf
jecxz
iret
nop
leave
lock
sub
push
shlb
xlat
mov
das
pop
adc
push
and
push
lret
pop
dec
push
push
sbb
nop
bnd
das
repnz
inc
pop
imul
insl
jne
test
repz
aad
and
mov
pop
inc
in
sub
mov
gs
inc
mov
pop
pop
int
inc
mov
adc
test
aam
lea
jmp
xchg
fstpl
add
inc
cmp
adc
xor
not
les
pusha
inc
adc
jl
fs
xchg
movsb
adc
add
int3
adcb
xchg
xchg
xchg
js
jle
xor
ljmp
imul
inc
pop
out
and
mov
lock
scas
out
dec
daa
xor
arpl
and
shlb
mov
xchg
repz
stc
iret
adc
sahf
call
aaa
add
pop
dec
jns
push
or
lea
jge
push
fimuls
push
outsl
lock
test
jmp
push
pop
jae
push
ret
fs
or
nop
popa
cs
pop
sbb
sub
pop
cmp
fidivs
insb
fcom
fs
mov
rdpmc
sub
cs
xchg
fcompl
mov
nop
jns
mov
scas
lea
movsb
daa
neg
and
leave
push
sbb
ret
std
inc
in
sbb
adc
scas
xor
and
roll
in
xor
inc
nop
lds
aas
push
mov
ja
sarl
icebp
leave
jb
hlt
adc
stc
pop
adc
sbb
lahf
xchg
ret
pop
jae
push
mov
xor
push
rcl
or
sbbb
push
jg
test
enter
into
mov
das
sbbl
mov
rorl
push
sahf
aaa
mov
dec
push
pop
sub
jle
jmp
xchg
jo
xchg
xchg
push
sbb
pop
js
fisubrl
adc
xchg
outsb
add
add
mov
adc
push
mov
dec
inc
mov
jl
sbb
cmp
push
in
or
mov
aaa
movsb
sub
sub
aad
mov
lahf
cmp
and
sub
aad
mov
sub
popa
xor
add
out
test
js
idivl
xor
pushf
sti
or
mov
cmpsl
es
addr16
xchg
lret
arpl
leave
lcall
int
and
cli
movsl
scas
std
or
adc
fisttpll
inc
pop
and
pop
xchg
out
movsl
sbb
jae
inc
xchg
push
and
jmp
mov
xchg
rorl
cmc
daa
jg
mov
dec
leave
pop
cld
insl
out
or
xchg
popf
arpl
xchg
ja
pop
cmc
mov
and
arpl
es
jno
mov
ret
stos
test
movsl
rcll
fists
inc
jo
inc
mov
lcall
loopne
ja
ljmp
dec
outsb
adc
std
push
cmp
jo
cwtl
mov
mov
mov
lods
xlat
xchg
xchg
push
sbb
push
lods
adc
popf
jno
dec
add
push
sbbl
shrb
scas
cmp
dec
popf
jb
shll
ljmp
icebp
clc
jne
or
in
dec
mov
or
rorb
dec
mov
jge
adc
mov
int
cld
push
push
adc
ljmp
clc
test
insb
cltd
mov
cmp
in
sbb
int3
js
add
xor
in
xrelease
int3
cmp
pop
push
xchg
xchg
and
push
test
out
jp
fcomps
loopne
gs
fcoml
dec
outsl
dec
aad
inc
xor
inc
test
inc
hlt
jge
mov
jo
fsts
or
pushf
mov
mov
je
lret
xor
movsl
adc
popf
outsl
lds
aaa
add
dec
sahf
js
shrb
mov
outsl
ret
test
cltd
jecxz
mov
xchg
subb
addr16
jle
inc
sbbb
cmp
inc
and
mov
aad
jb
and
dec
sub
add
shlb
mov
addr16
stos
add
int
cmp
mov
dec
pop
jg
scas
xchg
adc
ja
push
rcl
out
adc
stc
fidivrl
shr
cli
cli
inc
jb
jmp
or
add
icebp
dec
dec
lret
jb
shlb
int3
jecxz
sub
incl
push
pop
or
enter
mov
das
jnp
sbb
repz
and
cmp
loope
xor
mov
lods
testl
sbb
mov
jns
fs
mov
in
inc
adc
xlat
adc
ss
sub
fldl
repz
popf
movsb
and
imul
out
add
cmp
push
testb
das
mov
bound
push
lods
data16
js
mov
xchg
inc
xchg
stos
stc
arpl
push
xchg
dec
adc
mov
adc
icebp
les
mov
sub
mov
and
mov
aas
cs
push
dec
or
and
in
std
lcall
mov
mov
push
rorb
cs
sarl
jae
lret
sysexit
mov
mov
test
dec
ja
pop
popa
mov
ds
mov
dec
jecxz
inc
pop
inc
dec
fs
dec
adc
sub
out
mov
std
push
xchg
xor
aad
add
and
int
cli
pusha
inc
mov
cmp
aad
push
dec
aam
and
into
and
inc
movsb
adc
and
and
mov
jge
idivl
cmp
test
in
adc
cmpsl
mov
enter
sub
shll
pop
loope
ret
fcoms
std
mov
add
dec
pop
lods
cmp
xchg
shr
sub
sub
add
sarb
scas
mov
dec
pop
aaa
sti
sbb
test
rolb
leave
jnp
mov
add
push
movsl
pop
sub
jno
lahf
mov
mov
xchg
mov
insl
nop
aad
pop
pop
cltd
pop
lods
and
dec
jns
loop
cmp
lods
pop
sti
inc
int
ljmp
cmp
pcmpgtw
rol
xlat
roll
stos
sbb
lds
mov
jg
sub
fnstcw
into
out
cmp
das
loop
inc
cld
pop
je
mov
push
inc
mov
pop
nop
add
jb
je
fsubrl
out
cmc
stos
jecxz
scas
test
dec
mov
xchg
and
js
jns
in
imul
in
jmp
es
and
out
dec
iret
xor
jnp
inc
sbb
mov
movsb
pop
fisubs
cwtl
cltd
jmp
ret
dec
dec
outsl
pop
mov
pop
aas
dec
loop
test
mov
or
or
stos
fsubr
push
and
sub
stc
xchg
arpl
lea
stos
fildll
pusha
fidivs
and
bound
int
mov
mov
or
outsl
addr16
mov
push
push
jo
mov
mov
js
mov
outsl
push
xchg
repz
pop
cmovno
cmp
sti
repnz
test
jae
rorl
pop
pop
push
or
jae
fucomi
mov
cmc
or
or
arpl
popf
adc
add
dec
sub
icebp
inc
xor
out
loope
jno
in
imul
repnz
insb
in
jmp
fisttpll
add
lea
cli
bound
add
inc
js
leave
fwait
sti
shlb
mov
movsb
push
or
sub
or
sarl
scas
pop
jae
shr
pop
mov
test
jmp
sub
mov
popl
lds
imul
push
jp
rcrl
addr16
fucom
cmp
sbb
test
pop
push
daa
rolb
pop
out
adc
mov
and
lock
ljmp
call
jne
out
insb
inc
jp
sti
in
movsl
ja
sahf
dec
es
pop
lret
inc
lds
and
pop
in
mov
push
jb
mov
cmpsl
aad
cs
fistps
das
fcoms
pop
out
in
nop
sbb
mov
popa
mov
dec
mov
outsb
outsb
in
movaps
and
mov
jmp
in
pop
xchg
mov
pop
sbb
pop
xchg
test
lea
jle
pusha
sbb
jle
or
fs
cmp
cli
jg
inc
imul
test
dec
sub
push
mov
mov
mov
dec
jmp
in
jmp
and
cs
cmp
call
mov
outsl
xchg
out
sbb
and
inc
xorl
push
sbb
pop
fnsave
lods
shlb
inc
push
imul
mov
das
jge
fisubl
push
out
xchg
xor
subb
sub
in
daa
cmp
ret
inc
and
pushf
adc
lock
scas
scas
mov
cmpsb
xchg
sub
outsl
jbe
in
mov
xchg
aaa
cmp
jge
push
pop
pusha
mov
jp
jle
inc
xlat
dec
sbb
push
sahf
inc
lods
ret
jno
inc
and
gs
pop
xchg
subps
add
mov
mov
pop
loope
pop
or
cmp
lret
mov
movsb
push
push
mov
int3
lcall
cmp
cld
ja
mov
sub
data16
dec
rcl
dec
push
ret
lret
jae
sahf
mov
dec
dec
mov
in
xchg
mov
shrb
add
pop
cmp
push
mov
mov
jmp
movups
sbb
dec
push
andb
int3
stos
mov
jb
add
sbb
xor
icebp
repnz
cmc
hlt
cmp
fs
and
adc
fidivl
push
ss
fdiv
add
adc
pop
jge
pop
jp
lods
mov
hlt
push
cmp
decl
adc
or
loop
pop
test
push
aam
gs
icebp
jp
stos
adc
aam
xchg
rcrb
jp
filds
xchg
mov
testb
cmp
imul
cmp
add
mov
outsb
jae
mov
push
arpl
test
sub
orb
lods
test
add
jbe
mov
enter
fistpll
mov
push
out
ret
inc
cwtl
fucomip
scas
out
cwtl
cmpsl
cmp
or
jecxz
in
popa
in
xor
jmp
inc
jae
sbb
pop
xorb
cld
mov
pushf
jp
inc
mov
push
adc
add
sarb
mov
pop
dec
or
jo
push
ret
mov
bound
dec
sub
xchg
xor
inc
gs
in
pusha
or
sub
jecxz
jp
repnz
outsl
jle
and
adc
fbld
insw
nop
pop
addl
mov
jns
add
add
fs
je
insb
out
lret
xor
movsb
jmp
clc
or
mov
aaa
jno
aas
or
cwtl
jb
subl
adc
jp
pop
mov
fcomps
ds
pop
mov
jno
mov
push
outsb
jb
ljmp
movsl
insb
mov
ror
fstpl
push
fdivrp
js
fildll
inc
dec
mov
add
mov
push
neg
leave
cmpsb
push
inc
xor
or
sbb
repnz
mull
xchg
testb
pop
add
fwait
add
out
sbbb
sbb
das
imul
cmc
pop
mov
push
mov
pop
adc
xor
sbb
jle
aaa
push
mov
or
lods
fisubl
jne
scas
push
sub
adc
sbb
add
cld
stos
mov
jns
inc
rcrb
push
fisttps
cmp
mov
dec
lahf
cltd
lahf
pop
cld
mov
mov
in
cwtl
div
adcb
nop
jecxz
and
loop
inc
adc
lea
add
xlat
pop
lahf
cwtl
or
movb
insl
pushf
into
lcall
and
mov
mov
rcll
popa
add
jecxz
in
cli
xor
ret
jp
sbb
xchg
ja
and
push
jge
push
sub
aad
movsb
or
adc
cmpl
push
bound
mov
insl
rcrb
mov
test
call
push
mov
lock
pop
dec
je
repnz
std
int
loope
pop
fldenv
fcomi
xchg
mov
mov
dec
jge
lcall
sub
or
push
push
shll
sahf
and
sbb
inc
outsl
jmp
cltd
dec
dec
add
mov
xchg
sbb
jb
jge
inc
fwait
hlt
jle
mov
or
imul
adc
push
int3
pop
or
repz
sti
imul
mov
push
xor
call
test
xor
sar
jp
loope
and
and
bound
sub
add
inc
arpl
scas
scas
and
aaa
xor
jae
push
mov
push
xchg
fldenv
add
fwait
nop
sub
sbb
xchg
orl
inc
sub
insl
cmp
xor
adc
pop
dec
add
sarl
mov
push
mov
popa
lcall
aam
jge
cmpl
fs
mull
iret
jp
lret
ficomps
ds
dec
or
cmpsl
xchg
in
sbb
imul
push
pop
cmp
leave
dec
jns
push
fnstcw
jae
pushf
push
cmp
sbb
addb
sarb
xchg
test
push
fimuls
aas
inc
and
ja
adc
lahf
and
mov
int3
mov
lahf
movsb
repz
arpl
clc
mov
test
into
xchg
xor
sub
ret
imul
lods
jnp
xchg
mov
push
cwtl
cmp
lock
xor
shrb
sarl
faddl
and
outsb
out
in
scas
in
insb
out
mov
xor
sub
arpl
inc
sub
xor
pop
outsb
xchg
ss
push
xchg
mov
mov
jne
and
pop
outsb
imull
rcl
cmp
push
nop
pop
outsb
cmc
ret
stos
xchg
push
sub
add
pop
nop
mov
int
sbb
outsl
mov
fldcw
inc
das
or
shrb
cwtl
dec
in
pop
fcmovu
out
lcall
ss
and
jmp
icebp
push
dec
in
or
cwtl
callw
mov
iret
call
mov
scas
sbb
push
cld
adc
fsubrl
xor
xchg
xchg
or
mov
pop
xchg
adc
call
xchg
cli
push
adc
mov
sti
mov
or
fadds
out
push
sbb
mov
insb
out
xor
push
stos
out
es
outsb
jle
repz
or
loop
inc
adc
loopne
mov
sbb
mov
mov
ds
jge
or
aas
stc
dec
out
inc
loop
hlt
cwtl
jmp
in
mov
pop
and
ret
xchg
cmp
mov
jg
pop
movsb
push
movl
xchg
lods
mov
add
xlat
jp
add
adc
popa
add
mov
pop
xlat
mov
fwait
fwait
push
lahf
cld
scas
inc
je
adc
mov
jle
in
call
bound
stos
rorl
adc
mov
mov
xor
sbb
pop
jmp
sbb
mov
mov
or
stc
or
stc
and
clc
or
pop
dec
jbe
mov
push
movsl
adc
stos
test
test
push
cwtl
in
mov
cwtl
sbb
sub
stos
rolb
adc
jmp
push
ret
popf
cmpsl
sbb
daa
out
jmp
pusha
daa
js
and
cmc
mov
xor
or
fildl
sti
pushw
ss
ds
aaa
mov
cltd
xchg
xchg
notl
mov
mov
sarl
mov
and
mov
repnz
jmp
sbb
js
in
sahf
xor
mov
pop
push
add
pop
mov
pop
xor
xchg
jmp
pop
scas
ror
sub
push
mov
xchg
sub
jnp
mov
addr16
orb
xchg
negl
or
mov
movsb
rclb
mov
push
push
ret
xchg
iret
pop
sbb
dec
jle
mov
enter
in
push
cmp
and
xchg
mov
cmp
and
xor
data16
dec
scas
pop
cmpl
mov
fwait
arpl
and
xor
xor
adc
and
cmpsb
nop
pop
push
pop
aam
dec
push
inc
xchg
cmp
cmpsl
loope
outsb
aad
and
push
fstl
inc
xchg
sbb
mov
xor
das
push
rclb
push
mov
inc
adc
cmpsl
pop
pop
and
sbbl
shrb
sub
inc
movsb
out
pop
enter
jmp
jle
jmp
jg
jae
pop
push
lret
or
adc
sub
lahf
cmp
adc
je
loope
and
cmp
jbe
jbe
push
dec
imul
mov
movsb
pusha
jg
pop
inc
icebp
sub
or
rorb
daa
add
jno
scas
lret
sbb
cmpl
frstor
fisubs
lret
jno
mov
mov
mov
push
fmuls
add
jecxz
dec
xor
jmp
xchg
cwtl
inc
inc
jge
cmp
cmc
pushf
inc
xor
pop
cmp
inc
lea
jg
loopne
mov
ficoml
pushl
test
fcmovu
rol
jb
add
sbb
sti
mov
dec
imul
jg
pop
jecxz
push
sub
lret
test
dec
or
repnz
scas
jle
stc
sub
jo
rclb
mov
push
mov
xor
stos
xor
les
pop
xchg
or
aaa
or
movsb
mov
rorb
icebp
mov
jns
gs
mov
mov
push
jns
into
test
mov
mov
stos
rorb
pop
enter
pusha
cs
push
scas
or
cmp
stos
sbb
filds
jg
leave
push
xchg
push
sub
out
stos
lods
aaa
cmc
call
adc
xor
xor
xchg
lret
loopne
cmp
cs
push
ss
shll
pusha
gs
jle
or
add
pop
aam
sahf
sub
lods
mov
std
and
lds
test
adc
push
mov
xchg
sub
movsb
mov
adc
data16
fs
and
ljmp
sbb
sbb
push
fiaddl
sub
mov
xor
cmp
stos
cmp
sub
clc
mov
in
mov
dec
cmpsl
sbb
hlt
mov
push
xor
movsl
mov
sub
pusha
push
mov
js
data16
sahf
adc
pop
xchg
lea
cmovg
xor
outsl
aas
shrb
and
in
shr
pop
loope
jnp
push
jecxz
or
push
imul
jns
xlat
ret
jno
or
sarb
mov
out
xchg
inc
into
jp
inc
xorb
mov
data16
test
adc
add
xor
dec
mov
fwait
cmp
shlb
loopne
outsb
jae
push
xchg
sub
sub
and
loopne
popa
cld
fnstsw
xor
daa
test
mov
sbb
inc
aas
pop
insb
lahf
sarl
sbb
ror
cmp
roll
push
cmpsb
push
cmc
fcmovne
aad
adc
mov
clc
icebp
jne
or
or
ret
sub
insl
jnp
or
dec
out
and
ss
enter
cmpsb
mov
inc
sarb
aas
adc
adc
hlt
xlat
negb
jmp
test
lret
and
jg
xchg
hlt
mov
jae
jb
mov
es
aad
or
push
repz
xorl
in
push
and
jmp
data16
popf
test
push
push
push
xchg
xor
xchg
or
mov
ss
filds
mov
mov
cwtl
lods
mov
mov
adc
sbb
xchg
mov
inc
cmp
jb
stos
loop
fwait
and
mov
js
push
out
mov
sahf
or
xor
jl
mov
or
pop
sbbb
and
pushf
hlt
mov
fisubs
std
inc
push
adc
pusha
mov
mov
aaa
lcall
call
lock
dec
cltd
pop
sarb
std
cmp
aam
pop
push
cltd
mov
or
mov
rorb
je
in
aaa
and
nop
mov
cmp
push
jle
aas
push
mov
movsl
pop
xchg
sahf
jge
xchg
pop
dec
pop
mov
rclb
and
pusha
movb
cmp
xor
cli
ljmp
xor
jae
hlt
loopne
jl
xor
fnstcw
lds
into
sbb
movsb
sbb
es
rcr
mov
push
push
lods
jl
pmulhuw
scas
xor
test
js
mov
inc
mov
or
repz
xchg
ljmp
lcall
negl
out
sbbl
repnz
outsb
outsl
int
out
push
nop
psllq
repz
cmp
cmpsb
jecxz
ret
lret
ss
hlt
mov
lods
xchg
push
xchg
movsb
popa
dec
xor
ror
pop
cld
out
icebp
push
in
mov
ja
add
xlat
dec
je
dec
aaa
fisttps
or
cli
hlt
cmpsb
cmpsl
add
lret
or
jmp
iret
add
lcall
xchg
sarb
jle
repnz
push
mov
inc
cmp
jno
mov
pop
pop
pusha
push
loop
js
jno
jb
fsubs
jg
fldt
mov
gs
lret
inc
loope
or
fsubr
sub
push
sub
loopne
sahf
dec
popf
push
push
jecxz
and
test
das
or
incb
mov
negl
push
scas
mov
mov
pop
addb
xchg
cmpl
inc
xchg
and
push
add
sti
aam
repnz
out
stos
ret
std
cs
jae
and
xchg
cmp
repz
ja
dec
loopne
rcrb
xor
and
insl
sahf
mov
sub
shll
mov
xor
loop
pop
mov
int3
stos
jle
ret
decl
in
clc
mov
jp
and
fisubl
pop
outsl
sahf
jecxz
inc
rolb
or
loop
test
sub
ljmp
sub
cmp
loop
pop
xchg
adc
icebp
enter
mov
mov
aaa
xchg
imul
lods
adc
in
popa
jle
cld
lahf
adc
adcl
lret
cld
push
fwait
imul
push
and
inc
addl
cmp
adc
and
test
movsb
inc
push
xchg
inc
loopne
add
mov
cmp
ds
add
daa
mov
add
add
repz
out
sti
daa
jo
inc
jbe
je
das
adc
dec
cmp
inc
cmp
outsl
test
xor
jns,pt
jb
fldenv
cmpsl
test
popa
popf
fmuls
outsl
and
aas
lods
cmp
mov
xchg
divw
mov
shlb
loop
cs
push
pushl
lret
xorl
mov
mov
and
xor
cmp
movsl
cwtl
pop
add
sub
hlt
and
int
pop
lret
bound
out
test
loope
negl
dec
push
inc
cmp
cmp
loopne
mov
stos
ljmp
mov
mov
mov
xchg
dec
das
lahf
rolb
mov
add
into
test
call
dec
call
fidivrs
sbb
fdivs
cmp
cs
push
imul
sub
in
repnz
js
inc
pop
stc
jne
jmp
mov
or
and
movsl
push
test
mov
test
dec
adc
cmpsb
ljmp
cltd
cltd
fwait
cmp
xchg
inc
add
inc
mov
add
mov
int3
lods
pop
inc
into
dec
cmp
in
xlat
cmpsb
push
mov
lret
inc
out
and
outsb
addl
loopne
dec
adc
sahf
fstp
xchg
lods
pop
lods
inc
pop
inc
sbb
cmp
jo
cmp
or
mov
int3
cmp
cwtl
cmp
sbbb
push
cmp
in
repnz
or
or
or
and
addr16
insl
aas
call
fcoms
xchg
and
addr16
insb
cmp
int
lret
into
rclb
test
mov
adc
mov
test
pusha
iret
pop
inc
sbb
mov
lds
scas
mov
cmp
xor
sarb
les
clc
dec
cmp
lea
jl
xchg
retw
mov
push
scas
pop
mov
in
xchg
jmp
fnstcw
aas
js
dec
lock
arpl
orb
pop
stos
ljmp
xor
jle
std
fwait
shrl
jle
scas
decl
mov
pop
in
mov
jecxz
add
cmp
mov
xor
in
add
mov
daa
mov
movsl
push
sub
out
and
cmpb
cs
lds
js
ss
les
lahf
jmp
pop
jae
flds
adc
mov
sbb
cmpsb
icebp
xor
cltd
test
adc
xchg
and
popf
mov
loop
les
divb
mov
pop
mov
sub
and
imul
fdivrl
adc
add
stos
jge
repz
leave
adc
scas
std
ret
push
popa
lea
insl
xor
clc
sbb
ret
dec
sbb
xor
psubsb
fidivs
jmp
ret
pop
inc
add
dec
std
shl
call
dec
jo
mov
icebp
dec
int3
out
mov
shlb
popf
xor
push
ljmp
inc
xlat
fidivs
lds
mov
sbb
or
sbb
add
je
sub
jle
push
into
lret
call
inc
mov
fs
sub
cmp
in
loope
insl
popa
mov
push
add
dec
mov
arpl
adc
adc
test
pusha
mov
cs
mov
mov
xchg
notb
notb
sub
or
dec
lds
mov
lahf
inc
dec
xor
dec
lcall
insl
bound
sbbb
iret
rorb
jg
adc
jge
adc
aaa
mov
test
xchg
or
ds
ret
je
push
inc
dec
ja
push
dec
cld
mov
movsl
test
and
sbb
xchg
std
in
mov
or
addr16
sbb
lahf
rorb
push
xchg
fnstenv
sti
add
sub
aad
rorl
jl
push
aaa
push
aas
cmp
pop
lahf
mov
xchg
sti
and
jecxz
xor
rcrl
xchg
and
sbb
iret
sub
xchg
add
mov
xor
hlt
inc
mov
mov
push
add
mov
bound
push
test
in
inc
add
add
xlat
out
and
xchg
aas
out
xor
arpl
int3
in
sbb
or
or
mov
add
sbb
sbbb
dec
scas
loop
xchg
mov
and
fcoms
movsb
not
movsl
cmpsb
lahf
xor
and
add
adc
bound
dec
sub
add
mov
inc
jl
add
je
jb
jle
lock
sti
cmp
xor
jne
push
mov
clc
bound
arpl
ss
jmp
lret
shrb
xchg
mov
imul
mov
cwtl
in
add
repz
jle
mov
push
pop
lods
inc
pusha
mov
fdivrs
cmp
call
adc
inc
in
shrd
cltd
xor
inc
jns
xor
push
sub
out
adcb
mov
inc
dec
scas
inc
xor
dec
stos
mov
adc
xor
negb
les
cs
aas
cld
xchg
ljmp
fstpl
lret
pop
xchg
cmp
inc
inc
aaa
mov
arpl
std
add
inc
out
sbb
jo
movsb
and
shlb
repz
lock
mov
pushf
xchg
xorl
stos
icebp
xor
mov
lods
es
insb
das
into
lds
jb
rorl
test
popfw
popa
jecxz
popa
xchg
dec
add
xor
sub
xchg
inc
cmc
mov
xor
ror
jmp
cmp
test
dec
sbb
inc
pop
jge
rcll
cld
xchg
scas
jle
push
sub
push
adc
inc
fadds
or
xchg
inc
mov
popa
aam
test
push
and
mov
and
int
pop
adc
mov
xchg
pop
call
lret
mov
adc
shll
xor
sbb
mov
xchg
ds
hlt
std
out
mov
pop
dec
mov
and
adc
push
loopne
clc
enter
xchg
jns
fs
adc
ret
jnp
mov
xchg
mov
or
negb
xchg
movsb
add
clc
cmp
rcrl
sbb
cmpsb
push
push
fiadds
xor
adc
or
out
lahf
xchg
jno
bound
push
push
inc
xchg
cmp
mov
push
sub
lock
outsl
pop
dec
push
outsl
xor
mov
pop
rclb
add
into
in
dec
ljmp
and
inc
mov
dec
addr16
add
andb
mov
adc
sub
jne
andb
cs
cltd
bound
mov
add
ret
je
nop
jnp
cmp
ljmp
cmp
out
hlt
ja
mov
push
xor
jp
lods
test
imul
stos
push
ds
iret
repnz
sti
push
shrb
push
enter
imul
jae
or
data16
arpl
mov
imul
dec
inc
arpl
jmp
data16
imul
clc
cmp
scas
stc
gs
ret
lods
xchg
push
icebp
xorl
dec
xlat
daa
jno
test
xchg
adc
negb
xor
stos
inc
movsb
jle
mov
dec
data16
fcoml
push
pusha
popa
add
mov
ficoml
xchg
inc
out
mov
xor
xchg
cmpsl
sub
fists
jo
test
sub
aam
scas
pop
lods
cs
sarl
nop
push
sub
xchg
gs
jae,pn
daa
lcall
hlt
xchg
mov
cmp
sbbb
push
insb
cmp
das
sti
cmp
lock
in
pop
jl
mov
scas
inc
and
xorl
test
fs
add
rorl
loop
sbb
jl
or
pop
arpl
or
repz
push
ss
loop
jg
sbb
pop
clc
bound
popa
in
enter
pushf
inc
and
sbb
sti
and
adc
cld
aaa
jge
push
ja
cmpsl
pushf
mov
test
fcompl
fcmovu
jge
scas
adc
add
flds
mov
fcmovnbe
shrl
push
gs
imul
js
cmc
mov
loopne
jnp
cmp
icebp
xor
cwtl
dec
je
adc
insl
pop
pop
call
sbb
xchg
push
mov
push
mov
subb
dec
fisubrl
and
dec
leave
fidivs
ss
mov
sbb
test
daa
cwtl
test
mov
fucomp
mov
or
insl
sbbl
mov
gs
ljmp
popf
jb
inc
xchg
pop
imulb
jo
push
add
in
and
mov
add
insl
sbb
jl
imul
test
dec
mov
cli
inc
pop
insb
and
cwtl
movsb
cmp
push
mov
ljmp
mov
pop
jae
mov
out
lahf
sub
sbb
gs
mov
ss
sub
or
mov
mov
xlat
cmc
inc
add
movswl
mov
ss
mov
test
sbb
out
arpl
add
xchg
sub
sub
stc
and
adc
pop
add
add
bound
scas
jo
inc
xchg
push
mov
jmp
test
cmp
xor
push
cs
sti
push
or
dec
mov
loop
fptan
daa
stos
mov
cmp
loopne
mov
mov
negl
sub
jmp
xor
xor
lods
mov
iret
mov
xor
mov
data16
or
or
inc
lock
xchg
mov
mov
lea
ffree
mov
jns
fistps
call
test
push
stos
mov
jnp
and
ds
test
out
or
add
fadds
cld
out
cmp
mov
xchg
mov
pop
mov
mov
inc
sub
xor
fstl
repz
jp
push
ret
mov
mov
push
mov
sub
sub
mov
push
or
jg
shr
lods
sub
lods
jp
mov
mov
rclb
out
add
pop
jb
cltd
add
push
or
mov
jne
xor
pop
insb
out
xchg
fidivl
popa
push
cvtps2pi
push
jl
mov
add
or
push
sub
fs
hlt
in
cmp
daa
fnstcw
mov
push
ret
mov
cmp
mov
std
lea
add
dec
lods
jl
push
movsl
les
notb
fwait
adc
jae
cltd
and
lcall
aad
mov
mov
out
inc
enter
bound
adc
mov
xchg
leave
es
inc
lock
push
stos
insl
pop
xlat
ret
ja
loop
popa
stos
fiadds
ja
inc
mov
int
push
iret
gs
cld
jl
outsb
sub
inc
popa
push
enter
in
popa
mov
add
inc
dec
cld
out
sub
or
ja
std
rclb
cmp
repz
adc
add
mov
mov
xchg
push
stc
add
xchg
xchg
rorl
cmp
jbe
adc
mov
jmp
in
sbb
xorb
dec
xlat
xor
into
add
push
iret
push
mov
mov
sahf
jns
sbb
ss
mov
jmp
imul
mov
lea
test
fistpl
int
and
xchg
cmp
cmp
outsl
jp
loope
outsb
cmpsl
cmpsl
dec
cmc
dec
ja
lahf
jne
push
and
out
adc
repnz
mov
push
ja
mov
cmovp
stos
scas
and
mov
xor
and
pop
add
js
mov
xchg
ds
inc
call
ja
outsb
fbstp
cmc
jno
out
sbb
stc
out
xor
dec
jne
les
add
mov
jbe
jmp
out
test
sub
mov
inc
pop
in
sbb
or
xor
in
cmc
loope
ja
idivb
and
add
jnp
add
cmpsl
jmp
jb
out
push
int
xorb
fdivs
jmp
mov
mov
js
sub
inc
push
fisubs
cli
mul
adc
add
outsl
mov
imul
icebp
iret
and
or
jmp
push
and
or
push
mov
lds
mov
push
stos
xor
inc
mov
xlat
mov
andb
xor
mov
mov
xchg
dec
fwait
jg
xchg
xor
sti
mov
nop
ss
bound
rcrb
aaa
xchg
xchg
pop
pop
lock
and
xorl
mov
sub
jecxz,pt
pushf
movsl
je
outsl
clc
xor
xchg
or
inc
lea
dec
pop
mov
roll
sub
mov
cmpsl
fldenv
xchg
mov
and
mov
jns
fisubs
ljmp
es
divb
es
dec
add
pop
add
lods
adc
cmp
jle,pn
xor
mov
lds
dec
sub
inc
pop
push
xor
in
push
and
leave
mov
popl
xlat
pop
cmp
push
xchg
inc
sub
shrb
inc
inc
xchg
stos
xlat
pop
in
sub
xor
shll
lahf
push
dec
daa
xchg
or
sti
push
les
mov
lods
sub
fsubrl
xchg
xor
cmpsb
xchg
sbb
cmp
fisttpl
xchg
xor
mov
mov
xor
jle
dec
fbstp
stos
mov
in
mov
lret
sbb
and
add
cmp
fwait
mov
add
bound
lds
cli
inc
jns
dec
or
mov
lret
mov
out
rol
pop
out
and
sbb
jne
cmp
push
mov
or
adc
dec
jo
mov
xchg
je
sti
fstp
add
aad
sbb
mov
enter
imul
das
dec
lret
rcrl
or
ficompl
lcall
mov
or
sub
int
jns
lahf
or
fidivrl
or
xor
fisubrs
fdivs
pop
addb
push
lds
daa
xchg
mov
mov
call
jg
ret
popf
cld
jp
mov
push
jo
insb
sahf
pop
add
dec
in
sarb
das
cli
push
mov
pop
fimuls
mov
pop
icebp
push
mov
fsubrs
lret
mov
insl
in
adc
std
add
cwtl
outsb
hlt
imulb
xor
hlt
pop
dec
rolb
add
mov
stos
repnz
xor
call
xchg
cltd
mov
and
les
and
add
popa
shll
out
xchg
push
repz
jecxz
cmpsb
push
mov
lock
mov
xchg
mov
adc
xchg
mov
or
nop
mov
mov
insb
or
out
dec
mov
xchg
mov
scas
lahf
shrl
daa
stc
jg
clc
cli
add
stos
fdivrs
push
rcr
sub
mov
jo
repz
jg
inc
mov
xchg
je
test
jp
dec
sbb
int
nop
das
int
or
sub
add
sbbb
sbb
insl
cmp
or
or
addr16
je
cs
ud2
jge
out
insb
dec
scas
insb
or
jb
in
mov
mov
adc
mov
fstpt
cmovne
mov
xor
adc
dec
int3
ds
cmp
das
sub
fdivrs
xchg
and
fwait
mov
sbb
mov
test
sub
pusha
rorl
rol
add
xchg
arpl
adc
cmp
mov
out
dec
outsl
movsl
ud1
fsts
xchg
pop
test
jnp
pop
or
clc
adc
mov
dec
xchg
dec
loop
out
movsl
rolb
call
mov
xchg
aad
sbb
jb
out
test
inc
enter
rcr
sub
fwait
cmp
shl
data16
fcoml
mov
dec
clc
mov
test
mov
push
xlat
loope
cmp
add
push
pop
pop
int3
arpl
ljmp
sub
or
sahf
lcall
mov
leave
mov
cmp
sub
push
dec
jle
loop
fucomp
movsl
and
not
inc
adcl
insb
inc
dec
jg
arpl
inc
data16
jecxz
or
ret
mov
add
adc
orb
leave
lock
call
mov
push
in
mov
lcall
sahf
insb
and
dec
jecxz
push
cmp
mov
push
cld
data16
out
lcall
inc
sbb
in
mov
jno
cld
jp
dec
cmp
adcb
hlt
iret
push
xor
popf
mov
dec
sub
dec
pandn
cld
jnp
mov
mov
stc
mov
insl
inc
lock
jnp
add
test
idivl
cmpsb
add
loopne
add
jecxz
movsl
fwait
std
sbb
sub
int
stos
mov
rcrl
inc
lock
in
fsubrp
add
mov
cmc
mov
inc
and
mov
sbb
adc
fs
adc
jmp
fistpl
shrb
in
leave
cmc
push
inc
popa
jp
subl
sbb
in
and
les
fstp
dec
das
test
jmp
icebp
je
pop
mov
mov
movsb
cltd
scas
sub
cli
mov
ret
jecxz
jo
xchg
sbb
pop
iret
fcomps
xchg
xor
add
sub
mov
loopne
jmp
mov
mulb
fstpl
iret
mov
leave
mov
mov
inc
and
movsb
mov
xchg
into
sbb
push
jg
arpl
sub
or
xchg
scas
leave
mov
test
xor
fcmovu
popf
mov
jnp
ja
test
dec
mov
popa
or
jbe
jp
dec
cmpsl
mov
add
int
lret
lods
or
js
cli
rclb
into
daa
push
les
fistps
or
pushf
incb
mov
mov
hlt
gs
adc
xor
repz
jecxz
fwait
mov
cmp
lods
jg
or
add
loope
shll
les
lods
mov
push
cltd
ret
imul
mov
sub
test
mov
std
dec
dec
movsb
imul
xor
mov
xchg
ja
cmc
in
dec
mov
jl
xor
cmp
xchg
cmp
sarl
pushf
pop
js
out
mov
add
testb
or
sbb
sbb
aas
add
and
rolb
add
and
out
push
push
mov
mov
sub
xchg
outsb
or
fwait
or
adc
cld
mov
divl
and
negb
adc
inc
pop
addb
in
sub
shrl
int3
adc
fadds
xor
imul
outsl
pop
sbbb
jnp
pop
fiaddl
mov
scas
mov
or
out
mov
xchg
lods
lods
add
lret
add
fs
xchg
mov
into
shll
adc
push
insl
xchg
xor
es
hlt
fidivrl
in
out
cmp
jae
jnp
cmpsl
or
xor
stos
cmpsl
add
into
pop
mov
xchg
lods
inc
imull
lods
jbe
enter
nop
cli
inc
push
cmpsl
sbb
push
dec
cmpsl
cmp
movsl
test
xor
xchg
inc
movsl
fmuls
lret
test
fistpll
jnp
mov
loopne
push
adc
sbb
dec
int
cmpsb
ja
incl
fdivr
lcall
shrb
push
mov
lods
jmp
or
jo
jg
mov
enter
into
mov
cmp
mov
sub
cmp
in
mov
arpl
cmp
cld
out
das
fdivr
adc
cmp
outsl
sahf
rolb
mov
or
aas
shrl
dec
mov
push
clc
cmp
gs
test
lods
dec
mov
inc
into
or
and
fwait
in
clc
aas
pushf
std
xlat
or
cli
andb
mov
jae
add
xchg
dec
mov
adc
add
aad
jecxz
mov
dec
ljmp
mov
fs
dec
in
mov
push
shlb
cli
fdivrl
inc
xor
sub
xchg
mov
dec
shlb
js
push
lods
shll
add
sbb
fwait
int
dec
and
and
inc
repz
pop
pop
rorl
out
bound
and
inc
dec
push
xchg
sahf
mov
mov
movsb
pushf
sti
push
and
push
mov
rorl
pop
xchg
push
scas
or
jae
and
shl
xchg
cmp
fdivs
xchg
push
scas
sub
sub
jp
test
mov
xor
mul
cwtl
dec
pop
jno
mov
inc
int
xlat
fs
or
insb
or
jp
xor
mov
or
sbb
popf
mov
inc
xchg
cwtl
push
leave
and
dec
pop
notb
adc
ss
jb
or
incb
lcall
aas
fcomps
scas
pop
rclb
mov
lock
push
push
inc
fmull
sbb
inc
xchg
mov
xor
inc
pop
mov
pop
add
subb
sub
adc
cmp
sbb
jge
je
dec
mov
adc
pop
insl
sti
fidivl
jnp
sub
fisttps
out
mov
jl
xor
mov
out
es
sbb
xor
push
or
stos
sbb
ljmp
das
cmp
mov
xor
add
scas
imul
sti
pop
fiadds
cmc
mov
sbb
in
add
cld
ret
daa
xlat
mov
nop
in
adc
out
jns
es
add
jecxz
clc
sti
xlat
mov
cmc
aaa
aaa
sbb
mov
push
js
cmp
in
out
imul
into
mov
icebp
add
cmp
repnz
fmul
je
dec
pushf
inc
xor
xor
test
push
lret
xor
in
in
fistl
xor
aam
jns
das
out
sbbb
jecxz
out
pop
mov
mov
jo
mov
adcl
nop
inc
and
mov
cltd
pop
orb
pop
std
and
outsb
cmpsb
add
xchg
push
mov
xchg
std
outsl
out
xchg
fwait
outsl
push
enter
sbb
rol
add
cmc
daa
mov
dec
adc
popf
or
push
pop
test
shlb
mov
repnz
insl
out
jle
je
xlat
inc
je
sbb
movsl
mov
sbb
or
mov
mov
test
adc
daa
mov
add
sbb
or
mov
mov
aas
inc
lds
in
cmp
inc
cmpb
das
sarb
bound
fs
cld
sbb
push
and
mov
jl
fs
shl
sarb
leave
sti
add
lret
mov
or
mov
push
cmpsb
fdivl
lcall
push
mov
les
mov
fldl
loop
or
mov
xchg
ja
mov
inc
imul
cmc
add
mov
dec
mov
pushl
mov
insb
push
fsubl
test
out
cmovo
inc
add
mov
insl
stos
pop
jbe
or
and
enter
or
mov
lsl
lret
cmpl
sbb
in
insl
ja
ss
cmp
sarl
xorl
loopne
or
arpl
jecxz
in
lds
lea
sbb
jp
mov
mov
xlat
pop
je
insl
pop
ds
jno
insl
xlat
dec
loope
movsl
cli
arpl
and
popa
and
cmpsb
dec
mov
fistpl
scas
sbb
shrb
addb
mov
mov
outsl
push
mov
xchg
fimuls
adc
sbb
aaa
mov
cmp
pop
int3
sub
shrb
pop
sti
jl
xchg
bnd
iret
mull
loope
leave
rcrb
in
jno
insb
out
mov
fsubrp
pop
sbb
call
jo
out
inc
mov
cmp
dec
adc
das
fbld
std
nop
idiv
add
imul
mov
jle
es
mov
cmp
arpl
pop
pop
es
cmp
sbb
movsl
xchg
xchg
sar
lahf
mov
sti
push
adc
pop
stos
outsb
lahf
sub
in
pop
and
xor
xchg
jg
mov
outsb
inc
sahf
jp
or
sub
lret
stos
pop
push
shr
jmp
aas
push
pusha
shlb
mov
scas
lock
sub
inc
adc
push
outsl
ret
jmp
jecxz
and
inc
xor
pop
je
jnp
mov
icebp
pusha
sbb
and
mov
pop
in
movsl
rcrl
adc
insl
popf
jge
jnp
out
and
mov
and
push
popa
dec
jae
or
lahf
pop
sub
jne
pop
cmc
pusha
mov
push
xor
dec
add
in
inc
cmp
dec
loope
je
sti
shl
mov
loopne
fdivr
sbb
xor
push
in
pop
imull
inc
xchg
lock
lahf
inc
add
add
les
repnz
mov
fildl
mov
mov
inc
jle
js
sbb
push
mov
sbb
in
dec
dec
leave
fistpl
adc
into
dec
or
sub
mov
mov
mov
mov
jb
mov
cmc
push
adc
cmp
xchg
leave
lret
iret
lret
push
das
sbb
enter
mov
fs
cmp
jge
test
xchg
add
cwtl
ja
inc
jecxz
xor
mov
jno
ret
xchg
mov
test
addb
xlat
xor
cmp
push
imull
jbe
pop
xchg
fnstenv
mov
lock
push
leave
sbb
mov
add
fstl
xchg
call
mov
xor
push
test
jle
xor
enter
sub
repz
jae,pn
mov
adc
pop
inc
mov
cltd
and
push
loop
fsubs
mov
mov
into
cmpsl
mov
jle
stos
sub
sbb
out
enter
hlt
pop
and
sbb
pop
or
sbb
lcall
lock
push
mov
lods
push
lret
icebp
xchg
leave
call
ljmp
scas
lcall
push
cs
in
mov
jnp
cmp
fisttps
aaa
imul
pop
fldenv
mov
inc
cmp
add
leave
out
outsl
fucomp
mov
push
bound
cmp
add
pop
jnp
orl
adc
test
stos
mov
pusha
insb
int
sbb
cmc
and
mov
sub
lahf
pop
lea
jl
orb
pop
push
int3
mov
mov
outsb
andl
mov
cmpsb
insl
jecxz
cmp
xor
pop
mov
adc
hlt
dec
and
sti
xchg
xchg
or
ret
and
int
lods
mov
in
cmp
mov
aas
or
stc
int
je
loope
rorb
pop
test
add
aam
cwtl
or
adc
mull
ficompl
adc
mov
fidivrs
jnp
inc
or
jecxz
add
sub
es
add
adc
and
outsl
dec
push
sbb
jo
ds
cld
out
mov
adc
into
aas
int
insb
push
sti
dec
pop
mov
out
mov
leave
fdivrp
lret
mov
cli
pop
js
add
inc
lods
ret
add
push
cmp
mov
mov
cmpsl
imull
mov
dec
call
push
jg
xchg
pushf
jo
adc
sbb
stc
xchg
mov
mov
xchg
add
sub
fbld
jae
xlat
adc
mov
pusha
pop
out
imul
nop
push
mov
mov
lcall
adc
add
adc
loope
fisubl
cmp
repz
inc
mov
test
hlt
clc
dec
fdivrs
leave
daa
or
aaa
lret
lret
adc
sbb
popf
push
and
dec
pushf
stos
cmpb
daa
jae
cmpb
xchg
lods
xor
aas
out
jge
sbb
xchg
inc
xchg
test
lret
shlb
add
out
lea
sahf
pop
enter
xorb
stos
pop
add
dec
int3
out
mov
rorb
jge
jno
sahf
mov
inc
out
push
aad
into
aas
pop
gs
mov
jmp
mov
clc
inc
lcall
fiaddl
in
into
mov
sbb
mov
mov
sub
adc
std
repnz
and
inc
repz
arpl
sarb
or
pop
repnz
inc
js
sub
lds
pop
and
ja
xor
cmp
les
scas
leave
or
cwtl
ljmp
xchg
jge
mov
mov
inc
out
idiv
jne
inc
es
out
roll
adc
cltd
or
fsubr
cmp
mov
jnp
dec
cmpsl
prefetcht1
icebp
cmp
inc
xor
jo
cmp
dec
mov
mov
push
push
subb
or
jo
xchg
pop
dec
inc
push
adc
popa
in
enter
push
mov
sub
and
mov
and
mov
xor
aas
fsts
mov
cli
fwait
jno
adc
push
mov
push
es
popa
inc
imul
call
fstpl
test
cli
xor
sbb
ficoml
adc
and
fs
ds
icebp
aad
inc
jne
push
fdivrl
mov
xchg
lds
jo
out
shlb
push
pop
cmp
or
repz
cld
loope
push
pushf
inc
push
sub
or
lret
test
out
or
shl
add
xor
pop
xlat
mov
shll
enter
imul
and
adc
add
dec
mov
ret
repnz
insb
ret
adc
ja
sub
pmaddwd
cwtl
ss
ss
xor
mov
loop
xchg
ret
outsb
jge
cld
in
rclb
mov
xcrypt-cfb
cmpsl
cmpsl
xor
in
ljmp
leavew
mov
jle
imul
jl
inc
push
inc
inc
xchg
dec
inc
push
inc
clc
jl
iret
sub
push
pop
xor
add
out
add
fwait
and
shlb
xor
jns
mov
stc
mov
sbb
scas
add
xor
jo
cmpsb
movsb
negb
sti
push
fldcw
push
push
out
pop
lret
cmp
imul
inc
lret
sbbb
push
inc
out
movsl
loopne
fwait
dec
cmp
jbe
lcall
lock
mov
enter
loop
and
fists
aad
pop
loop
or
push
jbe
mov
cmp
push
mov
fcoms
test
cs
sbbl
test
jno
xor
cmpsb
into
push
lret
cld
inc
mov
leave
out
fildl
or
dec
dec
adc
add
inc
aam
cmpsl
and
jnp
imul
inc
out
insb
xorb
xchg
mov
js
push
mov
adc
add
nop
ret
lcall
outsl
xor
mov
dec
out
cmp
popf
pop
mov
hlt
adc
imul
pop
push
ret
add
inc
mov
in
mov
out
xchg
mov
xchg
add
insb
mov
mov
test
nop
sub
push
addr16
testb
cmovbe
imul
add
inc
outsl
xor
lods
and
adc
lret
stc
adc
outsb
cmpsl
xor
xchg
outsl
aam
lea
mov
ret
pop
aam
ja
fldenv
cli
hlt
mov
xchg
jae
stos
and
std
and
ret
mov
aaa
cmc
insl
fiaddl
pop
push
fs
shlb
scas
xor
adc
push
push
ja
pop
in
or
sbb
adc
and
movsb
div
scas
inc
mov
movl
ret
add
insb
push
jmp
dec
lret
test
icebp
sub
pop
bound
lcall
mov
cmp
mov
and
sbbb
dec
stos
cmpsb
int
add
jle
push
data16
dec
ficomps
adc
jne
mov
les
pop
sub
mov
rorl
movsl
cmp
mov
sarl
fstps
or
lret
xor
sbb
sbb
mov
xchg
into
jbe
cli
or
xlat
xor
dec
insb
or
nop
stc
cltd
ret
in
loopne
jae
adc
add
jnp
cmp
fxch
xor
add
mov
and
cmc
xor
adc
mov
jns
test
fcmovu
sub
push
shl
mov
pop
cmc
stos
mov
adc
std
popf
adc
rolb
sbb
or
lods
jb
xchg
in
mov
out
inc
jne
andb
and
add
addr16
hlt
sbb
pop
out
xor
fs
mov
aam
lahf
sti
jp
or
loop
jae
and
push
js
enter
ret
into
xor
repz
iret
mov
sbb
cmpsb
cmp
sahf
fldt
ds
cmpsl
outsl
push
jp
lahf
outsb
push
enter
rclb
insl
xlat
add
lret
sub
fdivp
inc
jecxz
iret
and
negb
shll
add
mov
lret
xorb
push
mov
aad
xor
xchg
xchg
mov
mov
adc
mov
mov
or
or
mov
and
push
stos
mov
iret
sbb
or
mov
aad
mov
xor
lcall
sub
mov
sbb
mov
sub
mov
sbbb
mov
negl
lock
pop
dec
adc
pop
aas
xchg
push
dec
or
adcl
cmp
xchg
mul
inc
pop
mov
cmp
negl
mov
loop
sbb
adc
xor
and
sbb
fidivs
divb
call
in
cli
jae
fwait
jg
push
imul
jno
test
imul
jmp
cwtl
data16
push
dec
test
arpl
orb
cmpsb
add
shl
int
shlb
addb
lea
lea
vmwrite
ljmp
inc
lret
outsb
mov
je
sub
xchg
xchg
cmp
push
pop
fists
xchg
pop
test
mov
loope
in
in
pop
cmp
cltd
sub
sti
jle,pn
mov
enter
inc
sbb
mov
jb
add
cmp
or
xor
int3
out
push
testb
sub
adc
imul
pop
adc
pop
pop
dec
sahf
pushf
cs
pop
scas
nop
sub
sbb
aad
or
ror
cltd
stc
jp
push
push
add
mov
sahf
jae
mov
dec
aas
xchg
cmp
xchg
mov
jp
cmpsb
xor
or
pop
push
enter
add
out
iret
xor
insb
mov
in
adc
mov
mov
hlt
or
sbb
cld
popf
cmovp
out
adc
rorl
movsl
xor
mov
jae
jne
mov
mov
shll
insl
adc
mov
mov
clc
xchg
popf
in
sub
insl
lcall
push
popf
in
push
shlb
movsl
dec
inc
cmpsl
adc
mov
jge
push
or
in
aam
push
pop
cmpb
push
push
mov
xchg
mov
sub
xchg
inc
fadd
notb
pushf
mov
lret
mov
sbb
add
movsb
repnz
cli
ljmp
stos
sub
dec
je
xor
xchg
pop
lock
jecxz
jmp
adc
xchg
jno
iret
jp
adc
sbb
sbb
and
rol
mov
fmuls
inc
push
scas
xchg
xor
dec
in
and
adc
shll
loope
int3
push
lds
les
mov
sub
mov
xchg
shlb
cmpsw
jge
ficompl
add
pop
xchg
jge
dec
jmp
inc
adc
xlat
jae
mov
sub
jge
sarb
scas
mov
and
roll
shrb
and
sub
orl
lcall
xchg
jecxz
push
jl
add
jmp
jbe
mov
mov
mov
stos
insb
adc
ret
addl
popa
xor
fstl
push
outsl
xor
lds
push
lds
stc
mov
in
mov
cmp
push
enter
decb
add
pop
xchg
arpl
jg
pop
adc
pop
jecxz
mov
mov
fsub
jge
cmp
out
mov
mov
push
aad
mov
cmp
int3
mov
sub
sbb
cmpsl
pop
test
test
sub
lret
imul
cmp
out
or
jo
inc
shll
cmp
sahf
loope
fldl
call
mov
insb
fwait
inc
popa
std
push
push
lock
cli
idivl
gs
sub
test
or
push
out
push
pop
jmp
fiaddl
movsb
rorl
clc
xchg
jnp
sbb
aam
jno
or
or
pop
add
or
push
inc
stc
jbe
icebp
cmp
sti
jge
adc
fistps
bts
mov
popa
xchg
scas
stc
idivl
push
mov
mov
or
jmp
dec
push
and
in
add
cmp
cmc
cli
std
fisubs
cld
aaa
sbb
test
push
aad
sarb
mov
and
push
rcrb
and
pop
and
cmp
pop
mov
bound
cmp
leave
xor
or
mov
pop
das
jns,pt
push
jmp
adc
and
pop
dec
and
mov
mov
and
stc
jge
std
js
in
ds
in
add
imul
xchg
pop
pusha
out
cmc
adc
into
shl
push
mov
cmp
mov
inc
adcl
lahf
xchg
sub
xor
pop
mov
leave
push
aaa
lds
sbb
push
iret
call
cmp
jle
xchg
nop
mov
or
cs
insb
mov
jo
enter
add
cmp
test
jmp
mov
sar
xor
push
push
dec
stos
outsl
or
mov
jbe
out
add
or
mov
enter
jns
adc
mov
dec
add
leave
mov
add
cmpsl
popl
divb
sbb
repz
daa
pop
inc
xchg
jbe
cmp
mov
push
cmp
movsl
xlat
push
or
jbe
stos
lea
adc
mov
daa
dec
pop
and
mov
out
into
add
pop
sbb
inc
mov
jns
jae
pop
cmp
in
jecxz
cmpb
sbb
repz
pop
sarb
jmp
mov
adc
fidivs
and
adc
sbb
rcr
inc
ja
fcoml
les
data16
sub
add
pop
inc
hlt
mov
mov
cwtl
shl
xchg
jmp
sbb
scas
add
jo
push
mov
cmp
divl
jo
lods
sub
xchg
fcmovnu
lods
jp
repnz
pop
scas
mov
sub
jecxz
sti
push
dec
cmp
xchg
mov
scas
push
loopne
jae
fstl
sub
push
shll
icebp
xchg
lcall
pop
sahf
push
fcom
dec
gs
add
stos
jge
ljmp
xor
ljmp
xchg
lea
sbb
in
fmulp
sub
mov
sub
dec
or
adc
jmp
arpl
dec
enter
or
es
sub
mov
aad
out
enter
pusha
aam
test
adc
cmpsb
stc
sbb
enter
shrl
ds
test
jne
xor
dec
adc
dec
stos
sti
dec
cwtl
repz
loope
push
subb
sti
inc
jne
fwait
lods
jge
fwait
outsl
add
cs
add
es
add
adc
daa
addl
or
sbb
rorb
sbb
dec
sarb
fistps
jbe
popf
xor
lock
vunpckhps
outsl
and
add
cmpsb
stos
paddq
jb
dec
xchg
mov
push
lods
jge
add
or
sub
xchg
lds
mov
and
outsl
mov
xrelease
dec
ret
sarb
nop
cmp
mov
iret
inc
sti
ss
cli
das
shlb
xlat
mov
push
lods
out
mov
enter
and
stos
add
fldenv
hlt
cwtl
mov
out
call
aad
ljmp
cmpsb
testb
test
lods
xor
and
and
xchg
push
mov
cmp
imul
inc
sub
pop
xchg
add
pop
cmp
mov
and
push
xor
popf
enter
jmp
fninit
es
movsb
mov
pop
and
sbb
lahf
movups
cvtpi2ps
incb
aaa
fidivs
push
sub
push
shll
ret
je
insb
xchg
push
test
inc
into
xchg
int3
andb
mov
xlat
sbb
pop
ds
movsb
cltd
leave
mov
sbb
dec
sti
hlt
jl
adc
fwait
cmp
push
mov
outsl
inc
mov
rolb
jae
push
dec
inc
mov
stc
and
dec
data16
pushf
sahf
sub
xor
mov
ja
iret
adc
inc
push
flds
rcll
mov
ficoml
mov
popa
and
scas
pop
xchg
adc
mov
test
and
push
fwait
dec
add
cmp
fistpll
inc
rcrl
pop
in
adc
pop
adc
movb
mov
popf
aas
jne
out
push
fdiv
mov
mov
test
jge
xchg
push
mov
mov
push
addl
xchg
js
arpl
fldt
mov
sub
push
mov
in
adc
adc
push
fsub
pushf
push
add
and
int3
out
or
add
mov
movsb
adc
cs
clc
sub
int3
iret
mov
rcrb
ficompl
test
add
inc
cmp
and
jg
bound
inc
add
xchg
cmp
pop
xchg
sbb
add
je
fidivrs
roll
mov
mov
push
fcmovnu
cld
adc
test
jb
je
lea
mov
jns
pop
adc
outsb
insb
inc
pop
das
push
or
outsb
xor
rorl
sbb
mov
fbstp
pop
lea
in
fnstcw
fistpl
jp
mov
cmp
push
orb
push
leave
cli
rep
les
jg
xchg
xor
int3
leave
pop
ja
imul
fdiv
inc
jge
sub
call
jne
xchg
popa
movsb
ficomps
and
mov
inc
jmp
pop
inc
bound
movhps
iret
cmp
mov
mov
leave
sbb
scas
push
or
outsl
loopne
aas
sbb
inc
adc
lahf
dec
and
push
mov
inc
cltd
xlat
sahf
test
cwtl
arpl
out
sbb
sti
dec
push
push
negb
fmull
inc
shll
mov
iret
dec
movsl
sub
lcall
cmp
daa
pop
pop
subl
add
push
mov
cs
jb
mov
mov
imul
lods
fistpll
imul
lahf
sti
adcl
ficoml
dec
fistpl
hlt
mov
dec
fs
out
out
mov
pushf
jno
imul
test
aad
xor
dec
inc
cmp
push
arpl
cwtl
jg
mov
xchg
add
movsl
lcall
fwait
pop
cmp
sub
fsubrs
gs
adc
add
lods
icebp
mov
out
adc
adc
pop
jg
mov
daa
xchg
aam
je
jae
ds
add
cmc
subb
mov
lret
push
std
movl
pop
inc
outsb
push
cwtl
dec
or
mov
mov
and
sbb
cmp
sarb
push
lock
repnz
push
fnsave
lahf
imul
xor
loopne
cli
gs
push
push
pop
mov
cmp
iret
dec
jmp
xchg
adc
sbb
mov
push
xor
jne
cwtl
mov
negb
lret
adc
pop
cmpsl
popf
inc
nop
aad
push
and
out
test
pop
subb
ljmp
imul
adcb
aad
popa
xor
lds
add
dec
cmp
cmp
les
and
mov
out
aad
dec
and
add
ret
cwtl
in
loope
pop
fmul
xchg
clc
aam
enter
les
sub
sub
pop
addr16
stos
xchg
or
jns
or
inc
arpl
xchg
bt
cmp
cmp
and
repz
or
stos
pop
push
stos
sub
pushf
call
repnz
and
stc
adc
loope
scas
mulb
sbb
test
outsb
jmp
call
pop
fcom
aas
add
test
push
loopne
pusha
in
lods
lret
ret
xchg
ret
pop
mov
push
xchg
outsl
dec
popa
mov
sub
push
lret
insb
jmp
dec
inc
mov
push
in
mov
pop
jno
orb
adc
adc
xchg
out
xchg
sub
pop
mov
cmpsb
mov
cmp
xchg
popf
shrb
push
add
pop
mov
fsubs
push
repz
pop
dec
loopne
pop
xchg
in
insb
mov
cvtsd2si
lret
ljmp
addr16
xchg
pop
push
je
inc
movsb
xlat
repz
and
or
xchg
pop
lods
cmp
movsb
test
aam
cltd
cmp
xor
insl
lret
push
scas
popl
inc
in
fs
lds
jne
xor
fisttpl
out
jno
rorb
lret
cli
cmp
negb
mov
in
jecxz
pop
jp
movsb
stc
xor
inc
adc
mov
fcompl
sbb
popf
mov
add
enter
pop
mov
pop
lea
pop
dec
xorl
mov
imul
sahf
cli
testl
insb
sarl
xor
jmp
out
clc
dec
push
xchg
mov
fldcw
rcrb
and
cmp
enter
aas
mov
mov
cmp
dec
enter
daa
negb
push
movsb
or
dec
mov
lret
mov
adc
enter
sti
pop
mov
add
hlt
pop
inc
sbb
dec
fdivrl
cmp
mov
or
std
sbb
cmpl
inc
dec
les
dec
jl
cs
xor
mov
sar
cwtl
jnp
push
adc
test
lret
inc
cmpl
aaa
push
mov
sbb
cmpsb
xchg
pop
cmp
mov
aad
jno
hlt
pop
shll
push
inc
push
inc
aaa
mov
xchg
mov
out
sti
js
sbb
push
sarl
push
cmp
push
rorb
pop
inc
mov
dec
or
repz
cmpsl
mov
inc
outsl
pop
xchg
mov
sbb
xchg
stc
insl
mov
int
pop
loop
jb
xchg
push
mov
add
pushf
mov
in
pop
add
pop
cmp
push
jge
loopne
fisubs
and
lret
in
pop
ds
in
and
lcall
aas
test
and
loop
lret
mov
icebp
mov
xlat
fstps
mov
leave
lea
mov
xchg
ja
inc
out
mov
jbe
and
push
push
js
mov
in
les
pushl
inc
movsl
pop
adc
or
shr
add
aaa
scas
and
jg
push
sbb
loop
mov
loop
mov
cmc
lret
fwait
aaa
fnsave
daa
cmp
les
dec
hlt
xchg
xchg
jns
mov
xchg
sbb
out
push
daa
stos
repz
popf
pop
inc
ret
bound
pop
mov
pop
jno
clc
dec
cmpsl
cmp
dec
xor
mov
jge
mov
icebp
sbb
sbb
pop
push
ja
sub
fcomps
movsl
dec
or
ljmp
cltd
cmc
or
lds
cmp
mov
in
and
mov
aad
test
out
mov
stc
pop
int3
or
xchg
lds
out
mov
fisttpll
mov
cli
inc
popa
movlps
mov
arpl
addr16
sub
adc
fnstenv
je
inc
in
jg
hlt
adc
push
inc
fwait
mov
sub
aaa
fistpll
cmp
push
pop
in
mov
and
xor
rcll
mulb
scas
mov
pop
xor
mov
hlt
aam
sti
movsb
in
jnp
xchg
mov
dec
xor
cmp
jae
rcrl
stc
test
push
out
cmp
mov
addr16
and
xchg
insl
jae
shll
mov
je
popl
push
or
fwait
iret
popf
mov
pop
rolb
addb
icebp
fcompl
icebp
stos
and
inc
jo
pop
and
adc
test
fcompl
sbb
inc
mov
jbe
clc
bound
les
dec
insl
pop
sub
cmp
and
mov
idivb
sbb
mov
cld
pop
lcall
lret
orl
fisttpll
fs
mov
mov
adc
inc
int3
xor
filds
pop
pop
roll
fwait
add
jle
nop
mov
outsl
pop
mov
pop
ljmp
push
sahf
cmpsl
lret
stc
por
push
decb
or
mov
out
mov
mov
sbb
fs
movsb
sub
cld
shlb
inc
mov
cmp
les
mov
fidivs
out
aad
cmp
out
cmpb
xor
aam
mov
sub
dec
rcrl
addr16
int3
daa
xchg
stos
lock
sub
outsb
and
fmuls
test
lea
dec
fsubl
fiadds
call
jbe
pop
mov
dec
pop
adc
mov
inc
push
mov
ror
aas
or
jnp
xchg
push
mov
push
lret
aam
lret
pop
sarb
mov
insb
jns
cmp
xchg
sbb
into
xchg
xor
lds
jbe
cli
shll
dec
insl
push
xor
aam
test
xlat
xchg
jg
and
sbb
int3
mov
fs
rcl
xlat
and
inc
push
mov
and
gs
mov
push
sbb
sub
xor
aaa
pop
ret
dec
push
fbld
mov
rclb
loopne
mov
in
aad
mov
stos
outsl
repz
mov
or
fnstsw
ljmp
jbe
shl
jmp
testb
js
pushf
jns
xchg
stos
test
push
ja
add
call
frstor
jne
push
mov
sahf
mov
xor
xchg
push
fwait
pop
rcrl
and
mov
inc
xchg
idiv
mov
into
adc
and
and
adc
jmp
push
leave
shll
xchg
gs
fistpll
jle
out
cmp
sbb
sub
into
test
cmp
loopne
sbb
push
cltd
rol
xchg
jbe
mov
in
sbb
fisttpll
adc
lret
xor
xchg
mov
call
mov
cmpsb
add
mov
aas
movb
jg
mov
adc
mov
sbbl
sub
std
rol
addl
sub
pop
xor
adc
push
cmpsb
mov
mov
subl
xor
aas
mov
sbb
outsl
stos
sbb
enter
sub
iret
add
sub
mov
into
icebp
mov
sbb
pop
gs
lret
icebp
cltd
ljmp
dec
mov
pop
adc
mov
mov
mov
insl
scas
mov
jecxz
or
insl
mov
test
cmp
fwait
jbe
nop
sub
xchg
int
xchg
mov
adcl
cmp
ljmp
movsb
cs
jle
xchg
xsave
inc
cmpsl
lods
les
into
es
int
adc
jmp
imul
adc
cmc
dec
and
push
jnp
dec
aaa
rcrb
jb
mov
mov
dec
jmp
push
sub
mov
cld
lcall
loope
inc
lock
push
ja
sahf
pop
jmp
and
cltd
jbe
dec
hlt
pop
add
mov
nop
cmp
dec
mov
cmc
sti
pop
xchg
mov
jb
les
aad
push
fdivr
mov
jae
stc
mov
lret
cmpsl
lcall
mov
addr16
enter
lcall
imul
jge
repz
sahf
push
mov
push
jmp
insb
jbe
cmp
or
lods
in
xchg
push
and
ss
aam
pop
in
pop
lret
adc
and
xchg
fsubl
or
xor
scas
jo
ds
mov
enter
rclb
jl
scas
or
inc
rolb
mov
inc
jp
shll
push
cmc
push
int3
popa
mov
adc
negb
dec
sti
mul
or
sbb
rcr
mov
dec
jmp
scas
cli
rorb
hlt
sbb
or
out
imul
inc
inc
jmp
cltd
cmc
jg
orl
mov
scas
and
inc
inc
add
ja
bnd
mov
adc
mov
test
popl
shl
push
shlb
addb
rorb
rorl
xor
xor
xor
sbb
fadds
dec
pop
into
stos
test
mov
mov
inc
or
scas
outsb
iret
in
sub
js
sarb
jb
mov
xchg
sub
testl
incb
rolb
fucomip
mov
iret
jae
jb
mov
inc
sub
lahf
mov
xchg
cmpb
pushf
xchg
outsl
orl
cmpsb
xchg
mov
mov
out
ret
push
sub
add
cld
lahf
add
mov
pop
pop
jecxz
xor
fst
and
jmp
jle
adc
test
xchg
push
mov
sbb
and
scas
adc
xchg
jecxz
mov
shlb
hlt
out
pusha
and
push
jb
dec
imul
jl
or
fnstsw
mov
in
xor
mov
rdpmc
je
jns
repz
nop
test
pusha
cld
mov
jge
shr
rcl
in
cltd
mov
sub
fs
push
insl
xor
lea
sub
loope
out
jecxz
sub
mov
sti
mov
push
lea
loopne
push
mov
sub
pop
and
fadd
mov
cmc
or
xor
and
in
out
adc
fcom
jp
je
sar
dec
mov
fs
push
cmp
out
into
push
pop
arpl
mov
mov
aad
lods
adc
xchg
and
out
mov
mov
adc
shlb
jne
jb
jmp
lahf
adc
mov
jae
mov
popa
jbe
mov
sti
push
mov
mov
lea
push
jbe
mov
jno
mov
adc
imul
loope
pop
iret
inc
dec
sbb
cmp
popa
sbb
pusha
or
arpl
mov
icebp
xchg
fwait
fs
aam
mov
cmpb
xor
orl
pusha
nop
mov
shlb
lds
mov
jle
add
aaa
xchg
int3
mov
dec
jl
stc
dec
incb
sti
mov
push
outsb
out
mov
inc
sbb
mov
imul
call
iret
outsl
hlt
push
jbe
jg
cltd
sarl
jle
shlb
lret
push
and
cmpsl
fcom
push
or
mov
mov
pushf
nop
adc
fwait
out
mov
jecxz
mov
mov
je
add
out
mov
jmp
stos
cld
sub
sub
sub
or
jns
mov
rcl
inc
add
mov
or
sarl
nop
sbb
push
insb
iret
mov
lret
mov
add
mov
movsl
adc
sub
add
sub
scas
in
arpl
push
push
lea
push
rol
mov
lret
cmp
lret
fwait
pop
or
add
adc
mov
dec
pop
fidivl
popa
cmp
pcmpeqw
into
jg
bound
pop
fs
push
push
in
rclb
mov
test
xor
push
cmp
pop
sbb
push
stos
mov
mov
bound
dec
pop
xchg
nop
test
dec
pusha
or
lods
sbb
cmp
mov
sub
fcoms
aad
mov
sub
fadds
cmp
mov
xlat
movsb
repz
jmp
icebp
or
xor
dec
out
mov
int
loope
cld
push
pushf
mov
jmp
sahf
cmp
and
mov
ljmp
repnz
ret
and
ret
dec
fiadds
nop
sbb
ss
ror
adc
xlat
push
dec
cmp
push
adc
and
adc
mov
rorb
and
jl
push
xchg
in
adc
mov
fmull
js
or
adc
push
outsb
adc
clc
pop
out
pop
sarb
sbbl
jecxz
cld
fstpt
sbb
cmp
xor
push
movsb
hlt
mov
call
enter
adc
cld
in
and
dec
ljmp
pop
mov
pop
fists
dec
xor
fwait
ret
pusha
ret
ret
jg
xchg
fstl
mov
sbb
stos
mov
icebp
mov
sti
xor
call
in
xor
jmp
test
jae
mov
jo
fldt
push
add
inc
in
fimull
ljmp
rclb
sarl
pop
cmc
call
pop
cmpsl
aas
hlt
outsb
xor
mov
leave
dec
arpl
mov
orb
mov
cwtl
dec
aaa
outsl
cmp
jp
out
subl
inc
lcall
jo
pop
mov
dec
xchg
lods
mov
xor
mov
ret
push
fdivl
push
divps
mov
insb
in
pop
inc
aaa
outsb
shr
repz
adc
dec
push
sbb
mov
mov
inc
or
mov
dec
int3
popf
pop
push
sub
ret
push
cmpsl
cmpsl
mov
mov
insl
jmp
and
mov
pop
cltd
jecxz
adc
inc
es
fisttps
lahf
xchg
push
push
lret
xchg
cmp
mov
loopne
push
xor
mov
jmp
mov
fsubrs
mov
mov
and
enter
push
xchg
jge
jo
add
sub
mov
rorb
cmp
mov
cs
xchg
int
dec
in
cli
dec
ljmp
les
mov
mov
cltd
or
orb
shlb
fs
addr16
xchg
mov
aad
fidivl
mov
xchg
mov
pop
mov
sbb
lret
fdiv
pop
ds
and
mov
pusha
sbb
arpl
inc
ljmp
out
jae
gs
addr16
inc
sbb
cwtl
test
stos
dec
push
inc
cmp
fldt
arpl
stos
sbb
add
pushf
sbb
rolb
sbb
add
xor
xchg
dec
cwtl
cmc
mov
hlt
cli
aam
add
shll
jo
mov
ds
pop
in
jp,pt
pop
dec
xchg
movsb
cwtl
out
dec
mov
inc
xor
loope
test
inc
sub
jns
jno
or
fsubl
into
popf
mov
imul
gs
clc
xchg
dec
test
cmpl
xchg
bound
dec
test
jne
inc
test
test
mov
mov
sbb
push
add
and
dec
xor
pop
jmp
push
adc
push
dec
inc
sub
lret
or
mov
and
xlat
push
jnp
jb
dec
test
fistl
mov
add
in
bound
ret
mov
xor
scas
pop
sub
add
lcall
add
leave
dec
xchg
pop
jo
mov
push
fisubrl
or
sub
adc
insb
daa
test
pop
add
sar
sahf
popa
sbb
xchg
mov
testb
out
inc
mov
mov
iret
cmp
fwait
xchg
or
mov
aaa
lods
test
and
repz
jg
and
inc
test
add
jne
inc
push
xlat
jno
push
inc
ljmp
ret
push
pushf
in
shrb
pop
fstpt
in
or
shlb
inc
imul
aad
test
out
cmpsl
test
xor
lret
push
jne
adc
es
cwtl
jp
inc
cmp
add
enter
xchg
out
in
lods
ret
add
incb
push
mov
fnstcw
mull
int3
and
pop
mov
sub
dec
outsl
sub
jnp
add
pop
hlt
sbb
jns
and
dec
pop
add
popf
adc
not
cmp
lods
lds
and
aas
sub
mov
out
divb
fidivs
fnsave
outsl
data16
jp
and
in
jp
lea
js
das
mov
mov
fstps
and
mov
mull
push
mov
in
fdivs
lods
in
cmp
push
or
lret
xor
sbb
rol
xchg
pop
scas
lods
inc
sbb
insl
jne
jp
cld
or
or
xchg
pop
inc
imul
xchg
sub
arpl
sub
inc
test
mov
js
out
mov
cwtl
jecxz
sub
fists
jmp
stos
std
xchg
adcb
loope
fwait
daa
cmp
loopne
and
pop
push
test
jbe
pop
aas
lea
sub
aam
shlb
outsb
pop
in
add
mov
push
sub
out
jg
scas
movsl
loop
clc
add
push
xchg
cltd
scas
loope
mov
insb
push
xor
jns
nop
out
pop
or
imul
leave
inc
lret
mov
jns
cmp
pop
inc
ss
test
out
mov
mov
cli
outsb
sub
fadd
out
in
dec
mov
mov
inc
mov
jns
insl
cmp
xor
push
sub
jmp
in
lods
stos
sbb
and
dec
mov
xchg
dec
xchg
xchg
daa
add
ficoms
pushf
loop
lcall
pop
mov
insb
divb
filds
pop
loop
cmp
test
mov
pushl
cmp
out
rcl
mov
enter
iret
pop
std
nop
lea
fwait
push
stc
adc
imull
cmpsl
push
jnp
mov
push
sub
sub
mov
adc
aam
lcall
cli
adc
lret
add
sti
and
in
pop
sub
cwtl
push
jae
outsb
mov
shlb
clc
pop
dec
cmp
cltd
mov
mov
xor
fsubr
negb
clc
loop
and
dec
lea
mov
outsb
pop
sbb
mov
pop
add
stos
add
neg
icebp
loope
call
xchg
lea
dec
sbb
in
iret
lret
addb
sti
fs
rcrb
outsb
dec
add
les
jmp
jne
test
xor
lahf
dec
cli
test
ja
insb
lahf
mov
inc
jae
jb
clc
xchg
imul
std
push
adc
or
cltd
cmp
loop
jp
mov
jbe
mov
mov
xchg
jne
sub
jnp
mov
mov
adc
add
daa
insl
or
test
jle
mov
or
jl
repz
sbb
inc
jno
sub
cmp
xor
into
sbb
inc
insl
loopne
outsl
jmp
jns
dec
lods
daa
data16
mov
dec
iret
loopne
mov
stos
cld
mov
insb
rcll
js
dec
pop
or
addr16
dec
jp
fnstsw
dec
pop
xchg
shrb
pop
inc
rcl
pop
popf
jge
cmpsb
push
xor
cmc
xchg
aad
xor
cs
jmp
mov
fistps
repz
jbe
inc
adc
xor
addl
fdivrp
insl
aad
out
mov
fidivrl
cmp
sbb
imul
mov
sarl
clc
adc
in
xlat
jnp
rolb
lcall
mov
mov
adcb
out
lods
into
pop
adc
cmp
cmpsb
insb
cli
cmpsb
lea
dec
cmc
stc
mov
cltd
shrl
icebp
sub
mov
aaa
cmp
sub
cmp
insl
pop
fs
lock
outsl
jg
mov
fidivrl
jle
cmp
xchg
aad
pop
in
jg
mov
lods
inc
stos
mov
scas
inc
popa
inc
cmp
sbb
test
and
xlat
lock
xchg
stc
aad
pop
ds
adc
jno
lods
and
mov
je
mov
inc
push
xor
push
movsb
insl
loopne
jae
add
popf
mov
and
dec
dec
push
xor
cmp
shll
push
pop
or
adc
jo
pop
mov
mov
adcb
pop
cli
xor
call
repz
mov
mov
aaa
xchg
adc
mov
xchg
push
insl
cs
mov
aam
push
mov
js
push
sub
xchg
outsb
dec
push
pop
fidivl
adc
jecxz
in
mov
jle
inc
mov
mov
cwtl
notb
adc
div
dec
lcall
push
das
xor
loope
mov
ja
leave
xchg
dec
jbe
ret
cmp
jl
loope
arpl
js
push
mov
test
lods
or
and
ss
insb
xchg
mov
mov
rorl
jns
out
pop
or
test
mov
shll
mov
jecxz
das
push
fdivl
pop
mov
repz
mov
sbb
mov
shrb
add
int
subl
popf
pop
cwtl
push
out
repnz
mul
movsl
stc
jmp
mov
sbb
sbb
xchg
add
sub
clc
sub
lds
cmpsb
or
clc
dec
popf
in
or
add
and
pop
imul
mov
mov
jo
mov
sbb
inc
stc
mov
xchg
jl
faddl
dec
lcall
mov
cmpsl
sub
push
dec
es
xchg
scas
mov
push
push
aas
push
jp
outsb
enter
jmp
aam
add
test
filds
xchg
dec
icebp
out
jle
xor
cli
insb
test
mov
jne
ret
insb
jo
dec
pop
jno
std
mov
aaa
stc
and
jl
adc
lcall
sbb
in
pop
shl
mov
adc
push
jnp
lds
sub
dec
lahf
mov
aam
incb
ret
push
into
mov
cmp
test
bound
mov
scas
inc
dec
or
or
inc
xor
xor
pushf
push
pop
adc
xor
mov
xchg
inc
jno
add
gs
push
js
into
push
jne
adc
cmp
and
pop
xlat
cs
mov
pop
dec
fxch
push
adc
stc
std
mov
or
lods
xchg
in
adc
repz
mov
fnstenv
pop
leave
stos
in
sbb
adc
lcall
mov
scas
adc
outsb
dec
cmc
ss
xor
repnz
adc
add
or
outsl
sub
and
push
nop
stos
xor
test
inc
mov
das
cmpsl
dec
sbb
icebp
pop
cmc
shrl
xchg
lea
xchg
xor
mov
lods
and
lds
or
dec
xchg
enter
jbe
pop
and
std
add
std
popa
lcall
sbb
aad
mov
xor
fidivrs
cwtl
or
outsl
mov
test
call
imul
cld
mov
enter
sub
out
mov
xchg
fs
and
clc
push
jnp
cmp
mov
daa
into
int3
xchg
out
sub
fstpl
sub
pop
push
cmp
insl
stos
cmpsb
push
push
cwtl
shlb
and
cmp
ss
aad
shl
stos
push
sahf
imul
dec
jb
frstor
mov
mov
nop
mov
cwtl
dec
fcmovu
mov
cli
test
ret
int3
arpl
dec
pop
arpl
cwtl
add
notl
test
mov
ret
xlat
dec
xlat
out
imul
enter
inc
aaa
push
or
imul
outsl
aam
mov
pop
dec
mov
pop
inc
ss
mov
shlb
dec
and
and
xlat
pop
cltd
cs
push
dec
ljmp
stc
mov
or
xchg
jecxz
jmp
lret
call
test
adc
xor
adc
mov
adc
jg
xor
inc
fmulp
push
lret
sbb
jns
and
testb
aad
dec
sub
lds
xor
mov
fcomps
out
repz
insl
test
fucomp
dec
add
dec
or
movsb
push
xchg
push
nop
jge
xor
pop
in
loope
aad
test
fwait
mov
pushf
adc
sub
cmp
and
or
mov
sahf
cmpsl
cs
push
das
cmc
scas
jb
cmp
mov
in
jg
imul
rorl
jbe
repz
add
cmpsb
mov
data16
mov
adc
mov
mov
mov
push
ljmp
in
movsl
mov
bound
add
mov
lods
mov
xchg
rclb
std
mov
cltd
add
filds
fistps
jb
in
stos
or
cwtl
outsb
mov
cmpl
out
dec
xchg
jmp
jmp
cs
mov
xchg
xor
int3
ret
in
push
mov
jbe
mov
sub
addr16
imul
dec
jb
and
and
leave
add
mov
int3
cli
mov
pop
mov
or
jb
pop
sbb
xor
xor
inc
jbe
js
adc
fisubrl
xor
scas
xchg
mov
fwait
jnp
xchg
sbb
dec
fwait
and
shll
jo
int3
test
adc
stc
in
cmp
mov
loop
mov
xor
adc
aam
movsl
sti
pop
add
adc
xor
shrl
xchg
imul
imull
pop
push
xor
aaa
pop
aam
cmp
rcl
subl
orb
jmp
adc
pushl
lods
int3
hlt
jmp
aaa
mov
out
addr16
call
iret
lock
inc
pop
int
pop
xor
mov
fwait
into
push
lahf
push
int3
btc
dec
cmc
inc
sbbl
push
mov
in
mov
aam
push
mov
lret
xchg
jecxz
cmpl
inc
sbb
shlb
mov
xchg
jo
sbb
sbb
daa
stos
jg
negl
out
repnz
repz
sbb
mov
jle
or
mov
mov
loopne
cli
sbb
aaa
mov
xor
sbb
mov
xchg
adc
dec
inc
and
cltd
lds
inc
push
popa
dec
scas
sbb
add
jbe
lcall
cwtl
mov
mov
arpl
movlps
adc
mov
or
dec
push
xor
enter
rcrb
xchg
icebp
fildll
sti
loop
xor
add
pop
pop
jg
mov
mov
mov
rorb
dec
cmpsb
adc
cs
jl
adc
lcall
neg
dec
fucom
sub
mov
nop
lods
mov
frstor
jno
jg
or
mov
xchg
lret
call
push
ret
fstl
nop
mov
or
mov
adc
lcall
into
mov
pop
pop
push
aaa
adc
fidivs
scas
and
mov
cmp
mov
scas
wbinvd
mov
push
pop
les
rcr
jmp
std
sbb
outsb
ja
gs
les
repz
add
or
push
jge
xchg
mov
cmp
xor
in
mov
pop
push
in
jnp
cmp
mulb
or
loope
test
scas
test
lds
xchg
out
push
add
adc
negb
nop
sarb
sti
shlb
add
in
sbb
dec
data16
cs
mov
mov
rcll
mov
popf
jae
pop
mov
dec
cmc
mov
pop
ret
lods
and
mov
xchg
dec
pop
xchg
mov
inc
movsl
mov
lcall
rolb
push
loopne
dec
jnp
or
jle
cmpsb
testl
fsubr
adc
sub
jnp
ds
sub
mov
fdiv
outsl
ds
aas
hlt
sahf
into
xor
adc
int3
and
push
aaa
into
and
movsl
jg
in
and
lods
jnp
sub
aas
stc
mov
iret
and
stos
inc
inc
cmpsl
mov
pop
mov
ret
mov
call
repnz
dec
inc
js
inc
ljmp
hlt
test
pop
repnz
or
inc
cs
mov
loop
xchg
adc
shl
daa
mov
out
in
adc
cli
pop
fnstcw
in
ss
jmp
push
or
jecxz
sbb
jge
aad
sub
lahf
leave
addl
bound
es
add
notl
push
jl
push
xor
pop
insl
imul
add
xchg
xchg
imul
mov
push
mov
loop
notb
mov
daa
xor
js
pop
jle
adc
adc
lret
xchg
movsb
jmp
push
jno
out
or
and
jmp
fs
jl
inc
and
add
push
imul
push
daa
pushf
loope
mov
or
fwait
xor
shl
orl
movsl
bound
out
mov
mov
movsb
adc
push
cmpsb
rcll
repz
loope,pt
rcll
sub
and
scas
add
inc
repnz
add
xor
jns
in
jge
mov
stos
dec
dec
mov
xchg
mov
push
rcrl
inc
dec
fisubrs
xchg
adc
push
dec
testb
lea
push
cmp
jle
sub
insl
icebp
xchg
mov
jns
dec
into
popa
mov
out
hlt
cmpsb
push
cmp
lds
mov
pop
not
sub
cmp
pop
loop
imul
lea
aad
stos
pop
faddp
outsb
xchg
out
inc
aad
push
and
sahf
loop
int
jb
sarl
cwtl
push
scas
neg
popf
push
adc
mov
fcoms
lods
or
dec
mov
test
inc
scas
hlt
out
mov
sub
mov
arpl
sub
jnp
clc
cld
push
inc
cmp
call
mov
jmp
adc
es
push
add
pop
les
sub
fs
ret
sahf
mov
fabs
adc
sti
push
sarb
dec
std
mov
xchg
sahf
lret
aas
push
push
popa
ja
mov
mov
in
mov
pusha
aam
out
push
push
lods
test
dec
jg
ljmp
mov
repnz
sub
sti
icebp
lret
test
shl
push
mov
dec
inc
sub
test
mov
sti
ja
xchg
ror
gs
jle
mov
dec
add
rclb
mov
ja
test
lahf
dec
inc
sbb
xchg
outsl
jl
dec
xchg
xchg
pop
sub
bound
cmp
in
push
andl
repz
sub
lret
lret
cli
outsl
sub
xchg
cld
xchg
jmp
push
sbb
mov
sti
xchg
lds
and
repz
pushf
loopne
push
sub
xchg
push
jmp
cmp
loope
jbe
rclb
dec
cmp
dec
xchg
fiadds
or
sbb
jo
or
cli
mov
out
shlb
cs
mov
cli
adc
cs
xlat
mov
sbb
fwait
sbb
adcl
or
and
cmp
cli
lea
jb
adcl
add
lret
or
jmp
jo
sbb
movsl
adc
and
add
loope
mov
mov
les
into
outsb
push
shll
lods
pop
xor
mov
fmulp
jmp
jge
sbb
mov
dec
mov
adc
aaa
xchg
xchg
loopne
fstl
lahf
cmp
xchg
mov
insb
fs
addb
cli
mov
mov
adc
sahf
xchg
pop
or
in
rolb
leave
inc
call
vmovntps
xchg
xchg
arpl
sbb
out
int
sbb
push
mov
jnp
mov
ficompl
pop
lods
add
and
mov
inc
or
and
mov
shrb
mov
xor
test
mov
insl
inc
dec
insl
xchg
mov
fidivrs
ljmp
lret
pop
lds
and
push
jne
shll
sbb
mov
aad
xor
leave
in
xor
dec
mov
popa
pop
sbb
inc
ljmp
dec
ret
jnp
dec
xchg
ds
xchg
push
mov
pop
sub
iret
movsb
cmc
add
out
subb
mov
insl
cmpsb
mov
test
mov
or
repnz
add
jne
fnsave
mov
fbld
fucomi
inc
push
int3
mov
pop
outsl
stos
jns
std
jmp
subl
aad
fiadds
in
das
mov
sbb
xchg
fmul
mov
loopne
cmc
in
fldl
aas
push
enter
test
mov
test
dec
push
lds
je
pop
sub
xorl
mov
push
or
iret
nop
jbe
adc
sahf
mov
ficoms
outsb
dec
jne
aad
mov
mov
mov
js
mov
shl
fadds
add
sbb
pushfw
xor
int3
push
imul
test
mov
sbb
inc
aas
inc
cmp
dec
mov
mov
pop
nop
roll
rorl
arpl
and
fisubl
aam
and
sub
bound
sbb
jno
div
pop
inc
push
dec
jns
push
ficompl
push
fmull
mov
stos
ret
icebp
jecxz
rcr
gs
jo
or
lahf
popa
cmpsw
jmp
sbb
arpl
sahf
or
lods
adc
sub
cld
mov
push
and
sbb
lds
pushf
mov
push
mov
out
fwait
inc
popa
shrl
mov
mov
bound
jb
jle
cmp
lds
mov
pop
mov
leave
push
jo
mov
test
div
testl
xchg
out
and
in
jge
push
add
sub
lahf
sub
loop
sub
js
gs
push
cs
sub
inc
or
and
pop
sub
stos
push
outsb
xor
inc
rolb
mov
jbe
xor
rolb
xor
dec
dec
ret
mov
xchg
and
adc
xchg
cmp
jns
cmpsl
xor
add
pusha
ret
aas
dec
lods
adc
cmpsb
imul
cmp
movsb
sub
adc
mov
pusha
cmp
daa
nop
outsl
in
imul
addr16
adc
sbb
pop
lahf
call
aam
jno
and
icebp
push
dec
es
sti
mov
mov
lret
les
dec
xchg
adc
ljmp
jae
dec
adc
divl
push
dec
jo
pop
lods
enter
inc
ret
mov
es
outsb
aas
fld
pushl
sub
scas
lret
or
jnp
adc
push
fcoml
pop
sub
jp
adc
xchg
fmulp
leave
and
cmp
js
and
lea
in
loope,pt
dec
rcll
fcmovbe
mov
iret
xlat
mov
mov
mov
jp
shrl
add
push
push
das
sti
sub
or
mov
mov
jbe
jb
mov
iret
add
mov
pop
int
push
xor
mov
andl
or
cmp
shll
rorb
push
add
fcomp
sub
dec
aad
xchg
inc
enter
popa
in
dec
sbb
ss
fwait
scas
mov
arpl
mov
in
jns
add
xor
dec
lods
or
in
and
jo
or
fnsave
add
add
stos
mov
cmp
jne
jge
jnp
push
or
repz
aad
dec
clc
shlb
es
ljmp
in
sbb
pop
push
lds
sub
mov
test
fwait
jbe
push
aas
ds
sbb
cwtl
mov
fucom
mov
cmpsl
ud0
in
xchg
jb
ljmp
sbb
mov
dec
lea
outsb
pop
push
out
sbbl
mov
out
shlb
xchg
enter
imulb
adc
cmpsb
lock
pop
xor
cmpsb
lahf
repnz
mov
lds
lds
xor
lods
push
les
nop
andl
imul
shrl
fistpll
outsb
mov
xchg
add
nop
lea
cwtl
adc
jne
repz
jne
or
in
mov
lock
or
sarl
pop
scas
and
loope
pop
stos
fs
arpl
and
sahf
push
cmp
loope
jnp
jg
inc
pop
xor
flds
mov
xor
push
pop
std
mov
xor
sbb
push
loop
dec
iret
popf
pop
cmc
enter
das
cld
mov
outsb
mov
inc
out
sub
lcall
scas
sahf
aas
out
call
push
xchg
mov
jns
push
ret
mov
enter
mov
stos
push
or
add
mov
in
jo
test
idivb
sbb
pushl
lret
out
ja
xchg
mov
pop
sbb
shlb
hlt
fcmovu
ficoms
and
xchg
xor
dec
bound
aaa
int
aas
insb
fstpl
mov
iret
mov
pop
lret
out
les
mov
adc
aad
or
sbb
cs
xchg
mov
js
sub
call
or
pop
ds
mov
lds
incb
sub
lahf
int3
mov
xlat
test
out
jne
inc
jne
shlb
cmc
push
stos
mov
cs
gs
outsl
mov
xchg
cmp
andb
dec
nop
dec
pop
iret
push
mov
pop
jmp
in
mov
push
outsl
out
cltd
sub
dec
imul
sub
and
fnstcw
stc
mov
adc
hlt
adc
adc
mov
and
pop
push
jg
repz
lea
or
push
aaa
aam
xchg
sub
dec
push
and
and
addr16
rorb
aas
sub
aas
hlt
and
inc
sub
in
rcrl
push
test
sahf
push
mov
xchg
outsb
and
jge
js
out
mov
das
rcrb
pop
or
pop
rorl
mov
cmp
add
imul
mov
jle
jb
andb
ror
loop
pop
mov
fdiv
js
fnstsw
test
scas
push
sbb
mov
xor
push
push
lock
rorl
mov
decb
inc
cmp
xlat
xchg
push
pop
pushf
mov
xorb
or
or
rcrb
push
cwtl
push
pop
popa
mov
or
push
sbb
fwait
or
in
clc
push
sub
add
or
xchg
mov
adc
cmp
pop
xchg
sbbl
outsb
jne
fisttps
inc
loopne
push
aas
cmp
adc
int3
mov
cwtl
pusha
fadd
sub
lcall
pop
jge
lods
and
mov
mov
mov
jbe
xor
pop
jns
popf
dec
cmc
stc
and
in
mov
scas
dec
js
mov
fldl
std
jp
push
jnp
dec
lods
push
push
add
ljmp
scas
sub
popa
nop
and
ljmp
push
outsl
cmpsb
idivb
mov
xor
and
out
out
xor
loop
loopne
mov
mov
cmp
cmpsl
loope
pop
sub
cmp
push
lret
mov
imul
pop
mov
adc
or
inc
mov
jg
insl
xor
jl
mov
push
xchg
mov
repnz
mov
inc
lret
fsubs
sahf
cmp
xor
scas
aaa
adc
cli
sbb
mov
xchg
stc
push
mov
lret
cmp
dec
aas
pop
xlat
mov
jns
call
inc
aas
mov
push
xor
push
jmp
test
sbb
mov
add
mov
int
or
test
xor
dec
mov
je
bound
fcoms
dec
cmp
cmp
dec
test
ret
mov
popf
in
lea
add
mov
add
jg
push
mov
or
jnp
or
mov
rcll
stos
std
push
fldenv
inc
sarb
les
jb
dec
mov
adc
pop
pop
lret
dec
les
insl
push
loope
shrl
xor
dec
sbb
lcall
sub
push
adc
es
sub
iret
hlt
jmp
cmp
lret
inc
cmpsl
mov
imulb
mov
push
jl
xchg
xor
iret
jno
out
in
movsl
adc
sbb
insb
out
mov
dec
adc
mov
jno,pn
sahf
adc
mov
mov
into
mov
xchg
pop
fiadds
test
xor
out
sub
mov
pusha
sub
out
jecxz
pusha
mov
dec
sbb
int
adc
mov
sbb
xor
daa
push
and
inc
inc
inc
fwait
insb
gs
or
push
cld
jl
push
push
push
add
pop
or
push
push
inc
xor
in
int
xchg
lret
and
dec
cmp
call
add
mov
loop
xor
xlat
fidivrs
aam
pop
repnz
rcll
xchg
or
pop
icebp
and
and
dec
aaa
leave
cmpsl
pop
dec
fcomip
sti
movsb
test
mov
lret
pop
pusha
inc
test
mov
add
aas
insb
neg
add
mov
add
pop
push
mov
dec
or
cmp
xor
xor
loope
stc
adc
dec
jg
sbb
xchg
sahf
xchg
addr16
ljmp
adc
jnp
sbb
jp
divl
fisttps
in
push
inc
adc
mov
and
ds
add
xor
mov
lret
out
cmp
dec
cmpsl
pop
sahf
arpl
icebp
jg
mov
adc
xchg
jecxz
cmp
push
ljmp
or
test
incl
mov
loop
outsb
cli
mov
repz
in
in
addr16
in
cmc
add
mov
dec
adc
into
test
cmpsb
or
test
cli
lcall
pop
jl
faddl
cli
mov
add
sbb
xchg
and
mov
fcoml
int3
dec
je
aas
dec
pop
adc
rcrb
push
add
in
imul
cmp
add
mov
call
loopne
test
dec
in
lods
sub
add
test
fnstcw
adc
mov
std
fs
mov
shr
inc
fcoms
jp
xchg
daa
loope
xor
ja
add
dec
and
pushf
adc
cmp
lds
sarl
push
mov
sbb
adc
gs
mov
push
fs
popa
pop
xchg
jmp
dec
in
xchg
fwait
inc
jecxz
imul
pop
jo
adc
inc
pop
dec
jb
push
push
mov
int
sub
movsl
push
fcom
std
aam
je
push
xchg
nop
lea
pop
scas
inc
in
sbb
loope
sbb
inc
adc
pop
imul
jle
cmpsl
mov
movsb
mov
cs
push
ds
cmp
cmp
popa
or
and
adc
fwait
jl
sti
mov
sub
fcompl
pop
mov
dec
leave
or
xor
in
stos
push
inc
mov
ljmp
mov
shr
jne
loop
loopne
sub
js
sub
insb
mov
xlat
jo
fisttpl
movsb
lea
mov
outsb
xor
scas
xchg
sub
dec
mov
cmpsl
mov
xchg
fbld
sti
xor
or
lods
fcmovne
rol
mov
mov
jbe
mov
insb
xchg
dec
and
mov
dec
std
and
adc
in
outsl
sub
fidivl
push
mov
mov
mov
adc
stos
lods
add
lods
mov
jecxz
xchg
std
mov
xchg
inc
sbb
mov
loope
int
das
pusha
daa
push
pop
dec
std
in
pop
xor
and
out
cmp
loopne
push
mov
test
mov
pop
and
dec
cli
jmp
jbe
loopne
fisubl
xor
jecxz
sub
sbb
add
cli
mov
or
push
negl
push
mov
mov
cs
sub
lds
mov
addl
mov
fisttpl
push
push
sub
lods
mov
mov
xchg
stos
or
mov
pop
sbb
xchg
jecxz
frstor
roll
sub
cltd
and
jle
push
fs
inc
xor
negl
push
push
inc
test
js
mov
or
pop
or
loop
bound
jo
ret
hlt
ret
jno
ret
daa
jmp
mov
test
aam
or
lds
and
or
je,pn
xor
mov
inc
cmc
int3
push
shll
ret
in
dec
mov
fs
push
scas
adc
cli
and
test
filds
and
clc
or
into
xchg
push
sub
das
stos
lea
push
movsb
pop
mov
and
test
jl
stc
andl
imul
sbb
leave
push
insl
inc
ljmp
inc
cwtl
push
jno
pop
mov
mov
mov
movl
pop
xchg
test
cli
ja
scas
ds
sbb
test
loop
mov
in
mov
in
not
xor
pushf
lods
les
add
lods
push
sub
fcompl
cmp
fcompl
jg
out
sti
in
push
jp
and
jo
lahf
pop
push
sbb
in
push
push
cs
sub
fidivl
jecxz
sbbb
mov
dec
jne
push
xchg
cltd
dec
jmp
icebp
cmp
dec
loope
into
adc
add
or
clc
push
aad
xor
pop
call
adc
data16
and
js
push
popa
ret
and
jle
stos
or
dec
dec
xor
push
divb
inc
clc
pop
stos
das
cmp
xor
cs
and
jns
sbb
pop
lds
int3
lds
xchg
ss
repnz
stc
cmp
dec
lahf
sti
and
and
pop
and
or
jnp
inc
sbb
sbb
pop
cli
call
pop
adc
push
js
movsl
dec
jbe
imul
pop
ret
mov
mov
cmpsl
daa
dec
mov
dec
inc
xchg
xor
into
lret
xor
sbb
xchg
orb
test
aad
jbe
lcall
pop
xchg
mov
xor
cmpsl
scas
adc
dec
xbegin
or
in
jmp
loope
aam
dec
rorb
loope
cmpsl
xchg
jmp
mov
cli
xor
test
lock
dec
loopne
jecxz
ja
dec
xchg
xlat
scas
leave
mov
xchg
repz
lods
popa
mov
jns
add
nop
cmp
mov
or
xor
mov
add
test
pop
mov
push
push
inc
orb
sbb
repnz
push
cmpsb
pop
cmc
adc
sete
xchg
mov
inc
pushf
sbb
jmp
mov
lds
fnstsw
pop
sbb
repnz
mov
out
test
xor
loope
jo
mov
mov
leave
rorb
cmpsl
insl
xchg
nop
inc
loop
cmp
add
daa
in
pop
sub
shll
mov
dec
xchg
stc
in
sarl
push
cwtl
dec
loope
inc
mov
ds
mov
clc
movsb
adc
orl
lahf
push
nopl
push
les
xchg
stos
add
mov
sub
movsb
mov
mov
ja
inc
inc
iret
mov
push
mov
insb
ror
jne
jno
std
sbb
pop
repz
mov
jl
xchg
popa
lcall
in
dec
or
dec
mov
pop
lods
sbb
adc
add
shr
popf
out
popf
xchg
mov
jg
fiadds
xor
mov
sbb
xorb
inc
ja
out
adc
aam
mov
scas
cwtl
fmull
jmp
in
mov
inc
and
dec
push
adcb
pop
les
mov
adc
push
dec
or
adc
sub
insb
shlb
hlt
add
lds
push
inc
pop
xchg
mov
mov
adc
inc
or
dec
fcoml
movsb
sahf
popf
push
fsubr
xor
sahf
stos
stc
adc
arpl
push
imul
test
sarb
xchg
lcall
lcall
sub
pop
out
pop
mov
jle
push
mov
sarb
out
in
add
sub
and
sbb
dec
mov
xor
js
fs
inc
hlt
dec
xchg
aaa
icebp
cmp
stc
mov
mov
or
lahf
aas
dec
es
cmp
mov
ja
jmp
fdivr
adc
loope
cmp
pop
mov
pusha
je
imul
loop
mov
xchg
imul
adc
or
pop
js
pop
es
jge
popf
lods
pop
push
pushf
inc
fisubl
jmp
aas
adcl
jnp
jecxz
pop
dec
cld
mov
repz
mov
xchg
mov
or
mov
push
iret
mov
pop
jb
popf
push
fs
movsl
jo
pop
mov
arpl
dec
icebp
xor
or
inc
xor
inc
dec
movsb
xor
lods
fdivs
or
mov
cltd
xchg
jge
push
pusha
iret
js
subb
in
in
sub
dec
sbb
in
ret
push
pushf
lds
mov
das
and
lods
jp
std
shll
mov
mov
and
jb
xor
outsb
jo
inc
sub
js
inc
xor
xor
jbe
push
cmpsl
daa
shll
cmp
test
xlat
jp
fisubs
ja
neg
lea
mov
out
repnz
loop
test
jae
cli
ja
and
clc
pop
call
jg
push
lretw
addr16
std
mov
sar
popa
lahf
int3
mov
repnz
add
in
arpl
shlb
xchg
imul
repz
mov
sub
shrl
and
sbb
xlat
jno
fwait
dec
jns
loope
adc
adc
sbb
xchg
inc
mov
ljmp
pop
out
bound
adc
xchg
shr
ds
mov
addr16
cltd
mov
mov
add
enter
add
xor
pusha
sbb
jmp
cmp
nop
push
das
lcall
cmp
test
jmp
mov
movsb
push
adc
dec
xchg
mov
repz
adc
and
test
repz
xchg
test
ds
fst
lret
adc
jno
dec
adc
cltd
loopne
aam
mov
inc
out
add
add
mov
sahf
mov
out
in
dec
or
jg
ja
cli
pop
push
mov
test
leave
xchg
xor
cmp
add
sub
lahf
xor
stc
jnp
pop
xchg
es
int
xor
inc
push
sub
push
mov
test
rorl
lahf
jae
test
or
dec
dec
inc
jge
pop
movsl
or
adc
mov
enter
sub
lea
dec
mov
imul
aaa
xor
xchg
xchg
add
jle
loop
out
dec
mov
and
je
repz
jno
aad
shr
add
rcrb
fsubr
shlb
bound
fdivr
xchg
mul
add
jl
cmpsb
mov
icebp
add
cmp
sbb
stc
sbb
and
jle
loope
pop
out
or
aaa
pop
add
or
sub
inc
test
imul
bnd
in
jae
pop
fsubl
fistpll
stos
les
mov
add
insb
lcall
js
cmpsl
jno
push
cmpsl
pop
or
dec
dec
add
popa
add
dec
loopne
shrl
cmp
pop
dec
hlt
dec
pop
cmc
stos
jne
sub
jb
scas
mov
movsl
arpl
into
add
test
dec
sub
jbe
bound
mov
fs
dec
ss
and
mov
pop
lea
adc
loop
mov
arpl
jbe
ss
xchg
mov
mov
stc
xchg
mov
jno
push
xor
mov
subb
dec
test
popf
idivb
or
je
stos
adc
or
inc
xchg
popa
jp
push
test
xor
ret
scas
sti
fstpt
cli
sti
fsubrl
dec
jne
scas
adc
test
mov
sbb
rcrl
pop
ficomps
js
pop
filds
push
aad
sbb
or
int3
ds
sbb
lcall
mov
popa
and
stos
aad
sub
inc
scas
inc
sbb
data16
mov
out
mov
cld
dec
jp
in
mov
shrd
stos
jbe
das
movsl
jae
aaa
enter
xchg
pop
inc
inc
or
fdivl
xorl
ds
arpl
lock
inc
and
adc
push
sbb
call
dec
mov
int
insb
adc
mov
mov
stos
mov
andl
jbe
decb
xchg
dec
dec
jp
pop
dec
in
cmc
xlat
cwtl
fdivs
aas
push
in
daa
movsb
dec
lret
fisubs
dec
dec
int
daa
std
add
dec
mov
aas
cmp
pop
xor
jmp
clc
push
inc
lock
movsb
out
mov
and
shll
ficoms
xor
jp
push
xor
test
stos
sahf
mov
nop
sahf
insl
jg
mov
xchg
mov
hlt
add
jmp
push
jp
sahf
cmp
testl
jns
jecxz
dec
cltd
mov
xchg
in
sti
cmp
outsl
xor
jle
add
jmp
out
pushf
adc
das
cmp
dec
sub
ds
cmpsb
inc
jecxz
movsl
lret
into
xor
xchg
xchg
bound
scas
in
sub
out
add
data16
popa
int
push
mov
lret
je
sbb
mov
inc
push
daa
movsl
adc
push
sub
mov
add
frstor
in
xchg
push
pop
or
pushf
push
hlt
lahf
shrl
pop
mov
pop
ljmp
or
jne
xor
adc
and
push
push
cmpb
push
xchg
out
outsl
add
adc
pop
lcall
pop
hlt
fisubl
sbb
in
cmp
ficoms
adc
call
and
lods
movsb
mov
mov
bound
cmpsl
popf
test
insl
inc
sub
stos
mov
hlt
adc
jmp
xchg
orb
dec
adcl
lahf
mov
imul
pop
xor
push
xor
push
mov
add
sti
lcall
dec
xor
lahf
mov
out
ret
fucomp
adc
jnp
shrb
jge
ret
decb
out
pushf
jp
leave
sub
pop
test
inc
jo
sbb
dec
push
ret
xor
repz
mov
scas
or
jbe
or
out
inc
cmp
mov
push
xor
cmp
xchg
dec
pop
inc
shll
test
in
rep
mov
jp
pushf
in
lret
cltd
cmpb
cs
out
into
pop
and
mulb
out
push
mov
jge
test
cli
sbb
lcall
popa
pushf
outsb
jmp
lcall
int3
xlat
mov
fcoml
push
scas
sbb
dec
xchg
xchg
pop
push
dec
cld
mov
add
adc
mov
dec
mov
arpl
sbb
sbb
fcomps
daa
div
or
sti
lods
std
sub
mov
outsb
lds
pop
arpl
mov
hlt
and
shrb
mov
in
jl
rcrl
lcall
and
ret
scas
int
push
lret
lock
aad
mov
in
push
cmpsl
es
jbe
movsl
cmp
sti
shl
jo
xor
leave
add
fsts
dec
push
push
xchg
addr16
xchg
orb
push
jnp
mov
push
jecxz
outsb
adc
in
ret
lods
jp
lods
dec
or
mov
lcall
jl
imul
sbb
mov
test
stos
test
stos
sub
stos
aas
pop
out
test
or
in
xchg
sbb
mov
test
sub
dec
dec
rcrl
pop
dec
jo
push
or
lods
pusha
dec
lret
out
mov
mov
pop
xchg
call
push
lods
out
push
push
shll
mov
addb
dec
inc
inc
test
fisubrs
cmp
jb
or
mov
xchg
mov
aad
inc
scas
dec
mov
xor
mov
movsb
mov
xor
mov
mov
in
popa
inc
push
popf
in
cmp
jo
push
xchg
cli
sub
push
lock
outsl
mov
push
unpckhps
or
addr16
ret
jo
das
dec
movsl
xor
xchg
inc
into
cs
mov
ds
push
dec
sub
push
aaa
aam
aaa
add
std
loopne
fildll
inc
lock
dec
jnp
sbb
inc
pop
cmp
push
add
adcl
jne
es
iret
lods
movsb
outsb
fldt
mov
lahf
insl
enter
out
iret
jno
mov
xor
nop
sbb
mov
sbbl
mov
andl
lret
enter
imul
mov
cmovge
sbb
push
pop
icebp
lea
sub
jmp
push
pop
in
lret
mov
jg
xchg
xchg
ret
cltd
les
fmull
shll
jmp
and
out
sahf
xor
jo
mov
xor
stc
jns
and
xor
push
cmp
jne
mov
xor
dec
and
rolb
outsb
sub
pop
xchg
cmp
add
mov
cmpsb
out
outsl
fs
and
ss
adc
enter
or
sbb
icebp
mov
ljmp
dec
jbe
jle
sub
cmpsb
inc
xchg
mov
inc
stos
insb
lcall
pop
int
fstps
mov
fisttpll
fidivl
lock
in
stos
iret
or
pop
dec
dec
push
adc
jae
dec
ret
cs
inc
fmuls
mov
xor
xlat
or
add
adc
push
mov
xor
cli
push
rorb
jmp
rclb
jae
pop
xor
insl
pop
sbb
das
dec
ja
ds
shlb
jp
popl
ss
mov
push
sbb
jae
stc
loop
xchg
repnz
xor
popa
out
scas
js
push
imul
sbb
fwait
out
repz
and
pop
imul
decb
mov
mov
in
test
fcomi
call
sti
cmp
std
push
lock
in
lret
mov
sub
xchg
and
lea
push
lds
stos
pop
xor
sbb
or
jbe
cs
mov
inc
lcall
jg
test
mov
je
cmp
ret
pop
shll
pop
xor
scas
fnsave
sub
test
push
push
mov
push
notl
mov
mov
ret
mov
or
aam
mov
mov
pop
fs
test
scas
mov
or
xchg
hlt
jb
jle
int3
mov
fiadds
sbb
lods
imul
lods
pop
push
stc
mov
adc
in
mov
pushf
shl
cld
dec
mov
divl
xor
mov
adc
cmp
daa
mov
test
mov
jae
add
dec
inc
cmp
inc
mov
fstp
xor
dec
dec
daa
roll
aam
sub
push
movsb
cld
pusha
mov
repz
aam
mov
push
das
and
xchg
pop
and
cwtl
sti
cld
mov
jb
gs
sahf
popf
fiadds
mov
js
lods
push
js
outsl
negb
mov
mov
inc
push
mov
cmp
pop
pushf
dec
into
sti
mov
test
add
mov
sub
popa
in
pop
and
aas
push
lds
into
pop
mulb
adc
pop
jle
push
sbb
lahf
fdivrs
xor
fs
ret
pop
xor
popa
jecxz
rcll
clc
pop
sbb
je
dec
or
cltd
imul
arpl
andl
ss
mov
lea
xchg
mov
sub
mov
out
sub
adc
mov
decl
mov
xchg
or
icebp
jmp
faddl
mov
sub
ret
push
cld
inc
xor
or
in
test
mov
mov
aam
shl
imul
add
fidivrl
jle
loope
cli
data16
adc
cmp
and
jmp
cmp
adc
mov
lods
shlb
or
pop
and
xor
in
sub
dec
jns
push
and
xchg
notb
mov
int3
jl
fimull
lahf
scas
lcall
mov
jo
xor
aad
cld
mov
push
mov
loop
sub
inc
sbb
xorl
fdivrs
insl
mov
stc
push
sub
mov
mov
addb
dec
sbb
xor
jbe
xorl
cmpsb
mov
das
sub
lcall
push
adc
test
lea
test
aaa
leave
aaa
iret
scas
ljmp
push
xor
inc
push
lds
and
mov
push
xor
lock
clc
aaa
pop
insl
mov
aaa
or
dec
sub
sbb
cmp
pop
movsb
push
mov
cmp
cmp
pop
or
jp
popa
pop
add
adc
mov
gs
hlt
or
jo
mov
cmp
and
mov
cmp
inc
cltd
mov
and
inc
jns
cmp
outsl
lret
xor
cwtl
mov
sti
and
in
jle
arpl
icebp
or
sub
ret
ja
mov
push
fwait
daa
inc
stos
add
cmpsl
push
daa
sub
pop
in
inc
push
or
dec
popf
jmp
add
sbb
sub
dec
into
aam
je
jg
addr16
in
js
out
xor
xchg
inc
adc
test
popa
fcoms
mov
inc
ss
mov
jg
in
rorb
lock
or
mull
xchg
push
ja
movsl
xchg
lods
cmp
sub
aam
repnz
clc
adc
jbe
stos
aad
sub
repnz
clc
mov
lret
rcr
sbb
aam
adc
ret
push
les
out
outsl
push
inc
das
sti
mov
xor
jg
push
cmp
and
lahf
lock
add
js
lahf
mov
mov
lods
std
sbb
inc
out
test
enter
arpl
jmp
nop
jbe
jg
jl
adc
adc
rcll
rcl
sbb
leave
mov
jno
inc
push
shlb
cmp
jb
sub
test
inc
xlat
xor
sbb
dec
xchg
mov
pop
mov
addr16
push
stos
jg
stos
mov
nop
icebp
dec
jmp
add
mov
sub
jg
faddl
fistl
gs
sti
call
ret
enter
loop
adc
inc
mov
mov
fs
and
add
inc
pop
pop
outsl
jl
mov
mov
dec
mov
sub
jb
das
repz
lret
lcall
popf
fistl
in
sub
daa
xor
xchg
inc
adc
cmp
sub
mov
sbb
sbb
loopne
pop
fs
frstor
imul
sub
sub
inc
daa
jbe
and
insb
cld
push
jge
xlat
xor
and
cmp
es
pushf
notl
pop
hlt
sub
mov
jbe
cmpsb
ljmp
lret
inc
pop
push
and
daa
stc
xchg
adc
dec
ljmp
mov
inc
insl
jns
sbb
or
nop
cmpsb
ja
popf
mov
dec
lcall
jno
or
push
aaa
test
mov
adc
ljmp
sub
sarl
repnz
insl
cmpsl
or
leave
ror
pcmpeqw
es
lock
jl
movsb
sub
and
xor
xchg
das
imul
xchg
jg
mulps
sub
gs
insb
cmpsb
outsb
jne
loop
mov
jno
push
cmpsb
push
or
fldl
jmp
rorl
test
add
dec
xor
je
xor
xchg
sub
add
pop
and
jp
test
imul
fwait
jns
nop
out
out
in
cmp
dec
inc
jecxz
inc
imul
outsb
out
mov
jo
outsb
iret
adc
lahf
xchg
jl
mov
pop
xor
cmp
clc
into
pop
pop
dec
imul
scas
pop
mov
and
rolb
dec
dec
xchg
sbb
cmp
test
div
sbb
mov
adc
jg
xchg
add
mov
inc
xchg
mov
int3
popl
cmp
sarb
pop
pop
into
lahf
or
addr16
xor
jbe
mov
test
fwait
popa
mov
mov
cmp
cld
inc
adc
mov
mov
and
hlt
inc
lods
ret
dec
jae
xor
pop
mov
mov
out
in
data16
xlat
gs
adc
sarb
sub
fildll
insl
jl
jmp
fistpll
mov
hlt
cwtl
test
adc
pop
cs
inc
sbb
addr16
int3
lahf
xor
out
push
pop
or
push
hlt
sub
adc
movsb
cld
dec
fists
into
movhps
outsl
jb
lcall
shrl
ror
jno
add
mov
test
movsb
icebp
decb
mov
or
lret
aam
sbb
push
inc
fisttpl
testb
pmulhw
fcmovne
mov
lret
mov
outsb
mov
cmp
and
sub
cmpl
inc
test
jmp
xor
andl
mov
xchg
lods
inc
sub
xchg
sahf
sub
mov
lods
cmpsl
ja,pt
clc
shll
mov
jbe
rcl
jecxz
ja
mov
jge
push
lahf
repz
dec
xchg
push
fsubrp
xor
fidivs
cmpsl
xor
outsl
and
icebp
iret
adc
or
mov
jle
cmpl
lahf
jo
cmp
and
pop
mov
fcmovnu
test
lds
clc
mov
pop
sbbb
mov
stc
ss
into
mov
mov
push
add
imul
adc
sbb
push
cmpsl
ds
movsb
sbb
daa
dec
jae
ja
dec
ljmp
js
ret
sub
test
popa
iret
pop
xchg
or
or
jmp
sub
jl
mov
mov
fs
mov
frstor
mov
mov
and
adc
movsb
cmp
fwait
aam
sbb
fs
or
dec
clc
inc
xor
sub
rcr
push
insl
mov
negb
xchg
sbb
mov
movsl
jl
mov
cmp
mov
nop
xor
sub
insl
lods
lret
rcl
pop
test
outsb
out
imul
imul
adc
jnp
and
xor
inc
rcrl
jg
out
adc
push
lea
out
dec
push
loope
fidivs
jbe
mov
and
pop
lds
les
push
or
shlb
dec
cmp
in
dec
add
jmp
lahf
add
aad
adcl
mov
lret
stc
enter
les
pop
out
testb
jle
and
dec
repnz
jno
add
push
mov
das
jmp
sub
pop
ret
dec
fldcw
and
cwtl
and
loopne
add
xor
push
inc
loopne
fidivrs
or
popf
filds
mov
lock
xchg
loope
subb
pop
mov
movsl
data16
add
sbb
mov
push
mov
mov
adc
xor
pop
loope
sbb
out
cmp
adc
nop
adc
cli
stos
add
xor
pop
or
call
and
mov
xor
mov
ds
push
adc
mov
dec
bnd
dec
mov
in
mov
lahf
push
lods
push
js
mov
cmp
jo
movsl
add
push
inc
ret
push
cld
add
and
scas
or
movsl
jbe
outsb
mov
dec
cmp
pop
call
add
inc
insl
ret
adc
jo,pn
mov
notl
xor
cmp
clc
jbe
aad
insl
rcll
sahf
aaa
lret
mov
push
ljmp
iret
dec
sbb
inc
out
repnz
test
notb
movsl
int3
mov
es
mov
lds
bnd
or
in
addr16
and
cs
or
mov
aas
cmp
dec
lcall
sub
lahf
aaa
imul
and
mov
les
push
dec
add
pop
xor
push
pop
leave
add
cmpsb
sub
mov
mov
sbb
jle
xor
flds
sti
adc
jae
mov
xchg
pop
hlt
bound
add
sub
fisubrs
sub
movsl
or
push
arpl
add
fnstenv
and
pop
mov
cmp
leave
movsl
dec
jnp
icebp
or
jns
adc
xchg
arpl
mov
inc
scas
icebp
cltd
lret
sahf
jb
jge
mov
fildll
lea
inc
incb
int3
shrl
enter
loopne
adc
or
mov
ljmp
arpl
test
popf
iret
mov
jmp
mov
mov
xor
scas
sub
jnp
lods
pushf
or
in
and
xor
mov
ja
lds
out
xor
or
mov
mov
jg
xchg
xchg
pop
sub
jp
in
and
mov
std
mov
imul
fisubrl
add
insb
lods
outsl
ret
sbb
inc
jno
test
fnstsw
and
add
cmp
mov
jo
dec
pushf
xchg
mov
sbb
insb
loop
xchg
pop
test
in
test
xlat
rorl
jmp
add
int
jo
inc
push
hlt
xor
mov
push
pop
inc
jp
outsb
jl
sub
bound
rol
sub
shrl
and
xchg
js
inc
lahf
sbb
arpl
cmp
sbb
push
leave
sub
in
add
movsb
adc
loope
push
push
out
iret
outsl
push
fstpt
jne
ss
sub
jecxz
dec
dec
stos
xchg
enter
push
mov
ss
inc
loop
and
subb
inc
je
mov
shll
mov
test
in
fsubrl
mov
out
mov
add
xchg
pop
adc
mov
inc
push
mov
xor
aam
lds
xor
hlt
mov
icebp
mov
jg
loope
xlat
xchg
lods
adc
sbb
in
mov
fcmovnu
mov
aad
jnp
testl
push
sub
popa
push
lcall
ljmp
fmul
dec
jb
inc
das
sbb
push
sbb
cs
insb
adc
test
insb
mov
aaa
daa
roll
and
jge
movsl
in
pop
dec
mov
pop
leave
lods
pop
flds
es
icebp
inc
lahf
lods
sub
jge
adc
outsl
sub
push
out
aas
sbb
cld
push
stos
and
pop
add
popf
sub
mov
xor
cmp
int3
imul
into
les
nop
fildl
inc
fcomip
xchg
lock
std
jns
pop
or
mul
push
mov
cs
popa
dec
gs
call
and
jl
xchg
inc
cwtl
push
adc
xchg
mov
rcrb
xor
stos
pushf
jmp
pop
mov
sahf
push
sub
adc
icebp
mov
lds
mov
int3
push
cmpsb
das
jmp
pop
jbe
push
popa
inc
out
fnstenv
push
test
xchg
and
pop
fwait
inc
shr
xchg
std
pop
pop
and
and
inc
scas
fwait
mov
mov
das
xor
push
aam
fsubs
int
cmpsl
xchg
jnp
mov
mov
fwait
in
repnz
cmpsb
sbb
insb
shll
push
insl
and
adcl
dec
outsb
and
jbe
mov
int3
sbb
push
sbb
fdivl
nop
xchg
out
hlt
sub
xchg
cmp
into
pop
adc
ja
es
adc
fld
sbb
gs
xor
or
pop
test
push
repz
add
int
int3
lea
cli
scas
stos
movb
mov
test
les
sbb
cmp
shrl
into
rcr
lea
cs
mov
mov
pop
jmp
sti
xor
popf
rorl
lcall
mov
jbe
sub
addr16
push
mov
mov
js
adc
mov
push
stos
cmp
pop
cltd
pusha
repnz
mov
aam
cmp
sub
dec
xchg
jnp
inc
rcrb
movsl
lds
cmp
xor
pushf
in
xor
cmp
sbb
jmp
sbb
mov
or
movsl
jnp
or
ss
cld
sarb
mov
jbe
sub
sti
outsb
aaa
jbe
inc
loop
in
pushf
loopne
fnstcw
mov
xchg
mov
adc
nop
adc
mov
popf
cmp
push
jno
sub
out
ror
insl
shll
push
out
inc
nop
pop
loop
pop
cmc
push
idivl
sbb
dec
stc
movsb
inc
sahf
push
add
fmulp
nop
jl
mov
or
sub
xlat
fiadds
add
les
rorb
dec
in
loopne
push
popa
jmp
jne
lahf
les
mov
xor
fcoml
ficompl
jge
pop
aam
dec
mov
add
dec
push
mov
push
filds
push
push
push
je
rorb
ja
data16
xor
arpl
ljmp
daa
pusha
sub
lahf
push
and
cmp
repz
fdivrl
lods
sub
sub
pop
les
sti
sbb
push
pop
sahf
icebp
int3
rorb
and
add
mov
xlat
roll
iret
dec
add
repnz
cmp
ret
adc
pop
test
aad
sub
fcoml
call
inc
ja
in
push
inc
push
cmpsl
and
les
aad
cwtl
call
sub
mov
push
or
adc
mov
jbe
dec
pop
std
addb
push
push
pop
lds
and
pop
mov
add
mov
lods
cld
lods
pop
movsl
sbb
sbb
adc
mov
sar
xchg
inc
or
cld
cmp
rorl
sbb
sbb
jl
and
dec
sub
mov
ja
and
pop
cmc
loope
push
mov
mov
push
or
lret
xchg
cld
cli
adcl
adc
xchg
mov
aaa
test
bound
shlb
jg
jmp
adc
cmp
mov
mov
adcl
stos
inc
loope
add
and
inc
addl
inc
mov
mov
adc
scas
arpl
adc
dec
lcall
mov
insb
loope
push
dec
fidivl
inc
cmc
mov
sahf
xor
mov
loop
aaa
negl
fs
mov
pop
cltd
inc
push
fs
pusha
or
fisubl
dec
das
cmpsl
outsb
add
stos
or
push
ljmp
and
fs
cmpsl
insl
scas
imul
mov
jne
repz
out
std
lahf
std
and
lret
fdivrs
lea
sub
enter
into
repnz
sbb
and
cmp
xlat
and
dec
cmp
out
inc
repz
daa
adc
cwtl
out
ficomps
mov
lret
mov
pop
jmp
sbb
stc
inc
sbb
dec
pusha
push
dec
gs
pop
push
mov
idivb
stc
pushf
arpl
aad
out
cmp
into
add
clc
mov
xchg
xchg
fwait
push
je
pop
mov
dec
xlat
pusha
mov
xor
test
ljmp
jnp
sub
les
cmp
xor
push
adc
xchg
insl
pop
jo
dec
in
paddsb
loope
and
lds
adc
subb
xor
je
push
subb
int3
data16
jge
adc
mov
add
mov
cmp
test
testb
xchg
gs
test
mov
push
pusha
hlt
mov
sbb
jns
icebp
sub
sbb
jo
hlt
jge
mov
loope
arpl
mov
rol
pop
out
fdivs
fsts
push
int
xchg
testl
int3
xchg
push
mov
divb
pop
xchg
test
xchg
std
pop
push
in
pushl
xchg
sub
icebp
or
enter
jp
push
push
mov
outsb
push
and
push
push
dec
aam
dec
mov
enter
xchg
in
push
push
into
push
aad
pop
btcl
push
lock
xchg
sub
adc
insl
imul
imul
insb
xor
loopne
xchg
cmp
stos
and
test
ficoml
repnz
mov
mov
insb
mov
sub
xorl
rorl
lret
lcall
inc
das
add
lahf
fcomps
push
std
adc
xchg
lock
and
stos
sbb
stc
int3
lock
cmp
imul
jb
ljmp
push
jno
cwtl
or
mov
imul
mov
mov
aad
pop
into
add
mov
bound
pop
inc
out
clc
dec
cltd
enter
test
dec
push
pusha
in
or
cld
in
in
hlt
adc
or
mov
inc
inc
inc
stos
dec
cli
mov
mov
cld
psubd
xor
dec
dec
adc
pop
mov
jbe
add
psubq
movsl
aad
repz
repz
test
nop
add
xor
decl
arpl
pop
aaa
xlat
test
clc
out
add
rcrl
lods
pushl
mov
daa
and
sti
jecxz
pushf
mov
push
or
push
ja
ss
jno
adc
pushf
xor
stc
fcom
pop
mov
test
fsubrl
inc
pop
das
jle
in
outsl
sbb
and
adc
mov
shlb
fcoms
scas
mov
xchg
cmp
push
or
imul
movsb
notl
out
xor
stc
xor
xor
and
cmpsl
inc
ljmp
sub
adc
inc
jge
shll
dec
mov
push
in
cmpsb
or
test
push
add
cmpb
nop
fs
jbe
mov
cmp
push
xor
es
mov
shl
in
xor
fstpl
int3
inc
iret
xchg
pop
lahf
popf
adc
lds
dec
xchg
push
xchg
adc
fisubs
pushl
iret
xchg
aad
jnp
mov
mov
lret
cmc
js
arpl
pop
push
adc
enter
xchg
xlat
pop
and
aas
inc
xchg
and
mov
jg
sbb
shll
outsb
fimull
test
adc
adc
push
dec
jne
add
add
lcall
push
arpl
adc
shlb
jo
gs
mov
add
nop
cltd
icebp
in
movsb
add
stc
fbld
fs
popa
frstpm(287
mov
and
jae
inc
testb
sub
mov
ljmp
mov
sbbl
cwtl
es
dec
in
inc
push
outsb
mul
lahf
ljmp
movsl
jnp
roll
or
xchg
int
sbb
mov
cmpsb
cmpsl
add
prefetch
or
cmc
scas
jb
js
inc
add
insl
fstpt
or
fdivrp
cmp
ret
xor
mov
adc
es
mov
jle
jp
cmp
call
lds
das
dec
arpl
int
dec
add
pop
fisubl
ljmp
fs
xchg
xchg
es
aad
jp
push
push
dec
mov
sarb
inc
sub
or
inc
mov
dec
sahf
add
xor
push
das
push
pop
adc
test
pop
daa
xor
das
inc
hlt
repz
shll
in
or
or
cmp
cmp
mov
loop
or
stos
hlt
mov
bound
mov
repnz
imul
lock
sub
clc
imul
mov
mov
xorb
dec
xchg
and
xchg
fwait
ljmp
into
repnz
fadd
mov
adc
adcl
imul
adc
fwait
cmp
ret
mov
mov
mov
cmc
rorb
mov
ret
mov
in
or
int3
and
xlat
out
movsb
lret
int3
push
mov
pop
adc
out
inc
loop
cmc
add
inc
popa
push
add
jle
add
fistl
ljmp
push
lods
in
mov
cltd
subb
adc
popf
outsl
push
sbb
add
cmc
ja
ret
or
test
dec
and
or
and
stc
lods
inc
ret
bound
add
push
std
add
test
push
outsb
div
ret
das
inc
lds
push
push
dec
aam
or
dec
or
adc
out
mov
adc
dec
cmp
cwtl
sub
out
mov
loopne
or
inc
mov
jns
mov
sbb
jno
outsb
xor
fsubrl
cmp
icebp
jp
inc
vbroadcastsd
ret
sbb
lock
sbbl
sub
jnp
aam
scas
roll
ret
jmp
fwait
test
push
push
leave
lret
or
xchg
and
push
sub
data16
hlt
mov
and
jno
lret
mov
inc
ja
addb
add
cmp
mov
mov
test
and
jle
das
ljmp
cmp
pop
dec
push
je
nop
fcompl
and
cwtl
mov
pop
mov
inc
adc
cli
in
xchg
dec
pushf
xchg
push
jg
xor
sarb
pop
jno
sbb
out
add
cwtl
jle
inc
adc
sti
jmp
sbb
cwtl
inc
movsb
and
xor
pushf
addr16
sub
sub
mov
mov
ret
or
cli
push
dec
pop
hlt
fmull
mov
cs
shr
push
cmp
add
ret
pusha
mov
les
ja
xor
push
mov
orl
add
inc
movsb
pop
or
mov
xlat
add
iret
mov
pop
cmp
sbb
xor
fbld
shrb
lret
jmp
jl
jno
mov
jae
pop
push
xchg
je
imul
or
pop
mov
adc
les
data16
inc
pop
fnsave
clc
popf
movsb
aam
add
sub
aad
xchg
xchg
cmp
lahf
push
js
cmp
and
push
leave
mov
in
mov
into
shll
nop
mulb
push
rcr
xchg
push
cmp
inc
push
rorl
pusha
iret
aad
dec
adc
out
pushl
lock
dec
mov
leave
xor
shr
imul
lret
or
test
cld
mov
or
fwait
ja
mov
ficoms
jno
repnz
pop
pop
add
rcrb
ss
jo
adc
scas
mov
cld
pop
push
and
pop
cmp
andl
out
stc
add
mov
fstps
out
stos
popa
cld
xor
push
repz
test
fdivs
mov
cmp
pop
push
xor
icebp
xor
dec
sub
adc
das
iret
je
inc
andb
data16
fcompl
sbb
mov
push
mov
xor
push
xchg
jb
incb
inc
jle
cmp
les
cmp
ja
xor
xchg
dec
fsubs
loop
mov
mov
jno
pop
faddl
rclb
test
mov
jecxz
push
sti
jmp
and
pop
jbe
sbb
mov
sub
xrelease
inc
ljmp
mov
lock
jmp
out
or
push
cmpsb
push
cld
arpl
cmpsl
adc
cltd
imul
jno
dec
mov
adc
lods
or
or
push
dec
xor
xchg
push
push
pop
stc
cmpsl
jge
cmp
scas
xchg
xor
filds
or
xchg
daa
dec
aas
fiaddl
xchg
dec
sub
lods
shrl
mov
js
mov
mov
fcomip
divl
fidivrs
orl
mov
nop
outsl
enter
adc
or
mov
adc
inc
dec
jne
loopne
int
pop
in
mov
mov
jae
mov
pop
cmpsb
addr16
repnz
xor
cmp
sbb
nop
popa
into
ja
push
inc
repz
stos
mov
adc
inc
fadd
ret
fwait
mov
ds
or
jmp
jbe
and
std
out
fsub
movsb
mov
xor
xlat
pop
sahf
mov
lretw
scas
scas
in
mov
jae
scas
and
push
out
push
fsubl
pop
mov
pop
or
in
sahf
aas
sbb
mov
lea
cmp
mull
outsl
sbb
sbb
or
and
push
sub
stc
mov
rcll
fwait
imul
movsl
xlat
and
add
jno
dec
dec
arpl
lret
insl
mov
mov
mov
mov
hlt
add
stos
nop
adc
mov
lret
cmpsb
xor
dec
lds
or
cwtl
cli
xchg
fwait
jmp
cli
sub
sbb
sub
or
jbe
out
mov
and
pop
inc
addr16
sbb
and
cmpsl
adc
add
test
daa
adc
dec
stos
pop
lds
out
xchg
mov
js
pop
xor
cmpsl
jbe
xchg
lcall
sbbb
rcl
adc
cli
xchg
ret
fsts
aaa
rclb
push
xchg
cs
sti
dec
shr
lods
bound
inc
out
pop
xchg
idivb
out
or
cwtl
in
sbb
int3
mov
jle
clc
pop
pop
dec
subb
sub
std
jl
jmp
popf
jmp
or
pop
push
pushw
iret
dec
push
sbb
mov
std
xchg
test
test
dec
xor
aad
repz
xlat
jmp
loop
lcall
mov
jl
daa
xchg
rclb
adc
test
adc
out
pop
movsl
nop
jle
mov
or
jecxz
not
pop
andl
dec
xor
lret
test
or
lret
cmpsl
fisubrs
cmp
orl
mov
jb
sahf
out
or
test
or
jo
pop
xor
addr16
sbb
jecxz
add
rcll
xchg
mov
mov
sbb
sub
in
sbb
in
mov
mov
inc
ret
arpl
rclb
jo
int
adc
test
xchg
sub
cltd
xchg
jge
lods
sbb
icebp
in
sahf
ret
xchg
dec
call
mov
jns
jp
push
cmp
outsb
cmp
push
mov
mov
pushf
sub
mov
cld
leave
shlb
sbb
rclb
push
ss
lock
jb
aam
xorl
fwait
int
bound
push
mov
mov
in
push
push
inc
dec
mov
add
inc
and
ret
andb
fidivl
cli
push
ret
ret
cld
xchg
pop
push
adc
aaa
lods
js
push
roll
xrelease
push
mov
pop
push
push
adc
dec
into
in
inc
xor
cmpsb
iret
sub
mov
sarl
push
ljmp
iret
sub
push
loope
sub
mov
mov
and
sub
roll
xor
xchg
xchg
cmp
js
lea
sub
mov
push
mov
add
adc
ret
adc
fcoms
stos
call
aam
add
je
mov
adc
movsb
mov
push
adc
bound
fwait
out
stc
adc
into
add
rcrb
xchg
lret
mov
jl
out
xor
arpl
and
jl
outsl
or
add
mov
movsl
mov
cmp
xor
sti
enter
and
movb
hlt
fs
xor
jo
cltd
fmulp
mov
into
insb
loope
jne
sbb
daa
push
sbb
adc
dec
pop
sti
add
xchg
push
lret
mov
loop
sbb
cli
and
add
mov
inc
out
les
inc
sarb
dec
cmpsb
jl
or
pop
lock
cmp
dec
mov
jmp
push
add
idivb
in
or
adc
and
insb
gs
ret
aas
iret
cmp
inc
xchg
scas
add
addr16
dec
cmpb
xchg
pop
adc
js
lret
dec
and
sbb
aad
add
cmp
xor
scas
mov
cmp
jno
int3
cmp
push
jne
imul
sbb
dec
fisubrl
mov
pushf
mov
out
sahf
dec
dec
stos
iret
cmpsl
int
cli
xchg
hlt
mov
jno
push
pusha
add
jge
sub
cmc
sub
sti
dec
ret
movsl
fidivrs
dec
faddl
push
iret
mov
roll
leave
notl
sbb
inc
idiv
mov
addr16
sbb
fsubrl
insl
jmp
int
leave
ffreep
pop
fcomp
gs
adc
jb
jbe
or
loop
push
pusha
test
cli
je
pop
mov
fnstcw
mov
inc
mov
push
and
loopne
aam
ret
cmp
popf
xor
sbb
aaa
fdivl
in
lock
push
push
ljmp
sub
fildl
mov
cli
inc
mov
in
jae
dec
mov
jp
inc
lret
xor
mov
add
ds
loop
dec
in
insb
jbe
mov
ret
and
xorl
fsub
sti
lods
aad
or
insb
push
push
stc
sbb
std
add
lods
push
jbe
add
adc
pop
bound
out
sub
ret
and
inc
test
mov
lcall
insl
jo
clc
jp
xchg
sahf
lods
out
cld
pop
push
out
mov
adc
imul
xchg
jecxz
adc
sbb
push
dec
loopne
pop
movsl
cmp
movsl
push
int
dec
push
jle
pop
sbb
xchg
and
push
add
inc
pop
inc
push
call
sbb
xor
dec
lods
addl
fildll
xchg
arpl
xchg
aad
sahf
add
add
fisubs
clc
cli
jns
cli
jb
jge
out
mov
adc
jl
jecxz
xor
mov
sbb
pop
jb
or
mov
mov
cs
sub
pop
pop
sbb
jecxz
gs
dec
push
fnstsw
lcall
insl
cmpsb
inc
xchg
mov
push
sub
icebp
pushf
dec
ret
fmul
stos
or
movsl
ss
dec
les
mov
jge
sub
jno
ret
insl
cwtl
jno
cmpsl
and
sbb
test
gs
pop
push
data16
je,pt
rcrl
arpl
adc
or
enter
std
jo
gs
mov
enter
mov
fbstp
or
mov
cmp
fisubs
scas
sub
lret
shrb
push
repnz
sbb
stos
mov
out
mov
push
cld
dec
aam
outsb
xor
ds
jno
pop
push
mul
mov
fadds
or
lods
into
cli
out
and
sub
jne
add
push
sbb
arpl
mov
dec
dec
fildll
std
test
aas
inc
fucomi
sbb
and
and
dec
or
in
dec
adc
mov
clc
mov
push
mov
cmp
inc
pop
cs
insb
pop
mov
or
mov
in
xchg
int
add
add
or
cmp
in
jmp
sti
push
sbb
nop
popf
mov
ja
or
bound
ret
subl
dec
jmp
and
or
sub
sub
sarb
mov
mov
call
test
jns
ljmp
dec
stos
in
mov
test
ficoml
bound
cli
nop
cltd
fsubs
xchg
ftst
scas
mov
loop
lods
hlt
sub
inc
xor
mov
mov
ss
push
push
aaa
push
gs
stos
call
push
lods
in
mov
pop
call
test
xchg
rep
negb
push
xor
mov
hlt
adc
push
lret
lcall
popf
daa
mov
outsb
out
mov
mov
fisubrl
push
les
jno
sbb
aad
jg
xlat
in
push
mov
lahf
scas
in
mov
shl
out
pop
mov
cmp
shll
nop
sbb
pop
data16
lahf
roll
fcoms
int
and
mov
adc
adc
cld
jo
gs
in
repz
and
add
out
inc
arpl
xchg
mov
push
test
add
lcall
jne
xchg
push
aas
pushf
cmc
mov
sahf
mov
in
add
dec
jb
ret
cmp
push
in
and
xor
xchg
outsb
and
leave
add
jecxz
pop
and
mov
imul
rorl
js
dec
ret
imul
cld
jmp
scas
jmp
mov
aam
aas
mov
inc
or
push
dec
jo
js
cmp
dec
mov
cmc
dec
int3
sbb
dec
xchg
bound
mov
sub
jo
test
jno
jns
mov
mov
push
or
sbb
and
xchg
pop
mov
adc
xor
stos
mov
or
sbb
mov
xchg
xor
imul
jge
lds
adc
push
pop
jle
adc
lock
add
add
inc
clc
jno
lock
insl
mov
std
lea
cmp
popf
fadds
lret
fdivrl
sub
cli
out
cltd
xor
dec
dec
scas
inc
sarl
aas
pushf
and
sub
lea
ss
sahf
loopne
adc
shll
sbb
push
je
mov
mov
push
testl
push
test
fsts
fiadds
mov
in
inc
add
add
ljmp
mov
fbstp
jbe
cmpb
sbbb
in
mov
cld
aas
movsl
shll
push
dec
aad
into
adc
pop
in
pop
stc
sbb
pop
mov
mov
das
aaa
add
or
sub
adc
cmpsl
ja
xor
push
mov
dec
mov
mov
ret
push
testb
ss
loopne
lahf
test
or
pop
pop
mov
jne
aas
fldt
add
jl
outsb
add
lret
fs
bound
xchg
arpl
cld
xchg
xor
movb
jo
push
adc
xchg
rcll
mov
sbb
repz
push
push
and
sub
cmp
mov
aas
addr16
cld
xchg
test
add
enter
add
and
adc
call
hlt
dec
sub
mov
cmp
in
in
mov
stos
mov
mov
inc
insb
jbe
or
xchg
aad
mov
jg
inc
fdivrs
int3
cmc
xchg
out
jl
mov
lods
std
push
add
xchg
xchg
push
lods
pop
dec
push
jno
lret
into
mov
mov
orl
mov
fxch
dec
dec
pop
shrb
mov
inc
fcomi
flds
pop
adc
mov
dec
jo
mov
or
popf
xlat
pop
add
and
adc
sbb
mov
inc
aad
mov
loopne
mov
cs
addb
dec
clc
das
adc
adc
aad
xchg
insb
and
in
jns
mov
insl
nop
xchg
cwtl
cmp
jo
movsb
cli
cwtl
clc
int
fnstcw
mov
jne
pop
repz
xchg
sub
mov
add
mov
sub
inc
shrl
push
enter
lahf
notb
aad
ljmp
test
pushf
mov
insl
adc
addr16
sbb
sub
fsubl
iret
pop
add
and
daa
fs
jp
pop
or
xchg
adc
inc
pop
filds
cmp
iret
ja
cld
adc
xor
ljmp
add
andl
dec
mov
xorb
scas
xlat
push
xor
orl
push
mov
loope
cmp
popf
add
push
cmpsb
fildl
cltd
mov
in
idivb
or
mov
out
mov
jl
stc
cmpsb
lock
hlt
stos
imul
addb
jae
mov
pop
mov
mov
jo
ds
mov
test
jbe
or
je
andb
out
xchg
ds
mov
mov
hlt
and
pop
push
jbe
mov
imull
int
loopne
pop
push
gs
out
mov
add
push
inc
cmc
fstpt
bnd
cltd
cmc
mov
jmp
or
out
xor
lret
inc
insb
xor
inc
call
in
pop
inc
ja
imul
pop
ja
movsl
push
xchg
sbb
outsl
xchg
js
insb
inc
pop
leave
inc
jae
pop
mov
add
inc
mov
pop
mov
adc
jae
jmp
int
call
xor
pop
stos
xor
sbb
or
xchg
xchg
mov
pop
and
jmp
jmp
sub
inc
pop
outsb
pusha
out
int
push
mov
pop
ret
jns
mov
lret
jnp
imul
lods
aad
cmp
sbb
clc
je
in
loop
into
dec
test
ss
jnp
sub
add
push
aad
cmp
jne
ja
xchg
fwait
sub
mov
pop
jmp
push
mov
pop
pop
add
xchg
dec
pop
mov
pop
jge
jg
mov
int
cmpsl
aad
ja
test
mov
dec
mov
mov
jnp
xchg
cld
ljmp
lds
push
mov
push
ds
iret
addr16
nop
out
cld
inc
imul
jb
cmp
test
dec
cmp
movsb
popl
sbb
ja
ds
or
mov
ss
xor
mov
in
jle
js
push
xchg
sbb
or
hlt
test
push
adc
les
stc
jl
repz
data16
xor
xchg
lods
pop
or
lock
push
push
jne
add
lds
mov
cmp
mov
loopne
jge
adc
jae
cli
add
aaa
fdiv
xchg
or
sahf
dec
iret
imul
mov
add
sbb
movsl
shrl
xor
add
lret
fdivl
adc
mov
cmpsb
mov
sub
mov
xchg
adc
aas
fnstenv
lods
repz
fdivrs
les
enter
aas
scas
imul
and
idiv
ret
bound
xchg
adc
shr
adc
pop
xchg
sarl
xorl
xchg
neg
rcr
imul
sub
fincstp
sbb
lods
fists
vmovss
scas
leave
push
cs
mov
jle
lret
fs
push
xor
dec
jns
xchg
cmp
inc
xchg
jae
dec
xchg
div
pop
and
xchg
xor
mov
pop
stos
shlb
in
add
sub
and
ret
sub
mov
sub
xchg
shlb
arpl
repnz
xchg
sbb
add
xor
into
xchg
ficomps
dec
xlat
push
aam
sahf
dec
fldcw
out
rorb
pop
icebp
clc
out
aad
dec
pop
lock
aas
lcall
cli
in
mov
sbb
rcr
jge
inc
sub
dec
cmp
imul
dec
add
jmp
test
mov
loope
out
and
xor
and
cmp
sahf
ret
arpl
push
cmp
or
lods
test
dec
adc
pop
ds
aam
jecxz
pop
xlat
jno
jle
sbbb
push
fsts
fs
pop
push
xlat
insb
push
push
push
hlt
pushf
mov
add
push
cmc
jo
add
xchg
pop
xor
mov
arpl
lret
mov
xchg
daa
xor
stc
nopl
mov
lcall
cltd
leave
jbe
repz
fadd
sbb
les
movsb
push
popa
adc
cmpsb
in
push
inc
fisubs
sub
cwtl
push
ret
xchg
mov
leave
js
mov
mov
or
insb
cmp
sub
sbb
sahf
sbb
into
addr16
shrl
inc
hlt
cmp
dec
je
int3
fwait
lahf
lret
xchg
sbb
sub
sub
pop
test
push
jb
enter
cmp
push
xor
pop
cmpsl
lock
adc
nop
in
xchg
stc
xor
fwait
cmp
mov
sub
cltd
insb
and
cmp
mov
ret
lcall
xor
dec
mov
and
aad
call
cmp
movsl
sbb
sub
mov
xor
push
cmp
or
pop
xchg
test
fwait
enter
jnp
dec
push
outsl
inc
subl
ds
mov
out
mov
sbbb
lods
xor
ss
mov
xor
mov
sahf
outsb
pop
imull
hlt
mov
sbb
inc
cli
cmp
fwait
push
or
sbb
or
adc
shll
pop
aaa
xor
outsb
pushf
jle
imul
xor
push
lods
sbb
pop
or
jne
xchg
aaa
nop
rcrb
xchg
outsb
cmp
icebp
or
call
xchg
sub
je
pop
pop
dec
sbb
push
pop
lea
les
or
jae
sub
movsl
ja
pop
or
push
pop
add
test
xor
into
mov
pop
dec
push
push
popf
jge
imul
incb
sbb
xor
inc
sahf
mov
loope
and
mov
mov
repz
pusha
pop
cmc
mov
mov
mov
lds
pop
jle
or
shll
sub
jp
mov
in
pushl
inc
mov
lahf
mov
pop
lea
mov
les
jle
pop
out
scas
xchg
out
cmp
ret
xor
cmp
dec
sbb
loop
fnstcw
add
leave
fidivs
sbb
mov
push
pop
mov
int3
in
std
xchg
out
lds
leave
leave
mov
push
sub
push
in
dec
push
push
xchg
xor
cmpsb
mov
adc
xchg
enter
insl
loopne
cmc
test
push
mov
bound
test
sahf
lcall
adc
sbb
mov
xchg
sbb
in
adc
aad
jecxz
test
mov
mov
loopne
xorb
cmpsb
mov
xor
fwait
lock
mov
pop
or
fistps
adc
lret
stc
mov
or
lds
movsb
and
xchg
sbb
cmp
ret
dec
jnp
andps
mov
mov
xchg
dec
and
ljmp
sub
adc
dec
dec
imul
sarl
pop
cmp
inc
xor
jl
les
test
mov
fs
imul
push
pop
shlb
js
repz
xor
dec
repz
sub
dec
mov
lock
ret
lcall
adc
mov
mov
sbb
decb
mov
mov
ficoml
xchg
roll
stc
lods
rorb
jl
loop
pop
adc
leave
icebp
xchg
leave
dec
lcall
add
ds
or
lahf
movsl
pop
jnp
mov
pushf
aam
dec
mov
into
mov
and
mov
xor
lea
push
push
sbb
mov
shll
xchg
cmp
jae
jns
xor
lahf
pushf
arpl
xchg
pushf
loopne
or
hlt
inc
pushf
adc
sbb
jl
ret
mov
pushf
ds
es
stc
xchg
jno
or
fnstenv
dec
jae
sub
add
je
lock
into
adc
jb
test
or
inc
pop
jecxz
sti
shrd
loope
xchg
sbb
and
inc
or
mov
mov
jae
mov
negb
or
sbb
scas
negl
outsl
mov
fld1
inc
jne
add
jg
popl
sub
scas
xchg
sbb
loope
addr16
dec
add
cld
add
mov
xlat
in
mov
ret
inc
add
aas
xor
fs
imul
cmp
sbb
insl
inc
push
sbb
arpl
popf
and
xchg
cmp
movsl
cmpsl
adc
pop
jp
lea
popf
push
xchg
popf
mov
test
adc
push
inc
cmc
mov
int3
cmpsl
mov
jae
fistps
fs
adc
mov
rsm
and
cmpsb
mov
in
push
pusha
push
dec
les
pusha
xor
sbb
inc
fs
xlat
sar
stos
mov
push
inc
jno
int
sahf
enter
adc
aas
scas
cwtl
adc
push
sub
pop
jg
stos
jmp
xchg
cmp
jle
das
mov
or
lea
aad
shll
data16
stos
jne
mov
enter
cmp
dec
mov
mov
push
push
and
mov
sub
sahf
out
popf
xor
leave
fs
xorl
cmp
ret
lds
sub
stc
cmp
daa
xchg
and
mov
mov
inc
lock
xchg
lret
pop
repnz
pop
sbb
xchg
scas
das
sub
xlat
mov
xchg
adcl
out
nop
movsl
push
cmp
lea
inc
je
imul
outsl
add
mov
jle
and
mov
jno
inc
mov
fidivl
sub
mov
aam
mov
fildl
mov
mov
push
xchg
inc
nop
dec
pusha
icebp
loopne
fsubp
les
cmp
pop
sbb
pop
pop
repnz
pusha
or
mov
jmp
push
lods
mov
bound
lds
nop
adc
xlat
aad
cld
push
sbb
and
mov
sub
add
xor
cmp
xchg
dec
enter
in
xor
rol
jo
loope
push
add
lret
popf
jecxz
imul
aad
jbe
lock
lret
jl
sahf
pop
rcll
imul
call
cmpsl
and
dec
dec
repz
cmp
pop
mov
pop
cmpsb
jle
adc
lea
fidivrs
mov
cmp
jp
jg
and
in
jmp
sbb
int3
xchg
lds
xchg
lea
stos
divb
push
out
or
cmpsl
out
packuswb
pop
mov
lds
pop
in
in
dec
xchg
fwait
es
in
adc
scas
jecxz
mov
xor
arpl
sbbl
push
fwait
and
sub
sub
mov
xor
cmp
push
dec
adc
neg
lret
inc
push
nop
enter
cmp
daa
push
je
push
mov
pushf
xlat
cmp
mov
imul
jle
shrl
fsubrl
loope
jne
pop
icebp
leave
pop
test
sub
push
enter
lock
pop
xor
outsb
out
mov
jno
shrl
inc
xor
jp
ljmp
fwait
xor
sub
pop
cmp
addb
in
les
jecxz
xchg
sbb
xor
or
aam
sbb
adc
cmp
fistpll
lods
pop
inc
xchg
sti
push
outsl
loop
push
addr16
cli
lcall
test
imul
add
pop
xor
rorb
pop
fsts
adc
stc
daa
pop
mov
negl
push
popf
shrb
lret
cld
ljmp
push
xor
xchg
ljmp
push
pop
push
mov
mov
mov
mov
popa
popa
stos
xchg
ljmp
push
repnz
pushf
popa
push
aad
xchg
mov
xor
je
jge
inc
fstl
ja
in
jno
jnp
outsb
fisubs
mov
cmp
lcall
into
shrl
push
clc
pop
mov
adc
push
lods
add
lret
inc
popa
loope
out
std
lret
subl
pop
popa
xor
xor
or
pop
dec
mov
std
je
xor
leave
ret
mov
sub
push
aas
test
pusha
adc
add
mov
jg
fdivrp
push
insb
dec
pop
aad
test
mov
sbb
jno
cmp
xor
loop
jne
stos
fdivrs
fdiv
sbb
xor
bound
and
stos
lret
mov
xchg
out
xor
aam
jo
in
clc
mov
add
mov
lea
cmpsl
mov
dec
sahf
fwait
pop
repz
mov
and
jmp
repnz
pushf
fadd
test
in
ret
out
dec
adc
lods
insl
sbbl
lea
mov
daa
adc
jmp
mov
or
jnp
xor
lods
sub
cltd
mov
push
sub
sti
push
xor
rorl
lcall
lock
test
je
xchg
pop
sbb
pop
adcl
jle
cwtl
mov
sbb
mov
cld
fildll
fidivrl
dec
mov
incl
pusha
mov
or
inc
pop
push
mov
addr16
jo
push
rcr
stc
sbb
or
sbb
lahf
mulb
mov
lods
lock
add
stos
sti
scas
mov
dec
push
cli
cmp
fwait
mov
mov
jmp
insb
sti
jbe
mov
fnstsw
push
mov
adc
push
or
xor
add
sar
idivb
pop
in
in
add
push
sub
xchg
mov
add
jge
popa
shl
loope
adc
push
mov
mov
jmp
loop
dec
and
js
insl
xchg
push
cmpsl
cmp
dec
add
push
out
mov
adc
scas
fdivrl
xchg
repnz
xchg
mov
sti
lods
cld
lods
mov
packsswb
test
inc
jecxz
xchg
imul
aas
cmpb
dec
in
stos
out
andb
xchg
or
sbb
scas
scas
dec
add
iret
or
inc
push
and
mov
outsb
pop
pop
push
mov
mov
subb
adc
ljmp
mov
xor
xchg
and
cmp
xlat
imul
sarl
das
or
push
add
push
js
loop
jecxz
adc
mov
fwait
dec
push
test
sub
xchg
and
int3
mov
jnp
test
xchg
xchg
iret
add
sbb
hlt
xlat
pop
mov
mov
hlt
mov
add
push
setae
mov
iret
xor
push
rcrl
push
or
and
pop
mov
jns
sbb
mov
push
push
cmpsl
dec
test
rcll
push
mov
lcall
pop
pusha
cmp
pop
add
pop
cld
fisubs
dec
mov
pusha
adcl
mov
and
std
ss
fildl
dec
cmpsl
jo
decb
xchg
fwait
and
pop
mov
push
mov
loop
test
pop
inc
sub
lea
add
push
inc
pop
sub
cli
jg
mov
mov
pop
xchg
les
pushf
outsb
movsl
data16
push
daa
inc
adc
test
adc
mov
das
adc
add
or
lods
sbb
sbb
sub
movsb
cmp
jbe
inc
xor
lea
push
hlt
inc
popa
les
sub
popa
sbb
mov
call
pop
imul
cli
mov
fyl2xp1
fcmovnb
test
pop
or
pop
mov
popf
test
add
cmp
xor
imul
sub
add
lret
push
push
mov
in
sbb
mov
icebp
into
xchg
xchg
sbb
jne
notl
mov
inc
cltd
jo
rcrl
loopne
ljmp
push
jge
sub
add
scas
pop
inc
arpl
inc
fcoms
pop
adc
sti
push
push
incb
inc
orb
sub
cmp
inc
in
sub
loope
into
lret
fwait
loopne
inc
nop
mov
xchg
push
and
arpl
adc
repz
and
sbb
cmp
add
add
jmp
inc
and
dec
push
pop
inc
pop
shl
enter
ret
fnstenv
dec
fs
jg
in
sub
dec
cmpsb
fdiv
inc
ret
daa
aam
xchg
and
mov
or
lret
pop
pop
mov
inc
fldenvs
or
xor
xchg
lock
shrl
mov
int
imul
aad
mov
movsl
jmp
and
sbb
mov
xchg
sub
out
repnz
aad
pusha
dec
and
or
in
xchg
loop
rcll
insb
sub
push
and
xchg
jno
push
sub
pop
fdivr
into
test
mov
rolb
xchg
movsl
push
sbb
or
outsl
repnz
mov
add
mov
xchg
int3
cwtl
stos
mov
aam
int3
mov
arpl
xchg
mov
arpl
test
fs
fstpt
mov
loopne
sbb
mov
add
push
adc
popf
xor
mov
pop
shlb
popa
loope
adc
rcl
sbb
shll
pop
lods
add
inc
lret
adc
xorl
lcall
cmp
sbb
imul
pop
push
push
mov
addb
mov
cwtl
and
cmp
cmp
fildl
adc
iret
jns
shlb
gs
jne
push
cli
adc
addl
or
shlb
aas
and
mov
mov
out
int3
pusha
ljmp
mov
mov
mov
mov
jns
lock
xchg
cmpsb
jp
sbb
out
mov
xchg
cld
aam
test
dec
fadds
cmp
in
mov
aad
sbb
es
mov
sbb
cmpb
jb
sbb
push
sbb
int
aad
aad
movsb
jecxz
xor
lock
inc
xchg
cld
fdivs
add
test
push
mov
mov
inc
xchg
jbe
fucompp
sbb
test
cmpsb
hlt
loopne
push
in
arpl
das
repz
minps
ss
jns
inc
push
bound
jbe
jp
out
adc
addr16
jae
mov
pop
shl
iret
or
add
shrb
ja
rorb
imulb
sub
xchg
xor
and
xchg
and
push
xchg
jnp
xor
xor
xchg
xchg
inc
push
mov
rol
inc
cmp
stc
mov
les
insb
pop
push
xchg
daa
sbb
cmc
fcom
push
push
pop
xchg
repz
inc
pop
push
outsl
dec
fisubrs
cmpsl
inc
jns
loope
jbe
cmp
filds
xchg
imul
in
gs
inc
add
inc
cmpsb
pushf
test
fwait
xor
test
mov
pop
ret
cli
or
out
aas
movsl
and
sub
scas
jl
sub
fimuls
xchg
pop
lcall
mov
pop
shll
in
das
addb
adc
in
inc
push
mov
pop
popf
lods
repz
add
fucomip
and
push
inc
stos
filds
clc
stc
jmp
int3
or
mov
mov
mov
fcmovnb
mov
mov
adc
jmp
lods
cmp
std
clc
and
jg
inc
adc
mov
pop
addr16
ret
std
bound
mov
imul
pusha
or
add
sub
popf
rcll
or
cmp
jno
fadd
sub
xchg
roll
subl
ret
clc
push
loop
aam
add
ss
popa
test
sbb
jbe
icebp
call
in
pop
cmp
shrl
out
stos
orl
mov
add
mov
push
jecxz
sbb
inc
stos
aad
stc
jo
xor
test
in
mov
js
stos
hlt
lods
lcall
xchg
cmp
xchg
push
pop
cmpsl
sub
ret
in
cmpsb
arpl
and
and
inc
clc
shlb
mov
mov
imul
jns
pop
sbbl
mov
xchg
imul
cltd
cmp
mov
aad
mov
fbstp
and
push
rcr
das
jae
jns
leave
scas
fstpl
jecxz
divb
and
push
and
add
outsb
adc
popf
iret
test
add
cmovp
xchg
andb
mov
mov
mov
mov
add
ffree
jg
int3
rcll
insb
ja
daa
xorb
add
cmp
out
popa
shlb
adc
jne
in
cmpsb
jnp
inc
push
jp
adc
push
push
ds
mov
idivb
xor
fdiv
push
push
sub
je
adc
and
mov
inc
add
decb
mov
test
or
les
pusha
dec
cmp
dec
in
loopne
dec
enter
lods
dec
mov
icebp
add
sahf
push
push
lods
and
sub
sub
in
sbb
xor
dec
jle
mov
jmp
push
jb
sbb
mov
outsl
rorl
pop
or
lods
sbb
sbb
adc
int3
outsl
mov
mov
and
mov
or
xchg
push
push
push
popf
adc
adc
pop
dec
out
mov
outsl
and
movsl
das
adc
push
mov
daa
adc
mov
inc
xchg
or
ja
xor
sub
lods
out
out
mov
push
ljmp
in
popf
lds
ror
shlb
in
imul
xor
xor
push
add
rolb
addr16
ja
xor
dec
cs
into
daa
xchg
shlb
int3
in
add
lock
insl
pop
xchg
push
sbb
lret
xchg
repnz
jle
xchg
xor
inc
icebp
pusha
int3
sbb
xlat
ret
push
cmc
lcall
or
subb
mov
adc
andb
ficoms
jo
mov
out
jl
push
out
push
addr16
fdivs
insl
inc
fsubrl
movsl
and
xchg
cld
in
adc
xchg
or
in
xor
scas
mov
mov
jb
lds
imul
daa
cmpsb
cmpsb
fstps
mov
insb
cwtl
mov
repz
sbb
mov
insl
dec
stos
aad
fisubrl
jmp
cmp
mov
outsl
pop
push
loope
sbb
call
mov
push
adc
daa
imul
sbb
rolb
pop
fsubl
inc
loope
aad
and
lcall
aam
fcompl
dec
mov
xor
inc
test
scas
mov
and
jmp
mov
scas
lret
aaa
loope
popa
xor
jge
iret
ss
fsub
sbb
scas
fimull
jmp
outsb
int
sti
cmp
jl
cmp
inc
rolb
call
pop
mov
fdivl
xor
mov
mov
leave
push
mov
stc
jns
sbb
outsl
add
aaa
mov
dec
xor
jg
lods
pop
cmpsb
jg
push
sbb
out
out
stos
arpl
push
add
jmp
lock
loop
imul
adc
mov
pop
movsb
int
popf
mov
and
movsl
or
inc
decl
cmc
mov
xor
in
push
add
pusha
inc
dec
pop
jae
push
aaa
ja
inc
xchg
add
in
inc
xor
es
push
mov
lea
cs
dec
jo
lods
or
sahf
ret
mov
sbb
insl
mov
fistl
mov
lods
aam
int
movsl
ret
or
test
jecxz
mov
movsl
push
add
pop
and
and
sub
inc
decl
xor
fdivs
sub
loopne
add
rcl
xlat
dec
rcrl
and
cmp
dec
lods
dec
inc
add
int
xor
push
scas
jg
fimull
push
pop
jmp
ss
adcl
adc
aaa
xchg
lods
jp
dec
dec
sub
inc
lret
inc
aas
adc
mov
push
popf
cmc
hlt
xor
mov
movsl
jg
int
es
ds
js
das
incb
bound
inc
lea
adc
pop
push
insb
xchg
adc
mov
outsb
jb
inc
loope
aas
call
scas
insb
mov
pop
and
fimull
stc
stos
push
add
jo
dec
dec
jne
mov
add
inc
mov
dec
ret
sub
sub
idivl
jle
xchg
in
jb
cmp
jae
pop
sbb
dec
fmuls
xchg
push
loopne
sub
xchg
jns
cwtl
mov
pop
xchg
cmpsl
stos
test
sbb
ss
rol
jg
cs
push
in
fwait
mov
in
mov
ret
mov
inc
mov
xchg
mov
pop
dec
in
sub
sbb
cltd
test
negb
sbb
nop
jg
dec
scas
sbb
test
cld
aad
jle
fldcw
cmp
subb
ja
int3
mov
fimuls
mov
setno
and
js
fsubl
and
pusha
popl
es
xor
and
push
outsl
push
lods
dec
rcrl
jl
pop
ja
and
test
fists
xchg
stos
sub
mov
scas
or
mov
sbbl
dec
jmp
dec
sub
scas
je
inc
int
or
sahf
aaa
leave
adc
pop
xchg
cmpl
add
cltd
and
and
push
mov
pop
push
jne
mov
lahf
add
push
pop
dec
or
insb
sbb
and
sub
dec
pop
inc
inc
xlat
dec
jbe
push
lods
cld
out
and
outsb
stos
imul
lcall
lea
mov
mov
loop
mull
sub
xchg
push
pop
sub
ret
ljmp
jmp
ret
jecxz
ljmp
mov
js
arpl
inc
lcall
loope
dec
mov
xlat
jb
ss
cmp
jnp
jmp
rorb
pop
dec
sub
and
lahf
jb
and
mov
cli
cmp
imul
shrb
insb
mov
lcall
je
push
inc
push
add
shlb
cmp
incb
ret
push
and
pop
jecxz
out
test
mov
xchg
xchg
mov
xor
mov
cld
sahf
test
and
mov
cld
sbb
pop
js
pop
jl
bound
aad
out
mov
mov
sub
mov
xor
xor
stos
das
adcb
mov
dec
das
lds
mov
dec
ljmp
mov
push
jne
pop
pop
or
add
test
fs
jl
sub
dec
adc
ljmp
pop
adc
das
mov
or
pop
inc
fcoml
pushf
pop
cmp
pop
popa
inc
sub
push
mov
lcall
nop
sub
cmp
mov
popa
mov
shrl
mov
mov
insl
sbb
hlt
cmp
mov
adc
movsl
mov
das
scas
cltd
cltd
jecxz
out
les
jecxz
jl
push
inc
je
jno
push
jge
xchg
insb
into
push
jne
ret
stos
add
popa
pop
lock
mov
and
popf
sbb
or
lcall
lahf
dec
out
xchg
mov
cs
out
daa
sub
mov
iret
push
mov
lods
mov
popf
popf
pop
cmpsb
pop
lret
imul
jge
inc
mov
fstpt
scas
sub
jmp
xor
fsubrs
adc
std
jb
out
fsubrl
in
and
int
mov
jae
rorb
mov
jae
cld
dec
and
dec
daa
lcall
addb
ret
mov
mov
push
jno
inc
addr16
lods
jecxz
loopne
sbb
jp
xor
adc
xchg
testb
adc
cld
dec
fs
lea
fwait
push
lret
in
leave
mov
je
mov
pusha
aad
push
addr16
sbb
leave
add
imul
ds
dec
inc
inc
jge
aam
ja
rorl
push
mov
popf
push
std
mov
cwtl
pop
in
mov
rorb
add
addr16
dec
rorl
or
pop
inc
std
sbb
mov
sbb
aam
jg
fucomi
cs
jl
jecxz
aam
or
add
imul
fidivl
jo
cmpsb
xchg
sub
mov
mov
sub
adc
dec
xchg
jmp
cmpl
subb
lods
xor
push
js
loop
xor
mov
cwtl
mov
xor
je
cs
aas
pop
mov
push
in
push
ljmp
mov
lods
push
push
dec
pop
rorl
pop
stos
mov
fisubrs
and
xor
lods
sub
in
hlt
lods
xchg
inc
mov
ljmp
xor
rorl
lea
jge
shlb
addb
in
inc
insl
adc
inc
lret
inc
popf
cmp
dec
or
test
sub
mov
sbb
ss
jmp
shrl
jns
sbb
dec
or
scas
stc
repz
inc
xchg
movsl
stc
fiaddl
pop
push
mov
pop
ljmp
aas
push
rcrl
sub
adc
nop
cli
pop
xchg
pop
bound
dec
mov
dec
insb
push
aam
cmpl
int
xchg
xchg
mov
xchg
lds
shll
add
cmp
lea
mov
lahf
ljmp
and
sbb
pop
xor
insl
out
push
xor
decb
and
rcr
clc
mov
xchg
roll
sub
adc
pop
aaa
test
lret
vmovq
data16
int
movsl
jno
xchg
push
inc
xchg
stc
inc
mov
cmpsb
and
and
ja
sub
das
popfw
cmp
or
int
pop
outsl
fsubr
outsl
add
dec
js
pop
daa
lahf
imul
inc
push
roll
cmp
jp
in
addl
xor
aam
dec
inc
rorb
sbb
insl
mov
testl
shrb
mov
imul
popf
jae
sbb
push
jnp
push
add
repnz
aas
jl
xorl
sub
arpl
jecxz
jnp
movsl
cmp
mov
cmp
inc
fldcw
js
cmp
lcall
xchg
cmp
int3
mov
je
rolb
lods
pop
push
aas
lods
add
pop
fisttpl
and
aad
cs
cmp
jne
lret
inc
push
stos
add
jmp
js
lret
lcall
data16
pop
xor
das
lret
inc
lods
mov
std
dec
std
xchg
mov
ret
jp
mov
movsb
das
movsl
rcll
insl
adc
cmp
ficomps
pop
popa
fsubrl
mov
arpl
int3
push
jle
jae
pop
out
mov
sbb
and
repnz
sbb
cmp
add
lcall
inc
pop
xor
jg
jno
adc
enter
push
xchg
in
imul
inc
fimuls
test
pusha
jmp
jmp
ficomps
popl
aam
adc
xchg
stos
daa
nop
mov
arpl
dec
pop
sbb
pop
inc
js
adc
xchg
lahf
idiv
xor
mov
es
ljmp
loope
loope
pusha
icebp
push
sbb
fdivs
sub
mov
mov
mov
mov
ja
xlat
shlb
cmpsl
pop
in
andb
mov
cmpl
or
push
shrb
dec
mov
mov
sbb
or
jp
jns
mov
repz
cmc
std
inc
fstl
out
sub
mov
cwtl
push
movsb
inc
pop
xchg
push
jecxz
sbb
ret
add
lds
fsubrl
cmp
lcall
pushf
push
lret
fcmovne
mov
jb
or
subb
adc
rcrb
shlb
imul
test
push
ret
rcr
pop
arpl
fldenv
xchg
push
mov
call
inc
shlb
popl
repnz
cli
loopne
push
inc
sahf
jb
negl
decl
cmpb
add
outsl
cmp
add
xchg
sbb
xor
mov
sub
sbb
mov
cmpl
fwait
or
pop
daa
pop
pop
sbbl
adc
push
bound
ficoms
imul
cmpxchg
inc
jle
add
test
pop
movl
push
push
add
mov
outsb
or
aas
sub
dec
push
mov
adcb
insb
fwait
xchg
dec
imul
sub
mov
inc
sbb
incl
mov
xchg
sbb
testl
aam
xor
into
cmp
xchg
jecxz
dec
shll
rcrl
nopl
xchg
inc
lock
decb
fstpt
insl
ds
ret
fsubs
outsl
cmp
ja
jecxz
popa
add
ds
pop
aaa
inc
xchg
out
cmp
cmp
in
test
push
test
fstl
cwtl
lcall
sub
lods
imul
pop
out
test
outsb
outsb
scas
and
mov
jbe
imul
fidivrs
cli
adc
mov
gs
and
addr16
jno
or
xor
inc
mov
imul
lds
lret
test
sub
fdivrs
dec
jecxz
cmp
sub
xchg
in
loopew
iret
icebp
hlt
sbb
movsl
pop
add
push
pop
inc
or
out
shll
das
rolb
cmp
jle
fs
cmp
rorl
push
xor
adc
jno
lahf
repz
subb
cltd
shrb
cltd
cwtl
jno
in
jo
rcll
mov
jo
stos
cwtl
xor
xor
scas
call
pop
out
mov
movsb
pop
loope
mov
inc
pop
mov
sbb
mov
mov
lods
es
popa
mov
test
aam
dec
sbb
cmp
or
jae
stos
imulb
testb
inc
mov
mov
or
push
pop
fwait
mov
add
psubb
fdivrs
lea
cmp
lret
mov
lock
popa
repz
arpl
jg
les
jns
dec
pop
repnz
mov
js
popf
push
test
bndldx
jmp
xchg
xchg
or
fwait
push
mov
das
mov
and
lods
fstpl
in
movsb
in
pushf
scas
pusha
pop
and
and
movsb
push
loopne
leave
imul
mov
scas
icebp
ljmp
popa
sbb
xchg
int
paddd
sbb
rcr
repz
rcrl
xor
mov
js
adc
mov
jb
jmp
mov
and
arpl
and
test
sbb
cmpsl
cmp
fadd
jecxz
xchg
dec
call
cli
movsb
sahf
vfrczps
shrl
cmpsl
notb
loop
dec
mov
xor
mov
adc
adc
arpl
ds
jb
cmp
pop
js
cmp
mov
inc
xlat
push
add
stos
ds
xchg
cmpsb
sti
inc
and
mov
cmp
adc
mov
sbb
cwtl
mov
ud2
inc
mov
or
pop
xchg
sub
jmp
cltd
push
push
xchg
add
lods
call
jo
jb
jne
add
sbb
or
or
addb
fcompl
dec
push
inc
inc
add
cmpb
push
shll
jl
cld
push
add
add
call
outsb
mov
iret
arpl
dec
cmp
std
fidivrl
outsl
ja
sbb
mov
xchg
movsb
rcl
sbb
fistpll
push
xchg
add
fcomps
mov
out
aaa
mov
lods
sti
fcoms
jg
sahf
ds
pop
flds
adc
scas
arpl
ficoml
js
aam
in
sub
sbb
ret
xor
fists
mov
out
jg
mov
in
jmp
and
and
andl
mov
push
js
dec
jnp
mov
and
dec
sti
lret
xchg
outsl
lret
es
adc
lcall
ljmp
scas
jge
sarb
cwtl
sbb
in
mov
cmpsl
cmpsb
adcl
jne
adc
cmc
push
mov
movsl
mov
cmp
icebp
or
mov
movsl
shrl
xchg
mov
and
call
inc
ljmpw
in
ljmp
adc
les
popl
sbb
push
add
pop
mov
and
xchg
pop
push
lods
lahf
jbe
rorb
and
jne
add
fistps
mov
sub
sbb
repnz
and
inc
int3
jmp
in
ret
and
adc
adc
roll
dec
mov
imul
jg
sarb
loop
mov
outsl
or
scas
es
test
xor
enter
cmp
mov
push
push
int3
std
mov
dec
subb
push
pop
jmp
mov
scas
sbb
sub
jne
mov
mov
or
sub
rcrl
xor
pop
add
les
orl
adc
sub
cmpsb
and
push
jecxz
mov
insl
push
sbb
les
lcall
xchg
shrb
push
and
mov
push
adc
sbb
imul
fiaddl
fiaddl
push
xchg
shl
cli
insl
cmpsb
xchg
sbb
jmp
xchg
sbb
pop
jmp
hlt
mov
mov
testl
xchg
dec
mov
mov
ret
xchg
inc
sub
movsb
in
dec
push
sub
cltd
sbb
cwtl
push
jg
cmp
ljmp
pusha
scas
decb
mov
sbb
mov
cmp
fcoms
outsl
enter
xchg
movsl
push
xchg
das
aad
add
sbb
aam
adc
mov
xor
cld
xor
add
imulb
pushf
inc
repnz
test
aas
push
jb
inc
cmp
mov
int
movb
jp
pop
test
lock
jl
cmc
aam
xchg
xor
or
lret
mov
pop
cmp
push
inc
adc
mov
roll
ret
in
lret
pop
hlt
ret
add
out
in
pop
xlat
lods
fwait
mov
orb
pop
add
push
imul
pop
pop
sar
jo
mov
movb
lods
cmc
scas
dec
jne,pt
aas
aam
fbld
or
mov
sub
dec
dec
add
nop
xor
daa
fs
xchg
imul
fsubs
dec
in
aad
jp
scas
arpl
mov
pop
jle
cmp
int3
not
and
sbb
and
test
mov
call
daa
xchg
jbe
xchg
mov
ljmp
test
jae
sbb
adc
push
mov
sbb
in
imul
lds
shll
push
mov
push
stc
or
pop
in
loope
push
lods
fucomp
int3
mov
or
cltd
stc
nop
bnd
mov
in
jecxz
negb
lcall
push
incb
fsubs
daa
out
dec
call
xor
xchg
sbb
jb
scas
sub
or
or
adc
stos
jecxz
sbbb
adc
cmp
test
imul
leave
and
xchg
mov
jnp
jecxz
aaa
mov
aad
push
mov
pop
pop
addl
loope
and
mov
xchg
xchg
scas
in
xor
xchg
popa
movsb
lea
jno
inc
and
and
mov
frstor
sub
cmpsl
cmp
cmc
dec
mov
mov
sbb
insl
movsl
mov
jmp
loop
pop
int3
xor
mov
shll
dec
cmpb
addr16
arpl
xchg
lock
xor
ror
or
imull
inc
lods
dec
lcall
mov
in
scas
inc
xor
jmp
mov
sahf
jp
mov
pop
gs
push
out
or
aaa
decb
aam
xor
sti
adc
jo
nop
jle
xor
lds
in
push
loop,pt
push
xor
xchg
mov
adc
repz
mov
and
arpl
vcmpps
pop
ja
scas
or
mov
das
outsl
jns
stos
sub
sub
pushf
shll
mov
fistpll
jmp
and
call
pop
cmp
dec
orb
nop
sub
int
rorb
adc
dec
addb
inc
mov
cmp
lcall
or
stos
jmp
cmpsb
aas
jl
fstpt
dec
cmc
int3
aas
dec
mov
loopne
out
enter
inc
xchg
inc
xor
testb
mov
call
xor
mov
imulb
add
rclb
in
sbb
cmp
movsl
mov
push
xor
jne
icebp
jl
push
in
leave
fisubrl
or
push
add
stos
into
mov
leave
push
dec
mov
test
sub
mov
loope
mov
shll
cmp
mov
cmp
stos
mov
sahf
sbb
dec
stos
enter
je
scas
add
jge
faddp
fbstp
out
es
xor
test
stc
icebp
into
sbb
mov
or
push
cmp
std
pop
loop
stc
test
cmp
ss
and
movsl
in
cmpsb
in
pop
push
adc
and
and
loopnew,pt
xchg
push
mov
lods
add
ret
push
add
loopne
ret
cmp
push
push
testb
mov
push
rcrl
xor
xchg
jbe
cmp
pushf
lret
sub
adcb
push
mov
mov
mov
setb
aad
cli
cmc
push
and
lods
dec
adc
ficomps
sub
sub
aas
adc
clc
add
pop
arpl
lods
pop
movsl
add
loop
ljmp
pop
je
sub
imul
not
aaa
fsubrl
xor
adc
dec
jb
gs
rcrl
push
dec
fistpll
ret
dec
pushf
popf
pop
xlat
push
nop
jno
mov
mov
pop
sbb
shl
scas
inc
les
testb
jb
imul
mov
jg
push
push
sub
push
or
inc
out
mov
les
jp
adc
test
in
outsb
jne
orl
imul
stos
pop
mov
add
sbb
lret
insb
imull
dec
jmp
call
fs
mov
sbb
hlt
sbb
dec
lods
xchg
stos
rcll
sub
pop
es
shll
pop
dec
imul
jmp
push
cwtl
loop
cmp
pop
sub
sub
hlt
push
sbb
test
call
push
mov
pop
xor
call
ljmp
sub
sbb
inc
shr
adc
outsl
xchg
dec
mov
ret
mov
or
loopne
mov
out
idivl
test
movl
test
xchg
jle
dec
sub
mov
sbb
sbb
fisubs
pop
imul
nop
mov
arpl
jg
imul
jns
inc
outsb
int
call
out
fstpl
outsl
mov
jnp
jbe
lahf
arpl
cltd
sub
jo
inc
dec
or
sbb
mov
pop
pop
in
sub
jbe
sbb
loope
jg
xor
fisubl
fidivrs
aam
add
lret
fstpl
sub
jg
push
mov
adc
push
cwtl
cmc
dec
sbb
aam
rorb
in
lahf
imul
fs
dec
lds
push
pop
mov
xor
cmp
and
cli
adc
jb
rorl
jmp
sub
insb
adc
xor
dec
add
ffreep
dec
sub
fists
ret
dec
mov
sbb
daa
fbld
inc
imul
add
andb
shlb
lret
push
out
popf
neg
xor
imul
add
imull
bound
pop
je
xor
repnz
in
xchg
mov
xorl
lods
push
das
idiv
pop
and
inc
push
jo
and
sbb
out
xlat
sub
mov
addr16
jno
lock
push
ret
arpl
jle
mov
push
jb
addr16
mov
aas
fistps
add
fs
adc
out
xrelease
jno
xchg
arpl
rcrl
rorl
inc
adc
iret
das
push
loop
jle
dec
fwait
ret
fwait
in
xor
scas
outsb
mov
aam
stos
gs
std
add
lret
fisubrl
into
pop
inc
bound
mov
sysexit
push
mov
jg
les
mov
mov
loop
cmp
add
in
add
or
hlt
mov
in
dec
xor
stos
je
xchg
adc
jecxz
femms
insl
mov
lea
pop
mov
xor
or
testl
movsb
in
aam
cmp
add
popa
lret
mulb
or
jae
adc
push
push
push
inc
push
into
scas
inc
mov
je
xchg
and
xchg
inc
xchg
cmpb
inc
sbb
fcom
icebp
xchg
pop
frstor
or
and
sub
jno
popl
inc
adc
cli
add
fidivl
push
adc
xchg
leave
out
rcll
test
imull
and
sbbb
lcall
and
mov
push
loop
inc
sbb
cwtl
push
std
outsl
push
and
and
cld
mov
mov
dec
lock
movsb
std
ds
mov
inc
rorl
imul
call
adc
jmp
cmc
cmc
lret
lds
icebp
out
les
mov
xor
xchg
je
xchg
lret
enter
inc
sahf
mov
repz
out
and
and
cs
sbb
xor
xor
pop
insb
dec
or
les
fsubs
in
pop
push
pop
sub
inc
sbb
sub
sti
inc
jp
cmp
xchg
enter
cltd
out
jno
stos
cmp
cwtl
mov
jns
xor
and
mov
pop
pop
adc
jmp
push
pop
aad
add
iret
xor
mov
mov
push
jbe
shr
add
jl
stc
fnstenv
push
ret
push
outsb
sbb
mov
fxch
orb
pop
in
mov
ret
push
imul
ret
mov
mov
xor
cmc
sarl
enter
ljmp
xchg
cld
icebp
outsl
adc
clc
insb
enter
xlat
jno
mov
lods
jle
fdivs
mov
popa
sub
pmovmskb
xchg
cmpsb
nop
insb
push
sub
leave
jne
in
mov
adc
in
repnz
test
outsb
out
lcall
push
aad
gs
or
xor
sarb
lret
mov
cld
xchg
stos
testl
loopne
dec
jmp
ret
cmp
inc
fists
f2xm1
and
dec
cmpsb
out
sub
sbb
dec
cmpsl
inc
jbe
iret
pop
shlb
je
jae
leave
mov
ja
push
repnz
lcall
cmp
add
leave
mov
and
push
mov
rcll
dec
ret
mov
movsl
das
leave
test
test
andl
jo
fdivs
stc
sbb
or
scas
cli
stc
enter
adcl
call
lea
inc
ja
xor
mov
fidivs
jg
push
test
shlb
fisttps
sbb
icebp
pop
adc
lock
inc
xor
xor
sub
cmc
cmp
int
inc
xchg
arpl
fists
int
loop
push
or
loope
scas
push
lret
cld
pop
jns
cs
mov
insl
inc
out
scas
data16
nop
aas
sbb
xchg
mov
addb
cmp
pop
out
mov
mov
or
aam
enter
out
in
fs
mov
xchg
insw
dec
movsl
out
jge
je
ja
mov
push
and
cmp
and
sub
or
inc
insb
xor
stos
fnsave
sub
movsl
test
jnp
cwtl
aam
pop
pusha
aad
mov
or
xlat
push
and
pop
and
mov
pop
cld
mov
outsl
or
xchg
insl
fisubs
test
out
iret
enter
add
ja
sub
sti
fwait
cmp
xlat
test
sub
scas
bnd
xor
fsub
lea
fiadds
icebp
xchg
das
fs
into
push
aad
pop
cmp
into
fwait
push
mov
xchg
xor
outsb
push
sbb
jle
inc
xlat
lahf
push
lret
in
ljmp
pushf
mov
jb
pop
aas
mov
pop
pop
inc
data16
adc
inc
or
xchg
inc
pop
inc
lret
les
mov
cltd
or
cmpsl
ds
data16
ss
sar
mov
movsb
fsubr
ljmp
mov
scas
xor
cld
cmp
cld
jecxz
enter
jge
imul
divl
jp
inc
repz
into
sarl
sub
lret
mov
mov
dec
sub
call
sub
fnsave
loop
lcall
jg
dec
cltd
mov
movsb
outsl
push
jb
aaa
cwtl
mov
inc
rolb
adc
fs
adc
mov
jle
cwtl
sbb
cli
insl
or
sub
jmp
adc
fnstsw
iret
jb
sub
test
mov
cmp
or
or
rclb
mov
out
adc
insb
je
repnz
lea
push
insb
ret
push
aas
filds
ja
leave
jae
pop
mov
add
cli
hlt
sub
insb
xchg
jnp
popf
push
xor
adc
dec
add
mov
test
inc
cmpsl
aad
sbb
and
scas
dec
out
adc
mov
lods
mov
jecxz
cmp
divb
outsl
push
sub
mov
outsb
iret
xchg
cmp
mov
add
test
push
cmpsb
out
cmpsb
lcall
rorb
push
movsb
lahf
lret
cmp
mov
inc
dec
orb
dec
ffree
xchg
nop
stos
imull
leave
mov
xor
jp
xchg
leave
test
xrelease
in
xor
cwtl
aas
pop
xor
xchg
cwtl
dec
rol
in
stos
sbb
xchg
ja
mov
loope,pt
jne
jbe
xlat
cmp
or
sub
cltd
push
test
cld
dec
pop
enter
cmp
enter
fadds
inc
push
stos
insb
dec
cmpsb
syscall
mov
std
fs
jne
repz
push
popa
loopne
pop
dec
insb
or
ds
mov
push
add
jae
ret
mov
pop
mov
sbb
pusha
hlt
cmc
pop
shl
cmp
jge
and
mov
pushf
and
sub
and
and
fincstp
mov
shlb
outsb
mov
popf
subl
aaa
in
js
cltd
nop
imul
divb
lret
jmp
pop
pop
mov
pushf
aad
cwtl
and
push
in
incl
cmp
test
jl
cli
pop
xchg
aas
sub
mov
jl
int3
outsb
cmp
lock
fldl
scas
aaa
xchg
cmp
xchg
aaa
jl
dec
xor
je
enter
std
push
or
ret
shrb
subb
je
lret
popa
or
into
rorb
xor
add
add
test
push
es
fdivrl
scas
xchg
fs
fsubrp
ret
xchg
jbe
jle
fadds
movsl
dec
ds
ljmp
ljmp
pop
fdivl
push
roll
jmp
imul
mov
outsl
int3
cmp
adcb
popa
dec
imulb
pop
xchg
inc
fisubl
sbb
subl
sub
fnsave
leave
ret
sub
movsl
imul
adc
pop
aam
or
xchg
jb
popa
mov
mov
fidivrs
gs
push
cmpsb
mov
sbb
ret
daa
roll
xchg
fwait
push
pop
imulb
sar
scas
mov
lods
in
in
adc
rcr
or
scas
or
pop
mov
inc
popf
mov
in
xchg
xlat
dec
push
sbb
pop
adc
arpl
rcrl
je
adc
test
jo
inc
dec
sahf
inc
divb
mov
cmpsb
push
imul
xchg
lret
dec
frstor
hlt
add
jnp
mov
je
xchg
mov
mov
push
arpl
in
push
rol
cs
cmpsl
insl
aam
fsts
cmp
xor
popfw
mov
dec
cmp
cmp
xor
stos
cmp
into
push
ljmp
or
insb
adc
mov
adc
pop
test
and
into
in
mov
repnz
or
inc
push
xchg
xchg
int3
inc
xor
cld
mov
add
lret
cwtl
cmpsb
push
dec
or
mov
sbbb
mov
adc
xchg
mov
aaa
mov
notl
mov
fimuls
and
mov
push
add
mov
push
or
push
scas
pushf
xchg
xchg
add
scas
pop
push
ss
sbb
pop
shlb
jmp
inc
pop
mov
push
mov
sub
xlat
push
xchg
aas
mov
loopne
es
inc
pop
push
sub
inc
push
sti
cmp
or
add
xchg
mov
xlat
cs
mov
lea
lea
lods
movsl
pop
add
dec
in
jnp
push
push
jmp
inc
adc
and
adc
stc
push
or
inc
loopne
int
mov
pop
add
fstpl
jnp
mov
xchg
and
aam
imul
inc
add
sbb
ja,pn
es
stos
into
faddp
outsl
pop
aas
pushf
les
icebp
or
fildll
cmp
cmp
push
iret
inc
jp
iret
mov
mov
inc
outsl
mov
loopne
jae
push
mov
arpl
sarb
lret
mov
scas
aas
shr
shlb
mov
aas
bound
pop
mov
sbb
adc
pop
jl
push
rcl
sub
cs
or
inc
out
insb
and
shl
mov
inc
dec
or
fnstenv
fildl
and
jnp
lret
sarl
pop
icebp
inc
mov
xor
js
or
pop
rorl
or
das
mov
in
ss
dec
add
inc
pushf
pop
inc
fsubl
jne
mov
ljmp
je
out
inc
cltd
mul
movsl
push
addr16
mov
mov
das
adcl
cld
clc
clc
sbb
sahf
rcl
xchg
rcrb
data16
inc
test
rorl
clc
in
fnstsw
idiv
cld
negb
sub
mov
movsb
insb
out
in
cmp
and
dec
cltd
subb
cld
and
dec
xchg
ja
inc
lret
cltd
add
sbb
sbb
hlt
cwtl
xor
xor
add
cwtl
pop
dec
outsl
ljmp
dec
jnp
cmc
add
mov
sub
test
jns
std
xlat
mov
pop
mov
lret
imul
inc
into
jno
aad
dec
pop
addr16
xor
ja
adc
sbb
nop
cld
jae
mov
pop
lods
inc
je
adc
cmp
cld
fmul
add
ja
aad
mov
sub
sarl
inc
adc
mov
in
icebp
addr16
xor
pop
pop
popa
std
test
loope
mov
or
loopne
cmp
fcoml
dec
adc
and
test
mov
loop
xlat
mull
sbb
push
mov
adc
popf
inc
inc
repz
xchg
lods
int
mov
jo
sbb
aam
in
sbb
fldenv
loop
repnz
das
or
test
imul
popf
and
add
lcall
sti
movsb
xchg
mov
inc
movsb
std
cs
scas
in
jbe
daa
cmp
xor
enter
out
push
adc
jae
cmp
cmpsb
repz
or
mov
and
mov
lret
fbstp
into
push
sbb
mov
mov
jle
sbb
ljmp
fwait
push
mov
push
push
mov
jge
repz
xchg
data16
and
add
rcll
cmp
dec
jns
js
testl
rolb
or
popf
cmpsb
lret
push
jns
pop
sbb
nop
cmp
out
pop
addl
dec
inc
stos
out
xchg
dec
insb
lret
jo
inc
es
mov
mull
cmc
pop
jmp
les
pop
insb
repnz
scas
ret
cmc
inc
add
cwtl
fdivs
and
dec
iret
lods
sub
test
rolb
out
push
xor
xor
mov
lahf
and
scas
xchg
insl
ja
pusha
add
cmpsb
data16
lds
hlt
cmp
xor
lods
push
inc
out
imul
das
adc
out
inc
mov
and
sub
push
lret
lock
outsb
push
and
test
std
data16
test
enter
mov
call
das
fisubl
push
iret
scas
loop
lea
aaa
or
mov
cmp
add
xor
bound
mov
out
add
test
pop
dec
jne
mov
fistps
jle
out
dec
jmp
or
push
push
sbb
std
ljmp
shrb
in
mov
shlb
xchg
orl
pop
xor
lods
inc
sbb
or
pop
add
mov
into
jp
fisttpll
test
out
subb
mov
lds
jbe
mov
cmp
dec
ss
and
mov
mov
sbb
popf
repz
add
jp
xchg
enter
daa
pop
unpckhps
stos
jle
in
mov
in
out
jne
test
in
dec
mov
lret
push
int
and
adc
jnp
stos
push
mov
inc
jl
addr16
scas
push
je
xlat
dec
imul
push
dec
adc
push
bound
or
sub
out
sub
shr
xchg
in
icebp
mov
cmp
inc
or
test
adc
and
enter
mov
pop
push
aad
in
rcll
push
cmpsl
in
xchg
ficoml
dec
xchg
or
rcrb
and
mov
xor
dec
push
cmp
and
inc
fsts
outsl
inc
push
ret
in
aaa
xchg
inc
rclb
loop
push
mov
shlb
fnstenv
sbb
test
sub
xor
fisttpll
inc
dec
sahf
nop
push
xor
xchg
mov
not
sbb
lock
mov
push
loope
inc
mov
cwtl
sub
out
iret
pop
nop
mov
push
cltd
mov
xor
stos
shll
and
jb
xchg
daa
and
pop
scas
push
mov
mov
inc
je
shrb
scas
sub
xchg
jae
xor
insb
jnp
adc
inc
sti
ja
push
jne
pxor
push
push
orl
rcll
sub
scas
nop
xor
mov
out
pushf
push
sbb
sub
lock
jb
add
enter
pop
stos
pop
fs
cmpsb
outsb
add
enter
pop
sarb
movsb
movsb
loop
pop
and
sbb
xchg
sub
pop
insl
pop
mov
pop
xor
loop
cmp
nop
fld
ret
push
xor
rcrb
cmp
xor
outsb
std
addl
mov
idivb
jecxz
lock
jno
mov
enter
dec
mov
sub
xchg
or
dec
jmp
xor
dec
mov
xor
cmpsl
int
fsubrs
decb
pusha
repz
ljmp
xor
stos
out
pop
xchg
cmpsb
rclb
loop
pop
sbb
imul
popl
mov
jmp
into
loopne
push
push
inc
add
cs
enter
out
sub
inc
popf
jg
dec
mov
jl
pop
into
or
sti
addr16
dec
add
js
xchg
data16
repz
pop
outsl
and
rcll
mov
insb
outsl
popf
orb
and
mov
fldenv
add
xor
pop
bsr
mov
mov
in
in
aad
pop
aad
outsl
bound
addr16
xor
jmp
movsb
dec
mov
mov
cs
lds
and
pop
fisubrs
push
jmp
fsubl
imul
ss
dec
dec
and
popa
in
iret
add
insb
daa
out
hlt
je
and
fsubrs
loope
fcmovu
xor
into
mov
rcrl
stc
push
int
clc
mov
je
xchg
repz
repz
data16
adc
daa
inc
test
cmc
stos
pop
sub
dec
icebp
adcl
inc
pop
lds
pop
mov
ljmp
push
pop
aam
sbb
loop
and
sahf
pop
cmp
cwtl
lcall
mov
push
js
pop
sbb
dec
sub
and
push
shr
adc
in
idivb
icebp
dec
ret
push
dec
mov
sub
popa
orl
adc
test
mov
std
dec
xlat
inc
jg
cmp
mov
loop
in
rol
fldenv
mov
sub
popa
outsb
cmp
adc
stos
cwtl
in
data16
outsb
fildl
mov
push
cmc
and
xor
jecxz
lret
scas
ja
push
faddl
mov
sbb
pop
push
cmp
cmp
push
aaa
in
push
bound
mov
mov
jbe
xchg
in
insl
push
cmp
fimuls
mov
rorl
inc
nop
or
push
push
pop
ja
lods
mov
repz
pop
clc
ret
xorl
or
fimull
les
movsb
test
dec
lds
or
push
cmc
mov
jno
ret
and
pop
leave
shl
stc
mov
cs
push
rcrl
mov
mov
rorl
dec
bswap
xor
pop
push
negb
or
mov
not
inc
sub
mov
sbb
out
ja
sub
cmp
cmp
push
mov
fstpt
mov
pop
out
and
push
push
pop
xchg
sub
or
xchg
jo
imul
mov
movsl
out
add
rcrl
std
ljmp
mov
mov
int
adc
push
xor
sahf
lods
cmp
cmp
push
cli
fwait
add
loop
xor
ljmp
stc
cld
mov
mov
cmp
sub
pop
or
and
mov
jg
movsb
imul
push
pop
in
ja
lea
add
idivb
sub
jns
xchg
xchg
cmpsb
jmp
xchg
repnz
fldcw
ja
inc
push
adcb
mov
pop
add
out
das
mov
movsl
pop
daa
jp
fildl
push
inc
push
pop
popf
or
xchg
pop
arpl
cltd
arpl
stc
daa
sbb
xor
adc
arpl
mov
inc
leave
mov
enter
std
insl
imul
icebp
pop
cmpsl
or
pop
xchg
xchg
dec
xor
cmpsl
jnp
jle
mov
aas
insl
xchg
cwtl
add
test
inc
or
dec
fsubrp
and
dec
jmp
data16
dec
int
jno
mov
xor
push
push
xchg
inc
and
rcrb
pop
sub
sbb
outsl
jbe
loop
insl
dec
jp
hlt
pop
repz
dec
mov
out
push
popa
addr16
int
in
shrl
into
fildl
pop
test
dec
adcl
mov
jno
inc
and
ds
cmp
jp
mov
or
or
jp
mov
push
pusha
mov
xchg
inc
aad
stos
add
mull
jmp
or
shl
mov
test
mov
shll
push
mov
inc
data16
shrl
into
xchg
lods
mov
stc
sbbb
add
popa
scas
mov
dec
jp
pop
insl
loope
or
xchg
js
gs
add
scas
inc
outsl
test
pop
rolb
xor
stc
sub
cmp
andb
outsb
push
or
push
mov
jb
out
fldenv
imul
cwtl
movsl
pop
mov
cmpsl
jnp
popa
in
mov
fdivl
sub
mov
outsb
sbb
dec
data16
mov
sbb
popf
cmp
aas
je
sub
in
jge
cmpsl
push
scas
clc
negl
pop
int3
lahf
lret
jno
scas
push
adc
aas
ss
fisubs
int
mov
jl
cld
pop
lds
lcall
or
std
test
out
mov
andl
mov
jmp
xor
mov
shlb
aam
out
jmp
push
mov
popf
fs
inc
cmp
into
sub
int
dec
mov
inc
in
imul
pop
stos
shlb
sti
mov
sahf
mov
push
push
pop
aad
xchg
in
mov
loopne
cmpsl
and
cmp
push
rcr
inc
xor
push
xor
push
pushf
inc
and
fs
mov
mov
ret
inc
or
sahf
leave
xchg
push
and
rcr
and
pop
nop
pop
hlt
sbb
sbb
cmp
pop
mov
daa
dec
push
or
aaa
sub
sbb
dec
add
out
dec
int
add
xchg
xchg
jl
mov
out
add
pop
mov
cmp
dec
ds
push
mov
in
or
xchg
mull
insl
ljmp
jmp
ss
xor
into
cmp
add
out
outsl
mov
iret
jae
imul
xchg
mov
cmp
pop
js
popf
jmp
andb
aad
test
add
jno
insl
lret
dec
mov
lret
cmp
stos
or
push
jnp
dec
call
mov
dec
aaa
les
fs
nop
out
scas
test
jle
arpl
or
adc
ljmp
dec
add
push
pop
rorl
mov
pop
dec
mov
and
adc
jo
in
fisubrs
push
pop
das
outsl
jmp
push
push
sub
sbb
and
shl
pop
cmp
xlat
out
insl
movsb
pop
ja
outsl
mov
or
lahf
movsl
decb
faddl
cmp
aad
out
mov
cmp
and
fs
repnz
mov
adcb
test
adcl
stos
and
xchg
scas
add
cmp
out
imull
int
mov
inc
push
in
inc
in
mov
push
stc
sahf
das
mov
ds
inc
fdivrs
repnz
add
fs
push
daa
xor
pop
cltd
xchg
mov
insb
in
es
cmpsb
mov
xchg
pop
div
and
fisttps
inc
ja
test
nop
add
jle
out
es
je
xorl
idivl
pushf
mov
and
and
out
movsb
push
inc
push
pop
xor
mov
push
aas
es
ret
sbb
dec
fisttps
outsl
mov
adc
xor
pushw
add
inc
cmpsl
xor
addr16
inc
loope
push
cmpsl
mov
call
push
lahf
push
inc
les
icebp
fisubrs
mov
cmp
xchg
and
adc
sub
insl
sarl
test
jb
divb
arpl
dec
cmpsl
push
sbb
rcrb
mov
xlat
cmp
jl
push
adc
mov
dec
push
scas
gs
mov
nop
stc
daa
inc
cmp
cmpsb
mov
lret
sub
sub
cmp
pop
repz
icebp
fs
lcall
fdivs
xchg
inc
movsb
jg
mov
inc
cmpb
mov
icebp
ss
push
xchg
loopne
inc
pop
shl
outsb
inc
fidivl
xor
test
push
pop
and
and
sub
sbbl
cltd
cbtw
xchg
jecxz
mov
or
inc
push
lcall
adc
xlat
jns
call
out
mov
xchg
add
jb
int
popf
inc
int
pop
sub
push
fs
leave
ja
fsubr
mov
push
aaa
jns
ss
and
inc
gs
movsb
setnp
js
adc
pusha
cs
xchg
adc
imul
aam
test
mov
push
or
clc
jl
or
add
sbb
push
lahf
out
cmp
sbb
call
lds
fs
jle
lahf
mov
in
mov
jae
stos
cltd
test
fcmovnu
jo
insb
inc
sahf
outsl
sub
in
pop
ds
std
sub
pop
nop
imul
xchg
cmp
adc
adc
and
and
frndint
fcomps
fwait
or
fdivs
int3
or
mov
add
stos
and
int3
sbb
jno
ja
cmpl
adc
hlt
xor
adc
jb
add
sub
in
xor
jno
mov
test
popa
dec
fimuls
cmp
mov
jge
push
outsl
adc
pop
test
mov
dec
dec
stos
jg
cmpsl
jnp
and
into
mov
dec
sbb
mov
in
je
jns
add
neg
stc
orb
ja
mov
test
fadds
fnsave
cmpb
and
cmpsb
pop
and
inc
cmp
setne
or
mov
data16
fsubp
push
xchg
orb
add
fwait
pop
adc
xchg
test
shll
sahf
push
or
xchg
addb
jo
in
fsubrs
jnp
mov
mov
rcll
cmp
jbe
int3
and
push
cwtl
mov
cwtl
mov
bound
pop
shlb
mov
cmpsb
dec
add
add
inc
pusha
adc
lret
cmp
sub
sub
inc
xchg
mov
jne
inc
jl
scas
cltd
test
imul
inc
clc
pop
or
mov
cmp
out
mov
push
pop
pop
inc
jae
movsb
inc
in
xchg
sub
rolb
pop
repz
mov
xchg
loope
push
mov
lret
push
adc
dec
jp
push
imul
pop
outsl
jnp
hlt
inc
sub
out
into
inc
ljmpw
mov
xor
xchg
out
out
imul
addr16
dec
or
std
pop
dec
add
icebp
cmc
mov
push
pushf
xor
shr
or
mov
clc
pushf
mov
and
jge
lret
jge
push
ficoms
inc
lret
in
mov
jp
mov
into
loop
jl
out
mov
mov
hlt
clc
loope
pop
icebp
xchg
push
xchg
cmp
nop
jp
push
sbb
movsb
inc
jge
jne
sahf
push
int
jo
int3
xchg
mov
pop
xchg
rclb
sub
add
xchg
or
int
adc
rcl
in
add
mov
cld
xchg
lret
es
inc
iret
jb
sbb
rdmsr
xor
arpl
sbb
sub
sub
fwait
or
je
mov
xchg
lods
insb
iret
cli
jnp
cmp
gs
lock
gs
jp
leave
xchg
xor
mov
mov
loop
and
cmp
push
stc
sbb
cmpsl
call
cld
sub
sub
add
sbb
lds
scas
pop
push
les
int
xchg
lret
movsl
fstps
xor
sub
push
mov
cs
inc
std
pop
cmp
pop
fidivs
mov
inc
scas
inc
push
negl
js
jmp
mov
or
mov
aas
ret
mov
cld
adc
push
add
pop
cmp
jae
or
mov
sbbb
shr
mov
adc
dec
cld
dec
scas
cmp
sbb
cmp
stc
outsb
sbb
roll
xchg
das
test
insb
adc
add
div
int
jb
lea
out
mov
and
orb
imul
push
xor
stc
mov
imul
clc
repz
stos
jae
jo
das
add
lahf
push
mov
jns
jns
adc
push
data16
les
cmp
lea
cmc
mov
push
dec
loop
add
lcall
and
negl
xchg
mov
mov
adc
fwait
pop
push
out
xor
adc
mov
test
fisubs
inc
int3
sbb
mov
xchg
add
pop
popl
int3
jbe
fldt
fnstcw
js
lea
dec
lea
add
std
jl
jno
jb
pop
xor
das
addr16
inc
aam
add
shl
add
add
mov
or
inc
addr16
push
jno
jp
pop
out
popa
xor
roll
repnz
lea
mov
inc
or
jg
divl
inc
push
pop
pop
shlb
dec
in
fisttps
jle
adc
cmp
sub
jbe
clc
fmul
push
les
xchg
inc
push
mov
iret
pop
test
arpl
push
imull
test
jl
inc
xor
push
test
xchg
loope
inc
call
inc
dec
loop
mov
call
sbb
ret
cmc
fwait
pop
fsubrl
xchg
pop
xchg
inc
gs
jns
jb
xchg
fsubr
mov
pop
jl
dec
divl
aas
jo
cld
scas
sub
ror
dec
xor
out
dec
mov
inc
sub
inc
mov
repnz
test
and
loopne
xor
aas
cmc
cli
cld
push
into
add
sub
mov
and
or
roll
lock
jl
jnp
stc
jecxz
jns
xlat
cmp
out
push
lahf
jmp
push
mov
push
aam
push
pop
mov
sbb
add
aam
stos
cmp
mov
xchg
mov
xchg
test
lahf
pushf
js
pop
outsl
adc
or
and
enter
pushf
insb
add
mov
inc
in
ret
push
xchg
in
jmp
mov
sub
in
push
jl
outsl
jl
jmp
and
test
inc
pop
inc
xor
pop
bound
dec
out
sbb
sti
xor
fimull
sbb
loope
into
rorl
dec
test
adcl
sub
ret
ss
cmc
hlt
int
fidivrs
das
gs
jns
dec
outsb
nop
inc
incb
insl
push
test
shr
data16
leave
jmp
push
loopne
movsb
cmp
mov
mov
ljmp
mov
sub
les
xchg
push
loopne
imul
sub
add
cmpsb
xchg
push
push
mov
movsb
push
pop
mov
xor
int
sbb
inc
or
adc
repnz
lods
pop
mov
inc
jmp
pop
out
inc
aam
add
iret
popf
sahf
jp
mov
sbbl
mov
sbb
pop
stos
popf
aaa
fadds
dec
push
lods
xchg
aaa
sbb
sub
push
and
mov
sbb
sbb
mov
xchg
jae
pop
add
adc
imull
fidivrl
push
lret
pop
mov
push
rcrl
add
mov
jg
or
scas
lret
cs
mov
xchg
push
sbb
or
cmp
pop
ljmp
sbb
and
dec
out
pop
cwtl
mov
pop
xchg
enter
dec
or
stos
das
es
pop
ja
gs
hlt
pusha
into
dec
push
push
jl
sub
cs
ret
xchg
ret
pop
adc
xchg
cmp
xchg
jne
mov
sub
sahf
cmpsb
inc
call
rcr
stc
shl
or
xchg
mov
jmp
sub
popa
lret
xchg
dec
push
mov
movsl
inc
push
outsl
imul
and
loope
lods
xchg
jecxz
rol
dec
fs
dec
push
pusha
jo
arpl
or
dec
stos
out
test
adc
pop
js
ljmp
hlt
add
int
repz
in
adc
jmp
in
call
jmp
jmp
pushw
jp
add
mov
xchg
fstpl
pushf
rclb
sbb
cmp
mov
pop
je
jne
das
stos
ret
dec
popa
sbb
popf
rcl
fstpl
cmp
cmc
mov
cmp
addr16
cltd
out
add
icebp
jnp
adc
js
int3
cmp
inc
add
dec
mov
or
mov
xchg
scas
ds
xchg
mov
lahf
sbb
addb
rcr
sahf
push
or
inc
push
mov
pop
xor
test
inc
mov
lret
aaa
pop
sbb
jl
sub
daa
adc
insl
iret
fcmovb
loopne
mov
mov
repz
jp
scas
leave
pop
cmp
adcb
sti
into
mov
push
adcl
mov
mov
jmp
std
mov
in
add
add
and
dec
jmp
dec
loop
ss
daa
xchg
pushf
sbbb
adc
ds
sarb
mov
mov
or
outsb
jnp
mov
mov
cmp
fs
inc
dec
mov
xor
cs
dec
in
mov
lret
xlat
rcll
sbb
ret
sub
adc
cwtl
movsl
rcrl
sbb
ret
mov
pop
hlt
outsl
inc
inc
push
xchg
popa
add
jge
ficoml
xchg
fidivl
jecxz
jo
les
jecxz
cwtl
lock
into
mov
ljmp
lods
cmp
pushf
xchg
sbb
fnstenv
push
dec
pop
jg
jg
fs
ret
push
jae
push
int
bound
pop
jne
and
stos
add
std
xchg
aam
inc
add
mov
dec
inc
ja
ljmp
lds
stos
push
lock
scas
sub
mov
or
inc
lret
mov
jle
data16
lahf
orl
jnp
jb
movsb
pop
shrb
mov
xor
enter
or
inc
scas
xor
stc
adc
mov
fnsave
ss
int3
das
dec
inc
and
lock
xor
push
imul
cmp
pushf
and
sarb
into
mov
or
ja
jle
and
sbbb
add
ja
ds
lock
mov
das
inc
mov
or
push
jg
inc
adc
mov
push
bnd
clc
jle
dec
sub
int3
mov
rolb
test
cmp
xchg
inc
loope
mov
pop
sbb
lea
leave
in
aad
mov
xchg
sub
mov
repz
fistpl
pop
xor
xor
subl
push
leave
stos
orb
pop
rorb
data16
das
adc
jmp
je
in
dec
dec
adc
or
pop
mov
data16
mov
repnz
pop
imull
pop
sub
mov
fcompl
mov
out
cmpsb
insl
stc
and
xchg
test
dec
andl
cmp
dec
rcl
jns
inc
push
test
shrl
inc
jbe
stos
stc
sbb
es
rorl
push
arpl
mov
icebp
mov
add
addb
or
add
cmp
dec
lods
lcall
inc
xchg
hlt
cmpsb
pop
fadd
scas
dec
je
ficoml
cli
xchg
mov
lret
xchg
shl
scas
repz
gs
out
fcomp
imul
das
in
or
loop
xor
cmpsl
fldln2
inc
scas
push
push
aas
mov
mov
in
cld
out
mov
sti
insl
out
jne
jns
stos
or
cltd
or
cmp
flds
xor
inc
mov
lret
and
nop
call
call
mov
jnp
shl
jo
mov
scas
push
lret
adc
aad
jae
ljmp
enter
pop
addl
ss
fwait
mov
cld
mov
push
dec
push
jnp
je
sbb
jl
inc
dec
mov
xor
inc
mov
fcoml
mov
jp
inc
test
adc
hlt
dec
imul
hlt
je
pop
xchg
add
push
inc
stos
cmpsb
mov
cmp
mov
sbb
push
inc
xor
inc
cmp
jb
lock
jbe
loopne
mov
fwait
stos
push
in
and
in
flds
add
pop
sti
imul
sbb
mov
call
test
movsb
pop
bound
mov
or
xchg
cmp
dec
add
push
lcall
fisubs
clc
push
add
inc
dec
adc
clc
outsb
add
cmpsl
shlb
mov
mov
sbb
dec
popf
mov
dec
cmc
rolb
add
xchg
inc
jmp
pushf
dec
fwait
lock
popf
sbb
xor
or
push
ficompl
testl
mov
jmp
mov
scas
jo
xchg
clc
enter
and
insl
adc
testl
xor
or
mov
mov
xchg
idiv
clc
cmp
pop
lods
mov
lcall
popf
into
loopne
jmp
dec
mov
out
fcompl
rorb
pop
iret
cwtl
mov
aam
adc
lahf
imul
mov
es
jg
out
mov
xchg
aam
mov
push
cmp
and
ficompl
xor
fstpt
sahf
fidivs
dec
loop
sub
movsl
int
mov
pop
xchg
leave
jno
add
cmp
lock
mov
sub
insb
xor
jecxz
mov
jo
ljmp
mov
jecxz
or
and
and
mov
inc
lds
cmp
inc
dec
daa
jecxz
push
stos
fsub
cmp
outsb
mov
jnp
adc
cmpsl
or
sarl
sbb
imul
jle
mov
popf
cs
fldenv
call
pop
mov
rol
jg
daa
or
fwait
call
cmp
int
rcll
in
jl
add
fnsave
shrl
jb
jns
dec
xchg
xchg
mov
fsubrl
push
add
push
fdivr
pop
sbb
or
mov
cwtl
inc
shll
lahf
dec
mov
addr16
mov
xchg
inc
push
pop
inc
test
sbb
xchg
jno
fs
js
adc
rorb
and
mov
inc
std
pop
fucom
ret
or
push
mov
fimull
imul
in
xchg
or
rorb
sub
xchg
hlt
sub
cmpsb
sti
dec
adc
cmp
pop
mov
aas
ret
xchg
dec
daa
mov
cmp
rcrl
fsubp
call
adc
fstpt
xorl
cld
adc
inc
lock
lret
rcll
jp
leave
popa
les
js
aad
mov
jge
dec
push
jmp
sub
hlt
mov
and
dec
sub
mov
cmc
push
shrl
popf
nop
jns
sub
xor
dec
jno
leave
jl
in
cmpsl
add
rol
lods
fcompl
repz
mov
mov
jecxz
popf
pushf
int3
jp
dec
jg
stos
fdivs
aad
jbe
fisttps
int3
pusha
cmc
in
ljmp
jge
cmp
xchg
enter
push
push
cmc
ret
mov
std
adc
sbbl
adc
and
cltd
dec
push
adc
jnp
mov
push
fadd
sbb
or
in
leave
pop
sbb
inc
icebp
or
push
loop
mov
outsl
mov
lods
lods
inc
lahf
jnp
imul
push
ror
lock
mov
iret
les
aaa
cmp
and
pop
sbb
lcall
das
xchg
mov
xchg
fwait
mov
aas
sub
idivb
cmp
or
mov
sbb
pop
adc
repnz
in
mov
xchg
and
lock
dec
mov
adc
aas
push
xor
mov
jp
lcall
sti
test
mov
mov
pop
js
sub
xchg
incb
cmc
aaa
mov
inc
test
stos
mov
or
cmp
inc
pop
and
into
adc
and
fisubrl
adc
insb
in
int
jl
mov
loopne
mov
out
int
mov
loopne
sbb
lock
cli
je
cmc
cmp
pop
aad
mov
orb
data16
into
and
subb
xor
shll
out
gs
pop
add
inc
or
test
jp
and
ret
mov
sub
test
push
loopne
stos
pop
sti
xor
inc
scas
lret
dec
add
push
push
jbe
pop
sbb
inc
mov
xchg
imul
stc
js
mov
sub
subl
xchg
pop
cmp
jae
pop
incl
rcr
and
push
pop
xor
push
call
pusha
stos
lods
inc
shll
clc
ljmp
jmp
in
shr
int3
xor
or
push
cmp
mov
test
int
xor
es
sbb
mov
je
mov
jp
add
fs
fildll
fstpl
sti
inc
xchg
cmpsb
mov
and
push
jne
push
xchg
mov
movsb
cli
xchg
mov
mov
pop
add
dec
pop
pushf
jle
xor
inc
cli
add
fldl
insl
fistpll
pop
shll
test
adc
in
fimull
adc
call
and
adc
sub
add
cmpsb
bts
and
rorl
xchg
lock
xchg
pop
mov
mov
stos
gs
or
and
cmp
add
cld
enter
cs
lea
fidivrs
lds
mov
outsb
ret
adc
rclb
sbb
push
gs
mov
fstl
lods
lods
xchg
push
shl
test
enter
cli
loop
enter
adc
dec
pop
shlb
cmp
rol
dec
push
mov
xor
ja
lock
stos
lock
stos
repnz
outsl
pop
movsl
jg
stc
repz
sbb
lods
mov
gs
out
fnstcw
and
mov
xchg
sarl
test
ja
fwait
xchg
xchg
daa
outsl
mov
adc
mov
loope
push
cwtl
cmp
test
daa
mov
testl
mov
enter
sub
push
xchg
inc
loop
popf
popl
gs
int
cs
and
dec
adc
testb
lock
in
scas
lahf
mov
push
push
into
push
out
fs
sbb
sub
mov
and
lret
or
mov
dec
mov
jnp
pusha
xchg
mov
mulb
xchg
mov
out
loop
adc
jne,pn
mov
inc
push
cmpsb
push
es
sbb
in
xor
ja
shll
add
aad
mov
cmp
add
call
ret
pop
inc
int3
call
cwtl
mov
lock
push
in
add
xlat
mov
dec
ret
sbb
mov
pop
inc
pop
in
mov
mov
lock
sbb
fldcw
mov
or
imul
arpl
leave
stos
fmuls
sbb
test
push
ljmp
movsl
xchg
dec
pop
in
adc
mov
rorl
les
ret
cmpsl
mov
xor
shll
mov
imulb
int3
add
jno
iret
outsb
mov
mov
popf
inc
shr
ja
int
stos
or
fs
sahf
pop
xchg
mov
dec
popa
imul
xchg
aaa
cwtl
mov
les
shl
mov
int3
cmpsl
sub
test
test
inc
sub
push
mov
xchg
pop
lods
jcxz
dec
addb
and
push
inc
mov
pop
adc
mov
ljmp
push
gs
leave
mov
int
mov
call
inc
mov
xchg
mov
lret
lcall
rclb
pop
mov
cltd
loopne
inc
sbb
adc
int
gs
lds
inc
jnp
fldl
push
sub
xchg
lock
mov
in
scas
add
mov
pop
popa
les
cmc
adc
leave
aad
popa
mov
sahf
cmc
daa
pop
sbb
sti
push
cmpsb
add
jbe
scas
test
sbb
lret
or
and
test
enter
xchg
sti
cmpsb
dec
dec
pop
mov
clc
jl
pop
arpl
es
lret
scas
xor
xchg
lcall
insl
mov
cwtl
push
xchg
jo
jg
sar
ja
sbb
sahf
sbb
inc
jne
in
pushf
push
mov
or
loopne
sub
lea
jb
and
cli
out
loopne
out
ja
cmpsl
out
mov
sub
mov
and
or
sub
test
cmpl
or
js
mov
push
fwait
and
shrb
out
mov
aam
lock
mov
push
xor
lret
xchg
push
ds
add
pop
mov
fisttpll
loop
shlb
popa
lods
inc
loop
sub
push
adc
fisttpll
insb
jg
in
loopne
rcll
and
mov
sub
pop
movsl
sbb
sub
out
outsl
stc
out
xor
mov
mov
adcb
mov
jns
std
cs
js
push
or
ja
outsb
test
inc
xor
push
add
test
push
insl
jge
dec
test
insl
dec
adc
and
xchg
sbb
sub
ficompl
out
mov
insw
arpl
sbb
mov
sub
lahf
push
lret
std
lods
test
mov
movsb
dec
inc
in
nop
mov
mov
in
data16
push
xor
orl
jl
xchg
xor
mov
add
jecxz
sbb
ja
cltd
pushl
sbb
shlb
inc
cmpsl
mov
popf
cmpsl
mov
add
add
ja
cmp
lods
cmp
movsb
out
adc
jge
rcrb
sbbl
dec
cmp
leave
dec
xor
cmc
mov
negl
loop
lds
stos
fbld
sbb
into
cmp
push
cmpsl
pop
or
enter
mov
es
dec
ljmp
and
out
mov
fwait
push
gs
and
adc
xor
test
pop
ror
sub
push
jg
bound
or
or
dec
fdivrp
je
jl
push
sub
or
adc
adc
popf
out
das
mov
mov
mov
lcall
jp
rolb
adc
out
dec
ja
adc
outsb
xlat
xor
subb
in
sub
stos
xor
daa
sbb
dec
adc
mov
daa
hlt
inc
xor
test
sub
fnstsw
and
sub
mov
lods
or
sbb
data16
int3
cli
in
sub
call
mov
data16
ret
xchg
pop
xchg
adc
mov
outsl
mov
dec
fsubrl
clc
push
aaa
shlb
jge
push
rcrl
sub
int
cmc
test
inc
das
out
imul
push
mov
mov
inc
mov
in
push
outsb
xchg
or
inc
stos
insl
mov
jle
icebp
push
lcall
mov
fists
mov
inc
add
andl
mov
mov
dec
fdivr
mov
pop
xchg
add
out
mov
cmp
mov
mov
lret
cmp
adc
pop
hlt
ret
cmc
mov
xor
je
push
icebp
or
fisubs
es
cmp
jns
and
cmp
push
cmp
fstps
push
push
mov
aam
xchg
adc
fsubrs
divl
mov
pop
xlat
xchg
xorl
lods
push
or
lods
push
stc
arpl
outsb
pop
std
jle
mov
inc
mov
fisubrs
fistps
pop
aam
fs
mov
test
pushf
mov
cli
gs
iret
pop
pop
and
mov
mov
loope
and
enter
sbb
ficoml
dec
inc
mov
lds
mov
dec
inc
movl
jb
mov
push
mov
mov
xlat
outsl
push
and
imul
mov
test
mov
pop
repnz
and
sbb
jns
movsb
xlat
push
cmp
dec
add
aaa
mov
push
fsts
fimuls
and
aas
push
sbbl
cltd
push
mov
jae
int
repz
dec
icebp
push
addl
fucomip
adc
sub
div
fidivs
ss
or
sahf
mov
fbld
in
push
sub
inc
fwait
popa
pushf
sbb
dec
lea
mov
dec
ja
addb
bound
sti
loopne
shrb
sbb
std
scas
sub
sub
stos
or
mov
xchg
aaa
lds
mov
adc
in
nop
lods
mov
pop
scas
jmp
add
dec
out
movsl
adc
dec
jmp
mov
mov
es
mov
xor
jmp
xor
js
sub
inc
sti
jl
sub
cmp
fsubl
hlt
sbb
jg
shlb
add
and
mul
jns
push
fdivrl
jecxz
or
loop
fs
aaa
int
inc
in
das
test
or
sbb
inc
cwtl
dec
ret
push
stc
lahf
mov
xor
pushf
faddp
push
or
scas
mov
mov
in
inc
ljmp
pop
or
loop
loop
lock
or
mov
lcall
stos
add
mov
test
lods
add
dec
and
lods
popf
adc
and
loopne
js
jmp
mov
and
movsl
jmp
lods
jle
push
and
add
call
inc
xor
push
mov
fmuls
test
pop
jb
sahf
add
xchg
sbb
jae
jle
cmp
in
xor
jle
std
int
jge
fdivr
js
incb
inc
push
mov
mov
adc
adc
shl
dec
in
inc
mov
fcompl
push
out
loopne
out
cmpsl
sbb
into
loop
dec
or
testw
call
in
imul
cltd
jge
cli
cwtd
cld
xor
mov
imul
jno
aad
pop
pop
outsl
add
mov
push
adc
dec
iret
dec
dec
xor
push
adc
lcall
ljmp
fcom
or
xabort
shll
xchg
imul
or
push
mov
pop
lods
loopne
xor
fimuls
ja
adc
loop
mov
push
mov
lcall
or
ret
push
dec
sub
daa
test
call
cli
loop
imul
mov
xchg
xor
in
jns
pop
adc
mov
sbb
mov
mov
push
cmp
pop
add
mov
xlat
xchg
cmc
jg
jg
bswap
hlt
shr
aaa
test
test
jmp
mov
clc
mov
call
cmp
in
pop
roll
push
lahf
das
loope
jmp
jno
jle
mov
sti
lcall
xchg
outsl
imul
adc
and
cmp
stc
and
and
addl
pop
ret
or
call
outsl
mov
std
fnstcw
mov
addr16
mov
out
lds
hlt
ficoms
in
mov
shll
cmpsb
add
ds
repz
aaa
into
push
jnp
test
xor
lret
lea
out
sbb
and
mov
sub
mov
and
lea
es
mov
xor
or
cmpsl
pop
ljmp
test
adc
cli
out
dec
fcmove
rcl
ss
cmp
imul
cmc
add
outsl
loop
jo
insl
cmpsb
fwait
jb
and
test
pop
gs
aam
add
cmp
pop
push
xlat
mov
mov
pop
mov
push
in
lret
mov
andl
cmp
push
pop
cwtl
dec
push
lret
push
xor
cmc
test
js
lods
testl
fimuls
add
ss
xchg
xchg
or
sub
ficompl
sbb
push
push
push
rcr
fwait
push
lahf
jp
movl
inc
insb
mov
pop
sub
in
into
aaa
sub
das
inc
mov
adc
xchg
fcomps
test
xor
pop
push
shrl
xor
lea
mov
bound
sub
ja
sbb
adc
and
mov
pop
data16
sub
xor
mov
aam
and
loopne
add
stos
ret
mov
test
mov
xchg
lods
pop
dec
cmp
ret
mov
iret
push
aam
iret
loop
jg
dec
jae
popf
std
icebp
les
inc
adc
cwtl
orb
and
push
ficomps
dec
xor
sub
mov
clc
and
test
adc
push
mov
icebp
cwtl
lds
cmp
mov
jg
mov
adc
rorl
inc
shrb
xchg
leave
mov
mov
mov
stos
inc
aad
mov
and
mov
adc
add
mov
push
dec
imul
inc
movsb
jmp
pop
es
movsb
and
push
and
repz
jl
insl
xchg
into
or
xchg
or
push
out
and
xchg
ljmp
inc
jns
dec
xchg
lods
lods
outsb
imul
or
mov
rcr
xor
xor
pop
rcll
jb
sub
sub
shll
stc
mov
jp
cmp
movsb
pushf
pop
jmp
xchg
xchg
sub
test
jecxz
fiaddl
pop
inc
subb
adc
imul
pop
pop
fidivrs
les
dec
int
dec
loopne
loope
neg
mov
dec
sub
ret
aas
inc
mov
movsl
and
sub
pop
dec
sbb
arpl
lods
imul
gs
clc
stos
xchg
push
test
lcall
xorl
xor
ss
js
sahf
outsl
iret
pop
fsub
push
icebp
adc
int3
inc
xchg
repz
aad
fldenv
adc
add
outsl
pop
gs
mov
insb
stos
xlat
lret
mov
test
aaa
int3
mulb
adc
pop
inc
cmp
shl
shlb
xchg
add
dec
or
ljmp
cwtl
sti
mov
sbb
adc
ss
lret
in
cmp
sub
sub
int
imul
mov
push
mov
push
jle
mov
scas
rcrl
mov
jbe
dec
jbe
inc
inc
and
pop
lods
outsb
push
and
mov
cld
bound
test
gs
or
mov
lcall
sbb
push
push
insb
push
adc
into
xor
sub
push
or
mov
ss
xor
dec
outsb
inc
jp
pop
rol
ljmp
fsub
xor
dec
push
xchg
in
je
in
push
pushf
fildl
dec
jbe
mov
daa
mov
aam
inc
inc
inc
gs
aaa
xor
lahf
xchg
aaa
or
pushf
pop
or
pop
out
jg
sbb
sub
shll
in
shlb
ret
inc
imull
enter
or
popf
push
xchg
iret
sbb
mov
push
sbb
xchg
cltd
dec
insb
add
mov
dec
xchg
in
neg
mov
lret
orl
or
cld
sub
mov
mov
das
loopne
fs
leave
lds
bound
adc
jmp
clc
jmp
sub
je
lret
xor
lcall
pop
mov
les
cmp
lahf
out
sahf
pop
push
and
adc
xor
call
jno
fstl
inc
mov
push
dec
xchg
lret
jbe
jno
xchg
xchg
xchg
mov
adc
leave
cmp
popw
imul
adc
cld
push
inc
mov
fs
xchg
cld
sbb
shll
cltd
mov
or
rcrl
shll
scas
mov
cmp
mull
lock
jp
mov
sbb
pop
mov
out
jnp
inc
inc
mov
fildll
movsl
inc
pop
sub
push
cmp
aam
push
dec
mov
out
lret
jno
dec
enter
xlat
or
std
add
push
push
push
jp
rol
pop
lock
fldenv
fimuls
ja
seto
mov
add
mov
or
jl
gs
jle
int
leave
sub
mov
or
sub
push
fwait
ror
pop
dec
xor
cld
sub
and
mov
mulb
pop
hlt
fwait
pop
xor
in
repz
dec
push
lret
fsub
pop
roll
mov
ss
adc
in
mov
xchg
lea
and
or
pop
cmpsl
jl
nop
lock
or
fiaddl
popf
out
in
push
in
inc
sahf
mov
dec
lcall
shl
inc
pop
xor
add
mov
fwait
arpl
and
fldenv
cmp
call
dec
addr16
jne
stc
xor
je
sub
xor
pop
subb
fwait
xchg
xchg
int
cmc
loopne
adc
jno
aaa
jno
scas
cmp
mov
jl
js
inc
sti
pop
aas
cmp
pop
push
fildll
xor
cmpsb
aaa
fildll
daa
pushf
cmp
fiadds
cmp
fcompl
jne,pt
sbb
jb
cmp
xor
lods
xchg
push
shr
cmc
ret
mov
mov
insb
push
aam
add
jnp
test
xchg
cmp
cmc
ds
push
repz
jle
mov
je
dec
xchg
fiaddl
lea
outsb
mov
mov
lahf
pop
lahf
cmp
clc
ret
repnz
out
push
or
pcmpeqd
jbe
addr16
push
popf
clc
imul
cmp
adc
pop
pop
push
cltd
mov
shrb
lret
push
and
cwtl
lahf
xlat
sub
fdivs
mov
ret
fists
inc
sub
in
add
sub
icebp
mov
in
scas
in
scas
jb
jb
mov
lds
lds
xchg
mov
mov
in
loopne
pop
and
mov
jae
jl
mov
outsb
add
cmp
add
popf
xor
mov
int3
push
cmc
lahf
xchg
scas
jbe
sahf
scas
pop
loope
loope
addr16
xorb
shrl
sbb
das
leave
out
shrl
dec
mov
jp
mov
cmp
sbb
sahf
jmp
arpl
jle
mov
pop
data16
out
xchg
jl
or
shrb
test
adc
cmp
cs
mov
hlt
dec
push
cwtl
lcall
test
xchg
hlt
inc
gs
xor
mov
mov
ret
mov
ja
sbb
sub
adc
xor
xlat
push
sub
lret
in
fnstsw
outsl
testl
adc
pop
and
gs
mov
jge
mov
mov
cmpsb
inc
cld
rcrb
aad
icebp
or
cmp
add
mov
pop
in
mov
jae
dec
inc
dec
cmp
outsl
dec
pop
xor
mov
adc
fcmovnb
pop
pop
pushf
push
and
mov
push
cmc
sub
dec
es
xchg
cmp
xchg
jb
das
movsl
incb
sbb
cmpsl
mov
add
repnz
push
xchg
lds
mov
xchg
stc
mov
nop
test
nop
cmc
cwtl
xlat
out
or
int
push
and
sbb
movsl
sub
bound
inc
push
inc
and
push
popa
outsl
lret
inc
jb
outsb
sahf
fcmovb
test
mov
data16
sahf
movsb
jae
sbb
dec
mov
fldcw
shrb
xlat
pop
iret
push
push
cld
arpl
rol
xor
cmpsb
fiadds
test
dec
aas
inc
push
sbb
mov
xor
insb
pop
sbb
add
js
lcall
ljmp
out
icebp
jecxz
jb
lea
scas
mov
push
pop
in
and
sbb
and
push
imul
sahf
jmp
std
push
dec
les
popa
sbb
repz
fs
jae
sbbl
lods
orl
ror
icebp
push
subb
cmpb
jne
push
cmpsb
or
fmulp
fistps
jns
hlt
gs
cmp
or
mov
aam
pop
lcall
ss
out
jnp
aaa
mov
mov
xor
lret
xchg
ss
xchg
in
cmp
adc
add
in
fcomp
push
aaa
inc
adc
clc
jecxz
mov
enter
inc
inc
xchg
arpl
inc
mov
lods
test
ss
sahf
lret
cld
lcall
insl
jge
mov
pop
fs
fnstsw
xchg
dec
add
loop
fcmovu
xor
pop
mov
and
scas
into
push
imul
in
jae
mov
add
mov
insl
out
sti
push
mov
imul
cmp
xor
cltd
adc
xchg
sub
cs
cmp
lcall
cmp
cmp
shrb
lods
push
mov
inc
jmp
cmp
inc
mov
push
in
scas
push
and
xor
cmpsb
out
pushf
fmulp
mov
addr16
lret
xor
mov
ljmp
mov
sbb
adc
pop
dec
out
jne
rorl
or
dec
and
sbb
sub
cmp
into
mov
lods
jo
fists
mov
jl
js
add
sub
inc
cmp
pop
lret
sarl
ljmp
pop
mov
xchg
cwtl
rcr
aaa
inc
cmp
mov
xor
push
sbb
inc
xchg
lds
mov
push
out
aaa
in
adc
fcompl
mov
sub
dec
inc
mov
pop
xchg
mov
mov
adc
mov
mov
inc
sbb
sbb
scas
das
das
jae
xchg
sub
test
sub
mov
or
lods
jge
repz
pushf
insb
ret
imul
sbb
fnstcw
mov
es
shr
mov
add
adcl
cmpsl
cmp
imul
mov
movsl
and
shlb
pop
cld
in
shll
inc
cmp
cs
add
jmp
sbb
std
int3
push
jo
in
fiaddl
dec
arpl
scas
xchg
hlt
aad
mov
out
lcall
pop
popf
rol
sub
test
out
cmc
es
inc
enter
ja
dec
push
mov
sub
enter
out
loop
lods
adc
push
mov
pop
push
imull
or
mov
xorb
mov
hlt
or
jnp
jmp
fcom
repnz
jae
mov
into
add
xor
dec
lcall
add
inc
mov
repz
mov
aad
adc
loope
pop
pop
pop
sbb
jle
sti
popa
sahf
mov
cmc
loopne
or
pop
popa
outsb
mov
add
dec
cld
mov
out
push
mov
mov
mov
lods
xor
cmp
inc
repz
push
mov
add
cwtl
or
mov
imul
gs
dec
shlb
xchg
mov
jns
mov
sahf
xchg
int3
mov
inc
setno
pop
mov
xchg
bound
dec
lea
test
ljmp
push
add
dec
or
loop
sbb
test
jp
sbb
ljmp
test
gs
stc
sub
mov
add
xor
and
dec
outsl
idivb
cmp
out
mov
jle
std
xorb
into
sub
or
cmc
int
mov
lods
rorb
jnp
sub
mov
shl
sbb
jae,pt
push
xchg
adc
xchg
xchg
adc
pop
inc
add
clc
lahf
outsb
lret
into
and
fldcw
mov
pushf
jb
sti
dec
rorl
sub
mov
add
loop
ss
inc
mov
push
into
push
ds
repz
pop
jg
loope
adc
sarb
fdivr
xchg
aas
push
popl
dec
mov
popa
cmc
or
cmpsl
scas
push
inc
add
ja
lds
pop
clc
dec
jns
mov
adc
mov
jns
movsb
out
inc
test
psrld
jmp
sub
mov
cmp
inc
push
incb
les
repnz
outsb
xor
imul
aad
push
sbb
dec
dec
cmp
jge
cmpsb
sub
mov
cmp
mov
xchg
or
jb
jmp
jl
int
aam
or
das
out
push
lds
cmp
fsubrp
push
lahf
sub
lcall
mov
das
shll
pusha
dec
cmp
dec
sbb
pusha
pop
lret
mov
mov
pusha
js
xlat
stos
sub
daa
add
push
jne
ret
push
add
jecxz
dec
shlb
test
add
jbe
loopne
inc
gs
adc
cmpsl
sbb
ds
mov
movsl
pop
add
imul
sarl
aaa
cmp
cwtl
dec
push
inc
sbb
or
fcomi
leave
sbb
enter
pusha
js
pop
adc
pop
rorl
sbb
stc
aam
add
repz
fisubl
xchg
fistpll
mov
divb
stos
aas
jno
sub
btr
movl
sub
mov
das
lods
mov
in
mov
subb
adc
add
push
es
lahf
xchg
mov
rcrl
aad
xchg
or
cmp
sub
push
dec
cs
std
outsl
xor
cld
scas
push
stc
nop
std
sbb
repnz
test
lds
lea
or
cmpsl
inc
dec
lret
adc
sbb
push
push
mov
pop
jg
sbb
sbb
or
lahf
arpl
jno
sarl
dec
test
pusha
movsb
cli
jb
and
loop
dec
lods
inc
roll
and
mov
inc
jl
dec
aas
cmp
jg
cld
addr16
cmp
cmp
loop
mov
inc
inc
mov
mov
xor
outsb
sub
cmp
aas
push
call
sbb
mov
sub
or
mov
imul
std
xor
xlat
adc
daa
adc
jp
xchg
lods
fisubrl
aaa
insb
adc
xlat
ss
into
pop
clc
and
xor
sub
iret
adc
popf
jmp
leave
cltd
and
sub
enter
lods
pop
in
mov
dec
cmp
pushf
not
int3
mov
dec
cs
pop
fsubs
into
cld
rclb
movsb
out
sub
dec
and
aas
pusha
jae
movsl
sbb
push
jp
or
add
xor
xor
pop
rolb
xor
adc
push
sahf
dec
xor
mov
mov
adc
adc
stos
pop
mov
cli
push
daa
xor
movsl
jmp
insb
test
subl
pop
mov
call
push
and
cld
add
cli
xchg
test
xchg
pop
cmp
mov
cld
or
xor
out
jno
filds
insl
pop
scas
mov
dec
rcll
mov
dec
cmpsl
dec
scas
int3
add
xlat
adc
movsb
pushf
pushf
jmp
cli
sub
scas
lea
xchg
pop
or
cmp
popf
stos
mov
add
movsl
test
jmp
in
and
sub
bnd
jne
mov
test
imul
mov
xor
and
in
xlat
pop
xchg
and
pop
mov
stos
adc
mov
pushf
xchg
cltd
insb
jns
inc
xlat
cmpsb
mov
inc
and
mov
mov
jb
pop
xor
addr16
cmpsl
sbb
and
xchg
int3
loop
mov
mov
shl
cmp
push
iret
or
sub
jne
cli
fs
daa
sub
sbb
sbb
rolb
xchg
popf
cmc
mov
insb
test
or
movsb
xor
lret
mov
xchg
push
test
icebp
pop
fwait
pop
int
inc
stos
xchg
lea
popf
or
mov
shlb
pop
in
xor
cmp
push
fidivl
adcb
clc
lret
call
and
inc
xchg
push
scas
and
push
mov
adc
mov
adc
in
sarb
test
out
xor
push
fisubrl
mov
mov
imul
icebp
mov
add
dec
adc
xchg
aam
push
mov
clc
jne
mov
aad
bound
js
out
insl
cmp
fsts
mov
das
jb
add
out
clc
aad
pop
lret
sbb
xor
je
mov
lock
scas
pushf
fsts
insl
push
mov
pop
enter
push
cmp
cwtl
int
fiaddl
adc
insl
inc
fwait
xchg
test
or
test
jge
in
loopne
or
mov
xchg
dec
inc
test
cmp
mov
sub
and
add
dec
push
add
insb
cmp
outsb
add
and
test
loopne
jns
jg
and
or
lret
mov
pop
lcall
xlat
inc
insl
cmc
xchg
sub
xchg
jp
sbb
scas
jne
and
sbb
and
cmpsb
aad
pop
dec
testl
dec
inc
xchg
pop
lcall
xchg
and
loopne
mov
fcom
lods
test
inc
xchg
out
mov
hlt
filds
in
push
scas
fcomi
aas
cld
pusha
into
or
insb
fdivr
jl
dec
jl
hlt
cmpb
mulb
aaa
hlt
cmpsb
dec
fbld
sbb
jp
std
ljmp
jge
adc
dec
xor
test
scas
cmp
test
insb
sbb
aad
cmpsb
adc
and
fidivrl
or
outsb
por
mov
popa
ss
mov
mov
inc
mov
pop
or
jnp
pop
ljmp
ret
loop
orb
leave
js
sbb
adc
aam
push
fs
xchg
sbb
dec
or
cmp
xchg
mov
xchg
fisubrs
dec
psubusb
pop
bound
jns
inc
jp
cmp
cmp
les
or
movsb
push
mov
and
xchg
sbb
mov
and
lock
sarl
andb
rcrl
xchg
mov
les
negb
xor
cmpsl
inc
mov
mov
mov
push
mov
mov
cmc
das
addl
lea
xchg
pop
movsl
ss
insb
dec
ds
rcrl
push
cmp
arpl
push
cmpl
std
fdivl
push
imul
dec
mov
push
pushf
dec
cmp
fnstsw
dec
push
dec
pop
mov
sbb
sub
mov
cmp
jg
pushl
pop
pop
or
adc
push
roll
les
mov
cli
icebp
daa
loope
test
test
or
loopne
lds
out
in
pusha
sbb
inc
inc
or
es
outsl
fisubrs
pop
mov
push
push
xorl
add
dec
fldcw
dec
jecxz
xchg
pop
jo
in
add
or
xchg
xor
pop
out
sbb
jecxz
dec
lret
cli
cmp
cwtl
mov
pushl
dec
pop
cmpsb
cmp
push
jo
scas
shrl
cmp
fnstcw
jle
stos
push
dec
mov
pop
xchg
or
jbe
push
insb
cmp
fsubl
adc
out
scas
cwtl
sbb
sbb
mov
jecxz
adc
idivl
sub
cmp
hlt
xchg
cmp
cmp
imul
or
or
mov
and
daa
icebp
add
sahf
push
arpl
test
call
mov
int3
sbb
pop
stc
arpl
pop
int
push
inc
pusha
jmp
or
push
mov
div
xchg
fists
cmp
imul
scas
xchg
enter
push
dec
inc
daa
add
test
push
mov
adc
sti
or
sahf
cmpsl
mov
or
test
daa
arpl
movsl
les
sahf
lods
rolb
sub
cmpsl
pop
shll
mov
jge
jae
popa
adc
lods
daa
xchg
mov
daa
jnp
adc
xor
push
js
inc
daa
arpl
sub
adc
sti
ljmp
xor
clc
cmp
sti
push
imul
cmp
xchg
decb
out
mov
iret
jno
mov
repz
pusha
lods
sbb
push
adc
dec
sbb
mov
xchg
into
add
imul
fnstcw
data16
adc
iret
xor
lahf
inc
lods
imul
add
or
cltd
mov
jmp
jae
xchg
add
jo
test
or
mov
das
fmul
cmpsl
cld
sarb
test
mov
inc
inc
add
xor
lods
cmp
pop
and
fildll
fidivrl
jge
mov
std
cmp
addr16
push
aas
sub
clc
adc
imul
dec
test
sti
pop
sbb
xchg
stc
dec
fdivrl
inc
dec
adc
xchg
lahf
in
cmp
iret
pop
adc
sub
push
outsl
mov
in
sbb
icebp
movsb
sahf
jne
leave
jbe
cmp
xchg
pop
scas
adc
in
call
and
mov
xor
mov
or
and
shll
sbbb
loope,pn
sahf
mov
cmpsb
and
aaa
jne
shlb
ds
mov
push
shl
cmp
xor
ficoms
dec
mov
fmul
or
xlat
ss
inc
mov
xchg
jmp
xchg
pop
scas
call
iret
cmp
mov
shl
or
push
dec
ja
in
pop
je
and
lods
jecxz
and
lret
inc
loopne
int
inc
addr16
mov
xor
int3
fnstenv
mov
pop
mov
cmp
bound
pop
cmp
push
mov
add
dec
movsb
in
iret
aas
xchg
mov
ficompl
cmc
lahf
jmp
sub
out
aas
rcl
sbb
jns
loope
and
ds
mov
push
jp
sbb
mov
mov
cmp
xor
cmp
cld
cli
mov
mov
out
push
pop
aaa
or
xor
popfw
lods
push
jl
push
cmp
mov
movsl
imull
cmpsb
stos
xor
lret
ds
iret
idivl
mov
sti
dec
jb
in
aaa
mov
into
cmpsb
mov
jmp
and
push
int3
cmc
push
loope
pop
dec
sub
mov
aaa
mov
enter
loope
fwait
rorl
jno
xlat
insl
inc
and
out
jecxz
hlt
mov
xor
xchg
lods
dec
pop
cmpsl
dec
adc
or
sub
push
sbb
in
cli
push
mov
testl
dec
fldenv
sub
pop
loop
xor
ret
bound
fdivrs
sarb
sbb
pop
pop
and
mov
pusha
sbbl
jno
iret
movsl
pop
stos
aas
sbb
daa
test
hlt
xor
push
je
push
mov
mov
or
mov
add
cmc
sarl
fldcw
adcb
cmp
repz
nop
sbb
insb
mov
pop
rcrl
mov
xlat
jb
stos
mov
and
adc
cmpsb
jo
mov
les
paddw
nop
bound
jo
pop
xchg
lret
ja
mov
daa
imulb
jnp
xchg
jmp
xlat
notl
mov
outsb
xchg
mov
sbb
mov
xlat
and
pop
jno
scas
aad
cli
cwtl
cmp
push
mov
insl
mov
mov
call
add
test
ret
and
jne
int
mov
daa
sbb
lahf
mov
subb
daa
loop
aaa
rol
push
and
dec
sarl
cmp
fnsave
insl
stos
bound
std
mov
and
frstor
inc
cltd
rcll
mov
leave
outsb
loope
push
data16
into
jae
mov
mov
data16
jecxz
cmpsl
add
xchg
in
jb
or
cmp
mov
xchg
cmp
out
sbb
xchg
cmpsl
ficomps
and
mov
dec
dec
cmpsl
add
inc
dec
adc
ds
dec
pop
xchg
and
icebp
mov
mov
and
push
iret
cmpsb
cmp
sub
push
dec
add
cmp
push
setp
mov
sub
movsb
pusha
loope
cmp
sub
pop
call
fcmove
rclb
xchg
and
push
lcall
push
pop
pop
es
jmp
push
mov
lahf
jno
inc
push
test
cmc
mov
push
mov
and
dec
or
or
in
inc
and
or
mov
mov
add
rolb
stc
push
and
cmp
cmp
pop
rorb
lea
ss
out
jmp
mov
jp
cli
nop
lahf
in
fistpll
push
xchg
jbe
lods
into
or
jns
hlt
adc
push
xchg
mov
cmp
xor
sub
add
iret
mov
aas
sub
outsb
cmp
and
cmp
mov
pop
sbb
mov
mov
in
popf
and
arpl
jmp
push
jae
into
pop
nop
pop
and
mov
sub
xor
mov
pop
xchg
push
xor
int3
xchg
pop
call
loopne
add
incl
xor
in
adc
push
ds
das
imul
incl
cli
roll
dec
xchg
mov
xchg
das
jg
das
inc
add
mov
inc
into
pop
dec
push
dec
aaa
outsl
xor
xor
xchg
jle
jne
push
cmp
xchg
and
div
pusha
push
or
jl
out
xor
int
fs
sbb
aas
out
pop
aas
sbb
jno
pop
sbb
pop
arpl
and
mov
les
aad
fcompl
daa
subl
rcrl
lahf
sbb
dec
hlt
push
cmpsb
push
mov
xchg
bound
lcall
jg
sub
jg
shll
sub
inc
xchg
test
push
insl
loopne
movl
cltd
push
xchg
cli
cmpsl
xor
pushf
mov
inc
fsubr
in
fcmovnb
call
jmp
jo
adc
inc
imul
repnz
sub
xchg
rcr
mov
filds
xchg
mov
mov
rcl
mov
mov
pusha
add
push
jge
lcall
or
aaa
addb
inc
shrl
mov
cmp
inc
and
sbb
test
fsub
repnz
ret
xchg
sti
inc
cld
andb
sbb
movsb
push
mov
adc
int
mov
dec
lret
std
hlt
and
jns
call
and
scas
lds
mov
mov
lods
rcr
cmp
pop
out
push
call
add
mov
clc
cmp
inc
and
inc
or
xor
in
mov
push
xchg
dec
jns
out
jmp
lret
subl
inc
add
mov
dec
xchg
dec
push
int3
jae
push
leave
mov
cmpl
and
jg
shrl
inc
out
lret
ret
clc
add
push
add
hlt
lret
dec
imul
out
mov
and
ret
sub
into
js
test
mov
mov
jno
mov
sub
outsl
scas
adc
lret
xchg
insl
jmp
addb
inc
pusha
jno
mov
dec
test
outsl
or
ret
or
mov
test
push
or
lcall
xor
mov
gs
pop
roll
jmp
and
outsl
mov
dec
dec
js
iret
sub
lahf
mov
inc
sub
fs
sti
ljmp
add
loopne
ja
push
dec
pop
jne
ss
adc
aas
arpl
cltd
negl
arpl
mov
cli
int
adc
sub
stc
bound
int
movsl
test
add
insl
dec
and
mov
insl
mov
cli
adc
push
out
pusha
xchg
add
jle
adc
aaa
cmp
in
sub
and
add
sub
mov
push
mov
repnz
push
lods
mov
hlt
daa
pop
movsl
jb
outsb
mov
inc
cli
into
pop
cmpsb
insb
cltd
jb
imul
cs
pop
push
adc
lock
pop
jp
pop
stos
lock
or
jge
and
lcall
xchg
pop
sub
push
repnz
aaa
popf
scas
cmpsl
mov
ret
adc
cmc
dec
ljmp
call
addr16
xchg
test
in
cli
sub
test
sbb
sub
push
push
sub
or
int
hlt
push
adc
mov
movsl
shrb
and
adc
jp
stos
daa
js
push
in
fwait
inc
add
lock
mov
out
cltd
mov
mov
fldenv
movsl
arpl
sub
insb
mov
arpl
lock
pop
bound
stos
or
scas
sbb
jmp
mov
xor
dec
sbb
mov
jg
dec
xchg
imul
push
mov
or
lods
icebp
sub
test
adc
adc
add
mov
sub
mov
fwait
scas
jmp
mov
and
aas
xchg
movsl
push
push
push
das
mov
roll
add
adc
fwait
aaa
cmp
mov
sub
push
sbb
push
ret
xchg
push
dec
mov
cli
mov
inc
pop
jno
loope
clc
inc
mov
mov
cli
xchg
repnz
mov
pop
sub
or
imul
das
testl
jg
outsl
mov
frstor
mov
xor
daa
push
popf
xchg
or
cmp
lds
sub
pop
add
cmp
and
decb
mov
jnp
mov
and
in
inc
lcall
cmpsb
xchg
cmpsb
and
les
out
mov
lods
scas
cmpl
in
push
xchg
outsb
aas
jne
push
call
cld
out
fucom
data16
sti
addr16
mov
pop
and
jl
xchg
shlb
mov
adc
insb
stc
jnp
mov
sub
fimull
in
push
or
movsb
jle
test
add
repnz
push
sbb
ret
dec
shl
mov
mov
lea
fcom
push
xchg
sahf
mov
jp
scas
mov
mov
inc
or
push
cmp
les
fildll
int3
fs
aam
sbb
jnp
mov
and
push
inc
add
leave
lret
mov
mov
push
mov
mov
cmp
stos
cmp
mov
hlt
sbb
xchg
xor
lcall
xchg
scas
ret
call
test
test
push
nop
xor
and
and
sub
movsb
sub
pop
cmp
lods
ja
and
in
shrl
movsb
iret
inc
mov
and
inc
movsl
add
hlt
xchg
inc
mov
lahf
das
add
sub
add
sub
xor
mov
mov
lods
sbb
lret
xchg
jb
mov
stos
sti
sbb
jmp
stc
mov
mov
add
xor
mov
pop
out
ljmp
pop
scas
xchg
mov
jbe
mov
or
inc
mov
inc
test
and
pop
adc
sbb
cmp
push
and
jno
jmp
inc
insl
add
dec
mov
ret
sub
mov
je
and
daa
xor
push
mov
adc
dec
cmp
sbb
dec
fidivrs
daa
hlt
cmp
dec
lock
inc
mov
fnstsw
lock
ja
fsubs
into
jae
push
pop
pop
fsub
dec
xchg
jp
jp
rorb
imul
stc
dec
popl
sub
rol
xor
push
xor
into
ds
test
lcall
insl
imul
je
rol
add
enter
xor
or
in
lahf
xchg
stc
mov
je
pop
sbb
jns
ret
sbb
adc
ss
push
and
pop
xchg
test
out
shll
sub
inc
sbb
mov
jb
in
ret
pop
ljmp
popa
mov
dec
dec
ljmp
sbb
idivb
sar
push
push
addr16
mov
sbb
fisubrs
shll
in
repz
cmpsl
test
scas
repnz
clc
scas
pop
push
and
out
movups
mov
pop
ret
pop
insb
or
addl
add
cmp
xchg
sub
and
bound
push
addr16
inc
mov
pop
lret
test
lock
pop
inc
add
lcall
sarb
lcall
imul
outsb
push
mov
sahf
into
mov
sub
and
adc
int
int3
push
lahf
xlat
sbb
sub
push
cwtl
not
push
mov
clc
mov
sbb
mov
dec
lock
addb
nop
movsl
adc
in
pop
pop
loopne
push
mov
hlt
pop
sub
shll
xor
cmp
inc
dec
in
mov
rol
pop
cltd
pop
jno
xchg
ret
sbb
fxch
cmp
sbb
dec
and
push
cmp
adc
int3
js
pop
shlb
inc
push
xchg
call
ret
and
int3
repz
fwait
jno
jmp
sti
jb
aas
xchg
jg
imul
or
dec
adc
js
cwtl
jae
sbb
movsb
inc
outsb
jno
inc
inc
pop
or
push
out
orb
adcl
mov
ss
test
push
int
sarb
lock
adc
clc
dec
inc
mov
addb
sub
inc
scas
adc
out
shr
pushf
negb
ret
pushf
lock
fisubl
popf
inc
std
pushl
dec
fsub
xchg
pop
out
ljmp
jmp
rcrb
arpl
rorl
pop
lods
call
dec
mov
enter
jmp
adc
jns
sbb
pusha
pop
iret
icebp
leave
nop
cltd
jno
xchg
in
xor
mov
stos
add
sub
mov
inc
test
ljmp
orl
loopne
and
push
ficomps
aas
mov
pop
add
mov
pop
es
fsubs
cmp
pop
fistpl
rol
inc
lret
xlat
push
cld
in
cmp
pop
sarb
arpl
mov
pop
test
xor
mov
adcb
jle
adc
lock
jae
jmp
ret
mov
leave
sbb
into
mov
sbb
loop
mov
xchg
inc
push
inc
and
push
push
jg
movsl
fists
loop
adc
push
and
out
scas
jl
dec
push
lock
fdivrl
repz
cwtl
adc
and
mov
mov
fcoms
lret
lods
lcall
pop
dec
insb
hlt
enter
lock
std
adc
data16
xchg
xchg
addr16
aas
fldt
adcl
in
push
inc
sub
sub
js
ret
je,pt
mov
xchg
out
frstor
jge
in
das
jne
out
test
bswap
lret
cmpsb
addr16
popl
xchg
lret
xchg
sbb
or
test
in
push
inc
or
int
pusha
jle
push
loopne
cmp
adc
mov
jge
outsb
das
or
hlt
pushf
lock
pop
ja
aaa
xchg
test
xor
pop
test
adc
xchg
pop
or
xchg
repz
daa
xor
call
mov
xor
leave
xor
ljmp
or
mov
jmp
jns
xchg
push
jmp
push
out
fucomip
ja
cltd
xchg
or
inc
test
fidivrl
push
push
imul
or
insl
or
mov
imul
out
cltd
adc
push
out
or
pushf
mov
insb
or
ret
shll
es
test
fistpl
mov
pop
repnz
inc
sahf
inc
rcr
mov
mov
cli
sbb
sar
xor
nop
sub
mov
xorb
xchg
repnz
divb
cmp
pop
add
shll
dec
int
jg
and
lods
mov
inc
in
stos
pusha
andb
jmp
sbb
dec
sub
push
popa
pop
cltd
sahf
cltd
hlt
in
or
enter
insb
divb
cmpsl
pop
rol
push
dec
out
je
cltd
mov
adc
jnp
cmp
in
xchg
cmp
dec
or
push
incl
dec
push
mov
pop
popa
out
push
setb
je
loopne
xor
mov
jae
pop
sub
lods
mov
loop
mov
repnz
cmp
dec
dec
xor
inc
cmpsb
or
lret
mov
inc
subl
mov
loope
cwtl
aaa
xlat
cld
hlt
daa
mov
pushf
ja
sbb
inc
or
jle
push
pop
clc
and
leave
adc
xchg
std
cmp
adc
les
aaa
daa
push
ja
add
xchg
mov
xchg
test
popf
push
aad
push
rcrl
sub
mov
scas
imul
out
pop
lahf
orl
pinsrw
and
mov
xor
sbb
sahf
xor
cmp
outsb
std
dec
movsl
les
pop
fisubrl
push
sbb
stc
jge
rcll
aam
in
fwait
cmp
loop
test
push
mov
push
or
stos
mov
outsl
pop
scas
xlat
push
loop
sbb
mov
push
leave
cld
fs
int
or
add
push
adc
ret
sbb
dec
js
xchg
push
adc
mov
xor
sbb
sub
outsl
aas
sbb
inc
hlt
add
pushf
repnz
mov
aad
movsl
mov
pop
jno
push
test
repnz
aaa
in
mov
inc
in
add
or
hlt
push
divb
sub
jno
xchg
pop
fs
add
jnp
add
ja
sbb
std
enter
mov
sub
cmpsl
lcall
cs
shll
push
fwait
popf
mov
jne
leave
adc
ret
inc
gs
pop
xchg
ret
ljmp
daa
pop
pop
jnp
pop
in
hlt
xchg
std
jg
sbb
jmp
adc
imul
les
cmp
xor
mov
ffree
inc
inc
mov
cmp
mov
sbb
repz
push
fsubrs
movsb
test
sbb
imul
xchg
loop
stc
mov
fwait
push
data16
mov
mov
mov
repz
aad
xor
inc
cmpsl
cmpsl
daa
inc
sbb
fisubs
xchg
dec
popf
rclb
ja
jecxz
je
faddl
out
jl
mov
aas
jl
adc
mov
pop
xor
dec
test
das
popa
stos
fnsave
jecxz
mov
int3
shll
mov
push
mov
dec
call
imul
inc
daa
shrl
sub
les
fnstenv
sbb
lods
sub
shlb
jge
cltd
fstl
clc
jmp
sbb
addr16
in
mov
sahf
xor
jno
aas
cmpl
repz
pop
insb
xchg
mov
xchg
push
bound
push
fldcw
bswap
xchg
mov
dec
outsl
insb
fisubrl
leave
popa
call
push
pop
mov
jge
dec
push
adc
adc
cmp
push
lea
jge
mov
or
ret
inc
rclb
or
mov
mov
pusha
push
mov
push
shlb
sbb
outsb
rorb
cmp
jne
icebp
mov
rcrb
sbb
inc
gs
pop
inc
out
cmp
mov
cmp
and
xchg
mov
dec
and
int
lahf
mov
jns
mov
clc
sti
dec
sub
sahf
mov
aam
adc
dec
pop
dec
add
es
mov
push
inc
jecxz
sub
enter
cmp
sub
push
sbb
pop
aad
out
stc
xchg
xchg
add
jecxz
test
jg
push
insb
adc
cmpl
dec
lods
sub
hlt
cmc
bound
add
jne
jge
pop
inc
iret
jecxz
or
les
sub
mov
mov
jb
sub
aad
pushf
sbb
orl
push
push
lret
xchg
push
cwtl
sbb
in
je
mov
ficomps
add
arpl
push
push
data16
and
stos
pusha
push
mov
lods
int
inc
mov
ljmp
sub
sub
and
pop
mov
ret
pop
jae
pop
mov
sbb
lret
mov
mov
outsb
stc
add
rcr
out
push
sub
movsb
mov
and
and
or
cld
sub
dec
sbb
push
push
inc
xchg
repz
frstor
test
test
add
sbb
pop
movsb
sub
add
dec
loope
push
aas
ret
mov
ss
outsb
dec
cmp
shl
push
or
fs
fildl
jno
out
or
pop
cmp
fldt
dec
mov
shrl
fbld
cld
pop
xor
arpl
mov
dec
lods
dec
inc
mov
lret
cmp
loope
bnd
lods
mov
dec
or
add
mov
popa
push
xchg
dec
cs
jge
xchg
jno
fsub
cs
cmpsl
adc
notl
fsts
jnp
mov
std
in
mov
adc
pop
pop
cltd
push
cmp
dec
mov
shll
cltd
jl
loop
nop
mov
sub
test
jg
push
movsb
imul
in
aad
fnstcw
out
push
jo
add
fistps
cmp
lock
sub
shlb
cwtl
sub
push
mov
gs
jmp
mov
sub
xor
jecxz
lds
inc
out
sbb
int
scas
adc
nop
sbb
cli
scas
cltd
and
and
pop
aad
jnp
or
out
shrl
mov
xchg
and
mov
test
rorb
sbb
lcall
xchg
inc
jecxz
jge
inc
sub
insb
setge
leave
cmc
xor
jp
and
sbb
xor
mov
cld
fsubrl
nop
push
push
fdivrl
icebp
out
les
jb
cmp
cmp
cmp
pop
push
mov
aaa
leave
or
jg
mov
or
repz
addr16
xchg
xlat
jo
and
je
xor
sub
pop
pop
cmp
push
or
add
sahf
mov
pop
mov
inc
or
xchg
mov
xor
js
fmull
xchg
push
arpl
stos
stos
leave
xchg
mov
jmp
mov
hlt
and
mov
lahf
and
or
mov
mov
lret
jae
out
mov
lock
lods
cmc
aam
or
xchg
mov
jno
stos
push
inc
dec
adc
mov
mov
out
adc
jnp
inc
mov
test
xchg
mov
and
jne
cs
nop
inc
in
cmpsl
xchg
out
sub
sub
repnz
dec
out
jmp
dec
sub
lods
shlb
lret
xchg
adc
jmp
loopne
icebp
mov
adc
push
in
shrb
jecxz
icebp
imul
push
mov
mov
mov
xor
dec
mov
xchg
mov
outsb
and
push
pop
outsl
in
pop
and
and
sbbb
add
test
jns
add
fistl
sub
cmpsl
add
popa
stos
mov
loopne
push
pop
addb
xor
sbb
cmpl
xor
mov
cli
inc
lcall
arpl
fidivrs
add
fisubrs
inc
lret
sbb
add
mov
movsl
sbb
js
mov
les
aas
int3
xchg
add
lahf
imul
sbb
sahf
jl
int
nop
mov
jge
and
xor
mov
addr16
aad
call
xor
cs
insl
cmpsb
or
inc
xchg
mov
cwtl
in
mov
sub
pop
mov
aad
mov
cmp
sahf
mov
hlt
test
fstps
xchg
pop
hlt
fldl
aaa
in
pop
mov
imul
xor
mov
mov
dec
jno
fnstcw
sub
xchg
imulb
or
pop
arpl
dec
mov
mov
xchg
sub
adc
mov
jle
mov
push
mov
push
lahf
xor
out
imulb
sbb
mov
fstl
dec
pop
stos
mov
out
loop
jecxz
sub
cli
subb
cltd
dec
inc
push
xor
lods
pop
mov
lcall
xor
inc
icebp
insb
clc
addb
js
mov
sahf
add
lds
movsl
lods
cltd
rcr
xlat
inc
aas
hlt
inc
mov
dec
addl
imul
sbb
xlat
jno
dec
pop
jne
pop
xor
fldt
lret
cmp
push
push
mov
call
xchg
mov
pop
or
mov
popa
insl
mov
out
mov
bound
pushf
test
jge
jecxz
adc
jo
imul
scas
jns
sub
cwtl
into
xor
jo
in
mov
mov
jg
shrl
sahf
les
mov
repz
jns
jl
out
cs
jg
xor
mov
mov
es
cmp
xor
out
cld
or
lret
outsl
add
push
mov
aas
nop
and
jl
mov
arpl
add
pop
adc
rclb
stc
and
pop
rcrl
mov
mov
ret
daa
and
stc
scas
pop
call
out
jmp
mov
popf
test
xor
test
cmp
shll
rcrb
test
dec
xorl
lcall
push
fldenv
test
fsubrl
xchg
inc
mov
lret
add
jmp
adc
mov
jae
pop
fistpll
cmp
loope
add
dec
rolb
xor
lret
shlb
add
scas
shlb
push
pop
cmp
pop
aad
filds
loopne
or
repz
xchg
fiaddl
push
fadds
mov
push
out
popa
sub
outsb
dec
shlb
mov
test
movsb
jmp
lea
and
js
xor
or
push
fmul
mov
add
adc
jb
jae
jp,pt
clc
cltd
inc
enter
jbe
sub
jge
imulb
push
pop
xor
cmp
scas
popa
aas
out
sbb
les
cmp
out
mov
cltd
xor
xlat
xor
sbb
mov
in
pop
repz
add
inc
inc
cltd
aad
cmp
rcr
sahf
push
in
sub
xchg
cmc
jmp
add
sub
xor
rorb
clc
adc
sbb
xchg
sar
int3
test
push
addr16
pop
xor
xor
ja
mov
addb
scas
jecxz
lods
or
or
movsb
dec
lret
data16
push
inc
pop
adc
xlat
push
xlat
testb
xchg
test
outsl
lds
inc
int3
cmpsl
add
jno
mov
sbb
xorl
adc
je
stos
adc
and
sbb
in
fisttpl
test
pop
pop
inc
push
cmp
jbe
inc
shll
cld
shl
or
and
cmpl
dec
mov
jl
xchg
leave
mov
sbbb
inc
pop
inc
mov
jge
jl
ret
rolb
cmc
dec
popf
xchg
xchg
loope
in
xlat
leave
leave
jp
add
add
cli
xor
js
pop
mov
ja
add
push
mov
std
scas
les
jae
mov
icebp
test
mov
subl
in
mov
and
and
leave
mov
pop
sbb
movl
jmp
jnp
or
mov
jle
mov
mov
repnz
scas
push
cs
pop
int3
cli
dec
cwtl
mov
mov
or
movsl
mov
push
mov
mov
cmp
test
pop
dec
xor
push
and
pop
cmp
or
dec
test
jae
pop
mov
shrl
xor
mov
adc
inc
imul
jns
pop
adc
cmp
mov
andb
jle
outsl
mov
push
sub
js
pop
stc
or
push
lahf
ja
aad
mov
push
loope
adc
aam
inc
test
iret
sbb
jo
lret
mov
mov
pop
pop
mov
push
mov
sub
daa
addr16
out
call
adc
dec
pop
fidivs
js
mov
sub
mulb
lods
call
mov
push
test
mov
mov
pop
pop
and
ret
mov
pop
cmp
xor
test
pop
lods
mov
mov
jno
hlt
aaa
push
lret
in
test
mov
imull
sub
and
inc
inc
xchg
fsubrs
mov
mov
ret
add
aaa
cmc
xor
and
int
xorl
jae
idivb
jl
mov
cmp
push
adc
push
ja
dec
adc
insb
ss
pop
in
add
les
call
loope
jg
jno
sbbl
add
dec
jge
mov
jbe
xor
push
orl
out
int
mov
push
cwtl
imul
push
loope
xchg
in
dec
mov
pop
imul
xor
ret
sbb
int3
leave
inc
repz
xchg
mov
or
ror
lcall
inc
cwtl
js
sti
movhps
aaa
es
cmc
fucom
dec
mov
out
cmc
xchg
jbe
loope
mov
divl
fiaddl
ljmp
and
xchg
lock
mov
loope
mov
push
popa
mov
xor
adc
mov
int
orb
mov
mov
lahf
out
dec
adc
push
jl
fbstp
dec
addb
and
or
cmpsb
pop
dec
imul
es
mov
mov
sub
adc
lahf
mov
iret
inc
or
xor
ret
mov
test
sub
inc
scas
loopne
mov
bound
test
jnp
mov
jmp
mov
iret
bound
aaa
pop
arpl
out
sbb
test
loopne
lret
aad
jle
movsb
lods
imul
add
xchg
jp
adc
out
test
jl
mov
pop
iret
int3
rcll
inc
jo
loopne
sbb
leave
jnp
and
cmp
fstpl
rol
sub
jbe
repz
cmp
cs
pop
add
xor
push
rorl
and
sub
and
rorl
in
mov
psubsb
mov
xlat
adc
jnp
aas
pop
xchg
pop
nop
negl
push
imul
xchg
out
jmp
mov
mov
xlat
inc
cmp
pop
ljmp
fld
mov
mov
mov
pop
rorl
mov
test
xor
xor
sti
jbe
and
pusha
and
sbb
or
rcrb
dec
scas
jg
repnz
lock
out
sbbl
outsb
jne
stc
inc
divb
das
inc
mov
jmp
repz
xchg
or
in
les
dec
rorl
or
xor
dec
adc
xor
pop
imul
fisttpll
xchg
xor
fnstcw
bound
jns
out
loope
dec
aam
mov
inc
sub
shll
mov
leave
lods
in
mov
out
ljmp
inc
add
adc
xor
loopne
in
inc
push
adc
movsl
lock
jle
cmp
push
out
ja
xor
pop
adc
or
lcall
or
mulb
push
adc
imulb
jg
mov
jge
rclb
lods
insl
sbb
inc
aad
dec
int
push
and
mov
pinsrw
sbb
sbb
imul
mov
jns
mov
sub
in
mov
nop
hlt
push
xchg
xchg
dec
pop
fistpll
jg
sti
test
push
int
push
lahf
add
imul
cmp
cli
outsb
lods
sbb
mov
jo
push
nop
pop
nop
out
hlt
out
xchg
aas
stc
mov
lret
fcomp
dec
std
adc
pusha
repnz
xorb
mov
lahf
out
addl
shrb
dec
sbb
sub
ret
je
jo
pop
fldl
jmp
mov
adc
ja
adc
dec
xor
jmp
test
es
lahf
and
jecxz
icebp
cld
pop
test
and
out
aad
inc
and
mov
cmpsl
or
push
mov
dec
jnp
sub
cmp
adc
xchg
push
mov
movb
or
mov
xlat
xor
mov
cli
jbe
fs
test
fsubs
scas
push
movsl
adc
cltd
inc
mov
cmp
jle
dec
aad
adcl
out
test
rclb
xchg
mov
stc
fnsave
hlt
and
pop
inc
add
mov
das
pop
jo
xchg
push
pop
sbb
jle
push
mov
xor
lea
fistl
pop
xchg
mov
or
inc
je
lret
dec
cmpsb
xchg
push
sub
inc
push
movsb
outsl
inc
adc
repnz
lods
enter
pop
xor
sbb
int
cld
lods
jle
movsl
cmp
or
inc
xchg
cmp
jle
int3
popf
push
xchg
scas
inc
cwtl
test
adcb
inc
inc
movsl
cmp
push
add
dec
lahf
jnp
icebp
jno
push
incb
ret
ja
int
sahf
jl
sub
xchg
sbb
jno
mov
xchg
jae
or
xor
mov
incb
inc
les
rsqrtps
xor
push
xor
daa
add
adc
adc
fisubl
fmuls
push
ljmp
fwait
sub
pop
aam
dec
enter
cmp
adc
xchg
adc
sahf
add
or
inc
mov
push
push
sahf
and
stos
mov
loop
fadds
pop
enter
dec
dec
fidivrs
das
loop
sbb
xor
jl
fistl
cmp
lret
outsl
inc
das
mov
xchg
inc
mov
push
push
jae
fistpl
rclb
xchg
int
scas
jg
push
mov
mov
jl
mov
mov
adc
sub
inc
mov
rol
inc
cmpsl
cs
mov
cs
pop
cmp
sbb
ds
fistpll
mov
xor
out
cmp
xchg
popa
push
les
sub
int3
and
pop
dec
fsubl
fs
adc
aaa
sub
mov
lds
jle
pop
fistps
arpl
mov
push
pop
stos
jbe
movsl
jg
push
sbb
push
adc
or
imul
xchg
inc
add
fs
sbb
je
out
push
dec
es
sub
pop
push
jb
repnz
inc
mov
pop
jb
in
ljmp
pop
mov
sub
mov
scas
pop
fadds
popf
adc
fstpl
les
dec
jbe
int3
adc
movsb
aam
sti
ffree
les
add
mov
mov
cmp
xor
imul
inc
andb
push
outsl
pop
mov
push
xor
adc
mov
cmp
pushf
icebp
inc
test
insb
cmp
lea
lods
mov
scas
mov
pushf
out
jl
mov
idiv
fsubrs
adc
test
lock
push
mov
push
in
pop
or
and
pop
pslld
filds
mov
movl
inc
mov
sub
mov
mov
pmulhw
test
xchg
int3
repnz
ja
push
ss
push
dec
adc
sahf
and
push
aam
in
nop
int3
repnz
push
and
aam
ud1
cmp
fs
sarl
sbb
mov
xchg
ja
lcall
in
add
lds
jmp
cmp
mov
imul
fs
mov
fdecstp
sar
fs
popa
inc
mov
sarl
pusha
pop
shlb
shrb
pop
fildll
movsl
aam
mov
movsl
push
movl
fsubr
push
cmp
out
test
xchg
sub
sbb
fwait
and
fisttpll
add
cmc
aam
fcomps
mov
scas
repz
out
add
imul
cmp
mov
adc
icebp
cwtl
pusha
jb
add
rorb
movsl
int3
sub
inc
or
pop
insl
mov
xchg
mov
test
adc
inc
or
mov
jbe
pop
pushf
add
dec
scas
fdivrl
sub
mov
enter
add
mov
cmpl
sbbb
jbe
idivl
in
cli
in
repz
and
outsb
push
xor
mov
dec
xlat
es
loop
test
xor
and
dec
xor
mov
jp
lret
sub
repnz
xchg
push
dec
stos
add
xlat
sahf
cbtw
test
in
fiaddl
fldcw
aaa
xor
push
insl
jb
lcall
jg
testb
pop
or
xchg
sbb
movsb
mov
jae
andb
jbe
ja
jns
ljmp
inc
loopne
jle
mov
push
cld
xor
imul
les
dec
mov
push
mov
scas
cmp
bound
inc
repnz
sti
idivb
js
pop
mov
pop
pop
inc
icebp
outsb
xchg
cmc
cmp
cmp
ds
xlat
sub
ss
push
das
adc
mov
jp
clc
and
in
jp
cmp
stos
imul
nop
xor
inc
push
mov
lea
lds
fildl
inc
pop
in
iret
in
add
cmp
cmp
out
sbb
add
inc
sbb
xchg
mov
rcl
push
adc
push
sahf
or
pop
iret
add
xor
movsl
xchg
movsl
in
out
hlt
lods
jl
inc
xchg
jl
and
pusha
popa
fsubrl
adc
cmpsl
jbe
xchg
outsl
pop
imul
fiaddl
lret
xchg
mov
repz
cs
xchg
mov
pushf
lea
mov
xor
insl
cli
fsubrs
and
push
sbb
std
adc
arpl
out
fwait
sbb
in
or
add
data16
push
jbe
std
fs
adc
mov
mov
push
lods
test
idivb
sbb
sub
cmp
sub
sbb
sub
push
xchg
lcall
xchg
mov
testb
fwait
push
mov
cmp
arpl
mov
decb
ret
jne
in
adcb
push
or
cmp
or
or
mov
mov
std
addr16
cltd
cwtl
mov
iret
out
lret
rorb
or
andl
stos
cwtl
cmpsb
ret
fsubl
adc
addb
cmp
sbbb
cmc
in
mov
lahf
mov
pop
dec
arpl
jmp
bswap
add
or
fisttpll
cmp
in
sub
aaa
scas
cld
add
add
and
push
push
jns
xlat
mov
out
popa
movsl
pushf
xor
dec
sub
or
xor
int3
adc
hlt
aam
call
mov
outsl
jo
sub
jmp
sti
push
iret
sub
repz
lret
cmc
mov
addr16
pop
nop
popa
or
dec
or
adc
add
loope
jge
mov
das
jne
lcall
mov
sahf
or
jp
jne
in
mov
stc
jmp
lds
dec
pop
sbb
add
xchg
mov
je
and
xor
mov
pusha
stos
clc
aam
sub
insb
dec
sub
sub
jg
addr16
jnp
inc
xor
cmp
lods
js
dec
dec
mov
lock
jecxz
stos
ret
dec
pusha
push
mov
mov
sub
push
lds
xchg
adc
cs
dec
iret
sbb
xor
jns
or
fbld
mov
mov
sub
sbb
aad
fimuls
push
lock
adc
cmp
fdivrs
fsubrp
shlb
inc
pop
pop
fsubrs
inc
jl
adc
dec
cmpsb
push
inc
inc
adcb
iret
inc
mov
lds
xchg
jbe
outsl
testb
cmp
lret
pusha
mov
ljmp
inc
adc
push
mov
jmp
lea
adc
mov
xor
mov
sub
es
data16
cld
sahf
sbb
push
cs
xchg
adc
mov
cmp
rorl
scas
sub
enter
or
arpl
leave
xchg
xchg
mov
pop
mov
pop
xchg
adcl
dec
push
adc
jns
cltd
mov
inc
sti
mov
in
scas
and
xchg
stos
fchs
data16
adc
js
mov
inc
inc
dec
call
add
mov
enter
imul
icebp
mov
ja
mov
add
in
mov
push
pop
pop
outsb
sti
and
call
lcall
xchg
or
loopne
xor
repnz
repz
lret
loope
and
js
push
jb
jne
mov
insb
into
outsb
es
ljmp
add
fidivrs
daa
inc
xchg
adc
dec
xchg
outsb
popf
cld
in
prefetch
pusha
nop
cmp
clc
xor
xchg
mov
mov
ja
jg
out
dec
pop
stos
add
and
cmp
ss
add
mov
cli
sti
imul
mov
shlb
icebp
popa
pop
loop
gs
out
jmp
dec
push
enter
pop
nop
or
sub
icebp
fdivr
in
pop
xor
pop
cmpsl
jae
dec
imull
pop
imul
mov
add
stc
sub
or
mov
in
pop
pop
push
mov
or
mov
popf
stos
orb
loop
xchg
or
popa
mov
gs
cmp
jp
pop
mov
cs
xchg
in
mov
decl
clc
out
call
push
or
xor
adc
mov
inc
cmpsb
test
out
gs
cmp
mov
xchg
push
testl
cmp
mov
xor
pop
std
mov
pop
sbb
int3
fildll
mov
imul
shr
and
lea
inc
lret
mov
repnz
daa
jp
into
jne
pop
jle
enter
sbb
push
dec
xor
lods
lcall
cmc
addl
ficoms
add
loopne
add
nop
icebp
inc
jmp
andb
dec
test
aaa
outsb
lret
inc
or
push
ja
cmpsb
inc
jnp
aad
cld
enter
xchg
shlb
lods
call
add
imul
insb
cli
mov
stos
mul
push
pop
rcr
add
xor
xchg
push
arpl
stc
pop
out
and
cld
jle
imulb
es
push
push
or
popf
stc
cmp
leave
sub
add
mov
je
xchg
xchg
daa
jo
inc
decl
xor
xchg
push
dec
insb
pusha
push
enter
mov
and
mov
cwtl
cmp
xor
push
sub
insl
pushf
inc
imul
mov
adc
push
imul
jne
mov
leave
insb
inc
mov
jae
pop
psubb
mov
push
leave
dec
jg
rcr
add
mov
dec
lock
push
js
xor
int3
jns
test
scas
sarl
mov
adc
inc
mov
leave
nop
add
pop
jb
fidivrl
push
ds
call
inc
xor
mov
sub
push
aaa
aad
bound
push
jp
cld
mov
xchg
or
call
or
cltd
xor
adc
xor
data16
shrb
mov
push
popaw
xorl
shl
mov
fwait
roll
test
cmp
and
or
mov
sbb
lds
inc
push
xchg
jb
les
cmp
mov
inc
mov
mov
rorl
aas
out
movsb
test
mov
xchg
dec
negl
insb
movsb
jbe
aaa
int
and
cmp
xchg
mov
mulb
sub
or
sbb
shl
incl
out
adc
imul
in
sbb
fsubr
mov
xchg
cmp
xor
jae
pop
mov
subb
or
fdivrl
testb
push
clc
jle
mov
loop
sbb
sarl
enter
fldl
xchg
call
pminub
lock
mov
xchg
mov
or
ss
into
cmc
outsb
call
and
cmp
popf
pop
mov
xor
pusha
mov
test
jp
daa
adc
cmp
das
add
mov
test
test
dec
jmp
push
inc
es
jmp
dec
cltd
adc
xchg
dec
dec
jecxz
cltd
sbb
cmp
and
mov
jmp
cmpb
dec
fisttpll
cmp
xchg
inc
mov
xlat
aas
xchg
fisubs
lahf
mov
pop
data16
dec
mov
pusha
loopne
jecxz
mov
jecxz
jge
insl
cmp
pop
int3
jge
xlat
pusha
jae
sub
les
xchg
stc
mov
inc
adc
pusha
in
jo
or
cmp
loope
stos
jne
push
jb
repz
rorb
sti
movsb
out
lret
dec
jns
inc
les
inc
sbb
cmp
or
xorb
std
sahf
je
jo
inc
xchg
inc
mov
fdivrs
das
jle
xorl
scas
ret
push
add
test
sub
negl
jge
push
pop
xorb
orl
push
sub
mov
js
clc
mov
push
mov
cwtl
daa
push
mov
xor
orb
ja
ljmp
sbb
pop
mov
mov
mov
dec
int3
cmp
int3
ja
inc
les
popf
fwait
lods
mov
dec
jg
push
cmp
loop
mov
dec
ds
xchg
xor
test
js
mov
aaa
int
aaa
jl
sub
notl
into
pushf
pop
scas
xor
ret
mov
stc
in
test
rorl
sbbl
test
outsl
mov
sbb
cmp
pop
sti
xor
ljmp
and
ljmp
sub
adc
outsl
add
mov
or
push
in
lahf
or
or
mov
adc
mov
enter
adc
in
insl
push
jb
mov
sbb
int
cmp
xchg
inc
and
dec
jg
sub
pushf
xchg
jecxz
ret
jmp
mov
sub
xchg
out
xchg
pop
pop
and
pop
cwtl
sarb
shl
in
fstpt
mov
inc
jbe
xchg
jl
mov
pop
inc
icebp
js
shlb
xor
mov
mov
push
out
mov
js
cmp
push
adc
lret
aad
pop
in
push
in
jge
frstor
gs
xchg
scas
shrb
leave
ret
jbe
jl
push
xor
pop
subl
or
bound
popa
push
xorb
push
mov
das
inc
pop
paddsw
mov
idiv
add
mov
mov
cmpsl
cmpxchg8b
pop
adc
arpl
popf
das
add
cmpsl
mov
movsl
std
cmc
leave
mov
pusha
mov
sub
lds
sbb
xchg
sti
cmp
test
inc
scas
lret
imul
repz
inc
icebp
or
pusha
repnz
fsts
rolb
pop
xchg
push
stc
data16
mov
xchg
inc
dec
fs
mov
mov
sbb
repz
jno
add
bound
ret
das
pop
das
out
rcrb
jnp
add
inc
call
mov
jp
ss
sti
leave
push
fucom
jge
negl
in
orl
pop
xor
lea
lock
lahf
nop
xchg
jmp
aam
sbb
pop
repnz
xchg
inc
std
out
dec
enter
inc
jae
lret
adc
cs
lret
mov
fldenv
loope
shlb
jmp
jns
jnp
nop
shll
pop
jb
push
pop
dec
vcomiss
xorb
flds
adc
cmp
shlb
js
xchg
sub
mov
pop
shrl
xor
fimull
aaa
sbb
mov
push
push
jns
popa
aad
cmp
mov
add
push
xor
ljmp
fistpll
cmc
dec
mov
inc
outsb
rcrl
mov
pushf
mov
adc
lea
outsl
js
pop
adc
gs
pop
mov
adc
cld
mov
in
mov
lock
arpl
adc
ficomps
xchg
lds
xor
lods
lret
sub
call
and
scas
fmuls
mov
push
movsl
mov
cli
cmc
mov
imul
mov
cwtl
pop
mov
add
mov
movsl
add
mov
and
sbb
mov
inc
inc
jecxz
je
mov
and
lds
xor
mov
or
outsb
cmp
bound
mov
sub
repnz
push
mov
mov
dec
or
push
inc
sar
and
mov
push
ss
push
xor
xchg
sahf
pop
mov
das
inc
int3
inc
push
add
addl
test
cmp
sbb
inc
sbb
fcoms
test
inc
mov
das
push
call
add
fs
dec
stos
lods
pop
xor
or
dec
std
dec
and
or
push
xor
shrb
jnp
aad
pop
inc
stc
mov
icebp
pusha
xchg
mov
mov
cltd
es
mov
das
jne
lahf
or
adc
loope
xchg
xchg
add
mov
xor
push
in
sub
pop
push
adc
sbb
jns
sbb
pop
add
lea
bnd
cmp
dec
push
js
push
enter
arpl
sbb
gs
pop
cs
mov
push
lret
ss
and
loopne
stos
std
xchg
and
loope
flds
and
enter
es
sbb
sbb
out
xchg
jb
or
mov
loope
int3
cld
xchg
push
jns
int3
data16
stos
ja
fs
lahf
jle
and
mov
sti
or
fwait
dec
movsb
daa
imulb
add
roll
mov
pop
pop
jge
or
mov
fnstsw
lret
pop
lahf
loop
sbb
and
mov
sub
or
xor
jle
test
fcompl
inc
inc
fiadds
lret
push
sbb
arpl
test
sbb
xor
cltd
pop
mov
imul
push
adc
cli
fwait
lahf
sub
daa
or
out
in
jbe
jecxz
inc
das
cs
mov
in
hlt
out
mov
jge
cwtl
mov
loop
outsl
add
rcl
rcl
sahf
sub
out
mov
push
roll
test
cmp
pop
jns
mov
fmull
aam
out
mov
xchg
sub
addr16
inc
cmp
push
pop
int3
dec
sub
jg
popa
cmc
mov
setb
inc
and
inc
test
xchg
movsl
dec
jp
shll
out
ja
inc
or
enter
xor
arpl
or
ror
hlt
movsl
repz
and
cwtl
jecxz
dec
pop
aam
shlb
mov
cmp
scas
lahf
push
mov
std
sahf
nop
mov
roll
clc
cmpsb
pop
pop
repnz
or
lea
sbb
cmp
mov
lahf
sbb
pop
cld
daa
ja
and
mov
loope
outsl
sbb
lret
shrl
pop
mov
daa
stc
icebp
loope
ljmp
mov
mov
xor
leave
scas
cli
int3
movl
mov
adc
cli
inc
adc
clc
lock
mov
dec
dec
je
cwtl
in
fld
cmp
in
jne
or
push
stos
sub
inc
xchg
into
dec
fisttpl
or
inc
adc
add
jns
daa
sbb
in
stos
mov
cs
clc
cmpsl
fdivs
add
out
push
shrb
data16
icebp
out
mov
movsb
movsb
mov
shll
test
jbe
mov
xchg
loopne
cbtw
jne
in
dec
arpl
divb
call
inc
push
sahf
inc
xlat
xchg
je
jecxz
and
push
and
es
outsb
inc
or
adc
mov
shr
int3
out
mov
lcall
lods
test
add
mov
jecxz
cmp
or
lcall
inc
ficoms
mov
enter
nop
add
scas
inc
xor
mov
fstpl
dec
pop
xchg
push
xor
adc
outsb
push
jge
dec
pop
push
dec
daa
ret
xchg
or
sti
cmpsb
addr16
aam
movsb
dec
andb
lods
popl
aaa
lock
push
or
inc
jmp
orb
into
aaa
mov
fwait
fwait
in
movsb
mov
and
push
pop
sub
lcall
or
pop
in
mull
loopne
mov
mov
iret
aas
mov
or
das
ja
lret
pop
sbb
and
pop
lock
mov
sbb
call
in
xor
fldl
mov
cmp
inc
fwait
jp
cmp
aad
mov
jl
jmp
cmp
ljmp
mov
stos
cmc
xor
lret
xchg
out
rcr
imul
insl
lods
test
das
sub
inc
sbb
pop
cli
outsl
in
int3
push
mov
push
icebp
and
movsb
sub
inc
sub
and
leave
lods
das
sub
jmp
lods
pop
test
cmp
imul
mov
pop
jecxz
pop
out
in
mov
cmp
ror
leave
dec
cmp
jno
dec
jnp
sub
jl
pop
sub
fwait
outsl
xchg
ret
mov
pop
movsl
icebp
cld
inc
iret
dec
lods
sub
inc
lods
dec
pop
xor
ss
mov
mov
push
out
lcall
add
jge
add
sbb
fstpt
fidivl
bound
ss
stos
xchg
xor
mov
sub
scas
dec
scas
xchg
dec
test
stos
xor
call
push
cmp
jnp
cmpsl
mov
shlb
push
subl
pushf
dec
ds
mov
icebp
aas
adc
mov
add
sub
aaa
testl
vmread
aaa
cmp
or
mov
movsb
pop
shlb
pop
cld
lock
je
jns
repnz
cmp
std
fwait
sub
xchg
lock
inc
adc
enter
aaa
pop
pop
xchg
add
mov
repz
inc
mov
xchg
lret
dec
ret
dec
cmp
push
adc
mov
fs
test
imul
add
in
jmp
ljmp
jl
leave
movsl
adc
xor
fcmovu
mov
call
inc
pop
mov
aaa
push
outsb
test
js
sbb
dec
imul
push
sti
rol
and
inc
sahf
adc
push
adc
andl
stc
repnz
mov
adc
sbb
rorl
in
sbb
cmc
cltd
loop
lahf
pop
pop
jb
imul
pop
and
or
pop
adcb
push
jb
jg
cld
xchg
mov
pusha
mov
push
sbb
sbb
outsb
test
outsl
out
mov
cmc
push
adc
ljmp
xchg
in
dec
cwtl
sti
popa
in
lods
fcoms
je
pop
mov
and
dec
or
arpl
icebp
imul
out
outsl
dec
movsl
lcall
bnd
int3
adc
sub
push
lods
push
inc
xor
push
xchg
and
fsubs
sub
push
pop
pop
loope
imul
inc
bound
outsb
leave
xor
jp
push
nop
lcall
mov
les
mov
out
jecxz
sub
loopne
lret
lahf
inc
sbb
dec
mov
mov
xlat
and
cmpsl
mov
push
add
jne
pop
pop
pop
pop
xor
popf
jns
outsb
add
cs
xchg
cmp
jno
pop
and
out
sbb
rolb
dec
pop
lret
fcoml
popa
dec
hlt
mov
aaa
xor
pop
push
orb
push
sbb
out
lret
and
mov
ds
in
ficompl
scas
dec
sti
ftst
mov
aaa
dec
in
addr16
rcrb
lea
scas
push
xor
cmpsl
mov
js
xchg
push
mov
cmp
out
sub
aam
pop
lret
jbe
ret
sbb
in
sub
inc
popf
sti
mov
stos
cmpsl
ret
ds
push
add
mov
cmpsb
outsb
lock
movsl
adc
mov
sarl
cmp
roll
scas
stc
xor
sbb
mov
test
mov
fs
icebp
jl
das
mov
pop
adc
xchg
js
popw
stos
enter
out
int3
dec
dec
mov
jns
jo
into
pusha
sbb
ret
pusha
outsb
mov
lcall
dec
incl
add
adc
cltd
hlt
jp
insb
dec
sub
and
iret
mov
add
out
xor
rorb
es
mov
lods
cmpsl
push
imulb
ficompl
imul
jecxz
aad
xchg
cmp
fs
in
sub
add
inc
scas
xchg
sub
test
add
add
xor
adc
int
cmp
test
inc
nop
jnp
fld
loopne
shr
and
and
test
jb
clc
cmp
and
je
sub
jno
pop
sbb
adc
cmpsl
mov
inc
sub
lcall
dec
xor
add
aam
fwait
adc
or
cld
hlt
xor
xchg
sbb
pop
dec
jae
add
scas
mov
mov
lret
cmp
in
insb
loopne
add
inc
inc
bound
cmp
add
jmp
test
dec
mov
cld
rorb
jo
ffree
mov
repnz
pop
outsl
mov
loope
mov
aam
clc
xchg
ret
xchg
shll
sarl
inc
inc
adc
cmp
xchg
jns
clc
lods
cli
lret
ss
pop
cmp
in
movsb
sahf
outsb
cmp
stc
imul
inc
push
jb
push
call
lret
dec
mov
clc
pop
or
push
or
lret
inc
inc
pop
push
iret
mov
or
cs
and
lock
rcrl
mov
sti
sbb
ja
mov
repnz
data16
cmpsb
les
and
and
pop
out
lahf
movsl
adc
fstpl
cmp
sti
out
mov
jmp
lret
mov
sbb
mov
xchg
cmp
loopne
xchg
insb
mov
sub
mov
mov
shrl
or
fldt
repnz
ss
out
inc
mov
ss
pop
lods
loopne
int3
lods
out
mov
rep
or
inc
fldenv
mov
pop
test
test
mov
orl
mov
cmp
pusha
push
ljmp
inc
xchg
or
adc
xchg
pusha
leave
cmpsl
push
or
lea
imul
jecxz
dec
adc
lcall
rcr
ret
movsb
pcmpgtb
cmpb
sub
mov
adc
pushf
fldpi
xchg
cmp
ret
add
pushf
adc
es
cmp
dec
repnz
rcrb
sub
sahf
cs
push
das
and
add
mov
ja
cltd
adc
test
sahf
jecxz
adcl
jle
or
dec
inc
shr
in
adc
cmpsb
mov
inc
xor
xlat
sub
jg
sbbl
push
push
shlb
enter
ds
jo
jno
cmp
in
jne
ret
popl
mov
movsb
cmpsb
fimuls
jb
je
lds
push
mov
add
and
add
je
outsl
cmp
inc
popf
xor
adc
pop
inc
addl
aam
in
xchg
add
dec
add
stos
ss
pushl
ret
and
pusha
push
stc
and
pushf
jae
rorl
mov
xor
ffreep
ret
or
mov
jp
js
filds
mov
cmp
lods
movsl
inc
or
lock
cwtl
sbb
outsl
aam
hlt
orl
testl
incb
scas
mov
and
mov
mov
inc
mov
jl
lds
bound
lahf
jg
mov
xchg
enter
sti
les
lods
ljmp
rol
scas
aam
loop
xchg
mov
dec
mov
cmpsl
xchg
icebp
and
neg
sbb
rolb
es
fsubrs
fdivrs
pop
mov
divl
or
push
mov
xchg
fwait
jns
add
fldenv
jle
test
cld
jl
adc
pop
xchg
pop
insb
xchg
push
inc
xchg
adc
push
xlat
lret
xchg
dec
xor
mov
jb
pop
fwait
lcall
mov
mov
add
ficompl
jmp
ljmp
test
jle
mov
rcrb
loopne
and
pop
sbb
stc
pop
push
lret
push
mov
rcr
stc
cmp
sbb
flds
jnp
xchg
and
fwait
and
std
sub
sar
paddsw
push
je
aas
dec
and
add
adc
test
stos
and
sub
pop
push
ja
out
and
jl
jno
jecxz
leave
or
dec
dec
cs
in
cmp
sub
push
push
std
scas
dec
dec
xchg
notb
pop
lock
fsubr
mov
xor
inc
out
push
or
mov
call
jecxz
orl
inc
push
jne
and
mov
imul
adc
test
rcl
repz
adc
out
pop
push
outsb
sbb
loop
cli
mov
ljmp
inc
daa
lods
xchg
xor
test
dec
repz
cltd
mov
ds
or
sbb
testl
ljmp
mov
mov
dec
jmp
mov
shll
inc
das
sub
dec
push
sbb
adc
lahf
jmp
add
dec
mov
sbb
add
add
nop
daa
imul
push
in
stos
cwtl
fsts
adc
enter
hlt
sub
movsl
imul
lret
add
movb
mov
lahf
lock
push
lahf
inc
mov
lahf
sbb
sub
arpl
jno
nop
fnstsw
mov
mov
jecxz
mov
add
scas
cmp
jb
rcrb
or
sbb
outsb
enter
inc
cmp
dec
out
push
xorl
add
pop
data16
mov
das
ret
fisubrs
jmp
addl
loope
lcall
sub
xor
xchg
jae
arpl
dec
inc
cmp
jns
pop
jle
js
mov
dec
faddl
in
ja
and
nop
out
push
sub
and
push
aaa
test
mov
ss
jmp
xor
test
cmp
sbb
and
repnz
mov
mov
inc
sahf
cmp
je
sub
test
mov
ret
pop
shll
js
mov
mov
andb
sbbb
pop
out
mov
aaa
jae
cltd
cmp
cmp
test
push
pop
xchg
out
lock
add
dec
jmp
divb
jns
or
js
clc
jle
in
push
sbb
push
dec
ss
mov
lcall
or
ljmp
and
add
mov
sbb
inc
mov
or
cmp
repz
enter
arpl
test
inc
and
cmp
dec
adc
outsl
movsb
scas
and
mov
inc
mov
inc
shll
jp
pop
jns
pop
repz
fiadds
stc
pushf
clc
jl
outsl
fisubl
mov
inc
shll
adc
lahf
adc
inc
call
pop
dec
fimull
iret
int
pop
clc
loop
neg
sahf
adc
test
lea
jbe
mov
stc
lods
push
mov
sbb
gs
enter
xchg
jg
in
pop
inc
push
popf
outsb
jp
mov
and
mov
rolb
push
lods
push
pop
xor
jle
movsb
add
cs
out
loopne
mov
jo
fists
inc
add
arpl
cmp
mov
in
clc
mov
xchg
sbb
push
popa
cld
inc
ret
loop
sbb
fildll
in
loopne
je
or
stos
adc
mov
jno
fildl
jno
test
pop
mov
lret
clc
dec
in
dec
sbb
sub
mov
push
jge
dec
movsl
stos
or
dec
xor
clc
pop
pusha
mov
mov
out
add
inc
jo,pn
dec
lods
mov
mov
inc
sub
das
adc
aas
mov
mov
jle
xor
outsl
shll
stos
cwtl
daa
arpl
mov
sub
mov
sub
dec
mov
cmp
xchg
xchg
fmuls
iret
add
adc
popa
fdivp
jge,pt
gs
in
stos
jp
in
jl
pop
insb
outsl
inc
ljmp
into
sub
and
out
xchg
lods
loop
sti
add
jmp
out
aam
xchg
mov
add
adc
dec
add
ret
addr16
mov
adc
lret
sti
mov
mov
add
outsb
cmp
or
data16
lock
inc
out
sbb
adc
jge
fisttpll
int3
push
sbb
mov
iret
insb
mov
popa
jae
and
bound
add
push
insl
hlt
scas
push
es
inc
sub
xchg
mov
inc
movsbl
sub
cmovnp
fnstenv
cwtl
jge
les
jecxz
lahf
mov
and
fnstsw
push
cmpsb
out
inc
in
das
jl
push
jp
mov
sbb
sti
dec
stos
sahf
xor
jnp
sbb
pop
in
rcl
pop
push
in
jb
test
pusha
enter
in
push
addr16
sub
jnp
xchg
pop
mov
jbe
test
sbbb
fisubl
xlat
adc
outsb
daa
out
mov
roll
and
mov
in
insb
jnp
add
pop
sub
arpl
popa
loop
xor
xlat
xchg
mov
jb
lcall
lods
leave
repz
mov
lcall
adc
dec
xchg
cwtl
movsl
cmp
mov
mov
fildll
xor
xor
inc
push
fsub
ljmp
sbb
lcall
dec
addr16
pop
mov
ret
mov
pusha
xchg
mov
mov
loopne
int3
cmp
icebp
add
mov
in
cmp
and
in
xchg
dec
std
enter
pushf
in
pop
xor
inc
pop
mov
into
pop
xlat
dec
icebp
std
push
lock
lds
adc
in
aaa
sbb
bound
aad
std
iret
push
std
pop
jecxz
push
fbstp
mov
push
push
cmpsl
pop
icebp
xor
stc
jo
inc
sbb
xor
in
sahf
into
jae
sub
and
in
and
sub
cmpb
stos
je
and
xchg
adc
insb
push
jmp
dec
add
out
ljmp
je
mov
out
inc
sbb
outsl
mov
sub
aad
outsb
imul
jne
sub
cltd
std
push
xor
cwtl
out
mov
jp
mov
in
mov
aas
mov
pusha
loop
lock
push
sub
dec
jnp
scas
jnp
mull
ret
pop
test
cmp
xor
jecxz
aad
lret
flds
mov
sahf
sarb
adc
pop
arpl
add
fwait
adc
push
inc
push
stc
scas
pop
repnz
push
fs
cvttps2pi
int3
lods
icebp
mov
xchg
shl
scas
pop
xchg
and
int
mov
mov
xlat
adc
gs
sbb
call
or
in
cmp
inc
shll
xor
or
fadd
outsb
push
outsl
mov
insb
movsb
or
loopne
lds
inc
sub
scas
mov
pop
mov
dec
aad
jl
mov
jb
push
ljmp
adc
imul
pop
push
sub
sahf
jo
insb
sarl
mov
fadds
repnz
mov
mov
fbstp
movsb
adc
or
pop
push
mov
add
mov
xchg
sub
addr16
mov
movsb
in
mov
pop
addr16
pusha
jne
mov
dec
fidivrl
int3
lods
test
addr16
inc
pushf
adc
inc
push
mov
jmp
movsl
add
test
mov
xchg
cmp
pop
enter
pop
into
enter
in
jae
jbe
and
gs
scas
std
pop
jge
push
cmp
xchg
dec
sbb
mov
xchg
push
mov
inc
mov
mov
xor
mov
and
push
jnp
sbb
jae
jmp
add
mov
mov
out
fstl
inc
push
repz
fdivrl
inc
dec
fistpl
push
and
enter
sahf
dec
dec
inc
cmp
jnp
or
ja
cmpsl
test
sbb
stos
leave
loop
fwait
lahf
iret
gs
or
rorl
jmp
adc
mov
lds
divl
mov
sbb
sbb
sub
inc
dec
add
push
mov
push
lret
cs
pop
dec
mov
lea
fcmovu
repz
push
pop
adc
pop
sbbl
or
in
push
hlt
shlb
aas
insb
in
mov
pop
test
adc
or
mov
jno
je
push
outsl
in
or
mov
add
jno
push
pop
sub
xchg
push
adc
icebp
inc
or
inc
adc
fiaddl
jecxz
cmpsb
daa
lea
and
arpl
inc
and
fcos
mov
lock
mov
ja
xchg
jle
adc
movsl
sub
repnz
fcomi
adc
arpl
sbb
mov
insl
fst
or
sbb
push
cwtl
or
adc
inc
xor
das
fcmovbe
stos
imul
mov
mov
fs
add
outsl
int
sub
lods
repz
mov
jns
add
loopne
or
cwtl
sub
mov
push
in
mov
ret
and
call
inc
mov
into
xlat
out
pop
sbb
icebp
pop
sub
add
neg
ds
fidivrs
and
arpl
cld
test
pop
stc
jne
stc
addb
js
cs
std
xchg
mov
adc
pop
pushl
sub
iret
pushf
lock
add
out
int3
dec
daa
push
pop
push
adcl
outsb
shll
cmp
mov
test
jno
das
lahf
ss
js
addr16
adc
sub
iret
aas
pop
fdivl
mov
pop
push
ja
sub
shl
adc
out
dec
sbb
shrb
mov
push
mov
or
adc
nop
scas
xor
jg
pop
sub
add
scas
lret
dec
adc
js
dec
pop
jge
fnstcw
pop
xchg
mov
mov
inc
cmp
fdivl
and
xchg
mov
jnp
stos
popf
iret
test
rcrb
xchg
ds
lods
fistpl
aas
cmc
lahf
push
jmp
aaa
jl
mov
cmp
test
repnz
sarl
nop
push
jb
in
jb
fstenv
testb
idivl
or
mov
lock
fidivrl
fistpll
push
outsl
dec
adc
push
cli
fwait
fisubs
scas
sahf
fnstenv
aas
cltd
int3
cld
not
adc
ja
xchg
adc
pop
packuswb
pop
dec
jg
xor
fimuls
and
call
cmpsb
cmp
inc
mov
xor
test
dec
mov
lret
push
pusha
pop
cltd
jecxz
mov
inc
mov
sarl
out
cwtl
in
inc
pop
or
mov
hlt
cmp
sub
cs
push
lods
lea
xor
inc
rorl
pop
aaa
mov
xchg
mov
stc
ljmp
push
xor
add
lock
sti
add
sbb
pushf
es
stos
and
call
dec
cwtl
div
lahf
mov
aas
or
mov
push
mov
fbld
lcall
pop
mov
daa
mov
dec
pop
mov
cmp
push
or
es
dec
cwtl
repz
push
mov
addr16
stc
cmpsb
test
push
int
add
cmp
popf
xchg
mov
ljmp
xor
outsb
and
mov
les
dec
and
js
adc
dec
fists
adc
mov
pop
stc
lcall
xchg
mov
mov
sbb
adc
xor
mov
jb
mov
stos
jb
fnstsw
push
pop
sbb
mov
dec
and
sub
and
enter
in
ficomps
push
push
sub
imul
jmp
gs
cmp
shll
mov
pop
pop
in
rcl
int
jb
mov
test
pop
inc
dec
add
cmpsl
cmp
cltd
push
adc
adcb
movsb
xor
movsb
or
js
push
push
xor
lea
jno
mov
mov
shrb
jmp
jnp
scas
xchg
das
adc
mov
call
inc
test
imul
cwtl
loop
movsl
jg
stos
cmp
mov
test
das
ret
aad
or
out
mov
adc
lock
or
popl
test
mov
xor
jl
iret
adc
xchg
adc
loopne
or
popa
js
cltd
mov
arpl
or
mov
scas
mov
jo
int
xchg
imull
hlt
dec
lret
push
test
cmp
jl
jns
mov
in
lcall
xchg
inc
inc
cmpsb
jle
arpl
cmp
inc
fiadds
divl
dec
mov
std
pushf
adc
mov
and
and
jmp
mov
aad
leave
or
aaa
xor
mov
dec
fscale
adc
je
loop
push
outsb
popf
jb
lods
js
gs
das
mov
lds
jl
enter
adc
jns
dec
or
cwtl
mov
mov
data16
imul
xchg
repnz
cwtl
push
hlt
cmp
sub
xchg
ja
call
lock
addr16
iret
leave
shrl
pop
sub
imul
add
sbb
push
lret
clc
jo
das
inc
jo
jecxz
test
add
lret
outsb
adc
out
pusha
std
push
mov
push
ljmp
xchg
mov
mov
mov
dec
xchg
out
cmp
add
fiaddl
mov
mov
adc
mov
mov
xchg
adc
and
or
test
pop
push
lret
fbstp
das
sub
das
fucom
mov
fnstenv
test
push
or
push
in
nop
sahf
xchg
ffree
clc
in
jle
and
pop
or
push
ja
sub
fistpll
aad
mov
dec
es
xchg
loop
or
loop
pop
lds
cmpsl
fstl
testb
push
pop
ret
inc
dec
jmp
jb
sti
adc
mov
jne
inc
rep
xchg
lret
cmp
sbb
sbb
aam
fldl
xchg
decb
lret
sub
sbb
in
movsl
in
aaa
and
cmp
cld
int
movsb
mov
inc
sbb
and
cmp
cmpb
cltd
movsb
ds
adc
pop
pop
dec
pop
setge
sbb
pop
ror
or
push
and
fwait
mov
xchg
jne
aad
push
fcompl
xchg
test
cmp
sbb
test
pop
pop
clc
mov
push
add
dec
ljmp
dec
fildl
es
xor
lahf
jecxz
dec
fildll
xor
int3
xchg
loopew
in
pop
shrl
push
sahf
inc
or
lea
sub
leave
ds
jmp
mov
mov
shl
and
mov
test
pop
jge
pop
nop
clc
add
loop
out
gs
jno
mov
mov
push
int3
pop
movsl
imul
mov
lret
stc
sub
mov
inc
in
mov
iret
add
mov
cmp
js
adc
xchg
or
das
lea
xchg
jmp
fisttps
mov
pop
ja
ficoms
mov
vpunpckldq
mov
popf
mov
jecxz
test
rolb
imul
pop
out
adc
fcmovb
orps
inc
xchg
sarb
leave
enter
dec
ljmp
mov
pop
in
popa
and
loope
insl
jbe
fisttps
inc
idivl
inc
jecxz
adc
nop
sbb
xor
xchg
xor
int
adc
shlb
pop
data16
je
mov
dec
pop
mov
ficomps
loopne
mov
xchg
mov
mov
gs
mov
and
adc
cmp
pop
int
outsl
sbb
mov
cld
lods
cmp
std
test
xor
notl
jle
in
stc
cmpb
pop
dec
push
hlt
scas
out
jge
push
sbb
out
mov
push
xlat
cmpsl
adc
inc
inc
pop
ljmp
lahf
mov
mov
mov
push
inc
sti
mov
pop
in
setge
dec
mov
dec
mov
movsl
push
sub
aam
fistl
int3
dec
mov
inc
imulb
push
mov
cmpsl
les
adc
or
stos
inc
daa
movsb
jg
jecxz
imul
dec
in
das
mov
dec
pushf
std
lods
mov
mov
dec
stos
mov
xor
leave
rorl
fsub
call
bound
adc
or
sbb
out
push
ja
enter
std
imul
push
mov
mov
xchg
mov
hlt
push
cmpsb
cmp
lea
mov
cmp
repz
loop
push
pop
dec
test
ret
rsqrtps
repz
fsubl
mov
push
int
cld
xchg
pop
jl
mov
cld
cmc
xor
loope
mov
lret
test
push
jg
out
or
iret
repnz
mov
outsl
and
cwtl
movsl
sub
inc
imul
xchg
push
dec
aam
mov
fimull
jbe
cli
ljmp
jg
cli
int3
or
inc
mov
mov
lea
ffreep
fwait
and
jmp
fmuls
shrl
mov
mov
lods
pop
test
pop
cs
mov
xor
imul
xor
xor
repnz
mov
jle
in
es
ds
and
insb
sbbl
sub
lcall
xchg
mov
xor
jmp
out
daa
pop
cmpsb
fwait
outsb
and
es
aad
jae
and
push
jle
jmp
insb
adc
mov
mov
outsl
data16
dec
leave
inc
lods
push
add
and
dec
inc
fdivrl
jae
scas
cld
push
push
cmc
hlt
nop
fcomp
jo
sub
shll
jno
fildll
pop
dec
iret
nop
popf
mov
fdivrs
insb
sub
jg
adc
popa
lods
sub
mov
insb
aad
inc
int
aad
adc
mov
adc
fnstsw
or
or
and
and
lea
sahf
mov
mov
sub
repnz
sub
jge
lea
cltd
call
rcll
testb
xchg
dec
stos
xor
mov
mov
xlat
xor
xchg
call
mov
push
jge
das
sbb
inc
xchg
fsubrl
fisubs
cmp
popa
rorb
cmp
fmul
pop
lcall
jo
mov
int3
xchg
pop
div
pop
adc
jae
hlt
push
dec
pop
jns
jl
in
cltd
jmp
int3
les
sub
jae
xchg
rcl
movsb
cmp
pop
push
mov
fsubrs
aaa
loopne
or
or
loopne
insb
cmp
mov
sbb
cwtl
sti
lahf
arpl
pop
clc
xchg
test
mov
iret
sti
pop
sbb
push
add
insl
mov
out
shrl
mov
fs
repz
jae
jns
outsl
out
aaa
stos
testb
mov
test
lahf
sub
and
pop
imul
cmpsb
push
sbb
sbb
mov
fadd
sbb
dec
bound
sti
or
loope
out
mov
push
jp
fnsave
xor
daa
pop
cmpsb
mov
jns
dec
addb
arpl
clc
and
mov
jne
cmp
out
imul
mov
xchg
jno
sub
inc
mov
outsl
mov
outsb
hlt
cmc
adc
mov
push
repnz
mov
stc
adc
jno
lods
mov
add
fldl
mov
mov
out
aas
loopne
es
pop
iret
and
shrb
into
leave
imul
jg
cmp
jb
jne
mov
fdivs
mov
lds
sbb
test
ja
inc
adc
mov
das
sbb
idiv
and
xchg
out
fistps
cmpb
nop
push
sti
xchg
fcomps
mov
test
xchg
jno
mov
fs
mov
mov
or
mov
jo
insb
fistps
rorb
pop
mov
xor
sbb
clc
adc
addr16
add
cs
xchg
test
xchg
cltd
scas
cltd
ret
or
xchg
mov
arpl
xchg
sbb
stos
sub
or
jno
push
paddusw
in
stos
in
outsl
lds
mov
out
popf
rcrb
dec
stos
jecxz
mov
sub
mov
push
mov
daa
sarl
add
shrb
jmp
or
cltd
sbb
out
xor
mov
subl
jge
xchg
cmc
mov
lret
mov
enter
mov
lea
or
test
call
repnz
stos
sub
sbb
pop
dec
loopne
pop
push
and
mov
int
push
ljmp
dec
mov
push
into
mov
or
out
mov
sub
roll
sub
add
sub
push
scas
outsl
pop
cs
mov
jl
cmp
icebp
cmpsb
and
addr16
scas
sbb
mov
mov
mov
push
sbb
jno
loopne
fsubrl
shrl
insl
sub
cmpsl
fs
jbe
sub
mov
mov
add
mov
jae
call
pop
lds
xor
stos
pop
xchg
push
mov
pop
les
mov
aaa
and
push
inc
sbb
xchg
jns
mov
mov
mov
lret
outsb
movsl
das
ljmp
mov
mov
xor
inc
mov
stc
lcall
fs
cmc
pusha
hlt
or
dec
int3
mov
in
inc
cmpsb
sbb
mov
xor
int
bound
dec
clc
pop
or
or
inc
adc
in
sub
repnz
arpl
jmp
loope
pop
sbb
cmp
shlb
stos
adc
imul
ret
in
sbb
cmc
adc
nop
imul
clc
dec
sbb
or
mov
jp
jns
dec
fs
mov
dec
sub
mov
sub
icebp
je
rclb
sbb
mov
push
pop
mov
fs
pop
inc
or
inc
push
lahf
lahf
push
dec
ljmp
test
pop
or
jno
rolb
push
outsb
pop
jbe
paddsw
push
cwtl
pop
mov
fcoms
xorl
dec
add
ljmp
push
pop
cmp
fnstenv
add
clc
mov
xchg
push
dec
cmc
dec
sub
jbe
push
ror
cli
xor
mov
insb
inc
ret
mov
imul
out
xor
mov
mov
xor
aas
iret
arpl
adc
es
sbb
mov
rorl
add
enter
sbb
arpl
jg
or
inc
add
push
cs
sub
mov
sub
push
sub
fs
int
cltd
int3
cmpsl
jmp
inc
mov
sti
dec
inc
imul
insb
sbb
pop
mov
decb
mov
dec
bound
daa
movsl
movsb
ret
jmp
decb
mov
sub
or
push
ja
adc
jg
repz
std
adc
dec
ret
push
mov
mov
or
jo
add
add
dec
xor
xchg
sbb
adc
sub
adc
or
mov
dec
test
sahf
push
pusha
pop
xor
idivb
xchg
data16
sbb
out
fwait
and
cmp
mov
add
sbb
cmp
hlt
cltd
push
and
mov
sub
sbb
or
das
rcrb
in
xorl
adc
nop
sti
add
push
dec
test
data16
stos
cmp
jbe
or
push
jg
std
sbb
xchg
sub
cmp
dec
sbb
popa
sbb
mov
outsl
arpl
sub
subl
lds
pop
hlt
ljmp
insl
sub
sti
xchg
gs
fs
cmpsl
pop
addb
loopne
push
pop
sub
fsubp
add
push
mov
enter
sbbl
xchg
mov
mov
fs
mov
in
fwait
or
ret
push
lds
call
cmp
mov
pop
lds
dec
cwtl
fsubrl
sub
mov
cs
sbb
test
add
addl
lock
push
add
out
mov
push
jnp
out
and
pop
popa
js
out
lods
loopne
aas
cmp
std
inc
mov
pop
jp
cwtl
dec
mov
xor
dec
ret
arpl
les
popa
cmp
inc
or
loope
aam
pop
inc
and
movsb
mov
xor
inc
push
adcl
jnp
mov
cmpsl
mov
div
pop
xchg
lcall
sub
lahf
pop
mov
subb
inc
cmp
and
pop
or
in
or
data16
sar
sbb
pop
fadd
add
cmpsb
fidivs
sbb
movsb
sub
dec
mov
bound
test
xlat
fsubr
dec
xlat
pop
adc
and
lods
inc
xchg
inc
mov
pop
fstpt
lods
ret
and
aad
out
cmp
test
ds
push
movsb
mov
negl
jnp
imul
push
mov
or
cmp
pushf
sub
js
lods
bound
enter
loop
and
push
loopne
or
dec
cmp
xchg
cwtl
in
adc
push
in
fistps
loope
cltd
xchg
sub
xchg
test
int
leave
inc
cmc
jp
subb
xchg
add
sbb
mov
mov
rol
jb
xor
ljmp
cmc
lock
sbb
js
and
mov
sbb
cmpsb
mov
jbe
xchg
jo
sbb
ljmp
call
inc
shrb
hlt
fwait
push
mov
in
adc
add
mov
lret
jns
push
or
mov
repz
aaa
stc
add
into
out
cmp
xchg
insb
cmpsl
roll
pop
and
js
in
idivb
movsl
sahf
dec
and
lret
ss
adc
ret
jl
nop
out
outsl
pushl
sub
cld
ds
outsb
adc
or
stos
mov
ja
or
pop
lret
mov
sub
lahf
into
cmpsl
jecxz
mov
jle
inc
ja
cmp
loop
bound
iret
push
jecxz
push
sahf
roll
popa
xor
adc
mov
jno
mov
aas
or
inc
mov
push
adc
insl
jne
and
ret
lods
xchg
sub
ror
jae
push
push
andl
sbb
fimull
mov
popa
std
shrb
lock
insl
fstpl
sbb
sarb
jno
push
sub
shrb
pop
lock
push
dec
inc
insb
xor
movsl
xor
adcl
xor
add
leave
out
mov
dec
outsl
ja
sub
and
rcrb
push
scas
les
adc
mov
mov
xor
dec
push
je
bound
in
ds
xchg
mov
adc
dec
dec
push
jp
pop
inc
mov
xchg
xor
jecxz
mov
and
popa
ljmp
lods
mov
or
outsl
sbb
mov
dec
pop
frstor
pop
sub
decb
sbb
cld
xor
dec
arpl
arpl
orb
test
pusha
ljmp
lea
sbb
jb
jae
lods
add
nop
inc
dec
cld
stc
jno
in
icebp
mov
cmc
cmp
add
das
pop
aaa
std
mov
call
rcl
xchg
jge
loopne
pop
testl
daa
or
and
or
add
mov
ljmp
les
icebp
je
ja
jbe
ja
jno
test
add
fsubrp
sbb
incb
jno
mov
pop
dec
out
aad
sbb
lret
sub
or
es
mov
push
rolb
push
lds
dec
dec
lods
lods
in
adc
insl
popf
sub
adc
shlb
popf
and
imul
movsl
push
aad
sahf
xor
int
mov
xor
sbb
mov
jns
std
xchg
sub
fistl
inc
inc
and
mov
leave
fnstsw
or
pusha
push
mov
fnsave
test
je
xor
cs
jle
xor
jg
addr16
negl
outsl
pop
test
in
sbb
xchg
and
add
in
mov
cmpsl
xor
es
mov
inc
pop
fucomip
dec
xor
clc
lods
in
cmp
xchg
push
mov
pop
adc
mov
loope
mov
loopne
mov
or
push
out
jmp
xor
mov
and
fwait
mov
test
movsb
lcall
or
rcll
out
testb
pop
lds
sbb
mov
jle
push
add
cli
cltd
mov
xor
xchg
andl
cmp
cmp
int3
mov
cmp
popa
and
arpl
cli
mov
arpl
movsl
jmp
xor
dec
hlt
mov
addr16
rcr
sbb
pop
xor
rorb
dec
adc
in
jo
iret
mov
cld
pop
stc
hlt
and
ret
enter
sub
call
idivl
pushf
inc
xor
sub
into
lahf
js
fcoms
mov
add
adc
push
mov
sub
lea
jle
jl
je
aaa
arpl
bound
xor
clc
cs
ja
shl
and
xchg
fstps
rolb
sbb
add
adc
or
les
test
mov
and
stos
jge
sub
jne
inc
jg
pusha
mov
bound
adc
sti
daa
sub
shlb
cmp
jnp
push
push
dec
mov
pop
lahf
sbb
into
jg
mov
xchg
cwtl
pop
mov
jbe
mov
mov
lret
lret
push
fidivl
xchg
mov
add
int3
fstps
add
xchg
xchg
mov
and
in
in
jo
scas
aas
add
nop
jae
mov
push
adcb
sbb
pop
and
test
adc
mov
pop
shrb
jne
popf
enter
xor
test
outsb
out
fildl
ret
mov
adc
sub
fisubrl
mov
aam
popf
add
ret
repz
dec
sbbl
push
and
jno
mov
dec
jg,pt
mov
mov
insb
pop
jb
cmp
add
mov
jns
or
in
ret
cwtl
mov
pop
jecxz
jbe
rcrb
fxch
std
xchg
nop
pop
xchg
mov
ret
mov
fisttpll
out
mov
inc
adc
push
mov
out
and
mov
or
add
mov
inc
stos
adc
js
popa
sub
loope
scas
lds
mov
and
test
fldenv
fcmovnu
es
clc
in
and
out
cld
sbb
outsb
shr
cmp
sbb
sub
xor
sub
mov
es
inc
test
pop
jl
or
xor
orb
pushf
cli
sub
push
xor
fstpt
lock
mov
fldenv
leave
adc
xor
in
outsb
dec
push
ficompl
leave
punpcklwd
mov
sbb
cmpsl
xchg
loop
dec
sahf
cmp
clc
scas
xchg
stos
xor
adc
mov
adc
or
push
xchg
xor
cmp
dec
bound
jecxz
mov
rorb
jno
out
inc
and
das
ljmp
pop
pop
inc
xor
iret
out
or
sub
mov
icebp
push
out
loop
test
cmp
push
push
jg
and
inc
stos
inc
add
in
dec
lahf
mov
mov
fwait
mov
jmp
push
pop
dec
test
iret
adc
lret
movsl
popf
add
imul
rorl
sub
icebp
fcoms
std
faddl
ret
fs
js
ja
daa
sbb
pop
fsubrp
push
popa
xor
js
cmc
mov
imul
xchg
adc
lods
or
aaa
mov
lahf
loope
arpl
lock
mov
lods
int
iret
ljmp
sbb
jl
pavgb
divl
jb
out
xor
stos
ljmp
nop
sub
mov
jmp
scas
inc
cmp
in
ret
xor
aam
fstpt
xor
adc
bnd
filds
int
jl
icebp
js
mov
int3
pop
out
cmp
fwait
sbb
inc
fsubr
cmp
stc
adc
negl
fistpll
xchg
cltd
jle
outsl
inc
dec
roll
icebp
ja
pop
mov
dec
push
lods
loope
rorb
xchg
in
and
xchg
insl
jne
dec
xchg
movsb
pop
sub
push
test
sbb
or
iret
mov
stos
fs
sbb
femms
repnz
dec
pop
sub
stos
push
sub
popf
xor
es
pop
repz
mov
iret
inc
mov
mov
cs
push
mov
aas
data16
xor
adc
push
shrl
aaa
test
cmpsb
data16
in
mov
adc
out
out
jge
xorb
xchg
cmp
jecxz
int
outsl
mov
mov
jmp
repnz
std
jmp
movsb
mov
mov
negb
imul
dec
xchg
sub
inc
lcall
daa
popa
andl
daa
mov
jno
mov
push
adc
lret
jne
push
adc
mov
cli
sub
push
fwait
iret
test
mov
jmp
test
test
push
cmc
cmp
int3
sbb
xchg
push
lret
mov
pop
in
cli
add
xor
cli
jnp
cli
jae
in
scas
sbb
test
jne
ljmp
shl
cmc
pop
add
not
sub
data16
hlt
push
inc
addl
push
dec
test
nop
mov
lcall
sbb
ds
jo
test
lahf
cmp
sahf
push
mov
clc
lea
pop
stc
popa
push
out
cmpb
call
insw
pusha
pop
pop
push
cli
sbb
sbb
pop
stos
cltd
mov
cld
adc
add
test
iret
push
in
mov
pop
cmp
dec
hlt
and
xchg
lds
lret
add
movzwl
cmpb
shlb
or
or
cmp
add
xchg
sarb
mull
adcl
loop
xchg
mov
or
inc
pop
loope
popa
into
and
jmp
xor
stc
outsl
dec
cs
es
cwtl
mov
push
fs
and
es
cli
in
pushf
xchg
jmp
jle
adc
dec
xchg
or
and
push
cmp
push
dec
xchg
dec
sar
mov
xlat
cmp
addb
jo
pop
adc
cmp
pop
gs
lahf
adc
in
jne
ss
int3
mov
cmp
dec
cmpsl
ljmp
xlat
inc
cmp
or
orb
pusha
faddl
xchg
iret
xchg
popf
inc
push
cmp
add
sbb
xor
sub
lret
ss
sub
xor
jp
popa
fsubr
hlt
pop
pop
mov
pusha
clc
mov
pop
xorl
mov
sarb
test
xlat
or
xchg
push
sarb
add
pop
movsb
dec
cld
popa
lock
ljmp
ficoml
test
insb
aad
push
mov
pop
mov
xorb
aaa
sub
pop
outsb
mov
fsubs
fnstsw
xchg
out
or
adc
outsl
dec
divb
cmp
fnsave
fnstcw
and
pop
inc
mov
fdivr
repnz
or
data16
and
stos
mov
sbb
sbbb
mov
adc
movb
add
inc
lret
jae
lret
xor
add
in
mov
inc
cmpsb
lret
adc
arpl
push
ljmp
imul
mov
arpl
shl
popf
sub
push
fs
xchg
dec
dec
roll
jecxz
call
or
mov
movsb
addr16
sub
rclb
notl
jge
mov
in
sti
jo
jmp
sub
bound
jge
inc
mov
pop
mov
xor
pop
mov
xchg
gs
dec
pop
inc
and
xchg
dec
sahf
adc
mov
mov
sbb
fnstsw
xor
in
jle
jo
clc
fildl
aaa
ss
or
stos
sbb
daa
xor
adc
pop
mov
jne
les
jp
in
out
xchg
add
outsl
in
push
stc
data16
mov
mov
sub
popf
test
mov
add
adc
lret
jne
out
imul
aad
xchg
fsubrp
ljmp
fwait
and
lods
out
pop
cld
ds
mov
push
push
jbe
push
jns
lret
mov
or
push
leave
jb
imull
jns
inc
sub
sbb
loope
mov
test
jns
dec
pop
dec
pop
inc
inc
or
inc
and
loope
mov
xor
xor
mov
jne
std
inc
cli
aam
iret
push
mov
fiadds
cmp
and
mov
dec
std
jl
xchg
loopne
xor
aas
mov
dec
shll
mov
mov
movd
xor
jns
mov
add
and
add
mov
xchg
enter
sbb
mov
loop
inc
and
mov
push
and
xor
push
jg
lods
lcall
outsl
lds
sbb
mov
cmp
lock
or
jmp
jo
or
push
orl
ja
push
outsb
mov
mov
dec
push
movsl
adc
add
fsubrs
lds
mov
sbb
pop
mov
lea
xchg
lock
imul
pop
mov
mov
and
pop
or
out
adc
int3
push
mov
mov
xorb
mov
rol
mov
inc
clc
shlb
ret
push
in
sbb
push
and
mov
loopne
insl
cmp
lds
test
decb
bound
out
std
ds
cmp
mov
call
cmpsb
xchg
es
fidivrl
xor
rorb
xor
mov
adc
fwait
cmp
xchg
fs
or
js
mov
ficoml
ljmp
pop
push
scas
das
test
push
in
mov
jnp
imull
fimull
jge
dec
add
push
jmp
subb
jmp
cmp
cltd
nop
adcb
test
push
adc
push
pop
push
xor
and
sub
add
int
sbb
pop
sub
add
sahf
fcmovne
sub
add
or
or
cs
sbb
inc
sbb
pop
adc
dec
sbb
cmp
sbb
dec
test
mov
cmp
ljmp
push
push
mov
int3
xchg
add
add
nop
push
dec
inc
cmp
pop
mov
jg
cmp
cmp
add
in
decl
out
add
out
cmp
loop
adc
in
xchg
add
jg
loopne
xchg
inc
and
test
sub
mov
or
cmp
add
scas
mov
shll
stc
xchg
jp
adc
lcall
jnp
sbb
cltd
cmp
out
fsubs
mov
lret
pusha
addr16
pop
cmpl
jge
movsl
and
aas
and
jg
cmp
ret
mov
imul
out
out
popf
mov
shll
xacquire
sub
sub
repz
shld
imul
loop
xor
out
loop
and
xlat
ficompl
mov
or
sti
into
js
mov
rolb
ret
shrl
stc
and
mov
pusha
jecxz
xor
mov
popa
test
push
outsb
sub
fcoml
cmp
js
push
or
jb
cmc
ds
jl
aad
enter
mov
int3
outsb
push
or
push
inc
mov
aas
or
cmpl
push
dec
add
pushf
fcom
in
dec
push
mov
lods
adc
adc
test
aam
loope
pop
fsubs
nop
push
imul
mov
test
mov
adc
test
loop
aas
into
sbb
cmc
cltd
mov
add
notb
xor
ja
out
pop
mov
js
stos
ficoms
pop
dec
inc
ljmp
in
mov
fsub
call
jne
or
pop
stos
sbb
clc
mov
push
scas
pop
out
clc
jbe
popa
gs
xchg
add
cmp
arpl
out
mov
fcoml
fcoms
aam
fs
mov
aaa
sbb
adc
cltd
and
and
inc
mov
rcll
push
or
jle
shlb
mov
sbb
ljmp
sbbl
inc
ds
mov
xor
jns
jns
in
pop
mov
dec
pop
insb
or
cmpl
xor
jl
xor
sbb
xchg
outsb
pop
inc
lods
cmp
xchg
inc
jb
je
scas
cmpsl
hlt
ljmp
jns
mov
fidivs
jae
sub
and
or
aaa
add
mov
aas
or
jbe
xchg
cmpsl
and
push
jno
aam
iret
scas
add
rcrl
aas
inc
dec
jmp
inc
or
dec
cmpb
clc
stos
add
inc
push
sub
jns
and
sbb
ljmp
cmpsl
cltd
push
jno
sbb
pop
push
jno
or
adc
ljmp
jbe
jb
rclb
xchg
fcmovne
fistpll
andl
mov
xchg
mov
movsb
call
pop
aaa
sub
out
test
inc
int3
jo
jecxz
xchg
inc
dec
test
xor
add
mov
add
out
fdivrs
push
js
and
insb
fidivl
cmp
mov
mov
mov
ds
inc
popf
data16
test
lahf
adc
test
pusha
outsl
in
rcrb
mov
push
popa
mov
out
lea
mov
and
mov
and
jbe
lcall
rcll
imul
jp
inc
ret
push
mov
jecxz
repz
loope
inc
stos
test
mov
mov
mov
sar
cmp
adc
push
push
sahf
or
pop
aas
mov
dec
inc
cmp
int3
xchg
push
outsl
sbb
dec
adcl
lcall
xorb
dec
lods
mov
pop
add
pop
inc
jo
xor
cwtl
ss
mov
repz
pop
mov
std
cltd
mov
stos
lock
lea
cmp
hlt
mov
cmp
das
xor
popf
pop
sbb
mov
jno
xor
xchg
jmp
and
es
mov
adc
sub
aam
les
scas
adc
test
xor
lret
sub
mov
mov
mov
jle
jno
push
cmp
or
cmpsl
mov
xor
loopne
cmpsb
jg
aas
xor
mov
mov
sub
loop
outsb
mov
mov
stos
js
orb
and
sahf
sbb
std
pop
mov
and
sbb
and
outsl
push
adc
movsl
fiadds
sbb
mov
push
mov
mov
or
jo
jne
ljmp
jg
mov
xchg
add
into
fcmove
sub
inc
bound
dec
and
imul
outsb
or
mov
cmpsb
iret
xor
sub
jns
push
push
mov
cmp
inc
popw
into
jbe
or
mov
and
out
shrb
sub
sbb
push
cwtl
pop
in
push
mov
lea
push
dec
pusha
xor
rcl
enter
fst
jecxz
push
cmc
cmpsb
outsl
sysexit
aad
jnp
and
stos
repnz
mov
movsb
jno
jmp
dec
jno
lock
ffree
sbb
jbe
mov
out
add
movsl
jle
add
xchg
addr16
gs
dec
push
xor
dec
sub
test
cmc
sbb
ret
loope
aam
ss
push
xor
into
jne
fcom
adc
test
push
jl
test
adc
mov
lock
push
shr
imul
or
xor
arpl
out
sahf
dec
inc
stc
lret
enter
pusha
dec
repz
push
insl
fsubs
mov
push
je
jmp
xor
dec
mov
xor
leave
enter
mov
mov
cmp
gs
leave
push
mov
xchg
into
sbb
scas
rolb
xchg
xchg
cmp
out
ds
mov
div
insb
test
jp
int3
inc
enter
jg
pop
int
xor
popa
and
dec
adc
inc
xor
mov
inc
lret
movsb
add
inc
jmp
test
call
cmpsb
cmpb
movsl
pushf
sub
push
push
xor
mov
add
lahf
sbb
lea
cmpsl
adc
ss
and
pushf
inc
out
notb
mov
add
test
out
jne
pop
shlb
pop
jl
mov
lahf
out
cmp
sbb
rcrl
mov
sahf
insb
xlat
and
pop
clc
sub
and
out
cmp
mov
xchg
inc
push
push
and
in
pop
dec
mov
push
out
int
add
inc
or
ret
das
daa
clc
cmp
mov
frstor
push
push
insb
cltd
cmpsl
sub
data16
push
insl
inc
mov
lock
fwait
or
jg
mov
fs
stos
adc
out
fsubrp
add
push
ss
mov
jg
test
mov
fisubrs
mov
andb
xor
cmpsl
push
jb
ja
lods
pop
add
stos
mov
das
cltd
popf
pop
sub
ds
xor
adc
jmp
dec
lods
sbb
push
jns
jecxz
and
stos
jnp
xor
add
and
mov
and
sub
xor
lret
loopne
leave
push
std
add
xchg
je
in
jp
and
xchg
and
out
push
movsb
xor
jl
pop
xlat
inc
cmp
in
cld
jp
mov
in
cmc
mov
sub
sub
adc
xchg
lahf
js
cwtl
xor
ficoms
insb
icebp
fldenv
bound
add
out
ror
nop
or
pop
cmpsb
pop
cs
mov
mov
stc
cld
cmp
dec
sbb
scas
dec
lock
and
mov
xor
push
push
and
es
iret
pop
add
ds
xor
ds
imul
and
jae
jbe
lds
xchg
pusha
shll
push
dec
aam
jo,pt
js
or
sub
push
ret
pop
mov
mov
mov
cmpsb
movsl
enter
jns
into
imul
imulb
xor
leave
jnp
mov
es
popf
cmpl
imul
aas
cmp
xchg
xchg
out
jp
push
mov
inc
sbb
outsl
cmc
or
push
fisubl
out
fisttpl
fwait
jo
shrl
lea
sahf
mov
mov
lea
mov
lret
andb
push
or
mov
cmp
cld
xchg
fildll
les
insb
or
in
scas
fs
push
ret
xor
mov
cmp
xor
les
sarb
or
mov
push
test
sti
in
push
sbb
cmp
inc
std
pushf
fbld
int3
push
dec
fdivs
mulb
mov
lock
stos
fwait
icebp
mov
pusha
out
xor
lods
daa
sub
sbb
xlat
jns
sahf
inc
jp
cltd
loop
aaa
lret
leave
not
daa
out
push
inc
roll
in
movsb
mov
xor
lret
dec
inc
jl
cmp
cmp
pop
mov
cld
sahf
jbe
icebp
leave
stc
add
dec
jnp
add
adc
rclb
test
cmpsl
outsl
cmp
xchg
fdivrs
icebp
sti
in
xchg
push
push
pop
mov
add
imul
iret
shlb
and
imul
int
sub
les
jl
popa
movsl
cmc
inc
scas
and
cmp
fdivs
ficoml
fdivrs
push
add
daa
clc
pop
lret
mov
daa
sub
shr
enter
or
mov
cltd
pop
mov
pop
rcr
das
pop
mov
xchg
fidivrs
shlb
hlt
or
jno
pusha
es
jo
jnp
stc
cmpsb
stos
sub
rorl
mov
xor
xor
jl
popa
adc
hlt
mov
cmpsb
xchg
jge
xor
xchg
icebp
sub
repz
std
xor
repnz
in
inc
addb
and
je
in
lcall
sbb
mov
pusha
jo
mov
xlat
dec
sub
test
jg
mov
push
jns
or
mov
aaa
mov
dec
sbb
stos
insb
cld
outsb
mov
imul
stc
repnz
lds
pop
jns
roll
js
ret
test
mov
xor
js
lret
arpl
in
cmp
movsl
aas
fstps
movsb
lahf
in
pop
fstps
ljmp
xchg
movsb
adc
andb
fcomip
xchg
mov
and
aaa
mov
mov
into
std
rcll
push
sub
incl
mov
roll
pop
jp
adc
xchg
into
in
adc
aad
jne
cmpsl
cmpsb
ret
or
jbe
dec
test
mov
rcr
mov
xchg
stos
lds
xor
dec
xor
xchg
neg
arpl
pusha
xchg
jg
adc
mov
push
mov
movsb
nop
xorl
flds
pop
loopne
lds
lods
xchg
jl
frstor
cmp
mov
cmp
sbb
sbb
pcmpeqw
int3
fwait
insl
aas
xor
jns
sub
push
mov
add
mov
cmpsl
pop
push
push
add
lret
xchg
jmp
cmpsb
and
in
and
and
push
movsl
push
xchg
mov
shl
hlt
adc
mov
pop
movsb
hlt
enter
cmpsl
shlb
into
sub
call
push
int3
push
ror
fisttpl
cmp
mov
pop
ljmp
stos
xor
cmp
jle
mov
in
sbb
mov
cmpb
cmp
add
aad
mov
addl
cltd
out
sbb
cwtl
fcmovnbe
ret
scas
sbb
mov
iret
pushf
out
ret
insl
outsb
stos
lahf
or
cmpsl
loope
push
stc
push
jg
lahf
or
ljmp
popa
mov
dec
jp
mov
xor
inc
cltd
adcb
dec
aaa
push
aam
shll
int3
daa
pop
push
dec
or
mov
clc
xor
mov
jnp
jno
popa
lds
jg
or
orb
mov
test
jge
out
xchg
insl
jecxz
dec
xchg
int3
dec
out
inc
fsubrs
inc
ror
je
sahf
mov
mov
mov
inc
add
push
dec
fisubl
repnz
add
shrb
or
xor
dec
jb
notb
insl
jl
mov
xor
das
push
int3
ror
push
repnz
in
dec
add
std
dec
push
in
ja
js
loop
std
arpl
push
mul
fld
xchg
jmp
andb
int
mov
or
add
mov
loope
jmp
mov
mov
sbbb
pop
in
aas
sar
or
cmp
adc
inc
shll
pop
jge
rcll
hlt
out
es
shll
je
xor
gs
mov
jge
cs
fimull
popf
lds
and
inc
pop
and
lahf
andb
xor
shl
jo
inc
daa
and
ret
xor
imul
xchg
pop
pushf
dec
inc
mov
xchg
jg
repnz
mov
jb
jae
mov
or
cli
mov
sub
mov
in
movsb
mov
jle
test
adc
ret
and
xor
xor
push
in
or
xor
mov
ret
jmp
add
sub
shl
mov
jae
adc
push
aaa
ss
xchg
pop
arpl
add
xchg
addr16
sub
inc
ja
mov
mov
inc
sbb
mov
int
sub
pop
test
push
mov
pop
sbb
out
cmpsb
clc
fimuls
add
aad
and
jecxz
inc
dec
adc
xor
pop
hlt
insl
inc
loop
imul
movsl
clc
jl,pn
insl
pop
pop
test
pusha
inc
xchg
cmp
es
pop
out
imul
jnp
adc
fwait
jl
push
cmp
push
rcl
sub
aas
lahf
loop
sbb
mov
fdivr
in
pop
sbb
adc
sahf
inc
pop
je
cmp
push
adc
sbb
xchg
jge
test
stc
shl
mov
mov
insb
shll
out
sub
push
pop
sbb
sbb
and
popa
mov
aas
call
pop
dec
int
les
mov
fcompl
sub
xchg
mov
andl
ja
sub
insb
xor
fidivs
test
jl
ret
mov
cmc
inc
fiaddl
std
ficoms
addr16
daa
jecxz
sub
cmp
inc
into
in
lock
sub
lds
sub
mov
fisubrl
xor
xchg
cmp
cmp
ss
sti
mov
pop
shlb
jecxz
jl
jns
ret
xchg
iret
pop
push
decb
aaa
mov
fnstcw
mov
xor
jmp
cs
in
sub
add
loopne
repnz
cmp
bound
xchg
les
cltd
cmpsb
popa
cmp
pop
mov
push
inc
sub
mov
or
out
les
and
adc
enter
and
mov
das
jns
test
ljmp
sub
ss
int
fimull
cmc
ret
rclb
icebp
mov
repnz
add
mov
in
outsb
mov
outsl
lock
outsl
mov
adc
test
dec
and
mov
bound
mov
cmpl
fs
pop
idiv
or
push
inc
sbb
push
dec
adc
cmp
rorb
aad
pop
dec
mov
mov
adc
and
or
popa
xchg
jo
test
xchg
subl
in
mov
and
and
std
ljmp
jns
sbb
cmpsb
pop
or
adcl
aam
fwait
sub
push
iret
inc
adc
cld
jns
xor
inc
arpl
adc
stc
mov
or
loopne
cmp
pop
and
testb
aam
jecxz
add
cmp
out
xchg
mov
adc
and
sti
adc
scas
rcll
ret
fldt
push
mov
inc
mov
hlt
stos
mov
aas
andb
inc
and
adc
iret
mov
cmp
jle
sub
pop
enter
inc
fmull
ffreep
cmpsb
sbb
ljmp
addb
test
cmpsb
insl
push
add
rcrl
mov
mov
sbb
lds
data16
xor
mov
scas
push
lret
nop
dec
imul
mov
cld
mov
scas
call
fisubs
dec
ficompl
jbe
push
dec
lods
mov
push
inc
sub
or
mov
inc
sahf
cmp
loop
stos
push
fldl
mov
pop
outsb
mov
nop
inc
fcmovb
sub
jge
sbb
in
adc
aad
cmp
adc
imul
push
pop
aaa
sub
mov
lret
scas
and
je
dec
xchg
shlb
sub
xor
and
andl
pop
loope
popa
mov
sahf
std
jmp
sub
inc
pop
jne
adc
ret
mov
push
fsub
sbb
mov
cmp
aas
pop
fwait
or
pop
fucomip
inc
fucomip
outsb
xor
dec
jbe
mov
jecxz
int
ljmp
jge
shll
test
mov
mov
sub
movsb
xor
call
jecxz
inc
cmpsb
jle
rorb
out
cmc
cmpsl
imul
loop
mov
mov
mov
sbb
mov
jg
push
cwtl
cmp
or
cmp
dec
cmp
scas
xor
scas
loop
lahf
or
add
repnz
sbbl
jne
ss
jle
les
mov
sbb
sti
dec
pusha
stc
sti
mov
and
inc
inc
stc
pop
push
and
ficompl
xchg
clc
pop
pop
add
cli
mov
imul
xchg
gs
jp
fisttpl
jmp
js
or
cmp
jmp
fidivs
xor
adc
fimuls
in
clc
push
xchg
and
popa
sbb
jg
push
pop
test
mov
xor
mov
cli
rclb
ret
mov
inc
push
icebp
sub
ljmp
das
in
jge
adc
fisttps
pop
cwtl
mov
mov
and
scas
cmp
or
pop
insb
pop
js
stos
std
mov
faddp
jecxz
int
dec
cmp
adc
pop
mov
loopne
fistpll
out
insl
rclb
cmc
xor
mov
or
in
scas
lds
xchg
dec
mov
mov
loopne
rolb
out
sahf
ret
xchg
stos
add
dec
mov
aas
cmp
aad
js
jb
mov
push
arpl
lret
cmpsb
add
cmpsb
jbe
outsb
push
shrb
int3
jl
or
push
or
pop
adc
out
xchg
out
aad
pop
int
movsb
adc
inc
jle
inc
xchg
cmp
xlat
jo
ret
inc
xor
mov
movq
mov
mov
xor
cmpsb
orl
inc
enter
ret
xchg
mov
inc
gs
leave
sub
jae
sub
xchg
lods
fs
mov
mov
cmp
ret
out
add
mov
jmp
aaa
mov
dec
lret
push
sub
sarb
jae
cmp
mov
lcall
pop
stos
mov
mov
xchg
subl
aaa
or
dec
cmp
cmp
sub
mov
scas
xchg
rcll
cli
jg
push
mov
int
idivl
mov
cmp
cli
dec
sarl
adcl
arpl
stos
cmp
xor
in
sub
inc
mov
dec
and
dec
stos
pusha
xchg
testb
push
or
insb
pop
mov
repnz
stos
mov
sbb
jno
xorb
and
pop
push
insb
ss
sub
loop
pop
or
paddusw
sbb
pop
shrl
test
jae
inc
outsb
add
fisubs
insl
in
xor
pusha
int3
push
hlt
xor
pop
sahf
jo
jne
or
sub
sub
mov
jl
addl
dec
out
adc
add
or
sbb
and
jmp
rorb
movsb
ja
mov
xor
adc
mov
xor
push
mov
pop
xor
jne
push
jg
mov
int
hlt
das
push
outsl
and
jno
popf
pop
insb
cmp
pop
jae
cmc
imul
aad
arpl
mov
fdivl
negb
inc
jmp
iret
inc
pop
lahf
ja
inc
int
stos
sub
cmpb
test
shl
aaa
mov
das
sti
jne
pop
andl
mov
pop
pop
mov
pusha
lods
ss
leave
or
int
adc
popf
dec
dec
xor
cmpsl
insb
jns
inc
cmpsl
inc
nop
add
loop
out
xchg
in
loope
sub
jne
lcall
mov
and
xor
or
stos
and
and
push
jmp
cmpsl
lods
dec
fwait
cmp
inc
mov
add
fdivl
xchg
push
mov
push
sqrtps
sub
push
lcall
std
setbe
stc
mov
lods
pop
mov
xor
cmp
jae
out
push
push
adc
adc
stos
in
xchg
fidivs
scas
js
and
sahf
shlb
ret
cmpsb
fistps
push
data16
mov
inc
shlb
mov
and
add
push
ret
lret
icebp
push
insl
mov
leave
dec
aaa
mov
je
mov
std
mov
jle
push
inc
pop
shll
movsb
cmp
sahf
jg
test
stc
sub
xor
xchg
xlat
js
stc
adc
mov
mov
pushf
push
pop
sub
cmp
arpl
lahf
pop
push
sarl
and
mov
cmp
xor
lcall
mov
and
shr
std
rcl
mov
cwtl
xchg
jo
int3
adc
sti
in
jb
push
xor
roll
dec
push
xor
repz
cmp
sbb
out
std
mov
xchg
test
push
mov
notl
sub
cli
xchg
ds
int
and
stos
imul
insl
scas
sbb
mov
insb
rol
cmp
mov
ja
sbb
sub
push
call
or
cwtl
jnp
test
cwtl
mov
cli
inc
out
xchg
arpl
xor
stos
mov
daa
mov
inc
push
sub
cli
xchg
cmpsl
pop
test
and
les
pop
clc
pop
lret
out
mov
es
mov
sub
jmp
mov
dec
cli
pop
mov
mov
push
xlat
scas
fistpll
xchg
inc
adc
lods
push
or
stos
and
out
mov
popf
iret
mov
jne
dec
movsl
add
mov
shrl
pop
mov
les
cmp
sub
negl
cmpb
cmp
lods
push
inc
adc
jb
mov
jnp
adc
aas
fiadds
punpcklwd
aas
rol
cmpsb
and
xchg
pushf
pop
outsb
lock
in
add
dec
xor
mov
or
scas
dec
dec
jmp
and
ljmp
ret
stos
pop
xchg
push
and
rol
sub
and
outsb
icebp
addl
jne
sub
xor
outsl
mov
imul
xor
jl
cmp
out
in
add
stc
sub
adc
ja
daa
cwtl
ljmp
pop
sbb
push
inc
and
mov
stos
scas
inc
add
cmp
dec
pop
xor
dec
mov
inc
adc
popf
fcompl
mov
pop
push
cwtl
sub
push
sub
cmpsb
sti
jp
add
or
mov
jmp
sub
adc
mov
shlb
sub
add
fildl
mov
in
jb
clc
inc
lods
add
jo
in
cwtl
cmp
inc
add
xor
jno
sbb
loope
sub
cmc
dec
pusha
es
pushf
arpl
cmp
add
mov
xlat
mov
and
adc
sti
adc
sub
lcall
ret
insl
ret
imul
insl
sub
jmp
push
dec
stos
inc
loope
in
cmpsl
fsts
mov
mov
inc
sahf
mov
and
sub
movsb
fldenv
mov
cmp
sub
or
leave
or
repnz
arpl
repnz
aam
jge
or
imul
push
lcall
outsl
imul
dec
dec
xor
out
pop
nop
xchg
rolb
jmp
and
push
sub
lret
mov
and
out
inc
push
xor
loop
cmp
jbe
mov
cwtl
mov
sbb
jo
std
rolb
roll
cwtl
test
pop
adc
jmp
and
mov
add
stos
cmpsb
dec
jle
xor
adc
xor
lods
cld
in
cwtl
or
out
mov
add
xchg
mov
es
inc
adc
test
or
mov
and
push
mov
adc
movsb
inc
push
into
mov
stos
insb
fidivrl
mov
or
test
or
cmpb
cmpsb
leave
sbb
xchg
rcrl
loop
jl
mov
pop
jg
xchg
out
push
cmp
dec
int3
rclb
incb
enter
lret
out
popa
lret
addl
mov
dec
pop
mov
xchg
std
mov
add
xchg
mov
fstpl
inc
movsl
pop
pop
dec
mov
push
inc
fcmovnu
out
xchg
xchg
ss
arpl
sub
outsl
ja
popf
mov
mov
xor
hlt
push
jns
or
dec
shld
xlat
in
jb
adc
push
add
jno,pn
jg
lods
inc
push
cmp
dec
xor
dec
add
jnp
jl
mov
pop
adc
adcb
test
out
fs
adcb
ljmp
or
dec
sub
ret
es
clc
outsb
dec
fsubrs
add
ret
cmp
push
mov
pop
xor
add
dec
pop
xchg
movsb
xchg
cmpsb
lods
mov
arpl
aaa
mov
cmp
dec
lods
sub
arpl
int
dec
xor
outsl
add
sub
dec
mov
loopne
jb
sti
stos
mov
mov
stos
adc
dec
in
or
add
dec
int
fninit
imul
inc
mov
xchg
fstps
pop
in
pusha
mov
imul
jne
pop
mov
out
push
lcall
inc
inc
xchg
mov
dec
and
dec
xchg
out
nop
sbb
sub
stos
scas
or
js
sar
mov
andb
cmp
repnz
adc
int
arpl
icebp
movb
in
andl
and
mov
xchg
sbb
mov
xchg
push
mov
in
arpl
push
lock
daa
push
adc
jg
ret
cli
lret
cmp
mov
or
add
cli
sbb
or
or
fsubr
xchg
xor
ds
orb
push
adc
aas
xor
xchg
jl
add
sub
ss
cwtl
push
scas
aad
xor
jae
movsb
push
sub
in
icebp
jmp
lret
pop
pop
jns
mov
xchg
repnz
popf
aaa
xor
xchg
pop
mov
subl
dec
sbb
adc
sub
es
mov
scas
or
xchg
sub
or
iret
mov
aam
lret
sub
mov
dec
push
inc
dec
notl
and
test
cwtl
lea
int3
sbb
xchg
shlb
push
sahf
jbe
aad
aam
adc
ja
fisubrs
or
and
xor
add
add
mov
popf
jnp
movsl
pop
add
fdivr
pushf
loope
mov
push
jmp
sarb
xor
mov
pop
in
std
add
xor
shll
out
outsb
repz
aam
aas
push
jo
gs
rcrl
subl
jnp
sbb
cwtl
mov
mov
xor
xchg
addb
stc
jnp
xor
mov
aaa
ret
pop
xchg
cs
xor
dec
inc
mov
adc
add
in
repnz
pop
pop
adc
loope
lret
insl
cmp
push
insl
and
int3
sti
pop
mov
pusha
push
icebp
mov
xchg
lea
test
mov
cs
mov
xchg
pop
mov
popa
fnstsw
cwtl
cmp
cmpsl
dec
jae
mov
mov
mov
mov
mov
xorb
outsb
lods
ds
adc
dec
and
mov
out
pop
stc
mov
mov
mov
or
out
xchg
inc
pushf
js
aas
cmp
add
adc
mov
std
dec
sub
pop
pop
add
mov
arpl
stos
jne
dec
sti
imul
mov
adc
mov
mov
jo
les
push
dec
jo
out
sub
push
shl
cmpsb
clc
pushf
push
cli
std
popa
fs
stos
andl
and
cmp
adcb
push
cmpsb
jo
lock
std
sub
stos
adc
sbb
loope
and
or
out
shr
fcom
cmpsb
mov
xor
and
ret
xchg
insb
daa
cli
cmp
lods
xchg
clc
je
add
jecxz
push
jle
out
ja
lcall
mov
mov
sbb
lods
adc
rclb
in
jae
ljmp
leave
mov
inc
pop
xchg
cld
cmp
int
rcrb
daa
inc
sub
out
cli
leave
sbb
loope
mov
xchg
inc
dec
adc
sarl
daa
adc
mov
out
and
roll
mov
jno
sub
pop
xchg
mov
xor
pop
mov
push
stc
add
into
dec
adc
ja
ljmp
mov
add
sbb
dec
pushf
aas
out
jl
jb
cs
pusha
push
dec
cwtl
jo
das
gs
xchg
sub
inc
dec
shrl
pop
addr16
mov
je
mov
cld
test
in
ffreep
aas
ja
je
je
out
jp
jecxz
bound
cmp
inc
jmp
mov
push
mov
xor
leave
scas
sbb
lods
mov
push
add
ret
push
out
sub
call
les
dec
cwtl
push
add
mov
scas
jae
insl
push
sbbl
ljmp
mov
push
int3
jmp
lcall
movsb
cmp
outsb
lret
mov
std
and
inc
inc
jg
int
dec
xor
cmp
xor
shrl
das
adc
bound
out
jmp
jae
ja
sbb
jb
pop
mov
jno
in
jle
adc
mov
and
std
dec
lret
scas
rclb
fisttps
imul
cmpsl
iret
mov
push
lods
mov
cmp
adc
pop
xchg
stos
out
pop
xchg
adc
mov
das
xor
in
rclb
outsb
xchg
xchg
rorb
jmp
ret
pushf
dec
fnstcw
add
dec
test
subb
test
mov
pop
push
adc
sub
sahf
cmp
xchg
loopne
cld
adc
test
fdivrl
cmpsl
ficomps
inc
imul
xchg
inc
dec
push
inc
xchg
ret
mov
push
or
mov
add
sbb
hlt
dec
shrb
out
mov
adc
mov
mov
mov
mov
les
cmp
mov
add
int
pop
jg
cli
or
push
xchg
pop
add
sahf
in
push
inc
push
mov
pop
and
ja
jecxz
sub
add
jne
out
insl
mov
and
pop
mov
jl
pop
xor
sbb
daa
mov
and
push
stos
sti
sub
xor
iret
push
ja
lds
arpl
repz
dec
fimull
mov
neg
stos
pop
jns
aaa
je
movsl
inc
xor
xchg
add
push
add
hlt
fisubrs
clc
mov
ret
sarb
or
rclb
lods
push
mov
mov
cmpsl
nop
ds
push
push
sub
stc
cmp
push
and
sub
ret
cs
dec
cli
jle
push
je
fbstp
pop
sbb
sbb
bound
insl
lods
lods
sbb
mov
subl
ljmp
pop
popa
fcoml
lods
and
jle
mov
adc
xor
jmp
mov
out
jle
push
dec
mov
sub
shlb
xor
cmpsl
loope
mov
add
hlt
cmpsb
addr16
or
out
pop
xorl
int
xor
jg
mov
pushf
push
pop
xlat
fmull
fiaddl
dec
push
pop
fidivl
or
ret
pop
cld
lret
in
popf
cmpsl
shll
jmp
mov
jns
push
inc
pop
xor
hlt
in
pop
in
jb
sub
lret
ret
ret
mov
hlt
jecxz
add
outsb
mov
cmp
in
clc
lahf
mov
rcl
jge
mov
mov
pop
cli
daa
pop
popf
xchg
mov
add
pop
or
out
sub
push
push
cltd
std
mov
dec
and
cmc
inc
sbb
push
add
mov
jno
jno
enter
push
ljmp
mov
fimuls
aam
jne
mov
fistl
add
movsb
lahf
lret
pushl
das
std
cmp
fabs
vprotd
outsl
incl
push
scas
mov
jle
jae
stos
jl
out
dec
sbb
pop
lahf
mov
sbb
fnstcw
push
mov
sbb
test
sbb
pinsrw
ja
imul
adc
std
xchg
pushf
movsb
outsb
add
xchg
mov
push
mov
ss
int
push
insb
pop
lret
ljmp
bound
dec
sahf
sub
cmp
scas
sub
arpl
loop
cwtl
mov
inc
stos
jb
popf
leave
fisubrs
loopne
ror
xor
cs
mov
ret
pushf
pop
loopne
leave
stos
stc
pop
imul
repz
movsb
cmp
jg
push
pop
lret
fs
and
or
das
push
cmp
pusha
lods
test
sub
xlat
xor
inc
mov
shll
adc
pop
inc
out
cmp
fbld
fisttpl
fs
and
sbb
mov
fsubs
ds
sbb
xchg
push
mov
pop
addb
dec
adcb
shrl
addr16
test
aaa
cmp
imul
xchg
xor
insl
sub
or
cmp
xchg
gs
push
xor
addr16
xchg
out
ja
lret
data16
xchg
test
mov
pop
jecxz,pt
xchg
rcl
sbb
add
jp
dec
jno
addl
push
in
jne
push
push
mov
dec
and
fcomi
sbb
xor
add
sbb
xchg
fs
jl
je
mov
repnz
mov
push
pop
add
mov
lods
pop
pop
jno
xchg
mov
stos
mov
cmp
dec
mov
dec
cmpsl
mov
pop
sbb
inc
inc
mov
inc
icebp
cmp
xor
lods
in
out
push
xchg
shlb
mov
mov
adc
mov
lods
ret
and
push
in
sbb
add
sbbb
fnstcw
sub
loope
xchg
fsubrp
stc
shll
repnz
pop
bound
adc
mov
sub
orl
jae
insl
mov
icebp
mov
jg
movl
inc
test
subb
mov
mov
and
jp
push
push
aaa
dec
mov
test
das
cltd
test
cmp
or
pop
jge
arpl
mov
addr16
pop
out
pop
scas
inc
push
stc
mov
and
jo
stc
fsubrs
jle
mov
sbb
adc
mov
cmp
scas
cld
in
popa
ret
mov
mov
pop
inc
mov
jns
mov
fsubrl
ss
dec
xor
rorl
xchg
dec
jge
cld
dec
ljmp
call
jbe
inc
imul
mulb
adc
xchg
lods
add
test
pop
ja
arpl
jno
mov
iret
rorl
mov
xor
lods
push
dec
stos
je
cmc
jp
aaa
call
push
jae
push
lods
add
mov
mov
bnd
jmp
and
jo
xchg
inc
lock
mov
mov
sub
nop
repz
inc
ljmp
stos
sti
jg
cs
xor
inc
imulb
jae
adc
mov
movsl
icebp
jecxz
cmp
ret
les
and
push
mov
mov
sub
or
xchg
xchg
sub
mov
or
mov
xor
or
push
lret
jge
lods
xor
shll
mov
outsl
mov
adc
daa
xchg
add
lahf
sbb
icebp
negl
cmp
iret
cmp
ud2
rep
popf
icebp
sti
and
mov
popw
xorb
mov
pop
push
test
add
pop
add
scas
ret
push
fcomps
fsub
pop
sbb
xor
mov
push
int3
mov
out
push
das
mov
inc
flds
mov
imul
xchg
or
mov
outsl
pushf
xor
inc
sbb
mov
in
cmp
stc
jecxz
or
jp
mov
lock
jb
mov
xor
or
mov
shl
outsl
lahf
add
repnz
sub
mov
pusha
adc
dec
jg
cltd
and
jge
cmp
inc
lret
inc
adc
imul
shrb
add
ja
and
mov
ds
bound
and
sub
xorl
mov
js
jne
int
pop
push
fisubrs
add
sarl
jp
out
inc
mov
arpl
and
lahf
testb
popf
into
sbb
insl
jge
cs
add
mov
cmp
sub
xchg
lock
xor
fwait
jecxz
or
cmp
scas
arpl
fcomps
sbb
push
cmp
repz
inc
inc
lock
xor
jno
test
adc
lods
jl
xchg
sub
push
add
mov
jmp
js
test
outsl
pusha
call
push
xchg
nop
push
push
mov
jle
daa
loope
pop
int
repz
xchg
insb
jle
dec
cltd
ucomiss
adc
inc
mov
sub
sbb
sbb
xchg
cmpsl
mov
mov
sub
repnz
ljmp
mov
cld
and
std
cltd
and
addr16
sbb
in
pop
mov
push
sub
test
loopne
out
into
test
fs
dec
pop
dec
ds
mov
xor
stc
popf
les
scas
and
mov
hlt
and
cmp
lock
int
xchg
subl
adcl
inc
lock
or
pop
mov
sub
popa
or
xorl
jg
inc
mov
inc
pop
lret
mov
push
pop
addr16
xchg
sbb
jecxz
push
in
add
cmp
jg
mov
dec
movsb
xchg
test
mov
jmp
test
aaa
lea
loope
aaa
pop
pop
add
sbb
fadds
mov
pop
fwait
mov
mov
inc
orl
insb
test
jo
jbe
sub
lret
push
mov
sarl
lock
lods
and
jge
or
inc
orl
pop
mov
jb
arpl
incl
pop
lahf
xor
iret
sub
test
outsb
ja
movsb
out
popf
stc
mov
mov
push
mov
cmpsl
mov
aad
ret
mov
ret
push
clc
pop
ret
cmp
dec
stos
imul
popf
sbb
mov
ficoml
dec
cmc
and
sbb
int
dec
idivb
sbb
sarl
sti
cmp
ja
jle
shll
dec
rcrl
mov
fdiv
lret
lahf
dec
ret
fidivrl
fwait
cmp
mov
xlat
imull
fucomip
cmp
and
lcall
jge
ds
out
arpl
cmp
pop
pop
push
dec
fwait
sub
aam
mov
jge
xchg
stos
daa
std
repz
imul
jbe
sbb
xor
jns
add
cmp
fiaddl
mov
jo
or
sbb
popf
popf
mov
sub
and
dec
fs
and
orl
cmp
adc
jo
jbe
sahf
adc
inc
dec
pop
xchg
std
inc
movsb
movsl
mov
mov
sub
ja
cwtl
idiv
mov
cmp
mov
jns
xor
adc
adc
gs
and
and
cmp
sbb
loope
in
jbe
cmpsb
fs
cmp
adc
aad
scas
mov
xor
ret
in
les
push
cmpsb
mov
fisubrl
out
imul
lret
sti
pop
maxps
jmp
dec
xchg
fsubr
leave
pop
lret
jno
ret
aaa
push
inc
in
mov
pop
sbb
push
dec
or
cwtl
int
pop
pop
decb
pop
mov
xchg
push
push
fsts
enter
mov
mov
scas
or
cld
xor
or
gs
pop
mov
mov
add
mov
mov
arpl
ljmp
pusha
xchg
aaa
test
xor
movsb
xchg
dec
stos
sbb
xchg
insb
jns
addb
gs
fs
adc
mov
shll
jecxz
sub
fldl
call
inc
stos
jns
insb
mov
addl
add
test
dec
cs
inc
xor
sbb
push
mov
jle
sub
pushf
cld
fstpt
jg
shll
stc
rcrb
leave
push
sub
insl
cli
in
adc
inc
add
mov
ja
mov
popf
add
mov
xchg
popa
inc
cmp
push
xor
mov
push
stos
fwait
jmp
add
xlat
cwtl
push
cmpsb
sub
xchg
mov
rcl
mov
jmp
or
hlt
js
movsb
gs
outsb
shl
ficompl
mov
jne
xchg
and
sbb
in
pushf
popa
mov
inc
inc
add
ljmp
adc
xchg
sub
sbb
mov
or
cmc
lods
inc
xor
add
hlt
mov
mov
add
in
pop
ljmp
lcall
and
int3
dec
push
into
ja
add
lcall
and
cltd
es
in
idivb
ret
iret
jge
loop
pop
clc
xchg
sti
lock
push
add
xchg
loopne
ret
test
xchg
cmp
jmp
or
mov
and
std
aam
jnp
test
in
mov
repnz
sbb
push
mov
jbe
sbbb
lods
pop
mov
jno
lcall
lds
lock
mov
pusha
test
add
adc
xor
icebp
clc
jae
pop
loop
fwait
movsb
jge
pop
mov
lock
mov
and
sub
scas
out
push
fs
loopne
subb
jno
iret
lock
mov
jb
push
mov
pusha
pop
mov
add
leave
and
jmp
jne
dec
pminub
loop
cmp
mov
daa
jns
sub
sub
loopne
shr
in
mov
je
fst
je
int
add
rcll
mov
cli
addb
rolb
pushf
lock
pop
out
or
mov
xor
xchg
arpl
mov
and
mov
adc
jle
cld
or
imul
add
popa
mov
or
jae
lods
cmpsb
aam
lcall
ret
subb
outsb
mov
adc
mov
sbb
add
mov
mov
jge
adc
push
std
es
fbstp
add
or
gs
xchg
sahf
jb
xchg
lods
cmc
shll
cld
dec
and
xor
add
jmp
cmp
mov
scas
cli
in
aad
xchg
or
ss
jae
mov
xchg
lods
mov
sbb
mov
ss
ja
xchg
pop
pop
mov
or
mov
cmp
xchg
pop
inc
imul
and
and
addr16
xor
push
js
sub
lods
ror
sarb
and
or
push
mov
and
ret
sarl
ds
push
sub
xor
cmp
in
pop
frstor
or
pop
mov
sbb
pushf
aas
divb
fs
ds
or
lock
mov
add
cwtl
fdivl
lods
xchg
out
cwtl
sbb
jl
add
repnz
sbb
mov
push
sub
push
aaa
pop
inc
cmp
cmp
cmp
push
push
jne
jge
lret
sub
push
setle
addb
aaa
imul
aas
hlt
jmp
mov
out
pop
int3
lock
in
mov
ss
cltd
xor
aad
or
mov
es
push
xor
cld
in
mov
inc
dec
or
movsl
jmp
lret
mov
sub
jae
mov
sbb
adcb
mov
imul
jbe
mov
cwtl
imul
loopne
cld
mov
jecxz
cli
rorl
dec
adcl
aad
rcll
push
data16
xchg
test
mov
pop
pop
jns
fstpt
in
stos
mov
rclb
mov
mov
pop
and
loopne
jno
cmp
out
add
sbb
sbb
push
inc
sub
xchg
mov
dec
jecxz
pop
not
cmp
sub
xorb
inc
cwtl
popf
std
repz
sbb
mov
imul
out
sbb
or
jle
sbbl
inc
cmp
inc
jecxz
dec
xor
cld
mov
fisttpl
adc
inc
or
add
sarl
stc
mov
nop
add
inc
adc
sbb
pop
insb
cs
sub
inc
das
cltd
dec
or
rcl
lods
sarb
lahf
add
xchg
pushf
and
scas
add
push
dec
arpl
cmp
iret
and
cmpsb
fbstp
inc
je
test
jl
jge
out
jns
dec
mov
push
mov
popf
mov
mov
xor
mov
pop
test
adc
lcall
sbb
cmc
and
das
mov
nop
add
push
push
mov
push
push
inc
imull
inc
cli
fisttpl
rorb
filds
sbb
fcompl
xor
hlt
and
js
push
adc
mov
sbb
sti
cmp
fldl2e
jnp
inc
mov
mov
sbb
nop
pop
push
mov
xor
out
jecxz
xchg
ret
or
sub
ret
mov
add
inc
add
lock
cmpsl
std
bound
in
mov
add
jns
lea
push
mov
or
outsl
in
push
mov
jg
dec
and
mov
xchg
inc
dec
jmp
adc
in
imul
and
mov
add
inc
sbb
stos
push
xor
daa
cmp
test
popl
mov
add
into
int
out
xor
pop
es
mov
sbb
push
adc
lods
jne
or
ss
push
adc
lods
jbe
fmuls
dec
repz
push
dec
inc
jmp
mov
jno
xchg
incl
sub
dec
dec
push
or
lcall
xchg
xchg
js
imull
sub
xchg
hlt
cwtl
jno
pop
xchg
clc
movsb
xchg
inc
push
add
fwait
push
cmp
je
insb
jge,pn
inc
mov
sarb
adc
inc
out
cltd
int
test
popf
adc
mov
out
out
pop
test
pop
push
js
push
data16
xchg
push
jp
or
aaa
or
mov
inc
mov
pop
rolb
negb
cwtl
inc
or
jecxz
jo
scas
cs
dec
mov
test
dec
nop
jns
xor
and
or
outsb
aas
pop
cmpsl
pop
aas
hlt
sbb
sbb
or
push
jno
out
mov
lret
jp
push
jo
nop
andl
xchg
jg
test
or
aas
cmpsl
lods
ror
inc
jecxz
mov
dec
aaa
pop
cmpsl
fsts
pop
inc
sbb
push
push
insl
dec
sub
xchg
neg
outsb
out
add
push
notb
lcall
mov
fists
mov
jge
xchg
jne
xor
in
mov
xchg
ja
jns
ljmp
sarl
popf
inc
addb
aad
push
in
ret
xor
sub
push
push
into
mov
lods
mov
mov
push
rcr
cmpsl
mov
sbb
ret
test
out
mov
jmp
sub
mov
cmc
daa
push
cmpsl
adc
sbb
ret
gs
mov
jl
add
push
stos
jne
mov
fcmove
aad
test
es
push
jb
rol
cmp
pushf
cmp
pop
movsl
inc
fwait
loop
xor
mov
sarl
mov
xchg
cwtl
fimull
add
nop
in
ljmp
dec
push
jns
xchg
imul
outsb
or
mov
dec
dec
popf
call
adc
and
xor
pop
sahf
add
in
imull
cmp
lret
fstps
shlb
adcb
dec
imul
ja
loopne
push
pop
leave
add
imul
xchg
xor
lcall
lret
lret
fbstp
bnd
stos
xchg
mov
add
cmp
adcb
dec
mov
inc
xor
add
jg
pushf
fstpt
adc
fdivrs
sub
mov
stos
fs
jge
push
stc
repz
mov
daa
sti
push
aaa
adcb
adc
or
cld
cmc
push
scas
fwait
jbe
mov
iret
movsl
shrb
stc
or
fists
inc
mov
ret
add
popf
popf
dec
aad
dec
add
jge
cld
sbb
and
cmc
shlb
shrl
outsl
jl
xor
add
dec
mov
push
in
sbb
fdivrl
dec
xchg
arpl
and
cmpb
pop
inc
cmp
imul
mov
xchg
loope
inc
dec
lret
sbb
or
hlt
push
xor
xchg
fmul
and
leave
inc
sarl
jp
sub
push
or
xor
test
jl
shll
scas
in
sub
rorl
xchg
stos
cwtl
push
test
outsb
lock
jbe
xor
gs
or
insb
fbstp
outsb
mov
jbe
xchg
arpl
int3
cmc
sub
das
cs
mov
jl
jbe
lods
adc
mov
mov
push
test
xlat
xor
inc
sub
loope
nop
aaa
fbstp
xchg
mov
jnp
add
mov
mov
or
adc
push
in
js
adc
add
es
cltd
test
fyl2xp1
push
sbb
addr16
pop
mov
cltd
cmpsl
lcall
push
dec
mov
dec
add
das
or
int
shrl
inc
cmp
or
adc
and
subl
add
popa
sbb
and
dec
shrl
movsl
cmp
sbb
cmpsb
cld
fisttpl
cmpsb
jg
adc
test
hlt
jnp
cmp
xchg
mov
dec
data16
mov
das
add
stos
incl
ficoms
dec
adc
out
pusha
fisttpl
lret
mov
adc
divb
jp
das
mov
je
push
lret
mov
inc
lret
insb
jl
lret
pop
shr
mov
popf
mov
fidivrs
lret
es
inc
iret
andl
jo
adc
add
dec
mov
fxch
enter
int3
cmp
sbb
lods
dec
xchg
jns
cli
pop
mov
push
fcoml
cmp
sti
push
xor
clc
mov
mov
call
cmp
push
jno
push
sbb
mov
cmp
dec
into
inc
fidivl
xchg
mov
std
mov
pop
or
lahf
or
insl
mov
pushf
mov
out
mov
lret
aas
insl
jb
or
mov
dec
sbb
xor
std
cltd
test
dec
ss
lea
movsb
sub
movsb
add
push
mov
xlat
mov
mov
aad
in
push
mov
aas
test
das
push
ds
sbb
cld
aad
add
sub
mov
sbb
jg
fidivrs
inc
push
call
cmc
sbb
int
lahf
push
lret
mov
cmpsb
jmp
push
out
inc
jb
mov
sub
mov
lret
jae
ja
ss
inc
adc
notb
call
inc
pop
mov
enter
ret
jg
jo
ret
leave
jae
notb
add
popa
sub
test
xor
pusha
das
sub
ljmp
mov
test
daa
cld
or
js
icebp
js
sub
and
stos
bound
mov
xor
push
inc
lret
xor
sahf
stos
mov
xor
jmp
inc
fidivs
jg
xchg
mov
je
test
and
jge
test
sti
xor
aas
sub
hlt
rcrl
fwait
lods
stos
sub
repz
xchg
scas
xchg
fimull
rorb
mov
mov
push
ds
lock
mov
push
fwait
enter
pop
lods
jnp
mov
xchg
loop
jne
or
stc
inc
xadd
lods
std
mov
and
orl
sbb
nop
arpl
repz
test
pop
push
lret
mov
fnsave
stos
sub
jb
mov
mov
push
push
fs
or
lcall
in
sbbl
push
dec
sub
xchg
adc
dec
stc
mov
aam
or
pop
rorb
xor
pop
stos
cmp
lcall
mov
cs
inc
sti
inc
das
in
jo
call
adc
fwait
add
mov
xchg
inc
jge
imul
jae
cltd
xchg
jno
push
aad
shlb
aaa
mov
add
inc
jb
mov
ret
inc
sub
sarb
imull
xchg
notb
adc
push
das
dec
sbb
out
mov
decb
pmulhuw
out
pop
and
sbb
push
outsl
popa
loopne
xor
cltd
pop
aad
jno
fisubrl
push
mov
lods
movsl
sbb
lods
loopne
sbb
adc
imul
xor
or
fidivs
aas
test
call
inc
in
daa
mov
mov
cmc
loope
stos
mov
push
lret
push
dec
loop
vmovddup
mov
cmp
movsl
adc
mov
push
fidivrl
inc
int3
mov
lock
das
test
sub
xchg
jl
test
in
out
xchg
cltd
pop
fiadds
out
stc
lret
jae
adc
pop
icebp
aas
jl
fucomp
cmp
cmp
call
nop
mov
mov
mov
cmpl
faddl
dec
and
shrl
push
sub
cltd
pop
in
xchg
xchg
or
sub
pop
jbe
push
stos
mov
ret
and
push
testl
outsb
ljmp
rcll
loope
fwait
mov
shr
xchg
mov
push
fisttps
notb
fisubl
subl
jecxz
dec
or
xchg
mov
test
movsl
aam
js
pop
xor
push
push
in
call
popa
push
mov
push
js
jmp
adc
rcrl
lcall
add
cltd
jge
adc
aas
andl
lds
push
dec
lahf
cmp
movsl
adc
incl
dec
inc
mov
dec
std
fisttpl
cmp
cltd
bound
mov
sub
push
pushf
cmc
cmp
mov
cmpsb
jmp
sub
insl
or
cltd
mov
adc
xor
jb
mov
outsl
and
sub
add
cmp
adc
dec
ret
pop
negl
test
xor
ja
and
out
jmp
or
js
and
fcmovnb
pop
xchg
lea
push
enter
fists
dec
scas
pop
push
add
mulb
stos
lds
push
sub
push
call
movsb
push
jnp
mov
ret
jo
lcall
jmp
pop
insb
pushl
popa
loope
in
adc
dec
scas
sahf
xor
add
pop
out
fnsave
push
mov
fsubrl
adc
jbe
push
push
jno
in
mov
jge
pushf
sub
mov
ljmp
adc
and
mov
es
mov
nop
int3
mov
sbb
rcll
or
and
jge
xchg
out
inc
jle
lods
push
sub
je
rclb
pop
mov
cs
dec
sub
cwtl
cwtl
lret
cmp
add
or
mov
xlat
fs
jmp
jg
adc
mov
js
sub
into
xor
negl
mov
jp
stos
or
mov
out
adc
fwait
hlt
fists
push
leave
divb
xor
pop
fcmovb
jae
pushf
icebp
xchg
xlat
iret
clc
icebp
shlb
sub
sti
mov
pop
out
sbb
stc
cld
or
adc
mov
xor
lods
hlt
fnsave
sub
mov
jl
and
std
pop
loop
aaa
jns
movsl
nop
int3
iret
push
or
push
cmc
cmpsl
sbb
mov
sti
cmc
jno
mov
lds
fidivrs
test
sbb
jmp
adc
mov
cmp
xchg
clc
cld
ret
jae
mov
xchg
pop
nop
sub
sub
jbe
jbe
lcall
icebp
xor
clc
push
mov
in
cmc
cmp
cli
outsl
ja
stos
cmp
cltd
mov
push
sahf
mov
push
repz
add
in
addb
jno
cld
or
test
xchg
cmp
sbb
and
xchg
ljmp
lock
mulb
pushf
popa
jg
test
das
dec
sbb
push
negl
jns
xlat
pushf
daa
aam
into
sbb
movsl
stc
push
test
sbbl
push
in
xchg
les
pop
or
loopne
cmp
sub
add
and
mov
jb
push
dec
arpl
daa
sbb
inc
inc
and
adc
or
jbe
inc
pop
sbb
clc
xchg
cld
or
int
jge
loopne
mov
and
dec
xor
enter
movsb
cmc
adc
inc
jbe
mov
lds
insb
lods
mov
std
jmp
mov
fwait
nop
mov
rcrl
cmp
inc
and
xlat
inc
mov
or
mov
jae
add
dec
mov
and
mov
cmp
notl
push
in
nop
xor
jne
inc
out
or
jnp
or
xchg
popa
or
jo
mov
mov
aaa
scas
imul
xchg
mov
jne
xlat
ret
push
jl
mov
push
or
sbb
into
aam
jo
arpl
outsl
xchg
xchg
je
cmp
mov
nop
pop
cmpl
adc
pop
pop
int
push
mov
cwtl
sub
loopne
imul
fs
jae
add
xor
mov
jmp
dec
fbstp
and
add
inc
shlb
pop
mov
or
fdivrl
popa
mov
sbb
mov
mov
mov
test
addr16
ljmp
xchg
pushf
lahf
cmp
cmpsl
ret
imul
cmp
and
xchg
pop
pop
mov
sti
xor
call
pusha
or
mov
stos
adc
mov
and
jle
int3
jmp
clc
jnp
nop
jmp
imul
data16
mov
dec
stc
add
out
jl
popf
xchg
inc
data16
cwtl
push
mov
inc
sbb
scas
jl
lahf
sti
add
neg
mov
pop
pop
cmc
pop
pop
fs
orb
into
jecxz
sti
mov
jmp
insb
mov
jle
add
jg
mov
and
clc
cmp
fwait
in
fdiv
mov
popf
xor
jl
movsb
orb
dec
pop
sbb
das
and
dec
dec
imul
push
mov
push
sarb
xchg
sub
sti
cmp
dec
xor
sub
adc
lods
outsl
inc
mov
cmpsl
fldenv
sub
inc
jg
pop
or
jmp
mov
or
mov
mov
rolb
sub
sub
mov
cltd
pcmpgtw
and
or
repnz
push
push
adc
test
mov
mov
insl
jg
mov
ds
mov
and
adc
push
mov
data16
lods
cwtl
mov
inc
mov
inc
insl
lock
popf
dec
repz
inc
push
pop
cmpsl
lds
fisubl
test
adc
dec
je
pop
test
mov
das
mov
jmp
loope
push
insl
xor
jg
pop
push
out
fdivl
lcall
sbb
pop
int
inc
ret
inc
add
jno
mov
push
and
add
or
mov
cwtl
jne
mov
mov
cmp
jo
outsl
stos
adc
pop
popf
dec
stc
mov
xchg
jle
adc
test
push
das
mov
js
xor
push
insl
cmp
shlb
fmull
mov
add
pop
jle
cmp
cmp
and
jge
aas
arpl
mov
push
dec
int
iret
mull
popl
sub
hlt
test
fdivrl
pop
xchg
outsb
pop
xchg
cltd
adc
cld
mov
sbb
adc
stc
lret
js
in
aad
jno
xchg
push
mov
insl
add
test
rolb
fs
mov
fistpl
push
cmpsl
pop
push
sbb
mov
lea
mov
sub
jnp
ret
pop
ss
mov
sbb
jae
adc
cwtl
mov
adc
inc
adc
add
popa
mov
mov
jns
push
movsb
mov
dec
add
ficomps
sbb
out
mov
mov
dec
hlt
outsl
sub
or
adc
mov
mov
dec
cs
or
inc
mulb
push
test
filds
fiadds
mov
push
pop
pushf
out
imul
imul
add
sub
and
add
jecxz
push
jo
arpl
dec
in
int
out
fucomi
cld
std
fs
test
outsl
aaa
jecxz
jae
cmp
fldenv
ss
adc
mov
pusha
test
push
adc
mov
xchg
push
sti
fwait
les
push
cmp
push
xchg
fiadds
mov
enter
jne
aaa
lods
adcb
jo
insl
inc
test
daa
push
mov
mov
icebp
fisttpl
push
sti
aas
xlat
mov
xchg
hlt
cmc
push
pmaddwd
pop
pop
jp
imul
stc
daa
add
jmp
es
enter
test
ret
shll
sbb
repnz
push
add
mov
xchg
pop
inc
xchg
mov
sbb
popa
add
cmp
dec
xchg
fwait
and
mov
jo
push
fldcw
adc
xor
test
adc
insl
or
add
mov
jecxz
outsl
pop
shrl
lods
setns
mov
inc
insl
scas
sbb
jae
mov
push
cli
testl
fmull
repnz
add
mov
fsubr
je
nop
scas
mov
xchg
les
into
call
fisttpl
cmpsb
adc
xchg
xchg
xlat
sbbb
jne
inc
adc
int
add
mov
pop
xchg
sbb
sahf
sahf
add
mov
inc
repnz
add
fbld
cmp
addr16
push
mov
int
lock
in
sub
sub
ljmp
divb
xchg
in
or
outsl
sbb
jmp
aaa
stos
idivl
stc
jecxz
leave
sub
xor
push
push
fnstcw
mov
mov
ja
adc
dec
aaa
sbb
fdivl
cli
cmpsl
outsb
into
aam
mov
sub
jno
jb
mov
lock
mov
inc
pop
pop
xor
in
xor
cmpsl
push
xchg
mov
clc
ret
xor
push
movsl
jns
sub
xchg
lahf
popf
xchg
test
dec
pop
inc
test
inc
idivl
jmp
filds
dec
cmpsl
sbb
adc
sub
cmp
sub
cmpsl
insl
and
ret
adc
dec
mov
pop
stc
rep
icebp
outsl
faddl
cltd
mov
mov
jge
xchg
xor
bound
adc
arpl
push
sub
pop
and
mov
negb
fbstp
imul
cli
pop
je
outsb
pop
fcmove
add
das
dec
inc
adc
std
repz
inc
mov
mov
shlb
inc
sbb
shlb
lea
in
sub
push
js
add
and
shlb
xor
pop
and
cmp
dec
mov
mov
pop
dec
sub
lcall
ret
or
cs
mov
pop
push
pop
loop
mov
xchg
xchg
pop
hlt
aas
jns
mov
out
dec
jnp
xor
data16
movsb
cltd
xchg
aam
xor
test
sarb
mov
popf
in
xor
pop
add
sti
add
mov
lods
adc
cmpsl
push
imul
popl
aam
roll
pop
hlt
stos
cmp
sarb
push
mov
rcrb
sbb
or
sub
mov
adc
out
xchg
sub
jns
mov
enter
das
sbb
in
gs
push
jl
xor
fwait
imul
and
lcall
sarl
pushf
int
scas
call
lods
xchg
lds
les
lret
rclb
fs
jge
test
into
orb
test
lea
or
dec
xchg
clc
sub
jo
and
xor
stos
or
into
in
mov
or
test
push
push
jo
shlb
test
cmc
push
mov
lea
pop
mov
mov
cmovo
test
mov
in
inc
shl
jno
push
dec
cmpsb
xchg
lcall
fists
push
imul
lret
clc
fcoms
lret
jo
leave
xor
push
mov
fcoml
sbb
dec
fstpt
stos
jg
andl
mov
insb
pop
test
loop
ljmp
lods
js
lahf
nop
nop
xchg
dec
jbe
push
in
pop
pop
stos
dec
loop
push
sub
loopne
pusha
sub
jno
lods
movsb
add
cwtl
mov
dec
cwtl
mov
inc
loopne
popa
dec
std
lret
fisttps
jp
pop
jb
sub
rorb
shll
mov
jp
mov
in
mov
loope
xchg
xchg
jge
out
jnp
mov
push
mov
dec
ret
fmuls
fdivrl
or
cltd
adc
dec
xchg
pop
subb
jge
mov
outsl
pop
jle
adc
repnz
cltd
out
sbb
jp
lret
mov
mov
adc
mov
mov
xchg
loopne
xor
xor
inc
pushf
aas
adcl
add
in
mov
push
neg
pusha
xor
cmpsb
add
cmp
inc
nop
data16
push
inc
sub
mov
fcomp
sbb
push
aaa
sub
aas
stc
in
add
xchg
jae
xchg
jp
mov
movsl
sub
movsl
or
insl
xor
movsl
dec
clc
xor
sub
cmpsl
push
lods
mov
xlat
cltd
push
aas
mov
cmpsb
scas
or
jns
jecxz
and
xchg
adc
mov
loopne
cmpb
icebp
lock
fs
call
daa
bound
int3
stos
mov
inc
xchg
dec
ds
js
inc
mov
xchg
hlt
inc
stc
fdivrs
daa
mov
std
lods
mov
jae
mov
shl
arpl
in
inc
jle
outsb
dec
or
push
lds
jno
cli
jns
mov
call
loope
add
xchg
jecxz
mov
sub
cmp
adc
lock
adc
imul
mov
das
outsl
test
scas
cmc
leave
mull
jnp
imul
fs
xor
pop
add
pop
jp
mov
inc
add
adc
push
mov
lds
add
cmp
cmp
pusha
out
shll
fimuls
jp
dec
ljmp
ja
sahf
cmp
mov
rorl
sub
cmpsb
insb
cwtl
aad
jg
lahf
xchg
nop
mov
fdivs
add
push
dec
pushl
inc
fwait
xchg
sub
in
or
test
mov
mov
cmp
mov
lea
push
popa
and
and
jno
and
pop
sub
jnp
bound
sarb
fstp
ret
shll
xchg
lods
ret
jp,pt
hlt
xlat
rol
shrl
push
mov
and
pop
pusha
and
sahf
push
jmp
adc
shlb
cmp
xchg
fiaddl
jmp
xor
lcall
cmp
arpl
ja
push
pop
ror
lock
scas
mov
pop
push
mov
mov
repz
fs
add
aam
arpl
movb
adcl
push
xchg
in
rcrl
les
ljmp
test
adc
adc
movsb
cltd
pop
sub
cmpsl
xchg
test
je
call
sarb
push
gs
enter
push
push
cld
call
mov
push
shrb
xchg
add
or
cli
shl
cmp
out
stos
fstpt
call
stc
popa
jb
and
pop
stos
leave
stos
add
xlat
push
pop
dec
xchg
int
mov
or
insb
mov
xchg
inc
in
insb
xchg
fsub
mov
lock
scas
xor
jnp
call
stc
jmp
out
cld
cli
mov
adc
hlt
push
ret
fiaddl
pusha
and
scas
xchg
jl
fadds
ja
sub
sbb
adc
hlt
pop
push
and
adc
xor
add
cmp
fidivrl
sbb
mov
cmp
xchg
xor
cmpsl
push
pop
insl
inc
rorb
mov
jg
sub
dec
mov
jne
gs
inc
scas
mov
push
lret
addb
pushf
imul
dec
xchg
int
push
mov
or
xor
jno
and
and
cltd
sub
mov
sbb
arpl
xor
aam
popa
sarb
mov
mov
sbb
mov
test
loop
sarl
stc
adc
pop
rcl
pop
ret
pop
xchg
xchg
sub
bound
aas
call
or
faddl
or
inc
adc
pop
xor
aaa
gs
call
push
pop
adc
imulb
js
test
cmp
int
mov
cmc
mov
pop
jge
mov
fcoml
clc
test
or
repz
popa
and
sub
jg
in
xchg
cs
pop
and
jbe
jae
push
pop
sub
insl
fldt
inc
sarb
addl
push
inc
inc
imul
xlat
insb
sbb
outsb
lret
dec
repz
icebp
sub
and
and
mov
out
add
sahf
pcmpeqb
sahf
adc
sub
dec
dec
inc
into
xorl
stos
int3
pop
stc
or
adc
pop
sub
push
int
inc
loopne
inc
dec
add
jnp
mov
add
adc
arpl
sti
mov
jae
inc
out
faddl
cmpsb
add
dec
lret
sbb
inc
and
and
xchg
cmovle
imul
ret
mov
and
pop
insl
lret
aaa
mov
mov
pop
push
lcall
push
in
and
mov
sbb
cwtl
movsb
jnp
dec
jno
xor
std
push
lret
testl
cwtl
fisttpll
mov
scas
sub
sub
imul
add
dec
frstor
mov
inc
lahf
xchg
in
xchg
les
pop
daa
aaa
je
jecxz
mov
xchg
lret
fs
pop
xchg
jae
mov
cmp
jae
jne
jmp
dec
subb
not
sub
cmp
stc
add
mov
push
xchg
insl
leave
add
push
dec
add
xor
add
test
pushf
jo
stos
fs
nop
add
scas
mov
pop
jb
test
clc
movl
dec
outsl
xor
es
inc
dec
xchg
pop
sbb
inc
nop
lcall
mov
stc
nop
ficoms
shlb
sbb
sub
mov
lret
fsts
lcall
xor
lods
mov
dec
push
fs
mov
std
adc
es
dec
cmc
mov
lret
mov
ret
cmp
icebp
popf
inc
cmpsl
inc
mov
nop
imul
ror
loopne
addl
pop
popf
pop
into
shl
pop
orl
dec
sub
inc
adc
ret
push
xchg
or
push
jg
cmp
sbb
sbb
lock
cmp
mov
and
cmp
fcmovb
push
insl
adc
mov
lahf
sub
mov
ret
or
ljmp
xchg
lret
mov
sahf
jg
dec
enter
dec
mov
inc
stc
movsl
or
ret
dec
int3
lret
outsl
lods
out
inc
enter
divl
mov
out
sti
in
jle
and
cmp
push
scas
nop
xchg
pop
jp
xor
sbb
sub
or
pop
push
rcpps
in
push
mov
arpl
cmpsl
fstp
stos
into
or
xchg
push
pop
stos
cmp
out
sarb
test
fldl
xor
pop
data16
jp
call
pop
jns
push
mov
inc
sbb
inc
mov
ja
push
push
iret
mov
ljmp
jg
xor
mov
mov
call
pop
mov
sub
loopne
test
xchg
addb
call
aad
add
pop
ficoms
int3
push
dec
idivb
addl
pop
inc
lea
jnp
xor
and
pop
mov
es
cmpsb
inc
fwait
xor
xor
xchg
pop
add
ret
rcr
mov
xor
jmp
dec
inc
adc
movsl
push
xchg
fsubs
xlat
in
mov
mov
call
fdivr
inc
or
sub
inc
add
ficoms
xacquire
mov
jb
push
and
ja
jns
mov
add
fiaddl
cld
out
ret
pop
xchg
popf
sub
in
call
outsb
sub
or
out
push
mov
test
fcompl
pop
xchg
xlat
je
cmp
push
mov
mov
inc
pop
jb
pop
dec
test
fwait
divb
xchg
mov
rcr
sahf
jge
xchg
jo
inc
sbb
push
sub
push
inc
cwtl
cld
dec
sbb
arpl
jns
dec
cli
pop
pop
mov
inc
jp
movsb
insb
clc
xor
pop
sarl
jle
pop
pop
push
xor
in
in
jno
andb
sub
dec
inc
nop
pop
mov
mov
jp
mov
cld
adc
mov
sti
mov
clc
mov
lret
mov
jecxz
stc
das
lea
push
andb
repz
aaa
inc
xor
or
cmp
sti
jae
mov
movsb
push
frstor
adc
jns
roll
sub
mov
mov
cld
les
mov
lods
loopne
jge
enter
mov
cmp
mov
mov
inc
mov
sti
adc
sub
xchg
xor
inc
or
pop
add
push
dec
cmc
stos
inc
cmp
dec
mov
cltd
xor
jae
dec
lret
cmp
sbbl
aaa
jle
into
push
mov
jl
push
jmp
cmp
cmp
lahf
jecxz
inc
jno
outsl
popw
mov
push
in
cmp
adc
int3
dec
scas
loop
test
mov
xchg
je
pushf
bound
test
push
mov
fldcw
cmp
mov
popf
repnz
sti
std
movsl
test
bound
gs
das
stos
imul
xchg
sbb
ret
push
subl
pop
fadds
mov
call
jmp
jbe
cmp
dec
dec
nop
imul
imul
cld
mov
out
int3
es
jg
sbb
cwtl
or
mov
scas
inc
add
mov
xor
mov
iret
fisttps
hlt
ficompl
xchg
in
pop
out
push
aas
aaa
jmp
xchg
mov
movsl
xchg
xor
mov
adc
in
ret
and
cs
xor
xchg
test
dec
sahf
dec
insl
aad
shl
test
push
pop
imul
sub
sbb
cmp
fisubrs
mov
in
xchg
mov
pop
andl
aas
ret
loop
and
xor
js
shll
pop
cmpsb
inc
adc
fldl
ljmp
cli
inc
pop
test
pop
mov
bound
jle
jge
sahf
outsl
mov
mov
es
xchg
ljmp
loop
mov
cmpb
jmp
inc
sti
adc
sbb
sti
push
push
pop
int3
cwtl
mov
fwait
mull
fistps
clc
mov
mov
push
xchg
mov
sbb
mov
mov
push
lret
push
sbb
arpl
inc
push
push
or
popf
leave
jo
notb
add
loope
sub
fcom
incl
sub
adc
jmp
pop
xchg
dec
push
sub
pop
ficoms
push
jp
and
in
test
idivl
and
cli
ds
nop
mov
xchg
sarb
sub
xchg
cmp
div
imul
lds
dec
fdiv
mov
int3
mov
mov
into
pop
cmp
sub
out
les
inc
cwtl
pop
cmp
cmp
insb
addb
cmpsl
pop
sbb
pop
enter
sub
mov
or
movsb
mov
scas
dec
mov
dec
xor
mov
cmc
mov
add
repz
mov
push
mov
adc
jb
pop
iret
lret
and
int
jne
inc
mov
or
aas
js
mov
mov
in
push
push
mov
je
icebp
xor
sub
mov
xor
inc
repnz
and
push
push
mov
js
sbb
dec
fcomps
enter
push
inc
lahf
cld
cmp
ss
or
js
inc
aad
and
sbb
push
fs
enter
int3
sbb
stc
repnz
push
frstor
inc
or
test
and
sarl
std
mov
push
mov
loope
xchg
clc
sub
cmp
call
or
sbb
dec
out
loope
out
iret
and
dec
lcall
lds
xor
jb
jge
js
imul
rcrb
orb
xchg
fstl
jp
test
imul
out
jns
cmp
pop
cmp
notb
in
mov
mov
loope
cltd
mov
inc
and
or
mov
dec
mov
cmp
xor
call
lods
or
cli
mov
and
enter
lods
out
repz
mov
mov
jle
and
inc
mov
mov
pminsw
jg
ds
das
jg
or
mov
push
stos
js
inc
cmc
pusha
cmp
xor
inc
std
imul
jle
or
mov
or
adc
push
push
cmp
pop
mov
mov
xor
jae
pop
sub
adc
aad
pop
mov
sub
jle
mov
push
mov
jb
mov
cmp
xchg
or
and
scas
test
mov
add
jl
cmp
xor
cli
push
add
repnz
cli
and
or
arpl
cmp
mov
sub
xor
repnz
jg
sarl
pop
inc
inc
jle
int
aad
inc
fs
mov
xor
dec
ret
out
icebp
jle
jmp
sub
xor
sub
xor
scas
icebp
pop
stos
jo
hlt
xor
sahf
sahf
in
pop
outsl
cmp
add
jecxz
adc
jecxz
out
push
cmc
sub
cmp
xor
int
icebp
adc
pop
pusha
lods
xchg
jge
daa
and
sub
jno
in
icebp
and
mov
inc
dec
pop
fcoms
rclb
xchg
fsts
mov
pop
ljmp
lods
movsb
pushf
dec
imul
mov
pop
push
repz
pop
fistps
mov
adcl
pop
iret
jecxz
lret
aaa
icebp
fmull
out
test
lods
push
jge
mov
mov
jge
mov
dec
jne
jmp
lcall
cmpsb
cmp
stos
mov
mov
pop
cwtl
dec
dec
sub
inc
test
fstpl
test
adc
movsb
cli
mov
std
fimull
addr16
aaa
and
mov
cmpsb
sahf
aad
cwtl
lea
xor
test
aam
js
fdivl
xchg
inc
push
push
mov
add
xchg
mov
xlat
clc
test
movsb
into
inc
jbe
mov
adc
nop
cmp
negl
imul
test
cmp
ficomps
fstpt
add
fs
sbb
rolb
sub
xchg
fisttpl
cmc
popf
xor
lods
push
inc
push
pop
sub
movsb
fcmovnbe
or
xchg
daa
mov
ja
push
loop
or
dec
loop
stc
out
popa
flds
push
sbb
shrl
popf
addb
mov
cld
jmp
sahf
dec
and
fcoml
pop
lahf
rorb
dec
je
mov
rclb
push
fimuls
inc
ret
jecxz
push
add
addl
icebp
popa
stc
dec
xchg
lock
or
jge
lock
in
mov
sbb
in
loope
jae
add
lods
in
jl
shl
jmp
iret
jno
jo
or
inc
xor
mov
repz
pop
arpl
iret
pop
xlat
add
xchg
mov
push
mov
fidivs
pop
ss
loop
push
pop
mov
hlt
dec
popf
lea
or
out
mov
repnz
add
and
cmp
mov
sar
ja
push
push
movl
jge
add
int
sarb
cmpsb
lock
fidivs
cltd
loop
jl
cmp
inc
mov
push
jae
iret
addr16
push
test
adc
int
push
pop
loopne
scas
inc
xor
repnz
lock
xlat
adc
popa
push
aaa
add
ljmp
lods
jg
mov
cmp
lret
xor
imul
xor
pop
push
enter
push
adc
or
ret
mov
lret
aas
mov
pop
jb
aam
sub
addl
adc
lea
jno
sub
popf
movsb
mov
adc
mov
clc
jecxz
xchg
jge
daa
inc
dec
mov
inc
cmp
test
in
in
dec
push
aas
ss
mov
jae
sarb
push
sbbb
hlt
lds
popa
aaa
aaa
icebp
mov
or
xor
cmpsb
or
inc
ljmp
add
rorb
fnsave
jp
xchg
test
xor
cmc
inc
ret
in
inc
cmpsb
movsl
negb
ljmp
sarl
lret
movsl
movsb
cmp
cld
dec
lret
cmc
test
pop
adcl
sbb
sbbl
jmp
ficomps
jb
xor
movsb
incl
or
cmc
xor
js
sti
xchg
testl
sub
push
sahf
dec
adc
add
out
sbb
adcb
addr16
pop
xchg
cmp
or
sbbb
mov
mov
mov
orl
jae
add
mov
das
lret
adc
cld
add
pusha
pop
xor
subb
outsb
out
xor
orps
mov
sbb
inc
jns
fimuls
xor
adc
pop
mov
jg
mov
stos
pop
imul
pushf
insl
dec
shrb
stc
icebp
sbb
jmp
cmp
outsl
test
inc
add
xor
adc
dec
fiadds
imul
clc
mov
cli
push
or
lcall
xchg
nop
xlat
cs
pop
cmpl
stos
mov
xchg
lods
xchg
jle
and
gs
in
out
push
mov
movsl
inc
fwait
and
jae
sarb
movhps
loopne
and
push
mov
jns
mov
mov
ret
push
adc
fsubs
lea
adc
aad
mov
cmc
or
inc
fdivr
dec
es
pop
movl
mov
mov
movsb
sti
cmp
cmpsl
dec
ffreep
fxam
mov
mov
test
pop
xchg
cltd
call
sub
jp
xor
push
shll
aas
add
cmpsl
mov
divb
jb
inc
es
dec
push
orl
xchg
jnp
push
push
loop
push
push
jmp
stc
push
and
shl
insb
int3
jp
jp
jno
lret
xchg
mov
lret
xor
fidivrs
scas
mov
insb
mov
cmc
fildll
jns
ja
sahf
jecxz
xchg
sahf
xchg
mov
out
sbb
out
jne
imul
andb
shll
in
pop
and
jge
stc
sub
jge
mov
dec
inc
int3
inc
dec
add
inc
cmp
test
loopne
mov
jbe
or
pop
pop
imul
sbb
aaa
pop
jmp
js
push
arpl
xchg
jb
notl
sub
repz
cmc
add
mov
adc
jnp
inc
pop
dec
dec
jge
sbb
fisubl
fcoml
cwtl
pop
test
mov
adc
into
into
or
lock
stos
les
test
sub
pusha
push
rcll
mov
jnp
push
or
push
mov
sbb
jecxz
push
xchg
mov
xchg
jle
fs
xor
jns
add
jnp
into
jnp
pop
loopne
mov
cltd
lods
cmp
les
or
cmp
icebp
sbb
int3
sub
adc
in
push
lds
inc
mov
outsl
dec
ret
jmp
pusha
and
xchg
push
insb
lods
cmp
daa
sbb
leave
inc
lcall
xchg
clc
sbb
pushf
in
addb
jns
sbb
test
push
lahf
lods
hlt
outsb
dec
dec
jnp
in
rorb
jns
or
je
cwtl
and
adc
sub
and
mov
aas
adc
dec
sarb
shl
push
sbb
sub
jp
pop
add
cwtl
mov
mov
insl
mov
or
xchg
mov
imull
xlat
xchg
cmp
mov
inc
cmp
sbb
mov
fcoml
int3
in
push
pop
hlt
or
out
jne
sub
pop
scas
jnp
adc
lret
mov
jg
test
push
in
lret
or
addl
mov
inc
popa
add
mov
mov
xchg
test
pop
in
xchg
adc
out
adcl
jns
in
xor
cmp
push
repnz
icebp
xor
adc
fwait
mov
push
sub
jne
out
insl
mov
mov
push
das
and
adc
movsb
inc
inc
ss
ds
ret
test
sub
dec
mov
cmc
fwait
mov
push
xchg
and
ss
cmp
cs
stos
mov
aas
push
pop
daa
xor
cmp
push
xchg
out
push
jg
pop
aam
lcall
push
outsb
out
adc
cmp
push
movsl
shlb
push
cmpb
cmc
jmp
fildl
mov
scas
mov
inc
lret
cs
xchg
jge
fadd
xor
dec
into
popa
int3
repz
lock
lea
mov
pop
adc
je
xor
push
int3
flds
push
fcomip
xchg
int3
cmc
or
or
popf
ret
inc
stc
xor
add
outsl
mov
clc
mov
jbe
fiadds
sarb
leave
xor
enter
xchg
ficomps
repnz
jmp
les
and
js
xor
and
cld
inc
sbb
xchg
loope
popf
cmp
and
call
push
in
cmp
push
ss
mov
loopne
popf
jns
ljmp
mov
fwait
into
adc
ret
mov
sbb
adc
adc
jne
jno
inc
pop
enter
pop
in
push
leave
add
xchg
xchg
dec
mov
dec
sub
jg
add
adc
or
orb
jae
stos
mov
aaa
leave
repz
enter
sub
arpl
pop
push
ds
movb
xchg
mov
scas
lock
sti
jg
and
out
sbb
and
repz
rcl
flds
lret
cmp
sahf
jne
sbb
mov
mov
xchg
mov
insl
cmc
outsb
mov
fnstcw
lods
xlat
das
sbb
add
adc
out
setnp
movsb
add
fidivs
fdivs
pop
pusha
popa
and
shr
sub
das
imulb
mov
aam
popa
fmull
or
fists
jl
cmpsl
scas
lcall
outsb
call
xor
ds
push
repnz
rorl
dec
dec
add
or
test
mov
cld
push
xorl
and
xor
lods
xlat
lahf
or
add
in
or
jbe
lret
lods
xchg
cwtl
das
addr16
sub
je
movsb
scas
cmpsl
daa
dec
xorl
jne
ret
sbb
mov
xchg
jo
adc
jp
pushf
lock
jo
dec
add
cmp
outsb
adc
rdpmc
add
fsubrl
mov
sbb
outsb
push
fisttpll
aaa
rolb
xchg
imul
dec
loop
ret
xchg
push
adc
dec
jecxz
shrl
sbb
xor
or
xchg
repz
in
pop
punpckhdq
adcb
add
mov
xor
and
push
std
dec
negb
sahf
sbb
fwait
push
adc
mov
jle
add
push
mov
add
jns
cmp
je
sub
fs
push
cmpsb
sahf
xchg
jnp
cmp
ret
xchg
cs
xchg
jnp
int
sbb
cmc
mov
pop
jo
shrd
daa
sti
mov
loopne
gs
and
inc
movsl
cwtl
push
stos
or
aam
call
lret
xchg
cmp
pop
test
mov
lahf
cld
mov
xchg
or
xor
inc
cltd
pop
popf
mov
rorb
jbe
or
stos
xorb
out
jno
cmpsb
int
inc
xor
mov
cmp
sub
movsb
mov
aas
and
pop
call
xor
repz
mov
enter
aad
lods
push
sahf
cmp
repnz
test
jae
popf
std
or
leave
push
xchg
fldl
jne
pop
push
shlb
cmpsl
xor
fisttpll
inc
jg
lods
insl
mov
mov
jp
jmp
mov
std
dec
mov
pop
jecxz
cmc
or
and
push
and
stos
xchg
shr
dec
mov
xor
jnp
es
mov
imul
mov
mov
sub
lea
sbb
adc
adcb
and
add
js
orl
adc
je
pop
filds
cli
hlt
jl
movsb
mov
mov
mov
xor
sarb
psllq
test
sub
outsl
push
lock
cmc
outsb
hlt
cltd
push
into
pop
adc
fdivrl
pop
movsl
ds
cmp
xor
adc
aas
xchg
sbb
or
jecxz
xlat
jns
cmp
xchg
lret
aas
jo
popf
insl
sbb
lods
out
imulb
mov
out
xlat
je
or
push
xchg
cld
pop
pop
or
sub
mov
out
xchg
jg
gs
fwait
inc
mov
test
popf
cmc
lods
pop
push
xchg
into
mov
xlat
inc
lds
loopne
sub
das
push
stc
and
aaa
mov
xlat
cmp
xchg
fs
mov
fwait
std
les
jmp
dec
adc
fwait
sbb
test
push
call
cwtl
inc
call
xchg
pop
cmpsl
lods
sub
mov
fwait
pop
mov
push
pop
das
data16
dec
jne
xchg
mov
mov
pushw
lods
or
in
loopne
icebp
mov
jb
push
imul
mov
push
scas
inc
sti
orb
in
icebp
cmp
sbb
sub
add
and
xor
insl
jecxz
sub
or
data16
cmp
cmp
push
push
fnsave
adc
cltd
cmp
insb
shrl
lahf
lds
mov
subb
and
sbb
rorl
pusha
loop
adc
fcom
fmull
sub
inc
stos
mov
fsubrl
xor
repz
push
add
mov
jmp
or
adc
cld
xchg
fiaddl
enter
arpl
test
xor
xor
sub
hlt
bound
mov
inc
and
shll
mov
sbb
mov
out
jo
or
lods
cwtl
xchg
jb
mov
mov
or
fisttpll
push
lcall
sar
clc
push
push
xor
sarl
jnp
in
aam
mov
xor
dec
mov
insl
movsb
jle
dec
int3
out
mov
pop
cltd
adc
insl
es
fstp
xor
ret
xchg
xchg
mov
orl
outsb
jae
mov
scas
int3
xchg
int
out
dec
sbb
and
nop
sbb
pop
daa
sbb
adc
daa
xlat
push
jnp
imull
rolb
jge
stos
iret
rcrb
mov
xor
jo
add
ss
adc
fsts
js
xchg
rol
dec
ljmp
fstpl
les
scas
or
push
cmp
popf
xchg
roll
mov
loop
add
mov
xchg
call
jae
pop
xor
daa
cs
pop
mov
add
movsb
pop
jno
dec
mov
jecxz
ds
push
pop
mov
loope
add
cld
not
jne
sti
mov
mov
out
or
sub
aaa
je
mov
xor
add
arpl
enter
cmc
andps
lods
push
xor
les
or
in
cmp
and
jl
insb
fnstsw
mov
in
imul
dec
push
out
xor
negb
mov
add
and
jns
std
shrl
xor
insl
dec
fdivrl
fisubl
ret
lods
sub
sbb
adc
repz
std
cld
adc
scas
sub
in
mov
inc
xchg
add
call
cmp
int3
pop
sub
lock
mov
stos
imul
jle
jg
testb
inc
ret
dec
push
stos
dec
imulb
pop
leave
pop
cmpsb
stc
or
ljmp
lods
pop
mov
sub
scas
adc
inc
pop
mov
push
add
je
lods
adc
mov
dec
fisttpll
repz
imul
int
jecxz
sub
ljmp
inc
jno
mov
mov
sbb
out
stos
xor
mov
cmp
js
scas
iret
add
cld
test
movsb
imul
dec
ss
sub
popf
adc
jo
jecxz
dec
push
test
add
jecxz
fidivrs
ret
sahf
jge
icebp
push
es
cmp
aad
push
mov
dec
xchg
pushl
dec
mov
pop
test
das
stc
cmp
lcall
stos
flds
in
in
insl
mulb
sub
imul
xorb
out
aad
inc
dec
inc
popf
lods
popa
push
sub
testl
inc
sbb
lock
push
mov
add
pop
jne
mov
es
cli
stc
std
lret
push
stc
lcall
jne
or
xchg
push
shr
sbb
test
mov
xchg
cltd
imul
movsl
mov
fsts
pop
xor
push
cs
push
push
cmp
icebp
pop
sbb
adc
cmp
fnstcw
adc
bound
lcall
lods
je
xorb
xchg
repz
int3
push
cmc
mov
mov
and
in
rol
notl
aas
aas
push
inc
mov
xchg
shlb
adc
das
jecxz
hlt
xor
lret
mov
dec
enter
sub
std
jg
stos
jl
cmp
ret
cwtl
pop
push
xchg
and
stc
push
sbbb
xor
xor
pop
xor
cwtl
adc
xor
jns
aad
push
mov
inc
sqrtps
and
inc
xor
pop
mov
pop
xchg
pop
or
push
lahf
cwtl
dec
arpl
mov
out
adc
mov
insl
stos
ss
push
pop
adc
and
mov
or
adc
mov
je
push
call
adc
jbe
inc
popa
nop
jl
scas
cmc
fwait
in
xchg
and
mov
punpckhbw
aad
pop
adc
sbb
xor
out
divb
xor
jo
mov
lahf
aam
call
sbb
mov
xor
mov
mov
cli
or
and
xchg
inc
or
iret
les
mov
sub
stos
fldl
in
ret
and
gs
mov
call
pushf
cmp
cld
aad
jge
ljmp
scas
adc
lea
jmp
fmuls
andl
xchg
jl
cmp
fadd
sub
pusha
and
pop
pop
stos
pop
popa
ret
fstpt
stos
sbb
cmpl
loop
push
out
jecxz
add
add
outsl
fdivs
outsl
add
notl
data16
dec
lods
adc
xchg
lahf
mov
insl
les
push
push
push
inc
insl
jle
ss
test
and
xchg
and
imul
sub
movq
cmpsb
ds
or
inc
mov
sub
loope
cltd
xlat
sbb
rcrb
std
aaa
pop
scas
add
out
mov
cmpsb
jle,pt
cwtl
add
jecxz
insl
subl
mov
jns
rcl
xorb
mov
and
jmp
and
ds
fcompl
lods
pop
and
xchg
xorl
dec
mov
and
testl
dec
movq
enter
std
jle
leave
xchg
add
ds
mov
int3
add
test
fisttpll
ja
loope
push
lret
repz
int
jae
push
jns
shlb
rorb
xchg
test
adc
clc
dec
mov
loop
jl
mov
dec
push
sub
mov
xchg
fsubrl
dec
xchg
jmp
add
and
addr16
adc
sub
rclb
mov
add
inc
mov
sub
test
jmp
xchg
popf
aaa
outsl
stc
imul
or
or
sbb
sbb
test
fwait
pop
pop
add
mov
dec
cmp
icebp
lds
pop
push
test
je
add
xlat
into
in
cmp
xchg
test
add
mov
xchg
lds
fimuls
ljmp
arpl
add
mov
adc
movsl
fimuls
into
test
and
or
xchg
push
push
pusha
sub
inc
ljmp
xor
or
call
sub
inc
gs
sbb
push
in
dec
pop
adc
mov
pop
and
xchg
inc
push
inc
sti
and
and
aad
push
repz
jno
std
fidivrs
ljmp
popf
add
cltd
xlat
cmpsb
jo
jmp
jp
sub
sahf
xor
icebp
mov
sub
and
push
dec
fxtract
addps
int
xchg
test
fnstenv
js
jl
subb
mov
int3
cmpsl
cmpb
je
cmp
mov
roll
adc
push
or
or
iret
xchg
test
out
aaa
es
or
bound
gs
repnz
push
xchg
repnz
xchg
and
mov
jp
mov
cli
in
in
iret
inc
dec
pop
insl
rorb
lods
jp
adc
dec
push
sub
mov
sub
push
out
push
sbb
sahf
xchg
jmp
push
shr
loopne
mov
lock
add
and
mov
pop
mov
push
lds
fistpll
sbb
imul
rcll
cmp
das
pop
or
jp
inc
inc
out
dec
stos
mov
mov
cmp
inc
pop
add
dec
pushf
jo
cmpsb
lods
and
mov
jp
ret
jecxz
mov
test
ja
add
das
mov
repz
addr16
scas
cmp
cmp
jmp
pop
sbb
and
mov
jbe
out
repnz
add
inc
test
test
aas
push
jmp
jne
stos
pop
jbe
and
movsl
sbb
mov
aas
xchg
sub
loopne
xchg
scas
dec
jp
mov
sahf
in
jo
jnp
sbb
dec
cwtl
jnp
addr16
inc
bound
jae
fadds
rcrb
lahf
lret
lods
scas
clc
out
jmp
xchg
sbb
out
lds
sub
cmp
imul
jns
movsb
mov
jo
insb
fstpl
and
out
mov
jmp
sub
inc
jne
aam
xor
cmp
pop
repnz
daa
popa
push
mov
insl
jmp
aad
inc
adc
outsl
rolb
repnz
xchg
adc
pop
or
int3
adc
aas
push
cmp
jg
jl
rcrb
xchg
clc
jbe
sbb
mov
mull
inc
pop
adc
jns
xor
pop
in
lahf
aas
cld
std
lahf
xor
imul
mov
or
mov
mov
jmp
push
mov
add
mov
test
xchg
or
dec
pop
imul
mov
pushf
fsub
jl
loop
dec
jg
pushf
mov
hlt
mov
cs
pop
negl
add
pop
and
mov
mov
cwtl
test
sarl
fisttpll
and
or
sbb
das
jb
adc
lcall
lea
insl
jmp
xor
adc
insb
pop
clc
addr16
lahf
inc
lds
dec
or
cltd
clc
stos
sbbl
pop
lcall
je
pop
punpckhdq
lret
fld
pusha
imul
inc
iret
mov
push
dec
jl
pop
add
outsl
in
mov
lods
outsl
scas
adc
and
jg
lock
mov
pusha
out
pop
add
xlat
addr16
jecxz
jne
pop
cmp
xor
and
sbb
push
in
jmp
sbb
dec
mov
fmulp
mov
push
lret
inc
les
mov
repnz
testb
push
dec
lds
rorb
dec
add
sbb
xor
cmpsb
xlat
or
mov
pop
push
insb
add
adc
lods
cmp
inc
cmp
into
jmp
cmp
and
in
aas
fldt
int
popa
scas
mov
aaa
xchg
or
std
mov
in
mov
mov
mov
pop
push
ret
adc
je
inc
xchg
in
loopne
filds
insl
add
lods
rcl
mov
fwait
in
outsl
scas
ja
int3
cld
inc
call
or
cli
cmp
mov
or
ds
sub
insl
jg
or
pop
movsl
cld
sbbb
dec
pop
jnp
in
fidivrs
leave
dec
in
cmpsb
cmpb
mov
pop
adc
test
rcrb
ljmp
daa
pusha
pop
jne
ja
js
ds
sub
dec
mov
mov
cmp
pop
je
add
fisttpl
mov
movsl
mov
test
jl
lahf
pop
sbb
insb
fildl
std
mov
fldl
jle
push
imul
test
mov
cwtl
push
test
in
dec
mov
jle
mov
outsl
leave
inc
mov
aam
fdivl
inc
mov
shll
icebp
shl
je
aaa
add
sub
ret
mov
aad
outsb
fsubl
mov
out
cmp
loopne
sub
in
and
mov
bound
loopne
mov
push
inc
inc
dec
dec
push
mov
push
mov
rclb
lock
jg
dec
ds
cmp
int
fmuls
mov
push
repz
or
inc
gs
mov
mov
jb
cmp
testb
cmp
pop
and
and
rclb
push
jno
jmp
sub
scas
mov
loop
jb
jno
data16
loopne
repz
mov
pop
sbb
mov
xchg
dec
mov
inc
in
xor
adc
popa
popa
jb
sub
or
in
cmp
setne
adc
jne
mov
into
mov
movsb
insl
or
cwtl
jge
push
std
mov
inc
mov
inc
sub
xor
inc
movsl
div
dec
jp
das
and
ljmp
dec
sbb
push
test
or
pop
lcall
lock
cs
leave
cs
sbb
push
push
jns
lock
or
ss
call
mov
jle
aas
les
fimull
xchg
mov
out
shll
jno
mov
mov
mov
outsb
pop
push
js
stos
and
les
dec
xchg
ljmp
imulb
mov
bound
push
mov
mov
cld
inc
in
jg
call
sbb
rcr
mov
push
std
cmc
mov
cmp
push
out
pop
push
sbb
adc
mov
out
imul
push
out
lahf
lahf
jmp
jnp
lds
call
into
mov
or
cld
cmpsb
inc
in
dec
insl
test
pop
add
xchg
mov
in
int
pop
fdivs
jge
je
pop
or
mov
hlt
jg
ljmp
xor
ret
jo
mov
ret
cmp
sbb
das
arpl
popf
int
insb
add
lahf
xor
rcrb
idivb
fadds
dec
mov
push
scas
xchg
push
xlat
dec
ja
insl
shl
pop
pop
or
sbb
sub
fsub
inc
sbb
push
sbb
cmp
sbb
jo
scas
cmp
sub
enter
repnz
in
mov
or
sub
dec
pop
jg
pop
cmp
in
arpl
inc
sub
test
pop
cltd
mov
push
or
lahf
cmp
add
test
cmc
int3
sub
mov
mov
sti
inc
loopne
push
or
cltd
sub
lcall
out
inc
mov
subb
les
sbb
dec
imul
mov
add
das
leave
mov
mov
sbb
and
adc
xchg
sti
xor
sub
and
push
adc
les
push
stc
pop
jg
and
inc
insb
sti
dec
and
mov
mov
jo
pop
cmp
mov
mov
or
inc
and
jmp
dec
jne
xor
add
mov
push
popf
sbb
lret
addr16
mov
jg
sbb
addr16
pop
sub
jle
jecxz
push
cli
or
pushf
into
dec
cmpsb
and
mov
das
hlt
add
jg
mov
fistl
outsl
divb
pop
mov
jmp
daa
adc
add
adc
outsb
in
cmp
cmp
push
cmpl
loope
xchg
test
cs
cli
imulb
xor
mov
sarb
mov
pop
xchg
into
mov
xlat
pop
or
fists
insl
jecxz
or
inc
popa
hlt
lock
std
out
test
shlb
jp
fwait
dec
es
ss
ds
cld
inc
xor
jno
call
daa
insb
insl
imul
sahf
dec
mov
adc
push
sub
and
sahf
jle
sahf
dec
out
std
xchg
push
outsl
sub
cmc
sbbb
jecxz
out
xchg
jns
pop
xchg
cmp
and
jo
fcom
stos
out
repz
inc
pop
fidivrs
mov
dec
js
mov
fcmovnbe
dec
test
leave
jl
sub
insl
shl
adc
pushf
lret
push
add
mov
std
in
mov
aaa
and
enter
jecxz
sub
push
push
out
adc
inc
cmpsl
sti
xor
push
and
outsb
adc
pop
and
dec
fcoml
adc
cmp
mov
push
aaa
test
int
out
xor
pop
xor
and
cmp
sbb
xor
ret
fimuls
jmp
aas
push
pop
and
dec
mov
lcall
pop
fnsave
scas
es
fisubrl
int
loop
xchg
jne
and
xchg
mov
jnp
sub
fcompl
lret
mov
in
repz
jmp
cld
lock
lods
stos
and
cmp
mov
pushf
add
mov
insl
dec
imul
orb
je
outsl
movb
fucomp
loope
inc
or
push
and
sbb
sti
popf
movsl
mov
test
ljmp
sub
repnz
bound
repnz
push
int3
ja
ljmp
push
test
jl
ljmp
inc
scas
lods
bound
scas
push
arpl
cmc
sub
je
mov
add
addr16
divb
sbb
or
push
and
inc
mov
popl
in
sti
jmp
jle
xor
add
sahf
jge
push
nop
pop
fbstp
push
xchg
ljmp
insl
push
jge
dec
out
dec
movsb
arpl
and
xchg
mov
inc
rcl
xchg
fs
sbbl
pop
mov
addr16
clc
int
xchg
sub
cmpsb
cmp
push
push
jl
mov
loop
inc
andb
ftst
imul
stc
loope
and
scas
xchg
packssdw
dec
or
jns
jge
jl
mov
or
movsb
ds
and
cmp
and
mov
adc
xor
out
push
sbb
adc
scas
aas
pushf
xlat
cwtl
and
jnp
rcrb
inc
incl
fcmovb
fsubp
sti
lahf
push
jp
push
mov
mov
orb
or
push
sahf
dec
sbb
mov
fcomip
ja
in
in
adc
or
inc
ja
aam
xchg
inc
test
lret
bound
lods
adc
mov
inc
insb
arpl
pop
jno
cmp
xchg
or
xor
and
jge
jae
push
push
dec
das
inc
hlt
xchg
pop
mov
fnsave
je
cli
dec
lret
fsubrp
stos
scas
push
sti
dec
push
fistpl
cli
pop
push
rcrl
lahf
sub
mov
mov
lcall
push
mov
or
adc
jb
mov
mov
push
xor
std
mov
sub
mov
dec
push
js
fisubrs
cmpsb
je
cmp
lahf
adc
mov
cmp
sub
mul
lcall
adc
cltd
andb
shlb
mov
mov
data16
or
push
dec
mov
inc
call
xor
test
add
ret
lock
push
xchg
fidivl
imul
and
push
outsb
outsl
addr16
sub
sub
dec
in
and
pop
sbb
sub
mov
xor
hlt
scas
imul
lock
inc
dec
push
mov
fucomp
pop
mov
stc
aam
test
stos
adc
add
xor
pop
fsubrp
sbb
out
mov
dec
sbb
out
jbe
int3
repnz
imul
fs
stos
pop
dec
decb
cmp
andl
jns
add
pop
push
inc
or
fnstenv
std
mov
pop
xor
add
mov
inc
call
add
pop
fnstsw
shll
cltd
popa
sub
gs
jo
mov
and
dec
or
test
outsb
push
dec
les
mov
xorb
lret
xchg
enter
cmp
pop
push
movsb
xchg
rcrl
lea
loopne
idivb
add
cmpsb
mov
inc
inc
loop
loop
ret
pop
jmp
je
loopne
test
cwtl
inc
sub
cmp
jge
loop
data16
insl
sbb
jns
pop
iret
mov
xor
jbe
repnz
aam
loop,pt
push
fwait
sahf
push
add
cmp
jmp
jae
aam
cmp
push
out
jg
xchg
std
adc
std
out
add
push
call
je
xchg
xchg
into
cmc
lret
push
pop
repnz
or
cmp
popa
js
cmpsl
adc
mov
pop
mov
shrb
cmp
pop
je
adc
inc
mov
dec
dec
cld
sub
mov
mov
lds
push
pop
add
xor
adc
mov
sub
inc
cmp
sti
pop
out
jne
or
inc
bound
pop
xchg
adc
jb
lret
jns
cs
sti
or
add
or
add
cltd
and
in
xchg
inc
cwtl
push
mov
inc
jb
orb
in
jb
std
mov
imul
mov
or
ds
imul
push
mov
in
and
outsl
xor
dec
cmp
test
repnz
mov
out
das
mov
adc
push
xchg
pushf
shrl
xor
or
xchg
xor
or
loopne
fcoml
mov
mov
dec
ja
mov
sti
inc
cmp
inc
mov
setg
dec
scas
cld
push
push
cmp
cwtl
jns
add
lods
or
xchg
sbbl
jne
ret
or
enter
and
fldenv
xor
add
mov
aam
nop
xchg
mov
lret
sarl
sbb
shrb
out
mov
repnz
pop
ss
xchg
cmpb
and
mov
ja
lret
and
data16
jl
int
fisttpl
push
cmc
push
push
mov
cli
insl
sbb
xor
data16
nop
cwtl
data16
inc
idiv
scas
jecxz
push
xor
pop
sub
mov
jmp
cmpsl
xchg
jne
adc
lret
js
inc
shll
pop
in
xchg
mov
add
push
xchg
rcrb
cwtl
fnstsw
or
jae
jmp
lret
jp
pop
mov
adc
cmp
dec
leave
pop
and
lret
out
and
jbe
dec
lcall
pop
nop
adc
inc
stos
out
inc
movsb
sub
jge
iret
adc
sbb
loope
icebp
mov
sbb
sub
shll
and
rclb
out
add
leave
xchg
inc
dec
jb
adc
add
pop
fists
xor
dec
xchg
lcall
movsl
dec
adc
adc
adc
mov
std
into
aaa
pop
xchg
lds
pop
xor
push
xor
xchg
mov
jmp
loopne
daa
xchg
sbb
or
icebp
repnz
xchg
mov
xlat
jnp
add
in
jmp
scas
mov
ret
xchg
das
pop
xchg
mov
xchg
and
xlat
in
cmpsl
push
into
jno
sub
cmpl
nop
and
test
mov
add
or
pusha
push
sub
xlat
or
push
xchg
push
test
sbb
daa
jmp
inc
stc
scas
push
lret
xor
test
adc
sbb
mov
inc
push
and
jo
cltd
and
cmc
int3
sub
xchg
push
and
and
adc
filds
movsl
lock
adc
ret
push
out
mov
js
imul
sbb
not
cltd
mov
pop
repz
popa
ds
ds
cld
loope
sub
hlt
jp,pn
enter
ffreep
add
adc
inc
sahf
sti
in
mov
xor
jp
mov
int
xchg
and
mov
jmp
iret
push
mov
or
inc
or
jne
cmp
mov
icebp
test
mov
ja
dec
xchg
sub
scas
imul
mov
add
mov
repz
cld
lahf
jb
gs
movsb
sbb
das
adc
out
push
xor
loopne
lahf
mov
and
and
pop
cli
dec
movsb
xor
dec
hlt
cmc
xchg
pop
cmc
or
dec
pop
lahf
mov
sub
insb
insb
pop
push
sbb
pushf
fisttps
in
dec
adcl
test
les
loope
outsl
mov
iret
pushl
and
popf
xor
push
pop
ja
xchg
inc
mov
mov
sarb
dec
sub
stos
sub
adc
and
jp
add
or
mov
inc
dec
popf
lea
outsl
out
pop
insl
mov
loopne
xchg
push
out
fisubl
xchg
xor
mov
pop
sti
ljmp
mov
mov
pop
std
push
aas
mov
ret
lock
dec
call
push
test
mov
insb
out
cmp
in
aaa
pop
arpl
daa
push
roll
mov
sbbb
push
push
mov
cld
pop
push
cmp
call
loopne
sbb
mov
mov
stos
jge
shrl
jo
pop
lea
lods
je
add
in
mov
adcl
aas
inc
dec
shlb
add
lock
mov
dec
ljmp
pop
dec
add
xor
push
jg
scas
scas
popl
mov
scas
ds
xchg
das
mov
sbb
mov
ljmp
adc
cmpsb
fs
mov
ss
and
rorb
lods
out
jg
loop
mov
cmpsb
out
or
jb
aaa
push
fsts
jmp
adc
call
inc
inc
or
outsl
scas
lret
in
lds
out
pop
or
jecxz
out
xchg
adc
repz
clc
test
mov
adc
cmpsl
mov
adc
mov
out
mov
or
dec
repnz
push
pop
pop
and
xor
and
xchg
jo
cmp
fsubs
call
pop
in
dec
mov
sub
sti
fmul
xchg
dec
lret
pusha
lret
push
mov
cmp
mov
pop
ret
sbb
dec
push
or
add
cmp
push
sub
fs
and
xchg
data16
and
pop
xchg
xchg
dec
sbb
mov
arpl
out
mov
pop
ret
xor
repz
les
idivl
or
xchg
fidivrl
and
mov
pushf
and
mov
mov
or
mov
pop
jae
int3
inc
or
adc
outsb
stc
outsl
add
fwait
dec
imul
pushf
sbb
cmp
shll
push
std
or
scas
xchg
in
mov
mov
sbb
mov
xchg
xchg
mov
rolb
int
pop
xchg
stos
data16
iret
sbb
mov
std
adc
xchg
out
lods
jle
in
mov
mov
and
pop
imul
lahf
fimull
push
rorl
mov
mov
scas
movb
clc
push
mov
bswap
mov
aaa
sub
mov
subb
sub
or
out
jb
jae
and
pusha
lcall
test
les
mov
jns
dec
hlt
mov
stos
es
pushf
stc
aam
sbb
mov
mov
mov
push
push
outsb
ficomps
lods
int
mov
jns
cmp
addr16
negb
lret
outsb
mov
push
mov
mov
xchg
arpl
xchg
das
jns
jle
mov
data16
outsb
das
sbb
nop
into
sub
es
cwtl
jbe
inc
push
lret
hlt
dec
sub
jmp
push
push
mov
cmpsb
and
mov
pop
cmpb
and
lock
and
or
xchg
mov
cs
test
insl
inc
or
jge
repnz
cld
or
stc
add
pop
sti
xlat
mov
sbb
adc
iret
jge
pop
inc
push
rcll
iret
mov
jnp
movsl
push
mov
sarl
gs
mov
in
add
sahf
pop
push
mov
xchg
shlb
push
xor
sar
mov
mov
add
ljmp
and
adc
in
xchg
and
in
and
je
mov
xor
movsl
push
leave
sti
dec
or
out
mov
pop
inc
scas
loope
mov
les
jecxz
inc
cmpsl
pusha
sbb
push
sarb
add
push
push
mull
xor
lret
scas
ds
enter
ljmp
jle
mov
lret
mov
dec
inc
scas
into
mov
mov
jecxz
clc
mov
pop
ljmp
adc
and
iret
pop
fidivs
jnp
repz
xorl
scas
rorb
test
lods
cmp
repz
ret
scas
nop
sti
call
xor
add
cmp
daa
dec
pop
or
dec
aam
hlt
popa
fcomps
adc
inc
jbe
sarl
js
or
pushf
inc
fsubrl
mov
aad
iret
fisubrs
les
ret
fsub
sbb
sahf
cmp
sub
std
push
lcall
repz
adc
sub
inc
cmc
cmpsl
fwait
jnp
dec
sbb
aas
sub
jbe
and
nop
push
mov
jnp
outsl
mov
test
mov
movsb
add
or
and
cmp
bnd
dec
sub
in
movsl
jle
pop
xchg
fsubrl
inc
rcrl
repnz
jno
mov
cwtl
addr16
xor
push
cmpsb
mov
nop
call
inc
push
or
adc
ss
movsl
mov
jnp
dec
cmp
adc
hlt
mov
cld
cmp
adc
add
sbb
popf
or
jnp
dec
xor
and
shlb
andb
aam
mov
dec
cmp
imul
repz
or
nop
and
pop
cs
mov
jns
test
xchg
mov
sbb
sahf
int
pop
inc
xor
jno
test
movsb
jo
idivb
dec
pop
pop
mov
or
sahf
sbb
xchg
pop
fisubl
cwtl
stos
xorl
mov
test
fidivrl
sbb
push
loopne
cld
push
out
cmp
popa
sti
orl
fsts
into
rorb
mov
add
aad
ljmp
push
cmp
mov
cmpsl
flds
sub
shll
push
int3
jmp
jge
push
mov
pop
cmp
stos
add
xor
outsl
iret
jmp
icebp
test
or
shlb
jbe
loope
pushf
lods
ffree
mov
sub
in
inc
xor
gs
or
mov
adcl
rclb
pushf
sbb
lock
pop
sub
dec
xor
jns
insb
sahf
ljmp
movsb
cmp
dec
jmp
mov
call
inc
mov
hlt
adc
fwait
std
shll
test
scas
inc
imull
sub
loop
cs
and
mov
pop
xor
cmp
test
push
cmp
daa
mov
jbe
or
lock
add
push
cmp
push
inc
jno
int
repz
imul
stos
sbb
dec
std
ja
or
pusha
mov
jns
add
test
jg
lods
hlt
int3
sbb
jns
in
and
cmp
inc
mov
movsl
cs
inc
test
mov
mov
sbb
cmpsl
mov
daa
lea
sbb
inc
pop
sbb
fwait
push
xchg
dec
mov
leave
fstpt
jl
std
jbe
iret
insl
jo
xorl
sbb
or
imul
mov
dec
add
mov
adc
dec
cmp
lea
pop
repnz
push
dec
mov
dec
sub
fstpl
mov
mov
mov
or
out
loopne
popa
pusha
and
adc
mov
in
out
cmp
and
popa
lret
add
cmpsb
lods
pop
and
scas
iret
mov
fsubrs
cmp
add
xchg
inc
fstpl
movsl
lcall
rcrl
fimuls
cmpsl
movsl
lcall
lret
mov
or
xchg
cmp
inc
cmp
cld
mov
sbb
mov
pop
adc
rcr
adc
lock
popf
push
cmp
in
adc
nop
adc
xchg
mov
and
inc
addl
lds
out
adc
xchg
or
fnstcw
fs
sub
fistl
jne
push
and
sarb
lcall
jo
cmp
xchg
or
clc
lret
push
mov
and
lahf
inc
test
push
pop
push
call
jno
mov
inc
ss
or
int
loop
sub
stc
fists
inc
mov
cli
subb
sbb
xor
fwait
jb
pusha
js
or
xchg
mov
lahf
dec
cmp
pop
adc
out
dec
scas
mov
cmp
inc
divl
pop
test
sbb
fimuls
lret
xchg
pushf
push
or
fmulp
dec
int3
loop
js
inc
pop
or
jge
jecxz
fwait
imul
lret
fists
push
push
mov
js
inc
pop
jo
repz
enter
jno
ret
arpl
imulb
fwait
add
aam
xchg
xor
jmp
pop
mov
outsb
or
insb
xor
sbb
push
xchg
push
pop
arpl
in
xor
pop
out
scas
js
xor
test
into
pop
push
repz
xchg
scas
negb
enter
cmp
mov
in
outsl
call
adcl
sbb
and
rcll
imul
mov
sbb
adc
xchg
jnp
push
inc
jns,pn
shll
push
xchg
icebp
test
scas
fcmovnbe
sarb
inc
fcoml
stos
sub
hlt
mov
out
decb
and
in
outsb
arpl
or
rcll
sti
int3
or
inc
cmc
and
call
bound
loope
jno
push
out
sbb
insb
push
pop
lock
push
fmuls
enter
es
int
jb
arpl
movsl
add
mov
cmp
out
ret
sub
pop
sbbl
cmc
jge
mov
scas
and
jo
fadds
daa
sarb
sub
cld
lods
push
negl
cmp
add
jmp
xchg
jle
repz
fisttps
or
xchg
lods
inc
lahf
cmp
dec
std
sub
scas
or
lods
and
insb
push
dec
mov
test
fcomps
cmc
nop
mov
movsb
test
or
stos
sub
ficoml
subb
clc
aas
pop
pop
mov
adc
pop
add
subl
movsl
and
push
jb
cmp
iret
clc
inc
jae
inc
mov
push
dec
xchg
xchg
or
jge
subl
mov
insb
mov
pop
add
mov
iret
rcll
test
icebp
xor
test
push
jp
xchg
test
xor
sub
add
outsl
aad
mov
mov
outsl
jo
bound
push
aaa
push
leave
mov
sub
aaa
cs
ret
jl
adc
xchg
add
push
sbb
mov
lods
fwait
mov
push
pop
mov
jecxz
imul
dec
out
cmp
push
call
mov
mov
or
jb
lock
push
loop
js
das
cld
fisubl
vphaddwq
lret
fisttps
jg
or
xorb
andb
mov
ss
add
pop
jno
movsl
cmpsl
mov
inc
add
xchg
push
mov
sub
jecxz
xor
push
les
lods
cwtl
int3
xchg
or
cmc
popl
daa
aaa
les
xor
jle
inc
jne
jmp
pushf
xlat
sbb
ja
movb
jmp
dec
cmp
cmpsl
add
mov
lea
inc
test
xchg
sbb
cmpsb
mov
jmp
pop
dec
mov
dec
cmp
in
sub
dec
sbb
loop
mov
cmp
add
imul
fisttpl
adcb
enter
mov
nop
xlat
adc
jo
push
inc
lea
dec
lahf
enter
in
in
sti
insb
push
dec
pop
jecxz
or
mov
ffreep
mov
mov
cmp
daa
pushw
and
push
imul
pop
mov
or
insb
cmpsb
fcmovnb
push
test
dec
xchg
adc
xlat
fcompl
loop
fidivrs
dec
pop
addr16
loop
enter
stos
lock
mov
stos
cld
cwtl
fs
insl
adc
out
inc
out
jl
clc
lcall
dec
mov
stos
inc
add
and
jg
inc
mov
pushf
inc
mov
push
mov
mov
dec
mov
cli
fidivrs
insb
mov
push
jl
fsub
lcall
popa
jecxz
pop
sarb
push
aas
pushf
mov
inc
in
pop
test
xchg
mov
jg
aaa
or
sub
jmp
jmp
push
add
nop
incb
add
jb
inc
cmc
pop
jmp
cwtl
in
out
pop
mov
popf
insb
xorl
xchg
bound
lea
jp
sahf
movsl
mov
xchg
add
ffreep
fwait
sahf
jbe
cmc
das
and
cmp
adc
xchg
out
clc
sbb
in
ss
leave
cmpsl
cmp
add
les
xor
aam
pop
jno
subb
jns
mov
fildll
or
mov
daa
sbb
sbb
mov
arpl
push
push
and
xchg
jmp
push
shl
sbb
shrb
inc
into
fldenv
xchg
pop
cmp
fdivs
testb
cs
push
pop
push
inc
adc
cld
enter
jl
decb
inc
movsb
mov
popa
add
pusha
dec
shlb
je
pop
and
icebp
rcrb
outsl
std
mov
arpl
and
push
aam
inc
mov
inc
fildl
das
push
sbb
repz
mov
sub
jno
je
ja
push
jae
push
out
call
inc
sub
or
mov
pop
jmp
xchg
call
mov
mov
int
mov
ss
jl
out
andb
mov
rcl
xor
lret
xchg
cs
icebp
movsl
adc
js
scas
or
add
ja
mov
out
jmp
icebp
and
xchg
xor
cwtl
rol
setle
jp
roll
inc
sub
std
and
rcrl
test
gs
outsb
mov
jge
cmpsb
sti
xor
adc
jae
loope
jae
int3
mov
push
xchg
jmp
arpl
js
call
in
sbb
mov
adc
xor
pop
ret
inc
enter
cmp
xchg
stc
outsb
daa
jg
pushf
js
fstps
iret
mov
mov
cs
lcall
lods
lcall
add
rcpps
xchg
test
sub
mov
xchg
out
std
pop
out
pop
orb
aad
rcll
xchg
cmpl
cmp
and
iret
aam
cmc
jbe
pop
inc
sub
add
movsl
lods
dec
xchg
pop
pushf
push
movsb
shll
add
jb
inc
sahf
dec
cmpb
adc
mov
clc
mov
push
ja
push
sub
push
xor
or
and
testb
sbb
rcll
jb
aas
mov
and
clc
mov
pop
add
pop
in
aaa
lcall
mov
pushf
mov
cmp
cmp
fildll
enter
arpl
mov
add
cmpsb
push
sti
adc
jae
sbb
or
xchg
jno
call
push
sub
out
outsb
ret
inc
inc
sub
fisttpll
int
or
sahf
adc
mov
cmp
mov
aad
dec
adc
out
push
in
fnstenv
lock
pop
shrb
pushf
xor
adc
push
jns
popa
jae
push
pop
pop
pop
jb
les
sarl
cmp
dec
mov
jle
shlb
jmp
repz
in
in
into
rolb
cmp
repz
jle
push
pop
cmp
adc
mov
push
lods
mov
mov
jmp
out
je
shl
aad
outsb
push
shrb
scas
push
xchg
sbb
mov
sbb
adc
popf
sbb
mov
adc
and
sahf
out
mov
pop
lea
xchg
push
push
adc
push
sub
mov
inc
pop
push
sahf
xchg
sbb
jmp
outsb
or
lods
add
inc
in
gs
ss
dec
mov
pop
xchg
mov
idivl
in
mov
sub
bound
andl
sar
mov
add
lret
add
jno
push
stos
roll
add
mov
dec
add
out
jb
lahf
addl
in
mov
sbb
pop
inc
scas
lret
into
mov
adc
call
data16
fdivl
jno
repz
addb
je
mov
decb
jl
xor
jmp
lahf
fsts
sub
jmp
adc
mov
je
cltd
imul
and
adc
out
mov
div
push
mov
sub
sub
push
xchg
xchg
mov
push
insb
mov
push
rcrb
lock
fs
nop
dec
lods
mov
adc
xchg
lods
dec
lret
das
scas
cmp
jmp
mov
lret
xchg
test
bnd
into
jae
pop
mov
pop
jo
adc
and
test
xchg
enter
shr
stos
sub
in
mov
jmp
mov
mov
ja
insl
fisubs
or
adc
rcrb
dec
dec
jge
cmp
mov
mov
das
out
out
ror
and
lods
stc
mov
das
jg
push
sbb
out
ret
lds
enter
in
ljmp
mov
call
xchg
test
imul
in
movsb
mov
lods
jl
adc
lods
and
stos
mov
hlt
ficoms
icebp
inc
xor
lret
ss
push
xchg
hlt
adc
jnp
mov
sbb
scas
orb
sbb
jnp
push
mov
outsl
cmp
inc
rep
jl
mov
das
cld
inc
jecxz
cmp
pop
sbb
popa
mov
adc
push
mov
ss
flds
inc
stc
inc
sarb
mov
adc
shrl
sbb
scas
idivb
pop
pop
daa
out
test
pop
shlb
jnp
or
aam
leave
cmp
in
sbb
lret
mov
mov
cmp
cld
or
ljmp
leave
mov
mov
pop
pusha
and
aam
mov
in
rcrl
cli
and
push
gs
lock
cmpsl
test
lret
pop
and
dec
fmul
push
int
jmp
fcomps
push
lcall
cmp
mov
aas
fwait
jecxz
inc
lcall
mov
cmp
pushf
lret
loope
mov
loop
popa
sbb
cltd
mov
fimuls
lea
ficomps
mov
leave
xor
fisubrl
sub
in
xchg
sub
sbb
xor
int
jle
bound
mov
mov
nop
jge
adc
call
decb
sbb
sbb
roll
clc
lock
xchg
shl
aas
xchg
test
fsubrl
dec
adc
sahf
jb
jmp
divb
insb
shll
rorb
push
int3
inc
adc
pop
pop
mov
out
loop
push
aas
pop
orl
dec
pop
jg
sbb
add
stos
ja
add
adc
cmp
sbbl
lahf
xchg
lods
cmp
popa
xchg
pop
or
xchg
cmp
add
adc
ds
jmp
cld
sahf
sbb
mov
or
shll
adc
cmp
fdivr
add
push
call
stos
push
jmp
dec
mov
loope
outsb
out
xlat
fs
hlt
and
sub
dec
sub
mov
or
in
cmc
xchg
push
add
aas
imul
sarl
rcll
psrld
aad
mov
test
loopne
add
mov
inc
mov
pop
pushf
adc
pushf
or
jmp
xchg
test
cltd
aad
sub
jne
iret
fcomps
dec
xchg
xor
lret
outsb
sub
stc
std
mov
mov
out
test
pop
flds
imul
xchg
mov
fs
cmpb
ja
sbb
cmp
inc
cmpsb
add
push
insb
mov
pop
cmp
jo
adc
adc
into
in
rorl
ss
shlb
shrl
aas
push
sbb
dec
xor
xor
ret
lods
pop
rol
inc
scas
inc
insl
inc
fldcw
outsb
into
in
test
loope
sub
push
mov
cmpsb
mov
clc
mov
out
sbbl
jg
add
ja
repz
sub
fistpll
add
push
or
repnz
jge
xchg
mov
jg
out
cwtl
mov
insb
mov
xchg
pop
pop
mov
fisubl
fs
add
xor
les
enter
cmc
jb
repz
push
ror
mov
lods
inc
fistpl
inc
jmp
dec
xor
push
shll
mov
xchg
adc
pop
pop
dec
push
int
sbb
or
rclb
lcall
movsb
jp
je
cmp
out
in
movsl
dec
dec
push
xor
shrb
sub
mov
xchg
add
nop
sub
and
sub
jecxz
je
dec
push
ret
or
xor
imul
popa
aam
push
adc
aas
out
aaa
ss
mov
imul
lock
mov
push
inc
xor
sbb
sub
enter
pop
pop
jo
sub
mov
mov
add
push
or
xchg
mov
mov
ret
mov
js
arpl
sbb
lret
cli
jecxz
jne
movsl
ss
xor
push
dec
aas
push
add
inc
adc
aaa
adc
jno
fbld
pushf
jno
mov
cwtl
push
push
mov
imul
xchg
ljmp
lds
mov
xchg
adc
dec
sbb
clc
les
pop
test
dec
data16
clc
int3
das
xlat
jns
adc
mov
fisubrs
dec
push
push
pop
test
mov
xor
cmc
inc
sbb
cli
repz
cmc
dec
jno
lods
or
mov
dec
cmp
mov
loop
pop
mov
int3
sub
fstpt
inc
jo
dec
dec
movsb
push
lcall
dec
pop
repnz
aam
adc
mov
or
adc
xor
shrl
xchg
into
xor
sti
mov
lods
cld
movsb
mull
movsl
sub
jecxz
out
xor
enter
lahf
dec
xor
lods
loop
ljmp
pop
int3
push
xchg
std
repnz
into
movsb
out
es
clc
cmpl
inc
xchg
ftst
out
and
lcall
sahf
loopne
enter
mov
iret
mov
es
testl
lret
pop
push
xchg
cmp
push
pop
scas
inc
movsl
pop
sbb
cmp
ret
or
pop
mov
adc
jnp
and
mov
pop
test
push
mov
or
notb
jge
push
mov
push
xor
adc
out
xchg
fsts
into
mov
add
or
es
mov
test
pop
loope
out
push
ds
insl
ljmp
jb
sbb
das
xor
popf
mov
add
mov
mov
scas
loopne
inc
sarl
inc
int
xchg
push
adc
sbb
lods
dec
sbbb
sbb
xchg
pop
xchg
cmpsl
mov
push
popf
xor
mov
jle
or
cmp
inc
aad
popf
cmp
shrl
inc
mov
mov
jmp
cmc
imul
xor
push
es
inc
dec
or
sti
sbb
jge
sub
pushf
lret
js
ss
sbb
int
mov
enter
xor
jbe
jmp
push
mov
or
rol
dec
fdivrl
call
cli
jge
leave
mov
lods
or
and
mov
scas
mov
pop
mov
adc
decb
fcoms
xor
add
jp
xor
aaa
push
jo
int3
pusha
inc
fs
adc
lods
dec
adc
push
push
mov
lods
push
loope
cltd
push
inc
mov
outsl
sub
jmp
pop
out
stc
ja
mov
test
adc
out
stc
add
pop
ret
and
mov
inc
lods
dec
mov
nop
xor
pushf
mov
in
sti
addr16
jmp
sub
pop
cmp
imul
pop
loopne
and
inc
cs
or
test
testb
add
jecxz
fcoms
idivl
hlt
cmpsl
xor
lock
xchg
pusha
testb
dec
mov
xchg
leave
mov
pop
cmp
xlat
test
lods
int
fldt
dec
mov
add
sub
mov
pop
hlt
mov
fwait
leave
sub
xchg
idivl
sbbl
or
imul
sub
lds
out
inc
je
or
insl
cmpsb
loopne
cmp
dec
push
cli
jmp
pop
call
xchg
int3
nop
daa
hlt
lret
cmp
in
mov
sbb
mov
sbb
push
cmp
shrl
push
aam
iret
push
adc
adc
adc
mov
add
sub
jae
mov
popf
cmp
and
test
xchg
loope
in
xor
dec
push
stos
out
jne
ljmp
dec
sub
fsts
mov
cmp
lea
movsl
dec
push
xor
imul
bound
jle
lods
int3
or
aaa
lock
scas
push
mov
sub
mov
mov
or
xor
in
mov
cmp
pusha
push
xchg
jl
xchg
sbb
inc
xchg
aaa
mov
mov
mov
imul
cmp
js
repz
stos
cli
or
xchg
notb
fists
xor
jns
cmp
cwtl
arpl
and
lods
lahf
adc
lods
loope
out
push
xchg
sub
popa
inc
test
mov
adc
daa
popa
fsubrs
cli
sub
leave
cmp
lret
mov
pop
out
pop
jb
cmp
imul
and
pushl
shlb
loope
dec
hlt
fwait
pop
arpl
scas
xlat
add
inc
add
cli
ret
inc
fimuls
jb
icebp
aad
dec
adc
push
lret
fsub
nop
repnz
iret
xor
mov
or
mov
mov
fidivl
sub
jb
pop
aaa
and
leave
cli
jge
mov
jbe
xor
in
lock
add
sbb
xchg
inc
dec
lahf
push
jg
fucomip
and
mov
push
jecxz
ss
lret
das
aam
repnz
loope
inc
inc
jmp
xchg
and
sti
ljmp
pop
mov
xchg
jae
test
loope
and
das
cwtl
inc
sbb
cmc
cmp
shl
loop
pop
inc
hlt
ret
add
push
lahf
imul
scas
mov
cmpsb
dec
sbb
out
jp
mov
jbe
adc
push
incb
jmp
loop
jb
lock
pop
popf
lds
push
xchg
jb
xchg
or
push
div
leave
insl
push
outsb
in
or
outsl
sti
out
mov
std
loopne
popa
sub
cmp
dec
pop
mov
push
aam
fisubrs
jo
mov
lock
dec
cmpsl
inc
mov
fucom
loop
or
test
sahf
pop
pop
and
ds
mov
mov
mov
sub
lret
mov
scas
hlt
hlt
jb
adc
dec
add
jne
cmp
sub
mov
ds
inc
pop
add
jns
push
and
sub
xchg
jecxz
repz
insb
mov
ret
mov
jmp
outsb
aam
jle
das
adc
dec
test
sahf
add
push
std
mov
jl
pop
sahf
testb
dec
fldenv
mov
jns
sbb
or
mov
mov
pop
not
add
loop
xchg
push
pop
lcall
push
in
inc
jo
dec
sbb
inc
cld
test
sar
sbb
mov
pop
rcll
push
jne
inc
inc
adc
push
iret
movsl
or
int3
in
inc
repnz
xchg
lea
ss
dec
jmp
jge
or
cmp
push
xor
in
stos
lahf
daa
pop
lcall
dec
sbb
iret
ficomps
icebp
sub
mov
push
cmp
ljmp
push
popa
mov
push
lret
sbb
clc
repnz
cmp
push
push
mov
lahf
loope
add
sbb
lret
and
popa
test
arpl
adc
xlat
or
mov
and
lahf
movsb
sbb
jo
xchg
lret
xor
xchg
or
inc
fcoms
lods
repnz
xchg
sub
fnstenv
shll
jle
cmc
adc
push
cmp
xchg
aaa
xor
mov
mov
je
inc
push
mov
add
xor
repz
faddl
inc
iret
stos
fnstcw
out
mov
movsl
jp
jge
dec
xchg
jg
je
xchg
adc
or
lcall
in
push
mov
inc
iret
jmp
dec
jno
bound
aaa
or
cmpsb
xor
movsl
cltd
and
mov
adc
mov
add
loope
mov
push
test
fucomip
out
push
repnz
sarl
cmpsb
mov
cli
ja
lcall
mov
popa
fsubr
test
popl
pop
test
xor
or
mov
xor
pusha
ret
rorl
sbb
stc
ret
cltd
lods
out
insb
cmp
jp
or
jnp
rorl
xor
jo
popf
fldcw
sub
in
mov
das
leave
inc
xor
je
cmp
test
fwait
inc
push
cmp
rolb
jl
incl
inc
ja
push
dec
jnp
adc
lea
and
push
ret
lods
aas
mov
dec
add
int
pmulhuw
insb
lea
xor
and
call
lock
or
ss
out
fwait
sbb
rol
repnz
or
dec
es
jmp
test
mov
dec
arpl
cmpsb
aaa
insl
add
pop
loope
test
cmpsb
pop
mov
mov
fistps
test
lds
leave
std
mov
fmull
cmp
enter
xchg
jbe
xor
fldt
repz
in
mov
fdivs
adc
add
cmp
jo
cmp
lock
jecxz
je
fsubs
sbb
sub
mov
popf
fdiv
lret
dec
fstpt
fnsave
bound
sub
mov
loope
and
add
push
or
sbb
mov
cmp
inc
cmc
dec
fisubrl
enter
ret
addr16
jp
aaa
mov
scas
bnd
mov
punpckhdq
stos
jp
xor
lods
lret
push
test
xorl
mov
or
leave
sahf
xor
mov
or
and
rcrb
add
lcall
in
cwtl
aad
mov
negb
out
pop
dec
movl
push
cli
add
sbb
std
cmp
pop
lahf
cmp
imul
adc
xlat
push
inc
ss
jge
dec
fs
dec
mov
shll
xchg
or
aaa
xchg
inc
add
loop
mov
call
rolb
push
jnp
or
mov
jbe
adc
aad
mov
icebp
fwait
xor
jl
jg
push
push
stos
mov
into
xchg
lahf
push
jae
hlt
push
ljmp
mov
mov
mov
pusha
stos
in
scas
lret
mov
dec
push
cmpsl
scas
movsb
mov
jno
or
jnp
inc
pop
or
sbb
or
xchg
scas
icebp
rcr
test
dec
mov
fs
and
imul
push
dec
lcall
outsl
push
pop
enter
cli
or
mov
pop
test
pushf
push
sbb
out
mov
fiadds
xchg
and
out
rclb
rcll
ja
mov
clc
jg
and
and
ret
popa
mov
test
mov
lea
lret
dec
mov
rcll
jge
push
xor
or
lock
fisubl
inc
jmp
jbe
sub
jno
mov
xchg
stc
clc
fdivl
sub
xchg
dec
clc
test
cld
test
pop
add
call
jne
aaa
movsl
push
cmp
cmp
or
add
push
and
adc
push
dec
in
pop
jmp
int3
jno
xchg
out
xchg
xor
mov
adc
movsb
shl
add
push
lods
dec
sbb
test
outsb
enter
xor
xlat
xchg
and
std
jmp
test
xchg
cmc
push
or
jp
movsb
and
mov
mov
popa
lea
out
cmp
sub
fdivrs
sbb
sahf
in
rcr
lcall
sbb
stos
push
mov
stos
push
cmc
test
jae
inc
imull
out
test
fsubl
xchg
enter
lret
insb
pop
fldenv
inc
fdivrs
stc
pop
aad
popa
mov
add
or
sub
pop
ds
ljmp
mov
and
push
into
push
std
jb
ljmp
mov
adc
sub
es
inc
adc
in
adc
jle
xchg
inc
je
push
xor
pop
adcl
xor
push
out
leave
xchg
mov
and
mov
int
xorb
mov
call
movsb
cmc
jnp
dec
cli
lgs
xchg
jns
mov
fiadds
and
mov
pop
gs
adc
andl
out
push
xor
push
insl
int
cs
mov
sub
adc
or
push
orb
jb
lea
mov
popa
icebp
scas
xchg
repnz
push
jne
add
pusha
mov
je
inc
mov
add
inc
dec
or
dec
repz
or
mov
xchg
call
jp
adc
dec
jbe
test
data16
cvtps2pi
adc
mov
jno
into
pop
xchg
sub
jl
xor
mov
xchg
sub
rorl
fistpll
scas
and
enter
pop
pusha
mov
mov
subb
mov
cli
test
dec
dec
pop
xchg
incl
enter
lock
test
mov
lret
jmp
adc
outsb
mov
sahf
pop
insb
jnp
inc
ret
out
sub
daa
fmuls
cmpsl
pop
in
mov
mov
movsb
daa
sub
fstpl
xchg
fstpl
jl
jmp
orl
repz
aas
addr16
ljmp
aad
div
jmp
bound
push
inc
xor
aad
lret
xchg
pop
xor
sub
adc
dec
int
mov
adc
ficomps
fisttps
in
rclb
in
dec
shr
out
in
mov
mov
ljmp
fisubrs
mov
sub
loop
xchg
pop
lcall
xchg
xor
popf
mov
sbb
fwait
jge
test
jne
and
sub
js
movsl
call
inc
in
mov
outsb
scas
lock
sbb
sarl
movsb
fldl
dec
and
pop
stc
daa
mov
pop
mov
pushf
fldenv
lods
rolb
insl
mov
adc
cmp
mov
mov
xchg
in
test
or
jae
push
add
out
push
push
shrd
addb
fcomip
loope
mov
in
stos
addl
jge
xor
inc
jae
pop
hlt
cmpsb
add
stos
negb
xchg
sbb
jmp
mov
adc
sti
mov
cmp
mov
xor
and
jo
mov
je
repnz
les
in
movsl
in
xchg
mov
sub
dec
jns
pop
push
jbe
out
mov
cmc
mov
cmp
repnz
divl
shlb
mov
movsl
sahf
adc
or
mov
push
aad
rorb
pop
sarb
aad
mov
cli
dec
fs
and
aas
insb
sahf
scas
in
xor
mov
inc
cltd
stos
inc
mov
dec
cmp
cmp
in
jb
and
test
movlps
inc
inc
pop
scas
jge
cmp
subl
mov
pop
cmpsl
daa
int3
insl
push
cld
jl
xlat
mov
pause
and
sti
pop
mov
test
not
inc
popf
test
daa
stc
adc
dec
mov
pop
pusha
adc
outsl
sbb
dec
lret
jle
imul
cmp
sbb
ret
pop
xchg
fildl
mov
jae
cmp
std
adc
sub
repnz
pop
dec
shl
call
negb
test
push
cmc
xor
or
cltd
mov
insb
mov
popf
mov
call
mov
shlb
dec
movsl
cmpsl
mov
pop
adc
inc
push
inc
push
pop
scas
sarl
cld
das
out
test
ljmp
sbb
sub
cmp
push
cmp
test
xchg
mov
js
pop
mov
pop
ret
mov
jo
jl
or
jae
or
loopne
cmp
ret
inc
add
or
dec
icebp
das
aaa
gs
fs
sub
out
shlb
push
adc
push
push
arpl
stos
mull
aaa
mov
mov
inc
push
sub
sub
out
shl
stos
push
outsl
push
jg
lods
mov
xchg
pop
stc
add
cmc
cmpsl
cli
testl
lcall
push
cmp
mov
cmp
dec
pop
dec
fcoml
sub
xlat
sahf
add
int
or
in
js
xchg
mov
icebp
mov
mov
mov
in
outsl
xchg
aam
lods
es
dec
push
outsb
inc
testl
ss
dec
das
lret
and
xchg
lods
stos
inc
jne
cmp
jecxz
xor
pop
xchg
fucomp
xor
mov
iret
or
push
loop
incl
frstor
sub
mov
aam
fdivrp
xchg
and
cld
movsb
mov
ss
pop
jle
adc
jle
sbb
sti
jns
inc
and
mov
imul
add
stc
out
test
xor
bound
pusha
addl
xchg
mov
push
aas
mov
jbe
shrb
mov
clc
cmpsl
jp
pop
pop
xlat
pop
xchg
mov
out
xor
ds
movsb
jp
xchg
out
xor
out
mov
sbb
push
shrl
mov
outsl
mov
lods
sbb
push
aam
add
fstpt
mov
test
and
push
dec
or
bound
movsb
insb
les
bound
pop
frstor
nop
xor
xchg
test
mov
dec
push
ret
packuswb
mov
push
jg
stc
movsb
int
ret
insb
xor
test
xor
cmp
mul
cld
push
in
subps
push
mov
ljmp
mov
mulb
push
inc
xchg
inc
mov
xchg
push
pop
divl
lcall
imul
fidivl
pushf
out
xchg
push
imul
movsb
and
add
xor
push
pop
cltd
stos
dec
sbb
mov
add
ffreep
push
mov
xor
inc
incl
inc
pop
xlat
in
pop
or
cld
cs
imul
mov
cmpsb
repz
stc
jl
dec
cwtl
and
push
fwait
sub
or
ret
mov
data16
imul
xchg
inc
out
mov
lret
inc
ljmp
aas
into
sub
pop
pop
push
or
int
dec
push
and
mov
mov
cli
es
mov
inc
pop
mov
pop
mov
jle
imul
aas
ss
sub
rorl
sub
ss
inc
or
sarl
xchg
inc
add
inc
or
and
std
out
inc
fs
cmp
fisttpl
xchg
mov
jge
loope
push
loopne
ss
or
ljmp
fwait
pop
movsl
xchg
enter
lods
mov
pop
or
jl
lcall
notb
orl
cli
ss
test
mov
mov
lea
scas
leave
inc
outsb
ret
push
fs
hlt
popf
inc
mov
mov
sub
loope
jge
aaa
int
mov
mov
cmp
pusha
cltd
mov
in
loopne
lods
call
jp
mov
xchg
stc
sbb
mov
ja
dec
arpl
gs
setb
jbe
jns
lcall
dec
pop
adc
xchg
into
rorb
es
dec
mov
sub
in
pop
sub
fmuls
sub
paddusb
aam
in
mov
cld
lret
add
dec
adc
mov
psubq
jl
cli
xor
out
cmc
pusha
jo
testb
xchg
jbe
mov
sbbb
inc
push
jbe
rorl
cmp
aam
inc
fwait
testl
sbb
daa
sbb
mov
cmpsl
cs
loopne
sub
ss
in
xchg
fstpl
adc
cmp
pop
add
cmp
cmp
in
aad
dec
sbb
dec
mov
xchg
push
sub
ss
xchg
loopne
push
mov
mov
add
add
leave
pop
push
and
dec
cwtl
aaa
popf
mov
push
into
cmp
add
xor
jecxz
stos
fsubp
and
mov
aam
pop
dec
push
shl
test
popa
xchg
rorb
mov
sbb
or
inc
mov
cmpsb
movsl
xchg
fildll
push
push
or
cmp
xor
push
movsb
dec
add
ret
dec
push
mov
push
push
into
cmp
inc
je
mov
aaa
mov
cmp
or
cs
pop
clc
pop
adc
fs
ret
push
cli
pop
mov
cmp
push
and
jb
mov
add
cmp
and
movsb
out
dec
stos
dec
or
or
inc
lock
mov
mov
popa
divb
sub
xor
fcompl
sub
inc
jg
movsl
pusha
ljmp
addr16
mov
in
sub
ja
js
rcrb
cld
inc
out
jle
lret
dec
mov
out
lds
dec
xchg
push
mov
in
adc
mov
xor
popf
sti
and
repz
mov
dec
insl
lcall
testl
aaa
push
jg
mov
jnp
shl
mov
sti
pop
or
mov
mov
pop
loopne
cmp
xchg
xor
stc
testl
decb
dec
rcll
fbld
sbb
repz
jae
cmp
test
mov
daa
mov
lea
jg
pop
mov
jne
hlt
aas
xchg
pop
add
mov
and
jns
push
pop
stc
or
dec
pop
or
ficompl
sbb
mov
inc
cltd
je
or
xchg
insl
loope
push
cltd
xorl
in
sub
je
inc
cmp
fistps
and
add
outsl
xchg
sub
inc
test
jl
sub
sub
add
jg
cmc
dec
pop
inc
mov
call
out
pop
outsb
sti
jae
rcll
xlat
adc
fisubl
mov
mov
mov
out
and
ret
repz
mov
fxam
mov
inc
mov
adc
dec
mov
arpl
repnz
imul
xor
push
decl
addr16
ss
sub
mov
cmp
scas
jp
shl
ret
neg
mov
cmp
mov
lods
cli
fwait
scas
call
shl
mov
xor
xchg
mov
cmp
in
mov
mov
dec
sub
mov
add
inc
repnz
into
mov
aaa
rdpmc
ret
les
dec
inc
or
adc
mov
push
movsl
pop
sbb
aam
cmc
mov
mov
mov
mov
in
mov
sub
in
subb
lods
mov
jmp
int3
xchg
sub
jns
js
cld
mov
xorps
jecxz
gs
push
inc
pusha
mov
sub
jne
std
scas
dec
cld
out
mov
sub
aaa
cmpsb
insb
sub
push
enter
xor
add
bound
dec
mov
and
scas
inc
cmp
into
mov
mov
sub
ret
adc
cmp
sbb
idivb
popa
loop
push
jae
ficomps
and
stos
sub
incl
clc
rcrb
shlb
or
in
mov
dec
push
cmp
data16
es
and
sarb
ret
cmpsb
hlt
pushf
xlat
out
lock
xchg
pushf
repnz
xor
jg
jle
push
pusha
ja,pn
gs
cli
repnz
push
in
adc
mov
add
mov
or
sbb
js
mov
in
pop
dec
cmp
pop
xchg
inc
outsl
push
or
pop
mov
cli
xchg
fs
into
test
out
cmp
stc
mov
jg
sbb
shll
push
jmp
jb
xchg
sbb
pop
int3
shlb
jo
scas
loopne
shrl
pop
sbbl
int3
or
lock
out
repnz
test
out
popf
pop
ss
imul
push
mov
mov
fldl
mov
and
es
mov
pop
mov
cmp
scas
jae
mov
jb
stc
mov
in
jae
cmp
xor
incb
mov
out
sti
adcb
hlt
insl
mov
cmp
call
jg
mov
leave
jae
popa
mov
xor
das
fldt
push
xchg
xlat
mov
pop
out
inc
scas
and
add
cmpsl
xchg
sbb
dec
into
loope
rcl
adc
int3
push
fistpl
xchg
dec
xor
dec
call
add
add
adcb
test
and
dec
xor
xor
inc
hlt
call
popa
lahf
fstps
int
pop
arpl
ret
mov
cmp
addr16
xchg
add
in
cmp
in
les
repz
mov
pop
sbb
popf
adc
in
arpl
out
rorb
scas
clc
loopne
aam
mov
xchg
adc
and
sti
adc
sahf
stos
cmp
xlat
jb
add
out
lods
fndisi(8087
out
and
frstor
stc
pop
out
les
and
or
xchg
mov
sub
jns
out
push
ljmp
jo
or
fadds
jg
neg
bound
push
cmc
xchg
adc
outsl
lret
mov
sbb
int3
leave
fimull
adc
pop
addr16
stos
ret
push
mov
jno
test
inc
fcmovu
adc
repnz
mov
outsb
cs
das
mov
int
sub
mov
out
sub
xchg
pop
jmp
mov
jno
inc
mov
rol
sub
fidivs
jns
popa
push
das
gs
mov
negb
mul
mov
jmp
outsb
rcrb
mov
ljmp
cmp
jp
mov
roll
mov
xchg
adc
outsl
push
mov
xor
fwait
add
outsb
lret
jmp
jmp
jmp
cmpsl
pop
testb
add
aad
dec
push
ss
jp
xchg
in
rclb
stos
test
data16
pop
cmp
adc
pop
sarl
sub
or
jg
cmpsb
lahf
sbb
cmpsl
sbb
add
jecxz
and
jne
dec
push
popf
push
add
int
sti
add
jge
mov
add
gs
insb
in
out
inc
jmp
add
push
movsl
les
push
subb
push
and
es
mov
pop
xor
sahf
xchg
jns
into
or
pop
or
roll
sbb
fmull
xor
out
sub
out
roll
daa
bnd
jb
enter
or
jns
xchg
jg
add
xor
int3
jnp
lods
out
aam
add
in
inc
push
int
insl
and
mov
into
lcall
mov
push
mov
cli
sub
aaa
into
out
int3
das
daa
xchg
xchg
xchg
mov
mov
jno
in
or
pushf
mov
push
add
xlat
jge
rcll
aaa
xor
push
ljmp
dec
testl
xor
jae
lret
mov
jae
inc
mov
repz
stos
dec
out
lahf
incl
adc
outsl
or
fsubr
jnp
addr16
push
pop
cmp
outsb
and
fs
es
inc
enter
pop
outsb
lds
xor
sbb
add
loopne
mov
jecxz
lret
jecxz
scas
push
xor
sbb
mov
lods
xor
push
imul
fwait
nop
mov
cmp
inc
stos
cld
xor
in
sbb
xchg
out
std
mov
xlat
jns
fmull
repnz
jbe
pop
sub
daa
fs
mov
mov
fcmovb
je
push
mov
shlb
idivl
or
js
add
jns
pop
dec
rolb
cmp
rclb
dec
add
push
popf
xchg
push
cmp
cwtl
lret
sarb
rol
xchg
stos
imul
inc
imul
lea
xchg
mov
stos
je
out
xor
push
dec
dec
adc
inc
div
xchg
add
mov
test
les
inc
pop
sbb
and
cli
repz
inc
addr16
mov
xor
lock
scas
ljmp
loop
push
out
popa
xchg
jo
loope
push
adc
xchg
popa
cld
repz
push
lock
sub
cs
and
pop
xor
movd
aas
mov
cli
xchg
std
dec
pusha
jb
cmpsl
jnp
aaa
jb
inc
out
inc
aas
xchg
jecxz
cltd
jl
cmp
into
mov
popf
cmpsb
xchg
xor
loopne
add
aam
jo
xor
cmp
hlt
fbld
pop
sahf
mov
cmp
repz
insl
pop
mov
mov
mov
sbb
dec
jns
fcomip
ljmp
mov
pop
cli
mov
adc
nop
sti
repnz
lret
aas
jno
fisubs
xchg
daa
loop
fidivrl
xchg
clc
mov
es
andl
loop
mov
cmpsl
cmp
out
das
sub
mov
nop
aam
ret
int
data16
into
out
push
inc
inc
bound
or
dec
out
fsubrs
sbb
sbb
imul
cmpsb
sti
sahf
cmc
lret
addb
or
or
loopne
add
out
mov
mov
pop
cmpsl
cltd
mov
pusha
dec
mov
in
stos
or
outsb
out
popa
andb
andl
inc
inc
arpl
xchg
jne
jp
inc
pushf
xchg
dec
call
xor
and
test
and
lock
xchg
cmp
movsl
push
shlb
mov
jecxz
out
in
cmp
mov
pop
cmp
push
jb
mov
out
je
mov
mov
aam
mov
jo
stos
fstpl
arpl
fiaddl
mov
fucomp
jne
int
dec
mov
imul
pop
pusha
xor
push
in
jo
orl
in
dec
rep
dec
xchg
out
push
mov
notb
aaa
sbb
cmpsl
xchg
fistl
fdivrs
movsb
xor
imul
test
out
ds
or
into
jns
popa
adc
lret
aad
adc
repz
aaa
mov
xor
dec
cs
xchg
xchg
or
test
call
mov
jo
dec
ret
loopne
cli
in
lock
cmpsb
repnz
xlat
out
iret
sbb
popa
and
test
add
enter
mov
lock
loope
cmp
or
lods
inc
cltd
mov
xchg
ret
adcb
or
iret
std
dec
stc
mov
fidivs
push
mov
loop
add
sbb
lret
std
cmp
dec
mov
inc
stos
or
pop
sub
mov
outsl
push
arpl
es
fistpl
add
hlt
pop
inc
jo
test
pop
addr16
lea
adc
out
dec
stos
push
xor
test
push
dec
inc
mov
mov
loop
fcom
repz
aad
pop
jge
fwait
xchg
xor
xchg
aaa
rcr
iret
pop
mov
mov
push
push
sbb
dec
pop
add
data16
insb
ljmp
xchg
sbb
add
ret
inc
and
pop
push
ljmp
icebp
jge
sub
lods
mov
push
mov
pop
orl
xchg
imul
inc
out
inc
push
insl
popa
test
cmp
insl
jne
test
ds
adc
movsl
and
iret
mov
add
ret
int3
rolb
adc
pop
clc
dec
popf
cmp
in
insl
es
aam
cltd
es
cmp
loop
and
cld
pop
icebp
frstor
sbb
push
mov
pop
movsb
inc
push
lods
sbb
cwtl
movsl
push
sub
add
dec
adc
mulb
add
out
push
xor
pop
lock
push
je
out
stc
fldcw
add
mov
loopne
mov
jmp
pop
call
ja
dec
inc
jne
loope
shll
test
dec
mov
mull
add
adc
or
repz
pop
xor
fcoml
push
jge
nop
rcrb
mov
fcompl
sahf
daa
xlat
or
xor
int3
cmp
push
jecxz
leave
jne
jbe
jbe
jb
pop
in
pop
das
les
std
xchg
les
fstpt
dec
jecxz
lea
jne
push
adc
decb
cmpsb
mov
ret
in
jne
mov
std
xchg
and
xor
dec
xchg
jbe
adc
cmp
out
mov
addr16
xor
mov
dec
cmp
sti
add
jmp
cmp
xchg
push
in
xor
jno
mov
jmp
aad
dec
xor
sub
scas
xor
mov
movsl
jge
push
mov
cli
loopne
push
hlt
jb
jb
fdivs
push
out
sub
out
in
cmpsb
or
sahf
push
cmp
mov
jg
sbb
fnstcw
push
jp
bound
rcr
paddq
in
daa
sbb
mov
xchg
jge
or
push
mov
testl
bswap
and
test
push
fstpl
loop
outsb
fsubrs
xor
mov
sbb
jae
in
add
hlt
xor
xchg
push
sahf
mov
roll
mov
ret
repz
fnstsw
in
sbb
cmpsl
add
mul
loopne
mov
mov
add
pop
rorb
addr16
pop
or
pusha
push
test
and
adc
jmp
dec
lret
adc
or
inc
sub
cmp
negl
mov
lahf
aas
mov
dec
jmp
inc
push
jmp
xor
pop
bndldx
inc
dec
sbb
pop
fistl
pop
mov
enter
xor
add
xor
pop
lcall
pop
mov
dec
adc
inc
cmpsl
mov
add
fwait
or
fbstp
das
sub
mov
mov
test
xchg
aaa
ror
and
xchg
pop
push
push
sub
jae
lds
mov
pop
pop
fistl
jg
rcrb
inc
jne
xchg
pushl
popf
push
adc
mov
scas
sub
mov
lcall
mov
roll
cmp
cmp
ficoml
cmp
mov
les
stc
cmpsl
dec
xchg
loop
mov
mov
fwait
loop
subb
or
jae
shl
test
add
jb
or
mov
pop
xchg
aad
jno
pop
call
sbb
test
and
mov
scas
test
rcrl
lock
into
inc
fldt
xor
test
stc
add
out
add
mov
and
add
xchg
cmp
ds
pop
xlat
les
bound
mov
in
dec
loopne
add
ret
fs
jb
and
mov
lret
mov
jmp
movsl
cmpsl
cmpsb
std
fnsave
ja
les
aam
fldcw
adc
lret
sbb
lock
mov
es
mov
mov
cmp
and
push
aaa
mov
xchg
nop
sub
std
data16
cmpsb
loop
imul
add
sub
neg
sub
call
inc
cmpsb
mov
cmpsl
push
xchg
xor
lods
cmp
ficomps
mov
cmp
jnp
iret
lock
adc
sbb
mov
sub
fnstcw
gs
clc
cmpsb
inc
fsubrp
mov
cld
sbb
and
in
leave
shrl
mov
cmpl
pop
insb
add
pop
stc
insl
pop
aas
andb
arpl
adc
lods
mov
fwait
push
xchg
push
int
clc
mov
fistps
push
pop
adc
stc
cmp
cmp
dec
outsl
xor
mov
sub
xlat
ret
dec
aaa
pop
and
adc
add
sub
out
testb
xchg
gs
mov
pushf
jno
cs
fisttpll
xlat
jl
inc
push
fwait
inc
add
shl
pop
adc
enter
sbb
mov
xchg
jp
mov
sub
outsl
out
cltd
hlt
inc
sub
lock
and
out
mov
push
aad
sbbl
out
pop
inc
add
sbb
jb
or
pop
mov
outsb
frstor
ficoms
push
mov
sub
inc
add
lds
push
xchg
addr16
jbe
popf
cmp
xor
cmpsl
xor
mov
cld
inc
sbb
jno
fld
cmp
lret
adc
stc
repnz
jl
cli
or
adc
js
rcrb
inc
dec
xor
or
test
mov
mov
lds
fdivs
inc
and
jnp,pt
out
push
mov
outsb
idivl
mov
ljmp
mov
xchg
or
out
pop
loope
sbbb
inc
addl
push
ljmp
sbb
cmp
and
add
aaa
pop
xor
pop
sbb
push
dec
push
repz
inc
outsb
pop
push
fs
fbld
jmp
in
addr16
dec
jne
add
jl
popf
addr16
xor
nop
inc
sbb
xlat
mov
cli
jmp
mov
and
cmovne
push
mov
lds
add
pop
mov
rolb
push
add
push
es
shrb
cmp
test
pop
and
test
xor
dec
sbb
inc
sahf
aad
ds
addb
lahf
and
fdiv
mov
inc
and
sub
jae
dec
jne
push
mov
repnz
std
inc
cmp
ja
add
mov
clc
orl
cmpl
xchg
test
dec
pop
test
iret
les
and
popf
and
in
and
dec
cmpsb
dec
dec
add
sbb
rolb
cmp
sub
scas
fistps
pop
fistl
lds
mov
pop
jb
out
int3
fidivrs
lds
stc
xchg
mov
fld1
test
fisubl
push
push
fs
mov
pop
jne
fsubrl
sub
pop
sbb
int
fdivrl
iret
aam
and
or
loop
orl
fistpll
sub
lea
shrl
pop
popf
movsl
and
inc
add
cmp
test
mov
cmp
shlb
mov
decl
mov
sub
je
addr16
and
xor
lds
mov
jb
add
sub
test
nop
stos
inc
std
clc
sti
mov
cmp
and
fwait
mov
les
mov
adc
pop
push
xor
repnz
fs
test
lret
add
push
jo
leave
jmp
cwtl
adc
pop
aaa
push
movsb
or
repz
mov
push
loop
xor
push
and
jmp
sbbl
scas
mov
adcl
inc
je
in
xchg
jmp
pop
push
inc
popf
push
into
cmpsb
pusha
inc
lea
dec
aad
push
outsb
jbe
pop
nop
dec
data16
sbb
ljmp
pop
mov
adc
mov
pop
in
sbb
cmpsb
pop
in
mov
pushf
shll
mov
stos
mov
scas
fistpl
loope
mov
movsl
sbb
aam
imul
push
inc
sbb
loopne
js
ljmp
push
pop
mov
fdiv
jge
cmp
ja
jbe
dec
pusha
mov
xchg
call
cwtl
or
mov
shl
in
mov
scas
pop
mov
push
int
lods
int3
adc
stc
pop
sub
jne
mov
cmpsb
dec
int3
jo
push
or
lods
hlt
mov
push
mov
and
loop
push
fcomps
mov
mov
out
fildll
loopne
mov
faddp
adc
addl
cmp
test
push
call
repnz
sbb
pop
ud0
jo
adc
cli
pop
jecxz
push
js
push
jmp
push
out
jecxz
lods
lahf
jns
xchg
stos
loop,pn
mov
add
xchg
cmp
adc
sub
pop
xchg
hlt
in
fsubs
mov
addr16
inc
adc
cmp
out
push
lods
clc
test
int
pusha
in
or
xor
mov
call
cmp
fsubl
fisubrs
inc
pop
xchg
sahf
adc
gs
mov
push
aas
push
imul
jle
les
insl
shll
push
jnp
roll
push
adc
fcompl
sbb
mov
push
fadds
aam
or
fwait
int3
xlat
jne
xor
inc
lea
mov
popf
inc
xchg
or
mov
push
fnstcw
pop
movsb
mov
or
jg
xor
insl
xor
fwait
xchg
pop
push
repnz
leave
out
pop
out
nop
jmp
jae
ds
fistps
inc
or
inc
push
adc
ret
or
ret
cs
cmp
outsb
mov
pop
out
lret
arpl
push
jg
jnp
jno
negl
add
fdivl
outsb
icebp
and
shll
jg
xchg
out
in
pop
cld
or
repnz
les
call
adc
pop
ja
ret
fs
inc
je
mov
sti
repz
jge
shll
jmp
push
enter
les
mov
mov
int
add
add
fidivl
lcall
jp
sbb
scas
ja
push
jns
roll
pop
add
ljmp
xchg
in
push
mov
cli
mov
fs
stc
int3
scas
out
add
mov
sub
mov
lcall
cld
add
lods
shl
cmp
fnstenv
and
adc
jl
xchg
pop
sub
jge
jae
and
add
sbb
sbb
cmp
lahf
adc
aaa
sbb
mov
pop
sbb
and
xchg
mov
sahf
filds
rcll
cmp
cmpsb
arpl
lods
dec
mov
push
lcall
or
fistl
fdivs
popf
ljmp
aaa
mov
aam
mov
loop
loopne
add
daa
inc
fcomps
cmp
bound
mov
jno
mov
pop
mov
push
jne
push
cli
mov
jl
push
insl
pop
or
shrl
push
fidivrl
and
cmp
xlat
cmpsl
jp
cwtl
push
push
or
scas
xorb
cmp
loope
sbb
pop
push
leave
add
push
or
stc
mov
sbb
out
mov
out
shll
ss
in
cmc
or
test
sbb
cmp
sub
sub
ljmp
inc
mov
mov
inc
xor
mov
or
scas
dec
or
cmp
mov
sub
mov
loope
jae
gs
lret
mov
shl
push
gs
popa
data16
add
shlb
pop
sarb
stc
cmpsb
stos
fistpl
mov
enter
dec
inc
push
fmull
push
imul
fwait
lods
xchg
stos
movl
imul
rorb
mov
xchg
aas
mov
mov
ljmp
xor
jb
add
lret
lret
xor
lahf
fstpl
cwtl
lret
inc
add
lock
notb
fimuls
jl
cmp
add
adc
js
push
sub
loopne
outsl
int3
stos
and
lock
pop
cmp
mov
sbb
mov
bnd
test
sub
jge
inc
add
cmp
mov
push
or
dec
mov
test
xchg
arpl
stos
lcall
cltd
mov
jae
or
jbe
mov
dec
lods
hlt
lock
dec
jno
push
outsl
xlat
std
cmp
in
int3
or
popf
aad
ljmp
insl
call
mov
stos
out
sbb
jne
stc
lods
mov
out
jg
bound
cmp
jo
outsl
sub
pop
inc
push
in
jns
daa
fistps
xchg
std
cmp
xchg
cmp
sbb
xlat
or
out
repz
nop
and
shl
lea
clc
test
xor
outsb
adc
stos
mov
and
jge
loopne
lds
inc
mov
psrad
xchg
mov
add
mov
xchg
cmc
dec
lods
adc
int3
pop
mov
xchg
out
pop
xchg
ror
sarb
add
stos
push
fnstcw
add
pop
pop
sub
movsl
push
fbld
jb
xchg
shrl
pop
inc
sbb
lcall
sti
mov
jnp
bound
dec
pop
xchg
addr16
insb
or
je
insl
imul
jge
aad
repz
cs
mov
adc
adcl
arpl
push
add
pusha
inc
push
jmp
cltd
ret
in
sbb
popa
dec
xchg
mov
mov
cmp
imul
mov
movsl
and
jge
leave
inc
in
ljmp
testb
push
sarl
insl
sbb
cmp
cmc
stc
mul
and
dec
es
test
add
ljmp
lods
adc
not
sub
cmp
adc
xchg
add
in
jo
ss
mov
ss
mov
and
mov
adc
and
push
repnz
sub
adc
int
pop
mov
pop
mov
ret
pop
jno
loopne
les
mov
mov
sarb
aas
fstpt
inc
sbb
jnp
scas
or
sti
dec
movsb
fnstenv
fimuls
decb
xor
mov
out
cs
xlat
adc
pop
pop
adc
stc
push
popf
aaa
fdivs
shll
add
outsb
cwtl
insb
or
in
mov
xchg
jle
out
push
mov
mov
push
pusha
add
les
mov
cmp
cmp
dec
pop
stos
push
dec
xchg
sub
fildll
dec
aam
outsb
in
nop
rcll
mov
das
adc
xchg
pop
mov
pop
xchg
sbb
data16
pop
jno
push
and
shrl
sub
sub
lods
adc
int3
mov
xchg
push
mov
jns
xchg
and
ret
mov
adc
cmc
sbb
mov
mov
int
adc
ljmp
lea
cmpsl
dec
adc
pop
pop
lret
adc
xchg
xor
xchg
sub
lock
popa
scas
pop
pushf
int3
cmpsb
imul
fs
dec
cmpsl
ret
mov
lea
push
arpl
shrb
lock
loopne
and
fsubp
xchg
xor
popl
mov
pop
ret
pop
lods
shlb
mov
jecxz
aaa
xor
and
loope
movsb
mov
scas
push
test
push
mov
inc
mov
jmp
pop
jg
add
movsl
cltd
popl
lret
cmp
xor
adc
sbb
mov
pusha
sbb
dec
mov
test
push
ret
dec
inc
imulb
jecxz
cwtl
bound
and
sbb
adc
cmp
mov
xor
arpl
scas
push
add
xor
pop
int3
in
jnp
mov
sub
sahf
shrl
imul
in
aas
and
adc
cmp
cli
mov
bound
fwait
insb
rorl
sub
xchg
pop
mov
and
out
lea
aas
mov
xchg
mov
push
imul
sbb
dec
ficoms
repz
dec
lcall
stc
mov
dec
push
out
push
cmp
fs
mov
inc
inc
sub
mov
sar
lcall
jmp
jmp
cmpsb
cmp
cmpl
or
and
pop
in
adc
icebp
icebp
clc
cmpsl
ret
and
std
or
dec
icebp
nop
movsb
pop
leave
xlat
xrelease
imul
popa
insb
xchg
adc
cmp
add
jns
sub
cs
or
clc
fdivrs
jnp
add
sub
jl
leave
xchg
mov
and
push
mov
pop
arpl
pushf
mov
and
push
hlt
and
call
mov
cmp
adc
mov
xchg
pushf
gs
jle
jg
cwtl
scas
stos
xor
lds
push
les
fistpll
mov
push
push
rclb
aam
push
push
out
cmpl
cmpsb
or
push
popf
scas
push
ss
cmpsb
mov
sub
sbb
lods
rcll
jbe
movsl
sbb
into
add
imul
imul
mov
test
bound
adc
lods
mov
mov
push
fnstenv
or
ret
int
xor
dec
mov
popf
jge
std
aaa
lods
stos
cs
repnz
xchg
mov
imul
dec
int
or
idiv
leave
or
shrl
mov
aam
lret
push
adc
mov
lock
lret
sti
repnz
xchg
shlb
xchg
add
xchg
mov
jg
and
jmp
rcll
enter
andb
mov
gs
hlt
cmp
add
jne
push
or
das
aam
inc
and
shrl
pop
mov
mov
push
mov
dec
mov
mov
push
fcompl
inc
push
sbb
pusha
shll
push
dec
add
imul
xchg
dec
out
jmp
aas
dec
mov
roll
cmc
xor
repz
mov
xchg
in
dec
ss
aam
push
call
inc
push
mov
cmpsl
fsts
scas
cmp
cwtl
loopne
lods
fsubl
mov
js
mov
adc
sub
popa
adcb
or
jnp
leave
jno
rep
lret
inc
lods
cmp
fcomps
js
imul
dec
jae
cmc
jno
cmp
jne
es
cmp
addr16
dec
mov
xchg
icebp
cli
mov
or
xchg
out
push
or
cmp
mov
adc
and
add
xor
xchg
mov
out
sarb
pop
adc
lods
lret
fiadds
xor
iret
cwtl
cwtl
lret
push
and
cmp
push
add
sbb
jmp
sti
pop
loope
xchg
pmovmskb
inc
cs
test
add
inc
out
lret
push
pop
rcll
inc
or
xor
xor
sbb
insb
pop
jbe
mov
call
jno
stos
and
popf
int3
mov
mov
mov
loop
add
mov
xchg
std
inc
bound
adc
xchg
sti
jno
cmp
repnz
cli
loopne
movb
in
into
inc
add
mov
push
mov
aam
lds
mov
cmp
inc
dec
int3
inc
push
fnstsw
ljmp
fcmovbe
jno
add
jmp
lcall
fsts
pop
sub
fcmovb
lret
xchg
fbstp
jp
outsb
orb
flds
pop
xor
shlb
out
call
mov
mulb
pop
xchg
loope
insb
aas
enter
pop
or
lods
xor
mov
std
int3
adc
adc
and
adc
movsl
outsb
fdivr
xor
loope
jp
inc
inc
out
or
xchg
outsb
xchg
jecxz
mov
xchg
inc
call
imul
mov
xor
sbb
dec
int3
imul
out
jno
out
cmpsb
xchg
lret
lcall
xlat
push
in
test
xchg
dec
cmp
ret
xchg
daa
in
inc
inc
jmp
insb
fiaddl
call
push
in
mov
mov
in
sahf
xchg
sbbb
cld
push
mov
aad
cmc
fwait
pop
icebp
mov
push
sub
lods
ret
add
pop
cmpsl
mov
sbbl
cmc
iret
mov
add
pop
dec
inc
cmp
push
mov
fs
xchg
push
jg
cmp
push
lods
pop
out
fisubrs
sub
in
xchg
sub
bound
test
icebp
xor
aaa
jno
ds
push
cs
les
adc
sti
cmp
xchg
fwait
push
sbb
sub
cs
daa
jmp
outsb
ret
daa
stos
cmpsb
push
inc
and
lds
ss
xor
pop
adc
push
inc
shll
jb
inc
mull
pop
mov
popf
dec
cwtl
add
stos
xor
and
pop
xchg
mov
notl
dec
push
ljmp
or
imul
adc
sbb
sbb
das
outsb
mov
add
lret
in
adc
ss
and
mov
pop
arpl
add
cmc
icebp
test
movsb
in
cmc
pop
mov
insl
sbb
popa
push
sar
mov
mov
jnp
fidivrl
mov
sbb
mov
and
addr16
jno
mov
pusha
push
push
cmp
jnp
imul
movsb
int3
vorpd
cmc
xchg
aaa
fnstenv
push
loop
js
dec
mov
mov
inc
lods
pop
stc
mov
ds
adc
add
ds
jb
arpl
cli
dec
push
and
movsl
pop
fisubrs
imul
mov
lahf
cmp
cmc
push
and
mov
aad
dec
int
mov
lods
lea
fldl2t
mov
lock
push
jmp
insb
in
cld
ret
movsl
jp
jmp
shlb
lret
jp
cmc
pop
push
xorb
ss
or
xorl
lds
mov
scas
sub
xchg
or
and
inc
jmp
sar
and
jo
lods
mov
mov
ds
add
shr
xor
xor
mov
adc
xor
mov
sbb
pop
insb
insb
rorl
out
pop
or
popa
xor
sbb
ja
ficomps
jle
clc
pop
sub
inc
xchg
fstp
lods
cmpsl
notb
xchg
rcr
mov
dec
incb
ss
and
hlt
das
popf
sub
insb
ret
cs
jecxz
cmp
sbb
and
inc
xchg
shl
pop
xor
je
push
insl
sbb
iret
sub
into
outsl
jecxz
mov
mov
jno
loope
jno
in
ljmp
jbe
pop
push
fldl
push
and
or
mov
xchg
repz
pop
daa
daa
leave
push
test
inc
push
testl
jl
add
in
loope
test
js
in
ds
fcoms
sahf
mov
and
cmp
lret
jae
xchg
sbb
lret
jo
inc
icebp
ret
int3
mov
leave
lea
mov
in
cmp
jae
call
xor
cli
mov
pop
inc
sahf
xor
movsl
sti
cmpsl
fistpll
scas
enter
loopne
repz
dec
push
inc
das
incb
int
pop
pusha
lds
je
test
xchg
dec
inc
sbbb
cmp
sbb
mov
pop
clc
sbb
add
xchg
push
add
dec
xlat
push
push
jp
adcb
mov
fistpl
mov
aaa
clc
je
push
pop
pop
enter
stos
push
pusha
sbb
sbb
clc
bound
mov
inc
cmp
popf
mov
je
fwait
cmpsb
xchg
aam
stos
push
out
add
fiaddl
push
pop
outsl
outsl
mov
mov
or
inc
and
inc
or
rorl
pop
xor
mov
jp
inc
lcall
dec
xchg
scas
movsb
cmc
mov
mov
pushf
call
ja
mov
cs
pop
push
xlat
mov
sbb
xlat
inc
xor
and
mov
cmpsl
fnstenv
enter
cmp
cmc
jo
mov
and
sbb
fmul
pop
jno
dec
sub
cmpsb
test
push
int
jle
sub
bound
mov
pop
cmp
xchg
inc
lds
push
push
test
mov
loopne
xchg
push
test
arpl
mov
sub
or
push
aaa
adc
mov
ds
out
and
push
int3
mov
cs
fists
jno
nop
add
ja
or
or
adc
xchg
fcmovnbe
sub
pop
mov
int3
int
pop
mov
inc
xchg
gs
mov
pop
xchg
jnp
clc
push
adc
addr16
shlb
mov
push
xchg
inc
outsl
xor
lods
fcoms
bound
jns
jge
test
add
fcoml
andb
push
pusha
cmpsl
ror
cld
xchg
scas
stos
jp
test
nop
inc
sub
out
mov
loope
or
test
jg
mov
sbb
mov
stc
mov
repz
insl
adc
pop
pop
int3
push
ds
or
lcall
mov
mov
in
je
pop
pop
testl
sbb
insl
movsb
pop
loope
jp
xor
orb
sbb
insl
lods
rolb
cwtl
fs
ret
sub
int
rorl
sbb
leave
mov
jo
loope
push
pop
cwtl
orl
cli
iret
mov
rorl
in
mov
insl
xchg
push
cmovge
dec
cld
mov
daa
sub
sti
adc
dec
pop
pop
cmp
pop
mov
xor
sbbl
mov
dec
add
aaa
cld
dec
sub
mov
enter
push
cmp
insl
loopne
pop
mov
pop
mov
push
arpl
cld
int3
bound
push
push
stos
fcmovbe
or
jl
sbb
pop
xchg
aad
inc
negl
out
test
dec
inc
movsl
cmpsl
gs
out
stos
pop
xchg
mov
jno
push
adc
pop
pop
mov
xchg
adc
cmc
in
pop
xchg
push
imul
pop
push
popa
sbb
daa
out
popa
lock
jecxz
lods
std
adc
and
scas
xchg
test
loop
into
cmp
adc
cmc
xchg
out
repnz
mov
cmpsl
xor
lret
repz
mov
inc
mov
mov
add
dec
js
inc
mov
test
cli
xchg
inc
dec
mov
or
test
inc
cwtl
jp
dec
xchg
inc
cmpsb
push
dec
cli
repnz
mov
ja
popa
test
mov
xor
or
mov
sub
mov
adc
cmp
jns
jb
push
cs
shrl
jecxz
pushf
push
pop
xor
push
mov
hlt
push
iret
movsl
loopne
add
xchg
fs
mov
inc
inc
cmp
add
xor
call
sbb
sbb
hlt
cmp
lret
in
loope
subl
and
and
outsl
cmp
test
xlat
je
outsb
sbb
icebp
call
and
je
bound
push
inc
movlps
rolb
dec
int3
ss
xor
ror
adc
loopne
add
add
iret
rclb
jle
outsb
adc
inc
nop
cltd
rcrl
in
cli
adc
out
movb
and
xchg
pop
adc
dec
cmp
add
sub
stc
mov
push
add
push
push
imul
mov
arpl
int3
mov
xchg
andl
imul
lock
enter
mov
fwait
ja
cmpsb
int
jno
std
movsl
notb
jno
aaa
pop
in
inc
push
pop
repnz
mov
fwait
rcll
dec
aaa
cmpsl
xchg
add
add
ds
pop
adc
iret
out
mov
mov
dec
fidivrl
cmp
sub
jno
jmp
jno
sub
and
out
cmpsl
xchg
add
jne
mov
sbb
push
add
cli
xor
popa
ljmp
aas
cmpsb
addr16
push
xor
mov
sahf
inc
in
cmpl
cmpb
mov
imul
addr16
test
and
mov
dec
cwtl
jno
fldl2e
adc
mov
mov
mov
xlat
mov
dec
aam
lret
cmp
fcmove
lret
add
mov
ret
stc
mov
out
jmp
or
push
jge
nop
xchg
push
in
inc
ja
pop
sahf
scas
pusha
rol
mov
pop
push
cmp
sbb
aam
xchg
cmp
inc
push
ja
push
hlt
ljmp
jg
enter
lods
and
std
aad
leave
call
call
push
les
shll
pop
dec
xor
pop
jns
iret
enter
in
notb
imul
mov
ja
dec
insb
fwait
sti
mov
or
xchg
mov
clc
aam
jbe
inc
mov
repz
arpl
sti
cmp
cmp
cmp
outsb
das
shlb
xchg
pusha
push
cmc
shrb
out
mov
cmp
or
fidivl
sbbb
mov
xchg
jns
lock
loope
popf
loope
sbb
pop
pop
adc
mov
push
mov
mov
cmp
jp
or
iret
mov
or
sbb
push
fdivrs
cmp
les
and
pop
adc
inc
inc
sub
frstor
mov
cmp
lcall
mov
gs
push
jmp
jb
lea
pop
fbld
mov
and
xchg
shlb
insl
hlt
push
mov
imull
xor
imul
dec
fldenv
iret
mov
xor
jbe
or
sti
dec
mov
call
lock
addr16
in
jb
inc
pop
mov
sbb
aam
push
test
rol
pushf
stos
jnp
int3
cmp
or
mov
pop
in
xlat
outsb
pop
dec
cwtl
cmpsb
jae
sbb
jge
xchg
cs
sbb
sub
pop
pushf
push
dec
fidivl
sbb
aaa
sub
adc
cmpsl
roll
lods
sahf
adc
dec
adc
test
push
lret
adc
sbb
mov
xchg
mov
fdivs
mov
hlt
sbb
pop
or
loope
and
rolb
sbb
in
adc
inc
adc
addr16
mov
add
mov
push
mov
bound
mov
push
jp
push
dec
inc
sti
aaa
pop
test
leave
daa
es
mov
sub
iret
push
mov
int
pushf
sbb
loop
push
add
in
mov
fs
ret
clc
xor
test
outsb
imul
add
dec
sub
jl
jmp
data16
inc
fsubrl
jne
imul
sub
xor
pushf
pop
repnz
xlat
mov
je
icebp
mov
fisubrl
mov
enter
js
call
jmp
hlt
int3
fwait
push
cmp
jg
or
ds
dec
in
inc
out
mov
pop
bound
cwtl
std
filds
in
repnz
dec
ret
mov
imul
cmovnp
mov
xchg
inc
movsb
adc
mov
test
or
pop
mov
xchg
les
xorl
ror
inc
int
addr16
in
stos
gs
cmc
arpl
lds
jo
sub
adc
loop
filds
addr16
repz
mov
dec
outsb
push
jg
add
xchg
xchg
aaa
out
add
fsubrl
cs
push
mov
pop
test
test
lret
dec
fsts
rcll
add
inc
lcall
lds
or
push
ficompl
mov
scas
mov
enter
xchg
enter
dec
and
loope
shll
lods
xlat
xchg
ljmp
mov
lret
cmpsl
mov
or
push
dec
repz
inc
mov
push
lret
test
inc
scas
xor
loop
aaa
xor
xchg
les
neg
cmp
xchg
inc
mov
xor
push
rcrl
jae
rcr
mov
jae
nop
in
stos
mull
mov
cmp
fcmovu
testl
lods
xlat
push
into
mov
fdivrl
mov
call
notb
ret
push
je
push
jnp
andl
or
adc
push
push
jecxz
jns
pusha
ljmp
icebp
pop
divl
or
ljmp
jne
push
imul
adc
xchg
mov
xor
test
and
xchg
mov
inc
add
add
xor
mov
or
mov
mov
jbe
enter
ja
jl
push
or
les
pop
pop
pop
sub
je
movsb
xchg
adc
in
push
push
xor
shll
lret
clc
stc
fldl
xchg
daa
lods
mov
sti
popa
jge
cmp
adc
test
movsl
adc
jns
push
fldcw
or
or
cltd
xor
std
lods
sub
aam
cs
mov
lahf
xor
xchg
push
lret
cmp
dec
adc
jnp
aaa
mov
fwait
jge
lahf
mov
fcomps
rorl
dec
sbb
xor
jmp
shll
out
sbb
add
xchg
dec
sbb
ds
or
ret
xor
and
je
dec
cld
mov
pusha
das
test
in
push
hlt
imul
arpl
cmp
and
mov
inc
lods
or
and
mov
clc
xor
mov
cmpsb
nop
aaa
push
repz
add
mov
dec
jne
out
dec
jecxz
xor
in
inc
jne
nop
test
lcall
or
jg
mov
cltd
fwait
ds
sub
es
negb
inc
les
loop
pop
ss
std
pop
jnp
ja
adc
mov
sbb
ret
pop
dec
sahf
xchg
in
mov
jp
jl
jmp
jae
stc
fabs
call
negl
mov
inc
mov
push
inc
fstpt
inc
sub
movzbl
or
in
lods
xchg
or
hlt
xor
in
mov
mov
push
lahf
lock
repnz
push
mov
inc
fwait
xchg
int
mov
in
xchg
or
pop
cmpl
insl
fsubrs
or
cld
adc
popf
push
xchg
sahf
mov
cli
and
mov
add
push
or
jmp
xchg
sub
pop
mov
and
push
es
mov
mov
orl
adcl
js
jge
les
loope
sub
shlb
add
jmp
xchg
push
jg
data16
mov
scas
mov
push
test
push
push
or
ljmp
insl
inc
add
jae
jnp
or
daa
xchg
fwait
cltd
dec
aad
or
fcomp
icebp
or
inc
ljmp
push
mov
or
rorb
insl
pop
xor
shr
adcl
scas
sub
aas
jle
push
sub
or
add
cld
loop
mov
rcrl
daa
push
xor
cmp
adc
subl
pop
in
push
mov
insl
mov
sbb
idiv
mov
mov
pop
dec
xor
mov
pop
mov
lock
cmpb
bound
or
jl
pop
daa
push
movsb
aas
xor
aas
insb
sub
push
cmp
mov
xchg
roll
cmc
leave
dec
lock
pop
fdivl
add
fnstcw
xchg
cmp
shl
scas
cld
jge
sbb
mov
dec
jbe
xchg
push
loopne
inc
xor
mov
sub
xchg
xchg
nop
mov
shr
dec
sbb
cmpsl
movsl
popf
popa
sub
push
mov
mov
cmp
mov
cli
loopne
jle
mov
xor
andb
icebp
inc
inc
jb
and
psubw
mov
jne
cmp
mov
shll
mov
adc
dec
cmpsb
xchg
sub
das
mov
insb
add
cmp
repnz
pop
outsl
mov
outsl
lods
and
dec
push
jnp
pop
repz
push
inc
rcl
gs
rorl
mov
mov
mov
mov
lret
jle
cwtl
push
and
incl
push
fwait
jns
adcb
sbb
xchg
xor
das
inc
nop
mov
lcall
dec
jmp
cmpsb
add
mov
shl
shlb
mov
scas
inc
out
cmpsb
pop
push
jne
roll
pushf
xor
lret
out
or
je
icebp
fldenv
fdiv
sub
push
jo
jb
aas
push
jmp
xor
jbe
jns
mov
pop
orl
xchg
pushf
bound
es
mov
cmp
pop
rcl
push
in
insl
pop
mov
xor
adc
xchg
jecxz
push
aad
pop
and
mov
add
data16
repnz
sub
aad
lods
jo
inc
std
test
jge
bound
arpl
add
rcrb
fs
cmp
jl
cld
adc
fldenv
mov
sub
popl
push
jae
test
xchg
shrb
sub
or
fs
jnp
ret
mov
pop
bound
into
pusha
sub
jns
test
test
idivl
popf
rcl
cwtl
outsb
xchg
ljmp
jp
pop
clc
scas
sbb
fs
loopne
lret
addr16
outsl
inc
cmpsb
mov
mov
xchg
jo
mov
and
or
les
aam
in
push
or
aas
xor
and
mov
das
test
sbb
lcall
dec
cwtl
out
adc
adc
sahf
inc
adc
mov
into
sbb
dec
es
sub
repnz
or
cmp
push
cld
mov
sub
cmc
xchg
out
out
fs
popa
push
jb
fldl2e
xchg
sbb
adc
mov
and
je
movsb
xchg
mov
mov
insb
movsl
fiadds
lock
aas
int
jnp
cmp
cli
adc
jmp
fldcw
add
or
out
xor
in
sbb
js
cld
cmp
movsl
sub
inc
pop
andb
in
test
xchg
xor
push
das
pop
pop
movsl
mov
pop
mov
cld
push
subb
inc
adc
mov
in
mov
xchg
cltd
lret
ljmp
subb
aas
cmp
call
mov
ret
push
inc
fwait
call
pop
pop
roll
in
mov
xchg
data16
add
inc
sbb
push
ret
mov
outsb
in
jnp
nop
cs
xlat
push
loop
xchg
fcoms
in
sub
mulb
mov
cli
dec
fucom
into
popf
stc
mov
daa
arpl
call
add
outsw
or
jl
push
add
mov
cmp
adc
popf
xor
lahf
aam
rcl
aaa
stos
xlat
sub
addb
pop
inc
pop
out
jns
loopne
push
push
xchg
mov
xor
dec
add
outsb
lcall
xor
out
xchg
test
pop
mov
jae
adc
mov
xor
pop
or
sbb
sub
enter
addb
xor
inc
push
push
adc
out
sbb
cmp
and
mov
mov
mov
jbe
adc
push
sub
mov
leave
add
jo
xchg
mov
scas
mov
inc
mov
iret
gs
stos
out
sti
dec
pop
in
iret
lods
add
movsl
or
rcr
ja
je
dec
adc
rorl
movsl
hlt
lahf
add
leave
jmp
xchg
data16
outsl
xchg
rcll
and
ss
lea
jo
bound
lcall
push
inc
add
pop
inc
pop
pushf
cmp
mov
pop
add
sahf
lods
jle
adc
lret
mov
int3
out
sub
adc
and
cmp
mov
mov
jmp
fwait
pop
scas
dec
dec
popa
add
jne
cmpsl
or
fsubrs
sub
xor
movl
cmpsb
stos
inc
and
cmp
and
call
in
push
xchg
insb
cmp
jl
sub
idivb
ficoms
in
es
mov
or
sub
xchg
xor
scas
sti
lcall
pop
and
push
sbb
in
and
jae
nop
push
push
xor
into
and
iret
cmpsl
sub
daa
inc
scas
mov
idivl
icebp
enter
icebp
and
and
test
iret
dec
loopne
fidivrs
adc
or
stos
data16
jle
out
dec
leave
jg
xchg
push
jp
add
sbbb
cmp
adc
and
jbe
adc
xchg
or
rcr
andb
clc
cmc
iret
push
cs
add
inc
popa
cmc
shlb
int3
or
xchg
add
std
add
test
repnz
pop
fnstsw
push
addr16
iret
shlb
scas
test
cmp
jecxz
fs
mov
jae
rcl
pushf
or
in
push
xchg
cmp
or
pusha
mov
pop
fsubl
sbb
mov
sbb
data16
or
in
in
sbb
ret
pop
movsl
mov
or
test
inc
mov
jle
loopne
lods
jp
cmp
pop
inc
ficompl
cmpl
call
cltd
clc
jno
push
add
addr16
push
xor
je
dec
out
movsb
jecxz
lret
jecxz
mov
dec
push
inc
or
fs
addr16
sbb
mov
les
cmp
pop
int3
mov
fadds
pop
sub
adc
or
cld
and
loopne
shr
stos
ficoml
sbb
dec
pop
lcall
call
test
push
subl
mov
out
adc
and
cmp
testb
adc
jle
add
jp
adc
movsl
dec
fldl
mov
jg
mov
mov
rcll
or
and
test
out
insb
jmp
std
in
lods
dec
mov
test
andb
jmp
gs
fs
mov
pop
dec
gs
push
test
sub
inc
sbb
scas
cwtl
sbb
test
jno
cltd
mul
mov
adc
movsb
gs
or
in
popa
jecxz
into
push
shrl
es
mov
movb
jmp
sbb
lods
pop
call
rol
das
ds
ds
cmpsb
inc
dec
cmp
gs
xchg
out
sbb
push
push
jnp
les
mov
lock
es
popf
dec
cmp
adc
aaa
sbb
jmp
pop
test
ret
test
outsl
mov
orb
lret
sbb
pop
cltd
pop
and
mov
pop
in
push
lcall
and
cmp
fs
shll
out
lsl
mov
sbb
sub
pop
mov
xchg
add
lret
cmp
inc
das
jge
arpl
out
sbbb
stos
call
xchg
icebp
out
xchg
shl
fwait
das
movsb
mov
mov
pop
push
mov
loop
adc
std
cmp
pop
test
pop
jle
cmpsb
pop
cwtl
and
jae
loope
add
rolb
mov
mov
lea
cli
sub
sbb
and
stos
lds
push
push
cmp
dec
movsb
sub
push
lods
inc
fistps
and
outsb
hlt
je
mov
ss
mov
sbb
and
pop
cmp
std
push
xchg
nop
jle
xchg
fsubr
addl
mov
pop
mov
cmp
ret
mov
adc
sbb
ret
andl
arpl
push
inc
inc
jno
fisttpll
mov
sub
inc
fsubs
cltd
sbb
mov
sbb
movntps
test
out
das
push
dec
mov
outsb
pop
push
mov
pop
lods
jge
mov
hlt
dec
movsb
sub
sahf
adc
inc
outsb
inc
shl
sub
cmpsb
xor
push
sbb
jle
mov
jno
adc
sbb
cmp
push
inc
repnz
pop
mov
mov
out
das
and
mov
test
mov
cmp
lods
lock
pop
testb
enter
inc
xchg
sub
loopne
stos
int3
js
aas
push
lods
leave
jge
pop
pop
push
xlat
imul
test
sbb
es
cli
pop
push
fisubs
call
jmp
xchg
and
addr16
fdivrl
into
sub
mov
stc
mov
std
insl
push
xor
jno
pop
add
into
movsl
out
pushf
bound
inc
add
leave
in
mov
lahf
shlw
scas
push
in
adc
jmp
push
add
pushf
xchg
mov
loopne
lods
pop
loop
in
push
in
xor
cwtl
xor
sbbl
jno
sbb
shrl
lret
mov
lahf
aad
mov
jns
inc
std
pop
push
mov
cmp
popa
call
mov
outsb
movsb
pop
xor
and
mov
mov
mov
pop
xchg
fwait
push
std
test
fisttpl
bound
out
pop
lret
push
jmp
int3
dec
rcr
punpcklwd
cmp
push
je
mov
xchg
loope
shlb
loop
xor
mov
jnp
mov
ret
mov
mov
adc
outsb
push
sub
jp
pop
int
mov
fcomip
out
lds
in
fists
push
adc
cmp
inc
ret
shrb
fstl
mov
push
movsl
sbb
data16
mov
sahf
sbb
cmp
movb
xchg
jle
stos
push
add
add
push
or
pop
jae
pop
mov
push
iret
inc
xor
iret
dec
jne
xchg
aam
push
cltd
cmp
negb
and
adc
and
jle
jmp
faddl
stos
hlt
cltd
and
std
andl
in
in
pop
push
xchg
xor
fs
arpl
sub
xchg
jne
addb
cmp
add
mov
sbb
data16
fistpll
movsb
sarl
test
ss
mov
or
add
mov
dec
mov
shr
cmpsb
xor
inc
cmc
es
out
inc
jnp
popf
mov
int3
mov
aam
sbb
iret
adc
dec
lahf
pop
out
pop
push
or
clc
lock
jecxz
or
inc
mov
mov
push
xorl
and
push
lahf
data16
xchg
xchg
sbb
into
das
adc
fists
stc
gs
xor
xchg
xchg
cmp
inc
inc
xor
hlt
xor
fprem
ljmp
fldcw
out
inc
out
jnp
dec
inc
int
fadds
stos
enter
lock
add
cli
xor
mov
pushf
movsl
mov
mov
sbb
sbb
iret
popa
pop
mov
lds
xor
sub
jge
clc
out
sub
push
out
ds
push
out
popf
push
jns
inc
mov
mov
stos
push
jge
sbbb
pop
js
jns
mov
je
push
cmc
xchg
icebp
mov
shlb
push
out
mov
popl
pop
push
cmp
pop
mov
adc
and
ret
add
push
iret
arpl
add
outsb
cmc
jne
sub
mov
mov
call
fisubl
inc
movl
pusha
hlt
adc
fstpl
push
lahf
add
adc
inc
sub
sub
test
cmp
lahf
xchg
push
les
cld
inc
sbbl
loope
sub
xor
pop
mov
insl
pusha
pop
sub
and
imul
test
or
dec
adc
xchg
stos
ret
cmp
scas
cli
repnz
ljmp
leave
popf
pop
xchg
sbb
pop
push
orb
push
test
cld
cmpsl
test
cmp
sbb
lret
sub
sub
lcall
scas
cs
in
dec
mov
and
hlt
and
fldl
shrb
cmp
out
stc
add
aad
daa
xor
loopne
push
mov
in
popa
sbb
repz
outsb
mov
fnstcw
imul
mov
cwtl
inc
out
mov
pop
sbb
fsubs
mov
sub
xor
enter
nop
xchg
and
imul
cmp
out
les
adc
rorl
loop
repnz
lock
inc
enter
not
aam
popf
jbe
cld
setb
sbb
in
sub
pop
insb
sub
filds
pusha
leave
xchg
add
jnp
loopne
call
outsl
out
in
inc
jbe
or
pop
aaa
push
aad
mov
sbb
mov
add
push
outsb
movsl
jle
add
ret
xchg
imulb
sarl
aas
std
inc
jne
lods
jle
out
or
and
rorb
fdivrp
sti
push
pushf
mov
out
jle,pn
aam
xlat
nop
or
and
repnz
out
sub
push
notb
and
ret
js
aaa
sub
movl
sbb
shrl
sbb
sub
cmpsl
mov
push
inc
aam
mov
out
push
pop
jbe
in
inc
mov
repnz
and
mov
fldenv
imul
inc
or
mov
insl
pusha
in
adc
mov
dec
pop
xor
popa
push
sti
push
aaa
pushw
push
cs
roll
jbe
xchg
xorl
js
pop
outsb
xchg
enter
jo
xchg
adc
rol
leave
mov
pop
or
push
xchg
or
sbb
fdivs
or
mov
add
xchg
xchg
mov
rolb
fisubrl
sbbl
xchg
ljmp
push
push
iret
or
aaa
mov
mov
cmpsl
mov
cmpsb
xchg
pop
jae
xor
out
push
jno
cmpb
jmp
mov
mov
enter
fnstsw
dec
pop
aad
rorl
xor
xor
mov
sbb
mov
jb
outsb
aaa
dec
out
outsb
dec
dec
mov
add
testb
outsl
test
jbe
aas
jge
mov
fnstsw
and
inc
bound
xchg
cmp
sub
clc
fdivs
add
mov
mov
xchg
in
xchg
roll
rclb
xchg
mov
jmp
inc
cmp
or
std
pop
lock
div
adc
pop
out
sti
loop
push
es
sbbl
iret
cmpsb
pusha
jp
clc
jg
push
arpl
bound
sbb
jp
rolb
mov
outsl
fstps
xor
inc
js
adc
add
addb
or
xor
testb
imul
and
sub
divps
or
cld
inc
movsl
push
xor
mov
mov
sub
movsb
xchg
cmpsb
fbld
pushf
or
pop
dec
pop
dec
cmc
mov
out
addb
rcrb
mov
movsl
les
cmc
mov
loope
or
mov
icebp
mov
dec
fcompl
xor
sbb
mov
outsl
les
inc
inc
push
pop
dec
add
xor
jp
xor
push
xchg
push
mov
insl
fs
js
sbb
dec
add
and
ljmp
jmp
adc
mov
leave
daa
ret
mov
sub
rorl
int3
cmp
cmp
push
arpl
inc
sti
inc
loope
fimuls
pop
push
enter
xlat
les
int
sub
lods
cli
add
je
lcall
out
addr16
jb
inc
in
cli
test
cmc
jg
dec
fidivl
push
lret
push
mov
pop
icebp
daa
push
ret
push
xor
or
jne
cwtl
xchg
mov
aam
cs
repnz
mov
pusha
mov
dec
push
ficoms
sbb
jmp
subb
xchg
movsb
push
movsb
scas
mov
mov
pop
pushf
repz
mov
call
pop
dec
das
cmpl
mov
xor
scas
mov
lahf
insb
jg
pop
jae
adc
pop
flds
lahf
std
lret
sub
mov
ror
int3
adc
cs
pushf
in
rcl
sbb
frstor
xchg
or
cmpsl
nop
in
stos
push
mov
ds
pop
mov
aaa
mov
cmp
add
jns
addr16
and
in
cmpb
xor
lock
sub
mov
sahf
xchg
je
xchg
dec
push
cmp
cmpsb
push
pop
fcmovbe
xor
xchg
push
mov
pop
jbe
adc
test
fsubrs
sti
insb
or
push
bound
sub
adc
cmpl
or
xchg
dec
testl
and
inc
pop
adc
xorl
jo
pop
sub
loop
mov
mov
test
mov
hlt
dec
jecxz
lods
cmp
xchg
push
mov
mov
std
pop
mov
inc
mov
cmp
arpl
and
jecxz
fmull
push
xor
aam
es
pop
inc
inc
sbb
cmp
rcll
sub
lahf
inc
test
jne
mov
adc
leave
adc
cmp
mov
aaa
popa
cmp
stos
mov
mull
cmpsb
enter
xchg
iret
loopne
cli
sbb
scas
push
jecxz
inc
mov
fcomi
mov
sub
in
cmpsb
bound
dec
inc
pop
and
push
dec
and
es
add
cmp
adc
sahf
pop
lods
int3
cmp
inc
pop
notb
out
pop
das
test
mov
test
mov
lods
iret
cwtl
jl
in
jle
icebp
and
cmp
insb
xor
push
xorb
cmp
and
sub
int3
std
xchg
rorl
xorb
push
aad
nop
shll
sti
dec
scas
shrl
enter
enter
sbb
rorb
mov
sub
push
icebp
jbe
aaa
loop
jns
xor
test
mov
in
adc
cmp
xchg
sub
fs
mov
hlt
jne
mov
mov
fcmovbe
imul
jae
mov
xchg
and
mov
add
pushf
bound
andl
enter
mov
dec
aaa
sbb
inc
push
jg
xor
nop
cld
and
mov
jbe
repnz
add
lea
push
xlat
inc
cmp
inc
push
stc
xlat
nop
pop
rol
xlat
insl
xchg
jno
pavgw
aaa
adc
mov
loope
inc
mov
dec
test
aaa
insb
into
test
test
and
and
shl
mov
sbb
ret
jmp
add
je
ds
push
cmp
jp
dec
push
push
mov
in
push
xor
aas
adc
mov
dec
aaa
xchg
mov
shrb
xchg
cli
stc
or
jnp
and
movsb
addb
sbb
and
jo
mov
notl
sbb
loopne
and
leave
and
and
shll
lcall
pop
push
xchg
jbe
or
fsubl
xchg
aas
scas
test
hlt
push
xor
cld
and
or
divb
mov
adc
subb
push
lock
rcrb
jns
mov
jmp
adc
iret
test
adc
cmp
shrb
aas
lds
pop
xchg
bound
cmp
sub
jo
mov
fbstp
arpl
fcmovu
sbb
in
stos
add
mov
mov
hlt
in
sbb
mov
mov
adc
push
pop
add
lret
daa
mov
mov
sub
xchg
ss
ljmp
pop
ss
adc
cli
xorl
pushf
and
push
push
mov
mov
mov
sarb
pop
movsl
int3
xor
scas
jae
aad
cmp
jp
pop
push
dec
mov
stos
cltd
inc
pop
xchg
xchg
fimull
pop
jne
roll
fs
in
sub
iret
ja
inc
jo
insl
shl
mov
mov
inc
ljmp
lea
inc
fidivrl
mov
fsubs
adc
xchg
and
push
ret
sbb
or
mov
push
lods
in
rcl
clc
fxch
mov
sub
inc
jae
adc
inc
cmp
movsb
into
aaa
mov
cli
jp
and
push
dec
sbb
or
fistl
mov
push
pop
mov
je
lods
mov
jl
mov
ljmp
pop
pop
push
push
lret
daa
ds
ss
xchg
mov
aaa
adc
inc
pop
xchg
mov
xchg
push
push
adc
and
dec
jg
aad
xor
adc
ds
dec
sub
mov
or
push
push
repz
mov
fadds
cmp
mov
imul
add
add
pushf
mov
sub
sbbb
jmp
insb
and
fmul
test
mov
mov
cwtl
push
xorl
push
dec
jno
mov
test
das
inc
mov
adc
shrb
nop
add
push
cmpsb
dec
mov
jl
jmp
and
movsl
push
das
shlb
popa
and
je
ds
push
jnp
inc
jge
mov
decb
mov
nop
cmpb
rclb
mulb
inc
inc
stc
addl
js
fucom
rcl
call
scas
adc
jns
cltd
mov
insb
call
mov
out
mov
dec
cmp
jno
xchg
xor
push
clc
in
and
push
push
in
lea
int3
iret
xchg
push
mov
mov
mov
xchg
push
xchg
cmp
outsl
lds
repz
add
sti
popa
xor
cld
sbb
ljmp
xor
pop
ja
xchg
inc
mov
std
les
mov
clc
leave
jecxz
fcompl
call
fwait
clc
inc
add
cmpsb
into
mov
push
mov
inc
sub
push
or
pop
push
cmc
sub
mov
push
rcr
fs
xlat
adc
xor
pop
inc
push
sbb
jmp
push
in
mov
jno
inc
push
lods
mov
cmp
mov
sub
mov
sub
sarb
in
lcall
sti
push
hlt
lds
cmp
pop
push
xchg
stc
cmp
sbb
cmc
mov
or
les
and
sbb
aaa
xchg
fld
mov
mov
or
jmp
mov
lock
and
call
add
xlat
xchg
xor
push
repnz
push
pop
mov
addr16
xchg
rcrl
into
jl
dec
movnti
inc
out
adc
adc
rolb
and
lods
clc
inc
icebp
js
mov
push
testl
pushf
lods
inc
jge
inc
or
mov
mov
stos
dec
inc
lret
xor
lods
loop
mov
clc
add
stos
arpl
xchg
sbb
mov
lahf
lods
cmp
cli
decb
fwait
dec
sub
push
jmp
pop
push
pusha
fdiv
testl
jns
mov
test
test
lods
dec
inc
out
lret
fwait
ds
int3
mov
in
js
inc
sub
and
pop
lock
daa
mov
les
scas
push
std
dec
sub
mov
jg
popf
mov
and
icebp
jo
in
and
mov
inc
lods
das
or
loop
xchg
mov
mov
rclb
daa
pop
ja
jecxz
aam
les
dec
jmp
popf
mov
pop
xchg
pop
add
push
or
push
pop
push
mov
xchg
mov
cmp
jg
pop
jmp
ret
incb
dec
adc
cmp
mov
xor
movsl
aas
test
xor
ss
lods
pushf
or
in
pop
fwait
or
stos
or
xchg
popf
les
aam
sub
into
adc
loop
push
mov
jno
jg
std
stc
inc
sub
mov
insl
aam
hlt
cmp
sbb
imul
sar
dec
cmp
sbb
call
push
cmp
and
movsl
cltd
add
sub
adc
sub
repnz
adc
xor
cmp
and
adc
lock
gs
inc
pop
lds
into
xchg
imul
mov
add
cmp
push
push
mov
lock
arpl
outsl
xchg
xchg
adc
jp
sbb
pop
sub
fmuls
mov
or
hlt
jo
inc
enter
ficoml
xor
push
push
ljmp
dec
enter
lods
mov
dec
push
sub
scas
mul
hlt
pop
int3
xchg
pop
fwait
jne
pop
pop
sub
imul
push
shlb
jmp
bound
inc
es
dec
andb
and
and
pop
dec
sub
stos
dec
pop
xchg
mov
mov
push
pslld
incb
jg,pn
ja
shll
in
clc
fisttps
aam
enter
mov
js
jae
jnp
xchg
fsubs
pop
sbb
inc
les
lahf
push
dec
add
cmp
sbb
mov
dec
outsb
sbb
push
ja
iret
pop
pop
add
dec
mov
cltd
adc
lea
jne
sub
push
add
repz
adc
fimuls
stc
sarl
jmp
mov
xchg
mov
push
push
inc
in
sub
and
pop
shlb
shll
call
fimull
fmul
sub
outsl
and
loopne
fnstenv
adc
ss
sbbb
mov
test
stos
pop
clc
adc
push
repz
mov
xchg
pusha
push
loopne
or
mov
jbe
movsl
push
rcll
inc
push
cmp
lds
aaa
cmp
xchg
xor
push
xchg
lds
or
add
cmp
bound
lcall
bnd
fmull
rolb
xor
xor
mov
ror
mov
adc
insb
or
xchg
insb
xor
push
dec
leave
aas
or
cmpb
mov
pop
or
ja
mov
jmp
add
sbb
shrb
hlt
mov
movsl
orl
fcomps
imull
mov
jl
and
inc
inc
jecxz
mov
cmp
mov
mov
dec
mov
push
shll
ret
outsb
leave
adc
and
mov
adc
cmpsl
jnp
int
cmp
lret
orb
mov
stc
and
sahf
sbb
xchg
mov
ds
es
rep
call
outsl
scas
cli
mov
mov
imul
push
adc
dec
subl
outsl
test
sahf
sub
and
or
or
cmpsl
stos
jb
push
je
push
add
loopne
ret
std
pop
lret
scas
push
dec
je
bound
inc
stos
loop
fs
sub
je
lods
test
dec
in
sub
or
and
jno
pop
xor
nop
mov
in
and
inc
cltd
sub
and
fsubs
pushf
or
test
dec
push
jae
pop
in
stos
push
lret
sub
xor
pusha
jmp
mov
test
jae
aam
pop
icebp
sti
add
push
mov
outsb
cld
push
cmpxchg
dec
xchg
push
inc
mov
mov
jne
aad
loop
pop
xchg
or
fisttpl
loop
push
inc
xchg
jle
movsl
inc
mov
fiadds
stos
ret
add
lods
cli
insb
xor
int
test
rcrl
jne
jp
push
testl
inc
add
stc
mov
sub
enter
pop
or
lret
push
and
inc
push
dec
sahf
xor
pop
push
addr16
jecxz
rorl
add
mov
out
push
test
mov
mov
je
in
aam
cmp
lods
cltd
xor
and
or
mov
stc
jns
cs
dec
loopne
js
js
lds
les
xchg
or
add
outsl
and
popf
inc
imul
sub
or
push
xchg
into
sbb
pop
icebp
movsl
add
push
cmp
mov
add
sub
gs
mov
jne
sub
inc
lret
push
mov
sbb
xor
imul
xchg
mov
xor
sahf
fucom
stc
gs
hlt
scas
test
psrad
push
shlb
clc
xchg
or
dec
ljmp
sbb
push
aaa
add
movsb
or
fcoml
xor
data16
adc
jmp
adc
loopne
pushf
inc
sub
shlb
das
jmp
push
aas
test
daa
pop
sub
fwait
insl
mov
fsubrl
in
inc
cltd
cwtl
mov
mov
data16
rcrl
sub
imul
and
dec
sub
testl
cmp
lods
sub
or
add
adc
out
icebp
push
cmp
imul
test
mov
dec
rorl
cmp
add
jno
pop
add
xchg
sahf
jnp
cmp
mov
and
push
lret
mov
cmc
jg
fstps
inc
lahf
mov
xor
adc
push
fisubrl
dec
add
cltd
pop
add
xlat
mov
ja
sbb
mov
daa
shl
aaa
shr
push
orl
sbb
divb
ds
stos
adc
sbb
aad
xor
aad
inc
adc
and
push
and
stos
imul
xchg
enter
test
aaa
inc
add
pop
mov
lret
insl
and
add
jmp
test
xchg
xor
mov
adc
cld
push
sahf
pop
lods
shrb
repz
adc
jnp
inc
xor
mov
mov
mov
xchg
gs
ret
loopne
arpl
ret
push
xchg
jae
ljmp
dec
xor
push
stos
push
call
push
int3
mov
and
daa
jmp
mov
test
outsl
mov
xor
andb
xchg
jns
xchg
cmpsb
leave
jp
lret
inc
movsb
int
addr16
sbb
ljmp
addr16
add
sbb
inc
leave
pop
sti
icebp
mov
and
pop
ret
aaa
push
mov
inc
out
inc
jmp
cmp
xchg
mov
mov
and
push
je
out
jb
xlat
adc
jmp
cmp
loope
xchg
jg
fistpl
pop
mov
arpl
andb
or
shll
fwait
int3
test
xchg
xchg
push
lret
and
mov
cmp
arpl
test
leavew
fisubl
into
dec
hlt
lret
xchg
cmpsl
addr16
cmpsb
lret
or
mov
jbe
ret
mov
fdivr
sbb
mov
fisubl
jg
xchg
inc
repnz
stc
js
pop
jl
sahf
jle
lods
out
cmp
cmpsl
jno
out
scas
lods
std
aaa
xor
cmp
out
jp
xchg
jno
aas
rcr
es
sbb
outsb
push
sub
push
jbe
add
adc
cwtl
mov
test
cmpsl
or
push
orl
push
cs
sub
mov
push
ja
inc
sub
mov
lea
aaa
popf
sub
adc
mov
arpl
rolb
mov
cmp
andb
pop
inc
movsb
xor
and
cltd
add
arpl
xchg
les
adc
cs
in
pop
mov
aas
mov
jg
lods
imul
mov
xchg
pusha
push
daa
repz
push
cwtl
lock
inc
lock
arpl
imul
scas
sbb
movsl
adc
lds
pop
mov
cld
xor
jbe
mov
inc
mov
push
jl
mov
je
fisubl
push
test
movaps
cltd
mov
stos
out
xchg
sbbb
pop
adc
dec
imul
addl
outsl
mov
movsl
dec
push
jnp
std
icebp
mov
jge
fldenv
test
mov
lret
sti
xor
scas
in
push
stc
rcrb
push
mov
adc
fcmovne
inc
test
add
fcompl
testl
pop
sub
mov
pop
jp
pusha
xor
adc
leave
xchg
pop
js
jne
pop
jo
mov
inc
xorb
xor
push
insb
mov
mov
fld1
pop
out
lds
gs
movsb
jbe
fwait
xor
imul
mov
or
shlb
scas
mov
xor
fwait
scas
clc
cs
in
mov
das
mov
adc
ret
xchg
mov
push
xchg
sub
nop
movsl
mov
jge
stos
pop
mov
jo
push
jo
xor
sbb
pop
mov
std
xchg
inc
hlt
inc
adc
sahf
sub
movsb
dec
xor
sar
lods
jle
or
roll
xchg
imul
das
jge
int3
fwait
push
push
sub
lret
arpl
iret
arpl
mov
xor
push
mov
popf
fwait
push
call
jmp
pop
or
shlb
dec
and
pop
shll
fdivp
xor
jecxz
out
or
jge
xchg
loope
pop
push
push
in
int3
aam
mov
mov
call
sbb
jg
cld
in
jge
jns
loopne
movsb
xor
mov
and
sbb
jnp
push
imul
fisubrs
std
and
xor
xor
mov
mov
mov
dec
cmp
lcall
into
fwait
imul
cmpsb
dec
fdivs
out
mov
adc
xor
into
mov
pop
adc
stc
ds
movsl
fcoml
mov
andb
dec
std
in
push
orl
idivl
mov
test
shrl
mov
cmp
xor
xchg
adc
inc
pop
add
cmp
xorl
std
push
mov
in
cmpsl
xor
dec
and
sbb
je
pop
repnz
ds
shl
jo
and
sbb
pop
in
xchg
ljmp
cld
pop
cld
inc
testl
rol
lret
es
jno
cld
and
sbb
dec
jns
rorl
push
mov
fwait
iret
mov
inc
mov
cltd
sub
adcb
jnp
adc
adc
fists
aaa
out
inc
pop
fs
das
cmpsw
gs
lods
sti
fistps
jne
mov
mull
loop
push
push
jo
aaa
mov
insb
jmp
aaa
push
and
ret
push
pop
pushf
jae
xchg
repz
addr16
jmp
mov
mov
mul
jb
shlb
ficoml
lret
js
xchg
add
int3
add
mov
into
pushf
stos
movsl
pop
inc
sahf
hlt
test
xlat
add
cmp
arpl
call
out
loopne
repnz
fisubrs
xor
pop
movsl
test
into
xor
std
cmp
pop
shlb
or
xor
test
and
jle
adc
fnsave
and
push
mov
lret
fcompl
aas
push
jp
or
adc
out
jmp
nop
pop
xchg
data16
icebp
fdivrl
xchg
jnp
add
sti
add
subl
fcmove
and
jp
mov
xchg
mov
jl
stc
push
popf
loop
jno
sub
dec
je
adc
sbb
cwtl
fsts
in
xor
mov
mov
lods
cmp
mov
lods
or
xor
adc
hlt
mov
pop
and
mov
mov
jae
adc
jne
push
adc
in
dec
and
and
cvtps2pi
je
mov
cmp
mov
push
mov
lret
xchg
jno
push
xchg
xchg
lcall
loope
cmp
mov
sahf
lock
mov
ljmp
mov
xchg
push
movsl
jle
xrelease
outsl
sub
test
or
jnp
sbb
jge
sub
push
rcr
pop
insl
mov
and
aad
xchg
mov
dec
jmp
sub
push
cmp
add
les
ficompl
jl
xor
cmc
pushf
add
mov
mov
mov
adc
fwait
shlb
cmp
sahf
adc
or
and
or
adc
decl
lock
lods
and
or
xchg
sbb
hlt
out
dec
sahf
ljmp
mov
cmpsl
jecxz
mov
aaa
cmp
xchg
repnz
sub
sbb
lods
es
dec
cmp
and
dec
testb
xchg
xchg
mov
mov
imul
xorl
cmp
je
cmp
cli
xor
rcl
pop
xor
popa
repz
mov
movsb
jo
xchg
mov
cmp
xchg
mov
call
cli
shr
push
sbb
sarb
xlat
in
mov
ja
insb
push
andl
es
cltd
mov
test
fldl
ret
in
popf
fcomps
test
mov
dec
les
and
add
xchg
fnstsw
push
cmpsb
push
xchg
or
cmp
stos
xorb
and
jno
or
push
test
pushf
mov
push
jnp
pop
mov
lock
in
in
dec
inc
je
sbb
dec
xchg
xchg
fcmovbe
xchg
mov
ficoms
inc
lret
test
mov
mov
in
mov
test
and
and
lahf
adc
push
add
data16
sbb
js
xor
add
js
and
and
sahf
mov
jecxz
outsl
icebp
dec
out
ret
mov
cwtl
sti
div
and
mov
add
add
scas
sarl
test
subb
cld
mov
pop
ss
scas
pop
add
sbbb
js
fucomi
bound
fisubrl
bound
mov
lea
je
scas
cwtl
jbe
push
xlat
shl
repz
and
xchg
or
cmpsl
xor
imul
push
movsb
sub
pop
mov
dec
push
mov
cltd
or
xor
out
inc
push
cmp
push
fistpl
cs
sub
je
mov
mov
leave
mov
addr16
fldt
sbb
imul
jnp
jg
cmp
xor
les
cld
imul
daa
and
jno
out
sub
mov
ret
sbb
repz
adc
enter
jnp
test
push
adc
scas
xor
fcomp
movsl
lcall
sbb
inc
gs
cmp
and
mov
mov
mov
cmpsl
cmp
popf
lcall
rorl
lahf
pop
and
ss
xchg
test
jge
push
adc
jno
sub
cmp
mov
add
daa
mov
sbbl
ljmp
sub
mov
inc
icebp
cmpsb
stc
enter
gs
stc
xchg
xorl
add
shll
mov
xor
cmpsl
loop
mov
aam
mov
rcll
js
mov
scas
fidivrs
sbb
jns
jl
shll
ss
sbb
xchg
pop
inc
xlat
push
push
dec
insl
mov
mov
dec
in
pop
movsl
in
bound
adc
lahf
mov
notb
shll
mov
mov
subb
or
jbe
mov
jne
lock
add
add
add
ret
cmp
rorb
andl
push
adc
pop
jmp
inc
cmpsb
and
mov
jp
cmp
mov
dec
insb
xchg
xchg
mov
and
mov
lds
xchg
lods
xchg
shrl
and
sbb
call
push
or
xor
fldl
leave
aas
jmp
pop
aaa
cld
inc
pusha
sub
repz
je
aad
imul
sub
mov
mov
pop
inc
out
mov
mov
mov
cs
cmp
dec
jle
pop
mov
movntq
adc
pop
push
xorb
xor
lods
mov
cltd
popa
repnz
xchg
mov
dec
testl
jno
add
out
in
test
decl
dec
cwtl
lods
mov
sbb
mov
cmc
cmp
cwtl
mov
mov
dec
ret
shl
inc
push
fisttps
repnz
cmp
cmp
or
xor
cmp
fcmovb
fisubrl
cmpsb
lds
pop
mov
imul
jo
sub
pop
lahf
cmp
sub
mov
pop
sbb
andl
sti
in
pop
pop
pop
test
jno
xchg
rorb
stos
xor
jg
jmp
and
stos
and
cmp
add
fidivl
shll
add
mov
fsubrs
xchg
movsb
cmp
jmp
iret
push
dec
push
xor
cmp
push
mov
push
rcl
or
or
ljmp
cmpsl
cwtl
sahf
mov
loope
dec
enter
pop
inc
dec
cltd
andl
add
test
cmp
adcl
dec
xchg
inc
inc
test
pop
roll
jnp
cmp
leave
pop
and
push
xor
push
cli
movsl
cmp
add
scas
inc
pop
aam
daa
das
lea
popf
push
inc
pop
enter
dec
stc
repz
jbe
sbb
call
imul
cmp
popa
add
mov
div
popa
adc
inc
xchg
cltd
insb
sarb
rcr
es
adc
push
fsts
cmpl
and
inc
push
or
sub
nop
mov
inc
sub
xlat
xchg
std
imul
daa
cmp
add
das
jb
cmp
rcrl
aam
mov
popf
push
sbbl
jle
dec
out
lret
sub
sbbl
xor
or
dec
lret
jne
push
outsl
inc
popa
loop
rorl
mov
push
cwtl
dec
mov
in
mov
ja
xchg
mov
xor
cli
out
sbb
test
inc
inc
push
inc
mov
call
mov
fdivs
xchg
nop
jmp
fcoms
push
divb
mov
and
sub
or
xchg
dec
push
dec
ret
movsb
dec
cmp
mov
fsubrl
xchg
and
dec
adc
imul
mov
les
std
dec
fstl
shr
adc
pop
rorl
xchg
mov
push
aad
cltd
cld
mov
incb
sub
test
std
cmp
lahf
add
inc
add
clc
pop
adc
fidivs
mov
fcoml
fs
xor
jb
inc
mov
in
aam
fwait
mov
and
ja
test
hlt
aam
jne
enter
mov
scas
inc
pop
fbld
in
out
cmpsl
or
pop
pop
es
cmpsl
sti
add
nop
inc
xchg
pop
fwait
insb
or
aaa
mov
imul
insl
xor
rcr
pushf
mov
inc
and
insb
adc
jo
cmp
outsl
xor
fmull
or
aaa
mov
inc
inc
push
adc
pop
fsubr
setb
pop
shll
jae
je
add
ret
inc
lods
mov
jl
adc
out
out
jg
outsb
or
push
pop
pop
mov
push
jg
out
scas
xchg
mov
sarb
push
inc
add
scas
inc
cmp
jmp
sbbl
lock
xor
cmp
out
push
pop
push
mov
inc
inc
mov
cs
bound
inc
xor
xchg
pop
pushf
xor
dec
fildl
adc
push
jb
jnp
push
aad
stos
push
sub
outsb
dec
sbb
in
ficoml
sub
adc
aam
popf
sbb
mov
inc
negb
cmp
popa
ret
xchg
lahf
lods
mov
adc
xchg
js
in
mov
cmp
mov
adc
mov
add
notl
adc
js
movsb
aaa
or
xchg
movsl
enter
clc
lods
push
pop
ret
imul
out
and
sahf
inc
call
cli
fdivp
pop
pusha
xor
daa
js
jns
inc
sbb
mov
sbb
pushf
inc
call
fs
aam
push
dec
das
es
imul
push
or
mov
mov
ret
and
push
sbb
push
shll
repz
fs
insl
and
fsubl
and
xor
push
arpl
mov
xor
xor
add
cmpsb
inc
adc
adc
js
xchg
ds
cs
int3
xor
cmp
inc
aad
xor
jg
cltd
mov
dec
jle
dec
cld
xchg
pushf
je
pop
inc
aas
outsl
outsb
in
jge
fisubrs
inc
icebp
mov
mov
ss
fldl
scas
xor
or
cmp
or
adc
loop
das
xlat
test
das
sub
mov
mov
mov
repnz
xlat
cmc
popf
push
adc
test
dec
sbb
imul
mov
das
jmp
jge
in
mov
scas
aaa
jl
mov
mov
sti
mov
cmc
mov
adc
leave
enter
loope
rcrb
sti
into
icebp
pushf
insb
imul
push
fldt
subps
adc
cltd
fistps
jns
xchg
and
xchg
cmp
ds
xor
push
sti
mov
mov
and
ss
adc
je
add
pop
fs
lds
test
mov
push
pop
add
or
add
es
inc
repnz
or
xchg
mov
push
into
inc
rol
sbbb
out
sub
jne
pop
out
les
push
aam
and
inc
int
mov
pop
out
fidivrl
xchg
lock
pop
and
xor
and
jbe
push
icebp
and
add
push
ja
push
mov
hlt
std
js
leave
sbb
loopne
movsb
dec
int
sarl
sbbl
aas
sti
mov
cmp
push
ja
xchg
mov
and
call
ja
inc
mov
sti
inc
daa
add
jl
call
xor
fcmovbe
xchg
jno
ret
testb
nop
cmp
sub
jo
mov
xchg
lds
jg
inc
lods
xchg
mov
or
nop
fs
call
lret
fcomps
mov
subb
push
stos
pushf
pusha
out
sbb
and
jae
mov
dec
std
jnp
mov
mov
push
leave
scas
pop
pop
ss
xor
stc
cmp
lcall
lods
sbb
rorb
in
sub
adc
hlt
jns
rcrb
ret
and
adcl
jge
test
mov
in
mov
xor
push
pop
jnp
test
pop
lock
test
data16
sbb
xorb
imul
call
mov
xchg
inc
cld
push
mov
stc
mov
sbb
sub
mov
fisubs
xor
xchg
mov
xchg
test
mov
cmp
xorl
stos
and
fdivrs
imul
push
rolb
dec
inc
cmpsb
aam
and
loopne
aaa
scas
adc
cmc
pop
daa
mov
jg
rorl
int
cmp
fldenv
in
adc
test
sub
xor
push
sarb
pop
hlt
daa
mov
and
lahf
mov
sbb
jnp
lahf
in
mov
je
mov
jmp
fstl
mov
repz
add
mov
sbb
push
pop
pop
mov
inc
xchg
insb
pop
adc
subl
xchg
jo
rcrl
aaa
jb
popf
lods
rorb
clc
xchg
inc
xchg
and
xchg
clc
cmp
or
fdivr
lahf
int
xchg
or
mov
adc
pop
outsl
cmp
cmp
mov
xlat
cmp
dec
in
ret
mov
mov
xchg
or
imul
stc
fstl
repnz
cmpsb
mov
test
fdivl
xor
rcll
cmp
mov
das
dec
outsl
mov
scas
adcl
bound
lock
pop
cmpl
outsl
rcl
cmovg
jp
pop
js
dec
push
in
idivl
scas
pop
stos
out
sub
fwait
das
mov
outsb
pop
sub
fs
pushf
cmp
outsl
pusha
mov
sbb
inc
xchg
insl
jo
shr
stos
inc
and
jne
xor
negw
dec
cmp
cwtl
fwait
adc
jp
jns
clc
mov
mov
mov
lods
xchg
shl
test
jno
xchg
mov
pop
loopne
aaa
cwtl
push
xor
xchg
das
and
inc
adc
mov
xchg
stc
repnz
push
sahf
stos
and
fidivl
adc
adc
in
cld
sub
xchg
lcall
popa
imul
and
fnstenv
push
cmp
rorb
bound
out
lods
xchg
inc
cmp
cmpsl
jle
enter
les
pop
xchg
js
fcoml
fmul
call
out
data16
add
scas
sub
mov
inc
inc
jne
test
cmp
scas
jp
scas
pop
mov
in
dec
pop
ret
xchg
fildll
aas
ret
in
mov
ret
push
lret
into
dec
or
inc
jae
bound
jle
outsb
aam
mov
sub
dec
mov
xchg
cli
je
add
xlat
faddl
and
jb
lock
inc
sub
imul
or
pop
lods
jae
mov
and
fstpl
rclb
das
and
mov
ffreep
cltd
push
lret
and
lea
mov
int3
sub
mov
mov
idiv
jp
int
outsl
adc
adc
pop
pop
xchg
mov
add
imul
pop
js
movsb
inc
push
out
fsubr
ret
inc
movsb
sahf
inc
hlt
stos
fldt
fwait
xchg
pop
xchg
pop
adc
aas
xchg
out
in
sti
jbe
cmp
ret
jno
cli
lods
jmp
xchg
ljmp
push
mov
xor
iret
jge
push
pop
sbb
adc
scas
nop
sub
push
sbb
cmp
imul
xchg
mov
insl
jae
xchg
je
inc
xchg
gs
fwait
std
push
add
sub
push
mov
pop
aaa
int
sub
xchg
les
insb
pusha
push
xor
dec
push
clc
pushf
jbe
and
pop
add
and
fwait
lahf
inc
and
push
fmul
mov
jecxz
dec
mov
ret
rcll
mov
sbb
fcomps
pushf
mov
enter
cmp
mov
sbb
es
adc
push
lret
jns
ficompl
popf
add
aas
adc
or
les
jno
jecxz
insl
shr
push
enter
dec
xlat
jg
cmp
fdivrl
cmp
xchg
add
xor
scas
fidivl
call
push
ret
dec
dec
fisubrs
imul
jle
mov
add
dec
les
call
gs
mov
sti
ret
clc
rcrl
add
sbb
and
or
mov
shll
push
jae
cmp
sarb
inc
mov
or
out
sbb
mov
adc
and
test
and
nop
mov
cld
stc
cli
sub
jle
lock
jnp
sub
adc
push
push
and
xchg
mov
sub
or
loopne
mov
stos
fwait
fstpl
in
or
ljmp
subb
mov
xchg
movsl
mov
enter
loopne
scas
and
sahf
pop
fistpll
dec
daa
sahf
vmovsd
inc
ds
jne
xlat
in
pop
cli
dec
bound
pusha
outsb
xchg
xchg
popa
dec
pop
mov
daa
call
data16
push
sbb
mov
das
jnp
arpl
pop
je
shll
fst
fnstcw
xor
sti
inc
scas
test
push
xchg
jns
mov
aas
aaa
subb
mov
jae
cmp
scas
mov
inc
pop
shlb
xor
push
xchg
addl
push
aaa
testl
jne
mov
ljmp
mov
adc
out
bound
push
out
sub
push
fnstsw
sbb
or
hlt
pusha
repnz
imul
lret
xchg
fprem
fwait
gs
fwait
mov
xchg
mulb
pop
mov
jecxz
cmp
xchg
cmp
cmp
sbb
scas
inc
pop
pushf
add
in
xchg
int
cltd
xchg
cmpsl
pop
push
out
and
aaa
pop
mov
rol
sub
adc
cld
add
mov
stc
push
not
sub
mov
pop
lcall
movsl
lret
into
pop
add
popa
shll
pop
or
pop
cmc
test
iret
mov
add
adc
shll
paddq
aam
xchg
jle
pop
mov
aas
pop
outsl
mov
pop
inc
fstl
cmpsl
mov
pop
push
les
mov
push
imul
fldenv
sub
pop
adc
jo
mov
lret
dec
out
dec
push
mov
rcr
xor
cltd
inc
mov
jmp
and
cli
cmp
and
and
fsubs
mov
adc
pushf
stos
lret
mov
mov
sbb
outsl
cltd
clc
test
cli
and
cmp
mov
stc
mov
inc
pop
xchg
xchg
xchg
pop
pushl
insb
xchg
sub
cld
mov
pop
dec
popf
imul
sbb
xchg
lahf
cmpsb
jle
shrl
or
inc
shlb
mov
push
les
test
xor
xor
dec
loop
inc
dec
out
sub
mov
push
xor
xchg
xchg
aam
sub
dec
xor
pop
or
bound
sar
imul
xchg
into
cmpl
adc
shrl
fdivrl
aad
scas
pop
dec
cmp
inc
test
cmpsb
std
clc
out
jmp
or
dec
fwait
aam
mov
in
pop
push
jmp
std
gs
call
fistps
xchg
outsb
adc
sbb
cmc
mov
pop
int3
push
pop
sub
shlb
mov
jae
fimuls
pop
sbb
push
clc
adc
mov
mov
mov
push
int3
sub
mov
and
push
inc
and
testb
cs
in
test
dec
cwtl
jns
dec
iret
adc
sbb
insl
cmpsb
pusha
lahf
cmp
xchg
xor
xor
dec
mov
movsb
imul
insl
and
cmp
mov
int
mov
inc
pop
push
mov
mov
not
jecxz
adcb
sub
nop
lahf
scas
scas
loop
push
bound
cltd
jnp
jmp
ret
adc
aas
daa
inc
iret
xchg
cmp
xchg
sbb
and
out
lock
pop
sub
mov
insl
call
inc
test
pop
shll
ret
and
data16
jmp
js
mov
int3
dec
pop
pop
dec
pop
jmp
lds
out
stos
cmpsb
pop
pop
leave
mov
pop
dec
dec
jb
add
xchg
insb
pop
add
or
push
mov
test
cmp
scas
mov
rol
adc
pop
jne
xor
xor
or
fs
lods
pop
sbb
aad
jecxz
cmp
decl
pushf
jg
idivl
pushf
mov
repz
rorb
mov
fwait
add
shrd
iret
add
icebp
pusha
cmp
mov
sbb
sar
xchg
aas
pop
rcrb
dec
pop
push
mov
adc
lahf
out
push
das
inc
xor
jl
jp
in
cmp
test
and
push
mov
bound
or
dec
mov
mov
repnz
cmp
lcall
cmp
cmpsb
mov
pop
imull
pop
mov
in
add
pop
and
xchg
add
mov
dec
loope
pop
sbb
cwtl
mov
sbb
rorb
inc
mov
ds
add
cmc
out
jae
pop
shr
mov
and
push
cmpsb
adc
cmp
add
lods
out
and
push
sub
jae
rclb
pop
jnp
mov
js
enter
push
xchg
lds
popa
outsl
lds
mov
push
mov
add
aaa
iret
push
mov
inc
jmp
adcb
xchg
add
idivl
outsl
sub
mov
xor
aam
je
aad
js
cmp
or
rol
in
cmp
scas
dec
sbb
lahf
lock
aad
shll
xlat
sahf
sub
and
ret
ret
push
test
inc
mov
jns
or
ficomps
sub
or
mov
xchg
mov
loope
std
lds
pop
popa
cmp
stos
popa
adc
xlat
dec
cmc
pusha
pop
sbb
or
pop
rcl
add
xlat
lea
fsubrs
cmp
pop
pusha
cmp
jnp
cmpsb
sbb
or
inc
mov
mov
and
pop
pop
test
lret
ret
jne
leave
dec
sbb
jbe
imul
pop
jg
sub
or
xor
jno
xor
nop
mov
jle
pop
and
dec
sbb
popa
add
bound
in
sar
mov
push
pop
mov
je
imul
mov
cmpb
mov
out
rcrb
fidivs
push
xor
dec
int
inc
xchg
mov
aad
stos
or
cltd
icebp
jg
mov
mov
cmp
adc
push
in
decb
push
and
jns
mov
xchg
jmp
sub
cmp
movsb
into
xor
pop
sub
scas
ror
inc
repnz
push
pop
sbb
les
and
popf
or
jge
out
adc
pop
or
mov
lahf
int
inc
cwtl
les
lods
or
lret
push
dec
push
jle
adc
pop
jb
ljmp
cmp
psrad
fidivs
pop
and
dec
mov
sbb
in
mov
hlt
out
sti
push
icebp
push
sbb
pop
mov
add
in
xchg
mov
ja
psubw
jbe
cmp
or
add
pop
and
ss
xor
adc
les
ret
sarb
push
ret
loopne
jg
xchg
inc
sahf
mov
xor
cmpsb
sbb
sub
imul
pop
adc
out
mov
cli
es
pop
xchg
xchg
push
or
xor
cli
add
jge
mov
jecxz
lahf
fstps
lea
mov
push
es
mov
mov
outsb
adc
push
shll
and
in
ror
pop
ret
add
cmpsl
lret
mov
mov
divl
pop
cltd
dec
cli
loope
inc
jb
in
bound
jge
leave
movsb
pop
mov
pop
lds
sub
sbb
pop
push
pop
and
insb
mov
xor
js
or
xor
sub
stc
inc
test
stos
cmp
mov
inc
dec
and
push
outsl
mov
aaa
mov
cs
in
xchg
outsb
int3
jmp
jl
das
adc
or
add
outsl
jmp
stos
cmpb
cld
mov
nop
mov
popa
push
data16
ljmp
int3
cli
pop
lret
and
push
or
rcrl
int3
icebp
push
out
lds
sub
mov
adc
jmp
movsl
hlt
push
aam
lret
xchg
and
sbbb
jbe
push
pop
lret
add
push
jecxz
or
mov
mov
dec
sub
xchg
popf
push
test
push
pop
ds
fnsave
mov
scas
dec
or
xor
mov
mov
shlb
push
movsl
push
ficoms
xchg
outsb
mov
sarl
push
inc
test
push
int3
and
dec
das
xchg
orl
shlb
xchg
add
scas
test
out
shll
cmp
or
mov
push
ds
push
sahf
rcl
jecxz
jg
fmulp
cmc
add
mov
enter
into
xchg
jbe
add
stc
push
popa
jns
inc
test
in
lret
cmp
out
push
jbe
ljmp
ss
add
dec
jp
imul
xchg
stos
cwtl
arpl
test
sub
flds
mov
jae
mov
and
sbb
shrb
cmc
sbb
ja
dec
dec
jne
arpl
iret
add
sub
xchg
jno
jae
pop
shrl
add
and
xchg
jge
add
sahf
loopne
cmp
mov
mov
xchg
stos
ljmp
mov
subb
push
fstl
and
test
test
mov
or
dec
lea
dec
and
push
mov
mov
xchg
add
mov
outsb
pop
add
les
mov
ja
mov
je
int3
bound
dec
or
xor
mov
xor
arpl
xchg
adc
shll
mov
mov
addl
ret
fbstp
addr16
mov
jno
in
dec
in
mov
sbb
dec
xchg
in
mov
xor
pushf
push
xor
mov
cltd
not
xchg
adc
add
sub
cltd
add
jecxz
data16
sub
push
xor
dec
clc
mov
xchg
aaa
cmp
jnp
xchg
mov
jmp
mov
psrld
test
pop
les
outsl
cmpsl
xor
fs
rdpmc
sub
lret
sub
cmp
cli
mov
pop
xchg
into
mov
sub
jg
xor
pusha
in
xor
mov
fimuls
out
fidivl
lcall
mov
popf
rolb
repnz
or
push
adc
scas
movsb
inc
push
aas
arpl
js
push
aad
test
js
out
or
pop
and
mov
inc
mov
adcb
mov
mov
fdivr
fdiv
sbb
gs
test
sub
adc
push
dec
orb
rcl
inc
cmp
cld
or
lret
mov
mov
fcoms
xchg
pop
icebp
adc
jl
dec
int
fmuls
pop
adc
fstps
mov
add
pop
sahf
and
cwtl
adc
lds
stc
addr16
imul
dec
mov
lahf
sbb
mov
out
ss
dec
fs
and
cmp
inc
xor
dec
lret
jecxz
mov
jp
daa
adc
cmpsl
lcall
sbb
inc
jae
repnz
adc
jmp
das
mov
mov
iret
sbb
out
jl
std
outsl
push
imull
lods
lods
pop
and
dec
fxch
jne
pop
je
sbb
and
fld
aas
mov
xor
loop
jg
sti
cmp
cmp
inc
sbb
test
notl
jns
sbb
xchg
and
xor
stc
aaa
imulb
pop
aam
xlat
insl
test
sahf
das
jmp
mov
shr
push
jle
jp
mov
cmp
mov
and
rclb
push
sub
mov
xchg
daa
jl
mov
add
add
adc
and
mov
xchg
pop
rol
cmp
fs
cltd
stos
enter
mov
dec
stos
add
and
xlat
xlat
fmull
mov
and
add
cmp
out
mov
inc
popa
fisubrl
nop
addr16
adc
in
push
jmp
lock
mov
data16
test
outsb
sti
push
jmp
dec
sbbl
lcall
lahf
dec
cmc
cmp
mov
jne
fdivr
xchg
and
in
sti
sbb
sbb
mov
mov
push
andb
fmuls
xchg
or
mov
mov
cmc
xchg
and
xchg
or
mov
inc
loop
or
xlat
add
pop
js
jbe
fcoml
repz
jg
inc
icebp
cmpsl
push
mov
mov
or
jmp
xor
int
loope
cmp
mov
xor
loope
and
jge
jge
mov
push
pop
cmpsb
mov
test
mov
ds
stc
cmpsl
push
shll
push
decl
rol
stos
sahf
mov
in
jmp
dec
int3
mov
sahf
dec
sub
adc
in
pop
ljmp
adc
mov
cmpsb
cltd
pushf
push
xor
or
inc
fldt
adc
mov
es
js
xchg
push
data16
sbb
ja
outsl
cmp
arpl
sub
or
ficoml
xchg
sbb
rclb
sti
pop
imul
adc
xlat
roll
rcr
dec
or
iret
pop
cmpsl
sti
xchg
dec
mov
mov
pop
das
repnz
sbb
push
leave
push
cmpsb
dec
out
jns
lods
jp
jae
and
push
daa
inc
or
push
or
jg
pop
mov
hlt
repz
loopne
lret
popf
jmp
jp
xchg
cmp
xchg
push
mov
push
sahf
mov
pushf
mov
xor
aam
and
push
cmp
sahf
mov
clc
lcall
lds
in
push
pop
inc
push
pop
xchg
cli
mov
inc
outsb
push
xor
or
rorl
into
in
adc
or
jmp
lcall
adc
in
in
mov
aad
cs
dec
or
out
dec
imul
movsl
lods
inc
mov
sbb
jae
cmp
cmc
mov
repnz
adc
pop
in
stos
pushf
in
mov
sub
lds
push
jg
xor
test
mov
sbbb
xor
pop
push
jp
aad
into
xchg
mov
fldl
lods
mov
fwait
push
inc
movsl
rolb
iret
push
jp
mov
and
aaa
nopl
pop
cmp
test
dec
js
cmp
jmp
call
xchg
pop
cld
insb
bound
push
fcomps
leave
sbb
push
nop
inc
aaa
rorb
xor
icebp
lcall
jbe
or
inc
into
leave
jecxz
mov
jbe
mov
mov
jno
stos
out
imul
enter
push
data16
mov
mov
mov
dec
mov
test
add
mov
stos
mov
scas
adc
jbe
movsl
push
sub
sbb
incl
xchg
adc
xchg
push
mov
add
and
jecxz
movsb
shll
out
pop
pop
dec
sub
dec
in
mov
orb
test
ljmp
jnp
xor
movsb
js
aas
ror
or
insb
rorl
jns
dec
fcmovbe
push
add
xchg
sub
sbb
push
mov
jae
in
data16
jmp
into
sahf
std
hlt
push
jmp
pushf
addr16
adc
stos
mov
les
push
lock
pop
xor
repz
sub
popa
das
aaa
mov
loop
and
ror
arpl
sub
jg
fdivs
scas
stc
cli
xorb
shl
ja
adc
and
mov
inc
lock
and
xor
loop
mov
cmc
pop
jb
ljmp
insl
sbb
mov
xchg
and
mov
mov
inc
daa
adc
xchg
add
jg
outsb
sub
aad
ficoml
das
mov
xor
stc
inc
push
xchg
repnz
fwait
inc
and
test
push
mov
aad
mov
jge
xor
mov
pop
aad
jmp
fwait
mov
and
lea
push
or
add
nop
fnstenv
push
jns
dec
adc
cli
jg
fcmovu
mov
add
pop
out
mov
cmpsb
xchg
pop
mov
or
xlat
daa
jne
rcrl
cld
mov
cld
stos
nop
push
push
xor
loope
int
movl
fimuls
das
and
mov
or
fidivs
sti
out
lods
out
loope
cwtl
xor
pop
rcrb
fstpt
in
jmp
inc
and
sbb
adc
or
js
xchg
das
push
inc
stos
mov
jnp
mov
and
stc
mov
test
iret
inc
out
lds
das
jecxz
pop
in
aam
pop
mov
lahf
imul
ljmp
jne
cmc
cli
aas
sbb
push
mov
stos
add
mov
rclb
sub
dec
jmp
idiv
xor
std
stos
lret
lcall
cmp
gs
and
cmp
mov
lods
ja
mov
and
pop
add
mov
adc
xchg
outsl
cli
sbb
pushf
inc
in
inc
pop
mov
inc
enter
mov
mov
mov
and
cmp
sub
imul
fimuls
fnstsw
test
pop
sub
sti
or
in
inc
mov
cli
aam
fldenv
dec
cvtpi2ps
rcll
loope
int
pop
and
mov
dec
fucomip
sbb
dec
cmpl
mov
in
or
mov
mov
pop
je
cs
jmp
imul
push
push
dec
aaa
and
adc
xlat
xchg
and
push
pop
dec
sti
cmpb
fisttpll
std
mov
addr16
mov
jmp
inc
dec
dec
inc
shr
shrl
fsubs
aaa
cmp
movsl
repz
pushl
cmp
jb
adc
sub
shlb
pusha
outsl
out
cmpl
and
aam
mov
dec
cmpsb
stc
sub
push
fstpt
mov
push
or
fists
mov
rcll
and
dec
push
ja
xchg
add
and
jge
into
hlt
inc
aas
sub
jg
pop
xorb
dec
push
mov
mov
repz
push
sbb
stos
mov
inc
and
out
mov
ljmp
dec
jmp
mov
es
xchg
mov
into
mov
loopne
sbb
inc
mov
stos
jp
or
inc
push
jp
ja
icebp
sbb
mov
pop
sti
mov
negl
add
notl
mov
sbb
call
nopl
sbb
fwait
loope
mov
loopne
mov
xchg
mov
mov
stc
bound
sub
sub
je
push
mov
sub
cmp
sbb
adc
push
out
cmp
loopne
loopne
ret
xlat
mov
jg
loope
scas
lds
movsb
or
mov
bound
xor
inc
xchg
mov
mov
add
cs
lcall
mov
outsb
and
or
add
or
cmpsl
int
and
cmp
add
daa
push
je
dec
inc
daa
or
icebp
xchg
andb
add
dec
and
jmp
add
lods
int
adc
aad
xchg
or
decl
push
jbe
test
xchg
movsl
mov
into
sbb
stos
mov
add
dec
pop
jmp
lret
push
les
shr
aad
jge
mov
adc
cmpsl
xor
out
add
iret
in
lods
mov
sub
inc
pusha
ljmp
mov
lds
mov
lock
jge
push
jb
cli
mov
sub
test
adc
std
add
add
iret
push
out
je
pop
testb
fildl
cmp
stc
das
mov
or
jns
lea
movsb
int3
in
pushf
dec
popa
test
and
push
pop
xchg
test
int
xchg
pushf
or
add
shll
subl
jle
arpl
sar
and
mov
call
mov
sarl
mov
pop
out
sub
mov
push
sbb
stc
imull
push
push
sbb
repz
mov
cmp
insl
bnd
lret
pop
push
scas
mov
out
aaa
test
test
mov
jp
dec
outsl
out
roll
cwtl
out
sbb
ss
lock
xlat
rol
fsubrs
psubb
cmpb
push
inc
push
test
or
add
push
xchg
test
lock
sbb
adc
idivl
mov
cmc
jge
or
push
cwtl
mov
xchg
pusha
leave
lret
scas
mov
lock
and
sub
push
shrb
mov
fildl
shll
insl
scas
jle
addr16
ficoms
adc
into
or
mov
and
lods
pop
push
out
cmp
les
subl
dec
int3
push
xchg
aaa
xchg
pop
push
push
mov
jne
jge
cmp
or
fstl
fdivp
popf
pop
jae
mov
ja
xor
push
xor
or
sub
mov
jl
scas
inc
push
inc
dec
xlat
cltd
push
dec
adcl
repz
sub
sbb
imul
gs
cs
sub
stc
aas
dec
and
mov
jge
adc
lods
adc
jae
in
push
xchg
in
xor
aas
stc
sub
mov
push
shrb
icebp
cltd
test
sarb
ss
test
aas
dec
shlb
icebp
aas
cmp
jae
ffreep
lahf
jns
out
dec
mov
out
mov
adc
pushf
pop
mov
movsb
pop
sbb
mov
mov
iret
mov
mov
pop
dec
fst
or
aas
mulb
jae
xchg
push
dec
imul
mov
push
or
stc
stos
int
xorb
in
mov
lods
mov
mov
loopw
mov
push
add
and
leave
shll
cltd
dec
xchg
ss
pop
js
into
popa
push
push
pop
ret
pop
out
mov
imul
mov
jae
sahf
jb
leave
les
aad
jg
cmp
push
insl
xchg
dec
inc
dec
or
cmc
cltd
jbe
pop
xor
mov
adc
inc
daa
sub
push
xchg
xlat
xchg
sti
xor
int3
aam
jmp
lods
mov
adc
xor
pop
imul
or
add
mov
mov
aas
push
sbb
sub
mov
xor
fnstcw
call
sub
jno
mov
in
lret
jbe
fwait
lret
cltd
orl
pop
pop
push
push
mov
mov
stos
fdivrl
imul
movsl
cmc
xchg
in
je
or
inc
mov
dec
scas
loopne
adc
and
jg
pop
adc
mov
popa
outsb
ss
cmp
les
into
clc
xor
jb
pusha
dec
inc
dec
add
mov
aas
dec
add
popa
push
pushf
jmp
sarl
add
call
test
aaa
aad
loop
es
ss
pop
sti
jo
daa
test
mov
xor
pop
sub
hlt
lds
in
fcomps
ret
jp
and
in
xor
push
std
pop
push
ja
pop
fildll
iret
cwtl
cli
repnz
stos
push
lds
and
sbb
shlb
cmp
pop
inc
mov
mov
lods
cmp
fnstenv
addb
loopne
mov
push
aaa
inc
pushf
clc
popf
pusha
fcoml
arpl
mov
dec
xlat
daa
jecxz
jbe
addr16
jecxz
call
xlat
fldl
sbb
leave
mov
pop
mull
xor
sub
mov
fs
or
or
push
lock
and
jg
int
mov
and
xor
or
and
push
jg
repz
icebp
adc
or
sbb
adc
das
ret
shl
xchg
mov
add
fldl
sbb
and
js
daa
pop
mov
ret
xchg
and
loope
push
push
inc
out
ljmp
sub
and
fcmovnu
dec
inc
lock
mov
xor
mov
fildll
movsb
loopne
cmp
dec
fadds
test
std
mov
mov
xor
mov
out
jl
cmp
je
out
pop
sbb
xor
lea
push
mov
dec
fcomi
ds
dec
lds
cmc
fiaddl
cmc
adc
add
sub
dec
pop
push
aas
cmp
pop
cmpsl
jg
sbb
push
mov
mov
xor
icebp
sub
and
imul
popa
scas
je
or
jg
dec
rep
mov
pop
adc
fmuls
lea
push
sub
add
out
push
xchg
adc
cwtl
std
dec
mov
sub
lods
xchg
fdivr
rorl
cli
outsl
lods
pop
pop
lods
fmuls
movups
pop
xor
and
pop
jmp
cmp
fs
rolb
sbbl
movsl
sbb
outsl
and
pop
enter
mov
xchg
stos
push
xchg
adc
test
sub
addb
cld
arpl
jns
fstpl
xchg
add
or
push
test
fsubrl
sarw
mov
in
inc
push
mov
in
in
bound
orl
unpcklps
mov
mov
jmp
mov
clc
lcall
test
and
mov
xchg
fcmovnbe
movsb
shll
cwtl
push
subl
sub
mov
es
and
je
mov
fdivp
and
push
int3
mov
lea
leave
sbb
xchg
and
mov
jne
fstpl
es
je
sarl
fmul
jbe
in
leave
xchg
jmp
mov
push
das
out
imul
std
cltd
shlb
or
push
dec
jno
gs
std
mov
add
aam
jp
mov
std
loop
lcall
sub
pop
pop
int
xor
movsb
push
les
dec
mov
mov
adc
fwait
mov
fucomi
lea
adc
ret
test
loop
mov
cmpsl
icebp
or
pushf
dec
je
aad
xor
mov
cmpsb
and
out
lret
test
and
mov
sbb
sti
xchg
mov
pop
in
repnz
inc
push
mov
outsb
flds
inc
or
xchg
pop
adc
push
push
bnd
shll
or
inc
pop
sbbb
movsl
leave
rcrl
rorl
das
cmp
cmpsl
or
mov
stc
ljmp
mov
jb
mov
push
sahf
cwtl
xchg
and
xchg
sbb
jp
imul
arpl
ret
mov
test
mov
cmp
xor
js
sbb
and
je
daa
inc
lret
xlat
mov
xchg
xchg
popa
adc
fidivrl
clc
jbe
cmp
cmc
mulb
stos
fidivl
push
xor
shlb
push
mov
and
adc
pop
mov
mov
inc
lods
out
pop
inc
shll
jle
push
subb
repz
pop
nop
sub
dec
lcall
neg
sub
mov
dec
sbb
rcll
in
or
add
jle
push
pop
lahf
fwait
std
inc
ror
dec
dec
cli
aam
cmp
dec
scas
sub
push
mov
ss
addl
inc
jg
imul
rorl
fidivl
clc
jecxz
sbb
les
call
repz
int3
mov
push
pop
push
or
sbb
shll
leave
sub
cltd
and
das
mov
inc
movsl
loop
xor
cltd
neg
or
ret
jbe
xchg
xor
mov
out
inc
cltd
jmp
ret
jae
lds
ret
push
int
jmp
in
inc
xor
sbb
pop
icebp
mov
ljmp
or
outsl
mov
pop
push
or
dec
out
pop
test
add
mov
enter
jmp
and
in
lret
rclb
sub
push
push
stc
push
xor
insl
in
cmp
xor
clc
loop
sbb
push
mov
pushf
incb
ljmp
xchg
pop
mov
bound
js
insb
add
dec
push
dec
sahf
push
xchg
fwait
or
data16
inc
jp
insb
mov
pop
fcmovbe
jno
inc
test
cmc
dec
subl
xor
shll
lods
xchg
add
iret
lods
jo
sbb
sti
repz
sub
and
icebp
scas
outsl
pop
add
scas
int3
out
jno
aas
xor
xor
pop
call
loopne
add
mov
ds
dec
mov
leave
add
xchg
je
dec
pop
mov
xor
jno
add
lods
nop
lret
pop
dec
xor
addl
fdivrp
cmp
xlat
enter
mov
mov
repz
repnz
cmp
jae
ljmp
xor
fs
push
xchg
mov
cmc
xor
into
push
outsl
xchg
je
sbb
jp
jne
mov
in
cli
stos
jl
fistl
dec
mov
mov
xor
push
push
gs
das
ss
mov
fadds
cmp
cs
xchg
insl
outsl
inc
movsb
outsb
int3
into
cli
add
fadds
es
clc
cmp
add
xchg
and
lods
into
xor
adc
aad
xchg
mov
ljmp
mov
adc
add
adc
outsb
mov
adc
pop
xor
mov
into
sub
stos
call
xchg
push
mov
dec
sub
in
mov
push
inc
pop
or
mov
idiv
leave
lcall
sti
mov
mov
aad
sbb
out
in
loope
dec
scas
dec
rol
mov
loop
lds
mov
dec
lcall
test
clc
push
aam
mov
sub
sbb
push
stos
leave
dec
mov
sbb
das
out
push
inc
xor
add
adc
cmp
cmp
lcall
pop
cs
nop
xor
dec
clc
pop
hlt
jg
stos
fcom
mov
clc
es
push
push
pop
inc
das
mov
or
lods
and
filds
mov
bound
int
imul
mov
push
aaa
mov
iret
jb
jmp
cmp
fbstp
mov
jp
divl
pop
in
xor
mov
adc
es
pop
rcrb
lea
xchg
add
icebp
loop
inc
jmp
movsl
dec
test
mov
inc
call
add
add
arpl
push
jmp
cmp
xor
xchg
lret
pop
sti
js
ljmp
xor
sahf
test
xchg
les
jecxz
std
lods
or
push
popa
pop
dec
inc
insl
mov
clc
pop
mov
or
jle
inc
push
and
data16
mov
sbbl
push
adc
mov
push
loop
notb
hlt
mov
lea
inc
test
or
jno
sti
xchg
jno
cltd
pushf
dec
fs
dec
lods
sub
insl
negl
jae
lahf
les
fucom
mov
cmp
in
inc
aas
fsubs
push
jae
in
xchg
add
mov
adc
lea
pop
cli
push
pop
jl
push
fisttps
test
dec
mov
daa
cmp
cmpxchg
cmp
add
aas
and
and
ds
lock
inc
decl
or
or
jecxz
aam
gs
pop
xchg
pop
xchg
enter
mov
loop
cmpsb
inc
jg
jecxz
and
sub
add
push
inc
pushl
jno
mov
cmp
in
aad
fxch
and
imull
insl
sub
add
adc
pop
mov
hlt
inc
movsl
int
sarb
add
cld
lret
in
push
push
adc
sub
pop
xchg
cwtl
adc
lods
xchg
icebp
add
sub
sbb
xor
or
sbb
and
popf
cmp
inc
lods
cmpsb
dec
xchg
popa
xchg
xorl
out
cmp
add
divl
mov
stos
cmp
sub
jb
jne
addl
push
jecxz
cmp
stc
push
clc
adc
lock
adc
sub
fsubs
jne
repz
cli
jge
mov
and
push
mov
push
xor
adc
into
scas
in
cmp
push
inc
cmp
mov
dec
mov
cmp
je
cmp
inc
xlat
gs
inc
test
xor
cmpsb
test
mov
mov
in
adc
mov
cltd
leave
xor
sub
dec
outsl
mov
es
popa
data16
lock
sub
jb
adc
adc
cmpsb
stos
outsb
icebp
stc
mov
mov
out
out
mov
add
mov
sbb
cltd
outsl
jnp
cmpsb
dec
inc
test
nop
dec
mov
inc
out
jb
lods
sub
ss
push
pop
push
ret
push
outsl
sbb
mov
icebp
ret
mov
and
mov
mov
xchg
out
mov
jp
stc
out
aad
and
add
rcll
push
mov
push
testb
push
sbb
movsb
bound
es
fdivl
sahf
and
xchg
jle
sbb
adc
jp
out
cmp
mov
iret
lret
pop
popa
insl
push
std
xor
push
sti
or
sti
call
imul
fstps
push
push
pop
add
sarl
lods
call
add
xor
sti
out
arpl
fcmovbe
xchg
dec
sar
mov
mov
stos
addb
xorl
jmp
cmp
ja
gs
adc
lods
aad
sub
mov
sub
sub
cmp
stos
mov
scas
std
push
lahf
rolb
jnp
push
or
and
repz
test
jmp
jb
je
and
je
xchg
rolb
dec
push
cwtl
out
out
or
dec
push
test
nop
push
lock
nop
clc
lock
xor
pop
in
ret
pop
scas
mov
dec
sub
test
in
out
jmp
mov
jnp
leave
inc
gs
adc
or
sub
iret
or
in
les
lods
rcrb
mov
roll
add
cld
mov
aad
enter
icebp
add
dec
inc
rorb
mov
out
sbb
int
and
fs
xchg
in
adc
jb
and
out
negl
mov
decb
data16
jae
dec
sbb
mov
xlat
sub
add
xchg
gs
out
loopne
xchg
mov
xor
lret
imul
adc
das
xchg
fdivrs
bound
mov
inc
mov
jb
push
or
dec
ljmp
insl
in
rcrl
loope
lcall
pop
xchg
mov
push
xor
subb
pop
add
inc
fs
mov
lods
insb
std
or
push
mov
mov
add
repnz
cmp
push
int
sub
loope
out
out
pop
jmp
push
pcmpeqd
repz
adc
xor
loope
adc
fcmovu
out
frstor
adc
shlb
xor
sar
mov
sbb
cmp
cmp
adc
add
mov
xchg
jle
adc
inc
das
inc
mov
in
imul
daa
cmp
push
loopne
add
sbb
enter
andb
test
in
and
jl
adc
jmp
dec
pop
adc
lret
popf
push
out
inc
and
daa
jno
mov
adc
or
fs
mov
pop
mov
mov
mov
jae
xor
imul
nop
sub
inc
push
push
bsr
jle
add
subl
cmp
xor
outsl
sub
outsl
xor
test
and
inc
sub
pop
sub
inc
insl
xchg
loope
sbb
and
movsb
sub
xlat
sarl
cmp
xchg
or
lds
cmpsb
and
mov
add
mov
or
fistps
cmpl
sbb
xchg
test
xchg
adc
or
popa
daa
int
sbb
and
push
mov
jge
leave
mov
dec
movsb
stc
test
jne
mov
lahf
push
dec
mov
jns
clc
cmc
inc
js
jns
mov
push
outsl
ds
shrb
mov
xorb
and
popa
aam
cmc
xlat
aad
jmp
int3
jae
in
mov
sahf
outsb
or
jo
mov
or
cmp
popf
or
mov
sbb
out
hlt
orb
cltd
xor
mov
dec
les
into
jb
jl
and
sti
cltd
pop
shrl
dec
je
dec
outsl
in
imul
jbe
sbb
stos
enter
popa
or
movsb
xchg
adc
inc
or
cmp
and
mov
add
inc
add
aad
sub
pop
popf
cltd
test
inc
sbb
jae
push
bound
xor
enter
sub
mov
nop
pop
stos
arpl
pop
xor
jno
mov
or
out
enter
or
in
xchg
mov
leave
js
jns
or
enter
adc
movsl
daa
mov
jl
sbb
inc
push
dec
jmp
sbb
addr16
jno
test
pop
jo
cltd
cs
push
out
inc
jnp
xchg
push
push
add
stc
mov
dec
arpl
inc
lret
aam
dec
in
xlat
les
aam
mov
inc
mov
mov
mov
pop
shll
mov
scas
sub
mov
sub
mov
jp
mov
jns
and
mov
les
inc
and
inc
pop
or
loop
movsl
arpl
mov
ficoml
into
sbb
push
imulb
mov
outsl
and
outsb
xor
stos
xchg
in
jns
or
aad
mov
cmpsb
xchg
xchg
cld
push
shll
imul
pop
je
mov
sub
outsb
mov
lea
inc
fbstp
sub
out
and
mov
xor
push
jl
jg
out
loope
insb
jo
rcrl
mov
mov
add
loop
pop
ret
outsb
adc
jb
push
mov
xor
test
add
insb
cmpsb
int3
xchg
pop
fistpl
adc
mov
lods
jne
jl
xor
lods
xchg
xchg
rcrb
mov
inc
sar
add
adc
add
mov
pusha
shl
adc
pushf
loop
xor
or
pop
out
pop
clc
out
mov
dec
mov
and
aam
jno
cmp
pusha
adc
lea
in
mov
bound
mov
mov
jnp
push
jno
xchg
pusha
in
push
nop
lahf
jecxz
outsb
or
pop
sbb
ja
outsb
and
test
mov
xchg
or
divb
and
ret
mov
insl
xor
or
nop
dec
jg
popa
lcall
pop
mov
testb
push
cli
ficomps
aam
mov
nop
mov
mov
or
lods
sub
roll
out
xchg
inc
mov
popa
insl
dec
jno
in
xor
fbstp
xor
inc
jmp
mull
pop
push
test
ror
push
loope
xchg
loop
andl
mov
bound
and
xor
pop
push
rcpps
xor
adc
jne
outsb
mov
out
scas
mov
repz
jecxz
inc
mov
inc
add
pop
lret
inc
xchg
lods
jp
or
enter
movsb
pusha
fsubr
in
xchg
dec
or
mov
or
cmpsl
shll
dec
xor
dec
aad
mov
add
repnz
stos
sbb
fsubl
outsl
orb
dec
lcall
sub
fwait
mov
adc
xchg
outsl
in
cmp
jg
fnstsw
outsb
fmuls
jge
lahf
imul
mov
cmp
leave
popl
push
push
nop
xrelease
outsb
or
inc
scas
loop
repnz
cmp
lcall
pop
mov
add
adc
push
mov
cmp
pop
bound
in
inc
lds
and
mov
adc
sahf
lcall
dec
add
mov
cwtl
icebp
lret
into
mov
inc
fbld
fwait
adc
inc
jl
flds
insb
adc
cmp
adc
cld
fmulp
xor
pusha
inc
inc
push
idivl
mov
add
aaa
and
fs
push
or
mov
out
or
sub
mov
inc
popa
sbb
inc
push
jbe
mov
xchg
das
cltd
jg
or
xor
mov
cmpsl
sub
pop
adc
mov
inc
jge
inc
cmp
pop
repnz
inc
or
shrl
icebp
out
and
jp
push
push
sub
int3
lds
and
dec
dec
out
and
std
sub
cltd
fists
ja
ljmp
mov
xchg
sti
ja
pop
lock
aas
pop
popf
xor
push
dec
dec
cmpsl
aam
outsb
mov
imul
cmp
fmul
add
dec
fdivl
xorl
push
push
cmp
hlt
xchg
es
push
ds
ljmp
push
ficoms
pop
nop
notb
xor
adc
push
add
pop
xor
es
cmp
push
sbb
fs
pop
pop
inc
insl
mov
enter
dec
sti
or
pushf
mov
sbb
hlt
loope
jp
push
scas
adc
sub
fs
out
push
jo
sarl
xchg
leave
icebp
sub
push
sbb
or
xchg
mov
sahf
stc
popf
or
fsubr
push
pop
test
push
add
mov
js
cmpsb
data16
ljmp
loope
loop
dec
cltd
movsl
popa
fs
pop
enter
dec
jg
mov
pop
xchg
divl
xor
inc
add
push
aam
repnz
in
lds
ja
jnp
mov
xchg
xchg
xchg
in
ficoms
mov
cld
mov
addl
addr16
jo
xor
rolb
nop
dec
ret
mov
sbb
add
lahf
imul
inc
ret
jl
dec
adc
sbb
jbe
addr16
xor
sbb
xchg
jmp
mov
aas
popf
xor
jl
lods
lea
or
xchg
aaa
in
push
or
nopl
xor
sub
lds
cmp
pop
daa
mov
mov
adcl
mov
jg
movsl
test
sub
incb
imul
xlat
out
lret
jbe
jns
ss
adc
ja
movsb
mov
ljmp
pop
cmpsl
push
add
cmp
mov
jne
loopne
mov
sbb
mov
adc
add
ficoms
lock
fs
sarb
push
popf
scas
pop
sahf
cmp
cmp
mov
es
xor
hlt
ja
pop
int
adc
pop
mov
hlt
or
adc
lock
push
repnz
cmp
inc
leave
mov
cwtl
in
out
pop
jle
nop
mov
popf
sar
mov
dec
ret
outsb
pop
mov
cld
dec
into
push
adc
mov
jbe
shrl
or
or
imul
sarb
xchg
xor
out
in
push
jns
mov
sti
cmp
xchg
sbb
les
das
repnz
sub
das
adc
add
loopne
lods
xchg
or
test
jecxz
adc
pop
jp
lret
jmp
arpl
js
popa
jnp
sub
pop
dec
xor
inc
dec
inc
leave
loop
lods
js
mov
aam
cld
stos
dec
adc
rclb
lods
call
jnp
dec
or
sbb
mov
leave
arpl
mov
jb
cli
pop
jge
repnz
jle
gs
xorb
imul
outsb
andb
dec
cmp
mov
sar
test
xor
or
jbe
icebp
mov
mov
mov
or
js
pop
insl
pop
hlt
shlb
and
xchg
push
inc
lahf
add
nop
fiaddl
mov
mov
jp
and
xlat
mov
arpl
aad
mov
xchg
rcr
test
push
adc
outsl
sti
and
xchg
leave
mov
dec
movsl
inc
jmp
mov
jns
inc
movsb
inc
std
xor
mov
fcompl
loop
mov
or
in
aaa
jl
pop
aad
out
ss
test
test
loop
push
ror
xchg
scas
out
insl
out
mov
cmp
dec
mov
in
dec
subb
cltd
bound
scas
sub
popf
mov
or
mov
pop
pop
dec
je
xchg
jae
cmp
shll
mov
jecxz
push
xchg
dec
mov
push
arpl
push
pop
mov
test
sbb
loopne
xor
mov
inc
mov
gs
mov
je
xor
insl
or
push
sub
fcoms
mov
push
fists
xor
mov
loop
ja
sub
lret
testb
mov
dec
cmc
mov
pop
leave
repz
mov
mov
scas
rorb
inc
fcom
dec
aaa
add
insb
int
sub
aad
cmpsb
fstps
xor
clc
lods
inc
stos
and
inc
and
imul
mov
lock
es
sub
mov
test
dec
lock
cmp
dec
and
ja
adc
repnz
sar
repz
clc
xchg
dec
adc
fwait
stc
sbb
sti
mov
xor
sbb
lock
sbb
inc
dec
mov
cmc
repz
cli
sub
inc
ds
cmp
imul
js
adc
mov
sub
push
cs
mov
mov
dec
pop
xchg
inc
loope
dec
insl
aam
sbb
ror
push
jbe
push
imul
mov
std
inc
sub
xor
cmp
neg
stc
lock
negl
in
mov
js
jb
lods
jne
push
hlt
inc
movsb
shlb
pusha
cmp
aad
adc
ret
jecxz
int3
pushf
mov
dec
cmpl
ss
roll
or
fndisi(8087
fsubp
loopne
lods
push
dec
and
lock
fs
add
filds
sbb
adc
jp
mov
subl
into
shll
inc
add
ret
cmp
xor
cmp
xor
gs
jp
cmp
mov
sub
push
mov
or
lds
sbb
cmpsl
xor
inc
lock
rcrb
rolb
mov
push
cmpsl
dec
cmc
sub
pop
fwait
jae
out
dec
scas
mov
mov
movsl
pop
aam
cmc
mov
add
arpl
ljmp
push
sub
shrb
xlat
fadd
scas
sti
sub
add
mov
scas
push
lock
fwait
mov
psubb
shl
mov
das
outsl
adc
adc
mov
or
or
enter
mov
mov
repz
dec
push
lcall
fbstp
adc
out
push
loopne
aad
push
add
test
fs
pop
ljmp
and
cmp
adc
sbb
inc
xchg
inc
imul
pop
jmp
aad
aad
lods
jne
test
or
adc
push
out
ds
ja
jne
push
repnz
std
mul
daa
aas
sub
pop
enter
push
cmp
cmp
push
push
xor
test
dec
and
push
and
les
sub
icebp
ret
mov
popf
dec
pop
xorl
lods
inc
jno
scas
jg
jmp
xlat
icebp
pop
int3
xchg
outsb
add
fnsave
lea
mov
es
push
mov
inc
jp
pop
sub
fimull
push
out
hlt
dec
ja
outsl
mov
cmovb
fildll
js
lahf
push
aaa
test
xchg
sub
jle
pop
out
xor
xchg
pop
jle
pop
fwait
andb
aaa
test
stos
sub
shll
jmp
scas
fwait
cmpsb
xor
cmpsl
jb
jp
test
es
push
cmpsb
inc
stos
jl
js
jp
adc
test
jecxz
idiv
or
mov
cmpsb
sbb
int
fistpl
nop
stos
mov
push
adc
add
sti
or
xor
out
dec
mov
out
add
subl
and
js
cmpsb
scas
test
push
jns
cmp
or
sbb
arpl
sub
pop
fldenv
cwtl
movsb
pusha
xchg
push
jae
cmc
dec
and
gs
pop
leave
pop
test
outsl
sbb
ja
and
xorl
or
adc
adc
aad
daa
call
es
aas
sbb
pop
adc
jo
pop
outsb
adc
xchg
add
cmpsl
popf
mov
inc
pop
lret
xchg
pop
into
cmpsb
inc
push
mov
fisubs
pushf
push
sub
imul
cmc
add
mov
rclb
addr16
aaa
inc
sbb
call
pop
push
lahf
popf
int
jle
and
pushf
push
adcl
call
jbe
int
adc
popf
in
inc
mov
mov
jge
add
les
stos
inc
xchg
inc
jbe
enter
mov
ja
fucomi
inc
imulb
add
adc
out
xlat
int3
pop
lahf
leave
lret
mov
stos
push
clc
pop
insb
jnp
les
loope
loopne
pop
pop
aam
sbb
xchg
es
jge
daa
fistps
sub
std
jae
sub
cmpsb
sti
or
pop
aas
dec
and
cmp
lret
rolb
push
and
test
adcl
xchg
stos
mov
xchg
cmp
int
jae
aaa
idivl
cmc
jnp
std
add
enter
lret
add
loope
jecxz
and
int
fdiv
andl
lret
mov
clc
inc
fisubs
and
jp
scas
stc
sbb
push
lods
jbe
mov
sub
xchg
xchg
xor
inc
xor
test
jb
ds
jb
cltd
lret
xor
aas
jge
data16
stos
cmp
xchg
sub
xchg
jmp
je
cmp
xor
inc
into
mov
mov
je
daa
and
out
in
sbb
ljmp
dec
test
mov
adc
fmuls
xchg
cmp
mov
jl
xchg
xchg
add
sub
mov
test
aad
inc
fwait
stos
inc
aas
dec
int
sbb
pop
shl
in
sub
bound
push
cmpsl
ljmp
mov
fdiv
jbe
mov
icebp
jmp
out
mov
or
dec
shl
outsl
jb
loope
adc
addr16
and
mov
mov
mov
sub
mov
dec
in
mov
sub
jp
cmpsl
cld
fisttpl
icebp
outsl
lods
dec
sub
pop
sti
shrl
imul
jmp
and
mov
or
xor
and
mov
mov
xor
inc
mov
inc
cmp
pop
movsl
push
lcall
inc
sbb
inc
stos
icebp
push
lahf
aam
outsb
pop
lret
das
xchg
xchg
or
stc
sub
mov
jns
lahf
cli
cld
popf
out
out
call
lock
dec
xchg
inc
sbb
dec
sbb
xchg
repnz
pop
repz
xor
outsb
clc
dec
repz
out
push
shll
ja
or
or
jbe
cwtl
sub
cmp
adc
sub
js
lock
inc
cmpsl
int
adc
mov
fnstcw
sub
inc
jnp
ds
idivb
or
and
into
fwait
pop
jae
lahf
and
push
arpl
iret
sbb
adc
arpl
sahf
adcb
ret
xchg
mov
mov
push
sbb
cld
mov
or
xchg
jo
cli
xor
test
in
pop
int3
cwtl
push
cld
and
jb
cltd
fdivl
jp
sbb
lds
xor
sub
dec
pop
daa
mov
in
arpl
mov
push
out
inc
and
push
pop
jbe
pop
loop
inc
or
sbb
pusha
inc
pop
out
mov
sbbb
cmp
jbe
dec
out
jge
imul
data16
fiaddl
and
daa
lods
les
adc
out
sbb
pushf
int3
outsl
push
push
icebp
jl
xor
adc
dec
add
int3
daa
xor
jecxz
pushf
shlb
or
iret
push
push
mov
arpl
in
int
jl
cmpsl
xor
add
sbb
pop
fbld
mov
out
div
scas
xchg
xchg
ss
xchg
insb
stos
pop
add
into
cmp
lret
sbb
movsl
mov
push
lret
jmp
aas
mov
inc
in
jl
lea
leave
leave
xlat
lea
cmp
add
sti
inc
xor
ficomps
cwtl
repz
hlt
outsl
in
mov
xchg
ljmp
cmp
nop
and
jl
and
mov
inc
arpl
mov
jns
mov
push
jnp
push
inc
vunpcklps
cmp
mov
test
icebp
push
pop
xchg
out
cmp
pop
addb
fnstsw
insb
mov
loopne
pop
xor
mov
test
xlat
sub
loopne
das
repz
call
aam
push
fldl
lds
movsl
test
ret
filds
test
js
ret
ret
dec
mov
mov
inc
ja
fdivl
xor
ss
comiss
movsb
dec
cld
test
mov
sub
iret
mov
sbb
shll
cmp
cmpsb
outsb
arpl
mov
pop
cmc
ds
jp
lods
in
iret
jnp
mov
jle
lcall
and
test
scas
movsl
jle
out
xor
sbb
cmp
ror
les
jge
pop
sbb
jl
mov
fistl
push
stos
push
test
xlat
pusha
sbb
jl
mov
pop
cmp
pop
jbe
or
test
jecxz
cltd
aam
lock
aaa
loopne
cmp
jno
mov
inc
shl
jg
shl
sub
dec
ljmp
and
mov
push
sbb
shlb
ljmp
call
xor
imul
nop
push
shrl
sbb
mov
add
mov
jb
jb
arpl
push
imul
popa
test
cmp
jmp
jge
jl
fs
ret
stos
pop
aaa
xchg
mov
call
push
xchg
xchg
repz
cmp
scas
add
push
sarb
add
daa
inc
and
in
add
fcmove
stc
cmp
fwait
add
sbb
movsb
lock
and
jge
jns
cmpsl
jae
orl
mov
pop
aaa
cmp
ss
gs
int
or
pop
je
xchg
daa
sbb
stos
and
xchg
imul
sub
cltd
out
outsb
loope
pushf
aad
and
pop
cs
bound
inc
push
lods
sub
dec
pop
push
dec
adc
or
outsb
jmp
cld
aad
cmp
pop
iret
push
pushf
outsl
mov
imul
xlat
repnz
xchg
inc
pusha
xor
push
xchg
push
loopne
mov
dec
lret
lock
xchg
aad
mov
xchg
mov
jo
std
push
xchg
or
or
push
and
bnd
or
pop
push
xchg
xchg
cmp
xchg
xchg
bnd
dec
dec
pop
adc
rclb
dec
push
movsl
ret
in
cmpsb
icebp
js
jmp
sub
mov
mov
lcall
std
lock
sub
xchg
ret
and
add
call
xchg
mov
inc
hlt
dec
loopne
mov
pop
dec
filds
mov
fucomi
stos
rol
mov
or
xchg
adc
incb
stos
cltd
popf
push
mov
mov
xchg
popa
lds
dec
cmpsl
push
jge
je
jecxz
lods
add
inc
push
mov
insb
addb
shrl
mov
repz
add
and
mov
arpl
fsubrs
imul
push
push
xchg
into
pop
fwait
iret
jcxz
popa
pop
dec
imul
dec
add
enter
aas
or
push
mov
loope
xlat
sub
mov
call
sti
inc
mov
add
inc
ja
mov
push
jl
xchg
jge
push
enter
xchg
xlat
mov
fwait
imul
fstl
and
jecxz
add
inc
mov
cmp
adc
pop
dec
add
mov
xchg
adc
xchg
mov
jnp
sbb
ja
icebp
aas
mov
push
out
call
jl
and
inc
push
ret
pop
mov
push
sbb
daa
test
jns
test
sub
push
pop
mov
mov
or
lcall
jl
ret
enter
incb
sub
xchg
aam
popf
test
shll
fiaddl
cmc
loope
cwtl
mov
xchg
push
cmpsl
std
push
icebp
test
sub
lods
js
ret
sub
adc
loop
or
sbb
std
nop
cmp
sub
mov
mov
lret
in
push
js
stos
dec
xchg
mov
push
movsb
popf
sub
xchg
xor
gs
push
inc
in
sub
xchg
pop
das
in
enter
cmp
cwtl
or
jmp
pop
dec
xchg
popa
scas
imul
add
in
negb
xchg
mov
jb
fildl
icebp
adc
inc
jge
out
daa
add
iret
adc
je
mov
inc
dec
mov
dec
fdivs
pop
cmpsl
stos
stos
cli
fistpl
inc
jl
scas
push
dec
sti
fisubrs
pop
mov
rol
lea
mov
inc
and
push
daa
mov
popa
push
fcomps
cmc
xchg
mov
jns
mov
mov
or
in
outsb
stos
jg
cmp
scas
aas
int3
cmp
adc
es
es
dec
aas
mov
mov
xchg
mov
or
pop
lock
push
lcall
push
mov
mov
xor
adc
call
ja
js
in
push
lea
lret
pusha
pusha
xchg
push
shl
xchg
jecxz
aas
stc
lods
test
dec
loope
lods
xor
stos
jg
fwait
xor
lock
sbb
leave
mov
pop
mov
popf
jns
pop
imul
in
adc
xchg
pop
pushl
js
pop
and
out
xchg
cmp
insb
add
int
in
ss
mov
in
in
jecxz
push
mov
loope
and
fadds
add
sub
xor
push
inc
push
mov
call
js
and
and
iret
jae
adc
sbbl
divl
rolb
or
popa
ljmp
pop
jne
adc
mov
sub
inc
push
fwait
xor
out
mov
dec
jae
in
pop
js
cmp
pop
in
stos
push
or
cld
inc
lahf
pop
mov
cwtl
in
arpl
int
cmp
jne
jp
adc
jno
popa
mov
test
mov
push
repnz
icebp
cld
sbb
psubq
test
jbe
sbb
int3
jnp
cli
les
jle
or
jo
push
xor
sbbl
cmp
insl
aad
dec
jecxz
push
sub
push
dec
popf
iret
pusha
or
cmp
ret
mov
icebp
pop
lea
divb
stc
cmpb
inc
sbb
lcall
test
push
xor
es
sub
cmpsb
pop
mov
int3
roll
push
lcall
mov
loope
xor
fld
test
inc
sub
test
cmp
or
in
sahf
addr16
dec
aas
testl
dec
cmp
fldl
roll
ja
push
into
inc
mov
mov
and
std
sbb
mov
lods
into
pop
or
add
cmpsl
arpl
and
jge
and
lea
adc
pop
mov
sbb
dec
arpl
rcll
daa
sbb
adc
in
xor
push
mov
mov
mov
icebp
int
cli
mov
outsb
or
push
push
sub
fisubs
out
lea
decb
or
lret
cmpsl
sbbb
sub
add
sub
test
mov
inc
add
mov
shll
test
sub
ret
mov
add
cmpb
loope
push
cmp
fwait
stos
mull
xchg
cmp
sbb
test
popf
scas
cmp
push
fdivs
hlt
adc
dec
jg
cmp
xor
pop
sub
dec
jae
rcll
or
push
insb
ret
and
int3
icebp
dec
mov
bound
scas
lcall
jb
shrl
fyl2x
mov
ss
mov
sbb
flds
dec
test
popa
leave
xchg
fs
gs
dec
int3
cmp
dec
add
push
cld
xor
cltd
or
ljmp
sbb
push
loope
sarb
hlt
add
ficoms
scas
aaa
lea
sbb
or
push
fcoms
out
das
lods
add
sbb
sbb
sbb
jmp
or
adc
sbb
or
stc
loope
mov
inc
push
lret
iret
sub
xor
xlat
push
sub
ret
stos
xor
cmpsb
lods
hlt
push
call
in
push
imul
mov
jl
stos
sbb
jge
xlat
mov
add
divb
or
mov
add
adc
pop
jp
insl
lods
jne
ror
mov
mov
daa
lahf
inc
mov
icebp
and
ljmp
mov
movsb
imul
pop
into
mov
in
or
lods
jmp
and
dec
fadds
cmp
mov
lods
jmp
xchg
mov
cli
sbb
loop
popf
dec
pop
mov
mov
inc
push
aas
fcoms
push
xchg
mov
mov
loopne
jb
push
push
roll
adc
sti
cmp
pop
daa
cmp
lea
inc
jbe
sub
aaa
movsl
mov
jae
dec
sbb
cmp
fidivrs
xchg
shrb
cmp
sbb
call
adc
push
out
push
cwtl
push
cmp
jbe
sub
xor
mov
pop
jne
or
cltd
cmpsl
incb
xchg
xchg
push
jmp
mov
sub
es
ret
jp
insl
loope
int
cmpsl
fcom
in
cmc
jp
add
dec
mov
lret
sbb
sub
xlat
adc
inc
push
dec
dec
arpl
cld
dec
mov
mov
in
jecxz
jge
push
xchg
push
jno
add
in
dec
and
sbb
imul
fbstp
inc
jo
push
push
cmp
div
fiaddl
cli
jge
xchg
sbb
jbe
rcrb
inc
fbstp
sbb
insb
cmc
clc
cld
scas
pop
lods
pop
jp
std
cmp
out
dec
add
movsb
add
jne
out
mov
dec
push
sub
ss
leave
popf
push
test
jmp
jecxz
push
ds
pop
mov
sub
mov
push
push
std
sbb
cwtl
cmc
pop
push
mov
sbb
arpl
pushf
xor
xchg
mov
dec
xor
repz
cmpsl
inc
jge
jb
cmp
mov
push
lea
xchg
sbbl
sbb
mov
lret
jle
dec
adc
outsl
dec
popf
in
or
ss
int
mov
stos
adc
sbb
loopne
add
loope
add
xor
sub
aaa
dec
cmpsl
push
push
xor
fs
insl
outsl
arpl
loop
sarb
xor
cld
lods
pop
push
push
sub
movsb
dec
fs
adc
inc
inc
in
lods
sbb
pop
lods
popf
sti
add
into
xor
pop
cmp
xor
inc
sti
cmpsb
add
andl
stos
aas
xchg
les
xchg
mov
cmc
xchg
jecxz
jl
mov
test
test
shll
shlb
aaa
sub
ret
fwait
adc
pop
inc
popf
cld
push
repz
sarb
pop
clc
adc
ret
mov
outsb
mov
push
mov
push
das
add
aad
out
adc
pop
mov
and
jnp
mov
stos
aam
les
cmp
insb
loope
cli
es
repnz
xchg
mov
ljmp
push
loope
pushf
mov
pop
aaa
inc
sbb
adc
mov
sbb
mov
dec
jbe
xchg
cwtl
arpl
xchg
xchg
sub
cmp
mov
jb
and
mov
in
xchg
stc
cmpsb
cmp
je
jge
les
mov
pusha
mov
pop
insl
cmp
hlt
and
push
mov
dec
mov
lret
in
xor
test
test
cltd
jmp
icebp
sahf
push
fidivs
or
jg
icebp
and
sahf
xor
scas
jl
jne
jne
mov
loope
ljmp
repz
cli
fmul
pop
iret
cli
mov
sbb
mov
mov
lahf
adc
push
ret
add
mov
push
mov
ds
mov
or
jno
jns
add
adc
stos
jbe
mov
arpl
mov
fdivrl
lret
stos
rolb
hlt
jno
dec
int
adc
fidivl
mov
inc
icebp
ret
push
stc
gs
xor
sbb
pop
call
mov
into
pop
xlat
sbb
or
push
movsb
sub
es
sub
pop
fwait
adc
shll
out
push
cmp
dec
or
mov
mov
adc
repz
push
mov
and
inc
xor
das
inc
jp
jbe
inc
dec
push
ljmp
test
mov
out
jae
push
fstp
sbb
cmp
pop
lds
pop
mov
in
mov
jne
and
jle
sbb
mov
cmp
clc
dec
xor
out
sub
mov
imul
ljmp
or
cmp
adc
out
mov
and
or
je
push
lahf
and
lods
sub
sbb
notl
data16
xor
fs
push
imul
dec
or
jne
repnz
sbb
aad
outsl
pop
add
loop
sbb
int
and
lds
pop
or
movsb
sarl
aam
jge
mov
mov
mov
aas
insb
addr16
xchg
jl
and
dec
in
mov
aad
mov
cltd
pop
in
pop
or
mov
sub
push
fnstsw
popa
insb
je
adc
mov
push
in
inc
ret
rol
repz
fcmovnb
cmp
je
icebp
xchg
add
test
loopne
shrb
or
or
pop
pop
ja
icebp
lods
push
jns
inc
xor
cmp
js
dec
jl
or
ss
add
test
adc
pop
push
adc
test
ljmp
mov
pop
xchg
fidivrl
add
cmp
pop
cltd
adc
push
xor
loope
movsb
shrl
or
lods
dec
and
mov
in
ret
int
lcall
xchg
adc
mov
mov
cwtl
stc
sub
pop
cld
out
int
sub
mov
pop
cmp
pop
mov
mov
mov
popa
mov
pop
lock
jne
mov
int
adc
rcr
test
push
dec
sbb
push
int3
adcb
es
add
fwait
rcrb
xchg
xchg
cmp
jp
cltd
push
stos
inc
mov
leave
loopne
add
mov
jmp
dec
lahf
movsb
jl
xchg
rol
add
push
leave
ds
out
fstp
sbb
push
nop
negb
dec
int3
jns
cld
dec
sub
xor
repnz
mov
or
shlb
jmp
pop
xchg
sbb
push
sbb
or
ja
ffreep
in
mov
mov
aam
shll
mov
loopne
repz
lcall
or
jo
cmp
cs
jmp
test
pop
jecxz
push
mov
daa
cmp
dec
pop
cmpl
test
repnz
movsl
xor
call
and
or
mov
hlt
cwtl
and
arpl
mov
mov
and
cmpsb
sub
xor
jle
and
divl
sahf
jle
emms
xor
ret
aaa
mov
mov
iret
stc
mov
in
out
mov
jl
sbbl
jecxz
mov
repnz
dec
jnp
add
pop
add
and
shlb
add
sarl
inc
jne
sbb
and
in
push
idivb
mov
and
lods
ret
rcl
incl
testl
cmp
dec
xor
jl
adc
dec
fs
mov
cmc
outsb
jle
lea
lods
js
mov
dec
xchg
movsl
jnp
sub
in
call
aas
mov
call
cmp
mov
fs
inc
xchg
pop
scas
ds
bound
push
xorl
mul
mov
movsl
xor
stos
jle
mov
add
repnz
adc
stc
cmpsb
filds
sbb
adc
mov
jne
andl
pop
mov
jo
aam
test
jle
dec
mov
inc
mov
test
movsb
xchg
ss
xchg
fistpl
fcomi
sbb
stos
sub
push
mov
pop
mov
sbb
mull
stc
cmp
jg
mov
and
cmp
sub
sti
pop
xorl
addb
dec
jbe
cmpsl
fdivrs
lret
fmull
push
enter
sbbl
inc
scas
cmp
xor
xor
ror
mov
and
lret
rorb
das
mov
mov
dec
jbe
stos
shll
mov
ds
dec
push
mov
aas
inc
pop
repnz
in
and
pop
push
out
repz
hlt
call
mov
mov
cli
jmp
mov
xchg
imul
mov
pop
data16
sub
and
inc
test
xor
mov
push
or
lcall
mov
dec
insl
xchg
jmp
add
fbld
pushw
and
push
add
repnz
repz
cli
mov
cs
loopne
push
test
ss
fldenv
out
jg
movb
pop
imul
cwtl
mov
mov
push
das
mov
ja
in
jle
in
cmpsl
inc
pop
cmp
shl
push
xor
les
lcall
das
dec
mov
scas
imul
xchg
push
int
andl
frstpm(287
in
out
mov
sub
mov
jbe
les
xchg
dec
pop
jle
lahf
and
lea
ret
clc
es
push
and
lahf
test
ret
iret
mov
push
add
into
mov
xor
in
mov
dec
mov
and
cmp
andb
call
cltd
in
cld
outsb
and
and
sbb
add
inc
mov
and
xchg
je
or
ss
xor
xor
pop
pop
gs
sbb
or
cli
cld
mov
dec
sub
cwtl
xor
mov
adc
int3
inc
add
cmp
aam
btc
and
jns
mov
repz
dec
xchg
sbb
mov
pop
or
cmp
out
in
xor
mov
addr16
in
xchg
xor
enter
dec
out
cmc
rcrl
add
xchg
aaa
mov
jno
mov
out
lods
stos
and
sbb
int3
dec
lret
mov
xchg
dec
cmpsl
or
jne
bnd
add
icebp
xchg
mov
cmp
mov
mov
movsl
dec
cs
repz
pop
add
xor
mov
pop
and
add
xor
addl
push
pop
mov
dec
push
adc
iret
repnz
dec
cmpsl
inc
ss
push
or
lods
daa
add
sti
sbb
and
pop
xchg
pop
cmp
xchg
cld
std
mov
or
roll
pop
stos
iret
or
xchg
push
loop
out
xor
stc
dec
inc
mov
xchg
push
or
icebp
pop
lret
lods
rol
or
aaa
add
cmpsb
int3
xchg
mov
and
fwait
ds
leave
ret
sub
fimuls
mov
popa
inc
lahf
sub
sub
popa
lahf
scas
mov
out
insl
mov
lock
xchg
add
jne
mov
sbb
jp
push
xchg
fcom
inc
cltd
mov
jl
aam
aam
jo
cmp
nop
add
fisttps
hlt
pop
jne
adc
int
mov
fxtract
in
add
data16
pop
les
xchg
scas
or
fwait
popa
inc
and
xor
stos
mov
out
shlb
addl
xchg
bound
int3
mov
push
mov
pop
pop
dec
dec
sub
mov
jp
xchg
mov
outsl
xchg
clc
mov
rcr
test
lret
push
jb
outsb
mov
sbb
xchg
sbb
xchg
xchg
into
insl
loop
sub
fnstenv
insl
sbbb
and
or
dec
and
cmpsb
sub
and
sbb
mov
andb
mov
mov
adc
js
mov
lods
sahf
mov
adc
lds
jge
push
adc
arpl
std
pop
jmp
iret
add
inc
jo
test
call
popa
loop
sbb
xchg
xchg
dec
cmp
aas
xor
ljmp
xor
scas
cmp
cmp
lock
movsl
jo
pop
and
and
notl
loope
and
sbb
cld
mov
jnp
pusha
outsl
mov
pop
pop
into
sub
in
dec
vmread
fcom
xchg
stos
lds
add
lock
push
cmp
loop
ret
sub
sub
stc
mov
in
adc
fcoml
ret
adc
jo
movsb
mov
xchg
ljmp
sbb
inc
popa
push
rorl
inc
pop
add
scas
dec
push
stos
sahf
lahf
fwait
push
mov
aam
lcall
sub
mov
insb
pop
pop
adc
adc
xor
and
pop
adc
popf
jmp
mov
mov
adc
jae
lock
pop
xchg
inc
adc
stos
lahf
sub
xor
mov
mov
push
popf
data16
jbe
push
ret
xchg
shlb
fsubrl
test
xchg
xor
test
aaa
jb
add
xor
mov
jmp
mov
fisttps
fsubs
das
icebp
push
xlat
mov
lea
dec
and
mov
mov
aaa
inc
pop
inc
lcall
in
test
add
mov
andb
mov
sbb
cmp
arpl
xchg
pusha
daa
cltd
cmpsb
lock
ret
jnp
ds
arpl
inc
inc
mov
pop
stos
sahf
repz
test
fs
xor
dec
cmp
mov
dec
dec
jo
jae
subl
mov
cltd
mov
push
ror
out
nop
das
repnz
jg
clc
dec
pop
add
xchg
test
mov
push
sbb
pop
aam
mov
pop
pop
pop
mov
jbe
out
aad
daa
sub
inc
scas
adc
pop
add
sbb
xchg
inc
adc
xorb
mov
in
sbb
insb
dec
add
adc
sub
fwait
adc
popf
mov
sarb
daa
fidivl
in
cwtl
cmp
inc
and
adc
or
or
cmpsb
fcompl
hlt
outsl
in
sahf
or
ds
stos
mov
inc
inc
shl
in
jbe
out
adcl
jge
push
popa
add
into
xor
jl
push
fs
xchg
insb
mov
lcall
enter
xchg
dec
xchg
jnp
scas
bound
sub
inc
xor
addb
addr16
js
movsl
add
mov
pop
mov
andl
and
imul
lods
insb
cmp
push
push
movsb
int
cli
sbb
movsb
mov
sti
aaa
je
push
fwait
add
xorb
jne
lcall
loope
dec
jl
jns
adc
jne
mov
lret
xor
cmc
lods
pop
leave
in
fldcw
dec
fmuls
jae
ljmp
fnstenv
adc
cli
nop
mov
mov
cltd
dec
lret
mov
mov
dec
mov
iret
mov
and
icebp
ss
into
fdiv
jne
adc
mov
repnz
pop
xchg
and
push
jg
es
es
popa
and
in
shl
movsl
and
sahf
je
ljmp
mov
dec
neg
cwtl
test
jno
or
fistps
lods
shlb
fidivs
add
subb
test
push
mov
pop
and
jb,pn
dec
mov
xlat
add
test
xor
mov
sub
mov
bound
cs
xchg
mov
inc
adc
xchg
push
out
das
pop
nop
xchg
mov
push
jno
cmp
int
push
mov
xchg
adc
push
inc
sbb
data16
dec
js
mov
add
cmp
sbb
dec
add
icebp
or
jbe
cld
dec
push
gs
addl
daa
imul
mov
inc
add
mov
leave
loop
cmpsl
and
or
sti
dec
add
rcll
popf
pop
and
lret
xchg
outsl
ret
lcall
out
es
lods
loopne
cld
mov
pop
push
popa
xchg
sbb
mov
aas
push
aam
aas
mov
push
outsb
adc
jae
into
xchg
shrb
into
into
xchg
push
adc
aam
and
xchg
je
cld
jb
dec
jb
and
std
hlt
stos
bound
fimull
outsb
out
mov
pusha
out
cmp
xlat
push
push
div
mov
jp
aaa
lods
or
lock
ret
xor
push
sbb
sub
cwtl
add
jb
ja
scas
test
ss
sub
xchg
adc
mov
mov
dec
inc
movsb
test
dec
aas
or
push
add
pop
cmpsl
js
jmp
lcall
pop
adc
sub
jle
test
push
inc
jns
pop
adc
lcall
push
icebp
cmp
xchg
ret
sub
adc
loope
in
stos
xor
repnz
in
mov
push
pop
or
xchg
bound
stos
cmpsb
lcall
lret
cs
popf
out
mull
stos
loop
out
mov
push
sbb
mov
add
adc
mov
xor
inc
pushf
jns
test
sub
js
lds
dec
insb
lods
fsubrl
cld
jecxz
out
push
les
pop
jbe
inc
cmp
cmovge
adc
push
jp
mov
mov
adcl
daa
inc
movsl
add
ret
cmc
adc
dec
int3
xchg
rcrb
pusha
imul
pop
shr
cltd
adc
or
mov
cmp
cmp
push
mov
jnp
mov
or
mov
jecxz
outsl
jns
loope
scas
repz
in
imul
cmpsb
add
ret
dec
loopne
loop
pop
and
xchg
bnd
data16
mov
inc
mov
test
xchg
fcmovnbe
in
dec
mov
adc
je
insb
cltd
adc
outsl
xchg
inc
aas
mov
xchg
jb
inc
fistl
lods
rcll
sub
repz
xor
sti
inc
cmp
mov
xchg
lret
mov
stos
and
arpl
mov
push
pop
mov
lods
pop
daa
sub
sti
mov
xlat
xor
hlt
mov
scas
cmp
bound
out
inc
inc
fdivl
icebp
outsl
loop
imul
mov
addr16
fmuls
mov
inc
mov
jno
repz
and
into
push
xor
push
cwtl
movsl
addb
out
adc
fsubrp
xchg
mov
mov
mov
aaa
mov
xchg
ljmp
mov
clc
sub
sub
push
stc
mov
mov
or
adc
push
pop
pushf
add
lods
test
adcl
xchg
les
aaa
loop
jp
sbb
lret
pushf
insb
adc
sahf
icebp
adc
arpl
xorb
mov
test
out
fmuls
pop
pop
pop
add
xchg
fsubs
fdiv
push
gs
daa
inc
jge
rcl
les
xor
mov
ss
sbb
xchg
mov
and
pop
mov
xorl
dec
les
pusha
rol
pop
pop
test
push
mov
xlat
add
fldenv
outsb
dec
cltd
or
mov
xor
push
mov
sbb
gs
xor
fsubrl
repnz
push
shlb
mov
inc
xchg
mov
fistpl
jp
xlat
popa
xor
mov
lcall
outsb
ja
pop
inc
mov
adc
ret
pop
fstpt
aas
jge
aaa
cwtl
jo
jecxz
mov
mov
jge
fwait
push
int
fdivrs
lahf
arpl
js
push
cmpsl
movsb
push
les
es
dec
imul
or
sbb
add
push
jns
das
push
cwtl
inc
and
push
sbb
in
adc
mov
adc
lret
adc
stc
inc
jl
scas
xor
loopne
mov
les
scas
in
xchg
int
xor
mov
das
cmp
out
jmp
int3
dec
fiadds
mov
dec
mov
loope
push
add
nop
and
cli
mov
xchg
out
call
xchg
or
das
dec
pop
sub
xor
arpl
xchg
sahf
les
or
jne
inc
xor
cmpsb
cmp
les
lock
ss
cmp
push
into
or
dec
sub
push
ja
mov
cmp
dec
repz
jae
bound
idivb
int
lcall
xchg
xlat
add
nop
pop
cld
adc
adc
sbb
ret
scas
sub
enter
in
dec
testl
jnp
lods
rorb
fisubl
movl
dec
scas
popa
fnsave
push
icebp
dec
btr
fdivrp
xlat
and
xchg
xchg
mov
cli
aaa
fnstenv
mov
sahf
adc
lahf
push
mov
dec
mov
sub
adc
pop
mov
xor
sbb
cld
add
cs
popf
ret
cmp
insl
jbe
mov
sbb
push
xor
cmpb
mov
sbb
xor
mov
bound
jge
je
sub
pushf
ja
dec
sbb
push
inc
jno
pop
add
repz
out
xor
ret
fyl2x
popa
push
fwait
ljmp
lods
or
cltd
push
pop
cli
jecxz
les
inc
or
and
lcall
xor
insl
cmc
insb
cwtl
jge
in
adc
xor
pop
dec
push
aad
cmc
pusha
std
push
mov
mov
sub
clc
repnz
clc
push
and
repz
out
cmpsb
and
adc
mov
push
inc
fwait
pusha
in
shlb
sub
pop
lea
mov
not
mov
rcr
xchg
lods
push
mov
ret
sub
mov
xchg
and
jecxz
jmp
sub
sub
call
popa
mov
fucomp
jp
mov
cli
aas
popf
sti
fwait
shlb
in
fdiv
adcb
jmp
aaa
pop
adc
sbb
repz
and
in
mov
fistl
leave
mov
lock
outsb
cmp
add
or
xorl
data16
jns
dec
sbb
inc
xorb
jmp
adc
sub
mov
imul
sbb
cld
sbb
adc
inc
inc
in
pusha
cmp
mov
dec
insl
dec
push
dec
ja
sahf
call
mov
and
and
mov
mov
dec
and
daa
inc
sub
test
or
mov
cmc
pop
movsl
cmc
ljmp
jns
jle
or
dec
add
inc
mov
xor
xor
lock
mov
sub
gs
xlat
mov
leave
int3
push
bound
mov
jno
or
fs
fwait
add
pusha
sbb
mov
sub
or
jg
xor
scas
jno
pop
movsl
cmp
cmp
pusha
add
pusha
inc
xchg
xchg
mov
and
xor
cmp
inc
inc
pop
sub
insl
loop
xchg
push
test
inc
ficompl
xor
and
ss
lock
push
movsb
mov
test
pop
test
mov
dec
xchg
sub
push
test
cmp
dec
arpl
jne
mov
inc
popa
outsl
xchg
dec
je
test
and
js
cs
jo
dec
jae
cli
pop
push
repz
stos
jle
push
mov
xchg
mov
mov
lds
push
sub
mov
cmpsl
out
fs
dec
add
jg
dec
and
leave
cmp
fsubs
mov
sbb
divb
xchg
popa
lods
jp
iret
push
test
mov
or
jne
into
push
ljmp
push
xchg
adc
lock
rorl
jmp
loop
push
push
icebp
and
jecxz
sbb
jmp
mov
cmpsl
lock
test
inc
cmp
insb
bound
pop
mov
ret
pushf
mov
fnstsw
push
xchg
hlt
jnp
sub
ljmp
outsb
cmp
or
cmpsb
call
xor
mov
sub
icebp
lea
ljmp
loope
jmp
pop
stc
or
cmp
call
jmp
push
jecxz
jge
clc
pop
outsb
shll
scas
fstpt
sub
sub
movsl
sti
xor
and
int3
insb
lret
bound
jle
stos
sti
jns
stos
aad
xchg
lods
dec
hlt
mov
ss
faddl
or
dec
mov
std
adc
xchg
bound
xor
dec
mov
dec
mov
inc
add
stos
daa
int
jecxz
flds
frndint
lods
jge
lret
in
sti
xchg
sub
xor
bound
lcall
into
mov
divl
into
cmp
xchg
dec
orl
xchg
push
jb
out
fs
xchg
fmull
into
push
stos
lcall
jne
daa
lahf
sbb
das
sbb
lahf
mov
push
fnstcw
mov
aaa
imul
jmp
fildl
lds
pop
jne
add
push
or
insl
pop
add
jg
xchg
push
jl
mov
xchg
into
adc
sti
fisubrs
nop
ficomps
hlt
js
jle
clc
cmp
dec
jbe
cld
push
adc
xchg
mov
push
addl
xchg
leave
mov
mov
mov
bound
inc
xor
add
push
outsb
mov
adc
loop
xor
mov
mov
xor
rcrb
psllw
inc
add
mov
cld
or
nop
imul
out
mov
inc
rclb
subb
out
mov
pop
xlat
push
sub
into
push
repnz
outsl
mov
int3
outsb
aad
jno
cld
jno
ja
push
int
and
mov
push
ss
cld
clc
cmpsl
jg
shlb
stc
addl
lcall
test
xor
mov
popa
xchg
out
dec
add
dec
mov
imul
hlt
xor
cltd
test
xchg
mov
mov
or
xor
call
mov
xor
clc
cmc
jb
cli
cmp
xchg
lea
sbb
mov
pusha
mov
in
leave
cmpsl
test
enter
fwait
xchg
mov
adc
jnp
sahf
sub
fs
inc
aas
iret
out
xlat
pop
call
dec
cmp
sub
stos
fsts
inc
mov
ljmp
pop
cld
mov
and
out
in
cmp
pop
scas
aaa
pop
jle
sahf
loop
push
fimull
xchg
mov
inc
jae
push
pop
add
adc
mov
mov
adc
std
iret
enter
test
call
dec
testl
cmp
or
mov
push
and
cld
cmpsb
xor
ret
lahf
aas
jns
xlat
xor
pop
cmp
lcall
inc
repz
fs
ljmp
adc
out
loopne
xchg
jns
pushf
mov
imul
pop
out
add
aam
js
lock
dec
scas
cmp
add
or
sub
out
mov
dec
into
mov
iret
scas
jns
popw
movsl
adc
sub
cmc
add
daa
push
and
iret
push
lods
push
mov
mov
xchg
lret
out
cmpsl
or
dec
out
xor
fs
test
dec
jge
jns
jp
and
and
mov
rcll
and
js
pop
fs
inc
xor
fcoml
daa
js
scas
loopne
out
scas
aam
fpatan
call
ficomps
adc
out
pop
out
lock
rolb
xor
add
cwtl
pop
and
pop
sub
xchg
mov
or
sarb
pop
sbb
xor
dec
jo
adc
mov
repnz
int3
stos
hlt
sbb
shll
outsl
mov
shr
in
mov
cmpsl
pop
loop
stos
xor
cmpb
jl
jns
std
insl
push
xchg
dec
inc
pusha
sbb
fs
mov
mov
les
test
gs
adcl
jmp
aas
cmpsb
addr16
test
dec
call
mov
dec
mov
mov
xor
sti
mov
andl
addr16
sti
jp
in
imul
iret
inc
and
es
push
mov
outsl
test
loope
jno
fisubs
cmpsl
lcall
sub
pop
lods
lds
outsb
rol
inc
sbb
mov
jecxz
sahf
ja
cs
stc
or
imul
imul
in
mov
jne
push
mov
pushl
adc
inc
cld
lods
popa
loope
jnp
dec
lcall
rolb
sub
jmp
fldcw
lret
stc
movsl
push
pop
repz
test
jmp
adc
mov
xchg
cmp
push
cli
ret
mov
pop
pop
fisubs
inc
adc
sbb
adc
stos
push
adc
xor
or
icebp
adc
enter
jbe
xchg
aam
mov
mov
mov
dec
and
movsb
mov
out
es
xchg
pushf
push
in
and
dec
lods
mov
lds
into
mov
mov
push
jg
roll
xchg
bound
mov
xchg
or
pop
lods
mov
xor
scas
sub
pop
mov
sub
pop
out
and
xchg
decl
adc
fisubrl
cmp
xchg
and
imul
xchg
fimull
fcmovnb
sub
mov
js
mov
mov
ret
std
push
mov
jge
movsl
jnp
sbb
insl
or
popf
std
cmp
rcll
lret
out
mov
aas
fcomip
push
in
inc
inc
push
mov
in
leave
test
mov
jp
mov
inc
jae
cs
aad
cmp
loopne
inc
in
push
test
imul
sbb
push
loopne
out
dec
xchg
adc
jne
pop
pop
push
push
lea
and
aaa
pop
scas
adc
mov
fbstp
jnp
les
lret
icebp
int3
hlt
add
test
rorl
pop
add
mov
cmp
mov
cmp
cmpb
push
test
xchg
test
dec
lods
inc
mov
or
js
lcall
movsl
leave
add
dec
pop
adc
data16
pop
test
mov
fstp
lret
sti
jno
xor
mov
repz
jae
jl
mov
jle
js
orl
mov
pusha
enter
sub
sub
and
lods
pop
and
aas
jnp
fsubrs
jnp
push
dec
cmp
imul
insb
pop
lret
mov
add
sbb
xor
sbb
mov
dec
dec
ljmp
hlt
repnz
ja
pop
xchg
stc
js
mov
or
sarl
xor
adc
in
or
add
imul
ljmp
sbb
cwtl
sub
push
add
add
cltd
aaa
mov
inc
inc
xchg
daa
hlt
mov
cmp
or
xchg
imul
and
xchg
sbb
fwait
inc
nop
xchg
inc
and
into
or
shrb
adc
enter
cmpsl
sbb
and
add
popa
add
addr16
ret
jnp
jle
sarl
das
fwait
mov
pushf
in
js
add
stc
or
lcall
out
push
aam
sahf
sub
enter
and
es
mov
les
dec
ljmp
dec
lahf
wrmsr
movsb
and
or
js
xor
popf
inc
not
in
arpl
adc
das
imul
dec
sub
cmpsl
jns
in
cwtl
inc
or
popa
daa
les
and
cld
jl
sahf
mov
or
cs
ss
dec
inc
insb
mov
lret
sbb
mov
ret
imul
add
mov
xchg
fwait
jns
pop
in
rorl
xor
xor
pop
mov
scas
add
push
fsubs
stc
cmp
cmpsl
pusha
push
cmp
jle
inc
and
in
stc
push
loope
xchg
adc
lock
adc
mov
loop
push
inc
or
test
xchg
adc
xchg
mov
pushf
in
xchg
dec
dec
cltd
push
imul
cmp
sbb
int3
loope
scas
rcr
mov
arpl
mov
lret
inc
ror
xor
xchg
cmpsb
adc
mov
arpl
ja
out
pusha
pop
xor
test
jo
lahf
pop
stos
jno
imul
es
cmp
lock
daa
adc
lea
mov
dec
dec
nop
out
test
nop
jae
mov
inc
dec
aad
and
rorl
idivb
loop
movsl
push
and
sbbb
sti
int
sub
jmp
cwtl
ds
push
adc
inc
adc
test
cmpsb
inc
xor
fxch
pop
cmpsb
and
cmp
das
loop
xchg
xchg
inc
mov
push
sbb
sub
pushf
or
fiadds
leave
xor
push
rclb
xchg
mov
pop
aam
leave
daa
dec
inc
popf
out
dec
or
dec
lock
mov
mov
inc
jbe
add
inc
fcoms
xchg
adc
cmp
bound
push
sbb
and
and
arpl
mov
jecxz
sbb
mov
xchg
cmc
mov
in
dec
or
dec
lahf
inc
xor
ja
or
jmp
or
xchg
jae
pushf
dec
fildll
pop
std
add
pop
test
add
addb
inc
mov
inc
pop
loop
mov
mov
orb
add
pop
mov
cmpsb
addr16
dec
push
cmp
mov
ljmp
call
ret
xchg
divl
mov
sub
push
movsb
fadds
cmp
and
cmpsb
ja
jecxz
dec
and
or
ljmp
es
xchg
dec
pop
add
mov
cmp
fwait
imul
scas
dec
aaa
in
fsubrs
fnstcw
xor
fwait
cmpsb
adc
fdivrl
fcomps
jecxz
lds
jo
loop
imul
xchg
roll
push
addr16
rol
lcall
add
lret
push
andb
inc
jo
or
dec
cmp
push
or
pushf
aaa
mov
or
rcrl
js
mov
scas
call
insb
jne
and
cmpsb
nop
and
inc
sbb
and
and
test
xchg
orl
xchg
test
mov
repz
rcrb
push
or
mov
mov
inc
xchg
jnp
inc
stc
std
aaa
mov
jle
mov
out
sub
mov
mov
xor
cmc
ja
ja
add
movsl
and
bnd
mov
and
mov
xchg
sub
and
and
sub
hlt
out
das
fsubp
xchg
xchg
inc
adc
cli
jnp
cltd
das
fmul
cli
add
jae
adc
das
in
xor
mov
lret
cmp
add
sbb
out
iret
inc
xchg
mov
jle
or
adc
jnp
scas
mov
dec
cmp
sub
inc
or
xchg
or
fwait
jne
mov
push
dec
out
and
cmpsb
les
addr16
inc
in
in
cmp
nop
push
aas
ljmp
fwait
les
dec
lds
or
rcrb
fwait
es
sbb
sbb
cmp
push
test
std
jbe
test
inc
or
cmp
adc
int3
ja
inc
add
or
jnp
aam
adc
push
sub
xor
ds
mov
inc
inc
movsl
add
mov
push
hlt
fadds
loop
les
in
push
mov
sub
xor
cmpsl
push
mov
push
push
sbb
lock
mov
pop
test
add
sub
call
add
cld
dec
pop
pop
sbb
dec
push
pop
mov
scas
dec
xchg
insl
add
mov
jb
mov
stos
ljmp
add
jne
pop
cmc
xchg
cmpsl
enter
sti
popf
mov
cmp
cltd
insb
jb
leave
cmp
stos
test
rcll
pop
inc
pushf
inc
imul
add
cmp
lcall
inc
arpl
je
sbb
or
push
sub
adc
mov
xchg
in
add
testl
inc
shrl
fisubrs
out
or
fsubrs
adc
sub
xchg
iret
cmc
fsubrs
es
fwait
imul
mov
mov
lock
push
jmp
iret
lock
jmp
lcall
dec
dec
imulb
sahf
out
adc
xchg
mov
call
pop
in
lret
mov
xchg
mov
mov
mov
push
std
outsl
jge
push
dec
inc
ja
jge
adc
je
inc
cmpsl
dec
cli
test
in
jbe
and
cmpsb
add
test
mov
loopne
adc
cmc
movsl
dec
and
pop
jl
pop
push
decl
sbb
js
mov
daa
xchg
cmpb
jl
push
inc
loop
lcall
pop
or
pusha
jne
sub
jg
xchg
cs
repnz
cmpl
arpl
inc
mov
sti
pop
sbb
das
mov
aam
sahf
mov
mov
jnp
inc
lahf
in
xor
xchg
pusha
loop
mov
inc
pop
sub
mov
jae
mov
fcmovu
cld
sbb
arpl
icebp
mov
jb
mov
mov
adc
clc
ds
call
xlat
fwait
aam
psadbw
lea
fwait
mov
dec
test
dec
mov
xor
sub
repz
fwait
adc
sbb
dec
rcll
jmp
pop
ss
xor
jmp
push
mov
jp
jo
das
roll
dec
push
mov
imul
mov
rcrl
cmp
test
cli
inc
je
cmp
and
int
out
pop
aas
in
imul
das
or
mov
mov
gs
sahf
and
sbbl
and
xchg
jnp
and
call
hlt
jmp
les
push
mov
jle
movb
cmp
jno
jp
divb
adc
xor
push
in
sahf
pop
pop
xchg
das
xor
cli
loopne
rclb
iret
mov
cmp
mov
adc
pop
mov
xchg
jae
jne
sbb
shrl
pop
imul
cltd
clc
out
adc
xchg
int
popa
jle
in
cli
inc
mov
movsb
push
loopne
repz
mov
pop
in
fidivrs
dec
ds
xchg
outsb
push
pop
ret
xor
hlt
pop
xor
xor
rolb
imul
ftst
stc
gs
pop
mov
out
mov
xchg
flds
jnp
push
jnp
lock
push
dec
fistpl
xchg
outsl
shlb
inc
inc
jbe
adcb
mov
push
imulb
dec
mov
adc
sahf
loopne
mov
repz
fstpl
sbb
fistl
add
insb
arpl
mov
insb
or
sahf
cmp
or
sarb
ficoms
sub
jne
rolb
enter
scas
xor
in
popf
test
or
push
sti
insb
jg
mov
dec
mov
cmp
inc
js
in
addl
rclb
mov
push
lods
sub
mov
test
rorb
std
fistl
inc
fistpll
test
xor
ret
rcr
push
push
out
push
es
sub
rolb
dec
test
mov
cmp
mov
add
mov
in
or
mov
push
ficoml
lret
rcrb
cmpl
inc
dec
sub
scas
sub
push
imul
cmp
sbb
mov
and
popf
inc
lea
pop
mov
shl
or
add
and
mov
iret
pusha
pop
jnp
rcrl
jecxz
mov
fnstsw
or
popf
add
fdivs
mov
insb
lods
aaa
sub
test
mov
int3
push
in
lret
mov
inc
out
mov
pop
stc
sbb
movsb
xchg
add
dec
add
inc
xor
lock
ss
jo
fmull
push
sub
fs
rcll
push
sbb
test
mov
xorl
mov
jo
lea
or
lret
out
jp
add
fistl
scas
filds
loopne
xor
lret
insb
add
fmul
inc
xor
imull
push
mov
ljmp
fs
jecxz
cmc
dec
pop
std
gs
push
lret
dec
push
xchg
subb
xor
sbb
test
cltd
jg
rcrl
cmpsl
out
jno
loop
mov
add
pusha
inc
ljmp
icebp
push
lahf
add
push
sbb
mov
nop
jne
je
fidivs
decb
sub
xor
xorl
sub
xor
xor
into
scas
mov
mov
dec
add
dec
mov
inc
sbb
icebp
inc
and
pop
adc
fldl
add
dec
cmp
jmp
add
mov
xchg
mov
add
add
ret
arpl
lods
inc
movq
cmpsl
mov
and
loop
ja
or
ret
sub
xchg
push
inc
loope
pop
popl
pop
push
xor
mov
dec
ret
inc
and
dec
add
fs
fidivl
xchg
sub
rorl
rorl
rcll
cltd
bound
aaa
fwait
rcrl
inc
popa
adcl
xor
lcall
test
call
jns
cmp
iret
or
xlat
subb
imul
cmc
imul
adcb
xchg
inc
pop
inc
imul
icebp
add
fcomp
movsb
mov
and
dec
movsl
add
lret
xor
js
push
push
sub
jo
jg
dec
xchg
das
add
insl
sbb
ret
add
shr
adc
sub
mov
lock
dec
cld
icebp
mov
rcrw
imul
gs
insb
aam
push
dec
push
sub
int3
and
outsb
xchg
stos
or
xchg
sbb
cltd
xor
mov
push
mov
movsl
mov
sbb
or
pop
out
inc
push
push
insb
imull
cwtl
sbb
xchg
and
adc
out
jle
repz
icebp
popf
jae
add
jmp
inc
les
int
sbb
jg
jnp
jo
je
mov
pop
sub
rolb
js
shrl
lods
sub
std
push
je
dec
mov
lret
mov
in
pop
decb
mov
cmpsb
pop
lods
dec
stos
jp
add
xlat
bound
push
adc
lea
add
cmp
pop
es
ficomps
negb
dec
mov
xor
jbe
movsb
sbb
loop
pop
cmp
inc
aas
pusha
cli
fs
xorb
test
fisubrs
jg
adc
movsl
adc
lock
stc
xchg
pop
mov
pop
int3
xor
dec
and
xor
xor
cmp
outsl
lcall
sbb
xor
mov
mov
js
mov
dec
jns
or
jne
dec
xor
sub
mov
adc
mov
shlb
push
dec
out
xor
and
sub
dec
jae
jno
jne
pop
sbb
inc
xchg
clc
adc
data16
or
std
mov
cmpsl
push
add
xor
mov
push
lods
dec
mov
mov
movsb
xor
push
les
adc
mov
push
jp
lea
jle
rcpps
test
dec
ljmp
dec
xchg
jle
test
movsbl
adc
and
scas
push
inc
lock
jne
into
shl
xlat
adcb
cmp
inc
out
adc
and
cmp
ret
inc
gs
iret
mov
push
outsb
repz
ret
cmp
ret
dec
dec
jecxz
test
shlb
fs
cwtl
insl
jle
out
adc
push
jge
xor
roll
fnstenv
push
idivl
push
dec
pop
mov
stos
or
adcl
in
stc
jbe
pop
mov
xchg
outsb
cmpl
pop
rcrl
pop
repnz
mov
jo
scas
cltd
cmp
je
push
out
fsin
xchg
js
test
scas
clc
adc
jg
cmp
jns
jg
clc
push
inc
imul
pushf
out
push
adc
cmp
ds
cmp
jne
fisttpll
ja
in
push
lock
repz
arpl
sub
fnsave
jge
cltd
push
iret
iret
cmp
aaa
or
icebp
xlat
adc
jmp
das
sub
fucomi
cmp
pop
pop
push
aad
jmp
push
pop
movsb
ljmp
and
jnp
lods
lea
cld
or
push
mov
leave
push
scas
cli
dec
push
mov
inc
xchg
pop
add
js
cld
add
cli
sub
xchg
xchg
dec
scas
cmp
bound
xor
fwait
decl
stos
loop
int3
fdivs
pop
dec
xor
sarl
push
mov
and
test
and
arpl
js
cmpsl
orb
lods
cld
adc
lock
sbb
mov
adc
loop
insl
jecxz
scas
repnz
or
es
mov
jge
jbe
clc
or
or
mov
call
test
or
test
test
jecxz
jle
ret
in
xor
pop
fisttpl
or
dec
mov
shrb
in
or
and
sub
stos
mov
pop
subb
or
pop
andb
enter
aad
daa
inc
stos
mov
and
inc
shrd
movsl
or
push
shlb
arpl
insb
outsl
test
rorb
push
outsb
mov
fnop
jle
or
in
int3
iret
insb
inc
insl
pop
push
mov
sahf
adc
dec
xor
pusha
int3
in
mov
cld
test
mov
pop
movsl
inc
xchg
fnstcw
insl
in
vmovmskps
out
int3
dec
sub
mov
xchg
out
mov
dec
adc
mov
and
stc
sbb
mov
test
je
adc
enter
mov
push
adcl
cld
out
mov
sbb
scas
sahf
jb
popa
jle
aaa
mov
movsb
add
popf
or
fcompl
xchg
mov
movaps
out
jnp
pop
pop
mov
pop
scas
vpmacsww
call
lds
push
xchg
das
lcall
and
jmp
xchg
mov
sbb
adc
dec
fwait
cmc
cli
in
icebp
fadd
je
mov
or
mov
add
cli
int
mov
rorb
arpl
sub
movsl
mov
mov
pusha
lds
fst
out
js
mov
sub
mov
dec
ljmp
int
mov
sbb
push
mov
inc
scas
in
leave
pop
lret
xchg
mov
xlat
jecxz
pop
into
inc
or
push
inc
mov
repz
psadbw
lret
or
aas
add
scas
mov
mov
ja
add
es
test
int3
jbe
nop
adc
fwait
jbe
mov
test
sub
movsl
stos
push
jp
out
popa
imul
lods
jge
inc
push
jno
jg
cmc
inc
lea
push
sub
lods
jne
or
std
outsl
orb
inc
inc
jo
mov
lea
test
std
xchg
cmc
nop
sti
fstpl
xchg
cmp
sub
and
mov
jle
and
push
hlt
mov
outsl
aaa
inc
add
iret
inc
push
stc
iret
pop
jg
fbstp
cmp
arpl
leave
or
add
icebp
ret
mov
pop
notb
fs
int
push
mov
in
inc
push
or
inc
stos
es
data16
or
inc
hlt
jmp
xor
sub
add
pop
inc
into
adcl
int3
fidivl
sub
xchg
mov
lods
aad
outsl
sub
mov
imulb
pop
cmpsl
mov
lahf
insl
push
xor
mov
fst
add
push
jb
int
ret
sbb
inc
insb
or
jne
cld
or
and
jl
insl
push
or
nop
xor
insb
xorl
jbe
out
cmp
xorb
leave
inc
dec
dec
roll
push
enter
aaa
mov
push
roll
push
mov
sbb
inc
adc
adc
mov
xor
mov
cmp
cmp
sbb
mov
jo
jp
and
cwtl
in
mov
jg
adc
or
mov
mov
arpl
add
cltd
push
jl,pn
data16
and
sahf
je
divl
movsb
imul
sub
mov
push
mov
lods
or
cli
cs
sub
pop
jns
adcl
sub
push
inc
movsl
imul
and
lds
jb
jecxz
js
pop
and
repnz
fnstsw
jmp
push
gs
mov
add
lods
aad
loopne
jecxz
mov
xchg
outsb
adc
mov
sub
test
push
jne
inc
cmpsl
shrl
inc
and
mov
enter
or
pop
mov
into
ljmp
adcl
in
int
mov
sarl
lcall
movsl
mov
pushf
lcall
sbb
or
out
lret
cmp
std
pop
dec
pop
adc
cmp
mov
mov
and
dec
inc
mov
mov
dec
test
imul
fstps
push
push
mov
fdivr
pusha
xor
cs
pop
stos
add
loope
pusha
adc
imul
push
mov
mov
lcall
addr16
sub
mov
sbb
mov
push
mov
in
fnstcw
leave
popa
jmp
arpl
adc
in
jno
cwtl
mov
iret
cmp
dec
xchg
lea
dec
std
xchg
lcall
or
and
mov
addr16
gs
sbb
sub
idivl
jg
sub
mov
psraw
lea
ss
xchg
call
cmp
mov
and
jo
sub
call
or
xor
push
pop
int3
mov
mov
iret
add
jnp
stos
lods
cltd
mov
jg
jne
inc
out
pop
push
inc
mov
push
loop
mov
mov
mov
jmp
push
xchg
popf
pop
test
in
iret
out
or
fsubl
adc
sar
mov
sbb
fisubs
outsb
rcrb
mov
cmc
and
add
lea
std
adc
aad
gs
cmp
xor
lds
dec
cltd
and
fs
mov
push
mov
loopne
push
cli
jecxz
xor
test
xchg
scas
pop
jno
loopne
nop
inc
or
sbb
dec
sub
cli
cmp
popf
jecxz
pop
push
sub
dec
or
push
aam
xlat
insl
outsb
mov
or
daa
jmp
pop
fldl
hlt
mov
jg
enter
pop
and
push
test
adc
add
mov
jb
pop
test
and
sbb
mov
mov
decb
je
cltd
fsubl
stos
je
cwtl
std
je
push
pop
insb
or
stc
xor
inc
js
and
mov
cmp
adc
push
mov
jno
mov
mov
mov
mov
sbb
movb
or
mov
pop
mov
pop
dec
sbb
push
or
mov
add
aad
lods
je
xor
cli
push
push
movsb
inc
loop
rorb
cmp
mov
shll
add
push
mov
stos
hlt
jno
ljmp
popa
jne
aas
xor
cmp
frstor
push
out
xchg
cli
xor
lods
cmc
cld
cpuid
jp
jo
repz
inc
sbbb
bound
xchg
lock
es
dec
pop
dec
sti
lahf
xchg
sahf
fdivs
xchg
push
pop
lret
add
pop
cmp
movsb
test
cmpsb
cmp
mov
mov
lret
mov
fdivs
cmpsl
pushf
dec
sbb
sub
inc
jbe
dec
adc
cld
outsb
addr16
mov
divl
push
scas
xchg
mov
aas
mov
sti
xor
fsubr
pop
sarb
sub
fiadds
sbb
lods
js
mov
add
js
leave
push
xchg
dec
add
mov
cmp
add
and
and
mov
mulb
popf
ds
std
sbb
dec
jg
dec
sub
mov
push
jbe
enter
mov
daa
lds
push
arpl
rolb
shlb
rolb
add
pusha
lahf
mov
test
bnd
movsl
and
pop
je
push
pop
andl
mov
inc
rcll
mov
jb
fisttpl
jns
cmp
test
in
iret
dec
rolb
js
xchg
or
sbb
cwtl
test
dec
sub
fs
je
lcall
sbb
rcrb
jg
repnz
leave
jae
clc
bound
adc
sbb
fcmovnb
gs
shrl
enter
xchg
xchg
popa
in
in
add
test
xchg
negb
xor
rcr
or
pop
ds
scas
hlt
sub
bound
popf
adc
mov
out
and
jle
lcall
mov
nop
or
lods
pushf
or
or
xor
in
adc
loopne
retw
xor
and
or
cmp
jl
adc
insl
and
aaa
inc
aas
clc
mov
mov
movsb
mov
pusha
lret
insb
notb
or
jne
movsb
mov
out
add
sub
mov
das
dec
jecxz
mov
mov
adc
stc
aas
push
lock
repz
mov
pop
sbb
nop
mov
in
mov
js
add
dec
fs
jns
inc
fists
movsl
or
incb
xchg
and
fdiv
movsb
push
es
movsb
adc
inc
sub
ljmp
popa
ljmp
nop
dec
shr
ja
xor
cmpsb
lahf
iret
add
insb
lods
iret
or
sub
fildl
or
test
xchg
and
jmp
dec
mull
cmp
dec
fstp
gs
or
fsub
test
addb
xor
aam
int3
loopne
fimuls
add
sbb
adc
jns
ss
popf
mov
sbb
mov
lret
xor
lret
sub
fs
dec
cmpsb
pop
mov
decb
js
aad
and
popa
mov
pop
jno
sbbl
xor
push
pushf
clc
adc
or
fisttps
jle
xor
fisubrs
popf
jno
pop
pop
sub
mov
jge
outsl
or
mov
xor
xlat
faddl
sbb
inc
test
lret
pop
ss
into
jmp
xor
push
mov
push
dec
xlat
dec
in
xchg
in
xor
lcall
arpl
mov
cmp
mov
pop
adc
inc
repz
ficoms
sub
xchg
out
mov
sbb
subb
and
testb
push
test
sub
add
adc
adc
inc
aas
loopne
fisubl
pop
out
mov
pop
leave
fbstp
push
pop
or
xchg
out
fstpt
cmpsl
call
sarb
xor
sub
test
sbb
mov
rcrb
outsl
jne
xlat
jp
js
cmp
jne
fcmovu
pop
jl
sub
ss
incl
mov
mov
pop
arpl
xor
sub
stos
xchg
and
inc
fsubr
fs
jo
cli
js
jnp
ss
rclb
fstpt
popa
enterw
push
es
pop
imul
xor
clc
rorl
pop
push
add
hlt
in
sub
jle
pusha
scas
adc
dec
pop
cli
pushf
std
push
adc
pop
pop
jns
fs
lret
xlat
arpl
sub
ss
mov
arpl
stos
outsb
dec
dec
movsb
cmpsb
in
sub
jle
sahf
or
outsl
or
add
cmp
adc
inc
jo
dec
xchg
xor
and
subb
leave
pop
jmp
daa
outsl
jmp
jmp
add
push
push
bnd
cmpsb
sub
sahf
cld
mov
pop
jmp
xchg
clc
jge
dec
xchg
push
sub
mov
sbb
out
add
int
and
and
lret
jbe
fnstcw
jecxz
sub
pop
dec
aas
sbb
jle
jp
adc
mov
mov
lret
div
mov
xor
sbb
int
popf
ss
xchg
dec
addr16
inc
sti
fcmovbe
push
or
int
pop
xchg
shll
inc
ret
push
pop
inc
jecxz
shll
imul
and
pop
inc
rorl
sub
sub
pusha
cli
mov
hlt
pop
or
aaa
xor
push
xor
je
and
mov
insb
sarb
mov
js
stos
push
mov
inc
bound
xchg
rorl
jae
push
add
inc
push
inc
dec
dec
andb
test
arpl
fs
aas
xor
gs
mov
pushf
pop
lods
cmp
sbb
pop
mov
mov
sub
inc
ret
ficoms
repz
adc
pop
mov
mov
bound
pop
inc
lahf
dec
add
in
iret
out
jne
test
aaa
inc
jb
add
jle
movsb
mov
addb
adc
int3
or
out
adc
pop
dec
cld
leave
push
movsl
addr16
xchg
jb
loop
cmp
sub
add
mov
inc
mov
fs
xor
xchg
in
mov
addl
push
mov
jne
test
stc
in
mov
lock
adc
idivl
inc
sbb
sub
xchg
inc
arpl
lea
stos
dec
daa
adc
out
dec
sbb
cmp
mov
pop
ret
jecxz
mov
in
jle
push
shl
imul
cmp
loopne
jl
xchg
jnp
xor
nop
xor
xchg
imul
sbb
lret
popl
sbb
xor
js
jbe
mov
jp
lret
in
sbb
cmp
mov
add
adc
cmp
imul
lock
movsb
pop
and
imul
ret
jg
lret
jge
pop
imul
cmp
push
lahf
sarb
sub
or
in
sub
add
shlb
hlt
int
adc
jle
test
dec
push
movsb
aam
test
cmp
inc
test
fldcw
inc
mov
loopne
add
arpl
rcrl
jae
jl
decl
movsl
imul
push
mov
and
int3
in
cmp
andl
pop
sub
cmpsb
jo
jp
mov
mov
add
pop
cmp
imul
je
nop
aam
jmp
mov
sbb
sbb
test
dec
jno
leave
scas
add
in
add
lret
cmp
jno
jge
sbb
inc
mov
adc
jg
ror
cmpb
frstor
push
data16
movsb
popf
nop
movsl
or
leave
sub
mov
addr16
sbb
mov
jl
outsb
cmp
movsb
sahf
pusha
push
push
xorb
xchg
ljmp
sar
scas
xor
jo
dec
lds
pop
mov
out
cmp
push
jno
stos
cmp
in
push
imul
push
cmp
lds
push
rolb
mov
and
shrb
sub
mov
cmpsb
sbb
mov
das
hlt
and
gs
dec
inc
jecxz
loopne
pop
mov
setge
or
xchg
dec
adc
push
xor
dec
bound
ret
mov
cli
les
and
repnz
inc
arpl
pop
pop
dec
mov
pusha
daa
xchg
xchg
xchg
notb
mov
fcoml
add
xor
pop
add
std
addr16
push
and
aas
sub
inc
pop
and
sbb
imul
movl
xlat
lret
sbb
or
out
mov
imul
mov
adc
xor
jne
loopne
movsl
mov
lret
movsb
push
leave
int3
test
sub
out
xchg
je
or
pop
inc
lret
jge
pop
pop
dec
leave
insb
push
pusha
into
sbb
scas
mov
mov
shrb
lcall
inc
loopne
outsb
mov
lret
fstpt
sbb
adc
cwtl
sub
addr16
push
js
lcall
jo
shlb
std
dec
and
daa
fwait
iret
mov
rcll
xor
mov
imul
mov
and
divl
jns
jae
xchg
movsb
sub
mov
or
add
test
sbb
or
lea
inc
add
xchg
je
dec
inc
repnz
icebp
rcrb
and
sti
stos
ljmp
push
jg
sbb
inc
enter
push
dec
cmp
popa
enter
rorb
test
and
add
cmpsl
std
lds
es
or
xchg
popa
mov
test
mov
lds
fcoms
mov
inc
lret
and
cmp
or
in
xchg
nop
mov
xor
imul
data16
cld
movsb
push
add
or
in
push
fcomps
jmp
outsl
loop
pop
repz
icebp
and
add
or
xchg
popa
and
xor
jbe
sbb
clc
push
shll
inc
mov
sbb
imul
fldl
dec
fnstenv
adc
dec
adc
adc
xor
or
hlt
push
addr16
pusha
push
sub
imull
mov
cmp
pop
aaa
adc
test
out
pushf
js
mov
sbb
and
stc
adc
dec
es
jno
xchg
jmp
hlt
adc
scas
movsl
pop
je
and
mov
xchg
adc
sub
mov
cmpl
in
inc
inc
or
mov
cmp
lret
mov
sbb
cmp
js
lds
mov
sub
sbb
adc
pop
stos
xlat
cmp
xchg
outsl
addb
adc
insb
iret
mov
in
shll
rcll
xchg
push
adc
cmc
push
add
push
sti
jbe
loopne
stos
stos
ret
pusha
dec
jle
cmpsb
push
xchg
lock
sbb
inc
adc
aad
cmpsl
sbb
stos
pusha
jge
mov
fs
adc
mov
xor
mov
cmp
jne
cli
xor
pop
cmc
mov
and
mov
out
lods
stc
dec
inc
repnz
nop
sub
repnz
pusha
loop
loope
mov
mov
std
pop
adc
and
or
ret
subl
inc
mov
cmp
xorl
inc
lahf
mov
ljmp
sub
cmp
mov
lods
xor
jbe
xor
xor
cmp
xchg
std
test
jno
jl
and
mov
push
enter
mov
dec
xchg
in
out
movsb
xorl
mov
add
mov
mov
adc
addl
rcrl
repnz
jge
cli
out
pop
xchg
or
shrb
out
mov
xor
push
fidivs
cwtl
cld
orl
orl
out
push
or
mov
outsl
xor
mov
scas
push
jecxz
mov
inc
outsb
lahf
sbb
in
add
add
cmp
loope
fbstp
cs
inc
or
fisubl
int3
cmpsl
sbb
cmp
lahf
cmp
cmpsl
cli
xchg
fnstenv
push
dec
aad
xchg
test
shlb
ret
fdivr
xchg
out
testb
sbb
out
in
mov
mov
mov
lret
lret
jae
ja
mov
lds
mov
push
jmp
lds
dec
mov
dec
rclb
outsb
inc
xchg
dec
jbe
push
cmp
dec
and
loopne
sbb
mov
push
loop
xor
subl
xchg
sbb
mov
mov
mov
inc
sbb
mov
sub
xor
lods
lods
rol
pushf
subb
enter
cmp
xchg
insb
fnstsw
pop
icebp
mov
inc
adc
arpl
cmp
cmp
jecxz
xchg
and
jae
out
stos
sbb
pop
and
cs
in
rcll
aas
pop
xor
push
out
mov
or
sub
lods
jecxz
mov
xor
mov
aas
pushf
loop
fsubp
clc
lea
jae
in
ljmp
scas
push
dec
repz
cmp
js
test
xor
jl
xchg
das
popa
mov
lret
pop
inc
repnz
xor
xorb
dec
dec
fcoml
inc
mov
mov
and
xor
pop
pop
flds
inc
xchg
cmp
push
mov
fs
jns
mov
fisubrl
imul
dec
jp
inc
pop
dec
jecxz
mov
pushf
push
xor
add
inc
jmp
js
aad
adc
adc
jae
fdivrs
pop
jne
cltd
mov
push
mov
loopne
popf
jne
enter
mov
cmp
in
push
mov
jne
mov
mov
pop
dec
mov
jnp
pop
sbb
xor
arpl
or
adc
cmp
push
or
mov
jb
xchg
mov
negl
loopne
xor
fbstp
enter
sbb
jnp
gs
repz
pop
and
push
out
cmp
cmpsl
fadd
fldt
push
fmuls
lret
out
or
pop
add
xchg
fisttpl
mov
mov
adc
dec
inc
js
xor
mov
pop
test
xchg
nop
outsl
sbb
inc
lock
mov
scas
in
into
repz
xchg
sub
xor
js
and
pop
and
out
out
add
sub
push
ret
xor
pop
iret
movsl
cmp
lods
mov
orb
xor
stc
es
notb
add
inc
xchg
push
test
dec
scas
or
sbb
addr16
in
or
outsl
xchg
pop
sbb
or
in
cmp
popa
pop
add
enter
imul
fistl
pop
push
test
popl
shrl
sub
jno
ljmp
mov
push
movsb
push
test
pop
mov
xor
movsb
into
imul
sbb
push
adc
add
jg
out
adc
and
scas
and
ja
xchg
jne
mov
jl
imul
div
lahf
stos
fs
test
xchg
repz
xor
pop
pop
cmp
or
pop
inc
cltd
mov
xchg
subb
sbb
les
pop
movsb
pop
lcall
push
aas
add
icebp
sbb
ret
pop
dec
push
int
les
mov
push
jg
stos
adc
int
or
enter
ret
lcall
std
mov
js
cs
bound
lods
sub
enter
arpl
sub
cmpsl
inc
aaa
in
xchg
cmc
jns
jnp
and
dec
daa
jle
das
or
or
shll
enter
mulb
popl
sbb
jge
int3
or
jno
ss
jae
int
dec
out
into
and
outsl
sbb
inc
stc
mov
jecxz
jnp
mov
je
out
rclb
mov
mov
add
rcl
inc
int
push
stos
scas
or
mov
mov
adc
pop
or
mov
enter
push
test
and
imul
xchg
dec
clc
and
das
in
sbb
outsl
push
insl
xchg
aaa
lret
cmpxchg
pop
sti
jge
mov
fsts
insb
imul
push
jns
or
stc
insb
ret
pop
push
and
loopne
sbb
jno
pop
popf
or
xchg
add
jo
xor
imull
out
in
xor
stos
test
lret
xchg
cmc
mov
dec
xchg
mov
mov
xchg
adc
sub
xor
mov
sbb
repz
and
sbb
xchg
mov
stos
test
xchg
cwtl
cmp
pop
ljmp
mov
jb
frstor
xchg
scas
cmpsb
out
lods
out
or
push
and
or
dec
imul
inc
mov
stc
sub
mov
jmp
inc
in
jns
clc
sbbb
rcr
popf
xor
fistpl
inc
and
incb
cmpb
ds
iret
ret
jp
jne,pn
push
mov
lret
mov
push
daa
push
in
shlb
dec
xor
jb
es
adc
sbb
inc
cltd
adc
dec
enter
js
mov
add
dec
int
cltd
pop
ss
nop
stc
addr16
mov
popa
xor
sub
imul
dec
fdivrs
mov
inc
push
ss
lods
inc
dec
lds
addr16
inc
jp
lds
mov
sub
aaa
mov
insl
cli
rcrl
test
sub
push
sub
jecxz
cmp
xor
nop
mov
cmp
sbb
pushf
pop
mov
mov
outsb
xor
scas
sbb
xchg
pop
push
or
iret
repz
xor
mov
xchg
filds
repnz
negl
mov
mov
and
imul
movl
mov
out
inc
xchg
jae
dec
cmp
sbb
sub
dec
and
pusha
inc
rdpmc
cmp
dec
mov
pop
xlat
xchg
test
lods
aaa
popf
adc
add
push
pop
dec
int
xor
dec
mov
push
and
loopne
in
pop
sub
push
pop
inc
aas
test
ljmp
cmp
addl
inc
cmc
rcrb
xchg
lret
mov
in
pushf
nop
scas
jbe
add
or
sbb
and
inc
sbb
or
insl
lret
adc
hlt
pop
stc
mov
scas
jne
out
or
repz
icebp
insb
push
cmp
push
lret
cmp
div
xchg
popf
bound
push
fldt
mov
clc
or
loope
ss
enter
jp
or
pushf
push
push
push
fcoml
jb
pop
mov
inc
mov
shll
leave
insl
mov
popf
or
pushf
or
mov
mov
testl
xchg
pusha
rcll
cltd
sub
sbb
sahf
pop
jp
leave
mov
ljmp
dec
xchg
jecxz
icebp
mov
ret
cmp
and
sub
xchg
fidivrl
inc
mov
push
jg
mov
popf
push
cmp
lods
rcl
lcall
jo
into
add
stos
ret
js
test
mov
add
and
mov
mov
mov
push
sub
pusha
test
shrl
push
shll
cmp
dec
cli
stos
dec
adc
cwtl
push
inc
idiv
stos
dec
aas
sbb
stos
sbb
jo
sub
push
jno
pop
push
addl
sub
insl
stos
xor
xor
dec
movsb
mov
mov
mov
jno
sub
cli
sub
mov
jne
sti
push
adc
pop
pushf
xchg
loopne
mov
or
roll
push
xchg
add
dec
inc
ss
push
adc
test
rcrb
out
pop
cmpsl
lods
or
cli
jmp
pusha
insl
adc
push
dec
sbb
mov
data16
and
mov
addb
jo
mov
or
pop
inc
sbb
mov
pop
adc
and
sbbl
aaa
xchg
cmp
dec
cmpsb
push
or
or
jmp
inc
mov
inc
pop
sbb
add
and
sbb
mov
popa
loope
sub
mov
cld
and
pop
or
lret
mov
push
push
adc
bound
lret
imul
flds
add
mov
cmp
daa
cmp
mov
add
lea
push
mov
lock
xchg
mov
dec
and
repnz
mov
xor
xor
out
in
inc
xor
xor
or
fbstp
in
push
push
ret
mov
mov
cmp
push
xchg
leave
loope
push
sarb
arpl
test
and
repnz
ficoml
or
cmp
out
in
rcrb
jmp
stc
gs
sti
dec
es
add
fnstsw
into
inc
js
sbb
lds
jbe
inc
mov
xlat
jmp
xor
icebp
cltd
addr16
out
pop
push
pop
xor
in
popa
push
xor
lret
es
mov
cmpl
test
inc
and
fldcw
insb
pop
inc
fwait
out
push
mov
dec
jge
ljmp
mov
es
push
popf
test
sahf
cs
mov
xchg
jp
scas
ss
mov
nop
inc
pop
fimuls
push
std
and
dec
cmp
fstpl
jecxz
es
enter
or
mov
and
mov
mov
mov
dec
mov
push
jge
enter
or
dec
mov
add
call
fidivl
cmp
cmp
sub
lods
scas
nop
pusha
pop
or
mov
cmp
addl
and
lds
hlt
sbb
cmp
movsb
dec
xchg
mov
xchg
mov
mov
sbb
pop
lahf
push
subb
rol
stos
pop
xchg
shlb
mull
mov
aas
adc
add
adc
add
sub
mov
push
push
xchg
or
cwtl
jecxz
mov
rcll
movsl
jnp
mov
cmpsl
mov
insl
jnp
pusha
mov
ja
cld
sti
adc
fwait
mulb
data16
mov
jae
push
or
mov
js
mov
cmp
jg
add
inc
sbbl
lea
movsl
or
xor
movsl
pop
add
mov
jg
sbb
jnp
aad
inc
jno
subb
jmp
ljmp
cmp
repz
stc
cs
daa
mov
lds
mov
mov
idivb
enter
dec
in
clc
mov
loope
dec
xor
clc
jl
jge
mov
cmp
imul
adc
pusha
or
pop
push
add
jb
dec
jae
fxch
push
mov
jl
sahf
andb
mov
push
add
in
fsubl
mov
pop
push
cmp
sbbl
ret
mov
add
inc
pop
clc
mov
pushf
sub
aaa
inc
addr16
mov
or
mov
cmpsb
fsts
movsb
adc
cmp
cmp
push
xchg
jecxz
loopne
out
sbb
lret
mov
cli
shr
mov
pushf
repnz
inc
jle
dec
sbb
insb
decb
push
std
hlt
xchg
icebp
jp
or
les
idiv
xor
imul
adc
pop
sti
push
lret
xor
out
jl
icebp
cmp
aam
or
push
cltd
ds
lods
pop
std
jg
lret
xor
or
outsb
out
dec
xor
dec
imul
loopne
clc
scas
push
mov
popf
mov
fisubl
jne
sbb
testl
sbb
inc
inc
and
std
cmc
mov
pop
push
loop,pn
mov
jb
inc
xor
ret
lods
enter
mov
push
out
jecxz
repz
fdiv
or
jnp
mov
mov
mov
cmp
jecxz
icebp
push
enter
xchg
lahf
xchg
imul
jecxz
lods
ljmp
hlt
rorb
stos
inc
movsb
jnp
pusha
fcomi
sub
jecxz
pop
xchg
popf
xor
icebp
pop
or
outsb
out
sub
and
lret
rclb
fildll
movsl
push
dec
sbb
test
sbb
data16
mov
mov
scas
int3
nop
outsl
jge
test
and
test
adc
lret
jge
aaa
mov
xor
mov
sbb
pop
xchg
ss
das
inc
scas
nop
and
call
push
fisttps
dec
fcmove
jno
and
clc
push
lea
jbe
shll
mov
lods
xchg
or
mov
shrd
or
jbe
jbe,pn
pop
inc
add
and
repz
test
add
cmpsl
loope
and
je
adc
ljmp
rclb
lcall
inc
ja
movsb
test
imul
sbb
in
lock
movsl
jo
mov
jne
inc
into
and
mov
xchg
sbb
add
sub
cltd
push
mov
sbb
dec
movsl
int
inc
mov
imul
cs
dec
push
mov
push
and
test
out
shrb
fldl
or
jl
push
leave
lret
movsb
add
stc
cmp
mov
jl
cmpsb
mov
mov
imul
or
pop
sub
fcoml
jg
mov
pushf
addb
mov
and
xchg
inc
dec
inc
xchg
sahf
clc
dec
push
mov
ret
jmp
orl
mov
sub
rcll
push
shl
ds
jle
pop
and
mov
shlb
pop
clc
lahf
xchg
mov
fidivrl
roll
lods
bound
cli
lcall
shr
cwtl
pop
lock
gs
shll
mov
popa
insb
pop
scas
rcll
leave
divb
cli
xchg
es
lret
push
inc
fnsave
and
bound
shrl
arpl
jnp
in
mov
stos
lods
or
xchg
lahf
push
js
xlat
xchg
fbstp
xchg
lods
inc
sbb
mov
mov
imul
inc
stc
dec
addr16
xor
or
out
mov
ficompl
inc
xchg
pop
aam
xchg
xor
mov
or
xor
adcl
inc
lcall
outsb
adc
dec
cmp
out
loop
pop
cmp
cli
xor
jbe
jno
orb
in
push
and
mov
shlb
stc
sub
push
in
fstpt
xchg
fwait
xchg
dec
rorl
lds
xchg
jb
dec
enter
xor
hlt
test
add
out
mov
pop
iret
popl
jnp
mov
sti
push
ljmp
xchg
test
add
and
jecxz
adc
and
push
clc
jmp
popa
clc
into
into
cmp
daa
ffree
scas
loopne
fisubrs
fwait
jg
or
aaa
sbb
stc
adc
adc
jnp
xchg
sub
testl
inc
pop
les
aas
adc
dec
push
jge
int3
sbb
push
popf
paddb
sarl
and
pop
stc
stos
mov
lahf
cli
inc
outsb
push
xorl
mov
sahf
pop
add
bound
fcompl
loopne
cmp
into
sti
sub
cmp
xor
push
xchg
sub
add
push
push
xor
and
push
ja
adc
mov
push
cmc
xchg
pop
mov
inc
sahf
mov
mov
lods
lock
fs
loop
negl
pop
or
push
sti
rclb
shrb
subb
pop
fimuls
daa
mov
and
fcmovnbe
xchg
jle
jb
pushf
in
es
lcall
mov
cmp
ret
mov
dec
mov
jbe
test
cmc
sbb
adcl
pusha
cmpsl
rcrl
pop
ss
or
js
insl
cmp
arpl
inc
xchg
mov
push
stc
adc
pop
ljmp
test
mov
pop
jae
add
pop
cmp
sti
xor
das
xor
leave
push
addb
mov
lcall
popf
inc
les
and
sbb
cmc
xchg
scas
add
add
sbbl
cmpsl
push
fidivrl
dec
rcr
iret
fs
mov
jnp
mov
mov
push
shll
xchg
daa
lea
and
fnsave
js
or
pop
pop
pop
stc
xchg
jecxz
add
dec
xor
inc
ds
mov
push
pop
std
lahf
shll
pusha
xchg
outsb
inc
adc
movb
or
and
mov
adc
jnp,pt
imul
xchg
bound
sbb
in
push
dec
in
aad
sbb
dec
add
add
mov
cmc
xor
mov
daa
pop
push
push
mov
arpl
imul
xor
dec
or
rcll
ficoms
iret
or
push
sub
xor
dec
stos
data16
dec
aam
in
xchg
das
pop
and
outsl
mov
les
mov
mov
pop
jne
pop
add
pop
enter
insb
pushf
dec
loop
and
sbb
rorl
aas
or
push
pop
sbb
ds
mov
add
call
xchg
out
ss
mov
testl
imul
addr16
push
adc
jg
mov
push
outsl
xor
cmp
sbb
jmp
negb
dec
push
popa
cmpps
dec
mov
aas
mov
in
and
stc
inc
sti
lahf
push
xchg
push
cmp
sarl
or
cwtl
push
cmp
cmpsl
push
fsubrs
or
push
pop
das
sub
sub
shlb
pop
iret
pop
sub
push
fdivs
or
jg
cltd
push
ja
or
repnz
in
lods
push
inc
and
xor
fs
ficoml
and
test
ss
dec
dec
pop
lock
cs
adc
cmp
adc
sub
or
mov
xchg
out
jp
push
dec
andps
xchg
push
mov
add
jmp
dec
push
addr16
imul
and
orl
pop
and
dec
lret
lods
mov
fsubrs
push
fcmovnbe
std
icebp
lea
push
loopne
cmp
cmp
inc
xchg
lret
pop
hlt
aad
add
fcoms
push
cmp
xchg
ja
cmpsl
popa
imul
mov
push
inc
shlb
sub
addb
sti
mov
sub
daa
lods
int
mov
inc
push
cmp
popw
xchg
push
call
dec
ljmp
xchg
sub
xchg
mov
or
or
les
stos
out
xchg
out
cli
sub
inc
enter
push
gs
int3
mov
push
dec
jle
xor
addr16
inc
xchg
jns
adc
int
adc
xor
cmp
int
lret
sahf
push
cmpb
sub
mov
adc
mov
leave
mov
sbb
mov
rcl
sbb
fldl
sbb
bound
pop
jmp
inc
call
xor
icebp
gs
sti
push
daa
dec
mov
shl
fldt
insl
clc
push
mov
lea
dec
aaa
jno
sub
push
and
jg
push
outsb
push
mov
push
cs
sub
and
call
and
cmp
scas
mov
stc
outsb
pop
push
cmp
mov
or
dec
movsb
test
cltd
imull
dec
xchg
adc
or
adc
testb
push
sti
mov
mov
lods
mov
inc
sbb
sbb
jnp
xchg
and
push
ret
inc
fwait
popa
inc
inc
cli
pop
arpl
inc
test
out
xor
pop
sti
dec
jo
lds
insb
clc
cmp
add
in
cli
xchg
test
lods
rcll
lahf
cli
sti
ja
adc
fmuls
add
fs
addr16
test
adc
jle
jns
xchg
inc
push
sti
out
dec
push
jbe
addl
cli
mov
xlat
imull
insl
jbe
sbb
cmp
lock
pushf
insb
mov
and
sub
push
test
cmp
xchg
mov
cmpsl
inc
int3
push
sbb
mov
sti
pop
fstp
sbb
cmpsl
cmp
xlat
sub
jecxz
mov
mov
bound
leave
out
pop
scas
shrb
std
stos
xchg
add
test
and
shlb
xor
ret
sbb
mov
jl
cmp
sub
jl
js
cmp
cltd
out
mov
sub
pop
xlat
push
fnstsw
jecxz
loop
cmp
cld
or
mov
adc
cli
cli
lods
pushf
pop
mov
int3
mov
pop
adc
lea
rorb
popa
insb
lea
push
and
mov
xor
adcl
pusha
mov
test
cli
int
loopne
mov
jmp
and
xor
add
test
stc
push
pusha
xchg
and
add
leave
mov
mov
push
mov
xor
loope
sarl
lret
fldenv
into
test
mov
idivb
imul
adc
inc
lods
jno
cmp
mov
sti
pop
das
mov
arpl
hlt
adc
adc
fdiv
mov
shlb
mov
lds
adc
add
sub
es
test
sbb
fdivrl
mov
loopne
mov
or
fs
mov
pushf
aas
pop
popa
das
dec
ror
aaa
cmp
or
mov
int3
aam
dec
das
pop
add
ds
jae
ljmp
mov
add
mov
jmp
dec
lcall
inc
sbb
xor
daa
pusha
sbb
fildll
out
mov
shrb
ret
lods
in
push
fucomi
std
sbb
adc
mov
add
mov
cmp
data16
add
mov
and
push
lods
mov
cltd
jbe
in
imulb
lret
mov
pop
mov
pop
cmp
aas
adc
sbb
scas
cmp
mov
inc
jne
xchg
sahf
sbb
add
scas
cmp
push
push
aas
or
sarb
sti
repnz
in
in
jo
popf
jno
lcall
mov
addl
mov
in
dec
std
pop
xchg
data16
and
aad
movsl
or
or
outsb
loopne
out
pop
pop
roll
imul
sbb
data16
out
inc
dec
iret
data16
xchg
mov
dec
jecxz
pop
adc
fisubrs
jl
pop
sub
call
xchg
filds
addb
sti
add
cmp
dec
adc
enter
pop
and
cmp
pop
pop
lods
or
insb
dec
push
dec
mov
pop
scas
mov
loopne
sbb
out
std
pop
xchg
ss
xchg
xor
jnp
or
sub
add
sbb
or
arpl
es
fstpt
gs
rolb
ret
jnp
xchg
mov
pop
mov
daa
dec
loopne
add
sub
insb
rcl
std
fsubs
shll
std
adc
les
es
push
xchg
fs
jbe
testb
xor
sarl
mov
and
mov
mov
push
mov
je
cli
test
fsubl
jmp
idivb
stos
jge
insb
nop
jle
shlb
cld
mov
jae
cltd
jge
cli
stc
xor
shlb
iret
inc
xchg
add
mov
das
or
xorl
push
add
movsl
stc
call
sub
rcl
scas
mov
xor
stos
lret
mov
iret
add
push
incb
sbb
scas
out
push
add
cld
clc
fistl
dec
mov
sti
or
mov
push
jmp
dec
or
das
fldt
movsl
orb
xchg
and
cmp
inc
pop
ss
or
lods
fcompl
icebp
dec
pop
scas
xchg
and
jle
xor
mov
clc
arpl
les
loopne
lret
nop
add
fstps
dec
in
xchg
cmp
pop
stc
lods
or
mov
cwtl
jge
sub
loopne
mov
mov
push
mov
inc
adc
loopne
and
or
add
add
cwtl
bnd
pop
cmp
lods
mov
cmpsb
aad
sub
icebp
movb
mov
cmp
sahf
loopne
and
out
outsb
outsb
cmp
push
adc
fidivl
sub
pop
out
shlb
push
insl
je
pop
mov
jne
mull
dec
inc
jb
push
pop
lcall
mov
or
dec
xchg
mov
jnp
repnz
xor
push
inc
stos
pop
movl
xchg
sub
call
jecxz
xchg
mov
sub
std
jbe
movsl
dec
cld
mov
cmp
push
xlat
mov
jne
insb
sbb
mov
sub
fadd
jnp
sahf
sub
sub
xchg
or
movsl
or
xchg
push
cli
dec
out
insb
mov
push
mov
loopne
jecxz
mov
inc
xchg
ror
xchg
mov
imul
push
pushf
xchg
dec
sub
inc
add
jb
sub
lahf
mov
in
fidivrl
sbb
cmp
cmp
mov
cmova
shll
bnd
xchg
xchg
inc
and
data16
push
and
testb
scas
push
incl
outsl
lods
mov
cmp
xor
and
mov
adc
js
xchg
adc
sub
xor
rclb
mov
sbb
add
jae
push
xchg
mov
mov
repz
add
mov
lahf
push
jle
lds
out
adc
push
dec
imul
mov
cli
pop
lods
or
add
sub
rolb
push
pop
mov
cmpl
inc
cmp
xchg
lret
repnz
xor
lds
inc
pop
int
mov
push
or
inc
adc
fisubrl
ret
pusha
out
fldt
mov
insb
ret
lret
pop
js
push
dec
xchg
lea
insl
icebp
sbb
jno
dec
in
cmp
aas
inc
cmp
dec
into
mov
in
test
adcl
call
pop
pop
jecxz
ret
or
jo
gs
rorb
loop
aam
cltd
lods
mov
and
push
mov
sbb
mov
lret
divb
dec
xchg
add
mov
xchg
sub
enter
fnsetpm(287
stc
push
sub
clc
mov
out
fisubl
in
out
mov
and
cmpsb
mov
jne
jb
inc
push
ja
cmp
sahf
addr16
add
push
xor
fisubl
xchg
jnp
pop
pop
cmc
popa
cld
jne
in
sub
and
rcrl
add
push
mov
cmp
xchg
xchg
inc
fimull
jnp
imul
add
push
movsl
xchg
mov
test
popa
xor
and
mov
adc
divl
or
push
fdivrl
jne
push
iret
test
paddd
or
xor
or
mov
mov
mov
and
addr16
jmp
imul
popf
jge
cli
addl
stos
jg
pop
gs
pop
jecxz
pop
sub
in
mov
sub
js
cmpsb
daa
iret
pop
xchg
bound
dec
mov
cmp
dec
clc
jb
int
pop
cwtl
pop
cmpsl
sub
mov
jmp
cwtl
add
loopne
adc
int3
lock
insl
jns
xor
or
pop
add
mov
and
fdivrp
mov
test
fwait
add
shlb
jns
mov
or
cmp
dec
test
pop
les
sbb
cmp
and
jnp
out
iret
cmp
mov
inc
mov
cmp
sahf
pop
xor
mov
cmpsl
shll
jmp
jp
xor
fwait
push
ss
push
movsb
pop
outsl
and
pop
jecxz
in
mov
popa
out
into
les
imull
pop
jb
cmp
gs
push
jp
sub
pop
lret
mov
and
xor
xchg
call
cltd
pop
inc
pop
std
in
clc
ja
cmc
pop
dec
call
popa
pusha
rclb
lods
adc
sub
pop
jmp
push
rorb
out
icebp
xchg
xchg
mov
mov
or
inc
addl
pop
xlat
je
cli
sub
xchg
mov
incb
enter
cmpsl
sbb
cmpb
lcall
inc
in
or
ds
mov
push
inc
popa
bound
jg
xchg
fdivl
cwtl
xchg
mov
mov
out
mov
gs
ds
cmp
jns
xor
arpl
push
sub
cmovg
ljmp
inc
xor
dec
inc
push
mov
cld
sbb
sti
jae
sbb
fcmovnbe
shll
xor
in
push
sbb
sahf
leave
adc
pop
adc
jae
rcr
pop
inc
fisubrs
std
xor
and
jecxz
repz
mov
incb
xor
and
ret
mov
rcrb
xor
loope
aaa
mov
inc
fstpl
pop
loop
or
sub
les
cmp
inc
add
mov
push
clc
push
mov
ret
adcl
inc
jge
clc
xor
movsl
jecxz
jle
mov
incb
pop
and
shr
jnp
jnp
daa
inc
mov
ret
xor
or
mov
add
or
cltd
jbe
flds
inc
inc
addr16
add
dec
mov
cmc
dec
das
fdivr
push
jns
insb
adc
call
insl
jecxz
scas
fnstenv
mov
imul
jl
adc
roll
jecxz
repnz
loop
test
fmull
pop
xchg
sbb
dec
and
int
xor
adc
fimuls
loop
repz
std
bnd
cmp
cmpb
sbb
mov
dec
push
xlat
xchg
xchg
out
lret
mov
inc
imul
mov
xchg
mov
test
mov
add
add
cmp
loope
out
rcll
mov
lods
cmp
out
sahf
lods
add
pop
jl
dec
call
add
cmc
pop
xor
and
jb
mov
jb
hlt
nop
add
sbb
xchg
mov
ss
xchg
jne
push
ret
or
jbe,pn
sbb
nop
lock
fisubrl
andb
push
cmpsl
dec
inc
xlat
adc
push
or
loop
add
push
mov
sar
xchg
xchg
out
sbb
daa
pop
push
mov
in
mulb
jnp
adc
enter
add
outsb
insl
xchg
ljmp
aas
adc
in
in
int
stc
std
adc
shrl
out
xor
xchg
jmp
pop
push
push
cmpsb
push
scas
imul
das
and
scas
fmull
addr16
icebp
fcomi
scas
mov
mov
imul
pop
cmp
mov
inc
cmpb
xor
or
mov
xchg
cmpsl
xchg
xor
cmp
cli
je
adcb
xor
je
lahf
addl
inc
jmp
stc
outsl
push
popf
sub
sub
inc
subb
or
or
adc
arpl
cmpsl
push
ja
outsl
add
addr16
loope
or
jns
sbb
out
test
xor
xchg
mov
sbb
inc
lret
es
je
adc
and
fs
push
adc
mov
cmpsl
ror
inc
push
mov
xor
add
pop
cmpsb
mov
stos
dec
pop
xorl
jns
pushf
pop
fcmovb
leave
pop
arpl
push
data16
iret
pushf
dec
shl
xor
or
aam
std
out
xor
dec
dec
xchg
mov
jl
dec
roll
ss
adc
dec
mov
mov
pushf
sbb
cltd
and
push
sbb
movsb
push
idivl
dec
mov
test
popf
or
mov
and
push
cmp
mov
cli
outsb
jg
popf
push
jns
xchg
jnp
lahf
pop
ljmp
lds
pop
orb
mov
mov
lock
repnz
mov
in
xor
cmp
cmc
push
nop
js
inc
das
pop
push
adc
pop
stos
lcall
movsl
inc
sarb
test
inc
lods
mov
dec
adc
test
daa
jg
loop
repz
lahf
sub
test
jne
lea
loop
enter
xchg
xchg
xchg
sub
hlt
cwtl
or
cmpsl
pop
jae
test
cltd
xchg
mov
fucomp
pop
cs
sub
shlb
mov
out
lods
movsl
js
xlat
jecxz
bound
and
lret
pop
xor
or
push
test
sahf
mov
cmp
sbb
out
outsb
mov
iret
repnz
sbb
jb
push
pop
test
cld
cld
test
push
mov
lods
lahf
sub
das
fs
inc
fadd
pushf
test
mov
out
mov
iret
aas
mov
mov
fistpll
fidivl
movsl
imulb
ja
mov
fstps
or
pop
call
nop
mov
test
cmp
dec
inc
xchg
inc
pop
shll
shrl
mov
sub
xor
and
add
inc
xor
divb
jle
outsb
dec
scas
inc
aad
dec
test
or
popa
jmp
or
cmpsl
hlt
cltd
enter
test
lods
lods
jnp
cmpsl
addr16
aas
adc
mov
sub
mov
push
xor
mov
xchg
daa
push
std
ja
mov
fldenv
shrb
aas
shll
mov
aaa
mulb
icebp
int
adc
dec
les
and
mov
lcall
aad
mov
inc
arpl
lea
mov
push
add
dec
mov
xchg
mov
mov
out
jne
sub
mov
xchg
cmc
lahf
xorb
add
push
gs
hlt
leave
cwtl
cmp
out
outsl
pop
sub
stos
lds
fs
and
xlat
push
jl
mov
daa
inc
inc
sub
loope
bound
push
movsl
es
stc
gs
movsb
lea
inc
lea
insb
fdivrs
xchg
xlat
xor
lock
push
test
jno
sahf
jg
pushl
out
mov
sbb
mov
fildll
cmp
cli
imul
repnz
jge
dec
mov
add
imul
mov
mov
fcomps
xor
cmp
ficomps
adc
rcrb
frstor
xor
aad
xchg
dec
pop
stos
idiv
dec
push
test
cmp
rcrl
popa
outsl
xchg
imul
test
aam
ja
cld
div
ret
sub
js,pt
in
loop
mov
nop
sbb
lahf
cmp
ljmp
push
push
dec
inc
push
arpl
in
and
mov
jle
jl
mov
test
in
mov
inc
or
dec
mov
push
add
hlt
je
test
sub
rolb
cwtl
pop
cmp
lahf
or
add
inc
xlat
or
adc
push
js
inc
imul
mov
sbb
push
pop
cmpsb
mov
cs
ss
or
add
mov
add
ja
xorl
mov
mov
in
inc
inc
aam
cmp
shll
mov
rcll
mov
inc
adc
push
mov
cmpsb
mov
jb
inc
or
inc
xor
push
ljmp
insl
mov
inc
dec
jb
shlb
test
and
fcmovbe
mov
pop
lods
cmp
hlt
mov
pop
cmp
mov
add
lret
repnz
lcall
rcr
jnp
mov
pop
cmp
fs
jmp
xor
fbstp
xchg
add
adc
add
aad
adc
push
adc
cmp
movb
scas
xlat
cld
xchg
xor
lock
int
scas
inc
lret
or
mov
add
dec
fisttps
outsb
sahf
pop
std
les
cmp
pop
and
or
into
xchg
insl
fs
mov
inc
jp
ds
mov
cmpsl
pop
or
add
pop
pop
dec
out
inc
adc
subb
faddl
fs
mov
xchg
test
scas
dec
loope
je
mov
xor
xor
and
in
mov
div
xor
ror
aaa
jb
rorl
fisubrl
dec
pop
int3
ja
lea
mov
loope
iret
and
add
int
bound
lcall
sub
mov
sbb
adc
xchg
mov
jmp
shrb
loopne
gs
gs
cmp
pop
icebp
sahf
xlat
xor
popl
cli
pop
dec
and
mov
clc
xchg
jb
or
mov
xchg
adc
dec
sbb
jge
or
dec
into
or
out
jmp
push
xor
lret
std
ja
adc
xchg
psrld
cmp
fisttpl
lret
xor
imul
and
dec
je
push
ljmp
lea
adc
inc
xor
insb
inc
shll
imul
mov
pop
pop
sahf
lahf
mov
leave
andl
dec
inc
jmp
sbb
xor
call
sub
loopne
mov
inc
sub
sub
jb
lcall
js
pop
lods
sbb
subl
js
pop
sub
lds
push
out
adc
push
rclb
ss
stos
add
dec
imul
and
push
inc
or
js
adc
jmp
test
aaa
push
out
sbbb
cmp
mov
dec
test
jge
in
xchg
call
sub
hlt
add
pop
mov
xor
adc
pop
xor
pop
xor
int
jl
aaa
in
cli
insb
mov
movsb
test
push
lock
mov
aas
push
inc
jnp
lds
adc
rorb
mov
xorb
jge
loope
out
mov
rorl
inc
mov
pop
cmp
shlb
cmp
testl
in
mov
stc
lods
mov
imul
push
movsb
push
push
mov
ret
in
mov
jp
xchg
jb
cmpsl
mov
filds
movsb
scas
pop
jle
fdivr
cmc
in
test
sbb
push
hlt
lock
cs
pop
sub
fisubrl
movsl
and
pop
fstl
pop
int3
ror
push
add
notl
cmpsl
sbb
test
mov
sarl
scas
inc
out
push
pop
inc
imul
adc
and
dec
lods
xchg
adc
rcr
pushl
bound
mov
loop
lcall
std
dec
cli
or
mov
or
dec
cmc
and
mov
call
lods
dec
in
lret
mov
inc
sbb
push
pop
jp
cmp
das
ret
inc
and
sbb
lahf
insb
sbb
mov
fldenv
in
push
xor
loop
pop
or
jge
inc
dec
into
inc
xchg
lcall
mov
scas
pop
loope
add
fdivrs
pop
vpmacsdql
lahf
imul
add
adc
jne
xor
and
xchg
shrb
test
and
sti
repz
xchg
inc
sahf
and
jnp
dec
or
iret
push
pop
adc
cmp
xchg
testl
leave
notl
mov
jmp
and
inc
add
adc
rclb
js
xchg
jge
jecxz
cld
icebp
out
icebp
jmp
cmp
inc
test
shlb
ret
fstpt
inc
jmp
push
jo
inc
test
xlat
lods
jp
pop
xor
push
jb
adc
mov
xchg
jae
pop
cmp
and
jbe
bound
jo
push
rcrb
pop
ret
push
xchg
mov
jmp
jnp
fwait
sbb
cmp
out
loopne
incb
cmp
sbb
stos
mov
iret
stos
movsb
loope
dec
mov
push
movsl
in
inc
xchg
aas
jmp
into
imul
or
sbbl
pandn
iret
mov
iret
pusha
inc
dec
out
scas
enter
into
movsl
push
dec
or
std
push
sar
push
push
jmp
jmp
arpl
scas
push
call
loope
hlt
push
addb
fcoms
mov
mov
add
mov
or
and
lock
idivb
push
push
mov
data16
andb
and
in
xor
cltd
mov
mov
inc
out
mov
sub
or
hlt
popf
inc
adc
mov
lock
adc
dec
mov
call
push
push
add
pop
repnz
in
mov
pusha
add
and
fidivrs
popa
ds
jno
dec
cmpb
mov
icebp
dec
mov
data16
adc
adc
jecxz
jge
es
hlt
sbb
sbb
and
imul
les
and
in
inc
dec
mov
das
loopne
cmpsl
adc
cmp
loope
mov
adc
sti
test
inc
out
clc
sub
icebp
push
mov
dec
fistpl
std
push
data16
iret
inc
addr16
lods
repnz
jecxz
cmp
repnz
push
xor
pop
call
out
sub
cmc
cmp
mov
into
cli
into
lcall
xchg
mov
mov
xor
lock
mov
and
icebp
arpl
push
push
ss
cld
add
sbb
and
xchg
push
stos
ficoml
or
push
inc
negb
call
mov
movsb
sahf
jns
inc
stc
push
dec
sub
dec
ret
sub
xchg
and
mov
and
jmp
imul
mov
in
ja
push
lret
mov
or
jae
inc
mov
xorb
and
lods
in
insl
or
jb
scas
cltd
aaa
mov
and
insb
aam
and
cmpsl
sbb
fiadds
shr
sub
inc
out
lea
xchg
rcll
fldl
jmp
or
dec
mov
jmp
mov
dec
cli
sub
insl
roll
outsl
cmp
sbb
mov
aas
les
lds
push
scas
push
xchg
shrb
movsl
fisubs
xor
push
movl
cmpsl
sahf
sbb
xor
dec
in
ror
sub
sbb
ljmp
push
dec
mov
ret
stos
outsb
jmp
inc
jge
sarl
mov
dec
sti
sub
push
jae
dec
mov
shll
mov
mov
fcmovu
dec
xor
popa
sub
ret
stos
add
adc
inc
js
jmp
mov
fwait
aaa
loopne
das
lods
aam
cmp
inc
push
dec
jle
cltd
je
mov
pop
inc
jp
js
xchg
es
shll
das
lahf
ret
lret
sub
jge
jp
jo
sbbl
loope
inc
sbb
in
dec
decb
push
jecxz
xchg
add
pop
cmp
push
ret
push
xchg
pop
movsb
testb
lods
sbb
xorl
cmp
and
test
pop
inc
dec
cmpsb
cli
ret
loope
mov
bound
scas
gs
jbe
ja
mov
lods
dec
jp
aam
mov
xlat
mov
jae
sub
mov
stc
add
adc
das
js
nop
xchg
and
testb
out
add
add
pop
lds
jp
and
cmp
les
bswap
push
jb
mov
xchg
imul
scas
mov
leave
test
mul
icebp
cltd
fiadds
in
enter
test
cmp
lods
pop
cmp
jl
aas
cmp
sbb
ljmp
ljmp
sbb
out
and
not
xlat
clc
mov
sarb
out
or
lea
sti
popf
mov
stc
and
loop
xchg
and
mov
jle
inc
enter
roll
dec
inc
out
insl
cmpsl
xchg
les
stc
add
or
pop
xchg
call
lcall
faddp
push
lods
pop
mov
enter
stos
test
xchg
enter
mov
sub
jb
push
call
xlat
enter
and
gs
and
jae
imul
out
or
iret
out
jle
mov
ret
sub
rcrb
xor
hlt
sbb
or
ret
add
mov
out
fstp
push
push
mov
arpl
mov
and
popa
scas
xchg
lock
ljmp
dec
xor
dec
adc
lret
pop
in
or
xchg
insb
and
dec
pusha
addb
inc
pop
daa
divl
xlat
jnp
and
into
jmp
dec
jmp
loope
jnp
faddp
jbe
mov
ja
mov
cmp
fisubs
or
test
dec
dec
test
fadds
mov
scas
jns
dec
xchg
jo
inc
pop
adc
push
mov
lret
xor
lcall
icebp
in
inc
xchg
aas
mov
mov
pop
pushf
imul
or
rol
push
stos
or
add
jb
ficompl
in
daa
mov
mov
jmp
cmp
pop
sbb
daa
es
notl
addr16
fs
adcb
stos
sub
test
jle
xor
add
xchg
xor
jmp
xchg
add
repz
or
jge
mov
pop
sbb
inc
cmp
jno
aaa
lret
int
popf
rol
jmp
and
adc
dec
ds
sbb
rcl
aam
xchg
cmpsb
or
out
xchg
xor
lock
rcrl
xor
inc
push
jp
lds
negl
and
lods
mov
or
xor
and
inc
cvtdq2ps
mov
jae
push
lahf
out
jae
push
repnz
or
cmp
sub
popf
add
lds
push
rcl
shll
cmp
mov
cwtl
fsubrl
push
out
loopne
push
dec
cmp
pop
in
pop
addr16
addr16
adc
push
mov
push
shlb
int
cld
xchg
push
aam
mov
mov
sbb
add
mov
push
or
or
rcrl
out
imul
movsl
jp
mov
mov
mov
xchg
dec
loope
inc
loop
mov
mov
cmp
dec
jge
jnp
out
pop
jne
xchg
insb
fildll
sbb
cmc
cmc
push
out
lret
cmp
sbb
mov
cmp
call
add
js
adc
pusha
adc
mov
xchg
dec
dec
xor
das
movsl
fbld
cmp
cwtl
cld
cmp
push
aam
inc
xchg
std
mov
push
fucomp
add
hlt
inc
insb
cmpsb
shr
movsb
lahf
mov
adc
dec
addr16
movsl
xchg
adc
adc
shlb
or
ja
iret
cli
fdivrp
jge
cmp
mov
adc
pop
mov
pop
je
aam
xor
aad
pop
fadd
ljmp
out
sub
scas
test
lds
xchg
jnp
bound
jecxz
sub
dec
jmp
mov
pop
mov
mov
nop
xchg
and
clc
xchg
xchg
dec
push
pop
std
mov
mov
mov
imul
popf
paddq
jecxz
imul
lret
mov
add
sar
pop
in
popf
mov
loope
fisubs
cmp
aad
test
jge
xchg
pop
iret
push
mov
and
add
jmp
push
pop
mov
clc
lods
movsl
mov
inc
shl
insb
out
decb
out
and
jp
jae
fs
es
jb
scas
mov
aaa
cmp
mov
mov
cmpsb
push
push
in
sbb
and
cmp
fwait
jg
inc
out
repz
hlt
mov
andb
inc
xlat
or
into
mov
lret
sbb
ret
and
mov
maxps
ds
add
and
sti
dec
push
ja
repnz
filds
aad
mov
inc
imul
xor
mov
rcrl
and
jne
lret
outsl
js
jae
pop
rorl
and
jmp
sar
sbb
in
push
sub
xchg
or
nop
jecxz
cmp
hlt
mov
pop
jno
in
in
xor
rorb
cltd
sub
sarb
inc
mov
outsb
sbb
out
outsb
pop
ljmp
push
adc
mov
in
sti
inc
sahf
ldmxcsr
sahf
push
cli
jp
cmp
jmp
rclb
int
add
sub
leave
mov
jecxz
xchg
movsl
xchg
jecxz
add
pop
pop
cmp
insb
jb
cld
scas
jne,pt
mov
jp
cmpsl
outsl
fwait
pop
mov
ret
cmp
dec
inc
outsl
mov
imul
rcrb
dec
adc
add
jecxz
inc
cmc
mov
stc
push
scas
sub
push
xor
int
pop
lret
ds
xor
inc
gs
repnz
xor
inc
popa
and
jns
out
shrb
ja
std
pop
and
test
add
test
xchg
mov
outsl
xchg
jns
rorl
dec
idivl
addr16
add
sbb
pop
fnstcw
sbbl
movsb
idivl
mov
out
mov
pop
inc
xchg
and
incb
push
mov
neg
pop
mov
mov
je
rcll
push
rorb
mov
insl
pusha
out
fwait
jno
jle
sbb
mov
sbb
mov
mov
inc
enter
shl
pop
in
out
inc
xchg
sahf
movsl
xchg
fcmovbe
jmp
adc
mov
push
shrl
jo
cmpsl
cmp
xchg
dec
inc
jecxz
add
dec
dec
mov
test
dec
xchg
jns
insb
pcmpgtw
mov
xchg
arpl
lds
jle
dec
mov
pop
push
dec
jo
xor
sbb
ret
sahf
add
outsb
push
mov
lea
shl
xor
ss
jge
ds
mov
inc
push
inc
cmp
mov
cmpsb
lods
mov
xor
mov
xor
out
outsb
mov
mov
mov
ret
jnp
or
cmp
mov
das
xchg
fwait
cmp
sarl
lret
dec
mov
xor
loopne
daa
xor
pop
xchg
aaa
mov
and
outsb
and
stc
push
xchg
jb
sub
dec
sub
lret
stos
mov
and
shll
xchg
push
sub
int
jmp
push
stos
adc
adc
xchg
clc
inc
loopne
cmc
mov
out
sti
push
push
dec
jae
lock
test
jecxz
icebp
xchg
dec
mov
xor
movsb
aad
aad
shl
jle
adc
sub
push
lods
arpl
cld
cmc
push
pop
in
push
sbb
mov
inc
inc
into
or
ss
movsb
mov
lret
adc
xor
and
inc
cmc
ljmp
mov
sbb
mov
adc
cmp
dec
dec
mov
and
testl
test
or
test
pop
xchg
push
xchg
hlt
cwtl
mov
call
ljmp
xchg
mov
imul
jg
pop
mov
cmpl
cmp
inc
mov
pcmpgtb
add
cmp
into
lock
leave
testb
mov
mov
mov
fwait
mov
stos
push
and
test
inc
repz
dec
adc
or
xor
jbe
jnp
movsl
aas
out
shlb
fcom
push
cmp
add
dec
fildll
add
mov
decb
pop
adc
push
lahf
enter
jne
les
xor
je
repz
push
mov
and
xor
mov
and
fcoml
in
fnsave
movsl
inc
xor
orl
fdivrl
mov
iret
lret
add
xchg
loope
ds
repnz
ss
xchg
fcmovbe
jmp
aaa
cmp
shlb
cwtl
or
mov
or
push
push
jp
out
and
jb
movsl
and
jb
or
cs
pop
mov
xor
inc
aam
scas
xor
add
stc
lret
sub
addb
sub
testb
pop
sbb
inc
xchg
js
pop
sbb
mov
jg
das
repz
popf
outsl
es
aad
xchg
sbb
cld
hlt
pop
leave
dec
fmul
bound
push
std
nop
dec
mov
pop
jnp
mov
pop
inc
cmp
icebp
mov
icebp
lahf
inc
icebp
mov
and
mov
mov
add
rorl
jbe
mov
movsl
movnti
dec
stos
push
push
sub
push
shrl
dec
out
sti
fcompl
icebp
mov
cltd
push
dec
jbe
test
sbb
mov
mov
xchg
push
mov
fisttps
mov
inc
add
push
lods
leave
jns
stos
add
call
repz
movsb
stos
lea
lret
insl
sub
adc
mov
bswap
cmp
ja
push
arpl
addr16
xchg
xchg
fmulp
mov
dec
xor
sbb
xchg
inc
sbb
addr16
xor
lcall
stos
inc
add
lds
fstps
test
jp
fwait
outsl
andl
lods
test
cld
pop
outsb
cltd
std
push
cmc
cwtl
push
imul
std
jnp
or
cs
xchg
pop
push
arpl
mov
fs
iret
pop
cmpsl
jp
and
push
cmp
popf
dec
test
or
divb
outsb
push
pop
daa
cmpsl
mov
int3
lret
sub
pop
das
mov
out
arpl
or
push
shl
sbb
push
sbb
xchg
hlt
sbbl
mov
push
jne
sub
test
xor
enter
dec
mov
ljmp
jo
frstor
rorb
mov
sub
dec
orb
jb
movsb
sbb
dec
xchg
inc
push
push
std
rcll
xchg
dec
dec
fnstcw
cmp
xor
out
fucomp
or
test
add
mov
lock
cmpl
js
imul
out
lahf
dec
pop
dec
mov
into
repz
cmp
and
pushf
cmpsl
mov
and
mov
cld
cwtl
ja
repz
xchg
jo
mov
and
test
lahf
xchg
mov
hlt
mov
pusha
lea
std
mov
mov
dec
mov
dec
ds
cld
test
mov
lret
sub
mov
inc
add
aas
out
test
aaa
fdivrl
mov
xchg
testb
popf
adc
or
pop
int3
adc
nop
cli
xchg
mov
in
test
pop
push
add
lock
call
mov
cmp
nop
fcoms
clc
gs
xor
in
or
mov
push
jle
xchg
jmp
fs
or
pop
daa
call
push
mov
cmp
and
dec
fwait
data16
movd
adc
in
and
push
int3
mov
or
inc
xchg
cmc
jge
bsr
xor
addr16
inc
sbb
push
sarl
adc
cmp
and
ror
sub
xor
jno
in
aam
daa
add
lea
cmpsl
es
test
xchg
xlat
xor
insl
fwait
ret
inc
repz
xlat
sbb
pop
and
jns
push
sahf
mov
fdiv
pop
insb
outsl
jb
fnstenv
cwtl
aaa
mov
cmp
scas
or
mov
scas
movsl
in
mov
cmp
push
jno
sub
movsl
xchg
testl
jle
aas
cmp
gs
ret
push
jmp
stos
mov
xchg
repz
in
mov
enter
loope
cmp
les
add
into
push
push
sub
enter
xor
jne
roll
and
rcll
popf
shrl
xor
aam
jecxz
in
ljmp
js
push
das
adc
adc
mov
inc
jb
leave
aaa
stos
rorb
test
adc
sub
jmp
jle
sbb
jbe
sbb
push
sbb
xor
add
lret
sbb
jmp
or
mov
jbe
pop
in
xchg
xchg
sub
jmp
idivb
mov
lret
ret
jp
mov
clc
pop
fucomi
inc
cmpsl
icebp
cmp
pop
aaa
clc
fs
fisubrs
ret
mov
jb
ljmp
cmp
scas
lock
fcmovnu
aaa
dec
imul
jne
les
cmp
add
inc
testb
setp
mov
add
ljmp
lret
movsb
adc
lret
fxch
ja
push
fcmovnbe
arpl
scas
mov
xchg
out
xchg
adc
jne
int
xchg
pusha
cmp
adc
rcrb
icebp
repnz
pop
inc
shl
fistpll
lcall
cltd
jp
pop
fstps
jmp
fnstcw
and
sub
xlat
fidivrl
dec
fcomps
jle
das
sbb
imul
and
adc
push
sbbb
xor
test
mov
out
sub
jo
imulb
jne
pop
dec
xchg
mov
ljmp
rcrl
cmc
pop
stos
shlb
add
stc
cmp
add
inc
js
push
push
pop
xchg
mov
mov
mov
push
dec
enter
pop
iret
mov
outsb
sub
mov
cmc
jno
cwtl
inc
xchg
fisubrs
push
lret
mov
aaa
push
daa
cmp
mov
sub
leave
add
adc
push
stos
and
mov
popa
ror
pop
sti
mov
jne
lods
loop
pop
inc
add
sub
xor
cmpsl
cmpsb
xchg
test
fcomps
andl
and
pop
inc
fsubrl
pop
filds
jns
imul
sbb
push
mov
adc
jecxz
jecxz
into
xor
out
inc
adc
test
stos
xor
dec
inc
lea
pop
mov
lea
icebp
sbb
cmp
add
shrl
cmc
sarl
inc
pop
inc
dec
xchg
jmp
xchg
push
int3
stc
popf
addr16
arpl
mov
stos
push
sub
dec
fimuls
jle
pusha
cltd
jg
pop
adc
xchg
add
jo
repz
add
mov
stos
mov
xor
filds
outsl
jno
ret
dec
stos
ljmp
inc
adc
imul
fstpt
fidivrs
xchg
movsl
cmc
sbb
push
sub
add
decl
and
inc
jae
add
dec
cld
adc
pop
mov
dec
pop
xor
add
inc
mov
add
pushf
xor
les
push
dec
cltd
enter
push
call
jmp
cmp
xchg
sub
inc
pop
dec
dec
lahf
add
mov
bound
jge
pop
mov
xor
or
aad
inc
lods
shrb
setle
xor
mov
in
mov
insb
movsb
inc
jb
dec
rorb
fcmovnb
xor
dec
or
mov
ret
jmp
mov
xchg
and
iret
push
repnz
mov
sarb
pushf
imul
push
or
adc
sub
mov
imul
dec
idiv
or
call
jns
pop
jmp
mov
or
cmp
xchg
pop
lds
push
jns
pop
popf
cmp
into
jns
sbb
adc
inc
gs
push
mov
int
push
fimuls
fs
cwtl
adc
rcll
dec
popl
scas
repz
mov
shrl
pushf
push
fsub
cmp
mov
inc
lret
sahf
push
jae
push
xchg
sub
xor
in
cs
cmp
leave
fwait
cmp
aaa
add
ss
xlat
mov
push
mov
dec
mov
fldl
xor
incl
add
xor
scas
mov
iret
mov
lds
sahf
cmp
gs
mov
ret
enter
or
pop
jmp
jns
xor
ret
sbb
test
repz
cs
xor
or
jg
mov
sbb
sbb
sub
xor
aas
cmpb
rorb
out
mov
data16
xor
xor
je
jg
sub
aad
push
mov
stos
hlt
inc
cmp
test
movsb
and
out
mov
in
fisttpll
inc
into
mov
mov
cwtl
rolb
in
xor
jle
mov
dec
cmp
repnz
mov
aad
rorl
pop
cli
mov
jge
sbb
loop
xor
sub
std
add
xchg
pop
xchg
fistpll
movsl
and
cwtl
dec
mov
pop
adc
xor
mov
adc
int
mov
lds
mov
push
xchg
sub
sbb
shrl
sub
or
sarb
jo
mov
push
das
cltd
aam
imul
xchg
mov
iret
cmpsb
rolb
movsl
call
insl
adc
sub
fnsave
sbb
add
aad
jecxz
sbb
or
sbb
mov
sub
cs
inc
mov
xchg
out
or
repz
out
mov
out
mov
fmul
mov
test
fistpll
lds
fimuls
mov
movsl
and
iret
cmp
scas
insl
xor
int
fnstcw
and
and
pop
je
sbbb
cmp
arpl
add
mov
movsl
pop
dec
push
stos
shlb
mov
cwtl
sub
and
fwait
hlt
dec
xchg
sbb
das
jae
push
push
inc
scas
sti
shr
jns
aas
cmpsb
sbb
loop
add
push
cmpsb
jno
jns
xchg
sbb
les
inc
mov
sbb
mov
sub
pop
in
mov
int
fwait
or
cmpsl
inc
mov
pusha
lods
mov
fs
inc
rcrb
and
sub
xchg
dec
pop
pop
jnp
adc
in
and
pusha
mov
inc
xor
jge
les
or
out
xor
dec
inc
xchg
mov
mov
pop
jmp
mov
sbbb
popf
pop
push
jle
jns
sbb
push
nop
mov
inc
mov
xchg
pop
jne
pop
fstps
test
mov
jle
cli
scas
jl
mov
imul
addl
push
push
mov
push
push
fdivl
sbb
push
out
cs
push
mov
or
call
mov
out
loopne
addr16
pop
inc
dec
data16
add
pop
push
push
into
jmp
pop
mov
dec
jae
pop
outsl
jns
jge
jge
jle
sub
jecxz
iret
ja
push
adc
inc
insl
std
or
push
psrld
sbb
dec
jl
mov
mov
pop
xchg
mov
cltd
lahf
jne
fnstcw
pusha
push
cltd
popf
lods
or
cltd
lahf
test
loopne
dec
push
sarb
push
xorb
test
and
out
dec
xchg
ljmp
sbb
repnz
mov
jl
sbb
repz
push
inc
cmp
lea
xor
push
popa
cli
and
jecxz
mov
cmp
adcb
mov
shll
sbb
jg
dec
scas
pusha
cmp
mov
xchg
gs
aam
aaa
mov
fcom
xchg
push
out
ret
cmpl
sti
adc
out
subb
mov
pop
aam
pop
xchg
xlat
jnp
push
pop
testl
hlt
pop
push
sbb
xchg
iret
cwtl
cwtl
adc
cmp
sub
mov
push
inc
sub
lock
fbld
test
mov
ret
adcl
aad
es
and
insb
push
xchg
lret
mov
fstps
scas
ljmp
leave
sbb
push
int
aas
ljmp
pop
daa
jbe
and
mov
xlat
jnp
or
ljmp
mov
shll
cmp
sub
mov
popf
mov
sbb
cmp
popa
xor
push
mov
mov
in
in
lds
add
mov
dec
pop
lods
and
sub
jbe
in
and
push
lea
pushf
inc
jl
push
negl
test
adc
jbe
mov
mov
call
nop
test
lcall
stos
xorb
pop
inc
jl
negl
out
sbb
in
jnp
push
in
lea
mov
dec
loopne
xor
icebp
pop
mov
push
repnz
mov
and
lods
push
mov
mov
mov
in
imul
jp
hlt
int3
pop
stos
pop
push
fsubl
leave
dec
fs
xchg
xor
pop
mov
add
push
sub
ficoml
xor
jb
outsl
cmpsl
iret
add
and
ret
cmpsb
sbb
add
mov
or
push
add
mov
pusha
clc
cs
add
push
in
cld
push
add
mov
jno
sti
call
in
test
adc
sarb
cwtl
mov
cwtl
dec
lret
adc
insl
fcoml
push
out
hlt
add
push
xchg
dec
into
pop
outsl
stos
lods
jo
and
and
add
iret
dec
cld
rcll
cmp
add
shlb
insl
pusha
xor
add
loopne
lahf
or
jae
inc
js
insl
call
frstor
jnp
shl
mov
jno
mov
xchg
cs
mov
scas
sbb
aas
fwait
int
arpl
inc
xchg
sbb
lahf
push
xor
rcrl
ret
sbb
pop
lret
push
jb
inc
adc
xor
mov
sbb
inc
xchg
rcl
in
jne
xchg
test
movsb
or
xor
cmp
fwait
sub
daa
adc
aad
cld
jge
push
adc
ljmp
xchg
sbb
arpl
add
sar
add
cmp
cs
dec
fsubs
cmpsb
jo
cmp
inc
in
dec
mov
or
mov
lret
stos
lret
test
aas
mov
jbe
push
lea
lea
xor
cmpsb
push
xor
rclb
jae
cltd
ja
mul
push
jnp
cmp
sub
sbb
int3
xor
push
and
jnp
adc
gs
dec
adcb
xor
dec
test
pop
xor
mov
push
mov
push
jp
repnz
fisubl
test
push
idivb
in
sub
xchg
adcb
mov
rcrl
pop
and
leave
mov
add
jge
lret
cmc
cmp
mov
dec
imul
test
adc
sub
int3
stos
lock
int
xchg
mov
xchg
in
dec
mov
pop
inc
cs
int3
lcall
repz
lock
gs
dec
repz
cli
jg
mov
mov
mov
mov
jecxz
aaa
push
jcxz
stc
jae
loop
xchg
or
dec
inc
sbb
insb
mov
scas
negl
inc
in
into
stc
push
dec
subl
test
insl
repnz
lahf
or
sbb
cmp
and
arpl
push
stos
push
xor
jmp
int3
sti
mov
call
int3
filds
adc
cmp
in
inc
cli
stos
xchg
jmp
test
mov
lods
xchg
push
sti
jmp
testb
getsec
aas
pop
pop
daa
ret
xchg
pop
aam
ret
int3
mov
cmp
cmp
imul
mov
and
or
adc
call
mov
adc
lods
in
idivb
pop
mov
enter
and
jbe
cmp
xchg
notl
cltd
sub
mov
jns
dec
push
popf
int3
stos
repnz
push
testb
jne
imul
xchg
adc
cmp
add
in
jbe
inc
imul
dec
cld
or
push
and
jle
xchg
jno
jecxz
rcll
xchg
xor
xor
loopne
ja
xchg
sar
push
dec
xchg
pop
mov
ljmp
push
push
add
insb
gs
cmp
add
ds
pushf
shl
movsb
lock
out
test
jl
out
adc
lret
orb
lahf
dec
and
mov
test
cmp
mov
fidivs
or
dec
adc
rcr
int3
fbld
aad
mov
add
xor
cmp
mov
cmp
xchg
aam
mov
fbld
and
sub
mov
xchg
sbb
enter
and
ror
movsb
xchg
fs
popf
in
sbb
data16
int3
bnd
pop
faddl
add
xchg
shrb
in
push
or
popa
mov
jg
aam
jmp
nop
mov
dec
clc
push
sti
xchg
outsb
and
mov
incb
push
cmp
nop
aam
mov
adc
mov
test
mov
rolb
xor
int
pop
scas
adc
xchg
mov
cli
cmpsl
sar
out
loop
rep
inc
sub
imul
cmc
sbb
add
dec
rclb
ja
pop
movsl
adc
mov
cmpsb
imull
loope
xorl
notl
mov
cmp
push
pop
sub
shrb
jnp
rclb
sbb
jno
xchg
rorb
sub
and
jae
jbe
mov
popa
rcll
push
sbb
push
xchg
fadds
das
push
adc
test
push
inc
test
popf
sbb
inc
lcall
jno
out
cmp
jae
inc
mov
or
jp
push
rol
dec
inc
push
xor
dec
shrb
ret
add
push
and
mov
add
or
push
and
mov
add
in
xchg
fwait
insb
jns
test
xor
inc
push
clc
incl
jno
xor
arpl
xchg
fidivs
adc
leave
push
dec
clc
add
loope
fisubrl
sahf
sbb
dec
and
loopne
enter
push
adc
ficoml
out
idivl
xor
or
sbb
adc
rcl
and
enter
and
mov
mov
sub
and
adc
aam
jns
repnz
lock
push
loop
int3
nop
cltd
jb
push
mov
stc
mov
jmp
paddw
xor
add
or
aad
popf
mov
dec
outsl
xchg
stos
jge
jne
les
outsb
gs
inc
insl
test
daa
jmp
aad
sbb
movsb
sti
cmp
mov
dec
jns
idivl
adc
jmp
jno
mov
hlt
sbb
clc
inc
jo
cmp
pop
pushf
mov
ljmp
nop
xor
push
jnp
inc
jnp
push
cmpsl
movsb
pcmpeqb
jbe
cmp
sbb
fisttpl
rcrl
jmp
mov
jle
cmp
pop
or
in
mov
push
sbb
les
push
out
fsubl
and
jg
push
add
pop
xchg
pop
xlat
leave
add
jae
lahf
dec
call
movsb
dec
sub
adc
sub
ret
cwtl
mov
loope
repz
sarl
jb
dec
push
mov
inc
aad
jo
push
test
out
cwtl
xor
loop
dec
jns
xchg
adc
dec
push
jle
jge
cmc
xchg
insb
into
jmp
adc
mov
dec
pop
shl
cli
lods
pop
inc
xchg
ret
add
jae
flds
or
rcr
jnp
cmpsl
cli
and
and
adc
and
dec
and
inc
stos
fdivr
cmpsl
lock
pop
or
jle
adc
or
in
repnz
jnp
sarl
stc
lret
cmpsl
in
push
sub
jbe
in
sbb
xor
or
sub
inc
jp
xchg
lea
sub
push
dec
iret
inc
xchg
mov
insb
xchg
loope
pop
fcomps
jmp
leave
sti
enter
arpl
lds
mov
iret
fwait
and
xchg
sub
mov
popa
js
bound
aam
sbbb
shll
aad
test
adc
mov
mov
in
lds
and
je
call
xchg
jle
aaa
adcl
pop
rorb
ja
mov
popf
enter
pop
pop
xchg
int
bound
cmp
or
mov
push
subb
xchg
dec
xchg
movsl
outsl
jo
lret
into
aas
mov
add
inc
lods
pop
xor
insl
mov
dec
out
and
pop
sahf
shlb
adc
clc
dec
jnp
and
xlat
in
lods
cwtl
rcr
push
xchg
mov
xor
pop
and
divl
fucomip
inc
inc
and
mov
lock
jnp
push
and
inc
mov
push
jmp
daa
mov
mov
fimull
sahf
xor
jb
mov
xlat
mov
pop
jae
aad
add
in
xor
push
mov
mov
jb
cmp
cwtl
inc
pop
stc
adc
push
mov
sub
sbb
push
dec
push
mov
imul
adc
stc
dec
push
in
imul
dec
push
mov
mov
pop
setg
sub
add
fwait
add
and
cmc
int3
pushf
out
add
xor
lods
adc
sbb
or
icebp
test
push
or
mov
lcall
mov
addr16
pop
jl
dec
mov
and
jns
xor
jmp
add
stc
pop
sub
int
cmp
cmpsl
loopne
jb
movsl
mov
insl
addr16
fisubl
add
dec
push
jge
hlt
add
test
jae
imul
mov
adc
mov
sbb
mov
jl
cmc
iret
mov
mov
outsl
rorb
cmpsl
enter
mov
pop
bound
push
daa
and
pop
stos
jmp
mov
dec
jl
mov
sahf
in
mov
in
sub
xchg
cmpsl
xor
cs
push
mov
cmp
or
scas
out
push
cli
ss
or
movsl
mov
pop
xor
xorb
movsb
adc
ds
les
inc
fistps
ret
inc
push
sbb
js
push
loopne
jmp
imul
xchg
jmp
adc
sbb
cmc
stos
xor
xchg
repz
mov
insl
test
cs
outsl
pop
xchg
fwait
xchg
sub
aam
and
cltd
repz
movsl
push
mov
into
adc
xchg
and
adc
jle
jne
or
je
test
xlat
push
rcrb
jae
sbb
push
xor
cmp
push
sbb
ja
bound
pop
test
jmp
hlt
bsf
xchg
rcll
xchg
xor
repz
bound
cmp
insl
mov
arpl
testl
test
push
add
sub
or
mull
insl
mov
imul
lods
outsl
fistpl
daa
out
or
sub
xchg
das
fistpll
ljmp
ss
arpl
jo
imul
add
inc
xchg
movsl
and
das
pop
jecxz
leave
inc
mov
cmp
sbb
push
xor
cmp
dec
jge
xor
mov
shrl
pop
xchg
loope
adc
fbld
push
adc
lods
lcall
ja
ret
adc
push
ret
and
pop
clc
aaa
cli
xlat
cs
das
leave
mov
add
out
xchg
popf
add
in
cld
add
dec
iret
ljmp
cmpsl
fdivrs
mov
outsl
ficoml
jb
sbb
add
pop
arpl
cmp
int
into
jg
cmp
cmc
adc
inc
jne
jp
mov
lock
jecxz
leave
lahf
or
cmp
das
jmp
pushf
sub
mov
aad
popa
sbb
ljmp
pop
loop
enter
mov
jp
mov
in
mov
sub
jnp
int3
or
and
inc
inc
mov
mov
fisttps
cld
or
subb
psubusw
pop
mov
cld
iret
lods
dec
add
outsb
lock
rorl
inc
mov
xchg
inc
mov
jmp
movsb
jo
aad
faddl
mov
test
dec
ficoms
cmp
pop
aaa
ret
dec
mov
pop
data16
js
add
jbe
nop
loopne
orl
ljmp
dec
jb
jno
pop
dec
and
cmp
lret
nop
push
sbb
aad
or
test
mov
rol
push
push
js
dec
cmp
and
mov
rol
xchg
adc
inc
jecxz
pop
or
pop
and
daa
aam
sbb
xor
fadds
stc
scas
or
stos
xchg
fdivrs
mov
test
xchg
stos
fisttps
rorb
repz
or
sub
add
fs
inc
mov
jae
xor
push
lods
pop
daa
push
mov
std
mov
insl
or
dec
jnp
or
shrl
push
out
daa
test
cmp
cmp
lret
adc
inc
xchg
push
lods
mov
pop
int3
je
and
mov
pop
xchg
push
push
pop
pushf
loop
push
sbb
bound
test
addr16
cmp
insb
push
dec
jno
fwait
mov
gs
incb
adc
jg
adc
add
mov
sub
es
push
pop
in
lea
adc
test
jle
out
pop
cmp
pop
fwait
jecxz
cmpsb
pop
xchg
leave
inc
stos
or
jle
mov
in
mov
push
test
pop
hlt
aad
cwtl
mov
lods
and
mov
cmp
jnp
adc
iret
mov
or
rcrb
shrl
sub
inc
and
into
dec
jb
dec
outsl
cmpsl
cmp
fsubr
xchg
adc
push
dec
outsb
cltd
mov
aas
out
sbb
loopne
and
xchg
jge
mov
mov
pop
lea
push
push
test
fidivl
xor
out
out
fwait
pop
fiadds
sbb
pop
push
mov
int3
std
outsl
mov
jp
xchg
add
adc
dec
or
xchg
movsl
or
in
lret
cmp
fimull
rorb
or
pop
pushf
xchg
cwtl
add
or
outsb
inc
and
and
lret
mov
sub
out
ud0
hlt
add
mov
mov
iret
loopne
push
add
sub
ja
sub
jmp
shlb
jp
cmpsl
add
inc
sbb
fnstsw
jnp
push
push
pop
xchg
incl
xorl
push
ja
aaa
mov
adc
mov
fisubrl
push
pop
jle
outsb
in
xchg
push
rclb
gs
mov
filds
adcl
add
lret
sbb
movl
cmpsl
jb
shlb
dec
ror
aad
into
ret
mov
lds
adc
xchg
adc
push
imull
pop
jmp
adc
xor
loope
or
push
adc
imul
and
mov
mov
push
push
leave
xor
cmp
jmp
inc
jo
sbb
orb
pop
sar
call
lds
sbb
sub
mov
mov
cmp
mov
sbb
negl
pop
sbb
jp
fmulp
sub
mov
add
shlb
pop
dec
shlb
hlt
fucomip
testl
pop
add
popa
adc
fisttps
adc
fiaddl
mov
jae
and
shrb
mov
xor
or
pop
mov
js
mov
pop
jge
and
scas
test
aaa
sar
ja
jae
daa
push
fwait
pop
jbe
jecxz
movsb
cmpsb
pop
imul
lods
call
add
outsl
clc
xlat
adc
movsl
add
pop
fstl
lret
lcall
mov
and
xor
test
pop
sbb
adc
inc
ja
mov
cmp
dec
mov
adc
dec
dec
mov
dec
jbe
dec
or
xor
xor
push
push
rclb
xchg
or
adc
loop
xor
lahf
mov
pop
in
push
lods
push
aad
insl
inc
jns
lods
lret
xchg
mov
lret
nop
or
push
shl
xchg
stos
push
cmp
andb
sarl
push
xchg
ljmp
inc
cmp
leave
push
jecxz
sbb
mov
mov
adc
add
inc
xor
addr16
adc
ss
or
add
cmp
shll
mov
xchg
roll
add
test
adc
nop
push
sbb
loope
in
test
ret
imul
pushf
dec
jl
adc
out
orb
ja
push
sbb
cmpsl
xchg
outsl
lret
lret
xchg
sbb
xlat
mov
mov
sbb
mov
dec
clc
fmuls
lock
movsl
xor
lods
out
adc
dec
push
imul
test
popa
mov
dec
stc
bound
pop
cmp
les
inc
jbe
js
cli
mov
cmp
outsb
or
jo
jae
mov
cmp
je
imull
je
inc
push
and
aad
mov
pushf
fiaddl
sub
xlat
je
pushl
cld
and
xor
pop
pop
popa
mov
adc
push
hlt
pop
xorl
xchg
jno
push
push
orps
xchg
sbb
jle
jb
mov
shr
into
cmpsl
pop
jge
add
pop
jne
push
aas
cmp
repz
int3
dec
xor
mov
add
jl
sbb
mov
stos
mov
cmp
xor
lods
cld
test
in
dec
xor
or
test
mov
scas
xlat
into
mov
inc
dec
test
add
mov
jmp
inc
data16
dec
lea
xor
repz
ret
mov
jle
xchg
rorb
or
dec
fildl
cmpsb
aas
call
insl
fdivrs
mov
xor
mul
loope
mov
nop
aad
cmp
mov
andl
and
das
cmp
add
inc
jecxz
stc
adcb
cmp
aas
sub
xor
cli
pop
mov
dec
mov
push
push
outsb
decb
mov
adc
adcl
push
test
fsubrl
sbb
sbb
push
xor
data16
imul
fwait
outsb
dec
das
stc
stos
cli
sbb
push
xchg
lcall
flds
xchg
idiv
ret
push
mov
or
pop
repz
mov
faddp
fldl
ja
movsl
cmp
ss
or
nop
movsl
ja
addb
xchg
jo
mov
mull
sub
es
mov
fisubs
lods
jae
mov
pop
into
xor
dec
aas
cltd
fidivrs
and
mov
ljmp
xchg
xchg
jo
orb
mov
rcrb
shrl
cltd
fcompl
data16
in
dec
mov
insl
pop
or
test
mov
inc
je
jo
lret
std
inc
xchg
sarb
call
add
test
mov
push
arpl
adc
aam
add
ljmp
repnz
mov
inc
sub
cltd
push
or
or
cmp
cmpsl
adc
cmc
cmp
xor
rclb
mov
imul
pop
sub
popf
xchg
pop
addb
pusha
and
add
outsl
pop
jle
fwait
add
pop
lret
cmp
pop
shrb
gs
in
mov
call
or
mov
fmul
or
inc
jl
jl
arpl
xchg
and
aaa
dec
push
das
add
mov
and
pop
scas
add
lcall
and
add
divb
cmpsb
lods
push
clc
fimuls
mov
test
and
xor
push
std
jmp
jbe
je
pusha
lods
sbb
es
jbe
and
push
cmp
and
or
and
fsubrl
pop
add
mov
nop
pop
and
inc
shl
cmpsb
cmp
loope
ret
cmpsl
mov
gs
pop
jae
add
lcall
nop
fsts
daa
jmp
jl
addr16
mov
adc
sbb
push
into
scas
mov
out
ja
clc
rorl
jnp,pn
vcvtsd2ss
jne
xchg
sti
cmp
mov
repz
fnstsw
scas
test
xor
ret
mul
mov
push
adc
es
cmpsb
pop
xchg
pusha
test
mov
add
inc
xor
shlb
mov
inc
call
jle
cmp
dec
loope
js
add
fimuls
movsl
into
dec
sub
sub
pushf
popf
call
outsb
pop
fcmove
nop
mov
aam
xor
aaa
int3
or
in
int
aam
xor
xor
leave
mov
je
rorb
rcr
outsb
mov
and
hlt
popf
xchg
scas
mov
fcom
inc
sub
ret
inc
push
pop
mov
mov
sbb
aam
inc
pop
les
shrb
addr16
outsl
movsl
xchg
cmp
sbb
aaa
mov
push
or
test
mov
out
cld
imul
pop
dec
xchg
lds
addr16
jl
xchg
inc
mov
ret
mov
dec
inc
cmp
mov
push
mov
fcomp
dec
mov
icebp
outsl
gs
pop
xchg
push
inc
jg
inc
push
cmp
jp
ficomps
clc
xlat
cmpsl
or
mov
cltd
bound
popa
pop
jg
inc
xchg
testb
mov
ret
inc
inc
fisttps
xchg
dec
ja
add
push
pop
outsb
inc
pop
cmp
cmp
hlt
fiaddl
or
cltd
sbb
cmpsb
jno
xor
sbb
cltd
xchg
pop
cli
stc
sub
mov
add
mov
pop
pop
aas
clc
int3
cmc
pop
test
mov
pop
aad
adc
cmp
loopne
arpl
or
mov
mov
inc
jb
mov
iret
mov
test
adc
xchg
add
daa
lea
sbb
fistpl
pop
fsubr
mov
fisttps
mov
sbb
data16
ret
mov
inc
dec
xchg
mov
mov
adc
fs
lret
pop
jnp
lahf
mov
adc
ja,pt
xlat
daa
jle
mov
mov
dec
jp
cmp
les
dec
cmp
iret
pushf
and
pop
sbb
mov
push
icebp
sub
imul
mov
jge
xchg
dec
ja
pop
cmp
repz
stc
popa
inc
aad
fwait
andl
movsb
mov
adc
lahf
iret
sbb
sbbb
xchg
loope
std
xlat
pop
mov
push
rorl
mov
jns
fwait
pusha
mov
popf
xchg
sbb
pop
add
mov
in
jmp
xchg
xchg
push
scas
add
fs
ja
daa
fildll
out
cmp
test
lods
insb
scas
add
icebp
inc
push
lret
xor
loopne
lret
scas
jl
cmp
cltd
mull
clc
jne
add
xchg
cmp
lock
sti
mov
fcoms
fst
aad
dec
cmpsl
test
mov
lret
rol
cmp
in
mov
or
and
or
add
xor
ja
test
and
cltd
jne
mov
adc
outsb
inc
dec
xorb
sub
fsub
jnp
xchg
push
cmp
in
out
mov
imul
cmpsb
dec
push
and
stos
xor
cmp
push
out
dec
mov
xchg
movsl
ljmp
std
scas
xchg
and
scas
jg
mov
xor
inc
xchg
adc
clc
mov
loop
xchg
sub
bound
adc
cmp
into
fnstcw
pop
sub
packssdw
scas
jmp
xchg
pop
aam
inc
sub
jns
gs
add
les
fwait
jl
inc
xchg
sub
rcrb
sub
and
lahf
sub
or
test
mov
arpl
sbb
mov
adc
out
lock
push
or
mov
mov
mov
repnz
ret
xchg
ja
fs
pop
pop
loopne
js
cmovo
pop
movsw
xor
or
xor
bound
rolb
lret
popf
jae
test
mov
and
clc
pop
mov
loopne
lahf
xchg
jbe
adc
je
pop
dec
adc
icebp
mov
stos
jo
pop
popa
mov
mov
pushf
fiaddl
outsb
gs
cltd
sub
sbb
repnz
fmulp
xlat
test
mov
dec
xchg
dec
fiadds
fnsave
adc
jle
jbe
jg
repz
jmp
mov
dec
ds
sub
sbb
add
and
das
and
test
mov
fcoml
xchg
mov
mov
xor
in
scas
sbb
ds
push
int
jne
lock
jo
fnstsw
outsb
xorl
push
movsl
in
inc
add
xor
addl
pop
addr16
fimuls
inc
cmpsb
cmp
xchg
inc
inc
push
push
sbb
or
or
fcomip
les
sbb
sub
test
push
out
aas
xchg
rcr
mov
jge
mov
mov
adc
rcl
mov
or
pop
xor
adc
xor
cmc
xchg
pushf
shrl
sub
nop
shrl
xor
loope
hlt
fucomip
mov
mov
add
ds
inc
sbb
test
out
dec
es
stos
lcall
push
cltd
mov
jae
push
xchg
adc
aad
pop
inc
mov
clc
in
pop
mov
das
inc
mov
faddl
mov
jecxz
mov
xor
decb
xor
loopne
inc
stos
adc
xchg
test
pop
gs
out
add
jmp
xor
mov
xor
test
in
cs
dec
cld
add
adc
int
cmpsl
add
lods
dec
sub
in
or
or
aad
pop
inc
mov
daa
mov
add
imul
cmpsl
xchg
lock
push
mov
call
or
mov
in
adc
sbb
dec
nop
jne
push
and
adc
add
sub
nop
lds
inc
out
test
lods
xor
adc
xchg
scas
jae
xor
jge
fbstp
fsubrp
enter
das
cmpsl
or
iret
ljmp
mov
fildl
fcmovu
dec
mov
mov
mov
jg
pop
pop
sbb
ss
test
xchg
push
cld
cmpsb
jo
cld
mov
push
dec
arpl
popl
pop
inc
iret
dec
push
movsl
push
mov
flds
fnstcw
sub
pop
fsts
imul
repnz
aad
adc
mov
push
out
mov
adc
sub
mov
xchg
outsl
push
jp
pop
aas
fiadds
push
notl
jns
dec
cmp
pop
outsb
out
push
dec
in
adcl
jae
enter
xor
adcl
xchg
in
data16
shll
inc
rcll
pop
mov
stos
xchg
jns
inc
shrb
mov
sbb
mov
inc
sbb
mov
out
or
or
cwtl
xchg
jmp
lods
xlat
and
lods
mov
iret
mov
or
neg
stc
les
shll
sbb
insl
lahf
pushf
and
cwtl
shl
test
out
in
add
icebp
mov
jb
sbb
shrb
andb
out
mov
adcl
sarl
dec
cmc
mov
push
das
sbb
xchg
jne
pop
push
dec
inc
and
inc
leave
mov
leave
mov
or
and
iret
sub
insb
in
icebp
xchg
iret
js
lods
das
and
push
mov
lcall
and
aad
orb
sbb
sbb
cmpsb
lods
xor
or
inc
rcrl
push
xchg
popf
sub
cmpsl
push
lcall
leave
push
lods
in
and
or
out
xchg
xor
and
sub
xchg
rcll
test
xchg
test
pushf
shlb
and
cmpsb
loope
loopne
pop
pop
inc
mov
adc
sbb
icebp
cwtl
add
adc
sbb
testl
cli
out
sub
sbb
scas
andl
fmull
pmullw
mov
mov
cmpsb
movsl
scas
imul
xorl
out
push
adcb
sub
inc
sub
inc
outsl
test
cs
pop
scas
adc
in
pusha
aam
iret
test
in
jg
int
mov
out
jl
mov
je
jne
adc
leave
jno
push
mov
xchg
flds
les
lods
cli
int3
xchg
jne
icebp
rorb
xchg
push
xchg
je
mov
jns
pop
sbb
sbb
jae
lock
shll
mov
inc
xchg
pusha
popf
add
cli
pop
sbb
mov
xchg
cli
mov
xor
in
dec
adc
or
mov
mov
or
and
aas
movsl
pop
mov
frstor
shrl
jmp
or
mov
enter
notb
fnsave
cli
in
jno
scas
out
outsb
dec
mov
repnz
lods
sub
arpl
adc
fcompl
stc
aas
pop
pop
in
sbb
stc
mov
dec
out
stc
rcll
pop
jmp
hlt
test
inc
pop
dec
jl
sbb
sti
fisubrl
cmp
invlpg
add
aaa
adc
dec
clc
leave
jo
scas
jge
xor
jmp
testb
mov
add
lds
jne
cmpsb
sbb
mov
dec
cs
dec
xchg
lcall
outsl
push
outsb
xlat
js
sub
jg
xor
ret
sub
xchg
xor
mov
push
push
mov
mov
add
dec
and
dec
ljmp
inc
insb
stos
movsb
jne
mov
jnp
or
insl
lret
add
xchg
fadds
dec
mov
mov
out
push
cmp
add
aas
fildll
icebp
aad
pusha
xchg
cmpsl
cld
in
icebp
mov
das
stos
add
dec
xchg
and
imul
lds
jl
xchg
jmp
sbb
push
adc
aaa
notb
int
insb
mov
icebp
jae
jge
cmp
xchg
loopew
fiadds
xchg
xchg
jb
push
jecxz
adc
adc
sbb
mov
ret
jno
pop
push
aad
jmp
in
mov
sub
lods
sub
aaa
js
jg
mov
mov
and
add
pop
or
xchg
jns
inc
rcll
push
inc
fs
xchg
inc
in
push
jle
jo
in
lret
out
aas
adc
mov
pop
int3
and
sub
fnsave
add
dec
push
add
mov
stc
jmp
push
movsl
xor
loopne
testb
aaa
decb
jle
in
and
adc
pop
imul
mov
push
movsl
imul
test
nop
ret
rclb
ret
mov
jg
xor
pop
fdivs
xor
jge
xor
jno
push
mov
in
inc
xchg
stos
xlat
iret
dec
jmp
negl
adc
or
loop
mov
arpl
xchg
icebp
xlat
lods
dec
lcall
xor
popa
and
and
mov
neg
lcall
inc
jns
ja
inc
cwtl
sub
push
scas
insb
add
mov
aad
mov
adc
nop
pop
push
mov
inc
outsb
loop
or
fs
jno
subl
aad
xchg
cmp
das
pop
push
insl
fsubr
xor
jns
push
mov
into
sbb
fsubrs
pop
sub
lahf
push
jle
clc
fidivl
shll
es
sbb
mov
push
xor
pop
sub
sub
inc
mov
movsb
imull
inc
push
repnz
pop
jmp
shrl
mov
shrb
in
lock
negl
mov
adc
mov
divb
jmp
pop
xchg
popf
cmp
test
sub
inc
daa
mov
sub
add
push
jl
mov
pop
push
push
xchg
and
lods
enter
jo
scas
pushf
jp
mov
and
pop
sti
jg
pop
mov
dec
lret
mov
add
xchg
mov
add
ljmp
xchg
push
xor
movsl
xor
xor
lds
inc
dec
xchg
sarb
icebp
inc
mov
jae
in
push
int3
fnsave
fldcw
mov
out
nop
fildll
dec
inc
adc
cmp
pop
mov
fmul
nop
mov
lret
imul
outsb
sbb
out
fsubrs
inc
imul
xor
push
enter
ja
shrl
xchg
adc
clc
lds
push
cmp
lds
dec
aam
daa
movd
mov
and
or
ljmp
adc
jmp
and
xor
push
in
or
or
mov
stc
mov
pmaxub
addl
mov
mov
ss
scas
lock
and
cli
push
mov
jno
add
arpl
cmpsl
pop
pop
xor
sub
icebp
test
lods
mov
sub
dec
scas
cmpsb
inc
jg
fsubl
aaa
lods
mov
push
lcall
adc
push
pop
cli
sbb
inc
aam
clc
outsb
out
mov
mov
pop
aas
scas
movsl
loop
ret
sbb
jle
cmp
mov
sahf
or
xchg
mov
inc
sbb
shrl
and
sahf
cli
rorb
dec
fadds
clc
jmp
hlt
repz
inc
pushf
sar
cmp
xor
es
inc
addb
xchg
pop
loop
int
aad
imul
fistps
dec
lods
pop
mov
inc
gs
mov
aaa
or
pop
sbb
aad
adc
lock
cwtl
loopne
or
xor
psubq
jmp
ljmp
mov
jns
stos
mov
stos
insl
mov
sbb
pusha
add
movsb
dec
daa
adc
mov
mov
push
xchg
mov
lods
xchg
or
lcall
in
pop
aad
adc
lock
dec
icebp
and
xchg
jb
mov
bound
arpl
jnp
xchg
orb
jg
mov
lods
ljmp
lds
test
test
mov
ret
add
lret
push
mov
pop
ss
imul
aam
mov
pop
push
test
stos
lods
add
gs
pop
aad
mov
inc
sub
imul
cmp
imul
aam
dec
repnz
and
lret
call
adc
mov
mov
lock
out
sub
std
jp
scas
out
mov
adc
fistps
mov
int3
in
imul
rcll
jle
outsl
cmp
inc
ret
out
cmp
adc
sub
mov
outsb
mov
iret
aad
fisubl
dec
ret
jbe
mov
fiadds
scas
dec
pop
sbb
xlat
fisubrl
ja
dec
pop
sbb
jl
xor
in
daa
aaa
cs
fldl
fcoms
xor
mov
jno
add
rcl
push
repnz
xor
imul
pop
xchg
jmp
xor
cmp
int
xchg
test
out
xor
add
sbb
and
pop
pop
adc
adc
out
mov
and
xchg
mov
jbe
notl
pop
fildll
cltd
imul
inc
scas
lcall
pop
sbb
dec
push
dec
daa
add
cmp
xchg
push
jmp
cmp
fstps
mov
fsubs
mov
lea
pop
lret
jl
sub
jns
or
mov
mov
jl
adc
and
mov
xor
loop
inc
mov
pop
test
fstl
xchg
roll
scas
sub
stos
repnz
sub
mov
daa
enter
clc
pop
pop
lods
pushf
sti
mov
filds
das
outsb
dec
ljmp
sub
dec
push
jo
push
mov
mov
test
jecxz
and
cmpsb
lods
test
ja
testl
adc
cmp
cmp
dec
addb
jl
xlat
clc
mov
jl
ret
test
das
mov
jmp
inc
addr16
repz
pop
aad
repnz
inc
call
stc
cwtl
or
stc
sbb
ret
lods
jno
es
es
cs
scas
idivl
loopne
neg
or
mov
cmpsl
xor
push
or
add
push
sahf
pop
adc
cmp
push
add
cmc
shl
push
sbbb
fs
arpl
xchg
das
loop
push
je
out
or
mov
iret
push
or
insl
je
sub
mov
mov
enter
test
lods
ljmp
mov
into
lcall
mov
jle
lds
push
stc
fadds
xor
fistpll
jbe
jb
inc
loope
xchg
xor
jns
mov
movsb
dec
movsl
lret
mov
lods
jo
in
aad
jo
mov
add
xor
mov
fcoml
add
dec
negb
pusha
outsl
jle
enter
fisttpl
or
inc
jle
xor
xchg
test
ja
jo
fsubrl
pop
not
pop
jbe
icebp
dec
loope
in
test
and
in
loop
xchg
cmp
xor
mov
js
cmpsl
dec
jne
push
mov
scas
mov
xchg
mov
fidivrl
inc
sbb
rclb
dec
and
fildl
pop
pop
lock
loop
int
aad
out
cmp
mov
inc
daa
cmp
lret
mov
jle
sarb
ja
ret
scas
push
dec
mov
cli
pop
adc
cmpl
lret
ret
sbb
aad
aas
mov
aaa
mov
inc
adc
mov
imul
add
pop
mov
and
xchg
mov
jb
fld
pop
mov
push
mov
int
xchg
ljmp
inc
enter
xor
jbe
pop
addr16
cmp
leave
mov
dec
mov
xor
mov
mov
loope
mov
mov
js
jae
notb
sar
rcrb
jl
aas
aas
stc
push
jo
mov
adc
les
je
ret
aam
add
xor
shl
mov
jno
inc
hlt
addr16
jno
mov
adc
dec
inc
and
out
movsl
lea
hlt
cmp
mov
aas
fs
sbb
mov
xor
xchg
popf
sbb
in
lret
mov
movl
dec
adc
cmp
adc
mov
pop
popa
mov
xchg
inc
fmull
adc
push
pop
and
fwait
into
rcrl
sbb
push
out
rorb
mov
or
sbb
shlb
shll
in
out
les
fistl
jbe
mov
inc
rcrb
mov
mov
mov
loopne
fldl
jmp
adc
es
outsl
fmull
lods
xor
sahf
pop
push
into
sarb
out
mov
sub
xchg
jl
inc
js
and
or
jb
add
jecxz
add
lds
and
cmp
adcl
call
lret
fstpl
fistps
xchg
scas
push
fldl
shlb
outsl
loopne
decb
fdivrs
lahf
sub
mov
subb
int
mov
aas
jecxz
add
xchg
sbb
or
jnp
push
pop
pop
in
adc
adcl
xchg
pop
dec
dec
arpl
jo
pop
inc
std
dec
enter
stc
jno
xor
xor
dec
mov
pop
inc
icebp
mov
insb
std
repz
lods
jmp
xor
and
jle
add
cmp
loope
inc
adc
into
add
mov
dec
mov
cmp
into
bound
cmp
inc
imul
push
enter
fsub
dec
clc
mov
inc
popaw
mov
push
and
pushf
sub
pop
adc
xlat
test
rol
rorl
and
jns
arpl
pop
cli
ret
dec
in
jnp
es
hlt
leave
stos
mov
popf
sub
push
adcb
cld
lods
repnz
mov
inc
ret
jbe
shrb
inc
je
dec
mov
pop
cltd
cmp
js
cmp
rcll
rorl
call
mov
dec
pop
aam
or
add
mov
out
js
sub
repz
mov
lock
mov
pusha
jo
popf
dec
movsb
stos
mov
das
and
ja
adc
ja
lret
inc
loop
testb
int
dec
sub
sbb
xchg
cmp
or
loopne
pop
cld
inc
pop
jge
psubsb
ja
ds
popf
loopne
jp
daa
adc
pop
push
jae
or
lock
jne
xorb
jbe
xchg
sub
sub
shlb
lret
inc
jbe
fsubs
push
cmpsl
adc
xor
push
stos
pop
or
adc
mov
adc
inc
movb
push
decb
rcrl
in
repnz
lods
pop
add
cmc
ljmp
nop
xor
push
or
pop
loop
int3
popa
pop
add
hlt
in
les
inc
xor
ja
mov
jnp
push
lret
mov
fcmovnbe
call
sahf
ja
lret
xchg
jbe
xchg
xor
mov
pop
inc
inc
jg
jl
negb
popf
aas
push
andl
mov
outsl
pop
mov
jne
popa
es
xchg
inc
add
jae
sti
idivb
jbe
mov
ret
sbb
xor
sbb
push
pop
call
loope
jne
mov
cltd
pushf
mov
es
push
mov
pop
aas
xchg
test
adc
add
mov
outsb
cmpsb
xor
mov
pop
imul
jecxz
jmp
icebp
inc
sub
or
sub
mov
test
xlat
xchg
jp
add
push
shll
out
push
cmp
test
mov
bnd
cwtl
and
mov
addb
fsts
rorb
push
fisttpll
scas
leave
inc
pop
jl
ljmp
fucomip
and
dec
cmpsl
cmp
test
push
popa
push
sbb
aad
and
pop
fwait
aad
inc
and
jle
insl
lret
mov
cmp
repz
mov
jb
shrb
lds
sub
inc
scas
dec
xchg
inc
push
push
mov
orb
adc
imul
mov
fmull
lret
in
mov
jne
mov
je
xchg
filds
sbb
push
xchg
jge
push
ret
push
lret
jne
pop
notb
lock
scas
sbb
inc
xor
mov
aaa
flds
cmp
sub
out
aas
xchg
in
pop
out
cwtl
jp
mov
add
add
aas
out
shll
push
pop
mov
adc
adc
jmp
push
and
movsl
xchg
cwtl
dec
jo
inc
push
icebp
test
inc
adc
ds
pushf
pavgw
and
cmp
movsl
or
out
in
stc
outsb
inc
sbb
dec
dec
jne
popf
in
xchg
pop
outsl
loopne
sub
loop
push
mov
andl
fs
fs
jl
ja
push
cli
gs
insl
mov
pop
jl
adc
xor
orl
mov
push
sbb
test
cmp
and
cmp
mull
loope
or
sbb
inc
cli
fnsave
inc
sub
arpl
mov
sub
jge
sarb
hlt
imul
jns
je
test
test
jmp
fistpll
jmp
and
push
sub
lock
dec
mov
and
mov
call
mov
int
out
mov
lcall
jnp
push
sbb
sub
inc
ljmp
push
adc
mov
jp
ret
xor
and
fidivl
mov
mov
sub
jp
sbb
movl
stos
das
shrl
add
out
push
rcl
mov
dec
out
dec
dec
push
mov
xchg
sahf
pop
imul
sbb
jmp
lds
orl
js
jae
push
ret
jbe
adc
jb
in
sub
shrl
notl
pop
pop
mov
cltd
ja
mov
and
js
call
sahf
xchg
and
daa
movsl
stos
lods
push
mov
push
pop
mov
jg
xchg
std
ret
stc
pop
sub
add
mov
mov
leave
pusha
push
sahf
imul
repnz
pop
or
addr16
in
inc
lret
mov
mov
pop
push
xchg
fiaddl
je
push
sahf
aas
fwait
add
lcall
xchg
pushf
mov
mov
hlt
pop
sub
sbb
stos
fdivs
push
push
fdivrl
shl
sub
cltd
je
xchg
xchg
inc
mov
adc
xchg
adc
int
sub
xlat
pushf
mov
xor
stos
stc
pop
mov
jg
xor
sarb
es
jmp
les
fwait
push
fwait
ja
lods
mov
imul
and
sbb
imul
data16
xor
xchg
je
sbbb
lret
mov
dec
lcall
jbe
loope
lret
rol
dec
es
and
pop
lds
sbbl
push
add
xor
cmp
jnp
shlb
arpl
push
push
in
je
sbb
stc
xchg
adc
xor
and
dec
fsubrs
movsb
sbb
xchg
sahf
pop
push
insb
jecxz
jns
mov
add
jle
inc
pop
ja
inc
shll
fisttpll
pop
mov
mov
jb
movsb
movsl
pop
push
xchg
dec
dec
outsl
dec
xchg
mov
clc
push
sbb
inc
leave
test
dec
add
nopl
pop
sbb
hlt
stc
sub
jmp
repnz
adcb
push
in
pushf
iret
pop
lock
mov
sarl
addr16
mov
cmp
jl
dec
data16
jno
adc
ret
movsb
rol
repz
insb
mov
mov
addr16
dec
stos
fwait
inc
push
movsl
jge
dec
dec
ljmp
mov
xchg
fildl
rcrb
cmpsb
adc
cld
dec
leave
gs
pusha
pop
lock
and
dec
mov
adc
sbb
stos
hlt
inc
cmp
lds
popa
loope
mov
ficoml
jae
iret
aad
movsb
ja
nop
iret
cmp
pop
push
adc
jp
movsb
hlt
jae
dec
sbb
push
out
mov
add
test
sahf
or
mov
int
dec
xor
or
inc
out
out
push
mov
mov
sub
hlt
movsb
test
insb
fcom
int3
outsb
shll
outsl
jecxz
mov
mov
and
test
cli
pop
ja
lods
in
add
cmpsl
xchg
mov
push
jl
js
dec
mov
mov
push
and
dec
push
jp
lea
or
dec
ret
mov
shr
decl
dec
or
mov
or
push
sahf
cmp
adc
cltd
fidivrl
adc
cmp
outsl
shrb
xor
mov
pop
cli
mov
scas
cmpsl
out
pop
ret
cmp
xchg
sbb
je
jbe
mov
mov
aad
adc
jne
in
mov
aas
jnp
cmp
je
add
sbb
cmp
mov
shll
sub
inc
das
out
stos
fstpl
loop
rcr
sbb
cli
rolb
enter
into
mov
fldl
dec
lods
push
or
mov
imul
ss
ret
adc
lods
add
mov
push
jp
lods
jg
mov
jmp
andl
add
xchg
sbb
mov
cld
leave
pop
jae
mov
aas
pop
sub
mov
call
movsb
in
sub
sbb
fstl
mov
dec
add
inc
inc
outsl
cmp
cmpsl
sar
sub
test
or
shr
inc
xor
cli
push
inc
or
lret
or
or
cmp
in
imul
fldt
xchg
clc
imul
mov
push
and
jle
outsl
and
jle
les
pushf
cwtl
es
ljmp
add
mov
lock
out
cwtl
xchg
nop
fbstp
enter
xchg
ds
movsl
iret
inc
xor
mov
pop
int
pop
dec
xchg
inc
negb
or
mov
mov
adc
jae
xchg
shl
dec
aad
lahf
ljmp
popa
sti
lea
pop
push
sahf
sbb
in
aad
enter
ret
movsl
mov
push
fildll
clc
cli
push
push
out
cmc
sbb
scas
sahf
push
push
outsb
push
dec
xorl
mov
mov
in
iret
gs
ljmp
cwtl
pop
push
cmpsl
xchg
push
xchg
jle
insl
or
popf
xlat
mov
faddl
sarb
sarb
push
jmp
mov
mov
inc
es
dec
or
inc
popa
test
xor
movsb
mov
xor
sub
sub
test
push
pop
sbb
loop
add
jge
sub
dec
or
sub
mov
and
inc
xor
pop
sbb
sbb
sbb
mov
call
xor
add
pop
out
push
push
inc
sub
cmc
cwtl
das
or
bound
mov
fldl2e
sbb
sub
jb
jne
out
mov
xchg
push
stos
scas
jg
pop
pop
xor
jno
cli
fmuls
sbb
lea
mov
ret
mov
lds
push
mov
dec
jne,pn
xchg
dec
mov
dec
popf
sti
mov
fnsave
jle
jbe
pop
fyl2xp1
adc
jb
stos
shll
or
loope
insl
les
int
loope
pop
dec
in
pushf
sub
or
and
add
lcall
push
les
and
mov
sbb
adc
mov
cmpsb
pop
xor
and
cmp
incb
pop
sbb
mov
movsb
jb
fldenv
pop
mov
mov
jecxz
orl
icebp
cmpsb
jns
mov
cltd
xor
lret
dec
dec
aad
imul
fiadds
movsl
lret
neg
sbbl
mov
in
push
push
pop
pop
hlt
lock
cmp
inc
xchg
fwait
mov
daa
or
cmp
sub
mov
outsl
and
jo
cmp
dec
push
and
xchg
andb
aam
push
nop
cld
mov
iret
mov
xor
push
add
addr16
or
mov
push
xor
lret
dec
mov
ret
pop
jno
mov
sub
dec
pop
nop
sbb
adc
mov
pop
mov
fldl
inc
not
clc
aad
mov
out
dec
imul
arpl
cmp
fiadds
stos
jo
int
mov
xlat
xchg
sti
cli
mov
pop
jns
outsb
das
cmp
push
adc
aas
iret
pop
push
stos
xchg
std
into
enter
jmp
pop
test
jb
xor
aam
fldl
lret
adc
sbb
or
sbb
jbe
dec
mov
scas
adc
add
push
mov
mov
or
jns
or
clc
clc
loop
ret
mov
inc
repnz
sub
xchg
mov
popa
das
dec
aaa
fcomi
cmp
adc
ss
addr16
add
mov
jecxz,pn
leave
lods
add
aad
jo
add
je
in
mov
insl
pop
test
sub
xor
xor
xchg
and
push
fwait
les
pop
loopne
dec
std
out
adcb
and
mov
nop
mov
xchg
int
popa
push
mov
push
push
add
nop
pop
fs
ds
arpl
repnz
jae
lret
aam
cmp
in
push
shlw
pushf
add
enter
stos
mov
or
or
sub
cmp
mov
jae
insl
movsb
push
push
adc
in
stc
dec
pop
enter
mov
sub
add
lcall
mov
cli
insb
out
ja
or
daa
xlat
mov
push
and
pop
adc
outsl
pop
insl
gs
inc
sub
js
add
pushl
mov
cmp
sub
insl
clc
das
out
sahf
mov
lods
cmc
xchg
cmp
cli
outsb
sub
lods
daa
fstps
cli
sti
clc
sub
rolb
push
lods
mov
cltd
movsb
fisttpll
addr16
add
mov
jne
repz
scas
cmc
mov
pop
aad
xor
shlb
ds
popf
daa
mov
or
ljmp
mov
stc
dec
rorl
cmp
push
xchg
dec
mov
repz
rcll
fadds
aas
es
andb
push
jae
js
rorb
pop
pushf
or
mov
clc
fiaddl
ja
push
cmp
stos
jp
xchg
sub
test
sar
push
addr16
fs
aaa
sub
popf
mov
mov
movsl
xchg
inc
out
shl
gs
push
mov
inc
outsb
divb
cltd
aas
lret
test
fsubrs
ss
cmpsl
sub
mov
icebp
or
adc
or
mov
inc
add
cltd
repz
pop
mov
dec
cmc
mov
push
arpl
and
out
push
lds
xchg
into
ficomps
xchg
or
push
test
lds
dec
pop
imul
xchg
push
jns
mov
sbb
xchg
sub
mov
pop
jbe
push
div
repz
jbe
cltd
or
xchg
fidivl
sub
mov
push
jo
mov
sbb
sarl
xchg
or
arpl
lock
xchg
mov
xorb
stc
test
xchg
sbb
xor
and
xchg
adc
lret
fisubs
xchg
push
fists
ret
out
cmp
out
push
std
cli
mov
jno
adc
or
xchg
daa
and
push
xor
gs
and
roll
inc
adc
outsl
js
add
jl
in
in
xchg
call
xchg
and
jg
xor
stos
add
push
testl
std
test
jle
jbe
jne
mov
sti
lahf
sub
repz
shrb
rcl
pop
push
popf
cld
scas
pop
idivb
mov
mov
repz
das
int
mov
shll
rolb
call
jo
test
mov
xchg
xchg
je
xchg
out
cld
int
aam
or
push
loope
xor
xchg
loope
mov
test
mov
jge
outsl
das
dec
ret
rcrl
test
mov
or
add
mul
cld
adc
mov
and
add
cmp
inc
lds
cmc
cmp
movsb
cmpb
pop
aad
push
sub
pop
and
cmc
sbb
add
scas
jge
jle
xchg
push
cwtl
jl
jecxz
roll
and
pop
test
sbb
fimull
xor
cmp
imul
mov
enter
or
add
jbe
dec
xor
imul
scas
enter
in
mov
sub
mov
mov
add
lea
call
idivb
sahf
cmp
xor
sbb
xchg
mov
aaa
cmp
jb
ret
icebp
aas
les
jp
pushf
loopne
pop
in
lock
pop
imul
dec
cwtl
mov
gs
adc
adc
mov
dec
jo
and
dec
lret
mov
push
int3
mov
imul
and
cltd
arpl
inc
push
test
std
nop
repz
inc
cmp
mov
aas
es
enter
js
lods
or
inc
mov
fwait
xor
mov
dec
aam
test
and
inc
pusha
push
fdivrl
xchg
sbb
fwait
lds
mov
and
mov
cmp
lcall
push
mov
adc
cmp
pushf
inc
je
out
aad
sub
scas
icebp
dec
dec
pop
lods
loopne
iret
enter
dec
jne
scas
aam
test
jne
sub
loopne
es
clc
imul
hlt
cli
pop
inc
rcll
cmpsl
or
inc
lds
mov
aaa
mov
daa
push
xor
loop
xor
int3
xchg
cmpl
mov
inc
push
jmp
cmpsl
aad
or
adc
nop
mov
cs
cld
sub
push
or
and
sub
jge
mov
push
dec
lcall
sbb
and
push
xchg
xor
mov
adc
dec
mov
lods
clc
jno
push
nop
or
jp
loopne
or
in
cmp
ss
mov
mulb
stos
xor
jne
scas
xor
xlat
ret
jns
scas
dec
mov
adcb
dec
lods
fldenv
scas
adc
and
pushf
push
sbb
xchg
lret
jno
xchg
sbb
test
les
lea
xchg
outsb
call
ret
jno
and
jmp
sub
movsb
jb
data16
mov
ljmp
jbe
or
cmp
dec
xor
sti
movsb
xchg
cld
push
js
das
fnsave
loope
pop
mov
sub
push
sub
int
xchg
xor
outsb
cmp
mov
sub
ret
mov
mov
subl
mov
push
dec
adc
pop
jl
pop
daa
addr16
dec
inc
inc
jp
in
or
cli
fdivl
mov
sti
insb
pop
add
xchg
or
push
fisttps
ret
pop
xchg
jle
inc
sub
push
or
push
shll
loop
mov
mov
jle
dec
xchg
sbb
shll
xor
jge
data16
insb
pop
cwtl
mov
sub
or
roll
jae
push
aam
lods
lock
pop
or
mov
repnz
hlt
ret
js
jle
fldt
aam
movsl
jb
icebp
sub
inc
in
pop
xchg
fcompl
pusha
cmc
xchg
push
fildl
lods
xchg
loope
push
daa
ror
fxch
xchg
or
jle
dec
pop
shlb
int
test
pop
ret
loope
mov
insb
in
mov
fwait
in
pop
mov
sbb
pop
adc
scas
xchg
adc
push
and
repnz
fs
rcrl
jae
cli
pop
cmpsb
sub
stos
mov
or
mov
mov
mov
mov
inc
jb
mov
shrl
adc
fsub
pop
imul
sarb
and
into
out
adc
xor
mov
or
enter
std
push
or
or
cmp
xchg
les
out
int
mov
out
daa
mov
mov
mov
push
lret
out
mov
cmpsb
sbb
adc
sti
sbb
cmp
hlt
inc
push
lret
out
xchg
mov
xchg
dec
pop
enter
outsb
dec
jns
sub
mov
jno
xchg
hlt
gs
arpl
clc
ret
test
xchg
push
sbb
dec
fstpl
jl
cli
mov
int3
repz
in
xchg
pop
insl
leave
mov
fstps
loope
into
push
pop
adc
cmp
out
aam
mov
fstpt
int
or
mov
enter
clc
in
inc
das
pop
in
sub
lcall
fdivp
fdivl
mov
mov
sahf
movsl
repnz
push
dec
out
sbbb
cmpsb
pop
call
xlat
add
adc
sub
std
dec
lret
xor
movsb
in
pushf
lahf
mov
ss
sub
jmp
pusha
cmc
sbb
popf
pop
xchg
xor
fdivp
test
or
fdivl
aad
lds
add
pop
shlb
mull
enter
push
sbb
ds
mov
clc
mov
leave
mov
or
les
cwtl
sub
cmp
pop
stos
cmp
mov
int3
loopne
insb
imul
subl
je
xlat
out
sub
ss
jae
jae
addr16
mov
lds
push
fsub
in
nop
repnz
dec
lahf
lret
or
adc
pop
ss
lret
sbb
cmp
pusha
xchg
mov
sbb
js
mov
mov
push
jp
xchg
js
in
mov
xchg
shlb
mov
insb
aam
repz
mov
mov
lock
add
pop
loopne
mov
inc
jg
sub
mov
data16
cwtl
cmc
movb
in
pop
xlat
stos
jecxz
and
sbbl
jg
negl
sub
jecxz
inc
or
test
or
inc
xchg
and
mov
in
ret
pop
and
push
dec
or
mov
vshufps
push
inc
or
mov
std
std
leave
push
pop
bound
add
mov
cmpsl
hlt
xor
jle
sbb
push
fs
push
xor
ret
push
popf
outsl
es
fcoms
add
insb
pop
nop
ljmp
sub
dec
xchg
jns
insb
ljmp
add
ret
stos
jo
adc
inc
dec
cmp
test
push
xor
aad
sbb
dec
lods
mov
cltd
cwtl
and
rcrb
mov
and
aad
stos
push
lods
or
loopne
or
add
push
cmpsl
sub
hlt
insb
xchg
adc
movsb
sti
les
scas
icebp
mov
testb
rcl
addr16
repnz
sbb
push
loopne
idivl
pusha
mov
or
nop
sahf
les
mov
out
jmp
or
or
xor
pusha
add
sahf
test
es
cli
or
mov
adc
pusha
inc
mov
pusha
addr16
pusha
add
imul
rcrl
mov
xchg
lods
movsb
inc
iret
adc
outsl
sahf
lods
jl
mov
cmc
inc
mov
jne
sti
jecxz
cmpsl
hlt
inc
mov
mov
clc
rol
jno
xlat
rorl
mov
cmp
sub
orb
test
loop
int3
cmp
ja
add
mov
mov
ss
jno
pop
cmp
jns
xchg
cltd
push
inc
xor
out
sub
sarl
jae
inc
pop
dec
pop
repnz
pop
or
fwait
lcall
cli
mov
jae
cli
sbb
push
mov
mov
mov
sahf
mov
rorl
loopne
test
leave
lret
aas
mov
cmc
lea
hlt
push
sub
sub
leave
test
mov
mov
daa
andb
nop
mov
xchg
and
pushf
rorl
jbe
jge
sbb
inc
enter
cmpsb
mov
fbld
mov
and
insl
fs
call
jbe
mov
or
inc
and
sbb
push
fs
lret
sub
fnstsw
or
xlat
fistps
ljmp
xor
add
cmp
and
pop
ret
shll
push
rol
inc
addl
pusha
into
mov
jle
xorb
sar
ds
shlb
mov
cmpl
jnp
jp
les
jns
loope
push
lods
test
sbb
ds
dec
lds
popf
push
outsb
xchg
pop
orb
mov
rcll
in
pop
je
sub
sub
adc
add
push
lahf
hlt
test
sbb
dec
jp
jnp
jmp
cwtl
in
jbe
clc
xor
stc
xchg
cli
pusha
push
in
sahf
pop
clc
pusha
cli
pop
mov
xor
imul
call
out
sahf
icebp
push
fs
adc
insl
das
int3
jnp
enter
push
jle
mov
mov
rcrb
inc
cld
push
test
int3
popa
sub
add
orl
imul
hlt
jecxz
lret
jb
clc
cli
rcr
pop
shl
shll
mov
stos
push
cmp
mov
jns
add
pop
mov
cmp
inc
aad
mov
cmpsl
and
test
push
rcr
mov
adc
arpl
sub
mov
out
fdiv
add
mov
mull
divb
leave
xlat
fucomip
pusha
sub
inc
lock
xor
mov
and
test
daa
in
repz
popf
dec
out
dec
ret
int3
lret
mov
jno
push
jmp
adc
mov
ljmp
adc
aam
scas
jmp
dec
inc
add
sub
fisttpll
aaa
repz
pop
inc
jle
xor
int3
aas
stos
insl
cli
cmpsb
mov
scas
mov
push
outsb
lods
stos
or
ja
mov
insb
sbb
aam
cmp
aaa
call
imul
xor
adc
cmp
rorb
iret
lret
cmc
jmp
add
xor
bnd
xchg
outsl
or
cmc
xchg
dec
xlat
in
scas
xorl
in
ret
aam
clc
test
pop
xchg
mov
xor
cmp
dec
bound
mov
sbb
je
xor
push
es
pushf
fcmovnbe
xor
jns
outsl
arpl
inc
xlat
add
lahf
fcmovnu
mov
lock
into
mov
in
add
fisubs
loop
mov
mov
imul
jb
testb
xor
arpl
nop
xor
mov
jmp
push
into
jecxz
sbb
pop
dec
add
lds
mov
and
adc
addr16
pushf
push
outsb
iret
rclb
xor
jnp
in
shlb
and
dec
cli
fbld
mov
push
insl
xchg
imul
xchg
push
mov
xlat
cs
aas
lock
push
lods
inc
outsb
ds
mov
arpl
out
scas
int
pusha
push
push
or
jecxz
fcompl
hlt
iret
and
xchg
mov
mov
jae
add
sbb
sub
sbb
xlat
xchg
sti
jle
sbb
push
nop
pavgb
fwait
xor
dec
push
cmp
xor
rclb
leave
dec
lock
into
sbb
mov
mov
lahf
loopne
cld
pop
mov
xor
das
xor
mov
mov
or
mov
addr16
cmc
ficomps
push
inc
in
sbb
xor
mov
scas
add
inc
xlat
xchg
fstpl
pop
cmp
int
inc
inc
push
js
sbb
repnz
push
pop
imul
dec
inc
cs
bnd
xor
lods
xor
jmp
xor
and
or
neg
sbb
rcrb
hlt
adc
sub
lret
mov
popa
rcr
cmp
and
lods
aam
sbb
xchg
cmp
inc
sub
stos
jg
mov
push
pop
rorl
int3
pushf
cltd
movsl
mov
xchg
subl
lods
jae
jl
and
and
bound
pop
fldt
sbb
loop
push
popa
inc
in
clc
mov
shl
adc
sbb
push
inc
mov
out
movsb
cmp
lock
add
inc
pop
inc
das
gs
daa
je
sbb
dec
adc
push
shrb
push
notb
dec
jb
dec
xor
mov
push
rclb
fisubl
dec
into
adc
jb
dec
out
jge
push
jmp
fidivs
xchg
dec
push
ficoml
jnp
cmp
sbb
and
mov
sub
popa
out
pop
mov
jae
xchg
pusha
loop
adc
lret
ja
jo
xchg
jp
imul
jmp
test
je
loope
and
lcall
mov
sub
test
mov
inc
xlat
bound
dec
or
push
push
push
pop
outsl
dec
out
xchg
dec
mov
jl
shr
pop
sbb
mov
lods
mov
sbb
in
jecxz
cmpsb
icebp
pop
idivl
lock
jle
out
dec
shrd
movsb
cwtl
or
inc
pop
into
rorb
dec
push
push
arpl
cmp
xchg
fimull
fsubl
pop
xchg
or
cmp
out
cli
sbb
xor
and
stc
inc
xchg
sbb
pop
mov
out
mov
xor
arpl
dec
sahf
addr16
test
sbb
sub
lahf
mov
sub
xor
or
xor
pandn
clc
mov
cmpl
sbb
cmpsl
cmpsl
sbb
std
dec
lahf
xor
jp
xlat
in
outsl
pop
sti
pusha
cmpsl
sbb
push
ret
insb
jg
aad
xchg
decl
lock
ds
in
ret
add
fmuls
in
sbb
arpl
sbb
adc
fwait
aas
test
xchg
out
and
vaddsd
faddl
sti
sbb
push
in
aad
push
sub
stos
push
mov
add
sti
pop
add
dec
xchg
push
or
sub
push
stos
stos
and
mov
outsl
aam
jl
fdivrp
pop
es
sbb
hlt
in
inc
rorb
jmp
xor
cmpsb
mov
pusha
lret
out
into
leave
stos
pushf
in
sbb
lea
fildll
aad
repnz
cmpsb
out
xchg
sti
movsl
pop
mov
imul
jl
lret
mov
insb
xor
scas
cmp
xchg
push
mov
cltd
out
sbb
jl
mov
hlt
sub
lret
push
ljmp
repz
xor
subb
xor
loope
in
mov
stos
pop
sbb
push
mov
popa
inc
sahf
add
iret
mov
jae
inc
pushf
or
sub
dec
inc
addb
sbb
sub
popf
pop
hlt
add
dec
mov
sbb
stos
icebp
adc
mov
cmpsb
ret
mov
lahf
sub
repnz
popa
inc
mov
add
shrl
mov
xchg
into
xor
call
lahf
jns
scas
mov
mov
pushw
inc
daa
jecxz
inc
dec
jmp
sbb
jnp
loopne
add
cmpl
loop
inc
pop
int
and
jno
stos
std
imul
aad
int
orl
fstps
xor
mov
inc
inc
xor
and
data16
mov
xor
mov
das
stos
xchg
es
test
repz
bound
popf
xor
daa
sub
mov
mov
andl
in
addb
cmp
ficoms
clc
sub
lret
mov
out
mov
dec
lcall
rol
pop
jne
push
sub
push
loop
dec
push
push
dec
xchg
out
cld
shll
jmp
outsb
aad
jb
dec
xchg
inc
mov
jae
push
cltd
pushf
pop
pusha
adc
out
push
and
into
rorl
cmp
sub
pop
jmp
icebp
mov
mov
xchg
inc
mov
fcompp
ljmp
mov
sbb
loopne
inc
add
pusha
in
pushl
dec
or
mov
pop
push
mov
push
cld
mov
cmp
cltd
data16
fwait
enter
iret
xchg
dec
out
cltd
dec
sbb
or
cli
out
dec
dec
dec
mov
jmp
push
jnp
adc
jp
jg
lock
push
into
popa
lret
inc
push
adc
mov
mov
xor
in
popa
cmp
push
mov
cmp
sub
fdivrl
das
add
sub
loope
sub
scas
jmp
push
inc
pop
dec
dec
je
dec
add
mov
lds
adc
cmp
out
and
call
xchg
dec
movsb
jl
mov
pushf
rorb
enter
pushf
mov
inc
sbb
or
test
jg
sbb
imul
adc
lods
pop
or
mov
jmp
inc
insb
jnp
repz
nop
and
mov
cwtl
jb
inc
jmp
cmp
insl
and
daa
test
jmp
aam
stos
xchg
cmp
lahf
in
cmpb
and
push
inc
pop
fistl
pop
jp
jno
cwtl
mov
and
sti
jecxz
sub
pop
add
insl
pushf
es
sbb
jne
out
cld
imul
aam
call
sub
cmp
sbb
ficompl
lret
notb
out
pop
and
add
dec
je
or
pusha
ret
stos
sub
xor
rcrb
mov
jnp
sahf
lcall
popf
js
int3
jns
xchg
xchg
xor
ret
push
pop
jmp
vmovaps
out
rcl
fidivl
mov
xor
and
stos
popa
sti
inc
pop
jl
xchg
and
xor
jnp
jb
lods
iret
sarb
sub
es
ret
inc
clts
scas
pop
mov
outsb
test
cmpb
add
popa
mov
scas
jmp
push
add
aad
outsl
xchg
xlat
dec
fxch
leave
or
or
outsb
int
mov
je
mov
movsb
or
mov
adc
jmp
mov
add
xchg
jl
mov
dec
cltd
int3
mov
and
shlb
sahf
call
xor
popa
mov
or
mov
cltd
pop
outsl
mov
cmp
imul
cmp
scas
and
repz
mov
adc
into
push
and
fwait
gs
aam
jnp
fisttps
repnz
loop
fisttpl
jp
jl
mov
icebp
aam
rorl
lea
jno
jae
fcomps
cbtw
dec
sub
sahf
cmp
jge
in
mov
scas
ds
sub
fbld
insb
cmpsl
shrl
add
jp
mov
ret
and
adc
cmp
push
fwait
push
mov
inc
xchg
xor
dec
stos
icebp
cli
jns
cmpsl
rolb
mov
imul
xchg
ss
jg
mov
sbb
mul
lcall
loopne
lds
sahf
mov
sbb
push
rcrb
fbld
out
outsl
inc
push
xorl
loopne
push
shlb
add
shr
imul
aam
add
hlt
jnp
mov
icebp
add
mov
movsb
outsl
add
pop
gs
jcxz
es
enter
js
dec
adc
cltd
adc
mov
mov
mov
in
lock
xlat
pop
call
jbe
xor
mov
rcrl
or
and
leave
dec
bound
and
sub
dec
mov
adc
or
push
dec
loopne
imul
jl
mov
inc
jmp
out
lds
xchg
popf
inc
mov
xchg
imul
cmp
jns
jl
orl
mov
mov
jne
xchg
and
invd
sbb
fdivrp
andl
xor
jns
ret
aad
mov
jb
not
fiaddl
fmull
sti
jg
aam
jns
out
jno
sahf
jmp
cmp
adc
repnz
or
mov
cli
int3
xchg
mov
push
call
mov
xchg
out
add
repz
js
add
jecxz
aaa
or
sbb
les
ret
xchg
adc
sbb
aas
leave
push
mov
loopne
mov
shll
iret
lds
jp
neg
ficompl
adc
pop
dec
hlt
sahf
in
lcall
inc
push
mov
add
loopne
iret
fbld
or
dec
mov
adc
xchg
mov
xor
test
inc
pop
cmp
push
sbb
loop
ljmp
fstps
sbb
adc
arpl
dec
stc
sub
inc
jecxz
jno
adcl
xchg
sub
dec
shll
adc
jge
inc
data16
mov
xchg
shl
lcall
in
inc
jg
int
mov
mov
inc
xor
push
sbb
adc
and
pop
inc
cmpsb
imul
sub
pusha
movsl
adc
shlb
pushf
out
les
and
push
mov
popf
jmp
data16
mov
aam
mov
xchg
rcll
pop
xor
lret
loope
jmp
out
mov
xchg
pop
icebp
sbb
cmp
es
xor
stc
aad
fcmovnu
aas
repz
xor
idiv
jne
mov
enter
and
ds
stos
cmpsb
xor
pop
lret
xchg
in
sbb
inc
sbb
cmp
sbb
mov
es
ds
es
xor
in
fiadds
jmp
shll
insl
add
add
movsl
jo
fdiv
pop
int
into
rcl
hlt
shlb
ret
cmp
dec
adc
xorb
xchg
out
hlt
push
popa
or
test
jne
in
and
divl
mov
xchg
mov
jl
xchg
xchg
hlt
enter
lds
dec
lcall
jge
scas
insl
pop
xchg
jecxz
les
jae
andb
inc
push
or
jp
lock
pop
jecxz
mov
push
loopne
xchg
repz
jae
mov
push
xchg
js
jo
dec
into
ret
nop
lods
icebp
punpcklwd
clc
sbb
subb
popa
aam
lds
mov
js
mov
fistpl
xor
jne
das
shlb
xlat
test
decl
or
adc
shll
fimull
pop
lods
mov
and
jae
sub
ret
pop
pop
rorl
mov
and
in
dec
mov
or
adc
mov
adc
adc
sahf
js
ret
xchg
add
cmp
or
notb
fsubrl
xor
sti
aaa
or
hlt
aaa
inc
xor
mov
int3
sbb
push
or
sarl
xchg
push
stos
mov
outsb
out
movsb
mull
les
daa
and
xor
jne
mov
stc
rorb
jbe
mov
xchg
cld
jl
fwait
insl
repnz
cmc
inc
push
sub
aaa
les
mov
xchg
rorb
stc
clc
movsl
xor
pusha
lock
js
jmp
loop
xchg
cwtl
mov
daa
xchg
inc
xchg
mov
xor
dec
mov
sub
xchg
stos
das
xchg
or
lahf
daa
lock
sar
mov
xchg
test
enter
out
or
imul
adc
mov
shlb
adc
adcl
into
push
fs
xchg
lea
nop
lods
in
cld
xchg
push
mov
test
aad
loop
adc
sub
push
pusha
in
es
pop
fadds
xor
sahf
and
or
jecxz
pop
pop
imul
stc
mov
push
jo
pop
add
xchg
pop
subb
mov
pop
adc
or
daa
mov
push
push
jbe
fwait
leave
mov
push
div
test
hlt
cld
cwtl
out
add
mov
mov
or
cli
push
test
scas
add
and
ss
mov
xchg
das
loop
pop
jg
outsl
in
jnp
out
fistpll
cmp
mov
loopne
sub
cmp
cmpsl
and
fistps
rcrl
das
adc
aad
push
shl
mov
dec
sahf
push
daa
out
in
cmp
fnstenv
xchg
mulb
xor
dec
mov
pop
addl
pop
fldenv
mov
push
mov
ret
mov
mov
inc
or
mov
xor
shr
nop
jle
stc
dec
jbe
jmp
cs
cmp
dec
in
cmp
mov
into
aaa
cmc
mov
dec
or
mov
rcrb
movsw
dec
xchg
sub
fmulp
lods
jge
pushf
jl
jg
movsl
cmc
test
jg
icebp
imul
xor
nop
fnstcw
cmp
dec
jg
aad
cmpl
loope
mov
sub
jl
idivb
lds
inc
sbb
enter
pushf
add
ss
xchg
sbb
and
inc
adc
loop
cmp
sub
loopne
in
addr16
xlat
xchg
lds
les
gs
or
mov
jecxz
aaa
cmp
push
mov
cs
clc
mov
jmp
hlt
mov
fcmovnb
fnstenv
push
mov
mull
leave
sub
ss
iret
adcb
aaa
push
sbb
and
repz
fsubrs
jbe
fnsave
inc
sub
dec
jbe
stos
adc
jne
sbb
xchg
inc
cmp
sbb
out
lods
dec
inc
aam
pop
and
ds
xchg
add
push
call
aad
dec
xchg
mov
push
mov
dec
and
mov
dec
sar
jns
or
jl
setg
in
sahf
fs
pusha
fstpt
call
inc
leave
push
xlat
xor
cmp
movsl
in
cmpsb
pop
ret
sub
sbb
cmp
fildll
aaa
pop
mov
or
xchg
mov
mov
cwtl
dec
mov
pop
xchg
popf
rcrl
cltd
sub
imul
pop
or
lds
mov
and
mov
jnp
movsl
sub
and
lods
add
gs
pop
imul
jb
cmp
push
jb
insl
imul
or
orb
push
jnp
outsl
mov
lahf
sub
xchg
lret
adc
mov
jb
mov
dec
fists
xchg
adc
repz
or
leave
mov
into
insl
gs
test
jo
xor
inc
lock
cmpsb
or
shlb
fildl
jne
jg
cmc
sub
xor
xchg
flds
lcall
test
int
add
push
retw
pop
fwait
push
gs
pop
mov
shl
sbb
cli
sub
push
mov
imul
pop
sbb
inc
hlt
sarb
inc
gs
adc
ss
imul
pop
outsl
int
cwtl
not
out
xor
or
jb
lods
mov
pop
jp
out
xlat
adc
stc
test
testb
ljmp
push
push
int
enter
jno
pmaxsw
repnz
cmpsb
xor
push
addr16
dec
lods
data16
aas
iretw
adc
or
and
push
xor
movsl
mov
lods
mov
iret
loope
jmp
mov
jno
int
js
mov
gs
inc
mov
mov
mov
je
imulb
loop
add
stc
pop
xchg
mov
fsts
pop
mov
pop
pop
fwait
and
mov
cli
out
pop
jnp
movsb
rorb
inc
frstor
insl
imul
push
in
sbb
add
stc
dec
in
jbe
pop
das
das
xchg
das
xchg
scas
cmpsb
push
cmp
mov
mov
xor
inc
in
or
js
mov
sub
sub
in
sub
in
inc
jns
sarl
aad
push
nop
push
mov
stos
icebp
xor
pop
add
jp
cmp
xor
pushf
mov
cmpsl
das
lret
push
call
test
mov
cld
push
sub
push
arpl
xchg
inc
mov
sub
xchg
push
ljmp
sarl
dec
test
dec
lock
xchg
jnp
in
push
add
or
dec
pop
bound
pop
insl
fisubl
stc
rol
cwtl
inc
mov
pop
cltd
jecxz
stc
aas
stc
dec
clc
or
or
jno
inc
loop
subl
sarb
stos
or
xor
rolb
jg
push
push
cmpsl
jnp
add
jae
sub
iret
movsb
jnp
cwtl
shlb
jae
mov
loopne
xor
push
cmc
sarl
adc
rcrl
out
scas
cmp
popf
cmp
aad
loope
push
jno
xchg
pushf
inc
mov
cld
cld
lods
orl
loop
imul
cs
gs
sbb
sbb
cmp
out
rcrb
popa
addb
sub
ds
faddp
std
xor
mov
add
pop
dec
loope
mov
pop
ss
mov
push
nop
movsb
or
cwtl
test
bound
push
mov
scas
outsl
out
rorl
fidivl
or
jge
shl
jne
in
xchg
or
sub
gs
inc
jo
fsts
mov
mov
cli
ljmp
ds
sub
mov
imul
dec
filds
push
jl
imul
int
xchg
mov
or
sub
cs
push
std
movsb
inc
cmp
lret
add
push
xor
mov
jae
pop
push
iret
cmpl
notb
push
roll
jno
in
adc
pushf
xchg
enter
cmp
cld
and
cmp
into
mov
psrlw
mov
pop
lcall
pop
outsl
cmc
dec
add
mov
xor
mov
mov
ja
pop
and
adc
hlt
adc
jne
lret
clts
je
rcll
jle
xor
push
sbb
bound
dec
mov
test
inc
push
jl
xchg
and
cs
lods
repz
xor
jbe
jbe
mov
stos
xchg
pusha
xor
mov
and
insl
xor
int
cmp
pop
xlat
push
pop
movsl
push
leave
cs
sub
dec
xchg
std
sbb
mov
sub
aas
pop
aam
imul
or
out
ljmp
sbb
inc
out
push
mov
inc
pop
pop
or
pop
mov
adc
sbb
sbb
out
shll
xchg
jo
jo
or
pop
mov
mov
icebp
mov
push
mov
jge
jmp
ds
scas
pushf
into
and
inc
loop
cwtl
notl
enter
jp
mov
inc
fxch
lea
js
pop
shll
das
or
sarb
pop
or
loop
inc
mov
sub
mov
lret
bound
es
popl
inc
or
pop
daa
dec
push
xor
out
lea
sbb
popa
rcrl
mov
mov
fidivs
add
lods
and
ljmp
fimuls
mov
data16
aad
fldenv
sub
std
cltd
mov
inc
pusha
mov
cld
jge
test
mov
insb
mov
mov
shrb
call
dec
mov
fcoml
out
cmp
dec
sbb
sbb
ja
pop
mov
orb
ret
and
sbb
dec
pushf
dec
add
jge
jge
mov
xchg
lds
scas
mov
icebp
adc
call
insl
int3
or
adc
cli
and
xchg
frstor
add
popf
or
movsl
inc
iret
rclb
cmp
mov
inc
xorl
int3
lea
scas
mov
jle
mov
mov
pop
call
out
and
dec
adc
mov
cmpsl
push
mov
outsl
addl
lods
jecxz
xlat
mov
adc
push
mov
jnp
pop
push
je
rol
pop
mov
xchg
movsb
mov
aaa
sbb
lcall
subl
jae
mov
dec
ret
int3
mov
xchg
adc
jnp
pop
inc
sub
mov
xchg
jmp
mov
cli
add
mov
xor
mov
dec
adc
gs
jno
cmp
push
add
data16
mov
stos
aad
loopne
mov
fisttps
mov
mov
scas
xchg
sub
adc
add
jecxz
xorb
fsincos
aas
or
push
mov
aaa
adc
subl
xchg
popl
cmp
and
add
repz
xchg
pop
sub
push
xor
test
xor
lods
enter
inc
jmp
rcrl
arpl
loopne
std
aaa
je
ja
fisubl
faddp
sub
imul
or
jnp
adc
in
adc
fisubrs
push
jns
adc
cmc
sti
adc
cmovo
repnz
and
pop
insl
xchg
sbb
js
mov
scas
stos
jne
pop
loop
push
cmpsb
cwtl
insl
pusha
daa
push
sub
mov
pop
scas
sti
inc
loop
test
or
std
jmp
in
xchg
mov
jmp
imul
mov
cmp
dec
jo
leave
mov
int3
add
sub
xchg
pop
clc
adc
pushf
aam
add
into
and
jg
mov
sbb
jae
mov
fiadds
push
faddl
movsb
insb
add
in
mov
and
and
fcmovne
mov
pop
scas
xorl
sub
sti
loop
outsb
adc
fcompl
test
inc
bound
sahf
mov
mov
mov
outsl
addb
sub
loope
ljmp
pop
stc
scas
and
inc
sbb
push
fwait
test
dec
sub
mov
inc
mov
push
mov
xchg
cmp
out
enter
add
dec
xor
mov
and
jae
add
mov
mov
clc
lds
mov
pop
jmp
fidivl
mov
xor
dec
mov
cli
iret
mov
sbb
insb
pop
shlb
mov
fisttpll
fxtract
loop
push
scas
outsb
imull
pop
cltd
pop
push
mov
jo
das
mov
mov
xchg
pop
xor
fistpll
out
adc
cmpsl
cmp
aaa
ss
or
mov
cmpsl
test
xchg
push
xor
add
xor
aaa
aas
mov
adcb
out
add
inc
hlt
xor
cmpb
cwtl
mov
jecxz
data16
hlt
sti
and
push
out
fnstenv
push
in
push
mov
bound
xchg
push
gs
mov
adcb
pop
in
push
dec
xor
cmpsl
in
in
and
inc
or
sub
or
push
add
stc
jp
and
cmp
mov
add
arpl
cmp
or
ljmp
nop
loope
pop
in
adc
jge
sbb
lret
mov
jnp
push
js
jb
xlat
pop
sahf
jp
sbb
mov
clc
sbb
loope
into
in
jnp
cwtl
jns
add
inc
popf
lahf
loopne
shrb
push
mov
jmp
mul
fs
dec
int
xchg
mov
mov
pop
jb
mov
mov
addr16
and
xor
popa
lock
les
add
ror
das
add
jecxz
cmpsb
add
call
in
cmp
scas
inc
aaa
scas
push
xor
adc
std
jnp
adc
or
cld
mov
hlt
int
jns
insl
or
push
sub
mov
negl
and
add
insb
inc
jb
and
cmp
sbb
mov
sti
stc
sub
jecxz
in
inc
ss
jno
std
roll
arpl
lahf
mov
scas
inc
mov
or
jbe
mov
repz
test
inc
sub
inc
shufps
sbbb
leave
das
jne
mov
pop
nop
cli
cmpsl
sub
cmp
dec
or
mov
mov
lea
adc
imul
mov
inc
pop
pop
jb
xchg
jns
adc
cmp
cmp
pop
push
cli
fisubrs
aas
push
sub
sub
stc
jle
cld
cmp
mov
push
mov
in
add
inc
fstps
mov
daa
lods
lock
das
adcb
mov
jbe
shll
push
mov
sub
adc
pop
in
xor
push
jp
adc
jmp
push
shr
loop
mov
scas
cs
pop
popf
movsl
in
jl
add
lahf
jecxz
pop
pop
aas
addr16
cmp
fsubrs
mov
scas
roll
movsb
jge
mov
inc
inc
dec
lods
dec
lcall
ret
call
out
mov
fisubrl
ret
adc
jmp
mov
imul
cmp
ss
jp
jb
jns
jl
rcll
add
insb
fisubrl
add
mov
cmc
pop
daa
out
fisttpll
rol
rcll
movsb
add
push
sti
push
push
ror
out
pause
outsl
add
stos
pop
mov
in
xor
into
and
cmp
aad
rorl
sahf
out
test
pop
orb
imul
out
sub
jb
mov
xor
aam
fucomi
jg
dec
cwtl
aad
sti
sarb
dec
out
inc
fistps
lahf
les
aas
gs
mov
dec
xor
ljmp
rcr
and
arpl
out
aaa
in
dec
stc
add
mov
mov
and
cmp
cmc
fsubrl
daa
into
sarl
in
addr16
jno
adc
xchg
test
xlat
dec
or
popl
push
or
outsb
loope
jb
cmpsl
out
dec
cmc
pop
and
je
sbb
adc
jle
fnstcw
ret
xchg
ja
ljmp
cmpsl
cld
jmp
and
mov
add
cs
or
push
or
jae
fsubs
aad
mov
xor
lods
sarb
pushf
lret
dec
pop
pop
adc
jg
sbb
sbb
inc
adc
push
stc
in
pop
fisttpl
pop
xchg
je
fcomip
dec
int
mov
loope
push
jno
pop
jb
out
repnz
pop
adc
xlat
jl
jo
aaa
scas
and
dec
jecxz
clc
jno
mov
adc
pop
test
mov
dec
rorl
cmp
ja
in
stos
xchg
jecxz
out
add
mov
adc
inc
sbb
push
daa
cmpb
rcll
adc
push
repz
cld
jge
ljmp
sbb
adc
pop
push
cld
inc
pop
mov
pop
mov
sbb
add
cmc
lds
pushf
pop
fwait
push
mov
setle
test
cmp
gs
arpl
data16
rorl
dec
sbb
shll
adc
loopne
inc
nop
iret
and
xchg
jae
loope
jge
shrb
mov
call
in
dec
or
cmpsl
pop
test
mov
es
xchg
pop
out
xchg
dec
sbb
negl
mov
add
out
das
clc
pop
ret
rorb
sahf
cwtl
or
rorl
ljmp
and
pop
inc
into
insb
test
stos
popf
test
pop
and
or
loopne
sar
mov
xchg
lods
gs
cs
shrb
sbb
popa
fmul
arpl
cmp
test
insb
jno
or
sarb
lods
sub
mov
pushw
mov
push
push
pushf
mov
idivl
mov
data16
arpl
xor
lcall
mov
push
and
es
lret
sahf
ljmp
or
xchg
ja
data16
stos
mov
mov
enter
std
aad
hlt
mov
cld
sti
lods
pushf
repz
aad
movsb
jle
xchg
cmp
lock
mov
add
xchg
mov
push
push
repz
jecxz
push
xor
xor
or
int
add
add
add
inc
pop
xchg
sarb
inc
cld
add
and
je
mov
jge
call
mov
xor
add
lock
adc
lret
fisttps
xchg
or
btr
jb
rcrl
aad
xchg
in
rorb
jnp
sbb
js
dec
lea
fistl
cmpsb
mov
cmc
xor
jno
push
sahf
xor
mov
jp
pop
mov
jp
and
sub
mov
call
push
push
loop
mov
mulb
insb
lret
clc
xor
push
repz
xor
aaa
in
ss
adc
repz
repnz
xchg
adc
es
int3
mov
pop
dec
cltd
dec
pop
add
aas
push
pop
xor
mov
push
sbb
ret
bound
test
jbe
jbe
and
mov
aam
dec
negb
xor
js
hlt
mov
mov
leave
repz
or
inc
sbb
dec
sbb
cmp
jns
push
and
dec
icebp
mov
mov
dec
ret
dec
outsl
out
mov
mov
cmpsb
jmp
cmp
rcl
icebp
dec
dec
cmp
push
outsb
mov
xor
push
and
imulb
jnp
xor
shll
and
fdivs
xor
pop
cmc
and
dec
mov
dec
and
xlat
ds
push
rcr
and
mov
sbb
jp
es
cmp
bound
jnp
fisubrs
xlat
imul
and
push
les
outsl
mov
roll
shlb
into
cmc
dec
es
mov
xor
je
stc
mov
out
movsb
mov
mov
cmp
clc
jge
pop
inc
pop
call
stc
icebp
ljmp
lahf
pop
imul
test
fwait
testl
loope
lea
jne
add
arpl
add
pop
xchg
dec
xor
arpl
sbb
jge
fldl
add
sbb
jb
dec
ficomps
in
mov
or
aaa
mov
pushf
ja
inc
push
or
push
mov
mov
nop
xchg
add
xchg
test
lahf
push
pop
mov
dec
test
sub
mov
movl
cmp
xchg
int3
jno
add
add
jb
aad
push
clc
xlat
scas
stc
out
scas
insl
test
mov
mov
lret
gs
jmp
sub
out
movsb
popa
testl
mov
cltd
adc
push
xor
sbb
dec
adcb
sub
mov
jge
jp
adc
adc
xor
mov
shl
call
mov
cmp
dec
mov
pop
push
mov
or
outsl
or
adc
std
cmc
leave
jmp
inc
mov
leave
repnz
test
inc
sbb
pop
in
jge
movl
ret
dec
xchg
xchg
mov
ljmp
jne
fsubrs
xlat
adc
es
jmp
insl
nop
hlt
push
push
sti
mov
jnp
outsl
mov
mov
mov
add
add
sbb
out
jg
dec
stc
jnp
fiaddl
mov
adc
jl
sbb
fsubr
xchg
or
fs
xor
mov
xchg
dec
inc
ja
xchg
in
icebp
push
sbb
sti
fldl
add
adc
xor
jmp
sar
in
cmp
push
pop
out
jle
lret
jae
xlat
movsl
rorl
mov
lret
dec
push
cmp
movsb
outsb
popa
xchg
jg
cwtl
mov
ficoms
in
mov
std
push
call
inc
or
pusha
push
hlt
push
and
out
push
call
sbb
adc
cli
jg
aam
imul
fstpl
addb
mov
or
out
data16
int
aam
xor
leave
test
mov
jp
loope
in
xchg
in
ret
mov
add
mov
dec
fucomp
mov
xor
dec
outsb
test
lret
fisubrl
lahf
sub
imul
movsb
jge
movsb
rol
ljmp
es
add
xchg
clc
xor
clc
inc
pop
loopne
inc
out
jne
movsb
mov
sbb
or
and
ja
jb
outsb
imulb
loop
add
popa
mov
icebp
lock
push
mov
mov
cld
pop
pop
scas
sub
test
mov
stos
clts
cmp
jae
rcl
xchg
xorw
and
mov
stos
clc
iret
jmp
inc
bound
mov
rcl
and
movsl
cld
inc
arpl
pop
aas
cltd
iret
fisubs
ret
testb
xor
sbb
xor
in
add
aas
inc
push
cltd
ljmp
xor
lahf
nop
jecxz
xchg
jbe
xor
je
and
add
outsb
cwtl
setl
dec
cmp
add
inc
stos
xchg
jb
sub
lret
in
mov
scas
aas
xchg
mov
inc
adc
das
inc
adc
nop
sub
sub
push
call
push
add
imul
sub
in
cmp
shrl
pop
lea
jge
repnz
cmp
cmpsb
push
mov
jg
outsl
lock
in
cmpb
lcall
sbb
lcall
fsubs
mov
cmp
fisttps
push
push
movsl
mov
mov
adc
lods
loop
and
or
ljmp
cmpsl
popf
mov
cmp
movsl
out
push
fisubrl
fidivs
rcll
imul
mov
stos
jge,pn
in
pop
int
jp
mov
or
pop
nop
test
aam
sbb
out
push
and
sbb
pop
test
loope
insb
fdivp
jmp
sahf
cmpsl
mov
push
addb
ja
sub
pusha
or
dec
push
hlt
adc
mov
and
cmp
pop
inc
aaa
jo
insb
dec
sbb
repnz
icebp
jae
fcompl
aad
fiadds
mov
jle
pop
pop
push
pop
jle
pop
idivb
loope
in
lea
mov
xchg
arpl
adc
and
nop
ljmp
and
mov
in
hlt
dec
xor
inc
adc
adc
out
xor
test
ds
push
sub
jo
adc
scas
adc
lcall
pusha
stos
js
jnp
and
fcoml
cmpsl
pop
inc
cmp
loopne
movsl
xor
pop
jp
imul
lods
in
mov
out
mov
mov
mov
ficoml
dec
xchg
lret
adc
pop
mov
or
imull
jns
adc
in
das
dec
and
sahf
cli
and
in
jbe
insl
xchg
aas
jge
daa
mov
and
cmpsl
dec
decl
mov
xor
adc
push
add
test
pop
mov
mov
icebp
call
aas
hlt
loop
push
xchg
dec
in
jecxz
xor
pop
idivl
push
in
ja
inc
mov
inc
sbb
mov
inc
addr16
leave
dec
stos
inc
or
andb
xlat
push
mov
mov
add
pop
fnstcw
or
push
addr16
pop
xchg
ret
mov
push
lods
test
lea
fs
xor
xchg
lcall
xchg
test
fwait
dec
adc
cld
xor
and
push
inc
cmc
insl
xchg
add
stc
outsb
jl
in
pop
int3
aas
xlat
xchg
jecxz
xor
mov
adc
div
sub
rcrl
ja
mov
sbb
xchg
jno
mov
inc
cmp
dec
andl
scas
and
ss
pop
iret
pop
imul
js
test
in
inc
sarb
cltd
cmc
ret
sub
push
xor
pusha
in
mov
cmc
les
movsb
je
or
repz
mov
mov
add
dec
or
ds
daa
pop
inc
imul
push
and
clc
popf
and
adc
jnp
in
xchg
mov
rorl
xor
jecxz
push
insl
cmp
mov
insb
adc
xchg
dec
fnstsw
cmp
pop
lcall
test
push
shrb
das
dec
push
mov
dec
fsubl
cmpl
ficompl
adc
les
dec
lods
sub
inc
mov
dec
cwtl
add
jecxz
sbbb
xchg
shrb
fdivrl
dec
imul
mov
add
incl
cmpsb
in
adc
xor
gs
adc
icebp
imul
dec
adc
jns
and
sub
bswap
xchg
adc
push
test
mov
adc
add
mov
aaa
call
dec
mov
cmp
lods
ret
scas
jg
in
push
adc
xchg
adc
aas
sub
cld
pop
xor
mov
stos
cwtl
dec
addr16
pop
mov
cld
ret
repz
cltd
iret
ja
xchg
bound
in
mov
mov
mov
icebp
jmp
les
repnz
scas
cmp
dec
push
std
dec
push
push
nop
lds
mov
mov
push
popa
xchg
cmp
push
xchg
mov
imul
and
out
sbb
roll
mov
cmp
inc
scas
je,pn
mov
arpl
adc
lods
loopne
pop
ror
jo
push
fs
inc
push
loope
mov
cmpxchg
xor
sbb
push
and
ss
xchg
pop
adc
iret
xor
je
xorl
pop
add
bound
ja
cmp
jae
pushf
scas
add
or
pop
sub
jl
pop
add
repz
xchg
jb
negl
not
addr16
hlt
repz
jmp
cltd
mov
dec
fstl
imul
dec
pop
cmp
cltd
or
cmp
inc
push
dec
test
mov
lcall
inc
push
int3
std
add
xchg
daa
push
scas
mull
push
stos
fistpl
lahf
dec
cmpsl
push
notb
adc
std
inc
mov
cmp
xor
or
or
outsb
ret
rcr
fidivs
add
mov
cmp
mov
xchg
mov
sub
push
xchg
iret
clc
sub
and
adc
test
adc
addl
int
sahf
push
lahf
int3
pusha
or
xor
decb
pop
repnz
xor
xchg
loop
ret
jb
inc
or
rcll
roll
stos
mov
cmpsl
fldenv
arpl
jbe
adc
lret
jno
mov
dec
xchg
or
add
mov
mov
push
stos
mov
shlb
cmp
sub
lret
or
inc
push
inc
repnz
sub
in
or
inc
fiadds
jns
pop
or
push
cmp
test
notb
mov
inc
popf
cld
jo
sbb
int3
mov
push
add
push
xor
lock
xlat
and
mov
ljmp
daa
dec
pop
frstor
pop
dec
dec
fdivrl
mov
adc
jo
sub
icebp
or
jle
mov
dec
out
jecxz
in
nop
jo
movsb
dec
ja
mov
lods
dec
adc
jmp
ljmp
fcomp
pushf
jmp
dec
sbb
dec
test
xlat
es
dec
lods
push
xchg
xor
idiv
pop
xchg
jmp
mov
add
mov
adc
sbb
hlt
in
xor
sub
or
addl
test
inc
xchg
and
es
adc
lret
pop
scas
fwait
jle
xchg
dec
lret
xchg
jbe
or
add
inc
jne
jae,pn
sbb
pop
mov
in
mov
enter
lahf
mov
popa
ljmp
cmp
push
insb
pop
inc
mov
sbb
sti
test
out
mov
xchg
jno
das
mov
sub
mov
cli
rclb
pusha
mov
fmull
xor
and
xchg
push
jle
dec
add
ss
mov
test
or
leave
ljmp
je
pop
addb
clc
ljmp
cmp
jmp
jae
xor
movsl
mov
push
es
jo
stos
loopne
or
sub
repz
mov
out
cmp
mov
xchg
dec
in
jbe
ficompl
mov
into
or
jp
inc
iret
sbb
shl
cmpsl
xchg
xor
mov
jbe
sub
and
shl
sub
fdivl
sbb
rolb
mov
xchg
jne
mull
xor
ss
ljmp
or
sahf
rcrb
ret
fisttps
fisubrl
movsb
add
dec
aad
sub
sbb
std
aaa
pop
mov
arpl
lret
andb
xchg
and
repz
call
inc
pop
fnstenv
ficompl
cmp
xchg
push
mov
mov
je
inc
fstpt
cmp
jae
in
cli
roll
push
jle
pop
inc
dec
mov
mov
and
jecxz
or
xlat
scas
xchg
aam
sbb
je
out
loope
cltd
les
leave
dec
sub
cmp
je
pop
pop
push
sub
inc
pop
jae
and
int
lea
cmp
xchg
scas
jb
xchg
in
rol
int3
pop
xor
into
fmulp
and
addl
xchg
lea
lock
aam
xlat
lea
test
aad
inc
lods
scas
adc
adc
cmp
mov
xor
sub
dec
jae
jg
and
add
andb
jb
std
fcomps
cmp
das
mov
sub
ss
inc
adc
stc
iret
sbb
mov
ds
jo
mov
fs
adc
mov
cmp
lret
inc
orb
xchg
iret
ret
ret
cs
mov
cmp
xor
jbe
fwait
js
in
or
pop
adc
pop
or
xor
pop
sub
adc
arpl
shrb
sub
mov
jne
mov
incb
aad
jmp
mov
jb
mull
jb
sbb
scas
pushf
adc
xchg
jne
jb
and
sub
js
aas
push
push
dec
pop
lods
aas
cmpsb
mov
fwait
outsb
push
dec
pusha
jbe
sub
jge
bound
out
fidivl
or
jae
and
xor
jbe
push
neg
xor
mov
lret
inc
xor
dec
hlt
adc
lret
pushf
add
fstl
dec
add
sbb
stos
mov
and
mov
or
and
lea
hlt
pop
pop
nop
imul
jle
call
sti
adc
popa
sbb
mov
ss
sbb
clc
stc
inc
loope
sub
rorb
xchg
push
sub
icebp
out
lods
aad
sbb
dec
mov
jnp
lea
pop
and
sbb
leave
lahf
fisubrl
nop
and
xor
fdivrs
sahf
outsl
repnz
and
lock
incl
inc
dec
pushf
sub
pop
pop
sahf
in
push
inc
in
jmp
imul
fdivp
pusha
xchg
test
push
push
xchg
sub
cld
cmp
jp
leave
ficoml
mov
fcmove
lock
out
cmpsl
shlb
mov
xchg
pop
stc
outsl
push
mov
iret
lahf
fdivr
aam
imul
adc
aaa
mov
push
movsl
inc
jmp
push
mov
push
jecxz
lret
pushf
jmp
mov
in
fcmove
movsb
pop
cmc
lds
pop
test
icebp
dec
js
ss
icebp
dec
or
add
lods
in
sbb
fnsave
lcall
faddl
add
mov
add
push
inc
add
aad
pop
icebp
cs
jns
push
push
lret
int
loop
in
pop
push
jno
mov
scas
mov
call
adc
jbe
xchg
ror
jbe,pt
fadds
outsl
mov
lahf
popa
mov
inc
sbb
in
outsl
mov
cltd
in
test
sbbl
dec
aam
cmpsl
mov
out
lret
repnz
hlt
add
pop
dec
icebp
leave
push
and
adc
pop
mov
sarb
stos
add
fcomip
mov
jns
sub
add
push
fcoms
aam
fcmovnb
dec
mov
ret
cmp
dec
arpl
sbb
pop
cmp
xchg
imul
icebp
jo
lret
test
fnsave
mov
insl
ret
popa
xchg
pop
in
shrb
pusha
cwtl
aam
fs
stos
ss
lea
into
loop
jge
out
stos
mov
jae
inc
aam
jnp
pop
outsl
imul
mov
stos
sbb
xor
flds
mov
dec
shrb
pop
rclb
ret
inc
pop
notb
mov
add
push
jns
add
adc
cli
or
hlt
mov
inc
sub
cmp
leave
cltd
outsb
push
push
mov
scas
sbb
xchg
xor
or
mov
push
stc
cltd
xor
push
sbbb
inc
pop
sbb
jnp
testb
std
push
clc
jle
sbb
filds
push
ret
mov
xchg
ret
mov
and
pushf
mov
cltd
xchg
jns
adcb
cmp
dec
pop
mov
gs
outsb
pop
int3
std
pop
popa
jl
pop
fstl
cld
sub
jecxz
addr16
inc
xchg
jbe
in
jp
cli
pop
mov
aas
out
bound
out
int
jecxz
mov
dec
call
out
pop
add
or
sahf
xor
mov
adc
lea
repnz
cltd
sbb
sti
inc
mov
popf
and
popa
dec
inc
adc
gs
xchg
cmp
cmpsb
mov
mov
insb
xchg
mov
cmp
pop
outsb
addr16
outsl
push
repz
push
out
imul
fwait
mov
aas
jg
sub
pop
mov
ret
notb
push
or
xor
mov
ja
sahf
cltd
repnz
add
sub
or
ja
fxam
aas
cmp
rcrb
mov
sub
ljmp
fisttpll
xchg
pop
sbb
outsl
fldt
and
add
sar
cmc
xchg
ficompl
test
mov
ja
xchg
imul
jmp
jo
aad
dec
jne
movsl
loopne
data16
xchg
pushf
outsb
fcoms
pop
dec
adc
jno
mov
mov
es
jg
pop
xor
sub
popa
adc
out
sarb
and
rclb
out
insb
arpl
mov
jmp
mov
xlat
xor
rclb
add
lret
in
iret
or
fwait
insl
repnz
xor
sbb
into
sbb
adc
push
sahf
insb
les
mov
clc
rcl
or
inc
push
loop
cmpsl
bound
push
mov
push
sub
subl
inc
dec
jo
sahf
jns
push
and
add
das
fs
push
xchg
mov
mov
lahf
mull
daa
push
dec
aas
mov
add
jg
imul
dec
nop
leave
cwtl
cmp
movsl
mov
and
and
or
imul
lret
mov
lcall
xchg
push
or
inc
call
add
push
mov
imul
fs
test
mov
push
clc
cmp
std
sti
imul
jne
cmp
adc
ljmp
lret
call
scas
lods
repz
insl
pop
push
pop
jle
add
xchg
and
or
cmpsl
sahf
cmp
shlb
dec
adc
inc
lret
push
aaa
mov
jo
sbb
js
xchg
out
ret
dec
xor
adc
mov
repnz
fisttpll
and
shll
jge
clc
sbb
jmp
mov
movsb
aam
or
push
sbb
mov
rcrb
testl
pop
test
or
je
xchg
mov
xchg
inc
mov
nop
inc
and
and
test
lcall
outsb
idivb
addr16
push
cmpsl
cmc
xchg
rol
cmpl
adc
push
mov
pop
cwtl
inc
push
ja
int3
sbb
out
lret
imul
cmp
or
shll
adc
or
and
fmul
je
addb
mov
scas
lahf
mov
xchg
adc
outsl
mov
outsl
push
stos
mov
push
sbb
loope
add
pusha
decl
jl
cwtl
adc
sahf
shlb
jnp
pushw
push
ficoms
aas
mov
cmpsl
aaa
les
cmp
hlt
js
fmuls
in
out
or
ret
stos
mov
lahf
sbb
dec
pop
test
xor
pop
push
aas
dec
mov
and
sbb
adcl
xor
jmp
jno
mov
add
negb
jg
std
or
lret
or
test
and
add
push
jns
jns
int3
and
popf
ficoml
sti
in
aad
cmovl
jecxz
and
das
jno
pop
jge
xor
cmp
call
pusha
inc
xchg
push
and
aaa
xchg
ficoms
xor
pop
fdivs
arpl
out
dec
mov
and
stc
mov
push
cmp
mov
movb
adc
stos
inc
jl
mov
aas
mov
out
push
cmpsb
pop
test
sub
jo
clc
xchg
sub
jle,pn
lcall
rorl
sub
out
call
cmp
les
les
sub
pop
cwtl
loopne
in
mov
inc
pop
mov
in
jg
out
movlhps
xchg
int
xlat
jge
lods
loope
insb
xor
insb
decb
add
push
cmp
sub
pop
sbb
add
sub
rcll
sub
test
stc
sbb
mov
imul
add
clc
jne
icebp
mov
gs
inc
js
data16
cld
test
xlat
ss
das
mov
ds
bound
xlat
fcmovu
es
movsl
sub
lcall
iret
push
nop
push
popf
in
jo
cmp
insb
lds
adc
movl
dec
jmp
es
push
mov
std
jmp
and
lea
sti
mov
inc
push
gs
fsubs
lock
dec
adc
les
inc
jae
mov
imul
inc
mov
lods
insb
inc
cmc
das
jmp
push
xchg
inc
push
xor
mov
pop
push
ret
nop
lret
test
mov
xor
ret
pop
dec
lea
lahf
repz
mov
and
bound
lods
in
and
lea
shlb
adc
sar
pop
in
xor
rcrl
pop
sbbb
lcall
das
int3
das
pop
jle
jae
pop
mov
xor
xchg
pop
stos
ret
inc
sub
sbb
lcall
mov
incb
adc
hlt
mov
iret
fsubrp
pop
jo
out
mov
mov
idivb
add
sbb
jg
popf
push
decb
in
cwtl
idivb
xor
fldt
sbb
cmpsl
fwait
mov
dec
mov
cltd
in
push
dec
faddl
cmc
repz
aaa
stc
sub
movsl
fiaddl
test
and
addl
mov
sbb
sbb
insb
bound
cld
jle
pop
add
insb
and
in
jnp
push
push
movsl
andl
push
stos
fdivl
gs
pushf
mov
adc
fbstp
push
sbb
out
inc
jle
adc
ss
repnz
ss
loope
loop
adc
insl
or
mov
pop
xchg
mov
cmp
cmpb
add
and
sbbl
xchg
loop
sahf
ljmp
out
mov
xor
push
adc
and
push
jmp
pop
subl
out
sub
ret
negb
fs
mov
mov
push
xchg
xchg
ja
gs
out
je
loopne
and
inc
movl
cmp
inc
sub
lret
jle
xor
out
cli
mov
xchg
xor
xor
push
push
mov
dec
pop
call
push
sbb
cmp
sub
xor
mov
jnp
push
shlb
mov
popa
icebp
add
jo
mov
sbb
dec
insl
clc
ficoml
fildl
lea
adc
push
popf
daa
push
out
mov
push
add
gs
mov
xchg
cmp
fistl
rolb
aad
mov
ss
jne
pop
cmp
inc
mov
cld
outsl
add
lahf
rolb
aam
cmc
add
xor
cmc
sbb
add
xorl
lcall
in
in
rcrl
jnp
xchg
jge
lret
cmc
lods
xchg
mov
mov
push
mov
ret
push
mov
pop
xchg
cmp
dec
in
sub
popf
mov
daa
dec
fucom
mov
cmp
jle
das
xor
outsl
into
gs
jecxz
faddl
and
xor
or
ljmp
xor
dec
pusha
mov
or
fidivrl
andb
push
mov
sbb
addb
jl
inc
daa
pop
mov
addr16
je
mov
ja
adc
aas
cmpsb
outsl
mov
or
and
popf
and
insb
insb
test
rcrb
in
sbb
mov
jo
loope
fs
xchg
pop
sarb
inc
bound
fldenv
sbb
pop
cltd
bound
cmp
cmp
in
sahf
sub
out
sub
jge
mov
mov
sub
pop
cmpsl
mov
and
pop
sbb
cli
push
roll
js
movsb
push
jmp
or
adc
js
push
and
add
inc
insb
daa
insb
jae
ds
mov
mov
jbe
ss
add
sub
xchg
stos
jnp
out
dec
or
iret
cltd
sarl
hlt
and
sbb
lods
push
mov
out
movsl
sbb
cltd
xchg
in
inc
push
mov
ss
les
push
ljmp
push
mov
xchg
lahf
xchg
je
hlt
je
les
ss
push
xchg
dec
mov
repnz
roll
lds
sub
and
push
shlb
xor
inc
fmuls
jne
jmp
test
incl
dec
lods
imul
pusha
mov
sbb
jg
mov
cmc
dec
cmp
ss
arpl
cmpsl
jg
rorl
fbstp
jae
sub
in
xchg
imul
cmpsl
int
int
mov
inc
sub
or
addr16
sbb
and
jne
rcll
cmp
xor
mov
enter
ljmp
cmpsl
pop
mov
fnstcw
xor
xchg
out
rorb
xlat
stos
test
pop
test
mov
cltd
cli
mov
mov
and
rorb
in
dec
inc
xchg
pop
ja
or
xlat
sbb
dec
not
pusha
inc
mov
sahf
stc
push
popa
repnz
stc
rorl
xchg
lret
lcall
or
lahf
test
mov
loop
shrb
adc
popa
adcl
mov
ret
push
xchg
pop
push
cmp
jmp
test
sub
push
les
arpl
popl
rcll
lret
lret
mov
scas
push
popa
pop
cwtl
fstl
mov
test
and
adc
inc
shr
ret
mov
sub
jae
aas
inc
mov
mov
notl
ret
ret
adc
in
insb
test
push
push
pop
dec
js
inc
mov
cmp
arpl
sbb
inc
fmuls
jno
or
mov
dec
xor
mov
jp
stos
mov
movsb
mov
pop
jae
mov
div
xchg
pop
mov
je
or
pop
xchg
mov
jecxz
icebp
loope
in
cmp
cmc
hlt
scas
fnstcw
push
leave
and
lahf
aas
inc
imul
jle
fsub
daa
mov
in
adc
mov
pop
cmpsl
daa
xchg
aas
lods
mov
adc
aad
dec
dec
fists
jle
out
fisubs
cmp
cmp
and
cmp
xor
push
lods
sbb
pop
xchg
and
popa
jl
repz
in
xlat
jbe
in
inc
push
jl
aas
xchg
inc
xchg
add
mov
lret
imulb
and
imul
jb
lds
cmpsl
push
pop
mov
or
sbb
jne
fucompp
inc
into
sahf
data16
test
in
push
push
aam
mov
inc
mov
repnz
add
mov
js
push
cmp
lret
pushf
mov
jae
shl
and
sahf
jge
xchg
sysexit
mov
inc
lea
sbb
mov
test
test
mov
xchg
imul
cld
push
sbb
push
insl
sub
repz
xchg
outsb
stc
out
cwtl
xchg
jo
add
or
dec
add
cltd
cmp
mov
adc
dec
data16
dec
xorb
insl
add
fwait
jae
les
jecxz
daa
faddl
lret
add
cmp
pusha
jns
out
aas
sub
inc
icebp
lret
pop
out
xorb
inc
xor
aaa
add
lods
icebp
jmp
pop
sbb
mov
sbb
and
jbe
imul
stc
call
jno
shrl
xchg
lock
cmp
lret
push
ljmp
data16
add
adc
pop
fs
pop
outsb
mov
rcl
lock
addr16
add
inc
aas
xchg
jns
jns
pop
adc
icebp
add
mov
stos
outsb
cltd
sub
hlt
mov
mov
mov
icebp
jbe
loopne
inc
inc
into
ret
xchg
mov
add
loope
inc
mov
ljmp
inc
sbb
les
je
aad
dec
ss
inc
sub
stos
adc
scas
pop
dec
or
cltd
mov
xchg
xor
pop
icebp
mov
sbb
mov
cli
sbb
in
pop
and
imul
test
add
mov
arpl
mov
mov
lods
jle
adc
jecxz
fsts
fdivrs
cmc
xlat
fs
enter
out
loope
lret
mov
dec
and
sbb
into
lret
pop
sbb
in
cmp
jle
pop
mov
sub
cltd
nop
mov
into
outsl
ficomps
mov
or
sbb
aam
jo
std
les
enter
les
and
fwait
jne
or
arpl
js
in
jno
mov
and
pop
push
jmp
hlt
cmpsb
pushf
xlat
mov
outsl
lret
mov
in
fmull
popf
roll
mov
xchg
add
fwait
sbb
daa
inc
jg
mov
and
bnd
add
mov
arpl
icebp
jle
or
arpl
shr
les
jl
sbb
inc
cmc
sbb
out
mov
xchg
push
js
pop
icebp
dec
pop
outsl
pusha
jecxz
lock
sbb
xor
or
and
fs
negl
sti
shr
test
xchg
stos
fimull
push
outsl
fwait
xchg
ss
inc
mov
inc
daa
test
sti
jle
test
scas
and
test
daa
in
push
idivb
mov
cmp
dec
mov
xchg
jbe
xchg
loopne
sbb
jo
nop
je
inc
mov
ds
cmp
push
pop
push
lahf
repnz
repnz
dec
ja
xchg
mov
jl
ja
cmp
cld
dec
adc
aam
and
mov
mov
inc
aas
les
punpckhbw
pop
cmp
fcmovnb
test
mov
inc
add
push
sub
or
jae
add
mov
ljmp
lock
pushl
or
pop
stc
mov
add
xor
insl
xchg
movsl
repnz
fidivrl
and
sti
popa
out
adc
xchg
xchg
jmp
mov
add
sub
or
fnstcw
mov
push
insl
pop
inc
stos
mov
xchg
xchg
and
xchg
movsb
adc
cmp
pop
adc
stc
dec
xchg
inc
jae
hlt
push
mov
xor
xor
leave
dec
in
inc
fildll
pop
mov
mov
jecxz
xor
pop
cmp
aad
jnp
imul
out
pusha
push
jbe
sti
xlat
stos
in
add
mov
mov
stc
ret
cmp
inc
scas
stos
mov
das
xchg
lods
fcmovb
fs
std
loop
mov
pop
fcomip
daa
xor
adcl
sbb
cmpl
lods
outsb
push
into
in
clc
xor
sbb
adc
mov
sahf
and
inc
sti
js
push
and
lahf
mov
push
mov
xor
test
pmulhw
sub
ret
mov
lods
loopne
sub
xchg
xchg
insb
mov
mov
pop
sbb
dec
hlt
push
cwtl
cmp
xchg
pop
add
or
cltd
in
subb
pop
xchg
xor
lods
xchg
stc
outsb
call
sahf
adc
rorl
aad
xchg
xor
pop
mov
pop
mov
mov
ret
add
mov
popa
cmpsl
roll
je
sub
es
dec
xor
mov
frstor
cmpsb
sub
mov
jmp
xor
sbbl
jb
repnz
add
jo
fcmovbe
call
xor
pop
stc
sub
loope
mov
daa
lock
les
aas
pusha
lret
in
sbb
cmp
popf
icebp
bound
pop
fldcw
mov
mov
call
ret
add
add
jecxz
inc
lock
dec
push
push
lret
andl
mov
push
cmp
ret
loopne
mov
xor
shll
push
test
xlat
dec
orl
mov
inc
leave
dec
out
lret
ficoms
stc
pop
xchg
sub
sahf
jns
mov
cmp
xchg
scas
inc
sarb
or
pop
mov
push
jmp
pusha
fldlg2
xchg
inc
xor
in
bound
mov
sbb
outsb
lods
mov
aad
cmp
cltd
jmp
xchg
inc
into
mov
or
ja
adc
ret
push
sbb
or
mov
nop
dec
arpl
scas
lret
xor
aam
push
lret
fs
clc
in
jbe
gs
jno
pop
mov
cmp
push
lock
cli
jae
add
popa
icebp
rclb
adcl
into
das
inc
stos
out
jge
push
rorb
xchg
push
in
xchg
fcmovbe
add
fldl
scas
and
push
xchg
aaa
cmp
jne
ljmp
xchg
imul
repz
imul
mov
testb
push
xor
mov
scas
mov
cmp
cmp
in
nop
loop
and
inc
insb
jp
pop
mov
cmp
cmp
ljmp
push
xchg
repz
and
stc
mulb
sbb
dec
cld
rcrb
add
jp
imul
sbb
fdivrs
sahf
fisttps
fsubrs
fists
push
or
cld
out
fmulp
ds
and
or
jns
mov
push
out
cmc
lods
punpcklbw
int
push
mov
ret
dec
in
loope
negb
movsb
jmp
pop
xchg
add
xor
mov
push
push
dec
and
sbb
jmp
mov
cmp
push
lock
rcrb
mov
sbb
mov
mov
hlt
lock
mov
sub
lcall
mov
les
cmp
pop
loop
add
insb
or
xor
loopne
lods
dec
push
cmp
add
push
test
popa
repz
and
call
inc
lea
jmp
add
fistl
ret
xchg
sbb
imul
daa
jne
add
mov
insb
mov
sti
mov
add
mov
push
test
rolb
cltd
jl
rcr
es
mov
adc
push
mov
andb
jno
mov
jns
leave
int3
shll
push
cmc
cmp
adc
pusha
mov
scas
sub
ljmp
das
shlb
mov
and
movsb
add
out
stos
sub
loope
ror
mov
add
jl
xchg
add
iret
aaa
dec
xchg
sub
cmpsl
dec
scas
rcr
sbb
mov
movsb
ljmp
mov
pop
dec
repnz
cmp
inc
ja
daa
insb
roll
je
ficomps
mov
mov
xor
mov
or
mov
and
adc
sbb
cltd
pop
outsl
mov
adc
sbb
dec
push
das
xor
es
mov
inc
pusha
cmp
gs
dec
or
xor
xchg
cmp
add
jne
aas
inc
xor
xchg
arpl
sub
aad
jge
pusha
adc
ljmp
aaa
and
out
scas
xor
mov
dec
xchg
addb
mov
or
dec
mov
jno
dec
aad
in
inc
scas
pop
mov
rolb
mov
jle
pop
add
push
pop
pop
inc
cmpsb
sub
je
lahf
pmaxsw
jno
dec
sub
sbb
addr16
mov
xchg
xor
rcll
pop
add
mov
fisttpl
ss
and
mov
mov
sti
and
lds
int
jge
es
pushw
call
mov
sub
fs
rcl
mov
std
mov
imulb
test
fisttps
mov
sahf
mov
out
decb
outsl
inc
xchg
jae
adc
sbb
pop
insl
ret
test
out
sbb
outsb
mov
in
repz
jle
sub
inc
xorl
push
pop
or
jg
ret
xchg
jl
jmp
clc
jbe
xor
sbb
jge
cltd
push
cwtl
inc
je
sbb
lcall
adc
sbb
cld
ret
call
mov
jmp
lods
sti
jb
add
sti
jno
dec
or
xchg
push
mov
fs
mov
jp
xlat
or
sub
shll
or
mov
jp
xchg
mov
fistl
push
dec
sar
bound
cmp
inc
out
js
xlat
mov
cmp
loopne
cld
mov
dec
xor
mov
incb
mov
add
repnz
in
fisubl
pop
ret
pop
mov
test
sub
cmpsb
insl
sarl
cs
add
sbb
mov
xorps
xchg
sbb
scas
jmp
adc
inc
cmp
pop
pop
sbb
jg
stos
leave
dec
mov
sub
sub
jl
pminsw
outsb
stc
mov
sub
push
or
ja
mov
rol
fs
lret
loop
xchg
push
fs
lret
aas
xchg
push
int
dec
lret
pop
leave
mov
lods
cwtl
fildl
add
int
jae
dec
ret
xorb
lods
repnz
and
leave
frstor
in
xchg
mov
ljmp
or
clc
and
mov
fnstsw
fwait
test
stos
lret
mov
das
in
aas
aaa
sbb
jmp
outsl
in
xchg
insl
or
pop
cmpsb
icebp
out
out
sbb
cld
xchg
adc
fs
add
mov
call
aam
lds
mov
mov
test
cld
inc
enter
insb
sub
xor
push
cld
mov
jg
jo
jne
loope
push
cmp
popa
mov
pop
sub
out
lds
lahf
sarl
movb
jmp
out
pop
push
dec
jl
push
sbb
nop
and
call
inc
cmp
jo
shl
movsl
inc
jb
mov
and
jno
jl
xchg
rcrb
xchg
daa
fwait
xor
cmpsb
mov
push
ss
out
inc
push
pop
mov
jns
loope
scas
outsb
lods
sahf
adc
icebp
jp
inc
or
data16
sbb
add
fdivrl
fistps
sbb
jne
sbb
adc
add
and
mov
push
test
jbe
push
xor
pop
adc
gs
insl
sub
cmc
fxch
mov
nop
stc
or
mov
icebp
or
sti
push
xchg
mov
jae
insl
xchg
push
ja
lret
frstor
int
sub
xor
add
mov
sbb
fdivs
das
mov
or
and
iret
out
es
lods
push
xchg
or
fwait
testb
pop
imul
lahf
xor
testb
xchg
jo
pop
data16
inc
std
mov
imul
bound
xchg
cbtw
and
jmp
in
jmp
push
xlat
add
pop
pop
addl
mov
lock
rclb
pop
movsb
mov
addr16
push
mov
or
mov
xor
lret
mov
xor
xchg
dec
inc
sub
subl
jae
jns
push
jmp
leave
adc
xor
fildl
and
lods
mov
add
insb
insl
xchg
cld
test
pop
cld
in
push
test
imul
add
test
xchg
aaa
xor
adc
or
add
sub
mov
inc
out
nop
xor
and
loop
push
aad
loope
sbb
sbb
in
sub
push
xchg
xchg
cmp
lods
mov
jmp
jno
cs
bnd
cld
les
ret
jnp
mov
cld
mov
in
sahf
ret
cmp
stos
xchg
sarl
push
jne
inc
mov
into
pop
fmuls
fistps
mov
daa
dec
rcrl
fdivl
jno
and
fiaddl
or
shrb
pop
lods
clc
jge
movsb
xchg
pop
andl
ljmp
mov
mov
sarb
jb
aaa
pop
sbb
js
jb
fists
jbe
add
adc
mov
push
rol
ss
testl
movsl
lock
and
cmp
adc
popa
cld
fstpt
in
jne
or
incl
dec
fstpt
sbb
push
adc
xor
or
jmp
idivl
lock
dec
push
lods
popf
and
lea
jo
xlat
cmpsl
fnsave
sbb
in
adc
ds
sbb
filds
jl
cltd
cmp
rcl
cltd
popa
sub
rolb
push
scas
jns
repnz
add
jne
inc
imul
adc
cmp
int
aaa
movsb
add
adc
daa
addr16
mov
aam
pop
popa
shrb
inc
das
mov
pop
mov
stc
outsl
lea
dec
popf
xchg
mov
jb
icebp
adc
mov
std
xchg
mov
frstor
jecxz
xchg
push
sub
sbb
lahf
addr16
movsb
push
loopne
mov
add
stc
mov
fcomps
xor
mov
and
push
shlb
loop
or
cmpsb
imul
clc
pop
and
out
xchg
push
lret
shll
andl
push
adc
test
pop
xchg
dec
popf
ja
insb
or
cltd
push
loopne
stc
loop
sbb
hlt
sbb
fyl2x
inc
hlt
sbb
cmp
insl
movsb
inc
mov
pop
outsl
js
aam
jmp
sbb
loop
insb
movsl
and
aas
cmp
push
xor
xchg
test
int
scas
adc
aad
int
and
xor
loop
call
mov
push
popl
mov
cld
ret
push
sub
movsb
stos
out
jg
stc
jp
enter
lock
scas
jne
shl
dec
pusha
push
mov
cmp
shl
movsb
xor
push
push
movsl
adc
aam
and
movsl
movsb
mov
mov
pushf
and
pop
or
mov
stos
fsts
inc
call
inc
fstpl
movsl
stc
pop
adc
mov
lods
std
insb
pop
push
xor
and
mov
adcb
xchg
in
sbb
mov
roll
cmpsb
mov
push
xchg
aas
xchg
push
cld
sbb
gs
and
cmpl
ja,pn
push
movsl
out
xor
pop
inc
jmp
shll
aad
aas
push
cmc
xor
mov
push
fwait
bound
xchg
pop
pop
lods
or
xor
or
mov
or
subl
mov
sti
outsb
rorl
ja
pop
jno
xchg
into
add
pushf
dec
jp
jns
lea
out
xor
iret
push
outsl
add
test
or
push
int
aas
pop
push
and
add
mov
jecxz
rorl
cli
xchg
lods
into
jp,pn
ljmp
test
repnz
fildll
add
int
dec
xchg
lods
insb
cltd
dec
mov
xchg
ja
jmp
xchg
lcall
and
xchg
jnp
mov
xchg
dec
out
mov
jmp
aad
sbb
xor
xchg
or
push
dec
fcmovnu
push
sbb
lret
rclb
loop
fdivs
adc
jmp
popa
rcr
mov
in
mov
adc
or
sti
cli
aaa
pop
inc
aaa
xor
xchg
adc
int3
mov
cwtl
jmp
out
icebp
mov
mov
int
adc
ret
enter
xchg
out
movsb
in
lods
movsb
lret
mov
push
les
inc
mov
inc
sbb
clc
leave
pop
nop
sbb
sub
push
addr16
shr
push
sub
insb
mov
cli
fsts
sbb
in
jecxz
xchg
xor
cmp
sub
jne
int
mov
xchg
pop
or
lock
push
pop
sbb
shll
cwtl
xor
jbe
mov
push
jl
sub
out
cmp
xor
pushf
pushf
outsl
movl
mov
test
enter
sbb
fldenv
addr16
les
dec
pop
imul
test
inc
xchg
aam
or
int
push
std
jmp
pop
out
test
shlb
imul
adc
xor
pushf
pop
call
notl
xchg
insb
jge
ja
data16
sbb
xchg
jmp
adcl
vunpcklps
mov
and
dec
enter
or
fsubrl
jg
inc
in
add
into
arpl
sbb
push
pushf
and
clc
sti
js
cmp
pop
ret
mov
daa
mov
jmp
add
repz
push
mov
mov
and
jno
jns
lock
iret
rclb
fadd
sub
mov
push
roll
test
cmp
push
mov
lock
mov
or
iret
push
inc
xor
push
scas
out
add
pop
xor
or
adc
lret
dec
clc
mov
test
cmpsb
dec
pop
cmpsb
jge
mov
pop
addl
mov
ljmp
push
xlat
sarb
xchg
jne
jl
sub
inc
mov
je
scas
sbbl
pushf
lods
out
push
add
jno
jle
mov
outsb
push
pop
test
fcoml
shrl
inc
pop
lods
mov
pop
popa
jb
pop
sbb
mov
pushf
ret
adc
ja
sbb
dec
loope
inc
sub
lds
shl
pop
mov
out
xchg
mov
dec
mov
insl
fists
in
cmp
gs
pop
push
gs
push
pop
sahf
cltd
mov
jecxz
xlat
xchg
mov
outsl
jne
cwtl
xor
inc
pop
test
cs
jmp
jmp
js
sti
popf
ljmp
or
mull
pop
xor
dec
add
mov
int3
enter
flds
inc
fwait
out
repnz
mov
sub
cmp
xchg
cs
add
xchg
or
neg
push
das
push
loope
fnstenv
sbb
fisubl
push
leave
shlb
test
ret
mov
ds
lahf
mov
inc
out
movsl
or
xlat
sbb
out
push
xor
gs
add
cmp
xchg
or
je
jmp
fs
addr16
out
cmc
aas
repz
je
xchg
pop
push
sbb
sub
inc
imul
adc
ds
sbb
rorl
mov
inc
bound
or
int
insl
aas
and
xor
test
fdivrp
loopne
clc
pop
fidivl
sbb
xlat
loopne
pop
iret
xor
cmp
mov
hlt
scas
mov
sti
or
adc
cmp
mov
and
adc
mov
and
sti
repz
xor
or
clc
sbb
daa
mov
push
fmull
cmc
fistpll
push
enter
rcr
stos
sub
movb
pop
loopne
dec
xor
add
rcll
mov
xor
sarb
enter
mov
push
xchg
or
outsb
cmp
xchg
popf
hlt
sbb
popl
je
jge
and
adc
pop
imul
xchg
sar
sarl
mov
push
xorb
stos
xlat
mov
ret
sbb
push
ss
cmp
aas
and
flds
push
adc
lock
xor
das
ud1
adc
addr16
jo
push
bound
cmp
jne
adc
frstor
sbb
and
dec
jle
xor
add
mov
or
sbb
sbb
cmc
add
xorl
fnsave
pop
push
adc
jp
pushf
sbb
daa
xchg
sbb
xor
out
test
jns
dec
sti
sbb
lods
aam
cwtl
test
sbb
inc
subl
loope
std
jge
les
pop
push
xchg
inc
fnstsw
out
stos
xchg
inc
mov
mov
adc
insl
add
cmpsl
sub
int3
hlt
add
pop
popa
addr16
sahf
filds
pop
leave
dec
cmpsb
push
jmp
pop
fwait
push
pop
pop
adc
lea
inc
incl
daa
sahf
cmpsb
mov
fbstp
negb
pusha
repnz
bound
adc
xchg
stos
and
rol
hlt
jns
shlb
daa
and
aad
mulb
loopne
xor
or
inc
loope
pop
sub
cmp
cmp
dec
cs
icebp
push
push
lods
mov
shll
js
inc
pushf
push
aaa
inc
inc
adc
lahf
arpl
adc
xsavec
mov
icebp
jmp
jecxz
call
fmuls
data16
lea
insl
jns
push
setg
pop
pushf
inc
lret
leave
hlt
sub
ss
mov
daa
inc
jo
lea
push
pop
outsb
pop
mov
and
mov
adc
xchg
insb
dec
add
xor
jp
push
and
jl
inc
aas
adc
imul
lods
pop
in
test
ss
xchg
sbbb
xor
or
mov
push
mov
scas
orl
loop
pop
push
inc
inc
adc
leave
shlb
push
push
leave
orl
nop
aad
xor
in
add
test
mov
clc
push
or
xor
js
fwait
rcrl
push
xchg
mov
cmpsb
or
imul
and
je
aaa
xchg
aas
push
pop
cs
rolb
mov
push
es
repnz
push
imulb
lods
mov
inc
cmp
mov
mov
pop
out
orl
lahf
test
mov
stos
insb
jp
fiaddl
cli
mov
add
inc
lea
jecxz
mov
stos
jl
or
pop
xor
scas
data16
repz
cmp
push
dec
jmp
inc
mov
sub
sub
imul
adc
dec
xor
pusha
and
test
js
enter
xchg
mov
fldl2t
cmp
jmp
daa
cmp
ret
aaa
xchg
jne
ss
push
adc
mov
subl
out
paddd
loope
or
adc
jl
roll
repnz
in
stos
movsl
add
adc
sbb
cmp
fnsave
push
out
ljmp
jnp
inc
icebp
push
mov
adc
stc
sub
jl
cld
int3
in
mov
test
rorl
in
mov
push
jne
je
decb
roll
lods
push
mov
mov
inc
es
push
pop
inc
pop
jno
das
popf
outsb
aam
in
rcrl
or
pushf
mov
xchg
mov
dec
mov
inc
int
into
xchg
scas
repz
or
sub
jle
push
outsb
sub
xchg
add
in
int
adc
popf
xchg
pop
scas
jbe
inc
sbb
arpl
test
adc
dec
or
inc
idiv
xchg
shrb
xor
rolb
mov
jne
daa
dec
loope
pop
ret
fildll
jg
xor
pop
test
adc
insl
mov
std
loop
and
test
xor
repz
pop
daa
push
stos
aad
inc
xor
sbb
push
std
inc
ss
mov
mov
mov
jno
and
popa
es
jmp
mov
ficoms
mov
jno
mov
inc
xchg
inc
and
inc
mov
les
mov
push
sub
xchg
loop
cmp
push
mov
push
testb
pop
lods
jp
insl
dec
cli
jg
sahf
mov
aam
lods
mov
cld
adc
sahf
pop
inc
dec
mov
dec
stos
cmp
jne
adc
mov
test
fcompl
lcall
pop
loope
push
lret
sub
or
pop
outsl
cmc
mov
mov
lret
frstor
les
inc
add
mov
push
dec
push
sub
mov
dec
inc
test
adc
das
rorl
and
insb
sbb
adc
test
in
push
outsb
jl
roll
push
nop
dec
rcll
in
iret
push
mov
stc
lret
sbbb
jbe
loop
movsl
mov
pop
pop
iret
lcall
mov
xchg
cmc
inc
and
loopne
jmp
mov
ret
daa
shl
pushf
sbb
and
decb
cltd
je
dec
or
mov
pop
push
fiaddl
in
mov
mov
jbe
stos
and
decb
xchg
mov
shrb
jmp
mov
cltd
shl
xor
int3
pop
fstps
add
jb
imul
adc
push
test
idivb
inc
mov
jg
cwtl
push
jp
push
pop
inc
jmp
xor
inc
mov
jl
inc
mov
aaa
jne
in
mov
sub
push
out
out
mov
movsl
aam
sbb
scas
mov
lods
push
imul
subb
sbbb
jecxz
xchg
sbb
and
ja
cli
leave
mov
mov
sbb
lret
jecxz
repz
sbbb
inc
add
outsb
dec
bound
mov
cwtl
and
and
clc
xchg
call
sbbl
fs
loop
sbbb
inc
xlat
fmuls
aaa
adc
aaa
adc
and
adc
and
nop
gs
mov
iret
cmc
dec
in
xchg
inc
sbb
xor
cs
cs
insl
and
inc
testb
sbb
data16
mov
cvtpi2ps
adc
jae
adc
lods
test
lahf
xor
shrl
js
fwait
insb
roll
mov
andl
call
addb
add
fisttps
xchg
bound
and
sub
xorb
pop
or
out
repz
or
loopne
scas
jne
daa
lahf
push
repz
fstpl
fs
add
mov
hlt
jno
adc
adc
pop
jecxz
xchg
idivb
fadds
push
adc
push
movsl
adc
cmp
add
ss
xorl
push
pop
or
test
outsl
mov
push
clc
sbb
aam
mov
adc
mov
cwtl
mov
dec
cwtl
or
cwtl
xchg
mov
idivl
ds
insb
push
and
nop
inc
push
loopne
les
xor
ss
mov
jg
jl
ret
call
and
repz
pushf
js
les
out
addr16
notl
jnp
cmp
insb
adc
sub
sub
xor
adc
subb
sbb
cmp
xchg
lcall
cld
cwtl
cmp
dec
sub
inc
jge
xor
mov
mov
test
clc
add
and
loopne
lea
and
xor
cmp
pop
loop
jp
mov
movb
popf
test
dec
out
or
sub
sub
add
pusha
leave
daa
out
mov
cltd
filds
ret
adc
pop
je
add
imul
sti
and
das
jge
xchg
sahf
pushf
mov
adc
add
cltd
sbb
out
xchg
into
aam
pop
xchg
fs
xchg
in
add
jg
test
mov
leave
enter
mov
sti
push
ljmp
movsb
sbb
xchg
jecxz
sbb
gs
lahf
inc
repnz
dec
repz
addr16
out
stc
add
mov
cltd
loope
stos
inc
mov
ret
out
mov
repnz
ret
movsl
mov
pusha
inc
lock
and
mov
cs
and
mov
cwtl
mov
and
cltd
in
mov
rorl
adc
inc
push
sub
lret
cmp
aam
add
aam
movsb
insl
stos
cmp
pop
pop
xor
jle
adc
mov
mov
fnstsw
scas
cli
mov
out
xchg
test
jmp
andl
fcomip
fisttpll
pop
cwtl
shll
bound
jmp
inc
hlt
or
jae
lcall
lock
push
fbstp
cwtl
dec
fwait
in
in
mov
jge
ss
ss
ljmp
cmc
pop
xorb
jo
and
sbb
add
jb
sub
xchg
mov
dec
mov
and
ret
popa
das
pop
add
mov
and
ja
int
lock
js
mov
pop
enter
movsl
sub
addb
mov
pusha
into
dec
test
in
mov
loope
xor
fildl
xchg
add
movb
cmc
pushf
pop
pop
or
fimuls
aam
scas
shlb
mov
inc
sbb
repz
xlat
cltd
adc
scas
sbb
add
push
and
jbe
sahf
mov
shl
fisubrs
loopne
sbb
fsubrs
pop
push
mov
jmp
jne
cmpsl
xchg
xchg
add
add
mov
inc
ret
popl
mov
adc
out
jae
xchg
push
out
je
subb
loopne
cmpsb
sbb
jae
fisubs
xchg
pop
das
das
lret
pop
lds
sbb
or
imul
xor
mov
xchg
scas
push
jecxz
stos
sbb
test
out
dec
test
int3
sbb
jno
add
cmpsb
in
xor
fsub
mov
lret
gs
and
cmp
push
push
daa
add
pushf
or
jno
mov
js
jp
inc
icebp
pop
xchg
sbb
mov
or
push
jecxz
sub
xor
ds
or
ss
lahf
sbb
inc
sub
aaa
dec
xlat
shlb
or
repnz
xlat
sahf
dec
pop
push
arpl
mov
jae
fsubp
xchg
pop
jns
mov
xor
mov
jae
jns
cltd
xchg
imull
jmp
enter
xchg
push
jns
pop
shlb
fists
popa
sub
adc
sub
adc
push
pop
scas
int3
add
push
xlat
xor
lods
push
rsqrtps
lcall
mov
or
out
add
cmc
js
pop
sarl
jns
mov
pusha
cmp
aad
ds
mov
jns
int
in
fs
test
adc
in
sub
pop
adc
repz
cmp
test
cmpsb
adc
movsl
test
cld
sbb
xor
sub
push
cwtl
mov
xchg
push
sbb
into
add
mov
rorl
dec
jns
xor
jmp
mov
mov
fistpl
out
in
dec
mov
push
mov
icebp
pusha
and
or
cmp
int3
and
mov
pop
aad
in
sbb
xor
cmp
ljmp
xchg
xchg
ret
popl
mov
mov
imul
mov
jbe
or
push
sub
push
push
int
movsl
adc
pop
dec
jns
je
sub
pusha
push
jl
or
mov
int
jb
loopne
mov
ret
push
xchg
filds
dec
mov
cmp
ja
sahf
clc
mov
clc
cwtl
or
rcrl
sbb
add
in
mov
js
movsl
jle
movsl
push
sbb
sbb
xchg
sahf
xor
jb
inc
mov
adc
add
shll
aaa
add
mov
stc
pop
enter
sbb
mull
mov
ficompl
sub
lods
xabort
out
dec
or
mov
inc
add
pop
dec
mov
cs
aam
aad
arpl
jb
push
pop
pop
in
les
xchg
push
add
lret
dec
in
int
adcl
sbb
out
icebp
mov
lret
sbb
int
dec
cmp
or
inc
loope
cmc
jae
lcall
fsubrl
rorb
push
out
mov
xchg
lahf
movsb
fbstp
sbb
mov
fildll
or
lea
and
nop
popa
push
in
cmpb
or
sbb
fsub
scas
aas
insb
lahf
xor
inc
sub
insl
cli
hlt
fsubs
xchg
xlat
jp
sbb
push
call
sbb
mov
or
sub
and
popf
ja
enter
pop
xchg
sarl
inc
ret
loop
js
or
mov
stos
adc
add
lcall
or
stc
cli
call
xchg
adc
clc
sub
mov
mov
sbbb
hlt
add
jb
inc
pop
lret
mov
int3
jmp
pop
cmp
cmc
pop
fucomip
stos
push
shrl
out
xchg
jb
jnp
sub
fstp
xor
or
jl
mov
adc
in
test
pop
xchg
cmc
test
xor
mul
out
xchg
pop
lahf
jg
sbb
aas
push
popa
fsts
popa
int3
ljmp
incl
daa
popa
xchg
xor
inc
jne
dec
test
push
push
roll
fwait
xchg
in
xchg
dec
and
sub
cmp
xor
pushf
inc
ret
xor
pop
dec
jmp
sub
fs
xchg
loopne
fdivs
popf
cmp
push
imul
push
mov
sub
xor
dec
jnp
mov
sahf
sub
into
mov
loopne
push
mov
jge
dec
pop
std
in
pop
cs
stc
sbb
jne
into
push
cli
ret
inc
cmp
rorl
bound
daa
aas
xorb
xor
imul
inc
sti
inc
mov
into
in
lret
mov
fucomip
add
push
outsl
push
sub
dec
and
in
out
inc
bound
sti
aaa
test
cmp
push
push
push
inc
adc
outsl
jae
shl
in
stos
jmp
imulb
arpl
inc
je
mov
push
xchg
fisttps
pusha
mov
jle
jae
outsl
int
cmp
push
pop
test
cltd
mov
mov
push
mov
cmp
cmp
push
push
addr16
jmp
mov
add
dec
jp
jae
cmpsb
cmpsb
pushf
enter
jne
sub
xchg
jecxz
dec
scas
cwtl
mov
js
or
stos
bound
sbb
adc
nop
out
mov
and
sahf
and
and
fildll
ja
pop
adc
sub
fidivl
cmpb
pop
add
into
pop
push
std
sub
fsubl
fnstsw
inc
push
cld
mov
push
aad
sbb
fistl
adc
int
lods
subb
testb
pop
adc
fidivrl
out
or
test
ljmp
mov
push
insb
jl
pop
pop
arpl
mov
mov
imul
ljmp
aaa
adc
mov
jb
push
add
mov
icebp
insb
fdivl
arpl
inc
cmpsl
in
mov
mov
sub
mov
ds
dec
lds
lret
push
rolb
pop
jne
mov
cwtl
ffree
fidivrl
das
mov
sarl
ljmp
mov
aad
fwait
cli
xchg
faddl
jl
xor
pop
mov
lret
insl
mov
out
stc
xlat
cmp
lcall
insl
imul
sub
outsb
mov
outsl
push
lret
or
ja
push
sub
or
adc
sar
dec
jp
jp
push
or
jg
or
inc
inc
fdivl
cmp
bound
jnp
push
push
insb
hlt
out
cmpl
jbe
daa
sbb
jns
loop
cmp
imulb
and
push
xor
test
dec
mov
ret
test
add
cwtl
sti
add
add
pop
cmp
xchg
jo
mov
jecxz
dec
xchg
mov
lret
push
cmpsl
cmc
xchg
mov
scas
shll
test
mov
cmp
cmp
out
fwait
stc
sbb
in
sub
test
add
pop
sub
pop
adc
fisttpll
inc
jle
mov
adc
lcall
out
movsb
cmc
clc
xchg
test
xchg
arpl
leave
das
push
xor
data16
inc
sbb
add
sti
xchg
stos
in
out
xchg
mov
leave
pop
jecxz
pop
xchg
sar
aaa
fsubl
mov
mov
xor
rcl
jbe
fisttps
outsb
aas
lock
mov
enter
div
adc
out
mov
arpl
pusha
xor
seto
fsubs
fdivrl
mov
inc
push
mov
push
cmp
sub
bound
imul
xor
xorb
xchg
xor
mov
enter
add
sub
hlt
sub
dec
pop
ret
test
inc
imul
mov
movsl
sti
pop
out
mov
lods
clc
xchg
mov
mov
or
loop
clc
inc
xchg
lds
or
xchg
inc
loope
es
add
mov
dec
outsb
lret
sbb
push
mov
mov
rclb
or
mov
aad
sbb
sub
shlb
and
movsl
pop
xchg
mov
mov
mov
or
and
xchg
xor
arpl
push
pop
xchg
xor
sbb
and
pop
adc
sub
xchg
into
js
xor
fwait
cmpsl
outsl
scas
out
sub
mov
fcomps
arpl
cmp
out
mov
cmp
mov
paddw
jmp
or
aad
jnp
add
into
or
shrb
mov
cmc
add
xor
std
in
add
pushf
mov
and
cltd
stc
push
pusha
push
push
std
rcll
leave
mov
inc
mov
cmp
dec
mov
pop
call
dec
jge
fidivs
xor
ljmp
lahf
and
push
in
in
mov
ficoml
add
and
sub
pop
sub
add
sbb
adc
mov
clc
outsl
or
pop
adc
dec
jnp
add
adc
arpl
adc
xchg
pop
enter
ds
sbb
xchg
xchg
push
and
jmp
push
adc
adc
out
out
xor
scas
ficomps
inc
jle
jno
sub
int3
push
sarl
ret
add
iret
pop
jp
or
mov
fistpl
mov
push
and
ljmp
icebp
out
inc
mov
gs
aad
mov
test
xor
xchg
jns
xchg
cmpsb
push
rcll
jge
pop
repz
mov
cld
fdivrl
mov
fxch
iret
mov
lock
mov
js
outsb
mov
popl
mov
sbb
outsl
xor
pop
out
push
sbbl
xor
pop
shrl
push
mov
or
jle
pushl
cltd
aad
roll
xor
dec
adc
cltd
call
cmp
mov
push
inc
and
daa
and
repnz
dec
mov
mov
jne
add
sub
shlb
xchg
icebp
cmpsl
out
jbe
aam
movsb
iret
push
lea
xor
add
test
mov
pop
sbb
dec
jb
mov
lahf
mov
xchg
int3
push
orb
mov
mov
pop
fidivs
xor
mov
xchg
loopne
dec
idivb
and
iret
popf
cmp
or
lods
add
xchg
hlt
and
cmc
push
inc
nop
ficoml
and
push
out
inc
xchg
inc
insl
sbb
jno
popa
push
aas
push
lret
xlat
cmpsl
in
dec
or
movsb
pop
cli
dec
dec
inc
or
cld
cli
sub
bound
lcall
mov
sub
mov
push
cmpsb
imul
xor
outsb
pop
or
ret
mov
xchg
sub
push
sub
in
jbe
xor
push
fstpt
jmp
ror
stos
mov
ja
xchg
rcl
sub
push
mov
bound
repz
scas
add
jno
sub
xor
lods
shlb
in
clc
push
pusha
mov
cmp
mov
iret
aaa
rorb
sti
andb
sub
andb
ljmp
mov
cltd
push
xor
push
push
xchg
das
es
mov
in
cwtl
fbstp
push
inc
adc
sub
testb
xchg
dec
fcomps
cmp
mov
or
dec
xlat
loop
insb
mov
adc
pop
push
mov
cmp
sub
mov
out
nop
inc
xchg
enter
or
xchg
cli
out
jmp
aas
or
stos
sbb
icebp
cld
imul
dec
fwait
jle
jge
mov
add
outsb
xor
and
in
loope
pop
in
out
pop
or
ds
stos
xchg
xchg
icebp
in
xchg
xor
push
je
aaa
cmp
sbb
jle
sub
into
pop
fcomip
dec
out
or
pop
mov
out
push
cmpsl
lahf
ret
xchg
mov
in
sbb
dec
loopne
cli
cmp
dec
mov
ljmp
pop
xchg
mov
or
into
sub
insl
stc
das
out
popw
mov
mov
mov
cmp
add
fwait
mov
mov
fsubs
mov
lods
jne
mov
rorb
xor
scas
in
or
int3
sbb
mov
fidivrl
mov
enter
into
push
pop
jnp
or
mov
mov
imul
inc
mov
sbb
andb
nop
fidivrs
xlat
or
sti
je
cmp
lock
mov
lea
sub
push
push
adc
pop
shrb
fs
lds
jmp
sbb
push
sbb
or
xor
frstpm(287
in
stos
scas
insb
dec
rolb
data16
fmulp
out
sub
sub
adc
pop
push
imul
ret
pushf
and
divl
cmc
dec
jge
jno
rorl
outsl
dec
mov
sar
mov
xor
insb
mov
pusha
int3
jl,pt
and
jns
ja
mov
daa
xchg
bound
mov
push
push
outsl
jmp
imul
in
lds
xchg
xchg
ret
jle
xor
into
or
or
subl
push
loope
addr16
ret
pushf
imul
mulb
sahf
lret
popf
std
in
test
popf
out
nop
push
mov
or
shlb
xor
insl
fisttpl
xchg
insl
test
ret
pop
out
fwait
popf
shlb
dec
jo
pusha
sub
jne
loope
out
mov
push
adcl
inc
arpl
rolb
out
sbb
je
daa
dec
cld
rcr
xorb
mov
push
imul
fwait
jecxz
jb
jbe
outsb
hlt
jb
pop
cs
xchg
jl
xlat
mov
cmp
mov
lret
adc
testl
jne
fisttpl
inc
sub
shl
push
push
adc
movsb
out
movsl
fstpl
add
inc
vandnps
cli
cmpb
jg
pop
enter
xchg
add
lods
sub
jecxz
dec
xchg
setge
jmp
add
pushl
lea
insl
or
jmp
bound
dec
cltd
stc
dec
and
sti
aam
mov
popa
mov
lods
pushf
fcomp
xor
fs
adc
cli
popf
cmpsb
ljmp
jle
pop
push
out
int3
mov
mov
xlat
mov
mov
lea
pop
dec
or
push
sbb
xchg
xor
bound
xchg
adc
shll
mov
lock
pushf
mov
mov
in
push
and
in
add
scas
repz
push
push
les
repnz
int3
les
xchg
mov
sbb
pushf
xchg
daa
std
inc
pop
or
arpl
icebp
stos
cmp
test
popa
mov
mov
shl
xlat
mov
cltd
cld
xor
pop
daa
leave
mov
or
mov
xchg
int
sbb
add
push
imul
lahf
shlb
and
jb
loopne
cmpsb
sub
cmp
fnstenv
jmp
pop
repnz
inc
movsb
adcb
sti
add
pop
inc
push
jae
xchg
adc
inc
scas
jp
into
mov
dec
cli
ret
sbbl
mov
divl
inc
in
aad
rclb
sub
push
imul
xchg
stos
stos
dec
daa
xchg
fdiv
stos
cs
push
adc
arpl
mov
push
stos
icebp
lods
jo
push
and
add
xchg
das
mov
ja
lods
repz
sahf
inc
jb
fld
push
inc
jno
mov
xor
adc
sbb
adc
adc
int3
push
push
lods
dec
mov
push
pusha
inc
cmp
inc
sbb
mov
dec
je
addr16
fbstp
mov
dec
jo
shrl
mov
jl
xchg
rcll
clc
xchg
lea
mov
sti
xchg
arpl
pop
ss
xor
fcmove
xchg
xchg
jmp
enter
fdivs
mov
adc
fistps
int3
imul
test
sbb
stos
ja
mov
push
sbb
popf
jns
rorb
sub
pop
shll
xor
sub
aas
leave
orb
inc
movsb
out
ret
pop
lea
out
adc
lods
loop
ret
shll
outsl
jmp
or
sahf
mov
fwait
sbbl
sarl
in
std
outsb
pushf
loop
sbb
aad
push
ret
pop
or
jne
clc
dec
inc
nop
aad
xor
push
sbb
lcall
sub
mov
movsl
jae
inc
and
mov
scas
popa
insl
insl
cmpsb
cmp
dec
dec
dec
lahf
cltd
xchg
iret
fcoml
mov
pmulhw
xorl
pushl
lret
das
outsb
enter
ret
pop
jo
cmp
jno
jp
outsb
clc
insb
cld
icebp
outsb
or
scas
add
enter
fincstp
mov
or
imul
popf
sub
xchg
daa
das
or
cmp
sbb
scas
lods
dec
xor
shlb
pop
adc
in
scas
flds
mov
cmpsl
xchg
push
nop
test
pushf
push
popa
cmp
movb
xchg
fidivrl
cmp
cmp
outsb
call
sub
or
mov
lods
push
fisubl
mov
aas
cwtl
pop
mov
add
mov
scas
adc
insl
mov
popa
or
es
fcomps
jnp
jg
icebp
and
mov
jbe
cmp
mov
xor
out
add
lahf
and
ja
fstpt
das
inc
out
push
std
lock
and
jnp
fdivr
xor
sbb
in
xor
std
adc
jle
lret
scas
mov
loope
in
imul
mov
pop
pushf
xor
dec
cmp
mov
push
jl
xor
push
imul
xorl
in
dec
mov
cmp
mov
lcall
dec
mov
outsb
ljmp
push
dec
jecxz
fwait
push
imul
inc
cwtl
fiadds
pop
add
into
dec
fs
daa
in
testb
push
jne
add
sbb
das
sbb
fidivl
sub
mov
fwait
xchg
je
lock
std
imul
push
and
cmp
sbb
jmp
xchg
call
pop
mov
aas
xchg
cmc
sbb
out
fmul
ja
popa
push
stos
icebp
stc
sbb
push
mov
dec
xchg
inc
aaa
lret
add
into
and
sti
mov
aas
adc
mov
dec
mov
jno
push
dec
cmp
shrb
ret
xor
leave
in
js
sbb
fs
and
dec
lret
inc
shrb
or
xchg
xchg
imull
push
mov
adc
push
mov
and
jnp
and
mov
push
movl
sti
sbb
or
cltd
and
mov
jmp
aas
inc
dec
xchg
sub
ds
lret
pop
jno
scas
gs
mov
lret
add
jle
in
fwait
xchg
testl
mov
lret
rcll
stc
iret
add
arpl
outsl
xchg
les
mov
xchg
adc
out
jle
adc
lahf
lods
xor
mov
dec
dec
push
adc
sub
cmp
push
cmp
push
clc
sahf
cmp
test
xor
mov
in
sbb
inc
mov
xorb
flds
jbe,pt
addr16
mov
pushaw
int3
dec
mov
stc
sarb
gs
insb
hlt
jge
gs
mov
es
rorl
adc
push
in
fs
lcall
adc
das
dec
push
mov
and
hlt
lods
in
je
push
inc
imul
mov
out
mov
xchg
sarb
fwait
mov
jns
dec
inc
loopne
daa
mov
xchg
mov
pop
mov
jnp
mov
cmpsb
js
cltd
or
nop
mov
nop
in
ljmp
adc
in
add
adcb
jmp
sti
fildll
loope
cmpsb
xchg
fidivrl
sbb
add
adc
in
adc
shlb
push
aas
cmp
daa
cmp
pop
jnp
cmc
cmp
iret
xor
mov
and
jge
pop
dec
inc
int
xorl
aad
loopne
lret
mov
jp
gs
xlat
pop
pop
pop
mov
dec
fmul
add
mov
nop
aaa
repnz
sub
mul
stos
add
call
xchg
daa
jle
jge
add
bound
push
jle
jmp
sbb
push
adc
aaa
mov
xchg
mov
test
clc
daa
out
cmc
in
enter
jo
daa
mul
adc
sbb
mov
mov
push
int3
lods
loop
inc
jg
pop
mov
xor
jo
daa
add
sub
adc
cmp
cltd
cmpl
add
pusha
pop
dec
mov
aad
icebp
jb
outsb
mov
push
daa
mov
push
mov
sub
xlat
jmp
les
jb
ss
out
clc
or
int3
sub
addr16
or
pop
out
jecxz
inc
ficompl
icebp
dec
dec
lret
ret
xlat
adc
jo
dec
jmp
mov
jb
scas
sub
movsb
push
test
adc
test
out
cmp
adc
jno
adc
loopne
por
movl
dec
iret
and
jne
inc
jle
mov
xchg
xor
loopne
clc
push
jecxz
cwtl
adc
call
aaa
leave
out
movsb
inc
jns
and
lret
fwait
test
lahf
sbb
aaa
push
sbb
xchg
add
dec
dec
cmovl
cmpsb
lock
stos
fidivl
jo
xchg
popa
dec
mov
push
xor
jp
fs
andb
pop
scas
adc
mov
inc
test
sbb
fidivl
and
jbe
sbb
push
sbb
lret
inc
loope
xchg
mov
cmp
cld
jmp
sub
add
fwait
and
ja
stos
test
push
test
xchg
or
jbe
dec
lods
or
aam
cmp
add
push
aas
jns
jne
cmp
adc
xlat
jmp
das
pop
hlt
fmuls
sbb
mov
adc
stos
and
jnp
test
insb
clc
pop
jl
lock
imul
lret
loop
pop
mov
lds
cld
add
lahf
add
cli
dec
jae
xchg
adc
xchg
lods
adc
inc
inc
jnp
mov
cmp
je
xchg
dec
and
mov
xchg
cld
xlat
cmp
lock
out
xor
in
pop
sbb
jp
xchg
xorb
hlt
test
stos
lea
lods
sub
and
mov
push
push
sbb
shrb
mov
inc
inc
pop
aaa
outsb
aad
mov
mov
js
and
mov
cmc
rolb
aam
sub
sbb
add
mov
pop
pushf
xlat
inc
sbb
and
ret
sub
sub
pop
sub
xchg
inc
dec
lret
stos
pop
loop
push
imul
in
fildll
inc
mov
out
sub
xchg
dec
out
aad
mov
push
mov
mov
loope
inc
sub
push
adc
loope
sbb
subl
lods
out
cmp
push
test
sbb
sbb
ds
testl
xchg
test
fiaddl
mov
cmp
mov
repz
fwait
and
outsl
xchg
std
nop
loope
jp
push
inc
fsubl
scas
mov
mov
mov
lods
fdivp
push
add
and
xchg
out
cmpsb
push
or
lcall
inc
mov
and
push
stos
aas
pop
scas
and
stc
repz
xchg
lds
mov
pop
inc
xor
xor
ret
push
mov
mov
mov
sub
inc
mov
lret
and
loop
sub
popa
push
inc
stos
ss
jnp
or
xchg
fistps
shr
test
cmp
and
xchg
mov
sub
jae
icebp
pop
test
sar
adc
cmpsb
sub
test
sbb
fadd
mov
xor
movsl
xor
inc
into
scas
add
cmpsl
outsb
ljmp
xchg
test
push
push
or
or
dec
test
mov
inc
nop
addr16
inc
sbb
xor
mov
out
das
dec
dec
pop
repnz
ljmp
mov
or
add
lret
js
fldenv
cmp
call
mov
jbe
pop
ret
sub
pop
add
and
xchg
cwtl
loope
sahf
xchg
inc
aad
lsl
fst
jmp
add
dec
xchg
rcrl
mov
aam
pop
ja
jle
cs
insl
sub
bnd
imul
dec
jb
popa
fildll
movsl
xchg
nop
rcrl
test
jbe
adc
mov
mov
pop
out
mov
push
jle
outsb
push
test
int
or
inc
pop
sbb
ret
aas
ja
sbb
aam
dec
add
pop
outsl
repnz
ret
add
mov
ror
and
fnstsw
outsl
js
jg
push
push
pushl
push
les
and
sbbl
jns
rcr
call
fs
xor
xchg
cs
lods
add
pushf
xchg
nop
add
pop
cmpsl
lods
jge
das
lea
stc
pop
jbe
cmp
adc
pop
notl
adc
push
xchg
cltd
in
aaa
adc
aaa
mov
fmulp
push
lds
insb
add
xor
inc
movsb
jl
pop
sbb
cmc
push
out
data16
jb
inc
loope
mov
frstor
push
adc
js
fcomi
outsb
adc
jo
jl
subl
es
icebp
dec
jmp
xor
lock
icebp
adc
int
xor
pop
mov
lcall
int
sbbl
mov
xlat
pusha
stos
adcl
cmp
or
out
xchg
fwait
stos
sub
adc
push
xchg
bound
cmpsb
mov
adc
inc
adc
popf
push
sub
cmp
jp
push
adc
jae
push
push
cmp
loopne
inc
imul
mov
aas
je
stos
inc
jle
mov
pusha
xchg
stc
int
cld
cmp
add
icebp
icebp
sub
xor
cmp
push
mov
das
lock
adc
jns
xchg
js
push
jle
or
sbb
sbb
out
pop
xchg
sub
rcrl
insb
ss
dec
cmpsl
pop
mov
test
pop
cmp
jns
sub
ret
xchg
sbb
std
outsl
in
xchg
in
push
mov
mov
dec
mov
push
lret
dec
cli
cmp
pop
iret
pop
movsl
xor
fsubrs
ret
data16
mov
fcomps
in
mov
inc
leave
arpl
jmp
xchg
sub
daa
and
and
push
inc
test
cltd
loop
pop
gs
inc
xchg
stos
jnp
scas
cld
push
ljmp
rcrb
sub
xchg
movsb
sub
inc
sar
lds
push
pop
jno
mov
out
incl
fwait
in
scas
push
xor
adc
iret
faddl
ret
inc
rorb
dec
xlat
sub
xor
sbb
int
jne
inc
push
ret
sbb
lock
lods
or
andb
cmp
mov
cmp
icebp
mov
ret
adc
enter
push
mov
sarb
add
cwtl
pop
cmp
orb
add
jnp
loop
sub
icebp
repz
hlt
push
xchg
sbb
cmp
push
out
cmpsl
xor
inc
and
dec
data16
ja
lret
testl
fidivs
fnsave
push
dec
cmp
lds
fcmove
test
mov
mov
and
pop
pop
add
push
mov
inc
add
add
push
leave
mov
xchg
or
loope
es
adc
push
jnp
shl
std
xor
add
jnp
add
and
lods
jo
pusha
mov
call
enter
dec
shrl
repnz
dec
dec
pop
adc
enter
jb
out
and
mov
nop
sub
xchg
xchg
inc
mov
arpl
ja
jo
aam
int3
in
mov
ljmp
shlb
repnz
and
popf
add
jnp
and
je
mov
loop
push
or
cmp
jg
cmp
in
pop
mov
test
popl
push
jnp
add
cltd
bound
and
add
cmp
inc
dec
test
adc
dec
cwtl
sti
dec
add
loop
and
cltd
repz
pop
jge
mov
cltd
pop
fimuls
cld
lock
adc
dec
adc
or
push
pop
sub
dec
jge
aas
out
inc
cmpsl
jle
std
jle
push
sub
pop
or
pop
andl
aaa
mov
push
cvtps2pd
mov
or
enter
stos
mov
sti
adc
mov
or
sahf
lds
cmp
arpl
fcmove
or
pushf
mov
cli
js
dec
lods
sub
sbb
add
pushf
push
gs
xor
and
xchg
xchg
mov
into
insb
inc
in
aam
push
mov
out
imul
jns
test
icebp
xlat
repnz
adc
addb
sbb
mov
sbb
fwait
jl
stos
shll
rcll
incb
adc
jns
adc
cmp
scas
popf
cmp
fs
push
subl
stos
dec
adc
dec
jae
or
ret
xchg
shll
hlt
jb
mov
push
stos
stc
adc
xchg
dec
scas
inc
add
pop
shrl
xchg
sbb
clc
mov
push
popf
test
jo
push
negb
mov
pushf
sub
mov
pop
std
sbb
cli
aad
mov
push
out
fs
push
push
stc
bound
sbb
dec
and
test
lcall
pusha
pop
xacquire
out
mov
adc
or
mov
xchg
push
not
adc
cmp
gs
or
lods
pop
sarl
push
cmp
dec
movsb
push
mov
fnstsw
into
sbb
xchg
inc
add
xlat
fs
popf
sub
and
sub
xor
sti
pop
imul
dec
adc
mov
mov
outsl
mov
ja
fimuls
aad
add
int3
push
cmpsb
or
fwait
xchg
testb
sahf
cltd
pop
scas
inc
xchg
or
jecxz
repnz
dec
mov
sarl
mov
and
or
testb
cmp
and
int
or
mov
shll
add
and
cmc
pop
sti
mov
lods
cmp
jnp
jo
mov
pop
cmp
push
and
pop
dec
dec
les
cmc
rorl
jo
mov
scas
movsl
daa
movsb
movsb
data16
rcll
inc
dec
out
and
push
mov
ja
cmp
pop
fildl
stos
and
xlat
stos
fnsave
xor
icebp
dec
test
imulb
lret
ds
mov
insb
std
pop
sahf
out
cmp
ja
mov
push
and
inc
mov
je
xchg
jns
dec
sub
sub
mov
mov
ds
xor
testl
aad
nop
lahf
xchg
lea
cmc
test
xor
call
scas
clc
cmc
jae
inc
ficompl
add
stc
shl
adcb
test
sti
and
cmp
fldenv
inc
mov
adc
fdiv
jmp
and
pop
mov
inc
sbb
push
aas
sbb
inc
inc
add
adc
mov
xchg
xchg
addr16
sub
mov
push
mov
lcall
pop
imul
rcrb
bound
data16
and
cmp
daa
sarl
jnp
jl
jmp
in
lods
pop
jl
int3
arpl
leave
add
pop
push
adc
add
push
or
fisubl
cmp
cli
push
stos
lds
mov
sar
pop
movsb
push
or
lods
mov
cli
push
pop
jbe
inc
mulb
fdivr
out
fildl
lods
push
jecxz
mov
add
pop
push
fsubl
mov
xorb
cld
push
cmp
jo
cmp
loopne
mov
bound
mov
adc
lret
push
sub
pop
fdivrs
add
dec
out
mov
ret
hlt
lods
push
pusha
add
sti
push
ljmp
mov
xor
sbb
or
xchg
push
inc
sarb
fld
fisubl
call
sbb
shrb
in
cmp
fcoml
adc
cs
jno
mov
sbb
lds
adc
mov
adc
scas
cmp
push
roll
jl
sub
push
lcall
mov
inc
aam
out
notl
aad
pop
test
iret
fisubrs
inc
adc
mov
test
dec
sbb
imul
addr16
dec
hlt
ja,pt
jne
mov
mov
test
add
sarl
xor
inc
mov
js
call
subl
xor
idivl
dec
lcall
ds
test
adc
cmpsb
mov
add
pushf
jmp
call
or
sarb
fcmovbe
xchg
add
mov
xorb
xchg
jbe
cltd
hlt
jmp
mov
sbb
cwtl
addb
sub
ds
mov
addb
cld
push
scas
xor
test
xchg
nop
roll
sbb
sbb
adc
cmp
lret
jg
xchg
clc
xchg
xchg
mov
int3
and
neg
mov
ja
cmovnp
clc
xchg
test
lods
mov
fsubl
scas
inc
xor
mov
adc
mov
dec
notb
cltd
pusha
movb
mov
mov
or
push
data16
popa
pop
cltd
push
xchg
inc
loop
sub
sub
adc
dec
lahf
inc
dec
dec
cltd
push
in
dec
lea
enter
add
cmp
ss
adc
fcomip
push
shr
or
scas
addr16
sahf
mov
sbb
insl
out
pop
stos
mov
insb
mov
data16
add
pop
inc
sub
insl
in
mov
add
cmp
or
sub
add
les
ljmp
imul
test
add
ja
fs
adc
jne
inc
add
bound
xor
add
sbb
sub
add
stos
mov
xor
xor
lcall
jno
and
pusha
enter
push
cwtl
icebp
shl
sub
out
fdivrl
into
popf
push
inc
call
xchg
mov
push
loope
jo
sbb
stos
xchg
pop
sbb
lods
aad
pushf
iret
or
out
lret
or
std
cmp
push
or
sti
jno
ror
into
dec
mov
in
mov
addr16
cli
pop
out
fisubrl
cmp
test
repz
lock
es
es
xchg
adcl
xchg
pop
pop
jae
lret
adc
jns
push
xchg
sti
das
cmp
push
clc
add
in
repz
stos
ds
xor
dec
xchg
bound
rcrb
iret
cmp
mov
mov
lret
dec
stos
int
fs
test
pusha
cmp
int
imul
movsb
movsl
xor
inc
pop
test
add
cli
enter
sub
xchg
mov
ss
adc
adc
sti
sub
push
paddb
add
sub
ret
sbb
insl
or
lahf
shll
cmp
sub
repnz
mov
xor
push
je
outsb
inc
push
jne
inc
xlat
lahf
pop
aad
mov
pop
mov
xor
fwait
xchg
cmp
xor
loopne
pop
jge
lcall
xchg
dec
test
ret
pop
pusha
testb
fsubrp
push
push
fsts
dec
repz
sub
int
pop
imul
addr16
and
shlb
fwait
les
add
addr16
int
std
lods
int3
adc
fsubl
push
pop
mov
out
rorl
adc
xchg
mov
xor
sbb
pop
clc
test
sbb
adc
test
xchg
in
ja
test
outsb
xchg
mov
lret
pop
jbe
mov
inc
imul
fnstcw
xchg
arpl
mov
mov
inc
in
sbb
orl
jno
fcmove
fldl
jae
jp
jmp
pusha
fisttpl
and
lret
inc
movsl
repz
in
outsb
fcmovne
xor
dec
mov
mov
je
lods
mov
pop
mov
inc
icebp
mov
scas
mov
mov
xchg
jmp
push
fwait
mov
xchg
movsl
je
xchg
mov
push
fidivl
push
xchg
ds
cwtl
bound
insb
dec
push
mov
xchg
cwtl
add
lods
fcoms
jnp
push
mov
pop
mov
or
aad
mov
popf
jbe
mov
fs
pop
mov
mov
sbb
test
mov
dec
fdivl
gs
pop
or
retw
ja
out
scas
and
ret
push
fidivrl
add
mov
mov
adc
mov
xlat
ret
xchg
jge
sbb
sub
dec
ds
cmpsl
rcrl
pop
popf
subl
mov
xchg
dec
arpl
out
clc
into
and
movsb
shr
or
mov
lods
int
mov
sub
out
loope
fsubrl
call
imul
push
mov
cltd
nop
arpl
enter
iret
cmc
jle
shl
ror
jmp
mov
xchg
push
lock
mov
jecxz
pop
jecxz
dec
je
jge
pop
test
dec
inc
adc
mov
dec
mov
cmpsb
xor
popa
ret
push
mov
loopne
mov
jle
cmp
push
les
test
ja
in
inc
fdivrl
push
xor
aam
inc
push
mov
and
xlat
or
jns
icebp
xchg
ds
dec
dec
push
addb
call
dec
sbbl
jge
mov
pop
int
sub
and
or
mov
ret
jle
sbb
aaa
pop
fldl
mov
mov
ss
pop
cltd
adc
les
mov
cli
clc
lret
or
mov
inc
fisttpl
sub
cmp
scas
popa
fdivp
imull
cmp
sbb
sbb
inc
iret
cmpsb
jnp,pt
ror
push
sbb
adc
dec
mov
xchg
call
mov
out
stos
or
pop
popf
out
pop
outsb
dec
inc
mov
add
add
mov
pop
xchg
or
stos
cmpsl
xor
adcl
andb
lods
mov
arpl
sub
pop
inc
aas
jo
in
es
movsb
out
fwait
fistps
test
xor
fistpll
sbb
and
inc
int
mov
out
ret
inc
je
cltd
lea
je
in
in
imulb
push
xchg
cld
sahf
and
mov
inc
arpl
dec
jmp
rclb
push
mov
cmovl
adc
add
outsl
xlat
stc
jae
and
imul
push
movsl
push
mov
call
jl
popa
pop
push
ret
aas
xor
sbb
mov
out
push
mov
pop
call
adc
clc
cltd
adc
imul
faddl
push
aam
pusha
cmp
in
mov
sbb
sti
aaa
addb
daa
loopne
mov
cmp
aam
js
inc
pop
data16
xchg
jmp
lcall
or
mov
push
lcall
jne
cmc
je
shlb
and
mov
cmpsb
mov
clc
cld
xchg
pop
mov
ficomps
push
popf
sahf
sub
cmpsb
xchg
xorw
lock
fldcw
nop
push
mov
xor
xchg
sub
xchg
add
or
loope
sub
movsl
mov
lret
mov
in
jp
pop
adc
out
push
imul
out
sarb
sub
jo
lahf
xor
sbb
inc
xchg
out
ja
mul
mov
mov
jp
jns
cmpsl
cld
stc
pop
mov
cmc
fildl
and
mov
loop
xlat
lock
lock
iret
push
fiadds
stos
lods
cmpsb
mov
movsl
lods
mov
enter
cmp
sub
ret
inc
fists
popf
mov
lea
adc
add
or
nop
iret
lret
mov
add
xchg
in
inc
xchg
dec
call
rcrb
push
jbe
imul
call
xchg
fildll
xchg
sub
xor
es
pop
pop
mov
xor
scas
mov
mov
inc
sarl
mov
xor
push
mov
cwtl
pop
loope
sub
mov
xor
fwait
mov
in
cmp
xor
jle
sbbl
lock
pop
add
das
mov
fisubl
insb
repnz
mov
push
inc
push
mov
add
ljmp
sub
adcl
push
inc
outsb
les
mov
test
aaa
cmp
daa
cmc
dec
or
fidivrs
es
bound
mov
mov
cmpsb
xchg
cmp
lret
mov
in
xchg
pop
mov
mov
stos
das
out
inc
cwtl
ss
mov
sbb
push
inc
and
pop
mov
push
cmp
lret
js
xor
sub
shrl
cld
xchg
imul
adc
int
test
dec
pop
in
call
jbe
mov
fs
add
repnz
or
cmpl
mov
sbb
mov
mov
fwait
lds
test
xor
lods
inc
add
fwait
sub
jp
push
out
cmp
movsb
inc
mov
fisubs
les
negl
shrl
mov
or
inc
enter
js
cld
lods
loope
bound
inc
mov
mov
mov
out
sti
lcall
xor
fsts
adc
rcl
or
and
mov
dec
rorl
cli
out
shlb
xor
rcl
loope
xchg
adc
mov
push
jo
outsb
lods
pop
cmpsl
push
mov
jne
push
mov
push
lock
aas
lea
insl
push
aad
jl
pusha
mov
sti
int3
xor
push
lcall
add
arpl
add
add
mov
mov
pop
mov
adc
add
imul
dec
ret
dec
clc
ja
in
sub
and
mov
fadds
push
repnz
or
je
dec
mov
es
mov
fdivp
adc
push
xorb
adc
and
sub
pop
or
in
push
and
push
xor
enter
aas
cld
stc
push
and
js
sbb
leave
stos
adc
roll
scas
clc
daa
jp
xor
sub
cmpsl
inc
pop
xlat
insl
add
imul
xchg
in
or
test
xor
inc
inc
repz
mov
push
cld
popa
pushf
clc
imul
sti
pop
and
in
jno
subl
cmp
inc
mov
sub
jo
cmp
sbb
sbb
out
xor
dec
xlat
shl
dec
sub
mov
pop
jbe
push
xorl
js
cld
lds
incb
lock
pusha
mov
sub
jmp
pop
sbb
outsb
sete
jge
push
xchg
push
mov
and
test
xchg
push
ja
ret
and
lds
aad
pop
stc
pop
inc
jl
scas
or
lods
lods
int
pop
jae
lahf
cmp
adc
sbb
inc
jecxz
xlat
and
or
push
mov
mov
adc
add
cmp
fcmovnu
push
jnp
mov
jmp
add
pusha
pop
movsl
imul
loop
fwait
jne
dec
sti
bound
in
add
mov
xor
cmp
push
cmp
inc
inc
divb
insl
mov
pusha
or
pop
mov
aaa
fildll
sub
xor
shrb
les
cmpl
es
outsb
sub
js
outsl
bound
loopne
xor
and
adc
fs
test
je
outsb
push
mov
inc
dec
bound
clc
sbb
and
inc
loop
xchg
mov
jp
xchg
jo
mov
test
xchg
rcr
bound
fistpl
imul
decl
movb
mov
inc
outsl
sub
addr16
mov
das
je
adc
sti
inc
lcall
jns
int3
inc
sbb
ret
ret
add
push
sti
std
mov
mov
pop
dec
xchg
pusha
out
cmp
rcrb
mov
outsl
push
fdivrl
and
in
test
repz
and
mov
lods
and
jl
rcll
test
cmp
mov
mov
cmpl
rcl
test
mov
xchg
rorb
push
ja
call
je
lock
mov
mov
inc
iret
cmp
push
and
mov
push
sbb
sbb
mov
xor
add
mov
push
movsb
pushf
adc
imul
jns
lret
push
or
sub
hlt
fwait
mov
sub
adc
add
xlat
int3
cltd
pop
add
mov
fldenv
addr16
push
movsl
in
dec
daa
jmp
ror
cmp
pop
outsl
cmp
cwtl
movsb
andl
fisubs
bound
mov
mov
dec
hlt
push
jb
pop
fs
pop
and
test
scas
nop
mov
aaa
pop
cmp
lcall
addl
mov
cmp
int3
je
test
cltd
adc
jecxz
and
and
inc
or
shr
test
lret
mov
stc
int3
jge
pop
push
fsubs
pop
cltd
mov
sub
xor
sbb
and
cmpsl
outsl
loope
outsl
mov
pop
push
cmp
out
push
ja
mov
mov
sbb
jecxz
punpcklbw
daa
jo
xor
mov
andl
hlt
nop
stos
sarb
dec
mov
pop
lds
aas
dec
pop
jmp
sub
sahf
repnz
mov
sub
pop
mov
inc
out
pop
popa
inc
xchg
jbe
cld
mov
xor
test
into
mov
xor
and
sub
lret
cltd
sub
mov
push
sbb
sti
frstor
ss
mov
dec
pop
pop
cli
adc
mov
inc
ja
sbb
adc
xor
sbb
cmp
sub
test
in
mov
mov
sbb
int3
testl
sub
aad
dec
std
sbb
push
or
in
popf
rcll
jnp
jecxz
pop
cmpsl
sahf
in
lock
add
fs
mov
repnz
movsb
mov
or
mov
les
cwtl
aaa
jne
dec
js
pushf
ljmp
or
xor
out
xor
mov
scas
and
xchg
pop
cmc
ja
into
fdivrl
dec
in
inc
lea
xlat
mov
pop
or
jg
sti
xchg
xchg
nop
mov
pop
jecxz
scas
addb
push
push
xor
inc
jecxz
pop
push
jge
test
hlt
icebp
in
mov
repz
or
inc
fdivl
mov
xorl
je
jb
ss
out
das
sbb
dec
add
or
push
pop
gs
in
cmp
sub
jp
iret
int3
xor
xchg
jmp
and
mov
xlat
fwait
sub
push
sbb
mov
fucom
ret
pop
xchg
pop
or
or
mov
loop
mov
xchg
enter
bnd
pop
xor
fldenv
fimull
out
lret
mov
popf
rorb
and
mov
dec
mov
outsl
fldenv
out
test
dec
pop
fcmovnbe
in
insl
add
add
aad
scas
xchg
pop
test
jne
xchg
and
add
and
sub
in
mov
mov
scas
mov
add
into
inc
cmp
fnsave
sarb
xchg
scas
clc
fs
adc
mov
div
ss
push
out
push
gs
rcl
loop
push
mov
outsb
mov
or
clc
add
sbb
cmpsb
fisttpll
lock
test
andl
sbb
bound
pop
ret
jecxz
lock
imul
xchg
orl
das
or
pop
inc
lahf
and
adc
cmp
pop
test
sbb
es
jne
mov
mov
or
fdivr
mov
movsb
fwait
mov
mov
ljmp
icebp
insb
jp
ds
mov
sbb
aaa
cmp
pop
pop
inc
push
js
sbb
cs
idivb
into
arpl
cmp
loop
sahf
mov
cmpsb
xor
push
mov
fwait
rolb
cmc
push
mov
jl
and
aaa
and
leave
add
pusha
imul
clc
jnp
sub
shlb
rclb
mov
fisubl
mov
push
fwait
sbb
fnstcw
inc
subb
sarl
loope
push
xchg
jae
adc
push
bound
loope
mov
in
dec
xor
fsubs
pushf
adc
xchg
rcl
cli
dec
cs
lock
cwtl
shl
or
pop
inc
outsl
inc
inc
cmpsl
mov
push
sub
xor
sbb
lock
xor
pop
dec
pop
adc
sbb
sbb
aad
cmc
push
outsl
das
push
fstpl
outsl
imul
mov
lahf
ljmp
clc
loope
shr
bnd
lret
mov
or
xchg
sub
mov
movsl
in
xor
rorb
out
inc
add
jo
pushf
scas
mov
mov
mov
or
je
shl
push
in
enter
ljmp
lock
inc
ja
mov
xchg
jne
lock
inc
lods
or
testb
das
ds
loope
push
icebp
iret
idiv
sbb
or
mov
xlat
js
movsb
test
pusha
loope
xchg
fisttpl
lret
loope
push
push
dec
cli
cwtl
mov
add
sub
into
push
imul
test
out
xor
mov
stos
scas
xchg
in
mov
stos
test
fnstcw
jmp
xchg
andl
stos
ror
std
inc
inc
addl
mov
mov
test
loope
cmc
pop
xor
jne
stc
test
inc
cmc
or
test
mov
xlat
test
dec
leave
pushl
rcl
and
jne
fisubrl
repnz
jmp
test
aam
aam
cmpsb
lcall
cmp
insl
cli
lds
shll
shll
push
xchg
push
jns
sub
dec
mov
add
fnstcw
adc
push
leave
arpl
subb
lret
add
fwait
repnz
rolb
add
into
mov
in
idivl
sti
dec
lods
pop
aas
inc
dec
xchg
lods
dec
xchg
sbb
sarl
add
xchg
popa
push
jge
stos
andl
adc
mov
dec
inc
jae
adc
cmp
cwtl
push
rcrb
lods
xchg
pop
mov
sbb
or
push
dec
push
std
mov
incb
flds
xorb
xor
stc
inc
stos
inc
cld
push
int
inc
jb
loope
push
mov
stos
sbb
inc
jo
ficompl
push
movl
mov
sub
or
loope
add
mov
push
mov
repnz
pop
mov
mov
xchg
je
dec
call
mov
imul
aad
push
inc
sbb
testl
rorl
sbbb
popa
cli
sbb
in
xchg
and
aaa
pop
jg
add
sbb
bnd
pushf
sub
aas
xchg
mov
setb
push
adc
cmpsl
lds
cmpb
les
mov
ja
jns
adc
mov
sahf
test
mov
jae
xlat
mov
aam
jbe
cmp
ficomps
lods
xchg
pop
leave
sub
nop
daa
in
addl
enter
repz
aam
cmpsb
int3
mov
outsl
cmc
xchg
aam
int3
xor
add
jge
xor
push
shll
dec
sti
push
imul
push
or
xchg
push
inc
out
mov
push
cmpsb
adcl
dec
mov
arpl
push
addb
dec
lods
mov
stc
push
or
ja
push
inc
aaa
inc
in
repnz
aaa
xor
cmp
mov
mov
sbb
fs
mov
jge
movl
mov
popa
stos
jb
add
jg
cmp
pop
cltd
or
mov
repz
pop
xchg
ficomps
ret
movsb
sub
xchg
jns
lds
loope
jns
icebp
adc
into
push
jb
dec
ss
addr16
push
imul
cmpsl
and
dec
jne
fistpl
push
lods
add
cli
mov
bound
adc
testb
js
bnd
xchg
cmpl
int3
filds
ror
mov
je
add
lcall
shl
sbb
lahf
inc
mov
lock
sub
mov
fisubl
je
daa
fistpll
icebp
or
ret
pop
lock
movswl
dec
paddsb
add
je
enter
dec
insl
rcrb
movsl
sub
mov
into
or
push
rolb
pop
xchg
int
in
or
xchg
push
loopne
or
xchg
adc
jnp
push
leave
int
pop
or
inc
mov
pop
inc
aaa
xor
adc
or
adc
sub
clc
das
sbb
add
xchg
fwait
sbb
hlt
nop
sbb
inc
xchg
negl
or
popf
stos
jg
in
sbb
mov
jns
add
mov
movsb
cmpsl
mov
sbb
xor
or
jg
addr16
mov
dec
les
rcrl
subl
das
shll
aas
sbb
std
push
cmp
pop
jae
add
xchg
add
addr16
out
ja
clc
cmc
addr16
test
int3
lahf
jp
dec
daa
add
mov
shl
sbb
xchg
add
mov
push
jnp
test
jle
arpl
or
mov
repz
cmc
shll
add
imul
cli
popa
cli
dec
push
mov
std
js
add
xor
clc
mov
adc
jns
hlt
addr16
adc
mov
ss
sub
dec
fs
das
ret
jb
js
add
fiaddl
mov
pop
push
dec
lahf
push
inc
andb
sbbl
dec
xchg
rcrb
out
and
pop
adc
lret
mov
mov
addl
daa
dec
and
imul
mov
icebp
arpl
cltd
add
movsb
fisubrl
or
incl
mov
and
adc
movsb
mov
pop
pop
add
loope
mov
or
and
sub
jecxz
jno
xor
xchg
and
das
in
xchg
scas
sbb
and
or
or
xchg
test
rcrl
inc
jno
dec
pop
test
push
xlat
imul
add
std
arpl
push
lahf
jecxz
cmp
jnp
cmp
test
sti
or
or
loope
and
sbb
jg
pop
mov
addr16
cmp
mov
mov
incl
dec
in
in
jno
push
pop
pop
and
loop
jle
les
imul
sub
adc
je
popa
pop
loopne
sahf
cli
pop
sbb
inc
jae
mov
and
and
shrb
mov
in
in
xsavec
mov
xor
sti
pop
mov
aas
repnz
das
test
lock
xor
or
mov
bound
add
cmp
sahf
cmpsb
push
add
sub
shl
sub
call
cwtl
pop
dec
push
rcrb
shrb
fstl
push
fdivs
xor
mov
mov
xchg
lods
ljmp
int
jnp
mov
sbb
sti
add
sarl
push
or
insl
repz
dec
xor
cmp
scas
push
and
stos
mov
stos
jmp
mov
fwait
mov
loopne
jns
mov
push
testb
mov
pop
jg
rorb
jge
cwtl
xchg
negb
rorb
iret
mov
int3
or
cmpsb
test
in
inc
clc
cmp
cwtl
inc
jnp
bound
fucom
mov
or
inc
mov
jnp
and
mov
pop
sti
in
leave
xchg
neg
cmp
fstpt
or
adc
add
mov
sub
or
or
imul
adc
popf
and
and
addr16
stc
xchg
les
mov
pop
inc
test
mov
jnp
jp
imul
or
xlat
pop
jle
aam
pop
das
jbe
mov
mov
cmc
sub
jg
pop
push
icebp
js
out
outsl
repnz
mov
fidivrl
shlb
cs
or
lods
in
cmc
mov
or
add
and
les
mov
enter
inc
mov
outsb
xor
lret
lds
mov
pop
icebp
add
pop
fildll
jae
inc
xlat
or
popf
sahf
push
orb
sbb
xlat
loopne
test
pop
in
insl
xlat
xor
push
pop
push
pop
pop
dec
jbe
mov
and
shrl
stos
mov
cs
aad
jle
or
movsb
ret
inc
adc
test
jbe
dec
lret
xor
push
and
scas
and
mov
mov
fidivrl
test
cli
lcall
xor
lea
or
fadds
mov
test
pop
sbb
imul
dec
sbb
outsl
fisubrl
jo
mov
fmull
mov
push
out
xchg
cmove
in
fimuls
inc
pop
fsts
stos
add
cmp
push
idiv
jns
and
int
fldcw
and
add
add
and
aam
popa
into
mov
push
mov
jg
fadds
push
sbb
mov
adc
xchg
jg
adc
aad
pop
nop
mov
jo
call
jg
adc
cmpb
adc
sub
jne
add
mov
xor
sbb
sub
addr16
scas
xchg
add
out
jne
inc
xor
pop
test
scas
loopne,pn
call
pop
fs
xchg
call
insb
lret
mov
sbb
js
fdivr
sbb
popa
pusha
scas
pop
in
sub
aam
adc
cmp
xor
sbb
adc
adc
push
cmp
jno
xchg
pop
cmc
loope
push
inc
cltd
jecxz
jge
das
mov
xchg
push
xchg
pop
pop
lods
push
jnp
xor
int3
xor
mov
sti
pop
push
sub
jbe
mov
scas
bound
fiaddl
lcall
imul
in
inc
sbb
push
and
sub
mov
call
cmc
mov
xor
inc
insl
jae
insl
out
scas
dec
mov
xchg
cmp
mov
sti
fs
or
fsubs
out
stos
or
add
mov
jmp
scas
adc
and
push
sti
xor
mov
xor
negl
lods
jp
leave
mov
or
orb
jne
sub
dec
rcll
add
adc
pop
jo
insl
sti
or
jecxz
insl
sbb
jbe
hlt
call
jb
or
push
rclb
outsl
add
fdivr
mov
in
jp
jbe
mov
dec
test
push
ret
repnz
xchg
inc
jno
rclb
inc
iret
and
out
into
mov
inc
ret
or
inc
inc
adc
jns
mov
daa
mov
sub
pushf
out
mov
sti
ja
imul
sbb
loop
add
jmp
add
or
and
in
adc
jb
jle
inc
sub
dec
movsl
and
pop
xor
and
mov
mov
jmp
sub
sub
xor
or
mov
jecxz
out
js
sub
xchg
sahf
sbb
cs
ret
mov
imul
pop
pop
and
jne
xchg
in
loop
dec
push
cltd
mov
and
lret
and
jmp
repz
lea
test
cmpsb
pop
pop
das
iret
cld
push
fdivs
out
aam
dec
cmp
push
es
xor
and
cmp
mov
ret
mov
inc
dec
pusha
fcmovnbe
mov
mov
xlat
push
lret
ljmp
packsswb
cwtl
shlb
insl
push
aaa
add
js
cmp
mov
cmp
cmp
fistps
xchg
xchg
sub
lret
sub
jne
pushf
mov
fimull
sbb
iret
outsb
data16
sbb
roll
mov
fcomps
sub
cs
mov
popa
fists
push
fwait
repz
lret
push
xchg
and
lcall
inc
cmpsl
xor
mov
repz
mov
dec
mov
addr16
and
sbb
sub
popf
out
xor
icebp
and
inc
inc
fs
adc
cmp
inc
insb
das
cmp
adc
mov
enter
sahf
add
jl
ret
add
push
inc
notl
xlat
and
std
lods
jae
and
pusha
and
push
imul
fwait
and
movb
test
rcrb
xor
mov
sti
add
and
or
in
ljmp
jmp
jne
pop
movsl
push
roll
sub
mov
inc
cmp
mov
cmc
dec
fstl
int3
shll
and
pop
add
dec
test
data16
fisttpll
mov
stc
shrl
xchg
push
and
and
xlat
in
mov
pop
test
sub
pop
pop
test
cld
into
int3
movsl
lds
mov
ljmp
stos
jbe
popf
ret
das
das
adc
lahf
data16
mov
pop
je
std
xchg
scas
ficompl
push
scas
dec
mov
jp
int
push
cltd
adc
cmp
jl
out
aam
xor
or
out
call
lcall
orl
mov
inc
mov
stos
xchg
push
and
outsb
dec
adc
out
inc
bnd
rep
xor
dec
inc
and
jge
mov
mov
cmc
leave
and
outsb
fs
popf
pop
int3
xorb
aad
cs
call
test
pop
ja
mov
movsl
stc
xchg
xchg
jne
insb
and
and
cli
sbb
fldt
insb
arpl
iret
cmpsl
push
daa
mov
dec
enter
fmuls
and
std
xlat
es
mov
mov
jle
jmp
es
es
mov
cmpsl
and
int
jge
adc
rclb
cmpsb
int
lret
mov
lds
sub
jne
lahf
or
mov
gs
cmp
and
pushf
pop
outsb
ds
pop
cmpsl
daa
inc
xor
pop
and
adc
push
outsl
lods
xchg
mov
adc
or
shlb
sbb
sub
and
in
dec
repz
inc
or
cmp
or
push
fdivl
jb
shl
cmpsb
dec
inc
popf
xor
mov
in
sbb
sti
hlt
xchg
sub
js
shlb
std
out
cmp
cmpsl
pop
inc
pop
adc
push
xchg
inc
adc
leave
or
xorl
sub
push
push
dec
pop
jb
lcall
xchg
mov
sub
mov
xchg
movsb
cmp
jns
sbb
ljmp
shlb
ljmp
icebp
push
pop
movsl
aas
fstpt
inc
inc
mov
test
push
fsubs
cmp
jns
stc
jg
lods
jae
adc
inc
pop
outsb
mov
sub
adc
mov
mov
lock
cmpsl
pop
push
or
aaa
lret
fcmovb
mov
mov
xchg
push
leave
inc
push
adc
sbb
fwait
mov
jo
call
push
inc
pop
xor
dec
mov
arpl
into
nop
pop
fnstsw
imul
aas
pop
aam
adc
in
xor
sub
icebp
xor
inc
xor
sarb
inc
dec
out
cltd
cld
push
jnp
cmp
dec
add
fistpl
dec
dec
jbe,pn
add
or
add
adc
mov
cmp
pop
ret
lcall
jmp
ret
dec
jg
inc
mov
or
ret
jb
xchg
addb
add
lods
loop
cli
clc
xor
fidivrl
xchg
pop
push
pop
adcl
aas
cmp
clc
fsts
aad
or
ret
imul
jo
sub
xchg
push
fcoms
dec
sub
xor
and
jecxz
int
cli
arpl
cmp
pop
out
sub
aad
popa
mov
pop
pop
xor
mov
int
dec
adc
lret
push
sbb
lock
fists
aaa
aas
stc
pushf
mov
mov
inc
sbb
jno
sbb
andb
jne
inc
fwait
mov
sbb
mov
insb
out
stos
fidivrs
push
mov
jnp
out
cmp
sub
in
je
les
into
mov
and
addr16
adc
sahf
ficomps
mov
idivl
mov
ret
xchg
jnp
in
xchg
dec
paddb
mov
outsl
std
mov
mov
fsubs
push
pop
pusha
ss
jo
data16
rcrb
lods
or
loope
in
and
xlat
loop
push
das
mov
das
rolb
iret
mov
ficompl
jge
sub
and
enter
sarl
ret
sti
dec
mov
dec
push
incb
mov
mov
mov
or
pop
sbb
mov
xor
xlat
aas
fsubrs
repnz
sub
and
dec
loopne
push
pop
ljmp
mov
mov
out
fcompl
xchg
enter
mov
dec
dec
das
iret
jmp
mov
inc
cmp
or
lret
repz
pop
add
xchg
enter
mov
or
movsb
cmp
imul
cmp
jnp
icebp
adc
test
int3
loop
xchg
stos
jp
popa
mov
mul
outsb
push
sahf
subl
out
addb
mov
out
stos
adc
cli
xchg
sbb
jnp
sub
iret
xchg
lods
dec
add
out
jecxz
mov
bswap
je
fprem1
jmpw
loope
jecxz
jno
jae
in
fwait
inc
mov
mov
loope
and
mov
and
popl
jge
jo
adc
lret
std
out
mov
lods
out
mov
imul
movsb
pop
das
popf
mov
inc
sbb
addr16
xor
into
lds
jl
add
fistl
pusha
fldt
test
push
mov
jecxz
mov
jno
dec
mov
mov
jle
mov
lods
add
mov
mov
or
dec
shrb
ljmp
cmp
repnz
push
bound
gs
sbb
xchg
cmp
in
push
push
jecxz
add
fmul
xchg
fsubs
int3
push
int
idivb
cmpsl
dec
mov
lea
xchg
and
mov
cld
add
xchg
or
sbb
test
hlt
ss
mov
cmc
ret
stos
sbb
push
jle
loope
or
or
and
pop
mov
and
mov
bound
mov
ja
mov
repz
gs
inc
push
loopne
mov
cmp
mov
xchg
mov
or
pop
je
scas
arpl
insl
xor
lock
jbe
ss
fwait
shrl
enter
fwait
shrl
cmpsl
mov
sbb
adc
mov
stos
jge
les
shll
cmp
test
subl
insb
inc
inc
popf
aaa
xlat
int
ljmp
daa
xchg
fcmovnbe
fldenv
aad
ret
lret
and
mov
jne
mov
rep
loop
aas
push
imul
jns
out
push
and
add
repnz
mov
inc
lock
roll
xlat
loopne
add
sbb
mov
mov
or
inc
xchg
adc
cmpsb
sub
nop
dec
pop
jmp
popa
pop
cmp
in
fwait
pusha
clc
adc
fbld
inc
mov
cmpsb
mov
outsb
xchg
xor
jne
sbb
cmp
aad
subl
and
add
pop
mov
mov
aaa
mov
pop
orl
or
mov
addr16
jb
ficoml
add
jmp
std
cmp
and
add
je
clc
push
setb
insb
xor
mov
fmull
adc
pop
dec
subb
leave
pop
lds
xchg
scas
test
push
push
adc
inc
push
bnd
or
or
outsb
mov
mov
jae
and
aam
mov
gs
pop
shll
and
and
mov
cmp
xlat
cmp
mov
push
stos
xchg
sub
lret
test
and
sub
mov
sub
add
jmp
mov
sbb
and
push
pop
pop
push
es
inc
push
xor
mov
fisttpl
jmp
mov
into
mov
pop
psllw
cmpsb
jo
icebp
subl
repnz
xchg
shrb
enter
imul
bound
jmp
jge
shlb
out
les
xchg
cmpsl
pushf
dec
mov
jnp
aaa
popa
pop
adc
pushf
inc
hlt
scas
or
sub
mov
inc
jle
repnz
pop
and
jae
pop
stos
xchg
cmp
add
and
shlb
xchg
mov
push
out
int3
or
cmp
pop
test
mov
dec
stc
in
push
cmp
flds
sbb
xor
fmulp
fisttpl
mov
push
pop
test
decb
leave
sbb
popf
mov
lret
jmp
popa
dec
jecxz
fdivl
in
xchg
mov
out
fldt
xchg
cmp
cmp
cmpl
jl
mov
push
pop
aaa
lret
adc
xlat
mov
ja
call
mov
xchg
enter
sahf
aaa
xchg
xor
aas
push
inc
add
xlat
adc
imul
sub
lcall
test
push
int3
mov
adc
daa
movsl
sbb
add
xchg
mov
push
dec
or
push
cmpb
pushf
cmp
cld
push
jne
stos
dec
in
cs
jb
cmp
cmp
fucompp
mov
cmc
xchg
pop
sub
arpl
and
out
jnp
or
adc
loopne
addb
push
cmp
add
mov
mov
imul
fs
pop
or
jns
rcr
add
inc
sub
push
xor
sahf
sbbb
push
in
hlt
lods
rorb
mov
fstl
pop
imul
test
scas
sbb
loope
xchg
es
dec
mov
outsb
mov
mov
add
pop
pop
imul
sub
cmp
adc
xor
mov
inc
leave
jbe
xchg
fistps
and
loopne
pop
fwait
add
push
mov
sbb
hlt
test
jge
aam
jnp
flds
shrb
jg
mov
jb
sub
jge
jo
aas
or
mov
aam
jecxz
arpl
cs
dec
js
adc
mov
jmp
dec
dec
mov
and
imul
xlat
rcrb
stos
jb
dec
xchg
push
fsts
cld
movsb
jle
cwtl
imulb
outsb
clc
xchg
sti
insb
sub
xor
dec
cmpb
jo
sbbb
mov
aam
push
insl
out
mov
pop
push
shll
xor
jmp
rorl
leave
sbbb
and
mov
sub
pop
adc
push
stos
xor
mov
roll
cmp
int
mov
lahf
mov
fs
sbb
es
dec
ret
mov
negb
ja
jmp
push
cltd
fs
xor
dec
pop
outsw
push
mov
ror
psrad
lds
test
sbb
sbb
movsl
or
js
hlt
mov
and
mov
xor
xchg
sbb
sbb
stos
or
outsl
fsts
jmp
pop
lods
xchg
das
test
test
popf
scas
js
sahf
andb
aas
fldcw
adc
mov
inc
lret
and
sub
jle
mov
sbb
cmpl
xchg
inc
stc
xchg
push
and
jmp
leave
mov
std
mov
rcrb
xchg
xchg
inc
lret
jo
adc
out
lods
jo
out
mov
or
aam
xor
cmpb
push
add
lods
and
sbb
orl
sbb
push
out
mov
and
and
loop
sbb
test
gs
xlat
jo
pop
pop
xor
popf
xchg
iret
addb
sub
testl
pop
shrb
mov
mov
loop
mov
cli
sti
add
stos
xlat
jp
push
xor
mov
hlt
insb
and
std
lea
sti
push
aad
mov
orl
dec
or
and
xor
fbstp
popa
mov
cwtl
inc
mov
sbb
cltd
stc
push
in
xchg
mov
adc
add
adc
and
cmpsl
nop
sub
mov
sbb
je
je
stos
outsl
fldenv
sub
addb
shll
xor
xor
shlb
ror
out
mov
mov
jle
lcall
or
inc
cmpsl
xchg
adc
push
and
adc
mov
loopne
adc
lds
imul
aaa
cwtl
sbb
loope
sbb
jae
jle
fldcw
inc
popa
mov
mov
fdiv
in
nop
imul
addr16
or
xchg
xchg
lods
in
test
loope
sahf
dec
xchg
mov
xlat
out
dec
outsb
mov
or
std
stos
xor
call
stc
insl
jecxz
xor
stc
adc
mov
adc
dec
sbb
es
pushf
jo
cli
jg
mov
outsl
sub
add
int3
xchg
cmp
dec
out
push
imul
iret
push
dec
outsb
add
jge
sub
dec
lret
stos
pop
add
jge
repz
jmp
loope
xchg
testb
sub
test
and
adc
mull
popf
jecxz
rol
or
popa
push
and
xor
imul
in
dec
pop
mov
rcr
push
cmpsl
dec
in
mov
imul
sti
data16
sub
pusha
jnp
test
pop
mov
enter
fistpl
dec
jbe
gs
fxch
addr16
adc
orl
xorl
ds
js
cmp
les
insl
fcoml
push
jnp
xchg
push
cmp
pop
fldl
and
jle
fstl
test
mov
jl
jmp
popf
rcl
mov
xor
test
test
div
lods
mov
out
sub
ficomps
cmpsl
pop
leave
xchg
aas
js
test
clc
es
push
dec
pop
int
mov
sub
ja
pop
lods
in
dec
dec
add
adc
call
in
xor
push
sub
test
mov
iret
xchg
pop
stos
fsubp
sbb
movsb
cmpsl
push
jmp
fs
in
xchg
jb
stc
push
fidivrl
push
cmp
sub
pop
cmp
dec
ds
fcmovbe
rorl
loop
cmc
xor
xor
insl
push
dec
adc
and
pop
jp
xor
fcompl
xchg
cltd
daa
jp
movsb
in
pushl
ja
pop
push
cwtl
in
pop
dec
cs
sub
aad
and
icebp
dec
lock
jmp
sahf
hlt
mov
incb
leave
jl
icebp
inc
or
sti
aas
and
mov
xchg
cld
mov
pushf
ret
xor
and
rorl
jge
test
sbb
fdivr
adc
push
test
fnstenv
ret
sbb
loop
js
push
jge,pt
icebp
dec
enter
pop
adc
stos
push
fadd
dec
fdiv
push
mov
enter
fldl
jmp
movsb
enter
and
push
mov
fs
fsubrs
loopne
lahf
fdivs
xor
sti
and
imul
sti
fbstp
and
sub
add
xor
mov
andb
and
jbe
out
xchg
jno
std
xchg
aaa
lret
in
sahf
xor
mov
or
scas
sbb
into
lret
mov
dec
push
pop
pop
mov
hlt
pop
push
gs
add
xchg
pop
sub
jge
pushw
or
mov
aad
push
add
or
cmpl
dec
jmp
push
rclb
mov
lret
pop
cmp
cld
mov
js
je
xor
rcll
xchg
pop
rcl
fs
adc
mov
ja
scas
shr
insl
bound
insb
enter
jbe
cmp
dec
add
cmp
pop
jg
call
xor
outsb
fsubr
pushf
sbb
shll
inc
mov
push
cmpsb
std
xor
xchg
jbe
aad
push
xchg
pop
loope
mov
lea
outsl
or
ficompl
jl
rcll
mov
stos
add
xchg
sbb
arpl
add
cmp
js
out
or
xchg
ds
add
in
mov
daa
repz
das
shrb
xor
paddsw
inc
inc
pop
call
or
ret
scas
iret
push
scas
mov
test
sub
adc
add
sbb
arpl
in
daa
aas
and
xchg
out
jecxz
adc
cli
cmc
mov
xor
jmp
test
mov
cmpsl
iret
loope
mov
cli
mov
pop
ret
mov
pop
into
inc
add
dec
popa
mov
stos
fmull
in
mov
std
pushf
repnz
push
mov
inc
iret
insb
xchg
gs
and
pushf
ss
add
jmp
movsl
xchg
xlat
cld
fwait
loopne
adc
mov
icebp
xchg
mov
jnp
pop
push
aam
sbb
push
pop
xchg
sbb
cmp
push
xchg
push
shll
divb
push
fildll
xor
std
add
js
cmp
jne
inc
jo
sbb
adc
add
test
rorb
adc
addl
notl
shll
rcrb
les
and
adc
xchg
clc
sub
xlat
or
vmovq
cld
lea
and
add
mov
mov
sbb
adc
add
sub
clc
sub
pop
gs
jo
aam
lret
adc
jo
sahf
orl
imul
pop
aas
add
aas
inc
lcall
dec
fbld
adc
xchg
mov
dec
rolb
jmp
lret
test
jb
inc
add
dec
outsb
mov
dec
call
sub
inc
inc
mov
cld
hlt
cmpl
xor
cmp
fldenv
jl
xor
adc
ss
or
add
cmp
out
jmp
call
scas
jb,pn
and
xchg
fdivl
int3
shlb
xor
lock
les
bound
pop
ja
push
pop
scas
xor
insb
dec
dec
idiv
inc
push
xchg
add
mov
out
lds
jne
and
stos
fcoms
xor
fs
fsubrl
pusha
cwtl
fs
mov
stc
cmp
push
mov
aas
and
insb
pop
push
jecxz
sub
jmp
pop
push
jg
cmc
add
mov
push
lock
push
loopne
add
in
jg
cmp
orb
in
out
inc
aaa
je
xchg
sub
cmpsb
fnsave
jb
xchg
shlb
dec
in
mov
mov
out
and
test
xchg
aad
fisubrs
push
xor
xlat
push
cmp
inc
jb
or
inc
sbb
cmp
sub
sub
sahf
pop
sbb
sbb
xchg
cmp
frstor
shlb
push
mov
adc
mov
jge
sub
loop
push
xlat
jp
daa
push
xor
pop
adc
sbb
add
jae
jne
and
test
and
push
adc
mov
sub
int
cmp
sbb
int
or
mov
nop
lret
add
movsb
movsb
hlt
pop
imul
out
std
aam
adc
mov
dec
jmp
test
sub
pop
pop
popl
xchg
inc
inc
lahf
fwait
sbb
mov
jbe
pop
jno
aad
call
jns
cmp
adc
out
imul
jns
js
je
and
out
into
icebp
adc
pop
sbb
push
addr16
push
push
int
xchg
pop
arpl
loop
aad
mov
ss
pop
jg
bound
scas
mov
imul
xchg
pop
sbb
mov
adc
sub
sbb
cmp
jge
aad
pop
push
sbb
jno
scas
xchg
iret
addr16
or
sbb
or
scas
push
aam
mov
into
aas
cs
inc
push
inc
insl
inc
jb
test
mov
push
inc
and
inc
xlat
xor
adc
pop
nop
pop
test
xchg
add
fdiv
inc
mov
jbe
xor
cmp
inc
das
inc
popf
in
or
inc
fcomi
xor
mov
mov
in
and
into
shlb
xchg
aam
pop
scas
or
mov
mov
push
pop
into
sbb
call
pop
addr16
pop
pop
mov
mov
inc
fsubs
and
addr16
mov
lahf
sbb
lcall
adc
ret
aam
popa
jo
lret
popf
int3
pop
mov
sbb
popf
mov
push
jmp
in
and
xor
aad
hlt
mov
mov
pusha
push
shll
xor
adc
mov
ss
je
jecxz
fiaddl
add
outsl
xchg
gs
cmp
mov
inc
decl
mov
and
adc
add
pop
into
into
add
loop
stc
mov
dec
repnz
inc
pop
jecxz
push
pop
xor
sbb
pop
scas
xor
cmp
int3
add
mov
xchg
ljmp
rcl
hlt
stc
lods
mov
cld
mov
mov
nop
mov
out
ljmp
add
adc
inc
loopne
mov
mov
inc
loop
popa
popf
add
cmpsl
repz
pop
testl
adc
imul
movsb
inc
push
mov
inc
loope
mull
mov
rcll
fwait
invd
pop
fmulp
sbb
add
mov
insb
loope
push
add
lcall
sarb
fidivrs
insl
or
call
int
gs
and
add
dec
cltd
mov
adc
jl
mov
test
push
jmp
jne
mov
icebp
int
sub
imul
mov
cmpsb
mov
std
push
and
clc
xor
pushf
outsb
mov
loope
push
fcomip
sbb
sbb
add
ja
frstor
inc
xchg
jnp
iret
outsl
xor
or
mov
in
sub
add
movsl
shll
pop
add
test
shrb
jp
ljmp
push
dec
cvttps2pi
ss
push
pop
xor
xor
jno
add
mov
js
sbb
cmp
clc
sbb
jg
push
clc
loop
jb
inc
or
push
ss
sub
cwtl
mull
aad
out
cmp
ss
add
ljmp
adc
test
inc
pop
movsb
sub
push
xchg
and
dec
iret
mov
popa
xchg
popa
nop
in
or
in
scas
push
aad
sub
repz
cmpb
adc
stos
into
inc
or
scas
cld
xchg
test
sub
push
ljmp
fadds
cmp
jb
int
and
xchg
mov
xor
imul
sub
rol
sub
neg
sbb
add
sbb
lahf
add
jmp
or
popw
in
filds
and
fstp
out
sbb
lahf
push
cmp
cmp
mov
imul
rcrb
cmpsl
in
ret
ficoml
xchg
mov
inc
xchg
or
movlps
mov
or
movsb
xor
jo
mov
rcrl
sub
pop
aas
mov
xchg
sub
jae
stos
fwait
xchg
scas
cltd
movsl
cli
sub
add
push
xlat
mov
mov
loop
jp
mov
dec
out
push
or
mov
idivl
ja
int
inc
data16
fbld
cmpsb
xchg
jns
icebp
xchg
jbe
leave
int3
out
fnsave
mov
pop
outsl
sub
mov
cmp
sub
ds
adc
add
fcmovbe
mov
cmp
icebp
mov
sub
cwtl
cmc
mov
add
loop
lret
out
xchg
repnz
or
fisttps
ds
sbb
lods
push
jp
push
repz
movsb
pop
lock
jecxz
out
mov
pop
xchg
test
mov
jb
movsl
fimull
pop
rolb
jo
xchg
jecxz
daa
mov
mov
add
pop
and
xor
sbb
and
mov
aaa
shrb
addr16
or
dec
xchg
jmp
push
imul
cltd
jge
mov
adc
stos
in
inc
daa
in
cmc
fdivs
out
sbb
mov
sbb
andb
jno
push
inc
mov
push
cmpsb
mov
cltd
dec
jge
addr16
je
fsubrs
pop
jb
repz
ja
arpl
int
stos
fistl
cltd
push
and
mov
jbe
push
arpl
adc
mov
lods
mov
dec
in
popa
and
mov
xor
cltd
fwait
stos
dec
and
aas
add
and
sub
jne
pop
pop
testl
sbb
sbb
cmp
test
aas
sbb
mov
loope
out
das
std
xchg
add
pop
das
loopne
nop
inc
push
mov
bnd
cld
int
adc
mov
jb
mov
sbbl
insl
mov
test
adc
test
inc
aas
push
sbb
or
ss
push
mov
push
aam
out
imul
daa
adc
jo,pn
jp
jle
je
or
rorb
wbinvd
cmpsb
imul
jecxz
push
clc
push
dec
pop
out
into
fstpt
add
stos
xor
mov
out
in
sub
jge
and
loop
jle
xorb
sahf
pop
xchg
pop
inc
inc
adc
sub
ret
jbe
fadds
mov
imul
mov
push
mov
in
jmp
loop
sbb
repz
outsl
sbb
aad
divl
or
shr
jne
sahf
sarb
mov
jle
or
pop
aaa
pusha
ds
lds
mov
hlt
cmp
fistl
mov
in
xor
jmp
pop
inc
inc
fisubrl
push
int
pop
mov
jns
sbb
repnz
in
aad
in
or
in
repz
aam
es
mov
sub
repz
loopne
push
cli
dec
arpl
ret
bound
mov
cmp
add
pop
cmp
and
mov
mov
rcll
fists
mov
mov
or
push
mov
mov
sbb
out
lcall
push
fnsave
pushl
sub
aad
testb
jp
cmpsb
stos
rcr
rcll
imul
repz
or
adc
xchg
jle
dec
fs
push
or
repnz
xorb
or
xor
jmp
repz
dec
imul
push
add
fdivs
jle
push
popf
sbb
aaa
lret
insb
jg
insb
jp
jns
js
out
pusha
mov
enter
mov
inc
test
jge
and
mov
mov
xor
iret
push
dec
mov
xor
lods
mov
test
and
xor
xchg
aas
movsl
cmp
pop
adc
addl
jl
adc
pusha
push
push
jp
xor
mov
fistpll
test
add
lock
xchg
pop
mov
push
icebp
cmpsl
pushf
lds
push
lds
imul
sub
fnstcw
fs
mov
ret
mov
jno
loopne
mov
sbb
aaa
movsb
test
icebp
lret
jmp
iret
pusha
cld
jmp
orl
cmpsb
xlat
hlt
loop
rcrb
or
test
dec
cs
daa
test
adc
mov
push
bound
push
hlt
xor
jo
orl
xchg
push
in
pop
xchg
hlt
or
int3
js
ficoms
stos
fidivrl
lret
loop
sub
pop
movsl
fcomps
sub
insl
and
mov
cmp
sbb
rcl
inc
std
rolb
jg
rclb
stos
add
dec
jg
ja
push
mov
jne
repnz
pop
je
lods
and
push
shrb
mov
cmp
xchg
jecxz
ret
mov
in
xchg
sbb
fidivl
xchg
adc
xor
mov
stc
cmp
into
xchg
fwait
cli
sbb
inc
mov
cltd
jecxz
xor
test
shll
mov
fstpt
inc
pop
sub
push
xor
pop
aaa
les
push
fwait
test
push
mov
les
inc
sbb
fwait
ret
stos
cltd
push
arpl
mov
movsb
sub
stos
cmp
andb
jle
dec
pop
in
inc
adcl
or
pop
and
enter
cld
or
push
jmp
push
or
or
mov
xchg
pop
pop
cli
lcall
and
nop
pop
inc
mov
jmp
pushf
into
pop
fbstp
mov
mov
hlt
push
cmp
mov
mov
iret
imul
icebp
data16
xchg
or
je
test
das
insl
push
mov
int3
loopne
rclb
or
add
xchg
ss
cmp
jl
push
cmc
mov
inc
push
push
arpl
push
add
inc
in
adc
rcrb
xchg
cwtl
push
rolb
push
pminsw
or
call
ljmp
mov
mov
imul
push
or
clc
inc
mov
or
testl
add
adc
sbb
sahf
dec
loop
mov
add
jno
subb
or
inc
jne
xchg
andb
cmp
xor
test
faddp
or
adc
sbb
movsb
dec
mov
cmp
push
fcmovu
rcrb
fidivrs
inc
inc
mov
arpl
mov
lods
es
push
and
enter
xchg
stos
sbb
out
mov
test
loop
sbb
hlt
push
jle
scas
push
mov
addr16
fimull
imul
in
mov
into
scas
jp
scas
pop
inc
arpl
jae
xchg
addb
jecxz
imull
clc
movsl
notl
fisttpl
xchg
cmc
adc
ds
xchg
and
in
pushf
loopne
aad
sbb
dec
cmp
popa
add
nop
stos
xchg
xor
repnz
aad
test
jmp
jge
inc
aaa
fs
jp
push
pop
pop
sbb
into
push
jl
and
dec
in
jo
jbe
adc
cmp
adc
push
xchg
inc
push
mov
js
mov
jb
cmp
icebp
das
push
and
inc
xchg
pop
in
inc
jnp
stc
imul
aam
test
sbbl
rolb
fsubrl
xchg
cmpsb
insl
add
xchg
cmp
sub
shll
push
ds
mov
repnz
outsb
dec
sub
add
xchg
jo
loop
dec
push
pop
mov
jmp
jo
insb
mov
gs
mov
xorb
nop
loope
xchg
xchg
es
insl
movhps
ljmp
sbbb
mov
sysexit
add
jnp,pn
and
imul
adc
lret
jnp
mov
push
sbb
jmp
fsubrl
jns
loope
jbe
inc
push
cmp
jg
jo
adc
push
sbb
loop
testl
sbb
push
jb
stos
pop
fcomip
jge
dec
push
sbbl
or
push
xor
sbb
sti
jl
mov
xchg
mov
jnp
into
int3
or
fwait
icebp
sbb
fstps
lods
loop
add
rol
or
xchg
or
pop
movsl
movsl
in
add
xchg
dec
add
xchg
je
and
pop
mov
inc
pop
pop
jl
mov
push
mov
gs
insb
mov
and
stos
mov
or
and
mov
dec
xor
dec
push
push
sub
xor
test
adc
mov
jo
lcall
imull
orb
scas
adcl
jecxz
or
mov
enter
jnp
mov
idivb
cmp
stos
jmp
sti
fstl
sti
or
and
sti
jbe
xchg
push
js
imul
loopne
repz
loop
xorl
fwait
cld
mov
inc
xchg
dec
dec
sub
fsubs
in
mov
test
sbb
movsb
out
je
and
outsl
add
adc
lret
pop
mov
scas
sbb
sbb
cmc
into
pop
std
push
jne
movsb
sbb
insb
stos
loop
imul
mov
nop
cli
cld
xchg
cs
cmp
sbb
out
jge
imul
cltd
push
jno
les
push
scas
out
push
outsl
xchg
popf
test
sub
scas
icebp
sub
aam
fwait
movsl
mov
ret
sbb
loop
cmp
test
outsl
enter
in
sub
pop
fbld
mov
fmuls
xor
jmp
cld
mov
xor
nop
push
pop
xor
and
loope
cwtl
mov
jne
jae
daa
jge
mov
clc
stos
lret
addb
xor
int3
jns
add
push
sub
xor
inc
test
sub
fidivrl
push
mov
jecxz
lock
scas
ret
jae
gs
cld
lcall
push
pop
das
in
push
xchg
mov
mov
sahf
movsl
jecxz
vmptrld
sbb
pop
mov
adc
test
push
push
hlt
sbb
mov
imul
dec
xor
mov
das
mov
mov
mov
and
pop
push
dec
mov
cmp
jp
fdivrs
pop
jae
outsb
test
leave
xchg
in
pop
in
mov
aam
xchg
aas
lahf
sbbb
lds
les
dec
mov
and
lret
test
gs
mov
add
in
xchg
dec
jo
mov
ss
adc
pop
jnp
and
in
lds
gs
push
mov
add
inc
sub
mov
lret
jae
shrl
mov
dec
add
add
and
lock
out
sub
inc
jae
pop
shlb
pop
shr
sbb
rcl
pushf
movsl
push
js
push
dec
iret
jl
arpl
js
ja
mov
addr16
mov
cs
sbb
sarb
popf
shll
sub
xor
ret
xor
and
mov
fnstsw
jmp
lds
outsb
pop
push
pop
lock
xchg
cmpsb
test
and
mov
out
dec
push
xchg
push
fs
pop
cmpsl
in
std
jmp
cld
pop
aam
mov
aaa
fwait
or
cltd
push
inc
push
push
lret
arpl
add
adc
inc
add
adc
loop
or
repz
push
insb
in
add
cmpsb
inc
xchg
aam
mov
lret
in
and
outsb
cmpsl
jmp
xor
dec
out
dec
loopne
jl
ds
fnstenv
mov
mov
xor
xchg
fmuls
jg
pushf
mov
negb
fcomps
xor
dec
dec
jne
ret
cltd
adc
sahf
data16
inc
stos
mov
mov
cli
jne
adc
or
mov
xchg
push
mov
lds
mov
jns
stos
jmp
cltd
adc
sub
inc
enter
push
dec
fistpl
je
push
xchg
sbb
lret
xor
xchg
pop
hlt
push
adc
data16
jmp
or
sar
daa
cmp
mov
outsl
sub
add
lcall
inc
nop
push
loop
loopne
xor
add
cld
jae
lret
shll
sbb
xlat
mov
jmp
xor
push
sbb
lcall
imul
mov
repnz
icebp
lock
sbb
enter
push
inc
cltd
or
xor
mov
js
lea
pop
lret
jnp
adc
jle
lahf
or
test
mov
scas
aam
loop
fbld
or
stos
xor
lock
int3
imull
push
or
rolb
in
xor
fiadds
lret
aaa
mov
pop
ja
dec
mov
mov
xchg
adc
xor
ret
js
and
fldcw
sbb
pop
fwait
dec
dec
adc
out
loope
or
nop
in
xor
subb
fldl
inc
jmp
mov
xchg
xchg
cmp
jno
int
aas
clc
sahf
int
mov
pop
xchg
pop
aas
and
pushf
aad
clc
xor
icebp
mov
mul
cmp
push
enter
adc
fmull
iret
mov
push
outsb
mov
or
adc
jg
mov
addr16
lods
nop
jbe
aad
rclb
push
jns
shll
push
or
mov
mov
and
push
int3
cmc
xchg
mov
in
rcrl
insl
lea
adc
stos
ja
push
cli
xor
dec
enter
cli
leave
add
adc
sbb
mov
imul
cltd
mov
mov
into
fsubl
pop
xor
inc
test
adcl
jg
repnz
pop
mov
inc
xchg
out
aaa
inc
sub
ja
arpl
ret
dec
std
xchg
mov
movb
pop
xchg
inc
addr16
jg
dec
push
fistps
lcall
and
xchg
scas
jae
xchg
sahf
ret
ja
inc
sbb
adc
jnp
sub
sbb
cmp
sbb
mov
ljmp
loopnew
sbb
dec
sub
push
mov
lret
inc
shrl
and
cmp
ret
enter
sahf
test
mov
andb
cli
inc
mov
push
fwait
popa
add
mov
jns
cmp
xlat
out
dec
dec
push
out
inc
dec
cmp
pop
sub
and
into
mov
mov
dec
add
je
mov
out
push
pop
pushf
imul
popa
xor
add
js
scas
popl
pushf
fdivr
add
enter
xor
andl
es
sbb
fistpl
repnz
push
andl
fadd
cmpsb
dec
idivl
in
mov
int
mov
mov
fbstp
nop
js
popl
inc
hlt
clc
xorl
cmp
loopne
or
ror
sti
and
and
enter
jno
pop
xchg
or
jae
jnp
int
mov
rclb
mov
sub
mov
or
movl
jo
cltd
movb
popf
and
std
push
xor
cpuid
or
xchg
sbb
clc
lods
into
jge
test
sub
or
inc
insb
xchg
and
cld
test
gs
push
mov
and
pop
add
or
inc
mov
std
popa
bound
in
aam
lods
fidivrs
mov
jae
dec
sbb
int
cmp
xor
mov
lahf
das
mov
addr16
test
shrl
pop
push
les
sub
cld
and
jmp
sub
fldt
add
or
mov
sub
mov
les
test
std
int3
mov
mov
and
jae
in
mov
ficompl
mov
push
stc
lret
popf
cmc
out
sarl
out
push
jne
xchg
je
mov
nop
pop
mov
dec
pop
inc
add
std
xor
sub
cmp
sub
lret
adc
movsb
or
pusha
in
and
jbe
push
cmp
push
adc
in
lcall
movsb
imul
inc
outsl
mov
dec
mov
xor
jmp
mov
hlt
or
es
mov
mov
cmp
mov
fisttps
add
adc
mov
int3
push
stos
and
dec
sub
aam
int3
aam
nop
inc
scas
sub
mov
push
pop
adc
in
push
dec
jno
xchg
add
or
cmpb
pop
test
xchg
inc
dec
fmull
push
pop
inc
cmc
imul
repz
ficomps
dec
cmpsl
jmp
pop
dec
stos
js
push
pop
pusha
arpl
pop
mov
icebp
das
dec
in
shlb
lret
mov
ret
jecxz
xchg
dec
mov
add
popa
shrb
bound
add
or
stos
shrl
dec
push
xchg
shl
mov
sub
outsb
jmp
out
adc
cli
inc
rcl
je
data16
repnz
cmp
lea
fstl
mov
int
dec
sbb
out
gs
div
ja
in
mov
insl
push
inc
dec
nop
std
rorb
enter
pusha
mov
rcl
xchg
cmp
lock
fistps
bnd
mov
sbb
push
stos
dec
xor
rcll
scas
lret
push
std
and
into
scas
dec
mov
cmp
pusha
lods
ret
jmp
or
mov
fisttpl
pusha
dec
dec
subl
mov
mov
cmc
ret
xor
imul
or
pop
int
ret
add
hlt
movl
stos
test
loop
mov
repnz
push
ret
mull
and
sbb
loope
fdivl
xor
fmul
repnz
sub
dec
pop
push
sti
mov
rcr
into
jb
sub
iret
clc
cmpsl
and
push
sub
ret
clc
lds
xchg
shll
jne
mov
test
push
fsave
or
inc
cli
inc
fstpt
push
sarl
test
in
cmp
jb
out
leave
mov
jp
cli
and
or
xchg
outsb
pop
sub
dec
push
sbb
lea
nop
in
cmp
lock
pop
ret
mov
nop
add
mov
adc
inc
jns
subl
push
dec
dec
add
nop
sub
stc
leave
lock
out
cmc
jne
das
push
mov
adc
fnstcw
pop
stos
inc
mov
push
ss
lret
and
inc
lds
xchg
ret
js
cmpsb
push
jmp
mov
movlhps
pop
lods
and
rcll
cld
or
test
cmp
fucomi
sub
xlat
sbb
xchg
scas
pop
test
int3
loop
dec
push
mov
sub
push
mov
xchg
jle
jmp
negl
cmp
scas
inc
or
dec
test
cmp
mov
dec
stos
add
imul
call
fcmovbe
dec
push
movsl
stc
add
mov
xor
call
or
fldl
adc
xchg
lock
mov
adc
jno
pop
pop
ja
shll
dec
xor
cltd
cmp
arpl
scas
cmp
ficoms
pop
or
fisubs
mov
das
int3
icebp
sub
mov
jae
subb
std
ficoms
push
fadd
pop
fwait
lret
push
jnp,pt
fs
push
cwtl
xchg
mov
testb
hlt
in
inc
xchg
sub
imul
out
dec
leave
cmp
ljmp
rolb
int
stos
mov
push
lret
jne
push
pop
loop
les
popl
lock
je
arpl
jbe
hlt
inc
mov
imul
xchg
popf
jle
cmp
mov
test
ret
gs
addr16
aas
add
adc
loope
jne
pop
inc
dec
push
fiaddl
ret
stc
test
outsb
push
jecxz
mov
pop
push
mov
or
int3
test
dec
in
or
mov
stos
push
cmp
dec
cmp
shrb
pop
mov
mov
push
data16
inc
adc
ljmp
cli
adc
mov
and
add
lock
scas
inc
and
add
jae
stos
xor
cli
iret
insl
push
sti
in
mov
decl
aas
and
les
mov
adc
inc
mov
sub
or
push
shlb
inc
jb
fstpl
pop
loopne
jno
idiv
fldcw
pop
push
lret
and
jnp
daa
ficompl
mov
dec
out
cmp
ret
or
aam
mov
jle
add
clc
fwait
cld
sub
data16
rorb
mov
dec
mov
inc
pusha
push
mov
push
clc
sti
mov
lock
push
cli
mov
aam
shll
orb
inc
lret
cli
cmpsl
dec
mov
xor
sbb
pop
cld
fsubrl
xor
imul
orb
jmp
sub
pop
xor
das
inc
in
jbe
jbe
rolb
int
movsl
test
and
lds
xor
push
and
shlb
xchg
xor
sti
movb
push
inc
notl
pop
mov
and
out
xchg
jecxz
jb
movsl
rcll
sti
inc
stc
call
rorb
xchg
push
inc
pushf
sbb
cli
xor
pop
jp
pop
pusha
inc
pop
dec
in
jg
or
out
push
cmpl
sbb
test
jne
push
fmuls
int
jno
and
loop
in
add
inc
xchg
lods
pop
cltd
adc
lahf
adc
and
repnz
jecxz
xor
dec
stos
jl
mull
inc
jecxz
fcmovbe
shrb
mov
cmp
cmp
test
push
ficomps
add
rcrb
testb
pop
xchg
xlat
test
loop
xchg
push
fisttps
cmpl
push
daa
jno
icebp
out
movsl
adc
iret
js
and
sub
adc
ficompl
inc
cmp
ror
or
adc
pcmpeqw
cmp
and
stc
sti
popa
adc
adc
outsb
mov
das
es
ror
aaa
mov
inc
cltd
sbb
mov
cmp
jne
push
fldl2t
movsl
mov
mov
inc
jo
dec
push
mov
inc
pop
clc
pop
xor
cmc
mov
xor
sub
dec
adc
mov
repnz
js
xchg
ja
cmpsb
sbb
icebp
gs
lret
int
xchg
lods
or
sahf
int3
mov
movsb
mov
fs
and
push
cmp
subb
mov
add
pusha
aam
mov
push
jns
cwtl
ja
sbb
pop
arpl
add
shlb
xlat
sub
cmp
mov
xchg
jo
sbb
lds
fnstcw
pop
mov
lock
or
sarl
imul
ss
lods
aas
fstpl
dec
mov
cli
xlat
in
test
cmp
mov
jmp
fsts
repz
je
test
cmp
sbb
mov
test
enter
mov
jl
xchg
mov
inc
jnp
mov
ljmp
fstpl
in
out
ds
cld
mov
ljmp
mov
jl
mov
dec
pop
hlt
jecxz
notl
out
orl
enter
pop
add
mov
xchg
push
popa
hlt
in
dec
and
ret
daa
fcomps
and
mov
inc
idivl
pop
xchg
inc
inc
jns
cli
test
out
sub
pop
cmc
imul
pcmpeqd
loope
daa
mov
test
adcl
jns
jl
push
lahf
movsl
or
nop
xchg
lea
das
dec
adc
rcrl
sahf
mov
data16
mov
xlat
mov
add
ss
mov
adc
in
cs
add
daa
cmpsl
mov
push
decb
or
jp
mov
lret
xchg
shlb
push
fisubl
xacquire
cli
xchg
idivl
aam
pop
fwait
int3
push
dec
push
lock
sbb
or
jae
mov
jno
dec
pop
and
rolb
or
sahf
and
push
jmp
shrb
out
mov
les
sbb
cmp
push
in
jno
sahf
pushf
pop
adc
test
push
test
xor
and
and
cmp
push
pop
imul
es
push
jns
pushw
scas
es
jecxz
lret
je
stos
fwait
sbb
out
push
fs
push
fisubrl
cmpsb
dec
movsb
jecxz
jo
and
outsb
fimull
out
cld
lods
dec
xor
insb
repnz
adc
and
cld
pop
mov
into
xchg
cmp
scas
push
xchg
push
testl
notl
inc
cltd
scas
ficoms
imul
sub
sub
and
jmp
jecxz
in
push
pop
scas
ds
sub
mov
or
test
dec
inc
or
imul
into
mov
icebp
push
push
loop
gs
mov
push
add
push
mov
jnp
jp
ret
push
jecxz
jmp
pop
loopne
rclb
lea
fsubrs
xchg
push
les
push
mov
rcll
mov
test
loopne
xchg
pushf
mov
out
mov
pop
imul
dec
filds
adc
jl
mov
adc
or
sub
push
and
push
lahf
mov
jmp
mov
int
lcall
jne
ds
rcr
int
mov
loop
fisubrl
jg
inc
jne
std
loope
mov
es
or
cmp
xchg
and
cli
lds
xchg
cld
out
fdivs
in
out
pop
inc
fwait
dec
xchg
outsl
fisubrs
mov
xchg
lea
or
mov
data16
xchg
mov
push
jno
int
xcrypt-cfb
cmpsl
movsl
xchg
fisubl
pop
mov
mov
sahf
pop
dec
cmp
jecxz
insb
jnp
add
lock
fwait
jno
push
test
mov
in
repz
pop
inc
or
pop
jne
jno
dec
out
push
cmp
jg
jns
and
mov
ss
mov
or
popa
cmp
daa
mull
xor
adc
rcll
or
pop
int
xor
jbe,pn
fiadds
movsb
push
xor
sbb
xchg
das
sub
aas
mov
adc
mov
or
jae
repnz
fadds
dec
sbb
faddp
xchg
shrl
rorb
cmp
add
pop
arpl
sbb
jle
test
xchg
add
lret
or
in
mov
lods
push
pop
in
pop
je
test
lcall
and
xchg
pop
lret
int
repnz
cmpsl
or
mov
movsb
inc
stos
adc
bound
jle
jmp
cmp
inc
idivl
adc
sbb
xchg
pop
adcb
cmp
stc
cmp
dec
aad
dec
mov
mov
dec
jno
lahf
in
enter
inc
adcl
sti
xchg
insb
push
and
mov
push
nop
dec
fldcw
les
aas
xchg
add
push
lret
inc
lods
or
dec
dec
lods
hlt
dec
push
sbb
repnz
and
stos
subb
mov
pop
rclb
pop
sub
fs
jnp
jp
jnp
inc
and
mov
xchg
loopne
cld
mov
nop
mov
xchg
out
sbb
rorl
movsl
adc
inc
inc
sbb
mov
xchg
je
sbbb
in
xor
push
adc
pop
jno
stc
sahf
imul
mov
and
fwait
and
xor
inc
pushf
mov
jle
popf
push
aaa
push
ss
dec
bound
dec
call
xor
dec
fwait
into
inc
cmp
sub
pop
les
fimuls
fucom
push
pop
leave
mov
out
mov
and
or
add
ds
testb
clc
lcall
int
xchg
pop
pop
push
imul
test
sti
insb
adc
cld
int3
push
and
sub
mov
mov
mov
adc
cmp
mov
jb
jp
jne
aad
addr16
cmpsb
xorl
call
mov
mov
std
sbbl
stos
lret
in
cltd
ljmp
push
adc
lret
or
add
or
idivl
push
xchg
out
dec
push
lret
fld
test
adc
or
dec
pop
out
lods
mov
push
pop
outsb
jmp
loop
mov
cld
in
int3
pop
lods
sar
push
jecxz
mov
jbe
data16
sub
add
fimull
push
xor
xchg
and
add
pop
pop
xor
scas
cmp
and
cmp
ror
push
outsl
fimuls
lcall
in
and
insl
negb
jo
movsb
in
mov
cmp
jo
shll
push
outsl
mov
out
test
or
nop
es
push
xor
sti
std
cmp
ja
jg
int
xchg
jmp
sahf
imul
cmpsb
aaa
aaa
mov
sub
sub
aas
mov
bound
push
jnp
adc
dec
jecxz
and
or
push
pushf
lret
pop
xor
xor
and
arpl
jno
fadds
jmp
inc
pop
adcl
scas
push
push
mov
inc
jnp
stc
push
push
jmp
sub
mov
leave
jg
rcll
inc
fstpl
xchg
sahf
mov
push
or
mov
sar
xor
push
stos
xchg
inc
popf
daa
jae
imul
inc
jbe
pop
push
and
push
lret
and
pop
jecxz
stc
popf
inc
add
sub
lret
or
jbe
cmp
mov
xor
daa
stos
cmc
rcl
lock
lret
push
pushf
int3
pop
jmp
or
push
jmp
mov
mov
pushf
jle
fcmovne
dec
ja
sub
fsubrp
sub
pop
fmulp
pushf
mov
cld
icebp
js
and
imul
call
mov
fcmovb
xchg
cmp
inc
aas
frstor
ds
jmp
add
jbe
fldl
lods
sbb
and
push
out
or
lret
jmp
adc
cmc
lcall
jns
dec
rorl
push
or
pop
or
mov
jle
lds
sub
ja
cmp
std
fcoml
push
xchg
sub
cltd
nop
inc
xor
inc
stos
ss
push
out
inc
gs
dec
iret
cmc
jmp
stos
jnp
sub
in
ja
dec
sbb
pmullw
xor
or
mov
push
pop
jnp
push
dec
dec
or
inc
inc
es
mov
mov
out
out
popf
add
and
and
lock
arpl
mov
movsl
jns
xchg
jg
in
ja
dec
loop
rclb
and
test
xchg
movsb
sbb
in
aad
cmp
cmc
fnstenv
xchg
pop
mov
insl
stc
xor
insl
pop
cmp
pop
cmp
fbld
imul
mov
jg
ret
jp
data16
mov
or
pop
in
mov
cli
mov
jmp
and
iret
jbe
mov
inc
add
jns
mov
divl
sahf
sbb
stos
dec
lock
daa
nop
jl
scas
jo
fld
mov
mov
lret
test
inc
adc
stc
fwait
jp
sti
xchg
in
xchg
stos
sbb
inc
in
mov
cmpsb
or
loopne
clc
mov
mov
mov
xlat
cltd
shl
cmc
stos
gs
sub
fstpl
adc
pop
xlat
js
mov
mov
ret
mov
aaa
pop
das
iret
dec
pusha
ja
adc
xchg
push
or
mov
mov
or
cmc
pusha
jo
je
idivb
aaa
test
or
les
xor
repz
cmp
mov
cltd
sbb
mov
mul
or
nop
es
adc
stc
sarl
push
in
rorl
push
sbb
mov
hlt
jmp
sub
xchg
lods
mov
call
and
push
popa
xor
int3
jmp
std
pusha
push
push
sbb
icebp
add
mov
push
adc
in
jp
lcall
lds
or
jmp
in
cmp
pushf
mov
outsb
orb
lret
mov
stos
push
adc
push
fs
sti
bound
arpl
sub
or
ret
or
sbb
sub
cmp
dec
adc
pop
pusha
sbb
mov
push
idiv
lret
xor
nop
cmp
ljmp
mov
or
lcall
push
sub
iret
stos
cmp
clc
add
test
icebp
or
push
mov
dec
repz
mov
dec
cmp
divb
jl
stos
xchg
xchg
test
outsl
dec
jle
movsb
cwtl
cmpsb
mov
sbb
xchg
sub
into
sbb
xchg
daa
sti
xchg
xchg
xor
sarl
out
rcrl
iret
mov
nop
jge
ja
xor
lret
stos
mov
fs
loopne
dec
bound
fdivr
rorb
sbb
push
or
jbe
out
mov
cmp
cld
cs
cmp
out
mov
ss
ja
dec
sbbb
xlat
dec
js
ss
xor
in
sbb
stos
adc
cmc
mov
jo
aaa
ds
pop
fisttpl
mov
fcmovu
jns
out
jmp
jl
fmuls
repnz
pop
mov
sahf
sarl
jmp
add
rcll
sub
xor
cmc
in
sub
jl
push
std
sub
jle
xor
gs
or
aam
push
imul
in
inc
lahf
daa
adc
int
cmp
icebp
daa
mov
je
pop
mov
inc
or
movsb
push
aad
and
movsl
lret
repz
popf
int3
pop
fdivrl
negb
pop
sub
jle
mov
repnz
lock
lahf
leave
pop
or
bound
jge
mov
mov
loop
adc
or
fdivl
out
cmpsl
rolb
mov
adc
ss
mull
sti
imul
ds
add
mov
lret
popa
sbb
call
call
xor
inc
push
into
or
jmp
sbb
hlt
cs
jno
xor
push
fs
sahf
sub
inc
repz
lds
and
shl
mov
imul
fbld
clc
es
pop
ret
mov
pushf
mov
leave
out
sti
pop
cmp
shlb
push
jae
push
pop
cld
add
sbb
dec
push
arpl
dec
inc
outsb
mov
btc
push
add
cmc
jle
stos
or
fcoml
sbb
sub
nopl
fs
imul
mov
and
aad
mov
imul
dec
xor
mov
jbe
divl
adc
ret
adc
lcall
sbb
pop
pop
cmp
pop
mov
cmpsb
sub
push
int3
popa
roll
bound
xchg
inc
in
cld
clts
add
jecxz
mov
lock
dec
sti
pop
push
scas
mov
lds
jb
test
push
fisttpl
pop
xchg
loop
fs
xchg
or
cmp
dec
xchg
and
stc
jg
sti
add
inc
mov
add
outsl
sub
pop
push
xchg
pop
xor
ljmp
sahf
dec
cmp
xor
inc
loope
insb
popf
popa
sub
adc
call
imulb
insl
stos
mov
iret
sub
nop
dec
or
cmp
inc
mov
xchg
repnz
mov
idivb
xchg
jmp
sub
nop
xchg
inc
xchg
cmpsb
adc
push
mul
add
orb
sub
fldt
push
push
stos
mov
jecxz
daa
xchg
and
mov
fcomps
icebp
movsb
andb
sub
xor
push
jmp
sbb
test
leave
mov
cwtl
or
push
loop
lret
fisubl
enter
push
mov
out
cmp
add
mov
mov
push
shl
xchg
mov
mov
cld
das
xchg
in
xchg
xor
push
mov
es
pop
adc
pushf
outsl
or
mov
add
outsb
push
jne,pt
pushf
sub
cmpb
insb
fst
sub
jle
repz
push
pop
pop
add
mov
pop
movsl
sbb
xor
inc
sub
cmp
lret
out
fdivrl
sbb
loopne
in
fidivs
or
jnp
jle
or
imul
and
imul
push
sub
testb
dec
jge
or
mov
adc
inc
jmp
xchg
mov
and
fadds
inc
out
inc
push
pop
add
pop
push
test
into
or
shrl
pop
scas
mov
stos
aam
jge
or
add
fmull
add
stos
cld
jmp
leave
aad
stc
test
mov
stos
aaa
mov
in
imul
dec
xor
test
xchg
sbb
sub
xor
add
loop
movsl
mov
xor
push
push
imul
mov
mov
mov
xor
cmp
ljmp
bound
leave
out
cli
je
cld
daa
mov
pop
mov
mov
popf
lock
out
pushf
and
mov
ja
or
shlb
icebp
iret
push
push
push
cmp
hlt
xor
lds
leave
in
mov
imul
pushf
xlat
lcall
bound
adc
pusha
push
jl
add
mov
int
sub
insb
orl
pushf
xor
out
push
adc
xchg
sahf
dec
inc
jl
or
mov
sub
dec
fwait
rol
addr16
jmp
arpl
lods
lock
adc
adc
cmp
mov
add
test
adc
out
or
lret
pop
push
clc
or
mov
xchg
or
shrl
cmpsl
sub
mov
or
fcmovnb
ss
sub
jb
sbb
loopne
jge
subb
xchg
les
add
aam
out
lods
nop
ss
icebp
sahf
jl
lods
sbb
dec
xor
cmc
add
lret
loope
dec
add
test
push
stos
scas
scas
mov
mov
push
stos
lret
jae
pop
xchg
add
enter
jne
in
jge
xlat
cmp
pop
pop
lock
or
sti
imulb
xor
and
adc
jg
xchg
in
cmp
in
cmp
and
and
out
push
dec
lcall
nop
sub
aad
xchg
fidivs
lret
jecxz
mov
jbe
add
push
test
pop
dec
cld
and
and
mov
xor
mov
call
loop
pusha
mov
daa
or
pop
inc
pop
fs
cwtl
shrb
add
nop
icebp
fs
fildl
push
cli
mov
movd
and
dec
mov
dec
push
sub
or
jno
inc
in
sbb
pusha
xor
jmp
mov
xchg
mov
xchg
ds
mov
pop
aaa
or
mov
xor
loope
std
ret
call
jo
jns
lret
lret
hlt
mov
into
mov
mov
jb
cwtl
aas
dec
lahf
in
out
xchg
rcr
lods
outsb
and
popl
cmp
insb
lret
lcall
je
mov
and
or
jmp
ja
mov
pop
iret
bound
xchg
outsb
sbb
inc
aaa
xor
cmp
jp
jns
mov
cli
cmpsb
xor
push
mov
fstl
mov
outsb
lret
andl
movsb
pop
enter
cmp
and
mov
mov
pop
lods
sub
enter
dec
jp
xor
nop
sbb
sub
arpl
xor
es
adc
and
shlb
mov
pop
fwait
mov
sbb
push
lods
sub
dec
sub
insb
arpl
gs
mov
pusha
lret
pop
sbbl
push
xlat
xchg
testb
fistpl
mov
push
and
cmp
adc
bound
lcall
jb
lds
mov
popf
data16
cmp
lds
xor
pop
ret
jb
cmp
mov
ds
add
mov
mov
dec
push
mov
rcll
push
imul
pop
enter
push
add
jae
push
mov
mov
mov
int
inc
test
popa
mov
les
icebp
inc
into
fidivs
jbe
ds
je
jg
gs
pop
in
mov
insl
adc
xchg
jbe
mov
addl
pop
mov
xor
arpl
cmp
cld
sbb
hlt
je
adc
mov
mov
jl
loop
loop
ja
shll
jae
sub
imul
lock
cmpsb
cmp
out
rorb
push
and
dec
jne
std
nop
loop
cs
insl
fcoml
jmp
pop
dec
aam
shlb
dec
jne
pop
xchg
ficomps
je
jnp
sbb
cmp
sub
xor
in
inc
jbe
xchg
out
aad
mov
imul
shll
jb
out
cmpsb
xchg
jns
xor
mov
outsb
ja
into
mov
push
xor
negl
inc
enter
push
fwait
cmp
mov
push
add
repz
das
mov
or
pop
pop
mov
mov
test
outsl
mov
sbb
mov
arpl
loope
movsb
cmp
sarl
mov
adc
popa
adc
or
popa
or
sbb
gs
and
inc
imul
and
push
sbb
mov
sbb
in
jae
mov
cmp
movsb
and
enter
xor
or
adc
and
push
mov
xchg
jno
stc
ljmp
fdivrp
bound
inc
lock
cmpsl
es
sbb
jo
push
inc
enter
sarb
push
aas
sbb
and
cmp
cmpsl
push
popf
mov
scas
mov
xchg
mov
sub
sahf
movsl
mov
jo
fwait
dec
inc
xchg
inc
addb
xor
shr
insb
mov
leave
inc
mov
mov
scas
cmpb
subb
xchg
ljmp
jae
mov
lods
test
scas
xchg
mov
inc
rol
int3
mov
nop
jge
test
inc
mov
out
jns
pop
sti
push
js
lret
add
mov
lods
cltd
mov
mov
pop
rcrb
mov
or
xchg
and
cmpsl
mov
jnp
imul
je
jmp
dec
movsb
mov
xchg
cmp
sbb
frstor
fsubs
sarb
nop
sbb
mov
andl
lods
je
js
add
rcll
adc
lahf
mov
add
decb
lahf
cld
mov
pop
daa
sbb
cmp
xor
add
push
rclb
repnz
hlt
xor
push
and
mov
sbb
fwait
xor
jne
mov
add
dec
sub
and
push
iret
pop
mov
ljmp
inc
adc
xchg
fnsave
xorb
aam
sbb
pop
cmp
pushf
arpl
push
in
mov
dec
or
pop
cmp
mov
test
pop
ret
cld
xchg
sbb
sbbl
add
aaa
fdivl
inc
cmp
out
lods
mov
jae
fdivrs
out
std
lret
inc
rcrl
xlat
sbb
jp
xor
cwtl
cs
push
inc
sub
shl
iret
mov
ret
mov
out
stc
and
sub
aaa
loopne
test
push
and
mov
mov
sbb
repnz
std
push
push
dec
adc
pop
cmp
adc
inc
jmp
lcall
and
inc
mov
paddw
jge
std
inc
addb
cli
xchg
je
dec
out
adc
fisubl
stos
dec
scas
in
add
and
jb
pushf
lret
fildl
mov
arpl
jbe
jp
cmpsl
enter
in
jns
jno
loop
mov
inc
jbe
pop
lea
test
imul
roll
fcom
xor
push
jbe
jmp
add
push
imul
sbb
loopne
aas
push
xor
and
and
add
hlt
movsl
fmull
xor
repnz
jle
xor
les
or
ljmp
cmpsb
jns
repnz
jl
mov
cmp
sub
andb
ja
push
jmp
mov
hlt
imul
subb
xchg
imul
jo
es
mov
imul
repz
adc
mov
movsb
mov
mov
movq
aaa
cmp
fwait
sbb
fwait
xor
sbb
mov
mov
fs
fisttpll
push
push
cwtl
ss
adc
icebp
xor
sbb
mov
es
or
push
scas
rcrl
mov
and
adcb
into
push
mov
dec
ret
les
jge
inc
into
sbb
ja
addr16
ffree
sub
mov
pop
in
pop
xchg
cmp
lret
aaa
nop
mov
xor
cmpsb
jle
loop
xor
mov
test
cmp
jo
cmp
subl
clc
inc
lcall
aas
sbb
mov
fidivl
and
sub
dec
fisubrs
mov
cmpsl
and
lret
aam
leave
cwtl
adc
sbb
xor
inc
test
adc
outsb
fwait
mov
ja
scas
sbbb
xor
fnstsw
add
add
jno
inc
insb
sbb
popa
ret
int3
stos
push
mov
dec
les
mov
and
call
jmp
iret
cmp
jae
mov
or
xchg
out
push
shl
loope
ss
fcomps
sub
jge
pop
ret
mov
or
std
stc
xlat
and
sbb
or
shlb
out
sbb
mov
pop
jle
mov
jb
cmpsl
xor
push
push
cwtl
stos
mov
adc
push
xchg
or
xor
pop
movsb
cmp
inc
pop
dec
scas
cld
dec
cmpsl
and
and
stc
sub
in
xchg
sub
sbb
push
inc
xor
mov
sub
dec
test
out
cwtl
jo
js
mov
sbb
cmp
mov
mov
xor
jno
fcmovnu
movl
fdecstp
test
popa
mov
mov
cmpsb
jnp
mov
pop
ret
xchg
loopne
fldenv
repz
or
mov
sub
xor
jecxz
cmovl
push
fdivrl
ss
mov
cld
jecxz
xchg
xchg
jnp
loop
mov
or
xor
sbb
shl
cmp
push
adc
pop
push
pop
xor
loop
push
jo
inc
cwtl
push
pop
sbb
add
loop
rcrb
mov
push
cmp
xrelease
and
mov
in
cmpsb
sbb
rcr
out
jno
sbb
movsb
jne
pop
push
pop
xor
sbb
mov
in
cmpsl
jge
cmp
mov
sar
out
addr16
fcomps
mov
sub
das
jmp
shll
xchg
sahf
jns
xchg
cld
sbb
outsb
ret
pop
fwait
sbb
int
out
mov
xchg
clc
xor
shrb
imul
imul
cmp
sub
outsl
push
dec
mov
xor
in
push
sti
aas
jae
lock
std
xchg
or
or
mov
aaa
mov
or
cmpsl
mov
test
out
sbb
mov
add
fists
xchg
movsl
fsts
jns
adcl
in
shrl
and
int
push
xchg
sub
push
push
test
mov
pop
pop
pop
inc
push
mov
lret
xchg
dec
dec
jb
xchg
push
mov
and
sub
pop
pusha
outsl
inc
lahf
rcrb
ljmp
imul
mov
negl
sbb
icebp
adc
jle
push
push
mov
adc
mov
stc
cltd
leave
mov
cmp
jb
push
pop
push
add
test
movsl
sub
mov
ljmp
adc
cld
mov
xchg
jg
lods
jg
lret
adc
je
mov
jb
imull
adc
mov
sbb
sbb
push
fistpl
or
ftst
clc
enter
nop
inc
test
test
stos
pop
push
jnp
int3
in
imul
out
xor
mov
enter
je
stos
pop
xchg
xchg
cmpsb
ss
adc
jno
mov
daa
sbb
mov
mov
fucomi
sbb
push
jae
in
mov
jmp
nop
mov
shl
pop
xor
adc
mov
xchg
sub
call
inc
es
jns
iret
pop
repz
bound
xchg
mov
pop
arpl
inc
movsl
xor
jle
add
mov
jnp
push
mov
scas
sub
popa
fcompl
mov
jp
mov
cmp
dec
xchg
ja
dec
sbb
mov
sub
daa
fimull
stc
leave
mov
scas
sbb
push
push
pop
stc
xor
xor
or
das
sahf
stos
jp
lret
out
jp
sub
mov
adcb
mov
lcall
mov
lods
xor
adcb
sub
call
sbb
mov
insb
pop
clc
cmp
dec
adc
in
or
xchg
sbb
pop
aas
insb
mov
push
sbb
insb
test
cmc
cmpsl
adc
adc
and
roll
jecxz
push
repnz
xor
mov
mov
ja
sbb
movsbl
pop
mov
es
loopne
cmp
mov
je
pop
push
adc
add
dec
jl
jl
jmp
andb
mov
xor
arpl
inc
gs
inc
int3
cmp
shll
mov
aas
dec
cmp
and
xchg
scas
xchg
out
loope
cs
xor
shll
jmp
mov
loop
scas
xlat
pop
icebp
sbb
aad
push
les
mov
stos
cmp
add
mov
aam
sub
push
push
sub
hlt
mov
jae
ja
js
ret
sub
add
add
xchg
mov
mov
scas
and
sub
lods
add
jae
call
sbb
and
popf
data16
xor
leave
jmp
or
pop
or
scas
or
loope
xor
xor
sahf
pop
mov
or
lea
aaa
xchg
mov
lahf
inc
xor
sub
cmp
dec
ljmp
push
lea
cmp
aad
jo
sub
and
xchg
add
loopne
ljmp
je
lea
psubusw
or
adc
sub
mov
and
das
stc
test
sub
insb
ret
sti
xchg
or
jnp
addl
outsb
cmpsl
in
imul
rcrl
sbb
lret
mov
xor
pusha
push
hlt
jg
inc
dec
subb
punpcklbw
mov
lock
out
lods
ss
xchg
stos
mov
cltd
subb
push
in
jp
movsb
pop
or
out
stc
mov
inc
mov
adc
mov
mov
jnp
jno
shl
inc
les
push
inc
add
rcrl
sbb
arpl
fsts
outsb
cmc
roll
jo
imull
notb
daa
mov
loope
inc
mov
sti
leave
stc
in
xor
mov
mov
test
sub
sub
cmpsb
popf
in
leave
mov
das
dec
jmp
outsl
pusha
leave
mov
mov
test
test
repz
mov
mov
movl
iret
fisubrl
movsb
dec
lea
pop
push
pop
push
push
mov
pop
fwait
lret
pop
xchg
addb
shlb
cmp
xor
addl
lahf
inc
xchg
cs
dec
xor
adc
stos
insb
loop
rcr
and
lock
enter
inc
clc
pop
pop
sub
sbbb
adc
mov
pop
push
rol
xchg
aas
test
imul
divl
lea
daa
mov
xchg
clc
xor
cld
fsubs
fdivl
fadd
push
loopne
pop
xchg
fiadds
les
aam
push
dec
test
sbb
xchg
adc
cld
cmp
jbe
xor
push
push
pop
jge
mov
cmc
imulb
shll
clc
js
push
mov
pop
dec
xorb
mov
mov
lea
scas
jae
or
mov
les
ret
testl
sbbl
das
movsl
push
fldl
and
pop
addl
mov
jnp
popf
ja
cmp
daa
outsl
or
mov
test
mov
loopne
xchg
mov
insl
sub
mov
lret
xor
decl
dec
cmpsb
push
ja
dec
in
mov
jp
pop
xorb
sub
push
dec
cmp
das
xor
enter
add
outsb
outsb
sahf
daa
pop
nop
and
cmp
leave
jbe
push
dec
xchg
pusha
pop
mov
push
lret
fwait
push
inc
sub
mov
pop
fmull
pop
scas
push
mov
cld
jne
scas
pop
sbb
mov
dec
xor
out
es
jae
pop
shlb
dec
sub
je
lret
add
jmp
sub
into
lret
sbb
cwtl
inc
mov
inc
xchg
outsl
outsb
mov
inc
insb
xchg
cwtl
lock
fwait
out
cwtl
mov
push
mov
mov
fbld
dec
sbbl
icebp
sti
mov
xor
mov
fidivs
shl
xor
mov
adc
jb
fsubrl
fcoml
sahf
jl
adc
mov
jb
adc
scas
mov
jge,pt
fdivr
gs
fidivl
aaa
bound
dec
xchg
outsl
enter
leave
mov
xor
out
mov
fwait
jmp
cmp
lret
movsb
mov
or
in
neg
mov
sbb
sub
jno
leave
dec
adc
or
cs
dec
popa
jb
cmp
sub
push
pop
adc
fwait
inc
adc
pop
jge
cmpl
outsb
push
popa
push
push
mov
in
adc
lods
pop
pop
sbb
mov
jbe
mov
sbb
clc
and
add
les
add
sbb
sbb
fnstcw
cmpsb
ret
dec
push
and
cltd
mov
jno
inc
pop
shl
jge
cmp
addr16
int
sub
sbb
lods
sbb
rcrl
fcoms
fnsave
mov
roll
fisttpl
inc
movsb
das
xor
pushf
fs
aam
pmulhuw
lods
mov
insb
das
adc
imul
lock
fs
xchg
in
lock
xchg
outsb
and
push
xchg
imulb
pop
adc
cmp
sbb
jbe
fmuls
and
jle
imul
push
ljmp
lea
scas
xor
dec
sbbb
jae
mov
and
aad
pop
sub
stos
jnp
jnp
mov
stos
jns
cmc
out
test
dec
cld
pop
int3
insb
mull
in
cs
out
ja
rorb
ljmp
fnstenv
sbbb
cmp
sub
adc
rorl
sahf
bound
and
xchg
inc
pusha
stc
xor
cmpb
cltd
hlt
fs
cwtl
dec
arpl
lret
inc
pmaxsw
fsubs
dec
push
fnstcw
and
mov
lock
dec
mov
cmp
jmp
add
ja
or
push
and
xchg
std
inc
push
pop
leave
push
adcb
int
data16
hlt
push
and
cmp
push
mov
sbb
jne
enter
imul
mov
into
pop
mov
inc
push
imul
xchg
fstp
xor
mov
jns
mov
fwait
mov
ficoml
imul
pop
push
sub
push
dec
xchg
lock
sti
push
dec
fstpt
cmpsb
jge
popa
xor
enter
test
je
mov
mov
aaa
cltd
jns
pop
xchg
cmp
push
and
mov
xlat
mov
enter
fisttps
movsb
jmp
add
enter
adc
push
aaa
cmp
pop
dec
mov
xchg
pop
pop
data16
out
out
xchg
std
jae
in
clc
push
fxch
push
push
cmpsb
fyl2xp1
arpl
daa
lock
out
aad
insb
repnz
xlat
or
fdiv
cmp
fdivr
xorl
sub
lea
pop
shll
pop
das
mov
xchg
stos
rcrl
push
xchg
call
add
mov
aaa
popa
push
sbb
mov
stc
mov
imul
xor
enter
pop
push
adc
pop
xchg
mov
popf
jae
push
test
aas
arpl
pop
test
popa
pusha
jo
and
push
pop
and
ret
mov
pop
out
xchg
pop
fdivrl
jb
adc
mov
lods
iret
stos
cltd
xchg
jle
cwtl
jl
mov
cmp
jno
xlat
adc
mov
outsb
sub
and
xchg
mulb
jecxz
insl
add
mov
jo
pusha
jo
arpl
xchg
xchg
add
xorl
notb
xchg
xor
subl
fxch
or
mov
sbb
mulb
or
sub
xchg
outsb
repz
repz
not
pop
jmp
and
pusha
pop
imul
inc
insl
out
add
mov
in
cli
out
jle
mov
sarb
mov
scas
js
jo
pop
cltd
dec
dec
dec
mov
jns
in
lret
or
pop
or
loop
mov
push
insl
push
cltd
ljmp
fistps
mov
add
mov
frstor
mov
inc
mov
sub
sbb
or
and
mov
lods
dec
pop
pop
add
sbb
sbbb
sub
pop
fs
scas
lds
mov
in
or
loope
fdivp
jne
lds
cwtl
mov
push
mov
shl
mov
xor
gs
lods
cmpsb
popf
cmpsb
sbb
pop
arpl
lahf
data16
pop
bound
inc
in
or
cmp
adc
daa
mov
popa
jmp
and
adc
xchg
std
add
mov
es
sbb
push
and
aas
xor
roll
stos
outsb
stos
std
lret
cld
or
jle
pop
cs
mov
push
cmp
jns
cltd
xchg
psrlw
inc
int
or
ljmp
cli
aas
dec
adc
push
inc
jg
mov
mov
mov
loop
sti
push
cld
fistpll
sub
dec
mov
adc
mov
movsl
and
in
loopne
and
xchg
aaa
pop
cmp
dec
jae
stos
mov
mov
mov
repz
lcall
jns
jle
or
xor
fnstsw
dec
dec
jno
inc
xchg
in
mov
sub
lods
mov
mov
ljmp
lea
sub
mov
cmpl
popf
bound
xor
pop
push
pop
jecxz
call
loope
push
pop
mov
inc
xlat
outsb
push
aad
dec
out
pop
push
shlb
sub
test
mov
mov
pop
sub
out
cmp
mov
mov
push
pop
hlt
test
test
arpl
xchg
and
test
mov
mov
mov
fdivs
adc
sub
das
jmp
add
jnp
push
loopne
inc
mov
shlb
js
pop
out
sbb
fs
mov
pop
enter
cmp
shr
or
rcr
in
or
je
mov
pop
xchg
inc
fwait
lods
mov
and
js
xchg
inc
or
stos
mov
aam
gs
inc
jae
xchg
sbb
imul
daa
mov
and
and
int3
add
pop
std
push
jbe
sub
in
xor
push
out
ljmp
pop
jecxz
jnp
and
push
stos
cmp
sbb
push
mov
int3
ficoml
clc
in
mov
and
nop
rcr
lahf
add
lock
and
adc
lahf
push
jnp,pn
mov
jle
xchg
lcall
cli
mulb
testb
pop
insl
pop
test
aas
sbb
pop
fiadds
les
or
cmp
add
push
out
dec
inc
out
pop
sub
rorb
rol
fsubrs
callw
mov
mov
dec
dec
inc
xor
cmc
pop
push
xlat
and
cmc
es
mov
mov
das
lock
inc
out
das
pusha
adc
scas
push
lds
cmc
lret
mov
jmp
iret
test
adc
js
cmp
pop
xor
jmp
dec
cli
xor
daa
insl
jmp
lret
ret
mov
movsl
xlat
inc
mov
xchg
push
cmp
out
xorl
push
pop
pop
mov
and
divb
cltd
ret
adc
cmpsb
movsl
sub
icebp
xor
mov
mov
jge
adc
lret
jge
mov
pop
push
mov
push
pop
dec
mov
jl
sahf
icebp
std
in
std
adc
and
mov
js
dec
lret
fsts
mov
adc
push
mov
cmp
mov
ret
loope
sbb
jl
xlat
in
xor
test
clc
outsb
jge
lcall
adc
inc
mov
mov
pusha
sub
xchg
movsl
loop
mov
lods
test
push
int3
test
shrb
xchg
jge
jle
movl
rcrb
sub
mov
pop
rorl
loopne
or
add
xchg
test
dec
imulb
and
cmp
add
mov
xchg
mov
scas
inc
sub
or
pop
xchg
sub
ja
shlb
push
cmpsb
jnp
jp
xorl
addr16
je
dec
out
insl
loopne
repz
nop
outsb
inc
or
popf
dec
add
pushf
into
cs
out
cmpsl
sahf
decb
add
test
repnz
addr16
or
orb
test
fbld
xorl
pop
mov
imul
or
pop
pop
mov
lock
push
xor
mov
stc
dec
bound
adc
cli
mov
int3
adc
pop
adc
loopne
add
or
or
mov
push
outsl
push
add
add
lock
lret
outsl
into
add
int3
mov
mov
sahf
lret
xor
pop
pop
jecxz
jns
rorb
xor
jg
dec
mov
xor
cwtl
pop
jne
xlat
mov
inc
out
shlb
adc
sti
jno
pop
jns
xchg
insb
ja
frstor
ret
insb
mov
ljmp
or
push
enter
inc
cli
inc
scas
adc
push
and
pop
inc
scas
sbb
dec
cld
test
iret
inc
pop
sbb
pop
movsb
push
mov
xchg
in
xchg
popa
ss
sbb
jns
lods
inc
lea
xor
in
popa
cmc
mov
movsl
aad
mov
mov
rep
dec
ret
daa
xor
mov
push
pop
push
cmp
mov
jmp
mov
jg
stos
cld
xlat
inc
or
add
fsubs
and
mov
pop
inc
sbb
push
mov
out
inc
cmp
cmpsb
cwtl
test
ja
ja
xor
and
loope
lods
add
sti
pop
jbe
dec
xor
cmp
cwtl
out
shl
pop
es
cmp
cli
arpl
out
sbb
cmpsl
int3
data16
jo
push
and
mov
dec
mull
subl
mov
push
clc
nop
es
jge
int
stos
inc
lods
ss
jbe
insb
lods
pop
pop
mov
or
inc
arpl
jmp
xor
pop
lods
addr16
add
pop
fdivrl
adc
jmp
stos
add
jge
std
jle
xchg
lret
in
inc
pop
mov
daa
shrb
repz
sub
inc
pushf
sub
cmpsb
sti
jbe
dec
dec
rcll
ret
sub
enter
mov
imul
sbb
aaa
je
push
lock
das
jmp
test
ds
jl
popf
stos
mov
pop
nop
push
and
fwait
lea
stc
pop
sbb
je
cmc
js
stc
mov
insl
add
lahf
jle
int3
sbb
push
cmp
fucomp
fmuls
fmulp
lahf
mov
and
cs
or
mov
dec
push
popf
aad
sahf
jmp
aad
cmp
ss
int
push
adc
ds
lcall
in
dec
mov
lds
pop
daa
mov
pop
xchg
int
mov
jl
push
in
jbe
jmp
adc
rcrb
daa
and
arpl
pop
xorb
aam
out
test
sti
sub
cpuid
les
subl
lahf
mov
fwait
push
pop
and
push
rorl
scas
loopne
aaa
loop
inc
or
add
repnz
hlt
decb
inc
fsubs
or
mov
sub
mov
cmp
xor
adc
rorb
lock
cmp
je
inc
lahf
adc
add
mov
data16
cmc
arpl
mov
push
pop
stos
int3
test
add
xor
mov
push
dec
sub
cs
lahf
cmpsb
sub
jno
xchg
dec
sub
jp
xor
mov
jge
roll
ljmp
jle,pt
mov
mov
clc
icebp
and
pop
and
pop
out
xor
sahf
dec
arpl
dec
push
ret
push
or
xchg
movsb
mov
inc
cmp
cwtl
lds
out
add
test
xor
sbb
shrl
mov
arpl
in
or
xor
out
pusha
nop
popa
inc
aad
mov
pop
inc
and
nop
inc
cwtl
sub
imul
inc
mov
dec
repnz
or
ffree
jmp
mulb
inc
js
cmpsb
mov
xor
mov
sahf
rcrb
push
es
imul
mov
pop
sbb
or
subb
cvtps2pi
subl
mov
aam
fcmovbe
inc
lahf
mov
outsl
mov
outsl
mov
mov
ljmp
rcll
mov
xchg
mov
rorl
and
cmp
mov
mov
gs
test
jl
xor
xchg
jb
add
gs
pop
mov
and
pop
cmp
sub
mov
movl
push
jle
cmpsb
xchg
nop
mov
mov
ror
outsl
mov
rcrb
add
sub
mov
lret
int
push
pop
fdivs
sub
das
pushf
cmp
sub
testl
xor
in
jno
xorl
outsl
imul
insb
sbb
xlat
call
mov
mov
ficompl
jl
imul
mov
push
into
int3
sub
pop
push
test
adc
sbb
mov
xchg
iret
test
inc
movsl
sub
cmp
roll
dec
rorb
popf
daa
imul
test
sarb
imul
inc
cmp
jne
loop
jb
jg
pop
lret
pop
subb
cmp
ss
loope
lret
fidivl
fisttps
dec
mov
xchg
lret
sbb
rolb
fisubrs
aaa
out
push
ljmp
jl
daa
or
fisubl
push
mov
xchg
push
lods
mov
add
out
inc
sbb
adc
and
mov
mov
jecxz
adc
and
mov
popf
sub
stc
sahf
push
pop
xor
jae
mov
jb
adc
ret
fsubrl
sub
pop
repnz
in
neg
cmp
hlt
or
xchg
add
cmp
jl
push
clc
sub
clc
ficompl
mov
out
sbb
lock
dec
fcomps
test
insb
mov
loop
mov
mov
icebp
sub
jecxz
adc
jp
pop
fisttpl
mov
test
mulb
arpl
pop
inc
hlt
push
pop
lret
mov
ret
jg
mov
cwtl
xor
pusha
push
test
xor
mov
jg
stos
dec
mov
fildll
cwtl
ret
inc
xor
outsb
rclb
xor
dec
cld
inc
es
adcl
mov
mov
mov
xchg
mov
add
das
rsm
shll
lret
cmpsb
repnz
adc
pop
cmp
cli
adc
jns
and
stos
pop
sub
jle
mov
in
and
shl
inc
or
ljmp
ljmp
xchg
movsb
inc
insl
imul
pop
mov
popf
sbb
adc
add
lret
or
mov
push
sbbb
sub
aaa
jb
fisubrs
push
and
cmp
mov
insl
add
push
insl
call
xchg
mov
jge
and
pop
xor
jae
outsb
sbb
or
push
sub
sub
sub
imul
cmpl
cmpsb
cmp
cmp
cmp
rcll
fcomi
xor
jmp
js
sbb
aam
jl
test
mov
imulb
push
fnstenv
std
jno
das
fwait
ljmp
clc
cld
sbb
ret
out
incb
mov
leave
xor
les
out
or
sbb
add
mov
faddl
decl
inc
in
ss
int3
fisubrl
inc
imul
push
sbbb
mov
insb
jp
add
adc
test
cmp
sahf
push
xchg
jns
adc
lock
inc
mov
in
scas
loop
jbe
pusha
or
jnp,pn
inc
int3
jns
popa
insb
mov
stos
mov
lods
aad
fmul
fsubs
dec
cmp
inc
jecxz
push
add
mov
jl
mov
jecxz
mov
fcompl
mov
iret
test
dec
aaa
inc
jmp
fidivrl
mov
fs
cmp
out
dec
hlt
xor
inc
fcomps
inc
repnz
jbe
or
jmp
mov
call
mov
and
cmp
ret
cmpb
and
push
and
ret
pop
or
aas
fs
les
outsl
adc
subl
cltd
pop
data16
scas
dec
pop
int3
ss
and
inc
mov
fbstp
mov
out
mov
push
sti
fucom
in
adc
cmpb
ja
mov
and
xchg
cs
ss
stos
cmp
leave
push
mov
mov
in
jno
push
cmp
shrb
out
pop
out
push
xchg
mov
mov
pop
jne
aaa
mov
cmp
fsubrs
xchg
cmp
mov
adc
push
mov
fwait
lret
and
jb
adc
pop
rcrl
fisttpl
pop
cmp
and
push
fst
repz
pop
xchg
int
lcall
loope
sti
xchg
and
inc
xchg
pop
dec
push
xchg
and
mov
push
inc
xchg
or
inc
inc
test
sbb
divl
insl
cwtl
loopne
push
mov
stc
xor
in
push
mov
arpl
sbb
idivl
call
call
adc
repz
mov
rorl
jbe
shll
pop
pop
enter
arpl
pusha
outsl
xor
test
shrl
mov
mov
jo
jle
in
sub
or
jae
pop
cld
sub
push
out
xor
inc
jp
cmp
add
popf
dec
cmp
mov
inc
daa
and
cmpsb
jno
xchg
adc
push
cmp
iret
pop
xchg
shrb
push
mov
aad
xor
div
in
or
dec
cmpsb
pop
dec
xchg
out
loop
or
sbb
and
or
fstp
push
adc
gs
mov
jge
mov
mov
inc
dec
inc
jge
push
pop
jl
adc
jl
js
adc
add
mov
xor
in
mov
icebp
fcompl
xlat
and
dec
sub
or
and
dec
or
es
pop
int3
test
lret
or
pusha
repnz
cwtl
int3
push
xchg
pop
pop
mov
push
rcl
ficoml
lock
inc
push
xor
popa
mov
enter
fisubrs
xor
pop
sarb
xor
push
cmpb
fwait
mov
js
sub
cs
dec
not
xor
and
sub
xchg
cwtl
mov
out
mov
test
stos
add
xchg
and
add
jg
ds
and
sub
xor
adc
jae
jecxz
cmp
jecxz
imul
stc
movsl
mov
push
xchg
jb
mov
adc
hlt
lret
xchg
jo
mov
movsb
mov
test
leave
outsb
ret
idivb
dec
cs
jnp
jo
mov
dec
mov
push
inc
nop
mov
pop
jle
in
mov
lock
sub
popa
pop
push
xor
sbb
test
adc
dec
cs
test
loop
lcall
cltd
jbe
inc
inc
sbb
ljmp
pop
call
imul
sbb
jb
add
cmpl
sbb
push
mov
cmp
rorl
je
stc
arpl
cmp
push
lret
ds
shlb
and
cs
inc
movl
pusha
add
xor
xor
out
mov
mov
push
sub
js
pop
inc
adc
push
adc
push
push
filds
inc
loop
inc
cmp
sbb
fnclex
icebp
push
es
std
int3
pop
dec
jo
inc
jns
movsb
xlat
insb
lcall
pushf
pop
push
xchg
mov
pop
stc
scas
fildl
jno
pop
into
stos
mov
cmp
pop
push
or
dec
mov
orb
fimuls
mov
outsb
adc
rcll
cltd
sahf
sbb
pop
invd
lods
adc
xchg
loopne
xchg
insb
pop
push
xchg
push
aad
ss
dec
inc
cld
pop
notb
lds
out
test
cwtl
in
loope
aam
mov
adc
jg
jge
mov
jge
push
imul
out
icebp
xor
push
outsb
lea
inc
xchg
outsb
cmpsb
call
inc
mov
pop
test
lret
dec
mov
insb
enter
mov
add
es
jl
addl
mov
or
ret
aaa
fwait
std
sub
in
leave
idiv
mov
adc
xchg
negl
sbb
pop
mov
adc
xlat
or
sbb
jno
add
std
mov
add
jecxz
sbb
sbb
test
mov
and
mov
notb
gs
add
bnd
fisubs
movsb
mov
dec
cmp
or
fnstcw
add
dec
fildll
xchg
decb
dec
cs
lods
and
jnp
dec
cmpsl
add
cmp
popa
or
jne
mov
lds
sbb
cmc
bound
xor
mov
or
mov
ret
push
cmp
notb
insb
and
inc
loop
lea
sub
sahf
scas
cltd
jo
jno
adc
call
jge
stc
out
inc
mov
aad
mov
jle
add
mov
sub
cmp
int
daa
and
aad
ja
and
ljmp
jge
xchg
cmp
int3
or
arpl
test
mov
mov
fwait
ja
stos
ss
outsb
int3
xchg
or
pushf
xchg
mov
mov
inc
cmp
mov
xchg
jb
movsb
insl
xor
test
test
xchg
std
jo
add
repnz
test
imul
adc
lret
add
sbb
lock
mov
jl
fcomi
je
cmp
mov
inc
cmp
aas
shlb
rclb
mov
popa
scas
in
jecxz
in
mov
mov
jb
fnstsw
pop
mov
dec
jbe
je
adc
mov
repnz
add
push
ja
mov
lds
jg
xor
out
push
adc
dec
scas
ret
xchg
adc
das
in
imul
and
sti
aad
or
test
shl
movhps
in
ja
test
popa
pusha
sub
into
int3
aaa
xchg
jecxz
or
pop
jbe
sti
aad
sarl
pop
pop
sbb
or
adcb
add
ficoms
xor
sbb
and
inc
add
in
push
pop
push
dec
je
loop
xor
mov
leave
inc
je
add
jne
dec
lahf
icebp
sbb
scas
mov
pop
or
sahf
imul
les
cmp
cmp
ret
movsb
sbb
or
add
scas
loope
cli
idivl
cld
add
jns
xlat
in
stos
and
out
mov
jmp
pop
dec
arpl
push
loopne
jo
sbb
inc
aam
sahf
test
mov
clc
adc
pop
pop
js
scas
aaa
cmp
sbb
shlb
and
sbb
jl
cmp
dec
xchg
or
cmp
je
push
cmc
rclb
adc
add
mov
movsl
add
and
cmp
cwtl
pushf
jmp
lock
jge
push
test
xchg
dec
negb
pop
mulps
shrb
inc
or
inc
push
and
jg
mov
enter
fcomp
add
xchg
pusha
xorl
fldenv
negb
in
dec
xchg
and
test
outsl
mov
push
push
subl
cwtl
lock
imul
or
in
stc
lret
pop
lret
inc
sbb
adc
in
mov
pop
js
inc
mov
insb
jb
pop
mov
js
lret
and
adc
cwtl
cltd
rcrb
call
xchg
sub
pop
mov
sbb
add
sbb
aam
mov
xchg
ret
sti
push
repz
push
mov
and
nop
jo
rorb
lods
scas
adc
adc
mov
es
packssdw
sub
mov
inc
inc
mov
test
and
in
jns
dec
iret
lds
cwtl
add
cmpsb
imul
dec
and
push
push
dec
fildl
mov
mov
xchg
roll
hlt
jae
test
jb
jo
mov
jp
testl
jns
jnp
jo
ds
adc
or
data16
jne
sbb
ret
pop
movsl
push
hlt
enter
dec
jnp
in
add
pushf
cltd
adc
mov
dec
call
je
stos
add
lock
pop
cmpb
inc
mov
in
lods
jns
rolb
leave
dec
xor
pushf
pop
jmp
mov
test
mov
inc
mov
inc
rorl
ja
jb,pn
dec
mov
rorb
out
rcrb
push
pop
lods
mov
adc
js
xor
jne
inc
pusha
loopne
and
test
cmp
or
in
mov
jo
adc
xchg
sti
jge
les
mov
data16
sub
fcomps
xchg
iret
frstor
fs
or
sti
clc
pop
push
gs
jge
or
add
jbe
es
ror
popf
jnp
push
iret
xorb
ss
ret
jp
sarl
notb
loope
sub
cmpsl
dec
imul
jne
add
out
inc
out
loope
fcmovne
in
cmp
lods
pop
mov
jae
dec
cmpsl
adc
aad
imul
pop
pop
loopne
popa
lret
sbb
jno
mov
sbb
cld
aas
fdivl
push
mov
int
jns
push
fcmovu
ficomps
sbb
jnp
mov
cmp
sbb
add
push
xor
jne
cmpsb
mov
pop
cli
xchg
ret
mov
fcomp
outsl
dec
and
push
cld
ret
aas
jl,pn
sar
cmp
pop
sahf
mov
mov
xlat
add
mov
cmp
imul
rcrb
ss
jmp
rcr
lods
push
inc
sub
aaa
mov
inc
xchg
shrl
mov
movsb
scas
push
cwtl
fs
mov
test
outsb
shl
sbb
clc
push
lret
test
mov
clc
dec
vshufps
jmp
js
sahf
sahf
loop
cmp
xchg
xchg
mov
push
nop
jmp
xchg
sub
ss
repz
cltd
mov
jne
cmpsl
shll
insb
fmull
cmp
jbe
pushf
jno
adc
mov
cmpsl
call
xor
jo
mov
inc
out
loop
or
movl
in
push
test
lods
dec
or
lret
push
sub
nop
into
hlt
push
lret
divl
mov
lcall
loopne
scas
xchg
das
or
inc
jne
sahf
push
xchg
inc
dec
xchg
ds
vcvtsi2sdl
mov
cmp
ret
dec
pop
xorb
shll
push
xor
psrlw
popa
push
cwtl
push
jmp
fs
adc
popa
cmp
test
xchg
xlat
test
mov
hlt
cmp
nop
cmp
test
sbb
ret
mov
outsl
xchg
or
sbb
iret
and
or
sub
jb
inc
sub
mov
int3
icebp
mov
mov
jne
sbb
ficomps
arpl
push
leave
jbe
out
and
std
rorb
test
scas
jge
jle
stc
mov
mov
mov
mov
add
mov
and
cwtl
mov
rol
scas
pop
mov
in
sub
leave
jae
loope
and
mull
push
xor
js
and
push
insb
fisttps
jg
mov
cld
sbb
mov
jnp
loopne
clc
sbb
es
mov
cmc
mov
leave
lods
shlb
call
lret
sub
mov
mov
out
in
and
push
aad
insb
push
and
leave
mov
mov
mov
adc
pop
cmp
lret
or
out
cmp
popl
dec
in
add
cmpsb
loopne
sahf
aam
jnp
cwtl
sub
mov
aas
push
xchg
mov
adc
xor
push
test
and
and
in
lock
push
aas
inc
fsubl
imul
jmp
mov
mov
jmp
mov
or
jg
mov
xchg
test
loope
push
mov
or
fnstsw
nop
inc
push
add
iret
pop
xor
shrb
pop
inc
imul
jns
xor
jge
ss
rcrl
pusha
pop
sub
add
int3
cmp
jne
movsl
mov
xor
and
div
mov
push
jb
lods
mov
and
add
out
dec
mov
sbb
jg
push
repz
add
adc
xchg
and
jp
mov
loop
jle,pt
lcall
mov
cmc
mov
cmc
pop
fstpt
mov
xchg
int3
cmp
pop
mov
jo
shrl
mov
nop
pop
fists
jp
sti
pop
sub
call
inc
icebp
xchg
mov
and
pop
mov
test
jbe
mov
cs
mov
pusha
call
nop
ss
repz
fdiv
and
mov
cwtl
into
add
fistl
sbb
pop
in
mov
mov
shrl
jns
jo
dec
cld
dec
mov
enter
push
xor
fsts
add
and
push
jne
repz
xor
hlt
push
nop
es
sub
cmp
je
in
or
hlt
and
scas
dec
test
add
mov
jnp
adc
cmpsl
xchg
clc
cwtl
or
cmpsl
int
and
push
adc
imul
mov
mov
mov
xchg
jne
mov
adc
cmp
add
mov
push
push
roll
mov
xor
mov
in
add
inc
add
dec
out
das
push
pop
lds
stc
call
lret
fadd
call
cmpsl
rclb
fucom
and
jne
jnp
les
sub
or
jne
push
in
adc
movsl
sti
add
mov
mov
sti
cwtl
rclb
test
jecxz
nop
in
bound
mov
pop
pushf
sbb
imul
fs
mov
push
aam
cmp
orb
ljmp
inc
cmp
faddl
in
sub
pop
push
jbe
aas
je
mov
mov
pop
inc
mov
popa
arpl
sub
andl
push
ja
shlb
and
mov
ret
mov
fadds
adcl
fstl
pop
mov
rorl
or
adc
repnz
dec
hlt
pop
mov
xchg
xchg
pop
insb
mov
xchg
pop
sbb
push
loop
mov
daa
ljmp
out
and
imul
nop
ret
cmp
or
push
dec
lods
push
popa
inc
sarb
sbb
test
or
inc
xorl
ss
jo
add
xor
loopne
mov
mov
fcmove
xchg
jge
shrl
leave
adc
mov
aas
jne
jb
inc
dec
aaa
mov
xchg
mov
dec
enter
inc
or
in
mov
and
jmp
imul
sarl
hlt
mov
in
arpl
push
mov
add
aaa
cmpsl
xor
cmc
pop
sti
mov
xchg
out
jle
dec
xor
ja
mov
loop
lret
es
dec
out
and
mov
dec
jnp
outsb
xchg
iret
inc
xchg
xchg
ret
adcl
inc
cmp
arpl
movsb
jns
adc
cld
mov
dec
dec
sbb
dec
add
cld
xorb
test
leave
pop
aas
insb
fstl
sbb
movsl
jmp
outsb
es
jle
xchg
leave
ds
mov
outsl
jp,pn
andb
pop
and
mov
ret
sbb
push
pop
mov
dec
rorl
pusha
mov
stc
mov
cmp
cmp
jg
xchg
xor
pcmpgtw
pop
jle
mov
push
sub
mov
mov
popa
or
std
shll
jbe
mov
mov
pop
fstl
push
pop
cmc
mov
inc
sub
inc
out
push
mov
sub
or
cmp
in
xchg
dec
pop
xchg
dec
sub
and
push
mov
mov
push
pusha
add
add
push
outsb
xchg
ja
fistpll
inc
mov
aaa
adc
rclb
in
out
sub
add
sbb
nop
out
inc
ret
loopne
sbbl
push
clc
adc
and
adc
push
adc
mov
aas
adcl
pop
call
push
inc
inc
adc
fldcw
dec
nop
fstps
pop
inc
add
xor
sbb
push
ljmp
xor
pop
dec
sub
cmp
fcmovu
sbb
lcall
push
pop
sbbl
out
add
cmp
jecxz
or
jns
stos
lods
imul
or
sbb
xor
loopne
inc
push
out
ret
scas
rol
out
aas
push
arpl
mov
std
fsubrp
popa
sti
cmp
out
xchg
lods
test
mov
insl
and
sbb
repnz
test
sti
mov
repnz
and
push
ds
loopne
repnz
insb
pop
xchg
lods
inc
xchg
mov
orl
dec
mov
in
scas
rcl
aas
repz
cmp
lcall
push
gs
ljmp
inc
inc
mov
inc
les
xchg
test
mov
clc
popf
int3
int
lret
pop
mov
cmp
ss
das
mov
int
pop
imul
out
lahf
dec
arpl
lcall
adc
bound
mov
sbb
mov
mov
je
sbb
xchg
sbb
mov
mov
lahf
daa
lcall
str
test
filds
and
adc
sarl
aas
dec
jmp
mov
mov
inc
sbb
adc
jecxz
movsb
lea
cmp
gs
loop
in
jno
js,pt
daa
lods
mov
mov
rorl
pushf
out
pop
mov
ljmp
xchg
mov
push
xchg
sbb
cmc
sbb
hlt
rclb
add
shl
rcl
or
sbb
pop
mov
sub
ss
sub
xor
test
or
push
test
sub
in
xchg
and
les
xor
inc
mov
iret
sub
aaa
mov
movsl
rorl
pop
mov
or
mov
repz
lods
sbb
testb
or
mov
xchg
mov
imull
je
xchg
ret
push
lcall
sub
sub
decl
jmp
inc
mov
add
adc
fwait
jae
ret
popf
loopne
mov
cmp
cli
popa
loopne
push
or
cs
or
jp
xchg
stos
add
pop
loop
fidivs
fstpl
imulb
inc
movsl
fldl
mov
sub
and
neg
ds
mov
sti
cli
clc
sub
and
cmc
cmp
and
add
pop
mov
cmp
lret
sub
jno
jp,pn
or
fcompl
sbb
mov
xchg
inc
rol
jmp
and
shll
add
into
lahf
in
dec
mov
xchg
loope
fimuls
cmp
iret
inc
inc
mov
cmp
adc
push
or
add
sti
dec
int3
xchg
push
push
sbb
les
fsubs
aas
movsl
setg
or
cmp
xor
add
icebp
mov
push
fmull
jl
inc
sbb
leave
jo
test
xor
dec
jl
jecxz
sub
jecxz
sahf
push
das
or
sbb
mov
jbe
or
or
test
push
fnstcw
xor
mov
clc
inc
jg
lock
sti
ds
pop
aad
cmpsl
je
out
cmpsb
mov
test
sti
jns
pop
out
mov
cs
pop
mov
nop
imul
and
jbe
add
cmc
add
in
repz
lcall
adc
push
jp
mov
dec
or
push
mov
cmpsb
push
push
outsl
inc
loopne
xor
or
testl
ja
xor
shrb
cmp
fs
sbb
add
in
sub
push
xchg
jns
stc
pop
or
inc
jg
rcrl
fsubrs
fisubrs
add
clc
out
or
mov
push
inc
outsb
xor
jbe
jns
dec
imul
mov
jl
fistpl
ret
subb
hlt
rclb
mov
test
pushf
and
mov
pop
jno
cmp
sub
mov
insl
inc
push
icebp
xor
or
bound
std
sub
or
add
shll
sub
aad
rcrb
sub
dec
cmc
sbb
and
pop
ret
sarb
fstenv
lahf
iret
xor
loope
es
inc
sub
cmc
mov
add
sbb
ljmp
jecxz
mov
and
cs
add
xor
xor
jge
jbe
jae
sub
xchg
add
jp
xchg
pop
mov
inc
push
or
cli
adc
mov
mov
mov
popa
daa
bound
rorl
sbb
jnp
sbb
adc
aas
mov
adc
jne
lea
out
cmpb
dec
insl
loope
jne
mov
test
out
cli
mov
ds
data16
cmp
in
mov
inc
popa
stc
fmuls
jno
and
add
jl
mov
mov
aad
or
jl
mov
icebp
sti
fnsave
mov
pop
dec
sub
pop
sahf
push
call
int
cld
mov
outsl
adc
jne
clc
outsl
or
scas
aam
cmp
ds
mov
jnp
shll
jo
stos
and
out
mov
adc
xchg
repz
mov
push
mov
jle
rolb
jno
je,pn
sbb
sub
and
outsl
cmp
and
aad
jp
cmpsb
mov
test
xchg
or
add
and
inc
and
sbb
pop
mov
ds
imul
sti
push
xchg
pop
mov
hlt
push
add
xorl
push
icebp
ficoms
sbb
loopne
ss
scas
push
jae
ret
jbe
lret
ss
cmpsb
aam
in
mov
pop
inc
xor
inc
pusha
xchg
inc
cmp
fs
push
rorb
adc
xorb
mov
pop
test
pop
shll
dec
mov
cmp
in
push
mov
and
xchg
shlb
inc
mov
mov
fs
push
in
sbb
repz
add
pop
pushf
outsl
jle
outsb
or
push
loopne
out
fsub
dec
dec
into
pushf
in
xchg
lcall
mov
xor
insb
push
inc
cmp
mov
mov
pop
mov
sbb
movsl
and
adc
mov
xorl
xor
mov
scas
xlat
mov
push
rcrl
leave
stos
or
xchg
mov
mov
mov
pop
push
push
lahf
adc
les
fcmovnu
mov
lahf
ficoml
cmp
imul
iret
sbb
lods
rol
xor
std
jno
pop
push
je
popa
jae
insb
sbb
sbb
adc
xlat
in
in
mov
pop
sbb
pop
aad
test
mov
jle
pop
jle
and
jmp
sub
repz
shl
cld
push
or
out
xchg
inc
ficomps
xchg
int3
dec
mov
insl
mov
sbb
jo
mov
jl
sarb
sub
loop
mov
test
out
push
and
sbbb
fs
cmpsl
imul
cli
fildl
jno
inc
nopl
shl
add
sbb
jl
cmp
push
clc
in
mov
cmc
inc
or
imul
fisttpl
jp
lret
dec
xor
popa
jns
or
mov
adc
aas
ret
or
jns
mov
call
xchg
lahf
jno
lods
out
in
pop
icebp
inc
adc
sub
push
mov
mov
dec
xchg
sar
mov
cmpsb
inc
dec
jmp
std
and
fisttpl
and
stc
rep
xchg
mov
aad
scas
clc
pop
and
das
fstpt
popf
xchg
int
outsl
xor
shr
insl
adc
sar
ret
jns
lds
jecxz
sbb
movsb
cmpsl
js
mov
sub
sti
pop
out
cmp
out
lods
xor
add
sbb
jbe
ud1
iret
imul
idivl
icebp
dec
xor
dec
div
pop
popf
push
ljmp
xor
push
and
xor
xchg
xchg
rorb
xor
mulb
jno
popl
adc
es
push
dec
cmp
orb
mov
and
and
pushf
inc
xchg
push
sbb
mov
pop
mov
pushf
pop
inc
movsl
aaa
pop
ja
add
hlt
repnz
outsb
add
sub
sub
fnstsw
mull
rcll
dec
mov
stos
sub
pushf
pop
mov
push
cld
arpl
mov
jae
imul
or
into
and
ret
adc
dec
push
xor
adc
in
push
xor
cmp
inc
xor
xchg
ss
sbb
pop
sub
fdivr
inc
imul
addr16
mov
loop
xchg
sbb
dec
mov
xchg
mov
push
out
jge
out
pmuludq
mov
add
inc
add
pusha
dec
out
rorl
adc
dec
xchg
cmpsb
sub
mov
fs
add
cltd
fcoms
psraw
cmpsl
loopne
pop
repnz
stc
push
int3
push
push
pop
mov
jne
or
and
push
insl
push
xlat
mov
adc
into
lret
push
xor
ret
fisttpl
dec
cmp
pop
xchg
jle
jo
dec
nop
jb
test
push
adc
ja
pop
out
cwtl
add
lods
xorl
cmp
mov
mov
repz
ljmp
dec
and
aam
aad
mov
xchg
xchg
push
int
ret
cmp
adc
or
add
mov
mov
ja
inc
cmpsb
sub
outsl
push
arpl
andl
add
ss
arpl
aam
ror
sub
xchg
mov
push
push
aaa
imulb
push
sbb
imul
xor
gs
xor
inc
sbb
lock
roll
and
cltd
aaa
in
cmc
adc
loopne
les
dec
sub
cmc
sarb
fstp
cs
dec
int
daa
dec
inc
fdivr
out
xchg
pop
mov
xor
lds
fnstcw
xlat
inc
mov
sub
pop
aam
pop
add
push
or
aam
fwait
mov
dec
cmp
xor
mov
into
movl
sub
les
cli
clc
loopne
in
imul
mov
inc
pushf
scas
repz
push
inc
mov
xchg
lods
pop
mov
lock
jge
enter
scas
rcrl
ja
jo
add
pavgb
test
and
jne
dec
push
loop
movsl
ret
icebp
jno
fisubs
ja
incb
mov
mov
mov
imul
les
inc
push
xor
jbe
sbb
jl
push
or
inc
pop
or
js
lds
pop
jnp
push
jne
outsl
addl
dec
aad
xchg
sub
pop
xchg
lcall
cld
jp
sub
orl
icebp
dec
mov
cmc
inc
in
xor
cmp
xchg
pop
testb
nop
cltd
xchg
and
inc
std
nop
sbb
and
adc
lret
scas
stc
sub
mov
lods
mov
or
jmp
pop
adc
inc
imul
addl
push
push
fwait
xchg
or
decb
divb
sub
mov
mov
mov
sbb
pop
jo
sub
or
fimull
mov
mov
dec
and
cmp
cmpb
mov
sbb
gs
lahf
push
pop
and
rol
inc
sbb
test
adc
fwait
stos
xor
dec
xchg
lds
mov
sbb
dec
jp
jns
mov
enter
and
call
fsubrl
push
add
dec
and
mov
jnp
rep
pop
addr16
inc
xchg
xchg
jbe
js
fnstenv
stos
call
lcall
lods
loope
mov
mov
dec
andl
xor
notl
xchg
xchg
mov
or
xchg
lcall
mov
adc
xchg
jnp
imul
lds
and
and
mov
push
xchg
xlat
pop
scas
push
mov
push
je
popf
mov
mov
adc
xchg
test
addr16
dec
or
sub
lret
jl
arpl
dec
insb
inc
addr16
push
cmp
out
iret
adc
mov
ret
pop
ja
add
lods
add
add
push
push
insl
cmpsb
pop
pop
scas
sarl
gs
and
mov
lods
notl
mov
xchg
sub
addl
inc
inc
icebp
arpl
fildl
inc
jnp
or
add
sub
dec
adc
or
add
loop
adc
je
je
into
adc
cmp
mov
cmp
lock
mov
ja
mov
or
fimull
cld
xchg
jno
mov
inc
jmp
and
push
mov
es
addr16
mov
mov
pop
lods
jbe
test
in
insl
repz
sub
jo
cwtl
mov
mov
ss
ret
andb
ret
sbb
pusha
mov
subps
addl
dec
pop
sti
cld
fsubs
sbb
out
shll
out
sub
leave
fs
pop
mov
incb
dec
js
push
and
ret
jns
test
mul
loope
loopne
repnz
lock
jp
cmp
ret
sub
fistl
fnstcw
pop
cmc
cmp
fmul
and
xor
loop
cmp
mov
scas
div
dec
aaa
push
cs
dec
pop
mov
ja
adc
sub
icebp
andl
push
nop
lods
or
push
jge
mov
sub
xchg
inc
xchg
mov
sbb
sti
sub
pusha
mov
popf
fiadds
jo
jbe
push
sub
dec
sahf
lahf
xchg
rorl
mov
cmp
pop
or
imul
or
pop
hlt
mov
test
mov
mov
ljmp
mov
add
xor
sub
test
ja
add
cmpsl
in
pop
es
fsubrl
outsb
sub
pop
mov
shrl
testb
adc
pop
or
call
loopne
lcall
cmp
out
pop
fcmovu
sub
cmpl
shlb
sbb
sub
push
sti
cld
pusha
and
imul
std
jge
dec
in
ds
shlb
dec
outsb
jge
mov
shrl
icebp
in
xchg
pop
jnp
out
pop
shll
or
jl
mov
ss
es
stc
xchg
or
ror
xor
mov
push
into
push
dec
pusha
adc
in
lods
inc
jb
movsb
jae
sbb
xor
sbb
fwait
outsl
sbb
shl
lret
pop
stos
or
push
ficoml
xchg
outsl
repnz
rcrb
das
push
test
pop
and
push
jae
cmp
fmulp
loope
mov
jnp
cmp
add
pop
adc
ret
mov
lds
mov
mov
stos
ss
mov
ljmp
nop
rclb
cmp
and
add
jbe
xchg
xchg
adc
scas
add
stos
nop
sub
int3
mov
call
loopne
sub
inc
clc
mov
in
mov
pop
insb
lds
in
arpl
mov
in
push
les
ficoml
dec
and
mov
fbld
and
adc
dec
mov
mov
push
movsb
ja
stos
push
xchg
mov
cmp
pop
or
push
int
lahf
mov
out
xor
mov
fsubl
es
insl
jno
adc
xchg
test
out
popa
mov
clc
cmc
push
addl
jb
inc
movsb
cld
jge
andb
jmp
xchg
sub
lods
inc
movsb
jle
push
xor
mov
xchg
pusha
xchg
sub
xchg
aam
inc
and
xchg
aad
fcomps
lahf
push
pop
ret
xor
aam
stc
xchg
mov
add
jo
jne
fdivrl
dec
xor
jecxz
repnz
push
fldenv
scas
iret
xor
jns
imul
adc
pop
icebp
vmovlps
dec
ret
or
inc
mull
outsb
cmpsl
dec
or
les
jne
push
jmp
ds
pop
stos
cmpsl
loope
es
adcb
aam
add
clc
arpl
les
pop
enter
repnz
rorb
imul
jle
xor
ss
adc
dec
xchg
les
fcoms
iret
fsts
jg
jne
mov
out
mov
call
insb
pop
mov
aam
shlb
repnz
dec
or
cmp
es
inc
cltd
jne
out
in
mov
mov
or
das
dec
xor
out
jl
in
daa
add
xchg
xor
or
jle
mov
int
cmp
push
mov
dec
push
xchg
xchg
and
lcall
inc
xor
out
inc
xchg
push
fcoms
lods
mov
and
pop
fnstcw
jnp
sub
int3
pop
ljmp
ja
insb
push
imul
movsl
loopne
mov
clc
mov
and
iret
shr
cwtl
sbb
std
aam
xchg
insb
or
mov
cwtl
pop
push
and
aad
sub
sbb
rcl
or
test
mov
mov
ja
sub
cmp
jecxz
loopne
lds
lock
scas
inc
add
ret
cmp
and
shl
hlt
cmp
filds
stos
xchg
shll
stos
jmp
xor
mov
pop
daa
or
xchg
lcall
and
jns
xor
hlt
scas
leave
push
push
dec
daa
mov
pushf
xchg
cmp
push
inc
mov
aaa
xchg
push
sub
cmovnp
cltd
je
icebp
adc
dec
xor
sub
pushf
fidivs
jo
inc
lret
mov
push
ja
repz
fprem1
fsts
pop
mov
or
test
ds
jp
sbb
testb
xorl
sub
inc
add
mov
xor
jp
jno
sub
in
xor
pop
xor
jge
rcll
or
mov
pop
call
fwait
shlb
mov
out
loopne
divb
fmul
cmpsl
mov
in
bound
and
jge
jmp
dec
loope
push
mov
bound
lahf
jge
cmp
adc
add
pop
push
sub
cld
or
or
cs
jmp
push
jmp
mov
xchg
mov
sbb
xor
rorl
xor
xchg
stos
mov
iret
sub
and
adc
or
and
ljmp
in
adc
in
jnp
das
xor
daa
and
dec
and
and
cmpsl
xchg
jbe
xchg
orb
je
dec
ret
xchg
xchg
repz
cmpsl
lahf
lcall
aas
stos
in
outsl
cmc
mov
sbb
cmp
stc
fs
int
lret
push
sub
insl
test
outsb
mov
jbe
test
ds
rclb
sbb
daa
pop
cmp
xchg
add
jp
xchg
dec
and
add
addr16
hlt
cmp
sbb
rcl
rcrb
mov
pop
mov
mov
push
push
sbb
mov
js
popl
bound
cwtl
in
ja
or
clc
pop
lahf
out
popa
mov
lea
addl
fisubl
jnp
addr16
sar
xchg
hlt
dec
hlt
pop
inc
xchg
fwait
push
dec
mov
jmp
xchg
outsl
test
rcrl
outsl
mov
sub
push
mov
inc
imul
or
xor
iret
imul
mov
popf
mov
lcall
and
sub
aaa
xchg
movsb
loopne
jecxz
push
in
fistl
and
fcomp
fistpll
movsb
or
fidivl
adc
xchg
mov
in
adc
and
fldenv
ret
loopne
out
add
sti
adcb
movsb
sbb
and
sub
xchg
jae
mov
mov
arpl
ja
inc
mov
outsl
inc
out
jl
in
enter
push
jl
fwait
ja
inc
enter
enter
shlb
mov
lcall
adc
add
pop
pop
sbb
pop
fstpl
jp
pusha
mov
movsl
scas
fbstp
mov
fsubs
xchg
lds
ljmp
mov
call
dec
cmpsl
add
fstpt
and
inc
mov
mov
push
je
mov
ret
hlt
sbb
mov
mov
cs
sarl
pop
jecxz
push
stos
dec
mov
push
in
mov
xor
je
bound
jnp
lods
and
inc
push
ret
jmp
addb
xor
das
clc
pop
inc
push
inc
xchg
inc
daa
jle
lret
shl
divl
add
fcoml
dec
loope
and
pop
dec
mov
lret
jo
push
jno
aam
fildll
dec
xor
shrl
push
mov
sub
mov
std
xor
aas
aad
lods
rcr
mov
loop
mov
in
sub
mov
into
sbb
fcmovu
push
pop
and
lret
js
dec
dec
test
xchg
xlat
inc
mov
add
adc
daa
out
fistpll
movsb
imul
push
aad
mov
int3
or
mov
cltd
jecxz
and
std
push
js
xlat
xor
sbbb
add
mov
mov
test
lods
mov
sahf
jge
pop
test
pusha
jecxz
ss
mov
jae
clc
mov
mov
insl
pop
push
bound
int
jg
popf
push
jae
pop
ret
mov
test
repnz
and
jbe,pn
mov
jno
es
lds
out
lods
xor
xchg
mov
idivl
inc
ss
pop
mov
sub
cltd
and
cmp
adcl
xor
cld
cmp
pushf
push
mov
faddp
and
aad
ret
lret
imul
mov
xor
gs
test
and
das
dec
out
insb
cltd
push
test
mov
shrl
cmp
adc
xor
stos
popa
shlb
and
pop
jbe
xchg
cmpsl
push
shrb
ljmp
mov
popa
jge
repnz
xchg
icebp
cld
cli
pop
or
cmpl
mov
mov
repz
mov
jmp
sarb
mov
test
cmpsl
or
ds
pop
sahf
mov
popl
mov
adc
jecxz
add
cmpsb
cmpsl
lahf
imulb
inc
in
clc
call
jno
jecxz
jp
int
or
sub
inc
bound
sbb
fistpl
cli
arpl
pop
dec
sbb
outsb
daa
sbb
jle
pop
ja
or
cmc
gs
adc
jmp
sti
cmp
mov
out
ss
hlt
adc
pop
xlat
xchg
ss
fsubrs
sahf
addb
orl
inc
mov
and
ret
inc
xchg
vmulsd
add
outsl
or
push
pop
jnp
fwait
add
repz
int3
pop
rep
pushf
loop
fsubrl
mov
mov
add
shll
push
cmpsb
icebp
jb
inc
or
cmpsb
inc
and
inc
pop
jmp
cmc
push
inc
xlat
roll
pushf
sbb
xchg
in
into
aad
xchg
sbb
rcl
cmp
mov
stos
in
xor
fnsave
or
sub
repz
subl
push
xchg
pop
sub
push
aaa
mov
and
rcrb
cmp
jle
dec
add
sbb
pop
inc
push
fistl
add
insl
lret
gs
arpl
sbb
xor
fst
add
loopne
fmul
mov
adc
fimull
loopne
fucom
imul
stc
and
test
inc
jge
jno
nop
push
imul
fsts
inc
mov
hlt
sub
lea
fldl
clc
inc
cli
push
repnz
movsl
and
adc
inc
jg
inc
popl
jle
lea
xchg
mov
fsubs
test
dec
adc
rcrb
ret
insl
mov
pop
jl
mov
sarl
popa
hlt
icebp
mov
ret
mov
imul
test
lea
xor
test
push
and
mov
adc
int3
inc
hlt
cmp
loope
mov
mov
xor
fldl
xor
stos
sahf
das
xchg
mov
pushl
out
jbe
mov
ljmp
push
push
add
daa
sbb
ds
inc
shlb
mov
or
mov
cmp
roll
je
jle
or
add
push
cmp
sbb
lods
xor
arpl
lahf
pop
icebp
adcb
out
pop
lods
fstpl
inc
ds
cmp
xor
pop
outsl
mov
push
mov
jecxz
loope
cwtl
cmp
push
push
out
das
mov
cmp
test
mov
xchg
stc
cmp
aad
mov
xchg
or
xor
inc
clc
ljmp
jle
dec
cltd
jne
xchg
mov
xor
and
jns
or
ja
cwtl
repz
mov
int3
xor
je
cwtl
lods
and
push
jb
ficoml
mov
bnd
inc
mov
cmpsb
std
aam
inc
push
fwait
push
xchg
mov
push
rol
adcb
jns
leave
push
lahf
push
xor
sbb
jb
add
dec
out
dec
push
jg
mov
ds
in
in
mov
add
cmp
push
xor
add
fcomip
or
mov
in
add
inc
int3
mov
push
add
push
nop
shll
mov
sahf
mov
xchg
pop
xchg
mov
cmp
xchg
push
mov
mov
imul
jb
or
mov
xchg
popa
jecxz
ffreep
bound
das
lahf
mov
mov
insl
dec
mov
rolb
pop
xlat
and
xchg
std
scas
inc
mov
sub
inc
sub
adc
enter
leave
xchg
pop
mov
jle
dec
scas
mov
cmpsl
jb
jns
sbb
loop
je
and
outsl
stos
pop
cmp
pop
test
cltd
shlb
aam
mov
aam
xor
inc
loope
mov
adc
std
stc
add
adc
inc
stos
add
adcb
icebp
adc
pushf
fcoms
mov
inc
add
cltd
or
dec
negb
sub
xchg
sub
cwtl
jmp
repnz
or
addr16
cmpl
dec
and
sub
push
ljmp
jns
pop
cmp
mov
mov
or
cmpl
adc
shrl
cltd
cmpsb
sbb
pop
or
aas
xchg
cmp
je
mov
mov
lret
cmpsb
popa
in
out
mov
loop
mov
sbb
push
and
mov
sub
ret
idiv
sti
das
imull
xchg
xchg
imull
mov
cmpb
xchg
mov
sub
movsl
icebp
fildl
icebp
or
sub
std
jp
sahf
mov
mov
in
jnp
dec
mov
push
call
ficoms
xchg
shll
sbb
mov
sub
xchg
lcall
fsubr
mov
jge
jo
aam
sub
shr
xchg
out
cli
inc
pop
cltd
stos
mov
data16
lcall
js
imul
dec
push
jne
lea
mov
je
lods
add
pop
mov
or
jo
js
je
lret
in
das
shll
aas
push
mov
mov
js
or
dec
mov
fistpll
and
cmpsl
mov
lcall
shll
adc
stos
call
ret
dec
push
dec
outsb
adc
pop
or
and
mov
cmpsb
cmp
cltd
pop
xchg
pusha
rorb
out
lret
xchg
sbb
or
js
sahf
sbb
out
xchg
pop
sti
int
stos
xlat
xor
js
pop
enter
imul
mov
movsb
fsubrp
ror
inc
enter
aaa
scas
jmp
repnz
push
ss
jne
push
push
rol
jne
sbb
jecxz
cmp
ja
lret
sbbb
push
adc
imul
testl
and
mov
or
jo
jg
add
mov
push
pop
jg
mov
inc
mov
dec
mov
push
xchg
sub
sbbl
adc
and
rcl
aas
fsubrs
test
sbb
adc
xor
add
cmpl
in
push
leave
inc
mov
shrb
adc
popa
cwtl
icebp
add
push
pop
or
faddl
adc
xchg
ljmp
push
or
popa
dec
or
cmc
jb
mov
mov
and
mov
mov
xor
xor
cltd
xor
aaa
aas
loopne
xchg
inc
pop
and
cmpl
push
dec
pop
add
addr16
cmp
mov
mov
cld
les
sbb
mov
pop
inc
dec
cs
lods
sarb
imul
fcomps
add
xchg
sti
test
adcb
adc
and
mov
push
adcb
lods
cwtl
dec
inc
and
xor
je
xlat
or
mov
jae
je
xlat
stos
daa
push
adc
jbe
push
lret
add
inc
pop
cmp
or
roll
jne
cmp
inc
and
nop
mov
aaa
std
cmc
jae
sub
sub
cmp
add
out
sub
nop
scas
cmpl
mov
loop
out
popa
shrb
ds
out
pop
mov
jnp
rol
int
cltd
data16
outsl
push
jns
movsl
mov
adc
aam
in
dec
mov
leave
jnp
mov
cmp
sub
ret
push
aad
adc
sub
sbb
mov
movsl
mov
mov
mov
repz
frndint
aas
cvtps2pd
jns
fildll
popf
nop
sub
daa
mov
inc
sub
out
in
sub
pop
push
nop
pop
insl
aad
mov
jns
xchg
and
std
outsb
mov
ds
ljmp
hlt
jo
push
or
jg
jbe
fldln2
xor
fimuls
lds
add
in
out
aas
mov
repnz
mov
sbb
push
outsb
mulb
inc
cmp
repnz
jo
cmp
jl
sbbl
filds
lods
pushf
jmp
fldenv
push
hlt
sub
sub
adc
nop
loopne
jmp
cli
sbb
ret
lods
shrl
call
arpl
mov
jbe
mov
ret
subl
add
jl
push
idiv
push
neg
ja
cltd
mov
ss
lret
lock
pop
dec
xchg
pushf
lret
jmp
pop
mov
fwait
cwtl
add
sub
xchg
sar
fisubrl
fbld
jecxz
mov
lods
mov
gs
ret
jg
sbb
lret
out
dec
out
repnz
cmc
das
xor
mov
out
fisttps
jle
call
add
xchg
cmp
andl
aas
mov
nop
xor
testb
mov
jmp
xchg
adc
dec
push
mov
call
fimuls
and
jl
mov
and
pop
and
into
aam
xchg
icebp
lret
mov
mov
and
data16
inc
sbb
xlat
mov
or
mov
rcll
mov
xchg
lret
loop
lcall
iret
adc
xchg
dec
inc
push
mov
loop
lds
mov
mov
sti
and
pop
scas
pop
clc
movsb
jb
push
jp
xchg
sub
ds
rcrl
push
xor
pop
jge
les
push
sub
push
sbb
xchg
push
xchg
movsb
jae
lods
repnz
decb
test
jnp
add
mov
outsl
xor
fsubs
aad
in
push
cmp
cmc
repnz
adc
xlat
and
sbb
idivl
mov
rcr
enter
sahf
movsb
xor
sbb
mov
sbb
or
das
dec
jle
push
add
adc
pop
and
pop
int3
test
ret
mov
sbb
int3
insl
xor
js
aam
mov
popf
adc
push
shl
inc
lock
subb
pop
inc
pop
hlt
jmp
dec
mov
ficoms
xor
out
xchg
lds
not
push
out
inc
jae
rorl
inc
stc
int3
cmp
sub
sub
lods
inc
mov
push
out
pop
rcll
dec
daa
inc
mov
and
loop
adc
mov
mov
movsb
xchg
cmp
cmc
inc
push
or
test
pop
xorb
mov
add
inc
fists
sub
adc
pop
in
inc
mov
loop
int
imul
sti
sbb
std
popa
test
and
in
loopne
cmpsl
das
lock
dec
lods
jmp
lahf
test
cmp
sbb
cmc
cli
mov
xchg
add
in
xchg
sub
push
inc
sahf
mov
adc
pop
rcll
mov
lds
or
insl
inc
insl
adc
dec
cmp
mov
add
arpl
cmpsb
or
mov
adc
pop
out
pop
jmp
xchg
xchg
adc
xchg
pusha
arpl
imul
roll
xor
sbb
adc
pop
pushf
inc
inc
xlat
cmpsl
outsl
push
fisttpl
mov
xchg
lock
loopne
sub
adc
fnstsw
add
push
sub
mov
je
fisubs
cmp
add
adc
fiaddl
push
movsl
add
mov
xchg
test
jecxz
mov
aam
adc
enter
mov
icebp
decb
push
data16
adc
mov
push
subl
aam
push
jnp
inc
es
pop
xchg
xchg
dec
mov
insb
sub
or
mov
jo
divl
es
push
xchg
or
adc
negl
cmp
arpl
sbb
mov
pop
mov
inc
bound
fwait
and
les
imul
lret
stc
shrb
popf
push
mov
mov
faddl
icebp
and
push
inc
mov
xchg
push
ret
mov
adc
subb
mov
mov
nop
dec
or
incl
cld
int3
mov
inc
pusha
ljmp
test
pop
jmp
or
jecxz
shll
int
incb
mov
inc
popf
ja
rcrb
mov
pop
stc
mov
push
sub
cmp
push
int
jecxz
jle
arpl
arpl
sbb
pop
inc
cmp
sti
movsb
gs
inc
jne
sub
arpl
rorl
pushf
xchg
in
jecxz
jmp
mov
jle
cmp
iret
mov
mov
jg
adc
mov
inc
in
push
mov
sub
add
mov
dec
leave
cld
hlt
inc
push
dec
stc
sbbl
jo
add
cmp
pusha
inc
or
cmp
mov
fisttpl
adc
adc
jae
push
mov
cld
mov
mov
jb
or
push
pop
adc
repz
inc
push
in
mov
xchg
push
adc
add
sti
dec
ja
sub
push
cli
int3
inc
imul
fidivrl
data16
aaa
cmp
inc
push
adc
iret
mov
dec
rcrb
out
icebp
lock
int
outsb
daa
cmp
or
sub
mov
cmp
mov
dec
push
cli
addr16
bound
mov
out
jecxz
xchg
jbe
xchg
daa
mov
xchg
cmp
push
and
mov
stos
push
push
or
jo
addl
jle
jmp
or
int
rcrl
cmc
cld
arpl
xchg
pop
push
lret
sub
scas
in
dec
mov
mov
sub
pop
dec
mov
and
iret
ret
add
jnp
pop
mov
push
into
inc
sbb
repz
imul
mov
in
icebp
ljmp
mov
insl
xor
pop
or
sbb
and
jbe
xor
pop
lret
mov
jle
in
fiaddl
mov
imul
inc
cs
pop
push
pop
outsl
es
adc
jmp
aam
aam
data16
add
nop
out
shll
mov
lret
std
xor
ret
sbb
or
add
add
ret
push
mov
pop
ficoms
enterw
outsl
mov
clc
sti
mov
sub
jno,pn
movsl
imul
leave
sbb
dec
das
jmp
pop
or
sbb
sbb
out
jae
insb
notl
jp
xor
lret
inc
out
mov
xor
pop
test
idivl
xor
sbb
mov
clc
mov
popa
dec
mov
pop
cwtl
or
mov
jmp
pop
outsl
mov
adc
mov
mov
sahf
std
dec
mov
pop
add
pop
inc
ret
mov
pushf
imul
call
xchg
xchg
or
popa
adc
imul
add
dec
ret
test
sahf
cmpsl
push
pop
xchg
arpl
jg
ficomps
sahf
adc
mov
xor
das
repz
sub
lret
inc
lods
and
cltd
mulb
fcoms
dec
rcl
lcall
aaa
movsb
sub
mov
pop
out
fnstcw
cmpb
fs
cmp
out
or
mov
popa
lahf
leave
fimull
out
xchg
or
mov
xor
les
add
out
inc
inc
lds
arpl
xor
ud1
mov
dec
fcoms
adc
pop
pop
std
mov
mov
dec
cvtdq2ps
adc
js
imul
dec
or
shll
int
add
enter
jae
test
mov
cltd
add
loop
xchg
cmp
test
call
mov
xchg
sbb
repz
adc
dec
pushf
jp
rcl
stos
fisubrs
jb
bound
dec
and
pusha
push
xchg
sbbb
mov
jb
dec
jg
out
add
push
push
mov
insb
mov
xchg
icebp
testl
scas
or
fstps
movsl
push
mov
hlt
and
test
mov
adc
jmp
out
test
mov
pop
shrb
aaa
mov
xchg
fmulp
mov
daa
inc
sub
iret
inc
fwait
xchg
hlt
dec
pushf
repnz
jno
add
mov
xchg
rcrl
jle
push
sbb
add
mov
or
sub
sbb
fdivrs
repz
daa
lret
mov
flds
outsb
hlt
mov
roll
inc
mov
ljmp
pop
xchg
cmp
fcmove
lods
jle
pop
mov
stos
mov
inc
adc
add
cli
cmpsb
cltd
jmpw
mov
jb
ficompl
int
test
stos
push
xchg
pop
sbb
loop
xor
int
jecxz
mov
xchg
cli
cmpsl
pop
int
sbb
push
scas
arpl
ja
cmp
cmp
pop
sti
mov
mov
andl
in
std
rolb
cs
in
xchg
pusha
repz
pop
movsl
jbe
xor
nop
adc
jbe
addb
sbb
icebp
jnp
bound
das
mov
dec
mov
push
cwtl
or
jp
inc
ret
nop
cmp
stos
push
dec
mull
mov
pop
outsb
aas
mov
inc
cmpsl
outsb
mov
jnp
jae
and
and
adc
push
mov
cwtl
or
and
push
out
inc
mov
es
push
jb
lar
out
mov
push
pop
xor
xor
add
and
add
inc
jb
mov
cmp
movsb
jle
pop
call
outsb
mov
add
imul
jg
cmc
mov
stos
push
sbb
pop
cwtl
push
ret
popa
dec
pop
xchg
lds
sbb
mov
and
mov
adc
jnp
subl
iret
or
dec
and
pop
jmp
jae
daa
or
js
mov
push
hlt
lods
mov
mov
sub
in
or
push
jns
cmp
mov
mov
cmp
in
dec
repz
rcll
sub
xchg
out
fnstcw
lea
xchg
loope
aad
and
cmc
jo
pop
add
pusha
shrb
mov
mov
loopne
inc
negl
cmc
inc
andl
hlt
pop
dec
test
jne
mov
hlt
sbb
pop
and
clc
shlb
insb
scas
lret
add
test
lock
addr16
jnp
into
mov
adc
fistl
push
data16
jnp
js
out
int
jne
data16
outsb
sub
cmp
adc
push
lods
pusha
mov
mov
mov
xor
or
adc
aad
and
idiv
notb
pop
test
push
mov
xor
xchg
repnz
or
mov
adc
xchg
push
in
add
xchg
stos
jg
stos
xchg
fsubl
shld
add
cmpsl
jl
adc
loope
jl
jbe
or
fcomip
sub
fisubl
dec
cld
lcall
push
xchg
sub
imulb
mov
aam
lcall
in
sbb
sub
sahf
jne
aas
mov
push
jbe
mov
pop
insb
or
adc
aad
movsl
out
sbb
sub
and
or
lret
mov
mov
in
imul
outsb
sbb
dec
orl
insl
push
xor
fcomp
xlat
mov
or
ja
je
mov
xor
ret
shrb
flds
aad
or
ret
pushfw
push
repnz
shll
or
stos
lods
fcoml
stos
les
xor
xchg
xchg
test
fsubrl
mov
pop
jle
sbb
xchg
inc
xor
subl
repz
mov
sbb
jmp
cmp
popf
pop
clc
adc
lahf
fldl2e
std
sub
xchg
shrl
jb
xor
fldcw
out
push
and
lock
sbb
lcall
pop
jge
into
pop
xor
jae
xor
mov
push
out
inc
cld
jle
fstpl
add
leave
mov
jge
mov
in
and
xor
sbb
enter
pop
dec
enter
test
mov
xchg
iret
jmp
shll
pop
nop
enter
outsb
test
cmp
dec
add
mov
pop
imul
xchg
das
loop
pop
icebp
jp
fistps
jnp
cltd
jg
push
push
std
push
mov
adc
push
push
rcll
adcl
sbb
test
xlat
lds
inc
add
lret
xor
mov
jp
push
rep
mov
lods
xor
or
pop
loope
repnz
add
cwtl
mov
bound
repnz
xchg
in
adc
jmp
fisubs
aas
mov
imul
loop
mov
cmc
fcomip
int
aaa
cmp
outsb
sbbl
les
ss
or
std
jl
xchg
pop
insl
sti
xchg
mov
fldt
sub
adc
mov
push
push
clc
imul
les
adc
xchg
add
cmc
iret
aaa
cmp
fcomps
mov
mov
out
ss
jae
mov
mov
or
stos
and
mov
pop
negb
xchg
mov
icebp
movsl
cmpsl
std
arpl
mov
orb
pop
stc
jmp
dec
in
das
cmp
adc
sti
movsl
mov
adcl
nop
mov
dec
lret
popf
aas
imul
sub
movsl
mov
push
push
or
hlt
ljmp
push
xor
or
pop
jmp
scas
nop
dec
xor
aam
xchg
xchg
pop
mov
call
jne
cld
pop
and
dec
dec
mov
xor
cld
in
add
out
scas
insl
out
ret
sbb
hlt
fwait
pop
push
mov
fidivrl
pop
jmp
rorl
lcall
shlb
pop
fldt
mov
mov
pop
mov
insl
push
sbb
dec
fwait
dec
cmc
enter
movsl
stc
rcrl
mov
lret
fxch
jg
dec
sahf
outsl
out
jmp
imul
pop
movsb
movsl
test
jne
inc
sub
cmp
adc
inc
ret
push
push
lret
out
fisttpl
mov
inc
jbe
lahf
adc
xchg
mov
add
imul
jge
iret
ds
cmp
jg
data16
fistpll
or
push
cltd
or
test
sub
in
jg
jb
adc
hlt
int3
push
outsb
into
mov
mov
imul
js
jg
adc
mov
ficompl
dec
jae
lahf
push
gs
add
and
aas
mov
shlb
mov
scas
or
std
sarl
movsb
frstor
outsb
fs
repz
rol
push
call
icebp
pop
ss
jns
mov
adcb
mov
xchg
bound
sbb
out
loope
bswap
jge
sbb
ret
rsqrtps
imul
ljmp
xlat
mov
movsb
test
xchg
inc
sbb
fimuls
inc
push
dec
xor
clc
mov
inc
pop
or
xchg
jecxz
and
xchg
std
cmp
ds
call
cwtl
jnp
or
lods
adc
add
or
lock
dec
cmc
jno,pt
sbb
mov
nop
or
mov
push
shlb
dec
lfs
or
push
add
loope
xchg
jp
push
mov
test
imul
mov
inc
je
fdivl
push
fsub
ret
pop
fadds
rcrb
and
movsl
lea
mov
add
or
lds
push
cli
inc
mov
loop
cmp
rcrl
pusha
sub
loope
subb
push
xlat
inc
inc
push
rclb
jmp
repz
xchg
pusha
xchg
sbb
inc
cli
jge
mov
mov
enter
in
mov
ret
push
mov
add
aad
mov
cmp
inc
inc
into
jg
sti
push
pop
lret
add
mov
enter
ficompl
xchg
clc
pusha
ds
out
mov
mov
and
lcall
and
loopne
push
mov
loopne
arpl
cmp
stos
inc
xchg
andl
xor
mov
fs
clc
mov
cmp
ljmp
push
lods
scas
pop
stos
movsb
dec
movsb
xor
mov
or
imul
cwtl
jbe
jns
mov
xchg
push
pop
cmp
xlat
add
aaa
ja
and
lret
mov
repnz
xor
les
orl
std
and
dec
jbe
leave
inc
imul
jbe
stc
xor
sub
xchg
adc
inc
mov
call
mov
popf
cmp
mov
jns
movsb
loop
mov
and
push
addr16
out
mov
into
jno
sbb
fucompp
jmp
adc
xlat
into
and
mov
push
mov
push
popa
mov
lret
in
add
mov
icebp
push
jmp
xchg
test
loope
mov
jnp
mov
jg
imul
push
mov
or
aad
push
push
fwait
xor
cmp
or
push
push
or
bound
mov
out
and
pop
xor
xor
pop
cmp
pop
addr16
jb
sbb
xchg
lods
aad
inc
sub
xor
pop
mov
sti
xlat
shll
push
aas
js
fstp
out
and
dec
jp
inc
iret
outsb
sub
xchg
leave
js
mov
cmpsl
and
imulb
daa
sar
inc
lcall
xor
addl
jae
mov
cmp
add
outsl
call
negb
mov
push
jle
and
cmp
or
repz
xor
fiaddl
mov
and
lcall
cmp
sub
fldt
mov
adc
xchg
repz
or
arpl
outsl
xchg
push
shrl
movsl
leave
and
arpl
leave
scas
jg
mov
loopne
pop
int3
or
jmp
xlat
and
add
bound
mov
ljmp
stos
push
lahf
pop
mov
into
mov
in
lock
ja
sbb
gs
test
adc
cs
mov
mov
mov
or
pop
out
mov
jo
cmc
shll
call
cld
cld
je
xchg
movsl
sti
es
cli
sbb
jmp
cmp
insl
aad
cmp
jg
jg
enter
ja
sbb
test
hlt
popa
push
lret
mov
aad
mov
stos
dec
int3
adc
xor
pop
jge
jl
xchg
push
ds
dec
xchg
aam
jnp
imul
and
mov
hlt
data16
mov
je
mov
xchg
call
bound
dec
jnp
fdivl
mov
sub
mov
jmp
inc
es
mov
dec
mov
xor
mov
icebp
push
mov
dec
test
xchg
ffreep
cld
cmp
loopne
in
pop
mov
mov
test
xor
outsl
push
xchg
decb
jge
jl
xor
dec
in
cld
mov
aaa
or
sbbl
mov
arpl
add
mov
leave
and
mov
adc
dec
andb
pop
xchg
xlat
enter
cmpsb
shlb
adc
dec
jl
loopne
mov
add
xchg
xchg
out
aad
jne
jl
cmpsb
leave
lea
loope
push
ja
mov
and
cmpsl
mov
sub
lods
dec
out
inc
pusha
or
outsb
jmp
dec
scas
rsm
adc
jle
push
jb,pn
push
inc
and
xchg
push
enter
out
jo
imul
push
sahf
mov
adc
sub
les
mov
or
hlt
imul
and
mov
in
or
lea
int3
iret
aam
mov
mov
test
or
cltd
add
xor
xor
dec
dec
sbb
fadd
adc
outsb
int
inc
push
addr16
ss
in
pusha
inc
bound
push
dec
push
lods
pusha
pop
mov
subl
add
aad
add
mov
mov
fldenv
cwtl
xchg
scas
loope
mov
cmpl
cmp
and
out
lret
inc
xlat
stos
sub
lds
rcrl
pusha
into
lahf
or
or
divl
adc
in
mov
mov
es
adc
xlat
ss
cmp
movsb
mov
repnz
subl
mov
punpckldq
jnp
ljmp
fistpl
das
cli
xchg
jmp
sti
sub
pop
call
pushf
and
es
in
sarb
es
mov
jnp
xchg
daa
xchg
scas
clc
and
cmp
dec
xchg
inc
jg
leave
out
push
pop
xorb
xor
sahf
dec
mov
push
cmp
fnstenv
push
repz
lock
test
arpl
arpl
mov
repnz
dec
fcoms
dec
imul
scas
rclb
jae
mov
xor
jbe
and
inc
xor
push
inc
insl
sbb
int3
cmpb
jae
sub
rcr
lret
and
std
and
addr16
cmp
fsubrs
mov
inc
pop
lret
ds
ja
pusha
ret
sahf
xchg
adcl
jnp
stos
mov
push
pop
pop
jp
dec
lock
loopne
out
cmpb
adc
unpcklps
int
mov
arpl
cs
or
mov
movsb
repnz
imul
sahf
gs
sub
negb
and
cwtl
pop
cmpb
xor
psubq
mov
mov
mov
mov
lea
inc
sub
stos
sarl
negl
jno
xor
dec
sbb
je
popa
dec
jmp
das
sbb
or
cmc
stos
xor
nop
ljmp
push
imul
es
xor
push
push
notl
ljmp
push
inc
addr16
movsl
popa
cmp
fisubl
stos
pop
shr
fwait
sub
outsb
jno
mov
out
ss
sbb
xchg
sub
fcomps
jb
test
inc
jle
fsubs
xchg
pop
in
test
sub
ror
fadds
lcall
bound
add
cmp
shrl
movsb
pop
cmp
fwait
jnp
add
shr
fwait
test
mov
add
dec
popl
fdivs
sbb
jae
das
jno
inc
pop
clc
adc
sub
rorl
and
aad
notl
mov
movb
pop
rcll
adc
inc
push
push
outsb
pusha
jge
xchg
mov
call
fwait
les
in
pop
ja
addr16
incl
mov
daa
mov
cwtl
insb
xor
ret
xchg
test
fs
and
or
sub
pop
daa
dec
int3
arpl
xor
insb
fsubr
sbb
shlb
stc
inc
test
je
sub
jb
cmpsl
pop
dec
push
push
pushf
dec
outsl
mov
sahf
pop
testl
pop
lret
stos
outsb
int
inc
xchg
xchg
imul
fiadds
xor
lret
movsb
sub
jg
lahf
test
sub
adcl
jge
xchg
daa
xchg
sbb
cli
adc
adc
pop
push
cmp
xlat
and
and
pop
push
push
lret
stos
rorb
mov
mov
jle
dec
push
dec
adc
daa
pusha
cmp
sub
and
xchg
in
cmpsb
adc
pop
call
pop
lock
sub
leave
lock
adc
dec
lcall
divl
mov
push
mov
shrl
imul
lods
xchg
bound
js
test
lret
or
pop
cmpsb
addr16
ficoms
add
mov
mov
int3
rclb
add
fnclex
cli
jl
daa
shrl
clc
je
push
pusha
ljmp
xchg
xor
mov
xchg
add
popa
mov
subl
pop
and
popf
loope
fnstcw
add
arpl
loope
xchg
mov
jmp
loopne
sbb
orl
mov
lds
cmp
rorl
repnz
rorb
pop
int3
in
loope
in
std
xor
popf
jecxz
pop
xchg
lcall
lea
jbe
fsubs
incb
inc
aas
int3
imul
shlb
ret
decb
mov
pop
dec
xchg
adc
ret
fimull
jge
mov
mov
sub
fsubl
pop
inc
xchg
xchg
fwait
add
je
mov
push
lock
mov
outsb
cmp
lods
pop
xchg
test
scas
adc
test
mov
push
push
cwtl
loop
dec
js
add
xlat
jp
pop
lds
cmpsb
outsl
xor
xchg
mov
call
scas
or
ljmp
sahf
movl
les
loopne
iret
or
mov
data16
cli
add
mov
int
out
xchg
pop
ret
dec
mov
nop
call
mov
mov
push
xor
into
xor
sbb
or
push
and
ficompl
cmp
sti
or
imul
jae
inc
pusha
ja
in
xor
and
mov
fdivs
mov
cs
xchg
mov
jge
xchg
pop
repz
or
add
stos
mov
and
or
or
mov
push
jmp
xchg
sub
cltd
fwait
loop
fbstp
aaa
call
test
and
movsl
rorl
dec
outsb
sarl
and
mov
sti
dec
mov
jl
jge
add
xor
jg
loope
xchg
mov
push
std
sbb
mov
popa
icebp
sbb
aaa
mov
sub
xchg
lock
out
pop
and
dec
je
int
js
pop
lcall
fsubrp
and
stos
and
jno
xor
popa
push
lds
incb
xor
out
sbb
sub
fistpl
push
cmp
jo
mov
adc
adc
enter
mov
xor
leave
xchg
repz
and
ror
out
mov
in
outsl
lea
out
xchg
mov
add
inc
pop
push
or
or
movsb
sar
push
push
out
stos
fwait
mov
fwait
call
or
jle
call
jecxz
dec
in
cltd
pushf
mov
enter
out
jne
loopne
inc
sahf
xor
mov
add
hlt
push
jnp
out
xchg
xor
outsb
stos
inc
cs
insb
adc
mov
push
cmp
dec
imull
mov
ror
mov
xchg
sub
in
into
or
cmp
sbb
test
pop
mov
test
pop
jbe
xor
dec
sub
enter
sti
loop
cmpsb
int3
xchg
xor
push
jns
fstpl
xchg
out
sarl
push
mov
test
ret
lods
loop
in
jo
mov
mov
lea
fisubl
mov
imul
out
in
xchg
outsl
xor
stos
sub
push
lods
fcomi
pop
mov
nop
cmp
add
sbb
out
xor
xchg
out
cld
imul
test
outsb
pop
mov
push
cltd
push
add
fidivl
xor
dec
add
adc
mov
mov
jnp
lock
ficomps
push
ljmp
insl
add
das
push
imul
push
or
inc
sahf
mov
xor
adc
std
lods
xlat
outsb
push
insb
cltd
stos
cmpsl
testl
rcl
addr16
mov
push
xchg
dec
dec
xchg
lock
loop
cltd
or
lds
roll
stos
xor
pop
pop
push
sub
leave
mov
aas
mov
inc
mov
enter
sbb
sub
cli
lock
add
jmp
lea
pop
push
aad
ljmp
cmpsl
lock
and
lahf
jg
maxps
idivb
push
adc
je
jle
mov
jo
and
lret
mov
or
inc
adcb
mov
clc
jbe
dec
lcall
mov
push
nop
mov
sti
nop
cmpsl
scas
int
push
out
jbe
pop
pop
adc
test
inc
cwtl
in
adc
jmp
pop
xor
pop
shl
xchg
sbbl
jb
iret
ljmp
jns
mov
xchg
xor
push
xor
cmp
fldcw
xchg
pop
ja
loope
add
std
push
gs
pop
popl
mov
fisttps
les
xchg
jg
shl
fs
xor
insl
xchg
adc
add
repnz
fcompl
shlb
xor
pop
lret
arpl
xor
lods
imulb
and
add
hlt
insb
jle
jno
shl
add
xlat
in
xor
mov
inc
ret
decl
popa
out
jecxz
lahf
or
std
fldl
lcall
sbb
bound
mov
pop
adc
jae
pop
shlb
dec
dec
mov
sbb
inc
mov
pop
arpl
ds
pushw
mov
sarb
cmp
cmc
std
jge
cmc
mov
dec
clc
inc
lds
adc
mov
cltd
xchg
xor
popf
in
out
inc
pop
mov
ss
call
pusha
mov
les
test
test
xchg
sbb
inc
insl
into
nop
sub
mov
adc
roll
cmp
cmp
mov
xchg
add
inc
inc
enter
sahf
enter
push
cmp
jmp
test
test
out
fidivrs
ss
xchg
adc
enter
mov
mov
iret
jle
adc
mov
imul
dec
ret
rcrl
push
rcr
inc
mov
gs
mov
jle
inc
imul
fstpt
pop
add
cmp
or
rcl
outsb
or
out
dec
adc
shr
in
inc
test
cltd
ficoml
mov
scas
mov
jmp
add
dec
mov
push
in
xchg
sub
xchg
daa
iret
out
push
sbb
stc
lods
frndint
push
adc
shrl
cmp
int
adc
adc
cmp
inc
xor
dec
mov
cli
mov
and
pop
imulb
lds
sbb
out
adcb
add
add
lods
andl
bound
adc
movsl
and
addb
push
out
or
sub
rcrb
int3
daa
jne
das
jns
popa
popa
sbb
push
or
movsl
jmp
call
xor
mov
mov
das
insl
cmp
sub
lahf
dec
outsl
stos
adc
dec
sub
cmp
aam
push
imul
xor
push
into
mov
in
sbb
arpl
xor
sbb
and
enter
adc
lds
inc
adc
xor
cmpsl
cli
push
inc
cld
sub
bound
test
aam
push
mov
aam
fsubrp
jae
call
cmp
push
xor
dec
sbb
into
pop
enter
popf
dec
pop
jae
cmc
pop
in
mov
cmp
imul
push
adc
clc
jg
test
call
xor
in
aad
xor
fisubl
inc
and
push
and
fildll
mov
std
int3
icebp
and
lods
xor
sbb
jmp
cmpps
aas
in
xchg
cs
repz
sbb
push
arpl
pop
mov
jecxz
aad
popl
jle
mov
gs
call
xchg
dec
dec
stc
sarb
sub
outsb
xchg
decb
and
adc
in
mov
test
mov
psubd
dec
cwtl
inc
xchg
sahf
mov
aam
call
mov
fucomip
fcmovu
pop
pop
lds
pop
push
sbb
idivb
and
fsts
adc
pop
addr16
lret
mov
into
or
lods
lods
test
cltd
push
enter
and
and
insl
add
jb
mov
adc
mov
xchg
cmp
movsb
mov
cmp
inc
add
xchg
in
add
add
add
mov
mov
or
ljmp
jg
repz
sarb
dec
sbb
outsl
stc
add
loope
dec
mov
sub
arpl
stos
sub
adc
push
div
xor
cld
add
test
cmp
push
jo
and
mov
jmp
jle
jnp
xorl
xchg
fadd
add
fildll
push
add
add
faddl
dec
xchg
xchg
inc
or
fwait
out
mov
pushf
insl
dec
cld
xlat
sti
lret
ja
pop
jmp
sbb
cmp
stc
insl
int3
ja
jo
mov
mov
insb
stc
outsb
mov
ret
imull
dec
pop
jmp
pop
and
fstl
adc
repz
in
cmpsb
push
fisubrs
add
mov
adc
adcb
iret
adc
jp
icebp
int
pushf
jne
adc
cltd
push
jg
inc
and
jecxz
cmp
hlt
jecxz
shlb
xor
xchg
xor
jge
jge
fwait
popa
push
xorl
xor
dec
test
stos
bound
and
cmp
stc
adc
xor
xchg
jnp
addr16
sbb
xchg
inc
jno
mulb
cmp
bound
pop
adc
cmp
bound
mov
test
jmp
and
mov
lret
add
push
ljmp
xor
push
xchg
cli
repz
sub
or
test
dec
jecxz
adc
mov
aaa
push
xchg
jl
in
int3
pop
rol
lods
xchg
rcl
cmp
aad
ret
cmp
hlt
mov
insb
or
pandn
pop
xor
mov
dec
into
mov
push
mov
movzwl
enter
je
lds
jmp
std
sub
jl
mov
add
xchg
and
stc
daa
sub
lea
popa
push
stos
iret
call
mov
enter
in
in
xchg
adc
inc
repnz
insb
andb
fcmovne
jecxz
mul
cmp
popf
push
in
in
daa
call
out
mov
stos
push
ret
push
or
outsb
sti
ret
outsl
loop
shrb
xor
mov
sbb
mov
daa
mov
jl
aaa
xchg
loopne
cmp
add
movsl
inc
mov
sub
jae
int
stc
fisubrs
or
orl
idivl
push
inc
rcrl
addr16
pop
daa
add
jp
fists
mov
xchg
loopne
pop
dec
jle
movsb
push
mov
cmc
pop
leave
insb
sub
inc
sub
sbb
sub
add
cs
sbbl
cmp
mov
mov
inc
lock
or
lods
dec
or
scas
bound
xchg
push
lahf
lea
inc
andl
out
sahf
insl
and
sub
dec
pop
ret
mov
out
or
out
std
bnd
ja
push
jae
aaa
sub
fs
push
int3
pop
sub
adc
lds
xchg
pop
jbe
call
cmp
ret
mov
inc
sub
fcmovne
cmc
mov
jl
je
enter
cmp
pusha
stc
cmp
test
mov
pmaddwd
lods
pop
add
sbb
out
xor
ret
hlt
fwait
pop
mov
stos
cmc
lret
pop
or
shlb
sbb
lret
arpl
int
test
and
inc
pop
lret
cmp
pop
adc
cwtl
jmp
out
mov
ja
pop
fwait
imul
fmul
add
mov
subl
fadds
xchg
pop
sbb
nop
fmul
mov
sub
insb
mov
mov
mov
ljmp
mov
jmp
xchg
mov
dec
gs
mov
out
shrb
scas
inc
jmp
mov
push
jge
cltd
into
test
adc
mul
cltd
jp
stos
dec
or
int
add
jmp
sahf
aam
inc
cmp
sarl
pop
fisttpl
andl
fwait
scas
fidivrs
mov
lds
fisubs
fmuls
test
adcl
push
std
in
into
daa
pop
mov
cmp
pop
andl
xor
in
jns
pop
pop
es
xchg
and
lcall
jo
dec
out
mov
lods
push
jbe
shrl
inc
scas
push
jnp
aas
inc
icebp
sub
mov
fwait
push
mov
pop
pop
out
inc
mov
das
sahf
cmp
xor
sarl
sub
or
jno
shl
xor
xchg
addr16
out
testl
subb
les
jno
rcrb
push
insl
leave
in
or
xor
flds
adc
adc
or
sti
inc
pop
rcll
mov
lods
inc
or
cmp
arpl
mov
or
in
iret
push
pop
scas
xchg
arpl
pop
sub
into
cli
sub
fprem1
filds
mov
push
popf
mov
aaa
shrl
cmp
cmp
mov
sbb
test
fldcw
ljmp
or
cmpsl
imul
notb
test
mov
dec
cs
mov
fiaddl
mov
xchg
lods
mul
adc
in
dec
lret
inc
mov
adc
icebp
arpl
dec
xlat
adc
aaa
jp
adc
sbb
jl
cmpb
in
mov
sti
xchg
mov
sub
sub
sub
and
insl
repnz
jbe
push
xchg
lret
cli
fisttps
cmp
mov
xor
jbe
mov
cmp
mov
adc
inc
pop
inc
scas
popl
in
push
daa
daa
sub
sbb
int3
popf
test
push
shlb
sbb
sub
inc
push
rolb
pop
repz
xor
lds
imul
xchg
bound
cli
repz
repnz
stos
cmp
mov
xor
mov
xor
inc
xchg
mov
ljmp
xor
insl
inc
imul
fs
ficoml
dec
mov
gs
leave
adc
addr16
mov
ja
faddl
cmp
mov
dec
jmp
sbb
pop
shrb
add
adc
cld
bound
inc
cltd
movsb
jnp
push
stos
fcmove
test
dec
ja
loopne
mov
cmp
add
in
jo
xchg
outsb
stos
adc
lret
out
lea
inc
les
into
aas
fimull
jge
add
jle
xchg
test
cmc
in
lcall
sahf
mov
jno
mov
inc
lret
pop
mov
ds
lock
loopne
popf
push
popf
inc
les
pop
push
out
add
mov
adc
scas
sub
jb
jl
and
scas
enter
or
mov
xor
push
jne
and
imul
push
mov
push
push
test
test
dec
das
out
repnz
jo
mov
out
mov
jns
mov
test
inc
ds
int3
push
ret
hlt
mov
fwait
out
scas
jo
mov
addr16
adc
shlb
xchg
adc
shll
pop
push
mov
mov
sbb
or
mov
mov
xor
xchg
push
inc
aam
jne
inc
ss
cmp
ret
cmpsl
out
int
or
inc
cmp
sub
mov
js
lret
xchg
mov
pop
push
js
lock
enter
xorl
testb
out
mov
pop
cli
mov
das
outsl
push
int
das
mov
cmp
sub
jne
adcl
xor
or
movsl
xchg
pop
rclb
je
addr16
mov
scas
pushf
xor
sbb
rcll
inc
adc
xchg
cli
jp
or
mov
scas
jle
shl
lods
bound
xchg
subl
les
push
cmp
loop
pop
popf
mov
adc
cmp
mov
in
xchg
dec
sbbl
push
adc
pop
mov
cmpsb
xchg
jmp
stc
clc
pop
xor
sbb
ss
ss
mov
add
push
outsl
clc
inc
cmp
lods
mov
je
mov
and
rcl
cmp
test
sbb
xchg
shlb
enter
test
jge
shll
cmp
setne
icebp
adc
subb
cmc
dec
orb
pusha
sub
movsl
decb
leave
pop
add
neg
es
pushl
jecxz
push
dec
xor
cmpsb
ljmp
test
fldt
lods
pusha
cltd
adc
wrmsr
test
xchg
test
outsb
jecxz
fdiv
sub
dec
mov
repnz
sbb
addb
push
ret
sahf
push
stos
js
adc
outsl
jno
pop
into
mov
inc
jle
movsl
adcl
adc
or
or
mov
mov
push
pop
insb
or
mov
xchg
jne
stos
xchg
jns
pop
dec
enter
push
jecxz,pn
mov
ror
lahf
rorb
enter
jle
and
push
cltd
jl
sahf
cmp
adc
loop
movsb
pop
xchg
testl
aad
inc
dec
dec
or
lcall
insb
addr16
ds
pop
stos
cs
pop
mov
ljmp
and
dec
sbb
jnp
rcrb
jl
test
loop
push
sub
lods
sub
out
push
movsl
push
pop
lods
push
popa
cld
lcall
rol
add
pop
pop
daa
fimuls
inc
push
lcall
rcl
lcall
pop
loopne
xchg
jle
dec
cmp
mull
ret
repz
xchg
mov
push
inc
jne
lret
fnstcw
push
pop
push
mov
xchg
jo
inc
and
test
loop
test
xorl
cmp
out
inc
mov
adc
aam
xorb
xchg
pop
push
in
movsb
pop
ds
icebp
je
into
int
jle
fwait
shl
jo
rorl
pop
push
dec
push
mull
out
pop
andl
mov
jle
sbb
push
xchg
jns
icebp
or
sub
scas
mov
inc
add
inc
fdivp
lds
mov
je
or
sbb
imul
fs
push
sbb
addr16
sbb
roll
inc
iret
gs
lea
scas
xchg
pop
aaa
insl
orb
hlt
out
or
push
mov
mov
pop
leave
or
js
pop
sub
dec
nop
xchg
and
cmp
dec
aam
stos
popa
push
out
mov
in
jns
lcall
dec
mov
mov
mov
pop
sbb
cld
inc
dec
test
push
into
jbe
cwtl
add
xchg
pushf
mov
cmp
js
imul
pushl
inc
and
xlat
cmp
pop
fstcw
mov
mov
shlb
shlb
mov
aas
sub
cmpsl
mov
lds
push
sub
inc
mov
in
adc
xorl
adc
stos
cmp
inc
mov
rcrl
divl
jno
ds
movl
insl
xor
inc
in
mov
adc
jo
bnd
xchg
dec
test
fs
adc
nop
sub
out
and
xor
pop
lds
loopne
js
pop
test
lds
pop
std
mov
repz
popl
dec
subl
lahf
es
inc
push
cmp
jb
fnsave
jmp
mov
sbb
stc
mov
cmp
test
scas
out
dec
push
inc
outsb
jmp
gs
stos
lret
repnz
pop
mov
cmpsl
xchg
fstpl
sbb
sub
sti
mov
xlat
mov
imul
mov
dec
fwait
sub
ret
or
int
ss
add
mov
mov
inc
bound
enter
push
push
pop
jle
pop
out
repz
lret
sbb
xchg
insl
shll
push
adc
add
out
ds
or
pop
movsb
idivb
jo
inc
mov
jl
mov
out
adcl
test
aam
and
and
ret
popf
in
pop
shrl
or
lcall
mov
jns
add
test
fiaddl
mov
jle
mov
mull
adcb
lahf
mov
outsb
jns
or
repz
stos
jns
jle
pop
lds
push
sahf
push
adc
outsb
lods
fstpl
addr16
test
or
sub
shl
or
aam
push
push
hlt
inc
sub
inc
test
inc
stc
pop
cmc
rcrl
arpl
jne
imul
nop
push
pop
mov
mov
outsb
pop
enter
fnstenv
cmp
and
xchg
test
test
stos
scas
push
lret
sbb
rcll
ja
pop
test
mov
push
mov
rcrb
and
sbb
xor
push
pop
cmp
jl
negb
loope
ja
notl
push
xchg
adc
mov
loopne
or
sbb
cli
data16
scas
insl
jbe
mov
ss
xchg
repnz
in
pop
hlt
inc
in
pop
popf
push
popf
fadds
dec
jbe
xchg
test
out
cmp
mov
jnp
scas
mov
int3
outsb
mov
cmp
ja
sub
pop
sti
dec
ficompl
pop
push
xchg
pusha
shrl
movsl
lcall
push
inc
jp
lcall
fists
outsl
jp
test
push
jp
mov
mov
or
jg
or
push
das
jo
sub
mov
xor
fsubrs
shlb
cltd
mov
fwait
cmp
ss
jge
push
arpl
or
push
jo
xchg
lods
lods
dec
mov
cmp
scas
mov
sahf
loope
rolb
movsl
dec
test
sub
push
jecxz
sahf
mov
mull
sti
jne
in
inc
push
cli
cmp
mov
jl
test
pop
adc
mov
cmp
mov
test
pop
fdivr
dec
add
push
fmuls
adc
add
xor
mov
mov
jne
xchg
test
int
xchg
sub
jge
sbb
add
clc
in
jno
dec
xor
push
push
mov
pop
jmp
sahf
fstl
call
mov
in
dec
adc
push
pop
jne
mov
ds
xor
out
xchg
gs
cmp
lock
mov
test
xor
push
sarb
mov
ljmp
loopne
in
out
adc
push
loope
cmp
sbb
push
jp
mov
test
pop
in
insl
jge
adc
lods
sub
sahf
jbe
test
jbe
cmpsb
xor
sub
sub
lods
mov
push
dec
push
or
fadds
add
xor
mov
jb
jbe
add
scas
cmp
push
icebp
push
ss
jae
pop
jns
call
pop
clc
mov
adcl
ficompl
orb
mov
sbb
cmp
js
jmp
sub
add
dec
mov
movsb
xchg
mov
cmp
fwait
sbb
idivl
add
inc
sub
test
outsl
mov
cmpsb
outsb
out
movups
fistps
xor
mov
in
sub
mov
mov
ret
sarl
mov
mov
or
mov
aam
sbb
inc
bnd
lcall
jge
mov
outsl
and
iret
sarl
lods
ret
int
mov
fxch
in
arpl
outsl
pop
daa
popl
pop
lea
pop
adcl
inc
ss
out
sbb
adc
inc
xchg
inc
jp
insl
dec
add
stos
popa
call
mov
in
mov
nop
adc
in
mov
aas
sub
loope
xor
mov
add
addr16
cmp
jno
gs
fiadds
fcomp
inc
mov
add
popf
add
jp
enter
cmp
sub
aas
adc
pop
pop
mov
mov
ljmp
arpl
inc
push
or
and
fsubr
mov
sub
dec
xchg
and
aam
lods
and
lea
mov
pop
das
or
test
ror
mov
xor
rcrb
add
mov
js
push
jge
packssdw
and
mov
and
loopne
inc
sub
gs
cmp
jo
test
fisubl
loop
lock
mov
dec
mov
aad
pushf
lds
and
mov
sti
xor
fs
mov
mov
push
xchg
fstps
iret
push
adc
cmpsb
sahf
cmp
sub
xlat
dec
arpl
sub
dec
std
xor
jmp
out
push
xor
outsl
or
incb
cli
loopne
das
or
push
and
ljmp
dec
xor
adc
jb
mov
cld
xor
add
jb,pn
jecxz
mov
pop
lret
fists
push
addl
aaa
pop
push
hlt
dec
and
sbb
orb
push
pop
mov
fbld
test
icebp
dec
jle
cltd
mov
adc
in
inc
das
push
ja
popa
cmp
jns
clc
mov
stos
or
pop
mov
push
dec
inc
stos
jns
jge
pop
mov
xor
inc
movsl
popl
xchg
mov
dec
cli
cltd
dec
pop
lock
clc
stos
les
imul
pop
mov
mov
xor
sbb
and
cmp
sbb
push
jnp
imul
mov
js
xor
ljmp
mov
cmp
pop
cmp
adc
push
mov
pop
inc
aad
dec
int3
cli
int
repz
mov
pop
int3
jge
xchg
imul
pusha
add
xor
ss
mov
xchg
loope
mov
clc
pop
xchg
mov
push
fdivl
mov
lods
fidivrl
xchg
cmpsb
fcmovb
test
adc
fcompl
mov
or
or
mov
push
adc
pop
adc
call
aad
xchg
add
dec
xor
stos
ficoms
insb
push
mov
xor
sti
sub
in
mov
push
mov
clc
inc
loope
lds
add
adc
add
shll
bound
jg
dec
inc
fisubrl
das
int
lret
mov
dec
pop
cmp
push
data16
gs
call
test
fistpll
mov
jae
mov
cli
out
daa
lret
mov
test
pop
pop
cld
jl
push
mov
push
ret
mov
add
call
loopne
adcb
pop
gs
push
cmp
xor
inc
add
icebp
mov
sub
out
xchg
neg
rcll
call
mov
inc
dec
mov
test
push
cmp
nop
mov
add
and
out
fiadds
inc
push
scas
enter
xchg
out
outsl
mov
push
ret
daa
adc
xor
jmp
lods
imul
xor
popa
ljmp
in
inc
inc
scas
pop
and
cmp
inc
lock
lods
jo
rorl
push
xchg
mov
sbb
dec
pop
imul
xchg
jg
xchg
sbb
cmp
inc
sahf
aam
xlat
sti
dec
push
or
jno
lret
xor
mulb
mov
jns
addb
dec
or
popf
jb
jbe
add
mov
mov
mov
hlt
cwtl
sti
ljmp
scas
mov
and
adc
adc
inc
or
clc
loopne
pushf
push
jb
add
pusha
ja
out
sbb
aaa
add
int
mov
lods
sbb
jmp
insl
mov
insb
jo
scas
or
cmp
mov
mov
add
jne
out
push
cmpb
shrl
in
adc
sbb
push
ljmp
sti
loopne
jecxz
dec
pushf
shl
orb
cpuid
cmpsl
push
add
pop
xor
sarl
ja
sarl
hlt
movsb
ss
or
outsl
mov
insb
jno
cwtl
dec
sbb
pushf
jp
imul
mov
adc
inc
cmp
xor
std
out
popf
lds
repz
inc
and
xchg
fisubs
add
lods
jbe
inc
cmpb
repnz
enter
jo
xlat
es
ds
fwait
aam
loopne
push
mov
xchg
insb
jno
test
addl
mov
je
jecxz
in
insb
push
ret
inc
add
in
xchg
mov
aad
vpacksswb
xor
aas
mov
jne
or
push
ja
mov
xchg
loope
std
les
fcomip
push
call
jle
cmp
pop
inc
nop
stos
enter
xchg
movsb
inc
iret
mov
out
sub
int
stos
cmp
imul
cmp
sbb
insl
mov
addr16
add
inc
nop
das
dec
loope
xor
in
out
stc
lcall
xlat
stos
mov
bound
scas
cmc
jbe
aam
mov
inc
xorl
jno
xchg
push
es
dec
dec
sti
fistl
js
jecxz
xlat
outsb
popa
sub
rclb
mov
rcll
dec
aad
push
sbb
pop
popa
loopne
mov
mov
add
jg
std
movsb
mov
imul
popf
xchg
insb
adc
jae
iret
fmuls
int3
sbb
add
into
pop
xlat
sbb
mov
xchg
neg
pusha
mov
dec
cmp
lret
shlb
test
lods
jnp
mov
int
arpl
js
nop
jno
push
pushf
sbb
stc
cmp
sbb
push
divl
jne
sub
add
stos
pusha
or
mov
test
pop
xchg
neg
lret
pop
push
sbb
xlat
push
mov
mov
dec
pusha
ret
mov
sbb
sub
push
aaa
iret
cs
mov
jb
push
rcr
mov
arpl
inc
xchg
xor
sti
ljmp
inc
add
push
sbb
int3
push
xorl
and
mov
and
inc
addr16
inc
adc
inc
adcb
stos
add
pop
loop
and
fstl
adc
lods
mov
mov
xlat
je
push
sub
push
mov
movsl
ficoml
loop
dec
mov
or
repnz
dec
push
sahf
pop
fisttpll
sub
out
repz
cmp
iret
clc
push
int3
insb
push
xchg
int3
and
adc
cmp
fdivrs
jno
and
mov
xor
daa
arpl
addb
fcmovne
out
and
pusha
lods
enter
dec
dec
in
adc
test
and
inc
or
fcompp
jnp
fsub
mov
adc
call
mov
dec
daa
dec
insb
and
xor
cmp
fsts
jae
cs
stos
aad
push
jne
adc
sub
jo
enter
jl
icebp
notl
or
jno
mov
or
inc
push
les
int3
sahf
std
sub
hlt
push
jne
pop
lds
lea
inc
aam
fsub
sub
pusha
jns
fwait
mov
roll
mov
dec
cld
cld
icebp
push
int3
mov
je
push
psraw
mov
pop
lock
inc
pop
or
ds
pusha
cmp
rolb
mov
jae
rep
jae
mov
pop
jecxz
in
dec
mov
and
push
inc
push
fstl
sbbl
int3
fs
add
push
out
jmp
gs
push
std
jmp
cmpsl
sbb
loope
xchg
inc
xor
fcmovne
mov
jno
sbbb
aad
sub
push
enter
shlb
jl
popl
add
adcb
mov
addr16
rorb
stos
bound
dec
enter
fldl
in
cld
cmp
ljmp
arpl
cmp
xor
mov
fiadds
lds
fidivl
mov
push
dec
and
insl
sbb
cmp
mov
int
dec
pusha
jl
outsb
xor
sub
lcall
mov
idivb
xor
pusha
push
cmp
cwtl
mov
pop
loop
dec
inc
mov
in
mov
cmc
mov
loopne
cltd
inc
push
lock
push
pavgw
add
ficomps
mov
xor
cltd
mov
enter
sub
repnz
incl
cmp
adc
std
adc
je
dec
rorb
xor
aaa
insl
inc
movsb
pop
sub
xchg
mov
cld
pushf
jmp
push
add
sub
pop
jecxz
mov
imul
mov
aas
ds
sbb
out
js
sub
inc
arpl
mov
es
dec
movsb
ds
push
jl
lock
fucom
and
adc
decl
or
ret
lock
xor
pop
mov
push
jl
in
push
lahf
shll
jl,pt
cmp
iret
aas
add
xor
inc
cmp
repnz
lock
xchg
adc
push
dec
cwtl
int
outsl
push
or
xchg
std
inc
dec
insb
dec
cmp
sub
test
cmpsb
rcrb
dec
cld
nop
add
repnz
js
mov
aaa
lahf
popf
mulb
inc
push
cmc
pop
push
std
xor
xor
mov
rdpmc
test
out
bound
push
gs
push
inc
es
insb
or
insl
pop
sbb
mov
xor
mov
xorb
stos
inc
mov
mov
or
pop
mov
mov
insl
rcrl
out
or
pusha
jbe
add
loop
pop
adc
jbe
call
fildll
das
cmc
out
pop
xchg
xor
pop
lcall
pushf
or
mov
in
pop
and
sbb
mov
inc
lcall
loopne
xor
push
inc
mov
lods
outsb
inc
sub
pop
aad
repz
ljmp
mov
pop
cmp
sbb
mov
inc
out
out
xor
or
fistpll
inc
jge
mov
mov
dec
call
and
mov
aam
xchg
mov
popa
int
sbb
inc
mov
dec
mov
nop
add
mov
sbb
je
mov
adc
popa
and
jg
jle
pop
ljmp
pop
cmp
fsts
repnz
in
iret
xchg
js
xchg
xor
out
outsb
jle
push
mov
sub
dec
mov
push
jbe
inc
xor
test
jb
into
scas
sub
sub
insb
leave
out
xrelease
xor
in
ficompl
nop
jb
mov
xchg
lahf
pop
dec
insl
punpckhwd
sahf
mov
pop
jmp
enter
scas
js
sarb
sbb
adc
fdivrl
mov
mov
sbb
pop
ds
push
jne
and
cmp
dec
ds
dec
stc
jge
push
aas
rorl
fnstsw
jne
pop
pop
xchg
je
iret
sbb
jge
inc
sbb
cld
lds
cltd
je
subl
xchg
out
or
mov
mov
pop
mov
js
and
movsl
jae
sub
cmp
mov
inc
add
fidivrl
push
sub
out
mov
shrl
jns
into
insb
pop
mov
sti
int
test
cmc
mov
incl
xor
adc
mov
cmp
out
pop
push
popa
jns
in
lock
ret
bound
xchg
mov
arpl
mov
jmp
adc
push
push
mov
sbbl
cmp
xchg
cli
fstpt
das
xor
std
or
push
int3
dec
fucom
dec
pop
loope
lahf
loope
adc
loop
xchg
imull
mov
addr16
push
lret
cli
in
push
jns
das
and
sub
inc
insl
scas
mov
adc
pop
dec
sub
xchg
mov
insb
jmp
into
lret
inc
push
fistl
enter
std
rorb
pop
xchg
sbbl
fmuls
int3
or
sub
xor
add
xor
fs
leave
addl
mov
shll
xchg
cwtl
jb
testb
outsl
sub
push
popf
add
lcall
or
and
push
mov
pushf
mov
outsl
hlt
test
das
add
lods
cld
xchg
fiaddl
dec
mov
mov
adc
mov
inc
jge
jecxz
stos
and
stc
xchg
lret
scas
sbb
push
xor
bound
cmp
sub
cmp
mov
xchg
in
cwtl
push
and
cltd
sti
mov
inc
adc
jb
sti
or
cmp
xchg
or
in
adc
cmp
push
push
std
out
dec
aaa
in
shlb
cmp
fcompl
in
and
push
or
xchg
xchg
nop
stos
add
pop
stos
shrl
push
leave
xor
icebp
shll
mov
js
and
dec
popf
subl
cmp
sub
movsb
push
iret
jns
scas
inc
mov
xor
mov
or
popf
inc
jmp
outsb
sti
out
mov
data16
jne
xchg
inc
loop
cmp
add
jno
push
std
movsb
xchg
and
shll
pcmpgtb
das
xchg
sub
pop
push
xchg
fwait
or
jnp
xchg
sarb
loop
std
outsl
ds
lcall
jmp
mov
sahf
push
orl
add
arpl
xlat
adc
decl
scas
or
jo
xlat
push
fmul
nop
or
push
inc
inc
mov
mov
hlt
mull
mov
jg,pt
inc
xor
add
xchg
movsb
ljmp
fdivrl
jno
fs
call
lods
mov
es
mov
in
inc
lea
xchg
mov
lods
in
push
xor
loop
je
into
xchg
cwtl
inc
or
iret
iret
jnp
inc
cs
or
pop
and
mov
xchg
xor
or
dec
not
add
dec
and
nop
xchg
xchg
push
and
jg
mov
stos
and
mov
fsts
fists
subb
imul
pop
sub
inc
xor
xchg
pusha
lock
out
out
data16
add
jmp
shl
cmp
xchg
xor
rcll
or
inc
enter
inc
dec
fdivs
popf
out
and
sar
imulb
enter
push
shlb
mov
cs
ljmp
mov
gs
add
and
mov
fs
or
movsb
in
stos
push
push
adc
fidivrl
adc
fiadds
adc
push
je
inc
cli
jl
rcrl
and
add
or
sub
sti
cmp
mov
jo
jle
mov
scas
scas
aaa
mov
movsb
and
sbb
repnz
test
fbld
outsl
ljmp
ret
jnp
test
sub
xor
cltd
dec
pop
enter
push
cmp
dec
hlt
push
je
xchg
add
push
and
adc
inc
in
adcb
xchg
or
ret
sbb
decb
or
cmp
subb
mov
lret
jle
xor
aas
repz
test
adcl
push
lret
std
xor
daa
dec
sub
aad
out
pcmpeqd
jbe
push
push
sahf
mov
mov
jg
push
jb
ret
or
push
add
xchg
or
ss
dec
and
add
mov
xorb
jmp
add
mov
xorb
mov
iret
and
jmp
jmp
add
sbb
inc
xchg
lods
decb
inc
and
daa
adc
xchg
and
lock
jmp
ljmp
lods
in
nop
sbb
movsl
jno
push
xchg
test
and
and
adc
mov
push
ficoms
jbe
ret
or
pop
lcall
jp
xchg
test
lea
and
push
ret
pop
fidivrl
jo
mov
lods
inc
out
dec
xor
sbb
inc
mov
and
bound
or
mov
fbstp
cwtl
es
fwait
iret
dec
movsl
mov
push
pop
sbb
mulb
jmp
ret
xchg
push
xchg
pop
xchg
cmp
loop
fbstp
gs
add
repz
fs
mov
ficoms
adc
lea
push
or
iret
cli
mov
testb
es
loopne
jo
sub
repnz
pop
lods
pop
dec
push
mov
mov
and
out
xchg
inc
pop
push
push
and
or
shl
sahf
std
jl
mov
andl
les
in
mov
dec
jecxz
rcll
cli
popa
adc
push
imul
ficompl
and
dec
cmp
outsl
sub
movsl
notb
imul
push
jge
push
pop
cli
fadd
mov
outsl
dec
aad
mov
jnp
push
sbb
cmc
fisttpl
sahf
lods
mov
and
pushf
mov
dec
test
xchg
and
lods
xlat
rcll
cli
xchg
and
xchg
sbb
xor
insb
movsb
inc
movsl
xor
shll
jns
std
scas
data16
or
xor
cltd
mov
push
push
out
xchg
jbe
or
imul
sti
out
loope
mov
pusha
mov
sbb
fisubrs
enter
jmp
lahf
aaa
ret
pushf
xchg
imul
dec
mov
fisubs
mov
add
adc
add
mov
pop
es
push
push
insl
pop
stc
int
add
cmp
pop
mov
mov
pop
sub
negl
sub
lcall
loop
mov
in
imul
dec
xorl
push
pop
fimuls
sbbl
push
cli
and
xchg
mov
jge
mov
and
xchg
sbb
gs
scas
mov
mov
pushl
popf
xchg
out
mov
xchg
sub
int
pop
mov
xlat
add
mov
outsb
cwtl
stos
add
clc
mov
mov
push
inc
sbb
rcll
ss
jb
jle
sub
ror
push
sbb
mov
xchg
push
adc
loop
int3
and
mov
adc
mov
call
test
pop
test
mov
lods
stos
js
fistpll
mov
repz
inc
and
xchg
xchg
push
pop
push
js
mov
daa
dec
ja
mov
cmc
into
adc
repz
xchg
rcpps
dec
out
fcmove
fnsave
insb
xlat
xchg
aad
decl
adc
cli
mov
shrb
xor
scas
icebp
mov
movsl
mov
add
mov
je
pop
adc
pop
fisttpll
js
adc
stos
mov
add
cltd
push
jmp
jb
call
jle
movl
sti
pop
mov
inc
cli
xchg
test
push
cmp
cmc
lret
data16
loopne
imul
dec
aaa
fbstp
cmc
sbb
fcmovbe
into
loop
les
push
pop
test
add
mov
jecxz
mov
dec
fistpll
stos
in
cmc
int3
lods
lcall
cmp
push
loop
loop
mov
and
hlt
das
mov
int
popa
pop
mov
mov
jne
adc
jle
mov
lock
in
cmpsl
inc
or
or
pushf
lds
test
push
cmp
sbb
fidivl
movb
sub
mov
out
out
jle,pn
mov
sub
or
adc
cli
gs
frstor
lock
mov
xchg
sub
add
mov
add
mov
lods
cmpsl
fsubp
mov
pop
test
mov
lods
pop
test
adc
test
stos
bound
nop
dec
jecxz
xor
mov
mov
sub
mov
in
cmp
push
push
mov
test
xor
out
sub
lret
test
jb
imul
pop
cwtl
add
test
pop
sub
sub
ljmp
rcrl
push
push
sub
ds
mov
scas
sbb
push
mov
jl
ret
jg
sub
dec
scas
les
rolb
out
outsl
leave
movsl
enter
out
movsb
push
mov
vsubps
cld
xor
cltd
stos
fcomp
fists
arpl
lock
mov
or
sar
add
outsb
aas
jp
dec
insl
mov
pop
cld
cli
xchg
xor
lods
fcomps
out
fnstenv
inc
inc
mov
scas
mov
movsb
dec
call
rorl
sahf
outsl
pop
jg
cmc
scas
jge
adc
push
mov
pop
dec
cmc
mov
mov
jbe
fs
and
mov
int
push
add
sbb
mov
and
sti
sub
mov
xchg
inc
adc
sti
insl
ret
imul
aad
ret
subl
xor
add
insl
jo
std
lds
js
dec
and
stos
jno
jecxz
and
mov
sub
pop
out
jns
mov
mov
pushf
dec
dec
test
xchg
mov
bnd
aas
fldl
lds
aam
in
cli
cmp
sub
enter
mov
mov
push
outsl
imul
jg
cli
gs
jb
lods
inc
sub
push
imul
pop
and
adc
in
adc
in
jl
add
pop
xor
cltd
shl
dec
xchg
or
mov
fcompl
and
inc
adc
cmp
jle
mov
frstor
ret
jp
mov
jo
xchg
sub
cmp
pop
hlt
hlt
lods
outsl
js
mov
inc
xchg
jecxz
dec
push
mov
xchg
dec
sbb
jbe
mov
mov
xchg
jo
sti
hlt
scas
cmp
aaa
pop
das
pop
jbe
xor
and
mov
mov
rorl
pop
div
insb
ja
and
mov
outsl
pop
mov
fs
mov
js
push
out
loop
ljmp
repnz
mov
in
inc
ds
jecxz
xor
push
fwait
xor
ljmp
pusha
in
add
mov
dec
fidivs
dec
fists
inc
pushf
mov
int
cmp
push
dec
repnz
xor
pop
loope
add
push
popf
mov
mov
push
out
pop
xchg
stc
stos
or
repnz
shrb
xor
sbb
add
mov
mov
not
popf
jmp
pop
jb
andl
adc
and
inc
xchg
mov
call
stc
lods
roll
sbb
lret
pop
mov
loop
loop
lahf
jno
mov
stos
cmp
sub
cmp
xor
fsubl
push
stc
cltd
cmp
cmp
stos
lock
popa
or
mov
and
mov
xor
dec
push
jle
pop
and
test
fdivl
or
adc
cmpsl
loop
dec
or
xchg
loop
jae
dec
sub
push
pop
jecxz
bound
roll
mov
xchg
sbb
cmp
sbb
ss
jecxz
negb
adc
sarl
add
jl
dec
jns
xor
add
mov
dec
cmp
loope
data16
cmp
cmp
outsb
andb
scas
lock
repnz
or
sub
sub
test
mov
mov
in
dec
mov
insl
fcomi
jp
pop
pushf
adc
sub
dec
rorl
dec
cmp
scas
mov
fisubrl
std
aaa
les
xchg
scas
push
adc
pop
mov
mov
cwtl
adc
hlt
cmc
mov
into
stos
push
jge
call
push
into
xchg
stos
or
hlt
inc
cld
or
repz
data16
in
mov
lahf
pop
fs
pushf
xlat
adc
cmpl
mov
rcr
mov
flds
jge
inc
mov
sub
subb
movsl
or
imul
sub
dec
jecxz
mov
dec
sbb
adc
xchg
je
sub
pop
xchg
scas
enter
mov
cmp
js
shrb
xchg
lahf
popf
in
out
cmp
xlat
dec
pop
dec
loop
sbb
push
bound
hlt
aaa
nop
pop
dec
sub
add
divb
loopne
test
mov
iret
mov
sub
lock
pop
mov
andb
mov
pop
cli
and
inc
jl
jge
ret
sub
sar
test
lret
addr16
int3
in
lock
cwtl
inc
jbe
xor
lahf
cs
inc
cwtl
push
popa
js
or
sbb
sahf
stos
out
iret
jbe
sbb
mov
lods
inc
test
jmp
dec
call
sub
insb
aam
test
stos
cmp
imul
sbb
sub
adc
lods
sub
and
pop
das
das
lcall
cld
addr16
push
sbb
xchg
sub
mov
arpl
dec
in
mov
test
jno
sbb
mov
dec
fs
dec
ret
pop
scas
out
mov
rep
sbb
or
stos
idivl
pop
lods
bound
cmpsb
pop
outsl
pop
xlat
inc
ja
dec
mov
inc
lret
in
shlb
pushf
insb
aaa
aas
push
hlt
test
add
js
add
mov
jp
mov
jmp
negl
jns
sbb
pushf
cltd
push
mov
mov
mov
push
popa
jne
adc
outsl
fwait
cmp
dec
ret
pop
inc
movsb
push
fiaddl
mov
push
fidivs
int
jno
or
cmp
iret
jp
jge
mov
push
inc
aad
out
pop
push
xchg
cmp
add
mov
cmp
dec
inc
insb
pusha
fiadds
sub
in
scas
into
clc
notb
cs
mov
cmc
cmp
xchg
divl
push
mov
es
add
mov
gs
sbb
stc
add
std
aam
leave
repnz
pop
inc
cmpsl
fwait
daa
push
fsub
ja
mov
dec
xlat
push
decb
loopne
cli
mov
inc
add
out
testl
loopne
leave
js
lods
insl
fistl
faddl
sub
jl
mov
cli
jl
imul
push
loopne
nop
sbb
push
imul
popf
cltd
int3
rorl
shlb
and
or
jle
jmp
std
lock
mov
cmp
arpl
xor
cwtl
je
ja
in
and
loopne
cwtl
test
mov
lcall
dec
pushf
int3
outsb
xor
data16
mov
icebp
push
adc
mov
frstor
insb
mov
ljmp
or
mov
aas
add
sbb
add
push
idivl
clc
stc
push
cmc
rcrb
rcll
adc
push
mov
sbb
push
stc
shlb
insl
sbb
xchg
pop
mov
incl
pop
int
dec
or
inc
jns
sub
sub
xchg
es
xchg
xor
rolb
jno
inc
jp
or
push
pop
mov
lods
lock
push
ljmp
lock
cli
faddl
dec
mov
jecxz
xor
xor
adc
enter
pop
sahf
int3
sbb
cmp
mov
mov
es
fisttpll
loope
sub
cmp
dec
mov
ljmp
jl
test
inc
push
outsl
mov
dec
xchg
mov
xchg
jle
scas
mov
sti
dec
mov
popa
jae
push
loope
cltd
mov
je
lods
call
into
inc
push
mov
jae
mov
push
leave
mov
mov
jge
add
push
mov
aaa
xchg
lods
sub
cmp
test
add
dec
cmp
je
add
and
mov
faddl
mov
into
mov
fucomip
or
pushf
and
adc
mov
mov
sti
inc
jne
sar
inc
test
and
push
or
cld
sub
in
les
rcrb
push
mov
fcoms
lock
fisttps
mov
iret
popf
aad
add
sbb
lea
mov
xchg
fadd
arpl
movsl
xor
push
sub
scas
cmp
xchg
pop
and
mov
sbb
sbb
fdivr
divl
cs
jmp
cmp
mov
inc
and
add
sub
stc
div
pop
inc
ret
xor
scas
adc
jno
movsl
mov
fwait
rclb
pop
mov
fisubs
add
pushf
lahf
mov
mov
lds
jno
xchg
and
inc
insb
movsl
lock
adc
pop
mov
clc
push
lret
sub
cmpsl
testl
dec
sub
arpl
dec
cmc
mov
mov
orl
addr16
xchg
ror
test
cmp
pop
gs
mov
call
aam
inc
in
xchg
pushf
and
test
dec
in
cmp
das
add
jmp
mulb
outsl
addb
cmp
aaa
adc
xor
je
or
cmpl
sub
mov
stc
sti
rol
or
adc
in
sub
rorl
cmpb
mov
jo
jbe
mov
js
jno
into
cwtl
and
xor
popa
jl
xchg
jle
push
sub
aaa
pop
stos
aam
mov
fbld
aas
test
scas
push
insb
popa
in
imul
ja
test
jb,pn
sub
hlt
fildll
sub
movsb
xchg
jmp
inc
insb
pop
sub
movsl
rcrb
mov
cmp
scas
mov
mov
sbbl
iret
imul
xchg
adc
insb
addl
fidivrs
out
sub
fdivrs
cmpsb
icebp
gs
lret
icebp
add
cld
and
pusha
pop
fcomps
jo
je
sub
sub
lcall
dec
fiaddl
mov
pop
flds
push
out
gs
sbb
cltd
sbb
lcall
jmp
cmp
frstor
sti
into
inc
cmp
cld
xchg
cmpb
insl
mov
mov
fdivl
push
aad
negb
add
add
push
sbb
test
dec
cmp
push
mov
xchg
xor
pushf
push
mov
inc
ljmp
popf
outsb
mov
divb
les
add
sub
lock
sbb
sarl
pop
xchg
daa
dec
es
jecxz
xlat
push
movsb
adc
xchg
jns
daa
pop
movsb
mov
and
dec
sbb
fmul
popa
sti
outsl
mov
jb
mov
and
mov
fcmovnu
jl
mov
xor
pop
mov
pop
call
inc
test
jecxz
inc
push
mov
sbb
cmc
adc
repnz
outsl
sbb
insl
or
std
cli
mov
icebp
and
out
shll
nop
pop
rcll
push
adc
xchg
int3
add
gs
xor
js
sub
lea
insl
inc
sbb
adc
xor
mov
dec
pop
pop
mov
xor
adc
shlb
pushf
xor
sub
cmc
mov
test
movsb
and
loopne
test
outsw
jo
dec
xlat
shl
das
xchg
pop
add
inc
les
fs
xlat
prefetch
sbb
push
or
popa
jno
sahf
cli
dec
cmpsb
and
test
push
lods
xchg
push
or
lock
push
int
into
popf
shlb
sbb
lds
mov
das
pop
mov
and
mov
jbe
aas
cmp
jnp
inc
jl
jns
push
adc
push
movsb
pop
cmp
je
mov
fcoms
imul
xchg
enter
fwait
out
enter
shll
fildl
imul
pop
das
in
push
inc
imul
push
jl
sbb
mov
add
or
in
pop
jno
fsubl
mov
je
in
popa
call
clc
mov
out
icebp
jmp
push
cmc
dec
or
mov
sbb
int
and
ret
outsl
jmp
cmc
jle
cmp
jno
icebp
sti
adc
adc
std
test
push
sti
les
bound
shl
out
aad
loop
and
adc
inc
inc
mov
dec
mov
cs
loopne
shl
hlt
mov
jo
adc
fwait
mov
stc
scas
cmpl
cmc
shlb
lock
pop
pusha
bound
in
lret
cmpsl
or
rcrb
loop
shrb
sub
enter
test
mov
mov
icebp
push
or
mov
imulb
fisttpll
sub
xor
enter
test
repz
gs
clc
loopne
cmpsl
out
push
rcrb
es
push
loop
loopne
pushf
xchg
rcr
lahf
fisttpll
repz
pop
rcrb
cli
ljmp
mov
arpl
imul
xor
or
mov
out
mov
nop
clc
sbb
ja
sbb
push
inc
pop
sbb
stos
mov
cmpsl
jmp
cmp
push
xchg
cli
add
or
pop
loopew
jae
ja
add
std
addr16
add
adc
int
pop
push
les
mov
xorb
mov
push
dec
sub
outsl
or
leave
lret
outsl
push
lock
or
fs
into
int3
ret
cli
add
in
int
ret
dec
stos
popa
call
mov
int3
sbb
sahf
andl
lahf
sbb
xchg
insb
enter
shl
sbb
xchg
add
or
push
cmp
or
out
cwtl
sbb
inc
sbb
pusha
pusha
out
in
mov
rclb
mov
rcll
jne
sub
shlb
mov
loop
ss
cmp
mov
add
sbb
fimull
cmc
test
dec
jns
dec
xor
shll
rcrl
inc
inc
ficoml
mov
inc
add
mov
jo
lock
mov
mov
arpl
inc
inc
sbb
test
jae
xor
call
outsl
testb
mov
rcll
push
mov
xlat
inc
add
jg
les
stos
cltd
jbe
pop
lea
xorl
inc
lods
fwait
adc
dec
sbb
and
sbb
xchg
addr16
xlat
jne
cmpsb
stc
jge
and
xchg
cmpsb
nop
outsb
sub
dec
pushf
out
mov
imul
or
inc
gs
push
push
movsl
mov
sub
mov
maskmovq
cmp
cli
stos
shll
insl
dec
stc
out
xor
int3
mov
lds
mov
into
fwait
popf
enter
in
push
call
xchg
adc
sbb
cmpsb
imul
popf
xor
cmc
and
iret
shrl
fildll
push
pop
xor
sbb
movsl
daa
pop
bound
mov
loop
loop
imul
loope
pop
inc
jmp
dec
ljmp
insl
cltd
mov
pop
jmp
aaa
and
scas
rcr
mov
pop
dec
push
mov
cwtl
pop
orps
out
dec
pop
lds
mov
lret
add
or
sub
imul
mov
fsubrl
fisubs
loope
mov
lds
cmpsb
mov
leave
jno
lcall
daa
addr16
incl
lcall
hlt
mov
jns
mov
mov
fmuls
xchg
add
fidivrs
mov
push
cvtps2pd
loope
inc
mov
jmp
andl
mov
jbe
fsubrs
fnsave
mov
push
fnstsw
add
inc
mov
pop
jmp
jle
add
jmp
loop
mov
or
mov
std
pushaw
mul
out
cld
pop
pop
cmp
movsl
dec
subl
out
shrl
push
ret
mov
jmp
sahf
scas
out
mov
stc
xchg
test
cwtl
ss
clc
icebp
mov
sti
push
sbb
rorl
aaa
mov
and
mov
sbb
inc
cmp
dec
jle
push
sub
inc
mov
jae
lret
and
jae
pop
mov
lret
mov
mov
leave
idivb
xchg
test
sbb
jl
xchg
sbb
mov
cmpsb
cltd
enter
incb
or
inc
jmp
sbb
or
ret
push
mov
push
jg
cld
mov
je
loopne
sbb
cld
daa
or
rcl
xchg
mov
mov
icebp
jl
rorb
cmc
push
mov
int3
fistps
dec
popl
or
and
push
inc
inc
and
pop
jns
bound
xchg
into
jp
add
ljmp
xchg
repz
push
lods
sbb
out
lods
clc
shl
inc
pop
scas
loope
ds
lahf
push
outsl
out
mov
mov
in
cmpsl
andb
fadd
push
adc
or
dec
add
mov
in
shr
test
cmp
add
cs
inc
mov
cmp
adc
clc
lcall
push
cmpsb
mov
adc
push
pop
pop
int
mov
cmp
movsb
lret
jg
pusha
scas
jmp
cmpsb
adc
js
pop
sbb
cmpsb
push
mov
imul
xchg
jae
call
fstpt
xchg
xorb
test
mov
loope
out
push
dec
add
mov
outsb
push
push
inc
mov
out
lods
or
xor
rcll
decl
adc
das
dec
lods
sbb
xor
les
das
push
xor
push
bound
and
movb
cmp
bnd
lods
dec
movsl
mov
push
or
into
sbb
pusha
cltd
mov
mov
icebp
pop
call
pop
int3
sbb
in
push
setp
add
cmpsb
iret
rorb
lret
lcall
or
fnstsw
movsb
outsl
in
mov
gs
fwait
cmpsb
push
cmp
mov
insb
popf
cld
hlt
subl
fsubr
or
xor
fmull
scas
orl
jae
loope
lods
pop
movsl
push
jmp
jecxz
js
fmull
mov
mov
jb
test
adc
scas
fcomip
leave
adc
lods
adc
ret
ret
call
imul
jbe
pop
xchg
jb
xchg
loopne
rorb
cmp
movsl
xor
pop
stos
jne
xor
ret
fistl
mov
and
movsl
arpl
mov
leave
imul
or
test
mov
xchg
mov
fildl
in
push
adc
xor
jecxz
mov
out
mov
pop
pusha
push
push
add
pop
mov
arpl
and
out
out
test
jae
sbb
sub
rolb
sub
xor
mov
nop
or
mov
subb
push
loopne
leave
pusha
in
and
cmpsb
out
mov
jge
inc
xor
ret
leave
call
pop
mov
daa
add
aaa
shl
xchg
inc
adc
add
fstpt
fmulp
sbb
inc
and
cmc
sahf
sahf
push
fnstcw
inc
push
mov
ret
dec
cmp
ret
inc
das
jecxz
loope
dec
outsb
add
xchg
or
sub
sub
andb
movsl
mov
or
daa
outsl
jg
test
test
out
mov
inc
es
js
pop
fwait
sub
ret
mov
push
mov
lahf
stos
mov
dec
cmpb
imul
shrl
fistpll
fnstenv
int3
sbbl
xorb
lock
hlt
jle
and
aaa
cs
or
adc
ret
sub
xor
cmp
fwait
cmp
gs
dec
pop
xor
stos
popf
or
push
cmp
pop
iret
rorl
mov
in
pop
lcall
push
repnz
testl
add
sahf
mov
mov
gs
mov
mov
sub
mov
bound
or
jl
or
pop
xchg
dec
add
ss
and
push
cmpsb
and
test
movsl
faddl
pusha
mov
insb
jg
popf
inc
pop
xchg
je
mov
pop
push
fsubrl
dec
rcrl
data16
ss
clc
sbbl
mov
pop
cmp
push
and
fmull
cmc
sbb
orb
sbb
mov
sbb
sbb
sbb
mov
adc
sub
mov
mov
repnz
out
inc
adc
sub
imul
push
pop
add
pushf
push
mov
pop
lahf
pop
xor
push
jns
adcb
addr16
fs
sub
sbb
in
hlt
orl
out
jae
fs
std
ret
shr
inc
fsubr
pop
adc
and
imulb
loope
aaa
xchg
xor
popf
stc
aas
mov
nop
jo
shl
jno
or
xchg
push
mov
fsubr
adc
pusha
sbb
lods
leavew
ds
add
jmp
mov
cmp
push
or
mov
mov
inc
inc
xchg
cmpsl
add
fnstsw
jns
and
pop
outsl
mov
aaa
add
and
dec
test
xor
jl
lret
push
dec
xchg
lods
out
insb
pop
mov
les
mov
push
xchg
je
pop
pop
stos
add
lcall
push
das
add
pop
xorl
mov
in
lods
test
inc
dec
fdivs
inc
jb
sti
pop
sbb
sahf
dec
in
pop
and
xchg
xchg
sbb
rorb
out
ret
dec
or
jno
lret
jmp
adc
adc
orl
xor
repz
jge
inc
loopne
inc
adc
stos
xchg
inc
or
push
stc
iret
adc
mov
pop
mov
cmp
lods
jg
or
push
adcl
jmp
add
add
inc
inc
xchg
test
mov
in
fidivrl
repnz
iret
xor
or
aas
sbb
ficomps
dec
xchg
jmp
cmpl
mov
adc
inc
sub
or
push
cwtl
push
fimull
xor
cmp
jns
mov
repz
pop
out
int3
pop
cmpsb
cmc
ret
sbb
les
adc
shll
into
push
repnz
rclb
add
fs
je
mov
inc
add
lcall
cmp
dec
mov
gs
pop
xor
mov
shll
push
push
push
and
in
jecxz
xor
fs
out
dec
add
cmpsb
mov
push
push
add
pop
jmp
scas
leave
mov
ret
sbb
jns
and
pushf
mov
repnz
mov
movsb
fsubl
sti
cmp
mov
pop
lret
adc
daa
es
addr16
stos
push
xchg
add
sbb
stos
mov
sti
pop
cmc
js
aam
cmp
add
rclb
jmp
mov
mov
cmpsb
sti
testb
mov
pop
cwtl
cmpsb
add
cmp
aas
inc
cmpsl
cmp
ja
adc
ret
push
in
sub
popf
jae
sbb
adc
shrl
aas
jp
dec
stos
movsb
pop
adc
sbb
pushf
dec
ret
mov
aad
dec
fnstenv
mov
es
mov
cmp
iret
data16
push
popa
mov
pop
arpl
insb
mul
inc
fadds
repnz
or
loop
mov
clc
inc
sbbl
xlat
cwtl
data16
aaa
aas
jl
cmp
jg
movsl
mov
inc
jl
sub
or
outsb
dec
fidivrs
pop
xchg
fcomip
xor
aam
push
shlb
mov
js
mov
mov
xor
je
stos
test
shl
cmp
stos
or
sbb
and
mov
dec
lods
jge
xchg
adc
push
sbb
movsl
push
ret
inc
imul
xchg
inc
dec
repnz
loopne
cs
jae
dec
xchg
test
push
push
xor
sbb
mov
cmp
mov
gs
daa
xlat
repnz
in
lret
or
mov
ja
fsubrs
es
mov
or
mov
outsl
mov
dec
inc
jne
xchg
loope
ja
xor
aaa
mov
sub
mov
mov
in
aam
outsb
sub
pop
inc
ds
pop
inc
pop
call
xor
in
lods
in
jg
int3
shll
inc
movsb
push
scas
mov
and
negb
adc
in
xchg
pushf
adc
sbbl
sbb
mov
test
mov
sbb
dec
dec
adc
pop
dec
sub
daa
adc
loop
inc
add
fidivrl
mov
xchg
lret
icebp
fsubr
notb
adc
out
pop
sahf
sub
into
les
sub
bound
dec
popf
popf
jmp
sub
fstpl
scas
outsl
push
jg
enter
in
adc
mov
inc
jb
test
out
dec
dec
jge
out
and
les
xchg
mov
inc
orb
rcrb
int3
pop
xor
mov
dec
rcl
lret
cmpsl
ja
push
xor
clc
int3
mov
nop
or
dec
movb
jmp
cld
adc
lock
mov
jecxz
mov
cwtl
xor
stc
sub
mov
fidivrs
pusha
add
std
lea
imul
pop
inc
roll
arpl
mov
and
lods
ret
cli
int3
lods
mov
cwtl
sub
inc
out
dec
sub
int3
cmpsl
mov
jecxz
jmp
mov
mov
fstpt
cmpsb
ss
int3
add
rcrl
scas
in
sbb
stos
inc
shl
arpl
shrl
push
mov
add
push
decl
xchg
add
push
xchg
imul
scas
rcrl
jmp
popa
repnz
xor
movaps
cmpsb
lods
mov
jne
jge
mov
hlt
out
loope
jle
mov
ds
add
jb
adc
push
ret
lods
je
shrl
xchg
mov
sbb
cs
ret
mov
push
inc
int
mov
xchg
stos
bound
dec
adc
xor
je
sub
int
negb
adc
fsub
ret
add
xor
and
sbb
inc
or
cmp
mov
icebp
pop
fisubrs
or
data16
mov
pop
sbb
enter
sub
mov
inc
inc
mov
mov
cwtl
xchg
or
repnz
aam
mov
sbb
xor
push
decb
in
in
les
xor
push
sub
gs
sub
cmc
lds
jl
rcrl
out
cmp
leave
mov
mov
ficompl
sbb
and
adc
mov
lods
add
cmp
aam
mov
movsl
cmp
cli
and
xchg
jb
cwtl
xchg
sbb
in
xchg
ficomps
jl
adc
jg
in
pop
sahf
das
popa
jg
mov
or
mov
scas
iret
inc
mov
hlt
xchg
jb
cmp
and
pop
jg
cmp
and
das
int3
cmpsb
in
pushf
incb
inc
dec
cmpsb
or
sbb
ja
hlt
shl
out
lret
shll
add
idivl
andb
mov
ret
outsl
jbe
adcl
dec
mov
jl
inc
in
inc
jnp
cmp
jecxz
lret
ss
or
sbb
mov
cmp
loopne
ficoml
cmp
mov
cwtl
push
xchg
fwait
mov
add
scas
add
cmp
das
jp
nop
dec
out
cs
sahf
pop
cmpsl
fldl
sub
js
adc
sbb
loop
push
ds
mov
push
imul
mov
mov
push
mov
dec
mov
jmp
icebp
mov
adc
aaa
mov
xchg
pop
push
pop
push
and
and
jle
and
outsb
jb
ret
test
sar
fld
inc
jmp
jge
jge
iret
xchg
and
mov
adc
sub
jp
sbb
inc
xor
shlb
sbb
mov
movsb
mov
fidivrs
data16
fs
mov
and
xchg
arpl
or
add
sbb
movsb
jge
cmp
pop
xchg
sub
adc
into
je
loopne
sub
cld
sbb
inc
xor
cs
mov
jp
enter
cmpl
neg
and
mov
aad
mov
stos
jmp
sar
jns
bound
jb
lcall
lea
fimull
lock
outsb
pop
sub
out
jp
cmp
leave
and
divl
jp
enter
push
dec
imul
inc
les
hlt
sub
dec
lret
imulb
cmp
in
push
lock
fimuls
jne
icebp
add
lods
adc
jp
fwait
inc
jg
push
adc
lods
push
mov
imul
or
lret
cmp
mov
in
das
cld
pop
adc
hlt
js
sbb
mov
sbb
mov
test
inc
lds
inc
push
or
int3
push
mov
mov
mov
and
in
adc
jmp
sarl
add
sbb
stos
or
mov
sub
adc
divl
lds
xchg
out
sbb
sbbb
push
inc
rorb
push
mov
cmc
xor
call
jne
mov
lods
xor
jns
ljmp
and
int3
pop
and
iret
or
dec
fdivr
pop
cmpsb
push
mov
adc
adc
movsb
jp
inc
pop
lea
outsb
xor
cmp
inc
xor
das
out
movsl
xor
cmc
loopne
int
outsb
jle
fsubrl
mov
pop
jge
jae
je
mov
mov
jno
cmc
insl
push
mov
dec
dec
les
pushf
pop
icebp
ljmp
and
pop
sub
sbb
dec
or
jmp
pop
push
xor
test
out
lret
inc
inc
adc
cltd
inc
or
cld
insl
jp
xchg
mov
test
xchg
or
sub
xorps
xchg
adc
inc
cmp
mov
jno
mov
js
inc
cmp
andb
sbb
inc
pop
jp,pn
xchg
mov
popa
sub
or
push
push
out
out
or
stos
pop
loopne
jp
pop
adc
rolb
lods
inc
dec
in
mov
add
sarl
cmpsb
movsb
add
inc
cmp
aas
lret
jecxz
add
pop
lahf
mov
pushf
pop
movsb
adc
xchg
or
add
push
or
lds
and
mov
sbb
adc
cmp
push
or
and
mov
lcall
aad
sbb
fsubrs
lock
popf
scas
inc
jge
out
out
int3
sbb
jp
cmp
in
out
mov
mov
das
inc
rep
icebp
pop
fsubl
add
andl
ja
loope
sarb
add
jbe
lcall
mov
lret
add
add
das
adc
mov
dec
aaa
xor
sbb
pop
insb
ja
icebp
mov
jns
pop
jl
push
add
adcb
out
cwtl
sahf
mov
insl
sub
or
je
outsb
xchg
shrb
ror
xchg
cmp
icebp
int
fimuls
pop
nop
aad
xchg
incl
mov
pop
sub
sub
jns
mov
mov
cmp
xchg
in
out
or
call
jns
xchg
fdivs
ja
jecxz
cmpsl
inc
psraw
pusha
mov
dec
sbb
pusha
loopne
int3
cmp
cmpb
dec
jp
into
dec
lcall
add
out
xor
mov
sbb
daa
iret
loope
and
or
int3
xchg
adc
adc
cld
mov
gs
jns
sbbl
jmp
pop
fists
inc
in
pusha
scas
inc
xchg
sti
mov
mov
or
sti
mov
outsl
orb
jo
pusha
dec
leave
jo
push
notl
adcb
bound
sti
inc
xchg
aas
push
sbb
add
push
daa
fsubrl
mov
ficomps
in
idivb
push
mov
sbb
arpl
shl
mov
test
pop
and
popa
push
cmpsb
jmp
pop
pop
xchg
mov
xchg
loope
out
es
out
or
out
mov
or
xor
loop
int
lods
adc
repnz
mov
xor
lea
clc
insb
jb
std
outsb
rorl
jno
adc
push
pop
jp
mov
jnp
subl
call
ljmp
or
adc
xorb
pop
dec
push
dec
and
xchg
pop
daa
lods
xchg
sub
mov
xchg
out
incb
out
arpl
sub
mov
dec
les
pop
push
push
sbb
pushf
gs
scas
cmpsl
mov
xchg
jnp
sahf
insl
or
ret
iret
mov
insb
pop
xor
scas
pop
or
cld
clc
scas
adc
adc
push
pop
dec
dec
inc
sub
push
push
repz
aad
adc
mov
mov
jle
fucomi
shlb
dec
jbe
jbe
out
sti
mov
icebp
sahf
jle
jmp
cmp
jo
xchg
add
xchg
je
sub
imull
out
rorl
daa
cmp
test
pop
ss
repz
out
lea
dec
cmp
xor
push
das
mov
fists
insl
mov
pextrw
or
frstpm(287
arpl
pop
call
cmpb
push
repz
fsubrl
xchg
popa
mov
fdivrs
in
loope
jecxz
push
adc
inc
sub
or
movsb
in
stos
and
push
xadd
scas
lea
jmp
ljmp
push
xor
gs
cmp
addr16
cmp
mov
lods
jno
push
incl
xchg
std
int3
cwtl
jnp
pop
mov
adc
loop
hlt
cmp
popa
pushl
mov
fists
sti
dec
lock
push
dec
dec
push
or
sti
mov
sub
jae
gs
dec
sahf
pop
adc
add
sub
pop
push
insb
clc
and
mov
inc
and
lods
or
pushf
shrb
lcall
xlat
imul
adc
push
popf
loopne
mov
scas
mov
add
ds
adc
dec
cmp
xor
cmp
and
jmp
aam
std
mov
call
pop
ja
addl
loop
pop
dec
mov
lods
jb
out
fisubs
insl
inc
jmp
in
or
add
cmp
jge
mov
mov
movsl
push
aas
in
addr16
lock
lea
pop
aaa
dec
pusha
sub
mov
cmp
xor
out
add
mov
pop
mov
cmp
push
mov
push
push
rclb
btr
pop
jnp
cmp
vprotd
adc
push
aad
push
jnp,pn
dec
push
sub
and
jno
mov
fidivrl
xor
add
mov
out
mov
add
das
mov
out
pushf
dec
inc
add
add
ja
iret
pop
out
adc
inc
dec
adc
shrb
mov
push
push
loope
mov
cmp
pop
dec
mov
push
rol
lea
mov
sbb
sbb
sbb
sahf
cmpsb
sahf
mov
adc
inc
loop
loopne
or
lea
jl
xchg
push
cmp
int
jg
or
out
sbb
fwait
scas
loop
std
popa
mov
shrl
or
lods
add
insl
add
icebp
hlt
cmpsl
rcrl
cs
xlat
and
xchg
jg
jo
pop
cmp
ret
or
mov
ror
movb
repnz
in
loope
dec
ja
mov
aam
cmpsb
ror
int
adc
mov
push
mov
mov
sahf
mov
jmp
cld
gs
cld
cs
stc
push
add
pop
aas
cmp
inc
dec
loope
mov
xor
xchg
in
popa
fistpll
pop
mov
push
pop
divb
dec
je
inc
push
adc
sbb
add
ret
das
js
and
jecxz
in
xchg
out
loopne
pop
sub
and
cmpsl
and
sti
fldl
idivl
xor
dec
in
iret
sub
data16
xchg
jb
out
pop
push
inc
sbb
and
add
aas
out
sub
xchg
adc
imul
sti
mov
pop
adc
mov
xchg
or
xchg
xor
test
int
push
push
xor
leave
pop
sahf
inc
adc
dec
je
and
mov
lahf
repz
push
jb
ficoms
cs
in
cmp
cmp
push
lcall
jne
or
mov
outsb
dec
es
xor
xor
shll
jns
sub
cmp
fnstsw
jbe
sbb
ret
mov
icebp
sbb
push
xor
mov
push
data16
or
loope
in
mov
xor
in
adc
xor
jmp
xorb
iret
cmp
pop
sbb
je
in
dec
pop
hlt
cmp
xchg
add
dec
mov
mov
pop
negl
iret
jmp
sbb
stos
leave
stc
into
stos
outsl
mov
sbb
mov
clc
loop
push
xor
xchg
lahf
jno
push
add
in
cmc
popl
xchg
cli
ljmp
xchg
jno
push
mov
or
int3
cmpsb
test
push
jbe
xchg
repnz
dec
iret
pop
mov
mov
aam
cltd
cmc
fwait
add
dec
repnz
pop
push
shlb
or
dec
bound
adc
call
xchg
fmul
push
xor
pop
jp
adc
mov
je
imul
mov
mov
push
cwtl
add
cmc
andb
cmp
fsts
mov
icebp
or
add
mov
and
ds
sub
in
fsubl
xor
and
or
daa
hlt
js
je
fwait
add
xchg
repnz
mov
pushf
fbld
or
stos
popa
jp
xchg
adc
dec
mov
add
into
sbb
shlb
outsl
push
es
fucom
das
mov
repnz
movsb
mov
aam
cmp
mov
movsl
cmp
xchg
cmpsl
sahf
push
test
and
jbe
cli
inc
pushf
movsb
push
dec
dec
jge
inc
bound
ljmp
fwait
dec
data16
lock
lods
pusha
cmp
add
loope
roll
aas
ficoml
mov
ja
push
ja
outsl
mov
fs
xchg
dec
xchg
push
hlt
fildl
xchg
div
jbe
test
jecxz
mov
jg
adc
pushf
jne
sub
enter
mov
mov
push
movsl
mov
adc
les
push
and
pop
dec
es
fmull
pop
imul
xchg
inc
mull
sbb
xorb
lret
jge
xchg
jp
fs
in
xor
jl
sbb
mov
cwtl
js
lock
pusha
shr
mov
mov
or
jno
ja
aad
aaa
fsubrs
outsl
push
cmp
xor
ja
inc
mov
mov
loope
inc
pop
rol
movsb
sbb
mov
iret
insl
and
fs
je
mov
ss
dec
js
lahf
mov
pop
or
lock
fsubl
add
int
lods
imul
insl
sub
fwait
outsb
clc
pop
aam
mov
aaa
xchg
aaa
add
jbe
jg
add
cmpsb
mov
pop
xchg
jae
push
mov
mov
push
fists
pop
loopne
fdivl
mov
inc
outsl
pop
lods
mov
mov
push
fucompp
xor
cmp
outsl
outsl
mov
push
rol
adc
mov
lret
mov
add
xor
and
mov
mov
push
cmp
mov
sub
push
cmp
testb
xchg
in
das
subb
mov
mov
xchg
push
clc
or
pushf
cs
xor
inc
xchg
sbb
cmpsb
cwtl
mov
idivb
shll
add
pop
inc
cwtl
mov
inc
cmpsl
push
add
int
sbb
into
jbe
pop
and
inc
lea
mov
incl
lds
lods
cmp
or
xchg
pop
mov
int
adc
jmp
push
mov
push
and
ljmp
add
jl
xlat
das
or
dec
fcoml
pop
cmp
mov
divb
pop
bound
cmpl
xchg
out
sub
dec
sbb
adc
icebp
jg
push
push
ja
push
ret
jecxz
and
mov
sbb
lahf
adc
and
jmp
push
jge
or
or
jge
mov
jo
xchg
call
cs
mov
outsb
inc
pop
push
adc
xchg
xchg
ja
adc
movsl
hlt
cmpl
or
arpl
test
jo
adc
and
je
xchg
repnz
or
jne
inc
je
lcall
xchg
fdivs
pop
and
jo
jle
nopl
lock
xchg
lahf
aam
jg
and
inc
je
push
aam
mov
mov
gs
iret
fcmovnbe
repz
xchg
xchg
pop
fdiv
mov
out
test
stos
jbe
fdivs
iret
repz
inc
sahf
xchg
push
out
push
loope
ja
inc
movsl
and
cmc
lds
mov
pop
jns
push
aad
push
push
mov
mov
out
pop
out
iret
push
xchg
inc
mov
and
lea
stos
rcrb
dec
stos
insl
mov
and
imul
pop
mov
popa
xor
mov
pop
push
into
loop
mov
loop
in
insb
cli
mov
cmp
roll
and
pop
out
stos
lret
sbb
jns
int
ret
mov
xchg
sub
cmc
adc
push
cli
rorl
loope
shrb
test
xlat
add
cmpsb
mov
cwtl
out
orl
fwait
sub
mov
mov
stc
adc
sub
cmp
xchg
sub
shl
add
sub
mov
pop
in
pop
inc
or
mov
scas
inc
push
subl
gs
mov
imul
mov
test
or
xchg
jge
push
adc
in
xchg
or
fildll
movsb
cmp
or
mov
and
divb
push
fsubrl
sub
add
dec
xor
pop
inc
mov
aam
or
icebp
cmp
clc
or
js
loopne
ficoms
nop
out
les
add
pop
jno
mov
es
mov
sbb
cmc
dec
mov
shll
fstps
push
lds
jne
mov
mov
mov
hlt
sbb
fmull
aas
xor
mov
mov
lods
xlat
push
push
iret
ss
hlt
sbb
popa
jecxz
nop
sarb
mov
xor
inc
and
lret
in
push
insl
dec
dec
and
popa
push
shll
xchg
adc
imul
xchg
push
frstor
sub
xor
shrb
dec
mov
je
jge
in
jne
je
push
dec
dec
cmp
inc
xor
movsl
iret
jle
and
push
ds
jne
push
movsb
add
push
jp
xor
rcrb
jo
addr16
push
mov
mov
sahf
xor
push
jl
cmp
ss
mov
mov
gs
mov
mov
out
push
and
shll
mov
pusha
cwtl
leave
or
jg
sbb
cmp
inc
lcall
in
mov
add
in
loopne
sahf
jle
aad
mov
into
cmpsb
test
or
pushf
xchg
shll
bound
lret
cs
sub
nop
popf
push
aad
aas
mov
fisubrl
fwait
out
mov
adc
adc
inc
mov
inc
mov
or
scas
dec
js
inc
xor
bnd
bound
xor
push
idivb
lods
sbb
call
sar
ret
insb
mov
in
test
roll
rep
pop
jne
inc
and
movsb
push
sbb
and
and
ja
daa
cmc
push
and
sub
jno
pop
rcl
adc
in
mov
mov
into
outsb
mov
das
aaa
sbb
fistpll
mov
jo
xor
mov
mov
mov
adc
jp
aam
lea
push
sub
icebp
imul
mov
xchg
outsl
jns
idivl
popa
out
add
clc
pusha
pop
sub
ds
pop
test
cmp
fsubs
or
xor
cmp
mov
sbb
push
std
into
ds
jmp
stc
push
fsubr
pop
ja
popf
mov
cmp
sahf
js
mov
mov
call
sbbb
add
jo
daa
scas
imul
insb
pop
inc
pop
and
dec
dec
jnp
xchg
adc
jl
aam
adc
push
rorl
sub
lds
ds
inc
inc
stos
fs
fimull
sub
jl
mov
cmp
push
mov
outsb
adc
aad
push
fcoml
xchg
xchg
push
repz
ds
popa
lock
mov
jp
xchg
jl
mov
popa
mov
jno
pop
mov
int
ret
clc
jecxz
pop
or
sahf
std
sub
fisttpll
pop
cmp
push
push
adc
xchg
es
dec
adc
call
int
adc
cmp
sbb
cmc
in
cld
aad
sbb
arpl
or
in
mov
or
repnz
adc
int3
push
std
or
out
sbbb
es
dec
in
inc
rclb
and
mov
jnp
cltd
inc
inc
out
xlat
mov
add
ret
fdivrl
sbb
add
js
imul
fstps
xor
jmp
or
cmp
data16
es
jecxz
sub
enter
xor
pop
jecxz
xor
jbe
cmp
pop
les
fsub
gs
lock
xchg
xchg
and
dec
test
or
mov
gs
push
loop
lret
mov
dec
ss
jno
clc
or
jecxz
aam
scas
xor
sub
sub
arpl
sub
push
aam
aam
test
push
xor
pop
inc
fists
aam
mov
xchg
stos
ss
arpl
pusha
cmp
lcall
inc
adc
cmp
insb
cmp
enter
cmp
in
subl
sbb
adc
scas
bsf
dec
ljmp
mov
lcall
cmp
fimuls
pop
push
mov
movsb
lods
lds
xchg
and
jge
mov
and
das
and
cmpb
mov
fisttpl
sub
in
adc
push
pop
arpl
jmp
inc
insb
xor
dec
dec
sarb
pop
jle
sbb
dec
ret
and
add
mov
adc
lahf
jp
int3
fs
cltd
jmp
dec
cmp
scas
sub
cmpsl
ss
test
pop
adc
pop
jmp
subb
arpl
es
inc
jl
push
or
stos
clc
mov
xor
xor
sbb
xor
es
mull
lret
jbe
adc
jne
mov
mov
ss
jo
inc
es
cmc
ss
out
push
sbb
dec
pop
dec
pop
xchg
sub
fistps
dec
push
mov
xchg
xor
and
pop
mov
inc
outsb
clc
jmp
inc
icebp
push
lock
inc
xor
mov
imul
cmc
mov
int3
inc
enter
sub
mov
mov
std
add
nop
mov
sub
ds
cltd
orl
push
enter
mov
lret
sub
sub
sub
sahf
mov
mov
andb
and
js
rcr
push
addr16
inc
cmp
inc
cmp
out
xor
or
pop
jl
ljmp
xor
popa
nop
dec
js
insb
mov
add
dec
jecxz
fdivs
mov
test
test
popa
rcrl
in
faddp
xlat
stos
testb
push
add
ljmp
cwtl
std
das
mov
rcl
insl
inc
sub
jecxz
cs
lds
push
scas
mov
xchg
movsl
mov
pop
mov
stc
jno
int
movsl
mov
adc
mov
xchg
enter
add
popa
add
pop
pop
clc
cmp
pop
lcall
jno
lcall
push
rclb
mov
pop
inc
pop
sbb
cmpsl
aam
jmp
in
mov
cltd
jne
call
shr
fwait
mov
sbb
js
int
push
test
aas
inc
cs
pop
adc
shlb
mov
test
pop
test
out
jns
inc
aad
xchg
adc
daa
push
dec
pop
add
sub
dec
or
lret
cmp
add
popf
data16
jg
dec
fisubrs
mov
sbb
repz
daa
dec
iret
negb
stos
sbb
pop
pop
cmp
cmp
mov
xchg
insb
leave
cmp
ja
sbb
daa
movsl
fstl
pop
push
shrl
iret
push
sub
mov
scas
in
nop
push
call
xchg
sbb
sbb
xchg
in
dec
jmp
mov
in
inc
adc
xchg
imul
mov
movsl
jg
push
outsb
push
jmp
mov
push
xlat
sub
sub
dec
xor
or
pop
test
xchg
and
dec
pop
push
imul
in
dec
xor
js
and
shll
stos
and
or
fidivs
push
ds
cmc
xchg
xor
add
sub
xor
clc
sbbl
xor
jns
push
sbb
enter
outsb
add
push
jne
bound
and
cmp
push
pop
jp
add
repz
push
ss
dec
sbbb
jg
js
and
push
lret
test
add
mov
jl
cld
lea
or
adc
popf
orl
push
fwait
mov
jns
mov
popf
notl
lea
insb
test
push
ficomps
sub
dec
add
inc
adc
sub
movsl
xchg
cmp
inc
pushf
in
aaa
mov
aaa
adc
lret
movsb
subb
std
icebp
inc
pop
jbe
mov
fnstenv
js
sbb
movsb
adc
mov
mov
fdiv
fmull
notb
das
mov
pop
repnz
lods
out
pop
push
mov
xchg
dec
sti
into
jecxz
push
sub
inc
sbb
fucomp
out
push
fstl
movsb
jecxz
fstps
inc
std
xchg
call
sub
mov
aad
pop
loop
cmp
shr
mov
adc
or
push
fidivs
aam
jle
loop
mov
lahf
pushf
add
dec
je
sbb
jle
add
sbb
pop
aad
aas
xchg
mov
in
popa
mov
mov
adc
pop
test
push
xchg
jnp
aas
sbb
sti
adc
jl
lahf
test
inc
and
xor
push
mov
push
mov
add
jnp
mov
test
mov
lcall
lods
xchg
out
pop
outsl
dec
in
push
mov
std
pop
xchg
iret
xor
std
loop
sub
data16
cli
in
iret
sub
jnp
and
in
scas
lcall
aas
movsl
cmpsl
mov
sarb
mov
jae
adcl
jnp
addb
pop
pop
es
xchg
mov
xchg
dec
hlt
insb
mov
int3
adc
pop
addl
movsl
adc
fdivrl
ja
pop
pop
xor
jmp
shlb
xor
and
shrb
lahf
jb
inc
orl
pop
popf
inc
sbb
in
in
pop
nop
sub
push
mov
cmp
scas
std
lods
dec
inc
inc
sub
icebp
je
imul
cmpsb
xor
popf
mov
jmp
dec
je
lds
add
outsl
push
in
int3
shlb
push
cs
xor
loopne
das
sbb
mov
mov
lods
or
es
cmp
aaa
adc
mov
fldl
fnstcw
mov
data16
call
ret
shlb
push
and
or
jne
xor
push
xchg
adc
rcr
mov
popa
jbe
stc
idivb
mov
fldz
mov
rclb
pop
cmp
dec
adc
push
and
test
movsb
sbb
mov
sbb
push
pop
push
sbb
inc
cmp
mov
or
jae
out
cwtl
cmc
std
es
das
inc
add
negb
mov
loopne
adc
imul
fwait
aam
in
push
dec
mov
jnp
mov
mov
or
icebp
push
ret
xor
mov
dec
sbb
lods
lods
push
and
cmp
add
xchg
lods
in
out
inc
inc
pop
ret
push
popf
lret
outsl
popf
or
or
call
ss
enter
addr16
sub
adc
mov
pop
out
clc
mov
popa
sbb
cli
cmp
lock
outsl
or
decb
inc
xchg
xchg
ret
adc
adc
jno
push
push
cmpsb
xchg
test
jo
sarl
ret
xchg
dec
mov
sbb
pusha
sbb
sub
out
sar
mov
and
xchg
fistl
pop
xchg
mov
in
xchg
fadd
jmp
adc
repnz
xchg
cmc
adc
cmp
mov
or
lret
adc
sahf
leave
imul
xchg
dec
sbbb
into
pushf
dec
pop
cwtl
xchg
fnstsw
test
fs
jns
test
mov
out
imul
sbb
cwtl
dec
jle
add
gs
stos
pop
mov
cmp
xchg
jb
incl
aad
or
std
xor
lods
xchg
enter
scas
mov
push
aas
fldl
adc
sub
push
mov
push
pop
xor
mov
mov
test
rcrb
cmp
out
push
or
scas
sub
mov
jnp
push
jne
in
lds
xchg
cmc
mov
loopne
push
mov
bound
addr16
jp
sbb
jg
sub
mov
clc
enter
inc
test
jae
mov
cld
loopne
mov
test
sbb
cmpsl
clc
pop
pop
ds
adcb
and
push
mov
jmp
lods
add
pop
adc
rcrb
dec
jne
repnz
in
push
fwait
mov
sbb
mov
repz
ficomps
leave
insb
rcrb
dec
in
js
arpl
leave
add
add
imul
add
jle
daa
add
push
cli
out
jbe
mov
stc
movsl
inc
or
out
mov
sti
out
cmpsl
lcall
dec
mov
je
and
pop
mov
mov
fistl
nop
xchg
jle
cmp
lock
sub
call
pop
inc
aad
clc
mov
pop
xor
pop
repnz
lea
fsubl
push
inc
loop
in
mov
test
xchg
cld
mov
enter
nop
jl
xorb
mov
popf
push
mov
push
iret
clc
test
pushf
dec
sbb
jae
cmpsb
int
cmpsl
mov
cmpsl
inc
adc
bound
xchg
xor
adc
call
inc
dec
pop
xchg
jo
add
int3
add
gs
sub
fimull
sti
decb
adc
xlat
cmp
or
movsl
push
mov
or
and
sbb
insl
push
int3
cmp
mov
js
cli
js
shll
mov
and
gs
adc
scas
sub
repz
imul
nop
pusha
xchg
add
roll
test
inc
jnp
lret
lcall
jge
aad
xchg
add
and
movb
mov
stos
inc
cmp
cmp
xchg
sarl
inc
fwait
clc
sub
dec
das
aas
insw
inc
push
push
jmp
arpl
cmpb
ret
dec
push
sbb
add
xchg
sbb
mov
rolb
pop
insb
sti
inc
cwtl
outsb
inc
sbb
hlt
or
xchg
pop
or
cmp
xchg
push
leave
clc
fimuls
sub
or
inc
cmp
adc
ss
out
xchg
in
sti
stc
fmulp
adc
inc
ret
sbb
pop
pop
xchg
push
dec
push
push
xor
cs
mov
aad
mov
insb
xor
test
mov
cld
cmp
cmp
imul
pop
jno
push
stc
pop
and
push
test
or
and
mov
aas
scas
aam
mov
mov
sti
shll
ret
adc
lahf
push
insl
jg
adc
mov
in
add
test
adc
in
and
ret
adc
add
adc
testl
lea
repz
loop
repnz
lods
xchg
dec
arpl
es
stos
int3
mov
imul
mov
inc
insb
insl
dec
loope
push
test
sbb
add
std
mov
sbb
xor
adc
and
mov
test
xor
loopne
je
lock
xor
or
cmp
xor
push
push
jb
stos
jbe
mov
dec
add
xchg
into
sbb
les
mov
int3
dec
add
jp
dec
roll
jl
dec
fidivrl
add
out
mov
fldcw
into
jp
ret
mov
insb
vmovq
scas
movsb
cmp
sarb
dec
sbb
dec
dec
int
and
or
das
and
ret
test
shrb
movsl
lcall
lahf
sub
xor
xor
dec
mov
sbb
jmp
sbb
lret
add
std
out
or
int
in
shl
pushf
nop
outsl
enter
xchg
push
inc
mov
jb
jle
test
or
test
push
adc
xchg
outsl
pop
inc
xchg
adc
xchg
mov
jns
imul
lret
bound
sub
hlt
and
test
mov
mov
push
notl
int
push
sbb
mov
dec
mov
inc
cltd
push
mov
leave
and
jle
imul
inc
xchg
addr16
dec
loop
aam
push
sbb
dec
js
mov
in
xor
das
loopne
xchg
add
lea
inc
adc
xlat
push
test
popl
jge
jne
js
xor
mov
or
mov
into
jg
lods
mov
jno
add
in
rcll
repz
stos
mov
call
cmp
test
xor
imul
jg
or
loop
fidivrl
pop
pop
xchg
test
shr
negl
cmp
xlat
push
stc
xor
outsl
fxch
pop
and
mov
inc
inc
arpl
push
outsl
leave
xchg
mov
and
jae
shll
cwtl
inc
mov
lcall
mov
mov
nop
push
xor
adc
ljmp
shlb
pusha
lret
idiv
inc
adc
clc
xchg
jge
xor
pop
push
cmp
push
ds
jge
adcl
stos
add
aad
inc
in
jb
testb
push
sub
invd
arpl
mov
jecxz
fcomps
addb
lods
mov
inc
mov
rcrb
jo
in
push
sahf
cmpsl
jns
rorl
xchg
shr
dec
inc
jge
mov
mov
iret
icebp
dec
adc
scas
clc
cmp
sub
push
jae
dec
inc
adc
xchg
sub
mov
inc
shlb
dec
cmp
fldenv
scas
jge
pop
cli
daa
and
adc
ja
cli
in
int3
out
js
ds
jmp
push
in
sti
popf
add
idivb
sbb
jl
pushf
into
and
mov
inc
add
mov
scas
mov
movsb
sub
popa
imul
ds
xchg
add
jno
lock
lahf
jge
xor
and
fdivs
imul
xchg
rcrb
xor
jae
mov
outsb
and
shll
std
aaa
jo
lock
add
int3
aam
adc
ret
stos
sbb
imul
test
xchg
test
stos
je
sub
jbe
cmpsl
in
rorl
cmp
outsl
pop
dec
and
out
test
jns
loop
xchg
push
cwtl
cmp
mov
ds
rcr
cltd
xchg
jno
xchg
cmpsb
subb
cmpsl
push
adc
mulb
jne
push
in
xlat
rcrb
mov
fs
ret
adc
xchg
and
or
dec
cmp
test
ja
fstps
scas
imul
xchg
sbb
sbb
test
rcrl
adc
and
fstpl
mov
mov
add
cmp
es
sbb
loope
pop
icebp
mov
call
ret
cwtl
outsb
xchg
lds
mov
sbb
add
sbb
dec
cs
sbbl
cli
sub
lods
pop
or
sbb
pop
xorb
jg
add
call
pop
mov
fistps
sub
rcr
sub
imul
sahf
and
xor
mov
outsl
cmp
xor
or
sub
mov
pop
mov
stos
mov
arpl
pop
cwtl
mov
mov
fimull
scas
mov
push
push
jne
imull
add
ret
mov
xor
es
mul
call
loop
inc
mov
mov
jle
xchg
inc
push
loop
leave
xor
dec
cld
adc
lea
sub
sub
sub
ret
sahf
rcrb
pop
sub
mov
inc
jle
enter
cld
cmp
hlt
repz
sub
sarb
lds
cmp
pop
jmp
cwtl
sub
js
movsb
inc
or
ja
jbe
or
push
mov
ja
mov
test
mov
cmp
mov
mov
roll
lret
xchg
mov
xor
sbb
lods
ss
cli
bound
incb
not
out
and
mov
repz
mov
xchg
clc
sub
or
ret
stos
sbbb
pop
and
jle
and
add
loop
mov
jecxz
mov
repz
loope
add
outsb
jb
sbb
xor
rcll
and
pop
or
scas
lret
push
sti
mov
sub
jo
sub
cmp
enter
ja
test
out
pop
gs
outsb
xlat
jno
add
dec
mov
mov
or
jl
enter
push
add
ret
cmp
data16
imul
jecxz
es
add
ja
out
int3
mov
sbb
cmpsb
popa
das
scas
add
fadds
fwait
mov
mov
enter
out
jecxz
test
push
adc
imul
subb
mov
aad
jge
arpl
fsubl
inc
sbb
adc
out
stc
jmp
mov
mov
pop
lea
sbb
xchg
pop
in
cmp
dec
pop
aam
inc
test
outsb
cltd
mov
or
orb
aaa
mov
sbb
pop
imul
mov
and
mov
sbbl
insb
xchg
rclb
movsb
mov
inc
and
loop
cmp
xchg
pop
popl
mov
push
mov
sarb
xchg
mov
push
dec
je
mov
mov
pop
leave
outsl
adc
adc
xor
leave
sbb
rcr
or
jae
xlat
lret
mov
arpl
and
push
arpl
or
xor
adc
inc
mov
popf
jo
lods
sti
int
movsb
or
push
loope
pop
pop
sub
dec
aas
mov
and
inc
jmp
mov
repnz
dec
outsb
jmp
mov
mov
cmp
outsl
mov
add
dec
xor
dec
lret
sbb
imul
pop
inc
imull
stc
pusha
into
mov
ficompl
xchg
sbbl
sub
xlat
fisttpll
mov
es
jecxz
bound
arpl
icebp
xor
lahf
inc
jmp
out
adc
shl
jmp
jle
call
adc
loop
or
cmc
mov
into
arpl
mov
out
in
adc
xor
xor
outsb
addr16
jo
mov
insb
add
pop
cmp
loopew
lea
addb
stos
xchg
xlat
fcom
call
jnp
in
cmc
and
push
inc
sub
and
scas
xchg
inc
bound
xchg
jns
pop
pushl
dec
xor
dec
subb
cltd
dec
jnp
push
fbstp
mov
sahf
lds
outsb
lods
push
push
pop
xchg
cld
sbb
loopne
lret
shrb
clc
jno
jno
in
mov
sub
loope
in
loope
sub
or
jb
movl
scas
mov
cmp
inc
and
sub
clc
cmp
and
ss
push
ds
int3
adc
push
mov
pop
pushf
das
int3
pop
loope
push
out
push
mov
mov
adc
fcomps
addps
imul
popa
std
test
mov
jle
movsl
arpl
mov
in
data16
and
jge
and
dec
cmp
xchg
outsl
call
popf
cmc
arpl
lock
lret
fbstp
sub
pop
jbe
mov
jnp
enter
mov
pop
mov
mov
jmp
jecxz
fadds
add
dec
adc
pop
popf
repnz
mov
outsb
adc
sub
cmpsl
add
loope
jmp
push
pop
insb
sahf
call
inc
aam
add
adc
sub
adc
jle
xor
sub
repnz
cmp
mov
mov
cmc
jne
sub
je
mov
mov
cmp
ds
inc
sub
out
shl
pop
adc
mov
sbb
pop
mov
mov
test
cmp
mov
fdivrl
addl
ds
into
mov
xchg
sub
inc
aam
pusha
add
dec
fdivrs
scas
jp
mov
cmp
loope
loope
mov
push
mov
push
inc
jbe
addb
shrb
sahf
addr16
in
popf
int3
mov
std
into
xchg
negb
insl
push
push
or
push
arpl
sub
push
lahf
jnp
pop
in
add
cld
push
stos
movsb
cmp
push
fldcw
or
dec
nopl
mov
stos
in
int
loop
outsl
ds
shl
out
fiaddl
lock
loop
daa
and
inc
cld
xchg
fbld
negl
cld
ja
in
icebp
leave
insb
sar
sub
jg
pusha
in
icebp
adc
test
and
add
outsl
adc
mov
push
adc
daa
or
push
xchg
fisubl
jb
sbb
stos
sbb
ret
bound
dec
jae
jp
div
cmp
mov
loope
or
cmp
xchg
pop
das
test
mov
cmp
mov
xor
lods
enter
call
test
jns
stc
sub
sti
inc
inc
out
ret
jnp
xchg
xor
dec
xchg
inc
xorb
movsb
lods
xchg
ja
dec
addr16
jg
xchg
mov
sub
fcomip
jns
xchg
sar
testl
sub
or
pop
sbb
or
mov
nop
and
jecxz
mul
inc
in
lea
mov
sbb
neg
inc
js
xchg
sub
or
out
pop
mov
pusha
subl
cmp
les
xchg
stc
aaa
movsl
pushf
xchg
jmp
and
inc
imul
mov
loope
mov
adc
cmpsb
insb
fistpll
mov
pop
addb
sub
cs
jno
adc
mov
cmp
push
mov
ret
and
pop
mov
cmc
fdiv
inc
mov
stos
rorb
std
sub
xchg
or
scas
aaa
imul
pop
mov
rcll
cmp
stos
hlt
cs
loop
xchg
outsl
mov
lahf
adcl
or
push
iret
dec
rcll
scas
push
add
cmc
mov
mov
jns
mov
mov
outsl
jmp
push
push
mov
int
sbb
shlb
cmc
ficompl
in
xchg
imul
xchg
call
add
fstp
aad
mov
sarl
out
popf
insl
dec
and
xor
jne
test
pusha
mov
inc
pop
lock
repz
mov
iret
nop
inc
mov
mov
push
push
dec
mov
pusha
iret
mov
mov
add
jge
shll
outsl
sahf
in
xchg
mov
adc
cmp
adc
pop
mov
add
push
stos
push
jg
lock
xor
int
fstl
fstpt
lock
push
adc
scas
jb
es
mov
pusha
push
std
pop
jge
or
dec
mov
sbb
sbb
mov
fmull
repnz
cltd
sub
xchg
gs
pop
sub
mov
fxch
aam
call
inc
ds
stc
dec
clc
mov
inc
aad
addl
push
push
jns
jns
push
add
je
mov
sbb
fdivl
jge
push
test
in
cmp
push
stos
pop
mov
scas
fiaddl
inc
or
into
or
pop
sub
outsl
lods
jo
dec
mov
jmp
lea
lods
out
clc
cmpsl
mov
jb
orl
mov
add
dec
dec
subb
mov
decb
insb
dec
cmp
mov
sub
mov
outsb
jno
or
mov
roll
mov
stos
sti
lcall
xchg
mov
imul
mov
fistl
scas
mov
ss
jg
aam
push
sbb
arpl
lock
or
jnp
mov
sub
call
cmp
dec
arpl
ljmp
adc
dec
jge
in
cmp
push
xchg
sbb
xchg
sbb
ds
adc
inc
mov
daa
das
sbb
sub
or
sahf
movsl
sbbb
lods
xor
push
fcoml
xchg
std
sahf
cmp
pop
xchg
pop
insb
pop
ja
out
ja
nop
cmp
xlat
inc
push
loop
xor
subb
fiaddl
push
add
lret
pop
and
push
inc
loop
data16
xor
call
and
pop
add
inc
lods
cmp
in
add
jns
dec
into
xor
jge
test
das
or
jl
mov
pop
xor
clc
push
push
add
xchg
dec
clc
dec
cwtl
movl
aad
inc
dec
push
aas
or
mov
cmpsl
xor
out
les
pusha
adc
sti
mov
push
jbe
dec
push
cmp
adc
xchg
ljmp
xor
mov
lds
in
lret
and
repnz
add
mov
imul
lock
lahf
popl
dec
pop
loopne
js
push
aaa
cld
inc
mov
dec
roll
fnop
xchg
pop
leave
popa
les
mov
jno
mov
mov
lcall
mov
lods
inc
popa
or
sbb
negb
imul
push
ret
leave
xor
lods
aaa
or
bound
out
jno
ja
leave
xlat
cmpsl
pop
js
add
clc
test
mov
incl
or
ljmp
cmp
sub
into
mov
mov
out
mov
jnp
inc
jnp
repz
jns
jae
cmpb
leave
mov
roll
jg
cmp
js
test
xchg
xchg
nop
outsb
mov
cmpsb
into
out
cmp
fidivrs
mov
lods
mov
lods
push
adc
fiaddl
js
jmp
mov
ret
pop
fmul
nop
push
push
xchg
pop
jnp
mov
mov
add
dec
pop
mov
push
addr16
call
cmc
in
fidivrl
adc
cmp
cmp
cmpsb
jnp
inc
pop
nop
repnz
push
test
jns
mov
and
popa
mov
and
popf
les
jecxz
std
jbe
cmpsl
push
imul
shrb
mov
sub
xchg
pop
mov
mov
cmp
loop
std
shrl
shrb
add
add
out
inc
inc
mov
mov
rcr
insl
test
jns
mov
cmp
jg
inc
cltd
pop
cld
outsl
cmp
jp
jp
lcall
push
add
inc
stc
dec
outsl
push
loope
push
inc
enter
cmp
xchg
andb
ja
inc
sub
xlat
inc
cs
mov
pop
mov
xchg
mov
xor
jbe
inc
pop
sub
push
lods
in
cmovnp
jl
call
enterw
movsb
or
insb
jnp
jge
sbb
jmp
testb
fsubrl
lahf
dec
bound
cli
and
daa
sub
incl
in
dec
cmp
pop
dec
movsl
adc
dec
mov
js
dec
in
popa
sbb
or
sbb
mov
fidivrl
lock
adc
lods
dec
push
adc
stos
cmpsb
xchg
rolb
rolb
xchg
hlt
inc
lea
pop
adc
scas
mov
jne
sbb
shll
adc
subl
sub
push
in
sbb
bound
in
sahf
lahf
adc
add
fistpl
pop
xchg
cmpl
xchg
sbb
out
mov
into
pushf
cmpsb
push
mov
jbe
fisubs
jne
sbb
rorl
fidivrs
sub
lcall
out
pop
popw
xor
inc
stos
clc
jb
or
mov
out
ret
pop
xorl
sbbb
jne
add
in
ja
daa
icebp
cmp
iret
push
test
xchg
mov
pop
out
push
pop
and
lds
in
lods
dec
lcall
jmp
pop
divb
mov
popf
pop
mov
stos
mov
bound
mov
jae
xchg
imul
ljmp
dec
pop
mov
ret
inc
sti
cmc
mov
fstps
out
xchg
pop
sahf
insl
sarb
jg
pavgw
jp
out
nop
mov
jle
pop
push
fwait
pushf
jb
mov
jmp
inc
ljmp
cmp
cld
jle
cmp
sub
stc
lock
xchg
pushf
fsts
enter
pop
adc
xlat
push
fucomi
or
xchg
lds
int
in
inc
ret
mov
push
fstpt
xor
mov
gs
mov
jmp
js
lea
lods
arpl
mov
fsubp
xlat
xchg
enter
xor
xlat
hlt
jp
mov
mov
daa
roll
loopne
sbb
sbb
push
add
cli
scas
daa
clc
mov
daa
sbb
adc
je
in
ss
fs
adc
mov
push
and
mov
add
popf
inc
dec
dec
add
gs
jbe
mov
adc
fcompl
pusha
xor
or
xchg
lret
xchg
cmpsb
sub
mov
cmp
leave
mov
mov
test
std
sub
repnz
loope
sub
iret
stos
jbe
ud1
push
sti
pop
jmp
imull
outsl
popa
cmc
ret
icebp
xor
mov
test
push
rdpmc
js
fidivs
mov
cmpsb
mov
pop
add
push
cld
movsl
test
pop
jae
jge
push
or
xchg
popa
sbb
cmp
push
mov
shr
or
sahf
aad
repnz
fnstenv
icebp
mov
out
out
hlt
inc
push
lods
jecxz
xor
int3
xlat
xchg
xchg
mov
aaa
jl
or
push
jae
or
ljmp
lcall
fnstsw
inc
cltd
imul
clc
push
pop
xorb
adc
adc
mov
mov
mov
push
int
lods
adc
sbb
ss
mov
dec
loopew
lahf
lock
or
jb
dec
xchg
loop
dec
jno
mov
add
and
sbb
lods
cmp
fdivrs
jnp
mov
aas
mov
mov
popa
icebp
popf
sbb
les
jo
jnp
jbe
mov
and
or
xchg
add
adc
mov
mov
mov
std
sbbb
dec
cld
inc
adc
and
shlb
xor
dec
dec
mov
jb
mov
fmuls
inc
inc
test
sbb
lods
xchg
sbb
imul
cmp
addr16
pop
or
out
cmp
out
jl
sbb
pop
dec
sbb
or
jbe
push
inc
or
fsubrs
fimull
mov
dec
cmp
stos
out
and
and
dec
roll
in
daa
ss
and
in
adc
xchg
out
leave
add
ljmp
outsl
pushf
xor
sarb
sub
lods
outsl
pop
xor
mov
pop
add
and
shl
loop
imul
les
jle
xchg
test
dec
or
loop
scas
xchg
mov
scas
mov
push
outsl
inc
dec
or
add
sub
cmp
sub
call
mov
dec
cmp
jne
add
arpl
push
icebp
loopne
cld
cmp
lock
fdivl
xchg
push
sub
inc
cmp
inc
pop
sbb
stos
adc
sbb
scas
mov
into
ficoml
mov
fbstp
scas
cmp
jo
cmp
inc
movsl
aad
sbb
aas
and
push
push
inc
mov
je
and
das
fs
xchg
jbe
lods
mov
jno
mov
mov
imul
pop
lds
mov
imul
orl
sub
push
pusha
jae
test
and
pop
insl
xor
fldenv
sub
xor
in
cltd
and
jg
pop
push
out
dec
mov
sub
push
aam
pop
push
in
pop
mov
imul
jo
jne
dec
push
dec
push
cmp
jmp
cmpsb
sbb
push
mov
and
movsb
scas
xor
pop
aam
pop
sbb
hlt
mov
jle
adc
jmp
enter
mov
inc
int3
lret
xchg
aad
jl
jno
dec
xchg
cmp
push
popa
dec
xchg
insl
dec
push
mov
xor
mov
push
mov
lock
jno
adc
incl
cs
xchg
les
jb
lcall
or
mov
leave
and
mov
das
mov
subb
mov
xchg
popa
jmp
jae
mov
call
inc
movsl
scas
wbinvd
sub
jecxz
push
testb
ss
stc
jno
jb
xchg
testl
push
push
insl
fbld
xchg
mov
mov
mov
enter
movsb
imul
clc
mov
xor
adc
and
add
adc
sub
mov
adc
cmp
xchg
stos
fidivrs
cmc
imul
movsl
mov
lods
push
lods
cmp
pop
inc
push
ss
cmp
dec
push
js
xor
imul
push
mov
pop
cltd
xchg
scas
decb
cld
xchg
xchg
mov
mov
call
add
sbb
mov
stos
jae
xchg
pop
std
cltd
fildl
adc
test
xchg
xchg
aad
mov
or
iret
xor
sarb
adc
push
js
mov
jbe
jge
pop
mov
insl
mov
scas
rcrl
sub
dec
ss
pushf
add
xor
nop
mov
cmp
xchg
lods
loope
leave
jle
inc
mov
test
and
rorb
push
ja
decl
insb
adc
push
push
lds
clc
pop
imul
int3
pushf
insl
or
das
stos
cmp
push
arpl
sbb
cmp
mov
jo
jno
sub
lret
cmp
jmp
cmp
mov
xchg
jmp
mov
inc
insb
loope
insb
push
jecxz
sub
mov
idivl
mov
ds
pop
push
push
push
pop
mov
xor
lock
sub
sbb
out
vpandn
stc
cmp
cs
push
dec
dec
push
sbb
add
mov
std
jae
ret
sub
ficoml
outsl
inc
sti
adc
push
adc
mov
gs
mov
jmp
inc
jne
mov
and
mov
cld
loopne
loopne
loopne
std
jmp
hlt
les
outsl
push
in
imul
jnp
pop
sbb
ret
and
adc
dec
add
pop
dec
pop
mov
push
jae
enter
lahf
mov
es
push
insl
fsubr
pop
or
sbb
shlb
push
sbb
push
or
scas
jge
mov
xchg
cmp
cmp
xor
enter
leave
adc
clc
mov
orb
sub
push
inc
mov
fdivp
adc
mov
mov
push
add
dec
test
lahf
fstl
push
xor
call
cltd
cld
test
or
or
pop
cli
push
imul
add
mov
or
into
scas
testb
mov
cld
andb
and
std
js
mov
out
xor
nop
dec
cmp
pop
shl
jb
cli
out
ret
xor
sbb
ficoms
inc
cmp
or
add
add
stos
movsb
xor
dec
jo
inc
xor
xor
xor
inc
and
fsubs
push
clc
movsb
cmp
dec
lods
lahf
loopne
lea
pushf
or
cmc
mull
aas
sbb
fistps
xchg
adc
daa
into
loope
shr
sbb
in
lahf
jns
mov
push
mov
cmp
inc
inc
ja
sti
inc
es
dec
scas
xchg
and
jge
rcrb
in
jne
addr16
idivb
je
xor
test
test
data16
addr16
pop
mov
aas
cwtl
shr
lret
inc
push
and
jmp
xor
cmp
rorb
jge
mov
jl
cmp
outsl
jle
cmp
ret
pop
and
movsl
pop
inc
mov
dec
stc
scas
repnz
lds
mov
mov
iret
insb
push
xchg
sub
je
xchg
push
addr16
negb
inc
pop
stc
out
or
xchg
addr16
or
lods
sub
or
dec
dec
pop
stc
sub
lods
add
mov
add
loope
bound
xchg
inc
bound
mov
loope
int3
jb
mov
negl
push
sbb
mul
pop
xchg
fs
xchg
subb
push
inc
pop
push
orl
sbb
xchg
ret
out
sub
cmc
adc
cwtl
mov
lods
push
mov
or
andl
sahf
lods
cmp
lds
rcll
jmp
int3
outsb
int3
push
jl
pusha
and
pop
pusha
mov
adc
xor
scas
dec
fcmovnbe
jne
sbb
pop
push
adc
adc
fldcw
mov
push
enter
rcll
pop
sbb
movsl
test
inc
sub
mov
lret
xor
imul
jl
movsl
sahf
push
mov
sti
fwait
aam
cltd
jae
sub
xlat
les
inc
xor
dec
popl
inc
pop
jecxz
mov
push
out
aam
outsb
push
vmovntps
out
push
inc
xchg
pop
fmul
jne
nopl
xlat
sbb
data16
xchg
daa
stos
je
sub
sar
scas
mov
test
subl
mov
imul
xchg
push
mov
repz
incl
cmpsl
xor
lret
mov
scas
mov
pop
data16
or
pop
xchg
pop
popl
test
cmp
mov
es
jno
mov
cmp
sub
lods
leave
xchg
mov
add
xchg
cmp
lcall
inc
push
mov
orl
inc
or
stos
loope
lods
cmpsl
push
mov
addr16
movsb
enter
xlat
and
aaa
push
outsb
sbb
push
loope
aad
fbld
adc
xchg
inc
lcall
mov
popf
enter
lods
inc
cmp
pop
cltd
inc
aam
mov
shrb
pop
cmp
fiaddl
cmp
loop
and
and
add
pushf
imul
ficoml
cmp
fisttpll
push
push
sbb
hlt
pop
sti
cmp
mov
repz
lahf
out
push
adc
xchg
mov
orb
dec
imul
pop
sbb
ss
sbb
push
mov
movsb
xchg
adc
mov
data16
mov
aam
push
dec
push
dec
xor
push
ret
data16
je
push
or
out
or
int3
test
jecxz
xor
clc
jle
outsb
lock
pusha
pop
cmpsb
adc
xchg
js
fiaddl
fdiv
xor
pop
les
pushf
pop
das
out
xor
sbb
push
int3
xchg
in
cli
scas
inc
jnp
dec
push
fbld
pop
pop
sti
and
jne
adc
shl
arpl
ds
cmp
mov
sti
insl
loopne
stc
jle
dec
pop
iret
nop
inc
dec
je
cmp
and
popa
push
or
pusha
and
mov
ljmp
stc
mov
in
pop
sti
fistpll
jl
mov
loope
loop
cmp
jno
push
int3
xchg
lea
lret
jge
and
jo
xchg
scas
mov
mov
xlat
popf
dec
mov
bswap
inc
pusha
pop
movsb
inc
loopne
pop
mov
push
jge
aad
or
imul
mov
cmpsl
ds
cmpsl
mov
push
mov
jp
push
mov
scas
mov
scas
xchg
lods
lahf
mov
add
fs
push
je
loopne
mull
imul
xchg
ret
adc
ds
popf
adc
add
lds
sub
mov
jle
and
and
mov
nop
add
dec
pushl
mov
gs
xor
sub
icebp
mov
sarb
xor
jg
cmpsb
jo
mov
cmp
clc
xchg
mul
adc
dec
and
jns
rcr
inc
sbbl
inc
movsb
pop
test
xorw
dec
sub
pop
cmp
sub
jl
or
repnz
xorb
lea
inc
jae
test
jne
inc
mov
popa
sbb
fistps
insb
mov
adc
fwait
out
mov
jb
pusha
shrl
imul
inc
inc
call
xor
jnp
mov
jb
sub
sti
lret
push
push
mov
loop
enter
scas
push
pextrw
cmpsl
adcb
je
aad
sar
pop
mov
fld1
loope
arpl
cmp
out
pop
cmp
and
adc
ficomps
inc
pop
inc
loope
mov
dec
add
jl
stc
in
add
mov
jae
movsb
insb
in
test
mov
mov
inc
pop
je
xchg
inc
mov
push
outsl
and
jb
ljmp
xchg
and
cmc
cld
jge
fisubl
in
add
adc
imul
adcl
mov
pop
xchg
pop
jb
lcall
data16
enter
mov
movsl
add
jo
outsl
daa
mov
cmc
and
loop
mov
add
mov
cmpsb
pop
ret
ja
int
xchg
sub
inc
pop
cmpsl
int
fdivs
push
adc
sub
and
push
and
xchg
mov
add
lock
iret
mov
sbb
inc
xchg
pop
cltd
jae
stos
add
popa
or
insb
jne
or
pop
out
sbb
or
xor
aas
out
cld
mov
xlat
xchg
cmc
xchg
cs
clc
jns
lods
xlat
cltd
mov
sub
inc
push
inc
mov
xor
inc
js
xlat
xchg
jp
xor
or
pusha
inc
mov
jb
mov
jl
mov
push
pop
pop
cld
pop
or
es
in
int3
add
and
test
jb
popf
cld
jns
xchg
movsl
push
leave
sub
pushf
dec
and
or
shlb
pop
xchg
fistps
mov
mov
fildll
ljmp
mov
incl
ljmp
jns
mov
or
sbb
jecxz
push
push
and
shl
mov
sub
mov
les
pop
cmp
fldl
call
jbe
xchg
stc
popf
pushf
adc
loopne
imulb
cmp
aaa
and
jmp
cli
daa
sbb
xchg
mov
mov
inc
lea
dec
pop
je
out
je
xchg
dec
mov
shl
adc
xor
jne
js
adc
rol
fildll
xor
xchg
and
xor
sahf
dec
mov
enter
sahf
add
and
and
adc
inc
fstl
mov
data16
mov
pop
or
adc
or
cmp
xchg
mov
test
lret
outsb
xchg
sbb
push
stc
outsb
sub
mov
int3
js
pop
ret
aam
pop
sbb
test
xchg
stos
lahf
loopne
js
icebp
mov
adc
rcrl
in
mov
dec
or
xchg
aam
pop
mov
decb
outsb
jae
jle
leave
sbb
or
orb
fst
cld
dec
pop
dec
ret
rol
popa
repz
adc
and
es
outsl
or
jo
int
fs
cmpb
jne
aam
jae
fldenv
or
xor
dec
xchg
push
mov
inc
adc
push
mov
hlt
adc
jno
repz
rolb
pop
bound
sub
and
in
aad
fidivs
inc
push
shlb
loopne
push
cmpsl
cmc
pop
fcompl
clc
dec
loope
sub
push
adc
icebp
inc
cmp
std
adc
arpl
test
cmp
inc
jp
or
sbb
cmp
repz
imul
cltd
ja
mov
and
jnp
push
inc
or
outsb
inc
add
gs
push
mov
gs
popa
iret
add
pushf
les
dec
xchg
inc
inc
jno
adc
fildll
imul
add
pop
jno
subl
mov
jg
sar
neg
rcll
fcmovne
scas
data16
fstl
inc
sbb
add
mov
lcall
push
and
cmp
addr16
xor
jecxz
mov
mov
inc
push
sbb
fildll
jge
rcrl
std
mov
adc
inc
lcall
leave
and
xor
test
adc
sbb
dec
inc
or
lcall
nop
jle
pop
cmp
aad
mov
addr16
adc
dec
scas
leave
fcomps
gs
nop
inc
mov
inc
das
lret
or
xlat
adc
jecxz
adc
adc
leave
add
sub
dec
shrl
scas
mov
movsl
call
mov
cltd
push
fdivrl
std
push
cli
dec
cli
test
loopne
dec
lret
or
or
rcll
lods
cmp
push
inc
add
mov
stc
shl
add
ret
movsb
mov
lods
aaa
or
lcall
dec
jne
call
mov
push
dec
push
push
das
ret
lods
xor
out
scas
cmp
adc
pushf
pop
mov
fcmovu
inc
out
imul
aas
pop
xchg
insl
lcall
add
std
lret
and
fs
xchg
in
loopne
sbb
clc
shlb
or
add
cmp
loope
ror
outsl
repnz
insl
addr16
sbb
pop
mov
fwait
pop
push
into
add
xchg
dec
push
xor
pop
mov
shll
repz
sub
push
incb
hlt
icebp
pop
movsl
testl
sub
mov
push
js
scas
push
inc
and
jecxz
jns
push
mov
and
adc
call
pop
or
imul
jne
sub
outsl
test
dec
lret
jge
mov
imul
adc
decb
int
dec
je
push
in
mov
orl
leave
inc
test
jns
mov
mov
or
iret
xor
lods
lret
push
loope
sahf
in
cmp
jb
dec
sbb
or
test
fiaddl
inc
cmp
lods
cli
pop
pop
xchg
cmc
and
or
sbb
add
jp
fwait
addr16
lret
lds
push
clc
or
loop
stos
setle
cmpsl
xlat
push
insb
cmp
ljmp
lock
sub
test
inc
test
fstp
xchg
push
jns
xchg
and
bnd
xchg
loop
jge
mov
fdivl
push
xchg
push
push
inc
inc
add
out
adc
addr16
mov
xchg
add
dec
sub
fwait
push
fimull
ss
iret
arpl
pop
pusha
push
sti
inc
xchg
aad
mov
and
jmp
push
cmp
mov
into
in
pop
sbb
lds
mov
hlt
aad
mov
mov
adc
cmp
test
test
cmpsb
mov
sarl
pop
jmp
inc
xlat
cmp
fistpl
andb
cmp
mov
push
jne
cwtl
lahf
add
je
sub
pop
andl
xor
inc
out
mov
push
inc
cltd
data16
jge
lahf
xor
sbbl
mov
fstpl
stos
add
cmp
popa
xchg
mov
jne
jne
inc
aaa
ficoml
fadd
sahf
ljmp
push
aaa
outsl
pop
add
aam
js
mov
movsl
xchg
jb
add
clc
xchg
insl
sub
sub
mov
add
xchg
pop
mov
pop
imulb
and
outsl
pop
pop
inc
sbb
addb
stos
cmp
loope
ret
add
hlt
mov
rcrl
dec
sbb
stc
dec
adc
arpl
ds
sub
add
mov
sbb
sub
test
dec
cld
mov
lret
xor
mov
orl
and
dec
lea
dec
cmpb
hlt
aam
imul
pusha
sub
cli
test
pop
mov
ret
inc
icebp
jnp
insb
out
xchg
scas
sub
insb
mov
mov
jge
clc
ret
out
push
sbb
bound
std
pop
jmp
mov
insb
fsts
inc
dec
push
push
js
pop
ja
sub
notb
jecxz
fists
sbb
movsb
sub
in
pop
xchg
sbb
into
jecxz
xchg
in
add
rolb
jne
mov
cltd
mov
je
sub
inc
loop
sub
std
je
ret
cmp
ljmp
lods
dec
and
mov
jge
xchg
xor
xchg
das
icebp
test
sub
lods
jno
addr16
jns
repnz
gs
ret
inc
inc
adc
sbb
out
aaa
enter
clc
adc
pcmpeqw
adc
fsubrp
inc
enter
sbb
push
mov
xchg
pop
cmpsl
cmp
iret
arpl
fldl
je
dec
cmp
lret
repnz
push
and
into
in
push
loopne
add
in
ds
or
outsb
stc
addr16
pusha
xchg
stos
mov
in
out
stos
inc
into
repz
into
in
xlat
cmp
cmp
pop
jmp
dec
mov
sub
jge
jnp
dec
dec
ror
fdivr
jg
iret
cmp
lods
sbb
dec
mull
cmp
or
push
test
push
sub
sbb
pop
into
sub
int3
mov
int
loop
mov
lret
fnstcw
pop
mov
ret
xor
in
movsb
movsl
pop
in
inc
mov
imul
test
or
xchg
sarl
gs
push
jp
xor
mov
in
xchg
or
push
mov
cmpsb
bound
incl
jp
aad
jle
pushf
push
aaa
imul
add
cli
std
mov
lcall
hlt
mov
mov
mov
andl
data16
mov
mov
pop
xchg
scas
loopne
loope
fnstcw
jmp
cmp
jmp
sbb
in
cmp
leave
add
jae
sub
in
scas
add
lahf
push
mov
ror
enter
jbe
xlat
adc
lahf
adc
sub
mov
jecxz
inc
mov
inc
scas
dec
std
inc
add
mov
sub
inc
xchg
cld
adc
inc
dec
cmp
cwtl
cwtl
ret
inc
mov
pop
stc
cmp
jg
push
ror
int
jnp
sahf
outsb
inc
rolb
test
out
jns
faddl
and
mov
mov
notb
rcll
rcrl
mov
inc
xorb
sti
fldl
push
xchg
pop
stos
call
fs
push
push
mov
test
lret
mov
add
stos
repz
cmp
jecxz
and
popf
bound
roll
mov
mov
lds
dec
mov
dec
add
scas
les
push
sub
mov
xor
cmp
cmp
daa
movb
insb
movsb
push
mov
fidivrl
sbbb
xchg
arpl
in
xchg
fwait
scas
lret
imulb
jge
push
ret
cmc
icebp
mov
jbe
mov
jns
and
jge
xlat
pop
fstp
test
cwtl
cltd
sbb
iret
aas
jnp
or
push
and
ret
inc
sahf
out
lret
arpl
repz
out
xchg
lcall
lods
loope
out
xchg
push
push
jp
pushf
cmc
inc
ret
cmp
test
pop
inc
jno
lret
cmp
pop
aad
aas
sub
js
mov
les
sbb
cmp
pop
into
movsb
or
lock
mov
cld
out
mov
dec
gs
fstpt
stos
jbe
mov
or
mov
mov
mov
pop
jp,pn
cmp
pop
push
adc
pop
sub
ja
dec
push
jp
scas
daa
test
or
sub
jne
and
mov
ret
dec
dec
sbb
and
push
into
std
xor
mov
mov
loop
sub
inc
push
stos
outsl
xchg
mov
jle
jmp
imul
leave
jp
inc
xlat
addr16
mov
fdivrl
pop
mov
notl
jle
out
lods
js
pop
rol
iret
or
test
jp
jae
or
mov
xchg
leave
cmp
jno
pop
fs
fsubrs
jmp
pop
aaa
divl
test
cmpsl
sub
adc
inc
notl
pop
clc
push
xchg
xchg
movsb
or
xchg
jl,pn
fisubrl
cmp
push
out
call
shlb
lea
xchg
lods
mov
mov
mov
mov
stc
and
sub
xlat
fstpt
ret
or
inc
cmpsb
outsb
xor
xchg
ljmp
ljmp
fsubrs
inc
inc
dec
pusha
fwait
add
rclb
push
or
and
pop
mov
ja
aam
loop
dec
push
xchg
dec
out
mov
mov
sub
adc
leave
cmp
sub
clc
ljmp
divl
test
adc
cmp
loopne
in
adc
xlat
xor
xchg
add
dec
cmpsl
mov
ja
jbe
sbb
insl
jb
or
mov
and
jge
mov
dec
sub
xchg
shrb
lods
xchg
movsl
inc
fsub
fwait
lret
pop
pop
mov
pusha
cmpsl
leave
pop
jnp
inc
adc
mov
push
push
and
movsl
es
adc
cmp
lret
lea
xlat
pop
shl
jge
out
mov
mov
adc
out
aas
cltd
sub
cltd
jl
fnstcw
inc
push
test
xchg
mov
cmpsl
xor
arpl
movsl
int
jne,pt
mov
dec
in
nop
cmc
add
push
mov
jno
xchg
adc
adc
cmp
inc
push
and
and
xorb
ret
mov
rcr
sbb
nop
or
adc
out
rorl
mov
and
or
add
cmc
imul
addr16
xchg
inc
cs
adc
dec
pusha
sbb
sub
adc
into
jmp
dec
mov
cmpsl
sbb
dec
loop
sahf
call
loope
mov
cmp
cltd
sub
cltd
lods
cmp
xchg
xchg
stos
lahf
ljmp
ljmp
jp
clc
inc
insl
int
imul
shr
push
pop
je
cltd
and
jnp
sbb
jle
andl
popa
adc
int
insb
popf
xchg
pop
mov
jb
cmp
jno
inc
xchg
out
shrl
notb
mov
es
icebp
sarb
andl
lock
lock
dec
aaa
push
jle
sbb
cmp
pop
cmpsb
aas
je
in
cli
aaa
clc
mov
lea
mov
pushf
jge
push
out
sahf
ficomps
int
and
fadd
inc
xor
dec
cli
cli
insl
aas
out
push
inc
jle
jle
xor
cwtl
sbb
jns
inc
mov
incl
xchg
shrl
bound
xor
daa
mov
add
sbb
mov
cltd
test
jg
xchg
mov
lods
xchg
xor
insb
mov
stos
mov
stc
lods
bound
adc
rcr
mov
je
jl
xchg
sbb
pop
das
insb
arpl
cli
je
repnz
mov
dec
fcoml
enter
mov
cmp
idivl
and
sub
fcmovnbe
sub
fsubs
sub
clc
mov
test
cmp
xchg
notb
fimull
xchg
jbe
mov
push
adc
sbb
sahf
icebp
add
clc
jl
push
mov
xor
xchg
mov
test
or
sbb
xor
jo
aam
out
in
push
push
push
and
test
addr16
push
jmp
adc
pop
mov
xchg
cltd
mov
push
push
jge
push
mov
jno
fs
fcoml
push
lods
lock
lods
orb
mov
insl
push
xchg
pusha
mov
xor
out
mov
bound
xlat
adc
adc
sub
jecxz
punpckhdq
sti
jno
pop
sti
jne
mov
cmpsb
shll
lea
push
aam
add
in
je
sub
inc
mov
lahf
sub
fstps
mov
jmp
jg
andl
inc
adc
mov
sbb
fldl
movsb
xlat
aaa
xchg
push
xor
fmuls
mov
lods
outsb
mov
mov
adc
mov
jns
fcomi
xor
inc
push
insl
outsl
popa
sub
jge
mov
fsubl
push
sahf
or
mov
cld
insb
pop
aam
arpl
cmp
cmp
mov
in
int
test
pop
fstp
inc
les
mov
lods
cmp
mov
pop
fwait
mov
rorl
inc
fstps
cwtl
jbe
adc
leave
into
sarl
pop
and
fcmovnb
add
shrl
xchg
push
or
cmpsb
xchg
or
jmp
or
rclb
in
test
mov
dec
add
sub
adc
xchg
and
mov
movb
push
push
psraw
or
lahf
mov
out
sbb
or
cltd
rolb
fiaddl
mov
sub
int3
dec
sbb
dec
mov
mov
aas
jmp
xlat
lods
add
mov
xor
mov
adc
push
enter
fsts
jle
adc
ss
or
jge
stos
xorb
or
inc
in
faddl
cmp
xchg
xorl
pop
fwait
fs
lret
sub
fists
dec
or
lods
mov
pop
xor
pop
xor
idivl
ss
aam
mov
adc
or
lock
add
ljmp
out
dec
push
roll
push
movsb
add
cmc
inc
xchg
insl
insb
push
imul
mov
jae
cmp
outsb
out
cmp
fcoml
and
mov
dec
cwtl
mov
mov
dec
inc
lds
out
test
je
in
jecxz
mov
ds
sub
imul
mov
aam
dec
inc
xchg
das
mov
int3
pop
stc
sbb
cmp
jecxz
cmp
fcmovbe
sbb
pop
and
mov
mov
mov
lret
push
idiv
xchg
movsb
fcoml
out
cld
repnz
clc
nop
cmpsl
mov
rcrl
cs
pop
arpl
push
adc
or
xor
loope
imul
lods
es
dec
and
sbb
push
xchg
and
daa
mov
add
lcall
and
aaa
sbb
xor
mov
mov
out
jmp
dec
lret
dec
ficomps
adc
jne
das
ss
jno
lahf
xor
mov
clc
call
in
jo
mov
sub
mov
mov
jne
dec
les
inc
sbb
insb
mov
loope
inc
popf
sbb
test
push
loop
cmpb
lds
fsubs
push
push
jl
shlb
or
mov
mov
pusha
pop
jecxz
cmp
fs
adc
mov
scas
out
add
mov
aam
shlb
dec
leave
lahf
mov
call
push
or
leave
sub
gs
or
imul
adc
add
sbb
insb
or
out
cmp
adc
insl
mov
stc
adcb
inc
inc
jmp
sti
sbb
sub
inc
inc
hlt
ds
imul
sub
fisubl
movsl
das
mov
mov
push
dec
xchg
mov
adc
mov
mov
push
sbb
popa
jne
push
inc
or
jae
or
add
clc
movsb
xchg
pushf
aad
sub
or
xchg
mov
adc
pop
mov
pop
imul
shrb
add
adcb
in
fwait
jl
cwtl
jp
push
mov
jno
add
adc
mov
mov
xchg
sbb
cmp
nop
mov
popf
in
les
push
xchg
dec
dec
add
fld
pop
test
xor
cmp
mov
mov
rcrl
jecxz
sbb
fcmovu
add
xor
dec
dec
cmp
pop
mov
xor
test
push
inc
fcom
fidivs
inc
shrl
enter
gs
xlat
inc
mov
or
mov
jnp
repnz
and
sti
adc
andb
and
mov
idivb
sbb
ljmp
std
dec
jl
inc
add
xchg
lret
adc
jns
gs
shl
push
loope
lret
push
repz
cmp
jg
fsubr
out
sbb
mov
sbb
and
pop
or
add
and
push
sub
xor
repz
mov
sub
push
imul
fldenv
mov
cltd
int3
mov
das
jb
dec
sbb
sbb
lods
cld
outsb
mov
mov
mov
arpl
outsb
test
pop
xorl
outsl
ja
pusha
pusha
mov
jmp
cmp
movsb
xchg
xchg
adc
lods
or
push
std
cli
push
inc
fwait
adc
cwtl
xor
xlat
out
xor
add
mov
fcmovb
jl
sub
sbbl
rclb
fbld
push
aam
pop
andb
fldcw
enter
dec
jg
push
ljmp
scas
push
jns
lods
sbb
mov
dec
dec
imul
rcll
mov
iret
aad
xchg
ja
jmp
mov
xor
cltd
je
pushf
mov
enter
cmp
push
sub
cmc
imul
sti
inc
fxch
inc
xor
aas
lods
sahf
cmp
decl
dec
enter
iret
inc
int3
jl
dec
movsl
and
rol
scas
in
mov
pop
cwtl
jmp
dec
jecxz
outsb
xchg
jg
xor
ljmp
stos
popf
es
mov
cmp
addr16
mov
xor
and
mov
int
mov
dec
repnz
cmc
xor
das
mov
xor
sahf
pop
sub
call
faddl
mov
stos
cs
jmp
inc
and
leave
sbb
lcall
out
cltd
lods
test
push
out
ror
xchg
inc
jmp
inc
mov
push
cmpsb
lods
lea
and
test
xchg
jp
add
mov
jecxz
cltd
out
sbb
sub
adc
xchg
or
mov
cmp
rcrb
pop
sbb
sub
mov
jne
push
jo
pushf
ror
arpl
daa
sbb
fwait
sbb
push
or
push
dec
les
clc
js
loopne
and
jecxz
gs
roll
shlb
sbb
or
fs
mov
cmc
dec
in
sub
xchg
aas
cmp
adc
xchg
dec
jecxz
cld
xchg
jb
scas
sub
and
dec
push
out
xchg
jmp
inc
mov
jle
or
mov
scas
in
sbb
fmul
shll
jns
push
inc
rolb
fldcw
out
popl
xor
add
stc
movsb
jl
daa
pop
xor
push
mov
popa
add
lcall
loop
and
inc
pop
stc
scas
xlat
int
fidivrl
ja
subb
and
fcompl
xor
push
adc
push
sahf
ljmp
or
out
adc
sub
out
xor
loopne
or
jmp
pop
pop
out
cmpsb
loop
les
push
xorl
inc
push
fistpl
jns
adc
loope
cmpsl
sbb
xchg
adc
cmp
lock
xor
jecxz
add
andb
sbb
cmp
mov
stos
mov
inc
cwtl
sub
cmp
or
call
cmp
shll
mov
xchg
mov
xlat
dec
mov
enter
stc
cld
adc
icebp
int3
push
mov
addr16
orb
into
arpl
or
mov
pushf
and
push
push
inc
aad
and
call
jnp
inc
add
dec
fldl
testb
add
xchg
std
dec
cmpsb
pop
fstpt
xchg
mov
pop
cli
or
std
jmp
xchg
xor
jmp
lcall
stos
cs
sti
cmp
je
jo
cmp
test
push
sub
mov
sbb
mov
out
repz
mov
jne
dec
sbb
ljmp
xor
pop
sub
aam
jg
xchg
ja
movsb
jl
jmp
push
call
mov
orb
jmp
mov
pop
push
add
jbe
arpl
inc
cmp
pop
dec
jns
addr16
mov
mov
repz
xor
xchg
jno
hlt
das
push
xchg
or
xor
jp
mov
jmp
dec
jle
pop
mov
jo
cmpsb
inc
scas
fisttps
pop
lea
je
push
pop
cmp
mov
dec
mov
cmp
ss
push
dec
insb
push
pushf
fstps
jp
mov
test
inc
mov
jae
inc
sub
cli
sbb
sbb
jb
daa
shl
adc
subl
add
dec
push
dec
sbb
xorl
mov
inc
fs
xor
pop
jns
push
push
xor
movsb
daa
test
mov
aad
sbb
dec
fidivs
fs
sbb
inc
pop
lods
jecxz
dec
cmp
cmp
out
and
or
push
aad
mov
xor
pop
aas
lds
insl
mov
jp
push
and
pushf
cltd
bound
dec
push
addb
push
sbbl
int3
xchg
js
cmp
inc
fcomps
inc
and
pop
in
xchg
adc
push
lcall
push
sbb
in
iret
push
xor
out
mov
leave
imul
jge
push
pop
pop
push
in
sbb
hlt
dec
push
mov
enter
ja
cmp
cwtl
jl
jbe
sbb
cwtl
cmp
stos
xchg
mov
rcrl
and
push
dec
in
cmc
aaa
ret
pushf
imulb
mov
sub
movsb
mov
es
jae
scas
pop
rcll
dec
push
fimull
mov
sub
outsl
dec
push
es
mov
jp
cli
rorb
das
pop
lds
hlt
add
mov
xor
push
xor
scas
adc
lods
mov
jecxz
mov
lds
cmc
jno
lcall
fildl
pop
in
jge
aam
out
pop
pop
pop
sub
pusha
in
dec
jno
je
adc
push
idiv
lcall
xchg
lcall
icebp
mov
jbe
mov
xchg
add
fldenv
stos
xchg
dec
push
les
pop
cmp
aaa
decb
popf
fstl
push
mov
mov
xchg
scas
and
jle
mov
add
pop
movsb
into
pop
orl
inc
fbstp
fs
lret
cwtl
subb
jmp
pushl
repnz
loopne
fldenv
stc
adc
sbb
mov
cmpsb
aas
mov
add
sub
aas
xchg
mov
or
jmp
sub
sbb
push
dec
pop
or
pop
scas
roll
xchg
jg
push
int3
xor
jl
mov
test
out
adc
cmp
sbb
mov
adc
xchg
fiaddl
mov
adc
add
push
aaa
aaa
add
jnp
or
jge
mov
mov
insl
cld
sbb
arpl
push
or
mov
rcll
testl
or
data16
pop
mov
js
xor
test
xlat
pop
add
fbld
ret
aas
mov
aas
mulb
outsb
dec
cmp
jns
sbb
ss
dec
jge
add
loop
popa
add
xor
sbb
fistpll
rorl
add
outsl
pop
shll
xchg
repz
dec
fs
sub
insl
lret
dec
mov
mov
in
cs
fldl
lret
dec
scas
mov
aam
mov
ss
xchg
ret
pop
ds
mov
or
mov
test
push
mov
jecxz
sub
xlat
jl
mov
aad
arpl
imulb
mov
adcb
mov
jnp
enter
inc
decl
mov
nop
pop
jge
add
sbb
mov
lds
add
nop
push
test
push
imul
jae
testb
rcll
add
dec
jo
jb
jo
dec
je
and
out
movsb
rep
loope
lret
imul
or
aad
push
xchg
int3
cmp
push
push
xchg
dec
xchg
xor
pop
nop
mov
pop
xchg
lock
mov
and
push
sahf
mov
call
pop
add
xchg
sub
shrb
cmp
adc
sbb
lds
int3
inc
bound
insb
mov
arpl
xchg
pop
decb
pop
sbb
pop
mov
sbb
fbstp
fs
sub
addr16
pushf
test
je
or
and
pushf
mov
mov
lret
push
mov
arpl
fdiv
sub
mov
int3
xlat
cmc
add
outsl
in
adc
test
addr16
mov
jns
fisttps
sahf
sub
pop
push
js
aas
xchg
push
fstpl
stc
into
push
outsb
cmpsb
scas
push
push
push
aad
js
aas
lcall
stos
pop
lock
cmpl
or
and
push
lea
rolb
add
inc
inc
pop
jle
jp
inc
xor
icebp
addr16
adc
sub
add
cltd
loopne
fcomp
jecxz
scas
cmpsb
cmp
stc
push
xchg
mov
sub
out
or
xchg
iret
dec
shll
cmp
test
mov
sub
or
or
mov
and
xor
leave
addr16
mov
loop
hlt
je
xchg
rcrb
mov
ficomps
in
mov
lds
adc
shr
pop
mov
nop
imul
push
sbb
mov
in
add
int3
mov
add
or
bound
in
hlt
or
lds
addr16
pop
jae
xor
adc
pop
shlb
loopne
xchg
push
dec
cmp
and
insb
push
es
inc
daa
insb
ds
mov
jl
add
lret
inc
mov
daa
out
insb
xchg
scas
iret
xchg
leave
jo
stc
and
aaa
and
dec
cmpsb
mov
lock
out
mov
out
pop
sub
scas
shll
shlb
loopne
mov
popa
inc
addb
jne
xor
push
or
aad
add
jecxz
mov
stos
out
mov
repnz
scas
lods
mov
lret
adc
xchg
jg
jmp
push
adc
xchg
pop
enter
nop
xchg
addl
dec
std
sbb
push
add
inc
sahf
mov
andb
and
push
into
sbb
out
data16
xor
call
flds
xor
inc
cmp
jbe
getsec
stc
add
mov
mov
jl
push
mov
aam
in
or
rclb
movd
sub
aad
fcomps
push
aaa
fdivs
pop
sub
mull
cmp
bound
jl
cmp
fildll
ja
scas
fstpl
dec
shl
lea
add
cltd
idiv
pop
push
loopne
mov
inc
mov
pop
in
or
add
jns
xchg
adc
jb
sbb
pusha
rorl
cmp
mov
sub
addr16
mov
mov
out
fs
icebp
pop
scas
daa
mov
imul
aad
jecxz
dec
jle
jmp
les
inc
je
shl
push
mov
fdivrs
or
xchg
repnz
fdivrs
movsl
fwait
lahf
mov
popf
pusha
xchg
mov
fs
or
out
das
inc
lcall
dec
xor
shrb
cltd
and
cmp
ret
adc
adcb
inc
mov
mov
fucomi
mov
shr
xor
aad
jecxz
mov
movsb
inc
stos
dec
orb
pop
rolb
xchg
xchg
dec
add
in
xchg
jle
and
pop
push
xchg
outsl
pop
cmp
mov
insl
dec
out
pop
sbb
xor
xor
fnsave
scas
loope
repz
rorl
test
sub
fdivr
loope
mov
leave
nop
popf
dec
mov
add
push
ret
cld
sub
movsb
mov
lods
lods
loop
adc
fiadds
or
fsts
test
jbe
pusha
jg
jge
fdivrs
inc
pop
ret
or
inc
pop
xchg
out
test
loope
cs
adc
nop
loopne
mov
imul
push
dec
dec
imul
cmp
xchg
or
test
pop
mov
mov
mov
jb
add
sub
inc
push
les
sub
jmp
inc
sub
add
sarl
xchg
ljmp
adc
mov
movsb
and
mov
pop
cwtl
fdivs
pop
push
dec
sbbl
dec
mov
jo
andl
mov
lea
jnp
outsb
adc
push
adc
cmpsl
es
mov
adc
idiv
sub
movsb
pop
jmp
mov
mov
sahf
movsb
pop
jne
sahf
rorb
adc
fsts
jg
sbb
mov
jle
iret
inc
cld
test
add
mov
and
inc
push
jp
mov
mov
bound
cld
xchg
cmpsb
dec
shlb
rolb
in
mov
mov
dec
inc
pop
xor
push
lea
fidivs
xor
inc
out
mov
out
int3
das
aam
and
movsl
call
rorb
cld
mov
fwait
iret
adc
cmp
ficoml
push
je
test
imul
pushl
jae
jns
jb
and
pop
les
and
scas
sbb
test
pop
pop
sbb
jns
es
and
sbb
or
int3
dec
mov
test
rol
pop
cmp
lcall
or
mov
pop
cmp
xlat
jnp
in
cmp
sub
fcomip
mulb
dec
cs
and
shrb
or
inc
pop
mov
int3
inc
add
xor
into
cs
adc
jae
jmp
mov
in
pop
subb
adc
movsl
add
shl
push
inc
movsb
mov
icebp
sbb
xchg
cmp
frstpm(287
lret
frstor
xchg
loopne
mov
ror
and
cmc
popa
mov
ret
or
jbe
adc
and
inc
lret
movsb
mov
fisttps
movsb
pusha
dec
jg
daa
or
cmp
cs
sti
mov
fs
adc
iret
inc
int
leave
cmp
cmp
insb
or
test
std
ret
mov
sti
sub
jge
mov
xor
bound
out
xor
mov
mov
jmp
gs
push
cli
ss
pop
cs
mov
incl
fisubl
adc
dec
jg
mov
inc
lods
mov
call
pop
test
xchg
popa
scas
xchg
and
and
aam
int3
mov
std
jno
fcmovu
cmp
iret
nop
push
inc
xor
sub
xchg
dec
rorl
fsubrl
cltd
inc
rolb
orl
or
jecxz
ficoml
jle
popf
stc
mov
je
stos
add
sub
out
das
jl
int
out
rorb
pop
adc
and
dec
int3
cmpsl
dec
xchg
jb
mulb
scas
nop
jo
xor
ret
mov
pusha
sub
add
xor
or
icebp
inc
pop
add
aam
push
mov
sub
jns
mov
int3
and
pop
stc
or
sahf
mov
mov
lret
sahf
fstpt
icebp
fwait
push
in
movsb
ret
mov
jno
rclb
and
cmp
inc
and
jg
jl
lds
aas
mov
data16
dec
sub
xor
lret
loopne
out
bound
fiadds
cmc
loop
ljmp
jmp
fistps
in
js
inc
jl
into
es
sub
xchg
icebp
and
lock
dec
lret
lods
jl
sub
dec
add
dec
fstps
fdivs
mov
inc
pop
fimull
aaa
adc
jns
fsubr
add
fcoml
int3
mov
stos
in
rorb
push
inc
or
enter
or
xor
addb
mov
push
cmp
cmc
imulb
mov
in
fnsave
jecxz
xor
cwtl
outsb
push
jge
shl
and
call
shrb
dec
icebp
test
lret
out
jle
movl
xchg
cmc
sbb
dec
lods
dec
xchg
dec
dec
and
jns
adc
ljmp
out
mov
or
sbb
xor
pop
push
mov
out
sub
sbb
push
xor
jnp
aam
hlt
mov
and
cmp
pop
add
push
in
dec
insb
dec
bound
mov
or
mov
xor
adc
daa
sub
sub
adc
pop
sbbb
cmc
adc
mov
mov
ret
and
push
mov
push
xor
mov
sbbb
push
pushf
xchg
add
sub
sbbl
jo
push
jb
and
xchg
cmpsb
push
mov
cmpsb
hlt
jle
mov
rorl
movb
push
mov
call
out
mov
jne
mov
push
scas
test
outsb
and
pop
outsb
sub
mov
sahf
movsb
or
sti
mov
fistl
sub
ds
cmp
jb
cli
jnp
inc
ror
xor
push
fnstenv
adc
aad
mov
sbb
jb
and
adcb
ljmp
stc
dec
xchg
addr16
xlat
leave
cmc
xor
stos
jo
adc
push
mov
dec
xchg
nop
movb
adc
sbb
xchg
xchg
nop
inc
out
mov
loopne
ret
stos
inc
lret
adc
push
sub
or
fiaddl
sub
out
mov
fs
out
std
adc
push
cmc
aaa
or
mov
xchg
lret
jge
scas
aaa
lret
mov
cmpsb
std
xchg
push
jl
jae
lret
pop
jmp
push
in
xlat
sub
mov
movsb
jecxz
ret
cmp
sub
cmp
jg
jo
out
jnp
in
movsb
mov
xor
out
pusha
movsl
mov
add
push
sub
cmp
mov
test
adc
negl
inc
inc
jbe
js
mov
push
and
test
pop
jmp
jb
inc
mov
lcall
mov
loop
lcall
fs
leave
and
sbb
out
ret
fcmovnbe
or
int3
push
mov
xchg
pop
add
sub
cmp
jp
or
enter
movsl
inc
aaa
into
test
outsl
bound
imul
dec
addr16
mov
push
pop
fcmovnb
mov
movsl
nop
lds
repnz
push
jmp
aad
dec
and
sbb
test
push
xchg
aad
jge
pop
mov
xor
or
jbe
mov
lahf
fists
pop
ret
dec
adc
je
lret
dec
jge
call
adc
and
dec
pop
ficomps
lods
push
cmp
push
push
ret
adc
inc
ss
cmp
icebp
fbld
lods
xchg
fildl
jae
inc
mov
icebp
aas
stos
das
dec
pop
push
add
out
xchg
mov
outsl
insb
sbb
mov
repz
aas
call
inc
add
and
mov
add
imul
sub
sti
inc
adc
les
movsb
mov
sub
ss
enter
fs
or
cs
repz
loop
jmp
add
pop
jecxz
ja
and
or
fs
mov
push
sub
push
inc
je
ss
rolb
dec
mov
lods
roll
mov
sub
adc
data16
pop
push
mov
fcmove
sub
inc
dec
mov
fdivs
mov
push
mov
sbb
dec
sub
pop
mov
aad
and
dec
mov
cs
inc
fucomi
shl
or
inc
pop
xor
lods
pop
sarl
xchg
push
clc
out
movsb
loope
adc
and
jns
cld
sub
inc
add
lods
xchg
jg
movsl
pop
in
divb
insl
or
jp
ret
jae
mov
les
push
adc
sti
fdivl
in
adc
mov
or
sub
pop
xor
push
xlat
addr16
jae
stos
js
mov
mov
push
mov
jp
jg
cli
stos
mov
ljmp
movsl
pusha
icebp
push
test
data16
fisubrl
mull
fmull
jmp
mov
sub
push
scas
gs
fstpl
push
sub
cmp
addr16
stc
sbb
lahf
aad
push
leave
test
xchg
xchg
adc
lcall
jg
movsb
jmp
cltd
add
push
mov
test
movsb
in
lahf
pop
xchg
push
int3
dec
test
xchg
cmp
or
dec
push
mov
inc
cmp
jnp
lea
xor
mov
pop
test
jnp
rcrl
dec
scas
js
ljmp
lcall
sub
loope
repz
fdivp
ret
pop
dec
mov
loopne
nop
idiv
lock
daa
out
inc
mov
arpl
int3
mov
popf
loop
in
pop
dec
aaa
mov
add
arpl
test
push
mov
sbb
out
das
imul
jmp
clc
arpl
lahf
sub
rorl
xchg
insl
mov
xchg
andb
and
mov
call
ss
add
jge
lahf
cmp
push
je
jne
pop
lahf
dec
scas
sub
rcrl
add
insl
ficoml
jge
mov
inc
pop
push
cwtl
lea
and
jbe
test
stos
hlt
push
fidivrl
lea
xchg
jg
inc
into
inc
and
mov
fidivrl
loope
or
mov
fdivrp
and
in
sti
out
ficompl
fchs
std
jno
dec
mov
or
xlat
or
insl
mov
pop
mov
out
jg
cmp
and
mov
jge
sbb
leave
imul
and
mov
mov
add
pop
xchg
pusha
add
leave
lret
lea
fcomps
sbb
daa
jbe
mov
pop
inc
in
test
int3
add
loopne
xchg
mov
imul
cltd
fsubl
mov
jno
mov
sbb
sbb
stos
mov
sbb
dec
int3
fs
xor
cmp
ret
mov
loopne
dec
ja
je
std
aaa
in
cmp
aad
pop
gs
movsb
mov
ss
mov
inc
into
lods
and
in
les
lods
mov
adc
test
mov
dec
jmp
into
js
repz
push
jg,pt
push
mov
cmp
and
test
and
scas
fistps
mov
mov
scas
mov
cmpsb
mov
dec
mov
sti
and
mov
push
push
xchg
addr16
pop
inc
sub
pushf
sbb
fnsave
jg
lods
int
stos
int3
lock
add
add
dec
add
ficompl
fwait
xor
inc
or
and
scas
idiv
push
jns
cmp
push
pop
xor
and
imul
sub
mov
rorl
inc
mov
addl
push
sub
push
sub
push
adc
jmp
pop
pop
mov
mov
cmp
das
cmp
aas
jecxz
cmc
or
mov
ror
cli
xchg
sub
in
pop
out
addr16
jecxz
ret
adc
sbb
add
ret
xlat
loop
dec
mov
mov
inc
mov
movd
rcrb
lock
jecxz
dec
in
adc
mov
int3
mov
push
imul
xchg
inc
or
in
or
cltd
add
dec
sub
dec
sub
and
pop
ds
pop
push
mov
jmp
aad
pop
stc
sbb
cmp
fwait
shll
pop
imul
push
arpl
push
in
mov
pop
cwtl
out
sbb
aas
ljmp
mov
sub
repnz
lods
jno
mov
rol
pop
dec
adc
mov
mov
lahf
mov
and
mov
mov
xchg
repnz
xchg
mov
xchg
lret
outsl
inc
clc
faddl
adc
xchg
xor
adc
daa
pop
sbb
jo
jbe
and
xchg
push
aam
cmp
stos
mov
push
in
jns
sbb
add
jbe
xchg
cld
cmp
inc
push
xchg
lahf
cmp
int3
mov
or
dec
xor
add
mov
sbb
sub
cmc
jno
sub
aam
ljmp
call
js
outsb
in
daa
mov
push
cld
lret
repz
addr16
outsb
mov
adc
cmp
jnp
repz
ret
xor
xor
xor
cs
ret
sbb
repnz
xor
rolb
sbb
xchg
mov
call
mov
test
jns
insb
mov
pushf
jae
cltd
sbb
inc
sbb
addl
jg
cmpb
in
sbb
pop
ss
es
sub
sahf
mov
sub
jno
lods
adc
mov
adc
mov
je
sti
mov
cmpsl
rcl
sar
jae
mov
mov
loope
mov
sbb
cmpsb
pop
es
frstor
scas
in
inc
mov
jg
out
movsl
adc
pop
fwait
neg
ret
push
jmp
lock
jo
rcrl
addl
cmp
mov
adc
jo
sbbl
dec
lea
and
fwait
loop
aas
mov
pushf
adc
or
roll
lea
push
mov
outsb
fs
inc
test
jg
js
lea
push
fdivs
aad
lods
loope
fld1
aam
push
lahf
fists
adc
aad
ljmp
add
aas
mov
cmp
cld
sbb
das
inc
mov
add
mov
sub
xor
stc
icebp
ds
aam
xchg
add
mov
out
ret
sub
sti
adc
rorb
repz
les
add
fisttpll
icebp
xor
enter
jb
jne
cmp
sub
pop
fldt
or
or
xchg
dec
pop
aam
sub
std
leave
or
xchg
out
lahf
pusha
outsb
jmp
jno
xchg
push
cmc
ja
popl
cmpsl
pop
out
push
jmp
icebp
lds
jo
je
loope
xchg
pop
cmpsb
add
add
xchg
or
xor
sub
xchg
mov
fsts
mov
and
mov
fldcw
cmp
sti
pop
test
addr16
stc
xor
imul
js
insl
test
gs
inc
imul
xchg
xor
adc
faddl
xlat
adc
xor
pop
jbe
inc
imul
data16
cmp
hlt
scas
lret
lods
shrb
imul
mov
push
mov
mov
cwtl
cmp
xchg
je
repz
flds
or
jbe
icebp
sub
rcrb
jle
mov
mov
dec
mov
repz
cwtl
cmp
inc
add
sub
jge
pop
push
and
lds
cmp
fistpl
ja
jno
dec
cmc
dec
pop
xor
xchg
adc
repz
ds
cmpsl
mov
lret
nop
fidivrs
fwait
xchg
mov
jge
dec
inc
loop
ja
jle
mov
xchg
das
aaa
sub
clc
shll
mov
jge
add
xchg
sbb
mov
mov
rolb
std
jg
fwait
push
in
jo
mov
jbe
push
movsb
and
mov
jl
sub
movsb
add
clc
cwtl
ret
fildll
inc
ss
pop
push
adc
push
mov
xorb
cli
fbstp
xor
outsl
repnz
je
sub
aaa
movsb
sub
adc
jecxz
loope
pop
push
movsb
es
ret
mov
bound
mov
mov
fstpl
out
mov
fimull
jecxz
mov
scas
or
pop
out
fiaddl
and
mov
lret
xsha256
cmpsb
rorl
mov
inc
movsb
cmp
pop
mov
xchg
ds
adc
push
dec
ss
test
sub
hlt
mov
cmp
and
fiaddl
test
mov
repnz
sub
orl
sub
stos
leave
fwait
jb
add
xchg
and
jnp
fsubs
ret
jnp
in
mov
std
cmp
jle
push
repnz
out
lock
aaa
push
pop
mov
push
mov
inc
mov
sub
mov
sbb
clc
jno
mov
test
repnz
push
jbe
cmp
push
mov
fildll
mov
push
push
pop
enter
loopne
push
add
mov
arpl
sarl
js
outsb
xchg
jg
jbe
jbe
jnp
repz
dec
push
pop
test
mov
popa
pusha
jne
mov
pushf
dec
adc
xlat
mov
xor
divb
aaa
loope
clc
fldl
leave
daa
addr16
in
es
xchg
fs
lret
stos
aad
dec
ljmp
fs
inc
inc
testb
fstl
xor
or
push
lahf
cmp
pop
repnz
and
arpl
mov
andb
fs
xchg
sti
xor
ret
out
push
mov
xchg
xchg
jno
mov
es
stos
sbb
lahf
jnp
popf
iret
inc
es
xchg
and
cmp
push
xor
out
das
sbb
mov
add
sub
cmp
push
aam
ret
inc
xchg
sbb
add
xchg
js
and
ret
clc
ss
jno
hlt
inc
stc
push
pop
rorb
and
shrl
xchg
pushf
data16
jmp
fadd
jae,pt
loope
and
add
dec
mov
sahf
inc
jnp
mov
gs
sub
es
repnz
xchg
outsb
inc
dec
or
mov
or
pop
push
jl
xlat
ds
rol
frstor
je
lock
dec
out
mov
loope
nop
idivb
mov
cmp
mov
pushf
ret
xchg
imul
testb
sti
jo
stos
leave
add
psubd
pop
test
in
int
aas
nop
int
jo
shlb
xor
mov
adc
jbe
mov
lock
jnp
pop
dec
test
mov
or
fdivl
ret
mov
and
das
cltd
xchg
xorl
nopl
and
jo
xor
aad
outsb
int3
adc
jae
lock
out
sbb
hlt
into
shlb
xchg
cltd
pmaxub
push
inc
in
stos
pop
push
and
dec
stos
pop
sahf
push
mov
sbb
movsb
jle
shr
sub
imul
mov
lea
fiaddl
cmpxchg
add
mov
in
in
test
jmp
mov
cmpsl
fisttps
test
decl
out
adc
or
out
out
sbb
mov
nop
orl
jl
es
pop
sbb
icebp
loopne
nop
std
idivb
fisubs
or
lods
jo
cmc
test
sar
dec
cmp
stos
iret
mov
sbb
movsl
orb
out
mov
xchg
pop
add
xor
mov
insl
fwait
imul
insb
dec
pop
les
mov
das
bound
jl
push
adc
jl
pop
cmpsl
in
imull
push
les
lahf
add
rcll
imul
xor
test
pop
ss
jle
les
xor
cmp
popa
notl
iret
dec
cs
xor
push
stos
adc
mov
mov
addl
cltd
sub
xchg
xchg
bound
dec
int3
test
jns
pop
in
inc
cmp
xor
sarb
cmp
nop
mov
mov
mov
xor
fwait
xor
inc
call
add
pop
xchg
sub
addr16
or
push
xlat
mov
mov
jmp
pop
mov
inc
xchg
lahf
ss
inc
rcrl
push
fwait
bound
push
fwait
push
push
and
std
neg
xor
mov
stos
mov
mov
sub
dec
hlt
clc
aaa
xor
adc
aam
test
add
adc
in
add
mov
xchg
adcb
fcomps
ret
mov
fcomps
lret
adc
fwait
cmp
sbb
daa
and
aaa
fadd
and
mov
inc
orb
scas
fldlg2
push
add
push
adc
ss
mov
push
leave
out
fisubrs
sub
add
inc
in
mov
sbb
and
scas
cmp
cmp
mov
cmp
jo
inc
pop
jge
stos
sub
push
popa
xor
jecxz
cmc
add
data16
push
icebp
or
gs
lods
leave
cmp
jg
xor
mov
add
inc
or
std
ljmp
call
stos
pusha
mov
sub
or
mov
es
xchg
push
lcall
roll
leave
daa
subl
pop
mov
inc
adc
xchg
adc
je
aam
cli
sbb
mov
sbb
xor
mov
add
movsb
inc
mov
in
jo
gs
mov
movsb
cmpl
pushf
mov
fcompl
jmp
imull
xchg
adc
cmp
repnz
jl
rcll
jmp
jge
jae
pop
push
clc
mov
lods
sbb
mov
xchg
lahf
in
in
mov
sub
ja
adc
add
sbb
movsb
mov
cmp
pop
pop
pushf
mov
sub
lret
loope
stc
cltd
xor
sbb
arpl
dec
inc
popf
push
mov
add
repz
imul
or
jbe
mov
pop
fdivs
xchg
icebp
iret
add
inc
sub
lds
mov
lahf
dec
and
adc
loop
ficompl
xchg
or
ljmp
dec
push
fcomps
insb
cmp
repz
sub
mov
xor
push
sbb
add
mov
loope
push
mov
cld
fadds
stos
add
fsubrl
cltd
fcom
adc
test
or
mov
sbb
test
sub
mov
jmp
pop
sbb
jmp
pop
xchg
outsl
aad
and
xor
sbb
in
sub
adc
cld
movb
jp
dec
ja
out
mov
inc
push
or
or
subl
orb
cltd
and
je
aas
jns
in
cmpsl
test
jp
fwait
imul
loop
insb
cmp
inc
scas
dec
push
rcr
in
xchg
cmp
xchg
aad
inc
cli
lock
orl
mov
adc
mov
dec
cmp
test
ss
jns
push
aad
movsb
outsl
enter
outsb
sahf
out
cmpsl
mov
mov
insl
xchg
inc
cmp
movsb
cmp
cmp
push
dec
mov
es
psubsw
negb
or
sarb
pop
in
ret
push
mov
add
jp
push
mov
xchg
cli
stos
es
or
fdivrs
add
xor
sbb
cwtl
lret
cld
das
orl
mov
xchg
stos
sub
jp
call
pop
sbb
jecxz
aad
xchg
outsl
and
hlt
adc
insb
das
scas
std
mov
cmp
in
out
pop
enter
or
outsb
cmp
inc
adc
enter
call
sbb
push
sub
or
sub
xor
mov
aaa
cmp
lahf
add
push
or
arpl
or
jge
inc
sbbl
cltd
pop
inc
xorb
inc
ljmp
inc
pop
or
and
xchg
push
mov
addr16
pop
incl
popf
xchg
jp
out
pop
xor
arpl
nop
mov
inc
lcall
leave
mov
mov
sub
cltd
std
or
shll
mov
jl
daa
push
arpl
stos
test
jle
loop
xor
jae
test
cmp
push
inc
cmpsb
lcall
cmpsb
bnd
inc
and
pop
or
jle
pop
mov
pop
mulb
stc
ficompl
aam
imull
lea
adc
adc
jbe
test
stos
inc
jae
gs
je
inc
out
push
mov
popa
push
xchg
dec
arpl
ss
inc
imul
inc
push
and
and
data16
mov
sbb
fmull
cmp
add
ljmp
pop
mov
popa
inc
aas
inc
inc
shll
pop
push
push
js
imul
and
sbb
or
jge
cmc
push
aaa
push
repz
std
push
adc
cmp
fldenv
gs
lcall
js
xorl
mov
cltd
test
sub
mov
sbb
jmp
stos
jb
mov
idivb
out
add
dec
out
mov
test
inc
xchg
loope
push
sbbl
sahf
and
aas
mov
and
adc
movsb
test
lret
xchg
dec
enter
loopne
push
ja
pop
push
adc
aaa
pop
add
jge
fsubl
or
xor
insb
aad
mov
dec
hlt
xchg
inc
sub
daa
das
push
add
test
mov
push
fimuls
jae
nop
ljmp
mov
ja
cmp
mov
inc
mov
pop
jecxz
dec
xchg
je
lods
movsb
sbb
push
testb
test
dec
enter
mul
pop
dec
xlat
mov
jo
xchg
std
pop
mov
in
scas
jmp
jnp
jbe
mov
and
mov
sbb
and
dec
out
mov
arpl
inc
sub
mov
popa
out
mov
pop
stos
sbb
pushf
xchg
fildl
pop
mov
push
adc
jmp
mov
pop
mov
cmp
addr16
pusha
cmp
push
cld
sbbb
xlat
fs
es
cs
jg
shll
cmpsb
add
adc
mov
sbb
sub
pop
ret
arpl
int3
mov
imul
hlt
fiadds
mov
mov
enter
test
xchg
js
aad
jb
repz
movsl
cmpsl
push
push
pop
xchg
lret
in
sub
outsb
jb
nop
scas
into
add
nop
arpl
fwait
sbb
push
and
aaa
insb
rcrb
out
pop
popa
dec
push
cli
fwait
and
stos
insb
sbb
movsl
rorl
pop
in
jno
ret
xor
mov
inc
jmp
xlat
mov
fildll
imul
add
in
insb
fistpl
icebp
out
cltd
fdiv
arpl
sbb
cmpl
sub
mov
adc
les
xor
cmp
push
sub
add
je
fsubl
xor
add
in
xchg
out
lret
fs
outsb
pushf
loop
ljmp
jo
dec
pop
inc
gs
cwtl
push
jg
push
test
xorb
push
ss
xor
or
jne
stos
jae
adc
adc
mov
enter
mov
pushf
jae
jo
pop
xor
adc
out
adc
sahf
jnp
rcll
sarl
cli
sub
mov
sahf
into
add
mov
test
gs
pop
xor
daa
psubusb
inc
lahf
push
mov
xor
aam
pusha
out
cmp
outsb
in
xlat
sub
das
or
out
pop
mov
divb
lea
lods
popa
jp
aas
xor
inc
push
jae
adc
in
dec
xchg
jnp
cmp
clc
lock
or
sarl
pop
mov
dec
add
aad
or
sarb
cmp
push
cltd
cmc
mov
jb
jmp
xor
mov
cmpsb
inc
mov
orb
cld
dec
fdivl
sti
push
aas
cmp
out
mov
in
dec
adc
mov
aaa
pushf
jnp
roll
ret
or
jmp
pusha
xchg
pop
mov
sbb
mov
lret
xchg
aad
inc
test
xor
pop
aaa
and
stos
or
cwtl
push
sbb
adc
leave
cmp
lahf
loop
cmp
adc
dec
dec
lret
jmp
orl
and
add
andb
cmp
push
loope
mov
ss
mov
xor
push
stos
adc
mov
mov
int
mov
enter
jae
popf
cmpsl
add
dec
jo
icebp
jo
mov
pop
sbb
loope
cwtl
scas
adc
sub
xchg
shrl
cmpsl
xor
dec
pop
out
lcall
test
cmp
sbb
add
addr16
xchg
mul
into
inc
out
icebp
xchg
jbe
dec
loopne
pop
pushf
xchg
sub
jno
or
mov
lock
gs
inc
xor
fucomip
or
sarl
and
lret
sbb
xchg
sub
rcll
or
pop
or
push
sbb
into
int
out
xchg
rcr
xor
rclb
adc
jl
jle
roll
inc
jmpw
xchg
movb
int
stc
popf
and
loope
dec
jo
aaa
mov
cmp
out
pusha
out
cltd
mov
sti
dec
jl
pushf
fs
lock
cmp
rol
jns
or
dec
pop
insl
int
int3
or
xchg
paddb
pusha
add
movsl
mov
faddl
repnz
lahf
and
cmp
or
daa
lahf
push
mov
push
push
lahf
hlt
js
rcr
jnp
cmpsl
dec
cmp
sti
cmp
pop
hlt
sub
push
addr16
jge
int3
pop
mov
shl
adc
push
stos
xchg
mov
inc
jae
jg
test
fistl
movsl
jl
mull
push
fs
lcall
or
mov
dec
repnz
dec
and
imul
rcrb
mov
mov
mov
adc
pop
loope
xchg
and
pop
mov
orb
xor
mov
aam
sub
cwtl
sub
outsl
jbe
push
iret
lock
adc
rcll
bsf
data16
scas
push
test
and
lret
arpl
jb
stos
sbb
dec
xchg
xchg
cmp
shlb
xchg
and
mov
adc
pop
or
nop
sbb
mov
or
jne
adc
cld
push
loope
adc
push
ds
cmp
mov
mov
ja
jle
hlt
inc
sbb
mov
dec
sar
jnp
jns
mov
les
repnz
movsb
inc
ret
inc
mov
insl
add
dec
imul
mov
cmc
loope
out
mov
out
mov
pop
mov
xchg
fnstenv
ljmp
pop
ror
sti
movsb
lock
out
xor
jb
mov
mov
enter
mov
xor
sub
std
lds
js
sahf
and
je
lds
cmp
btc
in
or
out
cltd
andl
hlt
inc
cwtl
cmpsb
xchg
pop
lock
pop
and
fld
into
rorl
lea
jno
jl
or
jmp
cmpsl
jl
fs
mov
ljmp
xchg
xchg
fcomip
mov
and
xor
fwait
test
lds
mov
mov
sub
push
sub
pop
xchg
push
sbb
pop
xor
in
or
jecxz
aam
dec
xchg
cmpsb
stos
inc
scas
or
xor
mov
out
pop
xchg
ss
subl
push
jp
mov
push
or
out
lret
int3
jnp
sbb
xlat
or
test
ror
mov
fsubrl
mull
cli
popf
rcr
lcall
push
xor
xchg
xor
sbb
fmul
mov
push
or
out
clc
lahf
lods
adc
or
pop
pop
cltd
aam
mov
jnp
outsl
insl
xchg
cmpsl
fs
addr16
xor
lea
adc
xchg
push
pop
mov
pmaddwd
push
sbb
jge
mov
or
mov
push
or
jno
mov
repz
xor
insl
psadbw
or
loop
pop
jl
insb
arpl
xchg
in
fucomi
jp
push
stos
mov
mov
push
js
adc
fnstsw
xchg
push
push
aam
push
mov
negb
int
in
mov
mov
pop
ss
pop
in
sub
mov
jae
add
dec
mov
lcall
divl
scas
jno
dec
stos
xchg
cmp
data16
js
sub
int
add
cmpsb
xor
arpl
jbe
int
xchg
sbbb
loope
hlt
xchg
pop
dec
add
daa
int
push
jae
ss
mov
jecxz
jbe
cmp
pop
outsl
xchg
sub
sbb
cli
in
fcomi
mov
push
dec
xor
inc
or
addr16
mov
out
leave
pushf
sbb
in
lea
mov
mov
jle
jmp
test
push
lock
loop
cwtl
fsubr
add
mov
out
sti
repz
xlat
jnp
push
xchg
push
xor
inc
inc
xchg
outsb
leave
fdiv
ja
mov
sub
in
sub
or
dec
bound
popf
adc
pop
lret
inc
movsb
inc
movsl
mov
push
cs
pop
mov
les
mov
pop
cs
imul
xchg
add
popa
scas
mov
mov
mov
add
movb
xor
sbb
insl
cmp
xor
xor
jno
or
xchg
inc
mov
rolb
dec
lret
aam
jno
pop
jecxz
sbbb
lahf
dec
paddusw
fucomi
mov
inc
xchg
jae
testl
push
loopne
ljmp
ficomps
xor
sahf
pop
outsb
pop
iret
sbb
jp
movsl
lods
div
mov
hlt
jbe
pushf
std
xchg
sbb
outsb
and
push
mov
and
pop
xchg
fdivrs
pop
sarb
or
or
push
and
xchg
cmp
lock
mov
and
lds
rolb
inc
inc
or
or
pop
cmpsb
leave
addr16
inc
sub
fstpt
and
push
jns
or
bound
add
dec
jmp
scas
lcall
aad
cmp
add
shll
sbb
pop
lret
inc
add
sbb
cwtl
xchg
icebp
jge
pop
insb
test
mov
or
imul
xchg
or
pusha
and
mov
jp
inc
and
addb
fs
dec
aad
fs
mov
aaa
repz
push
dec
cmpsl
inc
int
insb
jns
into
arpl
or
adc
dec
dec
pop
push
std
insb
sbb
aas
cmpsw
or
xor
pushl
shll
inc
lret
outsb
sub
adc
rcrl
pop
cwtd
sahf
adc
pop
aad
and
pop
mov
movsl
jns
loope
ret
cmpsb
sbb
adc
push
pop
mov
lods
push
push
fidivrl
and
jmp
cmpsl
cld
repz
in
adcl
sbb
or
push
xor
pushf
push
jg
inc
enter
dec
test
jle
fdivs
push
push
hlt
mov
xorl
mov
std
out
push
inc
mov
push
jns
jb
rcrb
fdivrs
xchg
xor
ja
jecxz
mov
jg
daa
ja
inc
insb
push
bound
aaa
lds
int
jmp
call
sbb
add
jp
xlat
ud0
xor
pop
or
lods
and
jp
adc
ss
sbb
or
repnz
std
adc
inc
sarb
cmpsl
mov
mov
aaa
scas
xchg
xor
loop
out
mov
ret
xchg
rcl
add
jns
mov
sbb
fs
int3
lret
jp
mov
sub
popf
mov
sti
ds
adc
enter
push
xchg
inc
cmp
addr16
addr16
xorl
push
jb
outsl
icebp
cld
cmp
stos
pop
inc
cmpsb
mov
test
cld
es
cmp
push
sbb
movsb
or
inc
sbb
dec
mov
test
cmpsl
stc
xchg
sub
ljmp
rorl
movb
jmp
divb
insb
dec
mov
lahf
loopne
cmp
arpl
inc
mov
mov
xchg
arpl
cmp
mov
movsl
cmp
shlb
mov
pop
xorb
mov
jmp
push
dec
mov
mov
push
ret
subl
or
inc
xchg
into
adcl
pop
sahf
cmp
sarl
jg
call
andb
shll
fldl2t
lock
inc
pop
mov
lcall
sbb
cmp
int3
add
lret
push
pop
sti
shrl
push
in
lahf
dec
rcrl
stos
and
pop
andl
mov
and
inc
mov
in
pop
cld
repz
cmpsb
dec
js
rcl
or
pushf
lret
mov
push
outsb
loop
jo
xchg
sbb
fmul
scas
add
jp
dec
inc
iret
push
mov
push
inc
dec
add
pop
neg
adc
push
lahf
shll
sbb
xor
leave
jl
icebp
jnp
push
xchg
aaa
shlb
adc
mov
loop
leave
sbb
push
mov
push
mulb
mov
sub
pop
jg
xchg
cli
ja
cwtl
cltd
fcmovu
rolb
jmp
sbb
pop
loopne
add
scas
adc
fiaddl
bound
or
repz
rcrb
aad
test
fists
sub
das
mov
pop
inc
inc
jg
dec
push
jp
push
push
mov
push
in
mov
shll
mov
pop
mov
pop
or
cli
fildll
push
fisttps
out
int
test
sbb
hlt
lock
imul
pushf
sub
daa
xchg
pop
pop
dec
fisttps
mov
jns
fisubrl
xchg
mov
sub
popa
mov
mov
mov
rcl
sbb
mul
loopne
mov
call
loope
push
pxor
add
mov
mov
and
adcl
imul
mov
mov
adc
lods
push
out
add
push
adc
lock
inc
ljmp
jecxz
mov
ljmp
pop
aad
lods
pop
mov
stos
loope
and
sub
stos
aaa
and
mov
in
ss
adc
jns
das
mov
aam
fld
or
cmpsb
xchg
ja
cld
ljmp
in
mov
enter
mov
mov
icebp
hlt
aaa
push
sub
jns
mov
fidivrl
movsl
inc
test
jl
insl
sub
shrb
in
pop
pop
cs
movsl
testl
dec
push
mov
dec
jp
scas
or
enter
mov
sub
cmp
sbb
adc
cwtl
ljmp
push
sub
cmpsl
ficompl
pop
jmp
in
jo
rcl
mov
rorb
cmpb
mov
push
addl
jno
cmp
jp
rol
mov
aam
adc
mov
test
mov
sbb
jne
into
fbstp
ja
hlt
pop
add
fs
vmread
inc
add
jge
les
cs
leave
xorb
or
inc
sub
jne
mov
cltd
shr
fstps
mov
gs
inc
xor
push
xchg
es
jb
sbb
pop
adcl
push
test
ret
sar
mov
mov
shrb
cltd
mov
lcall
loop
mov
inc
outsl
lahf
pusha
repnz
fcmove
pop
fldcw
adc
sbb
jge
push
cmp
jp
pop
sub
sbb
adc
sub
fidivrl
mov
in
mov
sbb
arpl
pop
push
insl
xchg
sub
scas
push
xchg
mov
ja
xchg
push
cwtl
loop
lods
dec
and
or
add
xor
fldl
pop
or
gs
das
mov
rorb
pop
cmc
or
dec
xchg
pop
mov
dec
or
dec
pop
fcomps
push
mov
sub
pop
loopne
jle
dec
jns
popf
and
and
push
push
or
push
jge
je
lahf
push
mov
jle
inc
ret
pop
dec
ret
mov
fimull
add
mov
adc
adc
add
nop
lds
mov
or
sahf
pop
sbbl
and
inc
imul
pop
cmp
nop
mov
or
mov
push
inc
xor
pop
sbb
add
jo
mov
add
test
cs
dec
cmp
xor
fwait
es
mov
add
movsbl
loopne
inc
pop
sbb
mov
inc
fsub
add
mov
inc
xchg
inc
cs
mov
das
mov
icebp
mov
mov
jle
sub
push
xor
cli
loop
cmp
xchg
leave
int
test
xor
push
xor
push
daa
add
out
sub
addr16
add
mov
negl
pop
inc
dec
push
shlb
gs
int
cltd
inc
push
mov
dec
jle
mov
cmp
pop
lret
adc
nop
cmp
arpl
cmpsl
cwtl
pusha
dec
xchg
xchg
decl
shrl
push
outsb
shr
pop
out
mov
push
rcrb
mov
dec
out
sub
cmp
repnz
push
and
das
mov
popa
cmp
insb
push
push
bound
cmpl
jo
aas
test
sbb
push
in
das
jnp
or
dec
divb
sarl
sub
mov
loopne
or
les
or
sub
sub
push
mov
fadd
loopne
pop
aaa
dec
sbbb
cmp
add
int3
add
bound
mov
inc
xorl
fbstp
dec
insb
into
xchg
mov
adc
adc
adc
daa
pop
icebp
inc
push
or
pop
shrl
push
sahf
in
cmp
lahf
jl
mov
fiaddl
fidivs
inc
loop
dec
xor
pop
das
or
pop
mov
test
mov
adc
out
jns
lret
enter
arpl
dec
fiadds
sub
in
add
movsl
xlat
push
imulb
jl
push
sahf
pop
rcrl
jge
movsb
dec
jo
cmp
jns
int
pop
lds
repnz
add
sub
cld
or
push
fucomi
lods
idiv
mov
sbb
mov
lret
enter
mov
movsb
je
testb
fistl
push
sbb
xchg
lods
fidivrl
outsl
in
movsl
int
in
push
imul
cmp
adc
or
aas
jbe
loope
xor
sbb
fmull
cli
mov
cmp
push
mov
lock
int
xor
incl
aas
push
nop
xlat
negb
push
dec
ret
stos
xor
dec
popf
push
jb
enter
je
push
add
mov
movsl
or
mov
sub
movsl
ja
push
fs
lea
fcomi
xor
std
fnstcw
hlt
imul
popa
and
jmp
stos
or
daa
sbb
xor
sub
push
aas
mov
stc
leave
ss
sbb
xchg
mov
cwtl
add
pop
pop
sbb
dec
in
bswap
pop
mov
inc
cmp
rcr
adc
or
test
mov
rcrl
or
pcmpgtb
aam
ss
fimuls
add
movntq
xchg
mov
sbb
xchg
jp
cmpsb
push
int
dec
popa
repnz
andb
sbbb
push
cs
or
sahf
push
shl
push
out
pop
fcoml
and
jecxz
jnp
aas
mov
sub
push
cmp
pop
push
mov
jno
sub
fadd
adc
dec
cltd
cmp
or
fdivrl
aam
scas
push
push
cld
test
sarl
or
and
pop
sub
cmp
push
mov
lea
pop
cmp
jge
call
add
mov
cmp
sub
fstl
ljmp
rcrb
xchg
out
lretw
icebp
pop
inc
xor
mov
repnz
arpl
add
sub
andb
xor
dec
mov
bound
jg
cmp
mov
mov
stos
sbb
pop
out
xchg
push
pop
mov
dec
push
adc
and
mov
js
fdivrs
imul
add
push
outsl
cmp
out
insb
sbb
rcl
shrb
or
dec
test
adc
mov
outsl
es
enter
gs
frstor
mov
cld
cmp
sub
fsincos
insl
mov
and
add
jl
scas
cmpb
clc
enter
jo
push
xchg
fwait
push
inc
lods
jmp
ds
aad
ss
jp
xchg
jle
scas
out
push
icebp
sbb
sbb
mov
mov
ret
add
or
loope
sub
pop
int3
or
repz
jae
jp
sbb
stos
pop
mov
cs
mov
mov
fimuls
lret
rcl
jne
add
add
mov
push
xchg
cmp
inc
xchg
xor
lock
cmp
test
xor
ss
dec
and
fists
cli
mov
insb
stc
ljmp
inc
mov
rcr
cltd
cmpsb
movsl
push
dec
out
scas
xor
aam
inc
test
addr16
lcall
lods
mov
pop
jg
enter
ret
mov
call
sbb
les
nop
mov
push
leave
xchg
enter
lds
or
mov
mov
negl
inc
inc
add
inc
stc
pop
push
rorl
xchg
inc
fsubrs
insl
mov
sbb
cmpsb
lods
cmp
xor
leave
out
lret
dec
clc
insb
fs
sarl
sub
es
sub
loopne
nop
into
jno
fldenv
cwtl
add
cmp
daa
mov
insl
mov
or
adc
mov
aam
test
xor
fnclex
je
and
jp
pop
ss
loope
sahf
mov
adc
sub
ficoml
push
pusha
xlat
and
lock
jp
das
outsl
xchg
push
xchg
dec
inc
cmc
movsl
cmp
push
push
mov
imul
nop
pop
int3
inc
inc
adc
int
sub
mov
pushf
xchg
addr16
cli
sub
and
pop
jl
adc
and
sahf
push
pushf
dec
push
pop
mov
cmp
scas
xchg
es
adc
dec
mov
ljmp
lds
fs
out
lcall
and
jne
popa
mov
xor
stos
dec
xor
and
fstpt
loop
fsubrl
inc
xchg
aam
das
xor
out
es
dec
jg
jno
push
sarl
mov
fstpl
adc
jb
lret
sub
mov
xchg
mov
dec
mov
insb
cmp
mov
inc
and
mov
jns
mov
add
or
mov
in
or
and
adc
jno
mov
jnp
hlt
stos
cmc
mov
xor
mov
add
mov
iret
sub
outsl
inc
aad
popl
add
mov
sarb
push
les
stos
lea
mov
hlt
pop
mov
pop
sub
or
xor
rcll
adc
jmp
pop
or
push
outsl
orb
jecxz
mov
xor
outsb
test
in
data16
scas
adc
ret
and
mov
mov
lods
pop
jo
xor
vmwrite
outsl
sahf
maskmovq
imull
out
cmp
jne
mov
cmp
scas
pop
xchg
test
f2xm1
xchg
mov
mov
imul
adc
mov
fldenv
jle
pusha
adc
xchg
ja
les
mov
or
and
pop
adc
add
xor
add
sub
sahf
sbb
or
loope
xor
ror
loop
jl
or
test
add
mov
daa
fstl
loope
dec
or
push
or
loope
sbb
das
ja
or
ret
xor
adc
jl
mul
popa
sahf
fistps
enter
mov
mov
push
lds
aad
pop
xor
cmp
lahf
and
test
imul
inc
ret
xor
mov
lods
insl
add
lods
jecxz
out
ljmp
stc
repnz
icebp
out
clc
sti
push
xchg
dec
sbb
repnz
mov
sahf
push
mov
add
ss
cmp
mov
xchg
and
lret
cmp
jmp
xchg
mov
xchg
mov
push
test
orl
lods
push
sub
and
push
jns
ds
dec
stos
jo
and
roll
xchg
sub
inc
cmp
and
jb
popf
sbb
mov
xchg
add
stos
jmp
cmp
es
imull
lcall
jmp
imul
cld
mov
in
dec
dec
divl
cmc
jno
dec
xchg
push
lret
cmc
sub
and
out
adc
cmp
or
rcl
sbb
pop
xlat
leave
hlt
sbb
mov
in
and
push
adc
xchg
sbb
push
lods
mov
or
sub
test
ret
js
inc
cwtl
xor
std
add
mov
test
dec
mov
push
mov
inc
aam
je
and
push
or
js
sbb
outsb
aaa
insl
mov
cmp
data16
mov
mov
lods
lcall
sbb
xchg
sub
dec
add
sub
lret
mov
shll
mov
loop
sub
inc
arpl
scas
aas
mov
les
xlat
mov
xchg
or
pop
outsb
test
std
mov
jg
push
xor
pop
movsb
insl
in
loopne
or
dec
stos
pop
iret
int3
jnp
mov
push
sub
subl
arpl
loop
sarb
lods
js
xchg
cmp
xorl
addl
fsubrp
dec
imul
sbb
fsubl
ss
lcall
or
mov
fldenv
push
call
jge
adc
push
lcall
dec
movsl
outsl
ds
ss
push
push
out
push
mov
pop
test
gs
call
icebp
push
fnstcw
xchg
es
add
movsl
push
mov
pop
insb
sub
xlat
push
cmp
adc
int
ss
bound
stos
jnp
stos
pop
dec
sbb
or
rcl
and
call
arpl
xchg
xor
sbb
jbe
adc
xor
lds
bswap
ljmp
pop
ljmp
int
mov
adcl
and
iret
lods
push
push
cmpsl
fldenv
data16
cmpsb
jns
call
mov
insl
xchg
pop
andb
mov
and
popf
cmpsl
cmc
mov
xchg
cmpxchg
or
mov
dec
adc
push
je
mov
inc
jp
clc
xchg
les
lahf
bound
push
fdiv
jnp
push
loope
fcmove
insb
mov
lock
jecxz
jbe
arpl
test
push
js
ds
dec
cli
or
and
test
dec
jno
jno
push
jae
scas
adc
cmp
shlb
mov
out
fdivs
incl
pop
and
sub
sbb
ror
or
cmp
xchg
push
test
sub
xchg
sub
and
mulb
subb
rcrl
and
ja
data16
test
out
fdivr
sub
inc
dec
out
mov
int3
push
int
movsb
bound
inc
dec
add
sub
test
push
lea
or
mov
mov
call
adc
stos
mov
inc
jno
negb
jle
pop
mov
scas
or
outsl
mov
mov
pop
xchg
adc
pop
xchg
sub
or
xchg
repz
mov
mov
mov
scas
test
cmp
fisubrs
daa
xor
arpl
or
pusha
lret
and
out
pop
lret
in
pop
repnz
jl
inc
mov
dec
adc
out
mov
aad
idivb
mov
jmp
xchg
push
lods
and
aam
jno
cmp
push
shll
out
sbb
push
jb
in
mov
sbb
rcrl
mov
aaa
xchg
int
dec
repz
mov
je
cmc
cmp
icebp
stos
lcall
push
shl
icebp
pop
insl
sub
fcomip
ficomps
jle
scas
or
insb
cld
testl
imul
push
sub
mov
xchg
xor
cmp
inc
sub
mov
imul
inc
imul
lret
leave
jl
mov
rcrl
push
pusha
shlb
inc
sub
mov
xlat
push
scas
sti
out
pop
xorl
jge
cwtl
push
test
jg
cltd
inc
addr16
aad
inc
jns
push
je
cmp
lcall
shll
int
test
ds
test
loop
cmc
cmpsb
subb
mov
xor
leave
cmp
xchg
mov
jmp
outsb
js
pushw
and
jge
dec
addr16
xorb
push
jp
jecxz
and
xorl
cmpsl
into
in
adc
jecxz
aam
fdivp
data16
cmp
mov
cltd
push
lods
add
dec
mov
xchg
rcr
adc
insl
pop
xor
std
test
mull
xorb
add
arpl
dec
fs
dec
mov
xbegin
or
xchg
jno
dec
push
mov
jg
jo
or
jnp
lahf
cmp
cs
ret
orb
lock
fsts
or
xor
sub
mov
cmpsl
xor
dec
sbb
test
adc
mov
and
mov
lods
cmp
mov
sbb
mov
mov
xchg
sub
insb
outsb
out
jno
mov
xorb
sarl
sub
cmp
ret
sub
add
fisttps
cmp
jg
leave
sbb
iret
xchg
xchg
dec
notl
xchg
das
sarl
jecxz
aas
xor
mov
pusha
mov
ja
shll
mov
adc
push
push
fisubl
mov
imul
xor
fmuls
and
imul
jns
cli
js
sbb
inc
mov
movsl
dec
xchg
inc
and
adc
dec
fisubs
or
add
push
repnz
scas
push
adc
arpl
pop
xchg
fwait
cltd
punpcklwd
dec
sahf
cltd
xchg
xor
mov
fwait
stc
leave
mov
xor
add
jne
fnstcw
mov
mov
pop
xor
and
jp
sbb
push
js
or
pop
cmp
inc
repnz
adc
and
adc
bound
mov
sahf
pop
int
fwait
or
cmp
aaa
sbb
imul
push
push
mov
sbb
adc
lret
and
popf
arpl
cmc
pop
aaa
outsl
sub
mov
mov
inc
xchg
je
lods
stc
leave
cmp
lcall
idivl
cmc
lret
add
mov
jns
or
loop
dec
insl
loopne
incl
push
mov
or
inc
inc
xchg
xor
fdivl
and
enter
push
dec
ja
push
loope
ret
xlat
sahf
mov
adc
or
je
jle
xor
pushf
add
cmpsb
add
sahf
lcall
mov
add
test
lahf
in
xor
push
mov
andb
push
and
ret
repnz
sub
out
stc
sti
shll
lods
mov
addr16
into
pop
imul
xchg
sbb
sub
sbb
mov
setno
es
xchg
scas
lods
mov
scas
xchg
inc
adc
sbb
test
sahf
add
outsb
sbb
adc
lahf
jmpw
out
mov
pop
pushl
gs
negl
sub
loop
and
mov
sbb
fmuls
cmc
into
or
out
ret
stos
mov
dec
test
test
testb
mov
gs
and
xchg
and
cmpl
pop
mov
and
lods
pop
push
mov
dec
cmc
repnz
dec
or
push
rcl
mov
lea
sbb
mov
xor
ds
les
sarb
clc
fcomps
mov
mov
xchg
xor
or
mov
cmc
sub
arpl
adc
cltd
push
sbb
andl
pushf
pushf
es
loopne
or
jne
jns
dec
jmp
jge
push
pop
cli
mov
dec
call
les
xchg
lret
daa
hlt
dec
push
sub
fcomip
inc
out
nop
dec
lock
push
roll
push
ss
test
clc
jne
xor
mov
enter
daa
mov
jle
lods
mov
sbbb
and
and
mov
fistpll
and
lock
or
arpl
popa
push
cmpsb
pop
pop
cmp
mov
ss
mov
xrelease
mov
test
jbe
inc
sbb
and
cmc
or
into
fldl
pop
in
push
es
xchg
or
ret
fmul
gs
mov
cld
xchg
shll
cmp
mov
mov
jge
aaa
push
mov
jbe
lods
xchg
dec
sbb
int3
jge
mov
mov
jno,pt
mov
push
loop
push
out
jns
adc
repnz
out
and
mov
push
mov
sub
imul
xchg
adc
xchg
adc
mov
in
fidivrl
out
or
aam
xchg
cld
sub
mov
pop
ljmp
loop
ret
popa
cmp
stos
lret
std
xchg
xor
sbb
lds
in
clc
rclb
mov
cld
pushl
push
sbb
test
sbb
imul
pop
push
cmp
add
js
adc
push
out
mov
sub
sbb
inc
imulb
push
aas
jl
and
sbb
mov
test
hlt
int3
cmp
dec
mov
mov
mov
jg
mov
loop
mov
adc
push
add
lahf
sub
fidivs
pop
xchg
adc
inc
cwtl
outsl
pop
lods
inc
cmp
push
roll
adc
aam
fnsave
imul
iret
pusha
push
xor
push
push
mov
mov
cwtl
lahf
cltd
pop
xchg
add
iret
test
das
and
lcall
out
fidivrl
inc
sub
in
mov
jp
repz
popf
cwtl
or
call
xor
xchg
inc
imul
out
add
ret
jecxz
call
xchg
pusha
inc
or
push
cwtl
jns
movsl
inc
loop
lret
test
in
fwait
xor
xor
imul
cmp
scas
mov
inc
les
sahf
mov
pop
xchg
mov
scas
mov
fs
daa
aam
xorb
jmp
ja
fldcw
mov
xor
mov
mov
loop
fldt
adc
inc
idiv
in
js
pop
sub
inc
mov
cwtl
loop
in
rorb
sub
test
dec
sub
jg
and
testl
add
fcmovb
dec
mov
test
push
jg
sub
pop
fisubrs
push
jo
ss
jb
jp
xor
outsl
test
sahf
jge,pt
mov
adcl
jmp
into
in
and
lods
jbe
inc
adc
mov
pop
inc
push
fidivrl
fdivrs
sub
or
cld
rclb
fdivrl
inc
jbe
stos
addr16
sub
add
mov
mov
sub
repnz
data16
jb
in
nop
cvtpi2ps
pop
jge
cmp
push
cmc
mov
hlt
inc
addr16
mov
inc
mov
inc
mov
pop
and
xor
or
dec
das
outsl
lret
ljmp
andb
out
or
imul
out
add
xor
lods
mov
jecxz
jno
fbld
mov
fs
enter
and
xor
xor
pop
push
dec
roll
sub
pop
aas
cwtl
je
loop
js
mov
out
or
out
test
in
inc
xchg
adc
test
xchg
stos
imul
rcrb
fwait
dec
or
lcall
sub
stos
sub
iret
call
dec
pop
fdiv
test
mov
fs
andb
push
mov
dec
sub
mov
dec
ja
jl
iret
adc
pop
cli
dec
mov
push
pushf
push
outsl
pop
repz
xchg
inc
lret
ljmp
pop
aas
divb
sub
mov
scas
mov
out
jno
insl
mov
inc
fiaddl
lret
ljmp
cmp
mov
push
cltd
mov
test
fmull
pop
mov
call
ljmp
dec
xor
shrb
mov
js
in
cmc
xchg
sub
sbbb
insb
push
mov
jge
push
repz
lret
inc
mov
xor
and
mov
and
push
mov
pop
sub
stc
xlat
sub
pushf
push
std
leave
xlat
xchg
push
cltd
mov
push
jns
pop
aas
lcall
mov
jecxz
mov
ss
jmp
inc
pusha
outsb
lret
xor
fistps
call
js
ja
cwtl
push
xor
mov
enter
pop
and
sub
add
movsl
and
loope
xchg
loope
clc
inc
and
mov
push
fwait
cmp
divl
loopne
int3
push
test
and
outsl
add
sbbb
mov
cmovg
in
dec
push
in
movsl
pop
or
xlat
cmp
jb
rorb
mov
cmp
je
insl
jecxz
scas
push
clc
out
pushf
dec
xchg
mov
sub
push
or
addr16
in
sbb
stos
fsubrp
cmp
in
inc
out
fimull
xor
cwtl
pop
adc
div
ja
mov
mov
push
jne,pt
pushf
ret
leave
mov
pop
arpl
pop
lret
or
cmpl
xchg
insb
cmp
jl
sbbl
jne
jns
iret
push
push
idiv
push
pusha
repz
ret
sbb
pop
femms
cmpsl
lods
das
pop
push
sub
xchg
stc
ja
add
dec
gs
mov
lods
je
pop
lcall
mov
pop
dec
lret
inc
pusha
fcmovb
xor
test
jmp
addr16
push
sahf
push
jmp
cmpsl
xor
movsb
ljmp
cmp
popa
aad
and
xchg
pusha
enter
jae
cmp
fadds
scas
mov
push
stos
push
xor
lcall
push
add
cmpsl
mov
lcall
sub
xchg
fisttpll
je
fcoml
out
cmc
pop
add
mov
cmp
jnp
daa
int3
or
daa
fidivs
adc
jnp
insl
rcrl
outsb
test
sbbb
xchg
nop
cmpsl
out
arpl
mov
pushf
mov
cmp
and
xchg
shll
sub
vpsubsw
gs
out
in
mov
arpl
hlt
hlt
mov
xchg
nop
xor
aaa
or
jns
mov
ret
adc
dec
and
mov
scas
add
dec
cld
cmp
xor
or
or
hlt
dec
roll
mov
loop
daa
mov
xor
ds
fldcw
mov
add
jge
jecxz
cs
sbb
pop
ljmp
gs
subb
movsl
mov
dec
daa
push
dec
cmp
dec
dec
cli
sub
dec
jb
push
xor
movsb
jecxz
icebp
push
push
lret
fnstenv
imul
imul
stos
adc
and
fildl
mov
sbb
sbb
or
aam
sbb
or
adc
pop
addr16
pushf
and
add
shrb
dec
push
push
xchg
xlat
mov
add
ljmp
dec
pop
jb
popa
xchg
popf
mov
cwtl
dec
movsb
adc
cmp
mov
jl
es
in
imul
jo
fdivs
or
andb
jecxz
cmp
xchg
dec
je
mov
push
adcb
xchg
mov
iret
pop
cwtl
negb
imul
jg
das
vpblendmb
dec
push
lahf
jecxz
add
addr16
or
add
push
lods
arpl
and
mov
or
mov
pop
push
rcr
cmc
loopne
add
or
insl
mov
sub
mov
out
jno
cs
push
mov
inc
rcrl
add
mov
fcomp
test
cmpsb
xlat
adc
in
sub
xchg
push
in
repnz
in
and
loopne
arpl
inc
lods
frstor
movsl
movsb
xchg
dec
mov
ljmp
cmc
pop
cmpsb
idiv
out
rcll
xchg
xorl
adc
ret
aam
fs
movsl
mov
push
sarb
sbb
cmp
adc
pusha
mov
out
lret
ljmp
mov
lret
mov
jmp
cli
in
cmp
or
mov
ja
fldenv
subb
es
cmpsb
jge
jl
iret
dec
inc
pop
mov
div
popf
out
lret
jb
js
cmp
mov
lahf
push
jle
lods
xchg
xchg
or
cwtl
pop
or
mov
test
jno
ret
das
mov
or
stc
mov
lods
pop
ret
loope
mov
shlb
mov
stos
push
sbb
xor
mov
out
into
sub
aam
sub
mov
insb
inc
pop
xchg
enter
call
mov
lret
mov
mov
sti
or
rcrb
mov
mov
and
xor
ja
stos
xchg
and
lock
rclb
stos
xchg
pop
mov
pop
scas
xor
adc
lahf
inc
sarl
dec
aad
dec
adc
add
aad
into
faddl
shll
stc
jae
hlt
mov
mov
cli
stos
dec
xor
icebp
pop
dec
or
adc
dec
mov
push
mov
lea
sti
dec
mov
push
inc
mov
enter
mov
lahf
fsts
aad
xor
push
jmp
repz
mov
adc
es
push
andl
gs
xor
pop
and
scas
int3
mov
or
test
push
push
dec
jno
lock
jmp
scas
or
jbe
pop
add
xchg
hlt
gs
xlat
ret
push
nop
scas
sub
mov
cwtl
xor
rclb
fcomps
xlat
lret
dec
inc
xor
or
bound
fbstp
in
mov
xchg
fisubs
je,pt
imul
jns
jp
stc
popf
pop
clc
dec
adc
clc
inc
pop
cmp
dec
or
jge
enter
pop
mov
or
cmp
xchg
shll
lret
fwait
sub
in
sahf
insl
dec
add
sub
out
jge
mull
je
rolb
ja
push
fnstsw
repz
fisttpl
int3
lahf
ss
sub
icebp
adc
scas
sbb
and
lahf
add
jg
fstl
push
insl
push
subl
or
mov
cmp
jne
xor
pop
and
adc
xchg
stc
shll
je
idivl
jno
add
cltd
mov
jle
mov
dec
sti
inc
pop
inc
aaa
dec
jmp
xor
xchg
xor
push
fcmovnb
in
fsubs
dec
mov
and
xlat
roll
popa
xor
out
cmc
es
in
or
fwait
jbe
and
scas
mov
repnz
sti
mov
call
fsubl
outsb
mov
sub
into
pop
repnz
imul
mov
insb
xchg
roll
fadd
hlt
js
dec
jne,pn
fs
or
rcll
xchg
jne
loop
lahf
leave
imul
movsb
and
loop
pop
fbstp
xchg
sub
pushfw
jg
xchg
xchg
sub
stos
out
add
movsb
and
sub
push
test
pop
aaa
andl
add
aad
scas
xor
frstor
stos
pushf
mov
xor
add
adc
rep
arpl
add
push
mov
add
fidivrl
or
pop
mov
mov
movsb
outsb
adc
int3
add
mov
call
insl
fistps
and
sbb
adc
sbb
fs
inc
jns
mov
push
push
sahf
jmp
adc
inc
sbb
jo
lods
jge
imul
and
jl
movsb
cmp
mov
test
jbe
stos
mov
idivl
mov
sub
clc
out
insb
dec
mov
sbb
dec
mov
xor
imul
cmpsb
rcrb
and
mov
xor
lds
pusha
cmc
inc
sbb
loopne
push
sbb
dec
pusha
in
adc
cli
movsb
pop
in
imul
cmc
xchg
jecxz
cltd
inc
or
xor
scas
push
xor
push
subl
pop
and
ficomps
add
pop
in
lods
std
cmpb
inc
pop
push
pop
push
or
ljmp
pop
popf
stc
movsl
push
scas
xchg
xor
sti
xor
imul
rclb
stos
ret
xor
mov
int3
dec
cmp
lock
push
pop
xlat
cmpsb
mov
inc
pop
xchg
jno
stc
sbb
adc
cmp
add
xchg
rcll
mov
fstpt
movsb
inc
and
sub
int3
sbb
outsb
rcl
fistpl
xchg
fdivs
xchg
scas
lret
bound
jno
dec
xchg
cli
mov
dec
and
push
fistps
jmp
fistpll
or
cltd
pop
lock
daa
and
sbb
lcall
xor
sub
xor
jns
adc
push
fcoms
mov
and
pop
jl
int3
and
outsb
xor
inc
ja
cmpsl
pop
push
inc
cmp
xor
push
push
mov
push
test
mov
push
xchg
imul
inc
lods
aam
mov
ds
scas
shll
sbb
adc
lar
out
xor
xor
mov
mov
cltd
ret
fucomi
outsb
outsb
mov
or
and
inc
jnp
push
and
and
jle
test
sbb
or
stos
stos
bound
jnp
xchg
aam
sar
test
stos
or
sbb
mov
and
adc
jl
sub
jns
cmp
call
fsub
push
cmp
inc
out
mul
sbb
inc
add
enter
fucomi
dec
ret
and
mov
pop
add
or
jne
insl
out
aad
mov
fstl
repz
push
out
mov
test
inc
lret
xchg
outsl
xchg
push
jno
out
sub
shl
xchg
fs
nop
icebp
sahf
push
decl
jmp
or
dec
jbe
sbb
insb
and
add
imul
xchg
aad
xchg
in
xchg
cli
out
clc
cli
ja
inc
or
loope
or
scas
cmpsl
mov
or
xchg
scas
push
jp
dec
mov
push
shlb
out
outsb
scas
xchg
cmpsl
inc
sahf
or
sbb
mov
pop
inc
sub
or
jb
adc
jle
jae
sub
dec
aam
mov
push
pop
les
dec
aas
xorb
pop
cmpsb
and
mov
inc
insb
repz
out
xchg
jle
and
push
push
pop
ja,pt
lret
dec
inc
test
hlt
adc
add
xchg
xchg
icebp
cli
leave
js
imull
fidivrs
js
je
lods
sub
enter
mov
mov
jmp
and
lret
dec
or
hlt
movsl
xchg
test
jmp
pop
xchg
mov
mov
jecxz
aaa
mov
push
mov
xchg
xchg
xor
cmp
xor
mov
je
test
cmpsb
test
sbb
sbb
jnp
and
mov
das
addr16
jp
mov
ficoml
push
push
xchg
outsb
cmpsl
mov
xor
cmp
xchg
lods
mov
mulb
cwtl
hlt
cmpsl
xor
mov
test
jmp
xor
cmp
stos
pop
loop
adc
imul
pop
test
pop
mov
fidivrl
xor
xor
add
pop
adc
mov
mov
ret
roll
gs
fldl
pop
das
inc
stos
and
mov
cltd
mov
fstpl
aad
mov
cmp
xchg
jne
data16
insl
aaa
jp
add
xorl
mov
jne
in
xor
gs
mov
or
fwait
jl
lock
sbb
jb
insb
jns
mull
cmpb
mov
lret
xchg
jp
and
mov
icebp
lds
ss
mov
mov
mul
mov
mov
in
add
test
lds
aad
outsl
mov
sub
jmp
hlt
icebp
sub
sbb
or
fucomip
and
insl
mov
push
ds
insb
lahf
pop
movsb
xor
in
mov
or
pop
icebp
sub
mov
mov
stos
jbe
jb
pushf
das
mov
pop
push
xchg
cmp
mov
test
jl
lods
out
lahf
mov
jle
rol
dec
movsb
add
loop
fists
cs
xchg
loope
jns
mov
push
ds
push
xor
xchg
cmp
sarb
mov
mov
dec
lcall
mulb
sbbb
jl
add
cmpsl
int
dec
mov
xor
cmp
in
mov
mov
inc
leave
mov
lret
fcom
pop
jl
and
push
push
sbbb
sub
popa
push
jae
jno
rep
adc
xchg
xchg
rolb
daa
imul
mov
scas
xlat
push
push
mov
sbb
insl
out
xor
jecxz
sbb
gs
dec
dec
adc
inc
xchg
xor
pop
jl
sbb
sbb
sahf
push
dec
aam
ret
scas
icebp
inc
loope
cmp
ds
mov
inc
lcall
pop
popl
adc
cwtl
pusha
mov
sarb
sbb
and
xchg
imul
test
jge
sarb
add
int
lahf
mov
inc
mov
mov
leave
lods
sbb
dec
mov
sbb
out
mov
cmc
into
dec
dec
xor
cmc
cli
sbb
jl
in
imul
xchg
jecxz
cmp
ljmp
sahf
shr
mov
insl
inc
adc
jo
jecxz
jmp
movsl
scas
push
jbe
jb
shlb
sub
dec
cmpsl
lcall
xor
push
push
mov
or
cmpb
xchg
jns
pop
rol
mov
insl
subb
and
dec
dec
sub
notl
cmp
add
sbb
cmp
ror
ret
cmpsb
fsts
mov
popa
mov
mov
fisubrl
scas
aas
sahf
cld
xchg
push
test
xchg
pop
xlat
cmp
out
ret
push
sbb
or
xchg
nop
cmovb
mov
in
cmp
push
jle
lock
movsl
lods
xchg
rolb
scas
pop
pop
jb
lods
out
adc
scas
insl
testb
out
xchg
mov
cld
inc
pop
test
daa
push
fmull
jbe
fstl
jmp
xchg
add
sbb
sub
or
xchg
movsb
repnz
jle
loop
jle
ljmp
jmp
lods
mov
lret
mov
aas
or
lahf
push
mov
cmpsb
pusha
jge
test
stc
mov
jns
fstpl
jnp
xchg
cmp
std
inc
dec
popa
mov
pushf
and
flds
jbe
icebp
enter
shl
mov
pop
cmpsl
insb
test
push
sti
cmp
and
mov
jo
cmp
dec
inc
mov
sub
fcompl
mov
ret
sahf
pop
out
sbb
lahf
sub
in
or
or
or
hlt
or
in
movsl
addr16
cmpsb
cmp
mov
ja
jl
roll
gs
push
dec
xor
dec
xor
xchg
les
mov
imul
inc
mov
popf
mov
jbe
roll
pushl
mov
or
in
xor
cmp
dec
or
jae
insl
cld
imul
dec
scas
lds
popf
inc
dec
loop
sbb
push
xchg
into
in
pop
mov
nop
xchg
scas
int
xchg
xor
daa
add
push
test
or
nop
or
popl
testl
pop
cmpsl
out
insl
stc
clc
jmp
and
mov
call
ljmp
fcmove
jp
cmp
pop
dec
leave
nop
dec
mov
je
pushf
mov
adc
mov
cmp
jge
xor
ja
mov
bound
add
fldenv
push
pushf
bound
mov
loope
test
sbb
imul
mov
cmp
push
pop
rorb
mov
ret
out
test
out
mov
addl
mov
iret
sahf
arpl
imul
push
sbb
in
mov
stos
push
in
and
pop
lods
push
icebp
roll
lds
push
and
push
jmp
or
ljmp
push
out
fbld
push
ss
leave
sbb
inc
daa
or
pop
pop
and
aaa
call
pop
out
cli
outsb
cmc
and
pop
pop
and
push
ret
add
int
movsl
cmpsl
jecxz
sbb
jle
orl
je
add
jns
cmp
out
in
popf
cmp
pop
and
lret
jecxz
jl
inc
inc
insb
cmp
and
out
mov
cld
in
jmp
xchg
fstpl
and
iret
pop
cmc
fwait
mov
das
insl
stos
inc
jecxz
add
scas
mov
iret
mov
insb
cmp
pop
or
push
push
ret
aaa
xchg
cld
mov
repnz
rcll
arpl
inc
jle
and
pop
cmp
out
sub
sub
cld
or
add
cmp
add
dec
outsb
push
jmp
xor
push
adc
das
fldcw
cltd
mov
stc
test
jbe
pop
rolb
lahf
std
jae
out
jge
mov
stos
and
fwait
push
hlt
adc
cmpsb
cmpsb
stos
mov
xor
push
mov
dec
pop
xorb
push
adc
sub
adc
inc
mov
xchg
sahf
jmp
xor
mov
mov
xlat
stos
cs
jb
mov
jg
pop
inc
dec
inc
xchg
popa
add
xor
test
add
fiadds
sarb
adc
cmp
dec
shrl
cmp
lahf
and
jbe
pop
or
xlat
fdivrs
shl
xchg
sub
aaa
cs
sbb
mov
sbb
jo
movsb
ja
movsb
sub
sahf
lods
out
or
fwait
push
push
jo
dec
jl
test
mov
loop
adc
mov
and
cli
aaa
push
jbe
inc
inc
nop
jge
xlat
pop
movsl
test
mov
or
movsl
sbb
lea
repz
xchg
stc
insb
sub
push
and
ljmp
xchg
jg
jnp
mov
pop
cltd
mov
in
repnz
and
cmc
lahf
xor
jp
test
push
xlat
push
stos
mov
call
xor
inc
fdivrp
mov
push
pop
cld
mov
mov
shll
in
insb
pusha
dec
rolb
dec
mov
int3
inc
dec
push
mov
test
cmp
xchg
iret
stc
jne
cmc
jnp
inc
mov
sub
insb
adc
dec
jp
mov
cmpsb
inc
mov
aam
cli
fldt
sbb
out
data16
jmp
aam
push
lret
je
xor
pusha
adc
cmp
insl
iret
jg
dec
mov
push
pop
push
addr16
adc
loope
mov
sbb
or
outsb
dec
ja
daa
xor
leave
sbb
fmull
sub
js
inc
or
adc
mov
jecxz
sbb
add
mov
sub
int
xchg
loopne
jl
push
sbb
push
xchg
cwtl
mov
dec
mov
or
or
mov
pop
xor
loop
sbb
leave
mov
in
ror
add
in
fstpl
jae
push
mov
and
pop
outsb
pop
and
std
pop
stos
cmp
cmpsb
mov
dec
inc
sub
inc
sub
adc
add
jecxz
scas
push
andl
adc
rclb
insb
cltd
pop
lcall
cmp
adc
pop
data16
mov
and
mov
and
pop
jle
jl
pop
sub
sub
insb
pop
xchg
mov
sub
and
xchg
scas
fnstenv
mov
xor
mov
push
adc
imul
notl
or
xchg
mov
in
xchg
adc
jne
minps
mov
cmp
and
outsl
imulb
or
ficompl
pusha
or
insl
mov
sbb
lods
cmpsl
int
dec
push
jl
inc
xchg
das
cmp
jecxz
aam
setbe
pop
addr16
push
adc
popf
xor
hlt
sbb
mov
lock
test
mov
cwtl
add
sbbl
sbb
mov
mov
add
jne
sub
sub
iret
or
les
adc
mov
xchg
loopne
adc
insb
enter
repnz
and
sahf
jnp
mov
xchg
jp
sub
pop
leave
lock
mov
jmp
mov
cmp
into
sbb
dec
push
test
dec
dec
out
cs
ficomps
mov
sub
mov
pop
inc
stc
out
xor
mov
and
adc
aaa
shlb
cltd
or
mov
xlat
jge
lahf
push
and
incb
add
or
out
and
mov
sbb
int3
xchg
adc
adc
ja
xchg
or
in
mov
cmp
and
adc
push
and
dec
lcall
sub
aaa
adc
popa
shrb
std
imull
xor
ljmp
inc
or
movsl
imull
dec
xchg
pop
jle
xchg
cmp
in
mov
xchg
loopne
bound
pop
lret
movsb
test
in
js
in
cmp
shll
cmp
fsubl
inc
loope
ja
js
mov
mov
mov
and
push
mov
cs
cmc
or
lcall
fnstcw
and
lret
outsl
leave
xor
xor
cmp
sarb
mov
mov
push
pop
fcoml
cmp
or
rcrl
inc
inc
inc
adc
xor
outsl
das
push
ret
xchg
jb
cmp
adc
push
cmp
or
loopne
out
or
mov
lods
sub
or
scas
dec
cmp
shll
daa
and
rcll
enter
mov
push
lahf
sbb
jo
test
sub
lret
mov
test
data16
ror
pop
dec
jp
dec
out
dec
and
jns
fwait
jp
jmp
pop
cmp
cmpsl
imul
flds
dec
stos
cmpsl
or
jmp
push
xor
pusha
adc
in
and
adcb
push
repz
jmp
lock
and
or
outsl
outsl
loopne
xchg
mov
push
and
cltd
enter
je
repz
mov
cmp
adc
inc
sub
dec
inc
adc
f2xm1
mov
enter
sbb
je
mov
mov
xchg
xlat
pop
add
rorl
sbb
sub
lret
jae
and
in
xor
add
or
das
and
jnp
mov
mov
cmc
cmp
ret
loopne
shll
int
inc
mov
mov
jl
lods
je
xor
lea
fld1
adc
imul
mov
xor
push
fistpll
jno
pushf
popa
stos
out
mov
enter
cwtl
adc
dec
inc
and
xchg
fcmovbe
movsb
divb
add
mov
xchg
mov
loopne
mov
push
mov
pop
mov
mov
into
cltd
xor
sbb
push
jae
sub
icebp
loope
push
and
stc
mov
adc
roll
add
dec
mov
cmp
ds
dec
xor
mov
les
mov
cmc
xor
mov
sti
or
pop
push
andb
xchg
cmp
push
sub
fisubrs
lock
add
pop
lcall
cmpsb
add
pop
scas
add
repnz
jae
lcall
fldl
ret
push
ljmp
pop
out
insb
test
dec
mov
pop
shl
shll
xchg
stc
pop
mov
pop
jl
faddl
mov
hlt
hlt
loop
cmpsl
mov
push
lret
push
test
cltd
lods
ret
fdivrs
rcl
add
inc
pop
out
mov
mov
cmp
mov
sub
inc
mov
rcl
ficoml
inc
or
add
xchg
push
pop
mov
cs
sub
shr
pop
sbb
inc
xor
xchg
sub
dec
movsl
lods
dec
pop
xchg
std
lods
div
mov
xchg
icebp
dec
add
mov
bound
or
or
ljmp
pop
dec
mov
fs
inc
bound
out
aaa
loop
jmp
xchg
mov
shlb
test
addb
xchg
push
dec
xchg
dec
mov
adc
int
jne,pn
add
mov
mov
jle
inc
cmpsb
jl
ret
jmp
inc
loop
ret
push
mov
pushf
in
push
rcrb
rorb
sbb
inc
shlb
dec
add
cmc
sbb
push
mov
xor
lcall
fildll
adc
cmp
mov
cmp
lea
in
ficomps
enter
fcoml
pop
stc
ss
jb
mov
pop
jecxz
inc
js
das
dec
stos
hlt
sbb
ljmp
ljmp
push
shl
push
fsubr
xchg
daa
data16
and
mov
fimull
add
out
addr16
rcrl
xchg
idiv
pop
inc
stos
push
into
mov
dec
stos
sub
loop
pop
imul
xchg
clc
shll
xchg
cs
adc
xor
pushf
push
jns
inc
popa
aad
inc
mov
sub
pop
add
bound
mov
xchg
sbb
mov
out
mov
or
dec
lret
in
lds
sbb
inc
push
mov
shlb
push
or
pop
jg
pusha
lods
and
push
push
mov
sub
sbb
adc
jb
add
test
in
sahf
jmp
mov
rclb
jae
xchg
xchg
add
aam
fnstsw
push
push
push
maxps
dec
les
imul
adc
test
ficompl
test
xchg
imul
adc
mov
xlat
dec
xor
jl
xchg
or
sub
xorl
test
push
cmova
pop
jo
push
pop
jae
jl
or
jmp
push
pushf
gs
cmpsl
pop
into
pop
and
stos
or
sarl
lret
mov
xor
insb
sub
mov
mov
cltd
jecxz
fcoms
imul
inc
mov
push
or
rorb
push
dec
nop
sub
clc
cmp
mov
xlat
fcoms
push
test
jbe
fldcw
mov
push
dec
adc
adc
hlt
cmp
into
sbb
mov
test
insl
aaa
arpl
cmpl
add
lods
stc
cmpsb
xor
push
or
movsb
or
add
mov
lahf
mov
inc
rcl
pushf
jmp
jne
cmpb
icebp
or
cmpl
aas
rclb
push
cmp
xor
sbbb
or
cltd
mov
jecxz
sub
push
add
fwait
cmc
cmc
test
movsb
mov
push
out
xchg
jo
xor
iret
ljmp
mov
mov
and
test
es
scas
pop
rolb
daa
lret
and
andb
in
das
jg
cli
sar
jo
arpl
and
call
test
clc
test
stc
std
cmpsl
stc
pop
pop
ret
bound
sarb
mov
stos
inc
cmp
lea
xchg
sub
arpl
mov
sbb
jp
lahf
fldcw
jecxz
outsl
pushf
jl
outsb
sbb
icebp
pop
push
inc
cmp
ss
test
shrb
push
jae
xlat
or
push
mov
mov
inc
fs
push
jns
push
aam
or
imul
push
pop
xchg
in
mov
inc
push
popa
push
popf
decb
icebp
pushl
dec
fdivrl
and
das
pop
sub
test
lods
cmp
mov
fwait
std
mov
incb
outsl
ffree
xchg
sub
scas
dec
repz
into
stos
sub
jne
jp
push
or
dec
in
xor
mov
add
imul
shl
mov
insl
mov
add
inc
into
lcall
sub
adc
and
aaa
xorl
insl
mov
xchg
lods
inc
popf
and
xor
loop
arpl
das
shll
cmc
fcoms
ljmp
push
dec
ljmp
xchg
and
mov
sbb
mov
lds
in
nop
or
push
push
inc
iret
xchg
cmp
add
sub
dec
or
push
int
and
lahf
mov
or
jmp
jo
stos
pusha
xchg
fs
or
lret
data16
add
or
xor
jbe
into
push
repnz
mov
out
pop
nop
ljmp
xchg
sbb
inc
lock
dec
adc
xchg
or
dec
mov
scas
movsb
shll
cmp
pusha
cmp
bnd
mov
cmp
stos
xor
add
popf
imul
scas
jle
fdivrs
pusha
sbb
dec
cmp
in
je
notl
or
lcall
sub
call
dec
mov
es
icebp
xor
sbb
cmp
jg
lds
in
outsb
mov
pushf
inc
insl
xor
ja
shrb
or
mov
sub
dec
adc
xor
insl
mov
test
clc
adc
adc
jno
jmp
xchg
or
mov
dec
mov
enter
data16
ds
mov
xor
stc
repz
sbb
mov
inc
insb
dec
jmp
inc
xchg
mov
xor
jnp
lock
jmp
pop
in
adc
mov
out
mov
out
dec
ss
cmp
addr16
jbe
test
jbe
add
in
push
cmpsl
lret
mov
fsts
inc
or
mov
jecxz
inc
lahf
clc
jns
push
mov
mov
lock
stos
es
sub
pop
push
jg
out
pop
push
sahf
sbb
daa
add
mov
or
hlt
cmpsb
scas
stos
push
out
cmp
pushf
and
dec
gs
je
test
xchg
shll
adc
and
mov
inc
mov
push
loopne
push
popf
push
popa
push
call
sub
or
mov
pop
or
andb
cmc
imul
mov
and
cmp
sbb
inc
push
sub
incl
add
dec
sub
les
inc
imull
and
jno
cwtl
les
add
in
push
testb
arpl
cs
mov
decb
fiaddl
sub
jge
sub
cmp
jmp
lds
gs
or
or
jno
aaa
aas
cmpsb
inc
inc
jmp
lods
int
mov
fcompl
pop
and
or
jbe
ss
mov
lahf
lret
dec
pop
es
and
add
loope
leave
pop
push
scas
enter
aaa
ficompl
mov
out
cmp
jo
aam
or
stc
sbb
enter
xchg
pop
bound
shll
and
sub
popa
int
iret
aaa
jns
ljmp
xchg
int3
clc
lret
fnsave
ficomps
addb
iret
dec
scas
pop
in
out
aas
mov
xchg
bnd
insl
sbb
jae
jl
pop
bound
cmpsl
mov
into
imul
in
inc
repnz
mov
mov
dec
rorb
xor
daa
in
scas
mov
sbb
sahf
and
stos
jo
repz
es
ret
fimull
cmp
je
leave
fdivrs
sub
dec
cmp
insb
pop
aam
mov
test
cmpsb
mov
cmp
dec
dec
cmc
jle
push
fs
rcrl
insb
mov
leave
pop
rol
add
push
and
shl
out
push
or
jg
or
push
xor
popa
movsl
sbb
iret
outsb
sbb
sbb
add
pop
dec
mov
jmp
fstpt
les
fcmovnb
push
inc
adc
mov
dec
enter
fildll
aam
fs
lds
les
xchg
dec
lahf
lret
aas
popl
inc
and
inc
inc
dec
push
jae
jecxz
lock
imul
cmpsb
sub
xor
stos
arpl
stos
adc
mov
mov
add
xchg
lahf
fsubrs
xor
es
dec
inc
andl
mov
lods
xor
push
idivl
imul
jmp
fwait
mov
jmp
imull
fdivs
dec
mov
push
inc
adc
fstpl
mov
push
xor
push
loop
inc
rcrb
dec
inc
test
jnp
stos
loope
inc
sbb
adc
xchg
and
out
pop
dec
sbb
jle
or
and
fisubl
dec
hlt
cltd
jmp
jecxz
jl
mov
test
mov
stc
hlt
daa
push
lret
es
fs
adc
es
sub
pop
cmc
mov
icebp
sbb
mov
xchg
bound
rol
movsl
and
enter
jnp
mov
outsb
popf
in
mov
or
cmp
rorl
dec
in
mov
sub
sbb
fnstsw
lods
inc
in
lea
fmuls
jno
fidivl
fmuls
je
add
xor
add
jp
pop
lea
arpl
push
pop
xlat
pop
subl
inc
lcall
out
cmp
lods
call
mov
lgs
add
ljmp
mov
ja
repz
daa
jbe
in
pop
xor
mov
jmp
cmp
sar
jno
jnp
pop
mov
pop
mov
btc
cwtl
cmpsb
sbb
dec
popf
fstps
aas
icebp
mov
imul
inc
xchg
jmp
or
inc
and
insl
mov
fildll
js
popf
adc
mov
dec
ficoml
mov
rclb
mov
jne
lret
out
stc
inc
mov
lcall
pop
inc
mov
div
dec
in
cmp
push
push
test
jg
scas
fstp
outsl
or
mov
in
jge
dec
push
sbb
xchg
in
sub
ret
add
out
add
jb
pop
xchg
cltd
push
rorl
mov
jg
std
mov
das
das
lret
popa
push
add
fisubrl
rcl
jg
int3
pop
scas
mov
movsl
aam
int3
pushf
and
xchg
adc
jp
fcompl
lock
dec
mov
data16
cmc
mov
jg
aas
xor
ss
sbb
scas
mov
inc
popa
stc
push
aas
lds
addr16
clc
mov
mov
add
jge
cmp
pop
and
je
ja
mov
test
jbe
nop
lods
icebp
movsb
ret
mov
insb
and
stc
stc
inc
pusha
mov
xchg
sub
sahf
jle
sbb
xchg
leave
pop
ficoml
shr
xor
pop
lret
jnp
lret
xchg
pop
pop
jecxz
insb
mov
mov
or
mov
jmp
popf
inc
out
xchg
into
sub
fnop
out
jae
xor
das
divl
movsb
inc
data16
hlt
pop
jmp
xor
add
pop
ja
sub
sbb
ja
test
cmpsb
push
test
pop
pop
rcrl
fwait
mov
fs
mov
inc
ret
lret
add
outsb
imul
inc
mov
adc
cwtl
loop
inc
xchg
cli
xchg
test
jno
test
ljmp
push
xor
add
ret
pop
leave
add
xor
xchg
adc
fsubs
in
mov
sub
jg
adc
dec
push
aad
mov
les
cmp
daa
fistpl
push
int3
stc
inc
mov
add
es
stos
int3
mov
xor
test
in
popa
sub
mov
clc
lock
mov
test
inc
xor
pushf
hlt
pusha
fldcw
ja
call
inc
aam
out
sti
and
pushf
aas
out
mov
mov
mov
jnp
nop
rcr
insl
test
inc
and
xchg
popf
gs
mov
popf
imull
sbb
or
mov
xchg
clc
aam
xor
rolb
lea
enter
idivl
and
ja
mov
ljmp
or
enter
add
sub
mov
arpl
repnz
xchg
push
sub
add
jge
sub
mov
decl
xchg
scas
pop
imul
lds
repnz
andl
movsl
stos
fmuls
enter
addr16
xchg
cmp
subl
or
mov
sarl
add
mov
push
gs
pop
dec
lods
sub
inc
pop
cmp
xchg
das
cld
cmpsb
jl
xchg
push
xchg
or
jg
jle
popa
lahf
mov
call
stos
inc
jo
pop
inc
ret
push
adc
fidivs
cmp
sub
clc
jge
jge
mov
mov
not
inc
sahf
sub
cwtl
incb
mulb
dec
or
push
mov
push
mov
gs
mov
mov
adc
cltd
jne
lea
loopne
fmull
shrb
stos
jecxz
inc
jecxz
mov
mov
pushf
jo
sbbb
mov
lahf
mov
and
pop
ds
jb
pop
ljmp
btr
inc
cmpsb
in
mov
repz
add
lret
test
daa
or
xchg
stos
fadds
fisttps
adc
in
xor
mov
mov
push
orl
adc
in
stos
into
mov
inc
adc
stc
in
hlt
inc
lret
mov
outsl
cmp
fisttpl
jne
adc
pop
add
fldcw
rclb
jo
out
call
movsl
dec
jmp
cli
mov
jns
ret
out
stos
leave
cmc
cmp
hlt
cmp
add
ss
cmp
jl
adcl
inc
out
mov
push
call
xchg
push
cmpsl
ss
cmp
ret
jno
pop
sahf
adcl
lock
nop
repz
leave
insl
aam
divl
scas
inc
xor
addb
xchg
adc
fists
push
aas
icebp
xor
outsb
mov
xchg
xchg
mov
pop
clc
sub
add
in
pop
push
push
sti
inc
pop
xchg
or
in
sub
bound
arpl
push
ja
test
das
push
roll
adc
lret
or
cmp
ret
push
sbb
stc
mov
movsb
hlt
push
mov
add
jecxz
cli
xlat
xchg
in
iret
inc
mov
and
fnstenv
and
rcll
test
lret
mov
mov
lea
and
notl
rolb
mov
mov
pop
loopne
scas
aad
cwtl
std
andl
pop
mov
arpl
add
mov
adc
xor
insl
ljmp
testb
arpl
jg
fwait
outsb
mov
pop
jb
cmp
pushf
lret
xchg
or
cs
andb
sbb
test
inc
mov
push
pop
clc
pop
addr16
mov
mov
push
cltd
dec
add
mov
cmp
xor
das
cmp
dec
gs
sub
sub
aad
fiadds
iret
lods
inc
cmp
rcl
outsb
mov
push
aas
test
push
push
jg
jecxz
push
dec
or
dec
cmp
movsl
in
cmpsb
fwait
dec
data16
dec
push
insb
mov
outsl
cmpsb
fs
cmp
aaa
lcall
fisttpl
mov
cmp
repz
out
int
sbb
mov
mov
repnz
jbe
fcmovbe
xchg
std
ljmp
pop
add
sub
jo
cmp
out
lds
jge
popf
add
mov
cmc
dec
insl
mov
mov
jo
lods
es
cmpsl
and
into
jne
dec
int
mov
cmp
mov
test
sub
xor
test
jp
imul
jecxz
mov
mov
test
xchg
jnp
or
imul
add
je
jne
gs
push
imul
pop
push
mov
pop
idivl
jo
push
popa
int
arpl
add
cmp
lock
addr16
mov
lods
sub
push
lcall
adc
lahf
sar
sti
xchg
imul
stos
jge
hlt
imul
es
cmp
out
movsl
loopne
inc
or
push
push
leave
mov
xor
xchg
outsb
push
enter
jbe
cmp
ret
je
out
add
xchg
testb
push
xor
popf
and
dec
das
ja
sbb
cmp
in
rcl
or
add
and
rcll
jmp
push
enter
test
test
mov
test
ds
lds
or
std
inc
or
sti
cmp
xor
rcrl
push
push
mov
adc
lods
aam
out
xor
rcl
cmp
jg
jg
or
aas
in
add
adc
and
mov
push
and
pop
call
lret
ficoms
jno
icebp
mov
mov
adcl
cmp
jecxz
xor
cmp
jns
jb
xor
sub
mov
push
rcrl
mov
data16
mov
sbb
add
mov
iret
sarb
lret
out
jno
ficoms
sbb
push
push
push
stos
popa
call
mov
inc
or
shll
mov
pop
ds
jo
ja
data16
call
test
dec
sub
outsb
or
jo
jle
xchg
sti
es
mov
add
into
out
pop
jbe
xor
xchg
pop
xchg
mov
insl
pop
in
bnd
cmpsb
xor
mov
sub
sub
xchg
xchg
es
rcrb
lods
sahf
mov
push
jg,pt
xchg
pop
add
adc
test
outsl
incb
lea
jecxz
movsb
sbb
push
dec
pop
add
notb
push
sbb
sbb
push
cmp
fcoml
std
shrb
fstpl
jno
fisubl
repnz
enter
add
and
or
repz
inc
cmp
arpl
test
imull
stc
pop
push
dec
mov
adc
insl
inc
insl
lret
or
pop
lods
sbb
bound
sti
jbe
mov
fdivl
and
adc
jbe
or
andl
shll
xor
test
mov
stos
xorb
rcll
in
shlb
push
pinsrw
adc
lcall
shrl
jne
sahf
adc
scas
push
jp
sbbl
or
jp
les
push
enter
inc
push
xor
pop
lock
add
cmc
ror
icebp
jecxz
fldt
or
aas
dec
stc
clc
push
dec
push
daa
cwtl
pop
push
push
mov
mov
add
sahf
fnsave
cmp
dec
mov
cld
sub
pushf
sbb
add
je
dec
es
xor
xor
fsubl
int3
sbb
pop
inc
frstor
dec
pushf
pop
fisubrl
out
inc
into
arpl
jae
outsl
dec
stos
cld
mov
jecxz
push
aad
or
cmp
or
jle
cmp
arpl
cmp
cmp
call
xchg
pop
inc
fwait
push
inc
add
notb
jnp
inc
push
scas
shll
leave
les
insb
icebp
and
jle
jl
das
clc
sbb
xor
and
and
cmp
push
gs
data16
pop
movsl
cmp
adc
sbb
outsb
ss
mov
mov
clc
jmp
add
cmp
cmp
mov
pop
push
mov
int3
mov
inc
push
bound
ja
add
mov
jg
shll
sarl
lcall
fdiv
movlps
hlt
scas
filds
loope
sub
jns
mov
inc
mov
push
neg
orb
aas
jle
push
sbb
mov
push
jecxz
mov
das
push
adcb
fsts
cs
in
sbb
mov
mov
inc
fdivl
rclb
lock
idivl
mov
movsb
push
push
push
xor
adc
int
in
popf
sub
jecxz
sub
ret
clc
gs
popf
aaa
xchg
ja
xor
pop
inc
clc
inc
xor
movsl
mov
fildl
js
xchg
lock
adc
test
movsb
mov
mov
ljmp
mov
fcomp
and
ja
ds
inc
pop
imul
iret
cmp
fcoml
dec
ss
out
imull
andb
pop
shrb
mov
jg
sub
int
push
repz
push
push
add
mov
pop
hlt
imul
test
adc
fld
sbb
pop
cmp
pop
lcall
and
call
sub
inc
push
lods
jnp
shr
cld
decl
out
mov
inc
faddp
scas
pop
and
dec
add
xchg
fcomi
xchg
pushf
pop
out
adc
cli
jne
mov
and
outsb
push
arpl
push
mov
mov
jmp
int3
fdivrl
xor
sbb
into
jnp
adc
xor
mov
mov
pop
push
mov
adc
movb
fcoml
push
pop
incl
cmp
mov
add
in
sbb
aad
push
push
movsl
push
scas
popf
js
out
aam
and
mov
pop
dec
cmpsl
pop
loope
loop
xchg
in
les
mov
shll
js
inc
jo
lds
sbb
push
lds
adc
std
cmp
int
adc
jo
mov
bound
je
fistps
mov
inc
jmp
pop
dec
and
jle
and
xchg
and
xchg
test
inc
adc
enter
arpl
sub
fs
leave
cld
inc
jnp
divl
inc
outsb
add
loopne
mov
imul
push
push
xor
std
lds
xchg
add
xchg
push
bound
dec
adc
repnz
pusha
mov
cld
lea
hlt
pop
cwtl
call
pop
test
int3
xchg
jle
cli
test
subb
push
fwait
pop
sbb
or
add
lret
sbb
fstpl
and
shrb
nop
push
lcall
pop
push
jne
outsb
sbb
icebp
mov
mov
jecxz
push
scas
mov
lods
add
xchg
repz
mov
gs
dec
insl
imul
push
cmpsb
xchg
icebp
xor
mov
dec
mov
loope
mov
ds
inc
pop
iret
aam
mov
mov
inc
jnp
mov
ret
dec
lods
sub
fbld
cmp
jb
je
cltd
dec
test
jle
imul
push
lea
or
lcall
ljmp
xchg
sub
gs
sbb
jno
stos
sub
jmp
mov
mov
add
sti
je
cmp
mov
arpl
aad
inc
cs
or
pop
push
pop
add
movsl
loope
lods
test
add
dec
in
dec
js
js
xchg
jb
adc
and
repz
pop
int
sub
mov
cs
cmpsb
xsaveopt
jg
mov
mov
mov
jb
mov
push
jp
dec
xchg
outsl
addr16
mov
jge
lods
jl
dec
add
sbb
dec
loopne
mov
popa
xchg
adc
jb
sbb
xchg
jmp
scas
or
or
xchg
scas
movsl
cmpsl
ret
sbb
int
xchg
mov
xor
mov
xor
inc
inc
cmp
or
or
xlat
lods
and
ljmp
sub
cwtl
mov
mov
push
inc
pop
xchg
fwait
push
outsb
clc
jbe
divb
mov
lea
push
xor
mov
stc
enter
ja
lods
mov
je
inc
mov
pop
test
push
out
mov
mov
cmp
jmp
ds
into
jns
and
dec
mov
add
push
and
push
fisubrl
jne
test
divb
and
push
daa
dec
mov
cs
sub
push
mov
mov
jb
fwait
sub
or
pop
pop
lret
xor
aaa
sahf
jg
dec
inc
xchg
imul
xlat
rorb
inc
lock
mov
xor
ljmp
and
jl
sahf
pop
xchg
jp
lcall
inc
and
dec
es
clc
xchg
sub
shll
pop
std
adc
aad
mov
scas
mov
mov
outsb
xor
mov
jae
subb
hlt
hlt
das
loope
rorb
pop
xchg
push
jns
add
push
mov
in
push
or
jnp
jmp
mov
add
push
jae
mov
out
int
lret
scas
add
in
ffree
mov
jg
push
cs
ret
mov
inc
mov
lcall
xchg
add
jg
xor
sbb
push
enter
in
cmp
pop
inc
mov
sub
and
pop
loop
out
jb
cmp
xor
dec
stos
inc
int
dec
pop
cmp
mov
xchg
cmp
jge
fildl
pop
push
push
test
mov
test
in
mov
outsl
mov
add
add
inc
adc
shl
sub
nop
flds
add
and
mov
mov
filds
fistpll
sbb
xor
mov
and
in
add
lock
adc
fbld
arpl
sarl
inc
xor
push
dec
dec
jo,pn
xchg
mov
sbb
loop
out
inc
xchg
mov
insb
add
xchg
push
sbbb
add
cld
pop
int3
stc
aad
scas
jns
sbb
out
cmp
jmp
fdivrl
xchg
jle
add
pop
fs
sar
mov
dec
lcall
and
xorl
mov
daa
adc
cmpsb
dec
cmp
es
sub
out
dec
adc
add
mov
aam
ss
push
stos
jp
inc
jne
mov
data16
and
mov
inc
in
push
test
ds
lods
lds
pop
sbb
test
inc
inc
sarb
mov
push
ret
sub
fadd
ljmp
inc
imulb
add
jp
les
adc
lock
test
je
push
fstpl
out
clc
mov
xor
and
inc
jno
dec
mov
inc
inc
cmp
cld
cmp
cli
jnp
mov
ljmp
xlat
inc
push
popf
jecxz
pop
ljmp
jnp
shrl
and
pop
mov
or
mov
insl
xchg
or
das
cmp
ss
cmp
ljmp
dec
and
ss
mov
fdivrs
jns
inc
sbb
dec
sub
aad
push
ror
scas
fisttpll
gs
push
popa
int
inc
or
test
and
xor
stos
cmp
pop
mov
or
pop
outsl
pushf
mov
pushf
ljmp
test
fildll
cmp
in
cmpsl
rorl
stc
push
lea
cmpsb
mov
lea
dec
test
sti
sub
repz
mov
push
xchg
inc
rcll
cmp
push
sbb
push
cmpsl
dec
mov
repz
idivb
iret
lds
addr16
inc
xchg
mov
fs
bound
and
cmp
push
push
in
sbb
mov
cmc
or
addr16
sub
push
push
xor
cmc
pop
pop
orb
sub
lea
test
cmp
fldcw
nop
xchg
lds
add
push
dec
cld
dec
cltd
inc
and
sbb
enter
ja
fwait
jle
imul
dec
adc
test
sub
xor
mov
mov
mov
lock
fcoml
dec
push
jle
je
lea
pop
inc
and
insb
adc
lret
dec
mov
and
xor
scas
cmp
aas
cmpsl
stos
idivl
or
stos
add
xor
ss
push
lahf
mov
xor
dec
add
lods
adc
jge
add
sahf
push
add
data16
repz
sahf
mov
fisttpll
ror
xorb
xchg
mov
mov
fstps
in
mov
shlb
mov
sbb
mov
or
mov
pop
fs
xchg
xor
ja
loop
pop
insl
stos
push
mov
cld
mov
dec
sbb
cld
fstps
jle
push
sahf
ret
push
or
add
insl
dec
fistl
mov
movsl
push
imul
cli
cs
sahf
mov
roll
xchg
sti
fsubrs
je
inc
imul
add
push
add
imul
daa
sub
clc
adcl
xchg
push
call
pop
adc
adcl
enter
or
xchg
pop
sub
adc
sarb
shlb
add
dec
repz
fucomip
inc
pop
add
mov
ret
mov
imul
jecxz
fldt
pop
adc
in
sub
xchg
push
xchg
push
jne
dec
mov
jl
outsb
dec
lds
and
popa
push
out
push
das
sbb
les
bswap
xrelease
or
xchg
jo
insb
inc
outsb
jb
fwait
xchg
adc
addr16
loop
lock
and
aaa
sti
fmulp
ret
shll
sbb
movsl
jle
in
lods
rorl
daa
hlt
push
xor
sbb
xchg
mov
loopne
adc
cmpsl
fsubrl
dec
push
push
stos
sub
add
andl
xchg
or
sub
jns
mov
cltd
ret
pop
fs
adc
dec
jae
cli
gs
psubusb
in
repz
sub
inc
fnstsw
out
mov
mov
call
sbb
and
add
mov
xchg
outsl
dec
int
pop
or
aad
pop
shl
pop
xchg
jne
pusha
inc
fwait
adc
out
mov
aad
push
outsb
push
push
dec
dec
cmp
cwtl
xchg
xorl
stos
dec
or
mov
mov
fadd
imul
fcmovne
xorl
sub
xchg
jp
add
fists
call
sbb
jns
test
sahf
std
lods
lds
mov
jb
sbb
cwtl
inc
xchg
mov
out
push
pop
jo
shlb
repnz
int3
mov
mov
inc
push
leave
jp
sbb
test
mov
pop
scas
scas
shrb
mov
iret
insl
lea
imul
pop
adc
push
ds
cmpsb
movsb
fwait
adc
or
xchg
jb
xorl
xchg
jne
sbb
clc
fcoms
inc
sub
mov
clc
arpl
sbb
mov
jp
inc
pop
push
lahf
jg
or
jns
mov
add
enter
pop
push
add
pop
sub
sbb
cmpsb
outsb
jne
jne
cli
das
ret
cmp
xor
mov
xchg
add
adc
pusha
pop
dec
fsub
jecxz
fisttps
xchg
daa
repnz
mov
shrl
push
inc
jp
ds
scas
inc
cmpsb
ficomps
xor
dec
mov
cvttps2pi
and
mov
jge
add
in
jbe
push
lock
jp
cmpb
lea
xlat
imul
jp
mov
inc
mov
iret
rcr
dec
mov
or
ret
faddl
mov
add
cwtl
xchg
push
jecxz
sub
ret
out
leave
and
add
inc
mov
dec
sub
inc
shll
ret
je
rcll
aad
call
pushf
lods
pop
and
lds
jp
dec
pop
add
fdivp
sar
data16
sub
test
pop
js
or
cmp
out
dec
ret
test
inc
lds
sbb
cwtl
in
dec
xchg
scas
jle
pushf
xchg
adc
sub
out
in
and
clc
mov
lret
and
sub
push
test
lret
fstpt
adc
cwtl
mov
std
popa
aam
push
das
insb
adc
cltd
cmp
into
inc
dec
into
into
mov
rorb
cltd
cmp
js
push
mov
adc
std
fisttpl
jle
mov
sub
adc
mov
jmp
cmpsl
daa
cs
jae
cs
dec
outsl
jno
pop
and
push
dec
push
jl
imul
leave
mov
jecxz
ds
enter
cwtl
ja
lret
pushf
roll
dec
xchg
mov
add
mov
lret
or
xchg
sub
stos
out
xor
ds
movsb
fistps
js
ret
xor
add
xchg
out
std
dec
fyl2xp1
mov
mov
in
std
or
cld
in
jbe
into
inc
cmp
fistpl
xor
bound
insb
clc
sbb
mov
xchg
dec
clc
mov
sub
es
pop
ret
repz
xor
xchg
in
pop
adc
negb
mov
or
or
cli
mov
test
clc
sub
push
pop
mov
push
inc
mov
mov
adc
daa
jnp
js
jae
and
fbstp
jne
cmp
cli
sub
mov
xchg
sbb
sbb
add
loop
mov
sbb
jle
or
adc
sbb
sbb
jo
mov
fnsaves
ret
inc
ret
inc
repnz
adc
jnp
mov
daa
or
push
gs
repz
xor
nop
jns
mov
movsb
adc
pop
in
bound
cmp
sbb
in
mov
jae
inc
inc
add
sbb
jbe
xchg
cmp
bswap
mov
xchg
es
aas
push
pushf
in
popf
pmaxub
push
or
xlat
mov
cltd
mov
add
popa
pop
sahf
std
jno
lahf
aaa
mov
cmc
jae
popf
sahf
test
xor
xchg
xchg
pop
fwait
gs
xor
fwait
lahf
sbb
jnp
and
mov
push
cmp
pop
imul
sub
daa
push
test
inc
xchg
add
outsl
imul
cmpsl
jle
imul
inc
bound
mov
movsb
xchg
xchg
mov
data16
pop
jno
aad
sbb
fldl2e
outsl
loopne
jno
sub
sub
mov
xor
sahf
in
jecxz
mov
cmp
in
push
xrelease
call
aaa
pop
test
push
cltd
int3
inc
test
push
test
mov
pop
sahf
lret
pushf
gs
frstor
push
mov
and
pop
icebp
js
shl
push
data16
loop
imul
call
add
mov
push
subl
rcll
sarl
push
imull
add
cmpsl
xchg
sbb
mov
mov
cmpsl
sbb
fs
jl
dec
sbb
mov
stos
dec
or
cwtl
push
inc
js
or
cmpsb
pop
mov
push
inc
and
lcall
call
mov
sub
dec
add
xorb
jecxz
shll
imul
mov
andl
pop
xchg
loop
into
sahf
inc
xchg
out
dec
inc
sahf
adc
jg
xchg
xchg
inc
or
repnz
mov
mov
xchg
dec
xchg
xchg
hlt
mov
ds
or
xchg
aas
mov
adc
or
out
adc
jne
faddl
roll
sub
repz
and
outsb
fsubr
std
xor
or
clc
les
daa
je
pop
loop
daa
vmulpd
cmpsl
mov
frstor
or
inc
pop
fsts
bound
in
fwait
lcall
stc
or
mov
ret
test
ja
loope
jmp
pop
pop
sbb
rorl
int3
push
pusha
mov
ljmp
pop
jge
lret
call
cmpsb
pusha
js
and
in
call
cmpsb
data16
mov
sbb
or
mov
jge
pop
sbb
cmp
out
push
pop
test
sub
cmp
mov
pop
sub
inc
test
dec
jo
inc
adc
cmp
ret
cs
fsubrl
repz
jle
rcr
in
js
fldl
add
adc
cmp
test
cmpsl
xor
aas
lcall
push
adc
outsl
adc
mov
ficoms
push
pop
xchg
notb
insl
pop
ja
insl
and
and
stc
mov
mov
push
popa
dec
xor
aam
or
sbb
jp
mov
pop
sarb
push
or
sbb
xchg
in
adc
push
push
cmpsb
xchg
dec
or
push
adc
aaa
cmpsb
push
sub
les
cmpsb
aad
insb
inc
pop
sub
inc
shl
cli
outsl
jecxz
out
adc
xchg
stos
jl
xlat
sub
arpl
mov
jns
rolb
sbb
sbb
adc
lret
out
inc
sub
movsl
mov
adc
stos
aad
xchg
xchg
cmp
mov
lret
ss
mov
inc
xor
adc
pop
cmp
jmp
iret
cmp
xor
cld
inc
subl
enter
addb
or
push
sbb
pop
cltd
fs
or
enter
push
cmc
aad
adc
or
loopne
push
or
push
xor
and
out
mov
pusha
inc
cld
sub
pop
ja
jl
ret
lret
rcrb
es
les
dec
idivb
inc
andl
pushf
scas
push
push
pusha
mov
pop
lahf
cli
inc
sti
repz
xchg
inc
or
pop
std
pop
into
pushf
jg
push
pop
inc
mov
fdiv
push
jne
int3
lods
push
mov
pushf
cmp
rcl
movsl
out
and
dec
bound
mov
out
inc
repz
jae
jo
pusha
xchg
imul
shrb
mov
inc
jl
aam
xor
or
xchg
inc
pop
sti
ds
test
aad
cs
mov
repz
mov
lods
push
int
mov
xchg
cmp
cmp
outsl
cmpsl
aas
movsb
push
es
jle
lock
and
in
inc
jg
cld
aas
test
sbb
push
in
negb
xor
rol
dec
aaa
jmp
push
clc
fidivrs
mov
inc
lcall
xorb
ror
push
test
insl
fldenv
mov
ret
mov
imul
cwtl
cs
fldenv
add
enter
out
jno
or
and
sub
inc
nop
ret
jg
mov
adc
or
push
and
mov
mov
jecxz
inc
cltd
push
and
stc
insb
icebp
aad
movsb
insl
cwtl
fldl
jmp
push
xchg
fildll
aad
addb
movsl
push
popa
pop
andb
jmp
sbb
imul
pop
jmp
pop
pusha
cwtl
mov
lds
lcall
popf
xorl
call
fisubl
fwait
push
pop
mov
push
imul
fildl
vmptrld
repnz
sub
pushf
popa
or
xor
mov
pop
adc
xlat
fsubs
add
mov
scas
aad
mov
or
mov
inc
repz
add
mov
pop
loopne
repnz
push
jge
xchg
loope
aas
lock
cmp
insb
adc
and
in
xor
sbbb
daa
push
cmp
movsl
loopne
sbb
das
push
stc
nop
push
test
dec
xor
mov
dec
sub
push
xor
push
aaa
int3
ss
imul
xchg
cs
mov
sahf
adc
test
insb
dec
xor
xchg
aad
jmp
imul
mov
test
clc
inc
inc
jae
xchg
pop
mov
arpl
fdivrs
or
jnp
incb
fldenv
shll
sarb
dec
cmp
inc
mov
mov
scas
aas
push
and
mov
mov
fs
imul
rorl
mov
sub
sub
scas
sub
movsb
xchg
stc
adc
mov
pop
daa
jl
aas
int3
adcl
xchg
or
in
aaa
mov
hlt
push
push
mov
mov
dec
dec
orb
dec
xor
jnp
repz
pushf
pop
cmpsl
je
add
dec
or
xchg
bound
or
dec
out
andb
iret
pop
das
xchg
or
sub
cwtl
jecxz
mov
popf
in
scas
outsb
push
jg
adc
or
mov
nop
adc
clc
add
xchg
inc
in
das
daa
lds
push
cmp
jmp
lret
test
cmp
fwait
and
lods
inc
insl
popa
xor
mov
and
cmp
pop
out
xor
cmp
fwait
sub
mov
popa
or
cmc
stos
mov
mov
xchg
fwait
sub
out
test
push
cld
aam
int3
add
neg
xchg
cld
adc
cmp
subb
das
jmp
loope
popa
push
and
sahf
adcb
fdivrl
jg
stos
aam
cli
ret
mov
ficompl
or
push
movsb
and
pushf
out
xchg
mov
push
fcomip
sbb
inc
or
pop
mov
enter
cmp
cld
dec
jbe
js
stos
nop
mov
jnp
fwait
cs
push
pop
mov
call
cmp
push
fcmovne
adc
stos
data16
sahf
jge
out
lea
sti
pop
pop
subb
hlt
lcall
add
imul
loopne
sub
lea
xchg
xor
mov
out
sbb
cltd
cmp
sbb
add
cmp
sub
xor
scas
pop
xor
lds
clc
dec
mov
mov
or
dec
imul
in
fs
insb
test
mov
inc
pop
inc
les
xchg
pop
aam
mov
ljmp
shl
fcmovne
lahf
jne
xor
wrmsr
lea
aas
adc
push
mov
push
mov
mov
dec
xor
push
icebp
and
inc
outsl
es
icebp
mov
in
pop
adc
jmp
lds
xchg
dec
fisubl
mov
lret
sub
adc
hlt
fsts
scas
sbb
into
rcl
stos
xor
sbb
outsl
dec
lahf
xchg
mov
out
fsubrl
shl
mov
pop
mov
shl
inc
xor
in
mov
test
test
cmp
and
jns
add
sub
cmp
aam
rcr
mov
pop
leave
rorb
stos
icebp
sub
add
fstpt
sub
aad
cli
xchg
or
call
xor
pop
mov
mov
lret
lods
mov
add
insb
stos
divps
push
jb
call
cld
add
js
jl
lock
and
stos
cld
mov
sub
aam
outsb
xchg
sbb
cmpsb
xor
xor
popa
je
and
cmp
jnp
std
out
cli
stos
pop
movsb
and
int
jmp
nop
imul
xor
shll
inc
ret
arpl
fprem
in
mov
jl
adc
rcll
ss
dec
xlat
dec
or
inc
dec
call
inc
cs
xchg
inc
add
mov
push
xchg
aad
shrb
std
test
or
sub
mulb
ja
sub
adc
lods
popa
data16
pop
js
insb
clc
sub
jmp
enter
aas
aam
push
xlat
add
xchg
punpcklwd
and
into
sbb
std
in
shrl
repz
paddq
pop
dec
add
mov
je
imul
pushf
xchg
fnstsw
mov
xchg
mov
lahf
fiadds
mov
pop
add
call
ret
or
call
adc
idiv
leave
stos
das
out
pusha
test
or
lcall
cmp
lret
aam
fstp
xchg
cs
fs
icebp
repnz
sub
lret
inc
jp
aam
es
add
pop
je
fsubl
inc
or
inc
jb
je
repz
sbbb
adcl
xor
pop
dec
idivb
inc
xor
pop
adc
sub
mov
or
loope
mov
hlt
inc
add
jno
jns
pop
and
aaa
scas
sub
push
cwtl
mov
mov
xchg
aad
das
fdivl
pop
jge
and
sbb
movsb
xchg
mov
in
push
aas
in
sub
or
push
mov
icebp
jmp
adc
push
arpl
pop
ja
push
cltd
or
push
cwtl
es
and
xchg
inc
out
jbe
push
xor
insl
testl
inc
call
in
shrb
mov
mov
or
and
jnp
enter
fcmovnb
and
iret
jnp
pop
and
mov
pop
xchg
xor
lcall
mov
fstpt
imul
insb
mov
dec
mov
pop
push
inc
jb
lea
stc
or
xchg
data16
data16
lcall
les
and
fcomps
jns
loopne,pt
fildl
sub
das
ds
lods
mov
inc
push
sub
adc
inc
cmp
jnp
ja
jge
jae
jne
mov
cli
fs
shl
arpl
scas
das
outsb
into
js
gs
mov
rcrb
cli
sti
aad
les
iret
xchg
mov
sbb
dec
aad
popa
loopne
test
out
sbb
lcall
lock
pop
in
fiadds
sub
sub
xchg
adc
sub
mov
outsl
dec
mov
xchg
mov
mov
and
mov
push
leave
adc
ror
mov
push
cmp
jne
cwtl
insb
push
cmpsb
dec
pushf
fsubp
ret
nop
iret
push
repnz
int
lock
add
cwtl
mov
mov
and
lods
jno
mov
sbb
imul
lods
mov
dec
ljmp
lods
fs
orb
stos
ret
repz
fwait
xchg
movsb
cltd
ja
sbb
shrb
xor
test
aam
inc
jp
or
mov
or
inc
cs
faddl
xorb
lcall
aad
mov
mov
cli
insb
jns
decl
aaa
xchg
in
les
sahf
sub
out
andl
loop
push
inc
addl
int3
adc
mov
fdivr
xchg
xor
loop
test
mov
add
out
loop
icebp
out
dec
mov
push
lock
mov
mov
cwtl
adcl
cltd
xchg
sbb
sub
pushf
inc
rorb
jns
cmp
ds
jecxz
jo
pop
xor
int
add
pop
fisttpl
dec
cs
or
xchg
outsb
je
mov
out
movsl
icebp
sub
repnz
aad
test
jle
filds
lock
xor
mov
addr16
sbb
add
test
cmpsl
xchg
and
mov
inc
mov
adc
mov
clc
pushf
popa
mov
shlb
dec
lea
in
mov
lcall
and
xlat
mov
stos
inc
push
mov
ja
mov
inc
and
pop
fs
nop
mov
sbb
push
movsl
mov
insb
cmp
or
icebp
sub
xchg
jbe
ja
dec
data16
and
xor
shrl
shrb
jle
popa
daa
fimull
inc
push
lret
jmp
xchg
test
cld
pop
roll
iret
jmp
stos
and
mov
push
jno
lcall
in
xchg
add
or
mov
dec
lods
bound
icebp
lret
ljmp
ljmp
lret
sub
push
xchg
stos
cs
and
sbb
mov
mov
push
cmc
add
insb
pop
push
mov
mov
outsb
in
je
pop
sbb
mov
popa
jb
cmp
out
push
mov
iret
dec
ja
int3
adc
mov
add
xchg
add
outsb
pop
sub
mov
xor
cmc
mov
push
movl
push
and
enter
adc
inc
jne
fwait
out
mov
mov
dec
fmull
adc
inc
cmp
rclb
je
jne
add
aad
and
leave
lret
in
push
push
loop
adcb
imul
mov
push
mov
icebp
adc
xchg
and
cmp
out
push
dec
sahf
adc
mov
mov
push
cmp
mov
mov
stos
push
xchg
lahf
mov
test
jge
aad
mov
add
fstpt
mov
dec
test
add
int
fs
stos
test
fcoms
sub
bound
repz
and
dec
imul
cmp
cmp
push
fsts
sub
or
xchg
pop
mov
jnp
imulb
out
mov
cmc
std
incl
jl
nop
push
jo
push
lahf
mov
mov
js
jp
fnstsw
dec
test
jbe
addr16
dec
mov
popf
push
xchg
sahf
cltd
and
mov
mov
xorl
mov
outsl
and
jge
xorb
add
push
cmp
hlt
mov
lods
in
pushf
lods
sub
dec
inc
out
mov
jl
or
stos
shl
push
push
mov
int
push
daa
lcall
flds
pop
push
int
mov
jecxz
adc
add
pusha
in
push
mov
fs
cmc
sti
xchg
jb
push
jo
adc
adc
cmp
mov
pop
push
add
popa
mov
pop
iret
inc
enter
mov
fisttps
jmp
xor
mov
adc
mov
xchg
sbb
sbb
stc
addl
movsb
dec
sti
addl
inc
dec
lds
and
push
and
in
sbb
into
call
aas
lds
xchg
xlat
outsl
repnz
loope
jge
cwtl
xchg
pushf
jne
adc
mov
cmpsl
lods
jl
mov
pop
adc
adcl
cmp
fiaddl
pop
and
and
or
cwtl
leave
xor
push
and
mov
sub
aad
jb
pop
scas
test
mov
imul
mov
repz
xchg
adc
imul
add
cmp
push
mov
jns
cmp
loopne
cld
gs
sub
jmp
xchg
out
mov
ficoms
or
jg
sti
jo
daa
icebp
aam
add
inc
sub
in
cmp
xchg
and
cli
ftst
jle
sub
lea
cld
ret
iret
jle
fldt
adc
addr16
xchg
xor
gs
ficompl
sbb
fmuls
int
xchg
mov
les
cmp
dec
push
imull
push
push
mov
mov
hlt
ja
sub
rorl
es
xchg
jnp
dec
or
aas
stc
fimuls
insl
inc
es
adc
into
mov
dec
ficoms
lret
jns
jecxz
sub
icebp
shrl
sbb
sub
and
xor
pop
add
or
xchg
test
xchg
popf
dec
sub
mov
fisttps
cmc
xchg
adc
add
push
mov
lock
add
je
rcll
dec
sub
stos
cld
shlb
add
insl
xchg
jno
adc
xor
loopne
pop
rorl
fs
sub
mov
sub
adc
jbe
rol
jge
dec
cmpsb
addr16
add
mov
jne
lcall
inc
lahf
sbb
sbb
xchg
movsl
adc
or
and
sub
xchg
push
in
test
dec
lea
mov
xchg
mov
lret
addr16
mov
jge
mov
repnz
call
pusha
push
lret
jp
fistpll
mov
jle
insb
fs
dec
les
jge
das
sti
xlat
mov
xchg
stc
nop
pop
mov
subb
sbb
pop
movsl
and
ja
je
add
les
sti
mov
cmp
ret
pop
fmulp
sbb
rol
testb
push
sbbl
ds
or
push
aas
inc
pop
or
mov
sbb
jecxz
dec
xor
fidivl
pop
std
ficompl
xchg
sub
outsb
mov
fidivrs
xchg
inc
rcrl
cmc
cli
adc
daa
push
mov
std
mov
scas
inc
les
fwait
push
mov
nop
mov
ret
stos
loopne
popa
ljmp
rolb
or
xchg
or
pop
mov
jle
push
es
inc
sub
fimuls
and
int
int
inc
int
out
insb
fsts
xchg
mov
xchg
clc
mov
js
jbe
dec
sub
mov
push
bound
push
sahf
psadbw
dec
xor
nop
repnz
into
push
jecxz
inc
xchg
mov
sbb
jge,pt
sbb
test
push
lcall
jg
je
pop
jg
jnp
dec
movsb
sub
mov
xchg
ds
in
xchg
mov
aam
lret
mov
push
sub
test
dec
dec
cmp
jbe
xor
dec
mov
repz
push
in
mov
cmp
mov
xchg
aad
push
scas
xor
sbb
add
imul
or
int3
push
fidivs
mov
mov
adc
adc
cmp
sarb
dec
pop
lea
loope
mov
fucomp
mov
mov
mov
mov
stos
mov
js
js
das
movsb
or
cmp
inc
add
into
out
lds
jne
xlat
pusha
aad
mov
xor
outsb
cltd
push
adc
loopne
in
and
cmp
sub
push
roll
insb
mov
jp
xor
rcll
cwtl
adc
inc
or
loope
mov
jne
loope
pushf
jb
adc
cmp
adcl
or
sub
jmp
test
xchg
inc
jo
jnp
xchg
mov
cmp
in
int
jbe
hlt
adc
sbb
scas
sbb
stos
popf
push
jp
outsl
fsin
clc
push
nop
mov
push
icebp
xchg
pushf
or
cs
mov
daa
frstor
seta
stos
push
leave
xchg
mov
movsb
inc
sbb
stc
xlat
cs
xlat
fs
dec
rorl
pop
push
repz
pushf
out
idivl
scas
loope
mov
into
jb
or
aas
xchg
imul
gs
xor
cmp
xchg
hlt
dec
or
loope
ficoms
call
lcall
test
mov
out
inc
jne
mov
cmp
in
cmp
mov
cmpsl
int3
sbb
push
mov
jge
xchg
push
mov
inc
stos
or
cmp
and
cmp
clc
push
mov
push
push
aaa
mov
aaa
clc
daa
jmp
xlat
data16
pop
sbb
push
mov
lds
aaa
rcrl
xchg
stos
inc
mov
ret
fcmove
imul
ss
lock
or
lods
pop
rolb
inc
push
jp
cmp
and
je
xchg
pushf
cmp
ja
fisttps
out
sti
lods
jne
fmull
in
sahf
add
mov
in
jmp
loopne
nop
inc
leave
push
fnstenv
pop
fldt
cli
xchg
cmp
pop
xor
xchg
testb
loope
addb
cmp
ds
jno
jo
jmp
jns
lret
adc
inc
cltd
mov
jns
idivb
cltd
std
cmpsb
mov
dec
repnz
imul
into
jo
cmp
movb
adc
subb
mulb
icebp
mov
es
and
into
popf
pushf
push
jbe
adc
mov
and
push
pop
mov
add
xor
xchg
sbb
fstps
or
pop
nop
repnz
xchg
iret
pop
fadd
int3
repnz
mov
lea
ret
sbb
in
filds
push
test
cli
pushf
fsubrs
data16
ret
ja
pop
inc
dec
scas
inc
cmp
cld
addl
dec
push
movsl
xchg
cmpsl
popf
ds
movsl
xchg
xchg
jle
dec
stc
mov
xchg
lcall
mov
jle
addr16
push
inc
je
repnz
xchg
xlat
aam
jl
dec
mov
movsl
jmp
repz
sub
mov
xor
mov
adc
cmpsb
cmp
mov
test
xor
cli
in
mov
mov
push
fs
stos
cwtl
and
mov
cmp
mov
sub
ja
clc
mov
inc
mov
mov
lret
xchg
xchg
aaa
loopne
loopne
add
push
push
gs
add
add
sbb
jmp
cmc
int3
fists
in
adc
jno
pop
ret
and
loope
and
xor
shrl
or
dec
andl
repnz
loope
sbb
aaa
xlat
test
pextrw
inc
adc
push
push
repz
bound
call
xchg
sbbl
jb
popl
ss
lret
idiv
lcall
sub
lret
test
sbb
pop
fcoms
mov
dec
inc
popa
mov
stos
inc
in
and
mov
lods
imul
pop
xor
stos
mov
lods
pop
jne
lret
mov
pop
stos
or
sub
inc
mov
movsl
int3
loopne
jne
pop
xchg
movsl
jno
push
fldcw
ret
aas
imul
and
push
aad
cmpsb
sub
dec
sub
lock
test
push
inc
bound
dec
pop
imul
aas
mov
es
sub
test
pop
call
and
sahf
andb
inc
nop
adc
addr16
mov
and
lret
fstpl
int3
pop
pop
cltd
jge
mov
in
outsb
mov
clc
pop
pop
push
icebp
dec
out
in
out
aam
pop
test
cwtl
pop
dec
outsl
insb
pop
jbe
cmpb
inc
sub
and
jnp
roll
sti
insl
push
sbb
push
call
jmp
lods
xchg
call
pop
out
idivb
push
lds
add
dec
std
es
js
jl
xor
mov
popf
outsl
fadds
cmpb
pop
mov
ret
sahf
jecxz
pushf
or
movsl
add
lods
mov
enter
loope
jmp
cmpsb
std
call
insb
loopne
inc
cmp
jb
mov
arpl
xchg
xor
aas
insb
or
jle
lret
ret
pop
jecxz
mov
mov
sub
mov
xor
jl
mulb
out
inc
add
pop
mov
adc
inc
sbb
cmp
sub
ss
mov
in
sub
inc
cmp
adc
test
push
jp
imul
ret
push
xchg
loop
pop
add
lods
lret
sub
rol
mov
fildll
cli
fldl
data16
mov
xor
sub
ljmp
test
ret
inc
pop
into
sub
pop
repz
fdivr
lock
nop
das
lock
loope
push
jo
movsl
ja
sbbl
hlt
mov
xchg
int3
mov
and
sub
inc
xor
add
xchg
sbb
push
mov
popf
mov
cmp
dec
pop
inc
mov
es
mov
pusha
inc
mov
cmpsl
fucomi
ficomps
js
mov
dec
add
les
push
push
xchg
dec
push
pop
dec
loopne
stos
xchg
inc
testl
sub
dec
daa
mov
or
push
insb
xor
hlt
pusha
xchg
out
je
je
xor
lock
in
shll
js
insb
mov
dec
in
rol
ss
mov
push
and
xlat
int
das
sbb
mov
lret
mov
test
mov
cltd
rolb
cmp
push
into
dec
filds
mov
out
sub
add
dec
icebp
clc
stos
stos
loopne
jns
push
notl
xorl
pop
dec
ds
insb
or
xchg
sbb
mov
es
inc
std
jb
push
scas
bnd
add
mov
cwtl
into
mov
in
jae
inc
idivb
jae
lods
fcompl
xchg
pop
fdiv
jns
xlat
adc
movsl
xchg
and
or
jae
xor
mov
loopne
inc
arpl
jl
jae
out
jg
ljmp
in
xor
jae
shll
mov
mov
ret
add
push
leave
shrb
dec
jl
loop
daa
inc
insb
mov
jle
push
pop
dec
lods
fdivrp
dec
jmp
ret
inc
out
popf
add
mov
ret
fwait
adc
scas
dec
inc
push
and
push
enter
es
lret
int
and
xchg
clc
cltd
pop
cmp
jecxz
pcmpeqb
mov
adc
std
mov
mov
push
daa
or
or
jnp
inc
insb
ret
cmp
jecxz
adc
pop
cs
inc
mov
repnz
xchg
pusha
jp
orl
cmpsl
push
jo
sbb
sbbb
inc
jle
data16
stc
xchg
jle
adcl
push
push
xor
pusha
orl
mov
xchg
dec
or
leave
mov
push
xor
adcl
rcl
adc
mov
lods
mov
mov
add
clc
mov
ds
xchg
cmpl
sbb
ja
cltd
adc
mov
icebp
jg
inc
test
insl
lahf
ret
pushf
push
mov
fstpt
xchg
lret
jmp
xchg
push
inc
and
loopne
add
mov
into
repz
dec
lds
cmpsl
mov
mov
lock
inc
cmc
sub
adc
imul
fwait
lret
out
dec
jecxz
mov
or
stos
enter
call
cmc
push
xchg
rcl
jmp
sahf
and
ljmp
inc
pop
cmp
push
aad
xchg
pusha
out
sub
pusha
or
rorb
ja
sbb
inc
fstps
fyl2xp1
adc
repz
push
pusha
loop
fnstcw
mov
lods
mov
mov
jne
mov
mov
imul
es
fbstp
loope
jnp
lock
out
and
iret
pop
mov
cli
stos
sbb
ficoml
cmc
dec
rol
mov
out
jno
jl
xchg
test
aad
add
fnstenv
daa
mov
rol
orl
mov
add
adc
cmpsb
sbb
ds
inc
arpl
jg
icebp
das
cmpsb
pop
dec
push
mov
mov
push
popf
hlt
jno
jp
gs
xchg
sub
test
pop
sbbb
pushf
mov
add
repz
adc
fbld
call
pop
in
dec
pop
or
out
mov
sub
push
and
xor
push
adc
pop
mov
movb
mov
inc
ret
lods
mov
pop
lock
xchg
lret
test
out
aaa
xor
bound
cmp
jb
xchg
popa
lcall
insl
and
inc
fnstcw
out
sub
test
cld
daa
and
pop
mov
mov
inc
dec
sub
mov
or
sbb
xor
mov
dec
add
in
aam
loopne
dec
sti
cmp
js
outsl
rclb
icebp
loop
pop
inc
pushf
movb
cmovl
cmp
push
dec
out
push
mov
rolb
xchg
push
pop
pop
ret
fisttps
mov
add
push
loopne
mov
aad
or
nop
add
dec
nop
or
push
mov
push
pop
in
lcall
xor
dec
fsts
cmp
movl
pop
inc
jns
push
dec
mov
adc
sub
xchg
outsl
fidivrs
int3
shl
cmp
pop
pushf
out
xor
pop
mov
test
xchg
sub
jmp
xor
scas
or
mov
out
data16
ds
pop
adc
adc
pop
dec
or
and
xor
imul
notb
popa
hlt
sub
bound
pop
push
and
lea
imulb
inc
inc
fwait
mov
xchg
outsl
or
adc
xchg
xchg
test
leave
std
sbb
dec
in
scas
xchg
sub
inc
pusha
add
stos
loop
push
mov
popf
xor
hlt
cld
rcrl
clc
daa
inc
mov
js
mov
int3
mov
sub
mov
inc
scas
xor
out
pop
push
push
pushf
fsubrs
dec
arpl
je
jmp
add
andb
jbe
ds
push
std
je
in
sti
mov
out
test
sub
xchg
insb
loope
mov
adcl
mov
jne
jmp
ret
mov
mov
adc
in
ret
and
mov
leave
or
shlb
sub
scas
mov
mov
sub
sub
inc
push
sbb
jg
sbb
mov
or
sub
dec
and
sbb
pop
out
jno
cli
ss
cmp
or
push
mov
dec
repnz
andl
jg
lods
jb
rcl
inc
cs
dec
or
stos
dec
xor
pop
lods
mov
inc
xor
pop
cwtl
sub
xor
outsl
xchg
mov
or
mov
jb
mov
test
stos
mov
insb
or
lods
cld
cld
cmp
jle
fsubrs
push
mov
bound
in
ret
mov
dec
mov
add
mov
or
mov
sbb
int3
mov
mov
adc
loopne
sub
in
movsb
push
scas
mov
shrl
movswl
inc
int
ficompl
mov
fcmove
movsb
mov
idivb
sbb
mov
push
or
and
das
aam
adc
jnp
adc
stc
dec
sub
mov
ret
btr
in
push
lock
sub
inc
fisttpl
je
add
gs
push
sarb
subb
jmp
push
xchg
imul
mov
mov
xlat
add
hlt
adc
ljmp
mov
jmp
fnstenv
dec
sub
adc
in
lds
movsl
add
inc
dec
and
xor
lret
fdivs
push
out
test
mov
xchg
add
das
cld
insl
mov
and
jp
sahf
loopne
pop
xor
dec
xor
cs
fwait
push
jae
out
mov
fidivs
aaa
fstps
daa
lock
repz
loop
movsb
inc
and
mov
push
push
aaa
aas
push
lret
or
imul
cmp
in
insb
inc
inc
and
clc
mov
pop
jb
inc
out
shlb
add
sbbb
movsl
xor
mov
adc
inc
sub
loop
aas
std
pop
cs
xor
push
mov
mov
cmp
stc
xor
inc
add
xchg
jmp
fisttpl
sbb
adc
mov
and
outsb
cmp
stos
hlt
push
mov
popf
pop
mov
fs
mov
mov
jno
das
mov
cmp
inc
jp
jecxz
dec
mov
pop
dec
test
stc
sbb
sarb
pop
addb
pop
jmp
andl
notb
add
sbb
imul
jbe
dec
adc
add
add
rorl
inc
xor
mov
clc
sub
jae
dec
sbb
mov
aad
push
adcl
sub
insb
push
xchg
jae
xchg
out
sbb
std
and
inc
jmp
cld
arpl
or
cmpsl
push
cld
cmpsb
in
and
aad
shll
push
inc
ds
mov
push
inc
sbb
repnz
adc
sarb
sbbl
pop
test
rcl
push
dec
or
data16
cwtl
mov
push
sbb
fnstsw
jb
mov
xor
dec
mov
pop
mov
dec
movsl
fcomps
or
or
jnp
les
fnstenv
and
add
push
add
ret
or
pop
stos
das
pop
jno
ja
mov
jb
icebp
sahf
addr16
add
in
sub
clc
mov
enter
popa
inc
sahf
ds
mov
clc
xchg
andb
inc
jg
and
dec
in
ret
cmp
mov
mov
jae
popa
ds
lods
mov
fs
mov
push
movsl
daa
bound
aaa
xor
push
xchg
ror
mov
popa
cmp
add
lcall
mov
sub
add
aam
mov
lea
mov
sarl
add
xchg
nop
adcb
mov
mov
pop
insl
in
or
dec
sub
sub
vsqrtpd
add
iret
sbb
jne
aas
add
xchg
mov
in
jmp
aam
loope
mov
repnz
stos
cmpsb
sub
dec
lret
mov
std
inc
or
call
xchg
in
push
sub
pop
sbb
mov
push
insl
adc
je
std
or
add
inc
cmp
lods
inc
add
addr16
sbb
cltd
xchg
popf
dec
adc
add
xchg
cli
insl
add
push
sub
dec
rcll
push
push
adc
test
mov
orl
lcall
cmp
loope
shr
adc
andl
cmp
jae
es
sbb
in
ja
sbb
pop
xor
or
jmp
fiadds
bound
paddusb
pop
call
jg
cmpsl
fsubrs
adc
jecxz
cmp
pop
cmp
es
or
xchg
add
jne
and
inc
shlb
push
cwtl
pop
loop
xor
dec
sbb
and
repnz
inc
inc
fistpl
in
out
pop
sahf
js
in
mov
add
xchg
dec
inc
fdivrl
sahf
movsl
inc
push
pop
push
dec
pushl
addr16
sbb
stos
mov
sbbb
mov
jg
sbb
pop
stos
dec
je
add
push
outsb
repz
stos
ret
push
or
ret
push
icebp
rcll
bound
aad
in
xchg
xchg
testb
and
xchg
jo,pt
subl
xchg
in
js
push
add
inc
sbb
adc
push
jae
lock
xor
test
xchg
lcall
popf
adc
icebp
jge
jno
sub
ja
hlt
xor
stos
std
lret
hlt
pop
xor
add
mov
aaa
push
add
sub
push
cmp
jb
ja
jo
ret
and
lret
jmp
mov
xor
cli
adc
add
dec
add
jg
pop
mov
mov
test
and
das
mov
sbb
push
cmpsb
ljmp
out
fcomps
shrl
ss
add
or
sub
loopne
or
push
add
rcll
mov
sbb
out
out
rcr
sbb
push
call
cmp
and
cld
sub
repnz
data16
sub
scas
xor
pop
mov
dec
test
and
mov
xlat
dec
sbb
push
js
push
add
or
and
dec
sub
and
enter
clc
adc
push
ljmp
jo
pop
add
mov
sahf
adc
cmpsl
mov
aaa
arpl
call
mov
aam
scas
inc
or
cmpsb
mov
sbb
adc
lock
jp
pop
jmp
jmp
cmpb
pop
add
out
aam
xchg
ret
mov
jle
adc
mov
jg
push
add
jns
cmp
movsl
lods
jmp
call
cld
dec
xchg
lret
fcos
dec
in
xchg
adc
mov
stos
ds
inc
test
das
stos
scas
int
xchg
out
push
xlat
into
out
xor
jns
idivb
imul
pop
and
add
add
jg
inc
xchg
add
jnp
enter
fwait
xchg
lods
cmp
xchg
or
mov
lahf
loope
test
push
movsl
and
dec
popa
sbb
mov
es
sub
sub
mov
jg
or
movsl
push
in
mov
sub
or
in
push
mov
inc
mov
imul
ret
bt
imul
jbe
inc
mov
movsl
ja
pop
test
mov
mov
movsl
mov
jp
int
popa
lret
fs
jbe
mov
lods
pop
ljmp
test
adc
movaps
test
js
inc
scas
pop
shlb
mov
mov
xor
sub
test
cmp
arpl
leave
mov
mov
fildll
hlt
jge
popa
pop
jmp
loope
xor
scas
cwtl
test
adcb
lahf
adc
add
push
xor
shll
les
inc
mov
movsl
xchg
inc
lcall
lcall
xor
sbb
outsb
fwait
ror
push
ror
cmp
arpl
shl
shr
mov
and
ljmp
add
cmp
outsl
scas
fdivrs
push
cmc
adc
orps
and
pop
and
mov
pop
aaa
mov
sbb
test
jae
pop
pop
movsb
jmp
jnp
inc
inc
and
cli
sbb
je
cmp
nop
adc
push
lods
mov
or
dec
gs
sub
ss
pusha
pop
mov
insb
xor
out
sbb
and
adc
adc
outsl
cmpsb
popa
pop
test
pusha
jl
lcall
in
popf
xchg
jp
xchg
xor
lcall
jg
mov
push
les
pop
pusha
jecxz
add
icebp
das
jno
add
cmp
jbe
shl
subb
out
mov
sbb
inc
push
or
std
push
mov
in
xor
jle
sbb
inc
mov
mov
mov
ficompl
movq
ljmp
mov
into
cmp
out
and
cli
fwait
cmp
fwait
or
pop
cwtl
shlb
add
jns
xor
jle
push
js
into
push
shrb
cmpsl
pop
push
fimuls
loope
out
sub
pop
cmp
iret
mov
or
jmp
loope
cli
rcrl
add
clc
into
mov
jp
sbb
shl
cwtl
sub
test
int
sbb
cli
out
push
aas
xchg
mov
sbb
add
dec
in
lods
aaa
int3
loopne
dec
and
jo
movsl
mov
push
pop
lods
push
scas
and
pop
imul
sub
or
add
mov
xor
pop
rcr
bt
shrb
arpl
lock
lahf
std
sbb
mov
push
movsl
cmpb
xor
sbb
sbb
movsl
call
loop
push
jno
lock
pop
clc
adc
jmp
push
test
adc
xchg
bound
xor
scas
push
arpl
lods
test
in
adc
ss
add
out
movsl
nop
pop
add
fnstcw
push
push
fs
fs
adc
mov
add
pusha
enter
subl
int3
in
xlat
xchg
push
and
adc
mov
jg
add
lret
or
push
add
xor
jae
or
and
mov
mov
push
jge
into
fbld
cwtl
incl
xchg
and
stos
addr16
mov
shlb
test
xor
mov
xchg
jmp
sub
mov
pop
and
les
add
dec
dec
mov
lods
insb
push
cmp
jns
es
aam
loopne
inc
gs
or
mov
packsswb
dec
mov
xchg
mov
jne
es
mov
lret
mov
sub
daa
or
inc
mov
repz
bound
ljmp
push
std
cmpsb
mov
test
movsl
mov
and
in
jb
icebp
pop
jle
nop
test
movsb
push
cmpb
xchg
jg
gs
sub
ljmp
sbb
sub
lret
test
jno
orb
icebp
leave
dec
jg
lods
lcall
mov
loope
xor
cli
mov
jae
pop
push
pushf
and
in
xlat
sbb
inc
xor
js
add
mov
jle
negl
test
mov
ret
mov
mov
das
in
pop
mov
aas
iret
das
xor
cmp
inc
insl
xchg
andl
out
dec
mov
in
cmpb
cmpb
jp
or
addr16
fisubrl
repz
loope
adc
std
xor
inc
lret
cmp
cmp
push
cmpsl
jns
dec
cli
std
mov
add
cli
pop
test
insl
roll
cld
aad
dec
lock
xchg
sbb
push
dec
xor
je
mov
pop
aas
jle
lods
scas
push
in
xchg
cltd
lret
pop
mov
rclb
and
out
jae
mov
lea
cmp
lds
lods
adc
jnp
movsb
add
imul
pop
daa
outsb
xor
sti
sti
lahf
ja
sub
pop
inc
imul
stc
inc
stos
aas
bound
mov
fldl
outsl
jmp
add
cmpsb
aam
and
xchg
scas
stos
xor
inc
sub
xchg
shlb
pop
dec
mov
and
mov
inc
add
clc
dec
mov
dec
jecxz
mov
jae
mov
cmp
cmc
out
push
lret
outsl
movsb
jecxz
fwait
or
pop
loop
js
mov
pop
jl
adc
mov
dec
cmpsl
pop
loope
shll
jno
je
pop
movsb
fistl
mov
dec
filds
stos
inc
int
fs
ja
imull
pop
pop
popf
add
push
mov
nop
js
xchg
dec
pop
clc
jmp
aas
ja
cs
xchg
jb
jae
in
mov
pusha
pushf
push
inc
fidivrs
sahf
jl
inc
jg
idivb
loopne
fnstcw
and
mov
adc
jo
filds
test
mov
adc
or
arpl
into
int3
inc
xchg
andl
ja
insb
fnstsw
push
movnti
lds
sbb
cmp
lds
ja
sbb
add
dec
ja
xchg
jmp
rcll
sub
mov
mov
mov
into
icebp
outsb
push
or
mov
mov
jge
insb
movsb
and
push
add
pop
loop
sti
jns
int
insb
ja
add
cwtl
push
mov
mov
data16
stos
pop
cltd
stos
xor
outsb
sub
or
nop
in
pop
fwait
test
mov
inc
movsb
xchg
daa
fldt
sub
loop
cmp
les
lods
in
test
stos
sbb
bound
cmp
xchg
fsts
cmp
leave
jno
or
fs
mov
push
jb
ja
imul
pusha
sub
clc
dec
lock
inc
test
add
mov
js
fdivrl
pop
xchg
rorb
test
pop
xchg
pop
pop
sbb
dec
pop
in
jg
xchg
lret
pop
imul
jg
mov
xchg
adc
adc
imul
xchg
push
ss
shll
xchg
lahf
dec
mov
mov
hlt
push
mov
cld
mov
cmp
cmp
scas
sub
mov
sbb
outsb
pop
and
shrl
adc
icebp
inc
and
push
cltd
loopne
push
and
outsb
sub
dec
aad
int3
rcr
lock
fwait
push
addr16
adc
repnz
notl
jg
lahf
add
loope
dec
imul
dec
pop
in
mov
inc
pop
lock
dec
sub
adc
and
arpl
xor
cmp
xchg
imul
out
xchg
lock
xchg
cltd
mov
inc
xor
lret
pushf
popf
lret
sub
hlt
xchg
inc
lcall
adc
adc
cmp
inc
xchg
pop
jnp
sub
adc
imul
dec
mov
bound
or
out
xchg
push
adc
jo
enter
pusha
lds
xchg
jmp
out
scas
cld
outsl
dec
mov
stc
pushf
insl
shl
test
add
imul
test
popf
add
in
fistps
and
cs
sub
mov
mull
ror
mov
aam
test
filds
mov
jne
mov
pop
push
xchg
mull
xor
xlat
lds
fwait
les
or
jp
std
gs
mov
cmp
add
add
lods
jg
mov
mov
mov
repnz
or
and
cld
or
dec
push
pop
ss
scas
xchg
sbb
mull
add
mov
repz
xchg
xorl
loop
xor
sbb
sub
xchg
mov
cmp
fildll
mov
pop
jle
ss
shrb
test
push
mov
lods
in
adc
or
subb
cmp
pop
dec
cmp
mov
mov
pop
daa
int
sub
das
in
scas
aas
dec
shr
movsl
iret
jecxz
push
es
pop
add
rcrl
pop
mov
xor
sub
dec
xor
lea
add
jle
int3
push
xchg
loop
out
movsb
hlt
clc
je
stos
jo
lods
pop
mov
bound
dec
pop
mov
loopne
jnp
or
sub
loopne
popf
test
sbb
fadd
xlat
and
jl
pop
xchg
inc
roll
add
cmc
sbb
xchg
outsl
xchg
inc
jns
gs
fwait
nop
push
dec
fsubl
rcl
cs
dec
mov
sbb
bound
repz
rorl
inc
sti
stc
shrl
xchg
test
dec
pop
cmpb
fcomp
inc
hlt
test
ljmp
sbbl
adc
push
aad
dec
push
pop
cli
je
scas
push
push
dec
imul
int
or
xchg
jge
ja
pop
push
cli
lea
mov
aad
es
das
int
insl
stc
mov
mov
or
jnp
aas
mov
inc
pop
and
das
xor
filds
mov
hlt
pop
jnp
xor
ds
sub
xchg
push
add
repnz
sbb
push
push
or
jnp
shl
js
inc
pop
pusha
mov
mov
inc
cmpl
mov
cld
xor
sbb
rcl
out
sbb
cltd
loope
jg
mov
or
pop
popa
jb
inc
pop
vucomisd
dec
pop
mov
mov
jecxz
mov
cmpsb
or
aaa
jnp
mov
scas
jbe
sbb
cli
adc
inc
xchg
mov
arpl
fwait
jp
push
adc
mov
dec
jb
or
xchg
pushl
loopne
sahf
iret
aas
inc
push
frstor
jne
mov
cmc
sar
dec
or
das
dec
add
mov
jbe
cwtl
cmpsb
nop
int3
and
jp
daa
lret
mov
push
push
lret
adc
sbb
in
push
push
test
jmp
out
mov
push
jg
leave
jmp
out
pop
pop
addr16
scas
repz
and
int3
add
lds
dec
mov
or
testb
daa
cltd
shl
imul
xor
mov
push
xchg
sbbb
or
adcb
movsb
inc
popf
in
repnz
cmp
add
mov
out
mov
jb
xchg
push
shr
pop
call
aaa
cmc
fcmovu
push
inc
and
xchg
or
jns
leave
imul
shll
mov
mov
cli
sbb
mov
das
cld
jns
sahf
rcrl
sbb
aas
lods
pusha
daa
xchg
loopne
sbb
sub
mov
pop
mov
in
or
dec
out
lds
xchg
enter
sarl
jo
mov
rcr
or
jns
jns
push
iret
ret
jp
inc
movsl
or
pusha
imul
mov
add
insb
cmp
add
mov
cmc
dec
dec
mov
jnp
into
sbb
cmp
dec
cmp
cli
mov
cmp
data16
clc
sub
cli
xchg
jno
jge
fcoml
outsb
inc
inc
lahf
xchg
xchg
add
loope
scas
fmull
fdivs
or
clc
cwtl
movsl
ret
stos
aad
pop
rclb
mov
dec
mov
es
or
mov
out
sub
rcl
das
int3
dec
aas
outsl
pop
adc
sbbl
mov
sub
icebp
dec
dec
cmpsb
adc
jo
icebp
cmp
mov
push
nop
push
or
add
fildl
pop
mov
adc
movb
jns
mov
mov
shl
rolb
fstpl
dec
test
outsb
push
mov
and
ror
rcrl
mov
xchg
xor
inc
clc
lods
icebp
mov
xchg
and
adc
scas
push
scas
addr16
outsb
pop
hlt
mov
sub
in
inc
dec
sub
sub
cmp
das
sbb
int
push
pop
test
xchg
push
sbb
arpl
xor
loope
or
mov
outsl
push
icebp
dec
clc
jno
mov
adc
gs
inc
mov
inc
std
outsb
lret
pop
mov
lcall
ja
incb
into
call
testb
sbb
out
pop
mov
js
inc
scas
mov
cmp
sbb
adc
sti
pop
adc
mov
xor
pop
mov
mov
dec
pop
add
and
and
ja
xlat
bound
inc
xchg
fwait
pop
add
sbb
dec
push
adc
jo
xorl
xor
dec
sbb
movsb
inc
dec
push
and
xor
dec
mov
scas
stos
pop
inc
lds
or
xchg
int
call
mov
cwtd
aam
cwtl
popf
xchg
lcall
xor
jns,pn
xlat
cmp
imul
subl
insw
adc
pushf
xchg
rsqrtps
cltd
insl
scas
aad
xor
jo
sar
and
pushf
cld
sbb
cmpsl
mov
adc
xchg
into
mov
leave
push
rolb
pop
inc
popf
sub
jg
inc
pop
or
stos
hlt
mov
inc
push
idiv
and
leave
dec
xchg
push
sub
pop
push
and
mov
sbb
inc
fcomi
fwait
inc
fs
icebp
inc
add
mov
xchg
and
ds
jne
and
enter
and
std
dec
dec
ret
lret
cmp
leave
scas
lret
add
sbb
pop
mov
cltd
cmpsl
loopne
and
push
imul
inc
les
lret
push
and
lahf
ljmp
out
scas
in
mov
dec
js
cmp
push
pop
je
jmp
xor
xorb
adc
arpl
ljmp
inc
cmp
leave
xchg
insb
scas
xor
cmp
sbb
mov
mov
xchg
dec
fiadds
jno
mov
mov
push
cli
mov
inc
int
fwait
movsb
and
or
cltd
jno
mov
adc
push
pushl
jg
shlb
test
repnz
dec
adc
and
ss
add
scas
mov
rclb
add
sub
bound
inc
movsb
sub
shll
enter
repz
xor
mov
and
das
xor
push
adc
mov
pop
inc
out
daa
pop
cmp
cmpb
aas
and
repnz
cmpl
in
jle
mov
jae
jge
inc
adc
sub
shr
adc
push
jge
sbb
pop
pop
out
inc
jns
jp
adc
sbb
dec
cmp
loopne
test
seto
sbbb
js
inc
movsl
mov
inc
movsl
mov
xor
cmpl
out
sub
mov
dec
or
pop
mov
mov
outsb
rorb
jne
mov
push
loope
std
push
cmp
pop
sub
jecxz
filds
and
daa
icebp
repz
jg
mov
test
dec
loopne
out
xchg
lret
lods
repnz
lret
add
mov
and
jne
sub
cltd
mov
test
sbb
fdivrl
outsb
cltd
fidivrs
xor
mov
gs
mov
jb
adc
mov
fiadds
daa
ja
inc
sub
xchg
inc
xchg
pop
out
push
stos
or
pop
loope
ret
or
imul
inc
aam
mov
cli
repz
mov
sub
iret
imulb
aas
or
cmc
jp
fs
mov
idivl
popw
push
sub
orl
cmpsb
sub
repnz
xchg
in
std
notl
ret
xchg
repnz
ljmp
test
negb
movsb
jle
jle
lods
arpl
cmc
gs
mov
mov
add
arpl
frstor
sbb
leave
dec
cmp
xor
mov
jns
sub
or
mov
or
cmp
imul
sub
pop
cmp
jbe
push
int3
dec
pop
aaa
adc
ss
cs
out
or
dec
movsl
and
inc
mov
cmpsb
mov
pop
adc
test
out
mov
das
jne
fwait
jle
or
movsl
in
out
cmp
cmpsl
xor
pop
jle
xchg
ret
imul
mov
ret
add
push
xor
jae
addr16
js
hlt
inc
not
sbb
loope
rcrl
popf
movsb
xor
mov
cs
add
xor
mov
loop
jno
dec
or
or
push
sarl
scas
std
shl
ret
sbb
cs
test
out
pop
bound
dec
mov
rcl
in
imul
das
scas
enter
xchg
lcall
cli
add
dec
pusha
jnp
adc
cmp
cs
fstl
insl
cmp
mov
outsl
in
mov
scas
insl
cli
add
pop
push
jo
sbb
and
mov
push
dec
jecxz
sbb
push
push
fsubl
push
inc
sub
ficompl
push
xchg
pop
pop
ljmp
adc
imul
cwtl
dec
ret
xor
inc
mov
jg
les
push
test
lret
mov
gs
iret
lret
mov
cltd
mov
jbe
or
test
pop
fcomps
lock
add
aaa
push
add
sbb
aas
mov
mov
int3
mov
shlb
dec
mov
xchg
xchg
cli
mov
cmp
xchg
adc
nop
je
lret
or
jbe
sbb
inc
mov
outsb
and
test
cmp
sub
test
dec
in
xchg
insb
mov
mov
cmp
inc
xchg
movsl
std
fsubrl
or
cmc
aad
mov
cmpsb
xchg
mov
sub
fisubrs
cltd
sahf
pop
les
jns
inc
jp
lahf
mov
inc
out
jo
outsb
out
sub
and
aas
sub
dec
pop
and
divl
insl
cmp
insl
push
in
jae
rolb
xchg
clc
pop
pop
push
jb
jae
loope
push
sbb
lea
mov
dec
outsb
mov
clc
jl
psraw
dec
cmp
jl
test
mov
adc
mov
imul
sub
cmp
gs
mov
repz
orl
xor
dec
mov
cmp
push
dec
jle
outsl
icebp
rolb
pushf
out
mov
gs
xchg
insl
and
jmp
fsubs
mov
mov
or
loop
daa
sub
sbb
mov
cmp
dec
mov
jg
inc
or
bound
adc
lret
movsb
sti
mov
sbb
mov
mov
pop
out
pushf
scas
mov
pop
idivl
pop
ja
lret
movl
add
xchg
data16
push
mov
ss
mov
repnz
repz
mov
mov
push
lods
add
fnstcw
xchg
push
fstpt
repz
fiaddl
fisttpll
dec
pusha
fcoms
dec
jns
pop
iret
inc
outsl
sbb
repnz
movsl
adc
addr16
std
mov
mov
push
fsts
leave
icebp
sbb
and
push
fcoms
jns
pop
mov
lods
pop
in
and
mov
pop
icebp
pop
in
hlt
push
or
rdpmc
insb
out
dec
and
ss
cwtl
jnp
outsl
dec
arpl
mov
pop
cld
push
lock
push
xchg
or
xchg
or
pop
pushf
sub
cltd
adc
nop
pop
jg
xchg
fldl
lret
test
mov
xchg
loope
jp
test
scas
mov
clc
push
in
loopne
shll
sbb
jne
cmp
and
pop
cltd
mov
je
fisubrs
xchg
pop
popf
mov
or
cmpsl
add
ds
popf
mov
cmp
pop
mov
sbb
sti
ret
adc
adc
sbb
fimuls
pop
inc
test
paddusb
and
jno
xchg
inc
pop
scas
shlb
jb
faddp
popa
shrl
pusha
cmpsl
mov
mov
cmp
mov
sub
mov
sbb
cmp
fcmove
jge
xor
dec
test
in
out
dec
push
repz
flds
push
and
mov
bnd
aam
aaa
in
out
xchg
push
xor
out
adc
push
bound
and
jb
cld
and
push
mov
xchg
or
xor
popa
sub
in
fildll
xchg
leave
sub
orl
or
getsec
xchg
xor
xchg
decl
subb
xor
out
inc
mov
sti
cld
fcmovnu
out
and
test
push
in
std
sti
adc
lahf
jg
in
movb
nop
mov
sub
lods
movsb
pop
dec
dec
mov
mov
and
int3
or
or
outsl
sub
pop
fcompl
shl
or
xor
xchg
adc
add
inc
lahf
out
lret
mov
call
aam
xchg
add
or
cmp
stos
fidivrl
and
xchg
rorb
in
mov
fidivl
dec
lret
lret
fimull
shll
and
dec
cmp
sub
in
adc
into
addr16
dec
lcall
or
cmpps
roll
push
loope
icebp
jg
out
mov
sbb
push
jle
pop
sahf
fcompl
or
jb
lret
dec
inc
dec
ficoml
mov
movl
jg
pushf
out
push
lea
adc
cs
push
mov
mov
sbb
cmp
ret
adc
mov
loop
add
push
jge
pop
adc
sub
xchg
lods
mov
roll
imul
imul
push
repz
rclb
pop
ficoms
xor
ret
inc
sub
iret
fcoms
sbb
arpl
movsb
pop
pusha
mov
mov
cmc
pop
inc
loopne
arpl
pop
dec
push
push
data16
inc
push
cmpsl
fdivl
and
inc
add
inc
jo
ljmp
pop
inc
add
cmovp
mov
leave
jnp
inc
scas
adc
push
mov
stos
mov
mov
mov
push
sti
in
outsb
int3
adc
fisttpl
fs
inc
xchg
cmp
mov
addb
gs
push
sbb
lret
loope
imulb
adcb
dec
xchg
rcl
adc
jg
jne
cmp
jae
xor
test
pop
mov
iret
lcall
popa
nop
imul
mov
mov
cmp
pop
pop
pop
shrl
dec
push
int
xor
xor
and
std
inc
dec
pop
cmp
imul
loop
xchg
jbe
rol
mov
pop
adc
gs
lahf
rcl
icebp
add
nop
sbbb
aam
inc
inc
jne
jle
into
xlat
insl
adc
jno
test
pop
mov
jnp
insb
test
insl
pushf
jecxz
daa
stos
and
sub
inc
pusha
adc
inc
jmp
or
imul
push
mov
ret
sub
push
loop
cwtl
sbb
scas
out
in
outsb
push
icebp
xchg
mov
aam
inc
movsl
insl
test
mov
xchg
push
pop
or
jnp
xchg
test
iret
shlb
gs
pop
jnp
addb
scas
fsubr
adc
xor
aas
sub
dec
add
dec
add
or
das
pop
aas
movb
daa
outsl
push
and
fs
inc
mov
cwtl
loop
add
movsb
or
pop
shll
inc
clc
xlat
pop
push
sub
stc
and
stos
cmc
test
adc
scas
mov
fwait
lods
frstor
mov
inc
xor
fcompl
stc
scas
jne
xchg
inc
jp
clc
icebp
or
inc
jo
jbe
es
add
sub
add
mov
in
call
or
jl
cmp
lret
xor
fwait
jne
fimull
jg
or
loop
lds
imul
pop
fldt
cmp
jo
fdivr
in
mov
clc
or
subb
sti
add
stos
cwtl
mov
or
push
push
add
sbb
pop
sti
xchg
pop
mov
inc
shlb
repnz
or
into
and
in
incb
push
fistps
pop
andl
loopne
push
xchg
fstps
mov
mov
aad
push
popf
addr16
mov
mov
add
in
dec
push
nop
inc
mov
pop
dec
in
scas
pop
cmpsb
sbb
sub
ljmp
mov
in
test
outsb
pop
sbb
jmp
sbb
movsl
jo
inc
sub
jo
aad
or
cmpsb
shl
leave
in
sbb
test
fdecstp
pop
sbb
xchg
push
dec
call
lods
cmp
cmp
pop
push
das
or
mov
cwtl
xchg
mov
sub
hlt
jne
sahf
sbb
rol
test
imul
fs
add
mov
cmp
push
inc
movsl
jmp
lret
cmp
cmpb
loope
stos
dec
or
inc
dec
fimull
xchg
push
lahf
cld
xor
xor
ficoml
adc
xor
jno
lds
dec
sbb
jno
pop
and
mov
dec
insl
xchg
fsubrl
imul
aaa
add
fdivrl
outsb
mov
dec
xor
xor
pusha
xchg
pop
dec
dec
into
jp
dec
or
scas
addr16
iret
imul
lret
pop
int
aas
hlt
es
xchg
xchg
cli
adc
repnz
cwtl
sbb
lds
mov
int3
repz
loop
xchg
fidivrs
mov
hlt
in
jle
xchg
std
xor
xchg
lahf
sti
cltd
movsb
cs
mov
jno
std
adc
cmc
inc
xor
mov
call
pop
sbb
push
add
andl
and
into
ljmp
ds
adc
sub
orb
js
lret
movb
push
jnp
mov
mov
jne
sub
mov
imul
cmpsb
mov
mov
leave
xchg
jl
push
push
test
mov
xchg
sub
or
pushf
das
inc
nop
lret
fsubrs
out
mov
inc
adc
aad
dec
clc
jg,pt
mov
add
inc
pop
adc
or
xor
sub
jb
std
popf
dec
xchg
outsl
je
lods
xor
jecxz
pop
push
cmc
aad
xor
in
pop
insl
mov
cli
decl
gs
int3
negl
sub
fstps
test
sbb
insl
or
ds
mov
xchg
xor
jp
fdivr
push
xchg
sub
push
lea
adc
mov
cmc
jb
sahf
and
or
push
xor
movsl
fnstenv
xchg
pop
insb
es
in
inc
stos
aaa
or
iret
sbb
mov
mov
mov
repz
cmpsl
sti
scas
xlat
or
lds
in
mov
scas
mov
jg
add
add
mov
ja
cltd
xchg
leave
scas
and
div
or
cmp
fbstp
mov
shll
push
hlt
mov
dec
add
das
nop
ds
cmpsb
addr16
jns
stos
mov
inc
shlb
divl
sub
push
inc
push
fs
imul
add
inc
mov
fs
add
aam
xchg
scas
add
stos
sbb
in
xor
stc
sub
or
mov
enter
out
bound
push
stc
pop
popa
std
or
mov
cmp
outsl
sbb
inc
and
pop
sub
add
inc
iret
xor
movsb
jno
xchg
js
aam
and
divb
add
push
or
aam
xchg
mov
dec
and
pop
sbb
mov
cmp
and
fiaddl
mov
inc
out
cmpsl
inc
mov
faddl
fcompl
jo
jno
push
adcl
div
mov
xor
sti
pop
cmp
stc
out
in
mov
ds
aam
inc
popf
outsl
pop
mov
dec
jbe
dec
je
movl
fadds
sub
xchg
rcrb
lock
jmp
pop
push
pop
xchg
push
mov
in
inc
sub
push
pop
in
fdivl
pusha
mov
ds
data16
ficoml
dec
xchg
repnz
lea
push
stc
stc
add
or
and
mov
sub
xchg
push
insl
push
sbb
loop
push
fbstp
pop
into
jge
xchg
push
loop
mov
data16
inc
fsts
pop
pop
hlt
mov
outsl
in
inc
arpl
or
mov
add
cli
push
mov
push
repnz
lea
dec
in
outsl
je
ja
hlt
into
push
fidivrs
jmp
popf
inc
cwtl
jecxz
add
cmp
mov
jecxz
pop
gs
fcmovnu
push
mov
aaa
xor
push
adc
mov
call
addr16
xchg
js
inc
or
or
shrl
dec
cli
pop
xchg
aas
test
daa
inc
ja
and
imul
inc
lret
mov
js
fldcw
movsl
mov
or
sub
lods
insb
daa
cmp
fdivl
mov
fisubrs
sbb
and
mov
lock
stos
jno
add
fbstp
mov
aas
sub
or
push
jo
inc
loopne
dec
repnz
or
ret
mov
iret
and
xor
inc
dec
mov
xor
pop
bound
int3
xchg
mov
jbe
pop
out
fdivrl
inc
in
sahf
dec
fistps
or
sbb
popl
iret
pop
jl
popl
push
psubsb
mov
push
mov
das
dec
test
sarl
rcrb
es
aam
in
shrb
mov
xchg
inc
xchg
push
mov
jle
or
pop
cli
cs
pop
nop
mov
or
int
nop
lcall
cmc
mov
into
push
outsb
cld
xor
out
std
cmpsl
fs
shlb
mov
stc
std
notl
cmpsb
rcrl
xchg
out
and
loope
xchg
push
cmp
xor
sub
leave
dec
popf
test
andl
dec
push
inc
stos
pushf
push
sub
or
js
mov
lods
in
pop
dec
pop
mulb
push
cmp
and
mov
jne
aas
sbb
movsb
ljmp
jp
in
ljmp
repz
inc
imul
and
fcompl
shll
push
loope
gs
adc
cmc
jns
cmc
imul
pop
ljmp
fidivs
push
popa
int3
add
mov
inc
jl
push
je
cmp
leave
in
dec
jo
dec
push
cs
or
xchg
aam
lds
js
jae
or
mov
xchg
ret
mov
nop
jge
sub
pop
ret
pop
mov
sbb
jecxz
mov
lock
stc
sbb
pop
or
pop
sub
inc
test
fmuls
add
xchg
inc
shr
sub
cmp
fistl
fnstenv
inc
repz
dec
push
lret
outsl
sbb
scas
cmpsb
ja
or
mov
lock
mov
out
iret
faddl
add
and
push
cwtl
ja
outsb
xchg
bound
loop
xchg
lahf
std
or
outsl
add
pusha
clc
dec
aaa
lods
fdiv
pop
sbb
sarl
repz
jle
mov
dec
fs
pushf
mov
mov
cmp
or
pop
xor
mov
mov
xchg
into
scas
cmp
xlat
jb
push
mov
add
ss
sub
mov
mov
out
movzwl
mov
push
push
lock
add
sbb
mov
out
movsl
in
pop
repz
or
jbe
pop
sub
or
mov
idivb
dec
jno,pt
sbb
or
loop
push
jl
cmpsb
ret
inc
cld
inc
dec
add
or
shll
aam
sub
jg
or
adc
xchg
rorl
mov
xchg
mov
je
fs
cld
and
mov
sarl
inc
ret
stos
xor
lock
mov
add
mov
mov
lret
out
jnp
push
out
jg
jns
loope
mov
repz
jg
shll
lret
adc
ret
xchg
in
sti
pop
pop
or
mov
cmp
cwtl
sti
add
push
lods
addr16
clc
mov
jecxz
mov
test
adc
fdivr
fwait
xchg
sub
sub
sub
in
movl
mov
scas
jge
pushf
popa
popf
lret
enter
jnp
in
pop
push
jbe
in
fcompl
pop
inc
dec
or
xorb
lret
out
adc
mov
lahf
inc
popa
pop
and
mov
jmp
push
inc
pop
sub
lret
inc
inc
mov
sub
shrb
sarl
or
or
mov
mov
rcrl
mov
sub
push
insb
test
mov
mov
insl
inc
sti
sbb
mov
cli
dec
mov
fisttps
imull
imul
xor
add
fnsave
fldenv
dec
jg
popf
aam
fimull
push
dec
stos
xchg
add
mov
movl
mov
xor
fisubrl
cli
movsb
mov
dec
ret
addb
and
push
insl
xabort
pavgb
pop
scas
roll
cli
movsb
enter
sti
push
pop
inc
cmpsl
lods
pop
pop
rcr
lcall
outsb
sub
out
out
fwait
and
xor
pushf
das
ja
pop
dec
stc
scas
notb
jne
push
and
mov
jne
jmp
loop
fmuls
fwait
lds
es
fxch
lock
xchg
and
xchg
adc
outsl
or
call
lahf
jns
mov
push
pop
sarb
test
xchg
aas
inc
cmp
int
popf
jmp
or
jbe
or
mov
sbb
add
ds
fsub
pop
pop
lret
iret
pop
in
add
jno
mov
jl
or
sbb
and
mov
adc
cmp
icebp
es
sub
shr
les
test
xor
xor
jae
add
xlat
dec
pop
lods
bound
mov
sahf
jnp
test
pop
mov
push
adc
sub
test
mov
dec
mov
fists
negb
add
mov
icebp
xor
pop
and
int
pop
sub
pusha
cld
jbe
push
outsb
je
adc
dec
in
sub
dec
pushf
ret
jns
ss
sbb
add
call
inc
mulb
cmp
mov
cmp
mov
dec
mov
mov
ret
lods
xor
and
inc
scas
scas
xchg
dec
loope
and
jae
out
lahf
sub
dec
xchg
adc
scas
add
pop
mov
call
jbe
mov
jbe
push
call
inc
adc
push
pop
inc
mov
lods
jo
stos
es
xchg
xchg
push
sti
aad
push
rcrb
sbbb
out
mov
in
and
mov
jle
jp
enter
mov
scas
orl
mov
jmp
std
xor
pop
lea
sub
test
leave
subb
pop
mull
xor
ror
lea
rorb
mov
cltd
lcall
imul
cmp
in
fs
pusha
mov
xchg
jmp
test
dec
adc
cmpb
cld
scas
xor
push
xor
inc
out
mov
jl
push
inc
pop
repnz
insl
ja
cmpsl
mov
insb
mov
bswap
pushf
mov
jg
loop
jecxz
insl
jb
mov
xchg
imul
cmpsb
pop
les
je
pop
mov
mov
mov
fcmovb
mov
jb
sarb
mov
dec
push
xchg
aam
pop
sbb
fwait
add
mov
ss
xor
idivb
push
or
enter
dec
loope
movsb
rorb
pop
out
ja
call
cmc
in
data16
aas
inc
jge
dec
and
lea
cmpl
dec
dec
xchg
add
sbb
lea
jne
pop
jmp
sbb
out
arpl
addl
lret
es
ss
sub
jne
lret
inc
jge
mov
lret
xlat
add
or
popf
or
cli
cld
ljmp
adc
jne
jecxz
aas
inc
inc
mov
insl
shrl
push
pushf
jo
add
push
fs
xchg
pop
dec
inc
and
inc
subb
in
loope
jo
push
aas
es
rcrl
pushf
cltd
adc
outsl
leave
aaa
icebp
inc
pop
xchg
xlat
andps
xor
cmpsb
mov
addr16
push
out
cmpl
pop
andnps
jge
aam
mov
mov
xchg
call
jp
xor
mov
data16
jle
addr16
jmp
add
je
insb
xor
in
jne
arpl
inc
push
test
or
cltd
fsub
and
pop
outsl
mov
cmp
arpl
jo
loopne
movsl
mov
scas
dec
mov
lret
push
fbstp
cmp
fdivrs
loop
sub
rorl
pop
aam
je
pop
xchg
adc
dec
andl
inc
outsb
cmp
mov
sub
cld
jne
sub
xchg
sub
sbb
sbb
and
dec
ret
outsl
mov
addr16
jmp
push
js
pop
jl
loop
xor
cmp
and
pop
movsb
stc
loope
xchg
jmp
pusha
xchg
insb
inc
mov
inc
in
push
out
hlt
jg
xchg
mov
push
mov
fstpt
mov
mov
scas
xor
movsl
mov
ficoms
fs
jnp
out
fucomi
mov
sub
xchg
fcomip
adc
addl
push
out
xchg
lea
outsl
adc
cmc
popf
mov
or
mov
repnz
outsb
js
jl
pop
inc
inc
and
lret
push
outsb
inc
int3
addr16
in
les
pushf
shr
clc
mov
mov
int3
sbb
sbb
fiadds
xor
jmp
arpl
fistps
push
pop
jno
adc
mull
dec
sbb
lods
push
push
pop
loope
pop
fs
aaa
xlat
pop
shll
xchg
xor
dec
mov
jbe
jnp
xchg
int
pop
adc
and
jne
loope
ret
into
popa
lock
and
sub
cmp
dec
jb
inc
test
jmp
fwait
jb
fdivl
es
dec
sbb
push
dec
xor
testb
pop
push
rcll
in
jp
push
cld
dec
pushf
mov
sub
roll
mov
ljmp
stos
bound
pop
pop
loope
scas
ret
ds
push
sbb
adc
mov
pop
inc
lods
cmc
inc
pop
jecxz
fcmove
xor
test
push
fmull
std
ja
mov
inc
movzwl
addb
push
mov
add
xchg
and
cmp
shll
push
jo
mov
fwait
repnz
add
vmread
pop
cmp
imul
ror
sbb
inc
movsb
jae
jns
add
movsl
adc
stc
lods
mov
jns
lahf
dec
add
fstpl
fisubl
fcmovu
fistpl
je
test
rep
xchg
test
sub
shlb
loopne
jb
movsb
pop
or
or
cld
notb
or
push
loope
std
inc
mov
mov
dec
adc
jge
call
inc
inc
jl
mov
popa
mov
lret
sar
add
stos
sub
imul
xchg
push
movsb
pop
cmp
xor
test
jne
mov
les
pop
jns
mov
std
sti
mov
or
xchg
jg
and
lahf
sti
lret
push
icebp
sub
push
shlb
xor
or
push
inc
sbb
jne
pop
and
ds
pop
xor
repz
fdivrl
cwtl
mov
loopne
data16
push
mov
cs
xor
mov
sbb
scas
popa
fs
jge
rcll
nop
dec
mov
jmp
sbb
mov
xchg
jmp
adc
cmpsb
adc
pushf
subb
aas
jge
fcomps
or
inc
push
xchg
fisttpll
ret
pop
cmc
repnz
das
idivb
cmp
xor
push
outsb
ret
ja
cmpsl
repz
mov
repnz
or
adc
pop
xchg
or
cli
sbb
loop
or
adc
xchg
not
sbb
testl
das
add
sti
popf
inc
cmp
clc
into
xor
xor
insl
inc
xchg
jge
inc
mov
mov
mov
lahf
jmp
jns
cld
insl
ret
shlb
jg
insb
dec
add
or
pop
dec
repz
xchg
mov
pop
xchg
adc
imull
jg
fildll
push
fimull
jle
xchg
das
test
pop
lahf
pop
js
or
jl
lea
mov
xchg
xor
ljmp
jne
fs
jg
mov
mov
lahf
inc
sub
dec
sub
fists
xor
add
xchg
or
sbb
loopne
movsl
imul
lods
xchg
pop
call
or
jl
stc
pop
and
sbb
sarb
pop
jo
pop
pop
pop
adc
je
lock
rcl
inc
inc
mov
mov
inc
cmp
dec
loope
jno
xor
in
add
push
jge
es
jbe
jae
test
inc
out
test
es
lcall
bound
dec
sub
cmc
jl
cmp
imul
movsb
mov
icebp
call
pop
vpsubq
lds
and
outsb
cmp
push
xchg
mov
aad
mov
test
cmp
adc
adc
xor
jmp
dec
enter
jle
xor
jecxz
mov
cmpl
ret
imulb
push
xchg
lock
xchg
mov
call
pop
inc
xor
pop
pop
jecxz
jbe
repz
cmp
pop
rcrb
cmp
or
xchg
cld
sub
or
nop
pop
add
ss
das
add
stc
jb
dec
mov
std
fsubr
data16
pop
pop
sbbb
push
or
test
adc
sub
fucom
mov
mul
mov
cmpsb
cli
cmp
ja
cld
iret
stos
incl
imul
xor
inc
fsubrs
data16
xor
jl
rclb
add
cld
adc
sbb
leave
mov
negl
mov
repnz
cmp
shll
adc
rclb
test
nop
popf
sbb
push
and
sub
jl
jbe
xchg
mov
pop
ja
imul
mov
mov
mov
popa
int3
enter
xor
adcl
cmp
add
add
int3
mov
shl
fisttpll
outsb
daa
loop
fucomip
xchg
adc
rcll
dec
mov
cmp
outsl
inc
dec
stos
pop
lret
or
sar
push
cmp
cltd
ja
add
mov
sbb
sub
push
jmp
xor
cwtl
test
scas
inc
inc
andb
call
adc
fidivrs
xchg
cmp
xor
cwtl
inc
or
roll
push
mov
sbb
push
jb
mov
test
mov
lret
or
xor
add
out
push
and
cmp
and
and
cli
lock
mov
out
notl
push
mov
jmp
lcall
out
in
jmp
or
push
push
cmp
ret
push
mov
popa
into
cltd
add
xlat
sub
adc
dec
add
mov
xchg
shrl
or
jb
nop
xor
mov
pushl
xchg
cmpsl
iret
lahf
loopne
push
out
inc
je
nop
bound
test
das
dec
shrl
dec
add
mov
shll
cmpsl
xor
aam
ja
stc
push
jp
icebp
dec
mov
bound
pop
adc
daa
pop
adc
ficoms
out
mov
xlat
sbb
xor
xlat
ficomps
xchg
data16
pop
bound
add
jb
mov
out
data16
xor
icebp
cmp
movsb
mov
in
adc
sbb
inc
mov
fwait
sub
ss
nop
jl
mov
mov
mov
ret
test
mov
push
imul
ljmp
dec
xchg
testb
hlt
xor
outsl
test
xor
movsb
mov
movsb
jbe
adc
icebp
or
adc
jle
pop
imul
add
js
addl
xchg
mov
xor
xor
cmc
sbb
cli
sub
mov
mov
pop
pop
outsl
movsl
clc
stos
sti
cwtl
push
inc
test
scas
ret
xchg
enter
sub
jp
lock
test
xchg
push
inc
xor
aam
subb
and
mov
pop
mov
jecxz
cmpsl
sub
mov
dec
sahf
hlt
sub
aas
fidivrl
mov
cld
cs
mov
push
jp
nopl
movsl
xchg
pop
outsb
add
push
inc
cmp
out
fisttps
imulb
or
imul
es
pushw
outsb
leave
cld
gs
and
sub
cwtl
gs
jmp
pop
push
push
rcll
jne
mov
repnz
jl
xor
cld
mov
arpl
std
push
or
sbb
pop
aad
sbb
filds
mov
pushf
push
js
out
and
test
sub
pushf
les
jns
ret
out
arpl
xor
inc
add
xor
frstor
inc
lods
add
mov
in
popf
cmp
sub
push
jnp
mov
inc
or
jge
in
insb
stos
xchg
sub
mov
arpl
dec
push
jns
rcl
cmp
pop
push
lcall
push
cmp
push
pop
adc
push
mov
sahf
je
adc
pushf
mulb
xor
inc
mov
fldcw
sub
sub
jne
daa
stos
loope
inc
or
xchg
stos
lcall
repz
push
mov
dec
and
inc
adcb
or
push
inc
into
add
mov
pop
jnp
cmp
cwtl
lahf
pusha
insb
xlat
inc
sahf
pop
sarl
sub
movsb
push
iret
mov
jb
mov
ss
arpl
jle
jb
in
push
push
fnstenv
int3
jno
std
sbb
mov
xor
lcall
cld
or
inc
incb
int
mov
adc
lcall
jb
xorl
in
mov
lea
push
lock
jbe
jnp
arpl
and
push
mov
int
test
scas
repnz
out
sub
sbb
pop
repz
sti
jb
xchg
xor
out
sub
insb
sub
mov
and
dec
pop
add
rolb
sub
ret
xchg
fiaddl
mov
pop
in
xchg
imul
lcall
das
sti
in
leave
addr16
insb
in
lods
fstl
mov
mov
or
fcompl
mov
adc
xchg
std
stos
fsubs
push
pop
jle
mov
call
fstl
daa
sbb
push
jno
cmp
aas
aam
lcall
and
insb
ret
ret
mov
mov
mov
roll
in
mov
int3
lods
jecxz
fld
adc
dec
inc
xlat
xchg
jbe
std
out
int
int
arpl
xchg
sub
adc
repz
pusha
xor
fucom
sbb
imul
lret
inc
jle
icebp
inc
aas
stos
dec
bound
in
cltd
mov
adc
out
mov
and
cmpsl
cs
mov
insb
inc
adc
ror
fnstenv
ljmp
lret
sarb
fincstp
xchg
test
and
push
xor
mov
jp
rclb
lcall
and
mov
sbb
fcompl
in
aam
lock
mov
jecxz
jecxz
pop
ds
cmp
and
aam
add
shl
lock
stos
mov
and
lods
push
fistps
sbb
jge
int
rorb
cmpsb
cmp
add
and
mov
jle
icebp
ret
or
push
mov
pop
adc
mov
cltd
inc
sarb
and
cwtl
into
mov
mov
dec
shll
jnp
lahf
popa
pop
insl
xchg
adc
or
jge
scas
shlb
stc
cmp
jns
mov
mov
mov
adc
loop
mov
xor
xchg
lret
jb
in
enter
mov
xor
pop
int
movsb
ds
push
pop
rcr
sbb
dec
sbb
movsl
inc
dec
adc
fwait
cltd
inc
and
push
push
sub
data16
adc
jp
insb
sbbb
or
mov
sub
insl
inc
and
dec
bound
mov
fcoms
aad
stos
jmp
testl
cmc
sub
jne
jbe
aad
inc
push
fcoml
icebp
mov
xor
cmp
aas
push
pop
sub
sbb
in
or
xlat
int
and
pop
xchg
xchg
es
adc
das
adc
jae
cs
into
sbb
mov
les
test
add
inc
sbb
sbb
sub
cmp
and
shrb
ja
pop
cmpsl
jne
sub
adc
imul
decl
popf
std
mov
dec
add
arpl
pop
dec
sbb
call
ds
ja
stc
iret
push
sbbb
cwtl
and
aas
cmpsl
sbb
cmpsb
shrb
cmp
adcb
or
lret
js
xor
outsb
and
jnp
jbe
add
push
dec
scas
outsb
xor
dec
or
lcall
dec
mov
xchg
push
xchg
gs
dec
mov
cmpsb
pusha
xor
mov
jp
mov
jno
mov
jge
jmp
jl
push
jb
adc
jno
cmpsl
push
lea
sarl
addl
xchg
sahf
fisubs
jge
xchg
adc
xchg
push
dec
adc
js
stos
push
jae
fxch
imul
xor
mov
xchg
lods
mov
sbb
sbb
jecxz
xchg
stos
nop
ffree
or
inc
and
xchg
out
mov
imul
shrl
xchg
mov
add
fimull
add
and
adc
js
das
ljmp
mov
or
clc
loopne
add
sub
xlat
loopne
push
xchg
xchg
aas
lock
jne
scas
dec
scas
rclb
repz
cmp
jns
jle
cmp
test
orb
add
arpl
aam
cs
repz
pop
and
mov
shrb
insl
or
push
out
mov
out
pop
movl
repz
push
dec
pop
cli
in
mov
cmp
push
cli
mov
fistpll
cmp
jge
arpl
lret
mov
jge
popf
push
dec
cmp
cmp
adc
jle
orl
xor
popa
push
dec
insb
and
call
mov
popf
aaa
call
jns
stos
lahf
pop
dec
and
rcr
inc
inc
jnp
cmp
ret
cmpsb
nop
mov
les
loope
xor
push
mov
pop
outsb
aam
mov
mov
xchg
lds
test
mov
arpl
push
cwtl
mov
xchg
push
dec
dec
loop
jmp
rcrl
enter
into
out
leave
fimuls
xchg
mov
adc
pop
mov
shr
pusha
add
daa
dec
adc
ret
and
mov
out
or
lds
mov
lahf
aaa
push
test
test
jp
ret
insl
scas
mov
clc
xlat
inc
outsl
pop
into
xchg
push
dec
daa
mov
inc
push
xor
out
lahf
mov
push
jge
and
in
sahf
pop
popa
mov
mov
push
fsubrp
into
fnstenv
cs
cmp
and
sub
aas
in
mov
int
subl
int
aaa
out
mov
push
adcl
sub
daa
sub
cwtl
mov
imul
jb
push
sub
test
lods
jmp
mov
ja
ror
mov
cld
aad
sbb
stos
sbb
push
fdiv
dec
cmp
jns
out
std
sub
push
nop
pop
mov
adc
aam
xor
jg
fildl
cmp
cmp
sub
fldcw
jbe
int3
ret
sbb
cld
test
mov
mov
stc
cmpsb
arpl
addb
dec
ja
aad
pushf
mov
jae
in
inc
pop
lea
orb
out
aas
adc
push
push
and
fs
fbld
out
sbb
dec
pusha
loope
cmpl
inc
std
jb
call
sbb
mov
push
xchg
aam
push
inc
xor
and
jae
mov
pop
out
mov
inc
sarb
jmp
shl
jge
dec
mov
inc
pop
dec
cmp
call
sub
add
sti
lret
adc
arpl
adc
insl
imul
ffree
insb
pushf
push
push
in
mov
xor
lcall
mov
rolb
push
mov
xchg
pop
or
mov
jo
incb
jnp
dec
sub
sbb
inc
push
sbb
stos
nop
test
mov
adc
mov
popf
xor
sti
sbb
lods
pop
mov
push
loop
bound
ficoms
gs
ds
push
loopne
mov
or
xchg
adc
inc
out
push
inc
mov
mov
push
push
popa
xlat
sub
leave
adc
inc
out
mov
in
out
cmpsl
inc
addr16
jmp
subb
mov
dec
cmpsl
xchg
sub
cmpsl
cmpb
jl
lea
fcoml
push
test
xchg
xchg
inc
mov
cmp
xor
pop
lea
sub
mov
aaa
sbb
call
mov
xchg
mov
test
pop
xlat
or
pop
add
add
enter
jns
inc
lahf
adc
or
sbb
adc
in
negb
fs
int
cmpsb
paddsw
sbb
jno
xor
or
lock
mov
imul
cmpsl
loopne
adc
rep
scas
pop
inc
pop
ds
shrb
decb
jnp
cld
inc
out
or
pop
inc
lahf
roll
call
loop
push
inc
out
pop
add
xor
loop
mov
insb
xchg
add
daa
movsb
inc
sahf
es
push
push
clc
inc
xchg
ret
rolb
cmp
jbe
mov
in
repz
and
addl
and
mov
outsl
cmp
mov
fildll
mov
pusha
adc
jecxz
iret
xchg
stos
jecxz
arpl
sub
xchg
cmpsb
inc
dec
dec
push
xor
adc
push
sub
stos
es
dec
jo
xchg
ret
loopne
cs
fcomp
sub
hlt
lock
or
sarb
push
push
mov
js
outsl
ds
stos
frstor
dec
rcll
packuswb
gs
jg
mov
cmpsl
lahf
or
xchg
hlt
insb
shr
xchg
mov
jl
insb
inc
sub
ss
sub
call
or
cld
sbbb
jle
push
test
xor
repz
data16
hlt
loope
mov
ret
xchg
xor
inc
stc
in
or
inc
jg
mov
add
and
adc
sub
in
js
fistpll
daa
popa
or
mov
sbb
push
imul
aas
dec
mov
jns
adc
mov
les
push
push
popf
test
push
movsl
iret
imul
pop
xor
lea
mov
jo
xchg
inc
js
mov
jl
sbb
shl
arpl
mov
add
out
out
aaa
lret
or
add
sub
sub
das
movsl
es
cmp
int3
adc
imul
adc
adc
sub
dec
sbb
mov
xchg
ss
adc
or
jle
mov
cmpsb
or
lods
aad
cmpsb
pop
and
lds
mov
xchg
sarb
and
pusha
shll
inc
mov
dec
loop
cmpsl
shrl
mov
lea
repnz
mov
sbb
inc
jbe
dec
jnp
test
nop
jo
in
mov
xchg
xchg
sbb
je
dec
std
test
dec
nop
pop
and
adc
xlat
testl
popa
addr16
mov
pushf
jle
rcrl
ret
mov
cmpsl
fiadds
sbb
jp
loop
adc
mov
and
sub
dec
movsb
call
shl
adc
arpl
sbb
or
cltd
xor
xchg
out
and
mov
in
or
call
in
outsb
cmp
and
int3
pop
and
fstpt
pop
outsb
or
stos
add
jnp
jp
addr16
lahf
gs
pusha
mov
mov
int
sub
scas
scas
out
loop
push
call
jae
fs
cltd
pop
xor
jb
jg
mov
out
fidivs
sub
sbb
xchg
pop
ja
mov
xchg
mov
sub
sbb
faddp
sbb
insb
push
icebp
aad
mov
add
sub
add
movsl
jo
pop
icebp
add
mov
lahf
sub
or
out
out
lcall
stos
mov
rcrb
repnz
testb
lahf
clc
test
jmp
pop
xchg
les
sahf
repnz
pop
xchg
fdivrl
mov
js
test
dec
push
pop
ret
add
enter
idivb
lock
push
scas
popa
fiaddl
test
into
or
mov
subb
xor
lcall
inc
loop
nop
mov
push
outsb
scas
je
std
cmpsl
xor
fistl
jp
aad
xlat
mov
xchg
mov
mov
jo
ds
mov
push
xor
xchg
js
iret
jle
xchg
or
mov
stos
loopne
jl
mov
pusha
shlb
enter
out
in
out
mov
inc
xchg
js
sarb
daa
stos
sarl
fisttps
lret
mov
push
jge
dec
psrad
dec
sub
fisttps
xorb
jb
sub
xchg
cwtl
lret
or
push
xor
ljmp
ljmp
in
xor
fidivrs
push
cmpsb
xchg
in
cmc
cmpl
in
xchg
xor
sub
mov
fs
and
adc
xor
lods
cmp
pushf
loope
mov
cmp
inc
add
data16
push
loopne
xchg
inc
movsb
repnz
cmp
dec
pop
stos
iret
frstor
cmp
dec
and
adc
adc
and
xchg
inc
iret
xchg
push
popf
push
and
dec
popf
popa
ud2
fadd
cwtl
sahf
mov
ja
movsb
fwait
sahf
loope
mov
sub
andl
fistpl
cmp
inc
dec
popf
imul
cmp
dec
pop
fdivrs
inc
xor
add
repnz
xchg
push
scas
mov
test
sbbb
mov
cltd
mov
clc
cli
outsb
aas
xchg
pop
notb
mov
mov
jmp
sbb
fisttps
dec
jbe
push
std
scas
popa
sti
dec
mov
jp
daa
ljmp
and
aad
mov
pop
pop
in
loopne
jp
shlb
ja
xor
lahf
push
add
jne
mov
push
out
push
mov
je
xor
mov
dec
mov
repz
outsl
adc
xchg
fisubrs
inc
sub
push
jns
push
rclb
hlt
pop
inc
sahf
push
lds
sub
adc
add
jmp
mov
les
cmpsl
dec
xor
mov
cmpsl
dec
ds
mov
xchg
daa
xchg
dec
out
sub
and
push
pop
icebp
sahf
fcomps
push
fistpll
fcoms
mov
sbb
fs
jae
mov
data16
shlb
mov
adc
daa
xchg
cmpsl
dec
lea
ss
dec
fadds
or
mov
in
mov
push
nop
inc
adc
fimuls
cmp
push
jo
stos
cmp
push
and
add
mov
xor
sti
lods
and
mov
lods
pop
lret
ss
rorl
adc
jle
jnp
or
cli
jle
subb
int3
dec
sub
fmulp
adc
mov
sub
sbb
mov
int3
jl
les
rorl
lock
lahf
out
and
or
push
push
push
jl
aas
cs
mov
pop
add
mov
movsl
scas
inc
nop
inc
stc
jo
and
popf
in
and
xor
xor
xchg
out
sbb
mov
nop
mov
imul
dec
fcmovne
cmpb
xor
and
cmp
jg
nop
leave
lock
in
pop
sahf
stos
icebp
pop
stc
jge
inc
add
mov
jne
dec
lcallw
es
movsb
dec
int
xorl
push
cmp
cli
xchg
cmp
popf
xchg
outsl
mov
testl
arpl
add
ljmp
inc
mov
imul
cld
out
or
jno
xchg
nop
jle
pusha
push
jns
cmp
loopne
mov
fsubl
testl
mov
jno
add
rcrb
push
mov
push
mov
xchg
jp
sub
push
sub
sahf
notl
pusha
pop
je
fwait
sbb
add
xchg
sub
cs
pop
ret
jmp
add
pop
rcrb
mov
loope
int
cmp
cwtl
dec
sub
sarl
sub
mov
push
add
mov
rclb
pop
fisubs
add
test
pop
add
inc
sbb
test
into
addr16
ljmp
mov
out
ret
mov
pop
lods
lret
movsb
fadds
fstps
sub
rcl
popa
in
sub
test
lds
sbb
pop
xchg
test
adc
out
mov
mov
js
ljmp
cld
or
cltd
xchg
jo
subb
xchg
sub
sub
shrl
xor
das
jle
in
push
inc
mov
cwtl
push
or
and
jmp
sub
fcoml
es
fsubs
mov
mov
imul
and
rol
pop
cmp
jg
dec
iret
push
or
xor
xchg
pop
cmpsl
dec
lret
add
das
inc
jle
nop
in
jo
aas
subb
imul
jg
xor
push
pop
mov
cwtl
sub
inc
inc
inc
rorb
lret
inc
jl
push
or
mov
jge
pop
fstps
inc
ss
sbb
ljmp
pushf
popf
push
and
jb
cld
push
add
ret
sar
test
in
and
sbb
xchg
dec
inc
cli
lahf
iret
or
xchg
test
inc
test
popa
movq
aas
push
rep
pop
test
mov
fsubr
popa
pop
shlb
add
add
sbb
loop
pop
mov
add
xchg
cltd
xor
xchg
cld
sbbb
mov
jns
pop
add
and
roll
jle
pop
dec
push
push
jmp
fwait
movsl
call
mov
hlt
pop
insl
mov
jns
fcoml
jno
out
insl
jle
fcoms
xchg
hlt
mov
imul
daa
fwait
out
mov
jno
push
cmp
sub
and
push
les
sub
push
or
es
mov
aas
mov
ljmp
sub
adc
shll
xchg
jns
adc
sub
xchg
inc
sti
ret
repnz
dec
outsl
lods
stos
jnp
dec
sbb
nop
insb
jb
sti
shlb
fstl
repz
inc
fsub
ljmp
xor
jg
push
cwtl
in
add
jno
push
jae
shrl
adc
test
jns
xor
jge
loopne
sbb
xor
mov
xchg
jb
lahf
adc
je
sahf
mov
cmpsl
das
cmp
add
pop
push
fcomp
sbb
cli
loopne
lret
xchg
cmp
mov
les
adc
repz
bound
movsl
inc
pop
fdivrs
push
nop
mov
out
fdivrs
mov
cli
hlt
push
dec
inc
or
fwait
pop
fisttpl
mov
mov
xchg
arpl
mov
loopne
cmp
dec
into
loope
jle
mov
mov
mov
add
and
sub
jmp
imul
popa
enter
sub
mov
in
jle
sarl
inc
outsb
pop
inc
pop
adc
lret
pop
sbb
test
jg
adc
add
ljmp
or
sti
xchg
rolb
dec
dec
add
rcll
jnp
sbb
cmpsl
sti
lret
std
stos
or
cli
push
hlt
lret
test
cmp
leave
popl
or
push
mov
pusha
rorb
bound
enter
daa
push
call
xchg
xor
sbb
cli
imulb
mov
mov
inc
in
fsubrl
xchg
insl
mov
inc
add
inc
mov
or
adc
test
cwtl
mov
cmpsl
test
add
into
mov
xor
pop
add
or
repz
outsl
ret
xor
push
jno
arpl
mov
jbe
jmp
gs
adc
push
pop
pop
sub
cmpsb
lahf
stc
dec
imulb
push
jg
hlt
add
push
inc
add
sub
not
xchg
add
sub
cli
data16
xchg
rcll
out
jbe
stos
nop
or
add
push
lods
push
call
cli
out
lcall
mov
push
cmpsb
mov
ficoml
push
push
scas
xor
loopne
lea
xor
cwtl
test
push
arpl
divl
cmc
add
mov
es
fisttpll
mov
mov
mov
and
jge
push
orb
xchg
dec
push
orb
movsb
xchg
push
cli
call
adc
stc
subl
icebp
add
into
push
imul
mov
sbb
rcll
dec
sub
fwait
pop
ds
fldt
xor
out
adc
xchg
loopne
jno
add
cmp
ja
inc
and
iret
sub
cmp
or
outsl
cmp
add
xor
orl
adc
fnstenv
ja
lret
mov
testb
jbe
push
push
shll
es
jb
orl
dec
fstpl
rcrl
fnstsw
in
pop
sti
pop
test
fstpt
popf
ret
jno
pop
lret
fmulp
push
mov
xchg
sbb
mov
sub
mov
lds
and
je
jle
dec
inc
out
xor
jno
and
scas
xor
xchg
popa
and
mov
sahf
insl
pop
pushf
jmp
loope
xchg
ret
jl
and
xchg
gs
push
fistl
rcll
lods
lea
clc
adc
addb
stos
sub
gs
iret
xchg
and
cmp
in
into
ss
outsl
es
stos
xchg
mov
aad
pusha
ret
sbb
lahf
push
repz
jae
sbb
ja
mov
pop
sti
mov
fs
jecxz
and
and
xor
lods
jnp
and
jp
repz
int3
pop
jbe
out
dec
and
cltd
mov
and
or
push
js
and
addr16
stos
fidivs
idivb
scas
mov
movsb
mov
stos
clc
cmpb
inc
pop
jns
into
into
pusha
add
cmp
movsb
shl
ljmp
lret
mov
dec
and
mov
push
daa
je
push
mov
loopne
xlat
sub
mov
iret
ret
push
nop
jnp
cld
inc
push
rcr
lods
mov
daa
out
sahf
mov
cmp
xchg
mov
outsb
mov
loopne
cmpsb
fs
sub
into
inc
repnz
inc
push
sub
mulb
jb
adc
aam
ljmp
jge
int
push
std
icebp
inc
fisttpll
mov
pop
aaa
lea
rolb
push
lret
xor
stos
and
and
and
add
call
idivl
rcll
cmp
lods
das
cmp
and
ficoml
and
pop
push
pop
sar
xchg
mov
lret
scas
sahf
in
dec
mov
int3
sbb
aam
dec
loopne
shlb
js
jp
jg
xor
push
shl
enter
std
mov
mov
imul
nop
scas
pop
pop
and
mov
ljmp
lahf
sub
sub
mov
xchg
test
add
and
int
adc
cmp
cs
jb
xchg
nop
lret
cmc
xchg
xor
xchg
loopne
fimull
mov
xchg
mov
mov
pop
sub
cmpsb
in
or
or
mov
arpl
call
movsl
sbb
inc
ror
fsubrs
push
cmp
or
push
adc
xchg
sahf
push
push
repnz
mov
mov
jbe
dec
cwtl
mov
loopne
aad
pop
nop
adc
jl
cltd
sub
mov
adc
or
cli
adc
imul
ret
movsl
push
leave
shl
mov
fildl
and
xchg
inc
push
mov
cltd
dec
mov
insl
mov
push
xor
lea
push
xchg
jecxz
lret
adc
inc
fistps
roll
cli
movsb
inc
dec
fldcw
dec
test
jnp
push
cli
jnp
cmpsb
adc
cmp
xchg
bound
fidivrl
int
sahf
or
mov
scas
jo
int
fisubl
push
out
jmp
stos
shll
jge
mov
mov
mov
stc
pushf
push
mov
sarb
insl
ret
xchg
adc
ds
pushf
xchg
mov
push
inc
mov
mov
jnp
cld
add
inc
ret
jge
out
push
push
mov
lods
mov
sbb
mov
jg
ret
mov
mov
arpl
leave
push
movsb
jle
pop
lods
adc
add
stos
in
cmp
or
push
cmpsl
xchg
cmc
mov
ja
xchg
push
or
mov
push
jno
loopne
pop
pop
sub
inc
adc
in
pop
fdivrl
nop
sti
faddl
sti
in
inc
pop
sub
jb
sbb
xor
add
dec
cli
pop
cmp
xchg
out
pop
and
fistps
pop
push
dec
xor
xor
outsl
jns
popf
rcl
and
lods
neg
add
lret
mov
push
adc
pop
sub
js
xchg
arpl
pop
xchg
jns
mov
push
shlb
lret
ja
daa
pushf
or
push
inc
loope
lahf
push
test
inc
imul
daa
test
jmp
shrl
repz
xor
sbb
push
sub
sbb
add
scas
mov
inc
cld
xlat
roll
xchg
mov
daa
bound
icebp
rcll
repnz
scas
mov
cmp
test
xor
jae
jns
test
jae
sarl
xor
inc
mov
movsb
push
sbb
pop
cmpb
test
push
xchg
cmp
adc
int
outsb
cltd
jge
mov
inc
shll
ds
hlt
rcl
xchg
lods
jmp
add
shl
aas
push
mov
outsb
push
dec
mov
into
or
icebp
mov
lret
stc
add
push
mov
jo
mov
sub
pop
enter
and
cmp
insb
xor
adc
call
inc
ss
ja
fwait
loop
rorl
adc
dec
fidivs
jae
or
or
dec
lods
add
cmp
out
ret
pop
lahf
mov
mov
out
pop
adcb
inc
popf
fldt
add
outsl
into
xor
dec
stos
xchg
out
xor
push
jmp
lret
scas
aaa
adc
pusha
jl
cmp
mov
jmp
jecxz
sub
xor
sbb
push
enter
mov
testb
js
inc
and
sub
inc
jge
inc
popf
jecxz
adc
fwait
inc
les
xchg
jle
sbb
pushf
cmp
jno
lods
mov
push
add
das
adc
sub
push
xchg
ss
inc
xor
sbb
pop
mov
or
mov
dec
mov
inc
add
mov
sarb
cld
jns
rolb
fnsave
outsb
scas
mov
inc
lods
negb
fs
add
adc
xchg
nop
jo
or
frstpm(287
push
stos
in
in
cltd
aad
cmp
iret
imulb
std
test
mov
sub
mov
mov
push
inc
dec
pop
scas
inc
aas
pop
out
push
jle
lock
pop
inc
ljmp
inc
inc
push
jp
xor
and
sub
xchg
xchg
hlt
into
fwait
cs
or
mov
push
and
fwait
mov
xlat
xor
mov
push
mov
mov
out
out
xchg
daa
push
dec
cltd
cmp
mov
test
pop
ja
push
enter
cltd
scas
lahf
aas
stos
mov
repnz
gs
cmp
push
fldcw
jb
sub
scas
mov
cmp
lods
flds
sub
call
fisttpl
pop
cmp
xchg
pop
jl
mov
les
jbe
repz
mov
ja
sub
xor
xchg
cli
jp
lret
cmp
in
lods
inc
xchg
and
aaa
in
dec
imul
in
sbb
xor
sbb
push
stc
push
jb
mov
add
mov
std
out
cmpsl
aas
pop
jo
lods
idivl
repz
out
les
push
bound
inc
sub
jl
sti
filds
pusha
jb
rorl
and
inc
mov
loop
xchg
fdivrl
cli
adc
mov
lods
mov
int3
scas
mov
xor
clc
add
sarl
push
sbb
rcll
es
pop
test
xchg
mov
inc
and
xor
mov
xchg
sarb
loop
pop
cmp
lock
fbstp
mov
xor
or
adc
bound
sbb
pop
add
les
push
pop
imul
lods
push
pop
jmp
int
cltd
fiadds
jge
xchg
xor
outsl
sbb
aaa
add
xor
pusha
repnz
inc
pop
or
dec
cltd
lods
pop
push
xlat
xor
sub
mov
mov
subb
or
jbe
and
stos
or
push
adc
out
shlb
cmp
pop
movsl
xchg
cltd
inc
and
cmpsl
cwtl
sub
sahf
xchg
xorb
lahf
jno
xor
fadd
mov
scas
xor
and
dec
fwait
std
lods
in
push
popf
or
mov
or
sbb
inc
negl
decl
in
test
lret
cwtl
push
rolb
test
out
dec
jecxz
sub
insl
testl
jno
mov
stos
jg
popf
fstl
xor
push
jo
mov
fbstp
cld
adc
repz
mov
lcall
jp
pop
addr16
push
loope
fisubs
incb
lcall
and
cltd
mov
jg
pop
jne
stos
mov
rcl
xchg
sbbb
pushl
cli
mov
outsl
cmpsl
dec
push
ror
dec
jne
xchg
push
mov
insb
ret
jo
aas
lods
xchg
loop
nop
inc
fisubrl
xor
ret
rclb
out
andb
mov
and
ret
mov
cmp
push
xor
fistpll
cmp
and
sub
aad
sbb
push
dec
lds
xor
mov
add
and
faddl
and
xchg
arpl
push
ss
sub
pop
aas
into
jns
push
sbb
in
test
mov
mov
mov
pop
cwtl
and
call
pop
pushf
lods
outsb
xorb
int
dec
inc
insl
bnd
dec
inc
inc
push
in
stos
outsl
popl
cld
sub
dec
xor
push
data16
xor
in
addb
out
div
mov
jg
jne
fmull
mov
sub
fwait
xor
sahf
popf
jae
push
cmp
scas
pop
std
push
pop
js
jge
into
push
cmpsl
fs
dec
cs
push
xor
cmp
cmc
shll
out
push
into
jp
dec
xlat
mov
pop
clc
jle
cld
dec
fs
fs
pop
leave
out
or
push
sbb
mov
or
push
push
inc
cmc
mov
hlt
jnp
xor
mov
jo
repz
sub
mov
enter
fcmovu
icebp
int
popa
int
cs
aad
cmp
sub
push
xchg
cwtl
hlt
xchg
scas
cmpsl
mov
dec
divb
pop
xor
add
rorb
mov
add
adc
xor
fiaddl
dec
push
dec
cmp
test
test
sbb
enter
js
out
out
into
and
les
dec
daa
std
xchg
lret
xor
jae
xchg
js
inc
sub
pusha
mov
or
mov
pop
fwait
leave
out
dec
adc
rolb
xchg
mov
jo
lds
xor
fsts
shll
movsb
lret
add
mov
stos
push
lock
and
mov
incl
incl
nop
mov
fbld
pushf
mov
icebp
scas
mov
jecxz
es
mov
add
aas
push
into
notb
mov
jmp
ret
sub
in
mov
cmp
ret
lods
shrl
outsl
lret
jl
pop
cmp
mov
xor
sbb
mov
push
imul
add
adc
shlb
sub
out
adc
push
and
jo
sbb
leave
ja
cltd
xchg
gs
sub
pop
pop
iret
shrl
fildll
jp
cmpsl
dec
mov
popa
mov
adc
add
ret
movsb
mov
or
lds
mov
movsb
push
add
les
add
sbb
repnz
or
lods
xor
xchg
hlt
sti
fcmovnbe
mov
nop
dec
fs
out
pop
xor
shl
push
iret
xchg
pop
adcb
jg
in
scas
dec
scas
pop
and
je
aaa
xchg
or
sbb
dec
repnz
inc
bnd
ljmp
cmp
mov
or
mov
push
call
into
cmpsb
or
xchg
scas
addl
not
xchg
sub
jns
pop
aad
cmp
je
in
shr
mov
fildl
jae
xlat
orl
add
stc
in
push
pop
or
xchg
cmp
xchg
aam
int3
pop
jo
outsb
dec
or
xchg
mov
sbb
xor
push
mov
mov
sbbl
mov
mov
rcr
mov
sub
in
jg
dec
and
mov
push
fwait
pop
aas
mov
mov
cld
adc
jb
outsl
out
jno
and
jnp
popf
aam
ljmp
fs
sub
push
add
xor
pop
jmp
data16
fstp
dec
dec
sti
lahf
push
outsb
adc
gs
xchg
in
repnz
cmp
jle
pop
aaa
sbb
popf
test
mov
xchg
cs
sahf
ja
cltd
mov
mov
scas
add
jge
data16
out
dec
jecxz
rcll
das
aam
insl
stos
sub
out
outsb
movsl
outsb
mov
ja
push
mov
push
mov
les
jne
push
test
ret
popf
in
rcrb
inc
fmull
lock
xchg
jbe
outsb
sbb
pop
xchg
xchg
cmc
out
scas
and
fldl
addr16
leave
movsl
pop
iretw
inc
mov
test
sub
nop
out
rolb
adc
data16
sbb
sub
cmp
imul
mov
clc
mov
push
xor
scas
addl
lds
iret
sahf
push
push
sahf
cmpsl
stos
ret
pop
push
and
test
add
ja
cltd
jne
test
sbb
mov
pushf
jle
mov
aam
ss
ret
sbb
push
and
push
ret
jmp
and
lds
mov
add
jbe
imul
xchg
push
popf
data16
insb
xchg
fsubl
cmp
imul
imul
je
adc
rorl
lret
mov
inc
jb
inc
xor
ds
out
adc
sub
stos
inc
jge
pop
shrl
pop
pusha
fwait
ret
leave
into
inc
jp
mov
or
adc
scas
sbb
push
jmp
pop
js
loope
push
pusha
daa
insl
add
call
cmp
sub
scas
out
cltd
arpl
pop
mov
test
jbe
jp
in
mov
push
mov
out
jb
and
xchg
test
sub
in
push
mov
pop
pmulhuw
mulb
shr
fsubs
addr16
or
mov
aaa
dec
adc
cli
ret
cmp
lods
or
cwtl
cmp
xchg
mov
push
xor
or
daa
pop
xchg
leave
es
or
out
push
push
das
aas
cmp
dec
gs
or
rcl
jo
rol
inc
cmp
sbb
jne
push
call
inc
jge
test
data16
xchg
jg
daa
adc
mov
mov
inc
sar
into
test
mov
mov
mov
sub
xchg
xor
popf
frstor
cltd
mov
and
jo
js
jp
push
mov
shrb
mov
inc
test
adc
movsl
mov
mov
andl
dec
ret
cs
std
add
jb
lods
push
inc
xchg
jmp
mov
das
mov
adc
inc
xor
pop
stc
mov
mov
mov
add
adc
stos
dec
popa
loop
xor
js
pushf
cmp
dec
jmp
je
dec
xor
xlat
jae
in
push
fs
pop
pop
sbbb
mov
lods
int
test
push
pop
mov
cmpsl
stos
fldt
pop
inc
test
mov
in
mov
mov
xchg
cmp
mov
mov
dec
stos
pop
inc
adc
jmp
jmp
sub
cmp
dec
or
pop
out
rolb
mov
lret
hlt
mov
adc
mov
push
inc
jg
clc
sahf
in
xchg
nop
loop
xchg
or
aam
cltd
enter
or
and
and
fldenv
adc
faddl
loope
cltd
and
ds
inc
movsb
divl
lret
mov
pop
pop
fstps
jge
pop
jns
cmc
jle
mov
jg
sbb
add
addb
mov
inc
daa
repnz
imul
orb
es
stos
mov
mov
adc
cwtl
xlat
adc
pushf
aam
je
shl
xor
test
lahf
dec
push
xor
pop
pusha
add
fwait
mov
cmp
xchg
scas
lods
les
int3
xor
push
jg
push
mov
popa
mov
xor
sbb
in
incb
inc
add
cmp
dec
inc
stos
mov
insb
popf
mov
mov
sub
inc
out
ja
dec
push
mov
mov
orb
or
notb
push
pop
les
and
insb
cltd
pushf
pop
inc
sti
fistl
sub
mov
lock
hlt
mov
roll
addl
pop
xchg
mov
pop
bound
je
hlt
mov
ficompl
mov
scas
and
xchg
sahf
icebp
arpl
test
mov
int3
add
cli
rcrl
push
jb
mov
xor
aaa
inc
cmpb
leave
leave
ljmp
dec
lret
lods
ret
xor
aad
nopl
fcomi
sbb
fisubl
sub
or
cmp
cmc
in
fs
out
dec
xor
lods
inc
pop
fwait
push
sub
adc
sbb
jmp
dec
movl
lods
jnp
jmp
push
add
pushf
out
fdivr
cli
mov
add
ds
enter
push
inc
mov
sbb
xor
add
cmp
or
adc
jmp
adc
inc
stos
stos
or
adc
ljmp
xchg
std
xor
es
jns
pop
mov
push
and
dec
push
out
nop
sbb
sbb
fmull
push
add
dec
mov
push
sbb
xchg
std
inc
xchg
or
movlps
mov
mov
imul
pop
and
jns
mov
sbb
push
shr
sti
movsl
jl
inc
dec
sbb
cmp
bound
inc
ja
imul
xor
pop
es
jbe
fstl
movsb
inc
adc
loopne
shl
lds
fs
jmp
fsubl
pushf
dec
push
test
push
mov
push
adc
add
push
std
jne
and
loope
or
insb
arpl
nop
sub
aas
jg,pt
or
shlb
mov
fmuls
call
mov
addr16
push
xor
je
jb
test
add
jle
popa
xor
into
dec
add
ret
push
jmp
dec
mov
test
stos
mov
mov
cmp
negl
rolb
sub
push
jle
lret
repz
imul
fistpll
xor
push
jns
inc
push
arpl
or
dec
push
add
sbbl
push
jge
xor
jns
popf
cltd
push
fs
or
mov
hlt
mov
push
std
sub
ret
stos
or
mov
inc
dec
mov
xor
pop
or
xor
inc
andb
movsb
mov
jnp
ljmp
scas
push
sbb
clc
fwait
jmp
and
push
jp
lods
xchg
push
pop
cmpsb
leave
cmp
sub
xorl
dec
cmpsb
push
je
cld
jg
cmc
mov
enter
ret
mov
dec
sbb
sbb
cmpsl
pusha
sbb
and
and
add
xor
dec
sub
sub
mov
and
sub
pop
arpl
jmp
aas
loopne
cmp
out
rcl
pop
mov
out
test
mov
mov
daa
shlb
cmp
scas
pusha
sbb
arpl
lret
push
ss
icebp
out
jge
imul
daa
pop
push
loop
xor
mov
ja
mov
out
sbb
fisttps
pushf
jg
push
xor
mov
les
sbb
add
lcall
pop
hlt
adc
mov
mov
lret
xchg
lods
into
fwait
test
push
stos
mov
or
stos
xchg
in
cmp
mov
mov
mov
adc
cmpsb
scas
in
mov
inc
or
sub
scas
jbe
cmp
out
cwtl
stos
sbb
mov
shlb
lahf
xchg
fst
push
cmpsl
test
add
push
sarb
pop
fisubrl
and
es
sub
inc
push
bound
lock
popl
push
push
pop
in
lret
cmp
in
rcll
std
jns
dec
addr16
dec
pushf
and
lea
adcl
mov
dec
add
push
xchg
mov
xor
aas
jne
add
mov
fcomps
sbb
and
adc
push
adc
lcall
iret
mov
jge
outsl
imul
dec
popa
cs
jg
push
imul
jae
hlt
addr16
jmp
fs
lods
mov
add
sub
xlat
mov
push
pop
jp
jg
ja
cmp
lods
pop
in
mov
or
push
xchg
popl
sti
inc
adc
gs
and
lret
es
outsb
add
xlat
outsl
add
icebp
adc
notl
or
lock
jno
sbb
imul
hlt
inc
stos
inc
neg
jg
adc
aaa
dec
sub
fisubrs
cltd
sarl
pop
mov
pop
data16
sahf
jo
cmp
sahf
dec
into
fcomps
sbb
sbb
inc
les
ljmp
mov
sahf
ret
jne
mov
fsubrl
cs
fists
push
inc
mov
sub
push
mov
out
jge
clc
movsl
pop
leave
cmp
inc
adc
pop
sbb
push
int3
sbb
xchg
cmc
adc
inc
in
fadds
data16
orb
cli
push
sub
xchg
icebp
mov
add
out
mov
test
xlat
sarb
in
dec
andl
push
mov
cmp
mov
ret
mov
cmc
icebp
loope
pop
imul
lcall
repnz
mov
mov
cmpsl
and
popf
repnz
xor
loopne
pop
cmp
push
nop
inc
mov
ds
mov
mov
sub
xchg
repnz
or
loopne
or
mov
xlat
mov
or
pop
pop
pop
loop
cmp
jl
sub
mov
and
or
adc
aam
cmpsb
pop
inc
je
out
mov
fwait
arpl
pusha
call
pop
call
aam
xchg
stos
lahf
mov
cmc
ret
ja
jo
add
sub
fadds
daa
push
cs
cld
add
inc
push
sbb
push
add
subb
dec
divb
dec
mov
lods
jg
out
mov
or
jg
push
cmp
fwait
xchg
hlt
mov
jg
outsb
lahf
mov
jmp
fistpll
fimull
stc
popa
mov
sbb
mov
dec
push
insb
fidivl
js
sub
pop
mov
mov
and
xor
mov
fdivr
sbb
mov
mov
insl
div
push
mov
mov
and
dec
mov
lods
dec
pusha
sub
dec
aaa
or
add
ret
divb
and
pop
xchg
imul
dec
mov
aas
mov
sub
rcr
add
mov
fadd
mov
xor
sbb
sub
fbld
iret
jne
add
cs
pop
xchg
orb
scas
pop
xor
imul
iret
jae
aas
xchg
inc
rorl
or
negb
xchg
mov
cld
sbb
fwait
mov
pusha
or
mov
xchg
inc
push
inc
jns
pop
movsb
sbb
cmp
jns
test
std
push
sbb
add
cltd
insl
test
and
frstor
mov
sbb
in
mov
mov
fs
push
in
mov
mov
dec
lret
mov
data16
popa
cmp
aas
push
or
xlat
and
pop
addr16
std
dec
mov
fadd
cmpsb
push
sbb
adc
dec
fwait
mov
stos
scas
enter
mov
and
push
in
mov
sbb
mov
add
in
and
sarb
mov
pop
lods
mov
insb
lcall
sub
xor
mov
ret
test
push
movsb
xchg
shll
movb
lds
out
lret
xchg
subb
dec
add
lock
sbb
call
int3
xchg
pop
dec
std
adc
clc
xor
inc
push
xchg
cmp
das
inc
sub
or
cltd
jp
dec
lcall
ror
or
mov
lods
add
xor
repnz
hlt
insl
sti
inc
mov
stos
and
jmp
fistpll
fdivrs
or
inc
push
push
sbb
int3
xchg
and
mov
mov
stc
xor
cwtl
fs
or
stos
mov
rcr
add
push
les
xor
xor
jns
je
mov
jle
sbb
cmpb
stos
arpl
fsubp
cwtl
mov
sbb
cli
stc
stos
dec
icebp
loope
jo
roll
movsb
pop
pop
std
popf
flds
cmp
mov
movsl
in
movsl
stos
sub
jne
lret
repnz
adc
mov
inc
pop
ljmp
insl
lods
mov
adc
push
inc
fisttpll
scas
jno
inc
mov
adc
and
push
flds
movl
jmp
push
outsb
fldl
lock
cmpsb
fstpt
xchg
sub
fldt
jb
dec
test
inc
and
addr16
or
cmpsl
cs
rcrb
jo
rcll
sub
xlat
fiaddl
mov
pop
mov
mov
jbe
pop
sbb
add
sub
xor
jae
sbb
cmp
lahf
rcrb
in
shrb
push
ss
push
cli
pop
and
in
and
jp
dec
inc
jo
loop
loope
xchg
mov
hlt
or
push
xchg
dec
mov
nop
dec
add
jae
test
xchg
dec
loopne
popa
mov
and
loope
mov
rcrl
sub
jbe
xchg
test
push
lret
cpuid
jb
jmp
pop
xchg
outsl
xchg
movsl
xchg
pop
fadd
std
jle
shll
enter
es
lods
mov
fwait
int3
mov
lds
dec
pop
int
dec
cmpsb
sbbl
pop
lahf
mov
push
test
fistl
pushf
dec
divb
sub
push
xchg
inc
dec
xchg
xor
mov
mov
sahf
xchg
xchg
sub
lods
pop
inc
into
xor
xor
adc
mov
insl
fstpl
cmp
das
push
inc
push
mov
negl
pop
mov
xchg
rcrb
dec
in
aaa
sub
push
mov
dec
adc
xchg
xchg
call
xchg
pop
push
or
scas
push
repz
loop
xor
ss
push
mov
adc
xchg
mov
push
test
push
in
out
leave
mov
les
fcmovu
sbb
xlat
lods
pop
lcall
and
sbb
pop
adc
xor
push
lret
rcr
std
lahf
xchg
fucom
jb
adc
out
mov
mov
loope
imul
xor
loopne,pn
std
adc
hlt
lods
and
dec
mov
lcall
in
mov
mov
push
repnz
cmp
lahf
daa
mov
fmuls
or
andl
lods
jmp
mov
push
fiadds
mov
outsb
and
pop
sbb
jmp
ret
lahf
pusha
adc
sub
js
mov
pop
adc
mov
sub
outsb
pop
dec
jnp
jnp
xor
mov
add
mov
pop
gs
daa
or
lahf
pop
push
out
xor
xor
pop
in
mov
stos
xchg
pushf
adc
das
iret
int
pop
call
and
or
xor
xchg
xchg
sub
cmc
xchg
sbb
sub
sbb
push
stc
outsb
idivb
add
pop
inc
addr16
in
das
ds
dec
xchg
sbb
pop
pop
push
dec
or
cli
add
mov
inc
adc
enter
push
cld
lcall
in
cs
xor
sub
les
pushf
inc
mov
xor
lret
in
popa
es
xor
sbb
xlat
and
dec
popa
rcl
movsb
jp
dec
cmpsb
rcrb
or
jbe
mov
jmp
daa
adc
inc
loop
nop
mov
shl
fimuls
gs
data16
jns
xor
clc
push
mov
subb
lret
data16
mov
push
loopne
pop
jp
mov
movsl
or
pop
dec
xor
xchg
sub
and
ds
call
rcrb
stos
sub
xchg
insb
rolb
jo
sarl
push
pop
mov
push
mov
mov
aaa
int3
push
dec
cmpl
movsb
jg
movsl
sbb
mov
outsb
inc
push
cmc
sbb
call
mov
rorb
xlat
arpl
push
mov
inc
push
cmc
add
lret
in
imull
xor
scas
out
shlb
incl
add
xlat
push
sub
inc
sbbl
out
in
or
pop
sub
jp
mov
inc
adc
aaa
add
pop
bound
inc
xor
jno
divl
or
mov
lahf
insb
jns
lods
mov
ja
xchg
cwtl
inc
aas
cltd
roll
mov
cmp
mov
popf
inc
ja
nop
data16
incb
ficoms
mov
int3
push
lcall
pop
inc
fists
mov
fisttps
int
bound
adc
sbb
rolb
jb
inc
fdivrl
push
push
pop
fcomps
cmp
outsl
and
pop
pop
push
sbb
icebp
loop
add
pushf
stc
iret
and
xor
mov
jl
sbb
push
jo
jge
fcmovnu
iret
add
loop
out
imul
inc
add
cmp
inc
inc
iret
cli
pop
pop
jnp
pop
jnp
pop
pop
jle
xor
scas
jne
lret
in
fimuls
or
add
ss
push
inc
sahf
xor
inc
ss
insl
xor
mov
rcr
dec
and
sbb
dec
inc
fbld
test
jne
mov
cmp
or
std
shrl
fadds
lret
lret
in
cmovb
mov
jmp
adcl
dec
mov
ss
dec
and
stc
roll
inc
adc
or
push
aaa
cmc
cmp
hlt
dec
fdecstp
inc
sbb
pop
xchg
lods
arpl
dec
pop
push
adc
ja
out
popf
std
lahf
out
or
fdivr
adc
mov
incb
pop
or
push
into
add
push
les
jbe
add
xor
shll
and
imul
mov
jae
lret
xor
pop
mov
insb
pop
subl
int3
aas
pop
dec
lret
popa
xchg
jp
das
div
les
negl
xorl
mov
jns
push
cli
fists
cltd
out
in
int3
or
scas
fnsave
xchg
test
ret
out
pop
repz
mov
in
int3
ret
dec
mov
mov
jbe
xchg
outsb
add
push
fmul
stos
pop
jecxz
lods
scas
jl
mov
and
ss
push
sbb
cmp
call
cmp
les
fisubs
sbbb
sub
ret
inc
or
inc
push
inc
cli
mov
scas
inc
or
arpl
loope
call
shll
rorb
cmp
push
dec
shll
mov
jle
outsb
xor
pop
dec
pop
or
xchg
fsub
jp
in
sti
mov
fimuls
call
out
iret
mov
sbb
stos
xor
shl
divb
test
pop
test
adc
jb
std
sbb
outsl
lea
test
arpl
into
xor
imul
clc
cmp
pop
sti
pop
out
jns
test
cmpsb
xchg
inc
fwait
cmp
push
ds
cmp
fistps
or
mov
xchg
pusha
jnp
jp
inc
fcmovu
stos
jne
fs
iret
pushf
movsl
cmpsb
imul
xchg
test
inc
adc
jnp
sub
and
add
jno
pop
jno
or
xchg
fadds
jo
jmp
lahf
sbb
push
adc
xor
or
ja
xor
fnstsw
test
test
rclb
stos
jle
pop
sub
int
cmpsb
test
mov
loop
dec
xchg
bound
inc
das
sub
cmpsb
notl
and
push
inc
addr16
data16
sub
xorl
subb
dec
inc
adc
jecxz
shl
out
jge,pt
mov
aas
insb
lock
sbb
call
sbb
les
adc
pop
clc
xchg
jl
pop
pop
inc
mov
sub
cmc
jge
lods
jmp
lcall
pusha
fidivrs
mov
inc
sbb
or
sbb
mov
repz
cmp
loopne
call
shl
push
in
adc
int
adc
or
sbb
shrl
ret
push
repnz
jmp
and
inc
movsl
add
mov
inc
cmp
mov
xor
mov
jb
icebp
push
jle
dec
mov
fmul
cltd
fisubl
jle
sbb
pop
ljmp
in
mov
add
iret
fwait
dec
xchg
jg
sbb
mov
mov
out
adcb
outsl
sub
repnz
push
xchg
sbb
pop
xor
fsub
mov
or
pop
in
sub
movsb
jno
dec
int3
popf
inc
insl
leave
icebp
scas
mov
lret
jns
stos
lahf
daa
sahf
mov
mov
push
add
outsb
pop
mov
pop
pop
fisubrl
mov
loopne
rcrl
loope
aaa
jge
mov
adc
xchg
loopne
sub
sbb
mov
and
push
jg
scas
fprem
pop
mov
std
lcall
lock
loopne
dec
repnz
mov
testb
adc
sub
clc
xor
pcmpgtd
sbb
fisubl
dec
cwtl
jbe
jnp
mov
add
sbb
in
jp
pop
push
sub
xor
adc
mov
mov
fsubrl
lods
lcall
dec
xor
insl
sahf
test
stos
sti
ss
dec
sub
xor
sahf
xchg
jne
pop
das
sub
div
loopne
adc
pop
add
fs
xor
mov
pop
mov
cmp
cltd
mov
sub
es
inc
ss
aas
insl
sbb
loope
push
ss
xor
add
loopne
xor
movsb
xchg
je
jnp
shlb
cmpsb
xor
lahf
sbb
hlt
push
inc
adc
inc
pop
sub
out
or
pop
inc
scas
into
mov
std
sub
and
sbb
decb
xlat
pop
dec
test
into
mov
jl
out
pop
fcompl
cmp
repnz
mov
test
ss
or
xchg
andl
in
or
test
std
addb
pop
xchg
popf
mov
rcrb
push
pop
jbe
ja
push
inc
adc
adc
ss
jno
or
sarb
push
les
in
aaa
fcomps
shlb
mulb
mov
mov
adc
dec
adc
dec
push
out
fdivs
sbb
mov
pop
push
mov
xor
cmp
loopne
adc
jnp
or
jns
bound
push
sbb
jge
and
in
and
fwait
loopne
push
or
aad
pop
push
push
ret
shll
xlat
repnz
clc
inc
ret
dec
and
jne
stos
inc
sub
ficompl
gs
mov
jge
call
mov
sub
jp
pop
fnstenv
mov
push
cli
stc
dec
xor
int
inc
call
movsb
xor
test
lods
popf
fucom
mov
push
xchg
stos
cmp
inc
outsb
fistl
sbb
pushf
imul
adc
mov
push
adc
shl
fsubr
mov
sbb
push
inc
es
mov
fadds
mov
mov
add
shl
mov
imul
jbe
mov
pop
fstpl
test
dec
cmp
adc
ret
inc
popa
push
or
mov
aaa
mov
xchg
cmc
loopne
idiv
push
ret
sahf
jo
push
pushl
sub
aas
push
gs
xor
mov
push
adc
das
out
push
mov
add
bound
xchg
cltd
or
jecxz
jnp
scas
test
cmpsb
mov
mov
sbb
pop
imul
in
xchg
mov
out
mov
fsubr
jg
cmp
jne
sub
or
jne
mov
xor
dec
fsubs
xorl
fistps
lods
xor
pop
push
sbb
cltd
mov
xor
sarl
mov
or
sahf
jnp
call
popf
mov
out
mov
test
in
pop
add
roll
lcall
stc
cmc
adc
cmp
inc
cmc
jae
or
out
ds
mov
es
fildl
add
xor
cmp
and
fwait
nop
fisubrl
mov
add
shlb
mov
in
clc
push
loopne
add
mov
jle
xchg
xchg
daa
repz
fldl
push
mov
pop
cmp
mov
xchg
popf
fwait
hlt
ljmp
dec
ret
mov
mov
lret
outsb
mov
daa
out
into
sub
push
push
mov
mov
lcall
or
arpl
pushf
dec
xor
fwait
dec
pop
test
mov
jae
rcrl
pop
cmp
push
add
and
lahf
adc
sub
xchg
cmp
jo
mov
mov
bound
jg
js
lods
test
push
adc
lock
int
xor
pop
in
aad
stc
xchg
adc
xchg
pop
stc
cmp
sub
mov
push
outsl
arpl
int3
and
in
and
sbb
in
and
push
jl
pop
loope
pop
xchg
dec
push
data16
cli
push
push
cmp
orb
aam
inc
scas
dec
jae
lods
or
mov
sub
xlat
mov
fldt
movsb
rcll
outsb
insb
cmpsb
sahf
rcrb
addr16
flds
xchg
shll
inc
test
cwtl
popa
cmpb
addr16
and
and
sarl
loop
inc
jg
and
js
cld
xchg
xchg
dec
jmp
xchg
notl
sub
sbb
mov
fs
test
push
movsb
and
inc
stos
push
xchg
jle
inc
mov
fcmovne
sub
iret
notl
mov
arpl
in
cld
add
pusha
mov
sbb
mov
in
sub
push
aad
add
shrl
shll
repnz
out
jl
mov
test
lret
add
dec
test
mov
in
add
fwait
hlt
cmp
pop
stc
mov
loop
imul
loop
push
and
xchg
popf
dec
xchg
test
pop
and
push
fidivrl
pop
loope
cmp
mov
outsl
ficomps
mov
ret
out
jnp
jo
aaa
lock
fsubs
mov
jmp
cli
sahf
push
jae
sub
clc
add
repz
push
icebp
sbb
stos
into
add
test
jmp
adc
sub
sbb
ret
das
fisubs
jg
lock
push
or
stos
inc
mov
loopne
fwait
sti
mov
idivb
mov
dec
adc
mov
ljmp
jge
pop
add
mov
aam
cwtl
add
xchg
dec
fwait
mov
xchg
cmp
mov
ss
inc
xchg
xchg
pushf
mov
js
and
enter
cs
or
push
lea
lahf
scas
inc
adc
cmp
xchg
adc
in
lea
sub
insl
sbb
push
or
shr
cmp
cs
mov
add
xchg
and
jbe
or
mov
mov
out
push
rcrb
cmp
xchg
mov
mov
mov
or
mov
push
push
add
jo
loope
lret
aas
loopne
sarl
cltd
add
mov
or
out
pop
jns
push
js
call
bound
pop
dec
enter
inc
xchg
pop
xchg
mov
in
dec
shlb
xor
mull
loope
mov
repz
or
jne
dec
ss
jl
dec
mov
mov
inc
out
cmp
sbb
out
insb
in
js
or
push
cli
test
fldl
jo
insl
fmuls
lock
cmc
push
mov
pop
push
jno
mov
idivb
mov
insw
outsb
popf
mov
shlb
in
xor
inc
shl
in
cmp
pop
rcll
repnz
xchg
in
mov
pushf
add
sbb
cwtl
dec
dec
mul
jecxz
pushf
and
add
push
xchg
in
xor
fs
sub
pushl
mov
mov
pop
test
iret
lods
ret
mov
jnp
cmp
add
cli
addl
in
repnz
sarb
pop
jno
jp
mov
std
jge
add
jecxz
sub
call
cmp
xchg
cmp
lds
cmp
mov
add
jae
add
xchg
inc
jecxz
sarl
xchg
orl
mov
push
aad
xchg
lds
fdivrs
dec
push
dec
sbb
inc
dec
leave
mov
out
andb
addr16
scas
in
sub
out
push
das
xchg
mov
enter
aaa
sub
adcl
inc
cmc
ljmp
jge
sub
les
mov
mov
push
cli
ret
xchg
ss
dec
inc
xchg
call
mov
jmp
cmc
sbb
shrb
mov
dec
mov
in
lea
in
and
mov
push
popa
xchg
ja
mov
es
or
nop
hlt
orb
adc
xchg
xor
in
jle
ret
adc
push
jb
add
pop
repnz
outsl
clc
mov
imul
sarb
xchg
or
push
loope
bound
inc
hlt
push
sub
cs
leave
or
into
add
mov
sahf
cmpsl
and
xchg
inc
mov
mov
sbb
cmc
adc
sub
or
jo
jecxz
pop
ljmp
pop
rclb
push
jp
lret
sub
movb
loop
or
cmpb
push
ss
dec
push
arpl
testb
pop
fstpl
jns
adc
int3
inc
dec
sub
mov
push
shlb
int3
push
and
sub
rol
leave
mov
aad
mov
icebp
dec
inc
shll
jns
fsts
out
ret
lea
and
adc
pop
jg
pop
inc
cld
ror
and
lret
dec
stc
dec
adc
ds
xchg
aas
cmp
out
or
clc
loop
jle
xchg
jns
or
cmp
les
mov
call
mov
inc
jno
lods
pop
mov
fstl
inc
repnz
jl
test
or
jne
pop
in
daa
subb
push
rclb
mov
mov
pop
jl
and
push
fcomps
xchg
push
rorb
inc
lock
sti
sbb
in
push
lea
repz
in
mov
adc
mov
sbb
mov
pop
inc
in
rcrl
cwtl
cwtl
test
push
dec
dec
pop
inc
and
popf
mov
dec
sbb
lret
out
xchg
cli
push
cli
pop
mov
je
jecxz
jle
data16
addl
add
iret
test
or
sbb
mov
fincstp
xlat
test
cltd
icebp
sbb
pop
jge
sbb
jae
cmp
mov
and
or
shlb
jb
push
mov
lahf
inc
jb
mov
mov
xlat
push
lods
push
int3
mov
add
jl
repz
and
adcb
cli
or
rcl
icebp
stos
and
testb
loopne
jno
push
jns
imul
mov
jmp
pop
sbb
xor
cmp
mov
insb
bswap
sbb
int
mov
shlb
xchg
add
xor
mov
cmp
aad
push
or
out
imul
shl
xchg
cmc
ja
cmpsb
fnsave
mov
adc
jnp
bound
lods
mov
xchg
jecxz
adc
out
mov
rcl
pop
jbe
or
shrl
mulb
test
lahf
pop
push
std
je
stos
pop
out
push
pop
jecxz
dec
mov
es
mov
aad
pop
clc
imul
xorl
adc
add
jne
shll
lods
pop
test
jge
out
leave
push
nop
psubsw
mov
lock
ja
sbb
mov
push
fmuls
std
sti
fldt
cld
mov
push
mov
inc
pop
negb
and
inc
mov
rorl
mov
jb
pop
dec
lods
add
push
repz
fwait
pop
push
push
jns
or
mov
fsin
daa
out
mov
push
mov
sar
mov
pushf
loop
in
adc
out
cmp
push
add
sub
sbb
mov
xorl
rolb
xchg
ret
mov
push
jge
into
xchg
cwtl
add
leave
cmpsb
faddl
rol
add
dec
addl
lcall
rclb
jo
loope
mov
stos
mov
insb
jno
mov
inc
add
movsb
cwtl
pop
push
and
sbb
pushf
call
push
mov
dec
mov
daa
sbb
lods
add
mov
or
pop
fdivr
pusha
addr16
faddl
pop
test
add
clc
js
push
cltd
test
sub
pop
xchg
or
mov
mov
xchg
js
insl
xlat
adc
and
add
xchg
cmc
test
pop
xchg
xor
and
in
dec
insb
inc
ret
sarb
arpl
mov
shll
aad
bound
scas
jae
les
inc
into
or
or
xchg
xor
inc
pop
add
jns
push
mov
test
or
pop
iret
rclb
push
or
scas
fadds
jo
leave
mov
sub
jbe
pop
imul
dec
sub
mov
loop
nop
dec
mov
aam
mull
dec
test
mov
cmpsw
jbe
cwtl
cmp
std
pop
xor
sahf
push
inc
add
gs
insb
aas
mov
movsb
loopne
mov
test
cltd
push
sbb
inc
mov
ljmp
jnp
add
pop
cmp
sub
lret
roll
arpl
into
inc
in
loope
push
and
dec
repnz
pop
fbstp
subl
dec
mov
mov
arpl
lcall
in
dec
cmp
iret
repnz
jle
or
pop
dec
and
cvttps2pi
mov
arpl
xor
mov
adc
icebp
mov
dec
and
test
lods
test
je
or
inc
cmc
and
aaa
inc
pop
icebp
add
ret
jo
add
scas
mov
sbb
in
orl
pop
cmp
imul
arpl
test
ja
cmp
pop
jg
mov
xchg
mov
fwait
dec
jg
ret
push
inc
ja
bound
pop
add
stc
jne
push
sbb
leave
loopne
fs
jo
stos
pop
mov
xchg
pop
lods
std
lods
xor
int3
cmp
pushf
pushf
loope
mov
loop,pt
pusha
or
out
f2xm1
xor
in
dec
push
xor
movsl
clc
xor
jp
aad
cmpsb
stc
int3
jle
test
add
into
cld
mov
dec
aad
rcrb
mov
dec
adc
pop
push
or
ret
sahf
fnstenv
push
xchg
leave
cs
pop
adc
mov
mov
xchg
shlb
bound
sub
ds
cs
sbb
add
loopne
stos
pop
xchg
sbb
xor
lods
xchg
ret
cld
jnp
jb
xor
cmp
cltd
cld
xor
push
icebp
aaa
adc
lahf
add
jl
push
iret
fsubrl
imull
xor
inc
scas
push
xor
inc
sub
push
cmp
rcl
adc
and
mov
push
mov
jb
test
sbb
xor
insl
insl
xchg
mov
mull
inc
inc
bound
mov
cmp
pslld
loop
cmp
push
or
mov
flds
rcrb
pop
sti
ss
jle
dec
loop
mov
jae
inc
sahf
mov
ljmp
inc
dec
adc
lods
jne
pop
jno
rcr
lock
pop
mov
mov
sub
mov
sbb
clc
and
jno
add
push
xor
add
jae
and
out
loopne
xlat
or
mov
std
push
sti
inc
cmp
pop
adc
mov
or
repz
sbb
dec
sbb
outsl
pop
rolb
outsb
ficoms
adc
out
arpl
das
enter
idivb
shrl
scas
into
loop
movsl
jnp
outsl
push
cmp
jle
div
arpl
fsub
mov
lods
and
pop
scas
ja
xor
subl
add
or
jbe
jb
cli
fninit
lcall
neg
stos
in
xchg
in
xchg
out
or
push
in
sub
add
imul
xor
lret
cmp
testl
lock
xor
jmp
pop
adc
push
dec
xchg
sub
or
mov
mov
fwait
cmpsb
outsb
inc
sub
cmp
jle
push
test
lods
ret
push
and
shlb
cmp
push
fstpl
jg
test
push
mov
ret
and
cmp
shrl
sub
push
add
out
shl
movsb
mov
pop
mov
cltd
in
mov
mov
pusha
shll
mov
jp
sahf
inc
jg
lds
sbb
lcall
mov
jno
fcomps
aam
les
test
push
in
movsl
jae
int3
mov
jge
stos
sbb
cmp
mov
stc
aaa
aam
mov
or
int
jp
add
leave
fstpt
ja
aad
mov
mov
jge
sub
mov
cmp
jle
call
and
and
mov
ja
jp
push
push
imul
test
pusha
std
orl
loope
mov
cmpsb
jle
psubw
jp
nop
push
loopne
fs
and
pop
mov
xor
add
sub
mov
dec
sub
pop
into
mov
mov
sbb
in
ss
das
int
jnp
dec
dec
iret
cld
ljmp
xlat
xlat
xchg
push
lcall
loopne
ret
inc
mov
in
dec
movsl
fcmovu
ret
jae
outsb
cmp
faddp
and
jno
bound
and
mov
mov
enter
and
js
mov
pop
push
lods
and
out
mov
cmp
mov
aaa
mov
aas
pop
mov
insb
push
inc
jno
xor
addr16
shr
aam
ret
aas
xor
loop
xor
dec
adc
pop
movsb
cmp
rcrl
jge
pop
pop
fcoml
lea
inc
lea
repz
mov
fisubl
shlb
das
pusha
push
push
aam
frstor
js
push
pop
out
gs
jbe
pop
or
sub
stos
dec
mov
push
rcrb
lahf
fildl
pop
add
and
test
cmpsl
lret
pop
sbbb
jo
ja
mov
das
add
xor
xchg
inc
or
dec
shlb
imul
xlat
xlat
push
mov
mov
dec
popf
leave
cmp
repnz
out
jl
mov
repnz
sbbb
hlt
mov
sbb
pop
insl
cmc
jno
test
inc
push
popl
or
mov
sbbb
call
out
addl
sub
mov
hlt
stc
insl
addr16
jp
mov
mov
cmp
mov
adc
cmp
xor
and
loope
push
cmp
add
idivl
sbb
aam
push
sti
dec
adc
sbb
fwait
cmp
xor
pop
jmp
into
xchg
sub
mov
mov
mov
sbb
and
loop
adc
mov
adc
mov
adc
sub
enter
adc
ss
xchg
or
and
mov
sub
cmp
popa
xchg
pusha
cmp
adc
or
mov
adc
cmp
sbb
daa
popf
cwtl
out
or
rcrb
lret
loopne
xchg
xchg
mov
lcall
push
mov
xor
push
inc
xlat
pop
hlt
and
imull
in
mov
adc
pop
and
lahf
inc
loopne
xor
xlat
test
test
push
out
aaa
jno
insl
aas
or
popf
sahf
lea
sbb
test
test
les
cmp
shl
mov
xor
mov
cs
les
sbbb
mov
adc
add
jl
fwait
shll
out
push
loopne
test
or
jnp
shl
repnz
scas
mov
cmpsl
popf
jge
add
rol
iret
push
scas
push
xor
sbb
and
sahf
mov
lcall
pop
lret
mov
push
sarl
and
lret
pop
xor
push
cmp
sbb
sub
pop
mov
mov
repz
add
mov
mov
and
popf
or
rcll
adc
push
or
test
sub
popa
scas
mov
mov
fimuls
cmp
xchg
push
mov
push
pop
lds
add
and
sahf
jno
leave
sub
mov
sbb
clc
popf
inc
mov
es
lret
and
pop
xor
std
sbb
mov
movsb
ja
cmc
into
test
sub
push
xchg
jle
leave
pop
push
and
mov
mov
outsl
and
rorl
jbe
sub
mov
xor
repz
push
xchg
and
adc
xchg
movsl
cmp
fldl
and
sub
pop
or
shrb
ficoml
push
das
aaa
push
fisttps
adc
adc
icebp
jl
sub
or
xor
cmp
push
out
movsl
pop
pop
push
ljmp
ds
jge
fldl
jo
mov
xchg
xchg
cmp
jp
dec
add
sti
je
lcall
int3
hlt
xchg
cli
mov
das
lock
fidivrs
push
adc
xchg
shrl
or
das
aad
scas
pop
clc
cmc
xor
jo
add
call
and
add
fildl
addr16
int
jl
es
cmp
jno
jp
xor
mov
iret
int3
in
hlt
pop
cmp
sub
scas
data16
push
vmovntpd
outsl
cmp
xchg
js
mov
das
fldcw
xor
cmc
out
mov
fstl
jge
xchg
fs
add
lret
pop
jle
stos
imul
popf
leave
leave
or
es
shrl
push
xor
mov
and
loop
sbb
insb
sub
and
lcall
fnstenv
test
pop
xor
imul
mov
test
xor
aaa
jne
xor
repz
adc
cmp
loop
or
pop
add
notb
add
divl
jb
shr
sbb
movsl
cmpb
adc
and
xchg
fstpl
movsl
in
repz
xchg
test
mov
std
push
fisubl
pushf
pop
insb
enter
in
shll
loope
or
fistpll
cmpb
jno
popl
mov
test
mov
cmp
int
cmp
push
xchg
sbb
push
std
add
rorl
sbb
cwtl
fdivrp
adcl
mov
pop
sbb
test
sub
test
add
cmpb
xor
mov
jmp
loop
aas
addr16
imul
mov
daa
cmpsl
xchg
fiadds
das
cltd
fsubs
push
jns
and
inc
cmp
loope
scas
repnz
ljmp
and
leave
movsb
jl
cmp
adc
push
fcoms
sti
push
jp
int
push
jg
cmp
jno
test
imul
add
push
test
jmp
setle
loope
push
fcom
cmp
in
sub
in
cmpsb
jnp
mov
add
cmovne
int
lret
sub
dec
outsl
fdivr
lds
push
es
dec
sub
int3
les
xor
xchg
lret
scas
es
dec
lret
cmc
jns
xchg
sarb
pop
mov
and
pop
cmc
cmpb
fisubrs
sti
int
js
mov
inc
dec
xchg
cmp
ret
loop
xor
jne
test
lahf
xor
sub
popa
push
inc
icebp
pop
pop
decl
mov
pop
movsb
push
pop
push
test
out
push
pop
push
push
and
jns
sub
xor
jno
dec
mov
insb
ja
mov
mov
icebp
dec
jo
xchg
xchg
dec
push
sbb
lcall
pop
mov
in
daa
cmp
outsb
mov
test
sub
sub
or
mov
incl
xor
mov
mov
sub
inc
insl
divb
mov
push
inc
push
sahf
add
push
sbb
mov
add
jg
jb
arpl
rcll
cmp
lret
rcrb
push
cmp
fisubs
mov
inc
lods
jne
pushf
lea
in
jae
pusha
movsb
rcl
push
inc
dec
jnp
mov
fldcw
push
or
adc
dec
xchg
rcr
mov
sub
pop
test
push
dec
sbb
pop
jmp
insb
or
jl
mov
adc
ljmp
xor
mov
xchg
fsubl
aad
in
loope
mov
icebp
or
xchg
fcmovu
cltd
dec
bound
push
push
cmpsb
loop
in
push
imul
cwtl
sbb
jno
pusha
xor
inc
add
loop
rolb
cld
subl
mov
dec
mov
pop
adc
movsb
loop
jb
stos
jg
pusha
mov
mov
fwait
ljmp
add
addl
out
cmp
ja
sub
push
and
in
popa
aaa
jo
cmp
xchg
pop
dec
and
es
ret
push
xor
xchg
ret
pop
cli
rcr
leave
inc
cwtl
leave
xchg
sbb
mov
pop
rcrl
iret
fnstcw
out
jecxz
fdivs
sbb
std
les
inc
mov
push
jle
stos
rorl
and
and
bound
cmpsb
push
jne
movsb
jg
imul
loopne
je
test
lret
mov
jecxz
inc
add
das
pop
or
add
sbb
mov
lock
mov
or
mov
scas
xchg
pop
cli
mov
pop
data16
into
add
sub
icebp
add
and
ja
mov
cmp
mov
or
push
cmp
hlt
xchg
cwtl
bound
push
mov
push
xor
in
lret
pop
mov
and
into
rolb
mov
aas
xchg
cwtl
xchg
mov
cs
movsb
cmp
shll
insl
daa
inc
shll
dec
mov
inc
inc
dec
cmp
inc
inc
cmp
mov
cs
inc
call
pop
andl
stc
dec
divb
repz
jecxz
mov
add
rorl
sbb
in
jmp
repz
arpl
daa
movsb
sbb
adc
and
arpl
mov
leave
negl
out
test
mov
sub
cld
subb
lods
mov
or
adc
imul
and
leave
jae
xchg
mov
sarl
mov
jnp
mov
dec
mov
push
in
enter
vmovaps
mov
out
push
ja
dec
mov
aas
jg
adc
test
adc
inc
cmp
lahf
icebp
mov
jae
cltd
dec
xlat
cs
in
push
dec
xchg
sub
inc
mov
inc
repnz
mov
icebp
lock
push
dec
jo
xchg
push
mov
push
xchg
mov
mov
cltd
cs
fdivl
psadbw
add
jle
mov
scas
stos
adc
sahf
add
out
into
inc
sbb
mov
fs
push
adc
push
inc
xor
call
loope
add
sub
add
arpl
adc
pop
insb
sbb
fcoml
mov
pop
adc
hlt
xor
lods
imul
push
loopne
or
test
mov
dec
sbb
repz
into
inc
mov
xchg
mov
fdivl
jge
insb
daa
sarb
mov
inc
push
repnz
mov
xchg
movsl
xor
mov
nop
xor
inc
fsubs
scas
outsl
mov
inc
rcll
lret
cmp
mov
in
mov
xchg
aam
loop
addr16
mov
aas
pusha
adc
sub
or
add
sahf
xor
into
pop
adc
cmp
jne
outsl
push
jle
pop
test
cmp
movsb
pop
sbb
fadds
lock
add
out
and
jae
pop
inc
std
pop
imul
mov
sub
push
xor
leave
sbb
push
mov
shrl
icebp
imul
or
clc
or
mov
add
push
push
shll
outsl
ficompl
add
mov
js
mov
inc
ljmp
ss
fcoml
addr16
sahf
mov
sbb
push
movsb
lret
cltd
enter
push
adc
lret
ljmp
xor
inc
scas
mov
test
mov
push
dec
mov
inc
mov
adc
cmp
sbb
scas
push
push
cmc
leave
add
push
push
adc
aad
push
push
jno
or
fsubrl
push
notl
push
clc
gs
frstor
movsb
lock
int3
lods
rorl
or
shll
ret
mov
jne
pop
xor
mov
or
inc
cmpsl
jmp
and
call
push
adc
fsubl
jecxz
andb
and
mov
rcrl
push
pop
loope
adc
pop
mov
add
shlb
mov
scas
mov
cwtl
add
inc
add
mov
fmul
push
jge
push
divb
icebp
std
pop
cmpsl
hlt
mov
xchg
into
pop
outsl
mov
and
inc
lret
and
or
sbb
stc
out
mov
cmp
mov
adc
mov
daa
stos
bound
sarb
jb
fldt
lcall
adc
mov
mov
scas
cmp
sub
sbbl
iret
sub
in
lret
fisttps
js
push
int
mov
aas
repz
jno
stc
mov
jbe
add
xlat
imul
movsb
xchg
lods
dec
sub
mov
scas
push
jo
or
lea
push
cmpsl
mov
mov
pop
lds
punpckhwd
mov
mov
sbb
cmc
in
xor
xchg
ja
outsb
xchg
lret
fbstp
jp
add
pop
dec
inc
mov
jno
jge
rcll
pop
rclb
mov
into
inc
repnz
fs
push
repnz
lahf
mov
jae
sarb
mov
pop
aas
xchg
adc
imul
out
xchg
jmp
lods
sub
mov
push
outsl
push
fistpl
add
mov
mov
movsl
dec
mov
in
xor
push
leave
add
xchg
mov
adc
adc
fcmove
jno
add
mov
push
inc
ds
xchg
sub
jmp
jp
stos
mov
je
sbb
xor
pop
jnp
inc
loop
lea
mov
call
in
push
sbb
pop
add
clc
mov
inc
or
cwtl
mov
xor
jnp
and
cmp
js
les
push
dec
cmc
jns
stos
gs
mov
ret
mov
sbb
arpl
push
in
pop
ss
dec
mov
jae
pop
popa
mov
dec
lds
mov
rcrb
adc
push
aaa
pop
jnp
or
dec
cltd
sbb
arpl
pop
sbb
push
insl
stos
outsl
push
adcb
scas
sbb
in
das
sbb
mov
jno
add
les
in
cmp
fs
mov
or
dec
shll
nop
sub
lock
out
cmp
outsb
je
imul
mov
popa
in
push
test
or
pop
and
jnp
mov
jl
pop
push
and
js
mov
scas
sub
adc
scas
and
inc
adc
mov
cmc
imul
out
jg
xchg
inc
call
sahf
scas
cmp
das
xchg
sub
cmpsl
fstpt
aad
inc
dec
mov
and
push
stos
stc
sub
xchg
xchg
xchg
testl
or
push
dec
pop
pop
jnp
sub
adc
ret
pop
loop
push
jbe
ljmp
cmpsb
or
pop
ficompl
dec
enter
fisttps
addr16
or
sbb
xorb
dec
xchg
stc
xchg
dec
inc
add
or
cld
inc
scas
xor
lahf
push
mov
push
loope
cli
and
std
push
out
cmp
mov
ret
mov
sbb
adc
fs
sti
add
push
std
shlb
addr16
fldenv
orl
mov
mov
ja
imul
mov
sahf
daa
mov
ret
inc
pop
add
add
inc
sbb
xchg
lcall
pcmpgtb
mov
stc
lret
add
and
in
push
clc
dec
add
add
sbb
rcll
sahf
pop
dec
daa
fnstsw
bound
cmp
movsb
out
add
xor
movl
aaa
dec
mov
aad
iret
lods
cmp
daa
fisubrs
out
sub
pop
cmp
stos
and
ret
inc
cld
and
in
jg
ss
adc
inc
xchg
imul
rcrl
jle
in
sarl
adcl
les
out
dec
mov
jp
xchg
jmp
sub
ja
push
rcr
or
push
lcall
iret
int
loope
pop
imul
dec
lret
jno
inc
xlat
cmp
add
mov
cwtl
mov
mov
arpl
aaa
in
scas
pop
daa
sub
sub
mov
call
in
les
mov
clc
push
pop
pop
gs
cmp
aam
or
xchg
pop
or
lahf
ja
push
and
jle
rcr
cwtl
or
mov
fdivr
sbb
decl
stos
sub
and
mov
int
jp
mov
ja
and
sbb
iret
lock
mov
cli
add
mov
shr
mov
sbb
ds
test
sub
fldt
shll
jo
adc
jnp
push
xchg
pop
push
dec
push
mov
xchg
icebp
fbstp
cs
sbb
and
mov
rorl
pop
push
push
jne
sub
or
mov
inc
sub
repz
cmp
xor
imul
mov
or
adc
jecxz
fwait
or
mov
int3
out
cmp
sub
add
negb
es
jmp
das
enter
aaa
mov
loopne
subl
arpl
cs
movsl
pop
rorl
rcl
add
adc
ds
enter
sbb
add
mov
push
lea
add
pop
jns
cmc
mov
mov
ret
cs
out
sub
decl
leave
jge
sbb
movb
pushf
mov
icebp
xlat
jnp
sarl
icebp
jmp
lcall
sub
or
jns
fwait
inc
hlt
mov
lcall
push
mov
fsubl
mov
out
daa
fs
testb
and
push
add
aam
into
push
cli
mov
sbb
push
int3
push
jle
subl
pop
pop
xchg
repz
es
adcb
mov
dec
push
scas
mov
xchg
movsl
jns
pop
dec
scas
sbb
or
sub
adc
push
gs
ret
fdivr
and
or
cmp
addr16
pusha
stos
xchg
enter
ret
clc
mov
roll
inc
sbb
fnstenv
jl
inc
xchg
mov
push
or
mov
pop
add
mov
cmp
jnp
jb
xchg
push
das
repz
jne
add
and
xor
loopne
pop
pop
out
arpl
cmpsb
inc
int
adc
das
std
jecxz
addb
stc
into
sbb
into
mov
aad
mull
jle
push
in
lods
xor
out
scas
stos
push
mov
mov
das
sbb
lods
push
push
sub
adc
imull
mov
push
loopne
filds
ds
hlt
sub
or
add
fwait
cli
mov
lahf
push
dec
sub
scas
mov
add
lock
pop
xor
mov
dec
fstpt
pop
jle
jno
cmp
push
aad
and
push
sahf
mov
cs
xchg
mov
add
gs
into
cmp
or
xchg
jno
xor
lock
sbbl
jae
cmp
inc
inc
dec
int3
mov
lds
imul
test
movsl
push
das
clc
xchg
mov
sub
cmp
pop
cwtl
and
inc
ret
out
and
sbb
push
inc
push
and
lcall
jp
or
cmc
mov
call
sbb
mov
std
dec
daa
hlt
fwait
jge
cld
scas
cmpsl
bnd
imul
adc
imul
inc
mov
xor
mov
andb
xorb
arpl
loope
inc
ds
sub
mul
xor
pushf
xchg
arpl
mov
cmpsb
aad
dec
adcb
out
mov
jnp
mov
enter
insl
mov
mov
scas
cmp
mov
jmp
out
xchg
xchg
push
loope
jae
js
push
cs
test
lahf
cwtl
cs
jl
pop
sub
call
inc
out
scas
mov
ja
movhps
lret
sbb
xchg
outsl
jo
jns
sub
movsb
repnz
pop
mulb
lock
inc
adc
cmp
xchg
xchg
cmpsl
sbb
les
mov
inc
inc
and
push
jo
les
out
dec
or
out
xor
int3
mov
mov
enter
sbb
sub
shrl
popf
push
sub
outsb
jl
pushf
mov
fcomps
test
sarl
adc
adc
lret
pop
daa
add
sub
jnp
insl
dec
in
popf
cs
or
cmpsb
hlt
aad
sub
sub
adc
xchg
sbb
shrb
dec
xchg
les
pop
pushw
out
cmp
inc
lods
jae
sub
outsb
add
xlat
test
loopne
xor
sub
aad
popa
and
mov
movsb
addl
lret
jns
cld
cmp
bound
and
mov
fs
jnp
cmc
ret
scas
adc
in
inc
call
xor
mov
ja
sbb
mov
ljmp
pop
pop
out
and
aam
mov
pop
mov
subl
sti
push
xor
loop
out
cmp
fldlg2
std
jmp
dec
add
inc
xchg
cld
mov
jo
pop
push
mov
mov
adcl
ret
pop
push
xor
xchg
adc
jne
icebp
xchg
insl
in
xchg
movsl
xchg
test
cs
push
add
jae
push
adc
iret
sbb
cmpsb
sub
or
mull
cmp
shrb
xor
mov
mov
sbb
call
push
lret
xchg
xchg
enter
xor
mov
movsl
or
jge
sbb
mov
sbb
dec
stc
mov
push
shl
mov
pop
scas
outsb
out
pop
fnop
jge
je
xor
push
pop
jb
pop
mov
sbb
dec
in
and
cmp
sarb
xchg
test
dec
icebp
call
inc
xchg
in
cmpsl
insl
outsl
and
ljmp
add
insl
push
push
shlb
jmp
andb
outsb
and
push
add
dec
push
pop
cmpsl
and
add
adc
pop
xchg
imul
inc
or
and
sbb
imul
data16
mov
inc
icebp
dec
xchg
hlt
mov
out
or
ret
jb
jae
std
pop
adc
push
mov
das
lods
sub
push
jecxz
mov
btr
xor
stos
mov
jo
call
idiv
cmc
cwtl
insb
mov
stos
repz
xor
cmp
call
xor
sahf
sahf
xor
dec
jnp
dec
push
xlat
push
mov
xor
mov
jo
push
daa
out
xchg
cmp
das
sbb
mov
pop
pop
jmp
push
int
adc
xor
pop
dec
xor
sahf
adc
int
in
mov
jge
pushf
lret
pop
jae
push
ljmp
movsb
sub
frstor
aad
repz
cld
jecxz
cltd
fcomp
hlt
xchg
hlt
mov
jno
outsb
pop
inc
out
call
jmp
push
inc
jns
test
sahf
movsl
cld
or
pop
jne
movsb
cmp
pop
xchg
mov
push
mov
cmpsb
push
ljmp
add
mov
call
scas
xchg
mov
jmp
mov
insl
cmpsl
jno
mov
mov
aam
stos
sub
push
jg
mov
test
jp
mov
pop
lcall
pusha
sub
pop
cmp
js
mov
push
cmp
mov
xchg
fwait
ja
dec
cmp
add
dec
cmc
fistpll
sbb
adc
mov
xor
scas
ja
leave
test
sbb
movsl
je
pop
imul
stos
scas
mov
das
mov
add
loope
mov
cmp
and
jns
xor
ja
lods
popa
cmp
popf
mov
pop
loope
shrb
add
stc
test
cmp
and
mov
mov
js
scas
cmpsb
add
iret
pushf
pusha
aaa
stc
js
cmp
and
xor
mov
adc
int3
lret
int3
xchg
and
inc
jl
icebp
push
movaps
mov
jnp
call
test
mov
dec
mov
out
pop
adc
jo
out
bound
mov
lods
push
shl
jl
lods
xchg
addr16
orb
mov
mov
in
fildll
jl
xor
cmpb
cmp
ror
pop
push
mov
test
dec
stos
ficoms
out
clc
in
mov
repnz
out
mov
cmpsl
je
mov
les
sub
lds
ljmp
xchg
jp
inc
xor
call
pminsw
mov
call
rcll
cs
mov
pop
inc
xlat
daa
leave
xchg
lret
orb
fiadds
add
shl
enter
sarl
push
add
xor
mov
pop
sub
adc
xchg
jecxz
pop
add
xor
cltd
xor
mov
fstps
push
loope
jmp
dec
clc
ret
or
jge
mov
adc
xor
cltd
out
xchg
push
dec
jge
aam
int
stos
xor
mov
ret
dec
ficoms
imul
push
xor
jae
mov
mov
sti
mov
push
jge
inc
and
movsl
addr16
mov
xor
loopne,pn
jb
adc
jnp
jns
lcall
cmpl
push
sub
add
mov
inc
es
xor
rcrl
orl
push
jnp
jb
adc
int3
or
stos
mov
loop
push
fsts
jecxz
inc
push
and
repnz
mov
data16
add
jns
mov
jecxz
les
rcrl
jne
add
insl
jle
sbb
inc
leave
lahf
inc
fnsave
mov
loope
mov
mov
imul
push
inc
gs
mov
xchg
popa
add
cwtl
test
or
xchg
and
fsubr
test
push
loopne
sbb
aam
lods
xchg
enter
cwtl
mov
mov
jb
popf
leave
push
jb
ljmp
adc
fmuls
pop
mov
ret
cmpsb
ret
imul
stos
lret
popf
mov
sub
loop
cli
inc
adc
xchg
lahf
mov
test
and
scas
sub
pop
mov
in
jno
pushf
sub
movsb
je
sbb
cmp
jns
dec
test
call
sub
inc
lods
mov
xlat
pop
inc
stos
cmp
fisubrs
jp
in
imul
push
loopne
pop
das
es
push
mov
test
mov
pop
pop
mov
and
mov
jge
rcrl
dec
mov
insl
lret
push
pop
lahf
cli
jo
movsb
stc
test
mov
xorl
test
into
divl
mov
shll
adc
pusha
addr16
imul
subl
out
imul
fldt
imul
cmp
pop
mov
mov
dec
cmp
push
xchg
repnz
lods
inc
orb
and
jnp
jecxz
mov
daa
and
mov
scas
mov
mov
or
adc
and
xor
add
ss
fs
pop
lods
rorb
data16
inc
imul
sbbb
xchg
and
fwait
sbb
dec
lahf
or
mov
push
cmp
rolb
insb
pop
lahf
adc
xchg
adcl
push
jbe
into
mov
adc
imul
and
sbb
pop
test
dec
sub
dec
dec
add
jae
movsb
jo
cmp
aam
xor
shlb
mov
test
pop
mov
pop
seto
jb
pop
pushl
out
xor
mov
das
aas
out
dec
outsb
shl
test
dec
ja
shrb
cmc
call
sbb
dec
and
aaa
push
ljmp
xor
push
push
ljmp
bound
mov
xchg
dec
pop
sbb
loop
mov
insl
daa
nop
popf
or
push
stc
adc
cld
mov
mov
xchg
jnp
loop
push
sbb
test
xchg
add
add
sbb
pop
and
in
rol
sub
inc
bound
subl
jb
mov
adc
xchg
ja
mov
dec
icebp
cmp
test
push
test
jl
fdivl
cwtl
into
in
sub
inc
sbb
daa
push
mov
pusha
xchg
mov
cwtl
addr16
xchg
mov
ficompl
pop
and
jg
pushf
dec
cli
hlt
pop
jb
out
dec
stos
leave
hlt
push
cld
dec
mov
xchg
arpl
xlat
jae
sti
cmc
int3
or
jnp
adc
notl
adc
or
xchg
testb
fimull
into
aaa
sbb
fistl
cwtl
stos
ja
pusha
xor
and
adc
jg
mov
fsubrp
push
fildll
xchg
xchg
insl
imul
push
clc
ret
rolb
pop
cmp
and
and
inc
stos
jge
rcl
add
test
leave
gs
bound
mov
iret
xorb
outsb
ds
pop
lock
pop
inc
pop
jl
into
add
lcall
add
mov
hlt
mov
mov
jb
ds
push
sub
xor
xchg
cmp
rcll
out
xorb
xchg
rclb
mov
sti
sbb
adc
adc
fwait
stos
call
or
std
lahf
push
fidivl
fs
mov
jmp
cmp
shl
in
inc
sti
dec
inc
xlat
imul
roll
stos
and
or
xchg
and
call
int
repz
scas
sub
and
repz
shrb
jg
xor
mov
xor
or
dec
mov
hlt
and
sahf
xchg
inc
lahf
cltd
adc
mov
sbb
xor
xor
std
dec
into
jne,pt
and
inc
into
mov
inc
dec
and
addl
inc
fucomp
add
xchg
aaa
or
mov
dec
incl
xchg
fiaddl
scas
push
rcl
faddp
clc
mov
xlat
hlt
test
scas
addl
stos
xchg
fidivrs
pop
sbb
xchg
hlt
mov
cmpsb
aas
test
outsb
jno
mov
int3
inc
jle
mov
ret
shr
lock
adc
mov
cmp
mov
mov
jnp
mov
lcall
fwait
jns
adc
sahf
out
mov
pop
inc
mov
stc
cmp
adc
addr16
mov
lods
dec
sub
mov
icebp
lcall
cld
loop
ss
cmc
ja
or
mov
ret
fwait
rcll
or
cmp
sbb
clc
imul
and
orl
cld
ljmp
leave
js
mov
test
cmp
pop
ret
adcl
ret
test
inc
push
loopne
push
pusha
cmc
and
add
ds
adcb
or
jle
dec
mov
jne
clc
inc
dec
andb
imul
popw
mov
negb
add
jno
pop
push
cld
mov
clc
imul
push
mov
jae
dec
bswap
jl
or
jbe
fcmovnbe
and
out
xor
sbb
arpl
test
mov
pushf
sti
aad
out
sbbb
jl
pop
pop
iret
mov
and
jae
mov
mov
in
pop
or
mov
int3
in
sbb
sub
ja
sahf
das
and
pop
nop
decl
insb
xor
vpshld
push
outsl
adc
jns
ss
push
aam
jp
pop
lret
notl
xchg
dec
std
cmp
lea
ds
mov
mov
addb
pop
cmp
inc
jg
inc
in
mov
jnp
jmp
xchg
pop
jnp
xor
xchg
push
mov
sbb
add
mov
push
dec
jns
mov
xor
or
movq
xchg
aam
je
xor
sbb
add
pusha
sub
mov
sbb
mov
vmulss
or
stc
mov
cltd
lahf
pop
pop
mov
sub
mov
jb
dec
xchg
or
adcb
rcr
pop
nop
adc
imul
scas
das
mov
push
lret
insl
xchg
cmp
nop
or
fistpll
sar
invlpg
mov
outsl
je
pop
pop
mov
push
sbb
push
adc
pop
hlt
pop
mov
outsl
push
adc
sub
cmp
inc
pop
sub
mov
cmp
lods
scas
pshufw
push
gs
pop
inc
fisubrs
mov
test
fadds
add
jno
loopne
xchg
dec
stos
lret
outsl
pop
adc
mov
fsubs
mov
push
xlat
push
lahf
fiaddl
pop
pusha
sbb
inc
push
sub
popf
and
xchg
dec
mov
add
aam
stc
xchg
and
push
cld
adcb
inc
fs
test
adc
xor
xchg
inc
mov
repnz
faddl
jne
inc
pop
pop
cld
in
loope
jg
in
out
fisubs
sbb
jo
ss
popf
dec
shrb
roll
lea
enter
add
adc
repz
sahf
mov
adc
and
sbb
sub
sub
cwtl
call
inc
jbe
xchg
fs
aaa
pop
or
adc
iret
loop
mov
scas
mov
mov
cmp
mov
int3
aas
fdivs
jae
outsl
or
adc
dec
xor
sub
sbb
icebp
inc
fsts
icebp
xchg
sub
imul
std
rcl
arpl
mov
add
push
ja
fxch
xchg
push
mov
rcrb
subl
lahf
sar
mov
in
dec
mov
addr16
mov
imul
pop
movsl
ds
xchg
inc
loopne
push
sub
jbe
jnp
and
push
les
es
lea
dec
icebp
pusha
test
pop
test
or
popf
pop
iret
adc
repnz
mov
or
insb
js
gs
jle
pop
shlb
clc
into
mov
pop
mov
push
jne
jo
insl
jle
aas
pushf
jo
xor
push
adc
les
out
sbb
sub
or
jns
xchg
stos
mov
jmp
iret
jns
jg
lret
fnstenv
in
popa
addl
mov
dec
lods
push
xchg
jb
inc
cmpsl
mov
pop
clc
out
negl
jb
insb
or
jno
jecxz
push
repnz
mov
push
pop
or
dec
inc
add
iret
jne
dec
sbb
and
repnz
xor
push
push
scas
and
testb
jg
add
imul
jecxz
in
jno
jmp
mov
or
iret
cld
rorb
mov
xchg
out
aam
push
sarb
cmpsb
movsl
mov
mov
sub
xchg
or
push
adc
and
scas
inc
xor
cwtl
dec
mov
sub
inc
pop
mov
push
imul
xor
cmpsb
cwtl
daa
and
stc
sti
or
out
not
inc
xor
push
mov
nop
cmpsl
inc
stc
push
insl
cmp
mov
ds
xor
mov
imul
jmp
push
pusha
mov
jno
repz
mov
cmp
jge
mov
andb
push
push
test
cmp
adc
fadds
xchg
add
pushf
pop
test
push
pusha
push
fsubp
outsb
adc
fidivrs
jp
addr16
push
mov
push
add
iret
xor
dec
scas
pusha
cli
and
out
jge
lock
nop
lea
mov
cld
push
pop
cltd
mov
xlat
or
jg
ficoml
xchg
jnp
out
shll
push
insl
cmp
adc
push
or
mov
inc
sbb
sub
pop
pushl
aam
sarl
pop
dec
dec
sti
cmp
or
cmp
mulb
or
cmp
lea
jp
cmp
push
lret
mov
bound
in
dec
loop
mov
mov
or
mov
xor
outsl
fdiv
push
xchg
repz
shll
inc
push
fxtract
lahf
je
push
dec
xor
jns
fucomip
ss
sti
dec
lret
out
mov
pop
out
cltd
cmpsl
mov
negl
xchg
out
pop
lcall
jp
aad
arpl
mov
mov
int3
pop
mov
pop
xor
pop
cmpsl
pop
imul
arpl
mov
in
push
ja
out
std
and
push
addr16
pop
xchg
push
hlt
std
inc
add
sbb
or
pop
push
mov
fidivl
xor
mov
or
xchg
push
jb
test
aaa
imull
inc
add
fisubs
lods
push
fidivl
sub
add
mov
mov
xor
xlat
and
lret
mov
ljmp
sbb
sbb
faddl
popf
in
outsl
cmpsl
clc
mov
xor
inc
pop
insb
mov
cli
insl
ja
fucomi
xchg
jo
mov
outsl
pop
dec
mov
sub
fstps
cmp
inc
aam
jb
sbb
sub
xchg
xor
pushf
arpl
insl
dec
and
fcompl
ds
in
ljmp
idivb
and
pushf
lahf
movsl
push
sbb
push
fcoms
mov
xchg
xchg
and
popa
pop
loope
aaa
jne
insb
sbb
mov
into
pushf
mov
adc
rolb
jae
xor
mov
hlt
adc
push
imul
int
movsb
pushl
sbb
clc
push
xchg
insl
cmp
pusha
in
int3
repnz
jnp
or
jns
jno
imul
outsl
sub
inc
mov
and
dec
bound
dec
pop
xchg
sbb
jl
mov
ja
jno
stc
in
loopne
cmp
inc
jns
enter
pop
push
hlt
push
mov
push
mov
and
xchg
sub
adc
fs
ljmp
add
cwtl
sub
cli
xchg
mull
addr16
ud0
cmp
iret
jae
pop
inc
mov
xchg
pop
in
dec
dec
fcomi
sub
mov
inc
scas
sbb
popf
adc
mov
repnz
adc
and
fnsave
mov
inc
xorl
push
jb
dec
mov
std
out
pop
push
incl
pop
data16
xchg
sbb
lock
jmp
in
rcr
les
addr16
inc
ds
xor
jnp
pusha
sbb
bound
insl
or
and
rclb
inc
mov
scas
pop
in
lea
lea
xchg
or
adc
mov
add
fstl
cmc
out
js
popa
iret
loop
jo
ret
dec
adc
mov
dec
popa
into
in
adc
mov
jae
and
shl
cltd
popa
subl
lahf
int3
cltd
xchg
cmc
daa
fsubrp
mov
dec
leavew
movsl
shrl
dec
lret
int
inc
mov
mov
sub
sub
jnp
outsl
pop
fldt
out
test
pop
cmp
rol
cmc
repnz
aad
cmc
or
pop
imul
arpl
int
orb
adc
shll
xor
add
push
pop
call
fs
pop
aaa
or
dec
shr
add
loope
and
jge
daa
test
adc
fsubr
jno
mov
inc
add
fistpl
mov
inc
lea
out
mov
data16
mov
push
stos
push
lea
popf
lods
int
lods
pop
xlat
fists
sbb
inc
add
rcll
mov
mov
adc
push
mov
push
push
pop
fstps
les
enter
cwtl
jecxz
push
xchg
lods
js
mov
dec
repnz
fisttps
mov
ja
jge
mov
repnz
movsl
cmp
int
pop
stc
cli
or
xchg
push
mov
xor
xchg
add
addr16
shlb
leave
in
xchg
call
xchg
test
push
xchg
scas
push
jo
cli
add
ljmp
cwtl
movsl
call
ret
lcall
push
pop
push
sub
push
decb
outsb
push
cmp
test
cmp
es
pop
or
push
adc
icebp
pop
xor
lea
stos
ret
and
adc
mov
push
jnp
pop
fistpl
fs
testl
lock
adc
pusha
mov
bound
cmp
mov
es
adc
mov
inc
sub
je
cmpsl
testl
adc
mov
int
aas
and
out
push
test
imul
jmp
cltd
iret
out
cld
xor
xor
into
add
xor
hlt
int
mov
out
push
out
jo
in
adc
pushf
jmp
in
adc
ror
jg
dec
mov
pop
loop
popa
inc
je
std
scas
hlt
push
xor
mov
bound
and
popf
mov
testl
push
rcr
push
imul
clc
ja
jmp
lcall
sub
fwait
adc
test
test
jge
add
mov
xchg
jmp
cmp
pop
mov
test
push
sub
insl
push
xor
or
imul
jo
sbb
imull
lret
inc
dec
adc
sub
inc
iret
lcall
inc
lock
imul
lcall
pop
cmp
and
sbb
loope
in
and
stos
mov
mov
pushf
mov
adc
add
pop
cmp
ret
xchg
inc
fsts
scas
lock
add
fcoms
flds
push
push
or
dec
push
push
pop
andl
and
xorb
mov
push
jge
popa
fcomi
pop
sbb
popf
fiadds
shll
or
cltd
xchg
daa
or
imul
cmp
inc
mov
cmc
shlb
or
repnz
mov
xchg
ret
adc
jne
and
dec
jp
sub
scas
cmp
adc
repnz
sub
dec
movsl
ret
outsl
out
lds
push
movsb
mov
add
cmp
sub
bound
aam
push
mov
xchg
sbb
xchg
mov
les
clc
ljmp
std
pop
fsubs
or
dec
sti
fistpll
pop
jl
bswap
jne
gs
inc
push
sub
lret
sbb
and
test
sub
aad
and
adc
jno
imul
xchg
lahf
push
cmpsl
aam
inc
movsb
stos
mov
cli
cmpsl
ja
imul
test
cmpsb
fldenv
xchg
loope
sub
lret
pop
or
jecxz
test
xor
insb
lods
inc
push
ret
mov
or
div
adc
addr16
sub
pusha
cli
testl
iret
addr16
sbb
pop
fsubrl
jnp
mov
push
sbb
dec
mov
out
cld
test
push
add
mov
mov
in
insb
fnstcw
fdivs
pop
fdivrs
sbbb
xchg
adc
mov
jecxz
out
clc
cmp
std
sbb
lock
mov
add
xchg
mov
int
adc
inc
out
imul
dec
pop
outsb
inc
mov
pop
fnsave
negb
rcrw
test
out
mov
mov
mov
insl
ficompl
sbb
and
addr16
pop
call
cltd
roll
xchg
cmp
popa
and
push
es
mov
mov
sbb
lcall
adc
sub
aad
aas
les
xchg
xchg
lods
jp
stc
in
mov
push
xchg
xor
cld
or
lods
pop
cmp
adc
sbbl
je
push
std
dec
cmp
xchg
sbb
iret
mov
pusha
notb
out
push
push
xchg
adc
push
ret
and
xor
and
push
idivb
mov
rorb
add
jg
arpl
cmp
add
xchg
jecxz
scas
jbe
call
and
mov
lods
fldt
wrmsr
ss
sub
xor
jp
push
and
dec
xchg
cli
mov
add
or
add
adc
clc
mov
popf
test
xor
aam
incb
xchg
jb
pop
pop
add
ss
arpl
lcall
insl
pop
pushf
inc
xchg
out
loope
lcall
stos
insl
sbb
dec
loop
fcomp
cmp
mov
test
and
jmp
std
lds
mov
add
add
das
push
xchg
and
mov
ret
mov
lea
adc
mov
ja
stos
dec
stos
jge
or
lods
stos
loop
mov
mov
das
xchg
mov
or
jmp
cltd
lds
dec
push
jns
lods
sbb
xchg
cli
icebp
icebp
push
arpl
pop
mov
pop
pop
comiss
xor
stos
mov
out
rol
test
mov
push
push
push
push
inc
scas
ret
mov
push
xchg
fldt
out
push
jle
jmp
or
dec
aam
mov
fwait
shl
adc
mov
sbb
sub
mull
int3
pop
in
shrb
pop
or
jae
and
stc
into
xchg
mov
xchg
out
dec
popa
fadds
data16
stos
movsb
sbb
jns
notl
mov
scas
aaa
test
daa
sti
jl
loope
loope
cmp
hlt
mov
jecxz
xor
mov
push
xlat
loopne
nop
fdiv
leave
in
lret
insl
sub
test
jl
shll
loope
dec
jne
or
mov
lret
mov
mov
cwtl
lock
pop
xor
inc
mov
add
enter
mov
push
jbe
mov
out
jmp
popf
cmp
insb
push
daa
push
jg
mov
in
or
jle
sbb
hlt
mov
ror
andl
rorl
xchg
insl
stos
adc
je
movsl
insl
stos
bnd
xchg
and
repnz
ret
mov
sbb
mov
jmp
int3
sbb
cmp
cmpsb
pusha
lcall
mov
cmp
nop
icebp
cltd
leave
mov
sub
test
xor
xchg
mov
movsl
out
fistps
jbe
and
add
fadds
call
sub
in
push
addr16
lea
enter
shll
ss
xchg
aas
adc
loope
jg
loope
lods
and
jnp
push
ds
popf
rcr
xor
sahf
dec
adc
xchg
dec
push
fistps
shll
lahf
in
mov
inc
cmp
or
mov
cli
add
cmp
dec
and
adc
jmp
mov
cltd
pop
dec
mov
ret
fadds
cmp
scas
dec
jns
dec
jae
or
rcll
ds
in
data16
aam
jns
pusha
or
insl
mov
icebp
or
rcrl
mov
push
stc
add
xchg
sub
bound
rorl
cld
sbbl
je
mov
xchg
or
inc
sti
mov
add
mov
pop
sbb
loop
lods
push
loopne
in
mov
lock
pop
lock
dec
shll
insb
arpl
or
mov
imul
movb
inc
add
leave
push
fs
in
inc
in
insl
mov
movsl
mov
dec
clc
push
cmpsb
push
cltd
jae
lock
call
daa
pop
call
xchg
pop
mov
test
dec
fwait
jo
inc
cmp
add
mov
cmp
decb
shll
push
mov
sbb
xchg
mov
dec
mov
mov
int3
test
mov
pop
add
push
push
popa
pop
cld
repz
les
and
pop
cmpsb
test
adcb
mov
mov
xor
fildll
push
aam
cmp
xchg
cmp
in
cs
or
jns
mov
pop
jbe
push
je
and
inc
adc
les
inc
mov
fcoms
ret
imul
sub
xchg
aam
mov
test
mov
fs
and
and
cli
jno
mov
push
sub
mov
adc
loopne
ret
inc
mov
cwtl
shl
mov
imul
aad
stos
cmc
sub
inc
pop
xchg
fimuls
rcrb
fidivl
sub
push
cmpsb
or
cmp
mov
pop
xor
xchg
sub
repz
into
es
mov
or
sahf
jb
movsb
sti
cmp
fwait
and
outsl
test
xchg
scas
add
mov
mov
lods
pop
lret
jns
mov
xchg
sub
add
sub
movsb
jmp
inc
inc
imul
dec
inc
mov
test
repnz
jmp
cltd
sbb
jecxz
in
cwtl
xchg
push
cltd
mov
inc
dec
pop
pop
lret
stos
in
jo
xchg
xor
mov
je
mov
mov
loope
pop
fdiv
out
imul
stos
loope
jle
test
int3
mov
xchg
les
fcoms
sarb
sbb
mov
addb
fbld
nop
adc
sub
mov
pop
mov
push
lods
imul
jmp
movsb
add
xlat
shl
push
pop
iret
out
push
into
scas
into
movb
adc
outsb
sbb
and
orl
mov
sub
adc
pushf
repz
cmp
mov
xchg
sub
push
loop
call
outsb
adc
cltd
sub
push
cld
or
xor
jno
push
xchg
xlat
mul
pop
sti
sub
push
jmp
or
ljmp
mov
push
xorb
roll
out
lea
rorb
shrl
pusha
mov
ja
fwait
gs
add
mov
or
divl
jo
jmp
lcall
pop
pop
mov
mov
add
jae
out
mov
ret
psraw
mov
iret
lret
fwait
ds
jnp
inc
out
add
push
addr16
jnp
or
lcall
aam
push
add
ffree
sahf
and
add
sbb
sbb
lods
cmp
test
shlb
loopne
pop
jmp
xchg
xchg
push
jg
fisubrs
std
push
mov
ss
scas
sahf
cwtl
sbb
loopne
aaa
mov
xchg
sub
test
lret
incl
mov
jo
and
push
dec
pop
cmp
and
or
mov
rcll
xchg
leave
xchg
andl
or
xchg
hlt
cwtl
bnd
cmpsl
push
inc
sahf
pop
sub
loopne
rol
int3
sbb
les
rorl
pushf
inc
push
inc
cmp
in
push
and
push
in
mov
insl
cmp
popa
out
lods
int3
xor
ljmp
out
cwtl
div
xorl
pop
stos
test
jns
fwait
in
xchg
pop
push
push
xor
push
mov
jle
fadds
aad
mov
pop
sbb
sbb
inc
mov
adc
xlat
inc
xlat
stos
pop
rcll
xchg
andb
out
rorb
daa
fs
fsub
mov
mov
stc
fiaddl
fwait
addr16
dec
lret
and
mov
sbb
push
fistpl
mov
rorl
xor
data16
xchg
imul
or
pop
lretw
pop
xchg
mov
out
jecxz
and
mov
fistpl
arpl
sbb
rep
inc
add
sbb
int3
lock
cltd
push
in
ja
sub
mov
mov
ret
inc
cmpsl
cwtl
repz
shll
mov
sub
mov
pop
popf
mov
fsubrl
mov
dec
addr16
push
in
iret
jne
loopne
jl
or
testl
cmp
fldl2e
scas
insb
outsl
gs
in
es
aas
pop
jns
mov
cmp
movsb
jne
fstps
cmpsl
lea
ja
push
add
inc
inc
and
sbb
jnp
pop
dec
pop
jmp
or
jo
cmp
jecxz
and
test
xchg
jge
fidivrl
fstpt
stos
notb
xchg
push
out
and
ss
orl
pop
or
lcall
icebp
push
push
imul
pop
push
xor
dec
jns
aad
xchg
xor
push
jo
es
bound
cmp
mov
and
inc
lds
push
shrl
adc
cmpsl
addb
cmp
or
adc
loopne
gs
push
dec
and
fs
rcrb
lock
mov
cltd
xor
xchg
or
bound
pop
add
adc
mov
loop
jns
dec
pop
jg
inc
jmp
popf
jnp
pcmpgtw
shl
push
inc
xchg
test
jp
cltd
lret
xchg
push
jns
jb
push
insl
aaa
fcomps
xor
andb
sub
rol
sub
popf
out
push
sub
movsl
adc
insl
nop
cmp
loopne
jg
cld
sub
sbb
sbbl
sbb
loopne
sbb
loope
leave
push
call
mov
mov
gs
int3
adc
inc
push
lahf
repz
repz
push
ret
sbb
fdivrs
ljmp
push
cmp
mov
xor
daa
inc
cwtl
incb
in
mov
sub
repnz
int3
arpl
scas
adc
movsb
cmp
inc
int3
pop
imul
mov
cltd
mov
das
adc
jecxz
inc
cmc
xor
ds
lea
inc
ja
mov
scas
outsb
cs
stos
sub
add
mov
mov
daa
cmp
scas
fwait
ds
or
out
and
stc
in
adc
mov
imul
xor
push
and
pop
mov
aam
stos
inc
lahf
dec
orb
mov
pop
xchg
mov
xchg
pop
cltd
in
movsl
or
and
or
add
sub
or
rcr
icebp
add
mov
fcompl
mov
mov
test
xor
dec
xor
popf
into
push
lds
fsubrp
inc
adc
and
sbb
cli
clc
addr16
cmp
out
ss
add
loope
add
pop
pushf
cmp
adc
lock
lret
cmp
icebp
ds
stos
xor
bound
push
cmpsb
cmpsb
adc
loop
cmp
xadd
lock
xor
fmuls
cmp
dec
pop
shll
pop
jno
icebp
jmp
xlat
push
cmp
mov
popa
imul
popf
in
das
inc
sub
dec
pop
xor
ret
sbb
fsubr
out
mov
popa
clc
ljmp
dec
pop
sahf
lret
int3
cmp
jle
stos
movsb
mov
addl
pop
mov
in
jl
jmp
add
push
sub
mov
and
leave
fstl
shll
or
faddp
outsl
pop
sahf
mov
inc
sbbl
dec
push
lcall
fsubr
mov
cld
add
je
ret
jb
cmpsb
mov
imul
dec
pop
negl
dec
sbb
adc
clc
and
and
cmp
pop
push
scas
jno
sbb
cs
and
add
insb
mov
sub
jecxz
dec
inc
jb
dec
push
cmp
jl
ds
int
cmp
mov
lock
jp,pn
cld
je
mov
shll
push
and
getsec
and
pop
rorl
js
les
les
xchg
and
loope
sbbl
xchg
mov
adc
mov
adc
rolb
ret
mov
pop
xchg
push
xchg
int3
cmp
xor
loope
les
sub
xchg
lret
pop
mov
mov
sti
repnz
pushf
out
jae
dec
sbb
testb
dec
and
inc
add
sub
inc
mov
jmp
into
mov
mov
mov
or
out
arpl
push
or
push
jecxz
pop
xor
sahf
mov
imul
add
sub
movsb
dec
and
imul
test
adc
je
lret
ja
loopne
xor
mov
push
mov
fidivrl
in
fidivl
add
sbb
incl
scas
push
leave
movsl
movsl
mov
ret
add
mov
rcll
xlat
fidivs
scas
sbb
int
add
aas
pusha
ljmp
mov
adc
in
jbe
ret
rcrb
adcl
js
dec
xlat
sub
fisubs
jge
jmp
mov
insl
and
mov
dec
int
call
mov
dec
test
cltd
jp
inc
scas
dec
xor
stos
jge
icebp
sbb
cmp
filds
inc
jl
jo
sbb
pop
daa
or
cmp
loopne
mov
jmp
xorl
xor
in
sarb
in
fimull
enter
inc
cs
je
mov
js
bound
adc
cmpb
frstor
xchg
or
test
loope
jge
addb
call
pop
cmp
or
sub
xchg
int3
int3
dec
mov
cwtl
mov
in
lods
or
push
pop
shll
adc
out
mov
fsts
aam
jp
or
push
jnp
or
int3
mov
mov
push
xchg
sbb
popa
and
pusha
es
shll
sbb
dec
inc
orb
mov
mov
outsl
dec
push
inc
daa
mov
stos
inc
mov
popf
test
push
out
mov
shll
lea
inc
push
lods
xchg
xor
xchg
pop
dec
jge
lock
push
fs
xor
dec
jne
push
and
scas
ret
add
out
aam
push
outsl
lcall
outsb
sbbb
sti
rcll
movsb
mov
xor
inc
adc
jbe
inc
mov
cmpsl
add
jbe
scas
xorl
mov
pop
adc
mov
stos
xor
mov
mov
push
xchg
and
pop
ret
fs
push
sbb
fidivs
adc
inc
add
enter
fnstsw
xchg
out
or
adc
jb
hlt
popa
lahf
mov
push
lock
fnsave
stos
xchg
or
inc
lea
jle
ret
inc
js
push
lahf
mov
aaa
mov
movsl
lds
xor
mov
add
push
sbb
sub
xchg
mov
jae
sub
jne
in
jl
daa
lods
pop
fwait
gs
and
sti
in
xor
inc
add
fs
shll
cmc
out
add
inc
lcall
daa
or
ret
aas
pop
adc
dec
xor
dec
and
add
push
dec
lret
rcr
dec
stos
fcom
imul
mov
je
mov
mov
mov
add
mov
sbb
pop
das
out
xchg
mov
rclb
rcrl
stos
pop
ss
bound
das
pop
pop
cmp
cmp
mov
pusha
into
lcall
imul
pop
xchg
ljmp
xchg
rorl
pop
vaddsubps
pusha
inc
add
lds
es
lret
lret
sbb
mov
orl
push
mov
cmp
mov
mov
pop
mov
faddp
hlt
aaa
jns
stos
es
add
fcompl
push
add
lods
ja
xchg
mov
sti
jae
mov
jne
mov
pop
xor
mov
cmp
cmp
scas
icebp
inc
adc
ljmp
xor
hlt
lret
daa
std
or
xchg
mov
jne
push
cmpsb
jg
add
insl
popa
push
adc
push
loop
outsl
lds
popa
mov
sub
add
scas
sub
xor
or
aam
xchg
jo
leave
mov
xchg
push
stc
icebp
xchg
test
imul
xor
sub
loope
inc
bound
jbe
nop
repz
cmp
push
and
push
pop
inc
mov
adc
repz
incl
sub
cmpsb
sbb
inc
insb
jmp
pop
xchg
push
pop
repnz
inc
call
gs
xlat
neg
vpsubd
or
cmp
mov
push
ljmp
inc
sbb
and
pop
push
sub
pop
dec
test
sarl
xchg
sub
lcall
or
xlat
inc
imul
popf
dec
add
outsl
dec
add
pushf
cmp
pop
inc
shrl
test
nop
dec
sub
fnstcw
dec
sub
fs
xor
add
add
jo
cld
mov
push
mov
or
mov
roll
lcall
xor
mov
pop
ss
out
fdiv
iret
xor
stc
jle
push
sub
inc
es
inc
jle
jns
xchg
in
test
pusha
push
xchg
out
add
jae
insl
imul
testb
popa
push
xlat
or
ret
sbb
add
imul
in
mov
movsb
adc
in
jnp
mov
jge
cmp
inc
into
imul
mov
sub
fwait
movsl
xchg
pop
aaa
imull
cli
fiadds
lods
out
js
push
gs
cmpsb
dec
movsl
ret
out
adc
cmpsb
pushf
jp
loope
or
enter
add
ja
call
fcomp
pop
cmp
mov
fsubrl
and
dec
and
xor
dec
pop
mov
dec
jb
xor
adc
sbb
aaa
sti
sub
dec
dec
std
jl
lret
xlat
sbb
jmp
outsl
rorb
leave
push
imul
push
push
rcl
loopne
movb
push
ja
cmpsb
mov
mov
call
es
mov
add
stc
adc
scas
int
cmp
xor
mov
int
fisttps
mov
je
jae
out
ljmp
out
sub
xor
inc
les
cmpb
xor
mov
outsb
mov
stc
fisubs
inc
push
mov
fsubl
js
aas
cltd
stos
scas
js
xor
adc
shlb
stos
pop
adc
pop
mov
sbb
inc
xor
lahf
sub
cld
test
lcall
jns
or
negb
mov
adc
repz
mov
outsl
push
pop
pop
jne
lret
sbb
imul
push
lods
push
dec
decl
int3
jns
imul
pop
popf
faddl
fdivrl
mov
dec
adc
mov
test
stos
pop
mov
push
fistpll
xchg
inc
and
pop
pushf
repz
jno
adc
push
inc
mov
xor
pop
insb
xor
cmp
dec
cmc
fmuls
int3
test
dec
push
xlat
sahf
push
add
mov
or
pop
pop
popf
pusha
subb
repz
cmpsl
mov
outsb
pop
aam
lods
mov
adc
xchg
and
das
stc
xchg
test
cs
sbb
jge
adc
jp
mov
enter
sbb
fists
aam
aaa
or
pushf
add
idivb
push
les
in
inc
int
sub
stos
cwtl
or
les
jae
repnz
xlat
mov
fcomip
sub
and
mov
xchg
lahf
cmp
out
cmp
inc
jo
adc
andl
jns
andb
mov
dec
outsl
push
xchg
mov
push
sahf
icebp
test
mov
xchg
cmp
jl
dec
xchg
ss
cwtl
add
pushf
loopne
sub
out
lods
mov
xor
jg
popa
les
arpl
ss
aam
fsts
addr16
es
enter
clc
add
test
mov
and
rcrl
xchg
mov
stc
mov
push
cmp
jb
pop
in
outsl
imul
aas
mov
out
mov
in
push
jo
out
int3
sqrtps
push
and
sbb
xor
stos
push
sub
popf
xor
popa
adc
xor
mov
adc
ror
popa
fwait
mov
inc
out
add
lret
mov
movsb
add
aas
mov
xor
xchg
lcall
fisubl
jne
pushl
sub
movsb
stos
daa
aas
sbb
iret
cmp
cmpsl
xchg
cmp
jno
and
roll
in
dec
shl
jp
lcall
test
fdivrl
lock
mov
les
dec
add
adc
lret
mov
cmp
pop
lcall
or
adc
test
pop
lds
push
mov
xchg
cltd
xchg
sbb
iret
and
mov
faddl
cmp
test
lea
and
ret
adc
inc
testb
fiadds
pop
sub
ljmp
or
mov
xor
xchg
shll
pop
add
or
icebp
push
daa
or
in
imul
push
stos
jle
fsubrl
dec
into
insb
mov
loop
movb
jo
xchg
mov
xchg
jo
adc
xchg
inc
xor
mulb
and
jb
fidivs
pop
fadd
ret
mov
outsb
ja
dec
mov
lahf
mov
mov
mov
inc
and
jnp
mov
pop
clc
jbe
lret
ljmp
xchg
dec
xlat
add
adc
lods
sbb
mov
pop
sbb
xchg
lcall
or
inc
lods
fisttpll
mov
jp
adc
insb
inc
fadds
stc
jmp
leave
inc
adc
iret
adc
push
pop
mov
and
jmp
dec
les
and
inc
into
add
ja
popa
stos
push
dec
adc
std
jae
jge
mov
dec
lock
neg
mov
xor
and
cmp
xchg
out
push
sbb
out
repz
repz
push
and
and
mov
push
and
shrl
or
call
push
out
mov
pop
sti
adcl
push
push
cmpl
cmp
jle
jl
xor
cmpsl
mov
mov
xlat
cltd
mov
sbb
fisubrs
notl
mov
inc
sub
icebp
dec
sbb
imul
dec
xchg
adc
pop
mov
es
and
lds
decb
cmpsl
dec
cmp
mov
jmp
pop
or
daa
pushf
or
mov
push
and
repnz
mov
pop
adc
aas
mov
pop
add
cmp
inc
sbb
jmp
add
out
cmp
sbb
mov
fiadds
icebp
pop
fucomip
add
cwtl
xchg
add
movsb
fmull
sbb
sarb
jmp
pop
sbb
adc
nop
lret
shll
lods
dec
out
loope
ja
mov
xor
sub
roll
xor
test
in
fdivrs
inc
push
mov
not
inc
and
lcall
fdivrs
in
mov
inc
push
mull
mov
int
xchg
push
mov
imul
inc
jno
mov
or
mov
pop
pop
xchg
push
test
scas
cs
or
aaa
ds
andl
jmp
push
dec
out
ss
movsl
outsl
inc
xor
loope
nop
in
lcall
out
filds
jbe
mov
pop
ss
mov
popf
out
dec
or
sub
aaa
xchg
bound
xrelease
or
hlt
loope
jge
gs
aam
movsb
mov
ljmp
cmp
sub
sub
clc
test
ret
sbb
pop
dec
lods
ret
test
pop
rcrb
and
repnz
rolb
lods
xorl
sub
leave
std
adc
stc
rcr
fildll
pop
push
mov
ficomps
mov
aam
push
andl
arpl
adc
cmp
inc
les
mov
ljmp
cmp
stos
loope
mov
xor
scas
jecxz
lods
cmp
push
cld
sti
scas
inc
jns
stc
call
sbb
jecxz
jbe
xor
rcr
xor
jb
fimuls
leave
enter
clc
jne
dec
push
or
mov
pop
cmp
push
sbb
mov
cmp
sub
add
in
mov
aas
xor
lcall
mov
jp
nop
lret
sub
pop
mov
push
scas
nop
je
cmc
adc
pop
clc
adc
cmc
xchg
sahf
stos
outsl
xchg
push
adc
or
cld
subl
add
cmp
mov
popa
sub
je
gs
mov
cmp
push
push
pop
lds
and
xor
mov
mov
mov
pop
repnz
sbb
inc
mov
push
cld
stos
dec
sub
mov
loopne
jo
and
cmp
int
xor
inc
add
push
cltd
push
test
and
sub
jo
outsb
sub
mov
sbb
cld
jg
and
int
adc
or
adc
dec
xchg
push
fmulp
jo
or
popf
test
in
popf
stos
sub
sbb
mov
cs
out
jns
inc
stos
repz
fldenv
rcr
push
mov
xchg
push
xchg
outsb
sbb
xchg
mov
xchg
pop
lds
repz
pop
addb
cli
xlat
popf
cmc
inc
mov
push
jo
and
out
call
adc
in
push
cli
lret
fistps
sub
jl
xlat
cmpsb
mov
gs
mov
mov
leave
lcall
and
cwtl
sub
mov
addr16
shlb
cmp
pop
cmpl
das
addl
xor
or
mov
pop
shr
test
mov
cmpsb
mov
adc
add
mov
out
fs
ror
adc
cmpsl
or
inc
cmp
cmp
out
repz
mov
enter
mov
rclb
fisttpll
xchg
dec
push
imul
out
lds
mov
loop
repz
lret
push
lcall
dec
adc
mov
rcrb
les
bnd
xorb
xor
adc
xchg
pop
xchg
sbb
adc
aaa
pusha
subl
mov
lods
dec
and
pop
adc
xor
push
xlat
xor
out
cmpsb
cs
push
jl
push
or
add
mov
nop
dec
sub
les
push
ja
icebp
pushl
jo
sti
add
add
sbb
mov
add
add
shl
jl
cwtl
int3
addb
mov
cmp
mov
or
loop
ja
ss
sti
into
adc
sbb
aaa
ja
and
idiv
int
jle
cmpl
sbb
insb
bound
sbb
xchg
mov
mov
popa
les
dec
es
hlt
xchg
jp
int
in
dec
aad
outsl
add
or
nop
nop
mov
int
scas
push
lret
test
jb
mov
ja
stos
mov
rcr
frstor
das
subl
fbld
loope
jno
xchg
or
jmp
add
fiaddl
sti
cmp
mov
mov
mov
cwtl
dec
jl
jb
xor
push
rclb
lods
cltd
or
fidivrl
cwtl
push
stc
sub
mov
cmpsl
xchg
mov
sub
push
les
repz
hlt
ljmp
dec
inc
or
pop
out
loopne
mov
push
scas
jmp
sbb
les
xlat
lcall
cli
cmp
ret
push
sub
jmp
popl
out
mov
push
pop
cmp
xchg
add
and
scas
aaa
aam
loop
ds
cmp
nop
xchg
lea
mov
mov
jb
push
cs
test
stos
rcll
add
dec
mov
sbb
jo
test
mov
fsubs
shl
sahf
mov
cmp
dec
fldcw
popf
popf
jmp
xchg
adc
sub
outsb
orb
clc
lcall
outsb
cmpsl
xchg
add
int3
add
ror
dec
hlt
test
jg
jno
jge
sub
es
xor
sub
inc
mov
sbb
jmp
inc
dec
mov
push
test
or
dec
xchg
int3
push
push
outsl
rorl
mov
dec
sbb
pop
jmp
fs
cmp
jo
das
push
sbb
gs
pop
clc
imul
xor
fxch
xchg
jno
lods
mov
sahf
rorl
scas
in
in
add
inc
popf
mov
mov
dec
popa
pop
cmp
jp
dec
shl
mov
lock
outsb
je
outsl
sbb
jg
mov
faddl
lods
ret
sbb
sub
cmp
xchg
arpl
cmp
jmp
stos
mov
lcall
ss
cwtl
stos
jmp
fisttpll
jae
jnp
ret
clc
mov
imul
test
mov
popl
fwait
iret
mov
daa
or
jge
ret
push
arpl
push
in
insb
insl
lock
adc
mov
sub
xchg
lcall
mov
loopne
insb
dec
jbe
inc
js
repnz
inc
imul
lss
outsl
inc
fld
xchg
push
mov
cmp
mov
or
or
jb
lock
outsl
sti
in
test
ret
xor
sub
mov
rorl
fisubrs
sub
add
js
cmp
pusha
push
loopne
shl
lock
fiaddl
fldcw
xor
mov
fisubrl
sub
dec
mov
cmp
rolb
fisttpll
test
call
incl
scas
insb
jle
mov
xchg
aaa
mov
das
imul
inc
lcall
inc
hlt
lods
ja
mov
push
pop
adc
inc
lret
sub
je
push
stos
outsb
mov
sub
dec
inc
cs
lret
adc
inc
mov
inc
xchg
call
shrl
nop
enter
mov
jnp
and
cwtl
fs
stos
push
xchg
xchg
mov
pop
ret
fs
notb
xor
adc
push
adc
pop
mov
push
jne
adc
mov
jno
add
ja
jmp
mov
in
and
xor
adc
repnz
cmpl
lea
repz
fdivrl
movsl
int3
iret
scas
inc
mov
mov
ja
fsubl
roll
mov
lods
jmp
mov
insb
std
mov
adc
sub
nop
inc
aas
xchg
scas
lcall
dec
leave
stos
stos
shll
push
mov
lahf
mov
lods
or
push
addb
call
jno
dec
jno
divb
int3
repnz
push
jno
bound
dec
inc
lret
xchg
andb
movsl
ret
dec
cld
sub
jnp
push
inc
jb
jno
lahf
xlat
sti
sub
test
fsubs
mov
mov
pusha
pop
repz
cmpb
lret
and
test
mov
idivb
data16
mov
daa
loope
and
int
ret
jle
cltd
adc
push
mov
pop
fnsave
jg
fsubr
adc
push
cmp
ret
push
popa
out
outsl
shl
incb
jg
jp
cmp
clc
xchg
sbb
xor
and
mov
push
xchg
out
mov
pop
adc
ds
out
adc
pop
dec
sbb
es
or
inc
lods
dec
mov
out
jecxz
int3
dec
movsb
mov
aam
adc
push
outsb
popf
fs
xchg
idivl
sub
ret
mov
subl
lods
dec
rcrb
mov
sub
dec
popa
out
push
dec
sbb
mov
in
xacquire
les
stos
cmp
mov
jl
cmovs
xor
das
mov
cltd
add
sar
lds
xchg
scas
or
dec
sti
and
adc
cmp
fimuls
das
lcall
dec
mov
ret
pop
mov
push
adc
leave
fwait
jno
xor
push
jns
movsb
into
mov
sub
xor
out
jae
rsqrtps
xchg
sub
mov
push
mov
jns
sarl
inc
lds
popf
mov
push
ret
stc
xchg
jae
fcomip
mov
mov
push
mov
andb
xorb
jne
and
jmp
sbb
push
xor
icebp
cmpsb
faddl
pop
out
jbe
ret
cld
and
push
pop
xchg
dec
cmp
arpl
push
ja
mov
repnz
xchg
sub
lret
fwait
mov
xor
dec
and
or
pop
push
jbe
push
add
jbe
add
fcomip
mov
std
lods
or
inc
in
ja
push
ljmp
movsb
fcoml
pushl
dec
inc
sub
ss
xchg
dec
cld
pusha
shl
cmc
mov
int
out
outsb
add
insl
mov
xchg
jae
insl
fadds
loopne
mov
cld
cwtl
std
inc
adc
mov
xchg
pop
fstps
stos
mov
ja
outsb
jbe
stc
insb
mov
out
xchg
cmp
mov
add
lahf
rcrl
adc
mov
push
adcl
dec
pusha
dec
pop
les
pop
je
mov
in
movsl
xlat
mov
lret
cmp
js
pop
fildl
rorb
mov
or
cmp
sub
test
jns
mov
jnp
or
cmp
dec
adc
xchg
adc
mov
int
mov
fldt
xor
push
mov
xor
mov
xlat
sbb
pusha
inc
dec
in
xchg
frstor
mov
scas
mov
mov
in
in
sbb
fs
iret
sbbb
pop
insl
in
xorb
das
adc
jge,pt
stos
sbb
sbb
popf
dec
add
loop
jmp
testb
adc
ja
je
faddl
fistps
mov
jg
cltd
cmp
arpl
xchg
rclb
mov
push
jmp
dec
add
push
pushf
jns
mov
sbb
ja
mov
int3
clc
jae
leave
jno
jle
dec
pushf
dec
adc
mov
mov
xlat
mov
in
pop
mov
sbb
aad
leave
xor
imul
push
inc
push
push
scas
out
movsl
lock
shlb
cli
xor
movsl
es
push
sub
idivb
rorl
rcll
xchg
test
lods
dec
shrb
out
outsl
add
adc
jecxz
test
into
call
xor
out
inc
shrl
rcrl
rcrl
add
movsl
sahf
popa
dec
or
lahf
sbb
rcrb
cmp
add
cmp
out
add
gs
cmp
lods
cmp
cmp
xlat
inc
add
mov
pop
leave
xor
pop
pop
add
or
mov
repz
jmp
adc
scas
outsb
insl
mov
and
sbb
push
mov
dec
dec
jo
adc
std
sub
andl
lods
in
sbb
jbe
inc
in
push
mov
into
mov
ret
jle
push
mov
testl
and
or
imul
popa
mov
repnz
mov
test
mov
jo
inc
ss
orb
sbb
scas
cmp
add
div
ss
sti
mov
bound
adc
or
dec
loop
cmpsb
inc
ljmp
add
cmp
push
sub
jecxz
cmp
ret
in
sbb
repz
mov
stos
pop
jl
or
inc
pop
mov
inc
shl
sahf
aad
imul
orb
dec
mov
popf
mov
mov
iret
jae
dec
add
jle
mov
mov
mov
push
push
dec
movsl
aaa
xor
xorl
xchg
dec
int3
xor
repz
int3
pop
push
pop
cmc
insl
scas
test
fnsave
movsl
xchg
mov
or
iret
push
mov
mov
dec
cmp
push
iret
dec
lahf
dec
fst
and
out
aaa
sub
xor
rorl
test
sbb
rolb
clc
mov
popl
and
xorl
out
and
std
dec
mov
lds
outsl
mov
jp
and
ljmp
xchg
outsb
out
mov
in
call
andl
xor
xchg
xor
or
daa
cmp
dec
andl
mov
pop
addr16
test
lds
pusha
pop
out
mov
aad
decb
cmp
push
cmp
icebp
pop
xchg
and
mov
addr16
rcrb
subl
lds
movb
popf
leave
out
and
and
out
mov
jae
loop
xchg
add
cmp
sbb
pop
out
dec
jae
mov
cwtl
dec
lock
inc
out
jg
xchg
dec
or
mov
mov
cltd
rol
cmp
jns
xchg
insb
js
push
pop
mov
cmp
xchg
dec
cwtl
dec
sarb
sub
mov
jo
pop
dec
test
cmp
pop
jmp
mov
shr
mov
ds
int
gs
loopne
adc
hlt
inc
add
add
mov
pop
rclb
jne
xlat
adc
mov
aas
int
sub
add
cmp
mov
xor
sbb
stos
rorb
xor
inc
imul
jg
stos
mov
adc
stos
loopne
loopne
jnp
jne
push
mov
jp
xchg
sbb
cmp
lret
sbb
adc
push
dec
pop
testl
addr16
mov
adc
insl
mov
pop
adc
aaa
daa
out
sarl
xchg
repz
je
jb
fistps
ret
and
xor
ljmp
les
push
xor
or
cltd
mov
adc
inc
rcr
and
shll
push
ss
push
xor
add
dec
test
sub
jae
push
sub
outsb
cmovl
outsl
addr16
adc
into
insb
mov
cmpsl
or
mov
push
add
outsl
enter
sub
jnp
adc
inc
out
xchg
in
insb
sub
sti
jbe
fidivrs
aad
ret
jg
or
out
cmp
inc
js,pt
lahf
test
sbb
cmp
outsl
push
mov
mov
dec
jmp
hlt
popa
fadd
sub
inc
cmp
adc
push
ret
mov
insl
lds
or
std
jns
mov
scas
inc
call
add
fdivrl
inc
imul
bound
cmpsb
sbb
cmc
mov
cmp
adc
test
mov
mov
out
aam
sbb
lret
add
data16
jnp
fstpl
push
inc
ret
push
and
mov
ret
jo
jbe
arpl
ljmp
cmpsl
adc
jle
mov
adc
xor
xchg
call
ret
jmp
bound
mov
and
inc
orl
adc
mov
ffree
mov
dec
mov
and
popf
popf
ljmp
and
les
inc
cld
cli
arpl
nop
xor
inc
ss
mov
call
mov
inc
sbb
shr
movsb
sub
dec
rcrb
testl
sbb
cs
mov
testl
inc
dec
add
xor
cmpsl
out
pop
jecxz
or
dec
imul
xchg
andl
scas
sub
hlt
clc
sbb
js
fidivl
scas
nop
fstpl
rcll
stos
ror
xchg
mov
dec
and
ret
mov
mov
and
xchg
js
jns
daa
outsl
pop
cmp
jbe
imul
jl
xchg
push
movsb
lret
pushf
cmp
adc
lods
clc
in
jb
pop
notb
mov
inc
lds
jno
aaa
in
cltd
pop
lods
jecxz
pop
insb
dec
aam
repnz
push
repnz
leave
and
mov
sub
sub
xor
xlat
incb
add
push
pop
aad
dec
mov
adc
cmp
aaa
ret
call
jmp
test
mov
hlt
repnz
fwait
sub
stos
lds
subl
pop
xchg
and
into
mov
scas
cmp
fmulp
pop
outsl
sbb
jmp
popw
xchg
into
outsl
stos
pop
outsl
and
fnstcw
adc
lcall
inc
pop
mov
mov
sarl
jbe
or
inc
das
mov
orl
jge
xor
out
xor
addr16
sbb
xor
lods
sbb
mov
into
dec
ret
sub
xchg
jge
mov
test
stos
xlat
push
mov
xchg
mov
jecxz
popa
popa
jnp
add
cli
jmp
xchg
sbb
loope
push
insb
ljmp
pop
xchg
movsl
andb
mov
mov
push
jb
pop
xlat
inc
rorl
add
repnz
push
aaa
ja
xchg
push
push
shld
inc
out
rclb
cli
inc
mov
add
je
cli
push
adc
ret
sbb
ret
dec
ja
sbb
insb
jae
sbb
xor
loop
jecxz
jb
mov
inc
push
out
or
int
js
insl
push
push
std
ret
fcomps
sahf
xchg
mov
scas
dec
das
hlt
jmp
mov
rorl
jns
xor
addb
sarl
ficoml
rcrb
popf
adc
es
push
mov
ret
and
dec
xchg
data16
js
add
popf
outsb
cli
mov
mov
std
fistpll
add
pop
negl
push
cltd
stos
mov
cwtl
or
test
mov
jg
adc
mov
and
repnz
je
jp
cmpsb
jmp
xchg
arpl
test
mov
fisubs
fcomps
lret
sar
nop
mov
addr16
fldcw
sti
jge
jecxz
nop
loop
adc
xor
lock
iret
mov
jecxz
sbb
mov
and
idivl
je
pusha
sbb
lods
jno
icebp
adc
sbb
pop
cs
sbb
jg
xchg
inc
or
decl
mov
lret
mov
xchg
insb
inc
sub
xor
pop
std
mov
push
call
xchg
mov
pop
ds
stos
ljmp
roll
push
aas
cmp
adc
je
mov
inc
ja
out
rcl
mov
nop
mov
jmp
outsl
xor
jns
pop
xor
test
bound
out
cltd
lods
inc
push
add
outsb
jo
or
inc
orb
in
mov
insl
cmc
dec
xchg
iret
into
sub
data16
cmp
xor
mov
ljmp
scas
dec
sbb
jl
xlat
sbb
mov
in
lea
mov
inc
xchg
popf
sbb
mov
testb
out
test
decl
scas
cmp
lcall
cmp
loopne
inc
pop
or
pop
pusha
jne
pop
xchg
addl
pop
add
xor
cltd
xchg
aad
xorb
and
inc
ja
test
psubusb
das
rclb
imul
push
mov
push
aad
pop
dec
data16
jb
jl
int3
jle
ffreep
jl
mov
sub
loopne
fldcw
mov
scas
inc
push
jbe
jb
out
jno
bound
stc
or
pop
lods
pop
cmp
jb
icebp
cmpsl
push
jmp
adc
jl
outsl
pop
int3
mov
mov
cmp
lock
vmwrite
jno
xchg
addb
pop
roll
leave
lods
xchg
mov
push
xor
fbld
and
cmpl
std
mov
sub
rorb
inc
jae
sub
and
imul
cwtl
add
and
fs
and
enter
inc
push
inc
pop
pop
mov
stos
dec
andb
add
in
and
daa
add
movsb
inc
cmpsb
pop
push
bound
mov
push
cltd
mul
ds
or
cmpsl
mov
int3
lret
cmpsb
mov
fmull
jg
fildl
push
pop
stc
add
shlb
scas
dec
add
jmp
sub
cmp
adc
pop
mov
push
sub
mov
dec
cmp
mov
push
popf
sub
movsb
sbb
sahf
jmp
push
lock
add
push
aas
jl
and
and
in
mov
pop
mov
insl
add
or
push
in
inc
jo
scas
mov
cli
inc
nop
push
sbb
outsl
adc
mov
fldcw
push
aaa
ds
bound
clc
mov
shlb
gs
mov
push
insb
xor
test
xor
mov
pop
sbb
std
cli
jmp
add
mov
jmp
jnp
andb
mov
sar
pop
push
mov
sbb
sub
adc
and
in
jns
lock
shll
lret
ja
xor
inc
loop
stos
and
loopne
jnp
lods
adc
inc
fiaddl
mov
fmull
adc
mov
out
pop
fcmovbe
push
popa
lret
fwait
imul
xchg
mov
pop
cmpsb
xlat
cmpsl
mov
push
stc
jge
bound
inc
mov
cs
stos
clc
cmp
xlat
jl
out
int
mov
xchg
add
ss
mov
shrb
cwtl
test
mov
xchg
mov
jge
dec
push
jb
sbb
mov
aaa
test
mov
add
std
mulb
mov
mov
jbe
and
les
pop
insl
or
cmp
sbb
push
cmp
mov
and
cltd
or
xchg
ficompl
icebp
dec
test
mov
push
shrb
add
xor
push
popa
pushf
and
cmpsl
adc
xchg
pop
or
rclb
cmp
jno
pop
fbld
std
aam
repz
outsl
add
xchg
and
cld
gs
xor
loope
les
mov
ss
cmp
adc
xchg
test
and
mov
push
dec
mov
xorl
imul
retw
sbb
mov
dec
in
and
ljmp
mov
subb
pushf
fnsave
rcr
clc
outsl
lret
sbb
fldl
dec
pop
inc
outsl
stc
jmp
loopne
inc
stc
repnz
mov
and
test
mov
sub
sub
cmpsb
test
jmp
stc
mov
cmc
sbb
pop
incb
je
rorb
add
lods
and
or
ja
aam
nop
loop
rcll
sub
push
cmp
daa
sbb
push
pop
call
push
loopne
sub
mov
insl
pop
mov
std
fwait
aam
negb
fcmovbe
rcrb
aad
xchg
es
aad
in
or
jno
adc
stc
lret
sbb
xor
xor
fmull
pop
in
lock
imul
daa
inc
and
es
mov
mov
sbb
sub
push
pop
enter
or
dec
mov
cmp
push
dec
outsb
push
pushf
ret
adc
out
inc
inc
pushf
xchg
xlat
sbb
push
adc
adc
cmp
inc
push
out
dec
cltd
or
dec
cld
xchg
pop
sub
adc
pop
pop
mov
xor
xchg
fidivl
out
add
fsub
mov
xchg
pop
stc
dec
loop
jecxz
pop
jb
sbb
repz
pop
sub
mov
leavew
aas
mov
pusha
test
call
lods
push
mov
sub
pop
jecxz
jno
loopne
hlt
ljmp
adc
ja
jns
mov
in
mov
shlb
sbbl
stos
sbb
fmuls
mov
mov
inc
fadds
xor
loop
test
ret
xor
arpl
mov
ret
arpl
popl
pop
das
pop
cmp
mov
pop
pop
fdivp
jae
stos
sub
jmp
xchg
sbb
xchg
leave
jne
test
js
cmpsl
repnz
cmp
lods
inc
xchg
lods
xchg
jb
fldl
aam
push
add
test
lahf
lcall
test
cs
int
pop
and
and
mov
imul
and
scas
repz
icebp
and
in
fldcw
push
into
stos
push
xchg
dec
scas
and
in
out
inc
dec
mov
xor
sub
pop
sub
ja
or
ds
push
mov
dec
inc
pop
lahf
inc
addr16
hlt
das
pop
sbb
mov
pop
or
pop
pop
mov
xor
int
call
pop
push
or
jne
jmp
or
shl
out
xor
jae
je
add
dec
add
fldl2e
pop
out
inc
sub
adc
pop
inc
stc
insb
or
out
lods
fwait
mov
jb
fs
mov
outsb
mov
xchg
mov
sbb
sbb
outsb
fidivrs
mov
cmp
jg
neg
stos
mov
aam
data16
push
add
into
push
adc
arpl
jmp
imul
xor
das
mov
push
xchg
fcoml
inc
xchg
ljmp
ret
adc
lcall
out
push
pop
dec
xor
push
mov
movsl
mov
outsl
shlb
mov
testb
aad
xchg
sahf
xchg
in
adc
aam
xor
ja
xor
or
jnp
ret
out
push
push
cmp
movsl
xchg
lahf
negb
pop
inc
xchg
inc
adc
lock
cmp
in
mov
or
sbb
dec
fs
enter
mov
sub
rcrb
fcompl
xchg
xchg
push
sub
inc
and
cs
push
sti
leave
xchg
jmp
dec
div
inc
pop
ljmp
adc
cli
mov
scas
add
cmpsl
jnp
data16
push
insl
jbe
pop
jo
push
clc
rorb
cmp
aam
push
das
pop
mov
push
and
and
jnp
pop
push
xchg
sbb
or
xchg
mov
xchg
push
adc
mov
sti
xchg
xor
stc
mov
sbb
mov
xchg
mov
in
and
mov
test
out
mov
insb
je
addl
jno
pop
sbb
mov
mov
mov
repz
in
jge
aas
andl
xchg
lret
mov
jo
je
add
cmp
cwtl
popf
mov
add
dec
ds
add
jmp
cmp
mov
pop
adc
adc
or
push
xchg
cmp
push
xchg
test
mov
and
sub
repz
fcomps
test
movl
les
jmp
sbb
mov
pushf
negl
add
addr16
sub
lea
imul
aas
ljmp
into
and
shlb
imul
pop
sbb
inc
aam
sti
add
mov
xchg
xchg
loop
mov
mov
mov
loopne
outsb
lret
adc
cld
jbe
jmp
mov
out
mov
divl
repz
mov
inc
sub
pop
jbe
mov
enter
stos
mov
pop
and
popa
dec
fnstenv
adc
or
in
cmp
adc
hlt
mov
popf
test
inc
sub
jg
shl
or
insl
mov
nop
and
push
shr
rolb
outsl
fnstenv
mov
fs
inc
inc
mov
jb
iret
faddp
add
test
push
jg
and
xor
mov
jne
scas
sahf
add
mov
movsl
sub
xor
and
je
loope
lret
stos
std
aad
mov
cmp
push
jb
call
inc
push
inc
xor
hlt
hlt
dec
jne
cmp
dec
lods
xor
mov
js
mov
sub
jae
xchg
or
addl
adc
jmp
mov
test
les
push
ljmp
mov
push
mov
cmpb
adc
mov
pop
aas
cmpsb
inc
adc
add
je
lods
cmp
out
jnp
or
mov
cbtw
xor
rolb
cli
jle
adc
mov
shlb
inc
bound
sbb
cmp
mov
dec
fldl
adc
adc
daa
mov
roll
sahf
lahf
repz
loopne
cmp
inc
in
add
mov
fwait
imul
mov
inc
xchg
enter
lret
pushf
dec
mull
leave
jle
dec
sbb
lahf
rcll
and
call
xor
dec
cmp
mov
loop
mov
lods
pop
ljmp
pop
out
adcb
mov
xchg
lret
cmc
inc
cmp
sahf
mov
or
sbb
sbb
cwtl
adc
cmp
mov
ror
sub
pop
add
decl
pop
nop
mov
fwait
test
fildll
xchg
xchg
js
add
popa
mov
mov
out
or
jecxz
negl
aaa
sub
push
out
cltd
test
gs
mov
mov
xor
xchg
ds
fwait
clc
imul
mov
cmp
inc
into
rcrl
sbb
mull
outsb
idiv
leave
adc
pop
push
dec
call
add
loopne
test
inc
out
xor
sbb
mov
push
jecxz
jns
or
xor
pop
lods
cmc
arpl
insl
pop
or
inc
popl
pop
or
pop
bound
sub
out
mov
test
into
adcl
inc
add
stos
imul
lods
pushf
cmc
cmp
pop
sti
inc
adc
mov
iret
sub
cmpsb
mov
adc
xor
lcall
je
movb
or
push
fidivs
jge
add
cld
add
rcrl
pop
cs
dec
out
cmp
jle
sub
addl
imul
sbb
fisttpll
negl
adc
pop
jmp
adc
jo
mov
jle
mov
xchg
adc
sbb
inc
test
lock
hlt
mov
add
or
jecxz
popf
js
in
and
testl
mov
add
repnz
out
cmp
cmp
das
aad
inc
aad
cli
push
push
aas
cld
dec
mov
cmp
add
push
push
loop
in
roll
std
stos
imul
pusha
aam
adc
addr16
dec
mov
sub
push
mull
add
out
push
xor
push
mov
stos
das
xchg
and
js
rcrb
or
xchg
shlb
sub
jmp
xor
das
shlb
ret
cmp
iret
xchg
and
pushf
in
mov
lahf
ss
adc
xchg
jge
leave
sbb
mov
sbbl
jb
pop
fistpll
lcall
xor
imul
enter
test
sub
mov
add
cs
gs
mov
inc
mov
andl
adc
add
mov
mov
jbe
addr16
lock
lea
ret
inc
fwait
mov
push
xchg
pop
rcll
mov
lods
mov
pop
int3
in
and
push
cmp
pop
fimull
addr16
and
andb
mov
fbld
stos
mov
je
jne
repnz
sub
lret
imul
push
jbe
cmp
popa
sarb
in
mov
push
mov
dec
fidivl
in
popl
movsl
lret
lahf
and
fstps
or
insb
inc
cmpsl
jge
in
lock
clc
push
faddl
xchg
jnp
hlt
cmp
xlat
pop
imul
cmp
pop
pusha
cmpsl
mov
lea
out
imul
insb
xchg
or
lahf
rcrl
adc
movsb
jo
or
mov
mov
cs
mov
loop
cmpb
fcom
lahf
mov
mov
addr16
dec
cli
mov
ret
push
cmp
and
lods
out
jp
jo
shl
push
test
mov
xchg
jmp
fs
fisubrl
cmc
sbb
fiaddl
stc
push
or
fildl
jmp
idivl
ficompl
push
dec
pop
hlt
or
int3
clc
fwait
jl
pop
jl
leave
fidivs
pop
sahf
test
repz
pop
stos
push
test
pop
add
jge
clc
and
je,pn
jne
fucomip
in
sub
mov
dec
addb
cmp
sarl
sahf
inc
pop
mov
mov
movsb
adc
cmp
mov
fwait
mov
sub
imul
inc
scas
push
dec
sbb
ss
imul
std
mov
movsb
mov
rcrl
add
xchg
push
jae
inc
iret
add
inc
fdiv
shll
and
outsb
jle
mov
mov
hlt
push
jge
ljmp
sbb
push
fsubrl
js
xchg
dec
inc
mov
stos
push
stos
pop
dec
push
arpl
mov
dec
and
popf
or
mov
cmc
aaa
stos
std
xchg
inc
rolb
or
inc
ss
and
jae
sub
shrb
sbb
daa
dec
cltd
repz
arpl
or
xchg
in
pushf
insl
or
jecxz
cli
push
call
xlat
sahf
and
faddl
adc
push
adc
arpl
add
sub
adc
dec
cwtl
stc
adc
fnsave
outsl
adc
sbb
or
sbb
ja
pop
fisubs
fsubrl
inc
ja
test
dec
sub
ljmp
iret
fildl
push
out
pop
icebp
adc
popf
test
add
mov
jmp
icebp
lcall
cmc
push
mov
test
push
cmp
pop
clc
lea
loope
ss
fbstp
aas
cmp
jnp,pn
mov
mov
add
test
push
daa
mov
adc
mov
movsb
loopne
outsb
and
push
cmp
clc
out
cmp
fmuls
inc
mov
es
out
mov
sbb
jle
adc
sbb
adc
lcall
aaa
imul
fwait
cmp
sbb
mov
jmp
outsl
aas
add
in
mov
fdivrp
push
out
in
add
add
mov
int3
aas
test
enter
sub
int3
je
fmull
jnp
stos
in
test
mov
pop
mov
and
adcl
jmp
daa
stc
push
inc
cmp
xor
jno
lret
arpl
sbb
sub
jbe
or
das
sub
iret
int
fs
je
and
in
mov
aad
adc
sbb
lods
cmp
loope
iret
inc
sbb
push
xchg
pop
or
xchg
mov
ret
mov
inc
js
and
into
fwait
inc
pop
mov
ja
movsb
mov
test
ret
or
imul
pushf
and
inc
leave
fiadds
sub
add
adc
jle
test
out
sub
xchg
mov
rorb
test
cli
ds
push
cs
cmpsb
mov
sub
sarl
or
add
adc
push
mov
das
or
push
dec
outsb
idiv
inc
das
ss
lcall
fs
shr
xlat
ljmp
cs
les
xchg
or
mov
mov
mov
fsubrl
inc
movl
ffreep
jno
loope
pop
xchg
and
mov
repnz
pop
pop
hlt
push
or
popf
inc
lods
and
mov
fwait
leave
push
xor
adc
xor
push
xor
or
es
jnp
adc
stos
inc
out
fs
hlt
jmp
movsb
inc
ja
jo
lret
sub
aaa
sub
push
pop
in
popa
jae
dec
sahf
pop
cmp
jae
repz
cltd
clc
push
pop
mov
inc
or
cmp
sbb
movsb
insl
fdivrs
add
aad
push
add
in
cmp
cld
imul
insl
adc
leave
or
out
cmp
ds
fcoms
sub
mov
pusha
or
fwait
scas
ljmp
xchg
jecxz
neg
mov
sub
daa
decb
shl
dec
push
and
je
bound
xchg
xlat
inc
mov
adc
notl
hlt
push
or
decl
cmc
andl
inc
sub
fstpt
sub
fwait
or
int
xchg
push
pop
ss
addr16
idiv
pop
cmp
xchg
fdivrl
mov
push
push
add
rorl
jbe
push
mov
dec
push
pop
and
push
jmp
add
xor
push
into
pop
xchg
movsb
and
rorb
xchg
xchg
fnstcw
decb
flds
in
nop
jo
imul
xor
mov
es
jo
push
fcoml
mov
popf
pop
daa
clc
push
xlat
xchg
and
adc
mov
cmp
pop
mov
mov
cmp
push
xor
out
mov
sti
orl
and
and
adc
cld
mov
inc
fmulp
jno
aam
cmc
or
mov
arpl
inc
add
jp
mov
cmpsl
mov
dec
iret
leave
bound
out
and
insl
add
in
sub
rcr
cwtl
cs
pushf
dec
add
mov
notl
pop
add
test
orb
mov
jbe
xorl
data16
xor
xchg
in
push
or
mov
clc
push
bound
not
push
cmp
cmp
std
adc
iretw
popa
pop
jae
repz
mov
add
jae
lock
jg
jnp
addr16
xor
in
loopne
mov
lods
sar
sbb
test
add
fwait
loop
adc
jmp
in
aad
je
shlb
dec
sub
setns
insl
push
mov
je
pop
shl
fsts
aaa
shlb
aas
aas
and
sbb
add
xchg
movsl
xchg
inc
and
mov
scas
lret
jns
in
dec
fadds
les
push
adc
sbb
ret
xchg
pop
lret
xor
pop
out
iret
jnp
or
roll
push
xor
cmp
xor
ret
push
enter
mov
adc
sbb
outsl
xchg
pop
lds
and
jo
scas
cmpsb
fisubrs
lods
xor
push
fimull
inc
inc
stos
and
in
mov
mov
pop
inc
sbb
pop
pop
mov
int3
sbb
int3
scas
adc
inc
jns
push
add
arpl
jno
in
addr16
mov
insb
lret
push
leave
lods
ror
or
setns
ljmp
adcl
fadd
xor
push
cmp
repnz
cli
jno
cmp
jns
ffreep
pop
push
mov
lea
mov
scas
popa
jbe
fdivp
mov
fcoms
inc
cli
mov
imul
js
es
cltd
xor
dec
push
sbb
das
add
cli
and
ja
into
pop
mov
push
hlt
jbe
cld
mov
push
flds
adc
scas
or
in
jge,pn
mul
inc
jle
je
ffreep
or
pop
sbb
mov
pop
imul
dec
dec
sbb
in
mov
bnd
jno
xor
push
or
cmp
cs
jg
popl
jmp
lret
fcoml
in
cwtl
out
push
lods
sub
aas
mov
stos
outsb
jbe
inc
add
dec
clc
shll
dec
mov
lods
and
popa
cmp
and
sarb
dec
cmp
ss
pop
aad
jns
je
jnp
repnz
cmp
outsl
shlb
in
inc
push
fadds
push
and
cli
lcall
cwtl
les
fidivl
idivb
xchg
cmp
cmp
jne
ds
fcomps
pop
and
cltd
adc
mov
rcr
test
stos
sub
rorl
push
push
pop
adc
add
sbb
inc
mov
inc
insl
cmp
pop
popf
out
fwait
sbb
cwtl
lahf
jnp
sbbb
popa
pop
push
in
jl
dec
xor
sar
inc
mov
push
into
jb
mov
aad
inc
fcmovnbe
aad
lret
sub
cmp
jne
ja
sets
sub
cmp
out
bound
mov
jb
mov
fst
mov
jmp
es
test
andb
mov
arpl
popa
repz
sub
clc
adc
sti
lock
mov
rorb
inc
mov
xchg
shr
xor
adc
mov
out
xchg
ficoms
notb
mov
dec
cli
fwait
loopne
shl
push
dec
repz
push
pop
stc
jg
cmpsl
adc
jmp
outsl
push
xchg
adc
decl
into
mov
jno
add
xor
push
push
or
aam
lods
int3
cli
push
popf
test
mov
lods
outsl
mov
lret
das
movmskps
mov
pop
or
fcoml
push
sub
nop
push
push
outsl
jmp
jge
pop
insb
mov
cmp
es
dec
pop
xor
or
rorl
add
push
cltd
dec
mov
jbe
mov
popa
ret
lock
fs
imul
je
in
sub
out
mov
mov
adc
orl
fwait
test
sbb
add
in
sbb
jb
xor
sbb
gs
stos
fstpl
aaa
sub
adc
xchg
add
aaa
sub
jae
loope
scas
mov
adc
and
adc
dec
adc
inc
iret
or
lcall
sbb
mov
adcl
jo
popf
xchg
add
fcompl
pusha
movsl
pop
xor
add
cmpb
push
jne
mov
sbb
add
mov
jne
sbb
icebp
sub
hlt
stc
fisttpl
jp
mov
loop
pop
fldenv
mov
pop
jb
lock
xlat
fiaddl
push
mov
cmp
mov
mov
jmp
cmp
ja
xor
in
adcb
fwait
dec
mov
stc
xor
testb
or
mov
sbb
mov
std
mov
xchg
mov
nop
mov
dec
jae
adc
fdivl
push
xchg
aad
sbb
xchg
inc
xor
shl
cmp
arpl
pop
mov
out
movsl
fucomp
xlat
or
test
idiv
sub
mov
jp
jns
sub
push
add
jns
xchg
std
dec
push
popf
mov
push
incb
outsb
mov
push
cmpsb
bound
dec
xor
aaa
cmp
mov
push
xchg
aas
addr16
out
pop
xor
mov
fs
mov
or
xchg
cmp
aad
push
mov
cmc
xor
inc
es
fwait
jmp
call
inc
push
ss
xor
inc
pop
xchg
xchg
jb
fdivrl
cmp
adcl
ficoms
dec
mov
leave
jae
xchg
xor
adc
jmp
sbb
xchg
xor
lock
in
fsubrl
pop
add
into
mull
je
cltd
jecxz
sbb
adcl
daa
mov
cmpb
fisubs
mov
jmp
mov
iret
leave
mov
testl
aaa
push
push
fucompp
or
inc
and
aad
lret
xchg
addb
dec
in
lcall
sub
rclb
pushf
and
inc
adc
inc
fcmovb
push
push
out
sbb
cmpsl
call
push
mov
shr
sahf
call
add
mov
jnp
adc
pop
push
add
out
test
sub
ret
lods
jp
xchg
dec
fisubrl
cwtl
jns
fdivrl
test
lods
mov
shlb
cmp
xor
cmp
mov
pop
mov
clc
ret
push
jnp
pop
or
lahf
cmp
adc
mov
rcll
adc
mov
xchg
push
outsl
mov
jmp
int3
inc
and
stos
popa
popl
fptan
push
outsl
stos
mov
movsb
ss
lds
or
push
jecxz
inc
mov
lds
xor
inc
sbb
push
adc
inc
push
rol
aaa
andl
push
mov
xor
lds
das
mov
mov
xor
lea
scas
adc
mov
out
cs
fisubl
imul
pop
add
sti
addr16
adc
sti
pop
cli
xchg
clc
int
loopne
in
gs
imul
out
sarb
or
mov
ret
push
negb
out
adc
out
jg
or
or
jno
outsl
imul
xchg
outsl
movl
xchg
test
inc
pop
incb
jl
test
and
pop
arpl
xor
pop
jo
mov
lock
lock
push
sbb
out
sbb
jne
rolb
xchg
or
lcall
test
push
mov
sbb
scas
inc
mov
and
jp
xchg
xchg
adc
push
ljmp
insb
dec
jbe
pushf
sarl
loopne
push
sbbl
outsb
push
lcall
xchg
add
out
cmovno
mov
orb
aas
push
adc
je
pop
pop
xchg
roll
pop
stos
push
xchg
pop
inc
call
mov
inc
cmp
jae
lret
sbb
out
jbe
cmpsl
pop
nop
dec
adc
adc
cltd
jge
ja
cs
lret
push
stos
cltd
daa
xchg
or
icebp
add
iret
jg
push
loopne
pushf
sahf
out
or
lret
xchg
pushl
jae
inc
jp
sbb
mov
inc
insb
jo
fistps
cmp
jmp
cli
shlb
lahf
loopne
mov
sbb
les
test
or
xor
fnstsw
adc
call
inc
call
add
xchg
lret
fwait
popa
push
fstpl
push
push
mov
rclb
cmpsl
lcall
scas
dec
add
mov
pop
or
sbb
inc
mov
and
scas
fisubrs
insb
jp
sub
xchg
xor
lcall
pop
je
or
stos
mov
push
inc
daa
sub
or
or
stos
and
enter
xor
pop
dec
mulb
inc
fmulp
push
fs
pop
adc
test
dec
or
orl
pushf
lret
inc
push
sahf
mov
in
aas
xor
aas
jg
inc
dec
icebp
xor
mov
mov
jo
lods
mov
ss
adc
jae
xor
adc
jp
in
fdivs
daa
imul
jno
inc
xchg
cmp
dec
mov
dec
pop
push
xor
ljmp
pop
sahf
adc
mov
fiadds
imul
popa
addr16
xor
xchg
sub
addr16
stos
or
lcall
mov
dec
cmp
mov
fwait
call
lret
sub
jmp
pop
movsl
movsl
dec
xchg
mov
mov
mov
ficompl
adc
insl
and
out
or
xor
cs
sub
repnz
and
dec
dec
lods
sbb
add
xor
pop
push
and
divb
sbbb
lcall
and
in
shr
xchg
push
mov
out
jo
gs
lods
fstl
in
punpckldq
sbb
into
mov
xor
inc
xlat
or
in
fs
cltd
jg
insl
mov
pop
mov
in
dec
cld
xor
mov
xchg
sub
movsl
cmp
cld
outsb
rolb
jae
cmp
popf
sub
insl
cmp
data16
cmp
sti
js
das
movsl
movsb
mov
iret
dec
icebp
xchg
adc
aas
jo
out
mov
push
cmc
test
xor
test
or
pop
arpl
xchg
aam
sub
outsb
sub
xchg
lds
xlat
aam
lods
or
mov
out
insb
jg
push
fucomi
inc
xchg
fcmovb
bound
push
int
fsubrs
sub
testl
xchg
inc
sbb
mov
scas
repz
repz
popf
xchg
mov
pop
or
pop
frstor
lods
enter
jns
aad
cmpsl
loopne
jp
bound
inc
stos
enter
mov
add
retw
ret
packssdw
test
rolb
lahf
mov
inc
or
aas
aaa
and
xor
mov
test
out
push
stc
add
adc
and
mov
pop
int3
add
add
jne
gs
jecxz
jae
hlt
jl
les
sbb
jno
loop
mov
and
inc
mov
push
jp
andb
add
test
imul
stos
cwtl
sub
std
xor
shll
addb
loope
gs
fmull
mov
out
jge
pop
and
movsl
call
inc
jae
or
lods
arpl
inc
repnz
lea
xor
jne
loopne
or
loopne
xlat
cmp
test
sbb
inc
movhps
inc
jge
cs
stos
push
xchg
loop
xchg
ret
xor
mov
mov
rcrb
es
fadds
jmp
enter
push
xor
pop
gs
ds
sbb
lock
push
pop
js
dec
xchg
movsb
adc
adc
popa
adc
xlat
pop
jno
xorl
mov
add
xchg
push
xor
sahf
cmpsl
mov
stc
js
scas
xor
and
mov
cmpb
dec
es
add
nop
inc
stc
aaa
or
sub
jmp
mov
pop
add
sbb
sbb
int
or
mov
xchg
btr
cmp
cs
lahf
add
inc
cmp
xor
fstpt
jno
test
test
mov
cmp
adc
add
or
int
aam
shrb
aam
pop
lea
mov
push
sahf
pushf
aam
xchg
sub
mov
aaa
fisubrs
mov
push
jno
jae
mov
sbb
xor
lods
mov
ficomps
xchg
push
or
adc
pop
pop
add
popa
ljmp
jbe
lods
inc
in
mov
and
dec
mov
sub
mov
shlb
inc
pop
xchg
and
test
and
mov
outsb
daa
fwait
xchg
mov
dec
and
sbb
xor
push
shlb
mov
cmc
push
jb
and
lahf
add
aas
push
inc
sbb
cli
sub
push
pushf
inc
sbb
mov
in
lcall
adc
or
aam
xchg
push
add
hlt
mov
into
mov
popf
mov
loopne
sub
jmp
cmpsl
movsl
pop
and
xor
divl
insb
push
dec
nop
lahf
sbb
add
or
mov
cmp
mov
inc
mov
js
jns
adc
notb
pusha
loope
sub
push
subb
nop
gs
mov
out
add
stos
inc
in
rorl
mov
xchg
inc
sbb
scas
adc
cmp
daa
mov
inc
pop
xchg
jmp
pextrw
sub
test
pop
imul
std
add
cwtl
lds
mov
dec
lea
xor
das
dec
xchg
pop
cld
lret
and
pop
adc
hlt
in
mulps
mov
cmc
and
jbe
nop
scas
push
mov
jmp
mov
popf
or
inc
mov
pop
pop
pop
pop
dec
jmp
and
pop
add
das
add
cmovno
stos
imul
inc
xor
loopne
mov
sub
daa
jmp
in
aad
in
inc
rolb
rolb
call
lods
xor
loopne
xchg
jb
mov
icebp
cmc
aam
mov
scas
lods
lcall
cwtl
push
fstpt
rcl
mov
test
into
and
fadds
lods
xchg
out
jge
psraw
sbb
dec
pop
mov
sub
push
mov
push
and
pop
and
xchg
arpl
push
pop
adc
sbb
push
xchg
les
cld
imul
cmp
test
int3
dec
arpl
cli
add
jo
pushf
mov
call
insb
push
cmpb
mov
sti
pop
sahf
pop
jge
cmp
mov
hlt
lods
out
fwait
mov
scas
out
stos
sti
add
mov
aaa
and
add
addr16
stc
adc
je
jmp
sub
loopne
mov
icebp
movl
or
ds
inc
jo
adc
addl
loopne
daa
mov
inc
and
cmc
std
and
mov
lods
mulps
jns
xchg
and
jg
inc
mov
lea
inc
jmp
into
dec
ja
lock
mov
cld
outsb
push
dec
divb
addb
shlb
push
cld
mov
xor
pushf
xor
push
addr16
int
mov
stos
push
mov
cltd
xor
sbb
mov
pop
js
mov
fidivl
sub
sub
pop
cltd
out
xchg
dec
xchg
in
push
stos
push
or
loopne
dec
or
pop
in
sbb
pop
jg
sub
pop
cmc
int3
push
ret
cld
loope
and
ret
lock
andb
scas
addr16
mov
rcrl
mov
rorl
add
inc
xchg
dec
pusha
inc
sbbl
cs
fidivs
mov
push
dec
shll
and
ja
xor
mov
sbb
mov
push
inc
sbb
pop
into
lret
mov
rcl
pushf
pop
pop
mov
gs
into
fisttpll
pop
cli
call
nop
push
test
mov
sbb
push
add
dec
add
nop
sahf
ja
fucomp
lods
js
into
outsl
in
mov
into
pushf
shll
jb
roll
cli
lcall
push
adc
jbe
mov
and
pop
lcall
mov
sbb
lret
cmp
mov
insl
roll
adc
hlt
cmpl
cmp
addr16
pop
pop
fdivrs
fld
stos
mov
xor
push
sbb
pop
ret
cmp
mov
jge
xor
aaa
add
inc
addr16
mov
nop
lea
adc
push
add
mov
test
ret
dec
lahf
nopl
icebp
icebp
das
fldenv
stos
xchg
popa
icebp
lcall
xchg
xor
dec
movsl
int
lds
pop
stos
mov
sub
daa
and
adc
mov
jl
sbb
push
mov
push
sub
jp
insl
or
jo
test
fsubrp
fcoml
nop
pop
cltd
inc
jle
pushf
fwait
enter
sbb
aas
pop
ret
cld
jl
cmp
mov
movsl
ror
jg
jns
inc
imull
mov
mov
mov
rolb
xor
mov
das
mov
sbb
cmpsl
dec
inc
test
or
xor
pushf
and
and
mov
imul
push
pop
cmc
popf
and
dec
shrl
mov
jg
aam
stos
adc
mov
adc
xor
lret
or
call
or
je
adc
jnp
lret
and
stos
pop
add
cmp
ljmp
and
flds
mov
call
cltd
outsl
add
xchg
add
and
cs
and
push
add
xchg
mov
aas
xchg
je
pop
dec
pop
lret
push
cmp
push
call
ds
divb
mov
lds
stos
adc
fstpl
pop
mov
cmp
aas
shrl
test
adc
jnp
add
jns
mov
adc
or
in
lcall
push
pop
fisttpll
mov
jle
jecxz
jl
mov
inc
ror
inc
mov
stos
pusha
sbbl
pop
mov
adc
cmp
stos
mov
jle
xchg
jbe
cmp
mov
push
sub
mov
fsubl
repz
das
push
int3
inc
or
jnp
fildll
push
mov
adc
cmp
pop
aad
and
mov
push
cmpsl
fsubs
pop
cmp
ss
fs
mov
sub
xchg
inc
push
sbb
int3
mov
or
loope
int
and
add
outsl
enter
dec
xchg
sahf
adc
repz
into
mov
sub
sahf
push
push
test
arpl
mov
stos
add
aas
pand
aas
xor
dec
adc
add
iret
nop
cmp
mov
mov
push
mov
adc
xor
pop
inc
dec
gs
hlt
cmpsl
jns
push
mov
mov
std
mov
roll
xor
test
push
jl
sahf
jg
pop
xor
test
cmp
push
mov
movsb
jb
subl
push
js
sti
int3
adcb
leavew
dec
jne
xor
mov
addr16
insb
and
lahf
aam
mov
mov
test
arpl
daa
leave
sbb
andb
test
je
push
mov
rcrb
mov
cmc
iret
fildll
ror
sbb
daa
ret
scas
mov
sbb
fldl
clc
mov
mov
mov
or
int
inc
leave
cli
jb
loope
loop
add
loope
or
notb
xor
jmp
sbb
js
neg
int3
fwait
mov
fldenv
mov
lods
je
aam
adc
mov
enter
push
sub
sbb
lahf
es
lods
mov
in
orl
aad
adc
das
aad
xor
std
mov
jg
movsl
imul
addr16
mov
xor
cmp
pop
mov
pop
jp
sbb
shl
lds
mov
cs
inc
cmp
cmp
cld
stc
mov
outsb
cmp
cmp
dec
out
fsubl
movaps
clc
and
outsb
pop
pop
ds
ds
xlat
xchg
std
push
inc
shlb
aas
ficoml
and
ja
mov
push
scas
inc
icebp
test
pop
cltd
enter
es
jecxz
add
mov
aas
adc
jecxz
cli
xchg
stos
mov
dec
adc
loope
and
push
adc
jb
cmp
aas
popf
adc
test
sbb
mov
add
int
outsl
adc
pop
ss
jl
add
xchg
js
sub
adc
rol
ret
fidivs
adc
adc
pop
rcl
stc
add
or
je
add
dec
nop
dec
and
hlt
test
mov
mov
ss
daa
jns
xor
adc
orb
xor
outsl
jbe
cmpsb
cmc
mov
xchg
and
adc
pop
loope
xchg
push
ficomps
dec
jl,pn
call
cmc
add
es
inc
mov
pop
push
lods
ja
les
imul
sti
pushf
adc
mov
js
push
cwtl
repnz
movsb
and
cli
mov
cmp
into
and
fcomi
popa
cmp
inc
loopne
int
pop
xchg
or
and
loop
je
or
pop
xor
nop
data16
pop
inc
shll
jbe
mov
jp
xchg
and
adc
cmp
sti
sub
mov
decb
cmc
push
push
fistpl
into
rorb
bound
sub
pop
dec
cmp
push
clc
orb
and
dec
mov
adc
push
xor
dec
aad
sbb
mov
sub
jmp
jbe
out
xlat
in
call
mov
xor
and
fwait
and
lods
jne
jnp
mov
stc
loopne
mov
mov
enter
leave
fildl
addb
loopne
leave
or
les
pop
les
testb
lcall
pop
and
icebp
into
xchg
add
pop
daa
jno
inc
inc
mov
mov
scas
adc
xor
cmpsb
test
mov
push
ljmp
arpl
dec
js
jle
mov
cwtl
ljmp
lea
aad
adc
fidivl
cmp
clc
fdivrl
out
and
mov
stos
jmp
pop
or
daa
xor
adc
sub
or
and
pop
stos
jbe
cmp
adc
aas
mov
nop
lret
jb
jb
popa
and
sbb
rorl
ret
pop
dec
add
xor
or
pop
mov
sbb
into
xor
stos
filds
repnz
shrb
xchg
out
fbstp
out
xor
xor
sub
fs
imul
adcl
loop
rclb
pop
repnz
xchg
cli
push
push
in
das
movsb
pop
gs
cmp
sbb
bound
jp
test
or
aam
stc
nop
sub
xchg
sub
and
inc
fucomip
scas
xchg
sbb
xchg
aad
mov
mov
cltd
pop
aad
xchg
push
xchg
shll
aam
fwait
shrb
nop
imul
in
es
and
adc
mov
push
push
test
adc
jge
push
mov
or
dec
dec
push
rcrl
insl
jg
mov
push
rolb
lea
leave
mov
and
mov
lret
lahf
sbb
mov
aas
cmpsl
arpl
int
xor
mov
or
ret
jmp
out
xorb
mov
or
xchg
mov
push
nop
pop
repnz
shll
fidivl
jmp
cltd
orb
jns
xlat
xor
iret
xchg
mov
in
adc
testb
or
xor
mov
insb
shll
or
mov
imul
or
mov
insl
jmp
stos
sarl
fs
in
arpl
scas
mov
std
xor
cli
sar
test
fcmovnb
fbstp
fwait
je
mov
inc
jo
mov
xor
xor
shll
cmp
adc
inc
or
loopne
dec
and
cmc
imul
push
and
dec
loope
xor
pop
xor
adc
rcl
push
push
or
jb
sti
inc
in
das
fdivrp
ja
inc
mov
or
arpl
sahf
repz
iret
test
test
push
repz
dec
inc
out
arpl
pop
jno
inc
push
jo
pop
ret
jno
test
add
xchg
inc
outsl
loop
push
push
adc
stos
test
in
stos
in
das
pop
inc
aad
sub
push
sbb
cmp
xchg
sub
outsl
push
adcb
or
pop
jle
cmc
mov
cmp
adc
fdiv
out
dec
test
orl
xor
iret
mov
ljmp
scas
cmp
imull
addr16
loope
sbb
mov
or
pop
mov
in
scas
andnps
cmp
insl
loopne
mov
out
inc
dec
pop
jo
jecxz
push
sub
lahf
pop
cmp
bound
and
push
pop
add
sbb
inc
scas
or
loopne,pt
out
scas
cwtl
mov
lds
dec
xchg
jbe
mov
imul
scas
les
testl
xchg
or
pop
fwait
int3
ficomps
mov
push
pop
out
push
cs
mov
dec
into
mov
stos
cs
pop
mov
icebp
lods
inc
test
arpl
faddl
mov
hlt
mov
xorb
data16
mov
sarl
mov
mov
hlt
and
nop
sbb
mov
push
jle
cmc
ret
xchg
out
hlt
add
fsubrs
jne
dec
psrlq
ret
mov
jmp
mov
dec
push
cmp
dec
mov
xor
mov
fisubrl
outsb
jg
scas
xchg
xor
jnp
xor
daa
and
cmpsb
out
or
push
mov
hlt
fidivl
andl
xchg
jno
in
bt
mov
mov
js
and
and
sbb
jnp
or
and
sub
mov
sbb
outsb
int3
xor
lods
shlb
test
fisubrl
cmp
cs
lods
popa
adc
inc
pushl
scas
sub
push
mov
lds
dec
icebp
inc
adc
test
push
in
or
mov
lahf
sbb
mov
bound
xorb
mov
mov
rcll
mov
test
cmp
or
pop
push
and
outsb
adc
or
jl
sub
jmp
sbb
dec
mov
mov
xor
add
sbb
xchg
sahf
arpl
sub
adc
gs
mov
subb
dec
mov
clc
lods
push
pop
mov
test
hlt
shl
call
sbb
ss
pop
shll
mov
cld
mov
pusha
xor
cmc
push
adc
add
push
push
cmp
inc
xchg
jle
bound
out
add
cmp
loopne
and
pushf
pushf
push
test
xchg
inc
jg
sub
inc
jb
dec
mov
or
xchg
pop
pop
pop
dec
cmp
test
inc
test
loope
sbb
jns
addr16
shlb
or
out
mov
fstps
sbb
push
xchg
inc
dec
dec
test
rclb
push
popf
mov
stos
mov
cmp
pop
mov
sub
loopne
imul
imull
xor
call
jecxz
out
js
mov
mov
int3
mov
and
inc
dec
fbld
cmp
push
jae
addr16
or
add
and
push
pop
adc
jle
mov
jae
pop
cs
sub
ret
push
cmp
das
mov
es
xchg
xor
shr
not
jle
into
sbb
pop
leave
mov
push
es
enter
mov
leave
mov
ds
shll
loope
xlat
sub
jne
xchg
fists
jecxz
xchg
dec
dec
push
repnz
fiadds
pusha
inc
or
jmp
add
in
sub
hlt
xchg
add
push
cmpsb
roll
punpckldq
sbb
loope
ja
mov
or
mov
sar
or
mov
adc
cld
arpl
sbb
test
push
dec
pop
push
mov
cwtl
xor
jmp
inc
je
sub
and
daa
loope,pn
subb
sub
jp
popf
jg
fadds
cwtl
xlat
xlat
pand
xchg
adc
loopne
cli
xchg
mov
xchg
push
sbb
mov
in
das
pushf
cmp
gs
mov
leave
dec
ljmp
sbb
push
std
cmovns
cmp
or
mov
inc
ret
aad
push
lcall
xor
rcrl
inc
push
fildl
dec
cmpsl
decb
xor
icebp
shrl
xchg
lret
inc
sbb
push
mov
xorb
popa
sbb
test
ljmp
mov
das
imul
sbb
pusha
xchg
xlat
adc
in
inc
jle
cmc
inc
ja
lret
stc
cmp
lock
les
les
cmpb
mov
in
outsl
outsb
xchg
mov
in
jcxz
mov
push
inc
rcrl
push
jp
test
popf
pusha
stc
dec
mov
imul
out
xchg
repz
adc
ficoml
push
jne
out
out
jg
pop
xor
mov
mov
sbb
dec
pop
fidivrl
int
subb
stc
mov
loope
in
add
mov
clc
mov
je
sbbl
lods
movsb
adc
or
jecxz
stos
pop
pop
sub
cmp
inc
mov
fsubs
dec
push
sub
leave
outsl
movsb
icebp
pop
or
push
cwtl
push
pop
or
shll
push
test
in
jecxz
aam
add
leave
xchg
es
outsb
movsl
hlt
inc
movsb
mov
iret
cld
insl
xchg
sub
repnz
mov
lods
cmpsb
inc
jmp
adc
adc
ljmp
jp
mov
add
lea
mov
cwtl
and
outsl
daa
mov
mov
pop
jb
sahf
test
inc
movsb
insb
orb
adc
xchg
rorl
aas
mov
or
push
mov
fimull
hlt
inc
pop
xor
pop
std
or
lds
stos
mov
inc
and
adc
shlb
sbbl
arpl
hlt
cld
dec
sbb
out
dec
adc
sub
aaa
xchg
roll
jae
repnz
pop
jge
jle
imul
and
pop
and
or
les
mov
sbb
ja
addr16
dec
and
in
adc
dec
cmp
dec
push
mov
insb
aaa
or
inc
jbe
lcall
dec
xchg
mov
js
cmpsb
mov
cwtl
push
pop
sbb
lods
dec
jle
pushf
mov
jmp
mov
stc
nop
test
push
leave
mov
scas
push
mov
pop
xor
je
in
lahf
lcall
add
outsb
or
dec
lret
test
in
xchg
ds
jp
mov
inc
out
or
lcall
push
fadd
push
cmp
inc
jl
call
jo
addr16
lahf
nop
jg
push
pop
push
cmp
or
adc
pop
decb
dec
cmpsl
cs
or
xor
and
cmpsl
stos
icebp
icebp
pusha
dec
jp
js
push
cli
int3
fimuls
aam
mov
mull
dec
repnz
outsb
xor
dec
stos
mov
cmp
out
cmp
lods
sti
or
js
mov
into
daa
add
lods
lret
dec
test
jno
lret
dec
add
cmp
in
push
or
addb
aad
pop
cmp
es
ljmp
adc
push
cmp
repz
xlat
push
and
and
mov
lahf
loop
jo
dec
xor
sti
adcb
xor
int3
out
rcll
mov
icebp
inc
add
inc
jnp
lcall
mov
push
push
cmpsl
in
xchg
cmp
ljmp
sbb
dec
cmpsl
inc
sbb
rcl
sub
into
mov
mov
movsl
xor
flds
sub
cmp
mov
sbb
je
xor
adc
out
push
pop
inc
cmp
movsl
and
lds
stc
clc
das
cld
mov
arpl
movsb
cmc
mov
scas
popa
lret
jg
cmp
mull
jge
mov
sahf
sub
inc
insl
outsl
dec
dec
mov
test
sub
push
clc
add
rcrb
incb
test
pop
sub
pop
push
jb
pop
sbb
les
cmc
filds
add
cmp
mov
dec
cmp
enter
subb
js
sbbb
bound
push
pop
or
not
or
and
dec
pop
pusha
xchg
sbb
int
cmc
adc
xor
sbb
xchg
into
inc
outsl
jae
and
or
sub
push
dec
jae
mov
push
stos
ficoml
dec
leave
mov
jecxz
mov
lock
popf
mov
in
add
inc
mov
xchg
cs
iret
das
push
outsl
sarl
in
fwait
jl
test
shlb
adc
xorl
cmp
adc
mov
scas
pushf
in
enter
cmpsb
xchg
arpl
in
imul
sub
xor
paddsw
sbb
sahf
loopne
lea
out
leave
repnz
xor
jno
or
clc
sbb
push
mov
scas
cltd
add
xchg
addr16
lds
inc
insl
jle
mov
push
fwait
xor
mov
scas
testb
js
wbinvd
lea
xlat
fildl
loop
daa
push
or
repz
into
fiaddl
pop
scas
mov
dec
lahf
jp
lret
addr16
sbb
test
push
das
cmp
pop
adc
inc
into
mov
pop
filds
aaa
add
dec
xor
jecxz
mov
das
add
pop
mov
inc
lock
movsb
mov
test
cs
dec
adc
jns
popf
inc
pusha
hlt
je
daa
mov
clc
dec
mov
mov
cmp
jp
pop
imul
mov
rcl
hlt
or
cmpsl
icebp
lcall
mov
es
xor
mov
sbb
push
or
stos
mov
mov
push
xlat
jg
cmp
lret
sahf
push
cld
xchg
push
mov
arpl
cltd
mov
popf
inc
add
push
mov
xchg
sub
mov
jmp
xor
add
jp,pn
int
daa
or
movsl
add
sub
add
and
vporq
lret
mov
or
mov
pusha
test
cld
or
adc
out
cmc
enter
adc
adc
add
mov
sbb
imul
xor
mov
mov
adc
xorl
rorb
xor
adc
and
movsl
cmp
movsl
push
mov
jmp
sti
rclb
mov
jno
jne
icebp
xor
jo
dec
adc
or
jecxz
lock
arpl
shr
out
js
cmc
xlat
sbb
andl
sub
or
jle
lods
loope
stos
xchg
mov
cmp
insl
jno
push
cld
insb
sbb
or
outsl
push
push
dec
shll
into
sarb
movsl
or
les
shlb
call
fcomps
testb
mov
jmp
push
inc
mov
pop
mov
and
cmp
sub
adc
stc
push
mov
push
int
mov
add
out
shl
std
mov
jg
sbb
lahf
pop
les
lock
sarl
add
lods
movsb
sub
and
mov
pop
or
push
sbb
mov
ret
lea
mov
loopne
arpl
lods
pop
xchg
add
push
das
mov
inc
or
outsl
inc
cltd
pop
add
out
jo
hlt
push
cwtl
dec
addb
int
mov
call
or
fisubs
mov
mov
mov
aas
xor
inc
mov
and
out
dec
push
pop
mov
xchg
cli
iret
dec
push
sbb
xchg
outsb
pop
ss
push
repnz
aam
mov
into
ljmp
mov
rolb
rclb
cltd
in
jb
sub
mov
pop
mov
andb
imul
xor
sub
mov
shl
pop
loopne
dec
scas
inc
rcrl
out
fmuls
test
cmp
pop
add
lods
dec
cmp
mov
cmc
mov
fsubl
negl
push
pop
je
js
out
aaa
jecxz
add
shrl
xor
push
xlat
mov
sbbb
lea
call
sub
mov
or
rorl
adc
xchg
mov
rorl
addr16
sub
cmc
mov
popf
adc
imul
test
jae
or
dec
and
jnp
or
pusha
mov
dec
and
adc
sti
ja
sub
jecxz
pop
loopne
outsb
or
movsb
add
sbb
mov
adc
adc
or
sbb
fst
jle
xchg
insb
inc
xchg
clc
xchg
stos
in
jl
addr16
cmp
mov
imul
push
out
push
push
pop
xchg
sub
push
cmpsb
sbb
adc
sbb
dec
popa
or
nop
fisubs
push
insb
enter
stos
lea
dec
sbb
mov
push
xor
xor
outsl
ja
and
push
push
out
push
jge
in
loopne
clc
mov
mov
dec
out
jae
sbb
cmpsl
push
negb
movsl
and
jl
add
mov
orl
es
loop
adc
addb
xor
jns
cmpsb
jo
sti
rorb
std
push
idivb
mov
sbb
sbb
or
inc
xchg
mov
xlat
add
stos
ffreep
mov
jbe
cmc
sarl
subb
das
push
les
insl
movsl
jnp
adc
jno
mov
pop
and
add
sbb
sbb
xchg
dec
jl
jmp
movq
fucomi
mov
mov
lea
and
sbb
cmp
int
and
pop
bound
dec
push
sbb
test
shlb
sbb
mov
enter
testb
mov
jge
push
push
ret
mov
into
mov
pop
aam
incb
mov
push
lret
notb
lcall
dec
add
std
ret
dec
pop
mov
inc
jecxz
gs
adc
or
mov
pushf
jg
push
inc
imul
fsubs
jle
fsubp
add
mov
cmp
pop
subl
xchg
mov
cmpl
into
adc
lcall
mov
add
imul
dec
jmp
xchg
addb
cmp
xor
das
shrl
idivb
test
movsb
jae
adc
adc
pushf
loop
mov
push
push
xsha1
cmpsb
or
scas
pop
dec
xchg
dec
stos
loope
inc
insl
cmp
pop
out
das
enter
or
in
dec
inc
scas
shrl
adc
clc
sub
add
sbb
push
inc
jmp
cmp
test
stos
pusha
adc
push
lret
sub
jg
je
and
sbb
gs
jo
xor
dec
scas
mov
push
dec
lods
dec
aas
cmp
in
add
dec
rcrl
adc
jle
jmp
cwtl
push
fcmove
cs
push
iret
xchg
xchg
inc
rorl
dec
rclb
roll
inc
cwtl
pop
in
loop
xchg
or
jge
cli
cmp
push
dec
xor
arpl
sub
mov
mov
int3
push
push
sbb
or
pop
rcl
jae
or
daa
push
shlb
pop
jecxz
push
mov
xchg
mov
insb
repnz
mov
mov
sbbb
push
scas
test
call
dec
test
ficoml
mov
pop
xchg
adc
inc
sahf
jnp
addb
jl
insb
sbb
sub
push
mov
nop
xor
cmp
std
add
andb
fcmove
mov
loopne
lods
scas
pusha
lret
fnop
dec
ret
xchg
lods
outsb
pop
sbb
clc
mov
in
xchg
arpl
inc
dec
paddsw
add
push
shrl
push
ja
jmp
lahf
cmp
nop
mov
xchg
inc
sbb
and
and
jp
or
popa
mov
mov
sahf
jo
lret
cltd
jecxz
push
mov
imul
jl
jmp
out
sbb
mov
jg
ror
inc
sbb
jg
xchg
mov
jo
insb
cmp
lock
dec
cmpsb
fldl
ljmp
lea
cmp
inc
js
push
sub
leave
fwait
gs
ss
cltd
scas
push
and
popa
test
mov
or
sbb
cmp
inc
xchg
inc
nop
mov
aas
xchg
std
or
mov
inc
pop
es
cmp
mov
and
xor
add
aas
or
loop
dec
stos
in
in
pushf
repnz
ret
sub
or
loopne
inc
loopne
rorl
cmpsb
dec
inc
in
inc
xor
testb
cmp
xor
jnp
pop
addr16
push
mov
add
or
shrl
jmp
das
sti
in
lods
loope
adc
into
sbbl
cmc
movsl
mov
sbb
mov
jecxz
andb
sbbb
in
xor
xor
add
pop
push
sahf
jbe
cld
and
setae
ret
test
daa
pop
cmpsl
cmc
mov
push
inc
std
or
shl
jmp
add
pop
cli
dec
mov
xor
pop
mov
test
push
rcrb
jmp
nop
and
std
inc
dec
repz
fdivrl
cli
pushf
push
scas
outsl
push
mov
sbb
bound
scas
enter
inc
fs
ja
pop
fisttpl
in
add
pop
popf
add
mov
dec
test
cmp
lret
cmp
les
push
mov
scas
outsb
in
inc
jle
shl
fdivrs
cmp
popa
xchg
hlt
mov
out
in
mov
mov
or
imul
add
mov
cmpsb
fildl
fbstp
pop
and
imulb
adc
sahf
cmpsl
mov
ljmp
repz
xor
adc
push
cmpsl
aas
les
popa
push
cmp
jle
mov
or
adc
pop
and
mov
add
ja
pop
std
mov
js
fdivs
imul
xchg
je
xchg
rorb
ljmp
sub
cmpsl
pop
clc
addl
rorb
out
xchg
inc
dec
out
dec
aam
xchg
sub
pop
repnz
and
pop
xor
loopne
call
pop
aam
fcmovnb
adc
ret
mov
jmp
jnp
shrb
shll
leave
inc
xchg
outsl
fcmovu
not
fcmovbe
loopne
dec
dec
add
in
jmp
cltd
stos
jns
xchg
aas
ss
pop
pop
fldenv
adc
inc
nop
lcall
mov
adc
push
push
fildl
mov
ds
xor
movsl
pop
push
mov
push
notb
mov
sbb
je
loope
jo
movsl
cmpsb
mov
dec
loop
add
iret
xor
dec
mov
lods
lahf
cs
test
xor
pop
fwait
loop
jge
xchg
adc
aad
scas
divb
xchg
push
icebp
clc
push
adc
jge
xchg
pushf
xlat
adc
push
xchg
adc
xlat
sub
cmpsl
outsl
dec
ret
imulb
ret
xchg
push
lea
test
aaa
inc
scas
mov
loopne
out
pop
aad
jmp
leave
sti
mov
jp
cmp
jl
inc
movsb
jge
pushf
pusha
sbb
in
adc
sbb
jge
sub
mov
xlat
test
mov
sahf
out
imul
aaa
enter
popf
sub
shrb
or
insb
inc
hlt
xor
sbbl
pop
push
add
or
and
test
les
lock
pushf
test
out
fmul
adc
in
stos
iret
rclb
add
test
inc
aad
rcrb
jp
sbb
mov
xchg
hlt
and
in
or
inc
lret
cmp
mov
and
adc
scas
int3
adc
icebp
jl
loopne
enter
push
incb
and
gs
mov
fwait
enter
addr16
push
loop
cmc
dec
mov
andb
aaa
iret
aad
cld
cmp
aas
sub
cmp
pop
xor
fs
and
jmp
pushf
sbbl
jnp
and
imul
cmp
mov
in
or
pusha
add
mov
fisttpll
repnz
add
mov
mov
xor
jnp
mov
sub
out
inc
je
cmp
lods
and
cli
movsb
or
jb
and
dec
pop
xor
stos
inc
nop
aam
push
sub
into
sub
pop
mov
inc
jge
clc
addr16
xchg
gs
push
mov
cmpsl
shlb
scas
mov
xor
into
inc
lcall
fs
packsswb
sbb
sub
ja
fld
int
mov
and
cmp
je
sub
xchg
adc
mov
or
lods
and
insb
xchg
pop
fsubs
add
outsb
xor
adc
xor
jo
mov
sbb
das
xor
jo
in
or
sbb
nop
cmp
out
and
push
xchg
and
jmp
push
cmp
fucomp
cmp
inc
cmp
shrl
imul
aas
adc
not
test
sti
sarb
dec
leave
xchg
data16
mov
cltd
xchg
push
sub
sub
in
xor
mov
jns
popa
cmpsb
push
enter
push
dec
sbb
mov
jl
mov
sub
fwait
aam
xor
sub
jae
stos
mov
rol
repnz
out
addb
push
cmp
outsb
inc
imul
jmp
out
lods
lcall
in
je
enter
shll
movsl
popa
inc
sarb
in
das
inc
pop
mov
cmc
test
mov
xchg
cmp
mov
or
cltd
in
test
or
lods
adc
adc
test
stc
inc
xor
pop
push
loop
es
loope
arpl
mov
lods
dec
pop
push
lods
sbb
or
and
int
lcall
ja
mov
sub
mov
cli
mov
in
mov
cmp
pop
into
dec
imul
out
dec
fs
insl
ss
inc
int
imul
test
push
sbbb
repnz
sub
or
loope
icebp
insl
nop
fbld
out
fdiv
mov
jns
mov
and
and
jo
pop
push
cmpsb
adc
out
or
jmp
mov
cmc
pop
dec
or
out
jl
pop
aas
sub
sbb
jl
pop
aad
lret
fwait
jecxz
jmp
xchg
jmp
fs
int3
nop
pop
jecxz
cmpsl
push
lds
pop
sbb
cli
sub
mov
lcall
sbb
and
call
pop
add
inc
jle
shr
sub
jae
aas
inc
fs
imul
pop
push
pop
imul
test
jo
test
push
fnstenv
insb
jns
pop
push
or
repnz
jmp
jg
add
jp
loope
sbb
mov
cmp
in
adc
pop
fwait
pop
rorb
movsb
sbbl
mov
jne
xor
inc
fdivl
push
jl
shlb
js
rolb
inc
xchg
cmp
leave
jbe
push
mov
jns
mov
xor
lods
mov
es
repnz
cmp
push
sbb
mov
jo
pusha
icebp
aad
jnp
xchg
call
and
mov
and
or
inc
cmpsb
hlt
clc
mov
popa
and
jl
add
addr16
inc
mov
js
xchg
push
outsb
pop
jae
fcomi
or
inc
shll
pop
aas
fsts
shlb
std
in
shlb
stc
mov
push
jg
out
dec
cmp
pop
into
pop
icebp
out
dec
mov
xor
push
inc
lret
add
test
fcomip
push
es
outsb
leave
xchg
cmpsl
jmp
fs
ficoml
jno
jbe
and
ret
push
adc
add
nop
es
xchg
ljmp
mov
pusha
repz
test
cmpsb
xchg
pop
dec
cmp
or
xchg
push
icebp
lds
loopne
mov
xchg
je
inc
jnp
fdivr
popa
xchg
xchg
scas
mov
xchg
stc
mov
jle
inc
stos
mov
sbb
cmc
imul
imul
fmull
fwait
jne
es
int3
cwtl
mov
xor
push
xor
aad
loope
aaa
mov
or
mov
sbb
pop
sbb
je
xor
mov
stos
add
push
dec
pop
push
adc
das
adc
hlt
and
jne
aam
xchg
push
aas
mov
stos
push
shrl
push
add
mov
movsb
movsl
mov
in
cmpsl
mov
push
loopne
loope
xchg
ss
dec
cmc
mov
dec
xor
mov
stos
push
pop
sbb
lods
cmp
imul
add
dec
xor
nop
dec
dec
jbe
adc
les
xchg
sarb
scas
call
dec
enter
testb
pop
cmp
dec
xor
pop
pop
push
out
fldl
jl
push
or
cwtl
xlat
shll
jb
cltd
sarb
pushf
insl
cmpsl
mov
test
aam
xor
inc
mov
int
jmp
xor
push
push
lcall
pop
push
lods
xor
dec
mov
int3
clc
fldenv
fwait
cmp
push
inc
or
popf
mov
jmp
and
jns
mov
popa
out
or
push
shll
mov
test
sbbb
sub
stos
inc
xor
lret
in
add
adc
mov
sbb
pop
cmpl
cmp
ret
mov
and
nop
outsb
add
sub
pop
jmp
jecxz
test
ret
jae
mov
scas
mov
adc
in
mov
xor
movsl
cmp
or
aad
pop
scas
xchg
jne
dec
fists
xor
jp
bound
pop
loope
hlt
xor
iret
xorl
sbb
or
pop
xor
dec
inc
scas
jae
and
push
add
mov
sbb
cltd
daa
cmp
add
cmp
jmp
jg
cltd
dec
inc
and
cmp
push
subb
cmp
pop
out
adc
push
in
fwait
loop
or
push
xor
adc
or
and
test
add
jno
roll
add
ss
and
xchg
nop
mov
mov
pop
jecxz
mov
pop
jno,pn
scas
sub
add
adc
icebp
cmp
jmp
jo
loope
in
sahf
out
insl
lcall
push
pop
into
iret
ja
or
imul
or
inc
repnz
ret
ficoms
push
push
push
fdivp
cmc
mov
loop
xorb
mov
pop
xor
out
das
add
dec
push
roll
jle
dec
pop
cmp
xchg
enter
neg
adc
aad
xor
iret
pusha
add
stos
dec
mov
adc
loope
stos
fiadds
jae
mov
iret
cmp
adc
sub
pop
imul
scas
xchg
lea
or
fst
roll
fmull
mov
das
in
rcrl
mov
cmpsl
mov
mov
dec
aad
mov
cmpsb
and
mov
cmp
push
add
mov
daa
jp
sbb
sbbb
loopne
cld
pop
jnp
push
imul
pop
adc
test
push
add
fsubrl
push
decl
sar
mov
mov
and
xchg
dec
cs
add
sbb
aad
cmp
xchg
xlat
mov
test
lea
mov
in
rclb
testl
dec
pop
sti
testl
lea
push
pusha
mov
mov
jne
xor
imul
hlt
push
imul
fimull
scas
cmp
lock
push
xor
cli
hlt
xor
xor
push
mov
cmc
jge
loopne
sub
sub
loop
dec
test
inc
rolb
out
xchg
mov
loop
insb
in
mov
mov
add
add
flds
into
in
add
push
push
xor
loope
sbb
in
jo
lahf
clc
lret
mov
iret
pop
sbb
mov
aad
sbb
sbb
cmpsl
outsb
mov
int
push
pop
dec
stos
rdmsr
adc
dec
ja
flds
psubq
aam
xchg
cmp
xor
jg,pt
add
pop
or
ret
insb
call
in
insb
dec
add
mov
mov
mov
mov
mov
push
cmpsl
jae
stos
fidivs
jp
sarb
xchg
fstl
add
pop
push
arpl
adc
scas
sarb
adc
adc
test
mov
data16
outsl
test
pop
pop
je
loop
jb,pt
or
je
bound
movl
xchg
xchg
aad
test
sahf
jecxz
divl
mov
aad
addb
out
pop
dec
mov
and
push
mov
daa
es
nop
xchg
mov
dec
das
inc
daa
xor
sub
insl
dec
jmp
push
sub
push
stos
xor
adc
mov
dec
mov
je
aaa
push
cmp
pop
loope
xlat
add
dec
ret
add
sbb
insl
call
or
xchg
xchg
in
mov
and
aad
xchg
lret
xchg
scas
mov
pop
mov
cmp
inc
add
das
std
fwait
imul
jns
std
jl
movsb
cmp
push
jae
cmp
cmpsl
push
sbb
dec
fisttpll
cmp
leave
jae
pusha
jl
add
shll
cwtl
push
jge
dec
inc
xor
or
pop
xchg
inc
pop
or
inc
jae
hlt
lahf
jo
sbb
adc
jge
dec
and
movsb
inc
cmp
adc
xor
loop
pop
sbb
push
cmc
dec
pusha
out
dec
test
cmp
xor
mov
out
out
pop
sbb
cmpsl
lret
pop
push
movsb
pop
inc
mov
xchg
sub
out
ret
cs
outsl
rorb
call
jp
jmp
hlt
dec
jg
mov
cmp
push
into
mov
bound
mov
aas
push
aaa
mov
adcl
fwait
or
adc
daa
jae
and
or
adc
mov
xchg
pop
jbe
repz
lea
loop
sbb
jl
lret
les
data16
roll
mov
aad
ljmp
aam
push
sbb
inc
ror
adc
pushf
stos
xor
int
int
sarb
jbe
jb
mov
int3
push
push
sbb
in
test
fcomps
lret
adc
sub
stc
add
mov
cli
xor
xor
mov
jmp
cmp
das
rcrl
cmp
mov
ljmp
ds
mov
cmp
cmp
enter
nop
dec
mov
add
rcll
cs
fwait
xor
jg
cmp
inc
test
clc
pop
pop
jae
push
xchg
in
lcall
imul
gs
cmp
push
lcall
sub
or
adc
movsb
sahf
adc
les
or
cwtl
inc
int
jno
clc
xchg
xor
test
ds
popl
in
neg
jb
rcrl
stc
pushf
cmp
inc
popl
jge
xchg
shll
les
inc
outsl
push
lds
lea
cmp
xchg
rcrl
or
repz
mov
imulb
test
and
xchg
inc
lret
shlb
gs
ret
sahf
or
sub
cmp
ljmp
loope
loope
jbe
aaa
mov
cmc
data16
fsubp
lahf
xlat
mov
push
adc
mov
test
inc
movb
loope
pop
mov
stc
dec
scas
test
data16
push
popf
pop
mov
add
cmp
loop
jne
int3
sbb
ret
mov
jecxz
inc
mov
stos
jne
stos
in
push
lret
mov
pop
mov
dec
cmp
addr16
cmp
and
jo
je
scas
inc
cmp
cmp
cmp
pop
mov
add
enter
in
lret
insl
or
sbb
xchg
and
push
repz
pop
cmpsb
sub
inc
scas
xor
imul
add
outsl
imul
pop
call
jl
int3
sub
cmp
xor
mov
pushl
xor
and
lods
std
std
push
movsl
xor
push
add
xchg
mov
scas
or
lods
repz
lods
stos
out
pop
les
popa
mov
cmp
out
ja
into
mov
or
movl
orb
inc
sbb
mov
mov
sub
insb
jle
xchg
out
arpl
test
imul
or
popf
mov
pop
jmp
dec
shlb
mov
mov
cmp
adc
sbbl
and
outsb
inc
inc
adc
jle
jo
xlat
push
xor
imul
lahf
ret
lahf
cmc
ljmp
and
mov
inc
mov
cmp
daa
adc
lods
adc
xor
fsubp
xchg
stos
fmull
inc
xor
dec
dec
aam
call
sahf
pop
mov
out
mov
popf
jnp
shll
rcrb
mov
mov
imul
fisubs
pop
outsl
cmp
leave
or
test
shlb
sub
je
imul
and
sbb
sub
rcr
cmp
outsb
dec
push
andl
mov
sarl
jae
scas
pushf
sub
dec
clc
dec
in
adc
jmp
cld
adc
xchg
jne
ds
add
add
inc
inc
cld
dec
jae
inc
movsl
and
testl
mov
adc
jl
sbb
lahf
lea
lahf
popa
xchg
cmp
and
fcmovbe
in
cld
test
pop
int3
fidivrl
lea
inc
outsb
pop
add
cmp
adc
outsl
cs
out
mov
cwtl
clc
push
test
push
shl
leave
push
mov
cltd
mov
sub
push
mov
jmp
push
push
into
inc
fists
cmpsl
push
xchg
pop
dec
in
cmp
cmp
mov
xlat
mov
and
mov
pop
rcr
xor
loope
or
pop
xorl
cmp
in
fnstcw
push
mov
cmp
js
mov
roll
jb
add
dec
sbb
pop
sub
jbe
ss
sbb
cmpl
outsl
jp
inc
test
int3
sub
add
aaa
test
loope
dec
in
dec
fiadds
les
xchg
mov
mov
ds
mov
mov
sbb
inc
loopne
aad
pushf
mov
nop
push
in
push
loopne
lahf
imul
outsl
ficoml
add
mov
popf
lret
imulb
int3
jb
mov
js
rcll
or
push
daa
mov
dec
jl
loope
and
jo
push
imul
addb
imul
push
xchg
imul
push
cmp
repz
or
loop
and
test
ret
mov
lcall
aas
jb
leave
ss
push
xlat
pop
iret
cmpsb
clc
sub
mov
mov
loopne
std
repz
push
loop
aad
fists
mov
inc
dec
hlt
jmp
addr16
stc
cld
dec
mov
lods
mov
je
or
mov
outsb
fs
lock
and
pop
and
mov
popa
mov
jne
sub
mov
mov
inc
sub
inc
rcrb
and
xchg
arpl
sub
cmp
adcl
jp
cmp
or
dec
push
into
repnz
loopne
xchg
fsubl
mov
xchg
sbb
into
test
jmp
popa
sbb
cli
jb
subb
not
aad
call
inc
sarb
inc
pop
loop
mov
dec
jbe
mov
cmp
push
fisttpll
jmp
in
lea
lret
xchg
imul
aad
mov
fmulp
bnd
pop
aad
mov
cmp
add
ds
cltd
mov
jle
xchg
cmp
sub
jg
dec
xchg
dec
mov
cmp
and
inc
bound
jb
in
mov
rcrb
repz
xchg
pop
out
stos
movsb
push
jge
loope
jae
loopne
sbb
xchg
push
mov
mov
stc
mov
pushf
pop
lock
push
adc
xchg
je
push
hlt
ret
jno
std
mov
mov
movsb
scas
mov
push
fcomp
inc
and
data16
mov
sbb
xchg
frstor
test
mov
aad
add
sub
scas
dec
pop
add
pop
or
jns
or
sub
xchg
mov
sti
shl
cltd
xchg
cmpsb
mov
push
jnp
andb
cltd
mov
cmc
and
lea
mov
cmpsl
bound
and
or
les
inc
outsb
std
ljmp
push
push
xlat
in
mov
jne
fwait
push
and
inc
into
test
js
stc
fisubs
scas
vmulpd
xlat
jmp
fdecstp
mov
scas
stc
ljmp
push
repz
mov
cmp
in
cmp
cmpsl
jbe
xor
stos
scas
rolb
ss
inc
insb
pop
sub
lock
ret
mov
jmp
xorb
push
pushf
repnz
push
dec
inc
lock
filds
mov
cmpsb
push
rcll
outsl
pop
cmp
shlb
xchg
push
xor
loop
jp
xor
inc
adc
arpl
into
mov
fcmove
inc
lcall
xchg
out
adc
lds
cmp
xor
adc
adc
jno
sahf
daa
or
rorl
push
and
mov
xor
jle
dec
int3
leave
pop
ret
sub
push
ja
outsl
dec
test
lods
cli
mov
adc
pop
xchg
popa
add
or
mov
xchg
adc
xor
mov
add
cmp
jg
ficoms
jmp
sti
lret
outsb
cltd
test
or
shll
je
adc
sbb
pop
data16
and
lods
mov
pop
jnp
repnz
sbb
aas
or
fists
jns
mov
push
addr16
in
and
xchg
cmp
fptan
or
cmc
xor
daa
inc
xchg
mov
push
pop
loope
sub
lret
out
add
jmp
test
js
das
and
pop
enter
aaa
lock
pop
arpl
cmp
pop
setle
leave
add
inc
dec
cmp
xor
adc
bound
std
roll
inc
stc
jmp
jbe
popa
outsl
insl
push
or
cs
adc
adc
sti
adc
adc
and
push
nop
rolb
inc
adc
add
insl
push
cltd
outsl
xchg
add
test
pushf
idivl
sub
add
imul
mov
mov
cmp
orps
les
aas
jno
or
out
cmc
pop
loope
cmp
mov
shlb
pop
testb
lahf
push
xchg
and
adc
cld
hlt
dec
idivl
push
ljmp
mov
or
sbbb
mov
sbb
rcrb
pop
movb
icebp
jecxz
or
movb
cld
sarl
flds
mov
push
shll
adc
aaa
fs
lcall
push
out
sbb
and
fcoml
andl
nop
std
jg
outsb
aas
dec
sarb
test
push
ljmp
inc
cmp
cmpsl
addr16
inc
out
and
jecxz
into
inc
enter
mov
and
xor
cwtl
dec
cmpsl
mov
lret
repnz
imul
add
filds
out
jno
js
xor
jp
outsb
add
cmp
cld
divb
out
cwtl
test
nop
out
cwtl
sahf
jl
aad
ja
fstps
out
pop
cmp
ja
push
fst
aad
mov
movsb
roll
loop
or
mov
or
push
push
mov
fwait
mov
fsubs
push
push
dec
inc
sbb
data16
ret
fwait
dec
add
or
dec
aas
iret
movsl
jl
or
std
jbe
ficoml
inc
add
mov
dec
dec
push
fbld
in
in
imul
popa
xchg
cmp
sti
ret
rorl
jmp
push
adc
sub
ds
and
repz
shll
lods
jnp
cmp
xorl
xchg
jno
repz
out
outsb
dec
jo
adc
es
and
xlat
call
inc
add
popf
inc
dec
cmp
dec
jl
in
sahf
mov
enter
adc
adc
cld
imul
adc
rcll
enter
pop
sbb
jnp
jo
lods
pop
push
cmp
push
pop
mov
xlat
and
int
mov
push
cmp
push
inc
inc
lret
dec
dec
mov
jne
sbb
xchg
inc
test
aad
loopne
push
add
pop
inc
sub
insl
pop
lea
cltd
xchg
insl
idiv
jo
icebp
stos
xchg
shlb
inc
xchg
aaa
test
push
dec
sbb
xchg
pop
sbb
out
cmc
mov
xor
enter
loope
pop
xor
in
mov
or
loop
test
lahf
xlat
jmp
jle
mov
add
mov
cmp
nop
jns
aam
call
and
insb
mov
xchg
inc
mov
or
xchg
notb
imul
xchg
nop
movsb
push
cld
daa
cs
xchg
bound
inc
mov
shrl
and
dec
shll
lcall
fsub
aam
fsubrl
inc
sbb
mov
mov
ret
push
or
dec
mov
push
test
cld
rcl
xchg
insb
push
stos
mov
inc
cld
adc
jbe
dec
jae
adc
xor
jno
scas
cmp
cmp
cmovle
andb
mov
outsl
mov
mov
lret
mov
mov
dec
pop
fimull
pop
sub
jne
mov
lcall
in
cli
repz
sbb
add
aam
sbb
jle
inc
mov
jo
das
and
test
push
cmpsl
xchg
sahf
push
test
mov
lods
filds
jle
mov
mov
call
sub
aad
scas
dec
add
in
icebp
cmpb
mov
lds
dec
cmp
sbb
or
gs
ret
jg
and
jge
cmpsb
xor
sahf
cmp
jae
test
orl
adc
pop
dec
mov
es
sub
lcall
jne
push
addr16
dec
fmuls
das
mov
mov
data16
pop
or
cmp
in
es
inc
mov
xchg
adc
roll
or
cmpl
jne
xor
mov
sub
fucomip
cmp
mov
jle
jmp
addr16
mov
fstps
fisubs
arpl
les
mov
cmp
xchg
jecxz
cmp
int
rcr
xchg
jp
clc
dec
cmpb
xchg
cwtl
popf
mov
sub
scas
inc
subb
lea
or
out
cmpsl
mov
inc
prefetchnta
xorl
adc
fwait
mov
insb
inc
ret
sbb
xchg
cmpsb
mov
lcall
mov
mov
mov
xchg
inc
int3
and
push
enter
sbb
js
cmpl
jg
bound
stc
and
and
ret
dec
fcmovu
fwait
aad
pop
pushf
lock
fildl
sub
mov
test
clc
cld
outsb
push
or
xchg
xor
filds
pusha
mov
pushf
mov
popa
dec
jae
das
sbb
movsl
push
xchg
fs
xchg
cmc
jle
mov
jnp
jmp
sbb
mov
mov
sub
dec
je
in
out
and
fimuls
push
js
pop
mov
adc
std
pop
push
out
dec
popa
cmp
loope
imulb
mov
sub
push
stos
je
fcomps
sub
leave
pop
lcall
jmp
into
mov
popf
addl
sub
add
cltd
les
mov
ficoml
mov
sbb
ret
cwtl
or
mov
mov
xor
cmp
or
sub
xor
popf
ljmp
mov
scas
insl
adc
pop
les
pop
or
aas
loope
ret
pop
jle
mov
and
mov
adc
test
jl
test
cmp
movsb
repnz
jl
sbb
adc
in
popf
enter
or
cwtl
adc
mov
test
pusha
js
fucomi
push
or
out
enter
imul
mov
in
xor
mov
fs
inc
push
inc
sbb
pop
sub
cmp
out
jge
mov
mov
mov
pop
out
sbb
adc
inc
stos
aam
mov
sub
add
lcall
fdivs
pop
cwtl
inc
test
in
outsl
pop
incl
sbbb
inc
xor
xor
xchg
dec
adc
cmp
adc
mov
jp
out
xchg
sahf
add
sub
rcr
mov
inc
pop
fldcw
cs
negl
mov
insb
jbe
sbb
dec
add
mov
lret
fisubl
mulb
shl
out
out
loop
fisubrs
mov
shll
lcall
adc
xchg
sbb
loope
jbe
sahf
adc
cmp
push
inc
lea
dec
lahf
incl
rolb
xlat
pop
mov
movsb
and
cmpsb
or
cs
cmp
loop
loop
dec
icebp
jb
or
sbb
sub
pop
mov
mov
pop
inc
je
cwtl
mov
mov
push
cmp
in
jmp
lahf
leave
jg
mov
imul
cmpsl
adc
loope
es
subl
pop
push
stc
xchg
sub
aas
les
pop
int3
sub
dec
and
push
loop
or
test
pop
mov
and
xor
jae
cmpsb
mov
fsubr
push
mov
sub
xchg
sarl
insb
or
jo
inc
or
inc
je
stos
outsl
sub
jge
int3
out
inc
mov
sub
ret
xchg
push
jp
jb
xor
ja
mov
sbb
mov
mov
fwait
addb
enter
pop
xchg
push
ja
clc
imulb
mov
mov
cld
jnp
int
jae
cmpsb
xor
out
out
mov
sarl
test
cwtl
dec
testl
cs
stos
arpl
ds
imul
or
sbb
test
adc
filds
loopne
or
adc
dec
sub
test
aad
sub
nop
cltd
fcom
insb
iret
adc
mov
arpl
pushf
cmp
pushf
xchg
repnz
xchg
pop
pop
imul
ds
mov
aad
push
addr16
adc
decb
test
or
xchg
inc
fdivl
push
imul
fcomp
jmp
xchg
jae
inc
les
sub
pop
orb
mov
sbb
fcoms
popf
cmp
sarl
adc
mov
cltd
cltd
pop
sarl
je
lret
mov
cmp
movsl
inc
push
rolb
int3
outsb
jbe
sub
seto
insl
gs
and
cs
push
subb
repnz
icebp
popa
aad
sbbb
sbb
mov
call
aam
cmc
sub
dec
mov
sub
sub
cmpsb
lock
test
aaa
cltd
or
sbb
cmp
push
xlat
xchg
xlat
lcall
lock
mov
or
xor
leave
icebp
test
sbb
dec
jne
ss
mov
sbb
mov
xlat
add
rorb
jge
scas
cwtl
fdivrs
lahf
addr16
mov
repz
lahf
push
ficoml
ret
sbb
add
out
es
mov
cmp
mov
popf
cwtl
aad
mov
or
cmp
fs
cmp
jp
jbe
movsb
loope
or
lods
lock
mov
push
mov
add
loopne
sub
xor
idivl
pop
pop
or
adc
jns
fdivr
fistpll
in
fisttpl
data16
cmp
dec
xchg
pusha
mov
jnp
pop
fiaddl
insb
jbe
fisubrl
nop
mov
test
push
and
repnz
dec
ds
scas
aas
mov
push
xchg
mov
sub
out
ds
stos
sbb
insl
sti
add
cmp
jl
cmpsb
mov
or
sahf
pop
out
outsb
push
clc
mov
dec
aaa
dec
je
lret
les
cld
es
jns
jp
push
inc
add
sti
xor
inc
push
stos
jne
mov
imul
imul
in
mov
aam
aam
xchg
push
outsb
arpl
inc
aad
xchg
lods
mov
ret
xlat
xchg
inc
int3
pop
dec
push
add
jp
jge
or
or
imul
xchg
jne
cmp
shlb
iret
pop
mov
in
stc
jnp
xchg
pop
pop
insw
shll
in
data16
xchg
pop
repnz
rcll
je
movsb
mov
mov
fnsave
xchg
shl
cltd
sarl
jle
call
push
das
and
mov
sub
int3
xchg
mov
xor
jo
push
pop
aaa
push
hlt
jecxz
out
shll
shrb
and
xor
jmp
mov
pop
sarl
add
lds
cmp
fisubrs
test
sub
push
das
data16
fmull
push
jae
cmc
cmp
movb
int
shrb
fists
out
pop
lock
mov
push
xchg
jmp
icebp
and
stc
lods
jne
or
cmp
scas
sbb
jp
ja
repnz
adc
js
cmp
test
pop
xor
sub
fwait
ret
mov
cmp
shlb
jnp
add
add
shlb
mov
jo
adc
in
out
mov
fistps
test
ret
push
subb
jmp
lods
adc
inc
cmp
cli
cmp
add
ja
mov
loop,pn
imul
ljmp
pop
ficoms
cmp
out
xor
loop
cwtl
ficomps
dec
stc
loopne
icebp
fdivrp
lret
pushf
mull
fsubl
or
adc
mov
loopne
cmp
ss
pop
xchg
mov
and
sbb
stc
push
iret
cmc
std
pop
addr16
loop
out
mov
adcl
mov
dec
cmpsl
add
push
xor
scas
dec
in
jl
out
push
push
jo
stc
lods
mov
shlb
ljmp
test
adc
mov
loope
testb
inc
add
andb
dec
sub
inc
dec
js
idivl
adc
ja
insb
filds
sbb
data16
mov
adc
adc
rorb
xchg
ds
fcompl
ljmp
mov
arpl
jo
inc
adc
daa
sbb
xchg
push
movsb
in
jle
inc
xor
xchg
fcoms
push
mov
jp
adc
dec
adc
cs
push
jo
add
nop
and
sbb
daa
mov
push
xor
xor
fwait
aam
sub
xlat
push
outsb
stc
jl
test
mov
xchg
jae
call
pusha
jle
cmp
xlat
inc
cmp
mov
int
add
sub
rcll
fcmovne
add
or
push
push
fwait
sub
cs
pusha
daa
das
and
or
test
cli
dec
dec
jle
aam
stos
flds
mov
fiadds
cmp
adc
daa
test
xlat
and
push
mov
dec
inc
mov
sub
ror
std
push
sti
cmp
flds
cmpsl
ficomps
sarb
mov
jae
mov
lcall
je
lea
push
lock
repz
lods
jae
cmp
mov
sub
aaa
pop
ja
dec
push
push
inc
jnp
mov
lcall
cmpsb
rclb
repz
fstl
wrmsr
adc
push
dec
adc
fsubs
inc
sbb
mov
sbb
push
push
lahf
mov
movsbl
loopne
in
lea
inc
jb
movsl
push
shll
js
sub
lock
jl,pt
or
push
push
or
in
jle
mov
mov
cmpsb
lret
inc
test
push
add
fsubl
push
call
in
lods
mov
jle
lock
sbb
cmpsb
ds
or
push
pop
mov
pop
jg
sbb
mov
push
int3
mov
mov
mov
jl
pushf
flds
pop
and
mov
dec
jle
mov
pushf
jle
gs
and
ja
int3
shr
leave
xchg
adc
cmp
cmp
in
push
jecxz
into
test
xchg
sub
rclb
jecxz
cmp
pop
cmp
mov
sub
pop
and
popa
lahf
cld
xor
sahf
imul
fs
mov
mov
pop
sub
lcall
fadd
test
jge
ret
jnp
xor
xchg
in
sbb
imul
xchg
cld
js
mov
mov
inc
popf
adc
pop
jno
pop
lods
test
cmp
jp
test
es
fldcw
jl
xlat
inc
mov
filds
xlat
sub
daa
pop
add
sub
aas
test
jne
das
push
adc
roll
dec
aas
xchg
rcrb
mov
fidivl
negb
mov
xor
ljmp
mov
mov
movsb
add
cmp
loopne
mov
movsl
cmp
jmp
xchg
cmp
mov
dec
inc
imul
loopne
inc
sub
push
sbb
enter
adc
mov
xchg
mov
pop
mov
aaa
xchg
xor
and
add
es
loope
test
sub
mov
out
lcall
lock
mov
andl
mov
push
pushf
movsb
rol
mov
dec
add
popf
push
adc
add
cmp
cmpsb
lods
xchg
lret
fcmovb
adc
adc
fbstp
and
cwtl
loop
dec
inc
popa
pop
stc
mov
pop
rcr
movsb
stos
rcll
subb
and
and
lcall
xor
sub
lods
mov
lds
arpl
add
ret
lahf
mov
or
pop
jns
jbe
mov
imul
adc
mov
mov
in
sbb
push
cmp
mov
inc
push
push
jo
fs
stos
out
jae
sbb
push
mov
push
and
je
xor
adc
lds
sbb
dec
jo
stos
in
gs
sub
and
adc
imul
fwait
cmpsb
inc
or
xor
fldt
stos
jno
mov
push
shll
dec
imulb
mov
push
pop
lcall
insb
in
jbe
add
push
inc
fisttpll
adc
and
in
addl
jne
cmp
pushf
jmp
mov
loop
aas
xor
jnp
mov
insb
sub
xor
int
pop
and
sub
in
push
hlt
sar
jmp
imul
inc
pop
mov
sarl
add
push
sar
pop
xor
sub
roll
cmp
dec
mov
inc
out
aam
mov
pop
aad
add
dec
pop
clc
leave
xchg
sti
sbb
adc
or
das
pop
bound
dec
xlat
push
int3
subl
xlat
cmp
ljmp
fs
and
sbb
inc
adc
into
mov
movhps
mov
cmpsb
arpl
xor
jae
pop
jno
xor
add
sub
clc
xor
test
lock
cmp
sub
popa
dec
xor
add
xchg
sub
cwtl
popf
in
out
leave
add
or
shrb
sub
repz
mov
lret
cmp
sub
pop
imul
jg
mov
iret
in
mov
and
pop
mov
dec
pop
pop
jb,pn
addr16
xor
push
and
ret
das
mov
sbb
cwtl
xor
mov
mov
push
mov
cmp
in
je
mov
test
in
mov
mov
aas
mov
inc
lret
in
jne
lahf
or
stos
push
insb
cmp
movsl
dec
xorb
insl
cmp
or
pop
push
rorb
inc
pop
in
mov
xlat
mov
fldt
adc
mov
out
bound
or
cmp
xchg
fmull
sub
push
mov
sub
repz
cmp
adc
cmp
or
push
loopne
std
add
pop
mov
xlat
mov
ret
test
aas
dec
lods
outsb
push
mov
xor
das
imul
mov
popa
lret
aam
iret
repz
xchg
inc
jecxz
xor
dec
mov
ret
aad
iret
pop
stos
notb
dec
inc
hlt
inc
out
jle
jmp
out
xlat
or
add
repnz
mov
jne
jnp
xchg
sub
xor
sbb
ja
scas
xorb
fstpt
pop
out
pushf
icebp
sti
popfw
pop
cwtl
xor
mov
sarl
hlt
test
stc
hlt
das
and
mov
mov
adc
call
lahf
pop
add
mov
bound
adc
cmc
dec
sub
sti
fldenv
sti
cmpsb
sub
sbb
or
or
jmp
call
lret
xsaveopt
lret
xor
daa
int3
xchg
jg
jg
or
push
dec
sbb
mov
dec
adcl
mov
inc
rorl
sub
adc
clc
add
inc
push
jg
pop
mov
sahf
clts
js
xchg
movd
mov
loopne
adcb
jle
mov
nop
clc
adc
dec
in
cmpsb
mov
xor
int3
call
stc
sub
aam
mov
or
aaa
sub
lods
pop
sub
faddl
mov
and
pop
pop
mov
mov
fwait
aaa
aam
sbb
xor
cmp
push
jbe
mov
imul
shrl
and
shr
or
push
inc
cmc
lods
xor
push
xor
stc
in
mov
mov
and
inc
pop
jmp
xchg
loop
pushf
mov
mov
adc
das
lock
lret
cmp
jecxz
sbb
call
sbb
sub
leave
ret
or
es
test
into
cwtl
push
test
negl
dec
fistl
xor
push
ljmp
test
int
add
testb
cld
sbb
fisttpll
mov
or
cs
icebp
pop
sub
xchg
add
adc
or
xor
sbb
mov
push
xor
addr16
sub
jb
movsl
and
push
add
sub
and
fsubr
in
sub
lcall
aam
jns
or
dec
fs
cwtl
jecxz
dec
ficoms
push
mov
in
mov
inc
dec
mov
mov
push
dec
mov
mov
mov
ret
push
out
fs
pop
xchg
popa
movsl
mov
push
addl
jp
pop
pushf
test
xor
fcoms
sub
cmp
insl
ss
sub
or
jl
out
dec
jle
push
clc
mov
bound
mov
add
add
inc
ja
test
fldl
sub
ret
imul
jp
movsl
les
mov
or
xchg
mov
stos
sub
push
daa
int
fstpl
jmp
push
sub
pop
inc
gs
out
sbb
cmpsl
adc
xchg
cmp
int3
jg
sbb
out
mov
fsub
pop
ret
stc
loope
pop
repz
bound
lahf
je
mov
mov
mov
imul
xor
push
jle
mov
pmulhw
cmpsl
mov
cmp
inc
std
xor
scas
cmp
loop
bound
jmp
cmp
or
mov
and
and
in
mov
push
adc
dec
fsub
inc
jb
add
xchg
jl
mov
fidivrl
dec
rclb
jle
mov
mov
or
fs
xlat
push
cld
mov
mov
pop
or
pop
dec
and
mov
mov
mov
shlb
mov
jecxz
decl
jne
adc
lods
or
stc
movsl
aam
pusha
ds
insb
ds
test
shll
shll
add
push
mov
test
stos
and
inc
aas
imull
js
rcll
pop
pop
scas
test
xorl
out
pusha
lret
sti
sbb
xchg
adc
in
lret
cmpsb
movsl
div
leave
es
rolb
das
inc
push
jg
mov
pushf
lods
addl
test
test
stos
xchg
or
xor
movsl
push
xor
pusha
rcrb
cmc
add
xchg
adc
jmp
pop
mov
mov
sub
pop
fs
dec
mov
cmp
jp
mov
sbb
push
add
sbb
fsubrp
fcoms
mov
mov
cs
loopne
push
sbb
sbb
jo
aad
scas
clc
inc
jnp
loopne
xchg
adc
mov
adc
push
rolb
pop
hlt
push
arpl
shll
stos
adc
arpl
rclb
mov
adc
jnp
mov
test
fmul
inc
and
xchg
fists
sub
loope
xor
sub
mov
inc
stos
mov
hlt
and
sub
stos
andl
insl
sbb
sbb
inc
test
lock
jb
mov
inc
jp
push
out
lock
imul
sbbl
or
ds
inc
cmpsl
cs
and
add
lcall
js
jmp
mov
insl
fs
inc
add
imul
std
lahf
mov
and
or
mov
loop
sahf
adc
jg
or
dec
das
mov
jo
add
sub
pop
and
adc
pop
or
out
adc
or
loope
lcall
in
sbb
cmpsb
push
pop
je
pop
into
push
add
loop
call
adc
rcll
in
push
or
call
repnz
sti
pusha
cmp
mov
pop
ret
scas
aas
in
xchg
inc
into
xor
push
ror
call
mov
fs
mov
pop
cmpsb
xchg
inc
fnsave
outsb
cmp
jge
add
cmpsl
jge
aam
bound
cli
popa
dec
pushf
les
pop
daa
ds
mov
add
pop
dec
mov
adc
sub
jnp
daa
or
scas
leave
push
mull
or
pop
rcl
push
xchg
push
xor
add
scas
js
inc
xchg
mov
add
shlb
lret
or
pushl
gs
imul
push
pop
mov
pop
cmp
mov
sub
ret
add
jb
push
inc
mov
pop
push
dec
ss
mov
out
cmc
mov
loope
dec
lret
mov
test
push
out
ss
and
mov
or
nop
enter
rclb
xchg
dec
dec
fsub
jbe
roll
xor
outsb
lods
or
push
sbb
and
out
and
out
push
iret
jno
sub
outsb
in
addr16
xchg
lret
dec
out
cmp
sbb
jne
xor
and
ss
mov
push
nop
insb
daa
xchg
inc
loope
subl
add
cltd
and
adc
xor
xlat
sahf
xor
lods
and
insb
stos
xchg
in
arpl
sbb
ret
sbb
lods
fwait
mov
ljmp
xchg
ficoms
push
out
sar
dec
dec
jge
push
inc
pop
xor
jge
add
loope
dec
mov
and
pop
into
fistpll
insl
push
inc
mov
cwtl
sub
int
xchg
cmpsl
cmc
xchg
movsb
movsl
ljmp
outsl
data16
mov
sub
dec
dec
aad
xor
sbb
clc
addr16
xchg
jb
out
aam
xchg
mulps
cmpsb
mov
dec
sbb
adc
and
xchg
inc
xchg
sbb
dec
cs
cmp
incb
jg
or
addr16
mov
sbb
fbstp
cld
mov
imul
int
and
lea
pop
lods
add
push
addb
int3
cmp
sbb
xchg
outsb
pop
ret
cld
adc
fwait
call
dec
aaa
lock
mov
jecxz
test
cmp
pop
cld
pop
int3
xor
sbbb
xlat
pop
in
js
bound
int
lds
cmp
imul
out
shlb
sti
pop
sub
mov
dec
mov
out
iret
pop
lahf
and
add
sbb
movb
fcomi
pop
cmc
arpl
push
insl
pop
jo
negb
mov
mov
dec
divps
outsb
dec
testl
pop
les
jnp
xor
cs
sbb
add
push
out
mov
andl
jnp
pop
ja
in
jnp
pop
in
das
bound
in
popf
cmp
stc
pop
push
xchg
jge
xlat
pop
cs
and
push
fistl
aad
fstp
fldt
add
in
pop
outsl
jno
mov
cmpsl
rcrb
testb
ret
lds
or
push
push
xchg
lret
cs
call
push
lret
push
jle
ds
out
mov
sub
fsubs
mov
stc
insb
ja
push
sub
jmp
lds
adc
mov
dec
test
ret
ss
in
pop
das
std
rcrb
repz
insl
dec
test
scas
fsub
adc
xor
jp
addr16
jne
push
rclb
stos
xchg
xchg
xchg
mov
shl
push
dec
lret
push
adc
sub
push
test
sbbl
mov
test
adc
and
into
xor
flds
std
js
fdecstp
push
lods
inc
imul
mov
push
aaa
leave
pop
dec
test
jge
and
loopne
jns
packssdw
rcll
or
sub
inc
and
popf
or
dec
and
cmp
or
test
xor
push
mov
into
out
add
jne
and
and
in
fsubp
add
stos
jge
out
mov
fistpl
xchg
in
fdecstp
insb
aas
scas
jmp
jp
or
leave
into
push
and
stos
jnp
lret
jge
popa
xor
sbb
testb
jnp
psubb
inc
std
loope
push
jmp
inc
mov
xor
lods
pop
cwtl
scas
cmp
mov
lret
outsl
subl
adc
jecxz
xor
or
bound
imul
sbb
or
inc
das
xchg
pop
sbb
lahf
adc
jb
test
xor
popl
jmp
or
mov
push
cld
into
pop
lea
mov
xchg
jge
adc
xchg
sbb
jmp
pop
pop
imul
ret
aas
adc
xlat
lcall
shll
pop
mov
inc
lods
pop
push
andb
les
jmp
mov
adc
rcrb
test
cmc
lods
insb
sbb
mov
pop
mov
int
pushf
fdivs
pop
sub
sub
mov
pop
pop
loope
cmp
fisubrs
rcll
sbb
loope
or
or
mov
out
dec
and
dec
mov
ja
js
les
jmp
sub
out
pushfw
or
lds
push
inc
mov
stos
inc
lahf
arpl
es
pop
addr16
sbb
incb
cli
add
xor
lds
jecxz
sub
mov
push
mov
gs
push
xor
shll
mov
shlb
xor
pop
dec
jbe
ds
loop
sti
lods
scas
jo
inc
or
adc
or
jo
mov
testl
and
pop
add
cwtl
cmp
insb
xor
add
adc
std
mov
aam
mov
mov
sub
sbb
enter
int3
icebp
in
mov
insb
test
ja
mov
cmp
pushf
xor
std
bound
sbb
bound
mov
push
push
cli
mov
push
adc
sub
adc
xchg
lahf
dec
jg
pushaw
push
mov
lea
fimull
xor
das
dec
out
jp
xlat
repz
push
sub
gs
fisubrl
xchg
mov
push
push
daa
and
adc
cmp
aad
cmpb
insl
les
shll
pop
scas
jmp
adc
adc
and
xlat
in
cmp
xchg
movsb
pop
or
pop
iret
jge
mov
ffree
popf
shlb
daa
jo
mov
xor
shll
js
in
por
cmp
xchg
mov
dec
jge
test
clc
jbe
insb
aad
or
push
add
pop
setp
jbe
aam
ret
int
xrelease
popf
jae
fistl
out
es
inc
popa
mov
into
popf
xchg
outsb
cmp
stos
fadd
mov
jo
bound
adc
test
mov
insl
pop
cmp
dec
mov
std
jae
repz
dec
add
jne
mov
push
dec
out
pop
dec
pushl
outsb
movsb
cmp
fbstp
jo
dec
inc
ss
scas
or
push
jbe
xchg
sub
cmpsb
int
push
mov
inc
and
xchg
or
hlt
insl
and
or
push
decb
fisubrl
sbb
mov
jb
je
arpl
mov
into
dec
add
cs
pushf
push
test
bound
mov
xor
movsb
loope
repz
xchg
mov
xchg
ja
jno
pop
and
imul
iret
cmp
jae
add
sub
push
add
enter
or
int3
fwait
and
in
xchg
push
cmpsb
lds
add
inc
xchg
outsb
jne
cmp
jb
ds
call
lret
xchg
mov
mov
sbb
movsb
mov
jno
ret
scas
pop
mov
pop
or
cmp
cld
js
loop
sub
push
dec
bound
xchg
mov
adc
inc
lods
mov
repnz
sbb
das
in
jp
jl
jle
mov
movsl
int3
xor
xchg
das
cmp
js
pop
jle
pop
sbb
push
inc
dec
adc
loopne
scas
fwait
sub
lods
pop
pop
ficomps
call
mov
mov
mov
repz
xor
lds
dec
cmpsl
xor
dec
add
jnp
outsb
stos
test
cmc
xlat
lret
pop
cs
cmp
into
inc
rclb
insl
pusha
out
adc
lahf
int3
mov
das
into
scas
sbb
mov
into
mov
stc
movsl
xchg
addb
mov
ja
frstor
mov
call
ret
pop
movsb
push
cli
ljmp
pusha
scas
add
idivb
mov
xchg
int
mov
sbb
mov
loopne
or
popf
add
jb
sbb
addr16
fbld
mov
sbb
jae
adc
xor
getsec
das
and
je
mov
je
outsb
in
pushf
shrl
mov
adc
sbb
push
mov
mov
test
test
jmp
pop
push
int3
xchg
jmp
ret
fdivs
clc
and
xor
nop
mov
or
cmp
mov
sbb
xor
cmpsl
in
shrl
push
das
cmp
rcrb
idivl
loop
adc
dec
ret
sub
pop
mov
adc
add
mov
out
lods
xor
sub
and
or
daa
mov
push
mov
lahf
stc
hlt
repnz
je
movsl
call
or
mov
xchg
and
outsl
adc
or
adc
popa
xor
adc
shll
dec
test
mov
insl
push
arpl
xchg
cli
jge
push
and
add
pop
mov
scas
inc
sarb
dec
xor
jge
stos
push
mov
mov
scas
cmp
faddp
rcrb
call
mov
insb
push
out
push
sub
dec
lods
jae
lods
pop
sub
or
sub
add
xchg
into
outsl
adc
dec
mov
andl
pop
jmp
pop
xchg
xlat
pop
inc
fwait
sbb
jo
jnp
mov
fdivrp
in
xor
sbbb
or
or
imul
dec
add
aam
insb
stc
xchg
mov
dec
push
xor
out
sub
jbe
or
inc
push
xor
and
push
mov
into
je
pop
aam
popf
sub
fbstp
push
rorb
sbb
push
jne
push
jb
aad
or
xor
movsl
dec
push
xlat
sbb
and
pop
mov
mov
out
rclb
dec
xchg
imul
call
mov
lock
dec
test
or
cli
loope
loop
push
cld
xchg
jb
roll
xor
out
mov
and
scas
push
xor
add
mov
push
xchg
js
mov
xlat
mov
aam
jnp
movsb
add
fdivs
pop
pop
adc
and
arpl
je
jb
jb
movsb
aaa
xchg
inc
mov
xchg
and
push
fisubrl
rcll
and
inc
adc
pop
mov
inc
scas
pop
fwait
inc
adc
jle
fsubrl
add
cmpsl
push
shr
mov
ret
xor
xchg
lahf
mov
test
or
mov
ds
or
mov
fstpt
daa
and
das
es
insl
sub
loop
scas
scas
pushf
iret
ljmp
mov
into
les
dec
pop
out
dec
xchg
jb
add
shlb
dec
fnstenv
dec
adc
mov
and
push
cmp
lods
ja
repz
iret
xchg
mov
mov
shll
sbb
leave
pop
aad
loop
ret
or
int
shll
mov
imul
lods
stos
mov
inc
adc
mov
lret
lods
aad
pop
mov
addr16
mov
pop
xchg
in
mov
std
lcall
test
pusha
pop
push
push
imul
stos
and
pop
mov
insb
pop
gs
popa
test
popa
test
jns
sub
push
gs
add
sub
fidivrl
pop
rcrb
push
jle
sub
sub
aad
adc
sub
aaa
pop
mov
mov
push
push
push
mov
call
push
mov
or
adc
adc
ret
sbb
jg
repz
gs
xor
inc
inc
pop
movsb
popf
dec
shll
and
mov
pop
leave
inc
dec
aas
xor
adcl
xor
xchg
into
mov
xor
xor
xor
push
stos
out
lret
push
adc
mov
add
pop
sbb
ret
sub
stc
out
mov
idivb
push
dec
mov
sarl
push
cmp
aaa
push
mov
mov
cli
push
scas
mov
sbb
inc
add
jp
loopne
adc
stos
nop
scas
mov
push
add
loope
lret
and
inc
inc
icebp
dec
outsl
cmc
add
cmp
inc
idivl
pop
jne
in
push
mov
in
push
ret
leave
cmp
ss
push
mov
pop
leave
roll
cmc
lods
or
adc
aas
cwtl
jbe
mov
mov
fwait
lret
imul
ret
inc
push
push
imulb
adc
adc
xchg
xchg
faddl
jmp
stc
xor
fiadds
xor
fwait
loope
or
inc
fcompl
in
xor
cmp
gs
cltd
sub
inc
mov
loope
mov
jge
sbb
mov
xlat
inc
adc
or
sub
jb
dec
xlat
lcall
out
pop
mov
cltd
pop
xorl
jecxz
xor
inc
enter
jbe
push
add
mov
jnp
lahf
xor
lods
gs
cmp
out
sahf
jnp
loope
and
divl
pcmpeqw
mov
sub
mov
rclb
loope
or
inc
popf
and
mov
ret
outsl
mov
mov
fwait
rcrb
stos
loopne
fdivs
adc
jp
cmpb
insl
cmp
lret
push
loop
shll
cmp
cmp
sti
cwtl
in
xor
push
jnp,pn
in
fcompl
loopne
bound
cmp
xor
loopne
jle
data16
inc
cmpsb
mov
movsl
dec
push
sbb
adc
pop
aaa
addb
xor
cmpsl
push
ror
add
and
rcr
mov
les
imul
xlat
pop
push
repz
or
inc
jne
test
fsubl
xor
jae
dec
adc
mov
popa
bound
hlt
jge
cmp
cltd
cs
push
and
movsb
inc
mov
xor
cmpsl
in
push
jecxz
push
jmp
dec
xor
pop
cmc
rorl
mov
xchg
ljmp
lds
dec
cmp
movsb
lods
xor
shl
sarl
jne
inc
mov
add
stc
je
movlps
imul
mov
pop
mov
cmp
cmpsb
and
stos
inc
adc
movsl
mov
dec
dec
rcrl
movsl
mov
cmp
ret
xchg
movsl
cmp
mov
sbb
pop
sub
aaa
cli
mov
dec
das
and
das
popf
inc
mov
mov
pop
outsb
shl
and
dec
cmpsb
mov
add
inc
dec
or
adc
data16
lods
inc
pop
adc
loopne
mov
xchg
test
mov
mov
lock
mov
dec
loop
call
daa
pop
repnz
sbb
adc
popa
cmpsb
and
pshufw
les
mov
leave
inc
out
rcrb
jnp
mov
cld
shlb
inc
jb
cmpsb
mov
nop
push
dec
pop
loop
mov
hlt
jp
ljmp
rcrb
push
loop
popa
cs
out
sbb
icebp
scas
and
pushf
xor
lret
add
mov
xorl
cmp
shrl
imul
fiaddl
push
cmpb
adc
cli
mov
pop
mull
dec
adc
jnp
pop
lods
cmc
push
shl
cmpl
cmp
ja
test
ja,pn
adc
cs
cmc
ficompl
dec
test
and
or
insl
in
adc
ret
in
pop
xchg
xor
ljmp
jo
aad
push
sub
or
out
cmp
out
lahf
xor
pop
adc
pop
mov
into
loop
push
xchg
test
jmp
cmp
mov
aam
inc
movsb
ret
add
xchg
pop
mov
push
cmp
mov
sbb
adc
mov
rolb
push
push
lret
sbb
rol
lds
pop
mov
sbb
movl
divb
call
xchg
pop
rolb
dec
pop
out
inc
scas
das
push
cmp
shlb
sti
popa
mov
mov
mov
sub
jle
cld
ljmp
sub
shl
push
pop
add
rcr
ss
xor
xor
insb
lret
push
ds
cmp
test
fs
loop
inc
push
jecxz
add
shll
mov
push
mov
inc
mov
jo
rcr
lret
inc
icebp
xchg
jl
fwait
cli
pop
fidivs
cs
xchg
cmc
pop
fldcw
fmull
hlt
sahf
mov
movsl
imul
aas
shl
pusha
adc
push
js
fs
and
out
aam
jbe
mov
xor
outsl
mov
sbb
jno
pop
in
sti
fidivrl
mov
sub
nop
std
pop
andl
push
mov
fwait
mov
sbb
cmp
xchg
icebp
clc
iret
dec
inc
jnp
stos
std
das
mov
sub
scas
bound
mov
jne
adc
sub
insl
pop
cmp
adc
add
dec
popa
jnp
hlt
cmp
pop
hlt
std
adc
in
fcmovbe
test
lret
aad
int3
cwtl
bound
mov
add
inc
mov
sbb
jge
rclb
jnp
cmp
dec
aam
dec
jo
sahf
lret
in
and
mov
cltd
addl
xor
nop
std
gs
push
arpl
mov
push
mov
test
inc
hlt
ret
cld
pop
cwtl
xorb
daa
sub
cmp
adc
cmp
vzeroupper
movsl
xchg
inc
stos
push
dec
jg
sub
cltd
ja
shlb
dec
shl
pop
addr16
imul
fs
lea
fnstenv
jno
lret
jae
sbb
push
mov
psadbw
ds
inc
int
cmp
cmp
inc
push
test
xlat
and
mov
adc
xchg
and
loop
dec
add
js
adc
movsl
adc
sarl
xchg
jge
rorl
cltd
mov
push
pop
popf
xchg
dec
cld
ret
pop
or
sbb
test
xchg
shll
inc
mov
pusha
fsubrl
int
fs
adc
fsts
mov
dec
in
lea
cs
pop
or
mul
push
fbstp
bound
movsb
es
and
and
repz
mov
push
sub
out
pushf
clc
jnp
xchg
xchg
mov
mov
xchg
cmp
insb
sahf
jno
in
pop
call
inc
loope
std
and
les
arpl
pop
and
mov
fldl
bnd
lcall
scas
dec
jmp
jp
rcr
add
or
or
xchg
jns
xor
idiv
out
gs
std
cmp
shrb
mov
stc
mov
sbb
cli
int
ret
push
mov
aas
mov
mov
inc
xchg
ret
cmp
call
mov
and
aaa
cmp
movsb
lret
js
mov
jo
ret
inc
push
and
out
lds
pushf
rcrb
pushf
sahf
mov
repz
roll
mov
xchg
sub
pop
push
pop
sahf
aaa
test
push
adc
std
sub
test
jp
add
mov
pop
cwtl
fsubl
fisttps
fstps
sbb
adc
sbb
cmpsb
mov
mov
or
pop
insl
push
ret
imul
mov
and
xchg
prefetch
or
pop
dec
out
push
inc
cmp
adc
ret
mov
mov
dec
scas
jecxz
adc
cwtl
push
xor
mov
ljmp
shlb
cmpsl
fisttpll
enter
jg
mov
inc
leave
mov
scas
dec
sub
and
dec
popf
sub
rorl
cmpsl
test
pop
scas
push
jg
and
jge
adc
popa
rolb
cmp
in
shll
sahf
jg
add
icebp
cld
or
adc
push
scas
cmp
shll
xor
dec
arpl
cmpsb
scas
xlat
or
mov
int3
fst
xchg
xor
adc
adc
mov
rorb
xor
loopne
inc
pop
orb
cmc
sub
sbb
sub
push
lret
mov
sahf
dec
cltd
sbb
jge
and
or
and
adc
mov
push
test
lret
aam
ret
mov
mov
pushf
call
cmp
movsl
in
popa
pop
add
lret
inc
mov
ds
push
movsb
mov
add
jmp
cmp
out
int
xchg
lcall
lds
mov
aas
test
xchg
out
sbb
jmp
or
imul
cwtl
loope
or
pop
adc
push
bound
mov
pop
rolb
idivb
out
cmpsb
adc
dec
add
les
pusha
pushf
daa
fistl
pop
xlat
rolb
adc
ret
aad
inc
adc
mov
jae
call
je
xchg
fists
das
fs
faddl
sarl
popl
test
push
or
cmp
pop
movsb
or
mov
inc
jg
shlb
push
jns
ret
xchg
mov
xor
imul
lds
popa
dec
pop
jge
es
dec
jnp
pop
movsb
push
jno
push
dec
stos
in
fisubrs
stc
sbb
dec
jbe,pt
lock
jmp
popa
mov
push
xor
cwtl
fidivrs
push
adc
sub
push
testl
and
lret
cmp
mov
dec
xchg
adc
aaa
orb
addr16
or
push
dec
popa
sbb
test
ret
fwait
nop
pop
cmp
push
adc
and
or
test
jp
fmull
testl
cmp
repnz
out
dec
mov
out
pop
addr16
push
lock
xchg
mov
xchg
add
mov
inc
mov
jns
mov
icebp
ss
loop
mov
repnz
ficompl
ja
into
mov
test
adc
jmp
lds
mov
mov
lcall
iret
fwait
adc
and
sub
cmp
jns
out
push
pop
movsl
sbb
xchg
xchg
sti
roll
inc
inc
loopne
dec
cmp
inc
into
les
xor
lret
fptan
mov
mov
fiadds
jge
insl
adc
imul
push
inc
lock
out
push
scas
cmp
mov
xchg
dec
sub
in
ret
xlat
sub
movsb
std
inc
aaa
cmp
and
out
gs
lods
rclb
mov
fisubs
dec
rol
cmp
inc
mov
mov
jmp
fildll
and
scas
test
das
repnz
jno
adcb
ja
loope
imul
les
iret
negb
mov
jno
hlt
and
icebp
int
cmp
repnz
pushf
mov
nop
sub
test
push
xchg
cmpsb
inc
fistpll
nop
shrl
das
sub
cltd
pop
lock
ret
sub
pusha
and
insb
lods
test
dec
das
pop
cmpb
pusha
pop
inc
jnp
and
or
mov
adc
jmp
enter
loopne
xchg
jp
and
shrb
dec
push
xchg
fcoml
adc
sbb
mov
int3
sbb
cmp
jbe
mov
jge
test
cmpl
lods
and
sub
loope
aas
fisubl
add
pop
mov
mov
rolb
jmp
dec
fs
and
aad
mov
push
movsl
pop
sub
cld
mov
push
sbb
in
and
mov
sbb
lcall
push
xlat
jns
out
cmp
jns
jge
pop
ret
into
add
mov
sbb
sbb
rclb
test
add
push
add
loopne
inc
aaa
push
cld
lods
xor
and
pop
int3
ret
pop
hlt
push
add
dec
sub
daa
jb
jo
daa
es
popf
mov
inc
cmc
shr
pop
dec
xchg
cwtl
adc
fnstsw
jb
jo
push
jg
mov
aas
push
sbb
jle
out
dec
xor
jns
jp
jns
int3
xor
test
shlb
cld
lret
mov
adc
sbb
and
std
aam
adc
in
push
loope
adc
icebp
out
xchg
bound
jbe
adc
into
mov
pop
pop
sub
sbb
mov
arpl
cld
idivb
mov
loopne
popa
or
jmp
lret
rolb
rcll
imul
push
imul
ret
push
iret
fs
dec
or
pop
popa
add
js
mov
sbb
aam
inc
gs
or
push
loopne
inc
xchg
gs
push
sub
sub
mov
imul
cmp
push
xor
out
mov
adc
add
test
or
xor
ljmp
lret
scas
dec
inc
sub
jg
pop
dec
dec
cmp
lock
ds
lahf
or
cltd
jae
xchg
aas
jno
pop
fildl
mov
in
inc
mov
mov
adc
scas
subb
xchg
loopne
pop
dec
or
mov
inc
inc
rclb
jnp
pop
fstpl
push
daa
push
cmp
cld
push
or
fidivrl
mov
fldcw
and
faddp
imul
cmc
pop
mov
movsl
int3
cmp
inc
xor
cmp
pop
pop
adc
insb
test
cmpb
or
lods
xor
shlb
rcll
nop
pop
xchg
and
mov
test
jo
and
mov
pop
xchg
pop
pop
xchg
push
mov
adcl
xchg
sub
pop
loopne
cmp
cmp
decl
xchg
dec
jb
pushf
ljmp
inc
push
jae
push
sbb
xchg
sbb
xchg
in
outsb
jb
add
in
loop
into
inc
and
jg
dec
shl
jmp
daa
arpl
sahf
sbb
push
mov
mov
rclb
cmp
or
stos
lods
or
mov
loop
mov
or
aad
repnz
mov
mov
and
push
dec
fsubrl
inc
xlat
adc
stos
sbb
dec
loop
shr
mov
lea
add
mov
ret
xor
fidivs
clc
mov
adc
mov
aas
bnd
clc
jle
jne
data16
xchg
ffreep
es
or
mov
xchg
lock
repnz
fisttps
adc
inc
dec
and
aas
fcoml
xor
mov
fimull
jo
xchg
xor
pop
inc
aaa
cld
jg
scas
repz
lahf
scas
in
ret
adc
roll
sarb
xorb
sbb
addr16
mov
and
xchg
fisubl
loopne
jbe
insl
and
je
or
pop
push
movsl
arpl
stos
and
insl
test
pop
lds
pop
cmp
loopne
dec
sarb
push
jmp
push
adc
cmp
xlat
adc
inc
cmp
xor
enter
movsb
inc
pop
mov
call
ljmp
mov
das
and
out
add
mov
rolb
ja
pushf
filds
inc
fimull
ret
imul
fmuls
stos
sub
push
push
xchg
and
and
mov
fdivs
stc
fistpll
cld
sub
sub
and
inc
loopne
arpl
and
mov
push
in
test
push
add
xsaves
stos
insl
lcall
or
stos
xor
cli
mov
push
jne
es
je
cmp
xchg
pop
pop
out
loop
mov
cmp
lret
xchg
test
sub
sbb
lret
cmp
inc
push
or
gs
out
mov
xor
test
hlt
sbb
popa
das
sbb
lret
dec
cmp
dec
mov
cmpsb
and
incl
jbe
inc
int
pop
add
push
xchg
jmp
add
stos
or
pop
flds
loop
test
xor
mov
cmp
pop
lods
sub
cld
add
hlt
adc
gs
and
mov
dec
and
cmc
scas
movsb
pop
imul
imul
adc
out
test
mov
sub
js
int3
sub
xchg
stos
adcb
sarl
rcrl
or
jp
sarb
scas
xchg
nop
test
fistpll
xchg
lcall
fisttpl
xor
inc
scas
fadds
pop
xor
push
xor
and
xor
clc
notb
inc
mov
mov
mov
movsl
cmpsb
cmp
mov
test
mov
cmp
xchg
data16
mov
sbb
in
ret
js
mov
push
aad
pusha
adc
and
mov
or
ss
cli
mov
out
cmp
jg
test
idivb
stos
andl
adc
jle
cmp
or
lret
leave
push
and
jno
std
pop
and
loop
sbb
inc
xor
out
jle
pop
movsl
and
test
push
into
xor
clc
jae
pusha
add
cmp
arpl
aam
add
out
mov
scas
bound
iret
jne
aas
out
jmp
icebp
lcall
movsb
stc
mov
insl
lods
inc
cli
mov
dec
icebp
stos
dec
sub
mov
popa
mov
mov
ljmp
lret
push
les
pop
ficompl
imul
data16
cs
push
sub
arpl
sub
data16
repz
push
jg
in
push
loop
push
xchg
aam
xchg
and
in
and
inc
adc
xchg
and
std
mov
mov
jae
mov
outsl
imul
pop
in
or
push
dec
lods
imul
mov
aam
int
inc
movsb
call
in
pop
pusha
inc
pop
out
aas
aad
shrl
lods
mov
lock
fcoml
cwtl
in
outsl
std
cmpsl
outsl
xor
jmp
test
add
push
push
jmp
mov
sub
shll
xor
jbe
and
dec
jmp
dec
sahf
mov
mov
data16
sbb
mov
insb
mov
xor
cmc
and
jo
add
pushf
cltd
push
in
loope
push
fisubs
aas
loopne
fildl
mov
cmp
imul
insb
xchg
shl
stos
mov
add
dec
mov
les
sub
call
xchg
rorl
fs
or
sub
pop
mov
shrd
ror
neg
jnp
lds
leave
arpl
loopne
out
clc
xor
mov
call
xchg
je
or
jae
lea
sub
shrl
fnsave
jae
sub
rcr
and
push
jle
dec
insl
xor
push
scas
stos
enter
aad
xor
adc
sahf
adc
les
sub
in
mov
add
push
add
inc
and
jl
lods
push
pop
cltd
mov
and
je
sub
mov
fwait
cmp
inc
inc
or
cmp
or
adc
int
sbb
push
decb
cltd
arpl
dec
out
xchg
imull
xor
xchg
pop
push
ljmp
push
cmpsl
test
pop
movsb
rol
jp
leave
lcall
hlt
ret
aad
sub
cmp
out
fnstsw
leave
les
enter
push
shll
les
cmp
push
pop
iret
dec
cmpsb
rcll
xor
notb
inc
xor
jo
lahf
or
mov
loopne
xchg
jb
pop
ficomps
cmp
mov
testl
mov
add
iret
jl
lret
fcomps
jne
sti
enter
or
mov
pop
rcrb
pop
inc
or
adc
pop
xor
out
push
xorb
mov
mov
mov
movsb
mov
stos
add
xchg
imul
negl
cltd
cmpb
and
xor
jp
inc
sbb
ds
jnp
imul
loope
adc
push
imul
or
int
dec
or
inc
scas
les
mov
test
inc
push
add
xchg
sbb
popf
outsl
sbb
mov
adc
pop
add
cwtl
out
shlb
xor
xchg
ror
add
push
outsb
or
pop
insb
arpl
mov
dec
mov
mov
jns
aam
scas
pushf
roll
stc
out
cmpsb
fadds
jno
mov
fwait
shll
adc
sub
sub
inc
andl
lahf
lret
cs
ja
mov
test
jae
rclb
push
dec
test
inc
mov
adc
es
cmp
leave
push
sbb
aad
ss
fnstenv
jl
loopne
jne
fisttps
inc
inc
mov
call
mov
cmp
dec
das
pushf
mov
repz
xchg
mov
mov
aaa
shrl
adc
in
shr
loopne
sahf
test
es
or
mov
pop
cmp
mov
insl
xor
push
in
lds
cmovno
ss
stos
scas
dec
mov
sub
ficompl
ss
outsl
jbe
cmp
gs
scas
lret
sbb
push
in
mov
popa
sti
jne
mov
rcrb
rol
loopne
inc
adc
push
fdivrs
push
lds
xor
pop
mov
test
mov
xchg
mov
pop
push
popa
cmpsl
dec
mov
lods
or
jbe
in
testb
xchg
shll
mov
or
in
aad
outsb
pop
in
or
sbb
jno
in
push
pop
push
xchg
push
jle
add
or
in
mov
push
inc
popa
subl
rcll
outsb
or
push
xchg
xchg
lret
shr
test
aaa
in
mov
mov
xor
fs
dec
aas
dec
aad
cmp
sbb
cmp
mov
xor
dec
mov
jmp
out
sar
xor
mov
insb
dec
pusha
and
cltd
inc
fidivrl
mov
cld
mov
je
sbb
cmpsl
or
and
adc
cmp
mov
jle
sub
popf
lcall
int3
imulb
cli
cld
adc
mov
test
scas
inc
hlt
enter
jnp
mov
ss
xchg
lret
inc
cli
fcomi
sbb
loopne
aaa
adc
or
icebp
push
mov
popf
pop
sub
sub
popa
dec
pushf
lret
cmpsl
cwtl
enter
leave
mov
stc
xor
add
imulb
pop
push
movsl
adc
nop
push
dec
push
sub
jmp
mov
push
cmp
mov
pop
sub
cmc
push
popa
push
add
or
rclb
sub
or
mov
scas
pop
cwtl
gs
xor
nop
mov
dec
dec
push
pushf
std
popa
fldl2e
and
cvtpi2pd
addr16
mov
ljmp
fstpl
fildl
lds
int
pop
idivb
popf
fbld
mov
xlat
xor
sbb
mov
push
sub
jl
mov
jnp
bound
lret
or
xor
mov
push
xor
in
popf
sub
jnp
dec
push
lcall
daa
je
fwait
jmp
and
xchg
or
cmp
mov
outsb
test
pusha
icebp
or
jae
and
or
test
inc
pop
xchg
push
fildll
shrb
jle
push
daa
or
lds
and
xchg
mov
les
inc
dec
sbb
fisubs
push
icebp
or
mov
sahf
xor
jl
cmpsb
fmul
ljmp
aad
loopne
push
stos
test
dec
xchg
push
pushf
psubb
test
notl
xor
jle
ret
pushf
addr16
cld
cmc
pusha
fistpl
jno
pop
mov
or
aad
xor
mov
hlt
mov
sub
xchg
sub
test
mov
loopne
in
mov
jecxz
inc
test
push
movsl
and
mov
adc
or
mov
lret
mov
mov
sub
jp
jns
add
xchg
xor
and
mov
ss
arpl
andl
ja
andb
jae
pop
mov
sbb
xorb
add
fistpll
or
dec
fwait
inc
movsl
insl
aaa
fs
in
jnp
xchg
sti
jnp
add
dec
data16
dec
movsl
jo
jns
js
sbb
cmp
pushf
movsb
fiaddl
mov
sbb
aad
outsl
push
inc
out
outsl
sbb
sbb
pop
sti
sahf
pop
mov
xor
or
lret
sub
clc
cltd
stos
push
aad
sahf
adc
adc
xchg
xchg
roll
xor
inc
and
dec
cmp
fwait
mov
and
ss
mov
add
lods
mov
push
dec
lcall
xor
popa
cmp
cmp
dec
cmpsl
jnp
fisubl
in
repnz
push
in
sbb
fs
adc
test
cmpsb
jl
push
dec
cmpsl
or
outsl
push
jge
cmp
and
icebp
sbb
in
jge
pop
nop
insb
repz
enter
mov
mov
int
mov
push
je
daa
clc
xchg
mov
scas
lds
mov
je
fstl
xor
xchg
rcr
xchg
jle
or
shrb
cmp
mov
aaa
xchg
sbb
xchg
push
movl
sub
pushf
pop
push
aad
iret
es
pop
xor
pop
fimuls
test
adc
inc
push
cmpsl
clc
mov
bound
jmp
dec
fs
cmp
cmc
je
inc
cmpb
jno
mov
js
push
cwtl
cmp
push
pusha
or
mov
mov
fwait
sahf
mov
pushf
adcb
push
pop
inc
dec
out
jbe
pop
and
mov
out
sarb
sub
mov
jb
dec
sahf
inc
adc
lahf
shrb
negb
push
enter
xor
pop
dec
or
xorb
roll
jl
mov
xor
cmp
outsl
faddl
fmul
shll
sbb
scas
fidivl
sbb
adc
or
stc
mov
xchg
cmp
jne
push
rcll
xchg
push
out
iret
mov
mov
loopne
xchg
js
jae
mov
cmpsl
pop
sbb
and
jecxz
cmp
lret
leave
jge
mov
push
scas
push
lock
mov
out
or
movsb
add
sub
shll
jmp
push
gs
fidivs
xor
xor
fldl
subl
mov
sub
fldz
xor
mov
push
push
pop
or
jbe
dec
mov
fstl
add
fnstenv
inc
movsl
mov
outsb
cmp
xor
popf
jmp
mov
add
rsqrtps
push
jmp
adc
sbb
rcrb
mov
jecxz
aam
comiss
shrl
cmp
mov
lret
xchg
cwtl
fdivl
stos
loopne
jnp
das
notb
push
cli
in
push
xor
add
fldcw
ds
xchg
fnstenv
imull
shl
mov
test
push
divl
mov
xchg
cmpsl
fnstenv
outsb
xchg
icebp
xchg
xchg
fsubr
or
movsb
inc
push
push
out
repz
pop
iret
cwtl
les
int
shlb
ja
fidivrs
dec
or
adc
mov
mov
fildll
mov
sbb
xorb
fwait
pop
mov
or
adcb
pop
sbb
jno
call
clc
jne
adc
das
aad
jne
jg
int3
jle
push
push
popa
fwait
jo
icebp
mov
imul
push
mov
pop
xor
sbb
ja
lods
push
dec
js
cmp
stos
cli
fdiv
daa
xor
or
loope
inc
sub
dec
push
add
ljmp
cmpl
pusha
insb
leave
mov
out
shrl
adc
aam
jmp
fidivs
jecxz
pop
hlt
fbld
pop
add
pop
xchg
add
loop
js
imul
push
stc
std
insl
stos
pop
fidivs
jbe
enter
jge
loope
movsl
mov
enter
dec
mov
xor
addl
outsb
mov
dec
mov
xor
sti
inc
pushf
jl
xchg
int3
fldcw
xchg
adc
sbb
cli
mov
pop
movsl
shl
mov
xor
test
pop
jbe
cmp
push
outsl
ret
inc
cli
stc
xor
lds
in
add
pop
dec
popf
jg
repz
or
inc
xor
and
fs
jg
and
xchg
inc
adc
pop
pop
mov
xlat
and
inc
rclb
aam
inc
mov
xor
pusha
leave
sbb
jl
pop
rcrl
lock
xor
decl
xor
jno
mov
fisubl
arpl
adc
xchg
out
xchg
push
adc
mov
in
scas
lea
gs
subl
test
push
jp
sub
shrl
pop
add
sbb
out
dec
mov
dec
outsb
xorb
mov
and
xor
loope
jno
xchg
push
or
mov
iret
jnp
sub
jb
push
ret
mov
jl
jecxz
in
sub
rcll
sub
das
cli
test
ret
jnp
in
adc
aad
add
dec
xchg
test
out
pop
xchg
rorl
and
sub
mov
cmp
divb
rorl
adc
inc
cmpsl
adc
repnz
cmp
repz
les
cld
pop
mov
cmp
jecxz
sub
pop
int
les
jb
repnz
in
lock
daa
std
ljmp
add
in
data16
add
add
aas
out
mov
pop
jmp
mov
add
sti
sub
les
mov
testl
xchg
fs
push
les
pop
cmc
sub
test
lahf
push
ficoml
xor
in
jnp
fwait
into
push
lds
mov
dec
enter
xchg
xchg
cmpsb
fsts
jle
stos
mov
lds
or
and
push
out
and
add
pop
xchg
mov
add
nop
sbb
imul
adc
lds
pop
lea
cmc
cltd
and
ret
stos
mov
fistps
or
sbb
stc
std
rorb
out
push
daa
insb
ret
adc
popf
imul
jmp
xlat
mov
outsb
call
daa
out
jle
cmp
push
cs
fs
mov
cs
push
jle
pop
les
sbb
mov
fisttpl
ds
clc
lret
and
jne
daa
add
mov
push
pushf
mov
mov
pop
dec
out
in
cmpsb
dec
fists
inc
sahf
mov
popf
and
jle
ficoml
and
and
das
sbb
jno
xchg
rcrl
ss
stos
inc
inc
lods
mov
mov
lods
and
jge
fcmove
mov
loop
outsl
aas
xor
mov
scas
pop
aad
test
dec
jle
mov
mov
mov
push
movsb
test
movq
xchg
ja
pop
xor
adc
outsb
dec
repz
xlat
xchg
xchg
out
dec
xor
xor
jmp
int
mov
loope
es
sub
dec
sub
add
fdivs
out
mov
adc
icebp
or
aam
inc
dec
adc
add
and
mov
jl
inc
jno
jle
mov
frstor
jl
xchg
pusha
fisttpll
mov
lret
es
cltd
aaa
jl
jno
insb
outsb
mov
push
xchg
shrl
rcrb
aas
inc
inc
insl
sub
adc
sbb
rdmsr
or
test
push
mov
in
mov
lds
gs
inc
stc
cli
inc
fbld
hlt
or
cmpsb
ficompl
icebp
jmp
subb
loopne
xor
shlb
cli
imul
ficoml
push
cmpb
ret
mov
cmpsb
sbb
insl
cmp
sbb
lcall
and
ljmp
popf
xchg
fcom
dec
xor
jns
movsl
cmpsl
mov
and
sbb
push
xor
xchg
cmp
insl
or
out
mov
scas
pop
mov
adc
mov
fs
cli
arpl
xchg
loope
jl
ret
stc
pop
das
test
lods
repz
and
inc
cli
cmp
or
in
and
lret
sub
inc
or
inc
faddp
fmuls
fistl
add
xor
push
and
jb
sub
inc
sahf
dec
insb
sbb
xchg
pop
mov
in
add
push
dec
out
repnz
pushf
sbb
pop
inc
out
fs
push
mov
mov
xchg
sahf
mov
in
mov
sbb
sbb
push
push
dec
or
sbb
addr16
jmp
push
pop
mov
adc
sbb
imul
inc
cmp
lds
cld
cmp
mov
fsubs
xchg
or
and
out
scas
mov
push
leave
mov
and
xchg
shr
cmpsb
jmp
bound
out
cld
xlat
push
mov
lcall
clc
mov
or
pop
pop
std
andb
add
adc
fidivs
aam
and
xor
sub
adc
mov
mov
xchg
and
mov
stc
mov
xchg
fstpt
push
cmpsl
ficompl
cwtl
jne
leave
xlat
and
sub
lds
jmp
jmp
ret
xchg
fwait
push
enter
cmpsl
outsb
mov
xchg
adc
aad
cltd
inc
mov
subb
sbb
cld
mov
cmp
inc
subl
inc
sti
sbb
data16
and
xchg
orb
stc
in
fcomip
add
mov
and
fsub
jbe
out
lock
fistpl
cmp
pop
push
jmp
mov
mov
inc
js
dec
les
adc
or
std
cmpsl
fidivrl
lahf
inc
add
outsl
add
leave
fimuls
cmpsl
xor
stos
stos
mov
jmp
jne
pop
popa
xchg
mov
jecxz
mov
push
or
dec
push
gs
sbb
stc
icebp
testl
dec
das
xchg
or
ret
lret
mov
xor
enter
in
sub
inc
and
daa
ss
loop
push
pop
add
cmp
pop
insl
and
dec
inc
adc
xlat
cmpb
mov
andl
push
les
cmp
adc
sub
jo
mov
iret
inc
test
cs
stc
lock
sbb
sbb
inc
mov
inc
popf
outsb
xchg
pusha
imul
pop
jge
out
xor
mov
and
sahf
jp
enter
jge
jbe
pushf
loop
pop
pop
cwtl
add
xchg
mov
dec
ja
xchg
iret
enter
jbe
test
sub
xchg
mov
or
lods
rorl
test
gs
mov
xchg
mov
xor
add
cmc
mov
loop
xor
mov
or
ss
pop
ds
dec
incb
subb
clc
push
orl
nop
xor
xchg
outsl
cmp
inc
mov
test
sub
test
add
shr
jnp
out
mov
mov
push
popf
sti
mov
stos
sub
cmp
xchg
movl
jecxz,pn
xor
arpl
inc
mov
es
push
add
push
loope
jo
xorb
hlt
in
or
and
in
mov
add
mov
dec
add
mov
in
pop
mov
mov
das
lret
add
insb
adc
dec
push
call
into
repz
scas
movb
pushf
push
stc
arpl
fsubs
andl
dec
aad
shll
sub
inc
xlat
hlt
adcl
cmp
lret
mov
rol
mov
cmp
inc
mov
jbe
fidivrl
sub
in
jp
jns
inc
es
dec
sbb
push
div
lahf
test
add
inc
sub
xchg
push
adc
inc
xor
sbb
add
jo
icebp
sbb
fwait
cltd
lds
xchg
outsb
and
pop
dec
mov
nop
int3
shlb
xor
pop
and
out
jmp
push
inc
push
clc
push
sti
fadd
sub
and
hlt
jnp
dec
mov
pop
mov
xchg
mov
lock
mov
mov
dec
push
loopne
pop
es
push
and
xor
mov
sub
call
outsb
cmp
rcl
push
mov
and
and
gs
mov
cmovp
xchg
or
sub
xchg
repz
mov
jmp
xor
jno
push
in
arpl
mov
add
jno
arpl
xchg
jg
mov
jmp
and
cmp
lods
fldenv
ret
jg
push
mov
jne
lahf
out
repz
cs
into
addr16
in
or
inc
cltd
orb
out
xchg
test
repz
loop
shll
jle
mov
jnp
pop
push
hlt
aas
jg
imul
clc
sbb
popf
movsl
or
xor
xor
xchg
adc
and
add
lods
aas
mov
jge
xchg
inc
lcall
push
xchg
js
call
pop
popa
loop
push
cmpb
xor
movsl
sbb
or
cmp
pop
mov
add
sbb
cmp
mov
lcall
call
das
mov
push
add
adc
jne
mov
xor
sahf
movsl
enter
out
pop
mov
aas
ficomps
sahf
jp
test
sarl
xchg
out
clc
mov
jmp
loopne
inc
lods
adc
sbb
adc
rorb
inc
pop
loopne
lods
dec
insb
cmp
in
cltd
repnz
and
insb
loop
xchg
mov
inc
jo
int
gs
clc
xor
and
pop
fldl2t
xchg
ja
imul
mov
dec
dec
in
pop
stos
mov
shl
ds
mov
cld
xchg
scas
shrd
mov
and
jp
lds
pop
ljmp
jnp
aad
mov
or
jnp
push
or
es
mov
aas
rcrb
cli
xor
sbb
cmp
mov
mov
cmc
pushf
lahf
test
mov
mov
lock
data16
jmp
mov
test
iret
adc
repnz
or
aas
add
adc
pop
cmpsb
jge
sub
xchg
aas
mov
fcomip
jae
push
cmp
or
mov
xchg
push
push
add
xchg
imul
fcmove
arpl
hlt
aam
push
jno
jp
scas
or
divl
push
rcl
das
into
cld
int
xor
setnp
bound
cmc
and
test
std
sub
cmpl
xchg
dec
clc
out
dec
aas
xor
inc
imul
push
fisttps
insb
les
outsl
push
pop
hlt
sbb
insb
push
adc
fdivrp
divb
movsb
int3
mov
mov
std
es
inc
push
in
sahf
sbb
jnp
fstl
outsl
dec
fadds
mov
mov
insl
outsl
gs
add
or
sub
or
insl
sub
jbe
ljmp
jno
movsb
jb
sbb
mov
xor
push
out
popa
and
pop
es
xor
mov
addb
xchg
out
jecxz
dec
xor
sub
xchg
pusha
jecxz
cmp
mov
fisttpll
or
icebp
xor
xchg
lcall
or
inc
out
or
frstor
into
and
or
shl
lock
movsb
fnstcw
pop
and
mov
clc
ss
arpl
stos
cmp
xchg
xor
mov
int3
mov
pop
js
out
mov
mov
xchg
aad
test
dec
sbb
pop
jl
fstl
fidivrl
ret
sahf
mov
sar
add
ss
cld
insl
rolb
sbb
fmull
test
inc
imul
pop
jb
call
loop
push
inc
fdivr
sbbl
loop
loope
and
mov
mov
mov
sbb
loop
orb
push
lret
int3
js
xor
inc
or
cmp
out
pop
rorl
and
lock
adc
xchg
dec
fisttps
and
sbb
sbb
push
dec
hlt
js
mov
jle
fwait
cmc
sbbl
sub
push
mov
inc
adc
je
arpl
or
xchg
das
or
lret
sub
bound
loopne
xlat
mov
mov
jae
ret
mov
and
lahf
mov
fs
mov
pop
xchg
jge
clc
mov
cmp
fidivrs
dec
dec
clc
imul
in
sbb
test
std
inc
test
jnp
jg
shl
and
out
pop
pop
pop
mov
fstpt
iret
xor
sahf
cli
repnz
in
cmp
xor
fs
sti
adc
xlat
int
push
sbb
adc
mov
sbb
sbb
insl
and
add
push
mov
add
mov
out
movsb
mov
mov
pop
jg
lgs
into
mov
dec
push
ss
mov
add
popa
push
xor
rolb
cmp
aaa
xchg
adc
pop
jns
sbb
push
xor
push
lret
sbb
xchg
stos
sub
mov
jbe
ret
adc
add
test
adc
jmp
es
roll
add
and
test
sbb
call
mov
pop
sbb
mov
push
xor
insl
scas
mov
mov
jle
cmp
jns
fmulp
xchg
loopne
cwtl
sub
sub
dec
mov
or
imul
and
test
jns
data16
cmp
mov
fadds
dec
add
mov
push
test
cld
test
push
adc
ret
adc
std
adc
sbb
sarb
jmp
cmp
push
xor
pop
fnstsw
push
mov
cmpsl
or
and
cmc
pop
jbe
cmp
dec
in
fcmovbe
imul
testb
mov
fstps
sub
loop
jp
cmc
pop
and
cmpsl
push
sub
cmp
gs
rolb
jo
lcall
cld
es
sbbb
out
cmp
push
push
fs
jmp
iret
lret
outsb
gs
sub
aad
inc
or
pushf
dec
sub
lret
mov
rcpps
cmp
sahf
add
push
push
jg
jns
mov
cld
fistps
xor
pop
jns
cmp
aam
push
loop
js
xlat
mov
mov
imul
xchg
add
js
pop
daa
fmuls
dec
push
add
dec
sbb
das
mov
sahf
sbb
mov
pop
jnp
jg
pusha
pop
pop
into
cmp
add
push
xchg
sarb
aas
cmp
jmp
out
jge
xchg
mov
mov
stos
loopne
and
dec
pop
xor
lods
xchg
cmc
xchg
or
sbb
out
fnstsw
dec
mov
sub
movsl
repnz
mov
jns
xchg
add
dec
fiaddl
das
jg
lods
stos
pop
icebp
sub
aam
data16
jg
lret
mov
push
out
fwait
in
test
clc
sbb
jmp
test
cmp
push
ja
xchg
cmp
push
stos
out
push
aas
push
mov
xchg
mov
outsb
jne
fdiv
add
dec
mov
mov
mov
jbe
divb
sti
rorl
mov
daa
ret
loopne
dec
out
inc
jo
dec
cli
or
sbb
push
lock
jl
jno
aaa
lods
jns
call
ds
or
test
sbbb
and
mov
dec
xor
jb
les
dec
pop
movsb
dec
sbb
movsl
call
cli
es
push
ret
imul
sbbl
sbb
jns
sub
test
cmp
mov
mov
out
jmp
sub
lock
inc
dec
movsl
in
ficompl
rcll
das
negl
jecxz
lcall
xor
adc
xchg
repz
mov
in
out
jnp
sub
fcmovnbe
clc
dec
aaa
je
or
push
es
adc
lods
pop
jmp
xor
lock
mov
mov
sub
nop
out
and
add
arpl
add
mov
mov
call
sub
std
test
cmc
incb
sub
cmpsl
jne
sar
xor
aaa
inc
xchg
loope
pop
cmp
jo
js
add
pop
inc
filds
mov
icebp
sbb
test
xor
out
xlat
mov
add
loopne
movsb
aam
loope
lock
daa
mov
mov
jo
lds
lods
dec
shlb
imul
jns
jns
bound
push
das
scas
and
mov
jg
push
xchg
xchg
jg
lret
or
cmpsl
xchg
loopne
xlat
insl
outsl
icebp
push
mov
movsb
inc
adc
cltd
mov
jne
jns
pop
push
ljmp
add
lds
sbbl
or
aad
aad
jle
xor
les
clc
pop
loope
pop
movsl
dec
ret
sub
in
push
stc
xchg
add
popa
or
sahf
int3
add
imul
mov
lea
or
add
stos
jl
fsubrl
sbb
popf
pushl
cmc
fs
and
jae
gs
jb
scas
test
inc
mov
lods
xor
test
shl
sub
jmp
fnstenv
daa
lahf
mov
jl
xor
aad
test
psubusw
cmp
mov
mov
jne
push
pop
ljmp
add
adc
pop
mov
xor
inc
push
lock
cmpsb
movsb
jbe
ljmp
sahf
push
or
inc
mov
jnp
mov
out
adc
pop
je
jae
popf
xor
leave
add
inc
sub
in
lods
rorb
clc
or
fdecstp
dec
xlat
inc
test
sub
xor
aaa
jle
push
inc
xorb
test
mov
jne
add
jp
cs
adc
aas
xor
mov
adc
cmp
addr16
mov
xchg
push
lods
int3
cwtl
cmp
mov
jbe
shll
cmp
push
rcrl
insb
stos
mov
adc
test
mov
dec
cmc
adc
jl
xchg
inc
jge
jmp
cmp
out
mov
cmp
shlb
pop
jae
mov
rcrb
subb
pop
inc
pop
sbb
cmp
ja
jge
pop
mov
xchg
jnp
aaa
lcall
ds
int
dec
lds
mov
sahf
pushf
ficoml
lods
daa
shll
lds
mov
call
test
and
or
outsl
jmp
dec
movsb
test
movsl
jg
mov
mov
mov
adc
ror
mov
rcr
stc
mov
mov
ret
mov
fdivs
gs
dec
fcompl
jno
push
out
in
add
shl
mov
xchg
cmpl
popf
jge
jp
xchg
fistpll
fwait
mov
add
push
add
dec
loopne
or
lds
mov
push
pop
in
add
aas
cmp
pop
push
cld
lret
and
mov
inc
repz
nop
mov
dec
lods
les
sbb
bound
add
pop
cmp
mov
sub
jno
mov
pop
pop
xchg
sbb
aam
mov
xchg
test
jb
rclb
daa
iret
loop
hlt
jmp
fs
repnz
dec
cmp
xchg
clc
aad
gs
add
dec
dec
outsb
fbld
add
mov
push
or
mov
sbb
or
jl
mov
sub
inc
mov
icebp
rcll
mov
and
stos
daa
cmp
push
xor
sub
jge
ret
sbb
test
mov
das
xor
jge
mov
enter
push
aam
call
push
lods
add
cs
inc
lcall
lock
sub
rcrl
or
adc
cmpsb
dec
test
pop
inc
or
orb
pop
adc
mov
fcoms
lahf
dec
and
mov
sub
inc
int3
inc
adc
mov
fs
add
xchg
es
sahf
or
jmp
cmp
inc
adc
cmp
jae
xchg
lds
imul
mov
and
lahf
cwtl
aas
mov
pushf
or
mov
shll
xor
shr
cltd
jmp
mov
lcall
lods
push
in
adc
or
mov
push
jne
or
nop
push
lods
lods
sub
mov
push
ja
pop
insl
sub
sar
and
dec
scas
push
loopne
jne
sub
hlt
mov
xchg
mov
jle
add
outsb
data16
jb
icebp
mov
shlb
addr16
or
push
nop
mov
fiadds
stos
dec
cli
shlb
pop
lods
shrl
cs
jbe
sub
xchg
push
ljmp
add
dec
xchg
das
sti
add
xchg
sub
xlat
clc
dec
push
or
vpsubw
ret
jl
mov
repnz
dec
adc
ret
pop
jne
xchg
add
fistpl
int
jnp
shl
scas
sub
mov
or
inc
add
mov
mov
out
mov
fwait
sbb
add
out
inc
jns
and
dec
mov
xchg
jp
dec
scas
pop
pop
and
jmp
ret
cmp
ljmp
inc
inc
pushf
loop
mov
out
xlat
jl
or
sti
adc
cmp
daa
stos
push
leave
cmp
inc
ljmp
add
int3
pop
push
rorb
and
push
int
xchg
ljmp
xor
add
jp
mov
lods
add
mov
jne
les
sub
rorl
inc
push
lea
and
xchg
divl
data16
mov
or
cmp
test
adc
sti
sbb
sub
loop
fwait
lods
imul
or
pop
loope
iret
cld
ss
xchg
js
fidivrs
mov
das
loopne
xchg
into
adc
movsl
test
out
xor
mov
jno
in
lods
jno
jmp
stos
push
pusha
test
adc
xchg
mov
js
sbb
inc
xlat
sbb
orl
mov
ret
dec
dec
cld
lcall
inc
mov
outsb
cmp
out
and
xlat
dec
or
push
add
inc
push
out
push
leave
jno
jo
orl
pop
gs
shr
lods
fnstcw
sbb
aas
adc
mov
lea
adc
and
inc
and
ret
jo
push
sub
xor
jl
push
push
adc
pop
lret
jae
pop
in
sahf
adc
dec
pop
fistl
xor
fistpl
cli
push
divl
inc
sub
jl
cwtl
test
dec
shll
sub
mov
ja
repnz
push
mov
into
lahf
cmp
int
ds
jns
xchg
mov
dec
mov
ror
mov
out
mov
dec
inc
mov
scas
jb
ds
iret
nop
cmp
into
mov
adc
jge
mov
pop
aad
pop
dec
hlt
push
mov
add
ss
fwait
mov
mov
clc
mov
or
xor
ret
sub
aas
sarl
ficoms
fistl
sbb
cmp
movsl
xor
mov
enter
and
call
repz
out
xchg
sub
sub
push
les
xchg
xor
int3
jbe
xchg
in
loopne
mov
mov
add
enter
out
add
inc
mov
and
stos
lods
imul
ds
xchg
sub
inc
xchg
adc
loope
push
mov
ljmp
add
addr16
mov
pop
je
lds
sbb
push
or
into
sbb
xchg
leave
int
and
inc
in
adc
lret
into
mov
jbe
fwait
jp
addr16
or
cmpl
pop
aas
orl
sbb
push
pop
sub
test
xchg
dec
mov
in
lods
outsb
cmp
mov
divb
aad
xor
push
jle
outsb
xor
arpl
movsl
push
jbe
pop
je
fs
ljmp
aaa
out
in
xchg
mov
icebp
lock
jo
fidivs
xchg
cs
fwait
test
jecxz
jl
aam
mov
mov
push
leave
pushf
fwait
inc
shlb
addb
aam
mov
inc
and
pop
mov
ret
scas
pop
push
or
pop
push
cs
pop
xchg
in
je
fidivl
into
clc
insl
and
dec
inc
adc
pop
mov
adc
mov
ds
push
cmc
adc
cmpsb
int3
ffreep
fstl
out
rcrb
xchg
sub
pop
lods
rclb
jp
cltd
or
outsl
movsb
xor
mov
mov
in
mov
lods
add
sub
xchg
int3
pop
in
ds
xlat
mov
jno
pop
sbbl
xor
insl
pop
filds
jecxz
and
dec
push
push
push
add
sub
mov
push
dec
fwait
stos
icebp
cmpsb
enter
mov
adc
adcl
pop
shll
outsl
mov
cmp
jno
aad
xorb
es
mov
sub
push
adc
js
shl
int3
hlt
pop
mov
xchg
hlt
ror
dec
lcall
ret
fsubrl
call
rcll
inc
mov
scas
sub
xor
sub
fists
ror
test
es
mov
lret
adc
lret
fnstcw
pusha
clc
call
sbb
mov
fstl
jnp
scas
mov
ret
movsb
sbb
out
pushf
jo
push
cmc
push
mov
movsl
inc
dec
fstl
inc
inc
lret
stos
lock
dec
mov
dec
sbb
scas
adc
fiadds
fcomp
sbbl
jl
cmp
push
push
jnp
mov
mov
movsl
adc
pop
jbe
xor
loop
jg
pop
in
cli
xor
lea
clc
mov
mov
inc
call
mov
lock
test
test
cltd
loope
das
stos
jecxz
lret
and
test
mov
xor
daa
mov
inc
xchg
lods
test
jbe
adc
mov
cmpsl
les
arpl
mov
imulb
into
jns
jmp
loop
and
sar
jbe
xchg
enter
lock
aas
dec
mov
in
out
xchg
add
inc
inc
repnz
aad
pop
test
ret
rcl
mov
testb
sbb
gs
mov
jb
clc
fucomip
pop
dec
mov
mov
fidivrs
shll
mov
loop
lock
test
cs
cmp
cmpsl
fistl
push
test
xchg
xchg
mov
sbb
fwait
xor
xchg
xor
aad
andl
push
lods
or
sub
cs
mov
stc
sbb
jb
mov
pusha
cmp
sub
sub
ficomps
pop
sbb
pop
bound
stc
jbe
hlt
cwtl
add
ss
repnz
and
push
xor
clc
roll
int
mov
addr16
lcall
addr16
fisubs
test
test
movsb
xor
dec
dec
imul
push
aas
gs
or
bound
mov
or
inc
cmp
xchg
jne
rcl
in
arpl
pop
sub
pop
repnz
iret
mov
add
add
cli
cmp
imul
lods
outsl
adc
fs
dec
pop
dec
in
mov
repnz
stc
pop
jmp
or
daa
mov
test
lock
jecxz
mov
and
pop
push
arpl
and
bound
aam
les
mov
js
inc
mov
out
cmpsb
ret
aas
and
out
in
popf
mov
stos
stc
cmp
imul
add
rcll
dec
in
pop
push
cmp
mov
adc
outsl
adc
adc
push
pop
repnz
mov
mov
inc
addr16
cmp
loopne
enter
pop
dec
fldcw
inc
fdivl
rcl
adc
sub
mov
adc
aaa
repz
xchg
xor
test
cltd
mov
cli
pop
cmp
lea
push
push
mov
clts
or
adc
jmp
inc
fs
and
fistpl
insb
inc
push
jno
cmpsb
test
pop
loop
sub
outsb
push
mov
popa
rcrb
in
int3
sub
scas
stc
pushaw
pushf
and
jp
inc
lret
sahf
daa
sbb
out
ret
inc
adc
push
jne
xor
xor
cld
pop
push
ret
cmp
xchg
aad
sbb
mov
movsb
testb
sub
sbb
cmp
popf
jae
push
sbb
ljmp
and
jbe
mov
stos
in
cmp
mov
aad
enter
in
or
push
imul
cld
test
fwait
jmp
jge
ljmpw
lret
xor
sub
loop
inc
xorb
xchg
rcrl
mov
mov
pop
movsl
es
mov
jecxz
cmp
out
lock
mulb
sub
cmp
je
icebp
fcoms
dec
imul
mov
aaa
dec
fcomps
in
icebp
fdivrs
rcl
ficompl
pop
je
mov
ljmp
cmp
out
xchg
mov
pop
lea
adc
data16
cmpsl
call
push
rorb
stos
lods
jo
jno
jb
ja
xchg
daa
stos
jp
in
and
leave
arpl
call
push
xor
sub
cmp
mov
orb
movsl
sub
and
jns
mov
shll
aam
cld
rorl
pop
jbe
mov
dec
mov
push
fcoml
push
lods
sbb
sub
int
cs
test
pusha
dec
stos
mov
clc
scas
rorl
xchg
lods
in
andb
xchg
mov
or
jl
imul
sbb
add
adc
add
hlt
push
mov
loope
dec
mov
dec
loope
inc
push
push
arpl
and
cmp
mov
mov
call
rclb
out
inc
cmp
push
pop
xchg
pop
add
stos
lahf
jg
int3
cmp
popa
pushf
aas
popa
lds
repz
aad
movsb
jl
adc
int3
cli
jns
jp
lds
pop
test
hlt
jo
pop
push
data16
inc
mov
xor
addr16
imull
sub
mov
clc
shll
push
js
mov
cltd
dec
dec
mov
sub
ja
jecxz
add
mov
fcmovu
adc
in
lcall
cmp
push
xchg
sarb
or
je
mov
mov
aad
add
jp
jae
jb
sub
enter
sub
inc
daa
xor
ss
invd
xchg
icebp
pop
movsl
adc
rol
push
icebp
mov
addr16
sbb
and
outsl
and
aam
imul
mov
sub
insl
aam
cmc
ds
or
loopne
test
into
push
popa
fcomp
imul
cmp
dec
pop
scas
stos
pop
cmc
int3
test
adc
lcall
cmpsb
jbe
push
jp
inc
cmp
pop
icebp
movsl
push
or
sbb
inc
push
push
stos
pop
out
ret
inc
aaa
mov
push
fistpl
testb
loopne,pt
into
xor
xchg
jp
out
cwtl
outsl
popa
xchg
fs
pop
andb
stos
mov
mov
subb
lods
insb
aaa
aad
lret
cmp
cltd
in
lock
or
mov
jmp
dec
arpl
dec
pop
into
and
dec
xor
or
push
repnz
cli
jae
sbb
sub
cmpsl
xor
and
ficompl
cmc
sbb
dec
cmp
xchg
pop
imul
inc
push
iret
inc
dec
aad
or
dec
xchg
xor
xor
mov
jae
idivl
or
sarb
arpl
movsb
pop
mov
jmp
hlt
mov
push
sbb
sahf
in
inc
lods
mov
outsb
pop
icebp
test
mov
mov
add
into
aaa
mov
add
fwait
outsl
aas
mov
xorb
pop
mov
sbb
sahf
pop
in
sbb
pop
and
stos
fstpl
pushf
pop
sbb
movsl
js
xlat
or
mov
insl
cld
pushw
cmpb
ret
inc
pop
fstl
jmp
bound
mov
mov
push
mov
sub
adc
lods
cmp
jbe
movsl
inc
mov
dec
inc
dec
inc
scas
fnsave
clc
negb
xchg
imulb
sbb
push
lcall
cli
xlat
jge
cld
test
leave
movsl
test
out
jnp
cld
add
mov
outsl
fstl
js
mov
adc
pop
fnsave
rcl
cs
mov
mov
sbb
cs
iret
icebp
fisttpl
sbbb
inc
xchg
rcl
push
xlat
pop
jg
xchg
xchg
dec
insb
sub
es
mov
mov
test
xchg
or
xchg
fdivrl
pop
add
mov
shl
pushf
jl
pop
imul
test
out
out
pop
sti
fsubr
out
cmpsl
cmp
out
popf
add
jne
ret
jmp
lcall
push
jle
enter
mov
loopne
nop
or
lods
or
orb
cmp
je
jge
fdivrs
mov
push
pop
sarb
pushl
dec
dec
std
bound
les
pop
movsb
scas
nop
pop
cmpsl
in
cmc
jmp
xchg
inc
mov
xchg
sbb
cwtl
push
adc
jo
xchg
rcrl
mov
fidivrl
or
shr
and
cmp
and
dec
mov
inc
cmpsl
comiss
iret
xchg
dec
mov
push
das
push
jl
neg
popa
cltd
cli
jne
lcall
pop
mov
popl
mov
adc
jno
adc
mov
jae
imul
dec
imull
hlt
fwait
out
mov
push
mov
and
sub
add
scas
add
dec
sub
inc
dec
fs
inc
test
and
popa
test
stc
fs
add
push
cwtl
out
sub
in
sti
aaa
packsswb
int3
xchg
je
sbb
mov
aam
out
sbb
adc
push
push
or
pop
aas
ret
and
gs
hlt
inc
push
cmp
andl
daa
xchg
mov
dec
add
fcom
mov
call
jne
enter
and
mov
cld
xor
mov
jns
xchg
cmp
add
insl
sbb
jle
pop
and
sbb
dec
mov
jecxz
inc
in
xchg
mov
mov
pop
jge
fs
roll
popf
insl
pop
clc
sbb
cmp
xchg
jg
mov
jb
mov
push
mov
les
add
dec
imulb
mov
mov
test
ds
int
stc
jge
ss
jnp
out
mov
xchg
lret
push
cmp
les
aaa
or
pop
xchg
roll
xchg
outsl
mov
dec
in
adc
shll
and
cmp
sbb
jecxz
js
mov
fcomip
jmp
out
mov
adc
push
cmp
sub
or
dec
rol
cmp
mov
mov
dec
sbb
add
mov
lcall
mov
sbb
insb
mov
and
mov
sbb
ja
js
pop
jle
and
test
or
popa
imul
or
jle
stc
or
fidivrs
sub
push
inc
fldt
sub
mov
mov
icebp
aas
out
out
mov
test
jne,pt
adc
popa
loop
mov
xor
out
ljmp
jp
fistps
mov
xor
dec
push
fsubrs
fistpl
fdivrs
pop
pop
dec
enter
mov
pusha
push
or
lds
fs
ss
addr16
js
pop
xor
int3
rorb
sar
and
pusha
fwait
jp
out
loopne
dec
stos
daa
push
aas
push
mov
sub
pop
push
dec
call
std
jg
scas
les
push
xchg
dec
bound
pop
insl
jecxz
or
out
aaa
mov
lcall
jg
cmp
neg
jp
jle
cmpb
jl
int3
pop
std
sbb
imul
dec
insl
or
jp
mov
mov
mov
movb
out
push
jp
mov
push
das
mov
test
push
xchg
jge
aad
xor
nop
fstl
xchg
inc
insb
fsubs
push
cmp
add
test
push
daa
aaa
pop
inc
dec
cmp
push
add
dec
jle
mov
pushf
ret
sbb
adc
adc
adc
or
js
mov
int
lcall
pop
sub
sti
adc
fstpl
jl
jl
enter
mov
mov
out
popa
jp,pn
fsubl
test
dec
jnp
loop
lods
ret
in
out
popf
frstor
pushf
sub
jns
adcl
and
jo
jge
in
xchg
or
js
jno
shl
les
cmpsb
imul
rcll
pop
aaa
jle
or
fmull
leave
adc
xchg
ljmp
repz
iret
mov
mov
ja
pop
mov
stos
add
repz
push
in
fstps
std
or
push
xchg
dec
lea
add
pop
cmp
nop
aad
js
and
and
dec
xchg
mov
add
xchg
mov
xchg
sub
cmp
push
inc
adc
icebp
hlt
lahf
adcb
or
push
xor
movsb
sub
inc
add
mov
dec
fildl
dec
jmp
mov
insb
mov
je
das
adc
mov
jbe
shr
pop
add
and
inc
js
push
clc
cmpsl
shrl
loopne
enter
es
push
js
out
jns
mov
mov
dec
test
aaa
loope
mov
xor
add
mov
loopne
adc
jno
or
or
aam
sti
push
pop
sub
stos
push
inc
xor
inc
divl
inc
incl
inc
cmp
sbb
pop
lcall
inc
mov
out
add
xchg
cmpsb
jnp
cmpsb
fiadds
lock
addr16
popf
enter
sbb
lock
dec
push
xlat
sub
push
into
ljmp
ss
out
outsb
insb
or
and
dec
data16
leave
rcrb
jl
adc
les
scas
fdivrl
cmp
fnstcw
out
fcmove
dec
sub
sahf
out
cmpsl
sub
mov
add
loope
cld
mov
lods
xor
xor
stos
bound
shrl
push
adc
icebp
mov
xor
adc
inc
arpl
ja
jl
xor
sbb
mov
aaa
push
xchg
mov
xchg
nop
sub
stc
ret
push
jns
add
cltd
nop
mov
add
jge
cltd
sarb
cmpsl
mov
adc
leave
xlat
ficomps
mov
push
xor
mov
adc
add
inc
push
arpl
inc
sub
ret
sbb
push
aad
and
leave
subb
jecxz
push
icebp
lock
stos
test
popf
inc
push
mov
xor
jo
jmp
sbb
imull
sub
out
loope
iret
jecxz
jb
sub
js
iret
adc
mov
test
or
adc
add
sbb
fimuls
imul
lcall
mov
imul
andw
movsl
inc
push
ficoms
sbb
js
out
dec
xor
xchg
orl
push
aas
imul
sbb
out
mov
xchg
fsts
add
scas
out
lds
rcll
cltd
sbb
popl
pop
dec
lret
adc
adc
addb
inc
in
lret
mov
test
jb
mov
loope
test
mov
insb
rclb
adc
cwtl
fdivrl
into
xchg
movsb
add
pop
cltd
in
jno
xchg
call
mov
xorb
stos
and
add
cmc
sub
and
adc
js
fsubrl
leave
sahf
or
fcoms
mov
cmpsb
rorb
test
arpl
aaa
in
das
pusha
addr16
push
ret
push
lea
outsb
sub
cmpb
mov
hlt
or
jg
sbb
hlt
fsubs
push
aam
sub
mov
add
lea
xchg
inc
jns
outsb
cwtl
jecxz
sbb
jae
inc
std
pop
iret
lahf
das
mov
out
xchg
dec
and
sub
pop
add
shl
loope
mov
xor
jo
xchg
and
icebp
push
loop
or
lret
inc
inc
icebp
or
insb
arpl
cmp
jmp
test
outsb
pop
ds
jae
js
fsubrl
mov
sub
data16
pop
jl
ss
cmpsb
lods
into
sbb
xor
shl
lods
hlt
mov
add
ljmp
pushf
movsb
jge
adc
dec
mov
enter
lods
cmp
inc
push
pop
jmp
adc
repnz
out
adc
adc
addr16
cmp
in
shll
xchg
jb
mov
or
ljmp
xchg
nop
xor
shrl
fisubrs
outsl
jo
clc
cmc
bound
push
test
je
shr
cmpsl
stos
sub
push
and
jecxz
test
nop
clc
call
popa
shlb
push
push
push
push
xchg
ljmp
inc
je
iret
push
lods
or
ret
jb
fmul
jb
test
test
int
adc
mov
cli
xchg
das
arpl
mov
add
xor
dec
insw
sbb
decb
mov
adc
xor
jp
add
xchg
xor
xchg
fisttpll
dec
adc
jmp
sahf
movsb
add
add
sub
mov
cmp
fistps
and
dec
pop
in
ret
jno
test
ja
js
imul
ja
je
loope
mov
stc
les
cs
and
gs
ja
in
pop
fcmovnbe
xchg
or
test
test
insb
or
cmpsl
insb
mov
imul
cmp
mov
adc
adc
xorb
dec
dec
jecxz
in
mov
stos
mov
and
add
jle
xor
pusha
jnp
fiaddl
insb
inc
iret
xchg
mov
aas
in
cmp
and
jb
adc
enter
push
shrl
mov
inc
cmp
lret
aad
push
push
pop
repz
test
mov
loop
sahf
jle
mov
stc
add
mov
sarb
stos
fsubl
data16
js
int3
daa
lahf
xchg
decl
xchg
jnp
cmpsl
sbb
or
scas
pop
bound
inc
pop
mov
push
dec
jge
pop
pop
adc
out
cltd
shlb
test
loop
add
mov
out
dec
icebp
out
xchg
pop
adc
push
pop
in
rdmsr
cld
data16
negl
cld
iret
in
push
sbb
adc
test
addr16
pop
add
dec
aad
mov
push
add
ljmp
fldenv
outsl
jno
inc
sub
cs
test
push
repz
jbe
jl
fs
and
outsb
jbe
sub
push
fwait
icebp
cmpl
xor
mov
test
in
ljmp
mov
mov
or
mov
enter
test
inc
inc
dec
ljmp
xchg
dec
dec
bound
dec
imul
lock
stos
icebp
repz
test
int
dec
push
icebp
push
and
rcrl
cmp
sbb
mov
popa
jns
dec
jo
lcall
ds
xchg
push
scas
dec
or
inc
into
adc
test
rolb
pop
jl
push
push
cmp
push
data16
adc
sub
aad
inc
repz
in
scas
dec
cmp
mov
shl
jl
lock
lret
sub
jecxz
sub
stos
ljmp
add
lods
dec
out
xchg
ficompl
cmpsb
push
jo
or
aaa
les
sbb
mov
cmp
xchg
in
mov
xchg
clc
xor
xor
sub
push
sbb
movsl
cli
lock
jle
cmc
sub
fiadds
pop
adc
or
mull
xchg
dec
pop
xchg
outsb
inc
in
xor
sub
dec
sbb
add
push
mov
dec
test
outsl
jns
lahf
cmp
cmc
loop
pusha
sbb
push
add
dec
push
cmp
pop
pop
imul
popa
int3
sahf
repnz
add
ljmp
arpl
cmpsb
cmc
neg
pop
mov
mov
stos
dec
insl
sub
loop
xchg
mov
aam
or
das
int3
stos
gs
incb
xor
pop
push
or
fs
js
cli
add
cmp
xchg
mov
fistl
mov
mov
cltd
int3
dec
pop
push
sbb
fwait
nop
xor
or
lock
pusha
cmpsl
fisubs
xchg
shll
imul
insb
push
in
dec
scas
adc
lret
lock
xor
cmpsb
arpl
aam
bound
or
imul
pop
mov
push
loopne
cmp
test
ret
mov
or
jo
jge
pop
pop
fistpll
aad
test
les
arpl
testl
inc
and
cmpl
lcall
int
add
adc
add
pop
jbe
cmp
ret
and
cld
addr16
adc
and
jns
add
or
push
and
jmp
dec
test
fistps
lock
mov
loop
fisttpll
mov
out
mov
xchg
jb
add
fadd
fsubrs
dec
mov
pop
ficoml
aas
and
lock
mov
testl
push
xchg
push
inc
adc
mov
push
push
dec
dec
es
loop
mov
aaa
aam
xchg
mov
mov
sbb
dec
xchg
sbb
jmp
shlb
sub
cmp
adc
sbb
std
pop
je
xchg
add
mov
pop
jns
sbb
push
push
and
mov
push
cwtl
jbe
dec
lret
inc
ljmp
push
test
push
mov
cmpsb
push
sbb
push
and
push
fcoml
xchg
adc
dec
mov
sbb
iret
xor
bound
or
xor
sets
in
jmp
ret
and
rcrl
and
and
mov
or
int
out
loopne
loop
fdivl
shl
mov
lret
insb
inc
dec
push
mov
sbb
data16
test
pop
dec
testb
pusha
cld
aaa
mov
mov
cmpl
dec
in
std
ret
scas
imull
int
ja
inc
cmp
mov
cmpl
sbb
clc
stos
jb
cmpsl
clc
fs
xchg
std
jp
sbb
dec
popf
pop
pop
loop
cwtl
fsub
std
rcrb
push
dec
add
jbe
lods
inc
sub
mov
cmc
xchg
addb
testl
ss
sub
mov
btr
jecxz
and
adc
addb
imul
or
sahf
sbb
clc
imul
leave
push
cmp
push
sub
orl
pop
sub
ficoml
pop
xor
push
xchg
pop
sbb
aad
sub
mov
pop
pop
mov
jbe
adc
xchg
shr
xorl
mov
push
loopne
cmpsl
dec
mov
jecxz
mov
xlat
insl
out
roll
pushf
xchg
sub
jmp
adc
jle
jmp
xchg
cmp
hlt
mov
jg
das
mov
test
andb
push
mov
inc
dec
add
clc
aad
mov
fs
out
sarb
or
push
xlat
mov
push
xcrypt-ofb
cmpsl
outsb
cmp
fs
pop
mov
ret
xchg
xchg
pop
rorb
adc
lcall
insb
jl
stos
repnz
lcall
sbb
cmp
or
stos
sub
push
mov
xor
lcall
and
inc
test
cmp
daa
push
xor
das
xchg
push
in
xor
xchg
std
jne
fcoms
in
pop
and
lods
mov
cmpsb
gs
push
int
rcrb
sti
mov
sbb
popa
cmp
cmc
sbb
jbe
mov
ret
out
cltd
mov
cmc
cmp
inc
lahf
movsb
lea
add
or
mov
enter
adc
cmp
mov
jb
mov
and
adc
pop
std
push
dec
daa
mov
dec
in
ljmp
mov
cmpsb
out
add
dec
dec
xor
fdivrl
mov
pusha
shlb
dec
and
aad
inc
das
repz
mov
aad
subl
mov
add
mov
cmpsb
and
ds
int
arpl
sbb
cmpsl
cmp
leave
mov
inc
push
fistpl
and
or
jge
iret
sbb
lock
xchg
or
add
fists
xchg
mov
gs
out
clc
push
je
pop
mov
xchg
outsl
add
sbb
sbb
xchg
aaa
adc
cmp
sub
ror
in
dec
adc
gs
pop
and
mov
cmpsb
clc
inc
dec
adc
js
jbe
mov
aad
cmp
mov
lds
sub
add
adc
out
repz
mov
je
jbe
and
cmp
or
push
mov
mov
sub
sahf
push
test
sbb
xor
jns
or
std
mov
loop
lods
push
xchg
fisubl
push
mov
hlt
mov
push
cmp
push
mov
sub
jbe
adc
push
mov
push
div
pusha
lea
fxch
scas
fnsave
mov
xchg
push
cld
and
sub
dec
adc
add
xchg
mov
gs
cmp
mov
adc
mov
and
xchg
mov
and
ret
and
mov
test
jp
repz
out
jns
pop
sbb
jnp
les
in
sbb
fsub
and
push
shlb
pop
mov
mov
mov
pop
jne
xor
pop
push
stos
adc
or
or
lcall
jge
mov
or
xor
icebp
mov
pop
aaa
mov
cmp
mov
popf
sbb
inc
jmp
xor
jb
sbb
insb
jp
mov
dec
cld
ret
inc
ret
lea
insb
mov
mov
sub
aam
std
mov
pop
popa
push
dec
jl
dec
xor
xorb
jecxz
fcmovnb
xchg
lods
adc
movsb
rcl
sub
pop
test
ret
dec
les
push
mov
pop
push
clc
push
inc
je
ja
aaa
or
mov
popa
je
sub
lret
rorl
inc
inc
lcall
decl
jb
int
adc
jmp
jecxz
outsb
data16
dec
aas
fisttpll
std
jne
cltd
jmp
jl
in
fnstsw
out
push
adc
xchg
ficoms
out
xchg
pop
into
or
lret
push
inc
cmpsl
scas
addr16
mov
lret
mov
ss
jecxz
pop
inc
scas
cmc
cmp
push
int3
xchg
cmp
shrl
popa
cltd
sub
xchg
sub
daa
sbb
pop
mov
push
push
adcb
pop
mov
push
lret
adc
mov
mov
xor
sbb
ljmp
imul
rcrl
xchg
push
in
loopne
jo
addr16
in
cmc
or
add
test
xor
imul
fsts
mov
push
cwtl
inc
stos
stos
adc
xor
ljmp
sub
dec
mov
fisubrl
sub
mov
bound
insl
ljmp
dec
add
loope
loop
nop
mov
adc
mov
push
sbb
negb
fwait
dec
mov
sbb
js
dec
test
sub
mov
or
sub
inc
jecxz
mov
fidivrl
xchg
fcomip
popa
and
sti
jmp
imul
mov
jg
call
adcb
mov
das
pop
lock
aam
insb
stc
add
dec
ds
push
and
mov
test
cmpsb
pop
out
jno
jle
sti
fistpll
addl
sbb
pop
add
test
or
mov
das
cli
dec
ret
mov
nop
adc
shl
sub
test
cmp
mov
pushf
push
fwait
shrl
fildll
jae
loopne
sahf
inc
mov
jae
lret
cmp
mov
out
mov
cmc
dec
push
cli
je
test
mov
faddl
in
or
sti
fs
mov
push
dec
pop
and
xchg
mov
push
stc
mov
mov
dec
pop
pushf
add
cli
ficomps
and
inc
popa
rcrb
dec
into
cmpsb
pop
jmp
fs
mov
sahf
mov
sar
add
lock
jbe
ss
daa
lods
out
leave
or
or
mov
out
xor
imull
mov
push
xchg
mov
pop
xor
fistpll
call
scas
insl
hlt
cmp
ret
clc
clc
push
std
mov
les
add
lds
xchg
inc
pop
aas
pop
add
add
mov
test
dec
jnp
add
aad
loop
push
adcl
mov
or
and
daa
movsb
dec
mov
cltd
xor
mov
add
sub
mov
mov
loope
inc
lods
mov
push
cld
ret
push
ss
sbb
dec
mov
cmp
push
mov
mov
mov
pop
sarl
scas
sti
popf
sbb
xchg
xchg
test
or
imul
jge
sub
mov
xor
pop
jo
mov
add
sub
pop
dec
mov
jg
adc
sub
xchg
ja
mov
xchg
sbb
jl
push
pop
aas
das
mov
fisubrs
cmpsb
mov
es
lahf
les
imul
and
pop
push
cmpsl
sbb
mov
or
arpl
scas
sbb
cmp
pusha
mov
cmpb
inc
mov
dec
jmp
xchg
dec
cmp
clc
incb
popf
scas
pop
xor
mov
jo
in
lock
pop
jge
sbb
push
xchg
jae
scas
or
push
aaa
fcmovnbe
xor
xor
in
jg
or
lcall
dec
xchg
test
xor
ret
xor
inc
repnz
mov
enter
bnd
imul
dec
lock
xchg
mov
sub
add
loope
mov
popfw
adcl
jne
jnp
pop
icebp
xchg
sub
mov
xor
jmp
in
test
into
or
aas
fistpl
fimuls
add
rolb
push
mov
insl
cmp
cs
in
cmc
jno
or
ljmp
and
mov
and
mov
sub
adc
inc
notl
lock
jge
dec
adc
ret
sub
push
jecxz
jg
xchg
dec
test
and
inc
stos
jbe
inc
push
call
pop
pop
dec
fs
jbe
sarb
sbb
inc
mov
stc
lods
subl
fstps
pop
or
or
rclb
insb
iret
loopne
and
sbb
rcll
ror
dec
movsl
jecxz
lea
cmp
loope
push
inc
push
or
sub
cli
outsl
lds
nop
in
ja
xchg
or
mov
and
iret
mov
movsl
inc
daa
lret
inc
mov
mov
bound
adc
mov
mov
stc
cmp
lock
pop
xchg
mov
rclb
pop
xchg
jp
pusha
scas
or
add
sti
loop
nop/reserved
add
sbb
push
subb
cmp
sti
dec
fnstsw
dec
ss
mov
loope
ds
dec
fwait
inc
mov
sbb
mov
jno,pt
ret
sbb
in
xor
mov
mov
dec
lods
pop
push
and
in
pop
loopne
test
add
call
in
mov
mov
fcmovbe
xorb
js
xchg
test
add
pop
or
jnp
iret
add
push
subb
adc
cmpsb
cmp
cmp
stos
inc
pop
inc
fdivr
pcmpeqd
or
aaa
push
inc
and
movsl
das
lods
add
jno
push
repnz
outsb
sti
pushf
sahf
into
je
sahf
std
mov
lods
mov
sub
add
ret
xchg
in
test
outsl
mov
cmpsl
fcoms
gs
in
movsb
inc
jl
mov
push
jg
xchg
pop
call
xor
rcll
into
dec
lods
or
xor
and
xchg
fidivrl
lahf
xchg
mov
jne
add
fcmovnb
push
inc
int3
dec
adc
adc
push
lea
push
pop
xlat
and
fisubrs
or
mov
sbbb
dec
add
daa
mov
dec
mov
sbb
ljmp
arpl
xor
fwait
stos
stc
xor
dec
cltd
outsb
inc
xchg
mov
or
aam
lahf
cmp
xor
add
adc
lret
and
hlt
add
or
aaa
mov
jg
or
jne
cmpsl
pusha
adc
and
in
cs
inc
adc
in
dec
push
fidivl
popf
rorb
and
mulb
dec
xor
push
iret
adc
cmc
jecxz
mov
push
or
lret
cmc
and
sbb
lea
or
mov
jns
jno
test
xchg
xchg
mov
lea
xchg
leave
subl
or
add
fmuls
inc
ret
dec
out
sahf
shlb
je
cmp
ret
clc
lret
aaa
dec
aam
mov
add
add
mov
sti
js
rolb
inc
add
dec
jb
inc
mov
add
std
das
cltd
loopne
out
jo
popa
cmp
loop
cwtl
fsubs
xor
outsl
xor
popf
in
and
inc
outsl
mov
cld
jp,pn
dec
movsb
push
lcall
cmc
inc
mov
xchg
mov
popf
hlt
jmp
hlt
insl
xor
mov
inc
cmp
ret
or
sub
push
shrb
pop
jecxz
or
push
out
stos
jmp
inc
cwtl
jno
jl
push
pop
mov
xor
adc
and
out
sub
rcr
add
icebp
cmp
rclb
cmp
mov
add
xchg
imul
rcrl
cmp
cmp
jnp
jb
gs
pushf
clc
mov
int3
call
push
je
add
iret
pop
ret
jg
loop
test
mov
dec
lret
xlat
push
pop
nop
shlb
pop
repz
repnz
mov
es
aas
adc
cmp
pop
adc
or
adc
dec
mov
xchg
in
dec
mov
push
jne
jl
cmp
pop
adc
and
or
pop
or
fldcw
push
dec
lods
pop
xor
cmp
loope
mov
add
iret
jne
push
es
fld
hlt
dec
cmpsl
xor
adc
push
jle
mov
repnz
xchg
pop
in
mov
cmpsl
ja
mov
lods
and
shr
lret
orb
pushf
and
sar
leave
adc
scas
dec
repz
mov
jle
cmp
loopne
jp
lahf
std
jb
jmpw
or
jmp
add
cmp
repz
mov
cmc
lods
push
add
adc
sar
mov
lret
cld
fidivl
movsb
xor
scas
movsl
stc
push
addr16
loope
or
in
jecxz
xor
cmc
enter
in
int
and
fmul
addb
sbb
outsb
mov
addl
icebp
dec
jmp
dec
mov
add
xchg
xchg
mov
mov
pop
stc
imul
jg
imul
sbb
push
shll
dec
addr16
clc
push
jno
sbb
sbb
add
test
fnsave
sub
scas
out
sbb
out
sti
lea
push
fistpl
push
lods
out
cmp
aas
or
addr16
jmp
mov
movl
cmp
in
leave
leave
fldl
and
add
xor
out
mov
ljmp
inc
es
ret
mul
jno
xlat
xchg
mov
in
ja
hlt
in
mov
cwtl
inc
in
out
decb
xchg
cmp
lods
mov
sar
outsl
rorb
and
imul
hlt
pusha
push
sub
push
add
js
jno
xor
fwait
stos
int
cmpsl
addb
mov
sahf
pop
pop
push
lods
inc
xor
pushf
in
in
test
test
scas
int
lea
sub
dec
jmp
int
stos
push
dec
movb
pop
enter
push
mov
inc
insl
add
nop
test
fs
scas
aam
mov
xor
xlat
dec
mov
jae
push
cltd
xchg
sahf
mov
call
orl
mov
loop
mov
jnp
es
dec
mov
cwtl
jb
push
cmpsl
mov
lcall
js
and
cmpsl
shlb
mov
push
inc
insl
pop
mov
out
push
inc
fidivs
sub
repz
push
adc
inc
fisubrs
lcall
inc
fsubr
fs
xor
js
inc
into
and
jmp
je
fldl
loop
pop
ret
sbb
shl
and
in
shll
adcb
ja
repnz
jp
mov
rcr
cwtl
adc
adc
dec
push
jb
mov
dec
xchg
xor
inc
addr16
call
int
cmp
or
shll
loopne
inc
mov
out
mov
outsb
jne,pn
clc
jb
or
stos
in
mov
add
test
add
in
xor
jo
lods
cmp
inc
mov
imul
xor
and
mov
ss
std
les
insb
pop
xlat
aam
std
shrl
fbld
fnstcw
or
cmp
in
push
test
xchg
andb
jp
movsb
fsubs
cli
outsl
pop
out
ljmp
cmpsb
or
repnz
aaa
add
push
imul
adcl
fwait
push
repz
sarl
leave
mul
testl
adc
ss
cmp
shlb
push
xchg
lret
fstps
int
mov
cmp
mov
pop
or
cmp
dec
ret
loop
fisubrl
sbb
shlb
outsl
xor
push
imul
ret
cmp
pop
ss
movsb
inc
js
push
sub
int3
sbb
ss
mov
iret
out
and
and
mov
test
push
mov
gs
cmp
cmpsb
sahf
or
push
bound
add
add
js
ret
push
sub
cmp
mov
jmp
negb
sti
rol
insl
shlb
test
scas
add
mov
testl
outsb
hlt
adc
cmp
aad
push
jmp
pop
mov
sub
adc
sub
insb
push
add
les
cwtl
cmc
mov
jne
bound
pusha
dec
jae
test
mov
xchg
or
orb
repz
rorb
aaa
ds
xor
push
jb
fdivr
and
mov
lret
jmp
mov
adc
xchg
mov
adc
mov
hlt
cmp
mov
stos
mov
in
arpl
gs
in
inc
xchg
out
xchg
into
mov
std
popa
xchg
cmp
cmp
xchg
lods
cli
cmp
into
lcall
popf
mov
and
arpl
jp
or
rcrb
jecxz
cmp
or
mov
pop
ds
rcrb
xchg
mov
add
sbb
mov
mov
and
pop
outsb
push
faddl
jne
lcall
mov
mov
stos
lahf
aad
and
pushf
fwait
xchg
push
bound
push
inc
cltd
sub
mov
jecxz
dec
adc
mov
iret
ret
mov
ss
jb
jle
sub
daa
repz
push
cli
jp
stos
out
adcl
sti
mov
adc
sahf
sub
ljmp
repnz
push
mov
lods
daa
addr16
cwtl
or
sti
rcll
out
popf
cwtl
mov
xchg
and
test
mov
insb
enter
and
mov
xor
cli
dec
adc
cmp
inc
test
movl
jae
lret
and
data16
xor
pop
push
jle
adc
or
test
mov
scas
inc
inc
adc
mov
or
clc
jge
jns
loopne
hlt
pop
mov
test
sti
adc
xchg
jne
pop
fldt
in
mov
jl
jl
pop
mov
add
addr16
jns
fwait
pop
mov
loopne
sti
cmp
loope
add
je
outsl
jns
fdivs
and
dec
mov
xchg
jp
mov
ja
sahf
mov
jmp
jle
aaa
loop
gs
cld
xchg
in
into
cmpsl
mov
cmp
push
mov
add
lods
pop
jl
push
mov
or
cmp
mov
push
out
std
leave
and
shrl
fildll
sub
xchg
add
in
js
dec
jb
popa
clc
jl
sub
test
mov
push
adcl
mov
mov
push
adc
lods
jns
mov
mov
and
mov
dec
fldenv
je
xor
mov
lret
push
mov
xor
jp
jp
push
int
icebp
push
inc
xchg
xor
push
ret
movsl
int
mov
xchg
mov
inc
in
adc
cmp
push
push
insl
push
mov
xchg
ret
jne
adc
aaa
and
push
insl
mov
aad
gs
mov
and
mov
push
fisubs
outsb
adc
call
int
mov
nop
inc
lock
lea
dec
mov
inc
and
inc
lret
mov
xchg
xor
add
mov
dec
fisttpll
mov
lock
stc
fs
jbe
mov
adc
jae
sbb
push
jne
adc
or
push
sbb
and
xor
loop
jp
mov
lahf
xlat
cwtl
sti
test
jmp
pop
cmp
cmp
jnp
jb
dec
push
imul
jge
lea
mov
add
pop
xor
data16
mov
mov
or
mov
mov
lds
xchg
out
shll
sub
lock
fnsave
adc
or
and
xchg
fstpl
pop
sahf
sbb
imul
mov
fsts
pop
insb
mov
mov
out
mov
jno
bound
rcrl
aas
mov
lcall
or
or
jmp
sub
testl
gs
std
int
adc
or
or
inc
outsb
inc
lds
cltd
jbe
add
pop
adc
mov
out
dec
test
cwtl
stos
push
sub
mov
xchg
lcall
mov
push
sub
dec
add
je
sub
lcall
mov
mov
or
ss
dec
popa
add
xor
in
test
sub
jbe
mov
adc
insb
shlb
mov
ja
je
push
push
dec
mov
jae
adc
cmp
xchg
dec
enter
add
xlat
mov
repnz
aam
push
adc
jb
jmp
cmp
cltd
xchg
cwtl
and
lock
mov
or
daa
push
cmp
stos
push
mov
sub
mov
sub
outsb
xor
cltd
lock
in
mov
test
mov
sbb
mov
pushl
cmp
fisubl
pop
adc
inc
mov
inc
lret
jb
xchg
push
ljmp
jp
jnp
icebp
imul
push
xchg
imul
hlt
dec
orl
xchg
xchg
push
ret
pop
repz
fldenv
mov
inc
push
dec
movsb
mov
or
test
inc
popa
mov
mov
dec
adc
lret
mov
xorb
movsl
repnz
adc
or
push
movb
mov
mov
push
inc
lds
inc
push
or
gs
pop
decl
sahf
inc
aam
sub
pop
lods
pushf
icebp
addl
stos
test
push
push
xor
jecxz
sbb
xchg
or
insl
sbb
rorl
mov
imul
movsb
xchg
dec
mov
xor
dec
mov
fbld
cmp
cli
push
stos
pop
xchg
pop
aaa
in
and
pop
dec
movsb
dec
in
sbb
decb
mov
mov
test
add
ljmp
rcrl
mov
jo
popf
sub
mov
push
lods
call
or
int
or
jb
pop
jne
inc
sub
fwait
imul
cmpsb
xchg
outsl
sub
ja
icebp
call
lods
cmp
cmpsb
jns
ja
dec
insb
pop
loop
mov
in
movsb
insb
fwait
push
nop
pushw
aad
cltd
adc
mov
mov
loop
outsb
lcall
ret
pop
dec
scas
ret
jb
or
xchg
in
jl
push
cmp
mov
add
jle
mul
into
mulb
bound
int
in
cmc
jle
sub
cli
jno
push
inc
mov
pop
inc
inc
stos
repz
push
jmp
hlt
div
jno
add
js
mov
lea
adc
mov
mov
loope
sub
mov
rcrl
popa
or
xchg
adc
mov
in
subl
int
mov
jp
jp
dec
aaa
sub
mov
add
push
add
pop
pop
add
mov
mov
xlat
xchg
and
es
int
push
nop
inc
fs
jmp
push
out
outsl
inc
cwtl
nop
mov
mov
les
das
mov
sub
iret
mov
test
out
out
add
daa
xchg
out
loopne
negl
cltd
and
lods
and
add
jecxz
inc
inc
add
addl
enter
loopne
stos
stc
add
push
bound
icebp
cmp
push
mov
pop
pop
sub
mov
lods
or
std
and
mov
push
mov
mov
mov
jge
pop
add
popa
adc
lahf
lret
inc
popa
ljmp
or
dec
lods
insb
add
mov
mov
and
ss
and
out
dec
pusha
xor
mov
ss
inc
jle
jbe
aaa
mov
popa
inc
dec
dec
jmp
xor
shlb
fcomip
inc
mov
xchg
mov
mov
rcll
dec
cmc
xor
sub
or
push
or
jg
repz
mov
inc
push
push
dec
stc
js
push
fsub
cmc
ret
adc
fbld
clc
fwait
pop
xor
xchg
jae
clc
push
ficompl
sti
sub
mov
and
sar
lret
jmp
xchg
jnp
push
hlt
add
sbb
icebp
mov
adc
sub
nop
dec
repnz
ds
and
into
rorb
push
es
inc
lods
push
mov
cmp
sbb
rolb
rcll
in
cli
sbb
add
cs
cltd
jmp
xor
ss
jle
jo
lock
sub
test
pop
or
ss
sub
ds
mov
cli
mov
add
incb
fcmovnbe
mov
and
out
cmp
fcompl
mov
jge
adc
cmp
cmp
ja
imul
dec
pop
or
nop
cmp
xlat
pusha
stc
mov
pop
ret
stos
and
rclb
add
inc
pop
cmp
cmp
loop
inc
fists
push
mov
pop
ret
jmp
sbb
sub
vcomisd
call
cmp
mov
addl
inc
rolb
icebp
add
roll
imul
inc
mov
add
xor
sub
mov
lock
cli
xor
in
pop
or
call
fnclex
sbb
out
xchg
sbb
dec
xor
cwtl
push
popa
shr
in
faddl
sub
cwtl
jae
push
in
jae
das
repnz
ficomps
sbb
adc
dec
sub
xor
or
push
cli
mov
cmp
xor
jo
mov
lds
push
xchg
les
ds
or
mov
push
push
dec
or
rep
mov
fstpt
push
pop
test
fisubs
pop
mov
bound
cmp
mov
clc
stos
xchg
ds
or
push
stc
cmpsl
add
xor
out
cmp
inc
popf
mov
xor
mov
sub
or
test
outsb
adc
xchg
sahf
shll
pop
aas
jae
jnp
adc
icebp
leave
adc
mov
inc
in
sub
mov
dec
pop
mov
adc
xor
in
aam
negb
loopne
insb
xor
push
mov
jmp
dec
xlat
into
into
mov
jae
mov
in
xchg
stos
leave
fidivl
pop
dec
inc
sbb
jns
inc
mull
insl
jo
insl
loope
add
aad
js
sub
iret
je
shlb
cmpsl
or
jg
push
aad
into
dec
test
cmp
out
fwait
push
push
jmp
je
adc
lcall
pop
pop
pop
lret
mov
push
lea
jp
mov
pushf
push
cmp
mov
pop
adc
lret
lds
adc
xor
lret
xor
es
mov
pop
mov
pop
push
jnp
mov
inc
aaa
test
int3
inc
add
arpl
add
aam
dec
ja
out
add
jmp
push
fldenv
fcmovu
jge
cmp
cmp
arpl
dec
sbbb
cli
fs
arpl
ss
push
dec
sbb
subb
test
mov
inc
lahf
loop
or
jnp
jb
les
cli
pop
inc
shll
fidivl
aad
pop
dec
push
addb
ss
addr16
outsb
lods
push
sbb
lds
jae
pushfw
fdivl
sbb
ljmp
mov
jp
mov
testb
popa
push
or
sti
mov
test
pop
in
ja
push
pop
test
add
mov
ficoms
fdivrl
xor
scas
fiaddl
lea
cmp
fs
dec
pop
mov
leave
push
icebp
pop
and
test
std
stos
or
xchg
pushf
out
lret
std
cmp
fs
decb
mov
inc
pop
ret
cmpsb
push
iret
mov
jbe
mov
mov
mov
xchg
mov
movl
hlt
lods
sub
mov
add
ss
add
cmp
adc
sub
jnp
adc
fldl
ja
sbb
std
cwtl
test
aad
insl
out
pushf
push
xchg
cltd
mov
cmp
cmovge
cld
xchg
das
push
adc
inc
mul
pop
gs
out
jmp
not
lcall
lock
dec
inc
fistps
mov
push
addr16
shlb
or
sbb
into
push
cmp
adc
cmp
aad
ss
stos
out
inc
jl
icebp
leave
xor
imul
mov
inc
jmp
pop
and
in
cmpsl
inc
pushf
in
test
arpl
sbb
cmpsl
pusha
cmp
add
aaa
mov
addr16
lea
out
or
mov
out
les
loop
sbb
pause
mov
jg
push
cmp
cli
add
cmp
lods
dec
mov
popa
add
jnp
rcrl
mov
jo
push
mov
mov
jae
and
jne
daa
xlat
mov
movsb
test
jns
dec
int3
std
add
loope
in
cs
mov
xlat
popa
gs
inc
jbe
icebp
adc
jo
push
or
mov
mov
xchg
scas
jp
sbbl
xor
mov
and
in
jge
push
pop
mov
stos
push
mov
lds
ja
pop
inc
push
or
repnz
repz
mov
mov
jo
pop
iret
mov
sub
sbb
pop
loope
mov
ret
incl
data16
repz
sub
aas
enter
cli
mov
jecxz
daa
cmpl
test
scas
nop
push
jae
out
in
insl
dec
and
sbb
mov
mov
xchg
popf
cmp
xchg
mov
das
hlt
inc
adc
outsl
xchg
in
adc
hlt
jo
aas
pop
add
sub
pusha
es
outsl
ja
push
jae
push
mov
aas
pop
push
cmc
mov
xor
sbb
fistl
jno
into
dec
fimull
xchg
jb
dec
fldenv
fdiv
sub
xchg
mov
pop
pop
sar
push
ror
dec
loopne
test
test
roll
mov
data16
or
sti
mov
and
popa
lock
xchg
cmp
lret
push
and
test
push
roll
mov
test
lds
cmp
xchg
je
mov
out
mov
outsl
mov
inc
mov
add
mov
push
push
cwtl
in
neg
stos
fs
dec
inc
add
xchg
sahf
mov
loopne
fimuls
and
shrl
xlat
push
pushf
xor
dec
mov
test
mov
sbb
cmc
stc
int3
adc
mov
xchg
cmp
dec
mov
out
mov
xor
inc
movsb
movsl
inc
mov
test
fsubrs
mov
movsl
cmp
push
fistps
lods
invd
xchg
subl
ror
insb
lods
mov
lods
sub
lahf
test
fdivl
mov
add
xor
daa
sub
xor
jmp
sub
cmp
add
nop
in
movsb
and
or
push
out
in
sahf
jne
mov
inc
leave
cmpsb
or
das
inc
pop
jne
jne
test
sub
push
insl
and
stc
aam
jbe
aam
lds
jo
push
outsb
sti
insb
out
add
nop
rcrb
adc
fs
fucomip
imul
dec
pop
cmp
mov
in
sbb
jecxz
cli
adc
and
mov
loop
das
or
push
mov
lret
pusha
jecxz
fisubl
daa
dec
mov
adc
add
into
xchg
xor
jne
scas
mov
cmpsb
cli
cld
in
out
mov
cmp
insl
ja
and
ret
clc
xchg
repz
cmp
mov
and
sbb
fisubl
mov
inc
imul
jl
add
xchg
imul
mov
inc
push
jp
adc
mov
cmc
gs
mov
xchg
lods
mov
shlb
daa
orb
sub
cltd
dec
push
popa
or
and
cmpsl
pop
adc
outsb
cmpb
inc
dec
and
inc
into
xorb
jg
pop
mov
jg
fdivs
cld
inc
sub
aad
sbb
jmp
aad
adc
dec
mov
fdivrs
cli
fcmovu
insl
mov
into
xor
sar
mov
popf
pop
inc
push
cmp
sub
cwtl
cmpsb
mov
xchg
daa
repz
inc
sti
jae
and
sub
sbb
repnz
outsl
pop
stos
jp
mov
sub
lret
into
sahf
mov
xlat
pop
sbb
mov
push
dec
pop
or
push
xorb
push
jnp
adc
cmp
push
stc
xchg
in
jecxz
imul
jmp
cli
loopne
push
pop
sbb
repz
mov
decl
and
and
jns
test
jmp
jmp
gs
mov
fidivs
insb
dec
add
int
mov
popf
cmpb
or
push
test
jno
xor
sti
ret
mov
in
and
out
rcrl
pop
push
fnstsw
notl
roll
sahf
cmc
and
push
xchg
leave
adc
adc
outsl
pop
sub
icebp
sbbb
xor
lock
xor
pop
xor
cmp
arpl
xor
pop
and
aaa
imull
orl
push
in
cltd
jmp
hlt
mov
mov
leave
xor
xor
or
cltd
pop
push
jle
pop
lock
ds
inc
sub
jg
inc
xchg
arpl
cmp
sbb
dec
adc
les
fs
movsb
js
xchg
pushf
cli
mov
push
sti
das
cmp
mov
dec
mov
movsl
lods
pop
ret
xor
lods
in
jl
rcrb
lods
test
ret
jb
adc
inc
es
dec
mov
shr
xor
lea
mov
add
in
add
loopne
clc
je
mov
add
mov
std
push
sub
pop
outsl
les
fcoml
push
stc
and
cmp
data16
enter
adc
and
ss
sbb
mov
mov
cmp
in
mov
leave
test
out
jae
xor
dec
pop
mov
and
sarb
xor
and
cmpsl
aas
inc
test
pop
imul
pushf
das
jmp
xor
cmp
inc
shl
in
add
outsl
mov
ja
xor
out
cmp
das
pushf
clc
hlt
sub
fdivrs
cwtl
in
ss
fiadds
inc
es
inc
inc
cld
xor
fmul
mov
shlb
push
adc
nop
mov
mov
jecxz
add
jae
inc
inc
xor
sbb
pusha
push
mov
inc
out
out
jbe
cwtl
jl
push
sub
add
shlb
repz
and
fisttpll
icebp
xchg
loop
pop
clc
and
cwtl
cmc
insl
jg
adc
inc
hlt
sbb
mov
rorl
xchg
cmp
mov
xchg
fdivr
inc
fcoms
push
jno
idivb
pop
loop
mov
sbb
stc
sbb
adc
hlt
out
push
sbb
mov
int
mov
xchg
popa
inc
push
sbb
cmpsl
xchg
add
xor
loopne
hlt
arpl
test
rolb
jae
inc
push
or
dec
adc
mov
sub
sub
imul
pop
cli
sub
and
das
jecxz
movsl
movl
imul
xor
insl
divl
lock
mov
xchg
xchg
cld
or
or
jb
push
adc
mov
dec
imul
mov
je
aas
pop
mov
ljmp
popf
pop
xchg
out
into
pop
dec
sub
fs
das
push
sti
rcll
aam
dec
pop
cwtl
dec
and
xor
pop
roll
sub
icebp
push
lods
or
add
sub
cmc
cmp
leave
inc
pop
cwtl
mov
imul
into
bound
insb
fisubl
xchg
and
test
sbb
sub
push
sbb
cmpsb
pop
push
dec
movhps
xor
lret
int3
shrb
push
dec
inc
gs
scas
int
add
cld
scas
fdivrp
int
test
mov
push
ds
or
rolb
ja
pop
cld
add
push
dec
pop
pop
dec
notb
pop
aam
mov
stos
mov
adc
add
sbb
or
inc
xchg
imul
adc
psubsw
cmp
pop
aas
pop
arpl
in
and
mov
ror
push
xchg
out
push
fisttpll
mov
jl
movsb
adc
mov
cli
cwtl
mov
lea
mov
or
insl
addl
mov
les
inc
icebp
or
test
mov
stc
in
pop
out
mov
sub
or
sti
rcrl
ljmp
jbe
sub
and
adc
or
sbb
adc
jb
or
ret
xchg
mov
xlat
dec
mov
xchg
movsl
ret
lret
and
pop
xchg
sub
ja
cmp
fninit
push
add
popf
xlat
dec
xchg
mov
es
xchg
orb
push
stos
aad
xchg
dec
cwtl
mov
inc
xchg
jnp
sub
inc
or
inc
xchg
iret
cmc
popf
sub
int
adc
fcom
mov
pop
lcall
ret
inc
ljmp
movsb
inc
dec
in
sbb
mov
xchg
std
popf
xorps
pop
mov
cmp
daa
mov
push
loopne
fsubl
dec
pushf
xor
fdivr
sbb
mov
ror
or
push
adc
pop
pop
pop
icebp
or
sub
dec
cltd
cmc
mov
loopne
jl
frstor
std
inc
lret
ss
or
push
out
jno
mov
fisttps
in
push
mov
shrl
mov
lahf
std
push
pop
repnz
add
add
roll
inc
outsb
popf
dec
cs
and
lret
inc
sbb
cld
call
push
pop
jge
push
les
mov
icebp
cmp
pop
xlat
dec
pop
call
lds
test
adc
mulb
adc
xor
push
movhps
dec
push
or
or
mov
sbb
mov
mov
pop
dec
sub
inc
push
dec
push
scas
loopne
push
adc
incb
jecxz
and
mov
sbb
mov
jo
outsb
stos
setbe
js
add
data16
mov
iret
lret
sti
pusha
sub
add
sbb
insb
push
pop
iret
xchg
pop
repz
pop
sbb
push
mov
out
add
xor
movl
cmp
push
sub
pop
cwtl
xchg
ja
dec
pop
scas
mov
in
mov
les
pop
cmp
xorl
sbb
cmp
cld
mov
cltd
jle
jmp
jo
pushf
movl
popf
outsb
idivl
xchg
xchg
in
cmpsb
js
push
out
xchg
repz
cltd
push
stc
sub
jno
mov
pop
sarl
xchg
mov
fcoms
cmpsl
xlat
push
lods
jle
lock
adc
arpl
and
test
xchg
xchg
aam
aam
fldt
xor
mov
cmp
push
rol
lret
and
mov
ds
fs
adcb
xchg
jecxz
sbbl
je
dec
adc
and
scas
popf
and
and
push
stos
pushl
lret
dec
int3
pop
testl
and
cmp
ss
mov
mov
xchg
test
scas
xchg
test
xorb
add
movsb
fwait
popa
sbbb
sub
pop
or
les
mov
dec
jbe
adc
fsubrs
sub
and
test
les
sarb
mov
lahf
or
stc
or
mov
jno
scas
shrb
mov
ds
bound
mov
mov
loope
xor
pop
adc
jnp
and
jnp,pt
fistpll
mov
pop
gs
pop
ds
mov
xchg
push
push
pop
xlat
cmp
jns
les
je
je
mov
or
popa
ds
loopne
dec
and
cmp
lea
stc
cmp
cltd
mov
adc
push
xchg
outsb
hlt
add
test
xor
mov
aaa
les
sbb
clc
push
push
dec
pop
jecxz
push
dec
jmp
dec
adc
cmp
lods
mov
loop
lahf
mov
mov
cmp
cmp
add
cmp
arpl
jecxz
push
sbbl
ja
cmpb
jno
cmc
cs
inc
ret
ret
add
mov
pusha
jl
xor
fldcw
mov
fwait
dec
sub
or
jge
add
mov
mov
mov
mov
testb
mov
mov
mov
dec
scas
out
ret
or
test
mov
movsl
push
inc
xchg
pop
push
mov
pop
cmp
jmp
add
cltd
and
imul
repnz
out
inc
jecxz
mov
adc
push
repnz
mov
stos
stos
mov
pop
rol
jl
or
cmp
push
jo
cmp
sbb
mov
subb
into
xor
cmp
push
cld
test
lahf
mov
cmc
add
push
pop
and
pop
fiadds
icebp
mov
pop
sbb
cli
cmp
fadds
cwtl
lods
jne
mov
jp
fs
aaa
call
dec
cmpsl
mov
cmp
sahf
jbe
dec
fsts
shl
jne
or
fisubrl
sbb
sbb
jmp
sbb
pop
divb
stos
mov
incb
add
test
movsl
paddq
roll
sahf
push
or
test
fsubrp
lcall
pop
ja
mov
inc
gs
push
cmpsb
mov
and
stos
fldenv
xchg
bound
mov
dec
stos
jb
ficomps
std
push
bound
lods
in
hlt
mov
jns
in
je
xchg
mov
mov
int3
cli
pusha
sub
sar
stc
out
movsb
imul
ja
movsb
mov
std
cli
fs
je
std
xchg
cli
mov
and
or
ss
cmp
push
push
push
mov
xor
test
adc
dec
fs
or
push
adc
pop
xor
mov
mov
bound
or
mov
jns
jae
ss
divl
ret
add
pop
js
xchg
insb
mov
push
shld
sahf
loop
jnp
jge
cmc
aad
push
sub
rcr
in
xor
lcall
test
cltd
sbb
mov
loope
mov
pop
xor
cmpsl
add
push
sti
fisttps
fsubrs
into
fdivs
lods
fnsave
cmp
out
fmulp
pop
ljmp
xlat
xor
mov
pop
cmp
mov
ret
xchg
sbb
push
mov
in
fisubrs
rcr
pop
inc
scas
cmp
in
lock
cmp
fbstp
out
in
inc
jae
xor
popa
pop
or
gs
jb
out
cmp
mov
bound
lcall
imul
pmaxsw
jns
lds
mov
mov
repz
mov
sbb
sbb
inc
fs
xorb
mov
mov
test
mov
outsb
mov
sub
push
and
sahf
mov
insb
or
push
mov
rorl
adc
fistpl
sarl
icebp
imul
xchg
stos
xchg
jg
xor
or
jo
movsb
lods
mov
ret
mov
sti
mov
ficompl
push
push
sbb
cmc
jp
int3
xchg
ret
sahf
stos
pop
dec
outsl
sub
jns
loope
add
cmp
jmp
les
mov
fstpl
jo
or
addr16
lret
or
int
xor
js
jmp
mov
cltd
pop
jnp
cwtl
mov
cltd
or
cmc
sti
push
cmpsb
cmp
xor
test
sahf
cmpsb
movsb
dec
sub
inc
and
jmp
pop
mov
hlt
sahf
dec
stos
dec
mov
leave
mov
pop
or
mov
cmp
cli
dec
hlt
xor
mov
dec
lea
inc
ja
jno
xchg
ret
in
dec
fwait
sub
and
lret
in
hlt
mov
mov
mov
rorb
jbe
clc
add
bound
loop
rcr
nop
fiaddl
insl
call
out
jl
stc
sbb
mov
xlat
popf
xchg
add
jge
push
dec
dec
adc
inc
or
adc
cmpsb
cmc
imul
jno
dec
or
insb
jle
and
pop
fistpl
stc
mov
shl
xor
daa
hlt
sbb
shll
or
rcl
test
push
aaa
outsb
pop
sbb
jecxz
add
movsl
les
cwtl
sub
andb
dec
cmp
js
push
or
aam
out
xor
hlt
mov
inc
in
pop
xorl
lret
sbb
pop
xorb
hlt
jnp
and
imul
jp
sti
push
lds
loopne
out
pop
imull
push
add
cltd
or
xchg
add
sbb
iret
or
fists
sahf
loop
add
fwait
sbb
leave
lahf
fsubs
jo
push
out
jo
cmp
icebp
push
push
movd
inc
enter
push
inc
and
enter
jbe
test
xlat
sahf
or
mov
orb
pop
dec
and
notl
sbb
mov
jno
lcall
inc
enter
adc
out
mull
cmpsb
stc
add
fistps
xlat
call
jl
cld
movsb
add
in
xor
xchg
push
fidivrs
in
loopne
popf
pop
data16
stos
push
xor
cmp
bswap
inc
mov
clc
adc
fs
inc
pop
push
stos
dec
out
and
cmp
mov
sbb
data16
imul
shlb
lds
lahf
insl
int
jne
mov
jle
ret
sbb
mov
mov
jo
pusha
jnp
adc
add
jns
jo
inc
mov
sub
fbstp
inc
aaa
mov
pop
jb
xchg
int3
in
fwait
iret
cld
arpl
xor
sti
add
cmp
mov
outsl
push
aad
pop
inc
mov
sbb
fwait
push
out
sti
sub
sbb
dec
xlat
xchg
imul
or
pop
inc
popa
jo
inc
or
lods
mov
test
mov
pop
cmp
cmp
fisubrl
mov
shll
popaw
xchg
fsubrl
mov
out
test
mov
xor
sub
shl
lret
popa
jns
clc
ja
int
pop
cltd
repz
lret
fistpl
jmp
dec
mov
or
mov
inc
push
xchg
jge
xchg
jae
inc
adc
fcmovne
mov
sbb
lcall
sarl
bound
lds
test
lock
jno
or
fwait
int3
mov
push
add
call
pop
enter
jg
lcall
cld
xor
filds
xor
movsb
adcb
cmpsl
and
xchg
push
add
mov
loopne
inc
cmp
mov
add
cmp
gs
push
popf
daa
and
test
rcrl
ret
mov
lds
and
cmpsb
je
jecxz
hlt
arpl
loopne
mov
fdiv
mov
test
jbe
cmp
mov
pop
and
or
in
scas
hlt
outsb
out
pop
insl
mov
in
ja
decl
bnd
add
aam
jg
add
mov
aas
xchg
aaa
push
out
iret
inc
ss
jns
in
insl
fisttpll
shll
aaa
jnp
dec
ds
adc
mov
adc
dec
cmp
cwtl
push
test
push
call
rclb
hlt
fsub
rorb
jb
mov
rorb
aad
or
pop
aam
iret
push
lea
test
pop
pop
xchg
call
push
sbb
addr16
arpl
and
xchg
inc
push
push
ss
xchg
push
scas
shlb
imul
es
dec
movb
jne
mov
cmp
jg
push
inc
inc
mov
mov
scas
jne
inc
sub
pop
inc
and
fsubl
push
pop
stos
cld
dec
dec
and
sub
jg
push
xor
aam
add
lds
xchg
das
and
mov
in
inc
jne
push
adc
mov
mov
sbb
xchg
ret
sbb
repz
cmp
int3
std
imul
icebp
mov
xchg
pop
rcrb
test
mov
cs
scas
mov
sub
in
mov
aaa
push
push
push
mov
push
or
daa
rcll
jo
insb
std
inc
inc
js
sub
inc
add
insl
ljmp
bound
xchg
pop
mov
adc
or
insb
cmp
iret
mov
enter
cmc
das
ret
jp
test
daa
lods
std
or
lea
call
jp
push
in
cmpb
sbb
out
add
mov
test
scas
mov
pop
dec
clc
ret
sub
cmp
jl
push
fists
fsubr
in
in
popa
mull
repnz
xchg
add
push
dec
add
sbb
xchg
stos
in
xchg
xchg
lcall
fmull
cld
mov
jmp
dec
sub
mov
aas
xchg
out
dec
dec
mov
cmpb
cmp
test
andl
fwait
and
out
sub
outsb
cltd
jge
sar
xchg
mov
jp
call
rol
xchg
inc
test
adc
jae
loope
adc
out
jmp
jno,pn
dec
adc
dec
lret
add
sbb
mulb
ljmp
sub
sti
push
mov
ficoms
jb
pushf
jb
imul
push
arpl
and
scas
adc
sub
mov
mov
pop
jmp
and
pop
aaa
xchg
jp
push
add
call
in
sbb
mov
int
cmp
into
fidivl
mov
in
outsl
xor
jecxz
test
jl
aas
or
sub
push
idivb
xor
sub
xor
sub
xchg
jmp
call
mov
mov
movsl
arpl
sub
aam
jle
and
leave
lods
fimull
mov
fcompl
ret
pop
push
ljmp
mov
loope
xchg
insl
mov
lds
pop
jge
xor
decl
iret
out
xor
push
or
mov
sbb
cmp
pop
xor
fnstsw
dec
xchg
push
adc
mov
ja
xchg
outsl
jne
mov
dec
popa
inc
pop
push
repnz
mov
movsl
movsb
imull
ret
fldt
pop
dec
loopne
shr
jg
aam
mov
pop
jnp
jo
test
outsl
push
in
mov
and
cs
fidivl
lods
xor
out
xchg
adc
in
push
xor
adcb
ret
push
jp
mov
bound
pop
mov
push
or
jl
push
adc
push
dec
fmulp
push
mov
call
lods
mov
loopne,pt
movsl
cmp
cs
test
lock
xchg
lods
sarl
int3
mov
mov
mov
jns
push
rcrl
lock
mov
jmp
add
mov
nop
out
jo
das
sub
pop
xchg
mov
popa
mov
jmp
xchg
inc
jne
in
jne
cld
jmp
sub
cli
xor
rcrb
rcrl
push
adc
push
xor
pop
lods
mov
jae
ret
cmpsb
xor
mov
pop
mov
fisubs
push
mov
pop
lea
and
mov
pop
scas
xchg
or
rolb
xchg
aas
pop
out
adc
and
lods
mov
stos
jge
xor
xchg
int
lret
out
pushf
data16
clc
adc
xor
dec
sub
add
push
add
adc
scas
shrl
and
addl
push
mov
aas
aaa
or
cltd
fwait
repnz
out
or
lcall
xlat
push
cmc
clc
aam
or
jmp
shlb
xor
fistl
jl
out
sarb
je
mov
scas
add
push
xor
sbb
cmpl
push
fwait
lret
lea
mov
xchg
adc
sub
std
scas
cli
pop
shll
sti
mov
outsl
mov
inc
jnp
mov
sub
jp
add
pop
aas
out
orl
dec
lea
sar
std
aam
cmpsl
iret
pop
jb
ljmp
mov
js
push
lret
sbb
add
lods
ss
mov
iret
push
mov
subl
or
add
fisttpll
cmp
les
test
and
pop
rolb
ficoms
mov
hlt
jmp
mov
stc
xchg
in
lods
add
test
dec
cltd
dec
adc
xor
and
test
in
add
pop
push
fucomp
inc
in
mov
fwait
movsb
sbb
or
test
shlb
popa
add
add
push
data16
pop
sub
int
ret
test
mov
push
pop
pop
das
in
push
dec
sub
sbb
insb
popf
repz
jmp
stc
xor
xor
inc
aas
rclb
xchg
mov
out
adc
lea
subb
in
pushf
xchg
hlt
mov
in
leave
scas
cmp
push
sbb
js
sbb
outsb
xor
mov
scas
pusha
sub
sbb
xor
mov
fidivrs
jno
lock
popf
mov
sbb
jp
rorl
jns
lcall
out
sahf
lret
sub
or
bound
out
mov
jmp
mov
sbb
das
jecxz
cwtl
and
mov
das
iret
sub
div
adc
mov
jb
push
movsb
stc
scas
addb
test
inc
add
rorl
add
and
aas
dec
imul
cmc
aad
divb
pushf
jmp
mov
call
daa
xor
sbb
push
scas
loopne
stos
clc
inc
lret
sbb
dec
and
outsl
xchg
dec
rcr
or
cli
adc
in
add
aam
cld
stos
inc
js
cmpsl
inc
jae
adcl
mov
sti
jmp
jnp
cmp
gs
adc
xchg
pop
lcall
xchg
cmp
call
inc
xchg
insb
fwait
or
mov
addl
arpl
xchg
xchg
fstpl
dec
and
ljmp
mov
dec
shr
push
cmc
lods
out
fsubrs
cmp
xor
jo
sahf
clc
int3
xor
repz
push
mov
scas
les
xchg
cmc
hlt
cmpb
dec
xchg
mov
push
into
push
mov
mov
sub
nop
daa
sbb
pusha
imul
jge
dec
sub
out
cmp
sub
nop
xorb
fldt
pop
jne
xchg
iret
cmp
mov
stos
inc
add
pop
cmp
and
and
adc
mov
add
sbb
pop
mov
std
xchg
inc
popa
xchg
mov
hlt
and
sbb
test
insl
push
pop
rcrl
jne
xor
xchg
cmpsb
jns
lcall
jae
sarl
jle
and
dec
out
push
mov
xchg
dec
or
cmpsl
mov
stos
mov
insb
and
std
xchg
push
je
sbb
shlb
pop
insb
pop
push
pop
jns
out
out
push
push
adc
and
cmpsl
adc
out
or
sub
cmp
push
movsl
mov
lahf
xchg
jge
shrl
outsb
popf
push
data16
les
aad
jle
dec
repz
push
push
add
and
test
rcrl
sar
aas
in
or
cli
popf
ss
popf
int
jmp
mov
mov
cli
iret
xor
and
sbb
jb
add
aam
or
mov
mov
inc
and
mov
dec
inc
xor
jle
mulb
dec
or
lock
imul
dec
inc
sarb
aas
aas
shrb
fabs
leave
idiv
pop
in
sub
arpl
stos
sbb
mov
cmp
popf
push
push
scas
mov
adc
fcmovnbe
mov
push
mov
xchg
movsb
mov
mov
sbb
mov
movl
lods
repz
jb
lahf
test
push
subb
outsb
sbbb
xor
outsl
pop
lret
aad
xor
mov
mov
lods
js
and
insb
je
jo
scas
xchg
movsb
push
rcrb
cmpl
inc
mov
xor
mov
fsts
fwait
or
mov
cmpl
add
push
inc
scas
dec
sub
inc
inc
push
inc
rorl
test
clc
or
ret
mov
fbld
in
dec
test
aam
gs
and
mov
mov
test
jg
lret
stc
cmpsb
xor
xchg
mov
xor
scas
sbb
jp
call
push
pop
cmpsb
dec
push
mov
lahf
and
scas
jg
fsubs
call
xchg
in
test
dec
sbb
cmp
dec
popa
jecxz
sbb
test
mov
sti
out
movsl
xchg
lock
arpl
sub
push
cmp
in
popa
shll
lock
inc
xor
xorb
mov
daa
js
lahf
ret
sub
push
xchg
mov
jbe
hlt
jl
add
push
popa
ss
sbb
pop
xchg
test
inc
cmp
aaa
outsb
xor
cltd
int3
pop
movsb
stc
and
ljmp
and
push
arpl
sar
fistpll
xor
insb
icebp
xlat
pop
mov
push
mov
int3
out
int3
insb
xchg
adc
add
call
xor
outsb
inc
fildl
test
fstpl
mov
jmp
mov
ret
inc
fwait
push
std
and
test
fistpll
adc
dec
and
loop
push
xor
mov
in
fs
mov
and
icebp
mov
xorl
cwtl
outsl
xor
push
inc
xchg
pop
sub
and
call
push
pop
jg
and
rorl
dec
int
flds
add
mov
sahf
xorl
dec
jmp
orb
fnstenv
mov
cmc
push
dec
sbb
ret
pop
dec
xor
lret
ja
push
add
push
dec
lock
fidivs
frstor
aam
lock
inc
inc
or
mov
lock
int3
push
scas
jecxz
fwait
xchg
ljmp
cltd
and
pop
xchg
inc
cwtd
pop
jns
inc
in
daa
mov
mov
or
mov
jp
popa
lock
push
add
aas
repnz
push
aam
add
sbb
int3
outsb
pop
pop
jb
xchg
ss
mov
xchg
repnz
in
in
ss
jo
pop
jo
push
mov
lods
aad
ret
loopne
les
mov
mov
add
cs
mov
repz
mov
add
stc
push
xor
mov
stos
scas
mov
inc
sbb
ljmp
sbb
andb
loopne
xor
push
subb
pushf
fsubs
in
sub
pop
into
pop
dec
lock
lret
fs
mov
xor
negb
xchg
mov
xchg
inc
xchg
push
outsl
pushf
xor
jge
inc
mov
add
pop
inc
loop
xchg
fsubr
mov
pop
mov
cltd
stc
sub
push
xchg
mov
mov
stos
sbbl
or
and
mov
jmp
out
jae
js
sub
mov
scas
dec
aam
out
mov
lcall
test
fdivrl
mov
xchg
jb
mov
xor
stc
and
mov
xchg
xchg
dec
addb
jb
std
std
imul
out
shrb
inc
xor
lcall
mov
es
jae
mov
and
mov
fidivs
sub
enter
inc
jns
xchg
fdivr
loope
sub
jmp
xor
cmc
xchg
mov
int
fdivl
shlb
add
and
loop
jae
ret
mov
or
fs
lret
sbb
imul
xchg
mov
jbe
mov
movsb
add
lcall
loope
fidivs
cli
xor
shrb
mov
and
out
stc
push
mov
pusha
mov
insb
pop
das
mov
ret
xlat
pop
bound
pop
dec
mulb
adc
xchg
mov
add
lods
or
adc
jmp
iret
jbe
dec
pop
pop
mov
pop
and
jmp
jg
or
cmp
cmc
add
push
je
inc
stc
add
in
add
das
popf
add
hlt
mov
cmp
mov
xchg
or
adc
mov
out
xchg
dec
mov
out
andb
sbb
push
std
movsb
test
out
cmpsb
test
lock
pop
setne
jg
jo
fnstcw
pop
adcl
les
jbe
pop
push
sub
or
and
stc
inc
sbb
dec
sub
cmp
xor
inc
mov
js
ret
scas
push
fiadds
or
mov
adc
cmc
pushf
ret
dec
pop
addr16
add
mov
outsb
and
inc
xchg
mov
xchg
int
nop
push
hlt
sbb
movsb
mov
lahf
cmp
add
push
add
xchg
sti
pop
mov
xor
ja
push
or
lds
push
cmp
in
sarb
mov
jl
jmp
js
test
sub
push
test
xor
mov
mov
lea
popf
mov
jbe
mov
push
sarb
push
pop
das
push
in
cmpsb
cmp
adc
jle
ljmp
stos
test
enter
push
pop
push
pop
mov
fdivrl
inc
aad
mov
cmc
ljmp
cmp
je
sub
loop
stc
insl
push
mov
cmp
jae
dec
test
push
das
pop
sbb
cld
cmpsl
fsts
xor
sbb
adc
fistl
cld
inc
sub
jle
outsb
cld
push
inc
aam
mov
sbb
cmp
fucom
mov
test
jae
adc
adc
jae
or
je
gs
xchg
xorl
jmp
mov
cmp
mov
ds
dec
mov
sub
cli
sbb
sti
stos
jo
idivb
rcrl
ret
and
xchg
xor
test
cmpsb
in
mov
je
jo
jl
dec
add
mov
xchg
lcall
xchg
and
stc
mov
hlt
add
popf
cmp
repnz
repnz
xchg
sbb
or
cmp
imul
je
lods
outsl
sub
les
push
sub
icebp
push
inc
in
bnd
cmp
cmpb
mov
fstpl
aam
mov
inc
sbb
pop
and
add
stc
sub
add
pusha
andb
mov
addr16
xchg
shlb
pop
ja
rcl
adc
maskmovq
aaa
mov
mov
pop
xor
pop
push
jo
hlt
rol
test
jg
sub
ret
out
frstor
fistl
sub
xchg
jecxz
loop
sub
and
aaa
fisttps
out
cmpsb
and
movsb
inc
icebp
bound
add
adc
adc
shll
add
push
inc
mov
or
sbb
mov
dec
je
loope
xor
nop
push
jge
test
and
adc
push
xor
mov
sbb
jmp
jmp
jecxz
lods
sub
and
jl
pop
ffree
test
and
mov
movsb
add
ret
fists
add
jmp
adc
cmp
in
mov
lods
xlat
inc
or
push
es
or
add
cld
mov
inc
shl
add
push
orl
add
dec
out
xchg
stos
cmp
xchg
popa
lods
ss
in
mov
cs
pop
sub
icebp
jo
jmp
mov
jecxz
cltd
xor
dec
push
and
add
mov
into
rdmsr
repz
int
mov
shrb
xor
pop
mov
push
add
pop
jae
adc
into
xor
pop
adc
xchg
cmc
and
es
mov
mulb
ljmp
mov
mov
add
mov
mov
push
daa
popa
out
lret
jl
or
xor
sbb
or
fwait
mov
sbb
inc
in
iret
xchg
andl
and
mov
adc
push
add
pusha
das
ds
xchg
das
and
fcmovu
arpl
fisttpl
fimull
repz
mov
and
pop
mov
fistps
add
mov
arpl
mov
jns
sub
add
fadd
push
cli
fnstsw
pusha
nop
pop
aaa
add
cmp
push
push
loopne
jne
mov
dec
or
mov
out
stc
inc
cwtl
push
cmp
sti
clc
nop
cmp
js
call
bound
jmp
repnz
aam
fstp
cmc
data16
mov
xor
push
orb
cmpsl
ds
mov
addr16
test
adc
sub
mov
adc
sbb
dec
clc
adc
mov
enter
sbb
dec
cmp
mov
inc
loope
pop
jb
sub
and
popa
add
fisttpll
fdiv
repz
and
aas
jns
adc
in
cmpsl
jno
pop
jns
imull
out
stc
push
pop
push
insl
and
push
and
int
or
mov
and
fidivl
stos
aam
inc
dec
ret
sbb
lcall
aam
fidivl
mov
mov
movsl
add
inc
aad
inc
jno
fsubrs
xchg
dec
roll
push
jbe
movsb
adc
fcoml
and
mov
pop
inc
aas
pop
mov
mov
fildll
loope
pop
imul
out
repnz
inc
leave
pusha
cmpsl
mov
fmull
xchg
cmp
or
dec
jmp
ds
std
pop
mov
push
xor
xor
xor
lea
add
fwait
inc
out
sahf
repnz
push
xchg
jno
rorl
pusha
sub
cmp
leave
cmp
adc
xchg
and
cmpsl
leave
and
mov
std
test
sub
push
shrb
test
inc
ss
mov
xchg
dec
les
fcomps
outsb
es
sub
les
or
jnp
or
fsubl
test
jecxz
cwtl
adc
push
dec
inc
cmp
pop
sbb
push
idivb
jnp
cmc
cli
push
sbb
add
sbb
push
mov
clc
les
sub
push
std
outsl
loop
sub
sbb
mov
roll
cld
pop
pop
adc
fadd
hlt
cld
and
or
sbb
std
lea
imul
imul
aaa
leave
xchg
xor
dec
cmp
sbb
jb
add
xchg
or
arpl
std
int3
jno
loop
adc
cmp
fnstenv
inc
xchg
mov
sub
daa
divl
in
or
xchg
add
adc
sbb
jo
mov
lret
mov
xor
ret
aad
push
into
stos
jns
cmp
shl
push
sub
ficoml
xor
or
stos
in
push
fistpll
mov
pop
int
xor
mov
addr16
sahf
mov
sarb
and
push
loop
lds
pop
lret
ljmp
les
fimull
inc
std
mov
xchg
jbe
or
sub
dec
jp
fsub
cmp
icebp
mov
aas
das
gs
cmp
pop
pusha
popf
loopne
jg
adc
inc
rcrl
call
out
loopne
in
dec
gs
add
xor
fcoms
mov
mov
sti
das
prefetch
or
ret
lds
pop
sahf
mov
push
xor
outsb
subb
in
fistps
repz
mulb
mov
add
cmp
mov
push
out
outsb
ret
pop
fs
adc
jbe
sbb
popf
jecxz
je
jno
mov
dec
pop
dec
pushf
mov
fildll
jb
inc
out
je
loop
inc
mov
in
cmpsl
popf
stos
pop
xor
xor
call
or
fdivs
cmpsl
sub
jns
push
mov
fistps
mov
jmp
cmp
push
pop
xlat
pushf
fisubl
jnp
xchg
xor
dec
dec
fsubr
popf
mov
push
lea
in
pop
or
mov
aas
fs
add
fs
cs
cmpsl
xchg
loopne
dec
inc
js
fdivrl
pop
push
pushf
lcall
or
jb
clc
xchg
loop
roll
adc
jmp
mov
inc
loope
rcl
mov
jnp
adc
push
test
fldt
dec
mov
std
dec
jg
mov
xchg
dec
in
adc
xor
pusha
insb
cmpsb
pop
cli
mov
cltd
jmp
mov
dec
sub
pushf
xchg
imul
mov
loope
cmpl
mov
aas
jne
adc
jb
xorb
sbbl
loop
or
or
ja
dec
push
data16
ljmp
popa
mov
xor
or
xor
add
cld
push
xlat
das
jno
pop
pushf
pop
enter
dec
loopne
cmp
and
subb
sub
cmc
insb
fdivrs
sub
sbb
pop
cmpsl
push
sub
in
outsb
mov
test
jge
and
dec
sbb
data16
lahf
bound
cmp
testl
pop
pushf
loope
ficomps
sub
out
andb
scas
mov
movsl
xor
aad
orl
cmp
dec
push
adc
jbe
pop
xchg
push
and
and
push
mov
sub
fs
repz
pusha
mov
jle
sti
sahf
popf
ljmp
pop
xorl
pushf
cld
pushf
or
movb
cmpsb
sarb
in
popa
mov
into
mov
hlt
or
ss
push
push
add
aaa
and
cli
push
jp
mov
dec
insl
outsb
add
sbb
out
or
daa
xor
xchg
incl
leave
lock
loop
dec
gs
push
and
cmp
mov
movsl
add
scas
mov
clc
push
enter
inc
add
inc
mov
fnstcw
mov
jmp
xor
lea
mov
and
sbb
arpl
ficompl
cwtl
stos
and
add
popl
and
cmp
jnp
fwait
pusha
lods
sbb
data16
pop
add
xor
lret
jmp
sub
pop
or
bound
jmp
pushl
movsb
test
cs
adcl
mov
repz
push
stos
leave
xor
pop
mov
mov
jmp
xchg
adc
xchg
xchg
call
cmp
push
imul
push
adc
xor
repnz
xor
pop
popa
sbb
mov
mov
push
mov
xchg
inc
loope
adc
sbb
pop
rorb
pop
add
imul
movsl
jo
or
cmp
and
adc
cmp
mov
and
sub
jecxz
arpl
jmp
sub
fstpl
or
or
ds
sbb
and
dec
xchg
adc
mov
into
jnp
jle
in
dec
ds
dec
movsb
scas
mov
lret
popf
sub
sahf
jnp
ljmp
xchg
int
cmpsl
mov
sub
stc
dec
push
mov
push
sbb
out
xchg
and
ret
aad
sub
dec
cmp
xor
in
pop
or
leave
rclb
rcll
subb
push
jnp
sbb
add
lods
hlt
test
inc
cmp
cmpsb
jecxz
xor
sarb
sbb
mov
mov
xchg
pop
les
or
pop
adc
aam
and
mov
sub
xchg
bound
bnd
push
imull
cltd
jno
dec
or
sbbb
xor
add
sbb
push
push
movsl
lea
pop
ds
jle
xorl
fsubrs
xlat
sbb
cli
ja
sub
lods
or
int3
push
enter
sub
or
lods
popf
jmp
andb
mov
push
jo
outsl
mov
mov
adcl
dec
pushf
roll
jno
pop
push
xor
xor
inc
ret
inc
mov
mov
adc
rcll
mov
dec
adc
xor
loopne
inc
iret
cwtl
jo
jp
and
stc
popa
xor
js
aad
pop
pop
mov
inc
fstl
xchg
loope
sub
pop
iret
rcr
lahf
icebp
pop
fwait
lret
mov
in
add
movsb
jbe
loop
lock
pop
je
mov
lods
nop
push
ja
mov
in
add
mov
data16
mov
mov
xor
sub
push
repnz
xor
loopne
xor
pop
in
and
or
cmp
xchg
xor
aaa
mov
mov
push
sub
lods
aas
psubsb
fnstsw
or
test
fmull
call
cmpsl
pop
adc
xor
gs
loop
test
push
mov
lahf
lock
into
cli
in
cli
loope
imul
inc
inc
mov
and
fistpll
push
jl
xor
adc
push
outsb
pop
mov
mov
test
stos
cmc
ljmp
and
xchg
lods
mov
sahf
sub
mov
inc
sbb
movsb
lcall
mov
and
mov
outsb
inc
adc
jecxz
cmp
cmp
push
mov
imul
add
mov
sbb
inc
hlt
inc
jge
inc
scas
sbb
and
add
mov
test
or
and
shrb
mov
cmpsb
cltd
jns
aaa
fidivs
adc
sti
sbb
adc
push
mov
push
xor
and
mov
push
mov
adc
daa
int3
and
pop
mov
lods
cs
pushl
pop
stos
add
and
cmp
lret
int
gs
cld
inc
dec
xchg
ljmp
xchg
pop
or
cld
int3
insb
cmp
out
mov
xchg
repnz
fdiv
adc
inc
push
pop
mov
or
out
incl
cltd
cmp
lods
pop
mov
pop
test
test
xlat
xor
ja
jle
and
sti
call
mov
pushf
pop
adc
cs
test
std
pop
push
cmp
mov
xchg
jge
add
jno
mov
lds
add
pusha
mov
gs
sub
test
push
push
cmpsb
pop
in
imul
sub
cmpsb
adc
aam
out
enter
jmp
push
inc
inc
xor
push
daa
out
mov
xchg
adc
aam
xor
adcl
idivl
cmc
test
stos
mov
stc
mov
mov
pop
fsubrl
or
mov
test
sub
xchg
cmp
add
gs
add
push
or
test
dec
push
jmp
or
movsb
insb
jnp
icebp
jmp
inc
les
gs
sti
pop
out
pop
int3
cli
cwtl
jb
push
sub
xchg
pushf
sbb
test
add
and
and
add
mov
xor
dec
and
and
xchg
mov
jnp
cmp
shrl
mov
call
arpl
sub
pop
cwtl
sbb
js
push
lcall
outsb
sbb
inc
ret
insb
and
aas
lods
and
pop
dec
insb
and
pop
adc
mov
imul
inc
cmp
xchg
mov
dec
jg
popa
int3
sti
fcompl
add
or
stos
out
or
insl
cmp
cld
cmpsl
adc
lods
cmp
aam
mov
decb
add
mov
das
mov
fwait
mov
mov
scas
add
mov
sub
cmpsb
out
push
outsl
jge
jge
sub
mov
adcl
adc
aam
movsl
adc
std
jae
cmpsb
cmpsb
or
stos
cmova
pop
or
push
cmp
and
inc
imul
ljmp
adc
mov
test
mov
or
mov
add
mov
push
repnz
pusha
xor
arpl
xor
lahf
imull
add
add
jmp
and
loopne
inc
inc
jge
inc
mov
mov
or
mov
das
scas
dec
sub
out
div
sub
sbb
jecxz
cltd
imul
stos
inc
pop
sbb
cmpsl
jo
add
es
sub
jge
mov
into
enter
es
clc
es
movsb
lds
fmulp
imul
sub
or
rclb
std
xchg
cmp
shll
jne
sub
inc
or
ret
loope
sti
shlw
jno
hlt
jbe
jne
ja
jne
pop
add
int3
loope
imul
aam
jnp
mov
bound
add
out
popa
mov
push
and
dec
pop
push
aaa
add
int
jo
xchg
sbb
jne
inc
aaa
inc
ds
lds
pop
jbe
ret
ss
mov
pop
mov
cmpsl
aaa
jnp
insl
jnp
mov
in
fsubs
inc
jg
scas
pop
sub
cmc
adcl
push
adc
pop
insb
dec
inc
in
hlt
or
mov
inc
cld
mov
or
jg
push
cltd
daa
fwait
xorb
negl
jae
testl
imul
xor
mov
xor
into
mov
push
xor
push
push
cld
xchg
mov
lret
pop
xor
rcr
or
pusha
jmp
mov
xor
pop
test
lret
loop
cmp
incl
cmp
or
enter
leave
ljmp
test
call
test
add
in
push
sarb
adc
xor
outsl
mov
xor
add
mov
in
add
arpl
dec
inc
sub
bound
pushf
outsl
mov
test
daa
std
sbb
pop
adc
out
nop
hlt
addr16
dec
jo
into
mov
adc
jae
movsb
lds
push
xchg
insl
xchg
inc
pop
push
xchg
ja
and
push
mull
xchg
push
xchg
mull
inc
jl
stos
test
scas
lahf
and
fsubrs
or
push
fists
imul
xchg
sbb
scas
ret
mov
lcall
adc
mov
aam
mov
pop
inc
adc
mov
or
imul
cli
lahf
sub
iret
jo
popf
loop
cmp
pusha
test
out
push
addr16
push
dec
into
andb
and
jg
mov
adc
pop
sbb
push
pop
scas
sbb
jo
lcall
jle
stos
cmc
cli
mov
xchg
and
pop
movl
mov
adc
mov
clc
shrl
imul
nop
cmp
or
fiadds
loopne
cwtl
push
lods
int
and
stc
lds
pop
out
jbe
push
cmpsb
jb
and
jnp
inc
xchg
hlt
loope
lcall
mov
fwait
leave
mov
cwtl
mov
aaa
push
mov
xchg
adc
ret
sti
and
adc
jns
inc
mov
lods
cmc
dec
and
in
dec
push
gs
sbbl
inc
mov
je
popf
xchg
test
pushf
add
les
jecxz
and
xchg
dec
xor
dec
pop
pop
mov
pusha
imull
xchg
es
pop
andb
adc
xchg
push
test
fs
dec
jae
inc
xlat
sub
dec
and
adc
inc
addr16
mov
lret
daa
add
inc
outsl
mov
ffree
sbb
inc
jmp
mov
insb
loop
outsl
mov
mov
pop
push
cli
lock
mov
icebp
jns
sub
cmp
inc
repnz
pop
leave
rolb
cltd
inc
xor
fcmove
daa
imul
negl
pusha
enter
ficoml
pushf
jmp
fdivs
mov
outsb
aad
inc
push
cmpsl
push
mov
mov
cmp
adc
add
lret
movsl
fists
cmp
add
mov
cmp
pop
outsl
inc
xor
and
out
sti
sbb
jae
int3
inc
lock
cmpsl
scas
pop
dec
rclb
mov
iret
or
sbb
xor
sub
inc
push
in
mov
js
pop
sub
inc
out
loop
int
sub
mov
fwait
pop
cmpsb
jmp
in
jne
stos
in
cwtl
xchg
cld
ljmp
xchg
xchg
push
je
xchg
mov
and
inc
inc
icebp
ficoms
inc
popa
ret
ljmp
insl
push
data16
fnsave
daa
lret
xchg
adcb
mov
data16
xor
jmp
add
sub
adc
and
lea
loopne
inc
imul
sarb
cld
adc
pop
es
addl
mov
lock
xor
in
push
mov
ret
pop
xor
loope
addr16
cmp
mov
xchg
int3
jecxz
mov
and
mov
int
adc
mov
loope
insb
xor
push
or
inc
push
nop
pop
cmp
cld
ljmp
test
insl
in
mov
lods
push
loop
sub
mov
push
jo
xor
popa
or
cmp
es
ror
adc
pop
xchg
and
jecxz
sti
or
sbb
push
pop
jg
sbbb
stc
xchg
sub
leave
mov
pushl
sbb
repz
push
push
popa
in
ds
xchg
mov
xchg
jge
sub
insl
call
xor
adc
pop
lcall
jge
rcrb
pop
sahf
sub
repnz
xor
sub
or
or
test
sub
pop
push
mov
adcl
inc
stc
js
jl
or
mov
mov
cmp
arpl
adc
mov
cmpsl
sub
lret
jne
jge
mov
xchg
ja
test
hlt
ds
jno
ja
push
jb
jmp
sbb
jle
stos
into
aad
lds
push
inc
lcall
icebp
scas
xchg
sub
push
sti
and
movsl
pop
enter
sti
push
movsb
test
outsl
pop
jecxz
mov
movlps
shrl
xor
xchg
fstpl
mov
lods
clc
mov
add
ret
pop
add
lock
mov
mov
mov
int3
mov
jmp
imul
in
mov
loop
leave
dec
or
adc
adc
subl
aaa
mov
or
jne
in
and
sbb
add
pop
ret
push
das
fmuls
pop
jno
add
cmp
lods
dec
data16
daa
int3
icebp
sub
es
pop
cli
sbb
push
std
and
or
test
sbb
mov
push
movb
mov
sti
mov
mov
test
in
in
shl
mov
and
jbe
dec
sub
push
dec
pushf
enter
or
inc
les
stos
push
xchg
insb
bound
jbe
pop
test
and
sahf
jnp
stos
lcall
xorb
pop
je
jno
call
mov
add
jo
popf
jmp
pop
add
inc
call
push
lods
jg
stos
push
xchg
js
inc
adc
cs
cmc
call
lods
xor
mov
setp
into
sub
outsb
mov
aad
push
jg
call
xchg
xor
shlb
lds
push
out
sub
jge
lods
outsl
mov
push
popa
adc
gs
aas
push
inc
jae
les
mov
sbb
push
and
dec
jo
or
cmp
add
xor
sti
sahf
pop
inc
inc
push
cmc
ljmp
xchg
xchg
xchg
je
ret
aam
imul
cmp
mov
push
jo
inc
inc
call
jl
sbb
adc
scas
add
cmp
hlt
mov
cmp
in
fidivrs
jno
xchg
iret
push
in
mov
ds
lahf
loope
movsl
sub
imul
jecxz
fnstsw
dec
adc
js
jns
rol
and
add
nop
fsts
push
mov
orb
div
xchg
mov
cmpsl
faddl
clc
js
cmpsl
loopne
add
push
movsl
inc
aas
jo
sbb
popa
clc
jno
jo
insb
loopne
jbe
pushaw
scas
sub
xor
scas
cmp
pop
imul
inc
pop
popf
rorb
lods
mov
jns
popf
pop
iret
lret
je
jns
clts
pop
xchg
jecxz
jne
cmp
sbb
or
shrl
cli
xchg
xchg
scas
mov
out
or
jnp
fnsave
or
imul
cmpsl
in
mov
or
cld
pop
test
dec
test
ss
lods
lret
adcl
fs
aas
pop
mov
cmpsl
mov
nop
scas
lcall
scas
icebp
xchg
fimull
in
cmp
sbb
dec
cmp
rcrb
mov
orl
in
push
jl
mov
mov
ret
mov
stos
and
jb
mov
int3
sbb
cwtl
fisubl
out
cmc
rcr
lcall
lahf
sub
rcrl
cmp
out
outsb
cmpsl
sahf
ljmp
sub
mov
lea
mov
cmc
cmc
xor
addr16
mov
repnz
lods
mov
movsb
stos
fnsave
insl
mov
push
cld
imul
lret
out
cmp
stos
in
add
dec
aam
cmp
inc
mov
ffree
jmp
in
insl
sub
mov
cli
fcoms
mov
pushf
and
mov
mov
jp
xchg
mov
fnsave
inc
out
pop
xor
mov
xchg
inc
lea
mov
loop
mov
jg
lea
pop
xor
mov
jecxz
loopne,pn
imul
addr16
mov
out
pop
sub
insb
fistpl
sbb
xor
sbb
loopne
inc
aaa
pop
sub
sub
repnz
in
jmp
xor
fildl
xor
xor
mov
pushl
pop
jg
sbb
js
movsl
mov
jge
add
inc
inc
jbe
jno
and
mov
sbb
xchg
inc
pop
rcrb
dec
fbstp
sub
sub
sub
cmpb
adc
sub
fdivrs
mov
jg
lock
inc
xor
mov
jno
xchg
test
lss
mov
in
mov
add
push
inc
mov
dec
or
je
aas
and
rorl
mov
outsl
push
data16
jbe
jmp
call
jle
cltd
xor
pushf
loopne
dec
and
cmc
idivl
mov
in
mov
out
push
das
mov
repz
aas
out
jmp
sub
push
subl
iret
adc
dec
mov
mov
mov
loop
stos
add
dec
ret
nop
mov
cmp
cmc
insb
jle
and
dec
pop
mov
lods
pop
mov
mov
outsl
jg
jp
dec
repz
inc
adc
jno
sbb
ret
sbb
scas
xor
nop
mov
out
and
pop
mov
cmp
jo
cli
mov
jecxz
movl
adc
lret
xchg
popa
gs
daa
cs
xchg
js
es
ret
or
xchg
test
pop
add
cli
fcoms
loope
pop
lock
jecxz
ds
xchg
pop
shll
cmp
xor
cmp
adc
das
push
mov
mov
enter
and
fninit
test
xchg
ret
jb
in
je
push
add
in
pushaw
adc
inc
jg
stos
out
mov
ret
xor
mov
ficompl
stos
lret
gs
cmp
xchg
cmpb
pop
cmp
adc
je
mov
repz
mov
and
not
loopne
cmpl
push
shl
jnp
jecxz
fwait
and
out
rorl
or
sahf
sub
jnp
and
popa
pop
aaa
add
stc
inc
inc
leave
jne
push
movsb
mov
mov
scas
dec
cltd
lods
dec
lret
mov
mov
sbb
mov
mov
lret
mov
mov
inc
lock
int
xorb
imull
push
movsb
dec
enter
dec
lahf
jno
push
adc
mov
or
jno
dec
cmp
adc
mov
test
and
push
xlat
jle
sbb
aam
subl
outsl
adc
cmc
dec
jge
jb
hlt
arpl
mov
loope
stc
dec
sbb
mov
xchg
shll
add
mov
out
aas
or
add
add
xchg
gs
and
or
pop
ja
inc
mov
pop
popa
xlat
mov
push
iret
sbb
or
mov
fwait
addb
sahf
xor
jle
mov
lret
mov
pop
ds
push
add
sarb
rcrb
shl
inc
jb
ds
pushf
ljmp
in
or
push
ljmp
mov
sbbb
mov
xchg
mov
sub
cmp
in
cmp
lea
cs
push
xchg
push
into
movsb
dec
sbb
cmpsb
xchg
jecxz
fisubrs
xchg
loop
imul
testb
jecxz
jecxz
pop
clc
xor
andb
xchg
gs
lock
pushf
jnp
mov
mov
mov
add
mov
dec
dec
call
daa
mov
and
mov
in
dec
iret
and
insb
dec
rorl
and
xchg
mov
add
or
daa
lret
test
hlt
mov
ret
popa
push
popf
in
js
sub
cmc
push
or
andl
push
inc
pop
and
data16
shll
mov
stos
in
and
fsubrs
js
aam
push
adc
jo
rcrl
mov
sbb
sub
jb
cmp
nop
repnz
mov
pop
bound
add
and
jge
jle
mov
mov
mov
repz
std
pusha
inc
out
les
fisttps
jae
jb
push
dec
and
inc
mov
or
out
jno
ret
inc
pop
xor
jnp
ret
outsl
jbe
fwait
repz
je
aam
fldcw
mov
adc
inc
jns
jno
pop
call
dec
or
add
inc
mov
test
sarb
sub
int
jb
dec
xchg
pop
loop
or
test
je
jl
repz
adc
sub
dec
adc
ljmp
and
arpl
lods
mov
add
jb
push
stos
cmc
call
jnp
inc
mov
sbb
out
stc
xchg
and
data16
inc
mov
filds
xor
insb
mov
shlb
sbb
push
loope
inc
subb
jecxz
lods
daa
xlat
repz
cmp
aad
push
mov
loopne
imul
rorb
mov
inc
add
cmpsb
or
movsl
and
clc
pop
imul
lahf
cmpsb
pop
adc
cwtl
push
cmp
inc
sub
fisubrs
and
lret
icebp
das
jno
jle
cltd
add
sub
or
sbb
ss
pop
jns
add
mov
jo
mov
out
cmpsb
inc
and
in
lods
mov
jle
and
sti
cmp
idivl
in
jno
push
lahf
sti
jae
jge
or
mov
jno
insl
pop
mov
xor
outsl
inc
fs
push
sbbl
scas
ret
jge
xor
xor
xchg
jle
xchg
push
sbb
int3
push
enter
ds
pop
sub
ss
loop
stos
js
mov
adc
and
mov
and
push
dec
pop
sub
lret
sbb
dec
filds
test
push
mov
frstor
js
sbb
imull
jae
or
std
adc
into
adc
cs
lods
vucomiss
or
rcll
stos
jmp
lods
jae
mov
and
mov
stos
or
xchg
mov
and
pop
out
repnz
aad
dec
mov
leave
push
add
xchg
imul
mov
sbb
or
add
xchg
cmp
mov
call
push
lret
dec
int3
imul
aas
or
jle
stos
sbb
dec
pop
fldl
xor
movsl
cld
push
arpl
lret
loopne
mov
add
in
rolb
pop
repnz
mov
aad
jmp
push
cmp
sbb
repnz
das
cld
sbbl
mov
dec
cmpsb
fmuls
pop
pop
outsb
lcall
jbe
nop
push
pop
loopne
outsb
in
dec
or
dec
ret
dec
dec
dec
testl
das
adc
mov
inc
jnp
into
push
cli
jne
dec
test
loope
notb
and
pop
jecxz
pop
call
leave
pop
dec
test
cmpl
ret
dec
push
nop
push
pop
add
and
or
mov
fimuls
jbe
aaa
idiv
pop
inc
or
cmc
les
xchg
adc
ja
adc
mov
dec
shll
gs
jo
adc
cmp
or
or
xchg
clc
adc
and
jle
xchg
ja
mov
xor
ja
pop
lcall
xor
sbb
cli
aaa
sbb
test
setg
dec
insl
push
cmpsb
sbb
and
cmpsl
xor
or
out
xor
loopne
pop
push
xchg
or
rclb
xor
ja
repz
ss
leave
stos
add
jg
mov
aam
lock
lcall
sbb
xor
jno
cmp
sbbl
loopne
in
cmp
shlb
push
les
daa
fisttpll
adc
inc
aad
fnstcw
sarb
loop
mov
movsb
push
sbb
dec
adc
mov
xor
and
fwait
rcll
pop
movsb
dec
xor
orb
sysenter
mov
add
inc
fwait
xor
push
icebp
pop
arpl
xor
sti
int
movsl
aam
dec
sub
push
movl
dec
mov
pop
and
test
andl
jo
adc
dec
ljmp
in
aaa
int3
mov
xor
sbb
inc
jo
fs
cwtl
xchg
xor
inc
mov
push
add
movsb
mov
movsl
push
data16
mov
mov
je
rcrl
repz
or
stos
push
or
jbe
xor
or
ficomps
or
xor
cmp
pop
sub
push
push
test
test
aam
push
add
pop
setns
sub
dec
adc
adc
pop
mov
popf
ret
adc
cmc
cli
hlt
ss
pop
adc
lods
pushf
cmp
fldenv
movsb
es
cmc
push
adc
jl
cmp
xor
loop
insb
mov
pusha
dec
push
dec
and
call
lea
fwait
push
mov
fsubr
iret
stos
jmp
sub
in
stos
inc
ret
or
inc
mov
push
mov
dec
sub
aas
aas
sbb
mov
inc
cltd
xor
dec
nop
outsb
rclb
out
push
sub
mov
or
pop
in
mov
in
mov
rorl
bound
pop
adc
ss
fwait
sbb
push
sahf
in
pusha
mov
and
xor
pop
cltd
push
repz
jae
leavew
xlat
mov
jne
add
les
fsubrl
iret
or
push
les
jle
ret
inc
dec
pusha
fisubrl
mov
into
dec
mov
mov
add
push
fcomps
fwait
sub
out
imul
test
mov
cmp
ja
stos
cmp
cmp
mov
mov
push
cmp
addl
nop
les
mov
jp
aaa
jle
outsb
adc
cmpl
and
movsb
fwait
and
in
mov
mov
ljmp
lock
jp
mov
or
sub
mov
lcall
or
adc
inc
lcall
or
into
mov
cmp
xchg
popf
push
pushf
mov
push
sub
std
xchg
jno
mov
xchg
cmpsb
fistpll
outsb
mov
pop
loopne
lock
imul
mov
jno
popa
jo
inc
push
gs
popf
mov
sub
xchg
or
int
xor
push
jb
in
sbb
in
add
adc
lcall
mov
add
push
xor
insb
lods
aam
repz
idiv
out
mov
sub
xchg
insb
fs
push
adcb
push
xchg
lods
insl
cmpsb
jnp
sahf
xchg
xchg
in
imulb
leave
pop
call
inc
sbb
mov
sub
loopne
mov
inc
mov
dec
imul
fs
ds
rolb
ret
lock
xor
xor
adc
mov
sub
incl
cmpsl
pop
testl
adc
adc
dec
shll
test
les
into
pop
dec
push
mov
mull
sbb
adc
aaa
sbb
mov
fstps
mov
push
shlb
lret
aaa
jbe
xorl
jne
inc
in
push
shlb
inc
popf
or
fwait
clc
push
cmp
sahf
dec
xchg
cmp
into
jge
sub
add
mov
pop
jg
cltd
push
not
test
cmc
push
leave
rcrl
mov
iret
into
push
push
mov
xor
fcompl
sub
push
add
cmp
cltd
imull
scas
and
testl
xlat
fbstp
jl
mov
cmp
clc
movsb
je
ror
cmp
cld
gs
xchg
pop
mov
inc
mul
test
jb
popa
addb
cld
inc
dec
negb
dec
xchg
in
ja
mov
push
adc
sub
imul
jmp
xchg
es
jmp
jle
fdiv
or
pop
js
jnp
sub
nop
outsl
and
int
movsl
lret
ret
adc
cld
sti
call
ljmp
mov
sub
fldenv
aaa
dec
lea
dec
xor
lahf
mov
mov
popa
pop
ror
dec
push
xchg
jle
roll
popa
xchg
insl
push
mov
test
add
ja
ret
pushf
clc
cwtl
test
jb
xor
imul
sbb
dec
mov
add
cmp
addl
push
imul
pop
jb
in
mov
popf
xor
sbb
push
sahf
cwtl
mov
sbb
push
jae
mov
fidivl
outsl
jmp
adc
ja
jo
icebp
inc
dec
mov
mov
fsubl
popf
mov
ret
pusha
fwait
in
aam
xor
mov
mov
add
jge
fidivrl
shl
xchg
mov
mov
fwait
xchg
cmpsb
and
cmpsl
push
adc
shll
repz
xor
rorl
add
pop
call
dec
loop
insl
nop
push
jmp
push
jecxz
test
push
pop
dec
leave
dec
and
imul
and
adc
inc
add
jmp
scas
gs
or
xchg
int
mov
jnp
xor
ljmp
adc
out
sbb
or
leave
fisttpll
mov
adc
xor
or
xchg
aaa
fnstsw
daa
shl
push
scas
adc
sub
repnz
cmp
push
daa
ret
lret
fistps
scas
test
lcall
icebp
jne
pop
lock
sub
push
insl
out
mov
je
in
hlt
bound
and
in
scas
int
daa
mov
xchg
sbb
mov
sub
sub
sub
xchg
gs
sub
inc
pop
ds
js
popa
jne
jmp
scas
sbb
xchg
push
push
sbb
jl,pn
mov
movsb
jp
mov
and
dec
xchg
pop
cmp
pop
jae
mov
movsb
cmpsb
xchg
adc
and
mov
cmpsb
enter
jmp
ja
andl
lahf
icebp
jae
mov
fnsave
push
and
inc
fimull
xor
inc
in
fimull
filds
bnd
ror
decb
adc
out
jle
jne
loope
dec
mov
icebp
sbb
dec
jmp
xor
les
sbb
lret
cmp
ret
cs
lret
insl
cs
sbbl
rorb
jbe
dec
add
cwtl
or
jmpw
sbb
xchg
shrb
loope
and
cwtl
pusha
bnd
adc
cli
lahf
dec
in
hlt
jge
jae
jle
dec
popa
repz
fsubp
mov
pop
daa
or
jnp
jne
jae
in
scas
in
pop
clc
cmp
lods
mov
insb
imul
lret
jns
jne
push
mov
testl
mov
or
fidivs
cmp
cmc
xchg
jnp
mov
and
and
lahf
std
xchg
aaa
sub
pushf
negl
mov
ret
add
jmp
jl
ds
out
lods
pop
outsb
test
xor
adc
das
ljmp
adc
sahf
dec
mov
cvtps2pd
xchg
addr16
xor
sbb
cld
push
pop
les
cmpsb
xor
std
divb
negb
scas
adc
dec
xor
data16
test
mov
cli
ficoms
dec
fstl
mov
ficoml
mov
scas
leave
pop
jno
shr
xchg
inc
pop
movnti
adc
pop
pushf
repz
dec
loop
enter
inc
mov
inc
xlat
jmpw
add
in
fsub
mov
sbb
loop
push
js
fistl
sbb
sbbb
dec
nop
sbb
mov
aas
inc
xor
jecxz
nop
inc
sahf
sub
mov
orb
inc
sub
clc
gs
mov
mov
mov
orb
lea
push
cmc
aam
mov
push
shlb
and
jbe
jmp
add
pop
push
cmp
pcmpgtb
out
adc
adc
jp
or
push
les
testb
inc
iret
scas
gs
xor
or
push
in
jmp
outsb
outsl
in
cli
lretw
pop
lea
cmc
cltd
pushf
sbb
xchg
out
mov
xchg
jnp
pop
lret
mov
push
push
ret
and
cmp
mov
jb
jbe
xchg
rorl
mov
daa
xchg
adc
inc
push
jns
pusha
jbe
loopne
sub
lahf
cmpsl
jno
leave
aam
repnz
pop
enter
mov
out
mull
mov
loopne
fimull
stos
movsl
cmp
and
or
adc
pushf
rclb
testb
mov
push
jno
sbb
fistpl
mov
pop
arpl
cmpsl
xor
rolb
stos
scas
insl
arpl
scas
scas
mov
push
cmp
or
sbb
mov
leave
mov
cs
mov
lret
jb
bound
js
sahf
mov
pusha
xor
jle
into
jge
push
iret
cmp
cwtl
jns
lods
gs
mov
add
enter
fcoml
inc
xchg
je
sbb
out
mov
jo
cmc
jnp
sub
lds
mov
sbb
call
push
dec
imul
xchg
test
pop
mov
push
push
sbb
pop
jecxz
jno
sub
mov
pop
icebp
and
sub
nop
mov
inc
int3
adc
gs
les
lea
push
xlat
cwtl
ret
mov
insl
cs
jne
mov
dec
stos
lock
cs
outsb
xor
insl
ja
cmp
fstpt
adc
jmp
sbb
movsl
push
jg
imul
or
mov
xor
ja
jno
mov
pop
add
sbb
inc
jecxz
xchg
mov
and
mov
loop
insb
aam
int3
ss
push
stos
pushl
in
shll
neg
pusha
add
ds
pop
outsl
mov
sub
or
les
fists
and
xchg
sbb
mov
push
mov
adc
lcall
xor
or
clc
inc
pop
sar
sub
pusha
xchg
test
inc
add
lcall
mov
sub
dec
cmc
dec
mov
sbb
lret
mov
jg
mov
loopne
mov
fidivl
adc
xchg
sub
inc
or
shlb
aas
icebp
testb
fistl
jns
test
insb
pop
outsl
cmp
stos
sub
das
pop
inc
inc
cmpb
fs
test
into
mov
mov
jnp
pushf
jns
xor
in
jb
les
and
pop
mov
push
mov
and
cwtl
cmp
mov
movb
dec
test
in
lret
push
jl
gs
sbb
xchg
jne
cli
sub
mov
xor
pop
shlb
clc
sub
rcl
adc
ret
adc
lea
ds
fsubrs
mov
lret
fmulp
lods
inc
xor
cmp
add
out
in
movsb
dec
rorl
rcrl
lahf
or
pop
mov
pop
inc
aad
jns
rclb
adc
sbb
dec
insl
shr
push
out
cld
pop
aad
xor
xor
scas
fdivl
add
inc
es
pop
jns
popa
das
mov
or
pop
popl
add
and
push
push
mov
push
add
sbb
xor
roll
std
xchg
adc
fwait
push
or
loop
add
in
out
mov
push
lea
mov
insb
sarl
daa
xlat
sub
lods
mov
test
jno
mov
les
jae
xchg
pop
jg
lahf
or
sbb
jo
aaa
and
sub
arpl
push
push
push
jg
sub
stos
les
or
adc
and
fists
or
in
das
cltd
ljmp
test
rcl
inc
test
hlt
lods
xchg
or
push
mov
clc
in
add
mov
fsubl
xorl
mov
xchg
sbb
bound
icebp
push
loopne
add
out
popa
dec
or
les
imull
test
out
xor
loope
xlat
nop
push
push
mov
sbb
daa
int
aam
dec
mov
daa
cld
push
sub
data16
rcr
or
jge
adc
jnp
lret
lret
pop
add
shll
filds
es
out
pop
or
out
pop
test
mov
pop
push
add
pushl
test
in
js
test
push
add
bound
rcl
pop
or
mov
xor
adc
int
xchg
rcrb
rcrl
mov
or
out
jne
push
push
add
insb
sbb
push
sbb
or
cs
push
dec
cmp
les
sbbl
std
add
cmp
pushf
out
dec
rolb
jae
insl
lea
stos
fstpt
dec
fs
stos
xchg
push
sbb
or
imull
lret
into
pop
cmpsb
in
cld
push
adc
daa
xor
push
pop
insb
jge
jge
adc
push
jle
pop
pop
in
lods
sub
idiv
xchg
jnp
mov
rorb
shrd
xor
jg
cltd
or
xadd
add
mov
dec
arpl
adc
scas
xchg
idivb
andl
xor
adc
pusha
addl
sub
jmp
fs
xor
pop
cmp
sbb
xchg
bound
js
adc
and
pop
movsb
push
in
shrb
jl
lock
mov
and
iret
imul
loop
xchg
pop
cmp
shlb
xchg
das
pop
aam
xchg
in
lret
rcrb
out
mov
call
or
clc
adc
scas
sbb
jnp
jl
aas
pop
das
cwtl
jbe
push
lods
inc
xor
popa
sub
add
aaa
shlb
nop
repnz
int3
add
cli
add
add
or
mov
jge
outsl
dec
icebp
pusha
stc
insb
std
sub
push
mov
cmp
aam
loopne
into
bound
pop
mov
inc
in
js
dec
xchg
inc
sar
gs
movsb
cltd
sbb
push
sub
pop
das
xchg
xor
mov
daa
xchg
and
mov
inc
test
outsb
or
cli
aas
fnstenv
stos
pushl
sub
pop
mov
mov
or
jecxz
orb
xlat
ljmp
cmc
movsl
sub
in
and
fptan
dec
sbb
xchg
and
outsb
jae
negl
aam
mov
adcl
inc
sub
inc
sbb
fnstenv
xor
fisubs
xor
fld
mov
dec
pop
sbb
out
mov
mov
js
outsl
scas
mov
scas
jb
or
pop
sti
into
and
loop
xor
xlat
add
and
ss
dec
pop
fldl
inc
add
mov
cld
test
add
rsqrtps
dec
push
jle
ss
iret
xor
jae
insl
addr16
pushf
pop
lea
mov
mov
mov
xchg
dec
out
push
sub
mov
push
push
shlb
in
pusha
testl
movsl
lea
xor
add
mov
fcmovb
test
mov
sub
stc
mov
aad
mov
xor
out
or
add
dec
jne
xor
add
nop
out
xor
or
shll
jecxz
lds
sub
push
mov
push
mov
stos
or
cmp
add
add
sbb
xor
into
jge
inc
mov
xor
pop
arpl
mov
and
cltd
icebp
mov
lods
add
fists
sahf
sbb
repz
xor
std
inc
sbb
mov
and
test
lods
arpl
inc
test
sub
mov
or
jbe
inc
ds
xchg
scas
stos
fwait
mov
loop
adc
mov
roll
inc
ret
cld
push
mov
jnp
jns
adc
add
ja
mov
and
add
fsub
and
xchg
fistpll
and
loop
addl
or
mov
sub
icebp
stos
sub
pop
aas
out
cmp
test
imul
leave
pushf
inc
std
add
outsb
cli
arpl
scas
mov
dec
pushf
push
push
add
ss
cmpsl
mov
mov
and
iret
je
cmp
in
enter
stos
inc
je
mov
and
sbbl
jecxz
push
dec
out
inc
cmpsb
ret
mov
cltd
inc
dec
mov
push
aas
add
mov
mov
aad
or
out
mov
add
sbb
sub
inc
or
ljmp
adc
ret
repz
xchg
adc
out
inc
mov
pop
js
or
js
sbb
inc
pushf
and
pop
mov
push
jne
scas
push
cs
loopne
repnz
movsl
or
mov
mov
mov
fidivs
or
les
popa
jge
outsl
icebp
mov
into
add
jo
adc
adc
dec
js
lcall
push
add
sahf
push
cld
pop
out
push
jmp
ljmp
fcoms
insl
and
xor
adc
pop
jo
push
ret
jae
and
cmp
xor
int
lahf
pop
incb
xchg
cltd
femms
lret
fisubrs
mov
out
rorb
inc
mov
jge
ja
mov
mov
popf
adcl
in
mov
inc
out
je
orb
mov
mov
push
out
arpl
cmp
ss
dec
and
mov
push
repnz
sub
jmp
les
mov
mov
imul
loopew
sub
cwtl
mov
and
xor
mov
push
mov
das
dec
xor
dec
xor
test
mov
out
fldenv
negl
lret
ja
jne
mov
add
dec
adc
mov
xor
jnp
dec
or
rolb
rcl
mov
sub
and
dec
xchg
push
arpl
xchg
test
jg
or
jbe
popa
rclb
dec
sub
in
pop
xchg
sbb
fcomi
inc
xchg
xor
pop
outsl
fdivrp
gs
inc
xor
dec
sub
or
cmp
fwait
stos
sub
cmpsb
mov
adc
pop
sbb
or
jbe
roll
cmp
xor
lock
sbb
inc
fs
jecxz
out
sbb
mov
add
aam
mov
lea
lret
push
stc
mov
rolb
xchg
pop
inc
loope
mov
push
mov
icebp
cmp
sti
in
inc
jp
sahf
sbb
or
push
es
mov
pop
sbb
es
mov
gs
inc
ficoml
jp
xor
das
sub
leave
xchg
mov
aad
add
out
and
add
lret
adc
repz
sti
lret
inc
xchg
mov
mov
sbb
dec
dec
cmp
or
jge
pop
mov
ljmp
lock
out
popf
xorl
pop
fiaddl
in
out
in
xlat
cmpb
push
popa
cmp
mov
and
lods
pop
insl
lret
lret
sub
addl
lock
int3
ror
es
dec
dec
cmpsl
or
inc
add
inc
cmp
push
cmp
xor
jnp
loop
or
jecxz
js
mov
aam
xor
or
push
fs
fildll
insl
adcl
inc
jg
ds
add
mov
nop
sbb
cltd
addr16
cltd
xchg
add
pop
icebp
les
mov
push
cmp
mov
and
ljmp
xchg
dec
imul
loopne
stos
sbb
insl
inc
jno
sbb
pop
mov
and
cmp
adc
out
mov
sbb
and
sbb
and
ficompl
mov
imul
addr16
cmpb
in
insb
sbb
ret
inc
inc
cmp
dec
mov
dec
jecxz
pusha
sbb
stos
mov
out
repz
stos
inc
stos
repnz
push
in
and
push
or
xchg
xchg
mov
leave
and
in
sti
aam
mov
js
iret
pusha
decl
mov
cmp
rcl
sbb
and
adc
lods
pop
lods
add
jae
stos
int
bound
out
push
cmp
adc
js
pop
in
jns
jecxz
or
mov
adc
test
movsl
xchg
jae
sub
or
sbb
out
ljmp
inc
adc
out
out
xchg
mov
pop
xchg
pushf
xor
pusha
jo
add
vpsubsw
adc
out
aad
outsb
push
div
cmp
xor
mov
add
jno
cld
outsb
ficoml
xchg
pop
bound
jnp
rorb
inc
mov
repz
or
out
das
add
sbb
std
rol
loopne
popf
mov
cli
mov
lods
rcrl
push
pop
std
inc
ret
pop
call
dec
fnstcw
xor
lds
popf
out
jne
cmc
outsl
sub
clc
jbe
push
aad
cmp
adc
dec
gs
mov
sahf
xor
mov
sub
mov
pop
and
lods
push
xabort
adc
cmp
jns
mov
mov
inc
xor
inc
sub
lret
push
sti
das
ds
push
mov
sbb
outsb
popa
gs
pusha
addb
push
lods
xor
push
pusha
lret
add
nop
jmp
gs
arpl
adc
adc
loop
push
sbb
xchg
xchg
pop
mov
sbb
cmp
push
mov
fs
adc
push
xor
and
fisubrl
pop
sti
fisubrs
icebp
cltd
fwait
stos
adc
sar
testl
lods
subb
or
icebp
test
hlt
add
fstpt
out
sub
test
mov
cld
ss
ljmp
imulb
imul
sbb
xor
push
repnz
adc
add
xchg
and
dec
adc
jg
add
aas
les
xor
and
das
adcl
mov
dec
stos
sarl
push
dec
push
add
icebp
testl
stos
ljmp
les
inc
add
push
lcall
out
pop
clc
mov
adc
nop
pop
mov
sub
push
movsb
sahf
cmp
mov
pop
sbbl
insb
jecxz
aas
sub
sub
or
mov
jbe
daa
cli
push
add
mov
xor
cmp
add
ret
outsl
adc
pop
jle
dec
dec
cmpsb
and
pop
mov
sub
fsubl
pop
dec
pop
addr16
xor
outsb
fdiv
pop
ret
mov
in
mov
push
mov
push
pop
push
pop
lds
sti
call
mov
into
mov
ret
ret
lds
or
push
aaa
mov
out
test
push
daa
add
push
mov
loop
test
fsubrs
lret
lds
in
inc
add
int3
sbb
scas
cmp
add
mov
adc
and
orb
push
mov
int
cmp
rsm
les
cmpsb
jmp
test
pop
test
fmul
mov
inc
lcall
int
jl
popf
pop
enter
mov
xchg
inc
dec
inc
push
lea
sub
xchg
addr16
dec
jbe
fstl
mov
hlt
popa
je
jns
mov
xchg
pop
jns
mov
pop
sarl
cli
push
push
xchg
dec
setbe
push
leave
int
pop
add
xor
mov
insb
xor
adc
sti
xor
outsl
jge
mov
xor
fbld
pop
in
push
push
test
repnz
fsubl
mov
mov
pusha
push
inc
jns
into
in
fs
test
loopne
sub
sti
shll
inc
add
sti
add
push
jo
inc
xlat
loop
adc
cli
inc
popf
mov
stc
test
lods
clc
out
lahf
sub
scas
mov
lret
sahf
jo
in
xor
push
fnstcw
es
repnz
shlb
sbb
cmc
dec
stos
mov
test
rcrb
out
lret
outsl
rcl
jecxz
push
je
push
or
popa
add
popa
mov
pop
cwtl
cs
mov
in
mov
cltd
lahf
cmp
test
into
or
outsl
add
xchg
jl
je
cwtl
mov
jb
arpl
loopne
adc
adc
xor
pusha
int3
orl
inc
push
push
inc
or
push
into
mov
fcompl
add
dec
rcrl
dec
and
dec
enter
push
mov
inc
adc
scas
xor
jbe
sub
mov
mov
inc
dec
and
aas
das
cmp
out
xor
es
addr16
into
and
or
cmpsb
mov
jns
add
xor
mov
push
add
fstl
lds
rclb
push
aad
fcomi
lods
repnz
in
mov
cmp
lea
ljmp
daa
dec
sub
inc
pop
subl
stos
ja
or
dec
out
sarl
fistps
mov
repnz
dec
outsb
cmpsl
lret
shrl
call
andl
and
jo
bound
repz
or
inc
adc
jae
testb
cmp
je
sub
sarl
fadd
outsb
mov
add
scas
aam
shrb
or
cmp
adc
rcrb
lcall
sbb
les
roll
ds
and
push
js
fsubrs
mov
lds
sub
push
jo,pn
mov
lahf
outsb
pop
xor
pop
out
ja
mov
mov
cmpb
adc
inc
out
or
daa
cmovns
dec
data16
adc
pop
cli
xchg
push
cmpsl
pusha
fs
push
movsl
out
or
xor
dec
sub
sbb
pop
sub
dec
or
shr
insl
clc
lcall
daa
stc
mov
sub
add
ja
push
das
mov
call
lret
jne
lock
pop
leave
pop
and
test
jo
xlat
or
and
out
xchg
hlt
lods
pushf
rolb
inc
xor
mov
pusha
iret
insl
repnz
push
inc
cmc
movsb
imul
sbb
testb
in
cmp
mov
pop
hlt
pop
xor
ljmp
cmc
mov
jne
cwtl
test
jbe
shrd
pop
sbb
add
sub
push
in
ss
sbb
das
test
ret
cmpsb
sbb
push
mov
pop
pop
iret
cwtl
push
push
xchg
xlat
add
cs
mov
lret
jbe
cmp
xchg
test
dec
imul
xor
and
test
les
pop
addr16
or
inc
dec
ja
not
or
push
push
xchg
data16
push
incl
pop
push
xchg
or
mov
sbb
jmp
inc
xchg
or
mov
mov
shr
mov
ret
movsb
loopne
mov
and
jp
push
and
scas
ja
leave
adc
insl
xchg
cmp
inc
or
xor
dec
shlb
cwtl
in
cmp
sub
call
push
inc
mov
or
pushf
or
out
push
sub
and
sbb
push
pop
shrb
add
nop
xor
in
ret
leave
inc
test
fwait
mov
js
sbb
xor
rcll
or
pop
sbb
mov
outsl
stc
push
sub
mov
inc
adc
shll
cmp
xor
ja
insl
mov
imul
cmc
sub
pop
add
adc
mov
push
std
popl
xchg
cmp
out
push
adc
stos
add
mov
daa
hlt
data16
das
mov
adc
dec
outsl
sahf
mov
push
cmc
pop
or
sbb
lods
mov
mov
test
pop
mov
mov
push
lock
sarb
lret
push
mov
out
add
xchg
jl
mov
xchg
and
pop
jno
fsubs
mov
push
fwait
scas
cmp
lahf
sub
jmp
jmp
and
test
divl
out
sub
shlb
insb
dec
hlt
lahf
pop
gs
test
imul
dec
lcall
lcall
lret
add
mov
sbb
sarl
xchg
fadds
jmp
sarb
stos
dec
lret
aad
lods
mov
lock
inc
or
sub
jne
nop
push
sahf
clts
jns
jo
add
aam
and
lea
js
mov
rolb
andl
mov
jle
pop
aad
inc
testl
jg
xchg
out
or
xchg
in
addl
bndldx
nop
pop
in
xchg
and
enter
adc
or
dec
shlb
push
xchg
add
imul
ss
dec
ret
add
add
lods
sub
push
and
gs
out
pop
std
xor
push
inc
sbb
nop
repnz
xchg
pop
enter
jecxz
jnp
mov
mov
dec
push
out
lods
xor
bound
sub
add
xchg
sbb
gs
ror
jae
leave
sbb
pop
add
dec
cmp
les
dec
xchg
jne
in
cmpsb
loope
stc
cmp
cmp
lcall
aas
mov
leave
sub
and
inc
sbb
sti
mov
mov
jno
stos
xor
sub
daa
mov
mov
pop
mov
pop
mov
sbb
dec
jb
pop
std
scas
dec
loope
stos
push
fists
clc
fadds
shlb
pop
fbld
rcr
mov
lcall
pop
dec
insl
sbb
lds
lock
mov
jg
cmp
sub
imul
lds
jle
xchg
jnp
imul
test
mov
inc
and
mov
lcall
inc
das
mov
test
data16
scas
push
lret
int3
in
aad
jno
ror
cmp
and
repnz
push
or
adc
xchg
test
mov
out
and
mov
sbb
mov
cmp
sbb
mov
pop
pop
enter
sub
sub
sub
cmp
mov
xchg
cmp
sbb
push
stc
ja
dec
int3
adc
fsubl
push
stos
push
mov
cmp
pop
inc
mov
cli
mov
js
inc
call
and
repz
mov
addr16
je
cmp
leave
sub
sub
out
push
or
lea
adc
mov
fcompp
ds
inc
dec
cli
sub
xor
jbe
cmp
mov
add
pop
sub
andl
in
aad
sub
mov
jg
stc
xor
rclb
std
int
mov
stc
jle
std
mov
outsb
pop
adc
in
out
into
jne
sub
xchg
push
adc
lahf
dec
sbb
and
lahf
pop
shlb
push
loope
mov
xor
xchg
stc
stos
sub
jle
popf
sub
mov
das
jmp
mov
sarb
mov
outsb
xchg
inc
test
mov
sbb
inc
xchg
sub
fdivr
call
mov
lods
adc
lcall
pop
sti
cmpsl
out
xor
das
ss
adc
adc
test
rolb
xchg
mov
shll
xor
lea
lcall
into
mov
push
add
lcall
xchg
inc
mov
out
inc
mov
or
jecxz
iret
scas
pop
mov
neg
pop
add
xlat
out
addl
or
js
xor
or
outsb
xchg
daa
push
test
mov
in
popf
cmp
cmpsl
mov
jnp
inc
cmp
fistpl
and
aaa
pop
lret
dec
cwtl
jl
xor
loope
push
outsb
movsb
xchg
inc
jg
push
sbb
js
leave
in
xor
mov
popa
je
dec
sub
scas
push
push
sbb
out
call
pop
cmp
test
arpl
sbb
lods
insb
pop
xchg
stos
loope
adc
inc
mov
rorb
insb
aam
stc
scas
mov
clc
and
sbb
dec
mov
pop
push
or
imul
cmpsb
aam
mov
std
out
in
cwtl
stos
lods
lods
fildl
in
jbe
call
push
mov
inc
hlt
fnstcw
fwait
mov
sub
sub
lret
ja
and
lcall
sub
sub
mov
mov
mov
pushf
sub
mov
notb
mov
add
inc
jb
lock
mov
divl
dec
iret
push
and
add
and
push
sbb
stc
push
mov
rclw
xchg
cmpsb
mov
repz
sub
aas
mov
out
sarl
adc
jecxz
cli
bound
scas
or
mov
xchg
mov
mov
std
lret
ljmp
hlt
out
jmp
adc
cmp
test
test
fbld
lea
mov
andl
into
aam
xchg
ja
movsl
cs
out
or
mov
in
cmp
or
subb
mov
add
and
roll
nop
inc
add
mov
stos
fmul
cmp
imul
ret
jbe
mov
daa
sub
sti
mov
xorb
insl
bound
mov
pop
inc
lret
sahf
shlb
push
stc
sahf
daa
xor
popa
mov
push
mov
sbb
ret
cmp
or
adc
outsl
xchg
pop
mov
mov
jne
jo
pop
addr16
or
arpl
mull
popl
and
mov
in
sbb
mov
repnz
pushf
mov
pop
test
cmpsb
dec
bnd
sbb
stos
push
inc
cmp
lods
stos
push
sbb
jae
sub
mov
mov
sub
mov
loopne
jbe
dec
xor
mov
mov
call
jae
in
inc
xchg
jno
push
jle
sbb
lods
cli
jp
stos
cmc
mov
mov
cmovs
ljmp
cmp
pop
mov
mov
push
enter
shr
sbb
and
adc
hlt
filds
adc
aad
imul
mov
mov
out
les
scas
in
push
sbb
in
xchg
das
lahf
sub
fsubl
lret
or
xor
and
aam
das
cmc
xchg
fnstcw
jecxz
cmp
cmp
mov
repnz
pop
das
shrl
ret
push
fstpl
or
dec
mov
sbb
jo
fdivp
lock
enter
mov
mov
aas
pop
arpl
lret
arpl
pop
push
xor
in
adc
loop
push
sub
icebp
mov
dec
add
fdivrl
cltd
ret
push
jg
mov
push
push
mov
adc
mov
insb
cmc
lea
pop
mov
push
outsl
mov
fs
push
pop
ss
sub
jne
in
aad
cwtl
testl
or
mov
pop
fildll
out
jg
inc
push
xor
lock
ret
scas
ss
fs
iret
jnp
scas
mov
movsb
nop
mov
cwtl
inc
imul
dec
pop
hlt
add
sub
jno
xchg
mov
fnstenv
and
push
out
leave
inc
lahf
in
imul
push
ret
jmp
cmc
lahf
or
adc
nop
add
xchg
mov
addb
sbb
cmp
cmp
xchg
sahf
aad
mov
jae
push
aam
clc
call
jb
cmp
push
sub
or
das
and
push
aam
cli
push
push
jbe
bound
lock
sub
adc
cmpsb
sub
es
pop
dec
xchg
lahf
xor
push
jbe
dec
inc
jl,pt
xchg
repz
xor
mov
mov
jns
sbb
and
dec
fidivrl
jno
enter
inc
leave
leave
fmull
sub
mov
and
mov
inc
pop
or
add
pushf
lock
filds
loope
fadds
push
mov
cmp
fiadds
xor
xchg
inc
shrb
cli
cld
ljmp
cwtl
in
xchg
aas
loope
sbb
lahf
jb
inc
fildll
inc
jne
mov
adc
xor
les
hlt
push
and
sub
shl
jmp
xor
and
inc
sbb
xlat
or
sub
sub
and
fidivrl
mov
jbe
sub
outsb
mov
fdivr
dec
dec
mov
push
sub
jnp
pop
shrl
fisubrs
cmp
lds
pop
lret
cwtl
hlt
insl
mov
cmpsl
mov
jae
inc
adc
and
xchg
roll
loop
sahf
jmp
dec
push
das
mov
jecxz
xor
roll
cmovno
pop
stos
push
lock
pop
push
mov
out
mov
dec
inc
test
shrl
outsb
adc
jle
testl
or
mov
das
push
and
mov
xchg
out
or
pushf
out
inc
or
adc
cmpsl
int3
cmpsl
int3
mov
xor
jbe
and
inc
lcall
jne
pop
outsl
cmp
push
sbb
and
into
push
or
or
cld
and
mov
dec
scas
ss
sbb
inc
in
xchg
mov
mov
sbb
sbb
sbb
mov
out
shll
pop
jecxz
movsb
xchg
imul
leave
stos
and
int
gs
inc
add
adc
dec
aad
pop
incl
pop
push
inc
inc
lods
jns
flds
mov
stos
cld
push
sarb
shr
jmp
dec
lods
arpl
outsb
aam
push
pop
jecxz
nop
cwtl
xchg
xchg
xor
stc
sub
shl
pushf
add
fiaddl
xor
mov
or
mov
or
std
or
inc
jnp
pop
int
sub
jle
jmp
into
enter
pushf
adc
in
mov
icebp
jnp
repnz
mov
out
ja
cmp
mov
mov
repz
mov
cmp
lock
sub
xor
ljmp
mov
xor
dec
mov
dec
xchg
hlt
jecxz
xor
shll
mov
out
incb
stc
sub
imul
or
push
test
inc
gs
xchg
fldl
and
setb
out
push
into
and
xor
jg
add
push
mov
pop
fwait
es
imul
cmc
dec
ja
in
pop
and
pop
out
pop
outsb
shll
mov
fistpl
xchg
jnp
cmc
ret
neg
pop
mov
xchg
movsb
push
and
xchg
mov
inc
add
ret
inc
xchg
arpl
push
cmp
daa
imul
mov
xchg
push
mov
jb
push
mov
mov
mov
jle
or
sbb
xorb
cld
gs
cltd
testl
pop
and
xchg
mov
xor
and
movb
cmc
inc
xchg
stos
push
divb
sti
es
sbb
lods
xchg
pop
or
mov
mov
push
push
movsl
out
cmp
or
ja
das
adc
mov
sbb
jo
push
mov
ss
pusha
add
sahf
scas
sub
aad
mov
push
or
adc
mov
sbb
aaa
repnz
sbb
sub
scas
jge
psrld
shlb
push
cmp
ljmp
or
inc
sub
cwtl
ret
jge
mov
push
hlt
int
cld
add
pop
lods
and
xchg
cld
jae
stos
insb
or
imul
xor
add
sub
and
push
push
mov
push
jbe
or
fildll
xchg
adc
inc
bound
push
mov
pushf
in
aam
cmpsb
jg
daa
ret
in
mov
and
pop
popa
xor
jp
lods
idivl
aad
pop
xchg
mov
cmp
mov
mov
xor
mov
jno
adc
mov
add
or
mov
pop
aaa
popf
popa
cmpsb
inc
subl
cmp
fbld
popf
test
popf
xor
rolb
cmpsb
cltd
sub
mov
fst
mov
inc
adc
and
ljmp
sub
lods
leave
push
mov
mov
sbb
xchg
in
ss
jmp
nop
out
lds
cmp
imul
xlat
fsubr
xor
push
adc
cmc
sbb
add
mov
fldt
cltd
mov
xchg
sbb
subl
add
mov
imul
dec
dec
xchg
xchg
rcr
scas
lods
int3
call
outsb
pop
js
add
mov
adc
cwtl
mov
sub
cmp
mov
or
adc
adc
mov
push
movsl
inc
lret
icebp
fldln2
insl
insl
addr16
fiadds
cmp
ret
inc
fisubrl
xor
shlb
cmp
hlt
sub
cmpsl
fxam
sub
inc
mov
mov
les
adc
cmpsb
pop
fbstp
dec
fstpt
mov
xchg
lahf
jle
jno
add
sub
ja
fcmovb
and
fistpll
cmp
cmpsl
insb
add
pop
icebp
sbb
pop
aad
shl
lods
xlat
cmpl
out
cmp
dec
add
nop
add
pop
sbb
xchg
out
fistl
out
clc
ret
arpl
xchg
int
punpcklbw
das
cmp
inc
cltd
jno
push
in
pop
imul
js
dec
loopne
iret
adc
sbb
insl
icebp
mov
or
xchg
scas
push
in
fisubs
nop
xor
and
dec
mov
mov
out
and
push
mov
in
add
andl
in
adc
outsl
mov
add
cmpsb
scas
popa
sbb
dec
lahf
loope
dec
push
pop
xchg
sbb
icebp
es
mov
push
add
mov
adc
sub
mov
ss
inc
mov
jns
push
lret
lea
push
xchg
out
enter
mov
je
sbb
aad
dec
push
cli
ret
mov
ljmp
adc
movsl
mov
cmp
adc
imulb
sbb
out
cmp
sub
pop
mov
filds
cmp
xchg
xchg
mov
sbb
push
data16
cmpsb
pop
pop
inc
pusha
rolb
xchg
cmp
shl
dec
xchg
insb
jns
pop
cld
xchg
shll
rcrl
shrb
mov
movsb
idivl
fisttpll
aaa
mov
push
adc
xor
iret
lods
andw
push
pop
add
or
fcmove
dec
addl
cmpsl
or
and
pop
add
jge
repz
mov
dec
adc
and
cld
mov
leave
push
outsl
rolb
mov
hlt
stc
or
mov
scas
mov
mov
addl
push
andl
arpl
sub
mov
push
call
ret
les
js
mov
mov
inc
lea
xchg
pop
xlat
adc
aam
pop
mov
jbe
add
aaa
fistps
sbb
push
cmpsl
fwait
adc
or
push
int
clc
xor
pop
and
js
sbb
jno
iret
push
adc
ret
incb
out
repz
push
lods
jne
mov
pop
mov
jnp
mov
scas
push
or
fidivl
xchg
sti
je
loop
and
gs
adc
test
adc
dec
inc
xchg
adc
dec
push
scas
cmp
mov
insl
jo
ljmp
cmp
scas
xorb
mov
test
mov
inc
push
add
jl
cltd
mov
push
movl
int3
ret
aaa
mov
inc
rolb
mov
fbstp
mov
sub
cs
inc
cmpps
mov
or
mov
push
lods
and
mov
jge
ret
jae
push
add
shl
repnz
push
lods
ja
mov
je
ret
xlat
dec
cmp
push
in
inc
jae
mov
or
pop
pusha
faddl
or
push
inc
lcall
inc
or
daa
int3
ss
and
lock
mov
or
ja
dec
lods
jne
mov
inc
lret
push
xchg
adc
xchg
sarl
mulb
dec
and
and
adc
xor
loop
mov
mov
xchg
out
test
icebp
lock
lock
jmp
in
and
popf
cmp
push
or
dec
pop
jae
cmp
sbb
loop
mov
repnz
xchg
inc
pop
cmp
push
pop
aaa
inc
es
sub
gs
pop
sbb
jg
push
aas
and
inc
popa
test
sub
add
mov
push
shll
es
pushf
stos
rcll
dec
and
out
out
movsb
cs
test
adc
xlat
mov
pop
and
cs
shll
stos
dec
cmp
orl
xchg
enter
daa
push
sti
movsb
mov
xchg
enter
dec
hlt
or
sti
shrl
cmp
je
add
ret
cmp
xor
mov
inc
cmp
or
ja
bound
pop
dec
xchg
pop
cmp
add
sbb
sbb
cld
jmp
inc
push
jmp
imul
dec
repnz
je
xchg
lret
mov
out
and
shl
mov
inc
xchg
mov
push
scas
push
stos
sbb
push
mov
pusha
shlb
adc
jge
ret
inc
loop
mov
jne
lret
out
xchg
cmc
aam
popfw
loopne
scas
fimull
ja
inc
out
inc
pushf
dec
rcpps
mov
mov
mov
jo
shlb
addr16
jne
shrb
sbb
inc
pop
pop
cmpb
push
popf
jle
cmc
int3
mov
xchg
arpl
mov
mov
mov
test
dec
pop
dec
cmc
rolb
sar
xor
cmpsb
loop
cmp
in
add
pop
mov
notb
ss
lcall
push
fsubs
adc
pop
cmpsl
ret
push
mov
loop
jecxz
mov
mov
sarb
jl
cmp
mov
jnp
shrl
pop
dec
adc
mov
and
ljmp
scas
mov
pop
add
adc
pop
xor
lods
pushf
mov
daa
stos
and
mov
popf
insl
scas
cmpsb
movsb
push
dec
inc
lret
aad
push
mov
adc
xor
mov
push
testl
aaa
mov
lcall
push
cmp
shl
das
inc
jne
dec
fisubs
nop
cmp
ficoml
mov
xchg
mov
pop
cld
sub
or
sti
jl
push
insl
and
and
xor
mov
int
xchg
dec
aaa
fiadds
in
inc
push
negl
stos
pop
fsubrp
ret
dec
lods
lds
fiaddl
fsubs
lret
or
jo
lock
aad
lret
cmp
aad
popa
jp
aad
stos
xlat
popa
adc
lahf
shr
mov
jno
or
xor
outsl
imul
jge
cmp
popa
push
test
dec
cmpsl
add
hlt
push
hlt
mov
mov
lret
pushf
pushf
ja
inc
mov
inc
mov
inc
sarl
lods
xor
mov
icebp
bound
mov
sahf
mov
sub
pop
xor
jae
sub
mov
inc
cmp
inc
pop
fnsave
inc
add
shrl
push
xor
push
or
pop
cs
call
ret
mov
ffree
pop
push
push
jo
stc
jecxz
clc
sahf
mov
cmpsb
pushf
mov
mov
mov
add
push
push
adc
push
xchg
test
sub
int
xchg
rcr
mov
push
aad
jg
arpl
addr16
mov
cld
inc
or
sub
sub
mov
push
inc
mov
notl
test
es
insl
xor
xchg
rcrl
sbb
xor
cmp
xor
dec
jecxz
aaa
mov
fadds
add
jbe
sbb
dec
pushf
bound
lcall
fs
clc
and
jmp
pushf
sub
push
and
jge
cwtl
cltd
xor
mov
push
addr16
outsl
pop
int3
mov
pop
push
ret
mov
js
adc
faddl
or
in
and
icebp
or
adc
lods
push
jmp
pop
faddp
setg
das
addr16
ret
movsb
jl
push
mov
ficompl
cmp
pop
dec
inc
aaa
push
scas
repz
out
popf
pop
ljmp
xor
xor
jecxz
xor
sahf
lock
ror
cmp
es
jle
sub
pop
loopne
cmc
pushf
sub
in
sub
xor
icebp
and
add
push
outsl
sbb
in
add
lods
jo
sbb
loope
xorb
mov
loopne
fdivr
test
rclb
sbb
in
enter
movsl
mov
dec
divb
inc
jb
jb
lret
ljmp
fwait
popa
pop
fwait
adc
and
sbbb
nop
ret
mov
jl
xchg
stos
adc
push
data16
out
sbb
inc
pusha
add
push
mov
ljmp
jecxz
fiadds
push
popf
imul
jecxz
movsl
xor
xor
and
je
and
movsl
out
orb
push
xor
or
orl
jno
adc
mov
add
adc
jnp
shlb
filds
int
xchg
nop
clc
sbb
rcrb
test
dec
jle
push
xchg
inc
sbb
outsb
jbe
cmp
loope
and
lds
pop
sub
xchg
ds
dec
mov
xchg
lret
xlat
fiadds
outsl
negb
fwait
mov
cmp
push
call
gs
xchg
shl
push
lret
and
sub
aaa
imul
cmpsl
xchg
test
sbb
arpl
sbb
loopne
xor
icebp
insl
push
push
mov
in
push
jle
dec
addr16
pushl
push
fisubrs
movsb
je
push
jae
lea
cmp
enter
sub
push
mov
shrb
fidivs
ficomps
push
push
push
js
rcrl
xor
lret
lds
fists
pop
orl
mov
or
jg
fbld
inc
pop
sub
data16
cmpsb
xor
mov
mov
push
mov
dec
dec
pushf
aas
jne
shrl
mov
or
js
icebp
sbb
xchg
mov
xor
inc
and
movsl
pop
popf
adc
jns
mov
ds
fimuls
sub
dec
mov
div
shr
inc
int3
jns
and
cmpsb
repnz
cwtl
and
daa
inc
fmull
rol
roll
scas
push
out
pop
or
fprem
mov
cmp
popf
hlt
and
push
mov
je
pop
aad
outsl
pop
add
pushf
xorl
sub
adc
inc
adc
enter
pusha
into
pop
test
popl
lret
dec
push
lds
xor
imul
and
es
xlat
adc
test
movsl
fmull
shrb
pop
scas
xchg
inc
fmull
les
rcrl
data16
push
cmp
es
push
stos
out
ret
jmp
aas
and
jge
test
pop
insb
xlat
inc
std
xor
les
sar
xor
packssdw
and
mov
aam
aad
ret
mov
mov
xchg
test
clc
adc
mov
dec
pop
mov
inc
and
test
subl
and
nop
push
or
call
push
xor
insl
movsb
xchg
fucomip
rcrb
mov
push
ficompl
fwait
fwait
cmpsl
outsl
cmc
outsl
fstl
sar
cmpsb
in
mov
push
aam
roll
mov
loopne
arpl
leave
mov
clc
insb
mov
call
mov
xrelease
data16
test
or
jge
repnz
push
leave
jl
cwtl
add
leave
push
and
pop
fstps
in
outsb
aad
mov
and
data16
mov
push
push
fwait
dec
cld
jmp
jmp
aas
inc
sahf
pop
popf
jp
jnp
xchg
mov
sbb
lock
fadds
test
jle
daa
aas
adc
xor
lods
jmp
mov
adc
inc
cmpsl
adc
movsb
xchg
push
aam
incb
and
dec
dec
out
push
xlat
dec
repz
test
mul
out
inc
popf
fnstenv
stos
ss
lcall
loopne
and
cmp
jnp
sub
xor
aam
out
pop
fcomps
sub
cmp
loopne
dec
mov
jns
push
mov
cmp
outsl
test
lcall
subl
add
pop
test
in
pop
mov
sahf
das
arpl
outsb
hlt
jns
push
dec
fidivl
xor
lcall
xchg
add
xchg
and
aam
sti
mov
add
jne
push
xchg
push
mov
mov
iret
or
jg
pusha
or
fwait
nop
out
jo
dec
out
lea
dec
outsb
loope
pop
cld
dec
xor
test
inc
pop
inc
insl
aam
daa
hlt
mov
jecxz
mov
imul
push
dec
arpl
rcl
cmp
loop
stos
cmpsb
cmp
jmp
adcl
sbb
outsl
jle
jns
or
mov
mov
jno
mov
cltd
xchg
clc
sub
int
inc
lahf
jg
mov
inc
fwait
std
mov
test
divb
sbb
xor
daa
jp
enter
ds
outsb
push
mov
inc
fstpt
adc
stc
cld
inc
and
mov
or
cmp
and
push
enter
insb
sbb
fs
mov
repz
jp
xchg
mov
pusha
loope
and
cli
cmp
out
and
add
or
mov
mov
push
out
mov
sub
scas
xchg
imul
pop
or
sub
ss
fnstenv
jo
jae
shr
jg
icebp
and
bound
and
cmpsl
sar
mov
fsubr
sbb
mov
aam
mov
pop
pop
jne
gs
or
push
lods
sub
adc
repnz
jmp
inc
insl
cmp
pusha
ds
mov
mov
addr16
fsts
jbe
xchg
cmp
mov
insb
inc
sbb
es
fwait
cld
xor
cmp
add
roll
addr16
int
sbbb
xchg
mov
arpl
adc
lea
ss
dec
or
mov
xor
imul
stos
cmpsb
mov
or
les
enter
pusha
inc
pop
loope
sti
dec
bound
push
pop
sti
push
gs
dec
mov
arpl
std
dec
cmp
jl
fbstp
inc
mov
in
inc
mov
mov
dec
jmp
add
mov
pop
jle
imul
and
pop
cmp
mov
jmp
cmp
aad
or
dec
push
fadds
sar
mov
cmp
aaa
fdivr
lret
jbe
push
mov
mov
arpl
xor
insb
jl
dec
jecxz
or
adc
adc
inc
sarl
inc
dec
pop
pop
cli
jnp
stos
mov
sub
cmp
adc
mov
push
or
fistpl
pop
xchg
inc
in
pop
sahf
lods
push
mov
and
pop
inc
mov
add
mov
lret
stos
pusha
and
pop
int3
fcomps
and
lret
movsl
aam
cmp
cwtl
movb
test
or
cmp
les
xor
movsb
push
mov
add
rcll
jecxz
inc
movsb
push
out
mov
xlat
mov
dec
pop
insb
fstpt
cs
xchg
popf
mov
mov
les
dec
test
popf
aas
in
pop
sbb
fwait
mov
insl
push
fmull
aam
push
push
jle
mov
stc
lahf
and
mov
push
aam
jmp
xchg
movsb
mov
xchg
inc
sub
leave
adc
xlat
xor
xor
jecxz
xor
call
stc
or
xchg
xlat
iret
out
add
into
icebp
mov
xchg
pop
mov
sahf
push
scas
sahf
inc
adc
fmuls
push
and
adc
push
out
push
imul
ja
adc
outsb
xor
sti
and
cmpsl
pop
xchg
adc
cld
adc
pop
add
pop
jg
call
mov
add
sub
ja
in
add
into
and
insb
arpl
loopne
int
xchg
jecxz
jmp
jnp
jns
addl
lcall
push
sahf
daa
sbb
push
das
pop
rol
xchg
dec
mov
insl
cli
test
push
adc
push
or
sbb
cmp
in
cmc
movsb
adc
adc
cmpsl
cltd
sbb
or
cmp
std
or
rorl
add
mov
push
into
push
sar
mov
lock
mov
jns
shrb
sbb
repnz
repz
inc
mov
fst
jae
jno
mov
lret
pop
sbb
jecxz
mov
imull
ret
ss
aam
lock
int3
fcmove
aas
xlat
mov
xchg
or
mov
xchg
inc
xchg
sub
xchg
inc
out
sti
inc
inc
iret
pushf
lahf
inc
adc
mov
jbe
xlat
sbb
cmp
bound
ja
xlat
scas
fstl
imul
ds
mov
test
enter
iret
cmp
dec
jmp
mov
cmc
and
mulb
enter
mov
sti
mov
xchg
int3
cmp
inc
mov
insl
mov
or
fs
push
movsl
mov
fisubl
outsl
lods
addr16
push
popf
add
pop
fst
adc
jle
mov
sub
mov
cmp
rclb
lea
mov
imul
stos
jecxz,pn
xchg
fwait
test
mov
jle
xchg
pusha
and
dec
inc
sbb
jecxz
lcall
pop
addr16
scas
ret
shrl
push
xchg
iret
cwtl
or
nop
push
sti
shl
in
mov
fimuls
mov
scas
sbb
mov
rorb
in
gs
xchg
cs
mov
mov
stc
sub
test
sbb
dec
scas
adcl
fwait
test
xlat
faddl
mov
andb
xor
adc
mov
ret
push
push
cmp
and
aas
or
dec
push
lods
pop
push
or
adc
ret
shrb
iret
mov
das
in
scas
lds
lea
test
or
push
mov
sub
pop
pop
mov
scas
rolb
clc
ds
jecxz
stos
mov
repz
pushf
or
mov
std
fldt
adc
jno
pop
cmp
sbb
add
pop
stos
pop
push
je
stos
sub
shl
and
or
adc
adc
test
daa
mov
xchg
cmpb
jbe
arpl
xor
xchg
fnstcw
or
push
mov
inc
mov
out
xchg
push
dec
adc
shl
movsl
sahf
in
sti
jle
das
subb
ret
dec
pop
mov
shr
jns
dec
lcall
or
add
jmp
mov
cmp
gs
jae
cwtl
jb
pop
lcall
mov
sub
sub
and
stc
jbe
test
xor
mov
stos
adc
scas
mov
notb
daa
nop
mov
mov
push
rorl
int3
int
lock
mov
icebp
insb
mov
add
xchg
mov
mov
cmpsl
jle
out
mov
xchg
sub
mov
scas
dec
into
mov
in
fs
int3
test
pop
xchg
mov
sub
lahf
mov
inc
pop
xchg
adc
mov
lods
inc
lret
imul
outsl
jne
leave
cltd
pop
jle
push
ss
inc
ss
xchg
scas
fldt
sub
into
dec
push
dec
cwtl
sti
mov
dec
in
mov
push
push
and
aad
bound
movsb
mov
int
mov
jecxz
nop
adcb
cmp
adc
adc
xlat
icebp
lods
jmp
ljmp
mov
insl
pop
jb
in
and
inc
repz
lock
cltd
pxor
lea
mov
or
pusha
in
or
jle
mov
ljmp
xchg
sbb
daa
sahf
sbb
scas
fwait
jb
leave
xlat
bnd
push
pop
or
add
dec
fs
xor
mov
rorl
xchg
xorl
das
clc
ljmp
mov
inc
dec
mulb
aaa
dec
or
xor
cmp
les
ja
xchg
sbb
push
lods
out
mov
mov
mov
jae
inc
pop
mov
movsb
sbb
jb
adc
sbb
test
mov
dec
loop
aad
xchg
stos
mov
xchg
sbb
pop
loopne
aaa
xor
push
cmp
cltd
repnz
and
leave
pop
cmp
pop
push
dec
repnz
shlb
dec
cmp
pop
inc
movsw
fucomip
xchg
jmp
push
leave
jecxz
cmc
push
std
xchg
je
mov
stos
sti
mov
scas
adc
inc
cmp
out
fucomp
rcl
or
leave
cmp
loop
sub
mov
in
inc
call
test
xchg
mov
pop
mov
jg
lock
popa
pop
pop
sub
rol
xor
lahf
out
fcomps
insl
rclb
fxch
mov
jno
xor
int3
cmp
adc
push
fisttps
jge
xchg
adc
test
pop
xor
mov
mov
xchg
pop
push
test
outsl
push
shll
cmp
jno
stos
xchg
xor
xchg
sub
les
mov
add
out
xacquire
shll
adc
add
je
test
jmp
out
sub
ds
js
mov
ret
imul
orl
lahf
imul
pop
dec
test
dec
cmp
in
push
pop
dec
xchg
call
or
push
mov
testl
outsl
mov
pop
adc
jle
add
mov
fidivl
aam
lret
out
cmpb
leave
add
adc
inc
outsb
adc
jle
aas
dec
or
xor
out
sbbl
test
sub
cmp
push
enter
xor
inc
arpl
or
add
in
das
ret
mov
jnp
fisubrl
push
sarl
andl
frstor
xor
cmpsl
add
xchg
in
and
xorb
out
rclb
or
add
bound
or
inc
cwtl
push
leave
adc
ret
mov
xor
repz
jbe
inc
js
jle
adc
add
fdivs
cmp
jl
lcall
in
das
mov
jmp
ljmp
gs
fdivp
out
xchg
int3
stos
dec
mov
popf
add
loop
outsl
mov
iret
sub
dec
out
inc
adc
iret
inc
cltd
out
icebp
inc
or
xor
pop
ret
push
pop
fsubs
mov
popa
nop
cltd
mov
jle
mov
inc
cli
imul
js
notb
push
sub
mov
cmp
lcall
mov
mov
sub
sub
lds
xchg
fistpl
push
js
or
iret
or
into
jne
pop
loopne
stos
ficoms
xchg
xchg
add
pop
push
jns
or
rcrl
into
and
cmp
loopne
and
negb
dec
and
mov
pop
addr16
sbb
in
jo
pop
iret
leave
xor
imul
cmp
shlb
stos
sbb
lahf
rcrb
add
mov
push
push
cld
test
sub
fsubl
in
and
jp
imul
xchg
negb
cmpsb
add
ds
cs
rolb
add
daa
out
lret
and
jle
insb
and
mov
mov
mov
jb
ljmp
popa
fnstcw
inc
pop
jg
xchg
shll
cmp
aam
sub
rcrb
movsl
mov
cmpsb
pusha
add
clc
xor
in
fisttpll
sbb
jl
add
pop
scas
ljmp
data16
fadd
mov
add
xchg
stos
push
leave
xchg
mov
xchg
or
or
cltd
inc
rcr
mov
or
test
rcrl
testb
xchg
and
mov
je
push
icebp
mov
sub
cli
out
mov
enter
sti
sbb
cmpsb
xor
je
fistpll
mov
mov
lahf
mov
jp
push
add
push
xor
ss
lods
pushf
push
pop
repz
and
loope
ret
inc
mov
mov
insl
inc
es
lahf
in
pop
std
outsl
je
dec
popf
adc
mov
fmull
xor
imul
jmp
cmp
pop
fadd
and
or
mov
jg
mov
cmp
sti
jns
xor
outsl
stos
gs
das
xor
add
roll
xchg
pop
sbb
push
addb
inc
fiaddl
sbb
and
shrb
imulb
in
fdivl
out
pop
es
fsub
mov
addl
dec
or
icebp
push
jnp
lds
lods
cmp
jo
pushf
dec
cmp
adc
leave
mov
mov
mov
enter
fs
jb
push
fwait
loope
fdivs
jns
add
or
jg
jb
loope
add
sub
push
cmc
loopne
nop
push
push
cmp
out
iret
sub
mov
lods
dec
je
pop
jnp
fimull
cld
jp
sahf
push
rcrb
xchg
hlt
inc
pop
and
push
mov
xor
lods
pop
testl
jno
pushf
adc
lods
jmp
sti
xor
in
or
lds
call
push
iret
jb
aas
mov
dec
in
aam
enter
pop
loopne
into
jo
loop
push
lock
jge
sub
fwait
shrb
cltd
arpl
pusha
mov
add
push
movd
fwait
add
movsb
and
pusha
inc
push
and
sub
std
repz
ret
xchg
jmp
pop
dec
mov
ja
push
and
push
xor
mov
ficompl
adc
mov
call
xor
and
pop
lret
in
vpminsw
hlt
mov
lods
cmp
dec
jl
lahf
test
imul
jge
mov
je
roll
repnz
xchg
and
mov
add
jb
mov
fldl2e
in
das
bound
lcall
lock
cmp
jmp
sub
push
jl
pop
bnd
lea
mov
jmp
lcall
push
jl
adc
cmp
push
push
push
fisubrs
xchg
bound
scas
sub
add
cld
xor
imul
mov
outsl
jb
scas
mov
enter
std
pop
dec
mov
scas
dec
inc
cmp
lahf
aas
pop
out
xchg
sbbl
cmp
inc
xchg
js
adc
inc
xor
inc
push
jns
push
mov
xchg
repnz
inc
sarb
loop
fisttpl
sub
cli
adc
out
mov
mov
aam
shlb
mov
inc
dec
or
and
adc
mov
sbb
mov
adc
mov
pop
rcrl
and
arpl
popa
inc
notb
sahf
add
mov
fisubs
xchg
int3
push
pop
sbb
adc
add
test
sti
sti
jae
mov
pop
std
xchg
lahf
xchg
shll
pop
subl
add
fsubl
cmp
popf
insb
xchg
xchg
cwtl
and
leave
pop
lcall
das
or
jp
jle
fnstcw
test
lds
dec
shll
or
inc
or
fmull
stc
sub
jo
fwait
or
inc
sub
inc
or
or
ja
and
add
fcoms
insl
push
push
lods
clc
lods
fldcw
push
scas
xor
push
and
cmp
stc
or
adc
push
data16
jbe
mov
fwait
mov
inc
mov
lods
mov
stos
or
mov
mov
lret
ror
cmp
dec
lea
mov
push
andl
push
xchg
out
in
pop
test
xchg
inc
je
or
or
dec
push
imul
fs
dec
std
adc
gs
movl
leave
pop
pop
sbb
xor
faddl
fsts
fldenv
pop
xor
imul
arpl
repnz
aam
shll
rorl
xchg
and
inc
js
jp
dec
lret
xor
and
aas
test
jle
sbb
inc
add
adc
adc
adc
push
rcrb
pop
jae
js
jns
shl
push
cmpsb
adc
jno
aaa
push
mov
pushf
ljmp
mov
xchg
ja
hlt
in
mov
mov
fbld
out
jno
mov
mov
aaa
mov
xchg
jmp
dec
outsl
sbb
rcll
jl
mov
dec
mov
aaa
out
leave
adc
and
not
inc
mov
mov
les
cmc
stos
inc
adc
rcll
or
ret
mov
fidivl
add
xchg
adc
xchg
nop
inc
icebp
fidivs
out
sahf
push
sbb
sub
xor
cld
lea
sbb
dec
xlat
in
sub
pop
out
and
xor
add
fwait
mov
mov
mov
mov
pusha
aam
adc
mov
lds
push
std
hlt
out
imul
xchg
xorb
mov
test
stos
cwtl
test
inc
lea
rcll
mov
cmp
cmp
js
xlat
inc
fcomp
sub
icebp
cmp
mov
out
int3
aam
dec
push
lods
jo
les
adc
cmp
sub
jo,pn
fwait
pop
xor
shlb
sbb
into
cmp
fdiv
push
mov
pusha
das
sbb
or
insl
rorb
sub
in
cmpsb
sbb
pop
pop
aad
inc
cmpsl
out
inc
push
mov
xchg
jbe
movsb
mov
lods
add
and
call
insl
lock
jl
fwait
xchg
dec
lret
sbb
jae
pop
or
pop
ds
xchg
addr16
sub
dec
xchg
mov
xor
pop
insl
adcb
mov
les
mov
mov
sub
test
stc
cmp
lods
sbb
lret
adc
jl
adc
adc
adcb
aad
push
pop
cmpsl
sbb
jae
and
xchg
sbb
and
adc
std
or
sbb
or
lock
pusha
xchg
lret
and
sub
shlb
int3
sub
xchg
stc
stos
push
sub
iret
jns
cli
xchg
loop
icebp
lahf
sbb
pop
mov
pop
repnz
adc
arpl
jae,pn
mov
test
out
arpl
mov
mov
fbstp
ficomps
scas
mov
cs
shll
pop
fcom
pop
push
addr16
loope
push
jnp
push
mov
mov
mov
movsb
adc
daa
mov
mov
ss
mov
pop
jp
cli
lods
push
jb
dec
xchg
fs
scas
mov
lods
adc
or
rcrb
pop
je
fildl
push
shl
in
fsubl
scas
mov
and
or
imul
xchg
or
addb
repnz
xchg
pop
inc
enter
mov
inc
jae
ja
loop
ret
inc
out
outsb
shll
mov
jne
leave
or
jecxz
in
shll
mov
push
inc
pop
cld
jae
mov
mov
cs
xor
sub
outsl
sub
xor
clc
call
sbb
dec
mov
xor
stos
mov
mov
dec
js
cmp
bnd
add
adc
into
xchg
iret
lahf
adc
dec
sbb
in
out
les
int
out
pop
popl
cmp
rcl
xorb
inc
dec
inc
repnz
xchg
xchg
iret
idivl
out
mov
into
in
sub
es
mov
das
and
cmp
jns
adc
push
loopne
popw
mov
mov
dec
and
push
arpl
rorb
sub
ljmp
dec
arpl
sub
xorb
pop
inc
jmp
fbstp
jb
fists
movl
ja
cmp
imul
mov
into
xor
xchg
sbb
in
dec
data16
bnd
add
xchg
aas
fwait
outsl
int3
sbb
out
mov
cmp
and
jl
inc
jno
cmp
and
lds
shl
push
repnz
neg
sub
es
mov
cmp
test
mov
add
pushf
add
mov
sahf
sbb
and
mov
lret
cmp
xchg
sbb
mov
mov
mov
cmp
addl
sahf
in
cmpb
sbb
movsl
lock
inc
outsb
or
add
pop
mov
add
popf
iret
sub
jae
jl
call
pop
subl
xchg
insl
pushf
jmp
xor
not
cmpsb
jb
aad
in
movb
sbb
add
mov
fwait
or
sub
pop
sarb
nop
call
cmp
push
pop
in
push
mov
jge
pusha
xchg
dec
movsb
mov
sbb
ret
aaa
lea
mov
popf
sahf
hlt
stc
pop
pop
fs
and
dec
xchg
outsb
pop
in
int
sarb
cmp
mov
jb
add
mov
xchg
fs
sbb
orl
xor
scas
push
mov
int
lahf
gs
aad
lds
daa
dec
mov
andb
sub
lea
stos
imul
je
xchg
mov
imul
ds
sbbl
dec
jbe
divb
lock
out
out
pop
mov
jo
dec
lcall
push
jno
jbe
shlb
sbb
mov
js
or
xor
sub
les
movsb
int3
sahf
into
sbb
outsb
mov
out
icebp
stc
pop
fsts
dec
dec
pop
inc
rcrb
pop
add
mov
pushf
roll
jp
mov
push
add
int3
mov
out
ss
dec
add
lret
cwtl
je
pop
jo
xchg
dec
hlt
jge
sub
or
rcrb
call
xor
andl
dec
imul
push
sbb
jo
enter
add
mov
cld
sub
lret
test
pcmpeqw
inc
mov
dec
add
inc
jmp
pop
sub
lock
rclb
imul
mov
idivl
or
jnp
add
and
and
push
shll
mov
aam
mov
and
xor
or
push
mov
xor
into
pushf
cmpsb
mov
fs
mov
popf
xchg
into
jmp
inc
pop
inc
aaa
mov
and
push
orl
scas
dec
dec
in
jno
lods
sub
jne
mov
nop
xchg
jb
shufps
sbb
shlb
xor
into
dec
rolb
xchg
xchg
add
push
lock
push
lahf
gs
push
inc
sub
pop
std
pop
movsl
inc
push
add
dec
shrb
push
cmp
sub
cli
cmpsb
mov
add
in
and
adc
or
aaa
jle
jae
rcll
dec
adc
pop
mov
fisubs
sub
xchg
fnstenv
pop
add
dec
gs
bound
push
mov
out
pop
cmp
sbbb
jne
in
lret
inc
inc
mov
clc
cmc
movsl
fwait
add
outsl
push
aas
xor
cs
xchg
fisubrs
push
test
mov
pop
sbb
mov
cmc
sub
jle
mov
aam
lcall
and
stos
imul
ja
bnd
test
pop
pop
add
cmp
dec
ljmp
push
or
inc
add
lahf
test
jns
fnsave
mov
ror
sbb
imull
pop
outsl
repnz
sbb
lret
xchg
addr16
js
and
testb
cmp
rolb
aam
ja
cmp
sahf
into
pop
mov
push
xor
sbb
mov
out
loopne
shll
jns
pop
pop
insb
add
sub
adc
push
lock
xor
mov
xor
push
adc
imull
in
or
mov
popf
test
inc
cmp
es
lds
idivb
popf
push
movsl
in
outsl
mov
lods
test
add
xchg
xchg
push
mov
loop
imul
mov
add
and
jmp
jge
icebp
dec
popf
mov
and
mov
xor
xchg
cwtl
scas
loop
push
loope
jmp
xchg
leave
leave
das
sbb
repnz
aas
in
ficoms
lods
cli
cmpsl
push
pop
mov
cmc
rcrb
mov
add
cmp
push
int
adc
in
mov
jge
lcall
push
arpl
mov
insl
pusha
or
cmp
popa
sbb
test
fiadds
push
adc
jmp
leave
insl
es
iret
lock
or
ljmp
stos
lods
arpl
mov
outsb
jl
std
ret
sub
addr16
shrb
add
mov
in
xchg
pop
inc
fmul
arpl
faddl
xor
xchg
xchg
int
outsb
add
push
popf
loopne
decb
push
jae
sahf
jnp
cmpsb
ljmp
mov
mov
enter
mov
popa
cmpl
sub
xor
sub
insb
dec
mov
dec
stc
jno
sub
rclb
cmpsl
outsl
sbb
or
mov
bound
sub
sub
and
dec
jns
fwait
enter
mov
leave
sub
scas
in
fldt
cltd
shl
adc
cmp
addr16
or
sub
outsb
adc
adc
sahf
sub
jecxz
and
and
jbe
clc
jno
je
imul
mov
jno
sub
sub
and
hlt
popf
add
cmp
jp
into
mov
sbb
xchg
out
stc
inc
mov
insb
inc
leave
xchg
into
xor
inc
cli
mov
movsb
test
pop
pop
jp
or
daa
mov
mov
test
inc
rorb
mov
mov
xor
sub
pop
mov
adc
outsb
faddp
pop
pusha
inc
add
ret
jge
mov
es
add
mov
lcall
xchg
xor
sbbl
enter
insb
test
popf
dec
jmp
dec
mov
jl
fcoml
mov
aaa
sbb
stos
lods
mov
cli
pop
jle
pop
cmpsl
xor
jb
add
out
icebp
int
mov
in
fldt
jl
sub
iret
aas
sub
out
pop
push
repz
fadd
rorl
mov
mov
cmc
or
ljmp
mov
lret
adc
jmp
dec
dec
int3
out
lods
add
loope
mov
repz
jecxz
stos
fnstenv
cli
or
dec
fucomip
adc
inc
add
xchg
push
outsb
mov
aas
cmp
inc
mov
in
pop
and
clc
or
mov
imul
imul
jbe
mov
or
push
pop
sub
jae
call
jns
lret
add
add
mov
sub
je
pusha
xchg
mov
shll
mov
push
pusha
sbbl
pop
inc
pop
or
mov
mov
in
xorb
sbb
aaa
call
sbb
test
xchg
jb
pop
ret
mov
stos
mov
lcall
lret
fisttpll
xchg
int
std
inc
push
or
xchg
dec
int3
lock
notl
shll
sbb
test
aad
mov
imulb
sub
mov
imul
pop
cmc
push
data16
adc
xchg
push
out
test
cmp
out
cli
test
adc
pusha
addb
mov
popf
adc
stos
popf
adc
mov
cld
shl
iret
inc
sub
orl
jle
xor
cwtl
popf
sbb
clc
sub
xchg
push
and
ret
pop
pop
loopne
add
pop
adc
pop
jge,pn
lcall
dec
mov
lock
add
or
add
inc
sub
mov
pop
sub
pop
popl
push
sbb
pop
jl
jmp
jne
insb
push
mov
mov
mov
dec
loopne,pt
push
xchg
std
xchg
in
sub
mov
push
or
jno
xchg
jmp
scas
in
inc
mov
jecxz
or
xor
xor
xor
lods
add
cld
adc
cwtl
stos
icebp
inc
div
jno
loope
sbb
cmp
inc
gs
xchg
push
pop
cmp
cmp
ds
out
xchg
test
push
mov
pop
push
js
movsb
xor
stos
popa
mov
addr16
push
jecxz
cli
ret
outsl
push
cltd
adcb
dec
inc
mov
pusha
testl
jg
dec
sbb
xorl
lcall
mull
inc
leave
insl
inc
mov
or
adc
sbb
pop
cmp
stc
mov
lret
scas
out
repnz
mov
sub
int3
cwtl
lcall
popf
mov
jmp
cmpsb
jecxz
lea
jb
cmp
push
push
ret
xor
cmp
pop
jo
std
mov
add
insb
and
int3
das
cltd
movsbl
cmp
push
gs
dec
mov
popa
bound
or
cwtl
jl
push
add
lret
addr16
cs
inc
adc
or
rorl
scas
mov
mov
popa
sub
pop
inc
lea
mov
out
test
cmpsl
scas
lret
rclb
and
push
push
jns
movl
pop
out
jmp
test
ret
sub
xchg
adc
adc
divl
dec
in
inc
push
jb
iret
xor
mov
rclb
rorl
repnz
and
jle
movsb
push
loope
sbb
stos
fmull
push
fsubrs
mov
mov
pop
lahf
or
push
dec
inc
sbb
add
jbe
popa
adcb
jp
pusha
stos
insb
loope
das
push
cmp
adc
repz
dec
shll
mov
push
out
mov
lahf
aad
dec
mov
jnp
pop
adc
jbe
adc
dec
jecxz
int3
lods
lods
mov
sti
mov
mov
lcall
pop
fdivrs
jg
add
mov
mov
pop
js
add
setae
or
xchg
push
int
jns
je
push
in
and
mov
inc
ds
ret
lcall
cmpsb
mov
mov
shll
push
aas
xchg
lahf
cmc
inc
scas
xor
adc
jo
pop
clc
idivl
jae
out
xchg
push
mov
ret
jae
push
pop
insl
incl
sub
iret
mov
loopne
cltd
push
out
push
frstor
test
cmp
inc
lds
out
dec
jg
call
mov
sarb
aas
cs
sbb
mov
or
or
arpl
aaa
scas
in
lock
xchg
add
xor
sbb
xor
xor
mov
in
inc
cmp
cmc
inc
mov
sbb
sub
xchg
xor
movsb
jmp
test
iret
js
mov
cmp
je
es
inc
fists
xchg
and
cmp
lods
push
rcrb
js
ja
push
and
lods
insl
shld
and
xchg
out
add
mov
dec
mov
jo
mov
insb
mov
cmpsb
les
mov
mov
xor
xchg
mov
sub
mov
mov
cmpl
jecxz
push
sub
pusha
lret
movb
call
adc
shl
sub
loopne
movsb
jbe
sbb
mov
stos
cmc
sbb
inc
inc
push
sub
jae
das
or
jns
fistpl
mov
imul
cmp
jge
int3
stos
dec
pop
inc
in
mov
sbb
adc
xchg
filds
sbb
sbb
cld
xchg
cmp
data16
repz
int3
shlb
outsl
dec
push
int
rorb
aaa
aad
add
mov
pop
xorl
test
mov
lret
out
loopne
xor
adc
ficoms
nop
sub
dec
icebp
daa
pop
jl
into
cltd
mov
clc
cmp
jb
test
nop
jg
fwait
ss
jns
ret
fstl
pop
fdiv
lock
ret
mov
mov
and
sbbb
xchg
ss
test
mov
or
add
cmp
rcrb
jae
jb
pop
cld
fldenv
stos
pop
sti
add
call
and
push
lret
sub
xor
xchg
adc
imul
and
mov
shll
divl
mov
ja
scas
std
fistpl
or
xchg
repz
inc
jae
bnd
lcall
or
push
pusha
std
daa
xor
cmc
les
lcall
xchg
jmp
shlb
out
andb
icebp
int
mov
inc
cltd
call
dec
xor
push
stos
dec
cmp
imul
into
adc
lods
adc
jmp
in
adc
cwtl
push
cmpsb
or
cld
dec
push
cwtl
notb
mov
out
sub
mov
inc
aaa
cmpsb
mov
jae
and
popf
mov
andl
add
mov
lock
sahf
jecxz
jle
cmpsl
repz
lods
les
inc
jg
lods
out
jp
add
jg
imul
sbb
test
call
fidivs
shll
pop
into
outsb
mov
les
dec
sub
mov
in
sar
or
adc
adc
repnz
outsl
rol
add
subb
mov
and
test
xchg
mov
into
shll
xor
enter
add
movsb
arpl
push
jbe
or
rolb
icebp
xor
mov
push
inc
mov
jge
cld
cwtl
adc
sub
add
fcomps
in
in
test
adc
aam
pop
jb
pop
inc
fcmovb
sbb
test
push
out
or
mov
mov
sub
jp
xlat
push
mov
lret
sub
aas
test
cwtl
mov
loop
push
mov
addr16
or
or
dec
or
push
jbe
lret
cmp
mov
sbb
mov
xchg
and
data16
test
std
push
sti
ss
jecxz
dec
inc
lods
xlat
out
addr16
fcompl
xor
out
out
xorl
mov
push
jo
jmp
jmp
pushf
sbb
aad
sub
call
mov
xor
es
cmp
pop
jb
int
in
cmp
daa
dec
cli
cmp
lcall
scas
ret
out
and
mov
xchg
adc
je
pop
ss
pop
test
mov
ret
push
sti
adc
mov
xorl
jbe
xor
movntq
dec
scas
scas
fwait
or
or
jmp
inc
xor
xchg
hlt
push
push
loopne
xchg
lds
sub
in
sbb
ret
lods
jecxz
adc
inc
movsl
sub
jns
fwait
push
test
les
jns
add
cwtl
das
jge
dec
ljmp
and
mov
push
not
cld
mov
adc
stc
xadd
call
pop
mov
fistps
ficomps
xchg
jnp
test
jge
mov
clc
xlat
popf
push
push
lods
and
or
les
add
mov
pop
adc
xchg
in
lods
jb
fwait
out
out
xor
push
inc
rcrl
divl
xlat
xchg
fstpl
outsl
shll
stos
inc
add
fmull
sbb
push
mov
mov
jle
fwait
cmp
xchg
leave
iret
push
pop
mov
fistpll
add
insl
loope
mov
out
mov
jb
scas
inc
pop
test
sbb
push
sub
sub
clc
iret
mov
sbb
lret
gs
imul
add
pop
popf
test
adc
lcall
sahf
jle
imul
xchg
leave
ds
notb
sub
adc
negl
and
pop
mov
mov
jg
inc
inc
out
arpl
insl
jl
cmp
lods
dec
pop
mov
pop
shll
fs
adc
movsb
pop
fiaddl
lcall
outsb
aad
xor
repz
fwait
cmpsl
into
pop
mov
mov
and
fdivl
mov
push
jbe
enter
push
mov
sub
insl
adc
jecxz
scas
dec
orb
add
mov
cmp
fcmovu
pop
inc
adc
sub
push
ljmp
push
lret
mov
mov
cli
iret
push
mov
pusha
add
popf
outsb
mov
jg
sbb
pop
inc
icebp
iret
inc
push
jle
push
mov
mov
adc
and
xchg
arpl
add
add
xor
mov
in
inc
fildl
sbb
out
and
pop
mov
adc
cmc
hlt
std
cmp
movsb
adc
out
xor
out
xor
lods
out
lret
adc
xor
fcoml
dec
inc
fists
mov
sahf
mov
dec
pop
sub
add
pop
aam
mov
inc
stos
sub
xchg
or
repz
xchg
jns,pt
pop
mov
or
repnz
xor
adcb
cmc
inc
push
inc
xchg
jmp
sbb
repnz
les
lret
ds
sbb
jp
fisubrl
inc
loopne
clc
push
test
movsl
pop
loop
ljmp
dec
icebp
or
cmp
fldl
cmc
insb
mov
inc
fstpt
or
xchg
mov
std
xor
mov
incb
jns
inc
mov
dec
pop
mov
ret
mov
sub
iret
jle
adc
fwait
lods
fnstenv
adc
dec
push
or
adc
cmp
iret
int
insl
push
dec
ret
lahf
mov
sbb
jae
clc
out
mov
dec
ret
and
shrb
xchg
jle
xchg
push
out
xchg
sub
xchg
mov
test
adc
ja
mov
ficoms
test
sbb
das
mov
or
cmp
jp
adcl
mov
in
lods
pop
mov
sbb
inc
sar
push
ja
out
adc
push
mov
pop
sub
jns
iret
fadds
das
mov
sbb
add
inc
jecxz
jns
out
cmpsb
ret
adc
repz
xchg
stos
aad
cmc
mov
lret
shlb
rcrb
or
stos
push
arpl
push
aad
mov
test
fwait
lock
jle
mov
pop
dec
cwtl
xchg
fwait
sub
sahf
mov
jg
stos
int3
mov
inc
inc
dec
lcall
fcomi
pop
jg
filds
pop
adcb
std
dec
fnstsw
jmp
in
pop
and
and
notb
mov
add
incl
cmpsb
icebp
das
or
outsb
sub
fidivl
jb
push
dec
xchg
stc
or
int3
outsl
dec
test
jge
mov
fidivs
lock
ljmp
add
xchg
xorl
popa
add
movsl
mov
mov
mov
lcall
hlt
mov
popa
insb
push
incb
shl
scas
lahf
xor
jbe
xchg
jbe
test
or
sub
into
or
mov
repnz
in
fcompl
loop
jae
sbb
rorl
push
lea
mov
mov
mov
mov
sub
xor
rcrl
push
xchg
movsl
xchg
ljmp
xor
inc
rol
inc
cmc
enter
and
dec
sub
add
lds
aaa
jae
jo
into
xchg
mov
inc
fimull
jno
jg
xchg
xor
inc
subb
mov
and
cmp
movsb
mov
fisttpll
sub
cwtl
sub
or
dec
pop
or
pop
fisttpl
in
jb
push
sbb
imul
lods
mov
lret
inc
lcall
dec
scas
cmpsl
dec
vmread
xor
es
cltd
jae
xchg
sti
pop
ja
push
or
into
mov
adc
push
in
and
mov
out
divl
mov
xchg
imul
sti
mov
sbb
outsb
in
test
orl
jne
out
xchg
mov
in
jne
daa
xor
push
pop
sarb
and
or
stc
inc
xchg
dec
into
lods
sbb
mov
sarl
gs
lods
rep
jg
and
fs
pop
or
int3
cmpsb
stos
test
hlt
push
xchg
or
mov
fldl
push
fistl
cs
test
or
xlat
xor
jnp
xor
push
pop
pop
or
in
sbb
sbb
lds
sbb
sub
adc
xchg
and
repz
ret
sbb
in
jp
and
xchg
lock
lods
mov
add
pop
sub
and
dec
cmp
insb
rclb
dec
dec
sub
ljmp
and
xchg
cld
mov
lock
dec
and
and
je
mov
mov
mov
ds
mov
gs
roll
xchg
jns
adcl
pop
or
pusha
mov
jle
imul
sbb
cs
push
movsl
pushf
outsl
outsb
push
lea
repnz
loope
cwtl
jae
lret
and
sbb
lods
dec
or
fmulp
repnz
in
addr16
divb
jp
and
pop
aad
pop
push
imul
pop
lea
jp
pop
int3
rolb
sbb
lret
repz
testl
ljmp
repnz
pop
or
int
div
xchg
cmp
adc
lods
xlat
mov
gs
mov
loope
imulb
imul
lea
sbb
xchg
dec
arpl
stc
out
popa
cmp
or
xchg
xlat
xchg
ret
lahf
or
sub
mov
aad
cs
inc
inc
mov
jne
les
jne
adc
xchg
xlat
inc
jbe
loop
stc
cwtl
dec
in
es
cmp
mov
sbb
cwtl
loopne
orb
adcl
cmpsl
xor
adc
es
pushf
pusha
rorl
cmp
fldenv
stc
imul
xchg
and
jmp
out
xchg
sbb
aad
popa
jecxz
mov
mov
and
fisubrs
cld
int3
outsl
cmp
outsl
xor
xchg
cmp
ljmp
lret
rcll
and
hlt
iret
cmc
add
and
or
mov
inc
lods
movsl
cmpsb
jbe
cltd
std
mov
aaa
stos
out
cmp
cmp
idivb
call
aaa
lods
addr16
arpl
xchg
mov
xchg
and
mov
jp
inc
add
jbe
lock
shr
mov
sub
or
pushf
mov
repz
adc
xchg
scas
push
ret
push
icebp
xchg
aam
icebp
lds
xchg
ficoms
sbb
and
pop
pop
outsl
sbb
lcall
into
pushf
not
dec
jmp
mov
sbb
sbbb
ror
mov
popf
mov
lods
sub
popa
lcall
adc
jge
dec
xchg
inc
outsl
out
or
ret
inc
sub
popf
pop
jnp
push
cs
and
push
idivb
fdiv
in
mov
push
add
in
stc
dec
mov
rcl
es
add
or
cmpsl
cltd
call
int
enter
pop
pop
adc
and
jecxz
sub
adc
pushf
or
lock
jecxz
adc
sub
ficoml
stc
xor
mov
mov
pop
gs
fdivr
dec
icebp
hlt
mov
mov
and
pop
pushf
adc
loope
push
pop
cmp
shrb
push
xchg
add
jp
stos
and
pop
push
lock
cmpsb
mov
push
mov
in
fisubrs
mov
fs
xlat
ss
push
scas
inc
sub
rcrb
inc
cmpb
pop
cmp
pusha
rorb
aaa
repz
mov
push
cli
push
xchg
push
adcl
cmp
retw
cmp
jl
push
push
inc
add
inc
les
lods
mov
jns
jbe
inc
test
cli
lahf
iret
in
fsub
and
dec
inc
icebp
aas
adc
pop
mov
jecxz
mov
fwait
pop
fdivrl
sub
pop
jns
notb
fs
stc
add
and
jp
fildll
mov
das
outsl
xlat
or
jo
jns
imul
in
dec
in
clc
aas
mov
add
or
popa
jecxz
cmpsb
rcr
out
loopne
ja
xchg
xor
movsl
out
sub
mov
jecxz
cmp
lret
insb
inc
scas
xorl
test
dec
xchg
add
les
xchg
mov
bts
push
mov
stc
stc
std
or
outsl
lret
mov
jbe
sub
scas
dec
sub
sbb
pop
cmpsb
cmp
add
test
pop
loope
test
das
mov
fists
fadd
xchg
xchg
push
aam
fwait
sub
insb
push
sti
push
ret
rcr
adc
lcall
and
jbe
sbb
std
outsb
mov
fadds
mov
mulb
cwtl
pop
sahf
adc
or
stos
fwait
lretw
outsl
inc
push
cmpsb
pop
lret
fnstsw
push
and
repz
mov
pop
push
aas
repz
mov
dec
fsubr
cltd
sub
dec
shlb
add
fisubrs
cmp
sub
sub
xchg
out
loopne
dec
jbe
hlt
adc
repnz
test
test
out
repz
aas
cmp
inc
dec
js
adc
inc
dec
bound
add
jae
pop
das
shl
out
cs
adc
xor
xor
lods
scas
inc
adc
mov
push
mov
testb
sbb
sbb
xor
jmp
cmp
aam
enter
into
xchg
inc
dec
xchg
push
aas
loop
adc
dec
sub
ret
aas
imul
fs
cmp
int
jg
add
ret
popa
mov
mov
mov
mov
cs
aaa
loopne
push
adc
jb
mov
arpl
pop
mov
push
cmp
lahf
sub
push
mov
jb
pushw
icebp
outsl
sarl
sti
mov
sbb
sbb
out
out
xor
adc
outsb
add
jg
mov
push
push
xchg
mov
add
dec
movsb
inc
mov
gs
jne
nop
or
mov
enter
popa
or
outsl
pop
in
dec
dec
dec
pop
xor
ret
ret
push
movsb
jbe
pop
cld
cltd
mov
sbb
dec
hlt
out
rcll
mov
in
mov
and
xchg
or
inc
sbb
insl
adc
sub
stos
repz
cmp
ds
inc
popa
icebp
int
outsb
push
aam
scas
jg
clc
push
xchg
or
testl
fidivs
lret
dec
mov
outsl
sbb
mov
mov
fmuls
insl
fldl
ret
mov
insl
sub
cmc
cmovae
pop
pop
inc
push
mov
ret
jo
arpl
rorb
lods
cmp
test
add
or
adc
jmp
inc
into
shr
data16
mov
push
mov
je
push
sbb
xor
push
pop
cmp
jle
mov
sbb
imul
flds
pop
push
fsubrl
scas
shrl
pop
sub
shl
push
mov
push
gs
xchg
push
cmp
sbb
out
nopl
xchg
imul
ljmp
maskmovq
imull
dec
or
gs
or
call
push
mov
jb
ja,pt
sahf
and
dec
scas
fsubrl
inc
repz
mov
adc
in
repz
mov
pop
decl
xchg
inc
cmp
fs
leave
xchg
out
insb
cmpl
ret
rcrl
adc
mov
dec
mov
ret
popa
aad
and
into
divl
pop
dec
dec
inc
lods
imul
insl
imul
push
rolb
mov
adc
insl
dec
mov
mov
leave
cmpsb
subb
push
aaa
xchg
mov
inc
mull
aam
xor
jecxz
sub
stos
sahf
andl
or
mov
xor
pop
rcrb
movsl
cmpsw
inc
test
sahf
popf
cmp
push
xor
xchg
or
in
lret
scas
inc
adc
pop
out
sbb
inc
jno
xchg
scas
ljmp
push
xlat
arpl
not
pop
les
mov
repnz
daa
pop
mov
mov
iret
hlt
sti
pop
lret
orl
push
mov
jecxz
jge
leave
fistpl
adc
push
insb
sbbb
or
arpl
pop
sub
and
sub
or
repnz
mov
xchg
xchg
xor
aad
push
scas
mov
jbe
orl
arpl
outsl
add
or
hlt
adc
notb
mov
mov
mov
sbb
cmc
cmpsl
sub
dec
push
jns
sbb
mov
add
xchg
fs
mov
cmp
mov
jb
nop
movl
js
jnp
ror
dec
movsl
bound
popf
pop
xchg
es
push
jae
fnsave
fisubrs
xchg
add
sbb
mov
popw
cmp
lds
xor
imul
pop
inc
sub
outsl
xor
and
repnz
xchg
daa
lret
cmp
scas
sbb
cmpsl
lret
lret
shrl
out
jno
dec
mov
les
jae
add
lock
push
je,pn
add
mov
fidivs
xor
push
push
jmp
pop
pop
or
inc
dec
sub
push
jg
pinsrw
orb
fistl
jne
xchg
fdivs
push
lock
popf
mov
shlb
jnp
mov
and
je
retw
loop
mov
in
sub
sbbl
adc
pop
add
cs
fdiv
lret
pop
imul
scas
in
unpcklps
addb
mov
fcmovnbe
or
or
enter
andb
xor
lret
adc
div
mov
sbb
lret
push
mov
jle
adc
inc
inc
mov
xor
jge
sahf
fcompl
push
adc
jne
popa
cmc
jg
mov
jmp
sbb
xchg
push
scas
jae
mov
inc
sub
inc
push
add
cmp
xchg
test
cmp
jno
daa
add
xor
pop
ret
loope
outsl
movsb
lea
sbb
lret
adc
push
aaa
xchg
mov
mov
nop
or
loop
arpl
lea
pop
mov
xor
jp
divps
idiv
sbb
gs
pop
xchg
scas
sub
idiv
jno
ret
or
add
inc
stos
into
xor
faddp
outsb
in
adc
aam
inc
inc
jmp
je
inc
jns
xor
cwtl
adc
sub
test
dec
stc
ret
icebp
pop
sub
into
les
mov
and
fisubrs
cwtl
cmp
rorl
pop
cltd
xor
jno
and
lahf
sub
add
cmp
jmp
sti
rcrb
lea
sbb
and
lods
daa
cmpsl
imul
in
and
scas
nop
dec
dec
or
and
pop
pop
andl
push
lret
loop
loopne
pop
mov
xor
pop
jmp
xchg
arpl
jl
into
lock
popa
leave
movsl
sahf
pop
pop
call
push
push
rcll
aaa
inc
or
jmp
cmp
iret
xchg
into
stos
popa
cltd
movsl
ret
dec
jmp
xor
jecxz
sbb
and
push
mov
jae
ret
xor
je
rcrb
popa
loopne
movsb
faddl
adc
in
rcll
sarl
ja
pop
faddl
aad
hlt
insb
fsubs
xlat
aaa
int
int
mov
dec
clc
scas
sbb
rcrb
lret
jl
xor
lock
mov
xor
or
xlat
jle
inc
mov
xchg
emms
int3
jg
xchg
cs
dec
outsl
inc
cmp
ficomps
mov
xor
mov
and
sub
shll
cltd
imul
cmp
out
inc
inc
fmull
push
xchg
aaa
mov
leave
pop
popa
fidivl
dec
je
pop
pop
cmpsb
je
scas
int
xor
or
jo
and
test
fildll
jg
push
xchg
jne
pop
ret
mov
daa
mov
mov
loopne
push
or
fisttpll
in
mov
aad
adc
ret
cmpsl
xor
test
xchg
inc
jl
add
repz
stc
add
push
sbbb
add
movb
addr16
imul
out
cltd
pop
pxor
outsb
nop
fcmovbe
pop
mov
out
dec
or
ficomps
xchg
jns
aam
push
test
xlat
fmul
adc
add
pop
pop
mov
add
or
les
lahf
sti
inc
jle
in
cld
lds
mov
pop
cld
cmp
stos
sbbl
and
inc
xor
cwtl
sub
jge
cmp
adc
imul
stos
mov
mov
dec
sub
or
loope
rorl
pop
test
pop
shr
sub
addr16
popa
inc
xor
jg
cmp
mov
loope
sub
push
inc
lock
pop
test
lret
cwtl
or
mov
mov
lds
nop
adc
fs
mov
pop
sbb
push
fistpll
shlb
add
in
inc
andb
push
insl
aam
dec
mov
addb
xchg
mov
xor
fmuls
jmp
scas
lea
ret
fs
icebp
push
movsb
dec
lahf
and
movsl
push
inc
sub
pop
pop
aad
mov
arpl
out
int3
fwait
scas
cmc
jl
add
ds
jnp
cli
pop
mov
jo
leave
pop
cwtl
sub
aad
lea
xchg
push
aas
xor
mov
sub
cs
shrl
ret
add
out
mov
ds
push
dec
test
cmp
ss
shr
clc
inc
xchg
xchg
push
repnz
xchg
xchg
push
xor
adc
lea
maxps
sbb
pop
movsl
push
push
pop
icebp
test
fwait
mov
sub
jne
push
and
fcoml
in
insb
ret
cmpsb
out
lds
std
int3
lcall
clc
mov
jge
fldl
fnstcw
out
pop
loop
mov
sbb
cltd
cltd
xor
sub
loope
test
and
jge
repnz
xor
pop
lods
loopne
lods
test
fsubl
mov
leave
sbb
push
not
lret
and
push
push
xchg
loopne
aad
aad
mov
mov
mov
in
mov
loopne
adcl
xchg
pusha
lds
js
enter
or
jecxz
add
inc
fildll
pop
loop
and
mov
and
and
ja
test
daa
in
sub
adc
jge
xchg
mov
test
rorb
mov
int
popa
mov
in
nop
mov
ret
mov
fs
mov
xchg
loop
out
lcall
mov
and
push
mov
lock
or
dec
push
lock
xchg
pushf
pop
fs
xchg
and
mov
add
mov
stos
add
insl
popf
into
jmp
mov
cld
pop
xchg
mov
ds
aad
dec
sub
lea
leave
mov
ss
arpl
mov
mov
sub
xchg
lret
sti
inc
dec
fidivrl
or
adc
sub
adc
out
mov
shl
jp
jge
dec
xchg
xchg
lock
mov
outsl
adc
xchg
scas
cmp
mov
push
mov
mov
divl
cmp
push
das
push
or
sub
push
and
orb
sub
sub
adc
xchg
xor
cmp
imul
pop
cld
xorl
mov
jge
pop
adc
icebp
lock
add
jge
insb
iret
lret
or
fcmovnb
mov
jg
int3
xchg
xchg
imul
pop
fimuls
jg
repnz
pop
lods
lea
iret
and
or
test
fcomps
xor
lret
lods
je
sbb
ds
mov
stos
mov
faddl
sbb
xor
inc
mov
push
inc
jp
mov
mov
inc
sti
xor
adc
push
test
sub
xchg
cltd
adcl
and
pop
outsl
shlb
inc
or
cmp
push
pop
mov
scas
jnp
inc
int3
jmp
enter
add
icebp
xchg
mov
push
xchg
les
imul
and
or
sbb
cmp
sbb
mulb
out
cltd
flds
push
and
imul
sbb
aaa
scas
adc
inc
sub
jno
mov
dec
pop
fcmovu
or
lods
xchg
incb
xchg
nop
aaa
addr16
les
jno
incb
adc
vmovddup
inc
jecxz
mov
or
or
dec
cmc
loopne
jmp
cmp
loop
lock
mov
jecxz
lcall
pop
out
stos
push
lds
mov
or
nop
cmp
jo
cmp
push
xorb
sbbb
std
daa
hlt
sub
mov
mov
xor
pop
dec
or
and
addr16
mov
xlat
cmc
arpl
jae
mov
and
push
add
popf
push
mov
psraw
sbb
jne
fs
mov
or
sahf
repz
das
lcall
sub
test
mov
cld
inc
xchg
fmull
loopne
jnp
scas
jge
ja
push
cmp
fiaddl
push
mov
icebp
mov
pop
sub
push
shrl
lahf
add
inc
xabort
sub
sub
and
and
push
jb
addr16
cmp
in
and
or
aaa
addb
push
adc
enter
bound
sbb
cltd
push
pop
add
popa
repz
daa
test
add
in
cmpsb
push
mov
cmp
pop
out
cmp
dec
mov
pop
mov
out
dec
push
push
jg,pn
adc
push
jbe
arpl
push
test
mov
adc
jns
push
insb
mov
jge
jo
inc
jle
adc
fwait
cltd
xor
jg
xchg
orl
aas
pushf
sbb
stos
dec
mov
lret
sbb
sub
notb
and
leave
push
cmp
dec
stos
inc
cmpsb
adc
ret
xor
push
push
push
pop
movsl
ficoml
mov
adc
repnz
dec
adc
jp
pop
jae
adc
cmc
sarb
sbb
inc
cmpsl
xchg
mov
aad
pop
jae
bound
in
or
adc
nop
xor
or
imul
xchg
test
cmp
xchg
mov
cmpsb
add
lahf
mov
test
cmp
fbstp
cmp
pop
orl
xor
lea
adc
mov
sbb
xlat
pushf
stos
iret
mov
out
insb
in
mov
fsubrp
scas
sub
in
mov
jp
cmp
mov
or
adc
push
popl
jmp
data16
jbe
inc
adc
mov
push
dec
in
sbb
fnstsw
shr
shl
movsb
mov
xor
in
adc
popa
loopne
dec
std
rcrb
fildll
sub
std
lretw
bound
fs
jmp
jmp
dec
push
mov
sub
inc
idiv
sbb
jmp
pop
push
xchg
mov
mov
out
jb
sub
rcl
mov
lods
adc
xor
push
dec
orb
inc
mov
and
push
mov
cmp
push
push
inc
jbe
lds
or
divb
adc
repnz
push
and
decl
ds
adc
imul
sahf
shll
mov
push
rcl
cmp
sbb
xchg
rorl
push
icebp
jmp
jg
mov
and
add
sub
clc
push
cs
loop
xchg
add
add
or
jae
enter
into
add
scas
stos
imul
inc
insb
add
add
fildl
jno
sub
enter
cli
pushl
and
mov
fnstenv
and
xchg
xchg
outsb
lcall
hlt
popf
pop
fst
or
out
lret
pop
ret
jp
insl
xlat
dec
add
or
mov
les
cmpsb
xchg
int3
fisttpl
pop
xor
sbb
ret
mov
shl
ja
add
or
shrb
test
aaa
jle
jl
in
pop
or
xchg
mov
adc
push
jp
jmp
aam
push
das
xchg
inc
daa
mov
add
cli
push
jmp
inc
pop
scas
and
sti
mov
mov
inc
stos
cld
xchg
in
cmpsb
mov
aaa
movsb
cld
insl
dec
ret
jmp
stos
out
mov
sbb
mov
lret
ret
shlb
arpl
push
shll
pushf
cmp
lret
and
sbb
shrl
js
testl
jae
pushf
pop
mov
aam
jb
das
icebp
ficoml
sti
pop
push
add
mov
stos
fdivs
dec
jecxz
gs
mov
cmp
mov
std
fnstsw
push
xor
xchg
cmpsb
xor
mov
mov
inc
mov
adc
sbb
sbb
dec
mov
push
push
sbb
jae
fwait
test
out
add
incl
test
cmpsl
add
cld
sub
sbbb
rcr
fdivl
int3
jmp
mov
fnstsw
jae
push
xchg
cli
movsb
lret
loope
inc
pop
fnstcw
lods
cmp
and
arpl
ret
push
mov
push
cmpsl
inc
inc
push
mov
test
mov
rcrl
insb
xor
push
testb
or
inc
daa
jne
dec
aam
jmp
js
stc
cmpsl
mov
lods
sbb
fiaddl
ret
fisttpl
hlt
add
xchg
adc
or
xor
mov
fcomi
mov
and
sub
popf
iret
jns
xchg
cmp
loop
loop
xchg
add
stos
push
in
out
or
sub
sbb
mov
stos
stos
das
push
mov
int3
sbb
xor
sub
xchg
xchg
mov
and
sub
or
mull
or
dec
and
out
rorl
fdivl
sbb
icebp
test
popa
pop
push
mov
jne
jmp
aaa
and
loope
mov
mov
testl
orl
push
test
mov
mov
adc
sbbb
ss
sbb
popa
sub
repnz
xlat
pop
sbb
pop
mov
push
mov
daa
add
add
clc
cmp
add
adc
int3
pop
lock
inc
cld
filds
inc
add
xorb
fwait
jne
frstpm(287
pop
insl
lret
inc
ss
popf
and
mov
popa
or
bound
cs
add
sbb
aad
cmc
imul
andl
leave
and
ss
push
rorb
aad
push
adc
sti
dec
pop
sbb
pop
aas
aas
add
xchg
xchg
pop
or
dec
xor
or
in
xchg
cli
add
das
push
dec
aam
les
insb
mov
pop
jge
stos
outsl
cmp
ficomps
mov
cmp
and
add
mov
xor
and
xor
or
dec
data16
rcrb
jg
mov
cmp
push
loopne
rorb
push
imul
ljmp
jno
test
sbb
scas
or
mov
push
mov
jae
lods
cli
std
xor
imul
mov
aam
adc
outsl
and
pop
ja
jg
sbb
cmp
iret
iret
inc
test
jo
ret
fsts
ret
dec
sbb
pop
dec
mov
mov
fldenv
cmp
dec
add
fnclex
out
add
add
mov
push
sarl
movsb
mov
nop
lods
rcl
iret
int3
dec
xchg
mov
xor
and
jb
push
ret
les
jno
xor
sahf
ljmp
jecxz
push
mov
sub
dec
in
xor
shl
xlat
mov
fwait
aas
or
lods
cli
rcr
enter
jge
mov
jns
xor
push
dec
popf
int
add
mov
jno
and
pushf
ja
fsubrs
ss
xchg
cld
rorl
call
xorl
xchg
filds
repz
pop
outsb
outsl
test
outsl
out
imul
pop
ret
xchg
mov
cmpsb
lods
cmpsl
push
mov
mov
movsb
cmpsl
jbe
xchg
lds
imul
push
imul
or
mov
inc
into
out
adc
loope
sbb
pop
jl
push
sub
sub
aad
cltd
outsb
mov
cmpsl
xchg
sbbb
ljmpw
int
repz
into
ljmpw
jge
mov
in
and
das
pop
add
ljmp
mov
mov
pop
gs
adc
mov
popa
call
popa
gs
cli
stc
in
data16
sub
es
inc
mov
ficoms
push
xlat
out
lahf
and
and
js
inc
cmp
pop
mov
mov
ja
dec
cld
aam
mov
pop
inc
out
xchg
sbb
arpl
inc
sub
jle
jb
mov
mov
aaa
ret
push
mov
in
jecxz
mov
push
jo
jecxz
out
stc
jle
inc
or
cmpsl
movsl
hlt
les
les
jg
rcrb
imul
lds
dec
push
js
jno
mov
jne
mov
jmp
jle
mov
xchg
pop
lret
cltd
aas
xor
cmp
jno
repz
out
cli
mov
mov
sub
test
leave
js
jae
mov
mov
push
mov
mov
je
movsl
sub
ja
add
sub
jns
sbb
mov
das
adc
xor
or
popf
and
push
stos
pop
popf
sarb
adc
cmpsb
leave
inc
xor
pusha
mov
and
adc
loop
into
and
jge
clc
leave
hlt
cmpsl
mov
pop
push
out
dec
out
adc
add
adc
data16
pop
ljmp
push
sub
pop
mov
or
jmp
outsl
pop
les
cmp
scas
inc
or
test
and
ss
pxor
hlt
out
or
mov
hlt
sub
lds
daa
sub
cmp
sbb
lock
push
xchg
lea
mov
pop
je
mov
shlb
sarl
pop
push
imul
sahf
sub
imul
xor
dec
xchg
movsb
cs
xor
ss
mov
pop
and
xchg
and
aam
cltd
sbb
rclb
enter
popf
mov
es
ljmp
lret
addr16
into
push
jbe
fcmovnu
pusha
jno
in
xchg
in
idiv
les
xlat
dec
cmp
lds
sbb
sub
xchg
mov
inc
and
pop
mov
xchg
cmp
add
ja
mov
push
lds
pusha
pusha
pop
cmp
jecxz
lcall
imulb
mov
cmpsl
xor
pop
js
jo
push
in
dec
pusha
inc
inc
dec
call
aad
insl
dec
inc
mov
sbb
int3
sbb
xchg
and
inc
out
into
loope
push
rorl
aad
out
insl
call
adc
jecxz
adc
xchg
adc
inc
fstl
popa
je
int
pop
cli
mov
test
push
clc
sbb
or
push
pop
cmp
inc
inc
adc
pop
add
mov
rcrl
push
pop
ja
sub
lods
fwait
xor
jecxz
adc
add
push
adc
mov
mov
push
fsubrl
test
lods
sub
mov
inc
fildl
lret
outsb
into
sbb
imul
leave
aas
add
enter
shrb
in
pop
dec
mov
mov
inc
cmp
dec
push
data16
or
ljmp
mov
call
fucomip
int
push
adc
nop
mov
cmpsl
or
add
bnd
popa
bound
xchg
mov
mov
fistps
sub
cmc
mov
jl
push
lret
stos
popa
sbb
jbe
and
leave
or
popa
xor
xlat
or
aam
popa
pop
dec
es
pop
xchg
jbe
inc
je
adc
mov
cs
pop
and
dec
loope
mov
push
scas
mov
mov
push
add
and
aam
lods
cmpsb
push
shll
jl
ss
push
aad
lods
popa
xchg
add
jae
arpl
in
outsl
lea
repnz
push
mov
mov
push
lret
sbb
mov
mov
enter
mov
sti
push
stos
call
cmpsl
xchg
mov
test
sbb
mov
popa
movb
mov
inc
in
es
push
mov
lea
xor
mov
sub
adc
pop
in
push
clc
fcomip
adc
pop
loope
stos
lret
pop
add
call
rcll
orb
mov
xchg
xor
sti
mov
hlt
add
mov
push
ljmp
int
mov
imul
and
fsubs
sbb
shrb
decl
fcoml
movsl
jns
repz
mov
inc
insl
push
lret
or
aaa
in
cmp
or
repz
mov
sbb
sub
mov
adc
icebp
and
adcl
mov
psubsw
and
add
xchg
jno
aaa
add
fwait
sarb
xchg
inc
test
lcall
push
push
lods
es
enter
sub
push
jmp
popa
clc
inc
movsb
fcomip
pushf
stos
pop
ds
call
add
aaa
xchg
into
out
mov
pop
lock
jg
jl
fnsave
mov
mov
out
inc
xchg
xor
pop
lock
dec
jg
stos
in
push
inc
sub
aam
push
mov
or
ret
clc
xchg
inc
sub
xor
in
mov
bound
clc
ret
adc
pop
pop
negb
dec
cmp
daa
adc
adc
mov
mov
mov
dec
div
shlw
fdiv
and
out
iret
movsl
in
shll
call
mov
ficomps
jle
fidivrl
xchg
mov
add
mov
movsl
cmp
xchg
push
inc
std
adc
xchg
xor
out
jo
mov
cmp
stc
mov
jnp
lret
test
pop
lds
imul
loopne
lret
lahf
imul
pop
mov
icebp
lds
push
adc
pop
pop
into
js
dec
sti
scas
popa
jp
sub
in
faddl
out
ljmp
or
cmp
jbe
inc
jecxz
cmp
cmpb
and
push
mov
fwait
rclb
jge
push
pop
outsl
cmp
push
iret
nop
mov
jbe
jmp
shlb
repz
cltd
test
outsl
and
test
xlat
mov
bound
out
outsl
stc
fs
inc
adc
xchg
jmp
popa
dec
clc
paddsb
mov
inc
in
mov
cli
mov
jbe
dec
mov
pop
inc
ret
mov
mov
mov
or
xchg
cwtl
and
in
sbbb
pop
jg
call
sbb
push
sbb
fdivrs
dec
or
mov
fnsave
inc
push
xor
shll
test
fs
repz
test
jno
lds
or
pop
arpl
mov
outsl
pop
rclb
jbe
pushf
pop
dec
and
mov
xor
jae
cld
fwait
mov
or
imul
mov
repnz
dec
mov
imul
mov
pop
and
cmc
jnp
rorb
adc
fucom
test
jb
jne
addr16
push
roll
sub
dec
pop
xchg
and
test
mov
mov
push
sub
jno
pop
xlat
lahf
subb
and
repz
sub
add
push
add
and
je
movsl
or
aas
cs
push
jb
add
mov
xchg
popl
push
xchg
inc
out
cmpl
stos
sti
cwtl
lds
xor
pop
pop
push
push
movsb
rolb
pusha
inc
iretw
jg
mov
mov
mov
insb
mov
cmp
out
imul
inc
and
add
shlb
adc
mov
and
js
cld
iret
ds
push
push
xchg
push
push
jmp
sbb
pop
lret
pop
stc
je
adcb
cmp
cmovg
jo
imul
out
loopne
and
push
outsl
mov
cmc
sub
jb
aaa
std
jg
insb
inc
push
shlb
mov
test
fiadds
mov
loope
dec
sbb
aas
adc
lock
icebp
jmp
pop
add
sbb
loopne
pusha
mov
pop
movsl
adc
sub
fcomip
push
lods
insb
notb
addr16
ficoms
jle
inc
stc
or
pusha
jge
push
jp
cli
loope
and
cmc
xchg
incl
cmp
mov
xor
inc
add
dec
fcoms
inc
pop
pop
fcomip
xor
lea
sub
shll
lods
inc
and
fcom
cmc
inc
dec
jnp
loop
bswap
cmp
mov
push
adcl
test
lahf
cmp
mulb
dec
sbb
negb
popa
loop
xor
sbb
sbb
ljmp
sub
bound
dec
fwait
and
popf
sbb
mov
push
in
testl
and
inc
mov
data16
bound
jge
popa
mov
outsl
popf
jb
pop
icebp
or
mov
popa
inc
clc
stos
lret
aam
xchg
popl
subb
fisubl
js
stc
hlt
hlt
push
push
dec
push
sub
rep
insl
loopne
sbb
mov
repz
leave
data16
sti
add
jl
ljmp
cmp
adc
jp
cmp
test
xchg
cli
cmp
popa
sbb
pop
pusha
test
cmpsl
xor
inc
xor
and
and
das
iret
mov
es
and
xchg
in
xchg
push
push
add
jecxz
push
adc
mov
je
in
repz
mov
insl
testl
cmp
sub
fsts
imul
mov
not
fisubrs
loopne
mov
sub
repz
sub
cmpsb
loopne
data16
jp
lods
enter
inc
add
dec
fisubl
fisubrl
lret
jp
shll
ret
lcall
add
xorl
roll
mov
outsb
aas
cmp
cmpsb
xor
jecxz
roll
pop
les
dec
in
das
mov
cwtl
adc
push
dec
popf
lahf
or
push
aaa
cmpsb
sub
push
ss
aas
lods
inc
mov
ret
call
dec
pop
cmc
cmpsb
push
cmp
xchg
pop
movsb
cmp
test
sbb
es
pop
adc
jo
mov
and
ss
mov
and
adc
imul
add
adc
sti
xor
pop
jae
in
pop
mov
inc
pop
xchg
push
repz
dec
cmp
js
and
popa
icebp
jle
lret
cmpsl
push
xlat
jne
into
fwait
push
pushf
outsl
in
mov
aam
jg
fmull
cmp
push
out
xlat
push
mov
pop
pop
loope
sbb
aas
enter
push
fcmovu
fildll
or
xchg
and
pop
pop
or
xor
and
sub
sub
mov
popf
ss
xor
outsb
dec
cld
adc
bound
push
iret
jns
shll
insl
sahf
sub
xorb
adc
xchg
insl
mov
inc
loope
cli
out
inc
xchg
aad
lods
or
or
out
pop
and
shrb
xor
push
or
mov
mov
or
les
push
and
loope
sub
xlat
int
jnp
push
movsl
mov
inc
or
addl
aad
add
mov
cmc
cld
call
dec
mov
hlt
enter
mov
pop
push
fidivl
push
and
and
insl
pushf
or
push
adc
jmp
pop
mov
xor
pop
xchg
sbb
fadds
push
and
ret
or
daa
or
add
loopne
push
sbb
xchg
mov
inc
pop
and
ljmp
mov
sbb
jnp
ss
mov
xchg
mov
dec
orb
into
aas
lods
jb
mov
movsb
inc
test
fcomps
xchg
lds
cltd
pop
imull
scas
xor
or
xor
and
xchg
jg
adc
sti
aas
inc
test
cmp
scas
out
sbb
xor
push
out
repz
add
add
outsl
test
icebp
cmp
fistps
mov
mov
test
in
aas
sub
nop
aam
add
repnz
loopne
jmp
jecxz
pop
aad
adc
sbb
push
jg
out
lcall
or
gs
dec
cmp
outsl
pop
mov
daa
jp
push
ret
cmpb
and
out
push
mov
cmpsl
push
cmc
imul
mov
add
testl
mov
adc
mull
sbb
in
fmull
aad
or
lds
sti
xorl
or
jecxz
outsl
jmp
in
sbb
pop
xor
shrb
sti
push
add
aam
jne
lret
fcomip
test
and
cli
push
test
decl
pop
mov
cmp
insl
insb
cmp
outsb
jmp
xchg
rorl
lock
addr16
add
rcll
or
push
sbb
es
daa
in
mov
mov
sub
cwtl
cld
inc
dec
jle
decw
cmp
lret
std
cmc
gs
pop
add
imul
add
sub
ret
enter
sbb
dec
stos
shr
clc
sbb
mov
push
dec
cmp
cmpsl
push
fbstp
test
adc
rep
stc
and
jo
push
inc
insb
cmpsb
icebp
popa
pop
call
je
stc
icebp
je
cmp
andl
inc
test
popl
adc
outsb
push
or
iret
sbb
adc
push
inc
in
decl
push
ljmp
adc
jno
js
pop
jnp
iret
repz
out
pop
je
xor
inc
sbb
imul
push
cmp
dec
xor
mov
arpl
nop
add
push
iret
jecxz
cmpsl
adc
pop
and
adc
jl
mov
jg
clts
xor
and
imulb
in
adc
pop
std
pop
jl
inc
add
inc
fwait
dec
ret
popf
pop
or
ljmp
hlt
sub
dec
mov
cmp
mov
lcall
inc
movsb
fwait
scas
jge
int
push
xchg
pop
xor
shlb
jecxz
out
mov
rorb
je
test
xlat
mov
lret
mov
jp
dec
sbb
icebp
adc
test
daa
jl,pn
rcr
or
dec
test
and
sahf
dec
sub
stos
test
lock
dec
adc
mov
rol
xorl
sub
daa
or
jbe
cld
jne
dec
mov
adc
add
imul
mov
cmc
loope
cwtl
stos
mov
aas
imul
iret
test
and
adc
ret
push
movsb
pop
aad
ljmp
movsb
out
in
add
lea
push
roll
fidivl
jmp
jecxz
mov
shll
pushf
xchg
mov
les
loope
lods
mov
movsb
xchg
cmpsb
inc
lahf
or
push
je
shlb
pcmpgtw
mov
pop
daa
cltd
sbb
jmp
fildll
outsb
jb
dec
out
pop
clc
cld
mov
cli
fs
push
jnp
sub
adc
jmp
cli
mov
mov
mov
inc
dec
and
or
push
pop
inc
lret
enter
test
xchg
shll
or
pop
out
daa
test
lret
jo
lcall
push
or
inc
rcll
movb
negl
pusha
out
hlt
cmp
jo
sub
das
add
stos
daa
std
mov
jecxz
adc
adc
divb
and
lods
push
sbb
gs
sub
cmp
xor
xlat
xchg
inc
xlat
or
inc
sub
xor
pushl
jb
sub
dec
test
adc
jg
icebp
jg
cld
cmpb
icebp
fucomip
in
es
fxch
shlb
clc
xchg
pop
jl
mov
fwait
js
push
dec
mov
mov
clc
mov
xchg
clc
test
mov
imul
movsb
cmpsb
jno
loop
es
cs
pop
into
test
mov
shr
xor
sub
wbinvd
pop
xchg
jge
mov
jo
mov
bound
out
dec
scas
mov
xchg
and
loop
scas
xor
cmp
int
mov
movsb
mov
and
negl
jl
mov
lahf
inc
mov
ss
xchg
sub
jo
jmp
mov
xchg
add
mov
sbb
outsl
cmc
sbb
lret
out
stos
shl
fcmovb
jbe
sti
insb
inc
mov
xchg
das
mov
xor
aam
jo
inc
cmp
cltd
js
mov
movb
stc
fstpt
pop
repz
ss
cmp
out
shlb
insb
mov
mov
cmp
into
jo
jne
mov
fistl
cmp
cmp
dec
and
jo
dec
pop
pop
sbb
adc
out
data16
add
or
pop
insb
nop
adc
test
and
push
push
loopne
hlt
rcrl
repz
data16
out
aas
xlat
insb
pushf
or
lret
xchg
pusha
adc
popa
sub
sub
push
xchg
cmp
inc
mov
insb
sub
sbb
xchg
inc
add
call
int3
bswap
sbb
pop
pop
rcr
out
add
xor
rol
jmp
repnz
xor
jns
inc
jp
xchg
mov
mov
mov
add
push
iret
xor
leave
dec
xchg
push
inc
cs
shl
in
jge
pop
enter
adc
fst
aam
lods
or
repz
lods
sbb
sarl
mov
mov
pop
nop
fs
inc
jb
pusha
xor
push
mov
ljmp
inc
sbb
mov
mov
push
outsl
iret
mulb
ret
inc
cmp
inc
mov
frstor
scas
sbb
das
sbbl
loop
es
push
fisubl
fisubs
mov
cmp
push
dec
xchg
jnp
shll
dec
popa
cmp
fimull
pop
decl
test
inc
mov
outsl
imul
push
dec
add
or
scas
add
pop
pusha
sahf
pop
or
add
subb
pop
rcr
outsb
cld
loope
sub
push
adc
push
fmull
fidivl
mov
call
scas
inc
add
push
xchg
adc
pop
jo
dec
mov
mov
cmp
sbb
jno
out
sbb
inc
sbb
imul
je
push
flds
mov
jmp
scas
outsl
cmp
sti
mov
pop
pop
jne
or
mov
scas
mov
lods
lods
or
sub
cli
adc
cmp
sbb
js
xchg
xchg
orb
add
stos
mov
xor
iret
jae
dec
mov
cmc
cmpsl
inc
mov
cmp
or
or
mov
dec
loop
xchg
sub
bound
pop
test
mov
cmp
mov
mov
ja
push
adc
lods
and
lds
in
lcall
icebp
hlt
cmp
lods
pop
in
jae
xor
movd
in
mov
stos
icebp
mov
lods
adc
adc
sbb
or
dec
cmp
iret
je
lret
sbb
xchg
ret
dec
cmp
adc
push
mov
xor
mov
pop
mov
xchg
xchg
pop
add
pop
mov
scas
fwait
or
dec
ror
pcmpeqb
cmp
jmp
les
sbb
adcb
or
push
sarb
movups
outsb
and
out
stos
or
adcb
test
mov
lahf
mov
xorb
lcall
fisubrs
enter
hlt
movsl
xchg
addr16
popf
mov
dec
lods
and
mov
jns
adc
cmc
mov
or
shll
jg
fldz
out
mov
xor
popf
inc
push
add
out
clc
xchg
fistl
fcompl
out
dec
jmp
pop
dec
jl
jo
rclb
dec
xchg
jnp
lret
rcll
loope
ret
rcr
js
push
lcall
aas
fsubrl
push
mov
imul
jns
add
lea
orb
xchg
lret
jp
cld
addb
mov
jmp
adc
mov
les
pop
mov
cmpsb
loopne
mov
xor
jnp
mov
push
dec
mov
dec
and
mov
inc
mov
sub
xchg
popa
pop
outsb
xchg
dec
sub
jno
repz
add
enter
rol
lds
push
jle
xchg
adcl
adc
mov
fwait
push
clc
faddp
jo
orl
lods
pop
jg
fs
push
cmpsl
rcr
dec
repnz
mov
jmp
sbb
je
stos
and
push
cmp
xchg
adc
pop
cmp
inc
repnz
xchg
mov
xchg
scas
add
pop
sub
sub
mov
inc
loopne
push
inc
or
push
dec
sub
hlt
into
mov
out
dec
jno
arpl
cmp
scas
in
std
inc
xchg
pop
sbb
sub
in
loope
push
and
rorb
xchg
inc
iret
shl
adc
cli
jmp
xor
imul
inc
cmpsb
es
sub
ss
push
jl
icebp
daa
xlat
bound
push
xchg
xor
inc
das
in
adc
andl
jns
push
aas
xor
and
jnp
sbb
dec
repz
adc
iret
pushf
cmp
xchg
mov
mov
pop
stos
in
int3
xor
push
adc
ds
stos
sbb
test
xchg
xchg
push
aad
lock
leave
stos
mov
fistl
stos
imul
scas
ror
push
mov
mov
test
aas
push
push
push
and
aaa
mov
pop
jl
adc
pop
inc
enter
fidivrl
lock
or
sbb
add
mov
pop
fnsave
movsl
push
push
xchg
xor
mov
cmp
out
dec
out
es
push
stos
pop
fistpll
mov
jp
movsb
lret
rcll
adc
jne
or
in
gs
insb
adc
je
and
hlt
mov
sub
xor
jnp
fwait
les
lret
mov
loop
or
fsubs
dec
sub
fists
lods
xor
rcll
adc
addr16
testb
int3
mov
and
mov
xor
ficoml
mov
cli
push
daa
arpl
pop
and
jp
mov
sbb
cmp
loopne
sbb
repnz
inc
lahf
jle
in
or
xor
out
sbb
push
dec
mov
popf
jle
enter
and
xchg
scas
int
ret
loopne
je
xchg
bound
adc
jae
cli
fidivrl
mov
jg
push
movsl
jmp
push
mov
scas
mov
add
iret
frstor
sub
flds
cwtl
jo
or
js
rcr
in
sahf
cmp
and
jp
mov
push
sahf
push
mov
ds
cli
push
push
mov
cmp
jle
fcmovb
test
cs
in
mov
pop
xor
sub
xchg
sbb
xchg
inc
fisubl
inc
cmc
loope
mov
xor
dec
test
test
sbb
negb
iret
popf
push
dec
or
int
and
lcall
aaa
in
push
test
rcll
jb
popf
filds
lcall
or
out
sbb
shrl
and
adc
rep
int3
inc
sti
repnz
jmp
pop
inc
fimuls
inc
adc
push
movsb
fmull
and
testl
je
adc
flds
adc
aas
sub
add
das
push
jo
mov
dec
out
idivb
pop
dec
sbb
or
ss
aas
or
mov
inc
out
mov
dec
mov
js
sub
mov
loop
jo
or
jge
bound
fbstp
pop
push
aam
inc
add
cwtl
les
pop
cmp
cmp
shrl
sub
dec
mov
xchg
push
dec
fisttpl
loopne
sub
pushf
mov
call
jmp
pop
add
or
repz
mov
mov
sub
add
bound
dec
cmpsb
cld
fcomi
imul
jmp
jmp
jns
out
and
jge
mov
insb
sub
and
adc
mov
mov
aad
mov
jmp
int3
jmp
stc
and
or
lock
push
inc
dec
sub
cmp
out
das
out
or
mov
adc
mov
or
arpl
lahf
add
pushf
inc
mov
add
leave
jbe
inc
adc
fsubs
pop
mov
fisubl
les
dec
pop
lret
icebp
push
test
inc
inc
pop
fwait
jg
pop
push
xchg
shr
arpl
pusha
lds
adc
jo
sub
pusha
je
dec
call
pop
loop
mov
sub
clc
jmp
hlt
nop
flds
mov
jnp
jl
scas
inc
testl
ljmp
mov
icebp
mov
push
rol
mov
repnz
cmp
mov
mov
adc
xchg
cmpsb
xchg
outsb
mov
arpl
lcall
mov
dec
push
cmc
out
rcll
pop
cmp
and
ss
enter
fldl
sub
xchg
inc
lahf
mov
cmpsl
mov
shll
mov
inc
fs
dec
adc
out
fldt
push
mov
aas
rclb
xorps
aad
xor
add
repz
add
fs
cmp
and
loop
shl
xchg
mov
cmp
lea
int3
enter
call
push
dec
jmp
sbb
out
ss
sub
flds
jl
or
in
or
push
gs
or
xor
push
xor
std
lret
mov
push
inc
pop
popa
fidivl
mov
push
cs
pop
lahf
pusha
enter
xchg
fstps
cmpsl
lods
pop
or
movsl
in
test
pop
xchg
pushf
out
xor
je
in
pop
ret
xchg
imul
insl
ds
es
jb
outsb
jae
or
shll
call
in
add
or
popf
filds
sti
imull
out
shl
push
unpckhps
or
outsl
lcall
lcall
repz
insl
sbb
lds
mov
nop
add
lret
push
and
and
mov
scas
mov
hlt
sahf
outsb
cmc
outsl
adc
pop
imul
hlt
jb
cs
stos
mov
xlat
add
cmpsl
clc
pushf
cltd
cmpsl
aas
and
adc
jb
js
pop
stos
mov
orl
leave
sahf
shlb
xor
insl
pop
pushf
das
mov
ljmp
mov
leave
cmp
daa
test
adc
push
or
mov
inc
cltd
arpl
adc
idivl
mov
cmpsb
xor
push
in
js
pop
push
js
int3
stc
dec
jo
les
jnp
cltd
sbb
mov
sbb
test
add
lea
add
nop
es
dec
push
mov
popf
stc
xlat
adc
cmp
mov
sbb
cmp
adcl
push
bound
or
jnp
xchg
lret
mov
adc
or
jmp
dec
mov
fcomip
dec
mov
ds
xchg
sub
jle
jg
cmp
sti
or
nop
and
add
enter
fiaddl
icebp
hlt
push
lret
xchg
dec
jo
aad
lea
sub
test
das
jns
xor
xor
leave
fwait
xor
cmp
dec
cmp
and
into
pop
xchg
or
or
mov
cmpsl
enter
mov
xor
xchg
xor
es
mov
fldenv
iret
clc
fnsave
dec
mov
and
add
mov
rclb
jns
sti
js
cmp
sarb
data16
inc
pop
xchg
pop
insl
and
jb
stc
jnp
inc
mov
dec
test
jecxz
jle
xor
ss
add
icebp
cmp
mov
popa
mov
xchg
mov
xor
lods
clc
dec
mov
ja
sub
mov
push
xor
or
and
je
cmp
xchg
insb
inc
aad
cmpl
dec
xchg
inc
pushf
mov
insl
cmp
mov
push
xor
add
push
into
xor
cmp
mov
cmc
jmp
test
jp
call
in
inc
addr16
sbb
jnp
shr
sbb
rcr
xor
or
std
iret
dec
adc
add
loopne
pusha
and
test
and
fbstp
pop
sub
sbb
sahf
imul
cmc
iret
sub
mov
fdivrs
sbbl
xchg
enter
sub
js
sub
das
aad
movups
incb
jb
sbb
mov
aam
jo
adc
stc
jbe
lds
dec
mov
addb
pop
or
xchg
dec
in
bound
inc
inc
mov
jecxz
pop
push
mov
add
mov
adc
not
add
mov
mov
and
in
push
push
add
ret
xchg
cmc
xchg
fidivrl
xchg
xchg
xchg
into
fdivrs
pop
xchg
lret
push
loope
popf
out
loopne
or
fxtract
and
sbb
insl
icebp
ljmp
mov
mov
xlat
adc
aad
mov
push
xchg
fnstenv
jl
shlb
or
pop
and
mov
sbb
imul
icebp
repnz
test
icebp
mov
inc
out
pop
in
push
jge
mov
in
gs
add
lods
or
lock
out
shll
inc
lods
mov
sub
enter
mov
mov
popf
pop
je
sub
mov
sub
jp
in
adcb
sbb
cmp
dec
lods
popa
dec
sub
outsl
push
outsl
in
les
jae
jae
xlat
sub
cli
scas
xor
pusha
in
mov
or
mov
push
sbb
cmp
push
into
sub
sub
cli
repnz
addr16
icebp
sarl
push
out
adc
mov
mov
or
adc
push
mov
sbb
push
lds
adcl
xchg
ret
int
or
insl
decb
mov
lds
pop
push
enter
and
shl
xchg
and
fwait
cmpl
scas
jns
lods
pop
sub
inc
cs
hlt
cmp
aaa
lret
dec
mov
xor
fcmovb
pop
mov
cmp
xchg
daa
or
or
int
shll
mov
jecxz
mov
and
data16
test
xchg
int3
les
jl
dec
adc
scas
test
sbb
xchg
fldt
sub
mov
in
pop
jae
scas
sbb
imul
fmull
adc
inc
rclb
jno
mov
adc
loop
outsl
ficomps
out
mov
mov
pop
xor
ja
lahf
filds
fs
decb
insb
mov
cmp
jge
scas
cmp
xor
movb
mov
cmpsb
sub
rcrb
mov
push
cs
mov
xor
pop
es
xchg
cwtl
adc
test
xchg
out
inc
icebp
jp
mov
imul
icebp
xor
jmp
rcll
loope
push
lock
ret
pusha
addr16
fxch
hlt
inc
jmp
leave
add
adc
lcall
int3
outsl
loopne
enter
sub
add
popa
ljmp
ret
mov
xchg
cwtl
jmp
cmpl
in
push
in
call
xor
inc
or
pop
sbb
and
inc
ljmp
or
mov
push
mov
xchg
mov
fstps
ret
das
adc
jns
movsb
sub
out
aam
mov
mov
mov
dec
sub
aad
stos
add
jno
or
cld
xlat
jmp
fwait
insl
call
dec
pop
jg
in
adc
icebp
adc
testl
fadds
mov
cmpsb
mov
int
pop
jns
pop
mov
add
sub
jecxz
imul
mov
mov
sub
mov
jb
ret
jnp
sub
pop
mov
inc
cmc
mov
add
cmp
jmp
xlat
or
dec
add
jecxz
adc
jle
dec
rorl
fnstenv
adc
push
mov
inc
out
movsl
popa
rcl
jg
cmpsb
push
xor
cmp
mov
repnz
scas
jg
jecxz
rorl
lahf
add
sub
sbb
loop
lret
out
fdivs
add
cmpsb
push
mov
pusha
mov
pushf
jne
ffreep
mov
stc
or
cmpsl
xchg
xchg
xchg
jbe
punpcklwd
cltd
jg
mov
mov
ja
mov
sub
rorb
test
jno
xor
sbb
mov
loopne
dec
add
push
mov
int3
xchg
lock
xchg
lock
mov
repz
aas
cmp
push
pop
cmc
mov
adc
pop
add
or
lods
jno
sbb
mov
test
ljmp
mov
into
in
fdivs
inc
lahf
xor
and
stos
iret
cmp
jle
iret
lds
adc
addr16
mov
aad
push
dec
popa
mov
jle
add
fcompl
cmp
ljmp
add
leave
stos
lds
cmp
stos
sbb
pop
cltd
arpl
mov
subb
mov
daa
jnp
xchg
scas
out
or
lods
shl
pop
and
adc
xchg
xlat
into
icebp
ja
push
rclb
fnsave
push
lds
inc
xor
push
adcl
sbb
pop
movl
cmp
fists
xor
inc
mov
push
loopne
loopne
test
roll
in
in
sbb
cmp
movsb
out
frstpm(287
mov
and
popf
mov
clc
lds
sub
inc
push
jo
inc
outsb
test
ret
addr16
mov
pusha
test
mov
pop
pop
cmp
mov
cmpb
dec
mov
adc
loope
iret
lret
fnsave
enter
clc
or
push
movsl
out
mov
mov
test
adc
daa
movsb
fld
mov
lea
mov
adc
pop
xlat
in
mov
jne
lret
out
cld
pop
or
push
push
rcrb
mov
xchg
pushf
popa
jae
fidivrl
in
dec
xor
mov
lret
ljmp
xor
imul
lods
out
mov
and
xchg
daa
pop
cs
aad
xlat
js
stos
or
push
call
xchg
in
popf
push
fcoms
cmp
sbb
pop
call
inc
xchg
movb
xor
push
sub
mov
scas
ret
jno
xchg
mov
scas
mov
cmp
test
out
xchg
jg
sbb
addr16
jmp
xor
cmpsb
mov
push
scas
xor
es
rorl
pusha
sbb
xor
dec
xchg
testl
sahf
pop
mov
int
xor
jbe
jmp
push
daa
test
test
xchg
pop
test
dec
mov
rclb
cwtl
dec
outsb
outsb
or
and
lock
hlt
scas
adcb
hlt
pop
and
mov
push
pop
addr16
inc
push
mov
or
ss
xor
testb
mov
rolb
stos
cmc
cmp
pop
inc
daa
mov
icebp
test
in
push
inc
xchg
and
sbb
popa
aam
adc
dec
sbb
xchg
sbb
cltd
insb
mov
push
mov
pop
dec
sub
mov
sbb
jo
adc
dec
sub
push
es
decb
pop
imul
cltd
mov
hlt
jo
dec
dec
ret
sbb
cmp
xor
repnz
mov
shlb
aad
jmp
jno
or
cs
in
int3
pop
sbb
or
jne
scas
fimull
rorl
rolb
xchg
adc
sub
aam
adc
dec
push
cmp
movsw
jb
jno
push
mov
stc
out
inc
mov
or
je
mov
add
enter
mov
int
cmp
loope
cmp
jl
sbb
mov
repz
lret
mov
imul
in
test
push
pop
and
stos
inc
cld
mov
mov
mov
test
or
mov
and
dec
test
mov
push
aad
insl
nop
les
les
pop
push
push
or
insl
xchg
inc
pop
cmc
les
iret
negb
adcb
sub
xchg
lods
inc
cwtl
hlt
xchg
mov
pop
scas
psubb
mov
mov
push
sub
mov
push
shrl
syscall
adc
rcrl
shll
dec
bound
or
sbb
dec
loopne
orl
lea
mov
jle
mov
inc
mov
insb
shlb
hlt
fmuls
imul
pop
inc
dec
xchg
loope
test
mov
or
cwtl
xchg
pop
icebp
xor
ficompl
adc
xchg
push
bound
addl
call
xor
jns
push
xchg
popf
and
stos
pop
ljmp
outsb
cld
cmpsb
pop
lods
pop
popa
test
jne
mov
mov
imul
out
shl
push
or
add
sub
pop
xor
xchg
jae,pt
or
lea
ret
cld
lds
push
loope,pn
xchg
mov
jns
call
adc
ret
push
popf
dec
insb
cld
pop
inc
fildl
fcoml
push
push
fwait
mov
leave
dec
je
sbb
push
and
rcrl
hlt
or
cmpsl
mov
pop
xor
push
mov
push
inc
sbb
jae
scas
rcrl
and
xchg
mov
ret
mov
jp
cmp
jns
adc
xchg
or
test
xor
sbb
in
pop
testl
imul
jg
xor
pop
pop
mov
sbb
test
mov
test
loope
and
xor
jae
enterw
xchg
sub
je
push
daa
mov
and
mov
popa
jge
jne
jne
xor
add
frstor
xchg
sub
test
sub
insb
and
add
imul
mov
fimull
cmpsb
adc
fimuls
mov
out
in
pop
mov
push
jmp
and
xchg
cmp
dec
movsl
push
andl
xchg
sarb
and
jns
adc
outsb
loopne
insl
and
push
jne
push
lock
or
add
test
cmpsb
sbb
mov
loope
stos
xor
xchg
inc
nop
adc
pop
push
loopne
in
lret
sti
push
pop
mov
mov
int
pop
imul
and
aaa
aas
scas
or
aas
add
xor
rolb
movsb
or
or
cmp
mov
std
mov
jecxz
cmp
hlt
jae
mov
cmp
mov
adc
or
nop
test
sub
xchg
xchg
out
pop
push
enter
xchg
and
pushf
xchg
std
add
hlt
int
imul
test
xchg
inc
jmp
cmp
in
push
and
aam
mov
js
stos
cmc
xor
jne
push
inc
dec
dec
dec
leave
mov
mov
out
xor
jge
dec
mov
ljmp
lds
jle
enter
pushf
mov
xchg
xchg
pop
dec
cltd
push
xchg
fistps
sbb
xchg
pop
pusha
rcl
jo
pop
ret
imul
push
push
mov
mov
adc
mov
push
mov
add
sbb
dec
clc
lods
inc
rcrl
jmp
mov
pop
flds
jmp
cmp
xor
adc
aaa
addl
or
fdiv
inc
out
fstpt
push
cmp
mov
test
push
mov
pop
cld
cwtl
pop
mov
xor
test
in
xchg
lcall
pop
xor
or
add
sub
inc
adc
std
and
lahf
movl
sbb
aam
pop
push
jecxz
aam
sar
stc
jl
sbb
inc
ffree
push
mov
cltd
sub
jecxz
lcall
jae
jo
fimuls
adcl
cltd
pop
test
or
orb
ss
or
lds
mov
inc
popf
loopne
fnsave
dec
and
arpl
xchg
push
cltd
shll
ss
mov
mov
stc
mov
inc
call
mov
cmpsb
aas
and
aaa
mov
jg
clc
decl
mov
inc
cwtl
repnz
dec
pop
pushf
shl
or
imul
sub
and
jns
sbb
cmc
in
aam
out
fisubl
clc
fcmovb
xchg
push
jge
outsb
call
xor
jbe
loop
aaa
nop
fldcw
in
std
add
push
rcrl
pop
sbb
push
cli
mov
jmp
pop
notl
ret
pop
xchg
adc
xchg
cmp
add
lods
ja
push
push
mov
sub
push
mov
out
add
cs
jb
xor
mov
and
mov
add
cmc
sub
es
inc
mov
ss
rorb
ljmp
inc
push
cltd
fsubrl
das
add
loopne
fs
mov
pop
or
fildll
andnps
mov
test
fists
adc
sub
mov
jmp
push
push
or
imulb
xchg
shll
mov
lret
or
les
testl
mov
sub
das
mov
pop
and
mov
out
pop
and
push
push
dec
pop
out
mov
or
das
sar
cltd
sahf
loope
adc
adc
pop
rcl
mov
push
jle
es
or
ljmp
clc
and
and
insb
adc
jns
bound
and
xchg
iret
xchg
imul
shll
sbb
bound
mov
mov
repnz
inc
int
jnp
leave
inc
mov
dec
leave
push
nop
jae
adc
lods
add
xor
jl
xlat
sti
ljmp
pop
stos
lcall
sbb
pop
push
inc
shlb
cmp
push
loope
fsts
push
fadd
ja
ja
sub
add
or
xchg
pop
popf
gs
fs
lea
cmp
dec
pop
hlt
mov
ljmp
mov
add
insl
mov
into
pop
jbe
jb
push
test
rcrl
ret
fwait
inc
add
ds
xchg
insl
or
enter
adc
dec
add
icebp
or
jle
dec
cmp
pop
mov
mov
fsubrs
cmc
mov
jge
jle
sbb
cmpsb
or
scas
bound
pop
in
xor
cltd
lret
and
movsb
sbb
movsl
iret
jg
icebp
cmp
add
cmp
or
loop
sub
pop
xchg
pop
sbbl
lods
mov
adc
push
xlat
mov
lds
jne
fidivrs
sbb
add
xor
call
js
lea
xchg
loopne
dec
subl
loop
dec
ljmp
sbb
or
mov
stc
imul
negb
xor
dec
js
aam
xor
pop
add
mov
daa
fcoms
dec
xor
mov
sub
gs
jge
cmpsb
lock
cmp
push
pushf
sub
dec
addr16
inc
int
test
mov
adc
inc
inc
and
inc
or
mov
lods
call
aad
jmp
push
pop
insb
sti
and
lds
outsl
dec
sbb
or
shrb
push
mov
daa
adc
mov
push
aad
shr
mov
mov
and
jg
test
aas
pop
das
outsl
popa
rclb
cmpsb
inc
jne
repnz
cmp
inc
add
rolb
fsub
dec
cli
jo
jnp
sub
or
pop
movsb
cmp
and
pop
mov
test
clc
inc
dec
mov
jge
mov
sti
mov
cmp
rolb
pop
lret
ficomps
js
mov
sbb
das
and
imul
pop
js
nop
sub
add
pop
ljmp
movsl
addr16
dec
jmp
addr16
and
jnp
sbb
and
je
xchg
shr
sbb
xlat
push
int
inc
fsubrp
adcl
or
sahf
mov
std
clc
pushl
sarb
out
add
mov
subb
fistps
fstpt
fildl
divl
insb
sbb
jecxz
cmc
test
add
out
sub
stc
mov
in
push
fisttpll
jge
movsb
aaa
pop
dec
je
repz
mov
test
push
fs
inc
and
jl
push
pop
mov
out
fisubrl
std
push
sbb
dec
lret
into
xor
cwtl
and
and
ss
loopne
dec
adc
hlt
pop
pop
dec
inc
rcll
popf
jmp
sub
lcall
jne
fdivrl
mov
or
mov
xor
xchg
insl
out
sub
out
push
fidivrl
aas
add
sub
sub
jle
add
enter
inc
movsl
out
and
dec
xchg
sub
or
add
in
mov
fcmovnu
jg
lcall
icebp
rolb
scas
ljmp
inc
push
mov
lea
inc
xchg
mov
xor
inc
mov
ret
movsb
and
jo
cmp
mov
ret
pusha
push
imul
mov
push
mov
xchg
in
nop
fnstsw
inc
pop
dec
das
dec
xchg
add
in
fiaddl
mov
or
add
mov
or
lahf
test
ljmp
xchg
je
pop
mov
call
jecxz
add
pop
xchg
popa
pop
fdivrs
fiaddl
dec
aaa
dec
aas
fildll
mov
adc
test
mov
xchg
into
jl
pushf
stos
imul
out
dec
flds
sbb
push
ret
lds
jle
cmp
lea
dec
incl
bound
xchg
cmp
imul
xchg
cwtl
pop
pop
mov
add
in
call
fbstp
mov
xchg
in
jne
in
fcoms
or
ret
xchg
push
cwtl
mov
lock
lahf
lods
or
xchg
stos
lea
cltd
jbe
es
sbb
imul
roll
cltd
jl
sbb
es
jg
add
push
dec
cmp
inc
sarl
sub
out
mov
ret
int3
sbb
jbe
mov
pop
movsb
pop
pop
push
nop
je
dec
mov
imul
push
aam
or
sbb
push
addr16
cli
shlb
cwtl
data16
test
adc
jge
popf
lret
je
ja
int
push
pop
fmulp
xchg
pop
add
push
adc
fwait
sub
inc
push
iret
inc
popa
imul
incb
push
stos
push
jmp
int
dec
mov
inc
enter
dec
imul
jne
loopne
movsb
xchg
sbb
pop
clc
mov
sbb
push
stos
ret
mov
hlt
lock
xor
pop
xor
and
iret
lret
xor
and
mov
ljmp
mov
es
pop
movl
hlt
add
sarl
lea
bound
adc
repnz
adc
pop
loop
outsb
pop
movsl
cmp
std
mov
ljmp
clc
ja
push
pop
leave
cmp
sti
shlb
and
out
inc
jmp
aad
mov
lock
sti
dec
push
aas
lret
jnp
std
dec
mov
cmp
inc
fsubrl
fistpll
cmp
test
sarb
jg
xor
test
adc
and
xchg
xor
es
jo
xchg
push
mov
pop
int3
loopne
jmp
call
movsb
stos
negb
icebp
mov
inc
test
fwait
and
sub
cmp
into
add
sbb
xchg
clc
repnz
jnp
jecxz
insb
mov
lods
les
daa
cld
cmpsb
test
repnz
push
and
pop
lahf
nop
fisttps
outsl
imul
out
mov
insb
mov
out
je
pop
xor
in
rcrb
in
mov
js
leave
shlb
push
shr
xor
mov
push
fadd
push
dec
nop
pop
push
xor
adc
xor
sarl
jb
sbb
add
cmc
jg
pop
insb
ss
cwtl
aam
sub
add
mov
push
push
mov
pop
ss
mov
xchg
push
lock
or
in
test
xor
mov
sarl
push
fisttpl
sbb
mov
pop
push
inc
mov
mov
or
movsl
lret
pop
xchg
mov
push
stc
sub
pop
adc
and
and
mov
cmc
popa
or
or
sbb
mov
mov
jmp
pop
sub
xor
jl
add
mov
lahf
loopne
rorl
xor
inc
leave
adc
adc
out
add
dec
sub
and
popa
xor
dec
decb
roll
rolb
imul
leave
lods
add
shll
xor
aas
xchg
cmpxchg
mov
insl
pushf
mov
jge
cmpsb
test
sbb
in
daa
inc
loope
xor
ljmp
mov
inc
pop
cli
int
cmc
or
push
push
dec
inc
push
jmp
stos
aam
jne
dec
mov
fisubrs
add
jne
imul
cmp
nop
or
xor
xlat
in
sub
insl
sbb
and
movsb
fstl
inc
dec
outsl
mov
inc
psubd
daa
decl
dec
inc
and
mov
popa
lock
inc
mov
test
cli
ficomps
lods
jp
sub
push
and
pop
in
int
fidivrs
cmp
cltd
gs
adc
mov
mov
scas
jbe
inc
adc
pop
nop
dec
cltd
shll
sbb
xor
dec
cmp
lods
xor
lock
adc
sub
pop
push
outsl
mov
loopne
es
sbb
jl
andl
jnp
jle
leave
dec
push
ja,pn
int3
xlat
fistpl
fisttpll
stos
mull
repz
orl
adc
ss
idiv
xchg
mov
call
call
and
and
test
stos
mov
movsl
mov
cld
insl
adc
iret
stos
addr16
pop
adc
ret
xor
inc
fcomi
pop
mov
sbb
xor
pop
adc
sub
loope
add
jae
adc
and
gs
mov
popf
out
cmpsb
out
push
sti
notl
cmc
push
push
sbb
push
aas
iret
stc
sub
mov
xchg
jbe
out
dec
cs
mov
repz
sbb
xchg
shll
sbb
jo
xlat
add
flds
cli
cmc
dec
adc
sub
dec
sub
negb
pop
insb
mov
pop
loope
mov
fmuls
xchg
xor
inc
add
adc
sti
or
xchg
sub
pop
mov
xlat
add
stos
ljmp
loopne
or
xor
pop
les
cmp
sbb
andb
ret
fwait
push
add
mov
rcll
pusha
xchg
call
sbb
sub
pop
pusha
mov
sar
add
rol
jl
movsl
push
sub
adc
mov
mov
rcll
out
clc
shl
outsb
xchg
jne
jecxz
xchg
in
out
jo
push
cld
ja
xchg
mov
push
push
sahf
stos
lock
loopne
dec
movb
cmp
stos
adcb
test
in
pop
das
insl
dec
cli
xor
mov
and
flds
lcall
ret
sbb
icebp
daa
je
xor
divb
jns
mov
sub
mov
sbb
andl
pop
xchg
andl
ljmp
cmpl
or
or
in
aas
cmp
inc
ret
inc
es
das
test
dec
mov
push
bound
out
mov
mov
outsl
lea
out
mov
or
sub
or
stc
inc
nop
in
test
pop
push
xor
std
mov
mov
stos
push
cltd
fs
jne
xchg
pop
nop
and
aaa
nop
mov
xchg
dec
pop
mov
jne
call
jl
mov
roll
repnz
push
mov
xchg
cmp
pop
xor
and
jo
jg
mov
push
mov
cmp
mov
xor
testl
jno
and
xchg
xchg
inc
dec
out
xchg
add
mov
sub
roll
test
xchg
mov
test
popf
fisubs
cwtl
and
hlt
in
sub
xchg
out
cmp
popa
mov
frstor
imul
push
sub
mov
pop
and
adc
sbb
pop
push
jmp
enter
cmp
in
orl
iret
cmp
or
cmp
push
lock
xor
or
mov
shll
arpl
adc
jbe
pop
inc
cmp
xchg
lcall
fiadds
pop
mov
sbb
subl
pusha
xor
push
mov
and
jecxz
jecxz
jle
outsl
popf
cmpsb
push
mov
out
or
xchg
sub
mov
cmpsl
sti
inc
icebp
stc
outsl
adc
and
xor
test
mov
xlat
mov
pop
cmp
jnp
and
dec
aad
lahf
cld
lods
pop
imul
lea
fwait
or
dec
into
les
lcall
ss
gs
cmp
cmp
inc
shl
mov
cmc
dec
sbb
dec
lock
and
imul
push
cld
test
and
xor
cli
outsl
and
jno
xchg
sbb
stos
stc
sti
jl
cmpsl
orl
push
xor
mov
imul
jo
inc
popa
jae,pt
mov
cs
mov
mov
push
pop
imull
add
lods
sub
fsubl
dec
xor
fnstsw
add
out
push
pop
bound
push
aad
hlt
mov
es
cmp
xchg
push
movb
test
jl
xor
iret
mov
and
into
rorl
imul
add
dec
or
xchg
add
loope
test
aam
es
iret
xor
sub
mov
mov
fsubrs
or
jb
outsb
repnz
xchg
push
outsb
sbb
cs
mov
in
stos
stos
lock
dec
mov
xlat
testb
sbb
jnp
add
dec
cmp
shlb
int3
test
fnsave
imull
sub
test
rcll
call
loop
mov
adc
mov
rclb
sbb
xchg
je
dec
pop
push
cwtl
and
xchg
xchg
push
lar
sub
data16
push
inc
ret
pop
je
in
gs
mov
adc
ja
fdivrs
negl
ret
push
mov
xchg
jecxz
mov
push
jnp
fcmovnb
int
insl
jmp
sbb
in
sub
or
sub
hlt
shl
mov
dec
xor
sbb
sbbl
mov
jl
cs
popa
or
cltd
adc
pusha
fists
dec
xchg
out
lcall
rcr
adcl
jmp
enter
push
stos
fnstsw
or
jle
add
sbb
mov
lret
fwait
hlt
mov
xor
jae
enter
sarb
mov
cmpsl
and
push
pop
xchg
sbb
jmp
clc
add
fst
and
jno
jle
cmpsl
stos
in
and
xchg
dec
stos
rcll
cmpsl
mov
sbb
js
in
pop
and
mov
and
dec
mov
mov
push
xor
inc
ljmp
in
fnsave
pushf
es
or
cltd
jno
mov
jle
repnz
mov
fiadds
gs
pop
sbb
js
and
pop
push
mov
cmc
fs
sarl
pop
pop
stc
push
mov
mov
and
rcrl
xchg
dec
and
fs
inc
scas
jge
add
roll
jle
mov
cmpsl
fistpll
pop
idivl
or
out
imul
pusha
or
sti
xchg
mov
icebp
pop
insl
xchg
add
mov
pushf
sbb
jmp
aaa
in
mov
fdivr
dec
sysenter
paddusb
inc
pop
insb
inc
xchg
pusha
aas
sub
gs
adc
mov
mov
loop
subb
xchg
dec
add
jp
mov
pop
jp
mov
rcrl
mov
jp
pop
sbb
movsb
loopne
pop
mov
movsb
pushf
fwait
or
xchg
jae
pop
hlt
add
pop
icebp
xlat
mov
ljmp
gs
and
lods
jmp
jb
out
dec
and
or
in
call
dec
mov
loop
add
stos
push
xchg
cmc
push
stos
cmp
cmp
mov
lret
mov
repz
enter
or
repz
imul
sub
cli
call
mov
addl
fiadds
loope
ljmp
ja
push
mulb
mov
lds
xor
jo
loopne
std
pop
hlt
cs
leave
pop
push
aaa
mov
mov
mov
fdivl
xor
pop
das
cmp
push
or
cmp
inc
loopne
or
push
adc
idiv
sbb
dec
mov
mov
aad
sbb
pcmpgtd
loope
iret
les
and
or
sbb
xor
loop
adc
or
add
dec
stos
in
sbb
repnz
mov
je
xchg
cmp
mov
insb
and
lret
or
ret
stos
sarb
push
lods
into
fs
adc
pandn
in
push
ret
or
xlat
jecxz
aam
mov
not
sbb
and
jb
or
jl
sub
xchg
add
cmp
push
clc
jno
lock
loope
or
inc
xlat
rorb
fists
lods
jno
popa
lods
fstpl
push
and
push
cwtl
idivb
dec
mov
mov
fwait
adc
sbb
add
push
xor
cmc
xlat
and
popa
addr16
xor
mov
int3
sbb
sbb
inc
lret
sub
cmp
lds
sub
in
aas
mov
mov
fwait
data16
push
imul
lods
mov
add
adc
jp
fsubs
xchg
popa
enter
and
sub
ja
mul
cmp
adcl
jne
stos
jno
push
push
sarb
addr16
adc
out
data16
jmp
mov
push
mov
testb
std
push
inc
inc
out
xlat
inc
add
stos
pop
cwtl
pop
xchg
cmp
jbe
lds
js
into
cmp
pushf
pushf
les
cmp
or
pop
rorb
bound
ljmp
es
mov
outsl
in
aas
popa
cltd
cmpsl
jbe
push
push
xchg
mov
aam
pushw
jle
cmp
pop
xor
fwait
stos
insl
pop
out
mov
pop
lahf
jmp
outsb
add
pop
js
test
xor
or
push
mov
ret
xor
dec
cmp
cltd
lods
test
mov
sahf
jge
call
xchg
xchg
xchg
cmp
pop
mov
imul
rcll
add
xor
fwait
test
fadd
lahf
scas
mov
push
icebp
dec
sti
movsl
and
wrmsr
inc
movsl
inc
dec
cltd
cli
cmp
mov
mov
out
test
stos
ljmp
int3
push
add
jns
mov
pop
in
scas
dec
loop
push
outsl
mov
or
gs
out
pop
iret
inc
push
mov
notl
clc
mov
cmp
in
sahf
sahf
aam
push
mov
add
insb
rorl
aaa
pusha
mov
xchg
sub
cli
dec
sub
out
push
les
add
mov
mov
mov
mov
jno
jb
test
pop
cli
out
sub
dec
sub
xor
fbstp
pop
insl
ds
nop
sbb
stos
imul
fldl
fwait
mov
hlt
jp
sbb
mov
imul
or
dec
mov
je
mov
fidivl
sub
sub
shll
mov
rcr
adc
in
enter
cmp
xor
nop
jo
mov
daa
out
xchg
xchg
xchg
push
inc
lods
push
sub
sbb
scas
mov
and
les
fistpll
dec
dec
fisttps
xlat
sahf
push
lds
push
iret
jmp
jne
and
pop
dec
subl
cmp
jnp
xor
xchg
subb
mov
or
jl
add
out
out
inc
ds
loope
sub
aad
mov
dec
xlat
nop
outsl
xor
mov
test
mov
ss
xlat
xor
adc
mov
jmp
add
pop
addr16
xchg
fimuls
lea
icebp
stc
cmp
iret
icebp
jg,pt
xlat
jl
aam
xor
ficompl
ss
scas
add
rolb
movq
popa
fidivl
dec
int3
leave
mov
inc
shlb
sbb
push
out
adcb
data16
in
in
mov
pop
ret
lcall
in
stc
movsl
daa
pop
mov
sub
fisubl
divl
adc
dec
push
aam
mov
call
stos
mov
jo
mov
std
cld
daa
arpl
aaa
pop
or
push
mov
in
outsl
cmp
test
adc
xchg
mov
enter
or
inc
pushf
sbb
lcall
notb
popf
mov
iret
and
sbb
add
push
icebp
or
pop
sbb
movsl
lock
cli
inc
stos
repz
js
outsb
stos
inc
mov
ret
addl
cmpl
or
dec
push
sarl
fidivrl
in
insb
test
mov
mov
lahf
lods
cmp
int
lret
xchg
jb
notb
xchg
lret
cltd
xchg
test
sub
xor
loope
fiadds
jmp
ljmp
xchg
enter
pop
out
gs
mov
add
cmp
mov
enter
das
adc
clc
call
cwtl
cld
je
iret
xchg
jmp
cltd
popl
dec
js
mov
xor
cmp
adcb
in
jno
lahf
std
test
or
dec
dec
lcall
aad
shrl
scas
imul
cmp
cmc
cmpb
xchg
test
mov
stos
adc
pop
sub
dec
inc
jnp
add
in
pop
inc
sub
cmp
push
mov
popf
cmpsb
pusha
add
pop
loop
aam
and
inc
mov
dec
dec
adc
xchg
movsb
sbb
out
std
jg
mov
push
fstl
sbb
push
enter
push
aas
adc
cmp
jmp
inc
repnz
mov
dec
cmp
adc
cld
or
sub
es
cltd
inc
mov
add
or
inc
mov
or
std
pushf
ret
jge
xchg
lods
add
out
aas
mov
inc
into
test
adc
inc
jmp
mov
addl
add
test
jg
jno
cwtl
aas
dec
add
sbbb
xchg
stc
xchg
xor
aas
mov
inc
pop
pop
cwtl
pusha
pop
daa
push
nop
arpl
adc
rep
pop
das
fldl
test
mov
dec
inc
push
iretw
cmp
cmc
push
test
or
sub
and
rcrb
adc
push
sbb
stc
lods
push
shrl
nop
xchg
call
inc
flds
test
jl
mov
sbb
mov
mov
mov
ret
je
stc
out
sbb
inc
xor
cmp
pusha
pusha
mov
cmc
aad
lsl
adc
fcmovne
addb
mov
dec
pushf
or
addl
xchg
push
sub
lds
ror
cmp
mov
sbbb
push
xchg
popf
jmp
les
icebp
repz
pushf
aam
mov
aaa
adc
inc
daa
or
es
sbb
mov
sub
das
lahf
rcrl
and
xor
mov
adc
and
ficoml
cltd
shrb
or
adc
loope
scas
clc
mov
fs
lret
scas
sbb
jae
push
lods
and
sub
cwtl
jl
stos
cmc
sub
add
in
in
jae
mov
rorl
out
xor
cmc
pop
xchg
pop
jns
or
xlat
dec
mov
inc
add
or
jb
add
sbb
arpl
imul
adc
popf
lret
dec
cmp
sbb
or
sub
adc
mov
inc
gs
xchg
ret
jo
sahf
adc
mov
mov
ljmp
jne
jns
cmp
push
repnz
xchg
jne
ss
add
shlb
push
imul
scas
xchg
ficoml
push
subb
out
and
cmpsl
cmp
or
mov
push
xchg
mov
jg
lods
jl
cmp
leave
ss
ret
fdivs
or
jno
pop
cmpsb
jbe
and
pop
dec
insb
imul
and
icebp
int
push
movsb
fsub
jno
push
inc
push
pop
daa
dec
or
mov
dec
inc
daa
scas
ficompl
xchg
lods
sbb
cmp
test
mov
test
repnz
mov
pop
pop
outsb
arpl
int
sub
pop
and
mov
jge
rclb
jmp
iret
in
fisubs
jg
jns
adc
xchg
stos
loope
mov
iret
adc
jo
or
xchg
outsb
push
and
xlat
jecxz
sub
enter
int3
adc
xlat
arpl
inc
cmp
sbb
xchg
adc
mov
jecxz
pop
loopne
adc
add
insl
sub
sti
cmpsl
fidivs
xor
xor
sbb
decb
adc
fbld
xchg
xor
hlt
xchg
push
mov
mov
popf
push
pop
loopne
mov
mov
insl
xor
or
incl
repz
push
cli
mov
dec
ret
cmc
inc
mov
mov
ret
sub
outsb
frstor
add
movsb
add
pushf
cmpsb
cmp
sbb
scas
mov
fildll
hlt
mov
jne
sbb
lcall
xchg
sub
rcrb
jp,pn
xchg
sbb
stos
lea
and
imul
mov
mov
xchg
or
dec
es
movsb
sub
les
daa
mov
adc
mov
push
aas
jbe
cmpsb
cs
test
pushf
fldt
dec
insl
rcll
adc
add
lods
imul
add
lods
dec
sahf
out
out
mov
fchs
or
mulb
adcb
and
or
imul
cld
push
popa
sbb
pop
sub
fcoml
cmp
js
imul
mov
jp
cli
push
iret
int3
out
jge
mov
push
sbb
and
je
das
xor
loopne
mov
mov
adc
pop
mov
fwait
test
insb
in
jge
jo
pop
nop
xor
mov
daa
cmpsl
mov
jle
mov
xor
xor
add
scas
mov
push
mov
jno
sbb
test
or
lods
push
fdivs
es
xchg
mov
ret
sbbl
pop
scas
rcrb
test
scas
test
test
mov
pop
leave
cmp
lahf
in
mov
bound
mov
xchg
ret
push
dec
cmp
inc
xor
scas
sub
mov
sbb
push
subb
push
shl
add
push
xchg
ss
ret
mov
dec
fdivrs
pop
aas
jne
out
add
push
mov
lahf
xor
fnstsw
in
sbb
daa
jmp
lods
daa
mov
shl
test
stc
je
xchg
aam
mov
pop
movsb
sub
sub
mov
xchg
clc
mov
inc
push
jmp
rol
repz
aaa
sarb
movsl
dec
mov
jl
mov
outsb
dec
icebp
addr16
mov
push
sbb
insb
repnz
lret
xor
into
adc
dec
xchg
jno
fs
xchg
add
mov
dec
xor
inc
jl
or
cmp
repz
pop
dec
aaa
rorl
incl
es
in
adc
ss
xor
sbb
xchg
shlb
pop
scas
addr16
data16
add
adc
push
dec
mov
stos
pop
jns
into
ds
in
in
jae
ljmp
ror
stos
insb
popf
fcomps
gs
ret
mov
repz
cmp
adc
shlb
int
aaa
lahf
mov
pushf
jge,pt
out
or
add
hlt
jns
push
or
jb
daa
inc
rorb
dec
sub
push
adc
push
xchg
stc
test
adc
xor
or
dec
xchg
sahf
bound
cmp
adc
out
xor
popl
imul
add
cli
inc
lods
mov
jg
add
xor
fcmovnu
xchg
in
lods
mov
push
jbe
cmpsb
pusha
xor
sub
pop
int3
js
inc
ret
jno
loope
pop
dec
test
movl
fildl
mov
push
test
mov
divl
jmp
mov
jge
inc
cmp
xor
test
in
jb
outsb
lahf
inc
cmc
inc
in
std
lds
push
push
and
stos
sti
dec
cld
sarb
adc
lcall
mov
push
dec
popa
sub
xor
sub
cli
cld
out
imul
inc
sbb
test
mov
or
push
repz
inc
mov
bound
es
lret
ja
mov
es
pop
mov
aaa
pop
mov
into
inc
bsr
mov
imul
cmc
xor
cmp
xchg
ret
into
adc
mov
popa
and
inc
sub
push
addr16
shlb
adc
daa
ds
add
clc
es
adc
mov
rolb
popa
mov
repnz
jl
mov
pop
cmp
inc
mov
sub
dec
sarl
dec
sub
movsb
pop
pop
ret
and
clc
adc
lock
repnz
pop
fimuls
xchg
cmpsb
xchg
jae
mov
rcrl
outsl
repnz
and
pop
sub
sbb
shlb
xor
pop
inc
xor
jmp
adc
dec
sub
jp
leave
int
push
std
jmp
add
or
cmp
dec
add
push
mov
sahf
xchg
imul
int3
xor
sub
lret
mov
add
cmpb
sbb
insb
jae
ss
sub
cs
lea
es
daa
loope
shlb
out
cs
imul
into
scas
xchg
jmp
ret
push
xor
mov
sub
jl
pusha
je
and
xlat
push
inc
or
repz
lret
or
daa
xor
daa
int3
repnz
repz
cmp
movsb
repnz
ja
add
inc
test
add
lods
ret
mov
fcomps
xchg
fucom
movsl
or
xchg
or
jns
testb
push
shlb
rcrl
sbb
sub
cmp
icebp
rcll
into
xchg
or
xor
js
cs
jnp
in
cmp
adc
jp
dec
push
fldt
xchg
enter
jo
das
movsl
mov
dec
adc
clc
mov
add
and
cmp
mov
call
push
mov
sbb
cmc
or
cmpsl
into
jbe
movb
mov
mov
mov
rorb
out
nop
ljmp
cmp
xchg
pop
insl
imul
mov
mov
and
aaa
sub
pop
dec
dec
rclb
orl
ret
stos
inc
or
daa
sti
sbb
fmull
enter
xor
push
scas
and
movsl
pop
sub
movsb
jb
pop
pusha
pop
pop
or
nop
jecxz
inc
pushl
pushf
sarb
movnti
dec
in
nop
jp
jle
fisubrs
jmp
sub
xchg
push
dec
xor
jge
push
adc
dec
dec
test
scas
sub
mov
adc
out
fwait
pop
mov
jle
cmp
clc
cld
jae
adc
pop
lea
das
jo
imul
sarb
cmpsl
mov
xchg
mov
push
mov
inc
in
pop
mov
pusha
enter
mov
out
lods
lea
outsb
fisttpl
ljmp
cmp
lds
add
pop
sub
out
fiaddl
pop
jg
pusha
iret
mov
out
sbb
mov
xchg
push
es
push
xor
lahf
lret
roll
jmp
mov
jle
movsb
insl
adc
push
and
cs
ret
fstl
adc
sbb
aaa
stos
add
mov
pop
bound
pop
or
data16
push
xchg
dec
cs
mov
inc
call
rol
dec
repz
sbb
cmp
adc
mov
roll
aas
into
inc
jmp
lcall
push
in
pop
out
mov
popa
sub
xchg
adc
aad
out
or
int
xchg
stc
adc
pop
adc
xor
shrb
jns
outsl
pop
test
aam
mov
lods
inc
rcrb
or
std
mov
push
incb
xchg
jnp
jecxz
inc
repnz
mov
test
aaa
add
fisubs
loope
mov
cmc
add
adc
and
push
pop
pushf
add
aas
cli
cwtl
mov
lods
fistps
cmp
loopne
out
test
and
sbb
ror
xor
push
stos
ss
push
daa
adc
pusha
imull
mov
cmpsb
inc
or
jne
adc
nopl
pop
out
and
mov
pusha
std
inc
sub
xchg
xchg
repz
ja
push
ret
push
and
fiadds
mov
jmp
jns
xchg
adc
in
and
xchg
or
fisubrl
lods
mov
arpl
push
repz
rorb
or
jp,pn
in
inc
divb
bound
daa
dec
lea
mov
or
ss
adc
orl
push
cmpsl
loopne
and
add
int3
mov
pop
ds
aas
inc
mov
dec
dec
sbb
mov
scas
xchg
pop
cmc
and
lahf
jmp
add
or
sbb
inc
jp
or
lods
inc
pop
popa
aad
adc
adc
stos
cmp
sbbb
in
xchg
pop
test
mov
dec
aam
add
cmp
push
pop
push
adc
mov
les
orl
and
addr16
les
pop
add
xor
mov
stc
xchg
xchg
dec
aas
pop
mov
sbb
jle
xchg
pop
sahf
loopne
or
stc
sbb
pop
cli
shlb
push
stos
je
pop
bound
or
imull
ret
repnz
enter
in
and
addl
movsl
or
enter
xor
lods
ret
imul
mov
adc
sahf
cmp
lods
dec
jp
adc
adc
xor
stos
and
xor
and
bound
mov
ficoms
in
jnp
dec
insb
mov
pop
mov
xor
pop
jp
jecxz
dec
pop
dec
out
movsb
adc
insl
pusha
cmp
repz
sbb
mov
outsb
adc
cli
in
mov
sbbl
jle
push
pop
call
iret
insl
jae
arpl
lcall
mov
push
push
sarb
or
iret
jecxz
sahf
pop
xorl
call
out
sbb
mov
xchg
arpl
shll
pop
dec
insl
inc
mov
js
loop
cld
xchg
mov
mov
inc
aad
push
inc
xor
outsl
inc
or
lods
cwtl
dec
add
pop
cwtl
mov
popf
push
inc
xchg
push
lret
or
mov
into
pop
imul
xchg
adc
or
dec
lcall
add
dec
test
mov
xlat
mov
inc
or
jmp
dec
inc
dec
mov
mov
imull
xchg
movsl
jg
jp
inc
aaa
out
sbb
lret
adc
insb
scas
sbb
push
cmp
out
or
jle
sub
leave
xor
cmp
scas
aaa
lods
adc
and
fwait
dec
sbb
fs
dec
sbb
outsl
and
push
cltd
sbb
cs
in
hlt
iret
xchg
shrw
inc
gs
jbe
lods
jne
jb
inc
je
jne
sub
out
mov
mov
add
mov
in
inc
or
loopne
and
cmp
clc
inc
mov
test
call
or
mov
adc
add
call
cmp
mov
jmp
sub
add
lret
shrl
outsb
fwait
in
mov
mov
push
loope
lock
gs
repnz
jo
push
bound
cmp
mov
push
and
xchg
mov
rolb
cmp
daa
adc
sub
xor
sbb
outsl
xchg
and
add
cmp
mov
sbb
aas
dec
ret
dec
push
mov
clc
mov
jbe
push
jbe
mov
je
mov
dec
dec
popf
mov
mov
jle
pop
cmp
push
or
std
fiaddl
pushf
orb
push
mov
or
into
es
lret
cmpsb
leave
mov
mov
frstor
mov
mov
cmpsb
popf
testb
mov
pop
pop
int
pop
sub
aam
repnz
neg
sbb
sbb
jp
xchg
fisubrl
int3
cmp
ror
fcompl
shlb
cmp
movb
jbe
push
mov
lods
pop
push
sub
jp
push
cmpsb
lds
inc
pop
jg
ret
outsb
cmp
fistpll
repz
nop
test
imul
lea
push
or
sbb
popf
rcll
popa
sbb
lea
pop
icebp
add
cmp
iret
xor
adc
lods
inc
mov
cli
lds
ljmp
mov
aam
pusha
fisubs
mov
mov
outsb
xor
jns
jnp
pop
mov
out
inc
out
xchg
mov
fsts
loop
fistpll
leave
mov
push
inc
cmp
lret
test
mov
or
sti
int3
hlt
cmp
and
adc
inc
jae
push
pop
das
jnp
or
and
lcall
xchg
loopne
push
jp
jg
inc
ljmp
cmp
movsb
push
sub
rolb
cmpsl
add
mov
rclb
scas
lock
xchg
inc
insl
mov
fsubrl
xor
shll
pop
js
pop
test
add
cmpl
sbb
int3
fistps
cmp
push
popf
adc
xor
rcll
loop
int
mov
imul
bound
ljmp
rcr
hlt
sbb
lods
mov
xor
push
int3
sbb
sub
jle
mov
les
pop
mov
dec
jp
add
das
sti
leave
dec
lods
xchg
sub
sub
jmp
mov
and
mulb
push
xor
sub
mov
dec
jge
mov
push
es
xchg
lods
push
mov
ret
int
mov
jecxz
outsl
cmp
scas
sarl
mov
or
iret
arpl
mov
cmp
aad
jnp
int
ljmp
fistpll
jbe
xor
jne
push
cmp
loopne
sahf
pop
push
mov
dec
jae
fbld
fdivs
or
sub
jmp
jae
and
sbb
adc
out
bound
push
mov
push
aas
outsb
sahf
cli
icebp
jno
mov
hlt
mov
xchg
cmp
je
xorl
shll
hlt
repnz
decb
jmp
inc
add
or
rcll
repz
daa
out
mov
jno
lods
xchg
xchg
popf
mov
jmp
mov
lahf
addr16
cmp
arpl
cmp
mov
sub
and
mov
loop
jns
and
mov
imul
dec
fsubrs
cld
divb
ja
xchg
lea
cs
xchg
das
dec
dec
bound
cli
xchg
fs
xchg
mov
fsubr
sarl
push
ds
lods
xchg
cs
and
cmpb
cmp
sbb
icebp
ja
ret
xchg
push
test
xor
push
out
repz
inc
and
mov
idivl
pop
sub
push
sub
or
or
sbb
sarb
mov
lock
aas
mov
mov
sub
in
pusha
aad
and
mov
outsb
xor
fisubs
repnz
fcmovu
mov
aad
xchg
cmpsl
cwtl
sub
enter
sub
fnstsw
loope
fwait
or
je
fistpl
xor
mov
push
pop
jne
mov
fldenv
fldl
add
inc
mov
aad
sbb
or
call
std
js
mov
stos
nop
mov
test
jle
sbb
gs
jo
insl
outsl
imul
xchg
enter
mov
push
stos
outsl
ja
cmp
popf
mov
test
jecxz
fcmovbe
xor
repz
mov
iret
pusha
cmp
stc
push
dec
sbb
push
addr16
cmp
filds
dec
cld
jne
cmp
psraw
pop
and
pop
push
xchg
mov
lret
or
and
xchg
ljmp
jbe
data16
insl
mov
cmp
insl
add
cmp
adc
jle
out
loope
inc
push
rorl
sahf
pop
orb
xor
shll
fildll
orb
add
test
and
ficompl
mov
imul
cmpl
xchg
xchg
stos
test
push
add
gs
xchg
inc
sub
rcrb
fwait
out
xor
rcrl
sub
ss
popa
mov
aas
inc
out
lret
jno
mov
fbstp
and
jnp
mov
fnsave
sub
bound
jbe
cmp
push
pop
dec
fmull
pop
jbe
adc
pushf
leave
fsubp
xor
test
pushw
pop
adc
repz
adc
sub
add
test
clc
mov
cmpsl
dec
add
sub
add
pop
repz
dec
pop
mov
mov
xor
gs
rcrb
inc
pop
mov
int
jbe
fistps
out
fsts
adc
inc
pop
lods
push
mov
sub
xor
sub
push
cmp
inc
mov
fistps
mov
stos
inc
stc
jge
add
out
es
pushf
aaa
adc
and
inc
movsb
xor
mov
out
xor
es
pop
ret
or
xor
not
mov
arpl
inc
adc
push
xor
in
adc
xlat
mov
lcall
pop
mov
rcll
cltd
fwait
cmp
sub
add
repnz
pop
sub
adc
adc
lret
or
xorl
dec
xor
stos
cmp
mov
lret
jo
add
mov
pop
gs
xchg
rcl
clc
pop
pop
push
pop
ret
lods
mov
ficoms
inc
iret
jecxz
cmc
add
out
jge
daa
sub
fdivr
ja
mov
xor
test
inc
ss
int
sbb
xchg
push
mov
mov
push
cmpsl
dec
inc
stos
bound
mov
push
loope
sbb
fstpl
mov
pushf
dec
insb
repnz
js
mov
pushf
add
cmp
jbe
jbe
in
aas
sahf
or
and
mov
sbb
xchg
andl
lock
mov
push
cmp
je
or
cmc
mov
loope,pn
jge
mov
inc
ljmp
pop
fnstsw
lcall
popa
imull
bound
rcrb
add
scas
mov
mov
clc
cmp
cmp
aam
xor
icebp
test
xchg
add
in
dec
push
fcoml
inc
inc
cmpb
and
lcall
addb
and
jo
jno
arpl
or
in
sub
cvtdq2ps
pop
jg
pop
stc
mov
sbb
xor
ds
idiv
jo
or
mov
or
mov
loop
scas
out
scas
jbe
push
xlat
outsl
test
repnz
push
mov
cmp
icebp
pusha
jo
fsub
jmp
push
into
mul
test
adc
pop
es
mov
decl
loope
lock
and
je
js
ja
mov
mov
or
adc
mov
mov
inc
pop
pop
jnp
insl
adc
xor
xor
jb
rol
cwtl
lret
jne
into
pop
mov
and
cmp
cmp
xchg
mov
rcr
xchg
lahf
out
cmp
cmp
xor
je
scas
out
clc
mov
addr16
aam
repnz
mov
fbstp
icebp
pop
cmp
shll
loope
ficomps
das
cwtl
xor
xlat
lcall
stos
lahf
sbb
inc
cmp
and
jmp
cmp
mov
jo
cli
ss
push
je
stos
repz
aas
cwtl
sahf
pop
cwtl
jl
aad
push
dec
mov
inc
xchg
fsubl
fistpl
or
lret
inc
sbb
imul
push
push
and
es
jb
aam
test
and
ljmp
xchg
les
les
cld
cmp
rorl
or
out
enter
jmp
ljmp
fiadds
push
movl
cmp
mov
aad
dec
and
test
adc
repz
es
aaa
repnz
jne
push
je
lods
lds
fs
aam
push
iret
je
or
push
mov
js
push
jns
add
insl
cmpsl
jecxz
js
lds
adc
dec
or
add
xor
pop
cwtl
mov
sub
addr16
xor
adc
cmp
ret
sub
inc
pop
das
test
dec
jl
aam
les
xor
inc
int
adc
lods
pop
mov
subl
call
mov
in
cwtl
lcall
push
sti
test
xor
xchg
stc
imul
mov
lret
flds
inc
ds
nop
bound
push
push
and
jno
cs
push
push
movsb
test
pop
fldenv
ja
test
xor
loop
cmpsl
mov
jne
cmp
nop
adc
xchg
push
mov
or
or
into
loope
movsl
xchg
in
call
rcrl
xor
jecxz
pop
std
pusha
in
insb
movb
xor
adc
js
mov
sbb
or
cmpsl
fadds
cmp
outsb
pop
adcl
shl
pop
das
insl
lret
or
lds
sub
aaa
mov
mov
mov
fsubs
or
out
push
pop
mov
int3
rol
fnstcw
test
jno
push
fildl
jns
in
jecxz
or
mov
rcll
cmpsb
dec
fisubl
std
sarb
cmp
ja
xor
bound
pop
cld
adc
jno
movsb
xchg
in
imul
call
or
insb
xchg
mov
lods
mov
pusha
fdiv
or
adc
test
mov
xchg
rcrl
dec
pop
fdivs
test
sub
mov
clc
mov
aad
xor
push
xchg
movl
mov
leave
cmpsb
movsl
lods
cmpl
sub
xchg
int
add
and
mov
outsl
xorb
bound
mov
xor
nop
cmpsb
ljmp
pusha
pop
leave
lock
adcb
enter
inc
clc
mov
stc
in
je
enter
ljmp
adc
pop
ret
call
loop
xchg
mov
das
outsb
xchg
addr16
insb
mov
in
jle
or
popa
sub
lods
sarl
pop
adc
shlb
or
pop
sbb
in
outsb
jmp
fcoml
pop
mov
popa
push
or
ret
and
inc
sbb
push
jne
paddsw
adc
jge
add
andnps
das
push
test
sti
xchg
jmp
jl
int
mov
mov
mov
or
mov
ja
mov
add
pop
fisttpll
lcall
inc
adc
ss
dec
rorb
or
and
test
dec
cs
scas
mov
inc
jp
in
mov
mov
loopne
pop
mov
xor
push
mov
push
pop
mov
cmp
std
dec
lret
adc
fistl
pop
cs
adc
push
call
mov
out
push
mov
mov
dec
cmc
jno
sar
pop
repnz
test
pop
enter
fwait
repz
xchg
bound
push
into
clc
out
and
mov
out
adc
pop
jmp
and
dec
inc
pop
and
lret
clc
jp
daa
loop
lret
cmpsb
sub
insb
sub
pop
lods
and
ljmp
mov
xlat
adc
insl
pop
fadd
pop
icebp
clc
inc
fldenv
mov
rcll
fwait
push
mov
sbb
test
cmc
and
dec
sbb
fcmovb
hlt
test
mov
cmp
imul
cmpsb
sub
inc
and
add
xor
sbb
inc
fstl
ret
stos
into
data16
sbb
push
dec
xchg
xchg
in
sbb
pop
mov
sub
jo
push
xchg
mov
mov
mov
es
and
std
xor
test
lods
mov
jle
scas
jae
mov
lcall
ret
dec
dec
push
inc
imull
dec
into
out
inc
add
cmp
mov
into
mov
int3
pop
jmp
push
mov
pop
fdivr
mov
js
cmp
cmpsl
inc
mov
sub
and
mov
mov
unpckhps
dec
sbbb
jge
sub
roll
aad
push
cmp
loope
sbb
xor
test
inc
ja
mov
push
cmpsl
jl
mov
fstp
out
inc
pop
fs
hlt
add
inc
pop
xor
dec
dec
and
stos
adc
push
cmp
int
icebp
push
adc
sub
lods
jnp
popa
pop
lock
inc
fidivs
test
insb
cli
addr16
movsb
xchg
push
cmp
cmp
jge
push
sbb
filds
mov
int3
lret
lods
add
adc
fadd
xor
or
inc
sub
ret
sub
pop
cmpl
jno
xchg
cmpsl
adc
xchg
adc
mov
add
add
daa
xchg
cwtl
adc
dec
popa
cwtl
sbb
sub
xor
movsb
dec
iret
clc
stos
add
dec
cmpsl
xor
dec
mov
loope
clc
xor
sbb
cmp
lods
jnp
scas
sbb
lahf
cli
sbb
test
cltd
neg
push
outsl
sahf
xorb
push
fldl
mov
mov
inc
movsb
or
add
fwait
ret
add
popa
adc
xchg
push
push
xor
jne
int
repz
inc
jp
dec
es
dec
push
inc
lds
sub
mov
pusha
or
shlb
cmp
xor
xchg
aam
pop
mov
or
mov
inc
push
xchg
aas
es
icebp
mov
mov
xchg
inc
dec
xor
lcall
std
sti
pushf
lea
imulb
sbb
mov
pushf
inc
movsb
cmp
dec
dec
mov
addr16
aaa
inc
pop
xchg
or
dec
lcall
mov
call
mov
jmp
loop
sbb
loopne
cmp
pop
lea
pushf
pop
jne
mov
push
pop
mov
scas
push
scas
cmp
call
movsl
pusha
xor
pop
ljmp
out
mov
mov
int
jb
in
add
lret
js
xchg
sub
mov
lods
cld
imul
cmpsl
mov
loope
sbb
and
mov
popf
mov
imul
mov
pop
jne
adc
aam
movsb
cmp
mov
push
stos
fsubl
idivl
cmpsb
jns
push
test
push
cmp
arpl
xchg
arpl
idiv
aas
jmp
es
mov
insl
stos
mov
imul
or
test
cmp
pop
mov
rcrl
cwtl
lea
mov
sbb
movb
cmp
push
jl
stos
cmpsl
mov
push
xchg
cld
push
sub
sub
mov
or
out
dec
loopne
pop
jno
mov
jmp
lock
das
neg
jl
jp
pop
mov
add
mov
pop
inc
and
push
mov
test
sahf
loopne
jp
inc
mov
xchg
fucomi
imul
lahf
xchg
pop
lahf
xchg
aas
pop
les
imul
cltd
fistpll
ret
cmp
mov
sub
lret
sbb
or
imul
adcb
mov
xchg
jge
ds
cmp
cmp
shrl
xchg
sub
sub
out
mov
lods
out
into
sbb
xchg
mov
fdecstp
mov
stos
int3
test
mov
jp
mov
and
enter
jae
sbb
rcrl
stos
in
xchg
xor
inc
push
enter
pushf
outsb
mov
lret
dec
loop
add
jns
cmp
std
sub
fistpl
loopne
inc
das
inc
push
test
jnp
out
popl
adc
mov
test
mov
push
testl
in
aas
jae
bound
jo
bound
aam
enter
rcr
xchg
inc
jb
xchg
mov
out
push
adc
pop
mov
xchg
push
xchg
es
lret
addr16
cmc
pop
rcrl
adc
dec
cmpsb
lahf
aad
out
xchg
mov
adc
sub
pop
lods
lret
jne
and
insl
dec
aad
insb
and
or
pushf
and
jno
les
out
fs
iret
add
popa
jno
add
in
je
push
pusha
nop
scas
jle
or
fwait
leave
dec
outsb
jo
sti
das
add
adc
rorb
xor
cmp
push
inc
loopne
std
das
sarb
std
add
mov
scas
mov
mov
cmp
inc
push
xor
mov
es
add
sbb
pusha
xor
jae
clc
mov
movsl
mov
pop
cmpsl
sbb
pop
mov
cmp
fsubrl
mov
xor
and
out
enter
xor
xchg
adc
xchg
fcomip
fnsave
push
or
outsl
icebp
push
rep
inc
push
cmp
nop
fisubrs
mov
out
cmp
sub
loopne
jnp
and
push
int3
negl
or
stc
ja
call
fs
loope
icebp
enter
pop
jg
xchg
pop
inc
dec
cmp
mov
xchg
in
je
push
insl
fcoms
les
dec
or
test
call
push
or
in
fs
push
adc
dec
mov
inc
pop
cmc
dec
js
and
sti
jb
fcmovne
lods
dec
inc
rcll
jne
ret
xchg
mov
pop
push
and
mov
pop
mov
adc
cmp
in
hlt
in
int3
lahf
fidivrl
mov
sti
adc
leave
bound
add
loopne
clc
sti
nop
sub
jmp
mov
rolb
xor
mov
dec
jle
dec
fildll
lahf
arpl
popl
dec
pop
add
pushf
fimull
jno
add
push
cmp
dec
and
sbb
leave
mov
mov
fsubrl
fisubrs
mov
mov
mov
test
out
or
inc
std
ljmp
mov
sbb
xor
nop
sub
mov
push
xchg
inc
mov
nop
call
mov
add
pop
fmuls
popaw
xchg
stos
movsb
or
add
inc
fwait
shlb
mulb
cmpsb
dec
insl
push
ret
pop
pop
pop
jo
lret
pushf
int
cmp
xchg
out
inc
adc
leave
adc
sub
pop
pop
adc
out
push
pop
stc
adc
push
adcb
hlt
imul
notb
dec
mov
sbb
iret
sbb
mov
rol
pop
leave
mov
nop
aaa
pop
ljmp
mov
jno
mov
mov
inc
sbb
mov
cmpsb
pop
dec
lods
in
xor
outsb
lcall
in
test
jnp
push
pop
cmpsl
and
mov
add
adcl
mov
scas
mov
jecxz
and
sbb
pop
pop
cmp
fbstp
repz
inc
and
lret
sub
lods
xchg
xchg
jl
jb
jmp
inc
mov
out
xchg
xchg
sub
das
pushf
loopne
pop
dec
pop
aam
or
jl
out
cmp
and
push
jmp
mov
out
jne
gs
sbb
mov
sub
scas
je
daa
xor
test
clc
in
lret
mov
arpl
pop
fwait
sti
sub
mov
in
mov
fbstp
test
pop
loopne
jo
sub
leave
cmp
ret
sbb
add
popa
repnz
xchg
lret
pop
clc
shrb
push
push
jae
jp
xchg
int
jmp
leave
insl
movsb
shlb
stc
jno
pushf
mov
clc
insb
xchg
push
push
fcomps
mov
add
jl
cmc
sub
mov
cmp
cmpsb
pop
mov
sbbl
pop
insb
inc
lret
and
imul
pop
jbe
leave
mov
in
scas
pop
pop
xchg
dec
addl
jns
cmc
ss
mov
xchg
mov
divb
adc
addb
or
subl
mov
call
mov
jl
dec
adc
jge
mov
pop
mov
push
push
scas
cld
sbb
fs
hlt
xchg
xlat
mov
aam
fwait
xchg
js
xchg
xchg
in
scas
push
xchg
or
mov
cli
xchg
mov
call
mov
mov
jecxz
cs
imull
mov
int3
dec
cwtl
cmpsb
imul
cmp
pop
mov
jp
xchg
scas
adc
push
sub
dec
rorb
adcl
push
xor
add
bound
jge
jno
dec
in
dec
rsm
stos
mov
push
jne
jnp
mov
arpl
mov
lret
cmpsl
inc
sbb
jmp
or
or
dec
lock
add
jae
call
adc
adc
jb
cmp
scas
push
cmpsl
inc
push
inc
sbb
scas
xor
scas
jp
xor
sahf
inc
inc
fistl
ljmp
mov
pop
mov
mov
mov
mov
fwait
loope
in
out
and
lahf
push
in
xchg
jno
or
adc
pusha
pop
and
add
jae
mov
cwtl
orl
jbe
or
cmc
hlt
aaa
mov
popa
ret
mov
pop
addb
adc
out
negb
shrb
adc
int3
test
aad
ss
adc
and
pusha
jecxz
mov
sub
popf
fidivs
shl
jo
adc
push
in
or
ret
call
or
rcrb
loopne
pop
and
sbb
add
xchg
je
lds
push
out
in
outsl
loopne
shrb
iret
mov
lcall
jno
push
inc
pushf
in
test
into
fistl
inc
cmp
xlat
dec
fdivr
out
clc
jb
orb
jb
icebp
or
jns
or
and
int3
ret
jne
ss
or
xchg
mov
or
mov
ret
lock
int3
popa
mov
ljmp
int
add
aas
stos
dec
js
ret
mov
push
adc
push
repz
test
mov
inc
ret
stos
inc
jo
repz
jle
stos
mov
into
fadds
mov
xchg
rcll
data16
jecxz
lret
ret
dec
add
ret
cmp
jne
pop
in
push
ja
mov
cmp
rcr
or
jmp
popf
cmp
and
iret
push
nop
xor
lahf
repz
push
xor
sbb
sub
ficoml
cmp
mov
or
dec
ds
mov
icebp
adc
pop
push
arpl
xchg
shlb
jl
ss
lret
fnstsw
cld
cli
out
sub
call
xchg
or
adc
fst
fstl
test
sahf
dec
push
cmpl
adc
or
insb
pop
add
faddl
dec
xor
sbb
push
xorl
fists
mov
mov
scas
scas
add
lea
or
sbb
mov
mov
add
jl
sbb
xchg
and
inc
insl
inc
push
push
fsubr
mov
adc
call
jg
adc
imul
add
push
mov
fs
sbb
push
push
or
adc
ficompl
push
or
mov
cmp
xor
inc
jne
addl
inc
jl
out
popa
or
ja
std
and
repnz
mov
dec
lods
push
cmp
fnstcw
and
xor
mov
dec
mov
or
rcr
aaa
imul
pop
mov
xchg
imul
gs
sbb
fdivrl
lds
add
lret
mov
popa
cmp
and
inc
testb
ret
pop
out
out
mov
inc
add
loopne
push
fs
std
pop
test
push
iret
inc
fs
xor
adc
pop
jmp
notl
dec
push
xor
pop
imulb
fistpl
mov
jno
lahf
hlt
gs
mov
mov
jne
sbb
mov
xor
push
das
jns
cmp
push
nop
jb
addr16
xor
mov
add
jmp
ljmp
scas
gs
out
jmp
mov
pop
dec
idivl
lods
xchg
arpl
adc
sub
mov
jp
mov
je
cmp
xor
es
popa
fs
mov
cwtl
stc
push
call
and
pop
in
xor
shll
adc
xor
jle
sbb
inc
out
adc
and
inc
xlat
jnp
int3
lock
repz
loope
push
aaa
stos
jbe
mov
mov
sarb
pop
cmpb
jb
in
cwtl
xchg
test
lods
mov
cwtl
pop
xchg
shlb
cmp
cwtl
cli
add
iret
shlb
jle
pushf
shr
cmp
mov
fldl
jg
insl
inc
or
and
cmp
insl
inc
std
lock
mov
addr16
xor
jbe
mov
clc
lret
pop
jae
mov
dec
mov
xor
insb
out
jl
pop
in
addr16
loopne
lret
push
call
xchg
and
out
cmp
inc
sub
dec
andl
lret
add
dec
outsb
je
cmp
rorb
pop
lret
lret
pop
push
test
addr16
in
aas
ficomps
movntq
jge
shll
inc
repz
fsubrl
fdivp
mov
xchg
leave
dec
adc
xor
mov
loopne
insb
ljmp
mov
sbb
roll
fists
and
loopne
pop
add
lods
sub
insl
sub
das
stos
or
pop
mov
fcoml
fldt
ja
test
pop
fcmovnbe
adc
xor
mov
mov
cmp
std
jecxz
dec
or
imul
pop
stos
fimull
ja
xlat
mov
add
loopne
pop
mov
sahf
cmp
mov
jle
or
mov
xchg
mov
add
inc
mov
imul
adc
int3
mov
shll
push
jecxz
les
dec
loopne
mov
vpsubusb
imul
mov
jl
lcall
imul
insl
iret
icebp
ret
or
xchg
jo
test
loope
insb
mov
shrl
sahf
iret
aam
push
push
bound
out
imul
jle
adc
push
test
or
cmp
fidivrs
mov
in
into
imul
adc
push
adc
push
aas
pop
sbb
cmp
mov
in
sbb
int3
and
mov
hlt
iret
jl
pop
out
adc
imul
sbbl
push
stos
mov
or
outsb
rcl
test
mov
inc
loope
adc
mov
push
push
pushf
pop
pop
frstor
inc
fxtract
push
outsb
mov
and
push
mov
mov
add
push
dec
stos
idiv
push
jns
dec
jno
sub
jno
popa
mov
sbb
rolb
cli
add
cmp
lret
inc
das
adc
cmp
inc
mov
sbb
xor
pop
mov
or
cld
adc
pop
bnd
xlat
dec
jnp
movsb
outsl
stc
inc
fdivrs
sub
out
icebp
adc
sbb
ret
lret
cmpsb
fisttps
push
shrl
mov
imul
std
adc
int
jne
push
repnz
add
dec
inc
inc
pop
push
aaa
cld
sbbb
shlb
pop
mov
and
gs
rolb
cmpsl
or
and
adc
mov
ljmp
mov
xor
jne
sbb
cs
jp
add
into
mov
stos
inc
icebp
add
fs
ret
pop
mov
jmp
fs
fs
push
lds
stc
mov
flds
jg
push
insl
and
pushl
jno
mov
addb
mov
jmp
ficomps
xchg
xchg
ja
int3
loop,pt
xor
into
mov
add
rorl
or
mov
and
mov
jl
sub
lret
std
dec
popa
push
scas
add
jmp
fisttps
fmuls
or
movsl
add
pop
mov
mov
jg
jg
xor
lret
push
aas
jno
fistpl
repz
ljmp
cmp
cmpsl
incl
cmp
test
jns
lods
xchg
je
repnz
cmp
loope
mov
sbb
mov
add
stos
cmp
divb
adc
ret
xchg
js
xchg
dec
stos
cs
pusha
xor
int3
ds
pop
sbb
xchg
out
inc
push
aas
sbb
notb
jns
loop
pop
pop
pop
fimuls
jo
dec
jecxz
xlat
imul
push
sbb
aam
jecxz
cmp
push
repz
dec
sub
inc
insl
mov
mov
loope
add
std
xor
imul
and
sub
lahf
addb
add
add
pop
iret
mov
out
loopne
or
hlt
push
lds
sub
rcrl
lds
dec
cmp
inc
mov
jb
dec
sbb
idivb
scas
jns
aaa
ret
push
cs
in
jbe
inc
mov
xchg
mov
mov
lods
push
pop
mov
enter
mov
push
iret
fiadds
sbb
jns
xor
arpl
jmp
mov
add
xchg
hlt
sub
inc
mov
idivl
sahf
test
movb
and
int
pop
call
loopne
lods
add
add
jb
out
mov
and
sub
dec
movsl
inc
sti
and
aam
cmp
and
test
fs
int
xor
sub
rolb
jno
mov
cmpsb
mov
cmp
pop
mov
xor
inc
scas
mov
lret
pop
hlt
movsb
fwait
pusha
mov
dec
cwtl
adc
cltd
jo
cmp
out
dec
ret
inc
sarb
addr16
add
adc
jo
mov
or
movl
jae
fxam
icebp
push
jl
dec
ja
incb
pop
mov
sti
repz
xchg
inc
cmp
cs
inc
scas
sbb
lods
adc
lret
hlt
shll
push
jbe
inc
test
iret
lret
pop
fstpt
inc
lret
ljmp
jmp
jmp
xchg
mov
movsl
jmp
or
jge
jp
mov
or
mov
xchg
enter
jns
mov
iret
cmpsb
imul
cmp
lods
or
mov
jmp
sbb
lret
les
jnp
lahf
cmp
mov
xchg
ss
mov
inc
dec
push
inc
imul
jmp
adc
pop
or
rcll
out
sub
cmpsl
cmpsb
fisubs
or
pop
mov
shrb
int3
sub
mov
rolb
mov
cmp
enter
sub
in
loopne
insl
inc
adc
into
and
imul
sub
sub
xchg
stc
pop
mov
imul
xchg
aad
dec
adc
scas
lods
inc
mov
pop
outsb
mov
into
shl
cmp
loope
adc
or
ljmp
or
xchg
bnd
and
test
sbb
push
std
lea
shrl
add
mov
xchg
mov
mov
decb
sub
nop
loopne
or
inc
and
mov
das
xchg
sub
in
ss
mov
fcompl
push
push
push
dec
mulps
add
push
gs
int
pop
or
imul
mov
mov
xchg
and
mov
sbb
inc
fdivrl
outsl
pop
les
mov
push
pop
jle
and
or
addr16
add
add
sub
inc
mov
dec
test
notl
nop
xor
sbb
mov
mov
loopne
pop
stos
push
mov
dec
push
aaa
fsubrl
cli
cwtl
mov
sbb
mov
aaa
adc
fidivs
add
fstpl
mov
outsb
sub
xchg
test
div
sbb
movsb
in
and
insb
sbb
jge
mov
and
pop
or
xchg
inc
inc
cmc
scas
insb
into
cmp
jo
stc
or
xchg
inc
pop
es
loopne
stos
std
mov
xor
or
or
inc
dec
aad
je
stc
sbb
mov
sbb
jbe
mov
movsl
pusha
out
arpl
fcoml
ds
push
in
xchg
xchg
mov
filds
nop
iret
xor
je
sbb
ss
xor
sarl
xchg
push
hlt
sahf
lods
dec
xchg
iret
ret
shl
int
insb
fnstenv
fsubrs
std
sbb
cmpsb
fcompl
sbb
cld
cmp
and
cmc
cmp
lret
dec
push
call
arpl
push
sbb
in
xor
and
pop
push
repnz
sbb
jnp
mov
sahf
in
or
mov
sahf
inc
cld
push
jno
shr
sub
mov
inc
out
fidivs
mov
push
mov
sbb
gs
repz
push
xchg
pop
testl
cmp
cmpsl
mov
pop
nop
fdivrs
idiv
call
cmpsl
mov
scas
inc
xchg
ss
int
ds
stos
pop
mov
cmp
dec
inc
ljmp
aaa
pop
pop
dec
dec
aad
cli
fs
stos
in
lcall
mov
lock
inc
push
push
jg
mov
push
loop
mov
add
mov
or
jns
pop
jne
out
out
cmp
scas
popf
xchg
iret
cmp
adc
mov
addr16
mov
ss
add
or
arpl
jmp
imul
pop
jb
mov
jno
sti
sbb
repz
cmp
jg
xor
sbb
movsb
pop
mov
cwtl
dec
sbbb
out
int3
push
or
out
outsl
dec
lock
lret
shl
and
mov
sbb
pop
fcomp
iret
xchg
cld
dec
mov
xor
sub
pop
push
push
pop
ja
sub
mov
inc
roll
add
sbb
dec
add
mov
pop
sub
sbb
mov
mov
imul
cmp
jl
hlt
in
sbb
leave
inc
or
xor
enter
push
xchg
or
clc
repnz
pop
ja
push
out
aas
mov
jno
aaa
mov
out
movsl
or
sbb
cmpsl
imul
or
icebp
mov
movsb
dec
mov
inc
inc
adc
in
sub
div
jo
pop
inc
inc
mov
fwait
add
add
xchg
sub
cs
or
push
mov
xorb
inc
test
sti
divl
add
ja
pop
cmp
pop
xchg
out
jle
fsts
xchg
jecxz
cltd
lods
jne
inc
mov
imul
xlat
jns
sub
pop
sbb
jl
outsb
repnz
mov
das
or
xchg
lahf
lea
add
stos
and
test
in
push
jmp
jnp
insl
insb
jnp
lret
ja
and
std
aam
inc
xchg
mov
or
into
xor
ret
fiadds
std
leave
fistl
call
inc
xchg
fucom
scas
inc
dec
movsl
outsb
mov
cmp
adc
cmp
test
push
jg
pop
add
mov
std
jmp
xchg
popa
mov
into
jmp
sbb
andl
lods
lock
jns
sub
mov
faddl
imul
insl
add
pop
mov
les
mov
shll
dec
adc
sbb
scas
cmp
adc
outsb
and
sar
or
xor
cs
scas
pop
dec
enter
fbld
fcomps
sub
adc
repnz
mov
inc
ds
loop
jno
insl
shlb
imul
add
movsb
inc
cwtl
cmp
dec
pop
into
xlat
cmp
dec
pushf
jbe
dec
mov
xchg
push
outsb
out
xor
jns
xor
adc
inc
rol
adc
mov
mov
shll
mov
sbb
lods
push
jmp
adc
js
lea
add
cli
jle
cli
xor
repnz
xchg
call
sub
je
outsb
add
sbb
xchg
popa
ret
jmp
loop
lret
in
adc
test
jmp
fnstcw
imul
pop
and
mov
flds
and
les
arpl
jns
ret
mov
test
int
insb
popa
sub
scas
mov
cmp
in
inc
adc
das
mov
data16
xchg
xor
jb
daa
pop
xchg
xor
mov
mov
inc
xchg
add
enter
sahf
mov
xor
add
xchg
lock
ret
movsl
adc
pop
cmp
mov
push
inc
or
fistl
popf
xor
mov
add
aam
pop
arpl
cmp
xchg
inc
jo
push
les
inc
pop
mov
jp
lock
mov
sar
mov
rorl
scas
mov
lret
sbb
int3
sub
fisttpl
jp
inc
xor
mov
inc
loop
and
inc
dec
fdecstp
and
out
loop
fsubrl
xlat
pop
notl
lock
pop
std
cmpsb
call
enter
mov
xor
add
scas
dec
pop
or
fcomip
inc
inc
add
push
xchg
add
loopne
out
sbb
nop
inc
add
pushf
adc
jge
dec
pop
mov
jae
xor
and
mov
mov
in
sub
enter
testb
lds
cmp
rcll
arpl
insb
cmp
clc
or
iret
out
fcmovb
lcall
popa
cs
pop
inc
rcrb
addr16
subl
scas
mov
bound
sub
pop
scas
mov
mov
pop
push
add
mov
and
in
cmpsb
je
in
add
test
adc
sub
push
movsb
imul
jbe
dec
ljmp
dec
es
and
pop
subb
in
fmuls
push
cmp
movsb
xchg
in
leave
aad
add
rcl
int
dec
cmpsb
sbb
and
adc
xchg
andl
sarl
inc
xor
sub
js
mov
outsl
pop
pop
lcall
fildl
fildl
xor
mov
clc
xchg
das
xchg
xlat
pushf
mov
in
jle
fs
sbb
xor
push
mov
xor
add
repz
mov
mov
ja
xor
fsubl
or
test
mov
and
lret
clc
pop
pop
ret
lcall
cmc
jae
repnz
jb
mov
adc
es
rorl
lea
sub
mov
lods
lea
or
cmp
push
cmc
fwait
orl
call
in
add
dec
sbb
sbb
push
jne
jne
jbe
addr16
push
cmc
aam
test
test
test
sbbb
or
pushf
dec
pop
mov
dec
add
dec
lds
addr16
lea
push
xchg
fbld
jns
mov
int
pop
mov
outsb
inc
jns
sbb
xor
jmp
pop
pop
inc
cli
test
push
inc
push
mov
subb
add
or
stos
into
mov
loope
adc
lret
cmp
scas
hlt
nop
hlt
jne
sbb
scas
or
cmp
andl
jne
dec
pusha
and
and
packsswb
pop
out
mov
xchg
mov
sub
mov
push
pop
hlt
mov
ss
jmp
mov
push
adcl
sub
mov
xchg
nopl
cmpl
lcall
fimull
lahf
dec
inc
lods
cmp
aaa
adc
rorb
int
ljmp
dec
xor
fwait
mov
leave
aad
cmp
negb
sti
mov
push
notl
or
icebp
int3
out
out
and
sbb
xchg
mov
add
jae
sub
jg
data16
pop
ja
sbb
out
adc
vmaxps
jl
pop
pop
mov
in
push
cmp
ljmp
sbb
push
sbb
xchg
into
mov
mov
or
mov
xor
dec
rolb
hlt
ss
cmpsb
push
adc
stc
xor
pop
lahf
mov
sub
pop
popf
mov
aaa
sahf
aas
adc
mov
adcl
test
xor
rcl
int
daa
cmpb
inc
sbb
inc
inc
jl
andl
int3
test
push
mov
fmul
jle
pop
jmp
pop
pmaxsw
int
jb
push
mov
xorb
lock
jne
scas
ljmp
stos
in
nop
pop
ds
mov
aaa
sub
in
pop
and
pop
ret
pop
aad
loope
push
insl
addr16
arpl
sbb
pop
jbe
lret
mov
sbb
mov
mov
mov
mov
out
mov
loopne
aam
mov
mov
in
inc
mov
xchg
pop
fdiv
fldl
mov
add
jle
in
cmc
stos
arpl
cs
shlb
sub
cmp
jecxz
int3
lret
and
in
mov
xor
ror
jns
enter
xor
and
jbe
stos
fsubrl
push
aas
cld
mov
jmp
fidivrs
inc
jg
dec
pop
in
stos
push
cmp
cwtl
in
mov
sbb
dec
lods
mov
inc
push
sub
pop
jge
push
cmp
das
loope
add
mov
or
sbb
mov
inc
andb
les
sbb
cli
push
icebp
mov
enter
sub
dec
mov
stos
iret
and
cmpsl
cmp
mov
out
loopne
xchg
divps
or
jmp
ret
and
std
mov
movsb
stos
xor
mov
dec
mov
data16
cltd
int
in
subb
xlat
imull
sahf
jl
mov
add
sbb
cld
adc
cmp
jne
loop
fmulp
push
divb
jmp
mov
push
shlb
cltd
pop
loop
insl
xor
cmpsl
pop
cmp
popa
gs
lods
jae
shrl
jbe
cltd
push
repz
stc
in
bnd
fs
daa
inc
iret
inc
mov
mov
imul
xchg
push
dec
xor
loopne
lahf
push
cmp
mov
js
jo
cmp
loop
out
rorb
jnp
daa
insl
dec
cwtl
fwait
mov
das
test
cmp
loopne
xor
scas
out
fmul
mov
lods
push
xchg
sti
mov
fwait
lcall
add
push
lods
inc
sti
mov
in
lods
adc
mov
mov
out
jp
ret
xor
xchg
sub
jle
and
sbb
mov
dec
pop
xchg
jne
xchg
jnp
repz
repnz
fdivl
clc
xchg
cld
lods
and
mov
roll
ss
dec
xchg
pop
push
or
out
mov
mov
das
stos
cmpsl
fimull
mov
test
movsb
push
sbb
lcall
popa
mov
mov
sub
mov
mov
push
fucomp
or
pop
dec
lret
insl
inc
leave
test
pop
sub
jge
call
cmp
pop
addl
pusha
sti
adc
bound
fsubr
adc
lcall
jns
mov
dec
mov
fstp
xchg
aad
cmp
mov
or
in
adc
xor
add
scas
xor
cld
push
loope
jecxz
shll
repz
int3
in
dec
pop
cmpsl
sarl
jne
xlat
es
addr16
cmpsl
mov
ds
stos
mov
sbb
jo
xor
and
or
cli
scas
sbb
xorw
adc
jae
scas
cmp
push
popa
xchg
dec
shrb
sbb
shrl
call
insl
incl
sbb
push
pop
xchg
inc
mov
frndint
mov
xchg
add
mov
sbb
push
stos
shlb
mov
dec
je
fs
sbb
push
add
es
movsb
sub
sub
pop
and
mov
mov
mov
xchg
and
aaa
dec
and
mov
jecxz
push
test
mov
inc
outsl
sbb
fstl
mov
je
sar
dec
test
pop
js
lock
movsl
jne
shll
inc
outsl
xchg
pushf
lea
shlb
repnz
xor
jnp
addr16
push
xor
fistps
fdivrs
inc
cmp
and
mov
sahf
mov
test
ret
pop
add
imul
cmp
aas
or
push
repnz
fidivrl
rclb
repz
lcall
cli
sbb
scas
cmpps
mov
and
pop
sarl
adc
ror
int3
in
mov
imul
into
mov
hlt
sub
dec
pcmpgtb
gs
test
jbe
test
mov
xchg
cmp
cmp
sbb
pusha
nop
dec
push
mov
mov
es
sub
les
outsb
xor
pop
icebp
or
inc
push
cmpsb
pop
in
ja
addr16
movsl
cmpsl
scas
in
adc
push
mov
pushl
adc
cltd
add
loop
cmp
or
mov
in
push
neg
lds
mov
and
pop
enter
test
imul
test
adc
pushf
pop
cli
lahf
lds
mov
pop
xchg
push
mov
mov
ret
cmp
mov
inc
aaa
mov
xchg
iret
mov
cltd
sti
ja
ret
and
push
xchg
and
call
mov
lahf
imul
aam
stos
mov
test
js
mov
jge
leave
mov
popf
cmp
fisubl
jp
mov
xchg
ss
stos
sbb
enter
xlat
popa
xor
out
movsl
test
out
lret
adcl
movsb
inc
sbb
inc
bound
ficoml
fisubrs
sbb
xchg
dec
jnp
sub
sbb
push
fnstsw
dec
push
jl,pn
sub
push
fnstcw
test
adc
xchg
dec
jbe
out
pop
mov
loop
xchg
push
mov
les
cmpsl
dec
cmpsb
xchg
mov
xchg
nop
jmp
ffree
stos
pop
popa
out
push
pop
out
inc
or
lock
pop
cli
adc
push
inc
fdivrl
idivb
fistpll
push
dec
jmp
pushf
divb
add
das
test
mov
fists
rcrl
sub
out
push
arpl
lods
cmpsl
rorb
sub
dec
sub
xor
mov
inc
add
int3
in
jmp
pop
adc
adc
addr16
sbb
in
inc
inc
lds
xor
rcr
add
ret
les
and
cmpsb
add
shr
sub
mov
dec
lret
xor
lods
in
cs
jge
setge
pop
mov
and
enter
outsb
mov
pop
enter
dec
xor
mov
mov
add
sub
std
icebp
ficoml
test
adcb
xchg
push
sbb
fwait
iret
pop
hlt
inc
jge
push
xlat
or
sti
shll
nop
fwait
cwtl
data16
or
adc
out
es
int3
xchg
or
and
dec
cltd
jbe
xor
rcrb
adc
ljmp
jle
imul
cmp
push
mov
fwait
or
sub
into
add
mov
dec
lahf
popl
and
cmp
mov
mov
adc
orb
xchg
lahf
test
sub
dec
or
xchg
jae
xor
add
movb
adc
insl
stos
in
pop
push
cmp
repz
ss
inc
subb
push
pop
es
dec
and
add
mov
sbb
and
inc
ljmp
in
cmp
cmc
xor
fistl
outsl
push
pop
fwait
out
int
jg
lds
or
lock
sahf
adc
fildl
and
and
and
insb
std
mov
dec
sbb
das
xchg
adc
pop
xor
mov
mov
stos
popf
push
cmp
jne
negb
xchg
dec
dec
xchg
push
popl
mov
inc
inc
iret
cmc
fcompl
dec
mov
inc
xlat
jmp
jno
cmp
loop
pop
xchg
jne
sbb
mov
dec
jbe
sarl
aad
mov
mov
test
cmp
insb
xor
cmp
sub
jnp
scas
nop
out
imul
cli
loopne
mov
nop
push
insl
cmp
jmp
mov
mov
add
xchg
leave
es
inc
cltd
xchg
xchg
or
js
push
outsb
stc
mov
push
loope
jg
pop
idiv
mov
cs
pop
jp
fcoml
rcrb
sbb
je
push
push
jge
test
pop
fsubrs
dec
scas
mov
outsb
adc
pop
add
andb
fsubrs
test
add
out
daa
repz
or
out
das
xor
rol
xor
inc
mov
inc
cmp
pop
mov
iret
pop
mov
repz
repz
mov
enter
stos
push
or
into
dec
and
and
mov
insb
andb
cmpsl
mov
pop
xlat
sub
adc
out
cwtl
repnz
sbb
cmp
cli
shlb
fwait
adc
xchg
fnstsw
cwtl
push
sbb
test
hlt
push
mov
inc
dec
xchg
xor
cltd
inc
xor
fiaddl
cmp
fadds
xchg
pop
stc
cld
dec
xor
mov
xor
add
cli
sub
add
mov
and
mov
or
les
out
xchg
dec
pop
lods
jp
gs
adc
insl
or
mov
jne
outsb
mov
test
cs
sti
pusha
int3
inc
out
jge
cmpsl
adc
jb
jae
std
mov
jl
pop
insl
call
nop
fidivrl
in
jae
lods
data16
clc
fistps
sarl
fst
lock
xchg
sub
lahf
js
jnp
adc
and
xchg
imul
les
and
sahf
push
pop
rorb
dec
in
rorl
rcr
jo
xchg
dec
inc
cmc
ret
cmp
mov
cmp
inc
roll
xor
std
lock
jmp
fdivl
mov
cwtl
mov
xchg
inc
mov
inc
xchg
pop
sub
pop
repz
xchg
ljmp
aad
imulb
pop
daa
xchg
add
popf
repz
negb
mov
mov
xor
mov
jo
fdiv
les
adc
adc
mov
xchg
call
xor
dec
insl
fbstp
int
int3
push
loope
jcxz
test
in
push
mov
cmp
mov
cmp
jp
nop
mull
mov
nop
fs
cwtl
jno
inc
stos
aad
jns
mov
add
test
clc
adc
repz
dec
xor
xor
movsb
outsb
movsl
sub
lahf
jae
sarl
daa
out
aam
int
xlat
push
fistpll
jns
mov
out
fsubrs
aaa
xchg
xchg
stos
outsb
add
ret
add
jo
movsl
cmp
sbb
inc
pop
outsb
ss
iret
pop
mov
inc
out
leave
insl
cmc
adc
adc
inc
jnp
fs
pop
repz
mov
sub
dec
adc
pop
sub
icebp
adc
sbb
mov
and
or
daa
cltd
dec
xchg
push
xor
xchg
inc
jbe
sub
jmp
outsl
push
cmp
push
mov
in
dec
dec
mov
jbe
xchg
sbbb
vpandn
add
pushf
cmpsb
imul
fiaddl
inc
jg
mov
movsb
clc
xchg
jmp
mov
jns
ficomps
stc
fs
xor
cmp
scas
repz
icebp
xor
bound
ss
aas
push
test
movsl
gs
sti
rclb
dec
stc
out
rclb
xchg
xchg
jmp
inc
nop
aaa
test
cmc
inc
mull
jnp
adc
and
push
rcll
ficompl
dec
or
mov
in
mov
stc
aad
out
jb
div
pop
cmp
sub
ret
clc
test
or
les
shr
dec
cmp
cli
xlat
pop
sub
mov
cwtl
mov
xor
clc
or
mov
sub
inc
push
or
inc
jns
mov
pushf
jno
sub
out
stos
dec
mov
shl
push
mov
stc
push
lods
mov
push
das
pop
stc
mov
testl
clc
jb
xor
mov
addr16
push
lods
jne
in
push
loop
cmp
mov
enter
adc
push
out
sub
movsl
sti
xchg
mov
xchg
inc
aad
pop
nop
pop
fsubrs
movsl
xchg
cmp
arpl
lret
adc
test
mov
add
and
subl
popf
ja
push
in
inc
insb
pop
and
sub
mov
mov
repnz
add
fstl
jb
outsl
aaa
mov
pop
icebp
in
call
out
mov
dec
mov
movsl
je
pop
pop
sbb
jns
cmp
jno
xor
add
fstps
jecxz
fwait
sbb
hlt
addr16
cmpsl
jbe
das
or
mov
fildll
mov
inc
fistps
jb
add
stc
lret
orb
sub
sub
xchg
push
and
push
mov
jno
fcom
mov
stos
and
fisttps
dec
and
inc
xor
negl
fmull
cmpb
icebp
or
js
push
out
shrb
jno
cltd
mov
xchg
insb
push
jb
dec
aam
pop
jbe
sbb
mov
pop
or
ds
lock
sub
jno
fidivrs
or
add
subb
jnp
cld
lock
in
jae
insl
gs
mov
sub
push
je
inc
push
mov
outsb
testb
jns
pushf
jno
xacquire
xorw
cltd
inc
and
jmp
mulb
int
xorb
and
jbe
std
popf
add
push
ret
jbe
ljmp
in
pop
test
adc
int3
xor
mov
jb
inc
shll
and
scas
jmp
sub
mov
shrb
xlat
gs
stc
pusha
loope
mov
es
scas
lahf
inc
cmp
movsb
mov
inc
or
jl
or
xor
addl
ret
push
xor
jbe
pop
mov
ret
dec
sub
inc
mov
stos
scas
outsb
xchg
ret
fisttpl
in
fs
mov
fisttpl
lret
stc
out
sbb
gs
arpl
dec
sarl
testb
stos
inc
test
push
sti
mov
add
dec
adc
aad
pop
and
lret
test
inc
add
jne
fwait
mov
xchg
adc
inc
jae
mov
movsl
mov
outsb
push
test
mov
fimull
fistl
cmp
lret
and
pop
loop
xchg
mov
push
or
or
adc
stos
out
cmp
sub
mov
into
inc
sub
pop
into
shll
cmp
scas
xor
dec
rcrb
aam
jmp
movsl
mov
int3
out
out
xchg
ret
inc
lret
add
xchg
inc
jle
xchg
mov
loope
aas
mov
jae
cmpsl
mov
mov
sub
mov
xor
sub
mov
cmc
lods
mov
testb
adc
xor
xchg
mov
mov
enter
daa
movl
mov
xor
in
es
adc
push
rcl
mov
push
cmp
push
mov
xchg
cltd
or
loopne
mov
cmpsb
adc
jg
push
push
shrl
push
cmp
stos
repnz
ljmp
fcmovb
lea
jae
imul
outsb
int
dec
mov
xchg
scas
mov
psubusw
pop
sahf
repnz
and
lret
cmp
mov
jle
aas
xlat
mov
sub
lea
popf
ljmp
iret
aad
inc
mov
push
push
out
ret
xor
fucom
xorl
leave
xchg
andb
push
or
pop
arpl
mov
fisubl
cmc
jno
add
jne
mov
fisubs
and
rcll
fisttpll
sub
mov
jle
jg
in
negl
xor
aad
icebp
jmp
iret
mov
and
xchg
test
pop
or
inc
out
pushf
sbb
mov
inc
xor
lret
jge
pop
clc
fs
lock
insb
imul
fs
and
and
jne
jae
jmp
addb
test
mov
xor
pop
adc
adc
jae
lock
sbb
lods
xor
lea
dec
xchg
addb
and
jae
cmpsl
mov
dec
stos
popa
dec
lds
shrb
outsl
xchg
dec
inc
sbb
mov
cmp
fld1
insl
xchg
cmpl
popf
mov
lea
lret
mov
cmp
or
pop
outsl
movsl
push
xchg
cmp
shll
out
jae
lcall
push
je
hlt
jle
jbe
into
bound
je
dec
aad
cmpsb
xor
cmp
pop
xchg
je
push
movsb
inc
out
rorl
cmp
mov
xchg
jb
sub
mov
and
xchg
shll
out
dec
ja
in
push
xchg
es
fimuls
je
addl
pop
cmpsl
notl
lahf
shlb
aas
les
or
ficomps
or
xchg
mov
mov
adc
addr16
mov
mov
mov
hlt
dec
inc
cmp
frstor
pop
adc
jb
xlat
push
jp
outsl
out
cmc
ret
repnz
inc
adc
push
cmpsb
out
dec
push
pop
popa
mov
inc
push
not
xchg
adc
aad
xchg
fwait
cltd
cltd
test
cmpsl
dec
jnp
push
or
or
cmp
das
cmp
dec
clc
mov
xorb
cltd
or
xor
stc
pop
push
push
or
and
cld
mov
cmp
push
popa
fwait
imul
sub
jl
gs
addr16
push
lds
cmp
dec
mov
les
push
cld
ja
cmpsb
ja
stos
fidivrs
inc
test
sbb
xchg
out
pop
mov
mov
leave
mov
or
jns
mov
xor
push
inc
xchg
ds
int3
mov
and
das
or
dec
cmp
pop
pop
ja
jno
ljmp
test
lock
dec
mov
mov
jle
jl
pushf
iret
jne
mov
xor
and
xchg
cld
inc
sub
cmp
push
lcall
icebp
adc
push
mov
cmp
push
pushl
adc
loope
lret
call
push
adc
xor
sbb
test
jl
add
jecxz
xchg
repz
push
push
dec
add
sub
aam
fmuls
jo
jp
imul
cmc
or
iret
imul
xchg
imul
push
mov
xor
dec
mov
gs
mov
cmp
outsl
in
jmp
aaa
jb
shrb
mov
loopne
bound
and
pop
test
xchg
mov
push
imul
clc
cmp
pop
pop
test
subb
mov
lods
add
pop
ret
aaa
jg
pop
mov
inc
lret
mov
lods
xchg
shlb
je
xchg
inc
nop
cmp
cltd
mov
outsl
movsb
or
cmpsl
lea
xor
push
mov
xor
dec
cwtl
sbb
out
popa
into
movsl
sub
call
xchg
ljmp
ljmp
in
enter
inc
subl
fiadds
enter
push
xor
js
stos
dec
gs
repz
hlt
jge
sarb
mov
xchg
jae
scas
jno
aas
dec
sahf
or
les
loopne
loop
fcmovnbe
rcrl
and
pop
insb
cmp
pop
add
cwtl
dec
lea
enter
or
cmc
adc
enter
mov
pop
outsb
push
xchg
rcl
test
inc
fadds
pop
test
cmpsb
fistpl
pop
mov
lahf
es
arpl
cmp
xchg
std
addr16
sub
cwtl
fiaddl
mov
popl
out
mov
mov
jmp
test
rol
movl
adc
dec
insb
lret
sbb
int
aad
jmp
cmp
lret
std
xchg
call
mov
sbb
xor
adc
or
inc
jae
push
sbb
add
mov
sti
pop
ret
std
data16
and
inc
bound
pop
sub
lea
out
outsb
std
insb
fimuls
sbb
out
dec
mov
popf
mov
xchg
mov
cwtl
push
dec
js
sub
sbb
add
mov
int
jo
in
cmc
ljmp
xchg
mov
mov
pop
orl
sub
mov
sub
in
scas
insl
in
ljmp
nop
dec
push
int
ja
js
fs
dec
dec
xor
sub
cmpsb
pop
mov
mov
push
in
sbb
out
xchg
sub
ljmp
jo
sbb
ss
in
mov
jg
aam
add
js
mov
inc
cmpsb
sub
push
ret
cmp
out
or
xchg
sub
addr16
xchg
lods
hlt
push
sub
push
das
mov
mov
sbbb
call
jmp
push
sbb
and
sub
loopne
jae
xchg
mov
cmp
jl
mov
sahf
int3
out
inc
enter
je
xchg
jb
and
mov
cmpsl
dec
fdivs
add
xchg
sub
dec
hlt
adcb
aas
cmpsl
cmpsl
lahf
push
pop
mov
aad
mov
mov
mov
jae
aad
mov
mov
add
leave
into
outsb
cmp
aas
lods
jbe
mov
mov
enter
bound
ja
arpl
test
sub
test
pop
push
sbb
or
mov
int
and
test
insb
int
mov
cmovo
mov
sti
mov
negb
lret
inc
xor
mov
push
out
mov
jnp
xchg
xchg
ljmp
xor
cmp
ljmp
xor
xchg
and
mov
jecxz
aad
sbb
push
jp
pop
fisubs
xchg
addr16
jnp
cli
adc
sub
cmpsb
dec
lods
pop
gs
mov
popf
jno
cmpsl
adc
inc
sub
mov
test
cmp
das
jge
and
loop
mov
in
lods
pop
stos
nop
ds
mov
shr
add
cmc
out
clc
negb
push
orb
push
fiadds
mov
cmpl
test
add
mov
mov
xchg
pushaw
or
mov
lea
lret
mov
rcll
imul
stos
xchg
add
mov
leave
push
sub
lcall
adc
dec
sub
xchg
push
mov
cmpsb
and
aas
xchg
lret
jmp
popa
test
and
sub
jns
cmpsl
sti
mov
sarl
js
or
bound
imul
xor
and
or
cmpsl
subl
cli
cmc
je
cli
xchg
clc
das
dec
fwait
pop
lods
dec
leavew
lods
popa
nop
add
jge
ljmp
cltd
lea
lods
loope
lret
test
movsb
out
pop
pop
test
inc
mov
mov
dec
mov
pusha
stc
pop
ljmp
stc
imul
ss
mov
sub
mov
inc
in
mov
jb
xor
mov
xchg
lds
mov
rcrl
lret
into
mov
cmp
push
xchg
pop
hlt
jmp
dec
mov
and
loope
imul
addr16
aad
dec
test
xor
xor
or
insl
cmpsb
fisttpll
inc
xchg
rol
lahf
add
mov
test
lods
push
xchg
dec
mov
aam
adc
outsl
push
fbld
push
push
arpl
inc
xchg
cmpsb
dec
cmp
adc
aad
mov
cwtl
mov
push
jbe
imul
les
mov
sti
test
stc
std
inc
popa
mov
cmp
cs
sbb
adc
cmpsb
jg
arpl
in
hlt
sub
call
pop
out
mov
pop
jp
or
sub
xchg
xor
mov
mov
adc
pop
mov
popf
or
leave
mov
pusha
xor
xchg
xor
xchg
lods
shll
xchg
mov
xor
sbb
dec
vpmacssdqh
mov
mov
lret
xchg
out
inc
cmpsb
jb
les
cltd
xor
xchg
test
inc
adc
mov
add
in
mov
mov
xchg
stc
jle
inc
cltd
or
mov
arpl
je
in
and
or
lods
imul
addb
hlt
int3
movl
dec
xchg
leave
pop
into
int
mov
repnz
ret
out
or
pop
sbb
subb
bound
inc
pushf
pop
gs
pop
dec
add
call
mov
inc
call
jg
mov
mov
dec
or
ss
in
ss
jmp
iret
pusha
cli
idivl
xchg
sbb
xchg
mov
lea
sub
or
bound
lea
mov
cmpsb
inc
cmp
or
sbb
adc
loop
xor
cmc
sahf
pop
jo
jno
jmp
and
adc
icebp
xchg
loope
repz
and
ljmp
aas
and
jle
sub
lock
or
pop
xchg
sbbb
jo
lahf
lcall
aaa
cmc
js
out
cwtl
add
push
mov
mov
jno
mov
xchg
adc
cmpsb
push
sbb
daa
sub
outsl
lcall
xor
inc
dec
dec
ss
repz
cmp
push
andb
sbbl
insl
push
ficomps
mov
mov
pop
xchg
fsubr
sete
adc
xchg
push
and
sbb
mov
loop
enter
or
pop
cmp
pop
add
out
cmpsb
std
std
rorl
popf
cmpsb
test
pop
xchg
movsb
das
std
jns
add
loopne
outsb
dec
call
mov
pop
insl
xchg
repz
faddl
andb
ljmp
lds
in
cmp
fldt
repz
sub
fildll
rcr
incb
jmp
test
push
cmc
sub
jg
mov
nop
cwtd
mov
mov
jl
aas
push
cmp
mov
or
lret
fstpt
add
out
push
push
xor
add
adc
mov
das
fcomps
lcall
gs
sbb
lods
popf
push
cmp
and
fcomps
loop
push
xchg
mov
pop
mov
loopne
pop
sbb
xchg
jno
or
xchg
aaa
or
ljmp
inc
push
test
inc
xor
adc
jbe
jno
push
stos
outsl
fiaddl
sub
out
jae
mov
pop
jnp
cmp
mov
inc
jnp
lcall
ficomps
push
rorl
daa
in
out
loope
insb
fsts
dec
roll
lea
in
icebp
jle
stc
out
test
andb
lds
out
jne
fimuls
lahf
in
fsincos
inc
dec
lretw
dec
sbb
lea
lods
fdiv
in
or
in
loop
iret
jno
addl
cmc
sbb
mov
mov
xchg
int
or
popa
jmp
lods
sub
repz
shlb
ret
adc
adc
lahf
out
push
push
and
inc
lahf
aam
test
outsb
dec
xchg
in
fistl
rcrb
and
jp
in
jl
lret
lret
pop
mov
jb
dec
mov
loop
sbb
sub
mov
and
jne
sbbb
mov
pop
gs
pop
mov
test
in
mov
dec
or
dec
pop
and
cmpsb
mov
clc
pop
cmpsl
roll
mov
mov
popf
aaa
out
xchg
sub
test
mov
ret
imul
xchg
jle
insl
jp
jecxz
jo
mov
out
dec
stos
add
xchg
mov
es
sti
mov
clc
jl
leave
add
mov
test
stos
push
neg
sar
mov
jno
add
mov
add
mov
imull
jns
das
and
shll
mulb
repnz
cmpsb
mov
pop
mov
lds
fiaddl
and
out
out
jge
iret
stc
cmpsb
mov
call
jecxz
mov
add
mov
inc
dec
pop
int3
jg
fistps
repz
mov
rorl
sbb
mov
jmp
jp
jp
add
xchg
adc
cld
or
imul
subl
jo
jns
sbb
cld
pfrsqrt
cmp
lcall
cmp
test
mov
movsb
inc
add
clc
push
or
and
sbb
add
std
pop
les
push
jle
sub
bound
lcall
xchg
lods
push
and
jecxz
dec
push
pop
sbbl
ret
lods
inc
add
ss
es
loope
ret
in
loop
js
xchg
fidivl
sahf
mov
mov
jge
xchg
scas
cs
sub
aam
fsts
mov
xchg
xorl
xchg
mov
cmp
les
and
lcall
push
xchg
pop
inc
inc
adc
cmp
pusha
fdivrs
push
out
cmp
cmpsb
and
aaa
and
cmp
repnz
sub
fbld
mov
fyl2x
mov
or
out
inc
cmp
scas
xchg
push
mov
aad
shrb
xchg
inc
mov
in
outsl
mov
add
or
mov
insb
clc
dec
dec
data16
lods
and
sbb
hlt
sbb
stos
xor
xor
loope
aaa
aaa
or
cli
mov
sbb
and
es
fcoml
cmp
fmulp
jns
jge
fwait
daa
adc
mov
outsb
adc
movsb
cwtl
popf
sbb
std
sbb
loop
dec
jg
pop
push
dec
call
nop
pop
mov
addr16
aaa
jo
pop
push
repz
mov
call
hlt
xor
pop
hlt
xlat
adc
jne
xorb
cmpsl
fidivl
pop
ret
adc
or
cmp
scas
pop
cmc
repnz
push
push
scas
jl
jns
cld
sbb
dec
into
pop
imul
addr16
imul
cld
outsb
jle
jle
lock
or
je
inc
push
in
push
scas
dec
push
inc
sbb
test
test
adc
pop
mov
cmp
pop
or
xchg
xor
jmp
stc
insb
outsb
inc
repz
addr16
adc
pop
outsb
jnp
cmp
xor
cmpsb
sbb
jae
xchg
pop
mull
cltd
fistpl
ljmp
lods
lods
jae
adc
movsb
mov
repnz
ja
shrl
mov
add
adc
jp
loope
cmp
jecxz
or
or
xor
pop
pop
push
jbe
xchg
repz
les
mov
negb
mov
pop
in
pop
sti
and
mov
adc
out
adc
mov
insb
test
subb
ficoml
cmp
jae
in
or
ret
mov
and
add
mov
ss
lahf
ror
test
jae
sbb
pop
outsb
leave
mov
sub
repnz
popl
jae
ja
pop
lahf
sub
rorl
and
cmc
xchg
aas
test
in
jno
shlb
clc
xchg
dec
mov
inc
add
dec
stos
jbe
enter
out
adc
mov
stos
outsl
or
nopl
cmp
leave
addr16
and
jmp
cmp
xor
dec
mov
mov
jns
pop
rcr
stos
xchg
cmpsl
adc
sbb
lods
imul
outsl
mov
and
xchg
rolb
out
das
bound
pushf
cwtl
daa
add
ret
mov
arpl
dec
cld
push
jp
sbb
pause
orb
incb
rcl
mov
cltd
dec
add
jae
xor
xchg
pop
pop
out
jmp
jb
or
push
stos
int3
scas
dec
sub
stc
jge
or
sub
in
xchg
fwait
jb
mov
dec
stos
int3
dec
fidivl
mov
xor
push
pavgw
ljmp
dec
add
lods
sahf
and
push
repnz
repz
dec
push
jp
xchg
int3
adc
out
std
sahf
stc
pushf
cltd
aam
jp
stos
add
add
ljmp
jl
mov
scas
call
mov
ret
or
adcb
sti
mov
adcb
outsb
jg
cmovne
popa
stc
dec
js
dec
xchg
mov
mov
and
rolb
mov
shrb
mov
jno
push
test
adc
mov
and
xchg
inc
inc
ds
lock
sbb
jbe
jecxz
adc
sbb
pop
sub
adc
fsubl
sahf
in
add
ret
loopne
adc
or
mov
jmp
xor
cmpsb
lret
push
lcall
in
scas
mov
loopne
jae
dec
push
xchg
jae
cmp
push
fst
mov
mov
movl
jae
lcall
mov
push
mov
dec
dec
lcall
out
popl
sub
test
add
int
int3
nop
daa
shl
push
xlat
push
xor
scas
cli
loop
pop
es
inc
popa
ja
test
push
or
adc
add
jecxz
xchg
dec
out
push
loop
in
mov
pop
or
jb
test
and
into
mov
gs
pop
movsl
leave
jle
adc
ss
ljmp
lds
and
dec
pusha
fildl
cltd
sub
jle
jnp
std
cltd
adc
cld
mov
inc
and
dec
lahf
sbbb
cmp
mov
test
adcl
jbe
scas
test
or
lods
cmpsl
inc
and
adc
stc
rcrb
icebp
adc
inc
cmp
imulb
roll
and
sahf
outsl
inc
inc
scas
mov
jns
lock
add
movsl
jo
aas
mov
jae
xchg
jle
shll
nop
popf
pop
xchg
std
sbb
xor
adc
push
adc
mov
in
out
mov
cmpsb
es
mov
inc
pop
and
inc
mov
and
or
add
xor
test
mov
rolb
dec
and
and
gs
rolb
adc
dec
inc
dec
cltd
dec
loopne
mov
pop
lods
rcrl
popa
test
repnz
daa
out
dec
xchg
lcall
add
sahf
inc
data16
dec
mov
sub
mov
pop
aas
cmp
test
notb
testb
or
fdivs
and
mov
sti
mov
into
aaa
sub
cmp
inc
decl
mov
inc
mov
xchg
pop
ss
pop
subb
jle
aaa
lds
repz
push
jmp
and
add
inc
in
pusha
rcrl
les
push
lock
ret
and
std
mov
fbstp
jmp
lods
sbb
std
dec
adc
adc
lock
cmpsb
cmp
je
std
add
rcr
aas
pop
pop
fs
mov
mov
cltd
fdivrl
popf
aaa
sub
jae
addr16
or
mov
cld
jge
shrl
rorb
jne
push
loop
stc
mov
mov
push
mov
repnz
sbb
in
test
mov
cmp
mov
dec
out
fistpll
and
fidivl
mov
sbb
and
fldl
xchg
ljmp
imul
into
jb
jp
shrb
jle
cmc
andb
movsl
test
push
push
fldt
pop
pop
or
pop
loop
lret
xchg
rolb
adc
mov
sbb
cmpsb
cmp
test
jle
sbb
jle
mov
popf
fistps
mov
daa
ja
xchg
insl
xor
enter
pop
lock
sub
adc
mov
mov
pop
mov
adc
fs
and
cmp
inc
ret
xlat
lock
dec
push
xor
ljmp
add
push
xor
sub
push
mov
in
xchg
or
dec
frstor
arpl
mov
push
outsb
xor
push
or
push
and
test
push
sbb
sbb
push
jnp
adc
lcall
aaa
rcrb
mov
inc
jmp
nop
and
stc
or
adc
test
push
xchg
cmp
jno
bswap
popa
sbb
push
movsb
js
cli
and
fbstp
xor
push
lcall
rclb
xor
imul
mov
jbe
pop
xor
inc
mov
imul
in
mul
ljmp
cmpsl
test
and
xor
dec
sbb
and
pushf
pop
stos
stc
or
or
xchg
sub
lret
xor
jne
mov
adc
cs
or
adc
and
inc
inc
and
sub
and
stos
sbb
mov
adc
mov
inc
mov
cmpsb
inc
movsl
cli
jmp
pushf
and
lds
lods
addr16
sub
adc
dec
int3
cmpsb
cwtl
pop
push
sbb
les
call
cli
cmp
inc
fimuls
jmp
push
or
xor
cli
add
jnp
rcrl
gs
fnsave
and
inc
rol
repz
sbb
inc
mov
pusha
jae
mov
lods
loopne
sysenter
xchg
pop
mov
add
repz
push
scas
les
push
dec
inc
ss
test
xchg
hlt
loope
loop
aaa
test
pop
pop
out
cltd
and
jg
orb
and
mov
dec
dec
popa
pop
inc
sub
add
arpl
xchg
and
nop
pop
add
out
stos
daa
daa
leave
or
dec
inc
push
enter
jge
stos
lods
imul
push
and
adc
subb
lret
std
push
pop
cwtl
clc
and
mov
jg
inc
cmp
lods
inc
push
decl
or
adc
psubw
insb
cs
inc
and
adc
inc
or
in
sahf
mov
xor
add
xor
pop
out
hlt
push
xchg
adc
jle
repz
je
std
pop
sub
add
outsl
mov
adc
add
sub
sub
inc
insb
stos
cmp
inc
repz
xchg
pop
xor
adc
pop
leave
iret
xor
daa
into
repz
jmp
stc
mov
or
add
call
outsl
mov
add
xchg
int
lret
cmp
jmp
mov
popa
jg
add
sub
adc
rcll
and
jb
dec
jno
push
aaa
test
lods
mov
or
push
or
lods
xor
cmp
les
bnd
add
adc
jae
mov
push
xorb
pop
enter
jmp
sub
xor
mov
dec
adc
mov
jl
addr16
xor
sbb
sahf
sbb
jecxz
inc
lds
int
jge
dec
sub
add
xor
mov
into
lods
sub
cmp
dec
xchg
mov
cltd
adc
es
jg
jo
scas
inc
rcll
inc
mov
dec
add
out
mov
xor
shl
push
mov
mov
mov
negb
cmp
andb
adc
cmp
dec
icebp
inc
push
mov
movsl
jmp
xchg
xchg
push
cmp
les
outsl
fldcw
mov
idiv
mov
add
mov
fs
and
pushf
push
mov
jne
push
call
icebp
sub
mov
mov
jmp
pop
out
pusha
ret
data16
and
push
out
mov
xchg
inc
out
or
xchg
xor
pop
mov
and
pop
test
cli
jg
dec
jge
jge
mov
out
pusha
add
jo
mov
inc
out
jle
cmp
icebp
mov
aas
les
mov
repz
sub
push
or
adc
std
xor
adc
int
ficomps
inc
xchg
sub
push
cmp
cld
aam
icebp
jnp
sahf
repnz
and
aaa
loopne
jge
xor
in
lcall
rorl
sub
xchg
mov
sub
aam
ss
popa
push
aas
mov
mov
fucomp
test
add
adc
pop
xchg
mov
mov
out
sub
dec
lds
dec
mov
xor
add
hlt
enter
lea
sarb
mov
dec
push
pop
js
xor
loope
aas
xor
push
add
jae
orl
das
mov
jp
dec
cwtl
ja
xchg
and
lahf
dec
mov
push
imul
popa
xor
and
pushf
sarl
jp
loop
sub
dec
pop
daa
dec
inc
sti
lods
jl
pop
pop
and
ja
sti
push
sbb
clc
cmp
xor
imul
enter
jns
push
cwtl
leave
neg
inc
lods
scas
mov
dec
sti
xorl
and
lods
add
dec
inc
pop
push
pop
mov
ljmp
jg
imul
sub
pop
test
jge
inc
pop
std
xlat
or
xchg
ret
in
inc
inc
insl
leave
xchg
bnd
push
pop
int3
push
aas
sbb
std
call
and
mov
pop
jmp
inc
sbb
sahf
addr16
out
lods
test
lods
jns
fucomi
dec
jmp
push
fdivl
rorl
subb
lods
or
lea
jae
lock
gs
or
outsl
mov
jo
xchg
arpl
jge
pusha
lahf
add
jno
arpl
mov
out
or
popf
rolb
sti
dec
lret
inc
stc
loop
aam
and
sub
stos
sub
aam
add
mov
mov
or
orl
lods
loope
push
mov
mov
repz
lea
jne
cmp
cli
sub
outsb
mov
and
loop
mov
stos
fisttps
sbb
insb
repz
cwtl
call
sbb
xchg
bound
into
mov
xor
test
out
mov
int3
negl
mov
clc
insw
out
dec
dec
cmp
scas
or
xchg
int3
inc
xchg
test
and
loop
insl
outsb
fimuls
aam
or
sub
dec
ret
cli
bound
jecxz
test
cld
int
and
and
ss
xor
xchg
scas
shrb
push
aas
in
jge
lods
mov
call
imul
loop
fnsave
das
pop
and
dec
mov
pusha
cld
and
movsb
ja
xchg
loop
sbb
push
ds
mov
xchg
mov
lahf
daa
cmpsl
inc
lcall
bound
mov
leave
cmc
fstps
fistps
push
mov
cwtl
adc
testl
or
sub
push
out
arpl
sub
mov
push
xchg
mov
daa
mov
outsl
cmp
sbb
xlat
xchg
xchg
dec
out
ja
in
jmp
or
add
dec
sti
mov
scas
ret
dec
push
enter
pop
clc
dec
and
cmp
adc
add
in
mov
ja
pushf
adc
rorb
mov
inc
pop
pop
mov
lcall
into
ja
and
xchg
cwtl
or
cmp
and
dec
pop
xchg
xlat
cwtl
pop
stos
shl
cmp
divl
adc
pop
adc
es
jge
aad
push
pop
out
mov
cwtl
mov
cmp
jbe
xor
shlb
cmp
insl
fs
rclb
xor
sbb
push
mov
int
lahf
arpl
cmp
and
push
aam
mov
andl
push
push
dec
and
into
push
jmp
mov
leave
stos
stc
pop
shll
scas
mov
inc
icebp
dec
inc
ret
push
test
inc
mov
fstpl
push
ja
add
imul
movsl
pshufw
gs
loopne
or
sub
stos
jmp
mov
sbb
mov
xchg
inc
shll
popf
call
push
lret
mov
stc
cwtl
ljmp
movsb
out
rcrl
je
mov
pop
mov
add
mov
xor
adc
xchg
leave
data16
popa
lret
movsl
add
push
adc
jecxz
push
jge
out
mov
mov
pop
lods
sub
mov
jo
inc
or
sub
cmpsl
ja
mov
sub
mov
lock
test
sahf
adc
mov
mov
imul
dec
add
pop
sub
inc
jl
bound
xchg
insb
pop
pop
xlat
and
pop
add
mov
outsb
jmp
mov
inc
ds
fwait
sub
rcrb
movsl
jb
jbe
imul
inc
add
shr
jg
test
ljmp
dec
out
jp
cwtl
mov
sahf
or
pop
orb
scas
xor
push
inc
and
loope
ret
int3
mov
and
orb
cld
jae
int
or
stos
es
repnz
rcr
add
icebp
adc
test
mov
cmp
mov
lock
mov
xor
mov
sbb
jmp
xchg
sub
or
push
sbbl
add
mov
sahf
rol
fs
mov
rcrb
or
cmc
push
and
clc
sub
inc
cmpsb
test
pushf
and
or
xor
pop
mov
rol
cmp
jecxz
pop
stos
sub
push
jnp
add
inc
scas
adcb
dec
imull
mov
ficomps
je
mov
lahf
aaa
jmp
sub
fcomp
scas
roll
arpl
lds
ret
orl
sub
push
and
movsb
lock
cmc
adc
sub
idivl
inc
test
fstl
mov
aas
pop
dec
mov
loop
inc
mov
lret
lret
insb
pop
in
inc
add
inc
jmp
xchg
popa
push
jmp
mov
adc
les
cmpsb
stos
fidivl
mov
rorb
std
dec
mov
inc
push
jecxz
fmul
loop
sbb
and
mov
cmp
xchg
into
scas
fdivrl
xchg
fildl
jb
out
lcall
mov
adcb
push
sbb
mov
xchg
lcall
xchg
inc
mov
mov
clc
cltd
sbb
xorb
sub
pusha
push
and
mov
adc
call
fldcw
enter
push
cwtl
lretw
fcmovne
repz
mov
sub
in
sbb
jmp
cmp
test
test
scas
push
mov
mov
adc
cmc
mov
mov
pop
mov
sub
rcr
hlt
push
sahf
jo
mov
xchg
repnz
inc
inc
dec
flds
mull
mov
cmc
ret
daa
jmp
cwtl
lods
sbb
mov
jp
int3
imul
inc
lret
enter
sub
mov
lock
dec
shlb
popl
mov
lds
loopne
cmp
cmc
test
sub
and
mov
or
cld
pop
popf
cli
jmp
jg
sub
adc
xchg
mov
xchg
xor
pop
mov
orl
adc
jbe
lods
inc
outsl
add
bound
mov
cmp
subl
js
insb
jns
xor
push
stos
inc
and
daa
xadd
dec
add
push
push
mov
out
xor
mov
xchg
mov
in
add
rcrb
sbb
cltd
inc
mov
gs
mov
fld
insl
pop
inc
dec
popa
dec
sbb
mov
test
clc
cs
adc
inc
aad
pop
movsb
mov
or
or
dec
jge
jl
into
and
fwait
std
and
xor
or
and
les
push
int3
adc
pushf
mov
aam
cwtl
mov
add
iret
adc
daa
cmp
and
call
adc
leave
pop
pop
leave
bound
mov
pop
roll
stos
cmc
jno
mov
in
shll
inc
mov
in
shrl
aam
das
jmp
and
es
pop
push
mov
ja
jmp
and
jmp
aaa
jnp
fcompl
pop
lods
sbb
mov
fsub
into
mov
adc
jns
pop
push
mov
sahf
dec
add
and
mov
xchg
arpl
aaa
aam
sbb
push
push
pop
insb
sahf
inc
imul
icebp
scas
xchg
iret
mov
ljmp
in
push
inc
mov
cmpb
xchg
or
sub
jp
xchg
xor
outsl
pop
push
stos
std
jmp
loope
fwait
std
xchg
mov
xor
ret
and
enter
xor
fs
sub
loop
sbb
ljmp
cmp
adc
fwait
or
in
popf
jns
sub
in
mov
rclb
int
cmp
aad
loope
rcl
jmp
hlt
in
jns
or
adc
and
push
xchg
repnz
lret
sub
pop
sbb
lahf
xor
xchg
orb
int
sbb
sbb
icebp
add
rcll
pop
mov
out
cmp
add
cmp
sbb
xchg
aaa
inc
jb
jns
imul
or
push
outsb
fdivrs
push
adc
daa
cmpsl
jnp
lods
xor
or
xchg
xlat
xchg
mov
or
enter
push
mov
add
test
cli
adc
data16
xor
or
ss
mov
lea
ss
js
or
xchg
inc
adc
pop
div
test
xor
addr16
lock
fxch
out
mov
push
leave
inc
push
mov
or
shlb
hlt
add
jo
sarl
loope
jecxz
and
sbb
imul
push
mov
mov
mov
pop
ja
into
jl
orl
add
mov
out
xchg
sahf
hlt
mov
gs
test
push
jnp
push
lds
xlat
jne
sbb
pop
std
fisubl
rcrb
or
inc
dec
cltd
pop
mov
popf
pop
pop
arpl
fstpl
pop
cmp
cmpsl
ret
jl
sub
jle
adc
sub
jg
pop
int
in
jg
jp
xorl
int3
sahf
fdiv
arpl
sahf
lea
scas
xor
xor
xor
pop
cmp
and
notb
imul
pop
jle
mov
cmp
mov
fldt
fisttpll
or
lcall
in
pushf
mov
test
into
xchg
pop
sub
mov
jp
jb
inc
fs
and
jo
add
popa
lds
jnp
std
mov
mov
add
std
and
inc
lods
aaa
loopne
push
adc
xchg
pop
mov
inc
jmp
add
xchg
mov
loope
cmpsb
popf
or
adc
pop
jbe
aas
jl
pop
pop
inc
lds
xchg
bound
pop
pushf
push
sbb
bound
es
fldl
dec
mov
dec
pop
inc
xor
adc
sub
ja
cwtl
test
cld
subl
test
pop
mov
js
push
mov
sub
push
pop
push
sti
jo
and
mov
or
fdivl
loopne
lds
in
add
inc
data16
ljmp
test
out
add
in
loop
iret
push
imul
push
xchg
or
mov
inc
mov
or
mov
arpl
out
andl
push
or
out
ds
jbe
cmp
daa
sbb
inc
mov
or
out
pop
fwait
test
popf
outsl
gs
jae
imul
fincstp
hlt
dec
inc
sbb
sub
mov
inc
and
stos
pop
enter
adc
test
lods
repnz
mov
mov
int3
aaa
cmp
sub
pop
hlt
inc
bnd
roll
adc
jns
pop
and
mov
gs
push
inc
xlat
sti
sub
pop
xor
int3
fiaddl
lods
jae
inc
or
mov
stos
cmp
mov
neg
testl
jg
lret
mov
lcall
cmp
sbb
adc
outsb
enter
in
adc
movsl
data16
pusha
sbbb
push
test
les
push
jo
cmp
negb
ja
stos
push
sbb
test
enter
jp
in
adc
call
jmp
xchg
sbb
xchg
cmp
adc
pop
push
push
cltd
lea
xchg
mov
lret
xchg
in
outsl
mov
fisttps
mov
in
scas
fildl
jbe
sub
sti
fwait
mov
or
outsb
adc
push
pop
scas
sbb
push
popa
leave
xor
add
adc
dec
in
sbb
push
push
leave
dec
arpl
jmp
adc
add
shl
pushl
test
push
ljmp
fnstcw
mov
xchg
sub
inc
data16
adc
mov
roll
jns
or
rcrl
repz
lea
sbb
fldt
pushf
dec
dec
mov
and
cmp
lods
dec
sub
imul
push
int
sbb
test
xchg
push
testb
pop
mul
xchg
pushf
cmp
ss
insl
lods
pop
mov
mov
fbstp
adc
or
aam
insb
fmull
adc
xor
xchg
fwait
jne
pop
push
xchg
mov
mov
mov
mov
pop
test
rcll
jmp
out
ret
in
faddp
nop
int
and
sti
mov
lods
sub
pop
dec
jb
mov
negb
fdivs
sub
movhps
xchg
hlt
out
cmp
dec
cmpb
pop
mov
mov
insb
dec
in
push
or
push
scas
xchg
testl
sub
fs
les
stos
movsb
aas
imul
jb
and
or
cmpsb
sub
popf
mov
add
pusha
je
xchg
jb
add
int
push
idiv
daa
clc
mov
and
popf
jns
push
arpl
ret
enter
mov
xchg
inc
cmp
pop
ret
cmp
xchg
fdivrl
in
inc
sti
pop
push
xchg
call
fdivrl
add
repnz
lcall
int3
fs
xor
les
xchg
les
push
das
jmp
adc
out
nop
lods
mov
push
pop
dec
loope
mov
test
mov
pop
outsl
icebp
out
sub
repz
testb
rclb
mov
inc
mov
ds
mov
movl
or
and
add
fldcw
mov
in
xor
push
add
jle
es
out
cmp
scas
je
loopne
fdivrs
cmpsb
insb
mov
sub
add
stc
jb
fldt
adc
addr16
mov
scas
add
stos
rclb
sbb
sbb
add
roll
dec
pusha
cmp
mov
mov
ficoml
rol
mov
aaa
pop
leave
mov
pop
cwtl
dec
add
stc
in
in
ss
and
loope
jmp
sub
push
cwtl
cwtl
adc
aaa
insb
outsb
xor
mov
in
hlt
in
inc
inc
je
push
cmp
pop
adc
sub
xor
jp
cli
cmpsb
lods
repz
repnz
xor
cli
out
insb
addr16
iret
data16
xchg
mov
pop
push
lret
sub
cmc
ljmp
dec
lds
pop
add
and
iret
gs
dec
inc
outsl
arpl
in
int3
push
mov
pop
xor
jmp
cmp
mov
andl
mov
pop
popf
adc
xchg
push
mov
fiadds
push
lock
das
xor
push
pop
je
sarb
adc
mov
daa
inc
sub
mov
ljmp
fldcw
jae
inc
jmp
rolb
subb
out
add
xor
sbb
inc
xlat
mov
mov
sahf
leave
loop
dec
mov
mov
mov
sbb
das
iret
cmp
loope
iret
adc
mov
iret
pop
ss
inc
stos
shl
push
ret
mov
or
push
bound
mov
or
add
inc
sbb
or
call
pop
push
push
repz
icebp
das
mov
notb
lds
cli
inc
fsts
lds
mov
add
sub
pop
out
cmpl
inc
ljmp
mulb
aam
push
and
in
mov
dec
std
mov
ljmp
cwtl
aas
pop
cmp
iret
mov
sub
repnz
in
jmp
jnp
sarb
mov
retw
scas
clc
jmp
pusha
adcl
cltd
cld
xor
stc
mov
fldl
mov
push
jmp
xchg
sbb
jp
ds
jg
fisttpll
inc
fs
in
cld
das
fisubs
mov
mov
test
sub
testb
inc
mov
mov
jg
in
xor
xchg
pop
lods
cwtl
mov
adc
mov
decl
sub
and
push
dec
lcall
jns
iret
sub
mov
out
shl
jmp
jmp
xchg
xchg
adcb
sbb
out
push
add
mov
fbstp
sub
dec
xchg
shll
js
dec
imul
repz
fsubrl
push
mov
ss
or
jo
mov
ja
jb
sub
xor
les
outsb
lahf
or
adc
mov
inc
int
or
xor
repnz
lock
fld
fisubl
aam
mov
mov
out
sbb
pop
dec
mov
std
inc
push
mov
adc
inc
jbe
push
imul
dec
insb
mov
jbe
shll
or
jge
rcrl
jo
ret
cltd
or
enter
sahf
and
jbe
int3
incl
fbstp
adc
cmp
scas
mov
mov
inc
mov
dec
lock
and
dec
das
add
xchg
test
fidivl
cli
mov
ja
lods
or
scas
ljmpw
jmp
sbb
dec
add
rcll
mov
in
cli
sbb
push
adc
xor
lods
das
dec
fst
xlat
jl
or
cli
psubsb
adc
add
loop
xor
inc
movb
sbb
add
or
xlat
jmp
push
call
xor
subl
inc
outsl
push
push
dec
or
sbb
cld
pop
insl
jns
fdiv
inc
lret
push
and
or
inc
imul
jbe
mov
je
out
iret
xchg
scas
add
add
and
into
int3
stos
into
xchg
rolb
fbstp
push
lods
test
test
mov
sbb
dec
pop
lods
leave
cmp
out
sub
pop
clc
lds
cmpsl
xchg
or
fstl
add
and
std
test
mov
push
mov
loope
add
faddl
daa
adc
cmp
insb
shlb
sub
fs
jnp
xchg
js
xchg
imul
test
mov
sbb
jle
lods
psrld
aam
leave
xchg
stos
sti
mov
or
fwait
push
sub
jl
mov
je
and
mov
mov
xchg
bound
mov
je
loop
out
sub
repnz
and
iret
mov
jmp
mov
push
inc
mov
dec
xchg
dec
push
rolb
dec
popf
pop
push
mov
ljmp
xchg
ljmp
cs
jg
jbe
mov
outsl
fmuls
or
mov
nop
push
lcall
adc
lods
stos
inc
popl
mov
push
mov
or
adc
mov
stos
xor
ljmp
fstl
loopne
seto
outsl
jo
push
mov
xor
dec
sub
push
ja
jb
adc
xor
mov
mov
into
or
outsb
lds
aad
mov
pop
xchg
dec
test
and
xchg
cmp
jno
cmp
inc
or
or
xor
and
and
cltd
inc
mov
stos
mov
inc
cmpsb
cmpsb
ret
outsl
xchg
lods
xchg
les
or
iret
lret
adc
mov
out
inc
cwtl
push
mov
or
sbb
sbb
movsl
insb
std
aaa
fwait
push
movsl
and
xor
add
mov
popa
lret
lock
lods
jl
dec
mov
mov
xor
push
cmpsl
ss
test
jne
rclb
and
mov
mov
ljmp
xchg
ss
push
sar
cmp
mov
pop
dec
stos
lock
adc
hlt
pop
xchg
mov
pop
pop
sti
shlb
adc
inc
lea
xor
cli
loop
push
cmpsl
nopl
and
inc
lret
add
fwait
or
cmpsl
or
jno
adcl
dec
push
cmp
arpl
mov
test
jmp
cltd
jecxz
pop
xor
inc
pop
sbb
negl
pop
mov
pand
push
loopne
iret
ja
js
fdiv
jge
fs
mov
out
lret
mov
push
fwait
xor
mov
ja
and
test
push
dec
add
xchg
mov
in
jge
mov
loop
daa
xchg
pop
incl
sbb
sti
mov
fucom
jl
leave
cmp
xchg
push
xor
mov
sbb
nop
dec
aad
cld
dec
jl
push
and
int3
jbe
ds
js
pop
jae
cld
ret
jecxz
mov
jp
mov
adc
cmc
icebp
or
fldcw
shll
mov
lods
shrl
pop
lcall
xchg
jnp
xchg
mov
sub
call
inc
mov
out
shll
in
and
lret
xor
movsl
xchg
cmpsl
aam
adc
fdivrl
mov
jne
aas
in
daa
mov
jo
repnz
shl
jo
cmp
stos
cmpsl
or
stc
pop
js
or
mov
fbld
out
fwait
push
mov
sbb
adc
inc
cmp
jmp
mov
fisubrs
mov
mov
jl
test
pop
clc
mov
in
mov
push
dec
movsl
mov
inc
dec
pop
sti
cs
mov
cltd
pop
scas
jns
rcll
or
push
lret
add
fdivl
rorl
insl
aam
nop
sub
fidivrs
push
rorb
cmp
sbb
and
mov
xor
fildl
loope
jl
adc
clc
adc
lock
cli
cwtl
mov
jp
xor
in
sbb
or
jb
push
add
dec
xor
out
sbb
sub
mov
in
stos
mov
xor
dec
mov
sub
loopne
xor
add
sahf
fsubr
in
adc
mov
dec
xor
xchg
sub
insl
ret
xor
es
mov
pop
lods
jno
pop
cmc
shll
add
shl
insb
or
inc
dec
cmp
mov
or
ja
outsb
mov
daa
inc
cwtl
js
mov
int
fldcw
and
xor
xchg
pop
and
xchg
ja
aam
add
pop
pushf
mov
jnp
ret
xchg
pop
imul
addb
xor
sub
sub
lock
mov
jbe
sub
dec
inc
xor
pop
adc
imul
dec
loopne
add
push
adc
pop
push
shlb
jecxz
push
adc
shlb
dec
cwtl
sbb
outsl
xchg
cmp
es
scas
pop
loopne
jne
mov
imul
add
sbb
shlb
icebp
fiadds
lret
sahf
aaa
scas
cltd
test
shll
jecxz
inc
loopne
or
aaa
div
dec
sub
add
push
push
jmp
shl
rcr
mov
cmc
jb
xchg
fstpl
inc
cwtl
jae
mov
mov
inc
mov
sbb
lds
ja
cmpsb
out
pop
lahf
mov
lahf
lock
pop
test
adc
je
jmp
dec
outsl
ret
fdivrl
hlt
add
sbb
xchg
scas
push
adc
sub
addl
or
leave
adc
and
mov
fcoml
aaa
xor
clc
icebp
gs
pop
cmp
out
scas
loop
and
shlb
and
pop
push
adc
shlb
mov
out
out
cmp
in
inc
dec
and
cs
or
push
iret
stc
dec
jns
imul
cld
jbe
or
daa
pop
or
leave
addr16
mov
lahf
fninit
add
fadds
sbbl
adc
scas
mov
inc
mov
scas
xor
dec
aaa
sub
dec
stc
push
in
pop
mov
ss
sbb
xor
or
out
push
sarl
into
or
hlt
xchg
xchg
xor
mov
inc
lock
sub
leave
sti
pop
mov
cs
in
xlat
movsb
cmp
add
or
jb
lret
call
push
xor
jae
jl
dec
repnz
mov
sarl
jle
or
inc
xchg
mov
enter
lods
in
popf
pushl
adc
xchg
test
sahf
cmpsb
xor
lret
dec
sbb
daa
jnp
or
sbb
inc
es
mov
mov
adc
mov
ret
in
sub
add
pop
mov
mov
std
insl
fcomps
test
jb
pop
mov
mov
mov
mov
sbb
aaa
mov
lcall
test
xor
cmp
jmp
and
imull
pop
xchg
xchg
and
adc
negb
lret
cmp
adc
test
cmc
adc
push
icebp
mov
dec
mov
std
push
addr16
jmp
les
jge
dec
xchg
inc
pop
in
mov
mov
cmp
xor
dec
stos
mov
sbb
mov
inc
repz
sub
mov
inc
jae
inc
outsb
int3
enter
mov
inc
push
clc
ja
mov
inc
mov
xchg
push
ljmp
push
jg
int3
fwait
mov
dec
push
xchg
jecxz
jb
jb
and
pop
test
popa
cmp
inc
cmp
clc
jo
outsl
pop
subb
mov
lahf
test
cmp
addr16
adc
push
sub
mov
mov
test
push
cmp
int
push
mov
popa
sub
arpl
aas
cwtl
cmpsl
iret
xlat
inc
mov
cmp
cmp
aaa
mov
test
pusha
xorl
pop
stos
cli
mov
sti
push
stos
negl
lods
xchg
and
je
or
lods
sarb
iret
mov
mov
fidivrs
jle
and
push
daa
movsb
mov
adc
push
pop
int
fcoml
test
js
hlt
cwtl
or
test
movsl
cmp
sub
pop
and
cmp
imul
outsl
xchg
mov
fistps
sbb
mov
mov
pop
pop
shrb
lret
add
clc
out
sbb
iret
push
mov
ja
aas
in
push
hlt
inc
and
jae
cmp
and
repnz
dec
pop
jne
cmpsl
fildl
mov
mov
cmp
dec
dec
test
inc
popl
loopne
in
aas
imul
mov
sti
adc
adc
popa
dec
xor
push
loopne
test
or
push
dec
test
sbb
lock
jge
jne
dec
sbb
movsl
pop
xor
xchg
mov
xor
stc
shll
jp
mov
popf
pop
int
xchg
sbb
jb
ret
lock
out
cltd
dec
pop
arpl
pushf
adc
mov
and
mov
fisttpl
cli
jmp
cli
in
cmp
daa
dec
sbb
negl
or
aaa
pop
daa
outsl
out
push
and
loopne
xchg
or
loope
and
lret
repnz
getsec
cmp
inc
cmp
imul
mov
subb
das
fnstenv
pusha
daa
add
sar
int3
adc
jbe
enter
push
or
cmp
ret
inc
sbb
test
push
pop
in
arpl
rolb
inc
sub
cmp
out
ss
repz
loope
jmp
cmp
jg
movsb
inc
mov
inc
clc
das
cmpsl
js
clc
cmp
mov
xor
jmp
shrb
xor
jp
sub
mov
jp
pop
mov
pop
xor
pop
movb
mov
ja
jl
icebp
ss
xorb
or
loopne
mov
jg
inc
aas
push
sbb
movsl
jnp
adcl
pop
lds
mov
repnz
or
push
clc
stc
test
fcmovb
leave
inc
mov
fcomp
pop
fadds
pop
jmp
push
test
pop
and
jp
sarl
ret
sub
hlt
in
mov
movsl
jp
sub
icebp
repz
cmp
mov
mov
gs
ret
jne
jg
xor
scas
sub
jmp
incl
mov
cmpsl
sub
inc
mov
cmpsl
mov
pop
mov
clc
push
mov
lret
mov
popa
jge
pop
sub
sbb
sbb
shll
neg
insl
ret
andnps
ds
and
cmpsb
ja
jmp
push
pop
dec
aaa
test
xchg
stc
aad
aaa
test
clc
mov
outsb
pop
mov
mov
add
mov
mov
lret
fisttpll
loopne
xor
and
jns
xor
jne
out
inc
lock
lods
and
push
fucomip
aas
and
xchg
call
cmp
and
mov
xorb
pop
or
int3
das
sbb
rol
fcoms
and
ljmp
mov
nop
rclb
fadds
and
hlt
xchg
out
test
ret
fldenv
mov
cs
popa
adc
jp
xchg
shlb
xor
xlat
ja
mov
test
push
inc
or
scas
inc
cmp
jb
inc
inc
xor
shll
maxps
jg
lds
loopne
mov
inc
and
inc
xor
cmpsb
fistps
mov
jns
je
gs
int3
orl
jae
pop
hlt
add
test
pop
cld
clc
ds
pop
dec
pop
ja
jo,pn
test
sbb
gs
sbb
mov
fs
je
jge
mov
sarb
arpl
sub
sbb
pop
jl
dec
push
roll
mov
jne
add
sub
sbb
ja
int3
sub
mov
and
loop
fwait
dec
icebp
or
dec
and
pop
mov
jns
or
mov
cmpsl
popa
pop
icebp
sub
mov
push
or
sub
call
push
fs
push
and
add
arpl
movsl
dec
rolb
pop
inc
sub
inc
loop
das
fstl
jo
xchg
ret
mov
test
scas
inc
xchg
ss
testb
in
stc
test
fs
or
pop
lea
push
jecxz
call
fistpl
popa
fucomip
mov
and
scas
pop
fwait
xchg
test
xchg
nop
push
cmc
adc
jb
jp
cmpl
cld
movsb
nop
and
ja
std
mov
psrld
adc
adc
and
inc
imul
outsl
mov
add
or
test
lret
mov
pop
lahf
nop
pop
jb
push
sbb
pop
mov
std
mov
add
xor
mov
or
push
add
xchg
xor
xchg
fdivrl
sub
sub
dec
pop
mov
mov
cmpsb
inc
loopne
pop
sbb
jp
lods
lods
in
lret
fwait
mov
sub
mov
jns
cmpsl
scas
shll
clc
mov
test
add
mov
pop
pop
sti
pop
out
into
les
int3
or
add
cmpsl
cwtl
pop
cli
orb
into
add
in
sbb
sbb
mov
idivb
add
movsb
into
xorb
cmp
dec
out
sahf
inc
dec
shll
xchg
insl
push
movsl
scas
pop
push
sub
push
xor
test
fisubs
jnp
in
lahf
push
dec
sub
les
push
xor
inc
pop
mov
shl
mov
leave
into
in
push
xchg
xchg
ljmp
push
pushf
aas
inc
xor
cli
inc
mov
js
shrb
and
cmp
pop
loopnew
dec
ds
dec
push
jo
sti
adc
addb
push
sbb
push
jb
jno
outsl
cwtl
and
add
dec
dec
add
pop
movsl
repz
subb
push
jg
lcall
cltd
mov
sub
cmpsl
mov
jnp
pop
xchg
paddsw
mov
fldl
mov
ja
ss
xchg
mov
sub
seta
cltd
enter
jle
sub
sbb
push
xchg
jge
jge
mov
addb
mov
xlat
cmp
mov
lcall
xchg
mov
or
or
ljmp
fnsave
mov
lret
push
mov
mov
ds
mov
dec
test
in
mov
xchg
sub
mov
addr16
push
inc
aam
lcall
sub
sbb
shrl
push
fsubrs
push
sub
es
aad
aad
xor
xor
dec
jno
sub
jo
imul
hlt
lret
mov
scas
and
xlat
sti
mov
jle
out
mov
adc
xchg
xor
sub
mov
xlat
leave
push
loop
sbb
fdivrl
dec
lea
mov
xchg
adc
mov
adc
outsb
push
lea
mov
lock
add
cld
jecxz
leave
movsb
adc
cltd
and
call
pop
outsl
aam
xor
lock
sar
cmpsl
and
repz
lcall
loop
xchg
cwtl
pop
stos
mov
sub
dec
arpl
jmp
xchg
xor
jg
xor
push
jne
pusha
shrl
std
xor
cmp
loop
xchg
add
add
or
jne
xchg
mov
rol
dec
icebp
in
add
xlat
push
sbb
push
pushf
push
loopne
lcall
push
jp
cmpsb
fidivrl
mov
sub
lds
jecxz
inc
pop
add
loope
jmp
aad
mov
aas
mov
mov
test
push
nop
cmc
mov
sub
fsubrl
orb
or
xchg
loop
jl
inc
mov
fstps
pop
mov
mov
rcl
mov
mov
popa
mov
mov
add
or
mov
pop
or
pop
mov
inc
mov
push
cld
mov
sbb
into
inc
sbb
hlt
inc
xlat
sbb
xor
mov
mov
push
mov
lods
ds
or
neg
cld
orb
sub
imul
lds
sbb
xchg
nop
leave
or
jp
enterw
mov
test
lret
mov
and
clc
lods
xor
xor
and
add
dec
mov
aad
movsb
leave
mov
xchg
mov
pop
cltd
push
ret
loopne
mov
es
mov
scas
and
std
jl
insl
rorb
mov
shr
xchg
mov
ds
outsb
sbb
popf
pop
push
pop
movsb
xor
mov
pop
push
movsb
enter
ja
int3
or
jle
pushf
enter
or
inc
pop
ja
int
adc
hlt
jmp
jp
shrl
shrb
mov
insb
mov
cmp
dec
in
ror
pop
loopne
dec
outsb
sub
adc
out
inc
ret
pop
xchg
sbb
mov
loope
shr
mov
bound
fst
sub
out
sahf
mov
inc
cmp
js
es
data16
fstpt
fstps
or
iret
mov
jbe
dec
imul
inc
ss
mov
aas
in
xor
dec
int3
cmp
dec
or
mov
js
inc
shl
adc
xchg
pop
fcomp
push
rcll
sahf
xchg
test
test
sub
imul
or
jg
movsb
cmp
inc
jno
xchg
sti
sbb
and
hlt
stos
loope
test
sbb
loop
mov
lock
pop
arpl
shll
icebp
or
dec
andb
aaa
aaa
outsb
cmp
cmp
or
mov
les
lock
out
dec
repz
push
movsb
leave
or
into
int3
imul
in
fnstcw
push
xor
insl
and
dec
cmpsb
dec
shr
mov
adcb
test
rcll
xchg
pop
push
mov
test
or
ja
sbb
inc
adcb
pop
lea
xchg
pushf
jmp
ret
add
pop
pop
push
jnp
jge
ja
fidivrl
jne
jbe
inc
out
fadds
movsb
jle
push
push
cwtl
sbb
outsl
cmp
inc
dec
js
inc
insl
add
xchg
or
fldl
fistps
pop
pop
mov
clc
mov
jecxz
cltd
icebp
icebp
fists
out
stc
in
xchg
xor
lods
loopw
lcall
sti
pushf
sti
push
fdivrl
das
dec
fcomi
push
lret
ret
cmc
ficomps
mov
and
loope
adc
aas
popa
mov
mov
jl
lret
movsl
ljmp
and
dec
in
or
int3
scas
test
insb
aaa
lods
inc
inc
cmp
adc
daa
sub
sbb
cmp
notl
xchg
add
cmp
mov
int3
sub
pop
shl
xchg
inc
adc
dec
lret
out
js
push
ss
add
std
rcrb
lcall
push
lret
cli
movsb
xchg
add
inc
add
dec
sbb
xchg
ljmp
mov
lcall
adc
lret
out
das
dec
pop
jmp
mov
sub
enter
lahf
cmp
push
pop
jns
aas
paddsw
mov
add
fstpt
ja
cmp
cmp
test
sub
push
xchg
int3
push
and
lods
aaa
jl
sbb
in
pop
sbb
inc
stos
inc
les
adcl
es
shrb
sub
xlat
mov
jge
in
stos
mov
mov
xor
jmp
ret
cmpl
push
push
aas
cmp
cld
add
jno
jecxz
pop
mov
sub
push
fcomps
sbb
enter
mov
add
pop
mov
adc
push
ljmp
into
xor
add
pop
jp
stos
push
out
decb
pop
leave
movsb
sbb
mov
dec
nop
sti
jo
mov
out
dec
fimull
popa
inc
lcall
xchg
xor
fdivs
rcll
jne
loopne
lock
mov
dec
bound
daa
in
int
es
pop
leave
adc
mov
push
jae
inc
out
enter
fisttpl
xchg
xchg
pop
outsb
aas
sub
dec
dec
insb
in
movsl
int
dec
mov
stos
inc
dec
pop
xchg
test
scas
insl
mov
add
sbb
pop
dec
add
and
pop
push
xchg
iret
jo
and
in
mov
aad
clc
xchg
cwtl
cltd
xchg
cmovp
dec
icebp
mov
sti
add
push
inc
mov
xor
jle
and
int
sub
sub
mov
bound
ret
movsl
push
push
mov
inc
decb
out
push
in
sahf
sub
add
xor
mov
insb
sbb
or
sarb
les
xchg
in
rclb
fildl
jp
jmp
cmpsl
mov
xor
and
sahf
outsl
add
push
mov
lret
cmpl
mov
sub
lock
adc
lea
movsl
jecxz
xor
cmp
inc
mov
sub
sub
inc
cmpsb
orb
xor
out
mov
fwait
pop
xor
icebp
in
xchg
mov
imulb
or
aad
lret
xchg
cltd
mov
push
jb
dec
je
mov
sbb
test
xor
jmp
fcoms
xchg
sbb
jl
movsl
sbb
cmp
stos
sbb
cmpsb
push
pusha
sub
jo,pn
jmp
das
clc
and
cmpsb
mov
das
call
push
out
sub
xchg
mov
int3
or
dec
dec
inc
pop
xchg
leave
inc
mov
dec
jl
inc
cmp
push
dec
xchg
out
dec
scas
adc
orb
sbb
inc
mov
xchg
outsb
push
or
push
jmp
fiadds
test
addr16
ret
mov
mov
push
and
arpl
adc
push
add
outsb
das
cwtl
ds
xchg
lods
aad
aam
mov
push
movsb
outsl
pop
dec
movl
mov
ret
scas
aaa
scas
cmpsl
insb
xor
imul
insl
aam
cwtl
int3
or
adcl
add
mov
pop
jo
xchg
jne
or
rorl
adc
pop
mov
jmp
stc
adc
repz
xchg
xchg
dec
jecxz
push
xchg
popf
dec
into
mov
pop
insb
pop
dec
add
dec
ret
adc
ja
ljmp
je
in
out
sbb
mov
mov
int
es
arpl
shlb
pusha
mov
enter
xor
insb
inc
jp
push
cmp
test
push
pop
push
jne
movsl
addr16
xchg
negl
ljmp
jnp
mov
jle
cmpb
pop
out
repz
adcb
sub
cmc
adc
xchg
rorl
and
scas
inc
mov
mov
scas
xchg
into
ret
das
jle
jmp
cmp
fbstp
or
pop
lret
in
popa
cmc
jnp
mov
shlb
push
jb
xor
dec
sub
ja
idivl
lock
push
inc
and
dec
jno
aam
imul
fmull
mov
sbb
pop
inc
jl
out
or
cmpsl
jge
and
or
and
cmp
mov
sub
insl
jne
jae
test
or
mov
sbb
xlat
xor
jmp
cmp
enter
fldt
arpl
pop
mov
jns
sub
pusha
das
or
adc
dec
movsl
push
dec
pusha
sahf
push
mov
xchg
mov
call
cs
lret
pop
mov
mov
js
mov
sbb
and
mov
movsb
jle
mov
test
outsb
sub
push
fidivrs
test
push
jmp
mov
or
test
aas
dec
sbb
mov
rolb
ficoms
add
mov
into
aam
push
push
cltd
enter
xor
sahf
lock
mov
dec
and
fidivrs
mov
shll
cmpsl
and
stos
data16
sarl
repz
sub
out
inc
or
xchg
pop
test
outsb
mov
enter
scas
mov
sarb
xchg
imul
cmc
xchg
dec
cmp
inc
inc
mov
into
lods
aad
mov
mov
lods
fsubl
jnp
xchg
push
adc
mov
xchg
push
mov
sbb
js
dec
in
movsb
cmpsb
inc
cmpsb
into
sarb
lods
lret
cmc
jae
mov
or
or
or
test
xchg
xor
push
pop
jmp
xor
mov
adc
dec
pushf
rcll
mov
out
js
or
fstl
cmp
stos
xor
jne
pop
je
sbb
dec
ret
mov
pop
mov
mov
jmp
stos
fsubs
notb
fcoml
mov
mov
scas
mov
gs
pop
sbb
push
out
mov
aam
insl
sub
cmpsb
je
and
out
add
out
pusha
sub
add
out
inc
popa
cmp
mov
inc
jne
inc
xchg
vpshufd
dec
ja
mov
mov
notb
pusha
test
pushf
lcall
jns
dec
mov
sbb
aaa
and
inc
xchg
cmp
fimuls
test
daa
inc
iret
and
xor
xchg
loopne
mov
fcmovu
inc
fisubrs
pop
cmp
sbb
arpl
add
rclb
adc
insb
and
adc
add
imul
pushf
jmp
and
cmp
addr16
xchg
mov
test
out
jge
mov
dec
mov
icebp
dec
popa
sub
or
jg
repz
push
scas
and
iret
lea
push
pushf
subl
mov
fisubl
aas
das
jne
and
pushl
mov
int3
sbb
lds
addl
insb
lock
dec
iret
aad
mov
cs
fcmove
lods
mov
vpshld
xchg
mov
pavgw
movsl
lcall
dec
and
stc
jbe
lea
cli
test
xchg
pop
cmp
mov
roll
inc
jo
sub
stos
cs
jecxz
sub
lods
dec
sub
pop
in
mov
cmp
sub
or
jle
xorb
push
loopne
add
jne
mov
adc
pop
add
mov
mov
jmp
lret
aam
mov
jb
xor
shlb
fdivrs
mov
scas
fwait
stc
jg
xchg
pop
daa
fimull
and
xor
or
push
xor
int3
mov
adc
pop
inc
loop
stos
jne
mov
aaa
xorl
push
fidivrs
or
jo
rorl
cmc
mov
into
cs
ror
out
jle
out
pop
stc
repz
outsl
push
arpl
sbb
and
fwait
ljmp
jns
out
and
inc
sub
loopne
ss
or
or
pop
adc
adc
inc
mov
aas
and
cmp
data16
push
loop
xchg
fs
jne
xchg
popf
hlt
xchg
sbb
lahf
ds
div
push
arpl
cmc
push
push
out
loope
jnp
shll
dec
mov
leave
xchg
or
int
mov
jmp
pop
mov
push
addr16
xor
sbb
enter
cli
xor
dec
in
bound
std
xor
pop
sahf
lcall
loopne
jnp
push
jne
das
pop
mov
faddp
xor
dec
add
arpl
lods
loop
cs
fildl
shrb
pushf
subb
pop
add
das
lock
out
fisttpl
ja
lret
fs
cmpsl
sub
add
and
clc
mov
lea
adc
and
mov
pusha
inc
adc
xor
cmpsl
loopne
adc
orl
add
mov
push
lods
jb
ds
out
ss
outsl
adc
icebp
addr16
cli
sub
add
and
sbb
adc
xchg
fidivl
xchg
pop
push
mov
pushl
gs
mov
cld
mov
enter
or
outsl
xchg
les
inc
xor
mov
mov
inc
cmp
subb
les
sbb
sbb
push
lea
xchg
jbe
jb
jmp
outsl
pop
repnz
fdivr
rcll
mov
push
xchg
cmpsb
mov
ljmp
outsb
arpl
ret
adc
mov
xor
cltd
test
je
mov
inc
repz
sub
pop
shrl
fsubl
push
aam
push
sub
jne
inc
jge
sbb
lea
fwait
call
mov
sub
mov
imul
out
mov
fldcw
outsb
jo
ljmp
cmpsb
icebp
fs
in
lahf
rorb
in
insb
sarl
hlt
xor
add
mov
sar
pop
inc
sub
stos
into
adc
bound
inc
sbb
or
mov
inc
adc
pop
pushl
pushf
jg
sub
pop
push
mov
jmp
lret
cmpsl
and
or
and
jp
out
aas
xchg
shld
push
mov
insb
push
lcall
sti
cmp
ficoml
mov
insb
adc
dec
insb
jb
sub
mov
inc
mov
mov
add
and
mov
push
call
push
adc
ds
or
inc
loope
cmp
cmpb
pop
adc
mov
push
adc
mov
lock
xchg
jecxz
int3
xor
push
movsb
inc
xor
imul
jl
fistpll
pop
shl
jmp
in
and
mov
fdivp
stos
repnz
push
repz
and
inc
push
or
popf
and
enter
js
jecxz
mov
cmp
mov
fdivrl
inc
or
mov
out
stc
lds
test
daa
movl
xchg
aad
jmp
jns
and
sub
in
iret
jbe
std
std
stc
aam
cmovo
push
xlat
test
in
aaa
mov
into
inc
xchg
loopne
adc
out
inc
aas
sahf
outsl
test
ficomps
leave
out
out
adc
mov
ja
pop
jne
mov
fistl
jl
pop
daa
jmp
xor
dec
movb
lods
fmul
in
push
sbb
lock
lds
push
test
lods
das
ja
or
stos
gs
jo
icebp
in
stos
push
cltd
lret
and
cmp
rcl
pop
arpl
pop
cmp
mov
repnz
adcb
fadds
clc
xchg
inc
dec
sti
and
jae
or
jl
stos
inc
jecxz
ja
cmp
mov
pushf
sub
sbb
add
or
xchg
out
sar
jnp
mov
xor
lods
fcmovu
jo
pop
je
fcmovb
xor
adc
cltd
or
ret
adc
es
mov
insl
inc
scas
xor
or
in
xchg
and
cmp
cmp
dec
dec
shufps
xchg
add
test
add
movsl
lahf
sbb
mov
popf
movsl
mov
cmp
stos
add
mov
jmp
idivb
leave
xchg
inc
cmp
sub
enter
hlt
data16
mov
cs
adc
cmp
add
daa
or
xor
aam
and
mov
subl
fisubs
push
andb
inc
fs
cmp
mov
ja
xor
lahf
cs
push
subl
adc
stc
out
aas
daa
mov
fists
add
sti
popl
xor
imul
and
sbb
test
sti
es
cmpsl
pop
dec
insl
jnp
xor
dec
jnp
mov
rolb
cmp
or
fstps
add
scas
sub
xchg
incb
pop
into
mov
shll
cltd
push
fsubl
jmp
mov
data16
xchg
xor
push
pop
mov
daa
push
cmpb
pushf
lds
fs
add
jl
imul
sti
sbb
cmp
xor
leave
inc
xchg
pop
cmovl
les
jns
mov
test
fdivl
adc
stos
sbb
ljmp
je
les
enter
fnstsw
jno
xor
push
adc
adc
int3
shll
fcmove
int3
lds
andb
mov
push
mov
in
push
push
pop
xchg
mov
popf
out
lahf
dec
cmp
adc
aaa
mov
adc
in
sbb
jbe
xchg
jb
fstpl
insb
scas
inc
testb
or
in
inc
imul
mov
adc
icebp
push
push
sub
sub
add
cltd
sub
ret
xchg
mov
jge
pop
cmp
mov
sub
arpl
adc
push
lds
mov
fnstenv
mov
loopne
into
call
cmc
push
lea
call
or
test
pop
stos
sti
sti
mov
js
jmp
jg
cld
adc
sub
rcr
inc
mov
imul
mov
xchg
stos
mov
fld
aaa
sbb
inc
cmp
or
dec
mov
push
sahf
lahf
out
into
xchg
rolb
inc
fcmovne
sbb
and
cltd
in
std
cs
cs
dec
sub
out
dec
icebp
shll
stos
leave
outsl
dec
inc
mov
cli
xor
pop
cmpsb
mov
daa
sar
mov
inc
adc
sahf
stc
lret
xor
adc
xorb
mov
fisubs
cmp
test
cmp
pop
cmp
mov
imul
cmp
arpl
sub
ret
sarl
xor
push
xchg
and
mov
cmp
xchg
dec
xchg
insl
sbb
rcll
pop
call
mov
inc
fwait
ret
into
xlat
sub
pop
mov
push
adc
push
and
push
ret
mov
mov
mov
fwait
inc
sub
cmp
mov
jge
adc
dec
cmp
loope
inc
repnz
xor
mov
dec
add
ds
adc
int
fwait
xor
sub
scas
ss
iret
mov
mov
pop
loop
or
jl
xchg
jno
inc
shlb
adc
iret
int
push
sbb
xor
movsb
pop
push
and
inc
loop
insb
inc
pop
lock
mov
shr
lea
imul
jmp
rep
adc
mov
pop
aaa
pop
idiv
out
or
repnz
call
jbe
sti
xchg
sti
inc
fs
fucomp
shll
dec
adc
xchg
aad
adc
sti
and
xorl
sti
pushl
lcall
popa
mov
push
jp
mov
adc
ret
dec
sub
nop
ljmp
aas
adc
es
rcll
inc
push
pusha
in
push
adc
jns
cmp
and
mov
fdivrl
test
cltd
sub
and
outsl
ret
test
xchg
pushf
dec
mov
dec
cld
int3
into
xchg
jle
negb
sti
mov
pop
dec
push
mov
test
cmp
sbb
jns
cmp
cmp
or
int
lret
js
inc
xorb
pop
add
fstp
mov
or
push
out
add
ret
mov
sbb
nop
push
int
shll
in
xchg
dec
adc
push
rorl
add
mov
imul
imul
cli
outsl
cs
ljmp
push
mov
pusha
jl
out
cmp
push
cli
xchg
mov
xor
hlt
rcl
nop
sub
ds
xchg
add
fdivr
enter
cmpsl
dec
cmp
popa
xchg
or
xchg
and
mov
leave
jecxz
pop
jbe
jge
mov
pop
pop
or
jg
test
popf
data16
mov
dec
cmp
sbb
and
and
add
pop
push
outsb
cmp
mov
leavew
fsubrs
adc
repnz
adc
adc
test
jns
pop
and
in
xchg
ret
int3
dec
pop
out
jae
idiv
mov
push
adc
jns
sahf
mov
mov
repz
loopne
enter
mov
pop
popf
push
leave
lea
cld
push
cmpsb
dec
and
or
aaa
push
push
pusha
sbb
cmp
pop
mov
mov
es
sarl
cmpl
push
out
cltd
icebp
mov
mov
push
test
mov
xchg
inc
sarl
cmp
xor
sub
pop
xchg
xlat
mov
sbb
mov
or
mov
mov
nop
sbb
hlt
aam
cmc
loope
and
inc
scas
fcmovne
das
lds
mov
xor
sbb
repnz
xlat
jns
mov
adc
jbe
ror
rorl
dec
repnz
jge
mov
cmp
loop
xchg
imul
scas
jmp
add
jns
leave
out
aaa
mov
mov
jge
sahf
inc
addb
xor
outsl
popa
sahf
cwtl
dec
adc
pop
sub
mov
out
cmovp
popa
sub
sub
scas
and
mov
mov
mov
xor
int
adc
sbb
pop
xor
outsl
pop
dec
int3
push
pop
mov
xchg
outsl
daa
out
ds
sarl
sub
out
imul
sbb
mov
push
ds
cmp
mov
mov
lds
mov
xor
in
pusha
loopne
iret
daa
xor
in
icebp
sbb
mov
movsl
loope
adc
jnp
mov
or
mov
dec
inc
ss
insl
inc
sbb
sbb
xor
in
ljmp
jmp
pushf
int3
pushf
add
adc
das
in
and
mov
or
das
jmp
lret
jl
lret
fisttps
nop
mov
imul
stc
sub
xor
pusha
outsb
pushf
mov
stos
xor
push
cli
push
add
mov
into
test
shl
adc
int3
cmp
leave
into
call
aam
popf
and
pop
lea
repz
sbb
cmp
xor
scas
inc
sbb
negl
pop
mov
ficomps
es
cltd
cltd
shlb
rcrl
lock
sbb
fiadds
push
jns
or
and
push
add
mov
movntq
jg
push
pop
xchg
sub
stos
adc
xchg
lret
pop
jae
or
pop
in
getsec
xchg
mov
cltd
cmpsb
in
loop
add
sahf
mov
sub
filds
outsb
adc
out
push
and
into
out
push
sbb
data16
lods
and
nop
xchg
insl
mov
stos
xor
xlat
sub
and
popa
cld
inc
daa
mov
aam
out
mov
in
rorl
dec
subb
outsl
sbb
out
sbb
dec
jb
push
ljmp
imul
push
add
sbb
adc
jl
xchg
ljmp
int
sub
jns
int
mov
dec
inc
subl
aam
in
dec
and
or
icebp
lcall
cmp
or
cltd
sub
decl
imul
movsb
fs
mov
adc
pop
inc
fnstenv
mov
lods
notl
imul
dec
stc
shlb
fsubrl
adc
pushf
sbb
add
xchg
mov
xchg
outsb
aam
dec
cmp
dec
inc
jb
lock
repz
and
roll
fwait
popa
adc
dec
and
ret
sbb
fstpt
ret
sub
pop
loopne
fisubs
popf
cmp
js
gs
in
ds
les
dec
fiaddl
inc
dec
pop
inc
mov
jb
insl
lcall
fdiv
jae
add
test
fstp
lods
inc
push
mov
cmc
xor
mov
mov
and
mov
repnz
fdivrs
test
sbb
sbb
mov
imul
dec
mov
sar
xchg
dec
insl
out
jb
imul
leave
xor
arpl
shll
stos
fidivl
inc
mov
pusha
push
push
stos
in
sbb
mov
fadds
test
call
adc
cmp
or
or
xorb
stos
ljmp
mov
mov
imul
test
lahf
xchg
mov
call
js
enter
pop
mov
fwait
in
add
aas
xchg
in
shll
mov
dec
out
popf
mov
lret
mov
pop
add
clc
xchg
mov
rclb
rclb
testb
lahf
lods
xchg
aam
sub
fs
ja
ss
mov
mov
jb
jg
les
mov
jl,pt
ficoms
lea
mov
pop
mov
cmpl
call
push
sub
adc
popa
ss
into
or
mov
xchg
push
xor
pop
jnp
sbb
stc
scas
sbb
hlt
sbb
pop
mov
dec
call
shll
lahf
in
push
std
and
subl
dec
loop
ja
fcmovbe
jbe
dec
cmp
scas
mov
scas
mov
inc
sub
sbb
mov
push
movsl
push
jge
in
and
inc
cmp
mov
adc
mov
jg
ss
lcall
push
xlat
lahf
mov
sub
sub
lret
sbb
bound
nop
sahf
les
ficomps
notb
and
ja
add
into
xor
adc
jno
jne
add
push
adc
adc
mov
jne
pop
into
dec
push
rclb
pop
ret
lock
jno
push
rolb
mov
mov
push
sahf
in
jae
mov
test
rorl
jle
test
push
mov
pop
scas
ret
xchg
into
mov
lcall
lock
outsb
icebp
sub
xor
ljmp
out
es
add
mov
das
ljmp
inc
or
fldcw
or
xor
dec
icebp
xchg
and
push
jnp
push
stos
mov
fisubl
out
sbb
jp
test
mov
add
ljmp
and
xchg
adc
sbbb
pushf
mov
sub
ficompl
add
out
nop
mov
mov
xchg
jo
mov
pop
xchg
lods
out
and
stos
mov
jg
xor
aas
pop
adc
dec
arpl
mov
cmp
sub
lcall
ljmp
lds
mov
jbe
cli
dec
sbb
jb
imul
addr16
setge
xchg
add
xor
xchg
imul
test
sub
xchg
cmc
jns
cmpsl
and
add
popa
lahf
or
mov
hlt
andb
fwait
arpl
flds
dec
and
jo
sbb
xchg
xlat
dec
add
ret
frstor
sbb
or
inc
dec
sub
dec
xor
and
cmp
dec
xchg
jns
je
std
mov
subl
lahf
jne
sbbl
dec
lret
lcall
xchg
mov
stos
adc
test
insb
arpl
cmp
hlt
mov
js
dec
popa
dec
mul
dec
jnp
cmpb
mov
test
repnz
in
xor
mov
addl
or
pop
jne
mov
leave
pop
mov
in
test
lds
xor
pop
and
stc
pop
lock
pop
cmpsb
sbb
ret
inc
push
jb
in
or
cmpsb
jb
loop
xchg
insb
inc
mulb
jl
inc
out
cs
mov
cmp
pop
ret
mov
mov
pop
mov
cwtl
hlt
push
aad
mov
loop
and
mov
repz
adc
dec
fwait
mov
fwait
mov
sub
lods
shr
xor
xchg
loopne
mov
repz
dec
jnp
lods
enter
push
and
mov
aaa
xchg
or
cli
into
bnd
sbb
mov
sbb
pop
into
loope
mov
js
jno
lods
pop
jl
pop
ljmp
data16
mov
xchg
cld
or
outsb
mov
repz
insb
mov
mov
inc
push
pop
mov
in
cmpsl
adc
mov
jge
mov
pop
outsb
push
pop
or
bound
pop
andb
or
cmpsb
enter
xor
pop
jae
sbb
inc
clc
xchg
jbe
mov
cs
repz
or
cmc
scas
fldenv
aam
pop
adc
sub
cltd
mov
cmpsl
lret
xlat
out
sbb
fsubrp
adc
imul
cmp
push
xchg
jl
lret
aad
cmp
jo
mov
ret
jmp
fldenv
cmp
inc
jae
addr16
push
ds
das
push
outsb
imul
xor
jno
cmp
setb
mov
xlat
or
adc
ljmp
xchg
push
pop
dec
sbbl
sub
xchg
add
or
mov
or
push
pop
clc
aaa
jmp
mov
call
sbb
inc
sbb
xor
call
sti
and
jnp
mov
pop
jp
subb
xor
jp
pop
cmp
outsb
cmp
mov
sbb
pop
mov
inc
mov
not
mov
imul
mov
ret
les
pop
mov
xchg
rcrb
aam
or
sbb
repnz
add
mov
test
dec
xchg
test
pop
mov
ror
cltd
cmc
or
cmp
cmpsb
mov
mov
jo
inc
addr16
mov
dec
nop
dec
lds
cld
push
xchg
jmp
out
sti
xchg
shrl
add
adc
pop
xchg
cmpsb
push
xchg
cmp
or
in
in
dec
dec
loop
cmp
push
pop
sbb
dec
in
fistpl
adc
cmp
loopne
cmp
lret
jae
push
ds
fnstsw
cmpsb
fcoml
movsl
sbb
xchg
cld
out
sub
xchg
lret
aaa
mov
scas
movsb
cmpsb
cli
scas
jb
shrb
mov
cld
loopne
xchg
sbb
jle
outsl
dec
out
inc
xchg
push
cs
data16
dec
out
subb
sbb
rcrb
loop
outsb
sbb
adc
lea
fld
mov
aad
into
test
data16
clc
jmp
mov
popf
sub
jl
insl
and
xor
js
mov
aam
inc
lock
pusha
pop
jbe
and
inc
and
or
stos
xchg
add
mov
sbb
negl
ftst
jl
repz
push
mov
or
push
adc
mov
or
sub
int
jle
mov
pushf
jno
ljmp
dec
sti
cltd
sbb
repnz
addr16
fwait
mov
and
data16
sub
cmpsb
mov
js
cmp
pusha
push
xchg
subl
aam
sub
and
pop
and
xchg
xchg
mov
movsl
pop
mov
push
into
adc
push
icebp
imul
push
insl
ds
enter
mov
sub
jno
inc
mov
mov
cmp
pop
call
mov
push
outsl
or
sbb
dec
add
and
inc
test
imul
adc
lea
out
loopne
jb
outsb
lea
cmpl
mov
lahf
mov
sub
cmp
adc
fsubs
push
in
jl
iret
ljmp
jbe
pop
scas
xchg
out
push
jae
rep
xchg
mov
das
xchg
in
push
xchg
cmp
ds
dec
jmp
out
sbb
mov
mov
cltd
insl
scas
loope
or
or
aam
dec
cs
mov
hlt
mov
sub
push
sub
pop
leave
lret
add
repnz
add
dec
xchg
mov
and
add
sub
pusha
mov
loope
call
int
xchg
icebp
shl
imul
inc
aas
mov
clc
or
inc
and
call
and
push
pushf
cmp
mov
sbbb
rclb
push
and
pusha
mov
pop
dec
sub
jmp
mov
into
sbb
mov
mov
or
fadd
mov
inc
jge
aas
lods
fstpl
cwtl
cwtl
adc
jmp
cmpsb
out
test
jl
mov
adc
loope
std
xlat
mov
mov
xchg
pop
inc
ficompl
ljmp
xor
mov
lret
jne
out
push
jne
xchg
inc
and
mov
mov
int
mov
shrd
cltd
movsl
xlat
xchg
js
dec
cmpsb
xchg
pop
inc
mov
mov
or
fwait
clc
js
mov
pop
das
xor
mov
push
out
scas
sub
test
pop
mov
push
jnp
es
rorl
inc
fistpll
jns
jge
xlat
andb
jnp
clc
xchg
mov
insl
out
pop
lahf
add
cmp
push
or
aad
mov
movsl
adc
jmp
lods
push
xchg
jbe
jp
mov
popa
lahf
out
sub
add
out
cld
aam
adc
clc
adc
xchg
stos
xchg
lahf
jae
mov
addr16
jp
je
cmp
mov
push
shrl
sbb
pop
ja
addr16
cld
je
shrl
adc
jle
xor
fwait
aam
xchg
lcall
xchg
mov
fcos
mov
jo
cmp
cmpsb
pop
rclb
cltd
pop
pop
mov
das
mov
sbb
sahf
cld
mov
int
push
gs
xchg
sbb
jo
inc
cld
adc
push
cmpsl
lock
mov
outsl
sub
sahf
decl
or
sbbb
xor
daa
jmp
inc
jle
lcall
cmp
xchg
jg
daa
sbb
push
out
xor
leave
adc
xchg
das
pop
cmp
sub
adc
or
pop
inc
std
notb
fs
pop
mov
cmp
std
jl
sub
sub
sahf
xor
ljmp
mov
fcomps
outsl
mov
mov
shll
mov
mov
stos
lods
inc
out
call
jecxz
xchg
jae
arpl
fcoms
pop
dec
hlt
dec
int
enter
dec
cmp
pop
arpl
ret
fstpt
push
inc
cmp
xor
push
sahf
shr
xor
movsb
or
scas
pusha
add
cld
shl
push
aad
mov
out
inc
cmpsl
cmc
pusha
pop
test
repnz
mov
and
loop
dec
add
dec
ret
daa
sti
lods
xchg
and
fisubs
addr16
popf
jg
jo
insb
jmp
adc
fbstp
add
pop
out
adc
test
fcmovnb
fdivr
mov
cltd
out
cltd
nop
push
sub
sbb
popfw
xor
into
or
xorl
xchg
repnz
dec
loop
push
pop
fidivs
sbbl
jge
jmp
jo
and
xchg
ja
in
dec
aas
lahf
popf
xchg
or
pop
mov
mov
xchg
mov
pop
test
mov
rclb
roll
cwtl
and
cmpsb
pop
xor
test
push
push
dec
xchg
cmpsb
clc
mov
jl
scas
add
lret
leave
ret
icebp
dec
fwait
jp
mov
pop
mov
lock
cltd
xchg
cmpsb
ret
xchg
stc
iret
gs
lock
xchg
icebp
int
ficomps
shl
lahf
push
pop
pop
mov
adcl
pop
clc
lock
clc
clc
or
adc
bound
gs
adc
lret
aad
popf
jne
xor
pop
cmpsl
pop
ficompl
push
aas
mov
es
ss
and
or
loopne
push
test
and
xchg
cli
and
cmp
aam
adc
stos
int
lock
jmp
and
ja
vandnps
outsb
adc
out
in
or
shrl
aam
mov
jo
jno
pop
out
js
lods
addr16
or
mov
pop
aas
jbe
jbe
cs
sahf
out
xlat
scas
nop
lcall
mov
inc
push
nop
dec
pop
dec
je
rolb
icebp
loopne
js
mov
mov
adc
inc
in
into
and
xor
fsubrp
xor
jge
xor
inc
jg
cmp
sbb
mov
and
scas
xchg
inc
loopne
test
fiaddl
stc
jno
adc
push
fiadds
sbb
stos
xorl
enter
aad
adc
cmc
scas
fstpl
ret
into
fnstcw
mov
pop
jne
loop
hlt
insl
jecxz
sub
xchg
dec
xchg
arpl
inc
mov
mov
xchg
out
jp
inc
in
fstps
int
pop
adc
mov
fsubp
push
and
adc
test
pop
inc
stos
pop
push
outsb
mov
lcall
cmp
rcll
pop
pop
sub
or
clc
mov
xchg
mov
pop
or
or
testb
push
shlb
test
sahf
stos
xor
movsl
out
ds
ss
or
imul
sub
mov
stos
mov
sbb
sub
orb
test
fmull
dec
imul
jae
js
pop
xor
add
scas
and
add
cmp
imulb
cmpsb
jb
xor
mov
gs
sub
push
das
pusha
scas
aam
cwtl
dec
std
popa
or
mov
xchg
fisttpl
call
ss
fdivrp
pop
and
sbb
dec
lahf
mov
mov
mulb
rcl
add
int
fmuls
mov
pop
loope
daa
out
repnz
jbe
xchg
mov
loopne
push
xlat
sar
ljmp
or
cmpsl
adc
lods
and
les
das
mov
jno
shrl
add
pop
mov
or
dec
xchg
ds
test
test
xchg
jns
lret
inc
push
fsubr
es
shr
mov
inc
iret
imul
sub
mov
into
mov
and
adc
dec
rolb
pop
pop
lock
xchg
and
insb
push
bound
push
daa
in
dec
dec
push
mov
mov
dec
js
push
pop
mov
cmp
rcrl
push
jb
xchg
aam
mov
ljmp
push
pushw
mul
inc
imul
xchg
pop
push
fs
adc
or
push
pop
jg
xchg
movd
sbb
stos
mov
mov
cmpsb
sbb
cmpsl
sub
jmp
cltd
pop
aas
rolb
sub
xor
xchg
and
bound
mov
adc
and
inc
adc
sub
mov
shrb
sbb
addb
push
lock
fildll
imul
and
dec
or
adc
fwait
aas
mov
mov
outsb
pop
inc
mov
stos
shlb
or
add
and
rorl
leave
xlat
in
jp
jb
jmp
sub
jmp
pushf
add
add
scas
lods
sti
ror
sbb
je
imul
mov
adc
jmp
lahf
rclb
outsl
add
mov
sbb
shrl
ljmp
js
lea
pop
and
fwait
dec
push
xchg
call
or
xchg
leave
fimull
shll
test
rep
cli
fnsave
loop
or
xor
mulb
jb
jp
sub
lahf
and
mov
pop
outsb
jo
dec
jmp
and
rolb
fisubs
in
lods
nop
pop
mov
xor
jmp
out
jne
lahf
xor
sbb
bound
push
xlat
aas
cmc
nop
repz
mov
xor
lock
or
popa
int3
lret
dec
loop
push
mov
cs
int
push
fcoms
mov
movsb
sbb
jnp
mov
xchg
and
inc
jl
test
adc
in
mov
mov
stc
sub
call
push
test
mov
xchg
aam
inc
loopne
pop
je
sbb
daa
jle
pop
fists
mov
push
push
in
cwtl
mulps
xor
add
pop
jae
adc
adc
mov
jae
hlt
xchg
aam
in
outsl
pop
xor
repnz
int
push
inc
mov
mov
xor
pop
mov
inc
inc
fmul
mov
pusha
daa
hlt
xor
dec
sub
sbb
movsb
insl
cmpsl
add
js
sub
inc
stos
icebp
push
mov
repnz
mov
in
push
adc
inc
ret
sbbl
jno
in
pop
popa
ret
dec
out
ret
jecxz
xor
push
iret
mov
and
cmpsl
mov
out
xorl
dec
cltd
mov
cmp
cmp
int3
jno
fcmovnbe
add
out
js
dec
scas
xchg
push
lea
adc
pop
enter
clc
fwait
jg
les
jno
rep
enter
xor
push
dec
jmp
mov
mov
xchg
xchg
adc
cwtl
mov
test
mov
test
in
add
mov
add
idivl
outsl
pop
fistps
subb
clc
push
mov
in
mov
fstl
neg
faddl
rorb
adc
pop
dec
pop
inc
call
lret
pop
mov
aad
daa
data16
cmp
and
icebp
mov
loopne
or
les
es
add
aas
call
xor
and
pusha
fbld
les
adc
jp
dec
mov
je
mov
test
xlat
dec
xchg
mov
adc
movsb
pop
stos
jecxz
adc
ss
push
aam
or
mov
pusha
jl
in
mov
mov
sbb
xchg
or
mov
cli
xchg
insb
lods
loopne
cs
test
sbb
pop
lret
fisubrs
dec
mov
adc
pushf
mov
ror
mov
cmpsl
xor
cmp
xor
or
fcmovb
cmp
jge
cmpsb
xor
inc
adc
popl
shrb
loope
inc
inc
push
out
in
mov
lods
mov
mov
inc
and
cs
sti
ffree
pushf
lods
mov
incb
xchg
lahf
inc
sbb
das
mov
ret
enter
test
iret
mov
hlt
xchg
jecxz
test
movsl
push
mov
mov
mov
hlt
fsubs
lds
pop
jae
loope
push
in
dec
lods
mov
lret
enter
push
rcrb
inc
mov
jb
test
sub
in
or
iret
push
cld
sbb
pop
mov
ljmp
xchg
shlb
dec
and
mov
cmp
enter
mov
adc
das
call
pushf
cli
cld
or
and
push
jo
movsb
mov
stos
mov
cwtl
imul
jg
and
rcrl
sub
cwtl
out
movsb
mov
ret
sbb
dec
cmp
cli
insb
add
pop
mov
outsw
out
xor
into
mov
fnstsw
es
testl
or
fidivl
ljmp
ret
sub
push
nop
pop
xor
jecxz
jnp
lds
out
jecxz
test
inc
jge
mov
fdivrs
stc
and
adc
xor
mov
mov
aam
cwtl
into
jl
insl
ljmp
cli
mov
mov
adc
inc
call
sub
fwait
in
sbb
fs
js
sti
push
lcall
test
popa
insb
cld
mov
push
dec
repnz
sub
imul
movsl
shlb
add
out
adc
pop
lods
mov
mov
dec
sub
add
sbb
xchg
mov
cli
in
xor
dec
loopne
loop
xchg
adc
adc
stos
pop
test
outsb
jb
das
or
xorb
mov
push
icebp
or
mov
pushl
or
outsb
jl
in
int
dec
lret
push
or
lods
xor
add
sub
sbb
fs
lea
xchg
sti
fwait
lcall
jecxz
fiadds
cmp
dec
jmp
fstpl
lods
sub
in
pop
mov
mov
xor
inc
je
sbb
mov
cmp
loop
faddl
dec
add
cli
xor
add
xchg
sahf
and
loope
fstl
shrb
cld
int
pop
cmp
push
scas
push
rcrb
and
sbb
sub
xchg
leave
jg
push
pop
jmp
inc
sub
decl
sub
fmull
or
xchg
or
pop
jnp
inc
mov
shrl
call
push
and
rcl
inc
pop
pop
stc
mull
pop
mov
pusha
mov
insb
lods
leave
cmp
scas
repnz
pop
dec
repz
adcl
mov
jbe
cmp
sbb
test
xlat
jae
mov
fstl
in
in
sahf
ljmp
jb
cmpsl
in
mov
inc
out
push
test
xor
mov
and
xchg
repnz
pushf
fisubrs
push
or
lds
shll
cltd
sbb
cwtl
hlt
mov
hlt
out
loope
or
icebp
xor
mov
cmpl
test
inc
ss
fwait
xchg
mov
hlt
push
das
inc
sub
adc
adc
xor
fstpl
sti
mov
pop
imul
mov
int
push
aam
jnp
cmp
sbb
mov
mov
shlb
jnp
inc
cmp
sti
mov
or
pop
xchg
lret
fldenv
jnp
iret
push
and
xor
and
push
xchg
cli
mov
push
jge
cmp
or
lds
jge
daa
inc
cwtl
push
or
add
or
daa
push
ficomps
sub
push
mov
pop
jnp
addb
ret
mov
mov
push
adc
xchg
jb
push
adc
push
idivb
cmp
movsb
scas
dec
push
adc
pop
lret
xchg
inc
ret
cmpsl
and
ud0
mov
fldenv
xchg
xor
inc
clc
fidivrl
xor
subb
adcb
in
stc
testl
sub
mov
fidivs
rcr
inc
insb
imul
lock
push
sti
mov
test
push
aam
pop
popf
jecxz
pop
inc
ljmp
fadds
imul
or
mov
out
leave
mov
sbb
mov
dec
mov
gs
pop
jecxz
js
push
ficoml
stos
mov
push
or
mov
inc
lret
icebp
push
dec
les
andps
push
mov
adc
or
sbb
mov
push
scas
loope
mov
repnz
inc
cli
lret
jl
add
or
push
pushf
arpl
sbb
mov
add
pop
add
cmp
xor
shll
fwait
fs
sti
insb
sahf
mov
xor
xchg
mov
insl
xlat
jle
loope
nop
or
push
mov
pop
ret
jns
mov
pop
add
ret
push
in
ret
aas
push
jge
push
pop
and
pusha
xor
push
and
push
ret
add
lock
xchg
push
aad
pop
or
push
negl
aad
mov
fs
xor
cs
dec
pop
pushf
push
pop
subb
sub
imull
xor
xor
xchg
sbb
pop
or
add
popa
scas
fs
icebp
popf
jo
out
comiss
fdivrs
insl
out
mov
sbb
push
mov
mov
sahf
adc
sahf
clc
jmp
or
and
and
sahf
xor
jae
xor
adc
test
inc
divl
les
xor
faddl
test
insb
cmpsb
fisttps
add
mov
xor
sbb
out
pushf
mov
cmp
sbb
outsl
jl
jmp
xchg
push
pop
out
out
sbb
push
stos
shld
cwtl
js
insb
in
xor
add
xor
mov
mov
cmc
jne
push
xor
fsubrp
insl
ljmp
cmp
add
andb
ret
adc
pop
xchg
push
cli
ret
mov
jbe
into
mov
jb
or
movsl
xchg
enter
push
pop
repz
push
in
pop
jp
out
xor
ja
adc
cltd
jp
dec
jae
mov
adc
out
jp
popf
cmovae
sbb
iret
push
or
in
sbb
lcall
or
add
adc
xchg
mov
sar
gs
adc
sbb
pop
loopne
sbb
icebp
sahf
sti
or
push
pushf
mov
ficoms
adc
push
filds
jne
sti
cmp
cmp
and
sub
sti
sub
das
arpl
fimuls
jg
gs
mov
jnp
aad
insb
insl
pop
sbb
push
cmp
jg
lock
jo
jne
es
lahf
aas
cwtl
mov
stos
iret
mov
dec
xor
jmp
dec
icebp
cltd
ljmp
xor
or
xor
int3
mov
cmc
push
popa
dec
push
mov
stos
cmp
mov
iret
xchg
jmp
gs
ds
push
mov
or
jge
or
scas
mov
sti
lods
adc
dec
mov
push
in
and
xchg
lds
sbb
sti
adc
js
shrb
push
call
xor
int3
jno
sbb
or
popf
xchg
es
fcoms
mov
ss
aam
lds
bound
inc
push
imul
fdivl
je
push
stos
cmpsw
movsl
inc
mov
aam
mov
pushf
inc
xor
jno
mov
cmp
loop
lret
nop
cmpsb
call
fisttpll
or
xor
int3
mov
xchg
inc
test
stc
test
mov
push
stos
inc
fs
inc
cmp
pop
push
and
cld
mov
push
std
fwait
stos
out
jae
repnz
xchg
cmc
sbb
repnz
imul
inc
cmpsl
add
adc
in
push
mov
jno
mov
scas
jnp
subl
dec
mov
scas
sub
mov
mov
mov
cmp
sbb
dec
fwait
pushf
pop
hlt
dec
out
es
sti
push
ret
or
and
lcall
outsb
lret
mov
and
push
xlat
fwait
repz
mov
pop
mov
mov
mov
cmpsl
sarl
mov
sbb
rcll
dec
jmp
insb
mov
push
sub
and
sti
mov
dec
lea
inc
jae
fcoml
mov
dec
sub
and
cmp
js
in
lcall
add
movb
shr
lea
ja
adc
dec
sbb
inc
addr16
rclb
sarb
mov
cmc
dec
sbb
shll
idiv
add
lock
cli
clc
out
addr16
cmp
addb
repnz
rcl
js
stos
iret
jp
mov
sbb
jo
lret
aaa
fdivrs
push
call
popa
punpcklwd
out
sahf
xor
and
push
hlt
adc
ds
jnp
pop
sub
lret
andl
mov
or
or
lahf
outsb
sub
mov
pop
dec
out
push
jmp
pushf
aad
lahf
sti
lods
ss
inc
repz
fs
cmpsb
sti
cmp
lods
add
jb
jns
leave
xchg
call
test
or
pop
xlat
pop
arpl
and
es
sbb
jbe
xchg
jp
fisttpl
gs
jp
xlat
cmp
jge
bnd
stos
leave
xlat
fsub
jecxz
and
xor
subl
movsb
push
xchg
add
lahf
add
mov
je
cmp
stos
and
cmc
xor
shll
mov
jmp
ret
mov
popa
and
pop
mov
fadds
adc
lret
insl
in
mov
hlt
cmp
xchg
popl
cs
mov
push
lods
push
lret
fstpt
roll
mov
js
jle
mov
jl
mov
mov
cwtl
clc
mov
jecxz
pop
push
sbb
fistpll
pusha
repnz
mov
andl
leave
jge
into
push
movsl
sub
add
imul
movsl
pop
stos
sbb
es
cwtl
scas
insl
cs
sbb
push
or
push
movsl
cmc
pop
hlt
in
inc
sbb
aad
sub
mov
jnp
add
daa
outsb
mov
orl
inc
rclb
and
inc
jb
add
pop
push
add
pop
cmpsb
xchg
imul
std
mov
outsl
sbb
and
shll
push
or
xchg
lahf
bnd
enter
lea
sti
cld
out
sub
push
push
and
in
outsb
aaa
dec
adc
add
pop
sarb
sbb
mov
bnd
lahf
xor
mov
jg
mov
mov
cmp
repz
xor
jmp
scas
and
pusha
daa
mov
shr
aad
flds
sbb
addl
popa
or
mov
jg
aam
cmp
in
adc
cs
mov
aaa
popf
cli
mov
mov
insl
push
jae
add
call
pushf
and
fwait
mov
add
mov
hlt
dec
jecxz
lods
and
push
pop
lds
icebp
xchg
loope
push
inc
aad
jp
cld
paddw
mov
mov
mov
xchg
leave
into
outsb
sub
aam
popf
mov
lock
pop
mov
pop
insb
daa
sub
xchg
ror
sub
adc
pop
imul
jbe
pushf
adc
xchg
fxch
pop
push
insl
cltd
bound
setnp
mov
lret
mov
pop
sti
rolb
xorl
xor
movl
aad
cmp
inc
or
inc
and
mov
push
mov
or
in
int
fsubr
enter
rolb
sub
or
dec
loopne
inc
cli
fimuls
xchg
add
dec
sti
mov
test
mov
push
xor
sbb
jg
insl
xor
lods
pop
fistps
lods
outsb
or
fistps
dec
jle
mov
nop
fisubs
mov
dec
pop
lcall
dec
xchg
orb
outsl
add
data16
out
and
sub
dec
and
mov
or
imul
subb
lahf
lcall
inc
lahf
or
cmp
push
outsb
ds
stc
mov
out
div
and
jp
add
inc
scas
xchg
rcll
aaa
dec
jg
fcomi
and
stos
xchg
jle
pop
push
pop
sbb
lcall
cmp
sarb
mov
or
fnstcw
or
lods
mov
jp
dec
adc
ret
test
or
cmpsl
les
pop
lock
movsl
pop
vshufps
out
cmpsl
sub
and
or
insl
imul
mov
repz
and
cmp
xchg
mov
pop
cmc
dec
or
jae
and
adc
pop
mov
mov
sarb
ret
push
das
dec
adc
cs
das
mulb
pop
inc
pop
hlt
daa
push
addr16
dec
aaa
mov
fs
pop
mov
pop
pop
stos
jne
cmp
out
ljmp
add
pusha
leave
orb
inc
out
and
xchg
add
in
shrl
jo
subb
and
cwtl
cli
divl
jl
sbb
stos
mov
mov
ret
out
int3
and
mov
and
pop
pusha
cs
daa
xlat
mov
or
rcrb
or
cmp
pop
mov
movsb
dec
push
xchg
xchg
mov
fistpll
movsl
mov
dec
jecxz
out
lahf
in
shlb
adc
xchg
xor
in
sub
cmp
aam
and
jmp
push
sarl
popl
test
jecxz
mov
lods
xchg
pop
cmp
lock
xor
pushf
push
inc
mov
jg
and
push
sub
iret
nop
cmc
fmul
pop
add
cmp
ljmp
ja
ljmp
sub
pop
xchg
xchg
ret
leave
ja
sti
mov
int
dec
fsubrs
cmp
or
cmpsl
or
fcmovnbe
mov
sahf
inc
cmpb
dec
ret
sarl
inc
mov
push
scas
shr
test
lret
xor
lret
rcrb
fs
cmp
xchg
cmp
int
jns
cmpsb
jmp
xor
pop
popl
dec
pop
xchg
fdivrl
dec
frstor
jns
dec
sbb
dec
in
xchg
xchg
inc
mov
sarb
jnp
movsb
xor
les
aam
mov
mov
add
clc
mov
rcrb
ss
jl
sbb
fs
daa
sbb
cmp
fstps
ss
inc
ret
xchg
in
mov
lcall
cmpsl
mov
adc
insl
loop
add
lods
cmc
push
and
mov
inc
gs
mov
lret
lods
ret
push
pop
and
subb
mov
mov
fcmovnbe
or
mov
or
out
icebp
lret
mov
fdivs
arpl
cmpl
fcmovu
mov
repz
dec
xchg
inc
cmc
or
fisttpll
lods
inc
ret
jg
adc
sbb
sbb
mov
in
pop
js
cltd
push
jb
mov
fstps
rcrb
xchg
cmp
in
out
mov
mov
dec
repnz
cli
adc
out
or
jp
mov
clc
aad
subb
test
mov
pop
int
mov
push
hlt
mov
sub
rolb
mov
mov
in
push
cld
xor
jge
mov
dec
cltd
jecxz
sbb
sti
cmp
mov
sub
lods
cmc
mov
pop
cmpsl
and
stos
add
out
xor
cmp
sbb
mov
sbb
enter
jge
jmp
mov
stc
sahf
push
sub
xchg
pop
add
or
xlat
dec
jp
push
clc
outsb
push
dec
nop
push
sbb
loop
cltd
jg
ret
inc
pop
pop
pop
addr16
stos
mov
ja
fstpt
out
xor
jne
test
mov
repz
push
inc
outsl
lcall
mov
sub
pop
add
inc
mov
push
nop
mov
mov
inc
mov
xchg
jmp
sub
outsb
push
mov
or
test
sbbb
pusha
sub
test
iret
rorl
stos
jns
popf
xchg
pop
push
dec
xchg
jmp
adc
add
cmp
dec
jae
xor
inc
lahf
adcb
pop
fs
xor
in
lea
cmpsl
subl
mov
sbb
dec
repz
jle
sub
dec
mov
jbe
stos
movsb
cmp
shlb
rcll
call
pop
test
ss
aam
aam
dec
pop
mov
repz
cmp
cltd
mov
arpl
repz
nop
fdiv
cmc
movsb
add
in
add
mov
xchg
jmp
jns
lock
push
dec
push
int3
pop
js
xor
mov
push
flds
out
push
outsl
pop
xchg
fbstp
jnp
cwtl
xchg
gs
movsl
xchg
jnp
mov
subb
rolb
cwtl
jl
pop
dec
jno
ja
pop
mov
cmpsb
fldcw
mov
out
fimull
sub
mov
add
ja
divl
cmpl
cld
addr16
sub
xlat
dec
sub
mov
nop
xchg
sub
roll
jp
movsl
ja
andb
inc
stos
int3
sub
adc
sub
fisubs
mov
adc
es
push
push
sbb
xchg
hlt
mov
into
es
int3
and
and
xchg
sbb
cltd
xor
xor
mov
xchg
into
mov
and
cmp
pop
pop
lea
sbb
lods
pop
pop
add
sbb
push
adc
mov
jae
mov
cmc
fisubrl
push
shlb
sbb
inc
jmp
sub
add
push
xor
cld
dec
push
ljmp
push
and
iret
mov
fcoms
outsb
cmp
jg
out
jns
scas
cltd
mov
rorb
cmp
xlat
cmp
add
lcall
add
jl
int
xor
cli
adc
push
mov
mov
fstps
xchg
call
adc
outsl
or
data16
ja
cmp
rclb
bound
push
int
icebp
add
movsb
jle
jo
scas
pop
fcom
gs
lcall
or
mov
lcall
dec
pusha
pop
push
mov
ja
jp
push
sti
mov
or
mov
movsb
sub
inc
pop
fstpt
mov
les
xchg
sbb
xlat
dec
in
mov
les
stos
gs
dec
push
adc
jne
cmp
ret
cld
pop
pop
and
pop
lds
in
jg
sbb
int3
sub
push
push
push
dec
cmp
movsb
int
pop
mov
clc
and
std
dec
mov
out
daa
pop
xchg
inc
xchg
xchg
jbe
lahf
enter
adc
xchg
jne
and
popf
mov
cmp
jb
mov
bnd
cmp
mov
popf
inc
cmp
repz
sbb
pop
and
sub
jg
mov
in
stos
rcrl
dec
pop
xchg
xchg
inc
into
add
or
add
or
or
cli
imul
jnp
mov
pop
lods
pop
xor
repz
cld
mov
loope
enter
adc
inc
or
mov
out
push
test
mov
xchg
and
pop
cmc
insb
imull
jl
push
push
es
pop
je
ret
bound
add
hlt
call
push
stos
inc
shl
popf
xchg
mov
pop
xlat
jp
jno
test
sbb
sbb
aaa
es
imul
sub
mov
or
std
add
push
cltd
movsl
or
es
cmp
mov
ret
movsl
mov
ss
ja
fbstp
mov
or
fsubrp
ret
or
xlat
cwtl
pop
add
sbb
jg
cs
test
scas
push
and
pop
mov
negb
pop
mov
ret
and
out
rcr
sbb
mov
out
push
mov
loope
aam
mov
jle
jae
jle
cltd
cmp
sahf
les
sbb
insl
adc
pop
mov
icebp
lea
bound
into
cmp
inc
xor
dec
xchg
adc
xlat
aas
dec
pop
mov
out
int
jbe
add
push
call
dec
mov
and
std
pop
mov
add
mov
std
jno
repz
push
sbb
mov
daa
syscall
int
mov
lret
es
repnz
in
push
test
popf
ljmp
sbb
or
clc
adc
in
lea
cmpsl
cmpsl
jb
add
xchg
rclb
push
insb
jne
leave
cwtl
sub
leave
push
and
mov
pop
arpl
mov
nop
xchg
sbb
or
inc
sbb
cmp
push
inc
sbb
lahf
repz
stos
loopne
add
test
cmp
mov
push
mov
sub
or
cmc
sbb
cmp
push
push
ret
cwtl
mov
in
enter
repnz
xchg
nop
mov
mov
and
adc
pop
and
add
imul
movsl
sahf
add
pushf
dec
xlat
push
sub
in
and
test
cmp
mov
xchg
aaa
pop
sbb
xor
pop
or
and
xor
mov
enter
xchg
cmpsb
mov
ror
dec
adc
out
or
inc
cli
in
xchg
aas
lods
and
ret
cmp
pop
push
xor
stc
leave
dec
push
sbb
stos
mov
stc
inc
xchg
dec
shll
mov
xchg
outsb
pop
in
sbb
popf
jne
sbb
dec
mov
adc
jle
inc
sub
mov
mov
adc
fisttps
sub
pop
sub
imul
mov
mov
mov
adc
cld
into
in
pop
or
bound
cmp
mov
out
dec
or
int
inc
out
sub
mov
inc
dec
sbb
pop
out
test
sub
add
mov
inc
pop
pop
mov
add
aam
jge
push
xchg
push
inc
enter
fimull
and
add
stos
ljmp
pop
icebp
repnz
cmp
sbb
mov
orl
or
sub
out
mov
add
lcall
daa
sbb
ret
inc
mov
sub
jge
fcoml
pop
cld
scas
aam
mov
scas
add
sti
jbe
loope
push
pop
in
xor
lcall
cmp
pushf
rclb
in
ja
in
fadd
inc
mov
fidivs
je
adc
pop
daa
jno
mov
xor
pop
sbb
sub
sub
iret
aaa
pushl
popa
pushf
aad
add
dec
jae
push
push
ss
outsb
mov
dec
xchg
push
outsl
dec
in
sbb
sbb
inc
ret
mov
and
mov
aas
leave
mov
cmpsb
add
or
notb
das
movsb
mov
leave
cwtl
mov
or
rorb
in
out
jecxz
je
xchg
xchg
les
cmp
cmp
sbb
into
cmp
lret
repnz
pop
dec
sub
lahf
sbb
pop
sbb
xor
inc
cmp
mov
popf
push
dec
enter
adc
inc
mov
jge
ret
mov
cmp
sarb
repnz
cmp
sub
dec
pop
fadd
test
pop
adc
fistps
test
aas
adc
ficoml
int
add
movups
in
out
or
sbb
jo
fwait
push
cmp
mov
test
and
xor
sub
xchg
add
mov
les
addr16
add
xor
movsb
pop
sbb
loopne
test
dec
test
xor
mov
call
test
sbb
xlat
loopne
xor
pop
in
cmp
int
lods
rolb
xor
notb
xor
push
mov
xchg
mov
jns
adc
and
push
sub
sbb
test
je
leave
insl
dec
add
int
sub
pop
mov
add
sti
xor
fistl
inc
inc
cmp
cmp
mov
sub
push
sbb
add
ret
xchg
pop
lods
sbb
jne
cmp
sbb
push
pop
dec
xchg
lock
out
ss
or
adc
add
cltd
mov
shll
xchg
sbb
stos
mov
jp
sub
lods
repz
fsubs
push
adc
inc
cmp
insl
fld
jg
lahf
pop
cmp
scas
out
sbb
sub
inc
sbb
dec
jbe
or
in
imul
insb
insl
data16
movsb
in
fbld
xchg
adc
in
imul
mov
outsb
lods
mov
dec
pusha
int3
jecxz
jnp
mov
in
lcall
xchg
cmp
out
jmp
ja
hlt
out
inc
mov
jp
xor
push
fisubrl
fdivp
push
gs
js
sbbb
int3
mov
scas
xchg
inc
aas
sub
aaa
out
enter
xor
mov
jne
dec
lahf
call
fsubr
in
pop
add
test
or
je
je
or
iret
cld
and
es
pop
imul
pop
dec
or
shlb
cmp
icebp
addb
mov
hlt
pop
addl
loope
push
fs
pop
fs
std
or
adcl
adc
shlb
rcl
push
jmp
dec
sahf
jg
push
inc
popa
pop
pop
inc
out
add
sti
fldt
addr16
mov
push
lahf
fisttpl
test
or
addb
jb
pop
mov
ss
push
outsl
cmp
xchg
leave
int3
jns
dec
ficoml
xchg
clc
lds
addr16
jp
stc
stc
inc
jbe
mov
sbb
mov
scas
pushf
iret
incb
ret
mov
call
int
bound
or
loop
icebp
fldcw
xchg
xchg
cmp
in
xor
test
les
sub
or
sub
std
mov
jmp
inc
lods
xor
or
sbbb
jecxz
arpl
lods
push
fdivs
punpckhwd
iret
cmc
push
fs
pusha
cmp
mov
shrb
or
jb
mov
int3
repz
stos
out
add
pusha
aaa
adc
pop
sbb
fistpl
imul
js
push
jnp
add
lea
xor
sti
out
ret
mov
test
or
in
call
int3
xlat
inc
ret
and
dec
subl
jge
mov
cld
lret
xor
push
sbb
lret
xor
movsb
push
aaa
icebp
in
xor
andl
rol
ljmpw
fsubrl
fbld
inc
jne
and
mov
lea
stc
push
in
push
mov
jno
mov
adc
xchg
std
jne
cmc
stos
add
pop
bound
adc
add
mov
lret
xor
pop
inc
or
arpl
adc
imul
popa
mov
mov
push
or
mov
push
leave
je
pusha
and
fisubs
sbbl
jge
adc
cmpsb
add
xorl
mov
fdivs
test
pop
mov
dec
daa
sbb
add
sub
ficomps
dec
jbe
test
add
sbb
cmp
lods
and
imul
xchg
dec
lds
cmp
lret
mov
pop
and
adc
cli
fwait
js
jb
sbb
mov
insl
and
gs
mov
enter
mov
lcall
push
aas
icebp
mov
cmp
xchg
or
stos
jl
clc
xchg
mov
mov
or
mov
div
pop
mov
int
and
aad
mov
test
mov
call
clc
ffree
mov
xor
push
xchg
mov
in
or
adc
xchg
shr
fdivl
bound
xor
int3
jb,pn
arpl
shl
mov
sar
cs
aaa
xor
push
adc
sbb
lcall
and
or
pusha
imul
mul
push
xchg
push
add
sub
push
sub
push
ret
jae
mov
sahf
rorl
xor
push
test
pop
jge
jl
sub
sub
mov
ret
hlt
xor
arpl
cmc
xor
mov
mov
sbbb
and
push
clc
out
movsb
inc
and
ja
adc
jae
mov
jecxz
out
leave
shrb
insb
and
pop
mov
lcall
mov
mov
and
jmp
es
and
cs
pop
or
movsl
mov
movsb
push
mov
jmp
repnz
and
data16
scas
xor
sbb
ficompl
dec
mov
mov
adc
sub
scas
mov
test
andb
ja
lock
fs
lret
cmpsb
xchg
push
call
lds
shl
push
sti
push
or
pop
xor
push
int3
into
dec
ret
jae
sbb
or
mov
jno
test
xor
int
push
or
mov
or
pop
ret
push
outsb
or
cmp
fs
mov
xchg
arpl
push
scas
cmp
scas
in
xor
jo
test
adcl
hlt
movsl
lret
add
andl
inc
int3
cmp
jge
mov
lea
int
xchg
or
leave
pop
jge
pop
cltd
rorb
fstpt
jbe
outsb
mov
pop
test
inc
cli
pop
and
jge
add
push
scas
cmp
mov
pop
jnp
jmp
jnp
xor
inc
int3
in
xorb
sbb
out
pop
insl
daa
xchg
jle
push
inc
clc
shll
push
dec
in
xor
jl
ss
push
push
pop
and
test
xchg
arpl
test
jno
lret
mov
mov
push
adcl
les
ja
ror
push
mov
mov
mov
inc
push
xchg
cli
aam
xchg
mov
sahf
aam
jbe
outsl
inc
enter
lods
add
dec
xor
test
sub
aad
mov
xchg
pop
add
xchg
rcrb
roll
ds
leave
lret
int3
xchg
push
ljmp
fstps
jle
or
add
sbb
cmpsl
leave
push
addr16
sub
jno
mov
mov
imul
negl
ljmp
sbb
inc
xor
sarb
notb
scas
push
lahf
cmpsl
js
shrb
mov
loopne
outsb
cmpsl
xchg
jp
lock
iret
outsl
fcomip
xlat
insl
enter
ljmp
xor
jg
adc
gs
push
mov
or
ret
imul
in
push
repz
clc
and
leave
daa
pop
dec
es
cmp
ljmp
es
cmp
or
cmpsb
in
lret
sbb
mov
in
and
jae
aad
mov
les
jle
call
das
mov
or
jg
out
xchg
xchg
inc
gs
push
daa
ds
mov
inc
xchg
mov
mov
or
sbb
mov
das
ja
out
pop
out
cmc
dec
mov
mull
lods
dec
js
mov
rcr
push
lcall
and
mov
into
push
jo
sub
mov
jecxz
push
cmpsl
push
nop
out
fsubs
or
stos
rcr
push
push
mov
pop
es
jge
int3
outsb
pop
mov
cmp
cltd
nop
sbb
mov
xor
xchg
repnz
lret
bound
cs
cmpsl
inc
cli
idiv
xchg
add
push
loope
aam
xchg
push
mov
sbb
inc
lds
cmp
adc
jecxz
les
cld
data16
xor
mov
xor
add
dec
aad
sub
stc
dec
add
sub
xchg
jo
mov
stc
int
pop
add
xor
or
lods
mov
movsb
or
mov
int
lea
pop
and
cmp
sti
out
mov
push
dec
ds
mov
mov
jo
adc
insb
test
repz
jecxz
ret
lods
stc
dec
imul
or
es
hlt
cmc
test
push
lods
movsb
sub
popa
fsubs
sub
mov
xor
dec
or
ja
xchg
cmpsb
xor
fsubp
fwait
aad
ss
adc
xchg
loope
push
add
lods
ja
cmc
cli
std
dec
pop
mov
adc
pop
das
jmp
ret
jo
cld
loope
out
sbb
xchg
pop
dec
mov
dec
movsb
push
add
and
dec
js
imul
repz
xor
rcrl
xor
lea
mov
mov
cmp
jbe
sti
or
jmp
pushf
test
sub
lcall
cmpsb
ret
pop
mov
inc
aam
mov
push
mov
push
mov
aas
mov
cmp
lret
or
subl
mov
and
out
loop
loop
lods
pop
add
push
lock
pop
ret
pushfw
loop
out
test
and
je
mov
add
inc
xchg
pop
sbb
pop
xor
jl
imul
mov
icebp
lods
sub
outsl
push
mov
mov
and
pop
fldt
dec
push
hlt
jge
enter
adc
sbb
dec
sbb
gs
and
jmp
cmp
adc
adc
stos
sti
pop
lret
dec
es
mov
ljmp
jb
lcall
push
push
or
push
dec
fimull
push
dec
js
add
xchg
lahf
inc
mov
cmpsb
push
pop
mov
divl
mov
mov
dec
sbbb
add
xchg
div
mov
sub
xchg
bound
mov
aaa
stos
outsl
sbb
dec
cwtl
push
incl
lods
and
pop
pop
pusha
adc
rclb
sbbb
daa
es
dec
add
mov
pop
push
xor
mov
add
mov
rorl
or
sbb
fs
lods
push
mov
clc
loopne
and
hlt
add
xchg
cld
out
and
cmpsl
shlb
jmp
hlt
ret
cwtl
mov
mov
lcall
push
int3
rclb
outsb
pusha
mov
mov
ss
jae
sbb
inc
insl
in
and
insb
sbb
add
push
pop
hlt
inc
popf
mov
enter
mov
dec
xor
imul
popf
ds
or
inc
push
mul
push
adc
xor
insb
mov
lds
lea
enter
dec
push
dec
cs
fldenv
mov
cwtl
mov
mov
in
adc
sbb
jmp
in
lea
mov
add
inc
xor
jnp
sub
int
or
fadds
inc
or
mov
in
dec
incb
iret
inc
mov
mov
decb
pop
dec
mov
cmc
jae
xor
frstor
inc
divl
add
imul
in
sbb
jo
mov
sbb
xor
loope
das
and
fsubrp
xor
pop
pushf
scas
xchg
insb
push
scas
scas
inc
dec
movsl
mov
sub
test
jae
fs
jno
xchg
or
pop
pop
rorl
jl
stos
xchg
push
test
inc
imul
ret
sub
inc
sub
mov
cmp
mov
jle
sahf
stos
jne
iret
ret
jbe
pushf
test
mov
les
mov
dec
mov
das
sub
addb
mov
mov
test
ds
arpl
mov
cld
cld
test
jns
insl
pusha
cmpsb
xchg
lcall
mov
notl
subb
xor
cmc
xor
mov
movsb
bound
inc
icebp
lds
sbb
or
stc
lcall
dec
mov
clc
insl
insl
push
pop
lock
push
out
fs
xor
dec
shrb
outsb
cmp
or
push
lods
xlat
fbld
jge
mov
mov
cmp
or
jns
pop
test
or
arpl
pop
mov
int3
push
jmp
cmpsl
stos
subb
fldenv
lock
es
mov
xlat
repz
in
lods
adc
xchg
icebp
add
xor
pop
sti
mov
call
dec
mov
lock
ljmp
lahf
scas
lret
jb
ja
mov
and
pop
cmp
fwait
mov
push
imull
orl
sbb
aas
dec
xor
ficoml
lret
xchg
inc
enter
push
jne
stos
and
into
inc
sbb
test
dec
xor
aaa
std
jp
fcmovnb
add
ljmp
push
lock
cmp
xchg
ljmp
and
xor
mov
push
mov
iret
and
cltd
int3
mov
testb
das
aaa
pushf
pop
xchg
mov
mov
stos
adc
hlt
or
pusha
nop
notb
int3
into
and
dec
test
and
sub
and
arpl
subb
sti
iret
mov
xchg
fsubrs
adc
sub
imul
push
movsb
mov
or
sub
pop
int
fcmovnu
and
xchg
hlt
fimuls
ljmp
shlb
push
movsl
in
mov
dec
mov
jg
lds
stos
jo
cmp
cmp
and
xchg
sbb
mov
movsl
shrl
sbb
into
cs
loope
std
cmpxchg
sub
add
sahf
xchg
cs
push
mov
mov
or
rcl
or
daa
shlb
mov
pushf
pusha
mov
ds
scas
and
jae
push
sbb
push
mov
in
mov
lock
mov
mov
daa
test
mov
nop
cs
cltd
inc
jbe
les
mov
xchg
pop
pop
mov
cmp
std
xchg
rclb
mov
xor
and
pop
or
loop
pop
xor
xorb
xor
mov
cmp
cmp
ret
mov
ret
js
mov
push
push
cld
sbb
enter
jnp
clc
sbb
pop
xchg
cmpsl
xor
in
aas
add
repz
mov
xor
ss
movl
lock
mov
sbb
jmp
inc
enter
sbb
inc
ljmp
outsb
or
into
jbe
xchg
frstor
jp
cmp
fidivrl
push
aad
nop
jg
jb
xchg
shl
mov
cltd
imul
lret
push
lock
test
inc
lock
mov
add
rorb
and
fldt
mov
lahf
and
loop
mov
das
dec
xor
dec
jnp
adc
sub
in
mov
in
push
les
xor
aas
push
sub
pop
mov
xor
lods
lds
scas
ljmp
mov
cld
fdivrl
pop
rcrl
xchg
jp
mov
jno
adc
jbe
pop
ret
call
neg
insb
xor
popf
dec
and
xor
cltd
dec
cmp
dec
ja
mov
cld
loopne
fists
test
pop
js
or
mov
add
je
cmc
les
adc
adc
xlat
sarb
imul
mov
mov
pop
out
or
ucomiss
fldenv
push
xor
mov
cmp
and
cmp
sub
in
mov
xor
push
dec
add
mov
dec
xlat
iret
pop
pushf
dec
jne
mov
in
jbe
icebp
testb
lcall
ficomps
xchg
mov
mov
popf
imul
daa
sti
sbb
xor
rcrb
push
and
lock
and
std
sahf
mov
cmp
leave
jge
les
lods
aaa
mov
jne
orb
mov
nop
icebp
scas
daa
pop
and
inc
xchg
test
cs
fimuls
xor
lret
cmp
rcr
out
pusha
and
jmp
ja
ret
call
imul
add
xchg
cs
xor
fs
out
enter
out
clc
inc
adc
xchg
enter
xor
lock
and
scas
stos
mov
movsb
gs
dec
pushf
aaa
ljmp
inc
pop
into
xor
mov
add
mov
mov
xchg
loop
icebp
sub
jo
sub
jg
add
leave
pop
shl
mov
mov
jo
adc
or
scas
push
or
pop
xor
and
sub
mov
aaa
and
push
cmp
out
push
leave
jno
andl
cmp
mov
push
push
mov
sbb
nop
push
movb
icebp
and
adc
stos
fstpl
push
dec
xor
mov
movsl
adc
incb
mov
shrl
mov
sbb
cmp
enter
dec
imul
add
repnz
add
sbb
cmpsl
sub
jmp
lahf
aam
mov
call
in
or
lea
cs
mov
jns
push
inc
addr16
repz
sbb
leave
xchg
pop
jo
lret
lock
push
pop
add
std
jns
jle
int3
xor
lret
mov
xor
sub
sbb
mov
mov
scas
push
out
inc
movsb
adc
stos
sbb
mov
dec
daa
popa
lahf
mov
jecxz
or
je
xor
sub
subb
or
adc
push
sub
aad
popa
xor
xor
mov
icebp
dec
pop
cmpb
loopne
push
cmp
xlat
mov
push
fstp
mov
xchg
jb
jnp
and
jae
and
in
rol
pop
mov
lods
ret
fidivl
shrb
push
lods
and
xchg
js
fwait
cmpb
jp
mov
jg
and
mov
xor
push
scas
jg
mov
test
and
mov
in
add
bnd
cmp
sbb
imul
mov
sbb
pop
insb
das
push
nop
push
sbb
arpl
roll
lret
jne
inc
and
adc
das
mov
mov
js
sub
mov
cmp
std
push
dec
xchg
fldenv
iret
sbb
push
aas
frstor
in
sbb
test
ret
in
dec
and
lea
jno
aad
mov
push
jnp
xchg
push
scas
dec
sarl
or
and
dec
adc
pop
jns
sbb
mov
inc
and
pop
pop
popf
cmp
mov
mov
or
and
scas
xor
push
xchg
push
xchg
sub
fistpll
repnz
inc
in
pushf
inc
insl
dec
mov
gs
mov
les
fcmove
int3
sub
iret
or
xor
ss
leave
and
jns
insl
mov
ja
shrl
inc
sbb
imul
mov
aas
push
sti
cli
aad
scas
in
gs
lods
jmp
push
and
or
int
daa
dec
jg
inc
idivb
stos
out
insl
out
scas
xchg
aam
rolb
mov
lock
mov
xchg
xchg
les
mov
outsl
pavgw
std
mov
in
cmc
cmp
push
cmpsl
test
mov
rcll
or
jno
scas
cltd
and
pop
sbb
add
mov
push
in
iret
aam
rorb
in
negl
bound
xor
std
hlt
clc
test
mov
out
lods
cld
nop
out
xchg
add
cld
test
mov
int
je
mov
xor
jbe
pushl
push
cld
mov
push
pop
inc
push
mov
and
dec
js
cld
push
into
pop
push
mov
jle
les
push
jp
jne
lret
addr16
jno
sbb
out
inc
sub
int3
or
pop
mov
lock
sub
scas
xchg
mov
fidivl
adc
jle
cmpsl
aam
jp
mov
test
mov
sub
cmp
imul
jecxz
inc
fs
shrb
cld
loopne
or
sti
pop
in
aas
loop
or
mov
in
jnp
insb
dec
imul
outsb
or
fcoms
ljmp
shrb
mov
jl
clc
cmp
pop
push
stos
lahf
xchg
loope
mov
aaa
jno
jno
addb
mov
jnp
add
jge
adc
jmp
jl
jl
cli
mov
shlb
inc
inc
rclb
sbb
fstps
push
sbb
and
add
xor
adc
popa
mov
aaa
mov
jns
jl
mov
push
mov
xlat
mov
outsl
ret
sbb
sarl
imul
sub
pop
push
xchg
or
mov
out
jne
sarl
pop
mov
and
shr
sub
sub
adc
pop
jmp
repnz
jge
pop
arpl
cltd
outsl
lret
jl
popa
jae
sti
mov
clc
mov
and
mov
mov
sub
sub
pop
cmc
mov
jae
mov
scas
mov
lea
stos
ficoms
je
out
adc
inc
jo
roll
sub
mov
int
and
cli
push
xor
push
sub
push
dec
lock
mov
addr16
js
and
loope
adc
sahf
out
test
cmpsb
adc
inc
sub
mov
clc
pop
ds
iret
ja
test
mov
ret
or
xchg
cmc
je
inc
jge
xchg
or
imul
mov
in
cltd
test
lock
adc
jae
lds
loope
out
pop
mov
sarb
dec
sbb
pop
orl
xor
and
jo
mov
clc
sub
xchg
sub
mov
jno
ds
sub
fsubs
ret
xchg
outsl
dec
in
adc
sarl
add
fisttpll
inc
fs
push
mov
jecxz
sbb
mov
pop
mov
mov
mov
sub
mov
jbe
loop
xchg
clc
sub
movsb
lods
mov
sarl
dec
xchg
or
jp
xchg
jecxz
ror
push
insb
std
test
pop
call
adc
aad
mov
mov
insl
mov
sub
dec
sub
xlat
inc
lret
dec
lret
insb
pushf
cmp
sbb
dec
and
push
cmp
cmpsb
es
test
sbb
shlb
push
adc
flds
mov
lock
subps
aam
fs
mov
imul
incb
ficoml
cs
lock
pushf
push
add
or
xchg
lods
xchg
sbb
mov
push
test
insl
lock
imul
scas
int3
add
pop
mov
inc
dec
inc
push
sub
data16
mov
lock
in
lods
negl
xor
outsl
pushf
add
xchg
sbb
or
clc
lods
aam
jo
stos
mov
or
fisttps
xor
and
jp
pop
or
sbb
je
insl
inc
xor
call
test
or
cli
mov
test
popf
pop
or
sahf
cmp
ret
jno
sub
test
inc
in
push
adc
cmp
or
mov
pusha
pop
push
repnz
or
notl
lods
jp
inc
dec
ljmp
inc
sahf
repz
or
pop
test
jp
les
jb
cmpsl
mov
xchg
addr16
cmp
pxor
xchg
jl
push
popa
rcrb
nop
gs
mov
cwtl
dec
push
daa
scas
sub
aam
push
sub
xchg
popf
pushf
jae
mov
push
adc
sub
insl
jo
mov
dec
or
frstor
outsl
es
sbb
incb
arpl
rorb
in
or
xor
xchg
out
mov
pop
subl
shrl
dec
ja
push
add
dec
xorl
sbb
pop
xchg
or
cld
or
incl
loopne
cmp
and
add
in
inc
in
test
popf
fs
mov
testb
mov
outsl
jno
mov
xor
sbb
cmc
idivb
das
int
clc
add
push
dec
out
mov
mov
inc
loope
orb
dec
cmpsb
aam
imul
mov
xchg
inc
inc
shll
dec
mov
add
fs
jmp
stos
cltd
jecxz
sub
pop
mov
pop
aas
out
int
aaa
cmpl
mov
and
add
xor
call
dec
mov
xor
mov
decl
and
das
out
adc
pop
mov
rcrb
mov
ljmp
lahf
pop
pop
push
and
adc
lea
push
dec
dec
push
jae
mov
pop
in
add
rcr
cmpsl
ja
adc
lcall
shrd
icebp
pusha
inc
inc
pop
hlt
jae
inc
push
push
push
mov
shr
inc
in
sbb
jg
inc
fdivs
fs
jmp
ljmp
fdivp
push
sbb
mov
xchg
repz
bound
ficomps
fisubrl
in
test
cmpsl
stc
stos
sbb
test
fbld
push
negb
mov
mov
popf
rcrl
fisubrl
mov
data16
mov
mov
adc
in
sbb
push
cmp
jmp
sub
lock
pop
inc
rorb
inc
fsubrs
cmp
jecxz
das
push
das
testb
out
cli
call
add
aas
adc
xchg
loopne
and
push
loop
and
fimull
je
xor
mov
nop
popf
jmp
inc
div
into
sahf
mov
xor
inc
andb
fstpt
in
mov
ja
xchg
mov
outsb
pushf
icebp
nop
rcll
ljmp
movsl
add
cltd
and
jmp
mov
mov
cmpsb
xchg
ret
fimuls
loopne
sub
sub
daa
dec
clc
pop
je
mov
add
add
adc
hlt
not
or
sub
adc
cmpsl
test
popf
jge
xchg
inc
dec
mov
mov
cmp
in
lcall
cmp
in
bswap
pop
adc
mov
fistpl
in
adc
jmp
sub
sti
inc
ret
cmp
imul
add
popf
and
pop
sarb
adc
cmp
clc
cmp
scas
mov
and
pop
dec
and
hlt
xchg
jg
sub
lret
jnp
jb
out
mov
jbe
push
std
jo
test
push
fmull
stos
mov
pushf
push
scas
and
mov
jecxz
icebp
sahf
jmp
nop
jne
stc
mov
ljmp
aas
push
mov
cmp
mov
pop
xchg
imul
mov
sub
int
hlt
jmp
ret
add
shrb
insl
arpl
push
xchg
ljmp
dec
mov
dec
or
pop
xor
fdivr
clc
lcall
mov
imul
outsb
flds
sub
ja
mov
cwtl
mov
cmpsb
jp
scas
clc
add
and
mov
cmp
add
lods
mov
sarb
lcall
xor
cld
dec
rorb
test
roll
sbb
je
cs
fsubrs
es
cltd
mov
enter
lcall
cwtl
push
mov
xor
and
test
sub
or
or
fisubrl
push
xlat
mov
and
pop
push
daa
mov
mov
pop
cmp
mov
xchg
lock
add
jne
ffreep
lret
insb
mov
xor
inc
adc
sbb
sbb
or
cs
pop
or
movsl
jne
js
pop
or
loopne
dec
repz
imul
es
das
and
inc
and
cmp
roll
sub
rorl
add
ud0
notb
xor
push
cmpsl
filds
mov
inc
imul
fisubrs
enter
aad
repnz
pop
add
xchg
mov
sbb
jns
out
orb
and
push
iretw
xor
addr16
rcrl
xchg
test
xchg
pop
popl
sub
mov
and
pop
dec
arpl
pop
push
or
jp
cmp
std
sub
fists
push
jbe
ror
adc
pop
mov
pusha
fucomi
cltd
sahf
addr16
mov
jp
xor
ljmp
pop
mov
pop
or
mov
adc
add
pop
jle
sub
in
cmp
or
mov
cmp
or
mov
xchg
add
int3
jp
or
ljmp
repz
sub
mov
cmp
jp
call
out
in
add
mov
inc
fidivl
dec
mov
std
shrl
fimuls
dec
push
rorb
in
mov
cmp
mov
mov
sub
dec
sbbb
jmp
cmc
dec
outsl
push
sub
lcall
inc
pusha
inc
vcvttsd2si
or
adc
int3
inc
leave
in
cld
xor
dec
sbb
add
mov
dec
sti
push
repnz
mov
pop
mov
pushf
mov
into
movsb
adc
cld
shl
inc
int
inc
push
dec
sbb
inc
jne
fst
mov
std
push
movsl
out
mov
jmp
in
pop
jne
pushl
lret
js
popa
add
in
jnp
jo
mov
cmp
sahf
lret
imul
test
aam
dec
lcall
ds
xchg
mov
cmp
or
das
sahf
insb
cli
and
je
enter
popf
fwait
addr16
sub
cwtl
in
push
into
lods
mov
cmpsl
mov
lods
jne
add
jp
push
bts
or
adcl
mov
rolb
mov
inc
cs
fisubrl
mov
xchg
mov
mov
jle
lret
pop
mov
xchg
adc
aad
xchg
movsl
movsl
lods
push
inc
shl
mov
xor
mov
lcall
jns
or
mov
push
xorb
lahf
pop
pop
addr16
in
xor
cwtl
mov
outsl
sbb
add
data16
jo
stos
xchg
jl
xchg
cld
mov
cmp
push
je
jnp
loopne
fs
fwait
mov
daa
lds
mov
cli
lret
sub
inc
enter
add
sahf
lret
push
pop
sahf
adc
in
movsl
fisubrs
add
lea
cmp
adcb
lds
test
lods
push
out
lahf
push
cmp
or
in
out
and
mov
dec
push
push
jae
push
xchg
adc
cmp
sarb
loopne
adc
dec
pop
sub
stc
movsl
push
pop
mov
mov
dec
push
add
push
loopne
dec
ds
pop
test
rolb
lods
jl
and
js
xlat
push
push
and
add
and
adc
sub
arpl
sub
xchg
xchg
scas
lret
iret
loop
in
sub
fbstp
xor
mov
xor
flds
inc
jl
add
push
fs
movsb
lret
mov
arpl
mov
mov
pop
push
aad
sbb
or
sub
mov
jns
xchg
mov
in
fisubl
fistl
xor
jmp
fisubrl
aad
xchg
iret
jmp
clc
or
xor
sti
sbb
negl
dec
shll
jecxz
push
aas
mov
leave
stc
nop
movsl
shlb
js
data16
loopne
ljmp
and
and
cmpsb
fcmovnb
out
repnz
aas
out
outsb
cs
pop
add
jbe
mov
pop
stc
mov
jb
inc
arpl
dec
xlat
sbb
push
jecxz
and
es
ss
sti
mov
sub
dec
fcompl
lahf
jb
repz
fimuls
mov
or
jb
in
xchg
push
std
mov
or
out
cmpsb
jmp
add
or
dec
mov
lds
sbb
pop
mov
ja
jg
mov
negl
cltd
neg
bound
cmp
add
cld
sbb
loope
cli
mov
jle
jb
jp
out
or
rolb
aas
mov
pop
in
shlb
dec
push
pushf
adc
call
jp
test
push
push
mov
sbb
fnsave
loop
xchg
cmp
dec
call
mov
cmp
jecxz
sub
test
psubusb
mov
dec
dec
and
mov
mov
push
lahf
sbb
lods
fstpl
outsb
inc
clc
fisttps
and
lret
nop
lods
cwtl
or
sbb
loop
out
xchg
daa
stos
int3
add
pop
bound
lret
lret
jo
stos
jp
xor
repnz
mov
je
sbb
and
add
pusha
lret
mov
jne
movsl
cmp
mov
cmp
push
ret
cltd
arpl
jno
mov
sbb
pop
cmp
icebp
stc
loop
push
mov
mov
dec
xor
pop
movsb
out
or
pop
cmp
rcll
mov
and
xchg
repz
test
xor
test
xchg
mov
loopne
mov
imul
inc
adc
aad
xchg
pop
push
leave
cmc
out
data16
jns
scas
mov
test
cmp
mov
mov
and
scas
lods
out
sbb
jge
rclb
jl
fs
negl
out
nop
xchg
add
xlat
fbld
cmpsb
jno
iret
ficomps
fiaddl
repz
push
push
cmc
sub
dec
sub
inc
push
and
xchg
sub
mov
lahf
mov
orb
sub
aam
pop
fadd
push
sub
and
pop
in
or
or
mov
xchg
dec
out
pop
ja
nop
pop
add
out
push
outsb
sub
imul
hlt
cltd
shrl
in
cli
lock
or
jmp
add
xor
popf
add
insl
mov
ret
sbb
push
xchg
aad
jp
fcoml
insb
shlb
jnp
mov
rcrl
inc
cmp
cmp
sbb
loopne
push
fstps
movsb
dec
push
inc
mov
int
pop
out
dec
cs
sbb
pop
xchg
gs
mov
aad
cli
jg
in
cmp
push
pop
xchg
dec
or
sbb
out
jo
sahf
and
push
lcall
lods
dec
fsubrs
push
movsb
adc
xchg
idivl
jo
bound
je
outsl
pusha
or
jns
mov
add
adc
dec
dec
dec
jnp
addr16
fisttps
xchg
jae
mov
sub
jl
dec
push
lcall
cmpsl
jl
adc
hlt
dec
test
stos
leave
jp
mov
sahf
mov
mov
xchg
inc
xchg
int3
or
inc
sbb
mov
push
sub
mov
add
arpl
mov
into
dec
movsl
sub
push
aam
xor
shlb
add
lret
out
fsts
add
mov
sahf
push
lahf
iret
push
mov
add
mov
sarl
fsub
mov
sbb
inc
add
adc
inc
repz
inc
mov
cmp
pushf
das
xor
xchg
or
pop
shl
push
xchg
jg
mov
jns
hlt
aam
fistpl
std
hlt
icebp
pop
jg
sbb
or
insb
mov
clc
lret
or
inc
testl
xchg
dec
gs
call
loope
pop
data16
xchg
mov
bound
stos
lods
popa
xor
std
add
lock
sub
xchg
mov
arpl
xchg
cmp
mov
jo
inc
sub
ret
addr16
ja
sub
stos
dec
lock
cmpsb
sahf
mov
jecxz
mov
jbe
out
push
sub
scas
jne
test
jo
or
addr16
pop
aas
clc
lret
push
sbb
mov
rorl
dec
jecxz
out
xlat
and
ret
pop
push
mov
fs
mov
testb
mov
xor
mov
mov
cmpsb
sub
into
lret
out
cmp
sub
mov
inc
fistpll
lods
jo
addb
arpl
out
pop
dec
add
je
mov
ljmp
into
mov
xchg
testl
hlt
flds
mov
and
and
push
lods
aad
hlt
not
push
je
idiv
ficomps
adc
xchg
push
sub
adc
mov
in
jo
jg
xchg
xor
adc
out
jp
dec
sbb
inc
sbb
pop
push
lock
and
fldcw
lcall
push
pop
js
cmc
ret
imul
cmpps
jb
cmpsl
outsb
test
pop
sub
int3
scas
mov
imul
or
aam
les
cwtl
mov
lods
orl
jl
dec
lcall
ret
mov
mov
mov
gs
cmp
imul
in
frstor
sbb
and
nop
lock
outsb
repz
push
jb
fwait
pop
rolb
adc
shll
cld
adc
pop
dec
ret
push
mov
das
ds
shl
push
out
and
sbb
dec
fcmovb
or
add
cmp
jne
cld
lcall
jmp
pop
push
push
div
sub
outsl
or
xor
sbb
adc
fwait
cmpsl
nop
repnz
lods
in
loope
pop
adc
movsb
imul
fbld
in
repnz
jbe
inc
scas
xor
xor
fwait
out
test
fs
popa
add
mov
hlt
sbb
pop
mov
inc
xor
ss
sub
call
iret
push
or
out
movsb
jmp
sbb
or
lods
aas
push
mov
in
adc
movsb
mov
mov
mov
insb
sarb
popa
and
scas
pop
in
sbb
jp
les
and
cli
ret
and
mov
and
fadds
sbb
andl
and
sub
or
push
fisubl
shrl
out
jnp
xor
ret
mov
subb
jo
bound
es
js
sub
and
mov
shlb
mov
sub
mov
fdivl
xchg
lock
pop
mov
and
mov
xor
cltd
cmp
cmpsb
push
xchg
fstps
sbb
adc
lret
pop
xchg
cmp
call
je
fidivrl
sub
mov
lret
xor
and
out
subb
push
or
sub
andb
pop
scas
test
jg
sbb
jae
test
ds
push
xchg
dec
es
dec
push
aam
mov
sbb
xor
nop
add
push
add
leave
push
mov
pop
or
inc
dec
int3
mov
sbb
xor
loop
psllw
dec
dec
stc
push
sti
xchg
movb
aad
lretw
int
cmp
neg
ss
pop
xchg
sub
cwtl
push
shr
in
mov
jnp
push
aad
leave
mov
jmp
cmp
in
jle
and
push
push
push
mov
xchg
mov
sbb
pusha
nop
mov
adc
xchg
xor
fsubp
pop
xchg
fists
push
ret
aam
xor
mov
inc
cs
shrb
xrelease
enter
or
out
les
stc
jle
cmpsl
dec
paddsb
push
js
cmp
test
push
jp
jp
sbb
push
repnz
push
xor
sbb
jbe
call
outsl
mov
sbb
in
xor
xchg
xor
pop
in
int
mov
dec
insb
add
add
icebp
pusha
ficoms
push
push
mov
add
shll
test
dec
sub
sub
adc
jg
sub
adc
test
mov
out
pop
xlat
cmp
dec
and
loop
dec
fbld
dec
ret
adc
sbb
push
hlt
int3
pop
scas
repz
enter
jae
sub
lods
sbb
movsl
mov
cld
clc
clc
add
inc
sbb
xor
mov
mov
and
je
cmp
xor
insl
or
pop
mov
xchg
std
mov
xchg
xchg
mov
mov
mov
repz
rorb
arpl
sbb
pusha
add
add
in
ret
les
dec
out
cltd
inc
ret
test
mov
ljmp
cli
xor
jle
bound
fildl
nop
stos
push
mov
cmp
mov
jo
adc
movsb
cmp
xlat
popa
jnp
sbb
mov
xor
adc
into
mov
add
cmp
dec
cmpl
inc
and
movsb
mov
mov
sbb
xor
or
aad
in
mov
adc
cltd
out
icebp
mov
cmpb
xchg
add
xchg
xor
push
incb
xor
mov
xor
enter
into
jbe
ja
mov
rcl
in
dec
loopne
push
test
sub
int
or
xchg
push
and
fisubrs
pop
and
push
nop
imul
fldcw
mov
pop
mov
sbb
ja
lock
mov
inc
jmp
vminsd
and
fmulp
and
or
sub
or
xor
or
sbb
xchg
push
je
das
aad
pusha
in
sbb
dec
hlt
mov
fs
jmp
imul
nop
push
pop
mov
pop
sbb
adcb
dec
movsb
mov
jb
xor
push
xor
add
pop
mov
ds
pop
cltd
sti
hlt
adc
sub
mov
stos
dec
outsb
xchg
clc
inc
popl
sub
pop
mov
pop
jo
dec
mov
test
jg
jecxz
mov
jge
mov
add
add
and
rcrl
xor
inc
sbb
into
mov
dec
inc
shrl
mov
andb
or
or
ds
insb
push
cmpsl
sub
popa
inc
mov
std
loope
sub
scas
adc
inc
ja
adc
gs
dec
ja
and
cmp
sbb
jo
xchg
xchg
mov
xor
sub
jmp
push
aaa
mov
mov
mov
jnp
test
fdivs
insl
int3
stos
in
mov
pop
mov
rolb
push
or
xor
clc
xor
stos
mov
repz
scas
cmc
push
repz
lret
cmpsl
aas
arpl
inc
into
sub
sbb
sar
cmpsb
xor
scas
hlt
xor
fnstcw
dec
jb
pop
push
mov
mov
ljmp
movsb
arpl
sub
ljmp
ret
repnz
xlat
sub
fdivl
cltd
negb
sub
push
das
and
popa
xor
pushf
stos
sub
cmp
mov
sti
xchg
jg
mov
mov
lcall
idivb
mov
sbb
add
fldt
out
test
fstpt
mov
jmp
rorb
scas
jae
dec
sti
xor
scas
je
das
xchg
dec
stos
mov
inc
dec
add
or
cmc
adc
leave
cltd
add
mov
push
ds
int
loopne
mov
dec
mov
pop
ljmp
mov
add
xor
lods
dec
and
pushf
std
mov
lds
adc
sbb
sub
orl
fisttps
loope
or
inc
sbb
aad
mov
insb
mov
mov
repz
mov
sbb
xor
int3
ret
ret
xchg
and
jns
or
mov
ret
test
dec
inc
jg
mov
cmp
pop
adc
xchg
pop
cmpsl
data16
fwait
lret
testl
cmp
add
sbb
lret
push
test
jno
dec
pop
dec
add
shlb
add
xchg
lret
fdivs
sub
mov
inc
dec
push
add
aas
mov
mov
xchg
stc
in
leave
adc
push
dec
xor
inc
adc
inc
push
xchg
jl
bound
adc
daa
jo
sub
jmp
pop
xchg
sbb
mov
or
dec
dec
xorl
push
jo
lods
ret
nop
inc
pop
pop
pop
out
fidivl
xor
iret
ret
mov
fnstcw
sub
mov
and
sub
mov
cs
daa
pop
add
cmp
inc
nop
fidivrl
dec
add
jae,pn
arpl
add
pop
push
lock
mov
xchg
lahf
xchg
mov
pusha
inc
dec
mov
sbb
bound
imul
xchg
and
push
inc
lds
lods
jno
xchg
xchg
add
out
mov
adc
mov
sbb
add
jne
fdivrl
mov
xchg
enter
and
nop
inc
in
xchg
pushf
fdivrp
mov
mov
pop
sbb
inc
in
lea
xlat
leave
cli
mov
lret
add
adc
fucom
fmuls
inc
fs
sub
fwait
mov
adc
cmp
insl
inc
addl
jno
lds
jbe
or
dec
test
js
jae
popf
mov
dec
or
mov
mov
adc
sbb
or
test
cmpsb
aas
pop
mov
lcall
inc
std
add
mov
or
pop
mov
lcall
pop
xchg
ja
inc
and
or
dec
xor
cmp
data16
or
cmp
jo
lahf
push
das
cmpsl
aaa
js
or
add
dec
out
sbb
sub
mov
sbbl
out
cli
stc
inc
mov
dec
outsb
xchg
lds
sar
add
cmp
mov
inc
inc
sbb
xorb
xor
mov
out
push
mov
push
aad
mov
xchg
or
jno
dec
jle
sbbl
incl
cld
pop
xor
or
cmpl
xchg
and
xchg
lcall
cltd
mov
adc
out
ret
sub
dec
cmc
mov
int3
in
push
cltd
adc
fidivl
clc
icebp
shr
inc
add
loope
pop
es
das
ret
les
pop
xchg
ss
ja
pop
iret
jb
sub
push
pop
or
mov
or
dec
mov
push
test
xchg
lods
push
arpl
cmp
mov
fnstcw
into
push
lods
fldenv
mov
inc
pop
jnp
mov
cmc
insl
mov
adc
adc
lea
js
sti
rolb
sub
or
inc
insb
pop
mov
cmp
and
shrb
dec
jns
mov
push
mov
mov
push
cmp
aas
ret
lods
mov
pop
lea
push
pop
mov
fsubrp
mov
mov
cmpb
in
ja
scas
loope
fcomps
mov
test
pop
cmp
xchg
repnz
pop
jle
adc
xchg
xchg
out
scas
adc
mov
pusha
jmp
xchg
rcl
xor
sub
aam
sahf
repnz
fidivrs
imul
xor
fstl
stc
pop
pop
jo
xor
enter
repz
dec
fdivs
cmp
cltd
sti
lods
cltd
test
push
xor
in
sbb
cmp
imulb
mov
sbb
push
movsb
dec
leave
jge
or
cld
cmp
enter
sub
in
inc
sahf
popf
addl
aad
pop
adc
xchg
jmp
aam
hlt
pop
das
cmp
xor
in
iret
mov
stos
out
addl
xchg
jbe
rorb
daa
int
inc
aad
dec
mov
fdivs
insl
push
xchg
test
mov
fisubrl
subb
jne
jle
shll
xchg
aam
xchg
mov
scas
cmpsl
nop
imul
cmp
cs
aad
fidivl
shll
mov
pop
mov
cmc
fadd
cmp
int
test
ljmp
sbb
sub
arpl
push
in
mov
popa
lahf
stc
jno
jbe
ret
lcall
imul
inc
leave
shlb
pop
lret
mov
shlb
cli
add
mov
push
outsl
leave
mov
xchg
mov
mov
xor
xor
pushf
push
vmread
test
ljmp
mov
stos
add
pop
sub
mov
fldt
pusha
aam
test
mov
jmp
xor
fwait
xor
sbb
dec
ret
jnp
jp
leave
leave
fldl
sbb
mov
xor
jne
push
ljmp
scas
jecxz
sub
loope
pop
push
xor
imul
xchg
cmp
cmp
adc
xor
imulb
insl
mov
xor
xor
jnp
in
in
fs
ficompl
sbb
bound
sti
out
mov
add
dec
cmp
mov
rolb
jge
and
int3
lret
and
add
sahf
xor
pavgb
lahf
aas
push
jge
jg
mov
fisubs
push
fisubl
mov
roll
jg
jno
rorb
scas
in
imul
fucom
test
int3
adc
push
sbb
scas
iret
sahf
pop
test
sti
shrl
ret
mov
in
jne
mov
or
push
aad
mov
mov
xlat
push
or
leave
aad
stos
xlat
and
ja
or
enter
jg
sbb
mov
xchg
inc
mov
shlb
arpl
add
cmp
mov
je
mov
inc
rcll
sbb
sarl
or
dec
rcr
add
xor
aas
daa
jb
into
ret
mov
cld
notb
pop
or
jo
das
jo
pop
sub
jmp
jge
iret
and
push
stos
mov
pop
fsubs
push
xchg
fists
sub
cmpsb
loop
or
cmpsb
subb
push
xchg
loopne
jne
cmp
jo
loopne
push
mov
xor
inc
sbb
sahf
insl
cmc
mov
xor
sbb
pop
adc
in
cmp
pop
push
test
insb
adcb
lods
sub
mov
sbb
aam
shl
push
mov
dec
mov
subl
pop
sbb
inc
xchg
idivl
pop
sarl
lods
mov
cmp
ror
xor
xchg
xchg
xchg
inc
outsl
in
mov
sub
or
mov
push
sbb
adc
cmp
cmp
sub
cld
xchg
je
adc
imul
shrb
or
movsb
sub
add
test
bound
in
add
push
sub
or
sbb
push
or
xchg
dec
repz
imulb
push
mov
push
xlat
fstl
repnz
jle
pop
dec
push
xchg
fstp
popa
cmpsb
cmpsb
jle
clc
jge
jmp
cmc
dec
adc
jecxz
aad
lahf
dec
fimuls
push
ljmp
sbb
mov
fldenv
lock
cmp
sub
roll
xor
mov
sub
icebp
jmp
loop
mov
sbb
xor
mov
pop
std
ret
mov
clc
jge
mov
pop
shlb
incl
push
push
lahf
mov
sbb
pop
adc
cmp
ret
fistl
dec
subb
mov
repz
adc
cmp
out
pop
ds
xor
pop
inc
xchg
or
pop
popa
je
outsl
pop
cmp
cli
mov
push
cmpsl
xor
bound
sbb
in
ss
mov
fucom
ret
lock
inc
inc
or
fisubl
push
pop
jnp
or
pop
adc
out
ja
cmc
loopne
addr16
mov
push
int
scas
test
filds
les
insb
or
ss
lcall
push
mov
dec
repz
in
xlat
ja
add
mov
aas
cmpsb
xchg
adc
movsl
ror
sbb
in
out
pop
mov
test
pop
dec
loopne
jle
sar
xchg
pop
aam
popa
pop
pop
es
sub
pop
jg,pn
pusha
or
subb
fadds
mov
ret
mov
jle
and
mov
xor
mov
out
mov
jo
xchg
push
add
shrb
daa
dec
cmpsl
xor
inc
inc
inc
mov
mov
push
idivb
sbb
int
jge
xchg
mov
shrl
cltd
cmp
jg
jge
jae
je
mov
dec
push
jne
dec
daa
dec
add
add
sub
les
icebp
mov
or
in
fldenv
mov
pop
andb
arpl
in
jo
mov
mov
sbb
scas
inc
rclb
mulps
fistps
fnstcw
add
stos
insb
adc
lods
enter
ja
add
cmp
lock
out
pop
pop
xchg
sbb
aam
outsb
sarl
fcmovnb
pop
mov
jle
xorl
cmp
pusha
and
pop
jne
sub
pusha
int3
movsb
cmp
fnstenv
dec
jo
xchg
into
bound
in
bound
orb
mov
neg
mov
lret
aas
mov
sub
and
and
lds
jmp
sarl
adc
sbb
xchg
and
movsl
mov
mov
jp
push
jnp
fistl
mov
fisubs
cmpsb
or
arpl
insb
mov
mov
inc
or
je
mov
fcoml
sti
cld
jl
outsb
clc
sbb
add
sahf
adc
lret
enter
add
add
lret
aaa
jg
xor
arpl
inc
xor
nop
and
fmull
je
aad
sbb
lods
xchg
ficompl
cmp
mov
jge
jmp
movsb
dec
xchg
sub
adc
sub
rorl
lock
fistl
xchg
shrl
leave
jmp
hlt
ss
lods
call
adc
sbb
xchg
imulb
imul
mov
xchg
andl
leave
xchg
mov
dec
not
adc
loop
add
xor
inc
vmwrite
jnp
push
push
fsubrp
add
fwait
cmp
pop
shl
dec
dec
mov
push
mov
xlat
lcall
fs
pop
xlat
or
add
ljmp
or
pop
xor
mov
imul
or
daa
jecxz
lret
pop
mov
mov
xchg
jp
aam
mov
pop
mov
in
rorl
inc
or
or
and
mov
inc
sub
push
xor
das
imul
xorl
repz
insl
icebp
and
lock
in
lcall
xor
mov
or
mov
std
adc
sub
adc
iret
cmp
loope
ss
sarb
test
popa
inc
stc
add
jo
sub
shll
jne
rolb
rorb
std
int
movsb
inc
cmp
pop
mov
dec
adc
call
lods
or
push
aam
push
cmp
aas
shrl
or
nop
fbstp
and
fwait
pop
inc
jo
imul
mov
or
push
negl
pusha
adc
mov
popf
pop
lock
in
movsb
aad
ds
lock
test
xchg
mov
das
jl
pop
adc
mov
mov
iret
jle
and
and
mov
push
push
shll
iret
mov
icebp
mov
movsb
xor
ret
pusha
jle
jo
pop
mov
repnz
neg
xor
bound
lahf
shll
imul
sti
loopne
mov
test
dec
mov
loop
mov
addr16
xor
xchg
jle
adc
dec
xchg
aad
mov
dec
cmc
iret
ficoml
cwtl
and
pop
outsb
xchg
cwtl
cmp
mov
and
pop
lock
xchg
inc
push
sbb
jns
mov
pusha
or
les
push
mov
pop
stc
lahf
andb
sub
and
inc
xchg
pushf
jae
imul
mov
dec
mov
ret
clc
subl
sbb
dec
cmp
sbb
std
cs
xchg
rorb
mov
cmpsl
inc
mov
into
mov
mov
das
inc
nop
loopne
pop
fisttpl
push
lret
mov
mov
imul
in
ss
push
stos
nop
cwtl
mov
ss
out
adc
inc
mov
fcoms
mov
fiadds
and
xor
push
dec
in
test
es
mov
xchg
adc
cli
addr16
and
sbb
and
or
test
xchg
pop
ja
sbb
aam
pop
push
inc
daa
fbstp
addr16
jne
add
xchg
shlb
or
decb
int
push
dec
xchg
rorb
imul
add
mov
pop
dec
mov
push
xor
sub
mov
int
xor
jle
iret
jns
jg
cmpsb
jl
xor
test
mov
inc
in
mov
idivl
mov
cmp
and
popf
shlb
fcmovnb
fwait
mov
cmp
jge
hlt
and
fdiv
int
xchg
mov
pop
rcrb
sbb
lret
stos
jg
pop
sti
scas
sbb
xchg
imul
mov
pushf
dec
pusha
inc
xchg
sarb
cmpsb
mov
je
push
adc
data16
mull
ss
pushf
orl
rclb
sub
ds
sub
cld
mov
je
inc
ja
loope
sub
arpl
cwtl
ret
dec
ret
cwtl
mov
ss
enter
fwait
push
int
adc
stos
fstp
in
fwait
sub
or
pop
movsb
xchg
mov
add
pop
divl
xchg
adc
and
mov
mov
ds
sbb
loop
call
mov
insl
xor
lcall
xchg
imul
push
aas
mov
cld
das
loopne,pn
jne
inc
xor
push
cmp
adc
int3
mov
pushf
add
adc
mov
jmp
leave
lea
jp
cmp
imul
mov
daa
jnp
adc
and
push
pop
add
cmp
jmp
sub
fcompl
xor
lock
fsubl
cmpl
addr16
and
mov
shl
xchg
or
ljmp
xorl
fwait
inc
or
cmc
pop
fidivs
push
xor
shr
decl
mov
mov
dec
xchg
ja
les
dec
push
fwait
cmp
in
cmp
add
test
daa
mov
dec
lret
and
cmc
adc
test
hlt
stc
cld
out
pusha
pop
xchg
in
cmp
and
mov
sbb
jo
xchg
stc
jge
jp
sbb
sarl
rorb
pop
mov
pop
cld
mov
xchg
push
xchg
push
fldt
call
inc
call
xorw
mov
cmp
add
mov
adc
lahf
sarl
repnz
loop
mov
out
adc
xor
out
mov
dec
nop
xchg
push
fnstenv
scas
aad
mov
and
sub
ss
sub
or
add
adc
pop
cld
jmp
adcl
dec
pop
mov
dec
mov
push
sub
jne
cmp
js,pn
sub
push
out
cmc
mov
cmp
das
fdivl
jmp
dec
dec
insb
into
int3
jp
add
ss
cli
faddl
iret
imull
xor
int3
stos
push
and
dec
out
cmp
jae
shll
fs
fmuls
mov
pop
xor
xchg
xor
or
ja
lock
jno
loop
adc
mov
lret
fcmovnbe
sti
lret
mov
cmp
shlb
push
arpl
mov
inc
loopne
pop
stos
add
adc
in
rcrl
pop
push
dec
shll
les
loopne
jns
mov
and
lret
cmp
fisttps
mov
dec
dec
test
fisubrs
repnz
push
cmp
mov
je
lds
push
enter
orl
les
pop
xchg
sbb
xor
xchg
or
jg
lret
sbb
ja
test
icebp
idivb
lcall
mov
pop
xor
add
ss
dec
ret
test
pop
dec
jmp
fnstsw
rolb
repnz
cmpsl
add
loopne
dec
fimull
mov
fnstenv
jno
xor
movsl
fadds
sbb
fs
jl
push
aaa
mov
std
cwtl
stc
xchg
in
fstl
inc
sub
and
adc
fidivrs
dec
mov
js
ja
cwtl
jbe
lock
mov
push
adc
xor
jo
sbb
dec
sub
pop
xchg
mov
sti
aam
movsb
fs
lcall
ljmp
out
enter
rcrb
in
fcoms
aad
mov
mov
in
jno
arpl
ret
std
icebp
pop
nopl
popf
xchg
add
inc
sub
xor
jecxz
shlb
mov
fistl
fwait
ret
loop
cmc
lahf
adc
jg
dec
mov
leave
nop
pop
aaa
outsb
sahf
pop
ret
mov
gs
mov
mov
les
aas
jp
xlat
lock
sti
cs
adc
aaa
int
pop
test
sub
adc
cmpsl
call
add
push
push
add
sub
ljmp
mov
ficomps
mov
push
adc
pop
icebp
je
or
sub
inc
jl
add
std
xchg
add
sbb
jae
sbb
xchg
jge
jae
dec
sub
push
xor
outsb
cltd
dec
mov
dec
push
pop
inc
and
inc
mov
mov
stos
nop
add
dec
adc
ds
xchg
xchg
out
daa
dec
xlat
jl
imul
add
dec
sahf
daa
shll
imul
int3
xor
addr16
mov
dec
loop
iret
pop
adc
mov
pop
loopne
inc
xor
pop
leave
std
jo
mov
daa
imul
mov
fucomp
add
cltd
std
add
mov
mov
lret
add
mov
fcoms
hlt
adc
stc
inc
clc
mov
xchg
ss
out
sub
adc
mov
pop
out
jne
add
sub
adc
or
call
int
push
aad
daa
ja
lds
push
aad
out
mov
pop
cld
and
mov
and
and
adc
sbb
movsb
and
cmpsb
cld
jmp
jg
outsb
pop
lahf
mov
or
test
cmp
jle
sbb
or
mov
mov
insb
fbstp
cmpb
enter
dec
or
push
inc
adc
daa
inc
ret
mov
sbb
xchg
or
jge
inc
inc
into
mov
js
movsb
cmpsl
push
fnstsw
int3
or
stc
jmp
add
or
pop
mov
popf
cmpsb
mov
cli
fldt
push
sub
subb
dec
cmp
fucomip
dec
cmpsb
adc
sub
pop
repnz
sbb
imul
cmp
jecxz
pop
das
xchg
popf
mov
or
add
enter
out
lret
loope
mov
lods
test
jnp
or
xor
andl
mov
or
jmp
mov
dec
cmpsl
sbb
mov
dec
stos
inc
push
pop
ljmp
pop
inc
imul
out
push
pusha
movsb
pop
or
test
pop
dec
jo
iret
inc
movsl
pusha
jb
push
cs
into
in
cmpsl
fwait
sbb
xor
scas
adc
jb
shlb
push
or
ret
xchg
adc
adc
cmc
cmp
rcrl
cmp
mov
jmp
repnz
push
bound
mov
mov
mov
imul
jo
in
jbe
dec
sarl
inc
push
add
and
mov
and
cwtl
jb
xchg
hlt
and
push
sti
fcom
mov
mov
cmp
xchg
lods
gs
jle
jp
xchg
loop
in
lods
sahf
pop
inc
out
push
push
pop
sub
in
and
rorb
fbstp
dec
lcall
andl
adc
sarb
fmuls
add
xor
lret
xor
dec
mov
pusha
flds
inc
inc
movsl
or
out
lods
lahf
testl
aam
push
xchg
push
cltd
mov
mov
push
bound
ja
or
inc
repnz
jmp
icebp
pop
test
and
or
lcall
push
or
clc
movsl
push
rorb
inc
push
jge
test
add
cwtl
mov
out
inc
xor
pop
xor
movsb
add
rcl
das
mov
inc
cmp
mov
lock
mov
ss
sub
fldl
inc
out
or
fimuls
insl
mov
je
cmp
mov
cwtl
cmp
loopne
sarl
dec
lock
scas
loopne
mov
mov
sub
dec
jbe,pn
iret
cmp
mov
loope
push
jne
add
test
inc
push
lahf
call
addr16
out
mov
adc
lret
cli
fildll
push
lcall
mov
pop
jle
jnp
in
jb
out
jo
ljmp
jecxz
pop
jle
ja
sbb
xor
inc
loop
cmp
fisubrs
push
hlt
inc
fistpl
inc
fimull
jl
dec
push
jne
xor
mov
xchg
jp
rcll
je
jmp
pop
adcb
mov
mov
jg
jg
fsubl
adc
call
cs
mov
jp
xchg
shr
or
sub
divl
je
lret
pop
xor
mov
bound
lret
stos
or
pop
and
ret
std
push
cmpsb
mov
push
mov
inc
and
loop
push
mov
andb
sub
fcoml
scas
mov
mov
lret
cld
adc
xor
pop
daa
aaa
cs
adcl
xchg
inc
mov
mov
bound
mov
sbbl
inc
sub
or
cs
pop
and
sub
xor
mov
jg
insl
jns
adc
clc
fwait
or
jl
push
pop
arpl
jb
jge
fcoms
ja
inc
imul
dec
mov
repz
mov
test
push
and
inc
and
mov
mov
int3
mov
mov
mov
and
lret
aaa
push
in
push
pop
mov
jb
in
daa
pop
pop
dec
xor
es
or
xchg
lds
outsl
add
inc
and
ljmp
lods
fstpt
out
lret
pop
sub
xchg
inc
pop
cli
js
sub
loop
jmp
sbb
outsl
xor
xchg
test
scas
pop
mov
cwtl
or
sub
or
outsb
mov
out
adc
setnp
mov
jle
shrl
shrb
insb
rclb
pop
mov
faddl
mov
adc
popa
daa
sarb
pop
jne
adc
insl
jg
push
das
cwtl
dec
or
test
pop
test
adc
dec
in
clc
xchg
imul
fisttps
xchg
pusha
fsubrl
fmull
out
xchg
test
pop
ret
jmp
cmp
mov
xchg
test
stos
mov
popf
push
subb
xlat
mull
jmp
mov
jbe
push
lods
lods
sub
xor
popl
cmpsb
addb
pop
mov
and
inc
pushf
sbb
adc
xchg
push
icebp
add
inc
pusha
insl
cmp
clc
ja
add
mov
jmp
sbb
cmp
rcrl
adc
sub
jg
outsl
mov
sbb
fstps
fsubrs
xchg
out
cmp
ja
jg
mov
lcall
sub
and
sarl
lea
int3
cmp
fnstsw
cwtl
mov
mov
pop
test
push
or
push
cmpsb
add
jge
cmpsb
push
add
add
xchg
dec
sub
mov
dec
mov
jbe
adcl
mov
lds
cmp
lcall
sarl
iret
addr16
test
aas
jg
xor
lock
in
cmovb
rcll
leave
es
into
mov
xchg
dec
push
stos
ret
adc
mov
xchg
fs
stc
sub
jle
xor
js
iret
cmp
sbb
imul
fcmovnu
dec
arpl
shlb
cmp
mov
rcll
inc
mov
pusha
int
fs
sbb
ret
fbld
lret
mov
push
outsb
ja
aas
ret
out
out
pop
inc
cltd
fcompl
cmpsb
imul
rolb
js
and
fildll
adc
stc
inc
dec
sbb
adc
cmp
adcb
sbb
jbe
cltd
sbb
mov
out
add
xchg
xchg
in
pop
popf
aas
mov
stc
loope
aad
push
out
sar
adc
cmpsb
push
test
mov
push
add
inc
mov
pop
mov
stos
sbb
jmp
imul
sbb
sub
sbb
sbb
mov
xor
enter
xchg
ret
pusha
lcall
xchg
push
cmp
cld
pop
pop
lret
sub
xor
xchg
es
push
test
and
dec
out
dec
stos
loopne
mov
je
std
mov
es
xchg
sahf
jne
insl
repnz
push
ret
pop
sub
cld
fsubrl
cltd
sti
cmc
subb
push
clc
mov
jp
pop
mov
fldt
mov
mov
jg
mov
xchg
addb
mov
out
or
xchg
mul
dec
fstps
cs
mov
jb
jecxz
orl
leavew
rclb
dec
or
negl
jg
cmp
cmc
mov
push
shrb
xchg
mov
int
push
and
inc
sbb
or
add
std
loopne
xor
jmp
fldcw
xor
pusha
jno
dec
pop
or
arpl
cmpsl
jl
fimull
fwait
jno
outsb
insb
and
pop
fldl
mov
loopne
cmp
and
push
loope
les
dec
sti
jbe
aad
lret
mov
xor
jp
ss
inc
xchg
mov
cmp
test
adc
dec
test
dec
sbb
sub
adc
add
out
rcrl
sbb
jnp
or
mov
hlt
test
rcl
jns
arpl
mov
add
push
and
jmp
or
addb
sub
ficompl
cwtl
mov
cwtl
adc
lcall
rcll
imul
or
fcmovnb
lods
mov
or
and
cmp
push
repz
aaa
dec
in
and
lret
cmpsl
mov
pop
das
test
and
jge
jle
dec
out
loope
mov
jne
loopne
xchg
cmp
xchg
push
jmp
sarl
mov
mov
xchg
inc
call
ja
dec
adc
ficoms
pop
mov
xor
mov
fsubp
fdivl
ds
jnp
push
mov
loope
test
jbe
fucomp
xchg
jl
dec
addr16
out
js
fs
andl
push
mov
ss
or
adc
and
inc
dec
jecxz
adc
into
pop
outsl
mov
aam
sti
aas
movsb
add
xlat
pop
inc
pop
int3
ss
inc
adc
pop
cmp
scas
shrl
data16
js
push
pop
add
daa
inc
jbe
out
insb
pusha
or
inc
mov
or
mov
rcr
data16
cmp
push
movl
mov
inc
mov
mov
test
or
inc
test
jns
mov
popa
mov
loope
mov
pop
push
push
lods
pusha
popf
adc
mov
adc
fldenv
shlb
jb
mov
push
pop
shrb
leave
insb
or
mov
mov
jg
mov
mov
jnp
and
mov
lahf
xor
ss
ljmp
jmp
mov
pop
cmpsb
cmp
sbb
enter
es
outsb
fwait
pop
popa
ss
mov
mov
sbb
mov
or
les
and
sub
mov
push
divb
in
push
lods
jb
imul
fdivl
decl
and
xchg
xchg
add
add
stc
ja
mov
xor
popf
mov
enter
push
adc
and
inc
in
pop
rorb
fstpt
clc
push
and
mov
push
mull
and
xchg
inc
sbb
xor
out
loop
mov
shrl
cs
gs
push
dec
addl
stc
xchg
shl
cmovae
fwait
cmpl
aaa
cmpsl
mov
out
adc
addr16
push
in
xchg
mov
jnp
xchg
cld
mov
and
pushf
ds
ffreep
pushf
cmp
movsl
aad
ss
je
push
out
xor
repz
jmp
ljmp
cld
pop
mov
xor
or
xchg
inc
xor
and
loope
ds
adc
mov
sub
jbe
filds
lods
sub
in
xor
pop
sbb
lea
outsb
fstpt
gs
dec
pop
xor
movsb
cmp
mulb
test
mov
mov
mov
scas
jo
ffree
pop
pop
inc
in
loopne
mov
or
mov
jecxz
jns
das
jle
mov
mov
out
dec
imul
adc
pop
or
into
jp
jle
adc
mov
imul
stos
data16
sbb
jns
and
dec
sbb
pop
xor
pop
cmc
xchg
ret
xor
fidivrs
adc
popa
xchg
jae
mov
mov
int3
adc
andb
fcomi
fildl
adc
cs
aaa
adc
ss
sti
mov
add
fidivrs
or
push
cmc
xchg
mov
mov
dec
std
or
lods
shrl
sbb
push
das
lock
adc
and
lret
mov
dec
jmp
adc
mov
test
mov
jo
clc
hlt
dec
jns
sub
add
aas
inc
rcr
fstpl
or
push
cs
jno
popa
jo
jg
push
or
and
repnz
mov
mov
or
mov
push
mov
dec
in
sbb
inc
into
xorb
outsb
add
xchg
adc
sub
sbb
inc
xchg
sbb
mov
loop
int3
cmp
inc
arpl
movsl
inc
mov
and
fistpl
jns
inc
push
orps
xlat
pusha
cmp
jge
jno
in
sbb
push
mov
pop
push
pop
xchg
imul
cmp
ret
xor
mov
sbb
mov
in
xor
insl
and
ss
repnz
mov
jns
and
sub
add
add
xchg
test
cmc
pop
shl
sub
sbb
jns
call
or
jns
mov
ds
cli
fldenv
les
cmpsl
arpl
push
repnz
mov
loop
mov
leave
mov
fnstsw
mov
dec
enter
fisubs
push
sbb
test
inc
adc
pop
jmp
xchg
loopne
mov
sub
ss
stos
lods
int
xchg
sub
ds
shlb
jg
out
sbbb
sub
add
xor
ds
cmp
hlt
mov
sbb
add
mov
test
repz
push
sub
ret
pop
mov
in
mov
movsl
and
cmp
scas
sti
mov
dec
decb
fmuls
jle
sub
dec
xchg
stos
pop
mov
adc
cmp
test
jle
mov
lods
movsb
nop
inc
jne
jg
ljmp
add
sub
or
xchg
insb
insb
div
pop
mov
jecxz
test
in
icebp
fildll
data16
dec
inc
mov
rol
andb
inc
cmp
inc
mov
mov
push
pusha
add
lds
out
inc
mov
into
arpl
iret
pop
fstpt
cld
mov
stc
test
push
mov
pop
push
xlat
mov
js
mov
mov
inc
into
xchg
push
sub
add
pushf
sub
add
or
in
mov
and
lahf
fsincos
mov
mov
mov
xor
add
cwtl
divb
adc
mov
mov
fxch
jbe
inc
ds
testl
out
inc
push
sub
cli
fs
push
mov
out
xlat
gs
inc
xchg
ret
xchg
in
xor
cltd
in
icebp
dec
jg
repnz
push
push
fdivs
cmp
mov
dec
mov
adc
jne
or
xchg
jecxz
pusha
popf
std
mov
shl
push
mov
jmp
cmp
xor
xchg
cmp
cli
dec
push
int
inc
divl
call
insl
inc
dec
popa
sub
bound
mov
in
or
addl
rcll
int
cltd
movsb
mov
and
in
in
jo
xor
lcall
aaa
out
fld
in
fdivrl
lret
mov
rolb
movsb
enter
fwait
push
push
pop
mul
jmp
popf
jae
sub
repnz
mov
cmp
push
and
stos
aas
ljmp
push
in
popa
xor
std
popf
dec
movb
lcall
lea
loop
jle
push
jecxz
and
xorb
daa
xchg
sub
pop
dec
or
lret
push
xchg
and
inc
andl
enter
ss
xchg
sbb
pop
les
add
loopne
inc
sub
push
loop
and
cli
lock
mov
inc
aaa
lret
xor
insl
mov
outsl
mov
cmp
dec
ds
push
push
mov
pop
push
pop
adc
or
sub
into
je
xchg
mov
int
in
mov
mov
pop
mov
test
das
inc
and
mov
ret
jge
int3
pushf
cmp
aam
mov
imul
enter
es
test
add
insl
test
cli
push
stos
leave
xor
pop
je
pop
push
and
jbe
jle
jnp
jmp
pusha
sbb
pusha
sbb
cmp
inc
xchg
pop
loopne
aaa
iret
and
outsl
pop
shufps
mov
pusha
faddl
inc
test
mov
push
mov
pop
inc
jg
cmp
xchg
das
in
sbbl
mov
and
in
vprotq
stos
divb
decl
add
mov
nop
cmc
push
xlat
dec
lahf
dec
addl
test
push
xchg
loope
test
jnp
xor
cmc
jnp
scas
inc
adc
int
js
pop
test
jnp
sub
pusha
clc
mov
int
test
ret
fldt
dec
cmpsl
aaa
mov
fmul
shlb
adc
js
mov
std
push
aas
jae
jg
push
jno
cmp
add
inc
mov
int3
fdivl
into
in
sahf
fnstcw
cmp
and
les
adc
lret
pop
pop
aad
jno
dec
jo
ss
jge
cmp
push
aas
jno
dec
mov
fimull
icebp
ja
adc
inc
fstpl
mov
jae
fsts
pushf
iret
movsl
and
dec
jle
inc
fimuls
inc
mov
inc
push
push
daa
insb
mov
shl
dec
and
xor
mov
cwtl
test
lret
ror
push
out
ljmp
mov
rorl
jmp
cmc
insb
in
inc
fcmovbe
ret
jnp
and
fldl
adc
in
scas
sbb
insl
ljmp
outsb
mov
into
mov
imul
mov
cmp
aas
and
or
in
bnd
nop
jg
sbb
in
jae
std
pushf
xor
scas
cmp
jo
je
movsl
popf
and
push
xor
mov
insb
pop
xor
ja
in
xchg
sub
push
mov
fdivrs
lea
in
mov
loop
or
add
jle
out
adc
and
add
icebp
mov
inc
push
mov
ljmp
push
push
add
cmpsb
jns
outsb
test
sub
testl
pusha
push
push
out
js
lret
nop
mov
ret
adc
cmpsl
inc
icebp
mov
cmc
push
and
in
lahf
inc
jb
rorl
cmp
cld
sub
je
stos
aam
in
mov
test
adc
leave
popf
push
hlt
dec
bound
sbb
sbb
xchg
pop
mov
inc
call
mov
mov
sub
cmpsb
movsl
and
cmp
mov
xchg
test
cltd
fisttps
dec
pop
flds
aad
adc
cmp
and
ds
int3
ljmp
dec
in
insb
jmp
sbb
movsl
inc
sbb
or
mov
push
rcr
add
and
xchg
cld
out
add
mov
jb
xchg
movsl
cmp
mov
pop
lret
lahf
xor
jnp
repnz
rolb
test
adc
fisttpl
lods
push
xchg
cmp
insb
data16
jae
mov
mov
push
pop
dec
adc
scas
in
push
sbb
cmp
xor
inc
fs
add
std
and
les
and
inc
loop
lret
jnp
cs
push
xchg
adc
mov
xor
sbb
mov
popf
insb
add
imul
shl
repz
jle
and
push
je
mov
mov
ret
addl
out
test
scas
icebp
hlt
xor
js
adcl
das
ss
sub
inc
pop
shl
add
rorb
mov
shll
enter
test
dec
sub
dec
ja
push
inc
loopne
jae
sbb
int
adc
or
sbb
sub
mov
pushf
test
js
dec
movl
add
jg
das
mov
ss
enter
dec
notb
sbb
dec
adc
dec
xchg
xchg
jp
aas
lret
les
jb
cmp
sub
inc
fcmovne
push
mov
adc
jnp
pop
xchg
cmp
cmp
aaa
pushf
loope
mov
scas
test
fs
mov
add
xor
lods
lock
sub
ret
les
and
in
in
inc
stc
arpl
lds
lock
inc
mov
mov
dec
mov
xchg
shll
iret
int3
cmp
xchg
test
xchg
leave
les
dec
dec
dec
js
int
lcall
stos
sub
dec
mov
fxch
sub
xlat
jp
imul
jecxz
xchg
es
andb
xor
inc
cmpsb
aaa
xor
sbb
cmp
push
cmpb
xor
add
rcl
aam
enter
in
in
je
push
loope
inc
jne
push
and
aas
test
inc
in
push
xor
es
cli
js
mov
push
sarl
sbb
adc
dec
xchg
jnp
jbe
out
pop
nop
aam
dec
mov
push
ja
into
pop
or
mov
ljmp
hlt
fisubs
in
nop
leave
add
enter
xor
push
sub
pushf
mov
loop
aam
and
pop
mov
sbb
adc
inc
xor
in
subb
mov
pop
jg
sub
lods
hlt
xchg
push
jno
xchg
orb
and
adc
xchg
shll
ds
push
xchg
or
insb
out
mov
or
decb
mov
xor
jne
ret
cmp
sbb
push
lds
jmp
jnp
push
jo
push
nop
xlat
xchg
dec
jmp
push
jne
inc
add
dec
push
dec
shll
inc
cld
js
pop
cmpsl
dec
dec
and
popa
xchg
mov
out
pop
xor
dec
sahf
subl
dec
pop
push
mov
testb
push
jne
jge
push
cld
cmp
inc
sub
jl
add
fisubrl
xchg
stos
sbb
in
mov
cmp
push
in
mov
sbb
rcrb
sbb
xchg
cld
dec
or
lock
ja
mov
pop
push
lret
and
leave
int
sbb
mov
imul
jo
insb
ljmp
insb
push
mov
or
mov
es
std
lods
push
or
xor
dec
fwait
nop
cmp
push
lcall
rclb
shll
movsl
mov
in
cmp
inc
mov
in
xchg
insl
es
jo
mov
adc
addr16
pop
mov
decb
mov
mov
xchg
ret
jb
mov
addr16
rorl
mov
dec
mov
dec
mov
mov
or
into
cli
imul
mov
fisttpll
insl
loopne
scas
mov
sub
shll
mov
add
and
outsl
or
rcrb
add
roll
xor
popf
push
mov
mov
sbb
js
mov
into
lret
mov
pop
dec
sub
push
test
inc
repnz
aas
xor
lret
mov
push
shl
jnp
mov
adc
cmp
inc
xlat
iret
cmpsb
xor
push
movl
pop
push
mov
lret
nop
dec
or
jecxz
mov
inc
or
mov
jmp
mov
test
cs
or
mov
adc
fcmovnbe
aas
mov
xchg
xchg
sub
fidivs
dec
int3
mov
add
popf
in
stos
sbb
cmp
jb
xchg
add
leave
push
push
xor
fldl
dec
fdiv
int3
mov
dec
sbb
out
and
xchg
movsb
inc
mov
mov
jae
xchg
fcoms
cmp
lcall
pop
leave
dec
int3
push
loope
mov
pop
lds
cmp
jecxz
inc
mov
pop
scas
negl
gs
out
ljmp
fists
cmpsl
insb
lods
pusha
sub
pushf
adc
clc
or
in
popf
repz
movsb
fimuls
iret
fnstenv
movsb
fld
adc
inc
push
push
jnp
xchg
lahf
or
dec
xor
andb
enter
sbb
push
out
jg
sbb
push
fistps
inc
push
xor
icebp
out
adc
dec
dec
pop
stos
push
loope
inc
inc
push
jmp
rorl
adc
push
out
sub
fsubrs
scas
ss
imul
jbe
push
sub
or
jle
addr16
hlt
push
dec
out
iret
push
pop
bound
or
add
enter
hlt
fcoml
std
inc
dec
adc
call
in
dec
fs
mov
sub
jecxz
insl
rclb
mov
sbb
fcomps
inc
cmp
jno
adc
leave
dec
adcl
sbb
mov
push
inc
push
push
xchg
jae
pop
dec
les
lret
cmp
mov
call
testl
cmp
pop
scas
lock
mov
loope
pop
shrb
pop
roll
neg
hlt
out
std
imul
ds
mov
jno
movsb
pop
fiadds
and
cmp
insb
jae
sbb
pop
push
out
cmpsb
es
cmp
pop
sti
pop
jmp
clc
rclb
les
adc
clc
mov
cmp
jb
mov
mov
dec
es
sbb
push
sub
es
add
cwtl
sti
push
and
leave
mov
nop
fidivl
testl
jmp
scas
push
aam
rorl
and
imul
inc
fdivr
scas
mov
bound
outsb
inc
jno
jnp
jl
xor
xor
fdivs
or
fistpl
stos
jo
mov
dec
jbe
cltd
xchg
enter
dec
mov
imul
fnsave
out
add
stos
sub
les
xlat
xor
dec
jmp
add
push
jp
ret
imul
add
pop
movsb
push
push
idivl
cs
loop
cmp
adc
aam
lahf
xor
xchg
movb
aaa
dec
sub
sbb
dec
pop
cwtl
je
imul
xchg
call
push
mov
inc
mov
or
jp
mov
push
cwtl
push
dec
daa
mov
mov
mov
cmc
push
push
scas
jge
clc
fisubl
loop
xchg
sahf
cltd
cmpsl
sub
mov
jnp
and
cmpsl
dec
stc
sub
dec
push
mov
loop
mov
mov
je
mov
loopne
dec
cmp
loop
test
mov
inc
stc
and
rcr
sub
es
ja
mov
lods
lret
or
and
test
mov
and
adc
inc
test
xor
xchg
addr16
inc
in
push
jmp
int
imulb
aam
cmpsb
lock
jo
jbe
mov
es
in
in
lea
int
loop
inc
pop
inc
inc
jne
cltd
dec
mov
or
fcomp
jmp
dec
test
add
shrl
mov
xor
cmp
pop
jo
inc
in
sbb
inc
hlt
dec
notl
mov
movsb
enter
adc
fisubrl
cltd
xor
data16
lock
addr16
aad
enter
clc
push
hlt
fdivrs
into
pop
mov
sbb
dec
in
setne
jno
push
jns
push
xor
int
cmpsb
inc
push
in
dec
rclb
dec
subl
cmp
adc
cmp
or
lret
popa
push
cmp
cld
fcmove
xchg
add
and
out
cmp
add
in
xor
cwtl
fwait
push
dec
test
add
dec
test
add
mov
arpl
les
add
push
mov
cmc
push
push
or
fcoml
loopne
cltd
std
leave
and
mov
xor
stc
and
jl
add
neg
and
xor
je
in
push
or
prefetch
repnz
int
fistpll
fisubl
mov
outsl
mov
jnp
jle
rcll
lret
adc
cmpl
fsts
popa
and
push
jns
daa
push
or
movsl
sar
pop
mov
ffreep
mov
pop
movsl
adc
adc
lahf
push
std
jecxz
jno
jg
dec
in
cli
in
test
test
rorl
jb
lahf
aam
test
pop
gs
xchg
xchg
outsl
jo
rcrb
mov
xchg
jo
dec
add
pop
ret
sbb
adc
ljmp
sbb
pushf
mov
insb
jecxz
jo
cmp
dec
inc
cmp
jmp
addr16
or
idivl
dec
divb
cmp
arpl
les
inc
push
pop
sub
sub
sbb
add
clc
das
je
adc
js
jmp
inc
pop
mov
and
dec
imul
out
data16
mov
sti
into
mov
or
dec
adc
jl
sbb
js
xchg
sbb
popf
dec
je
movsl
sar
xor
data16
call
out
and
mov
xchg
loopne
cmp
cli
in
sub
int
in
pop
jge
aad
jp
aas
pop
mov
and
sub
push
mov
mov
xor
or
das
in
jae
std
inc
xchg
data16
mov
popa
aaa
subl
incb
les
scas
push
xchg
and
xlat
ret
inc
push
pop
pop
and
repnz
and
das
jns
fisttpl
test
repnz
inc
int
mov
mov
loop
movsl
pop
shll
push
mov
sbb
pop
shrb
das
or
out
imul
xchg
jbe
in
sbb
ficompl
add
loopne
mov
mov
jne
and
aam
sub
inc
jbe
adc
xor
push
out
stos
pop
cmp
xchg
xchg
or
ret
nop
pop
addr16
in
cmpsb
and
stc
mov
ret
xor
mov
xchg
xor
imul
out
dec
out
movsl
mov
inc
ret
rorl
in
fidivrl
incb
mov
ret
jmp
inc
sti
fucomi
xor
repnz
dec
insb
cmp
xlat
pop
cmpl
inc
cli
pop
pop
call
mov
mov
cmp
pop
dec
and
dec
insb
insl
add
ss
nop
nop
push
xchg
ret
inc
lods
out
cltd
cwtl
or
faddl
outsb
push
out
xchg
push
jle
sahf
or
stos
shlb
push
or
cmp
ret
stos
lret
sub
popa
subl
mov
jge
and
mov
fildll
cmpsb
lret
fs
stos
nop
icebp
pop
lea
pushf
add
andb
adc
dec
pop
jbe
popf
repz
fs
jge
out
inc
cmpsl
or
cltd
xchg
pop
xchg
lret
xor
xchg
jmp
mov
sahf
sbbb
insb
jno
int
and
hlt
jno
addb
and
adc
pop
mov
sbb
out
sbb
pop
jmp
das
mov
fmuls
sar
pop
add
fisubrl
lahf
jge
and
testl
inc
jle
outsb
xor
inc
stos
sub
pusha
or
pop
fsub
xchg
stos
getsec
arpl
jge
mov
stc
xchg
adc
lahf
je
inc
cltd
mov
faddl
mov
aad
dec
hlt
push
mov
imull
pop
jg
rcl
lret
inc
aaa
xlat
lsl
fisubrs
push
cmp
cmp
adc
imul
push
xchg
and
int
or
inc
dec
mov
cmc
add
loop
nop
mov
mov
dec
adc
data16
in
cmp
std
pop
inc
sbb
xchg
jnp
push
js
lret
jns
push
sbb
and
int
outsb
sbb
add
lods
fidivl
mov
cmp
leave
jnp
and
inc
test
jmp
xor
xor
fdivl
fs
movsb
or
out
xor
xlat
jl
cmp
xchg
dec
dec
push
jmp
mov
out
mov
sub
imul
dec
mov
xchg
jae
loop
aas
pop
pop
lock
imul
and
xor
xchg
scas
push
mov
and
mov
lds
add
add
or
mov
js
push
add
addr16
ficompl
push
cmc
xor
adc
mov
lcall
out
mov
xchg
mov
xchg
xchg
aam
jle
push
test
sub
cmpsl
nop
sarb
cmp
mov
cmc
sar
cmpsl
adc
or
jns
dec
rcrb
sbb
sub
sub
push
and
sbb
mov
iret
xor
mov
movsb
fldenv
mov
sarl
lock
insl
repnz
loop
dec
cmc
or
pop
es
mov
sub
xchg
hlt
mov
adc
test
inc
aad
pop
push
mov
add
or
xchg
fsts
dec
data16
dec
cmp
inc
cmpsl
and
or
inc
push
adc
or
xor
xor
or
fldt
ret
sbbb
outsl
pop
or
sub
adc
data16
cmp
push
push
pop
pusha
mov
popa
loopne
cmp
ja
mov
inc
xor
sbb
inc
js
je
xor
pop
arpl
imul
popa
xchg
adc
dec
divb
test
push
and
dec
sbb
sbb
test
arpl
cld
loopne
imulb
in
in
sub
pusha
stc
add
pop
mov
lods
rcll
mov
mov
jp
mov
or
lcall
lcall
data16
subb
pop
ret
ss
jl
cmp
je
ds
or
and
xor
call
pop
jns
pushf
mov
add
pop
xchg
arpl
popf
sbb
sbb
fdivs
cmp
inc
mov
pop
xor
test
push
fsubl
inc
mov
xlat
push
bound
jl
jb
cmp
push
ja
or
lea
int
add
jb
sbb
and
jmp
inc
xlat
and
iret
mov
jo
mull
clc
cld
mov
ss
inc
sahf
or
cwtl
imul
cmpsb
or
mov
call
or
and
in
mov
jge
sbb
adc
sbb
jle
mov
fcoml
dec
dec
sarl
ja
rorb
cwtl
inc
pop
lock
data16
xor
data16
push
pushl
cld
popf
lret
mov
add
mov
inc
xchg
dec
jg
sbb
out
push
jl
jno
stos
outsl
ja
adc
push
das
mov
sbb
push
loopne
mov
mov
dec
inc
or
insl
and
cmp
out
dec
test
xor
out
in
mov
xchg
or
or
out
daa
sti
jb
push
jecxz
loopne
rol
xchg
add
and
push
fdivs
mov
gs
aaa
jns
imul
leave
cmp
push
insb
lods
add
and
mov
fwait
dec
js
shrb
dec
out
lods
sahf
mov
push
loop
fidivrl
shlb
into
mov
rorl
stos
cmpsl
insl
xchg
and
pop
cmpsb
and
add
adc
nop
or
dec
pop
sub
push
inc
int3
insl
mov
push
aaa
push
push
ficoml
js
pushf
cmp
movsb
dec
mov
pop
leave
push
or
mov
inc
fnstcw
insl
mov
or
inc
popf
das
jo
jge
or
mov
aaa
loope
push
outsl
lret
sbb
sti
jne
fs
insl
add
fisubrs
push
ja
add
mov
call
js
inc
loopne
sbb
xor
in
in
add
and
fsubrp
jge
inc
jns
fisttpll
xor
pop
cli
pusha
out
out
push
mov
dec
add
add
and
jns
inc
filds
inc
iret
rorb
add
imul
stc
mov
movsl
jmp
inc
push
leave
fistps
in
clc
in
mov
or
adc
inc
fbld
mov
shlb
mov
lods
cmp
sub
fiaddl
shlb
mov
jns,pn
adc
out
cmp
xchg
adc
xchg
mov
jbe
xchg
jp
push
js
imul
and
pop
jae
shrl
clc
xor
pop
xchg
les
in
add
adc
in
pop
push
sub
inc
mov
add
mov
sbb
xor
dec
push
dec
out
movsb
stos
int
add
xchg
sbb
out
clc
enter
or
mov
aad
fildl
adc
mov
xor
js
sub
jae
adc
mov
mov
shll
fnstsw
fwait
sub
mov
dec
mov
mov
mov
add
icebp
in
sub
or
pop
pop
les
add
lret
stc
lock
mov
xlat
sbb
es
jb
and
fwait
int
in
in
pop
and
sub
add
dec
in
lahf
loop
stos
inc
xchg
jbe
push
push
or
mov
jb
mov
inc
dec
sub
movsb
rolb
sbb
je
mov
push
lahf
pop
cmp
out
ljmp
push
fcom
cmp
gs
mov
decl
js
test
jno
xchg
xchg
xor
inc
fisttpl
pmaxsw
mov
inc
cmpsb
xchg
mov
xchg
test
cmpsl
in
shr
es
xlat
push
test
mov
mov
ljmp
rcl
shl
cmc
dec
and
jb
inc
sahf
icebp
mov
xchg
test
xchg
rclb
xchg
adc
sub
mov
out
in
mov
lods
outsb
dec
loop
into
and
add
shl
inc
repnz
ja
jp
movsb
aaa
mov
fwait
pop
mov
imul
sbb
out
pop
ja
inc
mov
cmp
or
sbb
dec
dec
and
in
pop
mov
or
xchg
mov
cmp
xchg
repz
into
sbb
add
lret
cmp
fwait
jecxz
mov
pop
adcb
add
push
sbb
rorb
jmp
lcall
jb
popf
sbb
fmull
adc
sub
testb
call
xchg
mov
je
sub
aaa
pushf
pop
ret
testl
sub
mov
in
scas
test
add
fwait
dec
jnp
lcall
xchg
ds
fstpt
lds
pop
mov
loope,pn
add
test
das
std
xchg
pop
outsl
xorl
add
iret
nop
pop
mov
nop
test
jmp
clc
pop
test
sub
xchg
xor
mov
pop
cmp
or
dec
cwtl
loope
shrb
loopne
repnz
or
dec
jno
fcoml
leave
cwtl
cs
sub
pop
fdivp
stos
pop
xchg
enter
cmp
adc
dec
shll
mov
outsl
dec
xchg
movsb
outsl
jo
pushf
mov
mov
or
fwait
cmp
in
mov
fcmovb
outsb
cmpsl
xchg
xchg
sbb
mov
dec
sbb
and
inc
adc
lahf
scas
mov
jmp
fstpl
and
call
outsb
sbbb
rcrb
cmp
insl
add
lret
fdiv
sahf
add
and
insb
push
ret
es
sbb
add
ficoml
mov
jno
cmp
xor
add
jo
or
mov
push
in
mov
add
mov
sarl
das
jg
inc
cmp
mov
dec
cmp
fwait
movsb
xchg
leave
lret
jl
cmp
or
lea
cmpsb
jl
jmp
gs
addr16
sbb
inc
leave
shrb
pop
daa
add
iret
pop
xor
inc
dec
sahf
mov
sub
push
out
dec
jnp
push
scas
pop
sub
ss
in
lcall
icebp
jb
fdivrl
xor
sbb
stos
lock
pop
mov
popf
imul
fisttps
and
xchg
xchg
cmp
cmp
jo
pusha
cmp
hlt
dec
sub
or
pop
std
negb
adc
cmpsb
push
cli
push
xor
sbb
lds
cmpsl
cld
mov
cmpsl
shl
sbbl
ret
sbb
inc
xchg
neg
adc
xor
and
ss
iret
mov
push
jns
xchg
iret
and
mov
lods
mov
test
iret
sbb
mov
lods
mov
out
shrl
jg
dec
mov
lea
inc
cmpsb
pop
out
or
test
jb
nop
cmp
andb
adc
xlat
insl
or
leave
ss
ret
fldl
outsb
xchg
xchg
jns
mov
fisubrl
inc
xor
notl
ret
enter
dec
ret
mov
fdivs
testb
inc
aam
cmp
add
ret
jl
inc
adc
rcrl
mov
inc
sub
in
mov
cmpsl
int3
loope
add
lcall
adc
loope
cmp
dec
xor
pop
lock
stc
mov
push
imul
imul
lds
jecxz
sbb
addr16
fimull
out
in
push
adc
fmull
pop
pop
bound
add
sbb
in
daa
addr16
add
out
add
mov
xchg
iret
mov
inc
add
push
mov
add
and
xchg
pop
mov
push
or
call
cmc
push
cli
inc
fwait
call
add
or
lea
cmp
mov
and
sub
push
or
fbld
cmpsb
sub
sti
sub
xor
jnp
mov
es
test
clc
idivl
jae
outsl
mov
push
sbb
imul
bound
cs
dec
movsb
jp
cmpb
pop
xor
icebp
lock
out
insl
xchg
enter
xor
jmp
mov
inc
ljmp
pop
ljmp
sub
inc
mov
jle
xchg
xchg
dec
divb
inc
enter
lea
cmp
imul
mov
cmc
scas
icebp
imul
mov
je
inc
sbb
fstps
das
pusha
cli
scas
mov
push
aam
push
test
mov
gs
bound
popl
jbe
fucom
lods
pop
orl
or
xchg
mov
rcr
xchg
adc
push
scas
inc
ja
repnz
stos
test
test
mov
rorl
pop
cmpsb
cmp
leave
dec
fidivl
push
insl
dec
sarb
nop
push
mov
out
hlt
fwait
jbe
add
pop
pop
and
dec
insl
lcall
mov
cmp
fs
cmp
lret
sub
cmp
sahf
jae
test
sti
ja
repz
cmp
imul
lock
aas
cmp
push
mov
dec
dec
lods
icebp
aaa
jo
inc
mov
lods
pop
jne
es
mov
sub
xchg
scas
das
fs
sti
push
out
sbb
xlat
and
push
int3
cli
in
pushf
pop
sub
mov
call
pop
inc
mov
scas
sub
inc
les
sub
xchg
inc
lds
or
jle
pop
shl
or
movsl
cld
push
repz
jp
push
inc
jnp
and
es
jg
ret
aam
aaa
mov
movsl
andb
cmp
in
test
adc
push
pop
pop
jns
repnz
lods
push
int3
mov
sub
adc
sub
fs
sti
add
inc
jg
pop
jecxz
jle
dec
cmp
push
and
jnp
cld
xorl
orl
out
aas
jno
push
cmpsb
dec
fs
popf
push
sahf
movsb
lcall
push
and
loop
dec
js
aam
rolb
or
ja
xor
jmp
mov
cwtl
dec
iret
into
xor
outsl
das
or
int3
cld
lahf
ss
loop
xor
cli
into
jae
push
lret
mov
jmp
sub
mov
out
iret
jmp
jae
out
insl
and
pop
dec
inc
repnz
scas
cmp
bound
xchg
inc
repnz
add
sbb
and
mov
iret
push
sub
dec
push
subl
cmpsb
lret
imul
jg
jae
jp
imulb
sub
sub
leave
fsubs
stos
cmpsl
aad
stc
mov
mov
xor
pusha
xchg
scas
push
pop
iret
inc
jb
pusha
sbb
adc
pushf
push
pop
cmp
inc
xchg
inc
jl
jl
adc
jl
popf
cmp
add
pop
dec
pop
mov
mov
mov
mov
mov
faddp
loope
cmpb
or
scas
push
inc
aas
inc
fsubrs
add
fucom
xor
outsl
xlat
dec
push
sahf
imul
dec
inc
jns
jmp
icebp
xchg
insl
dec
sub
imul
or
icebp
nop
jb
sub
jle
les
mov
icebp
lret
jae
ss
int3
popf
fidivl
out
fstps
popf
jl
outsb
je
pop
stc
push
adc
movsb
aam
jno
cmp
jo
inc
mov
xlat
negl
insb
and
lods
in
repnz
pop
mov
cmpsb
cmp
fsubrs
inc
data16
lahf
jnp
or
mov
les
test
jae
stos
ljmp
push
pop
fdivs
lods
mov
sub
fwait
mov
pushf
shll
xor
ljmp
add
mov
ss
into
in
stc
lret
loop
xlat
rorb
mov
mov
inc
pop
call
push
mov
mov
fsub
jle
movsl
test
ret
push
add
js
dec
cmc
aas
dec
push
clc
loop
push
inc
xchg
jbe
dec
cwtl
mov
or
outsb
stos
pop
lss
pop
dec
xchg
icebp
mov
push
adcl
movsb
sbb
xor
in
repz
lock
and
aaa
lea
or
pop
pop
xchg
xor
or
imull
je
pushf
insb
inc
bound
jmp
mov
or
and
push
sbb
jno
adc
fsubl
gs
xchg
and
add
sub
arpl
rclb
insb
mov
inc
pop
mov
daa
or
fildl
push
movsb
bound
or
rcrl
imul
and
dec
push
leave
xchg
inc
inc
cmpsb
scas
sbb
cmp
jle
mov
adc
cmp
inc
mov
inc
mov
cwtl
mov
pop
mov
jecxz
cmp
imul
mov
dec
sub
dec
dec
inc
mov
inc
test
imul
push
pop
xchg
push
mov
sub
popa
sbb
mov
std
stos
mov
push
js
movl
inc
fcoms
mov
xlat
or
ja
mov
cmp
lahf
mov
in
add
repnz
ljmp
cmp
add
cmpsl
jb
arpl
pop
pop
mov
sbb
call
xchg
mov
mov
fs
cltd
roll
lea
mov
aaa
and
pop
lret
movsl
push
and
xchg
mov
jae
fiaddl
nop
sub
faddp
ds
ror
loopne
adc
sub
dec
nop
mov
jae
outsb
and
das
mov
lcall
mov
adc
mov
xchg
push
mov
mov
clc
jecxz
cld
pop
inc
loop
les
mov
mov
jg
dec
dec
inc
mov
dec
nop
xchg
mov
cs
pop
add
mov
mov
dec
push
xor
or
je
ss
cmp
pusha
cli
insb
lds
dec
cli
insb
es
out
pop
mov
setne
lret
iret
out
fistl
fidivl
push
fcoml
push
sub
or
xchg
bound
push
xor
add
pushf
insb
and
je
out
loop
and
xchg
pop
cli
mov
je
cmp
push
jge
cli
mov
mov
mov
cmp
cli
mov
or
mov
jmp
and
sbb
cs
lods
jg
push
mov
cmpsl
jle
in
in
push
mov
out
lret
imul
in
cld
or
jnp
adc
sbb
cltd
dec
or
push
outsb
or
repnz
cwtl
mov
adc
or
ss
stc
push
xchg
xchg
sbb
jmp
inc
mov
jle
and
lret
add
xor
pop
cmp
mov
pop
and
aaa
dec
ss
jae
push
fidivs
mov
popf
shll
out
adc
ja
lds
mov
je
mov
rclb
sbb
popa
adc
mov
lcall
sub
mov
aas
stc
loop
scas
je
mov
test
cld
scas
test
xor
int
test
cmp
xor
sarb
rolb
dec
or
add
aas
movsl
pop
or
hlt
sbb
ljmp
fwait
pop
daa
fcomps
repnz
mov
add
jbe
iret
out
aad
ret
decb
mov
xor
ss
inc
jns
rorl
sub
enter
loope
cmp
inc
cmp
cmpsl
adc
mov
andl
imul
sub
addr16
lahf
rol
icebp
sbb
mov
pop
pop
mov
sub
decb
xchg
mov
mov
das
js
mov
inc
push
scas
mov
mov
loopne
scas
div
adc
push
fcomps
outsb
push
inc
mov
cs
insb
pop
dec
xor
inc
loope
insb
pop
pop
mov
out
subl
inc
daa
lcall
push
stos
jle
cmp
outsb
inc
pop
mov
aaa
mov
gs
mov
call
out
lret
mov
out
rcr
stos
hlt
xchg
ja
inc
pop
test
popa
sbb
jmp
in
or
push
mov
pop
imull
jne
std
insb
jmp
scas
jl
or
movsl
and
fadds
add
mov
loop
push
cmp
inc
popl
mov
mov
push
pop
jno
cli
mov
xchg
mov
mov
rcr
arpl
dec
xchg
icebp
bound
cmp
xor
pop
lea
sub
ret
aad
pop
sbb
dec
sbb
dec
insb
movsb
mov
xor
jp
xor
dec
push
cmp
mov
push
sbb
pop
movsl
test
fucomi
in
add
hlt
out
out
cmpsb
repnz
outsb
ja
jnp
cmp
and
insb
mov
call
push
in
push
loopne
xchg
sbb
jg
js
jl
into
jb
scas
mov
arpl
mov
xchg
aas
add
push
and
dec
popf
sti
rol
testb
mov
test
mov
pop
in
stos
in
jnp
sub
test
js,pt
pushf
pop
sbb
mov
cld
add
inc
cld
es
sbbb
stc
cmp
and
mov
mov
sbb
testl
js
imul
aaa
sarl
imul
fdivrs
mov
and
cmpsb
xlat
mov
arpl
xchg
jecxz
pop
loopne
push
popa
lock
adc
mov
cltd
movsb
xchg
jecxz
dec
pop
and
dec
pushf
and
aas
lea
rcrl
dec
pop
cld
adcb
and
add
fs
xor
fwait
daa
inc
scas
pop
pop
jl
test
nop
or
jg
popa
out
addr16
and
jns
mov
dec
jmp
xchg
mov
les
rcl
rorl
and
add
add
dec
mov
jbe
jo
dec
mov
jne
inc
and
testl
pop
out
cmc
jp
mov
repz
xlat
and
xchg
xor
insb
add
cmp
notb
cmpsl
xor
adc
ljmp
mov
or
sub
push
dec
push
test
xor
push
jge
mov
fsubs
mov
inc
dec
addr16
mov
outsb
mov
loope
nop
jns
mov
loopne
testl
sub
lahf
in
test
sarb
jns
ljmp
and
adc
cmc
outsl
jns
push
cmp
out
xlat
in
inc
mov
mov
test
adc
and
and
sbb
adc
xchg
lock
sti
or
cwtd
mov
push
ljmp
pop
sbb
ret
data16
test
les
mov
cmp
fwait
mov
mov
sbb
ljmp
xchg
pushf
add
dec
imul
dec
jl
inc
sbb
scas
pop
leave
cs
mov
push
jne
iret
xchg
inc
dec
ss
and
pop
mov
jne
sbb
inc
fxch
jb
inc
mov
mov
out
cmpl
inc
notl
sbb
adc
jg
inc
sti
test
inc
adcl
dec
sar
dec
mov
test
rcr
xchg
movsl
daa
inc
sti
pop
cwtl
lret
pop
ds
in
mov
dec
shrl
jp
dec
in
cmpsb
iret
mov
xor
push
xor
cmpxchg
push
pop
push
out
xchg
stos
adc
gs
sub
pop
in
xchg
out
xor
mov
mov
call
dec
dec
mov
mov
mov
shrl
outsl
push
inc
mov
scas
adc
out
adc
mov
lcall
xor
test
sub
popa
pop
enter
mov
xlat
dec
mov
jbe
cs
xor
add
xchg
lods
fdivrs
mov
mov
inc
inc
xchg
push
or
sbb
xor
scas
pusha
add
call
mov
fistpl
popf
sbb
dec
sbb
mov
xchg
ret
mov
pop
dec
out
test
arpl
into
lods
mov
jl
repnz
movsl
test
inc
mov
repnz
inc
mov
aas
stos
ds
cwtl
testb
pop
fsubrs
push
jmp
xchg
xor
sbb
in
cmp
pop
es
cs
jno
sbb
cltd
jmp
cs
jb
mov
push
inc
shll
sub
sbb
sub
jnp
dec
adc
mov
filds
mov
pop
fsubrp
test
jge
sub
sub
push
jp
mov
lods
add
mov
xor
out
aam
test
gs
push
enter
sub
or
cmp
shll
outsb
xlat
cmpsb
fxam
xor
adc
push
aam
test
and
pop
sbb
fadds
loope
pop
cmp
push
mov
sbb
data16
aas
std
xor
sub
xchg
lock
inc
sbb
jnp
std
outsb
movb
mov
fcomps
test
sbbb
push
fidivrl
je
inc
pop
push
cmpsb
ja
xor
pop
fcomps
mov
sbb
pushf
shll
out
sub
xor
rcr
orb
stos
add
mov
out
test
loop
arpl
adc
adcl
aam
pop
push
sub
mov
push
adc
and
lods
sub
dec
andb
cli
mov
pop
xor
push
add
inc
lahf
lods
rclb
popa
add
pop
push
outsb
mov
icebp
mov
and
jno
xchg
mov
popl
sbb
imul
push
mov
lahf
sub
lcall
aas
clc
test
push
js
stos
push
out
and
stc
js
test
pusha
and
cli
cli
mov
push
mov
sub
push
sub
mov
sti
call
pop
jmp
pop
cwtl
mov
test
ds
and
jecxz
out
cmp
testb
or
cmpl
cmpsb
lret
out
xor
js
movsw
out
js
adc
pop
dec
sub
cmp
stc
nop
mov
ljmp
xchg
dec
mov
xchg
data16
adc
dec
and
jae
mov
jl
lcall
outsl
testl
aas
adc
pusha
push
mov
inc
lret
aad
aam
rcr
adc
cmp
mov
popf
out
or
pop
dec
xlat
push
and
cmp
aaa
in
adc
test
sbb
add
mov
or
movsl
xlat
test
push
pushf
rclb
mov
pop
jbe
aam
mov
aas
adc
adc
mull
pusha
dec
inc
je
sti
xchg
enter
out
sbb
loop
push
pop
daa
out
push
mov
xor
push
test
in
adc
xor
xchg
dec
cmc
xor
lea
sbb
lea
mov
push
lea
pop
lea
dec
mov
lods
push
clc
mov
xchg
pop
jnp
aad
and
pop
pop
jmp
or
mov
push
shlb
iret
out
fwait
aas
or
call
fsubs
jo
pop
out
sbb
outsl
jne
nop
adc
fistpll
pushf
gs
dec
out
dec
push
ret
lds
sbb
insb
sbb
cmpl
mov
test
lods
mov
mov
cmp
push
pandn
popf
pop
scas
leave
sbb
pop
mov
mov
popf
fsubr
push
ja
mov
and
test
cmp
xchg
and
sub
mov
test
jmp
jle
mov
dec
fmull
test
hlt
int
sbb
xchg
adc
pop
xor
dec
add
jbe
jns
fwait
xchg
test
shlb
imul
pop
pop
push
dec
adcb
mov
and
and
jne
mov
scas
sahf
sub
pop
jbe
movsb
xor
int3
xchg
xchg
push
jae
and
pop
in
je
hlt
xchg
into
enter
sbb
jnp
inc
enter
jge
jae
jp
cmpsb
cli
sbb
mov
popa
ficoml
sarb
adc
outsl
ret
dec
pop
add
cltd
dec
fidivrl
test
and
push
out
test
test
stos
mov
pop
ret
add
adc
mov
icebp
rol
sbb
int
fidivs
xchg
xlat
xor
mov
test
inc
xchg
dec
mov
xchg
push
insl
sarb
sbb
mov
and
rorb
orb
test
out
loop
add
cmp
faddp
inc
and
sub
loop
mov
add
cmpsb
cmp
pop
fisttpll
cmp
imul
ja
xorl
inc
mov
pushf
pop
jnp
movsl
adc
xchg
sbb
adc
xchg
mov
sbb
mull
mov
dec
pusha
jle
dec
jmp
jne
and
pop
sbb
push
inc
out
mov
into
jbe
xchg
ds
lods
popa
imul
sbb
sbbl
movsl
ljmp
cld
pusha
pusha
test
sarl
push
dec
jno
push
into
adc
ja
out
in
pop
push
and
cmp
test
repz
and
pop
and
dec
pop
test
mov
stos
sbb
jnp
jmp
or
mov
test
and
lret
les
aas
mov
and
cmp
sahf
xchg
or
xchg
mov
xchg
adc
xor
fisubs
push
jnp
stc
popf
cmpsl
loop
ds
int
loope
ja
js
push
mov
repnz
add
repnz
popf
adc
clc
adc
test
arpl
cmp
add
shrb
sub
adc
cs
adc
pop
in
jp
cmp
cwtl
xor
push
mov
cmp
sbb
xor
lods
pop
sti
andl
loopne
sbb
test
imul
adc
sub
and
test
stc
push
pushf
dec
mov
negb
sbb
in
or
daa
into
ja
pop
sahf
or
sub
adc
and
jp
push
sahf
mov
xor
pop
sub
push
add
fcmovne
js
in
push
and
mov
cli
shlb
inc
sub
mov
prefetch
in
add
dec
fwait
adc
pop
xchg
push
sub
xlat
mov
mov
xor
dec
push
mov
mov
adc
mov
addr16
outsb
icebp
xchg
lret
inc
call
fsts
sub
jae
mov
ret
xchg
sub
ljmp
pop
dec
inc
xor
dec
test
addr16
enter
aam
sbb
lret
arpl
push
xchg
sbb
loope
in
inc
jb
das
lods
xor
jmp
push
xchg
fwait
inc
loope
leave
push
cli
inc
or
or
hlt
aaa
das
sub
sti
fwait
or
shlb
sbbb
dec
jno
mov
shlb
mov
dec
xchg
ljmp
sub
sbb
or
bound
lea
int3
push
shrl
jns
mov
out
sbb
pop
jae
pusha
out
cmp
jle
and
imul
sbb
cmp
test
das
gs
jge
test
inc
sbb
std
mov
jmp
cmp
jo
cltd
and
dec
in
and
jg
inc
dec
addr16
shrl
dec
add
inc
or
and
push
outsl
shll
mov
in
push
in
rcl
ja
lret
mov
lret
inc
shl
movsl
int
loop
or
in
or
jmp
fs
pusha
lret
jne
inc
test
lock
cmc
or
sti
pop
xor
pop
jge
loope
repz
arpl
ret
sub
xchg
bound
lret
sbb
add
pusha
cld
add
lock
inc
inc
flds
sub
js
push
das
add
cmpsb
popf
jge
and
add
adc
fbld
stos
jne
jne
sbbl
xchg
jmp
mov
lret
mov
sub
add
sarl
sub
aad
push
push
push
inc
push
cld
enter
sarl
hlt
jo
ss
cmp
int
mov
mov
push
and
jno
js
ds
popa
xchg
mov
test
push
dec
stc
jns
arpl
std
movsl
add
and
or
mov
and
mov
imulb
int
sbbb
lcall
data16
mov
movsl
dec
daa
faddl
lds
mov
jnp
enter
add
inc
or
or
mov
jle
mov
test
sti
test
jbe
bound
fistpll
insb
mov
mov
dec
fs
pushf
sbb
ds
je
pop
sub
jmp
popa
mov
scas
mov
mov
dec
add
jecxz
lods
jne
mov
jp
faddl
dec
inc
push
cmp
add
pusha
notl
loop
loop
arpl
arpl
and
out
and
js
in
aaa
std
stc
cs
inc
push
movl
subl
xchg
dec
xchg
ret
adc
movsl
lock
jno
roll
xchg
lret
sbb
rorb
inc
inc
sub
in
bts
cmc
jo
push
cmc
ds
or
jmp
cmc
jb
mov
sub
sub
nop
xor
or
xlat
das
xor
jle
test
xor
add
xor
cmp
pop
outsl
addr16
frstor
pop
fsubrl
mov
andb
call
push
jecxz
pop
ficoms
fcoml
inc
pop
and
je
mov
sbb
mov
xor
loop
pop
or
cmp
arpl
adc
push
into
push
xlat
cmpb
adc
imul
inc
out
mov
arpl
int3
jmp
sbb
ja
outsl
push
pop
jno
aas
inc
push
outsb
mov
inc
sub
add
pop
mov
repz
fprem
pop
pop
jae
inc
adc
ja
jnp
inc
add
pop
mov
cmpsl
xor
mov
xchg
lds
in
xor
adc
les
mov
fbld
inc
sub
add
and
mov
out
mov
push
mov
or
add
xor
push
vaddps
pushf
dec
jecxz
cwtl
ja
push
insl
shrb
jbe
jno
or
orb
shlb
out
imul
cmpsl
das
adc
jnp
and
pop
mov
jns
mov
loop
out
pop
push
jmp
insb
fs
adc
lret
call
pushf
cld
imul
bound
mov
repnz
mov
xor
mov
cli
xlat
fwait
cmp
mov
mov
ja
dec
imul
call
dec
pop
stos
jae
in
jbe
mov
daa
dec
lods
cmpsl
push
dec
sbbl
fcmovu
andl
outsb
sbb
sar
pop
mov
popf
mov
rol
sbb
sub
outsl
in
scas
pop
sub
adc
jo
sbb
cmpsl
sub
loop
sbb
inc
or
push
push
insl
out
lea
nop
sub
movsb
bound
and
xchg
int
push
stos
popf
pop
clc
scas
mov
cmp
test
push
xlat
dec
popf
cli
sub
scas
adc
fcoml
mov
test
add
mov
sub
popa
mov
fldt
inc
in
rorl
mov
in
pop
shll
jp
je
test
inc
mov
inc
sahf
js
out
and
int
adc
call
les
pop
pop
ljmp
imul
pop
dec
xchg
imul
add
jbe
dec
jne
out
mov
mov
shll
adc
loopne
test
repz
dec
fwait
pop
mov
xorb
call
shll
mov
negl
push
sub
inc
and
jbe
daa
addr16
andb
inc
inc
inc
xchg
mov
mov
pop
cltd
jle
mov
sar
mov
sub
ret
xor
int
pop
popa
pop
sbb
subb
pop
xlat
cli
outsb
xchg
lds
fisubrl
cwtl
mov
mov
cmpsl
orb
mov
mov
add
in
std
cmpl
ds
out
lods
notb
cmc
imul
call
push
cmp
mov
jp
sub
mov
mov
add
inc
mov
push
sub
or
aad
gs
lahf
pmulhw
inc
stos
addl
pop
xor
push
fstpl
aad
mov
rol
jp
jns
dec
add
pop
aad
mov
cmp
out
push
add
mov
jnp
cmpsb
jnp
pushf
or
std
mov
push
sbb
pop
out
lea
dec
popa
call
inc
lock
in
mov
ficoms
lock
mov
aas
xchg
icebp
lret
add
call
insb
dec
dec
sbb
inc
fprem
fidivs
bound
xchg
inc
repnz
pop
sub
push
add
stos
and
pop
xchg
cmp
mov
dec
cmpl
in
mov
mov
push
loopne
mov
or
fmuls
arpl
imul
inc
orl
stos
rorl
mov
xchg
imul
jne
adc
adc
movsl
cmp
js
stc
ret
stc
pusha
aam
enter
add
pop
hlt
xor
and
cmp
cmc
mov
xor
ds
test
add
adc
xchg
jbe
sub
pop
push
mov
xor
and
jg
sub
movsl
sub
xchg
sub
imul
outsl
mov
mov
push
cmp
jae
insb
mov
pop
mov
xor
or
jae
or
movsb
mov
mov
dec
loope
adc
test
jecxz
rolb
sub
or
cmp
cltd
loope
pop
insb
mov
addr16
pop
dec
or
fcoml
inc
mov
test
test
jb
cmpsb
cld
ror
add
jle
jecxz
fsubl
cmp
rclb
outsb
jo
pop
mov
cmpsb
or
xor
out
inc
mov
push
jge
hlt
mov
mov
jl
dec
ret
xchg
add
out
loop
mov
imul
push
in
push
push
ds
aam
in
fidivrl
inc
imul
cmpb
sbb
jnp
pop
icebp
xor
orb
lret
inc
aas
mov
inc
pop
out
cwtl
xchg
xchg
pop
dec
bound
test
add
aaa
push
cmpsb
adcl
sub
sti
sub
imul
std
or
add
in
fiadds
dec
xacquire
enter
push
dec
repnz
and
cs
ret
insl
enter
sbb
repnz
imul
xchg
daa
dec
push
into
sti
roll
scas
adc
pop
mov
xchg
push
mov
fnstsw
fdiv
addl
cwtl
cld
scas
aas
xchg
lahf
ret
cmp
mov
xorl
adc
or
ds
xchg
pusha
clc
pop
sub
daa
jg
pop
adc
popf
ret
sub
es
lahf
inc
repnz
jae
and
lock
std
sbb
lret
sarl
jno
mov
or
ret
mov
cmp
push
mov
or
inc
ja
pop
add
mov
pop
fldl
mov
push
pop
push
sub
jg
jl
stos
xor
mov
mov
pop
cli
jns
xor
pusha
addr16
pusha
daa
inc
xor
mov
or
jae
mov
pop
lret
pop
jmp
in
jns
pop
pop
sbb
iret
sbb
and
mov
pop
sbb
pop
add
enter
push
mov
xor
scas
or
cld
adc
testl
mov
out
inc
mulps
sub
and
out
and
jg
cld
jo
pop
imul
aad
pop
jl
addr16
jl
arpl
adc
and
ss
and
ds
sub
fiaddl
test
cmpsl
nop
adc
xor
dec
mov
outsb
pop
jmp
mov
loope
stc
lret
ret
xchg
loop
xchg
in
fxtract
ja
pop
mov
hlt
fs
jle
dec
movsb
enter
test
mov
fnstsw
les
inc
cmpsb
or
push
add
mov
icebp
test
push
js
and
jns
arpl
sbb
dec
sbb
lds
sarb
pop
je
data16
rcl
xor
sub
adc
jp
in
mov
popa
ljmp
andl
cmp
cmp
enter
dec
std
cmp
jae
mov
sti
xchg
xor
es
out
jle
aas
leave
out
inc
je
cmp
push
in
enter
jne
and
mov
cmpsb
outsb
jl
push
in
andb
mov
mov
push
inc
pop
data16
dec
push
adcl
fcomps
lret
enter
dec
in
repz
test
ja
out
pusha
jns
inc
push
test
cmp
sub
in
test
and
movsl
pop
inc
ja
js
sub
jo
lock
mov
push
inc
pop
and
jne
sti
mov
mov
jmp
and
mov
imul
mov
andb
cmp
dec
int
ret
mov
mov
dec
pushf
cmp
fwait
mov
cmc
arpl
jmp
mov
stos
sbb
add
adc
fwait
jnp
dec
cwtl
mov
pop
js
lret
push
xchg
jbe
out
out
push
adc
outsl
orl
pop
mov
push
xor
cs
lahf
ret
pop
outsl
iret
insb
sub
outsb
ljmp
sbb
push
sub
into
mov
or
or
int
xchg
jmp
mov
mov
test
icebp
mov
cld
enter
jno
cmp
sahf
jmp
push
gs
add
mov
mov
push
leave
repnz
fistpll
mov
lods
sbb
jp
pop
stos
in
mov
je
jmp
push
stos
adc
cmp
pop
jp
sub
xlat
icebp
in
jb
pop
add
xor
sahf
les
inc
in
pop
cwtl
fbstp
xchg
pop
pop
cmp
or
mov
or
adc
outsl
test
mov
add
data16
dec
in
int
adc
xchg
out
jb
xchg
mov
movsl
testb
mov
lock
test
sarl
fidivrs
mov
in
imul
icebp
in
movsl
xchg
or
stos
lea
adc
push
ret
cmp
jle,pt
mov
shrb
scas
popa
jae
daa
jge
mov
rcrl
lahf
mov
hlt
push
push
add
push
les
pop
cmp
daa
jne
push
xor
sbb
ljmp
adc
pop
xor
inc
hlt
sbb
or
mov
sub
mov
xchg
sub
jle
jge
mov
push
lods
cmp
imul
add
das
pop
bound
lret
mov
jns
xchg
xchg
icebp
pop
ljmp
cltd
mov
ficomps
mov
out
cmp
std
mov
mov
mov
mov
mov
stos
je
mov
rorb
and
pop
in
cmpsb
mov
pop
lcall
add
push
mov
or
mov
lcall
pop
xor
mov
daa
pop
lahf
clc
das
sbb
or
cmp
sbb
mov
cwtl
out
outsl
rcrl
adc
in
inc
add
pop
mov
pop
xchg
sbb
and
hlt
ss
adc
jns
leave
pop
int3
sbb
cmp
int3
jp
inc
inc
push
gs
pop
mov
mov
push
loop
pop
cmc
cs
push
dec
mov
aad
leave
add
push
cmp
cmp
ret
mov
mov
or
mov
aas
cmc
iret
popf
test
cmp
cmp
xchg
imulb
mov
int3
mov
fiadds
rcll
mov
or
repz
lret
stos
je
test
int3
sub
or
and
loop
fdivr
inc
incl
cmpsb
and
scas
ds
and
push
push
lahf
mov
fsub
adc
scas
dec
or
fsubrl
xor
imul
cmp
in
ds
pop
out
rol
sbb
sub
push
dec
pop
jge
mov
test
int
aam
xor
pop
pop
mov
dec
nop
fdivrl
andl
cmp
pop
cmp
push
push
fprem
es
loop
mov
repz
std
jle
mov
mov
xor
fstl
dec
or
fndisi(8087
mov
pop
dec
movsl
sub
xchg
imul
daa
rolb
jmp
pushf
insb
lahf
int3
test
pusha
insl
stos
cmc
jmp
dec
in
shr
xchg
lods
jl
add
mov
xchg
xchg
and
sbb
call
in
test
addr16
or
jo
adc
subb
lret
mov
lods
aaa
out
cmpb
push
sarl
push
adc
dec
repz
xor
mov
push
aaa
outsl
jns
test
mov
mov
icebp
cmp
int3
jo
popa
jnp
mov
mov
imull
imull
mov
aam
jp
push
pop
gs
js
xor
data16
xchg
fsubl
loope
cli
scas
or
add
and
mov
mov
mov
xor
inc
adc
jp
mov
data16
and
out
incb
sub
cmpsl
rclb
aaa
sarl
jmp
sarl
repz
out
xorl
pop
add
scas
aas
out
in
or
cld
pop
stc
sub
and
adc
mov
push
test
enter
xchg
push
and
jg
jb
repnz
test
dec
in
in
adc
jb
cmpsl
push
sar
mov
jo
inc
jg
pop
mull
icebp
lods
xlat
cmpsb
mov
or
in
repz
hlt
adc
push
or
stos
je
inc
dec
loop
pusha
insl
imul
inc
repnz
mov
sbb
ror
imul
cmp
outsb
mov
push
adc
loop
scas
sbb
in
icebp
sub
sub
pusha
push
adc
lcall
pop
mov
xchg
push
lods
mov
push
jnp
push
xchg
push
mov
je
lahf
test
inc
mov
and
fstpl
push
jecxz
xchg
insb
mov
adc
lahf
dec
fistpl
push
lds
jecxz
add
lods
cmp
inc
loop
and
repnz
push
mov
ret
adc
arpl
push
xchg
and
and
push
add
pusha
int3
aas
mov
ds
mov
in
jno
orl
push
fstpt
out
jae
inc
outsb
mov
add
xchg
call
nop
dec
shlb
cmp
fdivs
bound
mov
sub
into
rorl
lret
sbb
out
mov
test
adc
loop
cmp
bound
mov
notl
outsb
and
popf
mov
sbb
rolw
aam
cld
jmp
cld
hlt
jl
cmp
adc
lret
sbb
and
jl
push
mov
es
dec
clc
mov
adc
cwtl
or
mov
mov
fcmovne
push
ja
add
rclb
xchg
clc
push
and
or
sub
in
add
in
rcrb
sub
mov
pop
fwait
dec
pusha
pop
cmp
js
mov
pop
aaa
call
mov
pop
iret
sti
jecxz
iret
pop
scas
dec
out
cli
adcb
cwtl
add
into
dec
imul
mov
fistpl
pop
adc
pop
enter
out
stos
movsb
xchg
jbe
mov
je
shl
out
adc
loopne
sub
add
sub
mov
mov
inc
dec
mov
adc
xchg
pop
dec
mov
inc
jbe
outsb
je
ret
mov
xor
inc
sbb
jp
or
js
inc
push
and
clc
sub
sub
adc
cltd
push
pop
aad
xchg
xor
rorl
pop
insl
cmc
dec
scas
inc
test
pop
bound
int3
cmpsb
sbb
sub
add
jp
hlt
jns
insb
xor
add
test
jnp
cli
push
pop
and
gs
out
adc
pop
mov
inc
cmpsb
mov
imul
inc
adc
mov
cmp
lahf
repz
xlat
rcr
xchg
test
lods
les
pusha
js
fnstcw
sti
pop
pushf
pop
xchg
fisubl
jp
fnstenv
call
xchg
cmpsb
inc
lods
xchg
scas
nop
pop
push
popl
sbbl
xor
fsts
and
cmp
pop
fmull
test
outsb
out
pop
xchg
pop
js
inc
aam
lret
notl
fs
popf
xor
into
icebp
aam
sbb
dec
data16
fidivrl
mov
mov
lds
mov
in
cmp
test
lock
mov
pop
sbb
jle
int
or
xchg
or
addl
aas
dec
dec
cmp
lcall
mov
stos
pop
mov
aas
stos
cmp
inc
ss
pop
insb
xchg
in
inc
mov
jmp
sub
mov
xor
jl
sarl
or
dec
lret
xchg
and
scas
dec
cli
fucomip
ret
push
ljmp
adc
inc
fs
enter
mov
sub
stos
cmp
mov
popa
jge
xorl
lds
mulb
mov
mov
wbinvd
mov
adc
xor
cltd
ss
stc
lods
jle
movsl
mov
into
insl
sub
mulb
gs
sbb
or
cli
outsl
push
incl
out
add
xor
push
push
adc
xchg
pop
test
loop
ret
sbb
xor
pop
into
mov
sub
mov
xrelease
add
testb
jbe
adc
je
ja
sbb
pop
push
rorb
jo
jle
push
inc
mov
dec
mov
sub
insl
call
inc
mov
add
ljmp
daa
lods
xchg
negb
fbld
ss
mov
aam
ret
xor
dec
push
loope
cmp
lcall
pop
push
movsb
test
push
mov
add
pop
jns
mov
aam
jmp
out
sbb
loope
jge
sbb
xchg
mov
arpl
sbb
fstps
sbb
add
je
add
push
lret
dec
jo
clc
push
mov
sti
xchg
iret
lret
cmp
sub
fs
or
and
iret
and
ljmp
loop
hlt
call
adc
add
jge
jge
mov
sub
mov
lds
pop
push
mov
jae
jnp
cmc
cmc
ret
sub
dec
addr16
ss
inc
dec
shll
push
repnz
cmp
cmpsb
es
sbb
ja
test
mov
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
jns
add
pop
stos
fistpl
mov
jl
test
arpl
les
mov
or
std
fnsave
dec
int3
int3
sbb
xchg
adc
cmp
mov
in
lea
inc
sub
and
dec
leave
sub
pop
inc
das
inc
mov
adc
add
js
mov
arpl
pop
jmp
imul
cmp
xchg
arpl
insl
inc
enter
mov
xchg
imul
fcoml
aaa
sub
ret
mov
test
adc
push
cmp
and
shrb
divl
adc
adc
pop
ds
shll
lods
pop
mov
xchg
scas
das
outsb
sbbb
adc
fnstsw
pop
and
inc
dec
gs
aam
aam
dec
scas
arpl
popa
and
sti
int3
out
cmp
adc
shrl
jne
pop
push
jge
loopne
dec
xlat
add
ds
xor
sub
aam
xchg
mov
pop
mov
insl
xchg
mov
rclb
es
xor
sti
ds
adc
jnp
push
les
popf
lock
repz
sbb
cli
add
pop
incl
mov
sbbl
xchg
lahf
and
cmp
and
jmp
stos
cmp
out
mov
adc
jns
jae
jo
aaa
jo
adc
test
mov
lea
dec
stos
leave
cmp
pop
push
shrb
cmpl
cmpsb
rcrl
lret
adc
fdivrs
pop
or
outsl
sbb
out
call
out
xor
stc
and
flds
inc
push
ret
xor
scas
test
mov
fcomip
xchg
and
and
sbb
aad
int3
fcomps
inc
mov
inc
ds
adc
adc
loop
mov
cmc
out
xchg
cmp
call
cld
in
mov
call
dec
mov
mov
aam
fldenv
dec
mov
push
cmp
pop
scas
int
sub
xor
es
inc
mov
mov
add
mov
enter
jle
xchg
xor
shr
xor
and
stos
int
mov
imul
mov
movsb
push
je
mov
mov
out
sti
aad
jnp
jnp
out
bound
movsb
stos
repnz
inc
bound
mov
push
jnp
cs
push
in
sub
dec
mov
out
inc
es
test
pop
es
dec
cltd
test
fdivl
adc
xorb
mov
cmp
jo
sbb
arpl
inc
movsl
pop
inc
adc
stos
pop
mov
inc
aaa
adc
lret
cmc
lock
icebp
cmpl
adc
in
pop
xor
in
and
or
pop
mov
inc
mov
popf
push
imul
xchg
lods
jno
lret
aaa
mov
andl
fwait
dec
cmp
pop
shrb
sub
pop
mov
mov
push
jg
out
mov
lahf
sbb
or
imul
sarl
in
mov
insl
xchg
adc
sbb
and
pop
inc
hlt
loopne
lock
add
fsubrl
sub
and
aam
and
aas
inc
push
cmp
sub
cmovle
cs
movq
les
and
push
iret
stos
fldt
jno
icebp
cltd
pop
sbb
popf
push
mov
mov
inc
dec
or
stc
fisubrs
repz
ja
or
jno
sbb
ja
pop
stc
or
pop
ror
cmp
mov
and
popa
stos
out
sbb
push
in
sub
add
and
xchg
xor
pop
ret
xor
sbb
sub
cmp
lock
xorl
push
jp
pusha
jle
xor
rclb
pop
pop
mov
and
hlt
pop
fists
pushf
addr16
ficoms
jle
push
test
jl
shll
cmp
cmp
jnp
xorl
mov
dec
addr16
scas
repnz
insl
mov
mov
cmpsb
shll
cmpsl
inc
push
mov
xchg
dec
scas
push
push
aam
and
and
repnz
cmp
dec
jl
aam
insb
stc
dec
sbb
sbb
cmpsl
inc
cmp
adc
iret
out
adcl
pop
jp
cmpl
pop
ret
aam
sbb
pop
cli
pcmpgtb
mov
js
mov
insb
mov
int3
scas
xchg
adc
sub
ds
jmp
icebp
loop
icebp
mov
jle
cmp
out
xor
push
fs
loop
addr16
rolb
push
sbb
and
testl
mov
stos
aam
xor
lcall
fdivrs
insb
add
dec
adcl
in
pop
push
mov
jg
clc
aad
scas
aam
adc
pop
addr16
mov
pop
cmp
clc
sub
gs
call
dec
arpl
repnz
dec
push
loop
pop
pop
push
cmpsb
lret
pusha
add
dec
jb
jne
dec
and
rcll
lahf
iret
stc
sub
sar
adc
mov
arpl
dec
push
fistl
mov
xor
push
mov
ret
mov
and
jg
push
repz
fildl
push
icebp
mov
outsb
xor
push
push
add
pop
or
mov
sub
adc
out
sub
in
sarb
sub
leave
push
push
int
or
incb
sub
mov
paddusb
add
enter
xlat
xor
js
add
js
adc
xchg
jl
jno
xchg
dec
or
ja
mov
cmp
cmp
in
dec
push
pop
pop
lods
cld
mov
sub
xor
adc
scas
imul
lds
pop
and
fmull
xlat
lods
mov
cmp
cmpsl
test
fstps
pop
js
outsb
in
push
and
outsl
adc
cmp
je
inc
inc
out
xchg
enter
mov
loopne
scas
jnp
and
insl
aam
push
xchg
outsb
pop
sbb
dec
data16
xor
jge
lea
fnstsw
std
jb
mov
hlt
or
aas
xor
ja
jne
cs
lock
mov
jbe
movsl
aam
mov
push
inc
nop
push
xchg
out
in
into
xor
cmp
stos
lcall
adc
mov
mov
int3
or
sbb
pop
xor
inc
sarb
mov
loope
enter
pushf
imul
cmp
loop
in
inc
mov
scas
pop
imul
ficoml
adc
cld
ss
sub
ret
jecxz
imul
shlb
lock
push
adc
jmp
adc
xorl
fisttpl
and
xor
push
ficoms
mov
push
sub
pushf
arpl
or
cli
inc
sbb
adc
jp
jo
jp
nop
add
mov
jl
movsb
in
lcall
mov
popf
and
ja
pusha
jecxz
xchg
xchg
xchg
adc
out
gs
xorb
cmp
mov
in
popf
bound
adc
xor
test
pop
int3
push
into
fcoml
inc
aad
mov
add
fistpll
sbb
sub
bound
add
jae
pop
out
imul
fcomp
mov
into
cmp
out
mov
lret
movl
sub
ficoms
fbstp
mov
dec
inc
fists
xchg
mov
xor
mov
icebp
loop
outsb
xor
dec
rcrb
push
mov
lahf
cmp
and
lcall
lods
aam
lods
pushl
jnp
jo
enter
in
fisttpll
sub
cs
repnz
sub
jle
cmc
loope
push
lret
sub
xchg
pop
push
lret
lahf
cmpsl
jb
in
and
sub
daa
aaa
xchg
fcmovb
xchg
xchg
pop
jl
dec
insl
mov
mov
andb
xchg
mov
xchg
loopne
jns
mov
xor
gs
xchg
in
xchg
fwait
adc
fmull
rcr
lret
pop
imul
cli
inc
lret
jae
loop
cmpsl
and
adc
inc
push
lods
shll
adc
adc
loopne
cmpsl
fisubs
xchg
loop
lods
scas
sbb
bound
jge
not
jecxz
pushf
test
jg
sahf
jne
mov
fisubrs
cltd
movsb
sub
push
loopne
xor
rolb
cltd
pop
int3
cmpsb
out
and
and
sub
sub
fmulp
outsb
stos
js
pushf
insl
std
cli
lock
bound
daa
mov
cmpsl
inc
and
and
lret
or
lret
xchg
bound
scas
rorl
jl
gs
sti
mov
and
sbb
mov
fdivr
adc
test
pop
inc
pop
mov
fnstenv
sbb
ficompl
dec
xchg
jae
push
inc
mov
cmpsl
out
jne
inc
push
test
scas
ss
ret
sub
mov
sarb
dec
sbb
jge
insb
addl
jmp
popfw
addr16
aad
out
bound
ret
inc
jge
fistpll
xchg
ljmp
push
fsubrl
push
jecxz
xor
pop
jo
mov
xlat
mov
adc
xchg
pop
xchg
inc
mov
jmp
sbb
sub
jmp
or
loop
or
xorl
add
ficomps
das
test
push
xlat
lds
shlb
lds
mov
adc
xor
cs
out
pop
pop
add
outsb
xchg
mov
out
fnsave
lret
sbb
lods
xor
cmp
adc
sub
test
lds
sbb
sub
and
cmp
fstpt
shlb
jl
adcl
cs
add
vorps
movsb
call
push
sub
out
repnz
nop
shl
aam
stc
pusha
cmpsl
push
js
lock
xor
bound
cltd
cmp
loope
and
aas
leave
xchg
fimuls
out
push
lcall
sbb
xor
or
jmp
sbb
and
xchg
das
or
cld
inc
sbb
sub
je
mov
dec
push
movsl
sbb
leave
jmp
mov
jns
adc
xchg
cmpsl
or
pop
adc
imul
mov
movsl
mov
lcall
test
mov
test
mov
ret
dec
adc
daa
jge
jbe
in
dec
push
pop
sub
xor
divl
pop
xor
pop
jno
cmpsb
xor
jmp
shll
cmp
sbb
jnp
jbe
repz
cltd
testl
fstpt
rorl
je
sbb
jp
pop
and
add
shl
adc
cli
or
or
repnz
cmp
popf
dec
add
daa
std
mov
cmp
lds
out
add
lds
xchg
or
xchg
mov
fwait
or
and
xchg
mov
push
mov
fnstsw
hlt
aaa
push
push
push
cmp
insb
stos
stos
leave
repz
mov
add
xor
or
mov
push
test
inc
lret
std
sbb
lock
scas
jmp
inc
imul
mov
pop
fwait
mov
mov
aaa
pop
and
dec
out
mov
cmpsl
jae
adc
loop
push
insl
push
jl
push
mov
lahf
lds
jl
xchg
jbe
sbb
xor
or
addr16
repnz
shll
xchg
xchg
jnp
clc
cmp
mov
fadd
lret
nop
popa
cmp
movsb
outsb
pop
adc
xor
test
mov
icebp
int3
sarl
lock
std
inc
jbe
inc
dec
mov
cmc
je
mov
insl
and
or
lretw
and
int
jbe
aaa
sub
pop
cltd
xor
sahf
xor
sub
andl
mov
cli
sarl
mov
lock
nop
push
cld
shlb
aas
cli
and
sub
xor
std
add
testl
repnz
stos
fwait
and
rcrb
test
push
pushf
stos
mov
or
clc
adcb
or
es
cmp
out
add
push
sbb
mov
aaa
cmp
xchg
aam
cltd
and
pop
enter
sub
and
mov
out
imull
sub
jle
cmp
push
and
and
mov
inc
out
repnz
mov
jp
fnsave
and
lds
dec
push
test
clc
pop
sbb
dec
nop
icebp
shrb
and
inc
sbb
or
movsb
into
pop
and
cmc
pop
test
iret
jb
mov
addr16
pusha
out
fidivrl
sub
stos
adc
pop
pop
or
push
jmp
insb
sub
sub
movsl
int
xor
mov
mov
loop
mov
and
scas
sbb
dec
ds
in
dec
adc
test
in
push
aas
mov
notl
mov
mov
in
inc
inc
fisubs
push
fistl
jbe
into
push
mov
lret
sub
push
mov
adc
shlb
ds
pop
sub
aaa
jmp
lret
add
das
pop
jno
lret
popf
mov
das
dec
loope
sbb
ret
push
or
mov
mov
xor
sbb
js
lods
aas
xchg
xchg
dec
jmp
xor
cmp
in
fdivs
mov
lcall
inc
shrl
fcompl
std
or
call
js
lret
xor
push
ret
mov
inc
data16
movhps
xchg
daa
test
idiv
cwtl
aaa
rcll
push
dec
mov
or
aaa
and
sub
inc
cmpsb
xor
lea
insl
push
dec
push
mov
ret
push
jmp
dec
fisubs
and
push
sar
lret
outsl
xchg
mov
mov
mov
sbb
inc
fists
inc
push
xchg
call
movsb
cwtl
sbb
xchg
into
test
mov
pop
add
push
push
or
in
and
test
cmp
pushf
sbb
inc
mov
fisttpl
pop
cmp
adc
adc
lock
aad
mov
test
cli
sub
mov
xor
aaa
ds
enter
and
movsl
push
loop
sbb
xor
and
das
shll
xor
negb
cltd
pop
shr
in
add
repnz
rcl
and
jmp
int3
inc
sahf
mov
xor
push
inc
insb
sbb
or
loop
jne
sbb
aam
mov
pop
insl
push
insl
ret
cwtl
sti
pop
js
mov
loopne
push
int
or
or
mov
outsl
and
das
cwtl
dec
pop
repnz
in
adcl
cmp
sbb
inc
jno
mov
movb
movsb
mov
mov
insl
mov
jp
lods
mov
adc
inc
mov
jns
cmp
sbb
stc
inc
daa
test
push
cmpsl
sahf
cmc
enter
sub
jno
cmpsl
cmp
es
mov
test
icebp
mov
addr16
in
into
maxps
dec
mov
in
cmpsb
jp
push
sbbl
out
xor
mov
sbb
sbb
sbb
push
push
mov
frndint
insl
xchg
xchg
mov
addl
push
ja
or
mov
in
leave
xchg
lea
out
inc
mov
cmp
aad
pop
or
cmc
pop
adc
mov
aam
jnp
sbbb
jp
sbb
stos
mull
dec
push
in
movsb
sub
out
sub
mov
addl
push
out
and
fsts
mov
mov
jl
loop
fidivrs
mov
fsubl
hlt
inc
jp
adc
dec
sti
jp
cli
mov
movsb
push
hlt
mov
in
mov
loopne
mov
in
mov
iret
add
cmc
mov
push
mov
insb
imul
ret
xacquire
xor
mov
movsl
lods
daa
mov
ljmp
lods
popa
mov
rolb
sub
dec
icebp
push
push
stos
pop
jmp
shrl
in
adc
sub
xchg
mov
jge
xchg
mov
add
dec
mov
pusha
jl
and
cltd
push
ds
sbb
sub
pop
sbb
jns
pusha
push
repz
mov
in
and
cmp
xchg
sahf
insl
test
inc
int
iret
mull
filds
shrb
mov
cmp
fs
js
add
je
popf
sarb
outsl
pop
jne,pn
into
mov
dec
sbb
xchg
movsl
js
sub
and
aas
dec
jmp
out
add
out
add
jb
pop
fcoms
or
leave
fisubrl
pop
xor
sub
fwait
rclb
sbb
cwtl
adc
cmp
dec
repnz
lods
pop
rorb
pop
sub
pop
sbb
out
pop
js
std
push
or
and
fistl
outsb
push
scas
das
jmp
dec
rolb
stc
sub
inc
xor
mov
insl
fsubrs
dec
lods
rcll
jbe
push
mov
imul
lret
push
mov
dec
mov
shr
adc
xchg
paddw
sub
dec
leave
cli
movsl
jae
mov
jecxz
mov
das
pop
sbb
scas
jb
lea
pop
std
fstl
and
jecxz
pop
fdiv
mov
xlat
lret
xchg
jmp
cmp
inc
test
sub
mov
mov
lret
out
vpackuswb
pop
cmpsb
fildl
add
cmpsb
dec
loop
pop
cmpl
jnp
or
dec
mov
mov
add
vprotd
mov
dec
cmp
shrl
and
xor
push
pop
xchg
sub
sub
cli
sbbl
mov
mov
mov
out
mov
xchg
jmp
xor
movsb
jne
pop
je
int
aad
in
cli
rcll
out
inc
cs
inc
lea
call
sub
imul
lea
jle
ja
mov
adc
dec
mov
cmp
ret
add
lret
push
fwait
jns
jbe
push
test
jb
cmpb
in
and
jo
sbb
push
jns
subl
insl
pop
outsb
imul
and
dec
xchg
ss
pushl
add
push
into
outsl
rcr
and
loope
lods
cwtl
push
ret
dec
jle
lods
sub
js
repz
jbe
sub
lods
dec
push
xacquire
sbb
sub
add
xchg
add
icebp
dec
ljmp
icebp
xchg
jecxz
in
add
sahf
les
jle
xor
sbb
cmpb
aas
movntps
inc
xor
jo
and
cs
xchg
mov
add
enter
pop
mov
out
andb
xchg
pop
mov
iret
bnd
ljmp
xchg
mov
or
rorl
dec
add
adc
jns
mov
das
cld
and
dec
and
mov
cmp
int
loopne
std
xchg
mov
js
mov
pop
push
aaa
icebp
push
xchg
add
mov
push
call
imul
add
ret
cld
jle
mov
inc
cmp
out
adc
into
lret
es
xchg
jp
lcall
ljmp
shlb
jne
popa
sub
mov
sub
inc
xor
add
push
shrl
addb
fwait
adc
in
dec
movb
cs
gs
mov
add
push
popa
inc
mov
or
mov
and
fsqrt
jae
jecxz
insb
cmp
inc
mov
aam
mov
out
xchg
stos
fistps
jbe
push
ret
adc
gs
mov
loopne
jg
inc
outsb
popf
fstps
sub
xor
cmp
mov
xchg
ret
xor
test
mov
cmp
sub
inc
outsb
cmp
cmp
mov
xor
push
ficoms
in
sub
fldl
cmpsl
loopne
dec
jmp
sbb
pop
call
push
or
in
xchg
hlt
or
idivl
push
push
test
push
adc
cmpb
mov
fiaddl
lods
icebp
out
jno
adc
inc
ljmp
xor
inc
es
repnz
iret
xlat
xchg
push
mov
test
incl
cmp
or
jns
adc
repz
test
xor
dec
out
mov
hlt
pop
sarb
or
sarl
cmovs
stos
or
es
fnstenv
bound
pushf
or
or
push
and
xchg
xchg
subl
adc
repz
inc
fistps
fdivs
xor
mov
lock
aaa
mov
push
sysenter
jae
adc
movsb
mov
and
inc
jg
jns
cmp
push
fiadds
enter
cmc
push
out
popa
fcomps
mov
daa
iret
mov
push
idivl
repz
call
push
sub
mov
test
pop
test
pop
cltd
out
data16
mov
jl
incb
ret
sub
sub
push
jecxz
mov
pop
pop
shll
cwtl
cwtl
addr16
lcall
cs
pop
shll
push
cmc
into
in
ds
push
sarl
outsb
pop
add
sub
in
or
push
bound
test
sbb
and
stc
mov
out
insl
hlt
dec
pushf
cltd
je
sbb
imul
push
xchg
pop
lods
fimull
mov
std
push
mov
ljmp
fisubrs
lcall
xchg
mov
adc
sub
rcr
das
setbe
or
ja
fprem1
inc
loope
testl
sbb
mov
jb
aam
add
int
push
pop
rcl
xchg
aaa
lock
jmp
cmpsl
jb
add
cmpl
lret
outsb
push
mov
and
xchg
jns
and
arpl
js
movsb
iret
inc
push
fildl
cld
inc
imulb
sbb
loopne
stos
sarb
mov
adc
add
mov
das
cmp
sub
cmp
sub
add
movsb
push
pop
cmpsb
xor
movsl
ljmp
cli
movsl
jl
push
pop
in
push
mov
mov
mov
lods
jns
dec
cmp
jl
mov
lods
je
inc
ud2
lea
popf
sub
push
lret
mov
pop
xor
or
enter
xor
aas
leave
xchg
xchg
loope
push
fisttpl
mov
pop
xlat
lcall
adc
outsb
inc
ja
xchg
inc
mov
mov
adcl
sbb
or
sub
mov
fwait
outsl
test
cmpsl
loop
fcmove
cmp
inc
aad
push
mov
out
sub
popl
inc
jl
outsl
pop
pushf
jne
adc
pop
dec
mov
in
in
xor
mov
orb
jl
mov
pop
pop
bound
not
out
push
test
mov
dec
cmp
sahf
cmpsb
mov
dec
sub
pop
cmp
dec
hlt
sbb
daa
jbe
std
sbb
sbb
clc
cmpsb
xchg
mov
flds
xchg
fsubrs
cmp
sbb
add
lock
adc
adc
out
dec
iret
cmp
sbb
or
and
repnz
das
dec
cmpsl
hlt
mov
dec
test
xchg
popf
aad
or
push
test
in
mov
inc
leave
scas
outsl
inc
out
lret
hlt
decl
call
push
sbb
das
lcall
inc
add
sub
xor
inc
mov
sarb
cwtl
lret
dec
jbe
outsb
xor
aaa
out
iret
mov
inc
xchg
pop
mov
pop
lods
pop
lea
xlat
lds
divb
and
sahf
fwait
xorl
pop
mov
inc
cmp
mov
sub
jp
mov
jp
sbb
mov
push
ficoml
leave
js
repnz
cmc
cwtl
int3
inc
dec
mov
dec
inc
xchg
orb
imul
mov
mov
stos
pop
jno
and
fidivrl
xchg
or
cmpsb
sub
jmp
stos
pop
add
mov
jo
insb
popf
jns
out
mov
fiaddl
mov
mov
mov
repz
pop
rep
outsb
jp
pusha
pop
ljmp
stos
arpl
and
push
lahf
jae
push
pop
in
shlb
loop,pt
xchg
mov
rorb
fnclex
repz
mov
sti
test
js
bound
insl
jbe
and
dec
ja
adc
jae
mov
adc
or
jmp
xchg
sbb
mov
mov
adc
fisttps
fisubrl
cld
test
pop
push
mov
in
fisubl
pop
imul
push
cmp
test
aaa
scas
lcall
sub
adc
mov
cmp
push
and
push
mov
xchg
cltd
mov
inc
xchg
xor
jns
fidivrs
xchg
clc
test
test
jae
scas
jae
pop
pop
pop
push
mov
cmpb
mov
int
outsl
mov
test
push
rcrl
das
std
or
xor
mov
dec
jle
and
out
inc
in
add
xorb
sbb
imull
dec
lods
inc
fsubl
cmp
pop
xorl
movsb
mov
cli
mov
dec
arpl
or
or
or
es
pop
sub
popf
mov
mov
mov
sbb
add
push
mov
and
hlt
loop
pop
mov
jle
clc
out
xlat
mov
inc
xchg
lea
lcall
pop
movsl
jbe
cli
fisubrs
mov
rorl
push
push
xor
stos
push
push
mov
cltd
insl
sub
ss
and
les
push
mov
push
ds
repz
mov
inc
jmp
mov
dec
and
xchg
aam
pushf
add
xchg
jnp
inc
xchg
push
clc
ja
or
push
movsl
imul
push
inc
rolb
negl
repnz
insl
mov
fcomps
xorl
sahf
je
dec
test
divb
jb
mov
insl
sub
or
loope
call
cmp
shlb
iret
xlat
arpl
scas
std
mov
cmp
fs
jae
mov
dec
inc
adc
adc
xlat
push
pop
mov
stos
mov
repz
pop
in
jno
or
push
pop
je
cwtl
pushf
imul
scas
push
jne
adc
scas
repz
mov
cmp
sbb
mov
lods
mov
mov
mov
js
inc
push
into
xchg
insl
dec
lret
in
add
xchg
nop
fwait
xchg
add
popa
lods
rcrb
cmpb
int3
xchg
mov
xchg
outsb
ja
and
mov
lock
xchg
cmp
ljmp
data16
sbb
fwait
mov
sub
popf
ret
lret
push
insl
loop
dec
gs
fimuls
popa
adc
enter
cmp
jne
ljmp
pop
fldt
dec
das
incl
xor
adc
aaa
jae
lret
xchg
cltd
cmp
std
pushf
inc
push
lret
jl
fsubl
mov
enter
push
les
mov
imul
dec
pop
out
orl
xchg
push
pop
jle
mov
cmp
mov
pop
je
push
roll
fisubrs
pop
rclb
int3
das
popa
ret
fsubrl
add
loope
sbb
cs
and
and
divl
into
push
or
or
xchg
insl
inc
xchg
sti
push
dec
or
add
inc
mov
test
enter
or
outsl
adc
xor
dec
loop
fs
jmp
cmp
fisubl
sub
sbbb
xchg
aaa
sbb
pop
mov
scas
jge
push
xchg
arpl
in
and
pushf
out
add
push
cmp
lds
test
ja
lods
pop
or
xor
lock
push
xlat
fstps
fidivrl
call
lds
movsl
rcr
cmpsl
dec
ss
inc
push
and
mov
es
dec
enter
mov
inc
xor
rcl
sbb
icebp
xchg
stos
inc
fsubrs
dec
mov
imul
pop
lret
lods
jmp
lret
out
int
lods
negl
xor
push
push
sbb
sub
inc
imul
and
leave
cmp
jp
mov
lcall
or
xor
mov
fdivl
insb
ja
push
pop
cli
mov
sub
repz
roll
popf
cmp
cmpsb
inc
jo
dec
test
shll
into
xor
adc
lret
das
jbe
lods
mov
ds
scas
popf
enter
movsb
imul
shlb
xor
jp
sub
mov
inc
test
push
test
cmpsl
int3
leave
fadd
arpl
push
ds
pop
lahf
or
ret
fnstenv
mov
inc
inc
ds
dec
pushf
jp
fldt
jge
inc
enter
xchg
cmp
or
dec
enter
add
xor
in
push
jge
movsb
sub
test
in
fmul
dec
aaa
jno
cs
xor
rorb
mov
jne
inc
loopne
insl
mov
bound
mov
ja
cmp
hlt
mov
xor
cmp
push
mov
cmp
outsb
mov
pop
inc
fcmovne
cmpsl
mov
scas
xor
xor
dec
mov
adc
xchg
dec
pop
stc
and
movsl
jbe
icebp
fs
adc
pop
lds
sbb
loopne
mov
pop
aas
sbb
cltd
movsb
lahf
mov
repnz
add
movsl
cmp
repz
test
pusha
test
pushf
fsub
outsl
mov
jge
and
jp
aaa
ds
cmp
push
jmp
aam
call
xor
ret
xor
nop
imul
inc
pop
in
scas
fwait
inc
fdivrs
fiadds
out
mov
mov
sub
mov
lahf
xchg
into
mov
inc
fisubrs
es
movsl
adc
adc
int3
popf
scas
inc
cmpsb
cmp
mov
lods
xchg
scas
xor
and
ret
bound
shll
mov
add
mov
loope
pushf
hlt
dec
scas
xchg
add
add
adc
in
mov
pop
inc
addb
js
lahf
aam
push
add
mov
repnz
es
inc
and
cmp
adcl
mov
int
push
nop
mov
dec
leave
mov
dec
test
call
xlat
aas
ror
pop
mov
push
and
add
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
outsb
mov
add
cwtl
mov
