lea
mov
mov
mov
mov
lea
call
mov
lea
call
mov
call
mov
test
jne
mov
xor
cmp
mov
mov
je
push
call
pop
movl
push
lea
call
lea
push
push
mov
call
test
jne
call
pushl
mov
call
cmpl
pop
jne
cmpl
mov
jne
cmp
je
inc
mov
mov
movl
cmpl
jne
mov
sub
add
push
pushl
call
pop
pop
xor
cmp
je
cmp
je
pushl
call
pop
mov
cmp
je
mov
push
call
lea
call
cmp
je
mov
test
jne
cmpl
jne
lea
call
lea
call
pop
pop
xor
pop
mov
pop
ret
cmpl
je
andl
decl
jmp
movl
cmpl
je
decl
pushl
lea
call
mov
jmp
push
mov
sub
push
mov
push
push
mov
call
test
mov
je
mov
sub
mov
mov
mov
sub
pop
pop
mov
mov
pop
leave
ret
testl
je
mov
push
pushl
pushl
call
xor
ret
movl
jmp
push
mov
and
sub
push
push
push
lea
call
mov
lea
mov
mov
xor
mov
add
mov
push
mov
lea
push
mov
call
mov
test
jne
mov
cmp
jge
mov
xor
mov
and
inc
shl
mov
shr
shl
not
and
and
cmpl
je
lea
call
lea
push
mov
call
cmp
je
xor
inc
push
push
push
pushl
call
mov
andl
test
jne
mov
andl
test
jne
push
push
lea
push
call
lea
push
call
pop
pop
pop
mov
pop
ret
push
mov
push
mov
push
mov
call
test
je
push
mov
mov
mov
call
test
mov
je
mov
push
call
mov
test
je
mov
push
call
call
pushl
mov
push
call
mov
push
mov
call
mov
test
mov
je
mov
push
call
lea
call
mov
pop
leave
ret
xor
jmp
push
mov
push
push
mov
cmpl
mov
mov
jne
call
mov
push
pushl
lea
push
mov
call
mov
test
mov
je
cmpl
push
push
jne
mov
mov
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
push
andl
push
lea
call
mov
mov
lea
push
push
call
test
js
mov
test
je
xor
cmp
jne
inc
mov
push
push
push
push
call
lea
call
xor
leave
ret
push
mov
sub
push
mov
test
je
mov
push
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
xor
cmp
mov
je
lea
call
mov
mov
call
push
push
push
push
push
pushl
mov
call
mov
lea
call
pop
mov
pop
leave
ret
push
andl
test
mov
je
mov
push
call
mov
test
je
mov
push
call
cmpl
jne
mov
pop
ret
push
mov
and
sub
cmpl
push
push
jne
pop
pop
mov
pop
ret
andl
lea
add
push
push
mov
movl
call
mov
mov
test
jbe
push
pop
mov
mov
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
je
call
add
decl
jne
lea
call
lea
call
lea
call
jmp
mov
push
push
call
jmp
push
mov
and
push
push
mov
push
call
test
je
mov
mov
test
je
cmpl
je
mov
test
jne
mov
test
jne
pop
mov
pop
ret
mov
push
push
call
jmp
mov
call
cmpl
jne
xor
inc
cmp
jne
cmpb
jne
ret
xor
ret
push
mov
push
mov
push
push
mov
call
test
jne
cmp
jne
mov
call
mov
call
test
je
mov
call
cmpb
jne
xor
jmp
mov
push
pop
call
test
je
pushl
mov
call
jmp
xor
mov
mov
call
pop
pop
pop
pop
ret
mov
and
or
jne
xor
ret
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
pop
mov
je
or
ret
andl
ret
xor
jmp
mov
jmp
push
mov
lea
movl
call
lea
call
mov
call
testb
jne
mov
pop
ret
push
mov
push
push
push
mov
mov
call
test
jne
andl
lea
push
lea
push
pushl
mov
push
pushl
call
add
mov
xor
mov
test
jne
pushl
mov
pushl
pushl
pushl
push
pushl
pushl
call
add
test
pop
jne
xor
inc
leave
ret
push
mov
push
mov
mov
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
push
call
xor
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
shl
test
lea
jbe
mov
mov
test
je
andl
andl
add
dec
jne
mov
add
pop
ret
xor
pop
ret
push
mov
push
andl
push
push
lea
call
mov
mov
mov
lea
push
push
call
test
js
cmpl
je
pushl
add
push
call
mov
lea
call
mov
pop
leave
ret
push
mov
sub
push
push
push
lea
push
pushl
xor
inc
lea
movl
movl
mov
call
testb
mov
mov
jne
testb
jne
test
je
mov
mov
push
call
mov
mov
andl
push
push
add
push
lea
movl
movl
mov
movl
mov
call
mov
push
lea
push
push
call
testb
mov
jne
testb
jne
testb
jne
testb
jne
mov
test
jne
mov
mov
lea
push
push
call
test
jne
cmpl
je
mov
mov
mov
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
mov
lea
push
push
push
call
test
jne
mov
mov
lea
push
push
push
call
test
jne
cmpl
jne
mov
andl
mov
lea
push
lea
push
push
push
call
test
jne
pushl
add
pushl
call
mov
mov
mov
add
push
push
push
call
test
jne
mov
test
je
mov
push
call
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
lea
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
mov
mov
mov
mov
mov
push
mov
mov
mov
mov
mov
mov
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
add
mov
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
mov
fstl
fxch
fstpl
fstpl
call
lea
call
lea
call
test
jne
mov
test
je
lea
mov
mov
movb
mov
rep
lea
push
lea
push
mov
call
mov
mov
mov
add
mov
add
mov
fildl
sub
mov
fildl
lea
fxch
fstl
fxch
fstl
fxch
fstpl
fstpl
call
lea
push
lea
push
lea
call
fldl
mov
fstpl
fldl
mov
fstpl
fldl
fstpl
fldl
fstpl
mov
test
je
mov
fldl
mov
fstpl
fldl
mov
mov
fstpl
mov
mov
mov
lea
mov
call
mov
add
mov
add
mov
fildl
mov
fildl
sub
fxch
fstl
lea
fxch
fstl
fxch
fstpl
fstpl
call
lea
lea
push
push
call
xor
mov
mov
mov
mov
lea
push
lea
push
call
add
push
lea
mov
call
lea
call
test
jne
mov
mov
sub
sub
mov
push
call
add
test
je
fldl
mov
call
fldl
mov
call
push
lea
push
mov
mov
call
mov
test
je
mov
call
mov
test
mov
jne
mov
test
je
cmpb
je
mov
push
call
add
test
jne
fldl
mov
mov
fchs
fldl
sub
fchs
fstpl
fstpl
push
call
add
push
call
add
test
je
mov
push
mov
call
test
je
addl
mov
test
mov
jne
mov
pop
pop
pop
mov
pop
ret
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
sub
push
push
xor
push
lea
movl
mov
call
mov
lea
push
push
call
test
mov
js
mov
mov
lea
push
lea
lea
mov
mov
mov
movl
mov
mov
call
test
jne
push
lea
call
lea
push
call
test
pop
mov
jne
mov
pushl
mov
call
mov
mov
push
push
pushl
pushl
pushl
push
pushl
call
test
mov
jne
mov
pushl
mov
push
call
mov
mov
mov
cmp
mov
je
mov
push
call
mov
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
push
push
push
lea
call
mov
test
mov
je
pushl
andl
mov
lea
call
testb
mov
je
pushl
mov
push
pushl
push
call
lea
call
lea
call
pop
leave
ret
push
mov
push
mov
cmpl
jne
cmp
mov
jl
cmp
jg
pushl
lea
push
call
mov
test
pop
pop
mov
je
pop
pop
ret
call
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
testb
push
jne
movzwl
movzwl
push
add
lea
lea
push
push
call
mov
add
test
je
mov
movl
mov
push
push
lea
push
call
add
movw
mov
mov
pop
pop
pop
pop
ret
mov
sub
je
push
call
mov
add
mov
pop
pop
ret
push
mov
and
push
push
push
push
mov
mov
and
or
jne
xor
push
mov
call
test
jne
mov
push
mov
call
inc
test
jne
pop
pop
xor
pop
mov
pop
ret
mov
pushl
pushl
pushl
push
call
mov
add
test
je
jmp
mov
mov
call
cmp
je
mov
call
mov
mov
mov
push
push
call
mov
push
call
mov
pop
xor
test
setne
push
push
push
pushl
push
call
jmp
push
push
mov
mov
test
push
push
jne
mov
test
jne
pop
pop
pop
pop
ret
pushl
call
mov
lea
movsl
movsl
movsl
jmp
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
xor
testb
mov
push
mov
movl
mov
mov
jne
lea
push
call
mov
mov
mov
lea
mov
mov
lea
mov
mov
test
je
cmp
je
add
jmp
cmp
mov
je
lea
mov
test
je
mov
mov
mov
cmp
je
mov
add
test
jne
add
cmp
jne
mov
mov
mov
sub
cmp
movl
movl
movl
jb
movl
cmp
je
sub
push
push
push
call
add
test
je
push
push
push
call
add
test
je
mov
cmpl
jne
movl
testb
jne
cmpl
jne
push
mov
mov
call
mov
or
mov
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
cmpl
jne
cmpl
jne
mov
mov
mov
cmpl
jne
cmpl
jne
mov
cmp
jne
mov
add
mov
mov
mov
mov
test
je
lea
push
call
add
test
jne
push
call
add
pop
pop
pop
pop
add
ret
lea
push
mov
lea
mov
mov
movl
mov
mov
movl
call
test
je
jmp
mov
test
jne
test
je
jmp
sub
push
add
push
push
call
add
test
je
sub
cmp
mov
je
lea
nop
push
mov
lea
call
mov
mov
lea
push
mov
push
lea
call
push
push
push
mov
call
add
test
jne
mov
mov
add
add
mov
mov
movl
mov
mov
lea
cmp
jb
cmpl
je
mov
mov
push
push
call
mov
mov
add
cmp
je
cmp
je
push
mov
mov
mov
call
add
mov
mov
mov
jmp
mov
mov
movl
mov
sub
push
call
cmpl
je
mov
mov
mov
mov
add
mov
lea
mov
mov
jmp
mov
cmp
push
push
je
cmp
je
pop
xor
pop
ret
mov
call
cmpb
jne
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
mov
test
movl
jne
mov
test
je
mov
mov
push
push
push
lea
push
push
call
mov
cmp
jne
mov
test
pop
je
mov
mov
push
call
push
call
add
lea
call
mov
test
je
addl
cmpl
je
mov
test
mov
jne
test
jne
mov
test
mov
jne
test
jne
mov
test
mov
je
lea
push
call
add
test
je
pop
pop
pop
ret
movl
mov
mov
push
call
jmp
push
call
add
pop
pop
pop
ret
push
mov
push
push
push
mov
add
cmp
jg
mov
mov
add
push
mov
lea
mov
push
mov
lea
push
call
add
mov
pop
leave
ret
push
mov
mov
test
mov
push
je
lea
push
call
test
pop
jne
push
call
pop
testb
movl
je
push
call
pop
pop
mov
pop
ret
test
je
jmp
mov
movw
xor
ret
push
mov
cmpl
movl
movl
movl
jne
push
lea
call
mov
test
movl
jne
movl
lea
movl
movl
movl
mov
test
je
mov
call
push
lea
movl
call
push
lea
movl
call
mov
test
pop
je
mov
push
call
ret
mov
mov
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
push
call
test
je
xor
inc
pop
ret
push
mov
push
mov
push
push
xor
inc
mov
test
jl
cmp
jge
mov
imul
add
mov
cmp
je
mov
add
add
neg
negl
jmp
add
cmpl
jg
test
jl
mov
imul
add
mov
cmp
jne
pop
pop
leave
ret
dec
sub
test
jge
xor
jmp
push
mov
sub
push
push
xor
cmpl
mov
mov
mov
jb
call
mov
cmp
je
mov
push
call
mov
cmp
mov
jne
mov
cmp
je
push
lea
call
mov
lea
push
pushl
pushl
push
call
test
js
mov
cmp
je
mov
mov
lea
push
pushl
push
call
test
js
mov
cmp
je
mov
push
call
mov
xor
inc
lea
call
lea
call
lea
call
mov
pop
pop
leave
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
push
mov
xor
mov
movl
mov
call
push
mov
pop
push
push
push
push
push
push
push
mov
push
lea
push
mov
mov
mov
mov
mov
call
cmp
je
pushl
push
call
cmp
pop
pop
je
mov
mov
push
call
mov
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
push
lea
sub
mov
xor
mov
test
push
mov
je
lea
push
xor
mov
mov
mov
push
mov
lea
mov
mov
movl
movl
mov
mov
mov
call
cmpb
je
mov
mov
lea
push
call
lea
mov
mov
mov
mov
cmp
mov
je
lea
mov
lea
call
mov
mov
call
xor
push
push
mov
call
lea
push
xor
inc
push
push
lea
push
mov
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
xor
cmp
je
mov
cmp
jne
mov
call
pushl
mov
mov
call
mov
mov
call
mov
cmp
jne
push
push
push
lea
push
mov
movl
movl
mov
push
mov
mov
pushl
call
add
testb
jne
testb
jne
pushl
mov
pushl
call
cmpl
je
mov
mov
add
call
lea
call
lea
call
lea
call
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
mov
pop
mov
xor
pop
call
add
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
mov
test
jne
test
mov
je
mov
test
jne
test
mov
je
mov
mov
mov
xor
cmp
jne
cmp
mov
jne
mov
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
mov
mov
pop
mov
mov
mov
pop
ret
mov
test
je
mov
mov
mov
push
call
mov
mov
test
je
jmp
mov
mov
mov
jmp
cmp
jne
movl
jmp
push
mov
mov
mov
call
pushl
mov
pushl
shr
push
push
mov
call
pop
ret
push
mov
push
push
push
push
mov
test
jne
pushl
mov
pushl
mov
mov
call
test
js
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
xor
pop
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
cmpl
je
cmpl
je
push
push
mov
push
mov
push
call
mov
movzbl
push
mov
call
add
test
jne
mov
mov
lea
push
lea
push
mov
call
mov
test
je
movl
mov
push
call
mov
movzbl
push
mov
call
add
cmpl
je
test
jne
mov
cmp
je
cmp
je
cmpb
je
mov
test
jne
mov
mov
mov
push
call
lea
xor
call
xor
lea
call
cmpb
je
mov
test
je
test
jne
mov
mov
push
push
mov
call
lea
xor
call
xor
lea
call
mov
test
jne
pop
pop
pop
pop
add
ret
test
jne
test
je
movl
jmp
test
je
jmp
mov
push
mov
lea
movl
call
mov
test
je
mov
test
jne
test
jne
mov
mov
push
call
lea
call
jmp
test
jne
mov
test
js
mov
cmp
je
push
mov
push
call
add
pop
pop
pop
pop
add
ret
mov
jmp
xor
push
mov
push
call
add
pop
pop
pop
pop
add
ret
push
mov
mov
push
push
mov
mov
mov
push
pushl
call
test
pop
pop
jne
pop
pop
pop
ret
push
mov
sub
push
xor
cmp
mov
je
pushl
mov
mov
lea
push
mov
push
call
lea
push
call
cmp
jne
lea
call
mov
pop
leave
ret
push
mov
sub
push
mov
push
mov
mov
push
call
test
je
xor
mov
mov
mov
mov
mov
lea
mov
mov
mov
call
test
mov
mov
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
dec
js
mov
mov
mov
mov
neg
sbb
and
push
lea
push
pushl
pushl
pushl
call
test
jne
dec
mov
mov
mov
jns
mov
xor
cmp
jne
mov
cmp
jne
xor
pop
pop
pop
leave
ret
push
mov
call
cmp
jne
mov
call
fmull
pop
ret
push
xor
call
lea
push
mov
call
andl
cmpl
jne
pop
ret
mov
call
pop
ret
push
pushl
mov
mov
mov
call
test
je
xor
inc
pop
ret
mov
pushl
mov
call
test
jne
jmp
push
mov
push
push
movl
movl
movl
call
cmpl
je
lea
push
call
pop
push
lea
xor
mov
call
lea
call
mov
call
lea
call
lea
call
mov
test
movl
pop
jne
pop
ret
andl
andl
pop
ret
push
mov
sub
cmpl
je
mov
mov
push
push
call
mov
mov
sub
mov
push
push
pushl
mov
mov
push
call
test
jle
mov
lea
push
lea
push
add
mov
push
call
push
mov
call
mov
mov
add
push
call
mov
cmp
jg
mov
mov
push
push
call
andl
mov
mov
mov
mov
push
call
mov
mov
mov
push
call
mov
sub
add
lea
mov
push
mov
call
mov
sub
pop
sar
cmp
jne
mov
andl
mov
mov
mov
pop
leave
ret
xor
jmp
push
mov
push
mov
test
push
push
je
mov
mov
mov
cmp
ja
test
jne
lea
push
mov
sub
push
mov
add
push
mov
mov
push
call
test
mov
mov
js
mov
add
pop
pop
pop
pop
ret
xor
jmp
int3
int3
int3
int3
int3
mov
sub
test
push
mov
je
mov
test
js
mov
mov
push
mov
push
push
push
push
mov
call
test
jg
cmpl
jne
movl
xor
pop
pop
add
ret
movl
movl
xor
push
lea
mov
mov
mov
push
call
sub
mov
mov
mov
mov
push
call
sub
mov
mov
mov
mov
mov
mov
lea
mov
mov
push
mov
push
add
call
mov
lea
push
lea
push
mov
mov
mov
push
call
mov
add
push
mov
push
call
mov
add
mov
add
testl
jne
cmpw
je
testl
jne
mov
mov
mov
push
call
sub
pop
pop
mov
mov
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
je
mov
test
push
je
mov
cmp
je
mov
add
test
jne
xor
mov
test
jns
mov
test
je
mov
mov
cmp
je
mov
add
test
jne
cmpl
je
xor
mov
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
mov
pop
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
xor
jmp
mov
mov
pop
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
mov
mov
push
call
mov
mov
xor
mov
pop
ret
int3
int3
int3
int3
push
mov
push
mov
push
push
mov
push
mov
lea
mov
add
cmp
mov
jg
mov
mov
mov
add
mov
mov
mov
add
mov
cmp
jg
cmp
jge
mov
mov
mov
cmp
jge
mov
pop
sub
pop
sub
pop
mov
mov
mov
pop
pop
ret
mov
jmp
mov
jmp
push
mov
sub
push
xor
cmp
push
movb
je
mov
xor
cmp
sete
mov
mov
pop
pop
leave
ret
mov
movb
movl
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
mov
je
cmp
mov
je
mov
push
lea
call
lea
mov
mov
lea
push
mov
add
push
mov
movl
movl
mov
call
push
pushl
lea
push
push
lea
push
call
add
testb
mov
jne
testb
jne
mov
test
jne
mov
mov
cmp
je
cmp
jne
mov
mov
lea
push
push
push
call
test
jne
cmp
je
mov
mov
push
pushl
pushl
push
call
test
jne
lea
mov
mov
mov
lea
mov
call
mov
push
push
push
pushl
call
test
jne
mov
push
push
pushl
push
call
lea
call
mov
mov
cmp
jne
mov
xor
cmp
sete
mov
mov
cmp
mov
je
mov
call
push
call
pop
lea
mov
call
lea
call
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
fldl
mov
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
fldl
fcompl
fnstsw
test
jp
fldl
faddl
fldl
faddl
fcompp
fnstsw
test
jne
mov
ret
xor
ret
call
test
jl
movsbl
mov
test
je
jmp
mov
ret
push
mov
and
sub
mov
xor
mov
mov
push
push
push
mov
xor
push
mov
lea
mov
mov
call
cmp
je
cmp
movl
movl
movl
mov
jne
mov
mov
lea
push
push
mov
call
test
mov
jne
mov
pushl
mov
mov
call
test
pop
je
mov
pushl
lea
mov
lea
mov
mov
mov
movl
movl
mov
movb
mov
call
mov
cmp
mov
je
lea
push
lea
push
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
mov
push
lea
mov
call
mov
mov
lea
push
push
call
test
je
cmp
mov
movl
mov
movl
jne
mov
cmp
je
pushl
push
mov
call
test
je
lea
call
lea
call
lea
call
testb
jne
testb
jne
lea
call
mov
pop
mov
pop
pop
xor
call
mov
pop
ret
pushl
mov
lea
mov
call
mov
cmp
jne
lea
push
pushl
call
pop
pop
lea
mov
call
jmp
push
mov
and
sub
push
push
xor
cmp
push
mov
je
cmpb
je
mov
mov
push
call
pop
pushl
mov
pushl
lea
mov
call
test
js
lea
call
pushl
lea
pushl
call
test
je
mov
andl
test
mov
mov
je
lea
push
push
push
add
push
call
mov
and
jne
test
mov
jne
pushl
lea
call
test
jne
mov
pushl
mov
push
call
test
jne
pushl
pushl
pushl
call
add
test
je
xor
inc
test
jne
test
mov
je
mov
mov
mov
mov
mov
andl
lea
push
push
movl
mov
call
push
push
push
pushl
pushl
pushl
pushl
pushl
call
add
test
mov
je
movb
test
je
testb
je
mov
add
push
call
test
pop
jne
push
call
pop
cmpb
mov
jne
mov
mov
push
push
call
test
jne
lea
call
lea
call
pushl
call
mov
pop
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
xor
mov
mov
mov
push
mov
push
mov
cmpl
je
push
mov
test
mov
jne
test
jne
lea
push
push
push
mov
call
add
test
je
mov
mov
add
sar
mov
lea
push
xor
lea
lea
push
mov
mov
movl
movl
mov
mov
mov
call
pushl
pushl
pushl
call
add
cmp
mov
je
mov
push
call
cmp
je
pushl
mov
mov
lea
push
push
call
test
js
lea
call
testb
jne
testb
jne
mov
movl
xor
pop
mov
pop
xor
pop
call
leave
ret
push
mov
sub
push
mov
push
xor
mov
mov
cmp
je
mov
push
mov
lea
push
lea
lea
movl
mov
mov
call
mov
test
jne
mov
mov
push
lea
call
mov
lea
push
push
call
test
mov
jne
mov
andl
test
je
mov
lea
push
push
push
call
test
mov
jne
pushl
lea
call
test
jne
mov
mov
mov
lea
mov
call
lea
call
xor
lea
call
mov
pop
pop
pop
leave
ret
push
mov
sub
push
push
push
xor
push
lea
mov
call
lea
push
mov
call
test
mov
js
mov
add
push
mov
call
pushl
mov
pushl
call
test
mov
js
cmpl
je
mov
andl
add
mov
mov
push
mov
call
mov
push
push
call
test
mov
js
mov
mov
mov
lea
mov
lea
push
xor
push
lea
mov
mov
call
test
jne
pushl
lea
call
test
jne
mov
mov
lea
push
pushl
pushl
push
call
test
mov
jne
cmp
mov
mov
jge
pushl
pushl
push
call
test
mov
jne
pushl
pushl
mov
mov
push
call
test
mov
jne
cmpl
jne
mov
mov
add
call
cmp
jne
lea
call
xor
lea
call
pop
mov
pop
pop
leave
ret
mov
lea
xor
movl
call
jmp
mov
cmpl
push
mov
push
mov
push
mov
jge
cmp
je
mov
cmp
jne
movzwl
test
jne
movzwl
test
je
and
test
je
and
mov
lea
xor
call
mov
mov
cmpw
je
pop
pop
pop
ret
mov
and
test
je
and
mov
lea
xor
call
jmp
andw
jmp
cmp
jne
push
pushl
call
pop
pop
test
jne
mov
call
jmp
mov
mov
sub
neg
sbb
inc
ret
push
mov
and
push
push
andl
lea
push
mov
push
call
pop
pop
lea
call
mov
test
mov
jne
mov
pop
ret
push
pushl
mov
call
mov
mov
shr
and
push
lea
call
jmp
push
mov
and
push
push
mov
push
push
mov
orl
testl
jne
mov
mov
mov
mov
mov
call
add
mov
mov
mov
test
je
pushl
mov
push
pushl
push
push
call
pop
pop
mov
pop
ret
push
push
pushl
call
jmp
push
mov
push
push
push
mov
push
push
lea
mov
mov
push
push
call
mov
test
je
push
cmp
jne
xor
pop
pop
pop
leave
ret
mov
and
je
mov
push
mov
call
mov
push
lea
push
push
xor
call
mov
mov
jmp
push
mov
test
push
push
mov
push
mov
mov
je
mov
test
jne
mov
test
je
push
push
mov
mov
push
pushl
call
mov
test
jne
pop
pop
xor
pop
pop
ret
push
mov
flds
fcomps
fnstsw
test
jp
mov
pop
ret
push
mov
fldl
faddl
fstpl
fldl
faddl
fstpl
fldl
faddl
fsubrl
fldz
fcom
fnstsw
test
je
fxch
fstpl
fldl
faddl
fsubrl
fcom
fnstsw
test
jnp
fstp
fstpl
pop
ret
fstp
jmp
push
mov
push
xor
push
xor
inc
cmp
mov
mov
mov
mov
je
cmp
je
cmpl
mov
je
cmp
jne
mov
mov
lea
push
push
push
call
xor
inc
mov
mov
test
je
cmp
je
cmpl
je
mov
call
mov
pop
leave
ret
mov
mov
push
push
push
push
call
test
jl
cmp
jle
cmp
je
add
cmp
ja
push
pop
cmp
je
mov
mov
jmp
mov
mov
jmp
push
jmp
xor
jmp
mov
jmp
push
mov
and
sub
push
mov
push
mov
push
push
lea
lea
call
xor
cmp
je
mov
mov
mov
mov
mov
push
push
push
push
call
cmp
je
cmp
je
pop
pop
xor
pop
mov
pop
ret
cmp
je
jmp
mov
cmp
jg
je
sub
jne
ret
push
mov
push
push
push
mov
push
lea
cmpl
mov
jne
lea
mov
test
mov
jne
push
mov
lea
push
call
pop
pushl
lea
mov
call
xor
cmp
jne
mov
mov
cmp
mov
jne
cmp
movl
je
mov
lea
cmpl
jne
mov
call
cmpl
pop
jne
mov
call
lea
call
pop
pop
leave
ret
push
mov
sub
push
push
push
mov
push
pushl
lea
mov
push
mov
call
lea
mov
lea
push
lea
push
push
movl
call
add
push
push
push
lea
call
mov
xor
cmp
ja
lea
call
push
push
push
lea
push
mov
mov
call
cmp
pop
pop
pop
jne
leave
ret
push
mov
sub
andl
push
mov
test
push
je
mov
lea
push
push
push
call
add
test
jne
mov
mov
call
test
je
lea
push
call
test
je
andl
push
xor
lea
mov
mov
push
push
push
call
cmp
je
mov
cmp
jne
movl
mov
lea
push
push
mov
call
cmpw
jne
push
mov
lea
mov
mov
call
mov
mov
call
mov
mov
mov
shr
cmpl
mov
je
cmp
mov
je
andl
mov
cmp
jge
mov
shr
mov
andl
cmpl
mov
jne
movzbl
call
test
je
movl
mov
mov
cmp
jl
lea
xor
call
cmp
je
pop
pop
leave
ret
mov
mov
mov
lea
push
push
pushl
mov
movb
call
add
cmpb
mov
jne
cmp
je
mov
mov
call
test
jne
cmp
jne
jmp
mov
mov
jmp
sub
mov
mov
mov
lea
push
lea
mov
mov
mov
call
pushl
mov
lea
push
mov
call
jmp
cmp
jne
jmp
pushl
mov
mov
call
mov
test
pop
jne
jmp
cmp
jne
mov
xor
test
jle
mov
lea
push
dec
push
push
call
mov
add
mov
mov
jmp
push
lea
sub
mov
xor
mov
push
push
push
mov
mov
xor
push
mov
lea
mov
call
cmp
je
mov
call
test
jne
push
lea
mov
call
testb
mov
je
mov
lea
push
push
pushl
push
call
mov
cmp
je
lea
push
lea
xor
lea
inc
push
mov
mov
movl
movl
mov
mov
movl
movl
mov
mov
push
call
testb
jne
testb
jne
mov
push
pop
cmp
je
testb
jne
testb
jne
lea
call
mov
lea
call
mov
pop
pop
mov
xor
pop
call
add
leave
ret
xor
inc
jmp
push
mov
push
push
mov
xor
cmp
jne
push
mov
cmp
je
cmp
mov
je
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
call
cmp
je
lea
push
pushl
mov
pushl
pushl
call
add
test
js
mov
mov
xor
lea
call
mov
pop
pop
pop
pop
ret
lea
call
cmp
je
pushl
add
pushl
mov
pushl
push
call
jmp
push
mov
push
push
mov
push
push
xor
lea
mov
call
mov
cmp
mov
je
push
call
cmp
pop
je
mov
mov
mov
mov
xor
inc
andb
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
movl
cmp
je
mov
mov
mov
push
call
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
sub
mov
xor
mov
mov
push
push
mov
mov
cmpl
push
mov
mov
mov
jge
andl
testb
mov
jne
andl
lea
push
pushl
mov
push
call
test
jne
mov
sub
jne
cmpl
jne
testb
jne
xor
mov
pop
pop
xor
pop
call
leave
ret
andl
lea
push
pushl
mov
pushl
mov
call
test
jne
testb
je
cmpl
je
jmp
test
je
mov
pushl
add
push
push
call
add
jmp
push
mov
push
mov
testb
jne
mov
mov
push
mov
push
pushl
pushl
call
test
js
orl
pushl
mov
pushl
mov
call
mov
test
js
mov
pop
pop
pop
ret
mov
jmp
push
mov
push
mov
push
mov
test
je
cmpl
je
push
lea
push
mov
call
mov
push
push
call
mov
test
pop
je
pushl
push
call
andl
mov
push
lea
call
mov
mov
lea
push
push
push
call
lea
mov
call
mov
pop
pop
pop
ret
push
mov
push
push
mov
push
lea
mov
test
mov
je
mov
push
call
mov
test
je
movzwl
mov
push
pushl
push
call
mov
andl
andw
lea
call
pop
pop
mov
pop
pop
ret
push
push
mov
mov
push
lea
push
call
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
ret
test
je
mov
push
mov
call
test
je
mov
mov
cmp
je
mov
cmpb
jne
mov
mov
call
test
jne
push
mov
test
jne
xor
test
jne
and
jne
mov
pop
ret
mov
mov
and
je
jmp
mov
call
jmp
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
cmp
push
je
cmp
jbe
cmp
jne
mov
mov
lea
push
push
xor
mov
push
movl
mov
mov
call
add
cmp
je
mov
push
mov
mov
call
add
cmp
je
mov
lea
mov
lea
movl
push
push
mov
movl
mov
mov
call
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
cltd
mov
mov
movl
mov
mov
pop
pop
pop
mov
pop
ret
push
call
xor
add
cmp
je
mov
mov
mov
fldl
mov
fstpl
movl
pop
pop
pop
mov
pop
ret
cmp
je
cmp
jne
push
call
xor
add
cmp
je
mov
pop
pop
movl
pop
mov
pop
ret
push
mov
push
mov
mov
test
mov
je
mov
push
call
mov
mov
mov
mov
mov
test
je
mov
push
push
push
call
mov
lea
call
mov
pop
pop
ret
xor
jmp
push
mov
push
push
mov
cmpb
jne
movb
mov
test
mov
movb
jne
mov
mov
andl
push
inc
push
lea
mov
call
mov
mov
lea
push
push
call
test
js
mov
push
lea
push
mov
call
mov
push
push
call
mov
mov
lea
push
push
call
lea
call
movb
xor
pop
pop
pop
leave
ret
mov
mov
pushl
mov
mov
push
push
call
movsbl
add
and
ret
testb
push
mov
movl
je
push
call
pop
mov
pop
ret
mov
test
je
movw
xor
ret
mov
lea
push
mov
or
lock
dec
pop
je
ret
xor
inc
mov
mov
push
call
xor
jmp
push
mov
sub
mov
push
push
push
xor
mov
mov
cmp
mov
je
lea
call
pushl
lea
call
mov
call
test
je
movl
push
lea
mov
call
lea
push
call
mov
test
pop
jne
mov
push
lea
mov
call
pushl
lea
push
push
call
add
test
jne
mov
push
lea
mov
call
push
push
push
push
pushl
lea
push
xor
call
add
test
jne
call
cmp
mov
je
mov
push
call
cmp
je
mov
pushl
mov
push
call
cmp
je
mov
mov
push
lea
mov
mov
call
pushl
mov
push
lea
push
push
pushl
mov
pushl
push
call
test
jne
mov
push
lea
mov
call
mov
lea
push
push
call
test
jne
pushl
pushl
pushl
call
add
test
jne
mov
mov
mov
mov
lea
mov
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
leave
ret
push
push
mov
push
mov
push
mov
push
mov
mov
cmpl
jge
cmpl
movl
je
testl
je
nop
sub
push
push
push
call
mov
add
test
je
sub
add
add
cmp
jbe
cmpb
jne
sub
push
push
push
movb
call
test
js
testb
jne
lea
mov
jmp
testb
jne
mov
sub
jne
xor
pop
pop
pop
pop
pop
ret
push
call
add
test
je
call
test
mov
je
mov
test
je
jmp
mov
test
je
mov
mov
call
test
jne
orl
cmp
jb
mov
push
push
push
push
call
test
je
cmp
jbe
jmp
xor
jmp
mov
jmp
mov
and
or
jne
mov
ret
push
mov
push
push
pushl
andl
andl
mov
lea
call
mov
test
je
pushl
mov
call
push
mov
lea
call
mov
test
mov
jne
lea
call
lea
call
mov
leave
ret
mov
push
call
jmp
push
xor
cmp
je
cmp
jne
push
push
call
cmp
pop
je
movl
movl
mov
mov
xor
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
cmp
je
pushl
mov
pushl
push
call
test
js
xor
pop
pop
ret
xor
jmp
push
mov
and
sub
push
mov
cmpl
push
push
mov
je
mov
test
jne
xor
pop
pop
pop
mov
pop
ret
push
lea
sub
mov
xor
mov
mov
and
neg
push
push
sbb
inc
mov
lea
push
call
mov
xor
cmp
mov
jne
cmp
jne
testb
jne
mov
cmp
jne
pushl
mov
push
mov
call
cmp
movb
jne
mov
mov
lea
push
mov
call
mov
push
mov
lea
mov
mov
call
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
cmp
jne
mov
mov
cmp
jne
movzbl
push
push
lea
call
testb
je
mov
add
push
call
test
pop
je
lea
call
lea
call
lea
call
mov
pop
xor
pop
call
add
leave
ret
cmp
je
cmp
jne
mov
mov
lea
push
call
cmp
je
jmp
cmp
je
mov
lea
push
call
cmp
je
jmp
movb
jmp
pushl
mov
push
mov
call
test
je
jmp
int3
int3
int3
int3
int3
int3
int3
mov
test
push
push
je
mov
mov
mov
cmp
je
mov
add
test
jne
mov
pop
movl
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
xor
cmp
jg
xor
cmp
jg
xor
cmp
jne
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
call
test
je
xor
ret
xor
inc
ret
push
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
test
je
push
mov
cmpw
je
test
jbe
mov
mov
lea
cmpw
je
sub
add
test
jne
push
mov
mov
call
add
test
je
cmpl
jne
test
jbe
mov
mov
nop
cmpw
je
sub
add
test
jne
mov
lea
push
movb
call
test
je
movl
mov
lea
mov
push
lea
mov
mov
push
lea
push
movl
movl
mov
mov
call
mov
test
jne
test
jne
xor
pop
pop
pop
add
ret
mov
lea
mov
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
lea
push
lea
push
lea
push
lea
mov
mov
mov
mov
call
add
test
jne
mov
lea
lea
mov
movl
movl
movl
call
push
push
mov
call
add
test
jne
push
push
call
mov
add
jmp
push
lea
sub
mov
xor
mov
mov
mov
push
mov
lea
push
mov
mov
mov
mov
cmp
lea
ja
mov
test
jne
mov
mov
cmp
mov
lea
ja
xor
test
jne
mov
test
jne
mov
mov
mov
mov
add
mov
cmp
mov
jb
mov
push
pushl
mov
pushl
call
test
je
test
jbe
mov
mov
lea
push
push
mov
call
mov
pop
xor
pop
call
add
leave
ret
cmp
jae
jmp
push
call
pop
ret
push
mov
sub
mov
xor
mov
mov
andl
push
mov
push
mov
lea
call
mov
test
jne
lea
call
mov
xor
xor
pop
call
leave
ret
andl
push
push
lea
push
lea
lea
push
mov
movl
movl
mov
movb
movl
movl
movl
mov
push
call
testb
mov
jne
testb
jne
test
jns
testb
jne
testb
jne
lea
call
pop
pop
jmp
push
push
push
push
push
lea
mov
mov
push
push
call
mov
mov
cmp
jne
push
push
lea
mov
mov
push
push
call
mov
cmp
jne
mov
test
mov
jne
test
jne
lea
call
lea
call
lea
call
pop
pop
mov
pop
jmp
lea
call
jmp
push
mov
sub
mov
push
push
xor
push
lea
lea
movl
mov
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
test
js
pushl
mov
push
mov
mov
push
call
lea
mov
call
lea
call
lea
call
pop
mov
pop
leave
ret
push
mov
and
sub
push
mov
push
xor
cmp
push
je
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
lea
call
mov
cmp
push
mov
je
mov
push
call
lea
call
mov
test
jne
push
lea
mov
call
lea
push
mov
call
test
jne
mov
push
call
mov
lea
push
call
test
jne
cmpl
je
cmpl
movl
je
lea
push
pushl
mov
push
lea
call
mov
test
jne
cmpl
je
lea
call
mov
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
push
push
call
mov
add
xor
test
je
mov
push
push
lea
push
push
push
push
mov
push
push
call
add
test
js
mov
movl
testl
jne
lea
call
mov
push
push
lea
call
test
je
mov
mov
lea
push
push
mov
movl
movl
movl
call
mov
mov
lea
push
push
push
push
call
add
test
je
movb
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
cmpb
jne
mov
mov
mov
push
push
push
call
add
cmp
jne
mov
mov
test
mov
jne
xor
test
js
test
je
mov
mov
mov
push
call
test
js
mov
lea
mov
call
push
call
mov
add
pop
pop
pop
mov
pop
ret
cmpb
jne
cmpl
mov
jne
mov
test
je
and
test
je
pushl
mov
push
mov
call
test
jne
inc
ret
pushl
mov
push
call
neg
sbb
inc
ret
xor
ret
xor
jmp
test
je
mov
test
jne
mov
test
jns
cmpl
je
push
lea
call
mov
neg
sbb
and
je
mov
ret
xor
ret
push
mov
sub
push
mov
push
pushl
mov
pushl
push
push
call
test
js
mov
mov
push
mov
mov
mov
lea
push
push
push
call
mov
push
push
mov
call
test
pop
pop
js
mov
mov
call
mov
mov
mov
push
push
push
call
andl
mov
mov
mov
test
je
mov
mov
mov
call
test
je
mov
cmpl
jne
xor
test
jne
mov
test
je
lea
push
mov
call
test
jne
mov
mov
mov
mov
test
mov
je
mov
push
call
mov
cmpl
jne
cmp
jne
movl
lea
call
mov
mov
mov
mov
lea
push
call
mov
andl
push
mov
lea
mov
call
mov
orl
test
je
mov
lea
push
push
call
test
js
cmpl
jne
movb
mov
mov
call
test
je
mov
mov
cmp
je
lea
call
lea
call
mov
pop
pop
pop
leave
ret
cmp
je
cmp
jne
movl
jmp
cmpl
jne
mov
push
pushl
mov
pushl
push
call
test
je
mov
mov
mov
mov
call
test
je
mov
push
mov
call
jmp
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
push
mov
push
push
push
mov
add
mov
mov
push
lea
lea
cmp
je
mov
lea
call
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
mov
jne
mov
mov
test
je
push
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
push
push
call
xor
jmp
xor
jmp
push
mov
test
push
je
xor
inc
pop
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
mov
cmp
jne
mov
push
mov
test
push
push
jbe
xor
mov
mov
mov
mov
mov
mov
mov
push
call
test
je
pop
pop
pop
mov
pop
ret
add
add
cmp
jb
pop
pop
pop
xor
pop
ret
cmp
ja
push
push
call
mov
jl
rolb
add
xchg
bound
add
add
mov
jae
push
data16
pusha
clc
add
fcomp
shrl
sub
push
mov
add
push
push
push
push
push
push
lea
push
call
mov
add
xchg
out
pop
jmp
add
add
aam
add
clc
add
pop
lea
loope
add
add
loop
add
mov
xchg
call
jl
add
lret
test
lahf
flds
jno
in
call
push
push
push
lea
push
push
push
push
push
call
fldl
addl
jmp
mov
lock
lds
add
loop
add
fdivs
pop
xchg
add
cltd
gs
add
sub
pop
push
push
push
push
push
push
push
push
lea
push
push
push
call
cltd
mov
lcall
push
mov
add
lret
loopne
mov
add
add
xchg
push
jl
clc
xor
lcall
push
push
call
mov
add
roll
aam
roll
loopne
add
add
andb
shll
xchg
cltd
add
in
sub
pop
push
push
lea
push
push
push
push
push
lea
push
lea
push
lea
push
call
roll
mov
add
cld
add
add
add
out
lahf
mov
cwtl
push
add
pop
call
push
push
lea
push
lea
push
lea
push
lea
push
call
cld
add
add
add
stos
add
loope
push
pushf
mov
mov
test
testl
add
add
add
add
lret
mov
jle
add
mov
add
mov
xchg
sahf
add
mov
add
mov
add
pushf
jle
add
insb
cld
add
pop
iret
sub
pop
call
jmp
push
push
push
push
lea
push
call
push
add
add
xchg
add
add
add
fstpl
xorl
add
imul
stos
stos
mul
pop
mov
sub
pop
ret
push
lea
push
push
push
push
push
push
call
popa
mov
pop
add
stc
push
cmpsb
add
fs
icebp
add
shl
add
xchg
add
mov
sar
out
movsb
add
add
add
out
add
mov
stc
add
mov
into
add
sbb
add
jmp
add
add
inc
hlt
push
lea
push
push
push
lea
push
push
push
push
call
nop
jecxz
add
pop
add
jmp
addl
outsl
jl
add
xchg
add
mov
add
add
fcoml
pusha
add
iret
add
fldl
jl
insb
add
jmp
lcall
pop
hlt
add
push
lea
push
push
push
call
icebp
mov
int3
bnd
mov
hlt
jge
repnz
add
lcall
add
add
add
lcall
popf
sub
pop
add
add
push
lea
push
push
push
lea
push
push
call
add
call
scas
xchg
add
add
shl
add
js
add
loopne
add
ja
rcrb
cli
add
mov
in
call
mov
push
push
push
push
push
lea
push
push
push
push
push
call
stos
mov
mov
add
lock
jnp
mov
cld
jbe
add
jnp
add
lcall
in
jae
rolb
jno
cld
add
mov
incb
add
lret
add
incb
mov
pop
jo
in
fdivr
lcall
sbb
push
push
push
lea
push
push
push
call
jge
add
fs
test
mov
cltd
add
add
pop
shl
clc
pop
sub
xchg
insb
add
jecxz
jnp
sub
pop
add
push
push
lea
lea
push
push
pop
add
rol
sub
xor
ror
pop
shl
dec
sub
pop
push
lea
push
push
push
lea
push
push
lea
push
push
call
fadds
je
movsl
outsl
add
add
clc
pop
add
clc
add
cmpsl
jmp
in
push
add
push
add
in
loopne
pushl
push
push
push
lea
push
push
call
pop
stc
lahf
pushf
leave
pop
lea
jne
cli
add
add
roll
lcall
add
sarb
roll
sti
in
jne
in
test
jle
mov
lcall
xchg
in
stos
add
add
ret
push
in
in
pop
call
push
push
push
push
push
push
push
lea
push
push
call
push
leave
testb
mov
add
push
addr16
xlat
pushf
jecxz
add
divl
movsl
push
aad
add
pusha
push
mov
imul
add
xchg
jl
add
jle
jnp
add
idivb
jmp
imul
in
add
pop
ja
sub
pop
mov
push
push
lea
push
lea
push
push
push
push
push
lea
push
call
mov
add
add
cwtl
aad
pusha
out
xchg
sbbl
insb
mov
push
cli
shll
mov
lret
movsb
add
push
je
scas
add
ja
add
jb
push
mov
into
adcl
je
add
add
popf
mov
in
fdivr
lcall
inc
call
push
lea
push
lea
push
push
call
cld
enter
mov
fdivl
add
test
xchg
add
add
aad
fadd
mov
in
add
out
lret
gs
fwait
add
mov
in
add
add
add
int
add
jl
add
pop
lea
push
push
push
push
call
add
add
lds
pop
fsubrl
add
rclb
je
jge
add
iret
push
lret
add
add
roll
jno
add
add
out
add
mov
add
movsb
add
aad
push
mov
add
pop
pushl
push
push
push
push
call
cmpsb
lea
add
clc
mov
add
xchg
arpl
add
jo
push
shr
stc
movsl
xchg
fmul
mov
pusha
cld
pop
add
testb
cwtl
mov
icebp
add
out
insb
repnz
flds
clc
addl
add
mov
jne
call
push
push
push
lea
push
push
lea
push
push
push
lea
push
lea
push
call
cmpl
mov
add
jbe
sti
xchg
xchg
movsb
mov
pop
add
call
add
add
xchg
add
fsubrl
imul
loope
add
cltd
stos
add
add
add
add
fcomps
jne
push
push
call
mov
jp
add
xchg
jge
jno
add
rcll
pusha
add
lods
popf
fnstsw
add
add
lcall
add
add
push
mov
in
clc
lcall
jne
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
ljmp
mov
jecxz
push
jne
insb
mov
fcmovu
fldt
jnp
out
cwtl
test
pop
add
movl
add
stos
cwtl
jbe
mov
mov
stc
mov
test
cld
add
add
add
lcall
sub
add
mov
push
add
shl
dec
push
or
not
add
shr
shr
sub
sub
pop
ror
add
xor
sub
pop
push
push
push
push
push
push
push
push
call
pop
add
clc
add
xchg
rorl
add
repnz
stos
mov
push
xchg
nop
add
add
add
add
xchg
add
jns
in
loopne
lcall
jne
push
lea
push
push
lea
push
push
push
push
push
lea
push
push
call
add
add
mov
addl
add
add
mov
lcall
add
mul
add
add
add
jns
hlt
add
add
cltd
mov
fcomps
imul
add
mov
add
cld
pushf
aam
in
xchg
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
mov
add
jbe
add
ja
mov
add
mov
ficompl
testb
add
std
aad
pop
repnz
add
add
add
addl
addb
add
xchg
mov
addl
add
sub
pop
push
push
push
shr
rol
push
and
add
dec
shl
sub
dec
inc
dec
rol
pop
add
inc
rol
pop
push
lea
push
push
push
push
lea
push
call
mov
add
aam
fnstenv
add
ret
pop
add
repnz
rolb
jl
rcll
imul
lcall
push
lea
push
push
push
call
jae
faddl
iret
push
into
mov
mov
mov
add
pop
rolb
add
push
std
nop
add
hlt
add
add
xchg
ljmp
add
stos
ja
in
jae
lods
jmp
xchg
xchg
movsl
add
jmp
add
add
add
sub
pop
push
call
push
push
push
push
push
push
push
push
call
scas
mov
add
in
bound
fwait
mov
fadds
add
cmpsl
add
jl
mov
fadds
add
add
add
sub
pop
mov
push
push
push
lea
push
push
lea
push
push
lea
push
push
call
push
js
add
add
xchg
outsl
int
sti
add
pop
add
hlt
mov
popf
add
jl
add
fists
nop
arpl
add
aad
add
out
push
jnp
add
add
pop
cld
add
jne
lret
pop
xchg
add
add
movsl
add
movsl
mov
rclb
sub
pop
push
push
push
lea
push
push
push
push
push
push
push
push
push
call
mov
xchg
push
test
add
add
cmpsb
add
add
loop
ja
add
add
fiadds
outsl
test
fs
in
fdivr
lcall
pop
hlt
add
push
push
push
lea
push
lea
push
push
call
add
lds
leave
add
lahf
add
add
jmp
shrb
subb
mov
mov
cwtl
cwtl
pop
add
out
in
rcrl
add
leavew
add
add
testb
add
aad
jl
add
mov
into
add
add
add
push
push
lea
push
push
push
push
lea
push
push
call
pop
add
add
iret
add
lret
rolb
add
pop
add
add
mov
add
sub
pop
mov
xor
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
js
add
jp
add
add
push
call
rcr
stos
mov
add
sti
cmc
add
add
pop
add
add
popa
arpl
add
add
sub
pop
add
push
push
push
push
push
push
push
push
push
call
fldt
int
add
test
sti
shlb
aam
xchg
add
lea
lock
mov
xchg
rcrl
fdivr
lcall
push
push
push
call
add
add
cld
ja
add
mov
mov
xchg
add
filds
add
add
push
fwait
mov
mov
add
test
add
add
add
add
loopne
add
lcall
inc
or
jno
adc
loope
in
push
push
push
push
call
xchg
mov
sarl
sahf
in
add
add
add
pop
leave
add
add
ja
data16
les
add
jnp
xlat
add
pop
add
fwait
bound
std
iret
add
cwtl
js
cmpsl
jge
and
add
out
stos
add
sub
pop
xor
push
push
push
lea
push
call
faddl
add
add
add
leave
loope
fnstenv
bound
jmp
add
mov
jb
testl
add
xchg
stc
in
add
add
imul
testb
sub
pop
add
push
push
push
lea
push
push
push
push
push
call
nop
push
int3
fiaddl
add
testb
cld
je
subl
add
pop
andl
popa
add
mov
sahf
aad
add
jne
loop
fsubrl
cltd
test
in
jmp
mov
ja
add
xchg
jge
add
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
call
push
add
push
add
js
mov
cmpsl
mov
add
mov
ficomps
aad
fldenv
mov
scas
add
fxtract
xchg
out
rclb
fisubs
add
pop
jns
enter
stos
data16
lcall
mov
xor
push
push
push
push
push
push
push
push
call
enter
xchg
scas
add
add
mov
add
jb
je
mov
jbe
lea
int
incb
mov
in
mov
addl
add
add
add
in
add
insb
add
sub
pop
push
push
push
push
push
push
lea
push
push
push
push
call
pop
add
mov
in
add
add
int3
jns
add
mov
xchg
jnp
add
add
stc
add
add
add
testl
or
adc
call
add
rcrl
test
xchg
lret
xchg
add
add
pop
jae
in
add
add
sahf
call
clc
pop
scas
xchg
add
jo
add
sti
adc
add
cmpb
mov
out
push
cmpsb
sub
pop
sub
pop
push
push
push
push
push
call
push
pop
push
add
add
xchg
mov
jns
add
push
add
jb
add
mov
add
mov
add
pop
jbe
lods
add
shll
xchg
mov
stos
add
rolb
arpl
add
data16
enter
add
icebp
js
icebp
filds
mov
sarb
lcall
movsb
push
push
push
push
push
lea
push
lea
push
call
add
addl
in
add
fildl
in
xchg
add
xchg
addr16
add
data16
negl
fiaddl
pushf
add
popa
add
sub
pop
pop
push
push
push
push
push
call
mov
stos
testl
add
addl
fimull
jecxz
rolb
jae
mov
add
jl
add
mov
mov
fisubs
add
je
add
add
add
loop
loop
add
xchg
lahf
sub
pop
mov
push
push
call
roll
add
jecxz
mov
lock
add
cwtl
test
incb
add
mov
add
shl
fiadds
mov
add
pusha
jns
add
out
push
lcall
loope
add
insb
in
add
addb
iret
mov
pop
repnz
push
add
outsl
ret
mov
sub
pop
add
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
push
test
add
add
neg
jo
add
loop
push
add
add
add
push
xchg
add
add
jmp
sti
add
pop
scas
add
mov
loopne
lcall
ret
add
add
add
push
push
call
jne
scas
insb
jecxz
insb
add
mov
stos
sarb
add
add
in
jl
into
add
test
lahf
cltd
jnp
test
ja
add
add
add
test
ret
jp
lods
add
in
clc
pop
mov
push
push
push
push
push
call
jne
les
movsl
scas
leave
add
add
add
loope
add
pop
ljmp
test
add
pop
add
add
push
cld
mov
mov
add
loop
loop
mov
add
lcall
add
push
push
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
add
js
testl
mov
movsl
lret
add
mov
loopne
lods
add
xchg
add
xchg
les
fdivr
lcall
les
add
push
push
lea
push
push
push
push
push
call
add
out
sarl
add
mov
add
fstp
add
xchg
add
mov
mov
mov
rorl
jp
add
add
add
fidivrs
jno
shlb
add
xor
xlat
add
add
add
in
in
mov
xor
push
push
call
add
popf
mov
add
mov
add
add
pop
pop
xchg
add
add
fidivs
jns
pop
ja
mov
jb
enter
in
fwait
add
jmp
clc
mov
add
xchg
add
mov
sub
pop
mov
push
push
push
lea
push
call
add
add
pop
mov
fadds
gs
aam
jns
xchg
add
xchg
add
add
hlt
pop
xor
push
push
push
push
lea
push
call
jno
push
mov
add
add
in
add
add
ret
lahf
je
add
lods
jno
test
pop
jo
jo
add
les
mov
cli
add
mov
xlat
xchg
mov
xchg
jmp
lret
scas
pop
add
add
sub
pop
add
push
push
push
lea
push
push
call
push
jl
lods
jl
stos
rolb
loop
add
add
push
movsl
add
mov
add
add
cltd
add
add
mov
add
nop
pusha
in
push
add
cltd
add
add
pop
out
cmc
rcll
push
pop
mov
mov
add
push
push
push
push
call
add
pop
jne
add
int3
add
mov
js
icebp
push
xchg
add
add
mov
leave
jno
fmull
outsl
cltd
icebp
imul
lahf
sahf
jge
call
add
jl
arpl
add
pop
mov
add
je
les
add
loope
add
bound
rcr
fiadds
jmp
pop
add
les
add
rorb
lcall
fsubrs
sub
leave
push
or
inc
add
inc
lea
sub
shr
not
pop
lea
not
pop
push
lea
push
lea
push
push
lea
push
push
lea
push
call
mov
add
jbe
jmp
lds
movsl
add
add
rcrb
add
cmpsb
add
loope
data16
movsl
add
jle
add
add
stos
mov
add
add
cld
add
shl
cmpsb
add
sub
pop
pushl
call
push
lea
push
call
add
andb
mov
rolb
add
push
add
stos
into
mov
xchg
mov
add
repnz
add
push
int3
add
pusha
pop
scas
pop
add
pop
fnsave
add
sub
pop
push
push
push
sub
push
push
pop
add
sub
add
sub
add
pop
inc
inc
pop
push
push
lea
push
push
push
lea
push
call
add
add
imul
jp
jne
xchg
lods
add
cltd
mov
stc
test
push
pop
shl
add
mov
lret
sbbb
call
push
push
push
shl
pop
call
mov
push
push
push
push
push
lea
push
call
add
filds
add
int
add
add
stos
fldl
jo
lahf
andl
data16
add
push
scas
jp
push
xchg
fadds
add
add
add
add
mov
rolb
push
ljmp
pop
push
push
lea
push
push
push
push
lea
push
push
push
call
fs
add
scas
scas
add
outsl
cld
mov
add
lret
mov
mov
outsl
add
imul
cltd
sahf
sahf
add
icebp
add
rorl
sbbb
loopne
lcall
push
add
pop
mov
push
lea
push
lea
push
push
call
add
shlb
pop
xchg
jp
mov
add
mov
add
mov
push
jge
fs
les
mov
add
lret
sub
pop
add
push
xor
sub
xor
rol
pop
add
push
push
push
push
call
add
xchg
mov
add
add
pop
jnp
push
lds
ljmp
pop
xchg
pop
notl
add
add
test
roll
lds
add
gs
int3
add
pop
jae
add
test
int
loop
add
test
pop
add
push
lea
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
call
add
add
mov
add
out
lcall
add
fadds
and
add
pop
mov
add
mov
arpl
add
add
ja
add
add
add
jp
data16
cmc
mov
add
push
push
cld
add
jecxz
in
fdivr
lcall
jae
push
push
lea
push
push
lea
push
push
push
push
push
call
leave
add
add
icebp
add
shl
push
add
jae
out
add
ljmp
movsl
jl
pop
xchg
add
rolb
cltd
leave
add
sahf
mov
add
add
in
icebp
sub
pop
xor
push
push
push
call
add
add
add
add
repnz
push
add
test
mov
clc
push
pop
add
add
fmuls
icebp
cli
movsb
mov
xlat
movsl
mov
test
add
lcall
add
movl
pop
add
push
rol
pop
add
push
push
lea
push
push
push
push
push
push
push
lea
push
call
fdivl
shl
std
add
in
faddl
add
rolb
fwait
add
pop
fs
lret
add
add
add
stos
add
sti
scas
imul
movl
out
jecxz
cli
scas
xchg
pop
data16
jp
js
mov
imul
lcall
push
lea
pop
mov
push
push
push
push
lea
push
push
push
call
add
pusha
addb
push
add
add
push
int3
addb
add
jno
icebp
imul
xchg
push
insb
ja
jne
add
push
jnp
test
test
rolb
je
add
jecxz
add
xchg
popf
loop
xchg
rcrl
pop
mov
scas
add
rcll
imulb
add
lret
add
in
add
add
push
push
push
push
push
push
push
push
call
push
divl
adcl
int3
cld
in
add
add
push
add
add
pop
add
add
add
add
jmp
add
add
roll
xor
add
fadds
les
not
pop
add
push
lea
push
push
push
push
push
call
add
jl
nop
lods
int3
push
add
add
mov
add
add
mov
jp
rcl
add
pop
sti
std
loope
in
add
lcall
push
push
lea
push
push
lea
push
lea
push
push
push
push
push
call
mov
stos
add
cwtl
xchg
fnstenv
insb
hlt
fxch
out
out
push
mov
mov
lcall
std
xchg
lahf
mov
add
xchg
ret
add
in
aad
xchg
add
jnp
add
add
imul
add
mov
mov
in
fcomps
dec
and
adc
lea
pop
rep
push
shl
add
dec
inc
pop
mov
push
push
lea
push
push
push
lea
push
push
lea
push
call
add
lcall
xchg
fadds
mov
loopne
rolb
pusha
add
je
add
add
stc
add
loope
add
push
add
add
add
add
mulb
add
sub
pop
xor
push
push
push
call
ficompl
cmpsb
add
clc
stc
sahf
push
pop
cmc
jmp
add
push
add
add
imul
mov
add
mov
add
movsb
std
lods
add
gs
jl
add
add
mov
mov
add
add
mov
in
hlt
pop
add
push
push
call
lea
popa
mov
lahf
clc
add
js
fs
les
mov
mov
lods
stc
add
addl
add
add
add
addr16
add
add
add
add
cwtl
pop
test
jbe
add
stos
pop
add
add
in
clc
pop
or
je
push
push
push
push
push
push
push
push
push
call
aad
xchg
mull
faddl
add
roll
sahf
sti
add
add
add
push
into
cmpsb
mov
leave
cld
jae
lret
add
pusha
add
pop
push
fcompl
xor
jno
adc
pop
add
xor
xchg
mov
lea
push
lea
push
push
call
fldl
fldl
pop
push
enter
mov
add
into
insb
add
jmp
insb
ret
add
jbe
cltd
fs
add
add
add
hlt
add
add
mov
xchg
arpl
cli
aam
stos
rorl
jge
repnz
bound
rolb
mov
add
mov
sub
pop
xor
push
push
call
add
jne
stc
add
shl
add
shlb
flds
add
add
iret
mov
mov
ja
add
add
add
les
push
xchg
add
roll
add
mov
push
fnstsw
push
mov
mov
sub
pop
add
push
push
push
lea
push
lea
push
lea
push
push
call
pop
mov
enter
aad
add
add
shlb
add
add
adc
mov
lods
fisubs
xchg
mov
pusha
addb
add
fsubs
lcall
push
sbb
jno
adc
cmpl
in
push
push
push
call
imul
fiaddl
mov
add
aad
call
icebp
in
scas
add
lds
movb
testl
call
mov
jo
push
add
jno
jo
jb
add
mov
jecxz
shr
les
add
mov
popf
js
add
cld
sub
pop
xor
push
push
lea
push
push
call
jnp
lret
loop
out
add
mov
add
jne
ja
add
push
jb
add
add
add
nop
fildl
add
add
fildl
into
sahf
add
mov
add
lcall
les
add
push
shl
shr
dec
shl
pop
add
push
lea
push
push
push
lea
push
push
push
lea
push
call
lcall
jmp
into
addb
add
outsl
out
loopne
movb
mov
fcoml
jae
in
loopne
lcall
jne
push
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
test
pop
add
add
cltd
bound
fsubs
add
push
jmp
add
js
lret
add
aad
sub
pop
mov
xor
push
add
rol
add
sub
pop
add
push
lea
push
lea
push
call
add
cli
add
data16
add
add
add
push
add
jmp
mov
pushf
add
add
jb
add
add
fsubrp
add
add
pop
mov
jb
add
add
outsl
add
pop
pop
rep
push
not
xor
pop
mov
push
push
lea
push
push
push
push
lea
push
call
rolb
push
add
out
add
les
out
add
lds
push
add
add
add
fdiv
add
add
add
popa
shll
rorl
mov
and
rcr
lods
add
cwtl
add
add
test
push
scas
popf
add
mov
in
call
xor
push
lea
push
lea
push
push
lea
push
push
call
pusha
push
add
xchg
lea
mov
add
add
fisubrs
fadds
jl
mov
fwait
sbbl
addb
add
mov
mov
stos
clc
add
sarb
add
add
mov
in
call
add
add
and
or
je
push
shl
pop
mov
add
push
inc
shl
lea
sub
pop
add
push
push
push
push
call
mov
lcall
loope
add
add
add
lret
add
add
pop
lds
not
js
add
jecxz
ja
stc
add
in
add
add
popa
add
sub
pop
rep
push
dec
pop
pop
push
push
xor
sub
ror
push
xor
add
xor
sub
shl
inc
xor
pop
dec
dec
shl
rol
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
push
call
fs
stos
ljmp
xchg
cmc
push
add
mov
addb
add
xorl
add
add
add
add
add
add
add
mov
js
sahf
pop
bound
xchg
hlt
fcomi
cld
cli
roll
lea
xor
not
sub
pop
mov
mov
push
push
push
push
lea
push
push
call
mov
mov
outsl
add
add
jnp
test
add
loopne
mov
jge
mov
mull
add
xchg
add
add
add
jp
mov
xchg
add
cmpsl
fildl
call
add
push
push
push
push
push
call
jnp
roll
jge
loopne
push
pop
add
data16
add
lds
add
jae
add
fldl
loope
fmul
add
stos
add
mov
add
mov
bound
mov
add
push
mov
mov
jbe
xchg
add
sub
pop
jmp
push
shr
pop
push
push
push
push
call
sarb
add
add
add
jmp
jl
into
idivl
testb
push
mov
test
mov
push
add
jle
add
add
add
pop
xchg
pop
fnsave
jne
mov
imul
add
out
pop
jb
mov
mov
jnp
add
push
in
hlt
pop
mov
add
push
shr
sub
dec
pop
push
push
dec
dec
add
pop
push
push
ror
add
rol
sub
pop
push
push
push
push
call
out
scas
pop
add
int
add
add
add
jbe
aad
je
add
imull
stos
add
les
addl
int3
push
add
fcom
jecxz
push
xchg
add
mov
test
loop
int3
cltd
push
add
add
jge
jbe
insb
aam
add
aam
jnp
add
sahf
roll
sub
pop
push
push
push
push
push
push
push
push
call
fisttps
add
add
mov
pop
mov
imul
test
push
add
in
cli
in
lds
gs
add
add
loop
add
add
int
pusha
add
icebp
insb
mov
add
sub
pop
mov
push
xor
lea
shr
pop
pop
push
shr
pop
pop
push
add
shr
inc
sub
pop
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
add
add
add
xchg
add
mov
out
add
add
pop
incb
xchg
add
mov
into
fidivrs
add
out
add
icebp
xchg
add
out
test
add
in
fcomps
push
push
push
push
call
add
mov
loopne
add
insb
fnstcw
push
push
jmp
add
shl
add
add
out
add
mov
pushf
xchg
ret
add
add
cmc
add
hlt
mov
call
pop
push
popf
lea
pop
sahf
xchg
lcall
mov
bound
lcall
push
rol
lea
pop
ret
push
push
lea
push
push
lea
push
push
lea
push
push
lea
push
call
jl
iret
add
pop
fmull
add
fistpl
mov
push
add
test
fidivs
testl
add
mov
popl
rcll
add
iret
cwtl
add
pop
add
xchg
fdivr
lcall
mov
push
lea
push
call
jbe
add
mov
pop
mov
lret
add
add
jo
add
add
add
out
jnp
mov
mov
push
mov
add
lret
cmc
add
arpl
scas
imul
add
movsb
lods
cwtl
sub
pop
add
push
push
push
call
icebp
add
leave
enter
add
add
bound
cmpsl
add
add
push
add
sahf
outsl
add
lods
add
hlt
lcall
push
pop
push
push
push
push
push
push
push
push
lea
push
call
cli
fwait
mov
shl
mov
addl
lock
add
mov
add
add
add
jmp
mov
shlb
stc
xchg
pop
mov
shlb
iret
add
rolb
push
lcall
push
lea
push
push
push
call
cld
lods
cmpsb
add
cmpb
add
lods
add
add
add
in
push
fs
jno
add
ljmp
lock
add
fists
les
mov
jo
mov
add
add
mov
mov
loopne
add
add
pushf
jle
mov
push
movl
push
shl
pop
addl
push
push
push
push
push
call
rcrl
add
subb
push
jns
call
add
test
pop
add
fisttpl
add
lods
add
in
mov
jbe
mov
sub
pop
test
je
mov
push
shr
sub
lea
pop
pop
pop
push
lea
push
call
cli
nop
int
add
add
stos
xchg
xchg
push
add
int3
imul
push
cltd
aad
add
add
stos
jle
push
pop
cmpsb
mov
add
mov
mov
mov
add
jp
lock
mov
clc
lcall
pop
push
shl
shl
pop
leave
push
sub
lea
shl
sub
pop
ret
push
lea
push
push
call
add
cwtl
pusha
bnd
add
add
add
outsl
mov
mov
rcrl
imul
int3
sti
xchg
imul
mov
jecxz
add
add
add
rcrb
jns
fdivp
mov
add
movsl
cmpsb
addr16
pop
adc
out
hlt
cmc
mov
add
cwtl
add
add
push
push
push
push
push
push
push
push
call
rcrb
add
movl
add
js
pop
add
add
add
add
lret
add
add
roll
xchg
pop
add
add
add
mov
add
jno
add
xorl
pop
add
stos
test
in
loopne
mov
push
push
lea
push
push
push
push
call
jb
enter
add
test
sarl
stos
mov
add
in
fisubs
jbe
add
add
ja
movl
lcall
cld
push
push
push
push
push
push
push
push
lea
push
call
rcll
into
add
add
ljmp
sahf
add
cld
out
icebp
add
add
roll
int3
pushf
add
cmpsl
add
add
add
add
in
loopne
push
push
ror
dec
pop
push
push
push
dec
pop
testl
push
lea
push
push
push
push
push
push
call
lea
add
add
int
push
add
add
xchg
data16
add
push
out
rolb
ljmp
cmpsl
aad
add
add
add
stc
add
fadds
data16
xchg
out
add
add
fs
lds
add
mov
decb
in
addl
push
push
push
push
push
push
push
push
push
push
call
fiaddl
add
test
add
add
pop
push
add
push
incb
add
add
push
popf
mov
pop
xchg
jb
add
stos
push
bound
pusha
add
rcrl
pop
out
mov
add
add
add
fldl
pop
into
cld
jnp
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
call
add
add
loopne
cld
xchg
add
js
sahf
add
scas
ljmp
xchg
lcall
add
movsl
xchg
add
shll
mov
add
xchg
add
pop
ljmp
add
sub
pop
mov
push
lea
push
push
lea
push
push
push
push
push
push
call
int
add
lcall
sbb
add
out
testl
xchg
xchg
stos
add
add
mov
test
pop
mov
add
mov
scas
add
imul
add
out
loope
movsl
jae
imul
sub
pop
pushl
push
sub
add
shl
pop
push
push
push
shl
ror
pop
call
push
sub
sub
pop
cmpl
jne
pop
push
lea
pop
pop
push
shr
lea
add
pop
pop
push
push
push
lea
push
push
push
lea
push
call
rcll
mov
cmpl
add
sahf
jmp
xchg
add
jmp
mov
add
xchg
loop
push
add
popa
add
js
in
in
lcall
push
push
lea
push
lea
push
push
push
lea
push
push
push
call
leave
loop
push
mov
add
std
jno
add
add
add
movsl
add
mov
xchg
pop
add
xchg
add
mov
add
add
add
add
add
add
rcl
call
out
into
lret
push
add
push
mov
push
sub
not
rol
pop
ret
push
add
pop
push
mov
push
push
push
call
test
add
add
mov
fxch
scas
in
repnz
add
mov
xchg
add
arpl
gs
pop
in
jp
push
mov
add
mov
sub
pop
add
push
add
inc
pop
push
push
lea
push
call
in
pop
jmp
add
push
mov
fiadds
add
add
add
add
push
imul
cmc
add
push
add
add
add
enter
call
add
cmpsb
test
mov
jbe
pop
jb
jl
push
mov
sub
pop
push
push
lea
add
lea
pop
push
push
not
dec
add
add
pop
push
push
sub
shr
sub
pop
movl
push
push
push
push
push
push
push
push
push
call
insb
out
add
add
ja
jo
add
xchg
in
lock
in
in
add
add
push
popa
lods
je
ror
add
shl
and
mov
add
lret
add
add
add
andl
add
add
add
mov
mov
add
mov
jno
add
pop
push
call
push
push
lea
push
push
push
call
mov
mov
push
add
fimull
jb
scas
jge
mov
fcomip
cltd
add
fsubrl
xlat
add
mov
insb
cwtd
xchg
add
nop
pop
fucomi
xchg
sub
pop
push
push
push
push
push
push
push
push
call
cmc
lret
add
fldl
test
add
mov
hlt
sahf
add
mov
out
mov
add
add
add
add
loop
add
jle
mov
imull
rol
push
add
fnstcw
lret
cmpsl
fwait
add
add
cltd
add
add
repnz
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
push
call
pop
int
add
add
fs
std
pop
add
add
out
add
lret
add
add
add
push
imul
add
add
add
xchg
cltd
test
push
jecxz
add
pop
add
sub
pop
subl
push
push
push
push
push
call
push
add
mov
jecxz
add
pop
rolb
add
call
fs
nop
mov
jbe
add
in
mov
mov
add
out
jb
cltd
mov
pop
jp
add
add
add
stc
add
gs
add
add
in
in
pop
cmpl
jne
push
push
lea
push
call
add
push
add
test
pop
push
popl
fwait
aam
addb
mov
jo
add
add
add
stc
add
xchg
fadds
add
pop
jo
push
ret
jge
jne
add
mov
into
mov
mov
fiadds
add
add
add
je
sub
pop
pop
pop
push
pop
pop
push
lea
lea
dec
pop
pop
push
shl
pop
leave
push
xor
pop
ret
push
push
push
lea
push
push
call
add
cmpsl
jl
add
add
add
mov
and
ljmp
xchg
scas
sti
add
lret
add
add
add
add
hlt
add
add
mov
add
add
insb
add
and
push
scas
add
outsl
sub
pop
push
mov
push
push
push
push
lea
push
lea
push
push
push
call
add
add
mov
sarb
add
add
add
mov
insb
add
mov
addl
in
loopne
lcall
cld
push
shr
pop
push
push
push
call
add
add
add
addb
jno
add
orl
mov
mov
mov
add
fildl
push
fiaddl
mov
push
fs
jecxz
add
call
add
mov
mov
pop
jmp
cmc
add
push
push
push
not
sub
pop
push
push
lea
push
call
movsb
add
lock
addl
mov
add
out
add
add
xchg
add
ret
mov
xchg
movsl
stc
incb
add
add
imul
nop
add
jno
push
pop
mov
cli
out
add
mov
add
lcall
inc
or
inc
cmp
rol
shr
pop
sub
push
push
push
push
lea
push
push
push
push
call
push
call
add
rcll
add
testl
lock
lret
cli
test
add
add
add
add
insb
mov
add
xchg
scas
imul
lcall
add
gs
push
push
push
push
push
lea
push
call
add
stos
mov
add
mov
shrb
mov
mov
pushf
add
test
imul
add
icebp
clc
pop
add
add
call
icebp
int
xchg
sub
pop
shr
push
ror
lea
pop
add
push
lea
inc
lea
pop
mov
push
sub
dec
pop
mov
add
push
push
push
push
push
push
call
lods
add
loopne
rolb
mov
add
xchg
push
add
popa
add
std
add
outsl
xorl
in
add
add
aad
xchg
testb
je
jo
int
jge
add
add
mov
testl
lea
push
push
push
push
push
push
push
call
fisttpl
jns
add
xchg
add
subl
jns
add
add
xchg
imul
testb
xchg
pop
in
loope
out
fisubrs
add
add
add
add
hlt
je
imul
mov
add
add
add
nop
iret
add
pop
mov
mov
push
dec
not
xor
pop
cmp
jne
push
push
push
push
push
push
push
call
mov
ljmp
icebp
xchg
add
mov
sti
nop
mov
add
shl
fsts
mov
add
push
xchg
nop
add
in
in
cmp
jne
mov
push
push
push
push
push
push
push
call
add
je
push
add
jnp
push
lret
add
add
add
add
stos
push
stos
test
cmpsb
shlb
pop
add
add
add
add
in
add
bound
mov
enter
xchg
add
add
addl
lcall
add
add
add
mov
push
push
push
lea
push
push
push
call
add
add
add
add
pushf
xchg
push
add
add
lock
pop
subl
addl
pop
jmp
mov
push
lea
push
push
call
out
ja
jmp
pop
mov
push
add
loopne
mov
push
add
in
add
cli
add
push
mov
xchg
add
fisubl
add
add
mov
outsl
neg
add
decb
add
popa
test
shr
in
in
add
lcall
push
or
mov
xor
add
dec
add
add
add
jno
movsb
mov
add
xchg
mov
jnp
enter
add
cltd
xchg
leave
add
mov
mov
mov
add
fdivrp
test
pop
test
out
add
add
movsb
pop
add
add
mov
sub
pop
sub
jne
push
xor
inc
shl
sub
pop
mov
push
pop
movl
push
add
shr
pop
jmp
push
not
ror
sub
pop
mov
mov
push
shr
pop
cmp
jne
push
lea
dec
sub
ror
pop
mov
movl
push
push
push
push
lea
push
call
ljmp
add
mov
add
add
add
add
out
add
pushf
add
js
add
pop
les
add
jle
add
mov
cld
add
jb
add
addl
add
add
mov
add
lcall
xor
add
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
movsl
mov
pop
mov
jmp
jecxz
add
in
stos
in
hlt
test
mov
sahf
notb
add
jns
add
mov
popl
add
add
add
jae
add
in
fcompl
cmpl
jne
mov
push
xor
lea
pop
movl
push
not
pop
jmp
push
shr
sub
ror
shl
pop
pushl
push
shl
pop
pop
push
push
push
push
push
push
push
push
push
lea
push
call
gs
add
mov
jne
fldl
add
insb
add
add
add
push
loope
mov
js
add
add
fildl
int3
add
in
fdivr
lcall
inc
or
inc
sbb
sub
shr
inc
add
pop
mov
push
push
inc
add
dec
inc
push
xor
add
not
sub
add
lea
sub
sub
pop
sub
lea
xor
pop
push
add
shl
shl
pop
push
push
push
push
push
push
push
push
push
push
push
call
enter
repnz
jnp
jb
hlt
add
add
add
stc
jl
popa
push
cmpsl
nop
xchg
add
jecxz
pop
jnp
add
add
sbb
add
imul
push
cltd
test
add
add
roll
sub
pop
call
cmpl
je
push
push
xor
sub
inc
push
xor
add
sub
rol
rol
xor
shr
pop
sub
pop
push
push
call
loope
popa
add
out
add
push
add
pop
add
les
fistps
loope
add
add
ja
add
lcall
push
push
lea
push
push
lea
push
call
add
mov
add
sti
rolb
xchg
mov
add
add
add
add
add
popa
clc
add
add
jmp
enter
imul
add
add
jae
add
add
add
sub
pop
call
push
push
push
lea
push
lea
push
push
push
push
lea
push
push
call
std
add
add
mov
in
fiadds
mov
jecxz
loop
mov
testl
jle
lds
fcomps
js
int3
fldz
ret
fmuls
add
push
push
push
or
inc
add
sub
sub
not
lea
pop
sub
add
pop
push
ror
lea
rol
sub
pop
push
call
push
push
push
push
push
push
push
call
jns
mov
stos
add
add
movl
pop
mov
mov
add
icebp
add
add
in
add
add
mov
add
add
in
add
sub
pop
cmpl
je
push
push
dec
rol
push
push
pop
add
add
sub
xor
shl
dec
pop
sub
inc
pop
push
ror
add
rol
pop
push
call
push
push
push
lea
push
push
push
push
call
mov
add
add
mov
out
cld
add
add
add
push
mov
data16
bound
in
ret
in
cmpl
je
push
push
sub
shl
push
or
inc
add
add
sub
sub
shr
sub
pop
lea
add
pop
push
push
push
push
lea
push
push
push
push
push
lea
push
call
movsl
rcll
push
faddl
pop
roll
add
fsubrl
xchg
mov
add
arpl
xlat
jo
add
add
add
stc
add
add
addl
add
mov
fdivr
lcall
call
push
push
lea
push
push
push
push
call
mov
add
add
xchg
jle
mov
add
sahf
push
roll
fwait
mov
cltd
out
xchg
addl
stc
push
add
add
aam
cli
add
clc
pusha
jmp
and
loop
popa
not
notb
add
rcr
add
sub
pop
cmpl
je
push
push
lea
add
ror
push
or
not
add
add
ror
inc
sub
sub
pop
add
pop
push
push
push
push
push
lea
push
call
add
add
push
add
push
enter
add
mov
imul
test
add
add
add
add
fnstsw
mov
add
add
xchg
lret
stos
cwtl
add
test
add
hlt
mov
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
push
push
call
mov
jno
addb
scas
pushf
cwtl
add
into
fiaddl
jmp
mov
add
imul
jecxz
mov
jns
in
lods
xchg
add
xchg
leave
add
add
std
loopne
add
add
jne
pusha
add
sub
pop
call
cmpl
je
push
push
dec
push
xor
add
shl
sub
shl
add
dec
add
pop
pop
push
push
lea
push
push
push
call
arpl
xchg
out
add
int3
pusha
out
add
shll
mov
data16
divb
add
add
test
out
fmulp
add
add
sahf
test
filds
add
js
add
xchg
icebp
add
jle
test
fadds
jo
out
mov
add
rcr
add
sub
pop
push
push
lea
push
push
push
push
push
push
call
add
add
cli
add
outsl
stos
fcomi
out
icebp
iret
add
gs
add
hlt
add
cmp
add
add
add
pushf
sub
pop
call
push
not
pop
cmpl
je
push
push
add
push
push
pop
add
shr
sub
lea
pop
not
sub
pop
push
lea
push
lea
push
lea
push
call
mov
je
add
add
add
xchg
add
ror
fildl
add
xchg
add
enter
mov
data16
add
imul
add
add
add
xchg
les
pop
push
push
push
call
gs
jo
add
lods
std
scas
mov
loop
add
repnz
cmpsb
add
lret
mov
mov
push
lcall
sub
pop
call
cmpl
je
push
push
ror
add
inc
push
or
not
add
add
inc
sub
pop
rol
not
lea
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
jmp
ror
add
int
add
mov
cmc
push
in
cmpsl
push
add
ljmp
xchg
add
les
nop
leave
add
mov
popl
jle
add
push
sub
pop
push
push
xor
shr
pop
call
cmpl
je
push
push
ror
shl
push
push
pop
add
lea
sub
xor
pop
sub
ror
pop
push
push
lea
push
push
push
push
push
push
lea
push
push
call
mov
add
test
add
xchg
test
add
insb
out
mov
push
xchg
mov
mov
testl
jp
mov
ja
int3
add
pop
xchg
iret
xchg
cmpsl
fidivl
or
push
mov
in
fdivr
lcall
push
lea
push
push
lea
push
lea
push
call
add
add
jge
add
add
xchg
hlt
pop
mov
xchg
scas
add
push
ret
mov
xchg
add
fld
add
fwait
ret
int
add
in
lcall
hlt
sub
add
cmp
not
pop
cmpl
je
push
push
sub
sub
sub
push
and
add
not
sub
dec
pop
sub
rol
add
xor
pop
push
push
push
push
lea
push
push
push
call
mov
in
into
jae
add
mov
fistpl
nop
jp
add
sti
add
cltd
add
mov
out
xchg
add
add
sar
je
jnp
pop
add
pushf
loop
std
jle
add
add
loopne
jo
xchg
je
fiadds
push
push
call
sarl
xlat
add
push
mov
data16
pop
test
add
out
lock
add
mov
stc
fistpl
add
mov
mov
in
mov
mov
push
enter
jo
jge
add
out
loope
sub
pop
call
push
add
lea
pop
cmpl
je
push
push
sub
lea
push
push
pop
add
lea
sub
rol
xor
pop
dec
pop
push
shl
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
ret
pusha
add
stos
test
pusha
insb
test
add
arpl
lcall
pop
mov
add
add
add
push
jae
sarb
add
movb
lret
cli
add
loope
xchg
imul
add
out
insb
shrb
lcall
xor
add
cmpl
je
push
push
shr
ror
push
push
pop
add
shr
dec
lea
sub
inc
shr
ror
pop
pop
push
lea
push
lea
push
push
call
sahf
mov
out
cltd
add
add
jmp
add
jle
add
pop
add
enter
testb
ljmp
xchg
push
add
add
add
add
sub
pop
push
push
rol
pop
call
push
lea
push
push
push
lea
push
push
push
push
lea
push
call
in
add
clc
mov
mov
add
bound
push
sarl
add
add
add
ljmp
enter
add
stos
lock
push
data16
add
add
add
loopne
mov
xchg
xorb
pushf
push
pop
loope
testl
sub
pop
cmpl
jne
mov
push
lea
push
lea
push
push
call
add
js
jne
in
add
add
je
add
add
add
add
mov
jle
fidivrl
iret
mov
jae
add
mov
add
pop
xchg
cli
add
add
imul
add
xchg
push
cmc
fwait
add
add
add
popa
mov
jns
add
lcall
add
add
add
fldl2e
mov
push
push
push
push
call
add
mov
ljmpw
mov
fiadds
cmpsl
add
add
mov
add
add
add
lea
add
sahf
add
call
cmc
add
iret
add
add
mov
xchg
add
add
sub
pop
jmp
push
push
push
push
push
push
call
add
rcl
add
add
rcrl
adcl
fdiv
add
add
add
pop
add
sahf
hlt
add
jbe
lock
add
sub
pop
xor
push
xor
dec
pop
pop
push
not
shr
shr
pop
pop
push
push
lea
push
lea
push
push
push
push
call
xchg
add
add
loopne
test
int3
mov
xchg
loope
fcom
add
sti
add
add
add
add
push
add
je
in
xchg
lahf
add
push
lea
push
push
call
mov
fadds
add
xchg
incb
jnp
add
les
nop
add
in
lcall
cld
mov
leave
addl
int3
stc
loope
add
add
in
outsl
xchg
pop
xchg
add
jle
add
add
add
in
add
add
iret
add
push
fiadds
lcall
push
add
ror
inc
xor
pop
leave
push
sub
xor
shr
pop
ret
push
push
shr
pop
mov
push
ror
dec
xor
pop
add
push
lea
lea
add
pop
cmpl
jne
push
push
dec
push
sub
add
shr
shr
not
sub
ror
sub
not
pop
xor
pop
push
add
shr
pop
pushl
call
push
lea
push
call
into
pop
mov
add
test
cmc
add
xlat
stos
fcmovnbe
add
add
jae
fisubl
add
in
mov
sub
pop
push
call
push
push
lea
push
call
mov
addr16
add
push
add
mov
imul
mov
addr16
add
popa
add
add
jo
add
sar
add
test
out
imull
in
hlt
lcall
jbe
add
cmpl
je
push
push
push
call
jecxz
add
add
xlat
fisubl
arpl
out
xchg
lcall
test
push
add
roll
add
add
add
add
imull
add
jmp
sub
pop
cmpl
jne
push
shr
not
not
ror
pop
mov
push
push
push
push
push
call
mov
loopne
rcrb
add
push
mov
lods
add
add
in
pop
add
add
jle
add
add
add
add
cmc
add
nop
add
add
xchg
add
cmpl
mov
add
xchg
add
jo
add
mov
add
pop
call
push
push
push
lea
push
push
lea
push
lea
push
call
add
pop
repnz
add
pop
cmc
fisubrl
mov
fnstcw
mov
imul
add
out
mov
add
add
xchg
lret
xchg
add
jns
mov
test
pop
xchg
cmc
pushf
jno
ja
push
add
add
jmp
sub
pop
ret
jmp
push
push
push
lea
push
lea
push
push
push
push
push
push
call
mov
iret
add
in
push
add
lds
add
push
push
add
js
add
add
add
add
and
nop
mov
test
lds
add
cwtl
push
jno
pop
push
add
fildl
stc
add
lods
ret
add
int
test
in
fcomps
jge
add
test
add
add
cmp
xlat
push
sub
add
xor
push
or
inc
add
xor
add
sub
sub
pop
shl
pop
push
push
push
push
lea
push
push
lea
push
call
mov
repnz
movsb
repnz
mov
addb
loope
bound
aad
add
scas
push
add
push
addl
in
pushl
push
push
push
push
call
cwtl
add
add
fdivrp
add
roll
add
lock
add
add
push
movl
add
popa
add
rcr
jl
add
mov
sub
pop
call
push
push
shr
shr
add
sub
pop
call
push
xor
not
rol
pop
jmp
push
sub
lea
sub
pop
cmpl
jne
mov
push
push
lea
push
lea
push
push
lea
push
push
push
lea
push
call
in
ficompl
popa
add
pop
jb
out
add
add
add
fmull
lds
lcall
add
add
aam
jecxz
mov
in
aad
in
fcompl
add
add
push
push
push
not
add
xor
push
and
add
ror
sub
inc
sub
shr
shl
add
pop
dec
inc
pop
push
lea
push
push
push
push
push
push
push
push
push
call
cld
shl
jne
bound
add
add
add
jmp
xorl
add
add
add
add
add
add
xorb
jecxz
bound
in
lcall
jle
jo
add
add
jne
push
shr
lea
pop
call
call
push
push
sub
ror
push
xor
add
add
not
shr
sub
not
xor
pop
xor
sub
pop
push
ror
pop
pushl
push
push
lea
push
push
push
push
call
add
add
mov
add
sti
add
add
push
add
fldenv
jnp
add
rol
mov
mov
cmpsl
jbe
lods
add
add
add
scas
loopne
ljmp
stos
add
add
call
add
push
sub
pop
call
push
push
lea
add
push
and
add
ror
shr
sub
xor
add
pop
add
xor
ror
sub
pop
push
lea
add
dec
pop
pushl
call
push
rol
inc
sub
shr
pop
call
push
push
dec
dec
push
xor
add
sub
sub
shr
shl
pop
ror
sub
pop
push
push
push
push
push
push
push
call
imul
add
add
add
jo
jnp
hlt
bound
lcall
shll
add
testb
shlb
xchg
outsl
add
xchg
movsl
pop
pop
mov
pushl
push
pop
call
call
push
push
sub
add
inc
add
push
or
inc
add
sub
dec
ror
sub
xor
add
ror
pop
pop
push
dec
add
rol
pop
pushl
push
sub
add
lea
add
pop
call
call
push
push
sub
shl
add
push
sub
add
not
shl
xor
sub
sub
lea
pop
sub
ror
add
pop
push
lea
push
push
push
push
push
push
call
pop
add
add
pop
movl
mov
add
mov
add
icebp
add
sub
std
out
lods
add
icebp
add
movb
xchg
mov
arpl
add
add
pop
add
jle
push
add
pop
add
add
sub
pop
pushl
call
push
sub
add
pop
call
push
push
lea
sub
shl
push
or
inc
add
not
not
sub
rol
rol
pop
rol
sub
sub
pop
push
push
push
push
lea
push
push
push
push
lea
push
push
call
add
lock
shl
add
add
mov
frstor
fs
jae
mov
add
add
nop
xchg
pop
lahf
add
pop
mov
fsubs
int
add
in
fdivr
lcall
jne
call
push
pop
call
push
push
xor
push
or
inc
add
shl
sub
ror
shl
pop
inc
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
js
mov
lods
lods
jno
mov
jp
add
cwtl
add
shll
add
mov
add
lock
ljmp
add
pop
add
test
stc
add
add
push
int
in
add
movl
add
loope
sub
pop
pushl
push
xor
xor
pop
call
push
not
pop
call
push
push
sub
rol
dec
push
and
add
shl
shr
sub
pop
sub
shr
add
pop
push
push
push
push
lea
push
lea
push
call
add
add
add
xchg
fs
ret
pop
add
add
add
add
lock
add
add
out
int
add
jb
mov
enter
mov
add
add
lcall
add
pop
pushl
call
push
dec
lea
pop
call
push
push
not
add
shr
push
or
inc
add
sub
shr
rol
inc
pop
ror
xor
shl
lea
pop
push
push
lea
push
push
push
push
push
push
call
add
add
jae
add
add
pop
jbe
out
add
add
add
add
arpl
add
jae
ja
add
jne
enter
mov
add
add
xchg
add
cmc
addb
add
add
out
jb
cmpsb
add
add
add
sub
pop
pushl
push
add
sub
pop
call
push
rol
sub
pop
lea
push
push
push
push
push
push
push
lea
push
lea
push
push
call
lret
stc
call
add
mov
add
add
add
pop
addl
add
ljmp
cmc
push
stc
xchg
add
add
add
push
cli
add
outsl
add
fcoml
sbbb
add
in
js
je
in
in
fcompl
shrb
in
subb
sub
push
push
pop
add
sub
sub
rol
add
pop
add
pop
push
shl
pop
pushl
call
push
push
push
lea
push
lea
push
lea
push
push
push
push
push
call
fwait
xchg
pop
mov
mov
add
mov
add
test
push
add
mov
add
add
sub
pop
call
push
push
rol
dec
push
or
not
add
add
sub
shr
pop
shl
add
ror
pop
push
push
push
lea
push
push
push
push
push
call
pop
mov
mov
mov
add
add
add
add
add
add
add
stos
add
faddl
sub
pop
pushl
call
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
call
cltd
add
add
jb
xchg
sahf
jecxz
jl
mov
add
pop
hlt
add
rolb
add
mov
imull
cmpl
data16
pop
addl
in
fcompl
shrb
dec
pop
stos
push
shr
push
sub
add
sub
dec
add
sub
sub
shl
pop
sub
pop
push
push
push
push
lea
push
push
call
rolb
nop
in
add
xchg
add
add
jl
add
add
cmpl
jecxz
pop
stos
flds
scas
mov
push
call
xchg
mov
add
lahf
rcrb
add
pop
test
fucomp
add
add
push
leave
add
xchg
lcall
jne
push
ror
pop
call
push
push
lea
push
push
push
call
jle
add
bound
ja
add
jl
jb
jns
rorb
fiaddl
push
negl
xchg
add
rolb
push
push
ror
shr
push
or
not
add
dec
add
sub
add
pop
inc
rol
pop
push
dec
add
lea
pop
pushl
push
lea
push
push
push
push
push
push
call
icebp
stos
pop
loopne
test
add
lret
add
jnp
add
add
jb
out
cwtl
add
add
jne
add
imul
pop
call
push
push
push
sub
add
add
sub
add
pop
ror
xor
pop
push
push
sub
push
or
not
add
sub
inc
inc
sub
sub
shl
sub
rol
pop
sub
pop
push
rol
pop
call
pop
push
add
not
pop
dec
jne
push
push
lea
push
push
push
call
repnz
addr16
xchg
jbe
add
add
lods
mov
fwait
jne
add
addb
push
add
leave
in
push
add
add
add
insb
out
fsts
in
in
pop
call
push
push
sub
push
or
inc
add
add
sub
shl
pop
dec
not
pop
push
rol
shr
pop
pushl
push
sub
add
pop
call
push
push
push
push
call
add
addl
add
add
roll
xchg
leave
flds
filds
pop
add
add
in
mov
faddl
lock
push
push
add
shl
add
pop
call
mov
push
push
ror
push
or
inc
add
sub
sub
shr
pop
lea
sub
sub
not
pop
push
push
push
lea
push
lea
push
push
push
push
push
call
sahf
add
jb
add
add
fcmovnbe
mov
fiadds
enter
add
clc
clc
add
add
rolb
add
xchg
mov
mov
lcall
jne
call
push
push
push
lea
push
call
pop
add
lock
add
add
flds
lods
add
add
addl
add
add
add
cli
stc
cmpsb
add
fwait
mov
pusha
add
push
incb
add
push
push
push
lea
push
push
push
push
lea
push
push
call
insb
add
add
imul
jae
mov
mov
add
add
push
incb
add
jns
add
add
cmpsl
movsb
mov
pop
add
push
rol
pop
push
push
push
push
push
push
lea
push
lea
push
call
in
xchg
add
add
add
add
fistpll
fildl
ljmp
push
std
pop
pop
enter
push
lock
loope
test
xbegin
filds
jmp
jnp
cltd
mov
mov
add
add
ret
add
cmc
jae
icebp
fwait
add
mov
into
add
add
pop
call
push
inc
shr
lea
pop
lea
push
push
not
push
or
not
add
sub
dec
pop
rol
pop
push
push
push
push
call
pushf
add
add
add
add
fsubrl
rclb
ljmp
add
mov
add
mov
add
pop
add
and
add
mov
bound
pop
test
scas
pop
jl
clc
push
add
movsb
push
lock
lcall
jne
push
shl
sub
pop
call
push
lea
push
push
push
push
push
push
push
push
call
roll
add
mov
add
jmp
sbbb
add
in
mov
stos
cmc
add
sahf
add
test
add
sahf
enter
add
fs
add
fildl
js
mov
push
mov
add
leave
sbbb
lret
mov
add
pop
push
push
lea
push
push
push
push
push
lea
push
push
lea
push
push
call
jle
push
add
jmp
movsl
add
add
clc
outsl
jl
cmpsl
mov
mov
push
add
jmp
in
iret
add
movsb
pop
in
add
addl
fildl
mov
jmp
js
add
mov
add
in
testl
mov
pusha
mov
shrb
push
ljmp
loop
add
add
add
lret
sub
rol
rol
rol
pop
ror
lea
not
pop
push
sub
shl
pop
pushl
push
rol
add
add
dec
pop
call
push
xor
sub
sub
pop
call
mov
push
push
push
lea
push
push
lea
push
push
push
push
call
push
rcrl
test
faddp
lds
mov
add
add
add
add
add
jmp
mov
add
movsl
add
pop
add
scas
nop
into
lds
pop
lea
push
push
sub
rol
sub
push
push
pop
add
dec
lea
sub
sub
dec
add
pop
not
xor
rol
rol
pop
push
shr
ror
sub
pop
pushl
push
ror
add
shl
ror
pop
call
push
ror
add
sub
pop
lea
push
push
lea
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
push
add
mov
add
add
jb
cmpsb
add
shll
xchg
addl
aad
add
clc
mov
add
int
scas
add
or
out
jle
xchg
int3
add
out
add
out
in
fcomps
push
push
push
push
push
lea
push
push
push
call
mov
add
jmp
roll
jmp
fadds
push
jmp
jge
add
movsl
addl
rolb
mov
loopne
push
push
push
lea
push
push
call
push
fistps
jns
add
add
jmp
cmpsl
add
test
add
fildl
loope
rcrb
pushl
push
push
shr
inc
not
not
push
push
pop
add
add
lea
shr
sub
xor
pop
sub
pop
push
sub
pop
push
push
lea
push
push
push
push
push
lea
push
call
push
add
mov
aad
add
add
movb
js
addl
xchg
add
add
lcall
pop
add
lcall
add
movsl
gs
mov
add
out
fildl
pop
pop
jnp
pusha
in
mov
xchg
jmp
je
add
lock
add
add
lret
add
add
sub
pop
call
push
push
shr
push
push
pop
add
shr
not
sub
dec
xor
shl
lea
pop
sub
not
pop
push
dec
pop
pushl
call
push
push
lea
push
lea
push
call
add
jmp
add
aam
lock
add
nop
pop
loop
add
bound
test
add
add
mov
fcoml
in
lock
lcall
call
lea
push
push
lea
push
lea
push
call
addr16
pusha
add
pop
add
add
add
add
filds
nop
fdivrl
iret
add
push
les
mov
fstpt
in
call
call
push
push
push
xor
add
ror
rol
sub
add
ror
sub
pop
lea
sub
pop
push
rol
lea
sub
sub
pop
pushl
push
not
sub
pop
call
push
xor
shl
add
pop
call
push
push
push
lea
push
push
push
push
push
call
add
lahf
push
add
add
add
add
pop
xor
cmpsl
add
add
add
mov
stc
add
add
add
jmp
cmpsb
add
push
add
lret
stos
cmp
cmpsb
xchg
pusha
add
add
add
add
jmp
imul
sub
pop
jmp
pushl
push
lea
push
push
push
push
call
xchg
add
fwait
pop
add
add
mov
addr16
add
add
mov
adcb
jp
cmpsb
flds
addr16
les
add
jbe
add
mov
cld
cmc
fwait
add
jnp
add
std
add
pop
popa
add
add
mov
push
dec
shr
lea
ror
pop
jmp
push
push
sub
sub
rol
push
sub
add
ror
sub
sub
pop
ror
shr
add
pop
push
xor
pop
pushl
push
sub
rol
pop
call
push
push
push
push
push
call
xchg
mov
mov
clc
add
add
add
mov
add
xchg
add
add
mov
imul
fwait
in
add
add
cmpsb
std
into
xchg
add
xchg
add
add
sub
pop
call
push
push
dec
add
sub
push
and
add
shr
sub
inc
add
shl
pop
ror
add
pop
push
push
call
fiadds
mov
sti
add
add
push
add
mov
add
pop
add
add
add
cmc
add
loope
mov
add
add
pop
mov
insb
add
add
add
add
fldl
push
mov
fwait
add
add
sub
pop
pushl
call
push
push
call
xchg
rol
fstpt
add
hlt
xchg
je
fwait
aad
add
call
jbe
iret
mov
scas
add
lret
les
mov
add
jle
add
testb
add
imull
add
add
push
xchg
add
add
sub
pop
push
push
push
push
push
call
lahf
in
add
cwtl
add
imul
add
mov
xchg
xchg
mov
cltd
add
add
add
mov
push
push
add
add
jp
xchg
jecxz
add
add
je
aad
fmul
xchg
out
jns
sub
pop
call
push
shr
xor
pop
leave
add
push
ror
add
not
pop
pop
pop
push
not
not
pop
pop
xor
push
sub
ror
ror
pop
inc
ret
push
push
push
call
ljmp
pop
ficomps
bound
add
push
add
add
incb
add
rolb
add
mov
lods
rcrl
sahf
push
add
int3
add
hlt
mov
in
hlt
pop
leave
ret
push
dec
add
xor
pop
push
push
pop
mov
cmpl
jne
push
lea
push
push
push
lea
push
push
push
call
rolb
add
add
add
jecxz
add
ljmp
testb
mov
add
mov
add
add
imul
add
cmc
jmp
add
add
mov
popa
sub
pop
mov
push
add
shr
pop
jmp
push
sub
add
dec
ror
pop
mov
push
lea
push
push
push
push
push
push
push
call
cmc
xchg
add
lret
int3
add
add
xchg
add
shrb
add
add
mov
icebp
add
mov
add
add
push
add
add
je
add
lods
add
pop
add
cmpsb
add
add
sahf
mov
loopne
lcall
and
xor
push
push
push
lea
push
push
lea
push
push
push
push
call
push
add
test
add
add
mov
mull
fucomi
fistpll
mov
add
add
xchg
enter
pop
xor
add
push
lea
push
lea
push
push
push
call
mov
addl
cld
fidivrl
add
lahf
mov
add
mov
add
add
add
in
add
fndisi(8087
popl
add
add
add
add
add
loope
add
add
add
add
lcall
dec
decl
lea
push
push
push
push
lea
push
push
push
call
add
call
add
add
add
add
int3
jge
add
lahf
push
test
cwtl
xchg
aam
gs
scas
mov
lods
mov
outsl
add
add
jo
aam
add
icebp
push
mov
add
add
lcall
jmp
jmp
push
push
push
lea
push
push
push
call
add
xchg
pop
add
aad
loop
pushf
fadds
in
imul
imul
stc
stos
pop
add
outsl
mov
lahf
std
add
add
sub
pop
sub
pushl
push
shl
add
pop
pop
push
lea
xor
ror
sub
pop
sub
push
shl
pop
cmp
jne
push
push
call
add
outsl
outsl
add
jns
lock
cli
incb
add
enter
add
fwait
arpl
add
add
add
add
mov
fst
sbb
lcall
enter
push
add
shl
pop
sub
push
lea
push
push
call
add
sahf
add
add
add
ja
add
faddl
add
gs
xchg
in
mulb
out
mov
flds
add
sub
pop
mov
shr
push
ror
pop
add
sub
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
push
push
call
add
add
xorl
add
add
ljmp
je
add
sahf
cmpsb
add
insb
fsubr
add
movsl
push
add
sub
pop
pushl
pop
push
shr
rol
sub
pop
shr
push
dec
pop
and
push
push
lea
push
push
push
call
pop
popf
in
add
add
add
mov
cli
jp
add
sti
add
add
add
pushf
fistpl
fimuls
sub
pop
sub
push
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
add
mov
add
sarl
add
popf
int
xchg
add
add
add
add
test
mov
add
jp
pusha
fldl
gs
ljmp
bound
bound
add
add
add
sub
pop
cmp
jne
leave
push
sub
pop
ret
push
push
lea
inc
sub
ror
pop
mov
push
lea
add
pop
add
push
push
sub
shl
xor
pop
push
push
lea
push
lea
push
lea
push
push
call
pop
in
shlb
add
testl
push
mov
popf
cmc
mov
out
add
jbe
add
xlat
add
mov
add
test
add
scas
push
add
add
jmp
add
add
pop
fisubrl
in
in
pop
push
push
push
xor
sub
pop
push
mov
push
push
push
push
push
push
push
push
call
fcoml
popl
add
add
jmp
jecxz
add
fs
iret
add
rclb
add
push
cmp
ljmp
xor
arpl
add
add
insb
add
add
add
rcr
add
int3
xchg
add
jecxz
add
sahf
add
clc
pop
pop
mulb
pushf
pop
lods
add
add
lds
loop
rcrl
imul
add
mov
testl
mov
push
mov
add
add
add
add
lret
lock
mov
shr
push
shr
pop
add
push
ror
pop
mov
add
push
push
lea
push
push
lea
push
lea
push
call
add
push
mov
add
std
add
mov
cld
add
push
lahf
shrl
add
icebp
add
xchg
mov
mov
mov
lods
fucom
rcr
int3
add
js
ffree
add
hlt
sti
mov
flds
stos
sub
pop
mov
add
push
inc
sub
pop
xor
mov
push
not
add
pop
and
push
sub
ror
xor
pop
rol
push
xor
pop
rol
xor
push
inc
pop
inc
push
push
push
push
push
push
push
push
call
xchg
add
js
add
add
add
pop
lds
mov
call
add
scas
add
add
add
int
scas
mov
incb
add
add
add
add
fildll
hlt
add
jmp
add
mov
add
into
jb
add
add
movsb
add
in
loopne
lcall
cmp
jne
add
push
push
lea
push
push
call
cmpl
aad
add
push
add
mov
loopne
mov
pop
xchg
lds
add
push
je
add
add
lock
add
int3
jae
mov
add
jle
in
lock
lcall
inc
or
test
add
add
push
push
push
call
out
add
iret
insb
arpl
add
jge
add
fiadds
fadds
repnz
add
add
scas
add
pop
popa
add
jno
in
mov
add
add
gs
iret
push
in
mov
lahf
push
add
add
int3
ret
lret
insb
je
sub
pop
cmpl
jne
xor
push
push
push
push
push
lea
push
push
lea
push
push
call
scas
add
mov
add
push
sahf
add
add
sahf
loop
pop
add
add
faddl
add
movsb
mov
arpl
add
mov
scas
add
stos
pushf
add
out
out
add
mov
add
test
cmpsl
xlat
push
mov
in
pop
add
repnz
pop
pop
push
shl
dec
sub
shr
pop
pop
push
push
call
std
add
test
sti
add
add
std
pop
add
test
in
add
sahf
jne
movsb
lret
add
add
push
add
mov
xchg
test
add
add
cwtl
lea
add
jae
add
add
add
add
jle
mov
in
clc
pop
pop
pop
push
add
add
pop
pop
leave
push
push
push
push
lea
push
push
push
call
push
add
add
add
add
pop
add
add
mov
add
push
jae
jmp
add
cmpsl
flds
jb
add
add
addb
add
out
add
add
in
mov
add
add
lock
push
add
add
jae
filds
in
push
add
out
rolb
add
dec
cmp
lods
push
lea
push
push
lea
push
push
push
lea
push
push
call
push
jno
jne
add
insb
pop
jecxz
faddl
add
xchg
pop
fadds
imul
arpl
mov
add
mov
add
mov
add
add
mov
flds
lds
push
xchg
mov
add
mov
mov
lcall
push
adc
aas
push
call
jb
add
cmpsb
jno
mov
and
xchg
add
xchg
fs
clc
mov
add
enter
add
push
mov
xchg
push
test
pop
addb
je
sarl
int
adc
add
lcall
or
jl
xchg
push
push
push
push
lea
push
push
push
call
add
xchg
cli
xchg
add
add
add
add
cld
mov
mov
loop
add
addl
push
push
add
arpl
mov
add
sub
pop
mov
push
xor
add
sub
sub
pop
push
push
not
rol
pop
mulb
push
push
push
push
lea
push
push
lea
push
push
call
add
fiaddl
add
add
add
fisubs
fidivl
shll
add
add
int3
jecxz
add
push
add
cmc
cmpsb
fadds
add
fwait
add
pop
pop
push
dec
inc
shr
pop
call
push
shl
pop
push
push
push
push
push
push
push
push
push
lea
push
push
call
pop
add
add
js
add
mov
mov
outsl
xchg
popa
jns
add
jle
pop
lds
stos
add
add
add
in
fdivr
lcall
adc
call
div
sub
add
pop
xor
push
push
call
scas
test
sbbb
bound
fs
fmuls
mov
xchg
cltd
movsb
jae
clc
add
cwtl
movsb
add
add
mov
jo
add
jb
add
add
mov
jnp
data16
mov
ret
je
sub
pop
pop
push
lea
push
push
push
lea
push
call
push
pop
add
mov
lds
jecxz
pop
shlb
add
stos
cmpsl
aad
add
cwtl
loop
add
rcrb
pop
add
test
jbe
add
movl
add
jmp
int3
popa
sub
pop
pop
push
xor
ror
pop
pop
push
xor
pop
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
call
les
fldcw
jne
add
add
jle
mov
add
add
add
add
add
add
cmc
add
add
add
add
pop
leave
ret
push
push
push
push
lea
push
lea
push
push
push
call
push
lcall
add
mov
std
add
cmpsb
out
jnp
roll
add
xorb
add
add
add
add
jmp
loopne
push
push
dec
pop
mov
push
shr
add
dec
rol
pop
add
push
dec
pop
push
push
push
lea
push
lea
push
push
push
push
lea
push
call
mov
data16
int3
mov
pushf
mov
call
mov
add
scas
add
jno
add
movsb
add
lods
mov
add
mov
fs
enter
roll
addr16
add
push
push
push
lea
push
push
push
lea
push
call
add
add
cwtl
mov
addr16
xlat
lea
add
pusha
add
push
add
loope
mov
mov
add
add
into
fidivrs
add
mov
add
add
add
stc
out
add
movb
mov
add
add
add
add
in
in
push
push
sub
pop
push
push
dec
lea
add
pop
mov
push
push
lea
push
push
push
push
lea
push
push
push
push
call
fs
lret
pop
add
add
loopne
fiaddl
mov
subb
add
add
pop
mov
popa
xchg
add
add
mov
push
int3
add
pop
pop
push
inc
sub
pop
lea
push
rol
sub
xor
pop
sub
mov
push
push
call
add
push
leave
mov
add
add
add
mov
mov
testb
loope
add
int
push
sub
pop
shr
push
lea
push
push
push
push
lea
push
push
push
call
jp
add
arpl
add
add
add
stc
addr16
movsb
add
pop
mov
pushf
in
xchg
add
sti
les
add
mov
push
pop
add
fwait
add
jp
addr16
int3
pop
mov
add
out
add
rolb
push
arpl
loopne
add
push
inc
add
add
shl
pop
mov
push
shr
pop
add
push
push
push
push
call
add
test
shrb
lahf
jmp
loop
add
in
std
fsts
ret
add
xchg
mov
push
add
push
addr16
pop
xchg
xchg
cwtl
add
lock
lcall
jae
push
push
push
push
lea
push
push
call
xchg
mov
add
rolb
stos
pop
add
add
pop
push
add
int3
cld
add
add
cmc
push
out
mov
lcall
inc
clc
mov
push
push
push
lea
push
push
push
push
push
lea
push
call
mov
clc
stos
add
add
iret
jne
push
add
add
arpl
lret
add
add
gs
popf
jno
nop
add
add
add
add
add
mov
jb
sahf
mov
clc
test
test
mov
add
push
lea
push
push
push
call
add
cld
add
jmp
add
mov
add
loop
add
add
outsl
shrl
add
add
add
mov
add
roll
lods
cli
movsl
add
add
loope
in
arpl
imul
add
cli
in
repnz
in
lock
xor
push
add
pop
lea
mov
push
sub
pop
add
xor
push
push
push
lea
push
push
call
notl
movsl
mov
mov
addl
add
outsl
loopne
jmp
mov
scas
push
call
add
add
pop
rorl
iret
add
push
pop
push
add
test
pop
rol
push
rol
dec
pop
nop
push
sub
inc
inc
pop
nop
xor
push
sub
dec
inc
pop
nop
push
push
push
push
push
push
lea
push
push
lea
push
push
call
scas
fimuls
push
in
js
add
into
add
imul
add
shl
mov
jge
loop
sub
pop
nop
push
push
lea
push
push
push
push
lea
push
lea
push
push
push
call
add
add
add
fadds
int3
add
leave
push
pop
int3
test
roll
out
stc
movsl
cld
add
sub
pop
inc
push
rol
sub
xor
dec
pop
nop
push
dec
add
pop
nop
push
push
call
loop
add
mov
add
lcall
pop
mov
pop
jno
add
ljmp
add
clc
add
mov
push
data16
jbe
clc
jo
in
mov
cmc
test
std
mov
fadds
pop
pop
clc
xchg
add
xchg
sahf
add
repnz
lahf
sub
pop
cmpb
jne
push
ror
pop
add
push
add
inc
lea
pop
nop
nop
push
not
pop
cmp
je
push
not
not
add
pop
nop
nop
push
push
push
push
call
lret
add
add
into
stc
add
int
add
xchg
push
repnz
push
add
loopne
flds
add
pop
lock
jo
jle
xchg
xchg
sbb
add
out
add
mov
inc
push
sub
xor
add
pop
nop
nop
push
lea
push
push
push
push
push
push
push
push
call
add
add
add
out
pop
mov
mov
cld
add
add
xchg
add
sahf
add
cli
mov
shll
js
add
add
jno
cltd
loop
jle
mov
push
add
test
lahf
add
test
sub
pop
cmp
jb
xor
push
shl
pop
jmp
push
ror
pop
mov
push
inc
shl
lea
rol
pop
add
push
push
call
cwtl
add
icebp
cli
add
xchg
add
jnp
ljmp
test
cltd
fldl
jge
jecxz
add
add
push
add
mov
add
lcall
mov
jb
push
push
push
push
push
push
call
ficomps
add
jne
add
out
cwtl
add
out
out
stos
jb
jmp
push
movsb
xlat
push
add
xchg
jb
add
mov
fwait
aam
add
lcall
inc
sbb
add
pop
add
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
mov
popl
leave
mov
add
mov
add
add
cltd
jae
loop
fiadds
imul
in
movsb
arpl
add
cmc
add
je
loopne
xchg
popf
add
test
add
cltd
sub
pop
mov
xor
push
add
pop
xor
shl
push
push
call
out
cmpsb
cmpsb
sahf
add
cmpsl
add
add
add
push
fadds
mov
flds
rcr
fs
mov
mov
roll
jl
add
sub
pop
xor
push
push
push
push
push
call
xchg
insb
icebp
add
push
addb
lods
add
shl
lods
add
add
add
mov
push
imul
add
int3
push
stos
add
add
add
shrb
in
lcall
loope
xor
push
push
push
push
call
mov
add
jae
push
lcall
add
pop
mov
lret
leave
lock
fdivl
add
add
mov
faddl
jae
pop
addr16
imul
add
std
mov
mov
sub
lcall
loope
push
lea
push
push
push
push
push
push
push
call
xchg
fs
add
repnz
out
add
xchg
jge
mov
adc
add
fs
add
leave
fildll
add
rol
push
ljmp
add
mov
add
movsl
in
enter
add
data16
mov
add
loopne
xor
push
sub
inc
pop
mov
push
push
push
lea
push
lea
push
push
lea
push
lea
push
lea
push
call
push
add
add
add
add
add
aam
mov
mov
js
mov
scas
cltd
aad
add
pop
addb
lock
out
add
mov
mov
add
popf
mov
pop
mov
in
fdivr
lcall
inc
hlt
push
push
lea
push
lea
push
push
lea
push
push
push
push
push
call
nop
add
lret
add
sarl
shl
add
pop
sahf
shrl
add
jns
mov
roll
add
cmc
cmpsb
call
add
repnz
add
pushf
add
mov
add
test
xchg
popa
addl
mov
lcall
pop
push
push
lea
push
lea
push
push
push
call
scas
push
add
xchg
add
int
movsl
in
js
mov
lret
add
add
mov
lock
les
subb
out
test
jae
add
pop
add
pop
mov
add
push
add
add
add
add
jp
cltd
push
add
repnz
scas
pusha
add
imul
in
call
pop
push
push
push
call
add
fildl
add
cltd
add
add
mov
mov
mov
add
jne
add
push
addb
les
rolb
sub
pop
pop
push
push
push
push
call
add
lret
push
add
add
data16
add
mov
add
cmpsb
mov
add
addr16
add
aam
pop
mov
nop
add
imul
mov
push
ret
aad
add
add
add
add
lcall
push
shr
pop
ret
push
add
shl
add
pop
push
push
shl
shl
lea
pop
mov
push
push
add
not
pop
push
push
push
add
not
xor
not
pop
push
push
xor
add
pop
mov
push
pop
mov
mov
push
not
add
pop
test
je
push
push
push
push
push
push
push
push
lea
push
call
aam
test
add
add
jp
mov
outsl
xchg
cli
aad
hlt
out
add
add
add
in
bound
add
movsl
sbb
add
mov
mov
add
add
add
mov
mov
add
test
pusha
in
sub
pop
mov
push
lea
sub
pop
test
je
push
push
push
push
push
call
pop
shll
add
popf
int3
clc
jno
add
mov
add
add
xchg
add
mov
push
add
mov
in
in
lcall
testl
add
or
push
push
push
lea
push
call
addr16
cwtl
leave
add
mov
xlat
add
lret
mov
loop
add
movsb
mov
add
add
push
mov
mov
out
lcall
mov
cli
fadds
pop
inc
push
push
lea
push
push
call
jae
push
bound
test
repnz
std
ja
add
data16
inc
pop
jmp
pusha
mov
xlat
add
mov
data16
add
add
add
mov
add
add
pop
aam
aam
add
into
aad
les
add
add
xchg
sti
add
jns
in
lock
lcall
rorb
test
add
push
not
shr
sub
shr
pop
test
je
push
rol
pop
mov
push
add
not
not
pop
inc
push
lea
pop
cmp
je
push
pop
test
jne
push
push
lea
push
push
push
push
push
push
push
push
call
add
popf
mov
add
out
push
push
jo
test
int3
cld
pop
add
shl
lea
add
enter
ljmp
lret
mov
add
sti
add
lods
pop
add
mov
test
xchg
lcall
rclb
push
pop
pop
push
push
push
push
push
push
push
push
push
call
xchg
shrl
mov
add
add
mov
call
jne
xlat
mov
add
mul
pop
rcr
insb
mov
add
popa
in
add
aad
jmp
in
add
stc
add
in
xchg
iret
add
add
fs
jp
in
fdivr
lcall
push
lea
shr
lea
shr
pop
pop
pop
push
add
inc
pop
leave
push
dec
not
pop
ret
mov
push
ror
pop
inc
push
add
pop
cmp
jne
lea
push
not
add
pop
mov
push
push
push
call
add
roll
loope
jne
add
mov
bound
mov
add
xchg
add
add
js
mov
lcall
in
test
add
add
ret
xor
push
push
push
call
lcall
imul
add
mov
pop
scas
out
mov
sti
jecxz
in
leave
lock
fistl
icebp
add
mov
jno
repnz
faddl
orl
pop
add
sbbl
jmp
add
push
push
call
add
add
mov
mov
icebp
loop
mov
add
xchg
in
mov
xchg
xchg
xchg
jae
fs
pusha
add
add
xchg
push
jp
add
aam
repnz
popf
add
add
scas
js
add
mov
cld
add
xchg
mov
enter
sub
pop
cmp
jne
mov
push
lea
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
cmc
je
push
scas
stc
push
push
jb
subl
mov
add
add
add
add
mov
add
jne
in
fildl
add
add
clc
xchg
add
in
add
add
std
mov
lret
lods
add
popa
add
sub
pop
test
je
push
push
push
push
lea
push
push
push
push
push
call
outsl
xchg
add
add
add
add
add
add
imul
mov
add
add
add
mov
add
add
lcall
callw
jp
adc
test
add
mov
rolb
add
mov
mov
add
out
add
out
add
cmc
movsb
xchg
imul
arpl
leave
add
xchg
mov
fldl
icebp
add
mov
lock
add
push
sub
not
pop
cmp
je
push
ror
pop
jmp
xor
push
push
push
push
push
call
add
add
test
add
stc
push
add
jbe
pop
je
add
cld
add
mov
in
repnz
idiv
add
mov
add
iret
filds
xlat
add
enter
in
in
pop
pop
pop
push
push
push
push
lea
push
push
push
push
push
call
jp
add
hlt
add
add
outsl
arpl
mov
push
lret
cmpsl
push
push
add
jae
add
cli
int3
mov
lret
mov
jns
add
xchg
xchg
nop
mov
add
mov
in
xlat
outsl
jle
pop
pop
add
push
mov
lcall
pop
push
xor
shl
add
sub
pop
leave
push
push
push
lea
push
push
call
jle
add
jo
leave
add
mov
jecxz
ja
xor
mov
xchg
xchg
mov
in
in
pop
ret
lea
push
add
sub
ror
pop
pop
push
sub
pop
pop
pop
push
lea
pop
pop
leave
push
push
push
push
push
push
push
push
call
cmpl
push
sahf
insb
add
movb
cmc
add
add
into
out
aam
add
cmpsb
cltd
add
xchg
xchg
imul
in
loopne
ret
push
lea
push
lea
push
push
push
lea
push
push
push
lea
push
push
call
fistpll
add
int3
mov
ja
fwait
add
shr
in
xchg
fnop
mov
add
fsubs
add
mov
xchg
add
add
push
push
xlat
pushf
out
add
mov
loop
sahf
xchg
insb
mov
mov
cmpsl
add
add
add
add
in
fcomps
pop
push
push
push
push
push
push
push
call
push
push
movsb
add
insb
add
add
leave
add
popf
popa
xchg
jle
add
add
in
add
addr16
cmc
xchg
push
rolb
add
mov
add
into
jno
imul
add
add
pop
xchg
mov
in
lcall
push
sub
add
add
pop
pop
push
lea
pop
pop
leave
push
lea
push
lea
push
push
push
push
push
push
push
push
call
movb
pop
roll
loopne
orb
mov
add
xchg
xchg
add
add
add
nop
test
adcb
add
mov
add
mov
hlt
arpl
jge
add
jl
mov
arpl
cmpsl
add
add
add
inc
movb
add
mov
cmp
lds
cmp
xor
adc
and
adc
dec
cmp
mov
hlt
cmp
xor
adc
jb
adc
mov
add
fbld
sub
adc
in
sbb
in
sti
add
mov
dec
xor
lds
xchg
mov
ss
shll
incl
and
inc
mov
pop
and
movsb
jns
push
fsts
and
xchg
aam
ljmp
mov
sub
or
roll
ja
cmove
pushf
xor
pop
icebp
jne
pop
pop
in
mov
pop
push
sub
outsb
leave
add
cmc
mov
std
pop
lret
sbb
outsb
inc
push
push
ret
sub
popf
repnz
adcl
pop
jne
mov
pop
pusha
shll
lcall
sbb
mov
ds
hlt
xor
or
cld
mov
shll
cs
testb
or
jecxz
jns
mov
dec
pop
sahf
pop
bound
xor
push
push
cmp
andl
sub
sub
xor
or
adc
jnp,pt
pop
dec
and
mov
adc
or
bnd
sub
pop
xchg
pop
jb
inc
shrb
repnz
and
inc
cwtl
mov
add
lds
das
lahf
loopne
and
mov
adcl
test
imul
or
movsb
jmp
cltd
jno
inc
negb
push
out
inc
cmp
dec
enter
cltd
push
adc
es
cs
cwtl
insb
jbe
lret
dec
mov
push
loop
stc
jbe
rcrb
push
sub
data16
or
hlt
rclb
sbb
inc
aaa
icebp
das
mov
and
add
std
adc
adc
movsl
scas
pop
aad
sbb
fldcw
xchg
sub
pop
inc
jo
fistpll
loop
add
sub
in
cli
inc
rorb
cld
pop
mov
xor
lea
in
push
sbb
cmp
pop
jb
jl
jle
ret
and
stos
imul
ret
pop
lahf
lods
mov
negl
loopne
bound
mov
xlat
ret
rolb
sbb
sahf
push
mov
orb
js
movsb
jecxz
jle
cld
adc
pushf
mov
mov
ret
mov
xorl
and
or
cmpsb
cmp
lods
loop,pt
loopne
mov
in
or
cs
iret
mov
mov
and
lahf
imul
aas
xlat
mov
sbb
stc
enter
xchg
inc
cmc
adc
stc
cmpsb
jl
adc
in
jnp
inc
push
addr16
aam
fsubr
cmc
xchg
daa
lods
inc
in
pop
fyl2x
push
mov
lock
add
adc
dec
stc
icebp
xchg
sbb
cmp
lret
dec
push
in
cmpb
jns
xorb
push
jae
nop
sbb
mov
xor
fmul
ficoms
outsb
push
push
mov
sub
in
cmc
gs
mov
stos
cli
or
cmp
jmp
lret
cld
cmpsb
mov
dec
fwait
pusha
mov
mov
xchg
test
ficoms
jne
gs
sub
pop
sub
adc
mov
or
sahf
jg
mov
mov
negl
or
mov
mov
insl
rolb
jecxz
xor
icebp
sbb
and
push
ret
ja
addr16
roll
out
mov
jnp
inc
or
scas
lret
imul
cmp
sub
xor
jnp
mov
mov
mov
fwait
popf
mov
xor
lock
adc
fsubs
pop
dec
loopne
and
fwait
js
jae
shll
pop
roll
cwtl
sarl
dec
clc
mov
xor
hlt
mov
scas
popa
sbb
pop
loopne
jg
dec
leave
cmp
arpl
scas
hlt
dec
dec
sahf
or
xchg
cmp
orb
popf
popa
fidivrl
fbld
loop
cmc
dec
jmp
fisubs
push
in
into
pop
adc
push
cld
pop
call
jl
inc
pop
cmp
je
mov
hlt
xchg
xor
xchg
lea
into
xor
pop
shrl
cmp
mov
std
mov
cmp
arpl
xlat
cs
std
dec
and
xchg
scas
sub
or
leave
xchg
xchg
xor
xchg
cmp
movsb
cmp
xchg
xor
cmp
mov
dec
cmpsl
adc
sub
push
xor
movsl
int
dec
or
dec
sbb
ljmp
cmp
les
xor
shll
mov
cmp
or
sub
repnz
mov
mov
mov
or
sahf
push
adc
mov
inc
add
xor
gs
repz
aad
lahf
icebp
insl
xlat
pushf
add
stos
mov
mov
mov
repz
cmp
or
mov
mov
leave
jb
rclb
add
xor
mov
in
inc
jmp
and
out
pop
ds
lods
loop
push
pop
lea
les
scas
and
jmp
aam
icebp
sub
dec
adc
mov
xor
loopne
and
sub
mov
xchg
pop
les
in
jmp
shrb
mov
pop
mov
jp
pop
test
xchg
mov
stos
hlt
pop
inc
push
cmp
mov
sti
addr16
push
sub
xchg
loop
fldl
addr16
sti
or
pop
fbstp
add
add
mov
jmp
insb
repnz
or
aaa
dec
cmpl
add
sbb
jmp
or
daa
inc
cld
std
push
arpl
pop
repnz
out
int
fisubs
add
jp
nop
xor
push
out
in
mov
xchg
mov
cmp
sbb
pop
aaa
xor
in
imul
jg
fcomp
daa
sub
pop
fiaddl
add
hlt
lock
stos
pop
popf
shr
das
add
incb
sub
add
cld
sub
call
mov
out
mov
aad
pop
and
sbb
sub
in
sbb
outsl
xor
in
add
sub
mov
fiaddl
popf
movsl
stos
jno
pop
rcl
mov
jle
mov
cmpsl
sub
sarb
enter
cmc
xchg
mov
mov
cld
sbb
pop
cmp
icebp
lds
jne
dec
mov
lret
dec
dec
in
mov
xchg
mov
shrb
xor
mov
xchg
jg
insl
test
mov
out
xor
ds
mov
mov
xchg
push
int
cmp
imul
pop
dec
adc
lahf
fisubl
push
add
xchg
mov
lret
leave
in
fadd
sahf
mov
jnp
inc
cs
pop
add
mov
aam
int3
imul
insb
dec
mov
cmp
addr16
shrb
adc
mov
loope
leavew
or
sub
push
mov
push
dec
inc
xchg
mov
mov
mulb
insb
fwait
je
mov
or
push
repnz
cmp
dec
push
and
xor
loope
or
test
bswap
sub
or
es
inc
inc
lods
jecxz
mov
adc
pop
insl
lahf
xchg
xchg
stos
stos
xchg
dec
push
fs
repnz
sahf
pop
mov
je
add
fs
lea
std
push
jnp
aad
xor
mov
fdivrs
xchg
or
sbb
shlb
sub
pop
ja
xor
pop
outsb
and
mov
mov
ret
repnz
adc
jp
outsl
out
xor
cmc
jg
rolb
in
sti
push
adc
jae
push
push
je
mov
cwtl
sub
inc
cmp
jbe
xor
lcall
test
mov
mov
or
dec
stos
iret
cwtl
test
add
mov
mov
push
inc
stos
push
mov
into
call
pop
dec
fwait
imul
shlb
fcoml
and
out
call
jne
imul
sub
jge
jmp
ss
sti
push
imul
shlb
xchg
repz
movsl
pop
inc
test
mov
ret
int
cld
sub
enter
pop
icebp
lock
jnp
iret
mov
sub
in
popf
int
jp
es
jae
sub
push
popl
xchg
add
ficoms
add
inc
popa
fsts
sub
icebp
andb
pop
mov
adc
sub
jge
add
dec
sbb
jb
pop
inc
dec
fisubrl
test
scas
mov
jb
pop
xchg
and
mov
data16
dec
push
leave
inc
xchg
adc
inc
mov
aas
aam
rcrl
repz
push
dec
xchg
add
jbe
cmp
rcrb
xchg
leave
adc
cmc
inc
push
jo
push
cli
lods
sub
sub
aaa
add
call
xchg
leave
sub
adcb
into
out
mov
lahf
pop
jecxz
inc
aad
or
ficoml
aad
inc
mov
push
test
xchg
orl
jge
pop
cld
sub
filds
mov
rcll
out
lret
into
test
lods
mov
inc
ret
fdivl
or
sbb
pop
sbb
popf
pop
xchg
push
mov
lret
scas
cmp
xchg
cmp
rclb
mov
mov
ficoms
cmpsb
and
adc
push
cmp
jne
gs
movl
lea
cmp
inc
sub
fwait
sub
push
adc
pop
shl
popa
bnd
aas
scas
insl
cmp
pushf
jne
add
shrl
ja
aam
dec
and
fs
sub
fisubrl
stos
enter
imul
push
lds
cmp
cmc
mov
incb
xchg
pop
push
push
test
mov
adc
nop
ds
fdivs
jle
jne
inc
add
inc
lcall
testb
cli
adc
push
std
rcrl
mov
or
jmp
sub
jne
out
movsl
mov
aam
outsl
rcrl
lahf
mov
push
inc
ret
es
mov
sub
xchg
ret
add
test
daa
push
jne
adc
out
mov
jmp
out
pusha
mov
or
inc
inc
or
pop
xchg
add
and
mov
adc
adc
sbb
test
pop
fcmovnb
lock
jle
fidivrs
xor
in
imul
sub
test
and
popa
push
cmp
pop
jl
pop
fbld
mov
sarb
lods
in
dec
cs
mov
int3
mov
mov
ds
and
pop
inc
lret
mov
pushf
xor
mov
leave
popf
stos
sbb
fdiv
xor
sbb
ljmp
movl
mov
xchg
push
jp
mov
mov
aad
notb
push
cli
cmp
lret
cmp
ror
push
add
aam
jne
sbb
gs
push
lcall
lahf
sbb
sub
fwait
in
test
dec
adcl
out
and
cs
jns
int3
sarl
scas
add
push
aaa
cmp
jge
jp
and
les
jb
cmpsb
pop
ljmp
adc
inc
sub
icebp
stc
lds
inc
dec
mov
cmp
add
stc
jl
xchg
stos
mov
ss
das
jl
cmpsl
dec
jb
jnp
dec
xor
scas
mov
xchg
addr16
out
xor
shrb
sbb
inc
insb
mov
fcomps
jecxz
push
sahf
pushf
incb
cli
lcall
mul
mov
cwtl
ja
je
test
ja
cmp
cmp
inc
jne
js
lret
in
jmp
filds
or
stos
sti
and
mov
movsl
mov
icebp
and
lahf
pop
mov
adc
shll
xchg
xchg
loope
push
and
stos
imull
jmp
popa
int
cmpsl
sbb
ret
inc
xor
push
dec
mov
inc
adc
out
jb
stos
jmp
sub
push
dec
mov
in
ficomps
push
test
mov
lret
add
rorb
addr16
aas
dec
sub
cmc
mov
stos
test
das
jge
push
mov
jp
aas
roll
dec
sub
inc
ror
mov
dec
cmp
negb
adc
xor
aam
and
shr
cmpsl
add
push
xchg
sub
adcb
incl
scas
cmpsl
scas
out
or
adc
mov
sub
push
lcall
fnsave
jmp
jne
out
xchg
add
add
cmp
or
push
fwait
xor
popa
dec
xchg
push
sub
ficomps
lahf
lods
lods
imul
das
jne
faddl
sub
or
mov
push
adc
jmp
mov
inc
out
cmp
adc
stc
movsb
or
pop
xchg
mov
mov
mov
fsub
fcomps
in
loopne
in
mov
lock
jle
xor
mov
lcall
pop
sbb
sbb
sbb
pop
jmp
cltd
and
sbb
imul
or
lret
mov
cmp
or
sub
nop
mov
dec
adc
iret
xor
in
insl
push
cmpl
fmulp
and
cltd
call
ret
xchg
add
shrl
fbld
cmp
mov
xchg
dec
sub
jb
insb
mov
cltd
push
push
cmp
xor
dec
stos
mov
lods
push
mov
sbb
ret
add
ja
fimull
lds
adc
daa
lahf
addr16
imul
dec
aad
push
fwait
in
dec
adc
inc
jb
jle
rcrl
adc
push
das
scas
mov
aam
or
adc
in
das
dec
sti
push
push
fcoml
cmp
xchg
out
xchg
out
fstl
std
addr16
adc
cld
loope
jecxz
add
adc
gs
jns
fcmovnu
scas
icebp
fistps
insl
cld
inc
fwait
call
icebp
jnp
jmp
popf
sub
xorl
shl
in
sbb
sub
loopne
mov
pop
inc
in
xchg
sti
jno
mov
add
imul
insb
lock
mov
mov
or
out
inc
in
lods
xchg
dec
rcrb
out
fimuls
mov
iret
aaa
imul
imul
aam
pop
adc
repz
lcall
sbb
add
cltd
xchg
jae
jno
test
ficoms
adc
mov
xor
adc
xor
fisttpll
aaa
ja
pop
xchg
adcl
repnz
adc
fisttpll
rclb
cld
imul
fwait
xchg
stos
pusha
ljmp
mov
stc
xchg
inc
insb
mov
dec
push
hlt
mov
pop
ret
enter
dec
shrl
mov
daa
inc
in
fimuls
lret
mov
and
xchg
mov
adc
push
insl
call
dec
sub
ja
arpl
push
push
add
mov
js
dec
lret
mov
xor
imul
dec
or
and
push
inc
js
lret
adc
scas
jbe
loopne
dec
aad
sub
pop
ljmp
jp
ljmp
int
add
cmp
test
adc
shl
mov
lea
rcl
xchg
sbb
xchg
xor
incb
or
movsl
cmp
or
or
mov
test
lret
pop
dec
push
in
iret
stos
xor
jp
adc
push
sub
jle
cmp
and
mov
lret
inc
aaa
xor
dec
flds
push
int3
in
push
clc
por
std
inc
xchg
bound
sarl
lods
sbb
adcb
mov
aas
dec
pop
dec
push
pop
jae
pop
or
push
sbb
pop
outsb
lahf
adc
add
enter
cmc
cli
dec
jno
adc
lret
mov
ds
inc
in
and
sbb
dec
jp
cld
mov
rorl
pop
bound
and
xor
std
sub
cmp
ds
test
cmp
insl
adc
jmp
cltd
into
xor
fxch
mov
out
scas
mov
add
test
gs
mov
js
pusha
fadd
aad
ret
test
dec
mov
xchg
movsbl
std
mov
xchg
scas
inc
jle
in
or
test
bound
shr
in
in
xor
cli
arpl
jns
inc
xor
add
les
mov
sbb
cmp
iret
std
f2xm1
mov
and
inc
imul
lds
or
cmp
mov
dec
int
adc
jp
and
mov
test
or
xchg
inc
push
popa
xchg
dec
xchg
push
fs
mov
push
pop
test
daa
or
sbb
filds
inc
fnsave
das
mov
xchg
sbb
mov
sbb
dec
or
push
mov
dec
xor
notb
lsl
cli
pmullw
or
adc
inc
add
jmp
pop
leave
pop
mov
mov
or
mov
mov
clc
jge
add
aas
push
popa
mov
xor
jl
scas
movsb
movsl
sub
xor
or
and
fs
pop
inc
mov
pop
push
xlat
push
or
jno
sti
dec
loopne
mov
jno
sub
outsb
mov
fimuls
or
movsb
mov
pop
xchg
add
xor
clc
cmpsb
mov
sub
mov
ja
push
adc
push
mov
cmpsl
xlat
std
lret
push
lods
pop
pop
mov
je
xchg
int3
loopne
jmp
loopne
insl
cmp
imul
ret
rcrl
push
ficoml
and
test
add
sub
mov
dec
cld
cmpb
idiv
mov
pop
roll
pop
shll
mov
jnp
jbe
push
and
repz
in
xor
pop
insl
inc
push
mov
test
aam
scas
dec
in
pop
cmp
hlt
adc
ret
cmp
mov
addr16
les
je
xchg
mov
sbb
mov
push
inc
out
repnz
es
andb
inc
or
faddl
jl
push
adc
sbb
add
xchg
adc
outsb
decb
adc
ret
subl
insl
test
mov
sbbb
stos
inc
nop
lods
or
add
js
jge
fisttpl
test
rolb
xlat
int3
push
fiaddl
ret
addr16
xor
pop
sbb
cmp
adc
add
in
loope
pop
cmp
sbb
sahf
xchg
add
mov
sub
cmpsb
sti
mov
cmp
sub
sbbl
inc
and
movsl
pop
push
les
or
ja
push
js
outsl
movsb
fcomp
jge
ret
mov
sbb
mov
out
sarb
or
leave
mov
sub
cwtl
clc
insl
fimull
pop
inc
inc
repz
fsubrl
jp
int3
jnp
jmp
fisubs
pop
xchg
mov
mov
push
or
or
adc
xchg
enter
stc
arpl
jecxz
pop
or
in
icebp
push
das
and
test
jge
call
sbb
mov
add
mov
rclb
faddl
inc
pop
jp,pt
push
shrl
xor
fcompl
movsb
add
xchg
jbe
in
jb
int3
jle
loop
xor
shll
sub
adc
cmpsl
aaa
push
mov
pop
movsb
push
jbe
mov
cli
lret
cmpsb
cwtl
iret
pop
and
mov
lret
jno
jp
adc
mul
jle
push
clc
add
push
cmp
repz
push
xchg
popf
cmp
inc
xor
xchg
mov
xorb
dec
sbb
jecxz
fisttpl
mov
loope
sub
sbbb
mov
aas
shll
aam
or
lea
add
loopne
movsl
jge
mov
rcr
cltd
daa
xor
cmp
ja
dec
mov
es
sub
sbb
cwtl
or
hlt
fbld
imul
out
pop
pop
or
mov
push
add
fs
movsl
adc
int3
fadd
xor
fsubrs
ret
add
out
cs
adc
lret
cmp
mov
sub
repnz
jae
or
mov
jge
cmp
pushf
sbb
mov
adc
call
mov
aad
cmp
or
loope
cmc
mov
mov
arpl
lock
or
jmp
mov
adc
scas
push
pop
or
call
add
cmpsb
inc
daa
jge
push
jbe
sbb
adc
or
lea
xor
lods
inc
fldl
jge
fldenv
xor
cmp
ficomps
sbb
jecxz
xchg
enter
jnp
mov
push
cmc
jns
scas
mov
shlw
sub
and
gs
rcrb
arpl
pop
fwait
stc
out
addl
cld
fwait
and
rcrb
subb
dec
in
and
lea
sub
out
xchg
into
std
pop
fmull
dec
push
sbb
loop
jo
adc
fdivrs
lcall
ljmp
icebp
jnp
mov
mov
mov
out
dec
jo
cli
pop
jge
jne
cmp
shrl
sub
add
cmp
repnz
mov
ret
sbb
bound
mov
out
jle
xchg
movsl
incb
les
pusha
adc
cwtl
adc
mov
faddp
xchg
cmp
outsl
call
jecxz
bound
jnp
mov
pop
pushf
call
pop
add
ret
jge
lock
lea
inc
cmc
cmp
loopne
je
jg
mov
push
pop
sahf
or
test
adc
xchg
mov
pop
scas
push
xchg
push
leave
dec
adc
in
test
out
adc
sbb
pop
mov
dec
ds
adc
cld
inc
shlb
cmc
push
push
xor
xchg
and
xlat
in
maxps
out
cmc
sbbl
jno
mov
sub
decl
rolb
scas
data16
enter
mov
sbb
jne
lret
dec
xchg
jge
pop
into
mov
cmc
dec
popa
mov
out
sarb
pop
mov
ficomps
push
cs
mov
in
cmp
jge
or
test
call
scas
jo
jno
mov
mov
mov
pushf
jns
dec
or
mov
aad
je
out
das
popf
out
mov
mov
cld
scas
out
daa
cmp
repnz
mov
popf
dec
ret
imul
jg
dec
shlb
push
xchg
fcoms
inc
xor
loope
push
fisttps
push
cmp
imul
es
or
add
pop
pop
iret
mov
xor
notb
pushf
andb
loop
test
sbb
insl
and
jge
push
test
jg
xchg
pop
jmp
inc
push
pusha
and
das
icebp
js
inc
xor
jmp
fs
shlb
scas
mov
dec
push
or
jae
arpl
arpl
mov
xchg
test
loopne
pushf
aaa
and
fdiv
outsb
push
in
pushf
sarl
jge
mov
out
fisubl
or
pop
jp
ja
push
subl
icebp
cmp
fistpl
and
lret
adc
dec
sub
and
cltd
lods
out
dec
jle
mov
and
mov
sub
int3
movb
mov
fcom
sub
ds
pop
lock
xor
sub
lds
mov
cmp
mov
cmpsl
stc
shrb
pop
bound
adc
inc
mov
and
test
cmp
lock
jmp
mov
xor
sbb
push
jno
sbb
test
push
push
rclb
inc
mov
in
pop
movl
adc
push
sub
dec
lret
outsl
push
dec
inc
jae
sahf
leave
sahf
lds
push
daa
push
cmpsl
mull
in
clc
push
jnp
xchg
cmc
int
dec
inc
ret
mov
adcl
out
mov
pop
mov
pop
ret
in
jo
push
ds
push
lret
ljmp
in
jb
or
adc
stos
movsb
inc
cmpsl
mov
mov
sarb
cmp
hlt
cmpl
ret
sub
adc
mov
popa
sub
pop
mov
fsubrl
dec
out
out
ljmp
pop
int3
sti
lcall
ret
sbb
jmp
lahf
pop
lock
jg
add
popf
cwtl
dec
stos
xlat
xor
stos
cmp
adc
cmp
mov
xchg
add
jp
sub
xchg
dec
mov
xorl
nop
xchg
or
cld
and
ss
mov
pop
jmp
mov
push
mov
mov
test
pop
pop
sbb
jb
and
sub
mov
inc
adc
mov
mov
jge
push
mov
sbb
cmpl
fiadds
xor
in
cmp
stc
shr
lock
add
int
testb
or
jns
in
push
nop
out
cmpsl
and
jae
xchg
fs
lea
leave
cmpsb
mov
ds
sahf
jnp
adc
push
or
cmp
jmp
dec
jo
test
mov
int
sbb
pusha
repnz
jno
mov
ds
cmpb
mov
repz
test
or
xor
xchg
std
ljmp
je
fwait
ret
or
icebp
arpl
movsb
in
movsl
adc
repz
leave
and
hlt
sbb
jl
aas
pop
dec
sub
adc
sbb
add
dec
lcall
jecxz
lret
add
add
push
xchg
dec
dec
sti
stos
jmp
dec
mov
pop
xchg
daa
jl
mov
cmp
push
add
adc
popf
pop
les
lods
xchg
inc
cmp
push
cld
pushf
add
push
dec
adc
dec
dec
ret
lcall
pop
andl
mov
dec
mov
jg
add
and
rorb
push
xor
mov
icebp
add
mov
lock
lahf
cmp
or
mov
xchg
popa
or
adc
xchg
inc
fidivl
pop
scas
test
push
outsl
mov
push
pop
push
adcb
mov
cmp
lahf
inc
sbb
nop
loopne
mov
test
sbb
sbb
inc
sub
sbb
aaa
sbb
jmp
aad
add
cld
cmp
jge
push
xchg
lcall
in
inc
ss
inc
dec
arpl
xor
mov
mov
inc
pop
ljmp
cld
les
int3
in
shlb
jl
push
daa
pop
ret
xor
rcll
lock
idivb
scas
repnz
sarl
ret
mov
fyl2xp1
out
cltd
push
fdivrl
or
fisttps
movsb
shrl
adc
subl
lock
ja
outsb
fldt
fimuls
sbb
inc
lock
mov
nop
xchg
cmp
sbb
into
pop
das
repnz
xchg
out
pop
loope
icebp
addb
mov
cld
jns
xchg
insl
jae
jae
mov
scas
pop
fmul
movsb
adc
dec
sub
es
repz
mov
iret
push
or
sub
sub
ljmp
mov
or
aad
sub
lcall
xor
jmp
jg
add
pop
sahf
xchg
pusha
addr16
mov
es
push
nop
insb
lea
das
sbb
mov
mov
push
insl
inc
push
push
xor
or
frstor
fisubs
into
mov
rclb
imul
sbb
mov
movsb
fs
push
mov
push
pop
adc
mov
add
or
mov
clc
sub
shll
enter
mov
xchg
jmp
adc
mov
in
add
sub
ja
pop
xchg
les
and
repz
icebp
cmpsb
sarl
lret
dec
fs
imul
sub
stos
cmpsb
leave
jnp
and
lcall
movsl
dec
leave
out
jo
cmp
jns
dec
aaa
dec
testl
rcrb
lea
gs
pop
push
enter
jl
jb
or
out
add
pop
mov
fisubrs
adc
and
hlt
mov
xor
xor
cmp
jle
icebp
xor
andb
mov
jb
arpl
sahf
test
sub
mov
mov
out
jns
pop
lahf
addb
adc
cltd
cmp
out
jne
lcall
mov
cwtl
add
sahf
sahf
mov
loop
test
ret
adc
out
push
and
add
test
lods
jno
xchg
cmp
push
pop
sti
pavgw
cmpsb
xor
adc
aad
add
bound
push
lcall
push
push
adc
sub
push
fs
sbb
stc
adc
stos
mov
mov
pop
int
sub
icebp
xchg
cmp
push
enter
and
test
push
mov
rorb
jb
cld
sbb
dec
addl
add
jp
mov
or
sub
jecxz
xchg
jns
jno
xchg
dec
jns
and
mov
add
xchg
test
loop
ror
push
scas
in
jecxz
mov
sub
out
aas
jle
xor
jg
mov
pop
icebp
and
loopne
sub
out
out
sub
pop
dec
pop
sbb
cld
cs
jecxz
imul
xlat
aas
popa
std
lods
into
pop
out
sti
es
mov
mov
pushf
adc
sbb
adc
jecxz
jl
sbb
mov
js
sub
cmp
mov
push
outsl
fstpt
push
mov
ja
ljmp
cmp
lds
cmp
sbb
push
dec
xor
jmp
shlb
fwait
packsswb
xor
xchg
mov
mov
popa
xor
gs
stos
cmp
adc
mov
cmp
lahf
leave
jg
xchg
repnz
ror
notb
adc
xchg
jae
mov
in
adc
icebp
push
rolb
iret
ret
nop
add
adc
fs
ja
pop
out
xlat
js
cmpl
es
jmp
push
dec
stos
mov
movsb
dec
insb
jg
lret
into
das
push
mov
ss
int3
mov
imul
test
mov
sbb
sahf
mov
cmp
or
mov
push
push
mov
pop
or
mov
loopne
push
cmpsl
pop
dec
decl
loopne
xor
mov
stos
int3
lods
in
stc
mov
mov
fcoms
and
dec
lret
pop
adc
jno
mov
lret
push
es
imul
loope
dec
jge
xor
mov
xor
arpl
xor
dec
add
push
imul
push
sti
jp
sub
or
adc
cmc
mov
enter
pop
mov
adc
loopne
cltd
push
aas
into
dec
daa
js
sbb
cmc
imul
or
pop
inc
xor
fcom
or
aaa
stc
ss
stos
int3
stos
ds
adc
adc
rol
std
xchg
mov
popf
jecxz
aam
popl
mov
xchg
popf
xor
inc
push
cwtl
pop
adc
and
dec
scas
or
std
push
gs
mov
mov
and
adc
in
adc
shlb
cmc
or
mov
das
mov
dec
mov
fstps
addr16
and
push
insl
jl
pop
out
push
dec
outsl
mov
cmpsl
insb
stos
and
jp
pop
mov
fwait
dec
orl
dec
outsb
mov
pop
push
icebp
mov
cwtl
jne
dec
outsb
xchg
ret
mov
or
cs
cmp
sbb
lock
dec
xchg
jmp
popf
push
sahf
aad
push
ret
or
push
add
mov
sbb
ret
jmp
repnz
mov
mov
fbld
imul
jecxz
push
in
das
jbe
and
sti
call
or
mov
adc
sub
dec
inc
fwait
cmp
jne
pop
mov
adc
and
xchg
lds
cmp
and
ljmp
push
push
shll
xchg
cwtl
es
sahf
adc
sub
arpl
pop
sbb
iret
xor
mov
push
push
mov
out
pop
pushf
fnsave
cwtl
fisttpll
push
xor
popa
mov
outsl
ficomps
dec
scas
sbb
arpl
scas
fwait
sar
ds
mov
lods
enter
adc
popf
pop
push
fstp
sahf
movsl
clc
dec
jno
addr16
cmp
es
pop
sbb
push
cmp
jne
mov
mov
loopne
popf
in
mov
gs
dec
testb
aad
pop
ficoml
scas
jge
inc
js
into
icebp
outsb
aas
xchg
dec
adc
adc
push
adc
xchg
cs
sub
js
inc
mov
scas
inc
test
stc
xor
aas
jae
push
pop
data16
mov
push
add
pop
push
movsb
add
jge
lock
dec
rcrb
outsb
mov
out
fidivrs
sbb
in
cmc
repnz
in
add
jmp
inc
stc
cltd
adc
jle
inc
xlat
gs
pop
adcb
leave
push
lds
aas
push
lea
outsl
aas
jle
mov
lods
xchg
sbb
xorl
jo
mov
fcompl
lods
ss
sub
mov
mov
lods
ja
dec
ret
fisubs
and
out
push
js
je
outsl
sub
stos
inc
lea
sbb
pusha
scas
js
sbb
push
mov
fdivl
imul
pop
lcall
lret
xor
sub
in
pop
mov
aam
outsl
outsb
sub
cmp
cwtl
xchg
jle
mov
dec
aad
push
jmp
aad
cmp
lret
andl
sub
xor
adc
push
lock
inc
insw
xchg
jg
cmp
or
popa
pop
xchg
mov
pop
push
shll
out
loope
lds
mov
fidivrl
insb
xor
mov
sub
scas
sbb
xchg
xchg
adc
mov
stos
shl
inc
and
out
repz
dec
xlat
fs
addr16
cli
or
setnp
icebp
outsl
mov
pop
or
out
pop
mov
test
bound
xorl
cmp
ret
pop
xchg
jbe
shll
adc
addr16
pusha
ret
out
mov
int3
or
cmp
stos
andl
lods
aad
popf
sub
outsl
fwait
insl
and
sub
lea
mov
popa
mov
adc
out
mov
in
mov
jne
mov
ljmp
sbb
ss
pop
jo
and
mov
dec
xor
loopne
imul
dec
mov
dec
inc
cmpsl
sbb
es
push
sti
fs
shll
sbb
or
shrl
xchg
test
mov
mov
mov
and
xlat
sub
xchg
cli
xlat
inc
push
mov
stc
push
cmpsb
mov
stos
sub
mov
into
jb
ss
lock
popf
lds
and
js
aad
addl
xchg
les
outsb
lock
aad
popf
cmp
in
sub
xor
sarb
mov
loop
push
mov
push
cs
dec
mov
xchg
inc
outsb
jmp
pop
push
les
mov
adc
fisubl
inc
fcompl
xor
adc
roll
jae
movsb
into
xor
in
and
movsb
dec
addl
jg
jae
ljmp
adc
ljmp
test
pushf
sahf
mov
or
cmpsb
add
test
push
je
ret
xchg
mov
mov
out
sub
mov
aad
mov
faddl
iret
je
fidivrl
js
ja
cwtl
adc
push
nop
cmp
inc
mov
adc
pusha
sub
repz
sbbl
sub
cmpsb
jecxz
sbb
ss
add
je
mov
scas
pop
lock
outsb
subl
push
mov
subl
pop
in
cmp
sahf
inc
or
repz
jne
sub
sbb
pusha
pop
push
daa
add
mov
daa
shlb
bound
and
or
jle
out
inc
push
enter
repz
jae
xchg
pop
fldenv
bswap
sub
nop
sbb
sbb
repnz
adc
sub
rolb
sub
inc
pusha
mov
mov
and
je
pop
in
sti
and
sbb
pop
inc
jb
or
cli
sub
iret
jmp
jmp
inc
and
divl
aam
inc
or
scas
out
mov
popf
gs
aas
xor
jne
mov
pop
fdivr
push
xor
iret
xchg
not
mov
mov
sub
rorb
sub
lock
int
daa
repz
fistps
sbb
adc
adc
subb
out
mov
mov
jne,pn
adc
sub
fidivrs
test
and
or
test
or
xor
inc
sbb
inc
cltd
test
test
andl
jns
arpl
roll
mov
mov
mov
pop
in
jae
stc
cmpsl
cmpsl
mov
push
insb
leave
arpl
enter
cmpsb
lret
jns
jl
ss
cmp
ds
imul
push
push
sbb
push
popf
aam
shll
lods
stc
icebp
movsb
cld
pop
mov
mov
popa
testb
mov
adc
lahf
lea
mov
ja
mov
movsl
push
sub
mov
hlt
mov
hlt
icebp
cmp
call
add
mov
jg
xlat
int
add
push
dec
and
fistl
adc
sub
es
sbbl
or
daa
cmp
arpl
dec
fcmove
repnz
xor
dec
in
cs
mov
arpl
cltd
mov
sub
cli
xor
inc
pushf
shl
pushl
addl
and
xor
fs
out
cmp
or
addb
mov
xchg
aas
add
cmp
cmp
in
xor
insb
sbb
repz
jecxz
loopne
or
jmp
cmp
jmp
cwtl
fdivl
mov
cmpsl
and
xor
mov
xlat
add
fcmovu
mov
jae
insb
mov
xchg
xlat
test
pop
jo
sahf
mov
or
xchg
clc
cld
mov
push
mov
push
loope
test
outsl
add
outsl
xchg
push
mov
and
push
pop
inc
pop
test
mov
xchg
xor
divl
push
or
jae
push
call
mov
or
xor
jne
dec
push
in
push
xchg
cmp
in
or
cmp
mov
subb
and
jne
test
movsl
hlt
jl
mov
in
pop
adc
sub
pop
xlat
out
int
fbstp
mov
sti
adc
inc
push
notb
adc
and
sub
in
mov
int3
std
aam
inc
inc
adc
sahf
cmpsb
and
fcmovnbe
jae
inc
cmp
cmp
test
push
sbb
iret
mov
mov
jbe
orl
mov
pop
nop
adc
and
mov
dec
pop
adc
stos
jns
divl
xor
fstpl
pop
and
jg,pn
push
sbb
xor
or
stos
into
sub
cmp
jnp
mov
mov
jge
xor
jmp
test
ljmp
mov
fimuls
dec
push
fdivrp
push
inc
incl
fildll
push
divl
jns
xchg
mov
mov
mov
fsubl
ss
shll
add
xchg
pop
fiaddl
loopne
cmp
mov
test
jnp
leave
mov
and
test
dec
push
xchg
out
inc
sbb
test
incb
test
mov
xor
aad
jg
ret
fwait
lock
std
out
ss
enter
enter
stc
movb
inc
into
repz
shrb
push
mov
sbb
movsl
mov
mov
sub
jo
jns
xchg
outsl
in
out
mov
sahf
sub
cmpsl
inc
xor
dec
mov
jge
hlt
test
and
imul
scas
cmpl
or
jo
sbb
jbe
sti
addr16
std
add
test
fistpll
int
or
mov
hlt
fwait
test
in
insl
xor
xor
movsb
mov
xchg
adc
sbb
lret
addr16
shll
pop
das
or
arpl
cltd
stos
loope
xchg
ljmp
dec
mov
aas
fildll
and
mov
xchg
sar
lahf
add
test
jbe
out
aam
and
lods
stc
sti
dec
and
cs
push
jp
sub
or
xchg
and
shr
push
push
loop
pop
pop
leave
xchg
xchg
mov
pop
cmp
sub
jnp
jecxz
adc
xor
clc
dec
add
adc
test
movsb
or
bound
add
mov
ljmp
jle
jno
cmp
mov
inc
cltd
mov
sti
jl
mov
in
push
sub
std
sahf
stc
and
loopne
int
fisttpll
stc
lret
xor
outsb
shrb
in
adc
sti
out
scas
mov
add
push
pop
add
push
aam
lahf
xchg
jno
sub
sbb
jbe
sub
test
dec
iret
jmp
pop
enter
insb
idiv
or
inc
pop
cmp
shl
adc
js
inc
ret
ja
repz
shlb
test
call
lods
lods
mov
inc
je
cltd
inc
pop
test
add
cmc
cmp
je
mov
loop
inc
mov
push
cmp
xor
loop
add
xor
sahf
push
jo
cmp
jbe
lea
inc
or
or
or
icebp
cmp
jl
xor
jge
push
scas
xchg
scas
pop
repnz
mov
pop
scas
jg
lock
push
scas
iret
aas
int3
arpl
mov
jae
or
xchg
or
imul
test
sub
inc
repz
lock
sbb
ljmp
inc
fstpl
call
loope
mov
cmp
arpl
and
inc
call
adc
cmpsl
mov
xor
push
xchg
fiaddl
nop
ss
cmp
jns
cmp
mov
pop
add
lods
lods
mov
into
cmp
repnz
inc
jne
test
mov
ss
sbb
adcb
jnp
shll
loope
negl
xor
popf
icebp
cmpsb
rcl
or
xchg
jae
sub
push
daa
enter
push
add
shlb
scas
stc
xor
cmc
addb
je
imul
pop
shll
sub
test
xor
sbb
std
inc
stos
add
stos
lock
ret
mov
xor
insb
add
inc
jg
jge
jle
pushf
mov
sub
lods
jnp
pop
test
inc
cmc
js
lret
cmp
mov
fwait
mov
xchg
pusha
and
sbb
test
rcll
and
mov
xchg
pop
mov
cwtl
lret
push
inc
int
out
jno
or
xchg
mov
add
xor
sbb
cmpb
jle
xchg
mov
stc
dec
sbb
scas
jbe
pop
jge
iret
or
cmp
dec
insb
les
pop
bound
sbb
fst
filds
jge
add
lahf
mov
sub
stc
inc
stc
ret
mov
sub
ds
cmp
in
jne
cld
sub
jae
xchg
cmc
dec
mov
shll
iret
inc
mov
rol
into
loop
and
jl
sbb
cmp
fcoml
movsb
in
pop
in
icebp
xchg
adc
pop
sbb
jle
out
aam
dec
fs
cs
cmc
dec
movsb
mov
mov
fcomps
jmp
mov
into
lods
mov
movsb
insl
push
cmpl
out
test
aas
sti
xchg
mov
inc
cmpsl
adc
adc
cmp
pop
inc
dec
push
push
test
or
int
ss
push
xor
cli
dec
push
xchg
jae
cs
daa
mov
push
jmp
mov
adc
nop
and
xor
subl
push
popf
adc
inc
sbb
nop
into
add
fimull
mov
dec
enter
dec
movsl
imul
mov
add
sti
stos
jno
test
jnp,pn
sub
jns
cwtl
inc
imul
jecxz
fdivs
adcb
sbbb
cld
stos
sub
adc
addr16
fsubrl
push
sub
jle
xchg
jnp
push
mov
ss
xchg
or
push
dec
sbb
jnp
cmp
out
sbb
cmpl
inc
out
sahf
sub
ljmp
push
loope
sub
ret
dec
arpl
push
into
movsb
gs
xor
xor
adc
mov
and
adc
sub
icebp
jle
ljmp
fdivrl
lahf
add
mov
sbb
jmp
mov
int
hlt
or
arpl
and
popa
cmp
stc
int
mov
scas
imul
ret
lret
call
inc
sbb
pop
push
pop
pop
test
xchg
cmpsb
xor
divb
push
xchg
mov
pushl
push
dec
hlt
mov
scas
push
adc
adc
mov
shll
mulb
jmp
jo
jl
push
mov
stos
push
lds
adc
into
xchg
xlat
mov
sarb
lret
pop
hlt
jge
icebp
aaa
pop
and
lods
mov
dec
daa
scas
xchg
cwtl
loop
mov
movsl
add
hlt
inc
push
sbb
out
clc
mov
arpl
inc
adc
push
mov
xchg
adc
add
in
lods
cmpsb
lahf
pop
les
xchg
jle
cmp
pop
test
adcl
in
movsb
push
mov
call
js
pop
pusha
loopne
fcoms
pop
shl
mov
push
push
xor
lods
pop
pop
stc
std
faddl
jnp
xor
cmp
insb
push
xor
jp
lcall
sbb
fisubrs
mov
das
push
mov
add
mov
pop
or
pop
mov
jmp
jbe
aas
mov
cmc
mov
aaa
mov
mov
out
or
jbe
and
mov
iret
ficompl
cmpsl
bswap
xchg
loop
daa
or
jmp
mov
dec
lods
dec
xchg
add
push
lret
push
lcall
dec
push
movsl
pop
hlt
mov
cmp
add
lcall
sub
mov
xchg
stos
inc
faddl
outsl
cmp
imul
mov
push
repnz
movsb
stc
es
mov
adc
add
xchg
sahf
scas
inc
ljmp
push
loop
mov
rolb
cmp
push
lahf
data16
scas
inc
sahf
jne
sbb
mov
xor
jge
rol
pop
mov
jecxz
bnd
adcl
jg
mov
cmp
cwtl
lods
stc
and
rolb
cmp
adc
hlt
int3
fimull
dec
shrl
movsl
lods
push
push
xor
xorb
jecxz
enter
dec
pushf
lods
sub
sub
rclb
inc
jns
mov
stc
inc
test
rcl
sbb
and
sbb
cmpsl
faddl
movsb
rorl
iret
pop
jb
dec
push
movsb
sub
in
and
push
fsubs
lahf
insl
sbb
sbb
push
mov
mov
mov
pop
dec
bound
pop
or
movsb
xchg
sti
fldl
movsb
inc
mov
or
dec
outsb
adc
ret
aas
sahf
mov
and
je
ret
shrb
cmp
dec
and
sbb
imul
mov
mov
ds
jne
fwait
pop
mov
and
test
cmpb
mov
sti
inc
js
lock
aas
loope
rcrb
insb
sbb
call
sti
fdivrp
sbb
jmp
adc
mov
es
inc
iret
clc
inc
jle
xor
dec
add
mov
es
pop
int
or
jg
mov
lahf
in
sub
sbb
xor
jb
xchg
jecxz
fcoml
loopne
or
jecxz
jge
and
sbb
mov
sub
push
mov
inc
xchg
jbe
cmp
test
daa
add
les
addr16
fwait
sti
mov
lahf
xlat
jg
inc
iret
mov
insl
dec
pop
scas
jg
mov
fdivrs
je
mov
cmp
movsb
outsl
add
pop
addr16
mov
cs
imul
lock
or
cmp
cmpb
sub
cmpsl
fs
jl
mov
divl
notl
mov
jle
and
sti
mov
push
imul
jmp
ret
popa
jb
xchg
aad
adc
xlat
push
cli
inc
push
inc
mov
ds
fsincos
lret
dec
add
xorl
pop
add
ja
int3
pop
imul
fcmovnbe
adc
fdivr
fwait
pop
mov
xchg
jmp
in
xlat
jno
xlat
mov
cmpsl
dec
dec
call
push
xor
inc
int
sub
mov
or
sbb
es
dec
in
shll
into
sbb
ja
or
cltd
jecxz
inc
pusha
imul
popa
pushf
int3
pop
je
test
push
leave
sub
arpl
mov
sbb
lods
push
xchg
jo
frstor
lahf
xchg
lcall
cmp
cltd
xchg
lds
movsl
dec
add
nop
daa
fidivrl
aas
out
daa
and
std
mov
adc
xchg
xor
scas
inc
out
xor
push
xorl
sub
repz
mov
or
loope
cli
mov
out
movsb
pusha
je
adc
push
dec
js
iret
jns
pop
bound
dec
pop
pop
mov
mov
insl
dec
push
out
ja
push
js
mov
mov
dec
mov
mov
inc
and
sbb
aas
mov
jle
mov
outsl
cmpb
mov
add
ds
pop
push
loopne
lods
add
insb
ffreep
add
pop
mov
dec
mov
adc
divl
mov
or
repnz
icebp
mov
insl
push
loope
pop
add
dec
movb
cmp
fsubrp
sti
into
dec
bound
pushf
les
loop
jns
nop
mov
pop
add
ja
pop
xor
movsl
pop
paddq
inc
xlat
sub
and
or
inc
test
inc
and
cmp
lret
mov
and
jecxz
fwait
jle
ds
idivl
mov
rclb
fadds
add
loopne
call
mov
mov
pop
sbb
loope
ljmp
sub
pusha
aad
dec
jne
push
xchg
out
push
daa
mov
add
shlb
lds
push
jb
pop
andb
xchg
jnp
adc
push
stos
loop
rcrl
adc
in
rorl
mulps
dec
xchg
les
aas
insb
lret
shll
stos
xchg
or
jns
fdivp
insl
jl
sbb
cld
test
push
jae
push
add
xchg
pop
add
inc
sbb
inc
stc
or
aaa
aad
clc
clc
push
rorb
dec
mov
pop
inc
test
fisubs
xchg
inc
orb
mov
adc
daa
jno
shrl
xchg
fimull
xchg
inc
out
jo
popa
insb
mov
xor
stc
addl
push
xor
dec
fsubrl
xchg
aad
mov
inc
dec
sbb
std
lods
xchg
sarb
cs
mov
add
stos
xor
jae
daa
andl
add
cmp
xchg
cwtl
jno
scas
sub
iret
div
push
dec
jae
movsl
test
aas
jbe
mov
bound
sbb
cmp
shll
mov
repz
mov
sti
add
iret
cmp
mov
sbb
aaa
xlat
cmp
leave
test
sub
xchg
pop
je
jecxz
pop
sub
ja
ss
push
lods
gs
inc
int
mov
dec
xchg
mov
ret
imul
repnz
out
xchg
dec
fstl
leave
push
xchg
movsb
ja
scas
mov
pop
out
scas
into
add
mulb
fsubr
out
jns
out
or
loopne
lods
pop
push
cmpb
push
cmc
data16
int
cmp
lret
lods
mov
xchg
icebp
mov
pop
sbb
ret
out
sub
lret
jmp
inc
pop
and
mov
mov
cmp
or
iret
test
call
mov
pop
push
sbb
roll
insb
mov
and
push
cmp
shl
popf
sar
frstpm(287
pop
iret
jb
and
mov
sahf
aas
jae
popw
dec
xchg
mov
es
adc
xor
mov
es
jecxz
dec
add
cmp
or
dec
nop
pop
push
mov
adc
fstl
jg
aad
inc
add
lcall
das
or
push
pop
push
lcall
sbb
and
subb
mov
fs
pop
add
sar
cmp
stc
xor
dec
stos
and
test
xor
int
shlb
test
adc
push
jb
mov
sbb
pop
xlat
jne
add
xchg
repnz
pop
cli
stos
dec
inc
mov
pop
sar
xor
ss
pop
and
lock
mov
pop
std
out
loopne
pop
or
leave
inc
hlt
mov
jnp
in
inc
ljmp
jle
aas
faddl
leave
jb
add
imulw
fwait
stc
popf
nop
xlat
roll
and
lods
xchg
addb
mov
mov
push
repz
out
jp
std
dec
loopne
jl
mov
cmp
shr
cmp
scas
cmp
das
shrl
in
push
jg
lcall
cmp
add
fmuls
pusha
add
test
dec
push
iret
pop
or
ljmp
roll
sbb
push
iret
sar
mov
mov
pop
mov
hlt
adc
xchg
or
lret
cmpl
loope
ljmp
jle
xchg
mov
or
jns
inc
jns
in
adc
mov
and
pushf
in
adc
lahf
insl
fadds
cmp
sahf
jge
call
jnp
sbb
xor
cmpsb
ds
loope
adc
xchg
sbb
mov
push
call
pop
shll
cld
pop
jbe
in
fldenv
jo
gs
xchg
aam
ret
bound
pop
xchg
and
xor
pop
pop
in
xor
pop
into
inc
sbb
clc
and
pop
push
mov
mov
or
mov
mov
in
or
test
pop
shl
rcrb
pop
mov
mov
dec
insb
or
xchg
adc
enter
lahf
lea
and
and
fdivrs
push
push
in
cli
insb
js
or
adc
fdivs
mov
jecxz
rcl
out
and
jne
gs
imul
adc
pop
test
jle
jo
pop
shll
jne
subl
sub
in
cs
in
push
xor
imul
int3
cmpsl
leave
xchg
into
js
sub
imul
movsb
lds
sub
add
out
push
sub
sar
dec
sub
cmpsb
pop
mov
sahf
inc
mov
iret
insl
cmp
out
inc
xchg
and
cltd
or
add
cmpsl
mov
mov
testl
js
inc
aad
insl
lods
js
jle
dec
cmp
scas
test
scas
aam
in
mov
std
adc
pop
sub
sarl
lods
lahf
test
loope
out
subl
lods
add
ljmp
in
bound
out
sub
ret
dec
inc
inc
test
jae
shrl
inc
dec
aaa
ret
sbb
fidivs
out
dec
pop
and
pop
dec
divb
xor
cmp
popf
orl
loop
repz
dec
push
iret
out
jecxz
test
lods
xor
inc
ljmp
mov
push
jne
mull
les
aas
mov
mov
out
add
vpaddw
stc
inc
mov
push
and
cmpsb
mov
fstps
mov
cs
int3
xor
xor
xchg
shll
add
sbbb
in
xchg
scas
jle
std
pop
lcall
insl
decb
add
fwait
or
and
out
hlt
pop
int3
mov
adc
loopne
dec
aaa
jecxz
out
jmp
mov
sbb
lods
pusha
mov
xchg
mov
es
std
cwtl
dec
cmp
pop
in
pushf
aas
lea
addr16
jb
jg
pushf
pop
jl
testb
gs
or
cmp
ret
repnz
or
cld
rcll
adc
lods
and
and
mov
mov
mov
nop
push
shl
jge
stos
jns
sub
and
push
and
jge
inc
aam
fs
lea
jno
aas
cmp
enter
mov
out
pusha
sub
data16
mov
or
jo
jle
or
int3
ret
mov
jne
mov
pop
sbb
in
mov
mov
sbb
addr16
daa
js
cmp
push
xor
lahf
ret
xchg
mov
sub
cmp
lcall
add
mov
dec
jbe
orb
pop
xchg
cmp
pop
stc
ljmp
jecxz
out
and
in
jne
mov
push
dec
pushf
mov
out
out
test
mov
mov
jle
mov
stc
or
xlat
outsl
aam
push
and
pop
into
mov
aam
out
push
mov
cmp
jl
add
xchg
insb
mov
call
out
std
sbb
or
mov
xchg
inc
mov
movsb
movsl
add
xchg
dec
adc
inc
jo
pop
cld
clc
hlt
loop
andb
xor
pop
and
dec
or
clc
mov
mov
adc
inc
xchg
test
fdivl
scas
sbb
setp
outsb
xchg
mov
bound
push
cmp
ss
push
dec
dec
bound
sub
inc
cmp
mov
es
xor
adc
sub
mov
es
lods
or
xor
ss
dec
jnp
ljmp
rol
movsb
inc
jae
cmp
adc
sbb
testb
out
in
aad
mov
or
sbb
cltd
pop
out
jl
xor
and
adc
add
jge
cmp
inc
pop
pusha
mov
lock
pop
add
cmp
inc
sub
js
sarl
jo
sub
cmp
aad
inc
mov
xor
sub
xchg
imul
xor
push
fwait
inc
fs
add
fnstenv
mov
mov
loopne
rcl
sarl
das
lea
mov
std
into
sarl
and
in
jno
pushf
and
test
xchg
addr16
and
lea
push
xchg
sbb
test
jbe
jp
sub
in
cwtl
xchg
mov
mov
sub
mov
stc
int3
dec
jge
lods
pop
je
popf
mov
xchg
out
pop
adc
clc
rcrl
jmp
lret
andl
pop
data16
cmp
data16
fldt
insl
push
aas
stos
aas
sbb
xchg
mov
push
jg
adc
jmp
lds
or
sbb
in
shll
or
or
jmp
popf
mov
inc
mov
jmp
sbb
int
mov
fwait
cld
dec
cmc
push
repnz
divb
stos
inc
jl
or
cmpsb
addr16
sbb
loopnew
lods
pushl
mov
andb
push
xlat
add
mov
mov
push
test
mov
iret
xorl
xchg
cmpsl
idivb
mov
mov
lock
mov
decb
arpl
pop
push
mov
or
lret
add
xor
lahf
jge
fstp
mov
pop
and
adc
push
mov
and
lea
dec
movsb
repz
rorl
xor
mov
and
in
popf
fwait
push
sub
daa
rolb
adc
sub
xchg
mov
mov
mov
inc
rorl
sub
mov
xor
inc
mov
pop
push
push
call
mov
jmp
push
out
mov
popf
pop
movsl
mov
push
in
or
mov
fisubrs
push
inc
mov
dec
int3
test
push
xchg
pop
mov
xlat
sbb
lret
clc
cmp
xor
int
jmp
imul
add
cmc
scas
push
push
adc
fldenv
popl
adc
movsl
int
and
andl
push
sbb
stc
add
jecxz
repnz
dec
xchg
call
cmp
insb
sbb
push
inc
ds
adc
add
cmpsb
cmp
and
push
cmp
push
cmpb
sub
pusha
mov
insl
push
push
movsb
fucom
sub
lock
dec
mov
ret
adc
icebp
pop
loope
xor
sub
xor
cld
cs
push
in
jbe
clc
sbb
sti
jmp
leave
sti
inc
add
fists
dec
push
jbe
sahf
das
xor
pop
iret
movsb
rolb
fwait
mov
dec
inc
mov
dec
in
test
cmc
jge
or
push
idivb
popa
int3
pop
lcall
repz
int
scas
xchg
pop
jle
and
pop
in
js
inc
sub
sbb
jno
scas
pop
push
adc
pop
outsl
xor
xor
fwait
push
in
outsl
in
call
xchg
and
push
sbb
mov
and
jns
mov
jl
sti
repz
sti
popa
xor
mov
dec
pusha
pushl
outsl
or
movsl
int
add
addr16
test
push
test
sub
inc
aad
cmp
loop
stos
push
xlat
sbb
push
ljmp
ja
into
inc
ret
jae
push
andl
jge
sbb
mov
lahf
sbb
lret
nop
jae
xor
pop
lds
fadds
cmpsb
insb
cmp
dec
or
iret
cltd
lea
out
mov
movsl
les
loop
pop
outsb
fidivl
inc
mov
mov
hlt
dec
mov
and
lds
scas
push
adc
nop
mov
cmc
xorb
sub
rcl
dec
imul
push
mov
dec
pop
cld
push
inc
mov
mov
idivl
mov
xchg
sub
lahf
sbb
test
mov
or
clc
cmpsb
int
sti
lock
rorb
push
insb
xchg
pop
insb
and
aas
scas
das
popf
sub
mov
test
push
in
mov
icebp
arpl
pop
pop
jno
xor
cmp
jp
nop
mov
add
mov
jg
jle
mov
bound
outsl
add
loope
push
rorl
or
outsl
xchg
std
xor
test
pusha
jge
jo
inc
cmovno
xorb
or
cmc
mov
dec
mov
inc
and
mov
std
out
gs
cmp
jno
imul
and
mov
aas
stos
rep
mov
pop
mov
pushf
cmp
and
and
fdiv
dec
std
int
leave
cs
aam
not
mov
sub
lock
insb
shrl
pop
enter
mov
test
and
cmp
imul
popa
jp
jmp
div
mov
enter
dec
fildll
sub
ds
pop
std
sub
outsl
loopne
out
mov
or
rcrl
xchg
in
adc
das
inc
sub
fwait
lret
or
pop
sub
aas
pusha
xchg
xor
xchg
shl
inc
call
fs
pusha
xlat
rolb
cmp
addr16
cmp
adc
pop
sbb
xchg
push
push
pop
jecxz
ss
roll
cmpsl
mov
cmp
add
daa
push
pop
int3
in
stc
arpl
lds
jmp
hlt
pop
cmp
imul
movsl
inc
sahf
popa
ror
inc
roll
jle
jbe
lods
pop
and
jecxz
pop
inc
loop
xchg
push
sbb
int3
stc
ja
dec
loop
mov
ret
xlat
push
int3
push
lock
out
decb
icebp
cmp
jnp
xorl
fwait
or
lea
in
iret
ljmp
xlat
cmp
add
jns
test
or
and
push
popf
sbb
das
ja
popf
fwait
je
xor
xchg
out
es
xor
je
js
sub
pusha
cli
xor
pop
enter
mov
into
push
inc
sub
sub
cmpsl
in
popf
xlat
shrl
out
call
sub
and
insl
xchg
jo
rol
mov
jecxz
leave
push
daa
es
pop
mov
lcall
jb
loopne
xor
int3
jge
frstor
jae
mov
lcall
sub
cmpb
addb
pop
pop
in
insb
mov
sub
in
rorb
shll
jmp
pop
lods
add
xchg
pusha
stc
into
packssdw
out
pop
scas
pop
add
in
aaa
mov
jecxz,pn
mov
mov
lar
rolb
imull
nop
in
hlt
and
pop
stc
add
mov
sbb
inc
aad
inc
leave
sbb
mov
scas
or
pop
cmpsb
aam
ds
lods
rorl
ficoms
xchg
xlat
adc
mov
divb
rolb
movsl
push
mov
dec
test
xchg
jo
fmul
and
mov
stos
add
jno
outsl
jg
jbe
cmpsb
add
pusha
xchg
mov
mov
xchg
repz
mov
sbb
lea
cli
xor
cmpsl
push
jp
ja
pop
push
sbb
sbb
repz
loop
mov
inc
je
pop
cmpl
int3
cmp
pop
lds
enter
or
fxch
shlb
and
add
movsl
in
ss
jmp
jle
paddw
addl
loop
jne
lods
int
xchg
sbb
pop
daa
xor
jae
push
imul
repz
gs
inc
clc
call
add
fidivl
dec
lcall
sbb
movsb
lods
rcll
cmp
sub
pusha
jno
icebp
pop
fisttps
movsb
mov
cmp
mov
fdivl
movsl
sahf
dec
adc
rol
insl
pop
dec
pop
pop
jmp
mov
mov
enter
sti
lods
pop
push
std
subb
pop
mov
cmp
movsl
stos
dec
lcall
cs
sub
mov
cltd
sub
inc
adc
daa
clc
fidivrl
in
mov
xchg
out
lret
int
add
dec
sbb
push
sbb
lods
mov
stos
adc
daa
pop
les
je
jl
mov
mov
push
add
shlb
jge
cmpb
xchg
test
leave
fnsave
or
leave
shrb
sbb
xor
and
pop
cmpsb
inc
fdivrl
cld
xor
enter
xchg
mov
or
jge
xchg
jmp
testl
mov
js
lahf
push
daa
test
inc
adc
sbb
icebp
mov
inc
mov
cmp
sub
dec
mov
lods
dec
add
sbb
scas
xor
clc
sbbl
jno
test
ret
mov
and
iret
xor
jge
out
adc
add
outsl
movl
je
adc
jns
and
lock
lcall
dec
cmc
loop
in
fstl
shll
mov
pop
mov
push
xor
imull
in
stos
fildl
test
or
cmpsl
sahf
xchg
sbb
and
pop
xchg
lcall
pop
into
adc
xchg
jl
mov
xor
shrl
enter
loope
mov
repnz
jmp
pushf
push
shl
loop
xor
movsl
fisttpll
mov
pop
stos
dec
adc
leave
push
add
or
popa
mov
mov
popa
xor
insl
data16
test
add
inc
popf
jno
adc
dec
repz
iret
fmul
sub
lock
iret
sbb
jne
xor
test
push
xor
repnz
movb
aas
xor
out
pop
jnp
adc
subb
lahf
xor
test
mov
add
pop
jge
push
sbb
adc
jmp
loop
outsb
xchg
popf
movsb
or
cwtl
xor
adc
adc
dec
and
dec
and
lock
mov
push
sub
es
shrb
shrl
daa
mov
jg
sbb
ret
fdivl
xchg
stos
jne
jle
jp
cld
ljmp
test
inc
data16
lods
inc
and
xor
push
fnstenv
loopne
and
inc
aad
xor
insb
outsb
into
rcr
mov
or
ret
stos
popf
mov
xchg
fstpl
aaa
and
aas
imul
iret
push
lods
int
div
aam
sbb
xchg
inc
test
shl
std
insb
adc
jge
aaa
xchg
cli
cmp
loop
shll
rcr
push
in
out
jmp
push
add
test
or
adc
es
lods
xor
push
jp
pop
repz
popl
insl
jo
int
repz
lea
jno
in
orl
movsb
mov
sbb
xchg
push
pop
movsb
aaa
sbb
push
addb
xchg
rcl
dec
sub
es
addb
mov
push
xchg
fdivl
fdivrs
test
lds
in
mov
adc
cmc
clc
push
jle
aad
xor
ficomps
shl
out
cld
push
sbb
pop
cmp
rolb
dec
lock
fwait
sbb
mov
mov
les
cmp
xor
popa
aad
xor
movb
aaa
mov
cmp
cwtl
xor
into
aaa
mov
in
je
pop
bound
rclb
or
ret
dec
fs
lock
or
xchg
jo
jb
insl
mov
stc
add
add
int3
mov
cmp
pop
sub
loope
daa
lods
pop
dec
lock
push
vmovntps
cmpl
xchg
lahf
outsb
shl
mov
sbb
jp
imul
sub
aas
push
pop
sahf
inc
sbb
mov
mov
stc
aaa
and
cmc
lds
popf
mov
mov
fbstp
xchg
and
push
push
add
sbb
jl
mov
inc
mov
jnp
mov
notl
cmpsl
sub
ds
inc
sbbl
mov
mov
je
mov
push
push
mov
sbb
rcr
ja
xchg
adcl
iret
ja
and
lret
inc
pushf
inc
add
fsubrl
mov
push
sbb
cld
in
dec
ja
lea
pop
inc
push
or
cs
cltd
sub
in
adc
sub
pusha
sub
addr16
stos
sbb
je
cmpb
xchg
les
cld
pop
out
mov
mov
cmpl
or
pop
mov
mov
ss
enter
inc
push
push
rorb
sub
in
xchg
es
loopne
test
cmc
or
pop
sahf
jns
pop
and
jnp
ds
pop
jo
pop
lock
enter
push
stos
dec
pop
loop
push
xor
pop
push
ret
cmpsb
out
out
sub
or
adc
popf
jbe
and
aas
nop
push
mov
pop
ret
adc
or
jo
pop
cmc
test
sub
loope
fisubrs
sbb
sub
mov
mov
xor
fsubr
jae
lods
jno
sbb
pop
push
mov
repz
push
lock
pop
repz
sbb
mov
dec
pusha
out
mov
adc
ret
cmpsb
jne
cld
aad
sbbb
jecxz
fmull
jecxz
mov
pop
sub
outsb
stos
mov
fidivrs
xlat
jp
ret
bound
test
scas
add
sub
lds
call
stc
shlb
xchg
push
and
mov
cli
sbbb
jecxz
sti
pop
outsl
stos
bound
pushf
or
xchg
inc
stc
xlat
push
mov
xor
dec
sub
scas
cld
std
adc
aaa
movsb
pop
or
pmaxsw
jg
push
inc
inc
cld
shl
jg
enter
jle
icebp
mov
xchg
mov
mov
cltd
mov
jno
jge
or
xchg
inc
popf
jne
sub
fwait
mov
jnp
xor
seto
sub
cmp
icebp
std
mov
or
sti
aam
enter
fists
mov
xor
or
cmc
scas
fwait
jp
and
lods
push
xchg
dec
cmp
aam
xchg
cmp
jnp
fnsave
repz
int
push
inc
xchg
mov
test
pop
sbb
enter
jne
leave
cmp
and
mov
add
and
jae
repnz
gs
inc
inc
mov
jle
pop
xor
lret
jmp
cmp
xorl
xor
lcall
cmp
and
mov
cmp
jge
push
adc
push
cmp
aad
outsl
cmp
mov
movsl
out
pushf
call
jns
int
loop
rcl
aaa
into
jmp
out
sbb
and
push
imul
scas
jecxz
jno
cmp
xchg
dec
and
sarl
push
pushl
xor
mov
fidivrl
lods
lock
mov
int
lods
mov
out
pop
testl
push
fwait
adc
aas
xchg
push
pop
les
mov
and
mov
xor
push
cwtl
outsb
data16
jb
fxch
or
adc
out
leave
or
pushf
lcall
xchg
stos
dec
lock
sbb
jmp
xchg
dec
cmpb
or
into
jb
pop
cld
das
loope
inc
js
sarl
xor
imul
rolb
mov
adc
out
adc
negb
adc
adc
arpl
popa
cmp
xor
andb
xchg
sbb
sbb
xor
call
out
cmc
push
clc
pushf
leave
sbb
xchg
adc
or
pop
adc
lret
lahf
in
aad
fwait
bound
jl
outsb
out
cs
and
bndldx
cmpsb
scas
lahf
loope
std
inc
mov
inc
sbbb
mov
call
fcmove
outsl
ljmp
lret
push
xor
pop
jp
dec
xchg
push
and
sub
in
jg
aas
xor
and
lods
call
dec
sbb
xchg
mov
int
mov
mov
scas
pop
lods
xor
pop
or
jne
pop
cld
sbb
test
stos
xchg
pushl
cs
cmc
into
in
or
nop
jecxz
loopne
shl
mov
test
push
xchg
lods
push
sbb
in
not
ja
xchg
insl
roll
jg
xchg
fdivrs
test
xchg
imul
cmpsl
push
xor
faddp
int3
xor
mov
aad
scas
loop
leave
sarl
dec
lahf
nop
cmp
popf
orl
into
cmp
outsl
pop
das
scas
ficompl
jle
jmp
stos
mov
stc
lock
mov
leave
mov
loope
mov
adc
push
pop
fs
add
fistps
incb
push
adc
movsl
xor
inc
test
push
out
ljmp
push
js
inc
ljmp
dec
jp
in
jb
mov
cs
sarl
cmp
push
fstps
xchg
mov
jecxz
les
in
lods
lcall
add
xor
fidivl
add
push
cvtpi2ps
add
sbb
cmp
xchg
popf
orb
pop
add
sbb
ds
inc
insb
xor
ret
ret
push
sbb
and
popa
rcll
movsl
imulb
and
push
sub
or
lahf
mov
jg
sub
test
dec
movsl
sub
add
xor
out
mov
mov
in
test
ret
stos
mov
lahf
cmpsl
std
xor
adc
div
icebp
test
data16
xchg
jge
ror
sbb
adc
in
loope
lret
inc
cmp
aad
or
pop
push
aad
pusha
roll
jle
add
shll
pop
rorb
mov
push
cmp
cmpsl
inc
xor
xchg
xor
out
insl
cmc
push
cltd
ficoml
sbb
loope
sbb
dec
setae
adc
sub
fadd
inc
arpl
out
aad
xorl
lods
fmul
xor
or
jo
dec
cmp
add
bt
test
inc
xchg
or
cmp
mov
lret
enter
sub
rclb
pop
pop
dec
mov
stc
lods
dec
sbb
xor
sbb
xor
insl
call
pop
and
addr16
cmp
loop
inc
jl
in
and
int
pop
mov
dec
add
push
int3
int
fucom
pop
mov
jl
popf
xlat
jae
dec
lock
imul
lds
leave
xor
popa
test
xor
pop
and
pop
pop
test
adc
ds
pop
test
bound
or
xchg
int
mov
sbb
mov
xchg
ljmp
mov
fnsave
xorl
adc
cmpsl
adc
or
push
mov
dec
into
aam
and
inc
xchg
mov
imul
mov
pop
sbb
xchg
xchg
xor
adc
jge
pushf
repnz
lods
xchg
xor
jae
daa
mov
out
loope
cmp
cltd
add
loop
in
popf
lods
cmc
adc
movsl
out
xor
loop
mov
cmp
xchg
out
or
mov
xor
ds
push
pop
ret
fptan
push
mov
ret
fcmovu
nop
loopne
test
mov
js
mov
add
mov
xchg
mov
jb
or
sbbb
xchg
je
stos
xor
inc
testb
imul
sub
inc
mov
es
inc
mov
sub
mov
sbbl
cmp
dec
pop
mov
loop
mov
rcrl
fistl
xchg
sarl
cmp
inc
sub
mov
cmpsl
ret
jno
das
adc
lods
mov
jmp
sbb
rcr
add
jns
jnp
mov
xorb
sub
and
dec
bnd
add
sbb
scas
push
rcrl
adc
neg
mov
outsb
pop
add
or
into
call
pop
xlat
loop
jecxz
arpl
sbbl
aaa
jg
dec
in
xchg
jge
repz
cmc
dec
or
arpl
sbb
cli
pop
std
mov
add
popa
shrl
addr16
xor
ror
mov
jo
clc
int3
push
cmpsb
fistpl
arpl
divl
pop
inc
fists
mov
roll
fsubp
lods
movsb
iret
or
in
mov
pcmpeqd
sub
sub
adc
outsb
loope
xchg
mov
adc
sbb
fcomi
stos
and
pop
sbb
pop
xor
sub
jl
icebp
jae
sub
adc
arpl
ljmp
jns
adc
lret
mov
je,pt
jnp
add
or
and
pop
loop
mov
push
add
or
ret
arpl
out
fcomps
inc
xor
cli
xchg
iret
sub
and
aad
mov
adc
cmp
popf
dec
push
test
or
int
outsb
lods
repnz
push
shrb
lds
out
cmc
sbb
or
aad
popa
cli
sub
rolb
dec
les
imul
lods
cmp
cmc
sub
es
push
sub
xchg
repnz
mov
add
inc
or
out
test
push
pop
dec
jb
add
fldcw
dec
fnstenv
mov
jno
stos
mul
and
in
or
sbb
fadd
cmpsl
mov
loope
nop
clc
insl
xchg
and
icebp
xor
ffreep
jmp
fldt
cmp
js
jns
fisttpll
jl
add
into
lret
cmc
cmp
pusha
sub
pop
mov
ja
outsl
lock
mov
out
sub
into
jo
add
jne
inc
les
jecxz
push
inc
cmc
mov
hlt
adc
mov
sbb
xchg
cli
fwait
enter
adc
dec
push
dec
xchg
test
or
add
push
iret
add
jmp
dec
in
cmp
xor
ja
pop
or
sbb
jle
mov
scas
cltd
inc
push
push
jmp
fsubrs
lret
in
js
push
dec
lock
les
cmpb
cltd
xor
mov
pop
je
es
test
test
popaw
ret
popf
sahf
sbb
dec
aaa
addr16
add
push
fwait
mov
mov
test
aad
into
bound
xchg
push
rcl
adc
test
pop
sbb
sub
push
sti
adc
aam
int3
out
adc
pop
dec
mov
lret
fwait
movsl
mov
divb
pop
fcmovbe
call
enter
fisubrs
mov
scas
inc
jbe
or
call
scas
leave
xchg
aaa
scas
pop
pop
push
mov
or
lret
orl
ret
push
flds
or
aam
hlt
sar
fidivrs
mov
ds
pop
push
and
add
xchg
rorb
adc
cmp
scas
repz
fildll
imul
push
mov
inc
cmp
inc
in
jno
ds
inc
cli
mov
push
addr16
push
mov
std
ja
sahf
cmp
loopne
stc
fnstenv
mov
xchg
push
test
mov
xlat
sbb
mov
xor
js
xchg
leave
out
dec
in
mov
rcr
in
sbb
movsb
sub
xchg
mov
jbe
adc
xor
jae
jb
les
fimull
mov
out
vpcmpeqw
mov
movsl
xor
inc
scas
xor
xchg
dec
xchg
jo,pn
pop
or
cli
fldenv
int3
or
sbb
imul
nop
js
cmp
out
int3
lret
fs
and
xor
rcr
jb
jae
arpl
pop
jecxz
mov
scas
rcll
add
cmc
imul
lret
ss
adc
data16
lock
fdivl
hlt
push
shl
add
sar
mov
psllw
mov
mov
cmpsl
fmull
ss
and
push
sub
jbe
mov
fwait
jmp
scas
inc
aas
push
jns
lcall
jnp
std
aaa
repnz
ljmp
pop
mov
mov
mov
ja
loop
imul
outsl
cmpsb
aam
hlt
mov
xor
int3
mov
fcoml
clc
inc
mov
xorb
fisubrs
add
jb
dec
jp
lods
dec
sbb
fdiv
testb
ja
imul
lcall
pop
cmpsb
pop
mov
jns
dec
push
out
arpl
out
mov
and
sub
adcb
decl
xorb
in
inc
jae
scas
in
mov
pusha
push
pop
cwtl
loope
out
lahf
inc
inc
dec
cltd
int3
push
or
test
sahf
inc
int3
xlat
and
pop
or
xor
inc
loop
imul
icebp
cmp
stos
xchg
cmpb
add
jo
fsubr
aam
rcr
xchg
or
stos
jno
jp
pop
xchg
ds
loop
and
mov
push
jge
xor
sub
aad
jp
xor
mov
jnp
adc
dec
fisubrl
ss
int3
add
test
mov
sub
lret
scas
push
xchg
test
outsb
add
in
ja
adc
mulb
inc
add
mov
repnz
and
jno
sub
and
jbe
push
push
mov
fucomip
push
fcmovnu
scas
fimuls
or
imul
jns
cmp
lcall
pop
mov
or
in
fwait
adc
loopne
movsl
push
mov
imul
ljmp
lcall
sbb
sub
mulb
lret
lahf
xchg
adc
mov
ret
in
jnp
and
sbb
sub
or
xchg
dec
das
pop
lods
mov
mov
xlat
roll
dec
dec
jle
mov
movsb
pop
dec
jbe
dec
push
push
cmp
sub
sarl
arpl
pop
cmp
int
in
scas
xor
outsl
icebp
cmp
push
push
xchg
test
rclb
push
ljmp
das
cld
push
add
jecxz
dec
push
ficompl
psllw
jb
jp
lcall
repnz
rol
adc
pop
pop
sub
in
aaa
int3
mov
xchg
dec
outsl
inc
lret
fwait
inc
pushf
inc
push
testb
lcall
push
pop
push
dec
cmp
sbb
outsl
cmp
int
ss
dec
arpl
jae
sbb
sub
adc
mov
fists
decl
enter
lds
testb
add
and
les
pop
xchg
pop
mov
mov
or
xor
daa
insl
test
or
pop
jo
jae
add
call
pop
jmp
pop
in
rclb
dec
pop
push
aaa
xor
clc
cli
push
add
aad
loope
jo
scas
mov
sbb
imul
test
mov
mov
sub
xor
push
mov
mov
mov
in
mov
in
push
cmpsb
cmc
js
mov
push
je
hlt
scas
mov
subl
fmull
pop
sahf
fs
sahf
in
adc
sub
std
jecxz
xor
cmp
imul
fildl
xor
xchg
mov
dec
lea
icebp
pushf
jl
and
scas
je
cmp
push
lahf
jle
sahf
adc
rcrl
inc
xchg
xchg
and
jb
mov
mov
push
cli
or
pop
jp
rcrl
sub
xor
pop
pop
js
push
jge
ss
mov
jnp
mov
subb
inc
sub
sbb
stos
sti
pop
xor
sbb
notb
and
ffreep
adc
insb
jge
push
cmpsl
in
lods
push
dec
jp
xchg
sbb
movsb
repz
cmp
adc
cld
cltd
sahf
adcb
push
mov
push
add
mov
push
lret
adc
adc
xor
adc
test
orb
lds
ljmp
inc
sub
and
mov
push
int
iret
add
loopne
pushf
iret
out
add
insb
add
cltd
call
in
lea
imul
pushl
idivl
mov
fdivs
push
out
push
xchg
push
test
cmp
fnstcw
loop
test
pop
or
sarb
push
dec
mov
sbb
lahf
sbb
inc
or
lcall
add
popf
loop
rcl
mov
jmp
cltd
mov
daa
popf
xorb
or
fs
ficompl
mov
cltd
sub
xor
mov
add
testl
mov
in
jne
jmp
inc
mov
loop
mov
mov
push
jne
mov
leave
pop
sbb
push
iret
push
jg
pop
cld
mov
or
or
jmp
inc
and
mov
vpcmpeqw
movsb
fadd
fnsave
xor
mov
clc
rclb
js
pop
and
and
inc
and
loop
lods
cmpsb
mov
pop
push
cmp
dec
leave
cmp
lds
bnd
push
mov
pslld
mov
cmpl
adc
or
ficoms
xor
sbb
dec
hlt
sub
pop
add
adc
mov
jb
push
lods
sbb
xchg
fisubrs
js
sti
sbb
cmp
mov
adc
popa
daa
pop
movsb
addr16
mov
lock
pop
sarb
jae
dec
xchg
dec
scas
rcrl
add
shll
mov
aam
mov
adc
outsb
ret
cmp
xchg
cmp
sbb
dec
xor
xchg
gs
into
popa
lret
push
clc
out
outsb
push
mov
scas
xchg
jbe
mov
add
adc
mov
xorl
fistpl
mov
dec
cmc
jb
lcall
xchg
les
mov
add
jne
xchg
adc
push
rcl
add
pop
dec
adc
mov
fisubrs
cmc
dec
aas
cmc
pop
xchg
ljmp
cmp
lods
push
lret
jle
rclb
rorl
push
mov
cmp
dec
icebp
dec
daa
mov
cmp
insl
popf
in
xorl
sbb
scas
dec
or
cmp
jmp
xchg
mov
cmpsb
jo
cmpsl
or
mov
insl
shll
cli
push
daa
bound
dec
and
outsl
push
xchg
mov
fiadds
and
xor
and
aas
inc
cmpsb
mov
hlt
fildl
es
mov
push
inc
pop
mov
cwtl
xor
cld
je
roll
out
stos
es
push
sub
shlb
ret
fs
or
test
repnz
jbe
pop
das
push
xchg
cli
add
fwait
loop
mov
hlt
cmp
pushf
cmp
stos
sar
xchg
adc
arpl
xchg
cli
inc
jecxz
out
scas
mov
fstl
sahf
and
outsl
adc
iret
popf
and
xchg
jmp
xor
leave
jae
dec
lods
sbb
jecxz
cmp
mov
or
mulb
or
xchg
dec
test
mov
and
mov
cli
add
pop
or
add
pop
jl
mov
xor
pop
push
sub
lahf
out
inc
ret
loope
sarl
pop
arpl
lods
fnsave
inc
pop
adc
and
pop
jl
pop
mov
pop
or
outsl
stos
adc
fstpl
xchg
nop
movb
lods
popf
mov
push
xor
xlat
xchg
pop
into
inc
cs
sub
xor
nop
pop
mov
mov
sbb
mov
push
jp
lock
mul
sbb
loop
ja
andl
cmp
sahf
mov
in
or
insb
xor
clc
imul
push
and
sbb
jecxz
sbb
ret
jne
fistps
stos
sub
rorb
xchg
sub
insl
xorl
repz
mov
mov
jae
leave
into
jo
add
idivb
movsl
mov
les
movsl
into
dec
bound
sbb
xchg
fsubs
cmc
out
mov
add
ret
jmp
iret
test
pop
ret
dec
sub
xchg
mov
xchg
cmp
lcall
dec
pusha
push
addb
mov
push
xchg
jl
add
stos
jle
jb
dec
sbb
inc
cmp
clc
lcall
addr16
iret
sub
fcmovbe
adc
inc
mov
pop
sbb
lock
int
das
xor
dec
xor
int
popw
and
lock
out
adc
loopne
int3
xor
cmp
call
xor
loop
cmpb
mov
aad
sbb
adc
xchg
lret
push
jno
js
rcl
in
or
adc
fcmovnu
lret
addr16
sub
mov
inc
push
xchg
push
hlt
mov
movsb
lret
movsl
push
icebp
subb
jmp
push
fisubl
jmp
sbbl
outsl
jl
jecxz
pop
cmpsl
fldenv
mov
insl
xor
movsb
and
insl
xor
repnz
add
roll
mov
or
das
push
sub
fs
cld
sub
sahf
push
and
inc
jne
jmp
lods
mov
stos
add
push
addb
pop
mov
std
jns
clc
andb
dec
movsl
sbb
and
out
push
and
fiadds
sbbb
pop
in
loop
mov
mov
mov
adc
cmc
test
or
repz
aad
xchg
je
stc
pop
cmp
xchg
dec
call
lahf
loopne
test
leave
test
jns
xchg
sbb
or
orl
shll
pop
add
or
mov
es
cmp
and
fsubrl
iret
iret
enter
rolb
testb
lahf
testl
sbb
out
push
loope
cmp
add
shll
incl
in
lods
ss
push
and
loop
cmpl
mov
and
lods
inc
ss
rclb
in
aad
jge
dec
stos
jns
add
mov
mov
push
ret
mov
xchg
in
pushf
cmc
push
mov
loope
std
and
sbb
popa
xchg
sub
cmp
or
mov
imul
enter
outsb
xor
ljmp
js
or
or
sarb
xlat
push
fiaddl
out
push
iret
test
shl
rclb
inc
jo
nop
jge
repnz
in
aad
stos
lahf
call
and
xor
leave
ret
dec
loope
adc
xor
pop
outsb
les
mov
popf
mov
aas
sarb
jle
aas
inc
push
dec
bound
adc
dec
mov
or
fcompl
in
and
and
ds
leave
dec
pop
xor
jmp
push
adc
ffree
mov
inc
lds
lret
jmp
push
add
pop
dec
jb
loopne
or
jns
push
ret
cmp
pushf
ret
lock
lods
subb
sub
and
fldcw
inc
sbb
repz
mov
cmpsl
cli
push
pop
push
pop
in
lea
lret
fs
scas
sub
sbb
xchg
xor
es
xchg
adc
mov
stc
rcl
mov
xor
pop
and
and
mov
call
pop
lods
test
push
or
push
and
repnz
cmpb
dec
in
pop
outsl
pushf
xor
lock
jecxz
rclb
or
es
add
or
push
mov
pop
pop
sbb
icebp
repnz
aaa
cld
mov
loop
adc
mov
outsb
xor
push
cmp
lods
push
and
sbbb
aas
shl
jb
pop
mov
mov
in
stos
or
mov
shll
clc
jb
pop
push
mov
xor
mov
fdivl
mov
and
out
and
sbb
mov
std
jb
in
sbb
iret
lea
pop
mov
pushf
jo
or
push
leave
sub
and
and
cmpsl
aad
and
jl
lods
pop
push
xor
jnp
cmp
push
xor
push
mov
aam
pop
mov
dec
out
mov
dec
iret
cmp
ljmp
pop
inc
pop
xchg
aad
jmp
into
rcrb
sub
outsl
test
fucomi
aaa
cs
ret
push
push
xor
enter
sub
pop
xor
fisubs
clc
mov
pushf
cmc
lret
jo
out
mov
shrl
and
mov
and
dec
iret
enter
xchg
addr16
jnp
adc
in
icebp
mov
lock
bound
mov
push
cs
cltd
insl
fdivrs
cmpsl
out
outsl
push
out
in
std
mov
ds
adc
adc
pop
push
jo
add
cld
int3
xchg
aad
mov
mov
fisubrl
int3
mov
mov
insb
or
leave
fisttpl
jg
arpl
mov
daa
xor
or
stos
mov
leave
fstps
stc
in
lock
test
daa
push
or
push
jl
insl
fnsave
adc
dec
inc
clc
int3
mov
xor
dec
aam
imul
sti
push
jae
dec
pop
orl
das
sarl
mov
fwait
push
sub
outsl
cmp
inc
mov
cltd
scas
push
mov
and
lret
or
dec
cli
bound
out
adc
adc
fimull
int
shlb
dec
sub
movsb
push
scas
out
out
mov
xor
push
jg
add
jbe
push
inc
mov
push
jne
jo
cld
pop
call
ss
push
lret
push
ja
lock
and
jnp
pop
mov
jae,pn
sbb
jnp
das
cmp
lret
or
jmp
jmp
jae
test
cld
and
pop
hlt
shrb
into
mov
ret
push
or
adc
popa
lret
dec
lret
push
inc
mov
test
xor
xlat
aad
sbb
sarl
mov
sub
stc
pushf
mov
inc
xchg
fldt
jb
jg
sahf
and
xor
jg
ljmp
mov
and
mov
xchg
test
or
push
jb
pop
xchg
push
ja
inc
lods
mov
testl
jp
adcb
shlb
mov
ret
fisttpll
ljmp
test
pop
sub
add
jg
in
rorl
dec
dec
push
sub
js
stos
xor
insl
sbb
sbb
cmc
lahf
cmp
andl
aam
out
dec
sti
lods
xor
add
add
xchg
sub
add
dec
dec
inc
adc
or
aas
repnz
rorb
hlt
sti
mov
sahf
mov
sarl
dec
xchg
and
stc
scas
pop
mov
iret
pop
in
jbe
cmpsb
loopnew
into
lock
push
inc
pop
sub
mov
xor
inc
pop
sub
daa
fdiv
or
push
xor
bnd
repnz
inc
xor
hlt
stos
fs
sub
orl
stc
repz
dec
fcompl
mov
loopne
loope
cmpsl
push
out
neg
add
mov
pusha
aas
add
stos
in
mov
add
mov
add
cmp
dec
pop
rorl
sub
std
into
mov
and
sub
outsb
idivb
cmpsb
fcomip
xchg
dec
push
clc
sub
xchg
jmp
movsl
jp
push
push
adc
test
mov
adc
inc
movsl
scas
sarb
adc
scas
lahf
add
rcll
lret
mov
mov
and
cltd
jg
ret
or
cmp
jo
push
les
int
cltd
jecxz
or
pop
pop
mov
fs
and
add
jne
in
sub
leave
dec
xchg
fldl
jno
mov
cli
or
xchg
mov
xor
xlat
test
push
pop
adc
adc
stc
outsb
testb
fstpl
mov
fs
insl
mov
adc
xchg
clc
sahf
fistps
mov
stos
clc
inc
je
dec
sub
cltd
in
add
test
pop
push
and
aam
mov
cmp
mov
sbb
mov
lcall
lahf
ret
inc
out
neg
adc
dec
pop
scas
xchg
rorb
clc
push
push
incb
xchg
test
mov
dec
test
lret
add
je
sbb
jl
and
dec
rclb
inc
cmp
inc
dec
js
inc
jbe
adc
inc
cwtl
push
xchg
xchg
xor
mov
inc
in
psubw
cmc
popf
mov
cmp
movsl
push
inc
or
xchg
push
pop
push
and
ret
mov
rcrb
xchg
mov
movsl
mov
int3
push
out
jle
rol
clc
and
cld
and
cwtl
adc
js
xor
inc
xor
mov
outsl
and
push
or
int
push
call
call
mov
lods
outsl
popf
call
cmp
mov
push
arpl
and
pusha
jbe
aas
fsts
int3
fildl
xchg
dec
testb
imul
jno
xor
das
jns
and
and
cmp
dec
xor
cmpsl
int
out
iret
sub
fisubrl
cmp
in
call
adc
pop
sahf
shl
insb
inc
add
or
inc
or
movsb
stos
lods
or
sub
in
filds
mov
aad
inc
pop
push
cmp
mov
andb
cmpsl
jns
scas
test
shll
sbbl
insb
dec
add
inc
adc
adc
mov
lods
clc
jo
push
sub
lcall
xor
mov
mov
dec
jle
push
cmp
sub
pop
adc
push
or
and
jmp
out
test
jp
push
inc
push
insb
sub
repz
inc
fisttps
cmpsb
bswap
mov
mov
add
sub
xor
or
lods
andl
add
shlb
lods
out
or
dec
push
inc
xchg
insl
sbb
cmp
mov
or
fiadds
add
ljmp
jle
adc
dec
das
mov
push
popa
cwtl
pop
xlat
cmp
mov
cmpsb
or
pop
in
push
sti
jle
cmp
pusha
xchg
dec
lret
rcrl
rolb
ret
inc
xor
ret
out
in
sub
or
and
mov
or
inc
rolb
jb
and
jecxz
outsl
sub
jo
inc
daa
out
mov
or
sti
cmc
mov
cmp
pop
push
aam
jp
hlt
dec
xor
push
xchg
aam
ds
mov
mov
jo
hlt
repnz
pop
leave
ret
push
negb
lock
xchg
ja
adc
xchg
or
imul
fsubs
add
mov
mov
push
sbb
pop
outsb
arpl
jb
pop
add
les
xchg
jno
sbb
fmul
out
mov
adc
movsl
cmc
hlt
cli
jmp
pop
punpcklwd
out
sub
push
push
or
call
repnz
cs
fnsetpm(287
clc
dec
inc
ljmp
jnp
loop
ret
pop
and
aad
jg
add
xor
mov
lcall
pop
fs
pop
mov
push
xor
in
dec
sub
mov
add
xor
int3
jns
insl
stos
mov
push
sub
pop
fstps
outsb
xchg
push
sbb
daa
cld
test
inc
aaa
lock
or
adcl
pop
xor
fdivrl
fwait
loop
jmp
insb
pop
fsubl
push
mov
cwtl
scas
sbb
pushf
xchg
adc
subl
rcr
cwtl
jmp
pop
mov
push
sub
mov
mov
sub
je
inc
add
imul
dec
jnp
cli
jmp
mov
int3
mov
jbe
cmp
aas
or
popa
leave
add
dec
nop
mov
sbb
ljmp
cld
addr16
popf
lds
fs
dec
dec
cmpsl
cmp
xchg
mov
mov
cs
sbb
fstl
movsl
pop
pusha
and
adc
sub
std
push
inc
dec
jecxz
pop
push
mov
imul
inc
fistps
popa
pusha
xchg
push
pop
xor
inc
dec
jl
push
pushf
mov
aaa
bound
daa
jb
out
add
out
and
xor
sub
mov
xor
lret
aaa
aaa
xor
insb
xor
or
cld
xchg
addr16
mov
movsb
adcl
jns
cmp
jne
sub
andb
test
in
xchg
dec
jle
addr16
sub
pop
sub
addr16
sbb
divl
or
xchg
push
int3
xchg
bound
das
jno
or
lods
fisttpl
cs
xor
mulb
ss
xchg
ficompl
xor
dec
icebp
ficompl
mov
lcall
enter
mov
push
out
and
stos
lret
cltd
scas
outsb
out
repnz
lret
or
xor
in
in
push
outsl
shlb
push
movsb
cld
inc
mov
xchg
pushf
cmp
mov
push
xchg
addr16
xchg
xchg
fcmovu
out
arpl
jl
loop
cmp
cmpsb
lahf
or
mov
pushf
fsubs
mov
cmp
mov
jge
roll
sahf
lock
in
test
dec
ds
rolb
scas
add
push
fsubs
shlb
jne
xchg
inc
setge
stc
sub
adc
rcrb
xor
lods
imul
xchg
sbb
jmp
nop
pop
xor
cmpsb
sub
sub
xor
addr16
adc
lcall
outsl
fistpll
call
mov
test
jns
push
in
fisttpll
add
sub
mov
and
cmpsl
and
push
add
ja
icebp
aam
andb
jo
fcmovbe
and
popa
sbb
dec
int3
divl
adc
xlat
mov
aas
movsl
push
fnstcw
jmp
loope
dec
dec
push
icebp
cmp
mov
imul
test
sub
popf
in
lods
rclb
loop
fmul
outsb
add
adc
aas
subl
xor
inc
push
stos
stos
cmp
jecxz
dec
jecxz
jmp
xor
mov
cmp
mov
inc
lods
sub
pop
jbe
lcall
jle
mov
jmp
push
jbe
stc
popa
insl
xor
xchg
cmp
cmpsb
je
jne
in
cmp
jge
out
sub
sahf
imul
fdivrs
push
ss
add
push
mov
lods
mov
push
data16
cmp
stc
mov
js
lods
or
xchg
adc
sbb
aad
inc
cmp
and
xor
out
out
cli
inc
and
in
xchg
fstpt
sti
movb
push
testl
cmp
flds
jnp
push
push
leave
cmc
mov
lea
lret
ret
lods
xchg
inc
cmpsl
shll
mov
fcoml
sbb
or
mov
dec
mov
jb
test
push
fdivl
sbb
aad
popa
cwtl
and
ret
movsb
insl
mov
adc
into
sbb
or
ja
pop
or
movsl
arpl
shr
icebp
cmpsl
dec
inc
xor
cmc
push
arpl
pusha
mov
outsb
adc
or
xchg
aas
sbb
jb
imul
cltd
jne
inc
sbb
jne
sbb
ljmp
je
mov
lea
ffree
repnz
in
and
outsl
ret
gs
out
sbb
inc
push
fwait
fwait
and
sahf
cmp
add
sbb
mov
sub
jns
xchg
pop
out
imul
xor
int
push
mov
add
cld
inc
add
sarl
xchg
ret
lahf
adcl
aad
mov
inc
add
stos
push
mov
sub
jno
lods
inc
ja
into
push
into
arpl
sbb
cwtl
sbb
loopne
hlt
subw
adc
out
aad
jns
add
fdivrs
repz
sub
je
shll
icebp
je
aaa
dec
sarl
adc
dec
sub
iret
enter
pop
add
mov
aaa
and
xlat
xorl
fldcw
sub
out
fisubs
push
fdivr
js
fdiv
bound
jmp
loop
sub
xor
testl
mov
inc
xchg
or
cwtl
popa
test
mov
in
push
dec
test
aaa
jae
call
jns
loop
sub
sub
mov
mov
ljmp
int3
ljmp
loop
or
push
sti
call
sbb
in
test
add
sbbl
jno
cmpsl
adc
add
in
dec
cmp
inc
out
rcrb
stc
mov
leave
into
jbe
pop
push
sub
inc
and
xchg
ljmp
movb
mov
aad
add
push
imul
xchg
fsubl
xor
gs
arpl
mov
lds
fucomip
mov
dec
and
add
push
pop
sub
mov
mov
add
fxch
ss
jge
and
add
cmp
lea
in
test
push
pop
es
xor
test
sub
sub
daa
sbb
ds
xchg
shl
mov
cmp
loopne
imul
xor
xchg
xchg
sub
addr16
fsubl
sbb
jecxz
pop
dec
sti
xor
loopne
fldenv
add
pop
lods
cmpsb
jg
mov
bound
test
jg
nop
mov
or
inc
rorb
insb
or
mov
cld
cmp
aaa
jnp
notb
es
sahf
adc
fwait
cmp
insl
jns
int
hlt
insl
outsb
add
jae
pop
jae
int3
scas
das
shr
push
ljmp
xorb
clc
xor
pop
jmp
cs
push
movsb
mov
lret
jnp
fldcw
push
xor
fdivs
cmp
sti
fiadds
push
insb
lds
cmp
imul
mov
xchg
movsb
sbb
add
xchg
cmp
jg
xor
test
sub
adc
lcall
push
xchg
adc
cwtl
and
inc
mov
and
cmp
xchg
jo
adc
xchg
cmp
lods
cltd
outsb
xchg
xlat
filds
mov
popf
cmp
xchg
dec
dec
pop
add
xor
in
jmp
pop
sbb
sub
sub
pop
inc
jae
pop
add
and
aaa
or
mov
and
ret
loope
int3
sarb
or
mov
fcmovu
int3
mov
mov
cmpsl
add
cmp
xor
clc
es
aad
js
in
cmpsl
jnp
and
push
push
pop
sti
pushf
sbb
pop
cmpsl
cs
xlat
cltd
add
push
gs
je
pop
cmpb
xor
sbb
ficomps
mov
cmp
ret
cmpb
mov
pop
xlat
xor
hlt
dec
aaa
lret
outsb
push
cmp
mov
inc
daa
xchg
adc
mov
and
adc
decb
stos
jp
cmp
jno
push
shl
and
scas
add
mov
outsb
subb
and
gs
push
data16
push
xor
cwtl
inc
out
sbb
push
xchg
scas
sub
fldcw
test
pop
cld
jnp
sbb
lds
xchg
sbb
insl
fcoml
sub
xchg
push
xchg
cmp
ja
mov
inc
or
xchg
jmp
arpl
cltd
or
mov
insl
mov
push
rcrl
test
imul
aaa
aad
push
mov
mov
jo
dec
shlb
mov
xchg
in
mov
mov
xchg
or
out
jmp
push
jp
dec
mov
sub
stc
popf
int3
jmp
jmp
mov
or
rcrb
dec
hlt
adc
pushf
ss
jl
out
sahf
xor
jo
sbb
adc
jae
stos
jo
mov
fldl
jne
scas
cmp
iret
xchg
cmc
inc
adc
lahf
push
or
call
lods
dec
sub
dec
in
rol
dec
stos
push
lret
test
stos
sub
insb
mov
add
nop
inc
mov
sbbb
loopne
xor
mov
clc
clc
outsb
sti
push
test
and
xchg
mov
add
hlt
dec
dec
push
push
inc
fistpll
inc
je
cmp
inc
lahf
fnsave
sub
pop
popf
mov
pmulhw
cmp
jae
mov
loope
adcl
dec
js
sarb
lods
je
jp
lds
xchg
xchg
and
lods
dec
xchg
cld
bnd
pop
xchg
adc
push
sub
icebp
lds
mov
xor
xchg
lods
je
in
inc
add
rdpmc
cmc
shll
sbb
in
fs
mov
pop
addb
xchg
push
jg
cwtl
rol
pop
jg
fs
aas
adc
xchg
and
int3
push
imul
push
or
sub
cmp
xchg
mov
cld
mov
sahf
push
dec
xchg
repz
shrd
gs
frstor
or
jmp
mov
outsl
jmp
fs
negb
outsl
jno
xchg
lods
xor
lods
sbbl
lcall
inc
mov
mov
in
stos
in
dec
sub
push
or
pop
ret
sub
pop
out
and
add
ret
orb
and
into
sti
dec
and
jns
dec
pop
inc
test
xchg
test
fcomp
add
mov
imul
ljmp
mov
mov
test
insl
xchg
inc
lds
fs
push
pushf
sub
mov
inc
or
movsl
jp
scas
sbb
cmp
jnp
testl
xor
stos
ret
cmova
or
in
inc
out
sbb
popa
stos
cmp
imul
repnz
and
mov
hlt
mov
jmp
pop
and
scas
pop
arpl
add
adc
stc
cld
jle
xchg
out
mov
or
xchg
xor
repnz
pop
push
pushf
sbb
mov
decb
dec
xor
ret
daa
insb
shlb
xchg
and
lret
sbb
ret
es
loopne
inc
add
add
mov
test
inc
cs
inc
lcall
popa
call
std
nop
mov
jle
in
scas
popf
sub
cs
push
in
rolb
mov
and
pop
sbb
cmp
pop
lock
mov
xchg
dec
jne
movsb
divb
add
cwtl
push
mov
in
mov
inc
or
add
or
and
out
inc
sub
andl
add
sti
adc
adc
inc
int3
pop
fs
out
call
xorb
pop
add
std
lret
mov
data16
in
frstor
xchg
mov
add
mov
cmc
rcl
sbb
dec
or
out
sbb
pop
mov
mov
cs
pop
jl
cmp
jbe
and
sbb
fidivrl
pop
shl
mov
sub
mov
xchg
imul
lret
sub
sahf
loope
rcrl
out
dec
pop
push
mov
xchg
sub
popa
sarl
mov
jno
test
or
cmp
pop
in
or
andb
dec
rorl
leave
pop
stos
jno
lods
bound
scas
pop
cwtl
test
push
rol
xor
or
icebp
addr16
mov
bound
xchg
fdivrl
dec
mov
test
fbstp
test
xchg
insl
mov
jge
imulb
insl
inc
pusha
cmp
enter
int3
cmpsl
sahf
leave
faddl
jnp
cmp
fcmovbe
movsl
xchg
dec
or
arpl
in
cmc
mov
mov
inc
imul
jb
js
mov
hlt
fadds
xor
push
mov
cmp
dec
and
jle
lret
call
jbe
popa
sahf
and
xchg
clc
popf
add
pushf
movsl
into
fucomp
shl
nop
xchg
xor
js
adc
stos
mov
dec
out
mov
and
fiadds
std
mov
jnp
jae
mov
pop
inc
outsl
fwait
sahf
test
in
imul
inc
sub
dec
and
stos
mov
mov
mov
mov
insl
or
add
mov
or
out
xor
jo
xor
mov
bt
std
and
add
mov
fidivl
das
and
fwait
jno
ret
movsl
dec
shlb
test
int
jnp
xorl
sub
ljmp
sbb
into
insl
mov
jbe
mov
adc
mov
and
push
popa
icebp
dec
inc
mov
push
ret
int3
cmp
idiv
mov
loope
jp
mov
sti
insl
out
and
mov
adc
jo
inc
pop
mov
cmp
test
rcr
in
adc
or
or
or
push
cmpsl
in
je
sahf
jnp
cmp
pushf
aaa
fs
mov
or
dec
lods
pop
sub
lret
push
adc
mov
inc
pop
inc
jp
sbb
dec
out
mov
sbb
lahf
push
push
cmp
adc
push
cmpsb
sub
inc
pop
cmp
int
ret
sub
icebp
stos
scas
fstps
jl
fimull
je
mov
sbb
lea
push
lahf
mov
cwtl
pop
imul
mov
cmp
add
or
dec
fdivrs
push
and
ja
cmpsl
fcmovbe
push
ljmp
test
dec
inc
call
pop
orb
xor
jne
jbe
es
xchg
scas
into
enter
aaa
push
xor
movl
in
stos
call
jmp
sub
sub
jg
inc
icebp
push
mov
pop
cmp
pop
out
addr16
int
pop
sti
lds
push
enter
daa
sbb
fdivl
addr16
adcb
xor
sar
inc
pop
dec
inc
stc
push
aam
outsl
lahf
dec
stos
sub
cld
sbb
adc
inc
popf
cmp
pop
adc
ret
xchg
pushl
outsl
lock
dec
out
push
cltd
pusha
xchg
pop
int3
orb
imul
push
xor
fldt
add
leave
subl
jecxz
fistps
scas
insl
or
and
popf
divl
leave
sbb
pop
xor
outsb
rcrb
mov
test
xor
pop
or
cwtl
cli
adc
ja
hlt
push
movsb
test
aaa
ret
sbb
mov
ret
fidivl
mov
mov
jl
jp
inc
mov
pop
sarl
stos
jns
jno
or
mov
out
mov
jmp
ds
mov
leave
adc
ja
mov
xchg
sti
into
mov
jns
dec
sub
outsb
in
jnp
add
add
fidivl
sbb
xchg
xorb
mov
jge
cmp
mov
mov
add
in
xorl
aad
xchg
push
xchg
xchg
pop
or
subb
mov
imul
sbb
mov
xchg
sub
xor
sbb
jnp
jb
icebp
jmp
aad
inc
in
inc
and
ret
les
pop
jge
add
pop
notl
inc
jmp
mov
push
cmp
push
or
pop
mov
ss
and
loopne
push
push
pop
push
fwait
sub
notb
or
xchg
aam
sbb
or
je
movsb
jno
out
mov
mov
pop
shll
pop
into
mov
inc
loop
push
loop
sub
mov
xlat
inc
pop
sbb
push
into
add
in
jge
cmp
fwait
sbb
inc
lods
and
add
mov
shrl
lret
sbb
lods
imul
cmp
ss
cmp
mov
stc
adc
and
ds
xorb
inc
int3
loopne
mov
sub
outsb
xchg
and
pop
mov
sbb
mov
sbb
mov
imul
and
sbb
jecxz
jae
mov
jg
mov
popa
sti
push
cmp
xor
mov
stos
movl
add
sbbl
pushf
push
lods
data16
fs
pop
mov
mov
test
dec
test
aam
adc
sbb
fsubrs
push
adc
addr16
arpl
xor
adc
cmpsb
repnz
push
dec
mov
sub
xchg
mov
lret
insl
in
js
mov
stc
ja
int
xchg
movsl
fldenv
sahf
add
in
xchg
icebp
sbbl
sti
ds
xor
mov
jmp
lahf
les
aas
jecxz
movsl
jb
dec
cs
jbe
test
js
test
pop
sbb
jl
ljmp
inc
cli
and
mov
ljmp
push
shll
clc
xor
push
aam
pop
mov
lock
mov
dec
rolb
mov
sahf
xchg
push
pop
jne
lds
xchg
repnz
jbe
mov
je
pushf
imul
icebp
mov
movsl
add
in
stos
cli
push
mov
xchg
jmp
cmp
movsb
imul
jl
push
push
jecxz
test
insb
mov
in
pop
ficoms
or
jae
data16
add
call
pop
enter
push
jae
insb
sub
sub
xor
mov
pop
lods
dec
rorl
mov
aas
icebp
nop
shl
lds
push
xlat
mov
mov
push
int3
and
cmp
inc
jl
inc
mov
cmc
out
ficomps
int3
mov
loopne
dec
pop
jns
jo
sub
sub
adc
or
pusha
push
out
adc
loope
ljmp
insl
xor
faddl
xchg
addb
jl
das
jne
jge
cwtl
xchg
xchg
adc
xchg
push
cmp
push
and
ficomps
fcoml
jg
jbe
test
les
and
call
je
shl
fcom
fxtract
xchg
test
jbe
pop
add
and
jnp
fildll
into
aad
xor
push
mov
xchg
inc
test
push
js
lret
add
cltd
push
lods
popa
fsubs
xchg
fisttpl
mov
adc
scas
sbb
imul
jl
xchg
fisttpl
pusha
push
outsl
into
aas
mov
pop
ljmp
xchg
addr16
movsb
je
pop
adc
xlat
fcomi
pop
jbe
jne
inc
or
or
push
adc
cld
sub
push
inc
xchg
fldcw
mov
mov
mov
push
lea
mov
arpl
sbb
dec
jle
mov
int
cmpsl
jbe
push
xor
pop
ss
mov
or
dec
or
in
fstps
dec
adc
mov
insl
lret
cmp
mov
outsb
or
fcoms
cmp
fwait
push
std
inc
test
xchg
pop
aaa
outsl
push
fidivl
ss
shll
push
add
jns
fcomp
jno
cmp
fldcw
int3
shll
pandn
je
adc
sbb
inc
rorl
test
frstor
xlat
mov
psraw
cmp
push
out
push
adc
imul
out
mov
sbb
enter
pop
std
inc
fcmovb
and
inc
adc
dec
into
sbb
cmp
and
xchg
lea
rcrb
sub
scas
divb
insb
mov
cmpsl
xchg
pop
xor
or
inc
inc
daa
push
in
jmp
pop
adc
push
nop
rclb
jp
int3
mov
sub
xor
out
aam
je
and
hlt
lahf
sbb
nop
inc
leave
or
mov
add
imul
popf
cmpsb
inc
xor
xchg
add
sbb
outsl
add
ljmp
cmpl
mov
dec
dec
into
es
cmp
and
sarl
or
mov
test
pop
movb
cmpsl
xchg
shrb
outsl
pop
xchg
je
cli
add
push
mov
cmp
pop
jbe
out
cmp
jecxz
fdivr
cmp
and
mov
xlat
cmp
or
mov
dec
fists
daa
dec
pop
test
mov
xor
fwait
jb
cmp
or
inc
and
mov
jb
or
xchg
add
sbb
test
and
mov
xor
sbb
cli
aas
enter
or
aad
iret
sbb
mov
mov
cmp
dec
mov
add
aas
pop
cmp
in
lcall
insb
xchg
mov
or
mov
sub
push
xchg
jne
jnp
loope
cmpsb
adc
mov
loopne
mov
sbb
outsb
loope
ret
je
dec
mov
dec
cmp
addb
fadds
aas
xchg
orb
cmp
adc
fcomps
cmp
lock
insl
iret
xchg
push
fadds
imul
inc
in
sti
mov
mov
mov
cld
inc
mov
push
lods
add
cs
cmp
sub
insl
push
fiadds
and
pushl
pop
mov
sti
fsubl
lret
je
mov
sbb
xor
out
add
mov
filds
and
pop
sbb
dec
and
cltd
aas
popa
popf
or
leave
cmp
sbb
pushf
mov
add
mov
dec
addr16
dec
stc
sub
ret
daa
out
inc
cld
je
xor
sub
fdivrs
mov
mov
hlt
push
sub
pop
mov
dec
mov
outsb
sbb
cmp
ljmp
push
into
and
mov
and
addr16
mov
add
push
insb
or
clc
int
fs
clc
xor
pop
fsubs
add
adc
mov
aaa
lcall
fs
push
aad
mov
dec
xchg
test
scas
mov
lock
sbb
dec
push
cmp
popa
aaa
push
stos
sbb
inc
pop
xchg
mov
js
mov
pop
cmpsb
push
ficoml
push
nop
lods
xor
cmp
mov
sbb
sub
shl
pop
fwait
xor
cwtl
xchg
adc
xchg
xchg
fstl
push
mov
adc
pop
sub
pop
inc
mov
ja
mov
mov
test
out
enter
adc
jg
js
fdivrp
sub
sbb
les
int3
shll
cmp
pop
ret
cmpsb
push
popf
cmpsb
jo
ja
std
pop
jecxz
arpl
add
dec
icebp
cmpsl
mov
inc
ljmp
aad
push
out
pop
shl
push
fcompl
sbb
xchg
test
fldenv
sbb
mov
inc
dec
stos
xchg
dec
add
pop
loopne
outsb
movsl
mov
cmp
ss
mov
push
mov
xor
sbb
arpl
stos
lcall
addl
enter
inc
daa
leave
test
imul
inc
mov
popf
xchg
pushf
pop
lret
push
leave
inc
stos
ds
sti
dec
push
mov
or
cmp
add
jbe,pt
push
pop
stc
add
xchg
call
aas
jg
adc
lret
and
xlat
out
lahf
aaa
imul
loope
or
adc
pop
scas
mov
daa
cmc
imul
dec
nop
inc
mov
and
xor
push
mov
jb
or
inc
jecxz
fs
add
js
movsb
cmp
daa
mov
fcomps
mov
inc
repnz
mov
adc
js
and
mov
push
fucomi
clc
push
inc
mov
adc
mov
cs
notl
xor
cmp
adc
aas
test
fldcw
xchg
int
ret
aad
xchg
push
mov
adc
mov
rcrb
or
add
scas
mov
mov
pop
xor
push
mov
stos
push
jmp
jmp
sbb
in
lock
pop
add
shrl
sub
cld
mov
arpl
fwait
popa
mov
or
xor
push
mov
pop
adc
into
sahf
inc
xlat
nop
or
into
xchg
addb
mov
into
arpl
cld
cmp
sar
adc
and
icebp
mov
rolb
call
idivl
add
int3
add
or
jo
out
fistl
test
sahf
inc
imull
iret
inc
ret
adc
add
add
pop
sbb
mov
pop
icebp
add
out
dec
xchg
push
fcmovnu
pop
fstpt
sbb
push
popa
test
inc
sub
mov
mov
ret
daa
cltd
xlat
das
in
and
mov
mov
insl
sbb
cmpl
outsb
mov
stos
in
or
fnsave
add
jb
loopne
mov
idivb
dec
divb
jns
loope
dec
and
xchg
dec
jno
icebp
icebp
sbb
fs
ds
inc
dec
enter
xlat
cmp
xor
or
stc
movsb
mov
cmp
cmpb
movsb
lcall
mov
xor
daa
lret
mov
inc
jae
xchg
mov
sub
xchg
adc
xchg
fwait
int3
fldt
mov
shll
and
jae
mov
hlt
out
pop
int
int
pop
cmp
xchg
ljmp
outsl
mov
xchg
rorl
scas
rolb
jg
fnstenv
xchg
xor
mov
or
pusha
sbb
pusha
jl
inc
shrl
sbb
xchg
xchg
loope
test
xor
and
idiv
fs
sub
sarl
push
add
pop
jmp
sub
cli
push
das
outsl
xchg
pop
mov
dec
cmp
cmpsb
push
mov
aad
cmp
jle
ficoms
pushf
cmp
popa
dec
insl
out
mov
aas
mov
lods
shlb
sbb
outsb
cmp
xor
mov
pop
cmpsb
mov
push
arpl
jae
sahf
mov
push
add
outsb
roll
mov
out
jp
repnz
xchg
in
mov
aam
test
popf
mov
sub
sbb
ljmp
mov
leave
jmp
sub
jb
lds
in
stos
xchg
pushf
push
xchg
jns
gs
insb
jle
pop
loopne
xchg
out
pop
dec
ficompl
sub
push
pop
adc
pop
mov
mov
pop
ja
cmp
std
cmp
les
movswl
out
add
aaa
fmuls
arpl
fdivs
lahf
std
out
or
stc
pop
xchg
adc
push
add
sub
mul
mov
or
adc
cmp
sbb
xchg
mov
jae
pop
jmp
xchg
mov
inc
sub
and
das
in
je
inc
psraw
fcmovnu
mov
sub
mov
cmp
lock
loope
ja
mov
mov
adc
dec
pop
push
aad
test
adc
sbb
pushf
jl
mov
sti
add
bound
xor
pop
jp
es
fmull
mov
inc
sahf
adc
imul
es
rclb
pusha
mov
push
dec
xchg
push
xchg
mov
dec
add
lcall
push
push
daa
hlt
loope
sbb
pop
pop
fsubs
adc
fs
mov
insb
icebp
iret
popf
mov
iret
mov
andb
push
cld
sub
fneni(8087
rcrl
and
add
xlat
dec
dec
cld
hlt
fs
int
inc
ret
dec
sbb
push
je
pop
jg
xchg
sbb
cmc
xchg
xor
xor
inc
add
adc
or
out
mov
inc
cmp
and
adc
adc
push
js
idivl
push
pop
stos
push
jmp
xchg
mov
add
jb
scas
jl
les
cltd
lods
mov
push
sub
fdivs
push
push
jnp
negb
aam
cmp
jg,pt
xchg
dec
or
sahf
int
scas
popf
subl
jb
lock
push
inc
in
jp
push
pop
insb
cmpsl
lahf
or
push
into
ret
xchg
jo
pop
dec
imul
mov
icebp
pushl
adc
adc
clc
lret
push
mov
pop
and
jp
arpl
into
add
rol
data16
cmp
outsb
rclb
fisubrl
test
sahf
out
call
mov
push
mov
call
mov
and
out
jae
push
dec
pop
sbb
adc
gs
jno
and
lahf
aad
shlb
cmp
popf
inc
lahf
or
call
adc
gs
fstpl
in
fucomp
sahf
cmp
dec
pop
and
lahf
pop
and
jle
add
adc
jl
and
inc
jb
insl
pop
mov
scas
fisubrl
jnp
jge
and
fsqrt
mov
in
enter
cmp
inc
cli
fs
sub
and
fcomps
adc
jg
adc
push
loopew
test
pop
ud0
fs
idivl
add
pushf
jb
loope
push
mov
add
stos
out
dec
pusha
pop
jbe
xchg
rcrb
pop
subb
pop
mov
dec
ja
out
mov
add
inc
rcll
mov
mov
ds
inc
ja
jno
xor
out
notl
mov
or
mov
lods
mov
lahf
insb
daa
push
pop
repz
sahf
pop
test
out
push
push
fdivrs
insb
cmp
inc
sub
movsb
mov
xchg
sti
xor
or
inc
test
insb
decb
xor
push
test
fs
mov
mov
addr16
in
out
rorl
push
out
mov
xchg
fiadds
jg
mov
sbb
push
insb
orb
subb
ret
insb
fisttpl
enter
sub
aaa
dec
jae
inc
nop
jle
mov
loop
pop
add
jb
sub
testl
dec
hlt
mov
iret
cmp
push
jg
adcb
mov
and
aas
rorl
repnz
fmull
int
cld
out
inc
mov
xchg
imul
jae
inc
movsb
sub
pop
mov
lret
mov
lret
adc
sub
test
das
in
dec
inc
xlat
dec
add
jecxz
xchg
mov
das
or
adc
xor
fsubl
out
push
jge
adc
jae
and
pop
sub
xor
xchg
pop
xor
jbe
gs
xor
jl
subb
daa
out
repz
xchg
daa
outsb
jno
jp
xchg
cmp
pop
jb
bound
sbb
cwtl
scas
inc
aam
xchg
pop
loop
loop
popf
push
or
pop
add
cmp
fidivrl
test
dec
jno
xor
pop
xor
stc
xchg
add
das
push
xlat
cwtl
sub
mov
push
xchg
clc
sub
pop
jmp
inc
mov
xor
inc
or
mov
fs
and
shll
cli
shll
mov
inc
mov
fldenv
push
popf
loop
adc
push
xor
hlt
out
arpl
outsb
pop
and
out
popf
ja
jle
xchg
sub
ds
sbb
pop
sbb
or
push
xchg
adc
or
iret
add
iret
jecxz
or
mov
in
sbb
cmp
mov
xor
sbb
movsl
shrl
mov
adc
shrl
pop
sbb
push
add
pop
in
and
lds
out
push
and
movq
movsb
xchg
jge
lds
pop
test
inc
loopne
movsl
stc
je
fimuls
mov
or
stos
xchg
mov
ficoml
ja
je
pop
push
pushf
jno
cmc
mov
xchg
in
scas
mov
shll
mov
pop
popa
lgs
rclb
add
inc
data16
sub
cltd
sub
aas
xchg
mov
aas
lock
push
and
adc
pop
cltd
inc
xor
lahf
out
mov
jp
vrsqrtps
imul
jnp
and
push
mov
outsb
jge
inc
mov
rcrl
dec
mov
loope
inc
mov
xchg
xchg
push
inc
outsl
mov
mov
jecxz
mov
out
xchg
push
and
mov
push
or
out
push
mov
testl
mov
xor
stos
enter
int
lret
sti
ss
mov
mov
cmp
and
shrb
mov
test
lcall
out
iret
insb
jmp
cld
jns
and
pop
cmp
jae
mov
in
mov
pop
cmp
shrl
pop
jnp
or
and
cmpb
mov
into
push
add
clc
dec
fsubrl
int
out
or
jns
sub
add
sbb
rcrb
xor
xchg
and
dec
xchg
movsb
nop
adc
outsl
rorb
in
orb
ljmp
and
outsl
int3
and
jbe
test
sbb
movsb
push
push
xchg
jne
imul
dec
test
jne
fistps
add
and
test
in
mov
nop
add
cmpsl
push
jne
jge
push
out
xchg
mov
xor
mov
sub
ja
lds
jmp
push
add
ret
add
dec
stos
pop
pop
gs
push
inc
jmp
test
inc
sub
pop
inc
gs
sbbb
push
orl
or
in
lods
mov
xor
sbb
jg
adc
sbb
inc
pop
ds
mov
sbb
dec
mov
repnz
dec
in
shr
xor
rcl
push
dec
pop
popf
outsb
repnz
push
sbb
sbb
dec
sbb
imul
push
pop
jae
dec
cltd
and
cld
ja
push
iret
or
inc
decl
mov
sbb
std
popa
xchg
inc
in
or
push
movsb
mov
loopne
push
mov
jns
mov
lods
out
sbb
xchg
cmp
add
xchg
into
inc
or
jns
in
xchg
or
sub
adc
cs
std
addr16
sub
hlt
jp
stc
push
stos
addb
lods
xorb
rorl
clc
pusha
popl
hlt
xlat
xor
mov
or
push
jmp
adc
pop
mov
fldl
ret
shl
or
xchg
popf
push
jmp
cmp
mov
mov
mov
shrb
mov
imul
addr16
shr
dec
sub
fs
les
int
ret
push
aad
in
cmp
movsl
sbb
inc
and
popa
sbb
shr
roll
jnp
or
mov
push
sbb
ficomps
pop
xchg
sbb
push
jae
pop
inc
lds
fmuls
cmp
pop
addr16
outsl
mov
incb
push
cld
rcrb
sbb
shll
iret
add
out
jo
dec
loop
jg
mov
in
loop
ret
insl
add
mov
inc
aad
mov
jp
cmp
jne
or
jb
mov
aas
pop
or
nop
xor
xlat
repnz
sahf
cmp
sub
insl
mov
pop
lods
mov
cmp
enter
test
or
push
movsl
inc
repz
in
je
mulb
inc
popf
push
in
push
stos
mov
xchg
jo
ds
repz
mov
push
cmp
les
je
mov
jl
out
in
in
pusha
pop
or
call
aas
or
inc
jg
mov
cmpsl
ds
test
lcall
imul
mov
sbb
repz
gs
adc
cltd
jge
sbb
add
call
jge
aam
pop
fs
dec
repz
shrl
test
lahf
mov
cmc
sahf
sub
inc
mov
js
mov
shll
or
loope
dec
mov
add
test
dec
add
sar
cmp
fidivl
mov
sahf
iret
insl
jecxz
mov
bound
insb
outsb
rcrb
mov
test
inc
mov
jno
jmp
cmp
movsl
lods
xor
cmp
lret
mov
add
out
inc
add
mov
in
mov
stc
movsb
add
repz
shl
daa
push
lock
lret
dec
mov
pop
shlb
mov
pop
lret
inc
jae
inc
mov
jb
lods
lret
xlat
mov
sbb
cwtl
dec
in
imul
inc
inc
adc
ljmp
in
jmp
sub
es
cmp
mov
add
xor
mov
push
xchg
mov
nop
jns
daa
outsl
lahf
pop
lods
ja
jmp
dec
arpl
ds
add
movsb
cwtl
mov
lods
repz
push
mov
fldenv
inc
cld
push
jle
out
push
add
jle
adc
sub
dec
cld
daa
xor
stc
or
stc
or
fwait
push
cli
mov
rolb
cltd
xchg
repnz
pop
out
cmp
fdivs
and
sarl
insb
scas
xor
jl
leave
test
or
push
dec
inc
xchg
mov
adc
jmp
dec
sbb
js
enter
shrb
push
push
nop
imul
std
mov
jbe
int
sbb
lock
jbe
repnz
lds
jge
add
popa
pop
out
gs
cmc
pop
cld
jp
cmp
in
add
movsl
jecxz
mov
mov
jecxz
mov
mov
aaa
loopne
nop
pop
cwtl
repz
fildll
enter
jbe
in
loopne
out
mov
xchg
sbb
jne
xchg
mov
inc
sub
sbb
sub
adc
out
push
les
pop
or
daa
cmp
pop
pop
sub
sbb
dec
inc
pmaxub
ficomps
cld
bound
aad
cwtl
scas
inc
out
mov
hlt
xchg
sub
int
call
lods
xchg
fwait
pop
push
sub
jo
rcpps
and
outsb
iret
sbb
fdivs
xchg
ret
jb
sub
push
pop
xor
jae
clc
jecxz
mov
fwait
cmp
and
jno
lret
or
push
sahf
xor
andl
out
out
pop
sbb
pop
or
and
or
data16
stc
push
push
jne
mov
xor
cli
mov
or
pop
and
shlb
sub
adc
je
cwtl
pusha
push
mov
std
out
pusha
mov
mov
mov
cmp
jb
repz
loopne
sub
xor
gs
mov
jmp
out
and
stos
lret
jno
cmp
fdivrs
push
sub
add
in
sub
leave
xchg
and
mov
out
in
xchg
test
and
mov
cmp
repz
iret
mov
push
mov
pop
test
adc
xchg
xchg
xor
enter
push
cmp
pop
int3
stc
stc
or
sbb
push
aaa
in
andl
push
stos
sub
xor
and
mov
push
mov
aam
add
popf
mov
in
inc
push
xor
and
es
movsb
fnop
out
dec
movsl
xor
cmp
cld
addr16
mov
mov
push
sbb
xor
dec
lret
push
test
fpatan
inc
mov
or
mov
mulb
sbb
fwait
add
mov
fsubl
and
sub
jl
shll
jmp
add
shrb
adc
mov
fstp
mov
lcall
inc
jnp
dec
lret
push
push
dec
push
or
into
sbb
insl
jo
lcall
jmp
dec
out
sbb
imul
mov
and
fbstp
je
pop
push
jge
xchg
mov
aas
popa
int3
fimuls
into
popf
int3
outsl
mov
jae
jle
jg
dec
add
jmp
adc
test
fists
adc
cmp
jno
push
mov
jg
out
outsb
andl
and
imul
xchg
cmpl
push
bound
sbb
iret
ret
stos
insl
loop
sbb
fimull
shll
mov
inc
inc
mov
mov
sarb
loopne
mov
push
inc
aam
insl
pop
cmp
and
aam
ret
inc
mov
jg
mov
lahf
stc
ds
cmc
stos
pop
mov
add
pop
stos
adc
adc
bound
aam
and
insb
ret
cmp
cli
mov
cli
pop
sub
pop
test
int3
jbe
mov
mov
sub
inc
push
outsb
dec
and
push
adc
and
add
cmp
mov
push
outsl
xchg
ret
cwtl
jg
mov
or
dec
xchg
jl
mov
call
push
lds
inc
xchg
adc
push
push
lret
test
bound
ret
leave
xchg
cmp
mov
les
aad
shr
push
sub
cmp
test
inc
outsl
shll
loop
jno
int3
lock
xorl
les
push
leave
daa
xchg
pushf
ret
out
pop
jmp
scas
cmp
jns
cmp
pop
scas
idivb
cltd
jns
shrl
xor
dec
xchg
in
mov
push
mov
dec
sti
clc
sbb
out
sub
mov
mov
mov
dec
xchg
gs
push
popl
or
cwtl
mov
sub
jmp
jecxz
inc
adc
es
popa
sub
xor
dec
sahf
sahf
int
mov
xchg
xchg
jge
mov
inc
inc
out
mov
push
minps
cmpsl
inc
fsts
call
pop
lret
adc
aaa
mov
ja
loop
movsb
mov
cmp
std
call
mov
xorb
inc
das
cmp
add
stc
push
test
jp
pusha
xchg
xchg
ret
inc
adc
adc
cli
push
fists
mov
pop
or
mul
or
dec
sub
xchg
in
fistpl
addr16
test
xchg
enter
cwtl
jno
repz
cmpsb
sub
cmc
test
xchg
pop
pop
rolb
into
or
add
cmp
mov
adcl
sub
pop
lcall
xor
mov
in
fldt
xor
pusha
cmp
and
mov
xchg
ja
pop
add
nop
jnp
cli
imul
inc
mov
ljmp
loop
cmpl
inc
inc
and
ss
int
mov
sub
xor
arpl
push
rorb
cs
repnz
xorb
faddl
push
sbb
xor
push
ds
cmp
subl
adc
jmp
mov
lret
cmp
adc
mov
ret
cli
pop
addl
cmp
dec
test
jmp
gs
adc
and
push
push
cmp
or
xor
sbb
pop
pop
and
sub
cwtl
mov
pop
mov
jo
popf
loop
out
sti
aaa
jmp
lcall
push
lods
add
mov
inc
sti
jbe
test
sub
xchg
xor
cmp
lahf
mov
xchg
mov
and
out
iret
xor
mov
inc
insl
cmp
sahf
scas
jge
pop
mov
adc
loop
jp
sbbl
xchg
mov
sbb
flds
call
push
fisubl
fldl
dec
pop
into
ljmp
pop
call
nop
loope
sub
aas
cmpb
ret
lea
lds
xchg
mov
xorl
cmp
add
cwtl
roll
lods
mov
mov
add
clc
xor
cmc
daa
push
pop
movb
lret
mov
into
test
sbbl
fistps
jae
fmuls
xor
jo
testl
and
enter
pop
test
xor
cmp
xor
sti
xchg
dec
icebp
cmp
out
mov
mov
mov
pop
or
clc
loop
leave
out
add
jbe
das
call
inc
push
adcb
mov
shlb
ror
lods
xchg
shl
adc
rorl
lods
in
pop
out
mov
movsb
lret
inc
scas
mov
xor
jnp
xchg
stos
cmp
jno
add
fwait
adc
sub
pop
rcrb
lods
imul
fbld
les
stos
ret
xchg
push
leave
out
fwait
shlb
sub
nop
lock
mov
ret
jle
xlat
adc
push
popf
inc
mov
in
sub
int
dec
and
mov
jb
mov
outsl
mov
cmp
or
fs
mov
mov
mov
insb
incl
sub
lcall
loope
push
into
xor
or
adc
loop
adc
push
das
sbb
adc
test
scas
push
cs
cmc
add
clc
jg
xor
push
pop
fsts
int
stos
test
mov
pop
andl
dec
add
aad
loope
jge
xchg
fs
arpl
fisttpl
push
std
xor
sarb
rorb
pop
and
cli
jb
aas
data16
js
inc
fisttpll
sub
dec
fadds
xchg
mov
inc
fisubs
adc
xchg
popf
xchg
fwait
lahf
dec
std
mov
stos
jg
dec
shrb
add
and
clc
popf
xchg
or
push
xchg
sbb
mov
test
cwtl
mov
imul
ds
mov
push
mov
xor
fiadds
cmp
mov
repz
mov
stos
pop
jnp
xorl
sub
adc
pop
or
sub
rolb
cmpsb
dec
sub
and
shl
jge
call
std
in
push
jns
sub
xchg
xchg
pop
inc
or
mov
dec
cs
jle
ret
popa
pushf
imul
fwait
jno
outsb
loop
in
sbb
pop
imul
push
mov
in
sub
sahf
xchg
cli
sbb
mov
xor
jb
out
cmp
push
ja
adc
fnstsw
daa
jnp
push
lock
dec
mov
ficoml
test
iret
lock
xchg
pusha
xchg
aas
imul
das
mov
scas
movsb
bound
jl
xchg
fyl2x
xchg
mov
jle
inc
bound
aam
insl
adc
mov
adc
push
jne
sahf
push
nop
jne
add
cs
hlt
clc
daa
jbe
rorb
testb
stc
inc
sti
iret
jmp
xor
pop
cwtl
pop
xor
push
mov
lret
mov
mov
icebp
sub
and
into
test
mov
repnz
mov
dec
je
fisubrl
cltd
das
dec
add
repz
xchg
mov
pop
enter
push
and
mov
aas
jle
bound
test
lahf
ret
loope
sbb
jns
stc
pop
mov
jo
mov
in
cwtl
adcb
pop
andl
jecxz
fiadds
or
push
in
sbb
call
addr16
dec
cmp
fmuls
nop
xchg
je
nop
push
mov
das
jnp
bound
das
pop
pushl
je
push
inc
jne
loopne
iret
notb
push
leave
cmp
jmp
xchg
ja
and
sub
sarl
cmp
ds
in
fisttps
sbb
sbb
js
pop
insl
cs
and
push
stos
imul
mov
mov
pop
pushaw
jecxz
xor
inc
fs
sahf
pusha
cmpsl
dec
lret
xchg
pop
pushf
dec
pop
or
or
into
push
inc
in
inc
pop
punpcklwd
outsl
scas
or
add
in
mov
in
sub
ja
or
add
jne
xor
push
and
fcoms
cs
push
pushf
mov
ret
mov
and
test
imul
mov
push
jmp
mov
lds
dec
dec
and
or
push
sub
mov
mov
jae
fdivrp
data16
push
outsb
xor
fldl
dec
aam
mov
jb
dec
xchg
push
push
add
inc
repnz
sub
jo
jo
xchg
adc
sbb
ljmp
pop
push
adc
pop
or
inc
sub
cmp
test
mov
push
sahf
adc
inc
or
sub
outsl
push
stos
out
cld
pop
repz
add
popl
and
cli
or
out
repnz
xchg
inc
mov
popf
movsl
or
adc
lds
sbb
jl
lcallw
shrb
call
mov
sbb
push
shrb
insl
aam
adc
jmp
test
mov
outsl
jb
daa
fnsave
xchg
mov
jo
clc
pusha
std
outsb
pop
inc
dec
cmp
dec
xor
scas
lods
fadds
dec
lods
or
pop
mov
pop
je
loopne
dec
out
icebp
pop
shr
fbstp
jnp
fsubl
xchg
sub
lods
scas
sbb
out
bound
sub
out
in
dec
pop
mov
xchg
mov
fmul
xchg
fdivr
js
push
xchg
icebp
movsb
stc
mov
push
popa
shll
scas
fmuls
adc
fdivl
mov
roll
iret
sub
xchg
jb
lea
popf
mov
mov
dec
jecxz
xchg
adc
mov
ljmp
addr16
sub
cltd
pushf
loop
adc
pop
in
js
push
out
and
clc
popa
jp
dec
xor
ss
pop
inc
scas
push
hlt
mov
sarb
shrl
shr
lods
fidivrs
mov
test
xor
sub
mov
into
push
fdiv
pop
dec
sti
xchg
sbb
lahf
popf
mov
push
pop
xchg
mov
inc
test
jo
mov
and
mov
or
pop
clc
pop
insl
mov
lcall
mov
mov
es
nop
add
cltd
dec
mov
aas
jge
loopne
int
rclb
cs
pop
stos
mov
and
jae
push
xchg
in
leave
in
int
cli
mull
in
mov
add
movsb
insb
and
jge
jb
ja
push
pop
push
inc
sub
adc
cmpsb
inc
call
sbb
dec
ljmp
ss
out
imulb
nop
loopne
jbe
push
fisubs
ja
jl
repz
je
pushf
jle
dec
ds
xchg
loop
stc
push
mov
jne
aam
ja
rolb
cmp
adc
cmp
xchg
mov
aam
or
mov
mov
popf
xor
aaa
pop
jo
subb
mov
test
rolb
push
ja
dec
jns
xchg
push
add
xchg
out
int
pop
aaa
dec
jmp
xchg
xor
js
sti
mov
rorl
dec
fisttps
mov
aaa
adcb
jb
and
bound
ja
pop
push
out
data16
or
pop
cli
ds
cmpl
adcb
cltd
dec
out
push
cwtl
inc
dec
jle
inc
sahf
clc
xor
pop
stc
jno
push
adc
mov
xor
mov
aam
test
pop
push
aaa
imul
jle
ja
pop
es
cld
mov
cltd
rcrb
push
push
xchg
cmp
sbb
test
mov
arpl
inc
jg
add
pop
orb
cmp
xchg
xchg
pushf
jl
lds
test
outsl
mov
push
jg
insb
jns
mov
dec
cld
mov
rorb
mov
inc
pop
push
jne
aaa
inc
aam
insl
xchg
repz
push
lock
and
mov
imul
fwait
cmp
je
stos
loopne
sar
arpl
add
aad
jg
mov
jbe
rcrb
in
fcomps
lods
cmp
loop
add
pop
mov
cmp
insl
les
loopne
or
lahf
cmpsb
adc
cmpsl
mov
pop
subl
cmp
cmp
popf
mov
call
lret
jmp
xchg
daa
into
xor
cmc
mov
sbb
shrb
scas
push
push
jae
je
cmp
insb
mov
push
mov
xchg
lea
cmp
mov
dec
mov
xor
add
inc
fbstp
sub
xchg
add
mov
orl
ficompl
ds
icebp
loop
addb
mov
ljmp
sub
cmp
fadd
pop
pop
jnp
mov
repz
push
int
xor
les
out
or
test
xlat
xor
jnp
adc
dec
mov
roll
popa
xchg
mov
sbb
jp
and
ds
out
pop
cli
fwait
jge
das
outsb
and
aam
fisubrs
dec
xor
dec
mov
sub
repz
jmp
sub
push
fdivrs
dec
pushf
fdivl
les
mov
sbb
push
pop
loopne
add
mov
arpl
jb
xchg
mov
addr16
xor
mov
scas
lods
pushf
outsb
aaa
add
mov
ret
test
ljmp
xchg
adcl
or
jb
sub
add
rcll
mov
test
test
jle
or
push
mov
mov
add
inc
adc
std
cmp
push
mov
inc
pop
test
push
js
jmp
nop
and
add
in
xor
aam
push
cmp
jno
loop,pn
popa
insb
add
mov
xchg
xor
ds
or
cld
jbe
mov
xchg
mov
xchg
fistl
lahf
xorb
pop
push
mov
data16
xor
sbb
icebp
adc
call
popa
xchg
rcll
dec
into
inc
lcall
adc
jmp
stc
enter
cmp
push
sub
test
les
lret
int
pop
aad
aas
inc
jg
insb
inc
push
dec
loopne
sbb
shlb
sub
pop
and
adc
lret
sub
xor
xchg
ds
divl
imul
sub
and
cmp
jnp
fwait
add
out
arpl
aad
cmp
xor
or
pop
test
in
lret
stos
addl
push
mov
mov
pop
popf
mov
movsl
dec
nop
dec
pop
xchg
sub
notb
or
xchg
dec
dec
add
rcr
pop
popa
fistl
cmp
ficomps
mov
jo
sub
sub
ds
cmpsl
jae
xchg
sub
in
mov
pop
pop
xchg
and
sar
inc
mov
incl
cwtl
xchg
and
xchg
shl
mov
adc
mov
fsubrs
xor
mov
jmp
adc
ret
mov
out
add
mov
mov
lods
mov
mov
add
adc
mov
and
mov
movsb
and
jns
mov
negl
add
imul
or
mov
das
mov
mov
pop
int3
sub
and
clc
mov
divps
scas
lret
cvtdq2ps
in
insl
movsb
dec
pop
lods
outsb
fsts
rorb
inc
fldt
xchg
aad
and
dec
mov
sahf
jecxz
add
add
mov
nop
cmp
push
sub
jne
shrl
adc
hlt
imul
mov
pop
inc
in
xchg
lods
je
test
mov
cmpsl
or
pop
insl
lahf
call
adc
enter
jecxz
inc
xor
mov
mov
arpl
xor
test
cs
cmpsb
add
in
adc
mov
les
mov
inc
punpckhdq
test
in
push
jge
and
jl
sub
jge
push
lea
pop
aaa
inc
xlat
push
call
inc
mov
push
add
jno
and
xor
push
call
popa
sub
movl
imul
enter
rcll
sbb
btc
mov
les
jmp
adc
push
push
aad
cmp
out
into
dec
rolb
jo
jecxz
push
mov
arpl
lret
leave
sbb
arpl
ret
xlat
cmp
mov
je
mov
call
push
loopne
add
mov
into
js
scas
rcrb
add
push
xor
fnstenv
ljmp
ds
shrl
dec
addl
ss
mov
enter
add
das
or
or
lahf
jle
add
je
addr16
into
mov
shll
jmp
cmp
nop
mov
test
ror
jp
cmp
dec
fisttps
adc
xchg
dec
jmp
std
and
lock
aas
dec
aas
cli
jbe
cmp
mulb
cmp
in
pushf
les
pushf
stc
int3
lret
dec
pop
in
shl
arpl
sub
or
fisttpll
dec
dec
pusha
dec
push
push
mov
xchg
fsubrl
pop
sub
and
mov
lock
fs
fmul
test
mov
cmpsb
mov
mov
das
mov
push
cltd
lds
addb
sub
push
test
rcr
ret
mov
mov
dec
jb
les
int
and
sti
shrb
mov
loopne
push
in
test
cld
cltd
xor
push
or
xchg
xor
adc
xchg
aas
xor
pop
xchg
xchg
outsl
sbb
xchg
jne
test
cmpsl
cmp
ficompl
iret
test
mov
sti
shrb
mov
repnz
jmp
jb
xorb
ss
fstps
adc
loopne
dec
popa
popl
cltd
int
repz
bound
jo
or
dec
xchg
adc
sub
mov
add
adc
mov
adc
repnz
xor
xorb
outsl
xchg
in
inc
mov
loop
ret
dec
or
subl
pushf
movsb
inc
pop
mov
ja
aas
adc
jne
push
int
push
sbb
stos
ud1
push
call
jmp
xchg
daa
xchg
jo
push
push
fcmovb
jae
clc
outsl
dec
and
xor
call
outsl
xchg
cmpsl
cli
insl
mov
sbb
pop
or
or
aam
leave
je
testl
xor
out
pop
ret
pushf
adc
mov
data16
out
lahf
call
inc
pusha
jg
call
cmpsl
sbb
addr16
scas
jmp
mov
mov
rcrb
add
mov
sahf
fmull
lret
sub
mov
xchg
in
sbb
mov
pop
sub
cld
incb
xor
push
adc
inc
enter
push
dec
xor
outsb
cwtl
sub
cmpsb
loopne
call
cmp
movsl
jne
jne
pop
outsl
jmp
outsl
jb
xor
inc
inc
decb
sub
sbb
mov
xor
and
inc
addr16
ds
movsl
mov
mov
sub
bound
jg
pop
xchg
fnsave
test
jne
ud0
xchg
xchg
or
sti
test
cmp
fisttps
jbe
divl
clc
mov
mov
sarl
mov
or
rcl
cs
in
jns
mov
mov
lcall
inc
or
mov
lret
insb
out
xchg
stos
or
dec
es
mov
inc
dec
inc
loop
lock
mov
mov
lret
jmp
mov
fildl
insb
stc
shrb
mov
loop
add
ljmp
out
dec
cli
and
adc
iret
stos
jbe
xchg
clc
lret
dec
add
fiaddl
xchg
js
insl
inc
or
sub
ja
nop
mov
lahf
test
in
push
pop
inc
inc
mov
cmpsb
push
add
repz
and
pop
jp
cltd
mov
test
dec
push
add
or
jnp
ljmp
or
insb
out
scas
mov
lods
sti
sbb
and
pop
shr
das
and
mov
adc
lods
lods
mov
mov
xlat
lods
jmp
push
aas
stos
or
clc
adc
push
sbb
ss
mov
jmp
lock
and
xor
rclb
pop
loop
test
cmp
sub
add
xchg
sub
mov
inc
popl
sar
fldenv
push
push
pop
sbb
addr16
lods
jecxz
push
adc
das
shrl
mov
int
fidivl
shrb
adc
loop
mov
adc
add
push
ret
push
adc
outsl
mov
loop
iret
fsubp
and
mov
cmp
cmc
stos
xor
or
lcall
or
daa
xor
or
pop
mov
jle
movsb
xchg
shlb
mov
jno
div
ja
push
call
popa
movsl
xor
mov
lret
pcmpeqw
icebp
mov
sbb
lods
repnz
pop
inc
in
jp
fcompl
stos
js
scas
lods
jle
and
test
push
mov
fsin
in
mov
xor
push
mov
repz
in
adc
or
into
jg
loopne
adc
das
lret
mulb
pusha
cmpsb
test
shlb
andb
mov
call
push
movsb
int
push
pop
jns
fs
jp
or
cld
jmp
lock
clc
nop
inc
cmp
lea
les
sbb
sti
mul
dec
jg
stc
scas
mov
cmpsl
into
add
std
and
pop
stc
jp
outsl
fdivs
inc
mov
mov
call
jbe
enter
subl
mov
sahf
push
xchg
fnstenv
cs
adc
das
lds
pop
sbb
repnz
or
mov
mov
sbb
sub
pop
adc
and
es
xchg
loope
pop
mov
pop
idivb
mov
stos
movl
pop
pusha
stc
xchg
pmulhuw
ds
test
adc
push
dec
dec
les
adc
les
lret
xchg
imul
lods
inc
and
stos
push
xor
cltd
out
fmull
ret
test
adc
clc
mov
push
sbb
sub
mov
push
fstl
lea
dec
dec
gs
pop
xchg
in
mov
push
or
clc
pop
divl
ret
jns
push
gs
les
bound
inc
test
xchg
pop
jle
add
scas
fldl
xchg
shlb
cmpsb
aam
mov
leave
pop
inc
sbb
cmpsb
or
fcmovb
pop
sub
push
shr
xchg
nop
and
les
jbe
or
mov
into
mov
out
cvtps2pi
insl
xchg
jle
icebp
adc
pop
jmp
loop
popf
pop
stos
add
cmpsb
stc
lret
or
ret
pop
sbb
ret
fistpl
pushf
push
mov
cmpsl
jae
push
sub
movb
leave
movsl
pop
lahf
push
xchg
roll
cmp
std
cli
cmpsl
or
mov
pop
dec
xchg
ljmp
js
pop
push
sub
loopne
push
cmp
stc
lods
pop
jo
aad
xor
inc
pop
pop
aas
div
sbb
push
xchg
outsb
xor
dec
sbb
call
outsl
adc
outsb
rorb
push
push
sti
fnsave
fildl
dec
insb
cmp
sbb
sub
fsubs
push
arpl
pop
inc
push
imul
mov
aad
rorb
loopne
pop
fsubrs
mov
addl
fwait
fs
cmp
out
mov
mov
xchg
shll
pushf
lds
lret
push
inc
popa
adc
out
cli
loope
jecxz
cwtl
in
sbb
scas
ds
shrl
inc
leave
push
mov
inc
inc
aaa
fdivrs
lcall
and
popf
jle
dec
mov
pop
jo
xchg
inc
inc
dec
push
subl
jg
xor
ret
push
lods
inc
ja
fs
repnz
dec
cmc
mov
popa
inc
jns
xchg
out
push
xchg
xor
repnz
push
aad
add
rol
push
inc
xlat
sbb
daa
pop
push
xchg
out
popl
xor
mov
call
xor
jle
das
mov
sbb
popf
mov
adc
and
ret
test
fdiv
mov
add
mov
pop
or
mov
add
mov
sub
mov
jns
xchg
cmp
inc
pop
sbb
shl
jno
pushf
test
mov
imul
insb
js
add
int3
sub
dec
mov
mov
jmp
sub
iret
idivb
mov
sub
in
sub
gs
ljmp
adc
xor
enter
and
fcomp
adc
scas
cmp
imul
in
lds
pop
rorl
cmp
addb
fnstcw
clc
mov
fs
mov
scas
ja
pop
call
cltd
repz
push
mov
mov
push
pop
out
lods
sub
pop
arpl
lcall
movsb
out
rolb
adc
cltd
mov
mov
mov
jae
into
adc
mov
push
lret
sub
jge
in
sbb
rolb
ds
lods
adc
ja
ret
or
adc
pop
leave
xchg
je
adc
clc
pop
cmp
sub
and
nop
jns
xchg
jp
add
cmp
jp
test
and
pop
out
mov
jl
adc
stc
and
jns
out
xor
mov
adcb
push
data16
fimull
rcll
mov
sbb
or
pop
or
ljmp
lret
xchg
add
cmp
stos
fs
stos
negb
jecxz
into
lods
pusha
test
dec
arpl
sbb
lods
nop
sti
pop
movsb
into
inc
mov
ljmp
sub
sub
ja
add
or
ret
inc
icebp
add
stos
stos
xchg
iret
push
or
scas
mov
into
mov
inc
cmpb
pushf
cmp
int3
pop
sbb
sub
aas
leave
add
xor
dec
pop
add
nop
add
out
push
in
jns
js
out
sbb
loopne
mov
jg
dec
mov
cltd
xchg
cmpsb
bswap
mov
cmp
cmc
jge
fisubs
mull
xor
jmp
mov
sub
inc
js
sbb
ss
adc
fsubrl
int3
imull
loop
loopne
sbb
stos
or
cmp
xor
add
dec
lret
jbe
push
test
dec
jp
fmuls
sub
les
ds
sbb
dec
testb
or
xchg
sbb
mov
icebp
into
les
fdivl
or
mov
aas
incl
xchg
mov
adc
into
or
push
pop
ret
sub
or
loopne
ljmp
sahf
sbb
adcb
dec
insl
stc
push
mov
push
into
adc
iret
stos
mov
in
sub
mov
fbld
mov
adc
sub
in
test
mov
das
in
jge
or
jo
inc
addb
imul
lods
addl
push
sub
inc
lret
push
push
jmp
pop
sub
sub
jp
dec
dec
movsb
mov
push
cli
test
xor
push
call
mov
movsb
jmp
jae
mov
pop
and
mov
inc
das
push
mov
out
xchg
rcl
and
xchg
cmp
je
cwtl
fildll
jp
cld
sub
cmc
call
lahf
gs
xchg
addr16
mov
les
dec
lret
push
cmpsb
fwait
xor
mov
jo
cmp
call
stos
mov
test
and
adc
pop
pop
imul
daa
pop
mov
fucomip
cli
insb
popa
in
jp
int3
popa
seto
notl
stos
xchg
dec
mov
std
cmp
pop
dec
mov
out
stos
fsubr
jg
adc
or
sub
jnp
and
aam
lcall
push
pop
aam
arpl
in
imulb
and
or
out
sbb
sub
test
and
daa
dec
in
xor
ret
sub
adc
pop
js
and
sub
mov
ljmp
mov
jne
add
jle
ja
lods
imul
and
sub
sub
shrb
cmp
cmp
cmp
cmc
stos
es
test
fcmovbe
adc
sbb
out
mov
xlat
cmp
stc
cmp
lcall
into
fidivrl
ret
sahf
popf
xchg
pop
mov
pop
dec
xchg
xor
sub
push
xor
dec
shlb
adc
outsl
push
dec
sarl
lret
aam
dec
pop
jo
adc
mov
cvtps2pd
dec
insl
pop
adc
push
push
dec
cmp
or
mov
fnsave
orb
xor
sbbl
cmp
mov
mov
xor
xchg
push
pop
cmp
sbb
mov
jae
push
pushf
dec
add
ja
int3
jbe
gs
insb
enter
movsb
jecxz
sub
in
aad
mov
les
adc
and
test
or
xor
push
sub
mov
mov
cmpsb
imul
xchg
cmp
dec
fucomp
cmp
es
ss
sub
popf
mov
in
xchg
xor
jg
xor
pop
sub
add
aad
xchg
cmp
pop
cli
pop
dec
pop
inc
movsb
rclb
repz
call
mov
fdivrl
pop
xor
adc
sub
xor
or
cmp
test
lahf
mov
and
jns
repnz
xchg
pop
mov
fldcw
adc
add
xchg
out
imul
xchg
jg
aaa
jo
pop
mov
int
xchg
push
inc
add
pop
xchg
lea
cmp
inc
scas
aas
out
in
stos
cmpsl
movswl
mov
or
fsubrs
push
cmp
and
adc
xchg
jle
mov
mov
nop
and
mov
mov
cmp
jne
jmp
cmc
jae
xchg
push
insl
fucomip
stos
fdivrl
xchg
ret
push
mov
xchg
inc
lods
mov
es
lds
or
imul
out
jg
ljmp
sub
mov
pop
push
cmp
popa
inc
mov
mov
leave
jp
mov
mov
lahf
sub
jl
out
jne
fnsave
popf
imul
xchg
push
aad
out
pop
sahf
inc
dec
cld
aam
jo
xchg
in
xor
or
mov
clc
jb
jmp
dec
rorb
xor
loopne,pn
mov
xchg
xchg
call
sub
sahf
xchg
test
test
add
loopne
add
sbb
mov
or
stos
aaa
loopne
data16
mov
into
popa
mov
push
loope
push
sahf
jg
lahf
out
sbb
cmp
orl
sbb
movsl
cmpsl
add
clc
and
fadds
es
ss
stos
out
push
movsl
jb
fwait
or
pop
xor
aas
xor
cmp
jae
push
inc
sub
mov
mov
sahf
fnsave
jns
jns
pop
inc
fwait
cmc
push
mov
xor
lcall
andl
movsb
loop
mov
cmc
xor
push
push
mov
mov
inc
xchg
add
jl
hlt
push
dec
add
dec
test
jl
sbb
mov
jg
push
inc
xlat
lret
cmc
xchg
jmp
stc
or
mov
cmpsl
jl
push
push
daa
sub
sub
js
shlb
sarb
mov
cmp
jo
mov
jb
sub
add
rcrb
xchg
ds
jne
popf
pop
scas
cmpsl
adc
cmc
fwait
mov
sbb
loop
cwtl
popa
das
mov
cld
clc
xchg
testb
xlat
mov
sub
sub
loop
adc
inc
test
ljmp
lea
cld
ficompl
push
sbbb
or
mov
add
xchg
jg
ds
sub
xchg
aaa
xlat
cmp
out
push
mov
xchg
into
mov
insb
scas
push
negl
sub
jne
fwait
enter
fstpt
cmp
sbb
xchg
push
inc
jnp
and
push
dec
repnz
jns
xchg
test
loope
and
movsl
adc
aad
adc
outsb
mov
jno
inc
sbb
out
xchg
cmp
iret
sub
insl
insb
pop
adc
mov
or
and
add
jne
mov
sub
imul
loope
mov
into
pop
dec
and
cwtl
test
jns
or
mov
sub
fcoml
addr16
and
push
ficoml
std
lret
mov
jb
stos
adcl
sub
lods
dec
and
inc
xchg
andl
outsb
sub
add
clc
adcb
push
push
and
pop
rcll
dec
add
out
mov
adc
dec
xchg
jl
jns
fcompl
out
lcall
and
fildll
cld
dec
inc
mov
js
dec
cmp
xlat
arpl
shrb
and
sbbb
xor
imul
loop
xchg
inc
into
adc
xor
icebp
pop
ljmp
lea
push
lret
mov
mov
mov
lahf
popf
iret
in
xchg
sbb
lret
jmp
or
jns
stc
pushf
lea
int
dec
jns
push
ret
pop
in
mov
jl
and
out
rclb
or
mov
push
daa
shll
ret
sbb
xchg
and
jmp
jo
mov
popf
mov
add
fwait
cmp
hlt
pop
ljmp
sub
data16
inc
jns
sbb
insb
fwait
and
stos
pop
jns
test
std
stos
cmc
arpl
mov
add
xchg
clc
add
popa
xor
sub
and
pop
push
pop
shll
add
stc
or
fwait
or
jecxz
cmc
jae
sbb
mov
inc
jae
fsubrl
push
jne
mov
adc
cmp
mov
dec
mov
xchg
mov
inc
mov
xor
add
mov
insl
mov
xchg
shlb
mov
loopne
js
rorl
mov
xchg
lds
sti
std
mov
rolb
std
cs
lcall
mov
divl
jle
pop
inc
pop
call
sbb
mov
jbe
inc
jnp
and
pop
xchg
xchg
mov
xor
sahf
mov
jno
or
mov
sahf
pop
push
add
cmp
fnstsw
out
xor
je
mov
sti
insl
or
xchg
and
inc
push
je
xor
cmp
pop
pop
xchg
sbbb
loope
inc
jmp
call
dec
xchg
push
pop
loope
add
testl
pop
stos
pushl
daa
dec
push
pop
jecxz
inc
mov
lret
aam
loop
outsl
stos
ss
mov
pop
and
loopne
cmc
gs
cmc
xor
dec
add
jmp
mov
leave
push
fidivs
push
pop
add
testb
aad
dec
xor
add
or
cmp
mov
pop
repnz
pop
or
and
and
jb
cltd
xorl
loopne
js
and
mov
adc
inc
cwtl
ja
out
je
repz
lcall
and
xor
sub
sbb
fstpt
xchg
lcall
into
jge
cmp
fdivr
iret
pop
xchg
adcl
lock
mov
sahf
nop
mov
xorb
xor
test
mov
and
je
push
jo
loope
xchg
xor
mov
dec
xchg
cmp
sub
nop
andb
inc
in
cmp
sbb
rorl
fsubrp
jmp
adc
cli
inc
lcall
ss
mov
jno
xor
aam
jp
dec
xor
mov
lret
dec
into
sahf
lea
push
into
sbb
ds
loopne
stc
ss
lahf
add
sbbl
xchg
addb
fidivs
negb
xchg
ss
icebp
hlt
jno
dec
lock
stc
or
sub
test
dec
stos
xchg
sbb
lret
dec
fcompl
in
outsl
fwait
jne,pn
inc
std
or
mov
sti
pop
loop
rolb
pushf
insb
stos
xchg
shlb
push
xlat
daa
or
push
mov
stos
mov
insl
leave
sahf
ss
das
dec
xchg
rcrb
push
dec
test
jbe
pop
and
in
jl
dec
or
fdivs
cld
jns
adc
imul
fucomi
pop
sub
mov
xchg
lret
mov
mov
sbb
or
incl
mov
add
adc
mov
or
sbb
mov
mov
pop
out
adc
jb
test
mov
jns
popf
filds
lret
push
xor
mov
fs
adc
add
lret
cltd
pop
int
mov
pop
cmp
cmp
fs
and
rorl
lods
xor
dec
stos
aaa
dec
jmp
mov
cmp
out
in
mov
ja
vpaddusb
data16
out
mov
in
ss
in
mov
sti
mov
jmp
stos
nop
adc
fmull
testb
int
jb
negb
into
dec
inc
aad
or
cmpsb
repnz
andb
repz
stos
jbe
cmp
stc
lods
ret
into
fisubrl
mov
nop
push
or
stos
sti
out
sbb
add
jmp
fiaddl
cs
ror
ljmp
xchg
cmp
add
out
and
test
sbb
or
out
mov
scas
jmp
rcll
xor
inc
test
xchg
sarl
js
rorb
jmp
jle
xchg
insb
and
and
sbb
stc
push
stos
test
addr16
sub
cmc
mov
popa
ret
xchg
add
and
outsl
cmpl
jle
add
nop
lods
sub
loop
lds
out
lret
jno
movsl
adc
or
les
xchg
push
jnp,pn
sub
inc
pop
xor
inc
sub
adc
insb
andl
adc
xor
movsb
pop
loopne
mov
scas
sub
dec
sub
dec
xchg
mov
mov
mov
dec
sub
push
mov
js
test
adc
mov
and
cmpsl
inc
and
sbb
andb
adc
dec
out
jns
cli
push
sub
hlt
or
pusha
push
iret
jl
jns
fs
jae
jecxz
rcl
add
ffree
orl
test
xchg
or
jecxz
mov
arpl
pop
leave
in
clc
loope
call
xor
cld
in
push
aaa
and
out
xor
ror
out
cmc
fisubs
and
and
xor
adcb
pop
scas
pop
lods
jne
or
ja
lea
or
pop
int3
movsb
aam
mov
lock
jbe
and
sub
popf
add
dec
filds
inc
or
push
shlb
test
cli
adcb
sub
daa
or
xchg
stos
mov
pop
or
dec
pop
mov
int
mov
or
movsb
mov
push
mov
lods
bswap
inc
inc
movsb
or
pop
push
dec
dec
lds
lcall
ja
addb
insb
cmp
sbb
cmp
adc
repnz
mov
add
sbb
outsb
int3
pop
fadd
sbb
sbb
vmread
push
or
adc
pop
adc
jne
stos
es
sbb
arpl
push
mov
hlt
test
dec
push
shlb
in
icebp
mov
or
ret
subl
and
mov
mov
lea
and
out
lret
sbb
cld
rcrl
cmpsl
aam
jge
push
inc
xor
or
shll
lods
pushf
cmp
arpl
fs
xchg
pop
stc
sub
les
xchg
es
dec
or
repnz
rolb
cmp
lock
adc
mov
outsl
sub
dec
or
aaa
or
imul
jge
xchg
imul
mov
daa
mov
add
addr16
cmpl
xchg
cmp
stos
idivb
jmp
sti
fs
pop
and
test
sti
fstps
cwtl
sti
rclb
add
push
adc
cs
rcrl
add
adcl
mov
xchg
bound
repnz
in
mov
aam
push
popf
mov
xor
push
push
dec
mov
pushf
mov
or
ja
fistps
jae
movl
movsb
cmpsl
shll
sub
insb
adc
enter
xor
cli
inc
pop
outsb
hlt
movsl
ds
or
aas
push
fdivrs
mov
cwtl
out
push
add
jp
sbb
and
ret
xchg
xchg
dec
movsl
fidivl
ljmp
jno
arpl
sar
cltd
les
adc
rcrl
aam
orl
mov
push
adc
sbb
nop
jecxz
mov
int
xchg
jle
sub
cltd
stc
imul
arpl
pop
insl
addr16
pushf
push
repz
and
mov
outsb
icebp
mov
fistl
notb
pop
orl
xchg
sbb
scas
mov
orl
sbb
jmp
aad
int
scas
movsl
dec
mov
mov
and
xchg
mov
push
mov
adc
arpl
mov
rcrl
mov
btc
adc
push
push
push
jbe
dec
ljmp
jecxz
movsl
shl
dec
aad
repz
jae
mov
and
dec
sbb
push
xor
dec
sbb
fdivs
mov
lods
jo
mov
xchg
out
xor
xor
mov
rcll
sbb
add
lock
jl
out
xor
inc
aaa
jecxz
and
sbb
fcom
mov
push
movaps
lock
shll
push
adc
pop
pop
jmp
jecxz
jp
nop/reserved
popf
in
out
jl
and
push
int
fidivs
popf
fldl
mov
lock
sub
call
cmp
ja
gs
loope
xchg
cltd
lds
xchg
sub
and
in
ss
icebp
mov
daa
xor
xor
jb
and
or
sbb
std
test
pop
push
xchg
dec
mov
push
and
add
xchg
jge
shl
ret
mov
inc
sbb
push
mov
mov
aaa
xor
pop
ljmp
dec
imul
add
arpl
pop
fisubs
jp
inc
test
andl
mov
lahf
add
inc
into
adc
or
push
cmc
jnp
and
inc
sbb
mov
push
aas
cmp
jle
add
mov
mov
pop
icebp
adc
fimuls
jb
jle
popa
sub
cs
or
jge
gs
pusha
sub
xchg
jge
filds
fnsave
pop
jbe
data16
cwtl
pop
push
xor
fisubrs
pushf
add
push
stc
inc
mov
fidivrl
mov
mov
pop
div
js
cmc
ss
dec
stc
and
push
adc
cmpsl
dec
jae
inc
cmp
mov
iret
rorl
dec
hlt
in
jmp
sbb
mov
js
call
std
mov
cli
adc
xchg
jg
xorb
jge
mov
xor
ja
out
sti
shll
xchg
mov
repnz
in
into
clc
pop
inc
and
push
jp
pop
push
into
out
lret
pop
dec
dec
nop
cmp
ljmp
mov
into
popf
mov
mov
sbb
mov
or
data16
xchg
sbb
jnp
jns
xchg
popf
nop
in
adc
stos
and
or
lret
xor
jb
pop
fsts
sub
test
sti
xor
ja
jbe
cmp
gs
xor
inc
lea
sbb
addr16
sub
push
lods
jnp
add
jb
mov
push
push
insl
sahf
faddl
es
xor
xchg
sub
mov
jp
push
jecxz
pop
push
inc
lcall
sub
addr16
push
leave
cmp
cmp
xor
dec
mov
add
insb
cmpl
jge
dec
pop
loope
fsubl
jne
ja
mov
xchg
jbe
ret
lock
out
pop
fcmove
mov
inc
jo
mov
jmp
jmp
mov
mov
push
or
mov
xor
sahf
mov
mov
add
push
adc
sbbb
mov
mov
xchg
aad
inc
aas
shlb
xor
scas
mov
cmp
inc
scas
daa
fbstp
xchg
jne
stos
pop
pop
jo
push
rolb
in
push
shr
cmpl
ljmp
out
stos
add
pop
arpl
stc
cmp
and
fiadds
lea
loop
sub
push
mov
fidivrs
stos
dec
ja
sbbb
jge
jbe
jns
fwait
mov
jp
or
mov
inc
mov
mov
std
fwait
lods
js
stc
jge
aas
stc
push
dec
push
and
xchg
adc
ret
add
push
push
fsubs
jb
pop
add
add
enter
and
mov
sbbb
or
or
pop
ficoml
or
je
sbb
cmp
adc
jbe
shll
rorb
sahf
mov
dec
or
into
cmpsb
clc
mov
ds
lea
into
imul
inc
mov
sbb
jno
sbb
nop
out
ss
xchg
mov
orl
aaa
decb
or
mov
adc
insb
fidivs
mov
test
push
sarl
and
int3
pop
mov
adc
andb
lahf
dec
jmp
hlt
mov
lahf
je
bound
pop
test
popf
fisttpl
mov
test
loope
dec
call
dec
shlb
push
sbbb
lahf
xchg
loop
jl
jg
mov
push
or
inc
xchg
jno
pop
sbb
xor
stos
dec
pop
das
jecxz
lock
mov
mov
in
mov
push
inc
ss
cmp
cmp
fsubs
jmp
in
and
pop
sub
ljmp
mov
pop
loopew
xchg
in
into
xchg
jae
notl
inc
fwait
xchg
inc
and
test
iret
cmp
adcl
push
loopne
lods
gs
les
dec
jae
pop
movsb
les
pop
pop
fmul
push
sarl
and
mov
arpl
aam
jge
jp
mov
cmpsb
or
sub
push
imul
fistl
js
sub
mov
std
adc
test
inc
push
movsl
scas
xchg
xchg
dec
jo
mov
lock
in
and
mov
pop
xor
insb
xor
sbbb
pop
mov
add
and
shlb
cmp
jnp
pop
mov
sbb
pop
mov
in
hlt
dec
push
sub
xchg
dec
jle
mov
testb
cmpsl
pusha
mov
add
loop
and
lods
and
loopne
pop
push
neg
dec
mov
stos
dec
push
or
fadd
sbb
mov
loope
cmpsb
dec
test
dec
or
sbb
insl
outsl
xor
call
jge
test
mov
bound
sti
fwait
cmp
mov
mov
fwait
jg
leave
jae
jno
push
ja
fwait
out
and
mov
insl
adc
in
mov
fstpt
xor
jo
cld
enter
and
fiaddl
pop
ret
pop
insb
es
into
icebp
adc
jp
add
xchg
lahf
push
xor
adcb
shrl
bound
stos
hlt
push
lret
mov
aam
xchg
sbb
lea
ss
iret
rcrb
xor
fnclex
jl
jg
push
inc
adc
leave
test
xor
repnz
test
pop
cmp
repz
imul
adc
dec
xlat
sub
scas
or
pushf
push
mov
cli
adc
push
shlb
mov
xor
cmc
mov
sbb
call
sbb
and
cwtl
sub
aas
stos
cmc
pop
push
inc
jo
jmp
dec
cltd
stc
ds
stos
stos
add
dec
xchg
jle
push
sbb
js
or
ja
sbb
cmp
and
cmp
scas
movlps
pop
movsl
sub
js
mov
leave
sahf
add
int
jmp
cwtl
mov
fwait
jne
int3
insb
mov
out
stc
xor
adc
movsl
in
sub
push
cmpsl
out
ror
dec
inc
pop
mov
inc
call
add
mov
dec
sbb
sahf
mov
inc
sbb
jle
xchg
cmp
mov
mov
mov
xchg
cltd
hlt
and
mov
cmp
das
test
addl
adc
cs
insb
xor
or
in
pop
cld
sbb
cmpsl
imul
push
pop
jne
push
pop
sti
push
xchg
addr16
push
fisubrs
loop
outsl
push
jl
loop
xchg
js
jno
iret
movsb
jo
std
jecxz
jnp
dec
in
jge
mov
mov
jo
or
mov
aas
popf
xlat
in
jno
cmovns
fists
in
aam
ret
xchg
lret
sbb
add
outsl
in
int3
mov
decb
aad
or
clc
ja
cmc
mov
and
add
inc
in
and
mov
xchg
mov
and
imul
adc
xor
xchg
pop
lods
sbb
pop
cmp
es
subb
stos
ret
xor
sub
mov
js
hlt
rcrl
bsr
stos
mov
cwtl
xor
aas
pavgb
jne
aaa
cmp
movsb
jle
dec
xchg
popa
rorl
xchg
mov
in
rclb
cmp
mov
adc
lods
push
enter
frstor
add
and
add
push
movsb
dec
mov
ficompl
and
loope
leave
js
add
lods
test
push
mov
cltd
sub
lock
ljmp
or
pop
cltd
xor
out
mov
daa
in
pop
loop
jb
mov
or
pop
and
rol
cmp
xor
lahf
insb
out
nop
pop
enter
stc
sbb
pop
loope
sbb
mov
mov
cmp
dec
int3
jbe
xchg
jns
stc
adc
jns
add
repz
fiadds
ret
je
cmp
pop
or
aam
and
push
cld
or
mov
mov
cli
push
ljmp
pop
xlat
jae
dec
jb
mov
rcrb
shlb
imull
pop
or
and
mov
cmpsl
mov
pop
add
sbb
js
mov
leave
hlt
jecxz
sbb
ret
jae
mov
pop
test
sub
ja
mov
dec
cmpsl
xchg
inc
push
mov
test
fchs
fwait
cltd
or
pushf
mov
or
in
jbe
and
mov
mov
test
xor
icebp
rclb
ret
fwait
divb
xor
cwtl
cltd
jg
lea
faddl
jne
pusha
test
sti
cmp
js
push
mov
push
loopne
clc
dec
sub
insl
loopne
mov
xor
adc
adc
push
je
inc
popf
add
inc
inc
sub
das
add
push
jmp
mov
adc
cmp
addr16
sub
xchg
fimull
jbe
scas
mov
xchg
push
cmc
pop
pop
sub
lahf
mov
adc
xchg
in
pop
dec
mov
dec
mov
addr16
repz
into
dec
pushf
mov
int
imul
test
loop
and
push
pop
dec
aam
loopne
or
dec
push
adc
arpl
or
fnsave
pop
fucomip
insl
inc
push
aam
push
mov
jmp
push
xlat
add
sub
test
jb
or
sti
in
out
pop
jge
les
test
push
cmc
push
xor
inc
jle
ljmp
std
mov
cmc
andb
movb
jmp
insl
clc
rol
sub
mov
fcoml
test
dec
adc
pop
dec
in
add
into
cmp
adc
fbld
pushf
xor
jmp
shll
sub
les
mov
dec
sahf
aad
push
movsb
decl
mov
xor
es
xor
and
inc
mov
enter
push
mov
sub
fidivs
mov
mov
dec
pusha
stos
and
xor
cmp
cmp
mov
cli
dec
adc
imul
out
lods
jne
dec
sar
sub
fsts
mov
mov
daa
inc
stos
add
pop
es
fwait
pop
movsb
push
jns
fidivrl
push
lock
mov
pop
xchg
mov
ss
or
push
sbb
mov
push
dec
pop
pop
cs
adc
outsb
adc
mov
loopne
mov
data16
jl
lahf
sahf
popf
shrb
and
jbe
iret
and
fsubl
xchg
inc
outsl
push
inc
adc
xchg
mov
pushf
repz
jo
iret
pop
cmpl
xlat
hlt
shufps
dec
fimull
mov
pushf
and
test
ret
or
cs
sbb
mov
test
stos
xchg
ss
adc
jp
mov
jns
sbb
cmpsl
aam
outsb
cmp
aaa
pop
fcomps
push
lcall
xchg
push
add
mov
add
and
out
lret
mov
cmp
jb
movsl
aaa
add
mov
stos
mov
ret
in
mov
daa
sbb
mov
add
imul
imul
jns
ss
push
xchg
add
test
int
xorb
fistps
dec
jbe
xlat
adc
fildl
adc
mov
mov
pop
scas
jo
sub
adcb
ljmp
sbb
and
mov
out
jae
pop
mov
jnp
subl
jmp
shl
adc
dec
pop
jmp
xor
inc
inc
mov
push
xchg
outsl
pusha
jno
out
dec
dec
popa
lods
mov
push
pop
pop
dec
fld
mov
fsubl
or
pushf
int3
mov
mov
mov
stos
sbb
inc
pop
or
test
sub
scas
cmp
mov
mov
add
add
cmpsb
in
pop
mov
jle
insl
jmp
and
cmp
les
rolb
push
sbb
jne
xchg
int
mov
mov
cmp
pop
pop
mov
jb
cwtl
and
sub
mov
or
pop
out
sub
or
inc
xchg
pushf
xchg
and
lret
lods
sbb
pop
pusha
adc
sbb
dec
scas
and
sbb
bound
jne
test
imul
jno
inc
sbb
pop
jecxz
mov
lahf
mov
mov
into
xchg
sub
mov
mov
xchg
or
sbb
cmp
stos
addr16
and
jmp
jno
inc
dec
pop
gs
sub
push
or
adc
add
cmpsl
mov
mov
fists
pop
fwait
pop
push
ljmp
int3
sbbl
pop
enter
mov
movsb
or
das
mov
mov
and
inc
cmp
xchg
in
cmp
push
shlb
stos
repz
cmp
or
push
pop
cmp
xchg
mov
rol
adc
cltd
rol
fsubl
outsb
jl
neg
jp
addb
jbe
cmp
jnp
in
adc
out
mov
push
xchg
shlb
enter
lcall
dec
adc
loop
lret
adc
arpl
imul
cs
aaa
lea
sarb
loopne
bound
pop
and
pop
out
negl
adc
sbb
dec
out
add
cs
xchg
sbb
gs
jne
mov
pop
enter
xchg
sub
inc
test
push
pusha
and
call
loopne
add
cmc
jp
xor
mov
mov
add
xchg
pop
addr16
mov
daa
imull
and
dec
cmpsl
aam
outsl
bound
jb
imul
fdivs
jb
inc
int
push
or
je
je
cli
inc
clc
inc
mov
adc
push
outsl
fcoml
lcall
lcall
adc
dec
jl
in
das
rcr
popf
jnp
xrelease
mov
xchg
cmp
outsl
push
stos
fdivrl
outsb
and
push
fnstcw
movsl
jge
jecxz
popf
and
sub
hlt
test
insl
outsl
or
js
jmp
subb
ret
inc
popa
rdpmc
jmp
shrb
popf
mov
lcall
mov
popf
int
mov
pop
push
out
push
aam
lods
call
jle
or
sbb
inc
xchg
and
js
enter
insb
inc
lock
xor
pop
jns
sbb
pop
mov
xor
stos
lret
sub
rcll
ret
xor
fwait
cmp
je
ror
pop
or
pop
rolb
fs
jl
mov
bound
mov
xor
jns
cmpsb
addr16
sub
adc
xor
cli
popf
shll
mov
subb
loop
out
mov
rclb
sbb
xorb
insl
jbe
test
adc
imul
cld
rcrl
or
jle
push
les
das
push
ja
mov
mov
sbb
repz
sub
mov
and
jg
xor
mov
or
dec
inc
and
inc
popw
pop
test
ret
xchg
pop
out
imul
pop
popa
shr
mov
dec
lea
rcll
sbb
mov
pop
adc
or
jg
mov
and
or
sbb
pop
lds
cmp
push
jp
pop
loop
shlb
icebp
mov
pop
mov
inc
push
std
jbe
sbb
adc
lods
add
adc
nop
repnz
mov
adc
push
xor
jmp
ret
inc
dec
test
add
sar
push
insb
dec
xchg
in
cli
pop
lret
hlt
popf
xor
jae
adc
mov
pop
ja
pop
pop
push
xchg
jo
xchg
outsl
sub
sahf
imull
dec
enter
cmpsb
shrb
xchg
fcoml
sbb
sub
add
popa
jo
push
inc
add
fidivrs
push
mov
sbbl
iret
pop
mov
jns
test
mov
loope
fisubs
cmp
dec
test
mov
icebp
dec
aas
addb
mov
cmp
lret
fcoms
lcall
mov
xchg
dec
push
fucomi
ss
movsb
fsubrs
addr16
dec
adc
sbb
mov
mov
mov
dec
push
and
rorb
add
enter
adc
test
cmc
jbe
gs
xor
insb
cmp
mov
shll
mov
jno
pop
ret
jae
push
in
ja
js
into
fwait
cmp
inc
lds
icebp
fdivs
mov
fmull
sub
fwait
loope
into
pop
into
arpl
lods
in
xchg
mull
sub
das
sbb
call
aas
sub
test
mov
mov
cmp
sysenter
in
and
mov
gs
bound
and
fwait
push
dec
out
push
ds
ljmp
adc
xchg
popa
xchg
repz
js
ss
divb
sahf
insl
outsl
pop
mov
popf
or
mov
xlat
jmp
push
int
and
stc
inc
lret
test
imul
cmc
mov
dec
es
jmp
andl
loop
daa
or
or
pop
out
dec
cmpsl
mov
mov
rcll
mov
cs
aam
mov
or
pop
ror
pop
pop
testb
in
or
pop
xor
pusha
lods
push
xor
jae
inc
inc
inc
add
jle
jae
add
cmp
pop
hlt
in
inc
outsl
orb
int3
sbb
mov
sbb
in
sub
adc
sub
fcomi
pop
and
lods
test
mov
call
aas
in
divl
nop
lds
sarb
dec
mov
adc
add
sub
jbe
sbbb
sbb
pop
mov
inc
jg
mov
inc
and
mov
add
adc
cs
jmp
xchg
hlt
pop
mov
fs
jp
mov
sbb
call
sbb
mov
sub
mov
xor
loope
adc
inc
test
mov
xor
xchg
lock
push
and
xchg
ss
sub
jmp
xor
mov
mov
shll
test
ds
ljmp
xor
aas
hlt
decb
sub
mov
xchg
xor
loope
stos
dec
xchg
fwait
adc
and
push
jp
shlb
inc
sarl
je
repz
mov
orb
in
add
aam
sbb
mov
arpl
shlb
dec
jp
push
in
cs
sahf
test
inc
push
in
enter
dec
out
xchg
cmpsb
out
mov
mov
js
push
movsb
jge
mov
shll
sub
and
mov
jnp
lods
pop
add
push
mov
icebp
aad
insl
lahf
insl
xchg
sti
mov
mov
fistpll
mov
mov
jmp
push
cmp
mov
test
popa
jl
pop
cld
cmpsb
push
jae
sbb
jns
maxps
and
mov
jnp
jmp
mov
and
scas
hlt
and
xor
xchg
cmp
jno
stc
ret
inc
push
inc
rcll
push
dec
add
testl
addr16
jp
mov
std
push
mov
lcall
imul
stos
inc
int3
pusha
shrb
decl
dec
ja
mov
ljmp
std
cmp
add
lods
sarb
cs
xchg
inc
pop
cmp
jb
out
iret
out
mov
rcrl
mov
daa
xchg
lret
add
dec
jae
sbb
adc
movsb
ljmp
pop
adc
fisttpll
test
dec
addr16
inc
adc
nop
pop
sub
jo
sub
mov
hlt
dec
xchg
insl
pop
int3
nop
outsl
sbb
lahf
mov
popf
jno
and
sub
ret
mov
stc
daa
jmp
scas
fimuls
and
sbb
mov
ficoml
orb
lock
in
xchg
int
pop
int
xlat
int
add
jl
cmpsb
stos
push
dec
push
fcompl
lods
pop
push
fbstp
cltd
push
lods
les
aam
negb
xor
push
sbb
cmp
xlat
or
pop
sub
cli
mov
testl
lods
mov
sbb
fwait
jmp
pop
push
loop
andb
out
data16
jmp
cmp
loop
rorb
push
lcall
loopne
repz
pop
out
inc
mov
dec
and
push
pop
inc
pushf
jne
mov
sbb
rorb
stc
add
cld
fldenv
and
xchg
loop
jge
mov
dec
and
adc
dec
sub
popl
nop
aad
bound
ret
xor
cmp
inc
pop
mov
mov
clc
mov
adc
popa
or
in
jl
push
cmp
mov
adc
xchg
iret
sub
cmp
idiv
mov
pop
dec
add
push
mov
xchg
popf
ficoml
aam
lahf
sbb
inc
ret
mov
scas
cld
dec
gs
ja
popa
rclb
inc
add
test
adc
pop
push
movsl
mov
mov
pop
jb
mov
jp
bound
scas
adc
inc
jecxz
cld
insl
mov
sti
movsb
cmp
sahf
call
xchg
ror
mov
cwtl
aad
push
ja
fstpl
loope
sub
addr16
pop
test
and
pop
add
ds
fmull
int
mov
adc
add
xlat
insl
lcall
push
icebp
ljmp
inc
xor
inc
dec
or
and
sbb
mov
mov
lret
enter
je
sti
out
pop
cmpl
cmp
std
xor
push
lret
int3
mov
cs
aaa
roll
adc
cltd
fcompl
sub
push
adc
scas
test
xchg
dec
iret
xchg
push
xchg
push
mov
icebp
xor
mov
in
je
scas
ds
mov
sub
int
pop
inc
inc
push
adc
xor
mov
popa
sub
adc
js
int
push
rcrb
add
dec
testb
jno
ljmp
cmp
xchg
push
xchg
data16
outsb
mov
inc
pop
xor
pop
sub
cmp
mov
lret
adc
cmovae
mov
xor
xchg
lds
stos
ret
add
out
xchg
xor
xchg
xor
cmpsl
push
das
scas
fnstsw
and
movsb
out
and
add
iret
mov
ss
ret
outsl
outsl
les
jge
pop
lds
cmpsl
ret
sti
das
pop
aam
test
pop
xchg
jmp
ror
lock
jne
cmc
clc
mov
lea
roll
mov
mov
mov
and
add
xchg
stc
mov
push
cli
movsl
adc
pop
jnp
je
xchg
jns
mov
fildll
cli
fwait
xor
mov
add
jae
sub
adc
ret
leave
inc
and
ja
shrl
aas
xor
repz
fwait
mov
inc
in
lret
push
adc
div
push
sbb
out
jno
jbe
mov
xchg
xor
mov
out
or
push
dec
xlat
mov
cltd
stc
mov
repnz
cmp
out
jg
xor
push
pop
ds
int3
xchg
cmpps
jnp
sbb
imul
cltd
fcmovu
int
dec
push
repnz
xrelease
out
adc
cmp
mov
ret
mov
fisubrs
push
ret
pushf
hlt
rcll
aas
inc
faddl
jle
clc
jne
jmp
xor
cltd
addr16
jae
sar
dec
iret
or
cld
sbb
test
dec
icebp
xor
push
arpl
idivb
adc
mov
mov
or
or
mov
cmpsl
fmuls
test
cmp
add
test
int3
imul
aad
jg
jnp
in
scas
icebp
mov
xorb
sahf
jbe
adc
inc
popf
lds
mov
insb
in
jne
jno
add
int3
outsb
in
mov
pushf
inc
push
push
shr
out
ljmp
out
pop
lcall
addr16
jns
ja
insb
movsl
cld
sub
imul
push
das
mov
sti
sahf
mov
sbb
pop
add
adc
mov
out
imul
push
cmp
into
and
jmp
or
stc
mov
das
inc
push
jns
das
inc
mov
mov
mov
pop
fisubs
xchg
jg
jge
xor
gs
mov
iret
imull
stc
xor
dec
pop
mov
mov
repz
jge
pop
jo
movsl
cmp
lock
xchg
inc
xor
cli
dec
xor
mov
lret
filds
sbb
adc
lret
sub
cmp
push
ret
jle
out
and
scas
sbb
push
xchg
inc
dec
and
mov
sub
pop
sub
les
jmp
cld
adc
lret
xchg
test
mov
and
mov
inc
cmp
jmp
cmc
push
mov
sub
mov
xchg
cmp
pop
aaa
mov
mov
lods
sbb
data16
sbb
sub
mov
sub
in
sub
jle
adc
mov
sub
aas
and
fldz
pusha
push
jecxz
cmp
shll
mov
xchg
sub
push
aaa
cwtl
mov
decl
insb
addb
ljmp
cs
mov
lret
aas
loopne
pop
pop
in
inc
sub
cltd
pushf
inc
jecxz
sti
punpcklwd
xchg
or
sarb
pushf
cmp
sarl
sub
adc
sbb
popa
jmp
pop
sub
jge
fistpll
xor
xchg
jmp
and
pop
xchg
dec
cli
cmp
mov
gs
mov
lahf
nop
shrb
and
and
mov
mov
rcrl
sub
dec
dec
daa
cmp
lods
mov
shll
movsb
adc
mov
jo
sarb
fimuls
add
xor
sti
adc
mov
sbbl
sub
push
loopne
hlt
test
bound
mul
insl
add
leave
divl
push
clc
push
fidivl
test
sbb
test
sbb
call
ljmp
inc
fmul
sbb
les
outsl
lds
fmuls
jmp
pop
mov
jl
and
jecxz
add
ds
inc
mov
aam
mov
jb
cmp
movb
sbb
call
xor
inc
movsb
xchg
rcl
outsb
fdivs
aam
test
jecxz
mov
lea
mov
cmc
ss
cmp
repnz
jl
xorl
add
stos
mov
xchg
sbb
nop
stc
lds
fiadds
loope
ret
hlt
rclb
xchg
inc
test
inc
fldenv
pop
xor
fdivl
sti
lds
repnz
cld
fdivs
loop
add
mov
mov
test
popf
andl
mov
push
loope
fidivrs
fidivs
divps
test
enter
imul
mov
iret
push
scas
popf
rcrb
pop
pop
stos
leave
lret
dec
out
mov
xchg
imul
ds
push
cmpsl
enter
inc
fdivrl
js
test
dec
aas
out
mov
inc
sub
dec
lret
stos
movsb
pushf
add
nop
mov
outsb
xchg
add
pop
hlt
imul
ljmp
jmp
test
in
or
push
loop
adc
mov
into
push
push
xor
pop
cmp
dec
test
push
gs
sahf
mov
jl
push
and
enter
pop
jmp
xlat
add
jg
xor
inc
push
outsl
je
leave
stos
ljmp
stos
out
push
ds
dec
add
aaa
fnstenv
dec
add
pop
sbb
adc
paddq
inc
mov
ret
in
adc
push
shrl
mov
fisttpll
fdivl
lds
sub
insl
sub
or
push
daa
icebp
push
scas
mov
das
ficomps
fs
or
roll
notl
clc
fnstsw
xor
call
sbb
test
and
bswap
push
or
divl
jns
sub
mov
fidivrs
movsl
jns
scas
ret
push
pop
inc
mov
aam
jle
mov
lods
sub
fistpll
mov
cwtl
push
jnp
js
scas
push
std
pop
int
sbb
aam
jb
mov
and
xor
stos
mov
mov
loop
fs
and
pop
adc
test
xor
pop
test
xor
push
push
pop
sti
or
xchg
xor
cltd
test
sub
sti
aaa
xor
jg
in
jmp
clc
or
mov
pushf
xor
movsb
fcoms
push
je
jae
xor
pop
xor
pop
scas
or
push
mov
in
jge
mov
sbb
adc
ljmp
addr16
cld
mov
out
adc
int3
insl
cmc
sub
inc
notl
in
jmp
icebp
in
xor
inc
lea
daa
adc
imul
mov
cli
mov
out
push
hlt
push
fld
sbb
std
into
fisubrs
push
mov
imul
pop
sbb
xchg
or
aad
je
rcll
mov
mov
ss
insb
pushf
cmc
dec
push
lcall
rclb
add
loope
test
push
cmp
aad
sbb
sbb
shlb
mov
mov
stos
outsb
xorl
ss
cwtl
lods
dec
lods
xchg
sub
ret
mov
aad
cmp
or
cmp
lods
mov
jecxz
jg
jp
dec
adc
enter
mov
push
js
cmpsl
fnstcw
dec
inc
nop
push
cli
movb
fmull
popa
ja
push
inc
pop
sub
push
mov
push
push
fisttps
call
or
lds
jne
clc
stos
shll
cmpsb
sbbb
leave
adc
xor
push
xchg
sbb
jb
cmp
enter
mov
clc
mov
fmull
clc
out
int3
jo
sub
cmpsl
jb
pop
dec
xor
pusha
xor
or
fldt
xor
movsb
cmc
and
xchg
int3
in
xchg
test
test
fucomp
inc
lcall
ret
adc
lcall
imul
mov
adc
popf
mov
and
push
mov
xor
lea
xor
int
mov
adc
rclb
mov
push
jns
popl
xor
pop
sti
mov
mov
fists
xorb
out
sub
outsb
cld
shlb
and
insb
lds
mov
push
enter
loopne
xor
jns
adc
pushf
cmp
pop
shl
fstl
popa
add
push
push
std
mov
mov
push
fidivs
push
dec
test
and
add
fbld
inc
lret
cld
push
mov
fildl
xor
xchg
popa
pop
clc
aaa
ja
call
jg
psubsw
adc
stos
mov
and
out
jns
mov
jl
fbstp
sahf
lock
xor
push
out
lods
or
nop
jge
es
and
mov
movsl
mov
cmpsb
icebp
popf
shlb
pop
mov
cli
fstps
scas
arpl
ss
lods
push
sbb
popf
push
adc
or
inc
mov
rcrb
sub
mov
inc
add
into
pop
jmp
stos
inc
mov
sbb
mov
jle
mov
imul
or
push
mov
fnstenv
cltd
movsb
outsl
jmp
dec
mov
mov
fbstp
mov
cmc
mov
mov
push
cmp
stc
lock
stos
mov
push
mov
adc
jl
test
fistps
in
fxch
test
pop
seta
lret
push
sub
dec
fwait
imul
mov
add
mov
or
es
movsb
loop
mov
popa
testb
jo
clc
call
lcall
cmp
je
insl
das
stos
jge
push
mov
hlt
push
hlt
xlat
popa
cli
testl
sbb
and
pop
jbe
and
sahf
ret
pop
jp
mov
inc
aas
and
imul
loop
dec
sbb
pop
or
jns
gs
shr
les
add
sbbl
push
push
mov
cltd
js
aas
nop
push
or
xlat
test
mov
or
xor
lods
ss
fstps
in
xchg
stc
dec
jg
pop
xchg
add
inc
inc
push
pop
pushf
and
mov
cmpsl
movsb
sub
negl
sub
xchg
testb
js
mov
sub
mov
out
push
movswl
adc
and
aas
jp
and
add
cmpb
mov
cli
stos
nop
nop
clc
pop
fistps
mov
leave
repnz
dec
push
push
ds
mov
fsubl
and
cmp
mov
clc
cs
lahf
xor
dec
push
sarl
subb
movsb
xchg
jb
popf
mov
test
lds
test
cmp
test
mull
or
jns
or
dec
xor
int
arpl
sbb
in
stos
lea
and
daa
adc
mul
push
aam
xlat
mov
sahf
pop
inc
or
arpl
repz
das
daa
scas
cmp
pusha
inc
leave
aaa
or
daa
dec
out
mov
pop
ljmp
lock
xchg
mov
aam
lret
jmp
fstpl
mov
lea
clc
mov
jns
push
and
pop
inc
jle
addr16
movsl
addr16
push
cmpsb
xchg
jae
adc
adc
sbb
cmp
xchg
out
mov
imul
cld
inc
cmp
add
shrl
stos
jnp
push
call
adc
pop
mov
sub
arpl
or
imul
test
xor
ds
xchg
test
lret
out
sub
inc
jmp
or
repnz
sub
or
test
inc
sbb
and
into
outsl
divb
pop
popf
das
dec
daa
push
mov
daa
dec
inc
cmp
sub
sbb
lods
lret
dec
aad
outsl
out
sahf
fbstp
jbe
push
lret
sub
fpatan
out
dec
push
lock
xchg
or
sub
insl
aaa
fbld
jge
or
sti
fcoml
test
scas
stos
cli
fimull
add
call
inc
cmpsb
test
sub
xor
add
pop
or
mov
adc
mov
inc
repnz
out
out
scas
xor
imul
pop
lea
pusha
inc
xchg
jne
jno
pop
out
pop
leave
ficoml
test
jge,pt
in
mov
roll
dec
leave
outsb
into
dec
jno
popa
and
lods
aam
mov
pushf
inc
lods
scas
cwtl
push
leave
or
imul
xchg
mov
jns
xchg
pop
inc
mov
daa
cmc
fldt
insl
int3
test
xchg
add
lods
push
lock
sbb
xor
test
push
mov
outsb
aad
inc
xor
fisubrs
add
es
daa
bound
dec
xchg
cmp
addr16
popa
and
std
sbb
mov
xor
cs
jecxz
pop
fcompl
mov
cmpsb
gs
es
and
fldln2
lret
fadds
jmp
int3
int
ret
aam
js
repz
xchg
hlt
ret
adc
addr16
test
jmp
xor
push
cld
rorb
data16
cmp
cltd
negb
fsubr
sbb
mov
dec
call
xchg
andb
aam
icebp
sub
clc
push
jmp
push
push
cmp
pusha
dec
fnstenv
push
adc
sub
push
pop
mov
loop
nop
pop
mov
mov
push
shll
sbb
fnstenv
xor
nop
xchg
fs
inc
push
and
scas
cmp
xor
es
fmul
mov
ret
and
rolb
mov
dec
cltd
dec
pop
addr16
ficoml
addr16
push
lea
cmp
sarl
sub
cmp
mov
into
into
cmp
sub
mov
lods
aas
fidivrl
out
lods
adc
cmp
loope
jl
int
push
pop
test
adc
stos
cmp
jae
adcl
cmpsl
outsb
data16
daa
negb
mov
ljmp
inc
adcl
push
stos
mov
and
push
cmpsb
mov
cli
repz
mov
inc
out
setb
lea
cmc
add
in
rcrb
aaa
pop
fsubs
jns
loop
push
out
mov
adcb
jno
xchg
xor
adcb
jns
xor
xchg
adc
mov
pop
pmaxub
mov
dec
inc
and
cmp
je
ja
xor
ljmp
lds
xchg
dec
or
testb
mov
fs
sbb
sbb
adc
mov
adc
jp
cmpl
movsl
xlat
or
mov
xor
or
test
pushf
mov
rcr
or
out
jnp
popa
sbb
cmp
push
arpl
inc
add
and
pop
arpl
xlat
jne
imul
push
sub
xor
push
dec
dec
xchg
lahf
mov
lret
out
out
mov
aad
jmp
and
cmp
jge
arpl
fstps
push
enter
clc
lea
add
lahf
rorb
test
dec
add
loop
add
lock
aam
xor
in
push
outsb
loop
xchg
stos
repz
jo
popa
xchg
mov
mov
push
testl
stos
iret
and
xchg
cmpsb
ds
out
sbb
scas
inc
pop
mov
clc
lret
cmp
outsl
aad
and
or
cmp
fisubl
sub
cmc
test
push
ja
xlat
lods
jbe
and
roll
outsb
mov
push
jge
into
dec
xchg
inc
aaa
pop
int
xor
mov
inc
sbb
mulb
mov
lret
jno
iret
popa
push
mov
movsl
sub
xchg
iret
mov
inc
mov
mov
jecxz
aad
mov
cmp
fimuls
std
and
js
stc
jmp
sub
mov
shrl
xchg
cld
loope
mov
lods
pop
cmp
jmp
loop
in
xchg
imul
fnstsw
js
cwtl
jecxz
icebp
fdivrs
mov
movl
movsl
arpl
cmp
test
xchg
bound
out
es
pop
pop
call
mov
cmp
aam
adc
pusha
pop
adc
cmc
and
mov
std
push
into
cmp
sbb
inc
movsl
sbb
cmp
pop
pop
mov
push
dec
ja
adc
rorb
gs
mov
scas
cli
cmp
movsb
cmpsb
dec
dec
xchg
push
xchg
inc
data16
mov
les
jmp
jae
mul
js
mov
and
jle
push
out
imul
jb
scas
pop
or
imul
jb
mov
cltd
loopne
cmp
push
imul
mov
in
mov
inc
or
cmp
insb
mov
int3
mov
sbb
xchg
cmc
clc
mov
push
in
xor
loopne
scas
mov
adc
inc
jl
jo
xlat
inc
in
pop
sti
and
xor
and
iret
adc
dec
lret
in
fbld
inc
sub
adc
fistpl
stos
or
out
xor
add
aas
jle
mov
adc
add
jp
and
adc
aam
fsubrl
loopne
call
pop
inc
mov
add
mov
or
pop
or
test
sub
mov
in
add
imul
adc
sbb
pop
rolb
jne
xchg
das
adcl
out
fcmovu
iret
stos
addr16
sub
push
mov
lret
adc
daa
pop
imul
popf
shl
inc
popa
and
and
push
pop
cmpsb
sbb
dec
lcall
inc
xchg
icebp
sub
sub
inc
movsl
test
popa
in
pop
gs
movsl
fstl
sti
adc
xor
pop
loopne
dec
into
sbb
jg
jns
mov
filds
ret
push
out
mov
aas
clc
out
andb
arpl
imul
aas
ret
bound
pop
pusha
and
scas
popa
das
and
jmp
and
clc
mov
xchg
mov
ret
mov
jno
loopne
arpl
push
enter
sbb
push
jle
push
or
imul
lcall
stos
jno
aas
movsb
in
lcall
jne
mov
and
inc
mov
ret
int
scas
ret
mov
jae
in
or
or
dec
rol
mov
inc
leave
rcll
sbb
mov
lods
mov
nop
and
inc
xor
repz
adc
sbb
push
daa
push
or
jl
push
pop
testl
sub
adc
cmp
fcompl
sbb
sub
adc
leave
push
and
test
ljmp
inc
mov
pop
jmp
imul
orl
mov
shlb
dec
inc
call
inc
or
rdmsr
les
test
xor
cwtl
mov
pop
js
or
cwtl
test
sub
js
push
pop
push
sahf
inc
xchg
xchg
push
xorl
mov
xchg
jle
pop
clc
stos
arpl
adc
mov
ja
pop
icebp
shl
cmp
je
xor
or
mov
out
push
and
pushf
adc
pop
imul
jg
xor
outsl
jp
stos
shll
mov
clc
push
sahf
inc
mov
test
jns
and
mov
adc
add
shll
hlt
outsl
xchg
mov
clc
push
psrlq
or
imulb
data16
dec
xchg
mov
popa
add
mov
repz
mov
lahf
inc
xor
ljmp
es
rorl
cld
push
adc
dec
adc
out
aas
xchg
aaa
dec
int3
addps
es
mov
mov
jge
inc
and
pop
inc
dec
sub
mov
xchg
sbbb
rorb
mov
cld
in
jge
adc
pop
fdivrl
mov
ja
cmp
scas
jno
jne
xchg
insb
pop
outsl
mov
in
orb
cmp
push
mov
js
jp
outsb
mov
xchg
push
movsb
or
mov
outsl
je
scas
ljmp
jmp
sub
out
lret
cmp
xor
jecxz
xchg
pusha
out
pop
jmp
mov
sbb
sbb
sbb
icebp
fbstp
add
and
push
dec
cmp
or
inc
inc
xchg
mov
ljmp
push
int
arpl
call
je
add
sub
mov
in
mov
push
rorl
push
fisubl
add
mov
mov
aam
ljmp
les
lea
jl
inc
xchg
inc
arpl
test
jne
xchg
inc
jg
test
or
iret
mov
sbb
xor
rcr
rorl
push
aad
mov
sbb
ljmp
stos
cltd
mov
je
sbb
xor
shlb
push
mov
add
aaa
add
fs
fbld
movsl
mov
jnp
jno
hlt
jmp
idivl
and
xchg
out
push
cmp
imul
popf
adc
imul
les
push
test
pop
fs
jne
fdivrl
movsl
pop
jbe
in
into
add
pusha
jbe
adc
cmpb
lock
mov
int
jo
lcall
pop
mov
push
pop
ret
jmp
push
jne
dec
orb
call
push
pop
sub
jae
ljmp
imul
cmpsb
mov
fs
icebp
xchg
ret
pop
imul
mov
xchg
push
pusha
mov
xor
cmp
push
and
jg
es
cmpsl
mov
push
gs
inc
sbb
inc
movsb
cmp
push
push
cmp
unpcklps
dec
mov
arpl
pop
lea
dec
sahf
and
pop
fisubs
leave
cmp
mov
inc
orb
lods
jo
or
cmp
or
jno
cmp
jae
inc
xchg
cltd
fstp
cvtps2pd
push
lods
pop
decl
nop
out
movsb
mov
mov
jae
repz
out
cli
mov
jb
je
ret
dec
add
jnp
pushl
cli
sti
leave
mov
mov
jnp
or
ds
aaa
enter
ljmp
lahf
inc
pop
mov
push
cmp
sbb
cwtl
cld
lds
cld
push
lahf
push
ror
out
inc
add
add
fwait
pop
mov
inc
loope
jae
cmp
sub
imul
or
repnz
aas
xchg
jg
scas
imul
and
pop
out
bound
cmp
xor
and
mov
jle
inc
xor
mov
mov
pop
add
cmp
sub
dec
out
icebp
dec
adc
jg
or
xchg
add
mov
test
lret
push
fadd
lcall
lahf
and
dec
aaa
clc
add
mov
mov
mov
dec
enter
push
push
add
jl
aad
rol
xchg
cltd
ret
call
insl
shll
mov
sbb
xor
das
addb
faddp
mov
aad
xchg
mov
jno
movzbl
cli
into
push
cwtl
aas
add
rcr
dec
push
enter
out
int
inc
cltd
push
xor
sbb
lods
sub
outsb
pop
frstor
out
outsl
adc
mov
add
cmp
testl
jb
les
ret
inc
xor
cmpsb
and
addl
jnp
popa
inc
xchg
fistps
add
xchg
mov
aaa
push
jne
dec
mov
mov
dec
movsb
mov
mov
in
and
add
cmp
mov
gs
push
insl
repz
dec
std
xor
jno
adc
fstpl
outsl
push
stos
pop
fdivrs
sbb
dec
xchg
adc
dec
les
cmpsl
test
sti
fisttpl
aas
test
inc
sbb
ror
sbb
hlt
das
loope
cmpsb
popa
adc
repz
int3
clc
aas
divl
and
int
xchg
outsb
dec
aaa
in
outsb
nop
shrb
rclb
sbb
inc
push
je
and
xor
dec
fstpt
ficoms
xorl
mov
ret
adc
pop
xchg
mov
xor
imul
inc
ja
inc
faddl
test
out
popf
adc
adc
scas
lret
mov
ret
movsl
inc
add
sub
out
pop
fistps
repz
push
pop
and
adc
movsb
jo
cli
mov
add
fsubs
enter
cmp
mov
data16
imull
call
xor
mov
or
jg
push
xchg
pop
or
insb
js
add
xchg
pop
les
mov
mov
add
pop
xor
and
lods
pop
popf
mov
iret
mov
test
dec
cwtl
mov
cmp
xchg
adc
arpl
jo
lahf
in
fsubrp
popa
ljmp
push
mov
fists
sbb
and
mov
inc
movsb
cmp
insb
inc
popf
pop
xchg
sbb
xchg
cmp
or
sub
aam
pushf
and
and
xchg
dec
mov
mov
stc
push
insl
das
push
push
out
dec
inc
mov
stos
lods
jmp
out
lahf
data16
loopne
cmpsb
and
mov
scas
enter
sbb
jg
movsb
sti
ds
outsb
inc
xor
fsub
jbe
sbb
sub
aas
fs
sbb
cmpsl
push
lds
fdivl
jmp
outsl
ja
cli
shl
dec
add
cld
or
fcmovnbe
or
mov
xchg
je
dec
pop
xchg
add
jl
out
push
mov
or
imul
rolb
out
pop
vmptrld
lcall
sar
dec
cmpsb
sub
out
insl
cltd
mov
rcll
incb
mov
lcall
dec
or
jg
sahf
enter
push
push
xchg
fidivrl
jne
jle
test
icebp
mov
jp
push
lea
push
ss
sub
ja
dec
shr
inc
xchg
test
adc
iret
inc
dec
or
je
and
fnstsw
jecxz
enter
popa
push
jle
push
adc
stos
cmpsl
inc
iret
xchg
jecxz
into
sub
push
inc
xor
add
pop
mov
iret
test
clc
add
scas
std
xchg
mov
push
cmpsb
sti
and
and
pop
xchg
xchg
fisubs
addl
imul
je
xlat
dec
mov
aam
inc
cmp
jecxz
stos
cmpsl
dec
xor
xor
inc
movb
add
mov
sub
dec
movsl
mov
push
loope
cmp
scas
xchg
stos
clc
dec
pop
xor
aas
loope
lahf
jg
pop
sbb
lret
mov
std
stos
sti
mov
xor
out
test
mov
shrl
int3
rcl
mov
dec
push
mov
jle
fdivl
mov
mov
mov
scas
ret
loopne
add
push
lock
xor
out
mov
mov
fstl
jb
seta
ret
notl
fcoms
adc
lret
or
pushw
jns
ret
js
int3
jbe
insb
mov
pop
ds
test
clc
sub
mov
out
imul
das
xor
or
clc
out
lret
inc
inc
out
sti
mov
in
inc
jo
jb
fs
in
in
cmc
push
jns
nop
dec
sbb
maxps
xor
insl
xchg
ffree
dec
ljmp
mov
push
fwait
mov
call
inc
jno
mov
mov
iret
dec
dec
test
pusha
iret
jbe
pop
addr16
iret
cmpsb
sbb
mov
fs
fldenv
lock
mov
pop
rcl
mov
jg
mov
out
pop
xor
std
in
pop
fsubl
inc
sbb
pop
sub
inc
pop
ds
mov
cmp
mov
arpl
repz
push
jns
inc
inc
icebp
jno
pop
pop
add
pop
cltd
stos
sbb
xor
jmp
pop
and
sbb
outsb
cmp
mov
adc
icebp
adc
pop
cmp
inc
in
or
inc
stos
inc
les
shrb
sub
xor
and
cwtl
sbb
inc
nop
roll
inc
sub
xchg
adc
sub
out
idivl
out
imul
jecxz
jl
sbb
iret
jb
iret
inc
dec
jo
xchg
xchg
add
inc
adc
jge
and
insl
fcoms
add
pop
gs
testb
adc
outsb
lea
cwtl
in
mov
mov
test
mov
mov
fwait
lahf
in
pop
mov
iret
push
ljmp
jecxz
gs
push
jbe
lds
call
je
fwait
mov
cmpsb
push
lock
and
sub
sub
xchg
cld
outsl
push
jp
adc
push
jmp
cltd
or
dec
lret
cmpsb
cwtl
xchg
mov
push
lds
xchg
jmp
std
push
xchg
lretw
in
add
mov
fiaddl
lods
jg
jns
jb
loope
mov
push
ret
test
repnz
sub
cmp
aam
push
push
pop
jge
pop
dec
stos
jne
je
enter
jge
sahf
js
sub
std
imul
xchg
and
cmp
or
or
std
in
repnz
movsl
mov
jl
sub
jae
rorl
out
pop
mov
ds
push
aaa
es
lea
repnz
loop
movsl
repnz
mov
jo
or
pop
enter
rcll
cld
outsb
xor
lcall
shll
add
cmp
push
adc
push
je
dec
dec
clc
and
cmpsl
repz
cmp
ret
jmp
push
push
stc
xor
lcall
or
xor
xchg
or
stos
inc
inc
fcoms
pop
mov
mov
lods
arpl
pop
push
jecxz
fistpl
and
jae
dec
nop
gs
test
and
andl
call
push
shl
dec
jne
movsb
mov
pop
sub
ss
jmp
or
jno
pop
push
call
mov
mov
aad
les
dec
mov
imul
or
xchg
mov
mov
inc
xor
inc
fdivs
insl
add
jns
mov
imul
inc
repz
fbstp
mov
mov
push
xor
jl
push
sub
jge
pop
jle
mov
mov
sbb
ret
xchg
aad
push
fwait
shrl
out
std
cwtl
mov
sbb
pop
inc
push
dec
push
push
add
je
in
xchg
shlb
cmp
rcrb
lcall
mov
mov
cmp
loop
jg
js
adc
xor
or
sub
cmp
ficompl
cli
jbe
xor
jmp
pop
test
hlt
xlat
pop
lahf
jo
xor
inc
out
ljmp
imul
and
pop
std
cmpsb
pop
movsl
xchg
cltd
mov
lds
jge
cmp
jbe
test
add
sbb
sub
mov
inc
dec
sbb
or
aam
addr16
repz
fildll
fsubrs
sub
add
add
sub
icebp
xchg
pop
xlat
mov
test
xchg
xor
cmp
and
rcrl
enter
xchg
push
pop
xor
imul
add
popf
inc
sbb
dec
addr16
inc
sbb
outsl
or
insl
ljmp
movsl
push
push
xor
sbb
lods
mov
sbb
jp
sbb
push
int3
xor
dec
out
fadds
popa
adc
dec
fwait
mov
nop
jmp
jo
cmp
cli
or
cld
cmp
xchg
imul
popf
icebp
in
outsb
mov
in
fldt
out
push
gs
push
pop
mov
xchg
xor
xchg
arpl
add
push
or
lcall
in
sbb
jo
mov
aaa
push
cld
lret
sub
cwtl
sahf
es
sub
pop
sahf
dec
mov
ds
sub
xor
push
aam
mov
pop
or
cmp
xchg
bound
cmc
std
pop
cmp
jns
sbb
sbb
imul
or
or
jae
cmpsb
dec
rcr
jl
mov
push
repz
xchg
ljmp
fsub
leave
fidivrl
adc
or
push
and
pop
repz
sbb
imul
bound
pop
xor
sub
adc
sbb
in
cs
test
xlat
add
ds
pop
cltd
push
sub
shlb
or
in
mov
cmp
sbb
dec
fdivs
or
pop
pop
jb
lahf
cmpsl
push
scas
xor
add
sub
in
jae
cwtl
rorl
mov
mov
bound
mov
inc
mov
js
xchg
mov
xchg
ss
adc
les
and
xchg
and
das
pop
in
mov
scas
cmc
adc
xchg
imul
in
xorb
or
enter
das
addr16
sub
mov
xchg
inc
cs
jecxz
mov
imul
sub
pop
mov
jle
or
cmp
std
adc
and
xlat
cmpsb
in
and
sahf
inc
xor
stc
jns
jmp
cmp
or
sbb
add
and
sub
mov
dec
mov
fiadds
imul
mov
or
xchg
sbb
push
subb
out
xchg
pop
ljmp
insb
nop
rep
test
xor
sbb
push
insl
hlt
mov
xor
into
outsb
push
shll
xlat
mov
lret
mov
xor
and
mov
sbb
outsl
jmp
xor
mov
sub
add
push
fmuls
mov
mov
cmp
cli
sub
pop
sbbl
inc
bound
loopne
xor
int
mov
clc
sbb
bnd
scas
std
or
fs
push
inc
mov
ja
addr16
jg
ret
pop
in
cmp
jb
adc
or
add
cmp
sbb
push
mov
inc
loope
xchg
imul
call
jbe,pn
out
add
cmp
xchg
aas
fildll
popa
push
iret
aad
dec
aas
xor
add
pop
fcmovbe
pop
adc
fincstp
cmp
cmp
jmp
icebp
mov
scas
and
das
lret
mov
jmp
stc
lea
movsl
ljmp
fidivl
insb
push
mov
inc
std
fadds
into
xchg
sbb
insl
int
push
pop
sahf
leave
stc
pop
int3
in
sarb
push
jg
fildl
push
lcall
mov
fdivrs
nop
movsb
pop
or
push
inc
fcomps
xlat
push
fdivl
adc
icebp
stos
test
or
mov
add
les
xchg
aaa
out
bound
js
or
mov
lcall
lea
les
pop
mov
ljmp
lahf
cmp
lea
leave
rcrb
jge
fmuls
out
andl
adc
mov
and
enter
cmp
in
add
ret
addr16
aas
test
movsl
jl
sub
lock
or
outsl
ret
sbb
mov
addr16
cwtl
and
test
cltd
xchg
pop
mov
jnp
or
sbb
push
aas
push
jo
dec
and
inc
iret
cmp
mov
pop
in
and
adc
mov
mov
jmp
arpl
xor
pop
mov
pop
ja
out
pushf
js
pop
pop
dec
xchg
xchg
add
jg
gs
decb
sub
xchg
adc
and
push
dec
lret
sti
add
lahf
test
jle
clc
cmpsl
lret
jle
jecxz
xchg
xor
in
jmp
stc
and
mov
sbb
sbb
ja
cmp
mov
jnp
pop
or
rclb
cltd
stc
push
push
lds
loopne
adc
cmp
ret
bound
push
inc
mov
andl
xor
testb
fst
test
je
out
lods
pop
mov
fdivl
icebp
add
frstor
lock
rclb
or
pop
lods
popa
insl
ljmp
cmp
jno
jg
sub
pop
sub
out
mov
in
pop
and
push
test
cmp
int
mov
mov
clc
testl
xchg
std
mov
xchg
dec
cmpsl
bound
je
int
arpl
cli
mov
fcmovb
dec
fwait
mov
push
test
dec
dec
aam
iret
insb
jp
xor
pusha
mov
pop
lea
push
aam
test
mov
test
sub
dec
popf
es
add
leave
mov
mov
out
mov
cltd
cwtl
sub
in
addl
jbe
sub
call
lods
adc
rol
or
xor
jl
adc
mov
ficoml
push
jbe
dec
mov
aam
nop
in
out
cli
adcb
jecxz
add
xor
sbb
sub
and
popa
xor
push
and
rclb
xchg
or
push
sti
cld
shrl
mov
into
cmp
sub
ja
adc
decl
rcrl
push
enter
mov
push
sbb
add
sbb
test
push
pop
leave
fimull
cmp
pop
push
pop
lcall
out
pop
hlt
lock
sti
inc
je
sbb
and
cmp
pop
mov
cmc
or
rcr
test
aam
pop
adc
aas
dec
and
mov
mov
jns
lea
xor
jmp
dec
test
lea
jno
push
and
mov
jae
jle
sub
outsb
adc
mov
push
add
mov
mov
insb
cli
add
repnz
into
mov
mov
imul
mul
nop
gs
jmp
jb
popf
arpl
repnz
fcomps
mov
aas
inc
popa
xor
pop
mov
shll
or
push
or
shll
dec
jno
imul
cmp
dec
xchg
ret
jno
push
js
xor
and
add
stos
add
stos
cmpsl
jp
ret
or
clc
inc
sub
adc
gs
or
lret
or
out
enter
in
incl
rorb
jg
bound
movsb
scas
pushf
fdecstp
fistl
pop
push
adc
lock
call
imul
test
imul
std
xor
icebp
loop
lea
jnp
std
mov
ss
cmp
xchg
xchg
fwait
mov
movsl
pop
std
jnp
lods
push
dec
xchg
sahf
mov
pop
leave
arpl
pushf
push
or
cmp
mov
pop
xchg
cmp
adc
inc
sarb
xchg
sub
lds
je
xchg
inc
pushf
dec
xor
mov
aas
jle
cmp
out
fmull
fildll
and
js
dec
stos
mov
cmp
mov
mov
and
int
scas
jl
decl
and
cwtl
movsl
or
out
clc
jnp
push
sahf
mov
dec
add
adc
xor
or
xor
lcall
xor
pushf
ljmp
stos
sar
out
ds
sbb
out
push
inc
jne
imul
mov
adc
adc
xchg
xchg
ds
movsb
rcrb
push
sbb
in
fcmovnu
inc
sti
push
or
xchg
or
inc
xchg
inc
xchg
fmull
js
popf
fwait
jbe
lahf
push
dec
andl
pop
stos
gs
sub
in
push
daa
dec
notl
je
xchg
das
jl
push
out
test
xor
nop
xchg
rorb
scas
fsubrp
sub
movsb
jbe
icebp
pop
dec
mov
xor
dec
xchg
push
cmpsl
getsec
pusha
fdivs
sbb
or
ret
rcll
cmpsb
pop
fucomip
aam
push
out
xchg
ja
inc
xchg
mov
and
and
js
sbb
adc
fsubrs
push
sub
ret
jne
sub
mov
std
stc
inc
ljmp
mull
push
push
push
shll
lds
ja
stc
pop
pop
jmp
scas
xor
pop
jae
insl
mov
and
mov
cli
or
arpl
test
mov
mulb
out
push
inc
push
lods
sbb
or
push
xchg
test
cmp
or
mov
repnz
xlat
mov
adc
mov
ljmp
add
sbb
jns
bound
sbb
pop
pop
lds
fsts
bound
mov
pop
mov
pop
dec
divb
ds
mov
sbb
arpl
scas
or
aad
nop
ficompl
adc
sub
adc
insl
lea
fsub
popf
je
mov
aad
inc
imul
out
jae
sub
daa
into
push
sbb
dec
cmp
push
pop
lret
sub
loop
rcrb
cli
idivb
mov
and
gs
dec
dec
cmp
adc
xor
inc
and
and
sub
fsub
jg
int3
push
cmpsb
xchg
fsubrl
or
xor
mov
mov
fisubrs
imulb
dec
inc
in
dec
pop
push
ljmp
push
cmovp
dec
ret
idivb
addr16
xchg
daa
into
mov
add
loop
lret
xchg
ljmp
pop
aas
push
fld
pop
lcall
cmp
idivl
xchg
mov
fsubl
call
jae
push
mov
into
sbb
jae
inc
pushf
pushf
or
shll
mov
jns
jg
inc
arpl
mov
repz
arpl
push
ret
popl
pusha
das
sahf
stos
cmp
arpl
int
fs
mov
leave
push
xchg
mov
hlt
dec
mov
push
leave
arpl
out
cmp
mov
mov
adc
xchg
add
inc
cmp
aaa
ljmp
xchg
aas
stos
lahf
mov
addb
in
stc
dec
lock
pop
inc
gs
arpl
bound
jno
int3
mov
in
arpl
xchg
stos
mov
xchg
inc
out
push
push
shll
js
jnp
mov
je
pusha
int3
xchg
leave
cs
loope
nop
rol
es
xchg
fisubl
cmp
dec
mov
add
adc
push
insl
ds
add
ljmp
mov
testb
in
shlb
pop
sti
insb
jecxz
xor
pop
loopne
mov
cs
and
dec
dec
or
ret
xorb
mov
mov
jae
push
repz
fidivl
xchg
xor
orb
shrb
lret
and
jle
lea
xchg
dec
sbb
in
fsubs
ficoml
add
xchg
cld
fisttpl
xchg
pop
mov
sub
xchg
dec
jp
cmp
aas
bound
inc
mov
das
add
shl
stos
jp
mov
mov
inc
rorb
xchg
fldcw
ret
xor
sbb
pop
mov
repz
cmpsb
xchg
pop
push
push
lods
pop
jbe
das
aam
xor
inc
mov
bnd
pop
mov
adc
cltd
mov
jo
or
lods
fucomip
jl
repz
mov
mov
es
and
test
dec
popa
pop
bound
push
jp
into
pusha
sbb
and
ja
cmpsl
scas
jmp
sub
jbe
stc
aaa
xchg
mov
nop
sti
xchg
stos
adc
xchg
mov
xor
pop
aas
cltd
push
and
lods
into
or
bound
mov
jge
stc
loope
pop
incl
mov
dec
dec
imul
sbb
test
insl
mov
fs
pop
sub
push
mov
cli
push
jno
xchg
lea
lock
ljmp
in
out
sbb
leave
and
call
push
stc
ret
ja
push
shlb
lret
or
dec
mov
jo
cmpsb
enter
inc
cmpb
pop
sbb
jb
dec
and
dec
pushf
aad
dec
sbb
fnsave
inc
ja
xlat
xchg
fisubs
jo
mov
push
cs
imul
insl
test
ficoms
fs
add
push
xchg
dec
aam
xchg
xchg
xor
stos
and
cmp
push
mov
ljmp
xchg
cld
lret
pop
inc
cltd
and
out
popf
cmp
cmp
fwait
sub
jl
cmp
adc
sti
lahf
lret
gs
adc
dec
loop
mov
loop
scas
gs
addl
xlat
lods
add
mov
bound
mov
pop
mov
inc
int3
and
hlt
mov
or
sbb
jae
mov
scas
loop
push
leave
sarl
es
outsl
fimull
movsl
or
jg
mov
jl
xchg
mov
mov
cmp
aam
and
repnz
or
xchg
cmc
mov
mov
leave
fwait
sub
in
push
mov
xor
emms
test
hlt
xor
dec
cltd
and
dec
cli
mov
push
and
ss
sbb
jmp
adcb
nop
pop
or
idiv
push
out
jb
fsubrl
push
int
and
addr16
adc
xchg
adc
cs
adc
inc
jl
scas
mov
loopne
xor
cmp
xor
mov
adc
jl
add
clc
jmp
xchg
out
sub
lret
push
outsl
pushl
adcl
mov
rclb
les
mov
dec
ret
dec
lock
pushf
aad
mov
adc
daa
add
fwait
cmp
cmp
and
xor
mov
test
xor
test
xor
test
lds
int3
pop
addr16
jne
call
or
cmp
xor
xor
imul
pop
xor
and
pushl
mov
cwtl
mov
sbb
outsb
sahf
push
ret
cmp
lea
lcall
mov
xor
mov
ds
add
jmp
hlt
push
mov
add
xchg
jno
clc
ret
mov
cmp
loop
add
push
jge
popf
sbbb
imul
xor
or
test
mov
mov
add
scas
scas
and
and
pop
cmpsl
lods
daa
inc
push
sbb
ljmp
push
cwtl
aas
sbb
jbe
icebp
lret
negb
pop
inc
mov
inc
roll
sti
ds
pop
ret
in
jb
push
jecxz
stos
lds
ja
sbb
js
outsl
arpl
dec
lcall
pop
andb
lret
cmpsb
pop
cmc
hlt
push
lcall
add
mov
iret
imul
call
cs
adcb
mov
loopne
fidivl
adc
ss
push
loopne
daa
push
insl
lock
dec
xor
js
or
xchg
or
jae
insl
pop
adc
inc
sbb
or
add
cld
pop
or
mov
dec
add
mov
mov
lahf
pop
or
mov
pop
ffreep
or
aas
sbb
sub
mov
mov
repnz
or
pop
aam
mov
mov
jbe
push
sbb
mov
test
pusha
xchg
inc
inc
insb
jb
dec
dec
mov
mov
popa
call
fs
fs
test
and
fdivl
sbb
adc
xchg
xor
jmp
sbb
cmp
call
lahf
jnp
fdivr
pop
fcompp
fistl
jmp
and
call
stc
inc
mov
mov
pop
push
jne
loope
repnz
les
xchg
hlt
mov
pop
dec
sarb
push
dec
enter
insb
or
push
loop
jl
leave
pop
push
insl
insl
jno
add
cmp
test
stos
test
cmc
roll
divl
aam
fsts
fwait
jl
nop
dec
addr16
call
imul
mov
cmpsb
push
and
xchg
inc
sub
test
outsb
sahf
cmp
and
in
popa
or
mov
jg
ja,pt
mov
xor
clc
mov
stc
xchg
pop
or
pop
push
test
jno
push
mov
mov
jb
imul
sub
or
or
cwtl
push
inc
push
das
lock
imul
and
cmp
fsubp
repnz
jge
lahf
jns
mov
cs
fisttpl
subb
sub
cmp
loope
push
cmpsb
imul
pop
ss
ss
and
popf
dec
mov
test
or
jns
adcb
dec
inc
pop
shl
pop
dec
adc
cmp
mov
dec
stos
cmp
and
addr16
or
adc
jns
xchg
iret
mov
nop
and
cmp
and
loopne
and
imul
lods
xchg
jl
jle
xchg
xchg
fdivrs
fmuls
or
dec
inc
popf
popl
ss
fdiv
push
movsl
mov
shlb
sbbb
shrl
loopne
lret
ret
mov
push
addb
fisttpll
sarl
dec
pushf
notb
and
mov
leave
stos
jnp
mov
inc
xor
cmp
cmp
pop
hlt
or
add
int
jmp
cs
lea
loope
push
cmc
inc
insb
lds
adc
mov
sti
pop
adc
mov
pop
adc
push
out
in
mov
insb
shl
pop
pop
lods
mov
push
cmpsl
mov
mov
popf
adc
dec
cmp
mov
nop
mov
cmp
imul
xlat
cmpsl
rcrl
faddl
gs
loopne
xor
inc
jno
inc
movsb
mov
xor
in
sbb
mov
mov
and
pop
mov
idiv
sub
sarb
in
pusha
xor
inc
push
push
and
push
fs
lods
push
nop
pusha
push
dec
mov
lds
sub
nop
push
jns
adc
adc
xchg
push
xor
adc
push
enter
imul
lods
sub
stc
and
hlt
lods
adc
cld
leave
add
dec
or
leave
outsb
arpl
adc
push
pop
mov
test
ds
xchg
and
xor
call
lcall
add
sub
dec
test
stos
ret
fnsave
leave
jne
das
xchg
adc
mov
les
popf
mov
lds
pop
xlat
lret
jb
mov
xchg
sarl
cmp
mov
aaa
xor
nop
clc
or
mov
mov
mov
lahf
mov
cmp
outsb
incb
paddusw
jmp
fiaddl
ja
inc
fisubrl
pop
mov
mov
repz
dec
inc
adc
push
inc
jp
fmulp
sti
and
dec
mov
mov
testb
sbbl
js
xchg
test
push
xchg
cmp
lahf
inc
adc
aas
std
subb
aaa
jbe
outsl
cmpsl
lahf
sub
cmpb
adc
nop
cmp
adc
pop
js
fdivs
cmp
int3
or
or
xchg
dec
jno
rorl
jg
hlt
das
pop
stos
push
add
aad
push
mov
and
jnp
jg
adc
inc
sub
push
xor
stos
sti
cmp
mov
movsl
pop
fists
into
xor
outsb
icebp
sbbl
stc
sti
pop
lahf
lods
bound
and
int3
adc
mov
ja
test
into
or
in
mov
dec
jge
pop
or
stos
rorb
ret
dec
xchg
mov
jnp
js
xchg
jno
ss
icebp
outsb
mov
test
leave
andl
jecxz
fsts
ljmp
filds
imul
repnz
push
loop
add
adc
sahf
scas
cmp
enter
jns
cmp
add
and
pop
cld
mov
or
pop
adc
imul
pop
jb
js
mov
les
insb
rorb
addl
insb
rcr
inc
das
mov
jmp
add
sbb
jne
mov
pop
sbb
pop
sbb
imul
pop
sarl
sub
jns
mov
xor
xchg
pop
je
sbb
or
pop
push
xchg
push
gs
and
push
mov
mov
sahf
mov
data16
lods
mov
int3
or
jae
mov
mov
inc
js
lahf
push
adc
fdivrl
incb
inc
xchg
rep
aam
pop
mov
mov
adc
rol
dec
add
or
js
cmp
out
cli
lcall
lcall
test
arpl
ffree
jno
lods
mov
test
psadbw
cli
jnp
divb
push
in
jg
out
push
js
push
pushf
out
loopne
sar
cmpsl
pop
xor
push
sbb
loop
pop
cltd
cmp
push
sub
mov
ret
xchg
pop
ja
in
sbb
shlb
push
mov
cltd
dec
xchg
cltd
into
out
imul
push
test
jl
mov
xor
pop
inc
cltd
dec
out
cmp
mov
mov
stos
movsl
mov
pusha
mov
push
jecxz
std
and
cmc
xor
and
sub
movsl
or
inc
mov
xor
aas
mov
dec
sub
sbb
loop
dec
xor
xchg
xlat
cld
ss
mov
in
rorl
mov
out
aam
fwait
xchg
cs
stc
jecxz
mov
cltd
and
cmpsb
inc
xchg
dec
or
pop
fcmovbe
aas
outsb
mov
jmp
mov
pop
stos
decl
dec
xlat
or
stos
cmp
xor
les
dec
jmp
imul
fimuls
aad
ror
cmp
arpl
test
mov
mov
out
dec
mov
sub
xlat
fnstsw
cmp
js
inc
loope
inc
mov
jae
pushf
push
mov
ret
leave
ljmp
lods
and
ret
jne
pop
sbb
bound
out
ljmp
inc
mov
add
dec
jge
rcr
fsub
or
adc
or
popa
adc
jmp
push
movb
ret
insb
or
sub
js
test
inc
jne
adc
dec
push
enter
push
faddl
xor
add
sbb
call
je
aaa
lods
gs
ret
add
icebp
aas
insl
jle
cmp
jecxz
cmpsl
or
xchg
leave
shll
out
inc
pop
lea
ljmp
inc
cmp
in
xor
sub
jge
and
push
ret
mov
lds
jp
or
or
movsl
in
ljmp
adc
adc
mov
xchg
mov
pop
fdivrl
xchg
aam
ret
push
ret
ds
sub
in
hlt
push
stc
sbb
rcll
fmull
push
pop
xchg
xor
data16
lret
or
decb
dec
popf
lcall
scas
pop
jb
addr16
add
push
mov
je
xchg
into
daa
mov
sub
dec
xor
aad
mov
and
loope
mov
pop
adc
xlat
out
xor
sbb
or
adc
add
int3
xchg
xlat
das
mov
ret
sub
push
fisubs
inc
dec
mov
push
and
fwait
addr16
sbb
sub
jb
push
ss
mov
loope
lods
xchg
movsb
cmc
insl
inc
imul
int3
ss
mov
sti
xor
pop
out
fcoml
repz
out
fisubs
or
push
jmp
add
mov
xchg
test
insb
add
mov
outsb
lds
mov
adc
mov
int3
dec
pop
aas
jne
xchg
or
andl
bswap
and
cmp
mov
outsl
shrl
nop
ret
out
lods
cmp
mov
nop
mov
jp
pop
loop
dec
cmp
jge
arpl
dec
call
and
xchg
mov
adc
es
fcmovnb
lret
lods
cmovle
or
sbb
inc
pop
pop
pushf
subb
lds
std
push
mov
int3
dec
jmp
fwait
mov
leave
dec
aam
fld
jl
leave
inc
test
adc
lret
or
add
push
push
loop
fs
inc
adcl
or
pop
in
cltd
int3
mov
lahf
ds
test
cli
movsl
push
out
pushf
ds
add
mov
shrl
adc
and
int3
push
stc
adc
mov
in
xlat
and
cmp
cmp
dec
pop
jnp
stc
mov
movsl
lret
push
sub
pop
pop
xchg
mov
imul
pop
dec
test
lldt
into
enter
dec
outsb
fwait
inc
ret
rcr
divl
fs
pop
inc
mov
mov
dec
nop
lods
mov
sub
sub
adc
push
in
pop
push
mov
cmp
idivb
or
jnp
test
addr16
xlat
add
sbb
jmp
dec
sti
imul
push
in
insb
movsb
push
push
mov
and
leave
adc
mov
pop
stc
or
and
lds
lock
cmpsb
cmp
mov
push
lahf
mov
popa
cmp
leave
sub
cmpsb
cmp
sub
cmp
add
lea
fisttpll
cli
and
add
cld
bound
out
shr
in
scas
or
push
imul
or
dec
cmpsb
mov
je
xor
cmp
adc
add
daa
loopne
in
fwait
cmp
mov
es
imull
aaa
mov
scas
arpl
mov
xor
aad
sbb
daa
mov
pop
sbb
lods
roll
fwait
dec
dec
mov
mov
fucomip
push
pop
push
incl
pop
cmpsl
dec
gs
xchg
cs
adc
fsub
xchg
es
ljmp
data16
iret
loop
es
dec
mov
shll
les
push
stc
cmc
jne
push
pop
repnz
fcmove
xchg
je
mov
xchg
test
add
pusha
cmp
adc
out
cmp
sub
fidivrs
rcll
clc
jo
cmp
xchg
cmc
aas
or
jo
addb
push
pop
int
gs
je
and
rcl
and
lahf
or
dec
sbb
xor
sub
dec
lahf
scas
jl
mov
add
mov
in
mov
mov
jb
bnd
rolb
lret
push
and
aas
mov
inc
test
cltd
aam
jge
pop
jne
in
inc
dec
and
in
cmp
mov
sub
jmp
outsb
arpl
add
fisttps
ret
jle
lock
jl
add
mov
xchg
push
roll
mov
cmpsl
push
pop
or
lods
pusha
ret
sbb
pop
adc
push
push
aam
stc
faddl
sub
add
ret
mov
sbb
or
imul
loop
movsb
inc
hlt
inc
cwtl
push
push
pushl
out
fwait
lahf
lds
dec
mov
mov
mov
mov
inc
jp
loopne
fs
lret
repz
sti
aaa
xor
jle
pusha
xchg
insl
mov
mov
jne
out
mov
fldcw
lahf
mov
sahf
push
xchg
cwtl
sub
call
jg
or
fnstsw
and
popf
mov
ffree
mov
fidivs
rep
out
fisttpl
jl
mov
push
adc
adc
fwait
jmp
mov
or
int3
pop
aam
adc
rolb
add
in
loopne
adc
adc
dec
push
jno
push
imul
xor
mov
xchg
sbb
dec
mov
cmp
xchg
lcall
lret
pop
rcrl
dec
dec
add
lock
push
sub
ret
loopne
or
jns
jns
and
add
out
addr16
mov
lret
push
ficoms
lea
lods
mov
or
lret
test
xchg
jno
mov
dec
dec
pushf
imul
cmpb
std
ss
inc
pop
dec
dec
lret
push
adc
loopne
ret
gs
and
popf
jns
das
sbbl
push
pop
and
cmpl
es
sbb
pop
jmp
cs
je
sti
out
lods
test
les
stos
jle
movsb
inc
mov
mov
xor
fdivrs
lods
lret
aad
jns
pop
mov
lods
push
lcall
adc
leave
fmuls
mov
lock
jb
loopne
mov
push
or
jmp
orl
lock
lds
fimull
xchg
roll
dec
dec
enter
and
mov
pop
int
push
stos
loopne
mov
cwtl
pop
push
push
subl
sbb
ds
cmp
xor
jnp
xor
and
or
jp
pop
icebp
js
sbb
xchg
jne
rcrb
or
push
mov
test
icebp
mov
push
xor
in
scas
loopne
push
add
js
scas
mov
aas
loope
ficoms
jle
sub
rcl
xor
shlb
or
dec
fs
in
dec
dec
insl
push
xchg
outsl
or
outsb
mov
pop
xor
and
leave
sub
test
and
or
pusha
scas
cmp
pop
adc
ljmp
cmp
ficoml
std
add
xor
inc
xchg
xchg
pop
scas
ljmp
js
xchg
xchg
jnp
popf
dec
jmp
jmp
xor
movsb
sub
mov
clc
arpl
add
mull
xchg
testl
and
fmuls
inc
rorl
jge
jge
cmpsb
or
roll
aad
push
xchg
sub
lcall
je
pop
adc
daa
out
xor
mov
and
bound
mov
or
mov
dec
ss
mov
adc
mov
inc
jp
sub
mov
sub
push
xchg
out
inc
sub
daa
test
sub
out
loope
inc
leave
cli
add
adc
stos
insl
adc
gs
pop
dec
pop
xchg
or
sbb
or
das
add
sub
pop
loope
jbe
in
sarl
jp
test
push
cmpsl
test
or
add
push
jne
std
movsb
push
push
int3
xor
inc
int3
add
stos
stos
test
dec
lcall
cmp
xchg
ds
aad
jmp
lock
mov
idivb
sbb
stos
roll
pop
jecxz
popa
mov
dec
mov
dec
fistpll
in
push
mov
push
mov
ss
mov
or
cli
mov
mov
mov
push
jg
pop
xor
pop
rcr
xchg
inc
xor
aam
ret
add
jbe
dec
mov
adc
sbb
in
sahf
mov
jae
xchg
push
shlb
adc
subl
push
xor
mov
loop
mov
sbb
scas
fstps
xchg
fldcw
sbb
push
gs
jbe
and
or
shr
sub
or
inc
rcrb
xchg
mov
outsb
adc
jge
fisubs
pop
add
cmp
ds
je
lahf
addb
aas
adc
call
xchg
es
push
out
aam
dec
ficomps
aad
inc
jnp
inc
cmp
mov
mov
shlb
std
xchg
cmc
loope
or
xorl
and
push
stos
js
push
test
adc
mov
or
daa
fildl
xchg
or
jge
sarb
loopne
inc
or
je
mov
inc
in
dec
mov
mov
jae
sbb
mov
das
dec
rorl
ret
pushf
fldl
outsb
cmp
cmpsl
jge
pop
lahf
ss
cld
jg
add
pop
dec
dec
lret
xchg
push
dec
js
push
xor
push
pop
inc
ja
sbb
xchg
lea
rcrl
or
or
xor
js
mov
stc
loop
add
jp
decl
in
mov
sub
idivl
ss
pop
mov
sbb
sub
shl
ficoms
imul
push
xor
inc
push
lods
repnz
inc
mov
dec
jno
fwait
scas
pop
push
ret
clc
xor
rclb
das
mov
dec
mov
jnp
lods
int3
fldt
call
push
shr
fdivrs
int
jmp
sbb
pusha
xchg
iret
add
fs
das
dec
pop
enter
orb
jae
js
mov
inc
movsl
int3
inc
dec
adc
adc
xchg
mov
cmp
sbbl
in
push
sbb
lret
push
ja
xor
aam
mov
cmp
sub
adc
stos
sbb
mov
in
cmp
xchg
imul
lods
ss
mov
fs
lods
sbb
fimull
idiv
cmp
mov
sub
add
dec
sub
ja
popf
xchg
dec
push
and
sub
mov
xchg
stc
sub
dec
lret
lret
divb
mov
or
stos
sub
inc
dec
lds
push
push
lds
movsl
xchg
adc
and
mov
xor
push
adc
cmpsl
out
outsb
leave
push
mov
xchg
adc
outsl
pop
arpl
dec
mov
andl
add
pop
inc
jmp
shll
adc
mov
push
jae
adc
mov
mov
and
test
fidivl
rclb
adc
gs
lret
lcall
subb
cmp
add
fsubl
pop
bound
cmpsl
jne
in
mov
in
or
call
mov
sarl
mov
iret
ficoms
test
mov
sbb
xchg
ds
sar
lods
sarl
test
add
std
push
mov
rcl
xchg
mov
adc
hlt
sub
push
ffree
lcall
pushf
cmc
fdivs
mov
into
pop
adc
adc
pop
dec
push
rolb
xchg
iret
aaa
fnsave
add
sbb
mov
mov
ds
xchg
rclb
xor
mov
stc
ror
lret
inc
and
ss
in
stos
sahf
stc
jb,pt
enter
cwtl
sub
and
sub
lods
cmp
lret
mov
call
lods
cmc
inc
clc
aas
sub
mov
pop
into
xor
mov
dec
pusha
clc
out
jp
imul
jbe
out
lahf
lret
loopne
loop
es
loope
sub
push
ljmp
mov
adc
in
in
sbb
lods
mov
add
rorl
or
and
and
add
mov
inc
loope
mov
aam
out
inc
cmpsl
mov
iret
xchg
lahf
lret
fstps
jne
insl
inc
and
mov
shrl
test
fwait
mov
ret
fwait
pop
in
sub
inc
test
push
cvttps2pi
mov
js
rcrb
outsl
inc
fwait
adc
shlb
in
repz
mov
std
jg
xchg
mov
mov
mov
push
mov
int3
mov
int3
pop
add
mov
pop
mov
loop
xor
jnp
fsubrl
mov
lds
pop
jb
int
in
in
mov
lea
push
lods
xchg
std
sbb
out
leave
or
mov
inc
pop
jmp
push
jecxz
xchg
sbb
fisttps
lods
les
mov
or
pop
adc
lods
lods
pop
or
pop
and
test
inc
pop
jbe
dec
aam
xchg
jns
insl
cmpsb
mov
in
jmp
in
pop
xor
es
lret
mov
out
adc
pop
insb
shlb
xor
push
xchg
stos
and
lods
inc
dec
aaa
mov
fxch
push
lods
mov
mov
dec
xor
mov
insl
cmp
sbb
imul
push
jmp
test
xchg
sbb
or
xchg
incl
inc
cld
xchg
push
pop
mov
outsb
fnstenv
aas
fldt
rorb
cltd
mov
xchg
sbbl
pop
pop
lea
xchg
pop
lea
or
cmc
insb
icebp
shlb
lods
mov
gs
mov
rclb
in
icebp
cltd
ja
cmp
mul
test
imull
pop
mov
int
pop
mov
fadd
test
sbb
shr
jl
rol
xor
mov
pushf
or
cwtl
add
ja
ret
cs
lea
enter
sub
mov
pop
lcall
sbb
jmp
sub
int
sti
lret
adc
add
xor
mov
stc
imul
sbb
push
mov
jecxz
sbb
loopne
iret
cmp
adc
nop
insl
mov
ja
dec
and
mov
adc
fxch
sub
xchg
in
pop
fcoml
cltd
lods
ret
leave
xor
pop
in
ret
rorl
adc
jge
and
dec
insb
and
cli
loope
push
scas
xor
push
mov
mov
pop
sbb
mov
inc
lret
adc
nop
test
dec
leave
mov
dec
xchg
imul
popa
pop
pop
pop
dec
pop
das
aaa
inc
es
outsb
int3
popa
rcrb
repz
mov
rcll
jmp
xor
test
fidivs
rol
fsubrp
inc
mov
push
push
out
int3
fucomip
cltd
out
mov
mov
aam
pop
cli
or
and
push
and
addr16
and
add
imull
mov
fwait
jne
lods
lcall
pop
inc
loope
sub
decb
cmpsb
adc
push
out
sub
movl
inc
out
je
js
inc
aam
lea
int
and
add
cmp
pop
mov
dec
or
stos
pop
push
sahf
sbb
mov
fisubrs
enter
std
push
addr16
xchg
jns
xchg
and
dec
arpl
push
adc
pop
gs
sar
mov
leave
dec
adc
aad
xlat
push
mov
pusha
outsb
or
je,pn
imul
sahf
push
aam
sar
enter
inc
adc
xorl
adc
loop
mov
dec
mov
in
pop
mov
lods
ficoms
ds
pop
js
jbe
mov
dec
loope
sub
out
out
dec
idiv
push
pop
xor
jmp
fs
js
in
daa
sbb
pop
push
push
lret
fisubl
lods
adc
aad
or
es
xchg
jnp
imulb
js
sbb
push
mov
test
outsl
sub
and
or
adc
pop
aad
cmc
pop
inc
or
insb
push
pop
and
scas
mov
cmc
addr16
push
imul
fnstcw
xor
add
cmp
mov
lea
jecxz
sub
xor
scas
lret
inc
inc
or
ja
rorb
repnz
or
fsts
push
xchg
sub
insb
cmp
bound
mov
daa
push
test
in
xchg
sbb
push
imul
mov
mov
loopne
jp
aas
clc
cmp
xchg
aas
int
sub
leave
imul
out
xchg
jns
jg
sbb
inc
insl
adc
lock
ljmp
add
inc
stos
sarb
inc
sub
out
loope
lea
ret
jp
roll
lods
cmc
out
lret
fnstsw
pop
nop
incl
adc
dec
or
lea
pop
dec
fdivrs
cltd
inc
std
push
out
outsb
inc
sub
cmpsb
add
cmpl
pop
cmp
xor
xchg
test
cli
fmul
mov
movsb
ljmp
popa
cmpsb
cmp
in
aas
and
dec
cld
loope
addr16
enter
mov
hlt
imul
lret
or
icebp
daa
aas
sbb
jmp
outsb
insl
dec
je
fstl
stos
dec
cmpsl
subb
push
fidivrs
add
and
and
sbb
push
ljmp
lds
in
mov
adc
insl
imul
jns
test
repz
fildl
dec
mov
daa
pop
dec
and
push
push
les
into
mov
lcall
pushf
mov
sub
push
push
mov
idivb
rolb
movsl
adc
cli
jns
repz
icebp
idivb
fsub
dec
mov
add
cltd
push
in
sarb
xor
test
push
pusha
mov
fsts
jmp
or
adc
mov
mov
imul
sbb
xchg
mov
jge
jmp
cmp
xor
dec
arpl
repnz
sarb
lret
jl
push
and
arpl
dec
rcll
loopne
xor
loopne
add
ljmp
jmp
lret
and
push
sti
push
cmp
pop
mov
test
loop
jns
push
sub
test
pusha
pop
push
mov
dec
out
mov
jo
aam
xchg
js
or
call
shll
xchg
outsl
repnz
insl
bnd
les
into
jb
nop
add
mov
pop
mov
scas
in
adc
xor
les
andb
out
lock
scas
andb
iret
or
loopne
imul
mov
mov
inc
sub
mov
repnz
cmc
pop
dec
outsl
mov
push
push
popf
andl
and
loop
rcll
or
jecxz
push
mov
fdivrs
fwait
fwait
sub
les
das
dec
dec
sahf
mov
pop
out
enter
test
popf
pop
mov
fildl
rcrb
shrl
lret
int3
call
xchg
insb
and
lods
mov
movsl
push
push
lret
cmp
pop
fldcw
aam
mov
jl
xchg
dec
lcall
pop
push
jmp
sti
add
in
shrl
sub
push
mov
out
push
loop
sbb
out
adc
xchg
xchg
mov
pushf
aam
inc
sbb
scas
push
or
sbb
add
fdivl
lahf
cmp
sub
adc
rorb
inc
rcr
sbb
push
psubb
ds
repz
shll
add
aad
lods
cld
xor
pop
and
cmpl
push
pop
in
push
bound
shlb
andb
ja
inc
pop
sub
out
icebp
movsl
aas
push
and
and
adc
xchg
dec
ret
xorb
adc
push
pop
jp
pop
push
jnp
push
insb
pop
loop
or
mov
jle
mov
sti
arpl
adc
add
cli
pop
movsl
mov
lock
push
fiadds
mov
in
xchg
mov
sti
in
mov
cmp
sub
scas
jg
loope
ret
and
in
imul
les
nop
sub
leave
loopne
push
in
rolb
out
insl
and
pop
fimuls
adc
add
jge
pop
test
leave
cltd
int
push
xchg
adc
insl
add
inc
pop
movswl
data16
test
repnz
pop
movsb
jo
and
cmp
cli
pop
data16
stos
jbe
dec
enter
dec
addr16
mov
ljmp
adc
repnz
fsubs
mov
popf
shlb
imul
xchg
mov
jecxz
add
lcall
sbb
push
sub
mov
scas
stos
movsb
push
xchg
out
sbb
pop
inc
fwait
mov
cltd
nop
push
das
xchg
mov
sub
fbstp
loopne
inc
fsubs
or
shr
xor
xchg
out
mov
mov
sub
add
fnstcw
rolb
jno
and
in
insb
jg
loopne
sub
push
sarl
push
addr16
clc
xchg
ljmp
or
sbb
mov
cmpsl
jb
mov
push
jle
orl
test
hlt
xchg
loop
out
cmp
pop
dec
xor
fimuls
adc
push
and
inc
bnd
and
push
int3
sub
push
xchg
out
repz
and
in
adc
in
shl
fiaddl
push
je
xor
movsb
out
adc
enter
mov
inc
push
out
hlt
rcrb
rorl
lds
sbb
pop
mov
push
aam
movsb
movsl
nop
mov
fisubl
mov
inc
outsl
sahf
xchg
xchg
popa
xchg
mov
adc
jmp
jp
ficompl
mov
out
push
sub
lret
mov
out
shlb
sub
sub
loop
cld
mov
sub
arpl
mov
push
mov
stos
sub
loop
mov
ret
jbe
dec
mov
and
or
fbstp
out
repz
mov
inc
and
pop
out
out
gs
mov
cmp
cmp
aam
and
out
push
adc
lahf
ficomps
sub
sahf
xor
enter
and
adcb
mov
jne
ds
lret
int
xor
dec
adc
or
xor
mov
xor
gs
fcmovnbe
les
sbb
out
out
sbb
out
jo
mov
or
inc
xchg
jge
cmp
xlat
push
stos
enter
js
mov
cmp
inc
ja
ss
mov
sbb
push
stos
aaa
mov
adc
into
cmp
in
xchg
cmp
mov
int3
imul
ja
clc
cmp
stos
add
jecxz
mov
cmp
mov
loope
nop
out
lret
mov
test
dec
pop
lret
loopne
and
mov
in
loope
mov
jmp
test
in
scas
cmpsl
adc
mov
daa
aas
sub
cli
jo
mov
ret
and
mov
pop
int3
adc
mov
cvtps2pi
jae
cwtl
xchg
out
and
add
push
xchg
bound
xor
cmp
das
fisubrs
in
out
iret
xchg
lret
sub
push
gs
sbb
cmpb
mov
mov
dec
cmp
fidivrs
or
gs
mov
sarb
mov
inc
xor
cmp
inc
pop
mov
sti
and
sbb
aam
dec
ljmp
gs
loope
cmp
clc
and
jnp
clc
sub
add
sbb
cltd
xor
leave
adc
inc
push
jno
pop
or
xor
push
sti
and
lea
adc
or
call
ret
cli
pop
pop
das
mov
test
popf
lea
mov
lods
dec
xchg
mov
mov
sbb
loop
jl
xor
cld
or
dec
sahf
and
sub
insl
test
lcall
stc
popa
cmp
pop
and
mov
out
cmp
aas
add
cltd
jbe
mov
lahf
sub
out
xor
lahf
mov
popf
sbb
push
mov
clc
movsl
push
pop
aad
jg
cmp
cmp
fcmovnu
cwtl
mov
cmp
out
push
mov
loop
xchg
push
lcall
xor
jns
fmull
xchg
adc
popf
add
in
ljmp
mov
sbb
hlt
insb
or
sub
dec
add
int
cmp
mov
ficomps
cld
sar
push
movsl
pop
int3
xor
and
rorl
push
insb
sub
popa
adc
xlat
rcrb
inc
call
out
mov
daa
aas
insl
lock
lds
mov
enter
sub
rcrl
jne
push
ret
jbe
aaa
mov
sahf
arpl
daa
push
inc
add
sub
push
mov
out
int
test
cmpsb
enter
jbe
in
sti
xchg
jg
mov
js
enter
ret
xor
sub
fcmovne
lea
pop
je
push
dec
repnz
sahf
aas
loopne
xchg
lret
es
aas
mov
aaa
xchg
push
loopne
mov
inc
outsb
cld
jp
mov
push
dec
dec
add
pop
dec
icebp
aaa
jae
sahf
sub
lahf
mov
mov
mov
jb
stos
test
pop
xchg
and
rorb
xlat
popa
scas
lds
insb
mov
xor
push
inc
jnp
dec
movsb
iret
xchg
sbb
ret
sbb
adc
xchg
xor
push
bound
mov
sbb
push
dec
cmpsl
inc
adc
iret
mov
xorl
mov
xchg
mov
xchg
cwtl
adc
mov
ret
jns
ret
xor
mov
imul
mov
pop
fs
into
jl
xchg
and
rol
ss
rcl
mov
lret
jno
inc
sbb
popa
inc
loope
movsb
mov
sbb
inc
push
xor
jns
out
jecxz
and
jo
push
jg
mov
dec
inc
dec
sub
nop
sbb
sahf
xchg
js
outsl
push
loope
xchg
sbb
aas
pusha
aaa
test
decl
lock
sbb
popf
xchg
jge
outsb
test
rep
sbb
jge
or
mov
out
cmp
call
sbb
or
mov
xor
mov
and
xchg
add
dec
loop
rclb
xor
aaa
ret
testb
jns
jge
add
call
mov
mov
sbb
dec
lcall
push
divb
pop
flds
pop
adc
fmul
sub
cmpl
int
mov
in
inc
ljmp
xchg
push
inc
xor
jae
add
lds
xor
cmp
mov
add
or
xchg
out
mov
dec
add
jbe
jno
jle
mov
jmp
cltd
out
incb
popa
ror
pop
cmp
fnstenv
mov
pusha
push
xor
imul
mov
jg
add
push
add
mov
jne
push
in
and
stc
push
insl
insb
sub
popf
fbld
lret
outsl
test
xchg
jg
xchg
xchg
mov
out
cmc
aaa
inc
aam
lcall
dec
test
cmp
pushf
add
je
push
or
mov
adc
rcrb
loope
pop
das
fwait
dec
movsl
xchg
fsubrl
out
imul
push
insb
out
cmpsl
lcall
test
add
mov
inc
loopnew
push
mov
dec
push
mov
xchg
xchg
push
jnp
lods
stos
je,pn
sahf
xchg
or
jge
call
pop
mov
or
add
pop
xchg
sarb
or
outsl
inc
push
movsb
sub
or
js
in
push
test
cld
rorl
pop
push
mov
mov
jp
mov
fsubrs
pop
add
cmp
or
cmpb
addb
push
rorl
xor
adc
arpl
pop
and
add
andb
jbe
sub
mov
imul
lods
mov
sbb
imul
adc
inc
mov
push
inc
mov
jle
imul
xor
inc
cld
movsb
or
mov
dec
scas
xchg
mov
pop
and
mov
mov
mov
mov
das
add
mov
mov
test
mov
cmp
sub
bound
push
stc
or
mov
dec
clc
pushf
jbe
jmp
xchg
add
nop
test
cmpsl
push
int3
cmp
cld
popf
hlt
loope
movsl
repnz
push
add
sbb
mov
xchg
scas
dec
outsl
lret
pop
fdivrs
out
xor
mov
mov
sbb
lods
std
fwait
popf
sub
test
mov
cmpl
cmpsl
xchg
mov
dec
in
lea
ret
sbb
inc
incl
sahf
clc
sub
mov
leave
sahf
adc
xchg
mov
stos
cs
stos
sbb
loope
std
enter
pop
ret
les
mov
das
and
scas
es
jg
cwtl
adc
cmp
inc
adc
flds
cmp
aas
dec
mov
cs
ja
dec
or
jns
fwait
fwait
push
stos
jg
jp
mov
mov
jb
int3
idivl
and
add
jg
mov
or
ss
jg
scas
cmpb
in
lret
and
mov
stc
mov
idivl
sbb
and
pop
pusha
and
data16
add
es
mov
leave
fsubs
ss
or
xchg
arpl
jle
inc
decb
mov
test
int3
mov
push
pushf
leave
cli
adc
dec
out
pusha
fdivrs
sbb
fstl
adc
addr16
or
das
pop
sub
adc
inc
out
lahf
xchg
sub
movsb
jg
add
test
ljmp
aad
icebp
inc
mov
cmp
or
pop
loop
xor
pop
je
outsl
mov
push
mov
mov
sbb
test
pop
mov
jb
iret
xchg
imul
cmpl
or
inc
dec
sub
repnz
out
sbb
in
lgs
push
outsb
dec
cwtl
mov
pop
loopne
xor
out
or
cmc
mov
notl
mul
aas
loope
add
jnp
pop
xchg
cmp
loope
lcall
mov
out
or
ljmp
imul
imul
bound
popf
add
stc
mov
add
adc
sarl
push
lahf
cmpb
fstl
nop
push
cmp
add
push
test
jecxz
adc
aaa
out
mov
fnstcw
std
rcrl
sbb
shll
in
or
mov
mov
pop
sarb
ret
jmp
aas
jmp
mov
cmc
jg
pop
xchg
mov
nop
out
cli
add
shl
shl
cmp
xor
outsl
out
enter
adcl
cltd
imul
dec
hlt
mov
in
out
mov
adc
movsb
lcall
mov
fcomi
jo
pop
loop
or
xor
inc
and
push
sbb
and
cmpsb
out
mov
push
insb
jb
mov
stos
divl
outsl
xchg
adc
ja
dec
gs
push
push
sbb
das
lcall
adc
ror
out
jle
sub
xchg
push
push
movsl
cmpsb
cltd
dec
pushf
aas
or
mov
cmp
xor
cwtl
repz
repz
pop
fdivl
pop
and
scas
push
into
rcl
xor
xchg
jmp
inc
mov
adc
movsb
arpl
mov
gs
ret
daa
or
pop
push
movsb
iret
mov
or
push
sub
iret
and
frstor
in
push
fnstsw
in
es
xchg
push
pop
mov
ds
mov
xchg
fidivrl
in
aaa
adc
repz
push
pop
cmp
pushf
dec
lods
pushf
xor
fiaddl
mov
push
rcll
mov
out
mov
sub
dec
sti
xor
dec
ljmp
sub
insb
add
mov
bound
adc
stc
rclb
cmpsb
push
fimuls
xor
dec
mov
add
ja
push
mov
daa
int
ja
rorb
xor
movsb
sbb
ja
imul
sub
rorl
push
lds
movl
add
add
jb
addr16
sbb
and
or
xchg
loope
call
inc
or
mov
dec
jecxz
jae
xlat
lahf
rcrl
jb
addl
lds
inc
pop
andb
mov
dec
std
add
sti
je
adc
jg
data16
int
addr16
or
and
in
fwait
jp
inc
test
and
jnp
roll
lret
mov
aaa
pop
fcmovnb
enter
bound
cmp
jecxz
test
mov
xor
mov
lods
pop
inc
mov
cmp
lret
insb
adc
push
test
jae
xor
sub
push
shrb
lret
hlt
and
rcl
imul
cmp
es
imul
lcall
js
push
jbe
jecxz
dec
jle
repnz
addr16
stos
mov
fadd
sub
test
hlt
out
adc
ss
sti
daa
cltd
pop
jle
movsl
sbb
inc
xchg
adc
ret
das
lcall
loopne
mov
cld
lea
fwait
out
xchg
sarb
add
push
xor
pop
cmp
add
arpl
test
int
sbb
add
gs
jo
cmp
xor
dec
rcrl
fiaddl
push
mov
rcr
aam
dec
ljmp
scas
sbb
test
inc
add
lods
rclb
cli
mov
adc
fwait
iret
dec
adc
cmpsb
clc
add
aas
mov
push
and
add
fs
lahf
icebp
push
mov
ret
xchg
ss
xor
mov
mov
das
into
enter
or
push
push
sbb
add
in
test
ljmp
shl
push
movsb
mov
cmp
movsb
pop
pop
pop
imul
cmc
mov
out
cmp
cmp
lods
xchg
lods
and
xchg
mov
inc
leave
imul
xor
and
mov
mov
jle
mov
mov
fdivl
mov
in
xchg
jp
mov
sahf
jg
jns
push
fnsave
daa
out
es
mov
pop
mov
xchg
sbb
daa
mov
jbe
lock
outsb
orl
fmull
xlat
imull
cmp
push
fs
xor
lods
jbe
lahf
xchg
hlt
push
shrb
lret
arpl
jg
adc
shl
mov
jns
dec
cmc
mov
mov
int3
dec
lcall
cmpsl
out
push
xchg
push
mov
add
adc
xor
push
lock
jnp
cmp
xor
and
das
pop
cwtl
aaa
mov
fbstp
outsl
lcall
add
pop
ja
stos
or
pop
bnd
sub
mov
adc
cli
cmp
pop
push
dec
adc
dec
fbstp
pop
xor
and
pushf
mov
mov
fmulp
lcall
mov
call
stos
insl
sbb
fs
mov
adc
jno
in
mov
xor
rclb
cwtl
lds
xchg
rorb
cli
adc
lcall
mov
push
mul
movsl
and
lahf
mov
push
push
outsb
shr
inc
sbb
daa
ret
add
ljmp
dec
outsb
ja
jno
fwait
popf
imul
sub
pop
mov
dec
mulb
mov
jo
outsb
mov
ja
int
sbb
fists
mov
inc
push
lock
stc
iret
movsb
push
adc
lret
test
test
lret
or
and
je
je
loopne
gs
dec
xor
mov
adc
sahf
lods
mov
leave
repnz
cmp
mov
sti
or
mov
aaa
rolb
enter
ds
jno
adc
aad
dec
cmc
mov
xchg
leave
fwait
and
popa
mov
push
sarb
iret
dec
decb
icebp
fstps
sub
push
cld
scas
sub
in
rorl
stc
popf
pop
popa
ret
xchg
ljmp
cli
dec
or
repz
rorb
cmp
dec
xor
movsb
les
outsb
pop
cmp
xchg
sub
lahf
imul
imul
dec
xchg
sub
sarl
lret
jo
test
mov
pop
and
std
daa
adc
xor
push
push
inc
jmp
vxorps
sub
cmc
jl
clc
sub
cmpsl
je
xchg
sbb
js
xchg
adc
jle
push
sbbb
shl
enter
sub
sbb
in
loope
dec
orb
mov
repz
dec
enter
and
pop
pop
and
xchg
sbb
movsl
and
scas
lcall
cmp
sahf
pop
xor
iret
jb
sbb
clc
xchg
lds
int
dec
lea
add
ss
add
ljmp
in
xor
iret
push
daa
lea
popf
cli
shrl
das
lods
mov
or
stos
dec
dec
outsb
sub
rorb
mov
ja
das
pop
hlt
push
pop
cmpsb
outsb
out
aaa
push
xlat
pop
int3
xor
push
inc
das
aam
leave
lods
test
sbb
push
inc
fld
add
or
mov
xchg
sahf
jl
or
sub
or
arpl
cmp
call
enter
and
mov
inc
aas
ljmp
push
push
fisttpl
test
pop
jg
xchg
sub
or
cmp
or
fsub
xor
and
cli
aad
cli
push
leave
push
cmpsb
std
xor
movsb
and
sub
jecxz
cmpsl
mov
int
and
adc
jae
and
dec
fisttpl
lods
xchg
and
inc
push
mov
out
out
cmpsl
js
pushf
mov
cs
sub
outsl
push
cli
or
push
mov
lods
mov
xchg
ss
jbe
arpl
mov
inc
fidivl
cmc
push
lea
sub
jno
dec
aaa
idiv
dec
cld
mov
neg
sub
test
push
test
mov
lret
or
adc
jle
sbb
push
push
cli
cmp
icebp
mov
stc
outsl
add
fwait
mov
inc
ficomps
and
push
aad
out
outsl
push
mov
nop
mov
inc
jo
sbb
daa
mov
divb
push
pop
sahf
pushf
mov
adc
aam
out
inc
inc
mov
jae
fiaddl
outsb
add
cmpsl
scas
daa
inc
into
cltd
repnz
or
xor
jae
cmp
decb
push
pop
out
and
icebp
cld
xor
stc
jl
jne
mov
push
pop
cmp
pusha
push
imul
sti
cli
or
inc
dec
mov
xchg
aam
sti
fwait
xchg
adcl
je
push
in
enter
fldenv
adc
fstpt
test
lcall
sub
sar
inc
outsl
ror
and
notb
mov
push
cmp
loopne
push
and
xchg
scas
enter
aaa
in
inc
fsubrl
push
ss
sbb
test
sbb
mov
ljmp
iret
inc
out
rorb
rclb
mov
push
mov
jecxz
xchg
icebp
xor
and
mov
fs
cmc
xchg
sub
jbe
mov
mov
loopne
scas
xor
cmc
xchg
dec
pop
xchg
add
push
pop
fs
xor
mov
push
jae
mov
subl
cmpsb
in
movsb
inc
xlat
bound
adc
adc
iret
orb
les
imull
fadd
cmp
out
call
nop
push
and
adc
dec
scas
mov
inc
mov
xchg
cmpsl
lcall
mov
pop
add
pop
add
cwtl
lahf
stos
or
fdivl
push
fbstp
daa
jmp
push
inc
pop
xchg
xchg
and
aad
dec
loopne
in
add
push
dec
inc
ret
cmp
rclb
push
adc
fisubs
inc
scas
bound
filds
test
test
sub
cmc
jecxz
xchg
inc
mov
jno
iret
dec
sbb
push
inc
push
lods
jg
cmp
dec
push
incl
dec
decb
es
sub
out
mov
enter
nop
mov
xchg
inc
decl
jns
fcomps
dec
hlt
and
xchg
mov
push
xchg
ljmp
xor
cmc
push
jl
cld
push
stc
scas
adc
mov
out
dec
mov
sti
sub
sbb
or
enter
jnp
xor
ljmp
cmp
jmp
or
ds
jno
pusha
sarl
lea
lods
pop
xchg
cli
xchg
mov
sar
inc
nop
xorl
xor
xchg
fcoms
and
es
fidivrl
cmp
cwtl
test
dec
push
xchg
rol
push
mov
ja
add
mov
sbb
push
test
and
pop
icebp
mov
adc
and
jl
pop
inc
push
jbe
out
idivb
xchg
push
cld
add
jmp
mov
frstor
sub
inc
or
out
sbb
out
fistpll
xchg
cmc
fucomp
test
xlat
dec
pop
kunpckbw
dec
lock
fs
outsl
and
xchg
cmp
pop
icebp
adc
pushfw
or
pop
inc
push
inc
fs
sbb
ret
ljmp
mov
cmp
inc
mov
and
insl
loop
cwtl
scas
jo
sub
xchg
xor
rorb
push
cmpsl
mov
sti
movsb
sub
fmull
adc
mov
test
orb
pop
pop
and
mov
mov
sbb
cmpsb
dec
jb
mov
in
fbstp
insl
sbb
int3
popf
test
push
mov
cmp
sti
sbb
xchg
mov
mov
popf
xchg
leave
mov
mov
mov
dec
rcl
xchg
div
icebp
and
in
adc
jle
adc
lcall
rorb
xor
cmc
js
push
std
cmp
pushf
in
fs
mov
hlt
inc
xor
cwtl
mov
gs
sbb
adc
jge
popa
add
stos
inc
push
cwtl
and
sbb
pusha
into
mov
mov
fs
out
int3
imulb
adc
mov
imul
mov
call
and
add
shlb
fdivrs
push
fwait
repnz
ljmp
xlat
push
pop
ret
shll
lret
cmp
push
adc
bound
push
sub
mov
cmc
xor
loope
mov
sti
adc
in
jnp
rcrb
add
addl
fpatan
dec
leave
mov
adc
js
out
test
jg
ret
das
pop
push
mov
inc
aaa
int3
mov
inc
cmp
inc
adc
mov
incb
fdiv
jg
mov
shl
lods
int
shl
xchg
scas
push
insb
cmp
je
lock
push
daa
ret
xorl
inc
jecxz
mov
push
repz
mov
dec
sub
shll
nop
jle
inc
and
adc
mov
cs
sub
adc
sarb
mov
sub
enter
xor
xchg
pop
xchg
lock
and
cmp
cwtl
jle
aas
loop
in
dec
ss
pop
mov
dec
lods
or
daa
xchg
add
mov
scas
adc
jnp
mov
jge
and
sub
push
ja
cli
push
pop
add
mov
test
mov
ja
xor
jmp
add
dec
ja
xchg
jns
call
push
les
mov
loopne
inc
lds
cli
fwait
xor
and
sbb
jne
fnstsw
std
dec
leave
jnp
inc
dec
cmpb
sbb
sbb
stos
hlt
ja
pushf
adc
cli
jns
adc
add
or
in
cmp
cltd
in
fsts
push
jg
dec
xor
rcll
mov
movsb
jp
dec
push
and
and
inc
pop
xchg
mov
push
dec
pop
ret
lcall
lcall
jle
das
cmpsl
pop
sub
lods
cld
outsl
cmp
push
mov
ret
push
xor
push
inc
push
sbb
jo
jne
lea
rcll
xchg
push
push
push
cwtl
sub
mov
push
aam
xor
dec
or
loopne
lahf
and
jecxz
sub
scas
push
inc
popa
ja
dec
orb
cltd
pop
adc
xor
jns
pop
add
fidivrs
pop
popa
xchg
pushf
or
in
das
int3
fwait
decb
sub
fwait
xor
push
std
xor
mov
pop
or
iret
push
sarl
insl
into
cmp
lock
stc
out
nop
cmc
push
arpl
mov
mov
and
loopne
loop
adc
adc
lret
inc
test
mov
add
xlat
xor
jle
sbb
mov
pop
mov
pop
sbb
into
mov
mov
xor
stc
push
pop
loopne
or
sbb
gs
cmpsl
push
cli
aam
and
cmp
xchg
insb
addr16
push
inc
dec
xorl
scas
sub
popl
insl
out
pusha
push
or
mov
pop
xor
cmp
insl
lcall
dec
xor
adc
push
xchg
mov
adc
sub
or
jecxz
mov
cmp
add
xchg
dec
pop
inc
pop
adc
xchg
add
jge
mov
sti
pop
xor
sti
addr16
mov
out
push
sti
leave
jl
jecxz
cmp
push
std
xchg
pcmpeqw
movl
sbb
and
jo
adc
mov
adc
cwtl
mov
xchg
popa
fs
xchg
int
xor
adc
stos
ja,pn
cmpsl
aas
enter
cmp
lods
pusha
dec
insb
jne
out
add
xor
call
jb
or
jnp
pop
mov
ret
jp
dec
push
xchg
jg
lret
and
into
jg
xor
hlt
mov
push
cmp
mov
adcl
and
je
call
mov
xor
sub
aad
jmp
hlt
faddl
sbb
cmpsl
jns
mov
push
fisubs
cld
out
mov
imul
into
pop
js
dec
das
add
cmp
js
aaa
leave
mov
cli
std
popf
pusha
pop
sub
sub
sti
gs
shr
mov
imul
nop
movsb
add
add
rorl
andl
sub
fsub
xlat
jb
xchg
fsts
ss
dec
cwtl
dec
adc
out
loop
popf
lret
negl
fwait
mov
daa
jns
adc
sbb
add
sub
dec
fcmovnb
hlt
in
sub
adc
lahf
divb
sub
mov
in
psubw
xor
and
jne
mov
pop
shlb
imul
mov
mov
stos
fwait
ljmp
xchg
push
or
mov
ja
gs
out
imul
mov
imul
int3
add
mov
lea
cmpb
int
xchg
aas
add
mov
int
je
test
movl
xor
fs
and
fistpll
popa
and
test
out
loop
xchg
adc
mov
ror
mov
xchg
popf
sub
adc
loopne
orl
sarl
xchg
notb
and
jne
inc
push
inc
adc
sahf
pusha
in
xor
clc
clc
push
and
add
ffree
fdivp
je
ja
and
shlb
xchg
mov
imul
lcall
imul
mov
pop
imul
lods
loopne
icebp
js
jecxz
mov
scas
pusha
rorb
xchg
std
scas
push
mov
fstp
or
cmp
or
xchg
cmp
repnz
xor
loop
psrad
sbb
ja
jne
sub
pop
or
sub
lods
push
es
jmp
and
je
lahf
xchg
ljmp
adc
sbb
push
mov
or
push
add
pushw
xor
cmp
fs
push
pop
jb
mov
push
xor
fidivl
add
ja
add
jne
bound
xchg
ret
lea
xchg
mov
pop
mov
mov
cmp
aad
shrl
enter
iret
pop
rorl
inc
leave
push
stos
dec
push
xchg
adc
jo
mov
in
fldl
call
mov
or
pavgw
sub
ret
jmp
out
cmp
fwait
mov
add
add
enter
sbb
fwait
jbe
inc
pop
push
sub
pop
test
dec
fldl
xchg
aam
xchg
pop
pusha
jmp
inc
pop
mov
inc
jge
js
cmp
inc
pop
in
push
jmp
dec
in
aam
jnp
test
jecxz
cmp
mov
inc
mov
rcrb
add
int
lods
adc
mov
loopew
stos
jp
mov
cltd
sahf
into
jno
or
pop
jle
adc
mov
out
adc
add
ret
and
dec
movsb
clc
cld
mov
arpl
or
xchg
sub
cmpsb
add
andb
aas
popf
ja
cs
call
sub
js
sbb
mov
jns
fdivrs
scas
sub
push
inc
push
cmp
inc
scas
out
pop
adc
push
int3
push
das
addr16
xlat
andb
rorl
loopne
fldcw
sub
and
ds
sbb
loopne
add
inc
aaa
adc
dec
subb
push
dec
outsb
cld
and
clc
xor
aas
and
inc
dec
adc
enter
stc
inc
insb
lds
aad
ror
out
lret
cltd
push
mov
sub
loopne
test
out
sub
mov
dec
pop
xor
xor
xor
push
sub
loope
xor
cs
cmp
sbb
push
mov
mov
sub
mov
jnp
lds
pop
shll
mov
scas
sbb
dec
je
sbb
dec
xchg
in
mov
cs
mov
cmovns
pop
cmp
rcr
fwait
negb
outsl
or
daa
push
testb
ja
adc
add
das
lock
fs
push
in
sub
lds
in
out
xchg
adc
inc
aaa
xlat
orl
scas
pop
pop
mov
cmp
sub
pop
or
push
xchg
adc
out
es
dec
jge
mov
subl
sub
adc
rcll
sub
loopne
mov
das
rcl
popa
and
sbb
loope
jmp
out
jo
jne
call
cmp
adc
out
pop
push
pop
dec
outsl
enter
fstpt
sub
sub
inc
int3
hlt
enter
fldcw
mov
xchg
cld
stos
je
movsl
dec
mov
cs
pop
leave
cwtl
pop
xor
jae
and
fs
adc
xor
loopne
cmp
pop
movsb
xor
jecxz
xlat
cmpsb
or
dec
jo
add
dec
nop
test
cmp
lcall
mov
jno
pusha
xchg
dec
dec
bound
ss
flds
ljmp
andb
lods
test
sbb
jp
sub
out
or
fisubs
xchg
push
aam
negl
mov
mov
insb
stos
push
dec
ret
push
pop
scas
pop
or
add
fadds
xchg
jmp
scas
dec
std
mov
lret
sub
fldcw
pop
sbb
xor
dec
outsb
mov
push
jle
es
sub
push
filds
jns
fistpl
addr16
popf
in
fimull
add
movsb
jle
repz
jge
hlt
out
je
lret
in
lods
shlb
sbb
xchg
test
into
sub
sti
fildl
loope
lds
pop
cmp
fcompl
les
mov
cmp
jb
xorb
sarb
pushf
aad
arpl
mov
push
mov
ret
jo
jno
jnp
pop
xchg
push
lock
cld
mov
ljmp
popf
aad
pop
leave
lret
and
cmp
fninit
das
jg
scas
jb
push
xchg
hlt
pop
xchg
enter
out
rcr
leave
and
and
aas
cmp
xchg
popf
jne
scas
and
nop
dec
xchg
in
jle
fnsave
test
add
push
mov
test
mov
and
and
cmc
push
scas
test
and
mov
pop
dec
jbe
jno
pop
xor
shlb
shll
out
inc
std
jnp
sbb
or
or
hlt
xchg
push
cld
jg
add
adc
es
cltd
xchg
xchg
push
popf
mov
jns
mov
jle
cmpsb
nop
jo
sbb
pop
movsl
nop
aas
pop
aad
out
jnp
sub
sbb
imul
mov
ljmp
call
iret
cmp
jle
sub
jo
lahf
out
aad
jo
xor
out
sub
or
add
lret
insb
lods
mov
sbb
pop
outsl
int3
in
dec
sbb
or
sub
ss
sbb
mov
lret
fs
out
and
mov
aad
xchg
push
xorb
les
dec
mov
adc
out
lret
pushf
mov
mov
sub
mov
pop
mov
fs
adc
ljmp
std
inc
rcr
pop
jmp
data16
xor
jp
js
les
loopne
mov
adc
dec
sbb
pop
leave
fisttps
xchg
rol
cmp
mov
mov
fnsave
xor
sbb
outsb
xchg
jge
adc
add
push
enter
xchg
or
in
int
sub
vpunpckhwd
lods
push
push
hlt
fcompl
movsl
sbb
dec
iret
out
sbb
clc
dec
xchg
outsb
lods
xchg
fisttpll
neg
mov
ja
imul
shll
cmp
push
ffreep
jb
adc
jns
test
arpl
loop
aad
jp
xor
xchg
xchg
cmp
call
repz
decb
mov
stos
lea
mov
adc
and
data16
cmp
les
ds
shll
popf
mov
pop
sub
xor
lods
jecxz
das
fcomi
jne
std
jp
push
sub
add
mov
fisubs
xor
and
std
sbb
jmp
ljmp
adc
push
int3
fsubs
addr16
inc
movsb
mov
js
mov
aas
push
mov
sbb
mov
stos
adc
inc
aaa
adcl
data16
ja
loopne
adc
mov
mov
mov
or
cwtl
xlat
mov
repz
mov
loope
jne
or
sub
loop
scas
out
rcll
into
pop
ljmp
mov
push
int3
das
push
rcll
push
push
das
cs
bound
stos
push
imul
jne
xchg
scas
cmp
bound
repnz
fs
adc
adc
cmp
adc
mov
cmpsl
jb
shrb
push
xor
mov
pushf
enter
inc
inc
sbb
pop
ffree
aas
fwait
cmp
push
in
fldl
lock
testb
mov
stc
and
mov
jne
rorl
push
es
outsb
and
xchg
shl
xlat
push
nop
aas
testb
mov
idivl
add
leave
xchg
enter
xlat
add
mov
out
pusha
push
orb
inc
in
jmp
sarl
movsb
and
jmp
cmp
pop
push
xor
add
or
pushf
addb
repz
adc
icebp
xchg
pusha
repz
je
repz
ret
movsl
loop
mov
lods
addl
hlt
popf
lcall
or
xchg
push
outsl
or
mov
mov
roll
sbb
incl
inc
xchg
test
jge
subl
pop
xchg
scas
cltd
push
mov
in
xchg
dec
xlat
in
push
mov
fwait
sbb
xchg
cs
in
pop
das
stc
sub
insl
inc
sub
scas
sbb
iret
mov
test
push
jae
xchg
sti
orl
xor
rol
repz
mov
lods
test
xor
scas
xor
push
daa
dec
inc
inc
or
jl
mov
or
and
xor
call
sub
adc
push
sti
sti
cmp
insl
cmp
std
dec
imul
adc
mov
out
sub
jnp
lahf
xchg
and
out
mov
outsl
jecxz
es
das
xchg
ja
jb
or
in
jb
jo
lods
jg
movsb
xchg
cs
inc
lret
sub
or
fstpl
pop
add
dec
mov
lret
out
add
nop
les
popa
ret
mov
daa
divb
sahf
dec
push
fisubrl
jbe
loopne
fisubs
push
test
push
pop
jmp
int3
xlat
sub
scas
jle
inc
adc
mov
mov
daa
mov
xchg
sub
fsubrs
push
fs
xchg
pop
test
pop
int
jge
ljmp
pop
or
lods
faddl
adc
jb
jo
push
ficomps
scas
rolb
push
jb,pt
push
sbb
outsb
pop
pop
inc
sbb
sub
pop
mov
cwtl
push
clc
jns
imul
loop
aas
add
push
fisubrl
and
pop
pushf
xchg
add
loop
aam
jbe
pop
enter
mov
push
mov
insb
mov
cmp
sbb
dec
sbb
and
inc
frstor
movsl
pusha
jns
stc
in
cmp
stos
dec
xchg
dec
gs
mov
cmp
outsl
rclb
lcall
dec
add
mov
push
mov
jne
movsb
fimuls
movsb
mov
xchg
sbb
aad
repnz
mov
add
mov
push
and
push
mov
and
out
mov
das
dec
out
addb
loope
test
push
test
aam
sub
cmpsb
aad
imul
sbb
push
imul
cmpsl
scas
bound
push
fucom
dec
lock
insl
insb
cmpsb
jmp
icebp
lods
sbb
inc
mov
ret
sbb
into
cs
loopne
and
xor
dec
test
push
cmp
fistps
inc
je
mov
pop
xor
sbb
cmp
sub
mov
and
jno
loope
sahf
insl
inc
lret
pop
nop
fsubl
mov
jmp
test
adc
lahf
enter
xor
add
mov
mov
lret
mov
int
mov
mov
repz
hlt
mov
test
cmp
jae
xor
jne
shlb
jbe
lea
xor
pop
mov
mov
add
jnp
clc
les
pop
ja
push
scas
sub
in
pop
out
pop
das
insb
nop
inc
mov
cmp
imul
pushf
jae
aad
flds
lret
or
filds
imul
add
out
in
adc
cs
mov
fdiv
ss
xlat
cmp
xbegin
dec
xor
add
out
aad
dec
pop
push
lret
stos
adcb
jae
fdivl
push
adc
and
sbb
mov
in
jg
test
xlat
cmc
cmp
mov
jl
and
dec
fbstp
lods
jno
mov
xchg
sbb
ror
fisubrl
pop
cmpsb
xchg
push
sbb
pop
rolb
dec
or
daa
in
movsl
in
stos
push
lret
loop
sub
insb
xchg
xchg
rclb
sub
in
xchg
fs
inc
add
push
movsb
test
cmpsl
or
add
or
push
and
jg
addr16
cmp
inc
jns
mov
inc
loopne
sbb
and
mov
jne
mov
loope
icebp
jnp
sbb
lock
daa
jl
mov
in
popa
sub
and
jae
push
adc
pop
andl
pop
xchg
mov
aam
and
xchg
xor
jge
mov
imul
in
nop
outsb
inc
scas
je
dec
mov
daa
mov
scas
ljmp
pop
hlt
cmp
jg
sti
daa
dec
cmpsl
aad
mov
loope
push
xchg
in
repz
repz
cmp
insb
jae
pop
pop
pop
mov
xor
stc
dec
into
adc
fs
cmp
sti
inc
jl
shrl
fidivrl
adc
or
mov
mov
mov
popf
out
aad
sub
adc
out
sbb
cltd
ljmp
sub
dec
dec
mov
jae
jl
push
xchg
jns
lods
sbb
data16
pop
mov
add
fsubrs
pop
jp
sarl
adc
and
sbbl
dec
aas
test
and
mov
loop
nop
mov
dec
mov
fldl
notb
add
repz
or
ret
jl
sbb
out
mov
cmp
pop
sbb
mov
inc
mov
data16
divl
fisubrs
sbb
inc
dec
sbb
push
push
push
and
int3
aaa
fwait
popa
or
pop
jmp
ds
into
xor
repnz
ret
mov
sahf
mov
fcomip
push
dec
in
adc
test
loopne
cs
insl
mov
add
add
stos
cmp
test
data16
cmp
jns
out
daa
fists
cmpb
mov
xlat
call
jae
xlat
mov
and
xlat
cmc
shlb
push
mulb
sahf
sahf
xor
xchg
inc
shll
movsl
popf
jns
movsl
jmp
sbb
xor
xor
dec
js
hlt
inc
ja
xor
aad
movsl
sahf
in
adc
sbb
and
in
pushf
les
dec
sbb
xchg
jl
lea
int3
adc
or
das
les
subl
inc
dec
fs
mov
mov
and
cmp
cwtl
cld
icebp
mov
sub
mov
sub
shrb
dec
xchg
cmpsb
mov
mov
pop
adc
inc
sbb
scas
sti
jbe
dec
and
xchg
mov
or
outsb
out
xchg
push
push
movsb
xlat
pop
movsb
in
enter
cmpsb
mov
test
pop
stc
js
cs
call
lcall
fcmovbe
nop
push
dec
cmp
test
pop
mov
or
sbb
je
out
sub
pop
dec
add
lahf
gs
arpl
bound
xor
imul
mov
mov
test
arpl
or
push
loop
mov
push
inc
dec
lods
adc
cli
jge
hlt
inc
out
ficoml
xor
and
xchg
pop
add
scas
push
dec
pushf
movb
cmpsb
pop
push
sub
push
fwait
cmpsb
or
dec
or
sti
loopne
mov
aaa
jge
dec
icebp
and
add
and
xchg
pop
daa
popa
and
jae
icebp
iret
add
leave
icebp
sub
xchg
push
cmpsl
jge
in
push
scas
call
xchg
out
mov
push
push
jg
add
cmp
fistl
ljmp
xchg
adc
loop
mov
cld
mov
insb
add
movsl
not
sub
mov
sti
call
adc
pop
aam
nop
mov
int
pop
stc
outsl
lahf
add
test
in
mov
data16
inc
add
push
pop
pusha
pop
jecxz
fldt
sub
aad
insb
mov
aaa
cltd
sub
cmp
xchg
cld
sub
push
pop
xchg
lock
mov
cmp
in
fists
lds
jbe
lahf
cli
pusha
mov
xchg
stc
pop
xchg
jge
pop
in
pop
loope
test
into
movsl
adc
sbb
cmp
lcall
add
or
push
lock
add
movsl
in
popa
loop
mov
les
add
clc
stc
jnp
dec
mov
repnz
fdivs
push
stos
test
les
mov
push
enter
inc
sub
mov
sahf
repnz
je
push
mull
mov
insb
jns
iret
les
adc
xlat
xlat
push
sub
dec
jns
insl
nop
out
ljmp
lret
aad
stos
xchg
push
je
lahf
mov
cmp
stos
enter
xchg
test
cmpsb
lock
jecxz
aad
dec
movb
fdivs
xor
pusha
stos
mov
mov
cmp
jg
xor
stos
lret
sbb
or
outsl
sahf
out
push
scas
add
movsb
stc
insl
imul
jl
mov
inc
std
and
lcall
les
inc
gs
mov
int3
jecxz
cmpl
repnz
pop
repz
into
mov
mov
fcmovbe
stos
add
lahf
or
jecxz
cltd
movsl
cs
loopne
sub
test
and
pusha
mov
sbb
cmp
inc
inc
or
mov
mov
jne
or
or
sbb
pop
add
dec
rcrb
dec
jecxz
dec
sub
pop
in
xlat
in
lret
mov
mov
ljmp
inc
daa
pop
push
push
jno
enter
push
jns
movsl
paddq
pop
decb
iret
cmp
daa
jo
addl
adc
cmp
mov
cmpl
lods
sbb
pop
sti
aaa
ja
pusha
call
into
clc
outsb
pop
or
dec
push
jl
imul
mov
cmp
jns
push
mov
mov
pop
rorb
sub
or
repnz
ja
mov
pusha
jmp
dec
cmp
mov
mov
movsb
mov
mov
mov
test
cmp
aad
sti
movsb
adc
mov
xor
push
js
cmp
xchg
pop
das
xor
inc
rcr
rcll
and
lods
shr
addr16
jnp
scas
aam
in
cmp
sub
orl
ljmp
pop
or
fst
int3
mov
pop
arpl
sub
nop
aad
iret
loopne
fs
cwtl
push
enter
or
push
aam
scas
mov
aad
mov
mov
inc
mov
or
adc
or
and
mov
jnp
sbb
sbb
insb
out
repz
sub
adc
iret
gs
jp
xchg
mov
adc
jmp
cmp
push
sbb
nop
fs
lcall
or
and
gs
out
push
mov
pusha
hlt
jbe
bound
jne
jae
adc
push
mov
xchg
leave
ljmp
loope
fimull
inc
xchg
sbb
add
xchg
mov
cmp
addr16
cmpsl
or
adc
xchg
lods
mov
in
test
jae
pop
in
data16
lcall
cmp
mov
jmp
call
mov
mov
cmc
jne
mov
jnp
sbb
jle
dec
and
and
xchg
or
ss
mov
idivb
push
fucom
xor
bound
adc
jmp
jle
iret
lcall
insl
aad
or
add
inc
out
jl
in
enter
popf
push
ds
pushf
mov
sub
push
andl
js
sahf
mov
jno
push
mov
imul
dec
mov
mov
mov
dec
fadds
data16
cmpsl
xor
lock
inc
lret
push
sbb
sarb
insb
mov
in
mov
out
lock
push
daa
subb
mov
dec
dec
mov
lods
adcb
add
rorb
loopew
and
fildl
sub
rcl
fists
clc
mov
mov
or
shlb
and
ja
outsl
mov
mov
and
sbb
repz
pusha
int
cmp
cmc
dec
pusha
cmp
fcomi
mov
jle
movsb
jae
loop
mov
or
stos
mov
and
pop
sub
cltd
mov
inc
xchg
loope
lods
push
daa
stos
fs
mov
inc
push
jbe
lret
aas
and
iret
leave
inc
or
mov
cmp
fs
scas
out
rolb
out
aas
lock
mov
enter
push
mov
cmp
inc
cmc
jmp
call
mov
lods
adc
push
test
test
dec
mov
adc
add
stos
pop
xor
push
rorl
cmp
and
mov
mov
cli
pop
movb
in
stos
xchg
out
enter
decb
gs
lock
sbbb
cmpsl
fcoms
mov
xchg
xor
jg
dec
push
testl
arpl
in
inc
fisttpl
fsubrs
sub
mov
fcmovnb
ljmp
int
xchg
out
data16
test
sub
pop
or
repz
fldt
mov
je
xchg
adc
add
lods
cld
jmp
push
push
ret
ret
mov
mov
in
in
cmc
or
push
adc
pop
add
push
data16
repnz
mov
xor
xchg
mov
test
xchg
jne
inc
repnz
pop
adc
sub
pop
mov
push
jae
insl
lret
mov
mov
ja
pop
adc
jae
inc
inc
hlt
inc
sbb
fcmove
pop
cmp
sbb
xchg
inc
and
mov
stos
imul
and
fnsave
out
test
stos
rcrl
fidivrl
fwait
push
jecxz
mov
stos
in
jno
mov
cld
ds
cmp
push
jge
inc
fwait
adc
divb
mov
aaa
sbb
push
dec
jge
and
rcl
stos
lea
sub
cmp
test
pop
pop
js
xor
ljmp
mov
popf
xchg
test
imul
stc
pop
mov
add
mov
adc
jmp
xchg
xchg
adc
nop
xor
scas
pop
out
push
xor
push
add
mov
rcrb
mov
xchg
adc
popf
mov
jmp
jb
rcll
iret
daa
lea
int3
add
std
mov
and
bound
sbb
adc
mov
xchg
xor
sub
cmc
mov
push
das
fcom
in
icebp
movsl
jle
xchg
sbb
sub
mov
jp
xchg
dec
cwtl
push
sahf
out
out
cs
out
popa
or
jno
ret
scas
out
xchg
push
movsb
xchg
lret
and
mov
jecxz
push
jg
mov
movsl
pop
cltd
arpl
loope
or
cs
into
mov
push
push
and
xchg
data16
lds
std
pop
mov
or
mov
movsb
cs
imul
dec
lea
jno
aam
pop
ja
dec
mov
ljmp
sub
add
add
lea
andl
aad
notb
cmp
mov
cmc
je
fmull
and
outsl
fistpll
jle
scas
xor
test
mov
flds
pop
dec
in
xchg
imul
dec
imul
lock
aas
and
and
jo
xor
cmp
xchg
cmpsb
je
js
or
out
inc
daa
sub
mov
cmp
pop
adc
push
cmp
cmp
push
ret
pop
pop
mov
insl
pop
cmp
xchg
addr16
icebp
mov
test
inc
or
push
adc
roll
adc
mov
out
mov
out
or
in
leave
loope
push
testb
fidivs
leave
ds
movsb
jo
adc
in
inc
inc
dec
das
js
mov
repz
jno
sbb
mov
xor
lret
pop
and
iret
cmpb
hlt
inc
mov
xchg
cmp
mov
jg
mov
xchg
sbb
repz
pusha
fwait
add
repz
push
cmp
inc
push
fstl
mov
mov
pop
mov
push
jae
std
es
cmp
fidivrl
pop
add
push
dec
mov
xchg
insl
scas
lea
mov
sub
ret
jbe
xor
addl
cmp
ja
call
movsb
mov
pop
aam
add
loop
imul
fsubrl
mov
adc
daa
in
jmp
call
mov
cmovbe
loop
inc
sub
js
mov
dec
cltd
push
lods
shll
shrb
add
mov
sbb
imul
add
in
push
mov
hlt
mov
add
push
ljmp
ljmp
pop
rcrb
xchg
xchg
fnsave
add
pop
sbb
das
dec
pop
xchg
push
sub
dec
adc
mov
fs
dec
mov
add
jl
ja
xor
inc
xchg
in
fucom
lahf
fs
mov
lahf
lock
je
xor
ret
pop
jb
mov
push
inc
aaa
dec
or
cmp
cmpsb
pop
xchg
leave
mov
sub
rclb
adc
arpl
testl
incl
and
sbb
jnp
adc
mov
fs
pop
fs
lahf
repnz
ficompl
pusha
xchg
xchg
adc
leave
leave
inc
in
or
loope
jp
mov
lock
mov
mov
cli
sub
sbb
jno
aaa
or
cmp
stos
pushf
divl
mov
or
cs
repz
das
mov
jb
stos
mov
cmp
jb
push
mov
icebp
mov
test
dec
jne,pt
inc
push
and
xor
sbb
xlat
mov
push
or
or
pop
add
aam
dec
sarb
mov
aam
call
jns
jmp
inc
mov
cmp
xchg
pop
and
jl
inc
sbb
and
fstps
sti
mov
jne
mov
inc
pusha
jmp
mov
cmp
in
inc
jne
push
adc
pop
xchg
mov
cli
push
cli
xorps
mov
and
rolb
mov
ds
xchg
ds
enter
mov
outsl
jne
popf
mov
mov
mov
loopne
sub
mov
or
jmp
imul
adcb
push
popa
data16
xorb
test
out
cli
popa
or
lret
push
stos
loop
mov
loopne
inc
adc
cs
popf
fbld
xchg
test
push
in
repz
out
cltd
xor
les
rcll
das
xor
inc
jle
inc
pop
mov
jle
sbb
aad
sub
ret
out
das
pop
xlat
xchg
lds
mov
sarl
test
out
imul
ds
dec
nop
pop
pusha
out
mov
cld
xchg
add
out
dec
out
test
out
adc
dec
sub
outsb
daa
mov
test
outsl
dec
push
or
pushf
into
subb
lock
repz
push
loopne
shll
cli
int
scas
pop
movsl
xchg
inc
and
sbb
push
and
jnp
jne
sbb
inc
push
pop
daa
add
sub
pop
sub
add
mov
pop
and
and
jmp
and
xchg
add
out
pop
repnz
mov
xor
push
popa
rclb
and
fcoml
push
sub
fcoms
jl
xchg
rcl
je
sbb
cmp
lods
sbb
je,pn
test
cmp
dec
rol
subl
pop
repz
sub
sbb
arpl
pop
adc
int
clc
mov
inc
pop
bswap
or
scas
mov
test
or
sbb
xchg
xchg
dec
mov
sbb
sbb
mov
jns
mov
es
and
rolb
jecxz
lcall
xor
cmpsb
push
mov
add
pop
xorb
xor
xor
in
mov
scas
pop
sub
sbb
push
mov
into
inc
mov
daa
movsb
andl
add
sbb
into
pop
inc
sahf
jmp
idivl
outsb
xor
sbb
cltd
mov
movl
mov
pusha
push
mov
aaa
test
lods
test
push
orl
cmc
adc
pushf
fwait
cmp
mov
dec
ret
mov
dec
aam
addb
test
dec
incl
jecxz
pop
outsb
stc
xor
lcall
movsb
push
loope
in
in
std
cmpsl
xchg
xor
repnz
add
xor
mov
or
es
sti
ficomps
out
cmp
dec
ljmp
out
shrl
movsb
stc
xchg
in
adc
inc
fbld
out
fwait
leave
cmp
add
aaa
push
xchg
push
mov
inc
pop
mov
cld
jbe
xchg
jnp
popa
in
nop
adc
inc
add
shrl
adc
divl
insl
shll
push
lock
adc
pop
xor
inc
mov
sub
mov
lods
fnclex
data16
pop
adc
add
cmpsb
dec
push
dec
idivl
xlat
sbbb
shlb
sti
pop
cli
xorb
mov
shll
mov
pop
mov
fs
enter
and
jecxz
sbb
repnz
mov
jl
mov
jle
orb
int3
xor
movl
pop
push
lea
mov
xor
lea
xchg
pop
xchg
sub
add
stos
pop
xor
sarl
scas
movsl
data16
test
pop
mov
jmp
pextrw
ss
movsl
jno
popa
mov
stos
sarl
mov
or
push
pop
adc
pushf
and
jb
in
frstor
mov
mov
sbb
mov
xchg
xchg
bound
fcompl
sbb
pop
imul
lret
cli
cmp
shr
sbb
rolb
sub
jecxz
lock
cmc
aaa
aad
cli
frstor
cmpsb
pop
jnp
mov
into
mov
std
mov
into
lcall
aad
cmpsb
test
pop
mov
stc
add
loope
in
data16
push
or
lss
add
cltd
xchg
jecxz
push
xor
cmpsl
or
xor
test
test
inc
shll
lcall
xor
sbb
dec
push
xchg
sbb
sbb
test
xlat
out
incl
dec
adc
mov
xchg
or
mov
adc
shll
inc
into
lea
jg
sub
pop
mov
jmp
mov
or
mov
cmpsl
dec
sbb
out
dec
dec
sub
cmp
xchg
sbb
jecxz
bound
jg
mov
adc
sbb
dec
push
mov
jecxz
pop
outsl
popf
out
cltd
test
test
dec
xchg
jns
aas
xchg
xor
test
rcl
dec
movsb
dec
ss
mov
in
push
loope
mov
in
xor
cmc
jp
mov
flds
pop
mov
push
xchg
mov
add
inc
lea
mov
iret
or
and
sub
or
xchg
icebp
lcall
mov
out
fidivrs
adc
lret
imulb
xor
test
mov
cmp
and
add
inc
ss
fmuls
sbb
pop
rorb
mov
mov
xchg
mov
jno
rcrw
addr16
sub
cmpsl
adc
mov
sub
movq
gs
std
or
dec
mov
push
cli
shl
imul
xchg
std
xchg
shrb
adc
divb
loop,pt
lods
mov
add
mov
rcl
cmpsl
mov
fsubrs
das
out
jmp
and
addl
add
les
out
stc
stc
cwtl
push
shll
mov
xor
cli
arpl
pop
adc
inc
jb
and
es
sub
dec
rorl
push
adc
xlat
xchg
push
rsm
pop
outsl
sbb
cmpsl
xchg
test
xchg
inc
fiadds
sahf
pop
dec
cmp
fwait
pop
mulb
xabort
dec
les
jae
dec
in
js
add
push
outsl
call
xor
in
adc
push
mov
popa
stos
push
mov
lret
sarb
adc
mov
jp
loope
mov
lds
inc
iret
xlat
mov
dec
rcrl
cltd
orl
dec
mov
inc
sbb
mov
mov
cmpsb
jl
push
inc
out
loopne
xchg
xchg
fs
jl
jmp
mov
add
fcom
ds
add
sbb
sub
pop
mov
adc
aas
shlb
or
sbb
push
sbbb
mov
test
divl
adc
push
push
imul
addr16
sbb
ja
or
jg
loope
jp
adc
mov
jno
insl
mov
cs
jecxz
mov
mov
aam
mov
scas
mov
dec
ret
lods
movsb
jp
jo
and
enter
xor
push
sub
fists
popa
xor
pop
repnz
ret
enter
mov
fisttpll
lds
add
dec
mov
or
fstpl
mov
xor
outsl
mov
cmpsb
cli
jp
mov
cmp
dec
std
fwait
and
je
push
dec
in
aas
cwtl
pop
gs
lret
xchg
or
xchg
stos
loop
jecxz
stos
push
clc
vpacksswb
gs
mov
addr16
sbb
sbb
jl
addr16
push
in
stc
lods
inc
je
rcll
imul
jmp
int3
sbb
pop
adc
fcompl
adc
call
mulb
stos
ficomps
fsubrl
mov
in
add
xlat
addl
xchg
hlt
xor
cmp
cli
push
xchg
mov
pop
in
push
adc
pop
in
jne
or
add
push
scas
aam
push
aaa
dec
lds
dec
add
jl
sub
cltd
push
les
fs
cmp
cmp
inc
sub
adcb
push
inc
les
mov
jle
adc
inc
push
in
and
xor
add
mov
outsb
into
adc
add
jecxz
push
stc
jo
cmc
and
jbe
xor
dec
ret
fmuls
and
or
sub
sbb
not
fisubrs
out
andb
std
xchg
jae
sbb
repnz
sbb
idivb
dec
sbb
inc
dec
pop
xchg
popf
aaa
pop
cmc
mov
push
movsb
add
ja
fucomi
imul
pop
mov
dec
jbe
mov
js
std
mov
xor
nop
loop
cmp
inc
mov
jg
inc
sub
adc
inc
and
jp
push
enter
add
jmp
or
xor
lret
testl
cmpsb
je
cmp
mov
repnz
mov
lcall
fadds
inc
pop
add
jecxz
ffree
enter
mov
rcrl
ja
cmp
lahf
fld
popf
cs
lods
lret
popf
lret
pop
or
mov
loop
pop
and
leave
adc
jg
out
dec
and
xor
add
mov
iret
fcomi
dec
mov
cmpsl
clc
xor
arpl
popf
xchg
mov
cmp
aad
mov
sbb
jecxz
and
dec
mov
aaa
or
rcrl
std
cmp
and
mov
sbb
idivb
outsb
push
and
xchg
test
sub
int
mov
aam
subb
popa
pop
loop
fildll
lret
arpl
leave
test
or
xchg
jbe
cmc
fnstcw
mov
mov
stc
mov
mov
push
scas
test
push
sub
add
push
xchg
cmp
or
cmpsl
in
pop
stos
es
lcall
mov
lds
dec
push
sbbl
insb
adc
xor
es
cmpsl
jne
popa
pop
mov
adc
or
and
pop
inc
sarl
and
and
or
mov
rcl
cltd
test
xor
in
mov
adc
js
jne
xchg
icebp
or
xchg
push
add
out
dec
fst
cld
adcl
jecxz
ljmp
ror
test
insl
xor
lcall
daa
lret
add
jb
or
jnp
hlt
xchg
xchg
ret
inc
popf
sbb
jmp
xor
out
inc
mov
in
push
outsb
dec
test
fildl
cmc
mov
dec
mov
call
cmp
popa
push
cmpsl
or
or
cwtl
popa
xchg
push
and
les
imul
pop
and
rorl
and
js
movsb
or
divb
push
pop
loop
sub
stos
test
psllq
subl
mov
stc
xchg
loop
and
dec
or
adc
jne
add
fstps
sbb
in
inc
mov
xchg
mov
jmp
sbb
je
and
fwait
push
test
sbb
mov
jmp
repnz
or
arpl
xchg
aad
fmul
or
dec
push
adc
sub
fcoml
adc
out
inc
jg
jmp
jns
pavgw
out
ret
xchg
xchg
sbb
mov
hlt
dec
xchg
fwait
mov
xchg
test
subb
cmp
es
cmp
scas
mov
aad
outsb
jl
sbb
pusha
or
and
ss
mov
sbb
jno
fisttpll
add
push
test
jmp
push
ljmp
ds
aam
jae
jns
push
sbb
and
loopne
mov
cmc
push
lahf
mov
divl
add
lret
scas
pop
push
call
icebp
dec
adc
and
jg
xchg
xor
out
js
cmc
sbb
lret
and
cmpsl
mov
and
or
xchg
movl
adc
dec
pop
pop
mov
xor
pop
lret
loope
js
into
divl
inc
fsubl
pop
sbb
incl
mov
outsb
pop
les
mov
sub
sub
mov
fwait
fs
lods
adc
add
leave
push
sbb
xor
jl
popf
add
divb
jns
in
mov
inc
mov
inc
add
inc
enter
jecxz
and
js
add
cmp
push
fwait
rcrb
sti
xor
in
xor
aas
xor
jp
ss
sub
and
mov
stos
sahf
sub
pop
and
mov
xchg
and
call
sti
add
scas
or
add
daa
shrl
fisubl
lock
xor
and
std
dec
mov
xchg
loopne
stos
dec
pop
sbb
data16
and
xchg
insl
aam
xchg
fcmovbe
mov
imul
movsb
lock
push
int3
std
fmull
add
aam
mov
push
jp
cmp
sar
loopne
mov
lahf
pusha
test
pop
fistpll
test
sbb
dec
stc
je
xchg
lret
cmp
sub
push
adc
cmp
in
add
imul
addr16
cmp
dec
mov
shr
dec
jg
cwtl
jge
pusha
xor
mov
iret
push
fcoms
sub
add
pop
or
rol
xchg
sub
aam
in
inc
hlt
fwait
xchg
and
adc
into
mov
inc
pushf
fidivs
adc
jmp
insl
pop
roll
mov
adc
dec
xor
iret
fdivrs
pop
jnp
lods
mov
popa
clc
out
push
xlat
cmp
loopne
addr16
push
jecxz
mov
mov
pop
ror
stc
aaa
jbe
adc
scas
stos
ja
inc
jg
in
sbb
jle
add
enter
xchg
cld
push
test
int
arpl
push
mov
push
push
into
pop
adc
sbb
shl
pop
push
arpl
lcall
movsl
inc
jbe
jnp
cmp
inc
aad
pop
loop
sarl
loope
inc
and
cwtl
pop
push
pop
lds
mov
push
mov
push
dec
hlt
dec
ret
jle
lods
mov
pop
cmpsl
mov
lcall
test
addr16
repnz
enter
mov
adc
sbb
es
notb
test
test
fs
dec
pop
ret
sub
enter
rorb
xor
shll
fimull
sub
add
dec
popf
das
xor
negl
pop
xchg
in
pop
jns
adc
cmc
call
test
loope
xor
fsubs
fsubrs
fnstsw
insb
push
mov
shlb
push
jecxz
xor
push
mov
popf
xor
int3
push
dec
loope
mov
divl
push
cmp
das
or
js
mov
ret
aad
push
adcb
mov
ret
dec
lahf
in
cmc
sbb
stos
enter
sti
bound
adc
sbb
adc
push
stos
cwtl
ljmp
sbb
aaa
mov
cmpl
cli
xor
and
push
cmpsb
xchg
imul
cmp
push
adc
xor
sbb
xchg
add
mov
lods
cld
testb
push
cs
push
jnp
movsb
push
inc
cmp
loope
sub
mov
mov
jbe
or
adc
jo
outsb
dec
decl
pop
aad
pop
cmpsb
loopne
clc
test
sbb
jns
push
shl
pop
jnp
int
sbb
jge
in
lea
mov
add
nop
mov
xor
outsb
addr16
mov
jb
icebp
push
test
jmp
out
gs
nop
jne
inc
mov
add
add
mov
ret
jmp
out
imul
js
push
ja
jecxz
inc
adc
sbb
cmpsl
or
iret
jb
out
add
and
in
pop
dec
push
xor
int3
mov
ja
stc
in
repz
outsb
pop
pusha
imul
sub
mov
pop
fistpl
push
popf
jge
repz
xchg
repnz
mov
movsb
jecxz
enter
popf
sti
or
cli
inc
hlt
or
and
sbb
add
out
rcrb
mov
sub
rolb
arpl
mov
out
xor
cli
pop
xchg
daa
fiadds
int3
aas
loop
sbb
inc
dec
das
xchg
and
xor
push
push
mov
push
add
mov
pop
ljmp
insb
sarb
ds
mov
insb
not
xchg
push
das
scas
mov
nop
jnp
icebp
or
or
jecxz
push
loope
icebp
js
inc
test
mov
jnp
mov
pop
shlb
or
shrb
inc
lds
and
push
outsb
pop
mov
xor
add
gs
hlt
ss
cld
mov
xchg
add
mov
inc
mov
sbb
lock
shll
leave
inc
sub
repnz
jnp
xchg
sub
sbb
mov
xchg
fildl
or
jp
imul
wbinvd
mov
jne
pop
jg
stc
sbb
fs
inc
jae
daa
sub
dec
loopne
mov
cmp
aas
mov
lret
jge
daa
jecxz
out
mov
lea
mov
mulb
and
fimull
sub
stos
loop
mov
jl
cs
js
fisubs
fwait
jbe
in
xor
cli
repnz
ror
jge
push
cli
mov
inc
sbb
int3
in
mov
xor
or
push
mov
fs
pop
aas
sbb
sub
mov
out
outsb
pusha
sub
sub
insl
pop
add
lods
or
repnz
add
shlb
sub
xchg
sti
outsl
ljmp
cmp
jo
pop
push
sti
jae
dec
cli
push
lcall
int3
pop
test
ret
adc
scas
pop
ss
push
cmp
aaa
xchg
roll
shlb
ja
mov
iret
mov
cltd
notl
stos
cmc
lcall
mov
dec
sub
adc
outsl
pop
push
inc
sub
add
nop
xor
adc
sarl
daa
andb
cwtl
aam
or
insl
int
sqrtps
sub
test
int
loope
lahf
icebp
movsb
dec
lcall
inc
cmp
jge
dec
inc
cli
xor
mov
push
push
dec
dec
addr16
in
sub
repnz
std
pop
jmp
imul
cmp
xor
add
outsl
sbb
jl
aaa
stc
pop
xor
and
adc
test
into
jecxz
loope
and
xor
and
mov
scas
xlat
push
inc
les
int
add
sarl
test
insb
hlt
ret
jecxz
xor
push
cmpsb
imul
loopne
mov
push
insl
ljmp
fucom
je
and
push
mov
cmp
out
push
jge
dec
jle
repz
mov
push
ret
mov
pushl
dec
inc
and
call
rol
mov
sub
adc
sbb
outsl
adc
notl
xchg
je
jns
ja
sbb
loop
out
or
xchg
xlat
cwtl
cmp
and
pop
jnp
rorb
dec
jle
sub
jmp
xlat
cli
xor
sahf
outsl
dec
in
dec
fbstp
insb
add
add
push
inc
pop
nop
sub
cmp
in
std
loopne
mov
push
ja
out
xor
loopne
mov
jae
lds
loope
jmp
sarl
push
inc
sbb
and
nop
xchg
test
rcr
cmp
push
and
mov
inc
fwait
jg
jbe
jb
push
jecxz
mov
inc
inc
test
test
ljmp
and
int
outsl
addr16
lds
cmp
cmp
xor
jno
push
add
xor
pop
xlat
fisubrs
lahf
pop
icebp
xchg
nop
xchg
xchg
mov
out
lret
aas
adc
jecxz
sbb
popf
shl
lret
jno
addr16
cwtl
mov
lret
sbb
xchg
jnp
push
mov
jg
ljmp
pop
sub
mov
jge
rcrb
test
scas
push
loope
lret
push
xor
daa
push
jmp
xchg
jb
cmp
cltd
sub
push
sahf
out
fiadds
cltd
jb
xchg
lret
aas
mov
add
mov
pop
mov
jle
sahf
cmpsl
xchg
arpl
jle
pushf
cmpsb
or
fsubrl
loope
hlt
js
cmp
or
push
mov
in
xlat
jmp
xorb
cmp
iret
pop
adc
test
enter
pop
shll
mov
add
movsl
adc
push
jb
rcr
stc
imul
cld
pop
and
jg
xchg
aad
push
imul
test
std
push
test
sub
outsb
xlat
leave
inc
inc
mov
dec
stos
sarb
iret
xor
je
gs
inc
stos
mov
icebp
inc
pushf
adc
roll
xor
mov
test
popf
iret
sbb
mov
loop
clc
aam
push
in
adc
lahf
mov
sbb
mov
idivb
jb
mov
pop
dec
rolb
or
ljmp
push
pop
jmp
ret
or
call
xchg
data16
pushf
xchg
jae
enter
lcall
insl
xchg
inc
shlb
mov
dec
sbb
sub
or
xchg
popf
pop
sbb
pop
mov
sbb
shr
sbb
loop
aad
jns
push
ss
add
cmc
mov
dec
stos
lfs
jb
xchg
inc
jecxz
xorb
dec
je
xor
ds
test
xor
xchg
outsl
movsb
test
aaa
jbe
psubsb
dec
or
repz
daa
loop
daa
data16
xchg
stos
js
jnp
or
leave
gs
cli
sbb
inc
int3
cmp
sbb
lcall
push
andl
mov
shll
inc
and
mov
add
xchg
cmp
pop
dec
push
pop
push
aaa
ret
gs
jb
sub
adc
jp
scas
sbb
add
inc
ljmp
and
je
jge
outsl
es
jae
and
inc
jl
fnsave
cmp
mov
jp
sbb
imul
ljmp
or
aam
jmp
xor
mov
pop
loop
mov
jnp
test
jae
sub
es
outsb
push
jl
jno
xor
xor
fnstcw
push
push
xor
and
aas
ljmp
add
cmpsl
mov
mov
xor
in
fcoml
jmp
xchg
lods
in
xchg
xchg
jge
sarb
mov
mov
lods
pop
jmp
dec
pop
test
xor
nop
jns
pop
in
mov
fsubrs
dec
out
je
mov
xor
ss
test
es
sti
mov
jp
shlb
and
dec
push
jae
repnz
lods
ljmp
xor
fwait
push
sbb
and
test
mov
aaa
xor
es
push
sbb
sub
mov
push
ret
mov
hlt
fistpl
xor
popa
loop
into
mov
sbb
sub
shl
loop
cli
dec
pushf
stos
mov
lret
dec
cmp
pop
int
mov
out
inc
jae
stos
cld
in
arpl
in
jl
addr16
data16
imul
xor
mov
jle
push
ds
popa
jle
inc
pushf
xchg
in
adc
stos
imul
mov
test
cmp
xchg
addl
imul
adc
insb
rep
xchg
add
jbe
shr
pop
mov
mov
das
sbb
mov
mov
cmp
xchg
insb
xchg
sti
aas
jb
adc
xchg
mov
lahf
xchg
popf
loope
iret
bound
lcall
push
add
adc
cmp
jmp
cltd
xchg
pop
cld
rcll
lods
lds
cmc
cmp
rorl
dec
imulb
std
sar
and
mov
pop
scas
jecxz
aam
xor
mov
mov
mov
cli
cs
or
mov
sbbl
ret
out
loopne
shl
jnp
sub
aad
out
pop
fnstcw
or
sbb
dec
sub
stc
push
pop
adc
ds
mov
aas
pusha
jg
rcrb
pop
ret
imul
lahf
movsb
xlat
dec
addb
sub
xlat
ss
xor
push
clc
das
sbb
aas
cmc
mov
mov
sahf
loope
cmp
sub
push
cmp
jle
mulb
mov
movsl
mov
inc
jecxz
addl
into
stos
fildll
popf
fdivrs
inc
iret
jb
aad
movsb
shrl
pop
das
dec
cmpsl
pop
xor
xchg
push
fdivp
cmpsb
outsl
add
jb
stos
push
jl
xchg
mov
xor
test
int
push
push
push
stos
xchg
xchg
stc
cld
xchg
sub
in
pop
inc
inc
mov
mov
push
mov
jp
mov
jns
cmp
lret
lahf
out
inc
or
lret
into
xchg
lret
dec
arpl
sar
outsb
mov
out
aas
cmp
push
lcall
jno
xor
aad
inc
cwtl
stos
fisttpl
and
add
xchg
xchg
test
stc
or
in
int3
push
ret
mov
xor
mov
int3
xor
int
push
mov
pop
test
into
cmp
lcall
outsl
lea
mov
pushf
add
les
gs
xor
mov
dec
iret
iret
jecxz
cmp
lret
shlb
pop
mov
rcll
cmp
mov
ret
pop
popf
pop
push
dec
pop
filds
mov
mov
imul
in
enter
cmpsb
lods
nop
jp,pn
and
rclb
lret
outsb
cli
jo
cmpsb
dec
sbb
lock
push
xchg
adc
in
scas
adc
rep
pop
ficomps
add
push
jecxz,pn
mov
out
enter
cmp
cmpb
sub
in
mov
outsb
jge
sub
fldenv
sbb
insl
xlat
push
mov
loopne
loope
sbb
les
push
std
dec
xor
push
sbbl
lcall
dec
and
inc
push
aaa
dec
dec
rcll
lods
cwtl
cld
call
xchg
outsb
cld
adc
mov
mov
push
mov
imul
hlt
inc
xchg
xor
sbb
scas
mov
sbb
jnp
scas
mov
movsb
clc
gs
and
imul
dec
leave
fistpll
jbe
hlt
pop
cmp
sub
negb
xchg
push
dec
xchg
push
or
jl
dec
or
adc
das
test
pop
mov
sbb
jecxz
cmc
push
xchg
daa
imull
mov
jle
fwait
inc
pop
popa
scas
lea
inc
cmc
add
xchg
cs
mov
mov
or
cmc
push
xor
and
stc
xlat
cmp
sbb
daa
out
jp
and
ja
fildll
pop
jbe
arpl
inc
cmp
sub
insl
ret
mov
jo
arpl
cmp
les
testb
adc
mov
icebp
out
loop
cmc
icebp
and
xchg
fucomi
adc
ret
aam
enter
or
jno
inc
push
notl
cmp
shlb
jo
mov
xchg
sub
jg
jl
jg
into
cli
adc
aas
sub
cmp
lds
xchg
and
sbb
clc
scas
lods
dec
mov
mov
sub
push
sbb
lock
sub
xchg
out
dec
adc
xchg
push
scas
pop
pop
sbb
dec
inc
repnz
push
or
push
push
sarl
inc
idivl
pop
adc
jge
icebp
dec
cmp
mov
std
andl
lret
fdivrs
lds
pop
mov
out
add
cs
js
dec
mov
mov
dec
sbb
cmc
push
into
mov
cs
cltd
mov
sub
lds
jbe
mov
popf
daa
mov
repnz
cmp
mov
mov
inc
in
ret
enter
aaa
mov
test
into
stc
out
sbb
ja
jecxz
test
mov
xor
adc
adc
mov
dec
std
pushf
add
movsl
subb
xor
gs
mov
mov
imul
in
nop
cmp
jae
dec
xor
sub
jae
stos
ds
icebp
or
or
dec
cmp
or
inc
stc
cmpsl
cs
mov
stos
inc
xchg
ljmp
and
rcrl
push
add
cmc
lock
cld
xor
cmpsl
ret
mov
cmpl
mov
fsubrs
jnp
mov
std
les
lds
push
sti
dec
data16
cmp
sub
aas
dec
rcr
faddp
or
notl
or
es
loop
leave
insb
mov
arpl
daa
cld
xchg
sti
xor
movsl
mov
push
subps
mov
loope
xor
outsb
push
adc
inc
fisubs
lahf
rolb
jo
mov
cmpsl
bnd
testl
pushl
mov
es
mov
pushf
xor
add
stos
xchg
xchg
inc
cltd
mov
push
pop
lea
leave
incl
push
movsb
xchg
adc
adc
punpckhbw
mov
mov
pop
xrelease
arpl
scas
add
leave
fxch
hlt
out
mov
dec
push
mov
mov
aas
jno
xlat
push
mov
lods
repnz
stos
cmp
test
pop
stos
test
into
inc
lods
jl
das
or
lea
fiaddl
or
lods
arpl
js
sbb
jbe
inc
cmpsl
cmp
jl
cmp
insb
push
add
repz
out
outsl
xor
lret
cld
or
mov
aad
imulb
ret
testl
and
push
push
sub
insl
mov
je
sahf
and
mov
je
daa
outsb
outsb
jl
cmp
dec
test
pop
fwait
mov
loopne
clc
scas
out
push
or
sbb
jo
test
and
cli
mov
pop
in
pop
mov
fcmovb
jb
flds
lret
pusha
aas
sbb
mov
push
das
push
icebp
aaa
ljmp
sub
xor
imul
cmpsb
xchg
mov
or
xor
cmpsl
cmp
or
in
add
and
xor
sub
mov
daa
fldt
jl
push
outsl
mov
pop
and
push
mov
loop
dec
aas
mov
fstl
push
fists
sbb
data16
sbb
movsl
jnp
mov
ret
pop
pushf
mov
mov
lods
and
pop
sub
lds
mov
aaa
out
pop
xor
push
rclb
add
lock
movsl
enter
lcall
bsf
pop
xchg
inc
mov
fstps
or
pop
ret
add
push
in
mov
lea
sbb
cmp
pop
adc
stc
test
xor
scas
and
xchg
xchg
xchg
fwait
test
jne
in
mov
js
lods
jg
mov
shrb
adc
adc
in
and
and
fistps
mov
mov
xorb
aaa
and
out
scas
je
arpl
ret
inc
sub
ljmp
imul
fmuls
scas
mov
jb
pop
loope
add
mov
in
shrl
nop
stc
dec
inc
lock
les
aam
and
xor
add
jnp
push
orps
inc
cmc
fs
cmp
adc
jg
inc
mov
mov
aam
fs
or
sub
dec
adc
xchg
dec
jbe
jmp
pushf
test
jnp,pn
lods
dec
xor
scas
test
dec
pushf
js
cmp
mov
test
mov
pop
loopne
lds
mov
lock
mov
loopne
adc
jbe
xorl
push
pop
ret
xor
xchg
pop
mov
xchg
dec
and
mov
sbb
ja
js
jns
adcl
adc
jno
loope
adc
xchg
data16
gs
imul
nop
dec
dec
imul
stc
sbb
mov
cmpsl
or
out
je
mov
dec
inc
mov
cmp
movsb
fistpl
jnp
lods
roll
clc
fsubs
mov
xor
sub
add
sbb
aam
in
in
in
nop
inc
into
jb
cmpsl
push
sbb
jne
lea
mov
or
adc
aam
outsl
in
add
add
pop
push
hlt
fldcw
stc
les
jae
pop
mov
inc
inc
mov
adc
jg
xor
and
std
xor
lcall
das
daa
orl
xorb
jae
cmpsl
xchg
mov
adc
sbb
addb
cmp
inc
pop
sub
das
int
or
lock
sub
pop
ficoms
pop
repz
cmpsb
lret
sbbb
sbb
cltd
jl
xchg
mov
push
int
pop
jnp
imul
or
push
or
sub
cmp
fs
xlat
loopne
clc
dec
mov
jg
scas
aas
sub
es
sbb
out
jmp
sti
inc
jp
dec
inc
stos
cmpsl
leave
std
pop
xchg
into
pop
fimuls
jb
jb
mov
sbb
inc
mov
cmpsl
mov
xor
sub
js
lea
fstpt
mov
push
xor
push
pop
jge
mov
cmp
or
sti
adc
mov
lea
jne
add
dec
test
add
out
fisttps
fbld
adc
sbb
movsb
xchg
jmp
gs
inc
xchg
stc
add
mov
jne
cli
jmp
aam
ja
js
xchg
sbb
cwtl
outsb
flds
fistpll
enter
adc
push
sti
jns
xchg
fwait
test
add
imul
adc
mov
jmp
inc
stos
or
cmp
iret
out
ret
cld
lods
mov
mov
mov
mov
or
jne
inc
dec
js
cmpb
jae
loope
pop
daa
add
aad
cmp
int
inc
das
insb
test
sbb
jg
sbb
xchg
fsts
popf
je
adc
cs
push
mov
sub
adc
hlt
xchg
jae
sbb
imul
jb
imul
xlat
sarb
adc
orb
add
jb
iret
pop
push
cmp
add
hlt
je
fisttpl
pop
repz
and
push
out
in
dec
stc
dec
jecxz
in
pop
mov
adc
fcoms
arpl
in
es
push
push
mov
cmp
add
lods
hlt
sub
ret
xor
pusha
adc
adc
and
test
ss
xor
gs
aam
insb
rorb
nop
xchg
faddl
push
daa
push
or
clc
jp
cltd
aas
aad
pop
sub
into
jecxz
dec
movq
mov
mov
stos
or
je
repnz
sub
jno
sub
inc
hlt
add
popl
int3
outsl
cmp
sbb
mov
loop
into
arpl
xchg
mov
push
dec
in
ret
je
inc
loope
enter
andl
loop
insl
lock
mov
cmpsl
add
sbb
fadds
stos
pop
nop
mov
mov
les
jne
jle
pop
xchg
in
lock
data16
roll
inc
xchg
icebp
pop
xchg
jmp
or
add
push
dec
adc
mov
sti
xchg
inc
mov
out
inc
jl
add
aam
adc
es
test
pop
mov
stos
arpl
inc
sahf
mov
in
mov
dec
jmp
xchg
push
add
pushf
pop
dec
fwait
les
dec
xchg
push
ret
jle
faddl
or
mov
mov
repnz
xchg
outsl
or
cmp
dec
insl
xchg
xchg
in
jmp
cmc
push
dec
jb
jo
lds
and
jp
mov
shrl
lds
sti
roll
iret
mov
test
push
mov
clc
je
hlt
fbstp
pushl
mov
fnstenv
out
ror
inc
add
imul
cs
xor
adc
push
pop
cmp
inc
cmp
cmp
int3
push
lds
jae
sbb
into
repz
mov
mov
pop
xchg
add
rolb
xchg
stc
xchg
xchg
mov
cmp
mov
or
sbb
imul
fld
adc
adc
lods
mov
jl
test
inc
pop
test
adc
dec
icebp
inc
jmp
jo
pop
fimull
repz
fwait
pop
and
xchg
shrl
jo
mov
push
xor
out
jnp
addr16
std
dec
mov
mov
es
out
mov
add
ret
adc
pop
add
dec
xor
add
sbb
daa
jns
mov
cwtl
hlt
sub
jge
test
jle
je
fsub
int3
xor
test
push
xor
mov
mov
pop
mulb
mov
je
nop
es
aam
xor
lds
and
sbb
repz
sub
aaa
xlat
inc
jne
gs
lcall
mov
mov
sbb
fwait
rcl
frstor
scas
or
pushl
rcr
or
push
jmp
jbe
hlt
imul
inc
bound
rorb
call
xchg
dec
xchg
sbb
dec
mov
pop
push
out
jne
inc
jnp
sbb
lds
scas
es
gs
fisttpll
xlat
jle
push
in
pusha
mov
cwtl
jp
mov
ljmp
xor
and
dec
cmp
jo
jl
xor
lea
adcl
mov
lcall
push
bound
pop
stos
test
push
push
cmc
jb
lea
jb
pop
or
shrb
mov
mov
pop
dec
adc
das
addr16
lock
orb
repz
inc
mov
fnstenv
add
inc
insl
into
enter
insl
cmp
addr16
cmpsl
aad
xchg
je
sahf
adc
or
xchg
pop
sbb
mov
push
mov
sbb
in
mov
dec
out
in
mov
mov
cwtd
dec
fwait
jge
out
test
mov
or
mov
xchg
frstor
bnd
and
jnp
lds
loop
call
outsl
sbb
stos
stos
addr16
mov
add
mov
daa
cs
ficomps
jp
cmp
mov
ja
mov
and
jl
dec
sbb
fisttps
ret
sarb
add
xchg
xchg
adc
mov
push
dec
mov
dec
lds
mov
jle
xor
jl
lods
jne
push
pop
ficoml
push
pop
sub
or
sbb
iret
mov
inc
xchg
lods
adc
test
push
cltd
adc
mov
outsl
lds
cmp
cmp
testb
in
cmp
and
push
lds
sti
mov
dec
and
fnsave
ljmp
add
fs
test
dec
and
mov
xor
mov
mov
aaa
mov
mov
xchg
inc
adc
cmpsb
inc
mov
pop
cmc
and
pop
aaa
les
inc
scas
pop
cmp
mov
shl
pop
jge
jge
mov
rcll
or
sti
and
mov
sbb
xchg
test
clc
out
sbb
cmp
fdivrs
inc
and
cli
mov
dec
mov
sbb
mov
cmp
cmpsb
fwait
leave
push
add
aad
test
mov
pop
mov
cmp
sub
adc
add
fldcw
xchg
cmpsb
stos
arpl
jb
pop
fcoml
mov
mov
jle
aam
in
iret
sahf
jae,pt
inc
or
ss
inc
out
pop
daa
mov
lret
adc
jns
in
or
push
cmp
je
xchg
sub
jl
popa
outsb
adc
lods
lret
js
int3
mov
cmpb
and
dec
shll
sub
add
inc
adc
stos
jg
adc
dec
and
bound
out
adc
rclb
sarl
mov
mov
arpl
dec
sbb
mov
cmp
dec
cli
push
inc
pop
mov
jns
and
pop
lahf
push
or
push
pop
into
sbb
and
jnp
dec
loop
pop
xchg
adc
inc
nop
inc
mov
ljmp
in
and
pop
jno
push
test
xor
int3
scas
inc
adc
imul
subl
push
inc
add
push
and
bound
outsl
mov
add
daa
sahf
jp
test
inc
xchg
mov
fs
gs
push
ss
fwait
add
xlat
stos
xlat
shrl
xor
aaa
adc
filds
int
mov
xor
test
std
out
dec
cwtl
dec
xor
inc
repz
out
aas
inc
xor
pop
lds
popl
pop
aaa
mov
mov
jnp
daa
aad
das
arpl
sti
leave
in
sbb
mov
mov
add
push
loopne
lods
sbbl
pop
insb
pop
orl
sbb
adc
call
mov
lods
or
pop
push
test
bound
shl
les
xchg
jno
adc
adc
xchg
lret
lods
lret
popa
pushf
pop
test
jl
xor
aam
loope
jo
xchg
jo
add
lret
hlt
sbb
pop
rcr
gs
fwait
outsl
inc
lret
dec
jmp
xchg
call
dec
pop
jbe
and
lds
ljmp
out
mov
test
lea
jecxz
das
scas
sbb
and
pop
iret
sahf
mov
jnp
les
cmp
out
add
icebp
lcall
pushf
xchg
push
inc
push
jp
out
movsl
dec
xor
js
and
aam
shll
pushf
sbb
fxam
lds
seta
shl
fldt
fs
rcrb
xchg
jle
icebp
mov
and
or
cld
xor
jp
mov
push
into
inc
dec
add
imul
es
mov
loope
mov
bound
aam
clc
stos
test
mov
data16
out
ljmp
test
sbb
pushf
xchg
xchg
xchg
inc
inc
cmpsb
outsb
mov
aaa
add
dec
pop
addl
mov
xchg
sub
dec
test
xchg
add
jp,pt
or
aad
cmp
pusha
push
les
cmp
pusha
push
cwtl
push
test
scas
sub
mov
add
adc
fisubrs
clc
mov
sub
adc
xchg
push
cmpsl
inc
lods
dec
repnz
in
add
movsb
jae
jo
push
fs
mov
arpl
cmp
push
test
or
xor
dec
jl
push
fstpt
lea
das
dec
int3
dec
loop
outsl
shll
mov
pop
and
adc
mov
sti
ljmp
push
mov
cmp
stos
push
leave
popa
mov
data16
jb
dec
aaa
jecxz
loopne
inc
inc
cwtl
mov
pushf
les
ds
mov
es
jae
jno
pop
push
shlb
xor
sub
sbb
popf
jecxz
add
out
xor
jno
insl
inc
inc
add
sbb
mov
mov
cmp
mov
mov
adc
stos
test
mov
lret
testl
insb
fcom
xor
iret
push
divb
icebp
ss
lret
add
xchg
dec
and
movsb
sbbl
inc
int3
and
xlat
push
and
je
add
popf
mov
xchg
test
cmp
mov
js
pop
mov
push
ds
orl
or
sbb
push
arpl
and
movsl
mov
fnstsw
push
adcl
lcall
sahf
sub
cmp
or
fisttps
leave
xchg
cmpsl
sar
push
mov
xor
add
cmc
inc
push
mov
pop
rcrl
push
call
and
and
pop
xchg
frstor
pop
lahf
in
dec
pop
aad
dec
dec
rcr
pop
cmp
enter
and
dec
hlt
mov
scas
iret
cmc
xchg
pop
jl
ds
sbb
pop
lcall
mov
push
les
sbb
add
add
or
in
xor
gs
movsb
dec
adc
cmp
inc
scas
icebp
popa
pop
data16
clc
mov
test
dec
fdiv
je
pushf
neg
or
and
dec
dec
adc
xor
and
xchg
jns
outsl
push
rolb
mov
mov
icebp
mov
shrb
or
push
insl
xlat
pop
in
lock
lea
dec
fdivr
jl
mov
fdivrs
in
gs
pop
push
mov
sub
cmp
jne
xor
pop
in
es
push
insl
pop
push
dec
adc
adc
inc
sti
and
in
adc
clc
sub
call
cmova
cmp
stos
push
adc
pop
dec
cli
pop
xor
mov
stos
pushf
inc
sbb
mov
cmp
insb
push
js
adc
push
divl
jp
test
dec
ja
add
jl
sub
clc
push
sbb
sub
mov
out
mov
jbe
sub
mov
xchg
pop
add
mov
sub
aad
ret
sti
dec
hlt
xlat
inc
pop
into
mov
sbbb
mov
sahf
xor
add
jmp
out
test
jnp
lods
xorl
or
fdivs
push
test
xor
movsb
rorb
mov
lods
clc
idiv
xchg
ljmp
dec
mov
clc
cmp
loopne
ret
roll
dec
setae
cmpsb
cli
and
jge
cs
andb
cltd
repnz
cmp
and
pop
sarb
lret
mov
sub
fstpl
mov
daa
adc
ret
frstor
aaa
xor
addb
test
push
shll
fisttps
xorb
mov
nop
mov
ljmp
shll
roll
aaa
push
fistps
bnd
adc
mov
jle
push
xchg
ljmp
into
cmpb
ljmp
pop
cmp
sbb
fimull
rcll
fdivr
cmpsl
mov
js
out
xor
or
sbb
rolb
mov
int
loop
push
jp
shlb
outsl
loop
and
cmp
enter
jno
stc
decb
stos
inc
mov
cmp
push
mov
pop
es
mov
lea
call
adc
into
test
or
pop
push
popa
ja
mov
movaps
pop
aas
push
cmpsl
xor
dec
shll
inc
pushf
out
or
add
cmpsl
loopne
in
jbe
faddp
loop
xor
test
movl
jo
cmp
add
pop
ss
lcall
mov
adc
repnz
shlb
push
mov
les
ret
mov
andl
inc
pop
sbb
es
repnz
jl
adc
jns
outsl
insb
mov
mov
xor
aaa
jb
xor
int3
popa
subl
popa
loop
stc
cmp
je
aad
xchg
cwtl
mov
sbb
xor
scas
mov
xchg
cltd
xchg
jmp
sub
lods
outsl
outsb
or
jle
pop
lds
dec
xchg
fxch
jmp
les
cmp
scas
add
add
push
adc
pop
in
add
imul
test
daa
pushf
mov
jp
inc
stos
hlt
sub
imul
ss
aam
mov
fmull
sbb
pop
insl
in
inc
std
dec
addr16
jns
cmp
icebp
push
jno
adc
cmp
lods
inc
fistl
pop
repnz
dec
jne
mov
lods
fldl
mov
hlt
std
ret
jo
jg
dec
inc
out
iret
dec
or
fldcw
int3
pop
std
cmp
rclb
dec
leave
cmpsb
aam
cs
or
jo
ljmp
push
nop
loopne
xchg
cmc
adc
addr16
inc
popa
bound
push
push
outsl
push
aaa
fistl
pushf
push
xlat
pop
loopne
adcb
jmp
inc
icebp
faddl
sub
inc
adc
mov
mov
push
hlt
lea
cltd
add
adc
cwtl
push
mov
jo
std
lahf
mov
loop
push
sub
pop
jne
xor
mov
jle
repz
push
add
iret
cmpsb
cmpsl
or
cwtl
fisttps
cmp
xor
xchg
xchg
push
hlt
adc
xor
ficompl
mov
and
mov
call
mov
test
or
jb
push
dec
sub
jl
ret
inc
jo
pop
mov
insl
jae
leave
jbe
shr
rolb
or
cld
dec
jmp
dec
push
fidivs
cmp
idivl
lds
popa
inc
ds
or
adc
cmp
jo
pusha
mov
and
stos
or
addb
insl
arpl
lret
jmp
dec
cmp
xchg
xchg
and
mov
cli
add
jge
jns
movsb
mov
mov
cmc
jge
or
sti
push
push
push
mov
arpl
out
ja,pt
hlt
and
lahf
fists
cmc
ljmp
lods
sarl
pop
movsb
nop
aam
icebp
insl
repnz
imul
xor
adc
out
jae
mov
xchg
pop
jmp
dec
loope
and
xchg
xchg
xchg
enter
jg
stos
movsl
std
mov
ljmp
xchg
adc
add
rclb
ss
cmp
testl
inc
jo
andb
lret
lea
in
mov
and
orps
and
outsb
and
dec
test
xchg
outsb
loop
into
inc
jno
push
add
shlb
or
jne
test
mov
xor
data16
cmp
push
outsl
mov
rcrl
outsb
fsubr
xor
push
xor
mov
push
fistpll
adc
scas
lret
cltd
out
jg
sti
pop
jne
pop
push
adc
lock
push
rorb
mov
cmp
pop
lods
dec
rclb
and
push
mov
iret
pop
push
rcrb
pop
cld
das
xor
add
jo
insl
push
cs
or
loope
sub
push
xchg
test
inc
cmc
insl
jecxz
dec
push
jl
cmp
push
lods
repnz
jp
mov
imul
and
sbb
dec
push
lahf
scas
mov
mov
lods
add
push
es
push
fldt
bound
icebp
mov
cmpsl
pop
cmpb
icebp
jae
push
pop
xor
cmp
sbb
sub
sub
rorb
fidivrs
mov
xor
adc
jmp
mov
inc
ss
out
pop
in
and
divb
rorl
or
mov
push
sub
lock
and
out
stos
mov
testb
or
orl
mov
hlt
inc
xchg
test
and
or
add
leave
jp
pop
sub
cmp
jns,pn
and
std
cld
addb
mov
jl
add
mov
call
popa
nop
rcr
xchg
subb
imul
mov
push
xchg
xchg
mov
enter
xchg
lods
push
adc
addl
fistpl
fucomip
adc
mov
push
jno
mov
sbb
imul
or
adc
cmp
xchg
out
push
movb
lret
clc
ret
ret
xor
mov
sbb
sub
test
les
dec
pushf
aam
jo
xor
test
jb
add
es
or
leave
xchg
leavew
in
incb
jne
sbb
xor
inc
arpl
popf
sti
cmpb
mov
orb
push
jne
inc
mov
sub
jno
sti
mov
inc
add
mov
or
cmp
popa
push
pop
and
std
pop
sahf
and
fisubs
or
roll
cmp
jge
mov
xchg
pusha
pop
jp
jo
outsl
mov
aas
loope
pop
mulb
fistps
cwtl
and
ljmp
ds
lds
lea
repnz
inc
adc
call
fdivrs
and
cmp
inc
mov
sbb
lcall
inc
mov
dec
sbbl
jne
add
or
mov
rclb
cltd
fs
ja
call
aas
mov
rcrl
cmp
inc
pop
mov
das
sbb
adcl
mov
ja
cmp
cmp
stc
js
int3
test
imul
pop
fsub
jecxz
adc
fwait
adc
xchg
fstpt
jmp
test
jl
movsb
fsubrs
nop
lds
pop
pop
andb
inc
stos
dec
jns
fcmovnb
icebp
hlt
push
repnz
mov
pop
push
imul
jmp
shrb
adc
mov
mov
int
jmp
je
sub
arpl
dec
outsb
dec
cwtl
arpl
cmc
push
pop
cltd
or
add
popa
jno
les
sub
cmp
pop
call
sarl
xor
icebp
mov
inc
sbb
xor
js
or
rorl
stc
cvtdq2ps
cmp
mov
leave
mov
xor
mov
cmpb
std
ljmp
pop
or
or
mov
xchg
push
test
addl
aad
pop
out
dec
xchg
push
push
leave
dec
and
pusha
jecxz
pushf
add
jbe
xchg
fdivl
lahf
hlt
call
cmc
jg
ja
mov
dec
sub
mul
pop
orl
cld
mov
loopne
aaa
push
jge
ljmp
movsl
push
stc
xlat
xor
xlat
push
inc
push
and
xchg
rcrb
iret
pop
outsl
mov
lcall
add
jge
cmp
adc
push
ret
je
xchg
mov
hlt
insl
sub
repnz
loopne
xor
mov
xchg
mov
mull
std
movsb
ss
in
gs
dec
xchg
xchg
xchg
push
xchg
mov
negb
aaa
adc
mov
repnz
shll
pop
mov
jle
add
lods
mov
pop
imul
std
lea
xor
cltd
out
xor
cld
sahf
mov
cmpl
mov
pop
mov
mov
cmc
sbb
dec
popf
les
push
icebp
adc
push
mov
lods
js
dec
outsb
fldenv
pop
fimuls
mov
outsb
dec
cld
pop
pop
inc
adc
pminub
inc
mov
sbb
xchg
sbb
ljmp
adc
or
adc
jmp
inc
jp
mov
cmc
pop
mov
mov
rolb
pop
jbe
sub
nop
call
add
outsb
bound
sti
push
imul
cmpsb
jg
mov
mov
jne
or
lret
push
xchg
and
test
push
mov
mov
lods
sub
sub
popa
ljmp
pusha
sbb
xor
data16
adc
test
repnz
cmp
mov
fldt
sbb
cwtl
fwait
popf
fs
push
stos
add
shlb
inc
hlt
daa
shlb
push
mov
xchg
in
addb
lret
loop
lods
test
inc
addr16
les
xor
adc
mov
pop
adc
test
loopne
test
cmp
mov
pop
cmp
cmpsb
repz
jp
add
push
aam
sub
inc
aaa
cmpl
aam
jne
mov
inc
cmp
mov
xor
stc
in
mov
and
mov
dec
inc
sahf
dec
nop
negl
and
out
pop
adcb
aad
push
jle
jl
jecxz
fsubrs
dec
xor
push
movsl
push
mov
das
cltd
mov
cmpb
fstpt
mov
dec
mov
cmp
push
push
adc
out
sahf
push
inc
enter
loope
lret
xchg
xchg
mov
mov
push
orb
add
cmpsl
fildll
inc
subb
in
imul
jle
mov
xlat
lds
adc
popl
and
repnz
les
and
push
dec
fldt
ret
aad
shlb
insb
movb
into
stc
dec
cmp
iret
mov
lea
xor
cmp
adc
jnp
sub
insl
add
call
jge
nop
js
or
add
dec
dec
sub
in
sarb
mov
scas
mov
fsts
inc
test
jge
fidivs
out
insb
leave
cmpsb
and
pop
dec
fldt
adc
mov
iret
xchg
frstor
call
mov
popf
js
mov
test
daa
js
testl
push
pop
jno
iret
test
clc
mov
movsb
andps
pop
push
fidivrs
push
mov
fistpl
or
lods
or
rcrl
loopne
pushf
mov
xchg
loopne
in
pop
lds
mov
std
jnp
into
into
sbb
jno
inc
stc
inc
sbb
jmp
mov
mov
inc
loope
sbb
add
dec
xor
xor
daa
mov
jg
push
sbb
lods
cmpsb
and
lea
sub
lods
test
mov
xor
xor
pop
xchg
xor
into
jle
rcrl
fiadds
repnz
adc
pop
fisttpl
pop
movsl
inc
jl
push
mov
sub
fdivs
jns
cmc
fcoml
ss
push
aaa
and
push
sbb
add
jp
test
cmpsb
data16
enter
jp
mov
mov
pop
cmp
lods
aas
push
jae
xchg
jl
in
jnp
iret
sub
sub
repnz
enter
jnp
pusha
lods
mov
xor
dec
mov
movsl
sarb
jns
mov
out
xchg
mov
jne
pop
cmc
add
sbb
cmp
in
icebp
mov
jg
and
stos
loopne
jns
fiaddl
les
mull
cmp
and
sbb
test
xor
stos
sbb
pop
std
and
je
mov
jae
fcmovnbe
out
jle
outsl
je
rolb
dec
jmp
or
mov
xacquire
loope
insb
inc
lods
test
cwtl
jae
shr
pushf
inc
and
sub
add
fcoms
imul
bound
movsb
xchg
pop
les
jg
push
sub
adc
jae
sub
insb
xchg
pop
fisttpl
fs
xchg
clc
test
loope
sarl
aas
push
sbbl
add
jb
lcall
sbb
out
jle
sub
dec
jbe
pop
arpl
iret
shr
xlat
jo
pop
dec
sbb
cmp
testb
sbb
jl
pop
bound
and
ds
sub
stos
adc
push
aam
cmp
dec
xlat
fldt
push
push
mov
divb
sbb
inc
and
push
ss
xchg
test
int3
lret
arpl
jne
xchg
call
sbb
mov
mov
lret
test
sbbb
andl
lods
rcll
dec
xchg
push
mov
dec
in
rolb
sbb
pop
jl
fiaddl
cltd
xor
jb
movsb
or
xchg
pop
data16
sub
or
dec
fcmovu
push
inc
push
pop
cmpsl
mov
jae
sbb
cli
movsl
and
adc
cmp
fcomi
fldcw
insb
adc
xchg
xor
sub
mov
mov
shrb
dec
mov
and
js
lret
pop
jns
mov
pop
loop
pop
jge
iret
cmp
mov
ss
mov
sub
cmpsl
adc
cmc
or
push
or
sub
fcomi
fbld
sbb
cmpsb
adc
mov
aas
ret
daa
cmp
add
or
xor
scas
xchg
out
pop
cli
push
cmpsb
mov
rorl
cmp
imul
lods
pop
mov
and
ret
outsl
stos
push
popf
test
mov
lret
ret
xchg
mov
cwtl
sbb
sub
inc
pop
lods
pusha
ret
adc
loopne
add
pop
out
insl
int
mov
mov
pushf
xchg
inc
movsl
popf
and
push
neg
inc
les
shrb
dec
fimull
mov
or
je
and
loope
mov
rolb
inc
push
and
mov
inc
fsubl
lret
out
fistl
and
push
add
jbe
leave
fadds
xchg
lret
sbb
mov
dec
and
pop
xchg
sbb
outsl
test
cmpsl
adc
mov
cmp
imul
outsl
pmaxub
mov
jbe
test
jo
push
ret
sahf
loope
stos
push
push
push
mov
xchg
mov
mov
push
xchg
rcll
cmp
repnz
and
jno
add
jo
push
pusha
sub
fwait
cltd
jbe
arpl
sahf
push
pop
mov
jne
xorb
stos
fnstcw
repnz
out
ljmp
sbb
add
negb
nop
mov
ja
push
mov
lcall
mov
jnp
inc
mov
mov
jg
das
in
pop
dec
movsb
mov
scas
pop
dec
pmuludq
popf
leave
push
call
xor
insw
orb
arpl
in
cmp
jp
adc
pop
aad
outsb
mov
and
xchg
hlt
sub
mov
out
nop
add
cmp
cwtl
mov
leave
insb
jb
data16
cmp
in
stos
cmp
mov
xchg
repnz
aaa
arpl
das
push
or
sub
jmp
push
xor
lods
roll
pop
xor
jo
int
faddl
popl
xor
pop
xor
dec
push
mov
arpl
fbld
add
xchg
addr16
dec
ja
mov
insl
xchg
test
orps
test
inc
push
cld
arpl
les
sbb
repnz
adc
imul
inc
scas
jle
mov
mov
xchg
test
adc
push
add
sbb
inc
xor
xor
jne
cmpl
xchg
sub
lahf
pop
push
shlb
lods
loop
adc
push
mov
iret
or
js
xchg
mov
fwait
dec
adc
mov
mov
lret
pop
mov
lahf
push
in
icebp
jg
xor
pop
scas
or
out
lret
rclb
inc
pop
push
jne
scas
insb
lret
xlat
repz
pop
xchg
mov
adc
adc
inc
cmp
mov
cmp
dec
scas
ret
jo
xor
imul
xchg
dec
adc
and
ss
jmp
mov
ret
scas
aaa
addr16
sub
push
pop
stos
fimuls
ret
pop
or
ja
mov
mov
out
sub
test
pusha
and
ljmp
rorb
insb
cmpsl
std
sahf
add
nop
jbe
and
adc
std
pop
sub
pop
cmpsb
sbb
scas
lret
cmp
sub
gs
rcll
iret
ret
push
and
gs
xor
jae
inc
push
lret
data16
sub
fmull
or
aam
sub
adc
aas
gs
jmp
fs
dec
adc
and
ss
loopne
push
movl
stos
sbb
pop
lret
cmp
inc
das
in
nop
push
lcall
fildll
jae
cmpsb
das
mov
xchg
mov
pop
movsl
cmp
loope
gs
cltd
push
add
aas
daa
rcrl
out
jg
pop
inc
lahf
mov
pushf
enter
enter
fwait
mov
movsl
lcall
test
add
pop
add
dec
leave
xor
and
xchg
cli
pop
sahf
and
adc
and
movsb
test
pop
test
inc
stos
fcompl
pusha
xchg
into
outsl
ret
mov
inc
roll
xchg
or
push
das
push
out
cmc
subl
cld
lods
cmp
aam
push
add
jnp
mov
push
mov
iret
daa
es
pop
sub
pop
xchg
fiadds
ss
lods
nop
cmp
jbe
scas
aad
mov
lcall
adc
mov
stos
shlb
repnz
xchg
pushf
dec
jb
mov
fiadds
sahf
cmp
rclb
ret
fnstcw
aam
daa
xor
hlt
aas
pop
decb
xchg
das
in
arpl
repnz
add
insl
test
cmp
stc
adc
fisubrl
sub
mov
add
jnp
stc
out
aas
mov
dec
push
lea
fadds
stc
pop
add
test
lea
popa
lock
lods
gs
call
iret
leave
inc
xor
repnz
aad
jmp
inc
pop
imul
sbb
loope
xor
jnp
mov
outsb
aaa
inc
push
test
repnz
mov
aad
popa
sbb
sarb
mov
cmc
fldl
sub
repz
jecxz
mov
inc
out
push
and
jg
cltd
lods
repnz
push
jp
jecxz
fidivrs
sub
xchg
fisttps
adc
pop
scas
dec
test
push
adc
aad
out
cs
jae
xchg
lds
inc
in
push
push
daa
add
aad
mov
fcomps
popf
push
fdivl
stos
repz
into
mov
loopne
pusha
jbe
icebp
shrl
cmpsl
stc
into
or
mov
stos
popf
pop
call
movsb
insl
push
pshufw
addr16
inc
stos
push
ret
pop
jmp
sti
leave
xchg
hlt
jecxz
mov
movsl
xor
mov
pop
pop
mov
xchg
out
loope
jae
in
test
pop
adc
rolb
or
mov
data16
fistpl
dec
cld
mov
jbe
xor
jl
fimuls
mov
idiv
mov
popf
pop
jp
cmp
push
mov
xor
dec
out
test
or
mov
notl
fwait
lods
push
jmp
mov
inc
pop
nop
sbb
inc
leave
mov
jb
mov
popf
out
and
inc
ret
xlat
fstl
mov
mov
adc
lea
cwtl
sub
jmp
in
pop
out
inc
jecxz
ds
sbb
pop
or
bound
fstpl
outsb
les
adc
movsl
xchg
dec
jae
cltd
scas
jb
addr16
stos
stos
push
movsl
int
jne
outsb
cmp
loope
xchg
xor
mov
jmp
cli
jmp
dec
divb
mov
jns
mov
or
arpl
jo
add
sub
into
les
jl
push
sub
xchg
in
int3
jb
aaa
out
mov
lcall
inc
mov
xor
mov
adc
sbb
mov
daa
divl
mov
dec
dec
push
nop
inc
sbb
push
fsts
int
scas
inc
cmp
cmpsl
ja
inc
pop
mov
adc
mov
test
sub
xlat
pop
in
adc
insl
lret
and
pop
test
pop
mov
es
sub
mov
dec
lret
sub
rorb
or
push
inc
insl
fcmovne
xchg
pop
cwtl
ret
sub
adc
jp
pop
xchg
mov
inc
or
add
or
mov
testb
sub
or
sbb
std
rclb
mov
int3
push
enter
inc
sub
pop
scas
je
jp
testl
mov
js
push
jo
inc
mov
pop
ret
or
add
push
adcb
mov
xchg
ljmp
cmp
xor
add
jae
inc
sbb
dec
imul
lret
cltd
int3
inc
imull
push
stos
ss
add
push
mov
shl
test
push
and
fidivrs
pop
loopw
cmp
push
add
cmp
les
loopne
shrb
les
std
sahf
fwait
lea
in
mov
sub
in
push
mov
add
stc
mov
insl
lret
test
call
xlat
pop
adc
outsl
ja
pop
sbbl
in
out
inc
push
pop
clc
dec
andb
test
adc
sbb
mov
sub
xchg
pushf
inc
mov
add
popa
ja
mov
js
cmp
repz
cs
inc
shlb
pop
insb
mov
mov
adc
sbbb
in
jmp
dec
scas
push
push
xchg
jmp
sbb
cmpsl
pop
sti
in
cmpsb
pop
adc
sbb
jbe
inc
leave
pop
inc
lods
insl
inc
stos
mov
test
test
repnz
aam
mov
loopne
leave
fiadds
pop
push
push
insb
ja
je
ret
or
inc
popf
or
xchg
add
sub
scas
out
mov
dec
mov
addr16
lea
or
in
cld
xor
fldenv
or
mov
xor
lods
mov
adc
or
mov
cmp
das
call
pop
xchg
rol
xchg
hlt
ljmp
mov
cmp
decl
cltd
inc
jb
push
hlt
and
call
aam
popa
push
push
js
jnp
mov
jg
rol
imul
dec
xchg
xor
jp
out
scas
dec
fnstsw
mov
cld
outsb
or
mov
aas
pop
inc
pop
out
jl
jne
fists
add
test
push
sti
shr
push
mov
in
jmp
push
cmp
arpl
movsl
cmp
daa
xchg
adc
and
out
sarl
jnp
int3
aad
repz
popf
lahf
pop
mov
loope
clc
gs
add
pusha
add
stos
mov
jb
inc
imul
loopne
mov
addb
cmp
and
add
jle
icebp
push
cmpb
bound
dec
std
pusha
lret
iret
mov
push
aaa
push
cmp
out
pop
mov
xchg
out
test
inc
lock
dec
add
jmp
push
jmp
pusha
push
dec
mov
leave
pop
dec
jne
popf
sti
dec
pop
push
cmc
ss
lea
fldt
pop
mov
stos
addr16
fnstcw
loop
mov
mov
in
mov
mov
jbe
inc
shll
sbb
xor
mov
jne
or
pop
lcall
adc
orb
dec
nop
stos
lahf
xor
orb
jge
cmp
sub
add
out
insb
add
in
dec
enter
dec
lret
add
dec
loopne
popa
push
mov
or
insb
mov
xchg
mov
inc
push
push
loop
xor
jmp
daa
mov
cs
mov
pop
pop
faddp
scas
bound
sub
pop
in
lahf
adc
fs
mov
xchg
cltd
pop
push
sbb
stos
adc
mov
stos
cmp
lods
pop
cmp
sub
dec
stos
pop
jge
cmc
pop
insb
insl
stc
ja
mov
push
mov
sbb
mov
imul
lea
in
jg
and
fdivl
pop
jbe
cmpsl
xchg
aas
out
xchg
test
out
daa
scas
sub
push
push
push
insb
add
or
call
mov
jecxz
loope
xor
sbb
mov
add
push
jb
push
adc
sub
loopne
jae
repz
std
insl
add
mov
pop
rolb
sbb
lahf
sub
mov
sbb
jge
in
scas
in
dec
xchg
shll
or
insl
adc
ret
pop
pop
dec
out
rcr
sbb
sbb
lret
jge
mov
pop
into
xchg
and
xchg
out
sub
outsb
sbb
psrlq
fists
cmpl
les
cmpsb
cmp
aad
jno
inc
int3
insb
jge
dec
mov
movsl
sub
mov
sbb
call
int3
mov
sahf
loop
loopne
popa
sbb
jb
cmc
insl
loopne
test
or
jns
cltd
lahf
inc
inc
xchg
test
ret
jge
and
pop
jnp
push
jns
lahf
mov
mov
lds
shll
stc
push
add
or
dec
ret
outsl
dec
test
inc
ret
sbb
mov
or
jl
pop
pop
pop
je
test
mov
jo
xchg
nop
jno
bound
sbb
out
mov
mov
and
inc
sbb
jmp
int3
loop
cmp
pop
mov
cwtl
pop
mov
fdivr
mov
jnp
jge
jmp
rdtsc
xor
cmp
pop
loop
das
lock
jns
addr16
inc
push
loopne
arpl
in
ficomps
push
aaa
insb
rolb
inc
adc
mov
mov
aaa
pop
aad
jp
or
loope
out
or
cmp
mov
ror
pop
jle
jmp
sbb
fistpl
inc
ret
mov
pop
test
test
sub
test
cmpb
sub
push
or
push
push
xchg
cmp
mov
cld
sbb
inc
scas
das
in
shrl
pop
adc
test
jle
loop
add
pop
push
sub
pusha
lods
mov
sbb
fistl
fcmovnb
mov
mov
pop
call
orb
mov
mov
dec
push
xor
shrb
sub
xor
push
faddl
sub
aas
fisttpll
jo
adc
stos
mov
push
mov
enter
and
fildll
aaa
sub
mov
dec
inc
jp
sarl
xor
aam
inc
mov
sub
mov
aaa
adc
call
mov
adc
dec
cmpsb
bound
add
mov
sub
xor
and
sbb
cld
pop
or
inc
iret
pushf
xor
mov
xor
dec
push
jnp
jne
rcrb
mov
jbe
adc
sbb
shlb
jge
sbb
sbb
cmp
adc
xchg
inc
fiadds
adc
dec
mov
es
push
nop
add
mov
popa
lcall
xchg
sub
xchg
cwtl
xchg
xchg
out
loopne
pop
ja
push
mov
push
out
clc
xor
dec
mov
fdivrl
mov
dec
lahf
adc
test
vcvttps2dq
fcomip
jmp
js
mov
mov
dec
leave
add
push
mov
lret
inc
mov
fistps
pushf
ss
pop
push
adc
les
out
sub
sub
xchg
jmp
xchg
mov
mov
mov
sbb
inc
aam
dec
push
das
or
fcoms
inc
dec
fldt
cs
enter
lods
int
sub
outsl
imul
sbb
xor
cs
jg
inc
inc
clc
call
fisttps
mov
enter
xchg
fidivrl
cmc
int
pop
mov
jns
xchg
arpl
and
sbbb
xchg
pop
loopne
add
test
mov
jge
lret
inc
dec
add
icebp
mov
lret
loop
icebp
ljmp
hlt
adc
pop
call
mov
cwtl
jl
jecxz
pop
jo,pt
dec
mov
pop
cmp
jmp
dec
xchg
mov
fnstcw
jge
aas
cltd
cs
mov
lea
xor
shrb
or
jl
loope
pop
movsb
mov
fisubs
aad
repnz
shll
in
inc
sbb
push
stc
push
jnp
xchg
pop
inc
insl
pop
stc
sub
mov
inc
pop
adc
jns
add
adc
jo
mov
call
sti
adc
or
pop
loopne
push
push
mov
cltd
or
push
stc
cmp
ret
mov
out
mov
add
js
ret
or
sbb
lret
mov
jmp
popa
inc
cmc
or
cmc
sbb
mov
int3
and
jno
lret
lret
ss
adc
ret
roll
fldcw
cs
add
dec
jle
sub
sub
pop
insl
add
push
adc
idivb
cmp
jb
pop
jae
sbb
aad
hlt
das
dec
push
mov
imul
cmpsb
je
movsb
push
inc
mov
fs
test
insl
jne
std
and
jg
loope
xlat
lods
xchg
lcall
lcall
mov
mov
int3
xchg
pop
mulb
jns
iret
adc
pop
and
shr
popa
sarl
mov
push
ljmp
sbb
mov
jno
sar
test
lods
mov
sbb
ja
lcall
cmpsb
add
add
pop
adc
rcl
jl
xor
xor
push
jmp
push
and
push
push
ret
enter
push
cmpsb
or
in
mov
xchg
mov
enter
jge
pusha
sarb
sub
scas
adc
xor
hlt
movsb
sbb
mov
cmp
jne
sbb
and
mov
jae
subl
wrmsr
mov
fistps
int
test
mov
push
clc
dec
push
cmp
jo
or
mov
mov
xor
clc
gs
inc
ss
andl
jg
inc
mov
shr
pop
mov
popa
xor
xchg
bound
js
xchg
daa
jmp
std
adc
pop
pop
push
stc
mov
xchg
movb
xor
and
mov
fprem
xchg
sarb
xchg
arpl
cwtl
push
sbb
add
out
icebp
mov
cli
cmp
dec
mov
cmp
lods
out
cmpsl
inc
cmp
imul
sbb
and
pushf
shl
xchg
push
fs
cmpsl
lock
shlb
sbb
scas
and
pop
mov
leave
cwtl
xlat
adc
pusha
push
and
cmp
out
outsb
xchg
std
jnp
shr
idivl
push
ds
push
mov
lret
lret
mov
out
jo
jo
arpl
pop
sbb
adc
mov
jo
arpl
push
int
int3
stos
adc
jne
or
nop
and
mov
sub
es
into
pop
inc
mov
cmp
push
pop
inc
pop
outsb
into
mov
cmp
cmpsl
ss
in
xor
xchg
lock
inc
sbb
push
jb
mov
jns
add
mov
hlt
jecxz
in
add
cmpsb
sub
int3
inc
push
call
push
xor
jnp
pop
daa
movsl
mov
jae
jp
push
sub
cmp
xlat
sub
pusha
scas
int3
stc
pop
movsl
repz
pusha
push
cltd
dec
add
movl
xchg
xchg
cmc
test
es
inc
addr16
pop
inc
out
repnz
ljmp
sub
sub
popf
cmc
cmp
jno
imul
fadd
ds
add
jge
mov
vpmaxub
lcall
mov
nop
stos
enter
stos
jns
pop
pop
push
or
mov
adc
imul
shll
pusha
and
stc
imul
push
jb
out
jae
dec
xchg
lret
adc
mov
push
test
jae
push
cld
shll
lret
push
xchg
sub
lcall
mov
jmp
xchg
popa
int3
iret
insb
stos
push
adc
incl
inc
cld
insb
fs
and
inc
pop
cld
cmc
iret
rolb
cmovns
fcmovne
cmc
fsts
xchg
xor
mov
lods
mov
mov
or
lods
mov
adc
hlt
xor
loope
adc
pop
notl
int3
jg
inc
mov
or
shll
add
int3
in
stc
hlt
push
imul
mov
movsb
or
ss
rorb
insl
mov
mov
adc
xchg
adc
xor
xchg
in
xlat
in
push
sub
es
cvtps2pd
ja
xchg
lcall
jmp
daa
aad
mov
mov
sbb
add
push
jge
push
mov
pop
pop
lret
insb
stos
push
cmp
mov
in
shlb
loopne
jle
daa
into
jb
adc
movsl
std
push
lahf
sbb
mov
push
push
push
int3
stc
cltd
in
xchg
cmpsl
daa
stc
push
sbbl
lods
xor
and
testb
or
in
in
lods
fwait
mov
and
jo
pushf
sarl
push
mov
daa
jne
loope
cmp
arpl
in
mov
je
push
dec
cli
mov
int3
mov
xchg
stc
inc
add
pusha
mov
or
xor
mov
ss
inc
adc
mov
lcall
stos
stc
es
sub
addr16
lcall
in
shrd
mov
jg
popf
outsl
lahf
out
jne
ds
hlt
rcll
ret
pop
jg
loopne
out
insb
mov
cmp
or
repz
or
xor
push
cmpsb
clc
cmc
xchg
dec
outsl
or
jnp
xor
mov
pop
xor
fdiv
ja
add
stos
fwait
jbe
or
es
jno
repnz
and
push
movsl
cwtl
ret
fcmovnbe
sbb
insl
pusha
call
sbb
stc
adc
fistps
sbb
inc
dec
xor
bound
mov
sub
mov
cs
xchg
dec
daa
xchg
mov
clc
sbb
xchg
jb
repz
add
sbb
mov
and
jmp
jo
into
lret
push
or
aaa
test
movsl
xor
mov
pop
push
out
xchg
mov
sbb
insb
mov
sbb
es
pop
xchg
fildl
sub
dec
lcall
pop
out
out
mov
cmp
mov
xor
cmp
inc
loope
sbb
inc
pusha
cltd
add
bswap
pop
jmp
pop
test
xor
leave
pop
xlat
movsl
fistpll
sbb
out
test
ljmp
cmp
je
outsb
ficoms
mov
pop
xchg
je
cmp
or
xor
add
ss
push
cmp
sbb
mov
cmp
outsl
out
push
inc
or
lock
leave
jle
ja
dec
push
push
lret
fstpt
sbb
imul
iret
push
outsb
movsl
inc
in
xor
push
cltd
out
in
mov
test
push
aas
es
fwait
jmp
aaa
jbe
lahf
jg
test
ljmp
mov
divb
or
lret
sbb
lret
sbb
test
mov
sbb
inc
leave
jg
stos
xchg
nop
sbb
and
inc
inc
mov
sub
push
imul
fldt
mov
mov
adc
jmp
adcl
out
out
push
or
xchg
vmwrite
xor
adc
and
jecxz
shl
jmp
dec
sub
jne
cmp
mov
add
pop
push
push
or
push
les
fucomip
lds
add
into
or
hlt
jns
lahf
repz
mov
mov
dec
push
jl
outsl
rorl
sahf
inc
in
lret
mov
jo
mov
out
and
leave
test
pop
lret
mov
test
mov
inc
mov
xchg
std
and
aad
notl
rcrl
sbb
push
push
addl
std
cltd
test
daa
sub
lret
jns
ret
xchg
adc
daa
jo
dec
or
jne
aas
jnp
push
and
lret
call
mov
outsb
fmul
xchg
push
sar
popa
cltd
jb
lret
push
lcall
ljmp
push
jns
or
push
leave
sbb
add
repz
fistpll
pop
or
xbegin
pop
imul
mov
lds
sbb
cs
mov
into
je
push
icebp
dec
cld
mov
in
mov
add
xchg
pusha
adc
mov
sbb
out
inc
mov
push
push
pop
aam
addr16
addr16
mov
adc
sar
pop
mov
add
cmp
lock
mov
mov
sbb
mov
push
pop
lock
cmp
and
inc
lods
cwtl
mov
js
cmc
mov
adc
fadd
lods
sbb
and
cmp
pop
mov
lods
aaa
clc
sbb
pop
sub
aam
in
xor
test
pop
adc
sub
std
push
movsb
scas
sbb
mov
or
add
test
dec
push
imul
hlt
enter
lret
mov
popf
and
jg
mov
sbb
vsqrtps
movsl
mov
adc
xchg
and
jg
pusha
flds
stos
std
pushf
push
pop
jae
out
iret
or
sbb
xchg
jge
movsl
lret
mov
inc
insb
mov
adc
xchg
add
xchg
daa
imul
jp
mov
in
bound
out
cmp
cmpsb
icebp
mov
inc
lds
movhps
mov
sbbl
shll
xchg
or
das
jae
fimull
scas
mov
clc
or
dec
rcrb
xor
clc
ja
push
mov
push
xlat
sub
mov
in
out
idivl
pop
pop
sbb
pavgb
and
xor
mov
sub
adc
push
adc
mov
call
cmp
mov
push
leave
sbb
add
popa
xchg
jg
call
mov
pusha
jae
push
pushf
insl
mov
pop
sub
movsb
movsb
clc
xchg
scas
xchg
xrelease
mov
sbb
adc
test
mov
and
push
push
jns
add
loopne
jae
lret
popa
add
pop
fnstsw
je
dec
hlt
rcll
add
push
push
cltd
mov
leave
add
inc
int3
mov
mov
js
pushf
cmp
insb
cmp
in
lcall
gs
js
xor
lret
loopne
faddl
fs
or
call
lods
movsb
inc
enter
adc
jl
out
xor
xchg
mov
pop
ljmp
pop
lcall
ret
mov
lods
pop
add
push
xlat
in
stc
scas
fmuls
push
jmp
lcall
adc
leave
sbb
lcall
mov
xlat
mov
bnd
shlb
sbb
jnp
in
push
lods
notb
pop
mov
cmp
adc
inc
stc
jp
sub
cmpsb
xchg
xchg
shlb
orb
push
dec
mov
add
push
pop
orb
pop
in
sub
xchg
push
in
mul
repnz
fwait
add
or
mov
push
xor
mov
jns
dec
sar
lcall
loop
fwait
sbb
aas
sti
jno
scas
mov
cmpb
mov
hlt
pop
roll
xchg
push
shrb
xchg
fs
rcrl
mov
popa
sbb
rcpps
jle
cld
imul
mov
aam
push
inc
test
jne
adcb
mov
cmpsb
insb
rorl
or
inc
dec
pop
and
jge
loope
sbb
sti
pop
push
loop
into
inc
cltd
lds
ret
mov
in
js
test
call
aaa
and
scas
adc
push
repz
cmp
and
test
push
and
loop
inc
imul
in
pop
icebp
xor
nop
mov
packssdw
icebp
inc
cmp
aaa
push
sub
testb
lods
loopne
or
jmp
movsb
bound
cli
icebp
arpl
sub
dec
inc
int3
push
mov
roll
add
inc
clc
pop
or
cmp
hlt
cli
push
and
dec
and
in
pusha
insb
xchg
sub
je
sahf
pop
movsl
cmp
xor
shlb
and
sbb
aaa
sbb
xchg
test
xchg
dec
mov
sbb
js
and
cmp
cwtl
or
or
lods
je
test
jg
nop
cmc
std
jo
test
inc
mov
xchg
jo
pop
cli
sbb
xchg
aam
iret
aaa
fdiv
inc
cmp
lahf
or
dec
mov
jmp
mov
mov
arpl
inc
lret
add
cmp
dec
xchg
xchg
loop
push
jb
adc
shll
ret
out
xchg
mov
inc
insl
sahf
adc
dec
pop
testb
fbstp
movsb
out
jg
cli
insb
push
or
pop
push
cltd
xor
mov
fwait
pop
add
pop
aam
mov
movsl
aam
adc
mov
adc
out
sub
cwtl
dec
jecxz
or
pop
fwait
shlb
mov
cwtl
cmp
mov
call
cwtl
dec
push
lret
sub
cmp
repz
mov
pop
insl
and
mov
pop
mov
or
xchg
in
inc
lcall
fdivrl
nop
push
cmp
or
or
pop
outsl
test
loopne
pop
cltd
or
push
popf
xchg
divl
jne
sub
lahf
cmp
xchg
push
aaa
pop
shl
mov
jecxz
ds
loope
push
mov
pop
and
pop
clc
lret
pop
sub
mov
push
mov
sub
cmp
das
add
inc
pop
aam
push
movsb
loop
mov
bound
mov
lods
sbb
fwait
test
pop
adcl
jecxz
push
adc
inc
adc
popf
loope
lods
mov
jl
push
fsubl
fs
pop
mov
xchg
dec
adc
imul
loopne
scas
mov
sbb
xor
cmp
push
adc
pop
out
subb
pop
mov
mov
loop
aaa
pop
fsubrs
add
adc
push
sti
fcmovnu
pop
xor
aam
adc
push
lock
inc
and
dec
xchg
cmpb
xchg
div
jg
xor
dec
xor
mov
pop
xchg
in
or
imul
pop
mov
repnz
add
and
cwtl
pushl
push
int3
fldcw
lea
sub
jb
xlat
ds
dec
daa
es
adc
cltd
mov
inc
add
or
push
pushf
aas
mov
sti
std
jg
sub
cmp
sub
push
cltd
mov
mov
mov
and
mov
iret
fistl
fistps
mov
adc
dec
loopne
inc
in
mull
xchg
sahf
push
sbb
and
cli
loop
xor
or
lret
xchg
out
pop
loopne
pop
adc
mov
push
arpl
stc
fnsave
xor
xor
shrl
fadds
mov
jno
cmpsb
ss
mov
sub
out
andl
mov
sbb
adc
mov
jo
pop
cwtl
dec
fldl
cs
lret
dec
ds
gs
js
mov
repz
nop
mov
sub
sub
push
jle
xor
mov
adc
cmpsl
jbe
in
dec
scas
xchg
clc
adc
dec
bound
dec
lods
cli
mov
cmp
icebp
pop
lds
and
inc
mov
imul
into
sub
nop
incl
icebp
adc
jne
sbb
cmc
xchg
ret
decb
mov
scas
sub
mov
outsb
adc
jmp
dec
enter
stos
jne
push
dec
cmp
iret
push
cmp
adcl
sub
je
push
xchg
rorb
subb
test
int
test
inc
aaa
loop
aam
lcall
dec
xor
push
insl
fwait
or
shll
dec
mov
divl
mov
orl
inc
pop
jbe
call
clc
sbb
cltd
mov
or
pusha
out
xchg
cmpb
mov
push
push
out
and
jl
pop
in
jl
cmp
pop
pusha
xor
jno
add
or
push
je
mov
add
mov
pop
mov
rclb
ss
mov
pop
jle
ja
std
andl
mov
lret
outsb
data16
or
adc
scas
xchg
sub
xchg
push
and
push
fcomp
in
leave
push
inc
cmpsl
push
out
adc
cmp
mov
add
cmpb
and
aas
fwait
sub
push
inc
or
rcr
nop
mov
aam
mov
mov
dec
xor
sub
aas
adc
ret
xchg
and
sub
xlat
add
sbb
pop
jl
add
add
roll
fists
xlat
rol
jg
in
push
out
je
imul
xchg
popa
sub
adc
mov
push
sahf
mov
int
and
push
into
pop
test
dec
and
movsb
std
and
mov
into
ret
data16
lea
sbb
jecxz
add
jns
adc
inc
pop
mov
shl
pop
les
ret
scas
mov
push
ret
push
outsb
out
fdiv
dec
adc
je
dec
mov
sbb
xor
jno
dec
gs
es
ss
iret
xlat
jmp
sbb
xlat
push
fucomp
dec
sbb
imul
into
push
jecxz
mov
inc
mov
daa
sysret
lret
cmpsl
pop
lret
adc
jle
add
dec
ds
jbe
and
sahf
xlat
xchg
pop
adc
testl
adc
je,pn
and
mov
sub
mov
outsl
push
imul
push
xchg
das
in
in
test
push
rolb
adc
xlat
and
inc
out
or
jno
xchg
mov
or
hlt
push
das
pop
insl
mov
mov
pop
and
loope
aad
stc
jge
pop
in
push
xor
and
sub
outsb
pop
leave
cld
add
stos
movsb
mov
mov
jl
mov
cmc
mov
sub
inc
aaa
xchg
sub
push
dec
mov
dec
sbb
lds
pop
jbe
les
lds
aad
rol
insb
and
ret
mov
jno
xchg
push
dec
mov
movsl
xlat
into
xor
push
jbe
cwtl
jge
ja
xorl
sub
or
sub
insl
cmc
fs
fwait
xor
adc
ret
cmc
mov
nop
stc
shlb
cmp
out
loope
jmp
rcl
fdivrs
ja
and
pop
xlat
adc
jle
cs
jmp
cli
pop
fnstcw
stos
loope
cltd
mov
adc
out
addb
pusha
outsb
jo
or
xor
or
int
xadd
mov
shrl
push
xchg
xchg
les
dec
les
adc
push
imul
dec
xchg
and
cmp
test
enter
mov
jb
js
icebp
push
sbb
cmp
pop
cmp
ret
aaa
sahf
insl
add
fs
push
imul
out
pop
push
dec
addr16
movsb
andb
jp
fidivrl
into
enter
idiv
and
xor
and
push
mov
outsb
push
out
leave
int
and
shll
cmp
orb
sbb
add
lret
jge
dec
pop
cmp
mov
clc
cmc
inc
sub
cli
mov
pushl
cmp
iret
and
or
movsb
mov
push
xchg
sbb
adc
arpl
aas
mov
add
lret
cmc
pop
or
scas
inc
imul
dec
stc
aaa
or
inc
test
add
mov
cli
mov
stos
ds
fldcw
cltd
pop
inc
mov
push
loop
push
mov
jl
inc
or
push
mov
mov
add
mov
dec
rcrb
fnsave
mov
mov
add
lock
mov
sahf
add
mov
push
dec
dec
aaa
mov
mov
cmp
lcall
cmp
fnsave
mov
stc
jle
adc
and
lods
cmp
inc
and
into
mov
leave
xlat
lods
into
stos
xor
push
sub
stc
divl
pop
cwtl
xchg
inc
rolb
fwait
popf
pop
sbb
jne
inc
inc
mov
mov
cwtl
jno
test
pop
mov
push
cmp
lods
stos
lret
stos
dec
inc
xchg
or
sbb
push
add
test
dec
mov
movsb
mov
jge
xor
inc
lahf
mov
push
push
ja
in
les
xlat
inc
and
nop
pop
icebp
jmp
fwait
add
or
movsl
or
je
jecxz
and
int
sub
push
fwait
das
dec
arpl
jne
sahf
aaa
int3
shrl
jo
jns
out
push
push
inc
sarl
and
jmp
aas
lcall
scas
pop
or
xchg
sti
and
push
call
sub
outsb
sbb
enter
mov
lea
addr16
pop
stos
sub
add
adc
cmp
cmp
mov
fwait
lret
xchg
push
divl
je
dec
cmp
iret
push
add
push
sbb
or
mov
in
cmp
mov
shr
jg
and
mov
sbb
out
jmp
or
or
jp
decb
test
and
jnp
stos
jne
rcll
stos
xor
mov
mov
mov
xor
lock
mov
jl
fildl
pushl
imul
add
lret
int3
gs
sbb
mov
add
cmp
hlt
or
add
adc
jmp
test
xor
adc
std
daa
mov
into
inc
insl
push
lcall
mov
jg
cmp
je
push
imul
scas
test
out
adc
inc
fiaddl
scas
xchg
dec
movb
bound
shlb
push
ljmp
gs
sub
ja
pop
fst
adc
repz
push
iret
add
mov
pop
rolb
fists
mov
stos
inc
shrb
cmpsl
push
jae
lret
add
jg
pop
xchg
sub
stos
fcompl
and
cmp
jge
xor
inc
mov
cmpsb
test
inc
lcall
bound
add
mov
mov
int
fcompl
push
in
fadds
sub
xchg
addb
cli
loop
gs
pusha
inc
lret
in
xchg
add
lock
lods
enter
push
in
iret
roll
pop
inc
push
inc
pop
mov
sbb
mov
scas
lea
cmp
push
pop
es
push
pop
lret
sub
adc
out
imul
mov
insb
filds
inc
xchg
cwtl
jne
add
fsubs
std
inc
adc
loope
inc
lea
and
dec
jl
enter
mov
es
mov
sbb
jle
not
pop
bnd
and
xor
sub
imul
sarb
aaa
sbb
loop
sub
adc
dec
push
cmp
mov
mov
xor
lret
adc
xor
ljmp
push
mov
decb
pop
cs
jb
test
pop
mov
fnstsw
notb
adc
imul
in
mov
cld
dec
jbe
sbb
mov
mov
fimuls
lahf
std
icebp
xor
ret
and
pop
cmp
loope
adcl
mov
pop
mov
mov
in
pop
xor
std
out
call
push
ffree
dec
insl
ss
in
inc
arpl
out
movsb
mov
cmp
in
js
rcll
lcall
outsl
push
fisubs
leave
cld
fisttpl
add
adc
push
hlt
ja
sub
add
dec
fimuls
add
bound
push
daa
cmp
xor
add
cmp
xchg
lock
jl
pop
das
cld
or
clc
nop
cmpsl
mov
aam
jecxz
lds
mov
sti
je
hlt
cmpsb
inc
push
movsl
inc
lock
cmp
sbb
sub
rep
mov
std
ljmp
les
mov
scas
sbb
inc
xchg
or
lock
shl
pop
sbb
out
jo
xchg
out
ds
bound
popa
adc
pop
arpl
xor
or
sti
fstl
test
ret
insb
jmp
xor
es
movsl
nop
mov
xor
addr16
xor
stos
loope
icebp
incl
xchg
cmp
pop
lds
scas
push
mov
xchg
cmp
jmp
sbb
rorb
fimuls
sbb
push
and
or
aam
mov
mov
dec
cmp
push
or
scas
out
mov
out
mov
push
mov
sahf
xchg
cmpsl
xchg
lahf
xchg
jne
ret
mul
xchg
inc
jmp
cmp
nop
sbb
sbb
and
scas
xchg
jb
push
rcrb
fstpt
pusha
cwtl
bound
mov
insb
stos
inc
movsl
pop
and
aam
test
push
aas
es
cwtl
mov
dec
gs
jnp
dec
out
push
jne
sub
sbb
les
ror
inc
fcompl
ja
or
sbb
xlat
xor
daa
mov
int
insb
jp
jecxz
sub
mov
or
sbb
stos
fisttpl
lds
shl
insl
aas
insb
test
or
mov
stc
jge
dec
sbb
pop
adc
mov
cs
mov
aas
dec
fscale
andl
cmpsl
fdivrl
pop
pop
dec
je
iret
popa
mov
mov
cmpsb
loop
ret
inc
in
cmp
pop
int3
or
fwait
sub
sbb
movsl
add
sub
lods
les
movsl
insl
out
sbb
or
or
leave
sbb
lea
in
pusha
push
jg
daa
push
dec
enter
subb
out
adc
mov
xor
lea
mov
lret
test
rolb
mov
imul
mov
popl
out
xchg
mov
lcall
test
jo
rcll
jle
ret
outsl
xor
ja
in
in
cmp
mov
lahf
out
inc
and
clc
pop
cmc
loope
xchg
sbb
sub
fsubrs
inc
and
add
imull
sub
pop
sub
xor
jge
faddl
mov
aas
insb
shr
push
dec
int3
lds
jo
cmp
sbb
dec
arpl
lock
test
jne
adc
cld
inc
dec
lcall
out
sti
mov
lock
mov
sbb
rcll
test
or
xchg
mov
int
sbb
pop
lret
popf
xlat
les
das
xchg
int
adc
loope
rcr
mov
ret
test
sbb
icebp
jno
sbb
mov
jle
cmpsl
cwtl
and
and
xchg
fimull
jb
loopne
out
mov
stos
cmp
lods
pop
rcr
push
cmp
std
cmp
dec
cmp
mov
jns
adc
xchg
cmp
or
cmp
and
cmp
out
xchg
lret
inc
movsb
push
loop
repnz
push
mov
sahf
mov
mov
cld
imul
neg
push
dec
fnstsw
or
mov
idiv
dec
shrl
sbb
repz
ret
call
fnstcw
aaa
stc
fmul
hlt
dec
lahf
add
xor
repnz
dec
mov
scas
add
lds
sbb
push
xchg
pushf
test
dec
ja
xchg
xchg
shrl
push
jge
sub
mov
xchg
xlat
add
jo
jnp
inc
and
sub
loopne
stc
mov
addr16
cltd
jns
dec
sub
mov
ret
mov
div
outsl
movsb
cs
icebp
inc
pop
ds
adc
xor
push
add
sub
jb
push
xor
test
leave
dec
mov
dec
cmp
rep
movnti
push
clc
out
lret
pop
push
xchg
bound
movsl
loop
inc
adc
or
into
lret
lds
loope
pusha
mov
inc
stc
sbb
cmp
dec
rcr
test
insb
adc
jg
dec
adc
int3
mov
popa
loope
test
loop
sbb
fbld
xor
xor
mov
and
inc
cs
ja
cli
push
jl
mov
jns
mov
pop
push
mov
or
mov
dec
lods
insb
shrb
lods
lret
inc
lahf
xor
xchg
int
mov
aaa
jle
mov
pop
cmp
pusha
scas
xchg
and
sbb
lds
pop
and
sarl
cmp
push
insl
mov
gs
ret
push
xchg
or
jmp
push
sub
popa
push
push
xchg
fdivr
mov
fcmovnu
jmp
xabort
cmp
or
cli
imul
cmp
mov
push
cmp
pop
rolb
subb
addl
stos
dec
ja
mov
sub
cltd
jne
jmp
add
mov
sub
popf
jbe
shlb
pop
adc
mov
fs
xchg
popf
inc
jbe
imul
test
gs
pop
arpl
pop
int
mov
das
pop
lcall
sub
pop
dec
inc
push
aas
insb
nop
aam
mov
movsb
push
and
loop
in
out
scas
pop
sbb
outsl
scas
add
cmp
aas
xchg
inc
fbstp
loope
add
int3
push
int
adc
mov
mov
test
icebp
adc
bnd
mov
push
sbb
retw
sbb
mov
imul
add
mov
in
push
clc
mov
mov
movsb
movsb
pop
mov
push
subb
test
outsl
imul
lods
xchg
ficomps
jle
lcall
cwtl
ja
adc
loopne
test
sub
lock
jl
lcall
sbb
repz
pop
sub
cmp
fisubrs
popa
mov
mov
rolb
les
aas
mov
sahf
cltd
jecxz
mov
cmc
add
xlat
mov
push
mov
in
xor
insb
popf
test
pop
or
pop
push
insl
rcll
push
aad
push
sbb
adc
mov
rol
mov
inc
mov
sahf
lock
cmp
cmpsl
dec
stos
mov
xlat
xor
adc
xchg
ret
lea
pop
inc
push
aaa
mov
scas
xchg
mov
fs
gs
or
rolb
add
jge
sbb
rorb
cld
add
cmp
rcrb
xchg
lret
push
xchg
out
xchg
push
xchg
dec
pop
sti
fimull
sbb
jge
sarl
xor
js
push
syscall
jg
lret
fimuls
in
add
in
jb
push
in
imul
rorb
imul
stos
arpl
cld
push
adc
mov
cmp
lods
or
es
icebp
aam
iret
adc
fstps
push
lods
fdivs
out
sarb
jb
ret
adc
call
in
adc
cmp
inc
aaa
cmc
lcall
pusha
jmp
stc
repz
lret
xor
adc
add
push
mov
xchg
sub
loope
ljmp
aaa
xchg
push
pop
das
outsl
and
repnz
mov
std
mov
jne
xchg
fs
lods
mov
subl
cltd
ret
out
iret
inc
dec
xchg
pop
rclb
and
or
js
cmpsl
mov
pop
jo
ss
push
lret
aad
and
jno
enter
test
push
adc
in
fs
jo
fsubl
sub
cmp
mov
pusha
jge
pop
outsb
push
in
mov
aas
fiaddl
in
mov
iretw
xchg
mov
sbb
sbb
sahf
xchg
decb
pop
adc
sahf
and
into
mov
and
scas
or
test
ret
repz
call
jnp
cmp
push
jae
stos
xor
ret
ja
aaa
outsb
add
mov
ja
jns
popf
fcoms
pop
js
jnp
stos
lret
jb
cmp
mov
outsl
stc
adc
addr16
pop
sti
dec
push
lods
push
ds
xchg
shlb
shlb
cmp
xor
mov
or
scas
sarl
adc
repnz
jecxz
pop
gs
push
ljmp
sub
inc
sbb
in
push
repz
mov
out
sbb
popf
mov
fmuls
jp
out
cmp
adc
or
mov
aaa
loopne
add
mov
loopne
sub
mov
push
nop
pop
aam
xor
test
push
decb
xchg
add
js
or
push
dec
test
test
fs
outsb
insb
dec
sub
pop
jnp
push
cmp
xor
inc
icebp
pop
adc
outsl
inc
or
pop
fnstsw
dec
test
sub
in
or
push
shll
nop
mov
in
decl
into
movsb
adc
fs
and
jecxz
fisttpl
mov
shll
mov
shrl
jmp
lret
xor
in
das
adc
inc
inc
push
out
xchg
daa
int
icebp
pop
int3
sbb
int
push
lcall
pop
or
sub
movsl
push
pop
jnp
push
fwait
adc
filds
imul
andb
repz
cli
sbb
push
in
push
mov
lock
or
addl
and
sub
jmp
mov
mov
dec
jmp
outsb
push
test
add
fimull
sbb
shll
pop
pop
pusha
mov
pusha
icebp
adc
out
scas
mov
addr16
and
cs
xlat
push
sub
cmp
scas
sbb
lea
push
les
inc
cmp
pop
sbb
sbb
popf
filds
sti
dec
push
xor
adc
cmp
add
cmc
jle
mov
mov
les
es
adc
int
xlat
nopl
sbb
pop
xor
cs
pushf
add
push
mov
js
in
xchg
push
mov
addr16
push
inc
movsb
pop
gs
cmp
jns
and
mov
inc
mov
adc
out
les
andnps
sub
push
roll
orl
lea
shr
mov
clc
pop
inc
mov
push
test
sti
sahf
inc
test
das
js
pop
fwait
and
ret
pop
jle
ja
fnsave
mov
cmp
dec
cmp
xlat
lahf
fmull
add
in
and
pop
insb
in
shr
push
lret
cmp
frstor
adc
test
cmp
std
lock
pop
or
mov
xor
je
cmp
adc
dec
dec
inc
pushf
fcomps
loopne
iret
cmp
inc
jns
outsl
mulb
scas
inc
test
imul
xor
in
adc
js
test
push
mov
outsl
cmc
push
pop
mov
push
es
pop
aaa
mov
cli
scas
add
push
add
dec
faddp
dec
ret
pop
mov
pop
fcompl
xor
inc
dec
mov
int3
insl
gs
pop
ds
jo
sub
lcall
mov
lahf
jns
mov
popf
jmp
push
xchg
xchg
int
dec
not
pop
fisttps
lcall
jbe
add
aaa
lcall
inc
mov
mov
adc
sahf
xlat
mov
pop
nop
xchg
xchg
pusha
ja
jl
test
outsb
push
and
flds
jae
xchg
pushf
fidivrl
mov
out
test
sbb
inc
les
cmpsl
cld
xlat
mov
in
xchg
fwait
jnp
int
xchg
xchg
loop
fcompl
mov
and
jmp
cmp
gs
ja
pop
mov
mov
add
insb
int
fisubl
jg
xchg
add
repz
fucomip
xchg
leave
loopne
jge
sub
sbb
jae
movsb
popa
jno
or
jl
add
or
loop
cmp
movsl
push
mov
sarb
mov
mov
jns
in
ret
and
pop
cmp
lods
cli
bound
mov
mov
and
xchg
addr16
sbb
lea
pop
into
ja
inc
xchg
adc
push
sbb
ja
cs
push
sub
jne
aas
mov
call
inc
mov
xchg
adc
pop
push
cmp
jo
aaa
adc
inc
push
push
cwtl
and
sbb
push
cmp
int
xchg
lods
mov
test
test
stos
sbb
dec
push
notl
addr16
cli
sbb
jo
xor
xchg
cmp
adc
cmp
mov
scas
xor
or
fidivs
das
ficompl
pop
dec
push
test
mov
iret
mov
dec
addl
in
jl
jle
movsl
inc
mov
xor
or
shrb
inc
jge
and
rcrl
into
icebp
aaa
mov
fmuls
xchg
xor
jno
sub
popf
adc
cwtl
ret
sub
out
jae
mov
test
int3
push
pop
ss
cmp
and
stc
fadd
test
push
push
out
inc
jge
sub
outsb
repnz
cmp
jne
sub
sub
jns
xchg
xor
push
lcall
cld
xlat
addl
pushf
mov
out
sub
repz
cmp
and
pushf
pop
arpl
shl
fdivrl
jp
popf
std
ret
push
add
mov
ds
stc
decb
hlt
cmpsb
out
inc
fsubl
int
dec
pop
mov
aaa
xor
test
push
xorl
test
xchg
fs
xchg
mov
stc
mov
jo
gs
adc
imul
pop
adc
jo
aaa
clc
lcall
stos
mov
fcomip
lods
fstpt
mov
mov
aaa
pop
jge
and
imul
flds
inc
out
sub
cwtl
stos
subb
fidivrl
mov
in
jp
jp
jne
pushf
aas
add
sahf
or
ds
mov
es
jecxz
jo
inc
pop
pop
cmp
xor
ljmp
lret
out
jp
jae
adc
es
fnstenv
cmp
jecxz
mov
mov
filds
pop
out
xchg
loope
lret
push
xchg
xchg
pusha
js
mov
loopne
push
fadds
sahf
outsl
adc
es
daa
dec
mov
lods
jg
mov
arpl
add
clc
in
int
out
xchg
shr
dec
jmp
jae
mov
inc
fisubl
add
cltd
inc
pop
adc
mov
jbe
out
mov
fsubr
or
add
divl
jg
aad
fadd
outsl
idiv
test
mull
mov
stos
stc
pop
xor
loop
pop
mov
dec
pop
sub
lods
stos
push
mov
addr16
dec
xchg
fistps
dec
bound
xchg
add
leave
loope
fldenv
cmp
inc
icebp
inc
pop
movsl
icebp
imul
ret
xor
push
and
out
push
ja
and
aas
pop
outsl
stos
mulb
xchg
inc
stos
mov
into
and
lods
shlb
xchg
aad
push
pop
add
ret
data16
mov
scas
cmpsb
ja
mov
in
jg
pop
pop
orl
stc
push
mov
int3
in
mov
jo
mov
pop
sub
pop
adc
push
and
mov
shlb
incb
scas
insb
jns
dec
mov
gs
jl
mov
push
aaa
jns
aaa
nop
jg
xor
lods
inc
std
cli
fsubr
js
jno
nop
int
cmc
inc
test
lea
inc
xor
sub
clc
adc
jmp
push
xor
test
out
jo
insl
cmpb
call
inc
shll
add
mov
je
adc
xchg
pop
jno
cmpl
sub
dec
jg
insb
aad
aaa
scas
fsts
pop
cmpsb
das
imul
ds
fmull
ret
cltd
js
cwtl
aas
pop
and
imul
jae
shlb
mov
mov
or
mov
imul
mov
cmp
mov
pop
bound
and
or
test
push
aam
xchg
mov
mov
mul
dec
ja
lret
outsl
xchg
push
xor
enter
repz
jae
cmpsb
in
imul
pusha
inc
inc
jmp
popa
add
jecxz
int3
test
cmp
repnz
outsb
mov
cmpsb
hlt
pop
std
in
mov
fisubrs
sbb
out
or
sbb
pop
je
pop
mov
xor
or
pop
and
sub
fdivl
in
rclb
xor
sbb
in
push
mov
cmpsb
sbb
mov
enter
out
sbb
add
jnp
mov
push
imul
insl
mov
shlb
les
and
bound
xor
rcrb
xchg
int
cmpsl
xor
cld
gs
and
cmp
mov
cmp
jle
mov
arpl
in
jns
mov
fisttpll
or
movsb
test
pop
loopne
cmp
test
adc
push
sub
dec
out
sub
pusha
loop
je
push
inc
cs
mov
mov
add
mov
xchg
repnz
test
push
cmc
lret
je
inc
lcall
orb
cmp
xor
mov
ds
ja
push
jle
cmp
pop
je
and
clc
xor
jmp
cmp
mov
pop
push
push
lea
adc
push
sbb
lret
pop
inc
push
pop
enter
cmp
add
cwtl
testl
hlt
je
xchg
jg
push
adc
sti
jmp
push
leave
or
int
xor
mov
leave
pushf
pop
stos
jmp
mov
out
mov
push
sub
loopne
mov
and
nop
mov
and
jp
clc
leave
repz
xchg
or
and
mov
pop
ret
iret
mov
call
xor
arpl
adc
cld
or
out
mov
inc
stos
test
aam
outsl
sbbb
dec
popl
sbb
les
dec
fnstsw
lods
mov
movsl
or
rcll
xor
sbb
mov
cwtl
loop
jbe
inc
sbb
push
movsl
mov
scas
xor
mov
rcll
pop
cmp
mov
ficoms
cli
push
dec
mov
fsubr
add
adc
xor
stos
data16
or
jne
mov
xlat
lea
ss
mov
in
sub
push
inc
jo
sub
aaa
add
outsb
mov
pop
adc
xchg
scas
ret
jnp
push
sbb
jge
push
lret
cmc
outsl
cli
or
sbb
xor
sbb
je
inc
test
mov
jae
repnz
mov
mov
outsl
jl
mov
movsb
repz
add
lds
psrlw
xorl
bound
dec
outsl
pop
xor
aas
jae
xlat
mov
jl
ficoms
gs
sbb
repnz
out
inc
xchg
mov
push
push
out
dec
cmc
sahf
arpl
lcall
sbb
jle
push
mov
mov
and
dec
sbb
pop
pushf
dec
cmp
mov
nop
pop
clc
cmp
sbb
mov
push
les
je
lock
repz
mov
ss
test
or
arpl
dec
or
xor
je
fstps
ljmp
push
jae
push
outsl
adc
add
xor
movsl
pop
mov
ret
jns
adc
stos
jae
and
in
jae
or
adcl
icebp
jl
fiadds
dec
fidivrs
push
and
stos
fists
loopne
in
mov
icebp
pushf
rcl
leave
pusha
imul
mov
movsb
adc
xchg
push
sahf
leave
xchg
inc
mov
loop
jnp
mov
or
pop
aam
shr
fbld
data16
jmp
enter
test
je
push
push
jns
inc
jno
out
pushf
mov
push
mov
sub
or
push
js
lods
test
sbb
adc
outsb
xlat
leave
push
aaa
leave
outsb
mov
lods
jp
dec
fwait
cli
inc
xor
es
push
test
dec
add
clc
pop
lods
xor
pop
and
cltd
push
jno
and
aam
jo
or
loop
ret
ret
fs
dec
cmp
inc
idivl
out
jnp
or
add
stc
jae
imul
push
imul
mov
scas
jmp
cmp
inc
cmpsl
out
or
xchg
mov
pop
xor
cwtl
out
lods
dec
push
into
test
and
daa
xchg
cmp
div
jl
mov
je
dec
sbb
cmove
sbb
jns
inc
std
rcr
mov
subb
enter
ljmp
jbe
insl
dec
es
rcl
cld
loop
inc
xor
mov
test
in
add
js
andb
test
xor
in
xchg
sbb
sbb
fcmovne
andb
xlat
jno
bound
lcall
add
call
sbbl
push
dec
mov
pop
imul
jae
xchg
repnz
in
or
cmp
loop
rcrb
out
lret
sahf
dec
xchg
xchg
xchg
es
movl
hlt
mov
dec
adc
out
outsb
pushf
cmpsl
test
mov
xor
sahf
popf
xor
cwtl
fbld
sahf
push
inc
and
mov
mov
aas
fs
hlt
push
jae
rol
cli
pop
mov
mov
lret
mov
sbb
ret
sti
xor
jbe
push
mov
xchg
or
jns
fisttpl
inc
add
or
ja
or
sbb
xchg
add
cli
data16
mov
push
or
pop
mov
stos
push
mov
or
xor
xor
test
and
addl
pushf
adc
cmp
hlt
or
xchg
adc
shll
int
pop
dec
daa
jae
sbb
dec
fsts
xchg
dec
jg
or
xlat
dec
xor
movsb
xor
push
test
ss
cwtl
inc
mov
nop
arpl
sbb
push
jns
movl
dec
add
pop
add
mov
dec
aad
inc
nop
cmp
arpl
leave
mov
stos
out
jno
out
iret
mov
push
cmc
push
or
push
jno
aaa
and
jecxz
mov
jp
jl
cld
mov
jno
sar
cmpsb
dec
or
mov
sub
hlt
inc
or
sahf
jo
xchg
scas
sub
cltd
jae
jecxz
and
mov
dec
lahf
filds
cmc
pop
xchg
jg
mov
pop
sbb
pop
dec
dec
or
fnstsw
jge
mov
mov
lahf
mov
sbb
aas
test
fcomps
sbb
insb
sahf
cmpsb
pusha
loopne
push
xor
push
or
xchg
movsl
and
cmpsb
aam
jnp
or
stos
sbb
jno
int3
gs
test
ret
shlb
fisttps
lret
mov
fwait
lea
filds
mov
add
jns
add
push
outsl
pusha
xor
xchg
fnstcw
fldt
dec
mov
lahf
shlb
ljmp
adc
adc
sub
dec
fprem1
sub
arpl
mov
inc
cmp
rorb
mov
cmp
test
cmpsl
jo
mov
leave
inc
hlt
les
cmp
stos
push
cmpsb
mov
push
jge
mov
mov
mov
sbb
dec
push
shll
in
das
push
out
push
shlb
ror
adcb
push
fwait
pop
mov
aas
mov
test
cmp
das
cmp
mov
push
mov
jo
push
pop
xchg
push
dec
mov
xor
push
xor
loopne
movsb
push
cmpsb
insl
int3
dec
mov
jle
aaa
out
mov
lods
add
and
fimull
mov
sbb
jb
adc
lcall
pop
jno
stc
or
push
aad
cwtl
rcll
xlat
and
or
push
mov
outsb
xchg
sahf
lods
inc
scas
jecxz
sub
sbb
pop
movsb
rorb
mov
jno
sbb
ss
push
fs
std
icebp
push
mov
mov
ljmp
push
cmpsb
test
es
mov
mov
scas
xor
mov
movsl
inc
or
insb
fdivrs
push
jle
adc
and
add
mov
addr16
movsl
leave
icebp
fwait
aam
push
js
sub
aad
jp
out
cmp
pop
pop
leave
sub
sub
add
mov
mov
ds
pop
jae
adc
fwait
pop
in
lret
sbb
or
mov
cmp
pop
pop
jmp
jae
cmp
pop
cmpsl
outsb
mov
push
mov
mov
movl
popf
repnz
fmul
aad
fstps
int
rcrb
or
movsb
mov
fistpll
inc
aaa
and
imul
xorb
out
aam
data16
add
bound
out
int
idivb
stos
test
rcl
fbld
inc
aam
jo
je
cmpsb
shl
mov
inc
repz
jmp
insb
push
or
aas
loopne
loope
sbb
pop
sti
adc
pop
scas
ret
mov
pop
inc
mov
sbb
aam
outsb
adc
mov
jmp
rolb
jmp
sbb
dec
cmpl
into
inc
sbb
push
enter
fnsave
movl
xchg
ljmp
jg
fcom
idivl
push
add
lea
test
lret
xor
nop
test
and
lods
testb
cwtl
jb
mov
mov
push
inc
add
add
lret
int
hlt
jnp
movsb
mov
xor
fisttpll
jle
xchg
shl
lds
jne,pn
or
or
das
movsb
xchg
pushf
cmp
imul
and
mov
cmpsb
sub
xchg
sti
jle
jo
inc
jg
std
out
sub
int
cmp
out
mul
sub
popa
incb
lods
and
pop
stc
outsb
loopne
outsb
and
fimull
xor
pop
xchg
cltd
mov
pop
push
dec
push
add
pop
mov
sbb
inc
daa
push
fidivs
js
in
sbb
jb
xor
ja
or
adc
xchg
adc
mov
loope
dec
fidivs
push
mov
pushf
push
popa
jmp
insb
hlt
lds
and
lahf
movups
sub
fs
mov
leave
xor
aad
xchg
jns
rorb
ror
in
push
add
xor
xchg
dec
lahf
pusha
clc
jnp
loope
fisubrl
cs
andl
dec
xchg
or
scas
xchg
mov
sbb
cmp
aad
rcrb
mov
aas
dec
xchg
or
popa
xor
dec
sub
or
popa
repnz
cmp
shll
sahf
xor
jle
xlat
xor
testb
sbb
mov
fwait
push
into
sbb
mov
arpl
dec
rclb
daa
jp
fwait
push
sbbb
pop
icebp
test
jge
mov
std
cmp
in
or
stc
xchg
xchg
stc
test
in
in
dec
xchg
jae
inc
xchg
add
adc
out
jmp
cmp
insl
mov
pop
adc
push
xlat
movb
sbb
pop
xchg
cli
aas
push
inc
mov
rcr
dec
rep
inc
scas
sbb
test
clc
dec
push
mov
mov
out
das
fisubl
xchg
mov
pop
sti
xchg
jae
sbb
jb
shl
pop
jle
insl
in
dec
push
icebp
dec
mov
test
push
add
out
and
adc
cmpsb
mov
rclb
push
dec
imul
mov
and
inc
jno
shl
stc
dec
into
mov
ret
inc
lock
adc
xchg
inc
cmp
cs
clc
in
push
sbb
xor
and
xchg
dec
mov
pop
out
hlt
call
jmp
sub
ss
or
icebp
inc
and
je
in
pushf
and
das
ficomps
adc
insb
stos
ret
ja
nop
or
pop
dec
adc
sbb
lea
mov
push
and
push
add
or
cmp
dec
inc
cmpsb
add
jl
stc
pop
aam
cmp
lret
inc
cwtl
pop
lahf
jge
jg
imul
fists
mov
fadd
outsl
arpl
lods
lock
lret
jp
push
sbb
inc
sti
mov
xor
inc
shlb
mov
sbb
add
aas
adc
pop
insl
ret
xor
std
xor
cmp
mov
lods
pop
testl
repnz
jle
adc
lret
popa
in
jle
push
adc
fdivrs
xchg
inc
inc
push
lds
sub
push
adc
imul
add
jle
das
lcall
repnz
pop
mov
xor
insl
repnz
mov
add
xchg
cld
fadds
inc
scas
xchg
les
aam
mov
push
inc
sbb
rclb
adc
or
cmp
xchg
cmp
hlt
rcll
add
cmp
xor
sub
incb
je
int3
jge
cli
cmp
frstor
enter
shr
adc
sbb
sahf
insl
mull
ret
adc
and
or
jb
jbe
mov
xor
iret
maxps
push
inc
inc
imul
popf
jno
rorl
ja
dec
dec
sub
outsl
or
das
mov
push
stos
add
in
mov
mov
test
mov
mov
mov
jmp
sub
into
add
xchg
or
add
test
xor
mov
mov
fsubrs
repz
mov
cld
fcmovnb
push
xlat
insb
in
xchg
sub
adc
pop
test
test
push
or
xchg
imul
ss
pop
call
xor
push
sub
cmp
mov
and
jl
aad
push
sbb
imul
pop
and
outsl
fdivr
test
push
fstpt
mov
add
fldcw
sub
mov
add
or
inc
jnp
dec
loop
or
testl
mov
repz
xor
fwait
scas
xor
mov
js
pop
test
mov
enter
movsl
inc
inc
cwtl
mov
pop
xchg
mov
mov
addr16
cmpsl
cmp
xchg
mov
cmp
or
inc
jge
and
ds
cmpsl
ds
adc
fsubp
jle
mov
cli
mov
subl
pop
dec
xor
inc
scas
and
pushf
les
mov
cmp
xor
out
push
dec
sbb
add
sbb
push
mov
mov
outsl
or
push
ret
test
xchg
mov
call
or
push
mov
adc
mov
dec
mov
mov
mov
shrb
push
and
mov
pop
imul
sub
jp
mov
out
cmp
stos
cmc
loopne
add
imul
imul
push
into
xlat
jl
insb
popf
fbstp
cltd
lea
dec
pop
sarb
aam
inc
add
inc
insb
lcall
scas
xchg
fldl
pop
jo
xchg
std
xchg
xor
cmp
dec
dec
fistl
adc
mov
jb
xor
push
push
mov
leave
xchg
aam
inc
adc
sbb
jmp
lcall
fdiv
mov
enter
jb
fwait
sbb
xchg
rorb
xor
test
cwtl
scas
sub
in
cmpsl
lret
scas
and
xor
sbb
lea
fidivrl
mov
out
cltd
pushf
jno
lods
shlb
and
dec
and
jnp
out
and
sbb
jl
xor
pop
xor
dec
sub
jns
out
cmpsb
pop
pushf
pop
gs
loope
iret
mov
xchg
mov
adc
and
xlat
pusha
adc
adc
or
outsb
out
sbb
mov
mov
adc
imul
and
pushf
std
sub
into
ja
pop
mov
adc
sbb
test
dec
jnp
test
jb
push
inc
bound
data16
leave
ret
lea
pop
movsl
pop
sbb
and
outsl
cs
incb
sbb
sbb
lds
sub
mov
push
push
test
cmp
movsbl
pop
sbb
add
jns
in
pop
and
out
into
push
add
xor
push
lret
inc
push
pop
repz
or
xchg
sbb
pop
jae
call
pushf
sub
pop
bound
mov
mov
pop
dec
push
mov
jecxz
adc
lea
loop
and
sti
stos
repz
lock
outsb
cli
dec
lods
inc
dec
jnp
repnz
mov
push
push
or
test
pop
adc
lret
xor
aad
jg
jl
dec
sub
imul
pop
xor
cs
dec
ds
mov
xchg
pop
ja
sub
ret
cmpb
imul
jne
dec
push
push
jle
and
arpl
push
adcl
in
xchg
sahf
and
jne
mov
pop
push
inc
outsl
xlat
dec
push
adc
push
es
inc
mov
pop
out
and
push
cmp
jb
push
out
lret
cmp
fidivrl
aam
sub
sub
lods
test
mov
pushf
and
cmp
jno
aam
ss
sti
sub
stos
sub
sbb
jno
hlt
imul
add
push
inc
sbb
cmp
mov
lds
ret
and
jmp
clc
aam
je
inc
out
repz
cld
cmp
add
int
mov
ss
jbe
in
movsb
pop
lods
push
das
xor
pop
push
cltd
inc
sbb
dec
fistpl
xchg
mov
into
push
jle
pop
data16
sub
push
les
jmp
dec
out
jne
mov
enter
or
call
push
nop
enter
push
lret
pop
insl
mov
fmulp
popf
cs
pop
mov
mov
push
flds
arpl
xchg
sub
lahf
lea
movsb
scas
cli
cmpsl
shll
ret
jle
lret
pop
jo
arpl
cmp
inc
pop
rclb
and
les
insl
push
aaa
cwtl
pushf
inc
add
cmp
into
fidivl
test
jo
xchg
xchg
or
test
sbb
in
lea
addb
pop
sarl
xor
aad
xlat
mov
getsec
xor
jne
cmp
pusha
pop
pop
push
sahf
add
mov
das
push
mov
xor
mov
push
mov
movsb
adc
xorb
pop
dec
stos
jl
pop
mov
or
scas
decb
ror
mov
jp
lea
xchg
mov
aaa
mov
xchg
mov
in
cmp
push
shlb
cmpsl
popf
loop
std
and
mov
in
repz
pushf
dec
jecxz
sbb
leave
dec
lock
jbe
mov
dec
dec
xchg
jns
ljmp
shrb
int3
sub
out
jmpw
idivl
sub
je
xchg
es
xchg
dec
popa
insl
pop
lods
lock
outsl
sbb
pop
shlb
dec
insb
call
jecxz
or
shrb
pusha
pop
out
push
mov
insb
xchg
ret
outsb
mov
aas
push
jge
push
xchg
daa
das
push
push
add
or
fs
mov
imul
scas
ja
pop
cmp
dec
jnp
mov
and
add
and
xor
scas
sub
stc
xchg
loop
dec
inc
shrl
out
mov
and
dec
insl
lock
cmp
and
nop
out
call
xchg
jbe
xor
fwait
add
repnz
mov
or
xor
pop
pop
push
movsb
sbb
sbb
aam
cmp
repz
fstpl
scas
imul
je
scas
nop
and
add
pop
xor
and
lods
jbe
mov
mov
cmp
push
pusha
and
mov
cmp
mov
mov
es
adc
out
fisubl
cmp
sub
or
dec
jns
sub
aaa
mov
jl
lahf
jmp
and
cs
mov
rolb
nopl
test
mov
cmpsl
faddl
inc
gs
sbb
inc
pop
fldcw
insl
movsl
adc
add
xchg
xor
int
sbb
inc
push
jo
std
sbb
mov
pop
inc
addr16
fwait
repnz
inc
movsb
out
pop
push
add
ss
mov
fnstcw
jg
test
adc
dec
jbe
pop
loop
mov
cmp
int
xchg
mov
dec
cmp
sub
jb
or
mov
fldenv
dec
xchg
adc
sahf
sbb
mov
lret
movsb
jnp
xor
cmpsb
mov
js
xchg
cltd
push
sub
jo
cwtl
sbb
arpl
push
cltd
inc
fstps
and
xor
sbb
jp
aas
movsb
or
fildll
cli
in
out
mov
jle
repz
jnp
out
aam
lret
inc
leave
lret
aaa
inc
imul
lods
cld
sub
jecxz
xchg
mov
icebp
mov
cmp
lods
sub
cmp
fimull
pop
movsl
cmp
mov
cld
cs
cmc
outsb
jns
pop
imul
sti
dec
inc
scas
mov
scas
inc
pop
addr16
adc
adc
cs
ret
and
add
dec
sub
and
or
adc
sub
push
cvtps2pi
in
push
fbld
test
jae
or
xchg
iret
mov
or
pusha
inc
dec
xlat
sub
movsb
inc
mov
add
sub
mov
jb
and
cs
in
mov
cmpsb
or
and
das
sahf
add
sarb
movsl
imul
adc
bound
jbe
adc
ss
insl
or
stc
adc
jp
sbb
dec
sub
fs
sbb
cltd
in
dec
cli
push
jne
mov
or
mov
xchg
jle
fcmovnu
jge
out
jecxz
xchg
xchg
aad
or
mov
sbb
mov
int
or
loopne
clc
mov
out
sbb
xor
outsb
inc
pop
xchg
mov
test
data16
aas
mov
mov
cmp
cmpsb
scas
test
loope
ds
cmp
mov
and
pop
mov
and
jo
sub
pop
dec
and
and
shlb
dec
or
mov
cmp
clc
fistpll
pop
add
popf
lcall
push
push
mov
mov
dec
sub
sbb
enter
fistl
sub
sub
mov
decb
jg
xchg
mov
ficoms
mov
pop
es
cltd
je
popa
xchg
mov
jl
adc
outsb
aam
ss
adc
xor
aam
rclb
lret
jecxz
cmp
mov
xor
push
cli
nop
lret
mov
sub
pop
negb
adc
ja
out
jnp
fwait
ficoml
push
addr16
mov
aad
nop
or
inc
jge
push
pop
add
pcmpgtw
pop
jl
test
sub
jge
lods
daa
mov
pop
iret
add
test
int3
movsl
mov
add
fiadds
aaa
mov
add
sub
outsb
mov
sbb
addr16
js
lcall
cmc
pop
xorb
lds
add
push
fstpl
push
xor
clc
inc
cmp
xlat
push
stos
jg
mov
mov
add
sbb
andl
sbb
cld
popa
movsl
sub
test
xchg
std
test
fiadds
mov
jo
add
sbb
xchg
sbb
inc
mov
orb
call
out
insb
jecxz
mov
cmp
adc
pop
lock
xlat
gs
dec
mov
out
add
iret
movsl
out
mov
pop
and
pop
dec
push
stc
dec
dec
mov
sub
aam
or
push
addl
test
clc
sbb
pop
mov
es
mov
imul
in
movsl
push
popa
imul
mov
sbb
jecxz
push
aam
push
jne
adc
std
adc
inc
out
cmp
pop
mov
sbb
push
inc
stos
inc
pop
push
push
inc
lret
add
arpl
loop
xor
test
and
and
outsb
mov
cwtl
and
test
outsb
jo
lock
pusha
sub
scas
fwait
int3
hlt
hlt
repz
dec
pop
lcall
dec
push
or
shrl
loop
fsubrl
add
loopne
lods
mov
or
outsl
andb
sbb
dec
nop
dec
shl
cmp
push
push
cmp
cld
pop
inc
popa
and
sbb
push
mov
jecxz
inc
dec
xor
js
push
fidivrl
test
adc
and
fildll
xchg
cmp
dec
cmp
sbb
dec
jge
jl
xchg
push
inc
push
xchg
cld
push
jns
mov
aad
xor
es
outsb
rcrl
mov
aaa
test
xchg
mov
fs
xor
mov
ficoml
cmpsl
cmp
mov
and
jbe
add
sbb
xor
ljmp
mov
cmp
mov
xchg
cmpsl
aad
and
pop
push
push
cmp
or
inc
jns
sbb
into
jno
dec
xor
cmc
xchg
add
sbb
iret
inc
push
mov
outsb
loope
add
mov
daa
cwtl
aam
dec
lcall
xlat
nop
shrl
insl
into
mov
inc
inc
or
pop
inc
xchg
mov
loop
in
cmp
xor
cmp
mov
jo
or
inc
adc
fisubs
daa
xchg
out
ret
repz
outsb
xchg
sub
jle
xchg
sub
xor
mov
dec
sub
and
sbb
sbb
unpcklps
xor
loopne
stos
aas
xlat
sub
int3
dec
push
pop
jae
push
or
or
inc
push
xor
or
add
pop
sbb
cmc
das
pushf
repz
das
xor
test
jo
xchg
mov
in
mov
leave
and
subl
cmp
jl
push
loope
cld
cli
mov
cmp
aaa
mov
repz
pop
mov
insb
hlt
push
push
push
inc
scas
pop
enter
in
xor
hlt
in
pushf
xor
mov
les
xor
out
dec
dec
cmp
and
cld
stc
inc
in
sbb
aad
push
dec
inc
frstor
jmp
pop
loop
movsl
das
push
inc
stos
jmp
bound
pop
or
mov
or
inc
and
jle
es
dec
fimull
pusha
mov
outsb
fidivrs
inc
ret
sti
and
les
mov
mov
and
fisubrs
add
pop
inc
sub
jb
mov
xchg
inc
repz
jmp
mov
push
xor
cld
jno
add
inc
in
sub
inc
ds
outsb
das
dec
cli
movsb
push
mov
dec
push
mov
dec
inc
jne
in
mov
cmp
jb
add
push
add
pop
out
int
sub
xchg
test
dec
fs
loop
inc
sbb
sbb
pop
lea
adc
jnp
mov
xlat
and
cmp
adc
mov
pop
mov
movsl
mov
jns
addl
leave
scas
dec
sbbb
ficoml
inc
push
stos
aaa
xchg
cmp
jl
inc
pushf
jmp
jle
push
adc
add
jmp
call
xchg
es
pop
ja
mov
into
out
xchg
filds
xchg
imul
movsb
cmp
and
fnstcw
push
lods
sub
mov
pop
mov
push
loope
mov
movsl
inc
cmp
pop
dec
icebp
pop
pop
loopne
out
push
fsubs
andl
aad
mov
inc
inc
add
mov
mov
cmp
push
popa
push
cltd
mov
lcall
in
add
lret
jmp
ss
out
sub
inc
dec
add
leave
and
mov
jne
out
cmp
xor
cmpsl
mov
xor
sub
scas
rcrb
in
pushf
add
cli
mov
cmp
insl
add
jp
testb
xlat
les
rclb
imul
fdivrp
mov
clc
pop
in
jno
pop
jbe
in
addb
lret
mov
xchg
dec
xchg
movsl
mov
out
faddl
leave
nop
push
pop
push
sahf
fcomp
ss
jae
mov
dec
iret
sbb
mov
xlat
xor
push
mov
pop
cli
sbb
ds
insb
xchg
add
das
sbb
rorl
je
xor
das
pop
imul
icebp
bound
mov
xchg
sub
push
dec
hlt
jno
pop
cmp
xchg
push
scas
ret
cli
jae
mov
lret
cmp
mov
gs
es
std
sti
or
int3
addr16
cld
out
push
and
and
loope
dec
lea
mov
rorl
stos
movsl
gs
mov
orb
lock
mov
ss
mov
fwait
sbb
jae
adc
lea
and
pop
push
mov
lcall
stos
mov
lods
inc
mov
xor
jg
xchg
mov
mov
cli
in
or
or
adc
mov
jge
push
ds
ja
pushf
call
es
sbb
lcall
and
stc
popa
stos
movb
push
mov
mov
gs
scas
in
xor
loope
decb
fdivp
add
ss
std
or
mov
pop
adc
mov
mov
xchg
inc
mov
xorb
mov
gs
int
shlb
add
and
scas
cmc
addr16
pusha
add
jo
lods
mov
ret
ret
xor
stos
in
jno
jmp
sbb
addr16
add
mov
or
data16
clc
test
dec
push
mov
dec
jne
inc
xor
push
xchg
sub
stc
xor
ret
fst
int
jmp
sub
and
xchg
aaa
daa
das
popf
lods
jno
adc
and
jg
sahf
loopne
dec
push
je
loop
insb
or
mov
jmp
test
fistps
pop
stos
insl
adc
ret
pushf
loope
jmp
jo
dec
add
jns
xchg
int
sub
cmp
or
inc
loop
mov
mov
repnz
rcr
push
loope
in
jle
sbb
xlat
jne
xchg
xor
dec
mov
add
mov
loope
test
es
in
push
add
pop
outsb
mov
pop
ds
addr16
inc
xchg
adc
mov
and
gs
xor
jnp
xor
xchg
movsb
xchg
test
xor
punpcklwd
and
and
or
sbb
in
or
loope
pop
push
fbstp
xor
jl
fmull
pop
in
popf
xlat
push
cli
adc
xchg
pop
int3
cli
add
mov
push
cmpl
fists
inc
jb
inc
mov
jnp
js
testb
mov
inc
mov
push
dec
sub
aad
mov
jmp
stos
cmp
lcall
jne
int
and
stos
daa
mov
out
clc
in
sahf
dec
aad
gs
cmc
int3
xor
bound
in
mov
aas
and
insl
push
xlat
popa
fdivp
out
addr16
jp
push
mov
out
add
jns
or
andb
stc
inc
cmp
or
dec
or
data16
jge
mov
add
jmp
test
pushf
xchg
lods
pop
and
push
pop
popa
jmp
imul
mov
mov
ljmp
mov
stos
sub
xchg
sbb
mov
ds
push
xor
adc
call
push
dec
andl
icebp
scas
mov
dec
jb
mov
push
mov
sub
insb
sbb
cmpsb
fsts
inc
or
jns
jns
je
loop
leave
das
mov
pop
and
mov
cmpsb
jns
fidivrl
jb
ret
fnsave
cli
shl
mov
mov
out
xor
shll
inc
test
pop
out
cs
loope
pop
mov
xchg
xor
xchg
imul
addl
loopne
fidivl
lods
mov
dec
loope
repnz
iret
mov
out
pop
xchg
sbb
daa
bound
movsb
dec
out
popf
mov
cli
lret
push
mov
cli
pusha
mov
xor
fnstenv
dec
ds
and
int3
into
pop
jo
pop
jl
enter
mov
and
scas
cmp
adc
test
rcrl
test
ss
shl
push
nop
xchg
inc
jg
mov
mov
pop
loopne
pop
cmp
scas
lods
sbb
outsb
and
lock
cmpsb
cmpsl
xchg
adc
ret
adc
dec
or
mov
enter
out
movsb
shr
fs
addr16
cs
fildll
lret
cli
jmp
inc
jns
xlat
scas
push
aas
lock
movups
mov
clc
sub
add
outsb
arpl
repnz
pop
jnp
mov
cmp
lds
faddl
lock
add
mov
pop
jnp
dec
int3
jbe
repz
dec
sbb
mov
mov
or
mov
fsubrl
cmp
insl
pop
ljmp
fs
mov
mov
int
in
push
cld
xchg
mov
or
lret
aad
sbb
jp
push
or
push
xchg
daa
and
nop
lock
mov
push
fwait
pop
scas
push
jg
xor
mov
pop
pop
mov
cmp
mov
mov
xchg
inc
dec
sbb
clc
jae
add
pop
inc
notb
sub
xchg
les
inc
rorl
cmc
dec
aam
test
scas
lahf
mov
xlat
and
pop
xchg
dec
jecxz
sti
sub
inc
scas
test
shrb
out
sub
sbb
les
std
sub
xchg
lods
aas
pop
sarb
adc
movb
pop
imul
test
dec
loopne
mov
insb
jae
and
popa
popa
adc
insl
inc
sub
sti
jne
adc
mov
xchg
jle
mov
ret
mov
lock
sub
cmpsl
fiadds
xchg
in
cmp
jge
pop
shrl
xchg
push
aas
popf
aaa
loope
inc
rorb
push
arpl
mov
push
stos
dec
mov
push
ret
fnstsw
cmc
sahf
inc
push
mov
roll
stc
add
bound
popa
cmp
xlat
jle
sub
test
dec
dec
repnz
inc
mov
cmc
aam
push
insl
add
cmpl
insb
movsb
mov
pop
repnz
out
lret
fwait
popa
xchg
cmpsl
xchg
nop
mov
scas
test
pop
pop
dec
inc
push
bound
pop
imul
mov
sub
jne
pop
or
ja
inc
lahf
xor
xchg
push
ljmp
aas
into
call
xchg
jb
push
push
sbb
cltd
shl
adc
loopne
inc
pop
and
mov
insb
mov
xchg
js
rcrl
push
lods
pop
arpl
add
daa
repz
ss
inc
shl
aaa
lahf
jl
pop
lds
insl
adc
or
repnz
pop
cmp
sub
call
pop
gs
enter
repz
sbb
sub
movsl
movsl
imul
lret
cmp
iret
mov
in
scas
xchg
int
push
test
push
dec
pop
xor
cmp
pusha
andb
loopne
ret
mov
lds
fiadds
pop
pop
test
insb
stc
ja
add
jecxz
lds
cltd
cmp
fwait
mov
pop
pop
bound
sahf
aas
cmpsb
pop
js
xchg
push
mov
sbb
xorl
adc
jb
push
sbb
enter
nop
xor
gs
xor
fsubp
in
adc
bound
jae
sub
cmp
out
cs
jmp
fstpt
push
icebp
dec
inc
mov
push
nop
sub
cmpsb
or
mov
mov
cmp
sub
xchg
jle
jnp
aad
lds
addr16
les
cld
mov
test
popf
adc
mov
jno
scas
push
int
repnz
mov
dec
sub
mov
cmp
mov
mov
and
popf
pop
popf
inc
js
cli
inc
cmp
shrl
pushf
aam
xchg
jmp
push
push
int3
pop
lea
dec
mov
in
lret
pop
inc
arpl
ds
jg
or
jmp
add
mov
pop
mov
shlb
cmp
scas
and
xchg
push
negl
push
ja
fdivrs
add
test
xchg
jmp
out
sbb
xchg
push
lcall
ret
push
and
mov
imul
jmp
cs
add
jge
mov
bsr
loopne
sbb
fldl
jmp
cwtl
mov
sar
sub
cmp
bound
andb
adcb
ds
fidivs
popl
jle
pop
into
jae
lahf
mov
movsb
gs
mov
push
cmp
xchg
mov
repnz
pushf
pusha
mov
sbb
sahf
leave
add
lds
pop
rol
and
or
sub
pop
es
or
sub
xor
mul
xchg
rorl
mov
pop
jl
or
dec
out
mov
pop
inc
addl
int3
push
sbb
outsl
hlt
in
or
inc
out
add
jno
pop
mov
ds
mov
paddb
cld
pop
leave
ret
lock
fistpll
sub
stos
or
idiv
jbe
or
push
add
lods
mov
std
test
xchg
daa
mov
fistps
or
loope
int3
cmp
mov
xchg
fmull
inc
xchg
sbb
mov
sbb
mov
push
jbe
imul
gs
and
mov
mov
outsb
cli
and
lods
add
adc
xchg
clc
lods
out
dec
cmp
xor
cmp
movsb
popf
sbb
inc
mov
cmp
xlat
call
test
out
mov
pop
xchg
mov
and
outsl
mov
gs
sbb
out
add
aas
js
jns
ret
imul
icebp
push
scas
sti
mov
fwait
aas
add
cmp
pop
or
notb
arpl
ficoms
mov
daa
movsb
iret
mov
push
movsb
and
pop
in
in
movsl
jbe
popa
fistpll
cmc
pand
leave
xor
test
cmp
pop
les
mov
aad
dec
jno
cmpsb
rorb
js
mov
les
push
aad
lea
or
insb
dec
xor
scas
or
xor
sbb
sahf
movsb
adc
stos
pop
jp
repz
xchg
loop
aam
cltd
push
mov
pusha
stc
out
jmp
sti
rclb
sbb
aaa
cmpsb
jb
cld
jge
adcl
jbe
roll
jnp
lock
or
jno
add
imul
pop
adc
popf
orb
int3
mull
inc
packssdw
test
sbb
das
or
fs
or
fmull
adc
and
loope
push
adc
ret
xchg
mov
jmp
rolb
lods
lret
xchg
cmp
mov
pop
push
or
scas
lds
xor
jg
aaa
sbb
in
add
mov
mov
std
push
iret
mov
pop
enter
pop
popa
pusha
addr16
mov
mov
mov
cmpsl
lcall
cmp
push
mov
or
mov
push
jae
jg
and
jbe
cmp
pop
sub
enter
addr16
jns
fldenv
sub
cmp
dec
out
mov
xor
sti
data16
dec
sub
or
rdtsc
jb
or
pusha
icebp
mov
les
pop
loopne
movsb
ss
ljmp
fiaddl
dec
mov
pop
mov
mov
dec
mov
dec
push
adc
pop
sti
mov
jo
mov
cltd
js
cmp
dec
and
je
add
addr16
shlb
xchg
push
and
lock
arpl
and
mov
push
lds
ja
mov
pop
fsubr
dec
rclb
leave
bound
or
in
inc
dec
es
cmp
push
xchg
repnz
dec
sub
mov
inc
test
fsubrl
pop
mov
sahf
pop
fsubrl
orl
sbb
js
addr16
loope
lock
icebp
xchg
or
sar
cmp
push
leave
popa
leave
mov
xor
stos
ret
mov
jb
cltd
cmpsl
ljmp
inc
sahf
push
insb
sti
div
loope
add
ljmp
adc
xor
jns
jnp
gs
insb
call
test
cmp
scas
shlb
pop
jge
sbb
pop
les
cmp
std
cwtl
push
adc
add
mov
ret
inc
int
push
xchg
or
dec
adc
jl
push
xorb
fwait
aad
xor
test
lret
stos
xlat
out
out
xor
sub
fldcw
scas
fimuls
int
enter
inc
push
jbe
lret
pop
push
xlat
add
cld
sub
mov
push
cmp
push
mov
mov
pusha
test
stos
dec
mov
mov
scas
adc
pushf
rorl
in
enter
dec
cli
repz
les
je
in
insb
add
lret
repnz
sbb
cmpsl
xchg
pop
dec
fidivs
mov
pusha
lcall
int3
mov
add
or
fldt
xchg
xorl
xor
lock
aas
sbb
mov
mov
mov
jno
in
test
xchg
sub
pop
sbb
cmp
aad
add
stos
mov
mov
sub
jnp
outsb
dec
rorb
rcrb
xor
hlt
pop
cmp
jae
xor
negl
sub
and
add
dec
or
jno
fstp
mov
adc
jp
test
orb
cmp
negl
jmp
push
mov
dec
cmpsb
lret
in
lea
cli
data16
push
icebp
mov
push
push
push
mov
stos
loope
mov
les
and
les
and
fadd
dec
mov
stos
outsb
adc
jg
jnp
mov
bswap
mov
jbe
inc
adc
mov
xchg
lods
in
dec
nop
or
sub
inc
call
hlt
ljmp
mov
jns
push
jno
dec
dec
xchg
mov
call
popa
dec
iret
push
cmp
sbb
xchg
cmp
xchg
sub
jae
dec
fdivs
or
push
mov
adc
pop
imul
out
dec
or
imul
sarl
dec
mov
stos
xor
scas
loope
nop
sub
inc
and
and
add
and
jmp
mov
and
es
lea
aaa
popa
in
mov
sub
aad
and
nop
shrl
dec
test
or
mov
sbbl
add
mov
add
in
sarl
sbb
movsl
xchg
push
out
jne
inc
jnp
mov
xchg
cmp
mov
sarl
sub
adc
shlb
xchg
pop
imul
bound
ficoml
or
cltd
sarb
outsb
mov
jmp
movsb
jle
cmp
das
adc
mov
hlt
jecxz
pop
or
xchg
jne
addr16
sbb
jg
push
add
push
out
push
addb
je
jp
adc
jnp
sbb
add
xchg
add
pop
dec
jne
mov
imul
dec
push
stos
add
sbb
ljmp
lret
shrl
aad
mov
popf
push
push
push
imul
loopne
stos
cmp
bnd
xor
adc
xlat
ret
push
pushf
ljmp
movsb
pop
pop
lahf
ss
popf
mov
xchg
and
sbbl
cmp
mov
jp
fstl
daa
adc
push
imul
movsb
in
add
or
inc
aas
imul
xchg
repz
xor
std
inc
cmp
fcomps
lcall
push
out
lret
fcomps
cmp
mov
pop
ret
mov
daa
rcrb
imul
in
aaa
fcmove
call
add
lods
mov
or
out
cmp
jg
cmpsl
movsb
push
mov
jae
xchg
sbb
cmp
ret
repz
pop
push
pushf
xor
daa
or
inc
iret
push
mov
jnp
xor
sub
imul
mov
sbbb
shlb
cmp
insb
ljmp
les
cmp
push
fsts
adc
lcall
pop
adc
faddl
daa
mov
add
ficompl
movsl
mov
inc
lret
jnp
popf
popa
cld
mov
enter
js
clc
cmp
or
loop
jg
ss
pop
mov
js
sbb
mov
out
mov
imul
inc
gs
std
out
xchg
aam
mov
lods
insb
cmp
movsb
jecxz
push
and
int
jns
out
fbstp
xorl
je
subl
or
fwait
lds
fdivs
cmp
ljmp
ret
xlat
addr16
mov
sbb
out
les
sub
push
mov
shlb
pop
xchg
inc
pop
lds
xor
and
pop
daa
dec
mov
stc
or
push
sub
sub
cld
inc
cmp
imul
sahf
cmp
aad
mov
movb
mov
add
rol
stc
sahf
lahf
loope
pop
dec
cmpsl
pop
cli
aam
jp
daa
mov
int3
imul
or
mov
jo
ss
std
pop
repz
add
sub
fs
sub
adc
stc
cmc
mov
testl
pop
enter
sub
aaa
mov
cli
movsb
inc
pop
inc
fildl
xlat
leave
cltd
xchg
fdivrp
or
jbe
push
mov
xor
jmp
aaa
pusha
mov
pop
jl
pop
pop
imul
rorl
mov
pop
pop
fmuls
add
push
mov
cmp
or
or
xor
cmp
or
jo
add
xchg
jmp
mov
add
sub
xor
jno
cmp
mov
dec
and
and
push
inc
jb
imul
jnp
arpl
sbb
fisubs
loop
aaa
ss
sbbb
loop
pop
sub
cmp
push
xor
daa
xor
sub
dec
sub
ret
cmc
xchg
add
dec
dec
out
out
push
xor
xchg
inc
inc
ja
aam
lret
jmp
mov
and
mov
shr
cwtl
fisttpll
mov
sbb
int
fwait
clc
enter
stos
sbb
pop
mov
jmp
pusha
outsl
mov
fs
cmp
sarb
lret
cmp
cmp
out
push
cltd
in
lods
out
jecxz
lock
das
movsb
clc
jae
je
mov
subl
data16
cli
and
enter
dec
ret
inc
fnstcw
and
notb
cmpsl
loope
sahf
or
out
rclb
fsubr
push
and
rcrl
add
test
pop
xchg
orl
int3
xchg
insl
mov
jecxz
call
jbe
cs
daa
lahf
repz
inc
jno
inc
cmp
xlat
out
inc
xor
pop
and
lock
popf
iret
xchg
in
test
cmp
icebp
lret
xchg
cmc
jecxz
mov
icebp
mov
pop
add
je
jecxz
fcmovnu
jbe
xor
fcomps
sub
jmp
sub
js
dec
in
adc
dec
mov
push
test
out
or
xor
jge
jns
xchg
shr
cld
inc
aaa
mov
lock
mov
mov
xor
pop
sbb
gs
lods
imul
inc
call
mov
lret
push
std
and
stc
out
fmull
sub
lods
sbb
mov
popa
mov
cmp
cwtl
mov
es
subb
stos
rcr
adc
cmpsb
jne
fsubl
arpl
pop
cmp
sbb
xor
mov
jns
cmpsb
xor
sub
jmp
ss
lret
pop
push
push
pop
add
pop
dec
sub
aam
sbb
lret
aaa
hlt
mov
adc
xor
mov
add
jae
call
add
out
push
pop
add
ret
dec
icebp
jmp
rolb
sbb
adc
push
jb
imul
push
add
in
or
xchg
sahf
adc
ret
mov
sahf
mov
cmp
inc
shrb
adc
or
pop
sbb
out
daa
add
add
imull
pop
sti
icebp
and
arpl
ds
addr16
int
mov
jg
mov
cmp
push
push
stos
enter
orl
frstor
push
xchg
sbb
test
nop
enter
cmp
sub
jl
push
or
in
add
mov
idiv
je
add
sub
dec
lret
int
clc
pop
ret
ret
rcrl
cwtl
push
test
mov
and
loopne
je
add
lods
push
lret
inc
sub
scas
mov
icebp
cmp
inc
outsb
mov
jnp
in
sahf
pop
xor
out
mov
loop
inc
enter
imul
repz
sbb
jmp
jmp
jns
loop
and
mov
outsb
movsb
mov
addr16
in
pop
push
rol
jb
repnz
movsl
fisttpll
mov
movsb
pop
cmpsb
pop
in
add
mov
pop
lcall
mov
outsl
pop
jmp
cmpsl
and
faddp
jmp
or
mov
movaps
lahf
dec
pushf
das
add
pushf
shll
cmp
fcoms
xchg
addb
sbb
xchg
xchg
out
cmp
mov
mov
inc
mov
lret
jmp
mov
xor
scas
mov
pop
jae
and
out
jmp
sub
orb
lock
sub
xchg
sbb
or
dec
sub
sub
add
cmpsl
pop
push
mov
cltd
fs
jno
nop
movsb
mov
popa
or
xchg
aaa
and
stos
mov
sub
mov
inc
sbb
dec
inc
jbe
pop
and
jno
aas
and
push
xchg
jo
aam
arpl
jb
xchg
xlat
loop
dec
popa
xlat
ret
cmp
push
mov
mov
pop
jp
lods
push
idivb
xchg
cwtl
test
mov
mov
sub
nop
sbb
inc
movsb
je
push
sub
cmpsl
shll
push
les
rolb
mov
dec
add
rcrb
popa
sub
jno
cmp
adc
dec
xchg
mov
out
shll
inc
test
adc
adc
dec
stc
es
in
outsb
lea
das
daa
in
out
adc
and
test
pushf
out
ljmp
shll
xor
xor
mov
mov
sub
sbb
sub
cltd
lret
insl
loopne
mov
cs
out
lods
enter
mov
jae
sbb
and
mov
sbb
fimull
lock
mov
jmp
addl
mov
xor
add
jo
sbb
iret
mov
mov
or
fwait
or
dec
inc
push
cmp
dec
ret
insb
and
insl
out
sub
addb
or
cmp
pop
mov
adc
f2xm1
or
pop
jmp
insl
test
push
fs
dec
insb
add
daa
sbb
mov
cmpsl
shlb
xor
movsb
or
inc
or
pushl
push
adc
lret
cmp
and
xlat
mov
dec
mov
ljmp
jne
push
sti
inc
and
out
push
movaps
mov
xchg
adcb
xchg
mov
mov
add
push
mov
fisubrs
inc
dec
repz
out
les
sub
fwait
incb
lcall
roll
mov
sbb
inc
pop
mov
mov
xchg
inc
dec
or
xchg
cmp
cltd
lock
cmp
ja
ficoms
int3
push
mov
mov
jns
mov
call
adc
adc
mov
js
mov
ja
cmpsb
nop
out
sbb
js
mov
mov
jl
or
paddb
mov
adc
iret
mov
jecxz
addr16
testl
bound
cmp
mov
xchg
test
xchg
fdivrl
adc
mov
mov
test
mov
add
jl
mov
sbb
out
loop
pop
sub
or
cld
fsubrs
pop
mov
add
adc
es
idivl
and
adc
shl
mov
sbb
fldenv
scas
addr16
int
pushf
or
shll
es
addr16
jp
out
or
int3
out
repz
fdivrl
cmp
xlat
mov
adc
es
push
mov
es
aaa
mov
lcall
das
cwtl
mov
and
dec
pop
ret
dec
lret
cmp
sahf
push
in
jge
sbb
cwtl
test
insl
pop
dec
mov
dec
lds
xchg
mov
inc
test
aas
into
dec
jae
ret
movsl
pop
ljmp
mov
push
pop
mov
mov
decb
jl
xchg
add
cli
js
sbb
iret
mov
inc
sbb
test
imul
sahf
mov
push
jl
lea
push
pushf
les
out
enter
push
daa
repnz
dec
fdivs
rcll
sbb
iret
pop
out
lods
in
jae
mov
mov
repz
and
xlat
and
addb
jnp
jg
icebp
dec
push
sbb
jne
or
roll
or
test
jae
icebp
lea
adc
outsl
mov
test
cmp
sahf
push
jb
icebp
and
xor
adc
pop
outsl
adc
or
push
inc
js
loopne
mov
lods
andl
sbb
ret
inc
xchg
push
aam
dec
test
mov
jbe
jg
sbbb
xor
xchg
sub
or
inc
mov
mov
add
sti
mov
or
adcl
popf
mov
inc
daa
or
add
or
jne
jge
xor
adc
insb
mov
push
jno
sarb
into
hlt
rclb
mov
push
loop
or
xchg
xor
repz
mov
lcall
shrl
inc
and
sub
inc
adc
gs
dec
mov
mov
rcl
push
adc
xor
call
fidivl
sub
add
mov
push
lret
cmp
jmp
push
ljmp
pop
ds
and
out
jne
shrb
sub
rcl
arpl
js
cli
mov
adc
inc
hlt
pop
xor
rorb
mov
imul
jl
int3
mov
ret
xchg
ja
pop
stos
jl
out
bound
lcall
add
iret
cld
add
je
inc
xchg
jp
adc
fstps
shll
push
sub
mov
ret
nop
jg
and
test
xchg
loope
xor
fwait
nop
and
cmp
mov
mov
or
rcrl
add
std
bound
xchg
sbb
or
jns
mov
mov
jge
adc
sahf
out
cmp
lock
xchg
pop
mov
inc
dec
xor
jp
das
cmp
subb
sbb
pop
add
xor
inc
jnp
into
in
sub
pop
cltd
inc
ret
stos
push
imul
dec
aad
mov
outsl
iret
push
loop
pushf
sub
jmp
pop
and
push
cmp
shrl
xor
call
jge
ljmp
push
je
dec
stos
insb
push
inc
push
sub
xchg
and
or
jmp
fcom
scas
popf
data16
or
and
and
jmp
dec
or
adc
cmp
in
sub
pushf
dec
jp
mov
ret
adc
jl
adc
and
ja
inc
lods
mov
fidivrs
or
xchg
ss
fcmovnb
or
test
dec
inc
jno
add
mov
popf
mov
pop
repnz
lds
xchg
dec
bound
mov
jnp
mov
and
jnp
cmp
push
mov
mov
icebp
mov
sbbl
pop
int3
out
xor
dec
jb
mov
inc
jmp
jb
jbe
push
jbe
bound
in
and
arpl
pop
jge
arpl
mov
sbb
push
dec
mov
pusha
mov
add
icebp
add
aas
push
addb
dec
xor
loope
test
in
jle
test
sbbb
mov
rolb
sbb
xchg
xchg
clc
stos
adc
sbb
repnz
jge
cmp
mov
fisubrs
jp
push
call
arpl
pop
ret
sub
pop
add
cmp
mov
es
adc
decl
mov
adc
cmp
xor
inc
ror
mov
inc
mov
fwait
insl
ret
xor
cmpsl
push
sbb
and
icebp
rcrl
adc
jp
movsl
or
sbb
fnstsw
subl
ficomps
les
pushf
pop
xchg
lods
jns
lahf
lods
sahf
adc
adc
sti
stos
int3
pop
pop
jns
out
test
insb
adc
inc
cmp
imul
push
andb
xorl
popa
hlt
and
lcall
mov
xorb
fwait
mov
scas
adc
mov
lcall
in
and
bound
test
test
sbb
and
mov
std
in
push
mov
stc
push
mov
adc
inc
xor
sbb
jmp
mov
cwtl
push
xor
add
pop
dec
dec
lea
inc
mov
jnp
mov
ror
test
test
or
and
jecxz
push
push
pop
outsb
hlt
movsb
mov
rclb
sub
loop
hlt
pop
push
mov
in
mov
push
add
lods
jbe
cli
fs
rcr
insb
pop
add
cwtl
loop
mov
jmp
mov
mov
jne
ljmp
dec
or
daa
xchg
and
sub
out
mov
jl
cs
mov
inc
out
incb
dec
cs
ss
cmp
flds
inc
xchg
repnz
jno
es
dec
and
dec
pop
push
lods
sub
ljmp
adc
scas
subb
adc
pop
pop
fstl
xchg
pop
jb
enter
add
enter
das
loopne
movsb
pop
mov
mov
das
add
pop
fadds
xor
adcl
test
pop
test
into
cmpsb
lahf
mov
cmpl
leave
in
xor
mov
popa
arpl
lea
inc
push
aam
bound
or
scas
imul
and
xor
shrl
mov
cltd
xor
add
loopne
and
les
call
and
or
cmp
stc
xchg
lods
sub
out
push
mov
xor
shll
popf
stos
iret
or
push
jecxz
out
xchg
test
pop
mov
and
roll
and
mov
adc
xchg
ror
adc
popf
push
cmp
add
xchg
mov
pop
fbld
lea
out
iret
and
push
movsl
out
inc
addl
andb
ss
mov
push
stc
xchg
push
out
adc
insl
notb
or
xor
cli
out
inc
int3
mov
mov
movsl
lret
lock
stos
push
icebp
or
mov
cmp
scas
aas
mov
mov
adc
jge
stos
push
dec
and
inc
push
outsl
push
jnp
push
push
lea
rorl
pop
or
adc
das
push
jo
test
jl
add
or
xor
pop
fimull
popf
dec
xor
or
xchg
dec
pop
sbbl
cmp
lret
push
inc
imul
adc
shll
clc
push
rorl
hlt
std
test
push
ds
pop
idivl
into
inc
lods
scas
movsb
xor
mov
loope
loopne
jg
pushf
cwtl
inc
mov
inc
loope
push
shlb
or
xchg
negl
lods
sbb
fnsave
out
add
and
or
sbb
mov
jb
push
gs
data16
mov
mov
push
outsb
imul
jae
mov
xor
push
in
jl
or
sub
fs
cli
cmp
pop
divl
aaa
test
movsl
std
sti
jb
mov
lcall
mov
stos
ret
imulb
xor
or
adc
movsl
and
jae
jmp
xchg
iret
mov
push
and
dec
out
mov
mov
push
inc
jl
arpl
movsb
notb
in
push
jbe
fwait
xor
mov
sub
lea
jbe
in
lret
adc
jb
cmpsl
scas
sbb
lret
gs
jge
cltd
xchg
adc
lret
hlt
xchg
or
sbb
pop
fwait
xor
mov
ret
repnz
cmp
lret
repnz
int3
sbb
cld
sub
inc
dec
sbb
lret
call
mov
loope
pushf
test
inc
int3
andb
mov
add
daa
hlt
cmp
mov
sahf
push
push
jecxz
mov
add
fstpl
adc
daa
clc
push
inc
push
lea
out
inc
xchg
xchg
ds
sbb
pop
dec
icebp
stos
imul
jnp
call
scas
call
cmp
out
xchg
sbb
pop
and
mov
bnd
lcall
mov
sbb
movsb
in
sti
shll
mov
arpl
icebp
add
loope
mov
push
mov
and
sub
loope
sub
cmp
jmp
xorb
cwtl
shrb
pop
scas
mov
call
es
out
sub
insl
std
test
jle
sub
and
mov
xchg
xchg
pop
loope
sub
notl
dec
adc
test
adc
fcoms
data16
bound
pusha
out
jmp
inc
sti
jbe
xor
aas
or
sbbl
scas
xchg
xor
and
imul
jns
or
add
mov
pop
in
sbb
filds
pop
enter
pop
arpl
or
jo,pt
insl
in
mov
sbb
xor
mov
sbb
cmp
xor
push
lret
outsb
lock
jno
xor
mov
mov
cmp
andl
mov
test
cli
mov
adc
sti
push
xchg
lock
or
push
fistl
and
jbe
mov
cmp
fsubrp
xor
fwait
je
or
dec
sub
lahf
outsl
mov
inc
adc
adc
xlat
cmc
cmp
das
jb
sar
fnstenv
sub
pop
push
sti
lock
mov
lret
pop
fwait
jge
popa
loop
and
add
mov
xor
dec
fdivr
cmpsl
jb
repnz
add
popf
lret
shlb
push
popf
data16
mov
fcoml
rclb
mov
push
mov
loopne
lods
push
aad
fisubrl
inc
rcrb
jae
sub
movb
and
mov
push
jne
push
movsb
jbe
nop
imul
jb
pop
xchg
mov
mov
jae
mov
jle
mov
or
mov
mov
adc
cmp
mov
jmp
mov
pusha
imul
fs
cltd
jbe
mov
arpl
jne
insl
ds
mov
adc
lret
cmp
mov
notl
pop
push
inc
iret
pop
sbb
orb
stc
adc
inc
dec
je
aas
push
inc
jge
sbb
lods
xlat
or
iret
fistpl
inc
test
sbb
jecxz
inc
sti
inc
andl
adc
pop
arpl
ljmp
ljmp
in
pushf
lock
xlat
negb
imul
push
pop
mov
mov
cmp
push
adc
push
insl
les
jle
das
ds
dec
loop
fsubl
push
xor
stc
loope
xchg
mov
cli
mov
ljmp
fdivrl
fs
sub
testb
fptan
add
and
mov
lret
daa
or
xchg
dec
mov
or
out
das
and
dec
push
aam
outsb
mov
sub
sahf
sub
mov
negb
mov
aad
mov
mov
xor
ret
pop
jl
sbb
mov
setno
push
ficomps
pop
or
movsb
sahf
jl
add
cmp
movl
inc
hlt
mov
mov
ss
icebp
stos
test
or
adc
adc
add
sub
adc
mov
aas
movsb
es
imul
bound
mov
and
lea
movsb
mov
scas
xor
push
push
sub
repz
sar
mov
jbe
sub
cmp
scas
mov
ds
test
push
xchg
cmp
mov
push
add
xchg
fcmovnbe
sbb
fisubrl
push
xor
mov
xchg
push
add
sbb
aas
nop
dec
mov
cli
fisubl
add
jb
sub
xlat
mov
mov
xchg
popf
sub
addr16
pop
loopne
lret
xchg
dec
daa
and
mov
stos
cmp
out
cmp
call
mov
loopne
push
popa
cmc
mov
mov
iret
or
inc
ret
clc
loop
xchg
loope
jle
xor
jp
xorb
aam
push
shll
loop
dec
fs
shrl
push
repz
test
add
cwtl
andb
sti
lods
nop
xchg
inc
imul
jae
imul
je
and
pop
mov
je
outsl
mov
out
or
cld
rcrl
lret
xchg
mov
std
lea
fs
add
frstor
les
sarb
cmp
sbb
sbb
std
inc
sbb
sti
call
or
movsb
inc
fidivrl
jnp
stos
sbb
xchg
pop
sti
or
movsb
inc
les
dec
mov
jns,pt
hlt
repz
pop
adc
push
xchg
sbb
mov
adcb
mov
mov
fsubrl
pusha
jno
shr
inc
fisttpll
icebp
and
xchg
push
out
pushf
xchg
int3
and
mov
jbe
mov
ret
xor
lock
in
dec
add
sub
data16
dec
sbb
add
sbb
add
lret
push
int3
fstps
adc
cld
test
nop
shlb
xchg
out
add
movsb
add
lret
or
add
xchg
mov
or
xchg
xchg
xchg
and
push
scas
data16
jb
inc
aas
stc
shr
lods
cmp
push
out
mov
mov
xor
pop
xchg
dec
lret
cld
jns
cmc
pop
cs
xchg
adc
inc
sub
cltd
jl
enter
shrl
cltd
add
faddl
xchg
das
inc
mov
xlat
dec
je
stc
fimull
mov
or
lock
jae
imul
or
bound
iret
push
je
ret
in
lock
mov
cmp
mov
out
jecxz
jmp
push
mov
inc
cltd
sbb
icebp
in
sub
xor
mov
loope
pop
subb
popa
adc
sti
or
test
jmp
jge
cmp
dec
push
push
adc
push
mov
int
pushf
fiadds
popa
mov
fwait
dec
inc
mov
test
xor
add
push
mov
stos
loope
in
jb
subl
xchg
aad
adc
loope
je
je
jns
mov
push
fadd
mov
jb
cmc
mov
cmp
mov
push
jg
roll
jne
and
cmp
jo
cmp
sbb
dec
insl
insl
fs
jno
adc
ljmp
cli
mov
mov
jne
xchg
mov
fistpl
jb
cmpb
outsb
xchg
push
inc
outsb
or
ds
jmp
mov
repnz
test
cltd
mov
jle
mov
cli
call
rolb
rorl
out
test
lods
jp
test
and
movsl
inc
loop
call
js
inc
mov
gs
loope
adc
dec
mov
not
add
iret
shr
or
imul
mov
xor
or
or
out
jmp
out
jno
clc
pop
pop
jno
pop
mov
leave
jbe
sub
push
jno
decl
push
mov
jno
aam
int3
out
out
jmp
mov
sub
sub
jle
cmpsl
test
xchg
mov
js
adc
and
push
jl
movsb
jns
mov
int3
int3
les
pop
or
push
mov
sbb
fstpl
sub
movsl
dec
xchg
jnp
in
sub
pop
and
lds
dec
popa
bound
fldl
out
out
mov
out
lret
mov
dec
jbe
push
stos
xchg
fs
and
dec
sub
xchg
xchg
push
mov
xchg
push
fs
sbb
sarb
and
adc
insb
push
popf
ret
in
mov
mov
and
add
cmc
int
psubw
push
jns
or
cli
jbe
test
mov
inc
mov
and
add
lds
outsl
or
int3
out
jl
imul
mov
sub
arpl
je
add
jo
ds
cmpsb
adc
and
or
icebp
adc
pop
lds
dec
cmp
jnp
stos
add
rolb
out
aad
xor
lea
inc
in
mov
pop
arpl
or
push
xchg
mov
enter
pop
dec
popf
pop
jo
mov
in
out
inc
sub
adc
mov
add
jb
aam
add
xchg
xor
push
into
pop
mov
sbb
ds
adcl
and
push
mov
push
adc
ja
sahf
adc
dec
sub
adc
movsl
loop
xor
jl
and
test
and
add
subb
dec
inc
fwait
add
add
add
xor
jo
sarb
lret
mov
push
dec
aad
test
clc
lods
sub
cmp
test
jge
sub
or
xchg
repnz
mov
lds
inc
daa
xchg
dec
xor
lea
enter
adc
cmpsb
jg
lret
jb
or
outsl
dec
xchg
sbb
mov
fsts
mov
fcompl
jnp,pt
cmp
or
jo
std
out
out
mov
jmp
pop
sbb
out
mov
mov
cwtl
lea
push
rorb
mov
sbb
cli
sbbl
lret
mov
repnz
rcrl
mov
adc
push
add
movsl
push
out
loop
pop
lret
cmp
scas
xor
add
mov
arpl
rolb
mov
call
inc
inc
dec
sbb
sarl
and
and
pop
cmp
mov
ljmp
lcall
mov
add
out
loop
cmp
jmp
and
leave
repz
scas
mov
movsl
xor
hlt
popf
inc
sahf
dec
jmp
pushf
and
inc
and
add
mov
loopne
leave
rcrb
movsl
scas
dec
mov
shlb
mull
rclb
mov
inc
adc
pop
jge
xchg
mov
adc
cmp
push
jl
test
out
mov
pop
hlt
outsb
imul
cmp
dec
jg
mov
xchg
jg
movsb
add
pop
inc
fwait
and
fcoml
jbe
dec
pop
ss
jp
mov
lea
add
push
and
and
fiadds
leave
xchg
xchg
or
call
cmp
and
xorl
fsubs
ljmp
out
int3
adc
jno
push
jae
test
xchg
ret
xor
ja
push
xchg
out
imul
xlat
fdivl
pop
sbb
jecxz
imul
cmpsb
shll
popf
mov
stc
pop
mov
nop
imul
inc
popa
cmp
xorb
in
jno
mov
sti
ret
movsl
test
xor
mov
shlb
aad
stc
pop
or
scas
mov
test
decb
addl
push
mov
cld
cmp
subb
rcll
cmp
cmc
mov
adc
mov
into
push
das
mov
pop
jae
and
imul
inc
cmp
jns
rcr
mov
push
fiaddl
or
jge
jbe
scas
lcall
pop
fiaddl
jp
push
push
int3
sbb
std
lahf
cwtl
fnstsw
ja
mov
aam
testb
dec
adc
jge
xchg
mov
imul
mull
orl
mov
repnz
mov
push
fldt
cltd
sahf
pop
loop
pop
lock
xor
cld
lahf
pop
adc
popa
ficomps
cltd
cmpb
push
push
ljmp
jge
popf
mov
jo
fstl
sbb
push
sub
ljmp
das
scas
loop
xrelease
sub
push
aam
mov
or
jl
xchg
pop
xchg
movsb
jns
out
and
cmp
jne
sahf
rorl
xchg
sub
insb
mov
sub
mov
fcoml
pushf
jb
add
pop
sbb
xor
mov
pop
je
je
fucomi
xor
sbb
mov
lahf
loopne
pop
xchg
in
rorb
adc
mov
mov
das
xchg
jmp
test
mov
inc
inc
insb
pushf
cmpl
xchg
push
arpl
fdivl
icebp
movsb
inc
dec
insb
pop
lods
insb
xor
or
jbe
addl
sbb
sbb
leave
dec
stc
jg
jnp
notl
pop
pop
mov
sti
jne
xor
ret
jecxz
or
mov
cmp
orl
bound
ret
adc
mov
in
jp
mov
and
lahf
das
fsub
cmp
rolb
and
fadds
sbb
outsl
push
fiadds
jns
push
idivb
mov
and
test
rcrb
fcoml
push
test
pop
fildll
mov
mov
sub
jmp
mov
jle
in
pop
in
shrl
jbe
cmp
pushf
xchg
cltd
xchg
repz
mov
leave
aam
inc
mov
xchg
sub
pushf
subl
test
inc
add
pop
pop
cli
and
inc
pop
sarl
hlt
jne
inc
ss
mov
daa
xor
fisttpll
es
cmpsl
dec
mov
sbb
dec
cwtl
test
pop
xchg
xchg
lcall
adc
and
jno
inc
cmp
jns
out
push
addr16
cmp
and
adc
test
pop
push
nop
sbb
popf
cltd
pop
add
stos
inc
jne
repnz
les
mov
xchg
mov
pop
clc
adc
into
cmp
mov
in
mov
mov
mov
loope
mov
mov
adc
dec
imul
push
ds
xchg
fcmovnbe
or
lret
or
and
cmpl
inc
xchg
mov
jo
mov
dec
mov
fadds
out
xchg
mov
fdivp
das
outsl
mov
pop
sub
xchg
rcrb
loop
hlt
fwait
jbe
xchg
adc
cmp
sarb
test
pop
hlt
popf
push
or
and
and
xor
addb
sarl
test
pop
movl
or
cli
xor
int3
sub
outsl
xor
inc
sti
test
mov
pushf
lret
mov
lcall
int3
sbb
mov
das
stos
sub
add
inc
jg
movb
mov
mov
leave
repz
push
loopne
ds
int3
sub
mov
incl
rolb
pop
roll
aad
pop
dec
test
push
cmpsl
movsb
xor
jne
std
inc
pop
push
dec
xor
in
lds
add
sub
jmp
shr
rolb
pop
pop
and
cs
rcll
xchg
ret
and
adc
sbb
xchg
stos
mov
xor
mov
scas
lcall
pop
outsb
jnp
sbb
jge
leave
push
insl
outsl
shrl
fs
cmp
pop
or
inc
fcompl
loopne
xor
fldt
sbb
ja
test
mov
jnp
adc
mov
lods
mov
cmp
cmp
jl
je
xchg
pop
mov
mov
adc
push
inc
test
cmp
mov
jp
pop
test
mov
fwait
aam
test
roll
sub
rolb
xchg
iret
mov
mov
ljmp
or
mov
or
fmul
daa
sub
xchg
loopne
pop
sub
cltd
xlat
or
adc
mov
lods
mov
cmpsl
pop
das
push
pop
jno
aam
mov
ja
cmp
adc
int
arpl
imul
push
inc
xchg
add
mov
popf
or
push
jge
add
inc
push
push
mov
sbb
xchg
pop
inc
mov
lret
mov
lret
dec
xchg
inc
dec
femms
mov
or
push
imull
pop
mov
lret
in
arpl
inc
loope
push
in
inc
mov
bound
test
mov
push
insl
add
push
or
push
push
stos
sub
cltd
mov
or
out
repnz
imul
dec
outsb
mov
das
jle
rorb
movsl
pop
cwtl
rcr
nop
mov
dec
ljmp
mov
ror
mov
fwait
sub
int
in
test
repnz
xlat
decl
dec
push
pop
pusha
in
or
sub
daa
test
mov
dec
sti
or
cmp
xchg
nop
sub
and
icebp
inc
jno
sub
jbe
sahf
mov
test
cmpsb
mov
fsub
xchg
sahf
iret
push
push
push
mov
sub
mov
lret
scas
es
sub
adc
push
add
push
cwtl
int3
pop
xchg
fs
dec
sub
dec
jns
mov
and
outsb
out
mov
rol
ds
inc
jg
add
out
pop
push
add
xor
dec
dec
push
fiaddl
loope
inc
sub
add
adc
nop
xlat
cmp
out
dec
xchg
iret
mov
xchg
cmp
out
add
push
and
enter
push
mov
roll
and
cld
xor
fwait
out
jecxz
dec
inc
popf
loope
call
inc
lods
mov
add
jnp
pop
sar
lcall
mov
das
loope
outsb
mov
call
pop
pushf
and
push
adc
out
lea
popf
imul
pop
mov
data16
adc
jns
xchg
filds
inc
aaa
orb
mov
pop
mov
xchg
and
xchg
push
dec
insl
out
push
xor
int3
aad
inc
dec
cmp
or
jmp
or
add
jle
out
icebp
in
jp
outsb
and
or
or
mov
xchg
mov
js
sbb
pop
and
icebp
aaa
push
push
rcrl
sub
push
loope
xlat
adc
aaa
in
mov
loopne
inc
pop
lret
adc
mov
xlat
pop
sbb
repnz
xorps
push
lahf
icebp
and
lock
mov
ss
or
leave
jmp
lods
push
pop
clc
jecxz
jbe
into
push
jne
jno
ret
or
mov
inc
in
or
js
fidivs
add
push
mov
jno
push
aam
mov
cli
mov
jecxz
push
dec
cld
out
cs
adcb
xchg
addl
sub
add
stc
pushf
push
call
cmp
cs
push
add
aas
inc
call
pop
push
ljmp
int
lock
xor
pop
lds
fdivs
in
sbb
int3
jl
ds
lret
ss
fucom
sbb
jb
xlat
jp
out
cmp
or
hlt
rcrb
call
lods
dec
push
push
xchg
ljmp
sbb
stos
nop
std
std
dec
into
xchg
hlt
mov
add
push
add
cmpsl
into
shll
xchg
sbb
cmp
jecxz
dec
sar
stos
sub
cltd
loop
jmp
in
push
pop
lock
cwtl
ret
movsb
fdivl
shlb
daa
out
push
cmp
jl
ljmp
or
adc
dec
dec
jnp
sbb
sub
pop
sbb
out
addr16
sbb
shll
scas
subb
and
idivl
sbb
movb
repnz
popf
mov
popa
jecxz
lret
adc
dec
xchg
test
jle
push
hlt
pusha
xor
addr16
test
cld
repz
pop
int3
popf
mov
js
jae
fimuls
js
jb
inc
fwait
clc
xchg
or
dec
push
xchg
xor
jbe
fbstp
xor
hlt
incl
xchg
adc
fdivr
xorps
mov
or
mov
test
fwait
pop
insb
push
sbb
imul
mov
sbb
ja
std
in
xchg
shlb
je
push
scas
add
idivl
mov
add
mov
xchg
xchg
icebp
je
call
inc
dec
test
mov
fcoms
popa
sahf
mov
push
aad
dec
jns
jns
clc
mov
push
aas
in
cmp
push
cltd
dec
jmp
enter
test
inc
pop
mov
ror
cmp
mov
mov
add
js
mov
mov
shll
push
sarl
mov
dec
cmp
fstpt
popl
cmp
pop
xchg
gs
rcrb
rolb
in
out
jge
sub
push
mov
cltd
ljmp
mov
pop
xor
fwait
sbb
push
movsl
sbb
inc
mov
fwait
adc
ret
and
jle
lcall
pop
insb
lds
add
push
push
xchg
adc
dec
xor
push
sub
or
outsl
push
push
mov
cli
jns
mov
pop
adc
out
in
popf
or
mov
mov
mov
arpl
mov
or
sbb
decb
push
sub
xchg
mov
add
das
or
push
je
sbb
cmp
xor
push
test
out
clc
and
cmp
pop
mov
ds
fs
arpl
add
push
mov
je
inc
nop
popl
push
jnp
lcall
imul
dec
inc
stos
imul
es
and
inc
xor
fwait
sahf
add
popa
adc
jbe
adcb
es
or
scas
push
cli
cmp
cltd
out
xchg
icebp
cld
jg
sub
mov
and
mov
push
mov
rclb
js
scas
fwait
push
lahf
cmp
ficompl
ss
and
cmp
test
push
jbe
mov
cli
rcrb
addr16
inc
push
iret
aam
jmp
dec
pop
xchg
daa
cli
jmp
js
loope
dec
loop
popf
test
sbb
xor
cltd
test
in
aad
mov
mov
sub
mov
adc
push
jbe
add
les
add
ret
insl
data16
insb
or
sbb
out
fwait
jg
pop
xchg
ret
jecxz
test
into
xor
mov
mov
mov
fwait
je
sbb
rcrb
xor
data16
mov
xorl
mov
xor
xor
pop
jge
iret
and
repnz
pop
and
inc
inc
cmp
cltd
lds
pop
push
dec
std
addr16
and
cltd
sub
notb
pop
add
push
es
addl
adc
pop
leave
ret
pop
aam
fsts
out
test
lahf
test
cmp
cmp
push
ss
adc
add
inc
lret
and
dec
fs
into
daa
xchg
inc
cmp
icebp
jmp
or
mov
dec
mov
fldl
xor
dec
insb
mov
scas
lods
div
pop
mov
inc
fdivr
inc
lret
stos
cmp
inc
aas
pop
pop
cmp
orb
aad
push
add
mov
cmpl
fs
sub
insl
lods
and
cwtl
adc
xchg
out
aad
lds
loop
xchg
fdivp
inc
in
repz
fisubrl
jl
ds
movsl
pushf
mov
loop
enter
mov
add
sbb
pop
dec
pop
aam
mov
test
icebp
add
add
pop
inc
clc
jg
push
out
jp
cmp
pop
xchg
movsb
stos
add
mov
lea
aaa
aam
das
dec
push
jp
in
xor
mov
push
test
loopne
push
sub
mov
dec
jae
mov
sub
mov
aas
xchg
pop
xor
mov
jp,pn
mov
lret
loopne
or
imul
mov
inc
mov
mov
xchg
and
outsl
add
icebp
ljmp
add
xchg
aam
cwtl
or
repnz
imul
push
lret
mov
adc
aaa
xchg
daa
mov
inc
movsl
jns
cmc
add
mov
test
dec
inc
repz
lcall
jmp
and
add
shl
jmp
xchg
std
xchg
mov
out
out
movaps
push
or
les
pusha
or
fwait
jnp
xchg
jno
jle
inc
push
pop
cmp
stc
out
hlt
cs
das
mov
call
sti
test
xchg
and
lods
cld
and
stos
leavew
mov
add
outsl
loopne
mov
add
adc
loopne
xchg
aad
mov
je
aam
or
and
fwait
and
fiaddl
aam
lods
lods
into
inc
dec
push
inc
lea
or
sub
and
mov
in
data16
jp
and
dec
pop
sub
jne
jnp
les
jecxz
and
mov
pop
inc
inc
aam
das
and
push
imul
outsb
dec
inc
push
push
mov
pop
add
movsb
add
mov
and
ret
mov
dec
jecxz
sub
xchg
push
daa
sahf
or
mov
inc
iret
lods
mull
movsb
xor
js
lcall
scas
mov
bnd
adc
test
int
mov
jl
mov
xor
ficompl
mov
cmp
pop
pop
daa
lea
repz
into
xor
ss
jge
jno
inc
push
or
mov
aam
sbb
pop
lret
xor
mov
lahf
jmp
divl
out
dec
push
dec
pop
lods
adc
inc
inc
das
push
sub
cwtl
mov
lea
icebp
mov
outsl
adcl
jo
and
cmpsb
aaa
test
and
xor
mov
add
enter
mov
cmp
into
and
test
xlat
or
jg
sbb
jno
push
imull
mov
inc
dec
pop
xor
popf
dec
lret
imul
ja,pt
sbb
cld
pop
cmp
xchg
sarb
and
mov
sub
mov
push
pusha
int
jns
gs
adc
jno
cld
imul
push
aas
push
imulb
inc
push
xor
add
test
dec
aas
int3
jbe
aaa
pop
push
pop
or
add
and
jb
jnp
sub
xor
mov
outsl
inc
adc
cmp
jb
mov
aam
mov
aaa
adc
les
and
push
mov
sub
les
or
and
cmp
mov
dec
imul
rorb
sbb
adcl
rcrb
ljmp
mov
pop
lret
in
xor
sbb
cs
mov
pop
or
cmc
fwait
lcall
pop
inc
ret
or
add
insl
addl
pop
mov
cwtl
sub
dec
stos
or
xchg
iret
out
cmpsl
sbb
pop
in
add
and
test
shrl
imul
idivl
dec
cwtl
pop
add
sbb
mov
ss
mov
or
outsl
mov
pop
push
test
cld
and
popa
les
xlat
sbb
and
add
gs
icebp
ss
loop
cmp
das
iret
and
sbb
pusha
shrl
outsl
and
cmp
lahf
mov
add
fadds
and
pop
repnz
lock
sarl
mov
scas
xor
mov
xchg
incl
mov
adcb
sbb
jb
in
mov
std
push
dec
sub
push
aas
clc
jecxz
iret
mov
or
js
sbb
jle
pop
jl
jge
jbe
test
pushf
push
aam
add
jb
sub
cmp
pusha
pusha
mov
and
test
and
or
pop
ja
inc
sub
scas
mov
sbb
mov
mov
xchg
pop
xor
sub
jmp
lcall
lock
lret
bound
push
outsl
sub
mov
dec
cmp
stc
rcrl
cmpsb
fimull
cmp
in
inc
sbb
test
hlt
divb
inc
dec
fmul
or
dec
dec
shld
and
dec
roll
mov
cmp
aam
dec
push
cltd
sub
mov
push
or
mov
fistpl
jecxz
jle
cs
pop
mov
cld
lock
adc
pop
call
shl
pop
xor
sbb
inc
into
xlat
push
push
adc
xchg
mov
dec
stc
or
mov
dec
pop
icebp
out
push
loope
cltd
sbb
imul
xchg
out
adc
scas
pop
ja
dec
fsubr
fimuls
jl
push
cmpsl
ds
mov
mov
pop
jns
imul
mov
leave
out
popa
call
fdivs
xchg
rcrb
sbb
mov
imul
jnp
pop
mov
sahf
mov
fsubl
icebp
pop
sub
jecxz
jecxz
iret
xor
mov
pusha
push
dec
mov
push
xchg
lcall
xor
cmp
call
lods
pop
xor
out
movsb
and
mov
mov
je
jle
je
sarb
sarb
gs
xchg
int
stc
addr16
xor
shll
das
cmp
jo
xchg
movsbl
dec
adcb
test
cmpsb
inc
insl
ss
imul
add
xor
scas
push
xchg
scas
and
adc
add
push
xchg
jle
inc
jle
out
incl
jnp
jo
fabs
outsl
loopne
scas
inc
inc
xchg
mov
dec
loop
push
inc
test
ret
mov
repnz
mov
jp
fisubl
push
pop
stos
mov
pushf
imul
lock
dec
movb
pop
rclb
fwait
shrb
fwait
cltd
decl
repz
int3
push
add
aam
adc
push
jo
and
xchg
in
adc
inc
sbb
cmp
div
sbb
push
dec
add
rol
xchg
fmulp
cmp
insb
popf
cltd
cmc
and
scas
push
jae
mov
dec
pop
lret
cmp
aas
in
loop
and
inc
sbb
mov
out
sbb
sbb
es
ljmp
roll
outsb
pop
mov
inc
push
ret
aas
lahf
jbe,pt
cmp
lret
inc
inc
mov
rorl
mov
pop
loope,pn
add
push
add
lcall
into
push
shlb
or
aaa
sbb
ret
daa
mov
out
mov
outsl
and
fcomps
loope
mov
fbld
bound
hlt
lret
inc
popf
int3
inc
lahf
imul
lret
xchg
add
imul
imul
or
addb
fs
mov
inc
lret
add
inc
in
xchg
and
sub
cli
jne
jp
inc
out
mov
data16
cli
or
dec
orl
sbb
in
and
jb
dec
mov
dec
push
mov
stc
pop
mov
jno
or
pusha
xchg
dec
mov
sub
mov
mov
loopne
and
pop
mov
jge
cmp
xor
lock
push
bnd
out
xchg
ds
xor
ljmp
insl
lods
push
mov
neg
mov
outsb
rolb
testb
pop
sbb
lods
sub
ss
test
fstpl
rorb
xchg
or
out
cmpb
jg
mov
fldl
cmp
cmp
dec
mov
outsb
pop
xor
gs
daa
inc
adc
lret
iret
lret
jecxz
xlat
or
aad
fsubs
push
int3
in
inc
aaa
inc
xor
sbb
lret
sbb
xor
or
addb
inc
in
sub
mov
into
mov
hlt
sub
mov
xchg
lret
mov
mov
ret
pop
inc
stos
jns
rorl
jbe
push
dec
jns
push
push
push
outsl
xchg
cmp
inc
sahf
jmp
push
push
in
dec
lock
cmp
sub
repnz
inc
out
xchg
ds
lret
rorl
cmp
popa
in
mov
sub
sbb
and
lods
add
test
jp
lret
call
push
sbb
inc
divl
imul
lods
inc
sub
cmc
push
push
sahf
mov
mov
clc
jno
clc
or
ss
xor
xchg
sbb
pop
mov
add
add
sahf
dec
imul
xchg
ljmp
fbstp
push
mov
loope
dec
fsubp
dec
xor
insertq
divb
xchg
sarb
fists
inc
mov
les
inc
mov
das
enter
xor
in
pushf
rol
mov
and
daa
sbb
dec
arpl
push
xchg
hlt
sub
fmull
mov
aad
add
in
xchg
jl
rcrb
leave
jl
cltd
adc
add
dec
fidivl
shl
or
aaa
xchg
mov
fidivrs
loope
mov
pop
cmp
dec
pop
aam
stc
cli
xchg
adc
repz
in
lret
add
mov
fildll
push
xchg
aaa
popa
lahf
mov
sub
pushf
inc
jg
xorb
lret
ret
dec
lds
add
daa
add
jnp
call
push
push
lret
test
sbb
inc
lock
pop
jnp
jbe
out
xor
or
fdivl
stos
pop
push
dec
mov
into
cmp
inc
dec
ficomps
xchg
xchg
mov
ss
mov
pop
adc
cmpsb
arpl
push
jmp
adc
sub
cmp
xor
inc
hlt
jmp
ss
mov
dec
mov
adc
jg
mov
add
ja
je
std
adc
cmpsl
out
repnz
shlb
inc
ds
popf
mov
mov
or
push
mov
add
mov
subl
pop
rcrl
mov
addr16
xor
mov
jmp
pop
jnp
into
bound
jge
mov
xor
pop
inc
je
adc
scas
mov
imul
push
mov
pop
or
leave
jo
fs
repnz
sub
inc
and
mov
jmp
iret
add
mov
arpl
push
dec
sbb
in
sbb
xlat
mov
sbb
test
dec
xchg
bts
and
xchg
shr
jge
xor
mov
xor
lods
lcall
sub
lods
inc
cmp
out
sbb
adc
jmp
cmp
mov
lea
imul
imul
fisttpll
fstpl
adc
movsb
mov
push
mulb
fidivl
sub
iret
mov
and
and
mov
test
sbb
movsb
adc
lahf
push
fcos
aam
idivb
aas
cmc
je
rolb
cmc
shll
mov
icebp
lods
fidivs
ret
mov
push
fistpl
inc
pop
adc
cmp
pop
lahf
xor
rol
cld
push
xchg
adc
adc
xor
subb
sbb
int
ja
xor
sbbb
rorb
lods
test
imul
xchg
xor
mov
mov
xor
movsb
sbb
sub
dec
mov
mov
stc
movsb
or
push
test
jl
push
test
call
xor
lods
pop
add
push
mov
aaa
out
xor
sbb
fidivrs
xor
mov
xchg
pop
or
mov
mov
lods
mov
mov
or
adc
xchg
adc
push
loop
sub
fcmovbe
xchg
mov
cmpsl
inc
popa
hlt
syscall
in
inc
fcmovnbe
mov
pushl
cli
test
fnstcw
mov
sub
mov
mov
bound
sbb
sbbl
mov
dec
adc
xchg
aaa
dec
mov
jl
adc
lret
jg
sub
cmp
or
out
dec
inc
lret
mov
and
adc
or
out
dec
aaa
sub
fdivr
dec
sbb
jmp
data16
sti
push
pop
inc
sbb
xchg
add
mov
pop
dec
out
loop
aam
pop
cmp
adc
jns
mov
jnp
leave
cmc
cmpsb
movsl
jb
fsubrl
xchg
push
fbstp
mov
lods
lret
mov
add
shlb
sub
insb
inc
out
and
adc
xchg
xlat
test
sti
adc
mov
das
jmp
test
jecxz
jmp
push
push
fstl
enter
lods
xchg
push
orl
adc
pop
mov
cmpsl
lcall
mov
mov
mov
pop
scas
pop
loope
inc
jle
hlt
popa
bound
into
insl
jo
shlb
negl
repnz
or
repz
mov
jge
repz
push
rol
jnp
xchg
xchg
mov
loope
les
bound
jecxz
cmp
mov
push
mov
inc
jnp
cwtl
imul
xchg
pop
or
cmp
les
call
or
push
insl
push
pop
mov
popf
cmp
adc
sub
add
cld
cltd
cwtl
inc
push
js
jecxz
icebp
pusha
rorb
aam
mov
push
adc
ret
fstps
push
ror
or
push
gs
imul
cmc
dec
js
dec
mov
idivb
mov
insl
push
movsb
pop
std
aam
or
popf
int
rolb
adc
repnz
icebp
les
or
in
xlat
aam
and
imul
mov
sbb
scas
lock
pop
mov
gs
loope
addb
cs
in
sarb
imul
sub
jbe
adc
xchg
xchg
data16
dec
push
xchg
imul
les
or
in
add
inc
pop
ficompl
and
std
xor
inc
nop
adc
faddl
loope
xor
pusha
testl
lods
lahf
pusha
cmp
push
inc
cmpsb
lods
iret
lods
xchg
dec
dec
adc
lret
out
push
das
sbb
sub
cmp
and
imul
inc
in
in
push
jnp
jmp
ds
push
mov
push
imul
stos
push
sbb
mov
lret
fistpl
fistl
jae
insb
arpl
mov
xchg
sub
pop
pushf
or
and
js
clc
cmp
jp
or
cld
fincstp
pushf
sbbl
imul
push
mov
and
mov
mov
int3
add
in
pop
jns
pop
mov
push
jp
pop
sub
mov
test
lret
sti
adc
adc
xor
pushf
fcos
xlat
es
call
and
imul
add
mov
or
test
and
add
into
add
pop
out
xchg
sub
in
sahf
fcompl
add
jnp
aam
add
aam
inc
cs
sub
imul
push
and
es
lret
push
mov
insl
rcrl
loop
jnp
adc
xchg
insl
jns
int3
jne
out
mov
fisubl
push
in
or
jmp
jge
and
ss
std
jns
pop
adcb
jmp
bound
adc
dec
push
cmc
imul
shll
pusha
mov
or
jb
icebp
sbb
sahf
add
aaa
movsb
push
dec
out
rcrl
pop
mov
mov
cwtl
stos
mov
lahf
outsl
dec
icebp
fwait
push
mov
mov
aaa
in
stos
test
or
jecxz
ficomps
mov
lea
mov
pop
jecxz
lods
test
cwtl
inc
push
pop
or
rclb
adc
xor
and
repz
jb
dec
test
dec
repnz
dec
rcll
shrl
inc
mov
testb
fcoms
push
nop
adc
lds
inc
fdiv
sbbl
sti
mov
fwait
scas
cmp
es
and
rcr
lcall
add
push
mov
movsb
add
cmpsl
jbe
xchg
or
shll
test
sub
icebp
cmpsl
adc
add
pop
inc
dec
repnz
push
out
jno
fisubl
xchg
testl
jnp
call
das
jle
pop
addr16
scas
mov
and
rcr
adc
sub
scas
bound
xchg
sbb
xchg
in
stos
dec
cmp
lds
xor
int
lock
mov
daa
push
jmp
shrb
fistl
inc
pop
sub
mov
sub
jmp
in
mov
js
cmp
cli
pushf
iret
mov
or
mov
pop
xor
mov
aas
lock
sbb
dec
xchg
lock
rcrl
daa
cli
xchg
xchg
cmpsl
into
ret
outsl
pop
cmp
popf
dec
in
rcl
and
jge
mov
les
sbb
and
and
cli
adc
loopne
insb
scas
pop
lods
fisttps
pop
mov
test
lahf
and
inc
scas
inc
and
mov
push
dec
lock
xor
aas
inc
cmp
add
movsl
jne
or
ret
int
ret
stos
mov
icebp
sub
into
jg
adc
jle
movsl
push
test
xchg
jo
daa
or
shl
in
in
and
mov
dec
and
jns
mov
jg
pop
out
mov
in
das
adc
lcall
repz
fsubrl
test
mov
or
sbb
or
dec
cmp
pop
ret
fwait
nop
jmp
xchg
sbb
push
dec
cmpsb
xchg
roll
pop
into
mov
sahf
inc
jo
jo
jle
arpl
loop
xor
std
pop
or
movsb
adc
stos
push
dec
cld
sbb
mov
movsl
jne
xlat
mov
xchg
mov
out
ret
repnz
pop
inc
nop
pop
fcoml
xchg
adc
push
mov
push
mov
jo
fistps
shlb
xor
xlat
jno
cmpsb
add
sbb
jb
xchg
jp
mov
push
sub
inc
scas
sahf
repz
or
and
out
push
add
shl
sbb
fstl
push
andl
jo
iret
mov
aas
cmpb
cmpsl
mov
cwtl
pop
int3
pusha
fldt
ds
aaa
and
inc
pop
sub
aad
pmaxsw
arpl
add
rcr
dec
js
jnp
inc
fisubl
lods
lods
aam
sbbl
xchg
iret
fsubrs
int
shrb
add
cltd
xchg
cs
jb
ror
cmp
dec
out
repz
mov
mov
iret
sub
mov
outsb
mov
dec
adcl
xor
inc
icebp
mov
or
inc
mov
pop
cmp
push
push
out
mov
fldl
xor
dec
sub
daa
notl
popa
out
cmp
xor
arpl
or
movsb
ret
push
inc
test
jbe
xchg
cld
div
scas
mov
sub
cmc
mov
std
adc
ror
mov
xchg
jp
sbb
mov
jo
mov
stc
ss
call
aas
movsb
rcrl
nop
cmp
xor
fists
popf
je
in
fdivs
scas
andl
sbb
add
jmp
addr16
cmp
shll
lock
sti
imul
mov
int3
xlat
adc
mov
pop
stos
mov
sub
jns
call
xlat
mov
xor
cs
mov
cmp
gs
roll
mov
xor
dec
movsl
add
push
add
sub
mov
or
notl
mov
int
repz
data16
xor
jbe
push
mov
out
mov
scas
sub
sub
into
push
loopne
xor
jne
sub
mov
divb
lods
test
sub
mov
pop
sub
insl
pushfw
mov
loop
clc
ret
sbbl
jbe
cmpsl
xor
inc
mov
pop
push
xor
jno
inc
shll
daa
mov
addr16
add
mov
xor
cld
add
ljmp
add
mov
pop
push
and
adc
or
loop
cli
cs
mov
cmpsl
sbb
fbld
pcmpgtb
popf
mov
inc
add
in
cli
adcl
roll
pusha
mov
daa
dec
outsb
int3
loope
repz
jo
adc
pop
pushl
aam
in
cmp
shll
xchg
nop
je
mov
outsl
repz
jge
push
and
mov
jl
clc
push
push
or
adc
jp
fwait
fs
enter
fwait
in
shll
pop
push
insl
cmpsb
push
xchg
pop
push
pop
out
sbb
xor
push
das
ss
or
mov
mov
cmp
subl
lock
lods
test
lds
lcall
pop
stc
push
aad
mov
pushf
jp
xor
jge
movsb
rorl
add
stos
stos
xor
cs
movups
dec
pop
icebp
ficoms
hlt
and
xchg
lcall
insl
mov
ja
test
popa
push
jl
leave
lea
and
daa
jge
lea
int3
cli
shlb
scas
mov
arpl
dec
push
or
xchg
loope
mov
leave
xlat
xchg
iret
dec
shlb
stc
and
imul
inc
cmc
int3
jmp
scas
jge
dec
inc
bound
sahf
inc
xor
sub
popa
aas
out
xchg
sbb
clc
xchg
popa
mov
out
push
pop
lods
addr16
mov
mov
adc
push
push
lahf
fistpl
stos
inc
cmpsl
daa
lea
fldl
xchg
imul
aam
cmpb
mov
dec
sbb
ss
pushf
imul
mov
xor
lret
movsb
adc
pop
jb
das
sahf
int3
sti
jb
cmp
lods
in
mov
aaa
mov
ds
xchg
jno
stc
bnd
lret
push
fcmovne
insl
sbb
push
outsb
fwait
mov
sbb
mov
add
fsub
fstp
push
std
sub
repz
orl
add
xchg
mov
test
lret
lret
cwtl
insb
out
icebp
add
xchg
jmp
xor
mov
sbb
outsl
je
xchg
sbb
sub
icebp
out
int
in
icebp
jle
movb
test
movsl
pop
jl
xor
adc
adc
and
or
mov
pop
xchg
mov
pop
adc
mov
roll
sub
cli
lock
test
push
or
data16
dec
push
roll
std
mov
inc
jle
sar
fdivrl
lea
pop
adc
pop
add
pop
std
lahf
filds
fdivrp
add
sub
decb
nop
xchg
shrl
out
xchg
lods
add
mov
pusha
cld
xchg
iret
pop
add
xor
mov
push
mov
xor
cwtl
sub
call
pop
sbb
out
add
icebp
push
inc
sahf
add
loop
cwtl
xor
jnp
add
out
ja
rclb
add
push
or
dec
call
or
outsb
ret
add
mov
mov
add
pop
ds
xor
sbb
and
fisttpl
sub
pop
sbb
out
or
pop
leave
jno
jg
sbb
enter
mov
jmp
sarb
les
pop
jns
jecxz
cmc
call
int
dec
int3
cwtl
enter
cmc
jns
sub
pop
add
std
inc
dec
mov
fwait
clc
cs
lea
idivw
and
mov
loop
and
mov
pop
ja
rorl
out
inc
cmp
es
fistps
jg
enter
loop
cmp
adc
cltd
ljmp
mov
aam
sbb
fisttps
rcrb
movsl
xbegin
aad
cld
add
mov
jle
mov
popf
inc
inc
nop
jae
stc
jno
push
mov
pushf
and
mov
adc
pushf
mov
addb
jbe
sub
adc
mov
cltd
add
and
push
xlat
arpl
mov
clc
pop
jnp
enter
das
lock
jo
repz
insl
inc
adc
mov
sarb
ds
push
push
stos
mov
pop
imul
in
loope
xchg
imul
push
fisttpl
lods
icebp
fistpl
pop
sub
adc
push
cli
jb
or
cmp
xchg
fiaddl
jne
push
fistps
jmp
cli
or
inc
repz
fsubp
insl
fwait
int3
je
mov
lret
mov
loope
cmp
clc
sub
fiaddl
test
push
pop
xor
cltd
sar
dec
roll
jp
add
lret
push
push
pop
adc
jle
mov
add
inc
adc
pop
add
in
cwtl
jmp
sub
cmp
ss
dec
cmpsb
xchg
aaa
adc
xor
repnz
or
in
cmp
popf
jbe
cmc
adc
bound
sti
fsub
xor
je
pop
dec
test
out
mov
or
pop
aad
int3
cmp
pop
jecxz
or
outsb
push
aaa
xchg
mov
daa
push
push
mov
lods
jge
mov
popf
inc
mov
jbe
jae
mov
and
nop
cli
jecxz
imul
pusha
imul
xor
and
mov
push
arpl
iret
iret
and
jne
orl
adc
mov
hlt
stos
jo
out
movsl
ljmp
pop
mov
lods
incb
movsl
xchg
dec
repz
xor
push
movsb
pushf
pop
scas
sar
push
fdivrs
add
out
or
add
lcall
enter
pop
cmp
add
fcoms
mov
and
mov
sub
ds
push
and
add
pop
pop
adc
sbb
sbb
mov
xor
subl
in
les
jge
insl
bound
clc
loop
movsb
faddp
aas
sbb
fwait
mov
sbb
jbe
mov
xchg
push
inc
fwait
imul
pop
inc
imul
dec
js
cmp
shlb
push
and
sar
aad
mov
mov
aaa
mov
add
aaa
mov
jae
inc
js
xchg
pop
push
popa
adc
testb
mov
daa
mov
mov
clc
rcll
sar
lahf
repz
fistpl
inc
jo
sti
xor
mov
setge
mov
push
clc
loopne
popf
xchg
mov
fwait
inc
sub
scas
mov
dec
loop
icebp
dec
cmc
cmp
cmp
out
push
pop
push
mov
sbb
inc
call
xchg
sti
dec
sbb
inc
mov
mov
xor
push
sbb
ret
cmpsb
jecxz
xchg
outsb
push
in
adc
bound
enter
jne
ret
test
mov
rcr
mov
int3
insl
or
push
push
in
inc
jp
out
mov
mov
data16
cld
aaa
addb
stc
mov
test
xor
pop
jne
je
cmp
call
scas
stos
insb
mov
xchg
cmp
push
fs
inc
push
jp
xor
lods
cmp
xor
fcomps
pop
sbb
pushf
je
hlt
sti
and
mov
sub
xchg
ficomps
add
jle
orl
leave
inc
mull
and
lahf
sub
cwtl
sub
mov
addb
jl
leave
xor
or
jno
outsl
loopne
sti
jmp
and
stos
enter
jge
xchg
sub
sub
clc
mov
adcb
repz
nop
loop
dec
pop
sub
and
and
hlt
jmp
nop
leave
xchg
mov
or
add
dec
pusha
xchg
pop
adc
pop
mov
aaa
enter
fisttpll
lock
mov
repz
lret
jno
and
mov
cmpsl
in
pop
les
xchg
sub
les
loope
and
xchg
in
push
faddl
xchg
iret
add
add
sub
pushf
or
pop
mov
lea
scas
test
push
xor
sbb
mov
push
sahf
pop
push
data16
pop
scas
in
cmp
xor
cmp
ret
in
dec
dec
mov
leave
shrl
adc
loope
mov
push
aaa
lds
xor
aad
scas
fldenv
lods
mov
lods
or
xchg
or
outsb
cli
movsb
fwait
push
call
lret
inc
xchg
jnp
sbb
insl
sub
cmpsb
outsb
mov
lods
mov
inc
stc
mov
je
stos
pop
push
inc
jl
and
xchg
fstps
out
leave
je
scas
xchg
sub
repz
loop
mov
xchg
in
adc
dec
cltd
ds
dec
incl
fstpt
lods
push
fdivp
shl
and
mov
or
pop
in
ja
inc
imul
fsubl
int
aas
xor
mov
push
push
adc
lahf
mov
jl
cmp
dec
aas
push
fwait
jns
lods
lret
sub
es
mov
mov
push
movsl
popf
roll
or
jmp
xchg
and
add
orb
call
adc
fwait
and
xchg
popa
je
cmc
stos
loope
inc
xchg
stc
xor
stc
jmp
outsb
inc
leave
aas
xchg
push
adc
cmc
or
ret
clc
pop
std
cmp
and
xor
enter
in
xor
arpl
clc
jge
jp
repnz
fdivrl
hlt
dec
add
pop
in
inc
ret
lea
cmp
sub
ja
lods
jae
shrl
cmpsb
mov
mov
cmp
clc
jo
shll
xchg
or
stos
xchg
cmc
cltd
adcb
cmc
icebp
into
pusha
cltd
adc
inc
into
filds
mov
pop
ds
outsb
pop
inc
xlat
push
movsb
fdivl
sub
or
aaa
or
xchg
cmpsl
dec
popf
lret
pusha
cmp
pusha
push
and
in
or
test
adc
push
popf
popa
scas
sub
ret
sbb
test
scas
inc
into
mov
das
mov
stos
ds
mov
sbb
les
cs
inc
nop
scas
scas
push
mov
add
pop
repnz
cwtl
inc
and
or
mov
or
cmp
lret
pop
jnp
dec
and
sub
mov
xchg
and
out
daa
cmpsb
mov
aas
pop
rorb
sub
adc
mov
xor
scas
lods
lcall
mov
mov
test
sbb
inc
lods
jp
aaa
add
int
sub
out
dec
adc
pushf
jg
dec
repz
sahf
xchg
insl
pushf
mov
xchg
dec
movsb
push
inc
sbb
aaa
sub
push
lods
mull
mov
push
xor
jns
xor
cwtl
imul
sbbb
push
and
cs
lret
loope
in
sub
fisubrs
fisubl
xor
add
pop
int
in
insl
aad
sub
dec
jns
cmp
inc
jb
add
pusha
test
mov
mov
xor
add
pusha
aas
dec
out
or
xchg
lret
add
or
push
cli
push
cmp
sti
xor
clc
aad
cmpb
cs
jmp
hlt
icebp
out
into
lods
sbb
inc
xor
out
add
jns
stos
arpl
mov
sub
dec
scas
sbb
dec
rorb
rcll
xchg
or
ja
pop
cmpsl
pop
daa
je
repz
sahf
pop
push
push
test
sar
mov
fiadds
mov
inc
adc
and
ss
sub
jle
stos
jns
popa
das
test
ljmp
cmp
xor
lods
cwtl
pop
int
fadd
adc
fs
bound
and
es
dec
xchg
daa
mov
sub
jl
mov
jbe
es
repnz
cmc
addr16
ret
and
cmp
pop
mov
adc
xlat
insl
fstps
mov
gs
and
jp
sahf
arpl
aad
cltd
aam
dec
stc
adc
mov
adcl
mov
popl
lret
aaa
cmp
lock
test
dec
iret
in
lods
dec
pop
adc
insb
cmp
mov
mov
aam
adcl
and
inc
mov
xor
push
cltd
push
sub
cmp
ffree
insb
inc
scas
cwtl
cmp
cmpl
push
aas
mov
jb
xchg
out
sti
lret
add
adc
mov
and
xchg
sub
jg
lods
loop
mov
aam
gs
subb
jle
imul
fcoml
gs
mov
push
ljmp
dec
cmpsl
jmp
call
xor
lds
mov
test
cmp
jae
or
aas
xor
and
xor
add
adc
ds
nop
test
xor
jle
add
add
mov
out
pop
inc
dec
and
nop
and
cwtl
cmpsb
cs
xlat
adcl
lods
add
daa
lahf
nop
lods
stos
ret
cld
jmp
jl
std
negl
mov
dec
dec
inc
lret
decb
movsl
mov
xor
mov
hlt
or
adc
arpl
push
add
sarl
mov
jmp
mov
add
sub
int3
pop
xor
imul
adc
fdivr
adc
shrl
rcll
inc
cmp
cltd
and
imul
and
mov
adc
and
mov
psllw
test
lds
or
fstl
xchg
fcomi
mov
pop
ds
lcall
test
sub
jo
mov
arpl
pushf
fbld
aam
subl
pop
lods
pop
pop
lods
sub
out
sub
ss
push
push
jle
insb
xor
pop
mov
mov
mov
mov
loope
add
adc
andb
in
sub
stc
xchg
in
jae
pop
sub
fistpll
fcmovnb
data16
adc
mov
sar
jecxz
or
xor
js
cld
mov
subl
pop
xchg
mov
stos
jl
fnsave
repnz
or
stc
lock
sbb
xchg
inc
push
mov
jmp
dec
dec
lret
shl
mov
les
pop
add
xchg
mov
jbe
inc
outsl
jae
dec
or
xor
jg
fsub
push
mulps
mov
and
mov
lret
lock
jae
push
jo
icebp
sub
ss
imul
sahf
sub
mov
pop
ret
dec
pop
fdiv
mov
shll
movl
inc
or
and
imul
pop
leave
dec
cmc
imull
subb
sub
cmp
and
lret
or
jp
inc
out
dec
fmuls
loop
outsl
fwait
or
sbb
mov
inc
or
dec
push
push
pop
loope
sbb
jecxz
bound
add
fiadds
out
sub
outsb
dec
data16
lahf
mov
aas
popa
mov
shlb
pop
push
stos
lods
imul
shll
pushf
je
out
or
mov
cmp
mov
mov
pop
inc
mov
mov
sbb
insl
cmpsb
sar
test
loop
mov
mov
mov
dec
inc
clc
push
imul
add
inc
nop
push
dec
mov
fsubs
or
mov
pushf
pop
lds
mov
xchg
jmp
pop
dec
mov
dec
jo,pn
or
adc
mov
jl
clc
sub
test
lahf
inc
fmul
pop
outsb
pop
push
sub
out
scas
mov
push
push
pop
adc
int3
push
out
jbe
mov
sub
iret
add
mov
and
repnz
xor
push
daa
jbe
pop
orl
out
mov
cmpsb
cmp
cmp
jmp
adc
and
jecxz
sahf
mov
add
cld
xor
sti
dec
fcomps
sbb
cmp
enter
xlat
aam
mov
lret
lcall
test
adc
cmpsl
xchg
mov
data16
inc
xchg
hlt
pop
mov
lcall
jne
push
inc
pop
push
pushf
push
vsubps
and
jmp
lods
ss
fisubs
xor
xchg
lret
testb
popf
mov
adc
mov
push
in
popa
adc
xchg
mov
dec
or
xchg
add
mov
cmp
fs
outsb
mov
mov
push
adcl
jl
data16
add
jmp
nop
push
xor
xchg
out
and
and
aaa
xor
int
add
popf
ja
lret
ficoms
jbe
aam
push
mov
fneni(8087
fwait
and
fstp
daa
sti
mov
movsl
dec
notl
cmpsl
and
aad
cmp
mov
mov
fdivrs
jns
sbb
mov
pop
jmp
jno
nop
pop
cltd
push
popa
inc
push
add
cmp
inc
out
nop
subl
jb
adc
dec
xchg
imul
mov
mov
cs
push
cmp
scas
inc
cmpsl
popa
ja
fucomip
ficoml
cmpsl
repnz
dec
mov
iret
mov
std
mov
mov
movsb
scas
dec
and
sahf
bound
dec
xor
addr16
fildl
cli
adc
orb
dec
test
fbstp
mov
xlat
int
ror
xor
outsb
adc
cmp
push
mov
fbstp
mov
inc
adc
rcll
leave
pop
pop
jnp
scas
cmp
add
scas
mov
cwtl
xchg
pop
popf
push
test
andl
mov
or
push
sbb
xchg
int
jmp
jecxz
rcr
jbe
xor
faddp
pop
cs
jo
sbb
les
shll
and
sbb
jp
sti
pop
sub
xchg
sub
cmpsb
fildl
mov
out
rcr
and
xchg
cs
sub
sub
pop
sub
or
mov
push
adc
out
daa
rcrb
aad
flds
mov
ss
xorl
orl
mov
push
mov
scas
mov
or
ret
mov
mov
gs
mov
lds
js
pop
mov
lcall
roll
lahf
pop
mov
vmovq
ja
adc
cs
jg
fnsave
mov
xchg
mov
loop
testl
xor
mov
push
mov
xchg
push
jg
in
mov
mov
lods
mov
xor
cmpsb
into
cs
and
inc
jl
aad
ret
loope
in
inc
jb
xchg
imul
jb
dec
mov
ss
push
pop
cmpsb
dec
mov
dec
sbb
ljmp
adc
lret
ret
mov
enter
pop
dec
ss
fwait
shlb
mov
inc
inc
movsb
jmp
pop
adc
xchg
jmp
cmpsl
movsl
int
lods
repnz
inc
sub
test
mov
lds
mov
sbb
ljmp
jne
pop
or
inc
ret
adc
and
rolb
jne
add
adc
loope
dec
dec
inc
and
push
mov
je
imul
shl
mov
out
mov
sbb
xchg
aam
dec
pop
and
mov
adc
movsl
fisubl
or
out
cmp
lea
inc
jge
in
stc
inc
xor
push
stos
mov
pop
cmp
lds
scas
mov
mov
dec
idivl
jnp
call
xchg
rcl
sub
test
xor
in
push
sti
dec
add
or
or
mov
pop
sarl
xchg
pop
ja
dec
pop
mov
cli
pop
lea
sub
adc
mov
dec
fsubl
mov
ret
and
leave
es
xchg
pop
pop
divb
add
push
notl
dec
int
and
mov
lahf
outsl
gs
lcall
cmp
jne
mov
sbb
push
add
cmc
js
mov
dec
enter
and
stos
fsubr
add
xor
adc
les
xchg
in
outsl
aad
jmp
js
enter
mov
or
jl
aam
mov
dec
push
sub
pop
or
ljmp
cmp
mov
lock
dec
pop
mov
jge
incb
lea
bnd
push
je
xlat
es
pop
dec
lock
dec
loope
jp
xchg
or
cmp
pop
sahf
cltd
pop
xor
in
fmuls
jge
loope
or
jns
xor
fistl
stos
frstor
call
cmpsb
jb
mov
mov
or
mov
mov
add
push
insb
imull
sbbl
lds
jne
rol
xchg
adc
ret
out
cmpl
cmpsl
xchg
into
loop
and
lds
mov
dec
das
sbb
pushf
std
add
xor
out
pop
test
js
jns
pop
xor
mov
cmpb
aam
icebp
ficomps
in
push
push
jb
cwtl
xor
insl
rcrl
popf
mov
fwait
shlb
shlb
mov
iret
dec
mov
lock
cmp
cli
xlat
adc
cmp
lods
adc
mov
fmul
xchg
int3
xlat
sub
cwtl
xor
mov
inc
mov
sbb
cmp
sar
jl
jecxz
mov
movsb
mov
cmp
cmp
dec
movb
mov
mov
mov
mov
movsb
rorl
fnstcw
xlat
shlb
jp
cmpsb
fstps
or
mov
mov
adcb
ja
push
mov
dec
fdivs
sub
rcrl
lock
mov
add
lret
int3
adc
xchg
loop
mov
in
mov
je
sbb
mov
add
in
fidivrs
pop
pop
or
mov
cmp
and
pop
lock
add
roll
push
or
push
push
js
mov
xor
pop
mov
mov
mov
jecxz
jno
inc
sbb
adc
test
mov
sub
add
xchg
enter
or
movsb
cmpl
fwait
popf
loop
test
inc
pop
or
mov
popa
rclb
mov
sbb
pop
or
pop
xor
jns
es
fwait
call
push
aad
pop
mov
and
xchg
jl
sub
dec
push
mov
xchg
popa
lahf
push
xorl
loope
push
jbe
in
loope
xor
inc
pop
jmp
andb
jb
ljmp
add
mov
pop
jp
add
repnz
pextrw
divps
cmp
arpl
xchg
imul
movsl
out
xchg
lret
popf
jo
xchg
sar
into
push
push
and
push
popa
inc
mov
pop
cmc
shlb
fcompp
jnp
inc
or
push
pop
sbbb
roll
sub
ds
xor
shll
cltd
imul
cmpsl
pop
push
or
out
scas
fwait
js
add
pusha
cwtl
je
pop
pop
mov
push
sub
inc
clc
xor
xor
icebp
test
push
movsb
inc
adc
lea
xor
sub
std
ljmp
divl
mov
adc
aas
fcoml
imul
jle
test
lahf
cmpb
rorl
sub
stos
push
popa
sbb
mov
add
aas
xchg
sub
aas
test
lock
scas
inc
cmc
enter
mov
ror
cmpl
sbb
jge
cli
xchg
adc
sahf
push
fucomip
cwtl
arpl
cmpsb
inc
pop
ja
sbb
fcmovne
out
scas
es
imul
lret
jb
imulb
cltd
mov
push
out
int
call
shlb
cmp
inc
mov
ds
pushf
cli
stos
jnp
les
insl
jbe
sbb
sbb
xor
inc
mov
repz
scas
test
push
sub
int3
cmp
add
inc
in
dec
jbe
loop
call
aas
dec
pop
jp
push
dec
movsl
gs
scas
sub
pop
add
push
mov
xor
nop
stc
inc
mov
repz
jg,pn
out
jecxz
pop
cli
adc
mov
add
lods
xchg
adc
cmp
xlat
cmp
fidivs
pop
test
cltd
mov
scas
or
or
mov
mov
adc
mov
out
lods
std
push
je
sbb
bound
mov
aaa
pop
xchg
adc
push
mov
loope
jle
jecxz
jns
lcall
pop
iret
cwtl
xchg
pop
jne
mov
push
data16
mov
xor
fsubrl
mulb
data16
fs
bound
les
inc
inc
adc
aas
mov
mov
jbe
shrl
decl
lock
pop
mov
insb
pop
ss
mov
mov
xchg
ss
jbe
cltd
cmc
mov
mov
xlat
sbb
push
xchg
sub
test
xor
pusha
ja
add
mov
jns
mov
cmp
pusha
loopne
and
sub
adc
mov
enter
add
fmull
or
int
jo
neg
shll
push
jp
aaa
out
pushf
push
mov
std
frstor
jecxz
jecxz
sub
frstor
aaa
lock
or
mov
pop
sub
mov
pop
aam
jle
adc
dec
bnd
inc
insb
adc
int
mov
mov
jns
mov
ds
repnz
xor
cmp
lret
inc
leave
fidivl
icebp
out
dec
adc
pop
hlt
adc
xchg
adc
lret
outsb
mov
pop
sbb
imul
pop
dec
or
aaa
push
popl
jg
lcall
inc
push
dec
testb
add
mov
cmpsb
jp
and
sbb
pop
jo
test
or
mov
lods
sub
imul
mov
inc
lea
addr16
popa
fists
imul
sub
or
movsl
mov
xor
sti
mov
jo
test
pop
jae
decl
push
out
imul
test
push
in
icebp
mov
mov
inc
adc
and
outsb
xor
jg
outsb
xor
mov
ffreep
jecxz
xor
or
jno
add
add
shrb
or
dec
call
idiv
push
push
xor
sbb
xor
inc
adc
fmull
outsl
mov
lahf
lahf
pop
pop
mov
sbbb
in
jle
shrb
and
arpl
and
neg
adc
and
mov
out
push
push
outsl
mov
out
inc
data16
incb
sub
test
mov
adc
inc
arpl
inc
iret
jbe
stos
stc
mov
stos
fisttpl
mov
sub
pop
subb
jno
cli
push
sbb
mov
add
in
jge
inc
or
cld
out
lea
mov
push
and
xor
iret
lods
inc
cwtl
add
jae
test
push
push
mov
and
fdivrl
ljmp
jle
inc
jo
xchg
sahf
outsb
ljmp
mov
ljmp
lods
and
jae
frstor
add
xbegin
mov
add
adc
xchg
and
or
repnz
repnz
add
jno
sti
sub
aam
gs
lea
inc
add
fnstenv
movsl
dec
aad
push
test
xchg
and
rol
icebp
js
jmp
les
dec
je
jae
mov
push
lcall
jge
imulb
xor
sbb
and
lea
inc
push
sbb
addr16
or
pop
add
sub
xorb
loopne
jns
lods
or
push
mov
jno
dec
add
mov
out
inc
pop
filds
sub
test
cmc
lods
cmp
clc
fsubrl
mov
sar
mov
add
jno
ja
mov
nop
ret
fidivl
mov
lahf
or
cmp
outsl
out
cmpsl
jmp
dec
dec
push
push
push
sub
xor
xor
mov
jne
xchg
pop
jae
jp
sub
lcall
testl
pop
dec
or
cmp
cmp
shlb
pop
push
jae
xchg
mov
stos
imul
rorb
jecxz
movaps
cmp
icebp
pusha
or
sub
lret
lods
lahf
mov
cld
daa
inc
sub
mov
pop
bound
mov
pusha
dec
stos
mov
bound
xchg
add
std
cld
outsl
xchg
mov
je
inc
in
dec
xchg
mov
fistps
out
dec
std
inc
sbb
jmp
jl
mov
mov
mov
adc
cmp
sbb
leave
mov
push
mulb
xchg
and
xchg
loope
loop
sbb
lods
mov
pop
push
mov
dec
in
lea
mov
stc
mov
inc
jns
leave
mov
rep
sub
mov
xchg
in
inc
push
out
notb
in
adc
fs
lds
sarb
add
xor
rorb
and
xchg
xchg
lret
mov
cld
arpl
repnz
sbb
push
adc
fs
test
jmp
mov
add
mov
out
pop
sbb
les
and
sbbb
mov
cmp
mov
leave
push
enter
hlt
mov
sub
and
push
jmp
pusha
add
sarb
cmpsb
xor
negb
in
add
decl
push
ja
lahf
popa
sub
cmp
xchg
mov
inc
inc
aam
insb
dec
sub
jnp
test
cmc
lret
sbb
insl
mov
jl
mov
aas
in
sbb
pop
and
sti
jns
pushf
test
mov
sub
arpl
jb
inc
lret
scas
cmp
or
jo
cmp
push
pusha
and
mov
mov
or
push
bound
fwait
outsb
decb
insl
dec
lods
cmp
mov
jge
stc
cmp
mov
xchg
xor
out
es
dec
cld
mov
add
cltd
mov
or
aas
xchg
div
xchg
adc
fmuls
xchg
std
push
stos
repz
pushf
and
outsl
psubq
pop
adc
dec
jbe
lcall
bound
mov
stos
mov
mov
and
mov
dec
or
scas
mov
dec
mov
cmp
out
mov
adc
popf
cmp
es
push
lahf
add
sbb
adc
sbb
enter
jmp
mov
adc
dec
adc
mov
leave
aaa
lcall
call
or
iret
mov
gs
jmp
scas
pushf
and
loope
adc
pop
call
xchg
inc
xorb
dec
test
and
mov
sub
iret
test
dec
pop
xchg
rorl
lea
cmc
cld
in
pusha
insl
pop
xor
add
fildll
mov
lcall
add
loopne
inc
std
jnp
xchg
xchg
inc
sbb
ret
sbb
fsubl
mov
jne
addb
xchg
jle
ja
ja
and
jge
int
adc
sbbb
jae
fwait
inc
sub
cwtl
add
dec
in
scas
mov
sbb
mov
popf
xchg
scas
enter
je
adc
test
inc
mov
das
notb
or
push
daa
sbb
add
push
xor
inc
in
mov
ja
test
arpl
xchg
shrb
adc
dec
nop
out
push
xor
fwait
sub
pop
pushf
iret
clc
leave
pop
lcall
les
push
jp
fnstcw
add
cmpsb
pop
into
je
hlt
lock
stc
test
sbb
and
repnz
jno
insl
aas
xor
daa
sbb
in
pusha
cwtl
mov
inc
ret
jno
push
int
sahf
fadd
pop
mov
push
jns
popf
clc
lret
lret
xor
jno
into
push
adc
or
repz
js
stos
aas
cwtl
mov
cmp
imul
sbb
fidivl
xchg
add
aad
add
xchg
or
sbb
call
jle
daa
ret
mov
repz
sbb
pop
shrb
inc
pop
xchg
sar
add
xor
fmulp
shlb
mov
in
test
mov
or
lock
cmc
jbe
adc
movsw
ficoms
sbb
iret
pop
xlat
test
pop
jns
cmpsb
xor
stos
sub
cmp
jbe
pop
mov
repz
out
in
jb
xor
loope
pop
call
ret
add
in
jge
lds
or
sbb
add
ljmp
clc
dec
repz
push
cmp
jnp
dec
repz
iret
adc
popl
cmp
mov
mov
dec
jp
dec
mov
stc
jbe
jmp
sbb
mov
xchg
cmp
add
pop
mov
push
cld
push
int
divl
dec
cmp
pop
or
or
fdivr
cmp
lret
repz
addr16
aad
out
fldl
fisubrs
movsb
repz
mov
das
pop
xchg
add
sub
jo,pt
adc
push
sbb
cli
test
scas
adc
jp
jmp
dec
jnp
xchg
pop
push
repz
insl
sbb
fldl
cld
sbb
or
or
aaa
scas
cmp
and
ljmp
jecxz
push
cmp
das
daa
rolb
xor
inc
test
jno
jnp
cmp
jbe
clc
xor
mov
inc
mov
fdivl
jnp
cmp
pop
cmp
sbb
sbb
sub
rcrl
divb
outsl
mov
or
or
insl
aas
xlat
jbe
popf
sub
std
divps
fisttpl
cs
mov
cwtl
sti
and
add
sbb
lods
enter
add
lahf
push
dec
lock
shll
imul
fprem
repnz
jecxz
mov
lds
mov
pop
cwtl
lods
inc
cmp
stc
pushf
sbb
mov
sbb
mov
adc
xchg
icebp
mov
push
mov
inc
stos
sub
aam
and
imul
mov
cmc
and
cmc
adc
int3
outsb
cmpsb
sub
jne
and
sahf
push
daa
or
lcall
dec
mov
stc
es
mov
lods
adc
popf
imul
push
mov
ds
test
test
sbb
repz
adc
jae
fldcw
mov
cmp
data16
mov
xchg
sub
rclb
repz
jns
push
sbb
inc
mov
lret
add
jle
jnp
ja
ja
mov
popf
out
pop
pop
mov
subb
sub
js
xchg
inc
push
cmp
adc
and
sub
cmp
push
push
xlat
insb
add
lcall
dec
enter
or
add
add
repz
mov
jl
enter
add
mov
and
xor
iret
ljmp
mov
pop
out
jae
stos
mov
add
popa
std
pusha
mov
mov
inc
mov
pop
cmp
je
rcrl
xor
int3
cmp
cmp
adc
loop
mov
sub
mov
xchg
out
pop
dec
or
cltd
movsb
in
sbb
lock
dec
mov
dec
pop
mov
xor
mov
cmc
ljmp
add
ss
sbb
sub
adc
nop
jbe
pop
inc
out
shlb
or
xchg
andb
mov
loope,pt
xchg
or
jl
sub
add
iret
push
inc
mov
ja
mov
inc
mov
adc
fcmovne
mov
shlb
mov
sub
outsb
out
mov
out
add
cmp
dec
adc
test
jbe
add
pop
in
mov
mov
stos
jb
movsb
mov
inc
jae
in
xchg
mov
loopne
push
dec
sub
add
or
es
xor
pushl
mov
push
and
test
je
jg
xchg
rol
or
jmp
and
imul
or
mov
adc
or
add
xchg
adc
cmpb
mov
xor
and
mov
lcall
in
hlt
mov
rclb
xchg
in
aam
push
subb
sbb
push
dec
fwait
xchg
loopne
and
enter
mov
fldl
sahf
fnstenv
sbb
repz
jnp
push
mov
nop
cmp
es
cli
cmp
dec
jae
dec
push
or
sahf
inc
rol
loopne
es
adc
icebp
lock
jo
jp
inc
jcxz
sbb
mov
pop
incb
fdivrs
iret
jecxz
xchg
mov
and
push
cmp
pop
enter
adc
cmp
mov
daa
sbb
inc
xor
bnd
repz
ljmp
sti
lahf
ficoml
mov
mov
inc
fdivrs
push
ret
jecxz
mov
rcll
jle
clc
sub
mov
pop
sbb
xor
sbb
and
push
bound
adc
insl
les
mov
in
nop
repz
loop
icebp
call
dec
cli
lea
jne
inc
push
pop
lock
dec
cltd
adc
cmp
fwait
xor
lea
pusha
cmp
neg
mov
insl
fsubl
popf
test
fcmovnu
push
or
inc
shll
xchg
iret
add
mov
xlat
fcmovb
icebp
adc
hlt
iret
orl
sbb
jae
push
pop
lret
in
xlat
pusha
lret
xchg
sub
inc
sub
loope
sbb
cmp
xchg
mov
add
andl
jl
out
mov
dec
testb
ss
clts
movsb
push
arpl
pop
xorl
pop
lods
adc
cltd
adc
clc
pop
mull
inc
ds
mov
sbb
dec
mov
xchg
mov
dec
jne
popa
mov
test
fsubr
pop
bound
push
dec
xchg
mov
jecxz
pop
cmpsl
btc
push
negl
add
sbb
fsubrs
mov
je
add
in
cli
inc
pop
insb
out
jp
ret
insl
lea
mov
dec
je
je
lods
add
outsl
sbb
rclb
fistl
adc
xor
dec
pop
xlat
faddp
jo
repnz
les
push
bound
xor
aas
int3
test
test
dec
dec
pop
mov
pop
lcall
xor
fistpll
es
out
popa
jns
into
imul
sub
std
std
pop
xor
push
fyl2x
jb
adc
out
jo
popf
outsl
in
inc
push
aas
in
data16
clc
in
cmp
or
jge
gs
jnp
pusha
push
pop
adcl
insl
mov
push
aam
int
gs
insb
pop
pop
out
jne
add
ret
call
fisubs
pop
push
xchg
insb
lock
mov
push
push
sub
dec
out
dec
pop
in
cmp
sbb
mov
mov
clc
mov
cmpsl
gs
ss
clc
ret
sbb
lods
aas
pop
es
mov
inc
shrb
inc
loopne
fwait
mov
sbb
dec
or
test
enter
shll
lahf
pop
fldenv
cmp
sbb
mov
fs
fldl
test
popf
stc
mov
hlt
in
sub
lcall
andl
fs
or
push
and
js
aad
dec
insl
jnp
push
dec
mov
dec
aas
pop
cmpsb
jbe
sbb
cmp
ljmp
daa
js
xor
pop
sub
pop
push
sahf
push
mov
pop
jno
mov
add
mov
add
push
mov
gs
negl
mov
jnp
jno
das
mov
push
xchg
in
adc
mov
jnp
push
js
aaa
es
sbb
adc
adc
test
out
xor
in
cmp
cmc
dec
cmp
sahf
in
cmp
xchg
lahf
fmull
dec
faddl
pushf
or
es
mov
cltd
in
cli
push
test
add
mov
cltd
daa
add
cmp
push
mov
sbbl
dec
aaa
or
mov
push
sub
adc
rorb
insb
nop
mov
sub
jmp
or
jecxz
xchg
cmp
add
pop
cmp
adc
fwait
loop
mov
adc
stos
xorl
xor
cmpsl
jb
andl
pushf
xor
das
daa
test
mov
out
fcom
push
outsb
add
lods
call
or
mov
mov
lahf
push
or
call
xor
outsl
lods
data16
and
loop
cmpsl
fidivl
ret
push
inc
test
xchg
test
sub
lods
fstpt
cmp
inc
call
hlt
cmc
mov
sub
mov
xchg
sbbb
fcmovnbe
in
mov
push
std
mov
mov
or
jle
mov
push
add
inc
mov
insb
outsb
add
push
sbb
rorl
aaa
rolb
sub
repnz
dec
mov
stc
das
es
jae
leave
loope
das
lahf
adc
fidivrs
xor
lret
addr16
mov
inc
mov
lods
leave
mov
pusha
mov
or
mov
leave
cmp
lahf
dec
inc
cmc
mov
pop
rcrl
stos
jne
fbstp
pop
in
insb
es
mull
out
mov
mov
rorl
roll
mov
mov
cmp
cmp
or
rorb
daa
inc
adc
pop
mov
mov
in
mov
mov
loope
cmp
aam
fadds
push
inc
test
lds
cmp
xor
mov
jb
or
inc
rorb
and
sbb
cmp
mov
mov
mov
pop
adc
mov
cli
andb
les
in
sub
dec
pop
clc
inc
bound
inc
mov
das
push
adc
mov
gs
xor
add
mov
out
dec
xor
adc
popf
push
inc
inc
xchg
daa
cmp
mov
add
mov
sbb
xchg
std
xor
clc
lcall
imul
stc
test
ljmp
lcall
jge
jno
sbb
daa
lods
mov
icebp
stc
jmp
movsl
fnsave
orw
mov
adcl
inc
test
cli
data16
pop
xlat
fwait
add
push
test
iret
sbb
fwait
adc
sub
inc
leave
mov
pop
xor
pusha
movsl
mov
sti
inc
mov
mov
mov
mov
lcall
bsf
stc
mov
int3
add
aad
xchg
in
imul
xor
shlb
xchg
inc
fs
inc
jno
xor
and
aad
bound
jle
xor
sbb
push
js
push
mov
lret
or
inc
mov
fdivl
mov
mov
and
push
jns
shlb
add
cltd
cmpsb
pop
jae
cmpsb
rorb
arpl
lea
scas
lcall
pop
sbb
mov
xchg
sbb
outsl
fsubrl
sub
fbstp
pop
or
sbbl
pop
push
out
jns
shll
fdivrl
aas
mov
xchg
add
xor
xchg
lods
cmp
adc
and
jp
sahf
test
inc
mov
daa
dec
leave
cmc
sbb
hlt
icebp
sub
cli
popf
movsb
repz
insl
ss
adc
sbb
inc
xor
mov
adc
pop
shlb
dec
imul
ret
or
imul
sub
ret
push
int
cs
insb
push
mov
repnz
inc
sbb
sbb
enter
out
xchg
loopne
or
aam
jg
cmc
test
setle
inc
jmp
loopne
mov
lea
mov
mov
cld
push
in
cmpsb
cwtl
test
sub
or
and
and
add
push
jge
arpl
out
push
mov
xor
fdivp
fcoms
hlt
cwtl
fdivl
out
xchg
mov
outsl
jge
mov
or
fsubs
aad
test
dec
add
cld
test
movsl
mov
mov
fs
push
cmp
mov
mov
lret
aad
lods
mov
sti
ficomps
lcall
shlb
add
loope
ret
sbb
dec
outsb
movsl
sbb
fcmovnb
jge
ret
pop
pop
and
daa
mov
inc
jg
rorb
cmp
aaa
and
int3
cmp
pop
mov
mov
dec
sub
jl,pn
lcall
popa
iret
jb
or
fildll
mov
xor
addr16
incl
sarb
or
cmpb
in
pop
int3
xchg
and
or
cmp
mov
loope
push
sbb
mov
pop
inc
sbbl
lret
mov
sub
mov
xchg
mov
xor
pop
xchg
imul
xor
cs
push
mov
or
pop
lret
add
sub
popa
inc
cmpsl
cmp
fldenv
and
pusha
dec
aas
pop
cmp
aad
ret
push
js
cwtl
les
push
stos
stc
loopne
repz
inc
dec
push
sub
xchg
sbb
data16
int
push
jne
mulb
aam
lahf
int
mov
xchg
ja
jne
stc
push
jb
mov
lods
aaa
jle
adc
pop
xor
lods
mov
ss
out
fxch
push
test
pushf
insb
cmp
es
les
adc
jno
ljmp
roll
add
cli
addr16
test
push
pushf
mov
mov
sub
in
push
imul
sub
out
xlat
mov
aaa
icebp
push
jge
test
mov
fidivrs
pop
push
lea
test
rolb
cli
das
idivb
cli
lods
sbb
sarb
xor
pop
push
mov
iret
cmp
sub
jmp
xor
or
cmp
mov
enter
insb
and
icebp
xor
jmp
aaa
out
into
mov
imul
or
daa
push
mov
xchg
sub
arpl
mov
idivb
pop
bts
ret
xchg
and
cmp
and
call
inc
lods
sahf
mov
andl
pusha
add
out
add
inc
jne
mov
fcoms
mov
ficoml
shlb
lcall
mov
shr
lcall
hlt
out
push
mov
js
adc
mov
sahf
or
adc
dec
je
movsl
mov
mov
stc
xor
mov
jmp
out
add
cmp
pop
enter
test
ss
dec
int3
add
push
xchg
cli
mov
lock
push
sub
cli
push
dec
jo
imul
rorl
cmp
xor
scas
adc
int3
dec
js
sub
sub
shll
mov
sbb
flds
test
fsubr
iret
xchg
fnsetpm(287
fs
jo
cld
xchg
addr16
xchg
push
sahf
mov
cmp
pop
aad
cmp
call
xor
sti
data16
subb
jmp
dec
sub
in
sub
cmp
js
and
orb
imul
and
lcall
les
push
pop
jmp
mov
sbb
xor
pop
mov
imul
cs
mov
sarl
aad
or
xor
sub
pop
cld
push
mov
arpl
adc
imul
shll
or
int
call
fidivrs
lock
scas
lods
cmpsb
mov
jl
xchg
shrb
push
pop
mov
shll
loope
xor
jecxz
xchg
cli
cmp
mov
emms
mov
cmp
pusha
cmp
je
imul
dec
pop
lock
ss
fiaddl
insl
inc
cld
insl
sbb
or
mov
icebp
push
adc
ret
push
rolb
pop
or
mov
adc
fisttpl
out
add
mov
in
jecxz
cmpsb
mov
pop
dec
pop
fisubl
mov
push
rorb
jno
cmp
insb
xchg
sub
in
xchg
sub
xchg
mov
push
in
xchg
das
xor
push
inc
pushf
or
cltd
pushf
sbb
cld
int3
mov
xchg
notb
inc
mov
cs
pop
jp
mov
pop
dec
dec
jbe
lret
xchg
inc
stos
lret
jp
jge
out
cmp
and
loopne
in
xchg
mov
push
sbbl
pushf
gs
mov
cmp
lds
in
rcll
test
dec
jg
out
pushf
push
mov
rol
arpl
addr16
add
out
mov
push
sbb
mov
test
mov
xchg
xchg
or
test
ficomps
push
adc
dec
xchg
int3
adc
cmp
add
jae
test
and
lret
sub
and
ja
enter
orb
pop
sbb
push
stc
jae
addl
xchg
xor
adc
bound
mov
push
stos
adc
xchg
fnsave
ss
shlb
jae
loope
cmp
adc
ds
pop
leave
insb
dec
xchg
pop
leave
xchg
sbb
pop
stos
cmpsb
or
sarl
ds
or
mov
mov
and
pop
adc
mov
jmp
outsb
push
mov
jo
push
mov
and
orl
cmp
je
lea
je
xor
enter
and
ret
mov
mov
push
pop
lret
es
sbb
call
cs
xchg
gs
imul
test
xor
push
in
sub
xchg
mov
fmul
mov
mov
or
enter
and
push
sti
mov
sahf
popf
adc
jge
stos
mov
sub
fildl
adc
outsb
adc
push
pop
mov
sub
and
lock
jmp
mov
push
fisubs
jge
dec
negb
fdivrs
popa
or
push
pop
cli
sub
lahf
idivb
xchg
xlat
mov
fisubl
bound
test
mov
cmp
out
stos
clc
icebp
add
adc
ss
inc
push
mov
push
lret
jge
call
lret
sti
icebp
icebp
xchg
shrl
gs
sub
imul
imul
jae
movsb
fcomps
test
cld
rorb
sahf
cli
adc
std
sub
popa
jle
icebp
jmp
lret
repz
mov
inc
push
movsb
pop
or
imul
int
popf
pop
xchg
push
lds
mov
inc
lods
lret
jp
scas
or
out
into
dec
cmp
stos
lcall
loope
data16
out
jbe
std
notl
adc
sub
pop
out
cli
jp
rorb
pusha
mov
pop
push
and
adc
sbb
pop
rcrl
in
ja
fsubrp
sbb
cli
adc
and
incl
xchg
or
cs
imul
inc
push
xor
jge
sub
cmp
outsl
shl
cwtl
enter
loope
add
push
adc
pop
inc
cmp
mov
sub
cmp
sub
and
push
cld
enter
mov
push
loop
mov
jmp
mov
lods
inc
xchg
add
xchg
aaa
out
sbb
fdivs
ja
jecxz
shrl
lods
jnp
or
jbe
xor
xchg
fcomps
add
push
ds
pushw
into
push
popf
sbb
adc
dec
ret
xchg
jno
sub
push
sbb
xchg
fisubrl
jge
inc
and
sbb
pop
push
sbb
mov
inc
xchg
cmp
pop
xor
not
add
dec
and
add
xor
ucomiss
mov
sbb
je
aam
stc
pop
mov
jnp
lds
sub
shll
aaa
sub
pop
lcall
je
mov
inc
out
jg
es
out
jp
test
mov
les
sub
or
sbb
mov
sahf
cmp
fwait
sub
iret
icebp
clc
jge
clc
cmpsl
icebp
out
scas
test
dec
cmp
adc
test
mov
orb
lock
das
add
jg
dec
xor
adcb
push
dec
aad
xchg
popa
shrb
mov
movsb
loope
aad
or
cmpsl
ss
inc
jmp
into
xchg
and
sarb
cmc
push
ret
jecxz
imul
sbb
loopne
daa
cld
enter
inc
cmp
icebp
shll
in
inc
movsb
inc
rclb
lret
aas
sbb
cmp
xor
decl
cmp
add
adc
mov
mov
mov
sub
dec
push
and
dec
ja
adc
adc
jle
sar
dec
or
je
cli
xchg
clc
cli
dec
test
popf
dec
repnz
pop
mov
push
xor
adc
cmp
ss
rcll
faddl
mov
shrb
ds
rorb
fisubl
push
push
mov
add
cwtl
sub
pop
aaa
test
jge
and
nop
pop
push
or
ror
ss
jbe
insb
mov
mov
pop
xor
rorb
mov
adc
rolb
jle
sbb
leave
jno
dec
xchg
stos
dec
cmp
mov
test
dec
pop
div
movsb
test
lret
xchg
ret
jno
outsb
insl
and
fmull
jns
xchg
fstpl
aas
sarl
mov
popa
dec
loopne
fstpt
add
loop
outsb
cld
fsubrs
pop
pop
mov
mov
insb
ja
sub
xchg
ja
cmp
inc
std
mov
xchg
out
xor
std
inc
mov
mov
cmpsb
es
clc
sti
daa
add
aam
jp
lds
push
jnp
mov
out
mov
fsubrl
mov
push
mov
cmpsb
hlt
xor
rcrb
scas
mov
dec
nop
leave
andl
fxch
fwait
lea
push
adc
test
cltd
pop
fldl
nop
leave
inc
jmp
mov
imul
add
cld
test
mov
aaa
xor
mov
insl
jmp
sub
cli
out
or
jge
inc
hlt
mov
xchg
adc
xchg
sbb
sbb
jge
mov
loope
jmp
lock
xchg
lret
in
push
pop
xchg
adc
sbb
aad
jmp
fistl
out
int
push
jl
test
add
push
sub
enter
icebp
ja
inc
ljmp
ret
verw
mov
sbb
jo
add
test
or
popl
sbb
mov
data16
aas
adc
jmp
mov
addl
mov
jp
xchg
ret
movsl
lods
sbb
sarl
stos
adc
push
cmp
xor
js
fisubs
out
mulps
lds
lods
and
dec
repz
jle
xor
arpl
cs
adc
fsts
adc
inc
dec
xchg
ret
xlat
sbb
imul
cmp
rolb
in
add
notl
and
dec
sub
rorl
test
jb
xchg
sub
adc
fstps
jle
jg
push
je
xchg
decl
pop
lret
ljmp
inc
ss
mov
xor
pop
add
inc
lahf
movw
repz
lds
je
sbb
mov
fidivrl
int
pop
adc
cmc
cmp
cmp
push
mov
push
cld
and
mov
mov
popa
pop
adcl
leave
rcll
jo
shll
dec
xlat
scas
dec
cmpsb
xchg
jle
mov
aaa
inc
mov
dec
dec
and
xchg
fnstcw
dec
ljmp
add
pop
mov
pop
ret
mov
xor
out
sbb
push
outsl
in
or
jl
jb
push
mov
and
jmp
ret
cmpsb
mov
xor
jl
mov
fcomip
xor
ds
inc
ret
sub
fucomi
sub
inc
push
dec
aad
sub
jae
or
and
mov
lea
xchg
pop
out
xchg
stos
jmp
mov
xchg
push
test
or
cli
fcompl
iret
in
lock
repnz
clc
out
and
popf
pop
jae
fnstenv
js
jle
xor
imul
pop
inc
adc
jno
mov
stos
cmp
in
shll
jecxz
jns
adc
hlt
imul
loopne
jmp
leave
pop
icebp
or
xor
pop
pop
imul
jmp
jp
int
push
cmpsl
push
adc
sbb
mov
xor
cli
std
pop
test
int
loopne
push
adc
push
pop
aam
outsl
ja
push
pop
icebp
loope
into
out
lods
add
test
outsl
inc
mov
or
cwtl
jmp
stc
je
outsb
cmp
push
mov
psubw
fnstsw
add
dec
mov
in
test
mov
pop
jle
test
mov
ds
shr
mov
int3
mov
jne
fidivl
loopne
cld
inc
addl
dec
fsubrl
push
call
jb
lea
stos
or
in
lcall
cmc
push
pop
jecxz
xchg
jmp
inc
sti
pop
and
aaa
fucomip
popf
je
cmpsl
ja
notl
xchg
rep
jg
pop
loope
int
lods
stos
xor
push
push
and
in
sti
push
ret
sahf
mov
inc
cmp
mov
scas
inc
int
cmpsb
push
stc
pop
movsb
je
in
ja
mov
pop
in
lcall
ror
xchg
orl
loop
gs
add
into
mov
inc
mov
sub
xchg
xor
sahf
dec
data16
pusha
test
lods
adc
repnz
inc
fmull
lcall
les
add
sbb
pop
idiv
xor
pop
lods
ss
and
adc
shrl
dec
mov
cmp
in
outsl
sbb
stc
neg
jle
cmpsb
fdiv
popa
pop
xor
rcr
jmp
push
aad
lret
leave
cmp
leave
fmull
push
push
xchg
sbb
jmp
mov
xchg
popl
sahf
adc
es
xchg
shll
lods
sbb
pop
cmp
bound
icebp
aaa
fsubs
jae
rorb
stc
lcall
mov
imul
fsubrs
sub
icebp
push
test
xor
sub
dec
lahf
movsl
jno
inc
jl
adc
push
cmp
inc
jge
mov
shrl
int3
pop
ret
and
ret
dec
pop
inc
sbb
and
cld
sbbb
popa
popf
pop
sti
or
in
and
push
leave
aas
xchg
jmp
mov
sahf
inc
sarl
pop
mov
repz
and
out
ss
pop
dec
mov
lock
nop
dec
cmp
fsubl
xlat
mov
je
in
sub
adc
adc
aas
add
add
fpatan
cmp
or
push
test
jae
loopne
mov
cmp
jo
cmp
cmc
push
test
pop
jae
xor
xchg
dec
jbe
fsubs
int3
dec
arpl
test
adc
jmp
push
or
xchg
ds
adcl
pop
mulb
or
in
repnz
call
imul
ss
idivb
in
ljmp
rorb
ds
enter
mov
imul
dec
test
loop
popa
mov
mov
mov
mov
ds
mov
adc
int
vhaddps
stc
mov
fnsave
pop
adc
rorl
or
adc
pop
call
les
xchg
mov
test
mov
js
dec
mov
mov
pop
ljmp
push
ret
push
mov
push
cld
push
adcb
mov
rcll
mov
inc
pushf
pop
and
adc
push
pop
rorl
dec
lds
daa
add
inc
push
into
jb
sti
outsb
lret
xor
repz
xchg
cmp
sarl
dec
mov
and
or
mov
in
testl
pop
test
sub
push
push
leave
lcall
arpl
je
jbe
mov
push
dec
cli
mov
sbb
adc
jle
andl
ret
outsl
lods
loop
int3
scas
sub
lock
xchg
test
pcmpeqb
mov
lcall
dec
mov
mov
fadds
mov
bound
fsubrl
arpl
and
in
push
in
icebp
mov
or
or
jle
adc
andl
loope
and
lret
cwtl
dec
sahf
arpl
scas
sarb
divb
daa
add
mov
push
fdiv
je,pt
call
jle
mov
dec
adc
and
shll
push
pop
xchg
outsl
fiaddl
in
cmpsb
pop
ss
lret
aas
or
inc
shl
add
in
jb
hlt
xchg
out
in
jne
stos
vpmacswd
sahf
mov
lcall
int3
dec
dec
push
into
loope
add
cmp
adc
mov
push
repz
sub
jmp
and
scas
inc
ja
das
push
dec
decb
outsb
or
sahf
stos
lock
adc
ror
vpunpcklqdq
add
ret
arpl
out
adc
jmp
push
repz
shrl
mov
sahf
in
jne
std
mov
mov
bound
push
jp
ret
cld
xchg
fisubl
je
mov
adc
dec
test
inc
sbb
lahf
pop
cli
add
mov
adc
es
cltd
dec
frstor
stc
lods
cmp
push
add
xlat
pop
pusha
arpl
cld
inc
inc
xlat
inc
pop
ljmp
aam
lea
xor
lea
arpl
daa
or
je
int3
imull
pop
push
movsl
push
les
mov
bound
outsb
dec
data16
or
dec
jecxz
imul
adc
xlat
jecxz
mov
roll
test
data16
rclb
xor
mov
stc
xchg
add
sahf
adc
xchg
inc
jge
test
push
xor
mov
dec
push
mov
jmp
sbb
mov
shlb
test
inc
stos
mov
sbb
cmpl
jo
out
addr16
int
xlat
pop
xor
adc
add
and
shlb
adc
add
adc
loop
xchg
pop
push
dec
cmp
fs
je
test
insl
mov
adc
mov
call
nop
test
popa
insb
ds
pop
or
test
testl
and
repnz
sarl
xchg
and
mov
das
imul
and
lock
add
ret
xchg
sbb
push
shll
sar
jl
ljmp
add
or
mov
jmp
cmp
sub
push
jp
and
inc
jnp
addr16
pop
mov
mov
mov
mov
xchg
jmp
push
mov
addr16
outsl
add
jle
lea
mov
out
imul
jno
cmp
mov
inc
test
mov
outsb
push
xlat
insb
and
neg
leave
aaa
shl
fstpl
xchg
enter
rorb
pop
test
std
lcall
inc
adc
mov
jecxz
ficompl
add
jo
lret
lcall
rcr
pop
or
and
ret
stos
push
jnp
inc
add
mov
ds
fwait
movsl
leave
loope
outsl
add
mov
cmc
sub
sbb
subl
or
xor
in
cmpsl
into
inc
sub
push
stos
in
xchg
mov
imul
gs
adc
push
xor
imul
jecxz
mov
mov
test
dec
test
shll
ficoml
mov
jae
xchg
pop
in
insl
pop
dec
cli
xchg
dec
push
mov
out
in
sbb
adc
lcall
pop
add
jnp
inc
inc
pop
xchg
nop
inc
leave
push
imul
loop
xchg
cmp
inc
test
dec
add
es
jg
cmp
stos
jae
mov
push
mov
out
stos
pop
cmp
cmp
push
je
xchg
js
dec
pop
or
or
cmc
daa
sbb
lods
pop
push
cli
cmpsb
test
or
gs
and
pushf
hlt
jne
scas
pop
or
shrl
jg
test
dec
cmp
int
ljmp
and
push
leave
and
mov
mov
jne
ja
out
or
push
adc
pusha
mov
repnz
inc
in
push
scas
adc
pop
scas
cmp
push
inc
mov
adc
out
add
or
mov
inc
jne
out
ja
pop
and
adc
sub
adc
mov
jns
aas
jl
xchg
xlat
xor
or
divb
subb
mov
cmpsb
or
mov
add
pop
cltd
sub
in
shlb
and
push
enter
cmpl
push
sbb
popf
mov
loopne
xor
push
popa
data16
aad
dec
scas
fwait
inc
and
or
jns
sub
cmp
xabort
cmpsb
sahf
leave
push
mov
xchg
bound
outsb
sub
mov
jle
gs
ret
push
pushf
sahf
rcrl
lea
mov
cmp
jo
xchg
jno
jno
cmp
cmc
popa
add
dec
fs
or
hlt
in
mov
ret
call
test
and
sub
or
and
mov
fidivs
jns
lcall
inc
mov
dec
sub
rcll
xchg
mov
ret
in
int
es
mov
pop
fnstenv
jl
or
enter
sar
mov
xchg
xor
insl
sar
xor
jge
mov
mov
push
push
or
ret
fldl
cld
lods
or
push
sub
lea
dec
mov
lret
xchg
gs
push
mov
and
or
je
cmp
adc
pop
stos
iret
icebp
adc
push
outsb
add
les
jmp
icebp
imul
cli
andb
add
mov
pop
mov
mov
jmp
pop
jae
pop
push
clc
cmp
push
fnsave
stc
lcall
lcall
inc
and
mov
stos
rcl
lea
fistpl
jmp
xor
adc
outsl
pusha
xor
out
sbb
mov
mov
add
fcomp
and
call
fisubs
adc
xor
cmpsb
out
inc
or
aas
mov
js
stc
popf
test
and
mov
movsl
push
jp
fldln2
or
test
in
test
jne
insb
imul
or
cmpsb
outsb
jns
frstor
cld
jp
mov
adc
add
enter
fisubrs
mov
flds
sub
push
sahf
ret
push
add
dec
lahf
jl,pt
test
cmp
dec
es
sbbl
or
add
popf
cmpsb
pop
mov
sarl
lret
push
shr
adc
in
mov
daa
ss
loope
cmp
cmc
mov
xchg
sub
dec
sbb
mov
gs
jae
dec
push
outsb
mov
xor
ljmp
dec
mov
clc
out
out
fcom
jae
aam
call
scas
pop
in
ficompl
shlb
jle
ficoml
inc
cltd
mov
icebp
insb
mov
cmpb
xchg
test
or
cmp
mov
negl
cld
scas
pop
adc
into
push
out
mov
inc
sbb
mov
lret
lock
and
and
adc
rcrb
push
fwait
repnz
adc
test
subb
dec
cld
mov
test
sub
int
imul
call
loop
push
sub
jecxz
imul
hlt
test
mov
rorb
add
adc
and
enter
sub
xchg
imul
xchg
hlt
jp
dec
movsl
push
sub
xor
ja
loopne
adc
outsb
std
mov
dec
adc
dec
mov
pcmpeqd
daa
pop
xchg
dec
jbe
lahf
pushf
ss
out
cmp
cmpsb
xchg
mov
sub
clc
jno
dec
ret
outsl
pop
push
arpl
cmp
test
sbb
test
mov
es
jb
fwait
mov
iret
cmc
jmp
jl
inc
test
lds
jno
in
ss
loopne
enter
fisttpl
inc
mov
