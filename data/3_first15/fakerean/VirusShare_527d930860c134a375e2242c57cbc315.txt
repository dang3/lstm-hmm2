and
call
mov
add
test
js
cmp
jne
mov
mov
mov
mov
cmp
jge
cmp
je
mov
mov
test
js
lea
lea
call
test
je
lea
call
test
je
test
js
mov
mov
lea
push
mov
call
lea
push
call
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
movl
lea
call
test
jne
lea
call
test
jne
mov
mov
mov
mov
cmp
jne
mov
cmp
jg
lea
call
mov
lea
push
lea
mov
mov
movl
call
push
lea
lea
call
mov
add
test
js
mov
test
jne
mov
test
jne
xor
jmp
mov
mov
push
lea
call
push
lea
call
cmpl
jne
xor
jmp
movl
jmp
sub
cmp
ja
movzbl
jmp
mov
jmp
lea
call
mov
mov
lea
push
lea
mov
movl
call
push
lea
lea
call
mov
add
test
mov
jne
mov
test
jne
test
jns
jmp
mov
jmp
nop
fcompl
adc
pop
adc
pop
adc
pop
inc
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
add
pop
inc
adc
jb
adc
pop
inc
adc
pop
inc
adc
add
add
add
add
add
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
push
lea
push
push
movl
movl
call
add
test
js
mov
mov
cmp
je
mov
xor
mov
pop
pop
pop
add
ret
push
mov
call
add
test
je
movl
movl
mov
test
mov
je
mov
push
mov
call
test
js
mov
cmp
jne
lea
mov
mov
lea
push
push
mov
movl
call
add
test
js
mov
mov
lea
push
add
movl
mov
call
test
je
xor
test
js
mov
cmpl
je
mov
pop
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
xor
mov
push
mov
cmpl
je
mov
cmp
je
cmp
je
mov
lea
push
push
mov
mov
call
add
test
js
mov
mov
cmp
je
cmp
je
mov
mov
xor
pop
pop
pop
add
ret
mov
push
call
add
cmp
je
movl
cmp
mov
je
push
call
add
cmp
je
movl
movl
mov
cmp
mov
je
add
call
cmp
je
mov
mov
mov
cmp
mov
jne
mov
xor
test
js
mov
mov
mov
mov
sub
je
sub
jne
movl
mov
lea
push
push
push
mov
call
add
test
js
mov
add
call
cmp
je
mov
mov
cmp
mov
mov
jne
mov
mov
xor
test
jns
jmp
cmp
je
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
mov
mov
pop
mov
pop
mov
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
xor
mov
mov
push
mov
push
mov
mov
mov
mov
mov
mov
cmp
jne
push
call
add
test
je
mov
mov
mov
sub
sar
push
mov
mov
mov
movl
movl
call
xor
add
cmp
je
mov
mov
lea
mov
lea
movl
push
push
movl
mov
mov
call
xor
cmp
mov
je
add
mov
test
mov
mov
jne
test
je
mov
test
jne
test
jne
test
je
mov
mov
cmpl
je
mov
xor
pop
pop
pop
pop
add
ret
sub
cmp
ja
movzbl
jmp
mov
cmp
je
mov
lea
mov
mov
push
push
push
mov
call
add
test
js
mov
jmp
mov
cmp
je
mov
mov
mov
push
push
push
call
mov
add
test
mov
jne
pop
mov
pop
pop
pop
add
ret
lea
push
push
inc
adc
push
inc
adc
push
inc
adc
ja
adc
pop
adc
add
add
add
add
add
add
in
and
sub
mov
xor
mov
push
mov
push
mov
push
mov
push
pushl
push
push
call
test
mov
jne
mov
test
js
mov
mov
call
mov
call
mov
mov
call
push
mov
call
cmpl
mov
je
mov
lea
mov
mov
lea
push
pushl
xor
push
mov
mov
mov
movl
movl
mov
call
cmpl
jne
testb
jne
testb
jne
mov
mov
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
push
push
movl
call
movzbl
push
push
mov
call
add
mov
jmp
push
mov
mov
test
je
mov
push
push
pushl
push
call
sub
je
dec
je
dec
je
pop
ret
orl
mov
mov
pop
ret
push
mov
push
mov
andl
test
je
mov
lea
push
push
push
call
mov
mov
mov
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
push
push
mov
push
push
push
call
add
mov
push
push
call
push
call
mov
add
cmp
je
push
push
call
add
pop
mov
pop
and
pop
mov
pop
ret
push
mov
push
push
push
mov
mov
push
call
mov
push
call
add
cmp
jne
mov
push
call
add
xor
pop
pop
pop
pop
ret
cmp
je
cmp
je
mov
movl
mov
push
mov
mov
call
add
test
je
mov
mov
push
call
movl
movl
lea
add
mov
push
mov
movl
movl
movl
call
test
mov
je
mov
mov
push
call
mov
mov
push
call
mov
add
push
mov
call
mov
push
call
add
lea
call
mov
push
call
add
xor
pop
pop
pop
pop
ret
mov
push
call
add
pop
pop
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
push
lea
mov
push
push
call
cmpl
je
mov
mov
push
mov
call
add
cmpb
jne
mov
push
call
add
cmpl
je
test
jne
cmpb
je
movl
mov
pop
pop
pop
ret
mov
push
push
call
test
js
test
je
jmp
pop
pop
xor
pop
ret
mov
mov
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
xor
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
test
je
cmp
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
jne
mov
movl
movl
mov
jmp
sub
mov
xor
mov
push
mov
mov
test
push
mov
jne
add
orl
push
mov
push
xor
cmp
lea
mov
mov
mov
movl
movl
mov
mov
je
push
push
push
call
add
test
jne
cmp
mov
je
testb
je
mov
push
push
lea
call
test
je
movl
lea
mov
call
test
je
lea
call
mov
mov
mov
mov
push
call
push
lea
movl
call
xor
cmp
je
movb
mov
mov
push
push
mov
push
lea
push
push
push
push
push
xor
lea
call
cmp
pop
mov
pop
jne
mov
test
jne
test
jne
mov
mov
pop
pop
xor
call
add
ret
movb
jmp
push
mov
mov
push
call
test
je
mov
andl
mov
lea
mov
test
jne
mov
mov
xor
pop
ret
mov
jmp
push
push
push
pushl
lea
pushl
call
test
jne
or
pop
pop
pop
ret
mov
xor
cmp
je
mov
mov
mov
pushl
mov
mov
call
test
jne
inc
lea
cmpl
jne
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
push
mov
test
je
mov
and
test
jne
test
jbe
xor
lea
mov
test
mov
je
cmp
je
add
add
cmp
jb
test
je
mov
test
jne
xor
pop
pop
pop
pop
ret
movzwl
test
jbe
xor
lea
lea
cmp
je
add
cmp
jae
jmp
lea
pop
pop
pop
pop
ret
mov
jmp
xor
jmp
test
jl
lea
pop
pop
pop
pop
ret
test
jbe
movl
lea
cmpl
je
mov
push
mov
call
test
jne
mov
add
add
cmp
mov
jb
pop
pop
pop
xor
pop
ret
push
mov
push
push
mov
push
pushl
mov
push
push
mov
call
mov
mov
mov
mov
testl
jne
cmpl
jne
mov
mov
lea
mov
call
mov
andl
mov
mov
mov
mov
push
call
test
pop
je
mov
mov
mov
andl
mov
mov
mov
movl
mov
movl
push
mov
call
pop
pop
leave
ret
mov
decl
mov
je
ret
xor
inc
mov
mov
push
call
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
mov
mov
mov
mov
mov
cmpl
mov
je
mov
mov
xor
mov
mov
mov
lea
push
push
mov
push
lea
call
mov
sub
mov
sub
mov
mov
mov
mov
mov
mov
cmp
mov
mov
lea
jne
mov
imul
add
sar
mov
shr
add
mov
imul
mov
sub
add
cmp
mov
jne
mov
mov
imul
add
sar
mov
shr
add
imul
sub
test
mov
jne
xor
cltd
idiv
imul
test
mov
jne
xor
cltd
idiv
pop
pop
imul
mov
mov
mov
pop
ret
push
call
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
int3
int3
push
mov
and
mov
sub
cmpl
push
mov
push
push
jge
mov
xor
cmp
lea
je
lea
push
push
push
add
push
call
mov
and
jne
cmp
mov
jne
mov
push
mov
call
mov
test
js
mov
mov
lea
push
push
mov
call
test
mov
js
cmp
jne
xor
mov
mov
call
cmp
jne
mov
lea
push
mov
call
mov
push
mov
push
push
push
call
add
test
js
mov
mov
push
mov
call
mov
add
lea
call
lea
call
mov
mov
mov
mov
cmp
je
mov
cmp
je
cmp
je
mov
mov
cmpb
jne
xor
lea
push
call
test
je
movl
push
mov
mov
call
mov
cmpl
jge
cmpl
jne
mov
push
push
push
call
mov
test
jne
mov
mov
push
lea
movl
call
push
push
lea
push
push
call
add
test
mov
js
mov
test
jne
mov
lea
mov
call
mov
mov
mov
lea
push
push
call
test
mov
js
lea
push
mov
call
add
push
mov
call
mov
mov
mov
push
push
push
push
push
push
push
call
add
test
mov
js
mov
mov
mov
mov
mov
push
call
lea
call
xor
pop
pop
pop
mov
pop
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
test
je
test
je
mov
push
push
lea
push
push
mov
mov
xor
push
mov
call
mov
lea
lea
push
mov
mov
mov
push
mov
movl
movl
mov
call
mov
cmp
jne
cmp
jne
mov
mov
mov
push
call
mov
test
jne
test
jne
xor
pop
pop
mov
pop
pop
xor
call
add
ret
push
mov
sub
mov
xor
mov
mov
andl
push
push
lea
lea
push
lea
mov
movl
call
call
push
push
push
call
mov
test
pop
pop
je
testl
jne
mov
xor
xor
call
leave
ret
push
call
pop
jmp
int3
int3
int3
int3
int3
mov
test
push
mov
push
je
mov
mov
cmp
je
mov
add
test
jne
mov
movl
cmpl
je
xor
mov
pop
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
mov
mov
push
call
mov
pop
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
pop
xor
pop
ret
decl
cmpl
jne
lea
movl
call
lea
call
lea
call
mov
call
push
call
pop
ret
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
lea
push
lea
push
push
mov
xor
lea
push
push
push
xor
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
call
add
cmp
je
mov
cmpl
je
lea
push
mov
call
mov
test
js
cmp
mov
mov
mov
mov
mov
mov
mov
je
mov
lea
push
push
push
mov
call
mov
push
push
lea
push
push
lea
call
mov
mov
add
cmp
jne
lea
call
lea
call
mov
cmp
jne
cmpl
je
mov
cmp
jne
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
mov
push
call
jmp
mov
add
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
mov
cmpl
lea
push
movl
je
mov
test
mov
mov
je
lea
push
call
add
test
je
lea
call
mov
test
mov
je
lea
push
call
add
test
jne
push
call
add
lea
call
pop
pop
mov
pop
pop
jmp
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
mov
test
push
je
push
call
add
test
je
xor
mov
mov
mov
mov
mov
movb
movb
movb
movl
movl
movl
movl
push
movl
mov
mov
push
push
call
mov
test
js
push
mov
lea
test
je
lea
mov
mov
push
push
push
mov
call
test
je
lea
mov
mov
push
push
push
mov
call
pop
pop
pop
mov
pop
ret
xor
jmp
xor
jmp
push
mov
push
push
push
push
mov
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
jne
mov
push
mov
lea
mov
call
mov
cmp
jne
lea
call
lea
call
xor
pop
pop
leave
ret
mov
call
cmp
je
mov
call
jmp
testb
je
mov
mov
mov
cmp
je
mov
call
cmp
je
push
mov
lea
call
lea
call
cmp
je
mov
lea
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
push
cmpl
push
push
push
push
je
mov
cmpl
jle
cmpl
jle
mov
mov
mov
add
cmp
jge
mov
mov
mov
add
cmp
jge
mov
add
cmp
jge
mov
add
cmp
jge
mov
cmp
jl
mov
cmp
jl
mov
add
cmp
jg
mov
add
cmp
jg
mov
xor
push
mov
call
mov
mov
mov
mov
mov
pop
pop
pop
pop
pop
ret
mov
push
mov
call
pop
movl
movl
movl
movl
mov
pop
pop
pop
pop
ret
int3
int3
int3
sub
push
push
mov
push
push
call
add
test
je
mov
test
mov
movl
mov
je
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
push
call
mov
mov
mov
add
mov
call
mov
addl
mov
sub
mov
sub
mov
add
add
add
cmp
jg
mov
mov
add
cmp
jg
mov
mov
mov
neg
neg
test
je
xor
add
test
je
xor
flds
add
mov
add
mov
sub
fstpl
mov
flds
mov
add
fstpl
push
mov
call
fildl
fildl
mov
add
fchs
fxch
fchs
fstpl
fstpl
push
call
mov
add
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
push
mov
push
push
xor
mov
mov
mov
mov
push
mov
push
lea
mov
mov
mov
call
push
lea
call
mov
mov
sub
mov
sar
push
lea
push
mov
lea
push
mov
lea
push
lea
mov
call
mov
mov
add
test
jne
test
jne
test
js
cmp
mov
jne
mov
cmp
je
add
cmp
jb
jmp
push
call
add
test
je
movl
movl
mov
mov
test
mov
jne
test
je
mov
push
push
push
call
add
test
js
mov
mov
mov
lea
movl
call
lea
call
mov
test
jne
xor
pop
pop
pop
pop
add
ret
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
mov
sub
test
push
jl
mov
mov
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
push
lea
mov
movl
call
xor
pop
add
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
lea
push
mov
mov
mov
xor
lea
mov
movl
movl
mov
mov
push
push
mov
call
mov
cmp
lea
mov
jb
mov
push
mov
add
sub
cmp
mov
mov
pop
jb
lea
mov
push
lea
mov
mov
call
mov
test
jne
test
jne
pop
xor
pop
mov
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
mov
add
pop
pop
xor
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
je
push
mov
mov
cmp
movb
je
cmp
je
mov
mov
mov
push
push
push
movb
mov
mov
call
pop
pop
ret
push
mov
push
mov
cmpl
je
push
push
mov
push
push
pushl
call
mov
test
jne
pop
pop
pop
pop
ret
mov
test
je
lea
push
push
mov
call
test
je
pushl
mov
mov
call
test
je
mov
mov
call
test
jne
mov
mov
call
test
jne
mov
push
push
call
jmp
xor
jmp
xor
jmp
mov
mov
mov
add
mov
cmp
jae
imul
lea
mov
test
mov
mov
je
mov
push
call
xor
ret
mov
and
neg
sbb
inc
ret
push
mov
test
push
je
mov
mov
test
je
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
push
mov
call
test
mov
je
mov
mov
and
xor
or
mov
mov
jne
andl
pushl
mov
pushl
call
mov
pop
pop
ret
or
jmp
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
mov
mov
lea
add
xor
mov
mov
lea
lea
mov
mov
mov
mov
push
lea
push
movl
mov
call
mov
test
jne
test
jne
xor
add
ret
push
mov
cmpl
ja
push
mov
add
push
mov
call
cmpl
jne
pop
xor
pop
ret
push
mov
mov
lea
push
push
call
test
js
cmpl
jne
push
mov
call
jmp
pop
jmp
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
push
call
mov
add
test
je
addl
cmpl
je
pop
pop
ret
mov
movl
call
push
call
add
pop
pop
ret
push
mov
push
mov
mov
mov
push
call
test
je
push
mov
xor
cmp
setne
cmpl
lea
mov
jne
cmpb
jne
mov
mov
mov
mov
call
test
je
mov
push
pushl
pushl
pushl
push
call
pop
pop
pop
ret
orl
jmp
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
xor
cmp
mov
mov
mov
je
mov
movzbl
and
mov
mov
test
jbe
mov
lea
mov
add
cmp
je
cmp
je
cmp
je
cmp
je
mov
xor
add
cmp
jne
addl
subl
mov
jne
mov
mov
mov
andb
cmpl
mov
jne
and
mov
mov
add
cmp
jne
mov
mov
pop
pop
mov
pop
add
ret
cmpl
jne
cmpl
mov
jne
movb
add
cmp
jne
cmpb
jne
add
jmp
cmp
je
mov
call
add
jmp
orl
cmpb
je
mov
call
add
jmp
or
jmp
mov
or
mov
mov
pop
pop
pop
add
ret
mov
call
jmp
mov
test
jbe
mov
lea
mov
add
cmp
je
cmpb
jne
addl
cmp
je
mov
add
subl
jne
mov
mov
andb
jmp
or
mov
jmp
push
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
push
lea
sub
add
add
push
lea
lea
cmp
je
push
mov
mov
add
lea
nop
test
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
je
mov
mov
push
call
lea
push
push
movl
movl
movl
call
mov
test
mov
je
mov
mov
push
call
mov
mov
mov
mov
mov
add
add
add
cmp
jne
mov
pop
mov
addl
mov
pop
lea
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
test
je
mov
mov
push
call
mov
mov
xor
pop
ret
cmp
je
test
je
xor
mov
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
push
call
mov
mov
xor
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
lea
jmp
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
call
mov
mov
lea
lea
push
rep
call
mov
fldz
mov
add
fstl
lea
fstpl
push
push
lea
push
push
mov
call
mov
lea
push
push
call
mov
mov
mov
add
call
cmpl
mov
mov
jne
fldz
mov
fldl
fcom
fnstsw
fstp
test
jne
fldl
fchs
fldl
fcom
fnstsw
fstp
test
fldl
jne
fld
fadd
fcompl
fnstsw
test
jp
test
fstp
fstp
mov
faddl
fildl
jl
fmulp
sub
fstpl
call
fnstcw
add
movzwl
or
mov
fldcw
fistpll
mov
cmp
fldcw
jae
push
push
call
pop
pop
pop
mov
pop
ret
fldl
fldl
fxch
test
mov
fildl
jl
fld
push
fmulp
lea
fxch
lea
mov
fstpl
fld
fmulp
fxch
fstpl
fld
fmull
fstpl
fmulp
fstpl
call
test
je
fldl
pop
fstps
pop
fldl
pop
fstps
fldl
fstps
fldl
fstps
mov
pop
ret
fldl
fldl
fldl
fxch
jmp
mov
andl
mov
push
pushl
mov
call
pop
mov
mov
xor
pop
ret
push
mov
push
push
xor
cmp
je
xor
pop
leave
ret
cmpl
mov
push
mov
jne
cmp
jne
lea
orb
testb
jne
mov
push
mov
mov
push
call
mov
mov
mov
call
mov
mov
mov
push
mov
mov
call
push
pushl
mov
call
test
js
mov
cmp
je
xor
inc
pop
pop
jmp
cmpl
jne
jmp
xor
jmp
push
mov
sub
push
mov
push
push
xor
mov
call
mov
push
lea
call
and
lea
push
lea
mov
movl
mov
call
xor
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
xor
call
push
lea
call
lea
xor
call
and
and
lea
mov
push
mov
lea
movl
movl
call
mov
test
jne
pushl
lea
call
andl
andl
lea
push
mov
lea
movl
movl
call
test
jne
pushl
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
xor
call
lea
call
xor
pop
pop
pop
leave
ret
mov
mov
mov
cmp
sbb
neg
ret
int3
int3
int3
push
mov
and
sub
push
push
push
mov
push
lea
xor
mov
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
lea
mov
mov
lea
call
test
je
lea
call
cmp
je
mov
mov
mov
push
call
jmp
mov
cmp
je
call
mov
mov
cmp
je
call
mov
mov
cmp
je
call
mov
push
call
push
call
mov
push
call
pop
pop
pop
pop
mov
pop
ret
push
mov
and
push
decl
cmpl
push
je
pop
mov
pop
ret
mov
test
je
push
mov
call
jmp
push
mov
call
testb
je
push
call
pop
mov
pop
ret
int3
int3
int3
int3
int3
push
mov
test
push
je
mov
test
je
push
lea
mov
call
lea
mov
call
mov
lea
push
mov
mov
call
mov
test
jne
push
push
call
add
test
je
mov
movl
lea
xor
movl
call
mov
test
mov
je
mov
mov
push
call
cmpl
je
mov
mov
mov
mov
call
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
mov
mov
add
test
mov
jne
push
push
call
test
je
test
je
mov
mov
push
call
mov
mov
test
je
mov
mov
push
call
mov
test
mov
jne
mov
push
push
call
mov
test
je
addl
mov
test
mov
jne
mov
mov
mov
test
jne
mov
add
add
xor
lea
and
xor
call
xor
pop
pop
pop
pop
ret
mov
jmp
lea
movl
mov
mov
push
push
call
testb
jne
mov
mov
mov
push
mov
call
jmp
mov
push
mov
call
jmp
mov
push
mov
call
jmp
call
jmp
mov
mov
xor
push
mov
call
jmp
push
mov
mov
test
je
cmpl
je
push
mov
test
je
mov
push
mov
push
mov
call
test
js
mov
test
je
movzwl
mov
push
pushl
mov
call
mov
cmpl
jne
mov
mov
call
test
jne
mov
mov
call
andl
push
mov
lea
call
mov
mov
test
je
movzwl
mov
push
pushl
call
mov
mov
call
lea
call
jmp
xor
pop
pop
pop
ret
push
mov
test
je
push
push
push
mov
push
xor
lea
push
mov
mov
mov
push
push
call
cmp
jne
push
mov
call
lea
mov
mov
call
mov
lea
call
lea
mov
call
mov
lea
call
push
call
pop
pop
xor
pop
pop
ret
mov
test
push
push
mov
je
push
push
mov
call
push
mov
call
mov
push
push
call
pushl
mov
call
pop
pop
ret
push
call
pop
test
je
call
test
mov
je
mov
push
call
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
push
push
mov
mov
xor
cmp
mov
je
mov
mov
push
call
mov
mov
lea
mov
mov
lea
lea
push
mov
push
mov
mov
movl
movl
mov
call
cmp
jne
mov
lea
call
mov
cmp
je
mov
mov
mov
lea
push
mov
call
mov
cmp
mov
je
push
mov
lea
mov
call
mov
cmp
je
test
movl
mov
mov
je
mov
mov
mov
mov
mov
mov
mov
push
push
call
mov
test
jne
test
jne
lea
call
lea
call
push
push
lea
push
push
push
movl
movl
mov
call
mov
add
test
jne
test
jne
lea
call
mov
test
jne
test
jne
mov
pop
pop
pop
pop
xor
call
add
ret
mov
add
push
call
add
test
jne
push
call
add
jmp
int3
sub
push
push
push
push
mov
xor
cmp
jne
mov
mov
call
test
je
mov
mov
cmp
mov
jne
cmp
jne
mov
mov
mov
mov
test
mov
mov
jne
mov
test
jne
mov
mov
mov
cmp
mov
jne
mov
mov
cmp
jne
or
mov
test
jne
mov
mov
mov
mov
push
call
orb
pop
pop
pop
pop
add
ret
mov
mov
and
xor
or
jne
test
je
orb
jmp
mov
mov
sub
cmpl
mov
mov
mov
mov
jne
mov
add
mov
mov
mov
lea
push
push
call
lea
lea
call
mov
push
push
lea
push
mov
push
push
call
testb
jne
mov
push
mov
lea
push
push
push
call
add
jmp
mov
mov
add
mov
mov
mov
mov
sub
mov
lea
mov
mov
push
push
mov
call
lea
lea
call
mov
push
push
mov
push
push
push
call
testb
jne
mov
mov
push
lea
push
push
push
call
add
jmp
testb
jne
movl
jmp
mov
mov
mov
xor
cmp
mov
jne
cmp
jne
mov
mov
sub
sub
add
sub
add
mov
mov
cmp
mov
jne
mov
mov
sub
sub
add
sub
add
mov
mov
test
mov
je
push
lea
push
push
push
call
mov
mov
add
cmpl
je
mov
test
je
mov
mov
push
lea
push
call
mov
mov
mov
cmp
jle
mov
cmp
mov
jne
cmpl
jne
mov
sub
add
mov
mov
test
je
mov
mov
push
lea
push
call
mov
mov
cmp
jle
mov
cmp
mov
jne
mov
sub
add
mov
mov
push
lea
push
push
push
call
add
jmp
xor
jmp
mov
test
je
xor
push
lea
push
push
push
mov
mov
mov
mov
call
add
jmp
push
mov
mov
sub
push
mov
push
push
lea
lea
movsl
movsl
movsl
lea
movsl
call
test
je
andl
pushl
push
pushl
call
add
cmpl
jne
pop
pop
pop
leave
ret
cmpl
movl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
cmpl
jne
lea
push
mov
call
push
mov
call
push
call
pop
jmp
mov
movl
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
mov
push
jne
mov
test
jne
test
jne
lea
xor
mov
call
mov
lea
mov
lea
mov
mov
call
cmp
jne
test
je
mov
mov
movzbl
and
neg
sbb
add
cmp
jb
mov
mov
push
lea
push
push
push
movl
call
test
js
cmpl
jne
xor
cmp
mov
je
mov
jmp
mov
mov
test
jne
mov
mov
mov
lea
push
push
push
call
test
js
add
cmpl
jne
cmpl
jne
jmp
mov
mov
lea
push
push
push
call
test
js
cmpl
jne
push
lea
movl
call
mov
mov
lea
push
push
call
test
js
testb
mov
je
mov
mov
push
push
call
mov
push
xor
mov
lea
mov
call
mov
cmp
je
testb
mov
je
mov
mov
push
push
call
mov
lea
mov
mov
lea
mov
movl
movl
movb
mov
push
push
mov
call
test
js
mov
mov
call
mov
push
lea
push
push
mov
call
mov
test
je
mov
add
push
call
add
test
je
lea
call
lea
call
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
push
mov
and
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
push
push
push
push
mov
mov
mov
call
mov
movl
andl
or
cmp
je
mov
push
call
test
je
mov
mov
testb
jne
push
lea
push
call
test
jne
cmpl
je
lea
push
pushl
mov
pushl
push
call
test
je
lea
push
call
test
je
andl
mov
lea
call
lea
xor
call
lea
xor
call
lea
xor
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
add
mov
mov
mov
xor
add
lea
mov
mov
push
push
mov
mov
mov
call
mov
test
jne
pushl
lea
push
push
pushl
push
lea
push
mov
call
mov
mov
mov
andl
test
jne
mov
mov
andl
test
jne
push
push
lea
push
call
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
xor
cmp
push
mov
mov
jne
push
call
add
cmp
je
push
mov
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
push
push
push
call
mov
mov
mov
push
call
pop
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
push
mov
lea
mov
or
lock
dec
je
pop
ret
movl
mov
test
movl
movl
movl
movl
je
cmpb
jne
movl
push
call
add
xor
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
movl
call
add
cmpw
je
xor
pop
add
ret
cmpw
jne
mov
mov
call
test
je
push
mov
push
call
add
test
jne
mov
push
call
add
test
je
push
mov
mov
test
je
mov
push
mov
lea
movl
call
mov
test
je
mov
mov
push
call
test
je
push
lea
mov
call
push
call
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
push
push
call
mov
add
cmpl
jne
cmpl
push
jne
mov
push
push
mov
push
push
call
test
js
mov
lea
call
lea
call
mov
pop
pop
pop
add
ret
mov
push
call
jmp
mov
jmp
push
mov
push
push
mov
test
push
mov
jne
push
call
test
pop
je
call
mov
test
je
mov
push
call
pushl
mov
push
call
andl
push
lea
call
mov
test
je
mov
mov
push
call
pushl
mov
pushl
push
pushl
mov
call
test
js
mov
mov
xor
lea
call
mov
pop
pop
leave
ret
xor
jmp
push
mov
push
mov
test
je
mov
push
call
mov
test
mov
jne
test
mov
je
movb
mov
push
call
mov
lea
call
mov
test
je
mov
push
call
mov
test
mov
pop
pop
jne
mov
lea
call
mov
test
je
push
call
xor
ret
mov
mov
cmp
je
test
je
cmpl
je
pushl
push
call
test
pop
pop
jne
xor
inc
ret
xor
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
test
js
mov
cmpl
jne
xor
pop
pop
pop
ret
mov
test
je
pushl
mov
call
pop
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
test
not
je
jmp
lea
test
jne
cmp
push
push
jae
cmp
jae
test
pop
pop
je
nop
movzbl
xor
and
shr
xor
add
sub
jne
not
pop
ret
mov
shr
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
add
xor
add
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
add
xor
add
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
and
shr
xor
xor
xor
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
xor
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
xor
add
mov
shr
movzbl
and
mov
xor
mov
and
shr
xor
add
xor
sub
xor
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
jne
jmp
mov
shr
lea
xor
add
mov
shr
and
mov
movzbl
xor
mov
shr
xor
and
xor
sub
sub
mov
jne
jmp
movzbl
xor
and
shr
xor
add
sub
jne
jmp
int3
int3
sub
push
mov
test
push
mov
push
mov
je
mov
push
mov
call
add
mov
lea
xor
mov
push
lea
lea
movl
movl
mov
mov
call
mov
test
js
mov
mov
push
push
push
mov
call
mov
mov
mov
push
push
mov
push
mov
push
mov
push
push
mov
call
mov
mov
add
mov
lea
call
mov
pop
pop
pop
add
ret
push
mov
push
pushl
andl
mov
lea
call
pushl
mov
pushl
call
push
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
test
mov
push
mov
push
mov
push
mov
movl
je
test
je
test
je
cmpl
mov
mov
je
movl
movl
lea
push
mov
push
push
push
push
mov
movl
call
test
js
xor
cmp
mov
jne
mov
cmp
mov
je
testb
jne
mov
mov
mov
lea
push
push
call
test
js
cmpl
mov
jne
mov
mov
mov
push
push
call
test
js
mov
push
mov
mov
call
test
js
xor
mov
mov
mov
cmp
je
testb
jne
mov
mov
cmp
je
testb
je
lea
push
lea
push
mov
mov
movl
movl
mov
mov
call
mov
mov
push
lea
push
call
add
lea
push
push
call
mov
test
jne
test
jne
mov
cmp
je
testb
jne
push
lea
mov
call
mov
lea
push
lea
call
add
test
mov
js
mov
test
je
mov
mov
lea
push
push
call
cmpw
je
mov
mov
mov
mov
lea
push
mov
push
movl
movl
call
test
je
movb
testb
je
mov
test
jne
test
jne
cmpb
jne
push
lea
movl
call
mov
mov
lea
push
push
mov
call
test
mov
js
mov
test
je
cmpl
je
mov
test
mov
je
mov
mov
push
call
mov
test
mov
mov
mov
movl
je
movzbl
mov
mov
push
push
mov
call
mov
mov
mov
mov
push
lea
push
mov
lea
push
push
push
call
test
mov
js
cmpl
je
mov
test
je
mov
cmpw
je
xor
mov
push
mov
lea
movl
call
mov
mov
mov
push
push
call
mov
mov
mov
mov
push
push
push
call
lea
call
test
je
mov
mov
mov
push
push
call
lea
call
mov
mov
lea
call
lea
call
mov
mov
pop
pop
pop
xor
call
mov
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
mov
push
push
mov
push
mov
mov
mov
mov
add
mov
mov
mov
lea
lea
mov
cmp
je
mov
mov
sub
cmp
push
jne
push
push
call
add
test
jne
mov
mov
cmp
je
mov
cmp
je
mov
push
push
sub
sub
push
mov
push
mov
mov
call
test
je
jmp
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
cmp
jne
mov
push
mov
push
push
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
sub
push
mov
cmp
je
mov
push
mov
add
mov
mov
mov
mov
lea
mov
mov
call
test
je
mov
mov
cmp
mov
push
jne
push
push
call
add
test
je
addl
jmp
mov
mov
call
test
je
pop
xor
pop
add
ret
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lea
add
add
mov
mov
lea
lea
call
test
je
mov
mov
mov
mov
mov
pop
mov
mov
pop
add
ret
xor
pop
add
ret
int3
int3
int3
int3
int3
int3
mov
cmp
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
fldz
push
push
mov
fcoml
mov
fnstsw
test
je
fcompl
fnstsw
test
je
push
mov
test
jne
push
call
add
test
je
fldl
fstpl
fldl
fstpl
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
add
pop
pop
pop
ret
fstp
mov
push
movl
call
add
pop
pop
ret
xor
jmp
push
mov
push
lea
push
pushl
mov
call
test
je
mov
mov
mov
xor
inc
pop
pop
ret
push
mov
sub
push
mov
mov
push
mov
mov
call
cmp
je
xor
pop
pop
leave
ret
push
pushl
mov
pushl
call
mov
call
pop
ret
int3
int3
int3
int3
int3
int3
push
push
push
mov
test
push
push
je
lea
mov
test
jne
pop
pop
pop
lea
pop
pop
ret
test
je
sar
sub
mov
je
mov
test
je
mov
push
call
cmp
jne
cmpl
jne
cmpl
jne
add
cmpl
je
mov
mov
and
test
mov
je
addl
mov
test
je
mov
mov
mov
test
je
pop
mov
pop
pop
pop
pop
ret
mov
sub
je
mov
jmp
movl
mov
mov
push
mov
call
pop
pop
pop
xor
pop
pop
ret
lea
or
jmp
cmpl
je
mov
call
test
je
movl
jmp
push
push
mov
mov
call
mov
pop
add
adc
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
loop
adc
les
add
mov
push
push
mov
push
mov
test
je
mov
mov
xor
cmpl
movl
mov
movl
je
mov
lea
push
lea
push
mov
mov
push
mov
call
mov
mov
mov
test
mov
je
mov
lea
mov
mov
mov
test
jne
push
call
mov
mov
mov
add
add
fwait
add
jecxz
out
movsl
mov
add
loopne
out
add
pop
jl
add
insb
mov
loope
int3
sti
bound
add
add
mov
sub
push
mov
add
push
push
push
call
jp
out
shrb
js
add
push
add
xchg
add
xchg
lcall
add
add
rcrl
in
clc
lcall
inc
in
push
push
lea
push
lea
push
push
push
call
je
mov
jnp
arpl
add
popf
mov
lds
lea
in
pop
add
bound
mov
mov
mov
add
xchg
add
movb
in
pop
push
push
push
lea
push
push
push
push
push
push
call
push
xlat
add
arpl
jnp
xlat
add
lcall
jo
leave
int3
hlt
int
std
pop
sti
xchg
divb
add
stos
jo
cltd
loopne
add
mov
push
mov
mov
add
add
fists
add
addr16
push
sti
pop
ljmp
add
in
in
push
push
push
push
push
lea
push
push
lea
push
push
push
call
add
xchg
ja
rclb
mov
popa
imul
push
int3
add
out
fstpt
popf
mov
add
je
clc
mov
addl
mov
je
out
add
icebp
imul
aam
add
add
loop
add
pop
fimuls
in
fcompl
inc
add
add
push
lea
push
push
call
fs
pop
int3
push
jae
iret
add
mov
add
mov
mov
push
push
add
add
addl
xchg
add
popa
int
add
xchg
hlt
cmc
in
iret
add
lret
add
mov
insb
mov
jns
sub
pop
call
push
push
push
push
push
push
push
push
push
push
call
adcb
add
add
sahf
movsl
pop
push
add
add
xchg
add
loope
jle
add
jecxz
sub
pop
jmp
push
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
test
adc
insb
add
leave
test
mov
mov
lret
mov
repnz
std
add
mov
mov
shll
nop
out
add
add
mov
add
lcall
mov
push
push
push
push
push
call
add
loopne
push
add
add
fiadds
pushf
add
mov
pop
clc
jl
arpl
fildl
add
cmpsl
sub
pop
mov
push
lea
push
push
push
push
lea
push
lea
push
call
pop
sti
add
jae
xchg
stos
je
add
add
push
add
cmpsl
add
mov
in
mov
mov
add
add
test
fs
add
sti
mov
xchg
ja
cltd
jmp
add
add
push
push
push
lea
push
lea
push
call
mov
mov
imul
add
loope
pop
in
push
add
push
lret
add
jo
jge
add
push
add
add
lea
cld
add
leave
in
imul
mov
pop
add
push
push
lea
push
push
push
push
push
push
call
add
add
jns
jno
into
add
cmpsb
out
sar
mov
add
add
data16
lret
in
loopne
mov
xor
push
push
sub
add
push
and
add
sub
lea
sub
ror
sub
pop
rol
sub
pop
push
push
lea
push
lea
push
lea
push
push
push
call
mov
shll
data16
add
add
add
add
rolb
add
into
add
add
mov
cmpsb
add
popa
jb
add
xchg
add
pop
mov
clc
in
lcall
add
add
arpl
add
add
adcb
in
pushl
push
push
lea
push
lea
push
push
push
push
call
add
add
js
fadds
mov
aam
fadds
outsl
leave
add
mov
ljmp
sub
pop
call
push
push
push
push
lea
push
push
push
push
call
mov
jmp
add
stos
mov
add
mov
outsl
test
add
bound
movl
cwtl
mov
rolb
mov
mov
scas
in
add
add
cmpsl
in
add
add
lret
xor
add
push
repnz
mov
lock
loopne
mov
push
push
push
call
add
add
shlb
movsl
mov
add
add
arpl
pop
lret
movsb
mov
out
roll
stc
pop
roll
inc
call
push
push
push
push
push
push
push
push
call
mov
cmc
mov
popf
xchg
fadds
add
add
mov
mov
jle
mov
les
mov
filds
add
add
cwtl
outsl
mov
pop
mov
arpl
add
jge
icebp
ljmp
add
jbe
pop
mov
repnz
add
lea
sub
pop
lea
push
lea
push
lea
push
lea
push
call
add
test
add
add
rcr
pop
add
jno
movb
pushf
add
jb
jle
stos
add
mov
add
add
pusha
in
fcmovu
add
add
stos
mov
in
scas
add
clc
add
add
loop
pop
aam
add
add
lock
add
in
aad
int
mov
lcall
push
push
push
push
push
push
push
lea
push
call
add
aad
xchg
out
push
clc
loope
movsl
add
insb
stc
xchg
stc
gs
arpl
addb
enter
scas
gs
add
add
lea
add
pop
add
mov
test
add
cmc
add
sub
pop
pushl
pushl
push
push
push
push
push
push
lea
push
call
mov
outsl
jbe
xchg
add
add
add
cltd
ret
jo
mov
ja
jmp
add
add
add
lcall
lret
add
popf
lea
push
call
aam
filds
xchg
add
lcall
add
add
add
jl
mov
push
enter
scas
add
lea
movsb
add
in
cltd
mov
add
stos
add
test
add
add
lcall
jne
push
push
push
lea
push
call
mov
mov
xchg
add
add
add
jp
mov
add
or
push
add
add
add
pop
testl
mov
add
jmp
imul
add
test
lock
sub
pop
pushl
push
push
lea
push
push
push
lea
push
push
call
add
jo
add
add
add
add
movsl
cmpsl
add
add
add
add
inc
pop
shll
mov
lcall
pop
cmp
xchg
mov
push
lea
push
sub
add
inc
shl
sub
sub
add
pop
dec
sub
pop
push
push
lea
push
push
push
call
push
add
loop
pop
xchg
jmp
into
into
jnp
cld
add
imul
add
loopne
xchg
mov
mov
mov
stc
flds
loop
roll
cmc
jno
fs
pop
xchg
add
add
pushf
push
add
add
jae
ret
in
lcall
jne
push
push
push
push
lea
push
lea
push
push
call
add
add
mov
jge
enter
add
xlat
scas
add
lahf
cltd
cmc
add
repnz
add
add
in
add
add
cmpsb
mov
jbe
add
fiadds
sub
pop
call
push
push
lea
push
push
push
push
push
push
push
lea
push
call
mov
jo
add
xchg
loop
lcall
pop
xchg
xchg
jb
shrb
mov
add
add
rolb
add
fcomps
inc
push
push
add
ror
xor
push
or
not
add
sub
shl
sub
shl
not
pop
xor
sub
inc
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
lea
push
call
pop
cwtl
add
imul
mov
mov
subb
pop
add
xchg
add
add
add
add
lret
call
cwtl
add
xlat
add
frstor
lock
cld
pusha
mov
in
fdivr
lcall
push
push
push
push
call
jl
add
add
xchg
sbbl
insb
call
add
pop
aam
test
pop
sti
add
add
add
ljmp
add
add
xchg
insb
outsl
add
fucomi
mov
cli
nop
add
lods
std
lret
pusha
add
add
xorl
push
push
push
push
push
call
add
mov
lahf
add
add
data16
loope
lock
loope
add
repnz
xchg
pop
shll
add
ret
lods
add
fsubrs
lahf
call
stos
add
lcall
flds
test
call
push
push
push
push
push
push
lea
push
call
hlt
rolb
add
add
cwtl
hlt
jb
mov
xchg
jb
stos
outsl
cli
add
mov
data16
mov
popa
add
add
mov
add
hlt
mov
push
xchg
add
xchg
add
sub
pop
mov
push
push
push
push
push
push
push
push
call
xchg
fistps
add
lods
call
addl
jne
addl
je
jb
add
add
into
and
add
cmc
fs
jb
test
add
add
jbe
add
cltd
add
add
lods
sub
pop
push
push
push
push
push
push
call
add
add
add
add
push
add
add
mov
scas
pop
mov
shrl
push
fistpll
in
in
pop
push
push
push
push
push
lea
push
lea
push
call
add
mov
in
xchg
add
insb
add
cmpsb
aam
ja
jnp
pop
push
xchg
add
add
add
fmulp
push
add
in
call
push
push
push
push
lea
push
push
push
lea
push
call
stos
add
add
pop
in
mov
ret
fsub
add
fwait
pushf
add
out
arpl
fiaddl
add
add
cli
push
loope
arpl
add
add
sub
pop
add
add
push
push
push
call
add
roll
add
add
add
xchg
mov
add
imul
stc
mov
lods
add
lcall
ret
inc
dec
add
push
push
call
add
mov
addb
movl
jl
mov
push
add
outsl
pushf
mov
test
add
jae
test
add
add
mov
test
add
addr16
add
xchg
call
sub
pop
mov
xor
push
push
call
loope
ret
add
bound
fwait
add
add
add
les
lret
jl
push
lods
push
popa
pop
mov
js
add
pop
cltd
ficoml
stc
add
push
cmpsl
stos
test
imul
arpl
push
push
mov
add
add
jnp
std
mov
add
jmp
mov
in
clc
pop
add
push
push
push
push
call
add
repnz
int3
mov
pop
iret
mov
xchg
mov
add
mov
add
int
addb
jnp
add
imul
mov
push
add
add
mul
add
add
add
andl
push
add
add
cmpb
in
lock
push
push
push
push
lea
push
push
push
push
call
test
je
ja
mov
jle
xlat
add
mov
mov
outsl
lds
pop
je
add
xchg
mov
lds
sub
pop
mov
xor
push
lea
push
lea
push
call
jbe
pop
mov
add
add
les
add
mov
mov
into
add
loop
add
lds
add
add
add
bnd
add
mov
add
repnz
add
mov
xchg
ffree
add
add
xchg
add
aam
imul
sub
pop
add
push
push
push
push
push
push
push
call
test
fnstsw
mov
hlt
add
addl
js
jl
push
xchg
jmp
fincstp
pop
add
jo
lcall
rcll
mov
add
jp
xchg
mov
not
sub
pop
pop
push
push
push
lea
push
lea
push
push
push
call
fcmovnbe
add
add
leave
movb
add
mov
cmpsl
repnz
add
add
cld
arpl
push
popa
test
pop
sarb
rorl
pushf
cli
mov
dec
add
icebp
xor
adc
inc
daa
jmp
push
push
lea
push
lea
push
push
push
call
out
popa
js
pop
jecxz
add
loop
lret
add
add
add
sarb
fadds
enter
iret
add
jno
roll
mov
fnstsw
add
add
add
lcall
mov
push
push
push
push
lea
push
lea
push
push
push
push
call
push
add
jmp
arpl
add
clc
jo
xchg
mov
add
add
add
pop
add
add
imul
lea
enter
add
add
add
sub
pop
xor
push
push
lea
push
push
lea
push
lea
push
push
push
lea
push
push
call
add
jne
outsl
add
hlt
add
movsb
add
jge
xchg
jo
cmc
add
add
add
les
stc
add
gs
test
lcall
les
add
push
lea
push
push
call
pusha
add
add
fs
aam
add
add
add
mov
xchg
mov
cmc
loope
xchg
rolb
lds
add
imul
add
cmpsb
jecxz
sub
pop
sub
pop
push
push
push
push
push
lea
push
lea
push
push
push
call
sti
add
push
popa
add
add
mov
xchg
nop
add
add
add
push
fwait
rolb
int3
fstp
xchg
xchg
imul
mov
add
in
add
out
xchg
add
stos
pop
test
fists
ljmp
jp
leave
jne
add
lcall
movsb
push
push
push
push
push
push
push
lea
push
push
call
mov
push
leave
jecxz
in
add
jle
xchg
add
enter
je
movb
add
mov
add
mov
add
xchg
mov
add
out
pop
nop
int3
in
popf
add
push
mov
rcll
add
testl
jne
add
lcall
push
push
push
push
push
lea
push
lea
push
push
lea
push
call
mov
add
clc
int3
popa
add
mov
arpl
fwait
push
add
cld
mov
add
loope
sahf
add
jle
popl
hlt
mov
pop
pop
mov
add
enter
pop
push
add
lcall
pop
hlt
push
push
lea
push
call
jb
incb
push
cwtl
int
in
add
fisubrl
add
jno
je
add
push
add
add
addr16
in
popf
repnz
xchg
mov
cmpsl
je
in
jge
mov
add
lods
add
push
sub
pop
add
push
push
push
push
push
push
push
push
push
lea
push
call
fsts
fst
pop
test
js
add
test
add
addr16
add
nop
leave
add
add
jl
add
lods
mov
xchg
jecxz
in
fcomps
ret
add
add
push
push
push
push
lea
push
push
push
lea
push
lea
push
call
lock
stos
mov
into
add
lea
add
stos
add
jno
std
mov
imul
push
insb
add
add
sub
pop
add
mov
push
push
push
push
push
push
lea
push
call
mov
add
add
mov
add
xchg
int
add
add
leave
in
add
sti
mov
int
mov
add
mov
add
fcoms
jle
cld
nop
cmp
mov
add
sti
mov
sub
pop
xor
push
push
call
add
enter
in
addb
int
fsubrl
popa
jmp
hlt
mov
push
add
clc
popa
out
stc
pop
add
add
sahf
imul
sahf
add
stos
mov
add
test
cltd
xchg
jbe
add
out
add
jno
pop
add
mov
add
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
xorb
pop
mov
add
mov
jp
add
add
jo
sub
pop
mov
xor
push
xor
xor
shl
pop
mov
push
push
push
push
push
push
call
test
xchg
add
jmp
add
pop
enter
pop
add
out
add
cmc
add
add
add
sub
pop
xor
push
push
push
push
push
push
lea
push
push
push
lea
push
call
xchg
mov
add
js
add
stc
push
filds
mov
add
bound
data16
add
movl
leave
mov
mov
jno
jl
add
add
mov
mov
lcall
les
add
push
push
push
push
push
push
push
push
call
jae
add
add
aam
push
add
xlat
je
imul
add
add
pop
xchg
jne
add
add
add
add
add
add
mov
into
lds
add
add
add
movsl
add
imul
mov
lcall
ret
sbb
roll
pop
mov
push
gs
movl
leave
pop
cltd
into
xorl
mov
stc
jbe
js
mov
add
add
std
lds
xchg
leave
push
cmc
lock
add
into
fwait
mov
fucomip
add
in
add
pop
xlat
in
into
mov
xchg
add
fiadds
rcll
ret
dec
js
lcall
mov
xchg
lret
dec
shlb
dec
push
sub
add
sub
sub
xor
rol
pop
lea
pop
push
lea
push
push
call
sti
lods
lret
xchg
jns
in
mov
add
cld
add
je
xchg
xchg
add
add
mov
rcrl
add
add
lods
cmpsb
imul
js
out
sub
pop
pushl
push
push
call
add
faddl
mov
shl
outsl
hlt
push
add
pushf
mov
add
sbbb
mov
add
popf
add
idiv
cmpsl
add
call
add
jecxz
in
xchg
jmp
add
add
add
add
stos
add
add
fwait
pop
pop
add
add
nop
add
sub
pop
call
push
push
push
lea
inc
push
or
inc
add
not
sub
sub
shr
pop
not
add
shl
pop
push
shl
pop
push
push
push
lea
pop
call
mov
push
sub
pop
push
push
push
not
sub
pop
mov
add
push
push
push
push
push
lea
push
call
add
and
pop
add
add
add
push
loope
flds
mov
imul
add
hlt
jns
scas
roll
xchg
xchg
fs
mov
icebp
pop
add
test
mov
jmp
add
fs
add
jnp
add
insb
mov
xchg
test
mov
push
add
loope
mov
ret
add
add
push
lea
push
call
loope
add
lret
add
cltd
pop
push
add
js
add
push
add
cli
lahf
add
push
pop
add
mov
bound
ljmp
jmp
pop
add
cmpsl
add
mov
mov
cli
popf
mov
je
loop
incb
les
lcall
ret
inc
dec
add
push
push
push
push
push
push
call
jecxz
les
mov
cmc
add
nop
in
fiadds
fnstenv
add
add
js
add
xchg
lahf
flds
popf
add
jmp
add
add
add
push
out
sub
pop
mov
push
push
push
push
push
push
call
and
jp
add
pop
jnp
lea
roll
add
arpl
add
fadds
add
push
push
add
test
jno
jecxz
in
in
pop
xor
push
lea
push
push
lea
push
push
push
push
push
call
xchg
xchg
jge
mov
push
in
cmpsb
add
in
add
mov
mov
add
rolb
mov
mov
stos
fildl
sub
pop
add
push
sub
rol
pop
add
push
push
call
add
add
jae
cltd
add
cltd
pop
add
add
add
loopne
add
xchg
hlt
into
add
xchg
sub
pop
push
push
push
lea
push
lea
push
push
lea
push
push
push
call
outsl
pop
fistpl
lret
out
data16
addl
mov
add
add
les
add
scas
addr16
mov
add
add
mov
cmpsl
jle
jge
xchg
add
sub
pop
mov
xor
push
lea
push
lea
push
push
push
push
lea
push
lea
push
call
mov
add
fiadds
add
xlat
jo
add
mov
add
mov
testl
add
add
add
flds
andb
add
bound
jmp
jo
add
addl
add
add
icebp
xchg
popf
fisubrl
add
sub
pop
add
push
xor
sub
dec
pop
pop
mov
push
push
push
call
add
push
lock
fildl
loopne
lock
shll
mov
add
fsubrl
js
icebp
lahf
ret
add
lods
add
sti
add
into
add
mov
add
pop
int3
test
int
mov
add
add
mov
add
in
clc
lcall
or
push
lea
push
lea
push
push
lea
push
call
loope
add
add
add
add
add
jmp
xchg
add
mov
mov
mov
add
cli
sub
pop
add
push
lea
push
call
add
add
add
flds
faddl
lods
push
add
mov
add
jne
add
mov
out
add
aam
add
pop
movsb
insb
add
mov
imul
add
add
mov
mov
jl
add
clc
pop
rep
mov
push
push
push
push
push
push
call
pusha
xchg
add
add
cli
add
movsl
add
rolb
add
pusha
add
add
mov
call
add
add
add
bound
or
push
push
push
push
push
push
push
push
push
push
call
test
insb
loopne
mov
add
add
add
cwtl
ret
mov
hlt
incb
add
cmpsb
jb
jmp
add
add
sub
pop
add
push
inc
shl
xor
pop
or
je
mov
xor
push
push
push
lea
push
push
push
push
call
add
mov
add
pop
add
mov
lds
jge
shll
push
lods
add
je
out
fimull
add
repnz
aad
add
into
lods
add
add
lret
add
add
add
pop
popf
add
filds
add
ret
add
nop
sub
pop
mov
push
push
push
push
push
push
push
call
add
pop
xchg
in
js
incb
add
add
add
add
add
pusha
cld
in
push
push
popa
jecxz
xchg
jge
add
lret
jle
jno
addb
leave
jo
add
stos
bound
push
add
add
add
mov
fiaddl
out
add
imul
out
xchg
ljmp
sub
pop
xor
push
push
call
push
rolb
add
push
leave
roll
add
loope
out
incb
mov
jecxz
movsb
testb
in
push
int3
rcrl
push
cwtl
jl
in
xchg
addl
cli
add
pop
fs
imul
stos
add
int
add
mov
mov
in
cltd
sub
pop
add
push
inc
rol
pop
add
push
lea
push
lea
push
push
push
push
push
call
jbe
add
jbe
popa
add
lret
enter
leave
lods
jmp
std
roll
out
sti
add
addb
movsb
add
add
add
add
jne
push
push
lea
push
lea
push
push
push
push
push
push
push
push
call
icebp
add
loop
shll
jne
lcall
fs
push
add
pop
add
add
add
repnz
push
add
lea
rolb
pop
leave
fiaddl
push
add
pop
add
orl
push
add
push
in
add
add
add
add
add
mov
mov
sub
pop
mov
xor
push
lea
sub
rol
not
pop
add
pop
push
add
rol
xor
pop
rep
mov
push
push
lea
push
lea
push
push
push
call
add
mov
popa
add
jo
mov
add
pop
rcll
mov
push
lahf
iret
xchg
add
rolb
add
outsl
mov
add
clc
add
add
in
loop
cmc
jb
pop
sub
pop
xor
push
push
push
call
xchg
mov
mov
std
add
xchg
out
test
sahf
add
add
mov
popa
enter
mov
pop
push
roll
rolb
data16
jge
jno
mov
cld
negb
sub
pop
add
push
lea
push
push
push
push
push
push
call
pop
add
popa
add
add
add
add
add
pop
jne
mov
repnz
mov
fsubs
add
xchg
jle
mov
lcall
leave
je
push
push
push
push
push
push
push
push
lea
push
call
mov
add
add
pop
cwtl
add
sahf
add
mov
fwait
add
fsub
add
mov
test
testl
stc
add
shlb
fcmovbe
clc
mov
out
xchg
add
mov
scas
cli
sub
pop
mov
add
push
add
not
pop
add
push
lea
push
lea
push
push
lea
push
push
call
lds
add
jge
stos
add
jnp
into
add
push
jo
cld
add
add
pop
filds
pusha
sahf
mulb
add
leave
stc
add
add
push
fldl
mov
add
xchg
scas
add
jp
add
sub
pop
rep
push
push
push
push
push
push
call
xchg
push
add
add
js
add
aad
mov
test
add
loopne
jae
add
xchg
mov
add
hlt
add
add
cmc
add
add
test
test
add
incb
hlt
add
cld
mov
in
call
pop
push
push
rol
push
xor
add
dec
sub
add
rol
pop
rol
shr
ror
pop
push
push
call
add
ror
mov
pusha
pop
add
pop
test
add
add
pushf
imul
test
lret
lcall
in
clc
pop
pop
push
add
pop
mov
push
shr
shr
pop
mov
push
shl
lea
lea
pop
mov
jmp
push
shr
pop
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
imul
ljmp
jmp
add
testb
add
add
jbe
add
add
mov
mov
loopne
jae
fistl
popa
scas
add
add
jae
add
hlt
xchg
add
mov
aad
sub
pop
mov
add
push
add
shl
pop
push
push
push
add
pop
push
push
push
lea
push
push
push
lea
push
lea
push
call
mov
fists
in
fadd
jmp
mov
cmpsb
add
shrl
sahf
add
add
add
add
add
cld
adc
add
add
add
je
popa
add
add
sub
pop
mov
push
inc
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
push
push
add
scas
ret
push
add
pushf
stos
nop
icebp
add
add
jo
mov
add
jmp
call
out
movl
push
push
push
push
push
push
call
cld
add
ljmp
jp
push
jp
add
mov
stos
mov
shlb
add
fiaddl
add
add
lret
jge
add
loop
add
pop
xchg
mov
push
add
lcall
push
dec
pop
leave
ret
push
shr
pop
push
push
push
push
push
call
mov
xchg
out
add
cli
add
cwtl
push
je
add
lods
add
add
mov
add
sbb
loop
add
movsl
scas
add
fsubrs
add
add
fs
lcall
in
push
shl
pop
add
push
push
lea
push
push
lea
push
push
push
lea
push
call
mov
icebp
add
pushf
add
add
push
ljmp
lret
stos
add
roll
mov
add
fildl
add
add
add
mov
add
in
push
add
add
add
rcl
add
bound
sub
in
loopne
push
push
push
add
pop
push
push
inc
pop
push
movl
push
inc
sub
not
lea
pop
addl
push
shr
sub
add
dec
pop
test
je
mov
push
push
lea
push
push
lea
push
push
push
push
push
push
call
roll
add
addr16
repnz
add
add
ljmp
in
negb
fiadds
in
fcomps
push
inc
add
shl
pop
pop
push
shl
lea
xor
pop
pop
push
push
push
push
push
lea
push
call
mov
mov
add
fldt
cld
cwtl
mov
pop
cwtl
fadd
sti
out
int3
add
add
xorl
cld
add
jns
scas
jb
cltd
popa
fiaddl
lock
add
in
xchg
enter
rorb
je
add
add
pop
out
add
add
add
mov
add
add
test
add
rolb
sub
pop
pop
push
push
push
push
lea
push
push
push
call
std
add
jl
add
test
je
add
loopne
test
add
add
add
in
add
mov
notl
jecxz
xchg
add
mov
subb
mov
push
add
add
in
in
lcall
ret
push
lea
push
push
push
push
push
call
cld
imul
mov
into
xchg
stos
add
bound
mov
push
aad
pushf
add
jb
add
add
pop
mov
in
in
add
add
add
xchg
add
lret
mov
add
push
nop
lods
add
add
loopne
mov
add
mov
add
mov
add
add
sub
pop
push
mov
push
not
inc
pop
add
push
push
push
lea
push
push
push
push
lea
push
push
call
add
mov
xchg
test
mov
pop
fucomp
movb
aam
add
les
enter
add
insb
imul
enter
push
mov
mov
mov
ret
add
mov
scas
bnd
add
mov
add
iret
shrb
xchg
cmpsb
add
in
jns
in
fcompl
push
push
lea
push
lea
push
push
push
call
js
nop
add
ja
aam
xchg
add
add
add
cmpsl
pushf
addb
enter
test
mov
decb
add
pop
jb
xchg
add
sub
pop
push
push
xor
sub
sub
sub
pop
push
push
lea
push
lea
push
push
push
push
call
add
jns
cmpsl
add
cmpsl
add
push
pop
add
je
add
addb
data16
add
jle
pushf
mov
add
rorl
add
testb
jmp
lds
jp
rolb
stos
add
add
add
add
jmp
out
nop
push
add
lcall
inc
cld
add
add
push
push
push
push
push
push
push
lea
push
push
call
jo
add
add
mov
in
out
add
js
leave
pop
jbe
add
add
pop
pop
push
add
xchg
popf
imul
xchg
add
mov
imul
in
outsl
push
ljmp
pop
addl
push
push
call
add
lock
ljmp
push
pop
cwtl
add
add
popl
xchg
pop
call
in
clc
lcall
add
aas
push
call
mov
mov
add
add
pop
mov
int3
gs
add
ja
push
cli
pop
add
add
fsubs
cwtl
add
add
insb
out
add
pusha
pop
add
sti
xchg
xchg
hlt
mov
fsubl
add
add
sub
pop
call
push
push
push
push
push
call
add
jle
lcall
data16
pusha
int
add
add
add
add
test
push
std
lods
push
rolb
fistl
cmc
xchg
loope
lahf
leave
add
mov
icebp
rcll
add
in
shlb
sub
pop
mov
pushl
push
lea
push
push
lea
push
push
lea
push
push
push
lea
push
call
add
rcll
fs
roll
mov
add
test
into
out
xchg
add
push
add
add
add
add
add
js
add
cmc
add
pop
add
enter
mov
add
add
jbe
add
in
add
clc
fcoms
mov
add
ljmp
push
sub
rol
pop
call
cmpl
jne
push
not
pop
pop
pop
push
sub
sub
dec
pop
pop
push
shr
shl
lea
pop
pop
push
lea
push
lea
push
push
push
push
push
lea
push
lea
push
push
call
out
test
add
add
addr16
push
repnz
add
add
mov
xchg
fiaddl
mov
jae
fs
add
xchg
filds
in
add
add
je
add
add
mov
incb
push
push
push
push
push
lea
push
call
test
pushf
popl
add
lods
std
add
fsubrs
add
icebp
add
fcoml
add
add
xchg
xlat
add
mov
mov
add
mov
sahf
nop
push
std
shlb
int3
test
cmpsb
lret
in
call
push
push
shr
dec
pop
mov
push
add
sub
pop
add
push
inc
sub
sub
pop
push
push
dec
pop
push
push
push
lea
push
call
xchg
add
jp
mov
into
ret
into
add
xchg
leave
push
lcall
je
xchg
in
rcr
add
stc
jecxz
jecxz
mov
pop
add
jno
pop
sahf
add
add
out
add
lcall
push
push
call
out
add
sti
add
add
fldl
add
sahf
leave
push
pop
iret
in
enter
int3
pop
jge
xchg
enter
add
std
clc
push
mov
test
rcrl
add
add
add
add
lcall
push
shl
sub
ror
shl
pop
movl
push
shr
sub
pop
push
push
pop
call
push
lea
push
push
push
push
call
into
mov
add
cltd
add
test
pop
add
int3
push
lock
xlat
lods
pop
jbe
pusha
add
ja
add
add
add
imul
jns
pusha
in
add
add
add
test
xchg
add
jp
in
in
pop
push
push
push
push
push
lea
push
push
call
add
add
add
incb
xchg
xchg
add
add
jns
add
mov
push
add
add
add
add
roll
mov
pop
jae
in
sbbb
iret
repnz
mov
mov
mov
lcall
mov
dec
shl
sub
pop
subl
push
push
call
add
add
add
mov
sbbl
add
pop
add
push
outsl
loop
add
add
add
out
out
mov
add
enter
into
add
push
add
add
jmp
jns
stos
call
mov
add
add
sub
pop
cmpl
jne
push
dec
sub
ror
pop
pop
push
pop
pop
push
xor
add
pop
pop
pop
push
push
push
push
push
push
call
pop
push
test
add
xchg
add
mov
add
add
aam
iret
mov
fiadds
pushf
xchg
add
add
mov
add
add
pop
add
add
jnp
push
fiaddl
add
rcrb
pop
loopne
add
jl
outsl
stos
add
mov
lcall
push
push
push
push
lea
push
lea
push
push
push
push
push
call
test
shl
cwtl
add
nop
gs
mov
mov
rolb
add
xchg
ficoml
shll
mov
add
mov
pusha
cmc
mov
fcomps
push
push
lea
push
push
lea
push
push
call
jle
add
add
movsb
into
stos
in
add
add
add
add
add
cmpsb
jle
push
repnz
add
add
jmp
hlt
lea
pop
push
push
push
push
push
call
aad
out
test
jle
cmpl
fadds
add
jecxz
mov
data16
sarl
xchg
sti
add
add
lock
mov
push
push
push
lea
push
push
push
call
test
icebp
add
movb
mov
add
add
add
add
add
out
add
jno
rorl
lcall
cld
push
push
push
lea
push
push
push
lea
push
push
push
push
call
add
push
add
jno
mov
add
add
aam
js
add
add
jne
jle
add
mov
aam
add
scas
add
add
les
xchg
insb
add
add
cltd
add
filds
shr
add
add
mov
add
add
push
push
push
push
push
push
call
add
loope
movsl
jge
jb
add
add
jb
add
fadds
out
add
popf
mov
jo
movsb
add
bound
popa
add
xchg
xlat
mov
add
mov
add
jp
test
push
lret
jnp
in
xchg
push
add
js
jns
mov
out
add
lcall
pop
push
push
push
push
push
lea
push
push
push
lea
push
push
push
lea
push
call
loope
ror
mov
pop
sahf
push
scas
jnp
stc
add
mov
add
add
jb
fsub
fs
lret
add
xlat
mov
bound
aam
add
push
aam
popl
fnstcw
add
mov
add
jae
stc
add
add
ljmp
add
fildl
lcall
push
lea
push
call
add
js
add
jp
je
add
aam
mov
add
in
add
lea
add
je
add
fldl
cmpsb
ljmp
mov
movsb
addr16
call
fs
xchg
add
add
lea
add
push
sub
pop
mov
push
push
push
call
popf
xchg
add
cld
add
test
loopne
scas
add
add
jno
mov
add
repnz
hlt
lcall
inc
cmp
push
call
add
pushf
add
add
add
add
mov
add
call
add
mov
fists
lea
call
lea
push
push
push
call
add
pusha
lret
add
mov
add
add
gs
add
add
mov
pusha
push
mov
add
jp
cmc
add
data16
rcrl
add
add
cmc
add
mov
add
mov
push
jns
ret
in
lock
shr
add
push
shl
pop
mov
mov
push
rol
pop
add
push
pop
add
push
push
push
push
push
push
call
test
mov
add
aam
aad
mov
xchg
add
aad
add
add
cltd
loopne
ret
loope
add
stos
push
push
fiadds
add
add
add
add
stc
add
call
call
mov
push
lea
push
lea
push
lea
push
push
lea
push
push
call
add
add
xchg
test
mov
jl
add
lret
popf
add
push
mov
add
add
jp
add
push
sar
add
rolb
add
mov
add
add
mov
add
mov
add
pusha
imul
nop
nop
nop
push
push
call
add
add
jns
cltd
push
push
add
push
add
mov
add
popf
lret
push
mov
jle
ja
shrl
roll
in
pop
xchg
xchg
outsl
int3
testl
add
mov
jb
fs
add
add
lds
push
add
clc
pop
cmp
jne
push
lea
lea
shl
pop
cmp
jne
push
push
push
push
push
push
call
lock
add
jecxz
hlt
clc
xchg
mov
add
xchg
frstor
add
add
add
add
xchg
push
add
add
mov
add
add
add
add
add
mov
add
test
loop
in
add
add
pop
add
add
loopne
stos
pop
add
inc
adc
add
add
add
std
lea
push
push
lea
push
call
lret
pop
add
jo
int
test
lods
lods
add
push
add
mov
movsb
add
add
add
add
xlat
cmpsb
add
cld
loope
add
in
add
add
aad
mov
sub
pop
jmp
mov
push
lea
push
call
add
roll
xchg
sahf
add
testb
add
add
jl
loope
add
pop
add
imul
leave
je
lahf
add
int3
iret
mov
add
add
xchg
add
in
clc
pop
mov
push
push
push
push
push
push
push
lea
push
lea
push
push
call
push
add
cli
into
add
push
add
add
pop
clc
lea
add
mov
xchg
jmp
mov
xchg
add
fiaddl
add
stos
add
push
push
lods
jmp
in
push
enter
add
mov
mov
sub
pop
sub
jne
push
sub
lea
pop
mov
push
push
push
push
push
push
push
push
push
push
call
enter
add
jge
aam
mov
pop
add
add
test
add
icebp
pop
pop
stos
jbe
add
mov
les
cltd
stos
sti
mov
cld
sub
pop
movl
jmp
push
xor
sub
pop
mov
push
not
pop
mov
push
not
not
shl
pop
cmp
jne
push
rol
shl
inc
pop
mov
movl
push
lea
push
push
push
push
push
lea
push
call
add
out
loopne
jns
add
add
scas
add
pop
add
addr16
add
je
add
add
mov
add
sti
lock
add
cltd
mov
addr16
add
fdivp
mov
xchg
in
sub
pop
jmp
mov
push
lea
push
push
push
push
push
lea
push
push
push
push
call
fisubl
add
mov
add
sahf
stos
add
repnz
xchg
ret
mov
test
fdivr
lcall
cmpl
jne
push
push
call
jp
pop
add
movsb
add
out
add
add
cmpsb
jne
lret
add
jns
mov
add
add
add
add
mov
lahf
fiaddl
lcall
inc
adc
xchg
lret
andb
push
push
call
add
data16
add
add
push
jle
push
add
mov
imul
add
in
add
cmc
add
add
jne
jnp
pushf
pushf
nop
mov
out
add
ljmp
fsubp
test
imul
add
mov
pop
movl
jmp
push
push
lea
push
lea
push
lea
push
push
lea
push
call
mov
add
mov
sarl
fsts
add
jno
jl
add
ljmp
add
add
add
jp
popl
mov
addb
xor
pop
push
lea
push
call
mov
xlat
add
add
mov
mov
push
add
add
lcall
add
add
add
lahf
mov
fiaddl
add
jo
fmuls
add
shl
add
sub
pop
mov
mov
push
push
push
lea
push
push
call
test
jbe
add
add
add
add
add
add
add
add
add
pushf
add
rolb
add
xchg
imul
lods
push
push
stc
add
sub
pop
mov
push
push
sub
push
sub
add
inc
sub
ror
pop
lea
add
sub
inc
pop
push
inc
pop
push
push
lea
push
lea
push
push
push
push
push
lea
push
push
call
in
mov
jl
sti
cld
mov
add
add
add
add
rcrl
adcb
test
addl
push
push
push
push
push
push
push
call
out
mov
stos
fadds
add
add
mov
add
lods
fbstp
push
ja
add
jno
add
add
scas
add
fiadds
add
lret
add
add
lcall
js
int3
fldz
ret
clc
or
add
es
inc
push
xor
dec
rol
push
or
inc
add
ror
add
not
ror
sub
dec
ror
ror
pop
pop
push
lea
push
push
lea
push
lea
push
call
add
add
icebp
add
push
add
pushf
enter
add
stos
add
add
push
add
xchg
add
jecxz
add
mov
roll
into
add
add
xchg
imul
add
mov
pop
out
add
lret
push
jo
sub
pop
push
push
push
lea
push
lea
push
push
push
call
xchg
add
insb
push
jge
cmp
rcll
mov
lret
sahf
test
outsl
mov
mov
add
in
add
add
pop
jns
add
add
mov
mov
ret
movsb
xchg
int3
ljmp
add
sti
mov
mov
jge
in
call
add
push
push
push
call
jp
sarl
bound
loopne
loop
add
add
mull
fdiv
scas
xchg
in
lods
add
popl
rcll
add
iret
add
cmpsl
stos
mov
mov
sub
pop
cmpl
je
push
push
shr
shr
sub
push
and
add
shl
sub
sub
inc
add
ror
xor
pop
dec
shl
pop
push
lea
push
push
lea
push
push
push
push
push
call
fcmovne
pop
ret
xchg
push
jmp
movsl
in
pop
rorl
lcall
mov
test
lahf
jo
test
push
add
out
mov
in
loopne
lcall
call
push
push
push
push
push
push
push
call
lds
push
in
lock
leave
mov
pusha
insb
out
add
in
push
jecxz
add
add
stos
add
jae
out
add
mov
add
test
xchg
mov
add
add
add
outsw
pushf
jmp
add
add
cmp
add
int3
je
push
push
add
shl
sub
push
xor
add
shr
inc
dec
lea
sub
inc
dec
inc
pop
ror
xor
pop
push
dec
pop
push
call
push
push
lea
push
call
les
test
add
cmpsl
mov
add
add
add
imul
add
add
lret
add
imull
add
add
add
addl
add
ficoml
pop
add
jmp
pop
cmpl
je
push
push
add
push
or
inc
add
sub
sub
ror
pop
dec
pop
push
push
push
push
push
push
push
call
faddl
call
add
xchg
mov
add
add
lret
popf
andl
mov
xchg
test
add
fisubl
std
xchg
add
test
orb
jp
testb
in
in
push
call
push
lea
push
push
push
push
push
push
call
add
mov
imul
add
out
xchg
add
mov
addb
xchg
mov
add
push
add
jbe
hlt
hlt
add
add
mov
push
in
lret
jnp
mov
sti
push
popl
jecxz
lret
add
scas
add
movb
jbe
add
out
test
in
in
lcall
cmp
rol
je
push
push
shr
push
push
pop
add
sub
sub
shr
pop
ror
not
pop
push
add
add
pop
push
push
inc
pop
call
push
sub
pop
cmpl
je
push
push
shl
add
add
push
sub
add
sub
sub
sub
pop
sub
dec
pop
push
lea
push
push
push
call
cmc
add
add
add
jle
pop
pusha
xlat
cli
stc
push
lea
add
or
fildl
add
xchg
mov
add
add
testb
popa
test
add
outsl
ja
jno
cmpsb
lret
add
add
pushf
sub
pop
push
call
push
add
pop
cmpl
je
push
push
xor
rol
push
or
inc
add
shl
sub
lea
xor
xor
pop
lea
lea
pop
push
shr
rol
pop
push
push
lea
push
push
push
push
call
add
hlt
pushw
add
add
pushf
out
lea
add
out
pop
in
lcall
add
add
fildl
filds
test
jmp
mov
in
pop
out
add
jecxz
loopne
add
std
fdiv
add
add
add
test
sahf
mov
add
xchg
add
push
push
call
pop
push
mov
imul
add
cmc
mov
add
add
mov
jae
lods
lret
shl
mov
js
aad
add
add
add
add
sub
pop
cmpl
je
push
push
add
push
and
add
dec
sub
inc
pop
rol
pop
push
push
push
lea
push
lea
push
push
call
aad
add
add
hlt
insb
lea
nop
add
addr16
mov
add
test
add
into
loopne
ljmp
stos
add
add
mov
mov
mov
fs
movl
mov
add
add
test
xchg
add
push
dec
pop
call
push
shr
pop
cmpl
je
push
push
add
add
push
push
pop
add
inc
sub
inc
pop
ror
add
add
pop
push
add
shr
pop
push
call
push
sub
add
pop
cmpl
je
push
push
lea
ror
add
push
push
pop
add
inc
xor
sub
not
pop
inc
pop
push
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
pop
add
scas
pop
cld
add
sarl
add
pop
rcrl
mov
mov
add
add
push
mov
fwait
sti
add
arpl
int3
add
std
shrl
shll
fldenv
jbe
mov
loope
imul
add
shl
add
push
test
test
popl
add
lcall
push
push
push
call
std
add
pop
xchg
add
stc
add
icebp
repnz
add
add
add
add
fadds
out
pop
fsts
lea
add
add
pop
popa
mov
xchg
ljmp
add
cmc
add
imul
data16
add
mov
hlt
lcall
pop
xor
add
cld
push
push
push
push
call
add
add
shll
add
add
add
sti
add
shlb
add
mov
jnp
add
add
cmpsb
out
in
call
cmpl
je
push
push
sub
sub
inc
push
xor
add
sub
inc
sub
shr
pop
ror
add
xor
pop
push
dec
pop
push
push
inc
rol
add
pop
call
push
push
push
push
call
add
add
mov
addl
xchg
push
push
jae
mov
iret
add
les
add
add
lret
add
add
mov
mov
roll
mov
in
lock
cmpl
je
push
push
lea
push
or
inc
add
add
sub
sub
sub
lea
inc
add
pop
sub
not
pop
push
inc
pop
push
call
push
push
push
push
push
call
add
xchg
pop
add
xchg
add
pop
mov
add
mov
xchg
mov
add
add
incb
mov
cld
add
mov
mov
add
xchg
add
out
fucom
sub
pop
cmpl
jne
mov
push
push
lea
push
push
push
lea
push
push
push
push
call
scas
out
stos
lock
jge
pushf
jle
ficomps
jmp
jge
mov
jmp
jb
pop
add
add
add
shrl
movl
push
push
lea
push
push
push
push
call
shr
into
add
lret
jecxz
push
cltd
out
pop
add
jecxz
mov
in
sbbb
add
add
lret
pop
mov
add
add
add
pusha
add
add
clc
jnp
add
lds
add
aad
rcrl
push
pop
add
mov
add
popl
imul
lcall
pop
add
add
xchg
push
dec
repz
push
call
stc
enter
test
roll
faddl
jae
lods
repnz
add
mov
push
add
popf
add
xchg
icebp
test
out
lret
pop
pop
add
loope
pushf
add
add
aam
out
aad
fcmovb
xchg
test
mov
sub
pop
xor
push
inc
pop
pop
push
push
call
add
ret
rcr
lcall
gs
jno
add
jae
rolb
hlt
addl
add
lcall
push
push
push
call
add
add
add
lret
add
add
nop
cli
mov
in
add
push
add
jno
lret
add
testb
bound
into
add
add
mov
xchg
xchg
add
mov
jno
push
add
lcall
pop
push
shl
add
ror
ror
pop
leave
ret
push
dec
dec
lea
pop
push
push
add
sub
xor
pop
mov
push
push
push
push
lea
push
push
push
push
push
push
call
lea
push
add
push
movl
rolb
add
add
xchg
mov
add
add
push
jo
push
iret
mov
add
jb
pop
jl
mov
pop
icebp
mov
mov
sub
pop
add
push
sub
xor
pop
cmpl
jne
push
push
inc
rol
push
or
inc
add
add
add
sub
shl
rol
lea
pop
inc
pop
push
not
not
rol
pop
pushl
push
add
add
ror
pop
call
push
add
shr
dec
pop
push
call
push
push
push
lea
push
push
lea
push
call
push
scas
popf
add
add
add
pop
pop
jge
fsubp
xchg
add
add
mov
aam
rolb
gs
add
clc
add
sti
mov
push
scas
add
scas
jge
cmpsb
lods
sbbl
lcall
ds
add
aas
push
lea
push
push
lea
push
push
lea
push
lea
push
push
call
cltd
add
lcall
xchg
fnstenv
call
xchg
pop
pop
jmp
cltd
add
push
loopne
jnp
add
xchg
mov
add
mov
add
test
pop
add
out
xchg
addr16
out
loopne
call
pop
add
jge
add
test
add
add
shl
rol
call
or
jne
push
ror
shr
pop
mov
push
lea
push
push
lea
push
push
lea
push
push
call
add
jecxz
cmpsl
push
xchg
add
mov
shr
test
mov
into
stos
add
mov
add
add
in
add
int3
add
add
add
in
in
call
ret
push
shr
pop
jmp
push
push
push
push
push
push
push
push
call
lds
loope
cmpsl
nop
add
add
lcall
add
or
add
js
shll
add
addb
cld
sub
pop
cmpl
jne
push
push
rol
push
sub
add
xor
inc
rol
sub
sub
dec
pop
xor
dec
add
not
pop
push
lea
push
push
lea
push
lea
push
push
lea
push
lea
push
push
call
add
add
add
outsl
add
movsb
hlt
shr
popa
pop
xchg
mov
fcompl
mov
into
pop
mov
rorl
repnz
mov
pop
pushl
call
push
add
rol
rol
pop
push
push
push
lea
push
push
lea
push
call
shrb
test
add
cmpsl
push
test
add
out
add
jne
add
jge
add
lods
jo
add
jno
in
add
add
lcall
rclb
ja
push
call
add
add
ja
shll
add
add
add
add
add
add
pushf
loop
cwtl
jp
mov
pop
add
add
add
sub
pop
jmp
cmpl
jne
push
lea
push
push
push
push
call
in
push
add
xchg
mov
stc
scas
out
mov
add
pop
jp
add
jns
sahf
imull
jno
fiadds
mov
or
cltd
fucomp
lret
scas
add
add
fisubrs
xor
cmc
outsl
stos
mov
jl
add
rolb
in
in
pop
mov
push
push
call
popl
add
insb
add
fcmovbe
add
popa
push
mov
mov
addr16
je
mov
jno
in
push
icebp
add
sub
pop
mov
push
push
push
lea
push
call
mov
xchg
int3
xchg
jo
je
add
in
jecxz
jns
add
fldl
add
out
add
add
subl
fildl
addl
pop
sti
sar
hlt
add
in
lock
lcall
push
push
lea
inc
push
push
pop
add
ror
sub
sub
pop
add
xor
lea
shr
pop
push
not
add
pop
pushl
call
push
sub
pop
call
push
push
xor
lea
sub
lea
push
or
not
add
add
ror
sub
sub
dec
pop
not
sub
shr
pop
push
push
push
push
push
push
lea
push
push
push
call
ljmp
add
roll
add
add
cmc
pop
data16
incb
add
add
add
in
fdivr
lcall
jne
push
ror
shr
pop
call
push
push
call
add
scas
js
add
pop
outsl
cltd
gs
movb
fld
xchg
ret
add
add
mov
xchg
add
movsl
add
repnz
xchg
mov
cltd
test
add
add
sub
pop
call
push
push
shl
shl
push
or
not
add
shl
inc
sub
add
lea
xor
pop
sub
sub
pop
push
push
lea
push
lea
push
push
lea
push
push
lea
push
lea
push
call
add
rclb
out
add
shll
stc
add
clc
add
add
xchg
add
stc
jb
in
fdivr
lcall
jne
push
not
sub
pop
call
call
push
push
inc
push
sub
add
sub
sub
sub
lea
xor
pop
shr
not
shr
pop
push
push
push
push
lea
push
call
add
jae
jnp
jns
add
add
add
add
add
mov
add
pusha
add
add
add
movsb
add
add
add
push
data16
add
leave
movsb
add
add
mov
popa
add
rol
add
add
push
add
in
in
pop
pushl
push
add
shr
ror
pop
call
push
add
add
shr
pop
call
push
push
sub
lea
sub
push
and
add
ror
dec
dec
shl
sub
dec
pop
lea
pop
push
inc
pop
pushl
call
push
xor
add
pop
call
push
push
inc
add
push
or
not
add
add
shl
sub
sub
pop
shl
pop
push
lea
push
push
push
push
call
xlat
jb
add
cwtl
addl
add
lods
mov
add
add
add
add
add
add
add
add
scas
sub
les
pop
ret
clc
ja
add
add
lods
add
xchg
cmpsb
add
in
pop
pushl
push
inc
pop
call
push
push
push
call
add
add
jns
cmpl
xchg
push
xchg
test
add
add
mov
popf
arpl
filds
hlt
shlb
out
xorb
out
push
shll
add
add
call
sub
pop
call
push
push
not
sub
push
or
inc
add
rol
ror
rol
shl
sub
sub
sub
pop
pop
push
lea
pop
pushl
push
sub
pop
call
push
push
push
push
push
lea
push
push
push
call
add
add
fcomp
jmp
add
add
jle
stos
mov
add
jno
pop
cmc
iret
add
add
pop
add
enter
mov
test
lock
in
sti
add
in
pop
fwait
sub
pop
call
push
push
add
rol
add
push
xor
add
not
sub
pop
ror
shl
pop
push
xor
inc
rol
add
pop
pushl
call
push
push
call
iret
mov
add
clc
push
fwait
lcall
popa
add
add
add
add
add
add
in
clc
pop
call
push
push
not
not
xor
sub
push
or
inc
add
ror
sub
sub
add
sub
pop
xor
dec
sub
ror
pop
push
sub
dec
ror
pop
pushl
call
push
push
push
lea
push
push
push
call
add
repnz
mov
movb
mov
xchg
shl
jl
add
add
pop
mov
add
out
mov
jb
stos
add
icebp
repnz
add
push
mov
movsl
add
ror
add
add
in
call
call
push
push
lea
push
xor
add
add
shr
sub
shl
inc
ror
pop
not
lea
rol
shl
pop
push
not
add
rol
pop
pushl
call
push
inc
pop
lea
push
push
push
push
push
lea
push
call
add
xchg
add
mov
add
add
aad
add
pushf
stc
push
lcall
add
add
add
ja
stos
movsl
add
add
add
jmp
add
xlat
add
add
add
in
loopne
in
add
fiaddl
add
mov
cwtl
arpl
call
pop
shl
pop
call
push
push
push
and
add
not
sub
add
ror
pop
shr
ror
pop
push
dec
pop
pushl
call
push
shr
pop
call
push
push
push
xor
add
dec
shr
sub
dec
sub
inc
rol
pop
not
ror
ror
pop
push
push
push
call
add
data16
into
add
mov
fiadds
jmp
movsl
jns
xchg
add
xchg
jae
popa
call
push
add
not
xchg
add
flds
bound
lcall
jne
push
shr
pop
call
push
push
push
push
call
mov
lods
mov
popa
les
add
add
in
mov
jge
out
add
add
pop
fiaddl
lods
mov
add
jle
add
add
lods
pusha
add
add
add
add
add
shrb
test
into
loop
cmc
push
or
inc
add
sub
lea
sub
ror
ror
pop
shl
pop
push
lea
xor
add
pop
pushl
push
push
push
lea
push
push
lea
push
call
mov
add
scas
mov
test
int3
add
popf
jnp
lcall
add
aam
xchg
add
ror
lds
add
add
aad
add
add
fiaddl
mulb
add
mov
add
stos
pop
mov
add
xchg
in
call
call
call
push
push
add
dec
push
push
pop
add
rol
sub
ror
rol
pop
ror
inc
pop
push
rol
pop
pushl
call
push
push
rol
not
add
push
xor
add
sub
sub
pop
sub
xor
not
pop
push
push
lea
lea
push
and
add
add
ror
sub
sub
pop
inc
lea
sub
rol
pop
push
push
call
repnz
pop
imul
in
mov
mov
push
add
add
xchg
add
mov
pushf
cmc
add
mov
pop
add
addb
xchg
pop
enter
test
pop
add
add
add
popf
call
rclb
out
arpl
fiadds
stos
add
sub
pop
call
pop
push
lea
rol
pop
dec
jne
push
push
dec
shr
shr
push
or
inc
add
add
add
sub
ror
pop
ror
sub
pop
push
push
push
call
mov
add
jl
mov
add
jbe
jmp
scas
adcl
popf
add
mov
add
out
test
xchg
jl
movsl
add
sub
pop
pushl
push
shl
sub
pop
call
push
sub
dec
shl
pop
lea
push
push
push
push
push
push
push
push
push
lea
push
call
in
xlat
into
cli
enter
mov
lret
imul
jb
roll
jl
mov
fucomip
cld
icebp
add
stos
neg
in
rolb
add
cmc
add
jo
imul
les
push
fcomps
push
push
lea
push
lea
push
lea
push
lea
push
call
lds
add
pop
add
pushf
shrb
add
fwait
add
jns
add
add
add
cld
xchg
add
add
pop
pushf
cmpb
mov
add
mov
add
test
imul
stc
add
loop
sub
pop
push
push
push
pop
push
push
sub
dec
pop
call
push
xor
inc
sub
pop
call
push
push
ror
rol
push
and
add
shl
lea
ror
not
sub
sub
add
xor
pop
sub
lea
pop
push
push
call
ljmp
fistps
add
into
movsl
add
hlt
add
fdivs
fs
addr16
add
push
sub
pop
pushl
push
pop
call
push
push
push
push
lea
push
push
push
call
xchg
loopne
fistpl
out
ljmp
add
jmp
scas
lods
mov
add
add
push
mov
lahf
add
add
add
add
mov
pop
iret
lock
mov
loop
pop
fcom
pop
add
add
cld
add
loopne
add
lcall
rclb
mov
jl
cmc
push
push
call
push
add
push
imul
pushf
fistps
jle
fbstp
add
add
scas
add
add
pop
lock
notb
add
add
add
movsl
xchg
lock
lcall
add
add
push
push
shr
not
sub
push
push
pop
add
xor
add
sub
not
shr
shr
pop
xor
pop
push
shr
add
dec
pop
pushl
push
lea
push
push
push
push
push
call
imul
roll
rcll
pusha
cwtl
mov
rolb
sahf
add
mov
push
mov
div
add
add
leave
sub
pop
call
push
lea
push
call
mov
mov
push
add
mov
push
shrl
jne
xchg
mov
mov
add
add
lock
test
fldl
sbbb
pop
je
add
add
sub
pop
lea
push
push
lea
push
push
push
push
push
push
lea
push
call
add
mov
in
lahf
add
add
into
mov
mov
add
ljmp
add
mov
add
add
mov
add
add
add
jle
add
test
jp
addb
rcl
out
mov
cmpsb
js
push
pop
popf
faddl
arpl
xchg
imul
fcompl
push
lea
push
push
push
push
push
push
lea
push
lea
push
call
push
cltd
add
cld
outsl
mov
cmpsl
add
loopne
jp
add
add
push
add
add
pop
in
fwait
imul
add
lea
out
sub
pop
push
push
push
lea
push
lea
push
push
push
push
push
push
push
call
xorb
cwtl
add
rcrb
out
stos
add
lret
mov
popa
pusha
add
ficomps
imul
xchg
pop
roll
not
out
lret
add
add
xchg
les
add
adcb
es
push
call
aad
add
mov
mov
call
add
jnp
cwtl
jmp
add
add
call
add
add
imul
sub
pop
push
push
lea
pop
call
push
lea
push
push
call
add
add
push
add
leave
lcall
add
mov
mov
xchg
rol
lea
add
add
pop
add
add
xlat
add
xchg
add
push
lods
je
cmpsb
int3
add
add
pop
xchg
mov
ret
in
hlt
pop
lea
push
push
xor
not
push
sub
add
not
sub
add
pop
inc
pop
push
push
push
call
insb
push
scas
mov
add
xchg
test
add
loop
mov
add
xchg
add
mov
cwtl
add
add
add
mov
xchg
sub
cltd
shlb
mov
enter
hlt
pop
pushl
push
pop
call
push
push
xor
pop
call
push
push
ror
ror
shl
inc
push
sub
add
sub
shl
sub
lea
xor
shr
lea
pop
shr
sub
pop
push
push
push
lea
push
push
push
push
call
xchg
add
pusha
add
add
add
fildl
mov
xchg
fildl
add
xor
xlat
lods
std
mov
mov
pop
flds
add
add
fucom
add
add
shl
add
mov
xchg
popf
jp
xchg
add
pop
into
xlat
sub
pop
pushl
push
inc
add
sub
pop
call
push
push
lea
push
lea
push
push
push
call
add
shlb
mov
add
stc
mov
arpl
xchg
add
insb
mov
add
add
rclb
loopne
jg
pushf
or
test
arpl
push
push
call
pop
add
xchg
jae
mov
add
add
xchg
shrb
into
scas
push
cmpsl
add
pop
pop
add
lahf
cld
jne
lret
lods
add
add
add
add
mov
push
add
pop
arpl
pop
sub
pop
mov
push
rol
pop
lea
push
push
dec
shr
push
or
not
add
add
sub
shr
lea
pop
xor
pop
push
sub
add
pop
pushl
push
pop
call
push
push
push
lea
push
lea
push
push
call
imul
mov
jle
xchg
add
jmp
add
mov
cli
add
roll
int
mov
push
jp
loop
call
add
rcrb
nop
roll
in
add
jo
add
mov
add
stos
xchg
add
lcall
add
push
lea
pop
push
push
push
push
push
lea
push
call
pushf
call
cli
add
mov
jmp
add
js
add
arpl
aam
mov
add
popl
push
aad
test
push
add
add
mov
mov
add
cmpsl
push
out
movsb
xlat
cltd
add
mov
lcall
add
enter
jne
push
push
sub
push
sub
add
sub
add
lea
sub
sub
add
pop
add
shl
pop
push
push
push
push
push
lea
push
call
std
jmp
stc
add
cmpsl
add
sti
push
add
cmpsb
imul
in
movsl
nop
mov
add
add
cltd
add
mov
outsl
push
arpl
mov
movsl
in
xchg
ja
imul
lcall
push
ror
not
pop
call
push
push
sub
lea
push
xor
add
sub
shl
shr
xor
pop
sub
pop
push
push
push
push
lea
push
push
call
mov
fcompl
add
add
add
mov
loop
popf
add
lret
add
add
faddl
call
xchg
stos
add
add
jo
add
nop
jle
jno
add
clc
cmpsb
into
js
pop
add
cltd
add
lcall
jne
push
push
push
push
push
call
roll
add
cwtl
add
add
lret
add
mov
movb
out
jge
in
add
pop
in
add
xchg
lods
fcmovne
int
ljmp
in
in
lcall
mov
sub
shr
pop
push
push
shl
pop
call
push
push
add
add
push
sub
add
not
shl
sub
lea
inc
lea
pop
xor
add
pop
push
inc
add
pop
pushl
push
push
push
lea
push
push
push
call
in
add
mov
out
add
add
ljmp
add
add
mov
lea
mov
je
add
add
add
pop
jmp
mov
add
mov
iret
add
enter
add
xchg
add
addl
add
add
add
in
call
call
call
push
lea
push
push
push
push
push
push
call
mov
add
add
out
fiaddl
lds
fstpl
aam
jle
add
jnp
add
add
sarl
roll
add
roll
jge
rcll
frstor
push
mov
in
lcall
and
add
pushl
push
dec
not
ror
pop
mov
push
push
push
push
push
call
add
add
fsubrl
js
add
add
repnz
fs
add
hlt
sbbl
cmpsl
add
add
add
hlt
add
testl
add
add
movsb
neg
add
rolb
fwait
idiv
ljmp
in
mov
roll
fsts
into
push
add
dec
sub
sub
sub
sub
pop
xor
pop
push
lea
push
push
push
push
lea
push
push
lea
push
push
push
call
xchg
add
aam
mov
add
pop
test
jbe
add
jmp
shrb
loope
ja
push
push
add
loopne
pop
add
shlb
popf
xchg
add
push
mov
add
enter
mov
out
push
mov
jp
sub
pop
pushl
push
not
pop
call
push
push
push
push
push
push
push
lea
push
push
call
rolb
mull
jb
rolb
bound
gs
lods
rolb
jnp
mov
cli
add
loope
scas
add
not
mov
rol
add
pop
movb
cmc
rcr
lret
aad
rorl
mov
popf
scas
jno
add
bound
aam
mov
lcall
add
shrb
pop
xlat
push
push
xor
add
shl
xor
shl
add
sub
not
dec
not
pop
lea
shr
pop
push
shr
lea
pop
pushl
push
shr
pop
call
push
add
pop
push
push
not
dec
pop
call
push
xor
rol
pop
leave
add
push
not
shr
pop
pop
pop
push
push
push
push
push
push
push
push
lea
push
push
call
add
add
xchg
xchg
pop
add
lds
push
add
fldenv
jnp
fsubrl
test
add
add
adc
rolb
add
add
add
popf
jecxz
add
add
lahf
jp
jno
add
push
add
testb
add
out
add
jp
mov
in
fcomps
push
push
push
lea
push
push
push
push
push
call
jb
test
cmpsb
fcomps
add
pop
sahf
add
lods
mov
add
pop
add
cmpsb
add
enter
add
or
mov
hlt
enter
cltd
mov
mov
hlt
add
icebp
add
jne
add
aad
enter
add
sub
pop
xor
inc
push
push
push
push
push
push
push
push
push
call
add
clc
call
xchg
lock
call
add
out
rolb
mov
lret
jecxz
xchg
scas
cmpl
sub
lea
pop
leave
ret
push
sub
sub
pop
push
push
sub
pop
mov
push
pop
cmpl
jne
push
sub
pop
mov
push
push
call
lcall
mov
mov
mov
jge
add
add
push
xchg
fwait
pop
imul
cwtl
xchg
add
pop
add
mov
add
sub
pop
jmp
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
add
pop
pushf
lds
add
add
fsubl
cli
mov
add
add
push
add
sub
pop
mov
push
lea
push
push
push
push
call
nop
add
lods
mov
sar
faddp
add
pop
add
mov
xchg
rolb
out
mov
int3
add
lea
jp
mov
jns
pop
add
and
push
push
push
call
jecxz
add
in
add
negb
cli
add
out
fsubs
add
bound
push
mov
push
add
loope
add
add
add
fs
add
pushf
jb
test
std
xchg
iret
jnp
add
call
xor
push
push
lea
push
push
push
lea
push
push
push
call
jp
pop
add
stos
mov
scas
add
add
add
jnp
jbe
xchg
ljmp
add
mov
add
pop
push
pop
add
imul
cwtl
add
pop
add
jecxz
leave
fldt
adcb
vpshufb
add
mov
xor
push
push
push
lea
push
lea
push
call
fsubl
aam
add
add
add
add
mov
mov
scas
push
add
add
mov
add
call
int
xor
push
stc
into
ror
test
add
add
xchg
add
add
xlat
add
add
jp
lret
in
pop
add
push
sub
xor
shl
xor
pop
xor
push
push
push
call
push
add
addb
add
popa
popf
add
je
lea
add
popf
js
add
add
into
add
fidivl
int
jno
add
pop
addb
xchg
in
clc
add
add
add
sub
pop
dec
push
inc
pop
sub
push
lea
push
lea
push
push
lea
push
call
jge
int3
jb
cld
mov
faddl
imul
push
test
mov
add
int
pop
mov
xchg
lods
repnz
not
add
into
jle
fiaddl
add
add
out
int
add
xchg
mov
mov
jecxz
add
push
sub
pop
jmp
push
push
push
push
push
lea
push
push
push
push
push
call
lcall
add
mov
add
add
rcr
aad
fwait
add
addb
add
test
lds
add
lods
add
add
pop
add
js
xlat
add
pop
add
add
test
mov
in
fdivr
lcall
add
add
push
add
pop
pushl
push
push
lea
push
call
xlat
hlt
add
nop
add
push
add
neg
xchg
add
add
faddl
xchg
fists
add
cli
sub
pop
pop
push
shr
add
rol
pop
sub
push
xor
pop
cmp
jne
mov
push
lea
push
push
push
push
push
push
push
call
hlt
js
add
jl
lock
add
rolb
add
add
cmpsl
push
add
add
mov
add
add
jbe
push
mov
imul
fiaddl
add
add
mov
outsl
pusha
add
loop
add
clc
add
add
cltd
push
add
add
lret
add
lcall
dec
cmp
lea
push
call
gs
insb
fsubrl
add
in
scas
stos
mov
test
mov
jo
aam
add
leave
add
add
add
push
add
lcall
jmp
xchg
decl
mov
push
pop
shr
add
push
lea
push
push
push
push
push
lea
push
push
call
add
add
add
pop
lock
add
mov
add
add
out
jno
pushf
pop
jns
mov
add
jmp
pop
ja
inc
outsb
pop
pushl
push
push
push
call
add
hlt
add
add
loope
rolb
sahf
push
xchg
iret
jl
pop
add
imul
add
add
cmpsl
lret
movl
int3
xchg
stos
stos
add
rol
stos
add
add
iret
addr16
lods
cmpsb
mov
push
cmpsb
out
add
out
in
hlt
lcall
shr
push
lea
push
lea
push
push
lea
push
push
lea
push
push
push
push
call
test
imul
outsl
shll
out
pop
add
add
push
into
add
add
mov
add
add
pop
mov
fiadds
arpl
pop
add
sti
int
fs
add
jne
movsb
jle
push
in
std
mov
add
stos
mov
in
fcomps
loope
incl
add
lea
pop
sub
cmp
jne
push
push
push
push
push
lea
push
lea
push
push
call
pushf
gs
add
xchg
add
add
mov
push
out
pop
pushf
aad
push
data16
xchg
xchg
add
add
add
pop
mov
leave
ret
push
push
push
lea
push
push
lea
push
lea
push
lea
push
lea
push
call
lahf
mov
add
jns
add
jge
lds
lea
add
add
aam
add
mov
add
add
jnp
sub
pop
push
mov
push
shl
not
pop
add
push
lea
push
push
lea
push
call
cmpsl
ret
fildl
jno
xlat
pop
add
add
add
add
mov
addb
lcall
add
add
out
add
add
add
shlb
xchg
add
add
shrb
outsl
mov
add
add
in
lock
push
push
push
push
lea
push
push
push
lea
push
call
add
loop
xchg
add
mov
jns
lret
jo
loopne
mov
ret
leave
mov
loope
popa
stos
roll
add
add
add
iret
add
jnp
xchg
lcall
insb
add
cwtl
flds
push
dec
shr
pop
push
push
push
push
call
add
add
mov
push
add
add
pop
add
push
testb
popf
add
add
les
pop
jno
add
fcoms
lret
rorb
add
popf
push
add
pop
add
data16
add
lcall
mov
push
push
push
push
push
push
call
add
mov
clc
call
add
xchg
add
add
add
je
mov
add
in
add
loope
shl
xchg
jle
add
sub
pop
lea
sub
push
rol
pop
mov
push
push
push
push
push
push
push
call
leave
add
adc
add
add
add
jmp
fadds
jb
add
lock
fiaddl
add
mov
ja
imul
add
add
pop
add
nop
incb
mov
jb
add
push
enter
in
in
lcall
ljmp
add
mov
push
not
lea
pop
add
push
push
push
push
lea
push
lea
push
push
push
push
push
call
jae
clc
in
add
xchg
jo
scas
add
jmp
add
data16
scas
mov
icebp
add
nop
mov
sahf
add
push
add
add
loopne
outsl
lods
rolb
rcll
fldl
lcall
jnp
add
push
lea
push
push
lea
push
call
add
add
xchg
aad
push
mov
repnz
lret
add
mov
add
add
mov
cmc
lret
mov
add
lcall
notb
xchg
push
push
aad
adc
lret
lret
mov
and
push
inc
ror
pop
rol
push
push
push
push
lea
push
call
add
test
add
incb
add
xchg
add
jb
add
add
mov
add
clc
int3
add
roll
mov
add
fildll
xchg
lcall
rolb
add
pop
xor
inc
push
shr
pop
cmpb
jne
push
push
push
push
push
push
call
add
pop
js
aad
add
mov
add
rcr
mov
add
mov
fistps
out
push
pop
add
stos
push
sti
add
in
call
ss
push
lea
push
push
push
push
push
push
push
push
call
fcmovu
rolb
cmc
add
into
add
hlt
in
push
add
jne
jle
xorl
subl
movsl
add
loop
mov
imul
gs
in
fcompl
inc
or
test
add
add
lea
push
lea
push
push
push
call
mov
mov
mov
pop
xchg
js
cmpsb
add
lahf
cmpsb
jns
subl
add
add
std
cli
add
add
add
xchg
add
add
std
gs
je
add
lret
cmpsb
cwtl
jbe
jbe
fwait
mov
add
xchg
sub
pop
add
push
ror
dec
pop
cmpl
jne
push
lea
push
lea
push
push
push
push
push
push
push
push
call
add
movb
pop
mov
add
ljmp
fdivrs
subb
add
out
jnp
sahf
cwtl
filds
add
xchg
add
int
push
add
add
je
xchg
jo
add
mov
test
les
add
sub
pop
xor
push
push
push
push
push
push
push
call
add
pop
scas
mov
scas
add
add
roll
add
sti
cmpsl
addr16
xchg
mov
pop
div
aam
lcall
jmp
add
fdivs
into
mov
add
add
add
aam
notb
xchg
xchg
repnz
mov
lcall
pop
push
push
push
push
push
push
call
in
add
add
jp
mov
shlb
jmp
lods
add
mov
mov
add
mov
add
test
cmc
add
add
gs
push
ror
mov
addb
lods
add
mov
add
in
call
shrl
rcrl
addr16
pop
pop
push
sub
pop
leave
push
push
call
add
add
addr16
lds
cltd
add
hlt
test
add
addr16
add
add
add
in
clc
lcall
or
push
xor
lea
ror
pop
mov
push
dec
pop
add
push
add
shr
lea
rol
pop
mov
push
ror
sub
add
sub
pop
push
push
lea
push
lea
push
push
push
push
push
push
call
out
add
add
loopne
repnz
loopne
push
ret
mov
in
int3
mov
shlb
add
popa
push
faddl
sbbl
add
mov
mulw
pop
push
shr
pop
call
push
lea
dec
pop
push
push
ror
pop
call
push
push
call
mov
push
add
icebp
lods
add
add
pop
out
mov
int
mov
add
add
mov
add
mov
lahf
jp
scas
enter
xchg
mov
add
hlt
add
add
xchg
test
add
add
add
add
pop
add
xor
push
lea
push
push
push
lea
push
push
push
call
add
lcall
fwait
std
add
mov
enter
push
mov
fistpl
add
add
mov
mov
add
add
lret
fwait
push
std
iret
lret
add
push
add
sti
add
add
scas
mov
call
add
pop
push
lea
push
push
call
mov
popl
xchg
add
add
jae
fdivs
mov
jnp
add
push
add
jl
add
add
in
add
nop
incb
pop
add
add
hlt
insb
sub
pop
pop
push
shl
sub
rol
pop
pop
push
dec
pop
pop
push
shl
shr
pop
leave
ret
push
push
push
push
call
pop
out
jmp
add
add
pop
xchg
test
int
add
mov
add
mov
mov
test
aad
add
pop
roll
push
add
mov
push
mov
jb
leave
add
add
add
add
push
in
mov
add
add
add
sub
pop
push
push
push
push
push
push
push
push
push
push
call
xchg
fistps
mov
add
add
out
add
add
fimull
add
push
fstpt
filds
in
push
add
jmp
sub
pop
mov
push
shr
lea
xor
inc
pop
add
push
push
lea
push
push
push
push
push
call
roll
data16
add
mov
add
in
add
rcl
sar
aam
iret
data16
xchg
add
nop
add
cwtl
add
leave
add
out
lcall
add
shl
mov
loopne
loope
lcall
in
in
lcall
push
not
rol
rol
pop
push
push
push
push
push
push
push
push
call
add
add
add
add
shlb
mov
add
add
push
flds
mov
add
je
jmp
cld
add
mov
add
mov
add
add
pusha
xchg
add
add
jbe
sub
pop
push
push
push
push
lea
push
push
push
push
push
push
lea
push
call
add
add
fcoml
mov
outsl
add
add
popa
cmpsb
ljmp
clc
mov
add
mov
pop
pop
icebp
add
mov
add
add
push
pop
push
add
pop
xchg
addr16
pusha
add
add
cld
jbe
push
add
mov
cmc
push
aad
mov
mov
in
fdivr
lcall
mov
push
not
sub
ror
pop
push
pop
push
lea
ror
shr
pop
lea
push
push
push
call
in
enter
add
add
add
add
add
add
add
lret
add
add
in
mov
scas
sti
mov
mov
add
iret
lods
add
fdivrl
add
add
add
xchg
add
fildl
movsb
insb
lahf
icebp
push
cmpsb
mov
lcall
ljmp
pusha
add
add
mov
add
pop
pop
cld
pushf
mov
add
add
add
push
ja
add
add
int3
add
loop
add
jnp
add
add
mov
add
add
in
cmpsb
loope
mov
push
pop
add
pop
icebp
mov
xlat
jb
add
loopne
add
add
lcall
adc
ret
pop
shr
add
push
sub
rol
add
pop
mov
add
push
shl
ror
pop
pushl
popl
push
push
push
push
push
push
lea
push
push
push
call
add
push
add
add
add
rclb
mov
add
add
add
add
add
popf
add
add
xchg
loop
faddp
add
int
add
push
add
jnp
add
add
sub
pop
mov
push
pop
add
xor
push
xor
pop
lea
push
push
push
lea
push
push
push
lea
push
push
push
push
call
std
add
xchg
pop
lea
push
cwtl
add
mov
add
mov
pop
mov
fistl
add
xchg
fiaddl
bound
movsl
pop
add
lret
add
add
repnz
popa
arpl
lret
imul
add
lods
add
leave
ret
jns
mov
jmp
in
fcomps
adc
fdiv
roll
mov
rcll
adc
push
pop
xchg
pop
lea
push
push
call
add
jmp
xlat
ljmp
jge
add
pop
pop
add
add
add
xchg
add
pop
add
addb
add
jle
add
add
cld
add
push
jmp
loope
cld
shlb
sti
add
sub
pop
xor
push
push
call
jecxz
push
add
add
mov
add
add
add
push
fs
xorl
jbe
loopne
add
add
imul
add
add
xchg
addl
in
clc
pop
rol
push
sub
shr
add
pop
nop
push
dec
inc
pop
nop
push
sub
rol
pop
xor
push
push
lea
push
push
push
call
in
shl
add
mov
pop
xchg
add
xchg
xchg
nop
add
gs
add
pop
xchg
add
add
pop
mov
addb
lahf
sti
popa
add
add
add
add
enter
addr16
popl
add
add
in
in
lcall
push
push
push
lea
push
lea
push
push
call
xchg
imul
arpl
mov
js
addb
add
jnp
add
add
fimull
add
add
mov
mov
faddl
add
fisubs
aam
in
in
pusha
fsin
add
arpl
jmp
xchg
lahf
data16
clc
andl
call
sub
add
xor
sub
pop
nop
push
push
call
add
add
arpl
int3
mov
add
fsubrs
mov
int
jle
add
movsl
mov
in
cld
xchg
loopne
int3
xchg
popa
add
add
mov
add
lea
sub
pop
nop
push
push
push
call
add
out
add
add
add
add
add
add
add
xlat
mov
lcall
loope
pop
xchg
mov
hlt
pop
cmpb
jne
push
dec
pop
add
push
xor
not
pop
nop
nop
push
push
push
push
push
push
call
add
mov
lcall
insb
rolb
mov
filds
jae
testl
jnp
add
pop
ffreep
pop
add
add
add
in
mov
add
add
popf
add
jp
add
add
lcall
inc
or
test
add
pop
nop
push
not
shl
pop
nop
push
push
push
push
push
push
push
lea
push
push
call
push
xlat
mov
add
add
lods
mov
nop
fsubs
add
test
into
std
add
add
movsb
push
add
ljmp
xchg
add
mov
std
mov
jne
add
rolb
lcall
nop
push
push
lea
push
push
push
push
lea
push
call
pop
stc
add
mov
shll
testb
movsb
lret
in
add
mov
fiaddl
pop
xchg
cmpsb
add
std
jmp
notb
xchg
in
sub
pop
nop
push
push
call
stc
add
cltd
add
add
add
test
mov
lock
add
push
add
in
add
add
call
incb
scas
lds
bound
data16
add
jge
jo
add
push
add
enter
out
pop
out
in
clc
pop
cmp
jb
push
push
push
push
push
call
loopne
in
cmpl
add
mov
add
add
hlt
mov
add
xlat
outsl
push
jge
add
les
pop
ljmp
add
cmc
mov
mov
mov
pop
mov
into
lods
add
mov
sub
pop
xor
push
pop
jmp
mov
push
add
shr
sub
pop
add
movzwl
push
push
push
push
push
lea
push
push
push
push
push
call
mov
imul
add
into
stos
movsl
stos
xbegin
cltd
into
add
add
add
neg
mov
fadds
incb
add
jnp
popf
add
add
call
cld
movsb
push
add
add
int
movb
cld
add
icebp
mov
movsl
hlt
add
add
in
fdivr
lcall
inc
sbb
shr
not
sub
pop
add
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
enter
jmp
sahf
push
add
mov
out
popa
add
add
jb
add
enter
xchg
jns
je
add
imul
add
add
mov
enter
sub
pop
mov
push
lea
sub
pop
xor
xor
push
push
lea
push
lea
push
call
popf
mov
in
mov
lods
mov
mov
fstl
cwtl
shlb
jecxz
xlat
fwait
pop
stos
mov
add
loope
push
not
sub
add
pop
xor
shl
push
push
push
push
push
push
push
lea
push
push
lea
push
call
add
cli
jle
filds
add
outsl
pop
insb
arpl
lret
add
into
add
xlat
clc
add
add
add
add
add
add
mov
sub
pop
xor
push
inc
not
shl
pop
shl
xor
push
lea
push
call
add
xchg
fnsave
cmc
lret
push
pop
add
ja
add
cmpsl
mov
movsl
jp
imulb
lret
add
pop
fildl
add
stos
shl
mov
bound
stc
mov
add
in
clc
pop
mov
push
sub
sub
pop
add
pop
push
inc
dec
pop
pop
push
push
push
call
add
in
add
fs
add
add
popf
add
arpl
lea
add
sti
add
add
add
loope
rcrl
push
add
mov
add
pop
call
add
icebp
push
add
mov
jecxz
jge
fidivrl
scas
xchg
sub
pop
pop
push
inc
pop
pop
push
lea
push
lea
push
push
push
lea
push
call
add
add
test
add
pop
add
add
pusha
cwtl
add
jne
lock
add
imul
add
lds
mov
pop
add
lods
fwait
add
les
leave
push
push
push
call
fildl
jmp
xchg
jno
aad
add
inc
out
mov
add
xchg
stos
xchg
cmc
lret
movsb
lods
xchg
shll
enter
sti
test
leave
add
mov
add
add
add
pop
sub
pop
ret
push
shl
rol
pop
push
push
push
push
lea
push
lea
push
call
pop
pop
cmc
xchg
add
imul
xchg
movsl
add
add
jo
add
loopne
add
ret
add
add
scas
pop
jnp
add
add
add
outsl
add
mov
mov
push
lea
not
add
pop
push
push
push
sub
pop
push
push
push
push
lea
push
lea
push
push
lea
push
push
lea
push
call
add
into
add
fildl
incb
arpl
add
mov
add
cmc
xchg
lock
mov
add
out
lea
addr16
pop
push
mov
push
add
pop
mov
push
push
call
sti
cltd
les
lods
pop
roll
test
pop
les
add
mov
add
cwtl
hlt
add
stos
add
xchg
shr
xorb
lcall
jge
test
je
push
lea
push
push
push
push
push
push
push
call
jns
mov
imul
add
add
pop
add
add
xchg
add
add
vandps
mov
pop
filds
add
jecxz
add
fs
jl
test
shlb
imul
push
add
add
in
loopne
mov
test
je
push
lea
pop
mov
push
push
lea
push
push
lea
push
push
call
add
add
mov
loopne
pop
js
fucomip
sti
int
mov
add
lds
add
into
cld
lock
mov
in
cmp
xlat
mov
add
leave
push
add
mov
scas
add
scas
sub
pop
mov
push
push
call
add
clc
add
rolb
add
mov
add
mov
add
lcall
pop
fwait
add
add
add
mov
testl
jp
fldl
outsl
cli
mov
add
add
mov
ret
add
mov
mov
xchg
sub
pop
mov
push
push
push
call
enter
add
mov
add
test
add
fdivs
fnstenv
add
out
and
gs
data16
add
bound
cmp
mov
add
incb
add
add
mov
cwtl
add
faddl
add
mov
shll
hlt
lcall
push
lea
inc
pop
cmp
je
push
push
push
call
mov
add
add
jno
pop
add
test
xchg
jmp
cli
out
cld
add
add
jle
mov
add
add
add
jmp
mov
mov
je
sub
pop
test
je
mov
push
push
lea
push
push
push
push
push
lea
push
push
call
jo
add
mov
add
add
add
lea
jge
add
add
cmpsl
add
add
add
shll
sti
mov
add
mov
add
push
movsb
mov
push
mov
push
repnz
outsl
mov
add
xlat
xchg
repnz
fwait
add
add
sub
pop
inc
cmp
je
push
ror
sub
not
pop
test
jne
push
lea
sub
add
pop
xor
pop
push
add
pop
pop
pop
push
push
push
push
push
push
lea
push
push
call
add
lcall
add
cmpsl
filds
add
lea
add
add
add
pop
push
add
sarl
int3
sub
pop
pop
push
push
lea
push
push
push
push
push
call
add
mov
rol
fldl
mov
add
add
add
add
add
add
sub
pop
leave
push
push
push
lea
push
push
push
push
lea
push
push
call
mov
imul
ljmp
loopne
add
push
add
add
lods
mov
add
testl
add
xlat
add
pushf
add
add
add
out
mov
std
add
roll
lret
add
lcall
or
mov
push
not
shl
pop
inc
cmp
jne
push
shl
inc
pop
lea
push
shr
add
ror
pop
mov
push
shl
shr
pop
test
je
mov
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
fidivrs
iret
mov
xchg
push
cltd
iret
pop
in
std
insb
movl
add
add
add
jb
ja
jmp
pop
push
sti
test
out
in
loopne
add
push
push
push
push
call
add
lahf
arpl
push
imul
lcall
js
mov
hlt
pop
add
push
addr16
int
add
andb
loope
add
push
mov
add
add
pop
add
shll
imul
add
add
add
push
sub
pop
cmp
jne
push
lea
lea
pop
mov
test
je
push
push
lea
push
push
push
push
push
push
call
test
pop
add
ret
popf
add
mov
fiaddl
add
jns
add
add
add
mov
je
add
stos
mov
int3
add
jno
mov
jecxz
add
out
fildl
test
add
add
mov
lcall
callw
cmc
shl
shl
pop
add
cmp
je
push
push
push
lea
push
push
call
add
shl
stos
add
scas
sarl
add
add
add
add
cmc
add
test
add
mov
add
add
push
add
add
mov
add
fcmovnb
lret
push
mov
add
roll
add
add
xchg
sub
pop
jmp
xor
push
add
pop
pop
push
add
pop
pop
pop
push
push
push
push
lea
push
push
call
add
add
andl
jne
call
xchg
js
je
in
add
add
pop
iret
add
push
push
call
add
lea
add
scas
add
fwait
add
stos
mov
addb
add
popf
add
lds
int
filds
jae
into
add
pop
icebp
test
add
jne
add
stos
xchg
lods
insb
movsl
push
add
mov
repnz
clc
pop
leave
ret
push
rol
sub
pop
lea
pop
push
xor
sub
pop
pop
pop
push
push
call
stos
add
test
push
movsb
ficompl
add
add
popa
add
xchg
mov
pop
andl
add
push
add
lcall
push
pop
leave
push
pop
ret
push
push
lea
push
push
push
push
push
lea
push
call
hlt
add
mov
aam
pushf
add
mov
pop
add
cmpsb
jbe
mov
jb
mov
add
pop
pop
push
push
andl
add
add
add
add
sub
add
fadd
in
jnp
add
add
lds
add
mov
mov
add
lcall
pop
push
push
push
push
push
push
push
push
lea
push
call
add
lret
add
loop
mov
in
leave
mov
loope
add
out
push
hlt
xlat
fcomi
add
mov
pop
add
cmpsl
add
add
push
add
out
add
mull
stos
mov
cltd
xchg
outsl
ret
fadds
cltd
add
add
pop
mov
sub
pop
pop
push
shl
inc
lea
pop
pop
pop
push
add
lea
not
pop
leave
push
sub
pop
ret
xor
cmp
xchg
adc
icebp
adc
and
adc
cmp
cmp
cmp
sub
cmp
xor
adc
jb
adc
mov
add
mov
fcmove
add
mov
pop
sub
dec
xor
jp
adc
fs
jecxz
imul
rcll
loope
dec
sarb
aad
dec
shrb
sahf
adc
mov
data16
loope
pop
pop
adc
repz
or
mov
adc
push
mov
rcrl
rclb
icebp
inc
pushf
push
sub
sarl
das
aaa
sub
shlb
jo
mov
repz
adc
push
leave
xchg
sti
loopne
repz
mov
cmp
pop
out
add
push
jbe
push
loop
and
stos
jno
out
pop
bound
and
cmp
jbe
mov
cmp
loop
cs
inc
imul
and
push
mov
adc
sbbl
lods
lcall
sub
arpl
mov
push
push
and
and
mov
outsb
and
mov
ret
into
cli
jecxz
xchg
nopl
ds
jb
bound
pop
test
mov
mov
loop
outsb
mov
sbb
out
dec
fimull
and
cwtl
in
rolb
and
das
sbb
mov
sub
sub
sub
icebp
push
mov
and
insl
mov
mov
and
sub
push
push
jle
or
jp
int
incl
ret
inc
mov
lret
jnp
xor
pop
jnp
pushf
jb
mov
mov
xchg
mull
nop
sti
scas
fucomp
adc
test
loope
call
sbb
adc
adc
addb
fildl
inc
mov
cli
ss
xchg
stos
or
mov
xchg
or
sarl
or
ret
fwait
dec
sahf
push
and
out
sti
dec
jge
movsb
inc
mov
jp
test
shl
mov
in
out
xchg
xor
movsb
jnp
loop
dec
cs
ljmp
jbe
in
sub
ss
sbb
outsl
or
adc
push
cmpl
mov
jl
pop
mov
mov
sub
inc
sbb
pminsw
xor
test
dec
std
ljmp
clc
ja
jbe
push
aaa
imulb
arpl
add
jb
roll
notb
push
mov
mov
bound
call
add
je
jae
lods
sub
cmp
sbb
adc
fsubp
test
sub
insl
push
lcall
mov
data16
add
lods
mov
and
jne
pop
sbb
in
adc
repz
mov
add
or
or
sahf
daa
ljmp
scas
push
dec
and
pop
aaa
adc
mov
je
ja
mov
adc
xor
jo
imul
faddl
mov
cmp
inc
lock
cmp
aam
inc
into
lods
dec
ret
stc
call
lods
lods
cmc
gs
mov
sbb
test
stc
ja
inc
std
sub
lcall
dec
adc
push
popa
sbb
add
push
mov
xchg
rclb
jmp
lods
cmp
jae
mov
cmp
loop
or
inc
test
lods
scas
fcompl
jnp
mov
ret
fbstp
daa
push
xchg
and
jge
mov
or
ds
int
orb
mov
jge
roll
jae
das
scas
sbb
pop
orl
test
pushf
pop
jge
sub
cmp
fdivrs
push
adc
mov
mov
fbld
jmp
mov
es
les
lret
push
mov
mov
filds
lret
or
daa
jb
cmp
decl
add
mov
mov
int
mov
dec
add
jae
stos
cmp
sub
inc
push
cmc
int
in
and
and
pop
mov
lcall
repz
or
fwait
pushf
out
imul
mov
add
iret
fs
inc
and
mov
add
mov
mov
cmpb
jle
mov
into
mov
sarl
cld
mov
mov
or
and
xor
xor
cmp
push
lods
mov
dec
sbb
adc
aad
ja,pn
insl
fs
fldcw
repnz
outsl
mov
push
dec
bound
add
push
std
fstp
scas
jns
scas
lods
dec
test
dec
dec
mov
icebp
jmp
jmp
gs
loop
je
int
cmpsb
jge
movsl
sub
xchg
mov
mov
xor
fidivl
stc
fs
xchg
enter
push
out
jge
add
aad
orb
andl
jmp
ret
les
pop
sbb
mov
inc
cli
push
jae
inc
inc
sub
rorl
jecxz
jecxz
addr16
or
in
inc
clc
pop
into
cmp
cmp
das
sti
jp
dec
loopne
xorb
sub
sbb
rcrb
jbe
shlb
mov
mov
jle
jl
mov
cmp
or
sti
lret
testb
lahf
mov
and
adc
cmp
les
inc
cmp
mov
fistps
les
push
lods
sbb
mov
insl
add
cs
push
xchg
adc
adc
into
loop
pop
mov
fdivrl
xor
cltd
fwait
pop
arpl
pop
mov
inc
test
fcoml
mov
mov
mov
jp
add
xor
jmp
shll
push
mov
jb
cltd
stos
js
shll
cs
dec
push
xchg
or
xlat
ret
lods
pop
add
mov
push
xchg
cmc
cld
sbb
insb
lock
jecxz
sti
pop
in
cltd
mov
jmp
aas
mov
cmp
dec
outsl
es
nop
push
out
aas
stos
test
repnz
sub
push
cmp
bound
mov
in
mov
jmp
dec
out
fiadds
ret
ret
push
pushf
adc
xchg
test
rcrl
jns
std
leave
inc
insl
cmp
mov
jb
mov
jge
sbb
jae,pt
imul
jmp
les
push
fmuls
push
imul
xor
mov
add
sahf
outsb
push
mov
push
popa
mov
lret
or
xchg
repz
hlt
mov
repnz
mov
daa
or
cld
enter
lahf
out
mov
idivl
mov
jo
xlat
imul
inc
test
sbb
mov
push
nop
ret
jge
adc
mov
aaa
out
pavgb
aaa
mov
push
andb
sub
sbb
jns
sub
popf
dec
inc
sbb
jb
jmp
cmp
mov
adc
adc
scas
inc
cmpsl
mov
jg
lea
sbb
jecxz
ror
pop
and
pop
mov
lea
rolb
jmp
cwtl
sbb
flds
mov
or
add
dec
stos
xor
outsl
and
dec
xlat
lea
stos
jbe
cmpsl
xchg
imul
add
xor
fs
sarb
mov
inc
or
pop
sahf
dec
adcb
push
insl
mov
push
lds
cmp
movsl
adc
pop
jae
adc
ja
xchg
add
movsl
sbb
jg
adc
cmpsl
shrb
xchg
lock
or
ret
push
shlb
cs
lahf
not
xchg
mov
loopne
repz
push
or
fdivr
mov
mov
ss
lcall
mov
in
inc
popa
inc
rcrl
js
ljmp
les
xchg
es
sbb
xchg
inc
or
in
cs
mov
xchg
bound
outsb
jae
add
imul
pop
mov
adc
pop
mov
test
insl
or
sti
inc
pop
fcoms
xor
lea
ret
fldenv
jno
lea
jnp
test
cmp
sub
add
and
outsb
inc
das
and
adc
ds
sbb
rorl
addr16
mov
fwait
dec
inc
leave
push
cwtl
ret
jns
pushf
mov
insl
out
dec
jmp
pop
daa
stos
adc
mov
out
mov
mov
les
sbb
outsb
divb
or
lahf
je
scas
sarb
ljmp
addr16
loop
jae
pop
ficompl
jp
pop
pop
lods
loopne
jns
test
lret
jbe
mov
in
test
negl
in
mov
ret
push
cmpsl
cli
mov
and
test
ds
inc
xchg
mov
jno
jl
push
loop
cld
lods
or
mov
lds
xor
jp
outsl
mov
mov
dec
cmpsl
sub
jg
stos
jg
fimuls
repz
adc
push
fisubl
enter
sub
mov
mov
cmc
popf
popf
inc
ret
jecxz
mov
jo
or
outsl
test
xor
inc
mov
and
sbb
add
xchg
and
sarb
sub
jb
inc
dec
xor
xchg
cmp
inc
lock
dec
sarl
stos
adc
and
jg
ret
ror
rcl
or
push
pop
in
dec
mov
jp
xchg
xchg
dec
adc
mov
adc
insl
jbe
adc
inc
loope
iret
mov
addr16
mov
ret
cmp
xorl
sub
js
sbb
leave
lret
int3
repz
jne
cmc
insb
push
cwtl
dec
clc
xor
fwait
stos
push
jl
dec
xchg
mov
lea
push
addr16
fst
sub
mov
xor
cmp
xor
outsl
mov
out
fstl
add
and
mov
push
and
jp
pop
jo
inc
jns
ret
aad
jg
xchg
push
push
pop
jecxz
pop
and
int
xor
xor
cmpsb
pusha
aad
xchg
cli
scas
jae
cmpsb
push
cmc
or
enter
and
cmp
pop
inc
adc
shll
test
lock
xchg
or
mov
push
int3
sub
pop
cltd
push
in
and
sub
add
adc
rcrb
cmpb
mov
xlat
adc
iret
stos
ljmp
or
pusha
cli
xchg
insb
or
lret
or
cmpsb
shll
lods
fwait
mov
xor
pop
daa
mov
pop
outsl
and
xchg
cmovns
cmp
inc
out
in
jo
fldenv
test
mov
arpl
mov
pop
xor
ret
inc
imul
std
cmpsl
ret
mov
dec
pusha
push
cltd
pop
rolb
pop
push
fistpll
jecxz
fdivl
fs
dec
push
and
pushf
fbstp
adc
pushf
ljmp
inc
out
inc
mov
data16
fcompl
add
jecxz
mov
sbb
push
mov
cltd
jns
mov
xchg
mov
push
lret
cmp
cli
lret
ds
fiaddl
push
fs
out
mov
pop
xchg
daa
pop
push
cmovge
cmpsl
repnz
imul
hlt
dec
stos
jb
mov
pop
lret
adc
inc
push
add
mov
cmpsl
jnp
das
xor
dec
fs
stc
mov
push
xchg
dec
test
sbb
in
sbb
add
lcall
movsb
cli
jmp
adc
cmp
cli
or
js
dec
and
test
call
mov
cmpsb
and
sbb
iret
insl
mov
or
inc
dec
cmp
mov
int3
xor
sbb
and
push
and
push
mov
push
shrl
sub
orb
cmpsb
out
ret
push
sar
push
or
inc
dec
imul
push
jo
mov
cli
push
dec
imul
dec
push
mov
mov
inc
sub
dec
xorl
mov
pop
adc
push
xchg
add
repz
test
inc
push
xor
mov
in
enter
mov
dec
dec
ret
jp
mov
xchg
movsb
adc
pusha
pop
jl
mulb
cwtl
and
in
call
push
adcb
mov
or
sbb
repnz
outsb
aam
mov
sti
inc
imul
lods
xchg
xor
dec
jne
in
call
sbb
test
mov
inc
cwtl
rcll
aaa
mov
sbb
std
cmc
jbe
in
leave
mov
in
outsb
fs
js
pop
push
dec
punpckhdq
xor
or
xor
test
outsb
jo
mov
daa
or
mov
loop
addr16
xchg
std
mov
mov
jb
jbe
xor
adc
jmp
call
jno
in
out
nop
fwait
sti
cmc
xor
lods
iret
test
sti
cltd
daa
call
cmp
popf
mov
xchg
cld
and
mov
icebp
fistpll
sti
cli
add
push
iret
pop
and
addr16
popa
repz
ss
icebp
xor
sbb
and
ss
pusha
mov
jno
inc
insl
xchg
mov
lcall
jbe
mov
stos
movsb
mov
sub
dec
sub
or
mov
cltd
cmpsb
jg
xor
lods
and
cmpsl
mov
lahf
push
push
xchg
jecxz
out
cmpsl
and
mov
loopne
sbb
mov
shl
daa
xchg
adc
sub
push
push
in
dec
std
into
outsb
xchg
pop
mov
repnz
mov
mov
ja
xor
insl
jle
aam
adc
adc
and
dec
ljmp
jmp
sub
xor
dec
or
fs
cli
ds
pop
add
jl
dec
test
jmp
andl
adc
or
xor
or
sbb
cmp
fiaddl
add
shl
mov
fmulp
repz
loop
pop
pop
jo
les
insl
fldenv
jb
in
stos
sbb
dec
xchg
add
xor
xor
es
cmpsl
arpl
add
int
jle
mov
sti
sub
adcb
mov
jne
dec
aad
mov
les
and
lcall
mov
jae
test
jecxz
sub
in
lods
add
insl
insl
and
pcmpgtd
mov
nop
cmpsb
inc
sub
sti
push
ret
jae
sbb
xchg
mov
inc
pop
cmp
lret
mov
lock
mov
in
mov
pop
loop
xor
sti
repz
push
shrl
or
mov
into
movsb
jmp
out
sbb
fstpl
xchg
int
adc
enter
pop
or
lahf
xor
inc
pop
push
loope
mov
jle
fdivr
push
xchg
pop
movsb
lret
mov
test
inc
popf
xchg
fstps
movsb
pop
icebp
clc
jmp
push
push
push
mov
ds
mov
icebp
int
gs
int3
in
xchg
adc
leave
ror
push
in
push
mov
rol
xchg
pop
fisubs
push
mov
pop
mov
inc
and
dec
clc
or
mov
add
inc
jnp
push
test
jo
jns
dec
rcrl
mov
fmull
dec
sub
jno
mov
xchg
repnz
jo
push
sbb
inc
mov
cmp
lds
pop
mov
arpl
jbe
lahf
std
push
test
or
test
mov
fs
xchg
jecxz
jecxz
inc
int
repnz
ret
lods
cld
jb
aas
sarb
scas
push
pop
test
call
mov
pop
in
cmp
mov
out
call
repz
ficompl
mov
rcll
sbb
popa
sti
xchg
jecxz
inc
sbbb
or
cmp
out
daa
xchg
add
cld
mov
int
dec
dec
enter
mov
dec
inc
cmpsb
xor
mov
std
mov
or
stc
aad
sbb
xchg
inc
and
andb
or
aaa
dec
or
dec
lods
mov
xchg
dec
lods
xchg
addr16
aaa
pop
jmp
arpl
mov
frstor
loopne
add
repz
push
pop
daa
xchg
and
jbe
ja
mov
cmp
orb
sahf
push
dec
jo
lock
in
xor
sbb
or
adc
adc
push
ljmp
cmp
sahf
mov
push
call
sbb
sbb
mov
jp
adc
mov
lods
or
mov
add
lret
jge
add
test
rcrb
push
jmp
adc
cmpsb
imul
cs
in
mov
int
out
cmp
repz
shrl
mov
call
cmpsl
out
cmpsl
sbb
ret
xor
es
sub
dec
push
jo
push
and
addr16
je
xchg
or
xchg
fistps
aaa
mov
aaa
push
and
stc
je
xchg
xor
add
je
mov
pop
test
jne
dec
icebp
shrb
sub
pop
in
cmpsb
jne
dec
push
out
pop
and
ret
dec
xchg
mov
jp
inc
ficompl
adc
dec
mov
pop
fstp
in
daa
inc
inc
imul
addb
stos
push
pop
xchg
add
push
pusha
and
cltd
push
addb
aas
push
shlb
jbe,pt
push
mov
clc
inc
pushf
stc
les
int
dec
cli
or
pop
xor
leave
pop
lret
sub
sahf
jbe
jns
fistpl
test
or
pop
add
push
jo
enter
and
mov
popa
pand
adc
sarl
hlt
fsubs
sub
sub
inc
movsb
cmp
xchg
jae
rorl
push
rclb
jne
std
pushf
inc
mov
adc
jae
mov
aas
push
das
stc
sbb
ljmp
and
int3
xor
pop
pop
popf
and
add
out
xchg
rclb
dec
and
pop
fwait
lcall
add
pop
popa
stos
test
jmp
mov
xorb
xchg
lahf
scas
adc
push
lcall
or
ret
cli
jnp
jp
sub
jne
jno
push
in
xor
fnstsw
addl
mov
mov
xchg
mov
or
out
sub
pop
mov
pop
push
loopew
test
sub
or
xchg
add
ds
aad
into
xchg
stos
xchg
adc
or
mov
mov
adc
pop
mov
sahf
sbb
mov
mov
inc
fs
or
inc
loop
jmp
sub
xchg
push
sub
es
cmp
dec
xchg
mov
jbe
push
aam
or
clc
and
jae
inc
ret
insb
adc
push
jno
loopne
jecxz
pop
ficoml
push
mov
cmp
xchg
cltd
stc
out
pushf
je
adc
inc
jle
leave
cwtl
out
xor
mov
orb
int
push
fwait
pop
xlat
inc
enter
popf
loopne
ss
jge
outsb
inc
insl
ret
adc
push
cmp
xor
ljmp
arpl
sti
sbb
lods
jmp
and
pop
push
sbb
jmp
mov
mov
loope
es
and
gs
fiadds
fdivs
lea
jp
mov
mov
dec
adc
sbb
cmc
lds
pop
cmp
subl
jns
aas
lea
cmpsl
ficompl
push
addr16
jo
lock
xchg
mov
ds
xchg
jae
ret
mov
lods
lods
enter
dec
insb
push
pop
popf
and
and
xchg
inc
push
cmpsb
sbb
je
fwait
inc
ret
mov
test
jecxz
repz
jmp
jae
imul
jl
sbb
lock
push
fsubrs
pop
xchg
outsb
gs
icebp
int
xor
push
sbb
cmp
in
pop
sub
mov
push
scas
cltd
sti
fists
stos
mov
mov
scas
dec
sbb
leave
push
divb
sahf
xchg
sub
mov
cmp
inc
mov
repnz
idivl
sbb
jecxz
inc
or
jg
or
mov
out
cmp
xchg
jge
add
xchg
xor
jg
in
sti
lods
mov
shlb
ds
lcall
or
sub
mov
mov
rclb
pop
sbb
nop
out
ss
arpl
stos
mov
xchg
pushf
jnp
aam
stos
ds
int
sbb
lods
pushf
or
xor
insl
int
mov
push
push
cmp
pop
add
mov
gs
adc
fstpt
xchg
add
mov
arpl
call
js
jno
jae
enter
orb
cmp
pop
dec
xlat
adc
or
push
scas
pushf
divb
lods
adc
outsb
test
stos
mov
test
decl
xor
and
test
sub
mov
cmc
outsb
bound
aad
add
mov
in
enter
outsb
arpl
cmc
fnstenv
out
dec
xorl
fs
shll
inc
sub
stos
adc
incl
lcall
xor
addb
jae
mov
pop
les
pop
cmc
je
adc
movsb
push
outsb
popf
push
outsb
push
inc
and
call
cli
dec
fidivl
fdivrs
pop
push
ret
imul
rcrb
cld
push
negb
push
shll
adcb
test
outsl
out
mov
xchg
push
adc
iret
stc
ja
sahf
sbb
and
ja
mov
inc
fists
push
sub
cld
shrl
mov
mulb
cmp
dec
das
pop
adc
cmp
mov
loop
or
out
arpl
nop
ret
leave
jo
sub
pop
int3
mov
stc
mov
adc
xor
xchg
sbb
lret
jns
xlat
pop
fdivl
lods
and
mov
pop
xor
pop
adc
dec
nop
xchg
push
test
out
jge
sbb
ja
imul
push
jb
mov
dec
jae
std
push
cmp
addr16
call
push
mov
jo
insl
lock
in
inc
ret
icebp
insb
es
inc
jnp
xorl
cli
les
pushf
insl
pop
out
popa
pop
ret
in
cmc
popf
imul
xchg
aam
sub
fcompl
push
or
adc
inc
mov
lds
adc
and
out
and
or
inc
jl
xor
add
lds
cltd
gs
sbb
aad
add
test
in
cli
dec
adc
roll
lea
sbb
xor
jmp
je
imul
push
inc
test
in
stc
lret
xlat
pop
fisttps
push
push
jecxz
sbb
xor
jae
data16
push
push
add
and
push
mov
mov
cmp
jo
pop
jmp
mov
jne
sub
ret
mov
rolb
jge
xchg
pop
sub
lods
push
fbld
lods
and
repz
pop
jmp
inc
inc
mov
sbb
mov
ret
loop
aad
mov
or
in
mov
add
cli
sbb
adc
push
ja
aad
push
lret
push
or
loop
push
sub
xchg
hlt
or
pop
cmp
and
pushf
add
movsb
adc
dec
push
lea
movsb
sub
pop
fdivr
and
jmp
cmp
mov
xchg
cld
jbe
loope
jne
shll
arpl
xchg
dec
xchg
sahf
mov
or
out
test
insl
pop
faddl
repnz
xchg
pop
mov
repnz
mov
fisubs
les
mov
fnstenv
in
cmpsb
inc
add
xchg
loopne
push
test
rorl
mov
xlat
cltd
lcall
rcll
imul
sbb
push
in
sbb
cmp
add
push
enter
mov
jge
inc
popf
fcompl
dec
push
jo
lods
cld
dec
popa
adc
inc
int
mov
xor
mov
cli
iret
jg
jno
xor
jae
cmpb
fwait
daa
add
loope
xor
dec
mov
rcrl
and
test
mov
stos
ja
and
inc
pop
imul
and
sbb
pop
cmp
dec
in
mov
mov
pop
pop
arpl
cmc
imul
cmp
mov
push
jmp
in
clc
jp
popf
inc
mov
jg
out
nop
jb
mov
inc
movsl
fwait
cmpsl
inc
dec
cwtl
add
iret
dec
lock
inc
xor
dec
outsl
call
dec
mov
lcall
js
out
xchg
push
adc
mov
jo
xchg
arpl
jae
insb
pop
fstpt
jb
mov
jmp
call
std
and
push
cmp
sarl
shrb
mov
loope
add
sarl
cs
ljmp
pop
cli
jl
and
push
cld
in
sbb
cmc
daa
dec
xchg
or
scas
mov
lahf
pop
or
bnd
push
xor
mov
or
jecxz
push
imul
mov
aad
jle
pop
sbb
push
push
outsb
jle
sub
jns
cmp
rorb
outsl
push
in
mov
shlw
mov
bound
outsb
sbb
adc
mov
sbb
notl
lret
fiadds
fistl
inc
movsl
adc
jae
push
xor
scas
pop
jae
enter
fs
pushf
shr
fstp
fwait
sar
cmpb
xor
push
lock
mov
dec
sub
test
fimull
je
mov
decl
ret
fs
jge
and
push
jg
adc
sub
jnp
clc
cmpsb
loope
fld
adc
nop
mov
aaa
mov
jnp
gs
outsb
push
dec
lret
clc
mov
ljmp
mov
dec
dec
imul
mov
mov
lret
lret
xchg
sahf
gs
loop
fnstenv
les
arpl
testl
arpl
outsb
mov
or
add
add
cmp
orl
sahf
jnp
sti
sar
xor
leave
out
xor
fisubrs
mov
dec
loope
test
mov
in
imul
divb
add
roll
sbb
mov
mov
sbb
fnsave
subb
jmp
and
pop
fwait
in
push
aad
out
insl
shr
or
jmp
cltd
xlat
imul
aaa
movsl
or
data16
adc
rol
and
jg
and
cmp
outsb
jns
fisttpl
mov
out
sbb
sbbb
xlat
or
fistpll
dec
and
mov
stos
mov
mov
dec
mov
call
or
loope
arpl
pop
lret
push
and
insw
data16
push
jmp
into
insb
pop
jb
icebp
push
sbb
int
pop
mov
shrb
testl
insb
mov
pop
mov
push
or
pop
and
mov
or
pop
mul
fwait
outsb
imul
push
cs
frstor
mov
sarl
adc
or
lods
out
sbb
jle
daa
lods
lods
adc
roll
in
dec
ds
xor
xor
mov
in
aaa
test
push
jle
sub
pushf
fcoms
and
ljmp
fildl
pop
cs
inc
cmpsl
mov
inc
adc
divb
and
pop
rol
fcoml
jg
cli
add
cmp
repz
out
fsubl
xlat
push
or
jns
dec
or
lea
popf
fisubrl
es
jecxz
jno
cmpsb
lods
in
xchg
ror
cmp
lods
pop
dec
test
cmc
xchg
push
rcll
mov
xor
push
inc
cltd
and
loop
push
cmp
mov
push
jb
lea
mov
scas
loope
pop
cmc
sub
decb
stos
dec
cmpsb
xlat
adc
mov
lods
cmpsl
push
hlt
jns
and
repz
xchg
adc
pop
adc
daa
decb
js
mov
or
daa
enter
jp
sub
insl
dec
mov
jo
sub
sub
pop
cmp
mov
and
jb
mov
and
loopne
shr
sub
or
dec
sbb
imul
mov
cmpb
scas
xchg
or
lock
aas
and
jle
cmpsb
sbb
testl
aaa
out
adc
or
pop
insl
clc
adc
icebp
ret
adc
in
push
mov
ret
test
int3
add
mov
std
xchg
loopne
js
inc
cmp
pop
gs
mov
aaa
adc
adc
imul
rolb
es
in
fstpt
cmc
icebp
imul
jg
sub
or
xor
dec
cli
orb
mov
push
xor
fldl
adc
sub
sub
movsl
pop
popa
mov
dec
and
or
mov
lea
cmp
out
pop
mov
push
lock
in
dec
js
pop
shll
out
add
jns
fimuls
into
push
imul
dec
cmp
scas
add
js
push
xor
mov
outsl
ja
inc
cwtl
negb
mov
xchg
repz
jp
mov
add
dec
je
mov
push
inc
and
xchg
jp
sarl
add
insl
push
inc
push
lret
sbb
mov
cs
imul
dec
enter
jmp
mov
push
mulb
leave
add
xchg
iret
ret
ljmp
pop
test
sbb
sub
push
cmpsb
mov
jne
dec
rcrb
das
icebp
outsl
dec
jo
or
sub
mov
das
jae
push
pop
mov
mov
daa
outsl
mov
push
pop
adc
sarl
adc
cld
dec
dec
pop
add
mov
lret
cld
jne
push
jmp
in
xchg
mov
mov
xchg
jns
out
leave
inc
or
mov
cld
repnz
stos
push
iret
push
inc
lods
rcll
mov
aad
inc
ss
jle
push
dec
int
inc
aam
gs
mov
into
aas
adc
insb
cmp
cmpsl
sarl
mov
inc
call
and
les
in
out
test
into
fisttpl
push
fsts
repnz
aam
scas
ret
stc
pop
lock
dec
shll
or
mov
mov
in
dec
jge
mov
adc
mov
push
sbb
add
mov
add
subl
mov
xchg
mov
sbbb
mov
enter
dec
in
fwait
and
add
xor
inc
mov
mov
ret
dec
test
adc
and
mov
cmp
aaa
pop
aaa
leave
jns
into
or
orb
jne
movsb
pop
int
gs
rcll
test
mov
scas
addb
dec
push
fwait
inc
test
sarl
lea
cmp
pop
stos
push
in
adc
push
test
out
push
add
push
jno
mov
data16
hlt
idiv
movsl
nopl
sbb
pusha
jecxz
iret
daa
push
push
imul
pushf
int
fidivs
push
cli
fsts
pop
insb
and
push
aas
pop
dec
or
xor
out
gs
mov
cmpl
jo
mov
inc
pushl
push
icebp
jecxz
mov
push
fisubs
xor
sbb
dec
cmpsl
jno
imul
pushf
push
repz
or
negl
dec
mov
popa
pop
aad
sbb
push
fwait
std
mov
ret
insl
pop
lods
out
and
lock
push
dec
xlat
stos
push
push
xor
lret
jbe
and
mov
sahf
mov
jns
fisttpl
leave
cmp
je
and
enter
xchg
je
xchg
lret
mov
add
mov
and
imull
pop
mov
lock
ficompl
pop
pop
xor
xor
aam
jecxz
test
cmp
inc
inc
fwait
sbb
psubusb
push
aas
mov
sub
adc
out
test
loop
popl
pop
jecxz
outsl
pop
or
sub
dec
or
imul
adc
fs
xchg
lds
insl
mov
dec
jmp
fs
sbb
sub
pop
sub
in
inc
loopne
xchg
pop
pop
adc
adc
xchg
lea
bound
lock
and
test
repnz
mov
dec
pop
fs
adc
adc
icebp
cmpsb
popf
xorb
ror
outsl
mov
push
dec
test
inc
xchg
arpl
in
out
cmp
les
mov
dec
mov
test
insb
xchg
ret
add
pop
sub
imul
jmp
add
loopne
leave
insl
sub
xchg
sahf
cmp
shll
inc
pop
jge
imulb
push
ret
into
jno
loop
imul
out
sarb
into
sbb
sbb
adc
push
repnz
mov
push
mov
lods
fadd
pop
repnz
daa
add
jne
or
mov
jbe
rcrl
adcl
mov
add
int3
or
es
push
fsubrl
push
cs
push
mov
daa
movsl
and
mov
loope
popa
xchg
fdivrs
repz
loop
pop
out
sahf
repnz
jns
fisttps
pop
lock
cmc
cli
sar
lods
adc
cmp
imul
pop
jne
cmc
jle
cmp
sahf
fsubrl
push
imul
loop
mov
mov
orl
adc
scas
pushf
xchg
scas
jge
jl
test
add
bound
outsl
mov
fildl
ficomps
sub
mov
sbb
test
push
add
adc
fcoml
or
mov
fisubs
cmp
mov
in
inc
test
or
jg
sub
aas
xchg
loop
and
xchg
mov
loope
and
and
iret
jns
pop
enter
cwtl
inc
push
dec
sbb
jmp
jge
add
pop
push
call
mov
shl
stos
in
pusha
loopne
aaa
jecxz
xor
jl
push
cmc
dec
lret
push
lods
mov
sub
adc
push
adc
insb
jb
xchg
xor
cwtl
clc
fidivrs
in
sbb
push
mov
in
add
xchg
and
pushf
push
sub
les
xchg
xor
mul
out
popa
pop
iret
sti
mov
mov
js
cmp
fcmovb
push
ds
movsb
enter
jno
in
cs
xchg
loop
lret
xor
cld
clc
jl
mov
cmp
mov
test
mov
pop
in
and
sbb
mov
test
hlt
jb
ja
xor
loopne
mov
push
mov
scas
dec
mov
dec
xchg
les
mov
xor
sub
mov
sub
jbe
jp
xor
and
shlb
aas
fistpll
ljmp
jae
stos
jo
bound
mov
push
jbe
mov
lahf
add
xlat
jmp
inc
xchg
push
jnp
sbb
jo
jno
add
in
das
or
mov
xor
mov
adc
je
das
out
fwait
les
test
xor
gs
sub
mov
mov
inc
sub
add
lret
cmp
fcoms
pop
ret
dec
shr
mov
rcrb
pop
ss
hlt
test
xchg
xchg
imul
adc
ret
add
js
sbb
add
or
pop
push
push
ja
ret
fistpll
rcl
cmp
aaa
ret
fsubl
xchg
jp
lahf
dec
les
iret
adc
aam
sbb
icebp
repz
dec
lock
aaa
push
movsb
mov
dec
subb
jg
pop
push
mov
dec
push
jae,pn
fwait
cltd
mov
pop
nop
nop
call
push
lahf
pop
xchg
jecxz
or
mov
jmp
mov
stos
out
mov
sbb
xchg
add
iret
push
js
subb
cmp
push
stc
push
lods
jl
fiadds
mov
pusha
lock
aas
cmp
mov
sti
test
and
jno
cmp
sub
lret
insl
inc
xchg
cmp
lods
and
jbe
mov
push
dec
and
push
int
add
out
sub
mov
ja
push
test
in
adc
mov
mov
ror
or
test
addb
lock
or
and
xor
sub
cmpl
jle
bound
aam
mov
arpl
pop
pop
dec
enter
jecxz
fucomp
or
jno
cmp
push
add
popa
mov
mov
fnstcw
leave
mov
repnz
rclb
andl
mov
stos
adc
orb
daa
in
add
inc
xchg
ror
dec
jmp
or
cmp
repz
scas
pushf
imul
xlat
cmp
mov
inc
mov
adcl
pop
xchg
and
jge
mov
jnp
aas
arpl
mov
subl
and
xchg
outsb
cmpsl
rol
sbb
daa
xchg
imul
push
dec
xchg
in
and
std
aam
xchg
pusha
popw
arpl
sbb
sub
mov
lods
xlat
mov
movsb
inc
mov
sub
enter
test
or
aas
roll
xchg
jo
jae
adc
loope
push
movsb
cwtl
shl
int
fcoms
in
pop
fildll
jo
fs
mov
fiadds
scas
int
and
aaa
je
enter
jne
push
lods
xchg
jmp
jae
inc
jecxz
insl
jp
les
xor
es
xor
mov
add
arpl
pop
es
rorb
add
and
lods
jmp
loopne
push
mov
dec
xchg
xor
stos
lahf
mov
jbe
pop
add
jecxz
add
or
sub
push
mov
dec
mov
pop
mov
sub
mov
cs
and
das
arpl
inc
sahf
mov
inc
sti
scas
incl
mov
adc
rorl
in
jbe
fdivl
mov
add
dec
push
xor
shll
fisubrs
mov
leave
les
ret
out
inc
aad
fdivrl
cmp
push
fwait
xchg
fbld
dec
push
pusha
push
xor
mov
and
test
stc
daa
shlb
mov
scas
mov
push
inc
pop
out
movsl
dec
in
cmp
lea
iret
fsub
shlb
daa
repz
sub
into
mov
cltd
repz
inc
push
sti
cmp
dec
movsl
test
or
dec
inc
pop
pop
test
add
sub
sub
int3
push
lret
cmp
jb
insb
cs
ficoml
push
push
pop
lods
sub
insl
dec
and
xlat
cmp
add
inc
popa
and
lahf
sub
rolb
int3
cld
inc
mov
push
in
inc
cmpb
shrb
dec
adcl
je
lret
cmp
aaa
mov
nop
mov
nop
pop
rcll
into
gs
pop
into
mov
mov
imul
shll
xor
mov
ret
lahf
inc
ja
mov
add
fistl
lret
aas
pop
add
xor
sub
out
outsb
inc
out
es
in
cli
js
pop
and
jnp
les
movl
and
inc
xchg
xor
imull
movsl
gs
inc
das
sub
mull
mov
js
ljmp
dec
cmp
aad
lret
cmp
pop
fs
xchg
inc
fdivrp
xor
out
add
jp
mov
jae
enter
mov
lock
xchg
mov
sub
push
push
jle
jmp
cmp
add
jae
mov
inc
sahf
imul
loopne
cmp
ljmp
jl
xor
xchg
and
imul
les
gs
cmpl
test
mov
dec
and
mov
outsl
in
xor
add
pop
out
into
jnp
add
outsb
rorb
adc
mov
xchg
fisttpll
lret
in
sbb
and
mov
and
cld
ds
fsubrs
pop
pushf
leave
jmp
rorb
push
cmp
out
cmp
scas
les
popl
jg
sub
dec
nop
xorb
mov
push
jge
mov
jno
fcompl
addb
repnz
cwtl
cmc
lret
in
mov
adc
sub
pushf
jg
int
out
jp
add
cmp
out
mov
int
add
stos
cwtl
inc
xchg
imulb
es
insb
ret
jle
popl
sbb
mov
and
xlat
jae
adc
stc
mov
push
sub
leave
push
push
ds
les
mov
loopne
adc
dec
repnz
adc
incl
test
stc
mov
xchg
cmpsl
jae
into
sbb
dec
shrl
or
xor
add
lahf
sub
pop
jnp
dec
movsl
dec
mov
je
push
add
ret
push
xchg
mov
out
cwtl
xchg
ret
stc
adc
int3
es
andb
sub
out
mov
cmp
mov
xchg
mov
mov
pushf
int3
cli
addr16
xlat
jle
xchg
fwait
arpl
sbb
pop
stc
aas
fidivl
mov
add
push
pop
xor
or
mov
gs
mov
aam
push
fisttpll
aad
jbe
inc
or
icebp
or
ss
jno
jp
push
inc
mov
scas
sub
mov
mov
adc
lret
xchg
cmpsl
inc
push
clc
gs
lret
sahf
lret
fs
mov
mov
and
cmpsl
push
mov
dec
adc
mov
test
or
jno
dec
fidivrs
inc
xorb
cwtl
popa
int
bound
ljmp
lods
je
sbb
lret
mov
push
je
aaa
mov
push
sub
push
fcoml
outsb
in
repnz
cmp
jecxz
pop
jae
or
cmpsb
div
in
daa
or
gs
push
std
ficoms
cmp
inc
popf
add
xlat
and
or
pop
xchg
jle
pop
jge
sub
imul
inc
adc
mov
sahf
stc
inc
xchg
fdivs
xor
jno
dec
pop
scas
loop
adc
aaa
push
push
sub
mov
imul
sbb
or
push
cmpsb
stos
stos
mov
add
push
dec
sub
mov
mov
test
in
fidivrs
mov
push
jge
sub
jp
mov
mov
js
stos
add
sbb
mov
add
in
jo
nop
add
xchg
lods
dec
movsb
mov
mov
push
pop
pop
xchg
adc
in
cmpsb
push
or
rcl
sub
out
dec
inc
xchg
fsts
xchg
cmp
dec
ss
popa
inc
daa
lock
sbb
mov
and
test
lahf
push
pop
mov
mov
loope
or
fnsave
sbb
ljmp
sbb
push
mov
addr16
push
imul
jnp
dec
loop
mov
movsb
scas
or
pop
test
ror
pop
loopne
stos
mov
adc
cmp
inc
mov
sysexit
es
adc
push
jae
aad
clc
xor
imul
push
pop
and
mov
sbb
jp
push
fwait
push
paddd
stos
mov
lea
push
das
mov
notl
sub
into
inc
mov
sbb
push
xor
inc
sti
into
scas
or
addb
bound
xchg
mov
mov
jecxz
xchg
test
push
scas
pop
rol
pusha
dec
shrb
insl
sub
inc
inc
mov
sub
xlat
push
inc
lods
ja
cltd
int3
jnp
icebp
fldenv
insb
pop
push
adc
in
mov
push
mov
mov
xchg
repz
dec
jmp
ficomps
xchg
aas
jb
iret
mov
jp
mov
iret
lret
mov
popl
enter
mov
pusha
push
add
xchg
cmpsb
inc
jo
and
or
sbb
daa
and
adc
inc
or
insb
xchg
loope
sub
xchg
mov
push
dec
mov
ret
test
nop
cmp
sbb
in
jne
fs
test
pop
iret
sbb
jno
adc
rcrb
lds
lret
jo
outsl
xlat
jbe
cmp
inc
ret
sub
dec
lods
int3
mov
xorl
or
dec
lods
scas
inc
ret
je
repnz
mov
iret
xor
pop
popl
jo
hlt
jle
movsb
pop
fsubs
into
mov
xorl
pop
add
nop
cmp
push
nop
sub
les
xor
xchg
adc
pop
xchg
sub
iret
and
gs
movsb
or
in
cmp
inc
inc
and
cld
dec
sub
insb
adc
popf
andb
mov
mov
pop
int3
mov
lods
mov
pop
test
or
xchg
adc
clc
mov
xchg
and
xchg
pushl
mov
mov
push
xchg
push
ds
mov
bound
leave
dec
es
int
jb
mov
popf
or
mov
xchg
stos
mov
jg
hlt
sbb
dec
in
pop
pop
pop
das
mov
jmp
pop
les
mov
dec
cmpsb
int3
pop
mov
add
add
jmp
jne
test
aaa
push
int3
jmp
jmp
insl
in
sub
pop
fstpl
in
out
jge
rolb
and
int3
out
xchg
icebp
mov
jg
sarb
pop
lret
push
jmp
dec
xchg
arpl
pop
adc
cli
movsb
sarb
andl
scas
lods
xchg
inc
pusha
popa
xor
pop
jecxz
shrl
pushf
mov
dec
bound
mov
or
stc
dec
js
pop
mov
pop
rol
repnz
jge
outsb
mov
imul
jo
into
iret
jecxz
pop
scas
mov
pop
or
imul
dec
adc
adc
leave
das
and
xchg
outsl
jecxz
inc
cltd
test
push
testl
mov
es
dec
pop
insb
leave
inc
mov
ds
ljmp
or
add
adc
lea
xchg
mov
test
xor
rorb
add
jge
mov
jbe
mov
clc
mov
out
push
sbbb
xor
mov
jl
pushf
cmp
mov
sarb
out
pushf
stos
data16
andb
fnstcw
das
xor
jge
push
cwtl
push
movsl
jo
jne
addb
dec
call
pop
out
dec
jo
or
add
xchg
jo
push
xchg
bound
imul
out
ret
mov
imul
mov
fists
dec
icebp
xorl
inc
push
pop
pushf
aas
movsb
adc
mov
cmpsl
pop
inc
insl
dec
push
ficoml
fdivrs
stos
mov
add
bswap
mov
lock
enter
sti
pusha
push
mov
add
lods
cmp
fdiv
cmpsl
and
divl
sbb
loop
adc
xor
lds
mov
adc
loopne
jno
add
sahf
cmp
lea
and
icebp
and
push
imull
cmpsb
je
jo
insb
shl
call
fcomps
into
dec
jb
sbb
bound
pop
std
rorl
jo
mov
fs
push
inc
mov
fnstcw
add
or
jo
lahf
xchg
adc
mov
das
addr16
fstps
lods
out
mov
out
push
js
in
and
pusha
fiadds
shll
jp
scas
jne
mov
dec
sub
add
add
loope
cltd
mov
inc
jnp
lods
push
std
jg
test
mov
nop
sub
cltd
push
xor
add
sub
xchg
mov
add
push
out
xor
sbb
ss
leave
or
imul
push
lahf
jp
jmp
roll
jnp
hlt
jl
aaa
xchg
push
js
xor
lcall
xchg
lret
pop
pop
mov
pop
sub
sub
je
pushf
sbb
scas
iret
add
push
out
call
test
jecxz
pop
std
adc
jnp
jns
mov
scas
inc
push
out
aaa
inc
fildll
and
int3
arpl
xor
lock
adc
arpl
lahf
inc
sbb
add
xchg
bound
int3
inc
xor
out
adc
shll
movswl
repz
popf
outsl
icebp
and
rorl
push
leave
mov
sbb
jno
ror
jmp
mov
push
iret
popf
loope
incl
mov
and
movsb
or
cmp
sub
fisubs
and
pop
sub
lods
push
pop
out
and
mov
in
add
aam
push
xchg
pop
into
push
repz
adc
mov
add
adc
imul
sub
xchg
sub
xchg
jnp
mov
mov
pop
sbb
icebp
loop
xchg
roll
mov
movsl
subb
xchg
mov
data16
mov
addb
jb
pop
add
mov
lods
shll
inc
sbb
ret
sbbb
cmp
arpl
push
ljmp
dec
mov
jle
cmp
pop
sti
sub
int
push
or
mov
sub
adc
fisubrl
out
mov
mov
or
scas
out
add
into
push
jle
ss
mov
jbe
mov
js
fldl
sbb
pop
lcall
jns
mov
ja
xor
sub
out
xchg
jg
addr16
jne
push
sub
jle
inc
int3
arpl
mov
les
mov
mov
mov
sub
stos
pop
and
inc
and
mov
jecxz
loope
inc
lea
aad
pop
push
enter
test
inc
dec
call
jbe
aam
cmp
clc
ja
sbb
fs
leave
inc
add
aad
ror
mov
sbb
in
lret
mov
movsb
mov
sbb
cmp
mov
fwait
call
cmp
arpl
jno
mov
xchg
adc
cwtl
xor
jns
test
inc
sahf
mov
dec
dec
jecxz
push
movsb
test
sarl
outsl
pop
or
inc
push
xchg
pop
xchg
enter
cwtl
push
pop
inc
lea
mov
sbb
mov
fcmovnbe
dec
imul
and
jge
lods
jp
cmp
mov
lods
jl
sub
lret
push
sbb
cmp
xchg
dec
pop
fimull
add
rcrl
inc
and
inc
mov
mov
in
push
and
jo
lea
ret
push
mov
jge
mov
mov
or
scas
cld
and
scas
sub
cltd
stos
into
cmp
cmpsb
lea
pop
popf
je
dec
cmp
mov
lahf
sub
cltd
cmp
popa
pop
andb
inc
test
ja
inc
test
popf
test
or
pop
fadd
gs
and
adc
lahf
pushfw
xlat
xorb
stos
daa
les
xchg
mov
add
sub
scas
xlat
or
push
jle
stc
xchg
mov
stos
jl
int
loope
add
xchg
stc
sbbb
xor
movsl
fxch
pop
dec
mov
insb
push
mov
ror
out
inc
dec
push
jne
and
mov
and
fsubl
ret
add
pop
sbb
add
fildl
push
les
pop
push
xor
and
pop
dec
insl
addb
mov
jp
push
outsb
dec
xor
inc
lds
mov
sub
fld
sahf
push
outsl
sub
lea
and
nop
pop
push
gs
pop
fmull
sub
std
lods
call
jb
cmp
es
mov
inc
xor
or
popa
cmp
ss
push
repnz
sbb
push
xorb
ror
mov
clc
jbe
mov
jns
aad
lret
add
nop
inc
in
xchg
fsubr
or
rorl
sbb
pop
jmp
push
ficoml
dec
ficompl
sub
pop
in
enter
cld
call
dec
mov
sar
inc
shl
out
push
daa
mov
int3
popa
push
out
mov
js
inc
div
sahf
arpl
in
mov
jg
into
leave
fdiv
xlat
sbb
adc
pop
lcall
sbb
imul
insb
cmp
add
sub
dec
cmp
pop
out
test
stc
push
xor
lods
mov
and
pop
std
mov
into
jns
mov
mov
dec
icebp
aaa
cld
rolb
lcall
test
pop
jb
mov
ljmp
sub
jl
int
fdiv
test
arpl
add
aaa
dec
and
sub
sbb
mov
movsb
cmp
jmp
dec
std
jmp
imulb
sbb
mov
mov
imul
sub
sub
xchg
lock
movsb
mov
and
pop
out
xchg
movsb
enter
je
cmc
push
xchg
in
insl
stos
insl
inc
sbb
popa
lcall
fmuls
jne
sub
jecxz
bound
enter
xor
dec
pusha
dec
test
in
add
sti
ret
lret
pop
mov
hlt
dec
pop
stc
das
mov
int
jbe
test
cli
xor
pop
add
inc
add
rorl
call
inc
pop
or
ja
pop
adc
mov
mov
cmpsl
adc
mov
mov
mov
mov
xor
xchg
sub
movsb
lods
sub
inc
inc
aaa
ja
lods
push
jmp
xchg
xchg
xchg
rorl
fwait
lock
lods
push
pop
sub
sarl
cmp
repz
mov
loop
out
arpl
push
loope
popf
xchg
mov
fwait
movsl
xor
dec
insl
sbb
dec
cli
mov
bound
xor
xchg
cli
jp
ds
leave
push
dec
sub
roll
mov
xor
push
adc
push
xchg
cmpsl
mov
jl
int
es
jbe
arpl
fistl
xchg
enter
xchg
jb
add
lret
dec
ret
dec
pop
inc
adc
shll
sbb
lea
pop
int3
fsub
xor
push
jl
insb
inc
das
or
inc
jl
mov
pop
mov
aas
pop
or
adc
dec
test
xchg
add
sub
nop
push
jecxz
jmp
xor
fldcw
cmp
push
sbb
mov
mov
shrb
mov
inc
rol
scas
int
dec
lods
mov
sub
fnstsw
cltd
dec
push
movsl
mov
mov
add
xor
sti
imul
in
xor
add
sbb
adcb
lock
inc
jp
sti
sub
push
fsubrp
hlt
lock
dec
dec
jl
mov
fs
cltd
outsl
in
std
inc
jbe
adc
addr16
inc
outsl
out
das
aad
push
adcb
ret
mov
out
xchg
addl
dec
mov
ret
push
mov
out
sbb
test
xchg
fldcw
pop
in
sti
das
fisttpl
adc
jne
addr16
add
lret
xchg
pushf
adc
and
lret
out
test
movsl
pop
lcall
or
jle
gs
cmp
sbb
sbbb
xor
adcl
jle
xor
pop
sub
mov
mov
jp
add
mov
in
cwtl
lcall
and
xor
sahf
push
fcoms
mov
ret
sub
add
cmp
data16
jo
lret
sub
stc
pusha
js
mov
aas
sbb
shll
or
frstor
dec
orl
arpl
cld
pushf
ret
mov
les
das
mov
or
ret
fistl
dec
ret
mov
adc
pop
dec
mov
enter
mov
lahf
sub
mov
dec
xchg
push
je
xor
movb
mov
mov
or
push
mov
fidivrs
mov
mov
jb
dec
imul
shlb
push
cmp
push
nop
inc
filds
subb
das
xchg
pop
mov
scas
xchg
adc
enter
lods
shl
lahf
shl
mov
pop
sbb
adc
pop
dec
int
ret
arpl
mov
roll
cmp
nop
std
es
push
outsl
aam
or
adc
sbb
inc
ljmp
mov
mov
push
jl
ret
imul
mov
pop
lea
mov
out
popa
out
or
ss
jne
xor
add
push
mov
clc
je
pushf
and
cmp
loope
das
es
in
xchg
push
lcall
or
lret
push
mov
jnp
mulb
mov
jl
push
lds
loopne
sbb
fwait
pop
ficompl
movsl
cld
push
push
pop
dec
sbb
std
mov
adc
inc
ret
int3
mov
sbb
cld
mov
inc
sbb
fucomp
mov
mov
shl
in
pop
sbb
sbb
fidivl
cmp
jnp
jae
insb
and
xor
push
insb
sahf
or
cli
adcb
jnp
nop
inc
aaa
xor
aam
xor
xchg
xor
jae
adc
mov
fwait
ds
movsb
adc
daa
xor
insl
mov
xor
jge
lret
fisttpl
aaa
jmp
jns
testb
mov
mov
add
sbb
jnp
movsb
lea
push
loope
push
mov
mov
call
xchg
pop
fcompl
inc
ret
and
push
jne
jle
negl
sbb
xchg
fistps
cbtw
mov
lcall
dec
pop
sub
mov
iret
sbb
push
mov
mov
leave
mov
and
xchg
loopne
push
orb
pop
or
cmp
push
lds
popf
es
aaa
imul
sti
out
pop
out
scas
insb
sbb
fnstenv
and
scas
and
cmpsl
imull
xchg
sub
pop
inc
fwait
lahf
xchg
sti
jne
mov
daa
push
inc
push
jne
lcall
movsl
cmpsb
xchg
movsl
pop
xor
cmpsl
xchg
adc
idivb
hlt
xchg
das
dec
rcr
jl
or
hlt
cmp
int3
jg
sti
or
sahf
sbb
js
sbb
stos
in
xchg
loopne
push
outsl
mov
in
ret
dec
adc
inc
sbb
jo
mov
inc
xchg
jge
test
push
fsubrs
aad
daa
inc
xchg
xchg
dec
fs
pushf
ret
cmp
int
out
mull
sar
jno
jno
cmovle
pop
push
xchg
cmp
pop
jle
adc
inc
hlt
arpl
xchg
mov
cli
push
push
pusha
add
gs
sub
inc
cmpsl
mov
xchg
lods
gs
test
inc
and
xor
push
test
adc
mov
push
mov
xor
cmp
pop
pop
frstor
cmc
dec
out
add
xchg
outsb
test
cwtl
jmp
fldl
push
iret
and
incb
idiv
cmp
sub
xchg
dec
add
dec
jnp
adc
cmp
jae
dec
and
fsubr
hlt
cmp
icebp
fwait
lods
mov
jo
mov
pop
mov
push
scas
sti
dec
xchg
mov
adc
adc
push
flds
mov
mov
dec
aas
dec
xchg
xor
cmpsl
dec
pop
mov
pushf
inc
xor
push
adc
pop
xchg
subl
jno
xchg
xor
mov
pop
adc
xchg
lds
mov
stos
aam
fimuls
xchg
fiadds
enter
sti
test
mov
jo
test
in
les
lea
jecxz
xchg
adc
fistps
add
ret
in
les
fisubl
ljmp
or
pop
add
movsl
xchg
ret
mov
dec
je
pop
data16
xlat
pop
dec
mov
int3
int3
adc
leave
cmp
js
stos
and
push
dec
test
stos
mov
fistpll
mov
in
and
out
lahf
dec
lock
shl
ret
scas
mov
dec
test
popf
das
test
mov
test
imul
xor
push
xchg
mov
mov
xor
icebp
lret
sahf
jbe
xorb
cmc
mov
rolb
cwtl
imul
les
sbb
ds
inc
jo
jns
pusha
cmpsb
in
sbb
mov
repnz
dec
mov
push
lcall
xor
mov
movsw
js
push
imul
subb
push
fstl
in
xchg
std
sbb
and
std
push
mov
fildl
ret
je
add
mov
dec
mov
enter
pop
pusha
fimull
xchg
adc
adc
fs
push
das
push
fldl
fs
rcr
push
mov
push
mov
sub
dec
sbb
sbb
or
bound
call
lods
jp
sub
mov
mov
and
mov
into
je
ja
cmpsl
inc
fwait
adc
out
pusha
test
add
xor
pop
mov
push
and
test
test
dec
pop
and
pop
outsl
xor
aam
sbb
into
adc
call
push
repnz
icebp
rclb
dec
mov
imul
test
arpl
addr16
mov
inc
adc
bound
imul
es
jbe
mov
xchg
hlt
sti
push
mov
push
adc
scas
push
sub
stos
adc
stc
or
outsl
adc
daa
dec
lods
mov
leave
inc
ds
sub
fisttps
lods
adc
dec
mov
ja
cmp
mov
les
mov
inc
test
shl
inc
outsb
in
xchg
or
stos
cld
cli
sub
dec
mov
cmc
pop
pop
std
add
xchg
or
adc
push
and
sbb
and
mov
sub
loopne
jge
movsb
in
push
shl
jae
mov
cmovle
push
rcll
cltd
sbb
cmp
mov
loope
cmp
test
sbb
rolb
shlb
sbb
sbb
stc
fst
shll
cmp
dec
adc
push
clc
xorps
inc
lods
pop
fwait
xor
loope
lds
sbb
int3
shl
test
xchg
push
dec
inc
in
scas
arpl
xlat
mov
sub
mov
jmp
mov
push
dec
pusha
xor
stc
imul
mov
push
jae
jno
sahf
mov
rcll
addr16
data16
fdivl
pop
or
pop
shl
ja
int3
fcompl
and
xchg
pop
mov
dec
sbb
int3
js
jne
xor
lds
push
jb
dec
mov
or
mov
or
xor
fwait
xchg
adcb
cmp
and
inc
cmpb
outsb
outsb
jge
popf
mov
ljmp
inc
out
pop
mov
hlt
cs
loopne
xchg
lea
mov
dec
add
inc
sbb
leave
test
sbb
add
fucom
orb
cld
mov
jnp
cmpsb
mov
mov
faddl
test
pop
lahf
cwtl
dec
adc
pop
enter
pop
les
test
inc
mov
aaa
cmc
cld
sbb
sbb
xchg
imul
hlt
outsb
pushf
ljmp
sbb
nop
pop
mov
jnp
jb
xchg
pop
add
ret
add
aam
int3
incl
adc
pop
imul
mov
out
pop
ss
push
imul
sbb
mov
leave
add
imul
and
mov
sbb
and
sbb
mov
lahf
dec
mov
xchg
cld
sub
icebp
cltd
cmp
push
fnstcw
mov
mov
je
push
mov
jecxz
inc
add
pusha
xlat
ss
cmp
aad
xchg
stos
mov
ds
dec
hlt
inc
shrb
pop
mov
pop
sbb
mov
dec
xchg
sti
push
sub
imul
adc
mov
test
test
sub
out
lahf
cltd
sbb
add
lret
lret
inc
pop
movsb
dec
sbb
xor
or
loop
out
popf
ja
xchg
dec
pusha
add
movsb
sub
lock
add
or
push
sub
inc
nop
xchg
flds
sub
je
sarb
cmpsb
int3
or
xchg
adc
mov
in
xchg
mov
mov
mov
adc
push
mov
scas
push
and
cmc
and
stos
xlat
xchg
pop
mov
fsubrl
mov
xor
sti
mov
or
fstps
sbb
adc
sar
daa
or
push
xor
scas
sub
bound
lods
adc
or
push
jecxz
cs
outsl
add
pop
mov
loopne
lcall
cmp
xor
lods
mov
mov
and
xchg
loopne
inc
sbb
sarl
push
sbb
int
imul
push
in
in
cmp
sub
fcomip
inc
sbb
or
sub
cmpsl
in
push
jg
jb
std
leave
in
xchg
pop
or
decb
fnstcw
call
xchg
mov
pop
sahf
xor
out
pop
cmova
into
mov
xchg
call
shrl
loope
sub
lods
subl
out
cld
lods
mov
xor
lods
scas
outsl
je
fnstsw
pop
mov
popa
enter
lods
jno
jno
sbb
out
cmc
je
mov
xor
pusha
es
test
sub
push
iret
xchg
es
mov
int
inc
ret
ss
test
mov
pop
jecxz
add
sar
mov
push
jmp
imul
rcrl
sbb
push
cld
cmp
jnp
adc
xchg
outsb
pop
orb
popf
inc
jo
das
push
xor
cmp
lcall
hlt
xchg
addr16
int3
jl
loop
iret
push
inc
mov
inc
inc
in
push
dec
adc
sahf
ret
test
cmpsl
shlb
ja
sub
in
xchg
mov
pop
insl
in
sbb
jno
je
pushf
add
nop
lret
cmpsb
jl
pop
aas
xchg
mov
sub
in
and
xor
jmp
sub
rcl
inc
cli
popa
mov
pop
aaa
xchg
and
pushf
enter
inc
xor
sbb
fisubs
pop
dec
mov
pop
push
aas
cmp
fisubrs
js
sbb
fdivl
cltd
data16
lods
mov
jl
movsb
fidivl
movsl
jge
inc
sub
fildll
sub
dec
rorb
testl
int
outsl
sub
jns
push
mov
and
adcl
subl
mov
cmp
cmp
repz
mov
test
and
cmp
clc
lret
rorb
mov
mov
lods
dec
and
push
je
mov
lahf
test
pop
aam
testl
mov
ds
pop
enter
lods
jno
pop
sbb
sti
xchg
aaa
mov
gs
cmc
cmpsb
cmp
sub
inc
iret
outsb
jl
dec
fs
daa
cmpsl
jnp
inc
jg
xor
cmpl
lea
inc
ss
push
mov
inc
icebp
enter
sub
inc
add
ljmp
or
lock
fucomi
mov
add
mov
push
dec
inc
fsub
fisttpl
es
dec
push
sbb
repz
pushf
addb
or
mov
rcrb
outsl
sbb
cs
mov
outsb
pushf
jnp
mov
or
movsb
cmc
popf
fistpll
mov
aad
sarb
pop
test
and
sahf
or
push
inc
cmpsb
notl
inc
mov
loopne
and
jg
jle
xor
ljmp
fldl2e
jbe
or
out
repz
add
xor
lock
pop
jns
bound
fmull
jno
aas
lods
add
mov
dec
add
push
jmp
test
jno
test
outsb
lods
sahf
cmpl
sbb
add
sub
out
mov
lea
sub
pop
andb
jnp
mov
je
mov
int3
clc
test
add
mov
inc
sti
aas
or
adc
jb
mov
popa
lret
mov
xor
scas
jnp
imull
dec
cmp
sbb
push
insl
mov
lcall
lods
fisubrl
inc
in
inc
das
stos
es
xchg
jbe
mov
pop
mov
inc
sbb
ret
xor
jg
xchg
std
xor
test
push
test
roll
xchg
aad
xor
pop
mov
mov
neg
pop
cmp
push
sub
decl
es
in
jo
xchg
ficoms
loopne
xchg
inc
cmp
xor
mov
add
cmp
push
jns
and
sbb
mov
inc
out
leave
jb
xchg
loop
repnz
push
mov
mov
pop
jge
icebp
fst
rorl
jg
jo
sarl
rcll
mov
test
scas
add
aam
sbb
insl
pop
into
pop
dec
into
ja
mov
cwtl
cli
xor
pop
icebp
into
sbb
push
sti
and
sbb
cmpsl
adc
add
sub
add
out
mov
push
out
mov
jae
mov
lret
fcoms
call
and
add
xchg
jbe
jb
call
shll
les
loopne
cltd
jns
std
call
mov
push
ret
pop
scas
in
scas
rcll
lea
jg
xor
inc
in
les
jb
xor
xchg
sub
xlat
mov
loop
outsb
push
dec
adcb
mov
mov
pop
fistps
xchg
out
cwtl
mov
arpl
sub
and
or
mov
fsubrl
fiadds
sub
lcall
add
push
mov
jo
outsl
xor
xchg
add
and
xor
sbb
mov
imul
pop
fisubrs
or
add
mov
rorl
call
add
test
pop
sbb
addr16
loop
adc
inc
fistps
test
popa
lds
imul
jmp
cwtl
cwtl
push
mov
cmpsb
sbb
ror
xchg
xor
jle
clc
jae
xor
dec
mov
jecxz
and
imul
sub
mov
pusha
call
jne
mov
loopne
pop
dec
pop
mov
addl
jmp
prefetchnta
in
fimuls
mov
pop
movsl
loop
xchg
xchg
mov
or
pop
push
in
adc
enter
sti
xchg
fidivrs
addr16
push
sbb
sub
lret
sarb
mov
test
sub
int3
inc
lods
adc
fwait
jmp
arpl
fcmovne
les
adc
pop
cld
mov
sti
sbb
jmp
aad
shrl
nop
jmp
push
mov
cmp
movsb
ljmp
push
xchg
ja
lock
psubusb
mov
or
aam
or
clc
mov
inc
aaa
adc
inc
mov
fcmovnb
das
aas
xlat
movsl
lcall
cmp
ret
icebp
jbe
shrl
push
into
sub
repz
cmc
sub
and
push
mov
sahf
stc
and
iret
movsb
data16
mov
testl
inc
outsl
int3
sub
pop
cld
sbb
jge
push
add
inc
jb
xor
push
adc
cmp
test
sbb
inc
shll
push
ljmp
ja
leave
mov
out
bound
adc
sbb
aas
xlat
ficompl
push
movsb
mov
jmp
call
mov
jecxz
jns
fdivrp
stc
rorl
and
push
xchg
in
iret
mov
cmpb
cmp
roll
cs
or
jp
sbb
pop
rcll
cli
lret
lds
sub
or
loop
sub
xchg
pop
fwait
sub
ret
or
cmpsl
imul
sbb
xchg
xchg
jg
jnp
dec
in
push
sbb
lods
js
sbb
fs
fiaddl
loope
mov
adc
push
cmc
jle
dec
in
inc
fidivrl
icebp
jge
add
pop
pushf
xor
sar
cli
imul
xchg
mov
cs
pop
aam
cmc
sti
cli
movsl
aas
mov
psllw
jns
call
dec
test
popf
outsl
xlat
in
loopne
mov
outsl
rcl
sbb
jne
and
xchg
mov
cmp
imul
movsb
sbb
js
mov
and
add
dec
outsb
orl
mov
repnz
jmp
movsb
stos
jmp
sti
lds
mov
stc
mov
jmp
stc
test
popf
bound
clc
xor
jg
loopne
gs
pop
sbb
xor
or
and
lods
mov
cmp
lahf
js
and
and
and
lock
test
adc
xor
in
sbb
cmpsl
subb
xchg
es
mov
push
sbb
outsb
bound
jmp
or
cltd
pusha
lahf
sbb
mov
inc
data16
out
lcall
testb
enter
ss
into
inc
es
mov
js
mov
dec
cld
adc
leave
sub
inc
outsl
sub
clc
xor
and
rcrb
cmp
loope
xchg
or
outsb
mov
pop
add
xor
mov
ss
push
or
inc
pop
mov
sbb
cmp
aad
cmp
leave
adc
insl
sarb
lret
dec
iret
xchg
nop
out
icebp
sbbb
and
insb
jns
mov
mov
insb
jge
inc
xor
sub
rorb
push
push
and
rclb
fnstcw
mov
push
loope
or
pop
divl
std
lret
aas
in
cmp
adc
and
jnp
in
iret
frstor
das
shll
loope
pop
and
test
fimuls
add
repnz
adc
into
mov
les
mov
insl
mov
adc
dec
cmp
mov
daa
ret
fsubrs
mov
jno
ss
stos
in
arpl
lock
sub
mov
sbb
push
mov
loop
movl
aam
mov
mov
out
push
lock
shll
mov
pop
cmp
pop
loope
mov
jle
mov
in
cmp
add
in
sar
jae
shll
jno
lea
add
stos
xchg
std
repz
test
cmp
in
je
mov
and
push
add
fstpt
sub
xor
ss
mov
das
idivl
aad
add
mov
mov
bound
mov
mov
popl
arpl
inc
mov
fistl
and
fmuls
mov
mov
xchg
loope
mov
cmp
into
lea
outsb
sti
stos
push
mov
mov
cltd
rorl
xor
test
dec
in
dec
xchg
push
repz
xlat
mov
mov
bound
repz
roll
hlt
aaa
fs
call
leave
lods
addb
add
jae
and
clc
mov
aam
fdivrs
pop
mov
adc
xchg
xchg
cmp
and
sbb
cmp
daa
lods
mov
pop
xor
fstps
dec
out
jo
add
or
mov
cmpsl
dec
das
pop
mov
cltd
mov
xchg
sbb
lods
shll
jne
aas
rol
pop
movsl
push
stc
ret
scas
jg
lods
enter
clc
sbb
ret
mov
sub
andl
inc
daa
jbe
shll
mov
mov
inc
pop
xchg
jg
adc
enter
dec
jb
inc
jae
fistl
loopne
mov
out
sbb
cli
jae
test
daa
and
int
pop
xor
insb
xor
push
mov
or
push
pop
call
les
pop
sub
imul
push
adc
xor
mov
mov
outsl
aaa
jns
ljmp
mov
mov
scas
pop
push
lods
xor
fnstenv
ss
sbb
shl
add
sbb
jno
mov
jp
mov
xor
out
mov
xorl
repz
and
fwait
lahf
add
icebp
and
mov
push
out
fidivs
loopne
pop
dec
bnd
and
mov
sub
pop
stos
js
decb
fisubl
jmp
jle
mov
pop
xchg
mov
cmc
outsb
xchg
adc
imul
inc
out
pop
jmp
in
clc
sbb
int3
idivl
pop
pop
insb
push
filds
leave
scas
sbb
aam
jl
loopne
mov
popw
int3
mov
push
cmp
or
inc
sub
outsl
stos
sub
or
dec
scas
stc
mov
mov
jb
lret
loopne
stos
adc
jb
fwait
xchg
loop
and
jns
jb
fwait
nop
pop
and
clc
fistpl
pushf
adc
ds
jne
and
mov
xchg
or
out
cmp
mov
and
dec
mov
sub
mov
fwait
xchg
es
mov
add
mov
test
add
push
mov
cmpsl
xor
bnd
jg
ljmp
movsl
lret
out
jl
push
inc
repnz
cld
or
cmp
mov
aam
sbb
push
fisttpl
out
faddp
sub
clc
mov
addr16
popa
inc
shrl
das
aam
jmp
mov
and
or
dec
pop
push
add
dec
mov
inc
jbe
xchg
mov
dec
mov
push
jmp
mov
inc
pop
xchg
pop
adc
adc
ficoms
mov
sti
push
mov
pop
stos
adc
nop
sub
pushf
in
xor
fdivrl
xchg
std
inc
stos
push
mov
sahf
or
mov
sbb
lahf
testl
mov
pop
inc
ss
dec
sti
shrb
dec
sahf
inc
pusha
jle
and
push
shll
xchg
imul
and
push
inc
pop
fwait
inc
mov
pop
je
stos
out
ds
daa
out
test
ret
idivl
inc
sarl
pop
inc
hlt
dec
and
or
push
adc
arpl
xor
dec
aas
mov
cmpsb
pop
cmp
arpl
or
shlb
mov
sbb
mov
sarb
decb
stc
push
pushf
in
mov
ret
mov
mov
hlt
pop
dec
sarl
fcmove
jo
scas
push
mov
fwait
mov
inc
jno
or
fdiv
mov
stc
in
xchg
jbe
enter
int3
int
mov
ja
dec
into
test
xor
popa
lock
and
loop
imul
loop
repnz
test
std
pop
rorb
mov
movsb
or
mov
mov
lods
out
arpl
inc
fnstsw
push
cmpsl
adc
in
push
pop
xchg
clc
xchg
pop
hlt
mov
xchg
inc
push
cmpl
push
les
rol
pop
inc
cmp
pop
aad
sub
mov
or
mov
aad
cwtl
mov
dec
xorl
fwait
inc
imul
mov
mov
jbe
stos
int
xchg
adc
clc
icebp
jl
cmp
xor
inc
xchg
in
sbb
inc
mov
xchg
adc
scas
push
push
shr
sub
fsubl
stc
mov
xchg
ljmp
cmp
sub
push
fs
ficompl
xor
add
stos
push
add
out
data16
jae
add
test
and
jle
leave
lcall
ret
call
nop
push
lret
dec
and
adc
mov
dec
sbb
aad
leave
dec
mov
cmpl
mov
imul
adc
sub
jge
xor
fmuls
jno
xrelease
jmp
outsb
repz
dec
inc
std
ret
fxch
fdivl
out
movsl
test
mov
mov
pop
iret
xlat
leave
push
icebp
or
shl
sbbb
xor
adc
flds
aad
dec
iret
add
jmp
test
insl
test
and
fisubrl
sbb
xlat
jl
xor
dec
cmp
fs
mov
jl
lock
dec
mov
mov
dec
jecxz
sbb
jecxz
lods
sub
loop
dec
mov
xor
test
mov
bound
rcrl
sbb
mov
test
pop
cld
cmpsl
mov
popl
in
dec
fldcw
in
rclb
mov
cltd
sti
xor
cmp
sbb
mov
aad
test
outsl
xchg
pop
inc
jno
adc
mov
aaa
fldcw
sub
push
rcll
xor
jnp
std
aaa
jne
inc
imul
jle
push
inc
dec
sub
xchg
pop
inc
mov
mov
push
stos
and
jns
xchg
pop
mov
inc
shlb
mov
sub
jns
adc
mov
xor
sub
or
pushf
sti
mov
lds
addr16
xor
sbb
pop
add
movsl
jno
icebp
add
push
aaa
push
mov
test
and
out
ret
pop
adcb
fmul
outsb
dec
rorl
jbe
and
mov
push
pop
pop
jae
xchg
xor
dec
fdivs
lds
sub
mov
mov
adc
shlb
push
xchg
inc
mov
inc
insl
outsl
test
clc
or
xchg
push
or
mov
pop
subb
iret
sahf
inc
xor
fs
leave
mov
dec
les
mov
lock
add
or
out
pop
lds
sub
lret
mov
aad
shll
les
stos
or
movsl
jb
in
sarl
sbb
inc
js
in
and
adc
pop
les
xor
mov
rcrl
push
cmp
push
cmp
push
xchg
sbb
sbb
sub
cmpb
in
cmovg
aam
jp
xor
call
imul
add
fcomip
int3
stos
bound
imul
sbb
cmp
pop
dec
movsl
push
adc
mov
pop
push
mov
xchg
out
xchg
sub
repnz
es
mov
adc
pop
insl
fisttps
mov
mov
or
adc
shll
inc
xor
ss
sbb
and
and
std
lret
ss
push
or
es
fists
out
pop
pop
and
mov
repz
dec
jmp
or
sahf
push
pop
ffreep
in
and
gs
aad
ljmp
outsb
fsubrs
jns
or
in
leave
mov
cli
sub
fcmove
xchg
or
inc
cmc
push
push
push
jg
and
sub
test
dec
pusha
mov
xor
inc
push
sub
sub
jns
cmc
arpl
dec
push
adc
dec
push
push
mov
push
jns
adc
test
shlb
fs
ret
adc
xchg
sbbb
xchg
cmp
dec
mov
mov
fistps
push
mov
adc
jo
and
adc
lock
dec
fists
fwait
and
mov
xchg
addr16
or
cwtd
mov
xchg
pop
scas
xor
shll
inc
push
pop
lock
mov
js
jmp
test
adc
sbbb
int3
loope
push
xor
into
addr16
test
lock
xor
adc
sti
jns,pn
sbb
lahf
je
js
push
mov
pop
add
lret
inc
ja
orl
dec
fwait
jmp
and
or
daa
in
inc
popa
pop
hlt
lods
out
inc
sar
xchg
cld
mov
shlb
inc
dec
lcall
into
ret
lret
into
lods
xor
dec
cmp
repz
xchg
cmpsb
xchg
jle
xor
outsl
mov
out
test
adc
mov
xchg
xor
inc
leave
mov
repz
shlb
decl
inc
outsb
mov
int
adc
and
and
or
fs
lret
into
sub
popa
pop
sub
movsb
mov
call
inc
mov
jge
jae
andl
mov
testb
mov
mov
sub
scas
sti
enter
jne
insb
inc
inc
pop
aam
scas
aad
aam
xchg
jb,pn
adc
test
gs
test
and
insb
pop
xchg
bound
out
pop
pop
push
jge
add
inc
popf
hlt
fcmovbe
notb
mov
mov
pop
jmp
int3
shl
inc
in
sbb
jns
aaa
cmp
flds
adc
lock
mov
sbb
mov
lcall
and
jns
cwtl
ss
pop
je
sarb
cmp
push
mov
sub
das
xor
fmull
push
leave
dec
push
add
xchg
or
or
push
repnz
pop
add
xor
outsb
jecxz
sbb
lcall
outsb
aas
cld
and
outsl
test
push
stos
jecxz
dec
and
adc
xlat
test
cmpsl
hlt
or
scas
sbb
and
and
outsb
jg
lods
push
sbb
das
add
lea
lods
mov
xchg
jnp
jge
cmpsb
mov
inc
xchg
shll
push
sub
test
aad
mov
int3
xchg
out
dec
outsl
push
sub
inc
test
gs
sbb
dec
xchg
mov
pop
jnp
mov
xor
cmpsl
push
insb
in
hlt
add
dec
mov
fsubrs
stos
jle
xor
cmpsb
out
lret
sub
lcall
ret
inc
cmp
js
xor
dec
shll
cmp
arpl
mov
clc
jno
ja
ds
js
std
mov
push
imul
outsl
test
pop
mov
lcall
add
mov
bound
fiadds
xchg
clc
pop
nop
call
loopne
xchg
push
cltd
daa
fwait
xor
aad
sub
sbb
movsb
pop
and
std
js
and
and
in
scas
or
cwtl
pop
ds
lock
mov
inc
sbb
shl
lods
inc
and
lock
lea
stos
sahf
pop
fisubl
pop
iret
pusha
std
push
or
mulb
mov
loope
mov
jo
mov
outsl
test
jae
std
dec
sbb
popf
sti
jle
lahf
sbb
insb
imul
push
lahf
sub
push
ja
dec
sahf
test
sbb
xchg
cmp
aad
sub
popf
lcall
mov
jae
test
loopne
stos
sarl
fildll
push
pop
sbb
sub
jo
mov
fs
xor
push
or
or
jp
mov
stos
pop
mov
cmp
mov
sub
mov
mov
jecxz
push
arpl
fmul
jl
aad
leave
ret
inc
jo
insl
mov
iret
pop
or
sbb
repnz
mov
inc
std
imul
cmp
push
lahf
les
ficoml
inc
jle
pop
out
push
xchg
and
push
icebp
jne
add
subb
lods
stc
ret
cwtl
gs
mov
fs
and
nop
mov
mov
cld
pmuludq
jg
sbb
push
adc
gs
or
fadds
lahf
mov
push
je
mov
rorb
mov
daa
dec
sub
into
orl
jmp
push
xchg
xor
test
les
adc
incl
dec
cwtl
leave
add
out
mov
xchg
popa
pusha
xchg
cmp
outsb
push
or
out
xchg
lock
gs
cmp
xchg
ror
mov
xor
arpl
push
daa
aas
sub
mov
mov
lret
sub
mov
pop
jp
mov
jge
mov
out
cmp
push
test
pop
and
mov
jecxz
cltd
add
fdivrp
and
fdivr
inc
sahf
fdivr
lcall
jae
leave
adc
lods
xchg
imul
aam
mov
jmp
lahf
adc
lods
jl
mov
or
cmp
mov
add
mov
test
mov
xlat
xchg
xor
cmp
jge
sub
mov
mov
sbb
mov
mov
push
xchg
push
sbb
push
rcrb
int
pop
aaa
rorl
adc
movsb
aam
add
xor
lods
sub
cld
imull
lea
gs
jl
xchg
lds
jmp
xor
test
mov
and
inc
stos
fabs
and
xor
xlat
add
movsl
or
xor
dec
aaa
jo
sbbb
inc
aas
pushl
ret
and
xchg
push
fldt
sub
mov
in
xor
mov
outsl
pop
imul
movsl
addr16
cmpsl
xchg
rclb
jecxz
aas
mov
in
jg
pop
sti
dec
fldcw
mov
mov
mov
jnp
sti
loope
inc
mov
adc
lods
jl
iret
dec
mov
lcall
or
inc
and
and
out
xchg
or
loopne
push
insb
xchg
push
les
iret
cli
or
rcrl
and
sub
movb
lock
xchg
inc
loope
data16
cmp
pop
cli
pop
push
xor
jb
jp
mov
shrb
test
push
call
jbe
stos
push
pushl
adc
and
sbb
addl
add
push
mov
inc
ljmp
mov
fdivp
sbbb
or
arpl
imul
xlat
out
gs
jmp
outsb
nop
mov
aad
lds
pop
xchg
nop
adc
xor
enter
xchg
fwait
sub
out
cmp
lcall
scas
leave
int
and
movsl
les
cld
push
les
xchg
mov
pop
jge
rol
std
das
xchg
test
push
push
sub
push
xlat
or
cmpsl
lds
mov
mov
push
stos
mov
sub
fs
jecxz
or
orb
mov
leave
idivb
daa
push
aaa
addr16
cwtl
xorl
inc
test
and
mov
mov
xchg
clc
pop
adc
xor
lret
pop
cmpb
mov
cld
nop
mov
daa
pop
sbb
vpsubusb
nop
daa
shrb
push
inc
test
mov
and
lahf
adc
gs
mov
add
ret
aaa
adc
xchg
mov
in
aam
cmpsb
popf
push
ds
jbe
scas
push
andl
shrl
jne
mov
test
add
jg
je
ljmp
fcomps
push
gs
lock
rclb
or
mov
cmpsl
or
js
dec
fmull
jmp
loop
push
out
jl
mov
repnz
aad
dec
push
xchg
xchg
je
ljmp
cmp
cmp
ror
adc
jae
rorb
pop
pop
add
cmp
push
sbb
adc
movsl
cmp
xchg
les
cltd
cmpsl
push
pop
sub
mov
fsubrl
repnz
mov
repz
jmp
es
cs
xor
lcall
lret
jle
sbb
mov
add
outsl
dec
mov
les
push
lods
dec
outsb
jg
jbe
push
sarb
push
jl
jmp
outsb
fs
mov
js
dec
daa
xchg
adc
pop
adc
test
cli
gs
jmp
fisubrl
jmp
add
rolb
mov
push
popa
test
fistpll
insb
fcompl
add
add
inc
mov
idivb
cwtl
cmp
cwtl
addr16
cmp
pusha
inc
push
pusha
popa
dec
adc
mov
pop
sahf
add
das
loope
cmp
xchg
stos
cmp
lock
cltd
mov
cmp
mov
les
push
lcall
cmp
sti
lahf
dec
pusha
xor
ficompl
loopne
mov
pop
mov
xchg
jg
cmpsb
push
add
mov
leave
movsl
xor
mov
sbb
xchg
mov
xchg
stc
mov
hlt
icebp
lret
pop
int
inc
js
add
dec
clc
insl
aam
clc
mov
fldt
ss
insl
xchg
push
rclb
inc
aam
sub
shlb
loopne
xchg
pop
cmpsl
mov
aam
and
stos
sub
movsl
ds
arpl
jecxz
inc
imul
ficoml
mov
xchg
test
sub
sub
mov
into
imul
adc
cmc
pop
and
push
and
add
inc
cld
sbb
mov
in
pop
loope
cmpl
push
and
fwait
out
sbb
sbb
hlt
inc
adc
sub
xchg
cmp
mov
enter
cld
push
in
pop
mov
cmpb
ficompl
push
adc
jns
jge
adc
mov
pop
adc
sub
xlat
cwtl
mov
rcl
pop
je
cmp
xchg
push
aas
inc
xchg
xchg
addr16
out
mov
outsl
push
or
rcrl
xor
dec
xchg
mov
or
bound
add
loop
cmp
dec
mov
sub
dec
xor
or
sbb
sbb
pop
lahf
lahf
pop
lret
or
insl
stos
push
add
data16
push
in
dec
lret
jl
pop
mov
ss
xchg
outsl
movsl
inc
fists
mov
and
in
dec
and
inc
loop
mov
dec
jmp
mov
sbb
xor
movb
mov
pusha
out
addr16
popf
jge
cld
add
xchg
xchg
insl
xchg
jbe
jle
pop
mov
aaa
sbb
push
mov
cwtl
mov
mov
xor
test
sbb
add
pop
addb
inc
add
lods
jnp
int3
sub
popa
stc
cltd
inc
fs
outsb
cmp
fs
dec
cli
mov
mov
sahf
cmp
ret
lcall
jle
sbbb
movsb
and
xlat
xchg
mov
sarb
inc
nop
test
jle
sbbb
ds
push
sbb
daa
jge
rorl
mov
or
les
pop
jnp
ret
mov
pop
imul
xorb
ja
pop
mov
cmp
loopnew
cmp
cmp
scas
rorl
cmp
fsubrs
loop
test
sub
dec
dec
xchg
in
mov
clc
fisubrl
inc
inc
ja
mov
fstpl
test
es
dec
xor
jp
clc
sahf
mov
aas
or
cmp
mov
xlat
shlb
das
xchg
sbb
inc
mov
out
daa
push
stos
xor
fcoms
das
xor
dec
loope
push
pop
xchg
inc
movsl
mov
sarl
rorb
adc
das
ret
lods
dec
mov
dec
mov
jae
iret
outsl
das
pop
dec
mov
aad
ja
mov
bound
scas
iret
movsb
fists
cld
mov
push
jp
xchg
hlt
push
mov
pop
int
adc
shrl
dec
push
nop
in
int3
popf
test
sbb
xchg
push
dec
addb
mov
cli
out
dec
data16
xor
outsb
sarl
mov
rorb
xor
dec
test
outsl
xchg
loope
dec
sti
std
ss
or
jmp
mov
inc
inc
pop
pop
shll
jbe
subb
test
cmpb
hlt
rcr
cmp
fisttpl
cwtl
sub
jno
fisubrs
mov
push
ret
sbb
adc
jae
adc
pushf
sub
in
lds
les
mov
int3
int
or
or
and
jo
outsb
gs
xchg
sahf
popa
stc
outsl
jecxz
mov
out
aam
xchg
push
enter
jnp
fsubrl
xchg
js
sub
cmp
fstpl
cli
dec
les
out
adc
jae
popf
pop
push
lock
ss
xor
mov
call
mov
push
shll
inc
xor
test
mov
bound
and
mov
daa
xor
sub
test
jle
mov
sahf
jae
xor
dec
and
pop
test
push
jp
cmp
xor
jo
fcmovnb
imull
loopne
sub
mov
sub
lock
imull
inc
out
pop
inc
lahf
popf
add
les
int3
xchg
mov
sub
xor
xor
mov
fildll
jmp
sub
dec
xchg
adc
sarb
jle
cwtl
sti
addr16
arpl
dec
aaa
bndstx
add
mov
inc
mov
or
call
add
push
scas
addl
adc
push
aam
js
push
cs
out
mov
outsl
or
test
in
sub
xor
xchg
jg
add
jno,pn
pop
repz
jle
jnp
test
dec
imul
add
mov
lret
push
das
int3
cs
daa
inc
mov
xchg
pushf
bound
das
push
incb
imul
and
pusha
cmc
es
jge
cltd
and
sbb
ret
mov
jne
pop
int3
jns
shrb
xchg
lret
or
inc
repnz
xchg
sub
popa
je
add
or
inc
mov
jbe
lahf
push
and
loope
xlat
push
fdivrs
es
testl
and
push
push
shlb
pop
sbb
loopne
je
xchg
mov
jae
xchg
repnz
mov
or
cltd
inc
xchg
daa
stc
gs
or
add
aam
and
out
stc
sbb
outsb
sbb
dec
scas
xor
arpl
clc
inc
pop
fsubrs
mov
test
adc
adc
mov
outsb
xchg
adc
and
adc
mov
test
xchg
fucomip
or
mov
push
pop
icebp
je
imul
shrl
lods
pop
cmp
push
push
hlt
addb
popf
or
xor
pop
div
cli
mov
fimuls
das
xchg
dec
push
inc
notl
mov
repnz
pop
mov
stos
jnp
loop
push
ficomps
inc
fstl
sbb
fdivr
lods
cmp
push
mov
lahf
and
mov
imul
fisttps
xchg
test
sub
popa
pop
xchg
cmp
mov
adc
rcll
mov
lret
jmp
jbe
add
filds
jno
fdivs
data16
cmp
stos
xchg
iret
cmc
testb
mov
int
sbb
div
inc
daa
xchg
adc
addr16
in
jmp
xor
mov
xor
sbb
aaa
pop
mov
mov
rorb
pop
mov
rol
mov
int
pusha
cmpsl
mov
pop
sub
dec
push
xchg
negl
add
xor
inc
mov
movl
cmc
jp
jne
out
fdivrs
xchg
mov
fcoml
mov
scas
push
inc
inc
scas
fnsave
scas
push
xchg
mov
icebp
adc
lea
xchg
xchg
xlat
cwtl
pop
pop
sbb
dec
pushf
shlb
mov
ss
outsb
loope
sbb
sbb
xchg
add
push
lcall
shlb
sub
in
test
pushf
mov
adcl
mov
and
mov
jmp
outsl
mov
loopne
mov
mov
fldlg2
nop
xchg
imul
mov
ja
lcall
setp
cmovnp
roll
cmp
xor
jno
test
ss
xchg
test
pop
mov
jbe
jge
adc
clc
hlt
xlat
xlat
sbb
xchg
sbb
fidivl
and
mov
cmp
ret
out
and
jno
sub
and
adc
mov
js
jne
popf
mov
aad
adc
in
jp
je
and
push
jae
xchg
cltd
push
mov
jge
insb
add
popa
lret
inc
std
add
or
in
lods
cs
ret
repz
test
and
js
cltd
push
dec
xor
mov
mov
cmpsl
fwait
and
xchg
into
int
es
mov
dec
out
push
dec
fidivl
aad
cmc
sbb
sar
mov
stos
mov
mov
addr16
jg
pop
and
ret
dec
add
shlb
adc
jl
adc
jo
push
loope
ret
ret
jmp
or
bound
popf
mov
jecxz
mul
dec
fldl
jae
sbb
pop
aam
sbb
mov
js
rolb
mov
div
pop
jmp
pop
lock
dec
mov
test
adcb
fwait
xlat
decb
pop
enter
in
ja
lret
mov
mov
xor
sbb
jbe
dec
scas
cmp
test
jp
inc
push
imul
lret
sub
xor
xor
scas
mov
jo
jno
imul
cs
sti
cmp
fisubrl
sub
sbb
scas
out
ret
pop
incl
or
cmp
jno
lret
lahf
mov
ret
push
scas
sub
xor
sbb
out
inc
xlat
adc
jnp
es
push
sub
cltd
loope
cli
mov
or
int3
out
lds
or
jecxz
push
test
mov
das
popf
ja
out
mov
ret
inc
movsb
daa
xor
faddl
add
int
cmp
xor
fbld
ljmp
adc
xor
dec
sub
ja
js
fcoms
mov
push
or
push
lret
pop
fninit
add
in
adc
mov
and
enter
or
rorl
sub
sbb
dec
xor
cmc
push
pop
jl
int3
mov
jae
jae
xorb
hlt
mov
stc
dec
movsl
shr
scas
push
inc
mov
dec
xor
sbb
dec
mov
and
mov
clc
js
xlat
mov
jg
lahf
sub
dec
shll
lods
and
sub
test
adc
sbb
fisubs
and
nop
mov
push
jae
pop
loope
sub
and
int3
sub
mov
leave
and
call
int3
lahf
popf
mov
sbb
jo
arpl
shll
inc
test
xor
and
movsl
xlat
dec
stos
insb
shrb
mov
sbb
cld
jno
out
xchg
mov
jle
std
dec
xor
pushf
mov
jno
xchg
adc
icebp
test
mov
ret
xor
scas
ss
jmp
stos
idivb
je
bt
scas
xchg
push
imulb
add
out
xor
cmp
mov
push
adc
xor
das
or
test
insb
jg
inc
repz
loopne
inc
movsb
and
add
cld
and
jnp
je
pop
xchg
cmpsl
mov
fwait
jp
ljmp
test
pop
lret
cmp
sub
arpl
pop
adc
outsb
dec
mov
sbb
pushf
pop
sub
pop
jo
aad
adc
dec
imul
das
mov
xchg
sbb
mov
mov
pop
fucomi
inc
cmp
push
addl
sar
hlt
mov
icebp
stos
jmp
in
and
movsb
les
lock
cmpsb
jle
bound
insl
mov
bound
imul
orb
stc
test
aad
sbb
mov
sbb
lods
push
sub
mov
aam
ror
pop
int
dec
mov
rol
cltd
add
sub
cmp
push
addr16
add
inc
test
sbbl
xor
pop
test
decl
add
pop
push
cs
popf
inc
bound
outsb
ficomps
aas
imul
fnstsw
out
sub
mov
mov
rcr
inc
mov
fisubrl
mov
pusha
test
shl
fdivrl
add
push
pop
mov
loope
cmp
jo
inc
mov
sar
ljmp
or
dec
and
js
mov
mov
fisttpl
ss
shr
addr16
push
mov
int3
push
je
fs
push
nop
in
and
in
xor
inc
add
scas
adc
add
pop
push
cmp
sub
and
hlt
push
mov
cld
ret
xor
out
enter
sub
cmp
push
adc
fmulp
loope
mov
jns
scas
mov
lret
icebp
adcb
cmp
xchg
mov
sahf
popf
filds
jns
fs
fdivr
push
mov
arpl
push
loop
mov
or
sub
inc
pextrw
mov
sub
pop
aaa
cltd
test
pusha
sub
xor
lahf
nop
sbb
jle
sbb
pop
fwait
mov
or
dec
scas
lods
in
fsubrs
into
inc
pop
or
dec
ret
jb
mov
cmc
xchg
push
std
scas
push
xor
bound
test
xor
imul
sbb
xchg
and
lret
mov
push
adc
ja
adc
fwait
cmpl
inc
lret
cwtl
mov
push
fdivrs
fsincos
dec
mov
pop
fnsave
mov
xchg
mov
xor
inc
sub
ficompl
test
mov
pop
push
outsb
pop
bound
iret
sbb
add
add
mov
xor
fsts
repnz
in
test
xor
nop
push
dec
out
ja
mov
out
cwtl
xchg
nop
pop
in
or
push
leave
lds
mov
mov
enter
and
jmp
fstps
mov
das
shlb
sub
add
clc
lods
add
dec
nop
xchg
mov
jae
adc
sub
fwait
dec
out
std
xor
xor
ror
push
fs
sbb
dec
add
xchg
dec
fimuls
mov
ds
and
and
cmp
std
inc
adc
ss
jo
ds
pop
in
mov
mov
cli
bound
dec
enter
sbb
test
xor
xor
push
sub
or
pop
aaa
sbb
cmp
mov
adc
cmpsl
mov
adc
sarb
xor
xor
imul
mov
xor
sbb
mov
and
popa
sbb
mov
insl
nop
add
jne
jns
jl
jo
push
fadds
scas
jmp
in
pop
xor
xchg
push
xor
push
loopne
dec
dec
fnstsw
push
mov
add
daa
fstl
and
jge
inc
mov
andl
clc
addr16
jo
stos
push
lds
divl
arpl
jmp
or
sbb
xchg
mov
and
dec
aaa
cmp
test
sub
ja
inc
cmp
jmp
imul
jmp
movsl
push
add
int
fldt
mov
in
lahf
push
shrb
cli
and
add
shl
aaa
jge
std
cli
icebp
push
nop
out
xlat
lods
dec
insb
jns
arpl
iret
mov
push
ret
mov
pop
dec
cmp
fidivl
sbb
decl
mov
aaa
cmp
stos
inc
sbb
mov
mov
lods
push
test
cld
mov
cmpsb
je
loopne
add
movsb
xchg
std
sbb
add
xchg
cmpsb
pop
sub
stos
mov
xor
mov
movsl
dec
jo
aaa
je
xchg
sbb
push
xchg
lock
lret
push
push
sbb
sub
xor
iret
pop
daa
es
inc
psraw
clc
xlat
arpl
les
inc
add
inc
mov
rcrb
mov
sbb
shrl
cmpsb
je
call
out
push
outsb
push
fs
stos
mov
pushf
inc
pop
fmull
jle
inc
hlt
sub
pop
pop
dec
sbb
in
push
shlb
dec
cmp
jbe
and
ljmp
ds
mov
int
sbbb
or
mov
lods
push
int
shll
sub
mov
and
aad
add
mov
enter
cmp
cmp
mov
xor
lret
aam
cmp
cs
add
dec
shlb
lret
pushf
push
bound
push
dec
xor
icebp
outsb
test
daa
je
loopne
mov
test
sub
jmp
ret
push
mov
mov
adc
adc
adc
dec
lcall
and
out
mov
mov
test
dec
into
inc
mov
xlat
pop
dec
or
xlat
or
loop
jmp
aaa
add
ss
mov
sbb
mov
repnz
push
mov
jae
insb
adc
mov
adc
repz
js
popa
test
xchg
sbb
ljmp
sahf
push
mov
or
mov
xor
popf
adc
gs
mov
or
mov
mov
push
mov
sbb
cmp
ja
mov
push
stc
roll
aam
inc
jbe
mov
cltd
mov
cmp
pop
int
leave
push
fbld
xor
adc
jb
shl
pusha
gs
or
repnz
mov
push
outsl
xchg
arpl
fistpl
out
push
mov
mov
ja
inc
out
xchg
pushf
mov
jl
inc
and
popa
mov
adc
push
int3
mov
stos
mov
pop
test
lcall
cmovo
mov
loopne
nop
jg
mulb
adc
pop
cmpsl
adc
mov
and
mov
push
add
jbe
ss
in
pop
pause
or
daa
dec
cld
sub
push
rcll
in
lret
in
loop
cmp
out
push
cli
dec
xchg
sbb
neg
fmull
in
loopne
and
xchg
jle
pusha
fisttpll
inc
jmp
xlat
sub
fs
jg
pop
pop
inc
test
cs
cmp
pop
in
mov
je
xor
into
cltd
imul
icebp
pusha
fcmovnb
loope
jp
fimull
sub
addr16
out
lcall
mov
mov
xchg
sub
js
cmp
add
movsl
pop
in
enter
pmulhuw
xor
jle
push
inc
jp
das
and
push
xchg
sub
mov
aaa
in
idivl
cmpsb
fimuls
mov
mov
mov
pop
cmp
push
jmp
xlat
lret
pop
pushf
adc
add
or
das
ds
mov
in
cli
dec
fistpl
pop
aam
jae
mov
mov
add
adc
pushf
lret
inc
imul
int
cmp
push
out
fcoms
fcmovne
lcall
cmpsb
cld
cmp
dec
popf
xor
movd
mov
in
mov
ret
xchg
ret
push
inc
shr
call
mov
pop
in
arpl
mov
ret
nop
inc
call
flds
rcr
lret
cltd
lods
insl
mov
test
addl
jbe
testb
jle
loopne
fidivrl
nop
xor
cmp
cmpsb
add
and
jecxz
repnz
lea
or
xorb
xchg
int3
shll
fidivl
addr16
and
test
cmp
mov
xor
inc
fadd
and
cld
addb
imul
out
sti
fadds
jp
push
push
sbb
dec
pop
cmp
xchg
sub
jno
out
xchg
mov
cmpsl
lret
imul
jl
jp
jno
jbe
xor
fcmove
int
mov
mov
std
cmp
jns
add
pop
jge
add
test
inc
cmp
test
outsl
pop
adc
idivb
insb
test
push
mov
jb
dec
xchg
xchg
neg
out
movsl
mov
xor
sub
mov
cmc
fbstp
mov
add
push
and
andl
clc
pop
push
cmp
bound
adc
sbb
je
jp
and
push
loop
rcll
lock
aas
and
and
or
icebp
push
push
andl
pop
hlt
cmp
push
dec
in
or
adc
shrl
mov
push
dec
mov
popa
test
jns
push
outsb
jno
rorb
mov
mov
loopne
jbe
loope
dec
push
add
pop
sub
lret
xchg
scas
push
fs
mov
add
or
in
pop
clc
loopne
adc
icebp
shll
jge
sbb
dec
mov
pop
stc
pop
adc
add
pushf
sub
sahf
push
pop
addr16
add
out
addr16
out
stc
data16
mov
inc
inc
or
cld
xchg
mov
push
jmp
dec
repz
repnz
cmp
pop
push
xchg
icebp
dec
repnz
jmp
movsl
in
push
jb
add
hlt
cmc
cmp
fisubrs
mov
mov
fnstcw
jl
loopne
sub
ret
cld
mov
in
mov
cltd
dec
sbb
scas
fs
js
push
inc
aas
cmp
mov
dec
dec
sub
push
inc
lock
and
clc
dec
xchg
pop
test
jmp
loopne
mov
mov
cmpsl
lcall
popa
or
fstpl
xchg
mov
xchg
inc
push
gs
jle
mov
sbb
jae
add
out
je
mov
pop
sbb
jns
push
mov
cltd
dec
pop
mov
in
or
push
sti
popa
negb
ljmp
add
cld
mov
add
xchg
pop
loope
scas
or
sub
adc
xor
jae
aad
jle
andl
iret
pop
fisttpll
popf
and
test
xor
xor
scas
imul
std
popa
lock
cmc
std
fucompp
in
testb
mov
xor
lret
hlt
inc
fiadds
lret
pop
cmpsl
dec
and
add
xchg
insl
or
inc
jne
aaa
fstpl
movsl
leave
jb
lock
fwait
gs
ja
jb
arpl
mov
adc
js
or
xorl
std
scas
xor
cmp
pop
cmp
sub
subb
outsb
repz
fidivrl
mov
add
and
mov
sahf
popa
fdivp
popa
pop
jne
nop
sbb
or
loopne
adc
enter
jno
fcoml
adc
cmp
loop
scas
in
adc
sbb
cmc
pop
cli
stos
repnz
push
call
pop
sbb
mov
loopne
xor
in
popa
loop
dec
push
cwtl
imul
int
mov
imul
aaa
ja
sbb
lea
test
mov
or
mov
in
fs
lret
in
dec
push
push
push
and
mov
clc
mov
arpl
pop
dec
fiaddl
call
lret
mov
jno
daa
add
jecxz
stc
dec
lods
sbb
add
inc
fisubrl
sub
add
push
dec
push
scas
and
sahf
sbb
sbb
cmp
lock
sub
mov
mov
into
inc
je
or
addr16
iret
mov
ds
or
test
dec
cmpsb
fisttpl
and
aad
add
lret
adc
stc
inc
insl
insl
rcrb
cs
stos
dec
jbe
scas
sbb
cmpsl
pop
notb
imul
jge,pt
popf
cmpsl
mov
adc
jg
test
inc
cmp
and
mov
fcmovnb
movsl
mov
push
fs
pusha
or
int3
dec
lcall
add
out
and
int3
and
push
pop
cmc
jns
cs
out
test
xchg
jp
mov
fidivl
jo
cltd
pop
mov
fcmovb
inc
mov
int
sbb
jecxz
adc
ror
push
aad
lods
sti
adc
scas
push
ja
enter
xor
lret
lods
mov
fisubrl
mov
les
mov
mov
mov
test
lea
rorl
leave
ret
xchg
cld
in
add
push
scas
jl
or
adc
sub
xchg
in
xchg
jecxz
fldenv
jae
dec
mov
cmp
arpl
inc
push
cmpl
mov
scas
shl
repz
fmuls
add
out
dec
pop
xor
rcll
clc
dec
sbb
dec
cld
or
out
sbb
jge
push
lods
push
xchg
cmp
pop
jmp
mov
insl
cmpsl
repnz
add
arpl
mov
lods
mov
sub
dec
adc
lcall
or
dec
movsl
cmc
insb
push
dec
sahf
in
push
mov
sbb
daa
lret
inc
mov
or
repz
fiadds
in
xchg
out
outsl
xor
sbb
mov
imul
jne
imul
pop
dec
loopne
push
iret
inc
testb
sbbl
ror
pop
adc
es
sub
push
mov
jne
or
jmp
cmp
pop
dec
adc
or
inc
push
push
jle
shlb
pop
js
scas
jge
arpl
and
push
lcall
repz
sub
fbstp
dec
dec
mov
pop
add
add
in
mov
iret
sub
mov
or
mov
stos
jns
fbstp
test
push
ret
pop
int
repz
out
imul
or
sub
popa
push
cmp
or
insl
cmp
cmpb
mov
lods
mov
repnz
and
xor
sarl
imul
shl
add
aad
adc
push
jo
dec
shlb
pop
stc
jge
push
mov
frstpm(287
jne
jnp
cwtl
leave
test
jmp
pop
pop
xchg
loop
imul
xor
xchg
pop
ds
mov
adc
push
sti
in
adc
push
jno
imul
icebp
aad
sbb
or
inc
mov
sub
cs
pop
xchg
xchg
xchg
xchg
int3
icebp
insb
mov
sbb
mov
inc
cmp
jo
jae
sbb
mov
or
sarb
sti
xor
mov
push
out
add
stos
add
push
clc
or
adc
or
roll
gs
sahf
mov
jbe
call
mov
and
shl
arpl
jge
cmp
ja
dec
jo
std
shlb
push
inc
cmp
icebp
sbb
out
dec
outsl
pop
add
test
mov
push
int
inc
cmp
xor
fwait
shrb
inc
fidivrl
add
test
setae
rcll
jmp
mov
xchg
pop
mov
pop
test
repnz
jle
ret
cmp
in
and
jo
jno
prefetch
mov
jnp
gs
pop
mov
ja
inc
jmp
sub
das
leave
rolb
cmpsl
mov
scas
fsubp
add
xor
adc
into
mov
outsl
pop
loopne
cwtl
adc
inc
in
mov
adc
sbb
pop
lods
pop
xor
push
sbbb
xchg
add
sbb
mov
mov
sbb
in
xchg
and
xor
pop
sbb
push
inc
push
or
cmpb
idivl
or
std
pop
jge
jbe
xchg
call
jo
stos
outsb
movsb
rorb
popa
setbe
inc
mov
adc
cmp
aas
cmp
pop
sbb
loopne
das
xlat
bound
mov
lret
push
push
dec
fistps
push
js
ss
movsb
imul
fsts
sub
mov
jge
push
daa
daa
imul
das
sub
or
add
lea
mov
cmp
fldenv
aaa
and
inc
sbb
pop
sub
jne
in
mov
sti
jne
pushf
mov
xchg
xor
scas
mov
leave
sbb
into
iret
sar
insb
fwait
and
lea
push
inc
aad
sti
mov
add
push
jno
rcr
in
mov
sub
lahf
xorl
loop
and
imul
std
into
push
jnp
pop
and
clc
adcl
lcall
mov
dec
xor
push
mov
ss
jae
out
aaa
add
xchg
xor
inc
cmp
add
mov
xchg
das
and
cli
xor
sub
inc
mov
pop
ds
sbb
jnp
mov
enter
xchg
jae
mov
mov
hlt
jmp
mov
xchg
xchg
iret
negl
pop
cltd
mov
test
and
push
arpl
negb
popa
jne
xor
jp
mov
ret
mov
inc
testb
in
pushw
add
cmp
cmp
cli
repz
dec
jns
lds
push
sti
decb
rclb
mov
add
int
test
das
add
adc
shl
jb
cmc
and
and
fucomp
repz
mov
mov
mov
add
insb
push
mov
mov
jp
xchg
fstpt
adc
cmpsl
icebp
adcb
into
pop
enter
dec
pop
cmp
loopne
subl
mov
int3
xchg
lcall
jo
xor
xor
fadds
mov
sub
cltd
add
push
pop
or
jnp
test
and
fidivs
fldt
dec
sbbl
ja
mov
lahf
add
pusha
jmp
shll
aad
movsl
ljmp
clc
lcall
xchg
out
out
es
lret
mov
cli
xchg
push
cmpb
shll
ds
push
mov
shll
jne
xchg
cwtl
aad
add
inc
iret
sbbl
aam
test
push
fiaddl
pushf
je
shlb
adc
add
jmp
sub
dec
lcall
pusha
push
je
sub
cmc
push
jbe
xchg
xchg
mov
jle
xor
imul
sbb
xor
push
popf
imul
pop
fsubrs
imul
mov
xchg
xor
cmp
scas
mov
dec
mov
out
lcall
mov
or
cltd
jne
outsl
push
cld
mov
mov
pop
scas
fsub
adc
hlt
dec
inc
ss
mov
pusha
aas
out
fnsave
rcrl
fldt
movsb
fs
sbb
push
rcrl
loopne
cmpb
movsb
in
lods
mov
iret
test
jo
sti
pop
sub
sbb
mov
or
pop
pop
mov
cmc
inc
daa
xlat
daa
mov
sahf
sbb
and
dec
dec
cmpsl
xchg
lret
call
xchg
sarl
xchg
jle
dec
mov
push
in
add
das
mov
int3
or
bound
mov
jmp
add
sub
jl
in
inc
fcomps
stos
outsb
push
cmc
pop
inc
sbb
xor
cld
rol
adc
jne
dec
xchg
sub
js
fs
jno
add
pop
movsb
mov
in
mov
fsubl
ret
jno,pt
or
push
push
mov
mov
punpcklbw
test
fs
stc
aad
xchg
dec
sbb
pop
jecxz
cmp
add
jp
pop
mov
ljmp
mov
lret
dec
fnstsw
loop
jmp
iret
dec
xor
fnstenv
fcmovbe
dec
sbbb
rcrb
scas
xchg
out
ja
add
lahf
int
pop
pop
cmp
sbb
lock
mov
inc
jae
gs
dec
adc
inc
add
dec
inc
xchg
add
xchg
push
pop
add
push
mov
lods
lret
xchg
cmpsl
mov
negl
xor
popf
lret
or
adc
mov
inc
push
pop
cli
imul
in
jbe
bnd
mov
pop
jle
aas
outsb
mov
mov
xchg
inc
scas
push
fidivl
add
imul
out
sets
and
pop
jge
ret
lcall
push
add
or
jl
push
xchg
inc
jmp
data16
jg
cwtl
mov
call
pop
xchg
jp
addr16
cmp
xorb
scas
test
insl
fwait
cmp
xchg
jb
jp
mov
iret
adc
test
push
mov
popa
lret
mov
sahf
lret
cmpsb
dec
cli
dec
mov
icebp
enter
outsb
in
pop
lahf
jno
mov
stos
jnp
adc
push
bound
loop
outsl
jo
fcomps
adc
push
add
addr16
enter
dec
or
pop
lock
xchg
adc
inc
insb
dec
push
enter
pusha
pop
cmp
cmp
and
imul
lds
lret
inc
pop
mov
aad
jge
cmpsb
ficompl
mov
cmpsb
add
xor
iret
mov
xchg
call
in
pop
stos
nop
add
std
sbb
mov
ficompl
aas
xlat
das
in
fsub
std
imul
lods
xor
dec
scas
pop
in
cmpsb
aaa
shlb
mov
addb
je
inc
and
lcall
stc
xor
mov
lock
sbb
ficoml
sub
fisubs
mov
stos
dec
cmpsl
xor
outsl
adcl
lahf
push
mov
push
in
push
ds
fstpl
and
push
and
addb
sub
pop
inc
in
dec
jne
dec
std
std
xor
adc
mov
add
loop
adc
jne
jne
pushf
test
jae
enter
push
fsubrl
inc
inc
lods
xchg
arpl
jbe
cltd
xchg
xchg
sarl
aam
cmp
pop
dec
xlat
xchg
xchg
dec
cmp
lcall
call
in
inc
pushf
test
inc
jmp
into
insl
popa
jbe
insl
jge
mov
fbstp
jo
adc
xchg
xchg
out
push
mov
and
push
repnz
fbld
jmp
adc
mov
lds
fdivrl
pop
pop
inc
adc
fxch
xor
pop
repz
ja
fcoms
xor
cmp
inc
mov
jne
sub
test
mov
sahf
jmp
lea
mov
jl
pop
jge
push
add
call
orb
in
push
ss
push
loope
mov
mov
mov
repz
insl
mov
adc
inc
mov
pop
inc
dec
ja
mov
into
sub
addl
fmull
push
sub
ficomps
movsl
rcll
dec
mov
lea
data16
mov
test
jle
leave
movsl
or
insl
test
mov
mov
popf
fisubrs
stc
pop
in
loopne
sub
jne
xchg
push
dec
push
lret
jle
jae
stos
in
or
jmp
sub
xor
jg
stos
pop
insl
sahf
pop
sub
outsb
cmpsl
out
lea
sbb
out
fistpl
mov
leave
xchg
mov
mov
clc
stc
cmp
dec
leave
adc
imul
sbb
test
push
adc
sbb
stos
andb
outsl
imul
jno
jg
das
pop
mov
shlb
movsl
push
aas
jp
mov
fstl
push
cmp
mov
mov
push
clc
sbb
cmp
push
in
rcrb
xchg
and
adcb
repnz
lods
push
outsb
test
jb
dec
jnp
pop
sar
add
sub
rcrb
push
pop
jb
popa
push
cmpsl
movsb
jne
and
cs
stos
out
aad
push
loope
ror
jno
mov
int3
jne
adc
xchg
mov
ffreep
shrl
scas
pop
cli
push
es
adc
xchg
stc
mov
into
mov
sub
call
cmp
int
push
or
dec
loope
aam
sbbb
stos
push
mov
loope
sub
push
ss
xchg
pop
sbb
scas
loop
cmp
xor
in
ret
outsl
pop
lds
icebp
push
je
push
cli
inc
aad
das
pop
and
and
mov
sbb
ret
mov
jmp
pop
mov
pop
rorl
inc
jl
jmp
dec
scas
nop
xchg
idivl
mov
enter
adc
lock
sbb
jne
call
mov
mov
into
dec
mov
jmp
clc
sbb
ret
imul
imul
push
xchg
out
inc
fcomip
sub
xchg
gs
xchg
and
mov
mov
fdivrs
inc
dec
push
jmp
loope
loop
xlat
in
mov
aad
adc
or
push
jo
das
outsl
lahf
inc
add
adc
mov
pop
jo
test
enter
cmp
insb
jge
pusha
cmpsb
in
out
cwtl
mov
das
lcall
pop
leave
stos
sbb
in
xor
cmpb
fdivr
sub
xor
sbb
pop
sub
in
add
pop
lahf
loopnew
aaa
es
cmp
insl
inc
and
dec
pop
mov
xor
and
dec
aad
cmp
cltd
popa
cmp
mov
xchg
jg
pop
xor
imul
out
mov
xchg
adc
jp
aaa
hlt
and
outsb
or
lods
inc
pop
mov
pop
fs
mov
out
sbb
adc
sar
xorb
iret
bound
lock
sti
mov
cmc
ficompl
pop
iret
adc
cmp
inc
pop
shlb
cwtl
pop
test
pop
mov
es
lea
rcrl
mov
addr16
push
jp
pop
sbb
sahf
mov
and
push
pop
xchg
fdivrs
lret
shrb
pop
fbld
cltd
push
mov
push
pop
pop
and
pop
xchg
mov
fs
push
frstor
xchg
cmpsb
xlat
jl
push
lcall
or
sti
cmp
leave
jne
ja
adc
lds
sti
fcoml
xor
dec
les
mov
pop
cmpsl
xchg
gs
hlt
ljmp
sahf
or
push
mov
testb
adc
mov
cmp
lret
rcrb
fistpll
inc
jbe
mov
and
out
psubsw
imul
lea
int
or
movsb
mov
mov
ret
test
daa
and
mov
xchg
les
mov
pop
push
je
mov
pop
mov
and
shr
xchg
sub
mov
xchg
cltd
dec
xor
pop
loope
xor
lcall
lock
fdivl
push
lea
negb
movsl
sbb
push
imul
push
fistpl
mov
mov
pop
insb
jns
adc
shlb
add
repz
push
or
pop
int
sub
sbb
push
jmp
pop
mov
mov
js
popa
insb
adc
jecxz
xchg
aas
gs
dec
mov
jecxz
or
push
mov
mov
xchg
mov
inc
xor
scas
inc
in
jno
aad
pop
xchg
sub
xor
dec
mov
jbe
jge
push
mov
cmpsb
das
mov
xchg
xchg
inc
adc
sbb
xor
dec
adc
mov
lahf
add
insl
mov
call
ss
mov
push
adc
push
lret
jle
mov
add
test
inc
cmp
lds
out
or
imul
jnp
pop
mov
pop
imul
lods
popf
or
sub
mov
xchg
sub
mov
repnz
test
push
and
push
mov
enter
mov
mov
rcrl
and
fs
sbb
mov
push
mov
cmpsl
ds
in
out
jb
jne
loope
daa
dec
ficoml
popf
arpl
fnstcw
jbe
adc
ret
mov
in
in
adc
adc
jns
sti
xor
inc
cltd
xchg
or
sbb
repz
insb
sbb
xorl
ja
popa
dec
inc
sarl
out
jo
ret
js
or
ss
fsubr
cmc
mov
scas
daa
and
mulb
movsl
mov
adc
lods
mov
loope
add
jb
jae
xor
pop
lock
jno
loop
cmp
adc
mov
fldpi
stc
lret
xlat
notl
orb
pop
cmpsb
sub
or
cwtl
and
cmp
in
sub
bound
cmp
mov
push
sub
test
dec
pushf
cmp
sub
testl
loopne
sarb
fldl
test
cmp
test
adc
pop
sub
pop
addr16
jbe
bound
rorb
out
pusha
fdivrs
sub
insl
js
cmpsl
mov
popf
insb
mov
mov
xchg
xor
cwtl
inc
push
push
pushf
xchg
pusha
fiaddl
cmpsb
fs
in
adc
aad
pushf
lret
jecxz
fsubrl
cmc
sub
push
add
inc
inc
aad
jae
lret
fildl
jmp
mov
sbb
mov
sbb
sbbb
pop
cwtl
cmpsl
jo
aam
adc
cli
test
adc
adc
adc
cs
dec
or
test
pushf
leave
and
cmc
dec
push
inc
lds
push
and
mov
pop
fmulp
fdivs
cmp
push
jle
cmc
sbb
mov
stos
adc
adc
movsl
cmp
dec
push
je
xor
mov
adc
cs
push
mov
jno
rol
cmp
sbb
loopne
shrb
pusha
jo
call
dec
adc
cltd
pop
cmp
sbb
jecxz
add
ss
cmpsl
test
ljmp
sub
mov
cmp
and
push
bound
push
mov
mov
aaa
xchg
jo
inc
pushf
pop
fcomi
pop
sbb
stc
jecxz
mulb
inc
jecxz
sub
popa
test
mov
or
incl
dec
enter
push
rorb
lahf
jae
adc
cmpl
or
int3
inc
or
push
adc
cmpsl
and
mov
or
lcall
push
outsl
and
lcall
mov
in
mov
mov
add
test
in
mov
ja
rol
pop
test
mov
outsl
stos
xlat
sahf
popf
inc
sub
xor
xor
cs
divl
xchg
shlb
scas
fsubl
or
adc
dec
cmp
divb
sub
call
sub
shrb
pop
push
inc
jno
xchg
sarb
popa
cmp
pop
rcl
pop
ljmp
int
mov
shr
int
jle
jnp
loope
notl
pop
adc
movsb
dec
push
jae
mov
push
jne
insb
fiadds
xor
pop
ja
xor
ror
pop
jnp
sub
jle
jecxz
jl
popf
bound
movsb
sbbl
jp
leave
out
sbb
mov
jl
jge
js
and
and
inc
stos
jl
mov
inc
sub
add
cmp
sub
mov
lcall
jns
scas
popf
out
push
mov
in
stos
inc
sub
jl
pop
lahf
mov
adc
or
aam
addb
lock
lret
mov
sbb
pop
pop
cmp
js
dec
sbb
jge
and
popf
xor
lahf
daa
pop
icebp
pop
dec
das
xor
adc
pop
push
or
xchg
xchg
mov
fisubrl
les
rorl
push
dec
into
loope
sbb
push
xchg
xchg
jmp
int3
jb
in
test
loope
ret
pop
mov
jl
cli
and
int3
dec
movsb
lods
lods
cmp
xchg
cmp
inc
fsubl
out
mov
gs
sar
loopne
mov
add
test
jecxz
repnz
data16
lcall
dec
or
mov
sti
aaa
mov
xchg
int3
pop
loopne
mov
adc
test
stc
fnstenv
and
aaa
add
out
in
sbb
int3
sbb
test
mov
xchg
int3
outsb
xor
pusha
xchg
addr16
mov
shr
sub
mov
pop
fldt
push
mov
xor
xor
pop
cwtl
out
imul
insb
sbb
sbb
dec
ss
cmc
lcall
mov
cmp
sbb
xor
sbbl
iret
mov
dec
decb
sbb
movsl
add
mov
jp
icebp
mov
stos
scas
movsl
adc
mov
xor
out
cmp
mov
cs
and
pop
stos
adc
xchg
aad
ja
lret
jecxz
push
adc
shrb
popa
jb
sbb
in
mov
aaa
push
mov
les
jg
les
rcr
lcall
mov
fstpt
clc
sub
lcall
sbb
xchg
int
sbb
mov
dec
lret
mov
cmc
or
inc
mov
dec
icebp
fdivl
repz
xor
popf
arpl
test
nop
rorb
dec
or
in
mov
adc
dec
sbb
ret
mov
add
ret
cmp
lods
add
insb
mov
mov
adc
test
mov
dec
enter
shll
lret
lret
mov
test
add
lret
notl
out
jnp
or
out
jmp
sub
fldt
pop
in
rep
popf
lds
fcmove
stos
nop
int
jl
jns
or
inc
test
pop
cmc
popa
popa
cwtl
pop
sahf
mov
jns
fwait
daa
push
stos
mov
lock
out
icebp
jbe
scas
jae
xlat
sub
add
addr16
xchg
bound
fsubs
aas
popf
add
repnz
jg
sti
adc
push
pop
lea
dec
sbb
roll
shrb
fidivrl
and
cmp
mov
jle
stos
aam
xlat
scas
dec
jbe
int3
les
mov
push
fistpll
mov
ficoms
and
fcoms
mov
push
leave
mov
mov
enter
mov
in
xchg
pusha
or
push
xor
mov
push
xor
mov
rcll
push
xchg
adc
mov
enter
les
push
adc
cld
push
cmpsb
inc
add
divl
fildll
inc
inc
scas
stos
movsb
repnz
dec
popa
dec
or
div
adc
stos
push
cmc
pop
jle
dec
movups
inc
xchg
addl
fs
jb
arpl
arpl
ss
mov
inc
jle
cmp
xor
fldenv
inc
fwait
insl
fidivs
sub
and
dec
mov
addr16
fcmovb
dec
mov
xor
inc
jge
arpl
push
jmp
icebp
and
push
jae
mov
mov
xor
fdivs
dec
test
ss
andl
scas
inc
in
stos
mov
movsl
dec
loope
out
jl
js
xor
out
loope
jmp
ljmp
dec
add
int
xor
aaa
mov
ret
push
lret
sub
lret
insl
push
pop
push
sbb
in
push
pop
or
mov
pop
adc
mov
leave
dec
mov
mov
mov
les
imul
ret
neg
pop
or
lcall
pop
mov
test
lea
lret
mov
add
nop
js
xchg
push
mov
mov
add
add
or
lods
sub
sub
mov
push
xor
lret
jmp
rolb
inc
gs
xchg
ficomps
ds
bound
mov
faddp
sti
insl
popa
inc
add
bound
aad
jp
pop
dec
jge
and
lea
jbe
mov
add
sub
mov
mov
cmp
punpckhbw
test
jecxz
lret
cld
outsb
js
mov
sub
iret
mov
mov
jno
repnz
jne
adc
js
cmp
xchg
not
mov
adc
and
xchg
jp
pop
sti
cltd
fistpl
fdivr
push
mov
pop
scas
in
and
nop
and
sub
xlat
dec
lahf
repnz
add
jecxz
xchg
dec
inc
loopne
mov
sahf
lock
mov
enter
popf
push
adc
popl
notb
mov
cmp
inc
sti
test
jnp
push
mov
mov
call
outsl
rcrl
or
add
test
in
rcl
pop
cmp
and
pop
mov
or
inc
out
jbe
rcrl
int3
sub
pop
mov
shll
cwtl
xchg
adc
inc
mov
in
cmp
outsb
lahf
cmpsb
sub
cltd
xor
mul
pop
mov
out
hlt
push
flds
in
dec
inc
add
out
mov
mov
push
add
xchg
cmp
js
hlt
inc
add
lret
lcall
mov
push
lret
in
cwtl
mov
and
jnp
add
aam
sbb
dec
pop
gs
ficoml
mov
mov
lods
imul
push
add
adc
mov
pop
xor
inc
fisttps
jl
sub
push
stc
xor
popf
inc
lods
push
cltd
dec
sub
cmpsl
xchg
insl
std
pop
adc
mov
jb
fsubl
mov
jge
jecxz
inc
into
sub
fdivrl
xor
sbb
mov
lods
je
xchg
push
push
lock
in
test
cwtl
push
inc
xchg
dec
pop
cmp
add
out
pusha
xchg
cmp
leave
inc
cmp
push
addr16
fistl
pop
sub
fwait
xchg
out
test
and
loopne
sbb
js
or
ljmp
outsl
jb
decl
pop
mov
cs
out
mov
aad
push
sbb
cltd
xor
scas
ret
mov
xchg
movsl
loopne
rolb
mov
gs
pushf
in
inc
dec
xlat
mov
pushl
mov
imul
xlat
and
dec
fiadds
mov
mov
or
jp
adc
hlt
daa
div
stos
sbb
pop
test
lret
cmp
test
in
loope
add
loopne
jecxz
out
xorl
push
cmpsl
sbb
inc
es
loopne
sbb
frstor
loopne
xor
pop
mov
pop
mov
loope
jmp
mov
sub
and
or
xchg
adc
movsb
movsl
cmc
js
push
adc
lods
or
mov
mov
out
ds
mov
in
aaa
inc
sub
loopne
jb
push
pop
shrb
call
rcll
and
adc
and
jmp
arpl
or
lret
shll
mov
ja
xchg
dec
xchg
ffreep
out
hlt
pop
sub
rorl
leave
mov
popa
inc
fwait
les
xchg
rorb
icebp
dec
das
cmova
cltd
js
jl
insb
incb
push
xor
add
imul
arpl
or
sbb
aam
lahf
jns
cld
bndldx
pop
lahf
and
pop
xorb
add
add
pop
and
scas
test
adc
jae
paddusb
jl
popf
xchg
mov
dec
mov
inc
hlt
shlb
dec
rcrb
mov
lds
push
cmp
and
or
adc
xchg
fmull
cltd
mov
arpl
fnstcw
push
mov
jle
outsl
mov
jle
fcoml
inc
shlb
xchg
and
mov
popa
cmp
test
xor
add
int
int3
js
enter
lahf
ret
mov
cwtl
xorb
stos
pop
cmp
pop
xor
sbb
jmp
xor
xchg
sub
pop
sub
call
insb
loopne
push
pop
stc
loopne
push
dec
data16
test
loopne
push
cmp
loope
or
inc
hlt
roll
fdivrl
jo
mov
xor
sahf
lock
ja
jmp
xor
xor
leave
in
sahf
cmpsl
fiaddl
adc
xor
js
mov
push
std
or
and
xlat
dec
push
adc
dec
fmull
push
mov
cmp
cmp
xchg
xchg
das
jecxz
cmp
repnz
mov
xor
sbb
fs
mov
jae
int
xchg
hlt
mov
adc
cmp
rolb
mov
shlb
fwait
sub
and
stos
ret
lcall
fstpt
jle
aam
xchg
xchg
fdivrl
out
and
add
pop
mov
add
rcll
mov
jg
or
pop
or
jl
adcb
sub
push
cmp
lods
in
push
in
mov
inc
fstps
scas
fwait
bound
es
and
mov
sub
call
jno
jbe
test
mov
push
mov
inc
and
fnstenv
and
pusha
push
xchg
enter
xor
jp
pop
or
addr16
lea
outsl
pop
aas
sub
mov
shll
mov
jns
cmc
xchg
adc
push
xor
bound
jnp
inc
adc
aaa
outsb
je
loope
inc
sub
les
xchg
fldlg2
rolb
imul
cmpsb
repz
mov
lret
out
jb
inc
test
les
dec
add
xorb
cmc
out
or
test
sahf
jae
mov
push
insb
adc
out
lock
lret
in
ds
mov
bound
push
call
add
negb
mov
lcall
xchg
pop
stos
pop
adc
pop
inc
mov
pop
fcmove
xor
xor
lcall
and
cld
mov
or
push
roll
out
clc
incl
cmp
popa
mov
es
loope
fnstsw
sahf
jno
push
jno
cltd
aas
bound
pop
jecxz
push
jl
mov
mov
shrl
sub
xchg
or
movsl
xor
cmp
fcmovb
or
push
mov
cmp
inc
dec
and
push
shlb
mov
xchg
or
xor
es
lock
rol
inc
mov
sbb
mov
fwait
imul
cmpb
pop
fs
push
push
and
aaa
jecxz
movsl
aam
dec
dec
pop
je
lock
mov
lret
cwtl
or
aas
out
loopne
cmp
push
mov
cmp
pop
fs
mov
loopne
aaa
es
test
sbb
dec
xor
loop
lock
and
cmp
leave
add
stos
out
or
mov
push
and
add
cmc
mov
pushf
xchg
adc
jmp
ss
sar
inc
out
xor
lret
imul
pop
stos
popa
lods
pop
push
or
fistps
inc
jo
daa
pop
mov
add
cmpsl
mov
cs
push
dec
xor
aas
add
and
mov
test
jmp
in
mov
push
lret
ss
insl
inc
arpl
into
xor
mov
xchg
xchg
ror
sub
inc
mov
and
jmp
inc
sub
or
jae
jns
ret
fisttpll
stc
mov
mov
lret
fldenv
ja
xchg
cmpsl
xor
test
divl
movsb
enter
movsl
xor
cwtl
loope
cmpsl
std
adc
outsb
dec
sub
pop
subl
cli
mov
add
push
les
pushf
xchg
push
in
mov
dec
push
shlb
inc
sub
add
punpcklwd
ds
roll
mov
lock
ret
mov
stos
jno
mov
hlt
cmp
push
ja
stc
add
jbe
add
mov
mov
cwtl
shlb
js
cli
jl
inc
jo
hlt
mov
out
mov
xchg
mov
cmp
or
add
in
mov
add
test
pop
int3
cmp
xor
lahf
shll
xor
pushf
and
jb
pop
xchg
jle
mov
inc
or
int3
jecxz
mov
pop
js
insl
pop
int
mov
push
fistps
xor
jl
inc
movsbl
stc
daa
stos
or
in
inc
aad
xor
push
jl
push
or
adc
xchg
ljmp
xchg
xor
aas
orl
xor
fildll
add
popf
push
ja
xor
mov
ret
push
stc
stos
inc
iret
xlat
lahf
clc
fistl
pusha
push
jmp
sub
mov
push
sbb
outsl
and
pushf
inc
inc
das
sahf
lea
push
mov
call
movsl
adcl
aad
pusha
jns
mov
pushf
pop
stos
dec
out
out
jo
push
mov
adcb
mov
outsl
jp
lds
mov
pop
cmp
out
cmp
push
xchg
adc
inc
jge
sbb
pushf
inc
sub
popf
mov
repz
lds
add
or
or
adc
inc
shll
repnz
and
add
mov
ss
loop
xchg
mov
xor
leave
xlat
xorl
sbb
sbb
push
or
data16
mov
out
xor
filds
sahf
mov
and
cwtl
gs
enter
loopne
push
arpl
in
js
or
iret
iret
mov
dec
cmp
xchg
stos
cli
arpl
or
pop
hlt
add
jno
testb
test
sub
pop
lret
repnz
cmpsl
xor
mov
adc
dec
push
and
or
sarb
xlat
sbb
xchg
cli
adc
in
incl
mov
mov
es
pushf
hlt
imul
cwtl
pop
pusha
jl
ss
push
xchg
lds
jnp
movsb
mov
xchg
pop
hlt
add
ret
xor
cmp
dec
adc
mov
xor
outsb
xlat
in
pop
fcmovne
ret
cli
pop
sub
pop
negb
pop
add
dec
jl
inc
jle
out
pop
js,pt
or
mov
xlat
sahf
push
sbb
xchg
int3
iret
adc
roll
int
jnp
xor
sub
xchg
loope
sub
clc
jg
pop
cwtl
je
test
call
inc
sbbl
adc
cltd
push
push
mov
cmp
leave
or
and
mov
jge
xchg
daa
popf
sti
js
mov
lods
int3
dec
in
pop
xchg
enter
jbe
push
mov
add
outsb
leave
pop
icebp
bnd
pop
lods
xchg
nop
shr
cld
inc
ds
fisttps
mov
lods
insl
subb
imul
mov
or
jp
mov
inc
cwtl
fstps
jb
aad
sbb
fs
shrl
jae
addr16
add
jmp
or
mov
add
sbb
dec
lods
dec
lcall
iret
out
leave
xor
repnz
mov
push
adc
dec
movsl
lcall
mov
jle
sahf
push
adc
aam
jne
hlt
fdivr
repz
rcrb
shr
xchg
mov
inc
ret
and
dec
lods
cmp
xchg
pop
jbe
rcr
sbb
loopne
inc
daa
lods
push
fcoml
sbb
jo
dec
sahf
sbb
pop
sti
cltd
lds
ss
icebp
sbb
notl
popf
mov
lea
push
loop
into
scas
popa
stc
and
daa
leave
lret
stos
jp
xchg
sub
shrb
in
pop
push
push
sbb
sbb
lods
call
call
aad
dec
rcrb
mov
inc
sub
fbld
inc
sbb
push
scas
mov
je
ja
sub
ljmp
stos
dec
xorb
xchg
mov
xlat
or
ja
fistl
ror
loopne
scas
cmp
inc
ds
xor
addr16
js
pop
push
pop
pushf
mov
arpl
mov
mov
fisubrl
outsl
es
or
scas
insl
cltd
lds
xor
mov
or
std
inc
add
and
adc
jle
scas
insb
and
in
gs
sti
test
in
push
lods
call
mov
pop
xor
addl
push
pop
inc
lcall
test
enter
inc
loopne
pusha
pusha
xor
jo
test
cld
clc
cmp
sub
shl
pop
scas
pop
arpl
push
fistps
jbe
mov
into
xor
push
mov
ret
push
addr16
hlt
xchg
ja
mov
call
pop
push
mov
inc
pop
adc
dec
mov
mov
sub
notl
stc
hlt
adc
sub
xchg
movsl
mov
cltd
fstpt
xchg
insl
dec
adc
clc
and
jae
and
sub
movsl
rorb
pop
aam
xor
add
cmpsb
mov
dec
cmp
js
xor
mov
push
ud1
es
test
cwtl
les
mov
out
pusha
pop
shl
sbb
cmp
mov
mov
mov
lods
mov
mov
pusha
sar
xchg
push
scas
or
repz
sub
lods
das
sub
pushf
inc
aas
and
pop
scas
inc
notl
mov
outsl
inc
iret
push
mov
js
insb
shrl
jbe
loopne
sbb
call
adcb
mov
arpl
pusha
inc
mov
mov
pop
das
scas
negl
lcall
mov
mov
movsl
hlt
mov
je
push
ret
push
sbbb
fistps
sbb
adc
push
les
cmpsl
push
idivl
or
into
and
sti
mov
dec
xchg
ljmp
clc
enter
and
hlt
setnp
dec
or
test
sarb
add
jns
imul
fstpt
add
pop
inc
popa
pop
xor
cmc
subb
test
arpl
fcomp
sbb
mov
sbb
mov
xchg
mov
inc
test
mov
or
icebp
add
push
loop
cli
aam
popf
mov
sbb
rclb
lret
aad
enter
cmc
sbb
in
into
and
sbb
lods
xor
xchg
mov
in
and
lret
xchg
xor
lahf
test
lock
cmp
adc
jae
and
jle
adc
gs
mov
std
rcrl
or
push
std
mov
popa
dec
fs
nop
int3
mov
stos
repnz
fcom
aas
add
xor
dec
add
pusha
jo
les
mov
pop
pop
test
pop
push
inc
pushl
sti
push
les
adc
adc
push
sbbb
push
clc
rcrb
stos
or
leave
loopne
pop
ret
dec
faddl
lock
sahf
shrl
jg
push
mov
inc
rclb
cmp
scas
lret
les
je
in
test
mov
ret
bound
mov
inc
jnp
jno
ret
jmp
mov
xor
into
mov
mov
call
cwtl
rcrb
inc
mov
push
mov
mov
dec
pop
int
test
jge
cmp
push
push
pop
sbb
cld
jbe
pop
mov
cld
xor
jl
xchg
push
push
jg
movsl
into
lock
add
jge
iret
fstps
imul
sbb
push
inc
add
fcmovnb
lock
cmp
mov
dec
aad
cmp
or
es
xchg
daa
pop
adc
insl
clc
lcall
sub
mov
cmp
loope
dec
pop
push
shll
adc
mov
cmpsl
sahf
jns
mov
push
pop
push
pop
sub
xchg
ret
pop
inc
mov
sbb
mov
fisttpl
jg
repz
pop
les
repz
xchg
dec
lods
decl
cmp
fwait
cmp
dec
ret
and
out
fdiv
inc
loope
cmovo
scas
imul
out
bound
xchg
or
mov
inc
mov
jg
fldenv
xchg
xchg
lret
push
int
mov
push
mov
xor
loope
pop
mov
mov
lret
ret
or
je
lds
mov
mov
loop
xor
out
inc
sbb
ljmp
ljmp
mov
lret
lcall
push
jb
std
mov
inc
out
mov
call
icebp
dec
cmp
pop
call
iret
iret
das
popa
mov
movsb
jg
mov
mov
ret
jns
outsl
inc
in
call
fisubrs
in
jnp
pop
and
xor
into
dec
lahf
mov
xor
test
pmaddwd
lahf
mov
jnp
dec
std
dec
push
push
push
cs
mov
mov
push
mov
orb
xlat
mov
pop
bound
cwtl
adc
xor
cmpsl
add
fwait
add
push
sti
rcrb
pop
lret
add
inc
mov
inc
icebp
enter
ja
mov
call
in
dec
push
xor
dec
in
pop
out
lret
enter
or
imul
xor
sub
lret
and
inc
aam
push
mov
xor
add
inc
xchg
shr
gs
inc
sahf
clc
adc
addr16
ss
das
jle
ljmp
adc
jo
popf
rorl
sbb
cld
and
pop
fs
or
aam
and
dec
add
pop
testb
dec
cld
or
add
mov
fwait
add
hlt
in
test
xchg
mov
je
loop
add
jmp
mov
jbe
dec
in
push
cs
push
mov
cmpsb
pushf
xor
dec
out
and
loopne
lods
js
pop
mov
icebp
mov
js
mov
mov
sbb
cmc
js
jg
idiv
loopne
mov
xchg
or
xchg
imul
rcrl
lahf
lock
sbb
repz
cmp
aam
cwtl
ja
push
aam
jl,pt
sub
cli
ret
pusha
pop
xlat
ljmp
andb
scas
xor
in
push
sarb
stc
sbb
rclb
jbe
fbstp
or
outsb
dec
jns
inc
cli
pop
or
sarb
cmp
stos
repnz
lcall
int
insl
scas
sbb
das
jl
sahf
mov
rcll
leave
add
pop
outsb
andb
scas
ljmp
jbe
testb
pop
xchg
jns
mov
mov
jge
fmul
jae
adc
adc
pop
mov
sub
xchg
xchg
mov
or
mov
adc
jns
lahf
iret
mov
shlb
cmpsb
mov
add
xchg
or
sbb
js
das
push
sbb
call
enter
pop
ret
hlt
stc
fistps
bound
ficomps
in
jg
mov
xchg
and
fdivr
andb
push
jnp
inc
xorb
adc
sbb
pusha
cli
nop
adc
xlat
pop
pop
das
jbe
push
in
stos
data16
jp
xchg
mov
mov
aas
or
dec
xchg
pop
movsb
xorb
jecxz
and
in
mov
and
or
add
and
shll
mov
mov
arpl
lret
clc
xchg
jmp
fdivr
mov
xor
dec
pop
dec
fisubs
pop
lahf
fucomi
cmp
adc
xchg
fs
mov
dec
pop
mov
pop
arpl
scas
pop
in
cmp
cmpsb
sti
push
popf
loope
cmp
xchg
shll
jae
cmp
inc
insl
pop
jl
inc
sub
xor
add
jmp
ds
pop
and
mov
cmpsl
jg
mov
jns
stc
xor
xchg
insl
ss
push
xor
cld
aaa
fcmovbe
pop
and
hlt
pop
pop
push
les
push
mov
or
or
jae
cmp
out
mov
repnz
jb
out
mov
inc
xor
xor
out
arpl
jae
test
jle
push
sbbl
sbb
and
add
dec
cmpsb
and
subl
add
push
inc
insb
xchg
xor
pop
mov
lock
inc
or
shlb
sti
insl
std
mov
popa
stc
ret
scas
inc
lods
or
fisubrl
popf
push
pop
adc
lret
daa
mov
mov
mov
ret
ja
sbb
mov
jmp
rcr
xor
ret
cmpsb
ficompl
in
shll
sbb
lret
enter
sub
and
mov
xchg
inc
jns
xor
into
lea
dec
out
push
ja
loopne
fucom
inc
mov
xor
dec
lcall
shl
lods
mov
push
pop
cmc
mov
movsb
leave
xchg
fwait
xor
jmp
lea
in
mov
das
mov
scas
xchg
shlb
insb
lods
xchg
scas
mov
in
test
nop
xor
addl
xchg
jae
xchg
dec
push
jnp
inc
fildll
inc
pop
push
or
ret
mov
test
arpl
fiadds
shrb
push
insl
mov
call
dec
lahf
pop
inc
and
dec
cmp
mov
cmp
cmp
xchg
negb
sub
xchg
fdivs
mov
and
mov
out
push
repz
sub
xchg
les
pop
enter
scas
jecxz
sbb
es
aaa
dec
shl
add
in
cli
mov
jle
aad
lea
cmpsl
imul
mov
inc
scas
fistps
xchg
fs
adc
js
xchg
std
insl
mov
sti
xlat
xchg
mov
aad
sub
fs
fimuls
fbstp
loop
call
clc
mov
call
and
inc
xlat
cmpsb
inc
add
outsl
fdiv
ret
sub
sbb
pop
mov
test
sub
cltd
mov
cmp
mov
xchg
mov
lahf
jg
sub
push
cmp
lock
add
push
jae
in
inc
xchg
call
adc
aas
or
sbb
adc
jp
imul
sub
jmp
les
pop
push
mov
jecxz
cs
addr16
outsl
cmp
stc
cmp
pop
sub
int3
pusha
cmc
or
mov
and
ljmp
fcmovnbe
les
rolb
dec
dec
cmp
add
jp
pop
sbb
imul
loop
ds
cmp
psubusw
xor
es
xchg
lahf
xchg
pop
push
das
in
std
dec
icebp
rcrb
stc
fistl
lods
imull
popa
outsb
je
test
shl
in
jmp
jl
and
mov
pusha
pop
or
or
adc
mov
popf
sbb
jg
inc
popf
mov
push
dec
popf
adc
sbb
sbb
in
dec
push
push
cmpsl
nop
or
jbe
movsb
lock
pop
add
and
mov
xlat
dec
pop
adc
sub
pop
movsl
movsl
adc
pop
mov
in
cwtl
stos
and
mov
fstps
jp,pn
sbb
inc
loop
clc
inc
cwtl
adc
mov
mov
and
jbe
aam
sahf
inc
fisubl
nop
scas
or
inc
push
and
mov
sbb
movsb
mov
mov
pop
fdiv
push
xchg
rorl
jbe
pushf
cltd
das
stos
jg
pop
enter
ret
cmc
adc
movsb
or
xchg
and
sub
cwtl
push
mov
fisubs
sbbb
inc
enter
push
mov
adc
mov
xchg
incl
fisubrl
mov
test
dec
pop
dec
or
test
notb
lahf
jnp
mov
rclb
imull
mov
inc
lea
insb
in
popa
sahf
mov
clc
ljmp
ds
leave
mov
leave
xor
in
sarb
mov
push
mov
lret
fidivrl
push
adc
pop
cmp
popa
pusha
inc
push
mov
cmp
xor
cli
add
lret
ret
fs
test
out
fisubrs
imul
push
push
push
jge
mov
cmpsb
out
out
mov
add
dec
pop
inc
fimull
mov
cli
pop
aad
xchg
jne
inc
int3
xor
aad
sahf
jb
or
std
jl
test
cmpsl
cmp
dec
idivl
cmp
fstps
push
or
pushf
out
cld
push
inc
inc
fildll
fstpl
je
jb
cmp
bswap
pushf
lahf
int3
inc
sti
lock
inc
adc
movsl
jl
inc
jmp
sti
roll
loopne
psrld
cld
inc
xor
lahf
int
push
add
popf
daa
ret
call
rdtsc
dec
inc
pop
ja
cltd
ret
sbb
xchg
cs
testl
or
insb
sahf
cmp
movsb
jg
add
and
mov
and
or
sub
call
arpl
fdivrl
mov
pop
stc
mov
fistps
mov
std
or
lods
xchg
cmp
cmc
std
in
or
aad
push
dec
dec
fsts
rorb
push
jmp
cltd
fdivr
mov
repnz
mov
pop
popa
xchg
cmc
xchg
xchg
push
jne
das
dec
jge
push
and
mov
fcmovnbe
fsts
xchg
ds
push
dec
and
xchg
rorl
and
cmp
jg
adc
sarb
mov
iret
test
cmpsb
push
js
push
mov
jg
aaa
jnp
lahf
adc
out
mov
lret
and
jbe
std
push
sub
stos
mov
mov
ljmp
pop
dec
mov
xchg
inc
cmpsb
shll
xor
lret
or
jns
push
arpl
jae
add
cli
nop
bound
mov
je
sahf
and
or
inc
nop
stos
mov
adc
jmp
pop
pop
mov
push
test
std
in
fdivs
outsl
pop
mov
clc
arpl
bound
lret
dec
out
imull
dec
ret
mov
inc
and
or
push
lods
pop
out
sub
pop
inc
mov
lcall
or
xchg
aaa
sbbl
hlt
inc
cltd
out
movsl
mov
cmc
leave
jb
xchg
cmpsb
arpl
icebp
push
and
arpl
lcall
push
fidivrs
mov
or
lods
add
cmp
pop
subl
cmp
sahf
adc
mov
imul
outsl
pop
popa
inc
and
mov
mov
ss
mov
clc
xchg
or
cmpsl
jp
sbb
pushf
pop
adc
hlt
xchg
bnd
aaa
inc
and
clc
add
mov
mov
jmp
aaa
fstpl
cmp
mov
xor
jne
hlt
pop
loopne
jns
stc
dec
xchg
sti
sub
lret
and
mov
test
xchg
pushl
scas
adcl
in
cmp
and
xchg
enter
xor
adc
mov
mov
out
test
or
jnp
mov
jp
xlat
popa
imul
jl
mov
int
xchg
aaa
lock
daa
in
jns
or
pop
lret
movsb
gs
js
inc
add
mov
in
gs
jle
push
mov
pop
hlt
fists
fildl
insl
adc
test
mov
cld
and
popf
mov
test
jne
mov
and
iret
jmp
jne
jecxz
sub
insb
clc
push
jl
bound
arpl
rorl
pop
arpl
lahf
test
sub
in
hlt
push
xchg
movlhps
inc
jns
mov
mov
adc
dec
dec
adc
pop
cmp
xchg
sarb
lahf
cmpsl
adc
cld
outsl
mov
jo
fisttpl
clc
aad
fistl
movsb
fbld
add
out
das
mov
es
call
loop
fst
mov
or
mov
sub
jb
ret
dec
lds
push
fiadds
mov
stos
aas
mov
in
addb
incb
cmp
or
cmpsb
jmp
dec
movsl
mov
push
aaa
into
mul
and
or
lods
or
sub
scas
jle
js
add
hlt
imul
push
mov
jne
arpl
pop
and
and
xchg
push
mov
gs
jnp
jecxz
cwtl
cmp
lahf
ds
mov
movsb
jae
into
ljmp
lahf
push
inc
adc
sbb
mov
stc
pop
xchg
pop
notl
fs
cmp
test
insl
out
push
and
inc
jp
push
add
lock
jmp
xor
sub
icebp
mov
adc
insl
addl
push
xchg
fwait
jmp
aaa
mov
adc
cli
jbe
insb
or
insl
xor
nop
aas
or
repnz
mov
mov
je
or
mov
dec
dec
std
xchg
mov
jae
mov
xor
imul
mov
cs
cmp
callw
push
in
push
rolb
int
push
sub
ss
adc
pop
ffree
inc
mov
mov
enter
pusha
ljmp
out
sbb
iret
inc
pop
jp
inc
xchg
lods
and
fcompl
test
jbe
inc
jmp
sbb
lea
out
je
push
mov
cli
out
sarb
int
pushf
aaa
pop
dec
add
loopne
arpl
jns
mov
mov
jecxz
pushf
jp
daa
mov
xor
fistpl
push
leave
push
mov
aaa
mov
cmpsl
loop
scas
push
jge
sbb
out
hlt
mov
les
or
cmp
and
inc
imul
mov
sub
push
dec
lods
test
or
mov
insb
lods
outsl
sbb
call
movsb
mov
jno
sub
adc
mov
les
js
jo
inc
out
and
inc
lret
xlat
scas
test
pop
xchg
sti
dec
call
push
loopne
xor
shll
and
popf
pop
jnp
mov
and
dec
jae
mov
add
mov
out
mov
pop
jno
jp
jecxz
popf
stos
in
mov
mov
scas
add
sar
pop
cwtl
xchg
hlt
insb
mov
jns
mov
mov
sbb
iret
pop
add
inc
push
in
mov
jmp
mov
imul
inc
adc
mov
adc
scas
or
add
jl
lods
scas
dec
int3
push
push
pushf
fldl
cltd
mov
addr16
xor
mov
inc
aaa
dec
div
stos
add
outsl
adc
jg
ret
mov
ret
and
stos
ljmp
xchg
adc
cmp
test
in
push
cmp
test
movsb
xor
in
data16
into
ljmp
stos
flds
lods
xor
ds
imul
shl
lret
repnz
mov
inc
mov
inc
sbb
push
cs
mov
enter
mov
inc
enter
ljmp
cmp
inc
lea
mov
movsl
ja
mov
int
jecxz
mov
outsl
xchg
xchg
addr16
xor
sbb
push
inc
sahf
lret
mov
icebp
xorl
popa
ret
pusha
pop
ret
mov
lods
clc
aam
adc
cmp
adc
ljmp
xchg
jne
or
lock
scas
ja
loopne
arpl
mov
xor
xor
xor
iret
mov
pop
xor
cmp
add
pop
int3
sti
jb
outsb
cmp
arpl
out
hlt
fcmovnb
mov
loopne
add
rorl
cmp
insl
shrl
testb
imul
jnp
sub
xor
sarl
xchg
and
mov
aad
inc
nop
xchg
mov
sub
dec
jo
movl
and
and
inc
test
popf
xor
std
aam
aas
movsl
dec
filds
stc
xor
sub
subl
cwtl
jge
aas
ret
enter
in
pop
cmpsb
xor
aam
dec
mov
adc
push
bound
repnz
int
call
mov
and
cmc
push
jp
dec
mov
push
ss
xor
mov
xchg
vpsllw
mov
inc
jle
cltd
pop
lahf
icebp
stc
insb
shll
lea
popf
js
and
sahf
mov
repz
movsb
aad
mov
jecxz
adc
insb
and
inc
scas
pop
or
pop
popa
xchg
loopne
add
or
insb
xchg
jp
xchg
loopne
inc
shlb
jg
hlt
dec
jnp
add
xor
in
cmp
xchg
add
inc
stc
dec
jecxz
pop
lret
or
hlt
adc
dec
dec
imul
imul
mov
fxtract
stc
mov
jl
mov
std
mov
addr16
inc
int
pop
dec
lods
xlat
lcall
in
fstl
sub
inc
pop
daa
mov
aas
enter
orw
lcall
inc
js
push
inc
mov
mov
lods
mov
neg
mov
pushf
inc
jbe
xlat
movsl
mov
gs
mov
popa
sbb
and
and
ljmp
xor
into
stc
cltd
add
mov
adc
in
sub
xchg
pop
jl
js
je
fdivl
sbb
jnp
aad
notl
ds
insl
add
push
dec
into
pop
fsub
sti
jmp
inc
inc
movsl
jle
roll
cltd
out
fiadds
and
mov
xor
mov
stc
mov
push
jbe
mov
mov
xchg
cmc
ss
and
inc
and
jns
mov
adc
repnz
inc
add
lds
daa
cli
jae
inc
imulb
gs
xor
ja
push
clc
enter
sbb
dec
jo
pushl
out
popa
mov
mov
lret
cmpl
or
fbstp
add
clc
mov
mov
iret
loopne
xchg
subb
fcmovb
xor
xchg
mov
pop
jbe
sub
mov
scas
out
ret
icebp
sub
scas
cltd
push
jo
stos
push
sbb
mov
subl
popf
jmp
jno
add
aaa
dec
add
jae
jl
mov
sbb
ljmp
aad
mov
es
or
lods
scas
adc
inc
std
aam
cmp
cmpsb
sbb
in
stc
cwtl
imul
int3
cmp
push
sbb
fdivl
das
dec
jge
lea
je
in
daa
sub
mov
jb
repnz
xchg
add
adc
mov
out
pop
xor
xchg
cmp
in
loop
int3
cmp
cmp
aad
jno
cmpl
mov
rcll
out
test
loop
xchg
mov
addl
mov
pop
jae
lods
lds
add
mov
push
popa
int
jae
jno
faddl
mov
int
sub
push
aam
xor
cmp
es
pop
sbb
aas
cmp
push
xor
ja
mov
sub
or
arpl
mov
xchg
xor
mov
xchg
jbe
jne
cltd
jns
fimull
add
fidivrl
in
rclb
insl
push
bnd
ret
in
sbbl
int
dec
jecxz
fdivrs
std
lea
data16
push
jle
mov
dec
xor
aaa
add
mov
daa
or
mov
xor
dec
push
sub
imul
sbb
imul
mov
cmp
out
xor
insb
push
add
rol
pop
gs
push
or
and
cmp
sub
push
fldl
movsl
sti
daa
dec
sub
or
push
cs
add
add
sbb
dec
push
jmp
lods
sbb
adc
roll
shr
jbe
sbb
dec
adc
je
mov
gs
dec
mov
cld
je
sub
rcr
into
sbb
mov
sub
scas
jb
adc
hlt
cmpsb
loopne
push
pop
add
fldl
and
aam
mov
icebp
dec
dec
dec
jo
loopne
mov
and
loope
inc
out
sbbb
and
add
loop
push
movsb
mov
mov
les
incl
loopne
lods
sbb
adc
imul
stc
and
adc
out
dec
aad
push
in
pop
sarb
push
ss
xchg
leave
daa
adc
cmc
mov
jo
sbb
pop
xchg
fbld
add
addr16
jp
jge
test
xchg
call
sbb
fdivs
ljmp
and
pop
mov
xchg
lods
lods
mov
call
bound
ret
inc
vphaddbq
jo
inc
and
mov
mov
jg
scas
into
xchg
aam
lret
iret
pop
imull
inc
fcompl
lea
scas
lahf
testb
dec
js
or
xor
sub
inc
and
cli
jae
pop
les
popf
xchg
in
sbb
lock
das
or
mov
add
xor
or
cmp
xor
in
pop
pop
cmp
mov
mov
das
fsubs
sub
or
imul
sub
push
xchg
or
or
and
orb
clts
dec
add
incl
xor
out
mov
mov
push
ficomps
cli
or
cmc
sbb
ret
addr16
outsb
mov
loopne
lcall
push
xor
test
enter
out
mov
and
inc
add
addb
jle
scas
sbb
divb
mov
push
movl
stos
shlb
orl
into
xchg
or
and
pop
inc
dec
sahf
cwtl
cmp
push
inc
aas
mov
pop
sub
jnp
jnp
bound
xor
dec
shlb
pop
and
pop
push
jno
inc
cwtl
xor
jmp
inc
lock
lahf
and
mul
iret
lea
scas
xchg
sub
dec
repz
mov
push
lods
sbb
mov
mov
sbb
jb
dec
movsb
out
mov
sti
mov
sbb
xor
jge
pushf
cmp
and
mov
sti
jl
mov
jge
int3
aad
test
mov
sbb
fcoml
mov
add
movsl
cwtl
mov
nop
movsb
lds
pop
sbb
jge
push
inc
mov
jns
fsubp
cli
stc
ret
adc
sbb
pop
push
push
clc
pop
hlt
pop
orb
mov
pop
std
ss
and
cmpsb
mov
push
and
dec
lock
out
mov
pop
inc
jno
aad
jb
in
mov
mov
inc
or
out
or
lret
arpl
inc
bound
or
scas
jbe
push
push
jae
push
mov
dec
shll
outsb
mov
push
sub
and
cmp
push
out
jl
push
movsl
dec
aas
in
xchg
mov
xchg
dec
and
bound
ljmp
mov
pop
pop
std
inc
xabort
inc
shlb
pop
fsubl
cmp
paddusw
outsb
sub
sbb
push
cs
cs
test
push
outsl
daa
loopne
xchg
sar
mov
je
clc
jae
lds
sub
cmpsl
and
sub
adc
lock
std
sub
jmp
add
shrb
mov
push
das
xorl
mov
lods
dec
or
jl
es
inc
add
xchg
xchg
jnp
jb
movsb
mov
mov
pop
aaa
jbe
inc
mov
push
pop
arpl
jle
outsb
into
xchg
lret
and
pop
aaa
jb
xor
mov
push
add
out
or
fnstsw
add
ljmp
pop
xchg
inc
les
rol
jmp
mov
out
add
xlat
jge
mov
shrb
inc
dec
cmp
ljmp
aas
jne
jae
adc
rcrb
notb
push
mov
sub
dec
inc
sti
xchg
loop
leave
dec
movsb
or
or
daa
jb
push
and
ljmp
fwait
sbb
bound
dec
inc
orl
into
cmp
fdivl
rclb
or
xchg
push
mov
and
cmp
push
cmp
negb
icebp
imulb
add
repz
into
outsb
xchg
rep
outsl
andb
pop
jmp
push
xchg
pop
lea
mov
and
andb
xchg
jmp
nop
and
div
shlb
mov
scas
jge
cs
or
xor
push
inc
xchg
imul
in
cmp
lock
rcrl
aam
and
xor
adcl
adc
mov
bound
cmp
lcall
fcoml
cs
cmp
xchg
mov
add
cld
in
push
ljmp
jns
in
test
lods
jle
stos
inc
sub
fcmove
sbb
iret
lret
popf
jne
jbe
lret
mov
sub
lds
pop
dec
mov
movsl
mov
mov
push
xchg
test
loopne
mov
mov
data16
add
add
lds
sbb
orb
add
shrb
mov
sbbl
push
add
fwait
or
mov
cmp
adc
imul
inc
popf
arpl
adc
imul
loopne
mov
push
in
sub
dec
rcr
cs
pop
jmp
mov
scas
pop
push
ja
sub
ret
jecxz
push
pop
pop
popa
push
stc
and
fistpl
jo
fistpll
and
pusha
or
xchg
sub
sub
popa
push
aaa
inc
xchg
adc
aam
xchg
add
enter
clc
jb
or
and
push
and
ret
insl
aad
adc
and
and
inc
ds
out
cmc
aas
out
repz
stc
sbb
push
or
mov
xor
sar
repz
mov
out
aas
in
push
out
mov
rolb
outsl
xor
mov
sub
imul
push
add
in
insb
sbb
jne
cmpsb
pop
jecxz
ss
mov
fcmovb
sbb
sahf
xchg
shl
and
xchg
jae
or
cmp
je
aam
adc
andl
enter
popa
je
repnz
test
jno
xor
mov
popf
pop
jecxz
call
cmp
push
adcb
fcoms
fildll
mov
inc
xchg
int3
dec
dec
xchg
sbb
aaa
inc
xor
popa
push
jae
test
xor
xchg
outsl
xchg
adc
pop
ret
test
adc
fistps
decb
and
push
das
clc
popf
sti
push
inc
dec
pop
stc
mov
and
push
jno
adc
into
sub
addr16
jnp
sarb
push
jg
add
scas
fldenv
addl
ja
push
icebp
lret
ds
mov
adc
mov
cltd
fistps
sbb
ss
xchg
test
mov
push
fs
pop
push
gs
cmp
xor
pusha
bound
push
inc
shll
mov
sbb
int
arpl
icebp
sbb
jge
adc
loope
and
loopne
pop
lahf
xchg
and
fsubrp
notl
lds
ret
adc
adc
adc
dec
roll
pop
and
push
fsubr
sub
push
mov
adc
pop
dec
imul
cmp
mov
jl
cmpsl
jne
shl
mov
add
add
adc
mov
cli
loopne
jp,pt
in
outsl
cld
scas
and
mov
popf
dec
js
mov
sub
int3
xchg
adcb
mov
pop
lcall
iret
scas
xchg
mov
jle
cmp
fsubr
sub
into
inc
xchg
lods
mov
out
xchg
inc
sbb
loop
sub
in
mov
pop
das
subl
mov
sbb
sbb
mov
push
push
cmp
sub
aad
jbe
inc
lods
in
les
cmp
cmpsb
fildl
mov
das
hlt
xchg
lahf
push
notb
xor
mov
daa
mov
test
sarl
cmp
scas
sbb
pop
jle
test
xchg
cmp
jmp
or
in
lea
pushf
cmc
adc
ret
std
movsl
mov
inc
test
fwait
sub
xor
jg
xlat
fisttpl
rcr
inc
sub
ljmp
cltd
cld
test
inc
cld
mov
sub
mov
fstpl
cld
pop
xchg
aam
in
adc
sbb
xor
pop
xor
sbb
aad
push
or
insb
inc
adc
in
dec
adc
xlat
sahf
sub
test
pop
or
jae
aad
jb
es
pop
xchg
sarb
out
mov
in
dec
out
mov
repz
xchg
arpl
shll
sbbb
roll
jmp
sub
pop
mov
in
cld
mov
arpl
loopne
aaa
jae
pushf
mov
xchg
fsubl
cld
fistpl
ret
insb
mov
lret
out
inc
hlt
jl
stos
out
jnp
das
or
test
pusha
ds
or
lods
cmp
lahf
outsb
xlat
or
jno
cmp
int3
jns
imul
call
outsl
inc
push
je
vcvtsd2si
out
mov
test
push
imul
iret
incb
mov
sub
jo
cmpsl
jno
insl
outsb
sub
cmc
push
jae
mov
cmp
sbb
jmp
rol
rol
push
insb
aas
dec
cs
xlat
adc
test
call
xor
insb
fistl
jae
dec
xchg
test
xlat
jp
imul
adc
inc
xchg
popf
pushf
cmp
push
push
jae
cmc
mov
push
and
push
orb
ret
pop
popa
int
add
ror
and
adc
pop
jg
mov
ret
dec
rolb
loopne
test
or
xchg
pop
mov
sbb
stc
mov
scas
sbb
pop
pop
or
mov
shlb
out
pop
cmpsl
push
xchg
xor
call
xchg
addb
or
and
scas
lods
pop
out
inc
fstl
push
pusha
jne
insb
aas
sbbb
fisubs
dec
add
inc
sub
outsb
fbstp
fs
loop
out
call
scas
sub
ljmp
and
sti
mov
cmc
nop
and
enter
mov
mov
inc
repz
jmp
mov
aam
xchg
mov
dec
scas
repz
sbb
mov
add
jns
sti
jo
sub
and
loop
dec
jns
cld
mov
in
lods
test
imul
or
outsb
mov
mov
movsl
bound
sbbl
aad
pop
xor
xchg
pop
imul
and
mov
and
flds
dec
scas
push
sbb
jp
sbb
rolb
xor
push
out
xor
movsl
out
aaa
je
mov
lahf
fs
hlt
xchg
xchg
inc
gs
jmp
pop
dec
imul
mov
pusha
adc
push
stos
cltd
sub
ret
xchg
xor
fcomps
mov
jmp
das
push
push
dec
cmpsb
jl
mov
std
outsl
push
dec
test
xor
pop
mov
in
cmp
add
push
pop
fcoml
iret
xorb
sub
sti
in
add
sub
fistpl
iret
jae
movsb
add
and
cmpsl
notb
mov
mov
js
jecxz
mov
push
lret
call
cmp
mov
jmp
sbb
hlt
sub
push
xchg
dec
cmc
mov
in
push
das
jo
loope
pop
mov
push
daa
test
xlat
rcl
arpl
or
sbb
and
scas
ss
mov
int3
fdivrs
xchg
xor
push
jno
mov
mov
xor
lcall
jl
adc
push
lds
mov
jno
arpl
movsb
das
in
lea
ja
dec
ret
xchg
fildll
pop
aaa
xchg
cmp
xchg
push
push
or
mov
add
cmc
sbb
stc
sbbb
into
sub
mov
adc
sarl
stos
mov
cmp
ljmp
mov
mov
sub
mov
roll
and
push
ds
pop
sbb
ret
jae
cmpl
adcb
scas
add
mov
test
sub
aam
lods
std
fcoms
lret
pop
shr
in
loop
cltd
or
dec
or
sbb
ret
daa
and
push
sbb
sti
aas
je
cmp
jecxz
sbb
jns
fmuls
cmp
mov
mov
sbb
fmulp
ds
inc
inc
data16
push
and
add
leave
sbb
std
mov
and
pop
dec
sub
jo
push
out
inc
pop
inc
or
mov
sub
cmp
popl
mov
pop
lods
pop
jge
jae
mov
xchg
out
add
xor
in
mov
repz
mov
imull
fnstenv
aas
lcall
add
mov
xchg
stos
movsl
bound
rclb
cmp
adc
test
aaa
pop
int
int
add
push
scas
mov
and
jecxz
sbbb
mov
mov
pop
dec
mov
out
andl
or
jp
pop
jbe
pop
xchg
aad
fdivr
pop
test
mov
mov
pop
pop
xor
mov
jl
das
and
outsb
push
push
ljmp
rorl
out
adc
sbb
sbb
ret
inc
andb
je
sahf
add
popa
cmp
neg
jmp
sub
xchg
add
inc
dec
lea
inc
inc
test
je
sbb
nop
inc
lods
fnstenv
outsl
into
mov
and
mov
lea
xor
rcll
xchg
jg
cmc
push
mov
mov
int
inc
dec
mull
mov
fcomip
shl
and
or
lret
aas
xchg
xchg
xchg
jbe
push
arpl
fcompl
outsb
and
pop
test
inc
out
cmp
ds
cli
int3
mov
fimull
ret
push
das
add
enterw
lods
sbb
sub
fnstsw
in
test
aaa
push
push
or
divl
jb
mov
leave
std
imul
outsl
jp
or
fisttpll
add
fildl
adc
movsb
stos
ret
test
adc
cmp
pop
loop
dec
mov
call
addb
repnz
mov
jle
int
sbb
repnz
pop
rcrl
adc
push
in
push
sub
testb
or
and
adc
xor
dec
push
movsl
decb
mov
xor
mov
lock
clc
js
std
xor
inc
add
mov
fistpll
sbb
xchg
ja
mov
jp
icebp
push
dec
pop
fstpl
jp
xor
dec
into
lret
push
int3
in
dec
fmuls
sub
ffree
cmp
rolb
popf
dec
mov
jb
xlat
ja
xchg
out
xlat
imul
lods
outsb
jle
nop
lds
stos
add
add
xor
fistps
std
ror
dec
mov
insl
scas
aaa
loopne
aad
fnstsw
pop
das
daa
mov
inc
pop
jge
in
jmp
call
shll
dec
pushf
into
cmpsb
dec
inc
fldcw
dec
mov
je
shlb
pop
and
mov
loopne
pop
mov
int
aad
mov
int3
push
lcall
fs
mov
adc
adc
insb
jmp
xchg
dec
pop
ficompl
sbb
js
fcmovne
out
add
pop
jl
inc
aas
rolb
aad
mov
das
mov
mov
jne
outsb
and
xor
loop
sub
jp
push
fimuls
adc
test
jbe
out
sbb
xchg
mov
add
test
loop
mov
mov
cmp
or
fs
pushf
push
mov
jl
hlt
fisttpll
leave
js
cmpsl
stc
bound
jo
repnz
dec
dec
push
cld
or
stc
cmpsl
sub
call
icebp
xor
mov
fcompl
bound
and
adc
sub
mov
out
dec
pushf
fwait
push
aad
cmp
and
in
sub
dec
jl
jbe
sub
cmpsl
imul
hlt
jbe
lods
cld
push
mov
lods
rcrb
arpl
mov
stos
jmp
nop
maskmovq
imull
in
adc
xlat
lock
sbb
cwtl
mov
dec
lahf
negb
or
es
mov
bound
adc
pop
push
jmp
xchg
mov
fsts
cld
mov
sti
adc
int
dec
in
dec
jnp
pop
mov
xchg
loope
out
pop
imull
pop
call
int
sbb
in
push
xchg
test
mov
movsb
adc
pop
adc
imull
sbb
in
sub
testb
or
pop
adc
mov
testb
hlt
int
ljmp
popa
push
mov
inc
dec
lock
scas
aad
outsb
lds
sub
sti
cmc
cmp
out
jnp
mov
rcrb
xchg
cmp
adc
jnp
xchg
pop
and
nop
push
mov
adc
jae
lcall
dec
adc
testl
adc
les
inc
sub
out
mov
int
mov
out
cmp
pusha
pop
or
in
icebp
mov
lds
lods
fsubs
adc
push
pop
adc
mov
xchg
es
sbb
mov
fnstcw
cmp
shll
sub
ss
add
sub
data16
orb
fwait
daa
inc
stc
call
mov
mov
mov
andb
fs
inc
fcoml
adc
sbbb
es
jl
gs
lret
sbb
lea
mov
lods
sahf
xchg
push
mov
enter
addr16
jno
push
push
pop
fsubr
es
js
mov
popf
mov
gs
fsts
mov
mov
out
stos
push
sbb
and
xor
xlat
dec
pop
pop
stos
insb
inc
mov
repnz
jmp
sub
testb
jo
cltd
add
jmp
dec
mov
pop
sbbl
cltd
outsb
cs
pop
jb
mov
rcrl
xchg
pusha
pop
rolb
icebp
cmp
int
mov
push
pop
and
cmp
negb
and
xor
daa
push
xor
sub
jge
nop
jecxz
sub
outsl
mov
enter
sbb
fsubrs
inc
pop
mov
outsl
mov
inc
test
subb
xchg
scas
jb
aam
cmp
mov
xchg
in
jp
xchg
sahf
dec
xchg
in
scas
cmc
jno
adc
mull
dec
pop
sbb
cmp
enter
mov
jb
aad
sahf
pop
pop
pop
fcoms
and
adc
mov
pop
mov
push
shrl
mov
and
imul
fcomps
imul
xor
insl
add
cmp
push
je
push
or
push
sbbl
push
imul
call
sub
out
dec
into
test
imul
pop
pop
cld
test
add
mov
repnz
insb
jle
cmp
adc
test
or
and
rorb
push
and
sbbb
loopne
fimull
xchg
lret
and
jecxz
fsubrs
mov
daa
push
adc
das
mov
push
das
std
or
xchg
add
inc
push
sbb
sub
sbb
sub
xor
dec
imul
or
lahf
and
mov
push
push
es
out
xchg
stos
xchg
ds
and
inc
mov
adc
mov
mov
mov
pop
outsb
pshufw
mov
ds
add
cli
imul
out
lret
jb
ret
mov
push
xor
in
scas
xor
lahf
fsubrl
enter
mov
fneni(8087
pop
movsb
addr16
loopne
adc
sub
mov
enter
add
rcr
xchg
pop
aad
inc
dec
aad
dec
pop
mov
sbb
in
jno
fisubl
dec
iret
cmp
in
aaa
lahf
cmp
pop
jge
xchg
ret
adc
cmpsb
shrb
iret
push
cltd
jo
sbb
lock
call
push
out
or
adc
sahf
pushf
out
hlt
pop
mov
mov
xchg
push
adc
xorl
mov
fadds
ret
ljmp
test
test
sti
dec
rorl
or
aaa
mov
je
xchg
dec
das
jge
or
cmpsl
lcall
test
loop
mov
jecxz
xchg
dec
sub
jg
dec
movsb
dec
cli
adc
lods
repnz
jno
and
mov
jne
mov
loopne
push
sbb
push
sub
xchg
ljmp
clc
hlt
add
cmp
out
mov
loop
pop
gs
xchg
mov
popa
cmp
movsl
cmp
push
xor
push
aam
movsl
stc
add
test
cmp
pushf
lcall
xchg
arpl
or
jle
pop
inc
pop
lods
outsb
sub
add
mov
ficompl
inc
lcall
push
std
ret
fildll
xchg
pop
sub
xchg
add
js
xchg
jmp
cmp
scas
shll
cmp
lret
jle
hlt
and
movsb
mov
jmp
addr16
sub
adc
mov
insb
pop
pop
jmp
and
mov
adc
fdivrs
inc
jp
inc
mov
lods
scas
jnp
int3
and
cmp
in
scas
jecxz
mov
dec
fdiv
cs
lret
in
fs
push
pop
pop
mov
push
in
shlb
std
les
stos
stos
pop
mov
inc
dec
dec
hlt
add
pop
cmp
ljmp
adc
or
cwtl
call
out
push
lret
mov
fdivr
je
mov
mov
mov
sti
cmp
lret
loopne
sub
jno
cmp
push
fdivrl
fcomps
and
xorl
test
addl
sbb
cltd
push
imul
cmp
add
add
mov
test
xor
xchg
icebp
xchg
arpl
or
loop
pop
mov
ds
mov
dec
mov
jbe
add
jmp
iret
or
scas
mov
xchg
mov
jae
fcomps
rol
sub
shrb
mov
jo
aad
xor
bound
pop
dec
enter
cmpsl
mov
jae
inc
dec
pop
js
mov
push
outsb
push
adc
mov
lret
dec
sub
inc
mov
or
and
push
pusha
pop
movsl
sub
and
ficomps
repz
xor
in
xchg
jmp
decl
shrl
adc
mov
pushl
xchg
leave
xor
or
dec
outsl
lock
rclb
imul
stos
add
cli
scas
and
cmp
repnz
es
mov
sar
xor
and
inc
mov
push
lea
in
or
int3
mov
ss
loope
shll
push
push
xor
xchg
pop
add
negb
or
insl
into
aas
pop
jg
repnz
in
out
dec
cmp
push
das
lret
dec
enter
or
xchg
or
and
test
pop
push
or
cmp
mov
movb
mov
push
and
push
shlb
pop
adc
mov
adc
jae
pusha
insb
xchg
sub
lahf
sbb
mov
jle
dec
aad
loopne
fcmovnu
cmpsb
lock
lods
lahf
jbe
push
mov
out
pop
sub
cmp
inc
or
xor
sub
addb
jae
push
aam
and
add
mov
add
test
enter
and
and
pop
data16
adc
sbb
jb
dec
xchg
cli
inc
dec
ljmp
lods
rcrl
in
push
fsubp
cwtl
je
lahf
mov
mov
mov
push
std
iret
test
scas
push
add
pop
adc
in
sbb
xchg
ljmp
dec
jne
push
adc
test
pop
jne
xchg
fimull
in
lea
scas
repz
xchg
jl
mov
cmp
or
insb
adc
xor
and
loope
icebp
sub
push
mov
jns
mov
mov
in
mov
or
sbb
mov
mov
cmp
pop
addr16
cmc
lea
add
sahf
push
jge
mulb
adc
fwait
inc
push
inc
mov
loopw
mov
mov
pusha
or
push
inc
insb
cmp
rolb
and
repz
xor
dec
add
pop
add
aam
fldt
pushf
fs
jbe
test
ljmp
daa
loop
aad
cmpsl
mov
fwait
outsl
dec
sbb
and
movsb
xchg
fcompl
add
jnp
add
xchg
ljmp
cwtl
rorb
and
fnstsw
aam
and
jecxz
mov
nop
sub
fbstp
gs
or
bound
dec
fs
fdivl
iret
out
sbb
push
daa
xchg
das
mov
fidivrs
push
cwtl
cmp
jmp
test
jns
ficompl
call
and
xor
sahf
mov
adc
push
out
in
inc
push
cmc
mov
mov
add
fsubr
or
xchg
cmp
insb
out
mov
or
movsb
sbb
dec
test
jp
jns
adc
jg
push
inc
mov
cmp
sbb
frstor
in
mov
ficompl
pop
movsb
mov
jmp
cmp
lea
push
and
or
movsb
loop
mov
xchg
rclb
xor
fstl
add
xchg
jae
and
jmp
test
jnp
add
shlb
dec
mov
xor
jnp
pop
adc
sbbl
gs
ds
mov
jb
xor
pop
xchg
in
jge
xchg
sbb
lock
xor
imul
mov
mov
or
or
ficoml
nop
es
push
mov
push
into
shrl
push
cmp
push
and
test
aad
add
loop
repz
jp
push
les
insb
dec
ror
jmp
in
outsl
and
mov
sbb
xlat
lds
xlat
mov
insl
mov
sub
jbe
lret
jnp
fstpt
sub
add
lcall
repnz
mov
icebp
outsl
mov
mov
jp
fistpll
mov
enter
push
push
out
pusha
pop
mov
xor
sbb
std
call
mov
push
stc
jnp
outsb
in
mov
lods
sub
mov
add
fwait
js
loop
pop
jl
test
push
lret
out
je
gs
outsb
xor
lret
xlat
mov
mov
add
scas
cltd
sub
xchg
push
mov
sbb
mov
sbb
xchg
add
push
or
ss
test
jnp
dec
pop
outsl
jl
or
sbb
mov
and
jbe
pop
fwait
and
and
popf
sub
mulb
icebp
notl
adc
jp
mov
and
mov
fiadds
dec
jbe
inc
cmp
outsl
sahf
or
xor
pusha
es
dec
push
sub
lret
pop
shrb
std
out
int3
adc
mov
dec
jl
xchg
leave
cmc
pop
addr16
scas
adc
xchg
inc
xchg
pop
mov
push
rcll
lcall
pusha
jecxz
scas
jnp
fidivs
or
mov
pop
or
inc
cmp
test
sbb
inc
xor
or
cmp
arpl
adcb
int3
push
lret
sbb
pop
push
test
sub
push
in
sub
inc
adc
add
or
outsl
int3
or
shrb
cmp
imul
or
movsl
add
pop
cmpsb
or
rcll
inc
mov
leave
pop
mov
pusha
loope
loop
dec
insb
jns
mov
rol
xor
lahf
shrb
ss
lods
push
test
ret
daa
out
incl
leave
inc
clc
jb
jns
pop
aad
or
cli
test
scas
nop
clc
into
enter
out
inc
mov
imul
push
sar
xor
lahf
ss
imul
xchg
addr16
leave
xor
stc
outsb
jge
mov
sbb
xchg
xlat
cmova
or
incb
mov
cs
pop
mov
push
sahf
xorb
pop
or
inc
mov
dec
sarb
shr
ljmp
jmp
jmp
in
push
add
mov
adc
mov
arpl
push
pop
js
mov
and
cmp
cmp
xchg
outsl
xchg
icebp
nop
pop
lahf
daa
xor
push
jl
shlb
pop
shr
testb
cmp
lahf
jmp
xchg
adc
mov
xchg
loope
lods
cmp
xor
flds
and
add
xchg
or
xor
popf
pop
pop
lcall
inc
push
xorb
cmp
add
fs
lret
cmc
xor
or
add
mov
xchg
pop
inc
cmpb
pop
or
out
sbb
cmp
jge
push
dec
mov
bound
mov
iret
lret
les
jmp
add
mov
xchg
push
mov
dec
test
jp
cmp
lret
rcrl
scas
std
xor
xchg
add
xor
mul
and
cmpl
ljmp
xchg
adc
jg
pop
sarl
fdivrs
fildll
imul
sbb
or
inc
and
shl
xor
mov
loop
jne
ja
sarb
test
lods
jne
shll
scas
adc
and
xor
stos
aam
dec
sub
mov
loop
mov
rcll
ret
mov
and
jge
inc
sub
pop
cmp
pusha
push
idivl
lcall
idivb
cmp
mov
add
mov
jb
mov
dec
xchg
adc
popf
out
mov
add
loopne
aas
xchg
mov
test
mov
jo
pop
mov
cmp
mov
inc
testl
in
and
pop
div
sub
fcmovb
mov
dec
rorl
sub
cmp
shrl
jecxz
fisubrl
es
push
sbbl
xor
push
and
loopne
mov
ficoml
xchg
push
xor
cmpsb
insl
xchg
push
push
cmp
push
fst
xor
jne
or
jecxz
push
jle
mov
lods
fstpt
add
jbe
fists
subl
cmp
mov
jb
mov
jge
pop
test
sbbb
adc
aas
pop
mov
jg
push
dec
cmp
ret
data16
cs
sbb
mov
push
ja
mov
pushf
fsub
pop
add
dec
pop
push
jno
mov
mov
mov
int
int
dec
cmp
cld
sbb
mul
movsb
and
dec
push
mov
and
pop
mov
shll
hlt
mov
mov
sbb
fs
pop
mov
sub
pop
push
fisttpll
add
mov
xchg
adc
or
dec
gs
icebp
movsl
push
insl
movsl
cmpsl
leave
and
ficomps
arpl
test
aaa
or
push
das
shr
add
int
sub
jo
inc
add
adc
xchg
lea
addl
lods
sub
or
dec
mov
sbb
negl
in
mov
cs
push
adc
inc
int
ja
shrl
inc
gs
cvttps2pi
int3
inc
dec
and
movsb
imulb
int
mov
in
xor
cmpsb
nop
dec
sub
sbb
and
movsb
xchg
adc
fwait
pop
add
loope
js
push
cmpsl
scas
test
pop
jo
test
aas
arpl
inc
mov
push
push
rcrb
scas
and
cmpsb
jbe
daa
or
das
scas
lds
xor
out
sbb
stc
dec
xor
mov
mov
push
mov
mov
sbb
mov
sbb
fadd
add
fadd
sbb
lcall
mov
cld
dec
out
ljmp
fistpll
in
roll
jecxz
fldt
xor
push
adc
cmp
adc
push
add
fisttpll
jb
push
imul
mov
mov
jo
jl
cmp
jae
sbb
pushf
outsb
bound
jo
jg
ljmp
inc
mov
bound
adc
sub
nop
push
shlb
and
aaa
cmp
jecxz
inc
int3
pop
adc
push
pop
fcoml
cmp
mov
lea
in
loopne
es
fisttpll
xor
ret
int
push
ret
mov
push
jl
dec
adc
lahf
in
bound
stos
mov
dec
and
mov
popf
xor
cmp
jo
iret
xlat
xchg
adc
inc
in
jne
xchg
jmp
sbb
jl
mov
xchg
jecxz
mov
movsl
f2xm1
sbbb
push
sbbl
pushl
inc
outsl
mov
je
jb
out
pop
or
pusha
aad
add
clc
cmpsl
lcall
adc
adc
lods
ret
add
lahf
mov
and
pop
adc
das
add
mov
lock
jg
jecxz
mov
inc
test
jne
cmpsl
pop
sub
cmpsl
cmp
xchg
pop
add
faddl
icebp
dec
lods
sub
fidivs
cmp
jne
sarb
xchg
push
push
sbb
push
outsl
mov
sub
add
bound
jg
lock
dec
jnp
cmp
mov
das
xchg
lea
stos
sahf
jb
dec
stos
mov
jns
jmp
lret
pop
xlat
loope
out
test
push
int3
dec
aam
cmpsb
cltd
jbe
and
aaa
ja
adc
add
ret
push
clc
pushf
mov
bound
call
enter
mov
pushf
test
dec
push
inc
push
cmp
adcl
shll
mov
gs
pop
and
sti
daa
pop
mov
mov
inc
cmc
pop
pmulhuw
jb
inc
iret
scas
decb
jp
stos
sub
jl
mov
xor
insl
repnz
cmp
sahf
push
lcall
xchg
pop
dec
pop
cmp
leave
roll
enter
outsl
dec
mov
cmp
fisubrs
dec
aaa
add
shrb
arpl
push
iret
gs
stc
lret
or
fmulp
add
adc
rcll
inc
sbbl
or
pop
add
pop
sbb
les
pop
jp
outsl
popf
clc
lds
sub
fldcw
lock
test
adc
fisubl
inc
inc
cltd
les
shrl
rcrb
dec
inc
cmpsl
push
cwtl
or
xor
inc
les
dec
out
fcoms
jno
push
aam
or
cmp
jle
push
or
pop
push
cmovge
sub
mov
lret
aam
les
cli
jo
rorb
adc
xchg
pop
in
or
lret
out
add
nop/reserved
push
arpl
jo
rcll
inc
xchg
in
adc
mov
aaa
xchg
fwait
popf
cmpsl
movsb
in
adc
add
cli
push
ret
imul
jns
lods
pop
lock
ret
inc
es
cmp
push
adc
xchg
loop
cmp
in
sbb
inc
lret
aad
fdivrl
outsl
mov
add
inc
jge
dec
jno
mov
mov
stc
mov
imul
pop
lods
das
ret
sbb
mov
mov
fbld
ja
movsb
fldl
loop
les
inc
outsl
repnz
insl
cmc
cld
adc
sub
rcrl
xchg
mov
xchg
jno
push
ljmp
pop
popf
xor
mov
rcr
xor
inc
fs
js
jmp
lock
mov
stos
shrl
pop
push
gs
subl
fwait
mov
add
scas
sub
std
and
push
lods
push
or
test
mov
cmp
jo
out
lret
sub
lods
lret
mov
outsb
lret
adc
adc
pop
mov
jge
mov
push
sti
pop
faddl
jo
sbb
push
stos
pop
push
mov
shrb
adc
or
sbb
shl
jecxz
popa
adc
mov
lret
cmpsl
mov
xchg
in
jb
lock
xor
dec
andl
jnp
ljmp
jmp
sub
mov
jecxz
into
push
loopne
mov
in
push
pop
out
incl
jno
shrb
inc
stos
xchg
fwait
rcll
inc
pop
xchg
jb
cmp
pop
jmp
fbld
push
out
xchg
inc
rclb
jbe
test
leave
inc
ret
bound
iret
test
push
pmaddwd
jecxz
andl
gs
imul
loopne
cmp
dec
inc
add
pop
pushf
movsl
jmp
jmp
outsl
scas
shlb
cmp
ljmp
lcall
inc
inc
ret
push
dec
popa
fnstcw
fisttps
lret
sub
fiadds
mov
mov
std
xlat
in
sarb
aad
push
pop
xchg
enter
loope
sbb
xlat
clc
andb
cmpsl
lea
add
call
jnp
mov
ss
pushf
ud0
test
sbb
mov
ds
xchg
insb
int
popa
push
ljmp
popf
xor
and
mov
imul
or
mov
sti
mov
loope
hlt
mov
inc
out
or
pop
in
pop
dec
fnstenv
mov
lcall
push
ss
fmuls
push
int
sub
sub
pop
in
jnp
je
das
call
jae
mov
pop
jno
jno
adc
dec
pop
stos
std
pop
jnp
loope
jmp
or
jnp,pt
ret
dec
lods
inc
jmp
cmp
test
int
hlt
jo
dec
cmp
imul
cwtl
cmpsl
shrb
and
sub
pushf
mov
adc
das
adc
cmp
xlat
or
icebp
cmc
aaa
inc
pop
enter
dec
insb
add
cmp
lcall
xor
jbe
push
fsubs
int
nopl
mov
pushf
dec
aad
push
lret
jns
dec
sub
mov
inc
adc
cmp
mov
mov
xchg
dec
ror
xchg
aad
pop
sti
mov
jb
pop
test
mov
jo
mov
insb
cld
in
lods
cmp
test
xlat
ret
push
out
sbb
xchg
insb
icebp
ret
sbb
mul
or
xor
mov
lock
ret
subb
movsl
das
out
int
int3
xchg
xchg
adc
pop
cmovne
pop
inc
movl
pop
popa
rolb
cld
out
jl
cmpsb
lock
bound
sbb
ja
and
mov
test
jg
in
cmp
je
ret
dec
add
cwtl
sbb
int
mov
out
sbb
pop
insl
fimuls
aam
repz
std
dec
out
push
int
mov
mov
ja
mov
add
movsb
and
stos
sbb
and
iret
jp
out
test
lock
pop
mov
mov
mov
fdivl
pop
dec
xor
inc
mov
sbb
icebp
test
fsubrs
ror
int3
or
jge
lret
loope
lret
sarb
xor
lds
movsb
dec
dec
test
cwtl
hlt
ret
jl
or
xchg
and
data16
dec
cmp
inc
rol
sbb
insl
repz
cs
lea
inc
jne
aas
gs
inc
in
mov
cmpsl
jle
call
sbb
mov
mov
dec
jno
mov
ljmp
inc
leave
test
jp
xor
add
mov
jmp
xchg
xchg
sbbl
notb
add
mov
push
pop
add
cmp
daa
jne
add
pop
into
adc
popa
int
add
lret
cmpsl
xchg
imul
pop
jp
cmpsb
xchg
mov
mov
cmc
mov
xorb
shl
cmp
sbb
xor
mov
cmp
fdivrl
lahf
mov
adc
dec
mov
adc
and
test
les
sbb
cmp
loop
dec
pop
test
aam
xor
repz
sbb
les
aas
movsb
insl
and
aad
dec
push
out
inc
xchg
std
mov
add
hlt
dec
mov
bound
lahf
pop
jo
adc
mov
lods
sbb
repnz
ss
pop
dec
mov
inc
addr16
rorl
xor
mov
jno
xorl
aam
sti
adcb
inc
in
mov
cmp
mov
cmpsl
aas
cli
pop
pop
movsl
inc
push
fs
pop
add
fs
xchg
dec
jmp
mov
cmpsb
xor
jae
aas
aad
loop
cli
mov
lods
jnp
cmp
scas
add
push
jb
es
mov
mov
jno
cmpsb
ss
lds
aad
jge
in
push
movsb
inc
cwtl
xor
in
jne
xor
aam
lcall
pop
cmp
jae
add
ret
jl
scas
movsb
mov
jbe
xlat
aaa
sub
sahf
add
add
pushf
push
mov
pop
xorl
xchg
xor
sbb
loopne
les
pop
incl
mov
mov
xchg
test
or
mov
sbb
cld
dec
jle
les
push
and
mov
add
add
sti
iret
xor
imul
push
and
mov
imul
shl
xchg
push
pop
add
out
sbb
pop
mov
aam
scas
mov
cwtl
fildll
icebp
loopne
push
int
mov
sbb
ficomps
and
loopne
jle
inc
add
jns
sarl
lret
mov
int
lcall
mov
add
adc
inc
ss
cltd
mov
scas
call
push
lods
adc
pop
pop
aas
push
cmp
cmpl
cmp
out
mov
mov
xor
mov
rcrl
pusha
dec
add
xor
aaa
cmc
xchg
jno
cmp
jl
push
and
pop
jbe
scas
or
ss
sub
ss
int
out
outsb
or
call
and
ret
sub
xchg
push
cmp
and
insb
rolb
and
add
dec
xor
mov
push
aad
adc
push
mov
ret
mov
loopne
push
jbe
sti
dec
push
mov
mov
shrb
and
sub
xor
and
mov
pop
dec
in
cmp
mov
movsl
add
or
dec
jp
mov
jmp
mov
push
inc
jb
sbb
movsl
jmp
iret
xchg
push
add
pop
add
cmp
les
shll
adc
jno
icebp
jl
subl
dec
sub
push
adcl
sbb
repnz
mov
cmp
inc
jecxz
xchg
fadds
inc
mov
xchg
add
out
cmpsl
pop
or
inc
xor
sub
fistpl
inc
gs
jmp
call
mov
lret
movsl
aam
int3
mov
and
out
in
mov
mov
adc
pop
and
mov
enter
inc
jne
pop
stc
icebp
xchg
add
mov
mov
int
mov
ds
inc
push
inc
ds
push
adc
mov
sbb
clc
or
aad
lret
clc
arpl
ljmp
pop
mov
les
popa
sub
shl
sub
jno
pop
aas
cld
fiadds
adc
xchg
call
test
dec
test
cmc
in
dec
pop
push
cltd
mov
dec
mov
lea
dec
mov
es
insl
inc
sahf
aas
xchg
lret
and
mov
iret
cmp
xchg
xor
sbb
stos
arpl
push
jno
add
push
cltd
xor
outsb
push
mov
push
xchg
rorb
or
scas
pop
out
mov
jg
or
xchg
cmpl
inc
pusha
add
push
add
rep
mov
mov
call
mov
xchg
stos
iret
add
popf
movsl
popa
idivb
mov
jnp
popf
int
cmp
jae
repz
addb
lret
fisttpll
sub
mov
and
test
and
push
xchg
js
lahf
je
cs
jns
xchg
adc
in
cmp
hlt
ss
shlb
sub
sub
lea
iret
sbb
cmp
cmp
ret
sbb
xor
push
xchg
jne
shll
popa
mov
mov
pop
inc
hlt
push
int
repnz
mov
mov
fnsave
xor
sarl
data16
push
sbb
xchg
and
cmp
repz
lods
dec
dec
xorl
or
xchg
dec
mov
imul
mov
dec
mov
inc
adc
js
loopne
mov
mov
cmpsb
pushf
mov
push
mov
imull
sti
addr16
incb
adc
andb
push
push
or
cli
js
jns
jns
sbb
push
sbb
xchg
sub
dec
and
loop
shlb
mov
cmp
inc
pop
mov
jl
bound
lock
adc
jnp
sub
jg
adc
mov
pop
cmp
xchg
rorb
cmpsb
cld
add
xchg
mov
jns
mov
lret
rcrb
adc
insl
push
xor
add
loopne
ds
cmp
out
fwait
fwait
xchg
or
add
mov
imul
pop
cmp
cmp
in
xor
lods
aad
sub
jmp
les
jns
mov
lea
in
test
jmp
add
inc
inc
dec
filds
lods
inc
roll
out
incl
mov
imul
popa
add
mov
mov
and
jns
popf
jbe
sbb
test
push
sub
sbb
adc
movsl
imul
pop
jmp
mov
fs
fimull
fs
in
les
inc
icebp
mov
mov
xchg
add
pop
fstpt
clc
mov
cli
lods
push
pop
cld
lret
pop
addr16
pop
test
add
lds
ljmp
adc
test
out
and
scas
sbb
icebp
ret
repz
test
mov
or
fsubrs
add
xchg
inc
xor
cwtl
ret
mov
pop
cli
pop
lods
jo
adc
push
lcall
adc
ja
jge
outsl
ja
xchg
xchg
xchg
dec
ds
adcl
loopne
out
divl
sub
scas
xor
inc
aaa
and
jg
ljmp
and
mov
dec
mov
lret
inc
lds
jo
ret
push
jg
loopne
sub
pop
stos
inc
addb
insl
fwait
and
mov
decl
lret
in
and
jmp
jnp
push
mov
and
ficomps
fisubrl
add
pop
add
ret
js
mov
mov
add
daa
fisttpll
je
shr
mov
sarb
out
fcompl
dec
shl
mov
mov
loop
lock
loope
cs
or
mov
xchg
dec
daa
xchg
out
or
enter
fidivs
mov
pop
in
jle
push
daa
cmc
push
mov
xor
dec
nop
xchg
sub
sbbl
jg
jecxz
es
push
xchg
mov
imul
movsl
int3
mov
xlat
cli
cmp
dec
xor
add
bound
xchg
pop
hlt
inc
daa
jne
out
mov
inc
inc
sub
sti
in
pop
cld
aas
in
sub
fisttpll
out
cwtl
jge
in
jns
out
pop
clc
push
mov
loope
frstor
data16
mov
inc
push
leave
add
movsb
push
jnp
xchg
pop
adc
repz
pushf
mov
pop
push
push
lcall
stos
je
pop
xlat
xchg
dec
push
xchg
dec
cmp
test
sbb
jecxz
cmp
add
call
test
add
add
lods
jns
leave
mov
push
jmp
or
insb
pop
rcrb
mov
and
push
cmp
and
inc
addr16
addr16
xchg
movsl
fiadds
les
or
dec
inc
push
mov
mov
repz
pop
sbb
pop
cs
pop
sub
jg
cmp
add
jp
xchg
cmc
pop
push
cmpsb
imul
es
push
jne
inc
sar
dec
mov
les
sub
movsb
shlb
jge
add
jg
push
push
rorl
inc
aad
mov
lea
popf
push
cmp
inc
mov
rcr
sahf
rorb
sub
leave
or
scas
add
or
imul
das
aad
jp
inc
mov
pop
jbe
rorl
mov
push
pop
jecxz
xchg
adc
mov
jl
sub
inc
rcll
nop
jmp
in
sub
mov
stos
fscale
pop
aam
add
sub
ss
repnz
out
in
mov
xchg
shlb
stos
mov
xlat
outsb
or
pushf
mov
adc
xor
leave
inc
jg
add
dec
rorl
sti
inc
js
or
pmaxub
mov
aad
dec
jne
or
testb
push
stos
int3
pop
xchg
sub
fidivs
and
int3
call
jle
add
rcrl
xor
mov
shll
mov
mov
adc
jnp
xor
push
jbe
repnz
jbe
aaa
ja
inc
push
or
jnp
or
pop
jo,pn
andl
pushf
inc
enter
lock
xor
int
stos
push
adc
notb
jno
out
sahf
dec
dec
pushl
dec
mov
mov
xchg
cwtl
jno
test
gs
inc
inc
inc
adcl
xchg
aaa
pop
cmp
pop
lret
pop
dec
push
lahf
push
xchg
mov
loope
into
dec
leave
pop
pusha
jo
mov
pop
push
push
jge
jmp
lods
mov
dec
jmp
pop
mov
std
cld
lock
cli
jbe
clc
cmp
pop
jl
mov
scas
ljmp
stos
out
fildll
jb
cmp
into
in
xchg
or
xchg
fs
iret
iret
addr16
in
inc
rcr
push
sub
into
jecxz
mov
xor
cmpsl
jg
cs
enter
push
je
insl
dec
jecxz
sub
js
lcall
clc
loope
mov
mov
mov
dec
repz
adc
lahf
sbb
mov
test
and
in
xor
cmp
jo
out
push
sub
push
iret
cmpsb
or
dec
sbb
dec
or
aam
xor
aam
outsl
pop
orb
inc
inc
xchg
lcall
inc
sbb
adcl
jmp
in
pop
lock
in
inc
testb
or
and
mov
sub
mov
push
cmpsb
test
rclb
cs
outsl
loop
ss
pushf
ds
push
add
pop
mov
cmp
imul
imul
pop
and
in
lock
call
ficoms
nop
xor
test
lods
lods
test
mov
popfw
fldt
ja
add
xor
or
in
nop
mov
imul
jecxz
shlb
adc
cmp
push
jle
add
mov
jo
mov
imul
adc
aad
imulb
push
in
sbb
sahf
sub
call
rcl
push
push
pop
std
jp
pop
lods
in
imul
es
sub
xor
push
push
fnsave
mov
jp
sarb
mov
cmp
mov
dec
addr16
jmp
lcall
mov
inc
pop
lret
lds
sbb
xchg
or
fcom
aaa
out
and
or
push
lds
mov
xor
sti
enter
xchg
test
jbe
jge
mov
je
lret
aad
adc
pop
cmp
mov
lds
xlat
call
mov
inc
mov
xor
icebp
clc
mov
adc
pop
pop
xor
test
enter
popa
sbb
add
inc
xor
pushf
and
shrb
outsl
bound
inc
xor
add
cli
add
out
push
sub
push
ja
dec
pop
add
movsb
outsl
xchg
stos
mov
sbb
movsl
shll
je
or
ficoml
ds
inc
nop
sti
inc
hlt
cmc
jecxz
inc
lea
mov
sbb
fwait
jg
fsubr
dec
cs
cmc
data16
jl
or
lds
lret
and
cmpl
pop
sbb
jmp
sahf
and
sub
test
add
lret
mov
adc
test
in
cmc
push
fwait
xchg
sbb
pushf
mov
add
add
mov
out
push
iret
stos
lcall
or
mov
pop
addps
mov
xor
pop
stos
out
push
icebp
mov
fsub
loopne
xchg
cli
in
icebp
mov
in
adc
add
clc
cmc
inc
sub
inc
scas
loopne
jmp
call
js
fwait
clc
inc
sbbb
scas
xchg
or
or
lea
and
mov
std
movsl
push
inc
xor
repnz
lea
mov
fbstp
test
push
xchg
cli
push
push
stos
xchg
aam
test
or
popa
cltd
dec
add
in
pop
mov
adc
xchg
sub
stc
repnz
lds
push
ja
ret
inc
jmp
imul
push
leave
and
ljmp
push
ja
xchg
fmuls
adc
insl
push
daa
xchg
pop
xor
movsl
iret
xorb
rclb
in
jb
jl
push
loop
lcall
shlb
mov
jb
mov
iret
rcl
adc
dec
loop
add
or
inc
mov
cld
jle
sti
sbb
lods
pop
push
push
xchg
and
push
push
cld
cltd
jnp
sti
sub
out
adc
jge
mov
sub
pop
dec
lcall
adc
sub
mov
cmp
xchg
pop
hlt
mull
insb
pop
pop
iret
push
push
hlt
int
cs
jmp
or
ja
loope
mov
dec
add
dec
push
push
icebp
inc
dec
mov
inc
pop
repnz
and
daa
inc
data16
decl
loope
mov
pop
bound
xor
shlb
fnsave
push
scas
enter
sub
push
cwtl
out
mov
aas
add
push
and
jg
enter
jb
stos
test
scas
outsb
rcrb
sbb
pop
mov
fisttpl
mov
ret
lea
mov
les
ljmp
sub
out
lock
cmp
push
mov
add
ja
xor
addb
and
sub
mov
fidivl
scas
test
and
shll
stos
xchg
push
push
mov
and
mov
mov
in
sbb
data16
mov
aad
addr16
mov
lods
clc
cmpsb
dec
enter
into
sub
lret
shlb
addr16
hlt
pop
popf
cmp
ret
jns
daa
insl
fstps
arpl
ffree
and
pop
iret
aaa
push
pop
and
outsl
iret
ficoml
test
adc
push
dec
dec
inc
mov
orl
inc
iret
dec
xchg
rorl
xchg
sar
adc
sbb
js
adc
sub
push
mov
or
pushf
add
push
cld
jb
cs
cmp
lahf
ss
mov
mov
mov
ljmp
sbb
xchg
sub
sub
inc
notl
test
push
sub
pushf
lea
mov
ds
xchg
test
add
jo
cmc
loopne
fcmovnbe
mov
dec
dec
es
sub
lret
sti
insl
out
out
movsb
jns
or
movsb
mov
call
std
mov
outsb
cwtl
negl
lods
mov
jle
inc
cmp
inc
mov
sub
or
mov
out
shll
mov
push
andl
cmc
jl
xor
jecxz
add
lcall
stc
enter
cmp
mov
sub
cli
push
dec
and
pop
mov
mov
sbb
bound
je
pop
stos
test
call
scas
adc
jbe
call
stos
fdivp
sti
loop
stos
rol
mov
add
es
mov
xor
in
inc
dec
dec
inc
cmpsl
lahf
inc
or
sbb
mov
hlt
sbb
inc
in
stos
mov
insb
xchg
mov
jns
movsb
push
aad
sbb
out
dec
cld
cmpsb
cmp
cmp
jge
jns
das
lea
push
fisttps
je
sti
xchg
not
jge
in
gs
jns
out
out
cmc
xchg
mov
subl
mov
mov
dec
mov
xlat
cld
ror
in
adc
lcall
fidivl
sbb
pop
imul
add
jl
inc
mov
repnz
out
adc
jo
scas
cld
in
cmp
xchg
std
lock
arpl
sub
push
xchg
jbe
insl
xor
repz
push
sbb
clc
push
in
imull
inc
push
or
in
cmpsb
cli
cmp
fstl
rcrb
test
mov
push
push
and
xlat
test
loop
xlat
or
repnz
push
scas
out
shrl
test
lcall
lods
xor
mov
jb
clc
arpl
notb
jbe
push
call
shll
cmpb
scas
adc
aas
fcompl
or
hlt
popl
or
es
jl
cmpsb
call
shrl
loop
dec
ss
hlt
nop
mov
pushf
fildll
cmp
test
mov
sbb
mov
mov
xchg
push
dec
icebp
xor
cmp
mov
adc
cmc
mov
or
ret
add
arpl
and
dec
sbb
cmp
in
insb
mov
pushf
std
xor
loopne
iret
pop
cmpsl
mov
testl
test
dec
enter
dec
inc
sbb
xchg
add
aas
out
cmp
mov
add
adc
in
add
push
outsl
pop
adc
js
sbb
mov
popf
dec
cld
sub
push
jg
add
mov
push
out
dec
push
daa
hlt
jbe
jae
cmp
and
mov
pusha
dec
xlat
push
xor
pusha
or
mov
lcall
cmp
mov
push
repz
pop
clc
jno
dec
cwtl
sbb
or
xchg
jge
jne
push
inc
lea
sbb
sbb
mov
xor
movsb
xchg
sti
icebp
clc
sub
add
mov
jge
or
cmpsl
sub
dec
dec
mov
xor
xchg
and
dec
enter
ficoml
mov
jae
xchg
push
cmp
mov
movsb
test
xchg
sub
into
fisttpl
es
daa
pop
fs
icebp
nop
xor
pop
or
das
pop
aas
cmp
std
fstps
add
sub
jno
leave
sahf
shr
stos
sub
outsl
sbb
push
sub
cld
xlat
or
or
adc
mov
icebp
cmpsb
out
nop
scas
lret
sbb
repz
xchg
xor
mov
jecxz
pop
jno,pt
aaa
dec
or
xlat
dec
mov
xor
cmp
xor
sub
lret
lahf
add
sbb
ret
xchg
or
add
add
mov
ss
insb
xor
shlb
incl
rol
inc
cld
sub
jge
mov
insb
pop
push
jae
inc
std
adc
jmp
or
pop
outsl
mov
jo
arpl
divb
enter
dec
xlat
gs
fwait
add
or
shrb
icebp
mov
xchg
or
ss
lahf
testl
inc
xchg
fs
xchg
stos
inc
out
addr16
jmp
jmp
int
pop
std
cmp
call
loop
icebp
mov
cltd
test
sub
orb
dec
cli
xchg
js
and
dec
lods
sub
or
mov
jle
adc
or
rol
mov
mov
mov
xchg
clc
xor
xchg
movsb
push
lods
js
insl
leave
cmp
rclb
test
mov
pop
sarl
lds
dec
mulb
sbb
test
mov
mov
lcall
iret
mov
std
outsl
pop
enter
dec
divl
sbb
adc
dec
adc
shr
aad
ds
cmp
lods
xor
in
jl
in
ror
or
mov
test
inc
hlt
sbb
mov
testl
sbb
mov
rorb
iret
pop
scas
jle
push
fcoms
add
das
pop
push
ret
inc
pushf
dec
lea
sub
push
subb
popa
fisubrl
testb
inc
jno
pop
out
shrb
inc
les
xor
dec
sub
mov
and
mov
sarb
mov
pop
sbb
mov
mov
scas
jp
push
mov
ficompl
xchg
mov
je
xchg
push
sub
mov
mov
xorl
mov
rolb
sub
pop
pop
inc
rcr
xor
mov
mov
cmpsb
add
push
ficomps
add
dec
rorl
iret
mov
push
xchg
mov
add
mov
roll
out
jge
stos
mov
iret
mov
mov
or
movups
add
in
cli
cmc
push
sti
or
gs
mov
adc
shlb
adc
mov
fisubl
cmp
push
adc
out
xchg
movsb
lret
stc
pop
push
mov
fwait
inc
out
ret
jecxz
sub
dec
cmp
mov
cmpsb
xchg
fcoml
sbb
inc
lea
ss
inc
cmp
push
adc
and
imul
stos
sti
jo
push
lret
inc
xor
dec
sub
and
lods
xlat
push
iret
mov
pop
xor
pushf
lods
or
mov
jns
mov
stos
and
imul
insl
xchg
ss
aam
call
pop
pushf
or
cli
shrb
and
lcall
cmp
mov
inc
jecxz
cld
frstor
jno
fidivrl
loop
leave
mov
faddl
jbe
fdivrl
pop
inc
add
dec
aaa
xacquire
cmp
jge
sub
cwtl
push
or
fimull
xchg
sar
inc
mov
nop
in
adc
lret
push
adc
inc
jl
sub
xor
sbb
mov
dec
add
ja
inc
gs
call
fcmovbe
jns
jmp
push
scas
pushf
adc
inc
mov
iret
cmp
inc
adc
jg
lds
and
cmp
mov
nop
xor
mov
repnz
mov
imul
pop
xchg
mov
lret
sahf
lods
fstpl
cld
xchg
pop
mov
xchg
rcrl
stos
add
cwtl
mov
xor
push
ret
inc
cwtl
fldl
cmp
sbb
sub
jbe
std
pop
cltd
ja
movsl
loopne
outsl
test
jbe
mov
mov
mov
dec
repz
jg
cld
inc
call
faddl
aam
and
lahf
inc
cli
add
push
loope
sbb
nop
out
and
jae
cmc
ret
ret
xor
aaa
fstpt
jg
xchg
aam
mov
sbb
aas
outsl
lock
push
and
shll
add
out
aaa
jge
cmpsb
or
add
pop
inc
xchg
inc
pop
mov
clc
mov
xchg
cmp
pop
dec
or
lahf
pop
es
sub
dec
and
jp
add
mov
xorl
cmp
or
and
inc
xlat
leave
das
les
dec
idivb
xchg
adc
sbb
inc
lahf
arpl
lcall
add
fnsave
lret
mov
aam
adc
call
dec
loopne
or
dec
cmp
jle
inc
mov
ja
or
xor
pop
fistl
in
les
or
inc
clc
pop
pop
fldt
lea
mov
out
cmp
nop
cs
dec
lods
shlb
xchg
jno
arpl
sub
cmc
stc
mov
mov
scas
pop
fnstcw
xlat
jmp
fwait
dec
mov
cld
mov
lret
in
fwait
ds
in
incb
iret
cmp
xchg
pop
popf
inc
mov
xchg
sub
daa
test
or
xor
mov
test
std
ds
and
xchg
push
pop
out
and
pop
mov
xchg
icebp
repnz
push
jl
and
ds
fbld
push
idivb
stc
dec
fwait
cltd
cmp
mov
push
sbbb
jg
jno
cmp
arpl
lods
loope
popf
mov
js
je
mov
ss
sub
mov
and
dec
in
scas
xchg
lea
aaa
cwtl
andl
lret
push
inc
test
fsubrs
je
sub
xchg
or
xor
popf
sub
iret
loope
adc
pop
out
jnp
jp
stos
pop
nop
nop
sahf
test
bound
cmc
mov
mov
push
mov
rcrl
insb
jecxz
aad
daa
or
push
ljmp
mov
rol
jl
in
dec
scas
aas
cmp
inc
or
in
jp
out
xor
lock
sarb
mov
sub
nop
cs
fistpll
into
test
std
outsl
add
icebp
inc
test
sub
ds
cmp
and
mov
rcll
int
stc
insb
fsubrp
dec
xchg
and
test
push
push
push
stos
add
mov
xchg
inc
fidivrs
sub
gs
imul
dec
vmovaps
out
cmpsb
stos
mov
or
sbb
and
jbe
pop
pop
pop
jl
loopne
pop
mov
jnp
fnsave
jecxz
adc
in
prefetcht1
icebp
sub
sub
lea
inc
fcomi
fsubs
mov
movsl
xor
sub
push
jns
mov
mov
mov
jmp
pop
pop
push
or
sahf
pop
pop
pop
add
jmp
xchg
loop
push
cmpsb
dec
imul
xchg
rorb
fst
fsubrp
mov
xor
mov
je
imul
shlb
and
inc
data16
cltd
bound
mov
inc
inc
sub
pop
fwait
lahf
jnp
pop
sub
leave
out
cli
cmp
xor
mul
dec
jg
insl
and
xchg
inc
in
int3
mov
loop
fstl
lret
and
test
mov
cmp
jno
xchg
dec
sbb
pop
popf
ret
popf
jbe
imul
pop
lahf
test
mov
push
and
daa
jns
addr16
pushf
mov
test
xlat
inc
scas
mov
adc
repz
test
sbb
pushf
or
loop
popa
cmp
dec
leave
adc
rdtsc
push
test
testl
pop
insl
nop
fsubrs
mov
aaa
pop
cmp
ret
rol
std
leave
jno
push
xor
pop
push
hlt
sub
push
mov
mov
test
out
fdivrl
push
outsl
mov
jae
into
aas
jns
adc
xor
jg
das
repnz
jnp
mov
out
jecxz
ret
aad
frstor
pop
in
shl
mov
pop
push
popa
and
sarl
or
setp
mov
loope
mov
into
lock
popa
bound
push
lcall
pop
pop
sbb
fisubrs
push
test
adc
xchg
icebp
add
jge
mov
jecxz
sbb
mov
stos
mov
mov
lahf
fidivs
dec
xor
fistl
sti
enter
pop
enter
pop
out
jno
xchg
sbb
aas
aad
jno
dec
mov
inc
pop
ret
lahf
cmpsb
xor
call
fisubrs
loop
push
mov
int
outsl
fidivrs
pop
ljmp
dec
add
jg
adc
test
cmc
push
lea
mov
mov
or
mov
cwtl
mov
fldl
sub
rcr
inc
mov
xchg
adc
xor
int3
pop
lcall
out
mov
cli
hlt
rcrl
push
push
scas
int
mov
repz
inc
push
mov
popa
mov
lods
sbb
jge
repnz
mov
std
or
cmpsb
icebp
and
mov
lret
mov
ljmp
into
les
xchg
frstor
xchg
jne
dec
adc
nopl
fstps
inc
aam
jne
loop
arpl
or
cmc
in
adc
inc
rcll
lret
mov
or
fisubs
ret
enter
mov
dec
sti
cs
pop
adc
push
cmp
decl
shrl
pop
ud0
loop
das
hlt
loopne
push
xor
sahf
ljmpw
mov
test
pop
dec
stos
fiaddl
lcall
and
push
pop
xchg
push
lods
mov
lcall
sub
hlt
pop
mov
xlat
out
pop
in
jae
loopne
mov
add
mov
mov
lahf
xor
out
rolb
insl
sbb
mov
jne
imul
rcrl
aad
mov
push
stos
pop
andb
je
xlat
adc
add
fsubl
mov
mov
pop
and
loope
lcall
test
jb
stc
jns
mov
jns
movsl
pop
fidivl
fcmovb
cmp
stos
ret
adc
mov
xchg
in
addb
mov
jle
pushf
mov
je
fs
daa
fs
fs
sbb
jno
je
js
cli
cmc
cli
xchg
adc
imulb
push
mov
xchg
sbb
pushf
data16
fnsave
xchg
pop
or
shrb
je
push
xchg
push
lret
loop
in
xchg
cmp
pop
repz
xchg
mov
mov
cli
adc
aas
cltd
or
fsubrl
mov
jnp
sahf
cs
jmp
adc
in
aas
add
push
add
fistps
stc
jbe
ret
test
xor
xor
mov
fisubrs
or
or
lea
nop
or
les
cmp
adc
int
aam
dec
jb
xor
insb
cltd
or
mov
outsl
call
adc
push
jns
cmp
sbb
sbb
jl
cmp
cmp
imul
ret
aam
xchg
xchg
mov
aam
dec
xchg
fwait
push
cli
pop
int
insl
ja
fsubs
dec
pusha
adc
sarl
adc
mov
in
xchg
or
outsb
jg
into
push
xor
nop
sub
push
mov
xchg
add
or
push
sti
nop
in
loopne
daa
inc
xchg
pusha
pop
jge
sti
xlat
xchg
dec
ljmp
fbld
sub
outsb
jb
xor
jg
mov
or
mov
xor
out
jns
imul
cmp
xchg
es
lds
dec
mov
inc
subb
call
clc
daa
iret
push
scas
jb
sbb
clc
test
xor
mov
hlt
push
inc
je
mov
sbb
mov
cmp
ret
in
mov
push
aaa
clc
pop
lods
jae
daa
jge
mov
jne
loop
ror
loop
nop
mov
push
dec
lcall
lret
movsl
iret
xchg
push
jle
sahf
xchg
popa
pop
fisubl
test
xchg
and
cwtl
iret
dec
push
adc
jle
loopne
inc
pop
push
cld
movsb
cwtl
sbb
ds
loope
fs
fldenv
mov
and
leave
sarl
add
mov
and
sbb
or
stc
cmp
jnp
int
insb
imul
inc
mov
in
test
inc
movsb
adc
jb
push
ds
or
hlt
lds
mov
ret
icebp
fiaddl
xchg
ror
cmp
pop
int
mov
movntq
out
and
jge
cmpsl
xchg
cmp
rclb
push
cmc
ss
sbb
sbb
repz
sub
xlat
dec
call
imul
pop
xchg
fimull
or
add
and
and
in
imull
cwtl
gs
dec
iret
lahf
push
cld
ret
out
test
or
out
sbb
loopne
enter
imul
push
cmp
add
dec
cmpsl
and
sub
mov
rorl
push
imul
into
jmp
cmp
xor
pop
test
mov
dec
push
lods
push
scas
cs
sbb
testl
in
test
pop
jns
scas
mov
mov
add
sub
test
in
stc
push
sbb
and
adc
cwtl
sbb
mov
repz
mov
sti
mov
mov
adc
push
add
push
jecxz
repz
imul
jns
rorl
test
enter
cld
pop
mov
psubsb
inc
out
add
xor
add
push
xchg
add
mov
in
cwtl
lret
scas
rorb
or
pop
ss
out
or
sbb
mov
fwait
jle
push
aad
faddp
iret
adc
sbb
sahf
sahf
push
shlb
lea
or
and
sub
inc
cmp
mov
sub
jg
xchg
arpl
cmc
repz
adc
sbb
scas
pop
int3
xor
popa
in
sub
data16
mov
pusha
add
jmp
outsb
sub
inc
pop
sbb
fwait
cmp
lahf
cmp
enter
ja
jle
sbb
jo
ret
xchg
cld
iret
xchg
test
jmp
es
cs
lods
mov
leave
sub
sbb
sbb
mov
sub
add
mov
into
jg
xor
mov
les
loop
mov
lcall
das
lea
and
jo
cmp
sbbl
shll
inc
mov
sahf
stos
cmp
in
scas
add
add
shr
movsl
push
mov
loopne,pn
in
sbb
push
clc
or
and
cmp
mov
data16
ret
cmp
or
int
aad
lahf
insl
jno
jp
lcall
into
out
inc
xchg
fwait
xchg
aaa
cmp
ljmp
rolb
out
hlt
repz
mov
mov
bswap
mov
leave
or
push
adcl
test
scas
jp
fisubrl
inc
adc
sbb
outsb
ss
jns
adc
add
insb
aad
inc
pop
and
pop
fs
pusha
into
mov
scas
pop
in
ljmp
lcall
fnstcw
dec
movsl
test
mov
inc
pop
lret
outsl
jbe
pop
test
push
popa
pushf
jns
sbb
fs
imulb
es
out
dec
popa
jae
mov
addr16
dec
inc
test
dec
mulb
aam
xor
add
jnp
xor
jno
test
pop
adcb
push
fcoml
adc
mov
fildl
push
xorb
xor
sar
lods
mov
push
jne
mov
das
ljmp
jae
mull
jne
scas
pop
push
mov
mov
ja
push
pushf
imul
mov
adc
add
fisubs
mov
push
insl
in
push
dec
jb
xor
arpl
movl
mov
les
aaa
loopne
ret
xor
mov
cmp
or
push
cli
jg
popf
jae
cmpsb
mov
dec
and
repnz
je
mov
jne
push
mov
jno
pop
movsl
xorl
in
pop
mov
inc
or
inc
dec
xor
push
loope
repnz
fdivr
dec
inc
pop
in
jae
insb
orl
mov
pop
rorb
mov
fldenv
mov
sub
push
lret
orb
fidivs
loope,pt
dec
push
stos
mov
lret
and
lock
enter
shl
sahf
scas
aam
inc
fdivs
inc
imull
mov
lods
or
xor
jo
add
movsb
push
jns
fwait
sub
add
sub
or
movsl
mov
cmp
inc
out
dec
push
inc
ficomps
dec
fsubp
pop
cmpsb
stc
scas
cld
push
hlt
xlat
pusha
pushf
insl
lods
dec
inc
pushf
pop
mov
lret
xor
lea
es
lret
sub
cmpsl
dec
sub
jmp
mov
es
jecxz
lcall
outsl
cmpsb
push
outsl
test
loope
aad
cld
out
int
mov
jp
push
int3
repz
lock
sub
hlt
loopne
dec
pop
lds
jmp
movsl
add
dec
dec
sub
popf
push
mov
mov
push
aad
sub
mov
lods
rorl
jmp
push
jne
pushf
out
jmp
mov
cmp
cmp
ljmp
dec
push
rcr
pop
in
and
or
mov
jne
adc
sbb
dec
pushl
stc
out
sub
shll
gs
push
mov
mov
movsl
test
scas
test
add
pop
add
gs
insb
stos
inc
or
pop
and
push
je
mov
mov
push
sub
movsb
outsl
popf
or
sbb
lcall
adc
fadd
iret
stc
rcrl
das
jp
xor
inc
jmp
xchg
bound
jl
pop
outsb
lods
aas
ds
addl
or
fdivl
push
xchg
push
xchg
mov
mov
shrb
sub
xchg
jb
movsb
cld
rcr
subl
sub
stos
adc
mov
sub
test
mov
add
cmc
nop
clc
movsb
mov
test
mov
sbb
mov
int3
pop
push
inc
mov
int3
push
test
out
sub
shlb
add
sbb
clc
dec
aaa
pop
scas
pop
aad
fisttps
cmp
leave
pop
stos
push
in
test
or
adc
ss
iret
mov
adc
mov
add
jnp
ljmp
mov
into
leave
dec
jb
push
push
das
insb
insb
sub
add
scas
inc
mov
jns
push
nop
pushf
sub
popf
divl
fcmovnu
lods
dec
lret
clc
movsl
jno
jns
mov
xor
js
push
jns
out
ds
pop
add
cld
fstpt
mov
dec
daa
or
add
mov
xchg
mov
into
ret
and
xor
ss
jmp
mov
cwtl
pop
repz
sbb
bound
stos
adc
aas
sbb
popf
or
into
xchg
popf
shl
jns
jl
pop
je
xor
jne
lea
inc
mov
fisubl
mov
mov
mov
mov
lods
sub
out
push
add
mov
outsb
mov
sbb
sub
icebp
fdivrs
popf
sbb
nop
sub
xchg
jecxz
sahf
inc
push
clc
mov
push
cmovs
sbbb
sbb
sbb
icebp
outsl
jo
jns
scas
sub
shr
ss
or
inc
movsl
fistps
cwtl
lahf
jbe
fmuls
iret
test
loopne
pop
add
cmp
test
aam
mov
pop
in
push
iret
sbb
inc
adc
cmp
scas
int
aaa
jnp
cmp
movsl
testl
and
fwait
xor
mov
std
outsl
mov
insl
les
add
mov
push
inc
or
jmp
jno
data16
stc
or
shlb
pop
xor
in
and
cwtl
jae
loope
insl
mov
pop
push
aad
lds
iret
adc
pop
sbb
mov
or
push
add
and
leave
pop
mov
bound
ret
insl
pop
in
xchg
jl
lods
mov
aad
ljmp
lahf
hlt
or
sbb
sub
scas
mov
sahf
call
loop
mov
push
pop
call
sub
cwtl
imul
mov
sahf
pop
mov
and
mov
test
in
mov
pop
int
clc
mov
lods
sub
and
sbb
jno
test
sbb
cmpsl
ret
dec
mov
lcall
stos
mov
jp
shll
lcall
pop
lcall
shrb
mov
sti
aam
cmpsl
fildl
xchg
dec
mov
cli
fs
test
sub
xor
shll
mov
sbb
jo
fldcw
cmp
and
dec
je
lret
lea
push
cmp
ret
repnz
mov
xchg
mov
sub
lea
jmp
adc
fisubs
fildll
enter
mov
push
cs
movsb
sbbl
mov
xchg
and
aaa
dec
outsl
or
cmpb
cs
loope
inc
xchg
nop
dec
sub
mov
lock
mov
out
loope
cmp
mov
push
mov
mov
inc
inc
push
add
jmp
inc
es
pushf
movsl
xchg
lods
cmp
lret
addr16
into
xor
add
pusha
test
daa
pop
mov
stc
rcl
sub
dec
loopne
cmp
dec
aas
push
scas
int
mov
jb
lock
fistpl
jg
push
xchg
mov
mov
fsts
out
hlt
insb
test
sub
mov
mov
outsb
fisttpll
int3
xor
xor
out
dec
jns
int3
subl
es
or
pop
sbb
cvttps2pi
aaa
faddl
daa
outsl
in
mov
jp
fs
xorb
cs
test
jp
stc
js
and
pop
sbb
jns
pusha
ljmp
out
push
xchg
cld
icebp
add
sti
sbb
loop
cltd
and
scas
fmuls
ljmp
xchg
inc
aad
mov
popf
je
fcmovnbe
dec
ja
iret
test
out
call
test
test
mov
inc
and
lds
inc
adc
cmp
sub
sub
out
mov
pmulhw
mov
arpl
jno
jl
push
jne
cwtl
pop
icebp
mov
hlt
dec
rclb
loop
std
test
jmp
leave
adc
mov
mov
lcall
out
mov
scas
cmc
jmp
lds
cmp
lret
dec
pop
cltd
jnp
in
xor
pop
xor
inc
add
dec
inc
sbb
adcb
inc
test
shrb
mov
movsb
out
fstp
ffreep
xchg
cli
je
fsubs
and
or
pop
or
sbb
mov
in
jne
inc
and
xor
push
jp
add
xchg
mov
leave
movsl
mov
sub
push
inc
ret
dec
rcll
push
dec
xchg
fstpl
ss
fldl
inc
test
rclb
outsl
jns
hlt
movsl
push
fiaddl
test
leave
les
and
fidivrl
call
mov
fcmovb
push
pop
ficompl
pop
rolb
or
lret
lods
jle
mov
cmp
loopne
add
pop
sub
sti
or
mov
or
clc
cmpsl
sahf
les
push
cmp
loope
mov
xorb
pop
shld
cmp
jne
loope
and
xor
arpl
xor
lret
push
inc
js
jge
enter
mov
pop
in
push
faddl
or
fbstp
push
call
bound
daa
and
sub
fcomps
cmp
adc
jl
cmpsb
sbb
xor
mov
lods
sbb
xor
iret
nop
enter
in
mov
mov
adc
inc
lock
pop
pop
out
mov
jne
jno
sti
fldcw
pop
mov
cmp
pop
push
cmp
outsb
cmp
lret
cmp
lcall
jae
cmp
jo
inc
jnp
ja
jae
lock
cmp
xor
in
movsl
mov
add
dec
jo
sub
push
mov
inc
int
xchg
dec
test
jbe
incl
andl
jbe
sti
ficoms
test
lret
push
push
cmp
jo
in
inc
jg
sub
fs
adc
sub
jecxz
push
and
int3
insb
or
cltd
sbb
jecxz
fistpl
push
xchg
push
pop
inc
lret
aad
xchg
jl
ljmp
aam
push
ljmp
adcl
xchg
fmul
iret
xchg
aam
iret
fists
and
int3
jnp
ret
ret
call
inc
lcall
and
addr16
add
fwait
sahf
cli
stc
fsubl
fwait
adc
jle
and
into
cmpsl
sbb
push
sub
test
out
xchg
pushf
add
nop
and
enter
jecxz
sarl
sub
clc
adc
jle
pop
mov
testl
fs
cmp
inc
out
sbb
pop
jb
push
fldcw
in
arpl
stos
aad
iret
xor
lcall
jns
cmp
adc
fwait
mov
jb
mov
out
push
and
rorl
or
push
ljmp
push
test
adc
jb
fwait
mov
hlt
push
mov
push
jge
out
stos
xlat
cmc
movsb
or
shrb
cltd
dec
scas
xor
jl
jl
jecxz
dec
jae
dec
xlat
jo
cld
mov
dec
jne
int
fisubs
jb
cmpsb
adcb
adcl
sbb
and
enter
fcomip
jmp
aas
ds
roll
inc
dec
jge
mov
xchg
in
aam
mov
sbb
pop
xchg
mov
mov
outsb
mov
mov
xor
fimuls
mov
ret
dec
push
or
orb
pop
jo
jo
xchg
scas
hlt
insb
mov
push
lcall
stc
call
jno
and
push
daa
adc
adc
loop
mov
loope
xor
xor
adc
lds
lcall
mov
aam
adc
inc
jae
lods
pop
out
jns
out
repnz
shrl
jmp
dec
aam
cmp
jmp
add
cmp
jo
fisttpll
inc
rcl
cmp
or
jbe
inc
cmp
test
cmp
dec
imul
jp
out
xor
into
in
fistpll
gs
cmp
lods
jbe
jmp
das
outsb
inc
ss
or
jb
dec
xchg
pusha
stos
fdivr
pop
test
and
pop
mov
lcall
mov
mov
jno
jecxz
insb
lahf
xchg
push
outsl
pop
mov
popf
daa
jnp
cmp
bswap
mov
mov
stc
dec
cmpsl
rcrb
fbld
sbb
daa
ljmp
cmp
jecxz
push
js
pop
adc
imul
cs
push
mov
dec
imul
out
mov
add
jo
mov
fwait
mov
stos
in
rcrb
fs
xchg
das
mov
sbbl
cwtl
fcomps
or
inc
cmpsl
sub
shr
xchg
lock
and
std
test
cmp
xor
xchg
lea
jp
xlat
out
stc
fimuls
mov
sbb
ds
fldcw
outsl
dec
in
cmp
test
cmp
push
cmp
adc
hlt
mov
mov
pop
testl
inc
out
lret
rcrb
jp
loope
lcall
dec
pushf
and
jg
popa
subl
adc
inc
je
test
xor
stc
xchg
mov
mov
test
mov
sub
pop
stos
inc
shll
inc
ja
sahf
mov
dec
pop
cmp
aad
loope
popa
mov
mov
xchg
inc
mov
testl
movsb
shll
pop
inc
es
and
cmp
add
jmp
movsl
jae
out
repz
xlat
inc
push
xor
adc
push
in
cmp
mov
fisttpll
push
sbb
add
loop
stos
adc
mov
enter
jae
gs
sbb
out
push
rorl
stos
jne
sub
enter
mov
mov
inc
adc
add
dec
das
sahf
nop
hlt
mov
xchg
jne
fcmovbe
addr16
xchg
mov
jl
dec
test
push
adcl
aam
mov
mov
repz
and
fsubr
gs
mov
xchg
fwait
test
stos
cmp
sti
leave
xchg
popf
cwtl
rclb
mov
mov
mov
mov
outsl
dec
lds
cwtl
push
add
sbb
xchg
mov
and
or
fs
psubq
sbb
ret
or
leave
jg
repnz
js
repnz
stc
mov
push
loope
cmp
inc
push
jp
sbb
xchg
in
xchg
xorl
test
xlat
inc
icebp
iret
mov
sbb
cmp
jg
or
and
daa
jge
cwtl
imul
js
push
test
leave
push
call
dec
outsb
sbb
push
outsb
das
mov
jo
icebp
mov
fidivs
push
and
or
mov
jae
in
out
mov
fwait
cmp
inc
mov
jns
pop
lock
cmp
loopne
shrb
addr16
test
inc
cmpsb
out
push
mov
inc
adc
das
cwtl
jge
mov
mov
mov
rclb
icebp
cmpsl
dec
and
mov
dec
enter
jae
int3
add
mov
xor
cmp
and
aad
mov
xor
fbld
outsb
das
sbb
mov
pusha
clc
cwtl
push
mov
push
std
jecxz
pop
stos
aas
cmpsb
xor
pop
cmpl
lock
hlt
sbb
inc
mov
cmp
dec
mov
shll
in
repnz
jl
push
nop
dec
ret
cmpsl
adc
jle
sub
std
aaa
dec
std
ljmp
loope
out
mov
fildl
lret
mov
mov
pop
in
add
frstor
pop
push
mov
imul
push
xchg
add
jo
fimull
push
xor
insw
mov
mov
andl
lds
adc
dec
adc
adc
iret
push
add
sbb
in
aad
sbb
push
sbb
lret
popf
sbb
pop
adc
fisttps
es
mov
sbb
cmpxchg
xor
add
cld
mov
sbb
cli
sbb
jae
shrd
fdiv
fdivs
jne
shl
jbe
sub
fistpl
nop
adc
xor
iret
loope
mov
inc
jb
ljmp
aas
sarl
dec
add
mov
shrb
or
insl
fs
xor
movsb
test
add
cld
jbe
jne
rorl
mov
into
pop
mov
pop
lret
cmc
and
jp,pt
dec
shr
flds
adc
sti
ljmp
jle
mov
imul
mov
insb
test
les
stc
sub
xchg
sbb
xchg
mov
and
xchg
sub
or
out
pop
repnz
xchg
sbb
lock
mov
adc
xchg
adc
stos
icebp
mov
das
add
jmp
sub
jge
adc
dec
lcall
test
jo
insb
fdivrs
in
adc
lods
pop
or
xchg
jp
insb
loope
arpl
pop
aaa
dec
jl
aas
add
mov
and
rcl
push
shll
aam
stc
scas
xchg
and
xor
dec
add
orb
cmp
push
inc
xor
jl
add
add
nop
dec
loope
sbb
mov
in
inc
jne
clc
mov
add
jmp
lea
sbb
dec
pop
inc
push
outsb
mov
scas
sub
mov
enter
out
pushf
rcrb
test
pusha
adc
pop
out
lahf
notl
mov
cmc
lea
inc
test
jb
add
rcrb
add
inc
cmp
mov
rolb
imul
ret
and
xchg
mov
fwait
movsb
sahf
data16
lret
mov
xlat
in
gs
cli
sub
aaa
mov
adc
mov
int3
jl
mov
loope
add
push
lock
xchg
cmc
fstpl
jb
lret
adc
aas
mov
jmp
jg
lcall
pop
sarb
jns
pop
shll
sahf
addr16
dec
nop
jl
cwtl
pop
lea
pop
xchg
insl
notl
mov
mov
mov
dec
xor
jb
das
fisubl
dec
mov
sub
and
test
push
sbb
adc
pusha
pop
sub
mov
jmp
imul
push
xlat
fsubrs
inc
fisubrs
push
in
sbb
inc
xor
dec
xchg
push
xor
cmp
fmuls
aad
lea
cmpsl
xor
sub
and
dec
inc
lods
out
in
sub
mov
pop
je
ss
pop
mov
pop
fdivrs
push
mul
mov
pop
iret
sub
int3
and
cmp
cmp
jle
dec
dec
ja
inc
jb
mov
inc
sti
sbb
dec
cli
mov
popf
jns
pop
xor
test
pop
orb
push
fcomps
inc
jns
movsl
add
xchg
push
and
or
adc
xchg
das
push
faddl
sub
test
ja
sbb
lahf
mov
mov
in
push
xchg
or
jo
xchg
stc
add
sbb
cmp
inc
mov
outsb
lahf
add
popf
arpl
in
cltd
cld
nop
mov
das
or
inc
daa
dec
or
adc
and
pop
or
jp
in
cmp
int
mov
pushf
test
std
mov
xchg
shll
mov
lcall
loope
xor
or
sbb
aam
nop
xor
mov
mov
andb
out
add
mov
sbb
rcll
pop
inc
enter
adc
mov
shl
pop
pop
xor
arpl
cmp
fstps
pop
jmp
cmp
sbb
dec
or
scas
jmp
lret
lods
stos
lods
or
mov
or
pop
dec
add
sbb
push
mov
cmpsb
xchg
sub
cmp
jge
push
sbb
cmp
das
in
cmpsl
arpl
pop
jle
shll
call
ss
data16
inc
lret
dec
arpl
push
ja
push
inc
test
mov
sbb
lods
scas
dec
outsb
popl
test
sqrtps
dec
jne
lea
test
pop
pop
lret
mov
pop
xchg
push
cltd
add
pop
scas
sbb
mov
cmp
mov
out
mov
cmp
xor
das
adc
lock
and
int
sbb
lahf
mov
test
int3
push
lock
addr16
outsb
ss
push
insl
cmp
subb
repnz
push
mov
repz
xchg
aad
mov
in
pop
scas
data16
ret
mov
pop
mov
sahf
push
pushf
shl
imul
jg
add
addl
jle
mov
mov
iret
inc
insb
fcoml
lods
dec
jno
ret
push
jo
cwtl
shlb
int
pusha
test
stos
pop
lcall
sub
std
xchg
add
add
pop
movaps
xlat
mov
pushf
or
pop
out
cmp
sub
sub
mov
dec
shrl
push
jecxz
xchg
movsl
xor
cltd
lods
lcall
fs
lock
jbe
hlt
hlt
insb
in
nop
repz
ja
inc
call
loop
and
dec
insb
jle
lret
jbe
jp
lods
outsb
jp
jnp
sub
xor
daa
popa
movsl
dec
pop
pop
outsb
mov
out
js
into
mov
pop
jb
adc
xchg
pop
inc
mov
ss
sbb
in
inc
jbe
cmpsb
orb
push
push
imul
pop
movsl
movsb
mov
push
fisubrl
adc
decl
out
test
dec
je
jnp
ret
vmovhps
sarl
sbb
aad
ljmp
hlt
mov
popa
andb
insb
dec
aad
cmp
xchg
rcrl
push
test
into
sarb
adc
jge
cmc
lcall
lods
repnz
xchg
sbb
and
jbe
inc
outsb
inc
jmp
dec
pop
andb
cmpsl
push
lahf
xchg
adc
cmp
scas
test
inc
sti
outsb
cmp
outsl
push
sub
or
pop
and
adc
lldt
sub
lock
daa
dec
adc
jmp
sti
clc
sub
lock
into
filds
or
outsb
push
enter
dec
sbb
test
xchg
mov
xchg
fadds
incb
repnz
inc
add
dec
loopne
ficoml
fisubl
hlt
gs
pusha
sub
pop
and
jg
lea
mov
outsb
xor
shr
xor
mov
out
icebp
fmuls
shrb
gs
enter
pop
loop
cli
adcb
or
inc
testb
cld
popa
nop
xor
push
sub
leave
test
jne
fisubrs
jmp
cmp
sbb
mov
testb
ret
test
pushf
add
ja
jl
jne
dec
movsb
ret
daa
dec
push
jge
into
mov
loope
xchg
pop
xor
lcall
or
out
mov
scas
jnp
insb
push
pop
popa
mov
mov
pop
movsb
pop
sub
pop
xchg
int
mov
sbb
repnz
xor
or
push
fcoms
adc
fsubr
dec
jmp
mov
jmp
insb
or
or
test
mov
xchg
xchg
pop
sbb
shlb
aad
xchg
loope
dec
aad
push
add
rep
sbb
sti
fdivrl
cmp
mov
fwait
mov
lods
scas
jge
push
sub
xor
pop
adc
iret
mov
sbb
inc
sub
imul
inc
stos
pop
sbb
int
popf
adc
int
rcll
lret
mov
and
dec
cmpsl
mov
and
xor
dec
dec
mov
xchg
mov
pushf
scas
scas
in
lods
or
mov
lret
push
inc
cmp
nop
push
ret
sbb
inc
adc
mov
sub
loop
mov
aam
or
fbld
mov
enter
cmp
adcb
in
dec
jge
orb
aam
lods
sub
jecxz
cld
sbb
mov
mov
xor
jne
mov
dec
into
cmc
scas
loop
rorb
pop
xor
mov
es
les
or
xor
and
rorb
out
idivb
frstor
jbe
imul
mov
pop
pop
mov
sbb
jo
test
xlat
out
mov
rol
adc
leave
xor
lods
push
iret
push
pop
mov
mov
insb
cmp
push
sub
outsb
xor
dec
inc
out
sub
fstpt
fdivl
push
lahf
aas
imul
lods
jne
aad
pop
xchg
add
or
mov
jnp
out
movsl
jp
fisubl
fnstcw
or
cld
sbb
dec
hlt
lcall
sub
aas
ss
jnp
fisttpll
xor
insl
sub
aas
pop
mov
and
scas
mov
or
test
adc
in
clc
mov
sub
in
xor
sbb
jnp
add
cs
adcl
repz
inc
pop
xor
cli
out
jle
insb
or
test
test
xchg
pop
xor
jg
adcl
inc
test
loope
mov
adc
hlt
mov
dec
push
out
aaa
dec
and
stc
lods
xchg
repz
sbb
addb
inc
adc
inc
push
jl
and
daa
xchg
nop
pop
pop
arpl
xor
or
mov
xchg
cli
pushf
add
enter
add
fcom
sub
add
or
imul
call
mov
add
sbb
dec
mov
dec
out
pop
pop
iret
mov
rcll
sub
stos
in
pop
leave
xchg
sbb
add
jb
ja
cmp
xor
je
imul
xchg
stos
fs
fisttps
cmpsb
fsts
idivl
cmp
xor
mov
dec
mov
jb
pop
andb
dec
dec
xlat
insb
out
shl
dec
pop
jge
repz
mov
cmc
add
cmp
xchg
push
xchg
push
push
push
adc
push
nop
mov
data16
call
aas
dec
mov
mov
fsubrl
fcomi
mov
test
mov
adcb
pop
nop
xchg
and
xchg
xchg
nop
loopne
cmp
popl
and
orl
xor
enter
cld
leave
xchg
lea
xor
shlb
jae
sbb
out
rclb
sub
in
mov
fcoml
jno
adc
adcb
loope
test
mov
ret
mov
into
popa
outsl
out
jp
and
in
sbbb
fsubrs
sbb
test
push
pop
imul
ljmp
or
push
lret
cmc
add
sub
or
xor
fisubs
dec
mov
xor
jl
mov
stos
cmp
faddl
inc
and
pop
out
push
cmp
scas
aas
or
pushf
out
pop
inc
repnz
push
popa
xchg
scas
pop
and
push
mov
and
cld
jns
aaa
lcall
scas
int3
ret
lods
dec
cmp
or
orl
mov
push
mov
in
arpl
maskmovq
je
dec
imul
mov
loop
movsl
ret
cmp
dec
fcomip
iret
scas
and
bound
or
sub
adc
sahf
icebp
adc
xchg
or
push
lods
les
sub
and
xchg
jb
adc
pop
push
fisttpl
mov
xchg
iret
pop
or
loope
out
adc
and
jp
lret
scas
or
dec
sub
stos
dec
movsl
loop
dec
mov
and
inc
cmpsl
mov
scas
inc
in
and
lods
enter
pushf
fadds
insb
jae
xchg
mov
dec
cwtl
out
roll
lret
and
in
jns
xor
mov
dec
lock
sub
cmpsb
out
cmpsb
push
cltd
xchg
jnp
ficompl
mov
imul
add
loop
loopne
push
push
add
inc
cld
pop
enter
and
cmpsl
mov
ficompl
insb
out
out
repnz
cld
lret
mov
arpl
addr16
jmp
cmp
inc
mov
jmp
sub
fmulp
in
pop
insb
dec
push
mov
push
testl
push
dec
xchg
mov
mov
int3
stos
or
std
adc
loop
bound
or
lret
aas
movsl
xor
xchg
xor
inc
test
es
pusha
mov
aam
fistl
pop
pop
or
pushf
imul
cltd
pop
sahf
ljmp
mov
fdivp
mov
idiv
adc
jne
mov
pop
push
mov
pop
dec
cmp
gs
loop
pop
les
add
pop
sbb
pushf
jns
jmp
push
repz
jnp
push
sbb
gs
shrb
shlb
test
out
xor
mov
xchg
pop
pop
or
inc
in
sbb
lcall
jg
ret
and
ds
ljmp
mov
daa
leave
cmpsl
fcomps
ss
push
mov
mov
mov
aas
outsl
loope
aas
inc
mov
punpcklwd
out
cmpsl
mov
mov
and
xor
iret
jnp
mov
jl
pop
sub
mov
aaa
in
pop
pushf
cmp
dec
cld
icebp
int3
sub
mov
lret
inc
rol
add
pop
sbb
clc
push
incl
jae
mov
jae
out
pop
loopne
jo
push
fadds
mul
loop
inc
sbbl
xchg
pop
imul
outsb
jne
pop
jle
das
mov
mov
mov
or
lea
and
std
mov
out
fsts
ret
mov
popf
data16
pop
pop
test
bound
jbe
test
dec
ss
int
mov
cli
cmp
mov
xor
or
cmp
pusha
das
or
xor
daa
cmp
or
adc
das
repnz
test
repnz
xor
adc
xor
jle
test
xchg
outsl
enter
push
or
sub
or
lods
inc
into
aas
push
sti
lock
fs
xchg
pop
lock
ja
les
imul
inc
les
lea
fisubs
adc
fsubs
insb
cmp
mov
lods
mov
fwait
negl
adc
ficoml
mov
mov
jo
lcall
mov
mov
cwtl
mov
or
cmp
movsb
xlat
and
lcall
js
push
popf
push
cmp
jbe
xchg
lcall
in
call
adc
sub
mov
mov
sbb
cld
push
lock
imul
and
mov
nop
cmp
lea
inc
popa
mov
xlat
mov
inc
rolb
and
pop
inc
pop
add
sbb
add
repnz
clc
add
test
cmp
lds
sbb
mov
xchg
orb
cmp
or
or
ror
movsb
xchg
in
outsl
loop
repz
out
test
sbb
xlat
sti
adc
mov
add
push
imul
lcall
movsl
stos
sub
xchg
mov
inc
mov
lock
ljmp
inc
movsb
daa
mov
xor
mov
mov
jg
in
gs
xchg
fwait
mov
lahf
cmp
inc
and
mov
xchg
gs
outsb
and
lds
ss
xchg
lret
ljmp
scas
icebp
dec
lahf
dec
or
pop
das
in
mov
xor
push
mov
adc
jmp
and
addr16
or
adc
imul
xchg
insb
inc
push
loop
jg
stc
inc
fucomi
aas
out
lret
loopne
pop
pop
nop
lcall
loope
pushf
sbb
mov
xchg
or
loope
insl
popa
cmp
enter
ljmp
lods
dec
imul
fmull
sbb
adc
jmp
aas
mov
pop
jns
mov
mov
and
xchg
jnp
mov
xchg
push
xchg
sahf
test
add
ljmp
jbe
or
incw
push
xorl
mov
sub
nop
jb
sbb
xchg
outsl
mov
add
imul
and
jnp
cmp
sbb
arpl
add
or
scas
aaa
call
push
jne
adc
lea
ja
inc
aas
aaa
out
int
test
cmp
dec
fisubrs
gs
lods
xchg
and
dec
enter
jge
xchg
sub
add
cli
shlb
arpl
mov
dec
rolb
fsubl
push
aam
shlb
mov
or
aaa
in
rclb
xor
ja
cmpl
loop
fucom
adc
jnp
lods
push
test
mov
mov
jae
inc
shrl
xor
enter
mov
xor
les
enter
push
cwtl
and
imul
testb
pop
rcr
inc
js
lock
fcomi
and
mov
and
mov
addr16
rorb
cltd
out
fistpll
sbb
stos
data16
inc
addl
adc
cwtl
push
push
arpl
cs
add
ds
dec
ja
push
clc
clc
mov
and
cmp
imul
jno
ret
mov
clc
cmpsb
ficomps
fwait
sbb
shlb
lret
fsubr
pusha
jne
inc
adc
cmp
je
insb
popf
negb
cltd
add
fldt
dec
lods
ss
cmc
jne
test
mov
scas
push
xchg
in
test
and
std
xchg
arpl
mov
mov
sbb
mov
xor
pop
or
mov
insb
pop
xchg
stos
pusha
cs
xchg
xchg
cmp
dec
mov
in
jbe
cmp
jg
xchg
xchg
out
fildll
mov
sub
mov
push
mov
jno
or
push
mov
sub
ds
jae
enter
add
loope
out
cmpsb
dec
push
push
std
adc
popa
jl
ficoms
or
jl
jne
int3
sbb
cltd
mov
push
fldenv
daa
push
hlt
jns
cmpsl
jns
and
arpl
pop
lea
push
adc
mov
cmp
cmp
and
shl
pop
jnp
inc
fs
jne
or
repnz
inc
in
rclb
int3
in
sbb
xor
cmp
xchg
xorb
mov
inc
mov
inc
xchg
and
pop
pop
xor
inc
rcrl
outsb
add
outsb
xor
jnp
out
mov
push
jp
std
sti
insl
ljmp
std
mov
cmp
add
cmp
xor
mov
out
nop
inc
jbe
outsb
shll
push
cwtl
lds
fwait
in
xchg
std
jnp
xchg
adc
sbb
bound
pop
pushl
clc
or
inc
xchg
ja
sub
push
fs
shll
shll
scas
movsl
sti
jmp
in
adc
cli
stos
imul
test
test
jp
pop
sbb
outsb
stos
or
inc
pop
test
cmpsb
cmc
imul
rorl
jae,pn
fxch
out
adc
pop
or
aam
pop
push
fidivrs
rorb
add
dec
sar
cmc
dec
ljmp
lahf
lret
jg
jae
cld
push
in
sti
cmp
and
shll
jge
lods
mov
ds
mov
jb
xor
inc
test
add
je
ret
mov
cmpsb
hlt
adcb
jbe
inc
andb
fidivl
cmpsb
out
push
and
iret
dec
pmaxub
dec
inc
rcrl
es
cmp
mov
imul
pop
int3
mov
sub
cmp
dec
shll
ss
in
test
in
lds
or
rcrb
rorb
xchg
lahf
and
adcb
xchg
sti
or
xchg
fst
addl
pop
in
push
cs
xor
mov
addl
out
jne
inc
hlt
adc
xchg
and
outsb
jl
sub
pop
mov
ret
sahf
pop
xor
inc
sti
xor
xchg
ds
inc
js
jb
dec
adc
push
mov
movsl
scas
pop
es
cmc
in
or
add
add
mov
sbb
mov
jnp
inc
jl
sub
lds
jle
aam
loope
jg
cld
es
or
mov
mov
shlb
or
jbe
mov
sub
adc
loope
mov
js
and
mov
sub
in
stc
and
mov
ret
xchg
ljmp
daa
call
jg
pop
aas
popa
adc
test
jno
cmpsl
jmp
add
imul
lcall
addr16
sbb
dec
std
insl
mov
cs
pop
les
mov
nop
cmpl
cmpsl
es
dec
leave
hlt
gs
pop
sbb
inc
cmpsb
jns
in
lock
aam
xchg
xchg
mov
sbb
xchg
enter
arpl
inc
mov
mov
mulb
pop
push
xchg
jno
sarl
cmpsl
stc
xor
je
jmp
mov
cld
sarl
testb
xor
xor
out
pop
cld
jne
mov
test
cmp
or
test
daa
jo
sub
mov
cmp
jb
clc
sub
arpl
xor
push
out
and
add
sbb
push
sub
dec
dec
cmpsb
scas
addr16
or
mov
ret
jg
sbb
cmc
repz
sbb
inc
and
decl
push
xor
sbb
pop
or
push
xchg
xor
inc
ljmp
push
lret
popf
lea
xchg
jb
mov
push
cmpb
mov
inc
cli
les
sub
mov
adc
outsl
push
loopne
outsl
sarb
dec
movsl
cmpsl
loopne
mov
mov
cmpl
mov
lods
mov
arpl
jae
mov
clc
push
or
jg
insl
test
test
mov
or
out
inc
lret
cmp
pop
xchg
insl
xchg
subl
insl
leave
fisttps
mov
cmp
sbb
or
sub
mov
test
mov
fists
data16
aam
out
movsb
adc
lret
jp
xchg
stos
test
or
xor
push
xor
jmp
mov
scas
pop
test
mov
leave
push
cmp
dec
inc
mov
loope
rcl
cld
aad
adc
testl
cli
hlt
inc
stos
mov
mov
cmp
sub
jae
shr
test
jmp
adc
and
mov
xor
fld
cmp
popa
mov
or
fistpll
popf
jbe
xor
xor
mov
push
mov
hlt
imul
loop
push
push
cmp
pop
stos
lcall
mov
lock
mov
lret
stos
adcb
mov
loope
cld
xchg
dec
cmc
push
out
movsl
int
out
xchg
inc
mov
push
jno
lret
jo
mov
inc
xchg
cmp
inc
adc
pop
inc
insl
xchg
push
sbb
in
mov
add
call
lds
test
xorl
or
push
xor
pop
shrb
cli
js
pusha
aad
and
mov
sbb
sub
sbb
jne
jae
or
push
adc
subb
or
sbb
repnz
inc
jecxz
mov
mov
jbe
popa
mov
dec
mov
fsubp
fucomip
jns
fdivl
xchg
mov
cltd
nop
adc
cli
das
shlb
or
xor
insb
cmpsl
push
stc
pop
and
add
sub
cwtl
add
mov
int3
gs
dec
aad
and
mov
pushf
fcoml
adc
scas
cmpsb
xchg
pop
stos
push
in
out
ds
jl
inc
lds
or
cmp
rclb
sub
nop
sti
inc
jmp
aas
sbb
push
into
push
inc
in
pop
and
sbb
xchg
or
insb
in
pop
xor
and
push
lahf
test
push
lea
xor
xchg
xor
jae
cmpsl
add
cmp
out
lcall
push
leave
mov
cmpsb
xorb
mov
jnp
enter
sub
stos
lods
sbb
jmp
inc
in
or
mov
fwait
inc
jne
sahf
adc
lret
push
aad
into
pop
xchg
popa
inc
jno
mov
or
jl
in
outsb
adc
aad
and
push
push
aas
jmp
push
ficomps
dec
lret
andb
lret
aaa
push
sub
pusha
imul
xchg
daa
out
ljmp
es
jge
pop
mov
sub
iret
pop
pop
dec
xorl
xor
push
sbb
incb
es
cmpsb
push
xlat
jmp
pop
dec
add
andl
fs
and
xchg
cmp
inc
stc
jg
push
add
lods
sbbl
mov
inc
icebp
lea
dec
mov
pop
scas
pusha
cmp
xchg
mov
fnstenv
push
ds
out
clc
inc
icebp
cmc
popa
clc
jno
pushf
or
and
sub
mov
test
add
dec
cmp
insb
mov
mov
rcl
or
mov
adc
in
outsb
pop
cs
pushf
lods
adc
call
pusha
ds
xor
pop
dec
lret
mov
or
xor
mov
movsl
cltd
std
ret
inc
jnp
test
dec
pop
test
cmp
in
inc
push
arpl
outsb
xor
add
popa
add
test
nop
aaa
mov
inc
mov
outsl
pop
shrl
mov
xchg
aaa
ljmp
xchg
cmp
sahf
pushl
int
cwtl
or
les
fcoms
rol
stos
int3
sub
mov
xor
adc
popa
fwait
xchg
sti
mov
jbe
and
xchg
loopne
sti
add
lcall
jno
lahf
pop
pop
test
popf
and
inc
aas
leave
sub
dec
enter
jno
jmp
dec
and
mov
sub
xlat
xchg
aaa
xchg
ret
cmpsb
push
shl
inc
lret
pop
mov
or
repnz
stos
adc
push
mov
xor
dec
xor
xor
dec
ljmp
jnp
sub
data16
sbb
xor
and
pusha
mov
fwait
in
push
xchg
cmp
cmpsl
inc
mov
in
scas
jnp
inc
push
clc
push
cmp
add
sbb
in
adc
incb
xor
pop
fwait
repz
or
repnz
insl
les
xchg
jl
ja
push
or
cs
jne
push
mov
jnp
xor
or
frstor
jg
sbb
aad
subl
les
sbb
sbbb
rorb
adc
cmp
lcall
xor
jbe
sub
sahf
ja
pop
aaa
mov
sub
adc
dec
dec
scas
inc
dec
or
gs
les
leave
mov
and
rol
subl
jp
cmp
test
sahf
movsb
push
pop
scas
pop
xchg
cmp
sbb
fnstcw
dec
mov
pushf
mov
dec
shll
mov
pop
fisubs
push
cmc
shll
dec
pop
jle
inc
and
arpl
push
pusha
rorb
je
cmp
sbb
loope
pop
jp
fisubrl
mov
xchg
jb
or
ficomps
adc
test
pop
adc
adcb
xlat
insl
jl
shrl
cwtl
mov
cltd
testl
rclb
iret
dec
fwait
sub
sbb
dec
cmp
popa
icebp
subl
mov
out
dec
iret
arpl
mov
push
jbe
mov
jo
inc
leave
mov
arpl
inc
std
adc
icebp
cmp
dec
xchg
ret
arpl
or
repnz
dec
cli
sub
dec
scas
pop
repz
xor
xor
or
dec
hlt
fs
lock
xchg
insl
mov
adc
testl
xchg
add
sbb
inc
insb
test
dec
mov
sub
xchg
icebp
dec
mov
xchg
push
out
adc
shrl
repz
fcoms
shll
mov
mov
int
in
push
scas
loopne
and
jecxz
push
inc
in
out
push
das
dec
mov
jecxz
dec
scas
leave
sbb
adc
ljmp
cmc
xchg
mov
sbbl
test
cmp
xlat
lahf
shlb
rol
add
cmp
mov
les
sbb
fwait
stos
xor
and
mov
out
pop
cwtl
sbb
imul
aas
xor
into
jo
inc
sbb
sub
push
fnstcw
sub
inc
push
nop
fiaddl
ret
in
sbb
cmpsb
out
enter
out
jmp
mov
shll
jb
add
and
push
cwtl
data16
pop
lods
sbb
cltd
mov
nop
jge
enter
mov
mov
mov
pop
sbb
fisubl
aad
test
jo
cmp
xchg
and
jge
cwtl
subb
xchg
pop
xchg
bound
fs
dec
fxch
into
cmpsl
dec
out
fdivr
cmp
jno
in
xchg
mov
jae
and
push
inc
adc
test
dec
cmp
inc
or
jecxz
cs
xlat
aaa
daa
sub
push
repz
sub
and
aas
insl
inc
shr
pop
iret
icebp
adc
cltd
jmp
jne
insb
dec
mov
jnp
enter
bound
testl
jp
add
sub
jmp
andl
mov
pushf
pop
call
mov
cmp
gs
and
jmp
inc
fimull
repz
in
sbb
xchg
lcall
push
sub
jns
pusha
icebp
cli
push
inc
jae
aad
mov
cltd
test
lods
ret
push
inc
stos
addr16
mov
mov
les
jnp
cmpsb
sub
ffreep
aad
jne
inc
addr16
out
pop
push
inc
sbb
orl
jp
jg
cmp
or
sbb
xor
jg
leave
sbb
dec
and
cltd
mov
inc
and
mov
pop
push
out
xchg
sbb
dec
pop
mov
out
clc
or
icebp
out
loop
icebp
pop
lcall
or
sbb
cmpsl
xor
arpl
sahf
add
inc
ss
dec
push
pop
mov
fildll
push
cs
xor
pop
fs
flds
lock
lahf
xchg
dec
btc
loopne
sbb
mov
idivb
or
inc
sub
stos
sbb
jmp
push
mov
rcrb
or
mov
sbb
xchg
imul
mov
and
sub
repz
int3
fmul
mov
and
jecxz
jmp
lods
push
pop
cwtl
stc
pop
push
psubb
push
pop
lea
mov
add
addl
std
dec
mov
dec
and
sub
les
xor
out
cmp
or
and
inc
mov
in
jp
movsl
mov
movsb
mov
pop
add
sbb
pop
and
ljmp
jecxz
xchg
daa
sahf
ljmp
adc
inc
ja
inc
shlb
sub
mov
add
sub
and
mov
in
adc
sbb
mov
jb
and
js
adc
cmpl
mov
xchg
pop
pop
daa
pop
es
mov
lock
mov
dec
and
mov
mov
sub
jae
mov
mov
iret
push
inc
jb
add
shrb
scas
mov
mov
lret
inc
mov
inc
clc
test
hlt
mov
lock
mov
push
addr16
and
dec
data16
push
dec
adc
or
jmp
push
xor
stc
mov
jge
pushf
mov
or
inc
push
sub
aaa
jo
inc
clc
rcr
pop
adc
push
and
and
out
mov
repz
aad
cmp
das
sbb
push
xlat
xor
fdivs
into
ss
in
cmp
inc
cld
adc
mov
adc
mov
lcall
aas
and
js
movsl
push
jp
jne
cmp
xlat
aas
roll
xlat
dec
lahf
or
push
lcall
xchg
in
mov
push
and
das
xor
loop
aad
cmpsl
push
mov
xchg
test
int3
fsubs
jnp
and
add
pop
xchg
cmp
jecxz
nop
orl
cltd
sbb
dec
movsl
pop
cmc
mulb
rep
sbb
lret
das
cld
and
xchg
data16
push
sbb
sbb
test
popa
dec
push
stos
fdivrp
jb
jns
add
ja
mov
pop
movsl
xchg
xor
dec
roll
add
out
inc
pop
movsl
subl
xchg
dec
fldcw
push
out
xchg
imul
arpl
stos
das
inc
dec
dec
mov
mov
sbb
cmp
mov
mov
mov
arpl
jecxz
movsb
jbe
pop
sub
dec
lods
popf
insb
add
es
mov
mov
in
mov
rcpps
mov
sti
ret
cmp
mov
rep
mov
stos
aad
dec
cmp
or
pop
mov
pop
cmpsb
stos
and
icebp
test
xchg
lahf
pop
pop
mulb
mov
mov
push
ficompl
jbe
popf
or
jp
cwtl
sahf
or
das
gs
sbb
jl
xlat
xor
jle
push
icebp
and
popa
dec
icebp
xchg
add
repnz
jmp
pop
js
std
mov
push
mov
inc
sub
cmp
push
mov
pop
dec
mov
sti
adc
mov
mov
adc
jp
fildll
es
pop
jbe
push
movsb
stos
dec
adc
inc
mov
or
push
in
movsb
aaa
push
add
cwtl
arpl
jp
and
frstor
scas
icebp
xchg
pop
dec
inc
lahf
adc
sbb
jae
mov
fcoms
sub
cmp
insb
rorl
fcmovne
shrl
popl
adc
std
jns
ret
popa
mov
bndstx
cmpsb
push
stos
sub
test
roll
mov
adc
dec
pop
push
aad
dec
cli
jne
adcl
xchg
and
cli
mov
mov
and
loopne
xchg
sub
push
mov
dec
enter
mov
adcb
arpl
ljmp
cmp
rcll
mov
int
cmp
fs
mov
orb
fdivr
insl
dec
xor
mov
sbb
inc
outsl
adc
arpl
pop
mov
movsl
sahf
and
xchg
ret
lods
adc
adc
lret
xchg
rcll
sbb
and
test
add
sbb
and
cld
es
push
mov
mov
jo
rorl
icebp
jmp
sbbl
cmp
mov
sbb
jb
dec
mov
inc
outsb
mov
pop
and
add
xchg
mov
dec
int3
and
xor
rcrl
lods
pop
xor
cmp
scas
cltd
mov
inc
pusha
jne
cmpb
jae
bound
adc
pop
mov
rclb
or
filds
lahf
mov
ss
adcb
int
xchg
movsb
jge
cmpsb
outsl
and
mov
jno
dec
lods
xrelease
or
cmp
arpl
ret
loopne
dec
aaa
mov
pusha
outsl
mov
daa
jbe
pushf
movsb
test
push
sbb
mov
pop
jo
test
jp
inc
enter
leave
mov
div
dec
mov
and
or
push
cld
test
ret
xchg
and
mov
jecxz
mov
ret
inc
mov
dec
stos
mov
add
adc
cmp
push
push
xchg
xchg
rcrb
jge,pn
test
push
dec
scas
daa
xchg
xchg
and
scas
lock
xor
aad
fs
and
dec
test
add
mov
out
mov
jmp
pusha
add
jbe
sub
sub
lcall
loop
aam
and
dec
and
int
popa
pop
sub
popa
mov
mov
movsb
push
pop
mov
movsb
nop
iret
pop
sbb
xchg
pusha
push
pop
ret
pop
test
jp
daa
aaa
test
enter
fisubrs
or
sbb
data16
nop
or
ret
hlt
mov
mov
sti
jno
push
jo
mov
mov
jnp
mov
mov
cli
pop
and
aam
sub
xchg
not
mov
dec
dec
sti
iret
cmpsl
pop
sub
and
ds
push
aad
adc
clc
mov
jns
int3
sbb
std
jno
adc
jge
sub
adc
mov
and
lea
jno
test
and
inc
sbb
sub
loop
in
test
lds
mov
scas
orl
loope
clc
ss
adc
es
aaa
into
pop
sub
out
fistps
pop
fidivrs
xchg
sbb
cltd
dec
dec
add
das
sub
gs
jl
out
jp
or
in
and
push
mov
and
insb
or
mov
in
mov
or
add
aam
push
pop
pop
jnp
or
pop
int3
mov
jecxz
rorl
xchg
pop
push
cmpsb
es
pop
stc
push
insb
xor
xor
shll
inc
mov
sarl
lods
or
mov
lcall
mov
sahf
mov
sub
out
and
adc
loope
ret
xor
imul
sub
sub
dec
add
mov
pop
dec
cmp
jne
xchg
stos
int
push
leave
mov
cltd
dec
into
sub
add
push
xchg
ljmp
out
lods
loop
aad
dec
push
jmp
rcr
cmp
stos
xchg
jnp
jno
cmp
add
inc
inc
repnz
fmul
xor
sub
adc
cmpsb
xchg
push
xchg
dec
pushf
nop
xchg
stc
ds
cmc
scas
push
div
pop
jl
fyl2x
sbb
popa
imul
mov
push
inc
adc
cs
loop
xor
adc
daa
push
jno
movq
ja
push
lahf
cmp
dec
pop
mov
ret
push
fwait
ret
fisubs
push
inc
into
int3
rcrl
push
pop
outsl
dec
ret
ds
inc
push
push
dec
scas
popf
cwtl
jp
push
lds
out
pop
std
stos
lcall
and
mov
lods
lods
dec
xor
pop
outsb
add
icebp
iret
add
add
sub
decl
popf
cmp
call
push
outsb
mov
and
push
fsubs
add
jge
sub
or
das
in
mov
sub
dec
nop
nop
xlat
daa
cmpb
cld
outsb
test
imul
clc
mov
lret
add
std
adc
cwtl
loope
aaa
jg
push
fdivrs
xor
and
jae
push
adc
mov
jp
pop
rcrb
jns
ret
pusha
or
cmpsb
es
mov
sbb
and
sahf
mov
xorps
mov
sar
divl
sarb
mov
aas
mov
out
fcoms
sbb
test
adc
jb
pop
arpl
cvtdq2ps
repnz
dec
adc
sahf
cmp
ret
adc
jp
add
fisubrl
mov
dec
pop
scas
inc
xchg
je
push
es
jo
fcoms
mov
fstps
jg
aaa
fidivrl
sub
enter
insl
add
adc
or
nop
add
jg
daa
inc
sub
sub
xor
cld
inc
lcall
stos
into
push
out
pop
popf
fstpl
pop
clc
mov
xchg
mov
icebp
lods
fnstcw
and
pop
dec
xchg
add
pop
in
mov
aad
out
add
lret
inc
jo
add
push
rcrb
sbb
pop
pop
jae
and
loope
repnz
pusha
idiv
cltd
in
lahf
push
push
mov
lea
xor
mov
cli
mov
xor
jp
test
cwtd
into
sub
push
dec
jmp
sarl
daa
movsb
stos
xchg
push
movsb
and
add
add
dec
shrl
xor
js
push
sub
xor
aam
cld
add
inc
shll
sub
xor
leave
jo
and
arpl
push
pop
pop
int
jecxz
lahf
outsl
jle
aam
je
xorl
repz
stc
loop
and
cmp
add
lret
cs
pop
xchg
sarb
mov
shrl
test
mov
jb
cmp
leave
adc
js
mov
sub
or
cmpsb
add
cltd
or
rcrb
add
into
sbb
mov
fs
mov
pop
out
hlt
inc
lahf
pop
inc
jno
add
jb
jno
pop
cltd
lret
scas
mov
rcrl
mov
pusha
xor
push
cmp
out
ret
sub
push
imull
mov
sbbb
cmp
xchg
shll
mov
nop
stos
stc
scas
push
frstor
jb
xor
stc
sbb
mov
cli
dec
add
test
cwtl
pop
lock
sub
test
divl
mov
xchg
add
inc
jns
add
out
fbstp
mov
mov
mov
test
out
popa
sbb
imul
jmp
sbb
fldt
ja
jle
stos
mov
mov
pop
outsl
gs
push
rcrb
jne
je
repnz
scas
and
orb
mov
pop
js
cli
add
mov
jmp
adc
sub
imul
and
inc
rcr
add
jl
out
pusha
movb
pop
pop
shll
fidivs
pop
int
sub
test
cld
outsb
cmp
icebp
inc
pushf
add
adc
push
mov
mov
pop
mov
cmc
pop
mov
mov
mov
xchg
test
pushf
and
jp
int3
movsl
mov
iret
xchg
stos
or
dec
cmpsl
fistpll
repnz
mov
in
lds
inc
movsl
mov
inc
mov
pop
or
fcompl
mov
fwait
jns
fwait
mov
stos
out
divb
or
inc
leave
adc
mov
or
lods
incb
sub
rclb
sarb
mov
jmp
sub
movl
testb
fldcw
mov
sub
dec
loope
mov
aas
sub
push
dec
testl
pop
mov
sbb
mov
sbb
subl
adc
xchg
vpunpcklqdq
sbb
and
imul
into
call
cltd
push
lock
jbe
xor
mov
add
loopne
movsl
pop
sub
call
xor
jl
mov
jle
ljmp
sbb
js
aas
mov
push
shlb
jbe
sbb
rcl
adc
icebp
out
daa
insb
or
aam
xor
repnz
fdivs
add
clc
inc
fcmovnbe
mov
lahf
jno
xchg
ljmp
cmpsl
push
fldl
push
es
lcall
xchg
ret
adc
inc
stc
jle
das
xchg
and
push
push
adc
sub
fildl
loope
mov
rcrb
or
repnz
dec
mov
test
add
cs
cmc
cmp
mov
push
pop
push
mov
jne
lret
jg
in
lahf
leave
or
dec
jno
jl
xor
push
or
or
std
xchg
add
cmc
fdivrs
and
or
gs
mov
cmc
jb
jl
dec
filds
sbb
fisttpll
mov
mov
je
sbb
test
push
jg
cmpsl
push
scas
mov
adc
mov
outsb
lods
jo
test
jnp
add
clc
into
sbb
icebp
mov
or
cld
ss
add
xor
mov
pop
push
add
lea
xchg
sbb
sbb
pop
mov
insb
add
int3
enter
and
and
mov
mov
xchg
pop
push
gs
adc
add
push
jbe
push
sub
lret
pop
push
push
pop
int
jle
out
jo
aas
cmp
rorb
adc
sbb
sti
jmp
adc
mov
or
loopne
xor
out
sbb
sbb
jae
dec
repz
loopne
cmp
test
data16
sahf
cmpl
mov
out
cmp
sbb
mov
stc
mov
mov
fdivl
and
xor
mov
mov
les
ret
jo
push
xor
lret
and
dec
into
cli
mov
or
lret
pop
dec
mov
mov
jne
mov
adc
mov
out
xor
int3
mov
mov
imul
loopne
push
les
orb
cltd
xchg
and
cli
adc
adc
add
sub
in
movsb
lock
or
cmp
push
push
mov
xchg
fdiv
adc
rcrb
cmpsl
iret
ja
add
int
pop
js
inc
jnp
add
fmuls
clc
mov
lods
adc
dec
cmc
mov
inc
xchg
pop
push
imul
sbb
test
xchg
mov
jnp
psrad
rcrl
xchg
stc
pop
incb
add
xchg
mov
or
stos
xchg
sbb
repnz
sbb
xchg
outsb
mov
mov
sti
fcomps
je
jns
stos
push
mov
into
cmp
test
jmp
mov
sbb
jp
movb
sti
cwtl
xchg
or
cmp
pop
in
std
out
mov
test
outsl
test
inc
sbb
mov
arpl
dec
fisttpl
mov
scas
jno
jle
and
adc
push
shrd
loop
cltd
ret
and
fmul
pop
sub
lds
out
sub
xchg
sbb
push
push
addl
fcomps
push
daa
inc
sub
push
xor
cmp
sbb
ja
pop
nop
cmpsl
pop
ss
frstor
push
add
push
cwtl
cwtl
add
mov
mov
loop
xchg
mov
push
pop
push
ss
roll
xchg
sub
inc
inc
inc
imul
and
adc
pop
pop
cs
lret
mov
mov
cmp
jmp
sub
mov
mov
sub
mov
fcmove
sbb
pop
xorb
xchg
sbb
sbb
and
je
pop
xor
mov
shlb
lods
stos
fidivrs
jno
or
les
insl
loop
jo
pop
xchg
call
arpl
mov
incl
push
cli
cmp
mov
lret
push
cltd
cltd
addb
jle
bound
push
sub
mov
pusha
inc
nop
mov
inc
adc
into
lock
sub
fisttpl
push
or
add
xchg
cmp
das
jecxz
imul
ficoml
sub
and
sbb
sbb
xlat
sub
lods
push
cmp
or
mov
cmp
ss
inc
call
mov
inc
nop
adc
repz
or
add
out
ds
mov
loopne
push
lods
push
ja
in
sbb
test
ret
stos
jne
or
addr16
out
cmp
mov
mov
fists
push
rcrb
pop
add
inc
outsl
test
aas
js
stos
sbb
test
push
xchg
arpl
ret
subb
and
jo
add
or
outsl
fldcw
enter
or
push
pop
daa
or
fs
jne
xchg
fwait
sahf
aas
or
rorb
test
ja
push
xor
lock
sahf
xchg
jno
mov
adc
or
cli
add
pushf
clc
mov
xor
adc
and
faddp
ja
std
dec
and
or
push
xchg
enter
daa
and
xchg
bound
fs
mov
mov
frstor
negl
rolb
ljmp
push
mov
out
cli
lds
or
insb
sub
leave
inc
dec
fisubrs
stos
sti
sub
sub
cmp
incl
mov
jecxz
adc
inc
cmp
mov
sub
xchg
das
cmpl
arpl
leave
jg
ss
lret
mov
lcall
push
cld
lds
xchg
stc
ja
test
mov
jl
frstor
fstp
xchg
cmp
adc
mov
out
or
xchg
andl
aas
inc
test
mov
cmp
mov
mov
gs
sub
jge
jae
xor
cmpsl
rolb
test
les
cltd
or
cmp
adc
push
jb
sub
bound
rclb
dec
popf
add
dec
and
sub
int
negl
jmp
sbb
and
inc
inc
js
cmp
icebp
ds
in
inc
mov
and
pop
jge
xor
xor
cli
and
lods
xchg
imul
stos
addb
jo
js
sbb
push
push
pop
imulb
cmpsl
stos
pcmpgtd
je
pop
sahf
inc
xchg
cs
imul
sbb
je
pop
xor
jle
test
lods
push
push
cmpsl
dec
dec
fdivr
pop
and
sbb
mov
fdivrl
das
xchg
lret
je
test
mov
sbb
lcall
scas
lret
repz
push
adc
clc
jne
ljmp
adc
xchg
iret
adc
inc
xchg
out
fisttpll
cwtl
ret
outsb
repnz
sub
jmp
fs
dec
push
call
inc
imul
push
push
xor
mov
in
test
dec
test
or
and
mov
inc
dec
xor
mov
fstl
pop
mov
add
fsubl
out
in
imul
jge
std
lcall
out
or
stos
mov
inc
or
fisubl
das
push
push
fdivs
stos
addr16
dec
sbb
and
mov
fnstcw
mov
sbb
fs
xor
push
imul
sbb
push
stc
dec
cwtl
push
inc
into
leave
rcl
test
cmpsb
mov
das
add
pop
mov
push
xor
push
ljmp
xchg
out
test
cli
inc
push
jns
xor
mov
ret
imul
and
sub
mov
mov
fsave
jb
and
hlt
inc
ret
shll
mov
push
pop
scas
stos
dec
fildll
jbe
int
lds
adc
mov
mov
mov
xchg
push
sbb
mov
xchg
ret
into
mov
xor
or
clc
inc
pop
nop
jb
mov
add
test
sti
lea
sbbb
jecxz
aaa
adc
pop
ret
adc
ds
loopne
or
addr16
das
mov
arpl
pop
or
jae
xlat
adc
out
xor
xor
das
dec
lock
nop
in
cmpsl
adc
in
insb
out
in
push
movsb
lds
fstl
xchg
pop
jg
pop
repz
or
push
fdivrs
pop
or
cmp
pop
push
push
mov
cwtl
std
test
lock
mov
aad
test
fadds
jbe
pop
mov
cmp
lret
shlb
popf
stc
push
jnp
push
fwait
pop
fsubl
or
fists
cmp
lods
dec
jmp
push
popf
shl
cmp
lret
aad
push
das
mov
ljmp
in
movsl
or
fstl
lea
pop
sub
jne
or
int3
pop
inc
cmpsl
add
push
jmp
ljmp
push
dec
lea
shll
aad
lea
add
stc
aad
aaa
repz
addr16
outsb
mov
xlat
push
fdivrs
insl
ss
std
jl
in
cmpl
pop
or
pop
pushf
and
and
iret
movsl
leave
cmp
cmp
cmp
popa
mov
scas
popf
xchg
adc
rcrb
mov
mov
jge
lahf
cmp
mov
jp
mov
lahf
out
aad
xchg
add
aas
jge
fcom
push
js
div
pop
std
adc
xor
adc
pop
mov
out
nop
repnz
dec
sub
lahf
add
enter
dec
mov
fisttpl
jge
fldl
dec
call
adc
fcomp
data16
out
adc
pop
mov
push
imul
sbb
int3
hlt
dec
adc
inc
dec
pop
pop
adc
mov
add
pop
lret
shll
pop
subl
xchg
movsb
push
loop
inc
in
xor
push
mov
xor
cltd
jmp
scas
add
sub
sub
cmpsl
dec
lcall
mov
and
fwait
test
incb
imul
jb
insl
push
jp
and
sbb
addr16
ret
xor
xchg
roll
mov
fsubs
cmc
movsl
xchg
jg
add
dec
shrb
mov
push
repnz
into
or
or
push
adc
sbb
dec
sti
or
push
jo
sub
sub
fisubs
cmp
sub
jg
int
stos
sti
mov
rclb
fs
popf
xchg
das
lahf
add
and
mov
ret
inc
xor
dec
popa
aad
cmc
imul
xchg
xor
adc
and
sti
fwait
inc
dec
pop
xchg
fidivs
lahf
lods
xchg
call
jb
mov
daa
int3
adc
inc
jae
dec
jbe
inc
pop
insb
addr16
push
loope
roll
dec
shrl
inc
lcall
adc
inc
ljmp
int
adc
fistl
cmp
lods
dec
mov
lea
adc
mov
cwtl
enter
sub
or
shll
addb
lds
mov
fs
enter
std
jge
pop
out
mov
cmp
or
mov
bound
ret
add
sti
push
jp
xor
sub
or
mov
out
push
push
lret
pop
mov
rcll
mov
xchg
scas
xor
add
dec
inc
add
inc
mov
xchg
xor
inc
insl
jp
jl
xchg
cmp
pop
das
mov
mov
xor
jecxz
rcrb
imul
mov
sbb
inc
in
sbb
daa
inc
jae
push
push
inc
push
std
push
mov
rorb
xchg
cmp
test
loopne
imul
out
jmp
scas
rcrl
and
cmp
mov
mov
mov
dec
mov
fdiv
shll
cmc
out
xor
mov
sbb
mov
movsb
jb
mov
push
push
jns
sti
dec
or
aad
mov
mov
or
outsb
test
test
fstps
pop
nop
or
xchg
mov
icebp
cmp
cs
dec
aad
fwait
into
aas
mov
imul
in
stos
ds
call
xchg
lret
fdivrl
out
xchg
add
and
push
std
sti
jl
or
lods
or
dec
into
cltd
pop
cli
pop
xchg
push
and
pop
repnz
mov
icebp
xchg
lock
mov
sub
xor
out
dec
jg
cmp
shrl
roll
or
mov
dec
mov
add
xlat
mov
enter
sub
loop
xor
jmp
iret
and
rcrb
into
and
test
movsl
xor
call
or
mov
inc
aas
fwait
push
rolb
lahf
data16
bound
xor
mov
or
movsl
pusha
jae
and
pop
mov
outsl
cmp
test
push
mov
ss
add
insb
cmp
jg
int
insl
imul
sub
lock
jmp
clc
mov
mov
fwait
mov
sbb
lcall
pop
pop
push
mov
shlb
xor
mov
push
mov
and
jge
mov
dec
roll
lret
in
pop
jmp
ds
push
mov
enter
mov
inc
xor
in
jnp
sub
je
and
adc
push
mov
add
add
je
sbb
sub
mov
enter
adc
dec
pop
inc
arpl
dec
push
loopne
outsl
es
lods
fdivp
fisubrl
dec
inc
xor
scas
dec
imul
loopne
fildll
dec
pop
or
cmpl
jbe
adc
push
jp
data16
xchg
fwait
call
test
aam
adc
xor
adc
mov
test
out
xchg
in
push
testb
divl
aad
pop
out
jbe,pt
jae
fs
inc
push
push
and
xchg
int
jae
div
xor
cmpsl
pop
pusha
jmp
fstpt
dec
sbb
lods
mov
jo
jmp
cmp
inc
std
inc
sti
xchg
cmp
dec
adc
inc
xchg
pop
imul
sbb
std
test
jg
inc
or
jle
cmp
out
cmp
ljmp
movsb
dec
or
and
daa
cmpsb
push
aas
sub
shlb
js
pop
lods
adc
dec
loop
test
sub
subb
xchg
push
int3
ret
mov
scas
ss
sti
lret
xchg
pushf
in
das
sub
jmp
adc
mov
mov
or
and
mov
jge
jnp
mov
std
add
dec
fidivrl
mov
das
daa
pop
cmp
and
dec
lods
xor
popl
movsl
mov
mov
mov
out
and
xchg
inc
in
xchg
shr
mov
xchg
lcall
test
sub
and
mov
sbb
sub
cmp
dec
sbb
loopne
es
lahf
xchg
clc
xor
hlt
xlat
popa
jno
mov
and
pop
popl
add
inc
or
lods
subb
or
cld
sbb
push
incl
icebp
jp
sahf
fidivrl
mov
add
inc
sbb
sbb
loopne
jl
mov
test
fiaddl
push
mov
movsl
ffree
ja
mull
mov
push
mov
cld
fcoml
adc
mov
insl
daa
mov
in
xlat
jo,pt
sbb
sub
movsb
js
jb
cmp
pop
or
jo
mov
sbb
mov
std
pop
fcoml
pop
add
rol
and
icebp
inc
xlat
jnp
pop
out
hlt
test
mov
push
and
test
punpckldq
push
int
imul
cvtps2pd
negb
negl
mov
ljmp
jmp
int3
and
sbb
clc
arpl
repz
xchg
movsb
mov
clc
jecxz
mov
mov
mov
ds
xor
les
mov
sub
or
mov
fwait
sub
inc
cli
pop
pushf
push
icebp
div
mov
mov
test
loopne
sub
mov
mov
inc
xor
add
test
pusha
jo
jae
clc
cmpsb
push
ficompl
push
cwtl
pop
add
push
mov
add
push
dec
xchg
mov
enter
dec
cmp
jle
xor
sub
mov
lret
mov
jne
lret
clc
imul
xor
pop
call
out
data16
cltd
cld
inc
sbb
ja
mov
mov
shrb
jp
mov
scas
mov
int
dec
dec
movsl
jb
test
xchg
js
fcmovnbe
sahf
or
or
push
dec
push
dec
ret
adc
xor
xor
lret
movsb
mov
bound
inc
sbb
lds
xchg
sahf
enter
leave
xchg
adc
sbb
lods
stos
cmpsl
mov
lahf
ja
les
push
int
jb
js
cmp
or
das
pop
push
repz
inc
or
cltd
pop
xchg
sub
push
push
aaa
testb
pop
mov
hlt
scas
dec
testl
fidivl
add
je
jmp
add
push
loope
loopne
std
jo
jbe
stc
pop
cmpsb
lock
jg
fbld
addl
lds
jne
roll
das
sbb
lcall
dec
sub
popa
outsl
bound
imul
pop
outsl
jg
mov
mov
inc
int3
cmp
icebp
shll
popa
out
movsl
xchg
outsb
scas
xchg
insb
nop
cmp
in
push
mov
and
test
push
pop
mov
push
push
into
daa
movsl
inc
enter
enter
hlt
dec
lcall
movsb
fists
xlat
andl
lahf
cmp
scas
xchg
iret
inc
or
xchg
xor
aam
add
cmp
fisttps
fs
rcrb
movsl
nop
notb
stc
cmp
out
arpl
lea
rorb
lea
ret
scas
data16
mov
outsb
sub
or
add
xchg
pop
mov
pusha
cmp
roll
add
sbb
pop
cmp
xchg
pushf
or
dec
cmp
add
popl
enter
test
les
push
daa
or
mov
push
movsb
rorb
mov
repnz
stos
sub
mov
jnp
aam
push
nop
fidivrs
js
daa
inc
xor
push
jg
insl
pop
fimuls
jg
cmc
mov
or
cwtl
popa
sub
std
repnz
cli
ljmp
jecxz
enter
add
mov
jbe
xor
sahf
jb
xlat
fadds
iret
add
or
fdivr
xor
jo
in
int
dec
xchg
cmp
xor
xor
lock
mov
mov
pushf
adc
jne
adc
aas
loope
mov
add
add
ds
js
cs
push
jp
mov
xchg
ret
movsl
push
dec
inc
pop
fucom
test
pop
add
ja
and
shlb
fwait
es
inc
jmp
and
imul
cmp
pop
xchg
test
loopne
in
push
rorl
sub
cmp
inc
mov
jg
sub
pop
sub
popa
repnz
jle
push
add
shll
lods
enter
lds
mov
xchg
cmp
inc
aam
sbb
call
mov
bound
push
xchg
popf
xor
cli
mov
sub
outsb
fistpl
adc
jo
sub
or
in
jbe
popa
push
movsb
xor
int
cmpsb
push
push
rol
inc
je
mov
sbbl
sub
inc
sub
test
mov
jns
andl
dec
es
aas
push
icebp
xchg
ds
fistpl
popa
cmp
shll
dec
inc
clc
test
adc
dec
adc
add
lahf
sahf
ds
int
sbb
popf
jge
xchg
leave
inc
hlt
dec
add
insb
cmp
leave
out
in
lock
movsl
in
mov
inc
xchg
mov
loop
adcl
add
push
es
xor
cli
pop
dec
mov
ljmp
inc
xchg
pop
push
lods
jecxz
dec
test
sub
or
cld
shrl
mov
fsubs
ret
call
mov
push
jno
lret
mov
and
sub
bound
ljmp
shr
in
push
rolb
out
push
repnz
cmp
add
mov
dec
xchg
roll
push
pop
ficoml
or
cmc
leave
lds
jmp
out
xor
fs
stc
bound
fwait
imul
ror
je
js
jmp
pop
fidivl
cmp
arpl
and
loop
mov
xor
or
rcrb
mov
test
ds
or
jp
cmp
outsb
adc
xchg
repz
fs
pop
loop
imul
stos
push
out
xor
loop
push
cmp
jb
mov
into
xchg
push
testb
movsl
dec
daa
aad
push
dec
xchg
out
into
sub
jb
cmpsl
popa
xchg
bound
aam
loope
popa
mov
add
gs
mov
add
cmp
dec
mov
xor
lcall
cmp
sbb
adc
arpl
mov
outsb
sahf
mov
aas
ljmp
and
mov
adc
or
jle
mov
fsts
inc
pop
cmp
mov
dec
xor
addl
enter
scas
xchg
movb
jb
mov
mov
push
mov
test
push
pop
lret
cmp
mov
mov
fbstp
jge
jmp
adc
mov
adc
mov
int3
sbb
sub
out
cmp
popa
and
cwtl
aad
icebp
mov
data16
int3
push
pop
jle
shrb
sbb
mov
in
inc
in
popa
int
fdivl
add
mov
cli
cmpsl
subb
fidivrs
lret
push
pop
jb
loopne
dec
in
add
in
mov
push
and
dec
in
loop
dec
add
loope
inc
sahf
mov
add
jg
aam
shl
xor
xchg
mov
xchg
add
mov
repz
sub
or
cld
aad
mov
outsl
sub
jecxz
mov
cmpsl
popf
pop
bound
pop
leave
lods
pop
push
fnstcw
mov
and
loop
mov
daa
xchg
loop
iret
idivb
fsts
ja
inc
loopne
js
sub
xor
cld
pushf
jbe
mov
popf
pop
dec
dec
sbb
je
mov
or
cmpsb
mov
pop
mov
cmpsl
xchg
dec
stos
ljmp
push
orb
jmp
xor
scas
sbb
push
icebp
dec
int
jne
add
mov
xor
push
out
test
mov
pop
or
mov
ret
jo
andl
lods
mov
sub
lret
or
repnz
xchg
lahf
or
push
nop
push
outsl
in
loop
inc
aad
es
mov
xor
mov
pop
mov
dec
imul
cmp
jmp
outsb
ljmp
and
dec
mov
iret
pop
push
outsb
hlt
inc
ss
cmp
inc
xchg
ja
pmulhuw
nop
cmp
inc
std
das
jmp
fistpll
xchg
scas
pop
das
daa
push
dec
stc
outsb
xor
jl
lahf
popa
mov
and
sbb
xchg
aaa
aaa
push
movsl
sbb
sub
insl
jp
mov
test
cmp
std
movsl
je
fwait
jo
mov
in
rcrl
outsb
scas
push
lods
mov
pop
and
sub
mov
out
cmp
cmpsb
rcll
in
clc
pop
adc
lahf
movsb
sub
mov
jno
sub
push
test
lahf
or
xor
pop
jge
jne
in
in
or
jmp
or
jl
xchg
ret
push
xor
insb
fs
xchg
jae
scas
ljmp
daa
push
xchg
sarb
mov
adc
movsb
adc
adcb
adcb
test
xor
sbb
push
push
mov
push
inc
cltd
mov
adc
dec
insl
arpl
xchg
mov
sbb
in
jb
sbb
push
test
shl
dec
fmulp
fs
cmp
jmp
scas
cmp
push
popa
add
mov
add
sub
call
pop
pop
xchg
xchg
pusha
data16
jns
scas
mov
mov
xlat
mov
addl
push
add
sbb
and
out
push
movl
push
xorb
es
fsub
pop
adc
out
inc
fsubr
xor
jg
pusha
add
dec
movsb
jge
mov
iret
or
loope
add
aas
or
nop
push
dec
mov
je
sti
xor
ret
mov
mov
movsl
xor
scas
cmp
pop
lcall
rol
pop
cmc
jl
mov
int3
icebp
into
stos
mov
test
inc
test
popf
jge
imul
cmp
into
push
cmp
movsb
lock
daa
and
fisubs
stos
lret
xor
jge
cmp
test
dec
adc
sarb
sbb
aaa
call
ret
push
fdivrl
mov
pop
adc
icebp
cltd
pop
mov
sbb
inc
je
sahf
daa
aaa
lds
push
sub
lea
inc
sbb
mov
or
cli
push
add
lahf
sub
aam
sub
pop
sbb
in
cmpsl
jg
sti
repnz
xor
or
js
dec
mov
cmpsl
mov
in
or
hlt
scas
jmp
adc
add
test
shll
movsb
jecxz
jecxz
aaa
sbb
lock
cltd
inc
jne
sarb
gs
lret
hlt
lcall
loop
xchg
movsb
movsl
stc
push
jno
jl
dec
ss
fidivl
sbb
pop
xor
xor
ljmp
mov
dec
movsb
arpl
in
jp
imul
imul
arpl
cli
inc
imull
mov
sub
frstor
add
in
nop
xchg
lods
loopne
jg
cltd
test
clc
xchg
mov
mov
cmc
repnz
scas
mov
cmp
cmp
cmp
mov
jl
adc
mov
dec
xchg
add
push
cmp
sub
repz
shll
adc
cmp
mov
sahf
mov
cli
xchg
dec
push
idivb
fmul
enter
push
xor
aaa
fistpll
inc
xchg
jbe
jge
je
and
notl
stos
inc
jecxz
mov
lret
sbb
push
or
nop
add
jns
outsb
sahf
insl
in
push
jo
jbe
adc
aas
mov
or
aaa
in
sbb
and
xchg
add
popf
cmpsl
in
cwtl
cmpsl
popa
xor
icebp
in
iret
movsb
stos
loope
aaa
mov
jns
sbb
push
pop
fcomps
xchg
add
jns
scas
je
lock
sub
jge
xchg
pop
push
xlat
xor
out
sub
push
jp
inc
jge
push
rolb
push
or
enter
ds
add
sbb
sub
sbb
adc
into
and
fs
out
leave
adc
jae
mov
push
je
les
scas
fs
jle
sbb
aas
insb
mov
imul
jp
addb
adc
daa
int
xlat
or
insl
fistps
push
dec
pushf
sbb
push
int3
pop
lret
xchg
nop
cli
or
fldt
mov
push
popf
xor
jl
loopne
out
rorb
mov
mov
mov
sbb
shl
cmc
lods
cmp
and
xrelease
jo
lods
in
inc
dec
inc
sbb
cmpsl
fstps
sbb
mov
dec
repnz
dec
ja
out
sqrtps
mov
imul
fmulp
imull
cmp
sti
and
int
dec
pop
xchg
jae
cmp
rcrb
dec
mov
dec
or
movsb
sahf
into
add
popa
xor
cmpl
cmp
or
js
in
and
cmp
nop
pop
mov
clc
jge
adc
push
gs
repz
repz
sbb
xlat
push
dec
xchg
imul
or
stos
mov
enter
repnz
jnp
xchg
lret
sub
int3
js
fs
xchg
fldenv
mov
loop
arpl
and
inc
lods
adc
cmpsb
mov
rcr
push
xchg
pop
pushf
cltd
jno
xor
js
add
into
sub
and
sbb
mov
sub
jecxz
adc
mov
arpl
inc
out
jae
notb
icebp
xchg
push
add
in
aaa
movsl
repnz
xor
xor
rolb
aam
jge
jnp
cli
lcall
pop
push
clc
xor
xchg
div
push
stos
jne
xor
inc
test
mov
fsts
cwtl
xchg
andl
sub
lahf
lahf
xor
mov
pop
mov
mov
xchg
insb
mov
or
ficoms
mov
cmpsl
inc
and
lret
lret
and
fcoml
addr16
cmpsb
popa
lret
std
jo
pop
imul
cmp
push
movsb
mov
stos
movsb
test
aaa
xchg
xchg
jg
mov
sub
imul
cmp
lock
push
movsl
aad
stos
sub
jecxz
cmp
pop
outsb
stc
jmp
push
nop
mov
xchg
int3
xchg
fwait
mov
or
xchg
push
leave
outsb
xchg
mov
and
jne
add
jg,pt
cmp
sub
inc
aam
sub
aad
xlat
dec
cmp
repnz
adc
sub
mov
std
ljmp
mov
mov
fld1
fs
ret
mov
sqrtps
lds
cs
fs
js
negl
loop
adc
mov
push
into
enter
pushf
sbb
rorb
imul
outsb
pushl
xor
cmp
ds
stc
xor
test
mov
dec
sar
scas
dec
rol
ret
pop
ljmp
lcall
bnd
aad
int3
outsl
xlat
xor
movb
out
out
in
and
outsb
call
push
or
mov
lds
addb
or
or
add
inc
je
popa
sbb
daa
nop
inc
and
out
decl
adc
jno
mov
xchg
jle
sti
in
sbb
sub
cltd
xorl
out
sub
inc
jae
add
mov
or
adc
mov
decb
sub
aam
rorl
or
mov
pop
jmp
cli
mov
imul
and
xchg
mov
jne
stos
clc
and
inc
test
rcr
push
lods
jb
cmp
xor
neg
mov
mov
sub
enter
mov
sbb
rolb
pop
mov
lods
dec
cmp
inc
inc
notb
mov
mov
test
popa
das
jmp
jae
push
add
in
dec
xchg
push
or
out
jge
dec
cmc
mov
mov
dec
in
sysexit
ret
notl
int
mov
mov
jno
push
js
mov
cltd
negl
es
cmp
cmc
mov
popa
test
sub
and
mov
push
xchg
inc
aas
push
iret
pop
lea
mov
fldl
mov
pop
in
and
and
ffree
cmp
dec
les
aad
pushf
into
idivb
jmp
adc
cmc
cmpsl
jmp
arpl
pop
pusha
daa
push
lahf
xchg
inc
out
fld
aas
popa
repz
pop
in
loopne
mov
ret
pop
lods
pop
fists
or
jbe
push
cmp
test
in
arpl
outsl
xchg
sbb
and
outsl
loopne
xor
icebp
jmp
cmpsb
fwait
add
and
mov
mov
xchg
call
ret
mov
stc
cmpsl
sahf
push
xor
pop
mov
test
mov
mov
dec
outsb
jmp
xchg
xchg
push
ss
dec
ficompl
in
movsl
pop
pop
vmovss
push
push
xor
cmp
mov
lock
dec
jmp
test
aam
pop
jge
int3
dec
mov
nop
rcrl
push
daa
cmp
outsl
cmp
ljmp
fsubrs
call
inc
or
jmp
dec
mov
inc
xchg
fiaddl
cld
into
adc
out
movsb
mov
aam
adc
inc
ljmp
les
xchg
pop
dec
movsb
xor
sub
or
or
out
xor
sar
sub
loop
paddd
and
add
add
jle
cli
or
mov
mov
mov
jle
sahf
ror
sarl
push
cltd
stos
xor
mov
inc
pushf
ret
fs
jg
sahf
out
xchg
sahf
xchg
repnz
sub
mov
popa
and
cli
xor
fsubl
push
xlat
cmc
sub
cmp
outsb
or
in
xor
sarl
repnz
sub
lcall
jb
and
js
mov
sub
push
stos
mov
lea
fnsave
mov
mov
cmp
repnz
inc
add
out
leave
pop
pop
loope
cmp
andl
outsb
mov
arpl
es
adc
test
ret
and
call
popf
adc
xlat
jnp
roll
xor
mov
adc
fs
sbb
loop
in
fcoms
or
repz
andl
cli
mov
loopne
pop
imul
bnd
xchg
pusha
jmp
leave
jne
pop
enter
jbe
mov
xor
mov
add
dec
or
mov
add
sub
cmp
repnz
lret
jns
jae
mov
jo
xlat
cli
not
mov
js
pop
fnstcw
sbb
sub
aam
imul
mov
add
iret
mov
rcll
and
jno
dec
stc
push
mov
pushf
xchg
jmp
arpl
nop
sbbl
mov
rcrl
cmpsl
and
push
lods
jae
xor
xor
sarl
mov
out
sar
dec
imul
and
cwtl
cmovs
mov
mov
fisubl
pusha
aas
add
imul
pop
jle
mov
mov
adc
pop
adc
scas
mov
pop
pop
pop
sbb
jno
incb
mov
lods
add
sbb
mov
sbb
xchg
fsubr
loope
cmp
cld
idiv
inc
dec
gs
mov
jbe
fcoml
xchg
pop
xor
dec
and
imul
lahf
outsb
rorl
cwtl
fistpl
mov
outsb
push
sub
lcall
outsb
stos
leave
push
push
mov
xlat
jle
cmp
add
xchg
jnp
cmc
xchg
imul
rclb
lret
enter
sbb
aam
cmp
jmp
je
jl
mov
leave
pop
cmpsl
in
test
jle
mov
xchg
sbb
repnz
daa
int3
dec
ret
xchg
cmp
cli
xor
jno
jns
fisubrl
adc
pop
aam
fstpl
loope
sbb
xchg
std
cmp
fbstp
pusha
mov
xor
sub
arpl
aad
pop
push
enter
or
cmp
rcll
int3
negl
inc
lods
adc
mov
dec
scas
repz
and
mov
sbb
jbe
add
or
mov
add
and
dec
cwtl
ret
data16
push
inc
fidivs
fildll
mov
mov
mov
ret
xor
cmp
or
sbb
push
inc
std
dec
xchg
or
mov
fucomi
call
aaa
lret
int3
mov
lods
inc
mov
push
mov
xor
dec
inc
mov
mov
lret
nop
jb
add
out
pop
popa
insb
mov
dec
mov
push
psubw
test
ret
cltd
xor
mov
sub
outsl
xchg
mov
xchg
sbb
cmpl
mov
lock
push
xor
mov
dec
xchg
xchg
dec
pop
cmp
lods
cmpsl
mov
adc
hlt
ret
loope
cs
jae
aad
pop
cltd
pop
push
dec
mov
adc
cmp
dec
out
outsb
sub
hlt
xchg
mov
idivb
and
push
xor
add
mull
mov
pop
sub
push
cmc
sahf
lea
js
adc
dec
in
jns
mov
dec
pusha
mov
repz
lea
fbstp
adc
jae
adc
xchg
mov
cmpsl
js
ret
mov
sbb
stos
or
add
lods
mov
dec
ficoml
daa
das
add
sti
and
rcr
stos
push
lcall
sub
adc
inc
lods
xor
into
inc
sub
repnz
or
mov
iret
inc
in
inc
lahf
or
inc
gs
insb
cwtl
or
cmpsl
hlt
mov
stos
push
pushf
rol
mov
scas
inc
jns
jecxz
outsb
jmp
mov
rcll
roll
xchg
sahf
daa
mov
mov
mov
ss
xor
and
xor
jg
outsb
mov
fisubs
mov
push
pop
addl
stos
and
add
mov
jne
jb
xchg
cli
lds
and
dec
jb
inc
dec
hlt
sbb
pop
cwtl
inc
movsl
ret
decl
loop
mov
pop
add
test
inc
add
mov
loope
jl
xchg
out
movsl
ss
push
pop
sbb
mov
outsb
add
pop
inc
movl
aaa
decl
inc
dec
fdivrl
inc
out
or
bound
out
xchg
cmpsl
outsl
xchg
sbb
and
data16
movsl
sub
std
xor
cmpsl
pop
xor
lret
int
pop
cld
inc
push
out
push
pop
ljmp
out
std
mov
jmp
ret
enter
inc
dec
xor
pop
aam
imul
mov
lock
push
enter
xchg
int3
repz
push
clc
xor
mov
fmuls
mov
jo
sub
dec
fisubrl
out
dec
add
mov
lods
mov
into
in
mov
stc
roll
inc
lcall
xchg
es
cmpsb
xor
sub
loope
test
scas
xchg
mov
popf
arpl
or
fcomps
dec
adc
mov
push
and
ljmp
inc
cld
xchg
xchg
mov
lahf
lcall
mov
jg
dec
pop
inc
jmp
dec
mov
or
sub
ss
mov
xchg
jne
es
sbb
sub
mov
pop
jge
ss
int
sarl
mov
cmp
pusha
mov
mov
lcall
dec
adc
addr16
jns
mov
xchg
nop
dec
pop
or
push
add
inc
adc
sbb
mov
fisttpl
cmp
or
mov
je
rorl
xor
mov
cmpsb
sub
je
sarb
fnstsw
lods
pop
dec
in
jp
mov
cmc
sbb
lds
pop
std
xchg
inc
cmp
jo
xor
mov
dec
jg
inc
pop
test
sahf
movsb
push
hlt
mov
dec
fcomip
in
jge
mov
jle
dec
andb
in
dec
ret
bound
xchg
mov
ret
or
xadd
adc
ja
cmc
pop
jecxz
je
inc
nop
sbb
dec
add
sahf
rcr
inc
shll
loopne
mov
stos
data16
mov
scas
cwtl
xacquire
pop
and
stos
or
push
and
sbb
pop
sub
xchg
sub
inc
mov
loop
cmp
out
add
dec
lea
or
jbe
loopne
push
bound
and
sbb
es
out
mov
jmp
jae
mov
adc
cmpsb
xchg
jp
lods
adcb
pop
jg
gs
jb
push
iret
orb
jecxz
mov
cmp
jno
in
xlat
sbb
pop
mov
add
std
sub
mov
fnsave
pop
add
outsb
clc
mov
add
mov
data16
aaa
xor
rolb
xor
out
push
pop
mov
mov
mov
inc
jne
dec
cmp
mov
adcl
adc
adc
inc
int3
dec
sbb
je
sahf
fsubrl
cmp
mov
insl
daa
clc
xchg
rep
mov
idivb
sub
sub
addr16
arpl
mov
mov
std
popa
sub
imul
shll
xor
pop
lret
aas
dec
div
jg
mov
xor
cmp
add
orb
cwtl
jmp
cmc
add
mov
jns
jnp
lock
aam
imul
fucomip
jmp
scas
out
lret
push
scas
dec
mov
std
pop
xor
push
mov
outsb
mov
adc
cmp
cs
jg,pt
insb
xchg
movsb
sub
push
lcall
cld
xor
mov
xor
lods
mov
push
sub
fmulp
roll
popf
mov
and
xor
xor
fdivrs
cmp
xchg
push
imul
sub
dec
test
and
rcrb
xor
mov
aaa
adc
daa
mov
divl
and
insb
cmp
inc
push
push
fs
mov
pop
clc
pop
jp
adc
sbb
mov
ljmp
fdivl
mov
jbe
lods
aas
daa
insb
bound
mov
jo
and
bound
cmp
mov
sarb
js
flds
jp
test
mov
add
neg
push
sarb
mov
lods
and
outsl
dec
aaa
xor
mov
pop
mov
mov
and
call
mov
push
arpl
je
mov
ficompl
pop
jbe
nop
in
sbbb
cld
xchg
cmp
dec
addl
dec
xlat
imul
xorb
add
je
bound
add
mov
push
mov
mov
shr
dec
or
pushf
dec
outsl
in
add
pop
mov
push
pop
sub
sub
insl
mov
dec
fsubs
pop
imul
loopne
add
cmp
push
into
popl
sbb
mov
movb
fisttpl
sbb
inc
out
mov
into
test
xchg
pop
das
leave
mov
imul
mov
in
jecxz
adc
or
ja
and
fidivl
jecxz
jbe
xor
out
les
pop
inc
inc
pop
testb
mov
adcl
xor
pop
jae
xchg
jnp
leave
mov
push
repz
push
mov
in
adcl
push
jno
scas
mov
push
out
mov
adc
movsb
les
movsb
popa
sub
xor
pusha
jno
les
movsb
jmp
imul
mov
loop
push
rorb
add
leave
fistl
sub
mov
xlat
mov
dec
inc
cmpsl
std
rorl
mov
push
testl
insl
ljmp
ret
mov
pop
loope
xor
and
sti
mov
push
push
sbb
mov
xchg
test
jl
repnz
movsl
cmpsb
lock
in
js,pt
sahf
fnstsw
push
push
mov
xchg
aaa
call
mov
sbb
adc
stc
push
clc
pop
or
inc
add
cs
xchg
xchg
mov
outsb
jo
mov
hlt
arpl
xor
clc
add
push
jo
stos
arpl
inc
movsl
adc
inc
mov
call
inc
sti
shlb
and
mov
fisttpl
shll
pop
dec
cld
movsb
push
pop
aas
pop
xor
sahf
or
fs
pop
jg
sbbl
pop
mov
dec
inc
mov
xchg
xor
aas
xchg
loop
dec
cld
scas
cmpl
xor
add
jae
test
and
jbe
std
inc
mov
and
xchg
and
pop
add
or
sbb
loopne
sub
mov
adc
ret
fistpl
andl
icebp
pop
push
xchg
inc
ret
lcall
sti
clc
nop
sub
outsb
dec
mov
lcall
push
sbb
addr16
test
test
jecxz
jb
inc
and
in
rol
jne
je
aaa
fsubrs
mov
sti
or
jg
pop
dec
lcall
or
hlt
stos
lods
ja
adc
je
cmc
xor
imul
test
dec
jns
in
jmp
fs
fdivrl
push
adc
push
rcrl
push
push
sbb
sets
or
mov
dec
lea
aam
push
push
pop
pop
insl
inc
mov
sbb
lcall
das
rolb
rcrl
div
and
dec
movsl
aam
cltd
mov
mov
lods
ss
scas
jl
rcr
sub
in
mov
iret
sbb
adc
mov
adc
insb
xchg
mov
outsb
push
es
sti
cpuid
cli
mov
dec
mov
mov
ret
addb
jae
pop
dec
push
jbe
xchg
in
and
or
inc
xchg
pop
shll
sub
dec
fs
push
dec
pop
push
sti
outsl
jo
mov
pop
push
mov
scas
jecxz
ficomps
inc
pop
adc
jnp
sub
test
sub
das
cli
add
jle
pop
jge
ja
sbb
repnz
cmpb
push
mov
inc
mov
push
or
iret
lock
cmpsb
pop
adc
rcrl
dec
lods
cmp
inc
adc
fucomp
mov
rolb
loopne
imul
sbb
jecxz
cmpsb
push
mov
jae
cmpsb
mov
cmc
mov
mov
rorl
mov
filds
add
int
bound
into
jmp
stos
add
fiadds
fbstp
jge
scas
cmp
fidivl
ljmp
mov
fsubs
cld
push
test
fldcw
push
adc
andl
xor
test
in
cmpsb
mov
roll
dec
inc
incb
push
sahf
dec
js
xchg
notb
arpl
fdivp
call
xor
pop
testl
fstpt
pop
shrb
aam
test
in
data16
xchg
mov
test
dec
les
mov
mov
inc
sbbl
lods
sub
xor
or
mov
repz
push
mull
sti
sbb
daa
push
mov
cwtl
test
sub
mov
pop
aad
xchg
scas
push
adc
dec
mov
imul
push
sarb
negb
icebp
pop
bound
and
inc
mov
cmp
loop
les
cltd
ljmp
adc
sbb
cmp
push
adc
out
cmp
iret
inc
insl
jns
cs
or
outsb
add
repz
stos
les
sahf
nop
xor
stos
fldl
jge
jl
and
mov
insb
cmp
emms
lcall
adc
lret
or
sub
xor
mov
daa
xor
dec
sbb
jecxz
add
shlb
sbb
pop
adc
lods
fucomip
add
adc
pop
addb
dec
add
xlat
stc
insb
roll
push
sub
hlt
lock
out
rol
adc
push
popa
mov
inc
xor
les
push
out
jno
and
iret
push
dec
and
cltd
xor
cmp
jb
mov
das
rclb
in
xor
mov
aam
ds
push
lea
pop
fidivl
mov
imul
add
test
sub
shlb
push
aaa
shrb
dec
je
mov
mov
pushf
outsl
xor
mov
add
mov
adc
sbbb
mov
sbb
mov
mov
roll
lahf
andb
push
fildll
mov
loop
pop
fmul
scas
pop
jg
add
scas
cmp
and
loopne
sbb
in
nop
pop
sbb
xchg
lods
mov
mov
out
outsb
jbe
inc
stos
fldcw
xchg
mov
lcall
add
add
push
loopne
adc
push
clc
in
jg
test
cmc
push
mov
fwait
insl
xlat
sahf
stos
cld
jno
sbb
xchg
aas
adc
es
loope
xchg
fdivrs
mov
push
daa
pop
in
dec
ret
push
movsl
addr16
sub
pcmpeqd
stos
xchg
push
adc
pusha
es
imul
mov
cmp
dec
jae
cmp
adc
cmp
push
lods
in
int3
xor
pop
nop
sub
in
sub
call
popf
mov
mov
flds
inc
adc
loopne
popf
insl
mov
pop
aaa
mov
fstl
pop
or
or
stos
lea
mov
dec
je
jge
pop
shrl
xchg
shll
add
xor
outsb
add
and
stc
mov
addr16
add
out
fisubl
mov
inc
outsl
dec
inc
jge
and
jecxz
outsb
movsl
mov
loopne
enter
mov
mov
cmovnp
sbb
nop
lahf
or
jge
out
frstor
adc
fidivrs
add
int3
lea
andl
push
paddb
es
rcll
insl
dec
lock
rcrl
in
sbb
jge
js
mov
push
add
sbb
orb
cmpsb
add
xchg
adc
xor
movsl
xchg
cltd
rcrl
mov
mov
cwtl
cmc
jg
cmp
out
push
adc
repnz
outsb
adc
sub
jb
pop
add
or
sbb
insb
add
ds
push
sbb
or
cmp
jg
push
into
mov
xchg
mov
mov
sarl
add
das
mov
jno
call
push
call
lea
cmp
popa
mov
xchg
mov
fsubs
idivl
or
loopne
push
mov
icebp
cmp
mov
xchg
mov
out
subl
xor
xor
roll
jb
fiadds
dec
fsub
inc
sub
in
cli
cmpl
iret
xchg
mov
bound
jmp
inc
mov
in
dec
pop
in
jnp
bound
xchg
sahf
ret
dec
mov
mov
jbe
into
sub
loopne
in
xchg
cmpsb
stos
das
mov
insl
rcrb
inc
add
imul
cli
aad
dec
cs
adc
sub
rcll
and
jp
gs
mov
ficoml
push
cmp
inc
out
push
je
test
fmuls
out
xor
add
jecxz
adc
data16
or
xor
nop
int
mov
outsb
mov
imul
mov
and
icebp
cmp
enter
sub
push
lods
and
cwtl
pop
imull
pop
fmulp
cltd
and
inc
or
push
test
loopne
in
mov
pusha
in
pop
fstps
scas
int3
jae
dec
pop
outsb
fwait
repnz
sbb
jno
adcb
adc
jno
aas
inc
fld
pop
pop
mov
pop
push
xchg
and
sub
stos
data16
fistpll
mov
cld
cmp
inc
dec
jecxz
sbb
aaa
mov
nop
mov
pop
jno
xchg
mov
daa
lret
xor
roll
sub
push
cmp
push
cmp
hlt
inc
daa
push
cmpsb
inc
aas
add
xor
scas
mov
or
iret
in
pop
cmp
hlt
adc
in
xchg
cli
and
arpl
mov
jmp
mov
or
adc
jo
push
push
fisttpll
jno
mov
xor
out
sub
lcall
and
inc
jmp
jno
xchg
mov
jl
enter
push
pop
jno
insb
push
jno
xchg
out
pop
jl
aad
test
sub
sbb
inc
movsl
lret
jmp
mov
scas
paddsw
ds
sub
loope
leave
or
xor
rcrb
das
int3
and
popa
into
adc
fdivrl
dec
dec
push
push
lea
stc
imul
daa
out
call
push
mov
fcomip
inc
es
push
sbb
cs
cmp
xor
xchg
pop
jp
mov
push
ljmp
or
repnz
das
jns
mov
in
push
shlb
jno
sub
ffreep
shll
iret
sbbl
mov
aas
and
adc
push
jl
mov
test
cmp
or
sbb
inc
pop
push
adc
sbbl
mov
jb
insl
jl
rolb
mov
in
mov
sub
std
nop
mov
inc
outsb
sub
push
aas
es
mov
inc
movsb
pusha
pop
dec
cmp
sub
or
das
jg
pusha
xchg
sub
adc
movsl
xchg
cmp
ss
insl
loopne
lret
sub
xchg
aaa
push
lret
outsb
std
push
scas
scas
repz
mov
and
lods
sub
fs
lret
je
xchg
mov
arpl
mov
cli
sbb
daa
out
jae,pn
xor
ret
fistps
xor
push
imul
pop
inc
or
enter
int3
jecxz
or
clc
in
mov
cli
imul
cli
ljmp
and
mov
pop
aaa
dec
scas
aam
jge
and
sub
mov
add
das
and
hlt
mov
shll
insl
in
pop
xor
xor
stc
pushl
fbstp
sub
cwtl
cmp
repnz
push
cmpsb
cli
in
lea
push
push
xorl
scas
out
stos
add
insb
mov
mov
testb
dec
push
adc
pop
aam
outsb
popf
sbb
lret
dec
and
and
inc
cmp
xchg
dec
sub
push
in
movl
xor
outsl
dec
jp
fisubrl
cmpsb
sub
cmp
and
pop
lods
mov
and
enter
mov
cmp
cld
stc
sbb
arpl
mov
ss
sahf
int3
test
jl
jbe
xor
or
ljmp
lock
lods
push
or
in
mov
icebp
push
xor
jl
mov
jne
or
popf
cli
cld
call
sub
xor
jg
adc
xor
and
jnp
test
sub
addr16
dec
mov
sarl
or
ss
push
sbb
pop
mov
and
mov
mov
and
aaa
pusha
mov
pand
add
pop
pop
in
jnp
orl
sub
jle
xor
pop
sbb
xchg
negb
loope
sub
push
mov
add
sub
insl
xlat
insl
es
cmp
mov
xchg
xchg
xor
xchg
lahf
cld
repnz
or
pop
and
mov
popa
sbb
inc
or
int3
pop
mov
gs
dec
mov
aam
dec
shll
or
mov
lret
sub
push
xor
dec
jmp
push
cmp
mov
xor
xchg
out
xor
inc
jae
sub
int3
adc
push
test
pop
mov
or
out
inc
cmpsb
je
sbb
es
bound
cmp
cmp
shlb
in
scas
cmp
ss
mov
and
stc
ja
sub
call
adc
sbb
jge
cmp
pushf
lret
mov
push
dec
cmp
xchg
es
repnz
mov
and
cmp
pop
stos
jl
mov
add
or
outsl
mov
push
pop
pop
lods
mov
xchg
je
cli
dec
mov
mov
xlat
fs
je
bound
stos
fsubrs
or
pop
mov
xchg
jmp
pop
push
aam
iret
scas
or
mov
pusha
loope
subl
mov
sbb
xor
outsl
mov
punpcklwd
pop
call
xor
call
push
mov
cwtl
es
xchg
jle
push
mov
xchg
repnz
push
cltd
dec
jo
sbb
mov
inc
xor
cs
push
hlt
push
nop
mov
adc
add
dec
mov
sub
push
mov
andb
out
or
xchg
movsb
lret
scas
dec
and
movsb
gs
mov
xchg
dec
out
push
dec
lock
push
insb
lods
sbb
fstpt
test
lcall
mov
mov
mov
and
push
mov
or
add
and
cmpsl
aas
add
scas
and
and
adc
push
je
xor
ljmp
dec
je
dec
stc
fisubl
sbb
outsb
mov
xor
enter
mov
rorb
push
mov
ret
push
pop
adc
adc
add
outsl
pop
aam
push
pop
sbb
iret
mov
enter
repnz
lret
dec
pusha
or
mov
fisubl
addr16
sti
addr16
adc
or
sub
mov
add
push
ds
sub
mov
or
pop
cmc
inc
fstpt
fs
mov
xchg
ror
data16
add
aaa
and
push
adc
adc
fcompl
jmp
imul
or
dec
cmp
enter
insb
in
jno
arpl
lods
fld
sbb
notl
mov
pusha
mov
mov
arpl
jp
outsl
push
out
out
std
jno
movsl
pop
add
pop
int
stc
stc
xor
and
stc
pop
mov
pusha
sbb
icebp
mov
jge
rcrl
push
lcall
cmp
mov
push
loope
cmpl
lahf
stc
lahf
push
in
lea
in
mov
cmp
inc
lods
jb
and
outsl
and
add
std
lcall
leave
cwtl
inc
pop
pop
cli
adc
fwait
jno
nop
fisubs
cmp
adc
xchg
icebp
jmp
inc
mov
fldenv
xchg
xor
and
add
or
clts
imul
mov
lock
iret
lods
pop
cmp
jg
xchg
into
movsl
les
adc
add
xchg
mov
out
mov
xchg
dec
mov
out
xchg
in
pop
xor
push
lret
cmp
jbe
lods
pop
lret
popl
ljmp
std
rcll
push
jl
nop
mov
cs
leave
test
cli
cld
cli
cmp
xchg
popa
inc
jmp
add
int
insb
or
jp
in
ret
jno
cmp
mov
sbb
pop
testb
inc
lahf
pop
xor
int
jne
pop
mov
fstps
sbb
and
decl
outsl
andb
mov
daa
shrl
test
cmp
jecxz
les
int
inc
sub
inc
mov
xlat
call
fsubr
fwait
push
lahf
out
jl
inc
sbb
outsb
mov
fimuls
and
jo
mov
sub
test
xorb
pop
data16
push
call
fwait
jl
addr16
mov
ss
repnz
add
int
jmp
fdivrl
into
jecxz
mov
andl
in
xor
addr16
addb
or
cmp
cs
lcall
inc
mov
sbb
cwtl
mov
in
mov
fcmovb
add
push
xchg
mov
cmp
jge
jmp
add
in
pop
sub
sahf
sub
pop
aas
out
fadds
in
jno
in
push
repz
in
mov
xlat
or
movsl
dec
repz
stos
xchg
cmpsb
sbb
out
out
cmpsb
xchg
js
adc
fmul
fistl
sub
push
frstor
jno
pop
mov
add
mov
cmp
mov
mov
lcall
repnz
cmc
fs
les
flds
jg
dec
aas
inc
popf
mov
cltd
lods
les
sbb
mov
mov
loopne
out
or
add
cmp
cmp
test
pusha
add
lods
nop
ss
xor
fwait
call
sbb
scas
cmc
cmp
clc
add
shl
mov
mov
jge
repz
in
in
fwait
or
bnd
rorb
jbe
shl
lcall
das
int3
pop
test
icebp
lods
push
mov
mov
cmp
mov
xor
mov
or
add
cmp
mov
bound
push
stos
sbb
jg
mov
lret
clc
fistl
lods
ja
aad
mov
daa
cwtl
sbb
jl
hlt
and
test
inc
fldt
sbb
mov
cmp
pop
addl
inc
mov
pop
neg
jns
sub
inc
fwait
jl
xlat
ret
jl
loopne
movsb
test
sbb
push
sbb
scas
mov
movsb
cmp
mov
mov
jmp
jo
sub
les
ficompl
shl
add
les
adc
sub
int3
imul
pop
out
push
into
test
out
pushf
rcl
xor
cltd
fwait
movsl
daa
sub
mov
xchg
jl
xchg
arpl
into
mov
in
dec
xchg
xchg
loop
jb
jno
outsb
mull
xchg
jae
loope
mov
repnz
aad
add
adc
imul
jge
xor
push
jne
repnz
inc
clc
fistps
pop
cmp
or
add
push
rclb
pushf
aam
mov
js
xor
int3
sarl
push
psubusw
jecxz
ret
mov
jg
dec
adc
rcrl
xchg
clc
out
mov
mov
mov
mov
sbb
fisubrl
insb
clc
push
vrcpss
imul
test
sub
aaa
and
inc
loopne
inc
xlat
push
jns
adc
push
stos
sahf
jle
int3
sbb
and
xchg
mov
push
fstpl
inc
and
rcl
movsb
ror
pusha
ja
jge
stc
sbb
stos
push
cmpsb
fwait
pop
xchg
icebp
movsl
mov
sbb
mov
mov
or
or
movsb
popf
cld
cmp
je
and
pop
movsb
pop
add
xchg
pusha
ljmp
movl
cli
stc
push
xchg
xchg
adc
pop
jno
and
shll
jnp
pop
mov
jb
mov
int
lods
lods
sub
or
in
sub
pushf
pop
xchg
in
adc
xor
jbe
adc
mov
lahf
mov
jle
adc
adcb
xor
ljmp
cmp
cmp
jge
dec
mov
arpl
test
sub
xlat
xchg
mov
adc
adc
out
mov
push
sub
add
mov
adc
cmp
shrb
mov
mul
mov
cwtl
ja
adc
mov
or
mov
mov
jmp
nop
mov
std
iret
sbb
and
jne
add
sub
xchg
or
sahf
dec
js
popa
fcomps
in
push
icebp
das
or
and
or
iret
popf
addl
int3
jne
mov
mov
jo
idiv
lret
mov
xchg
hlt
test
rol
fistpl
jns
adc
sarb
pop
push
push
jmp
test
inc
movsl
movl
out
dec
orl
or
mov
xor
test
jnp
lock
adc
cmpsb
sub
gs
arpl
jbe
je
lock
cli
ds
rol
mov
shrb
movl
insl
sbb
out
or
mov
inc
inc
jp
push
loope
mov
ja
dec
mov
sti
pusha
js
push
sbb
leave
sbb
je
jnp
mov
sbb
xchg
inc
loop
cs
ret
in
mov
xchg
sbb
movb
sub
fisubl
mov
test
ss
mov
pop
push
mov
in
dec
jns
push
int
push
into
jnp
aam
and
jecxz
jp
push
je
into
mov
jge
in
test
pop
into
insl
pop
shrl
pop
mov
ret
lods
out
and
push
aam
adc
cmp
cmpl
aad
mov
lea
fs
in
jmp
int3
data16
jecxz
pop
scas
sbb
push
xchg
aam
sub
repz
loopne
push
in
test
shrb
out
sbb
xlat
nop
sbb
pop
xor
mov
sbb
lcall
pop
sub
lods
push
sub
mov
or
dec
imul
scas
int3
mov
aam
mov
add
adc
imul
push
cld
fnstsw
scas
roll
mov
insb
xor
push
dec
or
js
int3
aam
mov
mov
in
hlt
jl
jp
lea
stc
xchg
ljmp
jmp
dec
stos
sub
scas
jb
popf
nop
sub
enter
lret
push
popa
and
pusha
push
call
cmp
jle
jge
addr16
and
pop
cmp
push
xchg
pushf
lea
jnp
push
leave
ret
cmp
hlt
xor
fcomps
testl
icebp
xchg
andl
cld
pop
xor
sub
or
cmp
pushf
or
stc
test
insb
push
mov
stc
es
and
push
adc
subl
ret
cli
cmp
xchg
scas
mov
mov
scas
or
and
mov
xchg
jne
nop
loope,pt
sbb
out
out
faddp
sub
mov
xchg
push
xor
pusha
in
xchg
cs
dec
or
jmp
orb
or
push
repz
xchg
movl
andb
and
in
jp
pop
lds
loopne
pusha
jge
repz
dec
adc
xchg
fldcw
gs
loopne,pn
or
ftst
dec
inc
jl
sti
cli
mov
scas
in
lret
daa
loopne
inc
add
mov
xchg
icebp
sar
xchg
es
adc
adc
mov
jo
cmp
out
ds
adc
and
xorb
xchg
mov
mov
mov
sbb
rcrl
or
adc
js
fs
pop
xlat
adc
xor
pop
xchg
shrb
xor
mov
jne
xchg
vpcmpeqb
sbb
sub
icebp
xor
cmp
cli
jae
dec
cmp
adc
inc
sbb
adc
mov
cltd
dec
into
clc
mov
rolb
repz
test
push
popa
stos
xchg
mov
jno
arpl
sahf
mov
sub
imul
int
jp
mov
shlb
inc
hlt
dec
test
fnsave
pop
mov
out
inc
push
ja
push
cld
fsubrs
pop
inc
fcoms
in
cmp
stos
popf
sahf
mov
xchg
adc
mov
lahf
scas
rcl
leave
stos
mov
je
jbe
std
repz
movb
jmp
push
ljmp
popa
dec
stos
inc
rorb
lret
aad
jno
clc
test
ds
data16
cmpsl
inc
cmp
pop
ljmp
mov
push
mov
fwait
push
movsl
push
scas
stos
inc
push
mov
popf
arpl
adc
shlb
insb
in
sub
lcall
test
push
rcrl
mov
flds
and
cmp
rcrl
lods
adc
sbb
mov
das
add
pop
fs
mov
mov
es
ss
ljmp
decl
cwtl
push
pushf
xchg
or
jg
mov
lock
and
pop
jge
es
movl
push
clc
nop
push
xchg
pop
in
pop
jns
test
pop
adc
push
cmp
jae
fldl
add
sub
sub
loopne
cmpsl
jo
adc
cltd
or
xchg
or
lret
jae
jbe
and
in
shrl
add
fmuls
cmp
pop
stc
push
fabs
inc
bnd
clc
lods
jbe
pop
sub
dec
mov
cmp
pop
jbe
ret
xchg
fidivs
imul
fs
scas
sbb
popa
cmp
addl
shlb
mov
rcll
jb
push
outsl
jb
lcall
ds
mov
rcrb
incl
mov
mov
inc
xlat
jae
arpl
adc
test
rorb
mov
jmp
jnp
xorb
and
rcr
repnz
push
push
adc
ror
mov
inc
push
les
mov
mov
mov
and
mov
push
xchg
sub
js
cmp
out
out
mov
movsl
insb
or
lea
cmp
cmp
fs
mov
cwtl
shlb
pslld
inc
push
adc
jno
push
fwait
scas
fsubr
xor
mov
inc
popa
pop
mov
jle
inc
lock
orl
pushf
imul
fidivrl
jecxz
mov
stos
mov
mov
outsb
xchg
orb
adc
sub
andl
jecxz
js
mov
stos
jmp
cmp
insl
xchg
test
jb
jns
xlat
pop
mov
mov
lea
in
imul
cmp
aad
mov
mov
jne
lcall
fisubrl
mov
int3
aas
int
loopne
addr16
fstl
ret
sarl
mov
and
outsl
stos
and
outsb
mov
jo
sbbl
sbb
aas
cmp
xor
dec
push
test
ret
jmp
fdivs
or
cmpsb
out
push
and
ss
inc
div
pop
stos
add
add
push
ljmp
xchg
xor
xor
andb
sbb
in
pop
xchg
xchg
sub
rolb
ret
mov
jg
pop
insb
adc
jnp
test
push
fwait
shlb
loopne
ficompl
setb
daa
call
fcmovbe
cmp
jle
mov
pop
mov
loopne
lock
jge
ss
jbe
sti
das
adc
and
push
ds
mov
sti
cli
pop
xchg
loopne
mov
xor
lret
scas
jb
sbb
sbb
adc
lretw
in
adcl
mov
mov
add
mov
icebp
push
pop
xchg
inc
cltd
lret
dec
cmp
xchg
jge
popf
cmp
scas
rclb
fnsave
int3
das
ror
push
sbb
mov
or
push
mov
dec
pushf
jns
or
adcb
adc
cmp
adc
mov
fidivs
inc
ljmp
std
mov
mov
xor
fidivl
out
dec
mov
in
cmp
dec
daa
ficompl
jbe
aam
push
inc
ljmp
jecxz
hlt
gs
pop
iret
fbstp
ds
mov
push
cmp
sbb
fmull
rclb
mov
xor
ret
mov
hlt
cltd
ss
shlb
xor
and
ja
loopne
fildl
dec
in
rorb
fiaddl
push
sub
outsl
andl
push
push
aas
cmpsl
sub
sub
mov
sub
jecxz
and
sub
and
mov
stos
fwait
xor
inc
repnz
mov
ss
fiaddl
mov
aas
ja
in
jb
and
cmpsl
sub
clc
inc
movsb
mov
dec
daa
stc
movsl
test
mov
jo
scas
rcrb
iret
add
add
sbb
outsl
pushf
pop
je
jecxz
js
int
ror
clc
test
sti
mov
xlat
arpl
mov
sub
cli
rcrb
pop
pop
in
imul
and
jne
jmp
imul
push
xlat
jmp
in
inc
dec
test
or
fstp
sbb
push
lods
testl
sub
cmp
adc
and
jle
addr16
mov
cmp
in
scas
jmp
sahf
pop
mov
inc
stos
pop
jmp
xchg
jmp
xor
aaa
mov
ret
adc
popa
or
jns
jl
adc
mov
and
cltd
pop
cmp
adc
cwtl
andb
ss
insl
cld
insl
aas
inc
cmp
stos
cs
ja
add
push
imul
and
scas
jbe
cld
add
jecxz
mov
jae
push
out
cli
sbb
and
dec
into
int3
shll
sbb
jl
mov
mov
or
je
lahf
add
loop
outsl
stos
jecxz
dec
jns
lret
test
mov
pop
jle
outsb
das
divl
pop
lods
jp
xor
lock
sbb
mov
add
adc
outsb
dec
push
pop
out
dec
mov
push
inc
lret
repz
aam
jno
inc
into
cmpsb
and
and
test
loopne
icebp
hlt
mov
pop
mov
push
mov
repnz
sbb
sub
jnp
ja
rol
sbb
scas
dec
popf
loopne
js
cmpsb
pop
jmp
cmp
pushf
push
pop
xor
rcll
imul
and
fcompl
jle
popl
mov
fcomps
or
or
sub
pop
sub
push
jge
bound
add
lds
aaa
jbe
sub
xor
mov
cmpsb
xor
mov
xor
push
lds
sarb
mov
push
mov
insl
pop
xor
addl
pop
push
mov
outsb
jb
or
pop
xorl
fcoml
inc
stos
inc
xor
pop
push
jo
cld
xchg
sub
xor
aad
dec
in
cltd
mov
out
aaa
fnstenv
je
xor
iret
cld
xor
or
adc
xor
push
push
mov
cmp
daa
rorl
or
sarl
mov
or
pop
push
aas
in
daa
out
and
sub
jnp
add
fldl
or
mov
pop
stos
movsl
in
sar
jge
cld
xchg
mov
sbb
outsb
ret
xor
mov
xchg
inc
dec
lret
imul
mov
int
cs
pushf
mov
lods
pusha
iret
scas
lcall
dec
je
fwait
jo
mov
rclb
divb
mov
loop
out
jp
or
xor
leave
pusha
pop
movsl
sub
add
ret
in
ror
xor
push
sbb
fidivs
popa
sbb
lret
popf
fdiv
ficomps
cmc
shlb
inc
and
jecxz
test
jns
loop
cmp
into
cmp
outsb
mov
push
addr16
pop
cli
dec
xchg
aaa
adc
dec
fisubrs
xchg
cwtl
push
cltd
mov
dec
inc
jmp
cwtl
push
arpl
sub
jnp
sbb
gs
xorb
std
push
jge
adc
pusha
lcall
mov
jmp
popf
dec
adc
or
dec
mov
repz
inc
mov
sbb
mov
movsl
pop
adc
and
mov
push
or
ds
mov
mov
std
ljmp
mov
int
aaa
jo
les
outsl
push
sub
scas
cmp
add
pop
xchg
mov
mov
cmp
fisttpll
ljmp
lret
or
push
xorb
cli
ss
or
cmc
shl
cli
insb
ss
sub
sti
sbb
xor
cmc
in
addb
mov
lods
lock
xchg
dec
rcl
or
xchg
int
mov
int3
test
stos
imul
cmc
jns
adc
sbb
xchg
loopne
xchg
jb
rolb
sub
les
or
pop
aaa
cmp
push
and
jge
enter
shlb
sbb
mov
test
loop
mov
jnp
lods
mov
pop
jae
test
mov
and
adc
shlb
sbb
add
pop
or
mov
mov
mov
xor
push
aaa
jl
mov
sbb
scas
test
flds
stos
jno
mov
lea
inc
xchg
ret
bnd
outsl
mov
insl
xchg
sub
xchg
mov
sbbl
stos
xchg
out
fwait
mov
loopne
pop
js
adc
cld
pusha
sub
mov
aaa
not
or
je
cmp
pop
xor
out
negb
push
insb
and
popf
jnp
aaa
ljmp
cmovge
xor
jecxz
fistl
aad
jp
rorb
sbb
enter
and
sbb
xchg
addb
sbbl
arpl
xorb
inc
stos
fwait
pop
pop
adc
sbb
loopne
sub
fidivl
orb
adc
icebp
xor
ret
push
loopne
ret
iretw
je
fadd
add
cmovle
pop
mov
mov
inc
int
movsb
stc
jb
cmp
xor
movsb
sbb
in
xor
xor
push
imul
push
pop
xchg
add
push
mov
fisttps
subb
add
cmovb
and
dec
test
mov
sbb
leave
sbb
pop
mov
sbb
and
xor
dec
push
pop
mov
cmc
add
sub
and
mov
mov
mov
bound
xchg
mov
fsubs
out
ret
mov
push
pop
mov
stc
cmp
faddp
aad
sbbl
std
pop
push
scas
fnsave
hlt
leave
stos
mov
inc
cmp
and
inc
jnp
cmpsl
cmp
outsl
cmp
mov
cltd
ja
inc
arpl
add
inc
xchg
cmp
roll
in
outsb
icebp
cmpb
loopne
cmp
mov
arpl
out
mov
aas
mov
adc
inc
mov
hlt
fldenv
frstor
rcll
mov
xchg
adc
push
jne
jg
test
push
xchg
loopne
xor
stos
out
shll
push
push
dec
cmp
pop
push
scas
cmpsb
stc
and
lods
sbb
inc
repz
mov
sub
loope
cmpsl
adcl
pop
cmpsl
aas
out
lret
jbe
or
and
fidivrl
push
inc
flds
stc
jecxz
dec
cmpsb
inc
les
dec
mov
repz
mov
mov
data16
sub
jg
in
stc
jmp
add
mov
ss
lcall
jbe
leave
mov
jbe
rorl
rcll
adcl
sti
imul
stos
rorl
inc
xchg
cld
xchg
ljmp
inc
mov
sbb
mov
or
cli
jle
int3
xor
xchg
insb
sbb
sarl
ja
cmp
mov
add
ds
jns
sub
push
xor
dec
imul
inc
ljmp
iret
xor
inc
cmc
fstpl
mov
pop
fisttpll
jg
lock
lret
inc
in
pop
mov
adc
addl
dec
lret
fildll
data16
push
movsb
adc
ja
fidivrs
outsb
lret
aas
or
js
dec
pop
out
js
pop
les
rcrl
and
stc
aaa
insb
push
fcoml
mov
pop
cmp
sbb
mov
mov
movsb
jmp
jbe
outsb
lret
and
xchg
mov
push
pushf
cmp
mov
and
or
cmp
fidivl
stos
lock
outsb
int
sub
pop
fisttpl
cmc
loopne
div
call
mov
lock
push
push
in
fldl
mov
sub
je
and
mov
adc
arpl
test
out
jp
xchg
add
popa
adc
les
std
cli
cmp
or
adc
and
and
fdivs
adc
pop
in
lahf
mov
stc
cld
jl
add
lods
es
xorl
stc
push
xchg
push
flds
call
xchg
mov
stos
cmp
pop
mov
adcb
lret
movsl
dec
mov
jb
pop
lea
cs
fisttpl
mov
in
cwtl
cmp
pushf
fs
cmp
dec
dec
je
add
pusha
mov
in
pop
ret
imul
outsb
out
sarl
sbb
jmp
inc
rcrb
int
negb
clc
dec
xor
out
das
sbb
jnp
outsb
pop
fcompl
pop
inc
jp
cs
and
pop
sub
popa
mov
jbe
push
mov
fists
call
mov
call
jge
cmpsl
pop
push
adc
sub
jmp
xor
aaa
push
dec
mov
ja
cltd
repz
lods
aaa
push
mov
stos
dec
scas
lcall
imul
push
fistpll
rcl
loopne
test
jl
clc
or
daa
cmp
jae
mov
aaa
or
pop
insb
lcall
fldt
mov
cmpb
pop
sub
or
add
or
pop
in
scas
lcall
test
jmp
mov
adc
xchg
mov
insb
into
inc
dec
cmp
shrl
sbb
popa
cmp
dec
cltd
andb
xor
mov
out
roll
pop
fdivrl
std
fbld
lds
jp
pusha
bound
arpl
imul
jle
mov
mov
dec
in
fidivrs
or
or
dec
mov
push
sub
dec
data16
mov
mov
movsb
movsl
int3
ficomps
mov
popf
and
repz
or
popa
add
mov
cmpb
pop
inc
mov
mov
arpl
cmpl
addr16
xchg
int
lods
xchg
sbb
jbe
test
data16
out
mov
inc
inc
cmpsb
arpl
lock
ret
pop
and
xor
addr16
ss
xchg
test
subb
pop
iret
ret
dec
popa
xor
pusha
sti
xchg
ljmp
sbbl
sub
fcomp
mov
mov
inc
out
and
xor
xchg
aas
cmp
test
inc
xlat
arpl
cltd
add
rclb
scas
cmp
lea
jg
out
adc
je
enter
cs
pop
test
mov
and
sbb
bound
xor
sbb
loop
bound
cmpsl
lock
add
mov
clc
push
stos
sub
js
mov
adc
xor
xchg
scas
xor
jno
loopne
outsb
and
pop
mov
jle
std
stos
cmp
cli
and
or
cmp
mov
rorb
push
push
xchg
inc
mov
in
add
lods
iret
lds
test
cwtl
push
outsl
aas
mov
ret
sub
lret
xor
sti
pop
or
cmp
ss
ljmp
or
bound
lret
mov
add
xchg
int3
pushf
inc
cld
imul
stc
push
jnp
sbbb
es
sub
jne
lret
cmpsb
inc
cmc
mov
fisubrl
cld
pop
adc
outsl
lods
push
std
sarl
cmpsb
jg
pop
ljmp
xor
adc
mov
jl
pop
sti
push
push
cmp
das
repz
std
push
fwait
jno
scas
ret
add
int3
cmp
pop
cltd
inc
add
xor
sub
xlat
sbb
mov
jnp
popf
in
cmp
hlt
jno
xchg
inc
out
and
add
call
lods
lahf
ret
push
idivl
cmp
mov
xor
mov
xchg
xor
inc
mov
mov
outsb
jno
movsl
xchg
and
push
adc
sub
stos
call
adc
jbe
or
lods
cmp
push
cmp
stos
cli
hlt
push
jecxz
lea
jge
popa
mov
push
cmovnp
add
sbb
in
or
sub
mov
shl
repz
gs
jae
fs
rorb
movsl
cmp
mov
xchg
imul
push
cli
outsb
inc
mov
pop
icebp
push
pop
shl
mov
sbb
scas
stc
in
push
scas
addr16
xchg
push
sti
pop
cmpb
mov
lahf
pusha
mov
subl
mov
push
mov
mov
cmp
mov
mov
shr
mov
insl
adc
ret
cli
fstl
inc
lods
inc
jle
sub
aas
aas
loope
popf
es
dec
ret
addl
ret
adc
and
cs
cmp
xor
sub
jp
jge
and
add
mov
gs
rolb
dec
mov
ret
rcrb
in
mov
xor
inc
push
pop
dec
jp
jmp
dec
push
out
pop
lret
xor
into
testl
sub
cld
ds
push
push
ret
dec
dec
mov
test
sbbb
ficomps
cmp
dec
scas
mov
lds
jb
mov
cmp
cmp
push
cld
push
fs
mov
dec
cli
xor
les
shll
add
loop
cmpb
dec
xor
push
pop
shr
movsl
aad
push
or
pusha
sbb
xorb
shlb
lcall
dec
into
les
xor
xchg
mov
cmpsb
subl
jge
loopne
cs
sub
push
cmp
testb
and
addr16
std
mov
pop
shrl
fnstenv
pop
inc
pop
jl
mov
pop
aad
cmpsb
jp
mov
xor
out
std
ja
loopne
bound
inc
fs
sub
inc
mov
sub
aad
xchg
in
imul
dec
xorb
insl
pop
dec
xor
jmp
mov
xchg
dec
adc
cmpsb
sbbb
adc
sub
jecxz
pop
les
sbbl
roll
mov
arpl
inc
add
mov
jnp
fdivs
cmpsb
sti
stos
xchg
scas
outsb
addr16
stc
aam
daa
fidivs
cmp
lods
pop
add
scas
mov
lds
loopne
mov
hlt
cli
mov
pop
mov
or
mov
push
cmp
and
sahf
cltd
shll
sub
or
lods
shrl
repz
xor
ficoml
ret
jno
dec
cmp
fisttpl
sahf
cmpsl
repnz
clc
sbb
je
mov
push
pop
lds
pusha
add
mov
adc
loope
fisttpll
adc
das
lock
and
xchg
mov
fsubp
ret
aaa
shrl
jle
in
or
dec
push
out
cmp
pop
mov
ja
xchg
je
jb
outsb
pop
loopne
ret
xlat
mov
push
test
aas
push
mov
mov
inc
pusha
pop
les
mov
dec
adc
pop
test
mov
ja
cld
xchg
sub
or
leave
push
shrl
or
mov
mov
dec
fwait
daa
pop
mov
push
loopne
sub
or
call
mov
push
shl
mov
jno
out
jo
inc
lods
xor
ret
jo
ret
js
lahf
test
addr16
sarl
les
xor
lods
int3
jnp
daa
aam
adc
out
dec
jb
xchg
js
sahf
orb
std
rorl
call
bound
cli
adc
or
scas
xchg
lahf
cli
mov
cs
icebp
das
jne
and
dec
les
ja
jg
aam
sbb
aam
cmp
das
fcmovnb
mov
sbbb
pop
pop
lods
jno
imul
outsb
inc
inc
in
fmulp
les
adc
ljmp
test
cmp
aas
out
out
jo
pop
jo
lret
xchg
add
movsb
cld
cmp
dec
or
cli
call
leave
inc
lods
fs
pop
mov
jg
shlb
pop
aaa
xchg
pop
and
out
out
cli
fs
mov
mov
clc
sahf
and
les
xor
pop
xchg
imull
pop
cmp
pop
inc
mov
imull
jnp
cs
pop
jg
movb
rclb
pop
sub
ja
push
xchg
ss
mov
sahf
out
pop
mov
mov
bound
and
nop
scas
push
add
arpl
xchg
pop
add
movsb
mov
jns
pop
pop
ljmp
fwait
popf
xlat
lahf
mov
fadds
push
or
arpl
ret
es
cmp
dec
fists
repz
jmp
mov
gs
insb
jae
jnp
dec
mov
cmp
iret
push
movsl
fildl
js
test
pushf
push
adc
repnz
es
cmp
sbb
add
sbbb
out
fs
shrl
dec
xorl
mov
enter
xchg
fidivl
and
sub
mov
adc
and
jl
test
loopne
adc
or
mov
sbb
movsl
lret
dec
cli
mov
sub
jo
clc
fisubrl
leave
push
sub
mov
sar
test
aad
outsb
or
add
lock
and
loope
cmp
xchg
add
ret
in
in
aad
jae
jns
lret
cmpb
sahf
mov
jmp
in
jle
jmp
jb
jnp
ret
or
and
in
add
mov
and
sahf
add
mov
mov
adc
add
aas
mov
out
sbb
pop
das
sahf
fldt
jcxz
xchg
jp
xor
adc
pop
mov
jnp
mov
push
arpl
dec
mov
xchg
rcrb
and
or
in
je
je
addr16
enter
je
cmp
push
mov
orl
lahf
and
and
mov
or
adc
mov
fwait
add
imul
sbb
pop
mov
popaw
addr16
stos
push
sub
imul
sahf
addr16
dec
jbe
out
push
jmp
les
inc
loope
clc
jns
out
jns
sub
jno
fidivs
scas
jmp
or
test
inc
jno
inc
insl
jmp
rclb
and
call
in
or
je
enter
dec
jg
std
jp
mov
and
pushf
cmp
ljmp
ljmp
aaa
cmp
imul
arpl
sbb
pop
mov
push
popf
imul
cmp
ret
hlt
sub
fwait
adc
call
jo
rcrl
mov
add
jp
lea
push
lods
insb
cmp
adcb
popf
cmc
iret
test
jo
scas
out
cltd
movsb
popf
dec
rcr
fs
jb
or
out
adc
dec
xor
addr16
cmpb
fistpl
cmpsb
cmpl
jl
fs
pop
cli
jns
push
pop
and
mov
inc
cmp
and
repz
dec
mov
daa
dec
mov
cmpsl
add
inc
pop
and
pop
mov
lea
sahf
sbb
mov
xor
dec
mov
sti
xlat
push
cld
mov
jmp
cmpb
sbb
mov
shrb
adc
aam
pop
fstps
xchg
sahf
pusha
adc
add
into
daa
push
out
out
inc
sbb
mov
pop
xchg
ficoms
popf
xchg
pop
inc
ret
lcall
das
fisubs
and
mov
sbb
loop
or
adc
push
push
test
push
cmp
scas
add
sbb
lea
hlt
and
pusha
repz
fisttpl
jp
dec
out
fstpt
mov
clc
cltd
xorb
ds
lea
lahf
mov
sbb
sub
adc
mov
imul
das
test
arpl
push
dec
xchg
dec
push
rcr
cwtl
cmpl
nop
and
aam
cmpsb
stc
aas
std
push
fwait
sbb
and
insb
daa
mov
sbb
jno
mov
xchg
cmpsb
add
fnstsw
pop
ret
inc
subl
in
mov
xchg
scas
push
sbb
outsl
mov
rolb
xlat
xlat
sbbl
imul
fcom
repnz
pop
pop
mov
adc
out
pop
je
push
cmpsl
test
push
cmp
sti
negl
adc
pop
push
inc
mov
leave
insl
mov
dec
xor
mov
enter
pop
aam
and
clc
jmp
push
out
push
dec
in
into
test
xchg
adc
fidivs
arpl
dec
or
jae
ds
outsb
mov
out
jnp
loop
in
jne
shlb
ja
int3
adc
jns
cs
dec
jp
xchg
ret
inc
mov
mul
and
es
pop
xor
adc
xchg
cmp
fldcw
adcl
sti
int3
negl
out
add
mov
cwtl
aam
clc
dec
mov
clc
sbb
dec
mov
repz
pop
mov
add
push
adc
dec
enter
jns
add
lea
pop
inc
add
add
test
ret
xlat
cmp
movsl
add
jecxz
sbb
fstps
clc
aaa
fwait
adc
mov
inc
insl
jmp
fmulp
fidivrl
jl
inc
pop
mov
push
out
repz
mov
and
rclb
mov
cmp
mov
inc
js
mov
and
adc
sub
call
in
pop
je
xchg
adc
mov
cwtl
fwait
mov
loopne
dec
aad
adc
jge
xchg
xor
int3
leave
cmp
jbe
xchg
inc
cmp
cmp
pop
dec
sti
cli
dec
ret
xchg
movsb
jae
outsb
mov
arpl
js
dec
cmc
rcl
pop
jle
push
jbe
mov
mov
mov
adc
xor
dec
aas
filds
bnd
out
mov
fwait
scas
cmp
ror
xchg
lea
sbb
add
cmp
jne
je
pop
bound
int3
push
das
dec
cmp
outsl
push
aam
rcrl
push
or
add
icebp
adc
or
lea
xchg
xor
imul
dec
sub
mov
int3
dec
adc
cmpl
aad
xor
xor
mov
das
lea
mov
sahf
mov
je
movsl
int3
test
adc
fdivs
or
dec
mulb
xlat
add
and
ret
add
adc
clc
sbb
das
stos
icebp
and
push
mov
sub
cmpsb
fst
and
jnp
outsb
enter
lcall
rorb
xor
pop
inc
xchg
imul
mov
push
dec
fwait
popa
lds
aad
sti
add
ss
lret
cmp
jae
sub
jbe
sbb
imul
push
mov
setns
cwtl
jmp
xor
xchg
sar
push
mov
ss
mov
mov
in
jae
mov
sub
insl
out
fxch
lret
stc
inc
call
int3
adc
gs
jmp
into
cmp
clc
arpl
decl
aam
sbb
stos
insb
in
out
mov
inc
mov
insl
push
lds
dec
andl
xorb
cmp
movsl
stc
stos
ret
or
fiaddl
aas
rclb
scas
insb
ja
shl
and
popl
stc
clc
lret
fdivrl
cltd
push
inc
add
xor
std
add
adc
movsl
sbbb
leave
daa
andb
shl
add
out
ljmp
lret
cld
push
scas
dec
mov
into
pop
dec
mov
fdivs
sbb
pop
sbb
pop
cmp
out
mov
jb
sahf
or
repnz
lahf
mov
stos
push
aad
adc
dec
ret
inc
cwtl
jle
push
xchg
jg
addr16
and
jge
outsb
scas
push
inc
sub
mov
sub
je
lret
push
and
movsl
add
jmp
test
movsl
ret
sub
mov
mov
dec
in
push
gs
push
repnz
imul
jns
dec
sti
popa
add
es
or
jmp
call
xchg
sub
insb
push
xor
jmp
mov
enter
inc
mov
jmp
int
iret
shrb
push
test
shll
jbe
fs
lcall
mov
cmp
sub
aad
das
in
lea
pop
mov
adc
mov
xchg
mov
mov
fistps
jns
cwtl
adc
cmpb
pop
mov
cmp
pop
and
or
jp
test
sub
or
aad
roll
aad
cmp
jo
pop
in
mov
or
inc
inc
ja
scas
loopne
icebp
lock
pop
cs
push
in
xchg
sbb
les
mov
fadds
mov
inc
sysexit
cltd
jno
jp
mov
mov
fs
jns
popf
dec
inc
mov
inc
movsb
rcrl
fiadds
shll
cmpsb
xor
cltd
cs
sub
ja
pop
lods
cmp
xchg
in
dec
jmp
mov
sti
or
push
sbb
bound
jecxz
in
xor
leave
je
mov
pop
shlb
cmpl
jb
sbb
data16
loopne
ret
xor
stc
stos
bound
imul
bound
cmp
mov
xlat
add
xchg
sub
jae
cli
test
mov
jno
jmp
mov
scas
adc
xor
arpl
test
lods
cld
shll
js
es
jae
fdivrl
and
inc
sbb
inc
pop
jne
push
iret
out
or
mov
mov
mov
out
movsl
push
addb
mov
in
loopne
insb
ja
push
xor
int
mov
add
push
dec
mov
and
aaa
add
inc
and
call
sub
mov
and
or
in
jecxz,pt
push
std
mov
and
mov
movsb
xor
ljmp
popl
sub
subb
shl
push
mov
or
outsb
es
aad
aad
xchg
rcrb
rcrb
pop
push
iret
movsb
mov
es
daa
cli
stos
or
test
gs
mov
dec
clc
ret
sar
popf
cmpsb
add
push
fs
mov
push
mov
mov
rcrb
iret
js
pop
test
leave
sub
js
enter
shlb
rdmsr
dec
inc
push
pop
and
leave
popf
daa
lret
testl
adc
sub
xchg
mov
add
xchg
int3
mov
movsb
ret
sub
rorb
jmp
xor
pop
and
pop
jge
frstor
xor
sub
xor
loope
jecxz
mov
pusha
or
pop
mov
adc
lds
arpl
into
into
lcall
xchg
out
dec
dec
out
xchg
orl
pop
dec
bound
int
cmpsb
xor
sbb
xchg
div
hlt
jge
in
and
adc
adcb
mov
mov
inc
sahf
stos
div
jp
in
loop
dec
dec
out
mov
icebp
mov
mov
and
stc
mov
or
daa
imul
jp
or
loop
jecxz
nop
or
cmp
mov
rclb
inc
lods
aad
adc
cli
xorb
xor
adc
addb
data16
call
fstpl
mov
in
push
xlat
les
adc
push
adc
sbb
cmp
lock
movsb
cmp
pushf
mov
xor
outsb
fwait
pop
lds
movsb
ljmp
je
mov
inc
jns
push
stos
or
pushf
adc
outsl
aas
jbe
add
xchg
repnz
out
aam
jmp
xchg
or
rol
dec
insl
lret
mov
push
jp
jmp
xchg
cmc
stos
and
add
or
and
jmp
ret
and
push
mov
pop
ja
dec
adc
aad
jmp
dec
dec
test
or
add
dec
xchg
jmp
add
adcl
fiadds
pop
add
jnp
pop
add
xor
xchg
repnz
mov
dec
stc
outsb
enter
add
sbb
cmpsl
mov
mov
std
mov
adc
dec
shr
cmp
push
repnz
and
sbb
repz
shrl
mov
jns
mov
xchg
ljmp
mov
sub
sarl
jno
loope
jge
das
addb
adc
push
repz
cmp
inc
mov
insb
gs
mov
cwtl
repnz
cmc
sub
cmp
pop
test
sbb
insb
dec
loopne
push
icebp
aaa
push
xor
hlt
insl
cmpl
test
out
push
pusha
enter
push
leave
xchg
popf
sbbl
lcall
outsl
jb
daa
and
shll
pop
add
mov
jae
fildll
and
fdivrl
ret
mov
shr
and
xor
insl
add
add
aaa
or
cltd
adc
jbe
push
inc
lret
mov
or
add
jecxz
fnstcw
add
lcall
inc
add
repz
jnp
jmp
sub
lret
sub
je
jbe
mov
dec
shl
daa
inc
pushf
or
pop
sti
sbb
jmp
dec
test
xchg
icebp
jmp
add
clc
idiv
push
fcmovnu
aas
aaa
cmp
lock
mov
jle
hlt
sti
and
and
mov
js
subb
xchg
bound
sub
mov
icebp
aam
xorb
add
xor
push
cmp
pop
int3
sub
cmp
or
mov
shl
int3
inc
push
xor
fiaddl
jmp
or
mov
pop
sahf
inc
or
divl
add
test
push
ljmp
inc
adc
mov
dec
js
sbb
mov
dec
leave
sub
mov
add
movsl
das
push
fcomp
leave
lahf
pop
adc
movsl
fistps
add
xor
and
mov
jne
sbb
add
popf
data16
je
mov
jnp
dec
mov
out
imul
xchg
or
jbe
cltd
fwait
push
cmp
arpl
ljmp
shlb
adc
repz
mov
push
mov
insl
aam
xchg
and
dec
push
mov
mov
mov
jne
mov
pop
or
fldenv
stos
or
cmp
cli
mov
pop
enter
loopne
push
mov
lods
test
xchg
mov
mov
sbb
imul
pusha
add
into
cltd
cmpsl
mov
jl
mov
push
and
and
inc
out
std
adc
push
ret
mov
dec
and
and
decl
mov
lret
mov
inc
mov
jns
add
fbld
leave
rcrb
mov
xor
ja
dec
push
data16
xchg
cmp
and
push
testb
es
int3
sub
faddl
lds
adc
inc
cmp
pusha
int
mov
push
push
hlt
js
aam
xchg
loop
mov
mov
or
scas
jo
lods
inc
xor
in
cmpsb
and
scas
fdivrl
jmp
test
adc
xchg
ret
jno
mov
enter
mull
repz
in
sti
mov
and
fnclex
sbb
in
clc
insl
push
jmp
arpl
push
mov
cli
int
sbb
scas
andb
push
bound
movsb
imul
inc
jle
insl
mov
hlt
xor
out
sbb
push
cmp
mov
jo
mov
dec
lock
xchg
mov
mov
popf
mov
movsl
push
xor
cmpsb
stos
test
sub
jne
ljmp
rcrb
jmp
repnz
cmpsb
pop
or
cld
insl
gs
in
push
cmpsl
lret
loop
sub
orb
inc
shrb
dec
movsl
loopne
push
addb
sub
dec
mov
adc
mov
xchg
cmp
push
jmp
shl
sub
scas
push
xchg
inc
or
sub
push
dec
mov
dec
jne
addr16
xor
sub
lods
mov
fwait
inc
test
xor
cmp
std
xor
mov
dec
lods
sbb
mov
cmpsl
mov
aad
stc
add
mov
rcrb
jecxz
push
cmpsb
mov
jl
cmp
pop
es
dec
jle
dec
aas
cmpsl
test
inc
mov
add
rorl
mov
pop
fldt
cmp
mov
shr
jo
dec
loop
incl
sub
push
outsl
pop
push
pop
lret
hlt
adc
sub
jns
loop
repnz
emms
je
test
movsl
adc
mov
stc
popa
imul
or
xchg
pop
iret
xchg
jo
jnp
push
mov
inc
mov
pusha
dec
adc
mov
movsl
movsb
jecxz
sub
sub
leave
dec
dec
fs
insb
leave
mov
xor
pop
push
jne
cmp
inc
sbb
pop
decb
mov
pop
outsl
in
mov
enter
je
stos
xor
dec
divl
and
popf
cwtl
and
sbb
aas
pop
mov
mov
mov
aas
js
ss
push
jmp
push
int3
out
push
test
sbb
repz
jl
cld
mov
mov
mov
sti
cmp
in
icebp
inc
divb
jb
std
jge
and
jmp
dec
stos
insl
into
dec
push
or
add
cmpxchg
sahf
shl
cmpb
sti
fists
subl
jb
cmp
xor
push
pop
shrb
inc
mov
xchg
dec
arpl
aas
lods
inc
sub
fsubrl
dec
push
cmc
xchg
fnstenv
in
ficompl
adc
push
outsl
in
and
or
and
ljmp
mov
and
les
outsb
xchg
dec
dec
xchg
cmp
in
rcll
pop
pop
fnstcw
jge
insl
into
lahf
daa
push
dec
xor
loop
roll
pop
gs
mov
das
and
movsb
stos
sbb
mov
popf
jo
mov
in
xlat
xchg
repz
enter
push
inc
ja
ss
clc
cmpsb
je
movsl
cmc
xchg
cmpsl
cmp
loope
jb
int
adc
xchg
xchg
sub
push
xchg
xor
cld
out
xlat
jno
mov
add
in
sbb
adc
aad
push
rolb
xchg
aas
movsb
ret
cmc
int3
jnp
xchg
cmp
lahf
jl
xchg
push
pusha
mov
mov
outsl
out
mov
arpl
in
or
out
negl
stc
hlt
in
jle
inc
lods
out
ja
mov
jnp
push
push
cmp
add
lock
idivb
xor
mov
shrl
xor
push
fs
mov
fld
and
sbb
inc
out
arpl
imul
add
hlt
mov
xchg
mov
add
cltd
push
div
stc
lret
adc
lock
inc
dec
iret
adc
ret
push
pop
mov
leave
mov
or
push
mov
or
out
or
pop
into
pop
fwait
mov
push
fsubr
or
movsl
andb
stos
in
xor
and
cmpsl
repz
fisttps
mov
or
mov
cli
sub
loope
mov
sbb
mov
sahf
call
aaa
in
enter
rorl
pop
scas
cmpb
sahf
icebp
sbb
jle
ret
enter
adc
cmp
lds
adc
dec
cmc
stc
sbb
mov
adc
int
or
mov
sbb
lret
cmp
arpl
iret
imul
xchg
outsl
enter
sbb
dec
fistl
jns
jg
addb
sbb
cmpsb
cmpsb
popf
out
push
add
push
aad
mov
xchg
xor
fisubl
inc
mov
xchg
adc
ljmp
aam
sahf
mov
mov
popa
and
js
add
pop
adc
jg
pop
test
push
or
in
sub
pop
adc
dec
fwait
inc
add
clc
mov
jno
jnp
dec
xlat
imul
jp
fs
outsb
loopne
jle
cmpsb
enter
and
ret
jp
xchg
sub
dec
rclw
sbb
dec
pop
inc
sbb
aas
es
ret
mov
mov
in
fwait
adc
cmpl
jp,pt
movsl
cmp
or
cmp
adc
scas
movsb
fwait
in
outsl
es
xchg
push
dec
fidivrl
int
lea
test
in
scas
mov
push
insb
test
and
add
enter
xor
pushf
jne
adc
jecxz
sarb
jmp
sbb
lods
mov
lcall
add
in
sub
xchg
call
das
outsl
jmp
jb
fs
inc
jmp
cmovne
ret
jns
or
sahf
and
subl
dec
sahf
sub
sbb
loop
or
loop
jmp
int
fs
adc
ja
lods
sub
aam
out
xor
xchg
dec
into
out
jo
jns
test
js
int
jle
push
add
mov
pop
test
and
sbbl
jne
out
jmp
leave
mov
dec
roll
jne
pop
clc
jns
dec
and
sbb
and
movsl
xchg
adc
xchg
push
dec
dec
gs
in
mov
cmpsl
pop
out
push
xor
mov
aas
cmp
mov
js
sahf
pop
adc
or
aam
fidivrs
mov
jge
fsubrs
iret
out
ret
sti
jbe
mov
fldenv
cmpsb
ret
into
fucomip
ja
or
in
mov
inc
dec
mull
pusha
int3
pop
pop
mov
jne
mov
lret
mov
stos
push
sahf
jns
rcll
fs
jno
or
flds
dec
xchg
xor
sbb
xor
xor
cmc
js
xchg
daa
movsl
fbld
js
jg
sub
negl
jecxz
fistpll
push
cmpsb
mov
jnp
dec
jge
jbe
mov
sbb
aas
jl
push
je
push
inc
xchg
rolb
sub
hlt
scas
ret
dec
jbe
xchg
add
mov
call
nop
ds
dec
mov
xchg
cmp
ret
cmp
pushf
pop
bound
aad
popf
movl
jae
mov
and
stos
out
mov
shlb
pop
leave
lret
frstor
xchg
movsb
xchg
sub
fbld
dec
iret
adc
add
sub
mov
and
stos
pop
push
push
cmp
mov
call
mov
jge
fpatan
lds
mov
mov
repz
sbb
sbb
jbe
sahf
mov
pop
das
clc
sbb
stc
lods
jae
mov
lcall
rorb
cli
sbb
xor
in
adc
inc
and
add
mov
add
filds
es
add
pop
sahf
pop
xchg
insb
loope
testl
shrb
cwtl
mov
sbb
or
loop
mov
and
rcr
ja
iret
fisubl
aaa
sbb
push
mov
sti
movsb
hlt
nop
mov
add
ret
enter
les
scas
lea
fwait
xchg
in
jmp
or
ja
in
bound
mov
scas
jl
fsubrs
push
and
mov
mov
mov
dec
test
jb
sub
lds
jno
dec
and
add
xchg
fxch
add
and
dec
hlt
jae
nop
add
fld
ds
insb
loope
and
stos
push
arpl
repz
mov
pop
rol
sbb
cmp
mov
add
xchg
or
jnp
sub
push
je
int
adc
testb
negb
sub
push
jl
adc
push
je
jmp
fdivr
cmp
scas
inc
scas
xor
popf
jmp
roll
adc
xchg
jmp
repz
sbb
pop
movsl
xor
pop
mov
push
lea
pop
push
pop
push
fcoml
jnp
fdivrs
push
pop
jge
jecxz
push
shll
loope
mov
pop
cmpsl
and
cmpsb
std
mov
data16
cltd
ds
pop
sub
inc
das
imul
pop
jb
mov
sbbl
sbb
js
push
and
dec
insb
sub
sbb
sahf
mov
movsb
sub
xchg
loop
ror
fimuls
jl
push
lods
rcl
mov
jnp
gs
out
cmp
xor
push
mov
inc
aam
mov
xchg
pop
jmp
pop
sbb
aas
mov
xchg
or
aam
data16
xacquire
leave
bound
icebp
add
scas
pop
data16
out
mov
xchg
frstor
jecxz
aad
cs
aad
dec
fsts
dec
push
cmp
and
mov
add
enter
fistpl
ret
in
xchg
jo
cwtl
cmpsb
jmp
adc
pop
jb
mov
sbb
add
ljmp
or
jae
pusha
push
dec
out
inc
mov
jl
fldenv
subb
gs
out
loop
xchg
mov
enter
int3
xor
into
stos
pop
fwait
aas
ss
push
popa
add
add
jl
cmpsb
rep
ja
xor
outsb
adc
int
lods
cmc
das
lock
jbe
jbe
pop
cs
call
daa
in
add
jno
jnp
imul
cmp
sbb
inc
sub
xchg
adc
mov
add
fcompl
outsb
js
sbb
imul
lcall
push
rorl
call
lea
addl
idivl
test
call
repz
aas
out
and
ret
jle
jbe
test
mov
sbb
pop
mov
dec
pop
or
sub
mov
lds
mov
out
es
mov
movsb
movsb
in
fdivrl
cmc
mov
movsl
idivb
out
mov
pop
daa
inc
fisttps
adc
imul
add
cmpsb
cmc
shrb
and
in
or
fsubs
fcomp
std
mov
enter
xor
lock
stc
les
inc
ds
inc
add
xor
fistpll
xor
ficompl
int3
mov
and
cmp
mov
push
out
sbb
arpl
leave
std
add
stos
adc
hlt
ret
and
mov
sub
insb
fs
jg
mov
add
rorl
fimuls
or
scas
cmp
pusha
loope
xchg
jle
mov
mov
xor
sub
std
and
sub
inc
pop
inc
mov
es
jg
mov
or
push
cltd
aam
daa
xchg
out
insl
fildl
out
cmc
push
sub
insl
push
jl
xor
pop
dec
pop
dec
mov
sub
cs
push
loop
push
fs
sub
jno
std
xlat
test
repz
loope
pop
sti
in
add
outsb
mov
sbb
mov
add
mov
js
int
mov
cli
and
and
fisubrl
adc
mov
mov
push
ds
sbb
jl
loopne
push
std
or
push
fmuls
xchg
out
mov
push
xchg
sbb
test
loop
and
adc
ss
push
inc
aad
and
outsl
pop
push
mov
dec
std
mov
pop
cmpsb
dec
hlt
aaa
sbb
mov
dec
mov
in
push
rorb
loopne
or
inc
call
adc
sbb
push
fwait
sti
jbe
popa
lods
loopne
add
mov
xchg
test
int
cmp
addr16
shlb
scas
adc
aas
repnz
add
or
iret
xor
mov
call
stc
imul
lcall
sub
test
popa
jge
xchg
inc
mov
out
cld
lock
pop
and
out
pop
and
pusha
in
lret
jp
pop
or
aam
inc
adc
pop
jno
sbb
test
cli
out
lret
test
push
arpl
fs
out
mov
dec
dec
push
jns
fsubl
lds
mov
call
in
and
cmc
fcmovnu
sbb
pusha
arpl
push
fwait
movsl
inc
and
fisttpll
sbb
mov
or
xchg
xor
in
mov
xchg
into
aas
shlb
outsl
jno
or
inc
xchg
jo
loopne
dec
rol
jmp
test
in
push
sub
test
orl
stos
mov
jne
js
jge
test
iret
xchg
lock
xchg
add
test
mov
sar
rolb
mov
lock
std
das
push
sbb
push
mov
jecxz
add
add
xor
testl
cmpb
mov
inc
dec
pop
fs
inc
movsb
xchg
pop
outsl
int
xor
ror
sar
and
ss
dec
in
rorb
sbb
xchg
into
mov
fdivs
ret
test
addb
inc
xlat
xchg
mov
mov
xchg
jecxz
lahf
inc
mov
jnp
xor
into
mov
sbb
pop
push
cmpsl
inc
testl
add
jg
leave
jae
sbb
out
loop
mov
cltd
sbb
push
xlat
xchg
adc
inc
inc
outsb
push
or
pop
lahf
add
lods
sbb
mov
cs
jg
inc
pop
test
aad
lds
inc
adc
jmp
push
daa
clc
or
xor
loopne
push
cli
scas
xorl
jle
ja
sub
mov
xchg
cli
inc
mov
mov
push
push
ds
cmp
das
jle
mov
pop
popf
or
sub
xchg
hlt
jmp
push
or
das
outsb
push
pop
mov
jp
xor
jno
push
inc
mov
jecxz
mov
and
insl
mov
fisubl
dec
gs
cmp
cmp
cli
mov
mov
scas
out
hlt
jnp
sbb
inc
int
add
in
cmc
cmp
mov
and
cld
fidivrs
jecxz
dec
dec
mov
and
mov
mov
test
movsb
pop
inc
jecxz
insb
or
inc
inc
jecxz
inc
es
imul
mov
cmpsl
fsts
dec
adc
and
push
clc
popf
xchg
ljmp
push
in
sarb
push
dec
fistl
cmp
mov
jns
xchg
jmp
addb
idiv
mov
and
enter
cli
nop
ss
fstps
add
sub
lcall
cmpsl
stos
mov
jo
inc
sahf
push
lock
sub
mov
or
lds
mov
sub
data16
loopne
push
pop
pushf
outsb
fstps
jge
sub
xor
outsb
shrb
xlat
flds
push
shl
sub
outsb
cld
in
lret
outsb
push
pop
or
test
mov
cmc
cmpsl
and
cmpsl
mov
adc
xchg
mov
or
add
mov
dec
sbb
js
in
lahf
js
lret
std
cmp
add
out
adc
mov
popf
jge
mulb
push
xor
es
pop
mov
fwait
testl
cmc
dec
xchg
dec
scas
xchg
or
pusha
jmp
lcall
ss
cmp
sbb
jmp
add
int
jmp
inc
jnp
cwtl
dec
cmpsl
testb
inc
mov
fcomi
mov
out
clc
add
mov
cmpsb
dec
pop
subb
fdivrs
test
push
jnp
pop
xchg
mov
sub
xchg
sahf
ret
daa
cmp
stos
push
and
outsl
stos
xor
out
ja
popf
int3
pushf
in
lods
mov
lods
gs
xor
jmp
sbb
jle
pop
adc
cltd
andl
pop
subl
sti
adc
mov
cmp
pop
repz
aam
cld
popa
xor
jbe
jecxz,pn
or
leave
pop
pop
fucomip
addl
jl
js
pop
nop
push
mov
push
aad
rcrb
mov
or
add
sarl
notb
hlt
sbb
pop
leave
xchg
lea
or
rcrb
lcall
loopne
sti
jle
xorl
call
lods
pop
inc
out
sub
int
push
call
ds
insl
sub
cmpsb
adc
out
cmp
int
push
inc
ljmp
int
jge
sbb
sbb
adc
sub
xor
sub
fsubl
jo
cmp
xor
and
jp
hlt
es
ss
scas
or
ljmp
cli
jns
mov
sahf
cmpsl
xor
sub
pop
movsb
jo
insl
shrl
adc
fldt
dec
clc
arpl
sahf
scas
out
mov
sti
cs
ja
jmp
inc
lret
dec
adc
imul
ret
dec
test
mov
or
es
lret
xchg
sti
inc
dec
inc
adc
add
mov
out
fisubrl
subl
aad
out
mov
shrd
pop
mov
sti
or
mov
hlt
and
dec
xchg
dec
push
arpl
push
and
dec
or
adc
mov
repz
inc
push
mov
sbb
mov
cld
mov
aad
lret
rclb
fwait
cmp
jecxz
push
negb
jb
jne
jmp
imulb
push
rcrb
push
push
mov
pop
scas
stos
push
xchg
jo
or
mov
cmpsl
jl
mov
insl
xchg
fsub
addr16
fwait
pop
xchg
dec
adc
lea
nop
sub
jb
nop
dec
mov
inc
lds
or
test
dec
push
dec
cwtl
nop
xchg
jb
cmpsb
mov
pop
xor
jo
push
sbb
lock
and
cmp
sbb
or
or
mov
out
call
into
dec
pop
ljmp
add
clc
stos
xchg
pop
xor
or
arpl
or
cld
add
repnz
xor
int3
roll
imul
cld
adc
mov
call
pop
lret
mov
in
daa
jge
jg
push
dec
mov
sub
sbb
or
es
or
and
lock
push
mov
mov
testl
sarb
push
mov
cmc
adc
dec
insl
es
out
sub
inc
sti
or
mov
xor
adc
xchg
addr16
pop
sbb
lock
mov
add
sbb
jb
mov
addb
out
arpl
popf
lds
das
cld
mov
lret
rorl
int3
add
push
pop
shr
and
loop
pop
int
das
mov
or
mov
and
pop
sbbl
dec
pusha
add
clc
sbb
pop
movsl
cmp
test
rorl
sbb
movsb
mov
add
call
sti
lcall
les
or
popa
sub
stc
sahf
adc
hlt
jbe
pop
in
xchg
pop
pop
fistps
cs
inc
shrl
push
in
push
adc
aas
cli
adc
jp
enter
sub
pop
test
adc
dec
jl
ficompl
jae
push
addr16
mov
xchg
movsb
outsb
insb
xor
not
ret
cs
push
jg
flds
xchg
in
jp
adc
iret
jl
jmp
mov
scas
mov
sbb
in
xchg
leave
mov
shlb
fcmovnu
addr16
mov
and
adc
mov
cmpsb
pop
call
loope
gs
sbb
lods
stos
dec
lds
leave
adc
jno
repz
test
or
subl
notl
aad
mov
sub
cmp
cmp
mov
data16
movsl
mov
pop
popw
lcall
test
xor
leave
pop
jmp
stos
inc
test
jb
add
xchg
mov
aas
imull
cmp
mov
adc
int3
cwtl
bound
cmpsl
push
cmp
std
sub
push
aam
jge
mov
xor
insb
sbbl
cmp
insl
xchg
in
sbb
in
mov
fidivrl
pop
in
dec
jnp
mov
dec
xor
cmp
push
push
stc
movsl
inc
popa
dec
inc
push
pusha
inc
clc
sub
mov
lcall
rcr
hlt
mov
push
testb
fldenv
dec
adc
pop
sbb
add
inc
ljmp
xchg
aaa
out
movsl
ljmp
rcrb
sbb
sub
pop
or
adc
mov
test
xor
pop
cltd
xchg
cmp
int3
ss
mov
xchg
xor
pushf
ret
adc
or
popa
and
repnz
fcoml
lret
addr16
xchg
jnp
mov
sub
push
fsubrs
pop
imul
jne
std
cmp
in
in
inc
mov
pushf
xchg
dec
and
mov
mov
dec
sbb
inc
adc
js
sbb
imul
and
das
out
lock
mov
jecxz
jl
mov
cmpsb
and
push
pushf
rorl
dec
push
xchg
iret
sarb
movsb
push
xor
add
mov
sti
inc
mov
cmp
daa
mov
ljmp
jno
sahf
cmp
mov
xchg
fistpl
or
ss
push
jbe
out
cmc
mov
aam
mov
clc
mov
loopew
or
xor
push
addr16
gs
mov
xchg
inc
fldl
xchg
sti
mov
mov
adc
push
mov
call
cwtl
clc
push
xchg
dec
neg
sbb
sbb
sarb
lds
mov
or
cli
pop
or
mov
xor
push
aaa
cmp
sbb
sahf
cmp
nop
cmp
adc
sub
adc
into
or
xor
xor
cmp
nop
jl
mov
cmpl
inc
sahf
fcomp
call
arpl
js
xorl
arpl
jg
push
lods
mov
stos
outsb
js
fimull
insb
sub
sbb
ja
dec
ret
sbb
inc
dec
and
fcoms
add
fwait
xor
popa
inc
in
lahf
sub
sub
mov
test
xor
mov
pop
jge
test
rcrl
mov
pushf
hlt
xchg
sub
pop
mov
mov
push
jecxz
add
int3
jle
push
mov
pop
imul
lods
mov
adc
push
hlt
mov
xor
cld
int
mov
je
repnz
add
mov
inc
gs
in
outsl
inc
pop
xor
insl
data16
pushf
ss
shl
cli
cmpb
or
mov
test
and
outsb
stos
hlt
cmp
enter
ss
pop
daa
add
or
pop
dec
ds
adc
pop
jge
dec
mov
sub
dec
lods
in
mov
sbb
xor
repz
xchg
scas
adcb
push
lret
push
es
repz
cmp
bound
lock
movsb
sar
pop
push
loop
jle
ja
popf
fwait
stos
cs
ja
push
addr16
fmuls
ret
cli
or
dec
xchg
inc
out
xrelease
mov
fsubrl
daa
jge
arpl
mov
loop
push
pusha
jecxz
mov
in
adc
xorb
xchg
xchg
jl
mov
insl
aas
mov
mov
xlat
pop
popf
repz
lret
adc
xor
sbb
jb
add
rcrl
iret
xchg
loope
sub
push
mov
mov
mov
fnstenv
nop
les
mov
cmc
lret
test
jnp
dec
adc
jnp
cmp
mov
sub
jns
in
cmpsl
movsb
inc
jne
xchg
in
push
fbld
ret
adc
pop
iret
mov
mov
mov
std
xorb
test
movsb
mov
pop
xor
lds
test
scas
insl
mov
js
dec
ds
push
and
push
add
cmp
mov
xor
pop
mov
and
push
xchg
jne
inc
xchg
shrl
ja
es
out
rorb
jbe
or
lahf
fistps
mov
xor
aaa
xor
push
cmp
push
daa
pop
rorb
push
loopne
push
xor
sub
sub
fdivrs
aas
adc
sbb
xor
das
xor
jo
roll
outsb
jmp
scas
jbe
jmp
jo
mov
and
or
rcr
pop
test
sbb
sbb
push
ffree
in
or
push
pop
xchg
jae
jecxz
rep
jne
jmp
mov
lea
mov
dec
sub
mov
out
pop
mov
push
inc
enter
mov
or
push
xor
sub
mov
btr
sbb
push
push
bound
push
mov
push
dec
jle
pop
and
test
cld
jbe
and
inc
xchg
incl
adc
pop
ss
cmp
lahf
arpl
movsb
xor
pop
or
sub
sbb
orb
adc
out
shrl
xor
mov
dec
jmp
lcall
mov
in
lea
stc
add
jno
mov
dec
lods
push
cmp
jno
bound
cs
out
lcall
pop
sarl
or
cmp
cmp
push
add
cmp
and
in
mov
cmpsb
es
xlat
xor
adc
loopne
push
push
int3
test
jle
mov
imul
popf
test
or
and
fnstenv
mov
mov
scas
jecxz
xchg
test
xchg
jnp
dec
das
sub
mov
cli
loopew
stos
jns
xlat
inc
add
cmp
shll
mov
inc
data16
insl
mov
xor
repnz
lret
jmp
cltd
dec
jo
fdivl
xchg
pop
dec
aaa
add
aaa
sti
xchg
bound
sub
stos
ret
xchg
ljmp
fisubs
loop
inc
xchg
cs
aaa
ja
loope
icebp
int
icebp
js
pop
cmc
xchg
mov
mull
sbb
cli
add
popa
jae
enter
ret
outsb
data16
rol
mov
icebp
ja
adc
mov
or
popf
push
push
inc
pop
insl
push
pop
arpl
nop
scas
sbb
fcmovnu
je
jge
add
xlat
lret
add
stos
pinsrw
js
add
jnp
or
mov
xor
out
es
adc
cltd
aaa
mov
fcmovnb
popa
pop
fisttpl
test
dec
and
aam
div
xchg
rcl
addr16
loopne
inc
dec
in
mul
jno
iret
in
mov
push
loop
cmp
mov
nop
out
sar
sbb
orl
repz
jle
add
sbb
outsl
cmp
inc
js
mov
xchg
mov
sub
cwtl
jp
add
xor
cmp
xchg
pminub
push
cmpsl
lea
pusha
loop
xor
push
aas
adc
cmp
adc
add
lds
pusha
adc
and
pop
xor
dec
dec
cwtl
push
pop
cmpsb
adc
cmpb
stos
into
sub
add
dec
mov
stc
fs
fisttpl
cmp
push
hlt
jl
xchg
ret
clc
cmp
lods
aam
mov
sbb
test
fnsave
cmp
pop
aam
push
or
stc
les
pusha
out
jne
or
mov
dec
mov
lret
sub
mov
xchg
bound
and
pop
pop
in
int
pusha
jl
or
jl
mov
and
lods
inc
ret
imul
in
mov
add
lea
leave
fidivs
push
push
add
fs
add
mov
jl
fimuls
jb
push
push
sarb
into
es
sub
out
rclb
fidivrs
mov
jnp
in
mov
cltd
jge
inc
adc
imul
test
fiadds
shlb
push
aaa
jle
push
inc
push
aaa
jnp
pop
or
setne
mov
push
mov
imul
sub
cmp
rcr
sub
sbbb
adcl
sub
sbb
lock
pop
mov
jbe
das
mov
add
adc
jl
push
pop
pop
mov
adc
inc
pop
jl
jmp
xchg
into
rclb
sbb
mov
ucomiss
pop
adc
mov
mov
leave
cmp
mov
mov
push
imul
sahf
xchg
divb
inc
xchg
xor
add
xor
in
or
pop
pop
sbb
mov
or
pop
xchg
sti
cmpsl
xchg
or
sbb
adcl
lock
fwait
add
pusha
or
pushf
lods
cmpsl
jl
dec
out
or
out
outsb
imul
inc
fsubs
enter
or
out
mov
lret
xor
jb
inc
mov
sbb
jne
imul
pushf
cld
jg
loope
or
or
adc
add
adc
mov
test
adc
daa
jecxz
aad
sub
push
add
and
aas
sub
mov
cmp
pop
lock
sti
test
sub
int
jnp
push
inc
lahf
test
xchg
jbe
xchg
xchg
mov
sti
mov
ret
push
add
stos
icebp
imul
inc
mov
enter
xor
push
sarl
mov
lret
push
dec
repz
ds
jle
mov
fisttpl
hlt
cld
push
cld
loop
mull
xor
sub
movsb
jp
popa
mov
loop
movsb
mov
jbe
xor
push
xchg
dec
sbb
sub
movq
and
mov
rcr
cmp
jbe
lahf
xchg
ficoms
jne
test
xchg
sbbb
test
jbe
or
push
mov
xchg
push
sarl
inc
ljmp
cmp
adc
fwait
xor
xor
pop
aam
popf
mov
arpl
dec
ja
lea
sbb
and
inc
xor
mov
lods
es
inc
mov
push
leave
mov
in
shrl
stos
mov
push
adc
pop
ljmp
dec
inc
rorb
or
sti
sub
dec
popf
xlat
mov
in
xchg
sti
test
dec
mov
push
xor
inc
push
mov
mov
test
push
mov
cmc
xchg
shrl
inc
insb
cmpsl
adc
in
add
inc
clc
and
cmp
push
mov
bound
arpl
std
jle
add
int
mov
adc
add
pop
bound
cltd
xor
xchg
push
jnp
xchg
push
xchg
fildl
iret
rcl
je
xchg
out
inc
or
push
pop
mov
sbb
jp
mov
pop
ficoms
cwtl
out
jecxz
loop
mov
ret
mov
aam
mov
cmp
xchg
jl
cs
arpl
clc
inc
fcmovnu
dec
mov
mov
fidivrl
call
sub
lcall
daa
mov
sti
loopne
pop
cld
inc
cmpl
dec
inc
cmc
movsl
loope
mov
jo
sahf
push
push
sub
jns
in
pop
test
int3
mov
mov
data16
dec
ret
popf
push
scas
push
iret
pop
into
stos
imul
fildl
shlb
notb
mov
out
push
adc
add
repnz
cwtl
movsl
jbe
mull
fsubs
jle
add
mov
and
sbb
add
ret
fildll
shl
cmpsb
das
mov
aaa
jle
xor
mov
outsl
scas
pushf
outsl
inc
fisttpl
or
scas
cmp
stos
sub
data16
gs
popf
or
pushf
sahf
ljmp
dec
fmull
cli
repnz
ja
pop
popf
or
scas
mov
scas
adc
aas
pop
adc
xor
nopl
xor
loope
into
rcll
call
and
xchg
cmc
test
mov
aad
cmp
cwtl
jne
xchg
test
or
mov
cmp
out
cmp
xlat
pop
add
stos
in
lret
pop
fcompl
nop
inc
jae
fnstcw
jno
dec
pop
and
mov
push
or
xchg
push
gs
inc
fs
inc
push
add
daa
cmc
mov
jbe
and
jmp
lret
pop
sub
pop
mov
mov
dec
pop
push
push
sub
mov
add
sbb
lahf
mov
pop
push
fld
aas
ror
clc
jle
shlb
data16
push
add
idivb
addr16
or
sbb
xchg
fnstcw
clc
sahf
das
and
mov
xor
add
mov
or
hlt
pop
adc
rol
ja
sub
push
insl
imul
inc
call
mov
aas
sub
sarl
add
mov
loope
lcall
sub
hlt
jle
inc
add
pop
je
fnstcw
mov
jb
adc
xor
enter
and
clc
out
mov
aas
pushl
cmp
xor
and
jbe
or
mov
or
adc
or
mov
cmp
pop
in
cmpl
sarl
push
sub
push
pop
mov
sbb
sbb
and
lcall
and
sbb
dec
inc
xchg
ljmp
jp
cmpsb
cmpsl
cmc
and
add
jg
lcall
cli
aaa
add
rcrb
bound
pusha
push
pop
int3
pop
add
or
mov
mov
lds
jl
es
mov
insl
xor
jp
test
jecxz
aad
je
push
lods
adc
cmpsl
pop
and
and
add
inc
fsubrl
inc
cmpb
dec
mov
arpl
lret
inc
dec
inc
inc
push
inc
mov
xchg
mov
insb
xor
je
cmp
xorb
out
mov
out
jle
bound
xchg
notb
movsb
sub
add
or
dec
mov
xlat
lds
jle
in
shrb
insl
pushf
int
pop
icebp
mov
iret
in
xor
shl
arpl
pop
or
scas
pop
add
cmpsb
sub
and
mov
idivl
gs
or
rcrb
fnstenv
sub
rcr
push
mov
and
pop
xor
sub
cmp
fsubs
dec
sbb
sub
xchg
inc
xchg
insl
pushf
or
repz
sub
in
adc
and
pop
int
int3
lds
or
cmp
ret
add
clc
sti
mov
into
fistl
mov
sbb
fldenv
rol
xchg
ror
mov
outsb
jmp
lret
pop
xchg
hlt
or
adc
test
xchg
jecxz,pn
fcoms
or
aam
popa
bts
call
movsb
in
sarl
push
in
lods
sub
inc
int3
outsb
or
es
mov
cmp
das
jg
push
pop
lcall
aaa
movsl
mov
push
xchg
pop
int
addr16
adc
cld
jb
pushf
mov
test
mov
and
out
mov
sub
fadds
sarb
daa
pushf
xchg
test
negl
push
mov
xor
out
daa
shl
cmp
dec
xor
ret
pop
xchg
popf
enter
pop
mov
or
add
addr16
xchg
in
ja
shlb
jae
push
out
dec
dec
push
or
ret
inc
sbbb
jle
dec
popa
adc
push
pop
movl
inc
pop
sub
adc
aam
das
jge
in
loop
pop
mov
xchg
and
pushf
loop
inc
add
jmp
imul
fimuls
dec
fs
dec
movsl
cmp
adc
popf
push
xor
xchg
stos
push
dec
sarb
fdivr
scas
out
dec
pop
jle
shr
cmp
fsin
leave
adc
push
jmp
out
jge
or
or
xchg
fldt
or
xor
cmp
xchg
out
fwait
lret
in
xor
stos
xchg
inc
dec
lcall
pushf
push
mov
rorb
dec
xchg
in
lret
sbb
inc
std
xchg
mov
add
clc
mov
inc
out
push
inc
push
pop
xchg
push
pop
and
lret
mov
nop
xor
pop
in
sar
aas
out
iret
pop
sarb
xor
cmp
popf
test
pop
mov
mov
mov
je
push
xor
sbb
cmp
lock
xchg
jae
mov
mov
mov
jo
ss
daa
test
mov
sarl
jmp
out
pop
ljmp
scas
fiadds
sarl
cld
inc
fsub
out
jns
mov
xor
mov
and
lods
add
jb
cmp
mov
and
sub
mov
test
divl
pop
jo
sub
pop
dec
adc
mov
dec
outsl
mov
fsubs
mov
cmp
add
insb
or
jmp
jge
xchg
adc
fldt
in
vmsave
lret
dec
jae
mov
and
jle
pushf
sbb
scas
std
mov
pop
into
das
loop
sahf
xor
cmp
jb
aad
dec
xchg
and
mov
adc
scas
pop
lret
in
fisttpll
lods
cmp
aam
sti
adc
int
sbbl
fisubrs
js
and
mov
imul
fidivl
mov
sub
out
stc
outsb
sti
pop
aas
decl
hlt
sub
and
mov
mov
out
inc
jb
mov
inc
les
mov
mov
sti
mov
bound
cmp
das
cli
mov
mov
mov
push
add
out
sub
pop
inc
leave
enter
xor
cmp
shl
fs
pushf
imul
and
sbb
mov
adc
and
mov
jo
bound
sub
add
fdivr
xchg
sub
hlt
push
push
lods
lods
push
nop
into
add
mov
sbb
lock
int
fcoml
inc
mov
in
mov
out
loope
fistps
arpl
pop
das
push
pop
lret
pop
mov
cwtl
mov
mov
movsl
mov
pop
ja
insb
inc
cmpsb
push
lcall
test
ss
and
cmp
mov
or
adc
cmp
test
mov
jg
popa
xor
mov
dec
mov
aam
fs
lods
arpl
mov
shl
ret
inc
stos
cmp
cmp
sahf
xlat
and
pop
pop
inc
xor
mov
stos
push
add
iret
cmpl
bound
lret
addr16
out
ja
ret
into
push
out
out
js
and
roll
and
xchg
sbb
lods
aam
push
or
inc
insl
push
xor
arpl
or
push
pusha
cmpsl
fsubs
movsb
out
adc
pusha
das
scas
jge
xor
adc
sbb
aas
inc
ja
inc
mov
xchg
inc
arpl
sbb
cmp
int
jo
push
cmp
jns
add
or
lret
and
jbe
aaa
fists
lods
sub
mov
add
popa
scas
bound
repz
adc
mov
push
push
pushf
leave
inc
xchg
sbb
sti
jmp
clc
icebp
jbe
xor
sub
aaa
mov
sub
xchg
pop
test
sub
pushl
loop
sbbb
outsb
lods
jl
icebp
pop
inc
cmc
adc
inc
loope
pop
or
movsb
mov
push
push
leave
fwait
int3
jbe
insb
xchg
push
sbb
pusha
addr16
ljmp
ljmp
push
in
dec
fmuls
mov
cmp
cmp
out
test
pop
test
loope
enter
outsl
lock
outsl
scas
ljmp
and
cmpsb
or
out
xor
popf
dec
mov
jmp
mov
sub
sub
out
cmp
jb
insb
insl
notb
fs
push
idiv
pop
xchg
mov
sbb
pushf
push
inc
push
out
into
add
push
popa
pop
sbb
pop
push
dec
and
sub
cwtl
out
xchg
lods
jge
and
test
jmp
loopne
lea
leave
cmp
enter
imul
out
imul
cmp
fadds
mov
lret
ljmp
sbb
jl
sub
bnd
mov
or
add
out
mov
adc
loope
call
jb
adc
mov
lret
imul
and
nop
inc
cmp
adc
leave
loope
lea
fdivrs
rcl
mov
pop
xchg
or
sub
cs
inc
std
xor
stos
mov
faddp
add
ljmp
push
xchg
inc
jne
sbb
stos
xorl
and
mov
jl
jo
add
pushf
dec
mov
sub
cmp
leave
aas
movlps
cwtl
scas
das
mov
outsb
xor
jne
or
sbb
nop
jge
movsb
clc
das
and
add
push
adcb
and
cli
out
add
xchg
pop
mov
jg
jecxz
xchg
xchg
xchg
data16
inc
pop
jae
inc
cli
incb
dec
daa
cmc
ss
xor
sbb
add
repz
insl
mov
gs
or
cmpsl
popa
test
ret
xor
or
adc
mov
xchg
insb
bound
inc
push
sub
sbb
xchg
imul
jo
movsl
mov
pop
inc
rorb
lcall
adc
mov
clc
mov
adc
test
jb
pop
pushl
add
jno
lcall
fadd
stos
xchg
sub
cmp
push
fistl
fiadds
sub
mov
test
sub
testl
inc
add
int
mov
aad
scas
icebp
inc
jne
jbe
mov
sbb
and
clc
inc
cmpsl
mov
mov
pop
push
cmp
inc
pop
insl
jp
inc
sub
push
sbb
jp
aad
stc
lods
in
gs
outsb
in
pop
cmpsl
sti
mov
jb
aam
scas
mov
xchg
leave
xor
imul
xchg
enter
repz
fisttpl
leave
cmp
inc
insb
mov
btr
insl
mov
xor
loop
lret
stos
cmpb
and
cmp
ret
fstpl
xor
mov
addr16
nop
sbb
jbe
xor
popa
push
mov
rolb
xor
fldenv
sbb
mov
ds
jne
add
dec
scas
scas
inc
or
ss
test
mov
test
aaa
mov
and
dec
pop
inc
sub
popa
or
in
add
ror
or
cli
xchg
mov
sub
mov
inc
mov
adc
dec
daa
and
fwait
mov
outsl
sub
push
and
arpl
mov
mov
cld
popf
and
ret
pop
jne
inc
mov
mov
int
jge
mov
add
and
test
testl
jb
jge
sub
jbe
loop
fcmovnbe
in
addr16
in
adc
sbb
test
sbb
add
and
mov
nop
add
mov
aad
outsb
fisubs
xchg
sbbl
adc
lods
in
subl
shr
frstor
pop
sti
sub
mov
pushf
lahf
mov
shlb
push
clc
loope
mov
cmp
andl
xor
cmp
push
pop
outsl
cmp
and
or
loop
int3
lahf
fisubrs
leave
inc
cmp
popf
mov
int3
mov
addl
stos
imul
fldenv
mov
out
inc
aaa
data16
movsb
imul
loopne
test
stos
dec
js
push
push
sahf
or
negl
cmp
xor
mov
sbb
pop
mov
push
in
scas
sub
mov
aas
aam
push
push
stos
pop
dec
fucomp
inc
push
mov
push
xorb
mov
out
inc
jae
xchg
out
jb
sarb
inc
inc
call
jbe
sbb
xlat
out
int
fcompl
lret
xchg
push
sbb
ds
xor
xchg
fadd
xlat
mov
mov
into
mov
test
cmpsb
mov
aas
das
pop
pop
mov
adc
xor
xchg
cmp
iret
std
push
fistps
pop
insb
out
lds
fisubrs
arpl
ficomps
push
popf
jmp
bound
cmp
adc
push
sbb
outsl
lds
xlat
dec
insb
mov
cli
mov
les
push
dec
rolb
xchg
mov
adc
cli
xorb
jmp
jmp
fidivrs
shll
divps
les
cmpsb
dec
push
in
rolb
aam
mov
adc
and
in
test
mov
incl
jne
pop
dec
mov
dec
ja
xchg
lret
scas
lds
or
cmpl
stc
pop
std
jno
mov
jb
and
cmp
sti
dec
mov
adc
cli
sbb
lods
loop
and
inc
addr16
xchg
dec
mov
dec
fnstcw
mov
js
scas
in
and
inc
fidivrl
pop
jae
inc
jne
cmp
lea
pop
jl
bound
jg
sarl
dec
icebp
jbe
or
xor
dec
dec
xor
jb
jge
mov
adc
jge,pt
xorl
jnp
pop
mov
inc
xor
dec
cmp
add
pop
push
push
test
mov
aaa
sub
mov
in
sbb
xorb
mov
lcall
add
aad
mov
incl
adc
ffreep
addl
sub
pop
push
cmp
jmp
push
aam
daa
nop
or
das
adc
fwait
jl
in
pushf
jge
add
xor
fidivs
inc
test
iret
adc
in
lea
lea
pop
sub
lret
xchg
ret
imul
mov
js
push
in
jne
adc
mov
push
mov
jl
adc
stos
and
cmpsl
fidivrs
data16
pushf
inc
fcmovbe
mov
je
add
mov
jle
rcr
xor
jp
adc
inc
xchg
mov
in
mov
jg
sbb
add
or
xor
dec
xor
or
cld
and
jmp
js
dec
mov
testl
and
mov
inc
nop
imul
jns,pt
enter
jb
pop
xchg
aas
sub
lret
xchg
or
fdivr
outsb
js
xor
dec
mov
mov
testl
ret
adc
icebp
push
mov
dec
mov
xor
sbb
std
cmp
outsb
int3
dec
pusha
out
arpl
add
lods
jnp
sbb
out
xor
pop
xor
aas
xor
jo
cmc
or
mov
add
mov
rorl
cmp
add
or
cmp
dec
mov
cmpsl
adc
mov
pop
out
call
jne
add
jne
push
pop
dec
pop
jg
cmp
and
cmpsb
inc
fildll
repnz
outsb
stos
std
adc
fs
int3
add
cli
jg
adc
daa
das
xlat
into
insl
fdivl
lods
mov
stc
xchg
cmp
pop
adc
dec
cmp
sub
out
mov
mov
and
ret
fst
mov
ss
mov
sbb
sub
je
nop
pop
stos
pop
push
jb
loop
xchg
inc
fiaddl
mov
xorb
rolb
ret
int
push
pusha
and
adcb
xorb
xchg
pop
jmp
lds
lret
ja,pn
pushf
popl
repnz
push
test
lret
stc
aad
iret
inc
mov
mov
xor
mov
dec
cwtl
lret
inc
push
inc
dec
adc
sub
popa
dec
xor
mov
pop
xchg
dec
cltd
frstor
popa
xchg
rorl
jo
lcall
mov
push
push
xchg
mov
ljmp
xchg
mov
cmp
jecxz
test
clc
mov
inc
enter
pop
xchg
test
scas
rorb
pop
jno
lahf
setbe
fs
das
sahf
mov
loop
and
ss
aad
jp,pn
push
pop
movsb
fstl
into
je
ds
xor
aaa
lods
jne
in
fsubr
mov
sbb
std
stos
orl
sbb
push
sti
sbb
mov
out
cmp
push
loop
outsb
mov
mov
fsqrt
mov
imul
ljmp
or
push
mov
xchg
loopne
xchg
cmp
mov
mov
jmp
in
xor
and
out
incl
fsubs
ds
adc
xor
mov
mov
rcll
push
testb
movsl
and
lahf
push
pushl
inc
lcall
dec
inc
fisubs
test
int3
sbb
outsl
loopne
call
mov
cmp
mov
mov
push
sub
cmp
cmp
cwtl
adc
into
repnz
in
or
imul
movsl
adc
fs
test
std
daa
xor
lret
pop
add
jo
daa
bound
mov
cmc
aaa
ret
pop
insl
fs
adc
xor
mov
xor
adc
fbstp
lds
jg
cmpsb
inc
mov
adc
mov
addr16
out
pop
sub
xchg
mov
xchg
cmp
mov
insl
int
xchg
mov
scas
and
adc
add
add
dec
xor
cmp
iret
jle
icebp
dec
and
js
out
mov
or
ficoms
notb
in
ss
xchg
mov
das
adc
stos
fwait
add
syscall
jae
cmp
push
dec
daa
lea
push
pushf
scas
push
xchg
jnp
or
sub
mov
callw
fnsave
sbb
inc
cmp
pop
add
jbe
js
lods
bound
lahf
pop
mov
outsb
mov
scas
xchg
or
lahf
clc
cmp
sub
push
mov
or
stos
and
mov
cmc
dec
push
fisttpl
sahf
sbb
mov
lret
jo
in
jae
test
xchg
gs
jo
xchg
roll
xchg
adc
cmp
inc
loope
iret
enter
mov
add
dec
test
and
mov
sbb
enter
lcall
mov
popf
mov
sbb
fwait
std
int3
mov
xor
jbe
mov
imulb
pop
aaa
push
jbe
xor
ds
cmp
cmpsw
or
fs
jnp
push
adc
mov
sbb
adc
insl
jns
sub
xchg
xchg
or
pusha
out
subb
push
inc
das
das
fiadds
fbstp
out
fs
pop
push
flds
js
xor
mov
and
xchg
cltd
push
mov
pop
xor
xlat
in
fadds
loop
jb
add
add
push
or
popf
lods
loope
mov
test
outsl
daa
movsb
test
loop
decl
xchg
popa
or
mov
pop
xor
xor
cmpb
addb
cmp
sub
idivb
push
cmp
mov
mov
xorl
xchg
pop
mov
inc
cld
das
insl
dec
rcrb
cmc
or
adc
test
mov
mov
shlb
mov
xchg
imul
iret
in
fwait
lret
aad
pop
jo
ja
xor
jmp
mov
xchg
in
mov
cli
mov
or
sub
stos
jno
aas
dec
jecxz
jecxz
js
adc
imul
jmp
xchg
ja
int
shll
flds
push
mov
add
popf
lea
ficomps
rcr
cmp
mul
xchg
cmpsb
lea
imul
pop
lahf
xchg
loopne
mov
xchg
cmp
mov
popa
es
popf
sti
mov
shlb
cmpsl
adc
sub
cmp
sbb
fisttpll
add
mov
inc
out
loopne
cmp
sbb
or
mov
movsb
daa
jge
xchg
icebp
jl
lret
fsubs
mov
out
cmp
and
push
pop
shrb
add
clc
sbb
add
jmp
clc
test
lahf
je
mov
pop
adc
dec
mov
xlat
mov
xor
and
cmc
mov
jge
push
xchg
sub
test
loope
mov
es
popf
sbb
ja
pop
mov
outsl
fdiv
pop
jmp
int
jno
out
and
pop
add
fcomps
push
xchg
ds
push
add
cwtl
ds
jns
dec
inc
xchg
test
popa
mov
fsubrl
ss
cmp
cmp
repz
dec
fisttpl
test
fildl
mov
jbe
pushf
pop
mov
jne
add
mov
sub
into
mov
mov
or
sbb
jae
sbb
xor
fs
sbb
inc
mov
lods
xor
jg
fmull
mov
popa
imul
lea
out
add
mov
mov
out
scas
add
add
js
cwtl
sbbl
xchg
jmp
inc
mov
adc
xchg
inc
and
rolb
mov
leave
adc
push
leave
jo
adc
scas
mov
jnp
mov
pop
push
fnstenv
cli
cmp
xchg
lea
sbb
sub
push
mov
mov
loopne
lods
adc
sub
cs
pusha
pop
aas
dec
mov
xchg
aam
jnp
dec
pop
test
loopne
stos
int3
loop
mov
mov
out
push
daa
mov
lcall
sub
mov
jb
aam
push
pop
cmc
call
fcoms
sbb
lock
push
fucomp
pop
mov
mov
es
inc
std
decb
ss
loop
icebp
and
mov
or
push
mov
cmp
mov
cmp
mov
dec
movsl
xlat
adc
adc
leave
push
jnp
mov
or
lods
repz
das
xchg
pop
fdivrl
or
dec
lcall
insl
icebp
in
aad
out
jmp
movsb
in
aad
add
sub
xor
sbb
and
hlt
mov
sub
cwtl
je
mov
cwtl
mov
es
dec
mov
jg
nop
int3
add
adc
inc
sti
adc
mov
dec
js
mov
pop
xor
mov
xchg
mov
clc
add
mov
jmp
test
adc
sbbb
repnz
xor
call
cwtl
ret
push
add
outsb
das
dec
mov
mov
push
nop
mov
xchg
xor
pop
xchg
inc
test
pop
js
fstpl
push
sub
jmp
jmp
pop
push
iret
jp
ja
xchg
cmovg
lcall
mov
mov
frstor
outsl
dec
hlt
hlt
jns
cmp
push
mov
lock
mov
inc
jne
jo
sbb
add
lret
lret
rcrb
and
std
mov
pop
faddl
sbb
or
inc
js
aas
sub
dec
addr16
inc
imul
push
jl
stc
mov
call
add
pop
and
mov
mov
push
push
jb
mov
push
or
jecxz
pop
hlt
dec
mov
test
lock
pop
rol
mov
pop
push
bound
push
cmp
mov
add
rol
pop
inc
pop
aaa
outsb
and
jbe
add
rorl
in
std
mov
xchg
adc
jmp
repz
rorl
test
jnp
jae
cs
jmp
into
and
outsl
pop
dec
mov
mov
add
jge
sbb
xchg
mov
fisubl
jne
cmpsl
and
rol
fwait
rcrb
cmpsl
or
lret
test
inc
imul
inc
fcmovne
rolb
jl
std
dec
jle
pop
jns
lods
pop
mov
movsb
into
aam
nop
int
mov
mov
stos
sbb
and
dec
or
jmp
cmp
mov
jnp
into
arpl
inc
adc
push
fisttps
sbb
push
jge
sbb
fadds
mov
bound
cmc
sti
or
jbe
cltd
add
rorl
loopne
hlt
sub
frstor
ja
mov
outsl
js
insl
sbb
adc
inc
aaa
cmp
mov
and
lcall
dec
pop
lods
cmc
pcmpeqb
mov
enter
pusha
popa
mov
mov
lahf
pop
shlb
cli
xor
adc
daa
lret
jmp
loop
push
add
loope
rcrl
add
dec
mov
jecxz
mov
rorb
loope
xchg
mov
inc
xchg
pop
cmp
mov
push
push
pop
std
xchg
and
call
inc
mov
repz
xchg
mov
cwtl
sti
jle
pop
sahf
roll
pop
cmp
push
sarl
enter
pop
insb
shlb
pop
xchg
xchg
sub
cld
sbb
xlat
sub
xor
rcrb
lahf
mov
nop
xor
int
in
ljmp
inc
push
push
sub
jne
repnz
xor
xchg
scas
cltd
dec
sti
and
jg
sbb
pop
xor
dec
stos
outsb
outsb
mov
in
ss
idivb
push
aam
xchg
js
lahf
sti
xchg
vsqrtps
fimuls
call
rclb
sub
in
bound
xor
out
loopne
pop
mov
fildl
xor
push
pop
inc
push
jno
int
adcb
lods
lock
sub
sbbl
cltd
xor
adc
sub
inc
push
mov
mov
jp
into
push
jp
inc
mov
push
add
daa
pop
rorb
adc
jno
mov
std
lcallw
xchg
lss
shrl
or
insl
adc
es
lahf
adc
mov
mov
fsubr
lock
mov
xchg
lcall
testb
orb
lock
sub
lock
mov
and
mov
pop
sti
mov
popa
pushl
fsubl
enter
xchg
cs
jmp
test
pushf
mov
shll
jmp
nop
subb
jnp
or
nop
cwtl
sub
pusha
scas
into
mov
mov
jbe
mov
enter
inc
rcr
shr
lahf
scas
ss
stc
mov
inc
shl
and
dec
and
aaa
lds
rcr
mov
sbb
hlt
pop
out
cmpsl
arpl
mov
inc
jne
add
negb
pop
hlt
shl
imul
lea
xchg
scas
xor
sbb
popf
dec
push
sahf
lcall
mov
gs
testl
pop
add
sbb
fcomip
lods
nop
out
ret
xlat
inc
stos
cmpsb
test
dec
les
ficomps
je
adc
pop
lret
xchg
out
and
in
xchg
dec
mov
mov
jl
js
push
ret
int3
lret
inc
pushf
sti
sbb
mov
mov
rorb
add
xor
push
dec
add
test
cmc
mov
scas
mov
in
das
cmp
push
jbe
sub
inc
lea
iret
push
pop
cmpsb
lret
fnstcw
cwtl
sub
ret
imul
imul
push
addr16
and
fadd
mov
out
pop
dec
stos
xor
lcall
mulb
outsl
mov
and
ret
sub
iret
out
icebp
dec
lods
shrb
das
ds
or
fbld
insb
or
and
test
das
movsl
stos
jae
jb
dec
xorl
dec
xchg
sbb
mov
fcoml
mov
loope
into
dec
pop
push
add
xchg
ret
cltd
imul
xchg
nop
mov
jae
jae
push
add
adc
aad
inc
addr16
insl
pop
ljmp
ljmp
pushf
dec
inc
and
mov
fxtract
adc
cwtl
mov
jbe
in
mov
jo
aaa
in
into
popa
dec
pop
jmp
stc
lds
ljmp
cwtl
jbe
and
mov
pop
cwtl
adc
sbb
xchg
ss
push
pop
pop
sbb
stos
pop
xchg
inc
imul
cmp
aas
filds
gs
cltd
xlat
repz
fwait
cli
fcomp
lahf
in
scas
es
hlt
and
fmull
mov
mov
imul
ror
or
cmpsl
movsb
pop
mov
xchg
mov
mov
adc
dec
aam
jl
cltd
sub
ret
xor
mov
and
lods
mov
into
xor
outsl
aad
leave
push
cmp
mov
rorl
leave
fs
jg
shlb
loope
push
jo,pn
push
xchg
dec
push
add
fxch
flds
jo
mov
mov
shrb
xchg
mov
sbb
das
in
xchg
sub
iret
mov
hlt
stos
inc
cld
push
movsl
jo
pop
xchg
ret
dec
stc
je
shlb
loopne
cwtl
pop
fcmovnb
aas
cmpsl
repz
clc
adc
test
mov
dec
ss
daa
fnstenv
xlat
aaa
push
sti
or
cwtl
or
rorb
lcall
adc
inc
mov
push
arpl
test
xchg
pop
stos
test
mov
in
aam
push
jge
mov
adc
cmpsl
jge
lods
es
push
and
arpl
adc
stc
scas
std
pushf
cld
ret
dec
inc
sbb
inc
and
mov
push
out
test
add
sub
call
push
cwtl
or
and
dec
aaa
rcl
and
sti
pop
out
scas
call
mov
or
sub
test
lahf
fsubs
pop
push
cmpsb
xchg
pop
jmp
pop
cli
push
lea
sbb
jmp
enter
inc
movsb
cmp
mov
dec
push
inc
xchg
pop
mov
dec
sbbb
dec
in
mov
das
imul
dec
xchg
jmp
adc
out
dec
inc
mov
lea
stc
cmpsb
mov
push
js
fldenv
lods
subl
stos
push
push
jg
loope
sahf
xor
scas
popa
cmp
out
das
inc
jbe
mov
inc
out
push
pop
nop
sub
fiaddl
mov
mov
imul
loopne
shlb
jae
fldt
out
sbb
add
adc
pusha
mov
ret
movsb
adc
xchg
push
mov
into
cltd
cld
out
mov
sbb
jmp
lock
sub
scas
inc
cld
fwait
loopne
adc
or
and
jge
jg
mov
mov
pop
into
mov
xlat
scas
leave
cmpsb
and
cwtl
or
ret
pop
mov
divb
adc
push
jle
mov
js
hlt
shr
nop
shlb
in
mov
mov
pop
lahf
dec
lret
jecxz
sub
sub
push
icebp
mov
jge
sbb
ds
sbb
sub
adc
add
jo
xchg
or
enter
mov
imul
dec
pop
or
daa
pop
addr16
jmp
push
stos
mov
aad
test
lea
ss
push
xchg
xor
xchg
stos
pop
push
xlat
inc
xlat
data16
cmp
enter
and
sub
fs
fldt
jnp
mov
stos
push
jle
mov
pusha
movl
scas
xor
loope
ja
mov
fbld
in
enter
or
in
rolb
adc
mov
fbstp
test
cmpsl
mov
push
add
lret
jg
mov
jmp
dec
sub
mov
push
xor
pop
mov
and
mov
fsubrs
cli
popa
jle
fdivs
jl
cmp
fwait
roll
scas
dec
stos
inc
les
inc
addr16
mov
mov
jb
aaa
mov
dec
faddl
hlt
and
data16
pushf
std
cmp
sbb
in
shll
pop
mov
sbb
pop
pop
pusha
mov
popf
insl
lret
sub
mov
popa
jecxz
mov
xchg
std
sti
jg
dec
dec
mov
jmp
rcll
adc
fdivrl
bound
jecxz
sti
or
push
mov
arpl
push
movsl
add
scas
les
inc
iret
test
sbb
xchg
andl
adc
push
aad
mov
stc
jle
jecxz
notl
mov
sub
rorl
cwtl
inc
dec
notl
add
icebp
cmp
push
scas
cmpsb
mov
sub
sub
cmp
push
mov
sbb
inc
sub
mov
test
arpl
outsb
inc
cmp
cmp
mov
jp
or
xchg
stos
push
imul
sbb
loop
mov
push
ds
xchg
test
xchg
push
push
in
inc
lds
sub
mov
je
pop
hlt
mov
dec
lahf
sti
adc
cmp
jecxz
nop
jbe
sub
jne
in
inc
jb
inc
lds
cs
mov
push
push
inc
movsl
push
pop
jl
push
xchg
sbb
lds
push
test
int3
ret
aad
lret
or
cld
sar
les
sbb
aad
es
and
sbb
pop
xchg
ret
inc
add
xchg
mov
push
adc
repnz
inc
sahf
mov
mov
jnp
ljmp
cmp
jecxz
test
sbb
pop
pushf
loop
repz
addr16
mov
andl
jecxz
out
or
inc
mov
dec
fisubrs
xchg
jno
jle
popf
and
cmp
loopne
sub
xor
and
cmpsl
jb
dec
fs
sarb
imulb
mov
sbb
jnp
xchg
xchg
in
cmp
push
int3
pushw
std
push
fwait
lds
popa
mov
jb
jmp
stos
imul
and
inc
push
xchg
jns
arpl
cmp
fisttpll
cmpsb
fists
cwtl
shrb
sti
lret
scas
scas
cmpsl
mov
gs
shll
xor
mov
cwtl
jo
cmpsb
jmp
or
ds
repz
push
sub
popf
and
pop
pop
xlat
dec
popa
cmp
adcl
and
cmpsb
imul
cmp
int
push
or
and
fcmovu
je
xchg
in
push
sub
xchg
pop
jle
dec
push
aad
insb
les
sub
or
push
add
lods
cmp
push
out
popf
dec
hlt
out
push
or
mov
jno
pop
lods
fiaddl
sbb
fmul
push
jno
test
mov
xchg
mov
xchg
pop
outsl
push
pushf
jne
cmp
push
lods
and
out
pop
sbb
les
pop
push
inc
cs
movsl
mov
cmp
movsl
pop
lcall
ret
lret
mov
scas
pop
xchg
test
mov
lret
pop
imul
push
or
add
xchg
lods
pushf
mov
xor
es
orl
out
loope
cmp
lea
movsl
lds
cld
push
inc
sub
adc
dec
mov
lea
push
jno
mov
data16
loop
pop
mov
add
xchg
adc
test
insb
xor
or
xchg
pop
movsb
cmc
add
decb
je
pop
mov
jo
sub
std
mov
or
mov
xor
outsl
fwait
inc
in
push
sarb
in
sub
jnp
inc
adc
mov
insl
jae
add
xor
outsl
addr16
movsl
into
push
repnz
loop
and
mov
jno
arpl
cmp
and
data16
gs
repnz
jb
ljmp
mov
imul
dec
add
jl
adc
jb
loop
sbb
pop
inc
adcl
or
inc
inc
insb
xchg
movsl
int3
jge
sbb
gs
jns
cmp
sbb
mov
and
cmp
rcrl
loopne
mov
jmp
int
mov
movsb
pop
je
std
mov
clc
xor
shl
pop
decl
add
adc
adc
inc
out
arpl
dec
aam
pop
mov
subb
and
loopne
push
lea
jb
mov
xor
mov
push
loope
fwait
lds
nop
fcmovnbe
mov
ret
cli
in
mov
jb
fidivrs
call
divl
hlt
fstpt
cmpsl
push
or
pop
xchg
outsl
sahf
aad
out
xchg
mov
repnz
xchg
subl
cld
push
sahf
sub
cmp
data16
rcr
cmpl
sbbb
testb
and
mov
cs
test
xchg
push
divl
aam
in
xchg
pop
insb
hlt
imul
divl
int
fiadds
or
scas
jl
scas
enter
insb
xchg
data16
jbe
aas
nop
push
jecxz
in
clc
jo
call
or
test
xchg
push
dec
popf
push
xor
jle
and
shll
jge
shl
mov
movsl
inc
decl
add
shrb
pushf
mov
addb
hlt
pop
xchg
mov
add
dec
pop
xorl
popf
leave
sbb
xlat
in
or
push
repnz
rcrb
out
ss
lahf
scas
and
mov
mov
xor
hlt
aam
mov
mov
hlt
mov
mov
adc
repz
mov
xor
ss
repnz
sarb
cmp
testl
orb
mov
push
filds
sbb
aaa
inc
mov
in
add
loop
sbb
jecxz
lods
testb
xchg
addr16
cmp
pop
add
jmp
pop
jmp
movsl
dec
dec
sub
movsl
adc
mov
repnz
push
fwait
pop
xchg
pop
sub
cmp
adc
mov
adc
lret
dec
movsl
mov
and
mov
jl
enter
mov
cltd
mov
push
or
cltd
mov
dec
inc
adc
jecxz
jmp
int
pushf
popf
push
aam
sbb
stos
sbb
in
pop
aam
daa
pop
mov
sub
sub
cmpsl
sbb
shl
xchg
enter
cmpsl
das
bound
cmpsb
mov
inc
stc
sti
cmpsl
inc
xchg
imul
mov
lret
mov
fistl
ret
push
cltd
sbb
pop
ret
popf
cltd
and
call
cmp
lcall
pop
insb
inc
cmp
jns
test
das
lods
pop
adc
mov
stos
and
xor
sti
mov
ja
js
imul
xchg
lods
jl
adc
int
mov
ja
inc
or
and
sub
inc
or
enter
popf
jge
pop
jb
and
pop
nop
dec
jmp
pop
sub
adc
clc
ret
popf
inc
jns
aam
add
mov
adc
push
xchg
shrl
jecxz
add
push
push
mov
add
mov
int
imul
or
mov
jmp
mov
cmpsl
cmc
cld
out
ja
mov
out
aas
js
dec
int3
ja
in
jae
mov
sbb
add
dec
jle
jle
outsb
loopne
push
add
push
xchg
mov
or
mov
mov
scas
std
mov
sbb
loope
cmp
in
inc
je
into
and
jl
pop
mov
xchg
stos
push
and
adc
insl
xorl
stos
jns
cmpsb
xor
das
xchg
cltd
jge
adc
jmp
test
cs
cmp
fnstsw
or
hlt
pop
out
sub
sub
dec
repnz
testl
mov
outsb
insb
push
frstor
sarb
leave
je
sbb
and
inc
mov
push
or
mov
std
jecxz
lods
inc
es
addl
sub
dec
jne
fadds
in
pop
inc
popa
repnz
pand
add
pop
sbb
test
lea
pop
adc
jecxz
ret
and
arpl
cmp
adc
mov
sbb
mov
stc
adc
in
and
or
push
std
and
loope
lret
mov
les
xlat
xchg
mov
push
shrb
mov
sub
pop
sub
fimuls
cmc
xchg
cltd
mov
jle
les
mov
xchg
popf
jl
lods
cmp
cmp
psubsb
xor
jnp
lret
test
inc
enter
sbbb
mov
push
mov
add
daa
clc
mov
cmp
pop
es
stos
insb
enter
cmp
loop
mov
mov
pop
in
pop
je
xchg
inc
sbb
int3
mov
add
sbb
sbb
lea
icebp
imul
mov
dec
mull
fisttpl
int
sub
out
pop
push
scas
adc
out
test
mov
and
adc
add
jb
aam
cli
push
xor
stos
popf
xor
pop
mov
pop
call
mov
repnz
rorl
subb
jb
push
into
and
mov
in
xchg
cmp
std
ja
and
mov
lods
imul
aad
je
push
in
xchg
jnp
sar
push
dec
or
nop
sub
and
xchg
xor
dec
das
int
outsl
popf
xchg
pop
addr16
test
popa
in
dec
jbe
mov
pop
mov
insl
lea
push
add
mov
jp
inc
fwait
dec
mov
insl
aaa
adc
in
adc
inc
xchg
sbb
es
xor
and
dec
add
sub
lcall
jo
jge
xchg
xchg
mov
xchg
inc
movsb
sub
int3
lcall
in
pop
in
je
dec
pushf
lret
mov
xor
mov
in
inc
sbb
shlb
or
mov
in
pop
sbb
scas
mov
sarb
or
add
shl
divl
fs
in
or
mov
xchg
popa
add
mov
repnz
jle
stc
cmc
imul
setl
cmp
or
cld
pop
push
fcmovbe
and
sti
dec
pop
dec
add
fdiv
lret
lahf
jb
fidivl
jnp
mov
inc
repz
lock
pop
lds
inc
mov
add
stos
lahf
push
jl
jle
pop
aad
lret
xchg
inc
scas
sbb
jne
inc
popf
mov
xchg
mov
mov
adc
mov
jno
out
lcall
add
cmpsb
or
mov
dec
cltd
in
or
ja
jecxz
lods
sub
adc
imul
int3
xchg
into
xchg
xchg
cmp
js
inc
fcmovbe
andl
pmaxub
and
repnz
mov
jl
mov
and
xchg
mov
fstl
orl
imul
add
xchg
xor
pop
inc
xchg
pop
xor
lret
aam
aas
pop
xor
js
outsl
cmp
sub
sbb
out
mov
test
inc
inc
pushf
cmp
popl
imul
lcall
dec
fcomip
hlt
in
lds
mov
and
and
ljmp
imul
ret
and
mov
cmp
ss
cmp
stc
ss
divb
ljmp
pop
mov
aad
cmp
jg
popf
adc
pop
xor
sahf
adc
sbb
or
js
loop
jmp
or
sahf
cwtl
cmp
ret
xlat
clc
mov
std
add
add
mov
outsb
mov
or
adc
push
into
xchg
inc
jae
lea
jge
pop
pop
mov
or
inc
repz
or
push
loopne
out
imull
pop
and
or
jle
adc
cmp
jae
fiaddl
in
cltd
imulb
ljmp
mov
lds
cld
leave
ds
xchg
call
pop
icebp
cmp
insl
xor
fwait
push
pop
loop
dec
push
call
rclb
sbbl
add
lock
outsb
in
lahf
xorl
inc
fbstp
pop
sahf
or
mov
inc
stos
scas
aad
push
sub
mov
es
movb
lods
ljmp
xor
push
lahf
test
push
mov
popa
test
sbb
jno
sarl
in
or
pop
push
dec
in
ljmp
adc
mov
je
loopne
aaa
fildl
or
jb
mov
add
mov
insb
mov
out
mov
mov
lods
jmp
fisttpl
repnz
xor
mov
mov
je
adc
xor
xchg
push
adc
dec
or
mov
sti
out
mov
inc
adc
fwait
jb
stos
aaa
sbb
ficoms
jns
lret
mov
lahf
aaa
xchg
sub
mov
add
mov
ss
mov
in
push
mov
inc
push
mov
scas
fsubp
xchg
inc
pop
xchg
je
push
push
scas
imull
adc
test
pop
sub
insb
push
mov
arpl
sub
mov
jmp
icebp
hlt
mov
jae
icebp
leave
xlat
or
pop
jns
sbb
mov
mov
ret
jl
int3
push
mov
mov
pop
into
pop
mov
stos
ficomps
fdivrs
ljmp
push
jecxz
xchg
leave
mov
cwtl
test
lods
loope
mov
insb
xchg
imul
xor
stos
inc
push
mov
jns
mov
movsl
fs
xchg
lcall
xchg
ret
mov
inc
gs
pop
lret
test
lods
gs
in
test
aam
lods
cmp
push
mov
xadd
inc
and
aas
pop
push
pop
pop
mov
ret
cmp
je
out
xchg
jp
aas
nop
out
inc
sub
ja
jnp
push
sbb
sub
fcmovbe
movsb
sub
jns
imul
fcompp
ds
mov
mov
mov
jp
sbb
das
mov
mov
mov
cmp
adc
add
rolb
mov
fists
push
fwait
out
aam
inc
sbbb
mov
mov
popf
jno
xor
xor
loope
mov
loop
repnz
in
out
sbb
push
cwtl
ret
push
and
xchg
mov
jno
xor
clc
cmp
lea
dec
dec
push
xchg
xchg
mov
lret
loope
aas
icebp
movsl
lock
orps
imul
hlt
push
loopne
int
test
add
mov
or
cmpl
jbe
push
stos
pop
mov
push
dec
jne
sbb
dec
je
js
and
add
rclb
inc
pop
mov
mov
stos
testl
sbb
sub
mov
jno
clc
jmp
xor
pop
inc
jl
sbb
sbb
leave
mov
mov
ljmp
cmpsl
xchg
pop
ss
aaa
arpl
fisubrl
jne
mov
fwait
popa
ret
xor
sti
jnp
mov
out
stos
xor
test
icebp
mov
pop
push
das
add
and
in
xor
or
push
push
enter
stos
loop
sbb
sahf
out
mov
push
rorl
nop
rep
push
ret
dec
xchg
and
inc
fmulp
stos
pushf
idivl
jp
dec
adc
cmp
ds
shrb
aad
popf
inc
jl
sub
aam
ds
insl
add
loope
idivl
ja
and
sub
xor
or
or
or
and
add
call
stc
sti
push
push
ret
into
out
adc
leave
pop
lret
shl
rcrb
popa
mov
shl
movsl
out
push
cmp
sub
sbb
fwait
mov
and
push
sbb
fistl
insb
sub
mov
insl
dec
movsb
rolb
mov
sbb
cmp
mov
out
mov
rcrb
shrb
xchg
scas
inc
inc
mov
pushf
arpl
xchg
adc
mov
sahf
out
push
fdivs
xor
fwait
aam
add
fstpt
shr
sbb
push
test
and
repz
sub
mov
cmpsl
subl
cmp
sub
mov
add
pop
scas
mov
jl
sub
or
jns
cmp
mov
mov
push
les
push
lret
int
lods
sub
cmp
push
popa
sub
arpl
lret
jne
inc
push
pop
add
cwtl
sahf
xchg
fmuls
sub
test
jo
adc
add
mov
jecxz
push
sbb
std
mov
insb
ss
dec
in
rorb
cmp
jmp
hlt
mov
je
test
jns
pop
sbbb
and
inc
pop
ficompl
sbb
mov
shll
leave
std
xchg
inc
imul
cwtl
inc
testb
sbb
shrb
stos
outsb
pop
add
sbb
and
xchg
pop
int3
imul
push
sti
hlt
call
inc
ja
mov
outsl
pop
cmp
pop
xor
out
faddl
jge
cmp
sub
icebp
ficomps
or
sbb
xor
push
movsb
push
js
hlt
data16
lock
pop
jmp
idivw
xor
aam
imul
clc
mov
aam
xchg
push
aaa
clc
jno
xor
imulb
sub
push
cmp
push
faddp
lds
dec
lock
mov
adc
add
mov
add
inc
scas
xorl
dec
pop
cltd
add
cmp
mov
js
jp
test
xor
dec
sub
jmp
push
sbb
std
lret
sbb
into
das
add
pop
and
movsl
xchg
dec
push
xorl
xchg
insb
push
xlat
mov
sub
popf
in
fisubs
mov
iret
loopw
mov
loopne
adc
cld
fwait
clc
movsl
fcmovbe
test
push
enter
pxor
lods
stc
jl
dec
mov
or
test
insb
mov
paddusb
jmp
std
push
dec
cmp
mov
adc
mov
mov
mov
mov
mov
out
cmp
inc
cmp
fsts
pop
sub
aaa
pop
ds
ret
imul
sub
rclb
inc
stos
sbb
pop
mov
jmp
faddl
imul
daa
push
dec
push
stc
xchg
scas
and
add
scas
aam
out
hlt
cmp
pop
aam
dec
insb
mov
pop
loopne
and
pop
cmpsb
mov
movsl
push
inc
cmovge
iret
jb
pop
aam
lret
pop
roll
push
sub
incb
clc
ret
inc
lret
push
bswap
enter
mov
pushw
fcoml
test
es
fs
mov
or
rcll
cltd
jno
sarl
dec
cmp
int3
xchg
or
imul
and
push
xchg
test
iret
inc
jmp
add
in
xlat
outsl
xchg
icebp
fmulp
enter
push
xchg
pop
pop
loopne
shl
inc
dec
mov
cmpsl
ss
ljmp
fadd
sti
xchg
xor
std
inc
lods
pop
push
mov
mov
push
arpl
aam
dec
mov
lock
xchg
lods
ja
mov
mov
mov
rolb
shll
enter
mov
inc
mov
inc
lret
xchg
jae
int
xor
cmp
cmp
test
mov
sub
out
push
pusha
ret
or
xorl
inc
ret
aad
dec
aad
repz
jne
dec
xchg
in
jb
mov
pop
pusha
push
adc
add
shl
sub
mov
adc
jno
call
movsl
stc
inc
pop
add
mov
add
jecxz
push
test
push
mov
stc
inc
or
frstor
out
test
sub
into
xlat
sbb
cmp
dec
outsl
int
cmp
or
push
pop
xchg
mov
rcrb
pop
dec
out
mov
xor
push
jnp
push
dec
in
iret
mulb
rcll
js
sub
add
adc
cmpsl
xlat
pop
push
das
push
fs
movsl
lcall
mov
pop
fmull
lcall
and
mov
xchg
sbb
xor
cld
dec
adc
jg
adc
test
push
or
outsb
cmp
sub
dec
mov
jg
mov
sbb
sbb
or
es
adc
jp
test
and
xchg
mov
xor
sub
mov
pop
mov
shr
pop
dec
vmovapd
repnz
ja
jg
adc
push
jmp
std
lock
xor
adc
fstpt
pop
out
mov
mov
push
jo
sti
sub
or
les
and
mov
loop
daa
rclb
mov
sbb
jg
mov
push
loopne
mov
jns
mov
idiv
sti
inc
out
cmpsl
dec
iret
addr16
jo
push
test
inc
mov
add
xor
push
jl
dec
hlt
dec
jb
cli
add
or
es
icebp
inc
mov
sub
cmp
push
sbb
aaa
sti
fwait
sarb
xor
js
pop
mov
jo
xor
xchg
or
and
loop
cld
popf
call
imul
gs
fcoms
leave
pop
dec
xchg
xchg
jmp
clc
ja
fildll
aam
cmp
fdiv
je
call
add
leave
sub
popf
adc
lahf
cmc
les
add
or
imul
push
push
jo
mov
popf
stos
sub
sahf
jo
addr16
rcrb
fwait
insb
inc
mov
or
in
push
cmp
lods
dec
lock
jb
dec
rcl
test
or
aaa
flds
pop
mov
cmpsb
jmp
stos
mov
idivl
jp
aaa
and
pop
cmp
mov
ja
sahf
sbb
dec
sbbl
test
repnz
and
pop
dec
mov
arpl
sbb
jl
fwait
roll
gs
mov
inc
daa
xchg
cmp
jnp
loop
cmc
sbb
cmp
xor
cmp
ljmp
enter
cli
mov
push
loopne
aaa
mov
adc
test
jl
mov
in
xchg
add
adc
jnp
inc
lea
and
jns
mov
adc
and
int3
push
inc
push
stc
loope
pop
and
fistl
daa
adc
and
jbe
in
sub
xchg
and
scas
and
sbb
mov
pop
in
aam
clc
sbb
insl
sbb
cltd
stos
pop
xor
mov
jge
xchg
aas
fstpl
ss
add
mov
mov
mov
rorb
out
outsl
push
inc
push
das
cmp
or
fidivrl
xchg
xor
jns
insb
and
popf
mov
jge
mov
outsb
nop
jb
mov
pop
lahf
das
cwtl
jnp
mov
in
addb
sub
mov
sub
fmuls
jl
cli
sub
inc
mov
mov
imul
mov
xchg
inc
loope
inc
fildll
jle
xrelease
xor
jmp
leave
cmpsl
push
dec
jno
dec
scas
pop
mov
dec
cmc
scas
sub
or
adc
mov
ja
icebp
lret
mov
movsl
and
jmp
fildll
es
inc
sub
or
test
or
and
push
insb
in
popa
cltd
sti
lock
nop
scas
cmpsl
mov
cs
pop
hlt
sub
sub
icebp
icebp
xor
fidivrl
xor
or
push
xor
ret
push
jns
push
fdivrs
mov
rcr
mov
test
mov
inc
and
rcl
mov
rorb
out
mov
cmpsl
xchg
lret
call
ret
xchg
popf
jg
add
lret
xchg
or
mov
in
xchg
loopne
test
stos
enter
or
sbb
lret
arpl
inc
test
or
sub
mov
adc
loope
mov
movsb
mov
sbb
sub
and
aad
and
int
lods
cmpsb
dec
pop
push
sbb
cltd
pop
push
or
pop
sub
fcoms
stos
aas
movsb
jo
or
pop
inc
cmp
shrl
push
movsb
push
jns
lret
movsb
stos
xchg
repnz
lcall
rcrb
fidivs
ret
shlb
adc
mov
scas
xlat
mov
fadd
popa
lds
je
into
and
sbb
vcvtps2pd
test
sbb
stos
test
sub
and
pop
xor
mov
out
arpl
jecxz
cmpsb
sar
cmp
cmp
das
dec
and
and
cmp
push
sub
mov
insb
scas
cmp
or
jmp
dec
bound
jmp
mov
jb
and
in
loopne
aad
popf
aaa
push
std
insl
xor
sbbl
adc
sub
enter
mov
scas
cmp
or
pop
shl
movb
movsl
cs
jb
mov
mov
aad
inc
pop
sub
test
iret
xor
or
mov
test
pop
in
ja
cmp
data16
leave
test
sbb
in
mov
lcall
push
sbb
mov
sub
xor
cltd
mov
or
sbb
sub
adc
jl
mov
jne
leave
push
lcall
aas
rcll
inc
and
cmp
pushf
shlb
xchg
dec
push
into
mov
and
test
movsl
push
xlat
jl
cmp
xor
sub
jmp
rcrl
push
gs
sbb
pop
int3
dec
push
movsl
ficomps
add
mov
fwait
mov
in
push
stos
push
mov
daa
adc
ficoml
mov
into
daa
sub
mov
jle
insb
test
push
test
mov
out
and
dec
bound
lret
repz
push
iret
xor
mov
loope
pop
mov
jae
cmp
roll
mov
fwait
clc
mov
dec
add
out
xor
adc
popa
lds
mov
aaa
rclb
mov
xor
stos
mov
inc
jl
aaa
mov
xor
sahf
daa
mov
push
pop
mov
cmp
pushf
mov
mov
sbb
add
sub
cmpsl
in
pop
pusha
push
add
sub
jmp
xor
pop
mov
out
ret
mov
jl
stos
jmp
clc
imul
dec
mov
lock
nop
cmpsb
repnz
mov
lock
pop
cmpsb
sbb
mov
dec
call
mov
out
xchg
scas
push
pop
xchg
mov
or
ret
and
xchg
sbb
out
fstpl
movsl
jle
adc
sub
cltd
push
out
mov
cmpsb
mov
fistpll
addl
mov
cmp
rcr
fwait
jno
fcompl
mov
xor
fs
scas
pop
lret
fsubl
stc
insb
dec
adc
pop
sbb
sarl
mov
mov
movsb
shrb
loop
xchg
imul
mov
xor
dec
sub
sbb
les
rolb
mov
xchg
push
xor
inc
push
mov
pop
jae
les
mov
ds
mov
adc
xchg
movsb
jl
cmp
add
roll
mov
and
sub
or
mov
mov
notb
dec
fwait
mov
sbb
push
inc
jns
and
call
xorb
addr16
sbb
pop
mov
sarb
movsl
pop
xor
je
inc
sub
inc
sti
jecxz
or
xchg
loopne
daa
out
push
ss
movsl
inc
jmp
pusha
sbb
push
outsb
xor
cli
dec
les
out
addr16
cmp
jmp
pop
data16
jg
sub
rcrl
or
cmp
cld
or
mov
popa
testl
or
push
fisubl
out
in
lret
scas
xchg
push
jae
lret
mov
mov
test
mov
mov
dec
dec
xlat
in
jecxz
arpl
inc
push
int3
mov
ret
out
xor
push
pop
adc
sti
sbb
mov
insb
mov
sub
push
shrb
stos
dec
push
dec
ds
inc
lds
stos
xchg
out
xor
call
shr
movsb
mov
int
or
imul
iret
jmp
sub
adc
icebp
loop
divb
not
insl
cmp
mov
push
fstpt
sbb
mov
and
sbb
cli
sub
loopne
jmp
sbb
mov
add
or
sbb
out
mov
push
mov
or
movsl
in
adc
jbe
or
int
mov
inc
inc
xor
jo
xchg
imul
push
add
nop
push
insl
sub
pop
sahf
movsl
pop
xchg
push
mov
testl
iret
xchg
in
out
jl
into
or
sti
sub
mov
iret
xlat
push
inc
insb
es
push
enter
fldt
add
xor
inc
dec
or
gs
into
xor
sbb
nop
repz
push
arpl
mov
and
das
insl
loop
or
pop
test
add
sub
xor
scas
cmp
cmp
fists
notl
sub
gs
xor
fistl
dec
iret
gs
lret
sbb
push
add
outsl
fmuls
imull
inc
movsb
aas
add
in
hlt
adc
jp
sarl
loop
lea
push
dec
mov
repz
loop
mov
or
lds
pop
jbe
movsb
out
pop
insl
loopne
in
scas
scas
push
js
dec
clc
mov
jbe
shrb
pusha
mov
cmpsl
xor
push
popa
aam
xchg
adc
fmull
xor
adc
ret
cmpsl
inc
andl
subl
or
sub
enter
xor
mov
mov
in
loop
cmp
push
iret
or
xchg
or
loopne
jns
aaa
shlb
mov
repnz
fiaddl
jno,pn
insl
push
jge
in
repnz
jl
xchg
or
out
push
xor
fnsave
mov
mov
in
pop
jnp
ret
adc
sti
adc
mov
test
les
rcr
daa
ds
in
sub
pop
jmp
adc
push
stos
in
dec
pop
jp
push
lods
mov
dec
sbb
xlat
fwait
add
mov
push
fisttps
adc
cmp
cmc
or
sub
sub
sbb
lea
jecxz
push
ffreep
fimuls
push
sub
scas
test
pop
loop
and
fdivl
cmp
sahf
dec
sub
sbb
loop
sbb
lcall
imul
or
xchg
lods
pop
push
pop
sub
mov
sub
inc
dec
dec
mov
stos
ret
ret
add
jnp
mov
mov
pop
jmp
mov
in
outsb
scas
fs
inc
jp
movsb
add
mov
or
xor
pop
mov
mov
fildll
adc
fidivs
xor
jg
xchg
sarl
lea
or
fldcw
mov
push
insl
dec
jecxz
dec
inc
loope
push
das
pushf
add
xor
mov
pop
cmc
adc
ss
ret
divb
mov
and
in
sti
popf
mov
sets
mov
mov
sbb
roll
dec
push
dec
xchg
aaa
test
incb
xrelease
push
sub
outsb
push
cld
xchg
and
cmpl
and
push
push
mov
xor
adc
mov
xlat
sbb
xchg
cmp
xchg
test
cli
push
imul
mov
fsubl
sti
jmp
add
xchg
es
add
sbb
and
in
fmuls
shll
pusha
push
jl
mov
xchg
je
lret
mov
xor
lret
xorl
repnz
jns
cmp
adc
add
cli
mov
mov
mov
inc
scas
sub
or
sub
dec
xchg
cmpsl
out
push
cmc
test
sub
inc
mov
push
gs
jp
jo
mov
add
xor
or
shrl
adc
sub
std
es
and
in
pushf
leave
mov
xchg
cmp
push
inc
xor
stc
dec
cmp
in
adc
fstpt
inc
data16
mov
stos
xchg
out
lcall
arpl
and
pushf
arpl
xchg
mov
push
enter
xchg
mov
aaa
dec
cltd
ret
cld
xor
mov
mov
fbld
inc
icebp
ds
inc
pushf
adc
add
mov
vcvtpd2ps
push
sbb
dec
stos
push
gs
sbb
enter
xchg
aad
inc
xor
xor
and
or
loopne
cwtl
adc
test
lahf
push
mov
je
jb
cld
push
xor
xorl
ja
mov
fstl
aas
movsl
mov
cmpsb
jns
test
xor
or
xchg
fstl
xor
out
addl
cmp
xchg
dec
sti
enter
pop
jo
jbe
mov
mov
dec
fcoms
sahf
pop
xchg
aas
xchg
in
das
dec
dec
cmp
cli
fnstsw
pop
push
call
inc
pop
cmc
mov
rol
shlb
popf
test
into
das
add
sbb
dec
cmp
inc
cld
and
sub
in
mov
popf
fisttpl
das
por
sub
aas
add
dec
mov
and
lods
movsl
ljmp
mov
adc
adc
pop
mov
test
pop
pop
addb
xor
mov
sbb
fists
mov
ficoml
jbe
xchg
cmpsb
adc
xchg
cmp
mov
push
cmpsl
iret
test
push
jle
scas
fcomps
fdivl
pop
lods
pop
inc
fs
inc
mov
add
jnp
or
sbb
iret
test
jecxz
cmp
dec
out
dec
add
push
lret
dec
push
pop
jge
jecxz
mov
mov
inc
fmull
push
jle
lcall
lock
je
gs
mov
cmp
mov
pop
push
mov
in
flds
jnp
mov
imul
pop
pushf
push
pop
or
or
outsb
jg
arpl
mov
inc
mov
cmp
xchg
or
pop
test
sarb
xchg
add
sub
jbe
enter
int
cmp
ret
enter
add
cld
ret
mov
test
ss
fs
jp
cmp
dec
pop
mov
adc
lret
orb
mov
add
cmp
jl
jno
inc
push
in
repnz
sub
nop
mov
test
jbe
insb
dec
out
iret
mov
es
daa
push
inc
mov
ds
fsubs
negb
mov
dec
lock
aam
push
jmp
push
push
das
std
push
movl
out
lods
cmp
aad
adc
aad
imul
cli
pop
pushf
repnz
daa
mov
sub
das
mov
mov
inc
push
jp
arpl
les
jbe
ljmpw
int
das
push
cmpsl
popa
dec
scas
movsl
sub
outsl
inc
xor
cmp
aad
cmpb
test
xchg
aam
pop
cld
push
or
cmp
test
pushf
pop
jnp
jno
mov
daa
mov
out
out
sbbb
sub
cmp
sbb
or
repnz
xor
das
push
dec
push
xor
cli
jecxz
insb
xor
idivb
mov
rol
mov
clc
in
and
add
test
or
dec
cmpsl
jp
ret
ljmp
addr16
sbbb
test
push
xor
jle
test
push
push
mov
imulb
xor
cs
inc
xchg
add
out
cmp
cmp
cmc
leave
lds
les
es
xor
jne
mov
xor
sbb
fwait
xchg
icebp
lea
popa
pop
xchg
jecxz
cmp
cmp
push
sbb
loopne
dec
inc
lods
int
in
rorl
nop
jae
in
lea
lret
sub
inc
push
add
fsubs
sbb
rcrb
or
dec
ss
jne
cmc
pushfw
mov
roll
and
fadds
sahf
xlat
and
adc
add
mov
ficomps
orl
mov
loope
fistpl
fdivs
push
pop
shlb
fs
pop
pop
sbb
pop
adc
add
cs
dec
or
inc
not
xchg
cwtl
fisttps
mul
add
fidivs
ret
aam
xchg
jp
mov
cmp
xchg
pop
xchg
hlt
movsl
mov
push
dec
push
fisttps
jecxz
sbb
xchg
cmpsb
mov
shl
out
cli
and
lock
sbb
insl
mov
mov
clc
or
mov
fbld
in
mov
jns
mov
adc
aaa
jne
sub
lret
inc
xor
into
mov
shll
cmc
outsl
in
arpl
addr16
sub
mov
inc
stc
stos
or
pop
fs
bound
lret
mov
dec
sub
cmp
fldcw
jae
mov
pop
dec
pop
mov
adc
inc
pop
cmc
sbbl
lret
sub
in
scas
jp
movsl
lcall
cmpsb
xchg
loopne
jo
xor
push
test
aaa
ja
cmp
notl
or
mov
mov
add
sarl
lret
pop
cmp
sub
repz
mov
jo
adc
sbb
cs
cmc
es
sbb
sub
gs
je
shll
xlat
xor
lods
dec
into
pop
mov
or
nop
inc
fisubrl
out
sub
ljmp
stos
pop
sub
pop
ret
incb
rolb
add
sub
mov
aas
cmpsb
dec
movsb
push
xchg
test
test
mov
lods
iret
or
xchg
pop
outsl
je
sahf
mov
inc
out
enter
sahf
adc
cmpsb
loopne
lcall
mov
pop
lahf
xchg
jnp
das
pop
jmp
push
aaa
mov
shrl
aas
cmp
xchg
add
cmp
and
sub
lock
repz
or
pop
test
dec
dec
xor
enter
rclb
mov
and
loope
jle
adcl
xchg
jo
jg
pop
add
cmp
jg
iret
push
xor
cmp
sbb
roll
push
loope
cs
rcrb
jo
or
movsl
push
arpl
sbb
test
jg
popf
out
cmpsb
fsubrs
hlt
ret
ret
push
dec
insb
lcall
ror
inc
push
int
int3
and
mov
mov
loope
and
cltd
jle
xchg
imul
popa
out
cmpb
shrb
inc
xor
adc
sub
jo
sub
aas
xor
xchg
xchg
movsb
arpl
xchg
scas
out
arpl
popa
pop
jns
sub
dec
jae
bound
cmp
push
inc
xchg
lret
pop
jecxz
je
cwtl
or
mov
js
pop
shrl
sub
and
push
push
je
cs
push
je
pushf
jb
mov
out
cmp
out
xchg
xchg
icebp
stos
jns
dec
xor
in
test
addr16
mov
in
fsubp
xor
mov
ja
das
jns
cltd
ss
sbb
pushf
in
mov
dec
mov
mov
dec
inc
ror
sub
repz
lahf
sub
jecxz
push
push
call
add
push
jo
inc
push
popf
pushf
out
sbb
insb
xchg
cmp
inc
enter
or
mov
push
add
jnp
aad
dec
out
sbb
scas
push
dec
pop
loop
in
push
add
popf
into
dec
xlat
leave
lea
cwtl
arpl
inc
daa
aas
jge
repnz
mov
xor
pop
mov
jg
mov
mov
mov
xacquire
fstl
mov
ret
dec
inc
or
gs
dec
pop
add
push
jmp
jb
mov
mov
adc
cmp
lcall
insl
daa
pop
stos
insl
sbb
jmp
adc
cmc
or
jg
xchg
inc
cmp
and
xchg
mov
in
inc
mov
sbb
fnstcw
push
leave
imulb
shr
push
mov
sahf
out
test
cmp
inc
mov
inc
shll
stos
outsl
loopne
xor
clc
mov
stos
mov
insl
inc
sub
subb
or
push
pop
loop
insl
inc
mov
or
mov
jns
add
out
jb
cltd
jo
nop
movsb
rol
jp
fisttpll
mov
push
pop
out
cmp
lret
shlb
popf
pop
ds
push
sahf
jnp
arpl
fwait
xchg
jb
fldl
pop
dec
std
jne
add
bound
scas
hlt
sbb
imul
xchg
bnd
xchg
dec
fdivp
rcrb
xor
lods
and
xor
mov
mov
sbb
int3
repnz
sub
lock
jecxz
cmp
xchg
lea
in
xchg
loop
push
mov
pop
movsb
and
add
jnp
cli
stos
jecxz
fsubrl
mov
lds
fisttpll
mov
data16
mov
out
mov
jno
jge
sub
nop
dec
or
mov
push
jae
xchg
or
shr
testb
mov
movsl
jno
push
nop
mov
xor
jg
adc
sub
xchg
punpcklwd
xor
lods
mov
pop
test
jb
arpl
push
enter
insb
aas
lahf
loop
pop
pop
lods
xor
test
sbb
imulb
mov
mov
pop
test
mov
sbb
hlt
push
pop
xor
mov
mov
mov
leave
xchg
out
stos
xchg
mov
test
sti
jl
dec
outsb
ja
jbe
adc
repz
out
cmp
dec
js
push
or
insl
mov
ficoml
mov
fists
cltd
xor
int3
std
std
insb
lret
int
inc
push
push
movsl
notb
pop
dec
cwtl
fldl2t
xor
outsl
sbb
sub
xchg
or
mov
movl
inc
mov
orb
repnz
xor
jl
and
insb
cmpsl
int3
hlt
inc
push
daa
push
pop
rcrb
inc
outsb
adc
push
sbb
sub
sbb
adc
cmp
ja
mov
daa
jnp
enter
pop
cmpsl
fdiv
add
mov
add
inc
out
mov
fists
jbe
pop
sti
out
jl
sbb
popf
pop
inc
addr16
in
and
pop
loopne
xor
hlt
int
les
dec
ss
in
inc
and
fdivs
mov
fwait
hlt
xlat
jnp
addr16
in
or
push
pop
aad
xchg
adcb
pop
sar
xchg
sbb
and
mov
loop
mov
push
inc
mov
mov
sbb
inc
js
enter
roll
cltd
incb
pop
pop
aam
sub
pop
js
call
pop
jp
xchg
xchg
leave
lods
repz
fs
xor
mov
adc
or
ss
imul
xchg
and
push
imul
les
pop
xchg
rclb
mov
xchg
int
ficoml
movsb
decb
imul
test
jmp
dec
or
movsl
addb
mov
pushl
lods
dec
je
lds
out
xor
push
pop
dec
idivl
adc
pop
or
push
popa
sub
mov
scas
mov
jecxz
int
lods
xor
aad
sub
icebp
imul
adc
pop
out
cwtl
or
dec
dec
jl
scas
sbb
dec
or
sbb
sub
and
lods
sub
enter
notb
scas
insb
jbe
sub
dec
es
stos
idivl
gs
pop
frstor
arpl
push
das
mov
inc
data16
sarb
enter
or
pop
lods
add
mov
imul
lock
mov
in
mov
push
jp
cli
sbb
and
adc
aad
int
std
push
int3
loop
bound
dec
loop
adc
sub
mov
shr
lret
mov
popf
push
jmp
lods
out
pop
mov
jle
divl
ret
fwait
pop
stos
sub
imul
packuswb
decl
test
lods
cld
aas
cmpsb
sarl
mov
push
mov
mov
cltd
cld
lcall
popf
cmp
aam
mov
and
leave
xrelease
xchg
sub
xchg
and
in
aaa
sbb
or
jne,pn
out
jo
repnz
adc
cmpsb
adc
dec
jbe
sub
sbb
and
inc
inc
fldt
dec
xchg
and
cld
mov
dec
xchg
in
ret
adc
filds
jae
testb
hlt
fistps
xorb
test
xchg
or
dec
push
nop
dec
cmp
loop
mov
stos
bound
lods
cltd
in
lret
xchg
enter
mov
jge
lock
cmp
or
dec
add
mul
jno
dec
pop
or
mov
sub
cmp
int
popa
lds
stos
xchg
xchg
mov
jge
pop
bound
sub
ds
stos
inc
push
test
popa
jg
pop
xchg
push
xchg
inc
mov
bound
xor
decb
aas
mov
pop
sub
arpl
aad
xchg
clc
xchg
mov
sub
shlb
xor
pop
jge
mov
xchg
inc
scas
pushl
gs
push
xchg
lock
pop
inc
mov
ja
ja
cs
aam
cmp
jecxz
sbb
mov
lcall
aas
inc
cld
out
nop
mov
push
push
xlat
mov
out
pushl
rol
dec
lods
add
inc
sbb
pop
aas
mov
in
addr16
jae
test
cmp
imul
lods
paddq
sub
adc
xchg
in
mov
cmpsb
aam
mov
sub
loopne
cs
mov
pop
in
or
sti
fistpll
repz
or
push
push
push
xor
pusha
add
fistpll
cld
les
push
xchg
push
imul
cmp
aam
mov
imul
icebp
pop
jnp
xchg
add
cmp
movsb
cs
push
fidivrs
dec
fsubrs
mov
or
push
mov
sub
ret
and
fbstp
and
out
xor
pop
sbb
adc
shrb
jmp
pop
pop
js
dec
in
mov
and
stc
xchg
adc
int3
xchg
pop
jbe
mov
xor
inc
xchg
push
in
cld
syscall
cmpl
or
inc
rcr
and
into
jl
incl
sarl
rolb
imulb
xchg
and
out
out
mov
mov
test
or
push
sbb
xchg
ss
enter
in
mov
out
fwait
inc
mov
cmovnp
ret
mov
cmp
or
pop
xchg
movsb
and
xchg
out
out
xchg
ljmp
xchg
xor
jge
add
scas
cmc
mov
mov
and
jne
mov
and
adc
push
lock
add
xchg
adc
stos
popf
jecxz
aas
lret
cmp
rclb
push
mov
ror
or
dec
dec
dec
imul
xchg
lea
bnd
xlat
ds
xchg
adc
stc
jl
ljmp
repnz
int3
sbb
je
mov
push
xchg
out
sub
push
or
aaa
lock
leave
and
imul
bound
gs
xor
gs
pusha
and
add
aaa
out
ret
sub
add
sti
aas
loopne
dec
adc
cmp
cmpsb
and
addr16
mov
cmpsl
and
into
or
cli
xchg
lcall
and
sub
mov
mull
movsb
das
jae
add
push
push
clc
test
loop
bnd
xor
mov
loop
in
arpl
insb
add
insb
loop
rol
push
xor
xchg
pushf
imul
shlb
in
movsb
add
divl
mov
ja
fildll
sbb
cmp
or
inc
jne
lods
dec
pop
inc
imul
arpl
out
xchg
arpl
sub
jbe
add
pop
jecxz
ret
aad
fstpt
jcxz
in
out
xchg
cmp
jle
xrelease
fisubl
mov
jns
lahf
sti
adc
push
fsubs
xor
lret
lea
lock
push
imul
sbb
mov
sub
fldt
mov
xor
in
test
loop
out
cmp
mov
push
loop
fincstp
lods
clc
les
jns
test
inc
mov
push
mov
inc
jb
pop
add
cmp
adc
and
adc
sub
fnstsw
pop
sbb
inc
push
sbb
jbe
mov
repz
xor
xor
call
mov
pop
push
mov
popl
das
xor
mov
aaa
mov
push
xchg
loopne
addr16
or
or
sbb
fsubs
jns
adc
in
push
sub
addr16
movsl
cmp
push
mov
int
push
inc
mov
mov
gs
adc
outsl
sbb
shl
push
jecxz
in
or
jb
xchg
cmp
pop
mov
test
rcl
push
or
jp
mull
bound
shrb
pop
arpl
clc
cld
mov
pop
xchg
iret
and
xchg
push
sub
pop
add
jae
xchg
stc
dec
sahf
mov
out
cmp
add
mov
xor
icebp
lret
mov
add
push
mov
adc
scas
test
out
lret
dec
out
sbb
push
jg
call
push
out
cmpsl
icebp
ljmp
xchg
mov
sbb
inc
mov
adc
add
gs
lss
cmpsb
cmp
dec
push
mov
inc
stc
xlat
imul
aas
out
sub
aas
cmp
push
sub
test
or
and
cwtl
lods
xor
je
xchg
mov
test
fsubrl
popa
int3
hlt
out
aaa
and
cltd
mov
stos
inc
std
lret
int
dec
mov
pop
push
lret
insb
ret
jo
mov
and
mov
jne
in
mov
mov
out
push
push
ljmp
insl
mov
cmpsl
lods
inc
pop
and
ficoms
inc
jmp
sub
xchg
es
xor
pusha
sub
xor
pop
xchg
jae
or
sub
xlat
or
test
mov
cmp
sbb
test
mov
mov
push
push
push
pop
xor
adc
loopne
jp
mov
jle
mov
pop
jmp
mov
sub
loop
adc
pop
jg
sub
mov
mov
jo
pop
mov
into
sbb
and
xchg
adc
xchg
rcrb
mov
add
cmp
jmp
dec
lods
mov
adc
and
jg
cld
imul
mov
notl
mov
or
stos
jbe
test
mov
mov
jecxz
test
fs
filds
mov
jp
dec
push
push
enter
mov
and
xchg
inc
in
stos
sbb
clc
or
mov
out
push
mov
adc
jle
lds
rcrb
ja
outsb
xchg
mov
jbe
lock
push
xor
movl
cwtl
hlt
in
sbb
cwtl
push
call
and
jecxz
dec
adcb
mov
data16
mov
js
dec
sub
stos
int3
shrb
addr16
gs
jnp
sub
ja
inc
mov
fisubrs
push
arpl
ss
test
xchg
out
lret
jmp
xor
adc
lock
lret
mov
mov
lret
lods
mov
add
push
pushf
test
dec
sbb
stos
dec
pop
insl
out
in
jnp
pop
mov
dec
cmp
xchg
mov
sti
push
movsl
mov
lods
das
xchg
mov
pop
jle
xor
sub
cld
sar
rol
jbe
in
jle
sub
jle
mov
mov
test
pop
fcmovnb
xorl
pop
jl
repz
cmpl
sti
fs
push
cltd
fcompl
loopne
push
shlb
or
loopne
jle
dec
sub
outsb
dec
les
pop
pushf
clc
cmc
push
scas
xchg
bound
aaa
lret
add
cmp
xchg
mov
dec
aas
mov
sbb
jno
loop
call
insb
fdiv
mov
daa
or
les
push
mov
mov
inc
icebp
sarl
add
push
jno
push
xlat
pop
mov
mov
ljmp
dec
imul
adc
lret
mov
adc
mov
and
xor
jb
mov
in
lahf
dec
jecxz
mov
jb
jno
mov
xor
push
out
idivb
jge
add
push
xor
loope
ret
adc
in
out
fneni(8087
jne
cmp
jge
movsl
dec
pop
dec
xor
mov
data16
mov
mov
test
cld
mov
pop
daa
addl
adc
imul
pop
outsl
push
add
dec
aas
ss
lock
lock
sbb
pushf
pop
into
sub
jo
clc
and
notb
je
aad
mov
push
xchg
inc
ss
adc
or
inc
jp
add
pushf
lahf
stos
pop
mov
sub
test
fwait
push
push
or
cwtl
add
sub
mov
and
inc
add
or
inc
cmp
xchg
call
lods
outsl
fists
out
stos
aaa
inc
mov
js
movsb
add
iret
dec
or
xor
cmp
jo
mov
rorl
cmc
dec
cli
xchg
rcrl
ret
mov
fisttps
lret
cli
js
mov
adc
sub
daa
adc
das
xlat
nop
cmpsb
and
sub
pop
mov
inc
lcall
pop
lea
push
flds
pop
xlat
mov
mov
sub
loop
clc
jne
sahf
or
xor
adcb
push
cmp
repnz
lret
lret
lret
jae
xchg
repz
ret
xchg
insl
test
jns
mov
sub
arpl
mov
cmpsl
pop
lahf
ljmp
into
not
pusha
mov
inc
inc
jl
sub
int
inc
xor
lcall
inc
in
aad
xlat
clc
pop
out
mov
and
outsl
sbb
pushf
or
inc
xchg
mov
imul
data16
or
adc
and
and
cwtl
mov
ret
sub
or
dec
mov
rcrl
mov
dec
gs
daa
movsb
loop
scas
enter
arpl
sbb
push
adc
stc
ljmp
sbb
sbb
jg
jmp
movntq
je
out
call
push
das
fwait
mov
in
bound
and
jne
and
pop
fldl
dec
push
sti
and
pushf
or
lods
into
pop
mov
imull
jmp
pand
stc
test
in
pop
stc
push
pop
jp
repz
aaa
cmpsb
sub
movsb
int
shl
jecxz
xor
mov
imul
out
add
jnp
mov
popf
mov
inc
gs
mov
xchg
je
rcrl
nop
sub
mov
mov
lods
mov
int
adc
enter
lods
and
daa
test
ss
inc
mov
mov
mov
xor
mov
dec
cli
jno
add
out
je
adc
dec
into
aam
cmp
pop
in
loop
cwtl
or
out
rcrb
sub
scas
mov
mov
xchg
mov
mov
loope
adc
pop
out
adc
test
js
cmp
adc
sahf
push
xor
jne
outsb
sub
adc
test
xlat
lock
mov
push
sahf
data16
out
or
pop
cmpb
and
push
sub
hlt
mov
or
mov
mov
fcomps
js
lods
cli
int
les
inc
pushf
insl
sbb
fmull
pop
sahf
test
imul
aas
outsb
icebp
cmp
pop
mov
mov
out
hlt
je
call
add
pop
dec
mov
cwtl
test
test
mov
xor
cwtl
cld
je
lods
lods
decb
inc
inc
sbb
sti
ret
ja
in
stos
imul
mov
xchg
jae
pushl
dec
rcll
fs
xor
outsb
in
fnstcw
add
pop
daa
cmp
std
jp
sahf
mov
test
pop
dec
jae
out
fisttpl
sar
xchg
stos
popa
dec
cmp
push
cmp
sub
outsl
aad
inc
cmp
loopne
dec
imul
mov
js
or
push
data16
adc
sub
lcall
scas
cmp
cmp
mov
and
aaa
test
pop
sub
pop
psraw
add
cmpb
push
leave
mov
cld
push
push
ret
push
in
sbb
movntq
out
lret
insb
dec
xchg
loope
mov
scas
mov
stc
icebp
push
int
dec
scas
dec
scas
jo
and
sub
push
clc
int
popf
lret
and
push
fs
xor
rol
stos
test
mov
gs
mov
dec
test
dec
fcompl
or
out
mov
movsl
mov
shld
int
mov
jecxz
aad
xchg
jne
inc
in
popa
out
stc
das
mov
adc
adc
xchg
jp
push
lods
jo
adc
jle
test
jne
cvtpi2ps
popf
test
inc
sub
rcl
movsl
lcall
out
ds
add
daa
gs
mov
cmp
adc
dec
cmp
add
int
mov
push
scas
dec
fldt
repz
xchg
subl
cmp
sti
cli
scas
adc
xor
pop
jbe
xchg
adc
ja,pn
mov
mov
mov
lds
inc
jns
or
dec
test
cmp
or
mov
xchg
sbb
jae
popa
test
mov
mov
add
stos
pop
iret
fsubrl
cmp
mov
scas
dec
sbb
ljmp
push
cmp
aam
test
sahf
imul
orb
int3
inc
mov
sar
data16
cwtl
and
jecxz
es
cmp
sbb
push
lds
xchg
and
hlt
sub
push
xor
xor
shll
sub
mov
jns
aas
das
mov
addb
push
inc
and
mov
pushf
mov
outsb
imul
pop
ja
sarb
int
imul
jns
daa
push
sbb
cmp
sahf
clc
in
fdivrp
mov
fmuls
fstl
cmpsl
sub
push
xchg
int3
push
sub
movsl
shr
push
ljmp
in
xlat
sub
mov
add
ja
mov
stc
popa
mov
into
push
cmp
mov
mov
xlat
ret
enter
push
mov
xchg
add
inc
cmp
call
mov
sbb
jp
inc
or
and
jns
out
and
xor
jno
sub
inc
scas
cmc
out
lock
enter
es
jns
icebp
adc
mov
lods
mov
jb
push
push
and
lods
dec
mov
push
adc
orb
and
sub
ss
mov
dec
aad
cmp
inc
sbb
or
xchg
out
call
in
test
clc
xor
add
mov
icebp
fnstsw
jo
clc
cltd
mov
inc
in
ret
add
popf
jno
xlat
stc
in
xchg
mov
insl
stos
and
and
jo
clc
shll
inc
movsb
xchg
sbb
lret
insb
dec
mov
std
push
imul
or
sub
test
insb
loope
adc
or
std
xor
repz
mov
add
sbb
jns
adc
sub
dec
ja
cmpsl
scas
test
pop
ret
cmp
popf
loope
dec
adc
stc
in
or
stos
mov
pushf
cmp
adc
cmp
mov
xchg
push
dec
adc
int
ja
stos
insb
xchg
inc
jmp
cmp
mov
fwait
cmp
mov
ret
nop
and
push
sub
data16
pusha
mov
andl
mov
cmc
xchg
into
leave
jae
add
push
fbstp
mov
mov
pusha
lgs
cmpsb
xchg
cmpb
nop
inc
into
xchg
stos
jge
int
into
enter
jmp
mov
arpl
sbb
add
int
xchg
movsl
dec
fwait
add
clc
mul
pop
ja
or
cmp
mov
adc
push
mov
daa
stos
jg
or
jbe
lock
lahf
lcall
sbb
aaa
pop
aaa
arpl
cwtl
mov
aas
jp
xor
mov
dec
or
jl
aas
adc
inc
xor
jns
cli
jb
dec
jge
mov
jne
push
adcb
jbe
xor
addr16
or
in
adc
sbb
and
ret
int
xor
pop
cmp
pop
sti
lods
fisubrs
adc
icebp
lret
in
iret
and
cltd
push
xor
push
outsl
jge
loop
dec
jp
pop
ret
arpl
cmp
jg
insl
popa
dec
movb
adc
lret
mov
and
fistpl
inc
adc
inc
stos
add
arpl
adcl
lret
test
es
mov
fwait
std
jns
loop
icebp
lods
jnp
sbb
data16
outsb
mov
mov
cmp
ret
insb
adc
mov
and
rcrl
dec
mov
or
sub
out
andb
std
fwait
mov
je
push
xor
test
sti
inc
mov
and
loopne
and
sub
movsb
ret
int3
xor
jg
pop
mov
lds
pop
shrb
in
mov
or
test
mov
pop
xchg
sbb
pop
push
dec
repnz
adc
inc
or
add
call
mov
data16
lahf
mov
sub
leave
jb
bound
sahf
lods
arpl
mov
je
mov
cwtl
inc
cmp
and
aaa
jns
sbb
mov
or
ja
insb
rcl
ret
or
inc
les
cmp
stc
movups
dec
cltd
in
int3
sbb
add
inc
fucomip
mov
cwtl
jnp
cld
jmp
jb
cwtl
mov
frstor
and
ret
dec
xchg
push
inc
xor
adc
pop
daa
stos
mov
mov
insl
add
push
xor
mov
insb
sarb
ja
push
cmc
and
addr16
push
into
dec
pop
inc
jno
adc
adc
aas
stc
adc
jns
xor
jg
loopne
cld
fmul
lods
lods
xor
cmp
jecxz
out
add
mov
sub
pop
pop
push
dec
sub
aas
repz
fisttpl
cmp
shrb
idivb
dec
dec
fst
cltd
daa
adc
jb
add
xchg
xor
pop
or
dec
iret
insb
pop
sub
jle
test
sbb
pop
lods
int3
xchg
fcomps
xor
sbb
loopne
cmp
push
mov
mov
jne
adc
ljmp
repnz
bound
lods
loop
and
arpl
cwtl
cmp
test
inc
add
pop
mov
int3
xchg
xchg
popf
and
sub
mov
inc
add
and
fidivrs
addr16
pop
lock
ja
or
inc
mov
mov
jp
imull
fwait
aas
add
je
pop
int
hlt
cmc
xchg
loopne
and
push
and
fbstp
inc
sbbb
popa
inc
loop
sub
cwtl
insb
lret
push
mov
lahf
std
mov
push
mov
mov
mov
push
loope
mov
loope,pt
flds
cmp
mov
ret
or
or
or
mov
xor
sub
pop
xlat
inc
imul
jae
jno
inc
jns
call
mov
adc
jns
lea
aam
int3
pop
mov
add
js
jae
rcrl
ss
push
lods
sub
push
in
pop
in
mov
stos
xchg
mov
cmpsl
xchg
xor
cmp
test
mov
and
and
pop
arpl
dec
xchg
sbb
incl
jle
das
xlat
clc
xchg
aaa
xchg
mov
jg
pop
mov
push
mov
xchg
lods
and
push
fs
lahf
out
inc
sbb
mov
dec
add
inc
jmp
testl
dec
xor
sahf
repz
rcll
arpl
addr16
jmp
lds
cpuid
jmp
add
scas
jg
test
repnz
hlt
push
or
inc
pushf
insl
call
xchg
sbb
cmpsl
inc
scas
ret
popf
push
lea
xor
imul
mov
adc
pop
adc
add
push
aam
inc
movsl
dec
dec
push
mov
add
in
push
sub
push
cld
sbb
test
lret
je
fdivs
lock
or
loopne
sub
push
add
cmp
xchg
aad
jno
and
add
add
adc
dec
pop
out
or
mov
cmp
pop
mov
sub
cmp
add
test
push
mov
inc
mov
jge
ret
pop
lahf
xor
sub
dec
or
aaa
lock
out
mov
add
aas
pop
sahf
inc
and
sahf
fwait
repz
push
inc
jne
test
mov
mov
dec
fldt
rep
xchg
xchg
jmp
dec
pop
pop
mov
out
jl
jecxz
inc
loopne
repnz
gs
aam
sbb
jns
das
jb
inc
pop
fdivs
lds
cmc
fs
std
into
pushf
ljmp
lock
push
or
lcall
fmull
mov
sub
add
fisubrs
xor
jo
xor
cmp
test
imul
es
cmp
adc
push
mov
mov
push
ja
cwtl
lds
ljmp
aam
faddp
fdiv
out
push
movsb
push
je
dec
mull
xor
and
lods
jno
aas
fistpl
xor
push
adc
clc
pop
js
xchg
add
dec
and
push
xchg
or
stos
lods
mov
sbb
cs
add
rclb
xor
add
mov
lret
popf
outsb
adc
mov
mov
lret
sub
and
inc
jns
cmpsb
fstpt
and
jp
pop
loope
and
cmpsb
pop
jmp
mov
and
sahf
mov
and
cmp
out
bound
cli
and
xlat
add
push
test
mov
imul
xchg
insl
imul
xlat
jp
mov
xor
iret
test
aad
mov
mov
loop
dec
int
mov
cmpsb
mov
inc
cmp
and
stos
outsb
cmpsb
nop
mov
push
sbb
insb
add
inc
fdivrs
lds
or
in
xor
addr16
sahf
and
pushf
inc
push
jae
into
cmp
mov
jp
loope
push
jne
dec
aas
mov
adc
dec
add
jl
push
jo
cmp
jb
sahf
ret
dec
filds
mov
test
scas
fsubrl
imul
aas
andb
into
or
push
mov
into
pushf
push
rorb
sbb
fstpl
adc
adc
jne
fimuls
jecxz
fwait
pop
bound
inc
int
aad
mov
stos
jl
dec
push
mov
ljmp
mov
orb
test
inc
pushw
dec
in
test
and
xorl
push
mov
sarl
jge
in
cwtl
lea
and
movsb
lahf
cmp
cmpl
push
mov
icebp
sbb
xchg
pop
push
or
and
jo
fwait
fs
lea
repz
dec
sub
push
loopne
adc
mov
cmp
push
pop
inc
xor
insl
mov
or
jp
aaa
xor
cwtl
sbb
lock
sub
scas
scas
loop
push
shll
cld
inc
enter
dec
jmp
mov
std
je
hlt
ret
xchg
sbb
and
jecxz
cli
mov
idivl
pusha
sbb
push
cmp
dec
add
lahf
cli
mov
adc
jg
dec
jae
sbb
cmp
cli
into
clc
mov
add
jnp
movsb
push
inc
and
fsubrs
pushf
dec
xor
pop
shl
dec
rclb
rcrb
and
in
push
mov
inc
shr
xor
ljmp
mov
addr16
sbb
cltd
or
cld
add
push
ret
push
or
popf
lods
mov
ficoms
andl
and
or
rcll
mov
fmull
das
jmp
xlat
mov
loope
addb
mov
outsb
cmp
jg
adc
or
and
daa
out
enter
sub
and
sub
and
fs
mov
inc
out
inc
call
inc
nop
adc
fcmovnbe
push
xor
aad
xlat
stos
faddl
mov
cmp
cmp
jge
rorb
out
add
jno
inc
xor
mov
sub
fimuls
or
push
cld
dec
mov
jg
xor
push
cmp
push
ljmp
cmpsb
mov
cmp
sub
push
in
xchg
aas
push
mov
js
js
repz
jge
fidivrs
repz
or
in
jp
loopne
sbb
sbb
test
adc
popa
xchg
pop
fstpl
inc
jmp
sahf
jl
pop
fmuls
fbstp
sahf
adcl
mov
jg
out
leave
icebp
in
mov
dec
dec
mov
jns
pop
jno
and
and
mov
jb
mov
test
pop
adc
or
int
jb
add
hlt
cmp
ja
repnz
mov
mov
imull
jecxz
jne
outsl
jp
shrb
jnp
sti
popa
add
bound
les
loopne
mov
iret
stos
xor
aaa
push
test
lock
aaa
inc
in
push
or
lret
pop
pop
sbb
inc
or
mov
scas
clc
mov
imul
pop
add
lods
imul
lahf
nop
nop
pop
stc
pop
and
daa
mov
add
icebp
or
dec
push
aad
popf
stos
icebp
fwait
mov
adc
stc
stos
push
loope
lret
into
mov
and
into
jle
mov
shrb
xchg
aad
ss
dec
cmpsb
push
sbb
jge
cmp
fstl
roll
mov
add
sub
stos
out
xchg
add
int3
rorb
xchg
xchg
mov
jg
inc
pop
xlat
shll
xchg
repnz
pop
or
dec
imul
in
inc
xlat
and
rorb
dec
push
in
mov
mov
pusha
dec
aas
adc
cmp
dec
jmp
pop
inc
pop
int3
lods
int3
ret
mov
adc
movsb
sub
jl
imul
xchg
xchg
rcll
add
mov
call
call
int
add
insb
or
andb
int
insl
out
or
push
insl
in
fsubrs
out
movsl
leave
pop
jmp
bound
ja
jp
adcb
jg
aad
insb
les
pushf
mov
mov
mov
add
pop
into
shrl
out
pop
xchg
cld
ljmp
dec
push
cmp
mov
aad
stos
inc
addb
out
adc
shll
call
iret
push
cmp
mov
fsts
gs
jns
add
pop
sub
mov
ss
insl
adc
stos
imul
sub
ret
push
inc
movsb
xchg
lret
sbb
dec
pop
dec
add
cmp
hlt
cld
pop
inc
stc
imul
mov
mov
push
jo
in
js
adc
dec
inc
gs
push
mov
clc
push
dec
jp
mov
or
loope
insl
mov
lret
outsl
test
lods
dec
mov
setnp
mov
subl
pop
sub
mov
js
inc
adc
std
and
das
mov
dec
fldl
mov
xchg
and
dec
lret
lods
imul
mov
lods
leave
outsl
jle
call
bound
loop
pop
xchg
lds
and
inc
pop
cli
adc
mov
jmp
push
nop
sub
xor
or
clc
iret
push
das
dec
push
sbb
and
in
xor
cmp
mov
xchg
shl
stc
and
out
push
roll
push
lea
pop
jo
stos
mov
xchg
cmp
pop
aam
push
cmpsb
jg
jns
mov
and
mov
pop
out
lods
lret
int
jb
and
mov
mov
test
dec
sti
xchg
gs
cwtl
cmpsb
pop
and
into
loop
divl
or
js
sbb
std
mov
cmpsl
or
push
out
aaa
mov
jae
xor
lods
loope
xchg
push
mov
xchg
inc
int3
jl
gs
pop
cmc
out
sbb
mov
jecxz
lods
inc
imul
mov
arpl
mov
or
int3
add
popa
enter
dec
adc
push
mov
cmp
cli
out
icebp
shl
icebp
outsl
cmp
sub
dec
dec
shrb
lock
mov
cmp
sbb
aad
jo
xchg
mov
inc
xchg
loope
scas
sarl
aaa
sbb
push
aad
sbb
cmpsl
iret
dec
xor
or
jns
int
cld
pop
loop
nop
pop
aad
data16
fnstcw
fsubr
dec
leave
and
xchg
jl
mov
add
jnp
jnp
loop
add
clc
pop
cmp
cmp
mov
js
xchg
mov
jne
lock
sbb
dec
addr16
cmpsl
xchg
cltd
push
pop
xchg
out
mov
sbb
sub
push
out
out
out
mov
in
aad
inc
test
xchg
test
test
adc
sbb
lea
push
shlb
xchg
sbb
adc
cmp
lock
pop
addr16
fisttpll
cmp
mov
fdivrl
pop
out
mov
leave
jnp
lcall
jmp
movl
outsb
and
fcomi
imul
jo
icebp
add
aad
xlat
push
dec
mov
insb
sbb
adc
popf
sbb
lods
jl
pop
fcompl
outsw
adc
inc
nop
int3
dec
imul
mov
aam
mov
push
xor
sub
mov
dec
mov
xchg
fninit
rcll
loopne
jp
sub
notb
fldt
push
inc
cmp
mov
inc
cmp
dec
fdivrl
mov
cli
stos
outsb
xor
push
sbb
shrl
sbb
push
ret
stc
cmp
lret
push
into
mov
ja
xor
leave
and
dec
cmpb
nop
adc
dec
ss
mov
es
dec
cmp
cmp
insl
jl
dec
lahf
hlt
xchg
imul
js
pop
inc
lret
and
add
imul
insb
cmp
pop
loope
xor
test
jnp
daa
daa
jo
lods
cmpsl
sbb
mov
lods
mov
movsl
jmp
xchg
jg
pusha
fiadds
push
sti
dec
and
cmc
frstor
add
aas
mov
sub
mov
xor
sub
inc
jne
xchg
test
mov
push
leave
mov
cmp
lahf
add
sti
test
sub
xlat
pop
data16
pop
xchg
ret
pop
fsubs
ds
inc
stos
shr
in
cmpsl
and
fs
mov
xor
pop
sbb
ja
mov
jg
std
ss
and
jae
pop
xchg
rorl
jecxz
loopne
xor
xchg
out
mov
in
add
out
fstps
sbb
out
mov
pushl
in
add
cmp
enter
cmp
mov
push
lods
daa
shrb
inc
adc
lahf
mov
lock
fcoms
mov
inc
fs
adc
fwait
pop
sahf
cmp
pop
leave
mov
dec
sbb
inc
andl
scas
movl
push
outsb
adc
sbb
fwait
sub
sub
and
lahf
stc
sub
mov
push
inc
pop
add
push
in
in
pop
into
xchg
stos
pop
sarl
hlt
add
fs
inc
pop
repnz
arpl
cld
insb
addr16
loope
mov
sub
outsb
and
xor
pushf
push
pop
sbb
pop
lods
sub
insl
lock
mov
xchg
xor
mov
stc
test
ret
inc
hlt
mov
arpl
pop
lret
mov
fidivl
mov
push
out
pop
jmp
mov
or
jae,pn
int3
call
xchg
les
filds
ret
mov
orb
fists
pop
popf
imul
add
call
lods
push
cmc
pop
test
sbb
std
in
decl
jecxz
incl
aam
push
sub
add
mov
jmp
ljmp
sti
push
mov
mov
stc
in
loope
es
addb
repz
xor
and
mov
loope
int
andb
inc
push
pop
je
call
mov
rcll
mov
mov
sarb
pusha
jp
fcoml
aad
fnstsw
test
xor
nop
in
fwait
icebp
sbb
in
xor
sahf
fistl
shll
mov
ret
cmp
aas
mov
inc
test
mov
jge
xchg
sub
ret
imul
mov
pop
cmp
cmpsl
cld
test
cmc
rcl
and
cmpsl
add
inc
clc
cld
aaa
mov
aad
mov
cmp
mov
popf
insb
pop
pop
mov
gs
repnz
xor
icebp
or
jbe
sub
imul
lahf
out
mov
nop
lds
test
lods
and
add
daa
push
add
xchg
adc
out
inc
mov
or
ficompl
push
add
mov
mov
fdivs
xchg
jns
push
data16
push
test
ss
mov
idivb
cmovbe
scas
inc
mov
inc
push
xchg
ficomps
or
or
xchg
pop
pushf
sbb
call
jl
repnz
jae
add
xchg
cmp
ja
aaa
push
push
pop
push
xchg
ja
fistpll
jae
fcomps
adc
push
gs
or
fiaddl
xor
pop
sub
ret
popf
out
push
inc
xchg
dec
es
push
test
ja
loopne
in
out
das
mov
xchg
mov
je
call
cs
imul
ror
movsb
cwtl
jns
push
mov
pop
imul
dec
push
jmp
daa
movsl
inc
outsl
les
cmpsl
or
repz
sub
dec
mov
mov
insl
bound
push
sub
fdivrs
ret
adc
xchg
adc
and
mov
mov
bound
les
mov
mov
adc
push
sarb
aad
das
mov
inc
aad
mov
ror
lea
dec
sar
fcoml
dec
ljmp
clc
adc
testb
xchg
push
iret
jbe
sbb
sub
xchg
dec
aas
sahf
sarb
pusha
xchg
adcl
sub
pop
ljmp
lret
and
orl
bound
dec
arpl
cld
sbb
jbe
rorl
and
xor
stc
mov
xchg
push
push
or
xchg
sbb
sbb
fdivrl
xchg
inc
insl
mov
ss
cmpsb
dec
leave
mov
jne
pop
adc
hlt
ret
pop
rolb
or
mov
add
insl
jno
jl
in
fbstp
jmp
inc
xor
push
xchg
mov
popa
inc
or
lret
in
pop
jae
leave
loope
fistpl
inc
add
mov
sub
out
mov
mov
pop
das
and
lahf
xchg
inc
in
push
das
pop
cwtl
mov
ds
mov
xor
xchg
dec
insl
test
and
xchg
dec
push
or
fsubs
ret
sbb
cld
jmp
jo
mov
stos
pop
clc
out
insl
push
scas
pop
push
lret
lret
aas
ds
push
in
dec
mov
sahf
out
sahf
dec
outsl
xchg
fwait
cmp
int3
loope
inc
adc
aad
jo
addr16
lcall
gs
xor
and
xor
mov
mov
clc
sub
in
test
push
mov
xor
test
dec
cmc
sub
dec
mov
inc
lock
jle
popa
pusha
lock
jle
lods
jge
stc
pushf
cmc
pop
cmp
shrb
aaa
mov
mov
in
into
leave
inc
mov
data16
dec
pop
movsl
mov
xchg
dec
in
or
jecxz
fs
adc
or
cmpsl
ja
sbb
mov
sbb
fdivl
test
push
dec
lret
mov
out
sbb
or
icebp
pop
mov
nop
out
ja
lods
and
aam
cmp
clc
pop
mov
mov
xchg
xchg
pop
es
cmpl
push
std
xchg
rclb
lods
push
fists
inc
mov
mov
mov
out
xor
pop
call
in
push
jle
lock
test
inc
scas
addr16
mov
cmpsb
filds
imulb
push
and
xchg
xorl
push
cmc
nop
mov
shlb
cmp
lods
xchg
inc
dec
jmp
cld
repnz
dec
ljmp
ss
inc
lcall
cmpsb
mov
push
sub
dec
movsl
stc
xchg
aad
cmp
mov
push
lcall
push
adc
push
fcomi
sub
add
or
ret
xor
and
cmp
mov
push
and
lret
dec
push
dec
imul
arpl
lcall
sbb
cmpsb
sub
push
and
aam
mov
aam
iret
xchg
xor
mov
jns,pn
sahf
cmp
inc
or
stos
mov
js
push
in
push
xchg
cwtl
xor
jbe
sbb
xchg
insl
fisubrs
lcall
outsb
cltd
ljmp
test
pop
movsb
pop
lcall
mov
dec
dec
pop
fstps
or
ds
outsb
sub
push
xor
mov
jne
and
movsb
mov
add
xor
out
jbe
out
mov
imul
jg
sub
adc
adc
jmp
xor
testb
mov
and
int
inc
jnp
push
pop
cwtl
je
test
in
pop
pop
rcl
mov
push
int
lock
rcr
mov
sub
loop
out
fists
fsubs
mov
jns
movsb
sbb
adc
mov
jp
sub
addl
aad
mov
jmp
xchg
push
and
push
mov
sub
fadd
fsubl
mov
loope
jmp
cwtl
and
push
dec
xor
cmp
jp
add
je
nop
fnstcw
jo
push
pop
subb
xor
aam
hlt
je
in
cmpl
pop
out
add
aas
ds
adc
xchg
shrl
xor
jb
cmpsl
jle
pop
hlt
aas
popf
aam
movsl
in
lret
mov
lock
inc
or
xor
pop
mov
cmpsb
shlb
mov
mov
mov
sbb
or
mov
pushf
in
ret
sub
stc
mov
mov
mov
xchg
push
mov
out
jnp
cmpsl
das
xor
mov
push
movsb
mov
sbb
mov
iret
into
xor
adc
cld
jge
arpl
or
out
sarb
fwait
mov
add
scas
aam
inc
and
popf
imul
imul
ss
stos
adcl
in
fwait
sahf
adc
data16
outsb
mov
pusha
lcall
cmp
sbb
mov
mov
inc
pop
mov
adc
push
scas
cmp
test
loope
out
push
movsb
loope
ret
jb
mov
or
cmp
lret
jge
movl
push
and
leave
xorps
lods
in
mov
cmp
jno
mov
push
sub
xchg
jno
leave
adc
xchg
or
inc
scas
test
cmp
rol
dec
jle
xchg
ja
mov
sub
fdivrl
lods
test
lock
out
sub
fimull
pop
add
leave
dec
rolb
ss
xchg
adc
lea
test
xchg
and
pusha
sub
pop
or
inc
pop
fdivrp
data16
bound
test
es
xchg
mov
imul
mov
add
inc
mov
inc
into
inc
cli
mov
jno
pusha
int
repnz
repz
mov
enter
adc
jp
nop
add
pop
fs
xor
dec
push
mov
sub
and
and
inc
push
sbb
js
ret
sbb
dec
out
loopne
inc
pop
xor
sbb
adc
xlat
rcr
pop
xchg
adc
aas
and
mov
es
nop
adc
mov
hlt
jp
bnd
fnstsw
mov
add
fwait
sbb
das
aam
loopne
repz
or
testb
push
pop
popa
pop
pop
lods
out
shl
int
xor
xor
push
sbb
cli
pop
movsl
and
and
daa
fsubrs
or
movsb
lcall
jle
sub
mov
mov
lea
jo
cmp
inc
dec
xor
xchg
and
dec
aad
int
mov
pushf
sti
ret
loop
fucomi
or
das
mov
test
es
int
and
add
push
imul
lahf
mov
xor
loope
testl
lock
jecxz
sbb
pop
inc
and
add
adc
aas
and
inc
stos
cs
sub
xor
stos
xchg
clc
pop
shll
movsb
aas
ret
push
hlt
cmpsb
mov
pop
add
push
mov
pop
pmuludq
faddl
xchg
xchg
mov
das
das
repz
cmp
aaa
jns
push
jne
out
inc
add
jecxz
movsl
cmp
cmp
push
sahf
adc
in
jecxz
lret
mov
mov
adc
orb
inc
mov
loop
aaa
adc
and
inc
addr16
rcl
mov
and
push
jnp
adc
out
xchg
fcmovbe
mov
loope
mov
push
inc
and
call
pop
aaa
ss
popa
ja
xor
jo
push
jne
jl
xor
outsb
addr16
or
stos
ja
or
in
pop
loopne
popa
and
sbb
jns
or
fldt
and
cmp
inc
sub
xchg
pop
jecxz
cmpl
clc
out
sub
cmpsl
clc
pop
push
push
into
sbb
repz
push
into
sahf
iret
test
pop
and
push
sahf
jge
mov
lods
mov
push
xor
jbe
movsb
outsb
and
nop
push
adcl
movsl
stc
dec
icebp
push
das
jbe
test
lods
mov
shlb
stos
sub
add
or
outsb
mov
push
dec
jge
pop
push
and
shlb
movsl
arpl
jp
in
shll
xchg
jp
mov
push
pop
pop
rolb
mov
call
cmpsl
pop
or
cmc
add
rorb
cmpsl
jnp
xor
push
test
or
lods
jge
orl
and
xchg
pushf
jo
fildll
outsb
adc
rol
dec
add
inc
addr16
out
fidivs
aaa
jmp
inc
ljmp
negl
mov
dec
pop
pop
nop
dec
scas
movsb
add
into
inc
insl
adc
fadd
xchg
jnp
jo
cs
or
jle
adc
and
sbb
mov
stos
sub
hlt
cmpsb
lcall
addr16
imul
aas
loopne
sub
scas
inc
mov
pop
andb
ret
inc
cmp
mov
lcall
stc
jecxz
jp
xchg
test
outsb
scas
xchg
in
inc
into
mov
sbb
arpl
ja
mov
cli
test
ds
sbb
jnp
outsb
dec
mov
sub
mov
xor
dec
or
stos
jg
sarl
push
and
out
hlt
add
jno
xchg
push
sub
push
rolb
xchg
lret
int3
clc
mov
repnz
inc
xor
cmp
in
out
leave
adc
sub
mov
std
dec
add
stos
repz
lds
jbe
jge
daa
sbb
inc
std
mov
shl
scas
dec
adc
mov
imul
cmpsl
int3
jmp
fildll
decb
push
ss
call
mov
repnz
repnz
out
repnz
in
and
leave
mov
xchg
rcll
lods
in
fwait
shl
or
pop
dec
inc
jl
insb
out
and
out
push
jl
mov
push
out
mov
jg
imul
add
cmpsb
jmp
lahf
or
adc
mov
push
jp
adc
pusha
leave
push
popa
jns
icebp
hlt
sub
adc
shll
inc
inc
add
pop
aas
es
ds
lret
aam
sbb
adc
add
inc
fwait
cmpsl
sub
add
stos
loop
outsb
pushf
sub
and
cmp
ret
pop
fs
sub
dec
inc
and
out
mov
and
push
push
adc
jle
inc
and
out
dec
scas
adc
sahf
mov
mov
repnz
iret
jg
es
xchg
mov
cltd
das
sub
out
andb
dec
ret
push
stos
sarb
or
sub
cmp
dec
dec
cmc
addl
cmp
clc
jle
iret
int3
sbb
jne
adc
cmp
inc
lock
jmp
pushf
wrmsr
and
adc
jmp
push
xor
cltd
push
mov
imul
hlt
sarb
sahf
stc
mov
push
mov
movsl
fsubs
push
call
pop
mov
stc
xchg
push
mov
push
inc
pushf
mov
insl
pop
xchg
xor
shl
mov
add
out
fcomip
push
shlb
sub
daa
out
imul
pop
jo
sub
push
jp
inc
pop
push
sub
add
inc
loop
mov
push
lds
ret
inc
jmp
xchg
mov
inc
adc
leave
and
call
shlb
or
inc
sahf
jecxz
add
loopne
negb
mov
fmull
addr16
shll
pop
loopne
test
pop
leave
aas
ficomps
jb
xor
pop
in
mov
jl
inc
jle
mov
ret
mov
mov
addl
stos
cmp
mov
xchg
mov
pusha
sti
mov
mov
stc
addb
inc
hlt
xor
mov
ret
das
in
outsl
arpl
xor
or
ret
inc
or
cmc
ds
sub
mov
aas
push
xor
aaa
int3
add
inc
pop
cmpsb
mov
jge
jne
cmp
jnp
jecxz
imul
outsb
or
xchg
pushf
jb
xor
movsb
push
out
pop
inc
int3
inc
lea
push
sbbb
adc
dec
push
fs
ficoml
mov
fs
out
inc
repz
hlt
mov
or
je
fstps
std
add
outsb
cmp
stos
dec
jmp
mov
push
shrb
ds
add
xchg
pop
push
lods
cmp
das
jle
xchg
sbb
js
mov
pop
jo
cmp
dec
mov
xchg
add
cmpsl
sub
imul
clc
mov
movsb
adc
jno
or
loopne
mov
sbb
or
orb
push
pop
fadds
mov
adc
jae
ja
aad
or
aad
adc
in
inc
and
xchg
sub
xlat
jo
xor
ss
repnz
stos
loopne
jbe
ret
xor
stos
insb
or
out
and
adc
je
or
or
lock
mov
sub
and
fwait
or
or
fldcw
dec
adc
es
or
lret
scas
test
insl
xor
dec
inc
mov
sub
or
jnp
sbb
rorl
jmp
push
or
sbb
push
daa
shll
add
adc
mov
jne
cmc
sbb
or
inc
xchg
out
or
sub
lock
xor
iret
inc
in
adc
xchg
sti
add
leave
lea
push
out
idivb
pcmpgtb
ss
test
jmp
sahf
add
or
xor
mov
loope
test
pop
cmp
sub
jae
xorl
inc
add
or
push
jnp
scas
cmpsb
test
inc
fcomps
xchg
mov
mov
sbb
loop
xchg
cmp
mov
out
movsl
hlt
dec
jmp
sbb
pop
lock
mov
out
pop
das
xchg
jo
and
lods
fsts
rcrl
sbb
stos
dec
lcall
xchg
sub
pop
loop
repnz
mov
push
adc
jae
test
mov
mov
fnstsw
sti
xchg
mov
bound
inc
xchg
ljmp
sbb
fstpt
cmp
jno
push
pop
jle
push
addr16
xchg
loopne
lcall
mov
int3
pop
pop
roll
mov
rorb
xchg
lock
or
cmc
pop
icebp
mov
sbb
jp
xor
xor
mov
ss
mov
aad
movsl
adc
add
and
sub
push
stc
lret
mov
jno
inc
mov
hlt
fnstenv
lret
addb
dec
sub
es
mov
in
mov
ficoml
mov
cmpsb
adc
aaa
xor
jnp
rcrl
mov
out
push
movsl
add
in
mov
inc
dec
divb
clc
popa
mov
mov
fwait
pop
mov
inc
sbb
test
int3
sbb
in
jnp
pop
dec
ljmp
dec
or
xchg
xchg
xchg
jg
mov
and
fs
sub
mov
leave
cmp
ss
notl
scas
xchg
sub
xor
push
out
pop
aaa
adc
add
jb
mov
jb
jl
stc
ja
popf
xchg
cmp
test
outsl
out
mov
xchg
jp
dec
push
mov
jnp
inc
int
jae
inc
inc
sbb
in
rclb
mov
sub
clc
daa
das
fmulp
dec
cmpsb
popf
push
or
sub
add
mov
sub
mov
jl
in
aam
je
xchg
cmp
mov
rorl
popf
jl
pop
mov
loop
jne
add
movsb
std
xor
js
xor
and
sbb
dec
xor
aad
xchg
icebp
mov
xchg
cwtl
arpl
das
rclb
iret
dec
das
aad
mov
cltd
lret
ret
je
push
orl
addl
test
clc
int
rcrl
lea
cltd
cld
in
loope
adc
filds
loope
call
and
mov
mov
push
lods
or
push
add
sub
mov
test
cmpsl
sub
clc
insb
jl
nop
out
aad
xchg
fisubl
inc
imul
inc
pop
sbb
dec
push
es
in
pop
lret
enter
lds
xor
xchg
jp
lods
cmp
and
sub
arpl
arpl
dec
lods
xchg
sarb
repz
jb
sbb
movsl
jg
push
aaa
or
ds
pop
cs
jl
scas
pop
hlt
xchg
rorb
ficompl
pusha
xor
mov
popa
loope
icebp
lods
leave
sbb
in
xor
out
mov
outsl
mov
and
jnp
xlat
mov
xor
jmp
add
sbbl
cmpsl
es
xlat
xchg
xchg
popa
mov
jne
or
pushf
les
sub
or
adc
sbbb
leave
into
nop
xchg
stos
in
fcoml
dec
repz
inc
arpl
movsb
and
movsb
xor
jne
lea
or
arpl
into
xchg
push
lock
enter
push
jae
xchg
sub
sbb
fnsave
jecxz
repnz
xchg
push
dec
sbb
lock
faddl
cltd
adc
mov
add
and
mov
test
xchg
xor
adc
mov
sub
jg
pop
pusha
sbb
push
sbb
and
xchg
mov
cmp
mov
out
push
test
or
jecxz
sarb
sbb
aad
sub
jp
in
aad
rorb
js
outsl
add
fcmovu
adc
or
sbb
pop
add
xchg
cmp
aaa
mov
and
movsl
and
mov
test
rcrl
push
add
fwait
ret
fwait
pop
inc
stc
out
push
dec
es
fcomip
mov
cmpb
repz
loope
mov
stos
adc
cmp
cmpb
add
in
aaa
lret
inc
lahf
mov
cmp
jnp
rol
pop
sub
mov
pop
sbb
adcb
and
call
sarb
lret
mov
cmp
mov
sti
lahf
add
xor
inc
mov
add
daa
cmpsl
inc
xchg
add
adc
ljmp
xor
addr16
bound
out
xor
mov
lret
jg
aad
cmp
dec
pop
dec
inc
add
aaa
jne
or
popl
or
es
pop
xor
ficoml
iret
aam
xchg
std
test
nop
popf
push
xlat
aas
add
sub
push
or
lret
shlb
stc
or
inc
dec
fildl
jo
push
lds
mov
xor
push
mov
sbb
inc
aaa
and
mov
or
xchg
inc
int
jne
xchg
imulb
mov
mov
mov
clc
xchg
repz
movsb
jmp
cmp
xchg
es
fdiv
pusha
cld
or
out
ss
mov
stc
ret
dec
jb
aas
push
je
lock
out
sub
and
or
pop
jp
sahf
ds
add
and
scas
loop
das
dec
mov
pop
push
and
pop
inc
movsb
cld
pop
int3
ss
pop
mov
rolb
loope
clc
add
push
xchg
push
std
jno
cmp
jb
dec
dec
js
out
and
mov
xchg
stos
cmp
mov
lcall
jmp
jge
push
jo
xor
sbb
xchg
jo
addl
in
mov
in
push
mov
and
int3
push
dec
or
jl
mov
mov
lea
cmp
outsl
pop
cwtl
mov
cmp
pusha
and
loop
pop
std
mov
xor
outsb
lahf
cltd
push
popf
add
nop
fdiv
add
push
and
adc
dec
fstl
xchg
inc
mov
je
sahf
mov
lds
mov
icebp
adc
outsb
jnp
and
pop
mov
ja
bound
sbb
jbe
push
mov
into
aad
shll
or
popa
insb
mov
mov
outsb
out
inc
jbe
ja
sbb
xor
leave
scas
daa
out
and
imul
in
jge
mov
in
push
sub
push
jg
jge
pop
cmp
enter
cmp
push
hlt
in
lock
pop
sub
cwtl
add
into
mov
imul
test
out
xchg
and
xchg
in
adc
sbb
jo
push
cmp
ret
test
push
sub
inc
call
test
sbb
fildl
stc
mov
sbb
stos
jmp
and
test
iret
cmp
jo
jb
push
add
into
ror
inc
push
push
cmp
push
push
stc
sbb
cli
stos
fprem
push
je
pop
pop
add
test
push
push
pusha
in
or
in
jb
or
xlat
fimuls
shl
jle
fs
je
or
cmp
rcrl
sarb
test
push
add
mov
cmp
cmp
out
or
ljmp
das
xchg
ja
push
sbb
ja
push
movsl
rorb
push
das
stc
aam
mov
inc
pop
dec
lea
pop
mov
lret
push
gs
adc
addl
push
cmp
jo
xor
inc
out
dec
pop
mov
test
daa
fnstenv
pop
xor
outsb
push
jecxz
push
mov
xlat
adc
loope
fadd
stos
jnp
sbb
pop
push
mov
mov
les
mov
mov
adc
pop
fwait
enter
sbb
movsl
std
jl
ret
into
push
mov
clc
jp
inc
daa
aas
mov
fisttps
cli
movsb
mov
rclb
ffree
loopne
push
repnz
aam
or
cld
or
cmp
dec
xor
lret
pop
call
pop
jle
sub
ljmp
lahf
or
mov
push
jae
mov
inc
sbb
dec
popf
mov
push
push
pop
lret
mov
insb
push
cs
ss
fstps
mov
or
scas
orb
adc
xlat
dec
inc
repz
aaa
push
or
add
pop
fstps
xor
imulb
ret
jo
or
pushl
xor
das
jnp
jecxz
jo
adc
jmp
mov
add
popa
cmp
pop
mov
sbb
sbb
aas
mov
mov
fsubs
add
and
sbb
insb
mov
pop
ret
jecxz
xchg
popf
xor
dec
inc
pop
jp
xor
rcll
mov
push
mov
cmc
push
fldcw
insb
gs
mov
addb
add
jae,pn
insl
cmp
dec
ret
push
and
dec
rolb
cmp
or
xchg
sub
pop
sub
inc
jbe
pop
mov
fistps
aas
mov
mov
add
jg
test
and
sub
jge
sub
loope
mov
lret
pop
mov
add
loop
cwtl
in
mov
lock
imul
int3
mov
mov
mov
and
xchg
and
dec
cmpsl
xor
sub
scas
mov
adc
lea
mov
fisubrs
stc
mov
loope
add
cld
cmp
xchg
fnstenv
mov
inc
fwait
ja
pop
movsl
outsl
sub
mov
loopne
sub
pop
lret
pop
testb
cld
loop
cmpb
sbb
testl
scas
lea
or
pop
sbb
push
inc
popa
sti
test
es
sbb
lahf
insl
stos
lret
push
shll
rcll
test
testl
and
icebp
and
pop
inc
and
fistpl
xlat
xchg
xchg
mov
cmp
and
jbe
inc
gs
stos
ret
into
cld
repz
jbe
aas
cs
or
sti
dec
and
mov
sbb
in
mov
push
ljmp
dec
cmp
sarb
inc
pop
cmp
mov
inc
loopne
fsts
call
icebp
add
or
test
lret
fbstp
sti
jecxz
and
fimull
fisubl
call
bnd
adc
shll
ret
or
loop
lods
imul
lcall
outsb
push
call
inc
sti
lods
orb
xchg
mov
rcrl
inc
and
es
add
jnp
addr16
pusha
int3
xchg
adc
popa
mov
shlb
lcall
inc
rcrl
notl
insb
jmp
leave
xchg
push
pop
leave
stc
idivl
xchg
inc
mov
fdivs
dec
insl
js
push
inc
andl
cmpl
push
and
inc
xor
adc
les
mov
mov
in
cmp
int
dec
xor
mov
fisttpl
or
jne
adcl
hlt
cmp
push
inc
test
fs
and
or
push
cmc
xchg
pop
mov
add
jg
js
dec
rcll
inc
fsts
lock
rol
sar
sbb
push
and
stc
adc
mov
mov
fnstcw
scas
pop
loope
aam
and
je
or
mov
call
test
bound
xchg
pop
icebp
push
pop
jo
lcall
incl
mov
cmpsl
xchg
ss
cs
cmpsl
xchg
fisttpll
mulb
movsl
imul
and
test
dec
movsl
xchg
test
fcoms
push
xchg
leave
mov
mov
loope
outsb
movsb
stos
fwait
jbe
mov
insb
pop
xor
movsb
xchg
dec
in
dec
mov
dec
add
mov
out
xchg
fmull
dec
mov
icebp
cmpsb
dec
cltd
repnz
inc
adc
iret
xchg
push
outsl
rcrl
sbb
fcompl
and
adc
mov
popa
hlt
lods
fwait
or
loopne
add
and
roll
in
dec
cmpsl
sti
pop
and
push
mov
outsl
jg
jne
shrb
addr16
sbb
xchg
push
xor
dec
repz
xchg
mulb
add
or
sbb
imul
mov
movsb
xchg
xchg
shll
xor
add
mov
sbb
jns
pop
inc
ret
inc
push
lret
inc
jb
jb
leave
test
lahf
cmp
xlat
sub
cmpsl
cmp
dec
mov
mov
fadds
dec
popf
test
stos
cmp
bnd
ja
lock
inc
xchg
xchg
mov
cmp
daa
xor
or
mov
cs
outsb
xorl
or
xchg
cltd
daa
outsb
push
cmp
pushf
pushf
sbb
icebp
pop
ljmp
cmp
test
dec
ret
xor
or
adc
inc
dec
les
mov
mov
cltd
loopne
sub
fwait
or
mov
in
das
fs
into
add
xor
xor
movsl
sbb
adc
pushf
dec
and
in
pop
jmp
xchg
sti
jnp
push
push
fsub
cmpb
stos
pop
in
mov
pushf
pop
fcomi
into
je
sbb
pop
mov
add
push
ror
mov
loop
mov
xchg
mov
pop
cltd
sub
pop
sbb
push
adc
sbb
or
jnp
rolb
andl
adc
lcall
mov
dec
out
imull
call
fstl
dec
test
dec
loope
pusha
sahf
dec
cmpsb
in
push
adc
aas
mov
js
mov
cltd
cmc
inc
mov
sbb
cmp
pop
enter
loope
arpl
push
daa
into
mov
jns
sub
fisubrl
adc
jo
lcall
lods
test
rorb
sub
sbb
test
js
test
adc
addb
pop
ds
outsb
shr
pop
nop
gs
xchg
pop
shlb
lock
popl
rcr
and
push
dec
aaa
popf
or
mov
rcll
dec
or
shl
dec
aam
or
cmp
and
jo
aam
into
jl
ret
cmpsb
jno
jmp
andb
int3
stos
add
push
sbb
xchg
nop
notl
notb
pushf
add
leave
scas
aas
imul
xor
dec
push
pop
rcr
ds
jae
push
jne
iret
and
and
jno
or
or
test
push
daa
in
arpl
jb
add
or
inc
pop
mov
cmp
in
ds
loope
mov
insl
daa
ja
inc
clc
int3
cli
decl
lock
xchg
lods
sub
sub
push
mov
mull
mov
test
xchg
pusha
int
pop
inc
xchg
imul
repnz
arpl
daa
inc
mov
sub
test
mov
in
mov
outsl
loopne
or
out
dec
xchg
shll
int
lret
xlat
in
stos
mov
xorl
dec
xchg
scas
aas
pop
iret
adc
dec
fnsave
gs
inc
insl
loopne
inc
out
mov
ljmp
xor
jns
loope
lahf
not
xor
push
push
and
js
clc
dec
xor
outsl
jbe
push
inc
icebp
inc
into
out
lods
fmuls
cmp
inc
cli
push
adc
cmp
test
push
addb
pop
sar
out
ret
push
stos
andl
adc
push
push
addr16
sbb
mov
fidivl
sarl
mov
jae
jnp
add
or
cmp
cmp
push
dec
outsl
jp
scas
lcall
adc
pop
sti
push
push
jl
adc
outsl
fists
iret
xchg
and
mov
cltd
cs
mov
push
push
dec
lea
mov
push
cmc
add
into
test
lds
mov
or
or
jmp
popa
push
inc
imul
icebp
cmp
cmpsb
repz
test
jo
daa
rorl
pop
scas
cmp
push
xchg
int3
push
stos
leave
loope
pop
shlb
daa
xchg
leave
and
or
addr16
popa
shll
hlt
addb
outsb
in
mov
dec
aaa
scas
repnz
bound
or
rcll
fbstp
and
jns
sbb
mov
data16
jnp
aaa
imul
out
into
jg
ret
jecxz
or
flds
or
pop
xchg
push
in
fwait
sbb
dec
adcb
fimull
and
jne
shl
out
test
jns
jmp
pop
pop
xchg
add
aad
xlat
sbb
adc
sub
in
jno
push
nop
pop
or
sbb
test
mov
les
add
orb
add
dec
pop
call
stos
fistps
and
jae
mov
dec
cmpsl
pusha
sub
mov
cltd
adc
add
add
xor
mov
xor
push
lcall
call
push
nop
insl
inc
gs
xchg
adc
xor
aaa
inc
mov
xorl
sub
or
push
add
nop
push
add
nop
popf
in
inc
sub
aaa
fwait
jbe
cmpsl
movsl
aaa
pop
les
add
sbb
xor
dec
cmpsl
cmp
out
sbb
stos
andl
adc
bound
in
jg
add
pop
push
divl
fisubrs
or
dec
dec
cld
out
ror
pop
and
mov
divl
jae
lds
or
or
push
mov
sub
cmc
pop
dec
mov
jge
inc
aas
inc
icebp
cmp
sbb
adc
sbb
mov
inc
lds
stos
mull
sub
ret
rcl
dec
jno
push
fdivrs
adc
into
sbb
gs
pop
ret
pop
adc
out
push
ljmp
add
mov
adc
fs
inc
cmp
jb
adc
push
or
push
inc
and
push
in
jnp
pop
mov
jo
jmp
test
lods
js
sti
mov
das
or
and
or
pop
cltd
push
subb
push
out
or
orb
out
sub
mov
xchg
addr16
mov
call
insb
aas
lcall
out
lret
fucomi
inc
into
ljmp
fistl
push
and
pop
mov
nop
ja
cmc
leave
push
out
pop
jle
ljmp
add
enter
xchg
dec
pop
ret
orb
les
pop
mov
outsb
and
and
sub
inc
sub
jecxz
inc
stc
mov
ss
aas
push
ror
insl
xchg
fucomip
cs
ss
jecxz
add
fildll
mov
repnz
inc
lods
dec
mov
push
pop
push
sbb
rcrl
xchg
mov
xlat
add
call
sti
xchg
push
sahf
outsl
mov
pop
sbb
bnd
lds
jmp
mov
inc
loopne
sub
into
fcmovne
adc
and
out
jmp
sahf
call
test
jne
fldl
out
inc
sub
sub
cmp
and
cli
lahf
pop
push
fdivp
inc
jmp
mov
xor
aam
and
mov
mov
pop
push
leave
xchg
jle
xor
adc
push
test
pop
popa
sti
lret
xor
push
int3
movsb
mov
fsubrs
aad
int
push
sub
and
lds
cmp
push
test
xchg
and
add
rcpps
testl
bound
jecxz
pusha
cmp
jle
clc
or
xorb
xchg
aam
xchg
adc
jae
jb
push
xchg
dec
sarb
daa
dec
call
add
fwait
jmp
stos
popf
call
jmp
push
xchg
jecxz
loope
cmp
sub
repnz
lcall
add
add
push
xchg
stos
push
iret
in
int3
mov
mov
cmp
mov
pop
rclb
inc
mov
daa
inc
insb
clc
xchg
jmp
xor
cmc
mov
inc
out
mov
adc
jg
sahf
in
pause
pop
mov
sbb
dec
ss
adc
sahf
cmp
sbb
cs
int
in
xchg
loop
push
xchg
mov
push
icebp
movsb
jmp
cmp
lcall
pop
pop
xorb
rcll
xor
sbb
ret
jmp
mov
jns
cmp
stc
addl
dec
sbb
mov
jnp
call
out
lret
hlt
push
cs
sbb
cmpsl
cmp
pop
pop
fistpl
je
xor
sub
fadd
cmc
scas
hlt
das
ret
ffreep
jg
sub
inc
xlat
mov
push
mov
jl
incb
mov
inc
dec
push
jb
out
lea
jge
xor
xor
jge
fimull
mov
mov
mov
aaa
mov
aam
cmp
js
cmpsb
mov
or
cltd
xchg
cld
jmp
ficoml
xchg
dec
adc
mov
sub
call
jecxz
stos
xchg
mov
push
xor
xchg
repz
pushf
popf
add
adc
adc
movsl
pop
xor
cmc
push
xlat
shlb
pop
sub
popf
push
sbb
mov
inc
adc
addr16
aaa
test
fs
and
out
or
in
popf
cmpsb
shlb
sbb
loope
jne
int
outsl
ljmp
add
lahf
and
jmp
push
xor
inc
lock
sub
js
and
cmpsb
adc
and
xchg
push
leave
fidivrs
xor
and
dec
and
pop
aaa
stos
cmpsb
push
cli
mov
mov
stos
cmp
xor
ljmp
and
jno
ficompl
sarb
dec
jbe
jl
pop
lahf
add
inc
pop
and
adc
xor
lcall
xchg
and
jmp
pop
ja
mov
je
std
inc
push
mov
das
mov
test
or
lods
push
and
adc
es
sub
pop
je
shl
add
xor
ss
jne
push
mov
iret
sub
mov
push
mov
xchg
fldenv
movl
insl
lret
sub
sbb
out
fld
sti
pop
mov
jmp
and
sarb
mov
lret
pusha
mov
int
lea
subb
sub
mulb
sub
inc
les
lret
mov
sub
mov
mov
push
roll
sub
pop
mov
push
adc
pusha
scas
cmpsl
mov
out
inc
push
fmul
daa
or
jno
fidivrl
dec
pop
ja
sbb
jo
test
push
sbb
push
nop
mov
add
ss
cli
or
pop
ds
test
das
pop
daa
add
mov
xor
test
sbb
add
adc
and
mov
and
jnp
mov
mov
clc
sbbl
bound
daa
loope
int
movl
mov
xor
stos
jl
fucomi
shrb
int
lahf
mov
out
xchg
rolb
cmp
and
push
add
push
mov
pop
dec
adc
pop
sub
adc
inc
pop
outsb
sub
mov
scas
push
adc
adc
mov
les
pop
and
push
mov
add
or
orb
xor
adc
imul
mov
cmp
dec
je
mov
cld
jmp
sub
addr16
xchg
pop
in
leave
scas
in
out
and
mov
sbb
pop
div
xor
sub
stos
sbbl
mov
mov
nop
ficompl
test
adc
sbb
testl
loop
sbb
stos
cmpsl
and
ss
inc
push
adc
clc
cmp
pop
clc
sbb
push
loopne
jg
dec
jmp
test
xchg
mov
sbb
lods
pushf
gs
push
push
popa
js
add
enter
mov
cld
lods
adc
xor
inc
in
and
arpl
mov
into
cmc
add
test
sbb
les
sub
mov
cmp
mov
outsl
mov
push
insl
sbb
lahf
aad
push
adc
mov
outsl
mov
push
push
clc
leave
scas
push
lods
adc
out
xor
jnp
dec
and
push
lock
jb
push
xchg
or
ja
addr16
adc
dec
xlat
sbb
cmpsb
faddl
push
sub
push
leave
bound
jge
pop
cld
xlat
cvtpi2ps
xor
std
push
popa
adc
xorl
in
outsb
pop
into
and
data16
mov
dec
movsl
mov
js
xor
sahf
clc
shlb
mov
ds
pop
pop
mov
lock
arpl
cli
mov
sub
mov
xchg
sub
xchg
stos
add
imul
mov
fdivrs
mov
hlt
sbb
or
shl
add
push
cmpsl
in
std
rol
push
add
das
pop
fdivrl
test
xlat
pop
dec
cli
int
stc
xor
jbe
sbb
adc
dec
mov
test
cmc
call
in
push
xor
popf
dec
ror
icebp
aaa
sub
pusha
lahf
and
sahf
xchg
cmpsl
jmp
das
or
dec
mov
arpl
cli
pusha
push
insl
xor
cmp
inc
popf
jle
test
or
ret
inc
test
jp
insl
stos
adcb
iret
es
insl
sbb
mov
mov
rclb
addr16
stos
dec
inc
mov
xor
popw
mov
xor
inc
invd
cmp
mov
jle
push
cmp
sbb
push
jle
shlb
xchg
lahf
inc
and
mov
out
mov
roll
jns
push
test
add
icebp
push
jo
rorl
xchg
lods
sahf
mov
rorl
outsl
mov
outsl
bnd
push
gs
cmp
mov
or
mov
push
sub
and
lea
push
bound
fisubl
and
push
scas
cltd
dec
and
out
xchg
add
lods
clc
ficompl
pop
inc
jle
cmp
jmp
sbb
mov
dec
and
xor
addr16
cmp
jp
xchg
mov
pusha
int
mov
dec
daa
push
es
insb
add
pop
push
add
out
lods
imul
insl
test
add
rcl
mov
das
test
push
xlat
xchg
jecxz
inc
add
call
and
mov
cmp
js
out
mov
adc
outsl
push
cwtl
das
es
adc
xor
sub
add
cmpsb
pushf
popa
inc
pushf
push
sub
inc
adc
cmpsb
stc
dec
push
pop
and
cmp
imul
and
ja
sahf
rorb
mov
jp
sub
iret
xchg
cwtl
jns
inc
cmp
aas
xchg
pusha
pop
and
and
imul
cmp
fcoms
mov
xchg
sahf
push
dec
ret
es
push
fiaddl
and
out
or
hlt
out
das
inc
push
mov
inc
repnz
imul
jbe
sbb
testb
mov
js
dec
jmp
mov
andl
into
out
xchg
jns
inc
sti
mov
pop
mov
xchg
aam
lock
sbb
filds
jge
and
sarb
leave
test
iret
cltd
cmp
ljmp
sbb
iret
sub
fisubrl
repz
outsl
push
stos
or
je
pop
aas
push
pop
fistl
sub
xchg
sbb
mov
es
or
repnz
fxch
mov
iret
fisubs
jge
cltd
loop
cmp
sbb
sub
jno
int3
loope,pn
mov
stc
push
outsl
andb
mov
mov
ficoml
xchg
pop
xchg
test
ljmp
aam
mov
ss
xchg
xchg
pop
das
pop
aam
mov
repnz
xchg
test
mov
dec
shll
and
cltd
enter
loope
lcall
and
shl
pop
sbb
fs
or
xchg
jg
das
mov
arpl
and
stos
sub
fistl
mov
repz
mov
add
mov
stos
or
pop
xlat
inc
repnz
adc
sub
cmpxchg
adc
mov
push
jg
xchg
mov
cmpsl
addr16
movsb
sbb
movsl
dec
out
dec
sub
inc
xor
jp
inc
push
adc
popf
xor
hlt
lret
push
sub
roll
dec
wrmsr
inc
push
lahf
aad
mov
dec
cmpsl
cmpsb
push
mov
push
stos
xor
cmpsb
std
and
cmp
pop
xchg
xchg
dec
ret
jno
or
adc
fnstcw
inc
lock
dec
lock
mov
cld
nop
popf
loope
and
fidivl
adc
jo
lahf
outsb
fsubrs
dec
mov
push
repz
je
in
jl
pop
mov
push
adc
decl
dec
incl
sub
inc
adc
add
mov
test
mov
lret
mov
stos
cmp
push
jp
lcall
xchg
cmp
inc
and
daa
outsl
addr16
jb
push
aaa
push
add
adc
xchg
movsl
mov
adc
dec
xchg
sbb
xor
in
imul
inc
mov
mov
leave
fadds
mov
jno
add
inc
inc
ja
mov
cli
js
sub
cmp
sub
dec
mov
jp
rcrb
push
repnz
jp
repz
aad
mov
out
lret
mov
jns
xchg
insl
pop
ljmp
push
outsl
inc
xchg
jns
test
xchg
lock
not
cmp
cli
xchg
mov
sbb
cmpb
push
outsb
jge
mov
rolb
pop
dec
sub
push
dec
xchg
fcoms
and
push
ret
addl
ss
inc
cmpsl
rcrl
fdivrl
in
test
mov
je
sub
mov
inc
adc
and
mov
mov
lahf
or
fwait
iret
lcall
scas
stc
mov
in
fisttpll
xchg
jg
pop
and
pushf
cmc
and
frstor
fidivrs
ljmp
xor
fisttpll
jns
mov
test
lcall
mov
sub
pop
mov
shlb
mov
xor
insb
cmpsl
and
lret
jnp
sbb
test
push
cwtl
push
lock
loopne
dec
ja
mov
xchg
cli
mov
sub
mov
ss
scas
mov
pop
cwtl
push
push
xor
pop
movb
mov
out
inc
popa
in
fadd
stc
cmc
mov
adc
xchg
inc
test
sub
mulb
insl
cmpsb
pop
hlt
pop
ret
aaa
and
sbb
and
movsl
mul
test
lds
mov
stos
and
test
xor
adc
xchg
je
aad
and
dec
xchg
lcall
arpl
jmp
and
push
les
inc
in
and
push
xchg
xchg
lret
or
push
or
imul
mov
lods
push
or
mov
ja
mov
xlat
call
lahf
adc
mov
and
mov
xchg
lret
adc
push
dec
mov
cmp
mov
jns
repnz
cmpsl
jp
in
mov
ret
lock
cltd
xchg
or
fisttpl
and
shrl
jg
ljmp
addr16
stos
mov
ljmp
mov
gs
pop
push
cmpsb
orb
jl
lods
jg
xchg
cmp
pop
mov
icebp
jbe
sub
push
insl
je
out
sub
dec
out
enter
xchg
adc
sbb
cmpsb
mov
add
stos
dec
in
jle
mov
xor
fwait
push
sub
xchg
sbb
movsl
push
cmp
fs
mov
imul
addl
mov
push
jns
in
push
pop
lahf
sub
ja
xchg
sbb
mov
add
inc
sbb
js
jle
mov
xchg
mov
mov
xchg
cmp
jbe
jg
jae
xchg
xchg
les
mov
lock
lds
movsb
scas
iret
xchg
adc
fs
add
sub
test
push
lret
mov
les
push
jmp
inc
dec
dec
ror
lret
jne
ss
push
data16
inc
loopne
adc
jl
loop
insl
sbb
jns
add
mov
sar
aad
jl
push
inc
and
mov
test
iret
outsb
out
sahf
sbb
mov
pop
mov
mov
imul
add
pusha
sti
or
rcll
xchg
xlat
faddp
cltd
pop
jmp
daa
inc
stos
lods
outsl
sbb
cltd
aaa
out
int3
push
xchg
loopne
mov
push
xchg
icebp
inc
mov
jecxz
xchg
aad
pushf
jne
dec
push
mov
mov
jge
std
mov
das
jge
icebp
cli
mov
sarl
xor
sbb
xor
outsl
mov
popa
cmp
pop
sbb
inc
or
mov
lahf
dec
fnsave
fiaddl
sbbb
aad
pop
lods
in
jle
pop
jecxz
rclb
mov
add
adc
inc
mov
das
iret
cli
aas
dec
in
fwait
jnp
mov
jbe
push
adc
nop
les
push
popf
xchg
int3
push
mov
pushf
or
or
push
mov
pop
and
and
mov
xchg
lods
cwtl
pop
std
lahf
push
es
jae
pop
jle
cmpsl
jg
movsl
inc
or
inc
dec
inc
add
stc
or
adcl
scas
sahf
rorb
xchg
lcall
aad
cmc
inc
jmp
or
nop
repz
js
mov
mov
mov
jg
dec
xchg
jne
std
xchg
rolb
and
push
pusha
sbb
cmc
cmp
fimull
jno
in
add
loop
jae
xor
xchg
mov
ja
xor
xor
loopne
inc
in
xchg
hlt
lret
ficoms
cmp
or
cmp
cmp
adcb
loope
cmp
repz
cli
jno
pop
nop
mov
inc
and
sub
push
add
rorb
mov
out
dec
sahf
lret
xor
fcompl
mov
lret
andl
xor
lods
and
imul
jnp
xchg
mov
pop
cvtps2pi
ret
push
cmc
test
loopne
insl
xor
clc
out
xchg
cmp
cltd
les
arpl
lret
cmp
add
sbb
or
aaa
xchg
push
pop
sbb
push
decb
or
dec
popa
push
lods
cmp
pop
mov
ficoms
sbb
cmp
and
jne
or
pop
pop
and
pushw
repz
inc
add
cmp
add
dec
cwtl
loop
jmp
inc
cmp
mov
jmp
adc
cmpsb
adc
inc
arpl
mov
je
movsl
adc
stos
cmp
pop
mov
jmp
mov
fisubl
enter
fisttps
mov
in
dec
fistpl
jle
call
fsubrs
adc
jg
or
insb
cli
inc
idiv
sti
bound
sub
imul
addr16
inc
clc
ss
sub
ret
dec
nop
lahf
out
lea
icebp
xor
push
and
loope
sarl
push
iret
fiadds
fwait
pop
or
xor
es
mov
mov
out
mov
lock
xchg
xor
and
or
int3
dec
stos
xchg
mov
inc
mov
scas
call
push
imul
fsubrs
mov
loopne
out
fcompl
pop
aas
lea
nop
push
jle
mov
add
add
data16
mov
cmpsb
pusha
sbb
sub
divl
sub
mov
out
nop
js
icebp
dec
mov
movsb
ss
cmp
and
out
mov
lods
dec
jp
fdivrs
and
fcoms
rcll
mov
mov
dec
aam
out
mov
push
xchg
push
jle
ret
xchg
into
and
popf
cmp
lea
fstps
mov
shrb
and
xchg
cwtl
pop
lock
sub
lret
inc
fwait
mov
add
mov
jmp
int3
sbb
and
push
or
icebp
jmp
add
xor
not
arpl
adc
xchg
test
or
push
mov
push
div
js
mov
jmp
int
clc
into
push
mov
das
fs
pop
test
add
mov
cmpsl
sahf
mov
dec
mov
xor
mov
test
fmulp
stos
repz
pop
xorl
or
adc
jmp
mov
mov
xor
add
popf
lods
je
out
push
das
mov
mov
aas
mov
test
repz
fcompl
pop
cwtl
and
adc
fstpl
sub
testl
and
mov
inc
repz
js
in
jg
mov
bound
aas
lods
shlb
mov
aam
add
addr16
outsl
aaa
test
push
test
call
sahf
das
mov
inc
fistl
movsl
lret
push
and
mov
testl
cmp
mov
cmp
jle
xchg
test
mov
xchg
test
cltd
scas
pop
rcll
aaa
mov
sbb
push
mov
pop
or
insl
popa
inc
cmpsl
or
int
jl
dec
and
lds
lods
mov
sbb
add
decb
pop
xchg
lret
movsl
lods
fcomp
cltd
add
mov
mov
xchg
loope
cmp
ds
out
insb
or
mov
mov
sbb
mov
pusha
jnp
lock
jnp
test
insb
pop
push
in
jns
add
pop
and
das
shlb
mov
ja
pop
jne
cmp
cmpsl
or
add
adc
addl
rcl
or
inc
push
push
push
jmp
test
int
push
imul
in
jnp,pn
and
sbb
rcll
loope
mov
and
dec
adc
aaa
push
das
dec
pop
aaa
push
enter
int
push
cmp
push
sub
jle
inc
or
cmpb
out
ds
xchg
ret
mov
outsb
lds
dec
cli
movl
cmp
sarl
rcll
add
xchg
int
out
dec
das
jno
sbb
data16
outsb
pop
jbe
cmp
imul
push
pop
stc
sarl
adc
jp
jbe
dec
repz
cmpsb
shll
mov
cmp
popf
sbb
ja
inc
mov
jne
mov
sahf
or
sbb
test
sbb
cmc
sub
test
dec
bound
pop
xchg
dec
mov
xchg
jnp
sahf
sbb
add
xchg
mov
mov
roll
clc
inc
movsb
push
rolb
decl
and
xchg
add
mov
fdivs
arpl
pusha
out
test
sub
clc
lods
lds
rcrb
int3
testb
mov
cs
jg
mov
cwtl
mov
daa
jg
add
addr16
jge
mull
pop
inc
cmp
pop
dec
loop
push
jbe
and
fsubs
cltd
jl
push
adc
xor
jle
stos
stos
leave
mov
lods
cld
cmp
inc
mov
pusha
aam
std
push
in
cmp
cmp
cli
xchg
mov
or
mov
orb
push
daa
das
bound
xchg
addr16
leave
cmp
or
mov
test
orb
std
pop
mov
out
test
push
jo
sub
in
xchg
roll
fwait
add
mov
cmp
inc
lret
and
mov
pop
aad
ret
stc
jbe
inc
out
jae
ret
mov
push
rcrl
ror
andb
xchg
dec
in
xlat
or
in
push
xor
rcrb
inc
inc
xor
es
movsb
and
mov
adc
out
dec
in
test
mov
xchg
inc
lds
sub
cli
aad
inc
adc
jns
jmp
rorl
jae
pop
iret
inc
sub
movsb
in
inc
mov
test
fidivrs
fistl
mov
aad
out
and
sbb
rorb
loopne
in
mov
jp
shll
push
ftst
cld
addl
mov
jns
mov
test
adc
cmp
jp
dec
outsl
dec
xchg
lcall
stc
lea
jno
and
xchg
ret
mov
mov
add
fcoml
movsl
outsb
sbb
fldenv
lock
inc
and
stos
pop
mov
dec
and
inc
cmp
outsb
pop
sbb
cli
scas
ljmp
sbb
rorb
pop
arpl
push
repz
lds
sbb
and
cld
in
mov
jg
sti
inc
dec
test
or
sahf
jns
idivb
iret
push
sbb
stos
cld
xchg
lahf
and
enter
dec
loope
sub
int3
sti
stos
addr16
mov
addr16
pushw
cli
cmp
movl
repz
mov
mov
mov
pop
and
or
mov
jg
lret
mov
jl
pusha
mov
jo
test
mov
imul
shrl
sbb
pop
mov
inc
leave
out
fsubrs
add
enter
push
and
subl
sub
dec
ljmp
and
lea
popa
mov
mov
xchg
addr16
adc
inc
movsb
js
btc
stc
cmpsb
je
leave
mov
cwtl
xor
sbb
mov
jmp
and
std
cmp
loope
arpl
fiaddl
mov
mov
or
loopne
inc
test
fwait
hlt
jecxz
inc
out
adc
pop
outsl
cltd
cmc
dec
inc
mov
adc
push
out
testl
mov
mov
mov
es
mov
es
scas
xchg
nop
imul
imul
and
dec
mov
push
je
inc
shll
rclb
jae
push
add
cmp
idivl
mov
add
or
or
popf
add
pop
or
adc
ficoms
mov
ret
xchg
pusha
dec
jp
fbstp
insl
shll
icebp
adc
jmp
sub
arpl
movsb
rorl
lcall
cmp
add
pop
jmp
mov
mov
or
mov
out
ja
dec
xchg
sarb
outsl
repnz
push
daa
fwait
test
test
cmpsb
inc
bound
mov
sbb
sarl
test
js
add
dec
xchg
jmp
insb
mov
dec
dec
or
dec
inc
jae
stos
movsl
test
dec
mov
cmp
cmp
xchg
pop
js
xchg
cmpsl
sbb
mov
negb
pop
sub
pop
or
sub
jb
pusha
jle
cmpsb
cli
pusha
call
fists
ret
cs
add
jmp
movsl
shll
in
sub
inc
stos
xchg
mov
push
out
fisubs
add
sub
rcrb
rcrl
xor
mov
sub
mov
mov
hlt
cmp
sub
cli
dec
cltd
movsl
sbb
jp
rcl
jne
cmp
nop
cmp
or
pop
xor
xor
mov
mov
aad
xchg
rep
push
mov
push
lea
stc
xchg
aaa
adc
rorb
cmpb
frstor
roll
sbb
sub
add
mov
jp
frstor
cmpsb
test
loope
push
mov
addb
notb
pop
cmp
mov
and
mov
inc
jbe
cwtl
jp
xor
filds
mov
mov
outsl
jae
outsb
loopne
push
push
or
sub
call
dec
imul
cmp
and
popf
insl
mov
daa
out
mov
ljmp
mov
imul
mov
outsl
pop
sbb
fadds
movsb
gs
xchg
jnp
xchg
cmpsb
lea
mov
jbe
sub
jle
in
jae
inc
xorl
pop
push
mov
inc
dec
or
sub
xor
leave
mov
fsts
pusha
fisubs
in
push
mov
pop
add
enter
outsl
mov
or
or
in
jg
cmp
jge
push
xchg
lcall
mov
mov
int3
jo
jo
sub
and
ds
shl
icebp
mov
stos
lds
mov
xchg
lods
aam
clc
je
inc
or
dec
movsl
lahf
lods
sub
imul
inc
lret
aaa
or
cmp
jno
mov
adc
xchg
push
addb
lret
jp
inc
jmp
cli
and
jmp
mov
mov
xlat
out
lcall
and
lods
xchg
in
fcoml
pop
adc
xor
cltd
dec
hlt
lcall
xchg
pop
mov
xchg
jae
and
add
jge
mov
ret
mov
add
dec
cli
nop
adc
jp
push
jecxz
adc
mov
testl
movsb
inc
fstps
imul
push
mov
cltd
xlat
lea
lods
mov
jl
loope
int
xor
inc
xchg
and
xchg
cmc
fwait
cmp
js
sub
jmp
imul
xor
jbe
insl
and
xor
pop
in
pop
push
lret
in
aaa
sub
mov
daa
or
cwtl
push
cld
xchg
xor
jns
cmp
sub
or
jmp
sub
adc
sub
adc
mov
mov
inc
inc
scas
mov
jp
cli
dec
push
pop
popa
jecxz
pmaxsw
leave
add
mov
jmp
mov
lods
mov
in
out
xchg
stc
dec
push
and
rep
mov
repz
xchg
jnp
pop
lret
xchg
pop
mov
cld
xor
or
inc
adc
fdiv
xchg
cld
int
adc
enter
pop
dec
aas
push
xchg
pop
lods
sub
pop
jae
ficomps
enter
xchg
mov
cwtl
stos
aam
mov
lcall
jb
xchg
test
stos
mov
xchg
pop
out
outsb
and
out
ds
mov
clc
scas
data16
stc
push
aas
fistl
ret
es
jge
fs
jmp
jge
and
jns
add
push
jnp
jno
xchg
cmp
negl
mov
jo
rcl
push
cwtl
and
in
cmpsb
sub
roll
mov
test
insl
in
mov
jp
and
mov
and
cltd
dec
lret
cmc
lds
icebp
xchg
repnz
jg
data16
mov
adcl
jne
adc
in
pop
or
push
es
and
fnstsw
inc
jecxz
push
adc
sbb
js
imul
sub
mov
aam
icebp
inc
push
dec
mov
inc
in
popa
pop
xor
xchg
xchg
ret
dec
mov
scas
push
and
dec
xlat
and
push
pop
outsb
or
push
xor
or
push
scas
cwtl
insl
ss
sbb
addr16
shlb
decb
and
pop
xor
add
outsl
mov
test
mov
or
adc
add
ficompl
pusha
pop
xchg
mov
loopne
aas
jmp
xchg
in
sbb
mov
fwait
mov
nop
mov
sar
and
mov
push
dec
adc
fwait
popf
out
sbb
push
jp
sub
jnp
outsb
jle
rorl
cld
mov
lahf
inc
add
stos
jl
lea
mov
out
xchg
pop
add
pop
push
jae
push
fstpl
add
insl
outsl
push
arpl
lahf
xchg
nop
out
dec
sub
fldt
shl
scas
sbb
sub
cmp
lea
pop
push
test
push
sti
outsb
jge
xor
lods
jecxz
insb
outsb
mov
les
in
xchg
jl
pop
mov
push
test
push
lods
cmpsb
hlt
jbe
cmc
roll
push
enter
jg
pushf
sbb
add
test
subb
adc
ss
test
cmc
mov
mov
cmc
aam
aad
and
cmp
outsl
stos
popf
lcall
sbb
push
repnz
in
jnp
outsl
shlw
add
mov
mov
and
cwtl
nop
jns
push
data16
mov
ret
fmull
js
stc
push
xor
mov
push
sti
out
dec
jge,pn
push
xor
sarl
cmc
and
mov
sub
mov
jl
or
stos
punpckhwd
int
je
inc
or
jmp
sbb
shlb
call
inc
mov
outsl
pop
adc
pop
cmpsl
fsubrp
out
add
stc
inc
jb
mov
mov
bound
add
inc
in
adc
jbe
mov
inc
cmp
sahf
cld
aam
cmpsl
nop
mov
stos
mov
jno
dec
in
mov
movsl
lret
stc
pop
repz
cmp
pop
mov
xchg
je
xor
repnz
inc
je
dec
scas
xchg
push
lret
pop
out
imul
and
aas
aaa
lcall
outsb
add
stc
daa
jbe
shrl
sbb
out
cwtl
dec
mov
popa
pop
mov
mov
ficoms
add
mov
ficoms
push
sbb
mov
or
outsl
cs
mov
jge
incb
jbe
loope
mov
adc
jg
pop
lret
enter
sbb
ret
mov
mov
ret
fsubrl
sub
cmp
daa
mov
leave
xor
bnd
rorl
push
cmpb
jge
dec
mov
jae
pop
imul
fistpl
pop
jae
push
dec
and
cmp
sarl
jle
and
dec
add
out
out
std
lock
inc
cmp
out
jnp
fdivs
das
xchg
cmp
leave
or
mov
push
shl
or
fsts
push
jl
mov
sbb
adc
push
xor
adc
dec
jl
hlt
push
mov
xchg
repnz
add
out
ds
mov
sbb
movl
push
mov
ljmp
rolb
xchg
cli
mov
and
mov
movsl
lods
iret
loope
pop
js
and
xchg
movsb
add
neg
pop
xchg
and
add
out
subb
int
pop
jge
add
adc
jbe
xor
jecxz
jns
in
sub
iret
dec
lds
push
pop
jl
daa
inc
das
jl
push
adcl
add
imul
mov
dec
icebp
inc
loopne
out
xor
fisttps
xor
mov
xlat
popf
jl
xchg
mov
fwait
in
cli
sbb
xchg
outsb
inc
not
rolb
bnd
mov
or
int
sub
push
loop
and
movsb
dec
lea
enter
xchg
loop
jbe
push
jg
mov
popa
mov
xor
call
sbb
jb
out
sbb
fisttps
push
jae
sbb
ficoml
js
cmp
fs
ss
or
ret
movsb
jno
dec
popl
cmpb
jno
test
inc
sahf
or
mov
std
stos
mov
por
mov
inc
mov
push
fs
xor
push
xor
mov
sbb
inc
inc
ficomps
sub
or
dec
popf
stos
hlt
inc
mov
lods
outsl
and
loopne
xor
cmpsl
jmp
sub
aam
mov
ss
inc
pop
mov
dec
xchg
fdivrl
bswap
mov
mov
push
jmp
pop
mov
cmpsb
jg
aas
xchg
pop
shll
movsl
mov
push
add
inc
adc
add
cmc
sbb
adc
fmuls
sbb
fisubs
test
pop
loopne
mov
daa
adc
lret
cmpsl
ds
sub
lea
pop
test
addr16
movsl
rcrb
lahf
mov
mov
and
dec
jae
rorb
xchg
sbb
ret
push
jle
loop
ljmp
jmp
pusha
sub
mov
aad
dec
jmp
inc
test
jge
push
jns
outsl
xchg
jecxz
je
mov
xchg
nop
fldcw
lds
sub
clc
pusha
sub
aad
imulb
sbb
mov
popa
add
into
jg
cmpsb
int
ds
and
imul
jp
inc
adc
xchg
mov
cld
pand
mov
and
and
orl
push
movb
sbb
inc
mov
repz
pop
jo
mov
mov
mov
insb
shr
mov
ds
and
enter
pop
ds
ret
rcrl
or
jne
push
enter
push
aad
mov
push
jle
adc
adc
sub
pop
aad
adc
add
imul
and
mov
ret
test
scas
sub
in
mov
push
xchg
xlat
jbe
cmp
mov
out
cmp
cmp
dec
ret
jmp
arpl
pop
rclb
mov
cmp
data16
sahf
push
cltd
dec
jl
lea
sbb
adc
cli
call
push
lret
loop
lahf
orb
sub
ljmp
jo
je
push
mov
jo
fimuls
dec
daa
pop
es
lret
fbstp
sti
add
jo
xchg
pop
test
stos
fisubrl
out
xor
sub
push
add
into
push
mov
test
jmpw
cs
push
xor
testl
cmp
dec
imulb
xor
mov
cmp
movsl
or
flds
add
fnstsw
ss
ja
xchg
and
or
imul
jno
mov
stos
adc
cmp
inc
das
rcll
loope
jecxz
sbb
popf
pop
js
jns
inc
jmp
leave
test
js
pop
cmp
inc
jno
mov
xor
data16
pop
leave
mov
push
repnz
js
push
mov
pop
adc
mov
sub
andb
xor
fdivp
outsl
fsubrp
repnz
cmp
daa
mov
cmp
pop
xchg
mov
push
mov
push
adc
dec
insl
out
push
ljmp
pusha
pop
sbbb
repnz
pushl
cwtl
inc
ret
mov
cmp
jmp
inc
xchg
xchg
das
inc
pop
lea
adc
mov
je
jae
test
mov
sbb
stos
sti
cs
pop
dec
pop
sbb
cmp
xchg
shll
pop
sbb
and
jmp
mov
dec
sub
mov
or
xchg
lods
clc
repz
loopne
pop
es
jge
insl
cmp
sub
cmc
pop
scas
sbb
mov
xlat
mov
dec
mov
loop
sbb
mov
adc
scas
xchg
test
xchg
inc
xor
test
or
add
addr16
push
leave
xchg
dec
and
aam
push
cld
hlt
cmp
enter
fimull
fidivl
xor
push
push
subl
test
das
pop
adc
fstpt
es
incb
add
pop
aad
lahf
pop
inc
sbb
int3
xorl
add
lock
insl
rcrl
pop
in
mov
mov
inc
cs
pushf
and
inc
cltd
stos
add
leave
xchg
push
sbb
cmc
pop
push
in
sahf
sti
ja
rorl
clc
sahf
insb
and
sti
lahf
mov
pop
rcrl
imul
movsb
mov
mov
sbb
mov
insl
push
int3
mov
mov
lahf
jl
inc
lods
test
or
fisubl
out
ljmp
or
mov
shll
push
xchg
add
xchg
rorb
add
mov
cmc
inc
push
and
and
leave
addr16
and
mov
or
ljmp
dec
stos
dec
repz
or
lcall
push
enter
and
xchg
stos
mov
sbb
das
sarl
xorb
cmpsb
fs
shlb
call
imul
adcl
xor
mulb
mov
mov
aam
iret
mov
adc
dec
jno
popf
cld
xchg
ss
push
mov
je
shll
mov
cli
rcrb
js
push
mov
jl
nop
icebp
dec
cli
push
enter
inc
data16
push
repz
sarl
sub
jo
or
or
ret
jns
not
mov
mov
push
adc
and
andl
das
mov
fimuls
cmp
sbbb
fidivs
aad
clc
inc
in
pushf
jg
dec
jle
xlat
std
cmp
cwtl
adc
mov
out
jp
xor
fldl
into
ja
xlat
add
negl
in
cmp
push
outsl
pop
dec
mov
dec
imul
ficompl
test
fucom
sbbb
hlt
mov
leave
xchg
daa
and
sar
rorb
fisubs
enter
jmp
data16
push
insb
jo
lret
or
push
pop
add
mov
jae
lret
add
insb
mov
push
add
out
jg
test
push
xchg
sub
imul
sahf
sbb
sbb
in
jnp
or
incl
fs
enter
lods
add
jae
fadds
or
stc
jecxz
addr16
test
bswap
fsubrs
mov
mov
or
aam
icebp
cmp
ss
inc
nop
loop
arpl
and
and
aad
pop
sub
add
lock
repnz
fcomps
movsl
stc
xor
dec
mov
in
imul
insb
cmpb
mov
xor
push
movsl
xor
fstpt
pop
mov
and
adc
stos
and
or
jle
loop
push
xchg
jmp
