arpl
and
or
sti
inc
pop
lcall
mov
inc
pop
clc
andl
xor
ss
cmpb
jmp
jae
sub
mov
shll
and
mov
inc
divb
in
add
mov
pop
push
mov
test
mov
movsb
andb
inc
xor
adc
icebp
mov
incl
xchg
push
xor
sub
out
mov
pop
cltd
aam
sub
lahf
xchg
adc
cmc
jmp
data16
pop
xor
sarl
sbb
outsl
scas
cs
dec
fdivs
in
dec
aad
or
scas
pop
cmpsb
inc
nop
divl
xchg
into
xchg
ret
lods
stc
fnsave
add
mov
pop
loop
push
scas
xchg
xor
xchg
sbb
les
jb
es
pusha
ss
add
and
call
in
add
xor
out
push
aam
xchg
push
call
xchg
jp
xorb
movsl
add
mov
cmc
sub
push
or
add
icebp
mov
cltd
into
out
filds
mov
cmp
cmpsb
daa
sub
iret
out
add
lret
mov
jno
aam
cli
loopne
inc
dec
movlhps
cmp
rcrb
cs
xchg
jbe
pusha
jp
rol
push
or
lds
lret
negb
and
cmpsl
fiaddl
xchg
icebp
xchg
mov
aad
inc
pushf
add
popf
and
push
push
adcb
sbb
in
mov
es
fwait
lret
xchg
movsl
dec
push
jp
mov
or
add
mov
jno
sti
pop
leave
add
lea
in
mov
addr16
inc
pop
dec
mov
ljmp
jnp
mov
imul
cltd
dec
cltd
movsl
nop
lahf
xchg
inc
loope
jnp
imul
xor
cmp
push
popf
mov
and
inc
ss
movsb
jbe
or
push
and
lock
cmp
shr
sbb
xor
inc
notb
sahf
push
adc
outsb
adc
push
push
insl
add
mull
xchg
andb
loope
push
pushf
popa
pop
pop
sub
scas
in
iret
pusha
stos
mov
or
mov
cltd
lcall
loopne
pop
sbb
adc
cmpl
sbb
mov
out
sbb
mov
cwtl
xlat
jnp
add
push
les
xor
and
add
cwtl
mov
xor
das
lock
loop
movl
xor
push
push
xor
movsl
xor
hlt
dec
ja
and
sarb
dec
filds
jecxz
adc
call
adc
jae
jnp
sbb
test
add
cmpsl
fwait
leave
out
xchg
mov
adc
sbb
xor
push
shld
insl
inc
sbb
inc
mulb
xor
cmp
lahf
movsb
outsb
and
loopne
imul
test
push
repz
insb
or
adc
or
mov
cli
fnsave
jnp
fldcw
lds
arpl
aas
adc
xor
jbe
rol
inc
xchg
jo
lret
ret
gs
xchg
jmp
inc
scas
adc
aad
ss
cltd
ja
push
sub
ret
push
lcall
xchg
jl
in
dec
pop
xor
inc
icebp
push
lahf
adc
or
push
loope
push
mov
repnz
inc
mov
lock
outsl
movsb
rorb
sub
mov
push
shr
ret
add
cmpsl
std
mov
and
in
mov
rolb
orl
pop
test
inc
xchg
fmul
sahf
in
int3
push
shl
push
rcrb
pop
pop
outsl
or
or
jns
outsl
subl
push
mov
out
stc
fmull
arpl
pop
out
js
call
lcall
mov
jae
inc
into
out
int
push
inc
cld
arpl
loop
rclb
insb
cmpb
pop
sub
mov
aad
mov
cmc
adc
in
dec
pop
mov
shr
push
lret
xor
sub
orl
sub
add
filds
xor
jne
cs
mov
ret
sbb
fmull
xor
mov
jnp
cmp
fwait
imul
cmpb
ljmp
push
daa
icebp
cmpsb
orps
push
lret
ljmp
add
fcomip
pop
jl
lcall
call
negl
ret
xchg
add
call
jnp
arpl
inc
and
sub
sbb
jbe
pop
jne
pushf
jne
mov
aad
outsb
enter
js
imul
xchg
adc
imul
loopne
sbb
shlb
shll
add
fstl
aas
jmp
or
in
xchg
loop
xor
rorl
mov
push
mov
jne
ja
pop
in
imul
outsb
es
cld
insb
jbe
clc
insb
mov
imul
push
mov
mov
adc
in
cmp
push
mov
xchg
leave
data16
daa
pop
mov
test
fists
aam
jbe
sub
in
hlt
mov
ljmp
mov
daa
xor
popf
dec
cs
das
xchg
loopne
and
stos
dec
sub
and
push
pop
fildll
or
stos
push
or
cmp
mov
xchg
inc
push
mov
pop
movsb
lcall
mov
xchg
outsl
adc
lods
lret
imul
loope
mov
sub
dec
scas
jge
in
xchg
jg
inc
push
mov
dec
andb
jno
lcall
sbb
mov
pushf
loop
or
mov
xchg
cwtl
je
dec
xorb
test
sbb
subl
inc
movsb
out
sbb
imul
pop
icebp
add
adc
dec
mov
and
loopne
xchg
push
or
shlb
rclb
lea
mov
xchg
outsl
jecxz
ret
or
dec
mov
loopne
inc
movsl
push
lahf
jbe
das
cmpsb
cltd
dec
outsl
mov
es
mov
pop
je
adc
stos
mov
push
inc
jl
loop
push
push
sub
xchg
mov
mov
push
pop
icebp
movl
hlt
xlat
xor
jmp
movzwl
and
xchg
xor
imul
les
mov
xor
in
nop
mov
in
mov
int
neg
scas
push
mov
sub
xchg
mov
lret
dec
cmpb
inc
leave
xchg
xchg
iret
xchg
push
repz
fstl
popa
fistps
mov
in
cmpsl
pushf
mov
dec
sub
outsb
repz
sbb
loope
jge
aad
bound
mov
push
pop
imul
pop
fucomi
mov
out
sbb
sar
mov
jnp
push
icebp
add
bound
sbb
ljmp
xor
imul
subl
push
and
sub
xchg
std
mov
dec
popf
jns
das
scas
sub
sub
popa
jp
ret
bound
test
xchg
mov
mov
sub
dec
test
jbe
push
mov
adc
stos
lds
fstpl
xor
stc
and
loope
adc
sahf
pop
pop
fsts
dec
mov
mov
inc
pop
or
xlat
nop
push
mov
dec
neg
pusha
cwtl
cmc
mov
sahf
jnp
out
dec
dec
cwtl
pop
sbb
sbbb
push
mov
pushf
jl
lds
fwait
idiv
bound
lahf
movsb
mov
aad
aas
push
jmp
outsb
xchg
aas
sbb
pusha
push
sub
pop
xlat
aad
imul
push
jno
addr16
imul
icebp
mov
mov
rorb
scas
dec
mov
fwait
mov
or
jg
jmp
je
in
nop
add
push
ljmp
jl
test
fcmovu
xchg
ret
mov
adc
adc
pop
gs
xchg
cmp
test
leave
cmpsb
out
inc
pop
scas
mov
aaa
xor
and
xchg
cmp
mov
aam
fcomps
sbb
sbb
push
mov
test
push
jns
movsl
imul
dec
inc
rcr
cld
mov
insb
fidivrl
cmp
lods
sub
les
aam
dec
sahf
jbe
mov
add
jecxz
adc
lds
add
cmp
leave
daa
or
scas
in
lods
jmp
dec
loopne
jo
mov
jae
lods
aad
fcmovnb
dec
out
pop
inc
mov
pushf
jmp
fdiv
imull
mulb
xor
les
pop
in
mov
cld
jne
push
lcall
add
mov
test
mov
pop
mov
loope
bound
jae
sbb
hlt
and
fistl
and
jg
adc
pop
cltd
xor
testl
xchg
add
xor
clc
inc
pop
adc
and
fdivr
jne
fdivrs
jbe
popa
pop
xlat
mov
jo
sbb
shr
mov
mov
scas
mov
fldcw
lods
rcrl
andb
inc
pop
stc
sbb
test
dec
pop
cmp
repz
sbb
test
mov
adc
push
cmpsb
ja
sti
imul
mov
mov
testb
or
mov
rcl
aam
lods
sbbb
or
aas
mov
mov
sub
fnstenv
sub
test
ret
mov
ret
lock
xchg
cmpsl
std
mov
movl
mov
into
pop
pop
mov
cmp
mov
xor
int
loop
cmp
pop
jnp
ljmp
sarb
mov
mov
pop
lcall
fcoml
jmp
jo
push
dec
bound
leave
aad
gs
aaa
movsbl
mov
cmp
cwtl
mov
or
js
sbb
and
sbb
icebp
dec
movsb
cs
ds
pop
dec
sti
ret
jb
mov
stos
inc
fsubr
lods
fnstsw
loope
cwtl
test
jnp
dec
pop
cwtl
in
dec
push
inc
subb
push
mov
adc
dec
mov
das
shll
lcall
arpl
pop
stos
test
or
adc
xor
loope
push
es
decl
leave
mov
das
aad
adc
addr16
ror
adc
jge
mov
cmpl
adc
mov
add
xchg
outsb
or
lret
jno
icebp
push
mov
push
or
loope
push
add
add
push
and
adc
xchg
push
stos
sub
ror
imul
push
sbb
test
xchg
pop
jmp
sbb
push
stc
add
int
xchg
int
scas
lea
out
arpl
ficomps
shl
xchg
xchg
mov
arpl
sub
lock
push
and
xor
xchg
mov
ja
xor
cwtl
out
cmc
cmp
xchg
jnp
mov
and
push
cs
bound
imul
adc
data16
je
popa
mov
sbb
and
add
push
roll
push
and
push
inc
negb
cwtl
jo
mov
std
pop
mov
mov
jecxz
and
cmp
adc
mov
pusha
push
insl
notl
movsb
add
xchg
js
xchg
test
jo
ficoms
xor
aaa
insl
and
outsb
out
out
mov
inc
ljmp
dec
xchg
cwtl
mov
mov
pop
insb
les
xchg
jge
insl
push
movsl
out
into
stos
adc
fiaddl
push
mov
shlb
adcl
repz
sbb
mov
out
in
inc
jne
pop
and
in
test
sub
sub
adcl
jle
nop
xchg
inc
push
ror
sub
mov
icebp
and
cltd
std
aaa
stc
and
les
gs
push
cmpsb
inc
cmp
mov
in
je
imul
out
in
pop
es
cmpsl
jecxz
mov
data16
shrb
mov
sub
stos
xchg
in
stos
cmp
mov
dec
inc
int
push
xchg
adc
iret
push
or
jmp
test
jmp
xor
xchg
inc
push
mov
ja
in
cmp
jb
inc
and
sbbb
fadds
xor
push
into
hlt
sahf
cmp
xchg
cld
inc
aas
push
mov
insb
mov
jae
fwait
sbb
jno
bound
mov
pop
call
scas
jmp
cltd
xchg
and
mov
fidivl
cmp
cltd
lahf
cli
scas
sub
in
ds
out
push
jb
jbe
inc
mov
mov
xchg
pop
pop
repnz
daa
clc
push
cli
out
loop
mov
mov
xorb
mov
push
imul
adc
lock
lods
xor
jge
sbb
inc
popf
scas
faddl
into
call
mov
mov
sbb
test
mov
push
adc
xor
pop
movsb
je
lahf
sarl
sbb
cwtl
xchg
push
mov
xchg
insb
int3
sub
mov
test
mov
or
stc
dec
xor
dec
sub
bound
xchg
dec
popf
and
pusha
pop
sub
repz
pop
mov
insb
rorb
push
fistl
mov
mov
pop
orb
dec
add
mov
adc
popf
mov
mov
lea
sbb
outsb
sub
or
mov
mov
and
and
cwtl
cmp
lret
jo
inc
movsb
inc
jo
in
inc
roll
insb
mov
jae
ljmp
daa
jecxz
lock
hlt
jb
xchg
dec
xchg
mov
and
in
mov
and
popw
sub
enter
cmp
lods
xchg
movsl
incb
das
xchg
insl
inc
jp
iret
dec
loop
adc
fs
in
aam
pop
cmp
cmp
arpl
hlt
xor
mov
outsb
jo
sub
sbb
jns
sub
out
test
xor
jl
cmpsl
mov
pop
pop
cld
sbb
insb
fcmovbe
sbb
and
sub
outsb
push
inc
pop
daa
stc
mov
jo
mov
push
jb
inc
loop
mov
addr16
fisubs
sub
repnz
std
fistps
mov
jmp
lret
mov
inc
or
xor
pop
inc
push
and
push
mov
pop
push
enter
adcb
bound
push
push
push
dec
hlt
adc
loopne
jl
inc
and
andb
xor
jbe
mov
js
push
pop
pushl
movsl
xchg
fsubr
mov
fmull
cs
movsb
sti
leave
jb
popl
aad
mov
jo
ret
pop
adc
adc
test
lret
xchg
mov
rcl
cmp
ja
jnp
mov
mov
out
and
xchg
sti
outsl
add
add
dec
icebp
outsl
push
sarb
xchg
test
cwtl
into
or
sbb
sub
mov
shll
pop
jb
repz
in
fistps
in
pusha
cld
or
xor
into
rcll
sub
jmp
mov
insl
notl
jo
push
xchg
popa
mov
es
mov
std
out
popf
test
clc
mov
mov
movsb
cmp
and
mov
mov
jns
add
inc
ret
les
xor
or
in
mov
sbb
cmpl
psadbw
xor
stos
dec
push
push
dec
adc
jg
dec
pop
jp
or
jp
or
mov
pop
xchg
adcb
lods
xor
insb
mov
js
push
in
mov
and
jnp
addb
and
pop
popf
mov
push
addr16
sbb
and
inc
pop
push
lcall
roll
inc
stos
mov
sbb
push
mov
lds
add
lods
mov
adcb
cltd
lcall
lods
scas
inc
daa
sti
adcl
movsl
rcrl
mov
mov
mov
data16
or
cmp
lret
fiaddl
es
mov
sbb
sbb
jno
mov
stos
and
cmp
or
xor
mov
movsb
rclb
ljmp
or
mov
lock
and
cmp
lods
push
and
jg
xchg
ret
insl
xor
bound
push
mov
or
shlb
jmp
or
ja
cmp
out
xchg
lea
mov
xor
imul
lock
stc
pop
sbb
jmp
aas
jbe
movl
fiadds
test
add
lret
addr16
inc
shlb
mov
push
mov
enter
xchg
stos
mov
mov
or
push
mov
stos
dec
out
je
mov
cmc
out
aaa
data16
xor
xor
stos
dec
dec
lock
repz
ret
ja
lret
mov
jno
pop
faddp
movsl
dec
fistl
jge
shll
pusha
adc
mov
fcoms
sbb
icebp
jo
sub
adc
jo
imul
fldt
xchg
xchg
cmp
lret
cld
jg
push
sub
or
jne
cmpsl
sub
movsl
mov
in
sbb
pop
jp
notl
mov
out
adc
sti
shl
cmpsb
insl
or
inc
jle
add
sti
pop
xor
adc
lret
xchg
mov
jae
dec
fsubrl
mov
inc
and
and
ljmp
stc
push
mov
bound
and
mov
and
jo
push
fdivl
mov
std
movsl
mov
ret
out
push
xlat
jno
xchg
das
shlb
adc
test
jp
lods
cmp
push
and
sbb
mov
jb
repnz
push
scas
dec
arpl
add
ljmp
dec
aaa
in
sti
repz
push
push
repnz
lret
xchg
push
sub
leave
test
cs
cmpsb
cmp
dec
in
jno
std
sub
fistpll
inc
loope
pop
xchg
rcrl
xor
pop
nop
data16
rcr
or
stos
jecxz
sbb
adc
dec
or
xor
loope
ret
push
inc
add
rcr
xchg
jnp
fidivrs
xchg
cmc
lods
cwtl
loope
push
mov
push
nop
gs
sub
sbb
repz
gs
add
xor
addr16
pop
xor
add
jp
push
mov
and
xchg
into
adcb
pop
mov
jp
rcrb
nop
iret
xor
mov
fnstenv
leave
or
imul
push
cmp
movsl
sahf
aam
dec
lret
stos
cmpb
cld
push
pop
mov
out
fdiv
mov
stc
jae
sbb
inc
and
mov
dec
sbb
inc
daa
mov
xor
cmpsb
imul
adc
add
mov
add
push
ret
roll
mov
xorb
test
aaa
push
outsb
sub
push
sbb
push
dec
pop
iret
daa
daa
mov
xor
jo
cmp
sahf
cmp
loop
roll
and
xchg
dec
les
xor
in
out
inc
aam
mov
mov
int3
in
lock
mov
scas
push
stos
xchg
cmp
xchg
sbb
test
xor
and
nop
xor
into
outsb
outsl
mov
es
dec
repnz
push
dec
fstpt
mov
mov
in
cmp
cld
lahf
mov
aas
ja
xchg
in
int
shrl
mov
cld
loop
sti
aaa
sub
lret
in
pop
sbb
pop
xchg
inc
add
sub
fdivs
jl
xor
and
jno
adc
shlb
shrb
movsl
mov
jle
mov
inc
loope
inc
cmp
inc
mov
mov
aam
cltd
out
stc
scas
sbb
adc
das
sbb
sahf
push
cld
sub
xchg
icebp
mov
inc
cmpsb
jne
fstpl
mov
push
mov
pop
mov
pop
shll
in
or
roll
and
push
add
and
mov
cmp
pop
gs
mov
mov
jbe
mov
icebp
inc
mov
in
adc
fcoms
movsl
jmp
xor
xlat
test
stos
mov
push
fldenv
cmp
mov
jb
push
pop
cmpl
inc
adc
into
enter
jge
adc
lods
push
into
mov
arpl
pop
or
jns
jmp
movsb
inc
mov
pop
mov
sbb
push
aaa
mov
ret
sub
jg
lock
or
stc
sub
mov
fidivs
lret
xchg
jo
cmp
stc
jle
stos
ret
sub
push
mov
or
int
xor
mov
jbe
repnz
gs
mul
js
mov
mov
je
xorl
imul
or
lea
out
sbb
mov
mov
std
mov
fcomp
xor
leave
xchg
fisttpll
xchg
add
pop
push
cmpb
aas
push
test
lahf
push
cs
jl
push
xor
sub
cmpsb
mov
repnz
mov
adc
adc
or
adc
sub
or
popf
sub
inc
jo
mov
incl
arpl
jns
test
hlt
inc
in
imul
psrad
add
pop
outsl
bound
fidivrs
inc
mov
cltd
jge
jbe
sbb
push
adc
and
sti
mov
dec
push
adc
push
faddl
add
stos
mov
xor
xlat
mov
cli
xchg
inc
sub
mov
sbb
or
dec
jmp
mov
add
mov
roll
mov
addr16
sbb
sub
or
int
dec
mulb
iret
sbb
fxch
jmp
orl
push
sub
fdivrp
xor
jle
outsb
mov
cmpsl
xor
mov
push
xchg
fmuls
sub
inc
mov
sub
out
sbb
leave
push
adc
ja
jb
adc
cmp
ds
cld
lods
xchg
mov
andl
mov
dec
mov
mov
ljmp
testl
imul
loop
clc
lods
push
add
pop
test
dec
xchg
sti
lcall
dec
push
jbe
cmpsl
push
adc
xchg
ja
into
adc
or
push
or
popf
jmp
push
dec
in
inc
add
ja
jns
in
out
add
xlat
pop
outsb
test
pushf
pop
jmp
xchg
xor
pop
scas
es
je
mov
or
gs
scas
pusha
xchg
fcomps
and
mov
pop
or
mov
popf
lods
and
clc
cmpsl
ss
mov
js
mov
dec
cmpsl
pop
jp
inc
ljmp
lahf
push
xor
mov
adc
mov
pop
jnp
aam
hlt
les
add
sahf
or
cmpsb
sub
and
mov
push
mov
jmp
bound
sahf
sbb
gs
test
in
sbb
ss
inc
cmp
mov
jbe
mulb
dec
fbstp
inc
sahf
fcomps
stos
sub
shl
imul
test
add
les
dec
inc
cmpl
mov
jb
iret
sbb
xor
test
out
daa
rolb
test
clc
arpl
sbb
pop
sti
jae
inc
jp
sbb
les
lcall
cs
mov
push
mov
mov
lods
jp
adc
or
mov
dec
push
sub
mov
stc
inc
xchg
out
sarb
fadd
sahf
inc
and
dec
or
sbb
ficoml
cmp
aad
inc
jb,pn
lahf
jle
sub
and
outsl
xorl
adc
inc
ss
xchg
mov
pop
movsb
repz
lret
inc
jnp
sbb
xor
outsl
stos
xchg
pop
dec
pop
inc
push
pop
pop
ss
cmpsl
idivb
add
sbb
ljmp
call
xor
mov
xchg
mov
sbb
jne
dec
adc
jle
add
pop
sbb
push
fiadds
adc
mov
ja
pop
leave
jecxz
jno
xchg
icebp
cmp
add
adc
fs
clc
mov
cwtl
jecxz
and
ja
mov
dec
sbb
dec
cli
and
add
ss
xchg
sbb
jg
push
mov
xchg
rcrb
sbb
ret
repz
test
out
mov
pop
bound
and
adc
jg
mov
mov
pop
dec
adcl
inc
sub
cmp
out
xor
rorl
xchg
mov
and
push
rcl
ja
push
inc
lret
dec
fstpt
mov
rcrb
mov
fmuls
or
arpl
push
jne
xor
sbb
outsb
out
jne
sub
in
inc
and
and
xor
and
mov
dec
loopne
pusha
inc
sbb
sbb
mov
jmp
inc
gs
filds
sbb
mov
daa
or
mov
cmpsl
fistpll
jmp
ja
nop
mov
mov
jnp
or
jns
add
mov
lahf
mov
and
cmp
or
xchg
rol
fldt
xor
enter
aad
xchg
mov
lcall
pop
sub
andb
gs
ret
add
adc
mov
jg
jo
shrl
inc
test
out
test
ljmp
ja
xlat
lret
mov
mov
hlt
xchg
ficoms
popa
jne
sub
sbb
into
pushf
lods
sti
gs
rcrb
inc
es
xchg
sub
mov
jmp
test
clc
inc
call
mov
cmpsb
sub
mov
cmp
mov
xchg
ss
jl
movsl
xchg
mov
test
push
sub
out
mov
xchg
lea
push
repz
test
sub
subb
jns
mov
sbb
gs
out
arpl
test
fmuls
arpl
sahf
neg
aam
insb
or
xchg
xchg
or
lahf
mov
fisubrs
inc
in
push
in
outsl
fwait
out
push
push
shl
int3
inc
mov
stc
rol
adc
out
sub
mov
and
and
mov
out
sarl
mov
mov
push
push
je
lock
data16
cwtl
in
inc
out
fldl
rcrb
dec
sub
or
mov
mov
jae
in
icebp
stos
fisubl
pop
repz
int
lods
ljmp
bound
sbb
notl
int3
mov
sbb
arpl
int
mov
test
xchg
mov
mov
pop
shrb
push
jb
add
mov
push
dec
xchg
sub
ficoml
loop
imul
lods
adc
or
arpl
sysret
pusha
sbb
xlat
fmull
pop
add
orl
mov
sbb
mov
ret
jle
stc
aam
cmc
inc
cltd
mov
ret
sbb
gs
xlat
fmull
negb
xchg
add
add
inc
mov
jbe
and
gs
je
testl
out
fildl
cli
jno
mov
faddp
rorb
add
fucomi
dec
arpl
int3
aaa
mov
xchg
out
dec
add
cmp
sbb
lds
mov
mov
pop
hlt
xlat
iret
cmpsl
jns
in
insl
imul
insl
filds
and
or
xchg
pop
push
xchg
sbb
sub
inc
jo
lret
add
jb
aaa
aad
leave
adc
das
dec
lret
lock
pop
cmp
pop
stc
gs
lret
fdivl
aaa
sub
dec
push
push
or
adc
mov
addr16
mov
push
sub
cmp
dec
rorb
sbb
push
xor
int
inc
or
ss
push
cmp
pop
lea
add
cmpl
in
sbb
sbb
jne
pushf
dec
push
add
xor
dec
cwtl
jp
adc
pop
mov
sbb
jno
xlat
pusha
lds
addr16
aam
jmp
icebp
jo
out
sbb
and
add
fimuls
lret
pop
adc
bound
cmpb
data16
mov
xor
into
inc
pop
cmp
punpckhdq
addr16
in
cmp
jge
imul
add
outsl
je
pop
dec
out
into
or
add
sbbl
mov
cmpsl
adc
or
insl
lods
inc
cmp
lahf
mov
mov
sbb
pop
fstpt
popf
pop
jp
cmp
dec
ss
fnstcw
retw
and
fistl
xchg
push
pop
sbb
inc
add
inc
repnz
ret
stos
das
mov
dec
jae
jnp
sti
mov
cmpsl
sti
or
or
fistpll
pop
leave
jge
add
out
inc
xchg
loope
mov
push
gs
cmp
xchg
dec
xchg
xor
dec
out
bound
adc
lret
push
sbbl
dec
sarb
into
repnz
stos
xor
rorl
fisubl
fs
call
lods
jno
iret
mov
andl
inc
outsl
cmp
sbb
loop
jo
mov
call
xchg
aam
imul
mov
or
call
pop
int
cmp
das
fisubl
inc
jmp
push
repz
je
daa
scas
js
mov
fcomps
nop
or
stos
jl
js
loope
ss
mov
call
add
xchg
jb
xor
lods
into
call
icebp
pop
and
stc
testb
ljmp
imul
js
adc
push
aaa
jno
into
iret
scas
repz
popf
pop
push
in
and
push
bound
pop
mov
sub
mov
push
stos
mov
jnp
loope
scas
test
dec
add
push
or
movsb
jmp
test
mulb
jno
outsl
add
jle
inc
lds
stos
call
orb
dec
jns
xor
cmp
mov
js
or
xor
adc
sbb
pop
mov
dec
sti
mov
sbb
lahf
repnz
xor
dec
fidivrs
lods
mov
ret
mov
add
jp
arpl
mov
inc
jbe
cmp
jo
inc
ret
test
in
ja
movb
divb
out
std
sbb
adc
mov
in
jbe
dec
jb
iret
aas
jl
test
js
fisttps
nop
mov
adc
mov
mov
sbb
dec
pop
mov
arpl
ret
xor
repz
push
cli
jl
int3
cmp
adc
mov
jae
xor
lods
insb
and
xlat
insb
fdivs
push
rcrl
mov
mov
mov
fwait
xchg
xor
mov
inc
insl
pop
sub
imul
fsubr
lret
shlb
lds
jo
popf
push
jno
sbb
pop
jne
xchg
arpl
loopne
sti
addr16
stos
jl
or
jns
add
addr16
je
jbe
jne
pop
fadds
outsl
call
in
js
jae
dec
push
jns
dec
lods
lods
and
xchg
pop
shll
mov
jns
rcrb
popa
add
dec
inc
imul
push
out
repz
or
ja
cmp
cmpsl
outsb
outsl
jg
addr16
cmpb
jno
push
lock
inc
pop
in
xchg
jno
adcl
adc
sbb
or
insb
test
test
add
test
and
or
cld
cmp
cltd
dec
ljmp
in
jmp
negl
outsl
clc
cmp
lahf
inc
jmp
testl
in
xchg
ret
mov
movsl
and
rol
rcl
mov
sti
aad
sbb
sub
pop
lods
rcr
icebp
mov
or
sub
push
pop
fincstp
clc
pusha
pop
mov
push
push
addr16
inc
repz
int
pop
or
mov
push
mov
test
adc
rolb
and
mov
adcb
jbe
ljmp
test
cmp
sbbb
fstps
lret
in
adc
xchg
cmpsb
int
int3
or
rorb
inc
lea
push
into
add
nop
icebp
pushf
jp
mov
cmpsl
xor
sub
ja
mov
dec
inc
xchg
cmp
jo
sub
add
cmp
dec
jnp
rcll
out
lock
repnz
stc
ljmp
push
xchg
lret
jbe
fdivl
fadds
pop
cltd
or
adc
mov
jb
sbb
xorb
inc
push
testb
sbb
lahf
jecxz
push
jmp
rorb
sbb
xchg
inc
dec
pop
lods
mov
es
lret
outsb
xor
dec
std
cmp
add
mov
in
jmp
icebp
movsl
dec
outsb
movsl
adcb
xchg
lods
pop
mov
dec
aad
jb
mov
push
mov
clc
es
stc
jp,pt
ljmp
test
mov
sub
fadds
push
jge
cld
arpl
fadd
or
jo
mov
mov
out
js
inc
imul
push
rolb
in
loope
jb
movsl
out
data16
inc
cli
test
xor
pop
fmull
popa
pop
sbb
push
js
xchg
call
sub
pop
add
push
jge
jnp
movsb
cmc
push
stos
or
sbb
jp
movsl
sub
adc
lahf
aas
and
pop
lcall
jmp
jecxz
mov
add
mov
and
fdivrl
jge
rclb
pushf
out
ret
jno
cwtl
or
inc
sub
mov
cld
xor
mov
dec
cs
dec
jbe
sub
dec
je
les
shrb
shrl
pop
fs
inc
sti
test
daa
xchg
fidivrl
dec
repz
shrb
idivl
data16
sub
push
xchg
pop
sbb
cmp
sub
sub
jb
test
addr16
jo
out
mul
sbb
dec
pop
sbb
ljmp
inc
and
fs
lcall
jg
xor
mov
or
or
mov
xor
movsl
imul
xchg
ss
subb
lcall
mov
push
fcmove
add
adc
sub
add
je,pn
mov
add
cmp
cld
adc
pop
dec
xchg
jb
mov
sub
cwtl
imul
mov
insb
in
loope
xchg
and
push
orl
xchg
adc
rorb
test
pushw
xchg
inc
das
stos
jge
add
call
lods
out
cmp
movsl
xchg
cli
test
cmp
pop
pop
push
jge
add
int
sub
imul
daa
shll
cmp
mov
jecxz
jo
pop
loopne
hlt
jg
xchg
ljmp
sbb
int3
add
jl
cmpsb
xchg
ss
add
ss
out
adc
testb
mov
jne
pop
popf
mov
mov
insl
sub
aam
inc
and
cmc
jp
sbb
or
mov
jp
imul
inc
inc
sub
aas
add
jo
lea
mov
adc
jo
dec
imul
or
cmp
mov
int
mov
inc
dec
push
xchg
stos
movsb
and
sarl
fdivr
mov
push
dec
int3
dec
cli
push
inc
adc
fbstp
sub
jmp
inc
popa
cmp
clc
inc
xchg
push
mov
test
out
das
xchg
lret
dec
idivl
adc
mov
filds
inc
mov
loopne
add
and
out
stos
pop
sahf
das
outsl
mov
rol
xchg
das
mov
add
sbb
cmp
mov
pushf
sub
sti
test
mov
push
jp
xchg
in
das
imul
inc
cmpsb
lret
dec
imul
xchg
inc
xchg
xor
mov
push
rorl
incw
xchg
repz
das
call
xlat
jb
jne
mov
cmp
add
popa
sub
fistpll
jne
jnp
mov
mov
sbb
xchg
dec
out
shl
test
lods
push
lock
and
mov
inc
xor
dec
jle
dec
cmpsb
inc
mov
pop
dec
or
call
xor
dec
lds
jmp
xchg
inc
sbb
dec
test
cmc
inc
sub
loopne
inc
and
pop
setl
xchg
mov
hlt
inc
dec
testb
orb
pop
mov
lahf
data16
in
in
cmp
mov
and
cld
pop
xchg
sbb
fisttpll
stos
andb
shrl
sbb
dec
loope
shrb
aad
adc
in
sbb
or
xor
imul
xor
in
jle
push
lods
mov
jmp
ror
jb
and
sarb
addl
ret
mov
test
mov
xchg
int3
mov
ret
pop
clc
sub
shrb
xchg
mov
xlat
test
outsl
mov
sub
clc
adc
rolb
clc
fimuls
mov
in
nop
paddb
loopne
roll
inc
and
push
add
and
negl
xchg
test
and
nop
fnstcw
loop
dec
jae
push
aaa
mov
neg
pop
cmp
test
xchg
shrl
mov
dec
test
push
mov
ret
lret
cmp
jl
stc
mov
test
or
mov
mov
add
scas
aaa
adc
iret
pop
push
lock
inc
loope
shl
mov
add
lods
js
mov
lcall
mov
lock
jnp
add
dec
cmp
cmp
mov
rcl
and
rcrl
sub
imul
arpl
mov
ds
mov
jo
inc
into
das
and
in
inc
loop
into
dec
or
stos
mov
cmpsb
mov
mov
lret
push
pop
in
lret
es
bound
pop
xor
enter
inc
adc
xchg
sub
lds
add
adc
push
jge
xor
jle
lret
or
adc
xor
fcoms
rcrb
push
lods
jae
sbb
lods
adc
add
sbb
cld
mov
jno
xchg
aad
jne
movsb
or
dec
cwtl
xchg
mov
shr
sahf
les
pop
xchg
leave
pop
out
mov
xor
add
imul
sbb
fistpl
jne
push
or
push
mov
pop
lods
nop
push
dec
inc
push
jne
pop
in
mov
dec
sbb
call
mov
js
add
mov
push
ret
and
pop
sbbb
repnz
mov
lahf
and
lret
js
mov
push
cli
sub
rorl
pushf
adc
pop
xor
jb
repnz
mov
mov
aam
sti
jbe
test
addr16
in
adc
sub
jmp
or
mov
in
aam
in
xor
cltd
pop
adc
pusha
or
popa
pop
inc
jns
test
xlat
sub
sub
call
pop
fchs
and
pop
dec
lret
enter
or
mov
mov
xchg
imul
mov
xor
mov
lahf
inc
inc
imul
arpl
cmpb
lds
xor
stc
outsl
iret
add
in
insl
sub
adc
ljmp
inc
mov
mov
aam
dec
sbb
pop
mov
icebp
cltd
pop
pop
fdivl
pop
push
cltd
push
stc
add
xlat
icebp
xchg
inc
into
mov
dec
push
out
dec
call
addr16
stc
add
dec
xorl
cwtl
rorb
sahf
jo
cmpsl
jle
cmp
scas
sub
out
inc
cmp
shlb
sub
imul
pop
mov
icebp
mov
inc
aam
jns
jecxz
dec
cli
cmp
pop
add
fs
sbb
pusha
pop
adc
jl
pop
fistl
cs
or
test
mov
and
mov
lock
dec
call
arpl
nop
inc
je
aaa
addr16
xchg
loope
int
pop
mov
es
addr16
inc
div
jge
mov
mov
insb
cmp
cmp
sbb
add
push
xchg
add
fidivrl
inc
fcoml
push
repnz
inc
dec
aaa
loopne
lods
xchg
jo
dec
test
stos
xchg
mov
in
arpl
or
mov
movsb
out
cmp
xor
aad
xor
popa
mov
outsb
or
sbbl
or
dec
jae
xor
pop
cmpsb
mov
into
in
fstps
in
cmc
jl
inc
add
mov
add
or
mov
inc
push
xrelease
jb
jl
add
cmp
or
xor
lcall
lcall
in
jge
aam
jl
imul
and
mov
or
movsl
push
mov
movsb
cs
xchg
scas
push
or
into
fsubr
pop
mov
push
popa
inc
test
mov
hlt
loop
add
xor
adc
sbb
std
sbb
pop
add
jge
outsl
rcrb
push
push
adc
or
cmpsl
lret
lds
test
lock
add
inc
out
cld
push
jb
mov
push
iret
test
hlt
push
lret
clc
xor
bound
addr16
es
dec
cmp
arpl
cmpsb
dec
leave
push
lahf
out
test
dec
inc
inc
jle
aam
imul
mov
test
or
sbb
mov
cmp
bound
jg
jecxz
adc
adc
adc
rcrb
int3
js
jnp
jge
es
adc
add
add
aad
or
cltd
loope
jns
arpl
inc
cmp
mov
dec
xlat
add
in
xchg
cld
cmpsb
movsl
sbb
roll
xor
lret
or
jmp
shlb
mov
push
shl
inc
sahf
addb
mov
clc
in
call
jo
sub
push
push
add
push
mov
fwait
mov
inc
sti
adc
sub
loopne
cmp
lret
test
pop
add
push
lea
push
cmp
push
ss
add
push
leave
out
jnp
xchg
cmp
imul
cmp
test
lea
and
roll
pusha
cli
subl
shrb
jnp
mov
sbb
adc
cmp
test
aaa
dec
cmp
loopw
mov
outsl
xorl
sahf
push
int
data16
mov
pop
ds
push
mov
mov
or
lods
xchg
stos
jno
addr16
not
outsl
xor
test
sahf
jp
mov
aam
ret
das
rcrb
mov
hlt
and
shrb
cwtl
push
lret
dec
sbb
xchg
movsb
sub
fimull
nop
mov
xchg
insb
or
xchg
xchg
hlt
lock
decb
sarl
movb
mov
push
sbb
stos
lds
sbb
sbb
rcr
dec
adc
std
sub
arpl
stos
sub
add
imulb
test
pop
jl
xlat
sahf
stos
sbb
stc
fwait
sbb
imul
adc
jbe
add
in
clc
ja
push
bound
jp
push
in
lods
fbstp
int3
mov
out
dec
test
rcll
je
aas
int
mov
loope
jbe
popf
fidivl
xlat
int
dec
pop
jge
cmpsl
xchg
add
jo
cmpsb
sahf
pop
add
jecxz
call
mov
addr16
movb
nop
xor
add
dec
adc
repnz
loop
jle
shlb
push
movsl
popa
cmpsb
stos
movsl
lret
outsb
cltd
add
mov
adc
out
punpcklbw
mov
xor
loop
mov
inc
pop
sahf
cmpsl
cmp
sub
repnz
push
mov
xlat
imul
ret
mov
aam
mov
cmp
lods
xchg
mov
jnp
mov
icebp
and
iret
jmp
les
inc
cltd
or
hlt
dec
xchg
cs
sysexit
xchg
rorl
dec
push
lret
in
orb
jp
cld
inc
pop
mov
add
lret
jae
push
in
pop
cmp
jl
cmp
pop
mov
adc
fidivl
outsb
rolb
sub
dec
and
mov
lret
adc
pop
push
add
outsl
outsl
xchg
scas
mov
je
inc
lock
cmp
out
push
fdiv
call
mov
call
fsts
xchg
push
sbb
pop
inc
mov
pop
jle
dec
xchg
adc
outsl
test
xchg
xchg
imul
push
mov
inc
inc
movsb
and
cmp
popa
add
addr16
test
and
add
dec
mov
jo
arpl
push
pop
inc
int3
movsw
jp
cmpb
imul
mov
xchg
aad
cmc
imul
call
dec
or
adc
int3
mov
and
and
lods
test
or
jmp
sbb
mov
inc
out
mov
in
arpl
cmc
push
not
lret
cld
adc
test
mov
subb
iret
jle
jle
mov
xor
jno
or
in
loope
pop
mov
fcoml
dec
or
jmp
add
aad
movsb
xchg
cld
sub
fwait
ret
and
dec
ds
insb
jp
pushf
cmpsb
inc
and
pop
lea
mov
xchg
pop
pop
enter
js
sar
test
push
cld
push
cli
fsubs
out
clc
mov
add
js
jecxz
cwtl
pop
test
ljmp
arpl
cmp
mov
stos
lret
mov
pop
int
bound
stc
or
xchg
xlat
cwtl
sti
dec
fwait
out
adc
adc
xor
mov
mul
outsb
cmpsl
xor
out
fildll
fdivs
push
mov
sub
call
test
test
xor
addl
loop
sub
dec
out
ss
add
mov
out
add
adc
cmpsl
fs
cltd
mov
mov
fbld
test
sub
test
stos
push
std
stc
loop
nop
xchg
or
or
push
sbb
push
adc
lods
inc
cmp
out
push
test
mov
inc
mov
dec
mov
xchg
mov
mov
push
adc
add
adc
mov
pop
dec
es
cs
mov
mov
stos
pop
mov
in
jl
add
xchg
and
xchg
inc
pop
sbb
scas
fidivl
mov
push
in
imul
sbb
and
jo
push
push
lock
in
mov
jbe
repz
inc
ret
hlt
imul
mov
add
xchg
hlt
stos
repnz
inc
inc
dec
cmpsb
pop
push
clc
mov
cmpsb
inc
mov
push
jmp
mov
dec
cmp
imul
sti
cmp
mov
ljmp
mov
hlt
mov
cwtl
xlat
push
int
sbb
popa
jo
cmpsl
mov
iret
clc
sbbl
push
and
outsl
paddw
scas
popf
push
mov
cmp
xchg
xchg
xchg
add
imul
divb
pusha
xor
mov
inc
adc
scas
sahf
inc
mov
scas
mov
push
fdivl
cmp
sbbb
xor
xor
jb
dec
push
sbb
sbb
jecxz
outsl
lea
cmp
push
adc
dec
xchg
cmpsb
jp
lods
push
jmp
out
int
shll
test
ja
pop
icebp
xchg
add
mov
push
roll
pop
aam
sti
pop
pusha
mov
dec
mov
add
inc
cmp
inc
sbb
sbb
sbbb
mov
popa
pop
adc
mov
sub
imul
cmp
lea
and
bound
xchg
push
scas
mov
sub
cmc
or
inc
adc
aaa
push
pop
dec
push
pop
outsl
out
xor
lods
je
aas
mov
add
hlt
jns
test
mov
inc
popl
mov
mov
inc
xor
xor
dec
cs
test
sbb
fidivrs
insb
popa
add
push
and
ljmp
mov
xorb
lahf
ret
out
and
sub
or
adc
ljmp
sub
in
or
and
or
leave
bndldx
push
pushf
jmp
cmp
and
xor
int3
jge
cmp
lock
xchg
pop
jmp
hlt
push
jno
jmp
gs
jb
sbb
dec
xchg
daa
cmp
sub
fiadds
adc
pop
xchg
adc
enter
inc
sbb
sbb
mov
jae
mov
pop
sbb
xchg
outsb
cmpsb
dec
jb
rcr
lock
and
push
jle
je
mov
jp
jl
loope
push
stos
leave
outsw
cmp
inc
daa
pop
cmpsl
jb
sub
cmp
push
jp
repnz
mov
popf
pop
stos
rcr
inc
test
xchg
leave
inc
loope
lret
addr16
push
jne
adc
pop
aam
jns
push
scas
cld
pop
js
shrl
in
cmp
xchg
mov
jno
cmpsb
adc
cmpsl
into
leave
jmp
hlt
mov
adc
mov
jb
lahf
xor
je
fucomi
int3
pushf
mov
mov
sub
inc
add
and
mov
lock
xlat
sbb
sti
or
xchg
scas
js
sub
inc
adc
xchg
jno
jmp
jo
lea
and
clc
dec
push
hlt
push
sbb
xchg
mov
fidivrl
aaa
mov
pop
aad
repnz
push
cmp
pop
or
or
pop
ret
xchg
outsb
pop
aaa
inc
mov
mov
inc
jo
pop
or
inc
xchg
sti
dec
ss
dec
xchg
pop
fwait
pop
movsb
and
add
xor
sbb
cmp
dec
in
push
outsl
bound
and
jnp
push
add
cli
sub
jne
or
test
adc
icebp
adc
leave
cmp
aad
sti
inc
dec
fiadds
pop
sbb
push
cmpsb
sub
sarl
sar
jge
into
xchg
mov
shll
mov
add
dec
dec
and
xchg
mov
mov
cltd
push
scas
cs
rolb
subb
bound
sub
sahf
rcrb
out
sbb
jno
lret
loope
adc
push
cmp
decl
int3
xor
jnp
lods
mov
mov
push
addr16
movsb
mov
jnp
xor
sti
sarl
aaa
push
xor
sbb
sub
push
push
adcl
xor
add
mov
cmp
xorb
and
out
cmp
lock
clc
or
in
sti
inc
in
xor
scas
rorb
icebp
lds
lods
inc
ret
stc
pop
xchg
bound
and
loop
insl
mov
adc
dec
dec
loopne
xchg
lods
outsb
cmp
out
xchg
inc
inc
add
insl
ficoml
rdpmc
mov
enter
mov
add
push
push
in
inc
add
jne
jge
xchg
pop
xor
mov
mov
cmc
bound
insl
test
add
pusha
and
and
mov
rorl
leave
adc
cli
roll
movsl
rcrb
repnz
test
aaa
in
imul
mov
loope
mov
rcll
imulb
lods
adc
mov
and
sbb
mov
cmp
std
add
stos
cmp
cmp
out
incl
dec
fwait
mov
mov
sbb
mov
in
mov
je
xor
sbb
shrb
pop
xor
rcrb
je
push
inc
in
shl
insb
dec
cmc
outsl
jle
sti
je
cmp
incl
clc
lods
lods
push
inc
addb
mov
cmp
dec
test
aad
cs
mov
ret
mov
adc
mov
xchg
push
popa
ret
cmp
je
xor
daa
dec
test
jle
sub
cmp
xor
inc
repz
bound
in
inc
divl
es
idivb
jns
cmova
and
rcrl
and
pop
fsubrs
mov
cmp
xchg
rorb
adc
sub
int3
xchg
gs
push
repz
or
pop
push
inc
imul
mov
out
test
fldenv
fistpll
mov
xor
fs
xor
lret
inc
jno
ljmp
test
jns
dec
cmp
dec
sbb
shl
add
stos
cld
in
nop
inc
test
dec
mov
aas
rep
jl
and
inc
outsb
push
and
or
sub
pop
bound
cmp
xchg
loope
and
mov
stos
sbb
mov
xchg
rorl
pushf
scas
jns
fldt
or
cmpsl
adc
stc
or
mov
jne
dec
cmp
repz
cmp
xchg
sub
push
mov
push
xchg
dec
xor
loopw
flds
cld
pop
xchg
out
adc
sbb
jns
sbbb
aad
loope
pop
or
fldt
jg
adcb
in
add
mov
pop
and
xchg
cld
or
add
shrl
shlb
jnp
sbb
pop
repz
push
inc
cmp
pop
ja
push
sbb
aam
mov
mov
fcoms
inc
pop
pop
jb
jmp
insb
jp
dec
jno
cmp
repz
in
or
faddp
xchg
sbb
daa
pusha
pop
icebp
xchg
je
std
js
loope
push
adc
insl
dec
dec
adc
shlb
jno
pop
call
out
arpl
lret
add
mov
mov
les
daa
fnstenv
push
loop
es
loopne
jno
jb
xor
lods
and
out
xchg
mov
test
aam
mov
pop
mov
dec
jge
push
sti
stos
jecxz
test
sub
inc
cli
jmp
mov
testl
mov
orb
cmp
mov
js
jb
or
rcrl
sub
dec
and
shr
jmp
dec
mov
ja
sbb
sbb
mov
cwtl
pop
inc
xchg
sub
mov
aam
in
mov
sbb
out
push
movsb
sar
int3
ds
mov
enter
inc
jecxz
fwait
adc
inc
inc
xor
sub
in
ret
pop
xchg
xchg
add
xor
aaa
inc
push
frndint
or
dec
fistps
sbb
icebp
xchg
and
xor
and
testb
iret
inc
scas
mov
sub
gs
push
dec
dec
jle
outsb
mov
push
pop
lret
repz
pusha
popa
mov
xchg
xchg
in
inc
mov
test
push
mov
mov
xchg
push
add
scas
cld
mov
mov
push
mov
mov
dec
popf
pop
sbb
pop
jge
aaa
ja
loope
cwtl
insl
popa
add
and
aas
inc
stc
cmpsl
cli
and
testb
xchg
or
loop
jnp
jecxz
adc
xor
loope
leave
mov
dec
add
scas
jo
xchg
sbb
dec
repnz
pop
out
test
push
cmc
sub
and
pop
lods
cmpsb
sbb
inc
movsb
sbb
mov
sbb
push
in
pop
push
cwtl
adc
push
dec
push
adc
ljmp
shrb
in
add
mov
test
rcrl
shll
lods
and
fildl
adc
lret
rcrl
cmp
outsl
pop
sbb
test
mov
inc
jp
inc
or
sbb
jp
hlt
sbb
xor
popf
push
fistpl
int3
jge
sub
sar
mov
loop
xchg
mov
cmp
sbb
adc
test
push
adc
jnp
jge
frstor
dec
repz
mov
int3
stos
loope
shl
stos
stc
mov
inc
jnp
add
mov
dec
mov
push
xor
xor
xorb
push
stos
dec
add
add
addr16
xor
push
int
test
fdivs
pop
fimull
jge
call
fadds
out
lahf
call
test
orb
mov
ss
cmp
push
dec
cmc
test
test
jbe
stc
stc
pop
repnz
pushf
mov
paddsw
dec
and
inc
sbb
orb
push
ljmp
scas
jecxz
das
jae
ret
pop
xchg
shlb
scas
push
pushf
leave
and
js
ljmp
jg
jb
push
cmpsl
or
cli
out
and
cmp
pushf
push
inc
sar
xchg
lds
cmp
pusha
mov
or
push
inc
mov
pop
mov
mov
repnz
aam
pusha
dec
ja
cli
mov
add
pop
pusha
mov
and
push
adc
dec
xchg
or
pop
dec
xlat
insl
inc
jg
stc
imul
les
mov
je
sub
fdivr
pushf
sub
scas
add
loopne
out
ds
xor
js
insb
mov
dec
out
jmp
shlb
jnp
fs
and
dec
xchg
daa
xor
loope
and
mov
cmp
insl
mov
adc
outsb
mov
jno
jg,pt
gs
push
mov
or
iret
rcrl
sbb
cs
lea
and
mov
add
orb
mov
mov
aaa
sbb
dec
cwtl
cmp
nop
or
or
inc
outsl
lock
lds
sub
mov
jo
fstps
cmp
mov
popf
xor
repz
scas
xor
loope
push
dec
fiaddl
out
repz
adc
dec
sbb
lret
es
push
adc
test
cmc
xchg
or
pop
sbb
nop
dec
sub
sbb
ret
jge
lret
stos
push
fists
push
das
inc
jl
ds
push
sbb
adcl
pop
loope
pop
xor
pop
ja
shlb
shlb
cmp
and
mov
std
lock
sub
lods
xlat
stos
insl
enter
push
add
adc
lahf
xchg
push
mov
ret
mov
sbbb
push
bound
loope
inc
xchg
pop
int3
in
xor
xchg
fnstenv
jno
jl
jae
sarb
cmp
xchg
popa
cmpsb
addr16
jl
jae
jle
xchg
int
cmp
sub
imul
les
xchg
shll
sbb
xor
cmp
test
loop
mov
jae
fs
cmp
aaa
fldenv
pusha
loop
xor
or
shrb
outsl
adc
loope
out
dec
lahf
lret
xorb
rcrb
sar
ss
pop
jmp
xchg
adc
jge
pop
pop
mov
pop
in
enter
popf
xchg
lcall
adc
outsl
aad
out
add
jg
push
imul
and
jle
sbb
mov
jo
or
aam
push
ja
and
movsl
push
insb
and
or
sbb
mov
sbb
mov
add
cltd
inc
test
mov
ljmp
cmc
ss
sub
leave
scas
test
je
pop
scas
ds
cmp
cmp
dec
add
out
cmp
mov
push
fstps
jp
fidivrl
enter
xchg
sbb
sti
adcl
ljmp
jge
add
pop
test
popl
movsb
enter
mov
bound
sbb
jecxz
out
push
xchg
mov
jae
xchg
mov
nop
jae
mov
cmc
cmp
fisubl
aas
sub
cmp
pop
xor
adc
push
movsl
sub
xor
negb
mov
push
lahf
fstps
mov
jo
aas
sahf
or
cmp
xor
lds
arpl
clc
nop
push
in
jmp
and
mov
pop
js
dec
jne
jp
lret
addl
popf
std
data16
rcr
ret
mov
aad
lods
jecxz
pusha
fcmovbe
outsb
mov
sbb
cld
push
andb
xchg
fwait
add
fbstp
pop
mov
js
pop
ss
call
aam
sahf
dec
push
imul
adc
ss
in
jp
push
cwtl
push
mov
inc
movsb
xlat
push
sahf
inc
outsl
ret
ds
movsl
fsubl
pop
dec
push
cltd
popa
adc
shlb
stc
jecxz
call
cmove
mov
and
data16
cld
mov
dec
wbinvd
stos
arpl
push
repz
add
mov
cmp
add
out
test
loop
addr16
push
sahf
mov
mov
mov
mov
mov
add
sbb
ljmp
ljmp
inc
pop
and
insb
std
cli
add
out
in
stos
negl
mov
mov
inc
adc
pushf
dec
mov
test
xlat
pop
pop
sbb
push
mov
mov
cmpsl
push
adcb
out
jmp
insl
mov
cs
fmuls
and
add
and
push
mov
pop
in
jb
sbb
and
dec
imul
jge
not
adc
aad
sbb
je
pop
cld
iret
mov
loop
in
lahf
add
dec
out
insb
cmp
add
in
sbb
outsb
mov
fisubrs
call
xlat
pushf
push
sbb
sbbb
nop
stc
stc
ret
push
cmc
mov
push
pushl
cmp
xor
xorl
stos
data16
popa
mov
movsb
add
outsb
pop
out
mov
sbb
out
daa
mov
insb
pop
pop
ret
xor
dec
inc
inc
or
pop
sbb
push
xor
jg
jae
or
adc
iret
cld
xor
add
test
sub
das
pop
mov
and
imul
mov
lods
pop
sub
iret
jo
ficoml
sub
add
jl
shl
ljmp
push
or
inc
jp
jb
and
sbb
dec
mov
repz
stc
rclb
xor
lret
loop
mov
in
mov
xchg
les
jg
pop
dec
cmp
mov
les
popl
imul
sahf
ret
adc
int
popa
cmpsb
sub
mov
xchg
or
adc
mov
arpl
outsb
mov
stc
adc
arpl
popf
clc
dec
out
int
mov
in
cld
cmpsl
cmpsl
mov
out
addr16
cmpsb
adc
jns
dec
cwtl
fists
sahf
jmp
push
sub
sub
pop
jl
jae
mulb
sbb
ss
pop
adc
or
push
xor
adc
movb
dec
int
xchg
insb
jo
rol
dec
pushf
cmp
mov
test
call
mov
push
in
mov
out
or
jae,pt
add
js
jbe
inc
fisttpll
in
xor
and
dec
adc
sbb
pop
adc
aam
int3
imul
add
cmp
int
scas
fcmovne
test
cmp
lods
loop
jb
stc
add
loopne
iret
mov
pop
inc
mov
dec
adc
fildll
sti
loop
test
cmp
les
shlb
add
xchg
jmp
sbb
negl
in
das
cmc
jge
dec
int
mov
cmp
cltd
cmp
in
and
pop
jns
or
out
mov
fwait
xor
and
sbb
and
rcr
loopne
jg
cmp
rolb
mov
xor
leave
jle
push
xchg
cmp
mov
dec
push
push
mov
lret
das
adc
sar
pop
cmp
inc
aad
fucomip
in
bound
sbb
out
scas
inc
mov
push
xchg
and
and
dec
shlb
sub
adc
push
ljmp
imul
test
or
and
pop
and
sbb
lret
je
cltd
fdivr
dec
cmc
xor
lcall
sub
bound
jne
mov
lret
pop
sbb
test
out
push
imul
mov
jl
es
ljmp
out
xlat
fcmovbe
mov
jo
mov
imul
nop
mov
lcall
mov
lods
mov
test
sub
out
sbb
lcall
mov
clc
fs
or
dec
jmp
stc
mov
clc
jle
js
stos
xor
dec
ljmp
cmp
cmp
xchg
sub
int
pop
cli
xor
fwait
cmpl
je
xchg
popa
mov
orl
or
scas
jnp
je
inc
pop
dec
push
loope
pop
lods
popf
inc
scas
mov
out
ficoms
dec
lret
bound
inc
ljmp
sub
jo
cmp
insb
in
adc
cmp
es
mov
lret
jecxz
inc
add
pop
rorl
jmp
rcrb
push
add
lods
mov
lcall
dec
and
jne
sub
mov
push
shl
ja
xlat
cwtl
in
fwait
int3
mov
and
iret
sub
or
mov
jns
mov
dec
nop
inc
inc
in
mov
cmp
adc
add
fcoml
in
add
xlat
xor
pusha
ljmp
mov
insb
into
and
aam
dec
sbb
add
idiv
imul
push
mov
add
push
ljmp
inc
decb
mov
cltd
xor
inc
mov
push
nop
out
mov
cmp
pop
test
add
and
mov
pop
dec
mov
sti
xor
push
xor
jecxz
push
arpl
mov
sub
jmp
stos
add
xchg
enter
mov
or
pushf
jbe
add
fisttpll
dec
dec
repnz
shll
into
lea
or
imul
fnstsw
xchg
arpl
mov
das
xchg
dec
push
cmp
cmc
pusha
or
imul
lahf
sar
test
jp
ss
fstpt
jge
sbb
xchg
roll
mov
jle
pop
call
sub
loope
sub
push
adc
add
sub
loop
nop
mov
push
jecxz
xlat
pop
imul
pop
jae
add
aad
icebp
add
or
insb
jae
shl
push
mov
out
enter
push
ficoml
stos
sbb
dec
inc
imul
addr16
jle
ret
mov
inc
add
mov
nop
sub
scas
sub
jp
cmpl
mov
imul
test
sbbl
jg
inc
push
inc
push
push
shrb
in
adc
out
jge
adc
or
scas
nop
fcomi
scas
sub
add
inc
aam
xor
pop
inc
orl
sub
pop
leave
mov
jnp
and
mov
mov
sbb
shrl
jl
mov
and
ficoml
push
outsl
scas
cltd
fwait
mov
call
bound
fnstsw
arpl
sub
shll
movsb
jl
inc
mov
fimull
imul
mov
aas
xor
cld
sub
fsubl
cmpsl
cmp
insb
inc
push
jo
mov
dec
test
pop
popf
cld
scas
cmpsb
cld
stos
add
mov
push
mov
sub
cmp
loopne
xchg
call
add
stos
sbb
pop
push
imul
xchg
sahf
es
push
aad
mov
dec
jmp
pop
xchg
stos
inc
mov
or
mov
mov
xchg
cwtl
mov
push
xor
mov
and
hlt
in
add
adc
add
xor
sbb
mov
and
inc
xor
push
fisttpll
fcom
and
jb
call
scas
adc
divb
ficomps
call
xchg
sbb
add
hlt
mov
and
cmp
xor
mov
xlat
je
jno
std
lods
sbb
push
pop
jnp
push
mov
mov
loopne
mov
cmp
xchg
xor
popa
sub
divb
sub
aad
daa
leave
sub
scas
call
xchg
cmp
adc
test
push
adc
mov
xchg
test
jge
jo
fs
sbb
xchg
sbb
mov
mov
js
scas
mov
daa
repz
cmpsl
shl
xchg
inc
push
add
mov
xchg
pushf
dec
sbb
jnp
add
and
mov
mov
add
sub
lret
inc
dec
jl
ret
ljmp
mov
mov
xlat
in
rol
dec
xor
scas
ret
je
xlat
push
lahf
xchg
loop
stos
popa
movsl
sbb
test
int
mov
or
push
icebp
ljmp
lret
cmp
mov
out
push
sbb
das
test
daa
push
lcall
lcall
mov
adc
or
cmp
xor
xlat
xor
xchg
cld
test
mov
cmp
cmpb
cli
dec
loope
or
jnp
movsb
mov
or
mov
jl
jg
push
cwtl
sarb
push
stos
adc
xorl
cs
xchg
lods
cmp
inc
movsl
stc
into
mov
incb
mov
add
xor
scas
adc
out
push
mov
xchg
fcoms
jg
sti
sbb
sarb
xchg
sbb
repnz
outsw
inc
push
cmp
out
out
pop
sub
loop
enter
iret
pop
and
cltd
or
lods
mov
pop
out
inc
push
xor
and
mov
clc
jne
int3
add
ds
gs
xor
and
mov
ficompl
pop
imul
mov
jge
test
out
xchg
dec
sbb
mov
or
je
xor
dec
push
rcrl
or
mov
inc
scas
rcll
xchg
cli
daa
xor
mov
lcall
jmp
or
adc
pop
mov
stos
xchg
orl
imul
popf
mov
mov
sub
shl
mov
pop
push
repz
test
or
out
fxch
dec
xor
test
test
adc
cltd
pop
mov
insl
aaa
mov
aas
je
arpl
mov
xor
push
jle
add
outsl
push
mov
xorl
add
cmp
outsl
sbb
sub
imul
shl
and
rolb
ljmp
repz
fldl2e
xchg
std
jg
aas
push
lret
mov
jmp
add
or
in
andl
push
repnz
std
sahf
sahf
arpl
push
mov
add
or
daa
stc
lods
and
add
sbb
cmp
push
xlat
add
or
xchg
sbb
imul
jbe
into
ja
jb
ljmp
jp
out
or
es
fbld
sbb
divl
jno
subl
movl
fwait
push
movsb
and
cwtl
or
or
mov
push
cmp
jae
or
cli
mov
sub
aas
cltd
mov
aad
insl
pop
jae
sbb
in
mov
jno
in
push
dec
in
add
and
push
dec
mov
dec
imul
push
enter
cs
push
pusha
and
loope
mov
daa
xor
cmp
push
pop
ja
fldt
xchg
jp
mov
xchg
je
enter
scas
mov
sub
push
aam
pop
jbe
dec
repz
int3
inc
add
fstps
mov
adc
pop
enter
loop
pop
mov
aaa
mov
out
mov
inc
xor
test
cmpsl
lahf
and
fidivs
push
paddb
fistpl
in
jg
cltd
fcompl
in
nop
inc
icebp
popf
pop
int3
loope
sub
push
dec
icebp
out
jle
cmp
mov
or
jge
dec
negl
mov
ror
aas
hlt
orb
incl
push
push
cmp
pop
sbb
pop
mov
int3
push
lret
call
sub
jno
pusha
mov
mov
std
sti
push
or
and
sbb
mov
mov
adc
xchg
pusha
movsb
xchg
ret
jp
mov
sbb
add
jmp
sub
inc
testb
outsb
js
cmpsl
xchg
adc
aam
cmp
pop
repnz
or
hlt
push
lret
ss
push
rolb
push
insl
inc
dec
test
mov
pop
sub
std
cs
or
inc
xlat
sti
std
xor
sub
cmp
jge
fiaddl
pop
mulb
outsb
xchg
inc
cmp
std
mov
insl
popf
iret
xchg
rcrl
insl
insb
je
add
mov
test
sbb
jle
cltd
jge
std
ss
dec
and
mull
xchg
jne
or
dec
sbb
pop
xor
repz
xor
cmpsl
inc
into
cltd
pop
rcr
outsl
cmp
sbb
jecxz
iret
sahf
or
adc
or
dec
shlb
icebp
mov
xlat
int
addr16
mov
je
js
jge
stos
adc
and
xchg
lods
mov
and
das
add
pop
lcall
add
mov
fst
pop
pushl
and
xchg
mov
mov
mov
jp
mov
or
push
loop
lds
aad
test
mov
seta
jg
ja
stos
test
rorb
fwait
test
pop
pop
in
sahf
divl
mov
ret
aas
das
inc
pop
mov
ret
fiadds
aaa
jne
ret
loope
f2xm1
insb
int3
ret
mov
lahf
jecxz
mov
xchg
jl
fbstp
add
mov
lret
cwtl
shrb
inc
adc
xchg
xchg
pushf
je
es
shrb
adc
aas
xor
pop
mov
cmp
and
jne
ja
sbb
xchg
or
into
jge
dec
cs
push
or
rcr
sbb
push
cli
dec
jbe
mov
fsubp
mov
jbe
popf
data16
sti
jb
mov
sub
outsb
cs
sub
cmp
adc
repnz
rolb
enter
int3
jbe,pt
push
int
xchg
loopne
push
mov
mov
insl
sbb
xlat
lea
xchg
jmp
xor
je
adc
cmp
into
enter
mov
fidivrl
in
mov
inc
sub
mov
mov
ret
push
clc
push
stos
lahf
rcll
data16
loopne
mov
or
insl
cmp
dec
ret
inc
or
xchg
adc
mov
fdivr
mov
mov
push
adc
in
push
into
loopne
or
nop
std
push
sahf
shl
ja
inc
jo
fdiv
push
sbbb
jo
call
add
jle
std
or
adc
inc
inc
bound
fmull
mov
push
mov
dec
mov
mov
hlt
je
pop
or
adc
into
xor
jne
dec
pusha
mov
cltd
ja
in
dec
jns
arpl
sbb
pop
enter
mov
push
divl
jnp
mov
push
add
sbb
in
pop
sbb
addl
sub
cltd
out
and
mov
pop
jmp
addl
xor
xor
mov
stos
xchg
out
rcrb
clc
push
icebp
adc
adc
or
cmpsl
jg
subl
es
sar
or
and
jb
movsb
push
push
jae
adc
adc
xlat
out
aad
jb
jne
jmp
aaa
movsl
loop
iret
int3
cmp
addl
adc
push
cwtl
cmp
in
pushf
add
ja
mov
repz
push
xor
rorl
pop
int3
mov
sti
int
shrb
inc
push
bound
in
cmc
dec
dec
int3
lods
sub
daa
xchg
inc
xor
xchg
mov
pop
xchg
xor
add
sbb
mov
repz
or
mov
jp
into
dec
push
adc
jno
mov
lahf
addr16
jg
xor
dec
notl
xlat
out
mov
out
add
and
pop
xchg
xor
addr16
arpl
sub
xchg
sbb
fldcw
stc
pop
les
mov
mov
jg
outsl
les
or
dec
movsb
push
xorb
sub
jnp
inc
push
aad
incl
stc
pusha
aad
push
sub
pop
nop
cmc
popa
inc
enter
out
testl
cli
inc
or
inc
hlt
imul
mov
cld
push
and
fadds
jmp
mov
add
repnz
rcrl
stos
mov
test
int
push
and
jge
std
sub
mov
xchg
dec
sbb
add
xlat
cltd
mov
jae
fdivs
cmpsl
sbbl
ret
lahf
lcall
sbb
push
test
pop
push
popf
clc
jno
test
fadd
popa
ficompl
jp
test
and
jno
mov
mov
inc
inc
icebp
lock
pop
push
pop
sub
lea
xchg
mov
pushf
pop
sahf
inc
xlat
loopne
sub
cmp
hlt
pop
lret
jb
leave
push
cs
ss
ss
mov
repz
enter
aam
addr16
cmp
jl
pop
fs
out
xor
inc
fdivl
mov
fs
ds
std
and
rclb
shl
jae
jns
mov
cmpl
mov
cmp
scas
insb
xchg
movsl
push
popa
out
push
lahf
add
mov
xchg
fnsave
pop
cli
mov
pop
mov
cmpsb
iret
jp
fsubp
gs
push
sarb
cli
repnz
insb
mov
out
or
lahf
ss
inc
jnp
je
sahf
mov
ss
test
ljmp
fisubrl
xchg
pop
jmp
pop
or
sub
pop
push
mov
std
push
loopne
sub
in
div
jb
mov
mov
cmc
mov
xor
sbb
pop
cmc
nop
arpl
adc
lahf
sub
dec
in
sti
xchg
dec
mov
int
cli
cmpsl
push
add
loopne
sub
sub
addr16
cmp
icebp
add
shl
enter
outsl
sahf
lea
xor
or
gs
mov
cmp
or
mov
incl
subl
out
xchg
xor
clc
xchg
sbb
push
lods
jmp
push
jle
lret
xor
sub
pop
aam
out
push
jmp
dec
push
jae
add
dec
fistps
int
mov
fisubs
out
cltd
xor
sub
fwait
or
mov
jg
pop
outsl
pop
mov
cld
lods
or
scas
int3
roll
into
shrl
mov
mov
stos
stc
fildll
sbb
cmp
pushf
pop
sarb
out
pushf
push
sub
pop
cmpsl
je
movsb
cs
inc
push
pop
sbb
sbb
cwtl
cmp
jns
push
mov
outsl
pop
notl
push
sub
xchg
into
jmp
cmp
lret
pusha
int3
sub
jge
subb
fbstp
out
push
pmulhuw
xor
jg
push
gs
in
mov
inc
cld
xorb
cltd
ret
sub
jb
or
mov
pop
popf
leave
mov
sub
jne
dec
inc
lea
pop
loopne
push
imul
inc
sub
ja
jl
inc
bswap
clc
mov
imul
daa
pop
xchg
xor
aam
cmpsb
loop
cmpsb
mov
adc
xchg
pop
jecxz
pop
outsb
outsb
data16
hlt
mov
pop
in
xchg
mov
icebp
mov
xor
loope
inc
cmp
cmc
shr
mov
rcll
push
hlt
mov
mov
cmp
mov
adc
mov
lahf
push
push
lahf
pusha
adc
adc
inc
andl
fdivrl
cld
cs
xchg
adc
xchg
push
cmpsb
mov
push
push
jno
mov
dec
jbe
mov
int
add
adc
scas
dec
fsubrs
lods
getsec
cmp
mov
or
mov
adc
cwtl
dec
mov
repnz
cmc
sub
or
test
cmc
mov
lcall
addr16
mov
iret
dec
in
xchg
daa
insl
xchg
pushf
test
mov
fiaddl
fisubs
sub
inc
stc
or
lea
xchg
icebp
int
lcall
or
orb
xchg
in
shl
mov
lods
cmp
or
push
pop
loop
sarb
inc
mov
in
stc
popa
jbe
and
lcall
das
jmp
repnz
in
mov
adc
mov
mov
jbe
mov
sub
jae
cmc
movsl
sub
aad
ja
pop
out
lret
adc
cld
les
enter
mov
loopne
add
mov
les
loope
adc
fiadds
jle
dec
into
sbb
addr16
push
push
leave
cltd
push
inc
push
or
lods
push
or
hlt
fsub
jno
popf
je
hlt
lret
out
cmpsb
inc
and
pop
mov
loop
arpl
test
push
adc
in
inc
in
dec
sub
adc
jae
repnz
dec
xor
push
and
loop
mov
sub
mov
cs
nop
adc
sub
aam
dec
iret
jge
mov
cmpsb
push
or
stos
mov
adc
cmp
lcall
mov
sub
mov
cmp
inc
mov
scas
push
mov
stc
xchg
jns
xchg
cmp
negb
xorl
jbe
dec
stos
cmpl
stos
and
adc
push
lea
aaa
xor
dec
stos
and
repnz
mov
add
shr
and
inc
push
sbb
or
into
or
out
lret
test
pop
dec
stc
cmpsl
sub
and
ja
mov
xchg
sti
cmp
add
inc
mov
stc
imul
or
fcmovne
mov
xchg
fldl
ljmp
ffree
mulb
cmp
pop
pop
mov
adc
mov
fildl
mov
inc
test
inc
je
mov
shrl
imul
imul
cs
mov
std
out
repz
push
cli
in
out
cld
jge
in
out
scas
pop
test
inc
sti
mov
out
sbb
fwait
pop
xor
xor
sub
addr16
inc
insl
and
into
fwait
leave
mov
mov
mov
inc
sbb
or
push
xchg
jmp
push
popa
mov
mov
dec
je
jp
outsl
push
pop
test
cmp
ret
or
clc
cmp
add
data16
loopne
mov
dec
fdivrl
sbb
mov
arpl
mov
std
test
ret
std
xchg
fwait
sbb
adc
xor
xchg
jg
dec
adc
mov
enter
cmp
mov
sbb
mov
jnp
sbb
test
mov
pop
pop
fdivl
ficompl
jl
popf
ret
or
mov
pop
inc
mov
adc
popa
lods
lods
rcrb
jmp
push
and
popf
jne
adc
dec
loopne
xor
jo
jnp
outsl
mov
outsl
insb
arpl
jno
testl
or
pop
movsb
add
out
xchg
mov
dec
scas
out
mov
in
cli
pop
sti
mov
lahf
mov
fwait
imul
xlat
dec
cltd
sub
cltd
lock
inc
inc
push
test
or
jns
subl
insl
or
out
push
push
jae
pop
std
dec
stc
push
sub
xchg
push
mov
loope
xchg
inc
stc
ds
or
popa
jge
out
push
cltd
fldenv
cmp
and
in
dec
jnp
xchg
mov
sub
sti
lock
add
inc
pop
inc
outsl
jo
jns
jb
xlat
int
je
jmp
cmpsl
fldt
ret
repnz
cs
push
ds
jmp
cmc
insl
push
push
mov
ds
int
add
and
or
cwtl
xor
test
dec
leave
cmp
xorb
mov
scas
pop
xor
sahf
scas
dec
aas
push
decb
rcrb
ljmp
mov
stc
add
ret
mov
jno
nop
push
outsl
test
mov
pushf
pusha
mov
cs
jnp
mov
mov
dec
push
loop
inc
xor
sbb
cltd
sahf
popa
test
insb
jne
and
jb
mov
mov
shrb
dec
in
ds
mov
jne
adc
jne
dec
xchg
xchg
test
sar
lea
pusha
mov
in
psrld
lea
sub
stos
leave
scas
adc
repz
mov
mov
out
lret
and
pop
fnstcw
xchg
jne
test
js
ljmp
int
inc
mov
mov
mov
pop
nop
lret
cmpsb
adc
in
data16
add
sbb
sbb
lcall
aad
adc
fldt
bound
test
test
mov
cmp
lcall
movb
ss
inc
xchg
xchg
cmp
sub
scas
inc
rcrb
mov
outsb
insl
sahf
out
push
adc
dec
fcoml
dec
repnz
or
outsl
or
or
push
popa
inc
nop
sub
and
push
loope
das
ss
dec
cwtl
push
iret
idivl
jmp
dec
adcb
mov
mov
sarb
sub
leave
daa
xor
pop
fists
mov
lock
out
call
inc
in
cmp
std
lods
jno
push
ror
xlat
test
repz
nop
int
iret
and
adc
in
push
ds
cmp
gs
mov
pop
pop
lods
xchg
cmc
cmp
pushf
cmp
and
repnz
lods
push
or
and
test
sub
ss
cld
movd
mov
bound
mov
jecxz
stos
clc
cmc
cmp
push
jg
bsf
and
mov
add
test
pop
testl
push
mov
daa
faddl
shlb
xchg
pop
adc
bound
add
jle
jne
inc
mov
push
add
stos
bound
movb
cmpl
mov
addr16
pop
js
jge
fdivrp
pop
mov
cmp
mov
clc
jmp
clc
bound
mov
adc
push
cmp
dec
mov
ljmp
xchg
inc
cmc
cmpsl
inc
adc
sbb
jle
pop
and
stos
js
dec
push
jle
int3
cmp
mov
or
jnp
in
and
mov
adc
les
stc
shll
repnz
outsl
pushf
out
test
adc
jne
lds
lahf
negl
enter
insb
xor
leave
pop
xchg
lret
dec
dec
stos
mov
mov
and
fildll
test
call
outsb
xchg
sub
aaa
mov
pop
int3
mov
xor
lret
push
int3
rorl
jne
mov
xor
jno
cwtl
jl
mov
cmp
mov
adc
and
outsl
jb
xor
mov
jp
sbb
or
dec
jmp
dec
stos
stos
popa
sbb
and
subl
loope
xchg
xor
imul
in
cmp
movsl
gs
adc
jnp
rol
jle
fadds
dec
lret
mov
push
fildll
in
ja
mov
fnsave
add
jne
or
cli
cmpsb
mov
mov
add
add
sub
mov
incl
pusha
sub
jmp
fcoms
or
iret
xacquire
mov
rcrl
dec
mov
or
leave
in
imul
jmp
dec
push
sbb
adc
lret
pop
data16
data16
xor
sbb
popw
fldl
pop
repnz
idiv
sti
insb
fcomip
lret
and
loop
movsb
or
or
inc
leave
sbb
or
fsubrs
pop
pop
push
jb
add
inc
pop
insl
imull
cmp
loop
push
or
dec
mov
fldt
mov
cmc
fldcw
push
inc
mov
mov
sbb
dec
jae
mov
in
aaa
and
inc
je
mov
dec
arpl
pop
into
jmp
mov
or
pop
aam
lock
or
and
mov
bts
into
into
or
nop
mov
xchg
jno
insb
push
sbb
fwait
cmp
ret
dec
mov
cld
jae
xor
fadd
inc
popf
test
cmp
les
xchg
in
adc
hlt
rorl
cmp
int
out
dec
adc
cmc
xorl
je
pop
cmp
jg
push
repnz
fsts
inc
and
and
fcoms
jp
xchg
enter
inc
mov
push
inc
mov
dec
loope
adc
pop
xchg
push
xor
cli
flds
sbb
and
adc
dec
mov
pop
enter
loopne
clc
dec
dec
cmp
or
push
sbb
adc
loop
enter
andl
add
in
outsb
xchg
inc
inc
pop
adcl
orb
jmp
add
jmp
rcll
scas
loopne
mov
loop
pop
push
jl
xor
pop
xorl
jmp
or
out
mov
jno
popa
ljmp
movsb
les
xchg
xchg
pop
xchg
arpl
mov
mov
loopne
aaa
shlb
adc
aam
cmp
pop
pop
push
gs
imul
movsb
add
inc
mov
jnp
stc
lock
fldl
std
je
xchg
mov
int3
mov
fistl
mov
pop
in
xor
daa
or
adc
push
lods
outsb
scas
sub
dec
das
jno
pop
mov
mov
push
ljmp
cmp
scas
push
add
sub
push
aad
out
xchg
jp
cmp
das
or
out
or
dec
inc
icebp
shl
xchg
and
ss
fdivrl
mov
dec
jl
outsb
mov
and
arpl
and
add
ja
jo,pn
xor
pop
mov
dec
aaa
movb
and
pop
xchg
pop
adc
movsl
sbb
add
in
ds
shl
jno
dec
mov
mov
mov
dec
mov
sbb
ret
pop
inc
scas
loop
pop
mov
leave
mov
mov
adcl
dec
mov
sarl
mov
test
cmc
sbb
mov
jnp
mov
dec
mov
pop
xchg
xchg
cmp
not
add
cltd
mov
inc
adc
shr
jne
jno
les
aad
mov
sub
icebp
idiv
out
mov
jne
xchg
jnp
fildl
sar
pop
push
mov
adc
fistpll
lock
pop
out
rcrb
fcomip
cmp
sbb
mov
push
push
sahf
xchg
test
mov
test
es
adc
cmp
mov
sti
adc
jns
sbb
push
mov
fdivs
addb
aam
std
fnsave
out
rol
and
and
fmuls
arpl
xchg
mov
push
mov
mov
mov
sub
popl
push
cwtl
mov
sarl
jbe
dec
mov
jmp
fisttps
add
mov
sbb
cmp
lds
lods
lods
pushf
inc
lret
and
xor
mov
mov
jecxz
fwait
icebp
data16
and
jl
push
and
mov
daa
pop
int
cld
cmp
fldlg2
popf
icebp
loope
push
test
xor
pop
cmpsb
pop
sbb
cwtl
pushf
into
lds
xchg
lods
inc
pop
xchg
pushf
sub
dec
xchg
jp
pop
pop
jb
xchg
dec
pop
imul
nop
cmovg
rolb
or
cmc
popf
in
or
pop
movsb
in
jmp
shlb
mov
aad
orl
pmovmskb
daa
cmp
daa
clc
sbb
and
out
movb
jg
sub
ljmp
fs
loop
out
mov
sub
mov
jp
stos
pop
jae
in
mov
cmp
test
cwtl
divb
adc
scas
out
push
imull
repz
cmp
jg
xlat
aas
hlt
add
idivl
inc
bound
sti
movsl
lcall
mov
pushf
arpl
test
and
push
or
dec
mov
xchg
mov
xchg
hlt
call
sbb
in
fst
add
orb
fmull
sarl
daa
mov
and
ficompl
out
xor
mov
and
xorl
add
dec
sbb
xor
mov
pusha
sbb
es
shlb
bsr
sbb
dec
dec
ds
lods
test
shr
into
mov
mov
adcl
mov
fists
ljmp
scas
push
loop
inc
arpl
jl
jecxz
jle
sbb
test
mov
pop
mov
inc
and
or
jbe
push
pop
inc
int3
inc
int
xchg
js
clc
lret
lods
rorl
push
mov
cmp
inc
in
pop
imul
imul
shlb
push
xchg
or
push
xlat
xchg
mov
jns
sarl
push
dec
rcr
xor
repnz
cmc
out
subb
cwtl
ficoml
sbb
xchg
loopne
lcall
xor
out
inc
push
mov
cmc
sbb
sbb
add
out
mov
leave
inc
xchg
xchg
xchg
or
addr16
cmpsl
jo
cmc
cli
xor
dec
xchg
cmp
sbb
neg
inc
mov
xchg
jne
test
call
fimuls
sub
fs
lcall
sbb
nop
push
add
sub
inc
jbe
insb
mov
sub
jg
lret
push
sahf
adc
ds
sbb
fcoms
call
and
scas
mov
mov
mov
addl
je
pop
stos
aas
repnz
std
dec
add
sub
iret
mov
fists
loopne
cs
js
mov
scas
xor
mov
repz
or
pop
xchg
es
imul
hlt
aaa
and
push
xchg
outsl
call
push
push
mov
fildll
mov
jbe
mov
inc
fnstenv
and
pop
sbb
scas
mov
cmc
mov
xchg
cli
hlt
sbb
fistpll
rcrb
cmc
stc
jo
or
sub
fnstsw
adc
mov
jl
data16
cmp
mov
lahf
daa
aaa
lock
dec
cld
cmpsl
jnp
inc
mov
daa
add
hlt
push
ljmp
dec
sub
ljmp
lods
pop
dec
pop
sti
inc
inc
sbb
das
cwtd
notl
xchg
xor
shl
movsl
add
mov
sbb
aas
cmp
in
lods
out
fistl
dec
inc
push
dec
push
mulb
jg
jno
xchg
xchg
bound
or
mov
pop
imul
int3
cmc
leave
mov
add
sbb
fistpl
inc
ss
push
add
mov
xor
int
and
out
inc
lock
mov
xlat
out
jecxz
into
cmp
int
movsl
mov
add
ja
mov
stc
test
mov
sbb
push
ret
mov
pusha
sbb
je
add
inc
leave
aad
clc
inc
hlt
lcall
pop
add
test
xor
shr
jns
xchg
dec
rcrb
addr16
dec
out
add
invd
sbb
push
xor
push
push
lret
jmp
fisubrl
mov
and
cld
pop
stos
xor
int
mov
shl
and
lods
fsubrs
bound
jne
inc
push
pop
mov
popf
push
mov
fbstp
sbb
jnp
xor
arpl
dec
inc
push
mov
repnz
enter
or
pop
push
cmp
ror
adc
jnp
adc
loop
mov
mov
test
call
add
xchg
shlb
cmpb
out
out
mov
sbb
or
ja
sub
stc
push
xchg
rcrl
and
in
cmp
sbb
aad
dec
push
lock
and
outsb
je
xor
shlb
mov
xorl
rorl
xor
jmp
xchg
cmp
mov
inc
jmp
push
mov
fistps
xor
mov
cmp
cmp
cltd
popf
fbld
loope
sbb
scas
add
out
inc
cmp
mov
cmpsl
dec
in
mov
in
xchg
mov
cld
dec
fidivrs
mov
lcall
jno
in
in
mov
loope
fwait
mov
nop
insl
xchg
push
adc
test
addr16
xchg
ret
jb
sbb
push
and
cmp
nop
pop
repz
inc
flds
lret
orb
push
sub
ljmp
xchg
mov
lock
pop
push
jb
out
out
push
pop
add
add
adc
lock
dec
shlb
mov
jns
jne
inc
pop
cmpsl
pop
add
lret
data16
scas
ds
sub
mov
mov
nop
movsl
lods
pop
cs
popf
pop
fmuls
rclb
rcll
sub
cmp
xchg
ja
cmpl
mov
jecxz
out
and
dec
lret
outsl
sub
push
inc
xchg
in
jle
fmul
pop
push
jbe
dec
inc
lret
insb
or
insb
andb
or
xchg
dec
add
fwait
dec
push
movsb
cmp
sbb
test
sub
mov
mov
xlat
rolb
les
ja
push
push
lods
aad
shrd
push
pop
mov
sbbb
xchg
jl
lea
ja
movsl
jbe
insl
stos
push
cmpsl
or
sbb
les
stos
outsb
scas
lods
clc
das
insb
jo
inc
clc
addr16
mov
test
push
add
mov
mov
mov
loop
mov
sbb
bnd
ds
aaa
stc
flds
and
xchg
and
adc
sub
inc
cs
adc
mov
push
adc
shrl
cli
jae
mov
sti
stos
pop
mov
frstor
fadds
jae
jae
lods
icebp
xchg
inc
mov
call
aad
push
xor
cmc
sub
mov
cmp
add
jnp
sarb
push
lock
and
push
enter
repz
jge
in
popa
dec
push
insb
add
fnsave
inc
and
jl
jecxz
jg
test
xchg
icebp
pop
and
cmp
rcr
std
mov
adc
jno
lock
lds
test
mov
out
mov
mov
jo
call
sub
lea
pop
sbb
adcb
aaa
rcrb
jp
adc
mov
and
mov
xchg
inc
pushl
popf
xor
mov
outsl
lcall
gs
mov
fstps
fisttpl
into
and
cmp
cld
enterw
into
sub
push
scas
push
sub
lods
shrb
cmc
cltd
popf
push
movsb
sbb
lahf
or
jmp
fsubs
inc
inc
inc
inc
jbe
movsl
pop
mov
dec
jno
adc
lcall
fs
pushf
aas
mul
mov
gs
dec
idivl
imul
mov
sub
mov
jp
mov
movsb
bound
mov
arpl
imul
push
xchg
add
or
mov
pop
std
testl
xchg
popa
pmaxub
std
cmpsl
ret
out
or
rol
bound
fadds
add
xor
pop
inc
push
or
lret
cmp
out
xchg
and
in
lret
inc
ds
cmp
inc
xchg
sbb
add
jo
mov
in
and
add
dec
push
cwtl
in
adc
loope
dec
add
repnz
inc
popf
int
ja
pand
lahf
ret
ss
add
mov
push
sbb
push
sbb
jecxz
inc
or
popf
ret
flds
jle
add
or
mov
in
mov
jb
sti
cmp
inc
ret
push
repz
arpl
cld
lods
jns
mov
call
cmp
bound
shl
loope
dec
push
xor
stc
nop
mov
in
aam
inc
add
dec
or
loopne
std
mov
mov
push
xor
xor
out
push
pop
adc
adc
inc
stos
imul
mov
int
or
cmp
test
clc
add
inc
and
or
clc
fwait
call
mov
jb
loop
aam
xchg
xor
shl
cli
jae
lret
in
push
or
in
leave
inc
repz
in
test
loop
loopne
mov
dec
add
lret
aad
push
popf
cmpsl
push
in
inc
gs
mov
pop
sub
push
mov
daa
addl
mov
mov
fs
lock
sarl
xchg
mov
or
test
mov
jo
scas
inc
ret
mov
xchg
inc
std
sub
and
sbb
cmp
push
inc
inc
int3
add
popa
adc
mull
cmp
add
inc
and
push
mov
bnd
lods
mov
mov
nop
add
inc
lcall
loopne
insb
sbb
std
ds
aad
xchg
lea
mov
movsb
inc
sahf
icebp
ret
bound
leave
in
xor
addr16
or
roll
sbb
xor
jno
rclb
pop
add
mov
sbbb
in
scas
push
dec
popa
xlat
or
out
xorl
out
xchg
aaa
cmp
xor
xchg
pop
testb
pop
sbb
jo
add
loop
enter
cmpsl
push
test
fidivl
push
inc
xor
mov
dec
push
pop
xchg
and
mov
mov
and
fsubrl
dec
dec
jle
xchg
mov
shll
dec
nop
mov
push
mov
cltd
mov
mul
cwtl
cmc
and
xchg
movsb
adc
imul
dec
cmp
shlw
into
mov
pop
sbb
xor
push
fsubrl
negl
decb
pop
in
popa
adc
mov
dec
mov
cs
dec
pop
xchg
dec
addr16
clc
xchg
adc
cmpsl
pop
sub
and
mov
xchg
cmp
insb
pop
aam
pop
std
jns
lock
or
imul
lock
xacquire
stos
cmp
sub
push
leave
pop
dec
ret
mov
lret
ffreep
sbb
pusha
rcrb
push
cmp
jl
and
rolb
es
sub
adc
jnp
mov
mov
not
mov
cmp
inc
mov
icebp
push
mov
test
add
movsb
rcl
xchg
push
adc
add
and
xor
jno
push
stc
scas
clc
cmp
out
dec
cmp
xchg
sbb
xchg
or
cltd
sbb
aas
xchg
mov
mov
daa
and
mov
mov
or
pop
loope
xchg
xor
dec
mov
mov
push
stos
xor
cmpsl
push
mov
xchg
adc
lret
mov
jno
addr16
push
add
sbb
or
cli
fistl
repz
scas
lock
and
jl
mov
pop
dec
xor
pop
push
or
jmp
mov
jno
inc
bound
out
dec
xor
push
mov
jbe
bound
out
ljmp
sub
mov
in
loopne
xor
daa
inc
pushl
orl
add
adc
scas
pop
aam
outsl
mov
push
cld
scas
lret
jno
movsl
pop
pop
or
adc
cmp
test
mov
fldl
fsub
xchg
mov
out
nop
dec
mov
mov
push
mull
or
int
cli
mov
jnp
aam
mov
push
cmp
mov
pop
fisubrs
inc
inc
test
loopne
cmpsb
mov
jne
clc
or
pop
sub
mov
jp
cmpsl
aam
lods
and
jecxz
inc
sar
mov
fldcw
pop
lods
cld
push
and
add
mov
pop
cmp
outsb
mov
adc
pop
lea
aas
aaa
mov
pop
out
int
je
jmp
out
mov
cmpsl
jecxz
test
mov
clc
mov
dec
mov
push
loope
mov
popa
push
mov
xchg
cmp
int
jb
mov
hlt
inc
dec
call
shll
ds
push
mov
xchg
vmovd
orb
sbb
cmpsl
cmp
dec
inc
mov
mov
and
push
mov
daa
dec
mov
mov
repz
std
fwait
mov
xor
push
xchg
insl
gs
mov
inc
lods
in
xor
pushfw
xchg
pop
xchg
xlat
mov
sub
bnd
out
lods
test
sbb
or
push
nop
jg
in
popf
fnsave
jo
in
fdivs
sub
xor
push
popf
pop
outsl
cs
push
ret
call
enter
jge
sbb
scas
dec
test
or
test
addr16
ljmp
pop
sbb
xor
push
sarb
dec
ss
lcall
sbb
mov
pusha
fsubrl
fwait
jae
inc
pop
pop
push
insb
cld
mov
push
je
xchg
mov
adc
pop
dec
mov
sbb
cmp
aad
xor
pop
mov
and
hlt
divb
imul
out
sbb
fcoms
adc
loope
hlt
loope
ss
push
inc
mov
pop
ret
daa
notl
dec
inc
xor
popf
xchg
ret
inc
cmp
add
jmp
cmp
out
inc
addr16
sbb
add
mov
subl
inc
sub
icebp
ror
inc
adc
rclb
scas
stos
js
cmp
data16
bound
scas
mov
mov
movb
jne
add
push
outsl
mov
mov
lahf
les
lea
push
dec
mov
jb
cmp
movsl
les
mov
cs
lods
cwtl
lods
or
push
lret
xor
out
or
loopne
mov
xchg
enter
push
pop
dec
cmp
xchg
rol
addr16
cmp
jge
xchg
jne
adcl
mov
or
subl
sahf
cmpl
mov
jbe
adc
mov
cmp
push
dec
cmp
mov
paddb
lock
cmpsb
jle
jbe
nop
jo
sar
js
xchg
lcall
mov
pop
in
adc
cmc
movsl
mov
inc
mov
fisttps
call
cmp
jp
jb
je
sub
adc
inc
inc
iret
lret
cmp
ss
in
sbb
and
data16
cwtl
sbb
mov
sub
jne
pusha
test
ljmp
fwait
out
shl
inc
sbb
jno
movsb
cs
lea
ss
mov
lret
lock
je
movb
dec
roll
dec
adc
mov
fdivl
repnz
popf
rol
arpl
filds
rcll
xor
sarl
js
cmp
in
mov
fs
stos
hlt
iret
adcb
sbb
addr16
movsl
jecxz
xchg
jno
cld
pop
sub
sbb
xchg
daa
in
jge,pt
dec
ss
cmpsl
repnz
xchg
aaa
cmp
sbb
inc
mov
pop
cmc
dec
clc
sub
jle
int3
loopne
mov
scas
aas
mov
mov
cmpsb
jns
fcmove
mov
sti
pushl
jp
jns
sti
imul
mov
int3
sbb
jne,pt
push
cmp
test
outsb
cld
jp
fsub
mov
bound
int3
pop
pop
xchg
insl
data16
fs
inc
fimuls
scas
lods
jl
popa
add
popf
and
addr16
enter
mov
jo
je
cmpsb
push
pop
mov
cmp
mov
sbb
xor
outsl
loop
jnp
fldt
jne
xor
nop
jno
test
dec
movsl
xchg
push
std
movd
sub
mov
fwait
aam
push
adc
mov
cmp
pop
mov
mov
mov
adc
pop
lea
jnp
dec
mov
out
int
push
and
mov
or
xor
data16
mov
imul
imul
imul
inc
js
mov
stos
js
negl
inc
outsb
sbb
cmp
jb
dec
arpl
fdivr
cmpsl
insl
jp
adc
pop
xchg
inc
test
and
mov
adc
jae
inc
sub
jle
into
lret
gs
lock
ja
mov
push
pop
sub
data16
leave
sbb
jmp
pusha
mov
push
mov
out
sbbb
or
test
inc
adc
lret
loope
mov
and
ljmp
add
lahf
out
leave
pop
bound
stos
testb
or
scas
jl
stos
push
xchg
inc
push
mov
sbb
adc
aaa
sub
mov
addr16
int3
in
sbb
mov
ret
xchg
arpl
mov
mov
iret
ret
je
sub
dec
popf
out
js
je
xor
jne
push
jp
pop
jns
and
jns
scas
in
test
dec
pop
pop
xor
xor
test
fisubl
aam
mov
subb
adc
and
lods
addr16
fs
lret
daa
push
pop
jo
cmp
mov
call
int3
incl
cli
clc
mov
xor
push
mov
adc
in
xor
stc
cmpsb
and
popf
cld
scas
cmc
cli
clc
adc
scas
jne
add
movl
xor
cmpsb
pop
popf
les
mov
jbe
cmpsl
push
aaa
mov
out
test
shrl
cli
setno
ret
push
aam
in
push
push
mov
repz
movsl
rcrb
pop
movsb
pop
aas
mov
dec
and
xor
dec
test
cmp
sbb
call
popf
mov
fadds
fnstenv
mov
cmp
mov
popf
test
jo
into
or
ja
mov
xor
or
pop
xor
es
pop
subl
iret
inc
jg
sub
das
xor
mov
jae
shll
popf
stos
cmp
loop
cmp
shrl
mov
addl
jnp
pop
mov
jmp
adc
sbb
fstpl
orb
xlat
shlb
in
dec
jb
add
or
adc
jle
addr16
jb
jo
mov
negb
pop
mov
mov
xchg
pop
hlt
pop
mov
xor
adc
shlb
mov
dec
xlat
ja
lods
mov
push
loopne
adc
ljmp
or
cmp
xchg
jecxz
cmp
mov
add
inc
fstl
dec
data16
pop
jno
and
mov
std
jl
in
stos
shrb
ja
cmp
mov
adc
aas
sbb
cmp
pop
mov
mov
mov
stc
mov
cmp
pushfw
dec
cwtl
lret
cmp
add
flds
pop
push
enter
inc
lods
int
sbb
jg
mov
sbb
repnz
xor
cltd
cmpl
inc
cmp
stos
inc
jnp
jno
jl
fwait
clc
test
jb
cmp
and
sbb
sub
xchg
adc
push
xchg
aam
mov
je
push
mov
data16
xchg
lods
icebp
imul
jp
imul
movsb
mov
leave
rclb
add
xchg
xchg
cltd
jge
in
or
xor
test
scas
daa
pop
and
push
cld
jp
lret
push
cmp
frstor
rclb
sub
ror
mov
xor
add
xchg
in
xchg
pop
mov
es
shll
cmc
int
jmp
scas
insl
stos
dec
mov
xor
nop
xor
sub
mov
add
dec
jecxz
inc
sti
idivb
and
jmp
sub
inc
fidivrs
aam
popf
movsb
ret
lahf
sbbb
pusha
push
lds
pop
aam
dec
mov
out
pop
out
mov
jb
mov
mov
mov
lret
jne
xchg
bnd
pop
dec
mov
pushf
cmp
clc
aam
insb
push
inc
or
jmp
cmc
jmp
xchg
lea
mov
dec
pop
inc
pusha
fwait
in
or
xchg
loopne
cwtl
bound
fwait
xchg
sbb
testb
mov
bound
mov
cmp
mov
xor
sbb
cltd
iret
adc
imul
inc
repz
xchg
add
inc
fisubs
iret
mov
xor
adc
add
ja
sbb
mov
inc
imul
data16
push
test
in
cli
inc
jno
popa
xchg
into
scas
sub
cmp
ret
lret
mov
mov
xor
mov
lmsw
mov
add
repz
pop
js
push
incl
adc
dec
stos
in
mov
dec
out
outsl
test
popf
fucom
lea
imul
xchg
std
add
xor
or
adc
pop
inc
inc
xlat
lods
mov
mov
sbb
aad
push
inc
cmpsb
leave
test
fs
int
int
dec
pushf
roll
mov
cli
insl
xchg
les
push
push
add
mov
jecxz
enter
xchg
adc
dec
pop
add
mov
sub
lcall
dec
mov
in
out
and
fisttpll
and
push
push
adc
fs
add
adc
cld
mov
lcall
mov
out
aad
out
in
pusha
insb
icebp
add
push
adc
sbb
out
scas
xchg
lret
xchg
mov
sub
mov
cld
cli
bound
popa
inc
mov
jge
ds
dec
lds
mov
adc
ds
jl
jo
mov
mov
aad
mov
add
jbe,pn
mov
fwait
mov
adc
lcall
fimuls
pop
cmp
iret
ljmp
mulb
stc
inc
sbb
xchg
inc
fstl
lds
dec
daa
lahf
or
test
sub
sub
adc
dec
xchg
in
jmp
mov
push
mov
jmp
dec
dec
sahf
cmp
xor
imul
xchg
incl
or
fstpt
or
adc
insb
mov
mov
mov
out
lcall
ljmp
inc
mov
orl
pop
pop
cmp
add
std
jae
add
push
outsl
mov
insb
add
jmp
adc
xor
sub
movsb
push
inc
mov
fwait
pop
out
jecxz
scas
dec
test
inc
lods
adc
dec
into
jbe
mov
inc
pusha
insb
in
out
inc
pop
int
xchg
stos
add
in
scas
xchg
jno
out
xchg
addr16
mov
lcall
dec
mov
add
mov
xchg
fistl
push
std
and
pushf
into
push
or
sti
test
xchg
dec
push
jl
idivl
dec
jmp
xchg
mov
fwait
jg
adc
jnp
push
cmpsl
pop
dec
jne
sbb
bound
jnp
jno
and
js
inc
ret
test
out
adc
ficompl
std
pop
mov
sti
adc
stos
ljmp
popf
ret
repz
adc
arpl
ja
negl
enter
outsb
or
cmp
rorl
mov
into
mov
adc
out
or
jle
add
pusha
xchg
cmp
mov
and
sti
adc
dec
xor
icebp
notrack
cmp
xor
adc
and
fwait
sti
popa
cmp
scas
fprem1
out
cli
mov
into
mov
aad
imul
iret
xchg
mov
jbe
int3
bound
lds
mov
aad
jno
mov
inc
es
shlb
add
das
ss
insl
movsl
jne
fsubrs
cmp
cmp
loop
sub
sbb
fwait
loop
icebp
loopne
icebp
jae
jbe
pop
inc
sbb
popw
xchg
or
stc
shrb
movsb
adc
mov
sarl
adc
out
jo
mov
cs
mov
addr16
xlat
mov
mov
xor
and
nop
mov
add
pop
or
insl
lock
imul
outsl
cmp
sahf
xor
jl
test
loopne
jbe
mov
pop
into
xor
repnz
loopne
sahf
jmp
movsb
jns
inc
mov
inc
dec
aas
push
iret
movsl
jo
dec
jge
negl
shrb
pop
xor
jge
frstor
daa
addr16
pop
push
jae
pop
pop
bound
fmuls
jl
xchg
roll
sub
xchg
int3
mov
aad
outsl
mov
pop
lock
or
cmp
push
push
inc
xor
and
filds
inc
aaa
shlb
mov
addr16
popf
sbb
imul
ljmp
cmp
lods
mov
and
stos
add
lcall
out
pop
mov
scas
popa
or
es
cmc
mov
in
jmp
add
mov
imul
mov
sub
iret
cmp
sbb
xchg
push
mov
aas
fsubl
les
sbb
sbb
rcr
cmp
adc
setl
je
scas
test
sar
mov
mov
pop
aas
push
ljmp
xor
ss
xchg
pop
dec
cltd
test
adcb
or
add
push
sbb
ss
cltd
adc
leave
jmp
jle
or
jae
or
inc
test
inc
inc
jae
roll
decl
mov
xor
and
ljmp
ds
sbb
inc
mov
mov
mov
dec
xchg
sbbb
mov
das
mov
jb
pop
cmp
or
sbb
push
nop
push
pop
mov
repz
mov
jge
lret
and
mov
push
pop
in
loop
lods
xlat
movsl
popf
sub
jne
xchg
pop
in
rcrl
mov
mov
popa
lahf
sti
cmc
inc
insb
pusha
in
mov
or
sbb
shll
gs
subb
jp
mov
dec
pop
loop
mov
xchg
out
in
ja
sub
inc
mov
jecxz
and
test
mov
movaps
aas
in
lea
jo
fdivl
inc
sbb
xor
stc
cmp
mov
imul
push
sub
andl
int
xchg
adc
loopne
nop
clc
aad
ss
adc
xchg
aaa
jle
fs
scas
scas
jbe
pop
or
ja
or
stos
ljmp
call
notb
push
aad
xchg
test
lcall
mov
fcoml
inc
mov
ret
jo
cmp
rolb
sbb
fwait
nop
pop
sti
ret
popf
pop
mov
xchg
movb
dec
jg
ss
lds
fisttpl
mov
pushf
pusha
clc
add
pop
call
dec
dec
int
lods
bnd
push
sar
out
cmp
les
dec
cmpsl
add
dec
jg
sbb
sbb
xlat
jae
mov
sbb
push
cltd
push
in
and
sub
mov
mov
xor
fisttps
adc
xchg
xor
jb
insb
outsl
por
cmp
js
js
xor
test
rorl
shrb
or
popf
call
int3
cs
cmp
mov
mov
inc
and
add
aad
test
jmp
and
out
leave
shll
inc
xchg
xchg
dec
ret
out
fldl
inc
push
mov
pop
aas
pop
int3
jae
sub
outsb
add
or
push
inc
pop
mov
mov
nop
loope
lods
pop
or
int
mov
test
and
add
cltd
push
sti
mov
inc
stc
mov
xor
sub
push
jb
sbb
xor
iret
lods
outsl
rorl
fdivrl
add
mulb
xor
or
ds
mov
pop
or
or
mov
dec
pop
nop
inc
mov
pop
xor
adc
ret
out
jnp
test
enter
subb
push
adc
push
pop
sbb
xchg
cs
and
test
xor
add
lea
sbb
repz
cwtl
fs
cmc
fwait
mov
popa
add
mov
xchg
lods
cmpsb
shlb
mov
adc
divl
push
xor
push
xor
push
mov
aam
addb
xlat
cmp
stos
inc
inc
aam
mov
outsl
shll
enter
or
dec
jmp
lret
and
xor
or
inc
icebp
aam
rorb
add
fdivrl
aad
fcompl
sub
sbb
push
jp
xchg
sbb
cltd
movsb
addr16
aas
cltd
fidivl
pop
test
fmul
dec
jbe
dec
xchg
xlat
or
push
icebp
mulb
mov
xchg
inc
or
ja
fists
outsl
cmpsb
call
test
jge
or
lods
or
dec
xor
jne
pop
cld
push
inc
mov
ljmp
iret
and
xchg
fldt
lods
out
scas
popf
add
adc
xor
or
xchg
pop
or
mov
sub
iret
mov
inc
fistl
insb
addb
icebp
mov
int
xlat
or
mov
mov
push
icebp
dec
sti
pop
stos
inc
ret
dec
xchg
sbb
sti
push
inc
mov
sbb
ja
testb
fidivrs
cmp
and
int
adc
or
dec
scas
adc
xor
mov
in
jne
or
jmp
mov
loope
push
cmpsl
mov
inc
mov
xchg
xchg
inc
sarb
out
adc
pop
jbe
push
test
dec
dec
or
cld
test
js
xor
mov
iret
and
aad
xor
test
outsl
and
lock
out
or
rcl
sbb
jne
mov
test
jo
cltd
push
in
mul
add
mov
xor
add
xchg
push
sti
insb
loopne
lods
cmpl
mov
mov
popa
inc
fsubrl
cmp
out
adc
loopne,pn
negl
sbb
loopne
jns
stc
and
fwait
lods
popa
std
pop
mov
in
mov
lret
xlat
pop
push
int3
push
jg
outsl
stos
xchg
sub
inc
cli
mov
sbb
add
xchg
push
imul
in
sub
sbb
mov
push
movsl
pop
fwait
arpl
jno
std
mov
cli
inc
clc
inc
push
dec
enter
xlat
aaa
cmp
data16
inc
cld
stos
xor
mov
lods
sub
pop
dec
adc
shufps
mov
push
adc
js
leave
mov
or
lock
lret
push
dec
push
ret
xor
pushf
out
mov
arpl
mov
adc
scas
inc
xchg
mov
loopne
int3
in
mov
repnz
ljmp
pop
push
data16
out
and
and
imul
shlb
dec
and
insl
pop
pop
fcoms
ljmp
pop
enter
cmc
xchg
andb
rcrb
xor
push
mov
test
and
outsl
pop
fists
loopne
ret
dec
and
xchg
clc
repnz
orb
sub
xchg
gs
pop
mov
push
movsl
das
inc
jmp
int3
push
xor
cmp
mov
jg
inc
adcl
mov
repz
sub
sbb
cli
call
inc
jmp
jmp
pop
add
shr
or
mov
or
pop
pop
fnstenv
das
sbb
bound
xor
jecxz
add
and
sbb
cwtl
jnp
cwtl
out
push
ds
lods
xchg
pusha
push
and
xchg
cmp
or
leave
or
sub
xor
pop
jae
push
int
test
dec
push
inc
mov
inc
push
xchg
cs
mov
imulb
std
negb
cmpsl
sbb
or
cmpsb
push
mov
pop
adc
sbb
mov
iret
fs
les
ss
and
xor
leave
jmp
xor
inc
mov
add
popa
jae
adc
cltd
bound
push
out
sbb
jge
add
jp
repz
aad
lods
sarl
xchg
mov
or
cmp
mov
call
or
mov
dec
lret
aaa
jge
and
adc
fbstp
or
push
insl
sbb
add
add
rcl
jae
lret
lea
xor
pop
add
and
fisubrs
xor
or
addb
xchg
and
lds
push
arpl
ja
mov
rclb
push
loop
aas
and
add
stc
scas
mov
cld
nop
inc
into
jge
and
mov
push
les
cwtl
data16
into
out
insb
push
inc
std
adc
sbb
pop
xchg
xor
or
mov
lods
lods
push
aam
mov
xchg
aaa
cmp
popa
and
rclb
xchg
mov
sbb
sub
out
int3
fwait
aas
inc
pop
imul
cmp
pushf
sbbl
in
or
lcall
icebp
pop
and
imul
pop
jo
mov
jae
push
lds
jbe
rolb
int
sub
dec
aad
add
int
xchg
stc
mov
int
jmp
sbb
jecxz
push
cmc
add
outsb
mov
push
lods
outsl
test
adc
inc
xor
push
fwait
std
loop
dec
push
xchg
test
jge
imul
mov
loop
jno
aaa
xorl
jmp
xchg
div
jp
or
push
mov
roll
mov
aaa
jb
mov
dec
stos
in
jmp
imul
sti
mov
clc
shrb
pop
fisttps
les
add
mov
sub
xchg
cld
push
and
cmp
dec
cmc
mov
scas
adc
mov
test
stos
mov
mov
pop
pop
add
shrb
in
dec
out
mov
and
pushf
out
add
test
mov
and
loope
xchg
mov
or
sub
call
ja
pusha
sbb
mov
out
push
fdivp
adc
std
xor
pusha
out
mov
lock
or
sbb
fcomp
xor
or
imul
movl
jecxz
into
lahf
sub
loope
ficompl
fstps
std
incl
cmp
push
pop
int3
mov
stos
faddl
sbb
mov
jmp
adc
rorl
or
jns
dec
push
imul
movsb
ds
aaa
sub
repnz
dec
or
lret
push
push
sbb
mov
and
fbstp
iret
cmpsl
jl
xchg
adc
enter
add
or
mov
mov
mov
cmp
stos
jecxz
stos
sub
popf
push
in
jno
jl
and
setbe
jle
bound
shl
int
fistl
adc
jno
xor
std
sub
sub
xchg
mov
add
rcrb
pop
pmaxub
jbe
or
aaa
xchg
xchg
arpl
dec
push
pushf
inc
pop
adc
mov
pop
aam
int3
std
ss
adc
stc
jp
divb
xchg
mov
pushf
add
jecxz
ljmp
aaa
dec
jp
mov
addr16
add
xchg
push
sbb
sub
xor
cmpsl
testb
loope
inc
fldcw
push
lock
adc
mov
pop
enter
xor
mov
push
in
jae
xchg
jmp
sbb
jns
sarl
inc
push
addr16
jne
inc
aam
incb
shrb
and
or
adc
push
rorb
data16
push
inc
pop
xchg
mov
ret
lret
sub
push
pop
inc
adc
std
std
ljmp
xor
adc
aas
stc
enter
aaa
cmp
sub
out
mov
rcl
leave
lea
fistpll
add
xlat
notl
or
and
clc
or
jmp
pop
lea
pop
jbe
xor
mov
sahf
mov
push
xor
or
mov
out
inc
mov
sub
pop
pop
cmp
dec
mov
add
idivb
adc
inc
cltd
notl
addr16
mov
fcoms
cmpsb
mov
pop
push
jmp
prefetchwt1
mov
push
dec
push
and
mov
imul
inc
pop
mov
in
sti
push
cmp
sub
adc
xchg
ficompl
xlat
xchg
sti
hlt
or
adc
loopne
sub
pusha
jae
popa
lods
xchg
and
leave
mov
push
xchg
push
push
fidivrl
xor
push
stc
testl
in
ljmp
pop
add
clc
orb
movsb
cmpsl
pushf
dec
out
cmpsl
aas
call
adc
fnsave
ret
in
cmp
das
popf
and
rorl
clc
cmp
jns
mov
sbb
xor
jg
fs
pop
cwtl
decb
mov
arpl
movsl
fwait
imul
dec
sub
xchg
test
xchg
adc
in
imul
out
hlt
repnz
loopne
inc
fisttpll
inc
ffree
adc
in
push
mov
sahf
repnz
lock
out
std
loop
mov
cmp
sbb
incl
jl
test
mov
fisubrl
jle
popa
inc
imul
xor
pusha
insl
cmc
xchg
xchg
mov
test
push
xchg
scas
mov
or
popf
xchg
cmp
inc
or
xchg
lods
mov
pop
enter
mov
jae
fcoml
xor
add
fadds
int
movsl
sbb
aaa
cmpsl
ret
or
scas
repz
enter
xlat
nop
and
push
dec
jp
icebp
clc
jle
fwait
pop
inc
rolb
xchg
cs
das
cmp
scas
jmp
test
or
and
outsl
or
jecxz
scas
cmpsl
and
cmp
into
sub
insb
or
dec
lahf
neg
iret
sbb
or
ljmp
push
dec
out
testb
add
into
sbb
pop
or
jb
addr16
daa
xchg
out
mov
dec
lock
xchg
lcall
mov
xor
iret
sbb
lcall
insl
push
arpl
in
mov
push
addb
mov
jp
sarl
gs
xlat
and
pop
insb
std
inc
test
outsl
sbb
sub
jbe
pop
lret
ss
push
fwait
mov
jo
daa
mov
jecxz
popa
mov
shll
cwtl
jp
xor
into
push
fwait
mov
xchg
insb
xchg
in
dec
insl
jmp
sbb
aaa
insl
cmp
pushf
enter
sbb
pop
lods
int3
mov
mov
dec
scas
sub
sbb
enter
aad
jns
in
push
and
lcall
leave
decb
enter
push
out
ret
outsl
mov
flds
addr16
jne
das
sbb
xchg
sub
in
push
and
add
scas
fistpl
adc
imul
mov
sub
js
or
inc
loope
out
mov
mov
fldt
andb
arpl
add
sub
jns
ret
mov
xlat
push
cwtl
xlat
cmp
xchg
xchg
mov
xor
pop
adc
pop
adc
inc
xor
out
pop
lcall
and
popf
sti
aas
inc
sub
int3
test
shrl
mov
xor
xchg
into
add
xchg
leave
jp
mov
cli
pushf
ret
xchg
xor
pop
imul
dec
dec
ljmp
dec
sbb
lds
mov
xor
inc
and
shlb
bound
ret
scas
mov
fadd
add
push
daa
jb
outsb
lcall
fisttps
mov
pusha
jae
jns
insb
cli
pop
ficoms
adc
cmp
bound
lea
jmp
jae
add
dec
aad
or
adc
fsubs
mov
pusha
inc
adc
sbb
xchg
out
je
mov
dec
cmpsl
inc
subb
enter
adcb
fldcw
inc
fidivl
lret
lret
lahf
push
lods
lret
push
repnz
mov
push
fiaddl
lcall
sub
sahf
xchg
cmp
mov
ljmp
mov
mov
or
inc
shrl
jge
add
lcall
call
adc
scas
add
cmpsl
insb
mov
and
pop
test
xor
jl
lds
mov
add
adc
sbb
or
mov
sbb
loopne
sub
mov
sbb
test
test
test
xchg
cmp
stos
sbb
sbb
lods
push
shll
cmp
ss
cmp
add
rorl
and
pop
cmpsl
xchg
mov
jbe
adc
push
sbb
icebp
dec
insl
inc
orl
mov
push
mov
add
push
lock
dec
jle
fcoml
xchg
arpl
pop
add
movsb
xchg
jmp
pop
lock
ret
xchg
cmpl
sub
xchg
cmp
gs
sbb
mov
jnp
cmc
popf
sub
sbb
cmova
sbb
jmp
mov
xor
or
and
je
inc
pop
movsb
jp
gs
ljmp
cli
pop
stc
jg
outsb
sub
and
cli
scas
int3
xchg
pop
pause
xchg
xor
jg
je
stos
insl
mov
push
dec
push
mov
mov
pop
xor
lods
push
test
sub
add
mov
add
add
sti
jg
inc
imul
call
lods
fidivrl
mov
cmp
testl
fcmovbe
aaa
mov
mov
mov
xchg
cmp
nop
sbb
lcall
mov
push
scas
adc
mov
push
cmp
jb
arpl
sub
xchg
sub
mov
movsl
mov
mov
mov
sbb
or
xor
xor
aas
cmp
dec
js
sbb
jmp
hlt
mov
or
inc
fisubrs
roll
test
jbe
mov
push
or
mov
pop
movsl
fbld
incb
adc
and
in
and
or
out
or
mov
stos
sbb
jle
inc
push
aaa
dec
fildl
das
xor
sbb
and
and
aam
ret
mov
cmp
cltd
fistl
pcmpeqb
rcll
adc
inc
mov
movsl
ret
add
xor
mov
and
push
imul
dec
das
sti
inc
pushaw
jno
xchg
and
pop
movsl
dec
push
jle
jg
ja
loopne
das
movsb
cmp
lret
adc
gs
push
out
ja
inc
mov
mov
mov
out
ja,pn
decb
out
or
fdivrs
jae
orb
adc
rclb
sub
sbb
inc
insl
add
cltd
jne
cmc
cmp
mov
pop
mov
fxch
cmpsl
push
inc
cmp
cltd
das
mov
in
lret
cwtl
lock
cs
loope
lods
jae
insl
add
lcall
shrl
in
cmpsl
cmp
and
rolb
in
add
pop
test
inc
xor
in
or
mov
or
fadds
jb
call
aam
js
xchg
ljmp
or
pushf
sub
sbbl
mov
push
clc
and
cli
sub
in
jb
xchg
jg
cmp
das
sub
or
in
push
subl
sub
mov
shlb
stos
dec
jno
dec
jb
mov
cmp
js
repnz
ljmp
xchg
inc
loopne
data16
pop
push
cmpsb
test
pop
lret
sub
pop
and
and
mov
data16
pushf
sti
push
loope
dec
xchg
js,pt
mov
inc
mov
mov
xor
ss
inc
mov
lods
sub
sub
lods
shr
pop
xchg
cwtl
jo
jnp
js
std
outsb
pop
hlt
mov
jecxz
mov
repnz
adc
sahf
jnp
insb
not
popf
and
les
dec
jmp
inc
outsl
xchg
push
stos
xor
test
imul
sub
pop
ljmp
inc
js
push
push
cld
stos
push
pop
std
dec
cmp
dec
hlt
mov
jl
dec
scas
xchg
ret
adc
mov
xchg
leave
divb
in
cmc
sub
sahf
lar
ret
push
push
sub
sbb
push
mov
xchg
es
add
ret
rorl
das
or
popa
sti
cld
jecxz
sub
int
mov
mov
popa
outsb
loope
jge
mov
das
in
sbb
pop
int
es
pop
stos
inc
inc
mov
into
add
adc
mov
es
adc
jno
add
ret
jns
cmpsb
pop
and
push
test
out
dec
popl
loope
dec
out
mov
lds
icebp
movsb
mov
cltd
inc
push
roll
cmp
pusha
pminub
adc
mov
xor
jmp
or
setg
aas
sbb
xchg
decl
test
sub
adc
pop
pop
push
lahf
enter
flds
outsl
arpl
into
lods
cmpsl
in
cltd
mov
mov
or
es
push
push
or
cmp
shll
out
xchg
in
insl
push
pop
imul
les
rolb
or
jnp
push
jg
or
xchg
dec
ror
xor
jns
xchg
or
pop
movl
or
cmovg
in
mov
fistpll
or
sbb
push
insb
jmp
dec
addl
int
ret
lahf
sub
mov
inc
pop
sbb
mov
push
dec
mov
hlt
xchg
mov
add
jp
adc
outsb
out
cmc
in
aas
test
das
mov
das
adc
int3
iret
lcall
jnp
inc
test
insl
dec
or
jo
add
xor
outsl
and
add
push
jne
xchg
pop
and
add
aad
repz
outsb
xlat
cmp
push
leave
fiadds
xchg
mov
xchg
rorb
leave
sbb
pop
xchg
rcrb
fsub
test
jecxz
or
lds
cmp
sub
push
stos
and
mov
pop
in
xchg
push
mov
push
cmc
and
scas
inc
fs
ljmp
mov
lock
push
inc
andl
sub
shrl
out
pushf
hlt
loopne
daa
lods
push
jmp
lods
mov
mov
cmp
and
addb
aaa
shlb
pushf
repz
dec
lret
adc
jb
ret
movsb
aas
add
or
ficomps
lcall
mov
test
mov
mov
jmp
mov
inc
lods
xchg
pop
inc
test
es
sti
ja
test
xchg
and
cmp
adc
push
mov
nop
inc
mov
pop
adc
dec
out
add
xor
bound
cmpsl
js
mov
in
int
push
movsb
iret
sahf
or
jb
insl
out
dec
push
cmp
mov
mov
cmp
sahf
jo
sbb
xlat
mov
pop
xchg
cltd
out
push
xor
outsb
movsl
cmp
dec
insb
lds
rcrl
test
test
dec
movsl
jge
push
lcall
and
or
inc
shll
ss
adc
mov
jno
addb
dec
insl
sub
gs
addb
dec
cwtl
inc
dec
cmp
inc
or
leave
mov
cmp
add
push
ficoms
ss
movsl
xor
out
fcomps
mov
jb
dec
enter
pop
push
ja
adc
add
mov
mov
lea
add
shrl
popf
imul
lahf
dec
test
lahf
and
push
jmp
pop
test
cltd
mov
andl
insl
lock
into
aas
in
jge
into
mov
lret
jl
sahf
or
mov
fistl
pop
fldl
clc
insl
add
aaa
fnsave
out
dec
out
movq
lret
or
std
subb
mov
test
adc
andl
sbb
cmp
repnz
sbb
pop
aas
or
stos
aam
rorl
cmp
cmpsb
fcoml
in
jo
lret
vunpckhps
lret
pushf
ror
cmp
xor
in
leave
inc
fwait
cwtl
addr16
push
scas
push
push
imul
pushf
leave
repnz
xchg
inc
in
pusha
lods
add
lock
push
in
sahf
divl
into
or
jle
fldt
jo
notb
pop
ret
sub
inc
jecxz
jbe
stos
imul
and
mov
mov
sub
call
mov
jo
sti
push
pop
or
xchg
lods
and
sbb
push
enter
out
xor
mov
inc
pusha
inc
test
sbb
movsb
mov
shr
push
hlt
repz
fdivl
xchg
rol
jnp
sub
mov
add
jg
clc
mov
mov
mov
scas
je
loope
cltd
rorb
dec
orl
rcl
mov
adc
sub
addb
aam
cmp
fsubrl
mov
popf
xchg
test
nop
adc
sbb
xchg
rcr
aaa
scas
in
test
jbe
pop
pop
nop
cmp
jle
or
mov
pop
cmp
mov
lods
sbb
sub
arpl
or
pop
xor
jb
fistl
dec
add
cld
dec
imul
inc
cmpsl
mov
insl
je
imul
xor
dec
mull
or
lds
fwait
mov
lea
sub
mov
jne
jmp
das
sbb
xchg
mov
pop
pop
movsb
stc
cmpsl
mov
test
stos
and
cmp
arpl
sbb
out
inc
daa
lcall
test
lods
add
mov
pop
ja
sahf
js
sbb
mov
ja
push
pop
fsubl
ja
lods
push
inc
mov
fmuls
lock
popa
cld
orb
lods
loopne
sbb
xchg
mov
jb
xchg
sahf
fwait
sub
xchg
mov
or
add
xor
mov
lock
mov
addr16
mov
mov
pop
or
push
pop
hlt
cmpsl
xchg
mov
int3
pusha
enter
jno
xchg
insb
cmpsl
pop
inc
cmp
js
add
mov
leave
out
idivb
les
movsb
mov
lods
pop
dec
and
in
push
ret
pop
out
fwait
test
push
cmp
and
cwtl
insb
sub
xchg
push
cli
cmp
push
lret
xchg
fwait
jmp
mov
mov
fisttpl
add
pop
ljmp
push
push
sbb
les
arpl
popf
addl
dec
pushf
mov
shrb
or
mov
or
mov
ds
jle
pop
xchg
sub
scas
jb
dec
fdivrl
adc
call
daa
stos
repnz
outsb
cmp
mov
pusha
jno
add
cmpsl
popl
mov
pop
jecxz
dec
pop
mov
je
stos
stos
into
enter
mov
pop
sbb
pop
mov
dec
imul
fsubl
pop
ja
movsb
mov
add
jmp
fisttps
xor
dec
inc
jo
push
addr16
jae
cmp
pop
lahf
lahf
sub
icebp
xor
and
pop
or
jg
mov
lret
ds
ss
rcrl
xor
jno
arpl
or
lds
mov
scas
loope
add
xor
inc
push
inc
xsave
mov
mov
sbb
ret
aad
fidivl
or
outsb
loopne
cld
pop
mov
sbb
push
aaa
imul
fdivrl
or
push
jne
movsl
cmp
xor
ret
sti
insb
insl
or
arpl
push
out
outsl
and
sub
xchg
mov
lock
call
xor
pop
jns
mov
inc
jg
hlt
mov
popf
repnz
xlat
clc
add
and
push
out
cli
mov
sub
pop
shll
lret
pop
lahf
movsb
mov
fisttps
and
jg
sti
incb
dec
pusha
out
pop
icebp
mov
mov
jae
dec
das
aad
push
int3
fildl
out
dec
mov
add
arpl
push
push
stos
pop
push
push
sbb
push
add
xor
cli
lcall
iret
icebp
dec
push
shll
push
pushf
imul
mov
adc
imul
shrl
rol
sti
jo
icebp
addl
mov
xchg
in
push
pop
push
mov
mov
adc
sbb
popa
das
jns
ds
dec
ss
aaa
loope
cmp
fwait
or
jns
inc
arpl
xchg
xor
leave
cmp
fcmovb
jmp
std
fs
inc
std
js
test
dec
loope
jae
jo
inc
add
inc
jne
push
cmpsb
xchg
add
dec
mov
aad
jns
out
fbstp
jne
test
aaa
mov
cli
jo
mov
add
mov
pop
xchg
mov
sbbb
mov
mov
cld
in
outsl
mov
or
loop
insb
sub
and
lret
xor
push
pop
in
mov
ret
int
pushf
push
dec
add
jge
je
sub
loop
lock
jge
test
or
loopne
jl
hlt
jecxz
inc
aaa
mov
pop
out
sbbl
add
inc
pushl
push
andb
cmp
bound
jo
mov
mov
mov
lret
pop
xchg
inc
cmp
lret
std
fdivl
jae
in
sti
mov
dec
aas
addr16
lea
mov
fwait
movsl
sub
xchg
int3
out
pushf
imul
lahf
sbb
in
adc
inc
aas
dec
je
or
jle
dec
test
adc
or
test
sub
mov
jne
scas
push
add
jbe
arpl
aam
outsl
mov
sbb
sbb
orb
pop
js
adc
daa
faddp
int3
jno
scas
mov
mov
loop
add
add
lods
inc
pop
faddl
notb
mov
sahf
les
mov
rcrb
daa
rolb
test
jle
mov
loop
sbb
inc
loop
in
sahf
fmuls
cmp
pop
add
fistps
hlt
dec
add
scas
ds
jno
loope
addr16
test
push
cs
cmp
and
nop
add
pop
sbbl
fbstp
mov
rcll
negb
lds
mov
push
push
pop
stos
sbb
pop
scas
shlb
pop
rcl
mov
cmpb
cmc
das
sbb
outsb
sbb
in
add
xor
js
mov
cmc
hlt
dec
xor
roll
sbb
inc
dec
xchg
mov
fstpl
fldt
lods
jle
xor
sti
xor
movsl
dec
dec
test
xchg
shrb
test
mov
repnz
pop
and
rcr
mov
xchg
xchg
mov
aaa
or
dec
push
sub
test
push
dec
fstp
adc
cmc
stos
mov
es
lock
mov
call
jmp
mov
pushf
cmp
mov
push
add
out
lds
cmp
inc
add
pop
movsl
mov
mov
xchg
repnz
gs
and
xchg
jbe
aas
cmp
test
mov
mov
in
cmp
in
mov
lods
push
stc
lods
push
mov
fmulp
enter
icebp
push
dec
sub
lcall
sub
xchg
cmc
pop
insb
test
fisubs
es
lock
mov
push
cmpsb
aas
addl
daa
stos
mov
push
jg
cs
sbb
ss
lock
pop
cmp
push
frstor
or
xchg
and
adc
mov
and
aad
dec
pusha
and
inc
xchg
mov
pop
iret
or
push
icebp
mov
push
stos
xor
or
inc
inc
pop
imul
xor
xchg
and
inc
and
movsb
stc
in
lock
ljmp
ss
jo
loop
test
inc
sbb
js
mov
repnz
inc
popa
fsubr
insb
iret
data16
aaa
mov
pop
or
jo
repnz
sbb
push
repnz
mov
roll
cli
outsb
aas
sub
push
in
or
cltd
gs
inc
es
sbb
xchg
adc
pusha
pop
dec
ds
add
sub
sti
andl
xor
call
pushw
mov
lcall
pop
es
sbb
xchg
inc
out
jb
rorl
inc
xchg
je
and
cmp
mov
std
fisttpl
push
push
jmp
pop
or
pop
mov
pop
mov
push
lock
mov
or
enter
fmuls
mov
data16
lods
adc
pushf
sub
fstpt
fchs
xchg
or
fnstcw
push
out
mov
pop
pop
pop
inc
fistpl
sub
push
loop
and
jbe
rorl
mov
idivb
repz
idivl
add
sub
lea
lret
lcall
xor
out
adc
dec
mov
inc
mov
and
and
cmp
shll
inc
mov
mov
jl
aaa
ret
loop
data16
lahf
lret
and
cltd
inc
test
lea
cmpsb
loopne
pop
sub
mov
stos
out
pop
mov
sar
in
and
push
xor
dec
cmp
jecxz
hlt
rcrl
sbb
inc
mov
inc
daa
dec
jnp
jmp
outsb
bound
imul
movsb
imul
push
and
cmpb
in
inc
mov
inc
subl
push
push
fisubs
jne
orl
xchg
pop
mov
mov
xchg
inc
call
dec
mov
pop
test
movsl
dec
sub
nop
loopne
inc
mov
dec
mov
in
cmp
or
push
push
push
sub
into
jb
pusha
add
fcoml
in
or
cld
add
mov
int3
and
push
ret
jecxz
out
fldl
cld
xchg
jge
push
adc
mov
mov
imul
movntq
out
xor
cmp
or
cmc
pop
pop
ja,pt
mov
ror
icebp
lret
dec
mov
pop
std
push
mov
xor
sarb
cmp
scas
xor
adc
fs
ja
icebp
scas
popa
mov
xchg
imul
mov
sub
das
fdiv
aas
push
stos
hlt
mov
jge
lret
sub
aad
mov
dec
out
dec
push
lea
pop
xor
and
inc
push
repz
in
xchg
stos
sti
sbb
pusha
pop
adc
out
mov
cmc
adc
pop
sub
push
or
pop
arpl
lock
mov
add
push
cmp
cltd
mov
ljmp
inc
cmp
lds
fsubrp
jge
pop
sbb
mov
or
loop
cltd
in
and
loope
decb
stos
jne
xchg
frstor
mov
inc
ja
dec
in
daa
in
xchg
shlb
dec
push
xor
mov
adc
add
and
lods
sub
inc
cmp
dec
inc
mov
ja
jns
lret
sub
mov
push
jecxz
add
ficoms
mov
and
pop
std
xchg
and
sbb
inc
sub
or
sub
pop
icebp
xchg
fcmovbe
push
inc
out
std
insl
xorl
pop
addps
mov
jne
rolb
or
push
cmpsb
loope
sbb
jmp
jo
mov
int3
loope
and
je
bound
dec
mov
pop
xor
rorl
into
lds
adc
enter
insb
daa
rcrb
lahf
ja
push
mov
pusha
out
fstpt
adc
mov
adc
bound
sbb
cmpsl
add
pop
hlt
sbb
lret
lods
adc
or
popa
hlt
sbb
sti
push
and
cmp
sub
stc
and
fcoml
js
mov
pop
cmp
out
pop
negb
lcall
push
adc
pop
xchg
movsl
cmp
in
ds
outsb
rcrb
jne
test
movsb
jecxz
inc
push
ja
lcall
aam
in
subl
xorb
sub
iret
mov
push
cltd
mov
mov
inc
arpl
in
mov
les
xchg
xor
leave
or
stos
pop
xchg
sbb
gs
cmp
mov
add
pop
mov
mov
popa
lds
xchg
in
insb
test
cmc
divl
jmp
stc
xchg
scas
inc
cmp
push
sbb
mov
xor
or
leave
cmpsl
dec
dec
sbb
fsts
inc
addr16
es
sahf
xor
repz
or
jae
gs
push
push
lret
int
hlt
jge
sarb
and
push
fwait
push
aad
xchg
cmp
and
into
fnsave
bound
in
and
test
push
adc
sub
mov
jb
jne
gs
lods
mov
jno
test
mov
pop
xor
xor
sbbb
mov
ljmp
adc
imul
mov
mov
jmp
mov
xor
incl
lcall
dec
dec
adc
or
cmc
xchg
or
punpckldq
jg
xor
loop
mov
mov
mov
mov
cmp
imul
and
xchg
or
mov
mov
shrl
sti
dec
in
fwait
xchg
lret
fmuls
mov
dec
addr16
clc
outsl
arpl
cwtl
adc
sbb
push
mov
dec
add
and
push
jne
cwtl
lcall
nop
out
lret
es
mov
rorl
mov
push
xchg
or
inc
fmuls
push
adc
jbe
inc
jge
fs
dec
stc
loop
gs
push
pop
into
jg
clc
je
repz
clc
popf
inc
orb
les
lods
test
test
imull
ret
pop
jmp
push
enter
std
repnz
fs
or
xchg
hlt
push
sbb
inc
sahf
add
push
adc
out
push
mov
mov
int3
out
dec
je
xor
xchg
sub
ljmp
pop
popa
add
les
xor
ret
xchg
ja
jecxz
mov
ss
lret
adc
daa
dec
cmp
pop
sub
std
or
popf
cmp
push
adc
push
imul
xchg
xchg
in
arpl
int3
scas
sar
xor
movsb
mov
inc
stos
mov
dec
mov
out
pop
xchg
dec
add
push
and
insb
dec
ss
xchg
cmovl
jmp
dec
cwtl
idivb
push
jno
jp
insl
jno
cmp
mov
scas
aas
cmc
sub
xchg
and
test
outsb
lds
adc
leave
adc
fs
fcompl
iret
lret
pop
add
sti
fs
fdiv
lret
lock
cmp
push
adc
int3
adc
add
mov
fmuls
and
mov
shl
jle
cmp
pop
and
stos
cmc
dec
std
pop
pop
shll
xor
repz
shr
rclb
lret
push
in
in
arpl
mov
roll
push
sbb
inc
add
fidivl
leave
jnp
xchg
jb
cmp
bound
and
lock
pop
sbb
idiv
pop
cwtl
jo
ret
add
sub
mov
add
insb
into
daa
icebp
test
out
pop
sbb
call
pop
jne
cmp
sub
mov
adcb
pop
je
stos
and
cmp
mov
insl
pop
cltd
and
pop
stc
rcl
pop
or
push
lcall
push
sub
addb
jne
xor
dec
dec
sbb
xchg
imul
mov
xor
divb
sub
nop
or
xor
or
mov
je
cld
pop
mov
pop
scas
xchg
push
sub
jne
int3
cmp
xor
cltd
idivl
adc
jne
fs
mov
dec
outsl
lock
add
jo
pop
data16
aam
inc
fisubs
inc
dec
mov
dec
fmull
push
mov
cmovno
ret
movsb
adc
jl
int3
add
lods
cmp
dec
pop
push
clc
cli
jbe
rcll
rcrl
jns
xchg
sbb
jns
pop
out
sbb
xchg
sub
movsl
mov
clc
pop
add
cmpsl
sub
cld
lcall
fstps
jne
cmp
adc
cltd
cs
jge
and
scas
lret
call
sub
push
test
jae
movsl
test
or
add
ja
nop
iret
lret
or
fprem
cmpsb
mov
aaa
and
add
adc
xor
aas
outsl
inc
inc
scas
ret
pop
inc
aad
xor
pop
jp
cmp
xor
call
adc
js
push
in
dec
mov
xlat
imul
sub
inc
and
mov
pop
out
fimuls
or
mov
sbb
addr16
and
lcall
fcomip
test
sub
add
dec
ja
pusha
pop
sbb
fstpt
sbb
xchg
xor
xchg
or
cmp
push
scas
adc
sub
mov
xor
dec
cld
and
mov
cmp
xchg
daa
xchg
sub
mov
fsubrl
mov
mov
aaa
ljmp
repz
adc
and
jae
cmp
shrl
inc
mov
or
push
mov
and
ja
insl
jbe
lds
xchg
mov
xchg
xchg
repz
lret
push
outsl
gs
cmpsb
fistpl
lods
lcall
in
insb
mov
inc
inc
xlat
xchg
push
aam
sahf
shll
push
adc
xor
mov
test
sbb
mov
jge
mov
jbe
push
hlt
cli
mov
pop
arpl
xor
cmp
push
loop
push
xchg
pop
rcrb
ret
adc
addb
cs
add
loopne
aam
xor
fs
push
out
int3
pop
push
mov
out
push
add
xor
cld
dec
and
call
mov
pop
sti
flds
jle
cmp
out
testb
xchg
xchg
lea
cld
push
adc
outsl
cld
cmpsl
dec
lret
adc
add
jne
clc
sub
orl
mov
xorl
leave
jae
push
repnz
sbb
jp
jle
stos
sub
xor
push
xchg
push
pop
cltd
push
xchg
or
jge
inc
daa
mov
push
jno
pop
push
movsl
mov
pop
dec
xlat
gs
icebp
mov
add
in
insl
inc
dec
add
cmc
fsts
dec
add
imul
aaa
jno
or
decb
icebp
xchg
mov
icebp
jmp
cltd
cltd
in
test
xchg
pop
jge
mov
jae
dec
stos
adc
shrb
rclb
aaa
xchg
sub
sbb
test
pusha
out
mov
push
pop
jbe
mov
je
mov
xchg
lock
icebp
inc
mov
jnp
cmpsl
loopne
and
imul
mov
adc
push
and
xchg
and
aaa
pusha
xchg
in
jecxz
and
movntq
lahf
pop
loopne
jmp
or
adc
jge
repz
dec
adc
outsl
into
clc
sub
stos
mov
stos
push
mov
sub
xchg
cmp
add
cmp
xchg
sbb
lret
stos
dec
sti
loopne
xchg
imul
dec
mov
sub
pop
adc
les
add
cmp
and
jnp
femms
inc
xchg
mov
loopne
repz
into
inc
cmp
mov
sub
lret
mov
in
jle
pop
fstpt
and
mov
andl
fidivrs
inc
fadds
sub
sbb
scas
pop
xor
arpl
addr16
movsb
jp
jle
addr16
in
int3
sub
mov
cmpsl
mov
mov
in
test
inc
and
mov
shll
ljmp
inc
in
xor
add
adc
mov
fldt
rolb
add
xchg
jne
pop
inc
cmp
and
pusha
mov
imul
rol
rcl
jl
aam
cmpb
aam
fs
iret
add
stos
mov
mov
sbb
orl
movsl
jmp
xorl
std
fs
lea
fistps
in
cli
outsb
les
lods
pop
testb
xor
jb
mov
or
cld
pop
dec
adc
lret
mov
js
test
pop
rclb
into
mov
xchg
jg
popa
pop
pop
aam
xchg
aam
cmp
cmp
stc
push
adc
jne
dec
inc
pop
or
push
frstor
pusha
cmp
repz
mov
xor
testl
mov
adc
xor
xor
out
shrb
ret
mov
rcrl
hlt
jnp
loop
push
jae
pop
jmp
adc
adc
and
pop
lods
and
loope
lods
clc
fstpt
add
outsb
aaa
xor
stc
xchg
pop
outsb
test
jl
into
mov
lret
hlt
cmpsb
movsl
cmp
sti
mov
inc
subb
lock
mov
les
mov
jle
fistps
loopne
aad
mov
loope
jge
and
addr16
mov
pop
jns
scas
and
loop
es
loope
dec
ret
jno
out
addb
cltd
mov
dec
in
dec
shll
fdivp
push
jne,pt
das
mov
leave
inc
mov
push
shr
les
in
cmc
cltd
notl
pop
orl
push
add
lods
ficoml
push
lods
dec
dec
pop
outsl
andb
jge
inc
out
mov
sub
lea
cmp
in
adc
mov
cli
adc
cmpsl
daa
jbe
pop
pop
int
and
push
pusha
add
pop
sub
sbb
mov
mov
adc
imul
dec
mov
test
dec
out
mov
out
into
les
jge
aas
push
pop
jle
scas
dec
add
and
sahf
pop
xchg
shll
sbb
imul
out
iret
insl
movl
xchg
cmpsb
mov
dec
in
test
jb
cmpsl
test
jg
add
adc
inc
add
out
ljmp
pop
cmp
repz
arpl
push
mov
rorl
add
mov
pop
mov
add
bound
outsb
dec
add
push
and
push
arpl
out
push
push
sbb
jbe
inc
and
cmpsb
and
sbb
test
clc
adc
pop
xchg
mov
cmc
cli
sahf
and
std
loop
outsb
xchg
ret
repnz
xchg
pusha
jg
jne
jbe
sub
loop
mov
dec
arpl
flds
add
sbb
or
mov
loopne
xor
js
rorb
adcl
aas
rorl
nop
add
daa
ret
jle
in
dec
push
iret
int
ret
xchg
inc
push
dec
pop
into
add
inc
pop
xchg
jae
add
inc
lea
sub
fnclex
add
and
dec
jg
rcl
or
xchg
pop
dec
jne
jno
leave
jp
sub
popa
fcomps
outsl
push
inc
jl
dec
adc
out
out
sti
lea
or
add
stos
add
xor
repnz
sub
fstps
dec
sub
bound
pusha
in
nop
mov
sub
pop
stos
jne
lds
cltd
push
and
rcrl
jl
nop
jnp
das
repnz
push
xchg
mov
inc
insl
sahf
sub
fdivr
lret
sub
int
dec
xor
stos
das
xor
add
jle
dec
mov
sub
adc
mov
out
js
add
fnsave
ljmp
imul
loop
jmp
xor
mov
and
inc
jg
dec
mov
xchg
mov
push
xchg
sub
ds
es
jae
xor
test
lcall
mov
xor
mov
push
xor
pop
pusha
imul
sti
mov
in
aas
push
xchg
arpl
in
loopne
rorl
shlb
dec
out
std
out
mov
movsb
xchg
loope
bound
cmp
mov
ss
sub
add
outsl
std
dec
inc
cmp
jmp
outsb
and
mov
lret
dec
out
or
aas
jg
testl
push
mov
jo
mov
leave
jne
xor
xchg
aad
or
int
imul
repz
xchg
push
lds
push
push
and
aam
jne
sbb
push
mov
lcall
cmpsl
push
mov
test
mov
sarb
out
push
lock
mov
out
push
sarl
movsb
out
push
jne
lods
ljmp
hlt
mov
and
inc
out
data16
lret
xlat
imul
orb
mov
push
mov
xor
push
mov
stc
shl
jbe
cli
movsl
bound
jl
sub
ret
mov
push
push
inc
mov
lret
mov
pop
and
lds
jp
pushl
mov
or
pop
aaa
std
in
jns
inc
cmp
adc
sahf
addl
call
les
sbb
adc
and
into
push
inc
dec
ds
shrl
movsb
insl
xchg
js
mov
mov
pop
mov
pushf
std
xchg
add
jmp
pop
mov
repz
ret
insl
sub
dec
lods
mov
arpl
stos
sbb
jae
or
pop
mov
add
data16
cmp
xchg
popf
jl
and
je
cmp
ds
popa
mov
scas
out
or
inc
scas
loope
adc
pop
cmpl
sbb
shll
xchg
pop
aam
xor
pop
jmp
fwait
cmpsl
insb
mov
bnd
fwait
ja
mov
xor
push
fidivs
jp
inc
push
xor
arpl
aad
hlt
sahf
es
shlb
push
and
adc
movsl
dec
imul
jns
push
test
adc
bound
cmp
xor
ret
mov
shl
cmpsl
mov
and
outsl
mov
mov
jl
or
call
mov
xchg
push
or
xchg
bound
and
xor
data16
sarl
cmpsb
ja
push
mov
popa
adc
or
xchg
imulb
inc
cmpsl
xchg
into
inc
mov
push
cmp
dec
das
fdivrl
mov
inc
pusha
cld
add
insl
mov
movsl
and
push
or
cwtl
push
push
xchg
cmp
push
lret
scas
sbb
cs
push
sub
xor
call
dec
and
aam
out
xor
cwtl
pop
mov
iret
bnd
shrl
push
sarl
lods
sub
fsubrp
mov
clc
loop
adc
mov
mov
xchg
lds
int
xor
xchg
add
sbb
pcmpgtd
push
filds
cli
mov
jno
lds
and
add
lahf
fidivrs
add
xchg
jecxz
lahf
add
icebp
mov
dec
out
pop
push
mov
rcrb
aam
push
stos
or
iret
in
adc
bound
mov
lock
inc
mov
ret
cmp
leave
dec
lcall
in
clc
daa
and
jg
orl
cli
xchg
stos
popf
mov
stos
push
dec
aaa
cmc
sbb
inc
jp
xchg
dec
xor
leave
jge
ljmp
daa
inc
mov
idivb
or
scas
cmpsb
gs
add
push
in
int3
xchg
sub
addr16
xchg
add
js
lahf
mov
rorb
cmp
pusha
mov
pop
lea
adc
test
addr16
enter
mov
or
pop
jno
mov
fbstp
cli
sub
fstpt
push
xor
outsl
dec
jbe
jae
sbb
xor
nop
out
gs
lock
sub
sbb
jge
jmp
ja
push
mov
push
pmulhuw
xor
jne
push
inc
mov
xor
dec
sbb
sub
mov
imul
adc
jno
and
into
push
dec
aas
push
sub
movsl
movb
ds
inc
sbb
mov
adc
jne
cmp
enter
sub
popa
cmp
cli
in
mov
in
fmull
dec
cmp
pusha
adc
iret
mov
ss
push
mov
add
sbb
mov
xor
outsl
push
pusha
mov
divb
xchg
mov
js
stos
push
inc
sbb
lcall
and
and
jg
pushw
pop
les
jbe
cmpl
mov
daa
mov
push
lock
scas
push
stc
dec
push
jg
in
and
loope
or
dec
xor
mov
dec
ljmp
add
inc
and
xchg
sub
rolb
push
mov
jmp
iret
pop
and
adc
outsb
fnstcw
jp
stos
push
cmp
sbb
sbb
xchg
jns
ljmp
push
je
adc
mov
mov
mov
pop
adc
jge
outsb
jae
cld
repnz
xor
sbb
sbb
mov
insb
jmp
push
shr
cmp
and
push
xor
cld
mov
or
loope
fistpll
stos
stc
sbb
loop
mov
sahf
int
mov
push
addr16
cmpsb
aas
mul
jle
lret
xchg
push
push
ret
mov
test
pop
aam
jmp
and
cwtl
lods
sti
mov
sub
insb
int
shrb
inc
ret
out
push
or
dec
mov
mov
daa
and
dec
xchg
orl
dec
ja
jge
xor
aad
in
mov
mov
les
mov
cmp
lcall
adc
andb
fs
sub
pop
mov
mov
sti
enter
or
enter
shll
inc
iret
add
stos
mov
dec
and
stos
push
dec
mov
mov
shrb
push
sub
int
push
icebp
mov
aas
div
adc
arpl
push
and
xor
or
mov
insl
dec
jl
cmp
sbb
cmp
xor
stc
jae
lods
xchg
jo
das
jnp
js
add
mov
pushw
inc
mov
outsb
cld
sbb
mov
stc
orl
mov
ljmp
add
inc
sub
mov
loopne
loop
mov
loop
popa
pop
dec
and
cmc
cwtl
fisubrs
insb
cmp
pushf
sub
movsb
xor
lock
jns
lahf
cli
adc
int
negl
inc
scas
std
cmpsb
xor
and
repz
dec
adc
mov
lock
or
loope
stos
xor
call
icebp
es
cmc
pop
lcall
loop
add
mov
mov
jle
or
jnp
pushf
loop
or
add
hlt
adc
fimull
cmc
sbb
iret
lcall
stc
sub
and
mov
inc
mov
push
sti
inc
xor
pop
xor
data16
jbe
pop
inc
push
push
fidivl
xchg
movsb
sub
std
fwait
and
rcl
mov
mov
cmpsb
push
cmp
or
subb
addb
adc
push
lods
movsb
subl
fistpl
or
imul
adc
jne
pop
shrb
fsubrp
jge
jne
push
rcll
incl
fnstenv
sub
jno
mov
mov
fs
out
pusha
or
adcb
lea
rcr
xor
dec
jno
cli
mov
mov
push
mov
push
xchg
data16
xor
stos
pop
dec
or
daa
push
mov
cmpsb
mov
xorl
or
ljmp
movsl
pop
mov
fsubs
or
addr16
xor
gs
or
inc
enter
sub
jno
aaa
sub
mov
call
jne
repz
fcmovnu
test
add
lahf
incb
stc
xchg
jge
sub
push
pusha
call
call
adc
data16
je
mov
xchg
xor
add
xor
or
cmc
ss
mov
mov
jge
inc
lods
sarb
aad
xchg
je
push
push
insb
lahf
jbe,pn
push
and
push
scas
out
ss
sti
push
aam
rol
and
sbb
xlat
or
test
cmpsl
call
rolb
mov
lods
sbb
sarb
inc
push
push
or
pushf
mov
sub
mov
arpl
rolb
jp
or
sbb
push
mov
inc
fstps
cmp
sub
dec
cmp
pop
adc
imul
enter
add
pop
sbb
mov
mov
push
adc
xor
xchg
pushf
add
das
pop
xchg
push
nop
xor
and
jb
jle
adc
xor
pop
pop
arpl
cmp
test
and
mov
or
sub
add
in
nop
movb
aaa
inc
add
fstpl
outsl
rclb
cmp
shlb
add
dec
addr16
clc
out
iret
movsb
inc
lds
adc
popf
idiv
fiaddl
mov
ficompl
add
jae
xor
cmp
loopne
jp
xor
mov
mov
insb
iret
fimull
push
imul
mov
jo
mov
lods
lods
rorb
mov
shl
imul
iret
inc
sarl
pop
cli
xchg
mov
adc
inc
aaa
mov
pop
jns
movsl
cmp
les
xor
call
and
push
testb
add
xor
mov
or
daa
cmpsb
arpl
cltd
mov
and
flds
xor
or
in
mov
pushf
xlat
jge
test
fstpt
dec
add
and
out
leave
cltd
cld
jge
xor
jb
sti
mov
mov
mov
cwtl
stos
gs
jne
pop
mov
mov
sub
inc
mov
lea
mov
jmp
push
mov
mov
sub
xor
in
popl
xchg
or
pop
mov
fisubl
xchg
push
mov
jo
pop
dec
in
outsl
loope
fsubrl
arpl
addr16
push
and
dec
jle
mov
xor
fldenv
sub
je
daa
or
cltd
dec
lcall
xchg
pop
dec
cmp
out
fcoml
and
push
js
pop
sbbl
mov
inc
sbb
jbe
mov
incl
iret
mov
out
xchg
and
and
push
int
inc
hlt
movsb
shll
cmp
add
insb
push
fimuls
pushf
into
leave
jp
out
dec
leave
aad
add
stos
sub
and
out
aaa
xchg
inc
mov
sbb
das
nop
mov
hlt
pop
stc
dec
fs
stos
out
add
jmp
stos
in
movsl
fimull
add
outsb
mov
jp
data16
aad
movsb
insl
sbb
or
mov
stos
mov
push
dec
adc
sar
pop
jecxz
es
and
push
xchg
pusha
cmp
pop
push
pop
icebp
cmp
cmpsb
or
insl
mov
ds
or
fdivrs
cli
clc
sbb
xchg
dec
fsubl
pop
mov
inc
aam
ja
data16
add
in
cvtps2pi
jb
mov
pushf
ja
loopne
sarb
dec
outsl
or
out
rol
cmp
cld
jle
jne
movb
popf
pop
das
mov
pop
subb
adc
add
push
adc
cwtl
cmc
test
lea
adc
mov
rclb
jp
push
mov
xchg
leave
and
adc
incb
jp
outsb
pop
jo
cmp
add
mov
aas
lods
rol
pop
sahf
scas
mov
scas
dec
leave
jecxz
mov
mov
cld
cli
sub
ret
push
les
in
enter
jge
jp
daa
adc
mov
sarl
into
subl
inc
call
dec
inc
mov
push
push
add
dec
int3
cmpsl
mov
xor
adc
push
inc
loope
inc
cld
shlb
cmc
cmp
ret
inc
pop
pop
sub
push
sti
mov
jg
in
pop
mulb
cmpsl
mov
jae
add
mov
pop
cmp
test
sub
pop
mov
dec
inc
xor
jnp
push
xor
inc
mov
mov
mov
lock
ror
push
mov
mov
inc
enter
sub
cmpsb
cmp
xchg
loopne
xchg
mov
push
add
mov
mov
imul
add
add
jg
loopne
leave
leave
clc
lret
pop
and
jle
xchg
or
mov
icebp
fldl
call
cld
adc
out
into
pop
lret
shrl
xchg
push
sbb
mov
mov
inc
or
adc
arpl
add
movsb
in
and
jmp
jo
mov
testl
enter
hlt
pop
cltd
dec
sahf
imul
loopne
adc
fidivs
and
and
pop
mov
jnp
test
sbb
push
aad
sub
test
out
jmp
icebp
lods
lret
push
jmp
push
stc
cli
sbb
dec
jl
out
push
sbb
pop
mul
hlt
lock
inc
xchg
fwait
sbb
daa
scas
hlt
pushf
inc
clc
xchg
dec
cmp
arpl
sahf
mul
adc
mov
repnz
push
cs
push
pop
push
push
popa
lods
sub
xchg
fwait
jnp
push
addr16
mov
les
push
mov
mov
outsb
insl
out
arpl
lahf
ja
gs
int3
jb
mov
popf
insb
sub
pop
pop
nop
out
jg
lods
dec
test
or
rclb
clc
loop
ret
daa
les
mov
in
repnz
jae
mov
or
xchg
jmp
mov
cmp
inc
int
xor
and
ret
sbb
mov
push
clc
dec
add
add
jecxz
lock
adc
pop
aas
lods
js
cs
clc
aad
and
jle
cmp
mov
jmp
movsl
jns
jae
mov
push
loope,pt
mov
mov
cmp
sti
mov
mov
pop
cmp
mov
sahf
or
sub
inc
or
clc
and
das
scas
insl
cltd
aas
or
push
loop
aas
inc
movsl
pop
ret
sub
shrl
ret
dec
jno
jno
mov
aas
mov
std
jl
repz
imul
mov
xchg
dec
cmpsb
ja
icebp
daa
or
adc
cld
test
dec
ret
arpl
or
push
daa
std
stc
sub
xchg
pop
xor
fnsave
sub
jl
jnp
and
xchg
std
mov
xor
dec
ret
sbb
and
cmp
in
mov
bound
sub
rcll
insl
cmc
frstor
push
xor
es
scas
dec
insb
mov
les
xchg
or
mov
add
ret
add
and
mov
sbb
mov
xchg
add
sbb
popa
inc
push
bnd
into
icebp
push
test
decl
cmpl
add
out
pop
imul
pop
mov
xchg
ss
hlt
ja
or
jl
add
and
aaa
nop
jnp
add
ret
movsl
inc
jbe
scas
add
jae
out
jp
outsb
jne
inc
lret
popa
rorl
xor
pop
aam
je
sub
xlat
popf
dec
gs
scas
inc
aaa
rcrl
shll
mov
std
sahf
push
movsb
daa
in
sar
sub
dec
mov
inc
xchg
scas
pop
add
repz
nop
out
mov
rcrl
call
clc
jle
repz
or
ret
in
xchg
mov
jb
pop
aaa
fsubs
iret
inc
jnp
int3
sti
xor
mov
gs
test
in
clc
mov
push
lock
mov
repz
xchg
or
data16
xor
mov
pop
pop
and
xchg
das
push
enter
aas
out
lcall
sbb
sub
sti
stos
aad
fimull
jnp
aad
imul
subb
fldt
adc
std
mov
push
add
xor
sbb
mov
mov
push
xorl
js
xor
mov
call
sub
jmp
pushf
jp
xor
negb
fcomip
push
sub
leave
xchg
insl
xlat
insl
jns
sbb
mov
xchg
add
ds
xchg
push
jo
cltd
adc
jmp
cmp
jge
movsb
lret
enter
jo
orb
mov
iret
inc
or
addr16
loopne
cmp
jp
lcall
mov
add
mov
mov
pop
imul
fst
inc
aaa
xchg
xchg
or
fsubrl
or
sbb
xchg
testb
jb
pop
xor
int
loope
adc
pop
inc
mov
xor
jmp
adc
push
add
pop
bound
adc
lds
loope
jae
lods
xchg
fcmovu
sbb
xor
xor
shrb
and
ret
dec
adc
sub
xor
inc
sub
lahf
pop
gs
jno
loope
icebp
std
ja
hlt
inc
leave
add
pandn
mov
fs
fwait
push
scas
inc
sub
cmp
loope
cmp
add
mov
adc
mov
xchg
fistps
rcll
call
adc
or
mov
outsl
cltd
pushl
jo
xor
sub
or
sbbb
sbb
push
sbb
xchg
test
mov
dec
xorl
push
rcr
add
ss
pop
pop
rolb
push
notl
jl
out
push
cmp
inc
sti
in
lods
cmpl
hlt
pop
pop
pop
out
mov
lcall
imul
sbb
sbb
mov
cmp
pop
xlat
lahf
je
movl
cmp
dec
data16
sahf
stc
add
sub
fcoml
daa
insl
xchg
imul
xchg
sahf
xchg
aad
pusha
pop
push
iret
bound
insb
add
sub
sub
fisubs
mov
out
inc
xchg
pop
shr
mov
aaa
mov
shlb
arpl
pop
adc
adc
hlt
pop
clc
fisubrl
sbb
push
inc
in
call
test
out
cltd
mov
cmp
xor
adc
push
add
loop
lret
add
decb
pop
jns
sub
dec
fs
push
aad
cmp
cld
sub
es
pop
fisubs
dec
sub
mov
hlt
and
or
cmp
test
mov
aad
pop
pop
rolb
clc
out
hlt
add
mov
mov
push
dec
and
fisttpll
sub
pop
insl
movsl
xor
xor
fdivrs
pop
dec
xor
lea
inc
xchg
jbe
les
stc
call
and
jne
ljmp
add
pop
mov
andl
arpl
pop
addr16
cwtl
sbb
lock
push
mov
cltd
stos
or
fcmovnu
fdivs
sbb
xor
stc
and
pop
sbb
ja
cmpsl
mov
jo
adc
stos
mov
mov
dec
sub
fs
daa
imulb
es
and
lret
rcll
push
inc
push
xor
cmpsb
xor
aam
mov
scas
sarl
jl
pop
add
out
cmp
outsb
sti
stos
xchg
pop
stos
push
adc
enter
mov
jns
lods
pop
mov
dec
cltd
aam
mov
mov
hlt
les
cmc
or
inc
leave
loope
and
pop
shrb
sti
mov
mov
xchg
cs
sub
addb
jmp
dec
imul
mov
pop
faddl
test
adc
sub
push
pop
idivb
xlat
sbb
mov
sbb
jae
lds
xchg
jns
scas
lea
outsl
sti
sbb
les
in
push
xlat
mov
sub
pop
test
cmpsb
push
adc
jae
nop
add
ret
push
cs
xor
mov
mov
pop
sbb
xor
and
insl
out
mov
dec
pop
mov
dec
rcl
or
es
arpl
dec
sub
sub
sbb
inc
les
jl
push
outsb
sub
das
pop
loope
sbb
sbb
aam
lods
push
imul
fcomp
jo
dec
popf
in
jge
add
rcr
and
lds
mov
out
pop
scas
push
mov
arpl
inc
adc
pop
cmc
pop
enter
imul
and
fwait
add
inc
dec
movsl
cmp
rcll
hlt
inc
jns
and
popf
inc
cli
ret
test
je
adc
and
js,pn
sub
call
cmpl
pop
mov
pop
dec
push
mov
xchg
mov
imul
pop
xchg
mov
jo
mov
push
shll
repnz
sbb
adc
ss
mov
ficompl
rorl
sbbb
sbb
cmp
lods
ss
lock
adc
movsb
adc
jp
loope
push
repz
mov
push
je
lret
repnz
jmp
cmp
xchg
add
andl
add
mov
pop
iret
shrb
jl
and
fnstenv
int
jl
cli
jl
or
aad
dec
movsb
cli
mov
idiv
mov
outsb
adc
add
push
add
jmp
fists
jmp
push
and
lock
shr
xchg
stos
int3
jnp
push
mov
jnp
push
xlat
dec
pushf
pop
jp
rorl
or
xchg
add
sub
ss
xchg
loopne
dec
fs
stc
or
xor
xchg
sub
test
jns
inc
cmp
andb
insb
add
rcll
iret
jle
cwtl
in
adc
cmp
xor
add
push
jno
xlat
sbb
out
push
cs
mov
sbb
and
xchg
das
stc
mov
les
in
rcr
stos
sti
imul
jmp
jmp
test
aad
pop
sub
ss
lahf
lods
aaa
and
sarb
mov
add
jge
js
lcall
mov
cmp
jo
mov
jge
dec
xchg
imulb
push
pop
jne
shlb
adc
mov
xchg
push
push
popf
adc
mov
xchg
or
push
cli
or
and
notl
movsb
mov
dec
push
pop
or
dec
in
cmc
xchg
stos
sub
fcomps
add
mov
jnp
xchg
movsb
add
push
add
and
repnz
scas
jl
pop
les
in
jno
add
in
sub
sahf
and
insb
mov
ljmp
push
mov
stos
scas
push
rol
cmpsb
fadd
inc
mov
sahf
fidivs
and
dec
test
and
and
faddl
popf
lea
add
mov
fidivrl
inc
ljmp
xor
shr
inc
shlb
cmpsl
lds
pop
xchg
cmp
xor
add
mov
lret
dec
cmc
cld
mov
mov
shll
push
sahf
adc
inc
push
fsubrl
pop
dec
cmc
dec
push
aam
xor
pop
sub
push
mov
sub
cmp
pop
aad
xchg
jmp
aaa
repnz
pushf
rclb
add
loop
rclb
inc
push
sub
jns
movsb
jecxz
in
filds
or
fnstenv
dec
xchg
jp
in
in
mov
ds
adc
mov
daa
rcrl
insb
cli
mull
pop
or
jp
outsl
cld
das
xor
stos
adc
pop
sbb
fwait
ss
jl
xchg
cld
in
in
aam
mov
test
push
mov
testl
sarb
test
call
dec
les
cmpsb
test
test
jg
cmp
hlt
cmpsb
mov
out
inc
push
add
stos
or
out
popf
pop
into
in
loopne
xchg
inc
ja
or
les
daa
mov
mov
xor
xchg
inc
or
out
mov
or
pop
sbb
xlat
add
mov
dec
lret
fimuls
pushf
sarl
sub
xor
imul
push
psubsw
scas
sahf
movsl
iret
aad
js
lock
push
cli
outsl
jecxz
jg
sbb
cs
imul
aad
inc
bound
sbb
mov
les
mov
out
push
fmull
fdivs
pop
mov
in
pop
xor
movsb
sbb
out
dec
adc
lahf
mov
add
cmp
push
arpl
add
cmp
dec
out
pop
push
scas
ja
or
inc
push
mov
jge
jo
add
rcl
push
loop
data16
test
push
fstpt
std
popa
mov
sar
sbb
xor
repnz
loope
mov
push
clc
inc
mov
xchg
rcl
jmp
in
inc
aas
mov
xchg
roll
in
pop
out
mov
mov
jnp
sbb
or
ljmp
ljmp
dec
cwtl
pop
out
pop
mov
jl
jl
test
loopne
scas
repz
cltd
ljmp
lds
sub
roll
jp
push
push
repnz
subb
push
jle
pusha
inc
arpl
adc
and
repz
daa
mov
dec
mov
sbb
sub
scas
scas
add
mov
add
loop
fcomp
mov
mulb
cltd
in
push
and
sub
jo
push
mov
test
repnz
cmp
xor
dec
push
fs
pop
xchg
mov
movsl
popf
or
sbb
std
call
adc
mov
movsl
aad
lds
lock
push
js
mov
mov
out
sbb
andb
xchg
mov
push
pop
inc
mov
push
imul
call
xor
jnp
out
lods
loope
inc
call
int3
cld
push
test
bound
arpl
imul
mov
sub
pop
into
sub
xchg
xor
incl
lock
sar
and
jmp
fildll
pop
mov
into
add
pop
inc
jb
sbb
xchg
lret
push
loopne
jne
lock
push
xor
cmp
xchg
dec
stos
dec
adc
aas
xchg
incb
fnsave
xchg
xchg
fs
sarl
aad
scas
lcall
jnp
jge
adc
cs
out
adc
lock
movsl
push
cmpsl
jmp
loope
stc
and
je
ret
sbb
cmpsl
add
fistl
mov
push
push
inc
xchg
xchg
inc
or
xchg
rcll
test
cmpsb
pop
std
cmp
inc
push
jecxz
addr16
out
stc
dec
stc
loopne
jne
repz
adc
sub
ss
pop
std
and
out
rorl
clc
push
inc
mov
pop
or
nop
pushf
mov
push
scas
outsb
lds
pop
or
mov
mov
lahf
scas
sub
mov
and
cmp
and
mov
xchg
jno
and
in
enter
stos
pop
jnp
gs
inc
xor
pop
test
nop
shlb
jl
arpl
aas
push
es
or
mov
jle
shlb
xchg
not
jle
dec
mov
jecxz
loop
jae
dec
inc
mov
enter
inc
mov
jne
and
repz
sub
popa
ljmp
sub
jns
shl
xor
aaa
pop
rcll
shlb
das
clc
scas
int
push
mov
js
fadd
mov
ror
pop
adc
mov
push
repnz
jmp
mov
stos
jp
test
lods
mov
cs
pop
out
in
mov
lea
mov
loop
rcll
push
dec
in
repz
outsb
push
push
xchg
cmp
push
add
xor
mov
mov
mov
test
fst
mov
aad
lea
cld
jne
fsub
xor
adc
and
xchg
xor
jae
pop
cmpsl
sbb
scas
mov
mov
ret
in
fists
fstpl
sti
scas
cmp
push
cmp
inc
add
mov
in
test
lods
aam
push
jnp
jecxz
push
fidivrs
arpl
add
aaa
inc
and
sbb
and
int3
dec
icebp
xchg
mov
bswap
mov
push
cmpsl
pop
sub
push
mov
in
mov
or
sbb
and
push
call
mov
jge
dec
stos
data16
jns
mov
or
jbe
ret
sbb
ret
xchg
pop
in
pop
stos
mov
cli
rolb
ds
cmp
and
insl
lret
cli
adc
mov
mov
ud0
subl
fldenv
clc
pop
add
pusha
inc
push
loope
cwtl
int
xor
push
in
hlt
loopne
mov
sub
dec
mov
int
mov
ret
and
adc
out
fwait
sahf
inc
imul
cmp
fstpl
stos
ds
push
jns
cmp
in
jae
fucomp
mov
movsb
aaa
add
cmp
popa
lds
add
xlat
ficompl
or
or
and
jns
add
sbb
inc
insb
ljmp
dec
add
push
cwtl
cmpsl
xlat
hlt
push
push
push
or
pop
pop
stos
lods
add
ret
push
clc
roll
cmc
add
sbb
push
cmp
cs
pop
mov
sub
cmp
in
inc
or
or
and
add
lret
mov
and
cs
push
cmpsb
add
cmp
mov
enter
cmp
cs
mov
mov
pop
arpl
inc
dec
sbb
daa
xlat
mov
mov
ja
sub
push
lds
imul
lret
dec
ds
push
lea
inc
push
xchg
call
mov
shll
dec
sub
inc
add
adc
jge
lds
push
insb
adc
pop
scas
jg
loopne
insl
mov
jbe
repnz
lds
jne
out
movlps
lcall
ret
fisubrs
cli
or
daa
test
addr16
dec
out
fsubs
sub
nop
mov
out
xchg
clc
fists
stos
xor
cmp
mov
jle
sub
pop
cli
adc
add
mov
adc
pop
xor
aad
sub
mov
ret
aad
and
stc
loopne
insb
test
arpl
add
pop
push
sbb
daa
mov
and
leave
test
cmp
shl
and
add
stos
sub
mov
jecxz
and
ss
adc
fwait
jl
les
push
jne
adc
xchg
or
or
rcll
enter
or
dec
outsl
lock
lock
fists
lcall
jl
sub
sbb
jge
ljmp
and
test
pusha
pushf
or
imul
mov
and
xchg
bnd
roll
jb
es
imul
sub
xchg
pop
cmpsb
inc
lahf
mov
sti
add
inc
fsubl
xlat
xorl
lods
or
nop
sarl
push
jnp
ljmp
fistl
lds
lea
push
icebp
js
sub
push
and
and
fwait
in
cmp
sbb
ljmp
push
divl
popf
popa
out
push
mov
sub
jno
aas
dec
xor
mov
mov
push
movsl
pop
popf
add
dec
mull
popa
lret
and
ss
xlat
adc
adc
jbe
cmp
or
add
sub
inc
mov
mov
or
xor
mov
out
add
and
pop
pusha
pop
in
repz
jge
jl
dec
pop
aam
dec
out
ss
insl
fimull
dec
imul
mov
mov
dec
or
add
and
mov
cmp
jb
dec
xor
dec
mov
inc
add
mov
inc
sub
inc
add
lea
lea
sub
mov
inc
mov
cmp
jb
lea
xor
dec
lea
movswl
sub
add
add
add
sub
add
inc
add
xor
xor
sub
xor
pop
dec
movzwl
test
jbe
mov
dec
xor
mov
movzbl
lea
or
imul
lea
sub
lea
sub
mov
mov
add
inc
lea
mov
imul
mov
inc
movsbl
and
inc
mov
mov
inc
add
movzbl
sub
add
add
movzbl
dec
and
sub
inc
mov
or
dec
mov
mov
and
mov
movsbl
inc
mov
add
mov
movzbl
mov
mov
xor
dec
jne
inc
mov
lea
sub
lea
mov
dec
add
xor
sub
dec
mov
mov
lea
mov
dec
dec
and
add
mov
mov
or
dec
test
jbe
or
inc
mov
sub
or
mov
inc
inc
mov
movsbl
mov
dec
sub
inc
mov
inc
lea
mov
movzbl
inc
add
add
and
lea
add
mov
mov
inc
movzbl
inc
dec
add
inc
mov
and
lea
jmp
inc
movzbl
sub
and
dec
lea
xor
sub
imul
mov
dec
sub
inc
lea
mov
lea
and
dec
mov
mov
mov
inc
imul
inc
and
imul
pop
ret
push
dec
imul
mov
inc
mov
mov
movzbl
dec
sub
lea
inc
lea
mov
lea
inc
dec
movswl
dec
inc
mov
mov
add
add
inc
lea
movsbl
sub
dec
sub
or
push
inc
dec
push
dec
dec
sub
movzwl
dec
call
call
mov
cmp
je
call
call
inc
imul
call
call
call
inc
lea
lea
sub
xor
lea
or
sub
mov
pop
or
ret
push
add
mov
xor
mov
push
movzbl
mov
add
and
lea
push
add
push
add
push
mov
xor
lea
movsbl
add
call
inc
mov
add
push
mov
or
xor
add
mov
lea
mov
lea
movzbl
mov
lea
sub
test
je
inc
mov
movswl
inc
lea
dec
mov
mov
inc
mov
imul
inc
mov
movswl
imul
mov
jmp
inc
mov
inc
mov
movzbl
sub
movswl
mov
add
mov
mov
add
add
movzbl
dec
add
add
mov
inc
and
xor
or
movzbl
dec
dec
xor
dec
sub
inc
lea
mov
inc
lea
and
dec
inc
imul
movzwl
mov
dec
jne
inc
mov
lea
dec
pop
sub
inc
pop
dec
lea
pop
mov
movzbl
add
lea
inc
inc
movsbl
dec
and
dec
mov
add
ret
push
lea
mov
imul
inc
inc
lea
add
dec
push
push
push
push
inc
mov
and
push
mov
xor
dec
add
add
mov
dec
inc
xor
mov
inc
push
add
and
xor
dec
sub
push
dec
add
push
inc
lea
pushl
dec
call
mov
add
mov
sub
mov
inc
inc
imul
add
pop
ret
or
repnz
dec
lea
add
sub
jmp
inc
inc
lea
inc
add
imul
and
or
inc
and
pop
pop
ret
push
imul
dec
mov
dec
sub
add
inc
imul
add
inc
mov
mov
inc
xor
or
dec
inc
lea
sub
lea
dec
sub
add
dec
add
mov
lea
pop
ret
sub
dec
mov
mov
sub
mov
inc
xor
mov
mov
dec
mov
sub
dec
xor
sub
mov
mov
mov
dec
inc
add
xor
inc
sub
inc
mov
cmp
jb
add
push
mov
or
push
add
sub
push
movzbl
sub
push
inc
and
mov
imul
add
add
imul
add
add
lea
pop
dec
add
xor
lea
lea
xor
sub
sub
xor
xor
inc
push
and
dec
xor
or
mov
mov
inc
mov
lea
dec
movzbl
lea
dec
inc
add
imul
imul
add
inc
imul
movzbl
dec
lea
imul
or
dec
jmp
data16
add
add
data16
add
adc
add
pusha
inc
add
stc
inc
add
pop
add
add
inc
add
add
push
jo
add
mov
add
pop
add
push
mov
inc
pop
mov
inc
push
lea
inc
mov
add
mov
add
add
movswl
movswl
mov
sub
inc
sub
mov
call
lea
mov
lea
dec
dec
dec
xor
xor
dec
lea
add
lea
imul
inc
inc
mov
imul
dec
sub
inc
dec
dec
dec
inc
call
sub
mov
inc
add
call
inc
dec
mov
sub
call
dec
push
sub
dec
inc
inc
call
lea
lea
inc
xor
xor
add
call
inc
pop
dec
add
inc
add
movswl
pop
inc
inc
pop
dec
inc
add
mov
pop
xor
mov
lea
add
mov
mov
lea
dec
pop
mov
imul
pop
xor
dec
mov
mov
mov
call
add
sub
mov
dec
ret
xor
inc
push
dec
inc
push
and
dec
push
mov
imul
push
imul
inc
push
movswl
xor
mov
add
push
mov
ret
push
mov
mov
xor
xor
sub
inc
movswl
add
dec
inc
inc
inc
imul
lea
sub
mov
and
add
inc
lea
jmp
hlt
stos
loop
xchg
jge
sbb
shll
push
out
pop
fmuls
ljmp
lahf
mov
mov
inc
lahf
cmp
shr
test
mov
out
in
loopne
dec
insl
out
jae
jno
jbe
push
xor
in
lcall
mov
in
fstl
mov
rcl
das
mov
and
or
pop
mov
push
add
out
rcll
xor
int3
adc
dec
dec
movsb
test
in
cmp
or
sbb
push
aas
adc
scas
aas
and
pushf
mov
aad
loop
js
xor
xor
and
sti
sbb
or
jb
add
add
xchg
push
mov
mov
add
jnp
add
mov
xor
lds
dec
outsb
bound
mov
sbb
pop
push
test
stc
nop
cmp
scas
add
in
cld
ja
imul
sbb
mov
mov
testl
jns
aaa
stos
mov
add
lret
pushl
mov
aad
in
push
in
inc
adc
stos
add
ds
in
movsb
imul
push
sar
push
add
jne
xchg
dec
ss
pop
sub
inc
lock
les
lea
shll
jmp
sbb
out
popf
call
sbb
lds
sti
sbb
scas
mov
sub
outsb
arpl
test
scas
in
cmp
pop
mov
or
jb
lock
test
mov
std
outsb
push
inc
adc
sbb
in
inc
sarb
in
cmp
lahf
repz
dec
adc
stc
mov
mov
pop
sbb
sub
fdivrl
ficoms
push
clc
or
jl
ret
loopne
jae
sbb
fisubl
jg
stos
outsl
das
pusha
mov
aad
add
mov
fdivs
enter
dec
cmpsb
sbb
sub
cmp
flds
addr16
adcl
cmp
sbb
lods
addr16
mov
mov
pop
or
sbb
jno
mov
jae
jl
push
xor
iret
ljmp
ja
jns
out
xchg
cmp
pop
into
stos
sbb
xchg
jecxz
push
pop
mov
cmp
and
rolb
fwait
in
push
fsubl
imul
adcb
push
xor
out
fidivl
jg
adc
gs
lds
popa
and
jp
loop
jo
sub
sub
test
xchg
or
jbe
add
in
and
fbld
ret
outsl
xor
inc
rclb
adc
mov
xchg
mov
mov
out
sahf
mov
loopne
shl
rorl
pop
ljmp
xor
pop
repnz
pushf
cld
xchg
out
push
mov
jae
add
push
mov
push
std
inc
popa
push
jmp
jo
or
shl
jne
out
adc
add
imul
or
fwait
sbb
out
out
lods
jno
or
jae
divl
ret
sub
mov
jmp
sbb
sub
sub
jnp
movsl
push
sub
dec
lods
rcr
pop
or
cwtl
inc
pop
push
mov
leave
nop
dec
or
sub
xchg
out
mov
xor
jmp
add
lds
loop
int
mov
mov
push
mov
mov
fldcw
loope
into
stos
push
fwait
lea
ss
mov
fs
shll
xchg
jl
xchg
andb
imul
js
js
imul
jl
pusha
inc
aam
stos
cmc
lret
push
imul
test
loopne
jb
data16
lods
push
push
fsubrs
aaa
mov
pop
mov
cld
in
test
mov
mov
pop
imul
inc
push
and
sahf
and
inc
jnp
dec
xchg
fs
idivl
cmp
addl
adc
push
jne
nop
addr16
hlt
test
inc
jl
pop
rcrb
clc
mov
lea
loope
and
jae
push
pop
das
mov
aas
scas
mov
mov
cli
shll
in
and
add
add
push
push
push
xchg
xor
dec
nop
imul
into
add
push
mov
les
dec
lds
sbb
push
mov
mov
std
stos
mov
mov
add
sbb
push
push
je
and
int
mov
add
inc
jo
ret
popa
inc
cld
push
cmpsl
and
xchg
faddp
add
ds
sbb
pop
jb
imul
mov
movsl
push
cwtl
test
jg
sbb
mov
fs
xchg
nop
cld
adc
fwait
aad
jae
or
sub
aaa
arpl
mov
pop
mov
ljmp
inc
sbb
sub
xchg
mov
push
jle
mov
insl
and
cmpsl
push
xchg
push
sub
insb
inc
aaa
cld
int3
inc
push
dec
mov
sub
add
mov
sbb
xchg
js
test
cld
neg
mov
mov
ficompl
inc
pop
iret
push
arpl
sub
divb
or
inc
xchg
jecxz
out
jmp
repnz
jl
mov
add
sub
lds
dec
int3
data16
daa
dec
mov
dec
les
dec
dec
sbbl
dec
popa
sti
arpl
jae
ja
mov
mov
in
testb
xorl
or
iret
and
dec
arpl
or
dec
cmpsb
inc
cltd
mov
loopne
sub
je
cmp
cld
fwait
push
sahf
or
bound
js
fldt
sbb
jl
jge
dec
out
dec
add
scas
loopne
pop
sbb
iret
xchg
sub
mov
xorl
jmp
sbb
mov
insb
and
xchg
das
xor
jb
lcall
xchg
mov
das
xchg
loopne
mov
xchg
lahf
pop
mov
xchg
jb
jle
dec
xor
jno
lods
lahf
out
xchg
xor
lods
or
gs
mov
mov
add
insb
cli
inc
or
fsubl
outsl
in
stos
or
pop
push
push
in
aam
cmc
lahf
xchg
test
pop
lret
pop
dec
cld
rorb
nop
invd
push
push
ret
scas
pusha
int
pop
push
or
aad
subl
mov
lcall
push
dec
dec
repnz
fstl
or
sbb
mov
out
mov
in
aaa
mov
in
inc
jb
ljmp
jp
test
cmpsb
fcmovnbe
loope
inc
cwtl
ficoml
dec
sbb
jne
dec
rclb
out
pop
and
icebp
mov
adcl
test
mov
mov
pusha
or
xlat
jp
addr16
into
jmp
add
sub
and
sub
jp
push
push
sub
jb
roll
imul
xlat
aas
fcomps
pop
jae
gs
jns
test
inc
mull
jmp
mov
shr
push
mov
xchg
in
add
dec
xchg
adc
outsb
or
in
push
stc
or
xorb
pop
and
xchg
mov
xor
int3
out
test
pop
jl
jmp
dec
cmp
xchg
dec
lahf
fnstcw
mov
add
divl
lret
mov
dec
aaa
out
bound
add
pop
adc
dec
popa
push
cli
mov
mov
pop
jg
clc
into
shlb
and
push
hlt
je
xchg
sub
mul
negb
aaa
les
lea
ss
sub
rorl
xchg
imul
xchg
int
data16
xchg
shlb
jae
mov
inc
push
bound
adc
shl
sbb
lcall
cmp
and
mov
shll
xchg
xlat
nop
pop
jecxz
stos
lods
mov
adc
mov
nop
pop
xchg
sub
loope
and
dec
pop
rcrl
sub
cmp
scas
pop
mov
push
add
xor
arpl
fmul
add
nop
rolb
mov
decb
xor
in
leave
sbb
ret
inc
dec
loopne
gs
lret
xchg
dec
dec
jns
pop
imul
lret
ret
test
in
add
adc
jbe
fdivs
inc
and
mov
aam
stos
or
cmp
jp
mov
mov
fimull
mov
jne
mov
faddp
and
or
lds
lcall
xor
int
xchg
mov
sub
jns
rorb
out
xor
xor
push
je
push
push
sarb
out
inc
or
mov
inc
test
ficomps
lahf
dec
aaa
push
xchg
xchg
xlat
mov
or
pop
in
sarb
dec
jae
mov
mov
mov
xor
mov
jno
pop
pop
or
sbb
stos
or
push
mov
loop
push
mov
mov
push
inc
mov
out
cwtl
jne
test
pop
mov
cmp
cs
xor
or
clc
pop
inc
adc
inc
rorb
jecxz
pop
insl
js
dec
add
mov
lock
mull
add
mov
cld
gs
lods
or
popa
popf
or
imul
dec
add
push
out
push
push
push
movsl
test
fstpl
cmp
aas
mov
addl
lret
adc
hlt
bound
and
inc
and
test
sbb
popf
mov
hlt
cmp
xchg
lods
mov
add
loop
je
arpl
out
rolb
pusha
data16
adc
mov
sahf
and
add
lods
add
cmp
cld
int
add
dec
pop
mov
xchg
add
cmc
jae
cli
lret
lods
fimull
icebp
push
sub
add
cmp
pop
pushf
lds
xchg
and
out
mov
insb
or
push
movsl
push
and
cmpsb
idivb
aas
adc
xchg
xor
xchg
xchg
popa
xchg
mov
stc
jne
push
mov
test
or
pop
or
es
xor
sbb
scas
push
pop
jmp
arpl
and
fwait
mov
lds
out
in
in
xchg
cmpsl
mov
pop
aad
adc
push
xchg
or
jle
mov
out
mov
adc
pop
gs
dec
mov
cli
out
sahf
in
or
ja
rorl
shll
jecxz
push
sbb
jmp
mov
fdivrl
jle
add
add
and
fwait
push
mov
xor
dec
push
test
xor
pop
ljmp
in
pop
xor
je
adc
mov
jmp
mov
pop
add
ljmp
cmpsl
xchg
xor
fwait
jbe
pushf
jns
in
jns
dec
or
mov
xchg
mov
hlt
je
sbbl
mov
cmpsl
enter
insl
arpl
std
push
lock
inc
jns
rolb
add
int
jo
stc
mov
in
push
test
in
fistpl
sti
inc
andb
xchg
adc
dec
in
sbb
jl
mov
xor
jae
sti
mov
sub
fiadds
add
sub
les
sbb
movsl
test
fistpll
stos
stc
imul
shll
cmc
inc
add
and
cmpsb
jmp
or
sti
movsw
mov
aas
incb
repz
xchg
adc
aas
cmp
cmp
mov
cmc
cmp
xor
jns
fs
xchg
js
test
popf
pop
stos
sbb
fucomip
fcoms
sub
mov
adc
adc
jle
jns
dec
cmp
insb
push
mov
inc
xchg
sbb
sti
xor
ffree
cmp
scas
cmp
arpl
inc
pop
adc
xor
xorb
jp
repz
adc
push
xchg
mov
std
lods
jg
mov
xchg
xchg
dec
rep
das
fs
sub
aas
lahf
sahf
call
sti
ljmp
inc
vmread
mov
xchg
sub
rorl
push
xor
test
imul
dec
daa
je
bswap
dec
cmc
inc
std
sar
xchg
aam
or
daa
sbb
cmp
sub
xchg
cltd
xlat
push
sub
pop
call
ror
in
mov
push
int3
push
in
add
enter
notl
xchg
mov
cmp
mov
imul
das
ja
pop
sbb
mov
pop
mov
scas
and
sahf
fsubr
pop
ss
cmp
fsubr
aad
mov
fiadds
add
stos
gs
clc
sbb
sbb
push
push
inc
bound
dec
popa
inc
adc
mov
adc
in
mov
push
mov
mov
pop
xor
push
mov
bound
adc
test
loopne
xchg
mov
adc
call
imul
cld
push
mov
outsl
xchg
or
ret
jo
cli
push
mov
lret
cltd
mov
inc
xchg
out
test
in
cmp
int3
or
fstpl
cmc
aad
jbe
faddl
aaa
or
sub
jecxz
aam
fildll
ljmp
frstor
dec
test
mov
jle
je
ds
sbb
pop
loope
or
jne
sub
aad
imul
lods
push
push
jmp
pop
xchg
movsw
push
sub
sub
stos
js
and
popf
or
dec
cmpsb
xor
and
stos
dec
jnp
xor
adc
add
iret
inc
xor
mov
les
icebp
sbb
lea
dec
sbb
jmp
pop
inc
mov
mov
sbb
xor
jne
into
scas
jb
mov
neg
xchg
repnz
sub
sbb
xor
insb
dec
xchg
aaa
sub
mov
cmp
dec
rcrb
xorb
insb
push
aad
xor
push
xlat
sub
rcl
xchg
filds
dec
or
lahf
push
lods
sbb
movsl
adc
mov
lahf
fs
adc
and
xor
sbb
scas
iret
or
lock
ret
add
hlt
outsb
test
mov
loop
mov
push
outsb
ffreep
dec
mov
sbb
sbb
adc
push
shlb
lods
hlt
insl
mov
mov
shlb
sub
cmp
xor
int3
jmp
enter
jne
jle
push
xchg
mov
repz
test
lods
xchg
mov
faddp
xor
push
out
sti
into
xor
es
and
or
xor
xchg
fcoml
sbb
sub
int
insl
jge
jo
ljmp
push
xchg
or
jle
gs
negl
inc
mov
pop
iret
push
in
ror
mov
dec
xchg
rclb
clc
outsb
arpl
fmull
rclb
mov
jg
insl
sub
cmp
outsb
test
xor
and
fs
add
add
jnp
testl
jl
sub
sahf
pop
sbb
ret
sub
xorb
xor
add
push
xchg
push
and
pop
inc
xor
pop
pop
inc
icebp
sub
sbbw
cmp
lods
int
xchg
sbb
daa
daa
cmpsl
sti
mov
xor
rol
push
jbe
and
xor
out
lods
dec
insb
mov
cwtl
pop
shlb
dec
in
repnz
inc
sub
xchg
into
jp
mov
lret
adc
lea
es
leave
mov
loop
mov
push
cmp
mov
jo
mov
lahf
sub
mov
xchg
xor
inc
pop
jge
in
pop
push
push
jbe
lcall
shl
push
test
pop
dec
dec
cmc
out
adc
cmp
sahf
adc
or
ja
inc
fistpll
out
sub
cmp
es
test
jl
pop
ficoml
not
dec
or
inc
aaa
and
push
sub
xchg
push
loope
dec
fs
or
sahf
shll
rorl
mov
repnz
int
out
arpl
hlt
sahf
and
jp
push
popf
mov
mov
dec
push
mov
and
in
int3
fbld
xchg
mov
iret
jbe
stos
push
and
sahf
fwait
les
mov
adc
and
imul
push
ret
dec
jge
jecxz
mov
jg
xor
repnz
lret
es
and
ds
or
out
lret
dec
mov
test
and
mov
cltd
clc
pushf
sahf
inc
cmp
or
loop
lods
stos
adc
ret
xchg
gs
es
repnz
stc
mov
arpl
sub
std
pop
in
sbb
mov
jg
cmp
fucomi
push
loopne
xchg
cmp
test
jns
loopne
enter
mov
xor
scas
outsb
pshufw
outsb
lret
lods
scas
pop
mov
xchg
cs
push
inc
fs
push
adc
dec
ret
gs
lods
push
imul
psubq
push
dec
mov
push
xchg
sub
mov
lret
arpl
es
rorb
push
push
jbe
mov
mov
or
and
add
mov
push
mov
add
daa
sub
mov
xchg
sbb
dec
jge
ljmp
and
xor
jae
mov
xor
mov
push
bound
out
ljmp
std
sub
pop
lds
mov
lock
push
pxor
push
mov
sub
pop
inc
cmc
dec
mov
dec
cmp
sbb
jecxz
pop
mov
jae
jecxz
movsb
sti
mov
and
jmp
les
ja
sbbb
jmp
push
faddl
packsswb
arpl
mov
sbb
leave
mov
add
int3
push
or
xchg
js
js
push
jae
push
xlat
pop
cmpsb
add
xchg
aad
and
adc
inc
adcl
cmc
popf
adc
data16
repz
push
loope
mov
sahf
les
add
xchg
int3
sbb
add
cld
sbb
jbe
inc
lret
arpl
dec
jns
into
sti
ljmp
stos
fs
rcl
sub
lods
mov
shll
sub
mov
pop
mov
dec
mov
jl
fistps
out
inc
cmp
aam
ret
sub
dec
repnz
pusha
js
adc
jge
popl
iret
xchg
add
mov
sbb
add
cld
lsl
cmc
mov
jp
lods
add
pop
roll
jbe
pop
jae
or
mov
pop
je
in
cmc
cs
loop
jae
xlat
inc
mov
movsb
mov
adc
sbb
in
jb
out
xor
arpl
icebp
insb
push
jl
jle
add
xor
into
jnp
adc
movsb
sti
fnsave
fnstcw
test
dec
psubusw
dec
sbb
and
cwtl
in
push
jecxz
mov
jmp
sbb
adc
into
imul
sahf
lcall
pop
into
popa
loope
mov
icebp
dec
sub
sbb
pusha
ja
pop
rcll
or
cwtl
xchg
data16
push
mov
mov
cld
add
nop
adc
push
fnstcw
mov
mov
jp
pop
hlt
push
mov
das
dec
push
xchg
in
xlat
les
sbb
inc
pop
mov
testb
xchg
outsl
rol
xchg
outsl
adc
sbb
lcall
dec
rol
icebp
fucomi
jnp
gs
mov
lock
fnsave
xor
scas
cmp
cltd
cmpsl
bound
cli
inc
push
sti
mov
sbb
push
xor
fs
jbe
add
or
sbb
inc
mov
repnz
sarb
jbe
idivb
add
in
rcrb
xchg
sub
mov
fs
inc
cwtl
test
xchg
sarl
xor
jecxz
mov
adc
xchg
mov
addr16
push
das
mov
int
pop
jb
or
xchg
xor
lcall
in
imul
lea
jno
push
into
dec
je
push
lods
sub
sub
loopne
sbb
lret
xor
test
pop
in
lcall
ret
and
dec
jg
xchg
lock
lock
or
insb
mov
es
addr16
or
sub
loopne
push
xchg
je
sahf
pop
pop
rcll
inc
aam
jecxz
into
push
mov
outsb
cmpl
xchg
sti
cwtl
lret
rclb
out
int3
imul
lock
js
push
lods
inc
lock
jmp
jecxz
push
sarl
sbb
out
lea
imul
gs
xchg
mov
jae
or
xchg
and
es
cmp
jns,pn
push
jo
out
or
stos
in
out
xchg
fwait
lds
mov
jno
cmp
pushf
cltd
js
adc
mov
push
mov
jae
jnp
mov
icebp
aam
inc
push
xor
dec
dec
add
scas
xor
rolb
adc
jge
mov
mov
xchg
jecxz
lods
xchg
dec
out
bound
cmp
jge
cld
sub
pop
jns
clc
scas
loop
mov
mov
shll
add
pop
jmp
push
and
add
xor
lahf
jne
pushf
cmc
dec
inc
test
nop
sbb
mov
mov
push
lahf
lcall
mov
imul
xor
pushf
mov
lahf
sub
and
ja
daa
jo
push
xor
lret
call
jl
aaa
int3
push
mov
repz
pushfw
aad
sbb
cmp
pop
cli
ljmp
shll
lret
push
mov
aam
or
inc
or
aas
mov
pop
lahf
lods
add
out
shll
ss
push
out
fildl
and
pop
mov
shlb
and
scas
in
ss
test
push
xor
int3
and
push
pushf
inc
popa
cmp
jp
outsb
push
in
jecxz
push
popa
test
mov
rcll
pop
jl
lret
lret
adc
aam
ljmp
xorl
mov
push
int
and
int
ret
scas
adc
mov
adcl
fs
addr16
mov
int
adc
negb
data16
inc
sbb
jae
prefetchwt1
mov
jae
mov
iret
gs
scas
daa
cs
inc
mov
sahf
xchg
fwait
movsl
push
insb
mov
les
lret
nop
inc
dec
cltd
dec
mov
outsb
push
dec
sbb
jb
addr16
add
mov
cmc
xchg
fsubrs
ret
cld
mov
inc
bound
outsl
xor
les
rclb
lea
es
mov
icebp
pop
aad
std
stc
andb
push
and
sub
sbb
sbb
mov
setne
insl
test
mov
pop
push
pop
std
inc
into
pop
in
jne
leave
cltd
xchg
imul
push
es
insb
inc
inc
fcomip
jbe
pop
imul
xchg
inc
or
mov
ret
cld
push
enter
dec
les
cmp
dec
fmuls
scas
es
les
in
xor
mov
or
sub
push
mov
pop
nop
int3
adc
jbe
repz
movsb
sub
dec
or
xchg
lods
push
mov
and
lock
and
jmp
jbe
notl
ds
pop
aas
sahf
xchg
inc
sub
adc
sbb
mov
jge
mov
flds
mov
mov
les
push
push
xchg
mov
loopne
movl
jecxz
xchg
or
mov
pop
adc
sbb
mov
and
shrb
cmp
int
and
jg
inc
sti
pop
inc
notl
jne
aaa
mov
adc
xor
adc
stos
or
fidivl
pop
dec
xorl
loop
mov
and
aam
and
das
mov
out
ret
cmp
les
hlt
insl
push
sub
ss
aaa
xchg
in
lcall
push
cmp
xchg
pop
jl
inc
cltd
sub
lret
icebp
xor
sahf
and
les
enter
dec
outsb
push
xchg
xchg
mov
jge
movsb
cmpsl
rcll
or
lds
inc
jne
ret
dec
add
je
inc
push
inc
bound
xor
stos
test
adc
shlb
xor
mov
jge
cmpsl
int3
sub
sbb
and
jno
xchg
or
popa
mov
call
imul
icebp
test
cli
push
sbbl
xchg
dec
popa
out
sti
xchg
adc
cmp
mov
aam
out
call
mov
in
jb
addr16
cs
test
fsubrl
mov
rclb
xchg
jle
cmc
cmp
jnp
imul
sub
mov
push
cltd
stos
xchg
sahf
ror
jns
rclb
push
pop
rcrl
int
loope
sbb
cmp
lcall
repnz
lds
loope
xor
out
lahf
lahf
and
test
pop
jmp
jnp
jne
je
cmpsb
mov
orb
sbb
pushf
fnstcw
push
lods
xor
and
cmp
jb
adc
mov
fidivl
sub
test
sub
mov
and
sti
clc
xor
nop
dec
xchg
movaps
leave
push
and
mov
leave
pop
and
lret
pusha
mov
in
cmp
jae
mov
sbb
mov
mov
pop
xor
aaa
scas
push
sbbl
jb
inc
out
mov
or
mov
enter
add
push
mov
subl
mov
or
in
mov
leave
pop
cmpsl
lods
mov
jo
lea
call
jmp
lock
cmp
or
mov
mov
pop
push
inc
aaa
imul
add
fdivr
mov
stos
mov
out
ror
inc
pushf
adcb
lret
out
jp
sub
fdivl
push
cmp
cmp
push
imul
lret
int
mov
or
mov
push
fcoml
pop
inc
and
cmp
dec
scas
jb
pop
mov
lods
adc
aad
fmull
mov
adc
cmc
cli
inc
dec
and
inc
push
mul
adc
enter
push
fadds
lret
mov
push
inc
lea
lret
pusha
ja
mov
orb
pop
push
data16
inc
std
js
ja
add
mov
sbbl
push
sub
repz
dec
push
cmp
ds
xchg
aam
sbb
rsm
add
dec
mov
into
sub
or
mov
std
rcll
cmp
add
xchg
adc
sub
imul
cmp
stos
sarl
adc
sbb
sbb
add
lods
cmp
inc
ss
nop
stos
mov
add
aad
or
out
pop
fistps
mov
cmpsb
dec
pop
sbb
cmp
xchg
call
inc
and
mov
test
cltd
pop
cmpsb
mov
loopne
movsb
mov
ljmp
mov
imul
test
and
xlat
adc
cmp
comiss
mov
shl
sbb
bound
cmc
paddsw
add
sbb
sub
inc
aam
dec
gs
mov
aaa
cmc
mov
or
insb
inc
xlat
lods
mov
ret
inc
xchg
push
dec
imul
loope
aam
cwtl
push
push
rclb
adc
mov
fnstenv
mov
mov
add
mov
mov
xchg
add
xchg
inc
inc
mov
test
cld
inc
lret
sub
xor
pushf
in
imul
xchg
sbb
push
nop
inc
mov
cmp
bound
add
icebp
sbb
pusha
adc
push
pop
shll
xchg
adc
dec
or
adc
xchg
jns
and
pop
imul
inc
cmc
loope
pop
cld
test
mov
adc
cld
jbe
filds
repnz
inc
sub
aas
push
in
stos
call
mov
in
adc
icebp
add
rolb
xor
inc
nop
push
movsb
pop
pop
mov
mov
jl
test
xor
rclb
cltd
lods
push
add
mov
jo
sbb
mov
mov
movb
and
ficompl
adc
mov
ljmp
mov
and
je
ja
out
ffreep
pop
das
insb
out
xlat
inc
xchg
std
sub
into
mov
jo
negb
shrl
jne
sub
sub
sar
lcall
lcall
je
cmp
xor
mov
gs
jnp
dec
pop
sub
test
mov
int3
pop
pop
xor
clc
add
jmp
and
ljmp
sub
scas
lret
addb
mov
add
lea
push
push
std
cmp
movsb
cmp
push
mov
in
jb
int
mov
std
sub
add
testb
xchg
push
mov
mov
ljmp
dec
cmpl
sbb
or
inc
jno
fdivs
frndint
adc
sub
jb
push
cmc
icebp
adc
mov
fildll
faddl
dec
mov
add
pop
dec
les
repz
inc
adc
shlb
xchg
mov
mov
scas
sbb
ljmp
stc
xchg
mov
pop
out
jo
mov
xor
test
sbb
insb
jl
ficoms
add
nop
mov
sub
hlt
out
lret
xchg
pop
lcall
and
repnz
push
dec
inc
pushf
out
movsl
or
and
pop
pop
xor
add
imul
adc
pop
outsl
lcall
xor
xchg
sarl
jnp
cmp
js
stos
ds
cmpsl
cmp
int3
fidivrs
jb
sbb
mov
adc
pop
or
mov
cmp
add
in
sti
testb
sbb
pop
push
stos
jb
xchg
cltd
sti
adc
leave
dec
stc
fidivs
imul
frstor
pop
je
push
into
arpl
popf
pop
jmp
bndstx
out
popf
mov
fldl
ss
sti
jecxz
jbe
jnp
lret
push
pusha
and
cmpsb
arpl
pop
inc
out
out
jp
mov
ds
int3
xor
adc
pop
sahf
movsb
fisttps
and
xchg
lret
xor
shll
jae
call
std
xchg
fs
je
outsl
stos
arpl
xchg
mov
or
push
pop
sbb
pop
push
jl
push
shll
jo
shll
js
jae
cs
sub
hlt
lea
aad
add
lret
fnstcw
mov
sbb
xor
push
aam
mov
sub
push
lds
jno
adc
and
imul
xor
rcr
fwait
adc
push
inc
sarb
push
fimull
pop
test
sarl
cmp
cmp
stos
ljmp
mov
add
push
out
lds
inc
ret
xor
mov
or
sub
xlat
push
enter
cmp
sub
xchg
aam
sub
jp
xor
inc
cwtl
sbb
inc
test
stos
wrmsr
dec
je
add
cmp
sub
jne
fcom
mov
xor
fs
es
jb
jg
cli
cli
leave
adc
stc
pop
into
xchg
or
pop
inc
inc
sbb
in
je
push
pop
popa
sbb
xchg
pushf
in
loopne
ss
push
cmp
orb
mov
aad
out
jb
mov
stos
or
inc
sbb
mov
mov
cwtl
adc
and
aaa
fmuls
cld
xchg
out
loope
fsubrs
adc
xchg
dec
leave
jae
adc
dec
imul
cmpsb
mov
ss
insb
int3
add
pop
lods
cs
mov
daa
dec
popa
push
xlat
or
hlt
mov
aas
cmpsl
and
pop
sbb
mov
sub
cld
test
outsl
ss
cmp
inc
fdivl
popf
jp
movsl
outsb
cmp
adc
cld
cmpsl
adc
xchg
outsb
arpl
insb
pop
mov
gs
sbb
sti
cmp
inc
aas
rcl
mov
sahf
xchg
loopne
mov
and
mov
add
xor
mov
into
sahf
fidivs
int3
repz
mov
and
pop
fucomi
cmp
dec
movsl
push
lds
je
insl
xchg
aad
aaa
lea
adc
cmpsb
mov
pop
and
idivb
add
jecxz
xchg
jns
xchg
rorl
ds
das
dec
push
jns
and
pop
cmp
lahf
mov
push
insb
dec
imul
dec
pop
dec
or
out
mov
inc
outsb
outsb
shrl
cli
lret
rorl
push
xor
xor
int3
out
mov
and
cltd
and
sub
cs
hlt
shrl
jmp
dec
jg
sti
jnp
imul
jle
jne
testl
push
cmp
push
sbb
jne
xor
dec
dec
popa
loop
jns
fists
sahf
ret
xor
and
adc
add
cmp
mov
bound
movsb
jne
pop
mov
push
adc
push
add
jl
xor
xlat
xor
push
repz
lock
xchg
mov
cmp
sbb
or
movsl
daa
ja
adc
jae
daa
fld
mov
dec
push
std
jg
and
mov
das
jle
mov
xchg
inc
in
je
lahf
pushf
cmp
int
xor
push
xor
sub
pop
lock
cld
or
mov
adc
bound
dec
sbb
dec
daa
push
xchg
insl
hlt
sub
push
xor
into
mov
addb
imul
adc
sub
out
pop
aaa
mov
lds
and
dec
mov
dec
jnp
inc
pusha
test
push
scas
dec
cmpsb
scas
add
fwait
lcall
xchg
xor
daa
push
jmp
or
pop
je
cli
sbb
mov
dec
adcb
adc
jle
mov
xor
mov
mov
test
xor
jae
addr16
or
dec
mov
add
mov
ds
shlb
cmp
and
frstor
int
popf
xor
cmp
mov
fs
rorb
ss
inc
mov
xchg
lahf
pop
cmp
pop
addr16
aad
push
test
cmpb
dec
mov
or
xor
stc
lock
hlt
daa
xchg
push
dec
fxch
es
mov
lods
outsl
mov
inc
adc
daa
xchg
adc
clc
xchg
jo
jno
lods
xlat
dec
jmp
mov
cmpsb
adc
or
adc
xor
mov
mov
and
adc
pop
outsl
loopne
lock
xchg
push
popa
sbb
or
lret
inc
xor
dec
stc
sub
cmp
rcrl
ret
out
push
dec
out
push
out
pop
push
int3
jb
mov
cmp
ficoml
mov
sub
ja
sbb
loopne
iret
xchg
js
outsl
out
cmc
sub
test
adc
sub
ret
or
ljmp
negl
fs
movb
mov
mov
pop
xor
ljmp
es
cmp
outsb
cmp
int3
mov
fcmovnu
sbb
sbb
dec
push
dec
xor
mov
xchg
mov
jno
and
jl
adc
out
add
adc
adc
jmp
add
addb
add
or
out
sub
lods
cmp
insb
jmp
dec
test
stos
pop
popf
mov
mov
pushf
fmulp
push
xchg
call
scas
ljmp
jne
arpl
rcrl
cs
rcll
inc
and
scas
cltd
std
das
cmpsb
pop
icebp
enter
pusha
in
clc
sbb
pop
inc
dec
out
rorb
adc
std
shl
insl
jns
mov
pop
pop
and
clc
jl
loop
sbb
mov
adc
mov
inc
xchg
push
movsl
in
lahf
jecxz
pop
sar
call
pushf
inc
sub
adc
inc
mov
push
imul
jns
sahf
fldt
or
dec
aaa
sahf
popf
push
jl
mov
stos
ret
inc
add
mov
lock
sub
xchg
push
lods
cmp
jmp
xchg
push
fdivl
pop
lds
dec
push
pop
insb
dec
fsub
mov
dec
aas
loopne
push
adc
arpl
outsb
mov
popa
sbb
sub
cwtl
xchg
es
repnz
stos
mov
adc
pop
or
and
xchg
sub
xor
xor
dec
fwait
aaa
pop
sbb
inc
add
xchg
fs
mov
lods
iret
ds
pop
aam
jl
rol
popa
adc
out
in
shll
mov
mov
aad
repnz
shl
cltd
adc
repnz
in
adc
jecxz
jnp
out
popf
jmp
mov
ret
pushf
cmpsb
push
jl
and
les
pop
jns
adc
std
push
daa
xchg
jg
add
dec
pop
jmp
shrl
push
add
or
xor
pop
call
cli
stc
dec
sub
gs
imul
ljmp
cmc
fbstp
jmp
push
in
mov
nop
aaa
and
iret
test
test
cltd
push
dec
sahf
xchg
or
mov
int3
inc
mov
xchg
sbb
test
inc
jge
mov
mov
ljmp
addb
sti
arpl
adc
cmp
test
push
inc
or
dec
xlat
inc
mov
xorl
aad
ds
ret
xor
xor
out
inc
mov
repz
sub
int
and
call
iret
fwait
testl
out
inc
out
ja
xor
sbbb
fwait
cmp
mov
das
mov
xchg
loopne
mov
faddl
lret
mov
out
dec
lcall
jmp
inc
stc
arpl
int
pop
xchg
push
xor
mov
test
dec
mov
lcall
pop
fisttps
mov
adc
add
pop
iret
pop
jle
lret
push
dec
xchg
out
testl
gs
and
jp
sahf
neg
xchg
loopne
xchg
xchg
xor
pop
push
inc
pop
pushf
cs
sbb
push
inc
adc
mov
movsl
scas
jno
mov
inc
shll
push
in
repz
fcmovb
xchg
je
mov
mov
inc
pop
adc
rcrl
mov
mov
sub
xlat
pop
or
clc
aaa
xchg
lds
cltd
xchg
xchg
test
pop
mov
xor
push
aad
cmp
movb
xor
and
adc
push
imull
xchg
out
adc
sub
scas
filds
dec
xchg
pop
or
ss
or
xor
add
jns
test
push
cld
push
xchg
test
mov
jl,pt
add
fcmovb
push
sahf
inc
aas
icebp
jge
xor
iret
pop
cli
insl
push
clc
mov
outsl
mov
js
jae
test
aam
sbb
jmp
sbb
xor
test
ja
repnz
cmpsb
in
push
hlt
popf
hlt
pop
jne
adc
das
sbb
inc
inc
add
add
adc
dec
inc
sahf
ror
out
jnp
push
xchg
inc
sub
sbbb
scas
enter
sarl
mov
dec
int
lds
add
pop
fldt
fsubrl
aam
add
mov
lock
mull
cld
xor
lea
sub
or
testl
cmpsl
sbb
andb
mov
mov
fisubrs
shlb
sbb
fcompl
cwtl
jnp
movl
push
sub
arpl
adc
std
scas
sbb
mov
leave
out
mov
fistl
sbb
out
jmp
fidivl
or
push
popa
stos
dec
cwtl
aad
push
push
sbb
push
test
add
inc
inc
adc
int
in
or
roll
adc
dec
or
cmp
mov
xor
mov
loop
or
pop
gs
or
jp
stos
push
out
enter
imul
into
leave
jne
repz
iret
addr16
lahf
inc
jne
push
fdivrs
fstpt
xchg
fidivl
inc
sbb
addr16
enter
cwtl
inc
xchg
adc
lea
and
mov
add
cmp
nop
xor
mov
movsl
mov
push
pcmpgtd
out
or
out
sub
scas
lods
enter
mov
in
or
pop
ffree
jg
aas
dec
mov
leave
test
add
les
enter
ljmp
push
pop
decl
negb
pop
and
adc
test
out
xor
or
pop
mov
push
and
inc
jb
jo
je
mov
aas
adc
mov
inc
sbb
pop
xor
fwait
shrl
lcall
lcall
ljmp
imul
push
jmp
nop
in
mov
aaa
or
push
mov
sub
xor
add
iret
mov
clc
lcall
cmpsb
fstpt
sub
adc
hlt
rorl
mov
pop
add
xor
sti
fwait
dec
mov
mov
cmp
dec
flds
lea
mov
shrl
subb
in
sar
pop
jmp
daa
fadds
lcall
push
cmp
dec
lock
icebp
ret
sbb
xchg
or
xor
mov
jns
sbb
cld
cmp
cmp
insb
mov
mov
loope
in
push
in
xchg
imul
mov
xchg
add
jnp
hlt
xchg
insl
popf
sub
mov
cmpl
andl
push
mov
adc
out
add
test
pop
adc
shl
out
ja
loope
mov
mov
jb
xor
xchg
mov
inc
xchg
cmp
aad
ljmp
es
aad
jge
cmp
cmp
ror
mov
int3
std
adc
das
imulb
push
xor
in
sbb
out
or
mov
cmpsl
in
xchg
iret
ret
sbb
outsb
pushf
mov
sbb
push
fldl
das
data16
jle
mov
and
repnz
sahf
xor
mov
pop
sub
out
test
or
ret
inc
inc
dec
cltd
mov
push
out
jmp
dec
or
mov
shrb
lahf
in
or
jo
jecxz
jbe
pop
or
mov
ret
push
or
int
inc
and
push
mov
pop
push
lret
add
cmp
and
jg
lock
dec
das
sbb
ss
in
int
out
jbe
sti
pop
add
sub
push
call
push
jae
push
mov
aaa
pop
xor
lret
mov
push
movsb
fildll
loop
stos
fs
or
push
mov
dec
pushf
aam
inc
fstl
push
fcoml
aad
inc
push
inc
mov
ds
cld
mov
cwtl
sarb
jne
gs
fstpl
fsubr
pop
inc
push
fnstcw
dec
icebp
adc
popa
dec
cmp
shll
test
inc
mov
inc
xlat
pop
and
testl
push
inc
outsl
lods
cld
mov
pop
cmp
jne
cmp
popa
xchg
clc
mov
and
and
dec
jmp
jbe
sbb
pop
scas
jbe
xor
ljmp
cmp
and
or
pop
mov
pop
mov
push
ss
cwtl
test
jbe
int3
jne
bound
xlat
into
cltd
push
or
xlat
xchg
stos
fimuls
adc
cmc
dec
and
inc
outsb
add
arpl
das
sahf
xchg
push
add
lcall
rorb
xchg
xor
dec
dec
jno
mov
sbb
xchg
mov
stos
in
pop
scas
xchg
fisttps
popl
jecxz
fsubp
pop
pop
imulb
cltd
sbb
pusha
imull
lahf
insb
insl
cld
mov
or
fwait
out
fcomi
lret
xor
and
pop
cld
pop
mov
xor
rolb
xchg
js
xchg
das
jae
add
mov
mov
dec
lahf
xor
lret
in
les
xor
out
icebp
inc
daa
xchg
xor
fnsave
or
shlb
movsb
mov
inc
mov
pop
mov
inc
stc
int
imul
decl
aam
add
jl
jb
pop
inc
cld
xchg
cmp
loope
stc
repnz
test
cmpsl
je
or
jle
cmp
cmp
sbb
push
imul
mov
cmp
test
shll
incl
push
cmp
stos
test
dec
hlt
pushf
ficoml
pop
sahf
add
mov
out
pop
fwait
popf
mov
mov
dec
scas
mov
mov
out
mov
std
pusha
cmp
dec
iret
data16
xchg
in
mov
cmpsb
push
and
jno
push
pushf
das
mov
ret
xchg
and
push
xchg
mov
jb
insb
std
inc
push
fsubr
or
jae
test
xor
xor
aam
and
or
scas
roll
pushf
sbb
jl
neg
movsb
test
mov
out
out
and
cmp
int3
shrb
pop
orl
fstpl
fidivrs
xor
pop
add
addr16
xor
pop
shl
repnz
dec
mov
sbb
and
or
jns
dec
cld
je
jo
dec
inc
addr16
sti
lret
ljmp
push
dec
popa
cmpl
xchg
nop
stos
cmp
fsubs
adc
aas
nop
lods
sbb
in
leave
add
testb
sub
jle
add
mov
outsb
movsb
and
stos
cmp
pop
mov
or
add
scas
call
jmp
out
push
loop
sbb
adc
stos
je
pop
out
mov
mov
movsb
stos
inc
into
mul
add
cltd
lock
lahf
in
jle
mov
cltd
stc
mov
inc
movsb
mov
and
mov
mov
pop
cs
push
cmc
pusha
xchg
sbb
and
push
mov
ja
mov
test
jmp
cmc
add
and
push
cmp
insb
ret
call
std
es
daa
mov
inc
rcrb
or
jmp
pushf
sbb
mov
lds
xchg
pop
daa
pop
fnsave
test
mov
cmp
iret
les
mov
mov
icebp
sar
or
or
cmp
rolb
inc
push
add
cmp
sub
pop
shl
daa
push
ret
sahf
loopne
adc
jno
dec
insb
rcrb
mov
imul
repnz
mov
arpl
sub
lcall
pop
outsl
shrb
or
scas
enter
lods
inc
push
dec
bound
inc
loop
fimuls
imul
jns
fistps
jle
mov
push
adc
cmp
pop
xor
dec
xchg
scas
movsb
sbb
loopne
cmpsl
push
sbb
insb
pushf
rorb
mov
shl
mov
dec
lret
imul
in
mov
arpl
mov
out
in
jo
inc
test
aas
mov
sbb
mov
fcmovnu
into
aas
fcomps
dec
xor
or
sbb
xchg
cmpsl
push
pop
cmp
push
sarb
and
pop
dec
nop
push
xchg
test
lahf
and
xlat
mov
popf
sbb
into
mov
push
cmp
loopne
dec
dec
push
fmuls
mov
js
notl
cli
lea
or
adc
sbb
gs
dec
insl
scas
or
jp
test
push
in
sub
and
divl
xchg
push
pop
or
fadds
insb
dec
push
call
or
or
popa
sbb
loope,pt
jne
sub
or
je
arpl
xor
mov
push
jle
sub
sahf
lahf
jne
mov
push
cld
and
int3
xor
nop
cmp
add
ja
mov
sbb
jb
repnz
cmp
cltd
shl
mov
or
adc
xorl
add
or
lock
stos
sbb
fildl
popf
lods
or
cmp
enter
jb
xchg
arpl
cmp
hlt
rolb
lds
cmp
jg
mov
inc
int3
xor
fildll
dec
mov
xchg
lea
jo
bound
mov
jp
icebp
mov
xchg
pushl
and
or
repnz
stos
fwait
jne
jecxz
mov
dec
pusha
xor
fistps
or
mov
xchg
ror
sub
lds
mov
mov
push
adc
enter
in
dec
dec
repnz
cs
ss
inc
sbbl
push
sahf
cmpsb
mov
out
xor
pop
mov
mov
mov
mov
mov
push
aad
pop
or
sbb
lret
pop
or
pushf
cmp
faddl
rcll
mov
xchg
add
pop
test
loop
push
dec
lds
or
xor
push
lret
test
cld
or
mov
mov
fcoms
fimuls
int3
fisttpl
ljmp
out
cmp
push
pop
jns
es
iret
jns
je
push
jmp
out
mov
push
imul
jmp
out
ficompl
bound
imul
push
mov
call
mov
scas
jg
push
add
add
xchg
push
jne
jmp
xor
pusha
das
nop
lock
leave
and
leave
push
bound
jb
pop
pop
push
std
mov
adc
jge
xor
jg
aam
xor
dec
jmp
lret
inc
pop
adc
pusha
aas
pop
sbb
out
aaa
fsubrs
fcomp
cmc
mov
xor
fcomip
in
add
daa
mov
adc
sbb
adc
inc
pop
pop
xchg
js
and
gs
pop
insl
ja
push
cltd
mov
movsb
push
or
loopne
pushf
mov
cmp
clc
icebp
ljmp
lcall
dec
add
test
pop
jns
and
cltd
mov
push
mov
cmp
sub
ljmp
in
push
out
cmp
aaa
xchg
xchg
jmp
out
jno
subb
int
out
shlb
loope
jp
sahf
dec
scas
movsb
xchg
xor
lock
inc
mov
mov
filds
mov
jae
dec
loop
mov
imul
pushf
adc
push
sub
insl
adcl
daa
testb
ja
orl
fs
xchg
cld
inc
mov
test
push
in
and
xor
cmp
ret
pop
or
push
pop
je
mov
xor
lret
outsl
in
mov
cmpsb
faddp
xor
mov
loopne
push
shll
mov
ljmp
xchg
les
jb
cmpb
je
inc
imul
mull
adc
popf
in
dec
in
mov
push
mov
fbstp
jp,pn
push
dec
dec
push
in
lds
cmpb
fwait
mov
fstpl
xchg
andl
lods
mov
fs
in
mov
pop
dec
orb
jbe
out
push
bound
inc
popf
mov
fwait
mov
sub
cli
loop
loop
rcll
out
push
enter
adc
pop
push
loope
aam
rcrb
loopne
mov
jno
sbbl
push
xchg
dec
rcrb
push
mov
dec
popa
push
stc
mov
and
lods
aas
jp
fimull
into
cmp
inc
adc
imull
mov
mov
andb
loopne
in
xchg
fxch
jnp
dec
xchg
sbb
and
xchg
cmp
inc
pop
cmp
out
sbb
pop
jnp
icebp
ffreep
cmp
xor
je
aam
adc
aad
jecxz
cmp
bound
out
hlt
fld
mov
shlb
and
fldl
pop
rolb
mov
into
stos
je
dec
jb
mov
lret
cmp
clc
jnp
fldt
popa
jae
jne
fbld
sti
add
and
or
add
inc
push
xchg
loope
ljmp
inc
or
push
scas
lret
mov
add
lahf
inc
and
subl
fwait
xor
fldcw
adc
xor
fldenv
out
push
lods
mov
xchg
push
or
lea
mov
mov
out
mov
pop
mov
mov
mov
inc
bound
and
imul
xorb
sub
push
in
into
aas
cs
stc
adc
xlat
jmp
sti
jge
push
jle
add
mov
or
lret
fldln2
ret
lcall
or
add
push
mov
pop
das
mov
repnz
sahf
mov
add
sbb
adc
lock
jnp
arpl
mov
fidivs
sbb
push
outsb
and
xchg
std
dec
inc
mov
mov
and
jno
xchg
mov
movsb
jnp
insb
dec
std
push
push
cmc
xor
push
out
mov
pushl
pop
adc
or
inc
into
test
cmp
and
xchg
andl
mov
sub
repz
push
cmp
push
outsl
jge
shrl
mov
mov
enter
loop
rcll
xor
xchg
sbb
test
lret
or
fisubl
cmp
xchg
adc
imulb
mov
movsb
mov
aas
pop
leave
mov
inc
and
in
jecxz
jp
xchg
lahf
dec
jno
dec
jne
add
jmp
dec
jne
outsl
nop
push
mov
push
dec
push
jo
outsb
mov
or
mov
xchg
dec
sbb
jae
fs
xor
flds
int
lods
fstps
addr16
push
movsl
std
in
jne
repnz
xchg
inc
pop
mov
in
xchg
jl
xorb
or
cmp
ljmp
dec
dec
ret
cmp
mov
xor
pop
pop
push
or
push
idivb
xor
lcall
push
dec
xchg
call
xor
and
mov
pop
insb
inc
aam
push
mov
nop
loopne
dec
cmpsb
jg
aas
fisttpl
notl
sub
xor
and
inc
adc
dec
push
cmpsl
xor
cmc
vpcmov
hlt
xchg
cmp
fdiv
sbb
cmp
mov
lea
cmpsl
mov
addr16
inc
mov
cwtl
jnp
sub
test
adc
insb
arpl
jne
sub
ficompl
or
rcl
and
push
test
nop
cmp
mov
cmp
mov
test
mov
imul
fisubs
add
lahf
icebp
icebp
in
adc
mov
xor
aam
ss
ds
fucomp
insl
sbb
pop
sub
stc
fnstcw
pop
mov
sbb
bound
dec
out
inc
fnstsw
adc
fdivrp
mov
lret
les
ror
inc
mov
clc
or
lahf
faddl
xor
mov
pop
pop
dec
mov
or
sub
das
insl
sub
mov
fwait
std
cmpl
push
and
scas
sbb
jns
fwait
in
push
xchg
fadds
sub
sbb
xchg
hlt
push
test
clc
adc
cmp
test
inc
int
mov
ficoml
call
push
in
or
mov
cmp
lahf
arpl
mov
and
mov
scas
mov
subb
dec
mov
mov
inc
cmpsb
lret
imul
test
pop
mov
mov
outsl
pop
mov
leave
adc
pop
movsl
aam
push
les
push
sbbl
add
imul
jne
lea
scas
cmp
cmp
mov
dec
shll
xchg
rcl
add
out
pop
cmp
jl
fwait
cmp
out
dec
sahf
inc
pop
inc
jecxz
rol
add
int3
inc
jns
sti
fwait
rcl
ss
sub
pop
into
xor
sbb
push
sar
mov
dec
mov
test
test
and
fldenv
cmp
xor
sti
fsubp
fwait
adcl
inc
daa
adc
mov
xorl
push
enter
sar
dec
sbb
pop
cmc
in
popf
xor
ljmp
cmp
bound
or
jmp
xor
clc
inc
dec
xor
fldcw
mov
cmc
loopne
js
jp
jb
mov
out
adc
dec
fldenv
nop
stc
mov
jl
shll
cmpsb
pop
aas
push
xchg
ret
mov
int3
adc
push
dec
dec
lret
pop
ret
out
push
in
mov
adc
fildl
and
shr
push
pop
mov
jbe
jnp
int
ftst
rcrb
push
js
mov
and
xor
cld
inc
jno
clc
int
jmp
pop
ds
cmp
sub
xchg
loop
xchg
icebp
cs
or
inc
dec
cmp
mov
sahf
xor
push
mov
cltd
lahf
jle
stos
fsubr
inc
js
mov
bound
jp
enter
push
xchg
or
dec
cwtl
pushf
pop
in
into
shrb
ss
shr
cmpb
sub
xchg
add
xchg
daa
inc
test
xor
mov
push
ljmp
std
cld
dec
sti
push
cmp
xor
sbb
sahf
cmp
stc
mov
lahf
cmp
test
bound
stos
sbb
and
xchg
cmp
lret
pop
mov
les
incb
xor
scas
mov
pop
sahf
sub
mov
pushf
sbb
pop
fildll
cmpsl
adcl
mov
rorl
add
xchg
and
and
sahf
in
aad
ret
xor
sub
imul
stos
daa
shrl
clc
cld
pusha
mov
add
sub
sub
mov
dec
ffreep
push
hlt
jge
add
mov
js
loop
adcl
mov
popa
push
cwtl
mov
mov
sbb
sbb
out
sahf
cmp
insl
pop
inc
jmp
mov
fadds
xor
dec
imul
mov
cltd
es
imul
and
bound
inc
jbe
xor
aaa
xor
push
mov
pop
ljmp
notb
or
pushf
inc
push
outsb
xor
leave
popf
mov
xor
jnp
jecxz
or
jmp
inc
outsb
cld
adc
adc
sbb
test
test
dec
lret
fisubs
pop
dec
dec
jecxz
push
fsubrs
xor
lds
mov
inc
push
pop
or
test
dec
and
mov
test
mov
dec
or
faddl
je
test
sti
sub
push
insl
dec
fcomp
jge
insb
xor
xor
xor
lret
sub
push
stos
std
inc
add
aam
pop
adc
jns
stc
fs
sbb
addr16
push
dec
imulb
insb
ret
scas
adc
insl
outsl
lock
popa
arpl
mov
jns
cld
cmc
addl
adc
cmp
test
cs
jne
jno
push
in
cwtl
cmp
dec
sub
jne
push
idivb
mov
xchg
rcl
jno
jecxz
inc
lahf
pop
or
push
cld
mov
or
dec
icebp
pop
test
sub
jns
imul
lock
xor
scas
jns
adc
jb
xchg
xor
adc
pop
les
xor
pop
sub
adc
negb
fimuls
repz
cmp
jmp
shr
repz
stos
sbb
into
push
leave
sbb
clc
cmp
sbbl
cltd
sub
bound
mov
rol
fs
sbb
jmp
insb
sub
or
int3
insl
and
push
sub
pop
jne
lahf
adc
xchg
xor
test
subb
into
cld
roll
inc
scas
shlb
imull
fldenv
xchg
dec
in
pop
sub
mov
pop
pop
and
jno
mov
aam
loopne
xor
out
pop
inc
dec
mov
mov
mov
std
syscall
push
xor
xor
out
mov
and
add
push
outsb
push
sbb
lock
movsb
inc
jl
fists
popa
rorl
int
ficompl
popa
sub
leave
xchg
mov
jne
jecxz
addr16
bound
inc
scas
jb
ljmp
xor
cmp
popa
popf
xorl
hlt
mov
add
pop
pop
cmp
add
sub
adc
push
xchg
enter
mov
mov
fs
popf
xchg
push
das
mov
pop
lcall
jns
add
inc
imul
cmp
ficomps
clc
dec
test
inc
jle
lea
clc
dec
adc
rcrb
jns
sbb
mov
shr
ret
mov
dec
mov
movsb
lahf
lea
pop
sbb
daa
jp
push
pop
cmc
fcmovnb
inc
stos
mov
fldl
push
mov
mov
sbb
jmp
bswap
dec
sarl
jge
nop
mov
pop
jp
lock
jl
adc
das
mov
dec
cmp
mov
xchg
push
inc
or
inc
xchg
mov
add
or
pop
xchg
cmpsb
or
in
jp
mov
test
mov
xor
add
ljmp
mov
pusha
outsl
xlat
orl
fwait
push
and
es
cmp
mov
call
jle
aad
pushf
into
xchg
rcll
les
push
je
int3
cmpsb
jns
out
scas
test
jno
shlb
sbb
adc
inc
mov
push
pop
jg
pusha
stc
xchg
add
popf
in
xor
and
je
popa
push
int3
dec
pusha
push
dec
addr16
pop
add
movsl
std
sub
nop
imul
sub
mov
xor
in
insb
push
test
xchg
sbb
popf
loope
imull
or
add
pop
cmp
dec
mov
les
push
aam
gs
add
stc
mov
je
loop
cwtl
fs
jecxz
jns
sbbb
push
adc
dec
mov
and
and
in
sar
push
lret
cmp
ljmp
cmp
dec
test
lret
aaa
xor
in
sub
lea
xor
aam
cli
fadd
out
fisttps
jne
daa
jb
jecxz
sbbl
mov
mov
loope
mov
pop
pop
fildl
test
xlat
fs
push
sti
lret
dec
add
les
movsl
insb
in
stc
ficoml
lahf
cli
xor
push
mov
sub
jne
pop
ljmp
mov
mov
xor
jae
sahf
dec
mov
mov
movsl
ret
add
lods
push
dec
adc
daa
bound
xchg
inc
insb
push
fs
ret
imul
ror
inc
cmp
fdivr
mov
inc
fisttpll
mov
popf
inc
inc
test
jp
cmp
push
loop
sbb
xchg
add
jnp
cmp
fwait
xchg
pushf
gs
lcall
lods
repz
mov
sbbb
or
mov
mov
mov
or
sarl
dec
xchg
cs
daa
inc
movsw
stc
les
xor
pop
aaa
lahf
pop
jb
push
inc
push
scas
sbb
mov
xlat
insl
in
out
pop
and
sti
out
mov
jmp
int3
rcr
cmpl
pop
xor
pmovmskb
loop
xor
clc
mov
or
cli
sbb
sub
loope
mov
jns
ss
xchg
and
dec
push
test
ret
jnp
movsl
aam
mov
mov
adc
xor
mov
inc
push
inc
push
push
inc
jo
mov
repnz
or
inc
cld
pushf
imul
xor
push
lahf
fdiv
and
sub
jmp
jg
insl
jmp
nop
mov
rdpmc
sti
orl
mov
xchg
lahf
mov
push
js
fstpl
jg
dec
xchg
int3
test
insl
mov
sub
jns
std
imul
int3
fucom
push
sub
aas
or
shlb
xchg
xlat
pop
sbb
jae
and
lds
rcrl
jns
jo
nop
and
bound
xor
sub
jmp
push
xchg
aas
pusha
mov
pusha
mov
sbb
xchg
pop
maxps
ds
inc
mov
xchg
lea
daa
mov
add
sub
push
jecxz
mov
xchg
jns
pop
mov
out
jbe
pop
sti
xchg
mov
ljmp
sahf
mov
mov
mov
cmpsl
xor
lret
sub
loopne
lahf
test
leave
xchg
ja
mov
pop
push
jbe
stos
jbe
xor
mov
push
addr16
xor
cmp
adc
cmp
dec
and
pop
add
lods
fmul
and
pop
movsl
sub
shrb
mov
insb
ss
negl
pop
lods
mov
iret
pop
push
or
aam
cmp
imul
aas
adcl
pop
jl
leave
test
mov
enter
mov
inc
xchg
adc
lea
in
sub
call
adc
insb
inc
and
mov
or
fs
sbb
cmpsl
push
push
fidivl
out
scas
test
popaw
dec
jo
push
shll
push
neg
jp
lahf
pop
fldt
xor
cmp
bound
pop
pop
mov
addr16
inc
jne
inc
in
subl
adc
js
stos
push
mov
xorl
push
lcall
jbe
mov
xor
or
xor
jecxz
xchg
xchg
mov
sub
push
outsb
push
cli
fs
daa
sub
inc
and
test
inc
test
setno
sub
aad
in
mov
push
jmp
enter
lods
jnp
in
inc
ficompl
bound
jae
pop
adc
adc
mov
sub
nop
les
push
cld
xlat
popa
mov
and
push
gs
and
xor
sub
es
lds
inc
pop
cmc
into
xlat
arpl
inc
and
stos
arpl
cmpb
xlat
lahf
fs
sub
gs
test
addb
call
jg
inc
in
fdiv
cmpsl
bswap
or
fsubrs
daa
push
and
jo
test
lcall
lret
arpl
xor
lods
or
mov
repz
jnp
jne
mov
nop
mov
insl
jge
fidivs
fnstsw
mov
loopne
sti
ds
jge
pop
out
lock
push
nop
add
jbe
xchg
popf
inc
sub
std
in
orl
mov
sbb
stc
repnz
mov
pop
cmp
pop
mov
mov
jl
mov
decl
or
shr
lods
push
repz
jmp
icebp
push
push
push
movsb
jge
cmp
ds
inc
jle
scas
icebp
xor
sbb
arpl
dec
xor
out
jo
pop
gs
rcll
inc
mov
rorb
xchg
cmpsl
jno
idivl
mov
cmp
jge
arpl
loop
lahf
push
adc
xor
sbb
xchg
imul
inc
inc
popf
adc
add
int3
hlt
in
xchg
fwait
push
and
inc
xor
add
les
repnz
in
je
mov
lret
sub
push
sbb
sbb
pop
and
repnz
js
add
xchg
out
xor
add
and
fwait
ret
pusha
pop
pop
mov
fistpll
xor
mov
add
adc
inc
adc
push
adc
nop
push
lcall
jns
cmp
jne
loopne
sub
gs
or
aam
mov
jecxz
movsl
mov
icebp
sub
adc
shlb
lods
pop
movb
cmc
loop
and
sub
or
xorb
ss
inc
ret
pop
shl
or
dec
ret
sub
xchg
icebp
xchg
xor
mov
out
add
push
adc
mov
push
and
mov
fadd
fsubrs
loope
mov
jbe
sbb
xor
cli
test
fistpll
iret
mov
cmp
push
xchg
mov
arpl
or
in
jge
cmp
mov
call
divb
xchg
push
mov
in
lock
sbb
lcall
xchg
outsl
jno
stos
repz
mov
scas
mov
jl
mov
aam
ret
sbb
dec
out
push
xor
mov
sbbb
stos
add
pop
pop
inc
nop
ficoml
sarl
fidivrs
pop
sbb
push
fidivrs
cmpsl
lea
push
sbbb
test
fadds
or
or
and
jb
inc
test
inc
jmp
aam
ret
push
xchg
jo
add
mov
lcall
jns
in
pop
or
or
cmp
hlt
bound
jno
sub
mov
fsubrp
fcmove
enter
sub
jmp
pop
or
std
jno
insb
sti
imul
xchg
loop
imul
pop
push
inc
clc
cld
cmpsl
push
movsb
out
in
jno
pop
lahf
xchg
out
lock
js
jp
loope
or
sub
imul
hlt
cld
divb
movsl
test
pop
inc
or
outsb
mov
nop
push
mov
mov
notb
lret
dec
cmp
ret
js
mov
imul
push
add
mov
rcrl
push
rol
in
mov
enter
lret
movl
test
test
xor
inc
pop
xlat
cmp
push
mov
and
inc
push
inc
nop
pop
pop
loope
push
sarl
imul
lods
js
rorl
dec
cs
fs
sbb
sbb
mov
sbbl
mov
test
hlt
fbstp
cmpsl
sarl
pop
in
xchg
inc
jmp
ret
push
mov
daa
lcall
sti
sti
and
mov
imul
fwait
mov
bound
cmpl
jmp
xchg
xchg
jb
std
pop
pop
sub
test
popf
push
xchg
sahf
and
mov
fisttpll
mov
aas
fwait
es
inc
test
push
and
add
ss
stos
push
rcll
repz
jle
mov
out
add
movsw
mov
xchg
mov
repz
fldenv
inc
mov
jg
sbb
sbb
movsl
inc
mov
pop
xlat
lock
pushf
mov
pop
in
fldenv
aam
fstp
lret
push
out
adc
or
inc
subl
outsl
gs
ds
mov
jl
adc
xor
test
jge
xorb
sbb
cmp
sub
pop
enter
pop
movups
fists
clc
or
inc
xchg
call
mov
jns
mov
lret
std
adc
jp
pop
sti
les
sub
mov
push
mov
pop
push
orl
idivb
mov
and
call
push
adc
push
popf
sub
adc
inc
xchg
pop
xor
out
sub
push
nop
repnz
add
iret
aaa
adc
sarl
imul
add
mov
lock
popa
pop
fnstcw
jle
adcl
pop
jmp
je
daa
mov
inc
push
loop
push
add
inc
stos
add
loopne
pop
sub
pop
adcl
mov
inc
ljmp
dec
mov
std
lret
cwtl
addr16
inc
xchg
sysenter
or
aas
fstpt
fldcw
xchg
leave
loopne
das
add
and
mov
sbb
fldl
int3
js
inc
lahf
pop
xor
cmp
mov
lcall
sbb
mov
jecxz
xor
sarb
or
fstpl
jp
pop
mov
frstor
mov
mov
iret
loopne
and
scas
mov
add
mov
or
ds
arpl
rolb
push
popf
add
jge
stos
and
cld
pop
mov
insl
mov
ja
loop
and
and
and
sub
fcompl
mov
aam
aaa
and
xlat
mov
cmp
adc
push
pop
mov
outsb
mov
cli
mov
inc
mov
loop
frstor
test
sbb
rorb
xor
adc
in
push
and
data16
fucomi
sahf
xchg
xor
inc
mov
cmp
call
add
lods
xor
cmp
add
mov
dec
in
ret
pop
imul
fs
push
loopnew
pop
push
pop
mov
imul
nop
dec
lds
ljmp
pop
lahf
jmp
add
rcl
pop
push
pop
pop
mov
int
in
lea
dec
adc
test
fstpl
jne
fbstp
cmp
in
jnp
dec
out
in
push
ret
int3
mov
dec
push
inc
aaa
mov
notl
jg
mov
mov
fsubp
inc
push
adc
inc
enter
dec
pop
stc
fldenv
cmpsl
fcmovu
mov
mov
xchg
arpl
lcall
jecxz
imul
stos
sarl
dec
lods
idiv
test
pop
test
dec
lods
es
or
pop
push
call
sbb
daa
loope
jg
inc
jg
shl
lock
fmull
loope
pop
inc
pop
je
fwait
sbb
hlt
cmp
test
cli
in
outsl
cmpsl
imul
lret
jl
jmp
dec
push
in
jmp
inc
xlat
movsb
fdivr
in
push
test
in
xor
lret
stos
dec
mov
aaa
cs
push
sbb
sub
and
je
shrb
pop
fisttpll
aam
or
dec
mul
cs
inc
jmp
push
sahf
inc
inc
loopne
insb
ret
movsl
in
mov
inc
push
repz
pop
mov
sbb
mov
rcrl
xor
js
push
rcl
xchg
adc
sbb
cltd
push
adc
add
inc
sub
jo
js
jo
sub
adc
push
mov
inc
gs
or
pop
jns
fbld
mov
xchg
inc
popa
icebp
aas
js
mov
xchg
jne
sub
sub
aaa
inc
test
sahf
lods
data16
mov
pop
xchg
mov
icebp
in
fidivl
cli
jmp
xchg
add
lcall
into
cmp
or
jg
sbb
dec
icebp
outsb
gs
pop
fstpt
in
inc
das
out
sub
mov
call
shr
enter
movsb
pop
lcall
mov
fs
xor
cmp
or
inc
aam
inc
inc
mov
mov
adc
mov
repz
call
test
jg
push
movsb
pop
test
fsubrs
xor
lret
dec
in
jno
in
dec
stos
push
ficompl
lcall
in
mov
mov
scas
stos
notb
fwait
sub
mov
jle
xor
jbe
xchg
call
xor
cmc
jg
in
imul
xchg
pusha
inc
and
fldl
inc
into
inc
mov
add
dec
cld
mov
ss
jl
clc
cmpsb
pop
sbb
test
pop
loope
arpl
adcl
jno
mov
mov
out
daa
rcrl
testb
inc
mov
loope
xchg
add
pop
mov
arpl
xor
pop
clc
es
frstor
and
into
out
mov
push
xorb
repnz
jl
jle
movl
sub
test
sub
sar
aad
cmp
movq
ljmp
cmc
bound
dec
int
imul
mov
pop
mov
ja
push
add
adc
shll
je
push
hlt
scas
sahf
cmp
shl
sbb
mov
cmpsb
add
xor
sarl
shrb
out
sub
mov
lods
inc
ret
cltd
stc
fcoms
add
fcomp
dec
dec
fdivr
popf
fs
rclb
aad
xchg
inc
js
in
add
je
test
paddd
std
mov
xor
pop
xor
and
xchg
stos
scas
add
inc
push
mov
daa
xchg
pop
inc
xchg
leave
ficoms
ljmp
xor
pushf
mov
jp
test
and
lret
test
js
push
sub
xchg
aas
mov
lods
or
cld
push
std
out
sbb
push
es
cmp
xor
gs
sub
int
mov
push
push
mov
sahf
adc
insb
push
jp
pushf
and
mov
sub
and
push
push
push
or
sub
testl
adc
lret
fcoms
lret
or
xchg
adc
arpl
dec
test
mov
jno
or
xchg
data16
mov
iret
and
sub
sbb
in
mov
sti
stos
daa
enter
fstpt
pop
adc
pop
jb
sbb
fwait
push
decb
xlat
idiv
cmc
das
lret
daa
cwtl
sbbb
cmpsb
and
pop
inc
pop
sbb
mov
or
lahf
stos
sub
rorb
leave
stos
imul
fdivs
jl
mov
dec
loop
and
fidivrs
jbe
xor
and
adc
mov
add
aaa
cmp
lahf
sbb
pop
out
add
inc
repnz
inc
pop
int
sbb
das
popl
pop
mov
arpl
test
mov
inc
push
imul
addr16
aas
mul
sbb
test
cmp
scas
insl
ret
push
repnz
jno
inc
or
adc
xorb
sub
lret
push
dec
es
insb
test
inc
adc
jle
mov
pushf
xchg
and
lret
fs
test
gs
lret
repnz
or
jae
fcmovnbe
aas
add
mov
loop
fbld
adc
inc
xlat
jmp
or
movsl
and
ja
and
fldenv
faddp
cmpsl
xchg
ss
gs
jae
in
mov
outsb
inc
into
adc
cld
arpl
cmp
cmp
dec
loop
jp
insl
leave
hlt
push
xor
and
add
xchg
enter
out
add
fistps
clc
and
pop
dec
sti
out
dec
std
fldt
std
dec
popa
int3
jge
cmc
out
mov
lock
neg
sti
ljmp
sbb
sub
stos
fistpl
xor
mov
add
popa
pop
and
add
filds
fistpll
sub
stos
add
fstl
das
push
or
sub
push
aam
idiv
dec
cli
xor
in
sub
out
les
roll
add
ret
mov
arpl
and
jno
jg
loop
add
enter
scas
test
or
adc
cmp
and
clc
xor
rol
sub
cmp
in
frstor
fisubs
xor
rcrb
cmp
cmp
icebp
call
and
xorb
push
mull
sahf
push
sub
ret
add
cli
jecxz
ret
icebp
out
es
ret
xor
in
iret
vcvttps2dq
sub
adc
push
data16
in
pop
mov
xlat
xchg
les
in
cmp
cli
cmp
mov
pop
nop
or
loopne
popa
jle
xor
insb
testl
xchg
mov
xchg
nop
sub
ss
mov
push
xchg
cli
cmp
jp
adc
movsb
jo
arpl
icebp
je
fwait
ret
mov
mov
push
or
aas
icebp
sub
int3
xchg
pusha
pavgb
stos
inc
aaa
fadds
dec
or
insb
xchg
jae
xchg
loope
add
jo
cltd
and
lcall
sbb
cmc
daa
mov
out
push
or
repz
jo
xchg
jle
inc
and
inc
dec
jne
std
fwait
mov
mov
or
addr16
add
xorl
pop
or
aam
adcl
adc
insl
aaa
movsl
into
movsl
dec
xchg
je
test
jle
mov
daa
pop
pop
repnz
mov
fwait
in
or
inc
adc
out
adc
xchg
lods
or
sti
pop
fsubrs
fwait
mov
out
lea
xor
inc
mov
sahf
push
insb
and
lahf
xor
mov
inc
popf
mov
and
pop
arpl
lret
mov
push
dec
hlt
fsts
movsl
fmul
or
sub
test
in
outsl
dec
fildll
mov
inc
jae
xchg
out
or
mov
push
in
and
dec
cltd
in
sbbl
addr16
lret
push
sub
cmp
test
pop
pusha
and
inc
nop
loopne
das
jne
xchg
daa
jp
pusha
loopne
les
test
cmp
or
fwait
mov
les
int3
adc
clc
loop
sarb
imul
clc
cltd
and
adc
sub
and
xor
data16
js
out
out
mov
mov
jbe
mov
adc
std
inc
mov
inc
jle
inc
jmp
mov
cld
fdivr
out
mov
