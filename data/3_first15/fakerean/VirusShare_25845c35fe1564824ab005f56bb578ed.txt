add
xlat
add
pop
mov
icebp
adc
mov
int3
stos
lahf
cwtl
xor
cmp
insl
xchg
sarl
pop
and
rorl
xchg
lods
add
cmpsb
in
dec
test
in
and
out
cmp
lods
adc
sbb
ja
cmp
repz
dec
mov
call
test
mov
jnp
loop
sbb
stc
loop
test
in
lock
pop
cmp
jge
mov
cmp
sahf
mov
mov
add
pop
scas
xlat
sahf
sti
add
jmp
jmp
bound
xor
mov
in
fsubs
and
push
xchg
addb
jae
jnp
xchg
sub
xor
outsb
dec
or
xchg
js
xor
lret
jmp
in
stos
add
jp
insb
push
shr
mulb
arpl
mov
aas
aam
das
decb
sbb
cmpsb
mov
xchg
outsl
push
mov
insl
leave
aaa
mov
into
mov
filds
sub
pop
xchg
lcall
aam
test
mov
and
in
popa
xchg
out
into
push
push
insb
cmp
stc
jmp
fdivr
movl
testl
add
cmp
aaa
popa
add
lea
inc
sub
sub
call
add
push
mov
mov
sub
xor
lea
dec
add
mov
mov
add
add
mov
inc
sub
mov
dec
add
inc
sub
mov
and
add
add
sub
lea
mov
add
sub
test
je
movzwl
sub
mov
mov
dec
sub
sub
sub
mov
mov
add
sub
sub
add
lea
dec
sub
repnz
sub
add
mov
jmp
lea
sub
add
sub
mov
lea
add
dec
add
sub
mov
and
imul
add
add
mov
add
sub
pop
sub
add
pop
jmp
push
mov
xor
movswl
inc
xor
add
lea
push
or
sub
push
sub
sub
push
call
mov
jmp
sub
movzbl
mov
sub
add
mov
sub
mov
mov
add
mov
sub
sub
xor
mov
lea
push
xor
sub
push
inc
mov
mov
mov
inc
dec
pop
sub
sub
pop
add
mov
cmp
jne
sub
push
inc
add
mov
mov
push
mov
push
sub
xor
xor
xor
xor
add
mov
xor
sub
add
push
movsbl
mov
xor
mov
mov
xor
mov
dec
xor
movzbl
add
mov
movswl
add
sub
sub
add
add
mov
movzbl
inc
add
inc
mov
mov
add
xor
inc
add
sub
mov
mov
xor
inc
add
cmp
jb
add
xor
mov
mov
inc
inc
sub
movzwl
inc
sub
mov
mov
xor
sub
dec
sub
mov
mov
mov
cmp
jb
xor
xor
add
sub
add
mov
add
dec
inc
add
mov
xor
xor
sub
inc
xor
sub
mov
pop
dec
dec
test
jbe
add
sub
add
inc
and
mov
push
incl
add
imul
pop
dec
sub
mov
push
movzwl
add
movzbl
mov
and
mov
mov
imul
movzbl
dec
inc
add
sub
and
add
inc
mov
sub
mov
mov
mov
mov
add
pop
jmp
sub
dec
inc
mov
mov
mov
nop
jne
inc
mov
dec
and
add
imul
movzwl
add
sub
mov
mov
dec
sub
sub
add
lea
inc
add
mov
inc
sub
test
jbe
lea
inc
sub
sub
mov
lea
mov
sub
xor
sub
mov
push
mov
xor
dec
pop
add
add
xor
add
mov
mov
movzbl
movswl
movzbl
sub
add
add
mov
and
add
add
mov
add
sub
movzbl
mov
mov
add
mov
sub
add
movzbl
sub
mov
add
and
sub
and
sub
add
movzbl
mov
xor
add
sub
inc
dec
add
mov
sub
add
add
dec
jne
add
mov
mov
dec
imul
pop
sub
add
pop
mov
pop
add
add
and
mov
mov
add
add
add
jmp
push
push
add
sub
push
push
mov
and
push
add
push
add
sub
mov
lea
dec
dec
imul
mov
mov
mov
push
dec
inc
xor
add
add
push
mov
push
sub
inc
push
or
sub
mov
add
add
call
add
add
mov
mov
inc
or
sub
ret
push
mov
push
mov
mov
inc
je
movswl
dec
sub
xor
mov
mov
mov
mov
inc
dec
mov
movzwl
mov
lea
mov
cmp
jne
xor
add
imul
movswl
add
sub
mov
mov
add
xor
lea
inc
jmp
add
push
mov
mov
add
sub
test
je
add
add
mov
movzbl
dec
sub
sub
mov
repnz
sub
movzwl
pop
add
jmp
sub
pop
mov
add
or
sub
sub
add
movb
mov
inc
sub
dec
jne
add
pop
pop
ret
mov
xor
add
sub
add
sub
mov
mov
add
mov
add
sub
mov
mov
call
mov
add
add
sub
add
mov
inc
dec
add
sub
mov
sub
add
sub
add
lea
sub
call
add
push
add
call
add
pop
lea
sub
call
sub
or
add
push
mov
imul
sub
inc
mov
mov
xor
sub
add
mov
mov
sub
add
call
xor
add
mov
pop
add
imul
add
inc
pop
add
mov
pop
sub
add
pop
add
add
mov
pop
and
pop
inc
sub
mov
mov
mov
pushl
dec
sub
push
sub
jmp
mov
push
push
inc
and
push
dec
sub
push
lea
push
movzbl
xor
mov
dec
mov
push
jmp
push
mov
dec
sub
add
sub
mov
sub
add
sub
add
mov
add
sub
inc
mov
mov
dec
sub
movsbl
sub
pop
pop
jmp
push
call
mov
add
add
add
push
add
sub
call
mov
movsbl
inc
pop
sub
mov
lea
mov
sub
add
test
je
sub
add
mov
dec
inc
dec
lea
add
mov
test
je
add
sub
inc
mov
mov
inc
sub
int3
add
add
mov
movzbl
xor
add
mov
lea
dec
add
add
mov
lea
inc
dec
movzwl
add
lea
xor
and
movsbl
sub
lea
add
add
add
mov
mov
inc
add
sub
add
mov
sub
movzbl
imul
mov
mov
imul
add
or
mov
lea
sub
sub
add
mov
mov
xor
and
xor
add
mov
or
sub
call
add
add
lea
add
dec
sub
mov
lea
add
imul
add
add
mov
dec
add
add
sub
mov
dec
pop
inc
add
ret
sub
mov
or
inc
dec
push
add
mov
push
sub
mov
jmp
mov
add
xor
lret
mov
jno
arpl
rcrl
loopne
test
push
ret
jle
xor
fcmovnb
lock
imul
js
daa
xchg
sub
adc
add
gs
xor
mov
jnp
mov
enter
les
out
sahf
cmpsl
repnz
lcall
test
inc
xor
or
aas
xchg
push
jmp
adc
rcr
jns
stos
xchg
xchg
jecxz
loopne
scas
scas
mov
jae
aad
jle
mov
stos
adc
ret
pop
ljmp
and
repz
out
pusha
mov
arpl
test
add
xor
pop
jle
inc
xchg
roll
clc
in
mov
mov
dec
jecxz
ficoml
or
out
lods
testb
push
xor
gs
sahf
inc
mov
or
std
cld
and
or
mov
xor
mov
dec
jmp
inc
pop
divl
push
out
pop
push
sbb
pop
sahf
and
aad
lods
dec
cmp
daa
push
into
shrl
pop
in
pushf
imul
cmp
xor
iret
xchg
mov
mov
ficomps
out
ret
divb
orl
aaa
cmp
stos
mov
mov
cmp
sbb
jle
adc
sub
and
push
pop
mov
ljmp
enter
stos
das
jp
insl
fistl
cs
gs
mov
sub
ficoml
popf
adc
or
rcrl
add
pop
pop
push
cmp
loop
dec
xchg
fsubrl
lds
push
jg
pop
pushf
imul
inc
push
fmull
mov
aam
xor
aas
push
in
dec
add
xchg
xchg
dec
or
and
or
mov
enter
out
add
mov
call
test
mov
push
das
aas
lods
loope
mov
je
jno
dec
push
dec
enter
fimuls
jmp
fwait
pop
pop
xor
and
enter
movsw
in
inc
mov
pop
ret
jg
adc
sbb
fwait
pushf
push
adc
xchg
sub
or
pop
and
jg
loop
scas
in
cmp
add
and
mov
stos
nop
lahf
int
jb
push
jge
cmp
jmp
push
xchg
inc
sub
test
es
add
outsb
test
or
iret
ljmp
jbe
in
sub
dec
or
xor
and
sbb
adc
cmp
sub
add
lcall
ror
in
jmp
lock
dec
fdiv
sub
insb
loope
icebp
test
xchg
fs
sub
dec
push
xchg
pop
rcll
xchg
into
dec
rorl
dec
mov
into
jb
jg
xor
sub
push
or
mov
xchg
adc
xchg
scas
jl
pusha
je
add
jecxz
repnz
push
xchg
aad
push
popf
rol
sub
cwtl
pop
jp
js
and
mov
or
push
in
cmp
dec
mov
nop
xor
or
push
imul
add
jno
cs
sbb
push
mov
ret
sub
fidivrs
ror
hlt
cmp
pop
movl
sub
sbb
std
out
out
mov
xchg
pop
or
loop
fdivrl
andb
das
test
push
pop
mulb
mov
sbb
in
jne
hlt
data16
inc
scas
aam
rcll
pop
push
mov
popf
xor
push
sbbl
mov
push
sub
sub
xor
xlat
dec
adc
std
jne
sub
push
jb
mov
pop
inc
lock
pop
sub
push
popf
xchg
xchg
pusha
xchg
mov
cmpsb
sbb
int
movsl
inc
pop
fsts
fldenv
adc
dec
xlat
lret
xchg
imul
shrl
daa
add
cmp
jg
lret
dec
add
inc
cld
repnz
pop
jnp
icebp
andb
cmc
cmc
inc
movsl
adc
movlps
lock
stos
not
lahf
sub
lret
sbb
mov
cmp
sbbl
push
stc
test
cmp
mov
adcb
push
cltd
sub
mov
push
dec
jbe
cmp
mov
inc
jnp
dec
jnp
out
xchg
ljmp
sbb
sub
adc
pop
gs
mov
jle
push
mov
shlb
scas
xchg
mov
mov
bound
ds
push
mov
add
lahf
sbb
mov
out
bound
jl
aas
movsb
and
clc
ja
jb
push
ja
xchg
inc
gs
loope
xchg
test
jbe
pop
dec
aad
dec
inc
stos
fbld
out
sbb
push
ljmp
push
pop
mov
adc
call
in
leave
ds
leave
les
or
rclb
mov
jmp
dec
ds
in
add
mov
mov
shr
adc
es
sar
icebp
testb
mov
or
aaa
inc
rclb
dec
sbb
mov
cmc
fadd
leave
aaa
scas
inc
das
ja
imul
enter
loope
es
andl
push
sub
xor
lcall
dec
mov
xchg
pop
inc
mov
stos
and
sub
sub
into
bound
pop
mov
loopne
mov
jecxz
adc
pop
aam
incl
mov
pop
repz
repnz
jb
push
jle
fmull
or
les
fstpt
aam
std
adcb
stos
in
aad
andl
pop
cltd
xchg
mov
inc
cmpsb
aam
jne
sbb
cltd
xchg
pop
add
rcr
cmp
outsl
rcll
scas
cmp
sub
outsb
aad
inc
mov
sub
hlt
sub
fs
xor
cwtl
pop
add
stos
sbb
mov
decb
stos
js
xlat
jns
xchg
negb
pushl
out
mov
mov
mov
pop
sub
jg
ret
ret
xchg
sub
daa
jmp
loope
add
xchg
test
daa
loopne
lret
add
mov
gs
lods
sbb
adc
in
mov
sub
mov
mov
test
scas
dec
movsl
or
fildll
fsubl
cmp
pop
and
and
jp
mov
jnp
fldl
jb
sbb
add
push
in
mov
jns
jle
mov
jg
shlb
adc
dec
roll
sbb
cmp
fidivrl
rol
mov
xor
add
mov
testw
add
test
dec
adc
sbb
sub
insb
inc
jle
stos
xor
dec
push
push
aam
mov
int
pop
pushf
lds
popa
in
and
test
mov
orb
jecxz
push
loop
or
add
xchg
lret
jbe
jns
adc
jmp
dec
movsb
out
sti
sbb
aad
cmpsb
enter
icebp
shlb
mov
jbe
mov
pop
and
sub
mov
xchg
mov
adc
int3
xchg
pushf
aad
add
cmp
sub
jl
icebp
push
adc
jno
cmpsb
and
jb
imul
rorb
fistps
adcl
add
push
daa
out
add
xchg
lods
scas
mov
mov
pop
fnstsw
xor
out
and
subb
jo
dec
std
aad
dec
or
imul
fs
pop
cltd
je
xor
push
xchg
mov
rorb
mov
incl
push
sbb
in
dec
push
sbb
mov
ret
stos
bound
mov
fyl2xp1
mov
sub
outsl
ret
cmp
loop
into
iret
jae
cwtl
std
out
mov
xchg
imulb
dec
xchg
cmp
cwtl
mov
into
push
inc
test
repz
fcmovnbe
pop
cs
xor
xchg
cli
mov
jge
insb
divl
mov
outsl
gs
xchg
mov
jp
rcrl
aam
out
pop
ljmp
stc
aaa
xchg
cs
loope
xor
call
icebp
dec
add
push
xorl
xor
lahf
inc
loope
popa
xor
pop
xlat
divb
in
jmp
adc
ja
adc
cmpsl
dec
xor
je
jmp
mov
cld
or
ret
inc
loop
push
je
sub
add
outsl
hlt
int
cmp
in
sarl
adc
dec
mov
dec
fdivs
push
sti
push
sub
loop
in
sub
and
xor
pcmpgtd
fldenv
xor
push
mov
jecxz
in
mov
pop
in
rcr
das
out
cmp
idivb
mov
nop
dec
adc
xor
push
add
inc
mov
mov
push
movsb
jno
xchg
jl
push
mov
outsb
js
sub
mov
bound
sbb
lahf
icebp
dec
sub
mov
in
into
popa
test
js
sbb
pop
and
and
push
inc
xchg
rol
fwait
cmp
jle
sbb
push
lods
xor
cmp
mov
aas
mov
cmp
mov
pop
dec
lods
imul
nop
push
mov
jp
mov
push
fs
arpl
sbb
andl
mov
cmp
rclb
dec
aam
and
xor
cmp
or
out
sti
addr16
mov
jmp
and
jp
nop
stos
inc
sub
repz
mov
mov
xchg
mov
cld
shlw
scas
repnz
enter
aam
push
jb
test
js
mov
sti
pop
ficoms
xchg
gs
jno
pop
pop
rcll
adc
inc
lock
add
xchg
pop
mov
lock
xor
jmp
fidivl
fldenv
jge
ss
rcrl
push
cmp
scas
imul
dec
fcompl
out
leave
xlat
in
stos
xchg
dec
scas
loop
int3
mov
jge
xor
je
es
mov
sbb
clc
int3
adc
add
jno
arpl
rcrl
lcall
movsl
addr16
es
pop
test
mov
fbstp
mov
jns
jp
cs
aam
jmp
loope
push
adc
inc
mov
pusha
stos
aaa
cmp
cmp
add
add
loop
incb
xlat
sti
and
mov
inc
cli
cmpb
or
clc
push
insb
xor
mov
pop
incb
and
in
pop
pop
cld
mov
mov
stc
sbb
mov
testl
repnz
xchg
hlt
sub
pop
mov
sub
adc
sub
add
jns
jg
sti
lods
and
pop
lods
dec
int
mov
cmp
test
std
lret
dec
lret
cmp
pusha
push
add
bound
and
mov
cmpsl
jne
inc
in
cmp
repnz
cmp
shll
cmp
xchg
int
fisubrs
add
mov
xor
xchg
loope
push
push
aad
insb
int
jp
lret
adc
dec
xor
call
or
orl
sahf
jno
pop
jnp
xor
popf
sarb
cmpb
or
mov
mov
divb
ficoms
sbb
jb
mov
push
mov
insb
cli
dec
into
and
or
fidivrs
sti
int3
sub
jg
push
jo
mov
cs
out
bound
movsl
rclb
mov
sub
add
push
xchg
roll
jmp
cltd
or
mov
insb
adc
mov
or
push
push
out
dec
mov
pop
inc
sbb
fsubl
fisubrs
sub
pop
je
movsl
mov
or
out
xlat
push
or
ret
inc
mov
push
cmpsb
cli
push
xor
movsb
in
repnz
mov
cmp
inc
sbb
insb
jne
xor
cmp
fisubrs
xor
mov
xchg
shrl
push
lea
ror
xlat
movsb
lock
jmp
cmpsl
adc
addr16
imul
test
clc
push
xor
or
add
push
mov
movsl
push
or
sub
testl
push
add
inc
enter
mov
lret
pop
cmp
jo
leave
movsl
jo
mov
sahf
es
jecxz
jge
cmp
arpl
and
sbbb
out
xchg
mov
mul
inc
fildll
mov
push
dec
mov
enter
pop
imul
mov
std
mov
mov
call
notl
xchg
xor
jp
aad
and
add
data16
xor
int3
jb
loopne
mov
sbb
fmull
in
and
push
lcall
stos
movb
xchg
js
into
icebp
cmc
sub
nop
jecxz
shll
and
fisttps
jo
cld
mul
xor
add
dec
sub
cmpb
lret
jge
or
mov
testl
addb
daa
aaa
pop
jl
bound
mov
mov
lds
rcr
std
mov
jae
add
aad
jecxz
cmpsl
jl
xchg
iret
mov
sbb
vgatherpf1dps
rclb
or
jb
call
or
fidivrs
decl
inc
sbb
xor
xlat
dec
setp
mov
cli
aaa
in
sbb
jbe
aaa
movl
fimuls
mov
mulb
and
insb
pop
xor
sbb
xor
repz
int
xchg
ret
movsb
call
mov
int3
jae
outsl
sti
stos
aas
xor
movsl
iret
xchg
movsl
lods
and
or
push
fstp
test
sub
dec
fldt
xor
or
add
mov
pop
push
jno
jnp
jecxz
dec
jb
mov
pop
das
or
xchg
cmp
aaa
pop
mov
fidivrs
jg
push
das
outsb
in
sbb
je
sarb
cmp
sub
mov
popa
push
dec
cld
jl
jns
rorb
movsl
xchg
xlat
or
cmp
inc
xchg
xchg
fcomi
jne
daa
repz
add
sub
mov
loope
in
push
sub
rclb
leave
cmp
stc
nop
mov
imull
scas
xchg
fmull
je
and
dec
daa
fldl
adc
mov
test
loop
dec
sub
add
jb
jmp
push
jmp
mov
adc
push
dec
fisttpll
sub
mov
add
push
aam
dec
sti
pop
mov
cld
shlb
jbe
xor
gs
add
jne
or
push
subb
add
aaa
icebp
sbb
cmp
push
lret
mov
out
pushf
xchg
fs
ja
in
mov
test
adc
jp
or
and
notl
or
or
out
lret
jle
xor
adc
mov
imul
cs
xchg
mov
outsb
mov
push
cmpb
and
mov
dec
lret
sarb
sub
sbb
in
in
or
sbb
sbb
sub
enter
lds
aaa
xchg
push
stc
pushf
and
in
add
jecxz
cwtl
push
cmp
movsb
hlt
xchg
out
push
dec
sub
xor
jno
inc
das
mov
imul
inc
mov
or
loope
lahf
test
test
sub
loop
loopne
rolb
sbb
or
mov
orps
cmp
lock
nop
mov
addr16
dec
mov
add
dec
push
outsb
pop
cmpb
imul
movsb
adc
sub
sahf
daa
bound
xor
rep
jbe
mov
adc
mov
cmp
stos
adc
popf
mov
inc
cmp
outsb
jae
dec
cmpsl
fsubrs
mov
popf
mov
decl
adc
clc
cld
mov
fld
out
add
mov
mov
lods
cmpsl
pop
decb
out
adc
lods
ficomps
and
and
ret
mov
cs
mov
lock
mov
es
ljmp
sbb
lds
dec
mov
in
cmpsl
jge
mov
mov
pop
sti
das
ja
add
fstpt
jecxz
popa
out
int3
out
xor
mov
or
js
sti
cmp
sarl
movsb
icebp
int
mov
mov
ds
mov
push
ffree
cld
std
xor
sti
fisttps
cli
xchg
dec
adc
sbb
xor
fisttpll
push
mov
insb
jnp
ss
lahf
xchg
pop
rcrb
scas
out
sbb
fisubl
repnz
loope
in
jae
into
push
xchg
int3
pop
icebp
and
cmp
or
out
xor
hlt
inc
push
int3
mov
test
mov
loope
inc
mov
xlat
adc
mov
inc
ja
div
or
xchg
pop
in
lret
fldl
mov
fdivs
test
addr16
into
sub
dec
mov
xor
xchg
xor
sbb
out
vmread
inc
jns
mov
xor
push
lcall
das
fiadds
mov
into
or
xor
mov
lock
cmp
ss
outsl
or
ret
mov
outsb
lret
sub
lret
mov
scas
ret
and
xchg
in
ljmp
hlt
xchg
push
call
int
mul
jmp
mov
or
insb
orl
mov
loope
std
and
ret
cmpsl
ja
and
cmpsb
sbbb
fcmovb
and
mov
xor
les
and
inc
or
push
push
mov
mov
pop
pusha
lret
xlat
shrl
adc
cmp
mov
and
imul
test
push
fcoms
mov
adc
adc
fwait
jmp
push
mov
sub
jecxz
mov
hlt
and
cmp
jnp
jnp
sbb
mov
fs
sbb
in
mov
imul
xchg
adc
sbbb
and
jmp
fistpl
add
inc
jo
adc
cmp
imul
dec
mov
imul
lcall
xchg
fwait
or
in
pop
les
arpl
jle
jbe
sbb
xchg
pop
mov
xchg
dec
jecxz
jp
add
mov
loopne
lods
mov
repz
cwtl
jno
cmpsb
adc
push
pop
out
movsl
in
jp
aaa
push
inc
loope
cmpsl
lds
xor
cmpsb
stc
fstl
ret
push
scas
jb
lahf
mov
ror
mov
jo
or
cmpsb
or
mov
adc
arpl
sub
mov
popa
xor
sbb
mov
sub
fistps
hlt
mov
loop
lahf
inc
adc
lods
sbb
fdivrs
fidivl
scas
or
fdivl
pop
xchg
out
xchg
mov
jg
push
in
mov
pop
iret
sti
ljmp
jmp
push
cmc
add
gs
xor
fldenv
xorb
inc
or
outsb
mov
ret
mov
rcrl
bnd
addl
popa
fists
dec
scas
idiv
aaa
cmp
push
pop
pop
fdivrl
sbbl
imul
push
movsb
mov
dec
add
adc
jge
adc
aad
and
pop
loop
cld
mov
out
stc
popa
xchg
sbb
mov
add
mov
push
push
mov
cmpl
gs
test
push
xchg
jecxz
aaa
in
shlb
cmp
cmp
pop
ret
lock
or
ja
mov
fldt
js
mov
shrb
pop
dec
shl
or
repz
cmp
in
jne
jnp
push
sbb
xchg
sub
mov
aam
pop
xor
cmpsb
inc
stc
test
mov
test
jl
and
pop
sub
mov
jbe
mov
xor
std
adcb
sti
das
incb
inc
cltd
jle
arpl
jne
ja
call
call
xor
sbb
xchg
xchg
fmul
data16
xor
jae
test
add
mov
xchg
insl
lret
push
pop
hlt
sbb
imul
scas
inc
je
daa
pushf
les
inc
add
xor
in
inc
leave
cmpsl
mov
sub
mov
movsl
sub
inc
lods
int
or
test
inc
dec
in
enter
addb
cwtl
shlb
mov
xchg
mov
adc
scas
pop
mov
pop
adc
mov
add
pop
mov
cmpb
daa
adc
icebp
add
fs
or
mov
jae
or
popa
mov
leave
lahf
les
repz
dec
mov
std
jns
inc
xor
xchg
cltd
xor
or
adc
sbb
out
push
das
iret
mov
add
lret
rcl
fadds
sbb
jb
rorb
loop
cmc
loope
rolb
leave
jle
jno
cs
lcall
outsb
xchg
ss
jge
outsb
push
jl
push
dec
insb
jne
jns
scas
nop
and
push
add
clc
cmc
mov
sub
mov
pop
xor
out
fnstenv
or
popf
rol
dec
cmp
fwait
test
gs
adc
jle
call
dec
es
xchg
repnz
add
jb
xchg
mov
mov
pop
sti
add
pushf
imul
cmpsl
ss
into
insb
mov
xchg
imul
mov
out
fnclex
or
scas
out
mov
inc
push
fs
xchg
test
out
add
in
xor
sbb
push
push
mov
mov
outsl
roll
mov
cmp
lret
or
test
ljmp
lcall
pop
aas
ss
shll
ret
das
pop
inc
and
mov
in
sbb
inc
sbb
pop
jl
jne
lods
cli
and
repz
jb
loopne
pop
jl
and
jg
and
inc
or
inc
das
xlat
repnz
in
mov
and
adc
fcomi
das
movsl
lods
add
lcall
test
pop
les
lea
sahf
push
ret
push
push
rcrl
xor
xchg
xor
lret
inc
xchg
int3
into
negb
and
in
pop
push
mov
outsb
sbb
cli
pop
cmc
xchg
nop
and
cs
and
or
cmp
stos
xor
xchg
xor
daa
pop
add
test
mov
xacquire
mov
mov
xor
xor
xchg
xchg
pop
xchg
xchg
xor
outsb
pop
mov
xchg
pop
add
shll
mov
add
ds
push
adc
fs
inc
xor
sub
xchg
jb
push
ss
sbb
dec
repz
mov
std
push
push
push
popf
aaa
inc
ret
cmpb
gs
mov
or
push
ret
icebp
xor
sbb
xor
mov
and
jl
sarl
dec
mov
shrl
sbb
loope
dec
cmp
dec
xor
adc
jecxz
les
ss
outsb
mov
mov
cmp
dec
sbbb
add
fwait
jo
add
mov
cmp
sbb
dec
call
inc
pop
movsb
fwait
lahf
add
add
repnz
std
in
mov
cmc
jecxz
sub
ss
sbb
jae
fidivl
mov
sub
sahf
xchg
pop
sbb
adc
cmpsb
mov
pop
into
lods
push
fisttpl
pusha
cmp
mov
mov
ljmp
rcrl
push
or
mov
mov
mov
or
adc
aad
dec
inc
jns
enter
push
adc
add
jge
and
popa
dec
jl
xor
or
jl
push
imul
and
mov
jl
or
cli
xchg
inc
push
dec
divb
mov
sar
dec
mull
sub
jecxz
bnd
pop
adc
outsb
push
push
sti
movsl
fcompl
cs
and
outsl
mov
lret
addb
sar
rorl
add
idiv
sub
xchg
mov
add
sbb
jp
andl
cli
push
cmpsl
es
mov
sbb
or
sbb
je
xchg
popf
popa
divb
pop
xchg
sub
push
aad
add
inc
aad
jbe
add
out
imul
cmc
cmpb
call
jno
mov
mov
stos
lret
push
sbbb
icebp
mov
or
inc
or
test
adc
push
leave
cmc
and
inc
jae
rol
scas
aam
mov
cmp
dec
inc
les
mov
jne
lret
and
xor
mov
inc
sti
lcall
mov
adc
dec
arpl
inc
ret
jecxz
lret
adc
pop
mov
insl
or
pop
lods
inc
xor
xchg
aas
mov
sub
dec
or
mov
cmpsl
dec
mov
inc
pop
cmpsb
in
arpl
mul
insl
push
or
cmp
sub
adc
negl
fsubs
fdivrl
mov
lcall
movsb
aam
mov
lods
call
sahf
mov
repnz
subb
loope
je
call
mov
cwtl
or
std
add
mov
repnz
test
pop
jg
cmp
in
hlt
mov
or
addr16
push
pcmpgtd
push
ret
sbb
push
popf
sub
cwtl
add
xor
ljmp
push
incl
sarb
scas
or
adc
xchg
jle
mov
push
or
and
lcall
and
and
clc
sbb
fwait
and
xchg
pop
adc
rcll
pop
sub
cmp
and
in
bnd
xor
mov
dec
adc
pop
test
sub
rcrb
pushf
sub
jno
mov
mov
cmp
or
push
fcmovbe
leave
enter
jb
sbb
nop
cmp
sbb
mov
sti
aaa
out
dec
sub
cmc
adcb
out
and
imul
ror
out
adc
push
pop
mov
xor
sbb
sub
insl
rcrb
cs
fucomip
pop
pop
cmp
dec
jbe
jge
dec
ret
adc
mov
mov
shrl
jge
jae
and
sbb
sub
and
out
ss
mov
cli
cli
test
mov
cld
and
adc
pop
adc
out
dec
shlb
inc
daa
mov
lods
mov
add
pop
mov
test
or
or
dec
lods
cmp
dec
lcall
dec
pop
adc
mov
jbe
push
popw
sbbw
cli
mov
jnp
dec
or
dec
pop
rcrb
adc
and
cmp
dec
jge
xchg
and
cld
push
pop
ja
or
lret
sarb
test
and
pop
sbb
jae
jnp
pop
mov
inc
std
xor
add
xchg
mov
js
mov
pop
jbe
pusha
push
je
pop
repnz
add
in
movsl
and
jns
icebp
push
rclb
icebp
or
jl
push
dec
dec
ficomps
mov
out
out
jbe
cmpsb
lret
fsubrl
outsl
mov
mov
xchg
adc
xchg
pusha
lret
int3
sub
aam
imul
or
inc
jne
push
xchg
xor
iret
adc
aam
inc
jns
and
nop
addr16
xor
adc
inc
sub
xchg
mov
lods
or
test
xchg
out
popf
xor
lret
std
lods
ljmp
leave
std
pop
loop
push
hlt
mov
add
or
or
jecxz
out
jle
jb
loope
jle
pop
dec
sbb
popf
cmp
dec
pop
pop
shll
scas
lock
stc
sbb
mov
or
mov
js
nop
jno
inc
stos
cltd
jns
fsubrs
notl
loope
jne
jmp
ret
cmpsb
mov
adc
xchg
sub
call
loop
mov
jo
test
inc
push
or
inc
xchg
mov
imul
mov
ss
pop
mov
sub
mov
mov
push
sbb
ljmp
hlt
jns
cmp
xchg
movsl
jg
inc
pusha
add
xchg
out
fmuls
ds
pop
subl
sbb
aas
adc
negb
sahf
outsb
popa
fidivrl
hlt
subb
cmp
pop
into
sarl
sub
fimuls
lea
lods
in
sbb
cmp
sbb
pop
movsb
xchg
out
in
rsm
push
mov
jge
dec
les
xlat
sbb
mov
jge
lods
enter
imul
mov
jmp
insb
inc
insb
mov
negl
dec
and
arpl
or
adc
push
or
shrb
xor
aas
add
addr16
pop
popf
sbb
int3
cmp
xchg
imul
jecxz
pop
imul
adc
mov
mov
test
mov
cmp
out
repz
sub
jmp
scas
shl
push
xlat
shrb
mov
adc
mov
es
sbb
ficompl
aad
mov
mov
push
hlt
and
inc
push
inc
icebp
or
cltd
jno
push
add
add
out
xchg
fldl
cmp
scas
jmp
outsl
addb
mov
jnp
in
push
into
mov
inc
lock
repnz
addr16
mov
or
xchg
aas
push
jno
cmpsb
xchg
lret
mov
xchg
or
insb
mov
push
push
pusha
daa
rcrl
call
dec
add
insb
fsubl
mov
fsts
cmp
push
and
xchg
fldcw
out
jmp
sahf
stc
adc
int3
pop
aas
xchg
bound
outsb
jo
xor
sub
je
into
in
xor
adc
and
mov
repz
pop
cli
ds
shrb
dec
xor
popa
inc
sub
mov
xlat
mov
leave
jnp
cld
mov
out
aaa
std
insl
aaa
dec
movlhps
xor
in
or
xor
and
and
mov
cmpsl
mov
cmc
jmp
insb
cltd
mov
jmp
in
jnp
lods
fdiv
jp
cwtl
shrl
pop
inc
mov
adc
mov
push
jl
mov
lock
lret
std
push
call
sub
mov
cli
inc
movsb
fists
push
shr
ret
pop
fsubrs
xchg
and
dec
jecxz
pop
and
sub
das
sti
and
jp
sub
nop
push
jecxz
aam
xchg
cmp
jge
xor
lea
jecxz
mov
stos
pop
dec
shr
rorb
es
add
add
jl
imul
or
inc
fstps
mov
mov
pop
lds
xor
pop
les
sub
or
inc
and
pop
repnz
pavgw
cmp
insb
push
scas
cmc
and
iret
add
cli
fildl
repz
addr16
jno
in
inc
mov
loope
ljmp
arpl
add
jp
or
clc
imul
add
xchg
add
cmp
fdivp
test
inc
xchg
movsb
jae
pop
outsl
jno
add
push
jle
decb
repnz
insl
cmpsl
gs
imul
lods
sub
frstor
jne
stos
jbe
inc
dec
insl
jno
js
aas
sub
mov
fs
and
or
fildll
lds
loope
movsl
add
cmp
or
push
in
push
je
mov
das
subb
sub
mov
out
shr
pushl
das
cmpl
std
clc
xor
xchg
jb
outsl
push
adc
mov
cli
dec
sub
out
repnz
lods
ljmp
inc
sub
je
jnp
xchg
pop
in
and
fadds
test
xor
int
adcb
lea
jecxz
and
sbbl
pop
cmp
ret
in
inc
mov
out
mov
jecxz
aad
adc
lods
lods
cld
shl
fistpll
mov
enter
xor
outsb
sarl
and
es
inc
stos
fmull
jno
push
stos
incb
push
xor
xorb
pop
out
jmp
lods
call
jbe
push
jns
mov
aas
test
or
test
dec
loopne
add
sarb
sahf
xor
adc
ret
mov
cli
or
mov
pusha
bound
mov
lret
data16
inc
push
xor
mov
jge
xor
out
pop
lds
cmp
adc
cli
push
enter
or
scas
aaa
cmp
xorl
into
cmp
dec
cld
inc
xchg
out
xchg
and
xlat
loope
loop
jmp
push
xchg
add
xor
cmpsb
xchg
scas
movsl
data16
lea
lret
in
shl
lods
out
push
mov
pop
mov
add
aad
xlat
fs
mov
outsb
fwait
movsb
jnp
fwait
and
lcall
orl
jmp
aaa
mov
sbb
inc
in
push
leave
out
sti
pop
loop
int
push
cld
lock
push
sbb
mov
out
xor
mov
xor
insb
and
dec
xor
mov
mov
aad
push
adc
lods
js
in
mov
push
fxch
cmc
sbb
inc
mov
outsl
sbb
inc
mov
pop
int
adc
sbb
inc
pop
negl
lcall
clc
mov
mov
sub
mov
inc
push
push
mov
xorb
ficompl
inc
cmc
add
pop
fs
mov
outsb
data16
xorl
sbb
add
nop
packssdw
mov
jge
sbb
sbb
rolb
arpl
adc
cwtl
adc
les
adc
jns
jp
dec
mov
push
ja
test
and
mov
jno
pop
inc
sbb
push
inc
aad
jbe
in
fcmovb
dec
and
and
push
cltd
add
push
fisubrl
xchg
movsb
jnp
out
pop
adc
aad
mov
sub
lds
cmp
adc
push
loope
aam
push
test
loopne
es
ja
xor
mov
test
in
sbb
in
jb
dec
add
fnstenv
and
inc
mov
mov
pop
add
mov
fbstp
scas
sbb
jmp
sbb
lret
not
or
cltd
fnstcw
cmp
je
inc
movsb
push
movsl
pop
xchg
ljmp
rcrl
or
dec
call
dec
les
or
cltd
cld
sub
push
shrb
cmpsb
out
inc
dec
adc
sub
es
bound
aaa
jno
xor
outsl
mov
cs
or
das
push
addl
mov
jno
dec
inc
mov
xchg
adc
cmp
inc
mov
mov
fwait
dec
fs
imul
popa
insb
stc
jbe
dec
jbe
xor
sub
jb
adc
jle
outsb
mov
mov
int
cmpsl
push
rcpps
cmpsb
lock
inc
int3
fistpl
pop
loopne
pop
icebp
lret
and
xor
push
add
shlb
adc
push
out
rcr
jmp
push
insl
adc
cmp
cmp
test
xchg
lods
mov
in
and
inc
daa
mov
cmpb
adc
xchg
sbb
fsts
jmp
add
hlt
out
ds
lahf
pushf
fs
or
fcmovb
movsl
and
shlb
dec
sub
inc
imul
xchg
mov
jge
xor
and
jecxz
js
jbe
push
imul
jnp
mov
mov
es
jnp
lods
test
gs
fcompl
or
aaa
cmp
gs
jne
shlb
mov
xor
scas
add
add
insl
pop
loopne
lods
sbb
fistps
lds
xor
cmp
fs
call
sub
popf
cmpsb
pop
icebp
jmp
sub
sti
lahf
xchg
pop
lahf
pop
xor
testl
pop
mov
fsubrs
sub
mov
mov
fsubrl
add
in
stos
dec
or
push
xor
xchg
cmpsl
add
add
rol
sub
dec
adc
mov
jl
mov
testb
pop
dec
inc
dec
es
test
enter
cmc
sbb
arpl
and
bound
jo
push
fistpll
or
ret
not
je
stc
sar
pop
test
iret
adc
test
push
andb
scas
inc
sbb
nop
and
lret
inc
mov
data16
fs
adc
mov
in
add
sbb
adc
xchg
inc
mov
in
ljmp
hlt
rcrl
lcall
push
pop
jmp
and
add
mov
fwait
mov
lds
or
loop
sbb
cmp
pushf
testb
cmp
add
int
dec
cmp
cmp
sbb
neg
cmp
rcr
test
mov
dec
mov
movsb
movsl
addr16
sbbb
jne
or
jle
or
dec
addl
xor
push
xchg
inc
aam
and
push
add
pop
negb
hlt
xchg
and
ret
cmpsl
clc
pop
sub
cmpsb
add
sub
push
sub
or
dec
ficomps
icebp
sbb
push
rolb
test
outsl
fwait
rorb
out
inc
cmpsl
inc
sbbl
inc
push
scas
mov
jo
lods
push
aaa
cmp
loop
add
mov
out
cmpsb
je
or
push
and
jnp
cmp
fistpl
lods
jb
insl
and
push
xlat
cwtl
or
inc
jnp
lahf
cmpsl
pushf
test
mov
inc
shll
cli
aad
je
cmp
mov
icebp
mov
popa
push
push
imul
dec
sahf
rcl
jne
fstpt
in
jnp
xchg
mov
mov
and
jle
rorl
jae
mov
xor
leave
dec
sbb
or
cmp
and
ret
pushf
inc
pop
lds
fimuls
sub
fadds
shlb
pop
inc
adc
add
pop
sub
pop
in
fcmovnb
cli
dec
mov
inc
lods
loopne
mov
add
sbbl
dec
pop
add
sahf
pop
mov
mov
inc
loope
fwait
jo
xor
push
mov
pop
scas
inc
aas
inc
sub
aad
jp
dec
xor
add
mov
aas
ljmp
lret
push
pop
adc
push
mov
cmp
cmp
mov
test
inc
dec
sar
fiadds
jge
jl
lds
ret
inc
add
dec
clc
cmp
mov
cmp
mov
push
mov
jg
inc
pop
mov
mov
xchg
pop
xchg
inc
test
leave
or
add
jmp
or
in
xor
test
dec
jno
push
dec
cld
sar
cmpsb
popf
sbb
popa
cmpsl
dec
enter
adc
xchg
jle
dec
inc
and
xchg
adc
pusha
inc
pushf
sub
addb
xchg
sbb
ss
adc
int3
mov
imul
and
xor
das
js
fmull
push
sub
fistpl
xor
lea
sub
jge
leave
mov
cmc
pop
sub
insb
cmp
repz
and
outsb
xchg
jp
cmp
aad
mov
or
fistpll
jecxz
mov
mov
adc
clc
nop
addr16
mov
flds
inc
nop
fs
inc
push
daa
out
xchg
test
mov
lret
pop
gs
enter
cltd
add
sti
pop
dec
push
scas
dec
xlat
cmp
sub
pop
xchg
enter
xchg
push
and
add
lods
rclb
sub
push
pushf
int3
mov
sub
fcomps
mov
mov
push
dec
mov
sbb
xor
lahf
test
loop
lock
outsl
loope
cmp
sub
inc
popa
add
stos
mov
cmp
int3
jne
test
rorl
push
and
jbe
pop
mov
lret
mov
sbb
rclb
pop
shlb
imul
cmp
or
enter
subb
fcoms
lock
pop
lea
ds
lods
pop
cmpb
xchg
jae
data16
xor
in
out
jae
rcr
mov
xor
test
js
xlat
mov
pop
test
hlt
or
pop
inc
mov
pop
clc
cld
cmpl
cmp
stc
jno
mov
jecxz
scas
je
subl
pop
fcomip
xchg
mov
repz
cld
add
jnp
bswap
in
scas
push
push
jae
mov
inc
movl
js
rcl
add
out
sbb
and
loope
stc
or
out
fists
stos
dec
arpl
dec
bound
push
insl
sub
popf
cmp
insl
push
sub
add
add
int
std
xor
femms
ds
mov
sbb
int
ud0
lods
add
mul
ret
cmp
roll
cmpb
aad
mov
xchg
adc
test
test
sub
adc
adc
outsb
add
iret
shr
mov
lea
or
insb
shl
pushf
mov
xchg
icebp
push
or
and
inc
pop
lock
dec
incb
push
mov
lea
stc
mov
in
fisttps
inc
mov
push
lds
in
insl
dec
js
mov
fisubl
pop
cmp
mov
xchg
mov
orb
mov
in
jecxz
in
fsubrl
inc
adc
lds
jge
push
mov
iret
cmp
lods
dec
adc
lahf
les
das
pusha
sarl
loop
mov
push
pushf
mov
mov
ret
addr16
mov
call
imul
or
and
insl
add
aam
arpl
scas
xorl
lahf
push
rcrb
ljmp
mov
mov
inc
pop
hlt
insl
and
inc
mov
sar
es
or
xor
pop
xchg
adc
mov
push
inc
subb
loop
xchg
pop
lret
jb
test
ds
iret
nop
sub
add
pop
pop
mov
xor
cmp
cmp
ror
jb
imul
daa
std
scas
add
ror
jnp
lahf
push
or
lods
or
xchg
sbb
mov
sub
adc
and
outsl
scas
cmp
stos
sub
jo
xor
mov
mov
mov
cmp
sarb
rorl
imul
push
ss
sub
mov
aaa
cmpsl
adc
andl
std
jge
inc
mov
add
rorb
add
fcmovnb
mov
faddp
scas
lock
mov
nop
sub
sbb
pop
inc
mov
les
mov
incl
fsubs
pop
shr
mov
cmp
push
add
and
ja
xchg
cwtl
push
adc
mov
rorl
pop
fimuls
popa
fnsave
push
sub
inc
push
xor
shlb
jnp
mov
mov
das
in
sub
xchg
adc
xlat
fsubr
out
push
dec
dec
inc
into
movb
sub
popa
push
mov
ds
mov
or
not
ljmp
add
loop
cli
cwtl
mov
lcall
cmp
xor
cmp
mov
cs
ret
or
jg
lock
push
aas
adc
xchg
cmpsb
xor
xor
movsl
fnstcw
add
sbb
out
sahf
mov
ss
pushl
popf
cmp
mov
adc
cmpb
rcl
xchg
jbe
add
and
adc
outsl
aas
mov
daa
or
imul
loopw
push
dec
add
inc
jne
rorl
xor
sti
mov
pop
sti
dec
inc
shlb
xchg
mov
and
ja
pop
subb
adc
call
jg
or
sbb
jo
lahf
or
lcall
pop
pop
notb
dec
push
xor
mov
push
arpl
pop
mov
pushf
cmpsb
sbb
push
inc
inc
test
xor
test
shlb
lods
xchg
sub
add
clc
das
jle
adc
stos
gs
add
aas
xlat
push
adc
cltd
int3
sahf
loop
sbb
sub
test
clc
lds
add
adc
popf
jae
mov
in
fistps
xchg
jl
or
int3
jl
push
stc
decb
mov
aam
add
out
push
aam
scas
dec
jno
push
into
popf
sti
push
dec
les
xchg
cli
aaa
shlb
mov
shl
jnp
nop
lds
cmpsl
sbb
mov
inc
incl
jnp
lock
adc
xchg
mov
cmp
mov
in
mov
fisttps
hlt
pop
xchg
jo
and
dec
adc
pop
jle
jmp
in
sbb
inc
fisubl
lea
js
jns
incl
int3
jge
fwait
dec
jns
cmp
push
rol
addr16
xchg
popa
daa
ficompl
adc
adc
pop
xor
mov
divb
mov
arpl
repz
rclb
xor
dec
je
pusha
mov
mov
sbb
mov
push
xor
rorl
icebp
jo
sbb
sub
lea
filds
jecxz
inc
sub
repnz
dec
jb
push
and
jge
and
das
mov
repz
in
int
and
sbb
movsb
in
insb
setns
cmp
fs
inc
pop
dec
mov
mov
les
mov
push
mov
inc
and
inc
outsb
jg
sub
int3
xor
mov
or
shr
xor
cmc
push
std
bound
jl
lds
hlt
rclb
mov
push
push
out
popf
test
sub
push
xchg
ret
xchg
xchg
lahf
filds
retw
fldl2t
das
xchg
imul
scas
js
pop
in
jne
clc
dec
jo
shll
cmp
in
arpl
std
push
mov
ds
in
pop
imul
call
pop
jns
outsl
jb
or
iret
lahf
repz
push
lods
xlat
addr16
stos
cmp
xor
adc
stc
xlat
aam
jo,pt
ljmp
dec
mov
add
mov
mov
mov
mov
ja
add
add
iret
and
test
fsubs
movsb
mov
or
fidivrs
jae
and
or
loope
outsl
test
xor
jg
ret
sbb
imul
jmp
xchg
ret
mov
cltd
shrb
movsl
sahf
mov
xchg
outsb
adc
push
rolb
sbb
adc
xor
js
mov
lock
xor
xor
test
xor
cmc
jne
dec
into
mov
jns
inc
mov
cmp
test
data16
and
mov
pop
es
aam
and
mov
jmp
push
mov
and
xchg
mov
dec
push
lock
or
popf
mov
stos
cmp
insb
push
mov
arpl
lcall
mov
int
sbb
outsl
roll
cltd
je
dec
add
les
decl
add
lahf
rcrl
mov
mov
shrl
xor
cmc
adc
mov
sbb
mov
pop
mov
js
lods
pusha
pop
imul
or
xlat
mov
mov
jmp
cltd
adc
inc
daa
ja
xchg
cmp
xor
xor
push
insl
mov
sbb
mov
inc
xchg
mov
push
cmpb
pop
int3
jnp
sub
cmp
ret
and
push
add
push
jmp
imul
sar
ror
cltd
mov
mov
cmp
cmovno
lock
adc
pop
jb
xchg
rcll
les
in
sub
mov
mov
addr16
orl
int
arpl
fcompl
rcll
cs
gs
bound
sub
mov
xor
xor
mov
pushf
daa
popf
ss
cmp
lea
in
jo
cli
cmp
xchg
test
xchg
or
pop
mov
std
push
cs
mov
ljmp
or
aas
xor
inc
cmpsl
mov
aaa
mov
sti
aad
out
cmpsl
stc
int
imul
xor
hlt
adc
outsl
sub
inc
xchg
cmp
sbb
pop
mov
pop
dec
cmp
jmp
scas
sbb
mov
add
in
adc
out
xchg
in
sbb
sub
lods
aam
out
gs
mov
cmpsb
dec
cld
cs
fidivs
add
shrb
jecxz
inc
mov
mov
outsb
sub
mov
js
clc
mov
mov
jecxz
cmc
sub
lcall
aas
jb
cmc
repz
ss
and
stc
pop
aam
jg
xchg
call
xchg
cmp
out
adc
notl
jnp
jmp
jle
or
dec
fcomp
xchg
clc
popf
scas
aad
mov
mov
les
sbb
into
shlb
jbe
mov
push
xchg
sbb
sbb
nop
lods
stos
insb
jbe
daa
or
adc
iret
int3
xchg
mov
mov
mov
adc
lret
ja
dec
mov
xor
into
movsl
aad
movsb
ficoms
mov
aas
data16
inc
icebp
push
and
sub
mov
jo
xor
sbb
fldcw
mov
icebp
rcr
push
xor
pop
ljmp
add
stc
cli
add
test
pop
mov
test
das
scas
cld
fsubl
xor
clc
sbb
and
lcall
mov
lret
les
jae
sbb
and
inc
aas
pop
and
xchg
ss
xchg
sbb
mov
test
mov
repz
or
pop
scas
adc
pop
jp
orl
insl
cmp
sub
shll
jecxz
mov
xchg
inc
dec
loop
icebp
out
sti
lods
mov
mov
pop
stos
inc
mov
pop
fbstp
idivl
call
xchg
pop
sub
fs
fldenv
insl
imul
pop
clc
div
fdivp
rep
or
add
mov
in
lods
lea
les
aad
outsl
lock
repz
sub
arpl
or
mov
mov
and
rcll
adcl
pop
ret
mov
and
mov
xor
rorb
notl
iret
movsb
js
mov
sbb
rcrl
fs
cmp
into
adc
jnp
cmp
pop
xor
lds
out
scas
mov
inc
add
fnstsw
in
cmp
in
mov
aas
popf
xchg
test
or
adc
dec
in
xchg
int3
scas
mov
mov
imul
mov
cld
jne
dec
ret
lea
je
lods
mov
iret
pop
lea
rolb
imul
lcall
int
hlt
jg
add
mov
push
repz
sbb
jge
test
xorb
jbe
in
pop
imul
in
pop
push
xchg
cmp
lds
addb
shrb
js
stos
stos
lock
clc
pop
call
mov
and
psadbw
outsb
xchg
rcrb
fisttpl
xchg
push
stos
sahf
xchg
test
lods
in
fcoml
dec
jbe
add
lea
aam
inc
dec
iret
sub
cltd
or
dec
mov
push
mov
in
dec
mov
cmp
cmpsb
test
push
push
jmp
lods
mov
clc
fnstsw
fisubrl
jmp
popf
rorb
mov
imul
idiv
adc
pop
sub
or
or
push
shl
inc
xchg
add
icebp
dec
add
xor
mov
sbb
cmp
pop
loope
pusha
lods
add
rcr
add
dec
rclb
dec
jbe
and
in
sahf
int
lcall
clc
jnp
sbb
mov
decb
mov
nop
hlt
xchg
jne
add
xor
aas
mov
sbb
nop
sarb
jmp
test
cltd
jb
shrl
lcall
pop
dec
mov
jle
jae
decb
shlb
push
xchg
mov
dec
jno
xor
mov
inc
jae
adc
loope
iret
cmp
in
xor
inc
out
sbb
mov
and
rcr
loopne
sbb
mov
je
jp
loopne
mov
cmpsl
sbb
jmp
jge
leave
xchg
aad
push
loope
xor
push
shlb
outsl
cwtl
ja
dec
aaa
and
xchg
inc
imul
push
or
cmc
adc
mov
aaa
shll
rolb
ljmp
loope
sub
inc
xchg
xor
popf
lahf
mov
movb
jb
xchg
sarl
icebp
ss
xor
loope
jmp
xchg
in
push
push
xchg
dec
cmp
xor
cwtl
insb
shl
sbb
adc
in
mov
das
hlt
aam
dec
add
lock
sarl
jo,pn
mov
icebp
sbb
pop
xadd
je
les
dec
sub
lods
mov
and
sub
inc
test
pop
or
icebp
push
test
lea
test
aaa
in
imul
add
sbb
test
cld
dec
lahf
rolb
or
movb
push
aad
repz
test
mov
pop
daa
mov
arpl
shrb
push
cli
rcl
pop
sbb
daa
enter
popf
dec
xchg
pop
mov
insl
inc
push
pop
test
dec
pusha
jbe
push
mov
and
mov
aad
jmpw
pushf
lods
outsb
test
cmpsl
push
jno
pop
xor
xor
push
loopne
aaa
dec
lret
cli
jmp
mov
aaa
movb
pop
inc
mov
imul
sbb
adc
push
push
jbe
push
stos
sbb
lods
xchg
cs
pop
and
push
cmp
push
mov
push
out
call
jb
xchg
push
add
or
mov
lea
pop
dec
adc
add
sbb
cmp
add
inc
jno
mov
or
jp
sbb
jp
out
adc
mov
cmp
and
mov
mov
rcll
pop
addr16
fucomp
push
idivl
jg
pop
inc
inc
fcoml
shrl
enter
jb
adc
in
xchg
dec
int3
and
das
push
cltd
in
mov
hlt
mov
ret
adc
sti
and
mov
push
popf
pop
inc
jmp
cmp
xchg
cmp
outsl
jnp
mov
inc
mov
jbe
fsubs
sbb
scas
jns
icebp
popf
adc
xchg
sub
add
sbb
push
scas
aaa
mov
in
mov
xchg
jg
pop
sub
add
jo
aam
sbbl
icebp
scas
pusha
icebp
inc
sbbl
cmpsb
popa
sub
inc
pop
dec
sti
mov
in
and
iret
jmp
mov
mov
scas
push
push
pcmpeqw
jns
xchg
jl
mov
jae
leave
mov
movsl
pop
and
jae
outsb
cli
pop
mov
dec
loop
jmp
neg
das
stos
adc
or
dec
xor
or
sbb
jle
xchg
jbe
les
testb
das
cmc
movsl
mov
mov
aaa
fwait
or
pop
dec
mov
jns
lock
xchg
cmp
idivb
daa
push
add
xchg
and
cmp
inc
pop
sarl
arpl
inc
scas
mov
aam
or
sub
mov
stos
ret
mov
mov
cmpsl
movsl
add
filds
test
dec
mov
popa
fwait
sahf
inc
xchg
pushf
sub
sbb
pop
adc
addr16
mov
roll
mov
fsubl
mov
cmpsb
xlat
pop
and
xor
outsb
mov
outsl
cli
pop
pxor
pop
dec
dec
mov
imul
fsubp
push
mov
shlb
inc
dec
jne
gs
xchg
lret
gs
js
js
pop
pop
dec
or
out
cmp
pop
push
std
sbb
lahf
dec
sub
mov
imul
or
mov
cmp
stos
jno
js
xlat
sub
mov
ret
fwait
push
dec
jae
xchg
js
cmp
cld
inc
jge
mov
iret
or
cwtl
adc
and
dec
or
cmp
std
pop
mov
mov
inc
or
outsb
out
push
push
into
add
cltd
fwait
xor
dec
jo
lock
lahf
jecxz
outsl
mov
mov
dec
cmpsb
cli
andl
mov
inc
mov
cmp
scas
mov
dec
inc
in
pop
call
aad
test
jle
icebp
inc
sti
mov
fisttpl
dec
iret
xchg
mov
cmp
lock
fimull
cmc
jmp
in
aad
mov
jg
pop
or
jmp
mov
popf
sti
add
and
add
mov
pop
pop
sub
sbb
aas
cmp
mov
adc
idivl
add
xor
imul
pop
mov
add
lods
push
fidivrs
fcoms
shll
ficoml
fcoms
mov
int3
pop
test
and
fdiv
or
mov
push
push
mov
pop
sub
xor
inc
test
jmp
mov
push
and
xchg
inc
dec
jle
sub
mov
add
cmp
and
ret
lods
or
stos
lods
inc
and
ret
or
mov
xor
or
lods
inc
cmp
xchg
inc
and
bound
repnz
mov
lock
mov
cmpsl
inc
sahf
cmp
xchg
rcr
js
xchg
inc
sbb
push
dec
add
and
jbe
fsubr
jmp
nopl
nop
cwtl
in
rcrb
pop
dec
js
repnz
jae
sub
pop
mov
jmp
imul
or
jle
mov
out
testb
test
pop
or
fiadds
and
jp
jb
cmpsl
insb
mov
push
mov
jg
jmp
popf
enter
xchg
inc
push
shrl
loope
in
inc
rol
add
sub
pop
or
addr16
aas
sti
push
fadds
or
imul
jnp
sbb
iret
jb
xchg
and
int
test
lea
popf
xor
push
cmp
mov
loop
inc
xor
cwtl
in
sbb
push
pop
xchg
outsl
inc
xor
rorl
inc
add
cmp
adc
ss
add
std
xchg
arpl
sbb
lods
cmpsl
cmp
lea
adc
cmp
cmp
mov
push
pop
or
test
pop
aas
lcall
lcall
fstpt
pop
mov
push
push
mov
push
mov
mov
fs
sub
cli
cmpsl
xchg
or
xor
aam
mov
adc
cmpsb
xor
mov
fldl
jl
aas
lods
pop
mov
mov
aaa
adc
sbb
fstpl
mov
mov
push
dec
push
cld
repz
insb
icebp
rcll
call
daa
repz
sub
and
fisubrl
pop
mov
stos
out
jb
out
ds
mov
lret
mov
incl
xor
jns
test
and
in
cwtl
sbb
nop
mov
sbb
mov
jne
aaa
popa
xchg
push
sar
dec
sbb
xchg
xor
test
sti
scas
roll
fs
pop
test
adc
scas
mov
push
mov
mov
or
push
inc
pushf
orl
push
lods
popf
mov
popf
pushf
sbb
and
insb
xor
jmp
popa
outsb
add
mov
jge
sbb
or
sti
or
inc
mov
pop
aaa
in
addr16
stc
outsb
sbb
sti
ljmp
push
gs
cltd
or
pop
xlat
cmp
outsl
insb
dec
fdivrl
xchg
mov
cmp
jg
testl
fucom
pop
xor
lods
or
jg
mov
mov
imul
roll
adc
mov
mov
mov
rorl
xchg
mov
jb
adc
or
xchg
scas
daa
imul
sub
cli
pop
stos
jecxz
fnstcw
clc
cmpsl
ja
pop
popa
test
dec
fbstp
dec
cmp
jbe
sahf
and
scas
sub
mov
out
pop
int3
or
push
push
rorl
xchg
jnp
xor
stos
ljmp
inc
imul
into
rorb
add
aad
out
rcrl
dec
push
or
mov
push
pop
dec
push
sbb
int3
jbe
popf
and
mov
jl
daa
xchg
lock
imul
add
push
pop
pop
xor
cwtl
scas
xor
mov
call
dec
loope
out
out
icebp
inc
mov
xlat
pop
or
lods
cmp
push
mull
jno
loopne
dec
pop
mov
fwait
popf
test
cld
cmp
adc
andl
stos
add
xchg
iret
pop
clc
xchg
sbb
mov
mov
inc
or
sub
adc
pusha
insl
in
das
xchg
xchg
push
push
xchg
inc
adc
call
pushf
add
jle
shlb
das
or
stos
mov
out
lcall
shr
popa
fiaddl
sbb
out
add
adc
lret
divl
push
iret
mov
push
mov
imul
out
inc
pop
in
jne
iret
sbb
les
pop
repz
pop
and
inc
loope
sbb
pop
addr16
adc
lds
mov
in
dec
leave
mov
mov
fldt
cmpsb
adc
and
pop
and
mov
mov
inc
push
ret
scas
sarb
mov
xchg
push
jns
loope
loopne
mov
push
pop
and
sub
cmp
mov
push
fldcw
cmp
xlat
adc
into
iret
push
outsb
cmp
aaa
pandn
mov
iret
cmp
cmpl
int3
pop
mov
aaa
lds
xchg
and
and
pop
scas
push
ljmp
pop
cmc
jmp
sub
or
cld
lret
fsubrl
inc
addr16
xor
cld
mov
push
jmp
adc
adc
and
rorb
xlat
popa
xor
adc
adc
fisubrl
or
ret
mov
std
mov
aad
sub
mov
ret
xchg
fimuls
adc
test
mov
xor
clc
lcall
pop
call
sti
out
cli
cltd
mov
mov
jl
push
xlat
xchg
adc
cmc
call
push
push
insl
or
sub
mov
mov
add
xchg
xor
mov
arpl
adc
push
in
inc
ficompl
outsl
xlat
scas
cmp
mov
pop
divl
dec
xchg
sub
mov
and
xchg
xor
cltd
enter
adc
jno
push
aas
jp
int3
adc
pop
push
out
xchg
repnz
pusha
in
test
dec
adc
xchg
jbe
stos
out
mov
movsb
stos
leave
icebp
jns
fcmovne
std
std
mov
xlat
popf
js
adc
inc
sbbl
add
test
std
dec
mov
iret
sbb
movsb
sbb
add
fcoml
std
mov
inc
jg
push
sbb
in
testl
call
xchg
roll
out
shll
cwtl
outsb
lods
inc
test
subl
pop
shlb
jns
push
stos
sbb
push
out
cmp
lcall
cmpsb
stos
pop
cwtl
imul
jns
and
add
push
sub
enter
scas
bound
movb
mov
hlt
push
in
or
pop
add
lret
call
or
into
xchg
ret
mov
or
arpl
imul
repz
fdivrp
int3
clc
push
xchg
fiadds
aam
mov
sub
sub
add
dec
push
push
mov
push
mov
add
idivb
add
ja
cmp
add
pop
or
add
adcb
sti
mov
and
or
in
hlt
or
outsl
sbb
cli
or
adc
xchg
mov
sbb
push
sub
call
loope
mov
pop
imul
push
adc
fisttpll
lods
dec
cli
sti
xor
fiaddl
push
mov
pop
inc
in
add
and
push
pop
jl
xchg
ret
out
mov
sbb
push
les
mov
cmp
arpl
push
jl
pop
sbb
inc
dec
test
mov
cmp
hlt
mov
out
cs
pushf
into
sub
push
inc
mov
dec
fisubl
add
mov
icebp
stc
sub
add
ljmp
sbb
or
xor
movb
ss
inc
jecxz
enter
and
push
pop
or
or
and
je
andb
mov
jle
jmp
adc
lret
jl
inc
mov
fdivr
in
lds
lods
pop
cmp
sub
aaa
pop
dec
sahf
xorl
sti
pop
pop
pop
sbb
cmpsb
sarl
repz
push
cs
pop
and
push
mov
iret
pop
arpl
mov
inc
fisttpl
sbb
push
sbb
xrelease
loope
adc
xchg
testl
in
jnp
inc
aad
sub
and
aad
and
xor
xor
jge
mov
dec
push
xlat
dec
inc
lds
lcall
cmc
mov
popf
aam
push
mov
or
jae
inc
jl
mov
ds
fistps
jo
out
mov
js
roll
pop
inc
and
pushf
dec
gs
in
jnp
sub
aad
xchg
mov
addb
dec
jle
mov
test
imul
stc
xchg
dec
cmp
pop
adc
stos
and
pop
mov
dec
into
movsl
inc
cmp
push
or
jae
push
xor
icebp
xor
adc
mov
lret
dec
lock
push
popa
xchg
loopne
jbe
mov
enter
jl
out
sti
lods
push
inc
mov
lcall
dec
xchg
adc
fdivrs
push
fsubrs
jns
inc
xor
int3
sarl
cmpsl
and
aaa
add
sub
sbb
inc
dec
cmp
pop
imul
ret
xchg
icebp
in
pushf
xchg
scas
xchg
mov
mov
jg
lret
clc
popf
dec
std
or
out
repz
jmp
xor
pop
add
mov
xor
loopne
adc
pop
inc
cmp
or
mov
inc
mov
mov
push
push
jne
mov
cs
mov
cmp
lret
add
inc
decl
sub
sahf
dec
push
push
push
inc
jns
clc
lods
fs
icebp
inc
mov
push
out
mov
mov
cmp
lret
xor
ret
xor
mov
add
stos
push
jo
pop
cmc
movsl
add
push
mov
jns
mov
add
je
sub
ja
pushf
mov
jns
pop
pop
sti
in
mov
mov
adc
or
stos
xor
stos
leave
les
in
mov
mov
out
mov
sbb
repz
call
mov
mov
movsl
out
inc
mov
cmp
jl
inc
mov
std
test
hlt
in
mov
adc
sbb
aad
push
cwtl
orl
sub
lret
test
idivl
divl
lods
aaa
and
fcomip
add
xor
mov
imul
push
push
and
sahf
jb
push
mov
icebp
push
clc
jns
xor
pop
mov
inc
je
mov
fnstcw
fimull
mov
and
mov
rolb
jbe
out
mov
jbe
gs
aas
xchg
imul
cmp
outsl
jno
inc
xchg
jae
out
dec
ret
pop
test
ss
xchg
pusha
into
subb
mov
pushf
xchg
mov
adc
cmpsb
sbb
mov
addb
lods
pop
outsb
xchg
adcl
mov
ja
pop
sbb
inc
lods
test
cmp
rcr
and
adcb
mov
push
adc
push
sarl
lods
or
pop
xor
mov
adc
xchg
adc
ret
sub
pop
inc
iret
shll
push
xor
aam
out
xor
sub
pop
and
addr16
jmp
add
dec
addr16
loope
sbb
das
adc
movsl
inc
xchg
adc
or
leave
arpl
push
xor
inc
xchg
adc
call
arpl
pop
cli
push
mov
mov
pop
jae
ljmp
pop
dec
xor
jne
in
dec
sub
mov
pop
mov
dec
orb
jge
fdiv
jae
xchg
sbb
sub
int3
mov
xchg
sti
nop
cs
test
popa
xchg
aas
ret
repz
inc
les
daa
repnz
sub
sbb
push
cld
push
jl
in
loopne
mov
push
push
sbbb
cli
xor
push
add
push
cmpsb
dec
push
inc
and
or
xor
lods
mov
pop
sti
mov
fcompl
sarl
mov
xchg
dec
inc
dec
lods
adcb
ja
fdivl
movsb
jge
mov
in
xchg
jg
fsub
movsl
add
jl
cmpsb
lock
call
or
jbe
dec
clc
rcrb
jne
adc
int3
xlat
dec
push
jb
ljmp
inc
neg
ret
mov
pop
dec
lcall
or
mov
mov
mov
fdivs
xor
shrl
fisubrl
pop
xchg
inc
jbe
jne
das
xor
and
jecxz
out
pop
mov
daa
push
fistpl
cmc
nop
imul
xchg
jnp
and
outsb
scas
xor
or
sub
movsb
dec
test
pop
sbb
bound
pop
call
scas
xor
sbb
shll
scas
pop
cmpsb
and
out
pop
enter
or
sbb
sbb
inc
lea
and
mov
test
adc
fdivl
hlt
mov
mov
sarl
dec
mov
xchg
xor
data16
mov
jns
xchg
lret
xchg
cmp
sbb
pop
jg
jg
imul
adc
int3
int
sbb
outsb
fidivrl
mov
rolb
clc
sub
lods
rorb
enter
aas
xlat
jno
je
enter
sahf
inc
out
loope
pop
ljmp
mov
jmp
cli
inc
sbbb
jl
add
xchg
shrb
test
sti
mov
dec
sarb
push
outsb
xchg
daa
mov
test
pop
sub
fdivl
in
adc
jmp
std
jno
cmpsl
int3
mov
aam
lock
shll
cmpsl
xchg
pop
pushf
mov
cld
sbb
push
push
cmp
mov
sbb
int3
xchg
push
mov
test
sbb
push
ss
pop
inc
insl
inc
mov
pusha
das
sbb
sti
and
adc
jns
aam
push
pop
aas
sbb
inc
or
xor
loop
lods
scas
jg
daa
aaa
inc
ljmp
daa
into
inc
dec
push
aaa
or
inc
jmp
fs
push
mov
mov
scas
sbb
dec
pop
add
es
insb
dec
dec
out
jns
nop
mov
add
nop
outsl
xlat
pop
mov
mov
jp
mov
jne
sub
push
lock
int3
pushf
cmp
pop
or
addl
mov
ret
sub
cmp
xchg
mov
stc
gs
cmp
lret
sbb
test
push
cmpsl
out
or
insl
cs
add
jo
mov
pop
in
aas
xlat
push
leave
cmp
mov
imul
mov
or
inc
popa
dec
inc
xchg
xor
cwtl
pop
cltd
repz
fs
sub
scas
and
imul
mov
mov
mov
dec
mov
idivl
int
jge
dec
negb
mov
mov
pop
js
adc
inc
pop
aam
xchg
es
aas
bound
scas
loop
sbb
mov
lahf
out
sbb
movsl
lds
icebp
dec
and
cwtl
sub
push
outsb
aaa
aaa
mov
inc
test
mov
jecxz
push
repz
add
sti
ret
gs
xlat
andl
lret
jno
adc
enter
loope
lods
ss
je
adc
xchg
push
mov
sub
jo
stc
push
cld
test
and
imul
pop
in
scas
test
jmp
out
pop
dec
frstor
dec
dec
test
stos
push
pop
add
movsb
fld
mov
loopne
dec
out
or
sahf
jmp
scas
aas
fisttpl
inc
mov
push
inc
ds
sbb
xor
movsb
cld
xor
fsubr
inc
int
scas
in
mov
xor
jmp
pop
es
cmpsb
and
inc
cmc
add
in
sbb
mov
jg
pop
scas
loop
call
out
mov
call
ds
fidivrl
mov
lock
out
hlt
in
aad
adc
push
xchg
int3
aam
pop
das
sub
pushf
sti
add
adc
sub
shlb
fsubl
push
sub
push
aaa
insb
test
lods
jne
int3
rorb
sahf
mov
repz
mov
sub
xor
mov
and
faddp
loopne
push
call
push
dec
das
pop
xchg
jl
mov
es
sbb
dec
cmc
add
pop
std
sbb
aad
push
and
mov
push
shrb
push
scas
cmpsb
and
mov
outsb
into
inc
movl
xchg
pop
pop
shrb
xchg
inc
cmp
sbb
inc
stos
rcrb
bswap
or
jle
test
imul
xchg
inc
ret
orb
lods
addr16
clc
mov
push
cmp
and
and
mov
daa
mov
or
sbb
movhps
inc
mov
jl
push
sub
aam
mov
push
gs
or
fisttps
push
or
iret
subl
je
push
mov
xorl
cmp
pusha
pop
pop
clc
adc
pop
add
mov
aaa
imul
xchg
rclb
inc
inc
repnz
js
addr16
stc
fs
loope
imul
fcmove
xor
sub
movsl
mov
and
outsb
cltd
scas
dec
jae
loop
addb
lahf
bound
cmp
jno
pop
push
or
push
sbb
daa
ljmp
aas
incl
outsb
jb
in
cmp
or
pop
pop
or
cwtl
test
mov
or
outsl
xor
daa
jle
cmp
mov
insl
js
subl
inc
jl
insb
xchg
xorb
or
inc
pop
cmpsb
mov
movd
add
mov
cli
sub
addl
dec
das
int3
inc
in
cli
dec
mov
cmp
repnz
sbbb
pop
insl
dec
and
addr16
ds
and
fstpt
insl
outsl
and
mov
ja
mov
out
add
push
int3
jae
shll
xor
rorb
bnd
mov
in
mov
adc
loop
add
mov
test
xchg
xor
sbbl
testb
aas
xor
pop
xchg
repnz
dec
mov
insb
sub
adc
aas
adc
test
bound
mov
mov
fstpt
inc
fidivs
jmp
fildll
jo
int3
xchg
pop
or
and
fcmovne
test
push
lea
cmpsb
leave
mov
mov
inc
int
in
mov
lods
fidivs
cmpsb
bound
imul
leave
or
in
or
and
mov
jge
push
or
loopne
repnz
cmp
jl
andl
inc
sti
mov
mov
dec
mov
mov
out
sub
adc
out
push
iret
ret
aad
rcrb
fucomip
icebp
xchg
and
out
out
daa
xor
pop
call
leave
cmpsb
lods
cmp
inc
push
insl
lds
jo
xchg
clc
cmc
movl
and
add
stos
loop
movsb
xor
jbe
dec
push
sub
lcall
rclb
arpl
xchg
cltd
push
inc
mov
add
xlat
leave
push
sub
mov
jp
testb
je
and
icebp
adc
xor
shl
cmpsl
fdivp
inc
scas
mov
pop
lret
and
push
bound
insb
inc
test
cwtl
cmp
aas
psadbw
inc
ds
jg
fwait
imul
inc
cwtl
daa
xor
xchg
cmpsl
add
nop
rcl
sub
push
inc
inc
sub
negl
xor
bound
xor
es
pushf
fadd
ret
aam
mov
push
mov
add
iret
adc
xchg
mov
push
dec
push
repnz
lods
inc
in
jnp
aaa
stc
sbb
stc
jns
aad
push
xor
cltd
jae
sbb
sub
jmp
es
push
mov
outsb
adc
jne
xor
loope
iret
test
jb
xchg
xchg
jno
pop
nop
push
fucomip
scas
mov
aad
gs
jecxz
cmp
cwtl
push
imul
xor
outsb
pop
jmp
jbe
fs
inc
dec
add
mov
js
add
outsl
jne
dec
sub
adc
popf
xchg
lock
scas
adc
jnp
lods
loop
mov
push
cs
ja
mov
mov
adc
iret
cmpb
jge
xor
jnp
xor
fists
xchg
pop
call
lea
jno
inc
push
push
bound
xor
mov
cmpsl
pop
fucom
push
xchg
sub
popa
ja
repz
inc
inc
mov
ja
push
arpl
out
inc
jns
out
and
test
inc
cmp
push
inc
push
push
arpl
testb
inc
ret
nop
filds
lret
sub
add
insb
push
push
movsb
cwtl
mov
mov
rclb
mov
mov
cld
cltd
push
in
imul
cmpsl
sub
cld
and
pop
xor
ljmp
or
pop
mov
push
and
pop
inc
es
inc
jg
cli
pop
push
dec
outsl
xlat
in
mov
in
lcall
clc
imul
aaa
or
mov
hlt
fnop
push
or
daa
push
repnz
call
movsl
mov
in
xchg
dec
xchg
dec
cs
test
push
add
or
mov
dec
push
mov
adcl
data16
out
stos
es
repnz
icebp
xchg
xor
jo
std
shrl
std
fdivr
adc
jnp
cwtl
pop
popf
pop
jne
ss
jns
xor
pop
sar
jo
out
ds
ljmpw
scas
gs
sub
stc
pusha
iret
fstps
inc
jno
or
adc
and
mov
int
pop
add
out
push
xor
out
popa
jne
insb
aaa
fst
cwtl
iret
mov
aam
sub
rcrb
out
in
scas
sub
dec
adc
int
in
int3
push
stos
daa
movsb
fcmovnbe
fmuls
mov
inc
lcall
ljmp
pusha
cmp
fildl
add
sub
test
jg
xchg
xchg
mov
push
mov
inc
testl
fdivrl
pop
pop
jae
mov
cltd
fiadds
inc
mull
inc
mov
test
cwtl
repnz
dec
xchg
cltd
mov
popa
popa
ret
cwtl
cmp
cmpsl
test
push
mov
scas
sub
push
dec
and
arpl
sbb
pop
xor
push
popa
pop
outsb
arpl
sub
jno
in
sbb
cli
pop
lahf
pushl
movsl
and
fwait
cmpsl
push
pop
cmp
rcll
add
add
in
mov
inc
cmpsb
das
lock
mov
lea
push
jge
loopne
dec
insl
lahf
inc
cmp
pushl
test
insl
popa
inc
movl
push
cmp
inc
dec
test
les
iret
leave
pop
jle
out
dec
leave
cmpsb
mov
fdivl
shll
xor
and
mov
pop
stos
repnz
in
jo
insl
and
jl
ds
xchg
jg
repnz
shll
aad
adc
or
inc
sub
insl
int
inc
sbb
repz
lcall
lcall
mov
mov
ret
lock
insb
cmp
arpl
xchg
mov
in
ret
clc
pop
add
mov
mov
jmp
movsb
xor
insb
dec
sahf
mov
pop
jl
xorl
and
jae
stos
ret
push
lret
mov
xchg
add
call
ds
or
push
icebp
iret
js
xchg
aas
addl
sub
cmp
push
hlt
jnp
out
push
sbb
shlb
lret
cmp
jge
repnz
jbe
jns
or
popa
pop
gs
ljmp
jmp
fisubs
or
and
xor
and
icebp
cmp
imul
xlat
loop
and
jg
scas
mov
cli
testl
pop
mov
das
adc
adc
push
cmp
or
dec
push
adc
push
adc
mov
mov
aaa
pop
cmc
aam
or
jg
or
stos
cmp
andnps
test
sbb
test
jge
xchg
sarl
mov
repz
dec
mov
dec
out
inc
pop
daa
outsb
jmp
repnz
ficoms
imul
and
test
nop
out
cmpsl
adc
jp
scas
lea
sbb
inc
pop
dec
lods
pop
aaa
xchg
inc
xchg
inc
jmp
mov
stc
mov
push
adc
mov
insb
pop
mov
icebp
je
sti
mov
je
adc
mov
jbe
repz
mov
sarb
shrl
pop
jno
cmpl
jmp
and
subl
xchg
mov
cmc
mov
test
push
popf
push
lea
adc
xor
inc
lods
dec
js
das
dec
outsb
call
fistl
repnz
js
in
into
data16
aad
or
jg
sbb
mov
mov
mov
mov
push
in
insl
xchg
out
je
sub
dec
or
mov
mov
or
xor
aad
ds
nop
push
jmp
cmpl
loope
es
jno
stos
sub
cmp
xchg
push
jle
pop
cmp
dec
in
insb
movsb
into
and
pop
cld
jno
ds
in
sub
rclb
sahf
cmp
es
cmp
js
fldcw
movsl
into
mov
dec
stc
xchg
push
sub
sbb
lods
push
and
jo
movsb
inc
ja
or
xchg
xor
inc
push
gs
add
mov
xor
push
pop
push
pop
js
cmpsb
fisubl
pop
fistl
rcr
push
push
mov
and
lea
mov
andl
js
insb
inc
sahf
pop
pop
loope
mov
sub
sbb
repz
test
mov
cli
or
dec
and
mov
ret
out
push
jp
sub
pushf
dec
lock
je
sbb
push
xor
inc
sbbb
push
cmp
sub
arpl
sub
mov
btc
mov
xchg
imul
out
pop
jb
enter
lcall
rcr
jg
push
lods
and
xor
jnp
sti
lret
xor
cmpsb
popa
pop
sarl
xchg
cmp
mov
pop
push
lods
push
hlt
call
loop
imul
hlt
push
fxtract
pop
insl
shl
sbb
add
hlt
fldl
sti
pop
push
lods
mov
sti
sbb
mov
mov
ret
movsl
pop
pop
adcl
jnp
push
sahf
adc
cmc
mov
pop
dec
jecxz
inc
sub
sub
adc
das
sub
cmpsb
xor
push
cli
dec
inc
sbb
add
pop
push
dec
out
push
pop
adc
ljmp
inc
mov
lret
decl
pop
cmp
xor
ljmp
mov
jg
into
pop
dec
cmpsl
flds
jno
bound
lods
scas
cmovo
jb
jns
lods
add
inc
mov
sub
jecxz
xchg
in
ret
out
pop
cmc
jno
and
mov
pop
enter
aas
sbb
lcall
ljmp
pop
mov
cmc
js
xchg
xor
jb
and
ds
fadd
push
push
or
pushf
sti
ds
out
lods
arpl
bnd
xchg
adc
pmaxsw
xor
cmp
ret
cs
dec
fdivrl
outsl
inc
or
inc
clts
aam
lods
movsb
jns
push
dec
rcrb
xchg
int3
aam
shrb
movsb
cltd
pop
arpl
adc
dec
mov
push
in
icebp
cli
je
pop
push
rcrl
insb
sarb
jo
dec
cmp
push
hlt
out
repz
mov
xchg
pop
cli
add
jmp
lods
and
xor
stc
mov
sbb
stc
mov
out
pop
imul
lea
push
insb
sbb
sbb
cmp
push
xbegin
lods
fnsave
shll
mov
cs
mov
call
in
dec
sti
cmpsl
sub
lret
and
xor
xor
xor
scas
orb
out
cmpb
jnp
pop
jg
mov
hlt
rcrb
pop
out
mov
pop
daa
rol
in
and
dec
popa
lret
add
ss
loop
cmpsb
mov
js
mov
mov
lcall
pop
pop
mov
shlb
jbe
add
xor
ret
xchg
shrl
sub
sbb
in
push
push
repnz
and
mov
xchg
cmc
mov
mov
iret
jp
or
repnz
xchg
mov
movsb
and
fmuls
push
js
cmp
mov
fldenv
fists
jecxz
or
ret
sti
mov
mov
in
ret
decb
ja
faddp
inc
add
cmp
mov
push
stc
xor
in
push
fsubrs
and
cmp
dec
jo
inc
inc
movzbl
mov
mov
mov
mov
add
adc
cwtl
mov
lahf
pop
jns
andb
test
pop
mov
dec
push
testb
fbld
pop
bound
repz
ret
push
cld
pop
sub
or
jmp
mov
adc
inc
movl
or
sbb
popa
dec
imul
int3
int3
fdivrl
leave
xor
xor
inc
fidivrl
mov
adc
nop
adcl
mov
ja
xchg
aam
pop
cmc
loope
dec
hlt
xor
and
bound
adc
rorl
movsb
outsl
mov
or
clc
idivl
addr16
cmp
aas
inc
sti
xlat
mov
push
in
pop
mov
dec
xor
mov
icebp
enter
xor
sub
mov
sub
repnz
pop
sahf
jge
out
daa
mov
ljmp
test
mov
lods
fldt
mov
clc
in
leave
jp
push
push
out
repz
mov
adc
insl
aaa
xor
pop
push
jno
xchg
lcall
push
sti
daa
rcrb
out
adc
fldlg2
pop
mov
test
mov
mov
mov
mov
test
add
push
enter
mov
sarb
xchg
mov
wbinvd
sar
sbb
or
cmovle
out
inc
ret
adc
mov
fisubs
in
das
pop
adc
or
clc
jb
repnz
inc
std
rorl
pop
repnz
mov
cmp
xchg
ja
cmp
ret
add
pop
push
std
mov
pop
push
fildl
fwait
das
mov
sarl
inc
into
pop
hlt
sbb
mov
fidivrl
notl
mov
movsb
aam
mov
ficoms
out
sub
push
add
add
enter
pop
sbb
repz
mov
cli
orb
repz
lcall
jmp
dec
in
stos
int
jle
adc
mov
add
test
je
fcmovnbe
pop
push
pushf
ret
mov
outsb
cmp
bound
adc
add
mov
in
test
aaa
lcall
inc
xchg
and
sbb
ljmp
xor
dec
jmp
ficompl
dec
jle
push
movsl
nop
mov
aas
xchg
cmp
jo
gs
test
fildl
mov
or
js
xchg
sub
cs
or
inc
sbb
pop
mov
in
or
xor
cmp
xchg
fcomi
mov
push
scas
dec
inc
mov
fprem
jle
cwtl
pop
fcmove
and
mov
loop
sub
inc
clc
test
andl
in
inc
cmc
cmp
aam
or
or
or
push
or
std
int
pop
movsl
int3
push
in
sar
imul
sbb
std
jae
fsubrs
and
xor
popa
cld
fwait
mov
xchg
shr
xorl
in
fidivrl
movsl
pop
mov
popf
mov
xchg
add
lcall
shr
insl
data16
out
mov
in
ficomps
pop
lock
sub
pop
jle
adc
xor
xabort
sbb
lods
adc
aad
sub
jl
lods
jge
push
cmp
add
add
stos
and
lret
pop
xlat
sbb
cmp
das
push
je
pop
mov
or
pop
jp
fidivs
in
jne
and
lods
push
cmc
adc
cmp
stc
js
inc
mov
and
xchg
mov
mov
aad
cli
xorb
inc
cmpsl
or
or
rorl
adc
lret
aam
sbb
testl
lret
outsl
sbb
fcom
aas
sub
mov
mov
push
pop
jae
into
add
push
inc
inc
add
insl
stc
test
mov
cmp
roll
test
cmp
cld
lahf
iret
pop
cmpsb
clc
repnz
imul
adc
sub
add
loope
jno
imul
sub
jb
das
lods
mov
or
pop
cmp
or
inc
lds
xchg
fistl
sub
push
mov
test
pop
andl
mov
mov
ss
inc
loopne
pop
sub
cmc
loope
dec
and
shl
stc
test
sahf
mov
adc
and
clc
mov
push
insl
out
dec
out
or
xor
adcb
mov
insb
adc
push
je
pusha
adc
in
xor
xchg
mov
cmc
and
mov
dec
leave
sub
mov
push
jno
xchg
imul
mov
scas
and
sbb
popa
push
shlb
inc
xor
add
nop
add
xor
sti
dec
mov
fadd
out
stc
in
mov
sub
inc
inc
rcrl
call
in
loope
daa
push
inc
xchg
pop
jmp
lret
fdivrp
ss
jle
add
mov
lret
repz
cmp
stos
lcall
in
inc
ret
jg
cmc
adc
cmp
lock
in
xchg
pop
xor
mov
push
popa
jno
sub
frstor
cltd
adcb
mov
imul
sub
inc
out
fimuls
mov
daa
cmp
dec
push
loope
xor
pop
es
mov
inc
movsb
push
cmp
aam
mov
loope
mov
out
data16
or
push
ret
pop
out
rorb
scas
and
outsb
add
std
xchg
sbb
sub
lcall
sbb
cmpsb
pop
hlt
sbbb
sbb
test
ret
pusha
iret
xor
outsb
pop
clc
ss
push
imul
icebp
adc
faddl
or
jp
cld
pop
and
push
add
push
movsb
out
sarl
sub
dec
negb
call
cmp
cwtl
int
mov
outsl
scas
dec
popf
push
insl
lahf
arpl
xor
pop
inc
fstpt
lods
lahf
loope
adc
jo
cwtl
push
test
mov
xor
push
movl
adc
enter
mov
adc
cmpsl
cltd
inc
push
xchg
ljmp
aam
xor
cld
jns
cmpl
pop
sub
sbb
sub
add
sbb
imul
mov
shr
push
mov
lcall
jno
push
push
and
cli
xor
mov
loope
adc
aam
vmwrite
shlb
push
adc
std
out
mov
push
repz
jecxz
sub
push
and
xor
in
jmp
sbb
cmpsb
mov
xchg
call
sub
sbb
fwait
hlt
mov
jp
aaa
xchg
or
mov
mov
mov
cmp
mov
push
out
jo
and
add
inc
or
cmp
mov
call
push
sar
xchg
lock
test
adc
movsb
inc
out
pop
fmull
out
out
jmp
inc
ret
popa
shll
sub
dec
mov
outsb
data16
push
sbb
rep
jp
mov
jo
sahf
xor
add
repnz
addb
xlat
sub
sub
cltd
or
stos
incb
dec
fimuls
mov
out
lds
cmp
out
inc
or
inc
repnz
or
pop
push
adc
lcall
aaa
in
dec
mov
aas
fmuls
cmc
or
notb
or
rcrb
mov
xchg
fildl
dec
jbe
frstors
int
subl
and
test
jo
mov
pop
fsubrs
dec
je
push
mov
das
imul
lcall
pop
arpl
clc
subl
fiadds
sub
push
push
xor
cmp
dec
xlat
mov
shlb
mov
pop
jns
shlb
call
mov
sbb
mov
cwtl
inc
pusha
push
ds
push
stos
fiaddl
daa
pop
test
sahf
fs
mov
and
sbb
jg
or
pop
outsb
sub
jae
or
rcrl
aas
enter
fdivl
nop
mov
jp
inc
jle
or
divl
lds
cmp
lock
dec
or
cwtl
in
les
mov
adcb
cmp
adc
lock
pop
lret
ss
mov
push
fbstp
mov
jge
inc
jmp
test
shl
icebp
xchg
testl
add
jecxz
push
xchg
jp
jo
sar
fisttps
rcrl
imul
mov
mov
pop
sti
rcl
popa
mov
clc
adc
dec
mov
nop
aam
add
fisttpl
mov
jmp
pop
cli
shlb
mov
push
xor
jo
decl
mov
ljmp
cmpsl
jl
test
pop
push
pop
inc
jns
in
cmp
mov
out
sbb
pop
adc
mov
sbb
aam
cwtl
mov
sbb
push
imul
iret
jae
pop
push
dec
loopne
icebp
mov
das
jp
cli
test
pusha
adc
adc
clc
adc
stos
push
iret
lds
push
loopne
jne
mov
sbbb
shlb
inc
dec
mov
mov
test
insl
sub
jae
decb
and
add
xchg
and
adc
add
repz
dec
outsl
lea
in
adc
lods
dec
hlt
std
mov
rclb
adc
fstpt
push
dec
push
xchg
cmp
mov
mov
cmpsb
or
xlat
sbb
ja
int3
fs
adc
push
lods
pop
cli
push
ljmp
sub
push
faddp
iret
testb
aam
mov
aas
subl
gs
stc
out
std
mov
mov
icebp
scas
jae
adc
jo
rcl
lahf
mov
testb
sbb
sbb
arpl
mov
adc
or
and
gs
jb
jno
icebp
jge
out
push
and
pusha
jl
pop
pop
in
and
pop
add
ljmp
sub
xchg
adc
loope
mov
adc
push
out
push
push
mov
bswap
outsb
and
ds
xchg
fdivrl
inc
or
mov
xor
jns
sub
loop
and
cltd
aam
inc
and
add
adc
mov
xchg
lods
stc
mov
outsl
inc
push
push
or
jecxz
mov
jmp
xchg
or
push
adc
mov
out
mov
cmp
sar
xor
fs
inc
stc
enter
std
ret
add
add
mov
test
out
ja
icebp
pop
es
icebp
cli
mov
sar
sub
leave
push
faddl
cmc
jge
xor
and
push
pop
jne
cli
mov
mov
pop
sub
dec
xor
stc
jg
mov
shr
out
neg
jo
add
aad
movsl
in
dec
int3
xchg
add
cmpsl
pushf
mov
mov
lods
xlat
sbb
rclb
cmp
cld
ret
cmp
arpl
pop
fcoms
mov
fadds
lcall
out
jge
pop
dec
push
out
sub
lds
iret
push
mov
add
xchg
pop
xchg
pop
sub
pop
hlt
xchg
sub
lret
pop
push
mov
sbb
mov
push
jae
sub
push
loope
insb
repnz
push
lds
cmp
aas
xchg
mov
dec
mov
lret
pop
pushf
fldt
jae
sbb
adc
pop
ret
jns
and
sahf
adc
push
ret
sub
test
out
insl
xchg
movsl
xor
iret
lock
jmp
insb
fstl
jle
out
popa
mov
leave
flds
movsb
push
mov
test
xchg
inc
arpl
mov
pusha
jp
js
pop
and
pop
cli
dec
lods
xor
cmpsb
jg
cmp
cmpsl
dec
mov
jb
cmpsb
dec
rorb
mov
cmc
xchg
pop
or
rol
mov
xchg
out
shrl
or
in
insb
dec
cltd
rcr
andl
mov
and
lds
test
mov
xchg
mov
rorb
pop
mov
ss
mov
mov
mov
jne
pop
int
or
jle
jne
mov
cmp
test
in
xchg
pop
mov
push
pushf
and
clc
cmpsb
xchg
sub
lods
sbb
dec
xor
popf
lds
aaa
jle
mov
push
and
cmpsb
les
int
dec
dec
inc
push
xor
cli
push
push
insb
cmp
pop
pop
test
in
es
pop
sub
push
clc
ss
adc
mov
test
popa
pop
ss
imulb
pop
js
int3
ret
inc
loope
adc
fistpl
pop
cmp
jl
push
rclb
orb
xor
js
xor
xor
sti
add
insl
or
adc
jg
lock
fsubs
sar
dec
dec
pop
leave
add
jl
dec
dec
movsl
xchg
arpl
fcomps
pop
daa
ljmp
mov
ljmp
jb
mov
pop
xor
pop
mov
xchg
in
xchg
cwtl
cmp
int
shl
and
shr
cmc
outsb
shl
in
xchg
je
pop
xchg
outsl
mov
push
or
sbb
stos
xchg
add
daa
add
pop
add
ds
jne
jns
mov
lahf
or
addr16
cmp
add
xor
and
or
adc
fisubs
ss
fs
pop
dec
mov
mov
vshufps
adc
andb
adc
ret
xchg
mov
pop
inc
sub
into
call
sarl
out
sub
cli
in
loopne
call
jmp
shrl
scas
inc
dec
hlt
sbb
cltd
pop
pop
or
cli
pusha
sub
xor
lret
fsubl
mull
pop
in
or
inc
xchg
movl
inc
mov
lcall
jle
addr16
mov
out
aad
cltd
sbb
nop
lock
aam
pop
stc
mov
xor
jl
push
cwtl
jle
add
loop
xor
sub
icebp
lods
cmp
popa
lods
jg
loopne
mov
hlt
sbb
pop
mov
sbb
loop
inc
cmpsl
outsl
pop
cld
nop
xor
mov
inc
cmp
stc
xchg
xchg
inc
mov
xchg
sub
mov
jb
pop
cltd
xlat
and
sahf
sbb
gs
xor
xchg
sbb
daa
sbb
fisttpl
test
fsubr
mov
stc
adc
xchg
call
cmp
xchg
repz
xor
adc
and
push
xor
pop
pop
sar
es
insb
aas
jb
mov
xor
shll
inc
mov
push
jge
out
mov
sub
fisubs
add
and
mov
push
in
xchg
xchg
imul
jge
push
je
shr
or
jmp
push
out
in
jns
sbb
sbb
push
jp
clc
fnsave
sbb
and
sub
add
pop
out
fwait
mov
imul
das
pop
aaa
jo
sub
insl
dec
mov
sar
jge
cwtl
rcll
inc
mov
insl
xchg
dec
scas
je
jb
lds
xchg
mov
ficoms
or
add
xchg
cltd
and
cmp
or
pop
daa
or
fucomp
cmp
fucomp
xor
jns
out
rcll
inc
sbb
das
push
inc
mov
sub
sub
inc
or
jne
mov
mov
mov
testb
jnp
dec
lret
arpl
mov
adc
cmp
xchg
dec
adc
cmp
int
jg
fldt
jl
in
movsl
inc
xchg
mov
add
jbe
frstor
ss
jl
test
adc
and
cmp
mov
mov
test
or
outsl
inc
or
mov
stos
pop
pop
insl
or
pop
movsb
dec
popa
scas
dec
lret
insl
loopne
sahf
fistpl
add
jae
cld
push
movsl
iret
push
notb
mov
mov
jp
mov
out
in
gs
add
dec
das
cmpsl
mov
lods
idiv
xor
and
cltd
icebp
pop
pop
loope
hlt
mov
xchg
das
push
call
lcall
out
cmc
mov
add
data16
andl
cmp
imul
loop
popl
clc
xlat
cmpsb
pushf
fsub
jle
xlat
xchg
stos
stos
call
dec
adc
push
push
lock
sbb
xchg
xor
mov
xchg
rclb
call
pop
out
xor
cmp
fsts
pop
push
int
daa
movsb
jle
pop
inc
ficompl
push
or
adc
scas
dec
imul
pop
fs
mov
and
or
notb
jae
mov
dec
dec
cmp
test
and
inc
mov
mov
mov
push
iret
mov
jmp
movsl
sbb
or
fidivl
aas
inc
xor
pop
and
mov
adc
mov
lods
xor
push
fwait
add
jecxz
and
mov
sbb
fisttpll
mov
in
aas
lock
lahf
movsl
xor
xchg
mov
mov
xchg
dec
rolb
pop
fidivrl
xor
addr16
push
jmp
sahf
in
xor
add
outsl
cmp
xchg
in
xchg
popf
mov
xchg
gs
dec
pop
leave
pop
dec
cs
movsb
sbb
push
pop
daa
inc
ret
push
add
xchg
fdivs
xor
pop
cltd
dec
sbb
jle
fstpl
ljmp
mulb
loope
jo
sub
jmp
mov
add
mov
insb
daa
mov
sub
bound
std
shrb
sub
cmp
mov
gs
test
fists
ss
nop
cmpsl
push
dec
inc
negl
pop
test
leave
sub
jmp
movsb
push
inc
mov
mov
sbb
push
fimull
inc
xlat
cs
pop
sbb
pop
fs
inc
adc
adc
jmp
adc
push
shll
mov
imul
mov
clc
push
arpl
rorl
mov
xor
sbb
aaa
mov
mov
or
stos
xlat
jno
inc
arpl
mov
xchg
and
mov
js
mov
mov
or
mov
jb
xor
mov
pop
std
into
or
inc
aam
leave
xor
outsb
mov
dec
adc
inc
hlt
rcll
aas
and
cmp
push
int3
jns
notb
mov
mov
arpl
jns
jb
rcrb
sub
and
xchg
insb
push
shll
repz
imul
sub
cltd
or
mov
jne
pushl
int3
icebp
das
or
cmp
jmp
iret
cmp
pop
in
sbb
xor
mov
sbb
xchg
arpl
mov
inc
sarb
cld
pop
jmp
push
sub
sub
insl
mov
jne
lds
xorl
lret
stc
call
data16
xor
insl
into
jle
ficoms
xchg
addr16
das
mov
pop
cltd
out
movsb
sub
push
jl
jp
sub
cmp
xchg
mov
push
arpl
and
in
xchg
jle
out
mov
out
pop
or
mov
dec
fists
or
xor
sub
sbb
mov
out
jae
in
xlat
sub
stos
jne
pop
jbe
daa
or
push
out
jnp
cwtl
add
insb
push
les
nop
xchg
pop
adc
bound
loopne
add
scas
cmpl
pop
dec
call
sbb
stos
cmp
pop
or
mov
pop
lcall
mov
xchg
notl
ja
mov
ret
mov
cmpsl
jle
lods
leave
ss
jo
ljmp
push
scas
jbe
xchg
pop
sbb
jne
dec
pop
pop
push
add
or
loope
dec
xchg
mov
xchg
orb
pop
add
dec
sub
jmp
cmp
push
jns
inc
xor
xorl
sub
adc
enter
stc
rorb
lock
fdivl
and
push
insb
push
mov
mov
mov
xor
or
pop
jae
rcl
xor
mov
inc
jle
cmp
inc
and
in
fisttps
pop
lods
mov
int3
mov
mov
xor
insl
lret
fidivs
jle
clc
inc
mov
ret
rcrb
sbb
cmpsb
out
hlt
shlb
pushf
push
inc
push
dec
addl
rep
jl
call
xlat
fmulp
aas
leave
lcall
mov
je
cmp
jb
iret
mov
cmp
inc
mov
ss
pushf
aas
icebp
sahf
shll
pop
xchg
and
push
fdivrp
jp
or
arpl
nop
adc
and
lret
in
push
ds
push
pop
sbb
out
add
and
xor
cltd
mov
mov
jbe
test
cwtl
fwait
rcrl
or
daa
push
mov
jge
and
push
rcrb
shlb
popa
adc
int
sub
cmp
inc
push
out
sahf
ja
jbe
cmp
ja
add
mov
notl
dec
inc
and
mov
or
xchg
mov
push
or
adc
mov
mov
mov
sub
ss
daa
into
dec
cmp
call
mov
and
loope
push
push
clc
xchg
push
and
imul
std
repz
movsb
stos
std
adc
pop
insb
mov
inc
test
call
xchg
xchg
fisubs
jl
push
inc
push
mov
or
dec
cwtl
js
cli
push
test
sbb
lcall
fdiv
sub
in
stos
inc
mov
cli
adc
aam
push
push
in
adc
pop
in
stc
cmp
or
pop
fidivs
clc
lods
xchg
aas
mov
jg
cltd
jle
call
lods
xchg
scas
cs
fmul
enter
mov
and
mov
scas
push
cmp
lods
shrb
lcall
fcmovu
cmpsb
dec
stos
test
ja
push
add
stos
or
xor
cmpb
cmc
xchg
fdivrl
fwait
lds
jge
pop
jmp
pop
adc
andb
leave
push
sbb
push
mov
flds
cmpsl
pusha
jnp
fwait
add
pop
movsl
jno
or
sbb
dec
mov
dec
push
in
je
pusha
dec
out
outsl
sbbb
insl
sub
or
mov
mov
push
and
popl
outsl
pop
mov
xchg
jge
push
je
push
enter
dec
xchg
xor
cmc
cmp
and
adc
ss
sub
mov
gs
enter
cs
in
pop
mov
jne
leave
mov
arpl
xor
mov
lods
hlt
loopne
mov
int
loopne
add
repnz
in
rorb
dec
aaa
mov
pop
mov
outsl
lcall
xor
inc
mov
je
sub
cmp
add
stos
sub
xchg
xor
cmp
loop
rcrb
ja
or
adcb
adc
sti
ss
ret
or
outsl
mov
inc
xor
sub
mov
push
insb
pop
push
xchg
sub
iret
mov
shll
shl
stos
or
ret
mov
out
sub
cld
imul
jge
cltd
inc
or
add
pusha
cmpsb
dec
xlat
out
movsl
cwtl
mov
jecxz
fs
push
insb
shlb
icebp
or
aaa
outsl
or
xchg
push
das
dec
mov
and
rol
cmc
sub
and
mov
add
sub
je
bound
sbb
sar
mov
pop
faddl
dec
mov
add
pop
jne
imul
addr16
pop
xchg
adc
cltd
mov
xlat
dec
sarb
xchg
inc
js
xor
dec
sub
push
icebp
rorb
cli
jae
xchg
arpl
push
mov
cs
dec
inc
xchg
loop
mov
pop
rcrb
mov
pop
loop
pop
mov
xor
lcall
in
fs
push
lret
and
or
adc
jg
sbb
lret
adc
add
pop
ucomiss
outsb
jl
hlt
iret
mov
sbb
pop
xchg
pop
dec
ror
and
and
or
lock
sti
pop
pop
jb
adc
std
and
or
cltd
push
sbb
movsl
mov
add
xor
in
mov
xchg
sti
lods
jmp
xlat
pop
pop
or
push
jg
sbb
std
and
or
sub
push
mov
mov
cmp
popa
xlat
add
push
lret
lock
jge
out
fadds
bound
jno
mov
add
lds
hlt
xchg
call
xlat
xchg
dec
outsl
adc
cld
out
iret
mov
mov
xchg
out
and
cmpsb
mov
sbb
fbld
jbe
addr16
adc
cmpsb
lcall
jge
adc
mov
mov
aad
pop
fsubrl
cmp
hlt
ret
and
inc
hlt
mov
push
pop
mov
js
outsb
cmp
sahf
or
fildl
pop
lods
daa
sbb
arpl
cmp
sbb
add
mov
and
mov
aas
js
pop
cmc
test
das
jl
inc
andl
sub
jns
in
das
jbe
in
mov
loope
and
scas
data16
dec
hlt
stc
dec
and
cmp
loope
mov
push
sub
mov
lcall
stc
mov
sbb
and
pop
and
test
and
jo
mov
cs
jns
and
rolb
ss
and
sub
int
jno
mov
sbb
add
push
int3
jmp
xchg
int3
icebp
xor
ss
add
int3
add
scas
pushf
pusha
loope
mov
mov
jg
pop
aam
fldt
in
in
loope
dec
sti
xchg
shlb
mov
cmp
mov
dec
adcl
in
imul
sbb
in
and
mov
cmp
std
mov
sbb
xor
mov
bswap
adc
shll
je
stos
fldcw
pop
mov
add
mov
mov
jo
idivl
fsub
lds
popa
jne
sub
dec
mov
ffree
cs
mov
pop
jg
js
pushf
sbb
xchg
xchg
adc
jne
mov
xchg
pop
pop
xchg
push
adc
in
add
jne
arpl
je
jmp
pop
mov
ret
xor
push
or
jg
cmp
jmp
push
mov
inc
sbb
sbb
and
pop
cmp
call
fwait
in
fadd
icebp
jae
xor
adc
add
sub
dec
add
push
and
xlat
pop
push
lcall
dec
dec
push
movsl
jge
loope
outsl
loope
in
sbb
ja
fwait
lret
or
jne
loopne
icebp
daa
sub
mov
pop
xchg
mov
and
ss
adc
and
or
outsb
int
js
dec
or
fcmovnbe
mov
mov
xchg
inc
cmp
shll
rorl
jbe
pop
sbb
inc
adc
xchg
adc
pop
add
outsl
mov
jp
mov
icebp
mov
push
cli
mov
pop
jl
repz
sbb
mov
inc
rcll
pop
xor
mov
mov
lcall
in
and
jecxz
fmulp
pop
xor
js
push
add
mov
sub
inc
cmpsl
roll
aad
mov
leave
rolb
jmp
push
loope
divl
iret
jle
rolb
dec
cli
pop
inc
cmp
mov
jg
shll
imul
sub
ret
loop
leave
cmp
fldl
dec
pop
pop
xchg
xchg
jo
fpatan
fsubr
lahf
xor
push
in
cli
lret
repnz
sarl
sbb
les
or
xlat
jne
xchg
mov
rclb
mov
jmp
jecxz
cmp
test
mov
or
sbb
lods
sarb
xchg
and
xchg
mov
push
scas
sbb
aad
push
dec
dec
mov
adc
enter
enter
and
mov
add
mov
xchg
mov
jae
jecxz
mov
dec
xlat
out
in
add
lea
inc
dec
mov
gs
cmp
std
add
xchg
incb
in
sub
mov
mov
cmp
hlt
imul
inc
movsl
pusha
sahf
add
sbb
lret
or
xchg
movsl
es
cmp
push
pop
out
push
or
mov
imul
imul
push
dec
pop
adc
test
insb
scas
outsb
push
das
into
inc
sbb
and
ja
mov
fdivl
clc
jle
pop
sbb
ficoms
insl
mov
xchg
or
mov
inc
jecxz
push
iret
aas
jecxz
pop
sbb
call
xor
cmc
and
and
cli
ret
xor
fcoms
sub
xchg
imul
xor
fisttps
hlt
mov
cltd
movsb
popf
mov
ret
test
jp
xor
sub
and
mov
add
cmc
mov
loope
fstps
les
mov
sarb
andb
jp
js
fdivs
or
loope
loope
pop
jmp
add
loope
aam
mov
das
sahf
mov
imul
push
mov
test
orb
inc
movsl
loope
jb
pop
movsb
ljmp
stos
mov
sbb
xchg
or
pop
cli
push
mov
adc
iret
push
adc
test
cmp
movsl
xor
mov
jne
or
pop
call
ljmp
dec
mov
fcmovb
inc
clc
mov
jns
mov
or
lds
or
icebp
pop
xor
push
jge
pop
sarl
fiadds
mov
mov
fsubs
scas
repz
cs
mov
outsb
jge
lock
in
mov
mov
jecxz
adc
pop
pop
popf
push
cmpsb
movsl
cmp
mov
mov
loope
mov
lar
cmp
jbe
mov
das
inc
mov
les
and
jl
std
xor
in
mov
jbe
jge
jb
lret
push
push
inc
cmp
repnz
pop
jle
shr
loope
loop
jnp
mov
sbb
xlat
jecxz
aaa
rcrl
push
fildl
ss
sub
xchg
sub
xchg
xchg
repz
lock
std
outsb
jno
push
fldl
or
into
enter
inc
addr16
jbe
mov
shll
fisubs
dec
int3
xlat
in
rolb
cmpl
enter
mov
icebp
xchg
sbb
rcrb
pop
dec
fisubl
or
cmp
push
flds
add
sbb
sub
push
in
xchg
pop
repnz
xchg
es
push
lahf
nop
scas
lret
dec
ja
sbb
push
add
scas
dec
inc
push
movsb
fs
icebp
gs
sub
call
sub
test
push
int
push
nop
sub
cmp
shll
repz
sbb
push
sbb
mov
pushf
jle
lods
nop
jle
faddl
inc
mov
outsl
and
lret
and
repnz
int
test
dec
ret
daa
sub
bound
jnp
out
mov
mov
out
int3
jecxz
cld
push
shlb
inc
shr
test
nop
push
shrb
sbb
cs
cs
xchg
cmp
sbb
push
adc
sbb
imul
jl
cmp
bound
arpl
cmp
lret
and
sbb
sub
mov
shl
add
mov
jle
fucomip
push
test
shrl
xchg
add
xchg
push
jno
loopne
xchg
and
push
or
jo
iret
xchg
or
movsb
mov
out
add
out
pop
jbe
pop
inc
xchg
cwtl
lahf
repnz
adc
iret
ror
movsl
js
mov
das
insl
call
mov
push
mov
mov
inc
or
scas
fwait
xchg
repnz
jl
sbb
or
mov
cmp
push
cmp
adc
jmp
push
shrb
mov
push
cmp
inc
xchg
adc
ror
stos
fstps
dec
cs
flds
mov
daa
rolb
push
aas
adc
rcr
jl
cwtl
ja
push
xlat
jns
std
lods
xor
jmp
and
or
jne
ja
mov
mov
outsl
dec
jg
cltd
lret
or
pop
add
or
push
bswap
xchg
icebp
fbstp
xor
sub
xchg
lock
bound
pop
cmp
pop
fisubrl
mov
aas
rorb
movsl
daa
lock
cmc
stc
xchg
je
aaa
ret
sbb
xor
dec
sub
add
inc
xlat
mov
and
and
stos
stos
and
popa
lods
sahf
icebp
sub
cli
inc
ja
xchg
jb
outsb
adc
or
cmp
rcrl
inc
sbb
push
in
inc
add
adc
dec
inc
ret
and
mov
mov
scas
aad
mov
adc
push
rorb
inc
fwait
jg
frstor
outsb
inc
mov
insb
and
insb
les
fwait
out
push
mov
inc
in
dec
shrb
cltd
popa
mov
sarl
jne
adc
loop
ficoms
addr16
sti
enter
sti
push
dec
decb
cmp
lcall
adc
and
roll
and
sbb
add
jno
stc
jae
daa
fnstcw
mov
mov
sub
repnz
cmpb
or
push
cmp
sbb
fidivrs
shll
divl
imul
call
and
out
mov
adc
cmpsl
cmp
stos
stos
dec
pop
stos
xchg
xor
jns
lret
push
jecxz
sub
popa
into
fdivs
ds
push
adc
xchg
jmp
pop
in
inc
lods
aad
mov
mov
in
adc
push
pop
bswap
popf
sub
sbb
inc
jg
dec
inc
lahf
fsubs
mov
sbb
ficoml
and
addr16
lods
loop
aad
mov
xlat
mov
mov
xor
fiadds
and
xchg
test
jle
and
mov
cmpsb
mov
mov
pop
mov
rclb
ret
aad
sti
aaa
and
inc
stos
mov
stos
add
or
mov
inc
pop
add
fnsave
stos
mov
and
push
fmull
inc
jns
mov
das
mov
call
jecxz
pop
cmpl
mov
mov
mov
ret
jl
test
popf
out
jae
fsubrl
arpl
roll
cmpb
notb
ret
mov
mov
jl
cs
xlat
push
bound
mov
sahf
adc
mulb
dec
mov
inc
cmp
mov
xor
in
mov
test
mov
repnz
jmp
pop
movsl
iret
xor
subb
pop
add
mov
jnp
mov
xchg
cli
xchg
mov
roll
push
pop
fwait
cmc
xor
adc
test
jo
sbb
add
push
xchg
loope
lea
sub
repz
pusha
xor
mov
mov
or
repnz
imul
ds
out
ffree
mov
add
fidivl
icebp
mov
mov
jbe
cmpsl
add
repnz
inc
xor
hlt
in
pop
clc
js
lret
cmpsl
out
xchg
and
fwait
lahf
mov
cmp
fs
testl
inc
nop
sbb
bound
mov
add
adc
jne
xchg
mov
mov
xor
cmpl
jne
jg
dec
pop
xchg
sarb
mov
test
jecxz
popf
xchg
dec
nop
sbb
cli
cmp
rep
repnz
sbb
enter
jnp
pop
or
sub
pop
adc
xor
mov
testl
ret
add
xor
adc
jp
push
hlt
inc
rcrb
pop
mov
adc
jno
push
xchg
pushf
std
popf
pop
popa
clc
and
scas
int
push
fucom
push
lahf
mov
cwtl
xlat
out
adc
fwait
and
out
sub
sahf
int3
mov
nop
push
inc
mov
fisubrs
push
scas
fnstcw
pop
lcall
and
or
sub
enter
mov
mov
insl
mov
adc
sub
cli
dec
jecxz
cmp
dec
test
js
inc
aaa
andb
call
and
dec
push
scas
mov
jmp
inc
inc
xchg
mov
xor
mov
and
add
cmp
repz
pop
pushf
pusha
mov
mov
icebp
fadd
ja
cld
mov
jge
inc
pusha
cli
push
ds
lea
mov
pop
int3
sar
aam
and
inc
mov
mov
cmpsl
mov
sbb
sbb
and
daa
add
xor
fstpl
loop
mov
mov
or
int3
xor
mov
mov
push
adc
sahf
inc
pop
jo
loope
movsl
xchg
adc
lock
bound
sbbb
fs
es
inc
sti
sbb
and
xchg
gs
adc
sub
loopne
mov
and
mov
shlb
inc
repnz
mov
xchg
cmp
adc
es
iret
dec
js
inc
ljmp
pushl
jl
xchg
loope
in
add
out
dec
mov
adc
pop
in
cmp
jmp
imul
aam
xor
cmp
jbe
shll
das
inc
sbb
dec
leave
mov
into
mov
fdivs
adc
inc
cmc
mov
test
push
inc
cmpxchg
jle
or
mov
in
lods
fisttps
xchg
pop
push
push
xor
mov
testl
scas
out
sbb
bound
out
ja
hlt
sti
ss
mov
sbb
ja
add
cmc
mov
or
cmpsb
cmp
daa
lods
or
in
push
mov
pop
pop
fdiv
lods
fstpt
sbb
sub
add
mov
xor
addr16
fmul
sbb
inc
outsl
aad
sahf
xchg
stos
pop
cld
adc
xor
inc
inc
inc
into
leave
jecxz
jecxz
mov
mov
push
mov
data16
add
rorb
out
mov
popa
jmp
loopne
fadds
enter
out
shl
mov
mov
inc
sbb
stos
fldcw
and
or
fstpl
lods
rcrb
mov
popa
leave
dec
aaa
mov
or
outsl
inc
cld
lods
dec
test
lea
es
bound
loop
mov
cmpsb
subl
adc
icebp
mov
mov
cmp
cmp
rol
xor
nop
imul
and
js
aam
mov
in
sar
rorb
xchg
xchg
add
add
repz
loop
lret
lret
dec
fcoml
cmpsb
sti
call
push
push
imul
mov
andb
inc
or
into
mov
sub
mov
loop
fldcw
repnz
adc
inc
cmp
push
sti
out
mov
cmpsl
xchg
nop
lret
lahf
inc
jp
jg
xor
and
clc
fistps
push
in
inc
loopne
icebp
add
jbe
ljmp
inc
mov
inc
and
push
add
xlat
xchg
les
cmp
mov
and
mov
adc
hlt
mov
scas
enter
cmpsb
mov
or
mov
pop
xor
lock
sbb
call
movsb
movsb
pop
bound
call
jb
out
push
cs
dec
cmp
inc
cmp
xor
xchg
call
or
xor
mov
rcpps
fstpt
sbb
lock
dec
xlat
std
addb
in
xchg
mov
lret
andl
xor
cmp
icebp
iret
and
pop
xchg
xchg
sub
out
adc
nop
xchg
bound
mov
fimull
inc
push
mov
rol
jp
sahf
xchg
outsb
cwtl
xor
aas
jmp
push
rcr
out
and
loopne
sbbb
out
aaa
movsl
or
es
jno
arpl
pop
jmp
iret
out
mov
mov
add
sbb
aam
xchg
fcoms
jae
sbb
fwait
or
out
jl
cmpb
dec
sti
rcrb
pop
pop
js
negb
mov
cld
imul
or
push
push
ss
push
dec
outsl
in
imul
pop
mov
adc
out
mov
insl
mov
sbb
lds
cmp
les
call
mov
add
push
xchg
int
add
dec
adc
lahf
xor
push
sbb
enter
fnsave
and
aad
inc
adc
out
fadd
fmull
nop
mov
mov
xchg
jno
int3
repnz
inc
fcomi
stc
jns
and
push
jo
xchg
push
and
mov
xchg
cmp
pushf
jle
ljmp
mov
ret
mov
dec
mov
add
sbb
in
dec
cwtl
int
xor
je
ret
cmpsl
popf
cli
scas
fadds
ret
add
adc
mov
jns
xor
push
jns
call
push
and
push
imulb
lock
in
outsl
scas
xchg
and
pop
add
mov
sbb
xlat
in
push
inc
lods
add
lock
add
daa
notl
push
jbe
or
mov
and
xchg
sub
mov
mov
clc
inc
mov
pop
pop
call
fldl
jb
lds
and
lret
outsl
sti
mov
shr
cli
clc
movsb
pop
gs
add
pop
xchg
movsl
fistl
gs
jbe
out
repnz
call
shl
mov
cmc
cmc
cs
inc
and
outsb
pusha
adc
dec
adc
or
ds
pop
push
hlt
and
ror
mov
js
adc
divb
xchg
int
loop
loop
push
imul
daa
ret
repz
ror
nop
jb
push
lods
mov
mov
je
shll
xchg
xchg
test
mov
repnz
int3
test
fidivs
jo
lds
add
shl
ja
shll
in
flds
popf
icebp
cmp
cmp
or
and
call
sbb
add
loopne
dec
cmpb
mov
add
fneni(8087
or
jp
cmp
stos
xor
jns
mov
adc
je
mov
shrl
xor
push
add
cli
mov
or
dec
movsl
lretw
mov
and
pop
push
lahf
xchg
cmpsb
xor
xchg
mov
fisttpll
imul
xor
mov
mov
dec
popl
int3
shlb
cs
rcrl
xlat
test
xchg
cmp
mov
pop
or
enter
mov
movsb
jno
adc
aam
ljmp
cmpsl
cmpb
out
in
pop
jmp
das
lret
test
inc
movl
jb
rol
push
in
pop
mov
call
es
xlat
dec
push
cmp
mov
popf
leave
inc
sbb
or
insb
data16
cmp
rolb
xchg
mov
cmp
jle
sub
in
dec
sahf
inc
clc
jl
addr16
lret
jp
in
mov
mov
jno
popa
add
mov
adc
scas
ljmp
push
sti
imul
pop
pusha
mov
mov
cmpsl
xlat
sbb
cwtl
dec
jp
fistpl
pop
das
imul
nop
fwait
shl
pop
sub
adc
add
lret
insl
test
pusha
sbb
fs
mov
imul
addr16
mov
mov
sbbb
push
jle
in
add
mov
sub
mov
out
fdivrl
and
fwait
arpl
data16
push
or
mov
inc
cmp
pop
sbb
iret
and
adc
out
fs
int3
add
mov
sub
xchg
fdivr
addl
mov
xor
push
or
mov
out
in
xchg
inc
and
movsb
sub
cwtl
scas
and
cltd
cmp
cs
popa
mov
jnp
ficoml
jp
pop
movsl
enter
dec
popl
arpl
mov
xchg
bound
jg
bound
xor
cs
push
loopne
mov
pop
sub
mov
stos
sub
int3
xor
dec
stc
call
iret
imull
cld
or
and
ja
movsb
xchg
arpl
cmp
cli
xchg
clc
cmpsb
into
jns
dec
xchg
inc
xlat
inc
push
fstpl
inc
insl
mov
adc
jbe
mov
pop
lahf
ljmp
sub
cmp
jbe
insb
lret
mov
lea
idivl
push
fwait
cwtl
mov
psubusb
lods
and
push
dec
adc
cmp
add
adc
xchg
lret
ljmp
js
pop
xchg
ss
dec
adc
mov
add
sarb
mov
sub
xor
ss
xchg
add
fs
mov
lods
jecxz
decb
sub
pop
xchg
in
shrl
popfw
push
test
out
mov
sub
sbb
push
mov
xor
jne
sub
cmp
imull
std
mov
xchg
push
jle
in
mov
andb
xor
stos
dec
adc
pop
sbb
add
jecxz
jp
jp
sysret
xchg
fs
xchg
mov
lods
fwait
xchg
outsb
mov
addr16
shll
lea
mov
outsl
cmc
pusha
dec
cwtl
scas
sti
fcmovbe
sbb
in
dec
js
mov
insb
mov
jl
loop
push
bound
pop
int
add
lods
dec
ret
push
fcmovne
ja
imul
insb
shl
sub
int
ljmp
and
mov
stc
cltd
lret
dec
inc
mov
add
roll
jne
lret
fistpl
rclb
fimull
mov
adc
in
inc
jecxz
mov
mov
jb
mov
push
xchg
or
test
scas
mov
cmp
push
or
lods
push
push
int
mov
xchg
jge
mov
fstpt
test
imul
int
dec
into
leave
xor
stc
addl
test
sub
dec
loop
mov
in
ds
mov
sub
loop
scas
inc
shll
arpl
jg
inc
dec
or
mov
adc
add
or
sahf
xor
lcall
cld
pop
adc
or
call
push
cmpsb
scas
pop
jae
fidivs
rep
fidivl
jl
xchg
ja
xchg
pop
push
out
insl
data16
loope
push
lcall
mov
mov
lcall
lcall
or
and
es
xchg
out
jbe
iret
mov
adc
shlb
movsl
xchg
out
insb
shll
and
adc
jno
xlat
mov
sub
mov
enter
xor
les
sub
shlb
shll
xlat
and
loopne
idivb
push
out
std
popa
sbb
push
cmp
rcrb
dec
out
fwait
fwait
ret
jmp
int3
mov
sub
sub
jbe
mov
mov
jg
int3
lods
cmp
or
sub
cmc
mov
out
in
leave
dec
std
xchg
mov
mov
movsl
outsl
sub
mov
and
lea
inc
scas
and
xchg
cmpsl
cmp
icebp
les
mov
fwait
ljmp
pop
push
or
xchg
lret
gs
enter
fwait
lock
rcr
mov
dec
pop
or
dec
leave
mov
cmp
insl
sbb
bound
jecxz,pt
in
mov
sbb
pushf
cmp
pop
mov
cs
cwtl
xchg
mov
inc
mov
les
sub
push
fs
aaa
dec
shlb
pop
in
pop
js
and
mov
fadds
loopne
jae
outsl
andl
lods
mov
mov
add
mov
pop
xchg
add
jecxz
lods
pop
xchg
test
xchg
lods
dec
ret
testl
dec
mov
jg
xor
mov
pop
cmp
xor
loopne
jle
mov
lock
jmp
mov
add
inc
fisttpll
dec
aaa
popa
pop
pop
xor
dec
mov
push
xchg
jne
or
in
test
je
push
pop
cmp
cmp
imul
not
dec
and
add
aam
sub
cmp
ret
aad
enter
push
lea
pop
xor
mov
jbe
pop
arpl
addb
pop
divl
mov
sbb
sbb
jo
int3
ljmp
sub
adc
push
movsb
jp
cltd
movsl
std
push
pop
mov
lret
adc
pop
hlt
cmp
jns
push
enter
xchg
test
lahf
icebp
sub
cmp
sub
or
and
pop
ret
scas
sub
sub
in
add
xor
mov
xor
cltd
sbb
ds
jle
push
xchg
mov
sti
aad
jg
and
mov
jno
xchg
mov
sbb
invd
pop
sar
dec
push
mov
lret
out
rcrb
add
insb
mov
out
fs
insl
aaa
loope
iret
mov
and
mov
fdivs
lahf
cmc
outsb
xchg
pop
pop
jno
repz
pop
outsl
pop
or
lret
loopne
cmp
test
mov
adc
dec
jo
push
dec
movsl
cmp
leave
cwtl
outsb
pop
daa
jmp
clc
pop
into
xchg
jne
sbb
fst
rolb
ud0
jae
adc
test
pop
mov
xlat
in
jo
rcrb
jg
lods
push
push
gs
cmp
push
xchg
mov
and
push
pop
int3
mov
sub
and
outsb
pop
mov
jle
adc
mov
push
mov
inc
xchg
cld
dec
jmp
push
loope
xlat
fisubs
nop
lcall
movsl
clc
fiaddl
mov
inc
xchg
addr16
out
add
cmpsb
dec
mov
fnstcw
lahf
repz
lds
fs
outsl
out
sbb
in
test
pop
icebp
inc
fsubrs
lahf
shrb
rcl
mov
sub
scas
jp
inc
mov
jo
das
mull
or
fs
push
nop
fcoms
cltd
pusha
pop
cmp
push
aad
fldl
or
and
or
push
xor
adc
stos
push
push
dec
dec
cwtl
sbbb
lods
out
mov
js
or
repz
xchg
jns
arpl
push
loope
aam
pop
add
xchg
sub
sub
loopne
imul
mov
xor
int3
jl
iret
das
dec
jmp
mov
scas
adc
inc
sbb
fldenv
inc
js
leave
inc
mov
std
lret
mov
mov
gs
push
in
loope
push
in
jne
dec
pop
stc
push
add
dec
mov
mov
cmp
outsl
bnd
xchg
dec
fldenv
push
fs
add
std
mov
fwait
xchg
leave
vmread
in
adc
xor
mov
loopne
popf
decb
or
sti
push
icebp
pop
push
bound
jl
xchg
add
sub
testb
push
jle
dec
scas
mov
cld
outsl
nop
sbb
nop
pop
inc
ds
out
xor
mov
ret
mov
dec
movsb
js
mov
aam
arpl
fsubrl
roll
loopne
add
jmp
xchg
fbstp
cmp
xor
lock
out
sbb
add
out
xorl
in
arpl
adc
inc
sbb
outsb
rol
pop
mov
int
sub
cmpsl
push
lds
xorb
bound
stos
into
inc
addr16
dec
decl
mov
jmp
ja
outsb
or
ljmp
js
lods
nop
mov
pop
mov
mov
icebp
mov
mov
imul
mov
int3
test
in
addb
mov
movsb
stos
testb
mov
lret
in
inc
jno
pop
cmp
sbb
mov
adc
and
dec
jne
fsubrl
cwtl
das
or
jb
rcrb
cmc
out
push
fwait
mov
mov
clc
jecxz
ret
aas
sbb
mov
outsb
xor
push
jno
aas
jbe
mov
xchg
adc
dec
popf
xchg
daa
movb
repz
data16
pop
fwait
pop
dec
flds
mov
jg
lods
pop
mov
shll
jno
adc
mov
xor
mov
adc
in
int3
dec
adc
fisubrl
pop
lret
xchg
dec
lahf
lock
adc
lcall
shll
sbb
dec
sub
jl
pop
arpl
aad
loope
and
mov
push
test
jmp
cltd
sbb
aam
and
xchg
pop
leave
xchg
xchg
mov
mov
and
push
inc
xchg
sbb
pop
mov
sub
out
data16
int3
xchg
imul
cwtl
ljmp
cmp
push
jns,pt
jg
jge
xor
mov
sub
mov
inc
sbb
or
xor
fsubr
sbb
pop
xlat
js
insl
sbb
test
ds
inc
inc
push
pop
jl
or
mov
bound
pop
jb
jle
lea
pop
test
fisttpll
sbb
outsb
rorb
jp
push
mov
out
addr16
pop
pop
cli
xor
jo
je
lds
cmp
scas
andl
sub
enter
dec
popf
fcoml
pusha
sarb
xchg
jecxz
push
in
adc
jns
movsl
xchg
xchg
lret
test
jno
jl
push
adc
es
xlat
ret
mov
out
imul
mov
xor
shl
pop
lock
lds
mov
imulb
mov
aas
fistps
ja
cmp
add
stc
mov
jbe
rcrl
xchg
mov
dec
xlat
imul
sbb
cmp
pop
pop
xchg
addr16
data16
popa
xor
packuswb
adc
dec
in
dec
imul
xor
cld
adc
and
dec
mov
mov
gs
insl
adc
sbb
call
cs
cli
shrb
lea
test
mov
jl
jg
adc
lret
sbb
data16
out
push
ss
or
and
add
cmp
scas
and
cvtps2pi
push
sub
sahf
idivl
fcmove
imulb
and
lcall
push
inc
adcl
push
mov
cmc
ja
cld
loope
in
aam
cli
xor
popa
jmp
mov
mov
xlat
test
mov
dec
test
push
insb
out
cld
cwtl
cwtl
imul
mov
xor
fstps
stos
dec
inc
xchg
jo
push
aam
insb
jl
cmp
jge
mov
jl
mov
insl
pop
add
fwait
pop
lds
add
mov
xchg
lods
cmpsb
xlat
mov
sub
lahf
out
addl
mov
roll
or
cli
dec
ds
movsl
add
test
fdiv
shrl
xor
test
sub
inc
leave
aam
sub
lret
dec
mov
xor
mov
mov
das
idivl
lock
test
jae
jnp
jno
shrb
xor
test
aam
sbb
mov
sbb
js
lea
add
nop
jne
add
push
clc
dec
pop
pop
cld
test
mov
movb
out
xlat
rcr
cmp
cmc
setle
xchg
fldt
and
or
dec
arpl
rcrb
mov
shr
sbb
pop
mov
jbe
xor
sub
inc
lods
bound
mov
or
push
in
pop
dec
dec
das
cmp
xor
sar
push
test
mov
stos
pop
push
ds
add
add
loopne
stc
movsl
mov
dec
hlt
sub
sti
dec
fxam
rcll
lds
orb
xchg
jo
popf
xchg
daa
loope
inc
lret
push
add
loope
sbb
iret
mov
pop
push
push
xor
xor
pop
add
pop
insl
mov
sub
call
dec
mov
repz
sub
lds
lret
mov
xchg
negl
jge
loope
shlb
jecxz
in
inc
out
dec
sti
sub
jno
jbe
repnz
stos
inc
push
sub
push
pop
leave
in
lods
fwait
std
dec
pop
pop
out
cld
jno
mov
stos
lret
or
mov
mov
imul
cmp
mov
cmp
dec
dec
sub
daa
add
push
xor
jbe
add
cmc
xor
jp
pop
sahf
movsl
or
inc
out
push
insl
jbe
inc
push
pop
in
jecxz
jae
dec
mov
sub
mov
lods
mov
adc
in
rcll
jmp
jle
roll
mov
repz
pop
mov
pop
jno
or
icebp
lret
shlb
repnz
xchg
test
mov
test
nop
pusha
jge
test
push
call
dec
pop
xor
cwtl
xlat
iret
and
stos
cmp
and
in
jle
cmp
push
loop
xchg
jb
push
cld
stos
mov
notb
int3
xor
loope
dec
jno
mov
in
sbb
jo
mov
and
insb
in
out
or
xor
cmp
sti
pop
lods
repnz
jb
push
xchg
push
outsl
mov
sub
mov
mov
inc
sub
scas
adc
pop
mov
push
arpl
aas
dec
jge
enter
leave
dec
add
or
dec
push
subb
inc
and
in
fcoml
mov
in
jns
mov
in
mov
lods
jbe
push
lods
ret
jmp
loop
in
cmpsb
subl
mov
adc
sbb
outsl
and
ret
mov
inc
cwtl
inc
push
outsl
insb
inc
lods
int
jnp
jbe
test
in
xchg
imul
test
test
rcll
in
mov
cltd
fisubrs
mov
loop
addr16
cmpsl
minps
and
sub
in
cmp
and
xchg
cmp
jns
test
sbb
roll
mov
mov
jo
aaa
mov
pop
cltd
sti
xor
stos
xor
ret
xchg
or
rcrl
bound
jp
mov
imul
sub
not
inc
repnz
or
add
int
fimull
mov
icebp
or
cmp
call
or
mov
mov
rcrb
mov
push
cmp
push
add
pop
or
pushf
cmp
scas
sub
xor
sbb
add
sub
aaa
hlt
enter
sbb
cwtl
scas
lcall
pop
sbb
mov
movsl
nop
dec
cmp
jo
scas
or
dec
mulb
popf
mov
pop
jp
push
and
out
mov
lret
divb
lret
pop
in
jl
xchg
push
inc
int3
icebp
sub
inc
push
ds
pop
lods
or
repz
ds
inc
fwait
xchg
repz
shll
fwait
cmp
sub
outsl
push
xor
adc
mov
xor
adcb
push
sub
sub
in
test
sbb
out
jecxz
iret
les
pop
scas
mov
scas
nop
jns
push
imul
mov
cmp
lds
iret
or
xchg
jg
iret
int
xlat
repnz
add
testb
dec
out
pop
xchg
ja
fmuls
addl
pop
dec
fwait
lock
sarl
mov
mov
push
cmc
add
cli
pop
mov
xchg
popl
push
jg
test
lock
mov
pop
les
leave
push
cli
aaa
mov
shrl
pop
nop
jbe
loope
inc
mov
sub
stos
push
loop
push
mov
or
push
and
cmp
cmp
add
jno
adc
xchg
stc
xchg
jp
outsb
es
mov
jae
cltd
lret
js
mov
jg
mull
mov
jb
mov
mov
fisttpl
lds
in
sbb
scas
dec
out
mov
mov
push
jns
xor
repz
mov
mov
push
mov
pop
int3
mov
aas
and
pop
insb
mov
mov
pop
dec
mov
or
insl
outsb
lods
mov
ss
jo
int3
sub
xchg
xchg
jno
sub
js
dec
stos
in
inc
int
inc
das
call
cs
pop
mov
fadds
xchg
pop
jae
in
lcall
fisttps
mov
push
xchg
dec
iret
push
rcll
lret
jbe
mov
je
loope
push
sbb
dec
lret
add
adc
cltd
adc
inc
cmp
jbe
cmp
sbb
xchg
mov
jl
out
lcall
subl
mov
loope
dec
mov
inc
fidivs
pop
jns
movsl
jnp
iret
out
mov
stos
test
fbstp
popf
imul
dec
add
or
mov
jge
gs
cmp
sub
jp
mov
negl
shl
mov
stc
push
and
fadds
sub
test
enter
fldt
fmul
xor
sarl
mov
adc
push
sti
icebp
cwtl
ss
push
mov
loopne
lods
sbb
inc
xor
and
orl
jmp
addr16
push
and
decl
pop
xor
das
sub
mov
popf
inc
or
add
pop
push
ret
outsl
mov
xchg
shrl
inc
rolb
data16
mov
stos
pop
inc
imul
xor
fst
outsb
jmp
pop
shlb
int3
ja
sbb
orb
mov
iret
out
inc
lret
jns
xor
fsubs
mov
repnz
sub
jge
test
lods
nop
mov
faddl
imul
push
sbb
mov
mov
outsl
pop
stc
pop
xchg
jecxz
xchg
leave
mov
or
push
mov
sub
mov
mov
xchg
sbb
dec
hlt
int
sbbb
xor
dec
lods
jae
and
clc
push
or
pop
sub
jne
jge,pn
adc
mov
mov
mov
scas
mov
pop
out
add
into
mov
sti
mov
mov
dec
loop
leave
ja
pop
mov
js
xchg
shrb
rcll
or
pop
inc
pop
or
addr16
sti
enter
addr16
push
push
pop
push
shl
pop
xchg
arpl
test
cmpsb
je
cwtl
subb
shl
int3
gs
test
gs
xchg
and
sbb
rolb
cmp
push
dec
push
test
daa
dec
loope
das
js
push
ror
jo
lock
rol
shll
hlt
pop
xor
cmp
cld
sbb
pop
inc
xor
cmp
or
push
iret
aaa
cwtl
dec
mov
aas
inc
xor
xor
jae
fnstenv
adc
jl
lret
pop
mov
aam
dec
gs
inc
sti
push
cmp
xor
loope
push
leave
imul
shll
and
inc
adc
add
mov
adc
jge
das
xor
aad
pop
cltd
inc
outsb
xor
sti
sbb
das
xor
dec
adc
scas
mov
jle
test
ja
int
js
cmpsl
iret
add
or
pop
sub
pop
sub
jl
pop
adc
pop
ljmp
jle
mov
push
jecxz
xor
enter
insl
arpl
cld
mov
xchg
adc
jge
pop
leave
xchg
fstp
jg
cmp
out
aad
xchg
lahf
adc
xlat
imul
scas
cli
aam
or
pop
fwait
push
add
and
loop
push
push
lret
fsubrs
or
cvtps2pd
inc
out
adc
cmp
lahf
jecxz
mov
xor
mov
daa
repz
push
dec
inc
sbb
shll
jae
jb
aas
gs
leave
xor
ljmp
das
xor
jmp
xor
mov
loope
mov
jb
xor
dec
shrl
jg
fimull
and
inc
fmul
and
jns
inc
or
std
adc
jbe
push
push
enter
cwtl
jle
call
out
popa
pop
cmp
add
push
cmp
jle
sub
mov
cli
shll
imul
fdiv
push
lret
fsub
push
push
bound
rclb
cmc
test
mov
adc
cmp
jg
cltd
ds
call
cli
push
xorl
pop
loop
xchg
bound
out
push
xlat
bswap
jo
mov
jecxz
or
cmp
addr16
jle
rcr
jge
sbb
cmp
negb
sbb
or
inc
bound
push
mov
mov
in
lods
jne
jmp
out
mov
repz
pop
dec
sub
insl
js
xor
jg
jle
into
stos
fimuls
fucom
dec
pop
adc
out
push
incb
arpl
push
adcb
and
or
test
xchg
rclb
xor
mov
aas
iret
sub
out
aaa
stos
aam
add
jbe
xchg
rorl
mov
push
insl
xchg
pop
repz
jge
push
jecxz
sub
inc
pop
in
fldt
out
sub
sbb
roll
lahf
cli
mov
rclb
and
out
push
xchg
pop
std
inc
sahf
push
pop
mov
loop
jl
mov
in
and
fisubl
jge
daa
jne
pop
stc
mov
xchg
in
addr16
je
stc
cmp
adc
sbb
arpl
xchg
sub
pop
sar
scas
lock
dec
ror
pop
outsl
lods
mov
fs
xor
push
mov
repnz
jmp
inc
testl
cmp
cwtl
idivl
clc
sub
nop
jo
popf
mov
add
dec
jno
sarb
sbb
insl
filds
in
adcl
icebp
test
cmp
test
imul
xchg
jmp
xchg
inc
sbb
mov
dec
sbbl
imul
push
nop
aas
out
or
ret
pop
mov
adc
leave
pop
scas
imul
add
ss
mov
ja
inc
push
jp
data16
cmp
dec
call
inc
out
adcl
cmpl
cld
sti
cmp
das
stos
or
lds
shr
mov
in
pop
push
mov
repz
gs
mov
add
xchg
sti
sbb
and
adc
imul
xlat
dec
mov
leave
mov
int
pop
paddb
mov
pop
imul
adc
lret
pop
jp
lea
push
insb
push
pop
xor
sub
in
test
adcl
jge
fnsave
in
out
dec
daa
icebp
fndisi(8087
repz
adc
testb
push
loop
ret
stc
add
cmp
aas
and
loop
push
jmp
call
jbe
loope
jmp
js
js
mov
insl
sub
xchg
inc
lock
jl
inc
imul
sarb
popa
cmpsb
xor
mov
xor
push
mov
subl
adc
jns
dec
sbb
out
ror
sub
lods
jnp
xchg
and
xchg
cmp
je
and
xor
fcmovne
addr16
in
cmc
adc
jmp
cs
fs
add
out
mov
xor
mov
xchg
cltd
inc
imul
test
gs
int3
add
loopne
outsb
icebp
cmp
jmp
inc
push
xchg
xor
fs
dec
mov
mov
dec
mov
outsb
mov
aad
idivl
adc
dec
cmp
sar
fs
out
dec
rcll
es
repz
lods
call
and
notb
jle
loope
inc
cmpsl
pop
inc
ret
mov
mov
push
ret
push
loopne
les
lcall
imul
loope
adc
add
cltd
mov
jecxz
pusha
lock
push
bnd
cwtl
xchg
sbbb
pop
xchg
je
leave
sbb
mov
mov
movl
and
mov
in
gs
xchg
mov
fwait
pusha
adc
add
or
add
mov
inc
test
push
loope
cmp
ret
push
hlt
push
mov
enter
popf
int3
je
rcr
mov
fisttpl
or
mov
ret
shl
fisubrl
jae
jno
outsb
fidivs
xor
das
inc
mov
pop
inc
fildll
in
push
into
lret
popa
mov
jne
inc
scas
jns
out
jmp
popf
outsl
call
sbb
jb
sbb
jecxz
and
jo
shrd
test
jl
push
mov
push
pop
inc
adc
test
xlat
xchg
xchg
sbb
cmp
cmp
or
mov
cmpsb
loop
hlt
inc
pop
mov
inc
mov
or
jmp
imulb
aaa
sbb
mov
xchg
int
or
xor
dec
xchg
nop
jecxz
fcmovb
dec
inc
lods
jmp
adc
pusha
sub
les
sub
into
jl
sti
out
pushf
add
scas
inc
jae
leave
xchg
jno
sub
test
sarl
les
inc
iret
filds
mov
lret
cmc
pop
out
sbb
sub
rcll
jle
loopne
add
mov
inc
jmp
movb
mov
or
or
cmp
add
and
iret
pop
mov
repnz
mov
pop
jne
jmp
cltd
sub
aas
lds
lahf
jecxz
cli
cmc
dec
mov
gs
mov
dec
movsl
push
dec
push
scas
fwait
mov
cmc
inc
imul
pusha
ret
push
pop
inc
xchg
add
xor
in
mov
div
xchg
imul
popf
mov
push
adc
in
sub
test
adc
dec
cmp
pop
mov
mov
outsb
jb
inc
adc
mov
jmp
outsl
aas
xchg
inc
add
and
jne
mov
push
repnz
or
pop
push
inc
xchg
sbb
popf
pop
lods
xchg
xor
xor
arpl
in
push
mov
nop
iret
and
cmp
testb
outsl
cmp
sahf
pop
pop
out
sub
add
mov
outsb
mov
je
js
lret
add
sbb
cmpsb
or
out
add
popf
xlat
movsb
push
inc
mov
cmp
sub
jbe
mov
inc
jg
inc
push
lret
cmpsl
call
repz
psraw
fbld
mov
inc
cli
mov
rorl
int
jle
out
stos
in
mov
imul
xor
cli
sarl
cs
mov
xor
mov
xchg
enter
dec
sbbb
out
cld
cs
les
xchg
icebp
dec
xor
scas
xchg
orb
nop
in
mov
idivl
cmp
movsb
mov
cs
cmp
icebp
xlat
shl
xor
adc
fucomi
pushf
int
mov
xlat
jge
cmpsl
xchg
andb
sub
sub
pop
jle
mov
xchg
dec
jmp
arpl
imull
ret
push
nop
cmp
or
int
xlat
dec
push
fimuls
adc
lock
cwtl
mov
xchg
out
fisubs
jae
das
pop
mov
cld
fnstsw
jae
inc
dec
mov
or
fwait
mov
jnp
pop
ret
testl
xchg
into
sbb
test
lahf
ja
arpl
and
cld
aad
pusha
out
sbb
nop
lds
outsb
aad
popa
pop
cwtl
jmp
scas
out
cmp
mov
insl
cmp
mov
adc
and
dec
shll
fisubs
ja
test
inc
push
jg
xorb
into
shlb
and
lret
movsl
sbb
sub
shll
pop
clc
mov
lret
sahf
jae
cmp
cwtl
in
and
mov
pop
pop
fcompl
mov
inc
sbb
lock
cmp
cltd
push
dec
xor
cmp
scas
ss
sub
xlat
bound
testl
shl
outsb
push
adcl
fstpl
das
push
loop
cwtl
cltd
inc
lods
sahf
dec
or
or
aad
inc
mov
jg
add
dec
pop
test
dec
rcll
shrl
push
cmp
std
jae
popl
clc
sub
out
pop
mov
pop
jecxz
xchg
loopne
call
xchg
subb
pop
cli
in
jae
hlt
clc
and
sti
push
mov
addl
pop
jne
sub
xor
es
ds
xchg
test
adc
test
sub
insl
xor
xor
cmp
int3
stos
ret
ds
sbb
insl
pop
mov
ljmp
and
jmp
jno
shlb
mull
fstpt
xchg
mov
js
sbb
add
je
in
mov
out
sbb
cmpl
fdivs
mov
dec
add
fs
mov
mov
mov
dec
sbbb
and
mov
push
sbb
test
or
push
sbb
jecxz
filds
add
lods
jle
or
pop
cs
xchg
fwait
imul
lcall
and
daa
sbb
adc
loope
sbbb
and
jbe
pop
xchg
xor
shll
and
sub
lret
fbstp
dec
cmpsl
shl
loope
insb
dec
pushf
add
nop
xor
iret
arpl
int
mov
movsb
cmp
clc
loope
jns
mov
jns
int3
dec
add
lret
or
movsb
fisttps
fcomp
sarl
pop
xor
pop
jmp
lock
sti
jnp
test
cltd
leave
scas
loope
int3
leave
sbb
sub
xchg
jns
mov
sti
int3
sarb
or
loop
out
sbb
jo
push
cmp
jo
pop
mov
mov
stos
scas
sbb
scas
pinsrw
sub
ret
push
xchg
jp
cmp
ret
xor
xor
lret
shrl
fcmovne
iret
enter
xchg
aaa
jmp
mov
add
enter
push
mov
mov
and
cmp
push
and
jmp
pop
inc
or
mov
into
pop
cli
jge
xor
push
fbstp
cmp
mov
or
inc
jmp
lret
inc
cmp
push
sbb
sub
pop
xor
adc
in
cmpsb
mov
lods
jecxz
jecxz
sti
scas
fwait
or
add
add
loope
mov
add
jg
imul
inc
jge
jl
jmp
aad
adc
stos
bound
dec
add
mov
lcall
pop
ret
xchg
push
and
or
xchg
and
sbb
lds
rcrl
fadd
or
adc
adc
push
xchg
jno
mov
jp
cmp
call
fcoml
cltd
jl
leave
sbb
push
daa
jg
int3
adc
test
push
mov
jge
xchg
outsb
push
pop
lret
fistps
jecxz
xchg
nop
push
in
jbe
mov
aas
lcall
pop
cmc
inc
mov
mov
rcl
jge
mov
ljmp
out
arpl
push
adc
out
testl
mov
lret
scas
pop
lret
and
outsl
inc
xchg
loopne
bound
pop
mov
sbb
cld
pop
repz
or
out
fwait
movsl
fstps
push
out
in
push
jae
idivb
cwtd
shr
fmul
xchg
jae
mov
sub
out
test
jge
neg
rcrl
jp
repnz
lahf
gs
mov
dec
xchg
leave
out
lds
push
sub
fmuls
dec
psubq
cmp
rcll
rcrb
jnp
xchg
sbb
pop
sbb
push
jge
pop
movsl
movsl
push
xor
jne
aas
mov
shll
mov
mov
bound
lea
inc
outsl
int3
cli
jp
fisubl
ljmp
xor
test
lahf
or
gs
popa
jo
les
scas
mov
sbb
inc
dec
mov
or
push
xlat
or
aam
xorl
mov
xor
xor
xchg
or
jp
out
inc
lock
cmp
xor
cltd
xlat
shlb
add
mov
gs
call
push
mov
aam
das
pusha
sbb
loope
in
xor
jo
push
sbb
mov
shr
inc
or
and
test
mov
sub
std
fisubl
fldcw
xchg
test
pop
cli
dec
cmpsl
pop
jl
pop
or
cld
xor
fwait
cmp
pop
pop
xchg
pushf
sti
jmp
ds
insl
dec
gs
pop
push
in
rolb
pop
adc
push
xor
int3
insl
xchg
stc
leave
push
jge
inc
pop
daa
mov
sarl
mov
adc
adc
add
xchg
add
or
and
roll
adc
sbb
jne
push
in
pop
into
shll
lfs
push
fisubs
jno
rorl
adc
push
jge
inc
repz
pop
jecxz
in
movsl
aad
sub
xchg
sub
sub
pop
pop
inc
out
inc
fadds
and
test
cmp
mov
jae
aad
lea
sbb
cmp
or
adc
daa
push
mov
ljmp
xchg
push
xor
sbb
les
push
lods
cmp
pop
ret
or
xor
stc
jmp
dec
cmc
lea
inc
mov
gs
push
gs
cmp
adcb
mov
jge
ficoml
test
std
and
into
pop
xor
out
aaa
fwait
cltd
mov
les
mov
loopne
movsl
faddl
adc
push
cli
popf
pop
icebp
shl
xchg
add
cli
lahf
pusha
inc
scas
xchg
mov
push
mov
xchg
sbbl
xor
dec
subl
and
popa
test
add
dec
addr16
cmp
lods
ljmp
stos
and
cmp
cmc
pop
cmp
popa
ljmp
test
popf
or
xchg
mov
mov
pop
xor
or
jmp
jmp
rolb
xchg
pop
inc
jle
adc
xor
sbb
mov
out
sub
outsb
and
mov
adc
and
aas
dec
jb
ret
imulb
mov
push
jg
inc
sub
adc
movsb
sub
push
arpl
push
fisttps
push
add
cmp
mov
in
add
jnp
out
mov
dec
lods
push
sub
movaps
sub
push
adc
and
push
inc
or
into
sti
cli
inc
into
inc
fildll
pop
add
sarl
and
aam
pop
fists
xchg
test
int3
pop
js
sbb
sahf
aam
lea
ljmp
mov
mov
in
ss
lea
test
jmp
add
xor
sub
adc
jecxz
mov
mov
dec
pop
mov
sbb
jecxz
sbb
mov
xchg
outsl
push
pushf
aaa
push
sbb
ljmp
mov
notb
xor
jne
inc
pop
adc
insb
insb
cmc
ds
add
xchg
cmp
pop
jmp
mov
das
push
lret
imul
mov
nop
call
in
clc
lahf
sbb
aas
jo
shrb
pop
jp
mov
jo
or
test
adc
cmpsl
mov
inc
sbb
sub
shrb
fs
xchg
clc
std
mov
stos
xchg
cltd
mov
xor
ja
bound
push
push
and
icebp
loop
dec
test
jg
insb
data16
sub
fcmovbe
out
sub
cmp
es
les
xchg
aaa
or
nop
sbb
mov
mov
inc
sti
xor
iret
mov
stc
sbb
test
cmp
loop
outsb
lahf
lahf
or
test
inc
arpl
cltd
into
add
xor
pop
xchg
and
xchg
sahf
sub
ret
adc
cmp
sbb
mov
jle
sub
jmp
push
sti
push
in
xor
rol
jne
cs
cmp
sbb
cwtl
pop
dec
adc
mov
mov
push
or
jg
mov
lret
cwtl
shlb
mov
lret
in
lahf
js
cmp
rorb
dec
imul
stos
xor
jb
xchg
fnstsw
push
lcall
stc
pop
lods
pop
repnz
aas
mov
xorl
call
inc
push
dec
add
das
xor
xchg
lcall
and
sub
insb
adc
lods
jg
lahf
add
lods
mov
or
sbb
pushf
mov
out
movsl
xchg
mov
sbb
push
clc
push
enter
mov
repz
sbb
insl
mov
mov
or
or
jg
lods
xchg
fistps
addb
lods
lcall
test
push
pop
push
bound
inc
inc
pusha
jmp
fists
test
sbb
cmp
inc
ret
dec
push
inc
and
push
addr16
cmp
int
mov
scas
sbb
push
insl
or
and
mov
cmp
rorl
frstor
push
dec
scas
ret
mov
je
lret
pop
add
inc
ret
call
sub
push
lods
rol
ljmp
jnp
jle
add
jp
lods
ds
push
adc
mov
jp
addr16
mov
xchg
inc
mov
inc
sbb
pop
xchg
dec
cmpsb
and
mov
sub
movsb
cli
enter
and
adc
ljmp
sarb
aas
cmp
inc
push
add
dec
test
mov
jmp
sub
fbstp
jae
lahf
sub
adc
das
jbe
xchg
in
es
scas
sub
pop
dec
and
jae
xchg
cmp
lret
outsl
xchg
clc
xor
aaa
cld
shr
jne
fwait
leave
arpl
out
xchg
mov
jb
scas
pop
leave
je
cmp
jge
inc
adc
test
adc
imul
or
inc
rol
divl
push
leave
loopne
or
fisubs
aad
and
jb
dec
ret
xchg
pushf
jmp
and
cmp
or
jae
outsb
push
out
movsl
lods
xchg
push
xchg
ss
daa
aaa
and
inc
insb
cltd
jge
shr
addr16
icebp
cltd
add
adc
dec
xor
xchg
sub
les
out
stc
rol
dec
ror
les
lahf
iret
rolb
adc
lds
daa
inc
stos
in
fwait
cli
inc
dec
cmp
xchg
jo
fstpl
pop
adc
insl
ss
in
or
xor
jle
imul
pop
pop
loop
xchg
mov
movsl
pop
mov
ficoms
scas
aas
xchg
jnp
push
mov
push
sbbl
jl
add
into
adcl
mov
pop
daa
xor
adc
addl
orb
add
sbb
or
lods
dec
xchg
orl
mov
push
mov
pop
push
mov
mov
cmp
dec
mov
mov
and
pop
cs
pop
cmp
in
jae
fisubl
mov
push
push
les
dec
sub
pop
inc
jnp
mov
imul
pop
insb
ja
adc
cmp
cltd
movl
mov
sbb
lahf
and
in
data16
mov
adc
test
sub
jb
movsl
mov
jae
add
inc
aaa
sub
incl
cmp
push
loop
mov
aad
pop
add
mov
sahf
xchg
sbb
clc
mov
cmp
dec
mov
xor
rclb
sbbb
and
mov
cmp
and
jne
mov
push
push
jno
scas
gs
dec
push
clc
std
sbb
mov
mov
push
fidivs
filds
sbb
ja
mov
out
mov
lret
scas
and
stos
out
pusha
imul
ja
rorl
jle
mov
jns
inc
pop
xchg
lods
jo
fisttpl
stos
daa
mov
sbb
xor
mov
ds
test
insb
loopne
mov
xchg
fisubrs
mov
cltd
push
xor
jae,pt
icebp
out
or
mov
inc
scas
pop
movsl
add
xchg
push
jp
jmp
push
ljmp
inc
mov
mov
imul
cmpsb
sbb
xor
fnsave
mov
cld
rcll
test
mov
pop
insb
jle
test
pop
inc
adc
enter
dec
dec
out
mov
add
filds
cltd
inc
add
xchg
add
xchg
mov
pop
mov
fistps
cmp
ja
out
inc
ffreep
jb
push
daa
into
insb
ret
inc
insb
adc
or
mov
adc
xchg
call
lret
adc
fs
mov
movsl
pop
xor
adc
mov
add
add
movsb
fwait
mov
xchg
loope
int3
jg
push
aam
push
xchg
jne
call
out
inc
inc
dec
fdivrl
shl
shl
divb
int
jmp
fimuls
add
cli
jmp
jge
xlat
sti
ror
iret
outsb
mov
into
mov
inc
pop
stc
mov
mov
xchg
and
imulb
hlt
cmc
outsb
mov
xor
popf
out
insb
or
pop
shll
mov
sbb
std
xor
orl
icebp
dec
mov
sub
imul
sub
imul
or
dec
push
pop
out
push
pop
pop
lret
hlt
cmc
mov
sub
pop
push
mov
dec
dec
jmp
jge
xchg
pop
sub
idiv
jmp
mov
mov
mov
in
stc
dec
into
and
mov
popf
jns
inc
mov
sarb
bound
fs
jns
xchg
adc
cmp
xor
cmpsb
and
inc
enter
mov
sbb
add
andl
les
int3
adc
lret
jmp
jl
addr16
cmp
imul
add
adc
aad
xchg
jo
hlt
xor
sbb
mov
imul
cmp
outsl
xchg
and
sbb
xor
fwait
pusha
xchg
pushf
xor
sub
jp
insl
dec
hlt
stos
jge
inc
xor
fstpt
pusha
cmp
cmpsb
sbb
cwtl
pushf
fsubrl
mov
adc
push
gs
xor
in
inc
in
cld
inc
push
ljmp
fstl
rcr
mov
inc
push
rclb
movsb
xor
lret
inc
xor
int3
inc
scas
and
addr16
nop
xchg
pop
jb
mov
lods
jmp
xchg
in
sub
lods
jo
sub
adc
push
or
inc
negl
adcl
cmp
cwtl
ficomps
xchg
aad
add
call
or
out
mov
icebp
mov
dec
sti
into
leave
into
xor
sub
out
test
and
pop
lock
cwtl
nop
xchg
and
jmp
mov
jne
popf
or
adc
loopne
mov
jno,pt
or
adc
lcall
dec
sub
repz
addb
add
aam
das
adc
fs
dec
std
mov
clc
dec
out
mov
push
mov
and
divl
mov
push
jge
dec
mov
lret
cmp
in
add
cmp
test
aam
add
mov
xor
call
or
cmp
push
and
jge
rcr
in
mov
roll
mov
inc
stc
pop
mov
pop
jnp
in
sbb
or
jnp
js
fnsave
inc
dec
out
inc
xor
sbb
loop
sbb
fnstenv
push
int3
sbb
sbb
pop
pop
push
hlt
xchg
out
punpckhbw
mov
pop
and
xor
aas
cmp
mov
add
in
test
mov
fstpt
aas
or
xchg
dec
jecxz
rorb
lea
push
out
and
lods
sbb
cmc
loopne
add
aam
aam
sti
mov
jno
cli
cmpsb
popa
or
jb
ja
xchg
mov
outsb
arpl
mov
xor
ret
sbb
cmovbe
lcall
paddusb
push
mov
inc
jecxz
in
sub
sbb
pop
ret
jae
mov
cmpsl
mov
shr
or
xchg
pop
inc
aam
sbb
jl
mov
cld
hlt
add
pop
fwait
movsb
aam
mov
fnstsw
push
xlat
and
mov
or
int
fidivs
and
std
clc
adc
iret
mov
lret
test
push
xchg
and
dec
dec
in
pusha
lds
lahf
cmp
add
fiaddl
pushf
test
in
jb
ss
add
ficoml
dec
pop
das
out
cmpsl
sbbb
std
testl
loop
repnz
dec
fistps
sbb
xor
jg
push
add
popf
test
hlt
mov
orl
nop
mov
xchg
lahf
and
adc
sub
push
mov
ret
add
dec
fstl
cmp
loopne
pop
mov
add
sub
stos
out
les
dec
xchg
leave
in
cmp
ret
shl
int3
loope
test
ss
repz
in
sahf
lcall
inc
icebp
sbb
and
cmpsl
aas
out
jo
mov
and
cmp
outsl
shlb
daa
add
or
mov
notl
sbb
cs
jmp
mov
loope
cmp
lods
and
pop
sub
jae
cs
cmp
or
xlat
cltd
js
iret
pop
or
pop
pop
add
in
ja
je
stc
push
or
dec
mov
sbb
scas
sbb
sbb
dec
jp
lods
jle
enter
subl
cmpb
jecxz
je
out
fisubrs
sub
and
inc
int
mov
iret
cmpsl
push
repz
add
fwait
xchg
les
inc
fsubp
icebp
daa
dec
test
mov
push
mov
push
cwtl
inc
mov
cmp
mov
mov
add
pop
test
jns
and
mov
scas
and
dec
fldcw
sbb
lahf
mov
sbb
in
adc
lret
mov
mov
out
scas
ss
sbb
pop
push
pop
flds
pop
add
sbb
mov
sbb
xchg
or
xchg
push
lea
mov
fsubs
adc
xor
xchg
testl
ljmp
test
xor
int
test
dec
movsl
mov
mov
mov
xchg
sbb
iret
iret
jns
iret
imul
pop
fs
pop
mov
insl
sbb
pop
cmpsl
pushf
in
test
jge
sbb
addr16
push
mov
sub
xorl
xor
scas
in
sub
outsl
mov
xor
dec
insb
adc
jns
imul
mov
mov
inc
ljmp
xchg
addr16
dec
repz
dec
pop
inc
mov
jnp
enter
add
lea
cmp
cs
xchg
test
mov
lock
sti
mov
aas
cmp
jge
and
cwtl
inc
xor
xchg
add
outsb
gs
lcall
pop
ja
out
mov
nop
xchg
cli
scas
test
inc
cmp
dec
popf
fwait
lret
jbe
leave
mov
fsts
pop
adc
push
mov
rclb
out
cli
js
xchg
lea
dec
adc
sub
pop
xchg
push
pop
ficoml
pop
mov
decl
sbb
mov
cmp
hlt
jge
inc
iret
lret
pushf
enter
jae
iret
sarl
inc
xchg
lea
and
xchg
iret
dec
lret
out
lds
and
xchg
ljmp
mov
lcall
imul
xor
ret
cmp
push
je
data16
in
ja
in
xor
mov
sub
arpl
inc
cli
jmp
sbb
sahf
cli
xchg
mov
pushf
fidivrl
mov
sti
sub
insb
imul
out
mov
sahf
pop
and
push
scas
inc
pop
lock
insb
and
outsb
out
dec
dec
icebp
pop
dec
sub
inc
push
test
aam
sub
xchg
dec
xchg
cmpsl
lock
jo
jae
ja
in
adc
addl
push
dec
loope
push
dec
mov
neg
mov
xor
insb
repnz
jmp
jecxz
adc
rclb
xorb
scas
addl
add
or
or
sub
in
mov
pop
inc
leave
sbb
mov
jnp
sbb
push
xchg
xchg
inc
ds
cmp
ja
out
aad
xchg
pushf
loope
shll
out
or
jae
dec
lcall
scas
inc
xor
mov
es
ljmp
adc
lock
add
arpl
mov
movsl
add
jl
push
adc
or
xorl
sub
test
movsl
in
clc
pop
cmc
push
jbe
xlat
insl
inc
leave
mov
xchg
movsl
lret
mov
divb
std
fstpl
bound
leave
sahf
sbb
cmp
lds
cmp
test
xchg
cld
das
xor
enter
nop
dec
mull
push
jmp
out
in
pop
mov
jge
push
rolb
jp
pop
sahf
dec
loopne
jge
xor
jmp
mov
pop
lods
xchg
push
xor
xchg
add
push
pop
jmp
clc
dec
ret
mov
es
lcall
fnstsw
push
leave
nop
push
or
test
shll
shlb
sub
icebp
lret
dec
mov
push
ja
xor
jbe
jecxz
ljmp
jmp
scas
cmp
jns
shlb
mov
mov
lahf
cli
sbb
push
fisttpll
xchg
sub
or
shrl
cli
sub
mov
mull
lret
adc
ljmp
push
out
rcll
fsubrl
enter
movsl
mov
cs
xlat
scas
dec
cld
sbb
xchg
cmc
sub
cmp
sub
cs
cmp
push
jg
jo
xchg
out
xchg
cmc
lods
test
fwait
lret
mov
dec
cmp
fistpl
xor
xor
xchg
cmc
push
pushf
loop
and
inc
jns
mov
push
insl
mov
push
adc
cltd
xchg
lcall
adc
mov
pop
lcall
sbb
adc
mov
xchg
push
dec
add
inc
mov
mov
incl
mov
and
fcomp
mov
cli
xor
mov
test
in
inc
popa
test
out
aad
jle
lods
xchg
xchg
lods
jl
jg
loopne
xchg
mov
add
shl
popa
imul
insb
fidivs
xor
scas
loope
jne
sarb
pop
push
sub
xor
sub
and
cmp
cmc
lcall
xor
cmp
cli
cmp
popa
iret
inc
mov
fisttps
shlb
imul
das
dec
loop
int3
in
mov
fs
fildll
movsl
xor
and
hlt
outsb
cmp
add
test
lods
outsl
lret
loope
fisubl
jl
jle
imul
push
inc
hlt
mov
push
lcall
push
dec
shrb
iret
push
adc
jb
jae
xor
out
inc
stos
cmp
cmovo
out
dec
pop
cmpsb
bound
into
mov
push
dec
sarl
aam
cmp
js
and
xlat
test
or
and
xlat
jl
inc
jnp
cmc
aaa
lahf
add
icebp
in
aaa
das
mov
pop
jge
shrb
xchg
pop
fisubs
dec
cs
push
fwait
or
sbb
mov
enter
mov
arpl
sti
and
mov
or
push
sti
leave
fcmovu
dec
sub
shl
pop
out
sub
hlt
lahf
dec
pop
cs
pop
dec
and
mov
add
xor
ljmp
lock
fwait
dec
xchg
popa
mov
jae
or
jb
sub
es
inc
mov
mov
pop
movsl
lcall
icebp
xor
sbbl
inc
scas
arpl
aaa
or
xchg
in
fistps
or
fdivs
push
lahf
aaa
enterw
add
push
or
add
mov
inc
inc
mov
sub
xchg
repnz
xchg
mov
scas
aaa
jb
adcb
jae
fistpll
aaa
insl
push
mov
std
and
loope
shlb
mov
mov
inc
adc
stc
fwait
xchg
inc
test
adc
fs
xchg
inc
jg
and
xor
inc
xchg
out
sub
fcompl
in
mov
iret
sbb
mulb
inc
cmp
dec
jns
jbe
xchg
push
pause
loop
xlat
pop
push
pop
adc
icebp
cs
fldl
mov
and
and
xchg
adc
insl
or
dec
push
addl
in
fisttps
repz
mov
jl
pop
fistpl
outsb
adc
push
lods
test
cmp
dec
and
aaa
popf
xor
imulb
cmp
es
stos
es
xor
sub
push
fdivrp
sbbb
pop
mov
sbb
jns
inc
mov
dec
pop
fisttps
mov
xor
fcomps
inc
dec
stc
dec
inc
pop
fldcw
sbb
cld
fimull
xor
jne
cwtl
lock
aam
cmp
in
fcoml
xchg
stc
sbb
or
stos
out
out
faddp
mov
dec
das
lcall
aam
int3
pop
aas
jmp
lcallw
mov
xor
or
push
es
mov
inc
inc
icebp
popa
mov
jne
stc
jb
out
mov
js
movsb
cltd
sbb
fildll
mov
ss
je
icebp
jmp
adc
mov
outsb
je
pop
pop
scas
lods
dec
jg
f2xm1
inc
pop
lret
mov
out
cmpsb
add
pop
icebp
or
pusha
xchg
test
imul
outsb
scas
or
movl
stos
sub
sbb
mov
or
sahf
aas
ret
xchg
or
arpl
imull
ljmp
jecxz
adc
xchg
cwtl
cmp
shr
xchg
fwait
mov
push
ljmp
mov
mov
pop
pop
and
mov
mov
clc
sbb
lds
test
ret
ljmp
mov
movsb
or
insb
gs
pop
test
push
in
lds
repnz
aad
js
cmc
pop
aas
das
and
jnp
mov
xchg
jae
xchg
lret
ret
push
shlb
in
aaa
push
adc
pop
or
mov
mov
mov
mull
jg
in
fcomip
paddusb
aas
push
jb
add
cmp
mov
ja
sub
stos
adc
in
scas
daa
pop
adc
mov
mov
push
orl
xchg
xchg
sbb
push
and
sbb
jbe
shrl
popf
add
jne
lahf
out
push
jo
dec
pop
outsl
jb
int3
lock
test
jae
sbb
mov
repz
pop
call
dec
xchg
in
pushf
pop
outsl
aam
lahf
or
adc
add
add
jbe
and
mov
pop
sti
cld
fstps
pop
or
jnp
xor
xchg
and
dec
cli
add
in
subl
pop
testb
in
mov
mov
lea
lods
mov
sti
push
dec
ja
mov
and
or
sbbl
cmpsl
imul
cmpb
cwtl
jecxz
sbb
std
inc
cmp
mov
ljmp
dec
nop
cli
or
mov
movsl
sub
sahf
mov
lods
add
lea
xor
movsl
or
push
or
repnz
les
pop
inc
sub
sub
inc
add
sbb
sbb
rol
fwait
incl
sub
cmpsb
pop
mov
hlt
sub
push
mov
push
sub
popa
fstp
xchg
out
xchg
add
leave
scas
and
add
stc
test
enter
ss
inc
movsl
mov
jmp
in
insl
fwait
test
repz
push
icebp
cltd
cmp
add
cwtl
lods
mov
subl
ss
adc
sahf
je
pop
rorb
add
mov
jbe
mov
cli
inc
es
jnp
ds
pop
sub
imul
xchg
xchg
in
or
and
xchg
cmp
ret
mov
leave
and
push
inc
in
daa
and
jno,pt
sbbl
pushf
outsl
sbb
jb
shrl
movl
iret
cld
add
fwait
test
fcmovnb
fwait
jmp
cmp
movsl
mov
pushf
hlt
add
cmpsl
and
in
cmc
xor
ljmp
adc
jae
push
jmp
or
push
sahf
dec
mov
hlt
and
cmp
push
pop
data16
cmp
and
push
and
fstpl
out
popf
pop
clc
arpl
xlat
dec
popf
push
adc
mov
aam
xorl
test
mov
jl
in
add
mov
in
jae
sarb
adc
iret
ljmp
or
xlat
addb
test
stos
and
push
out
pop
cmpsl
sub
in
aaa
popa
fcmovb
adc
inc
shl
and
add
pusha
fs
inc
xor
ss
mov
pop
add
out
roll
lret
rcrl
dec
fmuls
xor
jb
out
jo
xor
loope
mov
mov
push
sbb
into
or
adc
dec
rclb
sbb
jae
fcoml
or
mov
push
jb
push
sar
pushl
cmp
xor
adc
inc
ficomps
pop
leave
adc
sahf
push
xchg
inc
jmp
add
call
push
cmpsl
dec
pop
clc
cmpps
push
aam
ljmp
mov
nop
jmp
lret
ficomps
repnz
pop
loopne
clc
loop
adc
xor
stos
mov
push
sbb
add
xor
jp
sub
out
sbb
arpl
daa
xchg
mov
je
fidivrs
sub
and
mov
mov
sub
push
jle
inc
int3
scas
cli
insb
xor
fldl
rcrb
cmpsb
repnz
mov
mov
jnp
mov
push
ss
and
mov
mov
andl
jl
insl
push
mov
dec
mov
or
sbb
mov
dec
push
push
lret
pop
add
in
mov
mov
rcrb
in
popa
pusha
adc
and
and
jnp
dec
and
mov
orb
lods
outsl
in
ret
cmp
xor
test
fcomip
and
inc
outsl
subl
push
xchg
xor
push
popa
bound
xchg
cmp
mov
mov
or
jecxz
stc
fists
inc
cli
call
fildll
mov
pop
imulb
jns
nop
cmp
pop
mov
mov
cmpl
jl
lret
mov
stos
loopne
cmpsl
sub
pop
mov
hlt
sbb
cs
sarl
loop
cmpsb
jb
rcll
pop
enter
repnz
in
xchg
out
aam
cmp
cmp
xor
shrb
test
push
repnz
mov
outsb
mov
jp
lret
adc
mov
xchg
nop
cmc
fbstp
inc
mov
sbb
jp
xchg
sub
shlb
sub
popa
mov
xor
sub
add
cmp
and
jbe
outsb
xchg
call
xchg
sbb
push
out
data16
sbb
dec
cmp
push
js
push
shrl
dec
in
int3
xchg
pop
ret
mov
push
ret
lock
mov
sti
sti
add
clc
jo
jmp
sub
sbb
cmp
xor
scas
js
mov
mov
push
inc
test
in
data16
pop
shrb
sbbl
roll
enter
push
call
push
lods
push
xor
test
in
ret
dec
call
jmp
test
mov
cmc
mov
icebp
pop
rcrl
imul
jbe
mov
jb
cwtl
out
push
jbe
cltd
lahf
push
add
fisubrl
sub
sarb
mov
sahf
jmp
mov
negl
pop
notl
incb
rcll
xlat
jp
cld
pop
pop
int
scas
mov
inc
lds
daa
xchg
pop
cmp
pop
inc
mov
dec
xchg
lret
shlb
aad
jo
sbb
orl
sti
jns
sbb
xchg
inc
imul
inc
dec
mov
mov
insl
std
cli
dec
pop
inc
push
mov
pop
and
movsb
adc
pusha
dec
sbb
mov
pop
inc
xor
out
pop
aas
cli
adc
adc
movsb
pop
out
test
jns
fwait
mov
clc
mull
mov
jbe
dec
sub
clc
fcom
loopne
arpl
dec
adc
cmp
pop
dec
cmp
repnz
pop
push
stos
xor
xor
bound
lret
sub
out
mov
lods
dec
pop
xchg
cmp
push
push
cs
shl
fwait
jbe
out
jp
dec
ds
cld
or
or
adc
lock
jg
pop
jmp
push
mov
and
mov
adc
adc
test
sarl
scas
jo
push
dec
mov
gs
push
stos
jno
push
add
subb
dec
clc
outsb
aad
lret
daa
outsl
sbb
sub
jg
bound
mov
lea
xchg
fdivrl
andb
cmp
mov
xchg
add
mov
incl
sbb
jno
jmp
cmp
in
lods
and
sahf
mov
loop
fldt
xchg
je
cld
out
mov
adc
out
loop
enter
ret
xor
insb
jge
ljmp
test
or
sahf
sbbl
xchg
inc
ja
adc
arpl
sbb
aas
loopne
inc
sub
aad
std
lcall
leave
jmp
push
loop
leave
aam
add
cmp
push
mov
pop
fbstp
cmp
fldl
add
sub
dec
pushf
pop
cmp
cltd
mov
add
jb
cmp
xor
inc
inc
cmp
mov
mov
mul
dec
cmpsb
cmp
pop
sbb
dec
mov
xchg
jl
inc
adc
movsl
mov
mov
cmp
mov
shl
popf
stos
out
in
or
dec
cld
push
jbe
add
xchg
loope
cmp
jb
scas
cmp
add
cs
andl
mov
arpl
jns
sub
xor
push
inc
mov
mov
push
std
xlat
pop
ja
push
repz
js
lds
dec
xchg
decl
dec
icebp
push
push
repz
sub
shlb
and
jecxz
sbb
popf
arpl
mov
enter
sbb
mov
mov
or
add
out
fwait
jne
add
jmp
cmp
pop
adc
sub
rcl
test
aam
in
inc
dec
daa
xchg
and
loop
pop
push
and
or
xchg
dec
or
mov
pop
add
cltd
xchg
dec
nop
movlps
mov
mov
cmc
mov
bnd
push
repz
test
movsb
sub
push
cmc
je
mov
jle
inc
mov
xchg
pop
xchg
ret
xchg
call
pop
test
jmp
xor
pop
int3
aam
pop
inc
or
ret
imul
inc
jg
sub
pop
push
into
clc
cmp
inc
jmp
push
imul
movsl
mov
mov
mov
rcr
arpl
adcb
push
sti
data16
ss
orb
mov
jp
scas
jge
cld
fcomps
mov
xchg
jae
jp
inc
push
out
mov
sbb
mov
or
xor
outsb
inc
in
sbb
lret
rclb
mov
popl
imul
movsb
adc
push
mov
sbb
or
scas
rclb
je
or
inc
pop
insb
push
notb
iret
adc
pop
jae
sbb
jno
rolb
adc
fsubrs
incb
dec
xor
clc
mov
fbld
leave
lock
jl
popl
movsb
dec
mov
popa
loop
fsubrs
cli
out
mov
arpl
dec
mov
fcmovbe
les
jb
ret
pop
mov
imul
fcompl
cmc
cmp
dec
out
dec
test
jne
mulb
and
lock
popf
add
push
cld
mov
mov
sbb
adc
out
xchg
inc
imul
lret
jb,pn
xor
dec
gs
lods
enter
les
ljmp
lret
mov
aam
push
add
or
adc
stos
movsb
and
xchg
push
push
sub
clc
push
test
sbb
test
jno
push
dec
inc
xchg
lods
push
fildl
push
dec
push
or
jp
cs
inc
pop
mov
jbe
xchg
lret
pushf
fidivrl
jnp
outsl
cmpsl
scas
loope
imul
pop
jecxz
cltd
xchg
movsb
les
dec
cmc
test
cmpsl
pop
mov
data16
or
dec
aad
fmuls
or
fwait
pop
push
fs
movsb
pop
xor
and
loopne
jb
test
in
gs
adc
mov
mov
stc
outsl
scas
hlt
rorl
lds
cmp
push
xlat
sbb
out
push
out
stos
ret
push
xchg
or
ror
hlt
inc
inc
outsb
test
push
clc
add
loopne
roll
or
jl
sub
lret
gs
pusha
or
sbb
in
cmp
sti
stc
adc
xchg
or
push
iret
int3
mov
mov
adc
sbb
sarb
inc
inc
or
testb
jnp
mov
and
xchg
mov
or
pop
xchg
pop
dec
cmpsl
stos
addr16
jbe
push
mov
dec
subl
jmp
lock
movsb
mov
insl
out
ss
stos
scas
subl
loope
fyl2xp1
inc
repz
mov
xchg
es
aad
mov
jle
insl
jg
mov
xor
lahf
pop
js
cmp
pop
mov
test
pop
push
xchg
push
mov
sbb
mov
clc
roll
cmpsb
fistpl
mov
cld
xchg
mov
mov
mov
pop
mov
out
ss
sub
gs
sbb
fadd
mov
iret
mov
fists
sub
cmc
sbb
mov
imul
lret
ja
jecxz
add
loope
subl
test
push
fmull
aaa
pusha
sbb
push
test
addr16
dec
negb
mov
inc
ds
pop
sub
lock
pop
mov
sub
pop
or
cwtl
inc
cwtl
arpl
jp
fbstp
push
cmpsb
xchg
aas
xor
cmc
jmp
int3
ds
or
lea
cld
int
pop
mov
and
stc
mov
push
mov
pop
pop
xor
lock
movsl
addl
in
push
stos
vdivpd
ja
sbb
and
roll
push
scas
loop
lock
and
mov
cltd
push
inc
push
fs
mov
inc
pop
fnsave
or
jns
std
in
pop
jmp
jge
stos
insl
sbb
mov
dec
mov
pop
movsl
pushf
insl
jmp
fdivr
stc
loope
in
pushf
sti
dec
and
mov
mov
outsl
stos
repnz
mov
loope
fstp
sub
into
pop
ds
fdivrs
sarl
into
cmp
inc
test
mov
mov
jae
repnz
movl
fists
adc
popf
xchg
movsb
push
jnp
iret
push
lea
lods
or
xchg
lahf
cmc
add
adc
jl
out
jbe
jb
pushf
outsb
pop
cmc
sbb
mov
mov
sbb
dec
je
pop
adc
push
pop
inc
mov
mov
jne
mov
popf
or
push
mov
cltd
inc
int
filds
stos
cmpsb
dec
sub
pusha
call
xor
xchg
pop
es
addr16
adc
pushf
repnz
divb
sub
push
xchg
adc
adc
jg
mov
sbb
or
jo
adc
fldenv
xchg
jo
sub
jmp
jp
jbe
mov
dec
repnz
or
fsubs
sub
dec
push
jnp
gs
jo
fs
cmpsb
popa
in
mov
dec
cmp
out
dec
dec
or
lock
mov
nop
clc
dec
mov
int3
js
jecxz
les
iret
leave
pop
pop
loopne
pop
rcll
or
and
aas
sbb
inc
mov
xchg
rorl
push
jle
adc
pop
gs
rcl
test
pop
sub
adc
cmp
cmc
mov
rorl
sbb
and
das
dec
jl
jg
clc
aas
in
inc
mov
addl
jge
cmp
xchg
lret
in
idivb
into
ret
cld
push
ret
xor
cli
andl
xor
lret
mov
out
mov
clc
sti
sbb
sub
aam
lods
cmp
andb
fsubrs
cmp
add
mov
fnstcw
mov
imul
out
inc
lods
out
jbe
dec
nop
movsl
movsb
cli
mov
adc
pusha
add
testl
xchg
xor
push
leave
aaa
or
mov
rcrb
rcl
arpl
std
ja
adc
push
add
scas
imul
push
mov
and
mov
aam
xor
jp
add
xor
out
in
push
xchg
les
filds
mov
ret
mov
jle
mov
pop
dec
fmull
ja
mov
mov
push
dec
dec
lret
jg
sub
push
cmpb
es
xor
fstps
iret
iret
add
lea
jge
pop
dec
and
xchg
cvtpi2ps
and
push
cli
rolb
sti
pusha
jp
cld
mov
dec
popf
xlat
test
gs
push
mov
scas
add
push
jae
push
test
push
cmpb
insl
fidivs
popf
in
movb
divb
loop
and
test
fs
sti
insb
xchg
and
cmp
daa
lcall
fcoml
pushf
dec
bound
mov
push
scas
stos
lods
pop
ret
fidivl
push
cmp
cli
mov
mov
dec
inc
addr16
in
and
xchg
push
mov
xchg
cmp
mov
pop
sti
jnp
scas
dec
push
jno
inc
adc
xchg
inc
cmpsb
outsb
fmuls
cld
and
cmp
or
add
imul
outsb
lds
jecxz
xchg
bound
mov
sub
mov
sub
push
and
test
inc
jb
xlat
divl
xchg
sub
mov
cmp
add
push
cmp
call
inc
addr16
movsb
mov
fcompl
es
and
dec
dec
pop
lock
fsubrl
mov
mov
xchg
push
jnp
into
and
mov
mov
movsl
mov
xor
adc
fmuls
lahf
divl
lcall
mov
cmc
dec
call
dec
cmp
pop
arpl
out
lock
xor
push
or
push
xchg
les
or
xor
or
dec
push
inc
aad
mov
incl
mov
test
adc
sub
clc
les
pop
or
sub
push
pop
movsl
mov
pop
jnp
sub
fcoml
out
xor
push
inc
xor
dec
popa
out
pop
mov
jno
jbe
sub
adc
loop
sbb
mov
cltd
adc
xor
ficoms
sub
cltd
sub
test
xor
xor
mov
sub
pop
das
inc
dec
xor
das
js
mov
test
das
cs
jno
push
or
repz
push
fisttpll
push
or
and
clc
inc
jecxz
rorb
sar
or
inc
int3
jg
jl
out
adc
in
sahf
fistpl
std
fidivs
pop
test
leave
sub
movsl
jge
dec
out
mov
xor
pop
in
sbb
out
push
clc
mov
pop
or
sti
outsb
inc
xchg
repnz
mov
les
shr
sahf
xor
jmp
add
filds
push
pop
lret
aas
lahf
mov
sub
dec
ret
xor
push
adc
fwait
int
clc
int
jge
xchg
scas
aas
dec
test
inc
jne
lods
into
xor
mov
sub
sbb
mov
int
xchg
jo
imul
repz
cli
leave
gs
jg
fnstenv
xor
out
lret
sbb
movsl
pop
mov
jnp
xor
mov
pop
and
cld
jnp
cmp
cmp
dec
andb
ret
leave
lods
pushf
sbb
mov
sub
pop
lods
push
sahf
mov
dec
dec
and
popf
pop
xchg
loope
ret
ret
adc
aam
mov
jo
push
fistl
inc
mov
xchg
pushf
adc
sbb
dec
ds
test
scas
and
pop
ss
pop
or
add
jge
xchg
repnz
into
push
add
cwtl
mov
sbb
test
cmc
xor
pusha
and
adc
mov
in
clc
mov
mov
xor
inc
out
inc
repz
pop
stc
lock
jl
jl
outsl
bound
mov
push
lcall
loope
or
cmpsb
shll
shll
push
or
mov
or
ror
fidivrs
mov
cmpsl
cmp
mov
stos
loopne
cmp
inc
in
sub
icebp
stos
je
add
ljmp
mov
repz
addr16
and
push
jbe
out
inc
cltd
out
rorb
xchg
lahf
inc
lahf
jbe
inc
movsl
stc
cwtl
pop
and
mov
cld
xchg
insl
sti
test
lea
movsb
repnz
test
adc
int
sti
pop
sbb
icebp
cwtl
mov
xchg
push
mov
out
fildll
pop
adc
and
add
addr16
stc
cs
mov
cmp
imul
adc
ficompl
lcall
les
es
mov
xchg
shlb
or
jns
into
or
pushf
jmp
stos
jns
scas
mov
popa
mov
das
xchg
push
test
neg
push
rcr
subl
cmc
das
insb
aaa
outsl
or
jle
adc
inc
in
test
push
dec
add
lods
xchg
out
aad
fildl
adc
fyl2xp1
pushf
lods
outsb
shl
clc
lock
mov
test
mov
pop
test
jge
cmp
call
mov
mov
jno
xchg
pop
xchg
insb
xor
xchg
pop
adc
mov
addr16
xor
out
mov
cmp
push
jle
leave
fdivrl
cs
je
ss
jecxz
xor
xchg
mov
dec
adc
fdiv
into
pop
xchg
arpl
dec
mov
and
cmpsb
mov
lcall
int
sub
shl
jno
mov
mov
sub
xor
push
jg
in
mov
out
inc
dec
xchg
shll
mov
cltd
adc
xor
add
nop
inc
xor
jnp
movsb
lea
fwait
xchg
lret
rorl
pop
cmp
fs
pop
test
push
out
xor
test
call
lahf
sahf
idivb
imul
jae
sahf
dec
in
int3
pop
add
jns
mov
xchg
sub
int
cmp
cli
push
lcall
clc
xchg
nop
stc
or
jnp
popa
mov
mov
pop
outsl
imul
cmpsb
adc
mov
test
pop
shll
jne
nop
iret
push
mov
inc
sbb
popf
xor
sbb
mov
add
sbb
mov
xor
out
add
repz
aas
jge
stc
std
push
bound
cli
mov
rcrl
mov
cmpsl
push
aaa
jmp
cmpsl
iret
or
fmuls
jmp
mov
rcr
jecxz
out
mov
movsl
insl
mov
arpl
push
inc
cmp
push
add
sarb
pop
inc
pop
and
mov
cwtl
dec
jne
mov
out
imul
jle
mov
xor
jns
inc
dec
jge
push
sub
sarb
lds
loope
push
adc
pop
fildll
fwait
lahf
cld
out
cwtl
orb
push
ret
je
dec
es
jb
adc
int
lret
lcall
fimull
nop
mov
lret
mov
inc
sbbl
mov
dec
dec
mov
jne
ret
mov
push
sub
mov
jl
mov
mov
js
iret
jne
lcall
loop
cmp
aaa
jp
outsl
fildl
mov
adc
xchg
sarb
out
add
fidivrl
aaa
inc
lret
mov
lret
in
test
clc
outsl
dec
adc
sbb
lahf
mulb
shll
xor
xchg
xchg
lahf
cmpsl
cli
nop
test
jmp
subb
out
iret
xor
xchg
xor
hlt
dec
test
mov
or
push
test
sbb
and
test
pop
dec
xchg
ss
movsl
pop
push
and
lret
pushf
sbb
fdivp
and
jl
cmp
cmp
lds
and
sbb
inc
push
popf
pop
jl
pop
mov
cmp
mov
cmp
dec
in
xor
orb
out
mov
pushf
je
pop
outsl
cmp
push
aas
and
push
pop
sub
sub
dec
push
sbb
jne
mov
outsl
lret
push
inc
mov
arpl
mov
aas
mov
and
and
cmpsb
sub
push
xor
fsubrs
popf
stos
dec
xchg
mov
inc
loop
aam
mov
andl
pusha
push
iret
mov
nop
and
sub
or
pop
jbe
fistps
icebp
outsb
jo
pop
push
and
jnp
icebp
inc
out
or
mov
mov
hlt
jno
dec
out
mov
jg
mov
mov
mov
lret
adc
shll
dec
jl
mov
mov
cs
scas
idiv
mov
pop
les
jnp
mov
jecxz
adc
dec
pushf
adc
jmp
cmpsl
aas
in
jge
inc
in
not
add
fcmovnu
pop
fldcw
sbb
push
xlat
fcoms
ret
sarl
lcall
sub
repz
sub
insl
push
fsubrs
inc
lods
push
dec
popa
popf
arpl
pop
or
cmp
jl
pop
mov
fildl
add
scas
pop
dec
fs
inc
push
xlat
xor
cmp
pop
icebp
xor
ret
clc
cmc
xor
push
int
adc
jno
lahf
dec
sub
jno
adcb
push
jne
test
nop
sbb
mov
insl
int3
xor
ljmp
aas
daa
or
faddl
ja
push
push
ljmp
jbe
ffree
dec
ljmp
repz
pop
adc
lods
ret
pop
dec
aam
inc
sbb
add
mov
rorl
out
cmpsb
and
divb
insl
movsb
or
jmp
mov
dec
les
in
dec
push
cld
mov
or
cli
insb
shlb
stc
stos
mov
mov
loope
sub
adc
push
and
jge
outsl
es
lret
cmp
andb
mov
mov
iret
int
sbb
roll
dec
add
mov
xor
lcall
sar
cmpsb
mov
cmp
jmp
arpl
arpl
fwait
sbb
sahf
push
sub
cmp
int
andb
adc
push
repz
mov
sbb
in
pop
mov
enter
xchg
or
std
lret
cmp
jg
push
adc
fnstsw
movsb
lods
aas
loope
stos
pop
adc
out
mov
jae
mov
imul
mov
or
loop
pushf
mov
nop
cmp
or
add
sub
push
jne
mov
xchg
mov
aad
sub
cmc
idivb
mov
inc
xor
jb
loopne
ss
mov
out
dec
es
int3
mov
push
cwtl
inc
inc
and
jecxz
test
jle,pn
pop
xchg
bound
rcl
mov
adc
mov
cs
adcl
pop
sahf
pop
or
cmc
test
push
mov
fimuls
push
negl
jmp
clc
pusha
cmp
add
jnp
scas
shrl
sub
lea
in
mov
jbe
lds
rolb
mov
mov
fisttps
adc
xchg
pusha
leave
or
sbb
adc
jns
or
pop
sub
mov
xlat
mov
mov
ds
push
test
fs
cld
pop
xor
inc
outsl
xchg
and
push
mov
jo
mov
fwait
xor
jmp
dec
icebp
movsl
dec
fistpll
mov
lea
xchg
sti
mov
jle
movsl
jmp
lds
out
mov
mov
or
jg
pushf
push
jno
cmc
into
cwtl
js
mov
dec
push
fists
mov
jbe
mov
sbb
iret
movb
es
jb
shrl
cltd
mov
call
xchg
inc
lahf
test
jecxz
ret
xchg
jnp
popa
int
aad
fidivrl
lahf
call
leave
cs
hlt
fistpll
cmp
inc
cmp
or
gs
cld
and
xchg
sub
xchg
popf
lcall
inc
inc
sbb
repz
jne
push
cmp
add
and
jo
jb
and
sahf
imul
pop
inc
ds
in
clc
stos
loope
pop
hlt
pop
pop
rorb
outsb
xchg
dec
and
inc
cmpsl
lret
daa
fadds
aam
aad
mov
or
push
xchg
dec
rorl
cmp
xchg
push
and
dec
cld
arpl
fcmovu
ljmp
mov
fistps
lods
xchg
xchg
aaa
xor
xchg
fldt
adc
out
int
push
out
inc
dec
loope
sub
fistpl
outsb
rcrl
stos
cmp
pushf
sarl
out
iret
in
inc
push
popa
je
inc
push
cltd
mov
or
test
mov
out
dec
shlb
pop
repz
sub
sub
or
pop
or
jnp
xchg
xchg
push
add
imul
add
aaa
mov
jno
hlt
adc
fdivr
adc
fsubrl
dec
int3
movsl
push
cmp
outsb
cld
push
aam
pop
jo
pop
enter
xchg
and
xor
mov
and
stos
ret
movsb
in
jg
push
push
sub
push
xchg
sbbb
and
mov
and
mov
pop
sbb
imul
jns
mov
jmp
inc
mov
int3
js
fnsave
mov
and
hlt
shrl
mov
mov
pop
xchg
jmp
insl
out
lcall
sbb
in
data16
xchg
mov
mov
xor
test
shrl
sbbb
inc
out
sbbl
sbb
inc
dec
inc
stos
pop
push
les
push
cmpsl
sbb
cmp
cmpb
jnp
cmp
mov
jmp
aam
mov
shlb
std
repnz
imul
jmp
pop
repz
sbb
mov
iret
bound
push
out
movb
or
fdivl
mov
push
pop
pop
shll
cmp
push
adc
out
adc
sub
push
sub
mov
xchg
mov
xor
or
dec
pop
fadds
jno
sbb
mov
lods
arpl
sub
jecxz
imul
pushf
adc
fcoms
es
and
and
cs
mov
push
inc
leave
es
les
or
lahf
out
int3
ret
and
mov
inc
jle
sub
jmp
mov
and
or
in
jns
loope
mov
ret
enter
rcr
scas
xchg
mov
hlt
arpl
sub
jg
push
push
rcll
fs
add
testb
scas
adc
sub
sub
imul
fidivs
inc
outsl
or
inc
jnp
xor
mov
and
adc
sub
adc
cmc
inc
adc
adc
gs
xor
sub
mov
pop
insb
cmp
pop
mov
lock
mov
movsb
cli
mov
ss
mov
inc
outsb
xchg
movsb
aad
dec
and
sbb
adc
and
inc
push
daa
push
mov
mov
outsl
pop
mov
xor
add
lock
fwait
ds
pop
repz
add
test
pop
scas
mov
bound
jmp
sub
jno
roll
dec
push
fisttpll
xchg
adc
cmpsb
jge
mov
mov
and
inc
sub
jno
jae
scas
cli
inc
xchg
insb
loope
jmp
int
mov
mov
pop
mov
mov
into
mov
mov
dec
ljmp
aaa
loopne
rol
pop
inc
push
lock
je
js
pop
mov
into
icebp
mov
jbe
pop
aaa
inc
popa
jge
into
push
test
inc
xlat
mov
cmp
mov
xchg
adc
cltd
mov
call
cmp
jnp
scas
add
cltd
mov
cmpsb
imul
adc
jo
insb
aas
stc
mov
ret
lcall
mov
stos
adc
test
out
lret
cmc
adc
sbb
jecxz
fldcw
mov
mov
dec
into
xor
inc
testb
scas
dec
mov
xor
pop
aad
xchg
lret
lods
mov
sti
jecxz
movl
fs
mov
push
sub
shr
and
cmp
ja
or
lea
fsubl
push
sbb
pop
mov
add
lret
xor
cld
les
xchg
cli
mov
hlt
mov
pop
xchg
jl
nop
mov
sbb
mov
mov
xchg
inc
sahf
cld
dec
popa
imul
stos
mov
scas
imul
repz
xor
xchg
fcmovu
lods
les
cwtl
push
and
push
ss
rcl
mov
out
stos
mov
mov
xchg
sub
lretw
ds
mov
jns
cld
lea
shll
pop
in
push
push
bnd
mov
bound
inc
add
popf
out
mov
jb
push
cld
sahf
or
rcll
mov
sbb
or
sbb
mov
push
addl
and
movsl
pop
push
scas
sub
add
ja
cs
pop
popa
aaa
filds
loope
or
xchg
xor
mov
out
idivb
and
cld
or
sub
insl
test
fldt
sarb
int3
adc
daa
mov
hlt
jecxz
mov
and
fpatan
leave
and
mov
movsl
push
mov
jle
inc
scas
pop
enter
outsb
lods
lock
lods
enter
sbb
xor
mov
mov
push
and
jmp
pop
das
loope
andb
cmp
pop
jo
xchg
add
stos
jbe
icebp
inc
push
stos
mov
out
aam
scas
and
dec
pop
stc
mov
mov
shrl
pop
adc
movsl
cmp
mov
arpl
cmp
inc
sbb
pop
jne
push
sub
mov
pop
nop
inc
arpl
pop
xchg
out
incb
xor
fiadds
add
mov
pop
jmp
insl
les
loopne
and
outsl
cmpsb
ss
daa
mov
cli
dec
push
jns
insl
mov
mov
out
call
out
cmc
cmc
in
dec
cmp
xchg
repnz
rolb
push
in
cmpsl
sub
jnp
js
popf
add
insl
jno
adc
int
jnp
jp
ja
lret
pop
sbb
sti
loope
dec
nop
xor
lock
in
out
xor
gs
enter
adc
dec
lea
scas
pop
xchg
dec
jo
cs
pop
fcoms
mov
hlt
fs
sub
lock
mov
aam
inc
xchg
rolb
jno
mov
loope
add
and
in
rorb
dec
fwait
shr
ss
lcall
int3
mov
repnz
jbe
sbb
fsubrs
test
testl
fildll
int
fnstenv
in
shr
push
push
imul
cmp
pop
inc
cmpsb
aaa
out
adc
stos
pop
int
mov
pop
push
jo
xor
sub
push
aam
movsb
cmpsb
cmc
outsl
dec
movsb
push
or
pushf
mov
out
lods
adc
popa
add
fs
or
bound
sahf
lods
ja
loope
sub
cld
cs
mov
adc
nop
mov
mov
dec
sub
into
bound
adc
or
push
inc
xchg
out
inc
cmpsl
cmpsl
dec
sub
pop
notb
pop
ret
cs
orl
sti
int
adc
lret
inc
mov
lcall
adc
inc
add
ret
xchg
adc
lret
push
push
repnz
sub
roll
fld
clc
bound
jnp
mov
xor
sbb
dec
aas
aaa
xchg
lret
sti
pop
pop
sahf
pop
test
insl
imul
movsl
and
stos
sub
jp
mov
and
repz
fsubs
jns
sub
mov
in
sbb
add
pop
mov
stc
sub
out
mov
sbb
jmp
or
addb
cmpb
sbb
mov
lcall
cld
fisttpll
sarl
adc
scas
icebp
incl
iret
jne
mov
push
iret
movb
sbb
and
add
xchg
leave
mov
jp
push
sub
push
xchg
std
insb
clc
mov
xchg
push
loop
pop
add
std
scas
sub
pcmpgtb
cmpsb
sbb
loop
imul
pop
xchg
subl
add
push
sbbl
push
addl
rcrb
inc
push
neg
dec
xchg
daa
fucomip
mov
mov
inc
mov
addb
xor
push
mov
imul
jnp
or
sub
ret
jo
cmovno
pop
ljmp
mov
mov
imul
pop
dec
or
gs
inc
inc
or
xor
dec
jecxz
pop
insl
and
fs
inc
dec
mov
jl
std
mov
rolb
out
mov
mov
je
mov
shrb
xor
push
andl
xor
lea
sahf
movsl
test
and
fistpll
xchg
jne
pop
fisttpll
out
neg
mov
xchg
les
cmp
fcmove
ret
std
loope
xor
mov
jbe
or
ret
mov
pop
ljmp
js
sub
stc
inc
in
movsl
gs
test
add
xchg
dec
xchg
jb
pusha
aaa
loope
or
arpl
aam
lock
icebp
fwait
sti
test
mov
pop
mov
dec
add
mov
add
mov
nop
and
in
lahf
cmp
mov
or
mov
outsb
jo
enter
imul
cwtl
pop
pusha
lock
dec
mov
daa
sub
sbb
rcrl
jl
inc
leave
adc
cmp
sbb
enter
xchg
add
aas
xchg
mull
test
sahf
push
imul
xchg
dec
jno
inc
movsl
jge
mov
add
in
pushf
ds
mov
inc
arpl
inc
mov
leave
sub
xor
int
inc
or
xor
mov
sbbb
inc
cmc
push
int3
jecxz
mov
sarb
cmp
mov
sub
dec
aad
insb
add
cmpsl
mov
xor
xor
out
push
xor
mov
cmp
lds
jno
or
ret
mov
xor
mov
fnsave
out
push
cmp
lcall
ror
pop
push
mov
stos
cmpsl
jbe
adc
lcall
les
or
out
in
mov
in
or
inc
nop
lret
and
mov
imul
add
insb
dec
out
jp
test
es
inc
mov
fildl
cs
or
xor
add
push
shrb
scas
js
repz
sbb
cmpsl
jno
aam
sar
fwait
or
iret
dec
bound
adcl
orl
out
inc
data16
mov
dec
xor
insb
xlat
sti
dec
pop
loope
mov
cmp
cmp
mov
lods
xor
xchg
aaa
and
mov
push
xor
and
inc
adc
int
inc
sbb
cmp
insb
inc
movl
push
lock
or
in
ret
lods
and
jbe
mov
int3
aaa
or
pushf
and
jo
mov
xor
or
and
aaa
mov
or
out
push
mov
jae
xchg
adc
inc
mov
loope
add
aas
mov
roll
bswap
fldenv
clc
jp
add
cmp
jmp
mov
mov
pusha
and
pop
les
jge
inc
xchg
es
aaa
es
mov
xor
int3
nop
adc
sbb
fstpl
xlat
and
push
out
rolb
adc
jecxz
movsl
stc
into
push
xchg
aaa
xor
leave
jo
insb
or
invd
outsl
int
inc
inc
movhps
dec
fst
insl
lds
dec
mov
aam
adc
cmp
push
repz
sub
cmp
std
and
mov
mov
jle
xchg
loope
inc
jge
push
and
stc
lret
or
sbb
cpuid
shl
das
cs
sar
xchg
mov
and
mov
jne
dec
mov
data16
and
xchg
inc
nop
mov
cmp
jmp
xchg
ret
scas
stos
sub
dec
adc
adc
pop
stos
mov
aad
pop
out
mov
jne
add
movsb
daa
and
jne
pcmpgtb
add
inc
cmp
push
in
jne
xchg
sbb
test
mov
insl
test
in
jmp
sub
pop
rorl
out
mov
orb
cmp
push
cld
cmp
adc
outsb
and
iret
lahf
leave
addr16
push
dec
leave
lods
push
jno
jo
adc
push
insl
rcrl
xorb
aad
sahf
xor
data16
dec
adc
push
das
imul
rcll
sbb
inc
push
adc
sub
mov
jo
mov
sub
mov
insl
fsubrl
mov
scas
sub
std
add
mov
jecxz
popf
inc
divb
mov
cmp
fsubr
fstps
fs
test
xchg
push
fisubs
jmp
pop
aaa
lahf
aaa
movsl
dec
cld
mov
mov
mov
mov
adc
std
xchg
rorl
fs
cmc
in
xor
data16
cwtl
xchg
and
lods
xorl
ljmp
jecxz
into
and
inc
outsb
sbb
out
mov
into
lahf
cltd
test
dec
insb
push
jno
in
lahf
movsb
sahf
or
je
sub
fnstenv
mov
mov
push
inc
jmp
sbb
shl
popf
xor
jmp
enter
ja
ret
mov
ret
imul
pop
add
out
inc
sub
mov
outsb
dec
mov
sub
pop
xchg
mov
or
int3
shl
test
mov
js
iret
scas
pop
fildll
adc
push
pushf
sahf
xchg
xorb
push
out
outsl
inc
jns
sub
out
cmp
scas
push
aam
scas
jb
add
adc
stc
mov
stos
mov
test
rorl
repz
and
movsl
mov
cmp
adc
add
push
dec
mov
adc
or
pop
std
sub
incl
push
xchg
iret
inc
add
iret
dec
inc
clc
ficompl
in
sub
int3
push
inc
mov
mov
pop
fistps
cld
mov
and
les
jle
cwtl
cmp
and
leave
pop
mov
fimull
inc
lea
jl
push
mov
dec
pushf
cmpsb
push
jp
push
fbstp
cmp
xor
xchg
loop
jg
aaa
jnp
inc
fsub
ret
rcll
aas
dec
dec
or
fsubr
das
mov
inc
and
mov
mov
sarb
je
lods
jg
xor
sub
pop
xor
and
repnz
xlat
daa
pop
push
jno
add
push
adc
sahf
lret
scas
sub
nop
int3
xchg
test
insl
dec
movsb
mov
sub
pusha
push
and
add
mov
data16
ljmp
mov
mov
pop
mov
jge
jl
nop
test
lods
push
sub
test
mov
shl
lea
jg
adc
mov
pop
cmp
dec
and
add
and
xor
xchg
cmp
movsl
hlt
adc
and
push
sbb
cmpsb
xor
inc
aaa
stos
ja
adc
jae
fcomip
cmpsl
mov
out
std
pop
jns
stos
add
xor
idivl
cmc
xchg
shlb
lcall
push
scas
dec
cmp
ja
xor
pop
or
ret
pop
fcoml
bnd
decb
repnz
in
in
test
insl
std
cmp
dec
or
in
jo
xor
shrb
mov
pop
push
es
stc
daa
roll
imul
inc
add
je
les
pop
les
xor
mov
sbb
xchg
call
incb
repnz
std
cmp
cmpsb
xlat
leave
in
int
stos
fmuls
fimull
rorb
xchg
je
xchg
sub
push
in
das
sbb
mov
pop
cmpsl
scas
mov
ret
outsl
fldl
add
aad
pop
mov
inc
leave
fbld
inc
loopne
repnz
inc
push
add
cmpl
push
out
pop
inc
sbbl
into
pop
fs
push
inc
jge
mov
cmp
jo
xor
dec
popl
adc
cmc
pop
flds
jbe
clc
in
fwait
cmp
rolb
mov
adc
jl
xchg
bound
dec
push
push
repz
call
outsb
stos
mov
dec
xchg
inc
insl
push
sub
fstpl
dec
xchg
test
push
and
stos
push
and
pop
movsl
mov
daa
xor
aaa
jge
jmp
or
ja
cmp
pusha
cmp
xor
ja
add
jne
lret
add
shrl
mov
sub
scas
out
int3
pushf
inc
xlat
aas
cmpsl
popf
lods
lret
lret
hlt
xchg
jmp
in
call
xlat
lds
mov
xor
jnp
pop
imul
inc
inc
cmp
dec
movsl
mov
push
jns
popa
cmp
cmp
xchg
xchg
push
lcall
pop
push
adc
stos
sahf
arpl
or
inc
std
mov
mov
stos
xchg
js
pop
std
jl
inc
or
push
sbb
jns
idivl
je
jl
mov
jb
shrl
dec
dec
aad
mov
sbbl
or
push
mov
push
mov
out
mov
inc
orl
xchg
mov
in
add
fsubrs
pop
int
loope
out
mov
in
flds
pop
dec
jge
dec
xor
test
mov
mov
pop
mov
cli
fisubs
add
sbb
andb
sti
wrmsr
xlat
pushf
or
push
leave
call
push
or
ja
cmp
push
cmp
es
push
icebp
fsubrp
test
andl
lret
xor
frstor
pop
fwait
lock
inc
enter
cmp
cmp
xlat
test
sahf
jns
ljmp
sub
mov
add
cld
std
daa
aaa
jg
sub
out
fldl
mov
mov
xor
jp
mov
add
sub
cmp
lods
test
xlat
pop
pop
jae
mov
push
addr16
std
stos
mov
pushf
addr16
mov
mov
jns
jg
sbb
cwtl
inc
pop
add
movsb
enter
xchg
cmc
adc
shrl
lahf
sbbb
sahf
jnp
sub
xchg
mov
scas
xchg
mov
jecxz
bswap
cmp
xor
in
call
mov
mov
ret
mov
xchg
pop
xor
je
out
mov
push
icebp
mov
fstpl
iret
loopne
add
push
add
div
cli
stos
stc
add
xor
cmp
mov
and
jne
int
outsb
add
add
dec
mov
movsb
in
and
js
jg
pusha
adc
jle
enter
bnd
dec
out
jge
dec
fidivrs
ss
pop
inc
xor
mov
lahf
add
bound
jg
repz
xchg
sbb
repz
xor
dec
pop
ret
or
push
enter
in
jge
jb
push
jle
fwait
sbb
aam
push
and
sbb
aas
inc
je
xor
scas
mov
mov
xchg
cmpb
xchg
mov
xor
pop
cmp
test
mov
nop
mov
mov
enter
pop
push
push
dec
inc
pop
sub
lahf
dec
sbb
cld
push
push
sbb
adc
dec
notl
mov
das
hlt
push
add
inc
scas
lret
fimull
mov
out
into
ljmp
fisttpll
push
mov
fwait
dec
mov
inc
sbb
adc
xor
or
lods
and
add
xchg
inc
popa
mov
dec
push
mov
xor
arpl
stc
and
add
pushf
scas
or
push
jl
mov
sbb
dec
ret
mov
pop
mov
sti
scas
push
out
cmp
xchg
idivb
sbb
ds
jmp
mov
jmp
adc
cmpsb
dec
jne
xor
dec
inc
mov
pop
out
cmp
enter
call
pop
sbb
mov
fildll
jbe
icebp
inc
aam
push
test
aad
nop
sub
aad
jl
adc
dec
mov
xchg
mov
sbb
mov
mov
inc
cmpsb
decb
and
in
pop
jl
or
add
mov
stos
shll
mov
lock
jnp
sbb
push
and
mov
pop
or
mov
ror
ss
call
or
jmp
jmp
and
rclb
push
mov
les
mov
mov
lods
jnp
outsb
mov
pop
aad
adc
xchg
hlt
sti
pop
lods
inc
mov
lods
mov
and
lds
icebp
cltd
aas
pop
mov
sbb
mov
mull
aas
jge
fimull
inc
popa
lods
jle
loop
xor
aaa
sub
or
push
loope
and
cli
int3
jg
xchg
iret
outsb
into
int
es
cmp
popf
push
stc
ret
mov
in
stc
int3
les
jnp
xor
mov
or
fucom
cwtl
loope
pop
imul
pop
mov
scas
mov
or
mov
enter
mov
arpl
adc
fimull
addr16
push
push
inc
jmp
pushf
orb
or
in
lret
pop
shll
cwtl
jo
lcall
mov
jmp
pusha
pop
xor
mov
lret
ret
mov
xor
mov
xor
fwait
pop
idivl
bound
xor
outsl
xor
cli
mov
adc
ja
fsub
int
cwtl
dec
cld
lcall
inc
push
sub
jae
mov
mov
aas
into
sbb
nop
mov
rcrl
cltd
popa
dec
and
xchg
mov
cs
pop
cmpsl
jbe
adc
aam
out
xor
fistl
push
mov
pop
or
cmpsb
scas
mov
push
std
faddl
inc
fstps
fsubs
pop
mov
mov
mov
fistpl
push
pop
cmp
sbb
xchg
sub
pop
mov
pop
lret
mov
mov
out
add
mov
ja
or
push
divl
xor
cmp
std
movb
aam
mov
xor
daa
les
mov
repz
aad
mov
hlt
minps
push
mov
std
jo
xchg
xchg
jmp
fcmovbe
lret
xlat
adc
cmp
jns
fcoms
fisubs
xchg
xchg
outsl
push
scas
nop
mov
mov
nop
cld
pusha
std
fidivrs
lods
jp
sub
inc
test
mov
sti
test
adc
or
cli
mov
mov
imul
mov
inc
outsb
out
aaa
inc
pop
jge
and
add
xchg
imul
test
int
adc
rcr
add
mov
shl
sub
rcrb
dec
mov
sub
lahf
mov
repnz
and
adc
pop
ljmp
adc
mov
jns
fwait
int3
ja
add
movsb
stos
xchg
subl
add
sub
loop
aas
jne
inc
push
ds
cltd
jg
sub
into
mov
sub
in
inc
pop
jle
add
lret
xor
xchg
cmp
xchg
nop
decl
mov
sbbl
and
jbe
ljmp
lret
ret
inc
mov
add
pop
scas
pop
adc
fdivp
and
xlat
lret
cli
fiadds
or
lret
fiadds
cmpsl
or
jp
inc
pop
jg
jp
xor
jne
aaa
or
xor
stos
leave
ret
subb
dec
pop
inc
or
js
sub
aad
test
shrb
icebp
ljmp
push
ret
leave
nop
lods
cld
decl
sbb
call
leave
loopne
sub
xchg
int
bound
xor
in
inc
clc
pop
lret
cli
into
jmp
repnz
pop
andb
inc
insb
and
jecxz
ja
cmpsl
sub
test
sub
lods
repnz
push
jg
mov
lods
imul
pop
xor
scas
stos
jne
repnz
out
popf
cmp
inc
mov
notb
add
jge
pushf
or
jns
test
nop
xchg
push
cmp
icebp
aaa
sbb
add
bound
xor
fiadds
loopne
cltd
lods
and
ja
lods
cld
cmp
lret
rcl
mov
mov
inc
sahf
int
cmp
int
mov
imul
inc
mov
in
sub
rcll
jge
sub
lret
ficompl
jg
inc
cltd
stos
xchg
pop
orb
mov
sbb
mov
or
pop
mov
orb
in
sbb
xor
xor
sbb
lods
imul
lcall
cmp
stc
aad
xchg
sbb
inc
loop
add
mov
dec
sti
int
sub
icebp
mov
push
lock
or
or
mov
and
inc
or
cmpsl
mov
loop
sub
js
jle
mov
aam
js
das
mov
mov
xchg
jl
loope
lock
leave
xorb
xchg
jecxz
adc
jo
push
xor
inc
popa
es
lret
add
sar
dec
push
arpl
adc
movsl
dec
ficoms
fsubrs
pop
call
mov
es
adc
dec
jnp
jns
mov
aas
lea
loope
mov
mov
inc
inc
add
dec
leave
stos
add
jecxz
adcl
cwtl
xchg
inc
jns
icebp
cwtl
mov
jae
sti
sbb
add
aaa
mov
mull
mov
mov
repz
jl
mov
or
ljmp
xor
popa
cli
scas
in
inc
and
mov
pop
xor
arpl
add
cmp
lea
pop
push
pop
or
lcall
cld
sub
nop
lret
xchg
ror
sub
test
scas
sbb
inc
cmp
idiv
xchg
push
rcrb
aas
pusha
rcr
inc
insb
sbb
xor
xchg
inc
mov
add
pop
cmp
xchg
xlat
xchg
xor
mov
xchg
inc
pop
mov
jecxz
pop
add
stos
sbb
imul
jb
mov
je
addr16
cmp
imul
jne
decl
iret
gs
popa
sub
int
test
and
inc
cmp
inc
das
iret
repnz
in
arpl
enter
scas
sub
xor
in
lret
in
push
das
inc
jmp
and
arpl
cmpb
dec
pop
jbe
loop
arpl
divl
aam
aas
popa
les
add
mov
ljmp
push
and
scas
loop
sbb
sub
pusha
out
xchg
inc
fwait
and
icebp
dec
push
in
movsl
dec
xchg
push
mov
into
sbb
je
sub
pusha
adc
ret
test
push
iret
inc
repnz
ret
fdivrl
pop
inc
nop
scas
cmpsl
inc
or
loope
cmpsl
rcll
add
and
scas
cs
and
fiadds
and
jae
xor
bound
ds
ljmp
push
aas
pop
jmp
dec
xor
popa
mov
dec
addr16
in
or
pop
jae
ret
roll
test
es
lahf
add
cwtl
lock
dec
xchg
mov
lock
mov
fiadds
sub
dec
fcoml
xchg
into
xchg
fisttpll
out
fdiv
ljmp
rcll
mov
sbb
ss
mov
push
mov
jmp
daa
jne
or
rol
hlt
call
test
push
ja
mov
out
add
xor
add
repnz
rorl
xlat
cmp
adc
jae
jb
je
into
jp
cmp
jne
mov
push
add
stc
dec
repz
mov
add
jb
stos
fiaddl
or
cmp
fwait
and
fisttps
lahf
xchg
xchg
ljmp
mov
imul
dec
jns
cmp
in
sbb
hlt
jp
je
cmp
adc
jmp
fstpt
xor
ljmp
and
int
lods
dec
mov
cs
mov
daa
jne
cmpsb
push
imul
cmpsl
notl
xorb
cmc
and
out
mov
out
jge
movsb
je
mov
mov
inc
hlt
out
dec
test
push
movsb
inc
mov
jmp
xchg
sub
sarl
das
or
cltd
aam
sub
add
push
xchg
cmp
lods
lods
mov
gs
aad
js
push
lds
js
mov
mov
adc
mov
pushf
mov
in
push
lods
cmc
mov
sub
popf
xchg
jne
std
cmp
imul
sbb
jb
add
mov
inc
lods
cmp
shrb
int
data16
inc
adcb
out
stos
jmp
scas
divl
es
mov
xor
xor
dec
js
gs
inc
sub
cmp
inc
mov
test
shlb
dec
pop
jne
fistpl
pop
pop
lods
scas
scas
arpl
cmp
jge
ljmp
fsubs
dec
cmp
inc
jae
loopne
dec
xchg
xchg
jns
mov
test
or
pop
xchg
inc
fsubl
and
jnp
mov
mov
dec
cld
out
mov
and
add
outsb
insl
andb
add
xorb
rclb
add
mov
arpl
pop
lea
ljmp
orb
daa
push
pop
ret
add
std
fiadds
jecxz
mov
pop
jbe
mov
jecxz
or
sub
or
push
mov
in
jl
loop
arpl
or
cmp
pop
xor
loopne
addr16
lcall
cld
movsb
jbe
push
fistps
mov
loopne
push
enter
aaa
push
fcoms
jne
adc
jno
jl
xor
in
inc
sub
cmpsb
mov
pop
xor
mov
mov
icebp
mov
cmp
sbb
sbb
sbb
pushf
xchg
rcrb
outsl
sti
sub
negl
push
push
sti
push
mov
jne
cmpsl
in
addr16
push
lret
mov
cmp
pusha
lcall
xlat
ret
not
push
rorl
repnz
push
mov
ficompl
jp
mov
jbe
and
stos
adc
mov
ljmp
outsl
dec
lcall
mov
jbe
sti
inc
jo
je
cmp
sbb
ljmp
push
fnstsw
mov
mov
sub
push
out
incw
in
or
clc
jmp
lret
std
shrb
jle
mov
sbb
sub
shrl
ret
cmp
rclb
sub
mov
aas
push
xor
jo
inc
insl
mov
in
cltd
ds
ljmp
sbb
jbe
sbb
mov
into
adc
sti
push
xor
add
mov
xor
mov
imul
dec
test
dec
mov
sbb
orl
leave
pop
lods
push
adc
clc
aas
gs
out
add
cld
jbe
xchg
add
sbbl
pushf
jnp
mov
in
push
xchg
loop
adc
scas
sub
pop
adc
cs
xchg
clc
sub
leave
test
sub
push
negb
rcrl
jecxz
sbb
dec
nop
shrb
push
pop
xor
adc
adcl
movsb
pop
inc
enter
add
mov
mov
lds
and
movsl
and
lods
mov
stos
cmp
jecxz
shr
movsl
and
jae
pop
dec
mov
sub
fstl
out
inc
jecxz
dec
imulb
inc
push
dec
xchg
scas
gs
shlb
and
and
cmpsb
icebp
jmp
mov
inc
and
pop
nop
clc
pusha
sbb
jle
and
adc
inc
imul
inc
and
fnstcw
jge
in
scas
out
inc
cli
outsb
outsb
dec
test
mov
xorb
or
ret
aad
pop
mov
jmp
cmp
cmp
add
inc
inc
stos
out
pop
mov
pop
cmp
jb
out
push
aas
pop
sahf
fistl
sbb
sbb
test
xor
jg
test
imul
sbb
loop
dec
es
xor
lods
stos
sub
mov
inc
lods
sub
and
leave
lahf
ret
or
fwait
movsb
ljmp
mov
xor
das
sub
orb
cmp
xor
jl
aam
out
ret
arpl
ljmp
push
push
cli
fildl
mov
gs
in
jle
addr16
sub
fwait
mov
sbb
add
dec
mov
shll
dec
or
enter
pop
dec
pop
ljmp
testb
pop
cld
in
dec
ljmp
aaa
fnstsw
clc
lods
pop
jnp
in
push
stos
push
shrl
mov
std
sub
sbb
test
or
es
mov
out
ss
mov
adc
push
cwtl
loop
mov
imul
mov
inc
ret
mov
xor
repnz
sub
fsubl
es
cltd
in
mov
dec
pop
mov
pop
sub
push
push
jae
push
iret
mov
in
bound
sub
and
and
negb
shll
popf
imul
fwait
sbb
sub
pop
fisubrl
int
pop
xor
daa
xchg
gs
dec
in
inc
mov
gs
jo
adc
push
mov
aad
lret
scas
mov
xchg
imul
dec
inc
ja
add
fstpl
addb
sub
cwtl
adc
mov
lret
cmp
dec
fwait
add
mov
movsb
arpl
mov
in
aas
lea
int3
add
push
data16
or
or
adc
jbe
insb
adc
ret
pop
or
push
fbld
testb
xchg
cmp
inc
push
inc
sbb
test
test
outsb
and
je
sarl
mov
jo
scas
adc
std
notl
jle
push
or
rdmsr
shr
dec
pop
push
aam
xor
ficoms
fmull
push
in
xchg
loopne
popa
xchg
xor
out
pop
cmp
push
popf
add
movsb
stc
ret
xor
testb
stc
pushf
cwtl
add
leave
and
sub
nop
js
in
xchg
or
sub
mov
fcmovbe
jnp
xchg
mov
ret
xchg
stos
das
lods
movsb
xchg
and
in
divb
notb
inc
xor
mov
lock
sub
iret
push
int3
test
aaa
loope
mov
call
mov
addb
outsl
outsl
jno
jp
inc
push
rclb
fbld
xchg
pop
mov
mov
ljmp
sbb
mov
int
bound
fdivrl
jns
test
sbb
jle
pop
jo
sti
das
push
pop
mov
outsb
imul
push
and
jg
mov
adc
adc
sbb
cmp
mov
sub
fisubrs
mov
lock
dec
fidivs
jp
or
or
hlt
mov
xchg
push
scas
in
fdivr
mov
sub
pop
and
pop
loopne
cld
push
mov
pop
sbb
xor
scas
fnstenv
push
stos
pop
jmp
adc
or
aas
pop
dec
jae
inc
jl
aad
dec
inc
notl
cwtl
push
imulb
or
dec
pushf
test
shr
push
shlb
xor
rep
add
test
outsb
icebp
mov
int
cmpsb
insb
sahf
mov
mov
aaa
mov
jne
arpl
sub
mov
shll
jl
out
aam
outsl
adc
jmp
push
add
push
push
bound
aam
out
sub
mov
adc
push
adc
push
test
push
push
insb
std
inc
pushf
mov
add
dec
mov
push
ret
fwait
mov
sub
mov
call
ss
outsl
mov
mov
cmpb
or
movsl
inc
fcmove
lods
addr16
jg
sti
push
sahf
mov
cmp
int
mov
push
xchg
test
pop
adc
pop
lret
xchg
inc
ret
scas
aam
clc
sub
lds
stos
add
addr16
push
xchg
push
mov
mov
mov
popf
adc
lock
cmp
push
cwtl
push
jg
add
cmp
inc
popa
or
movsl
cltd
jl
mov
ret
xchg
cmp
mov
sbb
xor
fcmovb
or
xchg
and
imul
adc
mov
mov
jns
sub
addl
inc
popa
ja
outsb
dec
dec
movsb
dec
pop
dec
mov
scas
sub
inc
ljmp
dec
push
push
repz
pop
jg
jb
add
cmp
mov
repz
jl
out
sub
out
cmc
aaa
je
lcall
xor
xchg
push
add
jge
inc
cltd
sbb
mov
jne
push
cmp
cmc
jp
ja
loop
sbbb
outsb
or
xchg
scas
mov
mov
popa
add
in
mov
stc
adc
adc
cmp
es
scas
sbb
xlat
fnsave
js
push
jbe
or
dec
xchg
push
aaa
lds
popf
jmpw
in
push
add
rcrl
and
movsl
jmp
movsb
test
push
adc
mov
out
in
ror
jle
cmp
inc
jge
leave
cli
fwait
rcrl
mov
bound
sbb
test
dec
or
dec
lcall
push
cmpsb
add
imul
or
jmp
mov
fildll
adc
xchg
dec
cmpsl
ja
stos
test
fstps
fbld
je
and
mov
call
xchg
mov
and
dec
mov
cmp
aaa
pop
adc
xchg
out
cwtl
push
loopne
push
daa
fisubl
inc
stos
shll
ds
xchg
xchg
xchg
insl
out
out
bound
add
jnp
sbb
sub
push
adc
pop
fcmovnbe
outsl
cmp
sub
std
loope
inc
sti
fldenv
or
cmp
je
pop
jno
sub
decb
and
les
pop
push
xchg
jne
repz
jb
jl
test
aam
cmp
in
mov
outsb
pop
pmaddwd
and
mov
mov
idiv
sub
outsb
addr16
adc
in
pushf
lock
mov
dec
inc
loopne
jle
mov
pop
dec
fsubs
and
ror
or
cmp
dec
sbb
mov
and
dec
xchg
sub
jo
adc
and
xchg
jmp
inc
fildl
cs
jo
aas
pushf
popa
sbb
adc
fldenv
push
je
les
sbb
repz
in
aad
fcmovb
jp
or
ret
in
movsb
fcom
repz
loopne
cld
mov
lretw
ret
mov
cmp
dec
je
jbe
rclb
adc
and
xchg
inc
jge
jno
xchg
sti
push
test
lahf
mov
or
jae
mov
in
push
xor
and
add
int
xlat
push
popa
and
inc
lds
test
jmp
fists
daa
add
ja
int
xor
dec
int
popa
mov
pop
shlb
out
adcb
push
mov
shl
in
test
pop
lea
movsb
mov
push
lods
lods
adc
xlat
add
je
mov
push
sub
push
dec
push
adc
stos
dec
in
jne
inc
imul
lret
jp
jnp
aaa
jp
divl
add
xchg
pop
out
jmp
sub
cmp
aam
cwtl
sub
insl
scas
xor
xchg
adc
fimuls
lea
xchg
inc
arpl
pop
mov
mov
inc
movsb
dec
pop
jg
sbb
push
jmp
mov
inc
or
lret
clc
nop
aad
int3
lcall
imul
das
movsl
ficoms
mov
xchg
jmp
mov
mov
cmp
push
jle
repz
push
xchg
xor
aas
or
xchg
rcrb
out
push
inc
pop
mov
orb
test
mov
push
loop
dec
jnp
aaa
sub
scas
ficomps
dec
jb
pop
xor
inc
lock
pop
fucomp
int
ficompl
jle
mov
lds
hlt
xor
push
inc
insb
icebp
pop
or
mov
iret
invd
push
or
lods
rcr
clc
cmp
xchg
push
mov
jmp
add
movsb
es
cmpsb
xchg
adcl
cld
inc
mov
xor
push
dec
cli
pop
mov
lods
aam
fmuls
and
jbe
dec
or
pusha
jp
mov
ret
stc
xlat
pop
aaa
push
pop
push
outsb
sbb
lods
dec
lahf
sub
popf
sbb
inc
out
push
push
mov
xchg
mov
in
pop
jle
lret
es
mov
mov
rcrl
add
out
pop
loopne
adc
push
push
iret
sbb
mov
aad
rolb
xor
sbbl
pop
mov
jl
sub
iret
jae
andb
lea
imul
pusha
pop
test
sbb
js
xchg
fwait
and
xchg
and
push
dec
pushf
imul
in
stos
push
push
int3
shll
out
ljmp
insb
push
fwait
jg
pop
cli
mov
xchg
fisttps
mov
pop
cmp
aaa
xchg
cmc
pop
and
pusha
fisttpl
pop
jle
xchg
sbb
addb
movsl
xor
inc
cmp
jmp
inc
dec
or
imul
mull
aad
jg
xor
pusha
shrb
pushl
jns
add
into
add
loope
out
cli
add
fdivl
shl
adc
ror
aas
mov
lock
test
jmp
mov
popf
sub
jge
sahf
scas
clc
and
mov
cmp
push
mull
and
sbb
cmp
loopne
divl
xorl
mov
pop
mov
leave
scas
lods
lahf
pop
repnz
in
mov
roll
mov
jno
rolb
pop
mov
lods
les
mov
cmp
stc
cli
mov
pop
and
test
mov
in
cmpsl
cli
jnp
leave
addr16
xchg
ja
xchg
cmp
bound
testl
clc
shlb
call
add
ja
sbb
fistpl
fmulp
shll
cs
out
addl
ds
mov
clc
sbbl
pushf
add
fiaddl
xchg
test
repnz
and
aas
popf
sbb
sti
sahf
jnp
das
iret
mov
or
mov
mov
sbb
out
push
icebp
leave
jbe
dec
in
notb
fscale
xchg
pop
cmpsb
imulb
inc
out
cmp
jnp
add
fidivrs
jge
cltd
je
in
push
sbb
pop
or
cmpb
aam
call
jp
cmp
addl
cmp
lcall
js
mov
aaa
aad
fdivs
push
pusha
loope
loop
mov
outsl
mov
scas
jl
mov
xchg
sub
push
test
mov
fisttps
jae
xor
fs
dec
push
in
data16
dec
add
push
mov
imul
push
pop
imul
dec
xor
mov
in
adc
int
lds
mov
sub
jo
xor
sub
push
xchg
add
mov
int3
hlt
cmp
push
jmp
inc
jle
subb
mov
pop
adc
stc
sub
loope
xchg
xor
into
pop
mov
mov
cmpsb
loope
sti
pop
dec
popf
int
int
sbb
loopne
adc
mov
xchg
mov
lret
push
adc
das
cmp
into
push
or
inc
lcall
mov
mov
or
jmp
pushf
insb
in
lods
pusha
outsb
inc
inc
outsl
mov
movsb
in
rorb
sbb
dec
inc
push
jae
sti
xchg
lods
cmpsl
dec
pop
push
sub
jb
call
jp
int
lcall
and
das
adc
xchg
mov
outsb
xor
pop
xchg
mov
aad
dec
test
cli
movb
mov
cmpsb
mov
xchg
andl
js
stc
sti
xchg
test
in
arpl
loop
fstpt
and
into
mov
es
push
add
inc
rcrl
mov
sbb
fs
popa
ljmp
mov
ss
push
and
inc
aam
ret
mov
add
mov
mov
jnp
into
jecxz
cmp
cmp
cmpsb
jns
movsb
call
fwait
push
add
cmp
add
imul
das
jl
std
lret
repz
lods
jo
lret
lahf
addr16
mov
cmovs
xchg
mov
movsl
cwtl
sbb
rorl
inc
xchg
pop
fwait
lods
lret
xlat
jns
xchg
test
mov
icebp
cwtl
stc
pop
movsb
cwtl
outsb
lret
std
js
sbb
inc
fcmovne
or
hlt
xchg
push
add
insl
add
movsb
jbe
movsl
inc
call
add
scas
popa
addr16
cmpl
movb
je
xor
dec
jno
add
sbbl
sub
lods
rcll
jecxz
dec
out
jae
inc
in
add
jae
repnz
jecxz
cmp
cs
dec
enter
and
push
pop
adc
outsb
and
jne
insl
cld
sub
jnp
push
mov
jg
call
cmp
dec
jg
fldl
pop
xorl
push
icebp
fisubs
not
lcall
mov
imul
xchg
sahf
std
ja
fsubrs
sub
int
jae
xchg
pop
popf
orb
inc
cmp
jbe
rcrb
ja
mov
pop
insb
xchg
pop
cmp
adc
and
pop
leave
lea
lods
or
fbld
pop
xchg
mulb
inc
sbb
lods
sbb
mov
in
out
inc
cmp
xchg
and
mov
jns
or
adc
or
inc
ret
xlat
sahf
mov
xor
arpl
out
test
outsl
sub
mov
jle
and
xor
jmp
fcoml
sub
aas
ja
cmp
arpl
ret
cmp
add
ret
pop
nop
mov
xchg
dec
inc
jg
xor
pop
popa
xchg
and
stos
pop
and
and
adc
sub
stos
and
jmp
sbb
sub
adc
mov
roll
daa
sbb
mul
mov
je,pt
inc
js
or
inc
mov
adc
dec
movsl
ss
add
dec
inc
orl
aas
dec
cmp
popf
lret
incb
aam
sub
mov
addr16
cmc
sbb
jo
fs
mov
int
ret
sub
cmp
mov
fidivs
xor
sub
adc
adc
clc
add
mov
imul
jg
dec
test
mov
rclb
mov
shlb
in
lds
adc
xor
mov
xchg
xlat
mov
xchg
pushaw
dec
push
dec
jmp
jp
mov
mov
xchg
test
flds
sbb
dec
mov
and
jg
repnz
test
ficoms
lds
movsl
mov
shll
iret
add
std
sarl
aas
daa
and
mov
sub
cmp
stc
pusha
daa
jno
add
lock
insl
pop
push
test
add
or
test
clc
ret
scas
add
lds
push
mov
jmp
data16
imull
xlat
and
repnz
negl
mov
xchg
decl
add
sub
pop
inc
inc
stos
jl
leave
xchg
sbb
mov
out
and
inc
sub
mov
dec
std
mov
cwtl
xor
test
into
out
cmc
sbbl
xchg
shlb
mov
mov
xchg
mov
std
add
daa
incl
and
mov
js
mov
xchg
adc
add
mov
jnp
cmc
jo
add
into
dec
stos
aaa
cmc
sub
outsl
cmp
add
mov
clc
fimuls
mov
imul
mov
cmp
jnp
test
out
push
mov
into
fdiv
stc
mov
scas
cli
inc
fmull
inc
push
enter
rorb
ret
repz
add
jne
cmp
add
outsl
mov
and
cmpsb
xor
pop
hlt
sub
jmp
and
xor
inc
xor
push
push
and
jp
mov
stos
mov
add
sub
pop
xchg
out
pop
test
test
mov
xor
sub
or
inc
xor
mov
jl
push
cmp
cwtl
and
imul
fwait
push
js
xlat
push
xchg
test
xor
int
push
and
or
add
sub
mov
and
scas
xlat
sarb
dec
testb
xor
xor
jae
and
or
ds
shll
mov
push
xor
mov
dec
or
adc
dec
mov
inc
add
adc
pop
add
sub
adc
mov
stc
lods
int
sbb
aas
or
jbe
xor
insl
mov
scas
cmp
lret
mov
or
dec
scas
movsl
int3
fs
jecxz
push
stos
jnp
daa
jbe
testb
dec
shl
fdivs
push
fmull
adc
lds
aad
inc
mov
push
mov
or
movsb
pop
sub
sbb
dec
mov
jb
jbe
fidivl
adc
inc
mov
loopne
xchg
pop
out
loopne
mov
and
sbb
in
inc
dec
fisubl
mov
gs
imul
mov
pusha
mov
mov
icebp
pop
jb
aad
roll
pop
inc
jo
std
dec
mov
push
mulb
lcall
add
or
or
pop
mov
popf
clc
std
mov
movsb
or
mov
push
pshufw
cmpsb
dec
mov
xchg
sub
pop
outsb
sbb
scas
mov
xor
dec
add
stos
test
icebp
das
cmpsl
pop
cli
push
ret
jg
lahf
xor
mov
push
aad
sub
pop
pop
xor
xchg
push
leave
jmp
jge
aas
stos
loopne
jns
leave
mov
dec
add
push
rorb
int
jo
scas
mov
mov
in
dec
daa
pop
std
aad
inc
push
outsb
mov
stc
pusha
adc
jl
sbb
or
fistpl
sbb
out
mov
shrl
lret
imul
sub
leave
push
inc
adcb
mov
ds
adc
xchg
jmp
mov
stos
mov
in
and
xchg
ficoms
cmp
call
adc
mov
dec
xchg
fimull
cmp
cmc
cmp
cmpsb
jecxz
dec
cld
fwait
xchg
pop
push
sub
cmpl
test
lcall
inc
arpl
sbb
in
adc
stc
loop
rolb
andl
mov
in
out
fisubs
mul
jbe
pop
jo
jecxz
lret
lret
clc
mov
xlat
and
mov
jb
arpl
inc
test
push
push
sahf
or
ss
call
aaa
cli
mov
xchg
dec
sbb
cmpsb
popaw
icebp
jno
jp
hlt
mov
xchg
scas
mov
add
add
sub
mov
xor
or
lret
negb
loopne
js
push
ss
out
scas
aad
repz
in
and
out
xor
into
push
in
or
outsl
lods
insl
push
addr16
iret
rcl
and
imul
jne
push
fdivrl
ja
sub
or
js
adc
scas
push
sahf
mov
mov
push
mov
bound
lret
and
popf
fsubs
jp
or
xchg
imul
push
jnp
sub
inc
mov
cmp
outsb
movsb
bound
mov
push
cmp
mov
daa
cmp
add
js
push
mov
add
roll
cwtl
and
test
xor
out
clc
cld
cmp
aaa
pop
faddl
xchg
or
add
adc
aam
addr16
or
add
popa
mov
and
out
sti
rcrb
test
adc
movntps
test
in
push
stc
push
xchg
adc
inc
inc
mov
mov
stos
mov
add
push
mov
push
aad
jecxz
negb
rorl
add
mov
pop
iret
jle
data16
push
rcrl
and
and
jns
adc
imul
xchg
out
pushf
clc
xchg
cmp
popa
push
in
lcall
hlt
xchg
test
add
push
mov
popl
or
subb
adc
or
lods
jmp
jg
sbb
or
push
aam
push
jnp
call
push
mov
add
jne
sub
lods
out
mov
pop
cmp
adc
ds
mov
xor
arpl
rclb
aam
outsb
call
int3
clc
add
sbb
lods
jo
pop
sub
xor
dec
pop
dec
cmp
xor
push
dec
push
xor
scas
mov
in
cltd
mov
jge
cmpsb
jbe
pop
jl
andl
sbb
fstpl
sub
inc
add
inc
jne
or
or
pop
cmp
mov
inc
jmp
fisubs
mov
dec
ja
out
inc
addr16
cli
mov
pop
lock
sbbb
jmp
xor
ds
pop
dec
dec
sub
inc
hlt
dec
push
sbb
push
xchg
adc
pop
repnz
and
xor
jnp
push
mov
scas
clc
jae
or
lret
sub
adc
jae
insl
leave
inc
ljmp
sub
adc
push
insl
jo
push
adc
push
jp
push
jb
pop
test
cmp
sahf
gs
adc
xchg
out
jbe
mov
sbb
vcvtsi2ssl
fiadds
cmpsb
cmp
leave
leave
add
aaa
push
mov
in
inc
mov
jne
andb
adc
mov
mov
insb
cmp
jne
das
arpl
jge
imul
loop
ljmp
pop
cmpsb
in
xchg
xor
in
cwtl
je,pt
movsb
fwait
jne
fstps
add
sbb
dec
mov
push
js
adc
mov
and
pusha
push
popa
divl
cld
lock
lods
pop
es
mov
sub
xor
cmc
sub
adc
test
dec
imul
xchg
and
mov
pop
scas
negb
pop
lret
inc
popf
mov
push
scas
add
dec
xchg
ret
sub
push
inc
push
aad
decb
fadds
jns
lcall
jae
cmp
mov
push
hlt
inc
jae
scas
xchg
rcrb
ret
outsb
test
sbb
xchg
pop
mov
popa
ss
lock
sub
js
data16
iret
push
inc
mov
pop
inc
and
lods
pop
shrb
lret
jno
repnz
sub
fdivp
movsb
aam
scas
xor
mov
push
faddl
int
xchg
mov
adc
jge
fs
sbbb
xchg
fldl
leave
push
inc
xchg
xchg
and
in
pop
mov
repz
into
les
cmp
mov
movsb
ret
fmul
cmp
shll
das
cmc
and
ljmp
or
jecxz
flds
stos
fwait
or
dec
sub
mov
adc
dec
add
add
xor
bound
sahf
lock
cltd
dec
inc
popf
xchg
test
jae
lds
add
pop
jns
adc
rcr
lret
inc
or
mov
jb
jnp
lds
push
outsl
adc
add
ror
lds
cwtl
sbb
mov
pop
sti
pop
movsb
pop
es
xchg
mov
or
cmp
add
sub
adc
div
push
pop
rcl
or
push
sbb
daa
mov
sbb
ja
test
dec
lea
test
add
paddd
mov
xchg
daa
fmul
aam
mov
je
lret
xchg
aaa
mov
loope
mov
mov
mov
pop
push
mov
push
aaa
stc
std
xor
fs
imul
jno
xchg
adc
jl
rolb
cmpl
xor
add
sub
inc
pusha
or
or
call
movsb
mov
dec
pop
push
aaa
push
dec
in
std
pop
push
inc
xor
mov
add
inc
les
test
xlat
adc
outsw
fisubrl
repnz
add
xchg
sbb
mov
out
xchg
aaa
adc
dec
inc
movb
or
push
jbe
scas
adc
outsl
in
pushf
and
lea
sahf
fldcw
lcall
js
mov
xor
lds
mov
pop
fs
push
or
dec
aaa
xlat
cmc
pop
mov
fcomps
xorb
lea
inc
mov
jnp
or
out
bound
mov
jl
out
xchg
shrb
or
scas
and
mov
lds
jecxz
push
cmc
addr16
push
cmp
xchg
and
in
test
adc
fs
xchg
xchg
push
or
dec
add
stos
mov
clc
xor
or
mov
cmpsl
mov
push
insl
jmp
jno
gs
insl
icebp
cmp
and
fcomps
dec
out
and
xor
iret
fnsave
sub
push
dec
jno
push
xchg
cmp
inc
push
mov
repnz
sbb
push
cmp
jb
cmp
push
leave
out
or
lock
test
lods
pop
sbb
aam
insl
lcall
pop
mov
dec
mov
ror
dec
xor
dec
dec
pop
xor
loopne
sbb
adc
push
adc
adc
jo
push
nop
xor
ret
mov
mull
sbb
inc
or
divb
jmp
pop
ret
andl
mov
fwait
inc
fbld
pop
pop
pop
sahf
fsub
jo
test
andl
sub
or
mov
nop
xchg
jecxz
push
out
imul
stc
lcall
ficompl
or
stos
xchg
cs
out
and
xor
adc
or
cmp
cmp
and
xchg
test
ja
loop
enter
cli
mov
xor
divl
add
add
add
push
mov
aas
pop
add
lahf
ret
nop
shll
push
inc
faddl
sbb
jno
lahf
sbb
dec
cmpsl
cmp
jmp
leave
lods
mov
xchg
mov
outsb
loop
mov
out
mov
cmp
or
pushf
cld
das
mov
jge
lcall
cmp
pop
jge
mov
adc
xchg
dec
aad
mov
popf
mov
push
xorl
pop
cmp
push
mov
clc
inc
loop
leave
loope
or
cmc
jbe
js
cmp
repnz
cmp
dec
test
push
movl
popa
sub
xlat
arpl
daa
enter
xor
pop
inc
mov
daa
pop
sbb
inc
inc
lret
outsl
mov
imul
jno
test
roll
mov
cmpsb
add
data16
and
scas
pop
insb
cmc
cmp
mov
inc
mov
xor
add
int
addb
scas
mov
cmc
jae
mov
leave
inc
pop
jle
enter
sarl
dec
addr16
push
inc
xchg
and
jmp
adc
lret
cmp
xchg
cs
sbb
hlt
push
in
mov
insl
xchg
or
paddd
add
push
pop
xor
or
repnz
pusha
mov
arpl
xchg
or
lcall
int3
daa
or
and
push
add
ret
mov
or
lret
movsl
pop
aaa
addr16
pop
bound
mov
sub
dec
aam
jbe
jge
xchg
fwait
dec
pusha
call
cmc
xchg
push
cmp
lods
pushf
jmp
push
jno
movsl
nop
inc
inc
or
fsubrp
push
jg
stos
das
rclb
jge
add
cltd
xor
push
divb
adc
sub
push
push
mov
xchg
lods
adcb
mov
lcall
jg
mov
shld
jae
adc
test
add
sub
jbe
inc
iret
scas
popfw
mov
imul
mov
iret
movsb
iret
jmp
dec
dec
jo
je
iret
test
mov
rorb
cmp
rorl
adc
adc
ds
int
dec
addr16
inc
push
pop
test
bound
inc
sub
arpl
iret
es
jne
ljmp
addr16
lods
faddp
lea
and
mov
rcl
es
xor
sbb
or
lock
cmp
fldenv
push
outsl
add
repnz
nop
pusha
test
clts
enter
mov
xchg
sub
sub
das
repnz
movsb
sub
jnp
mov
xchg
cmc
mov
outsl
sbb
out
xchg
push
fistpll
lcall
data16
mov
out
imul
and
cli
jmp
cmp
cltd
aaa
lods
movsl
push
push
mov
xchg
push
scas
sbb
sti
cmpsb
sbb
mov
insb
sub
shlb
mov
xchg
jmp
inc
mov
addr16
jo
stos
xor
ljmp
popf
mov
imul
mov
in
jb
push
hlt
push
out
pop
in
or
out
fimuls
or
call
lea
adc
lahf
jecxz
out
push
inc
std
pop
adc
call
mov
imul
add
xchg
xchg
inc
inc
pushf
sub
pop
test
in
out
mov
lock
cmp
mov
pop
add
xor
stc
rcr
sub
cmc
push
push
dec
xchg
mov
insb
adc
insb
sbbl
sub
add
stc
adc
cmp
mov
jg
addr16
mov
or
shr
es
das
push
loopne
cmc
cwtl
xor
inc
shll
and
mov
sub
cmpsb
js
sti
inc
dec
jp
sub
in
cli
repz
cli
int3
lcall
xchg
jo
push
push
jg
sub
jle
hlt
mov
in
add
pop
add
into
ret
or
mov
xchg
mov
jge
push
dec
in
pop
push
lods
mov
les
sbb
inc
mov
sbb
jnp
push
jg
lcall
xchg
xor
ficomps
das
cli
fwait
daa
mov
es
es
jge
notb
cmpsl
ror
scas
pop
daa
in
sahf
ss
dec
and
cli
scas
ficomps
jmp
xchg
out
flds
aas
cmp
sbb
test
xlat
sahf
in
mov
les
or
xor
dec
xor
xchg
ret
test
xor
inc
xor
sar
jecxz
mov
lods
push
cmpsl
mov
fistpl
in
and
loope
mov
inc
in
xor
sbb
mov
roll
inc
pushf
cmp
rorl
mov
sbb
jl
cmp
loopne
outsb
and
sub
imull
xorb
data16
in
push
cmp
enter
xchg
pop
fisttps
push
adc
sub
ret
cmp
imul
test
mov
dec
imul
in
mov
pop
push
mov
jbe
dec
mov
push
dec
push
push
in
rol
outsb
loope
jle
adc
lock
cmp
push
mov
mov
ror
sbb
mov
inc
adc
xchg
mov
dec
mov
mull
xchg
jp
inc
lods
mov
push
sbb
sahf
and
fdivr
push
adc
imul
out
lods
add
adc
mov
sbb
xor
cmp
pop
fstpt
push
sbb
cmp
rcrl
pusha
and
add
sub
add
inc
aad
sub
cmp
in
mov
aad
pushf
push
or
pop
push
nop
jo
lcall
test
add
in
jg
pop
rolb
enter
mov
and
sbb
into
push
out
mov
jge
mov
jnp
pop
adc
ret
es
jmp
cmp
sub
sbb
and
or
ljmp
adc
roll
rclb
ds
fucomi
fimull
cmp
or
mov
dec
mov
adc
mov
and
lods
stos
dec
adc
pop
push
addr16
adc
pop
xchg
mov
in
xchg
shl
cld
sbb
in
jle
jno
jbe
movswl
or
mov
insl
adc
into
jge
cmp
sbb
push
mov
cld
inc
cmp
cli
scas
fs
mov
and
lock
pushf
or
sbbb
mov
sti
mov
xchg
push
inc
test
inc
ss
mov
mov
cltd
fwait
lcall
aas
push
shll
ja
pop
mov
out
hlt
shll
inc
push
les
xchg
and
stos
fdivrl
outsl
leave
add
jg
add
jns
mov
sbb
pop
pop
mov
jns
mov
scas
jle
sub
mov
mov
orb
aas
add
dec
loope
es
xchg
cltd
lahf
jp
test
clc
xchg
jmp
mov
mov
xor
jbe
stc
adc
test
fstl
mov
pop
inc
test
mov
cmc
imul
out
mov
push
xor
cmp
js
or
movsb
in
and
sti
push
pop
sti
movsb
mov
fists
shl
ret
xchg
stos
jno
jg
cmp
fs
cmp
lods
daa
in
repnz
lock
imul
test
or
ljmp
rcll
add
mov
sbb
mov
push
inc
ds
loope
fs
and
jmp
add
xchg
pop
lret
enter
jecxz
std
jne
dec
fistpll
inc
out
push
sti
add
mov
pop
gs
daa
mov
and
jl
mov
mov
dec
addr16
mov
js
sahf
xlat
cmpsb
sub
jb
mov
int3
cmpsb
pop
jae
aad
clc
mov
dec
mov
scas
xchg
inc
mov
lcall
mov
pop
sahf
stos
inc
stos
and
movsl
pushf
xchg
cli
cwtl
test
adc
lahf
es
and
nop
mov
inc
stos
mov
push
in
sub
inc
add
pop
sub
add
nop
or
mov
sahf
mov
xchg
test
or
push
cmp
jno
add
pop
imul
lret
outsb
rol
sbb
sub
sahf
mov
loop
js
cli
sbb
mov
fistl
sub
out
out
arpl
jmp
arpl
insb
or
mov
sbb
outsl
cmp
lods
imul
xorl
push
arpl
fisubrl
ret
jmp
subl
mov
mov
and
dec
insb
out
mov
cmp
addr16
decb
int
cmp
sbb
adc
hlt
xor
subl
daa
xchg
mov
enter
sub
lods
push
mov
in
xchg
fistl
and
jg
ret
and
mov
out
or
sbb
arpl
int
dec
std
ficoml
cmp
in
daa
add
rorb
xchg
sbb
add
jno
jb
or
push
sub
pinsrw
adc
xchg
inc
adc
outsl
es
nop
movsl
int
adc
or
imul
fldt
rcrb
mov
iret
mov
inc
rcr
test
mul
adc
pop
and
pop
jns
push
push
push
xchg
cmc
xchg
movsb
mov
add
das
adc
inc
ljmp
in
out
jo
dec
insl
out
jnp
push
into
fs
int3
cmpsb
adc
stos
xchg
addl
or
mov
sarb
or
lret
outsl
push
frstpm(287
sub
sub
xor
xchg
cmpsb
rolb
cli
mov
icebp
adc
arpl
aaa
in
sub
fistps
push
xor
jge
aam
test
test
aas
mov
dec
xchg
stos
mov
pushf
fwait
sbb
lods
xor
scas
xchg
mov
fcomi
add
inc
sbb
fcom
test
jb
insb
movsb
cmp
adc
adc
setge
dec
and
mov
lret
andb
repnz
xor
xchg
and
mov
xchg
insl
pop
sbb
and
jb
addr16
lahf
shlb
push
push
or
test
inc
mov
enter
inc
idiv
sub
mov
jg
fwait
mov
cmpsl
add
ss
ffree
testl
ss
xor
fdiv
repnz
fs
pop
mov
and
rcll
jp
sbbl
lock
repnz
lods
rcl
notl
repnz
mov
dec
adc
mov
mov
repnz
mov
xor
lcall
stos
adc
jo
addb
lods
dec
xor
mov
xchg
and
inc
ret
xor
xchg
mov
pop
movb
test
mov
push
das
mov
ljmp
jecxz
pop
pop
xchg
arpl
inc
test
or
cli
js
push
xchg
aas
nop
add
test
jnp
mov
push
ds
and
fwait
mov
cmp
mov
mov
imul
dec
lea
add
lcall
mov
call
ja
mov
pop
fcmovnu
addr16
imul
scas
mov
cmpsl
mov
pop
cmp
popa
es
gs
test
out
pop
mov
mov
pusha
xorl
fbstp
int3
sbb
lds
cmp
xchg
stos
test
fistps
xor
rolb
mov
pushf
push
adc
insl
mov
in
dec
xor
out
daa
scas
cmp
andl
push
xchg
sbb
xchg
mov
in
arpl
jns
push
jl
sub
pusha
push
add
pop
push
test
les
idivl
sbb
sbb
pop
add
sub
adc
sbb
and
xor
cmp
daa
lock
pop
fdivp
add
mov
xor
testb
and
mov
cmc
insb
es
jl
jmp
cmp
jo
xchg
pop
cld
push
mov
inc
and
cld
mov
cmc
push
inc
imul
dec
cmp
add
dec
jle
xchg
nop
jecxz
popa
push
loope
sub
out
out
mov
mov
fadd
mov
jp
cmp
fistps
std
inc
test
cmp
loope
gs
into
pop
fsubl
lods
jg
sbb
mov
ds
xchg
lds
xor
inc
gs
cwtl
and
cmp
out
pushf
jge
mov
shrb
arpl
jae
sarl
loop
adc
mov
clc
jecxz
inc
cmpsl
mov
mov
sub
mov
xor
in
jbe
inc
xor
ja
jg
xlat
divl
out
mov
sub
pop
scas
add
or
push
addr16
sarb
sbb
cmp
jne
push
jb
sub
mov
ljmp
movsl
xor
pop
out
xchg
insl
pusha
cs
lahf
and
fcoms
sti
out
inc
movl
add
mov
pushf
cmp
xchg
inc
or
pop
ja
test
js
and
mov
pop
sub
fisttps
sti
bound
inc
leave
int3
mov
cmp
clc
cmp
xchg
iret
js
mov
shlb
jnp
movsl
push
fistpl
inc
jmp
fwait
or
outsl
push
cmp
xlat
push
dec
mov
sub
mov
scas
imul
adc
pop
mov
xchg
lcall
imul
sbb
int3
ret
cmpsw
pop
ret
into
mov
add
sub
scas
imul
add
push
mov
stc
mov
shll
xchg
hlt
push
lret
xchg
push
cmp
inc
dec
push
push
sub
jno
xor
push
cmp
pop
dec
cmpsb
imul
dec
mov
testb
sub
cmpsl
aas
sbb
clc
popa
xchg
push
and
insl
insb
test
aad
or
inc
mov
shlb
lock
xor
popf
sub
repnz
es
test
inc
pushf
xchg
aad
and
fsubl
push
push
inc
mov
xchg
push
dec
addr16
push
les
xor
dec
dec
jmp
in
aas
bound
mov
mov
mov
leave
imul
push
jle
mov
pop
jp
jp
push
mov
cmc
adc
or
push
add
ljmp
xor
cmp
pop
mov
adc
xchg
pop
inc
xchg
shr
mov
jbe
xor
daa
cmpsl
cmpsb
jge
shll
mov
out
lock
jle
scas
jmp
mov
mov
scas
adc
test
pusha
int
mov
test
out
jl
mov
push
jbe
mov
sbb
out
stos
ljmp
jae
cmc
hlt
push
test
lds
or
movsl
jp
mov
test
rcrl
fiaddl
stc
subb
outsb
jg
ficoms
cmp
xchg
out
cmpsw
xchg
fnstcw
cmp
ljmp
imul
stos
loop
mov
clc
loope
push
pop
inc
xchg
cld
sbb
xchg
cmp
push
les
jbe
dec
adc
adc
fldcw
jle
hlt
mov
xchg
orl
inc
and
scas
adc
xor
pop
idiv
decl
mov
adc
sbb
jle
pop
rorl
or
cwtl
cmp
mov
in
dec
pusha
xchg
mov
xchg
and
cmpb
push
cmp
cmp
mov
mov
sbb
mov
cmp
or
ret
cmp
cltd
mov
mov
adc
xchg
mov
cmp
sbbl
jnp
sub
jmp
fwait
xchg
or
jb
fnstcw
push
mov
pop
xchg
divb
xchg
dec
fnstcw
fnstenv
cmpsb
adc
std
in
jge
push
fadds
push
inc
pop
nop
aam
aas
jno
push
dec
je
sti
mov
push
jo
lret
xchg
pop
and
in
jae
negb
aaa
jnp
pop
mov
sbb
scas
fldt
stos
les
sub
or
mov
xlat
or
pop
xchg
movsl
push
or
fiaddl
in
cmpsb
lcall
pop
cltd
jmp
insb
pop
jno
cmpsl
push
adc
mov
in
sub
test
lret
jl
outsl
cld
into
addl
inc
out
in
mov
inc
jge
in
mov
and
dec
adc
pop
insl
xlat
test
js
loope
pop
or
in
imul
cmp
cmp
ja
pop
lock
ds
mov
adc
ss
add
xchg
cmc
shl
xchg
sub
fists
mov
xchg
or
xchg
out
cs
int
mov
pop
sahf
or
jle
test
mov
ljmp
mov
aam
lea
popf
push
pop
mov
lock
xchg
dec
mov
or
sub
rorl
inc
xlat
mov
scas
hlt
jnp
sbb
test
rolb
mov
ss
test
jns
mov
test
inc
fs
lcall
sahf
add
pop
and
gs
test
push
aas
lahf
sbb
imul
jo
lahf
jmp
and
dec
add
adc
add
xor
addl
adc
das
or
mov
mov
jo
int3
push
cmp
out
lods
sbb
stos
rorl
or
inc
cwtl
inc
rcrl
dec
jge
inc
inc
dec
inc
dec
dec
sub
subb
shl
and
shlb
sub
mov
xchg
lcall
or
jp
data16
push
jae
andb
movsl
lds
ss
adc
cmp
push
mov
mov
cmp
xchg
lods
sti
xor
cmp
bound
adc
mov
jne
daa
or
xor
sbbl
mov
adc
inc
addb
sub
dec
sahf
and
outsb
mov
bound
and
iret
mov
fnstenv
pop
pop
and
sti
cvttps2pi
call
mov
xchg
clc
addr16
xor
leave
jno
jae
out
push
adc
push
mov
pop
cmp
fisttpll
add
insb
dec
addl
aaa
jge
mov
sarb
push
das
or
inc
ret
cmpsl
pop
adc
mov
pop
or
xor
outsb
shll
adc
jge
or
ret
loop
adc
call
sub
pop
mov
mov
mov
mov
inc
pushf
mov
xchg
push
jns
inc
ficoml
mov
ds
jl
sub
insl
and
dec
dec
pop
jo
add
xchg
sbb
xchg
inc
mov
icebp
out
push
mov
divl
movsb
es
mov
add
xchg
push
int3
out
sub
es
sbb
and
lods
sbb
jbe
call
in
xlat
cmpsl
loop
add
ss
fdivrl
adc
icebp
inc
xor
in
sahf
mov
insl
xrelease
dec
mov
sbbl
daa
dec
add
adc
jecxz
adc
add
cmc
cmc
ret
in
xchg
push
push
es
push
xchg
aad
push
addl
outsl
mov
sbb
hlt
jl
jno
pop
adc
lret
lahf
pop
inc
rcrb
push
xor
scas
flds
cmpsb
mov
pop
xor
adc
aaa
inc
jg
ror
je
shll
lds
sbb
and
in
inc
mov
mov
sbb
jge
inc
xchg
movsb
cmp
mov
hlt
fstpl
sub
loope
sbb
scas
mov
mov
outsb
sti
jo
hlt
inc
lods
sbb
add
cmp
stos
mov
cmc
jno
test
test
fwait
adc
sarb
adc
mov
mov
dec
bound
std
test
adc
stos
pop
aad
hlt
pop
data16
lret
xor
popa
mov
xchg
sbb
pop
inc
in
adc
daa
cltd
pop
xor
call
adc
sbb
pop
push
inc
dec
pop
xchg
in
into
ret
push
adcl
push
les
pop
sbb
rcr
push
cld
xchg
sbb
push
adc
push
arpl
outsl
jle
push
mov
add
rorl
mov
lret
pop
inc
add
daa
and
xor
fdivrs
jl
or
aad
and
in
inc
in
push
add
imul
fiadds
push
lock
les
cmp
lcall
mov
jp
bound
in
pop
push
in
jmp
roll
xchg
mov
test
insb
mov
test
pop
out
cmpsl
push
adcb
fwait
arpl
cli
or
add
jl
jecxz
cmp
fldt
rorl
in
lea
sbb
and
add
cmp
test
mov
inc
bound
cmp
out
dec
cmp
test
jnp
das
xchg
jp
add
or
nop
imul
jnp,pt
cltd
cmp
push
dec
push
loopne
bound
mov
jp
mov
inc
sbb
call
mov
mov
adc
mov
pop
mov
sbb
and
int
mov
pop
dec
mov
xchg
pop
mov
xor
inc
ds
or
mov
addr16
aad
and
lods
fldt
push
mov
stos
push
in
pop
jle
push
jge
inc
imul
sub
cmpsb
pushf
cmpsb
sub
sbb
fcmovne
loope
mov
fmuls
aas
mov
mov
outsb
stos
or
push
xchg
daa
lcall
xchg
imul
inc
xor
stos
in
mov
mov
mov
enter
jnp
sbb
jae
or
jg
cmpsb
std
xor
lcall
mov
pop
scas
ja
ds
aam
push
cmpsl
add
mov
push
mov
loop
movl
pop
icebp
adc
jp
sbb
pop
and
push
test
jmp
mov
rcrl
fsubrl
mov
ret
shl
loope
jne
in
ss
test
cmp
jo
out
setno
mov
clc
sub
pop
out
jle
cld
icebp
sub
push
mov
and
movsb
iret
ds
cmc
test
das
add
or
add
insl
fsubrs
ret
into
mov
and
imul
cmp
cmp
movsl
movsl
mov
test
sub
in
enter
pop
aad
or
xor
in
xor
mov
inc
addr16
xor
cld
insb
in
test
ja
inc
mov
mov
mov
or
mov
sub
out
loope
test
lock
out
mov
xor
add
rorl
bound
outsb
ret
fldt
mov
shrl
jle
sbb
testb
ret
xchg
stc
imul
sbb
out
pop
cmpsb
repz
and
dec
adc
movsl
movsl
and
outsl
stos
repnz
dec
sbb
push
jb
jno
nop
fmuls
xlat
cmp
jae
repnz
cmp
loop
mov
jb
loope
jge
icebp
out
adc
aad
dec
mov
sub
fisttpll
lahf
cmp
cmpsl
sbb
mov
mov
or
sub
movsl
test
adc
fnsave
cs
incb
stos
cs
in
and
cmpsb
inc
mov
and
dec
dec
mov
cmp
stc
mov
or
xor
inc
xor
lret
hlt
push
push
mov
push
inc
pop
jmp
xchg
ljmp
push
adc
aam
pop
out
or
push
sbb
mov
mov
in
data16
xchg
mov
js
adc
out
sub
stos
fstps
mov
subl
mov
or
fadds
stc
pop
sub
or
jl
inc
lods
xchg
cmpsb
inc
lcall
cmpl
lret
mov
in
xor
jge,pt
jb
xor
icebp
test
push
pop
fs
jbe
dec
pop
mov
mov
pop
push
scas
mov
pop
push
sbb
ss
outsb
fstl
xor
adc
pop
cmp
sbb
frstor
xor
jl
int
enter
xor
out
sbb
dec
fadds
sarl
jne
notl
push
fdivp
std
out
xchg
sub
int
int
jne
das
gs
minps
cmp
fdivrl
lds
push
dec
imul
jbe
cmc
repnz
ret
adc
shr
repnz
loopne
mov
nop
mov
mov
jmp
std
cmp
aam
pop
jl
cmc
mov
inc
dec
jns
xchg
shlb
mov
mov
or
xchg
mov
je
ficoml
jno
sub
call
in
repz
push
test
inc
xor
cmp
xor
dec
aaa
movsl
add
inc
test
push
pop
mov
std
jge
pop
jp
xlat
jmp
xchg
adc
push
add
xchg
mov
int3
push
push
or
xchg
sti
jne
ret
sub
cs
adc
sbb
int
bound
push
imul
mov
std
and
add
xor
or
dec
cmp
xchg
call
sbb
icebp
and
xchg
sub
scas
stos
in
cmp
movsb
mov
and
pop
jo
rol
stos
fisubs
push
jo
cwtl
sbb
mov
pop
cmp
jae
sahf
imul
movsb
push
pop
cwtl
sub
std
cmp
enter
adc
or
mov
lods
adc
fsubrs
inc
push
pop
aas
cmp
lret
fs
aad
stos
pushf
arpl
jmp
push
stos
sub
lcall
fwait
mov
in
add
sbb
call
jo
test
in
int3
lods
push
push
dec
repz
pop
shl
pop
push
xchg
ds
and
popf
out
xchg
mov
ret
and
aaa
dec
dec
into
push
repz
inc
mov
mov
add
ss
neg
loop
mov
call
stc
fs
or
jns
mov
or
cmc
aaa
fs
es
std
push
mov
lods
in
jp
nop
ret
clc
xlat
gs
adc
mov
gs
out
adc
enter
fwait
int
test
pop
jbe
repz
cmp
sbb
ret
inc
and
add
js
orl
mov
rcrl
mov
inc
and
dec
popa
test
and
imul
mov
stos
mov
add
or
pop
jge
xor
cmp
ss
adc
push
pop
sbb
add
cwtl
mov
enter
outsb
bsr
and
imul
mov
fs
mov
pop
adc
dec
loop
cmpsl
mov
jecxz
push
and
fnstsw
pop
rorb
add
jmp
pusha
push
lea
shll
push
cmp
pop
add
cmc
sub
addb
filds
enter
sbb
jecxz
inc
and
out
jo
xor
in
lahf
mov
aas
sbb
shl
and
xor
gs
cmc
mov
mov
mov
jo
fisttpl
cmpsb
push
inc
push
pusha
scas
inc
sub
iret
lcall
idivl
push
pushf
ret
sahf
std
mov
xchg
outsl
idivb
popa
sbb
sub
pop
gs
ss
sbb
jbe
jl
or
jns
xorb
pushf
imul
mov
aaa
sbb
mov
and
fisttpl
shlb
sub
jb
in
mov
mov
mov
shl
jb
pushf
push
stc
loopne
popa
lea
dec
stc
inc
inc
mov
arpl
test
xchg
mov
into
cmovbe
xchg
xchg
addb
jb
adc
jnp
or
sbb
add
dec
ret
imul
or
inc
testl
and
sub
jg
aas
mov
es
mov
or
sahf
data16
xchg
popf
in
sbb
push
lcall
add
out
xor
pop
dec
bound
lds
ret
cs
jnp
push
stos
mov
sti
roll
pop
add
sbb
adc
inc
sub
mov
popa
pop
fs
das
and
and
dec
sub
sbb
push
inc
mov
insb
cmpsl
sbb
cltd
jne
arpl
mov
push
sahf
sbb
insl
popa
out
fs
inc
pop
mov
xor
mov
sub
jmp
leave
xchg
pop
add
lock
psubusb
pop
cli
jnp
cmp
push
sub
fidivrl
and
in
push
adc
shll
scas
cmc
mov
mov
pop
cs
jp
inc
in
pop
loop
test
aad
fadd
mov
sbb
sub
imul
cmp
ljmp
push
push
outsb
fistps
pop
rcl
ja
fsubrl
cmp
cmc
dec
leave
hlt
icebp
push
xchg
mov
push
mov
stos
ret
aad
lret
test
cmpsb
xchg
dec
aad
mov
jne
cli
sub
out
hlt
int
or
lods
add
mov
lcall
jbe
mov
mov
test
sbb
adc
test
dec
daa
loopne
testl
push
lods
jmp
push
mov
sub
ror
dec
aad
js
loopne
dec
cld
nop
add
push
dec
mov
mov
inc
cli
pushf
mov
inc
xchg
pop
dec
jne
orl
fcmovnu
pop
jmp
cmp
mov
inc
mov
sysenter
orl
sar
stc
or
jmp
insb
xchg
cmp
jbe
or
sub
jecxz
cli
cmp
push
and
repnz
xor
jp
push
jns
pop
dec
cmp
adc
add
inc
sbb
fsub
mov
mov
fnstsw
fcompl
test
cmc
repz
loope
sub
movsl
adc
test
xchg
mov
sub
pop
fldenv
mov
out
pop
push
rcll
rcll
xor
xchg
push
ret
test
pop
jo
and
arpl
rclb
pusha
and
sbb
imul
mov
add
stc
lahf
xor
jg
movsb
fbld
jg
sbb
lods
addr16
adc
mov
and
inc
fadds
ja
push
mov
das
push
jl
popl
push
mov
rorl
sbb
notb
adc
subb
outsl
stos
hlt
jb
push
stos
daa
jmp
hlt
adcl
xchg
mov
jnp
xchg
gs
sub
imul
pushf
test
sti
subl
mov
xchg
jecxz
inc
rorb
adc
in
jbe
xchg
mov
inc
mov
pop
xorb
pop
jecxz
lcall
pop
add
and
daa
add
jle
shl
sbb
loope
pop
rolb
jns
or
or
sub
xor
js
popf
stos
les
xchg
jg
or
pop
pop
pop
or
sar
shl
pop
in
jg
std
fcmovnbe
jnp
mov
push
and
ss
mov
loope
bound
movsb
rcrl
addr16
mov
adc
fnsave
or
or
bound
sub
test
ljmp
daa
scas
pop
cmp
push
sub
mov
movsb
inc
pop
push
mov
mulb
adc
repnz
jg
adc
xor
xchg
xchg
xchg
mov
sub
sbb
mov
and
mov
mov
pushw
cs
or
xor
popa
in
int
xchg
cli
movsb
mov
andb
movsl
hlt
stos
out
test
pop
push
cmp
cwtl
sub
mov
mov
ret
pop
mov
xchg
ja
mov
cmp
inc
popf
add
insl
and
mov
lahf
mov
mov
push
add
mov
and
and
or
dec
lock
sarl
enter
sub
loop
out
xchg
inc
dec
int3
mov
mov
push
mov
rcl
js
and
scas
push
jo
or
les
sub
aad
loopne
mov
scas
stc
mov
pop
pop
or
incb
jmp
push
pop
in
nop
push
mov
jbe
xlat
andps
dec
sbb
or
out
push
arpl
xor
cmpsl
cmp
sbb
popf
das
mov
insl
inc
jg
fwait
lds
and
aas
bound
idivl
outsl
out
fdivl
mov
mov
dec
imul
or
orl
mov
jg
adc
enter
into
or
cli
lods
ljmp
mov
adc
or
adc
jns
push
jno
movsb
jg
mov
or
dec
dec
lods
inc
or
ds
cld
test
cli
in
cmc
pushf
ret
into
aad
scas
orl
shlb
or
pop
cmp
cmp
inc
jg
imul
lds
xor
cmpsl
cltd
int3
push
jnp
andl
movsl
ficoml
aaa
cltd
bnd
stos
in
and
push
mov
and
mov
outsl
fsub
adc
and
imul
or
test
popf
cs
pop
ljmp
push
leave
lret
mov
movsb
or
adc
jecxz
movsb
and
ret
loopne
stos
mov
movsl
cmovno
rol
gs
mov
out
std
xchg
hlt
mov
jl
sbb
push
cs
or
dec
push
sbb
xlat
daa
xor
sti
hlt
and
hlt
loope
cmp
lcall
xchg
imul
mov
aam
gs
clc
cmp
and
out
and
gs
and
dec
pusha
jne
add
mov
sar
mov
or
jo
cmc
movsl
mov
lds
mov
pop
pop
lea
test
cli
scas
int3
mov
pop
aas
cmpsl
cmp
mov
lahf
cmp
add
xor
mov
inc
mov
ss
xchg
test
mov
inc
gs
fwait
cmp
pushf
pop
sti
cltd
imul
cs
add
pop
fsubl
outsl
adc
es
ja
aaa
jge
dec
adc
push
mov
lcall
mov
mov
into
test
das
std
jnp
and
mov
outsl
jae
mov
lods
imul
adc
adcl
cmp
lret
ss
cmp
fcmovb
pop
dec
es
push
shlb
push
orb
jp
inc
lcall
add
je
testl
push
daa
outsl
imul
movsl
mov
cmpsb
cwtl
xchg
xor
mov
incb
imul
inc
cmp
mov
sbb
daa
std
out
pop
fcoms
sbb
dec
std
divl
arpl
mov
mov
popl
lods
and
mov
enter
dec
int
mov
mov
inc
enter
in
jnp
int3
push
adc
dec
or
nop
scas
adc
out
leave
xor
sbb
pop
das
cmp
idivl
loop
push
jmp
movsl
in
and
loop
xor
pop
jae
out
dec
rorl
add
testl
pop
cmp
scas
cli
fdivr
mov
jg
jecxz
sub
ds
fldl
js
or
pop
xchg
sbb
jo
out
dec
inc
sub
loopne
int3
in
push
and
pslld
aad
addr16
lcall
or
test
ficomps
imul
pop
mov
pop
or
mov
popa
lock
test
dec
out
popa
or
enter
cmc
adc
jb
iret
and
out
inc
mov
sbb
mov
push
outsl
inc
movsl
loopne
dec
in
xor
mov
jbe
mov
and
out
test
push
mov
mulb
xchg
mov
mov
scas
mov
rcll
fcmovbe
or
shll
pop
fdivrp
repz
les
cwtl
mov
jp
test
mov
stc
arpl
in
sahf
inc
and
jmp
sbb
jnp
test
addb
icebp
sub
sbb
stc
and
adc
dec
mov
sbb
out
mov
inc
add
arpl
mov
imul
inc
xor
lods
ljmp
lds
std
ficompl
jnp
xchg
push
idiv
dec
repnz
stos
push
aas
pusha
dec
xor
adc
scas
cmpsl
add
cmc
mov
mov
sub
jb
dec
cmp
lea
xor
pop
gs
fists
dec
jge
in
aad
pop
mov
cli
es
lcall
adc
pop
xchg
jbe
mov
rol
add
sub
push
xchg
cmpsb
adcl
xchg
push
lret
rolb
mov
cmp
inc
pop
ss
xor
cmp
sub
sbb
mov
mov
int
xchg
arpl
jmp
popf
dec
mov
ds
mov
xor
mov
es
cltd
nop
int3
test
mov
cmp
or
mov
cmp
mov
cmp
add
mov
xchg
xchg
movsb
push
pop
aad
xor
in
sub
shll
push
pushf
push
loopne
aas
insb
out
push
sub
outsb
pop
imul
fsubs
rorb
pop
inc
xor
jl
insl
mov
jecxz
lahf
inc
mov
test
pop
cld
push
adc
test
mov
scas
xor
sahf
jecxz
inc
xor
push
lret
ljmp
fwait
dec
dec
jmp
mov
xchg
addr16
stc
ljmp
and
xchg
lods
inc
inc
mov
pop
mov
dec
xchg
test
jge
jnp
addr16
mov
addr16
mov
jb
pop
mov
xchg
out
xor
dec
jl
mov
icebp
pop
stc
repz
in
daa
je
mov
std
jns
push
sub
xor
adc
jne
cmc
mov
and
mov
cmp
orl
jmp
mov
loope
cmp
idivb
mov
or
sbb
jne
push
add
int3
jno
aaa
add
jne
dec
or
jno
sub
out
lods
and
negb
dec
pop
mov
jns
sbb
rcrl
mov
out
and
push
stos
adcb
jp
pop
popf
adc
xor
jbe
mov
xor
xor
mov
and
cmp
icebp
mov
pushf
stc
mov
mov
addb
and
lcall
jl
fs
mov
dec
insl
daa
mov
jle
insl
aad
lea
fldenv
adc
shll
fsubp
jb
xchg
adc
mov
fldcw
repz
add
sub
rcl
enter
daa
pushf
and
pop
cmp
int
xchg
push
xchg
addb
frstpm(287
mov
lods
leave
cmc
jae
aaa
cmpsb
xor
jns
js
andl
jne
inc
insl
adc
into
cli
sub
cmp
pop
mov
lods
push
sbb
lea
aad
pop
repz
test
cmp
cmp
xchg
lock
int3
imul
inc
jmp
mov
push
jae
dec
jbe
adc
add
pusha
jnp
and
test
jns
jne
jbe
add
inc
adc
pop
cmpsb
scas
push
jo
sbb
fidivl
movsl
fldcw
fisttpl
xchg
mov
xor
sub
cmp
fsubl
jl
and
ljmp
or
rcrl
adc
or
mov
sbb
jae
test
sub
ja
pop
jnp
xor
mov
mov
inc
mov
ret
jno
jbe
mov
cmc
pop
icebp
xlat
inc
xchg
mov
xchg
lods
and
clc
mov
mov
pop
into
jp
xor
call
fildll
dec
add
adc
and
jae
pop
sbb
out
mov
cmp
lock
jns
mov
pop
and
js
mov
or
jmp
or
mov
and
popa
popa
ljmp
dec
ja
push
add
test
js
and
sahf
push
adc
jle
out
jns
cs
movsl
mov
scas
add
leave
pop
testl
sub
into
cmp
cmp
mov
outsl
xor
dec
sub
popa
mov
ror
aam
ret
push
inc
push
mov
xchg
movsl
pop
in
cld
insb
das
je
je
leave
test
push
fsubr
pushf
mov
shlb
adc
sub
dec
sub
ret
rclb
out
popa
daa
sub
xchg
cmp
sar
add
xchg
push
push
fcom
xlat
data16
mov
lea
lahf
mov
imul
roll
cwtl
jo
or
in
xchg
loop
dec
fwait
enter
fldcw
sbb
mov
adc
push
pop
les
mov
stos
lret
inc
ret
icebp
xchg
xchg
lret
cld
push
mov
push
inc
adc
fdivs
subl
jl
cmpsb
popf
jl
and
fcoms
shl
add
rorb
and
mov
adc
mov
add
pop
sub
add
imul
jno
test
add
in
mov
xlat
das
dec
push
mov
call
inc
adc
stos
or
clc
aas
cmp
imul
pusha
in
cmp
shrl
cmp
cs
andb
dec
adc
clc
add
outsb
adc
daa
push
mov
es
out
cld
inc
mov
dec
ret
jmp
sbb
add
repz
pusha
test
daa
sbb
jnp
mov
sub
mov
testl
sti
aas
or
push
mulb
inc
fsubrs
test
out
rol
adc
lods
xchg
fcompl
push
jbe
fs
stos
lret
xor
popa
mov
or
push
icebp
or
mov
addl
xorb
daa
dec
lds
dec
icebp
push
fisubrs
mov
add
ficomps
int3
mov
jl
jge
pop
xor
lcall
pop
mov
adc
dec
sub
push
pushf
cmp
xchg
insb
rcll
shl
jo
pushf
cmp
lods
cwtd
sub
ret
xor
incb
cmpsb
sahf
sbb
loope
ror
in
push
jmp
mov
mov
add
xchg
loopne
movsl
hlt
ja
adc
out
lret
repnz
les
pop
inc
subb
js
inc
pop
fst
sbb
sub
fwait
xor
sti
ror
in
sti
icebp
mov
jg
add
or
or
mov
imul
aam
sti
mov
and
loop
push
loop
out
jge
jae
test
sub
inc
rolb
je
repnz
in
cmp
add
daa
xchg
xor
mov
int3
inc
or
sbb
mov
push
fistpl
das
and
sbb
and
lock
add
fnsave
sar
mov
adc
push
and
xor
pushw
mov
dec
add
lcall
jne
mov
push
lods
jp
cmp
push
repnz
mov
jg
arpl
xchg
mov
sahf
inc
or
and
out
leave
test
in
push
xchg
sbb
mov
lret
xchg
cmp
cltd
push
sti
sub
pushf
nop
push
leave
xchg
aad
out
popf
pop
pop
xor
lods
in
mov
jle
jmp
jno
cmp
repnz
dec
inc
leave
insb
movsl
out
push
mov
jp
cmpsl
mov
xchg
fidivl
lock
imul
leave
inc
sbb
out
repnz
loopne
and
adcl
pop
cwtl
mov
mov
inc
push
mov
shlb
sti
pop
lods
sarl
out
aam
adcl
test
dec
in
xchg
pop
sbb
daa
mov
cli
push
mov
lcall
mov
stos
test
pop
push
das
lret
popa
sbb
movsb
jns
xor
iret
sub
in
cltd
push
dec
or
xchg
aam
add
sbbl
shl
sbb
push
idiv
sahf
dec
imul
cmp
shr
fnstsw
inc
or
cmp
lds
das
xchg
ror
clc
push
in
push
lods
in
xor
vcvttps2dq
jg
pop
jg
push
jp
or
jl
cmp
mov
arpl
push
push
jge
ds
pop
xchg
out
xchg
dec
or
stc
dec
dec
pop
in
jne
stos
mov
dec
dec
adc
enter
sete
mov
pop
ret
mov
cmp
and
outsl
testb
mov
add
xor
in
imull
aad
and
pop
movsb
lret
xorb
aaa
push
bound
mov
int
ljmp
pop
push
cs
outsl
int
push
cmp
inc
sti
push
mov
cmp
jno
pop
jno
push
push
or
rcl
dec
xchg
sub
jbe
cs
in
sbb
dec
shll
push
int3
std
xchg
scas
insb
loope
stc
ret
stos
sbb
pop
lods
pop
xchg
movsl
daa
sbb
movsb
sti
mov
mov
lods
sti
cmpsl
stc
insl
shlb
rclb
jb
add
test
icebp
nop
cmp
repnz
jmp
mov
in
loopne
add
cmp
roll
mov
sub
add
or
jecxz
pop
in
jp
out
test
push
inc
sbb
pusha
add
insb
mov
mov
pop
mov
fs
xchg
int
rcrl
insb
ljmp
pop
cwtl
lods
ds
push
ficompl
fcmovnb
lea
daa
lret
stos
jecxz
push
idivb
xor
add
dec
pop
movsb
mov
rclb
scas
nop
fs
in
mov
or
sbb
mov
es
jnp
xlat
fdivs
sbb
jl
mov
sbb
lcall
cvttps2pi
xchg
pop
pusha
cmp
into
xchg
cld
sbb
add
mov
sbb
mov
xchg
ret
icebp
xchg
jbe
push
js
lahf
les
mov
ret
out
pop
movsb
ss
aaa
ret
mov
js
add
push
sub
fwait
push
cld
out
pop
je
dec
mov
idivl
lds
cmpsb
mov
xchg
xchg
push
negb
outsl
imul
aam
mov
lcall
pushf
or
push
aaa
out
jnp
mov
cmc
jbe
hlt
mov
mov
mov
cmp
jp
cmp
xchg
push
repnz
fiaddl
xlat
dec
push
leave
cs
sbb
pop
in
cmp
push
and
cmc
loope
jg
pop
inc
push
mov
xlat
pop
jne
cmp
mov
addb
and
fcmovb
fisubrl
lds
in
pop
sub
pop
mov
mov
ss
pop
add
std
push
mov
mov
mov
cmpl
loopne
incb
mov
sub
iret
xor
push
addl
and
adc
or
push
dec
sbb
cmpsl
jmp
nop
insl
mov
mov
not
mov
xchg
loope
mov
cltd
and
add
push
inc
jl
scas
xlat
inc
dec
sub
mov
into
push
push
push
xchg
lods
cmp
idiv
mov
ss
and
in
cmp
fs
cmpsl
hlt
mov
call
in
jl
jle
adc
lret
jge
test
jo
add
cld
jecxz
test
aaa
mov
addr16
push
hlt
mov
jp
push
push
push
mov
ss
inc
fidivrs
push
inc
pushf
int3
dec
mov
jecxz
notl
inc
xor
jbe
sub
cmp
jp
clc
mov
cmp
in
mov
adc
rcr
mov
iret
clc
cmp
jae
pop
rcll
es
sbb
jmp
cmpb
xor
aad
xchg
xor
insb
xlat
pushf
inc
in
mov
jbe
insb
fwait
test
fcoml
dec
ret
loopne
push
dec
add
call
movsb
out
push
les
mov
pop
std
testb
scas
mov
xchg
aad
mov
daa
adc
jne
xor
lahf
push
dec
xor
ds
sbb
or
mov
and
pop
fisttpll
mov
call
shl
dec
dec
jmp
jl
fwait
call
xor
sub
imul
sbb
or
cli
xor
out
stos
push
push
xchg
subl
jbe
rclb
and
add
lret
sub
loop
push
or
lret
fstpt
lds
add
xchg
pop
pop
push
sub
dec
cli
cmpb
pop
add
pop
mov
hlt
clc
push
inc
mov
pop
mov
mov
add
adc
and
pusha
and
sbb
mov
jmp
mov
jb
ret
aas
out
and
jg
pop
pop
dec
mov
scas
cmp
xchg
addl
out
xor
sar
mov
push
fs
sub
or
mov
arpl
pop
push
outsl
shl
xchg
in
pusha
xor
jp
sub
out
jae
xor
in
cmp
cmp
clc
inc
and
xchg
cmp
cmp
jmp
and
loope
jle
and
inc
in
call
inc
xor
arpl
loop
add
aad
hlt
inc
shl
inc
xchg
push
add
pop
inc
fisubrl
xorb
push
xorl
pushf
int
mov
pop
pop
fimuls
jnp
mov
mov
add
ljmp
pop
mov
test
imul
inc
and
imul
add
gs
sub
sbbb
clc
mov
insb
addr16
inc
repnz
std
mov
fisttpl
sub
in
cmp
addl
movsl
lret
dec
lds
imul
xor
inc
test
fisttpl
addr16
add
mov
loop
xchg
shll
cs
ret
lcall
or
xchg
sbb
loope
arpl
les
popl
inc
shrb
mov
add
pusha
ffreep
repz
fildll
outsl
mul
ret
ror
mov
iret
fisttpl
daa
sbb
das
pop
loope
ret
out
mov
stos
and
xor
mov
xchg
sbbl
idivl
cmc
xlat
adc
mov
enter
xchg
sub
push
pop
lock
and
ret
or
push
inc
and
jp
or
insb
dec
repnz
and
jns
sbb
cmp
lods
shr
pop
push
dec
mov
fnstsw
sahf
fnstcw
pop
or
lret
into
jg
mov
data16
jge
call
cmp
dec
cmp
mov
mov
jb
jo
inc
frstor
ret
es
loopne
insb
or
xchg
pop
inc
cmc
das
adc
inc
inc
ljmp
ret
pusha
fnstcw
jns
andl
jge
sub
andl
mov
adc
dec
pop
addr16
or
inc
push
mov
jns
int
or
fists
js
scas
jge
scas
andb
mov
adc
mov
push
xchg
aas
mov
pusha
and
xor
inc
clc
in
aas
pop
fdiv
pop
adc
in
cmp
imul
inc
insl
test
xchg
sahf
lcall
push
and
inc
xor
sbb
or
imulb
dec
loop
jg
ret
pop
aaa
daa
popa
mov
or
stos
mov
cmp
scas
adc
adcb
sub
cmp
dec
inc
scas
jg
push
in
xor
sbb
pop
sub
cmp
jnp
xchg
sub
mov
mov
adc
push
jno
out
mov
gs
scas
outsl
sbb
push
insl
add
pop
mov
sbb
mov
out
push
sub
pop
xchg
push
mov
push
repz
push
movd
mov
iret
jl
outsl
cmp
in
cmpsl
rcrb
mov
pop
or
mov
adc
pop
jns
cmp
sbb
or
test
pop
out
xor
std
jp
cwtl
movsl
push
jg
lock
ficompl
imul
inc
stc
adc
xchg
push
repz
test
push
js
and
jecxz
push
into
aas
inc
in
out
lock
push
aam
dec
pop
add
xor
push
pop
sbb
inc
adc
subl
mov
or
adc
loopne
mov
test
and
imul
test
popa
inc
jge
test
loop
or
xchg
outsl
rorl
inc
aas
or
and
dec
sbb
shlb
icebp
mov
rol
fisubrs
lds
cmp
idivb
or
fcomip
cmp
add
lret
adcl
in
jo
pop
adc
fdivrl
sbb
iret
pop
scas
jecxz
push
mov
pop
pusha
dec
insb
into
xor
pop
cs
mov
fdivr
dec
sti
movsb
scas
sbb
pop
nop
mov
adc
sahf
jo
jmpw
add
xchg
inc
xchg
mov
mov
roll
popf
dec
lahf
mov
shlb
lret
fisttps
push
into
pop
jle
sti
xchg
dec
jns
mov
or
push
fs
adc
add
xor
xor
jmp
mov
repnz
mov
in
adc
sbb
dec
jae
sub
jp
lcall
test
mov
or
pop
xchg
mov
inc
jno
je
int3
add
mov
pop
mov
sub
aam
push
sbb
mov
pop
pop
mov
mov
mov
scas
ret
lods
xchg
daa
fisubl
dec
push
xchg
in
sbb
mov
fcompl
sahf
cmp
fdivr
cmp
dec
xchg
cmpl
jge
addr16
pop
mov
mov
fisttpll
loop
popf
inc
scas
pop
pusha
and
jle
inc
xchg
sub
arpl
jne
jecxz
adc
cmp
inc
rorl
ss
cmp
mov
fs
inc
gs
adc
mov
xchg
sbb
enter
in
push
outsl
pushf
sub
test
pusha
or
dec
or
mov
cmp
mov
imul
jl
hlt
jb
inc
pop
ja
std
out
or
int3
sbb
cmp
xor
out
in
mov
xchg
ss
dec
jmp
rcl
add
dec
cmpl
mov
movsb
hlt
stos
scas
jne
push
fs
out
pop
jo
sub
add
jb
mov
xor
jp
mov
dec
insb
xabort
scas
movsl
fs
inc
arpl
push
jno
cmpsl
test
mov
push
sub
push
push
psrlw
repz
cltd
cld
jge
add
pushf
stos
sbb
lahf
xor
fdivl
out
mov
jecxz
push
shl
and
mov
cltd
cmp
arpl
addl
std
stos
and
lcall
in
mov
stos
sbb
iret
mov
out
mov
int
push
ret
xor
cwtl
mov
pushf
dec
xchg
dec
mov
push
add
aas
arpl
mov
and
or
outsb
mov
pop
ret
movsb
lea
out
in
loop
dec
mov
cmpsl
mov
jno
shlb
rcrb
test
pop
sbb
movsl
jb
jg
lret
test
pop
add
mov
xor
pop
out
add
sub
dec
out
jg
xor
cmpsb
mov
and
xchg
daa
sub
pop
mov
cltd
sub
inc
push
rorb
mov
xor
fs
and
lea
lods
dec
push
or
inc
or
push
mov
mov
dec
rcll
push
popa
shll
in
pop
movsb
mull
lods
in
cltd
mov
out
xorb
icebp
stc
cmc
cs
outsl
mov
dec
sub
mov
or
or
data16
scas
sub
jo
mov
std
sbb
ss
jg
fcoms
stc
mov
push
or
pop
pushf
popl
mov
daa
out
jge
sbbl
sbb
push
or
xlat
jle
pushl
mov
leave
mov
mov
cmp
int3
push
push
jno
rorl
sbb
in
stos
stos
cli
sbb
loope
push
push
pop
dec
inc
cmp
inc
stc
adc
adc
int3
hlt
cmp
fbstp
dec
jmp
jge
mov
lret
iret
push
push
fldl
js
cmp
jno
divl
nop
out
pusha
inc
jnp
push
push
ljmp
cwtl
mov
add
jns
add
ficomps
push
loop
xor
les
inc
shll
cmp
cmpsl
adc
cld
xor
aaa
fisttpll
sub
dec
movsb
push
stos
jbe
adc
mov
adcl
ret
ss
xchg
stc
pusha
fwait
sbbb
xchg
jns
mov
int3
add
jmp
or
ret
push
sbb
stos
nop
sbb
sti
sbb
cmp
sub
rcrl
or
and
mov
mov
aaa
call
xchg
insb
mov
xor
dec
fdivl
or
sahf
mov
dec
cmc
imul
pop
aad
sbb
shlb
pusha
add
pop
clc
push
sarb
sbb
xchg
cld
mov
sub
xor
push
and
jle
jl
sbb
sti
add
push
int
xor
imul
aad
push
adc
cltd
test
sbb
loopne
in
enter
dec
adc
movsb
fidivrl
jmp
clc
sbb
add
into
cmp
mov
pop
sbb
sbb
int
pop
movb
pop
ret
das
pushf
clc
xchg
push
dec
enter
enter
sbb
xorl
or
lret
xchg
outsl
mov
sub
jno
fsubs
mov
int
test
cmp
jnp
test
fmul
jb
lcall
pop
xor
inc
out
sahf
jns
sbb
push
cltd
loopne
ljmp
es
adc
mov
scas
lods
andb
xchg
push
push
add
xor
adc
stos
adc
or
dec
mov
xchg
ficoms
leave
sbb
jle
cltd
js
lods
mov
iret
cmpsl
xor
sbb
or
push
sub
cmp
inc
pop
sbb
cltd
push
scas
xor
stos
or
xchg
mov
or
or
fistpl
out
std
insb
lahf
and
clc
sbb
pop
or
mov
js
stos
mulb
outsb
in
aam
jbe
push
imul
cld
lods
jmp
shrb
add
popa
mov
mov
popf
sub
mov
daa
loop
ljmp
dec
pusha
loop
or
dec
xchg
movsl
ret
jae
out
and
cmpsl
jmp
leave
mov
mov
xor
mov
mov
cmp
cltd
je
lcall
int
rorb
and
or
je
dec
jae
sarl
jbe
subb
mov
insb
xor
pop
jne
jns
mov
shrl
scas
cmp
mov
daa
jns
in
mov
and
or
pop
out
mov
icebp
jne
movsl
mov
bound
test
lahf
and
ret
les
rcrb
add
xchg
insl
sub
in
fs
xchg
mov
jnp
out
add
add
sub
fnstcw
aas
mov
lds
mov
fs
mov
mov
push
movb
scas
adc
std
std
dec
mov
cmpsb
jecxz
test
ja
adc
bound
add
cld
lcall
insl
and
mov
adc
andb
jp
and
mov
xlat
clc
std
pop
sub
es
stos
int
mov
js
mov
xlat
ljmp
cmp
sbb
sbb
das
fmul
cli
or
push
fmull
lret
adc
lea
or
js
test
mov
inc
cmc
aaa
inc
arpl
mov
mov
jb
dec
adc
test
xor
jb
xor
inc
inc
in
mov
cmpsl
push
imul
add
or
add
push
or
nop
mov
sqrtps
ds
lret
xchg
add
sbb
jo
xor
push
jne
popf
push
fldt
and
movsl
in
insb
sub
out
imul
cld
int3
xor
shll
shl
repz
push
xchg
xor
shl
jno
push
xchg
mov
mov
mov
lahf
fstpt
jnp
cmpsb
dec
adc
inc
jns
pop
pop
out
stos
imul
js
pop
imul
shlb
out
or
insb
xor
push
ljmp
xchg
outsl
out
mov
sti
cmp
das
mov
mov
xchg
inc
jmp
dec
gs
insl
rorl
pop
es
xor
mov
inc
push
push
or
dec
rcll
fadds
outsl
mull
es
lret
cld
nop
xchg
mov
xlat
in
inc
pop
jmp
pop
cmp
je
cmpl
xchg
sub
mov
stos
ret
mov
jmp
pusha
xchg
dec
add
loop
sub
loopne
fidivl
in
in
cs
jecxz
push
sbb
and
push
push
ret
decb
push
mov
bound
insl
adc
imul
daa
sub
and
out
push
push
and
js
int
imul
push
shrl
sub
mov
js
inc
fildl
sbb
jge
mov
xchg
jo
stos
jp
bound
sar
xor
and
sarb
sub
rcrl
fstpt
cltd
mov
sbb
stos
pop
xor
push
adcb
outsb
int
in
sbb
xor
out
fwait
data16
ffreep
lahf
inc
add
stc
and
pusha
in
je
pop
sbb
shr
bound
jl
lcall
inc
jb
clc
jno
les
push
push
cmpsb
jg
jno
xor
dec
out
jne
jle
mov
and
int3
es
or
scas
jbe
dec
rcrb
and
dec
lret
cwtl
cmpsl
ds
inc
xor
out
inc
or
mov
adc
pop
sbb
outsb
movsl
pop
or
add
js
mov
jg
stc
daa
jae
mov
rcrl
stos
pop
rolb
mov
inc
psubq
test
roll
sub
adc
movsb
in
dec
push
insl
jno
xchg
fidivs
dec
ds
mov
jae
adc
xor
or
loope
std
inc
insl
cmp
imul
mov
sbb
cmpsb
icebp
in
jns
lret
mov
add
push
jge
in
lods
mov
mov
sahf
ds
pop
add
sub
mov
jmp
test
xchg
pop
pop
movsl
pop
stc
fsub
cmp
xchg
pop
arpl
mov
mov
repz
cmp
sub
cli
icebp
pop
pop
xchg
push
xor
push
scas
aad
dec
sti
lret
pushf
xchg
dec
pusha
mov
arpl
test
push
mov
sbb
xchg
mov
aas
jg
jb
jg
shl
bswap
push
push
into
mov
xor
mov
inc
jge
cmp
xor
push
jns
sub
or
add
add
adcl
adc
pop
mov
cltd
push
add
jo
mov
lret
pop
insb
sub
push
test
push
imul
pop
and
mov
xlat
inc
shrl
test
repz
loopne
cli
cli
stos
insl
lock
stos
dec
dec
ja
cmp
add
test
shlb
andb
incl
xor
cmp
mov
add
push
cs
insl
sbb
lock
lret
mov
sbb
inc
mov
adc
inc
jns
xchg
jnp
mov
call
mov
cmp
js
enter
cmp
sub
adc
xor
jge
shr
sub
nop
mov
inc
jo
mov
mov
cmp
popa
in
fnstsw
xchg
inc
call
dec
lret
pop
ss
pusha
sti
xchg
push
jecxz
mov
xchg
cmp
nop
add
cmpsb
mov
test
adc
and
lret
adc
popf
pop
std
jns
pop
fistpll
iret
out
mov
loopne
int3
popa
push
or
std
lea
xlat
out
in
pop
scas
nop
and
jbe
pop
nop
clc
mov
cmp
cmp
out
sbb
mov
push
jp
in
dec
loopne
cmpb
ret
push
jbe
fnstcw
ja
lret
sarb
dec
popf
dec
addl
add
hlt
push
dec
mov
pop
and
mov
prefetch
daa
fwait
pop
ret
cmp
icebp
xchg
jbe
je
test
jne
sbb
into
pop
pop
ficompl
loop
mov
push
push
repnz
or
sub
pop
iret
dec
iret
stc
and
loop
xor
mov
jmp
mov
outsb
jle
into
jl
mov
mov
push
push
in
testb
dec
xchg
or
add
and
jb
push
scas
iret
and
mov
pop
sti
leave
and
arpl
fimuls
xchg
push
aam
ret
cmp
clc
xor
aam
in
push
cmc
push
jmp
jo
je
testl
mov
outsl
dec
xor
sbb
loopne
jp
sbb
cmpsl
sbb
aam
dec
lods
mov
outsb
jbe
testl
fmuls
pop
mov
pushf
adc
lret
jle
xchg
daa
imul
addr16
sbb
push
mov
repz
shll
or
push
cwtl
mov
dec
lock
pop
pop
imul
gs
pop
adc
popa
cmc
call
jnp
add
or
mov
push
daa
push
mov
mov
sbb
imul
sahf
clc
or
out
sbb
pop
xor
sub
enter
rcrl
xchg
enter
pop
mov
pop
jo
insb
xchg
out
cltd
push
negb
test
inc
inc
fwait
stos
adc
fwait
jae
adc
dec
imul
push
mov
inc
jge
mov
dec
ds
sarb
lret
sbb
and
adc
or
rcl
incl
in
outsl
shll
xor
jo
push
jg
inc
fidivrl
and
ja
in
jae
mov
sub
cmp
lock
xor
dec
sub
or
stos
cmp
aaa
adc
test
add
push
jge
std
inc
loop
lcall
loopne
jnp
xchg
mov
push
mov
xor
daa
ror
jg
jo
movsl
dec
fsubrs
sub
push
add
and
push
cltd
mov
inc
bound
test
icebp
cmp
xrelease
and
notb
test
sub
repnz
icebp
dec
xchg
add
pop
jmp
mov
dec
and
clc
into
xor
fs
int3
mov
and
adc
push
jbe
aas
jecxz
out
dec
lock
repnz
xchg
xchg
in
pop
imul
sbb
jo
push
inc
mov
aad
push
dec
aam
mov
ja
cmp
dec
mov
out
test
test
iret
test
pop
mov
fistps
push
jp
jl
les
jo
mov
and
fcmovb
dec
lahf
aam
rol
jmp
jmp
push
mov
cli
push
jp
push
fdiv
and
in
jmp
jne
mov
add
mov
arpl
and
xchg
bnd
sti
mov
rclb
inc
push
movsl
orb
mov
or
cmpsl
adc
movsl
test
xor
push
mov
and
jno
xchg
sbb
cmc
mul
or
daa
fnstcw
sub
lret
pop
int3
leave
jmp
fcomps
ret
xchg
or
mov
adc
bound
or
test
sbb
ss
mov
dec
aad
fistps
es
es
inc
add
and
arpl
shlb
out
in
lret
inc
jg
fbld
shll
adc
bound
mov
ja
mov
je
jg
pop
and
bswap
dec
xchg
lds
pop
cld
dec
and
repnz
fmull
loopne
dec
sbb
and
push
ljmp
call
fs
cmp
fiaddl
lock
sub
out
test
sbb
xor
stos
push
repz
pop
cmpsl
or
add
jnp
sahf
outsl
lods
pop
popf
push
test
sub
movsb
sbb
ja
es
mov
push
mov
xchg
lds
sbb
mov
adc
inc
pop
lods
popf
pop
inc
mov
jmp
jecxz
cmpsb
xor
jbe
fdivrs
pop
fwait
lcall
out
or
js
ret
jmp
scas
mov
jle
repz
icebp
xchg
repz
sbb
int3
mov
jbe
stos
cmc
movsb
xor
push
sbb
or
mov
scas
gs
dec
mov
or
test
pusha
shll
mov
jbe
call
in
sbb
cld
lds
adc
mov
data16
sti
sub
icebp
pop
cmc
cmc
jae
leave
sub
paddb
testl
enter
insl
or
adc
mov
push
mov
xchg
lods
lcall
xchg
dec
sbb
pop
sarb
inc
aas
rorb
sbbl
mov
jmp
mov
xor
xorl
mov
jecxz
and
jb
cmpsl
mov
in
mov
outsb
repz
inc
cld
adc
mov
jle
loope
inc
sbb
cmpsl
sbb
sub
adc
in
repnz
or
jmp
hlt
outsl
mov
push
mov
ljmp
or
popf
lock
or
sub
cltd
mov
mov
ss
mov
lret
notl
testb
jno
mov
sbbl
push
jb
inc
xchg
mov
xchg
iret
and
lock
stos
ss
fisubl
cmc
mov
inc
sti
pop
adc
push
outsw
icebp
lahf
data16
sahf
inc
cmpsb
dec
jne
mov
dec
add
pop
shrb
add
cltd
fsts
out
mov
lds
sbb
inc
pop
or
sub
cli
mov
push
lar
jmp
push
adc
or
sahf
cltd
leave
or
std
cltd
std
ror
add
subb
sub
jecxz
lret
xchg
inc
leave
icebp
cli
jbe
fwait
xchg
pop
mov
repz
loope
sbb
mov
dec
push
ret
adc
jae
mov
mov
adc
aam
inc
and
int
sbb
dec
ret
dec
mov
and
inc
pop
fstps
mov
xlat
mov
cwtl
loope
dec
icebp
pop
out
ds
pop
cs
jmp
jmp
jecxz
daa
pop
xchg
imul
pusha
arpl
cld
jl
out
cmp
stos
lods
inc
jp
push
shll
cmc
dec
addb
push
jnp
les
adc
fwait
mov
imul
pop
mov
add
mov
pop
dec
mov
cmp
jae
add
jns
xchg
mov
mov
cmpsb
leave
and
scas
cld
dec
cltd
and
clc
fwait
inc
fidivs
add
xchg
inc
and
je
icebp
xchg
ja
add
daa
dec
fsub
outsb
sbb
int
call
test
push
std
in
lea
inc
xchg
fs
mulb
leave
mov
cmp
fsubrl
repnz
in
mov
aam
fsts
and
outsb
lret
outsl
dec
jae
push
xchg
test
xchg
in
lret
add
movsl
sbb
ss
lret
call
dec
or
ljmp
cmc
aas
mov
push
orb
arpl
cmpsl
dec
fsubrp
std
lods
fs
mov
sbbb
pop
out
fistl
daa
jne
repz
scas
jge
mov
stc
jbe
or
lods
xor
adc
pop
add
or
and
cltd
push
out
jno
xchg
mov
lea
lahf
jno
cmpsl
cwtl
push
clc
push
cmp
sub
orl
jg
push
xchg
xchg
and
fists
mov
cmpsb
bound
or
mov
mov
cltd
mov
or
add
sahf
or
pop
sub
adc
inc
mov
or
mull
aam
call
xchg
jnp
dec
ss
mov
cmp
stos
pop
scas
dec
inc
enter
push
iret
mov
stc
arpl
std
shrb
mov
aam
lock
mov
mov
lret
adc
xor
outsb
pusha
add
xchg
cmp
mov
enter
outsl
mov
test
popa
inc
dec
xor
lods
and
xorl
mov
jge
pushf
movsl
xchg
movsl
xlat
nop
mov
aam
insl
or
aam
daa
mov
jb
mov
jmp
xor
dec
loope
es
mov
and
mov
mov
test
xchg
mov
cs
ret
adc
test
lahf
psubw
mov
sub
cmp
dec
cmp
xlat
lock
sub
jmp
xchg
xlat
push
dec
xor
dec
xchg
insb
inc
adc
dec
cmp
and
xor
adc
pop
cmp
scas
add
mov
mov
dec
pop
dec
cltd
movsl
xchg
rorl
ljmp
mov
jl
inc
adc
xchg
cmp
sbb
push
hlt
jae
les
mov
mov
mov
movsl
cmc
lcall
loope
sbb
inc
sub
xor
mov
fbstp
add
dec
imul
inc
clc
adc
sub
sahf
cmpsb
cmp
test
sarl
popa
fstpt
mov
lret
or
rcll
mov
enter
in
pop
and
fstpl
sbb
roll
mov
adc
jl
sub
iret
adc
ret
and
dec
lods
int3
lds
sbb
or
lret
ret
mov
mov
out
enter
hlt
in
sbb
push
or
inc
fwait
ja
loope
pop
shr
add
lds
outsb
sub
dec
repz
push
popf
jle
adc
scas
cmp
pop
and
xor
test
cmpl
inc
push
fwait
out
outsl
inc
dec
int
sub
or
inc
sar
pop
mull
daa
je
fdivl
imul
cmp
xor
pop
imul
je
outsl
push
cmpsl
in
pop
pop
xchg
mov
out
into
mov
dec
imul
and
jg
add
jmp
loope
lret
movhlps
push
inc
call
aas
jne
sub
sbb
leave
cli
bound
insl
rorl
bound
push
fstps
fildll
enter
enter
int3
jbe
and
mov
jp
imul
mov
pop
push
cmpsb
xor
popa
inc
jns
xchg
sbb
in
jle
cs
xlat
xchg
cltd
add
sbb
ss
fwait
das
cmp
pop
mov
pop
fidivrl
xchg
bound
jne
mov
mov
xor
cld
clc
jge
mov
xchg
das
neg
loope
inc
xchg
jge
pop
or
push
jge
xor
pop
jns
push
into
popf
loopne
xchg
mov
adc
arpl
xchg
lds
sbb
fst
out
loope
pop
mov
mov
aaa
mov
outsb
dec
mov
adc
sub
notb
pop
add
and
push
mov
mov
push
fs
rcrl
adc
and
movsb
fiaddl
mov
sub
ds
repz
mov
fsub
addr16
into
aam
xchg
in
add
jp
inc
jmp
jbe
stos
jno
sub
xchg
mov
subl
mov
mov
dec
jle
outsl
arpl
sub
add
mov
lahf
mov
mov
pop
mov
jb
dec
ljmp
xlat
fbld
sbb
test
or
push
sbb
sub
jno
imul
xchg
xor
int
sub
loop
bound
mov
shl
test
jp
shll
cmp
repz
mov
loope
sbbb
das
or
mov
cmpsl
xchg
mov
pop
pop
push
cwtl
adc
push
add
leave
or
sub
jae
inc
xchg
sub
fwait
or
adc
xchg
lret
testb
inc
mov
je
mov
in
pop
loope
pop
aas
movsl
mov
dec
cltd
adcl
xlat
sahf
mov
mov
adc
rcrl
mov
sti
fnop
adc
and
and
jnp
dec
mov
adc
pop
movsb
das
mov
jmp
adc
es
cs
xchg
stc
outsl
mov
inc
and
inc
xchg
pop
insb
out
ret
jns
movb
cmp
popf
pop
sub
dec
arpl
push
orl
fwait
movlps
icebp
pop
push
push
push
adc
stc
fst
rcr
dec
cltd
mov
lea
mov
mov
out
mov
xchg
bound
mov
xchg
lock
bound
into
das
xor
dec
add
sarb
clc
xor
data16
jns
leave
adc
js
cwtl
mov
mov
mov
dec
lret
fiadds
test
pusha
mov
cmp
mov
sub
rcll
dec
jecxz
cmp
ja
sbb
negb
iret
cwtl
out
fimull
cmpl
mov
sub
enter
and
xor
int3
sub
lods
or
aaa
ret
or
jmp
jecxz
adcl
data16
mov
jns
or
fdivrl
xchg
iret
popf
outsl
mov
pop
cs
mov
dec
iret
adc
frstor
stc
inc
cs
sbb
mov
mov
xor
sahf
out
into
insl
call
xor
scas
fs
push
scas
mov
fs
and
sbb
out
cs
nop
testb
lea
and
insl
cmpsb
hlt
lods
cmp
adc
and
xchg
sub
adc
aad
testb
out
inc
pop
mov
push
clc
jno
clc
mov
push
cli
cwtl
inc
imul
mov
out
push
fidivrl
sub
pop
outsb
add
sbb
pop
bound
pop
leave
pop
mov
cmp
sub
mov
in
cmp
test
stos
mov
aaa
mov
or
bound
jae
dec
leave
push
jl
jp
sar
push
cmpsl
fdivrp
mov
lret
add
cmp
std
scas
cwtl
jecxz
sub
imul
push
dec
nop
sbb
loop
repnz
in
outsl
outsl
dec
mov
mov
mov
sub
shll
outsb
and
jmp
adc
jae
sbb
jmp
and
jb
jo
sbb
and
xor
imull
mov
jns
sub
loopne
jb
xchg
dec
add
int
jle
repz
jmp
pop
sbb
mov
int
movsl
xor
outsl
ja
shll
dec
pop
pop
mov
aas
daa
push
inc
call
ror
fcmovne
jp
aam
fmul
push
cmp
add
rorl
test
jno
mov
add
xchg
push
push
jae
fisttpl
add
jmp
sub
pop
loope
jl
int
pop
sarl
call
fisubl
push
or
xchg
cli
shrl
insl
jmp
or
aaa
fnstsw
xchg
popf
stos
out
cltd
mov
xchg
mov
inc
mov
mov
jl
sub
sub
pushf
mov
mov
sub
push
adc
fadd
or
sahf
jo
arpl
adc
add
mov
leave
aad
or
xchg
fmuls
imul
cli
gs
das
stos
mov
pop
daa
adc
insl
fsubs
lods
test
mov
xchg
adc
lcall
jmp
adc
stc
mov
pop
cmp
xor
dec
aas
lea
xchg
int
cmpsl
xor
enter
test
rcrb
push
jns
in
data16
mov
orb
test
mov
pop
bound
repz
scas
and
loopne
das
mov
arpl
lcall
sub
data16
mov
out
jno
es
loope
mov
sub
mov
pop
aad
dec
sub
jmp
test
jle
or
cmpsb
xchg
scas
adcl
movsb
out
repz
lods
sub
push
xor
mov
xchg
imul
adc
and
sbb
int
mov
jno
ja
and
push
ror
jmp
dec
out
aas
into
or
sbb
enter
stos
or
xor
adc
sbb
lret
in
in
sbb
and
lret
call
xlat
cmp
cmc
test
mov
popf
or
xchg
adc
mov
dec
add
nop
pop
push
lods
pop
add
aam
mul
fdivr
imul
mov
xchg
call
das
xchg
addr16
adc
bound
jg
pusha
mov
jmp
inc
pop
iret
sbb
jecxz
data16
dec
repnz
mov
int3
mov
mov
inc
mov
xchg
adc
in
arpl
decl
aaa
fdivrp
jl
aam
mov
xchg
loop
and
sub
nop
pop
cmp
add
ret
inc
int
mov
jne
hlt
and
test
mov
test
pop
mulb
bound
dec
sbb
mov
fdivrl
sarb
xor
sub
nop
clc
imul
int
shrl
push
sub
stos
addb
bound
sbb
out
in
or
cmp
mov
sti
push
nop
lcall
ja
and
push
out
sbb
pop
lock
std
mov
dec
jle
inc
or
xchg
xor
mov
rorb
dec
jne
ja
pop
in
test
lea
out
int
sub
xor
mov
popa
push
in
cmpl
js
inc
sub
int
mov
fistpll
xchg
mov
stos
mov
xchg
repnz
push
add
mov
outsb
in
add
cwtl
mov
cltd
xchg
push
int
shl
test
test
bound
mov
push
clc
mov
push
pusha
xor
mov
out
push
inc
and
ja
jns
xchg
mov
fs
shl
xor
sub
cmp
push
push
mov
sub
clc
dec
or
pop
das
or
pop
xor
mov
cmp
mov
mov
cmpsb
outsb
addr16
fnstcw
mov
jbe
or
mov
leave
in
mov
in
mov
lcall
stc
and
cs
pushl
xor
insl
das
jb
push
mov
lock
push
and
mov
aas
sub
shll
jmp
adc
cmp
fldl
cmc
or
mov
xorb
roll
inc
sbb
imul
mov
xor
xchg
adc
movsb
adc
pop
mov
movsb
lret
sub
ss
add
xchg
std
adc
movsb
std
cld
imull
mov
clc
sahf
xchg
mov
stc
pop
pusha
xchg
aad
fnstcw
dec
mov
lods
jg
and
shl
fcmovbe
call
adc
stc
cwtl
mov
mov
sbb
mov
loop
loope
and
jae
sbb
iret
aad
cltd
push
mov
dec
mov
push
test
or
push
popa
jmp
adc
sbb
jecxz
in
mov
fsubrl
inc
push
dec
xor
push
insl
out
bound
cmp
xchg
sbb
shlb
pop
test
jno
out
testb
jbe
mov
icebp
add
adc
mov
hlt
sub
neg
lds
or
sub
xchg
stos
repnz
idivl
js
cmp
add
stos
fucom
xchg
in
pop
sbb
xchg
jb
dec
push
mov
das
pop
xchg
jae
pushf
dec
push
mov
sub
push
mov
or
repz
or
bound
adc
xor
es
xchg
aas
sbb
std
shlb
ljmp
inc
push
xchg
sbb
mov
testl
sbb
and
insl
xchg
pushf
ja
cwtl
and
push
jg
shll
pusha
lods
jae
jne
mov
clc
cmp
sbb
ss
push
mov
pop
mov
sahf
add
or
imul
fstl
test
xchg
dec
iret
inc
and
jecxz
mov
scas
testb
cld
mov
or
sub
out
insl
ljmp
testb
clc
lock
addr16
mov
add
shll
pusha
int3
and
out
mov
inc
cmpsl
and
bsr
mov
push
xlat
movsb
cwtl
lret
pop
fbstp
fiaddl
or
out
ss
jne
dec
cmp
sbb
pop
loope
jmp
xor
and
popf
mov
cmp
inc
xorb
stos
add
pop
sarb
jno
mov
mov
sti
push
mov
add
aaa
imul
mov
enter
dec
pop
mov
mov
es
xchg
adc
adc
push
push
ficomps
push
repz
adcb
sub
jp
pop
cmpsb
and
pop
ss
inc
pusha
jne
stc
inc
cmpsb
aaa
cmp
stos
add
mov
push
loope
leave
cmpsl
mov
std
ret
inc
pop
ja
cmp
cmp
mov
shrb
mov
arpl
lret
mov
dec
mov
shlb
add
in
rcrb
movsl
pop
hlt
test
mov
mov
xor
lods
mov
stos
ljmp
nop
cmpsb
jmp
xlat
test
push
sarl
dec
mov
pop
into
jnp
sahf
lods
pop
sub
rcr
xchg
pop
ss
popa
bnd
sbb
xor
or
out
or
in
out
push
pusha
sbb
dec
fcomip
cmp
lret
icebp
mov
sbb
aaa
rol
pop
imul
sti
scas
out
sbb
shrb
leave
push
add
adc
mov
push
cltd
ja
add
subb
test
ja
xchg
mov
lret
shll
cs
mov
push
xor
inc
sub
inc
fdivrs
rclb
xlat
mov
rorl
push
aad
push
lcall
insl
cltd
dec
fwait
lds
cmc
add
pop
push
push
gs
aad
lea
test
mov
adc
jg
mov
lcall
loopne
cmpsb
inc
in
mov
mov
outsl
pop
icebp
rcrb
sbbl
xchg
jle
mov
int3
insb
mov
xor
mulb
popa
mov
cmp
pop
nop
xlat
ja
mov
mov
add
in
mov
movsl
data16
rcll
outsb
xchg
orl
cmp
ret
inc
push
push
sub
jle
pushf
push
push
pop
sub
bound
add
movsl
in
mov
xchg
cmpsl
out
cmp
aam
cmp
xchg
xchg
hlt
mov
pusha
in
sti
add
mov
lds
adc
das
add
in
fists
pop
arpl
xchg
scas
and
cltd
fsts
popf
cmp
inc
mov
mov
enter
or
sub
adc
mov
cmpl
sub
mov
xlat
in
rol
push
adc
add
dec
aas
cmp
test
xchg
repnz
pop
mov
sahf
jmp
rcrb
lret
les
sub
call
lea
sub
sti
lea
jb
jae
out
outsl
jne
cli
insb
cmp
das
leave
xchg
jg
imul
xchg
in
mov
cwtl
cmp
pop
inc
dec
test
lahf
in
xchg
iret
or
adc
xor
shlb
and
call
push
iret
xor
mov
les
dec
xchg
loope
lahf
cmpsb
es
mov
or
int3
push
or
ja
dec
mov
aam
cmp
rol
idivl
jmp
std
loope
mov
and
fadd
or
stos
cmp
cmp
inc
lock
ss
mulb
pop
mov
push
xchg
fdivrs
or
outsb
cmp
inc
inc
cwtl
jge
sti
flds
push
addr16
sbb
lods
mov
cmp
testb
xchg
sub
push
mov
or
iret
mov
xchg
jl
mov
mov
or
subb
jnp
mov
xchg
and
scas
ret
push
push
sbb
js
xchg
pop
pop
pop
arpl
sbb
cli
mov
bound
mov
xor
dec
xchg
mov
inc
sbb
pop
mov
jo
movsb
ja
inc
or
and
inc
pushf
aaa
inc
test
rolb
cmp
or
imulb
mov
sbb
or
loop
nop
and
movsl
cld
in
adc
rorl
sbb
jne
jo
cmp
lret
loopne
test
add
pop
fstp
mov
inc
mov
mov
imul
orb
sbb
aas
and
push
cmp
sbb
nop
pop
or
mov
mov
aam
dec
sahf
pop
je
mov
and
mov
mov
dec
loop
movsl
iret
in
jl
cmp
push
cs
sbb
mov
and
xchg
fnstenv
xor
xor
sbb
pop
xor
xchg
pop
ljmp
pop
jno
scas
mov
xor
shll
insb
xor
mov
dec
mov
dec
mov
out
popa
xchg
jl
jnp
jmp
xor
mov
std
pop
sub
ljmp
mov
mov
add
js
lods
repnz
dec
movsl
roll
mov
repz
jo
push
icebp
pop
test
sbb
inc
push
ljmp
scas
popa
aam
jnp
mov
nop
push
cmp
mov
ficoml
pushf
or
aam
loop
cld
daa
shll
push
repnz
popa
xchg
fnstcw
je
stos
push
lods
xor
iret
push
lods
fs
jno
repnz
jo
insl
mov
mov
call
push
xchg
and
and
cmp
push
mov
movlhps
jno
into
jno
inc
fstpl
mov
in
jno
pusha
mov
mov
lret
out
shlb
fstpt
inc
add
sub
sbb
mov
rolb
adc
jmp
nop
out
sti
inc
ret
hlt
cmpsb
insb
aad
hlt
sti
cmp
dec
fcmove
mov
pop
adc
addr16
xchg
adc
movsb
fs
imul
jmp
lahf
movaps
dec
push
shrb
lret
sbb
and
sbb
inc
xchg
in
insb
les
mov
jg
int3
cmp
xor
les
in
or
xor
mov
pop
or
gs
cmpsb
add
push
xor
cmpb
and
test
xchg
cmp
lret
add
outsb
cmc
scas
outsl
into
dec
lock
outsb
fnstsw
aaa
ja
adc
mov
outsl
jno
mov
sub
pop
or
push
sub
fistps
jle
push
notl
repnz
loope
pop
inc
add
bound
mov
out
std
adc
lret
push
push
add
pop
inc
int3
xchg
sbb
lret
push
cs
lahf
jne
ret
adc
movsb
mov
push
rclb
gs
mov
cmp
or
pusha
inc
lock
xchg
mov
adc
pop
lods
rclb
outsb
cltd
repz
pop
or
fcomip
and
dec
lods
out
pop
jb
cmp
shlb
push
mov
xchg
jmp
push
mov
insl
sbb
and
in
jecxz
mov
xor
fdivrp
mov
push
std
aas
andl
xchg
fimuls
stos
neg
out
in
pop
scas
aaa
mov
lea
add
push
outsb
jmp
inc
mov
or
sub
and
inc
pop
jg
scas
imul
movsl
mov
mov
cmpsl
lret
cmpb
addr16
and
mov
inc
sub
adc
push
repnz
gs
sub
cmpsb
adc
rcll
mov
call
aad
sub
rcrb
xor
cwtl
jle
negl
scas
pop
jle
mov
and
add
fiadds
rol
sub
push
lcall
adc
lahf
jae
pushf
fdivr
and
gs
jp
mov
mov
arpl
adc
mov
stos
adc
cmp
repz
lods
stos
jp
ja
and
inc
jb
pop
pop
mov
aas
mov
sarb
sbb
mov
sub
stc
xor
adc
cmpsb
cmpl
jne
decl
sbb
cld
mov
out
frstor
lods
dec
inc
scas
push
sub
xor
add
enter
adc
orl
jge
jno
mov
and
imul
ja
stos
pop
movb
xchg
pop
or
or
es
ds
nop
jo
pop
dec
xchg
lret
push
mov
loope
mov
xor
subb
shrl
add
ror
mov
inc
cmp
adc
mov
jl
cmpsb
or
cmp
or
jb
pop
and
mov
xor
xor
xchg
aas
les
xor
insl
xor
push
scas
es
aaa
inc
push
sbb
popa
xchg
sub
aas
mov
inc
gs
cmp
int3
xchg
cltd
sub
in
test
cmp
xchg
popf
andl
jb
data16
orl
xchg
dec
jbe
jmp
orb
xor
adc
or
rcl
xor
mov
cld
mov
clc
push
ds
test
ficoms
mov
inc
push
and
mov
iret
lds
cmp
gs
ss
scas
and
into
or
ljmp
test
sahf
push
les
mov
not
iret
pop
pop
mov
ret
sahf
xchg
sbb
jl
in
mov
dec
call
into
aam
test
xor
aam
mov
mov
mov
jge
dec
sbb
xor
xor
jne
arpl
je
stos
jo
mov
push
dec
or
and
push
mov
sub
sarb
jmp
shrl
mov
inc
adc
sub
in
push
bound
xchg
jbe
inc
stos
mov
push
repnz
cmpsb
leave
add
addb
ret
dec
cmp
insl
in
pop
call
iret
xchg
in
or
sbb
lods
mov
dec
cmp
fwait
rcll
or
insl
gs
and
push
jl
xchg
sbb
push
inc
mov
lret
cmpsl
push
xchg
gs
push
pop
pop
cmp
jg
inc
sub
repnz
call
fists
fisttpl
mov
dec
ret
test
xchg
ss
in
mov
cmp
sub
jmp
mov
mov
mov
jne
fstl
pop
call
cli
sarl
or
xor
push
into
jl
mov
pop
aam
mov
xlat
ja
lods
div
insb
jge
push
xor
loop
jae
xchg
outsl
adc
aad
and
les
js
inc
testl
cmp
jae
sub
and
push
and
jle
pop
sbb
pop
sub
jbe
adc
loopne
ret
push
cmc
scas
adc
mov
mulps
jecxz
loope
loope
jne
jnp
insl
out
int
dec
mov
jg
jg
push
mov
nop
jge
xor
pop
xlat
jns
lcall
int3
inc
mov
cwtl
and
cmp
sar
pop
hlt
repz
inc
mov
push
clc
xlat
xlat
aas
addr16
inc
cs
mov
mov
add
in
je
out
mov
das
fdivl
hlt
ja
dec
call
mov
jae
mov
ret
or
aas
cmp
xchg
pop
out
mov
add
pusha
push
cltd
cmpsb
lret
mov
push
mov
outsl
and
cli
cmpsl
arpl
div
scas
data16
lret
fldl
stos
fists
push
cmp
test
imul
icebp
loopne
adc
cmp
xor
pusha
and
push
jne
test
mov
rcr
rorb
sar
and
insl
divl
jle
mov
repnz
dec
das
cltd
sti
pusha
je
rcrb
fnstsw
sbb
fisttps
xor
repnz
lea
je
mov
or
cmp
xor
mov
pop
adc
pop
cmp
add
ret
xchg
rolb
sub
mov
nop
imul
ret
add
dec
cld
sbbb
dec
cmp
inc
and
ds
adc
je
out
repnz
push
loop
fisttpll
jl
push
pinsrw
test
mov
cmp
int3
lds
insl
or
dec
rcrb
xor
xor
leave
aam
mov
lcall
insb
pop
jae
push
gs
inc
push
aas
test
fcoms
imul
cmpsl
es
aaa
xchg
aas
ljmp
push
sbb
fnstsw
xchg
mov
dec
je
icebp
dec
ss
je
test
xor
repnz
inc
add
mov
mov
dec
or
adc
shl
jg
and
popf
xchg
mov
enter
mov
in
jp
int3
data16
inc
inc
jecxz
cwtl
and
xchg
push
push
and
pusha
cli
add
push
xchg
xchg
xchg
xlat
aam
loop
adc
scas
inc
loopne
mov
test
or
pop
adc
stos
xchg
adc
sub
pop
nop
cmp
xchg
push
dec
ret
or
mov
in
mov
add
fbstp
cltd
push
out
xchg
adc
imul
rorb
jg
icebp
pop
sub
lahf
cmpsl
out
filds
dec
xchg
jmp
mov
sub
jg
mov
or
and
out
push
call
movsb
sbb
dec
sub
popf
xbegin
aas
test
outsb
out
adc
sahf
fwait
bound
mov
test
and
gs
push
pop
sbb
aad
aaa
enter
adc
jge
inc
xor
fisubrs
inc
adc
xor
lahf
ss
inc
jl
push
loopne
into
mov
scas
lock
dec
in
pop
outsl
pop
cmpb
clc
xchg
gs
sti
cmc
mov
add
add
sarb
push
data16
leave
rcll
int
lahf
adc
adc
shll
mov
cmp
leave
lret
add
mov
pop
cmpsb
or
and
int
pop
sbb
cmp
or
popf
imul
pop
stos
or
popa
pop
ficoml
push
cmp
inc
sbb
sbb
pop
insb
push
mov
inc
adc
push
in
repz
je
push
test
mov
andb
push
sub
mov
cmpsl
push
inc
cmpsb
dec
pop
push
inc
lcall
add
jno
popf
add
pop
sub
stos
out
jns
mov
pop
mov
in
xchg
adc
int3
mov
mov
arpl
pusha
push
sub
mov
and
mov
movsb
mov
icebp
mov
in
jle
mov
xor
movsb
mov
jbe
ja
sub
add
adc
lcall
imul
inc
and
and
jecxz
lret
cld
mov
idivb
xlat
mov
xchg
incl
loope
inc
adc
mov
cmp
lret
lcall
push
xchg
iret
lea
mov
adc
pop
lret
xor
add
pop
lahf
or
xorl
xchg
insl
fnstsw
inc
inc
cmpsl
jb
nop
sub
je
adc
xchg
mov
arpl
repz
sub
pop
or
stc
cmp
pop
and
xchg
dec
mov
xchg
test
add
cltd
sbb
aam
aaa
clc
es
adc
fnstcw
cs
iret
push
inc
xchg
aaa
jbe
pop
aad
enter
sbb
push
pop
das
lods
xchg
adc
std
mov
sub
out
push
add
or
adc
cmp
jns
xchg
mov
mov
jo
enter
rcpps
loopne
enter
orb
outsl
bound
xchg
les
comiss
ljmp
push
les
out
sbb
aas
aam
cmp
mov
or
jbe
add
mov
jns
rorb
pushf
pop
subl
aas
and
les
cmp
outsb
call
repz
movsb
std
mov
mov
fisubrl
lds
mov
ret
idivb
in
lds
dec
cmpsb
or
shr
jno
add
or
lods
adc
popf
mov
enter
cmp
dec
stc
into
xchg
mov
ja
xchg
lods
add
pop
andl
dec
pop
hlt
dec
ja
dec
int
stos
xor
xchg
cltd
xchg
int3
ret
sbb
lcall
insb
bound
mov
mov
push
dec
fcoml
shll
and
xchg
xchg
add
add
cmp
scas
inc
xchg
inc
sti
inc
dec
inc
insb
fs
jo
into
repnz
imul
aaa
test
loop
push
fwait
push
aad
xchg
jb
in
jnp
jbe
add
mov
and
shlb
out
arpl
xor
jg
ret
into
add
inc
sti
jns
dec
mov
mov
outsb
decb
outsl
stos
or
pop
pusha
push
pop
xor
pushf
xchg
iret
fwait
push
lods
adc
dec
fdivr
inc
cmp
jg
or
mov
sbb
adc
ret
std
lds
jns
dec
lea
test
xchg
push
ja
ret
and
or
mov
mov
mov
xchg
jno
mov
push
or
lret
pop
and
fcoms
sub
cmpsb
outsb
sub
sti
mov
push
cmc
bound
push
jmp
inc
stc
sub
cmp
outsl
bnd
dec
in
mov
push
lcall
cld
clc
cmp
repz
or
mov
pop
cmp
mov
jns
fnstenv
cld
mulb
flds
addr16
dec
push
or
in
sub
cmpsl
mov
lock
bound
xor
or
mov
cmp
jmp
shrb
sub
jmp
lds
cmp
dec
je
or
push
add
mov
push
dec
dec
inc
insb
lea
jns
ss
les
in
stos
jb
cmp
xor
ret
jne
fiaddl
ret
icebp
mov
in
adc
push
dec
mov
pop
fldenv
dec
push
add
lahf
jmp
adcl
adc
outsl
orl
out
xor
xchg
les
push
ja
xor
jge
lret
data16
push
aam
dec
add
cs
aam
xchg
and
push
ret
fiadds
scas
push
cmp
add
stos
enter
mov
loope
and
mov
mov
leave
lret
pop
aad
push
push
addb
xlat
jbe
cmp
push
or
sti
jnp
sub
ds
inc
mov
dec
loop
lret
cli
and
push
xorl
xor
and
outsl
jbe
push
sub
push
sub
adc
sbb
jl
stos
jge,pt
mov
sub
pop
jmp
push
dec
fcmovb
adc
mov
pop
cli
gs
sahf
dec
mov
xor
jmp
and
cmpl
mov
scas
mov
cmp
divl
fcompl
ret
add
dec
and
and
xor
dec
orb
cs
out
popa
rcrl
pop
nop
jmp
cmp
mov
sbb
dec
jo
cmp
add
xchg
outsl
mov
popf
inc
jne
fwait
lods
lea
adc
mov
jnp
sarl
insl
lock
gs
and
and
sarl
mov
cld
cmc
jmp
gs
inc
push
addb
lea
dec
xor
mov
push
inc
xchg
mov
js
pusha
add
ja
int
sbb
xchg
dec
and
daa
mov
daa
dec
mov
add
mov
gs
push
inc
jno
data16
test
imul
in
jb
add
filds
inc
mov
loop
mov
mov
pop
iret
pop
mov
inc
add
xor
test
add
out
dec
cmc
push
dec
rcrl
imul
push
in
inc
lock
scas
andb
mov
idivl
int
sub
pop
jmp
mov
jb
mov
pop
into
sbb
xlat
int3
xchg
jne
mov
pop
lret
jns
push
or
mov
cli
mov
sub
sub
sub
pop
push
jb
gs
push
add
aad
jo
dec
cmp
shlb
lcall
sbb
pop
sub
fisttpl
jne
into
out
pop
xor
add
ja
out
sub
cmp
push
lods
mov
mov
scas
cmp
push
cwtl
je
sub
push
pushf
pop
jp
scas
lods
js
xchg
hlt
dec
mov
inc
enter
xor
pop
sub
mov
or
sub
adc
dec
inc
mov
js
or
xchg
xor
pop
flds
sub
and
out
arpl
out
sti
mov
out
ret
sbb
mov
push
in
not
jb
lods
sbb
or
xor
mov
roll
pop
cmp
fistpll
sar
lods
int
clc
fs
add
lcall
cmp
test
mov
mov
cli
push
fadd
ljmp
xor
ret
outsl
test
int
push
cmc
shlb
aad
stos
push
cmp
pop
out
sbb
js
sbb
imul
dec
lret
pop
in
lods
sar
test
aam
or
pushf
sbb
inc
and
dec
ja
and
gs
test
add
cwtl
dec
test
mov
jmp
xchg
or
mov
xor
in
arpl
mov
xchg
xor
and
push
add
shr
sarl
pop
add
fldcw
jge
pop
lahf
push
dec
push
mov
inc
inc
outsb
and
jne
imul
or
pop
inc
pop
cmpsl
mov
rclb
push
inc
xor
inc
pop
pop
mov
stos
and
push
push
movsl
enter
fs
aad
mov
in
xchg
scas
fisttps
cmpsb
or
adc
push
sub
push
imul
sbb
and
push
dec
mov
push
in
or
inc
vfnmsub132ss
adc
mov
or
xor
sbb
lahf
adc
jmp
nop
push
mov
cld
sub
ret
or
ss
adc
xchg
icebp
mov
pop
jno
icebp
jecxz
xchg
xlat
push
sbb
lahf
jecxz
mov
inc
movsl
xchg
mov
dec
sub
repnz
pop
sub
rorb
sbb
and
jg
push
push
arpl
xor
add
dec
mov
repnz
inc
push
fsts
push
xchg
and
dec
pop
fwait
je
mov
sbb
fmull
lds
mov
adc
sahf
dec
push
je
mov
lods
dec
shrb
fcmovnb
sub
mov
out
sbb
in
jp
cltd
sub
and
test
adc
jecxz
stos
jp
mov
xchg
rcl
mov
cmp
rorl
inc
sbb
mov
lock
mov
jg
cmp
aam
shlb
push
pusha
dec
mov
cmp
xor
sub
sti
insl
add
jne
pop
scas
pop
std
outsl
aam
push
adcl
int3
clc
sub
jno
rol
test
arpl
into
out
div
in
cli
mov
and
int
jb
sbb
mov
add
insl
mov
push
sbb
daa
cmpsl
jae
mov
ss
mov
sbb
inc
push
mov
sti
pop
mov
sub
sbb
loopne
rclb
aas
inc
or
enter
cmp
pushf
add
pop
es
mov
mov
and
stos
xchg
psadbw
fstpl
inc
ret
sahf
stos
jne
es
and
cmp
mov
sub
push
lret
inc
and
sbb
mov
sub
rolb
fstpl
jecxz
std
mov
aas
das
out
lods
cld
cmp
xor
sbb
push
out
andl
xchg
scas
dec
push
lcall
inc
aaa
sbb
lret
mov
aas
pop
lcall
xchg
mov
test
xlat
cltd
popa
xor
fisubs
out
mov
int
movsb
pop
mov
jnp
mov
mov
or
jns
rol
lods
inc
sbb
pop
jno
pop
pop
inc
mov
test
jmp
test
xchg
xor
mov
pop
add
xchg
dec
sbb
and
xor
adc
cmp
cld
das
fstpt
ljmp
in
js
dec
stc
xchg
jbe
sar
add
xor
adc
or
mov
lahf
push
push
dec
cmpsl
mov
popl
pop
xchg
mov
push
xor
or
inc
push
cmpsl
cmpsl
mov
pop
mov
jp
inc
inc
lods
ljmp
icebp
mov
sub
or
sarb
jmp
mov
jmp
out
xchg
dec
dec
stc
fisttps
sahf
iret
push
gs
mov
hlt
add
es
xor
nop
pop
pop
pop
enter
ja
dec
adcb
cmp
push
in
fisubrl
push
push
xchg
or
outsl
inc
popf
lcall
imul
push
sub
shrl
repz
pushf
mov
int
int3
dec
inc
sub
mov
jmp
mov
add
mov
in
aad
je
fbstp
rcll
shlb
mov
sbbb
inc
test
cmpsl
mov
lods
add
mov
adc
dec
jb
cmp
cmp
lock
lret
mov
push
cmp
filds
jnp
inc
loop
jae
pop
jmp
aaa
ret
addr16
mov
cmp
mov
pop
jecxz
sbb
decl
xchg
mov
insb
ljmp
mov
xchg
or
fdivrl
sbb
jno
test
insb
push
nop
and
mov
negb
and
jge
popa
mov
loop
jne
insb
inc
mov
xchg
pop
mov
mov
bound
testl
dec
cld
loopne
adc
jo
imul
idiv
pop
imul
out
adc
in
test
test
sti
push
andl
mov
nop
lods
and
stos
imul
inc
out
cld
push
into
mov
nop
lret
in
js
repz
test
lcall
push
lods
test
daa
repnz
insl
or
add
mov
inc
mov
inc
mov
cmpsl
in
lahf
xlat
mov
jns
ret
out
lods
lret
sub
inc
rcrb
movsb
inc
arpl
fdivrl
pop
addr16
lcall
repnz
mov
xor
ret
fists
dec
mov
add
sub
pop
bound
or
xchg
andl
ss
dec
cmp
xor
push
xchg
xor
sub
in
jp
push
pop
insb
arpl
stos
lret
adc
mov
mov
sub
cltd
or
movsb
rcrl
aas
jno
lds
jb
mov
cmp
add
xor
xor
cmp
fldt
lods
jbe
mov
mov
mov
lret
dec
adc
popa
dec
and
pop
cmp
sub
pop
dec
xchg
aas
leave
or
mov
ret
inc
mov
mov
push
adc
int3
mov
pop
add
iret
testb
mov
add
jge
and
popf
dec
in
and
stc
xchg
jb
sub
xor
jmp
jnp
cli
test
mov
aam
stc
je
arpl
pop
lods
pushf
mov
sti
mov
popf
js
int
cmp
mov
pop
movsl
imul
popa
xor
sub
push
cmp
outsl
mov
xchg
popl
leave
cmp
and
lea
dec
repz
inc
push
inc
popa
xchg
push
mov
jns
sbb
jne
pop
mov
out
jle
fwait
scas
inc
push
das
mov
push
fwait
lcall
aam
lret
mov
push
mov
mov
sbb
in
shll
push
sub
xor
push
inc
jle
insb
cmp
mov
js
in
jmpw
xor
cmpsb
out
test
arpl
lods
mov
sub
mov
and
stc
inc
push
mov
add
xchg
pop
mov
pop
mov
adc
push
lods
sarl
mov
sub
and
push
jns
popf
mov
aaa
xchg
mov
inc
dec
hlt
iret
mov
cli
imul
sub
pop
lcall
mov
add
out
sti
inc
jle
lret
les
mov
inc
add
ficoms
cltd
mov
gs
xchg
inc
fcomps
adc
cmp
inc
je
in
cmpsl
pop
mov
repz
cmp
in
and
xor
inc
pop
arpl
sbb
lock
cmp
outsb
rorb
mov
cmpb
icebp
adc
push
ret
lods
xchg
add
aas
fisttps
xor
out
xchg
pushf
cmp
lcall
nop
shlb
push
stos
pop
sbb
xchg
clc
pop
les
shrb
add
jmp
or
dec
mov
mov
push
mov
dec
rcrl
or
lds
push
enter
cmp
repz
xor
push
in
push
add
jno
pop
mov
inc
jne
cmpl
cmp
mov
xor
cmp
clc
jo
xor
pop
dec
test
out
push
fstpt
jne
mov
cmp
mov
mov
pop
jae
jle
add
xchg
add
mov
inc
in
aas
ljmp
outsl
push
cmp
mov
mov
xchg
xchg
adc
pushf
jl
popa
xlat
addr16
pop
out
ss
mov
leave
adc
fnsave
jle
iret
rcl
rorb
ret
or
icebp
into
inc
imul
pop
mov
cld
push
lock
popf
insb
mov
sbb
in
xor
imul
xorb
loope
daa
mov
int3
repnz
push
pop
dec
dec
xchg
pslld
sti
pop
jae
push
jmp
xor
mov
shl
adc
mov
and
addr16
push
mov
mov
ss
dec
test
lret
pop
test
mov
add
pop
jae
mov
cmp
es
jmp
cli
dec
int3
mov
xchg
loopne
cmp
test
sbbl
or
iret
js
dec
nop
stos
xchg
or
fisubl
ffree
call
rcl
mov
push
or
mulb
inc
dec
inc
out
or
shlb
push
sbb
adc
lods
gs
push
dec
and
dec
ja
adc
adc
mov
pop
js
push
xor
cli
sbb
sbb
aaa
fnsave
imul
shll
xor
or
jb
flds
cmpsl
or
mov
mov
or
or
addl
push
push
adc
outsb
xor
or
xor
jbe
adc
sahf
jne
ret
jecxz
mov
lds
shlb
lahf
xorl
outsl
jp
ret
lcall
xchg
cli
pop
sub
and
pop
cmp
sbb
inc
fnstenv
fs
divl
ljmp
or
adc
push
adc
out
nop
jb
dec
int
sbb
cmp
scas
fistl
imul
mov
pop
pop
sbb
mov
das
pushf
pop
sbb
cs
popa
and
inc
adc
mov
sub
sbb
sub
sub
lods
adc
xchg
mov
sub
sarl
xchg
rorb
sbb
jl
aad
insl
mov
push
nop
sub
pop
pop
mov
adcl
jmp
popf
mov
iret
sbb
shll
lahf
and
fnstenv
adc
cmpsl
stos
mov
gs
sbb
inc
imul
out
dec
xor
mov
jle
stos
sar
std
push
sahf
adc
sub
pop
fdivr
dec
and
sub
lret
inc
fnstcw
das
enter
fsubr
cmpsl
jns
dec
rcll
icebp
mov
jecxz
lcall
xchg
fs
fnstsw
dec
mov
dec
aam
inc
push
scas
xor
xchg
aas
cmc
adc
pop
lahf
clc
xor
out
sub
jne
mov
into
xor
pop
mov
dec
es
test
inc
adc
add
mov
xchg
stos
sub
xor
xchg
movl
and
ret
xor
popf
add
and
imul
call
hlt
mov
dec
aam
std
stc
pop
aaa
adcb
xchg
add
mov
pop
pop
stos
insb
ret
scas
jne
cltd
fwait
dec
add
cmp
sbb
ss
popa
xchg
or
pushf
push
sub
popa
lock
dec
es
or
in
lahf
sub
push
test
adc
cmp
mov
and
ret
mov
aaa
ljmp
add
loope
scas
push
mov
sbbl
xor
fucomp
mov
scas
cmp
jno
push
ja
xor
pop
xor
pop
clc
pop
subb
rcr
push
or
mov
fbstp
loopne
dec
outsb
clc
sbb
clc
ret
jo
or
adc
jl
xchg
push
test
imul
adc
cwtl
aad
mov
jmp
es
xchg
xchg
sub
es
mov
inc
jne
cmpsl
adcb
mov
pop
leave
inc
pop
arpl
out
xor
pop
xor
out
daa
call
arpl
leave
dec
adc
add
mov
aam
outsl
sbb
jno
mov
mov
loopne
mov
or
xor
xor
xor
dec
lcall
or
lds
bound
fmul
dec
adcl
testl
cld
inc
jmp
sbb
push
ret
je
jo
mov
add
pop
sub
lods
xor
cmpsb
xor
rorl
int
sbb
out
mov
daa
sbb
ret
ds
in
mov
sbb
jmp
jne
sbb
sti
test
ret
jecxz
jl
and
cmp
das
data16
xchg
mov
jmp
dec
jge
lock
and
iret
cltd
and
pop
movsl
dec
adc
xor
pusha
mov
cli
iret
mov
enter
xchg
inc
adc
scas
outsb
xchg
fisttps
xor
mov
stc
lahf
sub
cmp
xchg
ja
ret
mov
clc
std
jo
and
and
push
inc
inc
cmp
mov
push
sub
fstps
js
hlt
and
xor
xchg
push
mov
and
loopne
mov
stc
outsl
mov
mov
mov
mov
leave
mov
dec
fistps
sub
sub
int
fidivrs
cwtl
lods
fwait
pushf
sbb
inc
cmp
jecxz
punpckldq
jne
adc
repz
es
sbb
insb
ds
pop
shlb
dec
sub
sub
lret
adc
pushf
into
and
cmp
add
cmpsb
outsb
popl
es
xchg
lcall
push
or
test
shr
sbb
sti
adc
mov
pop
out
orl
sub
mov
inc
fs
mov
cmp
sbb
jge
mov
in
adc
jge
sahf
lds
pop
sub
push
out
lret
mov
arpl
lret
insl
mov
push
jno
xor
or
sub
stc
cmpb
sbb
leave
push
push
push
scas
ja
in
mov
inc
out
xchg
repnz
int3
repz
mov
pop
icebp
adc
sub
pop
loop
pusha
pop
pushf
into
xchg
xchg
scas
xlat
orb
pop
fcom
outsb
push
jns
cltd
lahf
add
and
pop
mov
xchg
pop
sarl
iret
mov
ss
aad
pop
mov
dec
cld
js
scas
sub
sbb
mov
je
push
test
imul
gs
inc
lock
and
cmpsl
or
adc
ss
lock
or
cmp
test
add
adc
insb
into
jmp
sub
repz
data16
lods
shrb
push
or
ljmp
jp
ret
push
xor
fs
cmpsb
push
and
movsl
xchg
not
mov
test
ret
mov
inc
lahf
in
xor
cmp
or
orb
loope
sub
cmpsb
aaa
mov
call
cmp
jle
push
dec
in
sbb
lods
pop
in
sbb
xor
add
loopne
mov
push
cmp
or
outsl
hlt
and
pop
lahf
pop
cmp
xor
push
popa
mov
data16
mov
pop
jb
add
adc
js
addl
xlat
or
shll
sub
ljmp
cs
int
sub
or
cli
pop
pop
fstp
out
into
sti
push
std
xchg
fsubl
cmp
fdivl
lret
dec
add
lock
mov
inc
pop
cmp
in
xor
push
ljmp
ljmp
aad
push
xor
gs
int
out
mov
addr16
pop
pop
out
pop
data16
sub
add
or
in
pop
xchg
pop
push
sub
xor
test
stc
or
xlat
jne
cmp
lock
je
sbb
bound
fwait
sarl
lcall
pop
pop
mov
xchg
fwait
dec
mov
add
aaa
sbb
fucomp
aas
mov
push
shll
cmp
or
gs
sbb
mov
mov
lods
aad
cs
jno
dec
xor
jnp
cmc
inc
jg
inc
cmp
gs
inc
or
into
lret
popf
mov
cld
loopne
sar
sbb
movsb
stos
rorl
mov
jo
mov
push
push
push
jnp
je
nop
ss
arpl
cld
push
je
fadd
sahf
xor
fiaddl
lcall
imul
push
jle
clc
add
cli
inc
and
adc
pop
test
int3
out
jecxz
mov
inc
sub
lret
bound
xchg
jge
jns
jae
mov
mov
sub
sub
std
or
fst
addr16
pop
push
loope
and
pop
xor
lret
adc
sub
push
xchg
mov
and
adc
or
pop
add
adc
cmp
lret
xchg
push
mov
pop
inc
mov
aam
dec
xchg
mov
ficomps
mov
mov
cmp
cmp
cltd
pop
and
ljmp
test
lds
cltd
pop
sbb
adc
popa
sub
cld
gs
shl
cli
sub
jge
test
in
xchg
mov
and
aam
ficomps
loopne
adc
sbb
pop
jo
ljmp
push
stos
movsb
dec
and
dec
sbbl
ljmp
add
mov
xor
negl
mov
divl
negl
into
mov
rcrl
test
push
js
rorb
fbstp
test
out
mov
fldt
sub
mov
push
das
dec
mov
cld
push
pusha
fnstsw
sbb
jl
je
push
outsb
pop
mov
int
adc
push
mov
lret
in
xchg
fisttpl
aad
dec
test
fiaddl
add
jmp
dec
inc
cmc
mov
test
mulb
pop
das
loopne
push
xor
inc
mov
jge
sbb
xor
adc
push
repnz
cmp
mov
jge
xor
mov
cmpb
push
xchg
mov
dec
push
sbbb
clc
nop
mov
push
fimull
xor
sub
fdivrl
mov
add
ja
xor
sub
mov
xchg
cmp
dec
in
mov
cmp
fldl
je
mov
repnz
sbb
jae
mov
xchg
rorb
or
mov
sub
jmp
dec
pusha
dec
cmp
cmp
test
cli
mov
cmp
outsb
sub
out
inc
fsubl
pop
lods
pop
pop
cs
pop
pop
test
ret
mov
popf
xchg
jnp
mov
add
mov
daa
jp
or
mov
cmp
push
push
into
shl
inc
xchg
cmpsl
jge
jmp
jge
push
clc
mov
movsb
add
mov
push
stos
icebp
out
mov
inc
xor
push
mov
mov
loop
mov
hlt
or
or
sbb
mov
and
pop
gs
dec
in
inc
test
rolb
push
inc
push
pop
xor
sub
mov
imul
sti
stos
mov
popf
pop
cld
xchg
into
mov
adc
imul
lcall
pop
sub
bnd
rcr
push
jne
mov
scas
ficoml
ds
cld
xor
mov
icebp
fnsave
mov
pushf
sbb
jo
and
cwtl
gs
xchg
mov
dec
out
mov
mov
push
xchg
mov
xchg
add
stos
xor
ss
add
pop
inc
pop
or
popa
fs
fndisi(8087
xchg
dec
jge
mov
lea
mov
movsb
call
dec
enter
jo,pn
scas
enter
pop
push
aam
sarl
dec
push
adc
nop
sub
shr
lret
pop
xchg
cld
insl
test
enter
jo
sbb
das
adc
mov
repnz
and
fidivrs
arpl
aam
or
imul
idivl
cwtl
cmp
out
scas
outsb
mov
insb
xchg
sbb
mov
imul
push
adc
popa
pop
ljmp
or
adc
popf
stos
cs
sub
inc
push
push
out
push
aad
and
mov
cltd
call
add
in
cltd
in
movsb
jg
subb
ljmp
cmp
adc
stos
les
faddp
lahf
xchg
push
stos
inc
scas
inc
aam
and
or
lcall
dec
sub
imulb
movsb
fdivrs
pop
dec
aaa
gs
aad
dec
mov
aaa
sub
cli
push
stos
mov
pop
push
mov
xchg
xor
cld
push
lahf
mov
mov
ret
sahf
cld
push
adc
fstps
movsl
cmp
xor
in
clc
fsts
call
pop
pushf
cmp
insb
pop
out
movsb
imul
dec
shrl
push
loope
lcall
jno
cld
xchg
add
hlt
mov
push
fadds
test
cmp
daa
stos
dec
decl
cmp
in
pushf
mov
or
jb
pop
push
sahf
sub
inc
out
fisubl
sbb
pusha
xchg
roll
in
or
sub
aam
in
sbb
mov
lea
jne
dec
shll
xchg
ss
inc
fstpl
stos
push
pop
cmpl
inc
cmp
test
xor
adc
mov
push
outsl
xorl
mov
aam
hlt
dec
mov
pop
dec
cmp
jl
rolb
int3
and
and
shrl
mov
andb
cmp
data16
repnz
inc
das
es
js
mov
push
jne
push
xor
jns
xchg
jge
push
out
adc
fidivs
jbe
sbb
hlt
popa
or
pop
jge
inc
lcall
pop
adc
pop
enter
add
imul
dec
movsl
jecxz
dec
test
cmpsb
xchg
in
sbb
fistl
xchg
xchg
cmp
cmp
subl
add
cwtl
cmp
ss
sub
cmpsb
inc
cli
inc
divl
das
pusha
jno
jmp
cmp
gs
adc
adc
and
or
imul
dec
jge
cmp
inc
in
test
es
rcrb
lret
mov
call
mov
pop
cmp
adc
cmp
cmp
and
mov
jne
xchg
xchg
push
adc
sub
mov
divl
pop
nop
scas
mov
insl
xor
out
dec
loope
pop
cmpl
cmpsl
jecxz
sbb
inc
adc
push
int
and
bound
jg
xor
adc
mov
fdivrl
dec
pusha
cmovns
lahf
jle
inc
add
lds
lcall
out
bound
lock
nop
andl
mov
shl
add
cmp
mov
lret
call
pop
mov
fnsave
sub
repz
pop
sub
push
mov
cmpsb
sub
out
aas
pop
pop
push
ja
addb
sar
in
jp
xor
add
lds
xchg
xor
adc
in
cmp
inc
xor
pop
jo
inc
aaa
fidivrs
subb
jmp
stos
movsb
lahf
repnz
and
inc
mov
popa
gs
testb
push
dec
incl
pop
push
sub
outsb
clc
lret
cmp
inc
test
aad
outsl
adc
mov
pop
sub
inc
sbb
repz
mov
loopne
add
popl
and
inc
mov
cwtl
testb
jo
in
stos
popf
sbb
mov
mov
jg
aam
pop
adc
in
mov
dec
fbstp
push
ljmp
pop
jno
sbb
inc
loope
cmp
in
mov
imul
sbb
lahf
aad
sti
xchg
and
and
insb
push
push
xchg
cwtl
pop
rorl
jo
faddl
imul
pop
xor
adc
shlb
and
pusha
dec
and
sbb
cwtl
inc
lret
lock
cmpsl
inc
jl
fstps
lahf
pop
fimull
outsb
mul
push
lea
cmp
fdivl
xor
sbb
xchg
aas
outsb
fimuls
jo
ret
in
scas
cs
push
jae
int3
test
movlps
cld
shrb
dec
dec
sahf
sub
pusha
xor
mov
ret
loopne
shl
test
fdivl
dec
push
mov
fsubr
and
xchg
ja
inc
test
xor
push
roll
test
mov
cmpsb
rcll
icebp
cmp
out
push
sub
push
mov
xor
out
xchg
pusha
imul
mov
or
jle
pushf
push
aam
jecxz
cltd
inc
jecxz
enter
xor
push
xchg
loopne
cld
pop
sbb
sbb
push
shlb
imul
mov
jmp
mov
or
movsb
mov
and
fxch
add
mov
mov
shlb
sub
popa
leave
testb
out
popa
sbb
rorb
cmp
and
notb
mov
mov
jg
ret
jmp
cmc
data16
rcrl
scas
ljmp
mov
adc
imul
call
or
movsb
js
jl
pop
bound
cmp
sbb
inc
andl
and
jle
jl
insb
outsl
aam
xor
push
and
dec
xchg
mov
xchg
outsb
or
push
pushf
mov
or
and
and
dec
add
adcb
test
mov
xorb
xor
cltd
rcl
adc
jno
lret
sbb
mov
jb
jne
adc
adcl
std
mov
mov
in
cs
popf
stos
int
test
mov
push
jge
mov
push
call
repz
jmp
aam
cmpsl
hlt
addr16
ja
xchg
ret
shl
pop
dec
jmp
adc
cltd
movsl
cmpsb
loope
dec
jl
fsubs
jb
push
test
xchg
xchg
mov
jge
pop
je
notl
sbb
add
and
lret
or
test
cwtl
xchg
cmpsb
call
or
pop
adc
pusha
inc
adc
sbb
sbb
mov
outsl
fisubs
mov
sti
mov
fptan
inc
or
mov
mul
jge
add
xchg
inc
xorb
hlt
xchg
jmp
stos
jno
jl
insl
stos
fidivrl
pusha
push
inc
pop
rcr
mov
lock
add
inc
xor
cmp
mov
mov
or
adc
inc
scas
nop
shr
add
mov
pop
stc
out
aam
pop
roll
mov
mov
xchg
dec
xchg
pop
mov
fmull
lahf
inc
mov
jp
leave
push
lcall
mov
push
in
faddl
cmp
add
or
pop
push
sti
imul
imul
insl
jo
sti
cmc
pusha
push
pop
sub
push
inc
lds
sbb
inc
xchg
idivb
in
stos
mov
pop
sarb
cmp
xor
adc
cmpsl
aas
xor
push
and
mov
cmpsl
into
fstpl
cmp
lcall
jl
testl
fildl
and
sbb
scas
sbb
popl
jmp
in
out
ret
adc
in
lcall
bound
jns
je
and
out
inc
jp
or
sbb
push
sbb
cmc
popf
ja
mov
push
mov
out
gs
mov
jbe
mov
stos
ds
inc
mov
lea
movsl
mov
or
mov
push
imul
cmpsb
add
inc
or
lcall
out
xchg
cmpb
data16
push
push
jl
add
adc
mov
dec
sbbl
popa
mov
ss
repnz
jns
pop
nop
xchg
icebp
mov
jae
push
jl
repnz
pop
mov
mov
xchg
sti
cmpsl
jmp
test
mov
mov
fs
lahf
lock
push
xchg
add
loopne
mov
dec
mov
inc
in
pusha
nop
push
push
jmp
xchg
roll
jl
out
dec
cwtl
divl
pop
xor
jae
aad
pop
data16
xlat
scas
xor
aam
js
fdivl
mov
or
mov
into
push
daa
mov
std
mov
xor
push
mov
sub
imul
jge
pop
push
sbb
push
mov
sub
lea
xchg
mov
jmp
add
jg
pop
fisttpll
mov
add
pusha
push
jp
rorl
push
js
dec
inc
cmp
lods
daa
pop
xor
andl
push
jmp
pop
mov
mov
cmc
mov
pusha
sub
in
fidivs
mov
adc
repz
icebp
jge
and
ret
mov
sti
cmpsl
xor
mov
push
loopne
jge
out
sahf
xchg
adc
lds
or
jmp
push
in
data16
loop
lret
idiv
mov
ret
mov
jp
loope
xor
imul
pop
or
xchg
push
push
insb
or
lods
cmpsl
push
push
testl
mov
dec
or
pop
aas
inc
sbb
push
jmp
sub
rcll
rclb
fnstsw
shrb
sbb
sti
or
iret
jmp
aas
cmp
pushf
jnp
push
lret
movsb
cmp
insl
enter
xchg
stc
xchg
in
testb
pop
pop
sahf
push
fwait
test
inc
frstor
push
xchg
mov
lahf
fdivl
or
bndstx
lock
dec
push
add
xor
add
imul
xor
jl
cmpsb
pop
jnp
add
xchg
stc
cli
mov
loopne
mov
lods
insb
jg
adc
cmp
imul
test
movsl
jp
rcrl
lock
inc
sub
dec
or
lret
jge
and
push
fisttpl
stos
xchg
pop
sub
dec
mov
scas
xor
push
sub
lret
lret
in
xor
ja
imul
shlb
outsb
and
push
adc
push
scas
pop
and
lahf
addb
jge
cmc
mov
and
and
inc
mov
jle
dec
adc
cmpsb
pop
xor
xor
mov
mov
ds
lea
jmp
jae
mov
pusha
adc
stos
cld
pop
sbb
movsb
sub
inc
ljmp
ds
jmp
scas
cmp
cs
and
insl
loope
fisubrs
cmc
mov
sbb
daa
or
clc
xor
xchg
mov
sbb
pop
push
sub
js
stc
inc
jmp
pop
out
mov
dec
push
shll
sub
pop
fs
lahf
test
or
add
daa
loopne
xlat
pop
push
add
adc
xor
push
mov
mov
adc
lcall
push
jne
aam
mov
subl
jnp
fs
sub
xor
pop
mov
iret
cs
mov
ret
pop
mov
push
dec
jae
mov
in
adc
aad
inc
ficoml
repz
sar
popf
into
js
js
xlat
shll
jg
insb
test
xlat
js
cmpb
pop
sti
adc
jno
outsb
push
es
adc
jg
inc
inc
je
cld
xchg
push
aas
mov
add
popf
mov
imul
fcmovnbe
stos
imul
call
and
inc
shr
shl
loop
push
movsl
sbb
dec
xchg
int
sub
push
dec
insl
cwtl
sub
mov
popa
push
stos
lcall
fildll
jnp
test
stc
mov
imul
dec
and
test
sbb
nop
cltd
in
in
or
mov
leave
mov
call
jmp
syscall
test
fwait
clc
mov
frstor
xor
xchg
xlat
adc
pushf
ljmp
push
ret
add
push
loopne
xor
les
pop
push
push
lret
sbb
test
int
shll
pop
and
hlt
sbb
sbb
out
jo
jmp
and
mov
sahf
xor
fld
iret
add
pop
lds
jae
je
push
or
ss
in
push
sbb
fwait
nop
shrb
ljmp
and
divl
inc
in
mov
inc
aam
inc
jecxz
push
ss
les
mov
jne
push
rcr
dec
cmpsl
lret
aas
or
dec
pop
test
inc
dec
jg
int3
sub
jecxz
pop
test
out
jmp
fisttps
jge
ds
xchg
xchg
or
popf
and
lea
mov
idivb
push
adc
lds
dec
stc
cli
lret
pushf
mov
and
mov
adc
jb
lods
or
aad
sahf
mov
cli
jecxz
es
mov
je
in
clc
hlt
push
push
icebp
adc
ret
or
dec
xchg
sbb
test
lea
jnp
enter
cli
scas
std
inc
insl
clc
sahf
pop
rorl
jnp
aas
sti
fisttpl
push
loopne
jae
xor
pop
jae
mov
lret
sub
hlt
test
test
js
push
imul
in
pop
inc
inc
pushf
in
pop
mov
rcll
sub
xlat
cmc
xor
cmp
inc
mov
adc
ljmp
pop
int
mov
dec
jno,pt
in
loop
pushf
and
fs
or
pop
jp
jo
or
cmp
int3
dec
inc
pushf
inc
sarb
lcall
inc
or
imul
aam
pop
add
mov
inc
ljmp
xchg
ss
imul
pop
jle
fsubp
adc
and
sub
leave
push
mov
sti
cltd
sub
mov
jne,pn
out
int3
push
pop
cli
cmp
mov
jne
jg
hlt
jle
or
sahf
xorl
cmc
addl
insb
test
je
hlt
inc
or
fwait
das
add
pushl
lret
or
cmp
dec
addb
xor
push
ja
sbb
fildl
lods
cs
data16
mov
addl
dec
test
es
nop
xor
jg
ret
in
popf
data16
fnstenv
xchg
mull
xchg
js
or
ds
insb
test
in
inc
cmp
pusha
and
adc
into
jns
xchg
sbb
pop
scas
mov
push
mov
insl
or
into
in
mov
enter
xchg
and
add
push
inc
push
cld
mov
out
fiaddl
bound
adc
lea
arpl
pushf
es
icebp
and
iret
fdivs
stc
mov
xlat
pop
inc
std
roll
dec
push
in
mov
xchg
arpl
mov
jp
outsl
sbb
mov
fiadds
xchg
sarb
dec
inc
sub
adc
xor
and
jo
lret
stc
ret
xchg
and
jle
pop
pop
pop
out
xchg
aas
jnp
dec
in
pop
push
xor
or
or
push
test
gs
push
xor
test
or
icebp
loop
into
imul
mov
mov
ret
je
sbb
adcl
pop
lock
push
jge
call
or
dec
cmp
and
pop
faddp
mov
cmp
leave
ss
scas
call
rcrb
push
test
jmp
dec
mov
sbb
out
adc
adc
sbb
cmp
or
sbb
imul
mov
xor
out
aam
ds
cmpb
aad
test
rorl
mov
jae
cmp
mov
inc
imul
adc
adc
push
jge
imul
pusha
or
jp
clc
mov
out
and
fsubl
push
mov
pop
adc
and
rorl
xor
xor
cmp
rorl
adcl
in
std
or
iret
jo
fsubrp
mov
push
xor
fwait
xchg
mov
fs
cmp
dec
xchg
mov
pop
imul
or
loop
jle
fsubrp
push
js
adc
mov
ret
test
pop
sub
xchg
ljmp
cld
cmp
dec
and
sahf
iret
ja,pt
pop
cmp
xchg
ret
jle
imul
mov
xor
inc
ret
imul
ror
stos
sub
into
push
add
and
jns
dec
test
sub
sub
out
pop
scas
arpl
cmp
xlat
popa
cmp
pop
arpl
or
in
inc
jl
add
dec
mov
add
jecxz
sub
stos
dec
cmp
rorl
or
je
lret
lcall
nop
add
int
arpl
out
imul
add
adc
pop
cmp
jle
lcall
pop
add
in
out
lret
or
jbe
test
jmp
ljmp
mov
and
fdivs
push
comiss
int3
inc
lcall
xor
xor
sbb
aas
add
fildl
xor
sub
loope
lahf
imul
stos
add
lods
leave
lcall
sti
sub
jl
pop
push
jae
dec
mov
lret
cmpsb
loope
sub
jns
das
pop
ret
fnstsw
pop
in
retw
push
mov
jb
js
add
adc
fsubp
adc
adc
cmp
mov
test
out
jle
push
dec
push
out
in
loop
and
mov
shlb
jae
mov
or
pushf
in
xor
sar
mov
mov
jnp
sub
stc
jle
roll
add
repz
out
jnp
cmpsb
mov
lcall
jmp
adcb
and
out
sbb
movsl
sub
push
fildll
cmp
add
mov
add
js
push
or
daa
jecxz
in
shl
sub
inc
addr16
scas
in
mov
inc
or
or
sbb
cwtl
adc
push
mov
notl
mov
adc
cltd
movsl
xchg
mov
xor
push
mov
stos
sti
movsl
mov
ret
pushf
in
div
inc
sahf
movsb
ja
sub
xchg
mov
sub
stos
aam
jae
xorb
adc
sub
nop
aad
sub
fists
stos
mov
dec
xchg
fdivp
mov
mov
inc
sarb
packsswb
sbb
pop
jbe
lock
jmp
inc
mov
inc
mov
cmp
inc
arpl
inc
cmp
pop
or
flds
jns
test
pop
mov
int3
addr16
in
pop
call
pop
mov
fidivrs
test
jb
or
dec
pop
mov
sarl
cmp
pop
cmc
rorl
in
dec
gs
cs
pop
loop
sub
aam
mov
jbe
pop
lea
sti
mov
cmc
dec
mov
pop
in
adc
lods
rorl
popf
xor
mov
dec
cltd
xor
mov
fdivrs
shrb
call
push
test
pop
dec
in
sar
sbb
ds
cs
xchg
mov
lea
and
push
lea
add
inc
sbb
icebp
pop
jo
xchg
xchg
daa
out
xorb
mov
cmp
test
inc
dec
inc
jns
pushf
lea
push
and
testl
sbb
mov
mov
jb
add
das
popf
xchg
jne
cld
cmc
fidivrs
inc
push
mov
mov
add
jl
mov
dec
clc
and
aaa
xor
add
popf
lret
ficoms
add
clc
testb
cmpsb
sahf
mov
cs
mov
icebp
aas
stos
lret
cmpsl
sub
xlat
mov
pop
sar
and
sbb
out
cmp
fstps
ss
loop
xchg
aas
lods
push
push
leave
cmp
cli
push
ljmp
flds
pop
mov
and
mov
dec
push
inc
mov
and
pop
or
insl
cs
test
adc
and
or
adc
adc
dec
out
sbb
out
add
cmp
sub
add
xchg
mov
xchg
jb
push
inc
ret
adc
cmc
mov
adc
ljmp
fistps
pop
movsl
and
adc
add
xchg
mov
sub
add
jg
aas
adc
mov
xchg
xor
test
jns
stos
lret
mov
sbb
cmpsb
es
mov
push
or
mov
sbb
mov
jl
loope
push
cmp
repnz
mov
mov
loope
aad
xor
jns
adc
mov
imul
xchg
ss
mov
xchg
mov
frstor
xchg
popf
xor
aaa
sbb
adc
sub
in
xchg
out
insb
out
jb
mov
jge
adc
fnstsw
lea
mov
add
lcall
cld
mov
add
and
outsb
fsubl
mov
sub
adc
ss
fists
pop
idiv
adc
mov
das
push
push
cmp
mov
shlb
pop
jns
jg
lods
mov
aaa
arpl
test
xchg
jno
push
jbe
adc
ftst
or
sar
cmpsb
inc
outsl
clc
jae
movsl
call
addl
mov
or
push
sti
lea
popa
pop
adc
enter
je
and
scas
enter
xor
jmp
scas
or
mov
cmp
mov
mov
dec
mov
sbb
imul
add
scas
add
out
jmp
addr16
sbb
adc
shll
pop
adc
mov
push
pushf
inc
mov
inc
imul
dec
pop
pop
mov
xor
pop
sub
gs
push
xchg
mov
rcl
fsubl
adc
sub
fwait
adc
xor
into
mov
mov
add
loope
xchg
bound
push
cs
lahf
sub
xchg
xchg
add
aad
rcrb
and
arpl
das
lods
xlat
sti
stc
jnp
mov
or
je
mov
mov
mov
xor
xor
daa
push
cmp
jae
mov
sbb
das
cli
scas
jb
lock
mov
pop
cmp
push
fsubr
ja
dec
ror
push
call
arpl
add
dec
addr16
push
repnz
jp,pt
mov
jnp
inc
xlat
out
mov
inc
adc
cmc
in
dec
ficomps
jecxz
cld
cld
in
jnp
std
push
pusha
incl
rcl
fisubl
sbb
sahf
insb
push
jecxz
pop
push
cmp
mov
jge
movl
mov
add
push
cmp
cwtl
in
out
push
mov
dec
ret
cltd
and
pushf
add
pop
cmp
add
lahf
mov
cld
lds
ss
push
and
add
inc
xchg
imul
mov
sub
adc
out
dec
add
push
ja
fdivs
inc
mov
jecxz
in
add
xchg
push
xlat
mov
daa
pop
jae
shl
push
jns
mov
mov
mov
dec
dec
dec
dec
mov
sbb
xchg
andb
or
push
mov
testb
test
outsl
pop
and
jl
bound
lds
mov
or
pop
add
cs
sub
lea
mov
fcompl
pop
fsts
jae
or
setns
test
gs
nop
xor
sbb
push
xchg
mov
jns
mov
sbb
and
nop
add
adc
aas
jmp
jae
leave
push
cld
sbb
mov
jo
lret
int3
lahf
or
jg
lret
add
stc
mov
or
test
fbld
lock
jb
dec
je
lret
mov
emms
push
xchg
or
mov
mov
pop
les
or
jnp
push
les
jg
push
lahf
hlt
push
xchg
add
inc
movsb
cmpsb
cld
jne
pusha
stos
sub
insl
xchg
loopne
in
jne
add
inc
fs
pop
icebp
jb
stos
andb
pop
pop
cld
jns
sbbl
sbb
cld
scas
loope
dec
lret
dec
fdivs
sbb
jle
push
mov
xchg
outsb
dec
pop
xor
mov
bound
clc
cs
xchg
insb
imul
test
bound
fnstsw
push
cmp
and
inc
out
sbb
lret
test
mov
and
adc
stos
sbb
inc
mov
loope
mov
inc
cltd
hlt
sbb
das
sbb
cwtl
cli
pop
incb
add
js
out
jns
add
scas
inc
inc
iret
lock
fs
xchg
sti
loop
adc
pop
add
fidivrs
les
fmuls
clc
push
push
add
inc
push
es
js
je
xchg
lods
jg
mov
cltd
popf
inc
mov
cmpb
aaa
test
or
adc
scas
movsl
add
pop
stos
sahf
sub
push
int3
ja
push
pop
jl
pop
sub
cmp
cmc
daa
fmuls
push
adc
jo
mov
dec
iret
or
andl
call
jno
xchg
mov
std
mov
std
mov
aad
movsl
pop
inc
sahf
push
sbb
mov
loope
lods
in
mov
sbb
pop
jno
ds
cmpsb
cmpsl
leave
mov
inc
push
jle
mov
ffreep
mov
out
adc
jmp
xor
addl
mov
cmpb
lock
std
js
stc
stc
enter
movsl
mov
add
or
les
jg
ret
cli
add
lahf
pop
mov
cmp
les
jp
imul
jecxz
lock
adc
push
scas
in
sub
adc
cld
test
sub
cwtl
je
pop
dec
leave
mov
test
cmp
adc
jle
jnp
aam
cld
call
enter
scas
push
mov
shl
in
jmp
adc
mov
les
aaa
adc
iret
out
addr16
scas
sbb
mov
leave
stc
push
sub
dec
inc
pop
out
mov
pop
dec
fcomi
test
mov
movhlps
mov
sub
jns
stos
xor
int3
enter
dec
aas
add
test
or
sti
xchg
jg
inc
xchg
xlat
push
xchg
ret
lock
iret
cmpsl
inc
xor
and
imul
and
mov
test
and
mov
lods
arpl
dec
adc
aad
mov
dec
xor
push
lds
sub
xchg
cmp
xchg
sbb
out
dec
add
fldcw
js
imul
lds
xchg
dec
iret
repz
mov
xor
iret
dec
iret
dec
fdivs
adc
inc
or
sub
call
das
mull
into
cli
push
inc
sub
pop
mov
cmp
and
idiv
xor
leave
inc
lahf
adc
fadds
divb
fnsave
loop
gs
shrb
sbbl
push
cmp
add
push
cmp
lret
adc
sbb
pop
scas
in
ss
mov
es
stos
mov
jbe
mov
or
stc
jbe
stos
and
aam
nop
lods
sub
inc
imul
jmp
in
mov
sub
sbb
fistps
ret
and
pop
mov
mov
testb
inc
es
leave
jecxz
jp
dec
add
sbb
mov
mov
xchg
ss
pop
jns
mov
mov
inc
add
test
not
push
mov
lahf
xchg
mov
lret
in
mov
rcl
or
xchg
jg
xchg
mov
xchg
cli
lock
imul
insl
cmp
and
lock
jecxz
icebp
in
rcll
mov
dec
pop
cmp
js
add
adc
add
xor
ja
cmp
stos
pop
push
stos
jnp
sbb
out
xchg
frstor
push
push
add
cmp
lock
data16
or
rclb
stc
aaa
fxch
lret
insl
or
sbb
xchg
aam
and
push
fwait
enter
adc
movsl
outsl
lds
test
sbb
out
shl
cmp
sti
push
push
insb
adc
cmp
sbb
jg
hlt
push
cmpsb
xor
sub
adcl
xorb
arpl
push
jo
movntq
push
ss
insl
adc
inc
cmpsb
add
pop
jl
scas
or
add
add
data16
inc
add
inc
out
adc
stos
aas
fidivrs
aas
mov
mov
popa
pop
dec
push
and
sub
mov
cs
jl
leave
bound
pop
push
sbb
cs
xor
cmp
enter
pop
movsb
aas
fisubrs
inc
mov
mov
das
sbb
mov
or
mov
sub
mov
sbb
insl
out
fwait
cmp
inc
pop
jle
mov
hlt
and
cwtl
jbe
test
mov
sbb
pop
dec
or
sahf
push
mov
mov
pop
insb
rolb
pop
scas
jbe
enter
bound
in
push
dec
push
add
and
cwtl
push
inc
dec
mov
cmpsl
mov
jg
loope
lret
loopne
jge
push
sub
scas
jae
jg
mov
pop
mov
test
cmc
cmp
cmp
ljmp
cmp
ret
pop
decl
mov
and
jmp
adc
mov
sub
rcrb
mov
lahf
mov
repnz
add
xor
add
and
dec
mov
std
lock
negb
and
pop
lret
je
in
push
xchg
mov
lret
jmp
jecxz
subb
imul
aam
inc
sar
rorb
bound
lods
sub
daa
inc
lahf
outsl
out
xchg
dec
loope
xchg
dec
flds
das
jecxz
pop
pop
mov
je
aas
sub
iret
xchg
push
jge
or
dec
scas
pop
push
xorl
gs
testb
mov
dec
push
bound
add
pop
outsl
xor
adc
dec
cmp
sbb
sbb
push
in
mov
sub
ja
xlat
mov
xchg
pop
xor
packsswb
popa
imul
ss
jno
inc
add
out
lret
les
fsubl
mov
test
mov
or
adc
lcall
push
mov
aas
jp
push
push
enter
dec
mull
and
gs
and
xabort
enter
std
cld
movl
mov
pop
mov
mov
adc
push
dec
mov
dec
inc
and
cwtl
test
out
das
call
mov
das
add
pop
or
in
in
ds
xchg
add
push
ror
mov
mov
adc
aaa
and
jge
cmpsl
or
lcall
sbbl
and
jb
adc
call
inc
out
cmc
pushf
pop
cmp
aas
stos
fstpt
jnp
xor
mov
push
loopne
mov
daa
fistpll
outsl
test
aas
xchg
mov
ss
sub
ds
rclb
add
pop
imul
push
pusha
dec
adc
xchg
or
loop
negl
inc
dec
push
pop
sar
jmp
jg
lods
or
imull
or
int3
mov
push
or
subb
sbb
or
add
out
shrl
lods
jo
mov
rcrb
cld
pop
pop
add
jmp
aas
rcll
popf
xor
loope
pop
into
mov
fldt
insl
mov
xchg
stc
mov
mov
gs
stos
and
push
fsubl
out
inc
mov
mov
push
int3
cltd
out
cwtl
aaa
or
movsb
mov
flds
cltd
insl
cli
js
dec
repz
aas
pop
fwait
cmp
ja
or
mov
adc
es
add
hlt
inc
cmp
xchg
xor
dec
jns
nop
push
sahf
pop
jmp
cld
jmp
cmpsb
xor
shrl
pop
xchg
fsts
mov
gs
and
sbb
pusha
movsb
lahf
fstps
mov
sahf
mov
popa
pop
fldt
adc
mov
lods
inc
daa
data16
mov
mov
or
stos
test
sub
scas
fstp
xlat
and
sub
es
mov
inc
sahf
ret
mov
mov
repnz
outsl
xor
inc
ja
cmc
or
lea
inc
jb
ljmp
xchg
enter
ret
mov
xor
jle
adc
cmpsb
arpl
jp
push
mov
push
hlt
mov
cmpsb
add
sub
ljmp
jg
adc
imul
xor
xor
and
fisttpll
adc
pop
dec
frstor
jg
daa
pop
dec
jg
filds
call
shl
push
or
add
xor
xor
lret
sub
push
rolb
sbb
scas
fadds
mov
mov
mov
jns
push
mov
shlb
stos
cmp
jo
orb
fdivs
iret
push
gs
ficoml
insl
lahf
cmpsb
outsl
loopne
xchg
sbb
jecxz
xlat
data16
and
cltd
dec
or
cltd
add
push
mov
inc
inc
xchg
push
xchg
xlat
es
adc
mov
out
jmp
or
in
daa
adc
test
and
cli
and
jae
jb
ljmp
loope
adc
pop
jns
sub
scas
cmp
sbb
xchg
inc
inc
into
mov
jbe
cmc
test
in
lea
fisttpll
es
cmp
std
cmc
mov
lods
mov
mov
test
icebp
shll
xor
lcall
lods
scas
inc
fcoml
mov
repnz
pop
cli
stos
es
push
jae
push
add
jle
pop
fwait
hlt
pop
pop
test
cmpsl
dec
repnz
out
xchg
lret
mov
dec
or
adc
sub
pop
add
pop
fisubrs
pop
subl
or
cmpsb
push
pop
add
js
dec
jbe
or
data16
adc
fnstenv
sub
or
xchg
scas
pop
push
shlb
and
jge
les
mov
mov
pop
stc
sub
adc
imul
imulb
push
mov
mov
xchg
push
sub
mov
mov
js
mov
test
mov
aam
aad
inc
fstl
out
mov
inc
pop
pop
cld
push
clc
fistps
xchg
cmc
std
jnp
sbb
imul
test
fwait
xchg
test
outsb
add
outsb
jecxz
push
adc
sar
mull
push
pop
adc
pop
pushf
fnstsw
pop
jno
pop
add
pop
jg
or
and
rcrl
lods
cmp
push
push
add
lea
lds
push
pop
adc
lock
ret
pop
jo
in
ret
and
cltd
xchg
mov
mov
sti
cmc
lret
push
pop
dec
mov
movsl
ret
cmp
fsubl
in
clc
enter
lret
mov
mov
xchg
and
scas
xlat
adc
ljmp
add
cmc
jns
xor
nop
aas
mov
mov
int3
mov
inc
addr16
fwait
lods
aas
outsl
sahf
cld
adc
inc
not
pop
mov
adc
pusha
fisubrl
iret
pop
push
push
pushf
adc
adc
hlt
fdivr
lea
and
inc
call
in
inc
lods
jp
mov
out
xchg
aaa
rcrb
dec
cmc
fnsave
mov
cmpsl
in
sub
dec
adc
or
das
jmp
mov
jae
mov
xor
out
cmp
jp
test
fs
inc
jge
repz
jbe
cmp
or
imul
in
rcr
inc
loope
sbb
stos
aas
push
mov
cmp
testl
inc
rcr
in
in
or
mov
jl
ret
xchg
ret
mov
mov
insb
ror
sbb
inc
add
into
enter
inc
xchg
mov
add
clc
push
jmp
inc
or
jmp
rorb
add
aam
jl
rcll
dec
dec
std
xor
rorb
xor
lds
push
jne
fiaddl
xchg
push
xchg
test
int
xchg
fdivrp
mov
jmp
adc
push
fcoml
xchg
lods
mov
jno
pop
mov
mov
dec
into
mov
jne
int3
lock
push
fistps
add
pushf
jne
mov
les
jo
neg
push
in
inc
icebp
xchg
js
mov
imul
cmp
add
push
icebp
mov
jecxz
mov
jne
add
pminsw
jo
sub
jge
mov
mov
cmpsl
cmp
adc
add
jmp
sub
cmp
lcall
push
jmp
push
das
push
dec
fldenv
sbb
insb
cmc
xchg
roll
loopne
out
mov
sti
scas
mov
xchg
pop
out
cmp
aas
cmp
cmp
push
fsub
sbb
jns
movsl
jbe
sbb
out
lods
xchg
mov
dec
pop
push
sub
mov
jl
push
pop
addr16
stos
jae
xor
movsl
test
add
dec
dec
dec
popa
in
and
add
sbb
mov
movsb
jmp
mov
pop
mov
cmp
std
repnz
cmp
jo
pop
hlt
rorb
jbe
push
sbb
sbb
pop
dec
mov
sub
lahf
aas
xchg
jbe
push
push
xor
jg
lods
sbb
cmp
mov
fisttpll
inc
je
pop
loopne
sbb
cld
mov
jle
mov
xchg
inc
out
or
mov
push
test
cmpsl
stc
imulb
jle
sti
dec
popa
adc
or
or
sbb
push
sub
mov
jmp
inc
fistpll
cmp
ja
mov
and
sbb
mov
sbb
cmp
xor
cmp
mov
test
push
hlt
popa
and
pcmpgtd
mov
xchg
jbe
dec
aaa
push
dec
jle
xor
aas
cltd
ficomps
inc
imulb
adc
enter
pop
loop
xor
cs
dec
in
cmpsb
test
add
sub
mov
rcll
mov
ljmp
hlt
or
or
stos
outsb
mov
inc
xchg
push
jnp
rcr
and
jo
lret
jno
sub
repnz
push
neg
sbb
cltd
xchg
dec
mov
inc
movsl
sarl
sub
repz
mov
addr16
jb
ljmp
xor
dec
pop
jp
loop
sbb
mov
ret
rorl
jcxz
xor
sub
orb
mov
mov
ds
fidivs
fldl
and
sub
cmc
pop
mulb
jae
loop
pusha
loop
cltd
ret
xchg
aas
xchg
mov
dec
jae
dec
adc
iret
inc
pusha
mov
sbb
cld
fiaddl
mov
in
xchg
nop
jp
pop
js
xchg
sub
dec
dec
jnp
mov
xchg
sahf
mov
repz
add
mov
sbb
adc
data16
cmp
push
fisttpll
xchg
mov
test
mov
test
push
loopne
lret
and
or
adc
andnps
inc
xorl
mov
ljmp
hlt
loop
pop
push
push
test
cmp
fcom
lds
adc
or
sbb
or
out
cmp
lods
addr16
ret
mov
rolb
ja
sti
mov
xchg
jb
xchg
push
je
aas
fiadds
cmp
dec
popf
and
inc
mov
and
xor
cwtl
gs
sbb
inc
jmp
iret
outsl
sub
dec
jle
ljmp
mov
mov
add
loopne
inc
and
push
cmc
adc
daa
aam
jle
jg
outsb
dec
mov
or
icebp
cld
add
popa
xchg
pop
scas
pop
faddl
xor
fisttps
fs
mov
imul
sbb
lock
add
mov
and
daa
ja
mov
sbb
les
mov
jmp
mov
sbb
cwtl
loopne
aam
cmpsl
lret
movsl
or
pop
xor
xor
xor
sub
lret
aad
les
inc
test
mov
movsb
adc
inc
in
or
jns
imul
jnp
mov
xchg
out
outsb
pusha
push
sbb
mov
stos
in
cs
daa
bound
pop
sub
lret
lahf
sbbb
ja
jne
and
adc
sub
xchg
mov
push
or
sub
enter
push
repnz
loopne
dec
cmpsb
fstps
fld1
xchg
mull
divps
rcll
int3
in
enter
jg
pop
scas
push
mov
inc
inc
xchg
repnz
ret
push
sub
push
or
pop
or
xchg
dec
and
popf
hlt
cmpsl
inc
lret
inc
cltd
stos
lods
and
dec
push
jge
inc
out
test
cmc
lret
ljmp
add
inc
imul
jo
cs
jl
ret
lds
imul
cmp
imul
inc
aam
xlat
mov
mov
loopne
xchg
arpl
aas
orl
xchg
push
cli
pop
lret
adc
or
imul
add
adcl
ss
or
in
aam
lret
xchg
mov
shlb
mov
pop
push
or
in
rcll
out
sbb
cmp
in
cld
testl
fcoml
popa
push
or
mov
dec
pop
aam
mov
or
fisubrl
cmp
pop
scas
iret
jo
sbb
mov
push
lds
je
sub
rcll
push
push
xor
sbb
jnp
call
rorl
inc
xchg
sbb
outsb
mov
jbe
ja
dec
mov
mov
xor
dec
or
call
dec
sub
ret
pusha
adc
and
mov
cmpsb
or
testb
sub
lea
jnp
pop
add
cmp
or
add
fildll
mov
sbbb
hlt
aam
adc
sahf
fldl
lods
jp
sbb
push
mov
stc
fs
mov
ss
popa
mov
pushf
dec
cmp
push
or
sbb
mov
outsl
shr
loopne
push
ds
xchg
int3
sbb
jb
push
arpl
lret
lds
pop
int
in
and
fldcw
adc
rcll
ret
jns
sub
bound
mov
and
dec
cmpsl
mov
dec
nop/reserved
stos
mov
add
mov
into
addr16
arpl
imul
es
mov
ja
test
cmpb
mov
push
pop
mov
sbb
mov
out
scas
inc
mov
sti
loop
jne
pop
push
sub
insl
sbb
jbe
lock
cmpsl
gs
imull
xchg
push
dec
hlt
sbb
add
push
hlt
xchg
and
sarb
mov
add
leave
ficoms
add
jno
rol
mov
outsb
inc
iret
fnsave
push
xchg
xor
pop
icebp
and
fstl
out
mov
push
push
add
out
movb
push
rol
imul
push
pop
mov
adc
pop
push
lret
adc
xor
rclb
or
push
jmp
mov
out
rclb
rorl
stos
and
or
loope
pop
aas
adcb
in
shl
xchg
or
in
repnz
push
aam
mov
fistps
mov
in
cwtl
rclb
call
sub
sahf
cwtl
lds
fsubl
sub
mov
pop
pop
mov
or
and
mov
mov
lods
lret
xchg
mov
push
mov
inc
hlt
push
mov
fs
in
loopne
mov
fcmovne
pop
cmp
ja
jge
mov
frstor
int3
sbb
mov
pop
push
lock
hlt
and
mov
mov
or
adc
push
mov
out
cmp
fstl
dec
xchg
inc
jno
jp
punpckhdq
cs
mov
xchg
lret
xchg
cmp
pop
mov
push
lea
push
xor
bound
mov
and
jne
outsb
clc
xchg
xor
mov
mov
dec
dec
adc
xchg
sti
mov
arpl
hlt
fdivrp
xor
push
insl
jne
bound
xor
lret
push
lods
fsubl
aaa
cmc
in
fiaddl
push
pop
orb
ja
push
mov
jmp
pop
dec
inc
jno
stos
pop
or
adc
mov
cmp
sub
loopne
xchg
jb
mov
lods
adcb
ljmp
and
add
jecxz
push
in
in
in
mov
cmp
xor
xor
fnstsw
cmc
push
les
pop
mov
es
iret
xlat
loope
sbb
aaa
out
orb
jmp
cmpb
cmc
imul
push
xorl
cmp
mov
adc
insb
adc
movl
aam
lea
outsb
pop
xchg
ds
xor
icebp
mov
cli
gs
sahf
and
mov
push
test
lods
adc
and
mov
push
inc
cltd
push
leave
nop
aaa
repz
sbb
lahf
popa
adc
jmp
pop
mov
or
mov
mov
jno
cmp
dec
cmp
pop
sub
sub
sti
lret
js
out
mov
stc
daa
mov
push
jno
xchg
clc
cmp
or
and
jle
je
sub
xchg
movsl
sub
imul
dec
fxtract
cmpl
call
and
dec
pop
inc
jle
fnstenv
enter
jecxz
push
jg
cmp
outsl
mov
pusha
dec
add
inc
sahf
int
pop
call
mov
pop
ljmp
jnp
lahf
mov
orb
sbb
leave
mov
lea
jbe
mov
lods
imul
xor
xor
sbb
pop
cmp
mov
cltd
test
jbe
leave
adc
inc
push
cmp
mov
iret
insl
mov
jmp
movsb
push
jo
mov
inc
insb
gs
cmp
dec
and
cmpsb
push
pop
sbb
cmp
pop
inc
std
pop
xchg
test
ljmp
lret
bswap
mov
pop
cmp
dec
insb
add
enter
and
xchg
pop
stos
je
in
cli
les
adcl
xor
sub
mov
notl
mov
leave
jecxz
hlt
inc
dec
xchg
aam
cmpsl
fmull
xor
fbstp
pop
push
and
mov
jp
dec
xchg
xlat
mov
mov
mov
push
divl
adc
int3
jns
inc
adc
sbb
push
repnz
es
ret
push
cmp
inc
dec
addb
movsl
aad
out
lds
jb
mov
xchg
mov
sbb
push
push
dec
test
jne
fdivrs
mov
dec
fisubl
daa
adc
xorb
jge
mov
mov
jno
cmp
cs
dec
adc
adc
pop
ja
addl
mov
cmp
movsb
adc
aad
stc
test
push
test
mov
mov
mov
ja
adc
push
int
incl
insl
and
fcmove
hlt
inc
jne
adc
in
pop
inc
insl
add
imul
xor
sbb
mov
cltd
jle
dec
jl
mov
leave
gs
fsubrl
or
mov
xlat
jnp
sub
mov
jne
push
into
sbb
jb
inc
or
and
dec
fs
rorb
stos
mov
jle
adc
lret
cmp
mov
jmp
roll
scas
and
or
gs
jg
popf
adc
in
ss
test
and
or
add
or
mov
sahf
insb
pop
jg
in
in
cli
inc
decl
in
mov
push
adc
sub
fwait
adc
ds
enter
push
arpl
outsb
pusha
cmc
jno
pop
push
sub
push
into
xchg
pop
mov
fwait
cs
xchg
nop
xorl
aas
imul
cltd
icebp
xchg
orb
arpl
mov
xor
lcall
ss
mov
in
dec
dec
xchg
std
sbb
enter
int3
jg
cmp
cmp
clc
repz
jge
cmp
imul
cmp
popl
push
add
sbb
jmp
icebp
sbb
push
enter
or
stc
loopne
adc
inc
rcr
aaa
ja
mov
loope
nop
sbb
adc
mov
aad
cltd
sub
mov
mov
and
xchg
dec
aam
sbb
hlt
das
aas
jb
je
popf
leave
ja
inc
add
and
cltd
nop
mov
and
mov
dec
xchg
sub
sbb
mov
hlt
fnstcw
les
ja
cwtl
mov
insb
rorb
pop
push
and
int
xchg
sub
xchg
ljmp
and
dec
xor
fsub
incb
mov
repz
lcall
xchg
or
arpl
lods
popf
dec
stos
fnsave
clc
xchg
push
jb
in
mov
andb
divb
gs
cmpsb
add
pop
ficoms
inc
fcomps
xchg
scas
divl
or
je
incl
mov
leave
mov
sub
xchg
add
mov
xlat
loope
push
out
aas
jle
pop
mov
cmpsb
cld
scas
pop
aas
daa
ffreep
mov
pop
out
add
pop
add
push
pop
lcall
ret
mov
pop
rcrl
rcrl
sbb
andl
pop
mov
cld
leave
outsl
loope
sub
ret
mov
mov
jmp
movaps
fldt
out
lods
jecxz
pop
pop
dec
cli
add
sbb
das
sub
push
fstps
fiaddl
push
js
lea
cmp
inc
xchg
out
mov
cs
lds
or
lret
and
testw
je
dec
add
cmp
dec
sbb
imull
movb
faddl
notb
or
jl
cmpsl
leavew
push
lahf
ret
outsb
in
jecxz
mov
dec
lock
pop
hlt
or
inc
xor
dec
xlat
sbb
cmpsb
push
mov
and
das
mov
cmp
sbb
test
ljmp
out
sub
je
add
lock
imul
cmc
in
push
cli
cmp
dec
stos
mov
es
stos
fisttpll
or
xchg
ss
int3
or
pop
push
bnd
cmp
dec
inc
pop
mov
mov
xchg
sbb
lcall
adc
add
pushf
iret
xchg
inc
push
dec
test
lea
xor
sbb
addr16
nop
or
dec
test
push
jns
add
into
xchg
xchg
shrb
inc
fisubl
outsl
cmc
pop
cltd
testl
repnz
cmp
push
mov
pop
sbb
addr16
dec
dec
dec
hlt
push
std
jle
mov
mov
sub
outsb
loop
lock
cld
std
fldz
enter
mov
add
mov
push
xchg
idivl
mov
jmp
inc
popf
fs
iret
xor
clc
popa
jl
sub
inc
aas
and
pop
shr
clc
lret
pop
jae
pop
cli
pop
pop
test
nop
in
fcomip
mov
dec
adc
cmpsl
sub
bound
cli
repz
sbb
std
in
call
xor
jo
push
mov
pop
and
mov
imul
adc
bound
jle
xlat
insb
push
jne
mov
mov
sbb
roll
les
sbb
sbb
add
test
pop
inc
mov
adc
mov
and
sbb
push
push
ja
inc
popf
cmpsl
mov
pop
xchg
mov
mov
cs
inc
je
adc
pop
test
mov
lahf
xlat
stos
push
cmp
jg
push
gs
push
fists
xchg
add
pop
sbb
aas
inc
repz
pop
in
or
sbbb
aad
jns
ret
xor
icebp
lock
notl
xchg
fisubl
inc
dec
hlt
mov
test
sub
xchg
sub
fxch
inc
add
adc
and
iret
mov
popf
fistl
mov
das
push
xchg
popa
jp
cmc
js
adc
mov
jecxz
fisubl
lods
popf
lods
dec
fldcw
sbb
out
in
rcrl
xor
add
jmp
sub
mov
jge
lret
xchg
das
mov
cmpl
push
sub
flds
xor
inc
loope
out
push
mov
inc
jne
scas
lods
out
mov
xor
dec
xchg
movsl
jnp
or
or
inc
cld
pop
xor
mov
lret
mov
push
xchg
enter
divb
xor
sbb
dec
loopne
test
int3
je
sub
dec
pop
push
or
sub
sbb
xor
adc
xchg
xor
pop
pop
leave
repz
fucomp
nop
out
adc
pop
pop
jns
or
inc
pushf
out
popa
mov
shll
or
push
dec
jle
loopne
and
rorl
push
cmpsl
ljmp
out
inc
mov
or
sbb
mov
rcll
sbb
dec
out
mov
pusha
cmp
or
mov
fbstp
cmp
add
fwait
nop
sbb
out
repz
imul
popf
xchg
js
hlt
pop
icebp
xchg
pop
mov
movsl
pushf
mov
in
subl
inc
mov
cmpsl
push
add
out
inc
jecxz
enter
fisubs
mov
mov
roll
into
or
push
sub
pop
push
insb
mov
sub
xor
push
pop
fwait
pop
ffreep
scas
push
nop
jg
shlb
adc
xor
test
fldcw
addr16
adcl
jmp
jae
push
push
cmp
insb
or
jp
and
in
sldt
sub
outsb
ja
les
ret
loopne
sbb
fwait
push
lods
cmc
mov
jno
mov
ret
jns
mov
jb
xlat
jl
xor
mov
test
pop
ret
movsl
test
or
or
repnz
and
xchg
ljmp
sbb
cltd
inc
insl
jp
jmp
ja,pt
inc
jno
pop
jle
xor
lret
insb
mov
pushf
fwait
lea
hlt
mov
insb
lods
push
mov
push
mov
xor
flds
add
xor
and
mov
cmpsl
rcr
fisubs
leave
mov
scas
mull
imul
inc
mov
cmp
pop
cmp
pop
ret
dec
cmp
adc
xchg
enter
pop
jb
or
pusha
sub
lahf
lahf
and
push
xchg
jl
xor
leave
loopne
js
dec
inc
cmc
jno
lret
or
sbb
fdivl
inc
and
push
mov
jbe
push
mov
pusha
pop
mov
jle
sbb
cmc
loope
push
divl
mov
cmp
test
sub
stos
rorb
dec
xchg
push
mov
mov
ret
lret
rorb
jecxz
push
iret
fiadds
in
sbb
lret
dec
mov
mov
mov
call
inc
cltd
pop
push
and
sbbb
cmp
cmp
clc
adc
and
push
jmp
fcmove
xlat
in
sbb
mov
jge
dec
add
mov
loop
sarb
xchg
sub
jae
add
jmp
sub
or
or
and
and
dec
leave
jae
imulb
cmp
jns
or
scas
push
pop
andl
push
pop
xchg
mov
push
sbb
rclb
mov
xchg
les
ret
push
and
or
fs
ffreep
mov
add
and
xor
ret
and
out
pop
out
test
das
mulb
orl
sti
rol
mov
push
dec
sbb
ja
leave
call
ss
shrb
iret
mov
jns
movsb
pop
adc
cli
adc
enter
or
adc
and
push
push
enter
inc
and
sbb
es
xchg
outsl
jno
push
call
xchg
xchg
fmull
xor
cli
push
pop
xchg
adc
jo
jmp
outsl
jae
pop
cmpsl
mov
pusha
xor
test
sbb
adc
add
insb
adcl
xor
std
xchg
sbb
dec
pop
mov
sbb
test
sahf
iret
shll
adc
xor
into
mov
icebp
outsb
aaa
mull
fistpll
int
sub
dec
nop
mov
pusha
icebp
out
mov
dec
dec
bound
mov
inc
xchg
or
insb
leave
xlat
or
xor
dec
adc
xor
cmp
sbb
inc
sub
in
inc
pop
sub
dec
add
fs
push
push
add
xchg
repz
mov
inc
filds
test
pop
rcrl
stos
push
and
call
popl
jg
fdivr
aas
xchg
aas
dec
mov
cltd
mov
fildll
test
arpl
or
stos
testb
adc
bound
or
jle
mov
test
aas
popa
hlt
in
mov
insl
mov
xor
mov
fwait
jns
add
ds
add
aam
or
add
pop
dec
ja
arpl
jge
mov
mov
mov
loope
mov
mov
inc
shl
es
sbb
pusha
push
sbb
pop
pop
push
loopne
loopne
mov
pop
insb
call
ret
xor
sub
push
or
xchg
xchg
into
push
mov
jnp
add
xor
sbb
push
ja
js
xchg
fiaddl
fmul
test
mov
sub
jle
popa
sti
sarb
dec
mov
push
lcall
test
inc
and
xchg
mov
or
leave
dec
and
jbe
leave
test
lret
push
inc
mov
fdivl
xchg
add
add
dec
int
fs
inc
imulb
stos
shll
call
sub
jp
arpl
xor
cli
xchg
lcall
and
xchg
jns
aas
loope
jmp
mov
lahf
adc
jp
cmp
pop
repnz
cmp
movsb
mov
lea
icebp
inc
sbb
pop
aas
mov
jmp
or
add
arpl
dec
add
mov
jg
out
jg
inc
popf
inc
inc
sahf
rcrb
repz
clc
sbb
shrw
dec
sub
shlb
mov
adc
in
bound
ljmp
jb
rcrl
jmp
xor
push
add
dec
movsl
in
in
mov
xor
rorl
and
loop
pop
orb
xchg
xor
xchg
push
dec
jmp
xchg
sub
int
xchg
in
xchg
mov
mov
sub
xchg
xchg
rclb
insb
cli
in
push
push
sbb
inc
lret
mov
xchg
mov
fistl
mov
fwait
roll
es
add
mov
mov
cwtl
mov
jnp
mov
lcall
loop
in
in
sbb
cmp
fcoms
mov
mov
xlat
loopne
clc
sub
sahf
arpl
sti
decl
push
ret
jg
pop
jmp
inc
fistpll
fdiv
push
fwait
test
and
test
xchg
push
daa
addl
loop
mulb
xor
xchg
dec
scas
fwait
nop
and
cltd
hlt
push
xor
faddl
pop
inc
mov
push
nop
mov
lahf
jo
mov
cmp
mov
cwtl
nop
sbb
lret
push
push
outsl
dec
scas
cltd
xchg
cmpsb
aam
cmp
pop
rorb
xchg
pop
icebp
jg
and
pop
cli
jo
push
add
mov
loope
adc
mov
cltd
cmc
mov
ja
xor
dec
repz
rcrl
inc
push
ret
pop
jmp
mov
dec
mov
push
xor
js
iret
ljmp
add
repz
in
scas
and
lock
cmp
push
xchg
push
hlt
inc
clc
jb
pop
push
inc
ret
lcall
out
sub
int
lahf
fs
sub
pop
in
cmpsb
inc
mov
adc
or
ds
pop
cmpsb
test
es
xor
add
fcompl
inc
in
mov
out
push
mov
xchg
outsb
ja
xchg
cmp
jle
xchg
add
or
sbbl
cmp
jns
dec
and
inc
test
pop
fildll
out
fwait
shll
fldenv
cli
fwait
jle
enter
lcall
int3
pop
cli
arpl
pop
loope
cmp
push
mov
or
ret
mov
out
lret
sarb
sub
or
and
push
xchg
jmp
and
push
lret
pop
dec
add
stos
fucom
rcr
mov
lods
adc
or
pop
xchg
outsl
jmp
fstps
inc
aas
aas
in
jmp
pop
mov
push
cltd
mov
in
in
popf
mov
pop
ss
mov
shlb
loop
adc
stos
cmp
and
sbb
aaa
push
sub
inc
cmpsb
inc
ret
imul
cmp
sub
fcmovbe
in
xchg
mulb
lahf
add
pop
jmp
cmpsl
push
xchg
dec
pop
push
lods
push
sar
jae
push
lods
mov
sub
xchg
ds
mov
adc
xor
push
test
xorb
cli
pop
lahf
and
dec
xlat
out
mov
mov
shrl
sbb
mov
cmpsb
cmp
pusha
push
or
ret
adc
xor
inc
imul
fcompl
jns
out
cld
stc
jecxz
sbb
inc
mov
imul
insl
and
sbb
adc
test
or
xor
iret
out
lds
pushf
es
repnz
call
push
std
subb
subb
testb
xlat
and
and
icebp
ss
xor
test
scas
lret
add
push
hlt
jl
and
push
test
cmpsl
jne
subb
cmpsl
aad
repz
dec
iret
nop
pop
sbb
ja
int3
mov
jb
cmpsb
int3
push
fdivrp
push
inc
add
movsb
sbb
enter
mov
je
push
lods
pushf
cld
adc
adc
jno
aad
mov
sub
mov
adc
addr16
mov
adc
or
push
fadd
push
mov
push
sbb
sarb
pop
sarb
cmpsl
add
adcb
repz
push
scas
rorl
xor
cli
or
mov
mov
pop
jmp
int
repz
outsb
pop
xchg
fldenv
cmpsl
mov
mov
dec
lods
mov
fstpt
add
jne
inc
cmp
xchg
cwtl
hlt
mov
popa
jo
xchg
sbb
cs
inc
mov
cmc
lods
js
or
cmpsb
jbe
and
and
or
lock
xor
sub
pop
aad
loope
cli
paddw
push
std
sbb
shrb
mov
pusha
stos
cmp
sub
cwtl
jl
cmpsb
ds
inc
xchg
jp
loopne
test
jmp
lahf
adcb
jg
jge
jo
push
xchg
add
add
lahf
pop
jae
inc
es
leave
mov
inc
jbe
push
cwtl
push
or
sahf
inc
fstl
jne
pop
sub
inc
sbb
fwait
mov
and
movsl
jl
sub
call
sbb
mov
or
and
scas
pop
fidivl
xor
mov
loop
popl
mov
mov
xchg
jb
push
push
loope
call
out
outsl
sti
push
test
xor
fisubrs
push
mov
cmp
ja
arpl
xor
cli
add
jg
arpl
pop
scas
lret
xchg
into
mov
out
cmp
insb
adc
repnz
pop
sbb
jmp
push
notl
xchg
mov
cmpsl
test
sbb
xchg
mov
fwait
fwait
xchg
xchg
jg
decb
scas
cmpsb
or
cs
in
pop
ftst
sbb
cmpsb
adcb
loop
sbb
xchg
sbb
inc
dec
out
icebp
lods
pop
mov
push
mov
inc
cmpsb
inc
pop
les
cli
jae
in
mov
test
or
jno,pn
push
call
xchg
or
jecxz
xchg
scas
dec
jle
ja
push
mov
leave
ja
cli
dec
orb
sahf
rcrb
add
jecxz
cmp
loopne
scas
dec
dec
out
add
inc
xor
pusha
aam
jg
rcl
fistpl
add
jne
push
mov
push
jno
stos
inc
pop
sub
dec
push
and
cmp
push
cmp
adc
dec
ja
mov
mov
leave
adc
jl
scas
popa
sbb
cmp
pusha
nop
and
imul
scas
fcomip
stc
add
mov
lahf
push
scas
ret
adc
pop
repz
les
inc
sbb
inc
jmp
mov
pop
xor
mov
mov
loopne
or
test
xor
inc
enter
cltd
popf
repz
mov
repnz
insl
jno
sbb
mov
popf
inc
sbb
xchg
movb
lcall
jae
jecxz
jno
clc
and
xchg
je
loope
aad
roll
add
insb
fisubl
mov
jp
push
int
fs
inc
mov
pop
clc
or
cltd
jno
aaa
xchg
pop
and
sbb
loop
in
imul
mov
jmp
cmc
loop
dec
ja
inc
jg
nop
loope
xchg
addl
xchg
sbb
fmulp
je
clc
jge
or
fcomps
aam
insl
aas
aaa
cs
ret
mov
cmp
push
mov
test
mov
mov
inc
ljmp
sub
cwtl
mov
dec
xchg
lds
seta
cmp
sub
mov
inc
in
mov
cwtl
mov
dec
mov
xor
xchg
cmp
pop
les
inc
add
ret
ss
jb
mov
pop
aas
push
call
fmul
xor
int
cmp
mov
loop
cld
scas
sbb
pop
mov
fs
fistpl
jb
imul
fisubrl
pop
and
xchg
dec
adc
inc
mov
movb
mov
and
inc
push
mov
mov
pusha
adc
and
repnz
nop
cmc
xor
mov
or
ret
mov
add
cs
fpatan
cmp
mov
lahf
adc
outsb
inc
in
arpl
out
add
cmp
jmp
inc
and
into
call
mov
mov
mov
sahf
out
xor
fdivl
mov
mov
out
add
ds
stos
pop
fs
sub
insb
notb
lret
stos
jp
sti
stos
mov
inc
fiaddl
js
loopne
mov
xchg
lahf
subl
or
sub
in
inc
pusha
je
pop
insb
push
cmp
loope
nop
aas
in
fwait
and
cmp
push
or
push
adc
js
pusha
adc
in
pusha
sbb
fcoms
push
pop
jge
test
xor
out
stc
inc
jmp
jo
xchg
inc
xor
fidivrl
test
cltd
lret
jecxz
ficomps
mov
push
shlb
call
jp
mov
xchg
in
ljmp
test
outsl
jge
gs
fsubrs
adc
roll
aam
loopne
push
mov
jmp
cs
pop
cltd
pop
hlt
cmc
scas
fstps
out
jl
aaa
test
cmpsl
inc
pusha
mov
add
push
leave
cmp
aas
out
ljmp
daa
lea
popa
xchg
jle
std
cli
mov
push
lods
mov
sbb
sbb
in
jns
and
pop
inc
mov
in
xchg
pop
mov
inc
mov
scas
jae
xchg
push
jg
inc
cmpsl
jl
xchg
xchg
test
fstpl
into
pushf
in
rorb
popa
push
and
adc
popa
in
dec
dec
fistpl
xchg
xchg
sub
in
icebp
ror
mov
inc
stc
sub
and
popa
mov
repz
mov
pusha
push
pop
shrl
aad
adc
cmpsb
and
pop
add
out
sub
xchg
adc
mov
scas
xchg
push
das
rcrb
mov
and
add
xor
sbb
xor
push
lcall
ret
aas
jo
and
jp
cmp
mov
dec
cmp
bound
lcall
lahf
xor
mov
xchg
sub
adc
add
inc
in
mov
mov
sbb
mov
stos
or
repnz
jmp
adcb
xor
data16
sub
jmp
mov
jbe
inc
paddusb
and
insl
push
add
push
and
mov
push
test
stos
pop
subb
int
mov
push
clc
ficompl
fs
jmp
loop
push
jbe
inc
xchg
cwtl
jnp
outsl
lahf
std
jbe
adc
jle
push
pusha
dec
jp
ss
shll
mov
aam
daa
adc
rcl
fs
mov
jb,pn
push
call
lock
insb
jle
xchg
xor
lcall
loopne
sbb
int3
xchg
push
adc
xlat
xchg
push
fcompl
mov
in
ret
adc
loope
fcoml
pushaw
into
jg
mov
imul
push
jl
pop
xor
mov
enter
cwtl
fs
gs
insl
push
scas
enter
popa
cwtl
rorb
pop
push
ds
shll
jne
outsl
stos
inc
cmc
sbb
mov
test
pop
in
je
test
out
pop
int
cmp
in
testl
call
push
rorb
addr16
xor
ds
aam
int
test
add
add
or
test
addb
push
lock
add
mov
cmp
jecxz
stos
jp
dec
push
aam
std
mov
mov
push
scas
aad
dec
test
insb
rclb
cmpsb
aas
lret
vmwrite
ss
xchg
add
adc
ret
xor
add
add
dec
imull
push
popa
das
cmp
js
jo
adcl
push
shlb
shll
rolb
mov
and
das
inc
push
xlat
inc
fdivp
jno
cmc
ret
pop
xorl
nop
ret
sbb
and
lea
push
stos
inc
xlat
ucomiss
or
popf
scas
inc
sub
notl
in
sub
outsl
xchg
mov
scas
or
xor
sub
daa
out
cmc
inc
add
dec
mov
je
pop
call
jb
and
mov
push
lret
dec
pop
out
cld
inc
shll
pop
sbb
cmpsl
mov
jle
data16
inc
pop
add
xor
addr16
loop
jbe
or
mov
push
cli
inc
adc
je
adc
or
insl
test
fists
jb
std
ds
cmp
cmp
cltd
xchg
and
cmp
jle
repz
fwait
pop
cmp
adc
mov
inc
lret
pop
stos
ljmp
rcrl
enter
jns
sub
in
outsb
sbb
push
stos
int3
imulb
push
mov
jl
mov
add
mov
jge
shlb
shlb
push
enter
push
jo
scas
adc
dec
and
cmp
sbb
xor
cli
imul
movsb
mov
push
dec
test
pop
pslld
jo
std
in
mov
cmp
push
jae
popf
movsl
xchg
rorl
add
dec
mov
pop
dec
xor
sub
aaa
jmp
mov
int
test
aad
inc
bnd
int
mov
inc
es
fwait
lea
pop
repnz
and
pusha
dec
push
xchg
loopne
lret
push
in
loop
and
xor
dec
cs
sahf
jecxz
xlat
aas
fbstp
jg
dec
out
add
in
add
ret
cmp
push
pusha
mov
shrl
jecxz
js
popf
dec
fildl
mov
loope
push
add
pushf
xor
pop
xor
sti
mov
mov
mov
imull
dec
or
mov
xor
xor
in
inc
mov
dec
popf
push
xor
mov
sbb
xor
out
xor
mov
mov
inc
sbb
negb
lock
dec
mov
jg
mov
jmp
nop
xor
push
sar
sbb
lods
jecxz
fs
pop
fs
addr16
mov
xchg
cmp
cs
adc
mov
ljmp
mov
orb
ja
mov
popa
stos
outsb
rcll
mov
js
es
mov
int
dec
pop
inc
and
push
in
in
ds
adc
xor
mov
sub
cmp
pop
fcomps
lahf
jbe
cwtl
out
scas
in
sub
mov
insb
adc
dec
lock
fimuls
xor
cmc
cs
lret
cmc
shrl
sub
rep
lods
or
lcall
das
jne
lods
add
leave
pop
in
imul
push
mov
insb
cmp
divl
xor
imul
cmpsb
lret
fs
pop
into
stc
movsl
aad
xchg
nop
or
sub
push
pop
or
incl
fbld
je
xor
insb
enter
or
sub
inc
scas
jb
pop
push
cmp
clc
xor
push
adc
mov
or
sti
pop
pop
inc
pop
lock
test
sbb
dec
lds
cmp
and
xchg
in
inc
xchg
inc
add
adc
iret
sbb
scas
enter
test
adc
mov
in
cmp
sti
in
data16
adc
dec
mov
add
or
mov
cmp
dec
mov
and
add
inc
lahf
inc
daa
dec
into
aas
mov
gs
repnz
outsb
mov
cwtl
into
pop
sbb
out
xchg
push
mov
dec
aad
push
push
or
pop
es
imul
fstl
sub
jo
cli
push
and
mov
push
imul
push
cmpsb
pop
xchg
mov
iret
jl
jne
jne
test
push
cmp
jne
xchg
or
fdivr
mov
jno
jae
call
jo
in
xchg
push
rcrl
loop
jns
jecxz
cmpsl
mov
int3
dec
stmxcsr
popa
add
jecxz
adc
shll
cs
adc
cmp
jp
pop
xlat
insl
nop
insb
popf
mov
jae
aam
cld
jbe
or
sbb
dec
and
call
cli
adc
loope
inc
orl
jecxz
jg
sarb
jg
out
pop
jo
jl
bound
mov
push
xchg
outsl
ret
dec
or
adc
adc
mov
xchg
flds
jmp
jmp
movsb
push
jl
sbb
nop
lock
mov
cmpsl
push
rclb
jae
sub
mov
xchg
mov
xchg
fisttpll
add
in
addr16
movsb
mov
cwtl
xor
loopne
jno
jbe
dec
shrb
dec
xlat
lret
add
stc
push
sub
jb
pop
push
aam
ds
adc
inc
mov
cmp
sub
dec
hlt
mov
aam
and
pushf
cld
les
stc
repnz
fdivrs
jbe
ja
cmc
push
seta
sbb
mov
sub
inc
mov
inc
or
shl
mov
adc
cmp
cmp
nop
adc
wbinvd
iret
mov
push
push
and
mov
cmp
lods
pusha
xchg
xor
jmp
adc
xchg
lcall
jmp
adc
xchg
inc
push
testl
jo
inc
lret
hlt
aas
inc
dec
adc
cs
mov
in
gs
sub
loopne
inc
cmpsb
push
xor
mov
pop
inc
and
and
aas
js
xchg
scas
mov
xchg
in
stos
or
xor
push
xchg
mov
loope
push
icebp
sub
mov
cld
push
pop
xchg
pop
jno
sbb
imul
mov
stc
popa
daa
insl
push
adc
mov
inc
pop
pop
repz
and
fcompp
cld
jne
rcr
cmp
jae
dec
push
lret
mov
jle
adc
xchg
fcoml
cs
out
hlt
add
cmp
jno
push
adc
sub
shll
xchg
jbe
or
stc
xor
inc
in
sub
add
test
jne
dec
loop
xor
jae
data16
dec
xchg
popa
loope
fs
sub
mov
or
mov
or
pop
mov
and
cltd
xor
fcmovbe
mov
mov
pop
pop
push
test
mov
rcr
test
inc
adc
xchg
jmp
add
scas
mov
dec
test
jne
and
cmp
movsb
xor
imul
mov
adc
jmp
fbld
mov
xlat
sbb
and
loope
mov
shll
aam
mov
dec
in
and
xor
shl
dec
push
mov
out
mov
in
aad
nop
push
xor
subb
push
scas
mov
mov
pop
push
ds
mov
push
sub
shrl
iret
rorb
and
mov
daa
jbe
int
lcall
lea
clc
sbb
push
clc
jno
pop
inc
pop
arpl
ja
push
outsb
mov
sbb
mov
xor
mov
scas
cmp
call
jmp
push
jb
mov
xchg
repnz
test
jmp
lret
inc
push
jno
adc
mov
pop
sbb
jae
aaa
ss
push
je
cmp
inc
roll
pop
lods
xchg
xchg
xor
dec
mov
rorl
and
dec
mov
xor
loope
fwait
xor
or
push
sub
xchg
mov
push
pop
stos
mov
mov
xchg
cs
fiaddl
pop
xchg
mov
mov
xchg
adc
fldcw
dec
loope
jns
ror
xchg
fisubl
mov
pop
inc
jae
stos
int3
scas
pop
in
xlat
xchg
and
inc
and
sarl
mov
mov
and
jmp
jecxz
and
inc
cmp
push
ret
test
inc
insb
xchg
fisubrs
or
jl
inc
in
lahf
fcmove
or
loope
and
js
mov
int
push
nop
lods
add
out
lcall
fsubrs
fstp
cs
jb
stos
dec
popf
push
mov
add
scas
cmpsl
mov
cmp
inc
pop
ljmp
add
orb
adc
fcoms
pop
popf
in
dec
adc
jo
adc
call
pop
pop
into
test
insb
pop
jg
add
sbb
cltd
sti
dec
xor
adc
or
sbb
inc
loope
mov
mov
das
add
xor
mulb
test
call
xchg
lds
sbb
imul
scas
insb
pop
or
lea
or
imull
std
repz
add
repz
insb
cmp
ljmp
daa
sbb
xor
imul
mov
push
inc
ret
add
xor
or
jo
outsl
pop
ret
jl
filds
daa
mov
outsl
jmp
lret
imulb
xor
jbe
insl
icebp
out
aas
ficoms
jbe
inc
adc
mov
aas
xor
scas
mov
cmp
out
rcrl
loopne
xor
push
lds
cltd
in
jae
rclb
mov
dec
rclb
dec
mov
cld
jo
notb
mov
dec
inc
es
cmpsb
iret
cwtl
sub
lret
jnp
lock
xchg
pop
mov
and
mov
pushf
push
adc
cmp
jne
sub
xchg
mov
roll
aaa
stos
add
xorb
or
xor
mov
push
in
inc
mov
jns
pop
xchg
pusha
les
and
pop
sub
dec
clc
mulb
ret
xchg
stos
jecxz
jbe
ljmp
and
in
pop
stos
loop
aam
pop
pop
pop
rclb
push
ss
loope
shrb
mov
lret
pushf
dec
jmp
mov
clc
gs
mov
aas
xchg
loopne
push
adc
sahf
aam
push
jecxz
gs
adc
adc
mov
in
popa
pop
cli
jo
div
sbb
out
cli
push
xchg
add
dec
or
sbb
bound
lds
lret
push
inc
dec
enter
xchg
jmp
mov
pop
aam
stos
lret
jb
push
mov
test
mov
pop
scas
jmp
aad
add
subb
adc
hlt
inc
and
push
int3
in
cmp
xor
fcmove
ljmp
outsb
in
jg
ss
pop
lahf
xor
das
dec
cmp
loop
loop
sbb
mov
fxch
mov
jo
pop
arpl
adc
inc
xchg
js
inc
or
into
mov
adc
sahf
in
or
xchg
push
add
aas
shlb
or
mov
pop
aas
jmp
ds
push
jmp
lods
push
xchg
fmull
and
lea
push
jne
mov
push
inc
jp
or
inc
xor
xchg
hlt
std
aas
jbe
jp
call
mov
out
fldenv
ljmp
fs
rcrl
dec
mov
jb
loopew
pop
sbb
xchg
repz
aaa
addr16
cmp
mov
test
push
fnstenv
loope
lret
js
test
sub
call
mov
lcall
jmp
outsb
dec
add
stos
movhps
dec
push
imul
std
shll
cli
xor
add
pushf
negl
and
xchg
fimull
xchg
mov
aad
incl
sbb
mov
das
aad
cwtl
cmpl
imull
fmuls
orb
rcr
mov
xchg
mov
mov
pop
subb
mov
aas
sahf
shlb
pop
test
in
adc
xchg
cmp
xchg
aaa
or
daa
and
ds
in
pop
pusha
mov
jmp
andl
les
nop
and
sbb
inc
icebp
push
add
xchg
in
test
sub
cwtl
mov
pop
outsb
mov
dec
mov
pop
xchg
adc
cwtl
mov
data16
mov
xchg
xchg
xor
or
pop
fwait
mov
sbbl
pop
out
mov
andb
cltd
and
hlt
lock
adc
add
testb
in
mov
jle
femms
inc
call
pop
jnp
pop
rcr
dec
lret
cmp
mov
adc
insb
pop
jne
out
fsubrs
mov
ds
lock
aad
and
lds
cltd
xchg
movsb
cmp
rcl
iret
sbb
hlt
jl
push
in
jge
lcall
sub
arpl
ret
fsubrl
lret
inc
in
push
mov
dec
ficomps
in
popa
sahf
mov
inc
and
xchg
cltd
dec
in
aaa
push
lcall
imul
sub
inc
pushf
xlat
cmp
mov
dec
testl
pushf
sbb
mov
xor
test
adcb
ficoml
and
and
xchg
arpl
hlt
xchg
cmp
dec
data16
les
lods
repnz
cs
imul
push
pop
xor
dec
mov
imul
lahf
or
hlt
add
xchg
pushf
push
lahf
loope
add
orb
xchg
dec
lret
das
fsubrl
fists
std
icebp
roll
fistps
lea
into
push
negb
and
adc
js
or
mov
inc
jecxz
mov
add
push
aad
jge
mov
jns
mov
xchg
cmp
test
mov
xchg
sbb
xchg
sbb
fsubrl
inc
and
push
adc
dec
jns
pop
xor
or
test
inc
popa
push
lods
xor
lret
adc
cli
and
test
pop
xor
push
sbb
in
dec
jp
mov
in
inc
add
or
in
fldenv
jmp
aam
inc
push
jg
in
jmp
xor
ljmp
sarl
aas
test
xlat
loope
mov
fwait
data16
xor
daa
xor
and
aad
popa
dec
cs
xchg
cmp
and
add
cltd
or
dec
and
test
cltd
jecxz
xchg
cs
lea
insl
lods
lock
incb
and
push
mov
imul
xchg
bndstx
lahf
inc
xchg
mov
into
test
cmp
cmp
dec
jne
repz
loop
ja
fdivp
lock
in
addr16
in
pop
iret
ret
int
mov
sarb
mov
pop
pop
imul
adc
cld
sub
cltd
cmp
loope
xchg
mov
es
xchg
inc
mov
sub
sti
and
mov
sarl
aam
push
fbld
mov
imul
stos
mov
jl
xchg
sub
in
mov
jg
lods
jns
xor
js
cltd
leave
fcomi
aaa
adc
jns
insl
iret
cmp
add
push
mov
sahf
push
mov
aam
push
rol
lea
sbb
inc
inc
push
mov
testb
aad
mov
stos
cmp
stos
add
push
in
in
insb
pushf
imul
cwtd
data16
repz
jo
in
mov
sti
sbb
rorl
mov
arpl
cld
jle
imul
mov
sbb
dec
ss
imulb
xchg
mov
out
fs
lret
push
mov
int
lock
int3
mov
fs
jb
dec
repnz
mov
dec
xchg
adc
gs
rcrl
dec
mov
aam
xchg
xor
jmp
mov
jecxz
stos
lds
or
xchg
std
imul
cmp
bound
outsb
ja
in
add
and
cltd
fdiv
ds
daa
mov
lret
mov
lahf
sahf
add
sbb
sub
pop
outsb
push
jmp
adc
fs
icebp
iret
sbb
dec
lcall
stos
ficompl
inc
adc
fadd
lds
roll
arpl
dec
arpl
fists
dec
mov
lds
or
sub
test
mov
and
mov
enter
movsl
lret
shrl
inc
int
pusha
data16
divb
stos
inc
test
mov
test
adc
or
xor
icebp
pushf
pop
nop
fcmovne
sub
fmuls
dec
jnp
lahf
inc
icebp
and
cltd
add
mov
ret
xor
jecxz
fstp
lret
add
sbb
xchg
andb
fwait
jns
in
push
int
cmpsl
cld
xor
pop
dec
cld
jae
cltd
inc
fldenv
aas
cmp
test
pop
xor
and
ss
push
mov
jmp
sbb
mov
imul
adc
pop
mov
adc
jns
out
dec
push
jle
jl
sbbl
mov
popa
cmp
push
repnz
xor
icebp
aam
push
mov
sbb
fwait
sbb
fchs
repz
jge
mov
sub
lcall
mov
aaa
push
rclb
mov
jbe
add
into
jg
add
rcrl
push
sti
or
test
pusha
insb
xchg
pusha
test
mov
xchg
mov
push
scas
sbb
adc
mov
mov
push
jle
mov
scas
lods
repz
xchg
dec
das
enter
lods
clc
adc
rolb
push
in
mov
pop
cmp
movsb
xchg
mov
and
mov
pop
xchg
xchg
out
push
dec
test
inc
insl
xchg
jmp
lahf
mov
jle
rol
loopne
push
and
aas
or
dec
ds
adc
fcom
inc
push
xchg
pop
mov
jge
mov
test
xchg
cmp
cwtl
sbb
test
sahf
xchg
mov
mov
lods
loop
arpl
shll
bound
stc
inc
sti
lcall
xor
sbb
popf
sub
or
inc
es
cs
movsb
jnp
xor
in
pushf
mov
out
push
push
out
or
and
jne
pop
popf
mov
pop
sub
into
jmp
or
es
mov
pop
pop
sub
pop
sbb
andb
adc
mov
lahf
loopne
jmp
lahf
dec
sbb
or
mov
jg
mov
dec
lods
or
sti
outsl
xchg
and
and
iret
ret
rclb
push
mov
push
ret
rcrl
lock
push
les
jl
ret
gs
js
aad
mov
inc
add
test
dec
test
mov
push
and
pop
jmp
loopne
pop
or
inc
and
outsb
jge
jecxz
sarl
ljmp
stc
lea
mov
cmp
pop
jmp
mov
pop
das
mov
pop
into
jbe
in
jg
ss
jns
sbb
mov
insb
out
xchg
mov
push
in
std
pop
cmp
rcl
test
sub
pop
rclb
adc
lahf
daa
inc
and
adc
add
gs
pop
orl
or
popa
lock
push
sbb
insl
dec
inc
bound
mov
cmp
jo
sbb
hlt
dec
xor
add
sahf
stos
mov
or
push
or
out
cmp
inc
push
and
push
mov
fstpl
std
scas
xchg
shrb
mov
mov
pop
xchg
xchg
and
fistpll
data16
jl
cmp
fdivp
push
fwait
xor
or
fwait
incl
mov
cld
fimuls
xchg
mov
and
lds
repnz
mov
adc
mov
push
ja
xlat
dec
xor
or
inc
sbb
sub
cmp
int3
jb
mov
mov
mov
int3
sahf
xchg
or
dec
repz
cmp
out
xchg
sub
pop
sub
and
jns
enter
jb
cmp
sbb
jb
stos
xchg
mov
mov
dec
xchg
or
outsl
xlat
mov
sar
dec
jnp
pop
jge
inc
aas
mov
stc
push
sbb
xchg
test
mov
les
cmp
add
aad
cltd
movb
cld
es
jge
push
call
sub
hlt
jae
loope
jbe
sbb
sub
push
sub
jge
mov
cmpsb
gs
sbbb
loop
sbb
arpl
mov
imul
dec
jo
das
das
out
cmp
add
sbb
mov
or
xchg
stc
sub
in
jl
cmpsl
sbb
xchg
mov
testb
xor
idivl
cmp
pusha
repz
pushf
pop
repz
sarl
xor
out
and
or
xchg
std
sbb
lea
dec
dec
fisubrs
lret
mov
xor
pop
shr
adc
mov
repnz
pop
xor
std
stos
push
sub
xchg
das
and
cwtl
xor
cmpsb
xchg
inc
fxam
jge
push
jl
clc
cmpsl
jns
pop
repz
sub
xor
mov
cmpsb
imul
jle
mov
or
and
pop
mov
outsl
in
ret
je
push
stos
cmc
enter
lret
not
jae
mov
add
mov
dec
fcmovu
mov
inc
fs
pop
pop
stos
out
pop
push
xchg
xorb
and
add
or
dec
lahf
arpl
mov
pop
lods
push
les
les
fnstcw
push
and
sbb
fimull
push
sub
cmp
fidivl
pop
insl
shlb
lahf
push
cmpsl
dec
add
push
xor
lods
push
jb
dec
or
into
mov
movsl
cld
test
and
jnp
or
pop
jnp
cmpsl
rclb
jmp
ja
and
pusha
rcrb
fistpl
jl
imul
shll
push
sarl
movsl
aad
mov
jl
adc
ljmp
insl
xchg
ljmp
int
mov
cmp
adc
dec
dec
int
movsl
add
icebp
pop
fwait
addb
mov
sub
aaa
sub
sti
jo
ret
cmp
cmpb
mov
cmpsb
scas
mov
jb
dec
or
adc
shll
cmp
scas
add
add
lods
jo
dec
ss
sub
ss
xchg
or
pop
xor
lret
arpl
mov
sarb
outsl
cmpsb
xor
lcall
jp
shl
int3
frstor
lods
cmp
sub
lcall
lahf
ja
mov
mov
dec
imul
push
dec
mov
sbb
push
jne
mov
cs
add
sahf
lret
je
jo
cmp
jns
scas
scas
gs
loopne
sbb
mov
ret
js
ret
mov
pop
push
fnstcw
ds
or
insl
lds
popa
and
push
lods
push
je
jbe
jge
inc
hlt
adc
sbb
dec
jge
cld
data16
cltd
fmuls
insl
inc
outsb
dec
pop
fwait
roll
movsl
arpl
loopne
js
adc
mov
ror
fwait
mov
push
xlat
rcrl
mov
add
sub
push
inc
outsl
push
pop
lret
mov
push
aad
sbb
mov
lds
push
jnp
negb
test
inc
cmp
add
lods
into
mov
jo
incb
repnz
aam
dec
call
mov
jecxz
cmp
rclb
daa
xchg
fsubrs
test
mov
sbbb
jp
ljmp
push
xor
adc
sbb
xchg
mov
xchg
xchg
fisubs
xchg
jge
les
xchg
dec
sahf
call
pop
xorb
repz
repz
leave
cs
dec
mov
testl
mov
ljmp
lret
inc
bound
icebp
ficompl
pop
xor
pop
push
mov
fmuls
scas
xchg
pusha
repz
xor
test
add
lcall
mov
dec
das
xchg
add
test
and
jbe
inc
sbb
movsl
adc
bound
dec
xlat
outsb
ds
popa
push
xchg
sub
push
xchg
int3
inc
and
int3
leave
push
fsubs
std
inc
mov
mov
iret
xor
pop
addb
ljmp
scas
test
xor
xchg
into
push
pop
mov
sub
fcmovnbe
movsl
lds
sbb
mov
out
adc
cli
cmp
sbb
jl
ficomps
add
out
fs
push
push
imul
mov
aad
aad
aaa
ds
push
xchg
out
jle
pop
in
jae
sub
push
aad
ret
mov
adc
stc
and
push
dec
gs
adc
jns
outsb
insl
xor
sbb
ret
dec
ret
jp
jbe
pop
cmp
dec
dec
pop
xor
fstps
fs
add
enter
xor
ret
push
in
gs
mov
jecxz
or
dec
popf
add
mov
cmp
mov
mov
out
in
dec
mov
test
adc
push
add
in
stc
and
or
mov
push
in
jne
lahf
sub
movsb
jo
mov
xor
frstor
jmp
add
adc
stc
lret
ljmp
rcrl
jne
sub
fisubl
rcl
idivb
adc
sbb
inc
test
cmpsb
stos
xchg
imul
loopne
sbb
je
push
sahf
jmp
cmp
std
lods
jmp
lret
call
cwtl
push
jmp
mov
xchg
jne
cli
stc
in
es
rol
mov
std
add
dec
push
das
pushf
xchg
mov
cli
cwtl
mov
pop
lahf
push
loopne
stos
dec
push
inc
popf
shr
ja
lods
lret
outsl
jle
rep
aaa
inc
mov
jb
iret
pop
inc
jo
push
dec
cmpsb
jmp
add
mov
mov
sahf
dec
loop
inc
sbb
out
inc
and
ror
shl
inc
test
js
inc
push
mov
outsl
aas
dec
dec
iret
aaa
adc
jbe
xchg
fsubs
add
mov
mov
lea
into
cmp
andb
out
cmp
pushf
adc
popf
mov
ja
cld
mov
inc
and
cmp
inc
sahf
xlat
sbb
arpl
pop
repz
scas
into
mov
in
test
shrl
inc
jecxz
sbb
mov
jns
data16
sbb
mov
mov
adc
dec
stos
fistpll
int3
std
mov
out
add
push
adc
lret
xor
test
ja
out
lock
pop
push
stos
jns
movsb
add
mov
lcall
mov
jg
inc
or
and
cmovne
loope
xor
je
insb
inc
cmp
cmp
fs
jl
dec
cwtl
lock
cmp
les
lods
mov
push
lret
jo
add
fidivrs
and
and
outsl
mov
out
mov
addb
jg
movsb
femms
push
lcall
adc
nop
std
sub
nop
mov
and
and
sar
into
js
push
arpl
xor
cmc
jmp
dec
mov
cmpsl
ret
mov
cs
dec
sbb
sbb
lahf
jge
fdiv
add
leave
mov
ss
add
fisttps
push
shlb
mov
mov
mov
xchg
aad
sar
add
mov
xor
loop
mov
pop
sub
stos
les
mov
jg
mov
add
jmp
cmp
push
or
pop
hlt
mov
xchg
cli
int3
xchg
xor
dec
fsubrl
fwait
dec
adc
outsb
ret
sbb
shl
mov
add
xchg
mov
out
sub
incb
and
pop
inc
inc
jmp
sub
leave
sbb
mov
aad
xchg
cmp
cmp
push
adc
jne
scas
jb
push
cmpsb
mov
movsb
je
and
jle
mov
pop
cmc
rol
ret
push
pop
mov
imul
add
dec
mov
or
shll
ret
push
inc
sysret
test
pop
push
ljmp
or
push
and
mov
mov
and
sub
xchg
nop
jg
xor
aad
jp
dec
add
push
dec
outsb
call
push
xchg
dec
inc
mov
push
mov
pushf
cmp
xor
sub
push
fcompl
cmc
fsubrs
pop
rcr
dec
mov
les
rorl
jg
ret
lret
xchg
mov
jae
sbb
ret
aaa
xchg
idivl
inc
test
ret
sub
hlt
fwait
imul
outsb
out
arpl
fdivrl
dec
clc
or
mov
push
loop
loope
or
lret
jb
mov
jp
sbb
and
adc
aam
jnp
lret
jnp
pushf
pushf
sbb
aam
aam
test
ret
gs
mov
sbb
sbb
adc
cmp
call
lods
mov
sbb
jl
xor
push
add
movsl
mov
and
xchg
xor
pushf
push
mov
aam
mov
out
add
into
sarb
xor
pop
pop
loopne
test
mov
jl
test
mov
push
jns
mov
and
jmp
aad
and
cli
sub
ret
repnz
sub
cmpsl
dec
outsb
mov
push
and
into
or
add
enter
iret
xchg
dec
mov
fsubr
inc
adc
cmp
pop
fnsave
add
pusha
or
popa
xchg
xchg
xlat
sub
sub
dec
sbb
add
xchg
mov
lock
mov
stos
inc
repnz
jbe
test
rcrl
nop
mov
xlat
mov
pusha
push
sbb
lret
mov
cld
lods
call
outsb
sub
dec
shll
js
jl
dec
mov
xchg
sahf
and
cmp
or
mov
mov
mov
mov
mov
test
push
jecxz
ret
jmp
or
push
ret
cli
ja
xchg
sub
es
jbe
cmpsl
adc
fistl
dec
mov
mov
shlb
rcrb
loop,pn
decl
mov
push
sbb
xor
cltd
mov
mov
cmp
xorl
data16
into
pop
inc
mov
mov
mov
lret
stc
add
ds
ret
mov
nop
pop
xchg
shlb
mov
adc
daa
mov
rcrb
and
fsubrl
pop
bound
daa
lret
les
test
rorl
sbb
jmp
jmp
adc
ja
inc
out
repz
cli
and
or
and
jae
mov
adc
push
mov
ss
xorl
inc
aaa
ss
lret
hlt
pop
movsb
push
inc
fstl
das
mov
and
cmp
fcmovnu
xchg
xor
inc
fcoml
jo
inc
or
ss
je
and
inc
js
sub
jmp
daa
arpl
aaa
fnsave
adc
iret
sahf
mov
cltd
cmpsb
dec
push
sti
jbe
jle
sub
rorb
icebp
and
inc
adc
cmc
pop
mov
sub
or
hlt
fnsave
int3
or
and
leave
xor
addr16
in
xor
push
mov
imul
pop
repnz
mov
cmpsb
and
ss
add
loopne
jge
mov
stos
push
inc
lods
push
sbb
mov
fildl
ret
mov
push
jl
jle
out
in
int
push
insb
ret
jecxz
sti
aam
adc
js
aam
ss
jecxz
inc
jmp
mov
enter
out
lock
or
xorb
ds
stos
mov
xchg
inc
inc
adc
jns
push
xchg
out
cwtl
cltd
roll
add
repnz
mov
icebp
and
add
int
imul
sub
ficoms
or
ja
fwait
pop
dec
push
xchg
mov
jmp
push
shll
dec
xchg
fidivs
addr16
mov
not
mov
sbb
push
lds
inc
cmp
sbb
push
mov
out
adc
in
and
jo
icebp
dec
fidivl
or
jmp
and
jmp
push
out
jo
sbb
xor
and
aam
pop
push
dec
cmp
push
test
movb
aaa
mov
stc
push
leave
daa
xor
xchg
mulb
dec
push
ss
aaa
xchg
sub
rcr
or
xchg
and
popf
testb
cmp
sbb
cmp
push
sti
pop
or
sar
cmpsb
add
call
mov
fidivrl
xor
inc
xchg
neg
movsb
inc
mov
sti
insb
or
fisttpll
mov
in
cmp
jae
inc
dec
in
fiadds
scas
icebp
mov
dec
inc
outsb
dec
dec
jl
cmc
xchg
dec
or
and
xchg
int3
jle
sbb
aam
pop
in
sub
int
scas
mov
inc
andl
cmp
xchg
std
inc
clc
cwtl
leave
xchg
add
or
out
jne
adc
ffree
lock
test
fcoms
das
aam
popa
out
lret
sub
cmp
cmp
jp
mov
scas
mov
pusha
adc
pop
inc
stos
imull
testb
xchg
add
imull
movaps
and
sti
popa
insb
add
int
out
loop
ljmp
add
mov
pop
leave
sahf
leave
movsl
into
rcl
icebp
sub
sahf
pusha
test
sub
push
pop
mov
dec
into
or
sbb
mov
in
enter
xchg
xor
das
jbe
stos
jae
push
or
int
adc
xchg
bound
inc
jns
mov
xchg
call
pop
mov
test
sub
push
scas
jbe
gs
fistpll
ss
xor
jge
clc
lods
test
mov
adc
jnp
addr16
ficoml
and
enter
xchg
xchg
das
mov
add
call
jno
pop
loop
xchg
add
xorb
push
mov
std
xor
test
rcr
fidivrl
xor
sti
mov
ss
and
sahf
fbld
pop
cs
sarl
dec
adc
jecxz
xor
neg
pop
enter
dec
repnz
dec
shlb
mov
mov
sti
lret
sti
imul
add
pop
in
in
lods
inc
adc
mov
mov
mov
jge
xchg
mov
and
roll
in
out
fwait
pushf
das
xor
sar
push
pusha
iret
pop
icebp
adcb
xchg
jg
push
iret
ja
cmp
add
ret
loope
in
inc
mov
xor
sub
pop
leave
xor
sbb
int3
cwtl
sub
imul
xor
addr16
mov
dec
bound
ret
call
mov
xchg
xchg
popf
cwtl
jo
push
or
xor
xchg
adc
stc
xchg
dec
adc
xlat
aaa
jp
mov
fstl
inc
xchg
adc
push
jne
arpl
adcl
icebp
inc
cmpsl
xchg
dec
jg
mov
adc
adc
push
pop
pop
and
xchg
jns
pop
leave
lret
adc
xor
xchg
add
xchg
push
xchg
mov
mov
push
enter
push
daa
pop
pusha
dec
push
rcrl
xchg
adc
fs
popf
pop
mov
fistps
aam
or
in
or
fcmovb
mov
divb
mov
mov
das
test
test
shl
pop
movsb
imul
add
in
insl
sub
sbb
sub
xor
and
mov
fisubrl
mov
imul
mov
cmpsl
and
rorl
rorb
push
adc
jp
sub
pop
ficoml
dec
fnstenv
mov
sbb
inc
outsl
enter
sbb
lea
add
fisubrl
inc
pop
je
daa
mov
repnz
ds
int
nop
iret
mov
or
and
pop
cmp
scas
gs
dec
stos
stos
inc
sbb
out
jne
pop
lods
mov
adc
adc
jnp
cmpsb
mov
mov
leave
test
das
ret
xchg
sub
rorb
mov
ret
cmc
in
hlt
sbb
jbe
jl
in
in
dec
sub
sub
mov
sbb
into
push
test
jne
add
mov
add
and
adc
rorb
dec
imul
leave
int
mov
rcl
adc
sbb
xor
in
mov
push
mov
sub
addr16
push
pop
aam
test
pop
or
movsb
out
leave
mov
xchg
mov
xchg
jge
dec
push
xor
jbe
fmuls
mov
dec
fimull
jb
mov
in
inc
fs
scas
popf
sbb
cltd
push
jmp
scas
dec
mov
scas
push
lret
sbb
pop
cwtl
mov
sti
imul
pop
call
pop
push
or
add
bnd
mov
cwtl
and
add
pop
xchg
lret
ljmp
lret
mov
xchg
pushf
sub
out
das
or
and
popf
or
pop
push
mov
mov
dec
aad
pop
in
data16
scas
out
jo
cmp
sbb
mov
shll
out
add
xor
aam
pop
mov
jb
shrl
inc
movsb
mov
xorb
mov
pop
jne
neg
mov
outsl
dec
rorl
push
jge
and
lods
xchg
mov
dec
leave
pop
jecxz
je
push
push
mov
hlt
mov
add
xchg
cmc
push
std
test
sbbl
pop
sub
xor
adc
jne
inc
outsl
int
hlt
popa
mov
fcmovnu
pop
test
test
mov
jl
loop
fdivrp
outsl
cmp
jecxz
pop
cld
mov
movsl
je
dec
pusha
mov
jb
cld
push
data16
out
imul
and
mov
sbb
xchg
xchg
xor
mov
stc
xchg
xchg
outsl
and
aas
ds
jecxz
adc
push
out
cwtl
xor
mov
xor
and
scas
xor
mov
mov
arpl
pop
fdivr
xchg
imul
push
aas
pop
das
cmp
ljmp
push
mov
and
dec
dec
xor
inc
insb
dec
insl
fistpl
imul
push
or
add
imul
repnz
mov
adc
jne
mov
dec
inc
cmp
loopne
or
rcll
mov
push
int
jmp
lods
repnz
dec
push
popf
fiadds
out
sub
add
mov
or
mov
scas
in
adc
dec
insl
inc
xchg
pop
out
or
jle
pop
cld
mov
jp
or
and
je
mov
inc
rcrl
sub
sub
dec
shlb
push
mov
arpl
clc
mov
mov
mov
add
iret
push
daa
push
push
mov
pop
js
call
jns
cmp
or
adc
cmp
hlt
das
rcr
shll
shl
mov
gs
test
fistpll
push
xor
hlt
test
ret
popf
lahf
out
sub
aad
pop
or
dec
mov
dec
lods
mov
cmp
mov
clc
inc
test
push
jne
movsl
adc
rolb
mov
pop
shlb
pop
vmread
push
clc
ret
jle
ljmp
in
lahf
fdiv
jmp
and
popa
jae
mov
cmp
mov
mov
push
mov
loop
cmp
pusha
jge
xchg
cmc
jae
adc
pop
testl
jecxz
lods
les
pop
push
sar
mov
xchg
sbb
sbb
test
fimuls
lret
mov
cmp
lods
jecxz
push
fs
jmp
push
test
fstl
jbe
sar
lock
mov
mov
nop
nop
mov
add
out
xor
into
xor
inc
sarb
mov
repnz
push
pop
xor
arpl
leave
adcb
mov
sub
fldl
add
cmp
or
xchg
inc
adc
lock
aas
pop
pushf
push
sbb
or
dec
xchg
push
cmp
and
and
or
pusha
je
sbb
jg
pop
in
leave
jae
mov
cmpl
pop
dec
aaa
dec
pop
mov
xor
test
push
add
sub
pop
adc
mov
sub
dec
mov
jne
xchg
mov
cmp
jge
sti
dec
insb
sub
nop
ret
cwtl
mov
and
mov
cmp
mov
push
test
jno
pushf
bound
adc
leave
bound
sbb
fcomps
mov
mov
cltd
push
aam
fwait
call
cmp
mov
pop
in
push
jb
fnstsw
shll
cmp
popf
jg
mov
aad
jg
pop
mov
dec
mov
cmp
decb
cwtl
loope
roll
jne
in
dec
xor
xchg
or
scas
add
js
mov
out
jge
das
xor
push
in
es
out
es
xchg
pop
push
mov
xor
and
inc
fdivp
xchg
mov
sbb
xchg
aaa
std
scas
pop
adc
jbe
sub
adc
mov
mov
cmpsb
data16
fsubs
lods
aad
adc
mov
cmp
add
iret
pop
in
jae
fsubr
cmpsl
jb
push
cmp
jl
mov
cmpsb
arpl
mov
jne
add
addr16
clc
shll
pop
ljmp
xor
xchg
pop
out
xor
clc
mov
jb
jle
outsb
movsl
movsb
out
push
cmpsl
push
loop
rol
int3
adc
rcrb
jnp
and
or
inc
loop
lock
pusha
mov
popf
fs
xor
mov
pop
xor
enter
add
andl
adc
ljmp
add
mov
and
aas
mov
or
adc
push
js
shlb
imul
mov
jno
imul
push
sbb
std
mov
mov
push
rorl
jecxz
lea
mov
out
pop
sub
push
dec
icebp
jnp
mov
ror
mov
pop
aad
sbb
mov
mov
and
ret
ds
fstps
cmc
mov
mov
add
mov
ljmp
movsl
cmp
ja
lock
es
bound
and
repz
dec
xchg
repz
dec
movups
jg
imul
pop
pop
push
test
repz
cmp
mov
repnz
dec
sbb
aam
shll
push
mov
aas
push
jl
jae
xchg
cmovge
jmp
push
leave
jae
xor
icebp
xor
xor
arpl
inc
push
dec
push
clc
xor
es
rorl
insb
adc
cmpsb
into
mov
stos
pusha
xlat
call
sbb
roll
int
sti
in
stos
xor
out
std
xchg
insl
fsts
dec
in
test
arpl
xchg
sub
test
ljmp
mov
mov
xor
sbb
add
adc
xor
movsl
dec
sbbl
xchg
movsb
jmp
inc
adc
inc
mov
mov
inc
ficompl
or
cwtl
mov
movsb
shll
and
sbb
adc
mov
cltd
sahf
lock
cmp
ss
arpl
movsb
mov
sub
mov
inc
addl
outsl
fnsave
pop
mov
mov
jne
lret
popa
test
adc
add
xchg
icebp
lea
add
pop
aad
or
js
sti
inc
and
enter
fs
pop
mov
iret
stc
jo
sbb
cmp
leave
cmpsb
push
lcall
or
xor
loope
push
stos
cs
pushf
in
push
or
sbb
mov
movsl
xchg
subb
std
frstor
ds
and
daa
bnd
mov
mov
xor
inc
cmp
out
ret
or
dec
pop
xchg
add
or
dec
pop
sti
sbb
cli
ret
lods
addr16
andl
sti
aaa
dec
fbstp
jle
lea
mov
push
pushf
nop
lahf
das
pop
xchg
std
mov
stc
mov
repz
popf
xor
push
push
xchg
pusha
lret
xchg
xor
sbb
scas
jecxz
mov
xchg
mov
lock
out
das
ret
adc
sbb
mov
test
sub
ss
lods
sub
cmpsl
repz
mov
xchg
enter
sub
push
loop
jb
in
bound
iret
cs
jg
sub
jo
daa
cld
bound
cwtl
pop
loope
jno
ljmp
pop
lock
add
and
jp
out
sarl
mov
cli
imul
out
loop
adc
xchg
daa
repnz
add
cs
adc
mov
jg
xchg
loop
arpl
push
repz
or
stc
mov
popa
add
jle
add
js
mov
xor
mov
jne
shl
push
and
xlat
add
xor
movsl
sub
jp
jle
cmpsb
adc
test
jb
aas
jmp
call
gs
push
mov
sbb
sub
ljmp
enter
gs
add
xchg
fcoml
cmpsl
fwait
movsb
mov
push
pop
sub
pushf
sub
add
shrb
bound
pop
dec
cli
jmp
adc
mov
or
xor
mov
sbb
popa
and
mov
movsl
mov
jl
scas
sub
cmp
repz
in
cmpsl
sub
xchg
mov
scas
jnp
pop
xor
je
cmp
dec
sbb
in
mov
mov
into
nop
daa
mov
add
sub
inc
ret
sub
push
mov
xchg
xchg
insl
adc
jge
pop
fwait
je
iret
imul
stos
loope
sbb
push
in
andl
adc
arpl
push
idiv
add
sbbl
jo
xchg
xor
xor
push
inc
xchg
mov
xchg
push
aaa
adc
add
aaa
xor
xor
pop
and
sahf
in
scas
fistl
arpl
inc
subl
xor
fmul
xor
stc
lea
and
jns
fisttpll
sti
test
jg
sub
jne
sub
call
xchg
dec
add
mov
mov
dec
mov
and
arpl
mov
sahf
mov
mov
mov
inc
cs
adc
stos
pop
xor
bound
add
and
movsb
jns
fidivl
cltd
sub
adc
xrelease
imul
xchg
pop
mov
dec
jns
sub
incl
xchg
pop
pop
scas
leave
js
stos
fnstenv
pusha
push
cmc
sub
out
loope
outsb
jo
data16
fidivrs
xchg
ja
mov
add
sub
jle
movsl
jnp
repnz
ja
add
ja
shll
enter
jp
adc
push
je
jge
stos
add
sbb
inc
orl
popl
inc
fnstenv
cld
outsb
insb
sahf
mov
lcall
xor
dec
pushf
sbb
xchg
out
mov
mov
mov
clc
out
xor
nop
fldenv
mov
js
mov
push
add
iret
lahf
mov
xchg
dec
jg
jge
hlt
cmp
sti
jle
jns
insl
xchg
lahf
add
aam
outsl
xchg
inc
in
addr16
mov
mov
and
ljmp
adc
aad
popa
pop
imul
out
cmp
inc
xchg
out
xor
inc
pop
addl
mov
popl
movsb
add
out
dec
into
sti
clc
mov
fs
cs
pop
scas
sar
insl
inc
cmp
or
loope
ljmp
fs
in
mov
rorl
vfmaddsub213pd
mov
sbb
mov
mov
pop
jnp
jle
mov
push
aas
xchg
or
ljmp
cltd
imul
xlat
or
stos
jg
in
or
addr16
jb
sbb
adc
out
testb
ret
lds
sub
xor
enter
add
nop
outsl
jo
popl
sub
sub
andl
push
repnz
fsts
stos
jb
lahf
sbb
mov
add
or
clc
sbb
xorl
mov
mov
iret
std
imul
out
dec
subl
mov
push
pand
repz
xchg
shrl
mov
pop
add
mov
add
mov
in
xchg
jae
test
pop
bound
or
dec
in
xchg
mov
and
in
cmpb
ss
jg
xor
pop
fidivl
xchg
and
mov
shll
push
mov
bound
push
add
mov
cmp
bound
push
sub
rep
mov
mov
ret
mov
jae
aam
stc
push
add
ret
repz
repz
push
and
and
std
cli
and
mov
adc
in
insl
or
int
ss
dec
insb
jb
sub
inc
xchg
push
cmp
jp
sub
push
xor
pushf
cmp
push
jecxz
cmp
lret
outsb
jns
mov
adc
mov
movl
xor
mov
xor
adc
push
pushf
add
dec
jo
fisubs
xor
xor
xchg
rorb
sbb
adcb
test
mov
mov
pushl
or
jmp
icebp
movsb
jecxz
das
cmc
mov
call
pop
pop
mov
xchg
ds
outsb
fidivs
nop
pop
fs
or
inc
es
das
jnp
pop
idiv
imul
pop
ffreep
cmp
scas
jg
mov
cmpsb
adc
xor
xor
pop
mov
jnp
imul
cmpsl
scas
lods
inc
jecxz
gs
out
and
sub
mov
mov
shl
in
ss
out
pushf
fmuls
inc
arpl
ja
fwait
aad
ds
xlat
mov
ljmp
push
or
cmp
and
and
js
cmpsb
and
sqrtps
popa
and
sub
in
sbb
pop
idivb
jns
mov
mov
pop
push
mov
and
lcall
lds
or
insw
or
xchg
adc
call
loop
addr16
cmp
daa
sbb
xor
jecxz
mov
ljmp
cmpb
call
out
imul
xchg
insb
fiadds
in
dec
push
movsl
es
cmp
data16
sbb
pop
jbe
cltd
lcall
loop
or
cmc
pop
xchg
rcrb
fstpl
lds
sub
fisttpl
and
pop
inc
pop
inc
shlb
call
cld
inc
ljmp
test
int3
fstpt
mov
stos
inc
cmp
cmpsb
test
sub
stos
sahf
out
ds
test
adc
cmp
and
sti
cmpsl
clc
rcl
inc
push
in
xor
ficoml
imul
sti
hlt
loope
mov
add
ja
mov
lahf
pop
inc
sub
xor
arpl
xor
lock
gs
pop
push
jecxz
fmuls
in
inc
or
sub
sbb
movsb
and
jge
pop
aas
mov
xchg
mov
or
pop
dec
jb
cwtl
xchg
inc
rorl
jne
inc
ja
test
repz
int
test
andb
cwtl
mov
js
or
stos
sub
xchg
add
es
or
jno
pop
pusha
push
xor
mov
mov
add
sahf
movhps
pushf
or
jns
jae
jne
xchg
shlb
adc
push
mov
push
xor
mov
mov
xor
add
xchg
sub
int3
stc
jae
aad
lret
push
leave
xchg
cmpsb
adc
cmp
fstps
inc
lret
mov
dec
cmp
and
or
hlt
lds
add
adc
mov
stos
test
xchg
cmpsl
adc
out
inc
sub
outsl
bound
inc
filds
xor
xchg
mov
loop
test
mov
outsb
lret
in
push
xchg
cltd
shll
fildll
or
lcall
xchg
ret
pop
bnd
mov
inc
sub
jo
rol
mov
addl
xchg
mov
les
dec
aaa
pusha
pop
stos
aas
pop
outsb
les
mov
aas
pop
movsb
fldcw
lret
test
sti
adc
dec
lock
repz
pop
ret
jns
dec
in
mov
mov
and
ret
pop
in
out
out
xchg
mov
push
xchg
jl
popa
xchg
mov
mov
icebp
fcmovnb
mov
lds
or
and
insl
mov
mov
or
xchg
jmp
adc
mov
std
mov
jae,pt
pop
sti
xchg
outsl
out
dec
sbb
jecxz
addr16
outsl
xchg
pop
dec
data16
sarb
pop
push
xlat
lock
or
call
add
mov
imul
adc
xor
jp
pop
inc
xor
insb
imul
insb
fldenv
sbb
cmp
popf
loope
sti
cs
mov
sbb
fwait
out
xor
push
add
lods
clc
xchg
cmp
fildl
ds
xor
sub
ljmp
loop
loopne
out
lds
insb
push
repnz
cltd
mov
dec
mov
jmp
in
stos
mov
dec
push
dec
jo
pusha
pop
mov
jne
stc
in
mov
lcall
inc
xor
jge
sbb
scas
cmp
shlb
lods
hlt
pop
pop
cld
xchg
leave
mov
pop
lret
sbb
mov
out
clc
mov
mov
add
das
jmp
jmp
jp
insl
cli
or
je
cmc
out
jl
mov
ss
pop
mov
hlt
push
xchg
mov
dec
sarb
push
loopne
je
or
xchg
cmpsb
push
clc
jo
neg
lods
in
mov
cmp
test
xchg
scas
add
push
inc
sarb
ret
mov
ss
mov
cli
mov
ret
ret
rorl
jg,pn
cmp
jge
jg
inc
loope,pt
jp
jbe
mov
out
sbbl
cmpsl
add
cmp
xor
and
or
mov
cmp
add
icebp
adc
jmp
cmp
push
and
ud0
mov
add
aam
test
pop
icebp
adc
inc
loope
leave
sub
mov
cmp
jbe
cltd
lds
fstps
movsl
mov
pop
or
mov
ret
nop
xor
fidivrl
cli
dec
fbstp
call
test
sbb
lea
mov
ret
inc
cmp
and
and
cmp
jp
and
mov
out
xchg
hlt
cmp
lods
xchg
test
dec
jnp
mov
es
ja
mov
add
xor
jg
xor
pop
sub
out
xchg
mov
lock
flds
push
es
inc
subb
cwtl
push
icebp
push
xlat
loope
mov
fisubs
popa
sub
faddl
adc
and
rorb
cmpsl
lahf
xchg
inc
mov
sti
outsl
mov
inc
cwtl
xor
inc
out
jmp
int
fldt
pop
fnstcw
sarl
pop
inc
dec
loopne
shrb
loop
inc
lock
or
pop
fmull
pop
roll
outsb
dec
cmp
dec
or
mov
mov
dec
mov
sbb
mov
adc
xor
push
sbb
xor
aas
out
jmp
imul
add
sbb
test
es
jo
testb
scas
dec
mov
and
mov
stos
pop
fidivrl
cmp
setl
and
lods
adc
fsts
or
mov
les
jp
lods
repnz
cs
in
mov
push
inc
in
mov
adc
push
sbb
or
push
psrlw
sub
ss
mov
scas
fs
pop
popl
repnz
pop
pushf
sub
lcall
lock
push
or
or
jo,pt
popa
faddl
imul
jo
cld
jb
mov
sub
aas
jo
cmp
cmpsl
dec
inc
push
js
xor
daa
mov
mov
mov
fistpl
out
jno
ja
imul
or
xor
mov
repnz
clc
jae
mov
in
mov
lock
imul
sti
cmp
xor
pop
inc
mov
incl
xor
les
popf
int3
pop
lock
out
sbb
cmp
fmull
cwtl
and
pop
mov
xchg
mov
xor
sub
insb
repz
sub
xchg
iret
out
or
push
cld
scas
push
mov
adc
ret
push
mov
ret
sub
std
pop
mov
add
adc
shll
add
xchg
and
popl
jecxz
imul
fimull
aaa
sbb
mov
shlb
sub
jne
cmp
fisubs
xchg
mov
test
mov
mov
jns
es
sbb
fdivs
outsb
sub
mov
dec
test
xor
mov
add
lea
add
adc
jle
xchg
jbe
push
lret
into
lahf
stc
inc
int3
jne
fldenv
mov
and
das
clc
fwait
das
cmp
leave
or
rolb
dec
mov
dec
and
jg
cmpsb
scas
jle
xchg
adc
pop
pop
jne
sub
stc
jecxz
pop
lds
and
fstps
call
negb
movsl
scas
movsb
sti
test
jo
mov
aad
inc
mov
adc
dec
fistps
pop
mov
push
mov
lock
in
push
cltd
adc
cmp
mov
add
sub
fucompp
dec
enter
hlt
push
pop
jge
xchg
add
in
pop
xchg
bound
dec
push
ret
add
push
add
mov
mov
jns
leave
inc
mov
inc
inc
inc
loop
push
push
cld
addr16
sahf
sbb
imul
jae
loope
lds
mov
imul
cltd
cmp
dec
hlt
sub
xor
xor
pop
pop
stos
adc
mov
pop
cmp
sti
jb
jl
lea
mov
mov
pusha
flds
pop
inc
sbb
call
fsub
pop
push
sub
jbe
loopne
add
fisubrl
or
pop
sub
cmpsl
inc
movsl
insb
jl
mov
sub
outsb
inc
adc
repnz
lahf
test
lods
jle
xorl
adc
ljmp
cmc
arpl
cli
sub
jne
jbe
lock
mov
arpl
add
dec
imul
mov
xor
insl
adc
js
enter
in
ret
fldl
addr16
in
icebp
filds
mov
pop
imulb
push
mov
xor
push
movsb
cmp
call
out
cmp
lods
dec
cmp
mov
clc
mov
int3
rorl
sub
xor
adc
pop
xchg
mov
pop
out
sti
daa
jns
rolb
inc
sbb
cmp
addl
push
mov
or
or
inc
pop
mov
sbb
mov
mov
loopne
mov
lahf
push
flds
incb
daa
dec
repz
sbb
mov
nop
loope
into
push
and
std
push
test
imul
insl
lock
fs
cli
jmp
xorb
aam
lahf
iret
cmc
adc
roll
and
mov
aam
daa
or
pop
js
shl
xchg
adc
xlat
push
dec
mov
mov
pop
cltd
xor
rorl
cmpsl
aaa
mov
fs
add
ficompl
cltd
jb
lods
outsb
push
dec
test
inc
loope
pop
out
shr
rcrb
das
lods
int3
mov
enter
sbb
outsb
in
mov
pop
pop
vmwrite
outsb
dec
in
fsubrs
mov
rcll
or
arpl
inc
movsl
ss
and
sti
xor
xchg
cmp
rcrb
pop
mov
pop
data16
push
repnz
in
rcll
stos
sub
sti
dec
xor
and
and
or
xor
pop
xchg
sub
ss
dec
les
add
lea
xor
mov
aaa
dec
mov
fwait
push
dec
icebp
rep
pop
test
sbb
push
daa
pop
xchg
jp
testb
lret
addr16
popf
xor
out
jno
cmpsl
fxch
pop
icebp
dec
lahf
mov
jg
jecxz
and
movsl
and
incl
pop
jle
sbb
add
fnsave
enter
pop
and
add
mov
mov
fcomi
cmp
adc
shrl
adc
rcll
push
pop
sub
inc
in
scas
adc
scas
mov
mov
mov
and
fimuls
lret
xor
add
and
cmp
cmpsb
mov
mov
iret
push
les
out
mov
push
out
imul
es
loop
cwtl
test
push
sbb
push
ret
iret
xchg
add
das
xchg
xchg
add
notb
pusha
dec
inc
into
inc
sub
xor
mov
mov
lds
cmp
fisubs
push
stos
fbld
inc
mov
shrl
loop
adc
in
sub
mov
sub
cmp
push
rcrb
sub
cwtl
mov
bound
dec
stc
test
pop
sbb
dec
hlt
hlt
pushf
cmp
call
mov
lcall
repz
xor
inc
orb
sahf
sahf
mov
xor
mov
sbb
shrb
xchg
leave
add
insb
dec
fs
pop
xor
xor
ret
in
rcll
or
sbb
inc
pop
mov
and
fwait
push
lock
call
adc
out
jmp
jp
lcall
xchg
pop
sub
add
mov
out
add
jne
mov
ss
stc
gs
movsl
mov
into
xchg
lret
cld
add
mov
or
xchg
mov
mov
decb
adc
and
mov
popa
sahf
and
aaa
aam
fstp
mov
inc
mov
mov
add
mov
jge
or
loopne
in
fs
push
mov
es
mov
ret
sbb
test
xor
sub
loop
rclb
adc
clc
movsl
jl
mov
jnp
ds
loop
into
lahf
cmp
in
mov
cmp
jecxz
popf
cwtl
pop
pop
pop
mov
sbb
iret
inc
fisubs
or
adc
cmc
ficoms
dec
dec
ljmp
arpl
enter
lods
jns
add
or
jb
in
pop
mov
clc
lods
shrb
pop
cmp
lret
rorb
cmp
std
mov
int
out
xor
cli
or
jns
or
lret
movsl
xor
or
mov
ds
and
push
fbld
jb
adc
sti
repnz
imul
xlat
ljmp
push
push
push
push
fwait
imul
push
cli
mov
or
call
lea
pop
mov
dec
sub
add
sub
jle
loop
inc
or
lock
enter
call
adc
and
inc
data16
pushf
lcall
push
sbb
adc
jno
mov
pop
dec
mov
lret
in
out
pop
bound
add
push
adc
loop
mov
fdiv
ret
cmp
js
push
add
lds
in
stos
lock
fimull
mov
xor
ret
add
adc
pop
imulb
add
jl
push
movsb
adc
jbe
in
popf
dec
mov
xchg
sbb
repnz
into
add
sahf
int
andl
and
mov
mov
sub
mov
cwtl
xchg
push
xchg
lsl
push
insl
jg
cltd
mov
lcall
or
mull
ret
push
dec
xor
stos
aas
lret
mov
jb
pop
mov
insb
stos
in
mov
mov
outsl
fiadds
or
in
in
in
jnp
mov
mov
cmp
call
outsl
mov
jg
jmp
adc
sub
imul
sti
mov
scas
mov
popl
mov
xchg
in
div
pushf
sbb
cmp
xor
popa
in
sub
adc
adc
fndisi(8087
js
cltd
sbb
in
pushf
clc
add
stos
pop
push
movsb
lret
push
mov
cli
inc
je
sub
jge
jecxz
push
xchg
jge
imul
sti
iret
test
cmc
mov
enter
mov
popa
xchg
outsb
stc
int3
inc
inc
cld
mov
jns
rclb
arpl
xor
dec
movsb
fcomps
xchg
scas
and
iret
xchg
lret
fst
sti
dec
int
idivb
iret
push
push
add
pop
imul
and
daa
sbb
in
aaa
mov
jne
xor
xchg
mov
xor
ret
mov
xor
pop
subb
mov
add
fadds
into
aaa
outsl
jecxz
in
cwtl
mov
ss
les
dec
andl
jno
cmpsl
shl
addb
adc
mov
pop
ret
scas
sti
inc
hlt
mov
xchg
jecxz
xor
fdivrs
and
fistpll
xchg
das
iret
jb
mov
es
cli
inc
sub
adcb
xchg
sbb
into
dec
mov
jmp
lret
xchg
stos
cmp
mov
push
sbb
cmp
mov
and
mov
mov
out
imul
xlat
enter
aad
cs
sub
in
lods
movb
test
inc
xor
enter
xchg
xchg
mov
aaa
sub
scas
leave
jb
cmc
fsubrp
test
add
xchg
popa
push
inc
nop
xor
repnz
sbb
add
push
inc
cmpsl
sbb
into
cmp
fwait
ljmp
jp
sub
mov
insb
dec
pop
xlat
sub
jge
push
in
les
inc
push
mov
or
lock
jns
mov
aad
and
sahf
mov
fcom
int
inc
push
adc
gs
xchg
aad
xchg
call
xor
cmp
mov
lret
cs
dec
in
push
clc
xor
xor
sbb
pop
dec
push
loope
jl
and
loopne
jo
jle
mov
xor
add
daa
or
addb
and
pop
stos
iret
push
pop
loopne
nop
popf
rorb
xlat
imul
in
data16
push
or
pop
ficomps
mov
jecxz
mov
jo
xor
pop
mov
cmc
or
insb
fadd
dec
and
imul
or
push
pop
lret
xchg
fisubrs
pop
fidivs
je
out
dec
loop
fstpl
iret
or
sbb
imulb
into
mov
loop
les
adc
inc
xor
cmp
mov
in
add
mov
jno
sarb
xor
dec
mov
push
cld
out
mov
cli
jo
mov
or
cli
lret
mov
test
fwait
sub
or
cmp
mov
fmulp
xor
push
mov
cmpsb
push
aam
xchg
adc
mov
int
or
xchg
cld
jmp
cltd
jg
notb
daa
cmp
mov
in
js
xchg
fisubl
test
js
and
fisubrl
adc
arpl
scas
fisubs
test
orb
ficomps
dec
mov
ret
sbb
push
dec
cmp
add
ficompl
ret
add
lock
stc
jno
in
xorl
cli
gs
rclb
xlat
es
mov
or
lods
popf
inc
xor
xchg
in
ljmp
and
adc
jns
in
xor
addb
dec
push
sub
or
jl
js
aam
jno
and
leave
xlat
inc
or
mov
insl
pop
pop
mov
test
fwait
mov
push
inc
sti
dec
add
sub
out
jp
in
or
aam
add
and
mov
mov
sbb
out
into
lret
lods
cs
ret
mov
inc
dec
aad
call
leave
andb
movsb
rorl
in
push
out
cmpsl
sub
loopne
fs
mov
push
out
repnz
and
jp
pop
in
out
pop
cmp
cmp
sub
jmp
mov
in
fs
add
mov
insb
shlb
pop
mov
adc
popf
sarb
pop
test
mov
xor
push
cs
ffree
shrl
mov
fdivrl
fidivl
add
dec
push
jae
pop
dec
xlat
insb
adc
sti
clc
pop
aas
fldcw
pop
mov
or
out
aam
cmpxchg
fs
inc
cmp
xor
add
jmp
scas
jmp
jl
add
iret
xor
xchg
cmp
into
jge
dec
pop
fistpl
xor
imul
repnz
adc
mov
aas
out
jmp
clc
jmp
mov
push
aad
sbb
out
insl
idivb
or
jle
mov
jl
and
mov
dec
xchg
mov
jo
lea
mul
shlb
jmp
jnp
outsb
xchg
add
pop
outsb
int
or
adc
not
ja
lea
es
pop
cmpsb
call
jl
shl
ljmp
xchg
icebp
fdivrs
mov
outsb
dec
imul
sbb
es
testl
repnz
jo
lret
push
xorl
sbb
fisubrs
mov
xor
in
push
je
dec
popa
mov
and
lods
push
mov
inc
push
repz
pop
andl
mov
repnz
mov
outsb
loope
das
ret
adc
insb
mov
sbb
ret
fstps
pop
cwtl
movb
sub
jg
stos
sbb
aas
cmp
leave
dec
cs
loope
xchg
aas
pusha
lods
adc
or
lods
popa
adc
ljmp
mov
popa
adc
out
mov
xchg
nop
jae
cmpsl
cmp
pop
lret
mov
stos
push
mov
mov
xchg
sub
jecxz
cmp
sbb
or
or
fnstenv
dec
adc
push
jae
movsb
daa
inc
lods
mov
cmc
xor
push
xchg
push
xchg
jae
add
push
jbe
jne
mov
in
ficomps
wrmsr
jns
mov
xor
in
xchg
into
aam
xor
mov
sbb
jg
mov
scas
icebp
cmp
imul
dec
or
inc
jp
xor
and
mov
push
call
push
lods
fwait
add
sbb
loopne
or
or
rorl
enter
int3
nop
xor
and
leave
mov
gs
aad
inc
inc
adc
imul
dec
shlb
mov
movsb
pop
jb
sbb
inc
sahf
call
fwait
out
out
sub
xor
cmp
add
sub
jg
adc
xor
repz
sbb
inc
xchg
inc
icebp
es
stc
mov
dec
sub
ret
arpl
fadd
es
xchg
fisubs
push
out
push
js
aad
xor
leave
pusha
sub
cwtl
and
pop
push
mul
adc
dec
add
in
pop
aad
ljmp
mov
lock
repz
cmp
btl
jne
std
add
leave
cs
test
scas
out
dec
mov
sbb
into
pop
fstl
cmp
sub
or
pop
sub
adc
decl
lret
or
rol
ljmp
insl
fimull
sbb
adc
pop
jnp
mov
pop
add
push
sbb
push
mov
xchg
stos
in
and
mov
sub
mov
or
xchg
pop
fsts
inc
xchg
xchg
mov
cmp
add
test
icebp
push
pop
mov
test
lahf
mov
sbb
lea
pop
out
jle
sbb
addb
and
push
sub
int3
hlt
daa
mov
mov
shll
shll
test
or
ljmp
pop
mov
jo
out
pop
mov
mov
add
movsb
mov
jge
jb
cli
jl
inc
add
adc
rorl
in
add
adc
jb
jmp
inc
repz
pop
or
imul
jp
cmp
shr
or
dec
mov
jae
leave
cmc
pop
adc
scas
sbb
cld
mov
dec
dec
mov
push
or
outsb
shlb
repnz
inc
xchg
jae
cmp
mov
call
nop
mov
pop
aad
test
xchg
bound
mov
mov
dec
stos
and
push
push
cmp
lea
jecxz
jle
outsb
lret
shll
mov
insb
les
cmp
add
xchg
lret
cmc
popf
inc
push
push
cmovne
repnz
push
mov
add
dec
fisubrs
jecxz
xchg
loop
out
ret
mov
psrlq
lcall
data16
cltd
xchg
aaa
push
mov
pop
pop
and
stos
xor
lds
out
add
cmpsl
popa
and
scas
test
lds
lcall
mov
nop
push
cltd
xor
rcrb
jle
fwait
lods
pop
rsqrtps
jbe
popa
pop
lods
mov
mov
negb
in
mulb
push
shrb
sbb
xchg
xchg
jge
xchg
out
incb
out
mov
aad
xchg
cmp
inc
push
stc
fisttpl
and
ret
sub
cmpsb
mov
cmp
nop
mov
test
jg
dec
and
xchg
clc
cmp
in
fcmove
mov
sbb
clc
pop
push
test
repnz
pop
out
test
ret
stos
push
rcll
jbe
xor
jp
pop
scas
call
mov
call
int
xor
dec
cli
dec
sub
push
or
subl
jle
pop
enter
cmp
outsb
in
jne
imul
out
imul
mov
pop
mov
add
mov
cmp
loopne
clc
shl
mov
fisubrs
jp
out
outsb
add
loop
cmpsb
stos
hlt
add
lods
adcb
mov
jecxz
cltd
push
out
sub
cmc
in
cmpsl
xchg
cmc
dec
gs
mov
lret
pop
add
ja
popf
inc
mov
adc
subl
lcall
and
mov
out
mov
int
stos
shrb
shrl
inc
xor
push
sub
pop
fs
pop
add
xchg
sbb
jae
sbb
data16
out
mov
mov
pop
lock
pop
icebp
cmpsb
scas
bound
enter
or
aas
orl
roll
jge
loope
mov
mov
popa
aaa
scas
push
lock
dec
fwait
lds
adc
mov
push
pop
daa
mov
rcr
lea
fwait
stc
sahf
cmc
xor
mov
addl
push
ret
xchg
sbb
shrb
adc
mov
add
push
fidivs
shr
fcoms
nop
mov
je
ds
jg
push
gs
mov
imull
sti
andl
add
sub
in
cmp
xchg
popf
mov
mov
in
fcomps
sarb
mov
fstl
adc
jmp
pop
sub
sub
xor
adc
mov
xchg
or
les
mov
ja
inc
rcll
sbb
sahf
lods
push
sbb
sbb
mov
mov
and
inc
push
lea
xor
pop
inc
pop
or
pop
dec
test
stc
movsb
inc
dec
cs
adc
sar
rolb
movb
mov
shr
or
sbb
push
dec
dec
cs
repnz
push
aas
inc
dec
pop
mov
ret
and
dec
push
or
out
lods
insl
out
stc
pop
decb
adc
pop
mov
jmp
rcll
inc
pop
jge
mov
jo
or
jb
lret
out
in
jl
pop
xor
mov
or
mov
imul
repz
les
dec
js
mov
add
xchg
call
jne
idiv
sbb
dec
ret
cmp
or
test
jbe
fildl
clc
lock
xor
test
add
nop
gs
jo
insb
cs
mov
ret
and
jl
inc
dec
cmp
out
mov
sub
mov
inc
sub
jecxz
dec
in
sub
mov
or
data16
out
sbb
pop
adc
add
dec
popf
push
idivb
outsl
pop
into
push
lahf
lret
lods
lea
scas
fwait
push
mov
push
xchg
inc
ffreep
dec
push
cmpsb
push
dec
int3
jecxz
push
bound
add
jnp
mov
pop
fcoml
orl
push
scas
aad
cmp
dec
pop
cmp
pusha
subl
inc
aas
mov
shll
sbbl
repnz
rcl
fwait
movsl
insl
aam
testl
xor
inc
mov
mov
fnsave
aam
mov
loopne
je
or
add
sbb
mov
mov
add
adc
aad
push
xor
test
out
test
mov
adc
hlt
inc
loope
jb
sub
cmpb
jbe
mov
in
icebp
ficompl
cmp
cmpl
add
in
pop
sub
jl
or
hlt
xchg
jo
in
jne
jmp
pusha
negl
cld
push
xor
mov
cmp
call
mov
jl
dec
inc
xor
out
cmp
fbld
xchg
jae
gs
sar
push
insb
pop
fs
ja,pn
xorb
outsb
clc
push
ret
scas
xor
lds
add
sbb
ljmp
out
test
jo
cmpsb
adc
and
cltd
lret
je
dec
add
adc
dec
mov
add
xor
outsb
aam
adc
insb
insl
in
mov
out
mov
clc
push
mov
pop
sub
paddw
dec
xchg
mov
shrl
mov
pushl
cli
pop
test
repnz
sub
push
sbb
sub
out
jo
hlt
mov
sarl
mov
sub
test
arpl
push
lea
lret
jno
mov
clc
xor
jecxz
leavew
cmp
cs
mov
or
or
cmp
lods
xchg
int
call
aaa
fnstcw
and
push
test
test
sub
dec
cli
xchg
adc
xor
notl
xor
pop
test
dec
ficomps
andb
cmpsl
mov
mov
sub
call
inc
aam
dec
stos
mov
or
outsb
inc
sub
jnp
sub
test
shr
sahf
pop
jge
jbe
in
ficoml
mov
jnp
pop
enter
mov
lcall
sbb
and
pop
xor
nop
loopne
in
jae
cmp
iret
jo
adc
lods
call
loope
adc
ss
jno
mov
into
cltd
xchg
ret
out
jb
sub
xchg
clc
rorb
nop
out
inc
lods
sarl
xor
pop
jecxz
shlb
int
xor
out
jg
idivb
pop
inc
jg
subb
and
repnz
loop
inc
js
sub
jb
xor
sbb
js
das
or
cmp
cli
out
imul
cmpsb
jge
jb
int
jg
and
push
add
jle
outsb
pop
inc
dec
push
and
pop
xor
stos
pop
jl
out
aaa
stos
pusha
cmp
int3
ja
jnp
mov
mov
xchg
adc
pop
push
mov
cmpsb
push
in
lahf
insb
xchg
fadds
xor
call
idivl
in
stc
sub
fisttps
and
cltd
divb
pusha
pushf
mov
dec
jae
sub
fistl
pop
scas
xor
leave
loope
mov
add
or
mov
pop
mov
call
fs
and
fidivl
imul
cmp
cmp
lahf
mov
dec
mov
adc
and
mov
sub
stos
inc
mov
bound
cmp
dec
jmp
int3
in
and
popl
and
sbb
jnp
pop
push
loope
dec
push
push
sbb
lds
cs
insl
inc
andb
xchg
fucom
dec
xor
mov
xlat
jg
xchg
sti
mov
mov
addr16
mov
mov
movsl
cs
add
push
fldenv
call
ds
stos
ja
test
adc
pop
mov
jns
jl
and
cld
std
clc
in
mov
sbb
in
fsts
or
add
mov
movsb
cwtl
pop
pop
jg
mov
sahf
dec
pop
mov
lahf
rcl
daa
mov
or
mov
dec
bound
fdivl
aad
sbb
mov
cmc
or
stc
lods
mov
mov
insb
ds
cs
mov
pminsw
add
sbb
nop
mov
out
lcall
sbb
cwtl
cltd
out
inc
add
xchg
cmp
ja
xor
fprem
jg
xor
pop
mov
outsl
arpl
divl
ficoms
adc
cmp
pop
in
das
aaa
sti
inc
ret
in
inc
lock
xchg
into
cmp
iret
cmpsb
into
cmp
push
or
loop
repnz
cmp
lock
mov
sub
jnp
add
cs
sub
or
orb
push
je
mov
es
ret
push
cmp
jnp
mov
pop
mov
mov
sub
sarl
dec
fisubrl
jns
js
pop
cmc
adc
and
or
push
jecxz
ljmp
dec
scas
int3
cmp
or
push
and
dec
jnp
inc
inc
aaa
pushf
push
push
aaa
leave
mov
popa
add
pop
xor
cmp
daa
inc
test
cmpsb
xchg
mov
pop
movsb
xchg
xchg
mov
hlt
nop
fldenv
aam
adc
cld
adcl
add
sub
das
out
mov
pop
adc
test
pop
pop
fwait
aas
sti
or
xlat
adc
xor
faddp
orb
inc
testb
jno
sub
dec
scas
movsb
pusha
fwait
movsl
pop
dec
cmc
adc
adc
dec
into
mov
hlt
outsl
dec
sub
jmp
inc
pop
ror
jno
das
call
jecxz
mov
test
push
jnp
shrb
loopne
xor
cmpsl
loope
adc
or
adc
sahf
rcr
insb
jle
xchg
es
mov
sub
adc
fidivl
cmp
test
push
out
lods
out
in
scas
cmp
iret
dec
push
std
lret
in
xchg
bound
cmpsl
imul
inc
in
inc
xor
add
pop
stos
int3
dec
cmpsl
adc
or
fisubrs
cmpsb
mov
cmp
mov
dec
or
push
das
add
xchg
stos
dec
rclb
sbb
jmp
cmc
daa
cmp
lcall
out
aaa
jle
adc
movl
call
insb
lret
clc
adc
scas
shll
andl
sub
pop
xor
push
lcall
sbb
out
movsl
sbb
jae
pop
test
sarb
bound
inc
testl
call
inc
loopne
fprem1
mulb
rorl
pop
push
fisttpl
xchg
xchg
test
xchg
out
in
cmp
lcall
sub
sbb
cmp
sahf
jnp
rcrb
pop
xchg
fstpt
sub
jg
or
jae
adc
dec
jge
mov
jl
pop
es
dec
pop
div
je
push
sbb
notb
mov
aad
jbe
pop
and
xor
loop
lods
mov
fimull
outsb
mov
fisttpll
push
and
sub
fsubs
sbb
push
into
mov
jle
xchg
inc
inc
fcompl
shlb
stos
les
in
pop
add
pushf
addb
pop
dec
xchg
fdiv
testb
into
fcompl
cwtl
aam
push
imul
push
mov
cmp
fdivl
sbb
sbb
imul
dec
pop
inc
movsl
repz
jecxz
loope
lret
fistpll
and
lahf
lcall
ficoms
sbb
fidivrl
test
mov
fisttpll
fnstenv
or
mov
mov
call
xchg
and
out
push
call
fs
sub
xor
adc
fdivr
gs
lods
mov
dec
addr16
out
sub
sbb
orl
dec
dec
xor
push
sbb
cli
in
out
jg
enter
jno
and
pmullw
and
pop
adc
and
lea
mov
iret
scas
sbb
jg
push
popf
xchg
xor
repnz
out
pop
xor
push
cmp
mov
cltd
repnz
xchg
dec
xchg
xor
imul
cmpsl
and
fisttpl
insl
mov
repz
push
sbb
sub
je
je
cmp
lods
and
jae
pop
adcl
xor
push
cmp
jge
inc
adc
cmp
mov
pop
into
ss
pop
js
cltd
js
inc
cmp
jno
inc
repnz
jno
pop
fwait
aam
jg
in
call
add
cmp
mov
sahf
and
or
mov
pop
jo
jbe
cli
rorb
jge
pop
jae
test
ficoms
call
insb
jno
in
aas
je
sub
jmp
call
stos
leave
xchg
out
adc
rclb
xchg
push
outsb
mov
mov
adc
lock
stc
xchg
pop
imul
addr16
add
pop
or
popa
cmp
xor
sbb
cltd
pop
lock
add
insl
and
ja
shrl
xor
btc
xchg
popa
fiaddl
pusha
imul
inc
mov
pop
mov
aas
loopne
add
and
mov
ss
fsubs
aam
loope
test
jne
jno
arpl
push
loopne
xor
push
xchg
push
push
rcr
push
arpl
je
movsl
sub
sub
stos
cmp
add
jmp
sub
push
pop
push
aad
add
push
hlt
pop
sbb
clc
scas
jae
pop
imul
sbb
lods
mov
lds
sti
pop
xor
mov
xor
push
in
and
lods
push
push
fs
sub
push
mov
xchg
pop
fs
sub
arpl
dec
sub
ret
js
cmp
push
not
adc
pop
xor
mov
jp
mov
out
loope
sbb
or
ljmp
mov
or
div
adc
ftst
es
sahf
sub
inc
push
xorl
test
xchg
or
in
outsb
jo
add
clc
clc
or
das
pop
lock
add
js
mov
xor
mov
loop
ss
jecxz
adc
xlat
aas
mov
dec
decb
loopne
insb
mov
cmp
sar
jno
xchg
adc
adc
jl
cmpsb
data16
ljmp
in
mov
and
call
int3
int3
data16
pop
push
push
iret
mov
cmp
adc
dec
dec
mov
push
add
add
and
and
sub
and
adc
cld
push
ljmp
lea
out
mov
std
xchg
adc
dec
or
movb
fidivs
xor
cmpsb
push
fwait
inc
es
pop
ficoml
mov
fwait
xor
xlat
bound
or
into
add
loop
imul
push
mov
insb
xor
push
push
pop
loope
pop
xchg
subl
cmpsb
inc
es
test
in
arpl
mov
cs
lods
scas
je
push
add
cmp
pop
dec
push
neg
inc
lcall
lods
cltd
dec
out
fcoms
hlt
jne
sub
add
call
out
iret
cmc
jecxz
lea
mov
pop
jbe
add
sub
lcall
mov
outsl
pop
cmc
rolb
ficoml
jmp
daa
pop
jns
ds
xchg
xchg
xchg
sub
out
cmpsb
cmp
in
cmpsb
out
inc
into
or
push
jns
imul
cltd
aas
mov
repz
dec
push
dec
outsl
sarb
lcall
mov
xchg
cwtl
or
and
sbb
or
xor
adc
in
dec
dec
mov
test
push
fld
stos
in
shrb
cmp
icebp
adc
jae
adc
inc
push
stos
mov
mov
mov
adcb
push
pop
mov
test
mov
hlt
sti
filds
mov
shll
leave
or
sbbb
fstpt
stc
cld
lds
push
lds
cmpl
cmp
loopne
scas
nop
jne
mov
add
jne
lea
push
jne
fsubrl
mov
push
jmp
xor
cli
push
lret
addr16
push
push
imul
xchg
cld
imul
push
add
mov
mov
xchg
enter
ss
jb
mov
lahf
mov
jo
dec
push
push
jmp
cmc
push
in
call
lret
int
cwtl
std
push
mov
hlt
stc
and
shl
outsl
jb
cmpsl
pop
sub
cltd
sahf
jno
sub
out
cmc
xor
push
mov
inc
iret
xor
jle
lahf
imul
ja
inc
or
xchg
ja
adc
popa
loope
and
mov
test
push
push
fwait
pop
out
lds
sbb
sahf
mov
fcmove
jno
inc
xchg
push
ror
push
je
lea
aaa
cltd
in
test
mov
mov
mov
pop
pop
std
add
dec
scas
inc
sbb
hlt
lds
arpl
sbb
xor
das
punpcklwd
dec
pop
js
jnp
leave
cs
fisttpl
and
js
hlt
and
repz
push
je
mov
in
ljmp
mov
push
mov
clc
sub
insb
adc
ljmp
mov
cmpb
scas
adc
out
cmp
pop
iret
mov
adc
insl
cmp
lea
mov
or
pop
push
fisubl
pop
lea
push
scas
fisubs
into
jle
mov
stos
scas
sti
mulb
sub
inc
into
and
adc
or
add
mov
lcall
bound
or
aaa
mov
and
pop
add
lcall
push
lcall
cltd
sub
xchg
mov
rol
adc
pop
loopne
clc
mov
xor
roll
roll
mov
decb
jecxz
imul
push
inc
in
loope
iret
push
mov
inc
or
cmp
pushl
sub
push
push
adc
jbe
mov
mov
aad
and
jae
lahf
xchg
shlb
inc
je
lret
int
or
and
mov
and
sbb
cli
xchg
cmp
push
not
jmp
std
push
adc
mov
and
pop
jne
sbb
and
daa
pusha
push
ja
pop
add
jae
hlt
icebp
mov
int3
popf
xchg
mov
push
inc
fidivrl
hlt
pop
pusha
sub
jl
push
jecxz
xchg
frstor
leave
add
iret
push
rcll
cld
mov
shrb
fdiv
cld
pop
mov
xchg
lods
push
ret
inc
lahf
jmp
dec
xchg
add
insb
icebp
sub
bound
xor
pop
mov
xchg
pop
mov
or
jge
mov
jno
adc
sub
or
sbb
xchg
fwait
iret
out
sbb
or
pop
pop
push
sbbb
xchg
sub
cmp
sbb
out
mov
jl
mov
fisttpll
adc
stc
pop
mov
lret
test
xchg
mov
push
mov
mov
mov
xor
and
in
test
add
out
dec
repnz
roll
pop
inc
dec
push
sbb
xor
stos
ret
fnstcw
xor
adc
jle
adc
dec
cmp
cmpb
cmp
mov
mov
rcr
paddw
in
adc
ret
push
cli
xor
jne
aaa
pop
nop
cltd
fwait
and
lods
fcmovnbe
sbb
sub
mov
jmp
enter
mov
js
insb
and
lret
leave
mov
dec
mov
into
xchg
adc
cmpxchg
ret
movsb
ret
dec
rcrb
in
push
mov
jmp
shlb
shrb
roll
shrb
sbb
imul
jecxz
pop
dec
scas
test
or
cwtl
pop
jo
in
and
les
jno
test
and
xchg
push
and
adc
or
repz
mov
cs
inc
in
jns
inc
push
out
dec
rorl
mov
mov
jbe
push
jge
jg
clc
xor
rclb
clc
dec
int3
adcb
es
shl
cwtl
lcall
insb
mov
out
pop
jne
push
cmc
mov
insl
shl
xchg
imul
cmp
ror
aam
cs
mov
shlb
aaa
push
into
shrb
cwtl
repnz
loopne
xchg
mov
insl
mov
inc
cmpsb
mov
cmp
jg
mov
iret
repz
mov
leave
add
push
lret
and
mov
mulb
loopne
inc
inc
and
adc
pop
test
dec
jns
pushf
mov
push
ja
jmp
sarb
movsl
ret
sub
dec
and
sti
jae
sub
add
adc
jae
mov
push
add
and
or
or
push
aad
push
push
mov
idivl
sub
cmp
andb
es
fs
cli
sbb
cwtl
xlat
pop
and
and
push
dec
scas
mov
ret
lcall
ja
das
into
mov
push
dec
mov
inc
dec
pop
push
arpl
cmpsl
ljmp
shll
roll
cmp
das
lahf
mov
test
and
rolb
cmc
mov
cld
xchg
sahf
cmp
xchg
pop
xor
shrb
xor
push
outsb
mov
lock
cmc
jns
or
and
pop
fs
xchg
arpl
outsb
xor
push
cltd
orb
mulb
jl
in
mov
cmp
add
xor
iret
lahf
iret
fsub
push
daa
js
daa
cmpl
fisttpl
shr
lods
imul
fs
aam
and
jnp
mov
push
cwtl
test
jl
xor
testl
sbb
nopl
push
pushf
lahf
dec
in
push
mov
mov
leave
or
mov
scas
test
dec
pop
outsb
mov
sbb
cmpl
adc
inc
andb
pushf
movsl
lods
shlb
repz
rcr
and
pop
cmp
loope
cmp
push
push
lock
cli
push
cs
stos
sahf
outsb
lock
pop
pop
cmc
fidivs
cltd
into
push
bound
add
fnsave
nop
repz
sahf
lret
push
xor
js
cmp
scas
adc
pop
cmp
jno
sbb
fiadds
push
fdivr
ret
sub
inc
mov
adc
sahf
fisubs
mov
jl,pn
into
ffree
pop
jns
rcrb
iret
loope
sahf
or
xchg
out
pop
jg
stos
ja
xor
lds
pop
xchg
sub
cs
mov
xchg
lods
xchg
inc
aam
in
test
inc
jae
xchg
pop
notl
movsb
divb
cmc
gs
cmpb
daa
idivb
lea
xor
and
mov
sub
ja
out
pop
leave
scas
xor
imul
mov
sbb
push
lret
fisttps
mov
insl
popf
push
adc
hlt
shrl
sti
pop
or
cmpsl
shr
scas
jne
pop
sbbl
fisubrs
pop
in
loop
aaa
sub
repnz
imul
mov
rcl
in
push
lds
or
sbb
scas
pop
push
ja
xor
add
xor
repnz
fcomps
and
inc
rol
lret
scas
pop
repnz
icebp
cmp
mov
stos
addr16
repnz
xchg
mov
imul
xorl
pop
ficomps
cld
mov
inc
push
lret
push
cli
loopne
in
add
jb
inc
stos
jo
movsl
mov
imul
mov
xchg
inc
mov
or
aaa
or
pop
icebp
dec
sbb
sti
jae
add
in
mov
mov
xchg
pop
push
xor
add
es
push
pop
inc
push
sahf
mov
lret
and
cli
and
xchg
and
es
andl
jle
int3
loopne
mov
cmp
sub
mov
jle
mov
out
lret
cmpsl
imul
je
cld
sbb
out
push
cli
xchg
jnp
int3
mov
cwtl
btc
pop
sub
push
push
jmp
lea
and
daa
outsb
pop
sbb
add
int
imul
push
sbb
pop
out
sarb
loop
xchg
xchg
lods
in
lea
mov
adc
nop
fwait
mov
add
insb
inc
add
push
fsts
jp
dec
loopne
push
fdivrl
lret
js
add
mov
hlt
ss
fdivp
xchg
cmp
sti
aaa
pop
and
mov
cwtl
xchg
pop
gs
sbb
repnz
stc
lods
sub
jb
sub
jns
xor
mov
pop
push
pop
lock
lods
cmpsb
aaa
int
push
orl
pushf
adc
dec
lcall
xor
flds
lcall
push
mov
nop
sub
jmp
aaa
jge
out
aam
and
sub
xchg
loop
adc
int
decl
xchg
mov
jg
test
ret
ljmp
arpl
and
test
icebp
imulb
pusha
out
mov
iret
push
mov
and
gs
jl
mov
pop
adc
add
mov
or
lret
push
lahf
adc
lahf
and
jnp
daa
cmp
xor
movsl
pop
mov
shl
sub
xorl
in
inc
push
popa
test
fisttps
lods
dec
enter
rol
xchg
mov
sub
mov
sbb
testb
push
push
loope
sbbb
sarb
cmp
ret
sbb
mov
mov
pop
imul
sarl
or
pop
dec
xor
inc
lods
ljmp
shr
and
jecxz
cmpb
out
adc
pop
fisubs
or
cmp
mov
int3
sub
push
mov
fadds
dec
jl
in
shll
dec
xchg
aas
dec
shl
cli
adc
rcr
popf
popl
mov
loop
inc
inc
cli
pop
cmp
push
xchg
mov
xor
cmpsl
xchg
dec
lret
movsb
adc
jnp
dec
sub
and
adc
or
cmpsl
dec
jg
dec
jns
mov
pop
test
cwtl
aas
mov
sub
or
subb
and
mov
or
push
adc
imul
in
sbb
fcmove
aaa
testl
xchg
pop
sub
repnz
push
mov
in
lret
mov
std
adc
ja
sti
out
mov
fsubs
adc
lea
push
mov
sbb
mov
pop
add
cmpsl
outsb
xor
mov
sbb
cltd
jo
mov
lods
sub
lods
sar
pop
mov
and
idiv
pop
sbb
gs
mov
cmp
pusha
lods
decb
jp
cmp
mov
inc
daa
lods
clc
inc
and
movsl
les
and
pop
mov
test
pop
loop
or
cs
jns
add
push
push
bound
les
cwtl
idivb
jo
fiadds
dec
maskmovq
std
decb
pushf
mov
cwtl
inc
pop
out
fwait
push
sbb
adc
sbb
sbb
or
dec
mov
leave
and
and
pop
mov
movsl
push
rcll
dec
dec
push
fisubs
stos
push
jnp
push
xchg
add
xchg
xor
scas
mov
xor
out
or
out
add
stos
cmpsl
imul
add
nop
in
mov
jmp
pcmpeqd
dec
call
mov
enter
ss
xchg
cmpsl
xor
fs
xlat
incb
and
bound
mov
fmull
mov
inc
cmp
or
outsl
push
pop
pop
or
popf
xchg
or
bound
sub
cmpsb
fs
and
in
pop
push
sub
in
or
clc
ret
int3
mov
add
add
test
js
inc
insl
fmuls
xor
push
mov
inc
xor
dec
stc
jecxz
jle
pushf
cmc
push
mov
mov
arpl
xor
mov
cmp
cmp
mov
xchg
clc
lock
cmp
adc
cmp
sub
loopne
into
lock
outsl
enter
and
or
js
ds
fstps
mov
cli
fsin
test
es
adc
sub
jne
jge
adc
mov
mov
enter
pop
jbe
inc
xor
dec
scas
js
negb
lret
cmp
in
jnp
js
pop
adc
sarb
xor
mov
mov
data16
mov
popl
or
push
jae
aas
push
stc
mov
mov
hlt
push
std
je
jo
out
outsl
dec
pop
sub
test
popa
out
mov
inc
adc
ret
setno
in
xor
scas
xlat
imulb
add
inc
sbb
scas
mov
mov
faddp
inc
addr16
testb
scas
loope
cmp
in
cmc
sub
dec
inc
sub
mov
pushl
shlb
fildll
jge
mov
fwait
lret
jnp
mov
xor
ss
jle
sbbl
out
repnz
cwtl
das
cmp
jo
pop
out
pop
cs
push
add
mov
daa
push
rcll
fs
jnp
insl
or
xchg
sub
pop
mov
jns
pop
mov
bound
xor
js
sbbb
mov
std
int3
lock
push
aaa
std
dec
lods
mov
add
xchg
mov
ret
bound
jp
mov
jo
xlat
cmp
adc
scas
xchg
fs
fwait
cld
mov
fdivp
pop
out
filds
sub
das
into
and
les
rolb
mov
arpl
mov
mov
repnz
push
lods
ret
xor
mov
jle
sbb
lock
bnd
inc
dec
pusha
cli
inc
sub
pop
sbb
jo
push
push
dec
scas
add
push
arpl
dec
mov
pop
sub
test
pop
sbb
ljmp
xor
mov
jno
push
push
int
xchg
adcb
ss
adc
pop
mov
gs
jns
sub
sub
dec
add
andl
mov
les
pop
cmp
fldenv
stos
fucomip
mov
ljmp
cmp
cmpl
icebp
stc
test
pop
daa
out
mov
repnz
push
jnp
xor
xchg
lds
xlat
es
ljmp
ficoml
cwtl
lret
es
xchg
dec
mov
out
sub
xchg
dec
imul
jno
mov
imul
shl
push
shrl
mov
xor
mov
aas
ja
mov
mov
or
cs
inc
test
and
push
andb
xchg
in
and
xor
movsb
lea
cs
pop
pop
scas
or
xchg
jmp
mov
jno
repnz
clc
dec
xchg
stos
push
and
mov
bound
out
sub
xchg
lret
fstpt
inc
cwtl
lds
jge
inc
insl
daa
mov
add
lods
cmpsl
test
jle
mov
shrl
mov
push
pop
jle
dec
adc
pushf
and
cmpsl
popa
ficoml
jmp
xchg
adc
pop
mov
fwait
hlt
je
xchg
shlb
out
push
lret
mov
xlat
xor
aad
xchg
sbbb
adc
loopne
inc
fwait
mov
xchg
das
xorl
add
aam
cltd
movb
jb
dec
sbb
mov
fimuls
movsl
addr16
and
pop
insl
xchg
sbb
in
push
fwait
mov
call
push
and
inc
fisttpl
jb
inc
add
mov
push
mov
mov
sub
jae
mov
int3
ds
mov
push
rorb
lahf
lock
and
insl
insl
sub
leave
lock
inc
movsl
push
or
inc
cmc
dec
stos
pop
out
loopne
xchg
sbb
leave
in
xchg
enter
adcb
push
xlat
push
loop
pop
push
out
hlt
pop
dec
test
add
roll
mov
fldl
mov
nop
dec
fsubl
sarb
lock
inc
lock
xor
sti
movsl
enter
fsubl
stc
xor
out
xor
and
js
movsl
dec
jno
daa
xchg
jmp
out
sbb
loop
rorb
mov
loope
cwtl
fidivrs
and
or
pop
jp
dec
fisttpl
jae
leave
sbb
cwtl
addr16
enter
add
mov
xor
and
pushf
popf
sbb
jbe
int
test
out
je
cmp
or
int3
in
pop
fcmovbe
ret
int3
mov
and
out
addr16
std
pop
stos
out
imul
ror
cmp
jno
enter
inc
jg
sub
jnp
mov
jnp
lock
shll
dec
add
sbb
pop
movsl
cs
sub
addr16
daa
dec
shlb
sti
lahf
and
mov
push
cld
jne
in
mov
das
or
out
scas
add
fcmovb
out
jecxz
je
inc
je
arpl
pushl
inc
and
add
jge
jmp
xchg
leave
sub
jg
lret
pop
or
fisttps
sub
divb
pushf
in
lea
daa
scas
and
add
xor
rcll
sbb
pusha
push
xchg
fisubl
fwait
cmpsb
sbb
xchg
popf
or
or
es
push
sub
lret
ss
pop
inc
mov
mov
xchg
out
lret
jg
arpl
xor
pop
dec
scas
mov
popf
mov
popa
aaa
sub
mov
ss
push
sbb
fs
lcall
or
icebp
fwait
cmp
sub
xchg
push
in
inc
sti
aam
fdivrs
mov
out
mov
sbb
pop
push
ss
pop
out
lahf
sbb
dec
push
and
jg
cmp
pop
test
cmp
dec
clc
or
loopne
mov
push
addr16
mov
xchg
push
push
mov
fidivrs
test
movsl
mov
shrb
test
mov
dec
in
fbld
mov
jns
shrl
mov
testb
add
into
inc
int
sub
cmp
lahf
ds
mov
test
jl
es
sbb
xchg
pop
popa
pop
mov
test
sub
in
adc
xchg
push
or
loopne
add
xchg
mov
sbb
cmp
xchg
int3
cmp
clc
ljmp
dec
les
fsubs
neg
xchg
enter
mov
int3
iret
add
xchg
mov
mov
mov
mov
push
int3
jnp
cmp
sub
jecxz
fistpll
push
mov
test
inc
inc
jo
into
lret
in
nop
loope
rorl
stos
insb
pushl
xchg
jle
cmp
fld1
subl
loop
xchg
jmp
jbe
adc
xchg
aam
inc
fildll
outsb
or
xor
bound
out
in
lea
pop
shrb
in
int
out
cmp
fldl
aam
mov
popa
imul
mov
pop
hlt
lods
bound
cld
mov
push
dec
mov
subl
or
mov
shrl
mov
movl
jae
in
test
push
loopne
idiv
or
jle
mov
ja
dec
cmpsl
jp
xchg
cmpsb
fnstenv
cmp
inc
sbb
movsl
inc
sar
adc
push
sbb
stos
gs
sbb
pop
xchg
sub
ficoms
icebp
je
cltd
dec
into
aas
cmpsb
sub
loopne
mov
cwtl
push
mov
sarl
adc
pop
mov
in
or
ret
xor
push
xchg
lods
inc
gs
cmp
test
shlb
mov
shl
incl
loopne
push
loopne
imul
mov
xor
push
add
add
rcrb
aad
mov
pop
lds
jns
popf
orl
fisubs
jno
test
cmpsl
loopne
in
iret
or
out
cmp
push
sahf
mov
pop
leave
loop
or
mov
shr
ljmp
mov
push
or
mov
xor
jb
cmpsl
adcb
cmp
adc
and
mov
jne
lcall
daa
icebp
orb
dec
and
push
adcl
pop
mov
and
mov
add
jne
and
sbb
ljmp
inc
or
jecxz
test
mov
xchg
mov
xor
mov
jbe
hlt
sbb
inc
jmp
jnp
adc
in
add
mov
pop
loopne
cmp
out
ss
ljmp
sarl
cmp
dec
lock
not
dec
sub
rcrl
and
in
sbb
add
sahf
mov
shlb
sbb
push
pop
sbb
mov
inc
leave
jns
sahf
mov
test
push
push
repnz
ds
mov
pop
jge
xlat
push
cmp
cmp
rcrl
cmp
lea
cmp
shll
mov
xchg
repnz
testl
lret
cmp
cltd
dec
cwtl
jle
inc
inc
je
inc
insb
pop
out
sub
adc
xchg
out
pop
repnz
jmp
lret
push
cli
shll
sbb
repnz
dec
cmpsb
lahf
fiaddl
jp
xchg
stos
mov
jb
lods
mov
pop
or
inc
inc
jae
mov
pushf
enter
pop
sbb
insl
mov
dec
sbb
popf
cmp
lods
sub
aad
mov
sbb
cwtl
mov
pop
sub
mov
dec
pop
push
es
mov
inc
aaa
cmc
lds
insb
fxch
mov
push
stc
xor
repz
flds
out
inc
movsl
xor
mov
fbstp
mov
xor
jno
adcb
lret
mov
push
andb
sbb
mov
test
xlat
cli
mov
popa
dec
and
mov
dec
sub
lcall
push
lods
or
fidivrl
jl
bsr
sbb
bound
mov
cmp
pop
cmp
mov
dec
enter
shrl
sub
pop
data16
mov
dec
mov
dec
lods
repnz
aam
lds
mov
sbb
sub
int
add
jg
pop
cli
push
test
aaa
aam
sbb
mov
mov
mov
outsb
cs
pop
jb
movsb
out
mov
call
push
add
inc
sub
cmp
cmp
mov
pusha
rclb
fmull
mov
inc
lahf
fnsave
je
sub
sarb
out
sbb
push
adc
sub
cmp
inc
and
pop
mov
xchg
addl
add
adc
mov
cmovs
call
adc
jno
lret
xor
jecxz
mov
out
or
pop
pop
mov
adc
cwtl
mov
inc
xchg
stos
rorl
mov
outsb
rcll
sub
repnz
imul
xchg
mov
or
sub
stos
out
push
adc
dec
rclb
mov
xchg
adc
adc
jb
test
icebp
or
push
lock
into
push
sbb
mov
mov
push
xchg
jno
jne
and
into
ret
mov
sti
cmp
rorl
lods
fiadds
jae
test
lds
mov
orb
and
ss
mov
je
push
and
pop
sub
xchg
xlat
add
daa
mov
das
clc
imul
mov
fs
mov
pop
es
add
push
je
add
lea
fs
mov
inc
sar
imul
adc
fcom
mov
scas
nop
out
cmpsb
mov
and
mov
data16
rcrl
pop
push
outsl
xor
cmp
dec
or
mov
xor
or
mov
pop
inc
cmp
pop
cmpsl
mov
incb
lock
mov
insl
jae
xchg
icebp
mov
jg
hlt
mov
mov
ror
and
xchg
lret
push
adc
cmp
add
cmp
dec
xchg
xor
fcmovnb
aas
cmp
fistpl
outsl
bound
inc
sub
repz
add
inc
aas
mov
adc
aam
mov
cmp
jl
or
cmp
push
inc
jne
addl
jle
xor
pop
fwait
cmc
xor
inc
inc
xchg
inc
loop
pop
adc
dec
ret
sbb
pop
jge
adc
push
cmp
repnz
dec
mov
stos
repz
xchg
call
popf
pop
jle
cmp
cmp
ss
mov
pusha
mov
push
test
mov
pop
jb
in
je
outsl
shll
into
movsl
cmp
and
in
and
mov
sub
cmp
out
pop
pop
ret
jb
adc
mov
scas
mov
sub
xlat
cltd
cmp
das
mov
outsl
mov
imull
mov
mov
mov
sbb
nop
outsl
ja
dec
pushf
in
les
outsl
jmp
pop
sbb
or
mov
add
push
dec
fstps
jae
and
das
inc
mov
icebp
add
js
or
cltd
pop
daa
or
jle
std
mov
sub
js
notb
ret
jnp
aad
mov
shrb
sub
mov
pop
outsb
jmp
pop
xor
cmp
cmp
test
hlt
jnp
cmpsl
xor
mov
jns
or
sub
dec
dec
int3
cmp
xchg
xchg
or
in
pop
push
sbb
iret
mov
sub
lea
popf
cs
in
jmp
sub
xchg
daa
jp
arpl
xchg
negb
inc
lcall
sub
je
in
shr
pop
push
decl
xchg
adc
fst
sub
sbb
imul
aaa
dec
inc
andb
or
xchg
xchg
xchg
je
push
xchg
lcall
dec
pusha
lcall
clc
adc
movsb
scas
pop
add
adc
jge
je
test
xorl
jno
bound
push
inc
call
cmpsl
adc
add
das
movsb
rclb
movsl
jne
cltd
pop
mov
inc
mov
cmp
mov
imul
and
ja
add
push
mov
in
add
icebp
into
arpl
outsl
mov
or
and
and
aam
pop
pop
lods
ret
adc
or
fiaddl
mov
add
cmp
jb
cmp
inc
insb
cli
mov
jns
sbb
adc
pushf
adc
push
sbb
mov
adc
pop
out
mov
ja
xor
addb
test
push
mov
cli
ljmp
push
and
xchg
adc
mov
out
xchg
mov
dec
flds
sbb
mov
sbb
push
and
and
shr
push
sbb
sti
les
mov
adc
nop
in
mov
push
cmp
jmp
data16
lahf
mov
inc
mov
daa
out
mov
movsb
or
sbb
es
sarb
jns
push
mov
mov
and
add
shr
xchg
inc
pusha
sbb
js
cli
mov
aam
and
repnz
jne
adc
jb
fldenv
push
mov
pop
sub
mov
adc
cmp
xor
daa
ds
mov
lods
inc
mov
test
xchg
push
xchg
xor
mov
sub
in
in
push
and
lods
test
inc
mov
inc
sub
sub
push
mov
shl
push
dec
xchg
inc
cwtl
pop
or
loope
ljmp
aas
nop
push
dec
and
outsb
cmpl
xorb
pop
add
fnstsw
and
aas
push
xor
pop
and
lea
pop
mov
pop
int3
movsl
leave
mov
xchg
scas
cmpl
pop
mov
out
lcall
adc
in
mov
sub
imul
sbb
popf
sub
fstpt
mov
into
test
dec
mov
cmp
pop
aaa
in
or
test
mov
jecxz
test
cmp
lret
mov
pop
xor
mov
push
xor
mov
loop
fmuls
mov
or
adc
lahf
xor
mov
dec
and
push
xchg
add
jae
adc
ds
jmp
cwtl
repnz
call
mov
pop
mov
xchg
inc
pop
sub
out
pop
push
cmpb
testl
cs
adc
sahf
bound
out
push
rcrb
leave
xor
push
jo
xor
push
jp
xchg
lock
in
mov
negl
out
bound
jns
je
or
je
sub
mov
cmc
mov
xor
xchg
mov
call
fsubs
push
test
add
rcrl
call
adc
adc
dec
mov
lock
rolb
inc
mov
test
jecxz
leave
fldl
or
imul
out
mov
lock
push
fmull
movsb
adc
lea
mov
jl
xchg
popa
mov
mov
lea
mov
sbb
xchg
mov
imul
cli
sarl
cmpsb
mov
sub
lret
xchg
es
xchg
lock
std
sub
lret
sbb
jle
sti
test
into
jbe
pusha
xchg
sub
jb
ljmp
xlat
pop
repnz
pushf
push
repz
pop
test
bound
repnz
xchg
inc
pcmpeqb
adc
pop
mov
push
aad
and
sahf
pop
fiadds
pop
daa
mov
and
pop
shll
inc
nop
mul
mov
jl
lret
test
inc
or
ficomps
adc
fbld
jecxz
dec
les
pop
jge
pop
das
movsl
add
xor
fwait
aad
adc
lock
es
push
xorl
pop
lss
jg
ret
mov
stc
jb
add
dec
mov
xchg
pushf
cmpsl
mov
leave
add
xor
int
sub
cmp
or
mov
pop
aaa
mov
adc
insl
cmpsb
in
cli
out
aaa
add
inc
adc
pusha
adc
push
sti
mov
imul
pop
mov
cmp
pop
dec
dec
pop
sub
pop
pop
cmp
and
sbb
psadbw
test
add
and
or
mov
mov
lea
xchg
push
dec
lock
xchg
fstpl
xor
xchg
jne
dec
rcrb
sbb
popa
fs
stos
jl
fucomi
fwait
push
arpl
cmp
test
xchg
ljmp
ja
enter
mov
jae
lahf
lahf
and
aas
sti
dec
push
mov
mov
out
cwtl
pop
sbb
shl
lret
iret
pop
cli
repnz
mov
imul
inc
fsubl
lock
mov
lahf
pusha
stc
rcll
mov
push
test
adc
imul
movsb
jnp
mov
ljmp
imull
sbb
ja
or
flds
lret
in
insl
negl
outsb
je
xchg
out
add
pusha
mov
inc
and
mov
adc
je
fcmovne
gs
pop
fildll
lods
jmp
int3
push
xchg
inc
jmp
mov
xchg
mov
cli
dec
gs
ljmp
add
add
pop
add
adc
stc
mov
dec
xchg
jb
pop
and
xchg
and
add
shr
inc
or
jb
xor
pop
mov
shrb
or
cwtl
cmp
and
dec
adc
adc
in
sub
dec
fmull
dec
jne
xor
push
jo
jno
push
sbb
dec
aad
inc
ret
xor
inc
insl
adc
and
dec
arpl
dec
out
stc
fcoml
xchg
loopne
or
or
ds
pop
sub
xchg
or
sbb
and
dec
aaa
push
scas
outsl
cmpsb
in
cmp
lock
loop
xchg
bound
fiadds
pop
push
test
adc
imul
icebp
cmc
int3
mov
mov
aam
dec
shll
push
and
jbe
cwtl
test
lahf
int
nop
mov
cltd
push
lods
cmp
lods
cld
scas
cmc
inc
jb
mov
popf
addr16
xor
lds
cmpsb
dec
sub
iret
leave
and
inc
mov
in
adc
xor
int3
lock
jecxz
stc
mov
dec
loopne
jb
mov
loope
sub
mov
aaa
push
and
and
fcmovne
sub
pop
ficomps
adc
push
mov
fcomp
dec
mov
jg
push
sbb
dec
mov
scas
fsubl
dec
fldl
cwtl
das
and
push
in
add
mov
inc
iret
add
mov
fldenv
es
nop
fstp
pop
icebp
lods
pop
jmp
aaa
out
push
and
sub
inc
and
and
ss
mov
mov
xor
fistl
lods
test
jbe
pop
adc
xchg
lock
into
or
sub
jle
push
mov
mov
shrb
es
sahf
addr16
repnz
ljmp
jle
daa
fst
aad
hlt
sub
cltd
and
out
repnz
pusha
test
sahf
dec
xchg
ja
es
cmp
movsl
int3
ret
ja
lcall
test
je
and
add
pop
sub
movsb
pop
pop
rcrb
int3
cmp
iret
lahf
fsts
jno
mov
call
cltd
mov
lcall
adc
cld
orl
xchg
xor
adc
enter
push
xorb
test
dec
sub
xorl
sub
jecxz
ror
ja
and
test
mov
inc
pop
jmp
or
mov
test
push
and
mov
cli
test
test
shl
or
push
notb
in
cmp
cmp
sahf
mov
or
adc
adc
ret
sbb
jne
lahf
std
repnz
mov
fimuls
scas
jg
xchg
mov
xchg
xchg
repz
test
and
mov
scas
pop
adc
pop
add
int3
cs
or
xlat
sbb
pop
rcl
in
push
nop
push
pop
adc
xor
xchg
shr
mov
and
jo
push
stos
mov
movsb
out
jb
mov
movsb
xlat
mov
call
daa
icebp
mov
add
or
movsb
add
sbb
push
lret
loope
test
mov
cs
mov
cmp
mov
ja
rcrb
sbb
push
sub
into
sub
cmp
sbb
inc
mov
push
or
ss
pop
push
push
scas
jns
xchg
push
mov
pop
jns
js
scas
inc
shrb
cwtl
mov
negb
jge
lsl
pop
popf
stc
fdivr
ret
imul
mov
mov
es
inc
je
mov
sub
loopne
out
rorl
pusha
iret
sarl
push
lahf
imul
in
mov
js
loopne
lds
insb
cs
repnz
mov
jecxz
xor
imul
push
sbb
mov
pop
pop
lret
leave
sbb
inc
jnp
test
mov
hlt
mov
sahf
in
insl
mov
aad
pop
mov
dec
leave
sub
arpl
cltd
xchg
jns
ficompl
aaa
cltd
jnp
lea
mov
sbb
xor
arpl
cmc
iret
lea
ja
adc
push
clc
xchg
icebp
leave
and
out
movsb
pop
xchg
addr16
cmp
mull
lahf
std
ror
out
inc
stc
mulb
popa
mov
xchg
std
jae
imul
idivl
pushf
lock
mov
xchg
push
add
loopne
nop
jp
mov
mov
addr16
addb
scas
mov
mov
stos
gs
dec
in
rorl
adcl
or
mov
mov
ret
pop
call
repz
aad
hlt
inc
xor
aam
call
push
mov
fstpt
sti
add
das
mov
stos
enter
sahf
jb
adc
xor
jle
imul
sub
pop
in
imul
xor
in
test
cltd
sbb
add
cli
pop
scas
xlat
pop
add
cmpsb
loop
loopne
lret
jp
out
prefetchw
frstor
push
jg
sub
out
inc
fs
imul
jbe
enter
xor
xor
jmp
mov
and
push
xor
xchg
dec
push
movb
lods
addr16
js
xchg
mov
or
or
stos
mov
pop
ljmp
mov
jns
cltd
cld
add
sub
sub
adc
sbb
mov
push
adc
sahf
test
inc
jno
lcall
and
cmp
mov
outsb
sbb
xchg
data16
dec
push
cld
mov
daa
in
int
call
or
stc
stos
mov
jb
clc
and
pop
aam
inc
test
daa
jl
lahf
jns
ds
cmc
mov
and
shrb
test
push
pusha
mov
test
fadds
mov
xor
sub
or
shlb
push
rol
fbld
pop
cltd
repnz
pop
das
jnp
push
jbe
iret
mov
stos
jb
jne
loope
das
push
movsb
push
push
mov
pop
sub
bnd
xchg
in
in
xor
loope
sbb
mov
and
xchg
outsl
xchg
push
sub
dec
mov
pop
clc
push
popf
adc
dec
cltd
add
cmp
dec
shll
add
ljmp
movl
dec
int
add
cli
sbb
adc
cmc
or
and
sub
jns
jnp
pop
or
dec
aas
icebp
out
stc
push
in
jle
addps
adc
pop
add
xchg
mov
dec
mov
dec
lods
sbb
xor
inc
sbb
aad
into
pop
sahf
popf
in
xor
jmp
pop
xchg
dec
lea
dec
imul
xor
arpl
or
cmpsl
and
jb
xor
dec
lock
iret
jae
and
daa
loop
push
stos
enter
jmp
xor
cs
xchg
xchg
add
pop
jmp
cmpsb
jge
in
sarb
pop
out
sub
fcmovne
push
jecxz
push
mov
negb
fiaddl
mov
imul
loopne
les
inc
dec
jns
pop
test
push
mulb
test
xor
icebp
push
jp
lods
into
xor
inc
sub
jo
adc
push
stos
xlat
jmpw
cmp
lea
jecxz
pop
pusha
mov
jbe
dec
xorl
fdivr
lods
jmp
inc
cmp
dec
push
cmc
dec
xchg
push
mov
out
dec
fs
pop
push
popf
shr
cltd
je
mov
call
adc
dec
jg
mov
ljmp
xchg
jmp
sti
pop
scas
dec
inc
aad
cmp
lods
enter
loop
in
sarl
lahf
inc
shr
or
and
add
fdivl
xor
filds
mov
push
lea
test
cmpsl
dec
jbe
pop
pop
cs
mov
xor
repnz
mov
sub
hlt
lods
mov
cmpsl
pusha
je
fs
cmp
xor
shrl
pop
mov
mov
adc
test
hlt
mov
rclb
mov
lret
xchg
xchg
mov
push
test
mov
mov
cmc
xchg
jae
ds
xlat
out
clc
mov
fistpl
cmpsb
sbb
inc
pop
movb
out
lods
loope
adc
loop
jne
jp
pop
rcll
lcall
sbb
sub
iret
loop
mov
adc
lock
jo
and
push
or
arpl
jl
pop
mov
dec
stos
jecxz
push
mov
pop
lahf
out
xor
xor
dec
mov
mov
xor
jp
pop
aam
scas
pop
rorl
lea
pop
adc
fs
cmp
add
push
fst
movsb
xchg
data16
xor
add
jg
cmp
outsb
lods
dec
arpl
outsb
fwait
test
pop
push
jg
adc
pop
push
pop
lahf
push
cmpsb
ss
movsl
pop
std
adc
js
inc
fldt
repz
dec
mulb
push
pop
xor
scas
mov
stos
xor
sbb
xchg
inc
aas
shl
addr16
xor
sbb
push
xor
nop
mov
jmp
inc
enter
add
notb
cmc
push
push
or
cmpsl
out
jecxz
jge
imulb
xchg
lret
xor
mov
jle
scas
mov
movsb
pop
jo
movsb
adc
cmp
lods
cltd
incb
mov
push
xchg
insb
dec
mov
dec
xchg
std
pop
and
xchg
mov
jge
hlt
std
cwtl
or
push
int
into
pusha
sub
xor
jns
mov
and
jns
std
jl
adc
jo
iret
add
in
pop
xchg
cmpsb
cltd
jle
loope
cmp
push
lods
lret
js
nop
mov
pop
xchg
add
test
dec
sbb
sub
jge
movsl
sahf
pop
pop
dec
xchg
dec
fnstcw
adc
and
inc
shll
jno
mov
inc
scas
xorb
imul
pop
test
imul
and
shll
adc
or
popa
push
sbb
xchg
adc
out
fiaddl
ret
jecxz
adc
pop
out
xchg
pop
mov
fs
mov
outsb
jb
shrb
inc
js
dec
imul
aad
repz
push
adc
jg
sahf
scas
xchg
lea
sti
leave
dec
icebp
mov
loope
push
cmp
test
pop
mov
sbb
es
pop
mov
add
dec
xor
gs
dec
xor
out
jle
and
clc
stc
xlat
dec
icebp
inc
repz
jge
sub
rol
adc
pop
jl
xchg
mov
out
ss
inc
mov
les
outsl
mov
test
mov
addr16
fsts
ljmp
add
sub
das
mov
nop
mov
sub
lods
mov
daa
sub
cmp
out
repnz
sar
enter
rcll
sub
andb
xor
xchg
out
loop
cmp
push
subl
xor
and
fists
sub
into
or
scas
jg
pop
cs
pop
sbb
test
dec
pop
mov
cmpsb
sbb
lods
ficoml
xchg
fcomp
push
mov
and
sbb
inc
xor
sbb
pop
mov
test
stc
cmpsb
mov
loopew
adc
jecxz
sub
or
jno
xchg
push
stc
into
enter
mov
int
loopne
into
and
lret
ret
loopne
inc
insb
out
xchg
loop
dec
adc
aas
lods
xor
roll
ret
pop
adc
jp
ret
test
xor
mulb
icebp
mov
testl
xor
push
bound
and
movsl
xchg
imul
sub
sarl
jge
and
int
xchg
jmp
mov
add
inc
lds
aaa
push
jl
fisttpll
stos
out
cmp
xchg
xor
sbb
dec
mov
and
lcall
insl
jecxz
cmp
mov
dec
out
cmp
mulb
and
or
notl
sbb
xchg
lods
stos
add
xchg
mov
in
lret
hlt
sub
sahf
fdivp
jl
cs
jle
jbe
iret
pop
add
push
push
ss
cmp
sahf
add
push
mov
fadd
push
push
les
into
lret
mov
cmp
adc
jo
lcall
ljmp
inc
mov
rcrb
fs
fidivrl
xchg
pop
jl
js
xlat
mov
repz
sbbl
fldenv
inc
fcmovnb
in
push
les
and
pop
mov
inc
repnz
cltd
pop
pop
test
std
jne
add
inc
je
lods
fstp
mov
shll
adc
xor
mov
sub
loopne
test
es
js
mov
aas
cmpsl
and
repnz
mov
mov
sti
push
mov
mov
ss
mov
stos
verw
andw
or
add
stc
scas
and
pop
xor
aad
xchg
neg
insb
cmp
mov
push
mov
xor
cli
shrb
dec
je
add
adc
mov
or
ss
loopne
scas
add
fiadds
addl
shrl
nop
aad
jl
inc
iret
sbb
movb
pop
pop
jae
fisttps
jne
sbb
nop
rol
jne
jl
lret
lret
lods
jo
sbb
or
pop
fwait
cs
pop
xchg
rcrb
sub
imul
cmc
push
push
jbe
mov
xchg
test
sahf
and
inc
xor
and
daa
inc
mov
bound
mov
enter
dec
sub
mov
lods
mov
sbb
mov
stos
sub
rorb
jl
sub
adc
clc
push
cld
mov
dec
lock
mov
inc
mov
int3
mov
adcl
mov
cwtl
lcall
sub
jae
push
xchg
bound
push
jmp
mov
mov
cmc
pop
jae
inc
xor
sbb
mov
xchg
xor
std
or
inc
add
fcmovbe
push
and
int3
stc
jae
lret
push
adc
xchg
jmp
pushf
jp
lea
mul
mov
rcrb
in
dec
lods
cwtl
pop
ffree
scas
pop
lds
pop
pushf
jo
jge
jmp
cmp
clc
push
cmp
push
fistpll
mov
sbb
aam
pop
imul
jbe
cmpb
xor
fucomip
inc
mov
mov
bound
mov
insb
jbe
stc
es
aaa
add
into
push
mov
aaa
push
rcr
dec
cltd
xor
lods
jle
sbb
push
sbb
jecxz
orb
mov
or
jb
shrb
addb
pushf
dec
int
outsl
into
adc
popf
sahf
mov
scas
popf
mov
or
cmpsb
xor
out
mov
dec
sbb
stos
dec
pop
lcall
and
xchg
jno
divb
sbb
into
dec
add
fdivs
shrb
shl
in
dec
mov
mov
push
fwait
andl
xchg
pop
pop
add
adc
cmp
xchg
pop
mov
sti
xchg
and
push
aam
push
xchg
pop
je
and
push
inc
push
xchg
aad
add
mov
insl
cs
nop
inc
leave
movsb
add
dec
add
inc
or
movsl
push
cmpsl
adc
lock
out
pop
dec
movb
jo
cmpb
jmp
int
leave
addb
mov
ja
lock
ss
aas
fbstp
int
push
movsb
or
movsb
mov
mov
and
xchg
and
dec
jb
or
into
cmp
mov
cmp
push
mov
xor
cmp
sbb
imul
mov
sbb
sbb
cwtl
jns
mov
test
sti
sahf
dec
push
std
ffree
dec
ljmp
clc
adc
cmp
sub
mov
mov
xchg
xor
lock
adc
adc
jle
or
data16
mov
ljmp
jmp
xor
sub
mov
xor
je
fcompl
add
lock
dec
and
test
push
push
and
pop
add
rcrl
shr
jnp
cmc
rcll
cs
dec
fbld
add
enter
les
call
jge
push
xchg
int3
std
rclb
repnz
je
push
inc
stos
rorl
and
pop
xor
std
in
and
dec
stc
inc
repz
mov
mov
sub
das
movsl
fstl
sahf
and
xlat
inc
jb
jae
xor
das
xchg
inc
mov
push
pusha
movsb
inc
push
mov
xchg
out
or
fldl
add
call
or
xchg
sbb
pop
and
mov
adc
jl
pop
xchg
lret
ss
sbb
mov
shlb
cwtl
mov
and
pop
lods
push
fcmovu
les
jmp
cmpl
repz
lods
sbb
mov
push
pop
pop
jecxz
sub
sub
mov
jo
mov
push
xchg
push
mov
xchg
mov
outsl
adc
in
mov
mov
out
loop
pop
jg
add
sbb
sbb
fdivl
lahf
jo
cli
nop
xchg
pop
aam
ljmp
jle
scas
xor
fwait
inc
dec
loop
fisttps
add
dec
inc
dec
jmp
scas
cmp
repnz
stc
xchg
or
add
cs
pop
cs
jge
add
arpl
daa
mov
adc
rclb
lds
cmc
mov
mov
ds
sub
mov
or
mov
inc
xor
mov
or
dec
insl
lods
mov
xor
dec
mov
mov
sub
mov
pop
mov
inc
imul
adc
call
xchg
mov
or
adc
insb
push
adc
insb
mov
fucom
mov
cmc
pop
adc
xchg
mov
or
and
dec
add
icebp
enter
inc
hlt
imul
lock
test
movsb
ljmp
jno
loop
xor
fisubrs
fmull
xlat
jbe
xor
sub
les
or
shlb
mov
sbb
push
xor
dec
or
fs
addr16
xor
pop
inc
sub
cld
push
push
pop
inc
int3
cmp
dec
lea
fmull
xor
mov
add
scas
sahf
add
and
fldl
inc
in
sti
and
inc
fsubp
xor
fisubrs
dec
push
mov
in
clc
addr16
nop
jae
inc
or
add
cli
push
rclb
adcl
push
xchg
imul
xchg
ret
inc
or
data16
dec
push
stos
ror
iret
or
lods
insl
mov
std
mov
and
mov
pop
shrb
mov
push
mov
in
xlat
lret
add
inc
scas
dec
cmp
cmp
flds
xchg
int
icebp
xor
jb
push
dec
ds
out
xchg
daa
pop
mov
and
cmp
sbb
mov
shl
push
je
sbb
pop
je
inc
lcall
test
xorb
xchg
xchg
pusha
push
cmp
repz
jnp
int3
mov
dec
ds
divl
xor
xchg
adc
lret
es
push
lret
test
sub
imul
push
dec
mov
stos
mov
push
sbb
push
repz
xchg
pop
and
dec
push
aam
int
push
mov
sbb
mov
aad
or
outsl
enter
andl
add
xor
sub
sbb
inc
subl
loope
test
js
call
inc
popa
test
mov
push
push
inc
or
cmp
cld
jno
aad
push
sub
xchg
add
stos
push
aaa
mov
nop
es
add
aam
ds
mov
daa
jns
mov
sarb
enter
mov
sub
call
call
mull
push
das
jecxz
mov
ja
jo
cltd
or
add
or
cmpsl
push
loop
call
imul
imul
inc
mov
jge
mov
test
cmp
jle
aam
aad
mov
not
xlat
xchg
ss
push
shr
in
rorl
negb
aas
push
fwait
iret
xor
loope
mov
pop
bound
push
or
mov
popa
xor
xorb
insl
or
lods
in
xchg
out
inc
push
inc
shl
pop
pop
sbb
cwtl
sbb
mov
push
and
enter
loope
inc
xor
test
jp
or
divl
leave
mov
cmp
fistps
imul
test
in
orl
pop
bound
fwait
popf
xchg
and
aam
or
mov
popa
arpl
pop
int
xchg
adc
scas
sbb
xor
add
or
out
pop
bound
shll
dec
pop
mov
xchg
xor
mov
loope
shrl
mov
dec
xor
ret
cmp
out
iret
faddl
outsl
push
xor
mov
xchg
enter
outsb
lds
nop
icebp
jmp
fwait
adc
push
cmp
loope
js
or
or
sub
mov
fisttps
shlb
mov
xchg
sbb
pop
lock
sub
jle
and
push
cmp
sub
roll
inc
repnz
dec
outsb
nop
mov
inc
jae
test
in
add
push
inc
insl
sbb
in
jns
mov
add
lea
mov
add
xor
dec
inc
mov
cwtl
cmp
ljmp
pop
or
aam
lcall
scas
sub
pop
cmpsl
out
cmp
inc
data16
cmp
inc
cwtl
jnp
fnstenv
cmpsl
mov
push
popa
insl
les
push
pop
test
fistpl
subl
add
sbb
or
jno
lret
or
pop
pop
call
push
sbb
popa
ja
cmpsl
popf
mov
and
sub
mov
lahf
pusha
dec
pop
jle
cmp
pop
out
mov
adc
inc
in
xchg
stos
cltd
jns
mov
repnz
popf
push
mov
mov
xchg
mov
xlat
stos
lea
leave
nop
shr
adc
sbb
lret
adc
inc
mov
gs
cmp
lods
popl
sti
std
mov
arpl
cmpb
dec
test
repnz
pop
shrd
xchg
imul
cwtl
mov
cmp
out
and
dec
loopne
push
ljmp
leave
mov
dec
add
stos
sbb
sub
addr16
xchg
cs
aam
jns
fstpt
mov
mov
mov
outsb
lock
or
mov
sub
insb
and
jge
pop
in
andb
dec
jg
and
push
jp
sub
mov
out
sbb
push
pop
jns
xchg
test
cmp
mov
mov
cmp
xor
repz
sbb
sub
mov
jp
jl
and
outsl
pop
mov
inc
fwait
popl
mov
ss
pop
mov
push
test
cmpsl
shlb
mov
addl
xchg
dec
mov
ficomps
push
lret
adc
jp
repz
mov
cmp
and
ljmp
addr16
or
aaa
xor
xchg
dec
in
or
leave
insb
push
mov
popf
scas
mov
sti
mov
roll
mov
sub
adc
sub
pop
pusha
mov
mov
adc
push
add
fs
or
lret
mov
cmp
sahf
in
mov
lods
sub
pop
pandn
daa
jp
lock
in
imul
jno
fisubl
pop
sbb
cmp
mov
das
sbb
mov
xchg
popa
rorl
out
mov
insb
mov
cld
add
int3
push
daa
and
jae
cmp
stc
push
pop
pop
adc
xchg
cli
inc
jge
and
mov
sub
cmp
and
push
int3
mov
inc
cwtl
sub
xlat
xlat
cmp
push
scas
xchg
movsb
mov
and
sbb
pushf
xchg
sbb
test
rsqrtps
xchg
inc
mov
mov
lods
xlat
test
push
inc
notl
xor
hlt
cltd
jp
add
dec
jae
aaa
ja
loop
mov
in
mov
adc
xor
out
leave
aaa
aam
jmp
cld
push
xchg
mov
or
cmc
dec
mov
movsb
loope
mov
push
stos
mov
sbb
jne
fisttpl
sub
aad
add
sub
jns
sbb
scas
jns
mov
mov
and
pushf
mov
into
lahf
sub
mov
addl
out
inc
enter
xlat
and
mov
dec
iret
mov
mov
mov
into
stc
int
js
ret
add
cmpsb
aas
mov
rcll
add
repz
adc
and
sbb
in
repz
out
mov
adc
and
cwtl
mov
add
popa
mov
inc
and
mov
test
sub
out
dec
fmull
iret
gs
ds
lds
in
push
ret
push
mov
jp
push
rcll
pop
or
inc
bound
in
lcall
idivb
mov
pop
lret
dec
shl
iret
cmp
pop
sbb
out
int
jne
das
jns
cli
lods
inc
adc
out
inc
add
dec
fstl
jp
pop
sbb
in
aam
daa
push
in
and
mov
xor
mov
push
xchg
imull
shrb
in
fsubl
cld
pop
call
push
xchg
add
shll
call
stos
lret
cld
xor
push
cmp
int3
jo
imul
mov
ds
adc
pushl
test
mov
test
ss
outsb
mov
gs
push
in
mov
test
sub
xchg
push
xchg
mov
mov
int
cmp
rorb
jno
or
ret
std
mov
js
cmp
push
lret
ja
ror
xchg
into
in
xchg
mov
out
ret
push
xor
sbb
adc
popf
ret
mov
fdivrs
int3
into
and
mov
shrl
lahf
inc
loopne
fwait
shlb
sub
scas
fidivs
mov
shlb
dec
pop
fcmovb
pop
jl
lods
cmc
add
or
mov
mov
mov
push
pushf
and
mov
and
dec
mov
fdivrl
inc
sbb
push
icebp
jbe
mov
xor
test
icebp
mov
sbb
inc
dec
push
lahf
rcrl
push
fisttpl
test
aaa
fiaddl
bound
add
push
cld
out
ds
mov
mov
in
je
or
fimuls
add
dec
in
fwait
addr16
mov
mov
clc
xor
add
or
dec
icebp
call
arpl
sbb
pop
mov
cmpb
ljmp
cli
xor
or
leave
push
add
inc
push
sbb
lods
frstor
movsb
push
sub
mov
bsf
pop
and
inc
mov
cmp
jp
in
and
pop
adc
push
xchg
ffreep
ss
mov
add
repnz
push
mov
mov
out
es
mov
popf
mov
js
mov
mov
ficoml
mov
aaa
lcall
xchg
addl
push
push
cmp
loope
in
repz
imul
cwtl
inc
xor
push
inc
inc
outsb
mov
ljmp
popf
arpl
sarb
in
add
jbe
cmpsb
inc
inc
or
sahf
out
je
scas
mov
mov
mov
sbb
add
push
lock
aad
sub
add
inc
mov
push
push
lods
inc
pop
dec
jb
pop
inc
mov
jno
mov
bound
xchg
in
mov
inc
sbb
push
addl
cmp
sub
or
jle
cld
iret
icebp
rorl
push
icebp
adc
inc
std
mov
incb
cmp
dec
mov
mov
xor
push
movsl
dec
daa
shrb
pushf
cs
add
fs
sub
cmp
mov
sub
xchg
push
xchg
add
rorl
sub
ja
dec
outsb
jmp
or
xchg
mov
cltd
jnp
ja
jne
int3
and
sbb
popa
mov
inc
ret
push
jnp
adc
in
pop
push
mov
pop
lods
jae
inc
jmp
das
mov
repnz
mov
movsl
xchg
in
es
add
cmpsb
mov
push
sub
dec
in
xor
loop
rolb
or
in
mov
push
push
mov
dec
ret
loope
push
pop
into
xchg
jne
loop
jnp
stos
ficoms
dec
cltd
sub
mov
in
sub
loope
pusha
jns
dec
stc
xchg
inc
sbb
xchg
pusha
aam
adc
in
hlt
mov
sti
sbb
xchg
pop
enter
push
and
hlt
and
frstor
inc
push
test
mov
data16
mov
movsb
out
fs
mov
arpl
mov
lret
shlb
adc
lods
movsl
sbb
dec
mov
mov
pushf
and
and
push
cmp
mov
aad
in
pop
jmp
push
pop
pushf
fsts
ljmp
xchg
out
fadd
test
mov
jmp
lret
pop
sub
mov
icebp
xchg
or
clc
pop
lret
pop
sub
mov
subl
cmp
ja
dec
mov
insl
push
hlt
divb
sub
jno
cli
dec
sub
mov
push
lret
add
pop
xchg
inc
sbb
les
cmp
jne
push
inc
pop
xor
jo
mov
divb
and
sub
push
mov
outsb
jge
adc
add
mov
cmc
popa
push
es
aam
xor
daa
fcoml
push
sti
cmc
repz
add
popf
xchg
jge
dec
mov
inc
push
mov
loope
sbb
mov
mov
mov
or
jecxz
mov
xor
test
pop
xchg
add
icebp
scas
icebp
jno
or
aam
or
stc
mov
lea
adc
push
je
aas
out
sbb
and
enter
loope
pop
mov
jae
lods
shrb
movsb
stc
sbbl
lods
repnz
sahf
mov
or
jmp
xor
push
sti
mov
push
sbb
divl
and
mov
cmp
aad
hlt
mov
dec
push
xor
shrb
int3
and
or
test
pop
shl
add
mov
shlb
cmp
or
sbb
cmp
sbb
repz
movl
mov
mov
sbb
int
clc
jp
pop
mov
fnstsw
mov
jne
jb
xlat
int
lods
adcl
fsubrs
pop
inc
sub
adc
js
push
dec
push
and
push
fnsave
jno
xor
inc
jbe
jg
or
fistl
repz
mov
dec
fwait
ds
enter
xchg
in
mov
mov
mov
fildl
push
inc
psubw
ds
xchg
inc
fsts
push
add
test
mov
jne
pop
xor
mov
sub
outsb
pop
js
fists
arpl
ffreep
cmp
jno
xchg
aad
mov
xchg
pop
fildll
ja
js
dec
lret
and
div
es
add
mov
push
fcompl
rcrb
addr16
mov
inc
in
dec
lcall
shl
int
sahf
push
stos
or
or
fs
push
addb
and
data16
imul
inc
and
sub
or
ja
pop
sub
push
jb
jb
aam
ja
ljmp
lods
enter
out
repnz
in
xchg
daa
not
cmp
clc
ret
or
push
mov
in
push
xor
sub
adc
repnz
jge
mov
sbb
lcall
and
pop
inc
mov
arpl
push
fldpi
sub
pop
xor
outsl
scas
sbb
sbb
in
jge
pop
lea
imul
out
mov
decb
pop
insb
cs
xchg
xchg
dec
rorb
mov
inc
xchg
sarl
push
or
fidivrl
in
lahf
aam
push
je
sub
int
repz
pop
or
pop
mov
inc
test
mov
es
jbe
icebp
test
aas
jno
inc
mov
sub
cmp
pop
mov
out
into
pop
push
push
lods
xchg
push
mov
sti
sub
add
jns
dec
inc
repz
das
stos
lods
and
shrb
dec
dec
fcmovbe
add
or
fsts
inc
scas
mov
mul
int
inc
cli
or
jge
rcll
scas
imul
pop
add
xchg
mov
mov
or
cmc
xchg
into
pusha
sbb
insl
pushf
mov
lds
pop
clc
push
cs
pop
nop
ljmp
adc
movsb
sbb
std
test
sub
lcall
mov
aam
mov
add
mov
cmpsb
jecxz
int
mov
in
fadd
out
cmp
ficomps
jb
push
jp
push
pop
inc
enter
out
sbb
add
mov
stos
sub
mull
and
mov
fwait
rorl
jns
movsl
push
into
or
mov
int
aam
mov
scas
dec
cld
test
sti
sub
lods
push
sahf
mov
sbb
dec
test
mov
inc
loop
sub
jecxz
pop
lods
cmc
push
push
loope
stos
jp
or
sub
outsl
out
js
in
inc
mov
mov
xor
jp
or
jl
and
mov
jg
cli
ljmp
test
int
aaa
dec
insl
ret
or
xor
into
pop
gs
sub
mov
mov
mov
fcomp
xor
add
enter
cmpsl
data16
inc
fwait
jb
jecxz
push
mov
jb
fldenv
loop
lods
cltd
pop
jnp
inc
pushw
iret
mov
pop
and
pop
pusha
fwait
push
in
sarb
fs
inc
fisubrl
push
dec
rorl
mov
xor
daa
lret
pop
insb
add
or
outsl
push
aaa
inc
mov
addl
frstor
popf
sub
cmpsb
mov
lea
bound
pusha
std
push
int3
xchg
les
push
popa
xchg
fstl
jg
cmp
push
jae
and
xor
sbb
jb
mov
mov
adc
cld
mov
xor
mov
imul
cwtl
and
scas
xlat
sbb
sbb
jmp
or
inc
mov
add
mov
cmp
lds
std
or
subb
mov
fists
fidivrs
pop
scas
mov
mov
fisubrs
outsb
aam
in
sahf
xchg
sarl
cmp
and
insl
adc
cmp
daa
mov
shll
cmp
call
add
cmpsb
ljmp
gs
mov
push
addr16
int3
cltd
jns
pause
xchg
xchg
jmp
push
xchg
aas
push
mov
and
int3
cmp
mov
flds
outsb
montmul
cmpsb
adc
mov
xchg
mov
aam
sbb
push
adc
stos
jnp
test
cmp
xchg
mov
subl
mov
insl
xchg
mov
scas
fsubrs
xor
ljmp
inc
icebp
push
insl
and
adc
sub
call
xchg
cwtl
jne
pop
out
pushl
cld
js
cmp
jge
arpl
inc
dec
push
adc
insb
out
dec
xchg
push
adc
xchg
and
dec
in
test
and
inc
mov
add
push
dec
xchg
xor
add
mov
jb
test
push
cmc
pop
cmp
lds
or
cmp
or
jb
and
adc
test
icebp
cmpsl
out
ljmp
lret
movsl
repz
sub
sub
cli
and
mov
cltd
pop
inc
hlt
pushf
popf
and
pop
xorb
push
push
lret
rcr
xor
fwait
jno
xlat
mov
pop
jb
lods
cmp
arpl
aas
add
mov
shr
dec
shrl
adc
add
imul
insb
test
mov
pop
popa
sbb
push
cmpsl
jmp
fbstp
lret
jp
inc
lret
add
insl
adc
fwait
sbb
fwait
inc
adc
inc
inc
and
lds
out
push
dec
ljmp
or
enter
subb
push
in
lret
sbb
pop
mov
aam
sbb
out
inc
push
fcmovu
outsb
xor
es
popl
xor
cmpsb
scas
inc
das
and
test
loopne
fs
or
insb
movzwl
mov
cmp
mov
ret
sbb
inc
mov
xchg
fnstcw
mov
adc
sarb
adc
mov
dec
push
jmp
aad
loopne
fwait
dec
mov
pop
pop
in
pushf
and
fucomp
inc
loop
or
shll
cmc
and
mov
jns
sub
push
sti
mov
pop
test
push
and
xchg
lods
mov
inc
or
jo
icebp
movsb
sub
mov
out
dec
xchg
in
xchg
daa
sbb
test
popa
dec
lock
push
icebp
push
cwtl
lds
mov
pop
dec
add
inc
mov
jmp
rorl
out
out
and
mov
addr16
pop
ljmp
jne
push
mov
dec
lret
pop
sub
cmp
push
iret
dec
pop
and
sahf
loop
and
push
rcl
ds
imul
sub
loopne
sbb
int
dec
shr
lock
xchg
ja
push
mov
cmp
enter
xor
fmul
add
or
mov
cwtl
xchg
mov
mov
xchg
jle
sbb
push
mov
imul
sbb
cli
pop
adc
lahf
mov
or
fcmovnbe
cmpsl
adc
pop
mov
in
cmp
mov
adcb
adc
loope
cmp
xchg
mov
bound
xor
push
lahf
sbb
or
insl
push
das
dec
inc
outsl
mov
xchg
inc
push
lods
adc
xchg
dec
mov
mov
mov
mov
incl
imul
pusha
into
jl
shlb
pop
cld
psubusb
arpl
popf
outsb
jge
xor
adc
add
lahf
xor
stc
mov
add
clc
jns
push
or
sub
sub
push
sbb
push
dec
ljmp
mov
jmp
lahf
std
dec
push
sub
ds
ss
stc
test
push
xlat
sub
adc
mov
jp
add
lret
int
in
aad
lods
mov
pextrw
push
pusha
cmp
lret
int3
jns
sti
test
fists
sti
push
gs
push
loopne
mov
pushf
jge
std
gs
mov
xor
fs
add
adc
inc
jno
inc
cltd
gs
push
xchg
jp
leave
cmp
and
or
push
xor
or
adc
je
pop
cwtl
mov
lea
cmp
stc
pop
add
les
std
cli
adc
push
inc
shll
push
notb
jecxz
push
inc
lret
int3
outsl
adcb
decl
cmpsb
roll
movntq
imul
xchg
imul
lahf
lahf
xchg
in
add
xor
sbb
xchg
cld
inc
outsb
outsb
mov
popa
iret
cmc
mov
cmp
push
ja
xchg
and
lock
stc
dec
test
pop
add
or
test
adc
sub
repz
sbbl
jecxz
add
pusha
mov
and
jge
dec
push
iret
dec
lds
std
ret
jecxz
cmp
lahf
mov
jmp
fstps
push
jmp
testl
inc
fcompl
stc
or
fcomip
mov
inc
dec
adc
in
cld
or
jp
mov
jae
lods
call
outsl
xor
jecxz
shrb
push
sbb
loop
push
sub
mov
sbb
jge
jne
pop
sub
popf
repnz
bnd
bnd
ja
mov
mov
add
iret
hlt
jmp
lahf
pop
mov
inc
mov
arpl
loope
sbb
push
into
fiaddl
mov
mov
icebp
fimuls
push
shr
add
xor
mov
pop
cmovae
mov
mov
test
mov
cmovle
push
pop
dec
inc
mov
mov
repz
adc
int
popf
nop
jnp
repnz
in
sub
jge
lock
lahf
jne
cmp
mov
jp
adc
and
stos
pop
in
cmpl
das
and
stos
adc
push
pop
lcall
in
sub
call
mov
xlat
movsl
push
dec
dec
bnd
pop
sbb
add
int3
mov
jnp
in
xor
mov
push
add
cmp
div
daa
lock
push
ja
jo
cmp
push
sub
stos
popf
sub
xor
jp
pop
stc
mov
cltd
dec
mov
inc
das
mov
sti
mov
rcrb
es
sbb
movsb
dec
loop
outsb
mov
mov
orl
jge
pop
cmp
hlt
jb
push
jp
aaa
push
frstor
pop
pop
aaa
mov
imul
cltd
dec
dec
out
test
jp
mov
daa
test
pusha
fldcw
dec
cltd
ss
fcom
mull
ret
dec
adc
sahf
mov
push
nop
fdivrs
mov
xchg
jl
pop
mov
dec
or
lret
dec
xor
xor
add
cmp
call
add
mov
jmp
inc
mov
sbb
pop
xlat
push
adc
inc
fs
fs
sbb
stos
mov
lock
test
cli
jecxz
add
iret
xchg
cld
cmp
mov
ja
popa
cmp
sti
loop
insb
jp
pop
aas
outsb
scas
scas
addr16
lods
xor
fbld
outsl
in
cltd
pop
xchg
fldl
pop
aaa
loopne
add
jle
mov
sub
pop
push
mov
repnz
fdivrl
movsl
sbb
mov
or
sbb
and
rolb
movsl
and
mov
push
cmp
push
test
test
pop
dec
xor
and
dec
es
stos
push
push
les
mov
insb
mov
inc
mov
pop
in
mov
mov
or
add
es
test
mov
inc
lds
insw
out
loopne
pop
ret
dec
arpl
fcomps
sub
xchg
cmp
or
ret
adc
jp
mov
xor
pop
lods
call
outsb
data16
jno
scas
push
cmp
outsl
mov
jge
dec
mov
stos
or
mov
aad
mov
mov
xrelease
mov
fsubl
push
pop
mov
cmp
jb
mov
jmp
out
add
fwait
mov
push
in
dec
cwtl
fidivrs
pusha
or
push
iret
shlb
push
or
jbe
adc
xchg
test
fstps
and
push
inc
pop
and
mov
ja
jo
add
insb
push
fmuls
xor
mov
in
pop
dec
repnz
fildll
and
jmp
in
movsb
jp
cli
sbbl
or
test
sub
dec
jo
call
adc
cli
outsl
inc
inc
movsl
mov
ret
gs
xchg
mov
mov
xchg
fwait
or
repnz
fdivs
jo
mov
insl
rolb
ljmp
test
and
arpl
aaa
pop
sbb
mov
and
cmpsb
sbb
sbb
rolb
xchg
lods
adc
cmp
xchg
or
fldcw
clc
hlt
or
adc
mov
sarl
lret
mov
aaa
les
mov
push
ret
sbb
add
fucomip
push
aad
adc
cmc
das
push
xchg
jb
xor
imulb
mov
mov
and
or
into
mov
lds
xor
push
add
shrb
fs
push
cmpsl
push
dec
mov
push
lods
push
repnz
pop
stc
test
mov
xor
flds
cmc
push
imull
imul
lret
xchg
xchg
xlat
xchg
or
mov
popa
cmpsb
imul
lahf
addl
lods
mov
inc
mov
inc
inc
lret
push
ss
movsb
insl
in
mov
popf
call
and
add
cmc
cmp
leave
test
mov
jp
jnp
mov
xchg
inc
outsb
fwait
or
aam
movsl
push
sub
dec
inc
dec
inc
dec
mov
xor
fcmovbe
cltd
add
xor
jmp
add
leave
aas
jne
je
mov
push
cmc
jnp
jns
mov
mov
in
pop
ss
js
lods
xor
std
loop
repnz
mov
mov
faddp
dec
mov
jb
jae
xchg
les
in
mov
push
lret
lahf
jmp
jp
aam
hlt
and
ljmp
cld
jns
imul
mov
xchg
inc
out
pop
cmpl
test
fldt
mov
out
mov
imul
lock
bound
out
xor
push
xchg
add
cmp
test
push
sub
or
xchg
or
mov
clc
repz
pusha
stos
jmp
cmpb
ss
and
add
fs
pusha
jno
or
repz
sbb
ljmp
mov
xchg
repnz
fs
jne
int
jbe
popa
mov
jo
dec
mov
mov
mov
movsl
es
jno
loop
arpl
inc
test
pushf
xlat
sbb
sub
insl
rcr
cmp
mov
arpl
xchg
test
adc
ljmp
movsl
cltd
mov
imul
pop
into
xlat
stos
pop
fnstenv
jbe
add
int
loope
inc
stos
ds
or
push
imul
cmpsl
and
cmpsb
arpl
fcomps
lods
push
or
sub
jge
subl
xor
in
aam
mov
mov
pop
test
push
or
movsl
out
cs
ja
mov
dec
mov
dec
mov
dec
ljmp
mov
addr16
out
iret
mov
sub
adc
sbb
sbb
jp
xchg
jbe
and
xor
loop
or
sub
decl
mov
push
jno
mov
in
dec
leave
push
aaa
pop
in
aad
cmp
inc
fdivs
adc
or
lret
pop
imul
push
or
test
mov
pop
push
push
adc
cmp
mov
xchg
pop
into
addl
add
inc
or
movsl
inc
pop
xor
lret
or
push
dec
aaa
ret
xchg
loope
aad
sub
lods
iret
add
pop
in
inc
or
out
or
mov
pop
cmp
cmp
jno
popf
popf
mov
xchg
inc
test
pop
shl
adcb
push
outsl
dec
mov
cli
sub
add
add
js
cmp
movsl
inc
fdivs
push
push
outsb
adc
push
mov
xor
aas
push
int3
mov
sub
jge
mov
jmp
fs
cld
sbb
mov
jbe
sub
cmp
call
push
in
int3
inc
sbb
pop
les
dec
sarb
lahf
cli
rcll
aas
and
pop
and
jne
lea
jae
jle
pop
js
es
loop
jae
mov
ja
fsubs
inc
sub
pusha
sti
dec
aaa
mov
cld
mov
xchg
addl
dec
or
sub
icebp
jle
jne
xchg
sub
mov
jae
mov
dec
ss
pop
scas
jmp
jo
int
and
rclb
mov
dec
jmp
insb
shlb
or
addr16
movsl
in
arpl
inc
inc
int
popf
out
popa
adcb
addr16
stos
dec
shr
jg,pn
jp
cmc
std
repnz
mov
mov
daa
fstpl
aaa
jbe
aaa
enter
aad
xor
add
cmpsb
insb
mov
ds
div
int3
stos
loope
jle
add
int3
hlt
xor
daa
ljmp
adc
out
mov
push
lock
call
push
addr16
cmpsl
fdivrs
inc
fmull
mov
mov
push
adc
mov
add
cld
mov
or
mov
imul
cmpsl
aaa
mov
mov
repnz
arpl
testl
scas
fistpl
imul
lcall
mov
cmpsb
lods
jne
mov
sbb
lock
popa
fisubl
or
lcall
cmpl
mov
add
pop
dec
push
test
push
push
hlt
push
repz
aad
add
add
mov
pop
pop
add
sbb
inc
pop
sbb
push
js
and
imul
mov
adc
add
mov
ja
push
xor
cwtl
sahf
adc
push
cmpl
mov
fwait
nop
or
dec
aad
sti
shll
xor
jp
cwtl
xchg
int3
ret
xor
mov
adc
pop
js
inc
ficoml
jl
in
dec
jge
out
sub
sbb
jns
mov
outsl
test
lods
fstpl
sub
popa
adc
and
cmc
movsl
add
mov
aas
pop
icebp
shlb
stc
sbb
loope
fs
out
outsl
je
bnd
out
add
mov
fstps
mov
shl
push
mov
jle
fwait
mov
repz
test
push
or
pusha
pop
hlt
sub
fstps
and
fucomp
mov
cld
loopne
pop
out
mov
inc
test
jl
mov
int3
mov
pop
dec
popf
repnz
mov
sbb
fisubrs
xchg
loopne
fimuls
call
jmp
fmuls
arpl
push
es
xor
xchg
mov
add
scas
dec
push
jl
dec
lret
jns
lock
into
outsl
lds
push
inc
insl
aaa
inc
and
pusha
fisubrl
jbe
es
mov
push
pop
popa
pop
push
mov
dec
dec
adc
push
popl
cmp
repz
pop
loop
or
outsb
insb
lret
in
cwtl
cmp
and
xchg
pop
in
jne
or
push
repz
stc
mov
inc
aam
sub
mov
add
out
icebp
jp,pt
call
jmp
sbb
inc
mov
sbb
clc
jmp
jno
fsubl
aas
test
test
mov
sub
xchg
push
movsl
fimull
jecxz
inc
pop
mov
xchg
lea
pusha
repnz
shlb
xchg
out
adc
mov
lret
push
imul
stc
rorl
int3
scas
add
movsb
mov
fiadds
mov
sarl
outsb
dec
lahf
test
out
pop
out
outsl
pop
sti
std
and
sub
mov
jl
mov
rcll
push
pop
and
and
dec
jecxz
jl
fld
dec
outsb
push
mov
fmuls
sahf
std
out
pushf
pop
mov
jns
mov
pop
nop
add
scas
mov
sub
pop
adc
test
rorb
xor
gs
push
je
xorl
repnz
sub
in
stc
push
out
shl
push
xchg
test
aad
and
xchg
xor
lcall
push
pop
push
and
or
je
cmp
pop
or
test
cmpsl
into
pushf
scas
sbb
push
sbb
outsb
lods
es
loop
in
push
mov
push
ss
es
mov
add
push
iret
movb
in
and
roll
das
fs
mov
and
rdtsc
repnz
inc
inc
or
ds
int3
int
aas
cmp
xor
push
fsubrs
jp
iret
push
in
dec
movb
je
rcll
jecxz
rolb
repz
xchg
inc
stc
cmp
pusha
or
or
and
ret
cld
adc
push
out
fwait
push
sub
push
inc
sbb
shl
xchg
push
fstps
hlt
cmp
xchg
xchg
or
pop
mov
jle
loop
mov
call
mov
js
inc
and
and
inc
nop
arpl
fstp
clc
or
sbb
dec
lcall
clc
inc
rcll
mov
inc
mov
scas
xchg
rorb
pop
push
fidivl
aad
inc
loope
cmp
aas
sub
mov
dec
fiaddl
push
add
insb
stc
inc
xor
xchg
mov
cs
es
xor
xor
frstor
enter
fs
pop
jbe
ljmp
adc
rep
rcrl
repnz
and
repz
add
lods
xchg
adc
fwait
and
pop
or
add
in
cmp
mov
jecxz
pop
push
fstp
or
inc
dec
scas
sbb
jne
out
lods
leave
loope
adc
testl
repz
gs
or
jbe
or
in
lock
insl
scas
ss
jp
enter
out
or
adc
in
mov
pop
ja
mov
lea
cmc
inc
enter
aam
add
int
fildl
push
scas
fs
mov
daa
mov
out
ficoml
int3
xchg
xor
lret
pop
and
nop
xchg
pop
mov
xchg
sbbl
stos
or
hlt
sbb
dec
sbb
fsts
mov
adc
or
and
adc
inc
ss
mov
stos
in
pushf
dec
push
xor
jb
xor
mov
and
imul
popf
fiadds
mov
outsb
mov
movsb
jo
push
mov
cli
add
aas
dec
out
cli
ss
lods
popa
scas
lods
nop
roll
or
dec
jl
dec
adc
addr16
or
lods
mov
xlat
rcl
pop
jnp
test
sub
add
xor
andb
dec
cmp
add
push
in
mov
and
fistl
xchg
jmp
enter
out
enter
push
sbb
mov
mov
imul
stc
mov
dec
dec
fsqrt
xchg
in
xor
rcrb
dec
es
mov
mov
mov
jle
into
aas
xchg
jl
jecxz
out
shlb
mov
dec
pop
push
dec
jp
inc
pop
sbb
mov
pop
test
mov
aas
sahf
inc
cmp
mov
pop
add
xchg
mov
pop
adc
jne
or
sub
and
mov
int
push
imul
mov
inc
sub
xchg
push
sub
adc
sbb
inc
jle
push
shl
push
sbb
dec
mov
outsl
jl
xor
test
mov
fisubrl
enter
dec
add
add
pop
xchg
stos
mov
or
sarb
jmp
fcomi
icebp
arpl
mov
or
fwait
mov
cmp
cld
jo
jns
adc
pop
fwait
into
aad
out
ljmp
lds
mov
pop
loope
les
sbb
sbb
cmc
out
mov
popa
inc
ds
int
xchg
push
push
inc
cmpsb
jp
or
and
and
out
cmpsb
int
fwait
cmpsb
jbe
cmpb
jo
inc
push
jle
sahf
pop
xor
pop
pusha
lahf
iret
rcrl
rcll
pop
sbb
jo
adc
mov
mov
subl
inc
jbe
aam
or
daa
rcll
or
push
cmp
sub
jnp
pop
or
test
into
out
mov
cmp
out
mov
mov
ds
xor
rcrl
and
adc
and
faddl
sahf
mov
scas
and
xor
notb
pop
stos
iret
add
shll
sbb
outsl
sbb
or
mov
dec
jo
ja
icebp
jmp
push
dec
xor
sti
js
loopne
movsl
xor
xor
mov
aaa
inc
incb
jmp
fstpt
ret
xor
mov
lret
imull
in
ret
push
cmp
scas
or
es
and
sbb
lock
cmp
jnp
xchg
out
imul
push
sub
subl
mov
mov
arpl
stos
popf
sbb
out
fstpl
add
push
cltd
fnstenv
shrb
gs
fidivl
data16
adc
in
pop
test
sti
lods
or
decb
lahf
push
fstpt
cmpsl
leave
stos
push
sub
std
xchg
sub
cmpsl
sub
fmul
mov
ss
iret
xor
popa
or
addr16
dec
call
outsl
mov
scas
lods
outsl
cmp
cld
stos
aad
mov
clc
pop
cltd
movsb
les
and
mov
inc
in
push
iret
and
push
shl
ret
in
jb
les
mov
mov
in
inc
mov
sti
sarl
imul
popa
pop
pop
cld
sbb
fcomip
leave
mov
jle
mov
adc
test
icebp
int3
add
into
push
cmpsb
fucom
aaa
add
fistpl
loop
push
mov
lods
dec
push
mov
imul
mov
scas
mov
sub
cmp
jns
int
xlat
rorl
jne
in
push
aam
sbb
mov
lcall
test
icebp
pop
or
pop
dec
test
pop
je
push
icebp
push
mov
push
in
orl
jo
ret
orb
into
hlt
add
imul
inc
jo
stc
push
xorl
mov
adc
push
outsb
jl
stc
lods
iret
or
es
rol
into
ljmp
lret
dec
or
movsl
cmpsl
pop
xor
adc
daa
mov
cmpsl
adc
aaa
in
jmp
add
mov
pop
xchg
dec
in
push
fadd
out
aas
shlb
sbb
and
mov
adc
js
sbb
pop
xchg
imul
cwtl
dec
mov
test
xchg
shrl
inc
mov
adc
add
ret
test
movsb
lea
enter
mov
or
push
pop
addl
jecxz
dec
and
xchg
mov
mov
adc
in
in
pop
jg
jmp
cmp
lahf
out
sub
sarl
push
jge
aad
fcom
mov
sub
mov
adc
outsl
push
lcall
xor
scas
ljmp
lahf
xlat
jo
mov
mov
adc
test
dec
inc
xchg
das
call
movb
shll
lret
sub
stos
mov
xchg
jge
mov
add
das
mov
enter
jns
andb
int
popf
divl
popf
sbb
push
or
adcb
fwait
mov
lods
jb
daa
adc
fucomp
mov
sahf
pop
lahf
mov
div
xor
dec
jp
paddb
inc
testb
mov
lea
je
sub
jae
or
pop
jo
mov
lret
cmp
mov
cmpsl
insb
sti
les
sbb
mov
xor
test
xchg
or
into
xor
mov
inc
xor
in
push
mov
arpl
lods
in
andb
andb
out
dec
inc
sarl
pushf
movsl
add
sbbl
out
iret
adc
ds
adc
adc
inc
inc
sub
cmp
push
imul
lret
mov
pop
mov
enter
loopne
xchg
aam
or
jo
xchg
mov
fimuls
cmp
ja
push
xchg
inc
inc
cltd
in
in
pushf
ljmp
inc
ret
cmp
mov
cmp
push
pop
mov
imul
sbb
frstor
in
test
cld
mov
xchg
or
pop
cld
xchg
push
fucom
psadbw
loopne
adc
mov
jo
outsl
pop
and
call
ret
push
xchg
pop
push
enter
imull
sahf
push
hlt
jo
xor
pusha
or
movsb
scas
sbb
in
xchg
cmp
jmp
adc
xchg
xchg
scas
sbb
popa
out
mov
add
mov
mov
or
pusha
iret
movsl
push
cmp
jbe
je
mov
mov
cmp
cmpsb
cmc
out
adc
aam
adc
sti
push
mov
mov
ds
add
clc
in
mov
imulb
inc
push
shll
andb
fsub
adc
add
xchg
movb
popf
bound
dec
cmp
jo
cltd
pop
push
sbb
mov
rcrb
add
add
std
fcomps
xchg
adc
xlat
cmp
das
mov
cmp
pop
hlt
mov
inc
inc
inc
jle
mov
lea
pop
cmpl
ret
inc
xchg
mov
inc
shll
dec
push
mov
rorl
inc
pop
mov
rcrb
xchg
lods
insb
cs
enter
fsubrs
fldenv
xchg
test
bswap
mov
push
mov
decl
or
cmpsl
fbld
lahf
in
sub
cltd
cmp
shll
movsb
in
jae
adc
pop
enter
addr16
in
aaa
mov
mov
es
add
aad
push
mov
jae
arpl
or
xor
cmp
mov
test
lock
hlt
or
xlat
cld
cmp
adc
aam
into
test
inc
and
dec
adc
dec
jmp
out
cmpsl
cmpsl
lods
jb
test
mov
test
inc
pop
push
lods
adc
push
inc
jecxz
xchg
jecxz
jae
adc
lahf
jb
pop
cmpsl
sub
shrb
psllw
fwait
pop
lea
push
mull
cmp
push
imul
sub
pop
xor
lcall
shl
outsl
xor
loopne
cmpsl
je
inc
sub
jle
or
loope
mov
xor
mov
inc
dec
xor
pop
jle
pop
sti
into
add
push
fiaddl
test
fstpt
data16
cmp
loope
mov
inc
imul
std
hlt
loope
fwait
out
jmp
push
fdivl
or
nop
xchg
jle
out
xlat
addl
aaa
dec
mov
pop
outsb
dec
pop
mov
leave
fcmovne
jp
aam
std
add
push
ja
lock
popf
into
inc
jne
orb
into
pushf
es
adc
push
add
cmp
jle
outsl
sub
outsb
int3
addr16
loopne
sbb
shrb
or
sbbl
pop
inc
in
mov
cmp
inc
das
int
fxch
popf
mov
aad
ret
mov
aas
data16
dec
inc
mov
jne
pop
fiadds
or
mov
stos
mov
mov
sub
mov
mov
lret
lahf
fld
add
mov
add
jne
pop
sub
pop
stos
jmp
add
mov
scas
inc
inc
jnp
fwait
push
mov
jbe
pop
movsb
dec
mov
cmc
pop
in
ds
into
cmpsb
jb
jbe
insb
xor
push
test
sbb
or
jp
arpl
outsb
and
ret
pusha
inc
inc
inc
and
rcrl
mov
or
xchg
imul
cmp
ja
in
push
adc
jae
mov
jge
ds
pusha
std
into
push
cmp
and
ffree
sbb
jne
sbb
dec
adc
sub
adc
xchg
xchg
adcb
loop
cmp
pushf
sbb
icebp
push
jnp
aam
nop
dec
enter
cmp
sbb
not
ficoml
and
sub
ret
mov
lods
loopne
and
mov
out
aaa
add
cmp
aaa
add
xchg
orl
int3
cmpb
xchg
mov
adc
leave
jnp
insl
xchg
jb
and
test
mov
fwait
stos
push
xchg
loop
aaa
jmp
flds
sahf
cmpsl
pop
ss
sub
in
mov
xor
addr16
mov
es
out
arpl
sub
popa
mov
or
and
mov
movsl
notl
or
fldlg2
loop
jecxz
neg
loopne
enter
imul
popa
ljmp
or
jg
ficomps
pop
adc
int3
jl
or
push
outsl
cs
mov
fwait
iret
in
pop
mov
xchg
test
fisttpll
leave
and
push
push
mov
movsl
insl
mov
cs
cli
xchg
addb
mov
xchg
push
cmp
cmp
test
and
sti
ret
das
lret
lock
stos
cmp
lods
mov
inc
sbb
pop
lods
jns
jne
push
add
mov
jmp
sub
add
pop
cmp
jmp
add
pop
sub
mov
cmp
enter
outsl
les
dec
mov
push
data16
jb
jae
and
xor
rcr
out
lods
cmp
stos
pop
cmpsl
dec
fistpl
fldenv
rcll
add
fucom
fisttpl
add
push
sti
pop
scas
jmp
test
xchg
ficompl
jbe
push
or
cmp
clc
jle
loope
std
mov
xchg
dec
dec
add
xor
mov
mov
mov
out
dec
mov
xor
sub
ljmp
sbb
sbb
ficoml
xchg
dec
mov
mov
sub
arpl
in
inc
jb
fists
dec
dec
sub
icebp
xchg
or
inc
popf
jae
jb
js
mov
xor
xchg
movsl
mov
scas
icebp
mov
adc
outsb
divb
jle
xchg
fistpll
xor
rolb
mov
inc
ret
ds
out
jnp
dec
adc
xor
push
in
mov
push
cmp
dec
mov
mov
xorl
mov
or
es
sti
xchg
mov
and
nop
cmp
in
lea
push
clc
pop
addl
into
stos
push
aas
loopne
adc
fstps
and
or
fs
jnp
cwtl
mov
pop
push
add
cmp
mov
jnp
and
sbb
sti
mov
sub
push
stos
or
push
data16
jae
push
xchg
or
les
shrl
std
dec
bound
sahf
mov
leave
rol
fwait
inc
leave
cmp
fsts
cs
lods
insb
lret
sbb
insb
sahf
test
xchg
mov
insb
xor
nop
in
je
xchg
add
adc
movb
or
es
jecxz
adc
rcll
add
dec
stos
mov
add
aad
popa
xor
fwait
mov
ffree
lods
mov
das
enter
push
in
loope
mov
jbe
sub
and
dec
and
and
mov
jo
cmp
jg
push
cmp
test
xor
push
dec
sub
inc
fwait
dec
in
sahf
outsb
xor
xchg
gs
lock
out
push
in
jb
imul
lret
mov
cmp
nop
lahf
jns
sbb
pushf
push
pop
pop
in
dec
das
test
mov
dec
testb
pusha
adc
aad
jbe
xor
shrl
xor
adc
hlt
mov
stos
cld
mov
mov
mov
cmp
sub
and
popa
adc
adc
jl
popf
add
add
scas
addr16
fsubrp
dec
dec
shrb
outsb
shrl
push
push
pop
pop
fnstcw
adc
sub
mov
scas
test
jb,pn
mov
pushl
leave
ljmp
std
mov
arpl
dec
adc
push
xchg
out
mov
mov
mov
xchg
nop
dec
lods
popa
mov
fcoml
jae
negb
add
xor
sarl
push
out
push
pop
adc
mov
sub
mov
mov
mov
sbb
sub
inc
pop
les
mul
jns
imul
mov
leave
inc
pop
out
int3
push
cmp
pop
xlat
sub
aad
fndisi(8087
pop
les
int3
inc
shrl
mov
rcll
push
sti
ficoms
adc
mov
iret
into
out
push
imul
mov
in
push
sub
movsb
cltd
scas
pop
pushf
or
sar
sahf
scas
adc
pop
mov
test
cmp
imul
addr16
and
mov
cmp
gs
call
push
neg
dec
xor
push
xchg
lret
int3
pop
imul
outsl
push
orl
ror
in
fwait
add
mov
jl
rcrb
ret
cld
cmp
fsubl
mov
or
divb
sbb
cmp
roll
lea
lret
mov
int
fs
test
pop
sahf
adc
js
jo
iret
and
call
fidivrs
or
sub
pop
je
push
adc
cmpsl
out
jp
jmp
push
or
mov
dec
jne
inc
mov
inc
sti
sahf
sbbb
aam
jns
sbb
cmc
push
pop
mov
xchg
jne
add
test
sbb
dec
push
mov
ss
shll
jo
add
or
inc
cmp
cmp
xchg
and
push
dec
xor
adc
xchg
cmp
aaa
mov
dec
or
in
xchg
fstp
adc
xlat
cmp
inc
addr16
pop
leave
push
mov
fisttpll
stos
xchg
out
cmpsl
pusha
jl
xchg
lahf
scas
inc
mov
pop
mov
shrb
out
ss
add
push
jbe
mov
pop
xor
icebp
cmp
imul
fs
inc
aam
stc
sbb
cwtl
cmpsl
and
mov
cmp
inc
add
lea
adc
fxch
and
mov
fwait
and
daa
mov
dec
lahf
insl
insb
shl
loope
sub
fstpt
xor
push
insl
scas
or
shlb
mov
dec
inc
pop
rcll
pusha
repz
pop
out
and
into
vmovaps
mov
fidivs
sbb
and
inc
xchg
rorb
add
jle
lahf
in
test
sbb
xor
add
stc
in
sti
mov
cltd
xlat
cmc
hlt
and
mov
adc
and
loopne
or
mov
pop
push
mov
int3
mov
mov
lea
int3
mov
mulb
push
cmp
inc
sbb
xor
pop
jecxz
fcmove
or
mov
mov
movsl
jmp
sbb
cmp
xchg
ss
or
lcall
adc
add
mov
movsl
mov
mov
sbb
shlb
sub
push
jnp
bound
sbb
leave
addr16
mov
scas
js
xchg
cmpsl
inc
mov
sub
cwtl
shll
ja
aaa
rorl
cltd
fwait
mov
adc
mov
push
or
or
and
stos
jns
cld
mov
pop
fidivrs
jle
and
dec
and
fsub
sbbb
adcl
xchg
dec
or
mov
ret
cmp
ret
xor
inc
mov
js
out
inc
add
sbb
fdivr
mov
sub
in
sahf
lcall
int
mov
sets
stc
mov
xor
xchg
imull
popf
jle
mov
xchg
repnz
mov
loop
std
jne
pop
or
sub
or
sarl
xchg
push
leave
popa
repz
aaa
loopne,pn
sbb
imul
mov
es
sbb
xchg
movb
mov
dec
fstps
push
test
inc
and
dec
xchg
out
icebp
sub
or
and
daa
jne
lods
enter
xchg
aam
pop
inc
loopne
and
rcl
xchg
fisttps
xor
mov
and
sbb
xchg
popf
sahf
xchg
mov
sub
cmp
scas
pop
jp
aaa
lea
lods
dec
push
adc
mov
adc
xor
jecxz
and
outsb
add
push
insl
sub
mov
push
cs
fimuls
int
ret
xchg
xchg
mov
aaa
je
adc
out
pop
mov
sub
lock
test
out
sbb
and
mov
xor
jmp
js
adc
stos
pop
fldt
mov
push
notb
mov
out
xor
test
icebp
notb
jmp
add
cltd
insb
add
add
sbb
loop
lock
insb
mov
movsb
repz
adc
dec
movsl
inc
loope
or
sti
ret
sub
pusha
add
pop
and
iret
xor
repz
faddl
stos
leave
sub
mov
rorl
sub
xchg
js
nop
in
aad
imul
mov
cmp
mov
pop
hlt
cltd
mov
inc
mov
aam
jne
lret
sbb
decb
cli
jno
leave
int3
pop
roll
test
insl
lret
mov
xchg
cmpsb
gs
insl
aad
scas
outsb
add
sti
mov
pop
testl
sub
xor
ret
mov
inc
out
xchg
mov
mov
int
push
aas
jmp
inc
pop
inc
add
pop
mov
sub
dec
mov
mov
cmp
int
mov
leave
ficoml
lock
add
mov
cmp
push
test
js
xor
gs
mov
in
push
cmp
cwtl
iret
adc
mov
mov
out
test
pop
mulb
popf
xchg
cmc
imul
dec
or
aas
in
adc
mov
xchg
int
mov
fisubl
mov
lret
push
je
in
xor
scas
pop
pop
clc
into
mov
ss
shll
adcb
xlat
cwtl
sbb
sbb
add
cli
and
push
pusha
mov
outsl
pop
lods
sub
dec
sahf
jle
stc
and
dec
int
jo
xchg
mov
xor
push
popf
in
sti
js
pushf
jmp
push
gs
mov
stos
push
mov
arpl
mov
nop
push
in
mov
push
jb
in
cli
add
or
sbb
xchg
bound
inc
pop
out
nop
cmc
add
aas
inc
jb
jmp
xlat
xor
mov
ja
out
pop
pop
mov
int3
jmp
imul
imul
sbb
daa
cld
lret
scas
aad
sti
int
jns
leave
mov
inc
mov
lock
ja
push
ljmp
and
xlat
jg
rol
sbb
test
scas
inc
call
imul
popa
icebp
mov
mov
push
xchg
jnp
test
pop
sub
and
stos
mov
xor
sub
je
xlat
xchg
mov
repz
jb
sbb
adc
xor
jp
and
rclb
imul
cvtdq2ps
dec
fildl
dec
xor
push
insl
adc
imull
jb
mov
fidivrl
ja
push
lods
xor
jmp
adc
push
mov
insb
sti
xchg
cmp
pop
sub
add
mov
dec
out
and
push
cmp
adc
or
dec
stc
adc
nop
int3
xchg
sbb
pop
lcall
fiadds
imul
ror
xor
and
inc
xchg
ljmp
push
xor
mov
jmp
or
dec
cltd
lahf
inc
ret
pop
jp
xor
shrl
or
std
cli
aas
loopne
mov
push
test
xchg
mov
dec
sub
cmpps
pop
jge
stc
icebp
cmp
push
xchg
out
adc
test
repnz
orb
mov
in
ljmp
insb
lds
loopne
mov
lock
les
or
fs
add
insl
pop
stos
mov
sahf
rcr
inc
sub
pop
or
loop
push
into
fdivrs
loop
cltd
imul
dec
jl
adcl
xchg
cmp
jno
add
jp
rcl
mov
syscall
je
shr
xor
and
xchg
popf
dec
dec
data16
xchg
scas
add
repz
xor
dec
sarb
or
mov
imul
sbb
imul
pop
icebp
xchg
xchg
mov
pop
pop
lret
lds
xor
cmp
out
pop
aam
jb
outsl
popa
xor
addr16
sbb
jnp
push
pop
ret
mov
mov
jne
mov
mov
pop
lods
mov
lods
jl
lcall
mov
sub
pop
aad
mov
mov
xor
stc
mov
cld
xchg
pop
add
repz
dec
lret
lods
or
and
inc
adc
lret
push
xchg
mov
dec
push
push
std
fwait
popf
ja
gs
in
imul
mov
and
popa
je
out
pop
leave
faddp
jmp
psubb
mov
enter
cmp
aas
cs
mov
sub
mov
jno
popf
sti
adc
xor
negl
mov
and
movsl
fld
push
pop
sbb
or
outsb
and
xchg
dec
cmp
xchg
sbb
aam
fdivrs
mov
sub
mov
imul
adc
in
movsl
repnz
dec
xchg
dec
sbb
adc
or
and
xchg
call
or
das
xchg
std
je
mov
push
mov
jg
or
or
out
pop
ljmp
or
or
mov
or
ret
jmp
cld
mov
cmp
pop
add
ljmp
dec
bnd
xchg
push
pop
enter
adc
in
mov
push
leave
lods
test
and
scas
neg
aas
movsb
scas
in
mov
loopne
jbe
icebp
adc
mov
insl
or
hlt
add
pop
add
popf
adc
lods
xchg
xchg
xchg
in
xchg
cmp
push
cmp
mov
dec
movb
mov
cmpsb
pop
repnz
mov
sti
adc
stc
mov
push
sbb
loope
xchg
push
dec
inc
insb
cmp
sbb
das
pushf
ljmp
aad
adc
jno
or
into
je
pushf
or
mov
aaa
ror
mov
adc
adc
adc
loop
nop
xchg
leave
iret
jb
push
push
fs
mov
es
jle
sbb
cmpps
pop
jbe
dec
cwtl
or
inc
mov
loope
pushl
loop
lcall
enter
aam
mov
test
inc
outsl
arpl
jge
ret
sub
sbb
push
stos
mov
push
jno
add
add
dec
arpl
in
insb
pop
pop
out
and
outsl
pop
push
xor
sbb
into
cmp
clc
jecxz
sbb
sub
outsl
xchg
out
mov
adc
test
mov
scas
mov
mov
push
movsb
sub
push
inc
or
mov
mov
mov
movsb
pop
insl
inc
sbb
mov
push
and
dec
adc
stos
xorb
xor
fldl
add
mov
xchg
addr16
jg
lods
push
hlt
loop
mov
or
fisttps
test
dec
mov
jbe
cmp
gs
sbb
scas
jl
es
mov
cltd
add
nop
cmc
or
aas
int3
mov
mov
and
jge
mov
int3
sbb
jno
test
mov
add
jg
mov
jne
mull
test
popa
aad
lds
inc
lock
out
fnstenv
pusha
fsubrp
sbb
mov
mov
pop
subl
scas
xchg
ja
pusha
cld
xchg
sti
bound
aad
mov
aam
testb
ficompl
mov
fistl
notb
js
add
mov
pop
icebp
mov
out
jg
dec
outsl
aam
sub
sub
rcl
ds
and
ss
jne
push
sbb
sub
shlb
cs
fsub
pop
dec
stc
push
cmpsb
jecxz
pmullw
mov
stos
mov
sub
adc
in
ret
fldcw
pop
pop
push
in
ljmp
xchg
lods
sbb
stc
mov
adc
pushf
sub
jecxz
or
pop
ret
lcall
mov
repz
repnz
push
xchg
movsb
inc
outsb
jbe
push
jmp
js
adc
cmpsb
add
xchg
vaddps
sbb
pop
mov
fimull
xor
sarl
and
test
pop
arpl
nop
fndisi(8087
xor
add
push
je
addr16
out
add
xchg
jne
aas
inc
loopne
add
out
pop
fsubs
popa
cmp
std
mov
popf
cld
mov
mov
leave
xchg
js
and
pop
insl
add
lods
bound
add
shr
mov
cltd
sbb
in
mov
mov
ljmp
xor
sbb
mov
mov
and
or
test
in
dec
outsb
and
nop
iret
xor
cmpsl
fsub
filds
and
add
jg
inc
inc
sti
xor
cmc
sub
push
mov
xchg
or
mov
rcrb
cmp
jp
pop
or
or
adc
or
adc
arpl
adc
xchg
mov
sbbl
xchg
dec
gs
xor
adc
cmp
addr16
and
cmp
ss
pusha
lcall
aad
jnp
push
loope
cmc
and
xchg
std
inc
mov
fdivl
push
iret
loope
mov
lret
lods
call
fbld
mov
loope
jo
sbb
jb
push
sarb
xor
arpl
out
movsl
push
jle
sarl
xchg
and
pop
in
xchg
aad
lret
jl
das
and
cli
jo
aad
xchg
cli
dec
outsl
pop
jp
popa
dec
dec
and
rcrb
pop
mov
mov
mov
sbb
push
jbe
rorb
xor
cmp
adc
lods
mov
mov
outsl
add
dec
and
cmpb
bound
lods
aaa
push
xor
out
jp
popa
mov
out
jnp
mov
bound
sbb
loop
sbb
shlb
dec
cltd
das
xchg
ja
test
xor
lcall
cltd
inc
xchg
push
test
popa
xchg
into
hlt
andl
ss
push
xchg
push
cltd
inc
data16
iret
cmpsl
fimull
and
mov
imul
stc
sub
pop
push
popf
mov
lret
out
lahf
ret
sub
add
push
fldl
adc
rorl
inc
inc
loope
dec
outsb
mov
ja
jp
adc
je
adc
pusha
jg
jns
gs
jg
dec
fdivrl
movsb
add
imul
mov
push
mov
popf
jne
jo
inc
in
inc
lahf
jmp
adc
scas
cmpsl
cmp
dec
inc
int
mov
sbb
xchg
clc
push
push
lret
jae
sahf
addl
js
call
or
call
lret
int
aas
enter
aam
push
rol
mov
pop
jge
fsts
popf
incb
mov
adc
stos
out
mov
cmpl
or
call
imul
cmc
pushf
jne
cmpsb
cmc
add
mov
shrb
or
leave
adcb
fldenv
xor
mov
or
pushf
out
fidivrl
sbb
aad
pop
sub
cwtl
mov
je
push
cmp
cmp
ret
pusha
mov
mov
fmul
xchg
cmp
mov
loope
push
and
jbe
out
arpl
repz
ss
je
inc
jp
cmc
jns
sbb
mov
mov
insl
push
scas
push
imulb
mov
dec
or
mov
dec
sti
sub
pop
add
popf
test
adc
or
and
pop
push
sub
sti
std
sbb
mov
cmp
mull
xchg
pop
outsl
inc
lret
jo
inc
test
adc
push
pop
add
mov
test
rolb
adc
repnz
or
lods
pusha
pusha
sub
ljmp
xchg
addr16
and
cmp
dec
add
clc
sbb
mov
fimull
xor
test
pop
lret
lds
mov
lea
jne
shlb
cmpsb
push
cmp
xchg
or
out
sbb
mov
aam
shrl
fsubrs
pop
xlat
mulb
fwait
stos
imull
mov
cli
mov
sub
je
lock
pop
cmp
add
aad
leave
in
adc
gs
mov
push
jnp
dec
movsl
movb
addr16
lds
out
xchg
pop
in
or
jg
pushf
out
cli
pop
hlt
lea
mov
les
sbb
stos
push
add
push
insl
lret
cmpsb
cld
jne
fwait
inc
out
sbb
sub
movsb
ds
pop
pop
cmp
adc
subb
dec
mov
xchg
and
insl
mov
stos
xchg
xchg
jbe
sub
sub
push
lock
sub
add
xchg
pop
jecxz
push
xorl
and
add
insb
pandn
inc
ret
or
mov
xchg
out
fldt
mov
fistl
jbe
xchg
add
ret
push
inc
ljmp
lahf
aaa
xchg
push
popa
aad
push
ret
or
mov
loopne
xchg
aad
in
sbb
push
aad
ja
mov
xchg
iret
push
cmp
jb
or
in
pop
jne
mov
andb
xchg
add
decl
push
jmp
push
add
jle
test
xchg
test
into
mov
cwtl
dec
lods
jae
jns
movb
stos
fiadds
les
xor
mov
in
xlat
mov
adc
or
rcr
js
fidivrl
xchg
jmp
je
or
mov
add
push
sti
mov
jnp
js
xchg
add
stos
sub
sub
daa
hlt
pop
xchg
mov
lea
shl
leave
in
clc
sbb
sti
mov
inc
repnz
out
cltd
test
add
lahf
iret
shrl
cmpsl
rolb
adc
mov
scas
pop
lods
mov
xor
mov
insl
sbb
push
dec
fcmovnb
push
cvtps2pd
dec
rcl
mov
mov
ja
test
dec
rclb
enter
mov
cmpsl
loopne
mov
ficoml
xchg
jl
xchg
pushf
out
and
loopne
popf
loopne
jmp
or
jne
mov
sti
shll
push
daa
rcll
es
or
movsb
add
js
or
mov
clc
insb
dec
push
insl
incb
push
pop
add
jl
pop
fcompl
cmp
xchg
xchg
and
mov
lods
pop
shll
pop
ja
in
inc
mov
cltd
sub
dec
mov
addb
dec
pop
xor
ror
jb
pop
or
jbe
mov
adcl
fisubl
mov
testl
pop
jb
xchg
lea
mov
mov
xchg
test
sbb
cmpb
dec
call
mov
lods
in
or
fwait
icebp
push
push
jle
aaa
leave
scas
dec
imul
pop
add
ja
mov
dec
jle
aad
nop
or
rcrl
das
mov
adc
aaa
sbb
xor
mov
dec
cmpb
add
lds
leave
cmpsl
mov
cld
pop
pop
cmp
dec
dec
subl
push
jne
or
jp
push
mov
call
sub
andb
xchg
sbb
aaa
and
lea
adc
sub
popa
pop
mov
movsb
and
pusha
sub
into
or
ret
test
jmp
test
push
push
jno
cwtl
xor
or
xorl
or
js
data16
adc
jecxz
ja
adc
ja
cmpb
xchg
fucomp
pop
outsb
ret
lock
mov
mov
cmpsb
repz
push
loopne
cli
mov
cmp
fidivl
mov
stos
pop
or
dec
iret
lcall
sub
lcall
ds
sbb
sbb
bound
pusha
fsubs
add
mov
sbb
inc
aas
push
dec
call
aas
fildll
xor
sub
nop
pushf
iret
cmp
inc
mov
pop
push
jmp
xor
aam
fadds
jecxz
inc
adc
jl
outsb
xor
ss
jne
cmpsl
sub
leave
loope
nop
loop
xor
das
push
bswap
xchg
add
mulb
lahf
aas
pusha
enter
jle
imul
repnz
push
adc
jle
cltd
mov
aam
gs
push
imul
lahf
cltd
pop
and
stc
cmp
test
mov
and
arpl
aaa
adcl
ficomps
into
dec
add
adc
int3
mov
hlt
sub
nop
adc
mov
cwtl
jnp
cmp
xor
mov
push
rorb
pop
mov
dec
test
jmp
call
sub
and
pop
les
xor
ljmp
cmp
js
sub
enter
bound
and
subb
mov
pop
mov
mov
xor
xchg
xchg
xor
mov
jecxz
mov
xor
orb
inc
jae
mov
jns
cwtl
mov
aaa
roll
test
ss
enter
and
cmp
stos
and
mov
add
pop
das
sub
push
testb
add
inc
cmp
or
in
jmp
cmp
int3
js
inc
fidivrs
dec
push
inc
cld
ror
cmpsl
push
sbb
data16
loopne
inc
imul
pop
in
sub
addr16
and
mov
fdivs
cmp
stos
pusha
stc
push
and
repnz
mov
ljmp
outsb
or
insb
ffreep
cmpsb
sbb
aam
mov
pop
in
gs
and
xchg
and
push
test
pop
mov
mov
jge
cwtl
sbb
jp
les
jecxz,pn
cmpsl
lret
sub
outsl
mov
aas
mov
mov
add
dec
cmpsb
data16
loope
jg
bswap
add
outsb
ret
in
push
les
mov
popa
ljmp
rol
add
adc
dec
sub
mov
jne
xchg
sub
pop
lcall
lock
pop
jle
enter
push
out
adc
mov
dec
xchg
aad
or
sti
add
cmpb
mov
iret
int
mov
dec
pop
xlat
movsl
js
movsb
pop
shl
imul
dec
int3
cmp
pop
das
mov
inc
add
repnz
shll
sahf
add
lods
fwait
mov
pop
in
ret
dec
inc
jecxz
cmpsb
pop
adc
pop
adc
dec
dec
mov
inc
jbe
jbe
pop
push
mov
inc
add
mov
push
shrl
jg
addb
cmp
gs
xor
lret
xor
int
or
ja
mov
cld
test
inc
mov
fldl
int3
movsl
xchg
sahf
sub
aaa
repz
xchg
pop
adc
jecxz
jmp
inc
lds
add
jns
xor
repz
sbb
jle
adc
mov
sub
es
insl
testl
xor
or
cmp
sub
inc
insl
test
lcall
loop
jmp
movsb
lods
js
push
cmpsl
popf
daa
imul
jb
shl
shlb
pop
test
inc
or
xor
xor
imul
mov
sub
add
xor
mov
mov
js
shll
adc
lods
sbb
push
stc
mov
imul
out
xorb
add
sahf
and
cmp
imul
xchg
jne
int
and
orl
cld
aas
sub
in
jmp
xchg
in
in
mov
inc
shlb
or
or
dec
sahf
loope
stos
inc
pop
xor
js
mov
push
decb
xchg
pusha
mov
or
in
shlb
and
and
repnz
ror
cmp
mov
cmpsb
push
movsl
int
das
lods
popf
rcll
adc
xchg
movsb
or
mov
mov
xor
inc
xchg
loope
push
sbb
ss
imul
jp
add
push
pop
mov
adc
outsb
cltd
dec
daa
fimuls
mov
jnp
adc
mov
into
cmp
in
sub
mov
inc
jo
movsl
cmp
and
lea
mov
or
xchg
cli
rcrl
or
in
mov
leave
push
mov
push
js
scas
add
dec
jmp
out
sub
stos
pop
inc
sarl
cmp
sti
and
cmc
push
pop
shlb
cmp
inc
ret
mov
mov
xor
stc
stos
daa
xchg
je
mov
mov
xchg
adc
mov
out
cltd
push
pop
mov
enter
jae
xchg
ror
inc
sbb
mov
js
aas
push
sbb
aas
xchg
jno
jbe
adc
out
jnp
lock
sub
adc
ret
cmp
cmpl
add
aam
or
out
notl
push
test
loopne
inc
jecxz
cmpsb
or
subl
adc
xchg
stos
mov
outsl
in
adc
pop
in
fwait
jne
xchg
jo
xor
stc
mov
push
negb
call
inc
inc
pusha
mov
xor
shrb
repnz
test
aad
lods
aas
push
adc
sbb
mov
add
data16
inc
push
jb
push
sti
jl
xor
mov
cmpsl
insb
sti
sub
or
daa
push
subl
push
jp
pop
mov
scas
sarb
pop
dec
bound
adc
pop
aad
int3
mov
je
pop
out
ljmp
stos
mov
dec
lret
jecxz
jno
shrb
loop
cli
stc
cmp
repnz
nop
fcmove
mov
std
mov
pop
xor
mov
insl
iret
arpl
mov
or
jle
cli
test
jnp
pop
lahf
aas
shlb
jp
jbe
lahf
pop
sbb
dec
imul
push
dec
lods
int3
pushf
cmpsb
ffree
mov
stos
mov
dec
jge
js
mov
pushf
call
jns
add
inc
cwtl
xchg
lret
movsb
fucomi
xchg
push
xor
mov
mov
jmp
dec
shrl
rcrb
adc
sbb
or
xorb
sbb
fistpll
jmp
rolb
sbbb
xlat
aad
test
sub
push
inc
ja
fnsave
jmp
adc
cmp
daa
fcomps
or
mov
movsl
xor
add
jge
pop
push
sbb
lods
bnd
push
inc
int
pop
pushf
imul
enter
out
loope
add
and
lods
pop
cmp
lea
adcl
fsub
mov
lods
enter
pop
outsb
and
shrb
popf
aaa
aam
push
add
xor
mov
pusha
out
add
aad
cwtl
call
jp
mov
pop
mov
popf
stos
push
cmp
mov
aad
shlb
jo
mov
loopne
or
lods
cld
rclb
iret
sub
or
fadds
mov
rcll
clc
inc
cli
std
js
dec
cmp
xor
sub
fs
or
or
push
clc
cltd
push
cmp
std
sub
fsubrs
jb
jns
test
pop
out
lret
mov
add
push
add
sbb
pop
and
dec
push
pop
sub
jmp
cmp
das
inc
jne
pop
dec
fcmovb
cmp
lahf
int
xchg
adc
add
dec
cmp
shlb
ficompl
es
pop
std
dec
nop
push
xchg
push
and
ffreep
mov
lcall
push
pushf
push
ficompl
in
mov
repz
lahf
ja
add
adc
loopne
clc
pop
ret
pop
scas
pop
fiaddl
mov
stc
jmp
clc
cmp
rcrl
subb
dec
sahf
xor
sbb
dec
loopne
andb
cwtl
nop
pop
mov
xchg
push
and
ja,pn
push
or
push
mov
out
leave
imul
scas
mov
add
imul
mov
repz
repnz
and
cmp
int3
xor
add
and
jge
and
mov
inc
push
daa
add
fwait
mov
cmp
test
das
das
ds
xchg
jne
sbb
jno
push
fwait
das
stc
outsb
mov
std
jne
and
xchg
cmp
lods
popf
jge
pop
not
stos
stc
enter
xchg
dec
inc
shl
fiadds
sbb
dec
xchg
mov
mov
or
push
ja
shl
ret
pop
ds
std
shll
lods
popf
out
jnp
lret
loop
jmp
imul
lret
lea
inc
xor
mov
in
pusha
fwait
push
mov
cmp
scas
lcall
push
push
sub
xchg
dec
push
xchg
jle
into
js
mov
fsubr
dec
in
sbb
add
xchg
sti
call
or
xor
aas
xchg
jle
jecxz
movsb
cld
push
or
sub
cmpsl
test
cmp
popf
push
rcrb
mov
repz
xor
fwait
test
mov
lods
cmp
ljmp
pushf
lods
xor
mov
dec
push
xor
jmp
and
mov
sbbb
push
dec
aad
fildll
add
ret
lock
add
sub
jl
repz
add
movsl
push
mov
lock
cmp
stos
xchg
push
sub
cmpsl
dec
mov
push
mov
repnz
addl
repz
mov
arpl
mov
push
jecxz
adc
jmp
lret
mov
fisttpll
cli
je
mov
scas
insl
xchg
daa
pop
into
xlat
ret
xor
repz
imul
std
mov
lea
xchg
sub
cmp
lahf
mov
or
test
jae
sbb
xor
sti
cmp
jl
scas
push
mov
mov
fists
cltd
cmp
mov
adcb
push
testb
pop
ret
mov
lcall
aam
dec
aaa
or
fldenv
jnp
jp
lahf
jg
cmp
mov
inc
imul
pop
dec
inc
jp
int
xchg
fiaddl
mov
mov
movsl
sub
xor
cmp
lods
lock
in
and
inc
or
dec
or
faddl
sbb
in
xchg
daa
or
lods
call
js
clc
lret
adc
lds
mov
sub
adc
outsb
sbb
movb
lret
jle
pop
ljmp
cmp
fldcw
nop
gs
js
ret
add
xchg
mov
dec
mov
test
adc
and
mov
rorl
mov
sbb
pop
test
outsl
inc
lahf
jb
mov
cmp
cmpl
xor
sbb
mov
jns
push
push
xchg
insl
pusha
add
je
xchg
push
push
mov
mov
mov
xlat
bound
or
dec
cwtl
adc
dec
out
packuswb
scas
fisttpl
xchg
dec
jne
les
pop
ja
mov
cwtl
push
enter
loop
aad
cmpsb
push
pop
popa
imul
int
arpl
mov
je
rolb
and
or
add
adc
lods
scas
movsb
ljmp
mov
call
test
push
iret
lods
mov
aas
push
aas
fdivr
shrl
jmp
adc
fldenv
sbb
cld
shll
xchg
orl
pop
int3
dec
ficoms
push
mov
test
or
mov
cmc
je
ja
pop
mov
lret
xor
mov
push
call
push
push
sbb
push
aam
push
icebp
cwtl
dec
frstor
dec
mov
cmp
inc
sarl
adc
popa
fwait
jo
inc
xchg
mov
loop
movl
xor
add
aad
bound
add
loope
push
hlt
and
movsb
push
push
in
test
push
cmp
inc
push
out
jle
mov
lea
pop
sbb
pop
ja
int
or
cmp
or
gs
jnp
aaa
mov
lret
mov
push
loopne
mov
inc
out
and
loopne
pop
out
sub
push
movsl
mov
and
sti
je
mov
mov
xchg
sbb
insb
sti
cmc
pop
jae
cmp
sbb
xor
daa
mov
unpckhps
testb
inc
out
fsts
jno
ds
into
fistpll
ret
xchg
mov
xchg
rcr
in
xchg
test
push
out
mov
loopne
mov
pop
ljmp
dec
je
sti
jb
xchg
pop
lea
dec
imul
sbb
adc
xor
inc
je
inc
mov
lahf
test
add
test
cmc
mov
ds
adc
lret
jb
pop
mov
aam
stos
mov
adc
push
mov
aam
int
into
in
in
dec
lret
fyl2x
stc
inc
push
imulb
sbb
mov
jno
sbb
sbb
int
jno
pop
loop
ljmp
push
add
add
jo
mov
inc
lahf
dec
mov
xor
nop
jnp
xorl
cmpsb
les
sub
imul
xor
inc
push
aad
loopne
mov
push
sti
shl
in
push
out
incl
add
ja
cmpxchg
mov
dec
xlat
sub
dec
sbb
pop
push
add
jno
pop
lahf
lds
arpl
mov
xchg
rcrl
pop
and
movsb
mov
add
outsl
orl
lock
hlt
xor
jmp
add
sbb
mov
popw
add
out
jp
inc
xchg
popf
orl
jae
stos
pop
out
sarl
bound
xchg
dec
int3
adc
aam
dec
sub
mov
xor
movsb
jl
adc
arpl
sub
jl
pop
mov
mov
dec
jecxz
jge
fwait
push
cmp
aaa
adc
xchg
add
paddsw
xor
add
shrb
push
sbb
pop
xor
jp
fnsave
sub
mov
es
in
jmp
jnp
or
sarb
in
int
lea
jno
lds
sahf
xor
mov
jo
cmp
pop
lods
cmpsl
push
loopne
jno
outsb
cmp
in
movsb
cmpb
jns
add
sub
pop
inc
sub
pop
loope
pop
push
insl
ds
xchg
sbb
cmp
fs
push
jnp
inc
mov
jb
cmp
push
and
movsb
pop
xchg
popf
mov
call
clc
inc
xor
out
loop
jp
cmp
ss
insb
xor
int3
jg
lcall
out
jnp
lock
inc
mov
imul
jae
push
cwtl
out
sahf
ds
into
roll
aad
lea
int
pop
das
pop
gs
fmul
cltd
or
pusha
adc
and
mov
inc
push
lock
pop
mov
jns
adc
aam
inc
imul
mov
int
lods
dec
cmpsb
push
or
lods
fisttpl
pushf
push
cmp
push
inc
inc
mov
mov
mul
imul
shll
jnp
in
and
push
jp
mov
addl
dec
xor
fdiv
cld
call
add
push
sub
mov
inc
loop
xchg
add
shll
das
popa
jnp
lods
mov
enter
ljmp
mov
sub
inc
out
fstp
push
lods
js
cs
int3
push
pop
cs
sbb
add
adc
mov
frstor
push
xor
idiv
pop
cmp
enter
dec
icebp
in
fimuls
stos
lods
ljmp
filds
movsb
pusha
fstl
sbb
test
lea
cli
cli
mov
cmp
cwtl
mov
scas
push
mov
xchg
mov
decb
pop
ljmp
pop
mov
test
enter
scas
inc
pop
test
ljmp
cmp
xor
jle
in
ja
gs
add
pop
cltd
in
jecxz
movsl
inc
or
adc
mov
scas
inc
lods
and
sbb
xchg
inc
or
rolb
sub
cli
xchg
jo
add
and
cli
or
xor
fdiv
ror
addr16
cmp
cwtl
dec
div
shll
aaa
mov
and
adc
test
push
pop
jecxz
movsb
rcll
push
cmpsb
dec
sbb
jle
movsl
ret
or
jmp
lods
dec
decl
and
jo
ss
xor
sbb
loop
popf
in
das
and
mov
rcl
dec
mov
pushf
dec
xlat
push
cld
push
faddp
sub
mov
sub
mov
xchg
lcall
adc
lret
xchg
movsl
clc
into
or
pusha
jb
test
movsb
xchg
inc
sub
imul
push
enter
addl
mov
mov
and
dec
lods
addl
mov
inc
sbb
test
nop
cs
pushf
andb
repnz
sub
movsl
mov
repz
pop
push
pop
notb
out
sub
push
jl
dec
push
or
add
test
shrl
push
int
scas
clc
push
stos
mov
cli
jecxz
pop
das
jnp
rolb
insb
sbbb
cmpsb
test
imul
fadds
or
mov
in
add
mov
sbb
stc
adc
daa
mov
in
mov
repz
adcb
jmp
repz
jp
xor
adc
mov
jmp
add
stos
adc
xchg
dec
pop
jnp
cmpsb
xlat
icebp
ret
insb
sbb
cmp
fdiv
outsb
fsts
sub
jno
popa
fs
and
je
pop
cmp
sub
push
repz
loop
movsb
xor
mov
pop
lods
xorl
cmp
inc
mov
cmp
push
fdivs
out
iret
push
dec
xor
andb
test
jecxz
pop
sub
pop
fisubrs
sbb
xchg
cli
inc
jg
out
xchg
xchg
cmp
mov
jnp
cltd
mov
sub
inc
sub
jae
movsb
daa
aas
ljmp
push
sbb
scas
cltd
aad
je
xchg
add
aaa
pop
test
or
push
ja
mov
arpl
ret
jnp
xor
and
outsb
iret
shlb
jns
fadds
pop
aam
mov
scas
dec
and
pop
mov
mov
jl
inc
xchg
ss
sti
loop
fwait
outsl
pop
lret
movsl
testb
scas
cltd
fbstp
cli
push
data16
push
mov
aas
cmp
jl
ret
loop
xchg
push
sub
iret
adc
rorl
xchg
adc
mov
mov
aam
inc
out
dec
inc
rorb
pop
xchg
add
dec
mov
stc
adc
cmp
mov
and
pusha
popf
sub
push
cmpsl
jbe
mov
gs
incl
cmp
cmp
mov
lock
or
xchg
mov
nop
cld
sarb
mov
aam
add
sbb
dec
mov
andb
ljmp
inc
inc
mov
mov
dec
jl
mov
xor
xchg
adc
movsl
lds
mov
sbb
xlat
sub
sbb
sub
clc
sbb
sub
loopne
pop
inc
inc
nopl
jns
fcomi
mov
pop
test
jnp
inc
out
inc
jmp
add
mov
xor
outsl
addr16
cld
jg
loopne
std
outsb
cmc
mov
add
stos
aad
dec
loope
sti
mov
adcb
adc
jo
int
pop
push
dec
jo
mov
cmp
fistpll
jns
insb
cmp
cmpsb
std
iret
imull
jle
jg
adc
mov
sti
pop
cmpsl
or
repz
add
pop
push
not
jge
je
out
mov
enter
call
imul
jbe
xchg
jmp
push
test
daa
jl
push
hlt
mov
mov
data16
push
sbb
cmp
cmc
mov
rcrb
adc
push
int3
sarl
pop
lods
leave
lret
stc
push
mov
cmpsb
lock
jl
xchg
js
pop
into
jnp
and
fsubr
sbb
in
ds
inc
inc
shlb
push
lcall
mov
cmp
loop
test
xchg
dec
jbe
arpl
andb
sbb
sub
pop
roll
xor
inc
push
scas
test
sub
inc
lods
pop
ror
stos
jnp
and
jmp
push
and
inc
pop
push
call
inc
pop
lds
icebp
xchg
testl
jne,pn
xchg
dec
aad
or
xchg
rcrl
not
out
fiadds
cld
aam
ret
xabort
into
jne
lret
daa
xor
push
lods
rcrb
push
or
inc
out
mov
mov
out
fwait
jp
adc
movsl
sub
add
mov
mov
xor
push
ficoms
mov
mov
xchg
jle
outsb
xlat
hlt
cmp
mov
arpl
push
mov
lahf
jae
dec
mov
xchg
pop
aad
mov
dec
dec
mov
mov
mov
jmp
sbb
bound
ror
and
mov
jge
mov
push
imul
add
ss
cld
mul
das
dec
sub
xchg
daa
jo
jne
ss
fdivs
sti
sub
cmp
mov
lods
icebp
scas
movsb
arpl
and
jo
repz
lahf
inc
mov
push
jne
push
jno
cli
nop
cmp
push
dec
and
nop
lahf
mov
xchg
stos
xchg
fbld
mov
jp
push
icebp
cmp
out
std
mov
xchg
sub
mov
push
jmp
sub
shll
mov
repz
arpl
ret
test
and
sub
lahf
insl
mov
sub
mov
xor
mov
sub
std
sbb
jmp
test
pop
aad
out
adc
or
jno
mov
in
or
pop
aam
lahf
enter
aas
in
cmpb
pushf
and
mov
and
test
push
sbb
push
nop
xchg
pop
stc
popf
push
daa
mov
lret
cmp
push
cmp
mov
lret
cmpsl
mov
pop
adc
xchg
sbb
xchg
rcrl
int
push
add
test
and
in
fdiv
mov
xor
jns
in
sub
xchg
pop
add
jo
sbb
jmp
pop
aas
cmpsb
lcall
in
mov
mov
out
lret
xor
cld
add
ss
sti
xor
sub
mov
sub
aaa
jg
jns
jmp
lock
jecxz
push
idivl
xor
adc
xchg
pop
and
sbb
adc
xchg
sbb
jb
mov
and
and
decl
jmp
sbb
rolb
xchg
in
pop
sbb
jns
cmp
in
sub
adc
or
imul
and
adc
shl
int3
loopne
in
add
shlb
imul
jns
outsb
fiaddl
push
pop
mov
pop
fistps
aam
jl
mov
mov
sbb
movsl
out
xchg
push
fs
jns
jge
push
jge
sbb
aam
loopne
pop
inc
cmpsb
push
jo
dec
mov
int3
adc
adc
rclb
xor
inc
mov
scas
lea
sti
loop
sbb
fidivs
lods
pushf
adc
in
xor
pop
cmp
iret
aas
ret
xchg
lea
jbe
mov
aad
vpxor
jo
lock
dec
movsb
std
pop
cmp
cmp
popa
mov
push
bound
outsl
push
ss
loope
and
and
dec
pop
in
cwtl
mov
daa
pop
inc
sbb
inc
aad
dec
push
shlb
or
add
lea
subl
loop
sub
insl
cmp
scas
pop
cmp
arpl
es
or
aas
test
mov
in
aad
dec
push
jle
jne
fidivl
imul
lock
enter
mov
xlat
mov
xchg
sti
jecxz
jbe
dec
imul
std
int3
rclb
mov
cmc
ds
or
shl
mov
test
dec
imul
sbb
scas
xor
fwait
sub
in
sub
xchg
stc
or
test
mov
sbb
cld
sbb
or
push
popf
push
and
adc
jmp
call
stos
lahf
xchg
int3
push
repnz
ljmp
aaa
aas
gs
insl
jb
lahf
out
sarl
repz
mov
out
ficompl
sti
jbe
or
call
inc
mov
adc
lcall
stos
pop
and
inc
push
jecxz
shr
xor
clc
mov
xchg
loope
scas
inc
fdivs
fisubrl
fmulp
pop
jg
adc
ds
cli
lds
jns
js
push
scas
arpl
loop
cmpsl
divb
in
mov
push
repnz
xor
adc
dec
dec
xchg
je
and
dec
outsl
push
adc
push
mov
mov
stos
or
mov
push
xchg
js
shll
stos
cmc
in
jne
inc
push
inc
or
mov
lea
pop
fnstsw
arpl
cld
mov
je
std
jp
popf
push
mov
inc
enter
pop
es
in
or
or
adc
je
lds
dec
sub
cmp
aad
setge
and
jle
ret
hlt
cli
and
movsl
imul
cld
add
in
mov
lds
push
mov
loopne
inc
dec
dec
jbe
ja
inc
xor
adc
mov
and
stos
dec
bound
sub
in
cmp
fisubs
mov
aaa
pop
mov
add
and
and
lock
sub
fnstenv
mov
iret
bound
out
in
pop
adc
out
push
cwtl
or
jbe
xchg
sub
out
ljmp
jno
pop
jne
sbb
out
es
inc
xor
jle
jmp
cmpsl
aas
shrb
and
loope
lock
int3
pop
or
shlb
clc
sbb
pop
rorb
pop
cli
dec
stos
outsb
cwtl
outsl
mov
loopne
les
push
adc
cli
stos
insb
fmuls
pop
out
adc
inc
outsb
out
sbb
outsl
arpl
pop
or
pop
sub
aas
mov
adc
add
mov
mov
dec
xor
xor
xchg
test
pop
call
inc
fs
dec
out
mov
xorb
xor
cs
ret
sub
sbb
add
adc
lret
mov
jecxz
jb
int
mov
mov
xchg
stos
out
mov
pop
in
or
movsb
mov
mov
shlb
jbe
clc
in
incb
push
push
fnstcw
jmp
movsb
dec
fs
loop
cmp
fsubrl
lahf
shrb
ja
iret
imul
dec
outsb
popf
pop
sub
sub
mov
mov
repz
lock
stos
inc
fcoms
sbb
inc
and
enter
mov
stc
cmp
sbb
repnz
ret
and
push
js
out
mov
cltd
sbb
lahf
pop
ds
in
sbb
pop
mov
fistpl
leave
nop
dec
adc
dec
mov
adc
arpl
mov
xchg
sbb
mov
adc
push
out
sbbb
cmp
push
or
inc
ror
jo
pop
lods
mov
cmp
test
scas
jmp
call
adc
push
adc
fmuls
popa
inc
xor
pop
lds
in
fcomip
pop
test
popf
rclb
sbbb
push
and
mov
mov
filds
mov
mov
cld
xor
xchg
outsb
mov
mov
das
outsl
add
cmp
sbb
int
and
cmp
popf
cwtl
into
bound
push
int
cmp
cltd
lea
stos
fmull
aaa
scas
dec
mov
xchg
dec
sbb
inc
lds
inc
nop
mov
lretw
test
sbbl
cltd
jae
addr16
mov
notb
es
sbb
pop
sahf
mov
mov
sbb
jp
xor
pop
ficoms
repz
push
jnp
cmp
push
rcrl
les
mov
mov
out
pop
pop
sub
pop
mov
pop
pusha
jecxz
push
stos
iret
popf
xor
mov
test
leave
xlat
std
add
test
xchg
pop
out
and
test
decb
sarb
inc
jg
sub
inc
inc
mov
push
cmp
push
test
leave
test
cmpsb
mov
jecxz
adc
mov
mov
push
cmp
sbb
sbb
movl
rcll
ret
sahf
and
test
push
and
negl
xlat
fstps
push
cltd
mov
faddl
cmc
popf
add
xchg
push
sbb
push
xchg
mov
loopne
pop
xchg
clc
aaa
pop
pop
cwtl
mov
inc
sti
xchg
mov
adc
push
scas
inc
stc
and
jmp
fwait
cli
fwait
daa
rcrb
and
xor
xchg
jp
icebp
xchg
fistpll
fidivl
shl
pusha
mov
es
dec
and
add
ret
cmp
sub
repz
les
mov
cmp
cmpl
gs
adc
push
pop
sbb
gs
dec
in
loop
into
movb
out
adc
mov
inc
add
jo
imul
add
sahf
jle
and
out
and
data16
clc
mov
sub
cmp
jp
out
jns
push
adc
andb
out
lock
adc
push
loop
out
jmp
inc
jmp
sarl
rcrl
mov
rcll
fs
fxch
cwtl
ret
push
fdivl
mov
and
lea
sub
pushw
inc
jnp
loop
arpl
mov
push
in
mov
shll
iret
cmpsb
shlb
sub
repz
clc
mov
xor
loope
jge
push
out
rcll
fdivl
xchg
xor
outsl
and
mov
push
fistl
adc
leave
xchg
lds
jne
cmp
loope
push
jmp
inc
and
sbb
fimull
bound
sbb
mov
xor
jo
mov
adc
add
pusha
addr16
fcmovnbe
xor
xchg
xorl
cmp
mov
adc
loopne
pop
add
mov
xor
insb
push
and
jmp
les
jp
pusha
je
dec
lds
sub
mov
fisubs
in
inc
sahf
adc
cmp
and
repnz
inc
mov
hlt
dec
mov
mov
outsl
pop
ficompl
mov
es
jbe
sbb
lahf
push
int
sub
mov
adc
int
loopne
dec
adc
sar
mov
sbb
jle
mov
fs
pop
cmp
mov
lods
push
cmp
lcall
insb
mov
adc
inc
jecxz
sbb
jo
mov
adc
adc
addr16
pop
int3
pusha
jno
sub
dec
lret
pop
and
cs
mov
test
pop
push
xor
sbb
jne
test
and
and
mov
add
mov
sbb
mov
leave
fdivl
aas
cmp
xor
dec
xlat
and
dec
xchg
cwtl
push
das
idivb
in
aad
xlat
and
cmp
movsl
pop
movlps
ja
lock
cs
enter
test
xorl
hlt
jg
and
cld
or
add
and
inc
push
cwtl
bound
jb
jns
ficoml
clc
fdiv
jne
fidivrl
mov
xchg
xchg
mov
cli
jg,pn
shll
sub
mov
daa
xchg
popf
sub
mov
mov
xor
jle
mov
push
lret
lahf
xchg
aad
xchg
or
push
es
movlps
xchg
in
mov
mov
in
push
clc
mov
bound
adc
leave
mov
jmp
ret
cmc
xor
jo
cmp
jns
dec
ficoml
push
ljmp
sbb
insl
dec
pop
pop
imul
mov
add
push
das
loopne
push
or
movsl
sbb
or
or
jl
outsl
sbb
xor
outsb
push
pop
xor
mov
daa
dec
aaa
push
in
jecxz
dec
imul
aam
mov
popf
xor
push
cmpsl
cmp
aad
push
out
dec
scas
mov
jmp
mov
mov
or
dec
jecxz
dec
sbb
mov
pop
and
fdivr
and
scas
add
mov
add
imul
push
lcall
popa
enter
loope
scas
xchg
ret
mov
dec
out
mov
enter
dec
cmpsb
dec
mov
or
mov
fldcw
mov
xlat
arpl
fstps
jmp
adc
imul
mov
xchg
jmp
pop
fldl
lret
mov
insb
and
mov
test
cs
jns
in
add
stos
ss
mov
fdivs
add
jmp
xor
dec
adc
fcoms
mov
and
adc
inc
and
pop
xor
mov
mov
int3
cmp
out
sbb
jle
sub
inc
mov
xor
adc
pushf
test
sti
pusha
xchg
in
mov
or
adc
rorl
enter
pop
adc
shrl
adc
and
pop
lret
sbb
aaa
add
or
cmp
retw
loope
push
add
mov
lods
mov
rorb
sbb
rcrl
mov
dec
push
dec
adc
out
sbb
cmp
push
aas
push
mov
mov
adc
inc
ret
mov
pop
fisttps
popa
and
cs
test
cmp
ror
sub
inc
push
jge
shl
cmp
xchg
mov
xlat
ret
mov
mov
xor
mov
xchg
push
xchg
add
push
xchg
pop
loop
call
stos
int3
xor
aaa
cltd
ja
jp
dec
cmp
sbb
movsl
in
mov
out
jl
mov
das
cli
cmp
call
push
push
sbb
and
push
stc
jg
repz
mov
cld
fld
movsl
repz
loopne
scas
mov
sbb
push
pop
mov
jmp
imul
xor
rorb
inc
aam
in
addr16
ds
lods
cmp
cwtl
addr16
mov
jae
outsb
xor
push
xor
fadds
jne
xor
push
mov
fiaddl
bound
int3
mov
fisubs
xor
aaa
sub
bound
ljmp
mov
shrl
sbb
pusha
loop
aas
mull
jmp
xchg
pop
lahf
add
roll
pop
push
and
mov
icebp
dec
out
mov
xor
daa
lcall
xchg
imul
aam
jb
lret
popf
test
jl
mov
sbb
pop
pop
in
or
xor
adc
dec
push
rclb
mov
adcb
sub
and
shl
lea
test
lea
scas
and
or
dec
aad
sarb
scas
fs
sbb
mov
dec
cmp
aam
pop
popf
insl
and
and
subb
cld
inc
pop
lahf
adc
or
xor
jp
push
in
ficoml
scas
divb
roll
mov
xchg
test
hlt
and
and
testb
sbb
sbb
pushf
pop
sub
mov
test
cmpsb
push
add
outsb
fidivl
xor
dec
inc
mov
push
fists
mov
or
sahf
xor
mov
in
xor
xchg
out
add
push
or
aad
add
aam
hlt
icebp
pop
rcr
out
in
fcompl
scas
pop
in
xor
popa
sub
adc
jge
fiaddl
jle
xor
fistpl
xor
loopne
les
push
sar
xchg
sbb
bound
stos
pop
cmp
aaa
add
jl
gs
mov
lcall
popf
andb
mov
mov
rcll
jo
in
and
sub
jmp
addb
sub
inc
arpl
ret
or
add
ror
lret
es
shl
aam
movsb
aas
or
or
popa
xchg
or
dec
test
xor
adc
cmp
mov
jae
mov
cli
negl
cmp
daa
mov
pop
pushf
aad
xchg
mov
lcall
push
inc
and
or
inc
iret
aad
mov
cmpsb
push
adc
cmc
fwait
int
cmpsl
adc
adcl
leave
pop
add
lock
and
jmp
add
sub
pop
sbb
and
daa
mov
xchg
cmp
lods
sub
xchg
leave
dec
inc
iret
mov
inc
push
push
pop
adc
cwtl
jno
push
push
stc
sub
mov
xchg
sub
data16
sbb
mov
xchg
jmp
mov
nop
lea
pop
push
add
dec
addr16
notb
pop
int3
or
cltd
cli
inc
xor
xchg
outsl
pop
adcl
jbe
and
arpl
fs
ja
mov
inc
cmpsb
add
mov
test
fmuls
mov
dec
mov
sub
dec
mov
mov
xchg
movb
mov
pop
xchg
inc
fldcw
movsb
dec
popf
push
adc
mov
rclb
xor
dec
icebp
mov
dec
xchg
test
jle
adc
andl
aam
loope
out
insb
std
cmp
shrl
movsl
out
xor
dec
adc
cmp
fists
push
sub
lods
test
daa
andl
push
popf
pop
add
cld
pop
bswap
cmp
das
daa
int3
fs
in
dec
stos
cltd
and
xor
mov
cs
lcall
dec
add
scas
or
jns
sbb
lcall
enter
push
dec
sbb
jp
adc
std
mov
push
mov
movb
mov
jp
pop
int
js
pop
das
int3
inc
xlat
or
pusha
into
pcmpeqb
and
inc
rorb
sbb
mov
xor
sub
mov
dec
push
sar
rcrl
fldpi
jno
adc
movsb
daa
daa
mov
inc
pop
or
jb
lret
or
ja
add
push
xor
hlt
scas
test
cmc
jg
push
notb
mov
movsb
fwait
and
aaa
stc
in
jg
xchg
shr
lods
mov
insl
add
jmp
insb
dec
ret
and
mov
mov
scas
xor
or
dec
shlw
test
mov
scas
lcall
pop
push
sub
shll
add
sbb
pop
scas
pop
loope
leave
lret
leave
std
and
mov
icebp
pop
loop
rclb
scas
ret
in
push
lret
aam
out
lahf
mov
fldt
bound
dec
sbb
in
jne
imul
imul
sti
push
popf
lahf
rorb
insb
xchg
cmpsb
xchg
ret
mov
pop
iret
xchg
pop
xchg
lcall
call
push
aas
lahf
jmp
lcall
rcrb
push
add
scas
outsl
mov
popf
lahf
jb
add
push
bound
lret
ljmp
inc
movsl
movsl
stos
nop
orb
mov
iret
mov
mov
aad
fs
and
sbb
sbb
mov
sbb
gs
popf
jbe
enter
jmp
pop
fs
mov
orl
xlat
int3
lods
sub
dec
jbe
fs
mov
or
or
movsl
mov
inc
loope
rorb
add
sub
and
xchg
in
mov
pop
imul
lret
movsb
test
cli
cld
ret
add
jmp
scas
inc
shlb
add
aas
pushf
xchg
cmp
push
dec
sarl
adc
jo
mov
imul
push
icebp
addr16
cmp
adc
sarl
shl
sub
xchg
jg
mov
pop
aaa
addr16
cltd
repnz
xor
lds
push
mov
mov
pop
push
cld
imul
inc
fs
dec
jecxz
cmp
mov
add
clc
xor
stos
bnd
fwait
and
or
lods
push
sub
aad
cmpsb
jl
stc
add
cld
shrl
xchg
dec
lds
cmpl
addr16
mov
add
adc
add
xchg
sbb
insl
and
les
add
popf
xor
fs
xor
jne
pushf
dec
shll
ds
push
cmp
add
movsb
pop
enter
cmp
in
scas
add
sbb
xor
or
repnz
inc
push
arpl
cmp
std
mov
enter
push
rcrl
repz
mov
jp
xchg
mov
mov
cmp
ror
insl
xchg
mov
jg
movsb
mov
mov
sbbb
fwait
xor
lcall
and
jbe
jae
jns
out
xchg
mov
pop
dec
fdivl
and
out
mov
and
dec
mov
add
and
adc
dec
xor
cs
lods
push
dec
loop
scas
addr16
pop
je
lret
pusha
sub
add
nop
dec
insl
jg
mov
fists
adc
inc
add
outsb
pusha
pop
cmp
sahf
movsl
or
dec
adc
lods
jge
sbb
mov
jecxz
fcmovne
xor
rcrb
decb
xlat
push
push
cltd
mov
pop
push
inc
inc
fildll
hlt
adc
mov
xor
xchg
insb
jecxz
std
pop
mov
lcall
xor
sub
notl
movsb
adc
cmp
rcrb
dec
mov
ret
ret
sbb
dec
stc
rcr
add
jbe
inc
cltd
fsubrl
jbe
lcall
fsubs
lret
icebp
lods
pop
or
jl
enter
lret
sar
sub
lret
sbb
imul
inc
mov
mov
cltd
into
addr16
sarb
pop
push
sub
sub
into
lds
scas
cmp
sub
jecxz
cltd
cld
dec
add
arpl
int
jno
sahf
push
aad
jge
sahf
negb
pop
leave
mov
enter
imul
mov
sbb
and
add
sbb
pushf
jo
out
cmp
aad
jmp
push
dec
xor
mov
mov
adc
jg
adc
sbb
loopne
lods
cmpsb
stc
pop
mov
pop
stos
inc
into
cmpsb
sahf
jbe
in
movsl
mov
or
xchg
mov
ret
mov
push
movsl
repz
arpl
adc
mov
int
mov
arpl
test
cwtl
cmp
addr16
dec
xchg
mov
adc
testl
icebp
sub
jl
movsl
push
cmp
int
shl
sbb
jge
imull
iret
xor
or
in
stos
stc
addl
repnz
sub
cmp
add
int
ret
sbb
and
ss
or
and
and
sbb
inc
dec
mov
into
cwtl
cmp
das
inc
ret
scas
dec
sbb
or
cmp
lods
xchg
repnz
mov
pop
mov
inc
pop
xchg
xor
dec
mov
and
push
pop
ja
mov
pmaxub
sub
jmp
mov
cli
lret
jmp
and
pop
sbb
push
mov
sbb
stos
shlb
xchg
xchg
cli
fsubr
filds
push
mov
push
dec
aad
not
push
add
push
mov
dec
outsl
push
je
add
mov
and
addr16
mov
xchg
push
jge
call
je
pop
cmpsb
test
pop
adc
cmpsl
pop
ret
mov
out
dec
cmc
sub
inc
sub
aad
mov
xchg
adc
lods
add
mov
cmp
repnz
aam
pop
dec
loop
cli
jo
mov
mov
lds
mov
add
or
sbb
inc
testl
inc
aam
es
lods
push
stc
mov
stos
dec
dec
popa
mov
hlt
or
jl
cmp
repnz
fwait
dec
or
in
adc
jne
xor
cmp
imul
cld
push
inc
scas
mov
pop
and
xlat
pop
push
ljmp
sbb
repz
leave
sub
xor
fisttpl
xchg
push
in
jo
sbb
sarl
mov
pop
rorb
lret
mov
hlt
test
or
xchg
xor
xlat
ret
inc
loopne
je
out
outsb
fdivrp
mov
ss
dec
dec
adc
xchg
push
rclb
repnz
int3
inc
inc
test
imul
xor
std
add
mov
mov
aad
push
pop
cmp
frstor
jge
movsl
mov
in
loopne
daa
test
mov
xor
inc
cld
mov
xor
mov
aaa
in
adc
in
sbb
mov
mov
aas
mov
xchg
inc
cmp
xor
mov
rcll
imul
mov
mov
inc
mov
subb
lret
or
movsb
dec
out
inc
cmp
sub
in
test
dec
sahf
test
lods
inc
in
mov
sbb
cmc
scas
and
subl
mov
aas
out
cltd
xchg
push
mov
outsl
or
cmc
outsb
xor
xor
sbb
rcrb
data16
sti
sbb
or
dec
sbb
ss
mov
movsl
subl
data16
jne
jo
lret
pop
mov
iret
xor
rcll
dec
mov
andl
cmp
mov
jge
lds
mov
push
mov
jns
addr16
mov
pop
mov
xchg
mov
or
push
pop
cmpsl
jo
jnp
ljmp
sub
and
fs
nop
jb
jge
jmp
ja
mov
pop
rorb
push
cmpsb
cmp
rcl
pop
sub
shrl
dec
xor
fsubl
xor
cmp
testb
addr16
mov
cli
or
cli
pop
sar
sahf
inc
shll
push
lea
imul
push
outsl
test
out
or
xor
push
fcomp
and
sahf
lret
jge
mov
mov
cmc
clc
and
mov
leave
cld
sub
mov
xchg
lret
sbb
xchg
fnstcw
xchg
mov
push
clc
pop
adc
hlt
mov
imul
out
in
push
mov
in
cmpsb
mov
xchg
pop
jmp
sub
movl
orb
fsubs
mov
adc
clc
xor
push
movsb
inc
push
in
pop
cmpb
in
inc
pop
and
scas
aas
push
cli
xor
ljmp
inc
pop
gs
and
pusha
es
sbb
sub
int
add
jmp
mov
cli
sbbb
sub
pop
sqrtps
jp
xor
loopne
rcr
jb
pusha
cmp
or
push
jmp
lret
push
pop
outsl
lock
clc
rcrb
jnp
mov
je
pop
jbe
xor
add
pop
sbb
mov
mov
lret
nop
cmp
cwtl
sbb
or
mov
js
sub
sbb
dec
dec
paddw
and
orl
mov
test
mov
loope
lock
mov
scas
xlat
js
jbe
gs
jmp
enter
sbb
jno
inc
or
cmp
mov
mov
loop
fdivrs
xchg
adc
mov
cmpsl
std
or
mov
mov
sub
push
jg
pop
sbb
pop
ja
pop
cs
jmp
pushf
out
jg
bound
das
xor
aad
adc
movsl
or
out
adc
out
push
push
scas
aad
ja
arpl
xchg
pop
mov
cltd
pop
pop
and
ret
in
cmpsl
sbb
lcall
adc
xchg
pop
xorl
arpl
adc
sahf
ss
push
add
sbb
iret
in
push
push
mov
xor
sbb
xchg
mov
clc
dec
or
adc
pop
mov
inc
sub
insl
int
adc
sahf
or
cmc
out
adcb
in
addr16
leave
out
les
clc
cli
shrb
or
mov
mov
inc
lods
daa
sub
inc
aaa
out
inc
pusha
stc
xor
sbb
dec
dec
rcl
fxch
mov
jmp
or
xchg
leave
mov
xchg
mov
pop
out
mov
jg
imul
cmp
add
repz
mov
and
jae
mov
pop
lods
jl
cmp
xorl
dec
lret
iret
mulb
sbb
mov
lds
daa
cltd
sti
inc
lds
inc
shrl
mov
jo
dec
mov
test
or
fcmovne
mov
jno
cmc
nop
insb
stos
sub
cmp
mov
dec
leave
sarb
inc
push
pop
push
lds
pop
aad
gs
cmpsl
cmpsb
adc
mov
cs
notl
mov
nop
mov
ljmp
mov
sub
addr16
add
inc
lock
enter
and
pusha
xchg
shlb
les
cmpsb
call
dec
stos
call
mov
nop
pop
lret
sbb
out
movsl
fwait
mov
push
pop
int3
addr16
ss
cmp
jb
es
mul
adc
or
and
xor
inc
stc
arpl
lods
and
bound
cmpsl
jae
xor
cs
popa
pop
movsb
jecxz
dec
sub
insl
rol
sbb
push
fs
rclb
cmpsb
mov
outsl
mov
frndint
scas
out
xor
imul
in
icebp
mov
das
cltd
mov
jmp
imul
sbb
push
or
jl
ds
jns
mov
fwait
in
and
daa
or
int
sub
nop
push
ds
adc
loopne
mov
imul
jge
sbb
fisttps
lds
jmp
or
mov
addb
loope
lock
test
sub
add
push
lds
inc
aas
les
add
imul
push
outsb
scas
push
pmullw
jg
js
ja
sar
mov
inc
nop
sti
cli
cmp
mov
outsb
pop
jg
push
push
mov
sbb
or
xor
or
imul
pop
es
ss
add
cmp
mov
addr16
nop
sbb
std
pop
xchg
and
cmp
or
mov
xor
shll
lahf
sub
js
xor
mov
pop
in
sbb
pop
lock
xchg
fbstp
xchg
in
push
add
mov
popf
aas
xor
es
testl
cmp
mov
hlt
gs
call
adc
push
outsl
mov
push
mov
add
sub
fs
and
orb
insb
lahf
or
sub
mov
jl
push
fwait
cmp
cmp
test
mov
mov
pop
leave
fdivrl
pop
xor
clc
jnp
imul
adc
insb
nop
imul
and
xor
and
movsb
pop
xchg
xlat
xchg
aam
mov
sbbb
pop
push
test
mov
adc
push
lods
imulb
mov
jnp
or
mov
repz
ljmp
pop
mov
inc
scas
mov
and
clc
pop
pop
js
mov
xor
adc
pusha
push
lock
stc
mov
stc
and
daa
push
push
or
xchg
repnz
inc
xor
pushf
int3
or
sub
and
mov
fstcw
test
popf
adc
mov
sbb
subb
gs
dec
xor
imulb
test
or
dec
ljmp
mov
jecxz
mov
inc
add
stos
fidivrl
in
popa
fstpt
movsb
xor
push
icebp
xchg
out
lods
call
pop
arpl
push
mov
adc
ficompl
adc
xlat
sbb
jo
fucomp
push
lret
sbb
aam
jmp
push
ret
xchg
sub
inc
jp
inc
pop
and
lret
xchg
dec
dec
fadds
mull
ss
sub
outsb
test
sbb
mov
xchg
xor
xor
insb
or
and
je
dec
out
call
leave
sbb
mov
sbb
clc
xor
xchg
xor
mov
sbb
push
es
arpl
cmp
aad
enter
ja
jl
fnstenv
push
jb
lods
inc
inc
mov
bnd
mov
stc
into
mov
sub
inc
cmp
loopne
popa
iret
cwtl
cmp
and
adc
daa
icebp
adc
dec
adc
scas
and
xor
xchg
push
incl
das
ret
es
push
bnd
xchg
adc
sbb
lock
je
adc
xchg
push
shl
sbb
pushf
add
rcll
popf
push
sub
imul
mov
out
lea
dec
sbb
lret
shll
jnp
inc
lret
sub
jbe
ret
fmuls
pop
add
rep
std
jp
jnp
rcl
ljmp
and
cmpsl
sbb
fcompp
popf
cltd
sbb
into
mov
loopne
cmp
mov
dec
mull
jle
rol
push
lea
out
fdivs
mov
mov
or
mov
cmpsb
adc
pop
test
pop
xor
neg
orb
push
fists
push
sub
into
sbb
jg
sbb
jnp
out
dec
mov
sti
sub
outsl
mov
jnp
clc
lock
out
imul
push
lahf
int3
lds
mov
mov
mov
mov
nop
push
mov
cwtl
rorl
pusha
nop
mov
add
insb
cmp
mov
test
mov
jne
loopne
dec
dec
lods
dec
cmp
and
pop
push
mov
xchg
out
pop
mov
popa
xchg
mov
mov
lret
xchg
shll
sbb
cmpsb
fldcw
ffree
push
fs
cmp
sub
adc
sbb
push
dec
push
cmp
dec
shrb
into
leave
sub
in
xadd
add
xchg
inc
leave
xor
int
mov
inc
mov
sbb
rcrl
adc
in
and
loopne
sub
push
mov
repz
dec
lret
sbb
sbb
test
push
pusha
dec
out
mov
bound
mov
pop
sbb
and
fdivr
pop
shrl
sub
dec
sub
sub
jl
fildl
lods
sub
pslld
imulb
cmp
xor
xor
mov
jle
mov
adc
ja
add
stc
and
inc
sub
xor
movsb
jge
mov
push
scas
cmpsl
lods
out
es
aas
das
js
loop
sub
fidivrl
mov
and
pop
fwait
mov
loopne
inc
in
add
je
push
sbb
dec
push
and
pop
push
mov
sbb
mov
add
dec
xchg
fldt
and
orl
mov
mov
sbb
mov
add
jns
ret
push
js
test
roll
pop
arpl
cwtl
cmc
sbb
sbbb
inc
pop
insb
rcrl
arpl
cmc
and
imul
add
jnp
or
lea
sbb
iret
sbb
adc
rolb
neg
es
mov
testb
dec
adc
xchg
inc
mov
add
int
sub
mov
add
sarb
pushf
jle
test
bound
xlat
xchg
hlt
aas
push
pushf
mov
inc
jmp
in
xorl
push
lods
xor
add
xchg
sbb
scas
leave
data16
cli
mov
scas
push
into
or
xchg
jecxz
or
flds
adc
cmc
xor
fwait
jnp
push
fbstp
adc
lret
stc
and
cmc
xor
in
jp
push
repz
xlat
xchg
data16
push
cld
outsl
insl
or
xor
pusha
ret
and
sbb
loopne
adc
adc
sub
mov
pop
int3
mov
aaa
movsl
arpl
mov
adc
ret
push
inc
dec
nop
mov
popa
in
in
loopne
mov
loope
and
scas
jecxz
mov
movsb
lahf
repnz
rclb
push
mov
push
push
aaa
xlat
pop
fdivs
add
xchg
pop
stos
xchg
pop
scas
outsb
mov
mul
and
pop
mov
insl
mov
imul
and
test
push
mov
or
jle
xor
cli
imul
pop
or
in
pop
sbb
std
shlb
into
cmpsb
mov
lea
outsl
out
inc
pop
dec
in
subl
pop
mov
add
dec
repnz
fsub
mov
cld
pusha
mov
inc
outsl
rcrl
gs
lds
pop
aaa
rclb
flds
xor
cmpsl
ret
mov
jo
xchg
push
cmp
xchg
jo
xor
jecxz
dec
push
push
jecxz
mov
ror
inc
cmp
mov
js
and
push
jmp
jo
xor
fidivl
adc
inc
push
push
add
addr16
pusha
pusha
fs
adc
sub
cmp
jp
sahf
dec
xchg
loope
jbe
cmpsb
sbb
sub
fimuls
add
out
and
sub
inc
dec
repz
sti
xchg
pop
lods
lahf
pop
pop
fisubl
daa
sbb
mov
imul
or
pushf
inc
cli
dec
pop
jle
jle
outsl
sub
xchg
xchg
adc
add
icebp
sti
sub
cmp
fs
sbb
and
ret
iret
test
sahf
mov
clc
pop
push
les
sbb
dec
cld
les
ret
stc
subl
adc
loopne
shrl
dec
in
pusha
rolb
repz
cmp
test
pop
repz
insb
icebp
test
ret
mov
xor
mov
mov
mov
loop
pop
outsl
lahf
mov
adc
sub
jl
lock
push
in
rcll
call
insb
sbb
and
inc
jmp
xor
xchg
roll
daa
sub
jb
mov
lret
dec
sbb
mov
cs
add
bound
std
outsb
mov
leave
dec
imul
fsts
cwtl
adc
mov
cs
push
xorb
sub
je
mov
iret
fistl
out
or
pusha
adc
xchg
cli
push
jnp
dec
mov
shlb
or
into
sbb
scas
and
movsb
push
cmp
mov
push
jbe
add
add
sbb
psubsb
xchg
inc
dec
mov
fs
call
mov
out
mov
jmp
insb
or
mov
inc
xor
jge
mov
fidivl
adc
cmp
fsubr
shll
dec
cmp
fs
arpl
mov
stos
sub
fucomip
out
jnp
mov
ja
pop
popl
jbe
xchg
test
push
push
das
pop
jo
mov
mov
mov
dec
xchg
xchg
loop
inc
cmp
sub
dec
push
sbb
insl
stc
js
or
imul
aam
jae
jns
xor
sahf
repnz
fprem1
lcall
inc
adc
scas
movsl
mov
idivl
dec
ds
cmpb
pop
mov
or
jecxz
mov
frstor
inc
sbb
movsl
sub
or
ffree
cmpsl
mov
mov
mov
dec
ljmp
fsubs
push
adc
mov
cmp
xor
iret
add
pop
jns
cmp
mov
pop
jp
push
push
arpl
lds
mov
rolb
cmp
xor
push
ret
xor
adc
push
jle
adcl
jmp
out
jno
adc
test
test
dec
pop
mov
adc
arpl
aas
es
push
cmp
loop
lds
jbe
jbe
add
fcmovnu
addr16
mov
add
dec
out
insl
insb
jne
into
les
leave
sub
cmpsl
test
les
pop
add
fidivl
clc
xbegin
mov
aaa
push
enter
out
pand
xorb
dec
je
bound
mov
pop
aam
repnz
and
add
mov
inc
add
popa
cltd
mov
xchg
sub
repz
mov
les
sub
xchg
jne
in
push
inc
mov
xchg
dec
out
inc
in
clc
sub
adc
and
aad
sbb
call
adc
pop
test
push
fisubrl
lret
outsl
loop
sbb
mov
cmp
mov
or
leave
adc
les
cmp
rolb
add
mov
iret
adc
ss
jmp
sub
jecxz
lods
cltd
sbb
sub
mov
rorl
xchg
stos
adc
inc
jge
mov
sub
xchg
mov
sub
movsb
rorl
or
xchg
sbb
sub
and
mov
fdivrl
inc
xchg
clc
fildl
sbb
ja
outsb
push
mov
jl
mov
cwtl
aaa
pusha
mov
xchg
aaa
stos
or
sub
ljmp
shlb
jo
sub
and
enter
push
in
sbb
or
imul
stos
popa
adc
or
lods
or
cmpsl
xchg
in
sbb
cmp
jle
pop
les
loope
idiv
aas
mov
mov
sub
repz
xor
orb
dec
pop
jbe
stos
ljmp
sarl
test
mov
or
into
cltd
dec
sub
clc
mov
pop
push
hlt
sbb
inc
int3
cmp
push
xor
jl
lcall
cmp
cmpsl
movsb
and
jge
jae
sub
mov
mov
add
cmpsb
xchg
cmp
ret
xchg
dec
xorl
mov
ds
out
aas
xchg
ret
addr16
out
clc
out
sbb
xchg
mov
fmull
mov
aam
sbb
xlat
sbb
xor
sbb
sbb
in
sub
pop
dec
shll
jne
xor
push
in
add
xor
pop
popf
mov
or
xor
pop
popf
mov
pop
mov
cld
mov
or
out
popf
pop
push
test
dec
mov
shl
fisubrs
xchg
mov
mov
pop
dec
pop
mov
test
ds
jecxz
in
loope
ja
pop
bound
imul
cld
add
dec
shll
lds
ret
push
rorb
fidivl
mov
arpl
nop
shlb
jno
loop
test
add
adcb
jl
xchg
fwait
call
js
add
cs
mov
cwtl
mov
pop
mov
pushf
add
loop
popa
mov
pop
adc
mov
leave
add
mov
sahf
jecxz
daa
or
sub
inc
fcomps
jecxz
mov
cmp
and
mov
cmp
push
inc
or
fstpt
or
scas
push
sbb
inc
call
jg
cmp
fimuls
imul
lret
pop
ss
mov
and
sub
aas
aaa
mov
xor
aas
mov
fs
mov
xor
adc
push
test
mov
push
mov
xchg
notl
inc
decl
repnz
js
sbb
loopne
mov
mov
jno
xor
jo
or
inc
jae
imul
mov
jl
push
icebp
jmp
ret
dec
mov
pusha
aas
adc
pop
push
sbb
int3
std
insb
jmp
mov
in
sub
shrb
call
rol
test
dec
cmp
jae
and
test
pop
xchg
in
enter
popf
es
xor
xor
inc
dec
stc
cmp
js
inc
pop
fsubr
xor
ret
jb
cmp
jmp
adc
mov
shlb
cmp
push
or
inc
fcomi
int
int
push
dec
shl
jno
or
mov
jl
xchg
outsb
mov
scas
test
jns
mov
sbb
cmp
jbe
dec
into
in
je
arpl
jo
es
cmp
cmp
pushf
scas
cmpsl
dec
out
fstl
jmp
sub
sbb
xlat
daa
xchg
add
addb
andb
fs
mov
loopne
rolb
or
xor
mov
fldcw
test
jb
fidivl
push
lock
mov
insb
leave
lcall
and
test
fwait
fwait
shll
adcl
push
push
xor
and
jp
dec
les
push
shll
dec
test
cmp
dec
stc
and
adc
sub
cmp
retw
inc
xor
lods
ds
xchg
push
xor
mov
repnz
repz
enter
mov
pop
push
or
mov
dec
add
outsb
iret
pop
mov
js
and
cmp
xor
push
pop
jmp
gs
xchg
pop
mov
and
bound
repz
sub
dec
mov
xchg
xor
test
push
lcall
push
xchg
jo
pop
dec
sub
pop
lock
outsl
nop
dec
loopne
pop
loope
movsl
mov
testl
sahf
loop
and
nop
adc
mov
xchg
mov
adc
mov
cmp
stos
add
leave
push
cmp
ljmp
inc
xor
int
pop
sti
ss
jns
inc
insl
push
in
mov
dec
mov
repz
jo
test
in
lock
xchg
xor
mov
scas
ds
mov
pop
jecxz
sbb
dec
add
mov
dec
add
push
inc
jb
mov
pop
jg
ret
or
cli
push
xor
mov
inc
pop
mov
or
lds
insl
aas
or
inc
push
and
dec
jp
mov
adc
add
je
jle
dec
fs
movsl
mov
pushf
push
mov
and
jo
sahf
pusha
add
cs
bound
lcall
in
enter
sbbb
nop
jns
mov
jp
call
jg
and
lods
adc
xchg
pop
fs
lret
iret
les
aas
inc
inc
call
mov
push
adc
push
movsl
push
testb
pop
xchg
xor
insl
sub
jae
xchg
push
mov
mov
mov
mov
and
push
dec
insb
or
fidivrs
jmp
mov
popa
jmp
fs
sti
shll
cmovo
xchg
cwtl
pop
push
arpl
push
push
mov
fbstp
mov
push
out
dec
nop
dec
enter
movsb
xor
out
xor
aas
lcall
add
loopne
pop
dec
cmp
dec
popf
adc
mov
int3
dec
fnsave
test
movsb
pop
sarb
in
cltd
or
pusha
daa
repz
mov
nop
lock
xlat
test
clc
mov
addr16
out
out
sub
pop
aas
cmp
jb
hlt
push
wbinvd
jg
jne
sub
jne
and
cmc
dec
dec
movsb
add
xchg
mov
filds
add
inc
adc
out
jecxz
pop
mov
sbb
sbb
mov
jmp
cli
and
cmpsl
sub
mov
hlt
dec
loopne
lcall
push
idivl
fmuls
push
add
gs
jo
scas
mov
mov
mov
and
leave
nop
rcl
loop
push
addr16
hlt
das
das
xchg
lahf
mov
cmp
dec
daa
cwtl
sarb
jbe
push
inc
ss
inc
cltd
jns
aad
mov
repz
stc
jb
mov
loope
or
stos
jmp
dec
pop
inc
push
int
mov
or
imul
xchg
scas
fisubl
lea
adc
sbb
je
cs
je
hlt
jmp
mov
pop
incl
adc
popf
sbb
nop
and
xchg
push
out
rol
inc
and
aad
test
inc
or
jmp
push
xchg
add
lock
rcll
daa
adc
mov
cmp
mov
lods
xor
repnz
ljmp
jle
mov
jl
in
mov
jo
icebp
pop
or
insl
jecxz
mov
pop
cmpsb
push
jne
mov
cmp
cmp
cwtl
inc
ret
leave
es
ss
or
rclb
iret
enter
clc
or
stc
inc
aaa
push
jbe
shr
mov
mov
aam
inc
or
nop
pop
dec
inc
add
dec
mov
ss
imul
movsb
sbb
push
add
fimuls
loop
subl
add
insb
je
lea
push
sbb
adc
mov
push
imul
frstor
mov
or
mov
ss
mov
jnp
addl
cwtl
mov
int3
sbb
sbb
stos
inc
das
cli
cs
add
int
push
movsb
inc
aam
loope
mov
adc
xchg
sbb
shl
int
faddl
pushf
cld
dec
notl
stos
pop
xchg
cld
divl
sti
and
das
lea
mov
in
lds
fiaddl
push
jg
notb
pop
xchg
enter
shll
lret
cmp
test
dec
xor
mov
adc
pop
sub
mov
shrl
xchg
push
mov
pop
and
inc
mov
xor
subl
dec
decl
sbb
xor
pop
pop
shrb
mov
sub
sub
mov
and
dec
mov
test
cmpsb
mov
es
fcomps
jbe
xchg
add
xchg
ficomps
sbbl
sbbb
pop
in
pop
sub
or
push
cmp
and
or
dec
dec
testb
inc
xchg
jge
daa
jno
clc
scas
sub
fcmovne
jge
add
mov
pop
shlb
cld
adc
xchg
std
jne
push
lret
ds
scas
push
test
fs
mov
xor
push
cmp
les
dec
icebp
jns
xchg
xchg
or
sub
roll
and
lcall
repz
sbb
cld
sub
adc
lock
stos
jae
pop
pop
push
xchg
mov
loope
dec
popa
push
add
mov
test
mov
jo
xor
pop
jno
pop
ret
cld
xor
pop
jmp
push
mov
lcall
xorb
jle
ret
dec
push
push
fucomi
outsb
testl
sub
aas
mov
loopne
loope
push
lods
add
sbb
lea
and
fs
fsubs
cld
mov
pop
insl
adc
pop
imul
fidivrl
inc
fmul
inc
in
dec
mov
repnz
ret
cmp
inc
sbb
cmp
fsubs
shlb
adc
sub
ja
adc
das
out
mov
mov
out
or
mov
push
loop
incb
inc
add
xor
fdivs
jmp
push
js
in
ret
xchg
adc
mov
gs
fstps
ja
jmp
fs
pop
xor
aaa
pop
jmp
pop
lcall
lret
sbb
outsb
sbb
jo
lret
sub
loop
mov
or
xchg
gs
inc
aaa
add
popf
sti
push
jge
xchg
xlat
fs
sub
ret
and
jl,pt
xor
mov
ja
icebp
mov
jp
ss
push
fwait
and
jp
adc
adc
sbb
movsb
mov
and
inc
and
aas
fistps
mov
imul
push
cmp
cmpb
sbb
xor
lods
dec
xchg
das
cltd
negb
loopne
and
jno
jecxz
les
xchg
mov
nop
sahf
test
inc
es
mov
fmuls
sbb
in
out
fimuls
repz
mov
pop
sbb
pop
test
pushf
jl
je
push
lret
test
outsl
ljmp
adc
std
cmp
jl
dec
jmp
mov
daa
push
mov
mov
push
sbb
ret
xchg
movsl
int
push
fcoms
leave
in
jmp
push
cli
dec
cmp
in
mov
fcompp
cmpsl
jge
dec
icebp
enter
or
out
ljmp
xor
xchg
sbb
ret
fnstcw
shlb
and
mov
in
push
jb
sbb
xchg
push
inc
lock
push
push
xchg
or
nop
xorl
nop
int
mov
insb
repnz
cmp
js
push
repnz
insl
lock
sti
jbe
aaa
scas
adc
mov
dec
add
repz
ss
fildll
movsl
pop
xor
push
and
test
cmp
cld
sbb
add
aad
xchg
roll
jge
call
sbb
add
lods
rcl
adc
add
subl
pop
inc
add
push
jge
test
imul
repnz
dec
pop
in
inc
xchg
mov
mov
stc
jmp
fldenv
in
in
in
enter
and
pop
popf
add
xor
sub
test
pop
ljmp
mov
add
int
mov
cmc
addr16
mov
push
leave
pop
shrb
mov
sbb
mov
xorb
mov
push
or
mov
and
add
or
fsubs
or
sbb
pop
flds
addr16
push
add
xor
add
push
xchg
sub
add
mov
push
xchg
xchg
jl
sbb
shrl
adc
popf
imul
fs
mov
mov
int
adc
leave
fcoms
xchg
repz
sbb
pusha
sbb
iret
mov
sbb
cli
sbb
enter
lods
xor
mov
repnz
xchg
in
jb
repz
popa
mov
outsl
push
jns
push
push
pop
das
jnp
dec
inc
jnp
mov
inc
cmc
shl
inc
and
push
cmc
rorb
dec
jno
std
inc
ss
shlb
stos
sbb
repnz
data16
clc
inc
insb
mov
in
scas
ss
push
std
iret
test
pxor
iret
sbb
push
shl
sarl
pop
push
pop
imul
rcl
std
test
mov
dec
mov
or
nop
bound
out
inc
xor
jecxz
out
mov
out
or
flds
dec
loop
shrb
or
loop
aam
push
fistpl
sub
mov
aam
add
and
pop
push
dec
jns
aad
pop
dec
xor
div
adc
popa
ljmp
jl
dec
test
xchg
cmp
in
add
jg
mov
mov
enter
pop
sbbl
cmp
sahf
mov
sbb
xchg
je
xchg
and
lods
mov
pop
add
xchg
ret
loop
aas
outsl
arpl
xchg
mov
lahf
jbe
roll
push
fidivs
test
sub
iret
imul
in
sbb
stos
adcl
pop
sbb
cmp
xchg
aas
dec
xor
aad
outsb
add
ret
push
xchg
pop
or
fstps
pushf
arpl
sbb
scas
mov
xor
lgdtl
mov
dec
loope
roll
mov
xchg
adc
cmp
cmpsl
and
pushf
movsb
dec
adc
or
lahf
loop
outsb
and
repz
pop
mov
adc
inc
scas
mov
push
mov
roll
arpl
push
xor
fwait
push
mov
xchg
out
in
in
push
push
stos
insl
add
int3
xchg
shrb
jg
addr16
fldt
pop
fdivrl
ret
imul
data16
cmp
adc
mov
and
push
pop
dec
in
cmp
push
out
je
xchg
pop
cmpsb
pop
pop
imul
push
int3
jg
ficomps
sti
idivb
push
je
adc
mov
rcll
inc
scas
sub
xchg
xor
push
cmp
ficompl
add
cmpsl
push
push
pop
lods
mov
sti
movsb
push
push
pop
cmp
sar
leave
fld
daa
divl
pop
imul
cli
divb
add
xchg
cmp
mov
pop
xchg
jbe
adc
in
adc
rolb
mov
data16
fdivrl
or
ror
jnp
stos
dec
shll
cmp
dec
data16
aaa
and
cmp
push
mov
mov
pop
adc
pop
out
les
inc
stc
aas
test
loope
add
pop
inc
jl
cli
jge
fstpl
push
sub
cmp
lahf
rorb
fidivrs
and
mov
fmuls
mov
pop
or
fwait
cmpsl
inc
mov
fnstcw
sbb
divb
sub
cmp
dec
sbb
pushl
xor
lcall
icebp
mov
xchg
pushf
jl
push
filds
inc
insl
jmp
hlt
ss
xor
cmp
mull
or
in
dec
mov
jae
xor
stos
and
cmpsb
xchg
sbb
sbb
gs
jo
popf
dec
and
push
setg
jnp
out
sub
stos
push
or
pop
sub
test
adc
adc
push
add
shrl
sub
aam
and
leave
and
pop
mov
add
arpl
jns
pop
push
iret
hlt
sbb
inc
mov
dec
pop
lock
xchg
jbe
fstpt
sti
or
cmp
and
xor
push
push
mov
sub
xchg
sbb
ss
clc
xchg
aad
sahf
repnz
inc
sub
hlt
leave
jle
fs
add
fisttpll
in
lret
add
ficoms
mov
fsubl
adc
arpl
mov
dec
cs
into
mov
imul
inc
sti
sbb
addr16
add
test
xor
push
mov
aaa
xor
punpckldq
xor
pusha
mov
xchg
jbe
mov
inc
adc
cmp
fildll
jl
mov
cmp
dec
loop
mov
xor
mov
pusha
rorl
push
subb
lods
push
push
jecxz
pushf
rol
or
jo
arpl
aas
scas
mov
jg
mov
push
je
xchg
leave
call
fxch
aam
push
pop
push
adc
mov
out
push
cmp
or
les
daa
adc
add
cmp
int3
xor
les
addr16
mov
adc
add
int3
cmp
sub
mov
adc
jge
inc
mov
pop
push
pop
jmp
icebp
outsl
add
rorb
sbb
xchg
iret
adc
andl
rcl
test
dec
push
fldt
cltd
pop
outsb
stos
sbb
adc
loope
and
pop
mov
mov
or
jl
mov
andb
sbb
addr16
shlb
test
push
mov
rcrb
jle
add
pop
mov
ret
jne
dec
lret
or
adc
xchg
cmp
ret
das
aaa
sub
frstor
jno
mov
xor
fisttpll
adc
mov
mov
sbb
dec
daa
push
pusha
bound
pushw
mov
dec
outsb
and
and
or
and
push
inc
pop
mov
popa
insl
sbb
stos
mov
inc
xchg
fwait
aas
pop
int
jle
popf
test
mov
add
mov
fcoms
adc
sahf
push
jg
mov
in
fwait
inc
inc
mov
fists
sarl
and
in
adc
in
fiaddl
fnsave
dec
jmp
sbb
int3
and
cs
add
push
sarb
ret
or
arpl
xchg
popw
mov
pop
sbb
push
xchg
int
addr16
xor
sub
fiaddl
lods
sahf
outsb
add
add
cmp
mov
mov
jmp
adc
adc
sbb
xor
mov
fidivl
arpl
xchg
cmp
jl
dec
or
lock
inc
jb
sub
adc
data16
add
lcall
mov
dec
push
cmc
fs
mov
add
nop
gs
pop
mov
out
int3
lods
loope
rclb
das
dec
sahf
mov
je
int
test
sti
movsb
mov
lcall
mov
in
adc
popf
push
or
fcmovnbe
pop
nop
icebp
ljmp
push
gs
inc
aas
movsb
fwait
cmp
ss
sub
inc
dec
negb
add
sub
dec
jge
pop
mov
mov
cmp
pop
int3
jg
test
out
stos
sti
aad
xchg
ja
sbb
add
lds
xorl
cmp
clc
addr16
les
fcmovbe
or
fsts
or
add
out
add
adc
adc
adc
out
inc
pop
xor
dec
bound
jo
into
imul
shrb
inc
jbe
jmp
cmpsl
sbb
mov
xchg
jo
cmp
lcall
cld
mov
dec
movl
inc
xchg
in
das
stos
outsb
int
ljmp
mov
insb
loope
jne
xor
inc
adc
sbb
sti
ret
push
mov
sub
cmp
jg
sub
pop
int
les
in
cld
nop
fucomip
sub
sahf
pop
jbe
cmp
mov
or
cmp
out
int3
rcll
dec
cmc
lods
and
flds
inc
xchg
pop
movsb
shll
mov
mov
sub
jns
rcl
cmpsl
push
aam
mov
mov
push
mov
jge
imul
and
data16
neg
popa
cmp
sub
xchg
sbb
ja
enter
mov
mov
xchg
jp
outsl
aad
test
iret
sub
xchg
xor
out
jg
mov
sti
cwtl
loop
test
and
adc
fwait
aam
dec
sbb
xchg
cmp
iret
insb
add
outsl
fstps
add
mov
repnz
cltd
and
or
ficomps
pop
add
test
jp
sarb
add
lods
das
pop
mov
dec
sub
or
fsubl
jae
outsb
adc
xchg
int3
fildll
lahf
pop
and
and
jl
dec
xorb
jne
sub
dec
lret
lret
divl
inc
ljmp
ja
leave
push
rorb
and
cltd
out
jp
outsl
pop
or
pop
mov
fninit
sub
lock
dec
adcb
mov
imul
enter
lock
mov
pop
insb
cmpsb
mov
mov
nop
shll
lock
scas
push
mov
jg
push
xor
inc
fstpt
mov
pop
mov
cmpsl
push
rolb
mov
push
movsl
mov
mov
popf
lods
mov
push
add
xchg
push
push
sbb
mov
push
lahf
adc
mov
roll
mov
mov
out
mov
mov
lret
cli
push
pop
idiv
mov
mov
cmp
xorl
rcll
dec
repz
jmp
push
roll
shrl
scas
mov
frstor
dec
mov
push
stos
cmc
int3
out
jnp
xor
insb
jbe
fimuls
test
pop
jl
jle
mull
cli
rcll
test
ss
out
xchg
add
movsl
mov
mov
xor
mov
xchg
sbb
mov
into
and
cmp
aad
mul
clc
xor
pop
popf
roll
lret
je
cli
pop
sarb
xchg
xor
popa
sub
cmpsl
mov
mov
iret
mov
in
addb
arpl
lds
xchg
mov
inc
sbb
in
enter
lcall
jns
sahf
push
cmp
and
push
jbe
xchg
mov
push
jge
mov
adc
mov
inc
pop
dec
andl
ret
addr16
mov
mull
call
and
mov
popf
mov
sbb
and
jg
add
jmp
xlat
pop
jns
adc
cli
pop
arpl
jo
mov
ret
sub
outsl
sbb
shrb
xlat
into
push
cmp
add
mov
xor
xchg
xchg
repz
add
data16
subl
call
out
popfw
xchg
xor
lds
ret
sbb
xor
loop
xchg
adc
xchg
lods
les
jb
insb
add
popf
xchg
iret
out
mov
xor
stos
dec
out
or
and
inc
mov
movsb
ret
clc
rclb
push
gs
adc
out
jmp
fwait
in
push
cmp
sbb
in
aaa
sbb
hlt
pusha
lahf
ja
cmp
ss
jmp
adc
sub
adc
xor
loope
int3
repz
adc
divb
imul
xor
int3
mov
shll
in
icebp
mov
mov
insl
mov
xor
in
sbb
scas
mov
jl
negb
sbb
fisubs
pusha
adc
xchg
sbb
loop
mov
adc
push
mov
xchg
pop
lods
inc
fdivrl
mov
xorl
shll
and
jnp
jb,pt
adc
rep
mov
cld
test
cmc
push
cs
sub
mov
and
flds
push
int
mov
bnd
push
movsl
inc
sti
sbb
daa
sub
pop
dec
imul
repnz
mov
add
stos
cmpsl
push
js
mov
inc
loope
inc
mov
or
cmp
and
inc
xor
mov
pop
xchg
cmc
add
pop
xchg
fcmovb
dec
cltd
inc
sar
pop
and
xchg
addr16
sahf
mov
pop
or
pop
in
pop
and
or
aaa
inc
push
es
push
cltd
jmp
and
mov
sbb
pop
xor
and
int3
mov
ret
jb
les
testl
aaa
adc
nop
adc
mov
cmpb
cltd
add
fwait
jo
test
fdivrs
mov
xor
sub
xor
add
pop
pop
dec
add
mov
pop
sub
push
push
clc
and
ds
cmp
into
test
outsb
js
xchg
clc
cmp
decl
mov
mov
in
sbb
push
xlat
mov
or
cmpxchg
lods
cmpsl
pop
or
xchg
dec
rcl
popf
fwait
push
add
jl
outsl
insl
and
dec
mov
test
std
adc
add
and
cmp
pusha
ffree
add
ret
or
add
pop
lret
icebp
cmp
xchg
pusha
adc
inc
mov
mov
mov
sbb
inc
fcomps
or
aaa
jl
ja
push
int3
mov
lcall
popf
sbb
cmpsb
mov
lea
popf
sub
movsl
inc
xor
inc
pop
sub
fnstsw
fcoml
mov
aam
or
pop
cmc
iret
sub
sar
mov
adc
call
stos
test
in
sti
adc
dec
pop
jmp
mov
leave
js
sbb
popf
enter
adc
mov
fdivr
mov
mov
ja
and
and
pusha
test
xor
nop
xlat
inc
and
les
xchg
mov
test
hlt
pusha
sub
aas
mov
sbb
and
movsl
das
rcrl
fdivs
xor
sbb
push
cli
out
test
jo
inc
mov
pop
sahf
inc
int3
scas
mov
add
shlb
int3
or
cmp
dec
lcall
in
push
pushf
push
push
cmpsb
or
sbb
xchg
jno
loopne
gs
fadds
pop
sbb
clc
cmp
sbb
into
fsts
clc
bound
pop
les
lds
iret
ljmp
nop
push
add
cmpsl
cltd
mov
push
cld
pop
inc
or
divb
movsl
xlat
je
test
cmp
inc
mov
xor
and
dec
xlat
add
jge
jl
int3
xchg
addr16
xchg
lret
pop
icebp
pop
aaa
pop
into
jge
ds
fwait
xor
addr16
jae
rcrb
inc
aam
xor
ret
inc
xchg
mov
daa
or
lcall
cmpsl
leave
repz
push
cwtl
lods
and
mov
fdivrl
addl
cmp
inc
mov
mov
incl
imul
and
mov
addr16
les
test
xor
test
insb
mov
sub
mov
jno
mov
cli
outsl
push
enter
jmp
and
sti
in
cltd
mov
adc
pop
fisttps
loop
xchg
nop
xchg
inc
pop
add
xor
xor
cmp
aaa
hlt
xor
popa
dec
out
cmp
cltd
fsubs
mov
or
push
out
jae
roll
mov
pop
jbe
adcb
dec
and
rcll
mov
in
sti
push
xchg
mov
mov
mov
push
insl
test
adc
js
lret
fwait
lods
pushf
xchg
adc
call
pop
sub
cld
xchg
and
je
pop
test
jae
scas
out
fists
dec
out
push
sarb
bound
shll
in
mov
test
fucomi
xchg
inc
mov
mov
xchg
jnp
mov
sbb
lea
pop
jo
je
jle
xor
adc
sbb
in
std
pop
push
outsb
daa
or
push
icebp
movsb
mov
cmp
mov
bound
add
int
add
mov
mov
cmpsl
pop
cmc
loope
mov
sub
int
jae
sahf
int
sbb
jbe
test
jns
lods
cmp
or
xchg
iret
push
popa
inc
push
jb
or
push
mov
cmpsb
stos
lahf
mov
and
iret
lret
dec
push
out
pop
pusha
inc
aas
jno
mov
lahf
imul
insb
mov
xchg
jp
cmc
pop
shr
add
sahf
dec
jecxz
or
pop
dec
rcrb
out
mov
sbb
dec
push
push
jmp
inc
mov
xchg
and
push
lcall
pusha
sbb
nop
mov
and
fwait
mov
lds
insl
das
mov
movsb
jno
data16
pop
les
mov
ljmp
out
inc
sub
in
idivb
and
loope
inc
mov
jno
sbb
negl
xor
xchg
xchg
dec
sbb
es
cmp
aam
and
sbb
cmp
lds
insb
dec
inc
mov
inc
int
mov
inc
lahf
rcrl
fmuls
push
or
push
jb
mov
jbe
addl
out
jle
jle
jecxz
sarb
popf
test
sbb
cwtl
ds
add
in
loop
dec
dec
sti
adc
jl
lea
es
loop
imul
pop
inc
imul
mov
push
xchg
inc
adc
or
aaa
scas
push
das
int3
xor
mull
push
je
sub
int3
mov
xchg
mov
out
aas
ror
cmp
dec
add
shrl
int
pop
sti
sar
mov
repz
add
xlat
movsl
mov
rorl
inc
dec
mov
dec
je
test
or
add
push
fwait
adc
xchg
lret
fisubl
bound
mov
ss
aam
sbb
ss
sbbb
cltd
daa
cmp
cmp
push
or
sub
shrl
stc
es
nop
pop
mov
lods
insb
pusha
sub
sbb
mov
push
xor
or
cld
in
imul
js
sbb
push
adc
sub
enter
adc
outsl
mov
inc
or
jo
xor
aas
in
mov
ret
mov
gs
test
jnp
sub
jne
cmp
push
pop
push
jl
lret
fstl
push
icebp
push
sub
inc
add
mov
push
into
xchg
outsl
sbbl
in
mov
and
or
mov
scas
lods
jo
cvtps2pd
pop
fdivl
cs
push
mov
jecxz
lret
adc
sbb
sbb
sbb
fidivs
mov
and
popf
leave
cmpsb
test
pop
popa
pushf
sub
push
loope
or
scas
xchg
adc
xor
adc
inc
pop
push
push
push
rcrb
mov
mov
mov
mov
in
idiv
aaa
adc
mov
mov
mov
movd
jl
sbb
jl
movsb
sbb
pop
loope
jle
lret
xlat
push
push
jge
stos
jbe
or
popa
sbbl
push
call
ficoms
into
stos
cltd
arpl
pop
mov
mov
and
add
dec
cmpsb
jo
mov
adc
in
bound
repnz
cmp
sub
mov
imul
mov
mov
ss
inc
sahf
jns
nop
xor
xor
insb
imulb
hlt
adc
xor
popa
cli
mov
mov
pop
push
repnz
jb
ss
inc
push
test
inc
mov
mov
inc
sub
into
jno
add
test
and
popf
xchg
add
into
and
in
sbb
cmpsl
fistps
clc
push
cmpsb
xchg
pop
mov
dec
imul
outsb
cmp
adc
mov
daa
xchg
jge
fnstcw
movsb
lock
add
jp
dec
mov
and
movsl
and
dec
cwtl
jmp
sbb
shrl
imul
pop
sbb
testl
inc
sub
dec
repnz
adc
scas
scas
dec
lods
mov
nop
fidivrl
push
cmp
stc
mov
xlat
cmc
xlat
mov
or
adc
pop
js
or
xor
mov
jge,pn
mov
add
loop
sahf
and
bound
sbb
xor
push
jae
and
dec
lret
xchg
add
lock
push
test
outsb
or
ds
int3
and
pop
dec
jae
scas
ds
fstpt
mov
cmp
in
dec
and
jb
xchg
loop
push
pop
push
add
aaa
aas
in
sbb
sbb
and
or
test
fsubrs
shr
movsb
addr16
fidivrl
mov
shrb
jo
xor
push
inc
popa
int
or
lcall
ds
ds
mov
and
test
cltd
ds
and
inc
jae
xchg
inc
fsubs
add
repz
xor
jp
mov
sub
test
cmpsb
cli
pop
sub
dec
or
adc
sub
mov
mov
aas
int3
cli
icebp
loopne
add
adcl
push
lret
mov
enter
xor
mov
cmp
ficoml
dec
fs
ja
aaa
adc
adc
call
mov
lcall
dec
shl
stc
call
xchg
and
sar
icebp
cmp
xor
xor
rcr
pop
test
cmc
scas
cmc
cmpsb
das
cld
mov
xor
pop
testb
fistpl
push
and
add
scas
jecxz
pop
cmpsl
add
xchg
lods
pop
mov
mov
mov
pop
subl
sbb
je
mov
cli
xor
popf
mov
roll
sahf
std
and
sbb
push
mov
mov
hlt
push
sbb
jmp
repnz
add
dec
mov
or
aaa
popa
cmp
ficomps
repnz
mov
push
fcompl
lea
stos
and
fisttpll
popf
cmp
test
mov
adc
pushf
mov
mov
and
stos
jnp
aas
in
les
inc
lods
add
cmp
mov
sub
ja
out
push
pop
ret
or
add
sub
inc
movsb
pop
or
mov
jb
add
push
sub
jae
mov
jmp
push
add
pop
adc
addr16
fmul
insb
das
dec
ret
fdivrs
pop
jge
sahf
leave
xchg
xor
mov
lock
add
mov
cmp
stos
les
sbb
fdivl
cmp
hlt
jp
sbb
imul
pop
and
mov
push
or
mov
mov
pop
rorl
aad
sub
nop
adc
add
mov
adc
pop
and
repnz
mov
sub
push
hlt
dec
hlt
dec
mov
clc
or
push
loop
pop
mov
imul
mov
std
and
xchg
mov
popf
cld
mov
sahf
or
jmp
and
ret
xchg
aad
cmpb
cmp
inc
in
xabort
mov
iret
sub
push
and
add
je
push
mov
lret
mov
inc
loope
or
ds
inc
cltd
pop
push
pop
mov
fldz
sahf
cli
fdivrp
mov
xchg
lret
mov
jge
out
lods
filds
fs
pop
andb
movsl
sti
sub
repnz
inc
mov
ljmp
push
mov
inc
xchg
call
xchg
mov
push
xlat
mov
insl
lret
out
adc
ret
bound
or
mov
inc
jnp
jl
sti
cmp
pusha
dec
or
pop
jne
jecxz
call
dec
mov
xchg
aaa
jmp
enter
cmp
xor
or
xchg
ljmp
cmp
ret
and
xor
sub
fdivs
les
and
inc
in
sbb
xchg
inc
jp
mov
lock
mov
xchg
test
jecxz
andb
xor
push
add
in
sub
push
ds
scas
out
mov
int3
jmp
jno
add
loop
inc
mov
fsts
mov
or
test
imulb
and
and
pop
and
jmp
aaa
movsb
outsb
mov
aas
add
bound
outsb
mov
jnp
or
pop
inc
sub
int
scas
cli
daa
sbb
imul
push
inc
popf
push
inc
lods
out
adc
mov
flds
lods
in
xchg
and
in
cs
dec
scas
mov
in
fiaddl
movsb
sbbb
pop
jns
cmp
sub
insl
sub
sub
sbb
sub
loope
cmc
xor
sbb
and
xchg
mov
adc
dec
push
adc
addb
or
or
xchg
pop
adc
adc
ja
mov
xchg
dec
mov
loop
jle
inc
pop
xchg
pop
aas
cmp
jno
enter
stos
jg
push
xor
stos
mov
mov
lahf
lds
push
jb
iret
ljmp
mov
jge
inc
inc
ljmp
sbb
mov
adc
lods
into
jle
fdivrs
orb
sbb
sti
aad
stc
or
movsl
aam
dec
loope
pop
cltd
in
in
cmp
cwtl
insb
sub
ret
add
stos
ret
or
xor
dec
out
fstpl
lret
scas
jp
iret
dec
hlt
ds
and
cmp
mov
int3
mov
sar
xor
in
mov
ds
cmp
ja
ja
shll
sbb
lret
jl
jmp
jne
cmp
add
sbb
insl
insb
inc
int3
mov
mov
mov
pop
hlt
in
sti
and
inc
jo
jnp
cli
xor
or
pop
mov
xor
pop
stc
bound
ljmp
aad
icebp
jae
mov
leave
sub
mov
add
inc
adc
xchg
mov
jge
in
test
pop
out
pop
repz
outsl
loop
xchg
xchg
xchg
rcll
add
fmull
pop
repz
jmp
jge
lds
add
mov
adc
xchg
stos
jns
add
jo
shll
pop
repz
test
outsl
sub
fdivl
je
aam
arpl
loopne
xchg
out
and
aaa
jnp
adc
mov
pop
xchg
iret
aas
inc
mov
xor
adc
xchg
mov
mov
add
push
xchg
hlt
xlat
fstl
jge
dec
xchg
or
add
das
dec
or
push
pop
bound
insb
ret
push
jb
dec
and
sub
sub
loop
mov
mov
mov
dec
test
aaa
mov
pop
pop
xor
into
and
gs
stc
sbb
aas
xorl
mov
mov
movsb
mov
leave
cmp
push
mov
bound
sahf
sti
in
aad
pushf
sub
int3
pop
fwait
dec
arpl
and
cli
in
lods
rol
mov
lahf
iret
adc
ret
mov
iret
xchg
jne
fldt
and
frstor
testl
enter
inc
xchg
ljmp
sub
out
out
aad
rclb
xchg
xchg
je
sbb
lods
repz
dec
mov
lret
bound
mov
cmp
xlat
push
jo
mov
push
lea
ja
push
insb
and
into
cmc
outsl
sahf
xchg
popa
sbb
cmp
sbb
test
clc
pop
fcoml
negl
sbb
push
jle
sbb
fwait
test
dec
sbb
jo
adc
jl
imul
xorl
mov
push
cwtl
fmull
stos
loop,pn
cmc
jae
sbb
aas
mov
add
mov
int
aaa
mov
pusha
movsb
push
inc
int
mov
test
xchg
mov
shld
outsb
pop
imul
sbb
shl
cltd
lock
or
stc
add
daa
lock
push
pop
repz
push
repnz
rcl
movsb
cmp
xchg
call
ljmp
rorb
dec
cmp
lcall
mov
inc
cmc
xorb
stos
sub
push
push
int
cld
repz
shlb
adc
mov
push
mov
ret
cmp
xlat
bound
xor
adc
xchg
pop
cmpsb
mov
jno
insb
adc
mov
mov
repz
mov
pop
jp
xor
add
cmp
mov
xor
cmp
jmp
lock
mov
cld
sbb
sub
mov
lret
shll
rcrb
pop
jae
adc
sbbb
xor
nop
xor
xor
test
xchg
aam
ja
mov
mov
es
ficoms
push
or
rcll
mov
xchg
xchg
mov
push
das
xchg
pusha
int3
arpl
lds
cld
and
mov
pop
aaa
mov
pushf
xchg
inc
push
inc
sub
sbb
sahf
xor
lret
rorb
mov
dec
int
daa
data16
repnz
clc
mov
cmp
fisubrl
in
in
or
scas
adc
lods
xchg
mov
xor
xchg
jge
dec
inc
lret
dec
or
push
push
mov
loopne
inc
inc
mov
sub
imul
push
in
mov
jne
out
insl
mov
mov
adc
pop
sub
add
in
add
lahf
lcall
sub
xchg
orb
adcb
xchg
jge
cmp
sub
or
mov
push
aad
fimull
push
outsl
shll
iret
in
sti
and
pop
test
pusha
pop
and
call
sub
shlb
and
popa
das
cmp
inc
ljmp
fcoms
xchg
fwait
sub
or
xor
ror
fmull
es
inc
idiv
mov
or
popf
push
fistps
pop
aaa
dec
lcall
mov
xor
std
movaps
out
lahf
stos
add
and
mov
jno
cmpb
push
push
sbb
sub
icebp
rcll
xchg
js
inc
dec
subb
ficomps
jmp
xchg
fmuls
adc
xchg
je
rcrl
jge
sub
xor
sub
jecxz
bound
aaa
mov
xor
add
and
lock
cmp
cmp
pop
mov
call
cmp
ret
repz
push
inc
xor
fldcw
nop
aaa
mov
decb
jnp
sub
mov
lret
fwait
adc
lods
pop
sub
lcall
or
outsb
inc
sysenter
addr16
jae
subl
fdivl
ds
scas
test
mov
outsl
outsl
and
repz
cli
test
jmp
cltd
lret
movsb
rorl
popf
outsb
pop
and
cmc
lahf
sub
mov
fcompl
stos
daa
shrb
lods
inc
cmp
add
cmp
xor
fistps
xchg
out
outsb
dec
add
cmpsb
fs
je
fwait
sub
incb
and
pop
and
add
jo
iret
stos
dec
addr16
insl
inc
jp
testl
test
movsb
or
pop
ret
dec
daa
ljmp
mov
aad
js
pop
cs
xchg
jp
push
ret
decb
push
sub
fisubrl
rorb
push
mov
mov
xor
xchg
mov
stos
or
daa
cld
push
pop
mov
gs
shrb
ja
mov
mov
in
mov
inc
or
in
push
in
jnp
mov
jno
xchg
xchg
push
rclb
jns
orb
dec
add
xchg
ss
jecxz
mov
enter
cmp
test
add
cmc
and
mov
push
mov
sarl
mov
cwtl
fwait
push
imul
xor
add
loope
stc
in
and
jbe
mov
inc
data16
mov
lods
push
aaa
jno
insb
cmp
cmpsl
int
xor
push
dec
dec
rcl
add
push
cmp
inc
push
push
loopne
inc
loopew
push
jb
xchg
dec
cli
lods
xchg
ljmp
std
cld
cmpsb
dec
aaa
push
inc
mov
sbb
sti
orb
push
pop
repnz
adc
and
xchg
add
mov
lock
cmpsb
int
jb
in
int
xor
dec
aam
push
cltd
jle
push
pop
test
into
jbe
roll
adc
or
mov
lret
fldl
add
faddp
sub
shrl
lahf
jmp
out
or
mov
or
out
inc
imul
add
cmp
pop
jae
and
push
pop
sbb
aas
xor
imul
pushf
jb
call
sbb
lods
sub
inc
mov
mov
xor
jg
int3
xor
sub
mov
call
jae
sbb
jl
imul
xchg
mov
mov
aas
dec
push
cmpsb
lds
dec
sub
mov
or
xchg
nop
dec
repz
rol
xor
or
xchg
mov
pop
jno
jle
sbb
sub
fcompl
adcb
pop
insl
cltd
xchg
dec
ja
xor
scas
or
dec
mov
push
jbe
jp
rclb
add
popa
mov
pop
std
add
ficoml
es
daa
mov
xor
and
divl
xchg
jo,pn
inc
stc
loope
movsb
arpl
ja
call
fsts
or
out
leave
add
xor
stos
fs
out
pop
push
xchg
dec
add
xchg
leave
popf
iret
flds
xchg
popa
cwtl
cmpsl
out
jbe
outsl
loope
sub
push
cltd
jecxz
dec
cmp
adc
leave
add
adc
push
shrb
mov
mov
mov
shll
jl
in
push
pop
sub
fsts
clc
popa
lahf
mov
int
repz
sub
mov
out
mov
cs
mov
cli
out
inc
cmp
bound
jns
int3
push
subb
jmp
push
lea
popf
push
cmp
loopne
shlb
push
mov
imul
cmp
arpl
cli
in
pop
aaa
out
lahf
mov
cmp
or
out
rcll
movl
loopne
stos
jp
push
enter
test
sub
repnz
cli
dec
sbb
inc
add
sbb
arpl
cmp
hlt
cmc
push
or
and
sub
ss
inc
sti
aas
mov
icebp
mov
xlat
aad
rcll
jne
sbb
lods
pop
iret
add
call
mov
mov
mov
repz
hlt
pop
cmpsb
jmp
aam
add
test
cmpb
sub
mov
xlat
cmpsl
xor
mov
rcrb
ljmp
call
push
and
pop
imul
xor
shrb
outsb
mov
adc
add
mov
cmpsl
jns
mov
shlb
jmp
or
insb
out
scas
fwait
clc
cmp
inc
aam
mov
decl
std
das
std
daa
sbb
call
or
mov
repnz
leave
sub
mov
push
or
ret
push
ja
cltd
dec
xchg
cmpb
sahf
dec
inc
lods
inc
fs
push
lcall
adc
mov
dec
cld
adc
std
cs
jmp
dec
push
push
pop
push
inc
xor
inc
add
gs
pusha
mov
jns
fucomp
mov
add
xchg
push
and
jo
cwtl
mov
or
and
les
das
xor
sbb
xchg
inc
sub
scas
flds
fsubr
and
and
pop
insl
and
mov
jl
mov
sub
dec
add
lock
jmp
lret
sbb
mov
jae
in
xlat
ret
mov
dec
addr16
pop
incb
mull
pusha
dec
jnp
xchg
mov
imul
lret
cli
je
test
pop
sub
pop
mov
dec
xor
in
xchg
repz
outsl
out
pop
hlt
fwait
xor
cli
inc
adcl
outsb
add
jle
jae
mov
int
cwtl
lds
dec
ficompl
xchg
add
or
push
jle
es
mov
lock
push
add
leave
dec
add
cld
push
aad
jnp
cmp
jl
rcl
clc
sbb
sbb
push
pop
in
lods
or
mov
or
leave
mov
pushf
sahf
adc
push
stc
leave
jp
stc
dec
stos
or
lret
cmp
adc
fbld
jbe
jmp
mov
jl
xchg
mov
dec
divb
xor
xorl
popa
jg
loopne
mov
rcl
sbbb
or
mov
or
sub
sub
inc
mov
aad
jnp
addr16
pop
mov
or
int3
mov
mov
aam
push
mov
sbb
pop
push
outsl
mov
ds
test
mov
loop
or
xchg
imul
cmp
movsl
jge
sbb
insl
jb
push
nop
stos
cmp
jle
insl
add
fmuls
mov
adc
aaa
or
and
xlat
mov
push
loopne
mov
jnp
andb
stos
mov
lcall
push
mov
cld
adc
jo
jecxz
dec
mov
push
mov
jmp
xchg
push
and
test
fstpl
adc
stos
adc
mov
add
add
lock
pop
xlat
outsl
jp
aam
lods
xlat
xchg
arpl
xchg
movsl
mov
mov
cltd
test
lods
pop
lea
fwait
test
pop
leave
sub
test
out
add
fiaddl
add
push
sti
sbb
adc
out
outsl
ljmp
test
mov
or
sbb
bound
shl
cmpsl
or
xchg
pop
inc
cmp
mov
jp
ficompl
movsl
cmpsl
jbe
jae
dec
in
cwtl
cmc
adc
popf
fdivs
mov
add
pusha
cs
xchg
outsl
cmp
leave
outsb
adc
adc
push
xchg
mov
or
or
xchg
dec
and
cltd
mov
cli
pop
cmp
sahf
popf
imul
sti
cmp
push
loope
push
decl
add
inc
insb
pop
lret
bound
xchg
mov
ds
ds
lret
mov
call
adc
xorl
jae
test
xor
xor
ret
pop
out
aam
xor
xchg
jmp
or
add
pop
popa
cli
je
mov
loop
inc
leave
lret
add
adc
mov
fwait
sbb
or
sub
inc
mov
cld
sbb
repnz
in
pop
rep
pop
sbb
into
rcll
cwtl
addb
cmp
es
dec
jg
jl
sub
ss
sbb
lock
lods
jno
into
mov
int
or
sub
add
incl
inc
outsl
test
lock
mov
mov
outsl
je
negl
jmp
xor
ret
ror
adc
inc
fs
mov
sbb
jl
cmc
dec
or
push
es
pop
xchg
jno
lds
adc
test
movsl
push
ja
sbb
test
insb
adc
frstor
sub
and
out
add
push
mov
add
int3
pop
das
jge
sbb
adc
outsb
jb
mov
cld
insb
into
mov
outsl
scas
cltd
pop
fldt
push
into
pop
fwait
mov
loop
cld
xlat
ret
mov
mov
inc
bound
and
iret
es
sub
idivb
scas
push
inc
mov
or
jmp
mov
in
loopne
repz
jl
mov
push
std
mov
mov
stc
cmpsb
enter
cwtl
xchg
sbb
cli
jge
mov
adc
jmp
pop
insl
dec
cwtl
cmpsl
bound
aad
mov
insb
jbe
lods
clc
xor
in
adc
push
jp
jae,pn
cmp
push
and
inc
jp
stc
movsb
mov
lock
test
and
jb
imul
int3
and
dec
stos
mov
inc
add
outsl
lret
inc
stos
fldl
dec
mov
xor
roll
add
jl
loop
loope
lods
cmp
xchg
dec
push
mov
shlb
stos
dec
les
imul
or
xchg
mov
lahf
cmp
stos
js
xchg
ret
mov
mov
cmpsb
mov
mov
add
push
rol
push
xchg
adc
inc
shrl
and
mov
dec
and
adc
scas
in
mov
insb
pop
inc
jge
and
adc
das
mov
or
mov
movl
jb
mov
mov
add
cmpsb
sarb
push
fwait
dec
xor
sbb
sub
jae
outsb
adc
xor
add
lods
inc
add
adc
sbb
icebp
xor
mov
int3
push
sbbb
cltd
mov
call
into
les
add
jnp
push
and
jo
pop
ja
and
sbb
leave
push
icebp
ret
or
xor
push
sub
aad
jne
cwtl
sbb
sbb
dec
aad
fimuls
dec
les
adc
stos
push
jnp
mov
shlb
bound
cwtl
inc
lods
addr16
movsb
movsb
mov
ret
hlt
addr16
test
push
stos
aad
and
ds
or
inc
adc
mov
clc
pushf
and
aad
lds
fs
adc
stc
push
shl
or
daa
cmp
cmp
sub
sarb
iret
inc
enter
mov
cli
cmp
cmp
pop
and
lret
std
movsb
or
adc
fstpl
xor
mov
mov
aas
add
sub
jbe
fs
sahf
lcall
fdivs
in
sti
sub
or
push
test
out
shlb
loop
rclb
dec
cmp
test
or
jmp
or
pop
pop
sbb
and
cmpsb
cld
xor
insl
pushf
pop
or
xchg
and
jb
push
cwtl
mov
adc
mov
fsts
adcb
rorl
xlat
add
sub
std
leave
lret
pop
and
xchg
loop
push
push
fmull
pop
ds
fwait
pop
mov
mov
leave
xchg
lcall
adc
xor
and
stc
fwait
jmp
cld
mov
xor
test
fs
js
mov
jmp
or
out
xor
sbb
jns,pn
iret
jno
push
mov
or
xlat
movsb
add
xchg
and
andl
lods
sub
push
xorl
add
xor
push
popa
andb
jae
arpl
pop
sub
add
mov
loopne
in
fwait
loopne
dec
lods
xchg
push
pop
popa
mov
rorb
mov
sub
sbb
pop
iret
pop
dec
pop
mov
xor
pop
sub
inc
lods
addr16
sub
xor
adc
inc
add
subl
xor
mov
clc
cmp
ret
and
test
adc
sub
lcall
in
xchg
cmp
and
stc
insb
lret
cmpsb
add
mov
stos
in
jge
stos
or
xor
add
int
sar
das
popf
push
lock
cmc
repnz
dec
daa
sbb
or
mov
lds
add
mov
pop
out
out
and
sub
test
fiadds
sarl
data16
popa
loop
idivb
pushf
cmp
adc
clc
mov
sti
cwtl
outsb
insl
pusha
jecxz
or
loopne
sub
and
cmp
and
icebp
xor
pushf
jg
mov
in
rorl
shrl
lahf
dec
push
cmp
pop
sub
xchg
pop
xchg
push
insb
movsb
sbb
mov
filds
jb
jle
push
mov
idivb
stos
aaa
dec
stos
sbb
and
int3
pop
mov
insl
push
pop
imul
pop
out
pop
aas
push
dec
jp
scas
stc
push
loopne
insb
ss
ljmp
sarl
loop
bound
test
or
ret
jge
jge
iret
arpl
testl
push
mov
fcmovb
pusha
clc
in
pop
repz
mov
mov
outsb
mov
jbe
rcrl
mov
in
das
mov
decl
imul
imul
pop
xchg
mov
push
jae
popf
push
xchg
call
test
inc
and
pop
add
push
insb
popf
xor
shrb
pop
sbbl
xchg
xchg
push
pop
in
out
bnd
mov
add
inc
int3
xorps
pop
mov
add
stos
jns
and
jmp
and
stos
rorl
dec
ss
rcl
pop
iret
popa
push
inc
sub
push
lods
outsb
or
cmp
and
mov
nop
fcmovne
fadds
push
loopne
xchg
loope
cmp
pop
pop
cmp
pop
bound
shrl
jge
clc
cmp
inc
cmp
aam
push
ljmp
fists
jne
and
cvttps2pi
imul
icebp
jne
mov
in
sti
xorb
lret
movsb
fs
stos
sbb
cmp
dec
inc
js
jne
cmp
sbb
cmp
push
adc
mov
nop
dec
mov
ret
cs
sub
pop
les
rep
or
fcmovbe
jnp
mov
add
movsl
jb
push
pop
jg
fistps
jl
push
pop
adc
sub
jno
scas
rcrl
clc
lods
popa
add
aam
jae
test
shrd
je
cmp
add
shrb
and
int3
popl
scas
icebp
fs
push
xor
add
add
xor
add
sub
inc
insb
imul
shrl
cmc
loop
jmp
sub
dec
push
cld
fwait
sbb
test
test
xor
scas
sbb
loope
test
into
lods
jnp
mov
mov
divb
jecxz
loop
xchg
jne
lods
cmp
xchg
pop
mov
sbb
and
adc
nop
rcll
bound
push
mov
mov
ds
mov
sub
pop
inc
and
stos
cld
push
inc
rcrb
movsl
outsl
cltd
and
mov
popa
icebp
out
stos
xchg
push
add
out
dec
pop
cmp
xchg
push
in
imul
add
outsl
fildl
lock
jecxz
inc
mov
nop
incl
lcall
jle
mov
imul
pop
pop
test
xor
shlb
pop
ja
sbb
out
test
xchg
test
scas
sahf
rclb
imul
adc
in
out
jno
aam
movsl
lret
and
movsl
push
lock
adc
arpl
in
aas
hlt
hlt
aas
mov
push
mov
loope
outsb
mov
pop
jns
shlb
out
loop
mov
pop
lds
mul
jge
add
lret
mov
nopl
cli
xor
jmp
sub
out
incb
idivl
adc
divb
dec
mov
mov
addl
jno
icebp
push
push
or
push
adc
repz
repz
orl
mov
out
inc
xor
add
push
insb
movsl
jle
repz
cli
sbb
mov
push
mov
iret
add
add
pop
xchg
jno
lods
rcrl
xchg
mov
and
mov
xlat
cmp
test
imul
jmp
xchg
push
movsb
and
test
jge
addb
fucomp
andl
jne
adc
mov
cmpsb
ds
pop
popa
je
push
orb
and
dec
mov
mov
clc
movsl
mov
jp
out
out
addr16
push
lret
push
mov
pop
xor
xlat
sbb
aas
or
pop
cwtl
jae
jnp
xor
nop
xchg
sub
js
bound
add
div
mov
cs
loopne
loop
rcll
dec
pop
movsb
or
xchg
outsl
adc
mov
popa
pop
rolb
enter
push
adc
xor
jp
push
mov
addb
inc
pop
mov
je
mov
test
repz
xor
dec
je
pop
adc
pop
fdivrp
fnsave
dec
pop
lea
jns
aam
lret
cmpsb
aad
mov
push
je
ljmp
sub
leave
cs
ja
mov
push
call
int
pop
jbe
in
stos
addr16
push
xor
pop
jne
xor
mov
out
jmp
aaa
xchg
jb
mov
mov
mov
push
pop
sub
clc
sbb
and
dec
loope
lret
rclb
cli
push
jmp
ss
mov
push
jmp
addb
mov
sbb
in
pop
pop
adc
pop
dec
mov
jle
xlat
out
xor
popf
xchg
ret
pop
fwait
mov
filds
cmp
push
mov
cwtl
push
inc
xor
add
sbb
add
pop
int
jbe
std
mov
cmpsb
jne
into
jge
aam
inc
pop
add
inc
stos
movsb
lods
arpl
cmpsb
xor
insb
outsl
jnp
icebp
ret
xor
mov
jmp
popf
out
pop
or
sbb
jmp
pop
and
adcl
iret
cmp
scas
pusha
xor
pop
push
mov
sahf
dec
sub
and
mov
pop
cmp
aam
add
les
arpl
sub
and
test
shr
push
sbb
arpl
cld
cmpsb
mov
std
and
sub
dec
mov
cwtl
cmpsl
sbb
mov
mov
loope
sub
inc
popf
mov
cmp
imul
lods
dec
push
lods
dec
fmuls
sbb
mov
push
test
xchg
subl
pop
lahf
push
mov
shll
arpl
sarl
cmpsl
cmp
xchg
dec
sarl
xchg
cmp
push
imul
sbb
fnstenv
ficoms
adc
inc
and
push
mov
clc
adc
into
rolb
test
int
push
mov
icebp
mov
sub
xor
outsb
ficoml
hlt
imul
mov
xlat
inc
push
fcomps
mov
xchg
mov
ja
push
cmp
mov
leave
ljmp
test
mov
cmovno
outsl
pop
xchg
sub
add
pop
push
inc
inc
pop
jecxz
rcll
out
cmp
push
push
testl
jbe
int
inc
ljmp
and
mov
sarl
jge
xor
mov
dec
pop
xchg
jne
fildll
icebp
enter
pop
mov
in
or
cmovns
jno
and
shlb
xor
fisttpl
mov
movsb
loopne
out
fstps
pop
in
rcrl
xor
push
or
mov
out
int3
pop
xor
push
or
push
xchg
mov
into
movsb
in
mov
mov
mov
arpl
cmp
or
and
push
sbb
fnsave
rep
jp
fwait
jne
lds
sub
inc
cs
sub
insl
mov
jne
mov
int3
movsb
stc
add
jb
testb
jne
or
and
xor
mov
sbb
xlat
xchg
mov
nop
inc
xchg
cmpsb
dec
mov
out
mov
fstl
neg
xlat
jl
lea
push
ret
addr16
mov
cli
inc
pop
int3
push
pop
lcall
push
shl
stos
leave
sbbb
fdivs
lret
pop
les
and
jmp
xlat
dec
dec
and
out
aad
roll
lret
insl
sub
sarl
imul
inc
mov
and
xchg
rol
out
stc
cmp
stos
mov
mov
dec
add
fcmovne
aad
pop
rorl
dec
jmp
sarl
sub
pop
in
add
insb
xchg
fsubs
lret
nop
jmp
out
dec
cltd
jmp
pop
cmc
xchg
gs
push
xchg
pop
fcompl
aad
mov
hlt
jo
inc
cmc
xor
dec
xacquire
mov
aas
insb
rorb
lods
divl
add
sbb
mov
pop
mov
mov
push
lds
fisubrl
pop
movsb
jl
xchg
lods
lret
mov
ffree
xor
push
in
pop
fsubrs
mov
inc
arpl
jl
jno
inc
cmp
cmp
call
dec
nop
jae
movsb
sahf
scas
add
jo
imul
les
stc
push
xor
dec
mov
add
mov
clc
out
inc
sub
add
les
sub
add
pop
or
and
call
mov
out
fstps
pusha
sub
push
jnp
pop
enter
push
push
or
testb
adc
or
lahf
test
adc
mov
xchg
lea
mov
and
and
pop
mov
sbb
invd
ss
je
xchg
and
pop
pusha
out
mov
push
cs
cmp
xchg
addr16
cmc
adc
and
mov
sbb
js
fidivrl
xor
idivl
cltd
dec
xor
or
test
fidivrl
mov
cmc
push
mov
sub
aam
xchg
xchg
mov
xor
mov
xlat
sbb
imul
jp
shrb
pop
cmp
enter
out
fstpt
lcall
sub
dec
pop
roll
sub
mov
mov
roll
push
jno
cmpsb
add
jp
int
popa
lods
lret
jg
outsb
push
and
fsub
sub
je
mov
pop
mov
inc
out
push
or
sub
xor
inc
push
and
mov
xchg
inc
faddp
push
les
cmpsl
in
fs
jl
jbe
mov
addr16
adc
xor
mov
sub
mov
stc
std
loope
add
stos
in
ja
mul
popa
cmpsb
or
push
call
fwait
daa
push
sbb
in
test
inc
dec
fmull
pop
test
push
jmp
pop
lret
ficompl
lods
pop
mov
fists
pop
sbbl
sahf
fcompl
cmp
jmp
pusha
jge
sbb
stos
xchg
out
lgs
clc
lods
repz
in
ja
sbb
jge
iret
add
lahf
mov
mov
pop
js
dec
decl
outsl
lea
ficomps
cmc
inc
sbb
push
mov
fmuls
imul
dec
cld
push
mov
hlt
sarb
adc
clc
xchg
mov
rorb
popf
outsl
pop
push
sahf
adcb
xchg
or
ja
inc
dec
adc
mov
sbb
xor
rcll
push
jp
pop
fiaddl
movsb
cmpsl
xchg
and
and
cmpsb
sbb
imul
mov
push
outsb
push
pop
jp
and
sub
fisubs
mov
cmp
roll
outsl
pop
xor
sti
stos
cmp
pop
push
getsec
shll
mov
pusha
jb
stc
rorb
push
jae
arpl
je
int
push
fbld
mov
mov
cmc
sti
pop
in
adc
or
xor
ljmp
add
leave
mov
in
int
or
dec
fidivl
pop
push
sarl
cli
mov
and
and
sbb
cltd
push
xor
or
jnp
mov
jns
sub
div
adcb
push
cmp
add
aam
movsl
out
xchg
sbb
aas
mov
stc
pop
aaa
fists
dec
xchg
mov
mov
push
out
in
jecxz
add
insl
sub
cmp
add
and
mov
push
popa
pop
addr16
mov
xor
iret
or
adc
inc
mov
xchg
insb
flds
hlt
fisubrs
jne
sbb
inc
cld
and
sub
xor
nop
shll
in
clc
das
ljmp
fldcw
notb
dec
fucom
sbb
mov
stos
push
fldenv
lret
imul
pushf
fidivrl
movsl
dec
add
in
cwtl
sub
mov
or
pop
jbe
and
push
pop
fstps
adc
jbe
or
fs
sub
rol
and
repz
aas
pop
outsl
pop
jecxz
jo
iret
rep
ja
loope
and
repnz
es
ficompl
fst
xchg
stos
push
lock
les
test
push
jp
mov
pop
sbb
dec
iret
in
aad
lret
les
into
popa
lea
xor
sbbl
dec
xor
pop
push
dec
rol
dec
and
jmp
pop
xor
shlb
cmp
cltd
xlat
jg
in
inc
jns
in
or
addr16
mov
ret
jp
sbb
in
aaa
dec
adc
mov
pop
sub
fmulp
mov
cmc
sbb
call
cmp
push
xchg
mov
sub
gs
rcrl
mov
mov
std
push
into
push
mov
adc
or
mov
push
and
mov
sbb
mov
neg
pop
adc
or
test
rorl
jb
push
aad
xor
repz
and
or
add
outsb
lahf
mov
incl
dec
insb
shlb
out
add
or
dec
cmp
mov
push
pop
scas
stc
mov
mov
ja
pusha
mov
or
push
xchg
xlat
push
inc
das
push
arpl
mov
cld
xor
test
out
add
fstpt
decb
cmpsb
inc
inc
mov
sub
and
dec
xlat
loope
fbstp
dec
adc
cbtw
mov
or
xchg
testl
push
pop
fbld
dec
xlat
rclb
push
adc
ljmpw
add
xchg
adc
add
adc
xor
adcb
push
adc
mov
push
mov
push
sub
push
inc
test
data16
mov
les
push
fisubs
xchg
iret
jo,pt
and
fwait
add
jmp
repz
fstpt
dec
sbb
inc
pushf
jno
lret
int
adc
nop
idivl
ljmp
in
in
dec
ret
call
in
mov
xor
mov
and
dec
in
dec
push
xor
xor
outsl
hlt
or
pop
dec
outsl
or
push
mov
lret
scas
sti
or
aam
fldenv
in
add
jmp
js
repnz
leave
push
mov
mov
enter
outsb
xchg
mov
ret
jge
sbb
sarb
cmp
adcl
xchg
dec
jge
les
movsl
add
loopne
jmp
and
nop
fildl
add
cmp
pop
js
lods
push
xlat
or
mov
lods
push
push
fnstcw
fldcw
inc
enter
stc
cmp
ror
xchg
push
cmp
xchg
sbb
dec
dec
shl
insl
inc
mov
jmp
int3
mov
outsb
pop
mov
jno
inc
aam
xor
shl
nop
fsubrl
dec
and
stos
pop
push
cmp
push
es
mov
icebp
adc
mov
popf
sub
fisubl
cltd
jne
mov
add
imul
xor
in
loop
je
push
ret
ja
pop
leave
or
jg
jbe
int3
enter
enter
add
pop
push
int
dec
or
inc
std
add
ror
mov
sbb
je
mov
jle
jns
cmp
push
push
pusha
outsl
enter
test
mov
jnp
and
push
cltd
orl
inc
xor
inc
or
add
outsb
xchg
inc
out
adc
sbb
repnz
pushf
and
pop
pop
fbld
mov
int
and
add
pop
repz
inc
das
cmp
lods
sahf
hlt
inc
sbb
mov
xor
sub
add
mov
fdivs
int
pushf
mov
out
cltd
mov
push
imul
gs
pop
sti
sti
inc
push
out
xchg
mov
xchg
enter
pop
mov
cmp
and
addr16
icebp
inc
cs
sub
add
push
test
xchg
pop
loope
sbb
and
add
jp
mov
mov
xchg
out
jle
popa
add
nop
and
fildll
je
rorb
outsb
adc
lods
out
dec
mov
enter
fldl
shr
mov
repz
adc
ja
roll
pop
dec
mov
pop
dec
shrb
lahf
fsubrl
ja
push
lret
push
xlat
ljmp
jl,pt
aas
enter
daa
dec
mov
and
into
int
xor
pop
pusha
dec
lahf
shl
xchg
sbb
inc
inc
push
adc
popf
repz
fisttpl
add
jmp
pop
mov
cmpsl
gs
lock
fisubrl
fadd
adc
xchg
ret
push
xchg
push
sub
aad
sbb
adc
lret
ffreep
call
pop
data16
pushf
fs
jg
out
ret
push
pop
repnz
lret
or
hlt
ret
imul
dec
inc
xor
out
into
or
mov
mov
mov
sub
bound
pushl
mov
lock
pop
and
jp
das
test
jmp
test
test
fistps
push
out
sbb
xchg
scas
pushf
rolb
xchg
mov
enter
sbb
pop
std
popa
stc
ret
loope
mov
test
out
fildll
scas
add
push
cld
jae
movsb
xor
push
sbb
jno
ljmp
aad
jbe
xlat
es
int3
push
mov
adc
out
popa
out
add
dec
mov
mov
gs
mov
addr16
fsubr
mov
je
xor
cmp
cli
lea
xor
or
ljmp
clc
and
nop
fldcw
push
dec
add
ljmp
cmp
cs
dec
icebp
fwait
dec
scas
loop
xlat
mov
jbe
out
sub
movsl
inc
ficompl
imul
cmpsb
out
hlt
paddusw
shlb
movsb
pop
xchg
mov
lcall
sbb
repnz
addb
ja
das
push
dec
lods
gs
adc
push
mov
sub
inc
or
xor
add
adc
or
sbb
jl
mov
adc
fldl
and
jbe
outsl
and
insb
xor
push
lret
dec
mov
mov
push
mov
push
outsl
sbb
adc
inc
mov
das
mov
incb
insl
and
hlt
sbb
xchg
pop
jg
mov
xchg
in
pop
pop
add
nop
fdiv
outsb
imul
sbb
arpl
sbb
inc
xor
xor
pushf
add
push
lahf
int3
out
mov
xchg
mov
jl
lea
mov
fs
bound
ss
dec
or
pushf
xchg
loope
cmp
dec
push
jp
jg
cmc
push
dec
fldt
addl
loopne
sbb
out
in
dec
aaa
sti
lcall
pop
lods
mov
sub
cli
hlt
pop
jle
pop
push
loop
dec
inc
ja
cmp
pop
pop
out
adc
cli
icebp
inc
push
adc
repz
icebp
jo
jle
mov
fwait
mov
pop
fs
pop
push
mov
or
sub
outsl
imul
adcb
mov
out
cmp
lods
hlt
cmpsb
push
out
andl
out
add
add
or
sbb
mov
sahf
hlt
mov
cmpsl
mov
jo
rclb
mov
mov
test
jmp
je
imul
mov
stos
pop
repnz
add
pop
xlat
pop
aaa
xor
andb
sbb
mov
jp
jae
cwtl
or
xorb
es
add
sbb
mov
pop
lods
sbbl
fnstcw
arpl
in
flds
inc
popa
mov
push
add
mov
lock
sub
mov
add
xchg
sub
mov
dec
xlat
xor
xlat
pop
ss
pop
xlat
or
in
mov
lcall
xlat
xor
add
or
arpl
subl
idivb
out
fildll
jb
mov
push
inc
sbb
scas
mov
jne
xlat
ret
nop
insl
or
inc
push
jmp
cmpsb
loopne
lahf
mov
loop
and
iret
dec
mov
or
test
jbe
jno
push
pop
jae
out
into
aam
repnz
mov
fisttpll
test
cltd
dec
or
data16
stos
sahf
fwait
subl
dec
pop
ljmp
mov
dec
xchg
mov
push
rol
mov
push
ret
jo
add
pop
cli
aas
and
push
addr16
aad
xchg
imul
int3
mov
mov
mov
jns
cmp
fimull
xor
outsl
dec
add
cltd
inc
xchg
adc
mov
or
sbb
fwait
xlat
push
xchg
add
cmp
icebp
les
pop
addb
jmp
mov
or
or
ja
mov
cmp
xchg
imul
jae
or
jne
adc
test
aaa
insb
xor
add
cld
sbb
push
lcall
cmp
mov
add
jns
shrb
cwtl
pushf
frstor
cmc
push
test
mov
mov
mov
push
jns
dec
aas
cmp
sub
and
bound
jecxz
in
je
mov
popa
xor
or
lods
imul
out
adc
mov
mov
loope
imul
loop
cmpb
mov
test
outsb
test
pop
jp
mov
lcall
fwait
xchg
insl
mov
sbb
sti
aam
push
repz
shll
leave
pop
add
push
mov
cmc
pop
and
addr16
je
push
xor
inc
jg
jp
aas
push
movsb
sti
into
mov
insl
test
cltd
inc
jno
mov
jae
xor
imul
clc
jbe
icebp
push
shll
adc
mov
js
xchg
es
imul
mov
xchg
jb
in
jb
ss
jmp
or
adc
bound
clc
icebp
jmp
sbb
and
add
scas
inc
mov
mov
repnz
jne
xlat
xor
ss
aam
out
cmp
push
adc
test
jge
roll
mov
ret
insl
cli
jmp
fiadds
cmp
sbb
ret
inc
pushl
cmpb
lods
ret
lock
fstl
push
lock
es
and
mov
and
add
cmp
sub
data16
push
pop
addl
into
pop
gs
jge
xor
sbb
cmp
clc
test
pop
in
or
imul
out
les
push
sub
xacquire
xchg
fwait
gs
push
cmp
fbstp
xchg
cmpsb
lods
inc
jno
cmc
std
or
hlt
insl
scas
fildl
pop
je
ds
xorl
push
xor
arpl
or
dec
leave
and
xor
cmp
loope
aam
fsubrs
mov
xchg
test
dec
push
in
mov
xchg
inc
fisubrs
lods
push
xchg
loopne
add
xor
dec
aam
es
sub
popa
aad
cmc
push
mov
jne
cmp
sbb
or
std
adc
test
cmp
idivl
pop
and
pusha
mov
dec
mov
sub
adc
dec
repnz
and
mov
xchg
aas
outsl
lods
jae
dec
outsl
dec
in
or
out
cmp
inc
and
icebp
push
addb
cmp
insb
cmp
inc
push
adc
test
in
shl
clc
aad
xchg
insl
pop
xor
dec
ret
mov
cld
movsl
mov
mov
cld
outsb
hlt
sbb
mov
dec
mov
cmp
dec
sbb
mov
aad
jmp
or
xlat
pusha
dec
mov
jo
mov
stc
outsb
and
out
mov
out
sub
insl
jne
push
push
sub
aas
mov
add
mov
and
push
int
adcl
inc
jge
and
pop
dec
or
xor
dec
cltd
daa
fiadds
rcrl
mov
clc
xor
push
outsb
jl
stos
or
cmp
inc
imul
jno
filds
or
mov
dec
adc
decl
cmp
outsl
xor
test
movsb
fwait
lret
ret
ret
or
daa
mov
pusha
mov
sahf
movsb
pop
pop
mov
or
mov
push
adc
jns
fwait
mov
jmp
add
in
and
rcrb
cs
out
clc
mov
pop
ja
loop
in
cmp
mov
ss
dec
es
push
jp
cmp
out
jecxz
pop
add
lahf
leave
int3
mov
cwtl
fs
repz
popa
mov
out
in
hlt
xor
cmc
push
inc
mov
jo
fildl
into
adcb
nop
jbe
insl
xorl
mov
les
inc
mov
and
add
scas
or
in
data16
clc
pop
jg
and
je
cld
xchg
ljmp
bound
pushl
stos
mov
fldcw
orb
cmpsl
xchg
jns
int
mov
or
xor
imulb
mov
mov
xchg
add
dec
mov
test
arpl
aam
fdiv
out
sahf
imul
divl
shr
cmpsb
cli
xchg
addr16
stc
inc
cmp
dec
enter
pop
enter
retw
sub
mov
mov
mov
dec
mov
jecxz
leave
in
xor
jge
data16
scas
nop
test
pop
cld
push
add
scas
sar
push
int3
adc
mov
push
and
repnz
stc
mov
xchg
lods
pusha
push
dec
cmc
in
or
xchg
mov
push
xchg
xchg
int3
outsb
sub
mov
es
aam
neg
cmp
pop
jp
fcoms
xchg
movsl
in
mov
sbb
pop
mov
ljmp
mov
sbb
filds
jp
fldenv
xlat
xor
jns
cmp
jge
mov
and
ret
icebp
movsb
pusha
sti
xchg
out
sbb
sbb
add
sbb
jge
xchg
cmp
cmpsb
xor
ss
jne
xor
push
add
cld
lock
bound
aad
fcomps
mov
or
adc
jle
mov
dec
xor
lret
stc
mov
dec
rcrl
dec
adc
cwtl
cmp
push
xchg
in
movsl
add
arpl
in
and
xchg
mov
adc
cmp
insl
movsl
insl
or
mov
int
add
out
add
and
jae
mov
cli
cmc
sbbl
mov
adc
or
mov
jg
xchg
push
incb
mov
dec
mov
scas
cltd
enter
push
test
mov
std
int
add
xor
movaps
jbe
pop
gs
idivb
xchg
ja
outsl
or
jl
and
rcll
xchg
arpl
imul
jbe
sub
push
cmp
jns
mov
jns
roll
inc
adc
pop
mov
loopne
dec
fwait
pop
cli
ret
sti
xchg
lahf
imul
mov
mov
or
mov
cmp
scas
fildl
stos
mov
push
nop
stos
arpl
dec
mov
ds
mov
mov
jle
sbb
les
out
mov
out
mov
stos
cmp
jae
std
gs
push
repnz
cmp
mov
pop
ds
xlat
cmp
test
pop
fldcw
ljmp
std
aam
xor
call
push
sbbb
into
cmp
and
mov
inc
adc
push
and
xor
movsl
dec
push
mull
test
int
adc
test
test
push
into
pop
sub
push
fidivrl
stos
popa
fs
mov
inc
ljmp
dec
sub
cmc
and
cs
lods
outsb
sbb
cmp
mov
cmpsb
jecxz
andb
les
vpunpckhqdq
pop
xchg
and
das
mov
sbb
xor
mov
lea
sbb
jmp
sar
sbb
cmpsl
jg
shlb
xchg
xchg
mov
add
notl
xchg
pop
clc
lcall
adc
in
mov
push
mov
xchg
shlb
sub
cmc
xchg
dec
fldl
das
ds
push
xor
and
and
cmp
out
xor
call
xor
sub
adc
test
mov
jae
jl
inc
sbb
jecxz
negb
sub
cmc
stos
cld
pop
imul
leave
ljmp
dec
mov
mov
fucomip
and
lods
cmp
xorw
loopne
and
sub
and
or
pop
test
pop
or
daa
std
mov
add
roll
mov
mov
push
cmc
add
in
imul
adc
pop
pop
rcrl
leave
mov
fnstcw
cmp
xor
rcll
cmp
lea
pushf
jecxz
lds
scas
js
jo
dec
mov
ret
out
popl
or
push
lret
aad
xchg
enter
aas
std
pop
das
sbb
fcmovnu
test
idiv
and
mov
popa
sub
mov
sub
mov
cwtl
or
inc
stos
repnz
mov
int3
shl
add
inc
adc
js
inc
sub
sub
sahf
mov
pop
scas
daa
pop
and
sub
inc
rcrb
rolb
insl
fmulp
push
sbbl
int3
mov
imul
pop
jmp
adc
scas
data16
in
jns
imul
or
call
jge
enter
in
dec
rorl
xchg
shll
xchg
mov
sub
or
jge
inc
iret
pop
inc
fsubrs
pop
out
loop
push
adc
pop
xchg
push
fnstenv
inc
xchg
loop
cwtl
mov
dec
lock
mov
cwtl
dec
pop
ja
pop
xor
call
sub
jo
inc
mov
adc
fidivrs
ljmp
mov
sbb
pushf
popf
in
jg
jl
fcoml
fdivrs
aad
xor
mull
out
fs
xlat
dec
pop
lods
mov
orb
xchg
fwait
push
ss
fwait
xor
pop
repz
shlb
leave
aad
jl
and
push
xchg
pop
pop
adc
add
inc
cmpsb
jl
inc
and
rcll
lcall
fidivrs
or
sub
sarb
jmp
sbb
add
das
dec
je
sbb
xchg
daa
decl
lea
xor
push
or
xor
test
cmpsl
sbb
outsl
int
notb
rolb
mov
push
rorl
jecxz
push
int3
adcl
sbb
xchg
enter
mov
rorb
test
stc
dec
jp
out
ds
lret
jle
insl
sbb
jb
in
std
push
pop
dec
adc
nop
cmp
push
fcompl
xorl
clc
mov
ss
adc
cmp
sarl
dec
mov
adc
outsl
loopne
lea
lds
inc
add
sub
bound
cmp
jo
fistpl
mov
jo
lret
repnz
in
lcall
cli
mov
mov
jmp
and
adc
dec
dec
ja
and
sti
and
cmp
popl
push
or
jns
dec
insb
in
pushf
mov
fs
sbb
inc
mov
out
inc
sub
aam
fstpl
pop
sbb
fadds
mov
sub
mov
outsb
jbe
jmp
fadd
mov
push
mov
inc
and
sub
je
inc
jne
jmp
sub
call
sub
sti
stos
idivl
addb
pop
pop
cmp
scas
xchg
es
add
mov
add
dec
mov
adc
adc
mov
dec
push
sub
pop
cli
cmp
ficoml
xchg
jae
add
lods
fcomip
shll
push
cmp
push
push
jge
mov
lds
scas
data16
in
sbb
ljmp
sahf
mov
mov
mov
bound
dec
adc
and
jp
inc
out
xchg
and
out
mov
or
sbbl
lods
movsl
dec
jmp
inc
lods
stos
sarb
sub
cmp
adc
push
jno
jnp
in
sti
pop
mov
leave
ret
pop
jb
sub
dec
ja
ljmp
repz
mov
fsts
xchg
loopne
cmp
mov
and
inc
and
and
push
add
push
ja
pushf
mov
xor
cmp
adc
repz
incb
pusha
movsl
pop
xchg
aad
push
leave
inc
add
je
pop
jmp
sub
cwtl
inc
les
clc
or
popf
jle
testb
xor
lea
sti
fwait
inc
dec
sub
and
mov
rcrb
push
cmp
mov
aaa
arpl
mov
mov
cwtl
push
iret
push
mov
dec
mov
jnp
add
aas
es
sub
push
mov
xor
jle
cmpsl
pop
dec
ret
or
push
dec
push
fildl
sub
mov
out
shr
push
notl
cmpsb
stos
mov
and
jge
in
sub
mov
arpl
sbb
mov
dec
mov
sbb
pop
mov
leave
sti
das
cmp
mov
pop
pop
shlb
lret
insl
fbld
rcr
outsb
cmp
mov
pop
add
mov
insb
iret
popf
scas
and
rclb
or
popf
incl
xor
mov
xor
xchg
mov
imul
pop
pop
js
push
mov
cltd
out
rclb
push
aaa
xchg
mov
push
lret
dec
sub
fsubr
bound
arpl
xacquire
lea
xor
inc
jns
mov
and
push
xchg
push
cmpsl
repnz
shl
das
aad
fs
cmp
mov
cmp
fadds
aas
mov
dec
push
jne
sbb
or
test
xchg
lods
dec
or
and
or
or
decl
popa
dec
xchg
mov
jle
xchg
dec
mov
lcall
cld
mov
std
dec
fisubl
xor
push
leave
aam
je
fdivs
int
jg
fisttps
pop
add
and
fincstp
mov
push
repz
jmp
ss
movsb
in
aas
scas
cli
mov
cmpsb
stc
pop
loopne
pusha
out
nop
test
data16
mov
sbb
aam
gs
lea
xorl
sbb
lret
inc
cmovp
outsb
mov
adcl
fdivrp
cmpsb
xor
jno
dec
in
or
arpl
sub
push
cmp
mov
rorl
push
xorl
sahf
and
loopne
jle
addr16
xor
dec
push
jnp
test
hlt
jge
sbb
add
stos
or
adc
lcall
movsb
stc
adc
sub
outsl
jno
sub
in
dec
or
cmp
pop
cmc
lods
push
adc
lods
into
adc
stos
test
movsb
outsb
adc
sub
cmp
popf
popa
dec
adc
popf
out
iret
fnstcw
xchg
mov
mov
push
lahf
and
rorl
mov
int
jge
shll
and
aad
mov
jno
add
sbb
jl
je
cmc
pop
lds
pop
fcmovne
adc
test
in
add
mov
loope
dec
add
and
rcl
lods
or
addr16
mov
andb
mov
dec
adcl
pop
jb
xchg
in
pop
adc
inc
daa
lret
xor
mov
filds
lds
jmp
cltd
inc
in
or
mov
lea
add
pop
push
mov
xchg
incl
jae
or
mov
push
pusha
call
imul
popa
notb
in
add
es
cld
cmp
je
out
aam
mov
jnp
iret
jno
shlb
push
sub
mov
dec
mov
in
xchg
xchg
rorl
or
jmp
mov
jne
or
xchg
push
leave
jle
mov
pop
jns
call
add
sbbl
mov
xorb
jo
xor
imul
or
and
dec
ja
jnp
mov
das
in
fists
xor
mov
mov
test
xor
and
stos
or
stc
jl
cmp
lods
es
push
mov
insl
ret
xchg
pop
daa
sub
lods
cmc
imul
or
mov
or
int3
jo
inc
and
cmp
fbstp
lea
and
sarl
or
pop
jmp
mov
fimull
out
dec
js
inc
mov
cmp
movsb
sub
mov
cld
rcll
scas
test
sahf
sbb
lods
out
dec
add
rorb
in
mov
dec
xor
orl
int3
inc
adc
mov
mov
mov
and
shlb
mov
inc
mov
js
out
mov
xchg
ja
repz
insb
arpl
daa
lret
mov
mov
pushf
ljmp
add
sbb
push
sub
cmc
mov
push
test
push
xor
dec
mov
inc
jno
mov
jns
xchg
inc
lea
xchg
push
adcl
jmp
lods
fisttps
fld
sbb
xor
aas
mov
cmpsb
aam
mov
imul
cwtl
inc
push
cli
pop
cmpsb
xchg
movsl
loopne
enter
rclb
out
xchg
xor
sbb
jb
adc
clc
out
ret
std
inc
in
sbb
stc
inc
jne
ret
rorl
fisubs
fisubl
adc
ret
xchg
je
fsubrl
xchg
stc
fmuls
aam
dec
adc
sti
dec
inc
out
add
adc
push
xorb
arpl
adc
mov
adc
orl
jecxz
imull
jnp
or
test
arpl
or
mov
aas
sahf
nop
lahf
xchg
push
push
dec
cmp
aam
or
jecxz
or
or
pop
cli
or
add
je
push
mov
outsb
pop
adc
je
jmp
jo
pop
sbb
xchg
mov
pushl
lods
das
std
sahf
insl
jne
xor
mov
ljmp
cltd
test
or
test
popf
mov
xchg
sbb
jne
movsb
arpl
movsl
insb
cwtl
out
sub
and
pop
das
hlt
cmpsl
jg
loop
sub
nop
stc
sub
mov
in
cmp
push
or
mov
mov
insb
xchg
fs
pushf
sbb
cmpsl
lret
or
add
adc
fisubrs
sub
fldcw
out
loopne
insb
push
call
cwtl
push
fbstp
test
add
rorb
mov
and
jl
jo
sti
lret
add
aas
xor
xor
xchg
aas
in
pop
mov
scas
and
cltd
gs
xor
clc
pop
lahf
subb
std
lea
xor
xchg
xchg
pop
cmpsl
adcb
bound
cmpsl
ds
and
je
repnz
add
mov
icebp
std
push
xchg
add
dec
add
insb
outsl
fadds
les
pop
je
clc
stos
push
mov
scas
dec
xchg
xchg
pop
ds
push
imul
cmp
fildl
repnz
mov
jmp
rcrl
xor
mov
lods
push
aad
and
adc
aam
or
mov
dec
out
out
jge
sbb
jno
popf
and
jl
push
movsl
jl
pop
cmc
les
shll
loopne
dec
pop
insb
adc
stos
rcr
js
jp
mov
cmp
in
pop
js
int3
cmp
adc
lcall
mov
pop
lahf
iret
pop
outsl
pop
outsb
add
loope
adc
mov
inc
out
mov
addl
inc
dec
sbb
js
sbb
xor
xchg
sub
fldl
movsl
sti
xchg
dec
fbld
imulb
jnp
push
jns
cmpsb
cmpsl
xchg
stos
aad
xchg
xchg
mov
aam
xor
cmp
lea
fmuls
xchg
pop
xchg
sbb
sbb
int3
jg
pop
mov
out
push
mov
pmovmskb
jle
stos
mov
pop
or
out
call
data16
rol
call
imul
cmp
dec
lods
xchg
add
or
pop
sbbl
test
mov
push
imull
daa
aas
mov
rolb
movsb
dec
xchg
clc
mov
pop
movsl
lock
mov
pop
dec
xor
aad
je
pop
push
clc
das
inc
mov
aas
frstor
iret
or
scas
imul
xchg
xchg
ficomps
cmp
jo
adc
add
sti
adc
scas
aaa
mov
mov
mov
hlt
mov
lret
pop
sbb
xchg
push
push
xchg
mov
or
and
test
js
mov
imul
stos
inc
sti
jle
inc
lahf
mull
cmp
fisttps
movsl
dec
das
pop
cmp
dec
cwtl
lahf
divb
and
push
add
outsl
mov
push
pop
sbbl
adc
je
jo
jne
add
lret
lds
loope
dec
push
mov
fmuls
and
mov
stos
out
jmp
jecxz
out
les
test
in
inc
or
bound
pop
call
cmp
push
leave
lods
ret
pop
and
pop
lds
mov
rolb
repnz
mov
sub
out
mov
aad
cwtl
sahf
xor
xchg
or
sub
mov
jo
pop
dec
jo
sbb
rorl
ret
jmp
addl
fisttpll
jmp
cwtl
push
and
dec
movsb
xlat
popf
mov
inc
xchg
aad
push
mov
cmc
dec
push
sub
push
lods
sub
cmp
mov
int
xor
mov
cmpsl
lret
jo
inc
push
mov
mov
xchg
xor
cld
mov
test
mov
movsb
dec
mov
gs
and
or
loope
pop
test
sti
gs
push
and
scas
inc
shl
ret
testl
and
paddusb
mov
inc
xor
and
gs
movsb
push
jecxz,pt
adc
mov
jge
in
jle
hlt
adc
cmp
mov
iret
dec
in
cmpl
fisubrl
mov
jns
adc
xor
sub
sub
int3
jmp
outsl
outsb
jne
dec
sti
lods
lret
mulb
mov
arpl
loopne
and
iret
fucomip
mov
and
and
xor
xor
cmp
hlt
clc
push
in
outsb
out
cltd
and
push
lea
cmp
lcall
nop
jmp
mov
xchg
mov
xlat
pop
sbb
jno
fsubr
stc
mov
imul
push
mov
xor
lret
insb
or
cmp
bnd
cmpb
xchg
outsl
pop
jge
jb
pusha
shrb
popa
scas
repnz
insl
clc
jcxz
sbb
fcoms
rclb
stos
outsl
mov
mov
leave
xlat
jmp
stc
sub
nopl
pop
mov
adc
jae
cmp
cmp
pusha
rorb
mov
adc
xor
add
rcrb
mov
addr16
xchg
arpl
pushf
xchg
mov
arpl
imul
clc
pop
or
xlat
movsl
adcl
test
pusha
push
clc
and
lock
dec
jge
pop
clc
pop
mov
cwtl
fs
clc
int3
fdivs
clc
and
inc
outsb
mov
pop
stos
pusha
or
jnp
and
mov
frstor
imul
pop
ror
fwait
jle
or
fwait
mov
packsswb
dec
ror
and
out
ret
mov
push
test
jo
mulb
jge
test
aaa
xchg
and
inc
xor
dec
fucomi
mov
pop
inc
fidivl
std
xor
push
cwtl
faddp
and
add
int
icebp
mov
push
fistpll
pop
in
adc
lods
dec
leave
adc
inc
push
movl
ret
rorl
mov
loopne
fldt
lds
push
inc
clc
lahf
mov
mov
jge
call
jl
lret
or
mov
insb
xor
int
jns
out
out
shl
xchg
mov
mov
popa
mov
cmp
les
dec
lahf
sbb
dec
jmp
lahf
dec
jle
pop
add
je
add
loopne
sbb
sub
add
xchg
mov
movsl
imul
popf
pop
sub
out
arpl
jns
adc
push
sub
stos
scas
dec
testl
sti
repnz
imul
sub
or
sbb
jno
aam
cmp
aad
in
add
lea
fstpl
mov
bound
aaa
and
lock
cwtl
push
inc
stc
dec
aam
cmpsb
test
repz
and
mov
xorl
sbb
add
clc
xchg
mov
mov
xchg
roll
decl
and
cwtl
cmp
popf
jl
in
mov
cmp
dec
sub
add
js
aas
sbb
cs
mov
jg
or
push
mov
xchg
adc
in
mov
testb
xor
inc
sbb
and
jnp
adc
test
sub
fldl
clc
and
mov
mul
jge
sbb
repnz
mov
int
adc
pop
cld
xor
sbb
fwait
rorb
mov
ret
sbb
adc
sub
leave
filds
pand
ljmp
daa
and
fistpl
sbb
sti
mov
mov
shrb
xor
inc
loope
lret
out
rcrb
jge
mov
inc
push
and
mov
fneni(8087
outsl
pushl
shlb
fcomi
out
xchg
sbb
and
out
into
inc
xor
xor
inc
adc
rcr
es
daa
sub
pop
pop
es
pop
lds
and
or
mov
adc
jne
mov
cmp
jne
push
ja
and
mov
clc
and
pusha
stc
xchg
inc
and
add
ud2
test
pop
mov
dec
add
sahf
sbb
inc
test
jb
pushf
es
scas
add
dec
bound
adc
dec
lods
data16
jo
cld
fsubrs
sarb
xor
rcl
pop
int3
pop
stos
mov
aas
and
xor
xchg
dec
add
push
lea
out
imul
pop
mov
fwait
out
jb
inc
data16
xor
mov
adc
jp
dec
and
fistl
je
data16
jne
and
adc
mov
mov
imul
cmp
or
xchg
sbb
imul
test
stos
mov
and
mov
and
pop
cmp
popa
pusha
js
call
shll
movb
jne
mov
lds
dec
push
and
sub
push
jae
mov
js
mov
test
pop
mov
cmp
arpl
xchg
adcb
inc
insl
fstps
xchg
mov
filds
icebp
cmp
ret
cld
orb
aaa
cs
push
dec
pop
add
inc
fwait
xor
mov
mov
push
inc
mov
jmp
popf
mov
and
enter
stc
push
push
mov
pop
popa
jns
mov
clc
daa
push
idivb
pop
mov
xor
in
mov
ds
jo
cmp
adc
mov
lret
sarl
hlt
cwtl
jo
mov
out
fidivl
lods
lcall
scas
mov
pushl
insb
aad
sbb
xchg
std
adc
xor
push
xor
aam
out
dec
and
xchg
push
movsb
jg
ret
mov
inc
in
mov
stos
test
pop
inc
pop
bound
xor
imul
into
sub
mov
ret
dec
nop
xlat
hlt
sarl
data16
lret
daa
clc
lcall
scas
push
loop
sti
sahf
mov
mov
push
and
jnp
out
mov
fwait
std
fnstsw
ret
cmpsb
xor
pusha
popf
mov
push
dec
test
mov
or
mov
sub
xchg
adc
push
adc
mov
mov
test
mov
jg
shll
inc
xor
loope
sahf
in
push
mov
out
add
outsb
push
push
fs
xchg
repz
push
xor
pop
inc
lock
jne
int3
add
int3
loopne
pusha
addr16
push
int
mov
loopne
add
dec
insb
gs
mov
mov
xor
test
dec
ret
daa
mov
xor
push
aas
outsb
and
js
dec
aas
adc
iret
lods
in
lret
mov
je
ror
mov
pop
lods
gs
cmp
jno
int
leave
es
cld
repnz
stc
push
outsl
notl
jp
jns
mov
daa
jnp
inc
fisttps
outsb
xchg
mov
jbe
outsb
test
bound
mov
add
mov
mov
jl
push
xor
jle
lcall
lock
and
dec
mov
cmp
outsl
mov
dec
fcmovu
std
jnp
pushf
xlat
iret
mov
scas
leave
inc
push
jae
jge
push
mov
repz
jns
shrl
inc
and
imul
lods
add
push
dec
push
jbe
mov
popa
adc
les
cli
enter
lss
jns
pop
adc
int3
cmpsl
xlat
sbb
cli
stc
mov
ret
in
xor
cmp
push
jno
lahf
adc
sti
es
mov
sub
das
rcr
push
xchg
push
lret
sub
jp
popf
cmpsl
sub
mov
rcr
adc
repnz
sub
lds
mov
inc
stc
or
mov
jno
repnz
shll
cli
mov
rcrl
cmpb
xchg
jbe
js
inc
sahf
push
test
xor
ss
xor
out
mov
or
mov
mov
les
mov
xchg
pop
mov
xorb
jae
jbe
repz
pusha
bound
mov
insb
shrl
inc
mov
mov
mov
and
ret
lods
loopne
push
xchg
jo
scas
cld
mov
dec
sub
pop
sbb
rcrb
and
out
pop
xchg
and
imul
pop
mov
pop
iret
mov
lock
xor
jge
das
sub
out
fwait
out
xor
bndldx
sar
ret
pop
pop
pop
add
shlb
push
hlt
adc
dec
int
scas
ja
xchg
mov
pop
daa
mov
int3
hlt
push
dec
paddusw
aad
mov
push
sub
jae
movl
adc
push
psllq
xorl
gs
adc
pop
xchg
aaa
sar
jle
mov
lret
dec
xor
pop
outsl
inc
out
pop
test
cwtl
mov
cltd
loop
jp
shrb
loop
jmp
mov
mov
addr16
pop
dec
pushw
xorb
aas
inc
inc
jo
std
outsb
repnz
cmp
ret
jb
xor
lds
adc
jge
push
daa
push
outsb
xchg
jo
movsb
mov
and
cmp
scas
pop
jns
lock
add
fs
push
idivb
inc
out
dec
or
das
jecxz
rcr
jp
ffreep
adc
push
jecxz
ret
xchg
jbe
cmp
mov
sbb
pop
push
xchg
adc
mov
jne
jmp
add
insb
mov
cs
call
inc
call
stos
sbb
fstpt
fstpl
push
movsb
popf
add
cmp
mov
rclb
sub
adc
inc
adc
bnd
mov
sub
mov
and
or
adc
jle
jp
push
push
bound
movsl
adc
add
jmp
or
dec
clc
outsb
xorl
xchg
mov
mov
xor
xchg
xor
outsb
pop
mov
xor
dec
mov
cmp
daa
inc
mov
rorl
inc
das
or
pop
or
cltd
out
or
lods
mov
int3
rcll
jl
or
or
subl
dec
xchg
push
cli
sbb
leave
cmc
cmc
xlat
outsl
push
mov
lret
loope
xor
adc
fldt
push
adcl
mov
sarl
lcall
sub
push
pusha
dec
pop
cmp
dec
push
mov
push
or
jp
sub
je
loopne
jae
push
sub
sub
pop
sub
out
hlt
scas
cld
xor
adc
pop
out
cld
push
pop
sbb
fidivs
fcmove
push
pop
pop
repnz
pushf
mov
shlb
sarb
lds
xchg
ljmp
adc
push
xchg
mov
dec
mov
arpl
cmp
add
out
es
cmpsb
sbb
hlt
fists
or
xchg
lds
mov
xor
lea
fwait
fwait
addb
cli
leave
prefetch
or
xchg
add
cmp
imul
and
popa
jmp
xchg
sbb
cwtl
adc
mov
mov
lds
out
movsl
xlat
aaa
mov
subb
je
xor
stos
aaa
xchg
xchg
aam
pop
pop
dec
xchg
and
jp
sub
add
popa
jg
push
xchg
mov
fiaddl
aad
mov
notl
push
dec
pop
sbb
aas
xchg
pop
or
negb
inc
xchg
les
std
adc
inc
and
mov
notl
cmp
xchg
xchg
cmp
pop
and
fbstp
dec
mov
jmp
xchg
das
lds
jns
xor
and
mov
and
out
test
inc
aaa
out
test
clc
add
pop
data16
mov
scas
inc
stc
or
in
lahf
int
cmpsl
dec
ljmp
or
popf
push
out
add
mov
or
ffree
ja
sbb
fisttpl
fwait
cs
das
inc
xchg
xchg
pop
stos
mov
push
jne
adcl
hlt
scas
movsl
and
mov
mov
fisubs
ds
xchg
pop
das
test
loope
out
stos
data16
pop
jne
pop
fstps
mov
cs
sub
inc
mov
push
cmc
arpl
sbb
cmp
dec
clc
addr16
test
ficompl
orb
pop
pop
dec
decl
xor
imul
fs
xchg
sahf
pusha
xor
in
push
dec
cmp
pop
add
mov
arpl
ss
into
sbb
mov
push
mov
pushf
stos
ljmp
sub
cmp
sub
xchg
pusha
and
test
cmp
mov
sbb
leave
cmp
lcall
addr16
jns
xchg
push
out
mov
pop
insb
lods
insb
in
fiadds
into
pop
test
xchg
gs
push
and
shrb
fwait
data16
jo
stos
mov
icebp
mov
xchg
ds
and
insl
jmp
hlt
cmp
je
dec
jp
mov
sbb
rorb
push
cmp
shlb
dec
jp
mov
or
out
add
xchg
outsl
inc
je
push
and
cmpsl
fimuls
xlat
push
test
and
dec
stos
dec
nop
push
cmp
call
pop
ljmp
jge
sahf
mov
test
hlt
pushf
pop
cmc
jle
iret
test
aam
mov
notl
sub
sysenter
cmp
ja
insb
add
inc
ss
mov
inc
mov
add
pop
mov
clc
mov
fcoml
adc
sub
or
outsb
adc
into
and
xchg
movsb
jmp
fdivrs
addr16
ficoms
xchg
test
xchg
mov
repnz
pop
les
dec
dec
ds
and
shl
test
call
mov
iret
dec
jne
or
lea
imul
shll
or
add
fsubl
push
jns
push
ret
mov
push
repz
pop
xchg
push
push
dec
ret
mov
push
push
fsubs
in
push
movsl
in
in
and
sbb
xor
fnstenv
es
push
stos
cmp
mov
je
addr16
lret
and
arpl
sbb
cmp
push
add
add
xchg
inc
cwtl
or
pop
sub
addr16
sbb
in
push
sub
iret
mov
mov
out
fsubl
ret
lret
jp
call
mov
fbld
xchg
sahf
push
sbb
leave
push
jb
rcll
aas
cmpsl
jl
mov
repz
dec
mov
xchg
stos
inc
xchg
inc
ja
xor
mov
out
nop
in
cld
mov
les
data16
int3
fsubrp
jnp
les
call
jnp
fcos
aaa
aas
addr16
lret
test
xchg
std
pop
xor
fimull
inc
mov
notb
xchg
lea
nop
lods
mov
push
aas
xor
mov
xlat
dec
loop
xchg
and
inc
push
lret
pop
fwait
pop
loop
stos
daa
mov
lahf
adc
push
mov
cvtpi2ps
xchg
dec
imul
xchg
lret
scas
ds
and
out
lahf
aam
stos
out
mov
add
insb
insb
or
push
inc
lret
xchg
mov
xchg
hlt
jns
mov
push
lock
push
xor
pop
test
cmp
xorl
sub
mov
mov
mov
pop
inc
add
pop
aam
xor
mov
dec
aam
mov
mov
dec
notl
jns
mov
sbb
mov
inc
not
inc
sub
cmc
popf
in
jmp
icebp
adc
push
mov
repnz
or
add
lea
fisubrs
mov
mov
push
sbb
and
mov
xorb
cmp
lret
call
push
loopne
xlat
push
ficoms
push
jl
xchg
popa
ds
not
popa
sub
loopne
jns
pop
pop
jl
mov
and
mov
sub
movsb
cld
loopne
das
sti
push
insl
loop
gs
jl
out
mov
cld
inc
mov
add
daa
loope
insl
adc
out
cli
into
repz
mov
rolb
fsts
push
sbb
out
pop
lea
movsl
inc
push
dec
hlt
cmp
sub
push
dec
mov
fstpl
out
pusha
and
test
push
xchg
jne
mov
and
mov
push
pop
xor
or
notb
loope
sarb
lds
pop
and
dec
lahf
push
data16
cltd
loop
test
jo
and
sub
xchg
icebp
orb
dec
jae
adc
sahf
bound
and
dec
mov
mov
inc
dec
and
imul
and
lahf
shl
mov
repz
out
add
icebp
lcall
loopne
gs
sub
fs
inc
les
mov
inc
es
xchg
push
adc
aad
gs
out
cmp
jmp
leave
push
clc
cmc
and
ror
lea
fdivrs
mov
in
mov
lret
mov
bound
ja
and
mov
sub
test
imul
cmp
sbb
add
dec
test
test
mov
mov
jns
es
sub
inc
dec
push
sbb
mov
lcall
out
mov
stos
jns
sub
cld
jmp
sub
icebp
shll
and
xor
mov
fcmovnb
cmc
bound
lea
add
ja
jecxz
daa
inc
cltd
imul
xchg
mov
sub
sbb
cli
sub
es
jecxz
jns
das
push
mov
scas
imul
aas
stos
aad
fwait
loop
inc
imul
jge
icebp
dec
arpl
fcoms
testl
cmc
mov
mov
inc
mov
mov
xchg
inc
test
jp
rcr
xchg
inc
stc
lds
add
lret
cmp
sbb
pop
push
addr16
push
call
sbb
sub
xchg
mov
sub
add
cmp
sub
test
syscall
jmp
and
repz
lret
sbb
jbe
lret
fcmovne
pop
xchg
inc
cmp
lods
pop
push
mov
and
iret
sbb
mov
mov
or
decb
test
xor
clc
mov
mov
add
jge
push
pop
mov
xchg
adc
shr
mov
mov
push
insl
insb
cltd
inc
sbb
pop
xor
push
test
icebp
jmp
notl
pop
mov
ds
xor
cmp
push
xor
out
shrb
fidivrl
and
xor
into
stos
pop
mov
shll
test
push
fcmovu
adc
out
int
enter
sub
mov
int3
sti
rorl
add
ljmp
xchg
mov
test
ret
scas
pop
jo
or
push
adc
std
cmp
cmc
or
mov
mov
inc
aam
and
mov
ror
lret
das
add
stos
mov
sarl
cmpb
fmuls
stos
cli
cmpsb
adc
cmp
popa
dec
fdivrl
js
fwait
mov
lods
mov
test
pushf
jg
jecxz
loopne
loop
push
push
add
stos
mov
sbb
mov
lods
cmc
in
cld
aad
insb
cltd
adcb
scas
pushf
pop
negb
adcb
int
adc
sbb
js
cmp
pop
mov
add
mov
or
or
test
jp
ja
xlat
sbb
push
mov
xor
bound
push
mov
mov
es
andb
ds
das
aam
icebp
popa
mov
insl
mov
mov
xor
loop
lods
mov
xor
out
into
mov
movb
dec
dec
ss
and
stc
dec
mov
pushl
lret
push
out
dec
inc
insl
adc
lods
jge
insb
repz
stos
cmp
decl
shlb
scas
fwait
mov
and
and
test
cmpb
push
lea
jmp
stos
das
push
xor
and
add
insb
xchg
sub
shrl
pop
xchg
mov
inc
das
push
jns
shll
sbb
shr
clc
jle
xor
fcoml
outsl
shlb
pop
push
cltd
sahf
cmp
sahf
cmp
push
lock
mov
cmp
cs
ds
out
daa
pushf
inc
out
sti
inc
add
cmpsl
in
mov
pop
jg
mov
cmp
test
add
inc
scas
aam
aaa
test
clc
loope
mov
and
popa
mov
inc
xor
push
xor
xchg
jp
cmpsb
push
sbb
add
inc
outsb
cmpsb
pop
pop
int3
loop
test
lahf
sti
jmp
repnz
jns
sub
push
sbb
mov
push
dec
stc
push
add
jo
adc
sti
push
es
data16
js
js
jg
subl
dec
adc
mov
insl
fcompl
jns
jnp
xor
lea
xorb
mov
jbe
movsl
pusha
stc
mov
inc
test
cs
inc
popa
xchg
add
cs
nop
adcl
xchg
push
push
push
push
sub
inc
les
rcll
es
pop
das
sub
popf
loope
pop
ret
iret
fildl
adc
mov
arpl
dec
in
xor
adc
and
xchg
jb
pop
xchg
andl
fsubl
stos
or
cmp
cltd
adc
push
xchg
fisubrs
cmc
push
je
call
sub
test
inc
lds
dec
mov
subl
xchg
jl
pop
test
jae
dec
clc
movsb
and
insb
pop
jnp
fxch
xchg
pop
enter
cmp
repz
mov
addl
sub
daa
jns
sbb
mov
bound
mov
fbstp
and
test
jbe
and
sub
xor
cli
xor
mov
xchg
mov
clc
faddp
in
xchg
push
movaps
mov
icebp
cltd
push
les
cmp
gs
fsubl
mov
mov
add
das
push
or
xlat
jg
lret
inc
or
in
fdivr
gs
stos
jmp
int
mov
ror
in
pusha
and
jge
xchg
sti
mov
xlat
and
dec
pop
outsl
jge
aad
aaa
lds
dec
lock
into
fucomi
cmp
test
shll
xchg
insl
aam
inc
das
xchg
int
clc
mov
mov
xor
movsl
sarb
or
pusha
mov
add
addps
out
and
pop
inc
sti
and
push
aam
sbb
enter
inc
repnz
jns
aam
insl
push
repz
insl
ret
jae
out
fiadds
leave
les
xor
fisubl
push
push
dec
daa
mov
cmp
jb
pop
jle
ljmp
xchg
mov
adc
rcll
rcl
stos
and
lahf
sbb
ja
iret
mov
and
loope
sub
or
imul
or
sbb
popf
iret
or
jmp
jae
push
jbe
nop
jp
in
or
sti
fcompl
push
test
leave
xor
aam
cltd
and
shlb
lock
xor
iret
fs
dec
mov
add
ja
and
enter
sbb
adc
cli
mov
dec
lods
dec
leave
xchg
or
mov
cmc
jg
pop
repz
sub
aam
nop
into
sbb
imul
adc
sub
sub
inc
lcall
cmc
dec
jmp
fstpl
xorb
leave
fs
into
dec
push
std
into
rorl
xchg
pminsw
jno
adc
dec
and
jnp
inc
repz
adc
push
test
and
inc
pop
fildll
add
cmp
out
pop
or
data16
jo
insl
xchg
enter
xor
xchg
or
pop
out
aad
fdivs
add
mov
or
fcmovb
faddl
push
mov
sub
int
xchg
jg
sub
cmpsb
lret
fcompl
data16
lock
pop
or
call
jg
outsl
push
dec
loopne
xchg
inc
fstl
std
mov
divb
push
mov
popf
lods
or
test
sub
rolb
repnz
sub
sarb
outsb
push
js
inc
inc
push
mov
out
mov
mov
pusha
inc
xchg
test
and
push
jmp
sti
adc
lods
sahf
fcoml
dec
mov
adc
or
data16
inc
movsl
adc
xor
div
dec
mov
or
in
add
shrb
inc
xchg
sahf
xor
sahf
dec
sbb
leave
jle
mov
imul
faddp
jle
dec
xchg
gs
lods
mov
loop
pop
movsl
nop
outsb
movsb
inc
popa
xor
xor
or
and
pushl
push
loope,pt
aam
insl
push
lea
or
aas
and
push
or
or
jecxz
fidivrs
inc
dec
add
clc
sub
dec
arpl
mov
sub
xor
or
shrl
incl
cltd
cli
bound
in
std
mov
shlb
jmp
mov
sbb
pop
mov
repz
xor
imul
cmp
xchg
push
test
leave
inc
adc
addr16
pop
test
test
pop
pusha
mov
daa
add
jmp
xchg
push
gs
fwait
and
xchg
hlt
pop
dec
in
mov
sti
xchg
sbb
mov
in
xchg
inc
test
in
mov
outsl
sbb
gs
ds
pop
push
dec
lock
cmp
in
pushf
dec
cmp
adc
test
mov
mov
sbb
and
jmp
cmp
loope
and
sub
gs
xchg
mov
stos
jecxz
mov
xchg
push
pusha
cmp
mov
push
mov
rclw
outsl
xchg
dec
push
imul
mov
ret
push
or
pop
fwait
ror
aam
scas
sbb
call
adc
sbb
pop
in
cltd
xor
xor
repnz
cli
dec
sahf
fstpl
mov
xchg
cmpsl
and
sub
mov
pop
pop
dec
in
pop
sbb
into
cmp
mov
dec
les
inc
je
xchg
xlat
sbb
jp
push
add
adc
enter
mov
push
cwtl
cmpsb
jno
mov
repnz
mov
cltd
mov
cmc
loop
popf
cwtl
sti
or
lcall
xchg
xor
inc
dec
mov
test
sbb
add
push
or
test
push
repnz
jb
out
lcall
mov
test
fmuls
dec
sbb
imul
leave
mov
inc
notl
ds
imul
rcrl
inc
mov
sbb
push
jle
add
loope
std
add
sbb
movsl
into
pusha
jl
dec
sbb
add
loope
dec
lods
push
loope
pop
adc
fwait
cli
fs
mov
jle
sub
aaa
outsl
adc
mov
xchg
js
in
int3
lea
das
lods
sbb
fmul
add
inc
icebp
mov
mov
push
fcoml
mov
pop
mov
mov
jne
sbb
jg
inc
push
mov
push
js
mov
mov
sahf
ljmp
movsb
sub
jge
xchg
mov
fdivrp
fnstcw
cmc
jmp
push
fsts
inc
in
jecxz
mov
popf
cmp
es
repz
sbb
or
push
scas
rol
xchg
fmul
call
dec
adc
loopne
movsl
or
xchg
inc
and
jle
mov
mov
mov
push
mov
scas
in
in
adc
push
mov
sub
out
pushf
in
movsl
add
out
dec
fnstsw
or
into
test
dec
xchg
adc
add
jo
testb
nop
aad
addb
push
das
cmpsb
inc
daa
mov
inc
sub
dec
test
out
mov
jmp
repnz
jle
mov
mov
rcrl
sub
repz
int3
jl
lods
jne
into
icebp
cs
or
pop
sub
outsl
or
adc
adc
sbb
shufps
mov
xor
ss
sahf
mov
mov
aam
cmc
adc
insl
adc
rcrb
scas
jge
mov
imul
insl
test
cltd
cmpsl
in
fimull
xor
push
int3
xchg
icebp
jle
dec
dec
loope
rol
int3
clc
dec
xor
in
or
ja
sub
fnstenv
and
std
push
add
loopne
xchg
int
jmp
and
int
cmp
push
ljmp
or
dec
push
jbe
adc
aam
inc
inc
nop
test
cli
or
sahf
and
testb
std
xlat
sbb
jo
addb
or
fisubl
pop
aam
inc
add
inc
jp
scas
hlt
cmp
repnz
shl
idivb
repnz
shl
jge
dec
pop
or
sbb
outsb
adc
cmp
lock
scas
mov
adc
stc
test
mov
mov
out
xchg
loop
mov
cmp
into
popf
out
push
pushf
cmp
pop
xchg
out
or
cs
loope
or
adc
add
xor
dec
add
xor
pop
insb
inc
jno
inc
out
es
fimull
outsl
hlt
adc
mov
mov
cmpsb
outsb
sub
arpl
push
icebp
or
std
arpl
das
pop
add
sub
ud1
sbb
jb
not
insl
add
or
or
pop
mov
xchg
fists
pushf
pop
divb
inc
in
or
adc
gs
cli
jno
lret
adc
cmc
pop
std
sub
adc
push
push
imul
cmp
mov
aaa
cmp
jns
pop
daa
mov
sub
and
shlb
push
dec
mov
pop
sbb
or
out
pop
lahf
or
mov
les
sub
daa
and
pusha
add
iret
sbb
push
test
sbb
adc
fildl
inc
dec
xchg
lret
mov
inc
fwait
cmp
mov
out
add
pop
inc
in
pop
jne
int
dec
nop
fstpt
dec
call
fimuls
jg
sub
mov
imull
xchg
xor
dec
stos
mov
cltd
movsl
in
push
pop
rcrb
sbb
sbb
jns
shlb
jp
fcoml
gs
push
push
sbb
loop
loope
iret
sbb
cwtl
jge
jbe
pop
scas
scas
insl
cld
inc
cmp
inc
in
enter
scas
and
cmp
loopne
insl
adcb
cmp
jl
or
loope
fisubrs
sahf
sti
lock
xlat
or
lock
sub
mov
cld
nop
dec
push
xor
pushl
sub
sbb
mov
sbb
sub
mov
ss
adc
mul
xchg
aaa
lcall
push
xor
das
sub
imul
inc
lock
cs
and
and
loopne
lcall
mov
aaa
scas
testl
scas
xlat
xor
pop
push
xorb
enter
rcrl
in
xchg
push
shrb
sbb
cltd
push
pop
lea
call
stos
xor
xlat
xor
dec
leave
cmp
pop
mov
push
push
adc
lcall
cmp
jae
imul
lret
or
scas
jbe
lock
adcb
movsb
push
aad
inc
in
xchg
testb
adc
sbb
pop
cmp
and
out
int3
or
call
or
out
and
mov
xchg
push
cltd
popa
add
inc
cs
adc
xor
sbbl
xchg
add
sbb
dec
in
jb
aas
mov
xchg
dec
ljmp
iret
or
in
inc
das
or
pop
fisttpl
and
jmp
adc
mov
fnstsw
fisubs
mov
and
ret
sbb
mov
shll
push
cmc
les
push
iret
daa
adc
cmp
dec
dec
jp
inc
lahf
jno
test
cmp
mov
dec
or
sub
aad
or
sub
aad
shlb
mov
ss
inc
mov
lcall
shll
subb
shlb
repz
repz
mov
xchg
rcrl
mov
loop
mov
jno
ja
inc
sar
fwait
push
sub
out
rorb
and
jo
les
lcall
sti
and
nop
icebp
fldcw
adc
mov
cmpsl
js
push
movsl
xchg
out
fnop
or
aas
in
or
mov
add
inc
or
cmp
int3
push
push
pop
xor
sub
mov
and
mov
lea
int
and
or
clc
push
test
aad
outsb
hlt
add
inc
mov
and
dec
test
jmp
mov
cld
cmp
inc
mov
mov
mov
jb
lea
xor
or
pop
mov
clc
lea
adc
push
fwait
push
call
xchg
cmp
clc
xlat
mov
cld
dec
xchg
daa
push
mov
inc
sub
fwait
mov
xchg
xchg
jb
mov
jl
push
je
push
add
mov
inc
cmp
testb
dec
push
pop
sub
call
loope
icebp
push
xchg
add
pop
push
inc
test
pop
les
mov
sbb
adc
test
adc
push
mov
add
sbb
ret
fdivrl
push
push
pop
outsl
sub
push
dec
int3
mov
xor
daa
and
lock
shrb
mov
les
dec
outsl
and
outsl
pushf
xor
lock
mov
lahf
mov
adc
or
dec
mov
cld
ds
xchg
cld
mov
mov
pop
ret
addr16
insb
xor
cmpsl
mov
sbb
pushl
dec
dec
and
jne
mov
jo
mov
pop
add
std
out
cmp
xor
push
adc
mov
sbb
fidivrs
les
scas
out
cmp
or
stos
jnp
dec
add
lods
cmc
in
push
faddl
xor
xlat
movsb
sub
fbstp
iret
aad
fcomps
cwtl
int
into
adc
xchg
fadds
in
and
inc
ss
addr16
lret
call
lea
sub
dec
mov
inc
cwtl
pop
push
testb
inc
insb
cmc
push
inc
inc
inc
ja
xchg
jns
sbb
xor
cmpsl
nop
xor
mov
adc
cmpb
nop
bound
mov
mov
jmp
cli
jo
aas
movsl
mov
mov
scas
or
pop
aas
shll
jl
push
mov
add
outsl
ret
jl
aas
and
mov
add
sti
insl
pusha
jbe
xlat
loopne
lods
outsl
sub
mov
inc
mull
jp
mov
lock
ljmp
fadds
xlat
daa
ds
pop
sbbl
mov
jne
arpl
incl
inc
mov
push
addr16
aaa
js
push
mov
in
add
cmp
loop
jne
xlat
mov
mov
xchg
push
popf
push
mov
mov
pop
test
push
sbb
jne,pn
dec
sbb
out
jo
fidivrs
fcomip
cmp
out
push
mov
cld
movsb
pop
mov
inc
xor
jge
scas
insb
pop
pop
pushf
pop
sbb
icebp
in
cmp
fs
inc
pop
inc
mov
lock
negb
je
jp
rdpmc
and
test
cmp
xchg
outsb
sub
adc
fwait
ds
or
adcb
sub
ds
xor
xchg
xchg
cld
mov
out
imul
push
popa
push
sbb
adc
xor
dec
mov
out
sub
scas
pop
cmp
lods
sahf
xchg
mov
hlt
pxor
mov
jge
popa
cltd
cli
cwtl
in
loope
test
push
ds
jno
inc
jns
ret
insl
scas
test
in
mov
iret
cmp
enter
sbbl
orl
adc
xor
in
add
pop
sub
js
leave
mov
jae
in
out
adc
mov
rclb
push
movsl
pop
xchg
jnp
sar
fdivl
shrl
fidivl
lods
shlb
std
mov
jecxz
sti
lea
jg
sarb
mov
mov
push
imul
test
pop
lock
mov
pop
and
sub
sbb
xlat
js
add
mov
jo
push
inc
cmc
out
int3
jno
adcl
pop
imul
sbb
daa
mov
lahf
nop
and
popf
push
das
xchg
cmp
dec
mov
inc
subb
mov
push
mov
cmc
dec
mov
xchg
cmp
mov
pushf
js
hlt
daa
xchg
adcl
gs
repnz
ja
bound
jmp
add
xor
mov
xor
pop
bound
popa
mov
inc
sub
cwtl
dec
sbb
jb
dec
mov
push
inc
adc
cmpsl
lret
xor
inc
jb
int3
mov
es
inc
in
jb
popf
call
pop
mov
lods
cmp
jmp
in
sbb
cltd
repnz
mov
lret
fistpl
add
sub
faddp
insb
jge
ret
push
ja
decl
in
ds
into
stc
std
push
or
jo
movsb
sbb
cmc
push
popf
fstps
pushf
xor
cmp
jae
mov
mov
int3
fcompl
mov
add
inc
mov
loop
push
std
incb
arpl
mov
popf
push
dec
out
pop
outsb
inc
push
movsl
into
dec
lcall
xor
out
mov
inc
mov
xchg
inc
xchg
cwtl
xor
addb
insb
mov
jbe
dec
xor
je
xor
pushf
scas
mov
aas
sbb
andl
or
push
scas
lcall
xorb
push
and
fucomip
cmpsb
or
test
jmp
inc
lods
ret
push
sti
cmpsl
pop
push
push
xor
adc
pop
push
xor
xor
and
imul
insl
mov
icebp
jmp
dec
test
add
adc
subl
pop
sbb
ljmp
mov
stos
xor
js
test
cmp
xchg
movsb
orl
or
add
cmpsl
sbb
sub
insl
sti
lret
imul
jne
fmuls
jmp
mov
sbb
ficompl
test
dec
loope
push
mov
mov
stc
pop
in
push
pop
test
lods
cmpsl
std
cmpsl
ret
lock
pop
cmpsl
fldcw
mov
clc
cli
mov
xchg
xchg
add
aad
mov
sub
daa
inc
jle
adc
stos
dec
cld
ret
push
pop
sbb
inc
stos
jmp
lods
icebp
int3
sbb
inc
pop
imul
js
loope
jl
pop
loope
pop
jl
loope
xchg
pop
aaa
jp
leave
sub
dec
lea
push
jne
loop
mov
or
jg
test
xchg
loope
dec
xor
inc
dec
xchg
mov
sbb
popa
ds
daa
sbb
push
call
nop
xchg
insl
xchg
adc
scas
iret
jne
pop
test
lret
aad
in
neg
addb
sahf
lret
cmp
sbb
jmp
cmpsl
data16
inc
int3
out
push
mov
and
je
out
fcmovu
ljmp
xor
pop
add
xlat
sub
and
push
imul
sbb
dec
add
inc
sbb
popa
xchg
push
jnp
fstl
in
frstor
pop
sbb
xchg
hlt
ja
sbb
and
stos
jp
out
mov
mov
and
dec
mov
cmpsb
jae
aad
repnz
push
push
xchg
ret
fwait
in
ret
add
aad
pop
insb
sub
or
inc
mov
sbb
adc
pop
mov
dec
out
je
add
pop
fsubrs
les
cld
dec
aaa
sbb
aas
cmp
outsl
test
push
jb
xorl
xchg
pop
sub
mov
test
pusha
jae
dec
ret
inc
cmp
dec
out
insb
cmp
sbb
std
lret
std
pop
sahf
lret
jmp
arpl
arpl
xchg
int
jno
pop
and
add
rorb
jb
dec
test
dec
inc
loope
mov
xor
loopne
lock
pop
out
arpl
add
fildll
inc
ret
push
or
mov
lret
ret
sbb
adc
adc
or
mov
push
mov
ret
pushf
and
cmp
lahf
adc
or
xorl
mov
ds
pushf
jae
mov
push
jne
or
inc
xor
js
repz
jmp
mov
and
test
inc
cli
inc
jo
ja
push
dec
and
dec
sbbb
jo
add
xchg
push
scas
scas
imul
je
xacquire
pop
imul
arpl
outsl
xor
xchg
mov
imul
loop
out
lock
nop
fs
int3
nop
mov
js
popf
mov
icebp
push
in
data16
sbb
jno
in
nop
inc
sbb
xor
jne
cli
push
sub
insl
das
cmp
pushf
shlb
dec
aas
addr16
ss
cld
popa
popa
dec
out
xor
clc
cmpb
cwtl
addr16
jno
test
gs
or
jnp
cmpsl
int3
dec
cs
imul
xchg
xchg
xor
or
or
or
movsb
sti
xchg
jno
push
hlt
push
or
mov
popf
imul
lcall
ja
push
sub
mov
xchg
add
push
jb
adc
icebp
xor
stos
test
imull
mov
addl
stos
mov
aaa
xor
cmc
mov
ret
pop
outsl
sub
or
das
test
scas
fists
add
or
push
mov
cmp
sarw
popf
cmpsl
sbb
sub
sub
xchg
repz
rclb
movsb
sbb
cwtl
push
push
jo
sub
xor
aaa
outsb
aaa
dec
lods
jns
rclb
fwait
scas
mov
ja
jb
pop
aas
enter
into
xor
mov
xchg
push
lahf
cmp
mov
out
sbb
cmp
fmull
test
ljmp
jbe
mov
sbb
sub
adc
notl
test
adc
loopne
xor
push
xchg
cmp
pop
or
jmp
into
mov
inc
insl
movsl
leave
mov
repnz
cmc
jb
daa
jp
mov
fistl
mov
out
pop
mov
daa
and
mov
sub
mov
in
sbbl
fwait
push
mov
pop
js
mov
clc
or
mov
in
inc
fildl
mov
sti
xor
bound
adc
rcrb
mov
in
ret
and
sub
stos
outsl
push
mov
les
dec
inc
dec
call
stos
mov
bound
mov
add
sub
cmp
cmc
outsb
faddl
stos
pop
adc
ss
lods
add
dec
ror
adc
addr16
jmp
mov
aam
inc
stc
sub
push
mov
loop
jmp
pop
push
dec
mov
mov
sub
outsl
add
aas
mov
or
xor
mov
mov
pop
out
mov
add
pop
push
mov
icebp
and
xlat
pusha
mov
xchg
mov
negb
scas
test
test
mov
subb
push
mov
push
sub
dec
push
mov
call
push
xor
lahf
fstl
and
lea
into
sbb
pop
inc
and
and
or
push
sbb
lock
add
ret
int3
mov
fistpll
adcl
cld
insl
cli
mov
xchg
arpl
dec
and
add
int3
mov
sub
pop
adc
fs
and
jecxz
or
xchg
xchg
insb
cmp
daa
push
jae
xchg
inc
rolb
clc
cltd
jno
inc
in
dec
sub
inc
pop
movsb
adc
push
mov
push
adc
stos
lahf
pop
adcl
inc
xchg
movsb
int
cmp
lea
xor
xchg
pop
les
icebp
ret
mov
int3
jmp
daa
xor
shl
jae
shr
incb
xchg
ja
jecxz
rclb
frstor
mov
dec
inc
mov
mov
aaa
mov
xor
pop
into
push
es
inc
rep
stos
incb
clc
cmp
movsb
adc
cmp
mov
ja
and
lods
mov
in
pop
cmp
jbe
shl
les
inc
jno
jp
loope
pop
mov
push
fchs
mov
stos
mov
or
mov
leave
or
adc
mov
mov
int
inc
adc
cmp
xchg
adc
sub
cmc
je
jb
cmp
nop
stos
andl
push
imulb
in
ficompl
xchg
mov
outsb
mov
xchg
inc
cmp
xchg
lods
insb
repz
add
sbb
xor
es
fnsave
mov
ljmp
push
dec
and
push
imul
fsubrs
push
repz
mov
cmp
adc
xchg
dec
loope
aas
inc
xor
iret
hlt
sbb
or
jb
fcoms
push
inc
jp
hlt
pop
roll
jnp
mov
fistl
mov
daa
push
mov
ss
sbb
in
pop
xor
stos
loop
pop
fwait
xchg
jl
jge
mov
scas
movsb
out
push
xchg
jae
roll
cs
nop
mov
sub
insb
and
nop
ja
popl
jnp
and
scas
lds
pop
lods
and
push
xchg
sub
or
pop
fdivl
xchg
cmp
cmp
inc
stos
stos
lcall
adc
xor
and
pushf
pusha
int3
fstpl
test
fwait
es
arpl
in
adc
xchg
std
xor
das
push
cwtl
out
jg
xchg
inc
mov
inc
mov
and
xor
out
ret
add
decb
fdivl
addb
and
mov
cld
loopne
xchg
outsl
fisubrl
cmp
aas
sbb
dec
cltd
out
shll
faddl
mov
add
stc
xchg
cmpsb
cmp
iret
cmp
out
xor
cs
pop
sbb
je
ret
roll
sbb
sub
sbb
jns
inc
and
insl
ds
cmpsl
cltd
and
push
in
or
cmpsb
jp
pop
out
xchg
ja
xchg
sbb
push
scas
sbb
and
cmp
iret
pop
cwtl
push
out
add
jecxz
mov
or
es
mov
ljmp
mov
adc
push
mov
int
sti
pop
orl
hlt
gs
int
call
pop
fildll
sahf
leave
push
jne
sbb
dec
jecxz
cmp
mov
insl
pusha
xchg
insl
mov
lahf
lahf
pop
xor
mov
mov
mov
push
mov
into
pop
pop
fs
jns
jne
out
out
test
and
das
in
xor
push
nop
test
lods
cmp
test
mov
stos
xor
or
jmp
repz
xor
mov
fs
in
ret
push
fwait
jbe
pop
mov
rclb
push
fwait
jnp
mov
pop
pusha
cltd
mov
cmp
nop
jbe
roll
dec
scas
fcoms
inc
push
xchg
js
dec
enter
sbb
jmp
shl
add
jg
into
inc
int
sub
add
scas
xor
data16
clc
es
filds
xchg
inc
js
mov
sbb
jae
popf
push
int3
movsb
nop
sbb
outsb
add
bound
or
lods
mov
sahf
iret
call
adc
insl
mov
mov
inc
pop
cmp
add
xor
or
loope
dec
lds
inc
jbe
add
pop
lds
xor
add
pop
push
orb
and
lock
mov
mov
pop
push
stos
int
mov
inc
sub
or
test
shlb
push
mov
in
xor
mov
sbb
mov
sbbl
mov
lods
pop
repz
mov
xor
xchg
push
push
loope
xor
out
lret
adc
sub
dec
mov
jo
sbb
push
mov
xchg
and
lods
test
gs
mov
jecxz
fdivl
xchg
mov
sbb
clc
pop
push
or
test
dec
inc
popa
or
repnz
hlt
mov
push
hlt
loopne
mov
ljmp
je
or
mov
jle
int3
push
out
pop
fxch
iret
jno
lret
lea
nop
inc
xchg
stos
and
jl
les
push
fbstp
sbb
sub
and
mov
test
pop
ret
std
mov
mov
fwait
mov
sub
push
iret
mov
xchg
pop
xchg
stc
dec
xchg
pop
out
aad
xor
pop
cmp
or
cwtl
jge
jg
push
adc
jecxz
sub
sub
xchg
push
jns
clc
mov
jp
xchg
pop
or
orb
adc
fildll
push
xor
jecxz
xchg
xchg
xchg
jns
shll
adc
mov
adc
sub
mov
sub
push
cmpb
xor
rorb
cld
out
pop
and
inc
setbe
or
sahf
lods
dec
inc
addb
jge
ja
lret
test
lods
push
scas
jno
lret
pop
pop
roll
mov
lret
movsl
sub
lods
sahf
pop
mov
imul
cmpsb
or
jb
lods
test
add
mov
mov
std
inc
sbb
fucomi
ss
add
fs
leave
adc
adc
outsb
test
out
jae
pop
lahf
test
shl
repz
dec
adcb
mov
adc
out
movsb
jg
cmp
pushf
stc
outsb
dec
jmp
push
mov
cld
add
mov
jl
stos
int
test
pop
in
and
std
sbb
xchg
cltd
xchg
pop
pop
adc
test
fwait
mov
pop
mov
inc
sbb
inc
mov
jg
hlt
add
out
pushf
mov
enter
push
test
je
pop
or
out
pop
xor
jg
sub
push
sti
repnz
addr16
fs
fsubs
movsl
pushf
test
xchg
adc
imul
inc
js
jo
adc
rep
ror
mov
pop
fdivl
dec
dec
idivl
lret
popa
or
and
or
push
into
aad
inc
ficomps
sub
pop
cmp
push
fwait
icebp
and
imul
idivl
mov
push
mov
stos
mov
sub
push
test
sti
cltd
jl
loopne
mov
jb
lret
in
out
jb
sub
xchg
lds
sbb
inc
jmp
iret
sbb
dec
aad
arpl
add
ficompl
daa
test
cld
lret
iret
xchg
sub
xor
or
outsl
push
mov
add
lcall
inc
xchg
push
dec
pop
filds
xor
jbe
pop
sarb
fwait
xchg
stos
arpl
jle
addr16
iret
xor
push
incb
inc
les
movsb
xchg
cmp
inc
mov
stos
test
jg
loope
inc
mov
add
xchg
bound
inc
das
imul
mov
xchg
add
add
xor
adc
movsl
shlb
adcb
js
xor
push
das
xchg
xchg
push
jo
mov
icebp
push
pop
pushl
les
pop
fidivrs
jmp
jmp
outsl
test
clc
lcall
adc
jns
aad
mov
aaa
cmpsb
mov
stos
xchg
shl
insb
mov
fwait
push
cli
movsb
pop
test
mov
or
and
rorb
iret
sarl
push
cmpsl
inc
popf
pop
fstpt
push
imulb
ja
setne
movsl
adc
inc
xchg
xor
inc
std
popf
jmp
mov
jno
pop
imul
push
jb
jp
call
aaa
mov
sbb
aam
je
xchg
pop
in
sub
das
js
jecxz
mov
inc
cmp
js
add
push
into
je
mov
push
movsb
pop
pop
and
divb
in
pop
cwtl
neg
push
sub
push
jp
jbe
mov
xchg
xchg
mov
stos
fistl
je
fwait
xor
mov
das
lds
lret
mov
or
sub
push
jge
iret
mov
sbb
clc
in
fnstsw
adc
mov
adc
or
stos
or
sub
iret
popl
nop
pop
daa
mov
lock
in
arpl
dec
and
xchg
hlt
flds
pop
pop
lods
dec
arpl
xor
pop
or
push
add
nop
clc
or
mov
push
or
pop
iret
test
into
lahf
sti
sub
stos
int
cmpsb
fiaddl
imul
lock
or
ret
push
popa
mov
cmp
jns
in
les
add
xchg
jge,pn
and
xlat
adcb
cmc
and
xor
or
imul
loope
adc
int3
rclb
jl
pop
mov
int3
out
sub
pop
jmp
cld
ds
scas
lock
sbb
pcmpeqd
push
dec
ret
mov
inc
and
inc
and
loopne
jne
scas
lret
aas
stc
cwtl
add
xchg
mov
adc
adc
inc
nop
mov
sbb
fldl
sub
dec
mov
xor
jle
out
sbb
and
xchg
cmp
or
subl
mov
xchg
arpl
mov
out
ret
out
sahf
mov
stos
jns
pop
cmp
and
and
cmp
dec
repnz
inc
aad
icebp
mov
and
adc
lcall
nop
enter
or
mov
jbe
cmp
dec
mov
cmpsb
cmc
pop
inc
sub
mov
cmc
in
mov
inc
inc
scas
mov
fnstsw
icebp
aad
xorb
imul
gs
aad
push
add
push
mov
pop
mov
sbb
jecxz
mov
in
push
insb
fsubrl
js
push
out
out
push
pop
xchg
pop
iret
loopne
cwtl
mov
sar
jmp
add
mov
mov
xor
or
cmp
movsl
idiv
sarl
rorl
lods
mov
shll
sbb
adcl
fstl
repnz
add
jb
mov
jbe
fwait
mov
sub
xor
xchg
das
out
push
lods
out
imulb
sbb
shlb
scas
jae
cmp
push
push
mov
lds
inc
loopew
in
into
pusha
sbb
and
insl
in
aas
adc
cwtl
cmp
in
xchg
sbb
dec
adc
jmp
cmp
pusha
fcompl
pop
ja
cs
jbe
inc
jns
mov
or
dec
aaa
xchg
fisubrl
xor
mov
loope
test
stos
mov
sub
repnz
fsubr
loop
inc
adc
cmp
fldcw
xor
pop
call
or
jle
jno
int
inc
sbb
je
aas
mov
movsb
stos
cmc
stc
sub
and
lods
dec
lea
push
jno
jmp
mov
xchg
mov
test
mov
aas
pop
add
repnz
sub
adc
adc
fildl
pop
fcompl
outsb
int3
xchg
test
call
lds
adcl
ss
aad
outsb
js
push
je
add
push
xchg
loope
out
negb
add
stos
push
in
mov
fldenv
pop
lods
repnz
xlat
int3
sbb
ljmp
lods
in
das
mov
push
dec
inc
out
in
test
xchg
pop
leave
sbb
stc
fwait
push
jle
or
enter
and
add
push
xchg
test
jl
out
test
xchg
sbb
loop
cli
lcall
sbb
out
xchg
adc
fsubrl
ret
sub
out
mov
adc
jmp
test
lea
pusha
dec
cs
pop
aam
pop
out
mov
stos
movsl
mov
mov
scas
xchg
lods
hlt
mov
test
push
dec
jbe
sbb
jb
out
pop
dec
pop
popa
repnz
ret
popa
lods
push
mov
jmp
mov
test
xchg
test
xor
hlt
xorl
dec
es
rcrb
insb
fsubs
sub
pop
jb
stos
sub
filds
or
insl
inc
out
cmc
adc
push
sub
filds
adc
push
add
push
in
push
stc
mov
sub
xor
mov
push
jo
negl
push
test
jbe
test
mov
cltd
xor
gs
sbb
push
mov
add
cmpl
sbb
add
push
iret
sbb
imul
jge
mov
xchg
add
sar
loopne
lcall
aad
lret
ret
adc
pushf
in
out
adc
mov
pop
add
jb
lea
ret
pop
inc
xlat
pusha
sub
mov
jl
dec
cmp
pop
cmp
data16
lret
push
inc
xor
cli
arpl
cs
jecxz
ljmp
sub
addr16
mov
test
ds
push
mov
icebp
movsb
push
mov
mov
jno
loopne
push
inc
adc
xor
popf
pop
mov
pusha
stos
fsubr
test
xchg
jne
popf
push
stc
scas
cmp
mov
inc
fidivl
divb
pop
adcb
int
fmul
mov
jg
imul
fsubs
dec
jp
cmp
test
sti
mov
push
ljmp
push
add
rcll
xchg
pop
xchg
rcrl
push
push
icebp
or
cli
lock
dec
inc
repnz
cmp
push
bound
rolb
jmp
pushf
jns
and
aam
mov
fldenv
sub
push
or
xor
cmp
sbb
loopne
and
dec
mov
inc
aas
enter
test
push
xor
jp
shll
mov
ja
pop
mov
cmpsl
mov
movsb
outsl
sbb
adc
test
and
push
cmp
lea
testb
mov
mov
imul
bound
movsb
daa
fisubl
or
add
ja
lods
sbb
arpl
repz
imulb
xchg
jns
xor
and
movsb
and
in
nop
out
inc
scas
cmpsl
stos
je
pushf
into
lods
fisttpll
mov
jle
or
test
xchg
scas
push
dec
or
sbb
cmp
fdivrs
lds
lea
sub
xor
aad
jb
pushf
xchg
inc
cmp
popf
jmp
or
cltd
lahf
cmp
lods
movsl
pop
hlt
aas
negl
das
fwait
pop
js
cmp
mov
push
mov
mov
ficomps
ds
fcompp
dec
jge
adc
jno
cmc
dec
shll
mov
dec
cmp
dec
mov
mov
mov
sbb
mov
cmp
lcall
outsl
incl
pop
pushf
pop
dec
out
movsb
repnz
adc
mov
clc
mov
push
sub
jno
and
sti
xor
push
pop
push
insl
ret
frstor
clc
or
jl
add
fcmove
daa
gs
out
and
push
jae
int
or
lods
jle
std
jge
jle
adc
test
jne
cmp
movb
mov
in
sbb
and
call
rclb
data16
test
out
inc
int
cld
cwtl
test
and
popa
jge
adc
fcmove
mov
pop
ret
sbb
outsb
inc
lods
lret
dec
dec
sbb
push
jo
mov
xchg
ja
push
cwtl
mov
inc
mov
in
jge
divb
lcall
cmpsb
aas
mov
insb
fldenv
in
jge
add
jg
das
cmp
push
shlb
out
out
cmp
out
sub
mov
mov
sahf
jecxz
ret
push
insl
and
push
mov
pop
xor
push
clc
pop
incl
ret
mov
sbb
pop
mov
in
pusha
xchg
fwait
add
sub
mov
bound
jmp
cmp
jne
jle
lahf
cmc
push
ljmp
mov
mov
adc
andb
loopne
mov
lret
or
mov
mov
cmp
inc
adc
stc
jb
arpl
and
rclb
jns
gs
jmp
gs
enter
cmp
or
scas
or
in
repz
lahf
daa
xchg
pop
in
shrl
lcall
cmp
cltd
jo
cmpsl
push
or
lcall
dec
pop
insl
call
adc
arpl
stc
cmp
ret
aas
cmpb
fsubl
adc
jge
leave
stc
cmp
bound
jecxz
dec
stos
cmc
adc
arpl
addr16
int
and
dec
fdiv
insl
sbbl
add
ret
paddd
movsb
movsl
or
aas
ret
hlt
movlps
arpl
sub
inc
jmp
mov
jnp
mov
daa
shl
out
adc
jae
lods
dec
fisubrl
cwtl
in
jecxz,pt
cli
mov
cmc
xlat
dec
xor
cmp
loopne
inc
pop
add
scas
mov
loopne
push
aam
mov
decl
pop
xchg
xchg
out
imul
lods
dec
cmp
cs
test
adc
add
imull
aas
pushf
fstl
imul
enter
and
in
sub
mov
inc
sarb
push
mov
push
pop
pop
mov
xchg
int
lods
jae
movsb
mov
mov
cli
out
mov
add
sarl
and
shl
jbe
jg
cltd
fwait
sti
push
lods
jecxz
inc
loope
sub
lods
mov
je
repz
movsb
cmpsb
inc
mov
sub
ret
in
sub
inc
cld
test
cli
pop
xor
decb
dec
dec
mov
add
cs
loopne
jle
sub
inc
dec
test
cltd
mov
add
gs
dec
or
lcall
addr16
dec
imul
scas
pop
pusha
lcall
call
subl
mov
loopne
popf
ficomps
mov
ja
test
popf
cs
sti
fiaddl
inc
adc
repnz
or
stos
negb
sub
mov
and
clc
and
insb
clc
push
fbstp
int3
cmpb
cmp
sub
dec
es
push
xor
es
in
xor
ljmp
hlt
xor
test
lret
lods
pop
sbb
aas
leave
cwtl
sub
cmpsb
push
in
jle
test
repnz
adc
imul
xchg
roll
in
scas
fisubrl
out
pop
mov
mov
push
dec
pop
jge
adc
out
xchg
dec
iret
imul
or
movsb
filds
aam
addr16
movsb
sub
xlat
daa
mov
jecxz
xlat
add
out
mov
sub
or
mull
test
pop
mov
popa
jbe
mov
sbb
and
push
xlat
push
xchg
in
roll
jbe
jg
es
jns
xchg
push
sbb
xor
dec
frstor
dec
cltd
sbb
cmp
or
push
into
jne
inc
jl
fisttpl
sub
mov
dec
cmp
hlt
mov
cmc
and
cwtl
outsb
out
fldcw
push
xor
pop
push
add
adc
pop
fiadds
mov
ljmp
imul
jno
add
cmc
inc
pop
clc
test
xor
and
dec
aas
lea
xor
xor
pop
mov
xchg
jb
dec
lock
call
les
paddsb
dec
jbe
out
mov
icebp
inc
rcl
cs
mov
and
dec
sub
pop
outsl
dec
jge
xor
mov
imul
in
shlb
daa
inc
scas
call
loopne
add
imul
lds
outsl
cmp
xchg
testl
icebp
or
xchg
push
push
sub
imul
icebp
in
movsb
adc
scas
arpl
fbld
adc
dec
lret
movsb
and
jecxz
jmp
out
xchg
sbb
ss
xchg
std
in
sub
cli
dec
push
push
loop
mov
push
data16
xor
inc
fwait
xlat
jno
jbe
mov
mov
mov
lds
cmpsb
ds
and
adc
mov
dec
xchg
imul
push
rorl
int3
dec
mov
out
mov
mov
mov
xor
in
mov
mov
xchg
les
mov
sub
cmp
test
xor
mov
repz
adc
loop
nop
push
adc
and
and
fistl
insb
adc
ljmp
mov
cltd
in
and
xchg
jae
jecxz
push
push
push
push
pop
andb
sub
cmp
inc
gs
pop
push
lcall
aaa
movsb
pop
cmp
and
jle
adc
dec
pop
jle
push
push
pusha
and
pop
loop
sbb
xor
cltd
mov
aam
pop
mov
pushf
lds
mov
lret
addr16
mov
daa
testl
mov
and
fcoml
add
mov
mov
xchg
ret
cmpb
es
adc
icebp
pop
inc
jno
jle
and
xor
adc
jp
outsl
jns
fstl
xor
popa
in
rorl
divl
mov
std
mov
sub
and
and
adc
mov
test
inc
and
add
mov
hlt
dec
xchg
aaa
js
pop
add
add
out
cmp
scas
icebp
popa
pop
pop
mov
mov
outsb
xor
out
daa
inc
add
push
loopne
or
adc
cmp
dec
pop
arpl
mov
fcmovu
mov
mov
mov
fistpl
les
test
int
lret
dec
adc
add
sub
bound
sbb
jae
fldenv
int3
orl
fiaddl
aas
fiadds
movsl
push
or
inc
mov
mov
cmpsb
xchg
mov
mov
mov
pop
scas
insb
pop
addb
sbb
dec
pop
repnz
int3
push
jecxz
cmc
sbbl
inc
push
iret
cld
dec
mov
jno
cltd
mov
lcall
int
inc
sbb
mov
test
pop
aaa
jbe
pusha
sub
xchg
adc
and
mov
sbb
outsb
popa
cmp
insl
and
lret
cli
call
bound
aam
lahf
test
pop
sub
xor
or
notl
cmp
jb
pop
int
fs
sbb
or
sahf
xlat
jmp
inc
fsubs
ret
push
push
push
xchg
push
xor
mov
mov
int
pop
test
add
mov
iret
mov
sub
mov
or
xchg
imul
push
push
ds
inc
sbb
fcmove
add
jno
cmp
lods
ljmp
adc
push
mov
movb
pop
leave
cmp
xchg
sub
and
pop
dec
cltd
push
add
push
push
pop
sbb
out
adc
sbb
jg
dec
call
arpl
loope
pop
mov
sbb
cmp
adcb
adc
add
cwtl
jmp
into
inc
xlat
mov
cmp
insl
ss
movsl
dec
xor
dec
mov
cs
inc
xchg
add
aas
sub
out
sbb
xor
mov
cld
lcall
test
cmpsb
inc
cmpsl
hlt
pop
cmp
scas
add
add
sbb
fstps
adc
mov
in
iret
push
in
inc
and
sub
push
je
rcll
dec
pop
into
mov
loope
sbb
push
repz
ds
adc
test
shl
orb
fadd
fsubrs
mov
pop
popa
in
sub
stos
lahf
lods
shl
pop
stc
xchg
push
shrd
inc
mov
add
mov
int
cmp
cltd
sahf
mov
push
sub
sbb
sub
in
insb
sbb
int3
insb
cs
shrl
lahf
mov
adc
sub
mov
dec
push
mov
leave
pushf
lods
movsb
lods
iret
push
andl
inc
xor
cmp
push
loope
adc
lock
jecxz
ss
testb
mov
leave
mov
cmp
loop
jo
imul
insl
pop
out
or
lea
daa
fs
movsl
jae
rcrl
push
cmp
mov
cmp
jo
xchg
fwait
out
pop
inc
bound
or
aam
mov
shlb
cmp
or
aad
push
loop
jmp
dec
jl
lahf
jmp
cmp
scas
sbb
sarl
sub
and
outsb
enter
ret
cmp
insl
aad
das
incb
stos
jle
dec
cltd
setne
lea
js
lods
sub
mov
jecxz
lods
adc
pop
mov
push
je
inc
sbb
inc
cmp
add
jecxz
push
pusha
add
lcall
enter
test
xchg
fs
sbb
lret
xor
mov
arpl
inc
sbb
add
movsl
cmp
pop
addr16
mov
mov
jp
jbe
and
movsl
inc
dec
sub
sti
mov
cmpsb
adc
outsl
jbe
or
adc
sub
shll
sbb
loope
mov
ljmp
icebp
aam
cwtl
jbe
mov
jo
sti
andb
xlat
add
push
addr16
sub
int3
adc
xchg
dec
mov
push
test
cli
sbb
je
jle
popf
push
mov
xchg
mov
pushf
inc
inc
aas
cltd
js
aas
test
aas
fwait
ljmp
fcomip
cwtl
dec
mov
dec
pop
xchg
push
call
rorl
pop
jnp
mov
std
xchg
xchg
jo
out
fldenv
mov
push
pusha
xchg
and
imul
scas
daa
push
mov
out
daa
sbb
les
movsb
cmp
pop
dec
das
movaps
sub
sub
rcll
ja
les
aaa
adc
int3
sbb
lea
xchg
hlt
or
jmp
pop
xor
fdivl
sti
inc
stc
xchg
fildl
sub
in
movsb
xchg
dec
pop
and
mov
iret
sub
inc
mov
mov
jmp
cmp
lret
xor
xor
sarl
xchg
int
fidivrs
icebp
xor
push
xchg
fistl
insb
push
sbb
xor
into
mov
add
adc
jp
je
std
pop
mov
xor
add
xchg
aam
mov
xor
repz
adc
sub
ss
sub
and
imul
adc
push
mov
xchg
shrb
cli
mov
adc
mov
icebp
lret
fsubrp
cmpl
xchg
mov
adc
xchg
adc
jo
rol
es
or
mov
pop
mov
pop
and
push
mov
or
ljmp
mov
xor
outsl
or
adc
xlat
sbb
jecxz
xlat
mov
pop
or
xor
daa
push
js
cmp
pop
scas
stc
or
cmp
sahf
pop
inc
insb
fsubrp
or
pop
lret
mov
adc
psubusw
arpl
sbb
adc
int3
jecxz
stos
ret
shll
push
adc
inc
inc
sub
test
out
mov
mov
int3
adc
mov
testl
push
lods
or
js
out
jmp
cmp
push
popf
or
leave
mov
mov
in
cmpsl
pop
loop
xor
ja
les
xchg
outsb
jo
or
shlb
push
loope
mov
data16
ss
sub
fstpt
lock
out
push
gs
ret
push
xchg
pop
test
mov
ljmp
sbb
insl
mov
int
loop
test
jne
data16
les
gs
rorl
jge
enter
push
insl
fs
sub
pop
cmp
daa
inc
xchg
test
xorb
dec
xor
lcall
arpl
jnp
mov
test
mulps
push
stos
cltd
enter
and
xor
pop
test
mov
sbb
or
mov
pop
add
push
insl
outsb
cmp
xchg
rcrl
pop
clc
and
fimull
sbb
sahf
mov
loope
mov
xor
insl
hlt
push
out
insl
std
out
orl
push
test
nop
cs
fmul
cmp
aad
push
cli
pop
sub
dec
pop
fs
lret
inc
sub
imul
andl
repnz
mov
adc
stos
fsubrs
pop
imul
dec
addr16
ss
lcall
xor
dec
push
sub
lock
ss
xor
xchg
and
push
leave
incb
cmpsl
xlat
jbe
movsb
test
scas
inc
outsb
inc
push
sbb
xchg
inc
stos
and
mov
les
pop
cmp
inc
sbb
loop
cmp
xchg
xor
es
jno
adc
test
addr16
fcmovnu
scas
addb
jno
fwait
pop
sub
fisttpl
inc
xor
cmp
jb
xchg
push
data16
mov
inc
xchg
xlat
adc
clc
jecxz
dec
les
js
lock
adc
pop
dec
fiadds
mov
clc
pop
push
push
adc
aaa
or
div
fdivrl
or
push
xor
push
sbb
sti
sbb
test
ljmp
add
imul
std
xor
jge
sbb
push
repnz
xchg
imul
call
push
sub
mov
jp
pop
rolb
cmp
dec
das
cmp
jo
add
or
dec
lret
call
in
sti
stc
test
jge
aad
out
add
sbb
push
sbb
sbb
mov
adc
into
enter
aas
pop
jle
add
adc
out
div
arpl
adc
mov
pushf
push
and
inc
dec
xchg
mov
ud2
jg
push
dec
cmp
mov
and
push
fldl
lods
fisttpll
cmc
ds
add
add
out
and
dec
jo
popf
testb
jl
aam
mov
sbb
out
clc
lods
or
mov
add
stc
ret
int
mov
imul
jnp
lret
stos
sarl
mov
cmp
mov
add
mov
repnz
cmp
pop
mov
out
lea
add
mov
mov
mov
sub
enter
add
shl
jl
xlat
mov
mov
nop
push
imul
adc
mov
lods
imul
push
outsl
inc
jae
hlt
mov
loopne
outsb
inc
push
fists
int
xchg
pop
lods
mov
orb
sub
pop
ja
sub
adc
out
push
adc
int3
aad
xchg
dec
sub
xorl
lock
pop
dec
xlat
sub
and
mov
pusha
out
aaa
cld
or
dec
cmp
jbe
xchg
cltd
dec
pop
mov
lods
dec
pop
lret
orl
inc
pop
insl
stc
adc
xor
mov
jl
pop
rol
in
lret
shll
mov
mov
fstpl
pop
mov
fwait
add
mov
dec
xor
add
sbb
jae
mov
iret
push
in
aas
outsl
lea
pusha
lretw
sbb
test
data16
push
divb
movsl
xchg
pusha
and
sti
inc
rorb
lahf
inc
mov
loopne
xchg
inc
or
pop
lret
pop
jo
cmp
cld
push
cmpsb
in
test
stc
ret
out
jbe
cltd
jne
sbb
sarl
sbb
or
add
repz
xor
cmpsl
loope
pop
lret
nop
adc
pushf
outsl
int3
lahf
shll
or
loop
sub
fiaddl
popf
ljmp
mulb
popf
adc
xchg
xor
jae
and
lret
lahf
adc
shr
cmp
pop
mov
push
nop
mov
pop
sti
ds
sbb
push
ss
dec
mov
xchg
push
lods
popa
in
out
shll
repnz
push
subl
mov
movsb
scas
xchg
sub
aam
fldt
xchg
popa
dec
sbbb
rolb
std
cmp
gs
sarb
inc
ja
jg
mov
pop
xchg
cmp
in
aad
mov
or
or
gs
aad
pop
sbb
inc
mov
mov
rcr
ljmp
dec
sub
inc
push
and
mov
repz
lds
cmpsl
pop
cmp
jmp
fstps
lcall
aas
sbb
mov
iret
incb
push
ja
xor
lock
adc
sti
cmpsl
mov
cli
dec
sbb
add
and
cmp
sub
jo
fs
cmpsb
dec
dec
xchg
push
pop
mov
pop
mov
das
mov
leave
and
daa
or
je
ds
leave
cmp
out
inc
and
dec
jmp
mov
lahf
mov
out
addr16
dec
int3
out
pop
pop
mov
icebp
aas
cmpsb
xchg
push
stos
pusha
dec
into
cmp
xor
sbb
xchg
mov
pop
jno
mov
rcll
add
shll
and
cmp
stc
push
jmp
pop
pop
jne
movb
or
mov
xchg
push
dec
push
imul
sub
insb
add
mov
xchg
in
aas
inc
jmp
call
insl
rclb
out
xor
orb
inc
lods
ficompl
adc
inc
xor
xchg
bound
dec
mov
lea
std
pop
pop
leave
push
ret
inc
push
sbb
shlb
cs
inc
lcall
leave
cmp
pop
cs
ja
lcall
sub
jmp
push
lret
mov
sub
push
push
push
sbbb
and
or
xor
or
cmpsb
fcmovnbe
ret
add
jp
aaa
cmp
popf
and
bound
and
loopne
push
pop
cltd
dec
inc
fdivl
icebp
pop
add
xchg
inc
push
scas
imul
and
pop
pop
mov
xchg
pop
lds
cmp
ret
std
push
rcrl
push
sub
mov
mov
and
call
aam
in
ss
cs
or
inc
lahf
leave
sub
sub
dec
mov
xor
dec
sub
and
pop
sbb
add
mov
add
roll
add
daa
cmp
rcrl
lcall
out
push
pop
mov
je
andl
inc
jns
mov
xchg
or
pop
ds
mov
push
fisttpll
iret
aam
xor
xchg
mov
pop
push
push
dec
xor
fbld
add
rorl
add
jne
icebp
call
jnp
mov
inc
pop
xor
push
outsl
or
mov
sub
pop
pop
add
sub
add
adc
nop
cmp
cmp
cwtl
shll
dec
mov
pop
inc
ljmp
and
fsts
out
sarb
mov
push
pop
pop
fcompl
adc
cmp
push
mov
jp
inc
inc
push
scas
ret
dec
sbb
cmp
js
jle
cld
or
cmp
cs
loop
nop
ja
decb
push
nop
push
xchg
sti
cmp
outsb
mov
arpl
les
insb
push
mov
inc
mov
jmp
cmp
jo
or
in
pop
movb
jmp
test
jbe
andb
fnstcw
arpl
dec
ret
outsb
repz
mov
lahf
scas
mov
das
mov
pop
mov
xor
out
cmpsl
and
sbb
scas
in
pop
xchg
pop
xlat
dec
mov
fwait
loopne
dec
adc
xchg
mov
push
aam
xor
ret
jbe
cmp
in
loopne
sahf
fs
int3
stos
gs
mov
mov
test
imul
dec
movsl
adc
jne
mov
pop
jns
rclb
or
push
mov
sar
icebp
jl
jbe
ja
fsubrl
jb
jnp
jle
cmc
bound
es
cmp
and
aam
pushf
sub
cltd
scas
pop
add
sub
dec
lds
mov
pop
js
xor
sub
jno
daa
movsl
and
cmp
mov
cwtl
cmc
int
scas
sbb
pop
jbe
icebp
repz
xor
sbb
test
enter
pop
pop
cmpsb
jnp
loopne
xchg
in
lret
mov
cmc
xchg
imul
ja
imul
std
lock
push
adc
mov
jo
xchg
add
inc
decl
mov
das
add
add
insb
in
sub
bnd
fabs
dec
pusha
test
call
or
mov
repnz
add
fisubl
sbb
js
pop
jp
lea
int
mov
add
leave
sti
and
inc
fwait
scas
add
shrb
jmp
push
xor
pop
shll
jge
imul
js
out
xor
test
dec
fildll
mov
pop
test
or
aad
loop
mov
inc
test
arpl
jnp
inc
rcll
loop
je
add
in
mov
push
fmull
icebp
notb
mov
popf
inc
rcrb
cmp
into
int
cs
add
mov
mov
inc
mov
adc
dec
hlt
push
push
lret
imull
dec
scas
or
inc
xchg
repnz
dec
hlt
sub
insb
mov
pushf
fcoms
push
fisubrl
mov
insb
jecxz
xchg
mov
stc
sbb
popa
lods
fstl
push
hlt
mov
push
add
mov
leave
in
insb
ret
xor
fcmovnbe
call
add
int3
jo
or
or
ret
movsb
mov
cmp
pop
imul
arpl
ss
cltd
shlb
mov
mov
or
mov
aam
adc
je
cltd
mov
add
arpl
dec
btr
ss
arpl
loop
lahf
mov
jnp
sbb
outsb
iret
je
testl
jns
cmp
call
add
das
negb
lcall
mov
in
inc
ja
or
push
aam
add
stos
mov
and
xchg
std
rolb
stc
sti
mov
jnp
add
mov
add
leave
shlb
push
xor
es
add
jmp
test
test
or
test
xor
out
sub
aas
mov
pop
cmpsb
stc
xor
fsubp
add
stos
push
pop
aas
rclb
jmp
inc
sbb
lock
les
xor
mov
std
add
push
sbb
pop
mov
repz
mov
bound
dec
or
cmpsb
jle
lahf
push
lds
decb
insl
dec
add
inc
dec
mov
scas
xchg
adc
out
sbb
in
adc
aas
pop
test
or
jp
fcoms
mov
or
inc
addb
stos
je
dec
and
push
pop
pop
inc
push
xor
stc
sub
scas
loop
push
ljmp
and
jns
jne
pop
add
push
mov
lret
loop
and
rcrb
adc
xchg
shlb
rcrb
imul
push
out
lods
shrb
lea
lret
aaa
and
sete
push
push
out
jb
cmp
push
outsb
outsl
movsl
pop
inc
mov
fcompl
fdivl
movsl
push
or
outsl
push
outsb
into
push
ret
sti
ret
in
add
stc
scas
cmpsb
sti
xor
enter
jmp
sub
mov
pusha
push
into
movsl
pop
push
call
jnp
jne
insb
das
pop
loop
iret
ss
lcall
push
and
mov
xchg
fsubl
inc
xlat
int3
adc
sbbl
lock
testb
insb
cmpsl
fcoms
mov
int
inc
fmul
or
cmp
mov
dec
add
jg
cld
add
shr
mov
test
mov
sub
mov
xchg
cmpsb
or
xchg
ljmp
jmp
std
cmp
ret
pop
add
xor
or
or
dec
rcr
fdiv
and
in
jmp
inc
or
mov
nop
cmp
sbb
cmp
jecxz
jge
fistps
cwtl
outsb
into
pop
icebp
lea
loop
popa
stos
insl
mov
jne
push
or
jo
outsb
cmp
rcll
out
outsl
mov
or
jne
mov
mov
dec
fistpl
cmpb
add
add
sbb
or
mov
std
jecxz
and
xchg
insl
imul
lret
cmp
inc
jp
dec
mov
dec
xor
mov
sub
sbb
push
scas
push
lret
push
or
add
push
push
mov
rcr
or
cld
sbb
inc
dec
jae
popa
test
lret
jnp
cmpsb
pop
mov
sbb
add
inc
cmp
mov
sahf
and
fldenv
fiaddl
xchg
lock
lahf
into
add
fildll
rorl
push
icebp
call
add
sub
mov
sbb
xor
in
mov
xchg
sub
repnz
or
mov
outsb
dec
loop
not
fcmovu
push
mov
ret
arpl
lahf
push
icebp
adc
and
pop
and
icebp
pusha
sbb
add
jno
mov
and
inc
mov
jns
or
sub
cmp
in
das
adc
jp
push
xchg
clc
or
bound
inc
cmp
je
mov
movsl
mov
xor
outsb
fldl
enter
and
mov
jbe
inc
jp
adc
fcmovnu
aad
xor
sub
dec
dec
pusha
stos
jp
pop
push
inc
je
and
roll
cltd
gs
push
scas
gs
out
mov
lods
mov
stos
cld
cltd
or
jmp
es
mov
int3
add
jno
sbb
ret
push
inc
or
je
scas
sar
sub
sub
inc
nop
xorl
jmp
repz
lret
mov
sahf
xchg
mov
pop
mov
cmp
xlat
ret
cmp
jp
inc
dec
jnp
sbb
or
or
ljmp
cmp
stc
add
cmpsb
sub
incb
insb
scas
mov
mov
pop
out
or
fimull
nop
test
out
fdivs
loope
mov
fcomip
bound
mov
mov
pop
xor
hlt
mov
pop
xchg
adc
xor
sarb
mov
into
aaa
loope
xor
xchg
repz
sbb
test
inc
fistpl
inc
lods
daa
sbb
xchg
dec
inc
outsb
fildll
rcrl
out
pop
loop
inc
push
popa
add
out
push
sti
mov
fists
idiv
js
mov
pop
jae
sbb
cwtl
sti
pushf
pusha
mov
xchg
or
adc
hlt
fs
cmc
mov
loope
push
test
pinsrw
stos
pop
sbb
mov
cwtl
scas
movl
push
addr16
cmp
xor
fisttps
fadds
ret
andb
push
popl
stos
jbe
mov
pop
jbe
ret
inc
sbb
gs
inc
loope
inc
or
jno
mov
jb
or
inc
pop
fildll
sbb
adc
ret
jle
pop
outsb
inc
frstor
clc
xchg
dec
lahf
aaa
jne
fwait
add
push
les
int
xorb
sub
popa
dec
in
lret
or
pop
imulb
rcll
test
pop
stos
pop
insb
mov
sub
add
shrb
push
movsb
sub
filds
adc
xor
aaa
call
mov
xor
adc
stos
loope
cmp
pop
fistl
sbb
inc
stc
stc
xor
lcall
jbe
fisubrs
aas
out
mov
mov
inc
leave
jbe
js
inc
xchg
xchg
ret
push
push
xlat
fidivs
mov
sub
outsl
add
insb
pop
dec
pop
add
mov
mov
movsb
push
add
in
popf
test
sub
lret
imul
push
inc
outsb
fwait
pop
pop
xor
scas
lds
adc
ljmp
lahf
inc
cwtl
pop
sub
mov
mov
fistpl
adc
arpl
jecxz
popf
add
enter
subl
sbbb
sub
mov
jge
lret
inc
jle
std
imul
mov
and
in
dec
xor
jno
inc
lea
std
sub
mov
jno,pt
push
mov
in
inc
sbb
scas
push
in
xchg
daa
les
adc
pop
fwait
sbb
xor
adc
jno
loope
lret
pop
mov
imul
in
nop
repnz
push
pop
push
jne
mov
in
or
push
sahf
pop
mov
test
cmpl
ret
daa
imul
cld
out
adc
jmp
js
je
in
bound
jl
je
xor
cmp
sub
push
loop
mov
jge
pushf
cmpb
fnstsw
mov
ss
and
add
inc
fcom
xchg
mov
mov
xor
scas
mov
clc
cmp
mull
jno
repz
icebp
out
sahf
pushf
andl
push
cmpl
out
cltd
aad
adc
jne
push
arpl
adc
jae
cmp
mov
test
in
and
sbb
gs
dec
xchg
faddl
rol
push
add
jbe
mov
jg
xchg
mov
lods
push
cmp
dec
xor
jge
std
repz
pop
jle
pop
mov
push
xchg
sbb
or
pushf
jecxz
xor
mov
sub
jle
jp
dec
pushf
pushf
cmp
dec
outsb
lds
cmc
add
aaa
push
mov
push
popl
sub
push
add
mov
mov
sub
xchg
cwtl
ja
lahf
out
xchg
jg
outsl
mov
xorl
incl
jae
repz
xchg
jb
push
icebp
cmp
outsb
es
outsb
inc
enter
pop
clc
and
cmp
movsb
cmp
or
addb
pusha
cltd
lock
inc
cmp
jle
mov
inc
mov
xlat
fmull
cmp
jle
pop
icebp
fists
out
enter
cmp
xchg
push
or
and
xchg
inc
cmp
xchg
dec
rorl
call
out
icebp
imul
scas
fdivl
sub
fs
shrl
adc
pop
fcmovbe
pusha
out
daa
ret
lods
arpl
sti
xchg
lahf
adcl
inc
cmp
cmpsb
lcall
inc
cld
adc
testb
rolb
ss
mov
pushf
push
mov
test
lcall
or
insl
push
test
lods
and
jno
call
pop
mov
pop
in
lahf
imul
mov
pop
add
loopne
lcall
mov
and
test
pop
out
push
mov
xor
xchg
mov
scas
iret
outsb
pop
push
or
jg
adc
jg
add
pusha
jns
jnp
xor
inc
adc
push
xor
pop
icebp
out
shlb
jmp
mov
jp
test
pop
clc
mov
xor
or
cmp
or
or
pop
in
out
inc
cmp
push
cmpsl
shll
push
sub
dec
cld
movsb
lods
iret
inc
out
jb
xor
pop
mov
push
mov
inc
jle
dec
fadds
aas
pop
shrb
pop
dec
movsb
xchg
adc
fistps
shrl
movsl
lds
insl
ret
mov
pusha
dec
sub
inc
les
mov
xchg
cmpl
and
nop
es
push
sarl
fildl
and
xor
cld
mov
movsl
and
push
dec
cltd
adc
pop
jno
pop
mov
dec
adc
and
pop
gs
frstor
xchg
xchg
mov
test
xchg
movsl
or
aad
lahf
cld
jae
jl
and
cmp
sbb
mov
lret
sub
js
xor
pop
ja
addr16
add
iret
decl
popf
or
lret
xorb
pop
enter
mov
pop
arpl
sbb
iret
cmpsl
sahf
inc
xchg
adc
add
mov
arpl
jnp
and
mov
pop
nop
nop
dec
xlat
xor
cmpsl
cmp
add
divb
mov
pushf
xor
mov
mov
fistl
mov
xor
mov
mov
cmp
mov
mov
xor
cmc
cld
dec
sti
outsb
ss
mov
out
cmp
jno
push
insl
push
or
mov
hlt
mov
or
push
and
pop
add
xchg
rorb
ljmp
loope
sub
push
dec
leave
xchg
dec
or
popf
ret
inc
mov
sub
repnz
stc
or
cmp
test
and
xor
fs
adc
aas
push
fwait
insl
lcall
shr
push
jns
mov
push
bound
nop
xor
lret
mov
shrl
and
adc
pop
jle
jl
outsb
addb
es
ds
hlt
aas
mov
fldl
mov
mov
mov
ds
fidivrs
jecxz
jns
adc
cmpsb
inc
bound
add
sub
xchg
mov
push
xor
add
jb
int3
stos
pop
inc
or
jno
xor
cmp
pop
inc
je
mov
out
aad
les
leave
pop
cmc
and
xchg
daa
repnz
push
enter
lods
mov
lahf
adc
sub
cltd
add
pop
adc
xor
sbb
jecxz
cmp
jp
cmp
push
push
std
enter
add
imul
jg
mov
xor
or
xchg
cld
insb
adc
fabs
test
je
lcall
push
stos
xchg
cmpl
xlat
mov
test
mov
add
jbe
call
pop
dec
pusha
nop
shrl
fiadds
inc
cltd
cmp
push
aam
js
daa
push
add
aad
lods
jb
pusha
imul
pop
inc
movsl
add
cld
notl
movsb
jmp
cmp
or
mov
insb
int3
gs
jge
jne
cmp
imul
jae
fistps
div
data16
aas
insb
inc
adc
mov
mov
ds
enter
dec
fidivrs
in
push
jo
or
cmp
pop
fwait
mov
pop
shl
mov
and
adc
cmp
mov
and
push
les
inc
sub
test
xchg
test
adc
xchg
into
lret
leave
sbb
cltd
cmc
sbb
fidivs
insl
scas
jne
jns
inc
shlb
push
mov
cmp
out
mov
fsubs
imul
mov
out
dec
stos
popa
mov
scas
sbb
push
dec
mov
and
dec
sbb
push
jge
pop
ss
lahf
inc
jmp
lods
cmc
pop
repnz
les
mov
and
cld
push
sub
cli
and
std
mulps
repz
stos
mov
inc
ret
push
mov
fistpl
inc
add
lods
int
push
and
cmp
cmp
xchg
mov
inc
xchg
adc
adc
xchg
mov
inc
std
arpl
and
movl
lret
sub
xchg
inc
mov
mov
push
scas
mov
mov
outsb
leave
outsb
popa
fiaddl
adc
sbb
mov
dec
jo
pop
sbbl
incl
xchg
sbb
xor
jl
pop
inc
ljmp
cmp
inc
clc
ljmp
add
int3
popa
test
shr
ror
pusha
inc
repz
cmpsb
jecxz
inc
addb
mov
inc
mov
mov
sahf
call
xchg
orl
dec
xor
sbb
mul
inc
mov
jp
aad
lcall
xorl
int
test
lods
ret
nop
pushf
testl
fimuls
pop
mov
jge
pop
xor
data16
lret
pop
ljmp
push
inc
or
push
add
pusha
arpl
jb
out
test
lds
add
adc
mov
jb
dec
loopne
call
iret
bound
repz
aas
mov
push
jmp
xchg
lret
mov
jge
loop
push
cmpsl
push
sbb
ds
jmp
pop
stc
adc
inc
pop
hlt
frstor
int
js
push
jge
addr16
das
test
xlat
or
xor
sarb
adc
mov
fdivl
pop
je
xchg
cmp
push
jno
jnp
ljmp
jge
movsl
gs
add
popa
xor
adc
dec
daa
out
je
or
pop
rcrl
dec
sbb
add
add
leave
decl
mov
sub
mov
into
sbb
fs
in
repz
jns
and
out
stos
jge
pop
lods
test
push
cli
sbb
mov
les
inc
adc
inc
push
xchg
jl
inc
arpl
mov
adc
push
fiadds
push
or
jno
push
mov
stc
push
and
hlt
mov
mov
lahf
sar
negb
jp
push
mov
jl
popf
xchg
sbb
lods
xor
in
adc
addr16
cmpsb
xchg
bound
mov
fnstcw
nop
pop
push
cmp
push
push
jge
ja
mov
pop
jno
adc
jbe
or
mov
xor
ja
pop
mov
loopne
add
outsl
lea
pop
cs
pop
and
orb
dec
or
cmp
rcrb
mov
lds
jge
lock
pop
repnz
push
rcl
int3
popa
addr16
mov
jns
sbb
out
fildl
xor
dec
cmpsl
js
pop
mov
dec
gs
fwait
sub
mov
lea
nop
adc
mov
repnz
mov
int
push
sti
call
dec
xchg
and
jmp
lret
dec
imul
jg,pn
cld
adc
inc
dec
mov
adc
lcall
mov
lea
add
pop
pop
sbb
push
or
out
pop
loopne
pop
stos
or
out
es
jo
cmp
pop
out
fisubrl
xchg
mov
xchg
in
xchg
fs
imul
js
jp
xor
iret
pop
jbe
cmp
lfs
pop
fmull
lcall
js
or
add
mov
and
add
adcl
mov
lret
pop
fnstenv
xchg
scas
ss
fdiv
add
popf
push
push
add
push
icebp
adc
pop
clc
imul
add
mov
sbb
pop
ja
andb
inc
pop
or
enter
or
xchg
sbb
pusha
loopne
pop
push
jg
inc
and
bound
mov
push
addl
outsl
lret
dec
clc
or
mov
mov
loopne
rcrl
mov
xchg
push
inc
lock
inc
stos
jmp
push
outsb
pop
inc
das
pop
in
ret
ret
cmpsb
sti
stc
stos
scas
or
arpl
jle
adc
ljmp
xchg
aam
fistpll
ret
dec
add
dec
xor
shlb
in
test
cli
push
mov
jns
pop
and
insb
jg
mov
popa
aam
shll
lods
mov
xchg
call
andl
hlt
mov
nop
pop
out
loop
jl
add
insl
sub
xchg
fstps
cmp
mov
and
pusha
cmp
cmc
popf
inc
sub
out
push
in
aad
inc
mov
sub
clc
xlat
lock
rclb
ja
pop
xchg
mov
jo
pop
loope
fistl
jp
and
mov
push
daa
add
push
push
popa
dec
inc
push
xchg
mov
adc
mov
out
xchg
cmc
outsl
or
sub
sti
shrl
jge
mov
sbbb
cltd
mov
push
jecxz
mov
inc
flds
fnstsw
dec
dec
stc
pop
mov
mov
xor
dec
shrl
dec
jo
lock
inc
ret
lods
xchg
lds
mov
mov
inc
movd
les
push
push
ret
out
fisubrl
cmp
mov
lock
fs
and
jne
jge
pop
add
lods
jb
add
test
jmp
sub
into
sahf
pop
insb
pop
cmp
cmpsb
repnz
push
push
les
pop
xchg
mov
push
imul
mov
cmp
shll
push
dec
out
out
push
outsl
mov
mov
pop
sub
xchg
sahf
mov
stc
mov
cmp
insb
mov
inc
fsts
or
lods
in
cld
xchg
jo
pop
fstl
cmpsl
jno
icebp
xchg
xor
sti
pop
rclb
or
aad
xchg
out
pop
dec
ds
jl
outsb
int
dec
adc
and
or
mov
jl
push
shrb
or
je
fwait
pop
test
cmp
jl
push
sarb
mov
xor
out
sbb
je
pushl
mul
lods
mov
rolb
rcrl
cwtl
rclb
mov
sbb
cmpsb
mov
or
fbld
mov
inc
test
ficompl
mov
push
push
inc
or
lahf
xlat
int
sub
mov
add
loopne
push
push
sub
mov
fiaddl
lds
aaa
mov
mov
sub
adc
sbb
imull
inc
test
dec
sub
mov
dec
cld
dec
inc
scas
sbb
cmc
lahf
xor
adc
mul
mov
mov
inc
pop
mov
mov
sub
fistps
mov
push
push
fs
or
mov
mov
je
in
adc
push
mov
fstps
xchg
lret
mov
aam
mov
cwtl
nop
mov
sahf
test
jo
add
sbb
and
or
arpl
and
and
leave
sarb
ja
and
xchg
cmp
jmp
mov
fmull
xor
xchg
inc
mov
push
test
cmpsb
les
sub
jb
movsb
imulb
data16
adc
das
ljmp
mov
xor
cltd
or
xchg
sbb
lea
icebp
xlat
push
scas
mov
and
sub
pop
xorl
fisubrl
jne
movl
xchg
xor
lret
xor
or
ret
xchg
dec
adc
les
es
push
add
ret
mulb
dec
fcompl
ljmp
rcr
test
mov
xor
shrl
fs
les
test
shr
xlat
aad
add
xchg
and
inc
dec
fwait
push
and
inc
scas
mov
scas
shll
fmul
adc
jmp
add
xor
data16
cli
cmpsb
imulb
dec
hlt
mov
lods
and
push
inc
cmp
xchg
rorb
test
int
push
outsb
incl
popf
fsubr
adc
movsl
mov
inc
lahf
in
ret
add
push
mov
out
jb
in
jne
sub
lahf
add
out
inc
or
or
sti
push
in
leave
inc
mov
mov
or
xor
dec
adc
ja
mov
cmp
and
mov
push
test
stos
pop
mov
jle
pop
mov
add
push
xchg
jne
inc
pop
pushf
mov
add
divb
hlt
add
mov
cmpsb
orl
pop
dec
cmp
sbb
xor
das
jmp
in
addr16
xchg
shll
jnp
pushf
popf
stc
mov
mov
xor
dec
filds
aas
pop
in
aad
cmpsl
sahf
inc
roll
adc
xchg
jp
pop
test
std
push
inc
data16
pop
pushf
wbinvd
cmp
mov
sbb
das
ret
sub
push
push
aad
repz
sbb
fidivs
mov
cmp
ljmp
xchg
sti
dec
mov
mov
fwait
xlat
mov
mov
jns
mov
cwtl
out
daa
les
mov
or
sbb
test
ljmp
int3
sbb
cmp
and
adc
scas
movsb
sbb
out
xchg
push
sub
pop
sub
mov
sbb
leave
xor
xchg
push
fscale
ja
in
add
js
data16
mov
lahf
lret
push
cli
sahf
jnp
push
sbb
mov
in
shlw
xlat
cmp
and
and
fsubr
stc
movb
dec
mov
aad
test
pop
pop
test
shrl
xor
aad
fwait
mov
pop
xor
push
sub
push
dec
fldcw
test
add
fnstenv
sub
inc
mov
push
and
mov
lea
sub
mov
or
test
insb
les
jb
lea
cmp
lret
xchg
lahf
pop
add
sbb
rclb
jns
inc
je
pop
push
push
leave
dec
in
rorl
fcmovu
pop
mov
push
pop
sub
jmp
loopne
push
xchg
xchg
loop
or
mov
add
jnp,pn
xor
mov
stc
lea
pop
lahf
mov
xchg
cld
aas
dec
dec
cmp
sarb
mov
add
cmp
jns
mov
dec
sub
mov
stc
push
jb
xchg
push
xlat
stc
jmp
outsl
flds
add
mov
rorb
loop
idiv
lods
leave
aas
jmp
sub
jmp
clc
shll
es
fisubrs
and
sahf
in
mulb
nop
std
dec
mov
insl
movsb
xchg
pop
stos
cmpsl
push
iret
jnp
mov
daa
jge
cwtl
fildl
xor
xor
aam
insb
imul
add
xchg
xor
lds
jmp
jns
mov
popa
jne
shlb
ret
lret
fsubs
stos
adc
jbe
dec
bound
movsb
loopne
cmp
clc
jle
add
enter
divl
outsb
adc
push
xor
ret
sbb
ret
mov
gs
test
test
in
jnp
inc
loopne
xchg
mov
mov
mov
dec
insl
lea
sbb
dec
aaa
dec
cs
inc
lds
and
mov
dec
xchg
mov
adc
addl
mov
nop
xchg
jl
faddl
jo
rcll
pop
lcall
testl
dec
rol
xor
outsl
inc
rcll
dec
stos
pop
jbe
jge
xorl
sti
pop
jbe
imul
loope
pop
add
add
sub
pushf
pop
xchg
sbb
cmp
sub
sub
shl
rolb
xchg
mov
inc
js
int3
enter
push
pop
in
pop
stos
int3
add
sbb
inc
jns
pop
ficomps
into
stos
push
add
jecxz
fsubl
cmpsl
jp
fdivrs
sti
cltd
xor
xor
xchg
mov
mov
out
cld
mov
mov
push
push
pushf
pop
mov
insl
iret
dec
pop
sbb
pop
daa
jmp
aam
aas
dec
mov
daa
sarb
mov
mov
addr16
or
fiadds
jp
fistl
and
inc
jecxz
cmp
pop
lds
lahf
sti
cmp
fdivrl
fs
sbb
dec
xor
sub
repz
adc
mov
or
cld
fwait
hlt
cmp
jg
loopne
pop
add
jns
arpl
popa
dec
loope
dec
aaa
inc
xchg
repnz
push
cmp
fwait
shll
push
notb
add
out
xchg
mov
aaa
cmp
inc
push
stc
mov
dec
test
outsb
lahf
scas
pop
xor
data16
sub
sbb
sbb
pop
out
mov
pop
or
hlt
ss
iretw
xor
add
and
std
mov
jmp
xorl
dec
loopne
bound
insb
mov
test
mov
in
inc
jo
inc
mov
fmul
decb
add
in
jbe
popf
ret
push
jp
mov
test
aad
add
cmpsb
lods
sar
or
sub
mov
mov
mov
popf
lods
ljmp
fsubl
add
stos
idivb
sbb
dec
leave
add
cld
sub
cld
repnz
jne
fldenv
js
mov
test
rol
lods
jnp
movsb
fnstenv
out
fdivp
inc
outsb
mov
test
jbe
cmpb
mov
scas
fsubl
lret
mull
or
mov
add
hlt
lds
adc
or
jle
xchg
push
out
ds
dec
jmp
cmp
fdiv
fld
mov
es
sahf
cs
das
lea
xor
and
add
sti
cltd
insb
out
shll
ror
dec
addr16
adc
ja
cli
sbb
mov
mov
xor
stc
and
in
cmpsl
pop
testl
lods
je
jbe
call
inc
lods
divl
pop
adc
push
test
popf
mov
jnp
out
dec
arpl
lret
std
add
mov
cmpsb
push
push
push
xor
pop
rcll
aad
fwait
mov
cli
or
insl
outsl
test
scas
cmp
mov
cmp
popa
adc
jg
mov
cmpsl
cmp
mov
mov
lock
adc
adc
rorb
cmp
imul
addr16
pop
add
pop
sbb
faddl
lret
cmc
mov
push
push
pop
ret
or
shlb
mov
fnstsw
out
and
nop
lods
xchg
inc
jns
int3
sbb
lret
jne
aaa
push
inc
fs
fnstcw
xor
or
int3
xchg
stc
or
arpl
inc
in
in
lret
jne
jnp
push
push
icebp
data16
stos
pop
adc
dec
cmpsb
daa
push
imul
or
sbb
jno
cmc
or
cmp
push
in
mov
cld
lds
rep
out
cmp
xor
jo
dec
shl
mov
pop
or
ss
mov
mov
jg
mov
cmc
fwait
sbb
xor
outsl
cli
iret
rol
mov
sub
xor
imul
cli
cmpsb
clc
mov
in
in
daa
inc
cmp
or
xchg
mov
xchg
cmp
cmc
jne
cmpsb
push
mov
insb
leave
les
add
adcl
or
into
mov
pop
push
icebp
add
pop
repnz
fbstp
cmp
add
jg
mov
adc
iret
loope
int
cld
sti
and
shll
push
sub
jecxz
xor
mov
sbb
aas
add
jbe
enter
idiv
stos
push
pusha
mov
aam
pop
jmp
cmpsl
cli
push
aaa
addr16
mov
int
xchg
xor
and
dec
jbe
push
out
cli
mov
adc
leave
mov
dec
add
enter
lret
iret
and
inc
mov
repnz
fldcw
mov
ret
mov
rclb
aad
gs
jl
jo
sbb
fwait
mov
mov
sbb
dec
out
inc
sbb
das
aas
clc
scas
pop
xchg
inc
or
and
xchg
adc
mov
movsb
dec
push
push
fistl
notb
cmp
iret
xchg
lods
cmp
inc
je
or
add
mov
and
cld
lock
adc
inc
fisubrs
push
repnz
mov
je
in
fisttpl
pop
stos
xchg
xorb
xor
dec
xchg
cmp
jns
add
or
xlat
sub
lds
iret
or
xor
xchg
sbb
jl
out
jbe
rcll
lock
lods
mov
movsb
int
mov
jnp
aam
out
cltd
pop
jns
in
mov
inc
dec
sbb
mov
lcall
xor
push
and
cmp
fcompl
fs
scas
iret
loop
ss
fldt
int3
xor
cmp
fisubrl
sbb
dec
ljmp
imul
inc
das
rcrb
or
push
stos
je
inc
sub
inc
xor
loopne
mov
mov
add
in
inc
mov
iret
inc
pop
lods
pop
jns
data16
mov
lahf
push
cmpsl
and
jbe
int
inc
and
fisubrs
push
xchg
sub
pop
adcb
mov
jg
mov
xchg
jg
lods
fcoms
out
clc
sbb
dec
jno
shll
je
fsub
je
cmpl
jns
mov
pop
mov
movsl
mov
push
inc
daa
loope
sahf
cmc
daa
dec
sbb
fwait
jo
xchg
js
mov
shll
adc
mov
mov
mov
ljmp
rorb
jns
dec
test
call
mov
push
mov
sti
lods
mov
xchg
lds
js
cmp
fmul
xchg
inc
fsubl
loop
clc
mov
dec
mov
dec
jnp
xor
xchg
xlat
aaa
gs
insl
negb
incb
std
cwtl
in
addr16
inc
pop
dec
mov
outsb
roll
sbb
jnp
xchg
push
fsubrl
dec
rol
incl
ja
push
xor
push
repnz
mov
jne
cmc
cmc
mov
imul
push
adcl
mov
shlb
mov
ret
cmp
mov
test
lods
adc
xor
inc
lods
xchg
rclb
xchg
jo
inc
lods
mov
add
insl
jp
cmc
inc
rolb
sub
add
ffreep
inc
dec
xchg
push
hlt
cmpl
rcrl
push
cmpb
stc
inc
inc
cmp
js
cltd
adc
icebp
or
aaa
dec
sbb
fldcw
inc
inc
mov
or
clc
mov
xor
mov
leave
jg
or
sbb
push
fstpt
dec
and
lods
xchg
inc
test
mov
xchg
sti
mov
imul
and
iret
jl
daa
push
mov
lahf
and
jle
aam
push
mov
imul
mov
arpl
movsb
mov
push
sub
or
dec
dec
sub
jp
or
andl
gs
notb
in
mov
inc
jp
xchg
adc
inc
lret
inc
mov
jecxz
iret
lea
mov
ja
and
jb
rdpmc
or
pop
mov
mov
insl
push
roll
xchg
mov
jae
cmp
and
add
xchg
sbb
sub
cmp
push
adcl
roll
xchg
jno
data16
mov
dec
cmpsl
ss
pop
nop
into
mov
add
es
jg
dec
mov
sbb
stos
leave
es
pop
mov
xchg
or
cmp
inc
lods
fiadds
lcall
out
popa
subl
fsubrl
xor
cmp
add
cmpsl
fs
and
adc
outsl
xchg
in
sub
int
dec
sti
movsb
jmp
ret
in
sbb
jle
xor
mov
push
adc
rcl
inc
add
sub
inc
lret
fisttpl
adc
dec
f2xm1
fmull
push
sub
push
inc
xchg
pop
ret
mov
lods
and
clc
daa
pop
mov
stos
mov
dec
hlt
pop
fwait
mov
push
mov
mov
int
mov
mov
sarl
and
pushf
test
inc
in
pop
shrl
xchg
push
data16
push
in
out
es
mov
jmp
mov
pushf
jo
arpl
aam
push
sbb
sbb
xor
push
dec
inc
ficompl
inc
mov
dec
pusha
jmp
mov
enter
rorb
movsb
iret
frstor
mov
fdiv
sub
outsb
mov
sahf
das
add
sbb
add
jg
nop
movsb
aad
ja
mov
mov
push
jmp
gs
mov
ficoml
jb
in
dec
movsl
enter
orb
cld
sub
bound
jno
sbb
sbb
icebp
aas
xchg
mov
mov
subb
mov
adc
jb
lods
sysexit
pushf
adc
add
pop
and
xor
dec
jmp
sub
push
jno
and
fnstcw
cwtl
cmp
out
std
jp
mov
lods
pusha
cmc
fsubrl
cld
and
sbb
std
call
mov
jecxz
cmc
xchg
xchg
mov
push
mov
nop
mov
hlt
push
mov
xchg
mov
push
mov
mov
or
ret
loope
ljmp
or
mov
mov
test
jne
pushf
push
dec
sbb
daa
incl
mov
aam
and
int3
addr16
add
lcall
enter
aad
scas
adc
jl
into
and
mov
loop
cmp
filds
sbb
sub
pandn
mulb
test
dec
xor
pop
sbb
mov
lds
mov
ss
xchg
sub
jb
iret
xchg
ja
push
nop
mov
xchg
pop
push
aas
incl
cmp
jmp
ss
fwait
and
or
stos
xchg
mov
dec
pop
push
call
pop
into
and
inc
push
lcall
sub
sub
aas
mov
sub
xor
arpl
push
or
cmc
inc
or
out
lds
shll
test
addr16
mov
mov
pop
push
repnz
mov
movzbl
pop
ret
fldcw
subb
pop
sbb
and
or
sub
and
out
xor
mov
adc
leave
repnz
repz
push
aas
jns
div
iret
add
xchg
adc
sti
mov
outsb
push
pushf
in
push
inc
pop
sbbl
repz
push
add
fwait
add
xor
lds
pop
and
pop
xchg
pop
dec
inc
jnp
jle
lods
jne
pop
pop
inc
sub
ss
aas
cmp
pop
in
mov
xchg
movsb
jnp
popa
xor
xor
sti
sbb
popa
add
pop
test
push
pop
icebp
in
fwait
inc
inc
mov
test
icebp
dec
mov
push
sahf
xor
sub
mov
xor
outsl
out
adc
nop
xlat
mov
add
cmp
add
mov
out
mov
pusha
pop
lods
clc
pop
in
inc
jmp
mov
fxch
sbbb
or
repnz
sahf
cwtl
pusha
into
leave
sar
xchg
out
movsb
fidivrl
repnz
lahf
popf
mov
stc
cmpsl
ret
arpl
sbb
adc
dec
ds
jae
cli
sbb
sub
push
fwait
mov
shl
dec
pop
dec
stc
int3
push
shl
shlb
and
jle
push
and
out
insb
pop
ret
sbb
les
int
stos
adc
shlb
sub
clc
mov
push
fistpll
mov
shlb
rcl
les
dec
cwtl
loop
stos
jecxz
push
fstpt
decl
dec
loopne
push
lock
adc
shll
xchg
jb
scas
stos
iret
rcll
jecxz
pop
mov
bound
jmp
xchg
adc
dec
fs
inc
sahf
mov
sbb
mov
inc
push
jmp
dec
mulb
rcr
mov
movsl
loop
jns
lea
lock
fdivrs
mov
jb
lcall
out
cmp
add
push
jbe
fmul
jo
sahf
icebp
inc
outsb
and
stos
vcvtdq2pd
int3
sub
mov
adc
stos
fistpll
cmp
xchg
jo
jle
sbb
inc
pushf
imul
fisttps
aad
sbb
dec
push
mov
dec
pop
dec
lahf
inc
fidivl
loopne
mov
push
mov
sub
and
test
jl
cmp
mov
xchg
addb
arpl
test
int
pop
push
pushf
stc
cmpsb
cli
xor
hlt
pop
and
loop
rcr
cli
cmc
dec
gs
leave
adc
cmp
out
hlt
mov
fwait
ret
stos
adc
add
jno
mov
aad
or
pop
and
xor
sub
and
fwait
pop
mov
scas
mov
push
js
jnp
sub
repnz
fistpl
inc
shll
int
in
imul
enter
ja
pushf
or
scas
xchg
adc
add
mov
dec
fs
test
mov
test
repz
mov
test
leave
iret
push
jge
sub
leave
sbb
and
xlat
push
adc
fcmovnbe
xor
mov
cltd
or
adc
js
adc
insb
dec
dec
pop
push
jbe
cmp
jae
test
inc
inc
push
fs
xchg
insb
or
pop
xor
sbb
test
jl
push
cld
pop
fsubrl
cltd
loopne
mov
mov
rolb
xor
loop
lahf
out
add
movsl
cmp
mov
subb
mov
movsl
sub
or
dec
ja
dec
sti
add
lods
push
mov
shl
decl
icebp
xor
or
mov
rorb
jb
add
xchg
loope
fwait
xchg
pop
push
leave
fsts
push
pop
xchg
dec
cmp
lock
pop
xlat
inc
lret
push
scas
jmp
addps
cs
pusha
xchg
xchg
int3
sub
jg
ret
shll
sbbl
cmpsl
sbb
shr
lock
ret
dec
enter
arpl
inc
scas
pop
mov
mov
cmp
cs
fildll
mov
pushf
mov
xchg
mov
rorb
xchg
bound
adc
xchg
scas
lea
xor
into
sub
outsl
ss
jmp
mov
push
fs
test
xchg
mov
sub
syscall
or
sbb
xchg
test
fwait
sub
mov
sub
sbb
xchg
notl
fisubl
sub
sbb
and
add
call
stos
cld
notl
pushf
dec
mov
add
xchg
jo
je
sub
pop
insl
and
mov
dec
and
mov
cld
fmull
add
addr16
std
sti
addr16
mov
cmp
fidivrs
scas
dec
pop
enter
inc
fsubp
mov
scas
roll
aas
push
fimuls
cmpsb
jge
cmpsl
hlt
push
cmp
pop
adc
jg
jns
in
ficoml
inc
push
mov
xchg
scas
movl
and
js
cmp
push
aas
pop
test
enter
aad
insb
jo
js
iret
mov
inc
stos
adc
lcall
jmp
es
shl
add
push
stos
pop
icebp
adc
and
scas
pop
lcall
loopne
call
cwtl
jnp
and
negl
pop
or
daa
dec
std
arpl
filds
cmp
insb
loopne
orb
push
js
push
rolb
jbe
enter
clc
shll
sbb
sbb
iret
fstps
xchg
and
ljmp
dec
cmc
cwtl
imul
push
out
mov
pusha
cmp
jp
xor
inc
test
xor
popf
xchg
dec
sub
jg
jno
xor
mov
enter
and
pop
pop
dec
gs
add
xchg
sahf
xlat
rclb
aad
add
data16
mov
mov
inc
sbb
shlb
xor
jnp
loope
adc
sbb
mov
cwtl
dec
loope
or
nop
push
mov
xlat
adc
and
xorb
sub
dec
dec
xchg
xor
jb
jae
mov
pop
dec
lds
pop
or
imul
lahf
loope
inc
jmp
mov
rorl
int
push
jno
in
out
xor
or
xchg
add
dec
or
js
adc
sbb
ljmp
adc
xchg
test
cwtl
mov
in
jns
xor
daa
aas
pushf
xor
dec
mov
test
ss
ret
mov
dec
addr16
das
scas
push
lea
xor
das
jp
xor
shll
lods
int3
pop
pushf
cmp
iret
rcll
pop
cld
xlat
and
sub
mov
into
mov
fwait
pop
push
sbb
jnp
sub
or
xor
callw
pop
pop
das
mov
xor
push
mov
scas
mov
xchg
inc
and
inc
inc
bound
ljmp
sbb
fcomps
pop
mov
xchg
das
xlat
jecxz
xchg
les
popa
lret
or
dec
out
int
add
cmp
adc
popa
stos
dec
ror
mov
jl
and
adc
mov
stc
std
sar
push
mov
fstl
mov
cmpb
scas
sub
mov
cmp
lret
shll
mov
jg
jecxz
cmpb
or
adc
lcall
arpl
jo
shll
iret
mov
in
xor
xor
dec
pushl
out
pop
ret
dec
fstps
mov
inc
push
and
push
sub
sbb
sbb
push
cmp
inc
push
push
xchg
sbb
leave
xchg
jp
outsb
push
adc
in
xlat
aaa
xchg
dec
pop
add
aaa
push
lock
xchg
cld
jnp
scas
or
mov
in
mov
rcrl
outsl
addr16
adc
xchg
xor
ja
fsts
fnstenv
adc
ret
stc
sub
xchg
test
push
push
sti
mov
pop
lahf
insl
movsl
shll
ret
imul
sub
aad
dec
out
dec
xchg
sub
pop
mov
orb
adc
mov
jnp
pop
cmp
xor
and
mov
cmpsl
loopne
mov
fidivl
popf
or
clc
aad
fwait
add
cmc
xlat
inc
fsub
fs
fucomip
enter
pushf
shll
pop
jp
xlat
xlat
ja
dec
vmaxss
sti
scas
sbb
add
jae
repnz
fstl
sbb
mov
xchg
mov
mov
inc
inc
mov
mov
es
xchg
out
cmc
mov
fisubrl
bound
mov
sub
frndint
cmc
sarb
inc
xchg
xchg
ret
mov
dec
jnp
loope
inc
and
lock
jl
rcrl
xor
cmc
push
dec
ret
mov
add
test
int
push
mov
inc
pushf
fs
and
xchg
xchg
push
jnp
iret
sub
sbb
jo
and
sub
pop
sbb
ljmp
pusha
andl
sbb
mov
and
xor
lret
cmp
daa
jmp
in
loop
mov
mov
pop
popf
aas
arpl
push
cmp
call
cltd
cltd
mov
sub
xchg
lods
mov
sbb
add
pushl
cmp
mov
inc
xchg
call
xlat
stos
add
aad
add
or
ret
subb
aam
xor
les
sahf
cmpsl
cmp
mov
pushf
stos
pop
xor
fisubrs
mov
pop
mov
in
stos
push
aam
cmp
hlt
pop
xor
rcll
jnp
sub
push
adc
test
push
imulb
movsb
stc
jb
jo
icebp
mov
in
mov
adc
pop
mov
lods
add
cs
push
pop
cltd
mov
and
mov
in
or
push
sbb
insb
iret
xchg
das
mov
aam
jae
mov
pop
push
xor
loopne
adc
fwait
mov
push
mulb
xor
push
test
fdivrl
cmp
fidivl
cs
or
aas
cmp
jecxz
outsl
or
or
rorb
imul
xchg
popa
push
shll
ja
pop
stc
es
mov
lods
lods
add
sbb
inc
dec
lods
mov
loope
dec
mov
push
inc
inc
mov
icebp
add
mov
lahf
fimull
or
xchg
imul
mov
test
ja
sbbb
out
add
sub
xchg
sub
scas
loope
and
or
outsb
push
dec
mov
loopne
push
outsb
adc
xchg
push
and
mov
in
mov
mov
gs
mov
jp
xorb
das
aad
faddl
adc
mov
sti
lods
iret
popf
test
adc
jecxz
ret
bound
stc
pop
and
movswl
mov
mov
rorb
sub
mov
fildl
jb
xor
in
push
pop
out
cld
mov
into
sbb
subb
add
test
fldt
jmp
cmp
lds
or
lock
iret
lock
movsb
mov
pop
or
cmpsb
mov
mov
les
rcrl
jbe
scas
add
dec
or
fs
pop
pop
mov
popf
xchg
xor
pop
jae
and
insl
adc
or
xor
mov
rolb
fsubr
jne
in
xchg
push
inc
test
sbb
mov
clc
sahf
sub
lods
cmp
subl
inc
pop
cmpsl
sbb
sbb
jb
mov
mov
ret
mov
fsubp
adc
popf
scas
repnz
lret
inc
test
or
repz
cmp
cmp
inc
jp
scas
roll
pop
sahf
ret
add
sti
mov
aas
mov
push
gs
fimuls
aas
xor
adc
cld
push
sbbl
dec
sbb
icebp
mov
loop
jnp
fists
lahf
dec
lahf
call
jge
std
imul
outsl
fadds
mov
cs
mov
add
daa
sti
push
add
cld
les
or
jecxz
ret
pusha
insl
sarl
jbe
ret
sbb
pop
shr
jne
fsubrs
cwtl
ja
xchg
rorl
fstps
fldl
add
out
xor
je
mov
nop
sub
dec
cmp
iret
jmp
mov
lds
push
aam
popa
mov
cmp
cmp
enter
xchg
in
aaa
jne
dec
out
inc
sarl
add
adc
mov
popf
mov
fistpll
jmp
movsb
mov
xchg
inc
inc
cli
jp
clc
stos
in
mov
aad
or
dec
daa
clc
mov
inc
jbe
arpl
movsl
out
stos
out
and
loope
test
subl
sub
andb
xchg
cs
cs
jno
rorl
out
test
adc
mov
shr
loopne
in
hlt
lock
mov
inc
test
ffree
sub
xchg
hlt
push
fsub
call
adc
das
xlat
adc
push
pop
sahf
stc
xor
pop
loop
add
imul
int3
inc
popf
scas
fcoms
dec
cmp
leave
push
add
mov
dec
push
ja
imul
ror
aam
stc
fistpl
sub
jle
cmp
and
loopne
inc
push
mov
push
push
push
push
ret
bnd
jge
xor
jnp
jl
div
dec
pop
jae
fstpl
movsl
mov
cmpsb
cmp
jp
and
push
fs
xchg
test
stos
mov
add
add
xchg
std
mov
ret
push
in
mov
pop
sbb
push
sbb
jl
sbb
jne
cmpb
fstps
dec
mov
lahf
pop
sahf
xor
stc
or
dec
mov
test
push
xlat
mov
addr16
loop
gs
aad
aas
jne
insl
fiadds
jb
lahf
imul
adc
shll
xor
jle
or
and
loop
icebp
pop
add
jbe
sub
cs
adc
xacquire
sarl
jg
imul
test
fcmovu
push
jae
dec
push
mov
sahf
xchg
js
rolb
cmp
mov
ret
enter
xchg
jo
xorb
mov
cmp
cli
sub
pusha
jecxz
loop
or
mov
add
xchg
testb
out
push
mov
sub
sti
push
pop
cmp
inc
jo
lods
fs
unpcklps
les
fdivrl
jae
push
gs
imul
adc
push
jns
xor
int
lds
xchg
ret
and
fsts
sub
xchg
cmpsb
mov
cli
lds
lret
sbb
aam
lock
inc
pop
jge
lret
dec
std
inc
lahf
xor
mov
sti
test
xchg
mov
and
outsl
sub
mov
fcoml
clc
push
adc
cli
add
and
imul
fistps
fildl
mov
enter
pop
mov
mov
in
lea
fistpl
mov
inc
movl
and
xchg
ss
cmp
addr16
ds
and
xchg
inc
push
mov
shlb
sub
enter
jp
daa
stc
inc
sub
dec
push
popf
add
into
sbb
or
insl
add
mov
scas
adc
jae
dec
sbb
test
push
adc
pop
je
insb
insb
jo
push
adcl
mov
mov
sub
jns
inc
shlb
sahf
loopne
movsb
add
cmpsb
cltd
push
xchg
aam
add
rcr
or
cmp
inc
inc
dec
push
and
sahf
push
jno
fldl2t
stc
jge
cmpsb
mov
testl
dec
andl
jmp
or
add
pop
loopne
adcl
std
pop
adc
lods
push
mov
dec
fisubrl
ljmp
out
shll
xor
int
cmp
ja
das
jae
into
icebp
loope
xor
daa
sbbb
mov
fcomps
in
mov
fdivr
or
test
xor
push
xor
rorb
jmp
push
mov
cmp
xchg
cwtl
push
aam
inc
push
add
mov
push
dec
pop
outsl
aam
mov
sbb
sub
in
mov
sub
int
or
outsb
push
ds
jbe
hlt
call
xchg
and
in
sub
xchg
repz
pop
adc
adc
rcll
popf
push
mov
leave
sbb
push
adc
sub
cmp
into
mov
insl
sub
into
rol
and
inc
pop
test
ds
lock
jge
lds
cld
scas
push
jno
pop
or
adc
ficoml
jmp
and
imul
fsubp
sub
insl
rclb
es
out
cld
pop
sbb
out
inc
ds
repnz
xchg
adc
push
sub
or
mov
mov
dec
addr16
mov
loope
jnp
sbb
cmpsl
aaa
imul
lock
popa
cmp
mov
push
mov
mov
call
xchg
rcll
inc
dec
icebp
loop
jne
shl
mov
iret
pushl
xor
dec
popf
insb
inc
mov
pop
jmp
sub
arpl
not
call
test
mov
es
xchg
xchg
cmp
cli
xorb
jnp
das
mov
mov
mov
rcl
jp
or
addr16
shll
add
mov
mov
stc
cmpsb
cmp
mov
daa
enter
mov
xlat
insb
stc
inc
push
inc
data16
dec
jg
pop
shl
pop
mov
les
cld
add
sbb
pop
add
add
loope
movsl
sub
cmc
jl
push
ret
sarl
add
mov
mov
xor
push
mov
add
incb
dec
mov
sti
in
mov
incl
fildl
les
mov
xchg
out
mov
fsubrl
inc
rorb
jno
dec
daa
jge
cld
fistpll
loope
push
inc
jmp
sub
sub
mov
add
mov
test
jne
sub
dec
cmp
stc
cmp
push
sarb
xchg
push
and
int
outsl
aad
nop
call
repnz
mov
les
xlat
adc
out
add
addr16
pop
ljmp
xor
movsb
inc
pop
fcoml
enter
sar
js
adc
add
mov
cmp
dec
dec
stos
enter
pusha
fsubrl
sarw
andb
fs
daa
call
inc
sbb
xchg
jl
loopne
js
repnz
mov
mov
int
or
push
sub
add
xchg
push
popa
ja
sbb
js
xor
lret
xchg
jecxz
loop
scas
in
sti
jle
int3
sbb
lret
pop
cmp
xor
inc
icebp
xchg
stc
scas
sub
mov
scas
or
push
repz
fcomip
cmpsb
pop
mov
sbb
xchg
insb
or
lea
cld
xorb
mov
mov
jnp
cli
in
pop
orl
or
mov
insb
push
scas
mov
loope
dec
sbb
mov
jge
daa
adcb
cli
cld
andl
outsb
xchg
push
jle
push
jae
test
dec
jl
and
pop
mov
cmp
xchg
pushf
dec
sub
and
aam
ss
pop
aaa
sbb
mov
rcl
mov
and
test
dec
aaa
sub
jno
mov
sub
pop
dec
mov
aam
dec
jae
aam
adc
addl
imul
sub
xor
rcr
push
jle
inc
inc
mov
pop
fbstp
test
bnd
testb
cmpsb
pop
je
data16
and
cli
daa
cmpsl
js
pop
add
lahf
mov
sub
pop
lret
jecxz
icebp
dec
test
dec
jae
jg
inc
fwait
mov
or
ljmp
test
push
jb
push
outsl
push
and
cmpsb
jp
sbb
int3
loope
sbb
mov
xor
mov
les
jg
fdivr
push
int3
loope
jecxz
adc
jmp
xor
jnp
out
add
lret
inc
sub
cmp
call
imul
movl
cmp
or
ret
gs
ljmp
jmp
mov
cmp
or
push
test
orl
jae
push
ljmp
sbb
scas
jbe
jp
fdivrs
repz
sbb
sbb
mov
cmp
mov
bound
xchg
popa
arpl
subl
pop
or
ret
push
jp
js
repz
in
sub
loop
in
out
lods
movsl
cmp
adc
sahf
xor
jp
mov
lret
mov
sarb
test
adc
push
xor
ss
sub
pushf
sub
mov
cmc
js
mov
dec
insb
xchg
pop
mov
add
push
ja
xchg
outsl
adc
and
xor
and
sbb
in
cmpsl
sub
int
cli
adc
fldcw
add
cld
ss
stos
push
lods
mov
sbb
hlt
daa
rep
jno
push
aam
cwtl
dec
leave
fldcw
int3
cmpsl
jecxz
inc
pop
mov
je
mov
push
loopne
mov
mov
out
adc
pop
or
call
and
psrld
push
push
popf
fmull
movsb
aad
hlt
fiadds
aad
and
push
mov
das
pop
ss
ret
push
add
mov
inc
or
add
rcrb
mov
push
js
or
outsl
es
push
lods
pop
daa
fisubl
or
mov
mov
jne
mov
in
mov
jbe
push
into
imulb
mov
out
repnz
pop
lds
into
aaa
imul
cltd
in
mov
enter
mov
arpl
sbb
mov
fisttps
or
sbb
mov
cmp
test
cmp
insb
push
cld
lds
mov
test
movsl
sub
push
cli
sbb
pop
or
popf
stos
inc
lcall
xlat
fmuls
push
cmp
cs
loop
imul
je
out
leave
mov
mov
mov
jg
xor
ret
xor
outsl
clc
or
movsl
imul
xor
mov
mov
add
pop
call
mov
fisubs
or
adc
std
fstps
test
sub
fisubrs
jns
xor
dec
xlat
shll
test
movsl
pop
mov
scas
mov
filds
js
into
fidivrs
rcrl
pop
lahf
adc
adc
pop
call
pop
out
jnp
mov
jo
stos
and
hlt
cmp
sub
or
push
fdivl
jle
out
shll
and
mov
jle
pop
cmp
mov
jg
std
shrl
jmp
pop
pop
mov
mov
inc
jge
fadds
dec
lret
add
sbb
dec
jo
pop
cmp
and
stos
ja
test
ljmp
lods
mov
jnp
adc
xchg
sti
loopne
cli
xor
cmpsb
push
into
jmp
cld
mov
cmpsb
mov
push
cmp
loope
xor
repz
pop
daa
jns
cld
inc
mov
push
pop
out
in
aaa
mov
shrb
repnz
jle
test
data16
dec
push
xchg
adc
inc
jns
icebp
mov
les
cmpsb
mov
push
add
or
ljmp
mov
sarl
pop
dec
pop
push
cmp
pop
pop
adc
inc
scas
movsl
jne
mov
fnstsw
lahf
ret
mov
pop
incl
jbe
jns
aas
repz
mov
adc
rolb
leave
push
xchg
outsl
pop
mov
xchg
in
push
sti
mov
rcrl
adc
das
xchg
push
movsb
lret
sbb
or
cmpb
pop
xor
mov
in
loop
cwtl
jne
pop
push
rcrb
pop
lea
sahf
xor
testb
jo
shrb
jne
push
cmpsb
cmp
jp
bound
int3
cmp
push
adc
idiv
popa
neg
ss
daa
divb
into
sbb
ret
pop
mov
cmp
jns
jg
adc
cmpsl
add
rorl
ret
jno
repnz
mov
or
jb
jge
push
fs
push
int3
cmp
jl
movsl
xchg
enter
push
loop
xor
add
out
and
ds
push
insl
adc
lret
into
mov
sub
outsl
sub
dec
mov
inc
int3
inc
nop
push
push
je
lret
jne
push
fisttpl
andl
fs
shr
ljmp
xchg
xlat
mov
sub
jecxz
pop
pushf
lds
push
andb
iret
mov
mov
dec
xor
inc
fidivrs
adc
jns
xchg
fbstp
pop
jns
ljmp
lcall
lea
or
push
test
pop
subl
in
fs
or
fildll
sbb
scas
xchg
rcrb
dec
insl
and
mov
or
arpl
adc
inc
shlb
xor
push
push
pop
jo
add
cmpsb
mov
xchg
pop
scas
dec
and
jecxz
cmp
jle
ja
push
pop
jo
xchg
xchg
loop
mov
sub
pusha
pop
mov
or
push
hlt
lods
sbb
and
mov
lock
or
ljmp
aas
xor
mov
dec
lods
cld
aaa
add
pop
insl
cmp
es
sahf
mov
dec
inc
mov
sub
cpuid
int3
stc
add
and
mov
mov
adc
cmp
testl
outsl
divb
dec
movsb
lret
enter
cmpsb
cld
mov
xchg
dec
stc
scas
rol
sahf
pop
add
ljmp
sahf
xor
aam
push
xlat
xchg
inc
repz
mov
mov
test
aas
mov
int3
push
pop
jnp
cmp
mov
imul
pop
mov
xorl
dec
and
aas
std
xor
cmpsb
and
mov
arpl
jle
addr16
in
adc
push
mov
andb
jl
sbb
in
sbb
push
cli
loopne
test
mov
cltd
dec
cmp
movsb
cmp
pop
clc
decb
aaa
and
outsl
jno
sbb
mov
lock
cmpsb
fidivs
jns
xchg
in
call
lods
pop
and
inc
movsb
test
mov
sub
push
cmc
ret
inc
lds
sbb
mov
ret
insb
mov
movsl
sbb
push
add
xchg
mov
xor
and
mov
adc
sub
sbbl
fnsetpm(287
nop
int3
push
test
and
lahf
push
fs
movsl
push
roll
mov
fstpl
fs
pop
out
push
stos
outsb
insb
cmp
stc
test
icebp
leave
inc
repnz
pop
xor
cmpsb
push
scas
jne
mov
sub
push
adc
addr16
pop
lds
or
jl
jo
es
inc
cld
or
sbb
xor
sub
cmp
rorb
call
fwait
mov
enter
fistpl
mov
pop
rcr
int3
mov
in
lret
clc
cmp
ja
test
sbb
inc
cmp
and
orb
push
mov
aas
stc
mov
adc
xor
sti
fisttpl
jnp
lods
mov
cli
and
scas
cmp
inc
lods
sbbb
test
in
adc
dec
mov
lcall
jae
add
dec
sbb
outsl
lahf
pop
push
or
jnp
lahf
test
sbb
sub
in
std
jo
xchg
push
pushw
cltd
inc
xor
mov
sbb
leave
cmpsb
sti
sbb
push
cmc
mov
shrb
inc
fadds
mov
idivl
fistl
cmp
rcll
xor
data16
rcr
iret
test
jg
into
lea
popf
pusha
cmp
mov
pop
sti
push
pop
ret
insl
lret
adc
mov
adc
fdivp
dec
inc
jae
sub
lret
jns
push
mov
movsb
and
pop
xrelease
aas
mov
cwtl
push
xchg
mov
mov
scas
or
rorl
inc
jnp
and
mov
test
mov
outsl
and
mov
repnz
sbb
fbstp
sub
xchg
cli
pop
es
fwait
cwtl
dec
push
cmp
test
lods
mov
mov
sti
cli
int
jbe
sub
es
push
je
adc
outsl
add
lock
mov
aad
mov
popl
mov
std
cs
ret
cmp
xchg
icebp
arpl
aad
popa
hlt
repz
inc
bound
mov
mov
into
fildl
dec
inc
shll
in
in
jg
fistps
icebp
pop
aad
mov
mov
add
lods
push
scas
sub
cld
and
and
lahf
ret
pop
mov
rorb
jle
jp
ficomps
sub
scas
test
pop
data16
or
sbb
adc
cmpsb
fdivr
lret
imull
sbb
adc
cld
pop
sub
jnp
jns
sub
and
push
sub
sbb
mov
cli
lods
jle
sub
xchg
in
sub
xchg
and
insb
xchg
mov
out
lret
pusha
stos
xchg
fnstcw
xchg
cwtl
xchg
popf
push
cli
xorb
push
xor
les
xchg
jle
jns
scas
add
outsl
les
lea
enter
hlt
mov
push
adc
aas
pop
inc
sbb
addr16
mov
inc
sub
add
lock
sub
and
clc
lock
adcl
xor
icebp
scas
inc
test
xor
xchg
insb
mov
nop
fxtract
sbb
sbb
adc
call
xor
lods
popa
mov
xchg
xor
xchg
or
jge
and
inc
sbb
pop
insb
out
aam
jl
icebp
aas
pop
mov
mov
cmpb
imul
inc
jno
mov
scas
adc
xor
mov
jbe
inc
sbb
imulb
push
mov
lds
push
push
aad
outsl
leave
mov
jbe
xchg
leave
sbb
sbbb
xor
xorl
jnp
sub
mov
sub
push
xchg
leave
jle
stos
sbbl
std
ja
cmp
push
clc
adc
jp
pop
add
idivb
sbb
dec
aas
sub
movsb
es
jge
dec
das
push
jbe
jbe
les
jnp
mov
push
pop
mov
movsl
jecxz
cmp
xchg
clc
cmp
inc
inc
xlat
out
cmp
or
fs
add
insl
out
imul
jmp
cld
popf
add
inc
jae
mulb
lcall
inc
jecxz
fsubrs
dec
push
pop
cmpsl
mov
push
sub
sbb
mov
enter
into
add
xchg
jo
add
sbb
pop
push
dec
rolb
mov
sbbb
dec
rcrb
adc
loope
ret
adc
xchg
or
jnp
xor
inc
pop
popf
inc
les
xor
fldcw
outsb
call
shrb
pushf
dec
ret
hlt
mov
fbstp
sbb
xchg
push
gs
mov
dec
je
jp
mov
sub
lds
xchg
bound
call
cmpsb
jl
sti
push
jne
jbe
mov
add
mov
ja
add
push
jb
jbe
std
out
lds
test
cld
out
fisubs
mov
test
daa
push
decl
adc
rcrl
and
pop
jp
adc
aas
imul
icebp
mov
cmp
aad
dec
xchg
in
or
lahf
hlt
or
mov
call
iret
sub
and
xchg
sbb
pop
xorb
loope
lock
push
mov
das
mov
fwait
clc
pop
outsl
lcall
jnp
lock
insb
out
xchg
aaa
sbb
mov
jnp
jb
loopne
idivl
xor
push
addr16
and
fstpt
clc
inc
les
rorb
pusha
movsl
add
jle
aaa
mov
in
inc
mov
pop
mov
inc
mov
adc
fcompl
enter
insl
dec
hlt
cltd
les
push
mov
rcrb
fsubl
sub
dec
jge
fisubrs
or
lods
movsb
mov
add
mov
push
xor
sbbl
push
mov
add
xchg
outsb
fisubrs
cs
pop
clc
adc
mov
mov
dec
test
stos
mov
pop
jnp
pop
sbb
ja
and
sahf
sub
cli
arpl
fs
in
aam
jnp
int
stc
jmp
enter
xchg
xchg
stos
js
scas
loopne,pn
outsb
xor
inc
daa
cmp
push
mov
in
jl
int3
pop
xchg
lods
test
js
dec
dec
dec
nop
inc
testb
sub
sbb
push
or
or
xchg
xchg
push
mov
arpl
pop
in
add
aad
icebp
or
fs
push
test
push
shl
test
add
pop
or
lahf
xor
sub
out
pop
leave
cmp
adc
test
shll
jae
push
dec
sbb
cltd
out
xor
mov
ja
lcall
mov
inc
sub
mov
test
in
ja
add
orb
mov
in
ja
jb
int3
imul
testb
insl
sbb
lret
mov
clc
and
xor
cmp
ss
enter
cltd
mov
imul
call
or
sub
les
or
outsl
daa
out
xchg
cmp
jne
in
push
aad
loopne
testl
inc
insb
out
mov
push
push
or
inc
out
inc
sub
sarl
cmp
add
cmc
addr16
cmp
or
mov
ffreep
scas
jbe
sbb
nop
adc
pop
adc
stos
ret
cltd
dec
and
mov
add
mov
aad
xlat
mov
in
repz
repnz
movsl
mov
sub
lea
aaa
insb
clc
xchg
mov
cli
cmpsl
pop
add
aaa
push
push
imul
out
lahf
adc
cmp
push
ja
pop
push
dec
and
out
shl
add
mov
xchg
cmpsl
mov
xor
test
test
pop
mov
and
sarb
popf
push
orb
and
sbb
fisubs
lret
sbb
mov
incb
fiadds
or
notb
push
sbbl
sbb
popf
push
aad
mov
sub
insb
fbld
je
mov
jmp
sbb
aaa
xor
popf
mov
pop
mov
les
inc
xchg
rcll
andps
out
in
pop
lods
jmp
ret
arpl
dec
out
push
push
dec
mov
inc
pop
mov
fs
loope
sub
pop
aaa
shrb
mov
push
sub
xchg
xchg
into
fidivrl
jle
mov
dec
fisubrs
mov
pop
xor
outsl
lock
into
mov
das
adc
jns
mov
int
pop
dec
xor
push
es
jno
out
cmpsl
xlat
fs
adc
lret
sbb
call
inc
cltd
repz
pop
int
add
mov
xor
mov
sbb
pop
cmp
jb
jno
out
es
sub
jecxz
gs
andl
and
cld
ds
or
fs
pop
xchg
loop
imul
aaa
mov
mov
jl
sbbl
outsb
imul
push
pop
pop
fwait
jl
sbb
test
add
mov
adc
mov
ja
mov
sbb
mov
push
mov
in
and
or
add
insb
mov
lods
mov
and
and
dec
js
imul
sahf
stc
mov
das
adc
in
sub
jp
inc
insb
cltd
push
adc
jns
inc
inc
adc
xor
ljmp
fidivl
and
mov
and
fwait
jbe
in
mov
cmp
mov
or
loope
cmp
popa
and
int
pusha
push
jne
and
mov
and
outsb
out
div
push
js
xor
mov
out
cmp
mov
and
pop
mov
xchg
push
or
adc
into
jbe
fcoml
and
ret
cli
mov
and
out
js
addr16
ss
cmpsb
cli
ja
hlt
mov
sbb
push
aad
add
xchg
cwtl
and
jns
sub
push
jmp
or
adc
nop
icebp
sbb
dec
fwait
lret
pushf
stc
inc
inc
ljmp
scas
dec
mov
dec
sub
push
mov
lahf
loope,pt
dec
pushf
movsbl
pop
loop
mov
pop
ljmp
push
dec
pop
mov
pop
fdivrl
jnp
int3
adc
pusha
pop
jo
pop
bnd
cmp
inc
int
pop
sub
fadds
inc
in
fadd
xchg
mov
xchg
xorb
cmp
mov
or
inc
or
mov
add
or
xchg
dec
mul
sbb
inc
add
xor
mov
and
xor
mov
jp
sahf
pop
mov
shlb
mov
lods
sbb
adc
popf
xchg
and
cmc
ret
xlat
fmuls
jmp
jo
add
daa
mov
sub
jg
gs
xor
call
xlat
sysenter
cmpl
cmc
ljmp
mov
arpl
and
jnp
pushl
ljmp
sbb
gs
dec
mov
ss
mov
pop
jmp
add
xchg
cmpsl
or
mov
sbb
repz
push
aaa
mov
pop
pop
mov
fisubrl
dec
scas
mov
js
insl
lret
int
stc
sub
psubb
cltd
icebp
sbb
jle
add
cmpsl
repnz
xchg
decb
dec
inc
adc
add
xchg
add
in
iret
fnsave
xchg
pop
xor
enter
mov
or
mov
or
push
mov
int3
out
push
push
mov
std
test
shlb
test
mov
jns
cmp
mov
pop
push
mov
stos
fwait
add
fstpt
call
adc
cwtl
xor
add
mov
loop
aam
xchg
fs
add
pusha
sahf
mov
imul
scas
inc
jns
andl
sbb
xchg
arpl
jo
xchg
iret
add
inc
dec
negl
out
cmp
dec
adc
imul
jae
pop
loop
cmp
inc
mov
fisubrs
insb
ja
push
mov
jmp
lahf
push
add
addr16
dec
ss
cmpsb
iret
mov
fstps
sar
scas
shr
pop
mov
mov
enter
lds
int3
dec
jmp
fwait
into
fbstp
cmp
inc
xchg
lock
scas
jp
mov
pop
xchg
mov
rolb
push
ljmp
mov
movsl
push
inc
push
out
sub
or
sar
sub
lcall
add
pop
aas
stc
scas
sub
jl
jbe
push
mov
mov
call
xchg
fwait
test
aad
xor
adc
pop
mov
inc
mov
sub
or
jb
in
lcall
pop
sahf
enter
xchg
stos
jae
dec
sarl
push
xor
and
inc
mov
cwtl
sub
jecxz
psrlq
add
lret
js
sahf
cmpl
cwtl
ljmp
sarb
loopne
sahf
pop
inc
sbb
inc
fdivrs
sub
cmpsb
les
lock
ja
sar
cmp
rclb
cmc
push
aaa
ja
testb
lahf
cmc
jbe
mov
mov
insl
fmuls
mov
lock
test
mov
jae
pushl
faddl
rorb
stc
xor
cwtl
xchg
int3
hlt
movsl
adc
pop
test
xlat
hlt
pop
aad
test
pop
nop
movb
mov
or
and
push
bound
outsl
pop
push
cltd
sub
and
and
jns
pop
faddl
pop
in
stos
cmc
decb
out
jo
je
or
clc
inc
mov
push
enter
scas
inc
xchg
lret
daa
sub
sub
adc
mov
lcall
into
ds
idivl
ja
jmp
loopne
jae
xor
lds
ja
pop
sub
cmp
push
test
xchg
stc
cmp
add
fisttpl
imul
fistl
es
lret
je
push
in
push
dec
lahf
cmpsb
mov
aaa
stos
sub
inc
jmp
insl
dec
gs
out
sub
inc
clc
mov
test
pushf
imul
add
and
mov
movsb
jb
dec
xorl
pop
push
icebp
pop
dec
mov
jle
mov
stos
fsubs
dec
pop
lock
mov
cmpsl
cmp
mov
ljmp
mov
test
xor
outsl
fists
xor
rorb
add
insl
xchg
int3
enter
xor
jne
repnz
jmp
setnp
inc
fildl
xlat
fldl
shrl
les
push
cmc
jmp
sti
mov
dec
dec
push
aad
cwtl
mov
popa
sbb
in
push
mov
shr
je
mov
adc
movsb
sbb
repnz
scas
push
sub
faddl
inc
sub
mov
rcll
loop
push
cmpsl
lea
divl
jl
mov
inc
pop
pop
test
adc
xor
dec
sahf
leave
mov
mov
in
inc
dec
lret
pop
sbbl
arpl
pop
push
aas
sub
jmp
hlt
sub
add
adc
adc
sbb
loop
daa
jne
fldcw
pop
cs
xor
mov
js
adc
js
adc
xor
xchg
divb
sar
pop
stos
imul
popf
cmp
add
sub
addr16
sub
cmp
outsl
pop
jo
and
sarl
or
outsb
ss
stc
xchg
pop
sbb
and
xor
and
pop
mov
icebp
call
fstl
lds
fsubr
add
xlat
ljmp
push
jg
cmp
inc
jge
cli
iret
and
add
fs
push
out
idivl
mov
repz
mov
xchg
or
loopne
and
iret
fwait
sahf
xchg
push
mov
push
add
dec
call
lea
fnstsw
mov
fiadds
div
xchg
lods
and
mov
xor
sbb
xchg
and
orb
mov
loope
xchg
push
outsl
jbe
adc
outsb
mov
adc
cmpsl
insb
ja
sbb
sub
push
inc
bound
mov
or
sub
stos
cli
mov
adc
call
inc
sub
push
push
fcoml
or
push
pop
mov
or
movsl
inc
pop
pop
or
mov
das
scas
cmp
add
dec
callw
mov
imul
add
ror
das
cmp
cld
clc
gs
inc
adcl
rorl
pop
and
jge
inc
adc
into
push
je
movsl
mov
xor
je
scas
or
into
cs
inc
pop
xchg
cmpb
xor
das
insb
add
daa
fcompl
shl
int
sbb
arpl
ja
jnp
push
imul
je
mov
icebp
popa
or
cmp
add
xor
lret
das
and
mov
pop
sbb
std
ss
inc
add
jle
adc
cmp
roll
insl
pop
shl
sbb
sbb
ss
popa
repz
and
sub
int
xchg
pop
sub
enter
dec
mov
imul
cmp
sbb
fs
inc
jge
xor
cmp
mov
cmp
dec
xchg
cli
test
push
test
mov
fadds
pop
mov
in
movb
rcl
add
jnp
pop
inc
adc
repz
mov
inc
stos
adc
ficoml
jno
pop
dec
jnp
repz
adcl
dec
je
mov
sub
mov
mov
and
sbb
loop
sub
out
into
fisubs
aaa
cmpsb
xlat
das
imul
fwait
loope
arpl
jb
mov
nop
imul
aad
insb
pop
loope
out
push
xor
pop
xchg
or
cmp
call
jb
or
call
mov
xchg
add
jp
mov
arpl
fiadds
popa
jns
xor
inc
ss
adc
cmp
lret
sbb
mov
popf
lods
dec
jp
sbb
fsts
clc
mov
les
cmp
cmp
aam
dec
push
inc
mov
mov
sbb
sub
sbb
mov
or
arpl
enter
sub
or
or
out
rcrl
mov
add
cli
and
or
ret
icebp
jb
inc
imul
sub
lds
pop
sub
inc
mov
cmp
ficoml
mov
cmp
add
insb
clc
cli
fadd
and
stc
jmp
push
push
adc
mov
test
jecxz
xchg
lods
and
das
or
sbb
movsb
mov
and
lea
mov
xor
or
add
into
xlat
and
enter
sub
mov
xlat
divb
xchg
sahf
repnz
xorb
dec
push
loopne
mov
cmpsb
test
mov
push
rol
test
leave
mov
jo
xchg
jle
enter
xchg
daa
pop
in
addb
pop
movsl
xchg
xchg
mov
sahf
cmpsl
pushf
jo
cwtl
dec
das
enter
xchg
jne
cmc
push
loopne
xchg
ret
mov
dec
sarl
test
lret
lahf
lret
shlb
fldcw
sub
js
pop
lahf
inc
mov
xlat
add
sub
lfs
insb
lret
je
icebp
sbb
mov
fistl
pop
fldcw
sbb
stc
inc
stos
pop
in
xor
or
jne
fistps
jb
jmp
mov
mov
adc
push
mov
insl
lret
xor
jb
push
pop
jecxz
jne
add
cmp
jmp
cmp
mulb
dec
mov
sub
jmp
cmpsl
sub
xchg
push
xor
cmp
pop
xchg
xor
and
gs
inc
sbb
loope
push
idivl
sub
xchg
outsl
pusha
mov
and
xor
aaa
test
flds
mov
das
aam
shrb
sub
lret
lret
je
xchg
pop
mov
jb
mov
and
aam
push
sub
mov
sbb
add
sub
and
jmp
or
repnz
sub
add
mov
lea
or
adc
xor
mov
add
stc
stos
arpl
and
sbb
xlat
or
and
cmpl
test
pushf
outsb
dec
in
push
out
lret
push
cmp
call
daa
stos
fdivrs
mulb
cmpsb
faddl
dec
pusha
dec
push
stos
xor
test
push
jb
hlt
push
arpl
push
sub
lcall
into
push
mov
outsb
ja
fcom
fisttpll
les
dec
and
in
pop
mov
mov
xor
shrl
arpl
rorb
add
divb
inc
xor
in
or
arpl
loope
push
xchg
std
cmp
push
push
mov
push
inc
loope
in
rcrb
fdivrs
cmp
and
scas
out
repnz
ret
les
jg
sbb
inc
xor
out
push
aam
inc
pmulhw
inc
popa
movsl
mov
inc
std
mov
sbb
push
faddl
lea
int3
cmp
cwtl
inc
hlt
fcmove
xchg
ret
push
xor
dec
xchg
mov
shrb
or
mov
js
rcrb
mov
sub
pop
cmp
repz
nop
dec
cmp
into
in
sbb
movsb
je
pop
add
mov
pop
das
stos
pop
adc
cwtl
and
clc
arpl
addr16
jecxz
rcl
push
push
aad
xor
sbb
jle
push
xor
dec
stos
mov
pushf
xchg
xchg
add
mov
pop
cmpsb
mov
sbb
out
ja
mov
pop
pop
push
in
stos
sbbb
jge
sar
insl
scas
imul
mov
jnp
pop
cmp
lret
out
testb
sbb
adcb
sbb
cwtl
xchg
cwtl
frstor
mov
or
push
cwtl
cmp
hlt
out
cmp
dec
push
aad
inc
divl
imul
mov
inc
decl
dec
sti
gs
pop
jg
stos
xor
ficoml
daa
mov
in
mov
adc
cli
into
pop
sub
jns
cmp
imul
mov
sub
fs
dec
ja
sti
mov
lcall
repnz
fwait
cmc
aaa
mov
lds
insl
push
sbb
lock
dec
hlt
mov
insl
cld
dec
enter
mov
outsb
push
test
or
lea
pop
and
mov
pusha
addl
inc
stos
push
mov
xchg
cmp
pop
test
stc
pushf
mov
fldl
fs
push
popa
jnp
loopne,pt
cmp
clc
xorl
dec
hlt
push
mov
rclb
jle
in
cmc
icebp
in
adc
insb
or
andb
std
adc
adc
les
arpl
test
add
mov
pusha
sub
fcoms
test
xchg
jmp
imul
add
inc
xchg
jns
repz
add
jmp
std
dec
call
xchg
fnstcw
iret
cwtl
cmc
cltd
mov
sub
shlb
test
repz
data16
pop
stos
jge
mov
pop
cmp
sbb
cmp
dec
pushf
inc
mov
jg
test
xchg
arpl
imul
insl
es
jmp
lahf
xor
ret
push
or
push
aaa
dec
fwait
mov
fwait
pop
sbb
clc
pop
sarb
mov
and
dec
pop
in
mov
lds
cmc
lret
jns
int
mov
add
js
shll
cmp
or
cltd
pop
dec
jge
leave
jmp
xchg
xor
fs
out
inc
xchg
sbb
jge
mov
lds
gs
mov
dec
mov
movsb
mov
pop
push
sar
sub
push
arpl
pop
dec
gs
gs
movsl
jmp
insl
pop
jmp
loop
cltd
lock
adc
rcrb
dec
mov
fcoml
rcrl
xchg
lods
fistl
lods
pop
fistpll
add
inc
sbb
mov
cmp
cmpsl
in
cmp
clc
lods
iret
iret
ret
add
int
movsb
cltd
lret
shll
inc
push
orb
xor
outsb
dec
popa
out
jne
mov
mov
into
cmpsl
sub
cmp
sbb
imul
fdivrs
adc
or
sbb
sahf
mov
add
andl
ja
xchg
sub
or
movsb
xor
adc
int3
and
in
aas
mov
jbe
ja
push
or
scas
and
fnsave
shll
push
pop
addb
push
mov
loopne
sti
xchg
jmp
ss
sbb
cmp
jg
stos
shlb
add
leave
pop
push
sahf
and
enter
outsb
xchg
rcrb
xchg
roll
add
pop
les
ret
push
out
pop
arpl
popa
repnz
scas
xchg
mov
das
ret
jge
cli
out
lahf
repz
ds
das
stos
xor
mov
xor
cmp
call
out
loopne
and
rol
aam
inc
in
dec
jle
and
xor
cmp
test
mov
je
mov
sub
rorb
jns
pop
xchg
xor
leave
out
add
xchg
imul
iret
xor
mov
cli
mov
xchg
sbbl
shrb
div
and
jg
inc
ficoms
jmp
xchg
inc
mov
sti
pop
dec
imul
fdivr
jl
push
int3
adc
imul
xor
lods
xor
sbb
dec
mov
cmp
fistpl
push
stos
test
nop
xor
push
imul
fistps
cmpl
nop
adc
or
cmpsb
insl
int3
push
mov
insl
je
add
jb
call
loopne
insb
add
in
scas
imul
aad
push
jp
cmp
xchg
mov
ror
sti
pop
in
mov
cmp
cmpsl
cli
dec
mov
dec
add
dec
jecxz
cmp
fimuls
jno
jo
add
dec
rcr
lret
daa
sarb
movsl
divl
add
or
adc
sub
ljmp
sub
jle
ret
cld
pop
clc
rclb
dec
in
or
flds
sbb
scas
test
fldenv
add
in
das
push
push
ljmp
jle
popa
mov
bound
push
movups
test
fdivrs
mov
sbb
lcall
aaa
sarl
mov
or
enter
loop
insl
pop
pushf
push
cwtl
and
pop
or
push
jge
adc
fs
dec
insl
dec
mov
adc
pusha
inc
jno
or
imul
adc
mov
fstl
xchg
cmp
test
jl
aas
mov
mov
adc
aam
loopne
stos
pop
push
test
jge
jp
cmpsb
fsts
loope
push
jne
lods
jg,pt
sbb
jmp
stos
shr
out
dec
mov
xlat
cltd
jno
cmc
mov
pop
sbbb
inc
fs
in
dec
mov
mov
fucom
mov
sbb
push
insb
lahf
popa
or
hlt
add
adc
inc
insb
mov
xor
shlb
or
icebp
mov
xor
addr16
imul
popl
lcall
psrlw
sahf
cmpsb
out
repz
out
push
hlt
adc
loop
shrb
insb
mov
enter
adc
jb
xchg
mov
in
shrb
jge
imul
jae
jne
inc
jecxz
popl
inc
mov
out
cmpsl
mulb
cli
xchg
out
mov
xchg
or
hlt
scas
stos
cwtl
dec
mov
mov
push
test
fadd
out
fwait
enter
xchg
fistl
mov
sbb
and
dec
or
jae
sti
or
lcall
push
sub
lret
lods
xor
scas
adc
jmp
push
scas
pop
xchg
shll
pop
stos
mov
push
or
inc
fs
shlb
or
popa
icebp
mov
imul
jecxz
cmpl
fists
xchg
add
mov
dec
call
cmp
mov
hlt
cmpsl
sarl
lret
xchg
sarb
nop
cmp
and
adc
not
sti
sbb
mov
cli
daa
dec
addl
out
xor
sub
sahf
xchg
lret
out
sahf
xor
daa
cltd
jns
cmp
adc
xchg
cmpsl
fidivrs
ljmp
into
test
jb
shr
push
add
add
jge
mov
mov
aam
add
cmc
jns
and
sub
cmpb
scas
stc
loopne
inc
xor
push
mov
lret
push
sub
jmp
loope
sub
cltd
and
inc
cmc
test
cltd
imul
and
std
inc
shl
add
sub
adc
es
sub
aam
pushf
cmpsl
fimull
pop
and
and
icebp
mov
pop
sub
pop
icebp
inc
out
test
jbe
push
repz
sar
ret
fldcw
and
cmp
aaa
xor
sbb
pop
jae
xchg
add
inc
cs
or
subl
add
inc
add
cs
add
nop
mov
fstl
out
xor
jecxz
mov
mov
adc
movsl
mov
outsb
arpl
sub
rcll
sbb
jbe
mov
mov
mov
scas
pop
lods
xlat
imul
xor
notl
leave
pop
jmp
mov
xor
out
jmp
add
outsl
sahf
out
mov
and
sub
pop
mov
pop
sub
arpl
movsl
sbb
sbb
imul
mov
cmp
ror
adc
mov
mov
jne
cmc
dec
dec
xchg
ficomps
lahf
dec
lea
jle
xchg
lods
lahf
data16
mov
add
lahf
dec
fld
push
push
lds
das
push
scas
mov
repnz
cmpsl
fisubl
lock
pop
or
push
xchg
test
and
mov
dec
inc
dec
sub
adc
pop
test
or
pop
add
add
mov
push
jle
fs
xor
lea
and
jne
addb
and
aam
int
lods
vcvtss2sd
iret
loopne
lret
xor
les
push
jg
rcl
cli
mov
mov
stc
mov
outsl
imul
dec
push
or
and
stos
icebp
into
push
or
shll
mov
aad
sub
ljmp
jg
clc
mov
mov
inc
fbld
add
sbb
test
and
loop
pop
imul
cmp
cmpsl
pop
addb
sub
into
inc
test
mov
push
pop
psubsb
inc
aam
movsl
xor
and
movsb
adc
cld
mov
mov
and
push
pop
mov
inc
inc
mov
lahf
xchg
mov
insb
dec
sub
fldcw
xchg
inc
mov
cld
push
scas
nop
repnz
les
mov
popf
lods
pop
clc
cmp
loope
sbb
mov
out
cmp
jl
test
jmp
int
add
xchg
fcomps
mov
inc
mov
shlb
lahf
outsb
or
ja
outsb
pusha
pop
pop
stc
inc
xor
xor
pop
jno
cmp
lock
sbb
xchg
lds
mov
ljmp
jo
cmpl
sbb
gs
out
push
lret
sbb
and
dec
aas
es
cmp
orl
sbb
mov
mov
pop
push
movsl
insb
in
push
movsb
hlt
pop
pop
and
and
in
ds
insl
push
mull
dec
fucomi
add
jns
shrl
jl
lock
stos
loop
leave
or
mov
mov
mov
call
stc
pop
addr16
dec
mov
fidivl
lods
jmp
mov
sbb
xchg
xchg
mov
push
pusha
lods
add
add
orl
dec
pop
std
push
inc
lahf
clc
dec
mov
out
mov
push
mov
cmp
in
js
call
lret
push
or
or
push
aam
cmovae
jnp,pt
sbb
stc
and
adc
sti
in
inc
cmp
push
sbb
ret
xor
sbb
es
out
sub
movsl
jno
arpl
lock
out
mov
pop
hlt
and
and
and
add
inc
or
clc
lret
in
lea
jb
cmpsl
cmpsb
sbb
leave
sahf
in
jae
cmp
mov
sbb
sti
pop
mov
xchg
sub
xor
add
sbb
lds
mov
sub
or
or
cmp
testl
xor
mov
scas
je
repz
jmp
mov
dec
add
sbb
inc
pushf
adc
push
pop
fnsave
shlb
cmc
sahf
mov
cmp
outsb
add
dec
inc
and
inc
or
push
add
dec
and
int3
jne
cmpsl
adc
adc
pop
test
imul
mov
sahf
lds
mov
sbb
divb
nop
leave
stos
jge
test
movsb
mov
call
stos
mov
imul
or
or
sbb
icebp
add
fs
mov
nop
daa
sub
dec
fildll
test
mov
mov
mov
add
adc
xlat
mov
xor
mov
xchg
fcomps
bound
cmc
xchg
mov
addl
or
cmpsl
jns
add
lea
mov
in
mov
adc
lret
mov
jnp
fcoml
clc
add
stos
xor
cmp
mov
inc
push
sub
test
cs
fiadds
dec
inc
jbe
pop
inc
lahf
mov
mov
aad
int
mov
inc
aas
or
mov
loope
mov
iret
nop
inc
sbb
mov
testl
repz
js
andl
imul
adc
mov
in
test
mov
call
mov
call
mov
jae
and
mov
pop
das
xor
mov
mov
fldt
lock
mov
jmp
bound
sub
insb
push
in
clc
sub
fcomps
adc
sub
nop
jmp
xor
mov
cmp
out
xor
jbe
inc
xchg
es
push
mov
pop
fidivs
adc
movsb
cmp
in
push
arpl
cmp
add
push
sahf
adc
sub
sahf
les
sti
or
arpl
loop
cmp
mov
sti
mov
int
jmp
bound
icebp
aas
xchg
dec
jmp
outsl
jae
push
fwait
enter
inc
aad
out
sub
iret
pop
ja
imul
or
xchg
jbe
and
mov
cs
shll
jae
cs
sahf
adc
mov
nop
inc
or
in
sub
adc
aas
mov
sub
outsl
xchg
add
hlt
add
cmpb
in
add
jno
jne
mov
cs
xor
fdivrl
pop
xor
cmpsl
mov
insl
jnp
push
rorl
clc
adc
inc
in
sti
sub
les
mov
push
or
pop
mov
add
adc
sub
testb
addl
insb
insl
and
fdivs
jbe
shll
popl
imul
jb
jmp
std
dec
imul
clc
sti
into
in
push
push
jmp
jo
inc
sbb
in
out
clc
or
loope
notb
nop
ljmp
or
mul
adc
mov
xor
adc
inc
xor
add
jle
insb
call
sahf
add
lock
test
cld
xchg
cltd
jae
mov
fnstenv
jmp
sub
push
movsl
pushl
mov
mov
jnp
add
sbb
dec
scas
les
int3
mov
add
dec
aas
pushf
sbb
cmp
mov
sbb
or
adc
lahf
push
cmp
mov
or
mov
mov
pop
and
into
subb
mov
dec
push
sarl
xor
mov
das
outsl
je
in
xchg
aam
cmpsl
inc
scas
sbb
popf
add
jae
and
mov
scas
cltd
xor
mov
push
jp
shlb
shlb
aaa
stos
mov
and
jne
js
add
sub
mov
jo
cmp
jns
movsl
mov
lret
mov
imul
jnp
and
add
flds
jns
mov
mov
jp
mov
incb
or
inc
and
leave
cmp
jb
ror
daa
mov
adc
repnz
jb
jo
aad
stos
jnp
add
es
dec
int
inc
lock
push
mov
aam
popa
add
in
outsb
movsb
xchg
sarl
xor
push
push
xchg
addps
arpl
into
sbb
dec
cld
mov
test
xchg
outsl
xor
xchg
arpl
jne,pt
fs
sahf
fwait
into
and
sbb
out
leave
js
andl
pop
sub
cmp
test
sbb
push
dec
xchg
inc
sub
jmp
shll
adc
fidivrs
pop
mov
aas
mov
fs
mov
in
stc
pop
cmc
mov
inc
loopne
fmuls
pop
movsb
sub
jo
or
lds
fisubrl
mov
jne
cwtl
adc
mov
roll
dec
mov
pop
and
idivb
jp
insl
lahf
cmp
stc
test
push
adc
iret
inc
push
pop
push
test
scas
add
add
sub
push
xchg
js
stc
xchg
sub
jmp
jne
ffreep
sub
and
mov
add
fnstsw
fimull
push
mov
arpl
push
pushw
lret
movsl
jle
addr16
ljmp
andb
sahf
cmpb
cwtl
sub
aad
cltd
dec
xchg
mov
mov
jp
lret
mov
mov
add
dec
rorl
mov
push
xchg
jb
dec
adc
aam
pop
cmp
out
jg
and
pusha
aad
mov
clc
imul
filds
mov
inc
inc
lods
xor
mov
aaa
lods
subl
adc
jecxz
outsl
js
or
pop
inc
fstpl
jle
and
ja
js
test
icebp
pushf
popa
js
xchg
aas
pop
push
pop
decb
test
cmp
jl
mov
sub
aad
aam
ss
cmpsl
cli
inc
jp
lods
lret
xor
sar
xor
dec
ret
sti
pop
clc
popa
adc
jae
dec
jp
push
inc
lock
sbb
les
or
jae
shl
jb
or
outsb
add
add
lahf
xchg
insl
jns
xor
sbb
scas
jle
sub
mov
fiaddl
test
or
arpl
and
movsl
int3
fildl
aas
lds
lods
int3
jo
sarl
lret
xlat
in
sub
inc
cmp
xor
push
xchg
or
inc
and
mov
xchg
sbb
pop
mov
mov
add
fldt
inc
lock
mov
into
cmpb
idivl
dec
inc
call
dec
inc
sub
adc
fisttpll
mov
sti
sbb
jmp
pop
mov
fs
repnz
sbb
sbb
and
lods
or
or
dec
lret
jge
outsb
mov
mov
mov
mov
addb
or
repnz
popf
imul
aam
push
shrl
and
popf
jge
cmc
test
cli
fwait
cmpb
push
imul
fidivs
dec
push
mov
dec
adc
aam
pop
push
adc
aam
inc
gs
out
add
ds
xor
fnstsw
sbb
int
add
nop
in
insl
pop
les
xor
mov
cmp
out
xchg
rcrl
inc
mov
pop
jb
and
hlt
mov
stc
pop
dec
aad
scas
lret
js
xor
and
int
cmpsl
jle
enter
sub
push
ret
iret
push
hlt
aaa
mov
fcoms
cltd
ds
fldt
pop
jp
adc
xor
adc
mov
popa
mov
inc
push
pop
and
adc
insl
roll
jmp
xchg
dec
add
and
sahf
and
inc
or
push
pop
aas
fisttps
mov
fsubp
aam
mov
inc
decl
mov
cld
adc
push
lcall
je
ret
mov
insl
mov
nop
xchg
hlt
ret
adc
cmc
jne
jl
ud0
and
mov
imul
mov
xchg
lret
push
push
adc
and
inc
and
sahf
mov
sub
mov
dec
inc
aas
xor
lods
cmc
pop
negl
in
xorb
fsubl
out
and
mul
enter
mov
xchg
int3
sub
inc
xlat
sbb
sbb
rcrl
push
mov
out
lea
pop
leave
inc
out
insb
jo
or
test
jnp
dec
out
jmp
jno
and
sbb
mov
lahf
ror
adc
and
add
xchg
cld
xchg
mov
mov
jne
rorb
sbb
leave
cmp
lock
sahf
test
enter
sarb
rolb
push
jge
repnz
push
mov
sbb
lahf
repnz
mov
xchg
je
aam
pop
cltd
pusha
loope
scas
sbb
and
ret
pop
mov
push
ja
ja
add
movsl
add
mov
sarb
or
push
fistpll
jl
sub
int3
aaa
ja
inc
pop
push
inc
stos
sbb
iret
push
inc
int3
mov
popa
xor
sbb
fdivs
cmp
lret
cmp
pop
push
outsl
pop
movsb
push
jb
aam
mov
mov
inc
test
lret
mov
and
insb
push
hlt
mov
clc
les
fiaddl
lret
addb
sbb
fmull
jo
out
imul
pop
lea
lods
mov
inc
push
xchg
fldenv
xchg
loop
fisttps
leave
jmp
jp
lock
or
aam
add
mov
xor
adc
lds
push
dec
notb
add
int
jg
mov
push
dec
rorb
test
pop
sti
xchg
jg
test
mov
enter
stos
jb
pop
inc
xchg
daa
xchg
inc
push
jge
aad
in
cmp
mov
mov
aaa
pop
xchg
jecxz
pop
mov
add
xchg
hlt
lcall
pop
push
mov
mov
stos
pop
dec
cwtl
pop
mov
fwait
ja
jb
mov
and
sub
and
lcall
mov
and
dec
sbb
out
ret
iret
cmp
int3
xor
cmp
jl
popa
jo
mov
fnstenv
mov
adc
and
mov
jb
int
xchg
xor
add
xchg
inc
fidivs
int3
jp
mov
test
stos
rolb
dec
push
out
lcall
ret
dec
cmc
mov
fsubrl
add
cmpsb
inc
in
pop
movsb
sbb
icebp
jl
call
mov
push
jae
dec
cs
xchg
js
les
sar
dec
push
jle
outsl
into
jecxz
xchg
mov
leave
or
loop
es
arpl
je
sub
ja
mov
rcll
pop
movsb
movsb
jo
popf
lods
call
test
test
stos
inc
adc
mov
rolb
outsl
push
dec
mov
stc
sub
pop
sahf
ljmp
push
push
mov
cmpsb
inc
jne
gs
insl
xor
pop
push
add
sahf
faddl
xor
cmp
add
cmp
int
sub
sub
ljmp
movsb
das
cltd
testl
shr
and
dec
or
mov
inc
pop
gs
int3
movsb
and
inc
cmpsl
or
insb
or
fisubrs
andb
add
mov
sahf
fcmovnb
shlb
insl
cmp
addr16
pop
ret
push
out
das
dec
movb
jb
and
sbb
test
out
iret
jno
cmp
sahf
ret
jbe
and
decl
fwait
sbb
lds
and
inc
cwtl
fisubrs
push
out
aas
lret
lret
inc
cmp
pop
aad
pop
push
enter
mov
push
mov
add
inc
lret
mov
sbb
jge
in
and
adc
mov
cltd
sbb
jg
pop
or
mov
shll
jmp
je
imul
fiaddl
aam
cs
jecxz
push
ja
and
mov
ljmp
imul
movsl
or
dec
outsb
outsb
adc
push
add
ret
inc
sub
sub
popa
ds
out
mov
jp
inc
mov
ja
lea
stc
adc
sub
enter
sbb
pop
std
jle
pop
lcall
dec
in
mov
mov
sbb
jle
mov
sbb
xchg
filds
dec
cwtl
std
inc
loopne
loop
es
cltd
sti
ror
inc
pop
adc
xchg
push
imul
icebp
insb
push
out
sub
mov
mov
das
push
rorb
sbb
int
cmp
test
addr16
testl
mov
idivb
sub
xchg
mov
and
cli
and
jne
xchg
jns
decb
xor
loopne
adc
rcll
pop
mov
xchg
adc
cs
movsl
nop
addr16
fs
das
adc
subl
mov
mov
xchg
lahf
push
fsub
repz
mov
lahf
jo
loopne
mov
leave
lods
sub
sub
add
push
pusha
dec
fdivrl
pop
mov
lods
push
in
out
mov
cmpsl
shl
movsl
sbb
mov
push
ja
aaa
arpl
or
call
into
sti
stc
imul
sbb
add
push
movsl
data16
outsb
or
mov
ds
fcoms
mov
sbb
lods
inc
gs
dec
in
test
dec
inc
dec
les
cs
xchg
in
inc
cld
ror
int3
cmp
lods
dec
push
adc
mov
adc
mov
xor
imul
pop
jge
or
jl
jns
mov
nop
icebp
shll
push
insl
pop
dec
push
orl
mov
push
mov
mov
mov
add
pop
out
dec
jo
test
addr16
out
ror
sub
ljmp
dec
rolb
lcall
pop
or
mov
movsl
sbb
push
inc
add
adc
mov
dec
call
insb
andl
test
lods
pop
sahf
and
decl
mov
sahf
sub
cmp
ret
pop
in
mov
inc
mov
mulps
dec
push
cmp
rcll
rorl
lret
adc
scas
push
outsl
and
push
jle
mov
lock
mov
das
mov
test
shll
sbb
movsl
mov
jnp
mov
pop
in
mov
imul
sbb
or
dec
sbb
icebp
xor
push
or
mov
sahf
push
stos
sbb
loop
xlat
repz
xchg
cmp
pop
inc
or
and
fwait
stc
cmpsb
mov
push
mov
arpl
mov
pop
movsb
mov
sbb
push
adc
mov
popa
lret
jb
and
daa
jnp
lcall
cmpsl
outsb
call
outsb
iret
aas
aad
stos
cmp
lcall
loop
pop
mov
mov
pop
mov
push
dec
xor
sub
mov
xor
pop
pop
sub
js
test
jb
xchg
inc
jns
ds
xor
jae
sub
dec
mov
mov
fs
das
mov
mov
and
aad
cltd
cmpsl
push
cmp
mov
pushf
test
cld
rorb
sbb
inc
stos
push
push
popf
push
xchg
xchg
fisubl
adc
inc
jbe
scas
mov
loop
mov
add
movsl
in
dec
lret
sub
jecxz
pop
scas
sub
fdivr
fnstcw
pcmpeqw
pop
jne
sbb
or
push
sbb
or
icebp
jb
or
bound
push
sbb
mov
out
push
lret
sub
ja
arpl
negl
roll
pop
jno
mov
outsb
push
mov
xchg
xchg
cld
xorl
jecxz
cmp
mov
sbb
aas
and
je
xor
out
ret
inc
or
fwait
jns
push
mov
push
mov
call
divb
xor
jl
mov
sbb
cli
sahf
test
fildl
fbstp
cmp
inc
outsl
outsl
outsl
cmc
sub
mov
lods
imul
cmp
jns
pop
adc
dec
pop
lret
fnstenv
push
cli
mov
mov
mov
or
fwait
test
in
out
stc
dec
adc
pop
pop
mov
mov
int
fwait
push
cmp
jle
push
sbb
test
jecxz
inc
lcall
addr16
push
je
mov
xchg
jb
push
pop
adc
push
imulb
shlb
xorb
pop
cmp
lock
mov
insb
out
dec
pop
push
xchg
jb
out
mov
mov
cltd
jle
pop
xchg
enter
sub
inc
jecxz
testl
push
rcll
cmp
int3
pop
cmp
jp
xchg
xchg
cmp
cmp
xor
jl
push
xchg
or
arpl
xchg
jo
add
and
pop
adc
out
inc
outsb
mov
clc
outsb
and
dec
jge
pop
imul
popf
loope
add
lcall
shlb
scas
sbb
adc
jp
addr16
mov
jne
mov
jmp
out
pop
push
fnsave
mov
push
push
inc
iret
in
dec
mov
add
shrl
cmc
test
add
dec
xor
push
or
jns
popf
repnz
mov
inc
aam
ficompl
das
dec
push
sub
mov
movsb
addb
inc
sti
dec
pop
dec
push
cmp
cmp
mov
or
lds
orb
jp
les
jne
fsubrs
push
or
insb
call
das
inc
repnz
sub
repz
jae
xor
scas
mov
ret
inc
repz
and
fidivrl
addr16
xlat
jae
push
xorb
xchg
pop
sti
push
pop
inc
neg
in
cs
cmp
test
jle
and
stos
int3
fmuls
and
inc
adc
in
rcll
and
fsubs
sub
mov
push
movsl
xor
fsubr
nop
aas
mov
out
jbe
mov
popa
fisttpll
popf
aam
aam
jae
fistpl
dec
scas
pop
adcb
movsb
subl
ja
mov
xor
add
jbe
inc
push
aam
cmp
jmp
pop
inc
insb
enter
clc
cmpsb
nop
test
add
fsub
cltd
cs
mov
scas
mov
xchg
stos
cmp
mov
movsl
aad
into
shlb
lahf
repz
xor
into
or
lret
mov
xor
loopne,pn
adc
mov
test
or
mov
hlt
pop
in
mov
mov
mov
hlt
daa
jg
test
inc
fwait
std
sub
fistpl
inc
pop
and
movsb
jg
pop
pop
arpl
aam
sub
mov
pop
pop
lahf
cld
jmp
dec
adc
cmpsb
jge
adc
xchg
mov
addl
nop
jbe
push
and
cmc
xor
jle
cmpsl
insb
mov
ljmp
test
ret
add
or
cmp
ret
fstpt
test
sbb
cmpsl
push
popf
jae
pop
pop
cltd
shrl
cmp
pushf
or
pop
cli
xor
pusha
xchg
dec
test
sbb
adc
xor
mov
push
ret
push
adc
or
scas
outsb
push
mov
mov
mov
xlat
lahf
push
cmp
loopne
scas
std
sub
push
mov
stc
cmpsb
sbbl
pop
and
ret
xor
stc
xor
shlb
pop
lret
ret
lret
aas
mov
test
dec
dec
mov
pusha
sub
es
inc
fsubrs
dec
adc
movsl
lahf
sub
fdivrs
into
leave
push
mov
sbb
stos
cmp
mov
sub
and
mov
pop
daa
xor
pop
subb
aaa
pop
addr16
push
jl
xchg
mov
xchg
fcoms
sub
add
out
mov
fists
sub
mov
xlat
test
cltd
test
mov
push
subl
jno
fsubl
push
add
xor
jmp
fcmove
mov
out
adc
adc
cmc
xchg
es
xchg
inc
add
and
xchg
push
adc
add
jle
inc
sahf
xlat
ficoml
pop
popa
and
mov
lahf
mov
les
sbbl
jnp
cs
pop
repnz
outsl
jne
sub
push
add
xchg
dec
fadd
sub
aad
or
pop
outsl
sbb
loope
dec
sbb
neg
sub
mov
popf
sbb
mov
insb
pushf
sti
mov
movsb
pop
lds
cltd
scas
into
inc
push
and
fwait
jg
dec
inc
pop
push
scas
test
xlat
mov
inc
jg
in
mov
mov
mov
sub
das
cmp
and
sub
push
sub
fnstcw
push
push
mov
int3
decl
jae
fsubrp
dec
stc
ror
jmp
test
int3
and
imul
cmp
in
adc
arpl
rcl
pusha
and
test
pushf
fmull
iret
xor
mov
ret
out
in
sub
jge
shll
rcrb
nop
add
lods
inc
add
mov
loop
dec
and
xchg
add
cmp
jb
insb
mov
das
jle
push
lcall
jb
push
mov
jno
movsb
sub
dec
fs
in
xor
mov
xor
addb
push
pop
mov
faddp
mov
cwtl
add
pop
mov
xchg
std
scas
lods
pop
sbb
fcoms
aas
addl
js
cmp
fwait
les
ficoms
xor
fsubrp
cmp
inc
mov
sub
sbb
mov
test
and
es
mov
sbb
ds
lret
sbb
dec
sub
mov
arpl
pop
rcll
lea
enter
xchg
ret
and
hlt
fwait
dec
cmp
push
xchg
test
arpl
sbb
lods
mov
xchg
es
mov
xchg
ret
xchg
repnz
leave
xor
jbe
pop
incb
pop
orl
add
in
mov
mov
inc
jmp
cmc
into
cwtl
or
jge
test
cmpsl
sub
or
sbb
mov
dec
std
and
movsb
xchg
or
inc
xor
jl
aad
shr
arpl
or
lcall
mov
ja
gs
xchg
leave
push
mov
add
dec
mov
pop
adc
mov
leave
shl
xlat
cmp
push
xchg
mov
add
bound
jbe
cltd
add
cmp
xchg
stc
out
ja
scas
test
into
gs
cmp
shlb
out
cld
jge
outsb
jne
adc
loope
outsb
cmpsl
stc
enter
stc
cmp
cwtl
pop
std
lahf
je
pop
sbb
and
jo
orb
flds
gs
lret
nop
cmp
jne
cmp
cltd
imul
jns
add
fildll
jnp
mov
ret
xchg
insl
mov
inc
dec
sbb
mov
push
sub
std
enter
inc
ret
ss
arpl
icebp
xchg
bound
or
jp
ja
fidivrs
push
pop
fsubr
adc
mov
scas
ss
addl
or
js
mov
xchg
add
mov
test
dec
jb
divb
testb
data16
adc
test
cmp
mov
cltd
mov
out
mov
jl
ljmp
add
jno
and
test
out
xor
pushf
in
cld
sti
mov
je
dec
sbb
xchg
lret
insl
lret
mov
js
vshufps
adc
mov
in
xchg
mov
stos
jb
add
lahf
loope
dec
xor
test
xchg
jmp
lcall
std
mov
test
add
and
nop
mov
cmovne
add
mov
daa
sbb
sbb
sbb
pop
js
mov
mov
cmpsl
mov
outsb
push
mov
dec
aam
xor
xchg
or
xchg
mov
jg
or
cmpsb
mov
fcmovbe
cld
jle
mov
std
lret
push
xchg
bts
scas
hlt
jecxz
stc
stos
xchg
lret
loop
test
icebp
in
push
loopne
mov
aad
jne
add
iret
aam
sub
in
out
mov
loope
cmp
xchg
pop
mov
in
add
ja
adc
add
mov
into
adc
rorl
imul
or
mov
outsb
dec
imul
mov
mov
mov
or
int3
add
fcmovb
test
fisubrs
mov
call
ds
mov
or
push
cwtl
and
or
lret
loope
xchg
iret
lea
testl
sbb
cs
or
hlt
adc
and
arpl
cmpsl
loope
ds
mov
cmpsb
cmp
pop
inc
gs
into
ret
movsb
or
fistl
daa
in
jbe
pop
pusha
out
inc
aas
add
imul
test
aad
or
mov
add
inc
dec
sub
mov
xchg
in
fxch
push
mov
xchg
leave
lock
dec
int
in
xchg
lret
out
lock
sbb
fildl
or
sbb
imul
xor
cmp
enter
movsb
add
aad
mov
push
xorb
inc
cmp
ret
mov
jae
or
xor
sbb
scas
stc
lods
adc
add
outsl
outsl
or
sahf
sub
pop
icebp
cltd
mov
or
fs
stos
leave
mov
cmpsb
push
or
fcmovu
movsb
xchg
mov
ja
xchg
ljmp
fistpl
dec
movb
xchg
sbb
icebp
mov
adc
ret
iret
fdivl
lcall
fwait
repz
jg
adc
push
cwtl
and
xlat
loope
adc
inc
xor
fisttpl
xchg
jno
inc
je
lcall
dec
cld
cmp
jbe
add
aas
xchg
pop
outsl
cltd
and
in
and
je
mov
inc
imul
pushf
scas
in
dec
mov
rcr
mov
dec
ljmp
popf
shll
mov
inc
bnd
dec
cmp
jae
pop
xchg
add
mov
sbb
rcrb
idivb
mov
imul
fstl
dec
pop
xor
pop
ds
xchg
repz
xchg
sbb
and
mov
push
leave
rcrl
dec
repz
or
rcrl
sbb
std
hlt
cli
lahf
lret
subl
push
insl
out
and
daa
sub
data16
sarl
lds
xor
cld
lds
rcl
pop
mov
hlt
cmpsl
xchg
and
js
xor
push
inc
lds
das
push
sar
cmpsl
jge
stc
scas
lods
mov
popa
cmpsb
into
shlb
and
pop
cmp
xor
push
push
loopne
sub
mov
sub
sub
xchg
pop
xchg
mov
stos
xchg
mov
lret
cmp
xor
xor
clc
sbb
fimull
stc
jo
data16
lahf
shll
int3
bound
dec
aas
inc
add
jb
orb
cmpsb
and
mov
mov
rcr
enter
leave
jmp
in
xchg
mov
mov
fwait
mov
sub
fcoms
xchg
pop
lret
fsubs
dec
jbe
inc
mov
and
loopne
stos
xchg
movsl
sub
rorl
adc
push
nop
in
popf
bound
sbb
mov
sbb
jo
dec
cmpsl
rolb
sbb
dec
mov
mov
push
fmul
or
and
fisubrl
in
inc
pop
mov
mov
push
mov
pop
fimuls
imul
sub
loopne
sti
lcall
xchg
cmpl
xor
push
push
push
movsl
rcrb
nop
cld
adc
jne
loopne
rclb
sub
mov
arpl
movsl
cli
xchg
loopne
fadd
daa
repz
lcall
ret
fildll
popa
push
fdivl
dec
loope
jns
push
mov
js
or
andl
push
mov
jo
pop
fisubrs
je
fdivl
xchg
dec
mov
lods
adcl
cli
pop
mov
cmpsb
push
cmp
mov
test
add
sub
gs
fwait
xor
pop
pop
lcall
repnz
mov
mov
js
jp
cltd
pusha
fwait
scas
and
mov
mov
adc
ds
imul
insl
xor
push
xcrypt-ctr
cmpsl
sahf
add
or
dec
in
mov
jmp
jg
adc
push
jle
sub
and
inc
aad
test
ds
mov
in
xor
lods
pop
int
fimuls
rorl
sbb
pop
pop
jp
fstpl
xchg
or
ljmp
inc
test
lds
jbe
jns
or
in
mov
shll
push
push
xchg
dec
out
jbe
shlb
cmp
adc
xchg
sbb
dec
cwtl
pop
addr16
out
xchg
mov
push
xorl
mov
jp
popl
outsl
push
jg
insl
mov
push
xor
cld
lret
arpl
mov
les
pop
inc
xchg
or
repz
mov
inc
and
mov
pop
hlt
inc
jl
adc
shll
les
movsl
sbb
inc
mov
cwtl
push
out
insl
test
movsl
movsl
jns
leave
add
ret
pop
jle
aad
pop
repnz
sbb
ret
in
jge
sbb
jne
insb
gs
sub
mov
xchg
roll
test
mov
pop
call
inc
in
aad
xchg
cltd
lea
shll
mov
dec
loope
jecxz
ret
and
xchg
pminsw
sti
cltd
sub
stos
add
hlt
call
pop
or
jle,pt
xchg
jns
repnz
cmp
xor
test
push
jle
arpl
jns
pop
fldt
mov
xchg
test
mov
repnz
lret
ret
inc
hlt
xchg
hlt
lret
push
adc
sbb
out
cmp
rolb
cs
adc
fnsave
sbb
jbe
mov
stos
push
pop
mov
nop
subl
jge
addr16
negb
mov
mov
or
sbb
fsts
add
stc
les
xor
push
adc
xor
jg
shrl
inc
std
fsubl
sarl
movsb
mov
pop
xchg
std
sub
in
dec
lar
mov
pop
call
in
mov
xchg
sbb
outsl
push
leave
hlt
lock
into
test
stos
xchg
ds
aaa
push
mov
sub
xchg
pop
cmp
fucomp
dec
mov
cmp
push
push
lds
push
icebp
mov
push
push
in
cli
pop
mov
inc
xor
push
loope
test
test
push
xor
scas
cmpsl
sub
fnsave
icebp
and
lcall
sbb
push
dec
divb
in
jnp
popa
cmpsb
xchg
sub
push
ret
push
ret
push
fistpl
shlb
lds
ficomps
inc
ja
xchg
push
int3
or
xchg
xor
xor
add
cmp
xor
or
ljmp
push
mov
sbb
insl
in
xchg
js
and
test
and
in
leave
xlat
mov
int
hlt
or
and
and
das
xor
cwtl
inc
out
add
and
or
cld
and
xor
rol
cmp
jmp
rorl
jno
jno
popf
or
jmp
jno
nop
fnstcw
cmpsb
mov
mov
xchg
inc
cwtl
cs
or
mov
adc
out
pop
subb
mov
test
andb
push
or
into
out
mov
pop
outsb
add
jecxz,pn
hlt
jno
add
arpl
pop
mov
jge
mov
pushf
jb
or
popa
mov
pushl
cli
push
pushf
sub
std
je,pn
dec
mov
push
mov
mov
sbb
movsb
in
std
mov
push
fsts
stos
jb
add
sarl
leave
xor
ret
inc
mov
test
aam
mov
rcl
mov
xchg
lods
pop
sub
dec
out
mov
in
mov
in
rdmsr
mov
or
arpl
das
cltd
push
dec
mov
iret
scas
cwtl
adc
mov
lcall
aam
loope
jnp
xchg
or
push
stc
push
dec
jns
int3
sbb
lock
mov
mov
rcrb
pusha
in
lods
pop
cwtl
pop
test
rorb
xchg
into
lcall
clc
sarb
inc
enter
sub
jp
lds
inc
adc
mov
adc
add
xchg
test
iret
lods
rclb
leave
call
and
cmp
mov
jecxz
int
xchg
adc
dec
into
repz
or
mov
in
and
pop
xor
aas
or
inc
insb
or
inc
adcb
push
lock
adcl
pop
stos
add
test
mov
cmp
lds
xor
fwait
dec
mov
or
inc
lods
lock
dec
shl
mov
popa
clc
mov
movsl
mov
add
in
pusha
jns
cmpsl
mov
loope
xor
inc
mov
pop
insl
mov
xchg
jge
xlat
shrb
jle
mov
mov
inc
aas
xor
lret
mov
sbb
nop
cmc
mov
mov
ficomps
cmp
arpl
das
jecxz
ficoms
push
cmp
hlt
shrb
push
mov
insb
sub
int
fildll
dec
and
ret
add
ret
daa
cmpsb
in
lea
sbb
clc
loop
pop
xchg
nop
mov
por
stos
pop
pop
jmp
adc
fstpl
mov
push
jb
or
fnstenv
mov
rcrl
mov
xor
and
outsb
add
fsubrl
leave
insb
jae
jl
or
lods
sarl
sbb
mov
xor
jbe
gs
add
lahf
clc
lds
out
push
cmpsb
inc
cmp
out
mov
pusha
pop
sub
xchg
fldcw
cwtl
inc
pushf
clc
adcb
mov
stos
mov
dec
iret
xchg
std
xor
xor
lea
ret
jnp
ljmp
inc
inc
clc
pop
xor
test
push
outsl
inc
pop
dec
fisubrl
lock
out
aam
cmp
add
dec
inc
leave
insl
repnz
mov
mov
inc
movsb
inc
je
adc
sbb
std
divb
mov
add
pop
dec
fcoml
inc
push
or
sub
push
sbb
lahf
divb
notl
leave
adc
fmull
stc
in
fildll
fld
cmp
inc
push
dec
scas
test
xchg
push
or
sbb
outsl
push
shl
rclb
pop
cmp
push
int3
scas
adc
pop
and
pop
lds
clc
movhps
push
ss
movsl
jg
js
inc
in
fidivrs
adc
xor
mov
xor
push
out
or
pushf
and
mov
jl
rcrb
inc
lods
mov
mov
cltd
pop
inc
mov
dec
cli
push
jb
in
pushf
fmuls
enter
xchg
clc
ss
mov
insb
push
mov
lret
stos
jp
xchg
sub
mov
adc
xchg
out
test
jno
fs
adc
sarl
fldz
sbb
cli
push
add
jl
and
push
shlb
movsl
mov
or
jl
pop
imul
mov
mov
pop
mov
sbbl
cltd
xor
or
loopne
aaa
nop
push
cli
imul
inc
movsl
lcall
jb
xchg
add
insl
fmuls
leave
or
cmp
cmp
icebp
andb
ljmp
xchg
mov
mov
inc
movsl
sbb
out
push
es
add
and
lcall
jnp
and
clc
loopne
mov
in
mov
dec
jl
sub
sbb
jb
insl
inc
xchg
cwtl
add
pop
mov
sbb
cmpsb
out
arpl
clc
mov
repz
frstor
roll
sub
jl
shlb
sbb
xchg
pop
pop
lret
mov
inc
in
insl
ret
fnstcw
xchg
jno
jnp
pop
inc
arpl
dec
pop
pop
add
mov
shll
fwait
cmp
sub
scas
es
mov
and
mov
test
dec
jno
mov
scas
sub
sbb
or
pop
pusha
jmp
xchg
rcrl
mov
inc
dec
fldl
mov
or
int
jb
and
insb
pop
fldenv
addr16
popl
cmp
test
add
sub
popf
push
xchg
push
mov
int3
push
pop
icebp
jp
fmull
mov
lds
lock
outsl
mov
imul
inc
adc
or
fldt
pushf
movsb
js
bound
negb
xchg
enter
into
and
fnstenv
call
mov
rol
jmp
idivb
test
mov
adc
push
sbb
mov
mov
xchg
pusha
sub
xor
test
jl
inc
fistpl
xor
inc
ds
jns
shlb
xchg
mov
push
test
xor
xchg
lcall
sbb
outsl
sbb
xor
and
inc
stos
andb
sbb
sarb
dec
or
xor
ja
inc
and
das
insl
inc
push
and
sub
mov
inc
jmp
cli
sti
aaa
push
inc
clc
xor
xchg
or
or
pop
ret
adc
bound
outsb
idiv
mov
dec
mov
dec
jecxz
cmp
int3
mov
cmpsl
aas
scas
mov
cmp
sti
into
adc
dec
in
out
sbb
scas
fwait
mov
sbb
jo
in
leave
sarl
dec
sbb
jle
sahf
cmova
cld
adc
push
mov
loop
mov
in
adc
jg
sbb
fbstp
sbb
mov
cmp
xchg
loopne
paddusb
rol
jg
call
inc
out
rol
stc
outsl
xchg
int
mov
add
stc
jle
push
call
pop
sub
and
add
pop
and
roll
or
test
dec
sbb
mov
or
outsb
jns
lret
adc
xor
cld
scas
in
lcall
dec
movsl
mov
xchg
sarb
mov
jbe
sbb
fsubp
lea
ret
lods
scas
mov
repz
enter
sbb
mov
add
xchg
movsl
call
adc
insl
cltd
je,pt
mov
movsl
mov
stc
dec
adc
pop
cmpsb
xor
xor
imul
popf
sbbb
xchg
xchg
xor
out
or
call
outsb
pop
or
mov
fcomps
sti
xchg
mov
xor
imul
sbb
xchg
clc
loope
inc
dec
and
mov
push
fcmovb
test
pop
add
ds
int3
notb
xchg
mov
xor
push
jbe
xchg
mov
pop
idivl
xor
sub
mull
imul
mov
jg
mov
mov
mov
push
push
mov
pop
sbb
xchg
in
adc
or
push
enter
cmp
aas
addb
test
xchg
inc
xchg
or
push
pop
jl
or
jmp
push
cmp
fstps
sbb
loop
mov
and
adc
add
adc
or
jl
mov
xor
inc
add
pop
in
cmpsl
leave
mov
outsl
pop
adc
jbe
insl
cwtl
sti
cmp
sbb
lcall
addr16
push
addr16
xchg
push
push
xor
xchg
pop
push
jge
cs
stc
push
xor
iret
rcl
jb
mov
mov
leave
outsl
xchg
push
cmpsl
cmp
shr
nop
sbb
jno
push
mov
pop
push
or
aam
sub
sub
das
testl
adc
dec
push
cmp
lret
ds
mov
jno
xchg
dec
sub
addr16
nop
mov
lods
dec
jb
push
sbb
neg
cwtl
fnsave
int
ret
xchg
in
mov
out
scas
addr16
xchg
xchg
mov
push
outsb
test
adc
imul
jl
jae
lret
data16
icebp
push
cwtl
inc
add
imul
testl
and
bound
rclb
scas
les
inc
imul
xor
and
xor
mov
dec
add
scas
cld
dec
bound
add
adc
repz
pop
ret
dec
mov
outsb
clc
adc
leave
clc
push
movsb
sbb
pop
fwait
adc
test
call
adc
jns
add
fisubrl
xor
xor
or
or
mov
test
stc
loopne
adc
dec
sub
adc
lods
ficompl
jp
add
mov
movsb
xchg
mov
push
push
fistpl
add
xor
or
cltd
fisubs
xchg
int
out
popa
cmp
negb
test
dec
scas
sbb
dec
call
xor
ret
pop
jle
stos
fucomip
inc
je
push
dec
sub
xchg
add
aas
out
pop
jl
and
pop
push
aaa
xor
ja
cmp
dec
out
or
mov
out
sub
xchg
sti
adc
ficoms
jge
call
jo
fstpt
push
push
or
pop
push
xor
dec
pop
cmpl
loop
sub
mov
sbb
fnstsw
mov
jb
push
shrl
sbb
or
stc
leave
leave
orl
lds
sbb
sbb
in
add
nop
lods
cmpsb
shlb
jl
and
add
out
cmpsb
inc
or
int
int3
mov
mov
push
into
and
jne
pop
mov
dec
lret
inc
add
push
or
sbb
xchg
scas
rorb
and
cmp
ret
popa
nop
clc
xchg
dec
addr16
lea
adc
sbbl
lret
es
jmp
int
in
rcrl
ja
loopne
popf
sbb
mov
sub
test
mov
pop
shll
gs
jp
dec
or
adc
inc
je
cmc
sub
imul
xchg
cmpsb
ret
xorl
shl
adc
mov
mov
fimuls
xor
sbb
mov
xchg
stos
jae
sub
push
pop
movsb
and
xor
add
iret
test
cltd
sub
fnstcw
xor
mov
sbb
jnp
mov
sub
push
lods
js
stc
pop
sbb
pop
jne,pt
scas
cmpb
mov
dec
subl
push
mov
fstl
in
inc
adc
incb
mov
lret
inc
mov
xchg
inc
dec
cld
pop
add
adc
jmp
notb
mov
mov
inc
inc
sub
cmp
aam
cwtl
ja
aam
and
in
sbb
mov
les
add
push
pushf
jbe
jb
and
push
inc
xchg
xchg
cmp
cmp
sub
test
gs
rorl
fwait
das
lret
sub
testl
or
outsl
in
rcl
mov
scas
or
arpl
pop
jae
ds
xchg
sub
mov
xchg
push
sub
mov
xchg
add
in
test
fidivrl
xor
ret
lock
lcall
add
sbb
or
loopne
dec
lods
xor
adc
xor
popf
add
lods
fisubl
and
jmp
popf
cli
sbb
shll
shrb
sbb
and
adc
push
insb
push
jp
inc
push
pop
xor
movb
imul
mov
enter
cmp
push
in
cli
cmp
sbb
sbbb
mov
das
ss
imul
test
xchg
mov
imul
xchg
inc
test
dec
rcrb
in
insb
daa
cmp
mov
flds
add
pushf
ret
repnz
hlt
push
cmpsl
arpl
arpl
pop
dec
inc
jo
xchg
sbb
inc
or
dec
mov
sbb
jl
jle
push
je
add
mov
xor
out
dec
add
xchg
xchg
cmp
cli
incl
ds
aad
int
arpl
shrb
stos
in
add
jp
mov
pop
popa
rcl
dec
adc
adc
and
imul
movsb
sahf
stc
les
in
insb
mov
repnz
bound
inc
adc
dec
cmp
je
jg
inc
leave
xor
jle
jp
cld
aam
data16
xor
jb
adc
xlat
push
pop
mov
and
or
ret
sbb
and
test
push
and
inc
lds
add
addl
mov
and
icebp
into
fnsave
sbb
lods
call
mov
fwait
shll
jge
xchg
je
sub
lret
je
ja
jns
sbb
cmpsb
inc
add
xchg
ret
or
inc
ss
push
mov
les
loop
out
inc
mov
dec
stc
push
sub
xchg
xchg
jno
xchg
cmpsb
lock
cmp
sub
out
xchg
int3
inc
data16
mov
or
stos
dec
fsubl
lahf
das
mov
sbb
pop
push
mov
adc
out
sbb
lds
dec
inc
fadd
dec
push
xchg
push
push
inc
and
out
nop
mov
mov
daa
adc
jmp
lock
int3
xchg
dec
pop
out
add
negb
stos
cmpsl
xor
or
inc
xor
cltd
movsl
rcr
push
xchg
fsts
dec
leave
xchg
jge
dec
stc
xor
push
ffreep
jl
push
or
xchg
and
shll
sub
mov
outsl
or
fsubrl
leave
sbb
lea
insb
aaa
out
stos
aam
ljmp
adc
daa
sub
hlt
cmp
mov
cwtl
out
jae
mov
daa
mov
mov
cltd
mov
jae
adc
adc
in
and
xor
int3
push
xchg
mov
ss
cld
mov
into
add
jb
roll
pop
imulb
pop
lea
cmp
add
jle
lcall
adc
cmp
mov
mov
sbb
or
addr16
enter
mov
and
repnz
dec
or
in
or
sub
insl
mov
or
lds
gs
mov
in
sbb
mov
cmp
dec
push
xchg
mov
into
or
and
or
xor
and
enter
lret
mov
pop
mov
and
test
mov
pop
adc
test
out
inc
mov
and
cli
mov
jno
inc
test
push
jne
lea
push
push
or
ret
mov
cli
mov
pop
test
mov
fs
arpl
in
pushf
aas
sub
sti
add
rclb
push
dec
lods
xchg
cmp
sub
mov
jp
scas
dec
mov
pop
push
jae
push
mov
mov
push
fldenv
jbe
jl
aas
push
addl
test
mov
ret
das
sbb
inc
js
and
pushf
call
adc
or
cmc
dec
inc
lcall
fcmovnbe
idiv
xchg
lods
dec
push
mov
into
push
mov
dec
mulb
or
test
lahf
in
fdivs
push
call
adc
inc
dec
push
adc
out
cmp
xor
loope
jno
push
fnstenv
xlat
add
jno
adcl
loop
xor
sti
movsl
jne
jne
loopne
out
cs
xlat
mov
test
scas
testl
jg
mov
loope
mov
jl
btc
push
ds
inc
sbb
popf
aaa
aaa
int
jbe
scas
or
sbb
dec
insl
ss
insb
or
out
jns
es
add
jns
push
outsl
mov
and
cmpsl
sub
jp
adc
nop
fistl
xor
lods
cli
jno
add
test
sbb
daa
xor
sbb
push
mov
dec
mov
mov
ret
cmpb
or
lods
test
push
jo
das
ja
sub
jg
sti
cmp
jg
in
mov
dec
ss
fcmovnb
mov
push
movsl
or
ud1
sub
pop
xchg
and
test
std
mov
in
xchg
out
xlat
daa
adc
scas
addl
stos
adc
sbb
mov
fxch
mov
pop
rol
xchg
fwait
insl
or
push
fcoms
daa
mov
push
repz
mov
out
aaa
pop
adc
sub
gs
sbb
push
push
out
xlat
out
lcall
mov
std
mull
lods
call
xchg
in
jge
lea
mov
xchg
adc
jle
and
add
fnstenv
xchg
push
stc
je
push
jnp
into
xor
pop
outsb
mov
adc
cmpsl
mov
cwtl
pop
dec
icebp
ss
ret
push
mov
sbb
loop
adc
sbb
mov
iret
movsl
mov
into
daa
or
aaa
mov
lock
jmp
mov
mov
fidivrs
dec
aas
dec
mov
jl
sbb
lods
aaa
shlb
sarl
pop
cld
test
cs
jp
js
and
pop
js
js
mov
jns
dec
int
sbb
cltd
xchg
dec
sbb
mov
fisubl
js
pop
xchg
push
xor
ror
enter
xor
cmp
pop
ljmp
inc
or
dec
int
mov
sbb
and
ja
inc
adc
fidivs
inc
incb
es
push
movsl
test
pop
ret
push
arpl
xor
add
push
mov
movsb
mov
loopne
movsb
inc
mov
repz
jbe
call
mov
and
adc
pop
inc
aad
call
incb
or
shr
pop
mov
scas
loope
pop
pop
outsl
iret
push
mov
pop
dec
int
testl
inc
pop
xlat
lods
out
mov
mov
xor
test
dec
je
jnp
test
loope
mov
fcmovbe
insb
mov
mov
movsb
inc
popf
aam
dec
roll
push
mov
jno
pop
dec
xlat
cmp
mov
adc
mov
mov
pushf
hlt
daa
xor
leave
insb
jne
cmp
popf
das
lcall
fisttps
pop
testb
add
jno
test
and
lods
mov
rol
mov
enter
fcompl
out
mov
mov
or
pop
movsl
xchg
pusha
dec
fs
adc
imul
sti
sarl
lods
jbe
in
pusha
jge
adc
int3
mov
add
pop
sbb
subb
leave
stc
das
insl
inc
cmp
rcrb
loope
pop
inc
in
or
or
stc
or
sbbb
out
push
sbb
lahf
jg
mov
pop
out
outsl
out
or
std
sbb
jge
fnsave
or
ret
xchg
rclb
and
mov
mov
outsl
test
jo
cmp
push
inc
insl
cmp
jecxz
fsubrs
jge
mov
jmp
hlt
int
outsb
sbb
dec
jns
popa
lahf
lods
sbb
icebp
test
insl
mov
jp
push
mov
ds
mov
and
push
jge
dec
or
ret
dec
imul
repz
jl
mov
mov
cmp
mov
sbb
out
xor
xor
or
and
mov
in
mov
or
inc
arpl
popa
popa
clc
aam
adc
lock
mov
xchg
shlb
pop
dec
mov
push
and
cmp
or
jb
fdivrs
xor
into
repnz
xor
pop
inc
sbb
jge
and
mov
andb
lea
sbb
hlt
mov
cmp
xor
mov
pusha
pop
fildl
xchg
dec
sbb
leave
lods
int3
jl
jbe
mov
neg
cld
mov
add
xchg
pop
pop
xchg
stos
cs
ljmp
pop
xchg
loopne
icebp
scas
dec
cmc
mov
dec
stos
xchg
sbb
ss
xchg
sbb
mov
outsl
ss
das
xor
pushf
adc
test
push
or
rclb
shrl
mov
sub
inc
xchg
xchg
or
data16
jb
scas
sbb
pop
popa
sbb
adc
sub
test
mov
or
jp
xchg
call
lcall
push
scas
inc
inc
and
idivb
fbld
nop
js
adc
sub
aaa
or
mov
adc
test
push
mov
adc
mov
imul
leave
push
push
pop
dec
push
push
pushf
xchg
mov
cmp
push
and
loope
or
mov
insb
call
std
mov
mov
jno
dec
mov
rorb
bound
lods
aas
outsl
adc
pop
outsb
mov
insl
jo
lods
xor
cmp
rcrl
loop
and
imulb
repnz
lcall
cli
push
add
mov
or
dec
les
push
sbb
leave
mov
add
jmp
cmp
push
fdiv
jns
inc
mov
push
ret
inc
mov
xchg
cmpb
lret
lea
fists
jmp
je
arpl
xor
or
pop
push
fiaddl
mov
jne
in
mov
push
mov
push
in
push
adc
xor
pushl
mov
daa
lret
xchg
stc
mov
in
out
dec
mov
loopne
arpl
cwtl
rcrb
ret
sahf
shll
jo
jmp
inc
std
cmp
js
sbb
test
fcoms
movsb
scas
xchg
aad
sub
out
aaa
xor
ret
sbb
rolb
and
into
scas
rol
jno
sbb
nop
in
hlt
imul
lods
jmp
jmp
mov
inc
insl
pop
and
pop
lret
xlat
mov
pop
lds
aam
jns
jbe
cld
push
outsb
in
andl
inc
pusha
cltd
aad
push
adc
jne
dec
sbb
stos
aad
or
out
fiadds
std
js
sbb
cmpsl
and
inc
outsl
aad
pop
data16
dec
adcl
or
add
jnp
mov
lret
pop
jle
clc
loope
mov
sbbl
sbb
cwtl
jmp
fdivrl
pop
jnp
pop
lock
dec
dec
mov
add
jb
xchg
std
sub
leave
enter
in
jecxz
ds
fcompl
cmp
mov
loop
into
push
sbb
jb
cli
std
dec
stos
mov
dec
leave
mov
lods
loopne
out
pop
jecxz
jnp
movsl
or
adc
sbb
popf
xchg
mov
dec
cli
daa
mov
test
adc
jae
xor
and
inc
push
fdivrl
jbe
frstor
adc
arpl
jg
iret
dec
mov
jns
dec
sbb
xor
sarl
add
mov
xor
je
fistl
iret
sub
dec
in
mov
push
and
xor
push
mov
jo
mov
xor
std
or
mov
js
clc
stos
shlb
xor
shll
popf
andl
fmuls
cmpsb
push
test
or
push
pop
sarb
aas
into
scas
fs
inc
mov
and
sarb
out
pop
aaa
and
shl
loope
ljmp
repnz
pop
ss
push
sub
pop
inc
outsl
in
xchg
push
popf
xchg
stos
push
jge
and
and
dec
push
leave
loop
mov
xchg
jl
ja
add
sbb
xchg
lret
aas
mov
outsl
jbe
jle
lods
in
pop
sti
or
sbb
xchg
mov
cli
ret
in
ja
fsubl
rclb
sub
xchg
ss
and
jg
in
mov
lods
xchg
push
ret
jmp
mov
dec
and
lods
test
push
inc
jbe
mov
pop
push
mov
xchg
paddsw
xchg
rcrl
aad
les
bound
sbb
push
movsb
add
lods
addr16
fsqrt
cs
cmc
sbb
in
cmp
imul
mov
mov
push
stc
cld
sbb
mov
mov
sar
and
lcall
inc
pushf
xchg
pop
mov
fs
cmp
add
push
je
gs
xchg
xchg
imul
push
in
push
in
jo
adc
mov
inc
sahf
je
push
pop
shll
cmp
sti
cmp
in
fstps
lea
xlat
push
popf
nop
jl
idiv
aam
mov
xchg
xorb
out
aaa
nop
mov
aad
add
icebp
mov
iret
out
ja
xlat
push
sbb
mov
pop
inc
adc
das
mov
xor
cltd
jb
cmp
push
fmull
xchg
out
inc
xchg
add
fnstsw
fists
cmpsl
out
jg
inc
xchg
int
mov
mov
mov
or
out
popa
xor
hlt
sub
aaa
daa
lcall
loopne
inc
jecxz
stos
mov
push
movb
mov
xor
dec
test
stos
sub
dec
movsl
lock
lock
mov
inc
out
roll
sbb
jl
dec
movsl
xor
icebp
add
add
jecxz
sub
xchg
icebp
add
outsb
out
xor
xor
enter
inc
addb
pop
and
loope
jb
out
cmp
or
mov
sbb
cltd
repnz
pushf
mov
mov
add
push
mov
jne
je
add
add
jl
jg
stos
icebp
jl
inc
lcall
mov
outsl
outsb
icebp
bound
arpl
mov
test
or
loop
fs
mov
jp
mov
shrl
test
cmp
inc
ja
int
add
mov
and
fs
into
xchg
lods
in
sbb
xor
push
sub
in
xchg
bound
out
xor
divb
mov
subl
inc
cmp
and
js
hlt
lret
jo
in
sbb
out
sti
push
pop
enter
ret
aam
jecxz
or
inc
negl
aas
repz
loope
mov
push
lea
xor
push
movsb
rorl
mov
lock
sbb
aam
in
xor
ficoms
aam
adc
and
inc
fldenv
push
mov
and
sbb
mov
out
push
pop
sub
loopne
mov
jge
pop
pusha
jns
sarl
or
or
add
mov
jg
nop
cwtl
or
mov
or
xchg
pop
sahf
in
adc
shl
cmp
movsb
shll
les
sub
add
cli
imul
imul
arpl
insb
movsl
aas
pushf
add
lcall
sbb
out
into
std
aam
out
jb
cli
push
push
pop
jmp
push
sub
rorb
outsb
das
pop
jmp
adc
xchg
or
jg
iret
mov
test
in
loop
repz
es
scas
xor
xchg
mov
mov
popf
xor
lock
cmp
js
mov
cld
jae
push
adc
sbb
aam
sbb
das
ds
lea
test
jno
sbb
pop
rolb
xorb
jno
pop
pushf
in
mov
test
into
push
lret
outsb
cmpsb
addr16
xor
bound
push
lret
pushf
push
add
in
sub
add
pop
pop
sub
mov
fwait
lahf
add
fs
sub
in
cwtl
mov
pop
jbe
jge
dec
cs
out
jno
sahf
shr
dec
push
push
xor
leave
clc
add
jmp
aas
jge
pop
cmp
popa
and
mov
jns,pt
adcb
sbb
mov
mov
sahf
loopne
inc
xor
aaa
push
stos
bound
mov
jae
enter
call
push
cli
xor
aas
push
xchg
pop
ds
cmpsl
mov
mov
adc
out
add
xlat
cli
jle
jecxz
imul
ret
mov
in
xor
mov
fisttpl
fbld
sbb
cmp
pop
lea
push
out
xor
movsl
or
enter
rcrb
js
inc
fwait
jnp
add
add
cli
movb
imul
das
mov
xchg
dec
aas
scas
push
jne
push
cmpsb
pop
out
or
push
xchg
lret
jns
stos
add
jb
je
cli
nop
xorl
fs
in
jmp
sub
mov
push
outsb
cmp
xor
inc
ja
mov
push
fdiv
test
push
lock
loope
push
popa
loop
and
clc
mov
push
movl
fwait
in
pop
add
mov
and
cltd
daa
and
mov
inc
xchg
lods
fs
cmp
add
xchg
xor
pop
rcr
jecxz
fdivrl
mov
cs
sbb
xor
jnp
xchg
pop
add
pop
out
xchg
sbb
cmc
pushf
lods
xchg
dec
icebp
and
adc
sub
adc
daa
jne
and
jge
sti
lret
mov
addl
loop
mov
fimuls
xchg
sub
ret
ficomps
push
dec
fs
pop
mov
cmc
mov
test
pop
mov
stos
fwait
mov
mov
cmp
xor
dec
mov
addr16
fstps
ficompl
imulb
adc
mov
lods
sub
push
mov
lahf
xor
inc
wrmsr
mov
std
add
mov
or
cmpl
fisubrs
mov
ds
mov
sub
dec
outsl
sub
xchg
aam
xchg
add
add
or
mov
dec
dec
ja
nop
in
js
mov
mov
pop
dec
test
movsb
clc
jl
ret
jns
push
into
lds
fmull
mov
in
and
sub
or
repnz
jbe
ret
mov
and
rolb
pop
out
flds
dec
outsl
mov
iret
test
test
ja
jo
jecxz
jge
icebp
jno
ret
stos
xor
stc
pop
sbb
cmp
mov
sbb
pop
add
fucomip
lret
push
movsl
sub
gs
adc
dec
dec
push
outsb
lret
or
pusha
in
sub
push
int3
adc
add
js
fwait
lcall
and
lcall
jl
jbe
aaa
sub
mov
out
jae
test
scas
lods
mov
int
mov
js
pop
cmc
call
cs
ljmp
les
adc
adc
lock
cld
bound
xor
fsubrl
mov
pop
cmp
xchg
rcrl
add
sbb
mov
fistpll
and
aam
push
sub
lahf
mov
into
inc
nop
add
mov
sbb
mov
sub
sub
hlt
cmp
xchg
push
pop
imul
adc
inc
jmp
daa
fnstsw
pop
adc
out
je
test
add
ds
mov
pop
xor
add
daa
jno
mov
cld
popf
xchg
mov
and
inc
int3
add
or
push
mov
fstpl
imul
imul
test
pop
stos
movsb
jle
aaa
rcr
push
out
xor
bound
xor
and
mov
xchg
mov
mov
push
adc
pop
loopne
notb
pop
ret
out
push
mov
pop
imul
mov
cld
insl
inc
insb
mov
or
lret
dec
jo
mov
cmc
cmc
xchg
xchg
inc
movsl
andl
mov
cmp
push
inc
es
mov
andb
push
cltd
adc
in
js
mov
mov
dec
mov
popa
rcrl
insb
pop
pusha
in
out
dec
lea
cmp
out
lret
xchg
mov
pop
and
lods
daa
mov
jl
out
xor
imul
bound
adc
sbb
mov
inc
and
mov
and
scas
outsl
pop
sarl
out
std
cmp
mov
cmp
popl
stos
pop
sarl
push
or
in
jmp
xor
and
dec
mov
sub
sub
cli
sbb
stos
push
mov
cmp
jo
pusha
pusha
std
sub
insb
movsl
and
movsb
icebp
test
cwtl
cmpsb
and
push
push
fmull
jecxz
and
test
inc
push
sbb
addr16
mov
int
in
dec
adc
lods
jl
sar
movsb
cmpsb
sarb
lahf
jns
negb
sbb
inc
adc
sbb
mov
cmpsl
ja
je
mov
sub
xchg
lock
jmp
pop
lea
sbb
repz
bound
push
rcll
push
mov
jg
adc
jp
in
daa
jecxz
pop
xchg
repnz
clc
lcall
inc
cmc
jo
dec
and
jae
cltd
jo
fisttps
mov
lret
mov
mov
lds
pushf
call
test
mov
jns
aaa
push
push
push
out
ja
xor
inc
aas
rcl
stos
sub
cmpsl
pop
mov
xor
jmp
in
add
jae
adc
fisubs
out
fidivs
adc
or
add
adc
mov
sub
xor
enter
dec
ror
nop
hlt
mov
sbb
mov
sbb
movsb
pextrw
xor
mov
subb
push
aad
pop
mov
mov
adc
out
inc
add
xorl
or
inc
mov
jbe
add
pop
push
pushl
sub
pop
pop
comiss
and
dec
cltd
fisttpll
into
out
test
xchg
call
dec
stos
xchg
aas
mov
jb
add
lret
inc
xchg
push
mov
imul
sub
sbb
sahf
testl
ljmp
mov
jle
mov
mov
leave
and
outsb
fwait
xchg
inc
pop
nop
sub
movsl
stos
jb
sub
push
std
divb
jl
mov
cwtl
leave
dec
mov
mov
mov
mov
push
cld
sub
aas
addr16
jl
lock
lret
xor
int3
ja
adc
dec
xchg
jnp
push
mov
jmp
repnz
fidivs
outsb
sbb
ret
fsubs
add
sbb
mov
into
ds
or
daa
inc
das
mov
mov
mov
in
add
push
inc
mov
adc
fs
dec
pop
lcall
jne
aam
adcl
rcr
out
clc
xor
adc
lret
rcrl
or
fmul
cmc
aam
test
cwtl
stc
ret
dec
or
mov
push
jae
ret
incb
cmpl
xor
movsb
mov
lods
imul
mov
test
adc
sbb
lahf
and
nop
mov
jmp
add
push
xor
test
push
dec
enter
mov
mov
xchg
mov
outsl
fsubrs
nop
aaa
leave
mov
adc
sbb
imul
loopne
faddp
movsl
pop
ret
dec
test
sbb
sub
pop
mov
fwait
inc
xor
out
pop
lods
dec
cmpsl
pop
mov
out
sub
inc
lea
xchg
nop
cmp
mov
push
aas
xor
lahf
mov
xchg
mov
adc
mov
ds
pusha
loope
mov
daa
jge
add
add
jae
inc
cli
and
out
dec
fists
repz
mov
jge
sub
mov
cmp
add
xchg
cmp
out
xlat
es
repnz
bound
cld
lods
mov
inc
inc
mov
or
inc
imul
cmp
sub
test
push
call
or
xchg
push
and
rcl
push
xchg
fidivrs
xchg
cmp
inc
sub
test
jp
inc
cmp
pop
sub
mov
out
inc
aad
pop
orb
stc
dec
inc
hlt
pop
sub
push
jle
mov
mov
dec
rorl
add
pop
mov
pop
fs
idivb
adcb
inc
push
fsts
mov
mov
add
mov
pop
ds
inc
test
inc
ljmp
mov
stos
test
xchg
cmp
jl
nop
xor
jae
int3
adc
aaa
sahf
in
int3
sbb
push
sub
rcll
jmp
hlt
insl
lea
imul
jmp
mov
in
fadds
jb
dec
hlt
lock
cmpsb
adc
int3
call
inc
and
jecxz
mov
gs
dec
mov
stos
sbb
mov
add
sbb
scas
or
xchg
sbbl
stc
xor
sbb
push
mov
mov
mov
in
and
dec
es
sub
jl
test
mov
mov
add
sbb
outsl
adc
or
fdivp
cwtl
andl
push
jbe
shl
mov
cmp
negl
xor
adc
mov
sti
mov
addr16
xchg
cwtl
fpatan
push
scas
movups
xchg
in
rorb
adc
pusha
mov
or
push
mov
cmc
xorb
pop
orb
jmp
adc
test
jecxz
cs
cmp
xor
and
xchg
test
pop
adcb
scas
or
dec
enter
cli
arpl
cmp
shll
or
or
or
add
into
hlt
insl
clc
sbb
in
and
repnz
jle
dec
inc
cld
cld
add
arpl
repz
sub
aas
iret
or
cmp
je
lcall
add
inc
rol
ret
pop
shl
xchg
xor
addr16
mov
arpl
divb
lods
mov
cwtl
scas
into
pop
int3
in
dec
sub
jo
jge
mov
xor
and
sub
xor
mov
orl
das
mov
mov
xchg
mov
xchg
xchg
push
or
jne
cld
or
test
gs
psrlq
imul
cmp
lds
mov
add
mov
shl
cmp
xor
sbb
inc
aas
pop
mov
inc
mov
sub
dec
cmp
mov
jnp
xor
xor
std
pop
in
ds
adc
out
push
jnp
cs
push
rorb
push
cltd
adc
inc
mov
icebp
inc
xor
into
dec
clc
les
in
pop
pop
push
adc
scas
pushl
cmpsl
aaa
cli
push
loope
lds
fcomps
xor
xor
fdivrl
xorl
in
mov
add
adc
dec
ret
subl
xlat
jne
push
test
xchg
adc
and
lds
jnp
clc
test
and
stc
scas
adc
pop
stos
scas
add
fsts
mov
lods
push
mov
push
pushf
add
jecxz
scas
mov
sbb
insl
fcmove
jb
fdivs
addb
ljmp
popa
jle
and
sbb
inc
repnz
sbb
lahf
inc
lret
idivl
mov
pop
push
in
scas
in
mov
dec
out
ret
push
test
xor
pop
push
push
sbb
and
inc
int
ds
in
push
add
in
push
std
pop
and
mov
mov
pop
push
loope
aam
loopne
in
test
sub
cwtl
rcr
cmp
inc
mov
jmp
or
sub
cmpsl
ds
push
or
ljmp
es
es
cld
bound
mov
mov
mov
std
sbbl
cmpsl
es
cltd
imul
ljmp
dec
das
push
ret
adc
add
cmp
mov
sbb
mov
mov
mov
fsubrs
shll
fistps
and
shll
shll
ret
cmp
xor
cmp
ja
xchg
pop
push
pop
insb
stos
push
cmpl
outsl
insb
es
popa
nop
imul
jo
das
adc
pushf
jl
sbb
xorl
push
gs
inc
push
das
mov
movsl
outsb
pop
inc
repnz
xor
inc
sahf
mov
and
stos
sbb
jno
rcrl
add
ret
loope
scas
test
in
in
sub
pop
add
and
add
cmp
mov
ljmp
out
gs
cld
pop
nop
jecxz
push
ficompl
xor
pusha
lcall
enter
or
imul
xchg
pop
loopne
ret
nop/reserved
and
js,pt
mov
leave
inc
dec
out
les
cmp
mov
pop
mov
int
fsts
outsl
es
inc
and
xchg
adc
in
fildll
ret
iret
push
orps
subb
dec
movsb
daa
gs
in
addl
mov
lret
repnz
lcall
popf
sub
inc
cld
fidivrl
pop
mov
mov
test
mov
pop
ds
and
jecxz
or
jmp
std
out
sbb
xchg
jp
adc
shll
je
xchg
push
jmp
cmp
sbb
lea
jp
jl
mov
mov
jno
popf
data16
xchg
adc
sbb
leave
dec
fs
daa
inc
mov
in
mov
lea
aaa
cmpsl
nop
xchg
addr16
daa
xor
mov
sbb
push
and
addb
mov
test
mov
sub
cli
dec
and
or
lret
mov
mov
rolb
lret
inc
inc
popf
xchg
call
stos
or
icebp
push
dec
imul
add
rcrb
mov
pushf
pop
mov
imull
adc
or
fs
mov
addr16
mov
subl
std
xchg
dec
jo
cmp
xor
ja
xchg
xchg
jo
fisttps
jo
out
test
cmp
fwait
mov
jns
outsb
and
and
int
jno
xchg
pop
jmp
cmpl
add
repz
or
xchg
mov
sbb
pop
dec
jecxz
mov
movsl
mov
sbb
in
xor
mov
ret
add
scas
and
or
inc
and
and
in
xlat
jmp
push
fsubrl
out
adc
pop
mov
sbb
out
js
scas
or
lret
cli
test
cld
out
adc
sti
xlat
mov
insl
xor
sub
pop
add
add
addr16
add
rcrl
xor
mov
sahf
std
sub
mov
xchg
xchg
outsb
sub
les
xlat
mov
pushf
cmp
mov
pusha
push
pop
adc
outsl
repnz
jns
or
test
and
add
and
jge
jmp
outsb
roll
fwait
lahf
jecxz
jbe
sti
mov
mov
sti
push
pop
mov
jge
pusha
test
movsb
push
or
pop
mov
adc
pop
enter
jg
mov
mov
xor
xor
dec
adc
outsb
gs
imul
mov
fstpt
mov
ret
cltd
xor
add
ret
scas
mov
pop
mov
mov
sahf
popf
gs
ja
in
xchg
pop
dec
add
sbb
pusha
adc
mov
mov
sub
fdivl
ret
mov
fnstsw
pop
mov
push
inc
xchg
pop
xor
js
pop
xor
fisubrl
pop
aad
mov
loope
or
pop
cmp
ljmp
or
out
adc
imul
xchg
daa
mov
jmp
test
dec
lods
jns
mov
mov
xor
pop
push
js
repz
dec
imul
mov
and
xchg
cmpsl
loop
and
xchg
loop
push
lea
push
repnz
xchg
lds
or
dec
data16
mov
std
sbbb
push
bound
mov
adc
add
pop
addr16
mov
dec
xor
sub
mov
popa
lds
int3
clc
mov
fcmovnbe
fdivr
pop
push
mov
fsubrl
in
sbb
out
adc
imul
ss
js
ret
into
push
rorl
push
jae
addr16
insb
std
jecxz
sbb
dec
std
mov
pop
shll
in
push
int3
cmp
lea
cmp
ror
mov
ret
add
in
xchg
inc
decl
xor
into
sub
lods
lock
inc
push
xor
lret
and
mov
add
lahf
push
dec
les
mov
jg
mov
mov
test
inc
fbld
js
test
mov
out
inc
push
add
pop
and
push
push
sbb
jp
mov
and
cmpsl
adc
mov
lcall
test
push
fsubp
stc
xor
pop
pop
push
lret
inc
adc
cmpsb
test
dec
xlat
adc
inc
jbe
in
push
and
and
add
fsub
rcll
in
pushf
jle
push
add
jae
dec
ret
dec
jbe
and
push
or
ljmp
pop
cmc
sahf
insb
imul
jecxz
pop
sub
repz
adc
ret
nop
fmuls
mov
xchg
add
cmp
sub
outsl
inc
ds
repz
and
mov
jecxz
cmpsb
inc
mov
popa
int
movsl
dec
xorb
andl
mov
or
jge
lods
pop
repnz
mov
adc
mov
push
jo
leave
idivb
mov
pop
pop
fnstcw
aaa
fcomi
test
jle
lahf
ret
arpl
fisttpll
and
cmp
cli
pandn
call
inc
pop
sub
pop
sub
stos
cmp
mov
frstor
addl
stc
inc
add
gs
inc
xchg
outsl
lret
lcall
adc
dec
mov
jnp
sbb
sub
ret
out
add
fs
adc
mov
add
cli
icebp
lods
pop
push
adc
cmc
cmpb
push
cli
push
popfw
inc
push
test
mov
imul
pop
scas
ss
ja
shll
std
fimull
mov
andl
mov
cltd
ss
imul
pushf
cld
mov
push
dec
sbb
xorl
xor
and
push
xchg
mov
jbe
dec
sub
orl
push
out
mov
jp
push
cmpsl
mov
ss
out
popa
ja
cmc
adc
and
std
jbe
lea
add
cmp
sbb
and
push
rcl
or
insl
imul
data16
into
addb
ja
inc
adc
pushf
or
cmc
cmp
cmpl
xlat
dec
or
sub
xchg
push
enter
inc
fsubrp
std
jmp
push
xchg
cli
les
outsb
xchg
je
mov
push
push
in
pop
test
or
cmpb
leave
cmpsb
dec
or
outsb
adc
sbb
imul
mov
pusha
icebp
jne
outsl
xlat
ret
aad
mov
test
mov
shll
andl
mov
xchg
inc
out
or
fucom
das
stos
ds
dec
aaa
loope
dec
inc
out
inc
hlt
sbb
push
insl
sub
cltd
mov
xor
inc
es
addl
dec
sub
jge
mov
cmp
pop
fcoms
lock
je
std
aaa
int3
aam
pop
xlat
cs
roll
xor
push
xor
xchg
popw
mov
dec
xchg
dec
lds
mov
lds
in
adc
xchg
jno
loop
cld
sbb
lods
adc
sbb
mov
test
xchg
xchg
int3
inc
dec
stos
or
lods
mov
mov
cmp
fidivrl
ret
pop
push
loope
adc
jecxz
les
out
jbe
cmpsl
in
fiaddl
sub
push
es
decl
arpl
data16
fs
jns
std
inc
les
sbb
stos
icebp
ret
and
je
lret
fsubr
arpl
cmp
jno
mull
mov
sarl
xor
adc
inc
or
xor
sahf
mov
mov
clc
jecxz
mov
xchg
pop
es
arpl
sub
test
add
jae
pop
loopne
mov
add
or
int
and
sbb
call
mov
or
sbb
out
rcrl
mov
insl
lods
dec
clc
mov
xor
fwait
jecxz
inc
cmp
orl
inc
insl
mov
outsb
jnp
gs
rcrl
mov
mov
inc
insl
cs
adc
loop
sarb
decl
out
dec
sbb
rclb
xorb
aas
mov
jae
lds
jb
andb
daa
xorl
loop
or
je
out
and
aam
jns
jmp
xor
cmp
xchg
aas
lea
sahf
mov
add
jecxz
pop
test
movsb
lock
mov
into
in
jno
mov
icebp
jo
in
icebp
adc
adc
add
cmpsb
jns
and
cmpsl
push
mov
das
ss
cmc
in
pop
push
lret
in
sti
xor
dec
pop
popa
mov
inc
inc
aad
sub
imul
bound
xor
dec
push
ja
icebp
adc
or
addr16
and
sti
jmp
jecxz
mov
std
mov
repnz
je
push
and
clc
lods
bound
xchg
popl
pop
fstl
adc
das
xor
loop
cs
sti
outsl
sbb
das
rcrl
out
or
arpl
lret
and
les
add
pop
xchg
pop
repz
pop
jg
inc
mov
and
int
int3
pop
cmp
jecxz,pn
test
loop
dec
mov
pop
ljmp
pop
push
inc
xchg
xor
sub
scas
sub
cmovns
icebp
lahf
stos
sub
lods
push
dec
pushf
push
lret
jp
push
ds
lcall
popa
mov
push
dec
push
and
and
push
repnz
push
cmp
ds
sub
mov
stc
and
jne
inc
rolb
test
test
sbb
pushf
in
jge
in
inc
sahf
call
shll
pop
bswap
xor
inc
nop
mov
dec
notl
pop
mov
xor
into
mov
int
xchg
fmull
pop
fidivs
pop
or
jo
mov
jl
cmp
jo
mov
jne
popa
fdivrs
dec
mov
mov
and
imul
adc
jb
shrb
inc
data16
sub
xchg
mov
mov
lods
adc
imul
lods
and
repnz
jnp
xchg
fs
xor
xchg
jg
jl
sbb
outsl
movsb
mov
jae
dec
pop
and
roll
add
jge
xor
in
xchg
push
jbe
adc
stos
adc
or
cmpsl
repnz
repz
lods
enter
pushf
adc
adc
mov
pop
xorps
inc
inc
push
mov
pop
enter
cmpsl
mov
adc
sbb
stos
out
adc
mov
jecxz
dec
sub
or
shll
call
pusha
xor
mov
mov
mov
addr16
push
nop
lret
dec
jmp
sbb
xchg
out
les
pop
aas
cmovo
cmc
loop
mov
das
ret
jp
nop
test
mov
cmp
adc
inc
or
and
mov
orb
dec
jo
mov
xlat
push
mov
inc
dec
int
cs
xchg
fisttpll
cltd
lcall
subb
sub
or
xchg
fnsetpm(287
ret
xor
add
clc
sub
sti
dec
push
jle
xchg
jb
les
push
and
mov
decl
or
inc
jp
out
jbe
test
jl
lods
pop
xchg
ret
lds
and
mov
imul
dec
and
or
add
jmp
test
ss
out
sti
jae
xchg
orb
fisubl
sbb
xchg
dec
sbb
testl
adc
loope
pushf
ret
fwait
mov
fidivrl
adc
inc
pop
jns
fadds
xchg
sti
int
sub
int
movsl
cld
leave
or
clc
movsb
dec
and
xor
les
inc
dec
mov
cmp
ja
pop
and
lods
or
ret
inc
fcompl
mov
or
mov
pop
push
mov
pop
icebp
add
jns
fsubs
ljmp
inc
mov
xchg
lods
fstpt
mov
insl
or
repz
pop
rorb
pop
mov
repz
inc
add
dec
jg
cmp
out
je
xchg
loopne
cmp
sbb
push
sub
pushl
imul
push
aam
xchg
flds
scas
adc
mov
inc
gs
aaa
ja
push
or
xchg
add
pushl
leave
rcrl
mov
in
loope
dec
mov
cld
mov
cmpl
jne
or
pop
cmp
lret
mov
mov
xchg
shlb
inc
or
inc
lahf
mov
sub
and
cmp
push
pop
icebp
mov
pop
sub
jecxz
shl
lret
cmp
and
call
repnz
jge
jne
jl
aam
aam
shll
adc
push
cmc
repz
addr16
mov
mov
mov
mull
jne
jle
rcl
sbb
sub
sbb
pop
ss
cmp
mov
sbb
dec
ja
add
pop
hlt
in
addr16
mov
mov
adc
mov
out
dec
cwtl
xchg
lcall
dec
int3
xchg
jne
loop
mov
inc
inc
pop
sahf
or
inc
test
in
bound
dec
pop
mov
mov
mov
out
inc
mov
das
pusha
fbstp
xchg
fcmovnu
dec
and
xor
in
sbb
dec
daa
cmp
enter
add
icebp
clc
jp
jg
or
insl
add
dec
scas
ret
sub
pop
and
aas
movsl
in
and
sti
cmc
stc
jmp
sub
add
movsb
jg
jmp
or
pop
mov
inc
fists
loope
xor
jmp
pop
inc
popf
sahf
in
dec
jnp
or
push
xchg
test
addr16
or
rcl
mov
add
xchg
mov
fbstp
inc
inc
fwait
icebp
in
cmc
scas
data16
lar
jp
dec
push
dec
mov
mov
xchg
push
cmp
pushf
add
lahf
loope
cmp
sti
lret
shlb
insb
add
adc
fsub
xchg
xchg
cmc
out
and
dec
cmpsl
aam
xchg
int
pop
fcom
pop
or
push
mov
mov
std
pop
into
in
repz
fucomip
ja
test
pop
sbb
cmp
push
inc
cmp
mov
ret
lods
pop
jns
mov
les
adc
lret
jl
or
add
push
in
insb
out
decb
xchg
inc
ds
mov
daa
cmp
aad
mov
adc
daa
scas
js
mov
sub
sbb
and
cld
aas
or
gs
call
push
cmp
cltd
mov
push
stos
adc
sub
clc
sbb
mov
push
iret
cwtl
xor
clc
jae
mov
mov
fcmovnb
dec
sub
xor
jbe
scas
dec
xchg
negl
nop
inc
mov
lods
andl
cmp
mov
pop
pop
inc
jp
js
pop
inc
pushf
int3
dec
sahf
fs
aas
dec
mov
cmp
loope
xlat
cmp
popa
outsb
push
xchg
fs
xchg
movsb
cs
inc
or
out
outsl
insl
mov
call
pop
fmulp
mov
fwait
pushf
fs
adc
je
fs
sbb
fnstenv
lret
movsl
pop
fldt
xchg
ds
insl
insb
cli
hlt
test
jge
out
lods
pop
mov
push
push
ds
push
pop
push
lret
cmpsl
popf
ja
leave
cld
in
push
dec
int
push
cld
std
and
jl
rcrw
out
pop
push
adcl
test
insb
mov
pusha
pushf
cld
cmp
mov
inc
sub
sub
sub
push
mulb
subb
sarl
push
fld
sbb
shll
lret
mov
or
xchg
int3
lods
adc
ficoml
cmpsl
jmp
push
rcll
mov
shl
into
ret
movsb
lahf
push
mov
lds
mov
icebp
jo
sahf
mov
into
popf
test
dec
hlt
shll
and
mov
xor
mov
or
jns
sahf
dec
fs
mov
mov
clc
js
imul
mov
sbb
loop
in
scas
popf
xlat
stos
pop
sub
shrb
out
lret
jle
nop
sub
adc
fnstcw
pop
cli
cmp
or
add
sbb
imul
idivl
divl
fiadds
sbb
cmp
adc
jecxz
or
mov
ret
xor
scas
mov
sbb
xor
test
test
pop
hlt
std
test
inc
lods
scas
xor
push
push
iret
or
xchg
and
fs
push
and
test
mov
test
leave
sbb
jne
movb
sti
int
xor
sbb
sbb
lods
lret
xor
mov
sub
inc
mov
mov
push
out
in
ss
ret
mov
adc
iret
dec
cmpsl
xor
les
divb
inc
insl
imul
stos
rdmsr
cmp
add
lods
push
push
inc
fbstp
sbb
jp
mov
sub
push
iret
pop
insb
adc
popf
dec
dec
mov
cltd
adcl
xor
stos
lods
xchg
pop
out
lods
fmul
jmp
push
xchg
sti
lds
pop
mov
pop
aam
mov
test
xor
jb
push
iretw
adc
cmpsb
jno
and
sbb
aaa
pop
jge
push
jns
push
neg
add
fistl
iret
add
or
das
sbbb
sub
test
jo
pop
test
pop
out
dec
pop
and
and
xor
cld
and
jmp
fcoml
cmpsl
popf
mov
test
or
jecxz
xchg
out
test
int
addr16
add
inc
lahf
mov
pop
and
add
icebp
rcrl
dec
push
lods
jp
xor
aam
out
mov
and
je
mov
insb
or
jp
pop
mov
fs
inc
mov
aaa
aam
pop
sub
loopne
xchg
sbb
fstpl
outsl
int3
inc
mov
push
dec
clc
inc
ja
xchg
pop
mov
sbb
out
imul
aaa
pop
dec
rcll
xor
or
sbb
std
jns
flds
jg
cltd
mov
movsb
inc
dec
call
dec
jo
sub
je
cs
jp
mov
mov
adc
jne
data16
push
leave
pop
lods
push
cmp
stos
das
sub
aad
jns
xchg
push
add
aaa
cmc
push
jbe
cltd
dec
jge
jmp
scas
inc
shrb
imul
adc
int3
mov
clc
movsl
rcr
scas
loopne
outsl
push
add
and
jge
into
xchg
clc
gs
sub
sub
daa
and
mov
pop
arpl
push
xchg
sbb
jmp
jp
fsubl
inc
call
mov
bound
xor
es
push
aaa
mov
sbb
xchg
xchg
mov
sahf
adc
push
and
pop
jle
inc
xor
lods
jmp
std
mov
inc
les
test
hlt
sub
in
mov
dec
das
pop
inc
mov
and
test
and
outsb
out
mov
inc
add
aad
push
cmpsl
and
xor
mov
add
stos
lret
daa
mov
xchg
addb
aaa
and
push
jnp
gs
cmc
or
lahf
xchg
hlt
mov
pop
scas
add
inc
or
or
sbb
in
shrb
sbb
test
dec
mov
and
arpl
enter
stos
call
lds
pushf
idivb
or
mov
out
movsl
push
push
sti
mov
xchg
pop
pop
test
add
jl
pop
lock
insl
inc
stos
pop
jns
xchg
xor
adc
shll
out
bound
loopne
pop
xor
mov
icebp
jmp
cmpsl
jl
inc
cmp
mov
lcall
sbb
mov
shr
neg
mov
cmp
jl
push
in
cmp
dec
test
pop
dec
fldt
jecxz
les
neg
pop
mov
push
in
aam
mov
sbb
cld
arpl
ss
cli
fcomip
push
cmpsl
mov
push
lods
push
push
dec
push
add
inc
fildll
stos
xor
mov
and
mov
xor
or
insl
scas
xchg
inc
jmp
push
repnz
shl
mov
out
adc
sub
push
mov
fiadds
mov
cli
push
xchg
or
repz
stos
arpl
mov
pop
mov
lcall
jo
outsb
or
cltd
insl
pop
mov
mov
call
bound
aad
out
stos
and
fmuls
rcr
js
mov
cltd
mov
repnz
xor
push
or
mov
stc
or
xchg
jbe
push
inc
sti
dec
testl
sbb
sub
add
cmp
int
jmp
push
dec
icebp
sbb
mov
inc
mov
xchg
sbb
lcall
push
jmp
fidivl
mov
imul
jo
sub
or
scas
inc
in
push
sbb
gs
insl
cld
mov
decb
mov
jnp
adc
mov
es
add
test
fs
add
push
add
cmp
xchg
and
dec
sbb
inc
movsl
jmp
je
pop
out
xlat
sbb
imul
mov
xor
jnp
mov
in
negl
pop
jnp
call
push
xor
rcrb
icebp
or
leave
test
push
jne
jmp
jb
sub
and
rcll
lcall
xlat
xchg
xor
sbb
xor
arpl
sbb
push
aas
cwtl
jo
aaa
rcr
pop
jne
sbb
xchg
mov
mov
inc
xor
psrlw
mov
inc
mov
push
rolb
lds
mov
mov
test
pushf
mov
in
popa
pop
gs
pop
jb
push
notl
mov
insl
movb
inc
dec
jns
and
jge
faddl
xchg
xorb
loop
addb
loopne
cmp
mov
cltd
push
fsubrs
jmp
test
jb
push
outsb
push
dec
imul
jecxz
inc
call
sub
jae
mov
jbe
imul
xor
xlat
iret
mov
ret
pop
push
movsb
inc
icebp
popf
das
les
xchg
jle
aam
jge
sbb
sbb
sbb
lods
clc
loop
or
fld
mov
mov
lahf
pop
and
sub
rorl
pop
in
aam
adc
mov
jns
outsl
add
jnp
sub
lret
inc
or
mov
inc
sub
lods
mov
mov
test
sarl
fwait
jo
jns
sub
addr16
inc
js
add
and
jg
and
imul
cmp
inc
loop
repz
push
sbb
into
xchg
loopne
pop
hlt
call
cmp
lock
test
add
roll
inc
outsl
add
xchg
fsts
mov
setne
mov
gs
sahf
jmp
inc
repz
or
mov
push
push
and
insl
test
loopne
scas
adc
lds
add
push
rcrb
sub
addr16
mov
xchg
jl
out
loopne
hlt
movsb
fadds
sbbl
adc
pusha
and
sub
cmovns
fsubs
pop
imul
pop
ljmp
out
subb
daa
adc
out
mov
int3
fmull
jb
inc
in
fwait
fs
mov
cwtl
sub
sub
call
mov
jle
lahf
lret
adcb
mov
cli
and
dec
ret
prefetch
adc
jle
pop
fnstenv
pusha
outsb
dec
pop
inc
scas
mov
es
jb
jno
cmp
js
lock
in
outsb
mov
lock
push
cmp
xchg
in
xchg
mov
sbb
int
scas
jo
push
aad
pop
shr
aam
shlb
mov
xor
push
into
jns
jl
imull
pop
cmpsl
andl
ret
shll
inc
mov
jp
addr16
push
int
out
insb
cmpsl
mov
push
jno
sub
or
xchg
adc
inc
cmpb
fisubs
data16
dec
jmp
imul
daa
adc
test
mov
inc
icebp
cmp
adc
jno
sub
xchg
sbbl
sbb
adc
mov
mov
shrl
clc
or
lret
gs
pop
ljmp
insb
int
lahf
jl
cmp
imul
arpl
jle
mov
sub
and
aad
mov
inc
fistl
outsb
xchg
inc
xchg
mov
cmp
add
inc
sub
sub
stos
cmp
push
and
push
cltd
jno
sub
jg
sbb
jne
ljmp
add
rorl
outsb
inc
push
loop
cmp
int3
inc
iret
les
hlt
mov
rolw
pop
sub
pop
xchg
xlat
pop
push
lock
aaa
dec
mov
int3
mov
xor
xor
sbb
mov
cmp
jle
cmpsl
pop
sub
jne
sti
and
sub
mov
sbb
jg
movsb
std
ret
xchg
or
call
outsb
lret
aam
push
out
lret
and
adc
inc
adc
mov
and
shl
sub
lahf
popf
psadbw
lcall
inc
add
mov
cmpsl
dec
or
jo
popf
dec
jl
mov
addr16
das
dec
in
fisubs
sbb
out
mov
nop
cmpsb
xchg
lret
pop
jae
adc
xchg
push
inc
into
shrw
dec
push
outsb
or
lahf
jb
mov
jmp
into
adc
push
sbb
lret
xor
xchg
jg
int3
stos
pop
cld
aam
xor
ror
out
or
add
and
jmp
arpl
mov
lcall
xchg
pop
cld
cmp
lds
xor
xchg
mov
add
movsb
leave
jbe
sub
jge
mov
jns
sub
sahf
jp
fs
or
xchg
scas
mov
xchg
adc
jmp
add
in
gs
xchg
xor
add
mov
pop
cmp
jecxz
jg
inc
inc
insb
notb
xor
dec
out
pop
sub
cmp
sbb
call
mov
sarl
push
or
sti
cmc
dec
call
mov
xchg
mov
fsubs
adc
sbb
inc
pop
out
addl
inc
jle
mov
xchg
mov
cmp
in
test
sub
jl
dec
loopne
adc
fidivl
in
add
out
dec
or
and
xchg
inc
mov
push
push
cmp
jae
std
dec
dec
pop
adc
adc
repnz
cmp
adc
and
es
fistl
fdivrl
lea
adc
xorl
lahf
test
push
mov
insb
sahf
lea
lock
pop
xor
xchg
adc
and
jge
aam
inc
data16
jno
push
icebp
and
popf
jle
movsl
or
nop
xor
sub
xor
xchg
ss
or
cmp
fbld
inc
fcomps
sub
out
fldl
xchg
rcl
in
sbb
adc
push
repz
xchg
xchg
ds
dec
sbb
pop
inc
mov
in
clc
cmp
cmpsl
lret
insl
mov
imul
sar
ret
mov
sbb
cmp
dec
nop
lods
or
and
jae
pop
jo
and
mov
xor
mov
add
push
pusha
mov
xchg
shll
call
inc
cmc
enter
dec
inc
ficoml
mov
test
mov
stos
mov
xor
popf
imul
or
js
testl
mov
cmp
mov
push
mov
mov
sbb
xchg
sub
adc
cwtl
insl
loop
clc
pop
jle
dec
pushf
mov
fmulp
sahf
sbb
push
pusha
cli
add
adc
mov
add
incb
les
push
mov
dec
mov
data16
pop
mov
icebp
xor
dec
fstpt
ror
lock
outsl
test
rcl
popa
pop
or
push
cwtl
jns
ret
sbb
fildll
movsb
adc
callw
incb
and
sub
add
mov
mov
jmp
xchg
sbb
inc
out
adc
sub
jp
mov
push
nop
mov
lcall
push
loopne
adc
add
add
jns
mov
jno
clc
xor
sub
pop
sahf
dec
or
loop
test
jecxz
pop
dec
push
dec
fcmovnbe
stc
je
sbb
in
imul
or
insb
lahf
sarl
fisubs
push
dec
adc
rolb
cli
iret
xor
addl
pop
out
mov
clc
xorl
jb
insb
sar
and
jne
dec
mov
mov
icebp
push
imul
mov
sub
sti
mov
pop
int3
inc
push
jg
movsb
xor
fsts
lret
push
stos
adc
negb
cmp
bound
stos
into
lea
cmp
mov
ja
pop
mov
jp
arpl
inc
ss
shr
and
sti
shlb
lret
mov
cs
jno
in
scas
mov
fisttpll
clc
and
jbe
or
xor
test
mov
test
cmp
sub
loop
aam
mov
jno
mov
loop
out
jle
repz
call
sub
adc
iret
sub
fisubrl
jne
xlat
stos
jno
pop
les
xchg
jb
mov
rcrb
xchg
js
cmp
int3
sbb
enter
cli
mov
sub
or
imul
xor
das
testl
jle
out
and
test
xchg
pushf
subl
push
icebp
fs
jp
push
push
ds
aaa
sbb
push
in
clc
subb
mov
mov
mov
ljmp
enterw
inc
inc
in
xor
movl
lock
xchg
xorb
rolb
in
dec
fs
fnsave
ds
out
imul
or
jno
jo
xlat
jg
pop
push
dec
push
jns
pop
push
sahf
inc
mov
add
ljmp
adc
popf
adc
stc
and
adc
frstor
pop
ja
mov
jmp
pusha
add
jbe
mov
imul
and
mov
push
xchg
inc
movsb
repz
ljmp
sub
sbbb
and
call
cmp
outsl
adc
cs
cli
repz
xor
push
jne
imul
dec
movsl
xor
pop
dec
dec
scas
in
jae
cs
outsl
jb
xchg
mov
push
push
cld
sbb
loopne
pop
jp
fstps
xor
iret
dec
mov
cli
sbb
gs
mov
inc
mov
sbb
add
in
das
ret
icebp
push
pushf
xor
mov
pmulhw
push
subl
shrl
and
stos
add
xchg
xchg
cmp
mov
cltd
fs
xlat
jnp
in
inc
int3
loop
ret
mov
sbb
ds
xor
int
cmc
loope
repz
shl
push
int
or
ret
clc
jnp
mov
shll
addl
xlat
or
or
jl
or
insl
and
int
mov
add
push
add
aam
jae
insb
nop
std
push
sbb
push
dec
mov
xor
adc
or
mov
xor
sub
inc
pop
orl
or
mov
fadds
mov
push
xchg
fcompl
das
xor
lahf
into
push
adc
ficoms
mov
shl
mov
fs
mov
ja
pop
into
or
mov
imul
mov
dec
shlb
mov
rolb
cmpsl
push
add
js
mov
pusha
sti
sarb
push
xor
jns
mov
in
shlb
sub
pusha
or
cmc
or
sub
sti
sbb
sub
mov
pop
cmp
sbb
adc
add
cmp
pop
test
xor
mov
int3
inc
into
sarb
testb
jecxz
xor
jp
out
pop
sar
test
xchg
fwait
sahf
inc
add
inc
push
mov
sar
cmp
lcall
sbb
add
into
das
jg
sarl
lods
and
out
pop
or
lods
outsb
xor
xlat
cmpsb
xor
int3
cmovo
xchg
push
lds
stc
dec
fadds
shrb
or
test
out
mov
icebp
mov
sbbl
add
out
ds
shlb
mov
dec
mov
mov
mov
insl
push
mov
adc
pop
xchg
xchg
pop
add
sbb
cmp
jnp
stc
push
addl
bound
push
mov
add
icebp
dec
mov
pop
fstp
sbb
adc
inc
inc
xchg
push
lret
cmpsl
sbb
adc
into
lods
in
leave
in
or
xor
sbb
sub
test
fsubrl
out
push
stos
add
or
lea
jns
dec
sub
fsubl
xchg
fs
xor
add
mov
mov
xor
sbb
pop
sbb
and
add
fs
or
pusha
mov
test
jle
xchg
xor
aaa
dec
pop
jmp
xchg
not
lock
push
sar
xchg
push
adc
jge
push
adc
add
dec
or
sar
test
lods
mov
sbb
add
lret
out
pop
or
cmpsb
xor
push
imul
push
and
leave
leave
or
lret
outsb
leave
jle
int
out
mov
out
incb
stos
mov
push
mov
fisubrs
pusha
dec
pop
mov
cmpsl
hlt
imul
adc
dec
push
data16
cmp
repnz
movsb
jle
shrb
notb
lods
divb
dec
dec
inc
rclb
and
nop
push
lock
sub
add
push
cmpsb
mov
std
inc
adc
dec
jns
adc
out
cmp
into
pop
or
mov
adc
fmul
push
fldenv
or
cmp
shl
data16
stos
mov
stos
mov
movsl
jg
add
les
lods
cmp
cmp
je
pop
out
mov
in
pushf
push
or
sbb
lock
xchg
cmpb
xor
insl
out
pop
fs
lods
enter
add
cli
mov
push
xchg
icebp
push
lea
outsb
jno
enter
dec
and
rclb
cmp
sub
pushf
xchg
xor
shrl
ffreep
lret
stc
xchg
adcb
cmpb
sub
push
rcrb
mov
sbb
popf
sub
mov
mov
push
and
addr16
rorl
push
scas
jl
repnz
in
and
repnz
pushf
fmuls
lcall
pop
push
push
jbe
adc
repz
mul
mov
cmp
mov
sahf
outsl
mov
int
mov
popf
rolb
mov
inc
xchg
stos
inc
adc
mov
pop
add
lret
or
xchg
xchg
into
lods
inc
lcall
std
loop
call
mov
outsb
nop
cs
cmc
mov
mov
jae
lods
add
lods
sub
xor
jecxz
rep
loopne
mov
sahf
incb
sti
lods
je,pt
push
jo
out
pop
lahf
push
hlt
movsl
cs
mov
and
sbb
jp
xchg
sti
gs
test
into
sub
int
adc
mov
adc
inc
loope
and
ret
push
shlb
xchg
xor
fstpt
mulps
dec
push
sbb
clc
jmp
xchg
fiaddl
mov
das
call
xchg
dec
mov
outsb
out
test
xor
rorl
imul
test
nop
pop
dec
mov
je
lret
iret
and
dec
pop
jecxz
aam
mov
in
mov
push
mov
mov
push
jmp
fwait
add
xchg
out
and
stc
adc
inc
test
outsb
gs
test
mov
aam
mov
jg
mov
enter
xchg
cmc
inc
stos
inc
mov
xchg
jne
mov
add
mov
add
loope
cld
pop
inc
nop
pop
or
mov
movsl
repnz
dec
mov
ja
into
stc
and
mov
mov
or
or
push
sbb
sbb
cmp
mov
sbb
pop
pop
xchg
out
or
aaa
nop
jnp
sub
shl
push
inc
jecxz
daa
mov
std
mov
mov
les
sbb
and
add
jnp
dec
js
in
cwtl
push
inc
jge
mov
mov
fdiv
fsubrl
mov
mov
shl
jle
push
and
lods
dec
cmp
lret
fiadds
call
lahf
jne
outsl
mov
cmp
daa
mov
aaa
dec
test
loopne
or
jle
adc
repnz
into
cmpsb
insl
popf
push
subb
repz
cltd
cltd
ret
add
mov
lds
or
mov
xchg
scas
clc
mov
inc
aad
xchg
orb
pusha
push
push
fldl
lock
roll
shll
mov
xlat
jns
mov
testl
lret
mov
in
xor
sbb
ret
cmp
jnp
jl
test
push
inc
xchg
mov
mov
addr16
ds
or
subl
xlat
out
pop
fiadds
mov
mov
jne
adc
out
dec
in
sarb
popl
mov
xchg
cmp
dec
cwtl
push
lea
fwait
cmpsb
xor
lahf
scas
jbe
addr16
iret
insl
dec
inc
push
hlt
dec
mov
xchg
push
test
ss
adc
fildl
jno
add
int
outsb
cmp
inc
push
repnz
popf
inc
lock
and
dec
xor
loope
fcmovu
loopne
mov
lret
mov
sbb
cli
aad
jns
and
cmp
jno
mov
jbe
loop
adc
stos
xorl
sbb
xchg
out
inc
testb
jg
lahf
push
add
pop
push
stos
add
jnp
push
cmpsb
les
jo
jle
out
xchg
rol
out
push
lods
mov
cmc
fcoms
mov
lock
push
insb
mov
es
mov
cmpb
jmp
jg
ficoml
shll
dec
xchg
jl
mov
dec
or
imul
push
cld
ret
sbbb
inc
lret
movb
mov
pop
pop
insl
push
lods
dec
pop
adc
ds
mov
mov
rorl
insl
sub
cmpsb
shll
mov
lods
cmp
js
insb
in
jnp
lods
movsb
subb
imul
popa
ds
or
mov
fwait
cs
add
sbb
test
xchg
aad
dec
imul
adcl
xchg
cmp
cmove
xchg
sbb
out
mov
xor
adc
iret
adc
shlb
shlb
mov
fwait
mov
add
mov
pop
push
js
cmp
push
jns
cltd
popf
ja
ljmp
stos
adc
incb
ficoms
mov
mov
mov
jl
or
jp
cmp
xor
adc
mov
dec
adc
decl
jnp
jae
call
mov
lahf
cmpl
cmp
cmp
sbb
pop
and
mov
jne
adc
fwait
subl
jmp
or
and
ds
pop
mov
aas
scas
ret
andl
pusha
js
sbb
lcall
into
clc
in
fucom
mov
inc
xchg
sub
repz
dec
jp
dec
fcoml
stc
mov
data16
scas
and
pusha
cmp
mov
dec
lret
mov
mov
and
in
daa
xor
out
pushf
daa
fldl
add
scas
add
sahf
xchg
or
mov
addr16
ja
ret
cltd
outsb
jns
and
insl
flds
mov
sub
cltd
and
enter
xchg
push
popa
pusha
sbb
adc
pop
xchg
mov
scas
in
dec
lods
sub
out
jne
inc
and
jae
lcall
jecxz
cmc
jle
outsb
xchg
and
ret
inc
inc
bound
and
mov
loopne
shll
aad
and
mov
fsts
dec
incl
insb
pushf
and
and
outsl
jns
addr16
cltd
mov
or
rolb
lea
mov
mov
sub
and
cmc
pop
mov
repnz
add
or
dec
mov
ljmp
push
cmp
pop
imul
jb
sarl
into
pop
add
sbb
jmp
enter
and
pop
push
or
dec
lods
in
push
into
push
add
rcl
push
lahf
test
xor
gs
fistl
rol
sbb
in
cwtl
adc
imul
fstpt
not
loope
push
popa
and
arpl
loope
in
cmpsb
jne
and
lock
into
add
jno
lea
ljmp
xor
int
mov
jbe
stos
lret
pop
and
sbb
push
rcrb
gs
rorl
fs
push
pop
mov
lock
addr16
fsub
sbb
sub
pop
in
fisubrs
mov
call
jmp
lahf
jp
insb
mov
fsubrl
xchg
xchg
jo
xor
sub
mov
subb
js
add
movsl
js
imul
gs
pop
jge
lods
hlt
movl
cmpsl
leave
or
loopne
jae
sub
or
adc
mov
xorb
iret
pop
cmpsl
jo
jbe
popa
mulb
test
sti
pop
dec
inc
addb
loope
mov
and
mov
mov
data16
enter
popa
fwait
sub
push
or
adc
mov
fisubrl
cwtl
xor
mov
mov
mov
insb
or
test
nop
sbb
jnp
mov
repnz
cs
mov
cmpsb
movsb
mov
or
add
aaa
std
jo
int
es
and
out
xchg
add
arpl
xchg
push
xchg
xlat
stc
pusha
jmp
fstpt
cmpl
sbb
xor
xor
xor
sbb
push
fsts
das
push
sbb
cmp
xor
inc
mov
and
add
pop
inc
xor
sbb
retw
jb
leave
dec
dec
pop
sbb
or
movsb
nop
les
jno
dec
cmp
fcompl
jbe
lds
push
bound
pop
incl
pop
sbb
ljmp
sub
add
mov
cmp
or
dec
inc
fcoms
jae
insl
mov
pop
stc
je
aas
repz
cmp
xor
jmp
cwtl
lea
mov
popa
and
sub
faddl
push
add
stos
xchg
jnp
cmp
fcoms
fbstp
mov
push
lahf
out
xor
gs
sbb
push
lds
mov
lret
adc
rcr
inc
stos
jg
dec
pop
jo
popf
enter
mov
fsubr
in
pop
add
and
test
pusha
mov
inc
mov
ret
mov
xor
jg
mov
dec
sub
inc
shrl
xorb
int
ds
push
jns
jecxz
fbld
pusha
jg
jne
not
add
dec
adc
cld
add
imul
adc
pop
jb,pt
ja
in
xchg
adcb
add
nop
inc
mov
fisubs
jmp
ret
xor
sub
xor
loop
test
push
cmpsl
mov
jne
imul
jnp
inc
xor
ret
xchg
jo
mov
ljmp
xor
in
nop
js
repz
movsl
jns
xchg
inc
mov
pop
sub
mov
stos
sbb
jmp
rorl
adc
dec
dec
jmp
dec
jb
imul
mov
aas
mov
ret
jp
test
mov
add
sbb
int3
jmp
call
aaa
fistpll
outsb
cmpsl
loope
rcr
pop
cmc
ss
call
mov
lret
and
outsl
aad
je
push
mov
jns
cli
push
loope
dec
pop
xor
popf
add
mov
add
or
cld
fisttpll
mov
pop
xchg
leave
repnz
lods
in
std
xor
mov
mov
push
mov
das
mov
mov
mov
and
sbb
mov
pop
sub
std
sbb
in
xchg
adc
sub
and
xor
lahf
mov
mov
aad
add
jg
push
sbb
fistps
loopne
lods
xor
sbb
push
out
xchg
in
cli
jb
dec
iret
push
xchg
and
negb
and
or
or
idivb
and
jns
cli
sbb
cmp
popa
out
add
push
fwait
lods
in
xchg
iret
int3
ficomps
and
ljmp
and
out
orl
xchg
shl
fwait
and
push
test
xchg
ljmp
in
dec
stos
jo
pop
lahf
dec
pop
dec
sub
mov
mov
push
jge
mov
push
roll
push
cmp
pop
and
js
or
mov
push
or
and
daa
shl
dec
cmc
xor
mov
cwtl
sahf
shr
movsb
or
dec
inc
lea
pop
push
push
add
lods
cmpl
arpl
xchg
seto
push
in
mov
out
roll
add
inc
xchg
int
notb
pop
das
insl
dec
push
lahf
ret
movsl
pop
xchg
xor
jg
mov
sub
cmpsl
call
mov
pusha
out
jmp
lds
test
jne
xchg
pusha
inc
mov
pop
es
lret
jae
or
cs
fs
call
aam
movsb
js
add
mov
and
inc
decl
xor
dec
sub
jne
jnp
dec
jmp
mov
inc
adc
pusha
mov
subl
mov
jnp
cmpsl
mov
xchg
mov
movsl
addl
out
dec
popa
rcrb
sub
sub
shlb
xor
in
push
es
loopne
add
or
xchg
aad
and
pop
or
mov
inc
daa
out
movsl
sub
mov
and
jne
cmp
repnz
outsl
jb
cmpsb
sbbl
das
dec
rcl
xlat
ja
xchg
mov
mov
loope
bound
pushf
mulb
cltd
outsb
in
mov
je
mov
push
es
sar
jmp
mov
jmp
and
add
xor
daa
sub
cmp
push
or
cli
sbbb
cmp
xchg
cmp
aaa
lret
inc
or
add
xchg
ret
add
fisttps
dec
sti
testb
mov
arpl
cmp
cmp
daa
inc
js
jecxz
adc
repz
das
sub
jne
mov
push
cmp
and
ror
mov
mov
cmpsb
xchg
andl
lds
sbb
repz
into
scas
and
add
and
dec
insl
pop
out
fists
or
mov
js
sbb
pop
push
cs
es
incb
sbb
inc
iret
iret
cmp
pop
clc
sar
adcb
xor
xchg
es
int
sbbb
outsb
sbb
clc
adc
and
fwait
pop
bound
mov
enter
jns
and
stos
fisttpll
mov
out
push
push
xchg
ja
enter
leave
lea
xchg
mov
imul
shrl
push
gs
cli
test
mov
jne
dec
add
mov
adc
dec
adcb
push
adc
addr16
pop
inc
mov
test
icebp
xchg
daa
aas
gs
in
adc
inc
daa
call
ret
out
pop
stos
or
rcr
sbb
inc
push
sahf
out
pop
inc
jae
rcrb
adc
insl
jne
inc
mov
jecxz
movsb
cmp
sub
loopne
out
push
xchg
mov
lds
xchg
insb
xor
dec
push
sbb
xchg
jl
cmc
imul
add
add
push
mov
adc
int3
mul
jnp
mov
pop
pop
sbb
lea
push
pop
aas
shll
hlt
aas
pusha
jae
xlat
div
bound
clc
ss
and
lods
pop
and
rorl
push
push
lea
or
jne
jns
das
je
cmp
and
sbb
jmp
pop
mov
xor
and
jmp
xor
push
mov
and
lret
adc
cld
push
scas
es
aad
mov
aad
add
out
pop
add
mov
mov
lahf
xchg
sbb
mov
repnz
xchg
mov
xchg
fwait
mov
xlat
das
inc
mov
add
cmp
aad
jecxz
pushf
xor
inc
push
or
test
inc
cmpsl
and
inc
mov
ljmp
jbe
add
or
shl
inc
outsb
xchg
pop
stos
xchg
push
xor
inc
mov
xchg
add
push
mov
mov
fidivrl
pop
movsb
fisubl
shll
sarl
dec
and
dec
cmp
sbb
movsl
lods
add
lret
sbb
or
push
aaa
sahf
enter
loopne
js
in
cmpsl
jno
add
push
rorb
push
push
rcrl
dec
mov
mov
mov
in
mov
xlat
pop
xchg
mov
pop
adc
pop
xor
pop
jle
sub
gs
xor
hlt
addl
lods
sahf
mov
test
mov
pop
sbb
mov
shll
out
or
out
or
xor
aad
adc
pushf
mov
outsl
in
xchg
ja
notl
fdivrp
sarl
sahf
cmp
inc
ret
bound
jnp
ret
sbb
cwtl
cmc
cmc
or
xor
jmp
push
js
es
cmpsl
pop
xchg
cwtl
push
add
es
lods
adc
lods
inc
jne
mov
cs
es
dec
test
ss
jp
mov
cwtl
adc
sbb
fdivrl
pop
push
jnp
mov
xchg
scas
adc
lock
int3
mov
lock
cmpsb
sub
out
adc
sbb
std
fbld
fbld
dec
adc
cmc
pop
or
lock
lret
sbb
in
mov
xchg
cmpsl
dec
jo
fwait
jp
or
inc
enter
ret
adc
scas
ds
ret
jns
xchg
ljmp
stos
stos
push
pushf
mov
xchg
mov
add
sub
sbb
fisubrs
adc
lods
icebp
aaa
adc
test
and
shll
bswap
jge
cmp
out
mov
xor
adc
rcl
lcall
sbb
mov
out
pop
pushf
test
sbb
add
nop
pusha
gs
jmp
xor
hlt
aas
jecxz
icebp
lock
xor
shl
lock
mov
push
inc
mov
gs
movsl
pop
int3
out
in
in
add
mov
testb
push
scas
push
mov
and
and
and
popf
fisttps
fs
jo
negl
mov
fnstenv
ljmp
xor
mov
pop
push
data16
or
nop
iret
inc
insb
adc
push
sub
ret
and
cmpsb
cmpsb
fistpll
mov
push
mov
addr16
dec
cmpsl
aad
pusha
sbb
jmp
cmpsb
adc
adc
adc
jb
iret
cmpl
pop
jno
jg
inc
xchg
push
pop
aas
and
fwait
daa
pop
pop
xchg
inc
inc
popa
js
divb
out
paddsb
ds
insb
cld
test
nop
xor
push
negl
add
mov
mov
mov
mov
mov
in
mov
pop
xor
pop
mulb
gs
fstl
pop
mov
ret
imul
sbb
shlb
jno
clc
sub
mov
cs
jbe
loopne
dec
jmp
clc
cltd
sbbb
xor
jp
or
pop
mov
jl
mov
xor
in
jnp
fldenv
loop
or
xor
or
pop
ljmp
sti
adc
dec
inc
les
jnp
sbb
stos
or
sarb
cmp
adc
push
push
jg
pop
outsl
movsb
lock
mov
jle
sub
pop
xchg
pop
push
mov
std
pop
lret
or
jo
divb
mov
xchg
les
xchg
sub
add
inc
mov
rcrb
sbb
add
rorb
cmp
daa
mov
bound
in
push
inc
or
ficompl
pop
cmp
pop
mov
add
sub
mov
movsb
sbbl
call
and
push
xchg
xchg
and
pop
sub
pop
sbb
and
mov
xlat
sub
lds
and
and
xchg
aam
les
repz
push
ret
mov
inc
int
dec
xchg
cs
xorl
insl
mov
ds
ret
ja
scas
pop
mov
fdivs
cwtl
mov
in
dec
inc
sbb
xchg
or
push
out
adc
rclb
inc
cli
jle
sbb
iret
lods
fisubs
dec
sbb
mov
mov
push
cwtl
pushf
shl
insl
loope
inc
inc
mov
pop
es
clc
nop
pop
aas
dec
or
or
test
cmp
pop
enter
or
cs
push
or
nop
add
lods
sbb
out
dec
inc
mov
movsl
or
std
jmp
arpl
push
notl
sub
pop
mov
and
push
loop
repnz
arpl
xor
gs
sub
pop
call
lods
int
cmp
xor
roll
pop
pop
sub
xchg
dec
mov
or
call
sbb
adc
int
mov
dec
test
xor
jle
ljmp
cmpsl
lds
jne
in
mov
scas
ja
and
std
jle
loopne
hlt
lea
sbb
fiadds
mov
das
aad
test
xchg
cmp
jb
push
aad
sub
and
dec
addr16
popf
daa
push
lods
mov
cmpl
in
xor
lds
in
lods
outsl
sbb
cmpb
fadds
and
int
xchg
out
shlb
fldenv
clc
dec
fs
mov
sub
mov
nop
fwait
cmp
std
outsl
cmc
pushf
xor
and
xor
inc
imul
loope
xchg
shlb
or
int3
mov
imul
push
xchg
lret
mov
in
sbb
xchg
daa
lcall
inc
cmp
inc
clc
js
repnz
inc
test
nop
or
dec
mov
mov
dec
mov
pop
repz
and
out
dec
pusha
push
mov
testl
push
test
mov
sbb
fnsave
mov
fdivr
aas
mov
xchg
jp
pop
in
cwtl
mov
clc
inc
jbe
push
es
mov
lret
cmpsl
pop
aam
repz
cmp
adc
sahf
cmp
jmp
jmp
loope
add
in
shl
fildll
mov
dec
add
inc
adc
mov
pop
pop
rcr
fistps
mov
frstor
ss
lods
addl
sbb
cmp
or
addr16
jle
inc
jns
fnsave
imul
loopne
arpl
pop
cs
es
xchg
je
mov
leave
push
stc
and
or
fwait
testb
ss
xchg
jp
add
jne
jae
push
movsb
push
pop
fs
stos
xor
pop
cld
jg
cmp
xchg
insl
punpckhbw
std
cmpsb
divl
cli
xlat
aas
push
jb
int
pop
lock
sahf
jge
aas
jbe
dec
sbb
enter
sub
loopne
inc
pop
and
fiaddl
adc
inc
mov
dec
lea
cld
cmp
sub
dec
add
mov
scas
adc
add
mov
fidivs
test
mov
data16
arpl
aaa
xor
dec
dec
in
xorb
stos
stos
ja
pushf
fwait
out
out
ficoml
cmp
sbb
ror
mov
in
pop
imul
dec
xchg
xor
in
cmp
sub
jge
mov
and
xchg
xchg
cmp
popa
lods
dec
mov
daa
mov
cmp
outsl
xchg
dec
cs
add
sbb
cmp
cmp
jge
imul
hlt
push
call
ret
jae
data16
popa
imul
xor
jne
pop
pop
ja
call
int
cmpsb
popl
rcrb
push
push
lds
adc
je
dec
dec
adcl
push
xor
adc
xlat
clc
jl
aas
pop
jg
rorl
cli
pop
mov
jg
and
adc
cmp
mov
lods
shll
xor
or
sbb
call
sub
push
dec
enter
insb
push
sub
jg
sbb
mov
mov
fidivl
cs
mov
ds
pop
bound
in
jns
std
jnp
pop
push
insl
push
cmp
outsl
in
mov
mov
pop
push
mov
push
or
ficoms
inc
jbe
hlt
or
fldcw
xor
lods
dec
fdivl
imul
mov
xchg
mov
int3
push
inc
mov
inc
in
or
cmp
dec
sub
inc
mov
out
dec
aam
push
inc
leave
cli
sub
cmp
loope
es
cmp
sub
fidivl
mov
sbb
or
repnz
add
insl
add
jmp
xchg
lods
imul
divb
mov
nop
jne
add
jge
out
cmp
pop
cmp
and
iret
cmpsl
cwtl
ljmp
nop
repz
jecxz,pn
mov
adc
stos
mov
xchg
mov
mov
jb
inc
add
je
xchg
movmskps
sbb
mov
fstpl
test
cmp
pop
loop
pop
jg
dec
adc
jmp
ss
cld
sbb
jp
jae,pt
dec
hlt
sub
add
aam
adc
sbb
mov
cltd
ljmp
mov
ja
push
inc
adc
movsl
mov
fisubs
sub
in
js
outsb
jae
add
cmp
jnp
jbe
adc
push
imul
and
add
lods
scas
jo
ja
adc
stos
push
ficompl
cmp
add
xor
pop
push
aas
js
inc
jge
xor
adc
push
outsb
cmpsb
sarb
add
inc
jmp
fnstsw
mov
jmp
rcrl
stc
mov
mov
bound
inc
in
xor
inc
les
std
sub
lds
imul
daa
xchg
lea
insb
lret
xchg
fs
xchg
xchg
inc
scas
jge
push
movsl
or
xchg
push
sbb
mov
sarl
daa
sub
sbb
leave
lret
xchg
outsl
fbld
cmp
push
pop
adc
bound
mov
sbb
lds
inc
xor
cwtl
rolb
inc
clc
shrl
jb
nop
insl
xchg
inc
push
notb
inc
movsb
fidivrs
sub
dec
inc
orl
nop
fs
or
paddsb
xor
call
nop
out
push
jmp
add
js
lret
cmpl
or
fisubrs
push
int3
ret
dec
icebp
sbb
push
fidivs
cld
inc
inc
inc
cmp
aad
jns
jnp
inc
cld
lret
push
shl
imul
std
popa
data16
orb
rorl
fs
and
ss
sub
fnstenv
jae
mov
xorl
jns
leave
jae
bound
ss
xor
mov
mov
mov
je
xor
out
sahf
xchg
stc
loope
test
xlat
push
jb
mov
pusha
lods
sahf
sbb
sahf
dec
push
cs
push
pop
xchg
sub
jnp
out
inc
mov
out
aam
cmp
pushf
in
test
in
in
pop
jge
cmp
adc
fnop
int3
sub
mov
enter
xchg
inc
fwait
mov
mov
sub
js
lret
inc
mov
pop
inc
mov
out
mov
aaa
imul
and
fmuls
sarb
insb
in
inc
jl
push
mov
push
shlb
inc
mov
es
sbb
inc
lcall
xchg
inc
fwait
addr16
int3
and
loop
loope
std
test
lahf
sub
sbb
mov
cld
test
lds
push
imul
pusha
test
sbb
gs
xorl
jp
sub
mov
test
dec
push
mov
cmp
mov
call
or
neg
fcompl
dec
call
ret
js
push
std
aam
loope
xorl
dec
fsts
dec
xchg
and
or
pop
sbb
and
mov
fwait
iret
mov
push
add
mov
cmp
cmpsb
lock
repz
mov
sbb
cmp
lret
mov
sub
subl
data16
mov
je
rep
inc
xchg
dec
mov
mov
jecxz
fildl
shr
pop
jbe
adc
fmull
inc
out
das
lahf
imull
sub
or
fcomip
repnz
inc
adc
add
adc
push
fstpt
or
xchg
mov
sti
cmp
adc
add
shll
pop
cli
cli
push
or
pop
cld
jle
lods
int3
ret
leave
in
add
fadds
ret
and
pop
mov
ja
out
xor
in
arpl
fcoms
pushf
or
dec
xor
mov
add
or
lock
mov
xchg
inc
in
cmpsl
inc
push
mov
jp
movsb
or
in
fmuls
add
je
xor
add
sub
xor
repz
popf
mov
adc
push
addr16
xlat
mov
bound
sub
pop
xchg
lcall
std
sbb
mov
push
push
cmpl
int3
and
int3
xor
jbe
sbb
aas
sub
pop
call
mov
icebp
lret
je
and
sbb
test
nop
xchg
pop
cmp
fdiv
pushf
cs
mov
shl
xor
int
ror
xchg
aas
jno
pop
add
push
and
pop
loop
fistpl
sub
and
cs
jb
cltd
mov
jnp
and
sub
cmpsb
imul
fisubl
and
sub
lods
and
and
push
mov
fcoml
mov
repnz
scas
and
sarb
and
push
popa
cmp
adc
mov
cmp
stc
sbb
mov
and
hlt
loopne
sbb
add
push
filds
dec
xorl
push
popf
test
sub
pop
sub
mov
mov
dec
ja
adc
sbb
enter
imul
push
jg
stos
inc
jne
ljmp
fisttps
into
mov
and
leave
add
daa
cmp
mov
call
loop
int3
xchg
lret
stos
test
sbb
xor
push
in
mov
pop
dec
adc
outsb
clc
xchg
xchg
js
sub
adc
pop
movsb
xchg
sub
out
ss
or
clc
xchg
cwtl
ret
je
fiaddl
bound
hlt
dec
arpl
jecxz
inc
leave
pop
cmpsb
xchg
movsl
movsl
cmp
das
cmp
loop
pushl
push
xchg
daa
aam
mov
xor
pop
mov
pushf
push
lock
mov
pop
and
jno
jmp
pop
push
push
adc
xor
fildll
shlb
in
int3
int
push
sbb
jns
push
sub
sbb
cmp
dec
les
loopne
fwait
and
inc
mov
lret
add
pop
gs
out
pusha
inc
jno
dec
std
call
bound
mov
push
add
int3
in
dec
insb
pop
xchg
xchg
aas
sarb
adc
xchg
rol
daa
cli
xor
shrl
test
dec
imul
sbb
sbb
pop
push
adc
nop
pop
mov
lock
sub
fstl
fisttps
jl
mov
jmp
xchg
xchg
push
jb
hlt
mov
sbb
popf
out
cmpb
push
xor
or
adc
add
cmp
sti
scas
sub
push
mov
movsb
scas
ljmp
dec
incb
fwait
sub
xor
cmp
movsb
or
pop
cltd
test
outsl
mov
add
jbe
and
push
rclb
int
xlat
sub
aam
out
sub
outsl
fistpl
imul
icebp
repz
jnp
daa
and
jg
ja
cli
je
aaa
jb
lods
test
mov
cmc
and
in
aas
call
adc
gs
mov
jo
inc
push
cs
xlat
mov
loopne
xchg
sbb
rcr
dec
lret
inc
ljmp
addr16
cli
loop
ljmp
aad
dec
cmpsl
insb
dec
push
dec
aad
sbb
sub
dec
push
shlb
addl
leave
pop
ret
cli
cwtl
fisubs
mov
iret
fsubl
lret
rorl
fwait
xor
imul
lahf
dec
dec
clc
dec
scas
ret
push
dec
mov
rolb
in
dec
mulb
outsb
pop
jecxz
or
jbe
test
push
js
jle
push
inc
adc
push
dec
stos
das
data16
addr16
add
ror
cld
fwait
push
lods
add
mov
jmp
mov
flds
xchg
pop
js
xchg
cmpl
jecxz
aaa
adc
push
fisttpll
cmpsb
sub
sub
lds
push
fst
pusha
mov
xor
add
cmpsb
fmul
pusha
sub
or
lahf
and
mov
addr16
test
jne
mov
fneni(8087
test
sbb
pop
mov
push
add
sbb
dec
jnp
jge
push
push
arpl
aaa
mov
dec
mov
jecxz
lods
sti
cltd
shl
mov
mov
cmpsl
mov
inc
pop
lcall
test
lahf
xchg
sbb
fsubl
das
es
nop
or
decl
xchg
loope
mov
aad
movsb
ja
push
decl
mov
loope
sub
mov
aaa
push
add
sub
fidivl
mov
and
cmpsl
rcr
jbe
pop
pop
fstpt
mov
mov
icebp
sbbl
mov
xchg
xor
sbb
ss
cld
jge
fbld
or
scas
into
lret
out
into
inc
stos
outsl
shlb
ja
inc
inc
iret
gs
and
xchg
mov
jge
test
test
popa
call
sub
fildl
out
sarl
sbb
in
loopne
popf
aas
jns
push
inc
repnz
jb
subl
bound
popf
clc
xchg
inc
mov
push
jmp
icebp
mov
cmp
addr16
stos
jp
sub
mov
xor
outsb
dec
data16
enter
xor
and
stos
jg
lret
push
push
mov
int
pop
mulb
cltd
pushf
mov
shr
lcall
ret
mov
loop
cltd
push
mov
jmp
xor
bound
out
gs
fucomi
loop
cli
rcrl
mov
mov
lea
cmp
or
sarl
cwtl
movsb
daa
push
mov
and
pop
push
aad
pop
shlb
shlb
popf
pop
aaa
push
mov
loope
rorb
fimuls
bswap
das
push
jle
int3
imul
push
xchg
shlb
mov
pop
shl
push
xor
ljmp
xor
push
sbb
push
out
mov
jp
or
and
les
dec
stos
cld
sbb
test
pop
inc
dec
push
jno
mov
fs
movsb
popa
das
js
scas
mov
sbbl
clc
mov
lret
ror
es
mov
call
cmpsb
sub
test
jge
rolb
outsl
lret
shrb
insl
mov
fwait
xchg
rcll
or
push
outsl
test
push
pop
lret
out
insl
and
lret
mov
in
test
adc
lret
mov
and
bound
popa
imul
test
stos
push
je
cmpsl
push
push
jle
cmp
loop
mov
adc
push
mov
jno
sub
aas
jge
dec
xchg
js
popa
push
xchg
xor
lods
imull
jns
repz
adc
cmc
push
out
xchg
inc
fwait
add
push
xchg
xchg
mov
or
ja
ds
dec
push
adc
loop
sub
sub
adc
fisubrs
andl
jle
mov
sbb
inc
insb
lea
jae
popf
inc
pushf
sbb
add
cmp
enter
mov
je
adc
xchg
cmp
dec
fisubrs
pop
sub
push
cmp
sbb
fildll
xchg
mov
lds
fimull
xlat
pop
clc
pop
and
xor
test
lock
test
mov
ljmp
mov
cmpsl
jg
dec
push
cs
aad
ret
sbb
repnz
sub
adc
fldt
lods
lret
into
dec
and
inc
bound
push
fcmovnu
mov
cli
sub
jae
aad
cmp
testl
pusha
mov
ret
popa
fbstp
sbb
xchg
sbb
in
icebp
popa
aas
sbb
add
or
lds
pop
pop
std
repz
sub
aas
mov
adc
xchg
mov
ss
lea
in
lcall
aad
xchg
xor
xor
adc
stos
mov
in
leave
in
jle
loop
popa
addr16
lea
inc
mov
cs
lock
pop
inc
aad
pop
aas
jmp
in
mov
xchg
and
sub
pop
daa
cltd
adc
sub
fisubl
es
sti
or
pop
inc
add
pop
and
inc
pop
jmp
imul
add
xor
add
ss
aaa
mov
push
xor
jge
jge
pop
add
and
push
mov
mov
pop
filds
dec
aam
pop
pop
jno
ret
sbb
mov
gs
cltd
pop
inc
push
xor
jae
and
fstpt
lods
cmp
push
aaa
push
dec
inc
push
cmp
lock
dec
xchg
divb
sub
cmp
notl
aaa
pop
fwait
cmc
cld
std
and
iret
mov
jl
jno
mov
dec
out
je
inc
xor
or
push
lcall
test
sti
movsl
mov
add
xor
or
fsubr
insb
dec
cmp
xorb
jl
push
lahf
pusha
fcomp
out
xlat
imul
icebp
adc
scas
pusha
pop
lods
push
dec
call
ret
popa
leave
decl
popa
xor
cs
dec
outsl
or
adc
inc
popa
xchg
popa
mov
js
sbb
mov
out
stc
cmpsl
pushf
mov
aad
in
aaa
add
cmp
fs
pop
pop
mov
in
jl
push
xor
xchg
mov
and
aam
pop
mov
and
xchg
ret
out
push
xor
fsubrs
jge
adc
jne
push
outsl
ret
mov
repnz
mov
xor
mov
push
xchg
mov
fdivs
and
ds
jg
sub
inc
addr16
cltd
cmc
adcl
adc
and
jg
loop
enter
roll
inc
push
inc
jne
into
stos
xor
xor
aaa
inc
adc
and
lcall
cmp
and
leave
sbb
sub
adc
aas
prefetch
or
sub
popf
lds
mov
mov
aaa
jmp
fildll
lock
fcomi
push
int
fldt
mov
push
dec
stc
pop
pop
mov
mov
add
xchg
adc
push
xchg
jmp
das
or
cltd
push
or
clc
shll
enter
mov
shll
loope
iret
ret
mov
fsubs
mov
push
stos
add
sbb
addr16
aas
and
push
sub
imul
add
or
bound
in
mov
mov
les
mov
pop
mov
mov
out
int
or
cmp
stc
ret
popa
lret
dec
frstor
ss
inc
lcall
cmp
add
push
mov
sti
pop
outsb
icebp
or
cmpsl
jg
or
push
jmp
jne,pn
cmp
push
xor
stc
cltd
inc
xchg
mov
aam
lock
sbb
xchg
hlt
xchg
push
data16
testl
xchg
movsb
jg
pop
jmp
jge
lods
or
leave
sub
sbbl
jae
jmp
sub
or
enter
mov
inc
je
int3
testl
cltd
dec
fdivl
fsubs
filds
repz
pop
clc
mov
mov
sub
lods
pop
xlat
pop
jbe
adc
sub
push
pop
sbb
and
clc
addl
adc
dec
mov
and
push
add
mov
add
cltd
into
sbb
hlt
cld
stc
gs
std
push
push
shrb
inc
mov
in
andl
mov
sbb
cltd
xorl
inc
adc
nop
jae
dec
or
mov
inc
cmpl
dec
push
pop
fdivrs
adc
xor
out
push
insl
sub
dec
rolb
inc
sti
loope
push
cmc
add
inc
pop
pop
mov
cmpsb
in
shll
aad
pop
jg
xor
dec
insl
call
sbb
mov
cmp
inc
dec
incl
dec
jle
rorb
mov
pushf
lock
sbb
jne
add
mov
daa
inc
adc
aad
pop
outsl
lock
sbb
ljmp
mov
cmp
insb
dec
jns
adc
mov
lret
push
cmpsl
bnd
insb
movzbl
xchg
adc
test
dec
or
pop
lods
add
lock
jmp
xor
pusha
cltd
imul
and
ljmp
outsl
addr16
sbb
jbe
cli
jnp
imul
jb
xlat
daa
sbb
and
sub
add
dec
sub
adc
pop
fnstcw
or
mov
push
sub
mov
or
push
xor
aas
push
lds
push
fstpl
push
leave
lcall
jo
ss
and
xchg
adc
ds
jns
pop
jmp
jl
sbbb
dec
popa
fwait
add
in
xor
mov
lods
xchg
adc
hlt
pushf
push
push
mov
rolb
mov
in
xor
mov
mov
in
add
mov
jp
dec
mov
push
or
aad
adc
into
sbb
mov
xchg
rcrb
int
push
push
dec
mov
cmp
insb
cltd
imul
cmp
jne
out
or
push
sbb
sub
andb
loopne
in
pop
sarb
lcall
push
pop
pop
lds
dec
lock
mov
loope
add
push
in
arpl
adc
scas
push
xchg
jno
cmp
jmp
add
lods
lea
fwait
jae
cmp
add
cmp
daa
cwtl
push
in
popa
pop
push
sbb
les
sbb
jbe
fstl
jg
or
je
sub
xor
inc
mov
or
jno
push
xchg
iret
xchg
inc
add
mov
mov
pop
mov
sub
mov
dec
inc
sbb
jp
mov
add
cmp
lea
mov
lret
mov
sub
gs
mov
and
jo
xorl
cmpb
inc
pop
push
sub
jmp
fistpll
and
dec
mov
mov
xor
ret
push
aas
push
and
out
fsubrl
pop
pop
les
ja
add
popa
mov
pop
sbb
mov
pop
cmc
movsl
jecxz
iret
adcl
rol
stc
and
into
loop
mov
cld
push
repz
mov
cmp
sbb
movsl
sbb
mov
jl
xchg
scas
aaa
cmc
push
mov
stos
test
jb
adc
outsb
mov
jae
aam
mov
ljmp
mov
cmp
xor
test
xchg
inc
push
sbb
insb
cmp
and
or
or
mov
jbe
iret
fidivrl
cmp
mov
xchg
sti
out
lahf
xor
dec
cltd
out
test
pop
mov
ret
iret
and
insb
stos
inc
mov
or
cs
mov
jno
push
pop
inc
sub
mov
mov
popa
adc
andb
mov
inc
ds
rclb
ds
pop
decl
cmp
pop
repnz
orb
xor
jl
mov
leave
inc
sub
sub
call
inc
andb
popa
jmp
mov
mov
arpl
repz
clc
mov
addr16
inc
jne
jecxz
pop
jmp
mov
ret
sub
es
pushl
xchg
push
fildl
adc
fimuls
sbb
mov
mov
sub
mov
subb
repz
and
mov
sbb
add
pop
xchg
mov
sahf
push
ljmp
xlat
mov
ret
mov
data16
out
shlb
xchg
dec
mov
mov
jmp
jbe
add
adc
xchg
aad
mov
mov
ja
mov
test
sub
ret
cmp
or
xchg
dec
addr16
pusha
call
in
fldcw
stos
std
adc
lds
mov
sbb
sub
fwait
lret
popf
mov
mov
in
jbe
sub
repz
inc
addr16
add
mov
mov
push
andb
fsubs
cmp
dec
repnz
enter
imul
cmp
aas
in
ja
or
aam
lret
aas
dec
push
sub
push
std
ds
test
popf
int
cli
les
push
mov
xor
dec
popf
sbb
push
dec
xlat
test
rol
lahf
jno
dec
bound
cwtl
pusha
nop
mov
xchg
xchg
repz
loope
xchg
xor
test
cli
add
insb
test
add
pushf
inc
subl
lods
push
or
pop
sbb
adc
pop
cmp
add
enter
mov
jae
sbb
mov
push
push
inc
pop
mov
push
xorb
call
decb
xchg
leave
cli
cmpb
jmp
cld
adc
cmpsl
setle
aam
out
lods
dec
fcmovu
sbb
adc
mov
cmp
pop
sub
sbb
popf
adc
cmp
repnz
push
cmpsb
test
shr
sbb
mov
dec
jp
punpcklwd
repz
addr16
inc
pop
cld
fmul
push
clc
aam
std
mov
movsl
or
xchg
push
test
and
sub
xor
xchg
hlt
daa
jo
mov
ja
stc
xor
jg
jp
into
push
rorl
call
push
ljmp
mov
lcall
sub
inc
mov
jecxz
inc
sbb
sub
enter
push
scas
cmp
or
cld
faddl
cmc
and
xor
lret
cli
adc
imul
cmp
outsb
jecxz
mov
xorl
sub
int3
lods
mov
xchg
addr16
ret
adc
ja
add
xchg
insl
je
pop
xor
stos
mov
out
adc
cmp
adc
jb
aas
ljmp
mov
pop
pop
sbb
sub
fidivrs
insb
pop
pushf
jmp
sub
push
adc
push
loopne
ss
or
stc
sbb
ret
hlt
in
orl
xchg
in
mov
int3
out
cmpsl
push
push
test
or
and
pop
or
arpl
xor
inc
mov
pop
outsb
mov
leave
pop
pop
or
test
mov
and
dec
mov
shl
inc
sub
xchg
imul
add
fcoms
shl
push
sub
pop
pusha
xor
sbb
iret
pusha
push
lahf
pushf
pop
aaa
xchg
lret
into
cmp
or
jb
out
dec
movsb
es
xor
gs
jge
andl
mov
xor
mov
xchg
jae
or
insb
mov
shlb
jg
add
or
xchg
iret
out
lods
cmc
ss
pop
sub
cs
cwtl
in
jbe
popa
mov
mov
stc
and
jl
dec
into
sub
lar
xor
sub
cltd
xor
mov
aas
and
popf
and
xor
mov
sbb
adc
fcmovbe
jge
int3
mov
cld
xchg
pop
call
daa
add
inc
std
sti
cmpsb
in
add
out
push
int
in
xchg
imul
sub
outsl
jbe,pt
aas
call
mov
shll
imul
mov
or
imul
inc
inc
push
stos
sub
test
xor
repnz
mov
sub
cmp
sub
into
mov
lret
notl
jae
xor
jecxz
mov
lods
mov
jecxz
clc
dec
pushf
pop
push
in
mov
outsb
rorl
xor
mov
pop
fcoms
dec
sbb
sbb
add
cwtl
push
cmp
pop
ljmp
fisttpl
xor
icebp
jl
push
xor
dec
adc
jbe
pop
jmp
fs
lds
inc
dec
jno
test
inc
mov
pop
into
xor
sub
mov
shrb
mov
cmpsl
push
lock
sub
push
jp
pop
les
or
jmp
xor
mov
inc
ljmp
ret
addb
mov
jns
cmpl
int
sub
nop
and
mov
je
sbb
mov
rorl
repz
push
push
mov
add
ljmp
mov
mov
mov
outsb
mov
sbb
push
mov
push
repnz
das
xchg
lret
dec
outsb
mov
outsb
stos
adcb
or
xchg
jmp
fsubl
mov
cli
mov
mov
js
fidivrl
ss
push
push
xchg
iret
shll
pop
mov
or
jae
sbb
icebp
adc
bound
dec
jb
and
push
outsl
popf
js
mov
ret
pop
xlat
cmp
jecxz
jp
mov
test
jb
jb
push
loop
bnd
push
sub
cmpsl
sub
ljmp
xor
sub
loopne
daa
leave
jmp
jae
sbb
iret
sbb
mov
faddl
mov
out
xchg
out
sub
outsb
jae
popa
pushf
jmp
jl
mov
xchg
mov
sahf
les
dec
enter
in
sub
xchg
lods
dec
in
dec
mov
mov
jge
push
es
test
pushl
les
xchg
gs
xor
jne
aam
insl
push
sub
mov
int
or
dec
xchg
movl
dec
ss
inc
sbb
inc
xor
dec
xchg
jg
fistps
sub
stc
inc
xor
pop
mov
std
popa
fstpl
xchg
mov
pop
fcompp
roll
xchg
ret
call
mov
or
mov
daa
and
xchg
mov
shll
push
scas
mov
rcll
mov
mov
call
or
test
xor
sub
add
testl
inc
repnz
mov
ja
pop
test
pop
jbe
jge
lock
mov
sbb
cmpsb
or
mov
mov
orb
cltd
test
ja
push
sub
xchg
iret
imul
mov
mov
pushf
cmpb
call
or
push
mov
xor
popa
mov
sahf
mov
lods
xlat
mov
fidivl
inc
jnp
std
mov
sbb
ds
dec
inc
pop
imul
and
mov
ja
cmp
jle
push
outsb
cs
sbb
or
adc
xlat
push
repnz
pushl
add
mov
adc
jge
xor
arpl
cmc
ss
sbb
in
jns
push
loope
sub
jnp
add
out
mov
dec
shr
les
ja
pusha
xchg
add
adc
inc
in
pop
hlt
aaa
xchg
hlt
or
mov
mov
jg
lods
adc
mov
repnz
sbb
xor
cmpsl
pop
mov
and
rcl
dec
test
cmc
ljmp
scas
mov
scas
pop
cmp
mov
dec
movsb
sbb
sub
mov
imul
dec
push
dec
and
repz
sbbb
add
stos
pop
push
shlb
sbb
mov
sub
xchg
loope
int
dec
mov
imul
out
mov
xchg
je
pop
stc
fmull
int
lods
pop
repnz
or
in
loopne
ljmp
fnsave
movsb
ja
ljmpw
push
pop
push
dec
or
in
mov
stos
and
xor
loopne
jne
cmp
divl
mov
pushf
aam
and
jb
test
lret
mov
cmp
fs
add
loop
hlt
xor
mov
mov
bound
xor
jne
push
mov
enter
xchg
hlt
pusha
test
icebp
or
xor
test
push
loope
mov
jge
jge
lcall
into
and
mov
leave
dec
xchg
mov
fsubs
repnz
cmp
and
popf
jne
sub
cmpl
fwait
or
cld
pushf
stos
stc
loope
jmp
test
fimuls
orb
je
add
sbb
add
sbb
jg
sub
jmp
sub
push
dec
jmp
fiadds
out
jne
ja
pusha
jl
pop
cmp
cld
orb
add
sub
inc
jnp
mov
push
mov
jmp
jge
clc
mov
je
push
and
sbb
adc
and
js
dec
pop
xchg
out
jae
inc
jp
cmpsl
je
dec
cwtl
jb
jmp
pop
ret
sub
movsb
jle
jle
pop
testl
adc
and
shr
data16
xchg
mov
das
repz
shlb
push
push
out
inc
sbb
sub
inc
cs
movsl
jmp
es
lea
and
add
repz
sbb
inc
sysret
mov
arpl
inc
pop
xchg
xor
in
xorl
je
dec
sbb
aam
sti
rorl
mov
dec
adc
out
movsb
jbe
push
outsl
stos
or
push
adc
sub
push
jb
fbstp
mov
cmp
fisubs
call
mull
repnz
cmp
shr
push
mov
dec
pop
jl
fcmovne
in
cmc
and
clc
je
adc
or
cwtl
jne
mov
or
add
cmc
or
lret
cmp
xchg
and
sub
mov
adc
sbb
adc
inc
add
shll
cwtl
int
fstps
lods
or
inc
xor
mov
outsb
imul
dec
sub
lods
jp
mov
pop
enter
leave
or
adc
inc
xchg
pop
add
sub
insb
xchg
call
test
iret
aam
jb
adc
rorl
lret
repnz
xchg
and
imul
or
jns
movsb
mov
sbb
incb
sbb
imul
lea
and
imull
cmp
sub
mov
mov
sti
jnp
adc
add
lcall
pop
sbb
cs
stc
popa
sub
popa
int
xor
cmc
js
shll
mov
mov
mov
je
insl
jbe
jp
lret
imul
fildll
sub
dec
inc
mov
adc
xor
movsl
test
push
mov
aam
dec
neg
xor
adcb
and
repz
jecxz
dec
jg
leave
push
xchg
mov
mov
into
lds
les
push
xchg
mov
ret
pop
sub
pop
jp
and
inc
pop
push
mov
mov
push
dec
fcmovu
or
iret
imull
push
imul
dec
adc
sarl
test
xchg
in
or
inc
jb
test
mov
push
and
es
ss
xchg
xlat
lea
cmc
cmc
out
mov
daa
ret
lahf
xor
jl
cmp
mov
push
dec
push
push
mov
mov
inc
xor
xchg
call
sbb
adc
ljmp
cltd
imul
sbb
test
jg
jecxz
es
pop
loopne
test
push
xchg
xor
aas
scas
and
mov
cltd
mov
cwtl
fdivl
pop
lea
pushf
outsl
mov
add
mov
push
stos
test
inc
and
push
adc
icebp
push
mov
sbb
lds
pop
add
sbb
cmp
hlt
aaa
push
and
out
fdivrl
ds
adc
dec
dec
movsl
mov
loop
sub
stos
shlb
cmc
test
inc
or
dec
fsub
mov
mov
test
inc
ja
push
mov
xchg
pop
mov
xchg
scas
sub
sub
faddl
movsb
lret
inc
hlt
rorb
mov
cwtl
cmp
sbb
pop
cmpsl
inc
pop
and
cmpsl
adc
push
fimull
xlat
aad
pop
mov
mov
cld
xor
ljmp
cmp
xchg
or
lcall
popf
rcll
push
jecxz
aad
pop
mov
add
sub
mov
ljmp
jecxz
fbstp
pop
cwtl
andl
mov
xchg
jo
popa
les
jo
out
je
dec
xchg
sub
push
popa
aad
dec
inc
cmpb
ja
adc
dec
roll
sahf
sub
cmp
sub
add
jp
jge
jmp
in
xchg
adc
sub
jbe
iret
sbb
inc
fwait
jno
push
cmpl
add
mov
cmp
or
add
sub
dec
jmp
cld
fwait
roll
cmp
cmp
push
out
jns
sbb
cmp
jbe
mov
cmp
call
xchg
popa
icebp
mov
fadds
and
addr16
push
inc
ret
sbb
js
add
sti
inc
or
stos
jge
xor
in
sbb
push
das
jmp
mov
test
sti
hlt
insl
adc
jp
sti
out
adcb
popa
ret
add
ret
pop
in
rorb
test
xchg
pop
xor
sbb
scas
or
sbb
push
cmp
pop
or
jmp
test
jne
in
lahf
imul
xor
cmp
out
daa
mul
inc
out
call
test
jb
loopne
rol
sbb
pushf
mov
out
test
mov
jmp
cmp
insl
pusha
dec
repz
das
mov
outsl
fadds
push
jge
xor
out
xor
pop
push
cmp
mov
mov
jmp
lds
mov
les
lods
lret
je
in
mov
lahf
inc
push
jmp
xchg
clc
mov
mov
jae
dec
mov
or
pop
push
dec
inc
add
out
rcrb
scas
sbb
into
mov
test
mov
movsb
lock
mov
dec
sub
adc
ret
mov
adcb
filds
ss
sub
cmp
inc
mov
dec
sbb
push
mov
xlat
inc
cmp
mov
es
pop
jge
and
bnd
sti
fs
pop
sub
add
adc
jne
mov
out
lret
xchg
scas
sub
xchg
adc
jmp
jle
out
clc
or
fsubl
inc
aad
data16
sub
pop
lret
xorb
inc
pop
daa
ss
in
into
cli
setp
cmp
addr16
dec
inc
cld
jmp
and
jmp
mov
or
and
sbb
cmpb
inc
mov
mov
and
mov
cmp
xchg
sarb
andb
ret
ja
and
push
clc
insb
loop
push
mov
inc
popa
iret
sarb
jno
jno
fisttpll
sbb
sbb
js
xor
or
cmp
test
mov
lods
jmp
scas
int
out
inc
outsl
jge
jge
dec
jmp
aad
push
aas
lods
cli
add
stc
fidivrl
in
jbe
cmpsl
out
mov
push
or
xlat
and
dec
out
and
xchg
mov
lret
pop
add
push
jmp
arpl
es
or
dec
jne
mov
das
or
into
cmp
sbb
xor
adc
xchg
and
fsqrt
jbe
mov
sub
les
cltd
jg
mov
inc
ja
cli
xor
adc
jg
xor
mov
cmc
ja
fsubr
aas
or
fstp
add
popa
enter
xorl
lret
lret
imul
enter
test
mov
inc
stc
stos
in
mov
or
dec
aad
pushf
stos
lods
stos
push
jae
xlat
repnz
push
sbb
ret
mov
dec
pop
mov
jno
pop
jno
jnp
imul
insb
cmp
std
mov
dec
mov
mov
fwait
cltd
inc
mov
scas
clc
and
add
call
and
clc
std
cmp
pop
mov
ljmp
push
cmpsl
into
inc
inc
popw
jecxz
sbb
orb
jmp
fsubp
xor
enter
adc
push
or
data16
and
idivl
or
dec
inc
cmp
inc
sahf
pop
int3
dec
lock
cli
push
xor
test
ja
xorl
sub
into
fiaddl
mov
ljmp
addr16
cmp
imul
dec
pop
call
mov
sub
stos
push
xor
pushf
xchg
adc
adc
xor
call
lock
repnz
fs
nop
adc
jp
test
cmp
pop
in
insl
pop
push
inc
cmc
stc
xor
xchg
push
jbe
sub
add
addr16
in
aam
cwtl
mov
in
cs
and
add
mov
fidivs
mov
in
adc
mov
dec
movsb
loope
adc
xchg
pop
lahf
mov
arpl
pushf
aam
xchg
push
fs
leave
fdivrs
cmp
pop
pop
xor
cmp
dec
mov
ja
mov
mov
sti
pop
mov
les
popf
aas
or
xchg
cmp
test
add
mov
int3
jbe
outsb
fistl
sbb
loopne
nop
shr
add
xor
scas
pop
xchg
jmp
jb
dec
pop
gs
orb
pop
icebp
and
pop
xchg
mov
jo
mov
jo
and
mov
jecxz
loope
mov
fisttpll
sub
iret
fisttpll
into
scas
sbb
and
cmp
xor
mov
mov
lret
out
les
bnd
xlat
mov
stos
out
mov
sub
sbb
stc
xor
test
dec
dec
es
out
dec
pop
arpl
arpl
sbb
jns
out
fsubr
add
ret
cmpsl
inc
xchg
aaa
xor
mov
inc
cmp
in
test
adc
pusha
jmp
push
and
or
and
jg
and
xchg
test
popf
adc
lret
inc
js
xor
addb
fiadds
mov
sbb
mov
xchg
roll
ljmp
and
call
xor
test
push
mov
sbb
add
stc
loop
test
adc
fcomps
sub
fwait
shll
mov
into
mov
cld
int3
and
inc
aaa
cmp
and
sub
shll
mov
or
in
dec
fstpl
out
stos
sub
ret
cs
inc
out
inc
inc
movl
imul
cwtl
ret
mov
jl,pn
cmpl
popf
fwait
cmp
minps
cmpl
jae
movsb
sbb
aas
dec
push
xor
xchg
jle
xlat
xchg
test
and
jg
xor
sarl
sbb
or
jbe
rcll
lds
pop
cld
mov
outsb
daa
aaa
insb
repz
fsts
loope
dec
pop
jo
mov
mov
inc
mov
cmpsb
jmp
lds
mov
int3
jp
scas
mov
pop
xor
lods
daa
mov
pop
push
out
sbb
jmp
sbb
aad
pop
sbb
sub
mov
loopne
scas
and
clc
ljmp
mov
inc
mov
sbb
mov
in
adcl
stc
and
inc
xor
pop
call
jb
jnp
jl
adcl
jae
scas
mov
push
lret
push
fucomip
in
or
sbb
xchg
xchg
lcall
pushf
inc
push
xchg
hlt
dec
pushf
flds
xchg
inc
inc
add
jge
insl
and
mov
cmp
iret
fwait
xchg
adc
mov
or
push
inc
sbb
ss
cmp
push
fadds
jo
mov
push
pop
mov
test
add
inc
push
enter
dec
andb
pop
rolb
sub
sbb
popf
das
mov
inc
push
xchg
or
push
xchg
sbb
ljmp
lret
jl
add
iret
xor
and
mov
adc
dec
jecxz
iret
inc
cmp
rcll
je
lock
lea
mov
xor
pop
push
push
pop
pushw
ror
mov
negb
cli
test
imulb
inc
into
add
add
sarb
xchg
pop
call
jle
mov
lock
lret
cld
mov
xor
adc
mov
inc
fs
xor
ret
rolb
rcrb
xchg
clc
fucomip
mull
adc
mov
push
or
pop
mov
sub
cmc
shlb
adc
mov
jbe
sti
mov
fdiv
in
xor
nop
ds
repz
movsl
cmp
jmp
xchg
insl
cwtl
jbe
loope
dec
sbb
cmpsb
mov
jo
pop
dec
cmpsl
mov
jnp
outsb
mov
push
push
sbb
test
cmp
ret
addr16
push
rolb
arpl
push
sub
imul
sub
repnz
call
ja
xchg
aam
jae
mov
cmp
mov
jmp
call
mov
mov
scas
push
cli
loop
fisubrl
inc
aas
jle
jb
jae
push
dec
ret
xchg
leave
xchg
xchg
arpl
jb
xchg
divl
sti
push
iret
jmp
outsl
test
lret
ds
loope
aaa
xorb
xor
pop
jb
add
ret
outsb
ja
lret
insb
fwait
setp
stos
pop
sarb
roll
pop
push
mov
es
add
lea
xor
dec
add
adc
lods
dec
lret
int
push
jmp
pop
dec
stos
sub
mov
sub
int
insb
and
mov
dec
cwtl
cmp
divl
enter
lret
mov
mov
in
push
dec
jb
pop
cmp
dec
xlat
cmc
sbb
mov
scas
jecxz
mov
movsl
out
mov
sbbl
add
fisubl
in
out
or
iret
pop
push
rclb
arpl
rorb
es
xchg
pop
dec
aas
ret
sahf
sbb
xchg
sbb
jg
push
mov
inc
test
ficoms
orl
icebp
fwait
shrl
sub
inc
inc
movsl
mov
imulb
insb
loope
add
push
xor
cmp
repnz
and
gs
mov
es
scas
push
addl
fcoml
push
lret
stos
and
gs
aas
data16
lcall
jl
ret
jp
add
call
and
mov
daa
add
mov
insb
shlb
in
lods
rcrl
cmpsb
je
mov
jg
das
and
les
out
and
xchg
push
sbb
cwtl
sub
inc
ds
dec
cli
mov
sbb
enter
cmp
fsub
jge
lea
std
leave
jnp
aad
mov
subl
adc
sub
xchg
or
push
iret
inc
outsb
xor
lret
ss
pop
pop
cmp
arpl
push
push
mull
sub
push
mov
add
in
jmp
jp
js
push
nop
mov
cld
pop
cwtl
pop
sbb
test
mov
xor
je
mov
shlb
test
mov
push
cmp
das
mov
jmp
icebp
jnp
inc
mov
adc
push
xchg
pushf
and
sahf
push
jae
repnz
add
xor
add
jbe
inc
loope
push
std
jmp
scas
pop
xchg
loope
jbe
cmpsb
jo
aam
fisubrs
and
add
repnz
adc
roll
bound
test
pop
dec
xor
hlt
cmp
test
aam
ljmp
pop
repz
rorb
test
int
jge
push
cld
popf
lcall
mov
daa
mov
mov
jle
inc
shr
popa
add
pop
stos
scas
xor
or
icebp
push
mov
xlat
pop
cmpsl
sub
inc
push
mov
cltd
ss
addb
sub
pop
lcall
imul
pop
je
inc
dec
or
push
dec
inc
in
ret
jge
lods
adc
flds
lahf
push
ret
js
outsb
test
cld
dec
push
pop
xchg
movsl
push
out
pop
jp
mov
jnp
pushf
adc
mov
adcl
sarb
xlat
jp
fisubl
ret
cmp
add
pop
and
xchg
cmpsl
xchg
aam
adc
pop
inc
pop
and
sbb
mov
push
inc
outsb
add
dec
push
cwtl
test
xchg
sub
sbb
sbb
cmp
push
and
mov
rolb
mov
hlt
mov
or
inc
push
fwait
jo
jp
and
jp
pop
add
mov
add
dec
lcall
lea
xor
je
inc
sar
outsl
jbe
shlb
or
in
shr
and
add
mov
mov
inc
aaa
adcl
clc
add
jge
aaa
sub
mov
lea
lea
inc
stos
mov
dec
mov
push
imul
lret
adc
aas
popl
sarb
int
pop
test
and
mov
lea
iret
cmp
dec
not
dec
mov
push
iret
jg
push
popa
pop
dec
aaa
loope
mov
jl
pop
sti
adc
sbb
cmp
repz
jmp
xchg
jg
nop
xchg
push
mov
inc
jl
loope
push
sti
aas
das
stos
mov
test
cs
dec
or
cmp
testl
std
or
lock
jecxz
icebp
and
addl
add
js
jg
cmpsb
mov
jmp
add
out
movsb
push
push
mov
cmp
adc
fsubrs
imul
jae
stos
fimuls
in
pop
popf
mov
push
test
mov
fwait
ja
inc
jne
push
cmpsl
fadds
adc
jnp
out
sahf
test
mov
xchg
aaa
lods
insb
rcr
jno
mov
dec
mov
adc
imul
jbe
adc
xchg
lock
loope
scas
shrb
add
adc
andb
jge
xchg
decb
cmp
mov
outsb
xchg
test
repz
mov
push
cmpsb
loop
cmp
mov
pop
jecxz
fcoml
push
or
xchg
sub
dec
mov
lea
push
pop
sahf
pusha
cs
xor
or
jecxz
in
add
and
xchg
fsubrl
jle
sbb
push
mov
lods
push
movsl
in
ror
daa
jo
cld
and
stc
push
jle
hlt
push
pop
xor
insl
cmp
ret
pop
cmp
bound
jae
dec
sbb
and
dec
das
loope
push
imul
outsl
xlat
push
jbe
jno
outsl
movsl
pop
ljmp
dec
push
bound
inc
sti
mov
jae
sub
adc
jnp
or
xchg
push
stos
outsl
incb
adc
sti
sbb
push
mov
nop
dec
dec
push
mov
addr16
mov
ljmp
mov
pop
cmc
loopne
or
jnp
or
pop
jl
mov
jb
scas
jnp
xor
inc
dec
dec
push
or
filds
jle
out
inc
jle
cmpsl
mov
jae
cwtl
inc
cltd
jg
sub
pop
sub
mov
xor
into
xor
int3
std
or
dec
jne
jnp
mov
adcb
mov
xor
jne
test
test
push
jecxz
cwtl
inc
aam
fstps
mov
jl
cli
mov
adc
cmc
inc
cltd
mov
inc
and
or
ret
inc
push
inc
xor
push
adc
xchg
mov
in
dec
lret
push
xchg
les
pushf
push
inc
mov
repnz
push
shlb
adc
xchg
stos
sarb
ljmp
gs
fiadds
in
or
sbb
sbb
ror
adc
lahf
and
add
mov
mov
adc
jg
shrl
cmp
fiadds
sub
mov
out
fnsave
mov
lahf
mov
shr
xchg
in
mov
data16
mov
inc
dec
add
jae
out
cmp
aam
add
jmp
lods
xor
lock
incl
inc
decb
xor
dec
lahf
insl
cmpb
mov
lret
movsb
jmp
pop
inc
movsl
jmp
test
sbb
ret
xor
mulb
push
mov
ja
dec
test
jle
inc
mov
cmpsl
js
js
inc
lods
or
imul
xor
out
push
mov
mov
xor
loope
push
lahf
mov
imul
cmp
cwtl
repnz
adcb
mov
rorb
inc
movsb
test
popa
cmp
pop
sub
test
cmp
push
fmull
sarb
aam
fsubl
out
xchg
cmp
push
push
bound
jb
xchg
sbb
jae
mov
aam
dec
int
mov
dec
clc
jo
test
mov
pop
stc
mov
xchg
leave
in
push
push
mov
sbb
mov
daa
push
sub
ss
es
loop
test
xor
dec
sahf
pop
cmp
xchg
jae
pop
or
mov
cmp
adc
pop
inc
push
and
js
xlat
imul
push
jae
sbb
nop
aad
xchg
xor
xchg
sti
test
xor
mov
fidivs
jno
or
cmp
fnstsw
std
pop
ja
mov
scas
pushf
dec
mov
sbb
out
mov
div
rsm
fstpt
mov
xchg
icebp
mov
loopne
sub
ret
insl
xlat
or
jae
adc
gs
aas
jo
stos
mov
subb
aad
sbb
and
pushf
rcll
addb
mov
inc
cmp
pop
inc
mov
sub
ja
mov
mov
lcall
xchg
lea
jmp
stos
jmp
pop
pop
filds
nop
pushf
mov
sub
leave
outsb
fldl2e
cmp
loop
aas
sarl
mov
jge
dec
mov
fwait
lret
push
mov
pop
fwait
add
pop
adc
lret
mov
dec
inc
mov
mov
loop
sub
cmp
or
cld
gs
jns
push
dec
popf
push
jno
outsl
incl
test
mov
sub
icebp
ljmp
pop
push
in
dec
push
aad
mov
rclb
jno
cmp
push
mov
pop
imul
iret
xor
cmp
fisubs
mov
ficoms
xchg
es
inc
push
or
or
mov
cmpsb
mov
push
mull
lock
and
lds
jecxz
xor
xchg
data16
push
sbb
push
push
inc
mov
ret
sti
inc
add
mov
mov
xchg
loop
pop
pop
jmp
dec
jg
lret
test
in
jp
sbb
scas
addr16
es
fnstcw
sahf
xchg
idivb
mov
mov
inc
pop
es
xor
in
ss
cs
cltd
js
mov
mov
int
cmp
cmp
sub
aaa
int
push
test
add
sbb
sti
fcompl
xchg
lret
jae
inc
outsl
clc
mov
aam
and
adc
mull
jne
pushf
out
das
or
jo
or
outsb
arpl
xchg
mov
stos
sub
hlt
add
out
andl
push
test
adc
call
shlb
and
mov
ljmp
pop
adc
cs
lds
add
mov
int
int
lea
jnp
xchg
sbb
movsl
or
sbb
movsl
ss
pushf
popa
or
std
jg
mov
out
dec
ds
aaa
dec
lds
xchg
sbb
cltd
dec
push
sbb
test
mov
in
fs
inc
lods
push
out
insb
push
test
es
pop
cmp
jmp
fwait
xor
mov
mov
lahf
adc
mov
adc
pusha
out
enter
lret
xlat
shlb
data16
dec
insl
dec
lock
sbb
jne
pop
adc
lds
jne
add
pop
int
xchg
pop
jl
mov
sti
or
mov
pop
xor
je
lret
into
push
repnz
ja
aad
mov
push
pop
add
inc
dec
adc
cmp
ja
inc
out
mov
jns
push
xor
fiadds
vxorps
push
xor
popf
push
iret
mov
cmp
mov
rol
mov
jg
out
xchg
cmp
or
push
xor
rol
pop
jle
cltd
jl
repnz
sub
mov
xchg
mov
lcall
mov
cltd
xchg
sub
sbb
or
jg
mov
xchg
in
adc
fsts
inc
outsb
pop
rcll
daa
push
and
mov
mov
and
dec
ret
in
xor
mov
test
dec
xchg
mov
pop
pop
faddl
lcall
add
stos
mov
pushf
int
cli
xchg
cmc
cmp
dec
sbb
inc
lock
pop
fiaddl
ds
in
mov
faddp
mov
frstor
mov
xorl
jae
cld
repz
decb
jle
scas
shl
or
fcompl
insl
ret
push
test
add
jno
rcrb
sbb
push
or
xchg
push
mov
cmp
jae
ja
mov
inc
clc
cmpw
push
mov
shll
xor
xchg
scas
mov
call
lret
dec
into
shlb
mov
jo
ljmp
loope
add
js
sub
and
or
shrb
mov
inc
pop
jne
adc
sub
mov
xchg
or
in
inc
pop
mov
xchg
inc
push
xchg
xor
dec
aaa
test
sub
and
repz
mov
push
cli
lods
arpl
cmpsb
cmpsb
pop
mov
ret
arpl
jg
mov
jbe
xchg
std
leave
mov
fisubrs
mov
loop
cmc
sbb
adc
xlat
sbb
popa
mull
test
jo
arpl
ss
mov
daa
jge
sti
fst
jg
push
inc
xchg
xorl
fildl
lds
rolb
outsl
inc
ljmp
fsubr
xor
sbb
and
movsb
jno
dec
add
sahf
enter
xchg
shll
out
inc
adc
in
jne
ss
mov
or
pop
or
andl
rclb
pop
or
fbld
mov
jo
pop
jle
mov
or
ja
mov
jp
cs
cmp
fprem1
push
inc
and
ds
mov
js
xchg
pop
jg
push
outsl
mov
test
jl
js
div
aaa
jbe
add
or
addr16
fdivp
cltd
int
cmp
dec
scas
dec
or
dec
inc
movsl
hlt
fildll
test
push
sti
xor
mov
out
jno
leave
mov
aas
jmp
aam
out
jmp
sub
sbb
push
add
ret
jbe
in
pop
pop
hlt
push
jb
inc
or
icebp
or
stos
and
inc
repz
jb
fsubrs
imul
xor
adc
jb
mov
jbe
imul
out
inc
dec
mov
and
in
xlat
fildll
std
test
xor
mov
jne
pusha
jae
jnp
push
rorb
movsl
add
cld
sbb
cmc
push
mov
xor
sbb
xor
loopne
popf
and
and
lock
cmpsb
adc
push
aam
jecxz
aad
add
arpl
mov
mov
jnp
dec
imul
add
mov
scas
mov
pop
call
jo
jo
ds
add
mov
mov
mov
cmp
dec
insl
das
pushf
mov
stos
mov
cmc
fneni(8087
bound
aam
adc
sbbb
out
jns
inc
cld
insb
jo
push
jno
popa
cmp
adcb
pop
xchg
fiaddl
xchg
inc
insb
popf
testl
ffreep
lock
iret
fidivrs
pop
enter
sbb
push
mov
and
or
xchg
jge
push
jnp
sub
in
xchg
ret
xchg
mov
mov
shrl
pop
out
cltd
dec
push
sbb
nop
sbb
jge
aam
adcl
inc
jb
lret
imul
lea
rcl
xor
or
inc
sbbl
cli
pop
out
fidivl
mov
lret
push
xchg
push
dec
mov
daa
icebp
scas
in
cmpsl
inc
jb
stc
pop
das
dec
or
xchg
push
dec
les
roll
sbb
or
sub
insl
cltd
dec
cld
pop
push
mov
jecxz
ja
lock
out
insl
ret
adc
sub
cmp
gs
adc
lret
mov
add
loop
lret
dec
pop
bound
adc
stos
mov
test
std
mov
pop
sti
shlb
and
jnp
cwtl
add
jns
repnz
fcomps
jle
dec
mov
pop
rcll
imul
xor
mov
outsl
repnz
mull
pop
push
mov
sub
jns
out
inc
sbb
insb
add
jl
dec
or
sbb
lret
xchg
inc
dec
add
fmull
lcall
mov
loopne
mov
mov
xchg
iret
mov
inc
sbb
push
aas
iret
pop
pop
jle
roll
or
dec
push
enter
sub
push
mov
pop
pop
pop
push
decb
cmp
push
add
push
in
rcll
js
cmp
pop
jp
pop
sbb
ror
add
scas
lods
sbb
and
mov
outsl
add
je
dec
sub
loope
shl
and
rorb
push
fstl
rcl
add
in
clc
add
test
out
push
loopne
mov
inc
and
out
xor
sahf
aad
mov
adc
cmp
lret
in
daa
mov
mov
xor
sbb
movsb
jnp
out
adc
jge
outsb
cmpb
pop
sbb
adc
imul
cmp
pop
ret
test
pop
xchg
xchg
icebp
jmp
pusha
out
es
pop
lahf
jnp,pn
add
ret
call
mov
std
xchg
movsl
mov
outsl
das
rcrb
hlt
add
mov
cmp
xor
sarl
mov
jge
add
rolb
or
ficompl
mov
loope
sub
clc
push
or
icebp
sub
inc
sub
int
insl
dec
nop
push
sbb
mov
sub
dec
pop
aam
scas
mov
sub
inc
cs
cld
andb
mov
jne
add
pop
pop
xor
stos
js
xchg
dec
xchg
movsl
aas
cli
and
xchg
xchg
repz
dec
aaa
pusha
aad
gs
pushf
xor
rolb
movsb
sub
add
std
fnstsw
pop
outsl
gs
rolb
xchg
das
adc
ret
push
pop
les
mov
mov
pop
pop
sbb
push
mov
pop
xchg
pop
out
les
inc
push
bound
mov
mov
adc
add
xor
cltd
leave
neg
xor
addr16
inc
and
mov
jbe
mov
adc
push
out
in
or
pop
adc
jge
lods
xor
mov
pop
popa
xchg
mov
lret
push
jle
xchg
mov
mov
jl
nop
fmull
cmp
sbb
cwtl
sub
nop
adcl
push
push
push
cmp
mov
jns
popa
adc
dec
shrl
loopne
sub
inc
lods
mov
insb
int
imul
clc
loop
pop
daa
out
sahf
jle
fcmovnb
stos
mov
push
pop
orl
xchg
cmp
sarb
pop
mov
xchg
fistps
jo
sub
hlt
push
fisubs
dec
insl
pushf
cmp
push
sbb
mov
js
xor
mov
lds
add
pop
cmp
push
jg
mov
int3
cmp
dec
lret
fucomi
or
pusha
mov
sahf
in
cmp
push
lcall
add
imul
inc
jmp
lods
mov
and
sub
adcl
sti
push
adcl
stos
add
mov
ds
adc
fldenv
fsubrp
adc
cmpsb
sub
jbe
out
add
push
dec
push
push
aaa
pop
dec
push
dec
pop
test
jmp
int
jns
jl,pt
mov
incb
push
dec
mov
icebp
jmp
add
dec
pop
mov
pop
icebp
mov
fwait
les
lods
outsl
insl
pop
int
mov
jecxz
push
xor
lods
push
mov
scas
cmp
add
adc
cltd
cmp
push
subb
pop
mov
mov
mov
and
cmp
adc
fists
and
xor
fmuls
fisubl
pop
cmpsb
or
xchg
shlb
dec
into
fucomip
inc
jae
clc
int
add
fisubs
sbb
enter
xchg
inc
xor
mov
jns
dec
pop
add
cmove
mov
adc
rcrb
jnp
lret
test
sub
and
xchg
push
lods
pop
popa
and
or
mov
out
test
jl
and
shl
xchg
jns
push
test
add
dec
adc
cmp
mov
cld
adc
xchg
pop
mov
out
ret
pop
xlat
loopne
sub
or
lods
jecxz
and
or
out
les
lret
cmp
sub
push
into
das
sti
aam
les
dec
dec
mov
mov
inc
arpl
mov
sub
mov
iret
wbinvd
lret
sbb
iret
fisubrs
sbb
jle
jmp
ljmp
dec
jl
addr16
mov
ret
pop
add
cwtl
xchg
mov
mov
xchg
pop
lods
repnz
push
push
loopne
xlat
setge
sub
adc
xchg
shll
and
jg
or
cs
mov
mov
das
sub
stos
mov
lds
add
mov
or
pop
call
and
dec
mov
outsb
mov
orl
sub
sub
jno
fisttpl
notl
sbb
sahf
js
imul
fmul
fcmovbe
or
shlb
int
lods
pop
dec
notb
call
and
incl
fildl
imul
popa
ret
sahf
push
add
sbb
push
add
xor
jo
lds
mov
add
dec
xchg
shl
ret
mov
dec
repz
shld
cmp
je
lods
inc
popf
and
testl
je
les
test
int3
adc
sub
xchg
mov
dec
sbb
push
rcl
inc
loope
in
sbb
dec
test
mov
repz
shll
movsb
lds
jg
lods
jo
mov
mov
out
pop
ret
push
lret
lcall
inc
ljmp
cwtl
xchg
in
xchg
xor
bound
xlat
adc
jp
inc
inc
cmp
cmp
add
pop
fs
gs
mov
aam
mov
add
lock
xchg
addr16
pushf
test
fwait
jo
mov
fstpt
sbb
sbb
int
dec
aam
shrl
cs
pop
das
int
pop
pop
jmp
test
pop
loope
rclb
push
inc
add
mov
mov
jno
movsb
jnp
pop
in
or
fstps
jae
pop
fidivrl
mov
jmp
sub
out
aam
adc
adc
int
jp
adc
push
pop
pushl
fildll
sub
inc
mov
cmp
dec
add
mov
push
lret
bt
adc
inc
loop
gs
jnp
mov
pop
out
data16
sti
or
mov
les
push
ret
dec
or
mov
jne
call
mov
sub
adc
stos
cmp
mov
bnd
inc
sub
ret
test
mov
push
jmp
into
nop
loop
push
push
xchg
cmpsb
xchg
or
xor
outsl
call
cmp
mov
xor
lods
inc
mov
or
fadds
add
jb
xchg
push
push
jns
lahf
xchg
mov
push
add
sahf
mov
mov
fwait
cltd
push
out
sbb
enter
mov
lcall
mov
ss
push
in
ja
cmp
fsts
mov
sbb
insb
push
shrb
inc
adc
sub
not
add
repnz
push
or
je
xchg
insb
add
add
sbb
mov
dec
repnz
call
cmp
int
mov
loopne
andl
inc
push
lahf
cmp
xor
dec
push
jnp
pusha
fwait
aaa
shll
movsb
push
lods
into
idivb
icebp
daa
inc
mov
xchg
inc
sbb
jae
mov
mov
ret
decb
outsl
mov
inc
push
xchg
dec
jge
or
sbb
pop
mov
jo
push
xchg
out
pushf
cmp
lds
imul
jmp
enter
mov
lods
sarl
inc
retw
push
sub
push
int3
pop
enter
sbb
jg
scas
roll
dec
daa
sarb
test
add
inc
xor
sahf
shrb
push
adc
push
and
dec
call
push
shr
add
mov
or
cmp
mov
jge
adc
outsb
cmp
cmpb
repnz
les
leave
jg
cmp
pusha
cmp
lahf
inc
daa
scas
xchg
icebp
icebp
mov
aam
popa
cmp
fs
xor
repz
xchg
jno
jmp
insl
dec
push
jl
mov
push
pop
pop
fucomip
jg
add
mov
scas
leave
inc
push
int
fdivl
outsl
push
jl
cld
or
test
movsb
sub
push
sti
cmp
xchg
dec
inc
movsl
cmp
sbb
sti
popa
sbb
push
push
cwtl
push
push
je
nop
ljmp
xor
sahf
and
push
loope
insl
pop
gs
rcrb
pop
add
inc
cli
mov
test
push
iret
fmul
xlat
repz
sub
dec
add
dec
cli
push
hlt
les
mov
popf
or
cmp
xor
cmp
sub
cmp
mov
mov
les
stos
fstps
pop
arpl
dec
jecxz
push
add
fs
pop
dec
adc
lret
mov
jnp
insb
scas
popf
sub
adc
fcoms
push
xor
pushf
data16
add
xlat
incb
sbb
or
dec
jecxz
xchg
jo,pt
pop
push
data16
pop
sub
cwtl
push
lret
shll
sbb
cltd
dec
ss
out
pop
inc
in
cmp
shrl
jne
add
lcall
cmp
mov
adcl
mov
push
mov
xchg
lock
inc
pop
dec
jle
push
sbb
out
or
in
cld
dec
data16
je
neg
sub
test
mov
sub
push
daa
jne
mov
fdivl
mov
out
xor
dec
cmpsb
push
cs
push
push
lcall
shr
sub
aas
xor
jnp
cmp
fidivrs
mov
bound
ss
xor
mov
into
add
dec
jo
outsl
adc
lahf
add
push
cs
std
lret
daa
cmp
scas
adc
cmpsb
idivl
scas
bound
adc
fisubs
ljmp
fldl
mov
insb
scas
mov
push
int3
popf
test
sahf
pop
and
and
push
pop
xchg
push
add
cwtl
popf
int3
test
ljmp
iret
push
pop
mov
mov
pop
out
iret
pushf
outsb
mov
and
stos
pop
adc
xchg
push
pop
scas
push
dec
scas
and
sub
popf
insb
pop
ljmp
js
mov
sbb
movsl
push
push
cltd
push
hlt
cli
ljmp
arpl
dec
test
mov
xor
stos
xor
mov
rorl
inc
dec
je
jae
sti
sbb
adc
stc
clc
or
fsubp
jo
jmp
mov
inc
mov
sbb
div
add
pause
mov
sub
and
dec
loope
shlb
jp
shll
fldcw
jne
enter
lds
movsb
jg
lahf
inc
leave
outsl
add
push
into
mov
lds
stos
int
mov
sbb
pop
jle
test
cld
aad
mov
dec
arpl
leave
and
xchg
arpl
mov
mov
and
rol
mov
mov
add
push
add
sbb
inc
cmp
add
add
in
gs
push
mov
add
mov
icebp
jno
xchg
xchg
jns
inc
icebp
out
sub
mov
stc
mov
jl
dec
and
push
cli
sub
in
xor
xor
stos
dec
cmc
dec
and
mov
or
mov
in
popa
add
xor
ss
leave
insb
or
inc
in
movsb
jge
mov
loop
push
push
jne
cmp
mov
rcl
push
cmp
pop
mov
xchg
mov
stc
mov
test
addr16
lock
mov
mov
outsb
or
adc
jb
lahf
push
insb
xchg
push
js
jno
and
iret
inc
cwtl
dec
inc
mov
orl
test
imul
mov
mov
ja
mov
dec
stos
push
insl
aas
sub
push
fdiv
ret
femms
cmp
lds
test
popf
ss
cli
inc
ret
sub
mov
daa
and
push
inc
inc
sbb
cmp
or
cmpsb
test
call
outsb
lcall
cmp
jg
add
add
xor
loopne
out
lods
dec
pushf
imul
jp
imull
nop
es
ret
xchg
movsl
lahf
loope
cmp
hlt
mov
jno
mov
mov
inc
adc
mov
ljmp
dec
xor
add
add
dec
xor
and
xor
inc
xor
ja
push
sub
repz
pushf
icebp
mov
stc
ja
xchg
mov
stc
jno
xchg
repz
xlat
fsubr
test
insb
movsb
rcr
jns
int
push
cmp
sbb
adc
xor
mul
mov
in
mov
dec
push
and
mov
shr
iret
loope
je
mov
mulb
je
faddl
leave
shll
add
mov
dec
shlb
movsl
push
push
test
cmp
cli
or
aas
out
pop
jl
mov
sbb
push
repnz
inc
fdivl
clc
adc
xor
push
adc
sahf
out
inc
xor
jo
fldt
je
incl
mov
jns
adc
loop
add
fidivs
xchg
orl
pop
xchg
jmp
into
push
mov
cmc
aam
and
js
sub
ffree
in
imul
test
int
mov
xchg
push
dec
push
dec
mov
les
dec
add
dec
mov
into
mov
xorb
mov
bound
les
movsb
or
push
jno
rolb
out
std
or
mov
fs
sbb
jle
mov
mov
aad
inc
inc
mov
mov
pop
in
jmp
movsl
push
push
mov
repnz
icebp
adc
lock
fistl
lcall
or
xchg
sbb
scas
lret
ds
mov
movsl
pop
sbb
adc
add
push
int
ds
stos
jb
ja
cmp
dec
sar
and
jae
mov
repnz
insl
jno
xor
mov
dec
xchg
xor
mov
loope
mov
sbb
cli
add
sub
add
jmp
insb
push
into
cli
mov
mov
icebp
imul
imul
mov
jne
and
ret
fs
or
sub
mov
xchg
psubsb
insb
pop
fisttpll
mov
mov
js
fistpll
daa
jge
or
xchg
inc
jl
and
mov
mov
xor
mov
pop
jp
std
mov
xchg
jbe
cmp
dec
lock
out
push
and
lods
xchg
rcrl
lods
pop
in
xchg
jns
push
sbb
movsb
repz
jbe
les
xchg
out
clc
and
imul
js
or
loop
scas
out
popf
mov
insl
fwait
or
sub
imul
jbe
jbe
movups
cmpsb
xchg
and
test
add
inc
imul
xchg
mov
mov
and
leave
arpl
lods
out
adc
mov
repnz
mov
daa
scas
and
dec
addr16
in
ret
cmp
xor
into
sub
stos
mov
arpl
add
dec
and
shl
or
xor
lock
and
sarb
mov
sub
sbbl
es
dec
push
push
mov
daa
ficompl
xor
cmp
and
sub
aas
mov
dec
jae
stc
dec
cmpsl
loop
or
repnz
lods
out
mov
bound
xchg
out
inc
repz
xchg
cs
jp
mov
cs
mov
add
push
ss
mov
cmpsb
jns
clc
mov
out
pop
pop
sbb
jae
test
xchg
daa
enter
mov
or
imul
dec
shll
fcmovnb
adc
and
out
inc
cld
cmpsb
dec
jnp
shl
add
scas
stos
push
adc
jge
pop
push
es
push
push
les
scas
movsb
cltd
aad
sub
aas
ret
or
sbb
out
xchg
fcoms
xchg
mov
jge
fidivrl
ss
cmpl
cmp
mov
add
jne
dec
test
and
cltd
leave
cmp
jno
xor
rcrb
icebp
add
test
in
stos
lds
and
push
add
leave
into
adc
jmp
jle
push
cmp
movsb
andb
das
jnp
adc
fs
mov
adc
sub
mov
out
pop
jno
call
sub
inc
sub
cltd
mov
add
adc
mov
adc
iret
mov
js
or
loopne
jmp
in
xor
and
repnz
sub
fstpl
mov
mov
ss
pop
bound
pop
bound
mov
xchg
push
sbb
fistl
mov
fwait
std
aam
jecxz
rolb
insb
inc
jae
bound
xchg
inc
jae
mov
push
mov
add
pop
js
popa
nop
xor
jo
js
out
or
pop
sbb
cmp
sub
or
cld
sbb
xor
sbb
inc
gs
jp
jns
shrl
xchg
mov
push
jmp
inc
insb
ret
dec
dec
rcrb
mov
inc
imul
nop
xor
fcoms
sbb
in
adc
call
or
pop
test
and
out
mov
inc
jp
enter
sub
or
popf
sub
pop
fwait
in
xor
mov
mov
xchg
or
lahf
xor
pop
inc
lods
jb
push
push
out
adc
dec
push
ss
sti
or
mov
or
ret
mov
iret
int3
int
adc
cmp
cmpsb
lods
push
ja
inc
mov
or
mov
push
popa
xchg
mov
mov
cld
or
inc
jno
repnz
cs
rolb
rclb
cmp
icebp
push
stc
lods
jl
clc
dec
insb
xchg
xchg
add
mov
fbld
loopne
fcmovu
push
jmp
push
dec
adc
jle
rcll
dec
aaa
jecxz
mov
or
pop
xchg
pop
movsl
jg
add
and
sar
adc
orl
aad
mov
fstl
add
xchg
push
adc
sub
or
or
add
xor
mov
add
cmp
fimuls
enter
arpl
pop
push
and
and
jg
pusha
xchg
xor
loop
xchg
xchg
mov
test
fchs
call
add
add
sahf
in
jmp
push
inc
push
adc
xor
dec
mov
xor
cmp
push
test
pop
bound
cmp
mov
push
dec
pushfw
popa
dec
add
leave
xchg
add
rcl
push
outsb
mov
fwait
lds
movsl
xchg
pop
cmp
and
push
fwait
dec
pop
sub
mov
inc
repz
sbb
jno
sub
add
iret
loope
mov
push
loope
ret
insl
movsb
lcall
or
cs
mov
and
mov
loope
loope
add
insb
dec
enter
and
gs
fildl
jb
cmpsb
pop
sbb
js
aaa
stos
lcall
xchg
and
xchg
mov
xor
fdivrl
adc
inc
mov
sbb
insb
add
xchg
mov
or
jae
and
daa
ja
out
pop
stos
rol
mov
dec
jbe
int
fdivl
divb
xchg
addb
lcall
push
jno
arpl
sarb
loop
lahf
test
ljmp
loopne
xor
push
aas
add
pop
add
inc
or
shr
fucomi
jae
test
cltd
xchg
aas
mov
loop
add
shlb
mov
jbe
shrb
loop
ret
sbb
lods
xchg
or
or
ja
pushf
ret
mov
mov
orl
pop
mov
pop
pop
fcomip
popa
cwtl
lret
mov
stos
pop
xchg
out
add
jns
lods
sbb
out
lock
jne
leave
stos
ljmp
adc
inc
xchg
dec
shll
pop
lods
mov
push
pop
repnz
push
dec
test
xor
xor
ljmp
jnp
mov
push
jmp
push
icebp
arpl
dec
lcall
das
popa
out
pushf
sub
xor
call
lahf
push
inc
inc
out
fstl
clc
xlat
pop
or
xlat
dec
sahf
fildl
lcall
loope
rolb
xchg
xchg
sbbl
or
lods
pop
test
jae
cwtl
dec
fcmove
mov
xchg
mov
mov
push
sbb
stc
add
mov
cmp
jmp
jo
or
jmp
sbb
sub
loope
std
xchg
cmp
cmpsl
iret
pop
imul
mov
push
ret
mov
jmp
jns
addr16
scas
mov
rclb
mov
jecxz
push
bound
fistps
into
sbb
icebp
gs
arpl
dec
pop
mov
pop
inc
sti
inc
leave
divb
xor
jnp
repnz
cmp
jp
lret
iret
and
sbb
inc
xchg
push
pop
sub
dec
jne
mov
xor
jg
out
mov
sahf
mov
fsubl
pusha
add
cmp
jb
fidivrs
lahf
sub
xor
lcall
xor
pushf
stos
cld
cmp
aaa
xor
cmpsl
jns
iret
xor
cs
push
pop
popf
pop
cmp
adc
scas
inc
daa
add
mov
pop
fcompl
ss
movsb
data16
and
outsb
adc
les
sbb
add
inc
leave
das
mov
pop
pop
ret
pushf
cmp
lahf
jge
cmp
fsubs
or
mov
cmpb
shlb
cmp
pop
mov
scas
jle
and
rcr
add
loop
cmp
cwtl
adc
shlb
jnp
inc
stc
push
dec
jae
lds
add
arpl
pop
push
notb
sub
mov
test
stos
stos
mov
mov
xchg
jl
rorl
jg
xchg
xchg
andb
lret
clc
jg
and
and
add
xor
cmpb
rolb
out
lods
loope
inc
adc
scas
les
or
popf
mov
fstpl
dec
aaa
mov
mov
fsub
sbb
jmp
push
pusha
fwait
mov
lods
pushf
inc
mov
pop
jne
xchg
adc
xchg
mov
test
nop
and
mov
mov
bound
rorb
enter
frstor
dec
jl
test
in
adc
inc
rcrl
lret
mov
daa
add
fcomps
mov
inc
pop
inc
mov
pop
ret
xor
push
inc
jae
ficoml
inc
mov
add
xchg
mov
inc
jp
adc
inc
and
xchg
sbb
cmp
cmp
push
jl
mov
xor
shl
xchg
cmp
push
ss
lea
ss
je
scas
iret
push
test
mov
adc
subl
push
mov
xchg
sbb
mov
js
jo
inc
call
pusha
adc
add
out
or
mov
idivb
data16
pop
jnp
mov
and
loopne
push
sti
xor
loope
xor
mov
adc
fwait
push
fwait
sbb
arpl
sub
es
cmp
and
in
dec
push
sbb
ret
adc
xchg
inc
pop
dec
jmp
jge
daa
push
push
pop
dec
xchg
arpl
mov
jecxz
cmpsb
dec
repnz
test
sbb
cld
icebp
test
adc
push
lret
cld
pop
cwtl
out
fbstp
xor
push
loop
inc
jae
mov
sub
mov
out
cmp
icebp
or
or
sbb
cmpsb
popf
repnz
pusha
mov
pop
stc
aas
adc
loope
scas
sub
int3
sar
or
outsl
cs
test
ss
stos
mov
jae
ror
mov
lea
in
popa
push
loope
out
movsl
aaa
push
js
movsb
dec
xor
adc
mov
repz
stc
pop
jbe
or
mov
mov
pop
xchg
fisubrl
jno
jno
sbb
scas
dec
cmp
push
and
in
lock
sbb
data16
rclb
fcoms
sbb
in
insl
aad
adc
call
xchg
pop
mov
push
aad
nop
pop
lods
push
cld
dec
cmp
mov
dec
dec
xchg
sub
xor
or
pop
mov
dec
mov
push
mov
adc
jnp
or
ja
pop
in
push
xchg
aaa
in
insb
fs
unpckhps
test
jp
mov
test
sbb
jmp
xor
jno
dec
pop
mov
out
push
pop
mov
xor
std
adc
es
mov
mov
nop
sarb
mov
jg
dec
jbe
cmp
repnz
lods
push
push
mov
arpl
pushf
mov
jle
dec
dec
mov
fwait
xor
loopne
xchg
adc
jecxz
mov
fmuls
inc
lds
sub
xchg
mov
push
or
lahf
mov
and
leave
int
push
je
es
inc
lahf
jnp
xchg
cmpsl
or
mov
ret
push
xor
pop
push
call
test
and
cld
fs
jno
outsl
dec
scas
xor
or
test
repz
and
dec
or
cmp
cmp
fiadds
sub
inc
popf
cld
mov
jecxz
mov
xor
or
sbbl
daa
ficomps
enter
xor
pop
dec
xchg
enter
lock
dec
int3
mov
lods
ret
jecxz
cs
jl
stos
repz
loopne
out
mov
cs
inc
xorl
aam
dec
xlat
or
rcrb
scas
inc
jo
ljmp
imul
and
sub
mov
cmp
and
jp
les
mov
push
sub
lret
mov
or
pop
sub
mov
nop
scas
pop
or
push
and
mov
and
add
bound
cmp
xchg
cld
nop
lret
out
push
pop
enter
pusha
adc
sbb
and
out
sbb
add
cmc
sahf
mov
inc
shl
and
andl
stos
jne
sahf
push
xor
out
push
xchg
push
das
mov
mov
dec
or
fs
xor
push
xor
xchg
cmp
int
add
sbb
sti
outsl
test
ret
lds
cwtl
adc
mov
lahf
fs
and
daa
nop
test
xchg
xchg
cmc
mov
jge
sbbl
adc
xchg
shll
mov
cld
jmp
pop
cs
mov
aam
dec
mov
mov
cmp
aaa
lods
ljmp
or
test
xor
outsb
je
fisttpll
loope
outsb
mov
xor
pop
mov
divb
mov
aas
cmp
enterw
daa
push
cltd
cld
mov
mov
dec
add
lcall
imul
fldlg2
sbb
sub
fcmovu
pop
jmp
rorl
mov
and
push
pop
test
test
ds
xor
add
je
das
jle
lods
out
dec
std
imul
push
xchg
data16
inc
jne
sub
scas
stos
push
call
cmp
stos
jge
pop
mov
push
xchg
lds
pop
and
mov
cmp
cmp
mov
mov
iret
popf
div
cmc
inc
push
jmp
subb
mov
add
lret
mov
lret
mov
ljmp
adc
mov
mov
lods
jbe
lret
mov
std
movsl
ja
insb
fbstp
test
aaa
pop
test
mov
jno
jl
sbb
fs
ljmp
jbe
out
push
aaa
mov
insb
insb
test
pop
sbb
pop
cmc
mov
mov
or
leave
xchg
fmulp
movsl
int
int
lret
loope
jecxz
ljmp
jnp
fimull
mov
push
jge
add
lahf
mov
stos
inc
js
mov
push
jg
push
pop
mov
out
cld
loope
mov
std
aad
cmp
push
shll
cmp
je
cmpl
mov
ret
not
ja
imul
lock
sbb
mov
pop
dec
cmp
inc
shlb
imul
test
lcall
in
push
pop
inc
nop
or
jmp
jle
add
dec
nop
jae
jbe
and
jmp
daa
test
clc
aaa
loopne
cltd
xor
push
int
cmpsb
subb
sarb
mov
inc
lods
xacquire
iret
jo
mov
mov
jnp
mov
lret
mov
adc
cmp
push
insb
adc
push
or
xchg
les
out
sbb
dec
inc
mov
sti
lods
lea
scas
int
or
cmp
icebp
data16
and
sbb
not
daa
add
cmp
sub
mov
mov
mov
fnsave
jg
in
das
mov
or
in
jmp
inc
ja
test
xchg
shrb
popa
loop
in
inc
mov
mov
insl
cmpsl
push
ds
adc
fwait
mov
arpl
mov
jmp
mov
adc
rcrb
movsl
mov
leave
jo
ss
mov
test
adc
push
mov
out
mov
negb
imul
cmp
mov
fcmove
in
adc
shrl
dec
sbb
popf
call
xor
sti
jno
dec
sahf
lds
push
ret
push
inc
pop
mov
sarb
addr16
mov
sti
lret
xor
xor
test
outsl
cmp
sub
test
pop
repz
cs
xor
test
xor
out
pop
push
je
cltd
sub
fs
outsb
xlat
mov
mov
mov
mov
sahf
adc
jl
arpl
or
dec
sti
nop
mov
jge
push
fistl
sbb
xor
ds
rcrb
mov
add
mov
fwait
lock
gs
out
cld
mov
dec
xchg
inc
xchg
call
data16
adc
inc
cli
jl
jo
pop
pop
mov
xorl
pop
dec
pop
push
xchg
jno
addb
inc
jae
mov
and
push
xchg
cmc
stos
push
shrl
test
enter
movsb
cltd
pop
push
clc
sar
add
dec
xchg
push
pop
je
xchg
or
lods
xor
ficoms
andl
call
int3
sub
mov
aam
mov
xchg
outsl
push
pop
xor
pop
jmp
mov
movsb
and
fsubr
jae
pop
loope
xchg
stos
enter
in
pop
sarb
scas
faddl
lret
cmc
movsb
jne
mul
adc
repnz
adc
scas
rorl
sub
movl
or
out
mov
repz
mov
xchg
popf
test
add
mov
cwtl
mov
aas
sbb
push
push
cmp
test
xchg
out
mov
jl
repz
sbb
das
je
mov
dec
stos
ljmp
mov
push
int3
mov
mov
inc
data16
push
jge
mov
fdivrl
dec
xchg
in
mov
and
push
sarl
iret
inc
enter
loopne
orb
or
cmp
mov
or
sbb
inc
stos
into
test
mov
ljmp
sub
push
mov
or
call
jne
dec
sbb
std
pop
ja
adc
arpl
xor
in
mov
xchg
ja
pop
enter
xchg
cmp
ret
aaa
mov
fiadds
jnp
sub
imul
mov
dec
mov
sbb
push
je
clc
adc
lahf
jecxz
dec
mov
int
scas
das
outsl
movsb
pause
mov
jae
pop
cmpsb
jb
pop
in
enter
or
aaa
push
adc
outsb
nop
sub
jae
andb
add
and
mov
sbb
cmpsl
cmp
mov
xor
rclb
xchg
cmp
addb
cmpb
insl
or
shrl
mov
mov
cwtl
out
add
sbb
mov
idiv
push
push
add
jnp
adc
dec
repnz
add
repz
add
fisubs
cltd
rcrb
jb
mov
push
dec
bound
jne
add
lods
jb
mov
push
pop
lods
rep
add
xchg
testb
aam
xor
pop
lret
test
ljmp
je
loopne
mov
sub
push
lds
popf
adc
pop
mov
cs
imul
cmovno
fadd
fmuls
mov
xchg
lcall
sbb
aam
cld
push
rolb
fwait
push
xor
mov
popa
jo
stos
and
cmc
adc
aad
add
mov
pop
add
jae
clc
pop
and
jo
ss
fsubr
dec
into
in
pop
jl
inc
out
pop
pop
arpl
mov
sub
and
pop
daa
nop
pop
imul
push
sahf
mov
scas
push
ret
vfrczsd
xchg
mov
jl
cmpsl
or
adc
sahf
mov
pop
outsl
mov
ret
pop
or
cwtl
inc
xor
push
xchg
xchg
or
push
jbe
repnz
outsb
push
xor
adc
dec
pushf
ret
in
fs
push
rorb
or
dec
insb
push
movl
addl
andb
pop
xor
shrb
out
pop
fwait
scas
popf
fnstenv
dec
imul
stc
mov
pop
ja
cmp
xchg
cmp
ret
lock
jmp
jmp
loope
dec
shl
shlb
sar
fldcw
test
jbe
push
adc
cs
imul
pop
push
fwait
mov
in
inc
repz
pop
mov
mov
in
cltd
fucom
dec
cmp
int
add
jb
or
mov
mov
stc
mov
ficompl
sti
mov
int
jle
test
jecxz
push
xor
arpl
cmc
push
shlb
insb
mov
lods
insl
aad
rcl
push
jle
lock
out
sbb
aad
sbb
scas
cltd
jg
cld
jmp
push
jp
jo
cld
js
in
ret
add
in
sub
push
fiadds
push
sbbl
and
sub
gs
sbb
mov
inc
daa
lret
shlb
or
xchg
xor
aaa
lea
mov
xorl
sub
adc
les
xchg
push
sub
xchg
pop
out
lcall
enter
inc
arpl
mov
sub
ret
pop
mov
fcomps
jb
mov
add
fbld
mov
andl
push
in
and
jo
adc
pop
pop
mov
fsubrp
cld
icebp
popa
push
jl
xchg
dec
adc
or
js
sbb
test
push
loop
cli
fdivr
pop
mov
arpl
iret
sub
daa
dec
xor
ror
and
pop
mov
xchg
and
ja
lods
pop
sub
hlt
divb
mov
pop
sbb
dec
std
inc
cmp
loop
sub
push
arpl
or
xchg
inc
mov
scas
fldl
pop
cmpsl
arpl
inc
mov
stc
push
adcl
jecxz
pushf
lock
lock
xor
stc
in
pop
fsubrp
test
sub
cmp
mov
movsb
push
bound
fmuls
dec
hlt
pop
aam
mov
int3
andb
and
mov
sbb
mov
pop
fidivrs
pop
rolb
mov
cmp
out
lods
pop
shll
dec
roll
add
pusha
adc
adc
cmp
pop
ljmp
cld
xchg
aaa
int3
push
sub
mov
aaa
in
and
insl
cwtl
pop
int3
mov
imul
loopne
out
bound
mov
daa
bound
jo
out
xor
cmpsl
mov
or
and
inc
aas
mov
fs
pop
sub
and
mov
cmp
mov
xor
and
jl
orb
nop
out
sbb
push
or
push
add
push
lods
adc
mov
mov
nop
es
repnz
addl
in
out
jle
add
mov
sub
mov
pop
inc
insb
ret
adc
les
sbb
sti
mov
and
call
sub
or
dec
mov
sub
loopne
lods
sbb
jno
xlat
jge
mov
dec
ss
xor
pop
mov
mov
shrl
out
pop
rol
lahf
stos
nop
data16
pop
mov
inc
loop
cmpsb
subb
jae
out
add
mov
ss
xor
cld
out
xchg
mov
sub
jp
cmp
jl
int3
xchg
dec
pop
pop
lea
aas
enter
add
push
jmp
push
mov
flds
ret
out
mov
scas
es
and
daa
ja
push
mov
fcompl
push
inc
cmp
pop
mov
mov
test
das
push
add
fstpt
rcll
xchg
int
jns
mov
mov
ljmp
jp,pn
adc
lea
adc
lea
in
push
and
mov
xor
mov
mov
add
xlat
js
ss
mov
es
repnz
fwait
mov
test
sbb
xor
data16
loope
int3
es
in
push
sub
and
addr16
movsb
sbb
stos
lock
mov
mov
mov
fst
add
mov
push
push
icebp
js
mov
test
pusha
mov
in
xchg
xrelease
insb
subl
mov
cmp
adc
mov
insb
jne
dec
jge
test
cmp
rcrb
push
jne
out
xchg
cs
cmp
hlt
js
aas
lret
sbb
shrl
dec
push
ret
lahf
mov
inc
shll
mov
adc
dec
das
in
popf
loopne
fwait
mov
and
jnp
push
xchg
and
cmp
push
xor
push
fimull
insb
xchg
push
outsl
add
and
add
in
dec
add
dec
inc
mov
xor
lea
mov
pusha
shl
cltd
adc
xchg
jnp
cmpsl
dec
jae
jg
movsb
mov
pop
sub
xor
pushf
xor
test
mov
jo
nop
div
dec
flds
imul
cmp
push
jns
mov
enter
rorl
leave
xchg
lahf
imull
das
out
xchg
mov
cmp
xchg
inc
dec
mov
test
subl
pop
sbb
jae
fcompl
fists
mov
sub
ret
inc
es
mov
push
mov
add
cwtl
pop
bound
xchg
sub
hlt
and
shrb
ss
adc
jns
jae
popf
add
gs
fiadds
or
sub
xchg
add
mov
rclb
js
sub
jmp
ljmp
in
xor
aas
push
inc
add
pusha
jmp
xorl
xchg
lods
cmp
test
test
scas
and
fucomp
mov
shlb
and
push
scas
cmp
aam
mov
or
ds
or
int
pop
fld
jmp
into
iret
test
pcmpgtd
aaa
cs
mov
jle
xor
jne
ror
add
aas
pop
cli
sub
or
mov
cwtl
jmp
hlt
aaa
cmp
lea
daa
ja
lock
adc
or
push
jns
bound
sbb
jae
push
ret
dec
jecxz
test
insb
in
fcoml
ss
mov
add
xchg
mov
and
cltd
adc
rcrl
ljmp
popa
adc
xchg
jne
xchg
shrl
rep
pop
movsl
adc
lds
xchg
jge
and
dec
popa
icebp
lea
test
xchg
mov
xor
adc
inc
jl
scas
insl
xor
xchg
in
cmp
jmp
js
cmp
movsb
push
xor
addr16
cli
dec
in
mov
ret
push
xchg
test
fldenv
push
jne
pop
or
xchg
in
sbb
fwait
sbb
cltd
xor
xor
add
stos
xchg
cmp
push
lcall
jg
pop
ljmp
mov
pop
push
adc
daa
bound
lods
push
pop
mov
fsubrl
loop
push
push
xor
mov
jecxz
and
dec
mov
loope
mov
mov
bound
mov
push
notl
jno
repz
adc
in
jge
movsl
gs
cmpsb
cmp
fucom
cmp
and
push
pushf
movsl
cmpsl
jge
and
mov
in
jne
jle
icebp
xlat
ds
nop
jne
sarl
nop
fnstsw
sbb
or
es
aad
or
pop
mov
pop
jbe
cld
test
sarl
rcrl
xlat
jl
mov
fidivs
cmp
xchg
mov
pop
lock
iret
in
arpl
adc
adc
dec
or
in
xchg
pop
and
mov
in
jbe
fistl
lea
fimull
mov
or
xchg
loopne
pusha
les
lods
int3
mov
loope
inc
in
add
fbld
sub
xchg
cmpsb
repnz
mov
and
cli
push
mov
adc
fwait
push
leave
int3
out
lret
sbb
xchg
clc
aas
arpl
sbb
pop
sbb
mov
adc
pop
aam
jecxz
arpl
cmp
dec
adc
fldenv
jne
test
bnd
lret
dec
faddp
imul
add
out
dec
leave
std
push
in
into
push
inc
gs
pop
xor
lods
nop
inc
enter
dec
add
fiadds
sub
mov
jo
data16
sub
sahf
sahf
cli
or
call
jno
xor
fcoml
or
push
cmp
add
and
jae
aam
ret
push
ret
lcall
jle
insl
lods
daa
cmp
xchg
xlat
xlat
inc
test
push
xchg
insl
fisubrl
cmp
push
data16
fdivrs
pop
addr16
mov
loope
sub
xchg
pop
xor
imul
scas
jnp
inc
inc
test
push
pop
cmp
test
sbb
in
movsb
in
mov
push
inc
loop
push
in
jb
dec
dec
enter
push
mov
das
xchg
xor
jmp
jo
pop
inc
xor
push
xchg
mov
sbb
pushl
loopne
jg
inc
and
bound
inc
je
fcoms
push
add
adc
jmp
nop
jle
jae
pop
and
jbe
sbb
clc
mov
ss
pop
repz
lods
nop
adc
stc
adc
hlt
jo
hlt
jp
xor
in
scas
adc
lods
pushf
fnstcw
mov
inc
flds
pushf
decb
mov
mov
push
jns
fiadds
ficomps
test
jl
mov
jno
iret
insb
rorl
mov
psubsw
xchg
data16
out
dec
pop
mov
ljmp
push
addr16
lret
test
xchg
stos
xlat
add
and
push
aas
dec
push
xor
jbe
outsb
pushf
mov
sub
xchg
and
divb
test
fists
mov
in
iret
jne
or
sub
or
ljmp
ds
dec
loop
cmp
dec
lcall
lahf
pop
int
pusha
adc
test
sti
leave
jl
flds
fbstp
frstor
hlt
nop
jg
add
sbb
or
sbb
out
adc
je
pop
jmp
subb
xchg
push
and
ljmp
mov
lds
popf
or
mov
sbb
xchg
cmpl
add
lret
jecxz
testb
mov
mov
fwait
push
mov
movsl
popa
loope
lods
int
xor
push
iret
pop
mov
ds
add
pushf
je
adc
ret
push
lods
ljmp
lds
lcall
jle
es
mov
movsb
in
push
jmp
jb
lret
test
jge
push
int3
push
cltd
pusha
or
cmp
jmp
mov
xlat
lret
sahf
cmc
add
test
bound
pop
pop
pop
ret
imul
gs
sarb
rclb
insl
sbb
jl
mov
cmp
mov
inc
inc
inc
scas
arpl
or
jg
pop
push
mov
xchg
test
add
outsl
lea
dec
mov
add
pusha
lcall
sub
cltd
mov
outsb
nop
pop
mov
jbe
cmp
test
scas
pop
js
push
inc
xchg
push
cmp
insb
int
scas
sub
xor
inc
ret
andl
mov
mov
push
xchg
imul
aaa
test
ror
je
stos
lahf
ds
lods
lock
clc
sub
adc
dec
adc
inc
inc
into
xor
push
mov
xlat
andb
mov
jg
inc
call
mov
cs
jl
orb
sub
lret
pop
clc
stos
push
pusha
iret
arpl
xor
nop
jno
repnz
inc
sbb
fldt
cs
stc
rcrb
call
fidivs
std
and
cmp
test
je
repz
sub
xchg
jno
neg
xor
std
mov
dec
mov
adc
mov
imul
adc
cltd
mov
fcompl
pop
mov
xchg
test
adc
cli
add
shlb
or
mov
lods
dec
jb
mov
repz
test
call
mov
fcmovb
outsb
adc
or
push
stos
popa
mov
mov
cld
mov
add
movsl
lods
sbb
sbb
push
rorl
mov
mov
mov
sub
lds
add
jnp
mov
mov
addl
jecxz
sbb
adc
dec
lods
mov
jb
jne
aaa
adc
or
data16
sub
popa
pusha
push
jl
test
pop
pop
cmp
shl
icebp
pop
gs
cmp
repnz
xchg
cwtl
pop
pusha
lahf
test
pop
ret
nop
repz
sub
push
jns
xchg
sbb
scas
fildll
mov
lcall
loopne
outsl
imul
scas
lods
mov
inc
inc
daa
mov
addl
adc
bound
stos
xchg
adc
in
push
mov
in
or
xorl
add
mov
mov
push
xchg
mov
pop
dec
test
lods
push
adc
aas
mov
mov
cmc
inc
scas
dec
outsb
lret
imulb
inc
insl
orl
xchg
adc
mov
test
nop
loope
aaa
dec
int3
xchg
inc
or
xor
sahf
imul
mov
xlat
mov
or
ja
sti
ret
pop
cmp
pop
and
nop
cmpsl
subl
mov
xchg
sub
mov
movsl
mov
jno
or
cltd
in
inc
leave
jae
mov
push
sti
sahf
mov
movhps
jae,pt
fisttpl
out
out
std
jne
xchg
cmp
ss
pop
dec
bndstx
pop
add
shlb
xchg
dec
mov
pusha
nop
cmp
and
xchg
pop
jle
push
xchg
dec
cwtl
add
ret
mov
push
push
xor
or
push
mov
dec
adc
insb
jg
dec
pop
push
divb
cmp
and
mov
xchg
mov
loope
lret
std
sti
jp
cmc
cmc
xchg
and
das
xor
popa
repz
or
push
lahf
icebp
pusha
jns
lret
fwait
sbb
push
insb
cmpsl
fs
push
jno
arpl
mov
push
dec
out
push
jg
jbe
mov
test
xor
das
jp
mov
inc
xchg
adc
pushf
nop
shrl
add
cmp
in
xchg
pop
mov
xor
add
push
and
fbld
roll
movsl
xchg
mov
fbstp
add
data16
push
leave
ss
sti
sbb
inc
hlt
inc
mov
imul
sub
push
push
add
mov
dec
test
mov
fsub
dec
mov
ret
dec
or
popf
add
sub
test
pop
dec
in
outsb
cmp
lret
mov
add
loop
ret
aam
add
adc
sbb
jecxz
cmpsb
fcoms
iret
rcll
cmp
imul
xchg
push
in
movsl
movsl
mov
xor
xor
mov
xor
cs
push
cmp
cmp
test
push
mov
or
jge
xchg
dec
and
push
movsl
popa
pop
mov
cmp
push
sub
jo
push
daa
lock
push
divl
out
push
enter
dec
mov
ja
sahf
and
lret
inc
leave
cwtl
es
push
in
fs
out
fisubrs
jle
cmp
sbb
push
stc
in
push
mov
mov
xor
pop
sub
cmp
std
mov
es
iret
fisubrs
sbb
dec
inc
in
xchg
test
jbe
leave
stos
les
inc
jns
iret
inc
cmp
lahf
add
jnp
leave
hlt
mov
push
enter
jge
jge
jb
mov
add
cmp
jmp
pushl
inc
push
in
cltd
jns
cltd
imul
or
inc
jo
push
adc
sub
pop
dec
popf
pop
xchg
cmp
xorb
cmp
jo
ds
and
pusha
fmuls
cmpb
icebp
cmpsb
aad
xchg
aas
int3
gs
lods
jne
rolb
mov
leave
jp
xchg
aaa
pushf
cmp
ljmp
lcall
sub
cmc
sahf
std
aaa
or
test
outsl
ss
aaa
jecxz
test
ds
lret
inc
std
mov
or
xor
rcrb
out
jno
imul
pop
test
and
sbb
sbb
lret
cmpsl
mov
push
jb
jl
cwtl
in
sub
orl
dec
pusha
jl
sarl
les
push
cwtl
xchg
mov
fsubrp
cmp
cmp
imul
rcll
divb
stos
jl
lcall
cltd
jmp
fstl
loop
push
xchg
or
add
and
sarl
fwait
imul
dec
js
pop
xchg
cmp
add
cmpsb
js
pop
jne
dec
cmp
or
pop
test
dec
repz
fmull
push
inc
test
dec
shl
sbb
jbe
gs
sbb
repnz
lret
mov
jmp
sbb
lods
fs
mov
int3
xchg
jmp
pop
sbb
mov
adc
jbe
sub
pop
lahf
iret
imul
dec
sbb
pop
mov
shrb
movsl
stc
push
xchg
xlat
neg
stos
jle
xor
push
add
push
sub
les
imul
cmpsb
mov
rorb
xor
mov
pop
repnz
adc
mov
mov
mov
and
pusha
sti
pop
mov
adcl
push
cwtl
cld
sbb
lock
mulb
push
pop
cmpsl
xchg
mov
dec
mov
sub
xchg
pop
sbb
leave
inc
pop
cld
adc
sub
pushf
shll
push
fwait
cs
sub
fldt
mov
icebp
push
scas
in
stc
out
out
ljmp
push
in
call
dec
ds
add
dec
sti
pop
imul
or
mov
add
fcomps
jle
adc
and
pop
add
dec
or
jno
notb
outsb
fstl
clc
incb
mov
sahf
xor
mov
mov
or
sub
imul
call
push
in
loop
xlat
pop
ret
sbb
pushf
xor
cld
mov
rcrb
mov
dec
xor
lahf
dec
jge
mov
sub
push
rorl
push
insl
pushf
aas
lcall
insl
adc
jbe
inc
mov
mov
sub
loopne
cmpsl
push
push
les
sti
and
iret
fiadds
test
fisubl
xchg
clc
xchg
into
xchg
sbb
decb
fadd
xchg
nop
cmpl
out
loop
fs
sub
jno
xchg
outsb
paddusb
sbbl
dec
mov
sarb
cwtl
enter
mov
mov
adc
orb
ds
xor
cmpsl
add
int
push
jg
adc
mov
mov
xchg
int
and
mov
mov
call
cld
shlb
js
enter
jecxz
push
inc
xlat
adc
daa
js
daa
mov
jno
sarl
jb
jmp
ljmp
repz
out
or
imul
and
mov
xchg
add
in
push
data16
inc
or
ror
mov
pop
inc
push
fisubl
addr16
add
inc
sub
mov
xlat
mov
aam
lahf
ror
mov
cld
fucomip
inc
loop
mov
imul
lret
add
or
out
out
pop
mov
es
push
mov
mov
pop
aad
or
xor
fmuls
inc
cmp
jb
sbb
mov
push
or
pop
mov
adc
bound
mov
xor
fucomp
ljmp
movsl
jle
push
mov
daa
outsb
sahf
pop
jecxz
shl
jl
dec
fistl
and
ljmp
add
call
push
push
push
mov
pop
rclb
xchg
leave
out
cmp
xor
repz
jmp
cwtl
xchg
jno
xchg
mov
dec
add
xchg
sub
jle
xchg
dec
mov
ja
fisttpl
mov
and
data16
xchg
popa
lahf
test
inc
xor
test
adc
fiaddl
pushf
jne
inc
fs
fdivl
movsb
cmp
fwait
add
arpl
outsb
xchg
in
gs
pop
insb
gs
repz
xchg
into
cmpsb
mov
cmp
stos
push
setnp
pop
leave
les
ja
push
icebp
popa
jno
mov
lret
ret
popf
arpl
push
andb
out
mov
clc
lahf
daa
add
call
addr16
in
mov
cmp
jbe
push
in
mov
cmp
pop
cmpl
int
add
mov
fcmovb
pop
xchg
in
push
or
fistpll
fyl2x
mov
push
pushf
es
cmp
xor
in
sbb
adc
cmp
or
inc
push
scas
ljmp
test
lcall
js
in
jb
fidivs
mov
sahf
pop
xor
loopne
mov
jns
imul
push
popf
nop
dec
add
loope
ss
push
mov
jle
sub
es
mov
pop
aaa
xchg
and
cmpsl
and
mov
stos
daa
adc
test
mov
jmp
in
push
fists
lea
mov
push
das
jg
fistpll
jmp
mov
mov
inc
ret
das
int
fucom
cmp
lahf
pminub
int3
mov
push
ds
pop
into
aam
xchg
ret
pop
outsl
jecxz
xor
mov
pop
pusha
int
push
jecxz
test
xlat
test
stc
xchg
mov
scas
fldcw
mov
sti
dec
fimuls
pop
aam
mov
jbe
cmp
js
sub
mov
out
lods
fbstp
sub
arpl
stc
dec
mov
cmp
push
push
jne
cwtl
fwait
cmp
push
mov
jae
and
xlat
mov
xor
fsts
dec
adc
xor
mov
dec
pushf
push
jb
xchg
mov
mov
and
testl
jne
xchg
bound
mov
pop
jbe
sub
adcl
add
mov
and
lock
enter
push
mov
jno
mov
mov
adc
mov
sub
add
lret
mov
ja
push
dec
dec
lds
test
into
lock
cmpl
push
fcompl
cld
mov
imul
jne
jae
int
dec
stos
xchg
roll
in
cltd
push
and
rolb
int3
push
daa
sbb
xor
lret
arpl
push
pop
loope
aam
fistps
aas
bswap
sub
pushw
leave
mov
test
xchg
js
ja
daa
and
push
cmp
jo
imulb
fmull
xor
out
lret
in
imul
data16
shlb
stos
stos
or
mov
xchg
lret
daa
xchg
ss
jno
stos
pop
mov
pop
ds
add
mov
mov
pop
and
sarl
fidivs
repz
outsb
fsubr
inc
rcrb
lock
mov
cld
repz
pop
pop
add
iret
les
cmc
jb
adc
sub
and
sbb
sbb
xor
imul
into
lods
imul
bound
aas
push
add
jae
cmpsb
sarl
inc
cmp
push
fcmovnbe
pusha
xor
mov
mov
inc
push
add
and
pusha
sub
cltd
mov
or
outsl
add
nop
lcall
pusha
mov
cmp
pushf
xlat
xchg
xor
push
xchg
shrl
jnp
shlb
insl
jns
subb
cmpsb
xlat
xchg
xor
test
fnstenv
mov
movsl
ret
out
push
xor
cmp
pop
out
icebp
outsl
fists
rol
in
cmp
imul
mov
sbb
int
nop
xchg
push
jecxz
jle
pop
ret
outsl
lock
inc
ret
dec
out
cmp
shrb
adc
pop
arpl
adc
cmp
addb
inc
xor
mov
xor
or
push
mov
repz
cld
rep
rcl
les
or
cltd
rclb
dec
and
or
inc
dec
mov
mov
mov
ficoml
mov
xor
lock
pop
mov
hlt
pop
sub
and
push
pop
std
fisttpl
fidivs
push
push
outsb
stos
jb
adc
dec
cmp
test
stos
inc
ret
inc
jmp
fisttpl
xchg
stos
mov
movsb
sbb
bound
aad
sub
mov
cmpsl
pop
stc
dec
sub
mov
lds
mov
add
mov
fisubrl
jbe
push
mov
pop
and
rcrb
jb
push
lock
popa
pop
xchg
jge
or
mov
push
imul
xchg
and
inc
lods
cwtl
aaa
xor
dec
in
movsb
jg
shlb
movsl
sub
test
xchg
faddl
push
test
jbe
movsl
fs
jge
sub
adc
mov
sub
or
sbb
push
loopne
inc
clc
inc
enter
insl
mov
or
sbb
inc
mov
testb
adc
and
fistpl
pop
call
mov
cmpsb
pop
mov
test
test
push
out
lcall
jb
clc
out
jmp
in
xchg
xlat
fistpl
addr16
jmp
fbld
sub
and
out
sub
sub
sbb
pop
lcall
mov
in
ret
jae
out
lods
xchg
sbb
and
outsb
and
jp
cmp
adc
xchg
imul
dec
mov
loopne
sbbb
scas
sarb
dec
adc
loop
mov
ds
jno
mov
repz
adc
in
sub
mov
loopne
push
lods
push
jb
aad
insl
cmpsl
cmp
cmp
jg
cmc
pop
mov
iret
jo
je
lock
xorl
movsl
jb
cs
sahf
ja
fnstenv
les
pop
push
and
jne
jl
cmp
cmc
xchg
lahf
cmpsb
inc
mov
popa
lock
sti
incl
daa
and
loopne
lcall
iret
push
cli
dec
mov
pop
stc
pop
js
pop
xchg
jo
lods
inc
es
movsl
inc
andl
fsubr
dec
mov
jnp
inc
imul
ja
out
shrl
add
push
lret
in
dec
add
sbb
push
add
or
imul
add
mov
push
fs
fcomip
and
jl
hlt
imul
cmp
cmpsb
add
inc
jg
ss
or
sbb
popf
add
and
and
add
in
dec
adc
add
inc
push
data16
lret
lods
fisttpll
jne
aad
add
js
mov
ljmp
ds
ja
jo
out
push
lea
xchg
xlat
cwtl
pop
add
cmpsl
test
lds
testb
pop
pop
std
pop
sub
push
out
aad
pop
jae
mov
shrb
sub
xor
and
insb
aaa
fcoml
mov
mov
scas
pop
or
xlat
pop
out
mov
lret
out
and
fmuls
incb
minps
jb
push
mov
mov
nopl
or
cltd
inc
je
sub
push
js
fisubs
loope
push
and
sub
cmp
or
inc
push
frstpm(287
add
mov
stc
mov
fldcw
jecxz
jge
jb
push
aad
or
outsl
iret
adc
es
cmp
push
ror
sub
xchg
xchg
cwtl
nop
fstps
xchg
cltd
into
mov
mov
pop
pop
mov
gs
xchg
outsb
sub
sti
arpl
push
data16
xlat
xor
jmp
cmp
xchg
add
stos
sub
fbld
jae
out
push
push
jp
mov
sti
mov
mov
dec
sbb
push
sbb
pusha
in
mov
fildll
lock
pop
sarb
mov
mov
xchg
cmp
xor
xchg
jle
pop
orl
adc
fldln2
divps
rcll
lret
es
sbb
inc
pop
xchg
xor
xchg
push
movsl
mov
hlt
jl
xchg
xchg
stos
ret
cmp
jno
leave
xlat
cmpsl
mov
les
push
imul
inc
dec
adc
out
mov
lods
sbb
daa
arpl
lock
and
inc
test
pop
cmovne
shl
dec
and
es
sbb
xor
sbb
stos
stc
out
inc
push
cli
stc
xchg
add
dec
out
cmc
pop
mov
mov
jbe
arpl
xchg
outsl
or
pop
sarb
and
pop
push
push
cmp
adc
jbe
push
lret
mov
and
or
lock
add
lds
and
sbb
lahf
cmp
jle
xor
sub
lea
sub
mov
aaa
subb
xchg
push
mov
das
enter
or
jge
cld
pop
ss
inc
stos
pop
xorl
js
repz
sbb
ds
dec
push
in
xchg
fsts
xchg
mov
aam
jne
rcrb
and
lods
scas
mov
xor
movaps
dec
cmp
insb
ds
adc
push
jp
mov
mov
lea
out
push
leave
out
push
in
pop
sub
or
cmp
stc
movsb
mov
cmp
nop
push
orb
cltd
mov
cmp
push
xor
test
mov
sbb
and
fwait
xor
arpl
in
sbb
sub
test
mov
mov
sub
shrb
xor
or
fnsave
out
push
sti
loop
int
outsl
insl
jae
sub
lea
pop
dec
xor
xor
cwtl
cli
jbe
incb
mov
and
push
mov
aad
dec
add
out
fsub
adc
push
jp
lea
push
xchg
ret
xor
subl
daa
push
mov
add
lret
sbb
daa
dec
fs
arpl
fucomip
out
scas
pop
or
and
add
push
mov
iret
pop
inc
fcmovbe
jns
lods
rcrb
daa
pop
ret
push
and
fnsave
inc
shll
sub
xchg
daa
mov
mov
add
mov
orl
mov
nop
cli
jp
sub
arpl
out
fwait
ja
outsb
aas
loope
jg
pop
sarl
jle
push
dec
loopne
xchg
xor
push
lea
dec
dec
insl
rcr
mov
adc
ljmp
sub
stc
call
inc
movsl
adc
mov
imul
iret
imul
iret
mov
cmpsb
mov
or
xorb
mov
cmpsl
decl
push
aas
xchg
mov
pop
stos
xchg
inc
adc
jg
js
sbb
and
jmp
shll
ret
icebp
or
jbe
and
popa
inc
cs
push
sahf
sti
jbe
enter
cmpsb
mov
adc
in
inc
es
add
fs
xor
cwtl
pop
push
scas
mov
mov
mov
xchg
lcall
addr16
ret
int
fsubrl
dec
mov
insl
xchg
mov
bound
ret
push
mov
bound
call
loop
pop
hlt
sbb
jmp
fnstcw
lock
lcall
sbb
jmp
cmp
pop
sub
sub
call
adc
shlb
push
or
mov
repnz
std
push
cmp
stos
outsl
pop
lds
pop
jo
and
into
arpl
outsl
addr16
daa
lea
imul
insb
gs
nop
sarb
inc
sub
push
adc
in
sbbl
idivb
mov
lods
push
sub
xchg
mov
jo
dec
ja
mov
adc
int
or
repz
cmp
xor
popf
and
repz
fbstp
pop
fwait
loop
mov
mov
lods
test
pop
out
cmp
stos
add
jne
fstps
mov
fsubr
fs
ljmp
xchg
shrl
cmp
jno
jb
or
add
cli
xchg
stc
sub
lret
sub
in
es
sbb
in
xchg
mov
cld
xchg
push
addr16
cwtl
cmp
outsl
push
add
icebp
cmp
jmp
xor
sub
push
push
dec
push
je
add
sahf
test
sub
jb
adc
cmp
shlb
and
test
lods
pop
test
mov
fcmovnb
or
dec
fdivl
mov
testb
jne
xchg
push
andl
xor
add
into
xor
mov
jb
rorb
les
xor
outsb
int
dec
and
movsb
sti
out
fcompl
addl
add
mov
sub
imul
or
pcmpgtb
cmp
xor
imul
out
js
ljmp
push
sub
mov
adc
push
and
jbe
jp
stos
repnz
xor
inc
cmp
push
je
add
out
add
outsb
lcall
push
pop
iret
int
and
xor
and
loope
mov
cltd
mov
xor
fstl
test
and
popf
out
add
js
lahf
jge
and
and
xor
add
inc
jp
xor
pop
cmpsb
loop
sbb
adc
ja
or
cmp
push
sub
jb
jge
pop
out
test
data16
aas
pop
add
inc
or
push
in
inc
inc
pop
cmpsl
sbb
insb
lds
jl
enter
hlt
jbe
cmp
xor
mov
movsb
dec
lcall
push
cmp
stc
pop
push
jne
jecxz
sbb
and
mov
movsl
mov
dec
mov
aam
or
adc
jb
dec
jecxz
pop
push
jge
add
jne
lret
mov
pop
jne
or
xor
xor
pop
jnp
jmp
cmp
pop
mov
and
repz
xchg
stc
inc
inc
clc
andl
sbb
push
xor
jo
push
mov
idivl
clc
add
jb
in
pop
sbb
inc
xor
data16
pop
push
ficoms
mov
add
pop
adc
dec
lret
pop
xchg
imul
jecxz
gs
mov
ds
xlat
push
cwtl
shlb
xchg
ja
cmp
sbb
add
push
cli
fidivl
push
mov
cwtl
pop
jno
mov
lods
mov
cmc
mov
xchg
xchg
test
sub
rcrb
fwait
aam
push
push
inc
fisubs
jge
sub
push
fistpl
or
mov
lret
shl
push
cmc
jmp
and
inc
dec
cmp
clc
fstps
inc
cmc
ds
enter
ret
out
ds
jp
and
pop
jg
cmpb
jg
insl
inc
loopne
pop
lret
scas
sub
sub
ret
inc
rorb
xlat
insl
es
push
data16
popa
push
ficoml
addb
imul
push
test
icebp
push
nop
fdivs
and
js
imul
mov
fidivrl
xlat
fisttpl
inc
lods
sbb
xchg
or
mov
pusha
outsb
fsubp
xchg
mov
jmp
inc
pusha
loopne
xchg
stos
dec
cmpl
movsb
dec
adc
ret
cmp
pop
jl
sub
dec
push
and
and
cld
cmpsl
sbb
sbb
cmp
push
mov
lret
jl
gs
loop
dec
popf
test
frstor
faddp
jns
lea
movsb
lock
repnz
pop
iret
push
aaa
xchg
mov
cmpsl
push
push
daa
ds
sahf
sbb
mov
outsb
mov
and
arpl
dec
and
addr16
mov
repz
in
mov
rorl
xchg
xchg
jg
sub
and
mov
fwait
pcmpeqb
xor
xchg
stc
fisubrs
sahf
xor
inc
mov
jno
pop
xor
hlt
adc
mov
jb
mov
popa
cli
jmp
and
test
rorl
add
aas
insl
jge
mov
sbb
mov
mov
aas
scas
dec
sbb
pop
sub
push
fisubs
sub
dec
out
enter
dec
imul
icebp
xchg
cmpl
mov
inc
cmp
test
enter
dec
faddl
popf
in
dec
shrl
ss
cld
and
mov
cltd
std
mov
aaa
jns
decl
shll
inc
xchg
mov
cmp
mov
rol
mov
add
mov
pop
data16
enter
lret
mov
imul
test
mov
dec
sub
notb
clc
mov
add
jle
test
sub
pop
mov
xchg
dec
sub
jo
aam
xchg
mov
add
shll
in
sub
ss
or
push
cmp
daa
rcll
jge
roll
jmp
and
loop
lahf
jo
adc
mov
jns
dec
adc
add
mov
sbb
popf
lret
adc
push
mov
repnz
mov
iret
mov
or
js
movsl
mov
mov
pop
fwait
xchg
push
jnp
pushf
stc
pop
sub
stc
rolb
sar
or
sub
mov
mov
mov
std
cmp
xlat
cmp
lods
cli
aas
int
sub
shr
ss
cwtl
fwait
mov
addr16
icebp
mov
dec
outsl
rcl
pop
arpl
dec
cld
pop
cmpsb
xchg
insl
adc
jo
nop
shrl
in
adc
mov
fcomi
sbb
sbb
inc
mov
call
popf
fiadds
mov
jle
int3
roll
lods
leave
mov
enter
aaa
mov
lods
mov
test
roll
out
jp
push
fldt
push
mov
je
scas
arpl
sbb
add
push
mov
lret
pop
fcomi
nop
in
iret
sbb
push
shlb
loopne
rcrl
xchg
xchg
push
shrb
imul
xchg
pushw
out
pop
pop
and
repnz
lcall
jno
aad
or
or
hlt
push
jae
jns
cltd
outsl
add
sub
jge
lods
insb
lods
mov
scas
ret
and
jle
mov
std
repnz
mov
mov
nop
xchg
iret
lock
dec
enter
cwtl
ss
mov
hlt
mov
mov
out
fldenv
das
not
dec
bound
mul
push
xchg
ds
test
bound
movsl
mov
sub
jle
or
vmread
popf
fs
lret
rcrb
mov
and
push
pop
add
dec
out
pop
and
push
loop
adc
lock
mov
mov
xor
repnz
sahf
imul
lret
add
inc
aad
sahf
add
and
test
aam
mov
das
sbb
add
popa
daa
iret
out
inc
sub
in
ret
jo
iret
mov
mov
inc
sub
sarl
lret
push
daa
out
adc
and
bound
pop
sub
or
ljmp
std
and
cwtl
popf
rcrb
sub
and
jbe
lods
lret
and
mov
lds
or
ss
mov
push
lahf
mov
jl
out
cmp
jge
mov
divb
out
xor
int3
popa
fcmovne
push
lcall
adc
xchg
dec
xlat
xchg
inc
aas
call
mov
mov
out
cltd
adc
out
mov
cli
lds
test
mov
cltd
pop
popa
jno
stos
mov
lret
shll
jns
cmp
push
aam
in
jne
addl
leave
mov
jbe
adc
push
rcrl
xchg
mov
xchg
imull
mulb
lds
mov
out
les
add
pop
fistps
and
xor
leave
jo
repz
testl
fisubs
cmp
xchg
sub
int
lods
inc
sub
lret
push
cltd
or
xchg
popf
outsl
cmp
fisubs
fstpl
lahf
outsl
ds
pop
pusha
lcall
call
stc
sub
mov
out
sbb
xchg
xor
enter
pop
mov
cmp
jle
add
add
scas
or
add
popf
sbb
add
out
enter
mov
cmp
addr16
rcrl
dec
cltd
cwtl
add
in
sub
or
or
ret
push
or
pusha
xor
lods
push
xlat
mov
pop
or
push
hlt
cltd
jno
sbb
mov
push
push
mov
cli
or
mov
repz
ficoms
xchg
hlt
fwait
das
or
aam
xchg
in
clc
push
roll
std
cmp
popf
roll
cmp
in
pop
cmp
pop
mov
dec
cld
xchg
aas
xlat
fcomps
test
lds
jg
test
or
gs
aaa
sbb
ss
or
sub
sar
pop
or
jmp
inc
inc
adc
xor
mov
rcrb
xchg
js
mov
inc
inc
mov
fwait
int3
dec
inc
xchg
push
mov
dec
pop
add
loope
hlt
repnz
std
fmuls
jl
inc
lahf
inc
gs
inc
adc
pushf
inc
cld
mov
lret
enter
rcrl
xchg
stc
leave
jmp
scas
cmp
in
cmp
pusha
lea
pop
fldl
push
arpl
jge
inc
out
inc
sub
andb
mov
add
push
fwait
sbb
jnp
push
rcr
lea
enter
jle
mov
loope
fs
fisubs
xor
out
mov
das
push
or
lret
sbb
jno
mov
lds
imul
inc
jl
ficoml
mov
movsl
mov
popa
ljmp
sbb
stc
mov
dec
out
inc
push
push
mov
xor
push
cmc
mov
cs
pop
rol
push
leave
sbbb
fsubrs
xor
jns
std
adc
push
out
ljmp
cwtl
mov
fs
cmpb
aam
fwait
lods
je
mov
push
fcompl
mov
jl
sbb
jmp
cmp
pushl
out
shrb
ljmp
in
fdivrp
fdivs
or
push
rcl
shrl
enter
in
push
out
imul
sub
xor
std
cmpsb
jg
test
jne
sub
mov
movsb
pop
push
jmp
xchg
adc
sub
mov
fcompl
sub
and
and
hlt
std
popl
or
out
rcll
ret
iret
jne
mov
xor
dec
or
lret
scas
cmp
mov
mov
nop
sub
or
nop
mov
push
inc
sub
pop
add
jns
ds
mov
notl
frstor
jbe
ret
lahf
cwtl
adc
movsb
adc
icebp
clc
mov
pop
add
lahf
mov
dec
jb
stos
pop
inc
cltd
pop
xchg
popf
std
jnp
push
xchg
out
in
xor
mov
dec
call
pop
inc
sub
rcrb
push
pop
leave
sub
fs
sahf
mov
lock
and
xchg
test
popa
ret
js
and
push
push
xchg
inc
out
add
js
push
cwtl
dec
mov
mov
xchg
imul
stc
ret
sbb
dec
adc
lods
lds
xchg
ja
stos
rol
sub
lock
mov
icebp
pop
mov
in
imul
rcll
xchg
pusha
cmp
nop
and
fs
inc
loopne
pop
in
xchg
leave
lret
fiaddl
or
xchg
int3
ror
outsl
into
xor
mov
into
jle
addr16
inc
jp
fistpl
jp
ja
fdivr
cmpsb
sub
aas
xchg
inc
xchg
insb
adc
xchg
test
aaa
ret
mov
lret
aaa
mov
nop
or
clc
mov
lods
out
dec
cs
push
sbb
or
testb
push
pop
sbb
iret
sahf
imul
int
mov
aad
push
daa
ja
add
fucomi
cmpsl
arpl
pop
jmp
lret
mov
jmp
push
xchg
mov
lret
test
fistpll
mov
std
je
jae
fsubp
das
loop
fmulp
add
fistpll
mov
pop
cmp
data16
icebp
adc
repz
xorb
cmp
mov
push
cltd
shll
shl
out
jle
leave
mov
adc
fldl
movsb
test
dec
pop
and
in
push
cmp
rclb
push
jge
iret
or
outsl
jbe
rclb
inc
xchg
cmc
aad
pop
mov
pop
add
test
cmp
push
ljmp
adc
push
cmp
xchg
rol
sub
sbb
fists
arpl
inc
sub
fnstsw
adc
dec
xor
pop
in
push
push
jnp
cmp
lods
mov
out
mov
daa
and
pop
mov
pusha
in
jle
ret
icebp
lahf
and
sub
nop
subb
repz
sahf
push
addl
mov
mov
lahf
xor
jo
inc
fmull
mov
sub
mov
push
xor
mov
shl
sarb
outsb
insl
sub
mov
adc
jmp
out
test
jbe
aas
adc
ds
mov
stos
xchg
rcrb
outsb
scas
pop
mov
out
cld
xchg
cmpsl
arpl
sub
jecxz
adc
shl
incb
loop
iret
or
fimull
add
push
fdivl
inc
push
sti
dec
xchg
aam
xchg
sbb
adc
xchg
lahf
dec
pop
stc
inc
mov
cmp
hlt
sub
popf
stc
popf
nop
xchg
sbbl
mov
aas
mov
jnp
daa
aaa
iret
sub
test
shrb
daa
inc
push
xchg
add
dec
push
or
dec
in
jae
outsb
out
xchg
lret
inc
fsubs
inc
test
pop
fnstenv
filds
ljmp
mov
std
andl
sar
xor
and
enter
es
mov
jns
out
pop
fbstp
jecxz
or
das
mov
xchg
jg
ds
mov
pop
jecxz
adc
cmp
call
sub
inc
push
fiadds
cmp
and
sti
popf
mov
add
jecxz
stos
hlt
sub
out
jae
cmp
jmp
cmpsl
jne
xor
jo
push
xchg
xchg
adc
sbb
scas
js
mov
adc
cmpsb
xchg
inc
pop
subps
push
ja
jl
sti
out
sbb
ja
lea
pop
addl
insl
loop
inc
sti
clc
jo
inc
fcoms
ja
in
or
lahf
sbb
imull
jmp
dec
in
flds
cmpsb
add
daa
lods
push
add
stos
shll
mov
orl
jle
sub
push
pop
aas
dec
cmc
fmuls
or
sahf
dec
mov
dec
push
sahf
cwtl
inc
jb
stos
dec
sbb
push
jne
addr16
aas
daa
fwait
dec
into
jmp
ds
rclb
lods
adc
inc
nop
mov
bound
cmp
pop
xor
and
lods
mov
lea
loopne
dec
cs
pop
and
or
mov
js
fistpl
pushf
jmp
sbb
xor
or
dec
cltd
out
lods
mov
fcompl
arpl
xor
enter
mov
es
cmpsb
imul
cmp
mov
push
in
je
mov
mov
insl
rcrb
pusha
arpl
mov
out
out
notb
pop
push
je
pop
jb
cld
shll
gs
bound
jns
cmpsb
ret
popf
xor
mov
cmpsb
int
mov
adc
hlt
imul
mov
dec
daa
movsl
sbb
aam
mov
sti
dec
pop
icebp
call
add
mov
mov
and
push
lret
cwtl
cli
daa
rorb
mov
mov
inc
popa
push
fisubl
pop
cli
inc
jnp
into
sbb
ljmp
xor
push
js
es
add
jno
xchg
adc
xor
jg
pop
dec
push
scas
gs
xorl
daa
sbb
add
lods
inc
dec
add
jl
lds
sub
rorb
out
ffree
lock
mov
outsl
cmpsl
xor
outsl
fmul
scas
mov
sahf
mov
push
push
stos
pop
fnstcw
sub
or
push
and
mov
dec
test
inc
test
adc
gs
call
in
scas
out
out
inc
sti
inc
sti
std
fwait
std
pop
add
lahf
enter
jg
jno
repnz
cs
add
jno
cmp
jbe
std
mov
cmp
lea
fisubrl
call
adc
mov
scas
push
fldt
adc
cli
lods
or
adc
sbb
push
loopne
mov
mull
mov
mov
std
std
repnz
ss
or
fldz
dec
rol
loope
add
flds
ret
cmp
push
dec
orl
mov
mov
jge
lods
test
negl
jns
mov
shl
popa
outsb
and
mov
xchg
cld
inc
mov
jecxz
das
adc
ja
mov
mov
adc
dec
and
in
or
cmp
imul
pop
lock
push
movsl
inc
scas
mov
mov
jp
aam
cmp
jle
call
pop
xor
dec
xor
xchg
outsl
xorb
mov
rcll
lret
sti
roll
mov
dec
popf
xor
fs
dec
std
jnp
in
jl
rclb
dec
mov
into
sub
xchg
mov
cmpsb
xchg
inc
aaa
and
sahf
pushf
and
push
idivl
mov
or
or
jbe
sub
push
pop
add
jnp
push
lret
sub
aad
test
push
mov
fildl
adc
push
out
lcall
xchg
lods
in
adc
push
insl
lahf
adc
mov
fimull
in
lret
popa
push
adc
fwait
fwait
mov
addr16
and
fimuls
in
lahf
xchg
push
xorb
fbstp
shr
push
popf
lret
subl
ret
xchg
mov
pushf
cmovge
movsb
inc
test
fwait
shll
cmp
dec
dec
hlt
stc
pop
ds
call
shrl
xchg
into
jl
cmp
push
lret
fisubl
add
xchg
aaa
mov
jge
adc
xchg
sbb
jno
es
movsb
xchg
pushf
sbb
aad
dec
xchg
add
dec
xor
adc
lret
dec
repnz
and
or
xchg
in
fs
add
jbe
mov
imul
out
inc
sub
ljmp
adc
cltd
arpl
add
clc
jnp
jp
sbb
lods
movsb
dec
loope
xchg
ja
mov
adc
icebp
sbb
mov
jecxz
sub
adc
mov
jbe
pop
push
out
leave
dec
dec
fnsave
pushl
inc
xchg
bound
repz
xor
push
add
adcl
out
fbstp
lock
aaa
sub
mov
dec
and
inc
mov
fmuls
mov
fmull
push
test
leave
mov
jl
aaa
xlat
dec
and
sub
mov
adc
mov
push
mov
cmp
inc
adc
aad
pop
sub
lret
push
xor
cli
mov
subl
push
lods
mov
xchg
cmpsb
shll
loope
mov
push
mov
inc
mov
lea
sarl
fmuls
adc
stc
mov
sti
dec
test
inc
push
fcmovb
es
or
movsl
fsubl
cmpsb
push
mov
ret
dec
arpl
push
iret
mull
xor
mov
cmpsl
and
inc
lods
lds
jne
setbe
dec
hlt
push
xchg
cmp
fisubrs
sub
outsl
stos
les
shl
fmul
sbb
jb
inc
ss
sub
mov
test
andb
imul
insl
mov
xor
push
adc
ror
orb
pop
mov
jnp
mov
inc
adc
sbb
mov
mov
jns
enter
fsubrl
int
jo
nop
mov
add
sub
dec
inc
stos
xor
ret
sub
orb
ret
or
insb
mov
sbb
loop
mul
xchg
jp
lret
lods
push
mov
ljmp
sbb
mov
cmpsb
xchg
jbe
sahf
cmc
or
xchg
fwait
ds
movsb
icebp
cmp
push
lahf
lahf
lock
inc
fwait
les
push
jns
icebp
pop
mov
sub
push
fmuls
jne
rorb
mov
pop
jp
fdiv
jmp
push
stc
iret
adc
bound
jle
fucomp
popa
lods
mov
xchg
sub
jmp
lret
shr
enter
aaa
lea
pop
les
inc
xchg
mov
leave
xor
mov
sub
data16
mov
push
pusha
push
ds
in
movsb
mov
sbb
xor
mov
jmp
sbb
xchg
stos
dec
or
dec
outsb
jne
ror
push
pop
or
es
mov
out
and
subl
push
jnp
fstl
dec
and
xchg
xor
inc
and
xchg
and
dec
dec
and
scas
adc
pop
jecxz
lcall
or
mov
ficoml
xchg
fwait
sbb
stc
inc
and
dec
xchg
pop
dec
repnz
mov
sub
es
lcall
pop
data16
lea
aam
adc
repnz
fisttps
mov
mov
add
stc
fisubl
fdiv
push
mov
add
pusha
cmp
repnz
in
popf
out
outsb
fs
in
inc
in
sub
loopne
cmp
cli
lods
inc
cmc
outsb
in
cmp
insb
cmp
cmp
repnz
sbb
mov
adc
mov
mov
icebp
jno
push
jmp
cmp
mov
sarl
icebp
or
mov
pushf
ss
lods
push
pop
bnd
jp
stos
loopne
rep
insb
pusha
cmpl
and
iret
jae
cmp
adc
push
lcall
xchg
aas
mov
js
test
addr16
in
pop
xchg
jecxz
inc
mov
jle
xor
in
push
fstps
xlat
test
mov
mov
sub
in
jecxz
cmp
and
in
sarl
dec
sbb
dec
out
cmp
push
addl
mov
sub
lahf
pop
arpl
add
or
ljmp
lds
pop
mov
scas
fisttps
pushf
and
push
out
je
out
ja
outsb
pop
btr
or
mov
mov
rol
mov
mov
rclb
clc
popf
mov
fistpll
lahf
or
das
ljmp
sti
std
dec
push
or
mov
jge
push
bound
int
rorl
test
call
sub
inc
nop
aaa
adc
and
pusha
dec
or
add
int
sub
notl
mov
std
cmp
xchg
push
fadds
and
rcrb
xchg
xor
repz
pop
insl
leave
in
fwait
dec
rorl
imul
fidivrl
jns
push
in
or
fwait
push
sbb
pop
sbb
seta
aad
outsl
bound
cmp
mov
and
or
js
jo
outsl
ljmp
dec
inc
cwtl
cli
adc
mov
pop
test
je
or
loopne
adc
cs
xchg
jmp
sub
lcall
lret
loopne
les
mov
jp
inc
sbb
cmp
push
pop
mov
or
xor
push
frstor
xchg
data16
int
das
hlt
jne
cltd
lea
xor
call
sbb
pushf
sbb
lcall
inc
xor
repz
in
and
in
in
jnp,pt
movsb
popf
repnz
jno
add
sbb
lock
mov
adcl
lahf
xchg
les
mov
pop
xchg
xor
mov
fmuls
mov
jmp
out
cmpl
or
das
lret
lcall
push
xor
add
js
or
mov
cmpsb
jnp
sahf
outsl
add
sbb
inc
lahf
addb
push
sahf
addl
sub
test
gs
cmp
movsb
popa
jecxz
sbb
push
fcompl
enter
andl
or
test
sbb
mov
pop
das
les
sub
data16
jnp
mov
dec
std
push
insl
mov
cs
lcall
out
sub
cwtl
cmp
orl
inc
dec
adc
dec
push
mov
adc
shlb
sub
cmp
aad
pop
lds
and
pop
and
repnz
cmp
out
lds
push
inc
mov
loope
out
clc
pop
jg
mov
mov
mov
xor
neg
inc
stc
xor
subl
mov
imul
scas
shll
daa
lahf
les
sub
adc
add
shll
mov
xor
repz
mov
dec
loope
cmp
arpl
mov
aaa
outsb
dec
loop
xchg
push
xorl
or
inc
repz
jle
shlb
pushf
lret
fadd
test
jae
mov
mov
fstps
push
fdivr
adc
push
sub
dec
adc
jbe
jnp
fiaddl
int3
jne
sbb
js
jbe
push
pusha
es
pop
dec
sbb
mov
and
int
mov
ret
dec
push
arpl
iret
jne
mov
pop
popf
adc
pop
lock
pop
sub
sub
push
ret
mov
call
jle
mov
pop
push
inc
lock
fldl
push
mov
je
cmc
mov
jno
push
dec
fidivl
mov
shlb
lahf
lods
clc
or
and
mov
and
sti
adc
in
push
add
mov
dec
sbb
xorw
out
add
movb
mov
sbb
or
into
data16
add
fnstenv
or
push
jmp
or
adc
lret
pop
lock
sub
ret
jb
xor
xchg
and
test
repz
mov
push
adc
loope
mov
adc
mov
jae
inc
loop
sbb
and
bound
ss
outsl
and
xchg
xor
je
jmp
jae
pusha
push
cli
pop
inc
xchg
push
out
mov
inc
dec
out
mov
inc
pop
les
nop
push
nop
idivl
test
sbb
inc
xor
push
int3
data16
mov
repnz
sbbb
xchg
lcall
lds
cmp
dec
mov
and
dec
mov
and
sub
xchg
push
or
gs
rol
and
fdivr
shll
cmp
mov
cmc
mov
dec
push
xor
mov
lcall
out
sahf
inc
sbb
xor
repz
xchg
pushf
dec
subb
cmpsl
roll
push
icebp
cmpsb
test
lea
sbb
inc
pop
fs
mov
inc
mov
lock
pop
sahf
adc
lahf
jmp
fsubl
inc
test
std
jne
pop
fs
push
xor
sub
adc
enter
push
int3
inc
andb
ja
aam
jecxz
stos
mov
bound
push
push
lahf
jle
push
dec
shll
notb
in
ljmp
fs
in
mov
mov
dec
lcall
arpl
mov
cwtl
or
fbld
mov
mull
and
fistl
dec
ja
in
dec
insl
fnstsw
shll
push
nop
shlb
aaa
popf
ret
and
mov
pop
push
cs
movsl
jge
dec
movl
inc
jge
test
and
filds
xor
jg
jns
xor
mov
push
xchg
dec
cmp
pop
push
xchg
mov
cltd
mov
and
dec
xlat
or
xor
test
pop
shrb
jns
shlb
or
mov
push
movsb
inc
pop
test
test
push
repz
fidivrl
loop
aam
ret
sbb
and
mov
cmpsb
popa
lret
cli
xor
pop
jne
mov
cmp
stos
test
rcl
cmc
pop
xor
lret
xchg
add
dec
add
jae
mov
xor
outsb
jmp
mov
icebp
sbb
test
scas
mov
cmp
xchg
shl
jmp
sub
insb
mov
mov
js
and
pushf
pop
dec
aam
cmp
push
jge
cmpsl
cld
push
rcrb
ret
divl
pop
mov
imul
stos
in
popf
inc
test
fistps
idivl
sahf
imul
mov
pop
movsl
pop
cld
pushf
fwait
dec
push
sbb
into
and
sub
xchg
push
mov
pop
cld
clc
xchg
pushf
lcall
int
add
or
and
hlt
pop
testb
jae
cs
hlt
popf
loopne
pop
xchg
sbb
pusha
insb
icebp
push
stc
aas
and
sbb
movsl
push
negl
sbb
or
cmpl
adc
bound
jg
or
or
lret
or
push
mov
pushf
mov
rcll
inc
sbb
pop
or
xor
xchg
sub
pop
push
cmp
mov
add
sbb
movsl
push
pushf
dec
nop
lods
mov
test
pusha
push
cmp
cs
jp
imul
enter
pop
ds
add
int
mov
jo
mov
sub
xor
dec
cmc
imul
scas
jmp
jl
div
pushf
dec
hlt
loope
bound
clc
jbe
sub
sub
add
jns
xchg
out
dec
aam
lret
fwait
mov
push
sbb
push
rolb
inc
stos
and
sub
inc
fbstp
push
pop
dec
dec
push
and
sbb
inc
dec
loope
call
dec
outsb
cmc
mov
inc
mov
push
lret
cmp
push
gs
ficompl
push
repnz
mov
cmp
cli
adc
mov
sbb
xor
mov
ret
pop
fs
sbb
inc
in
lret
and
dec
movsb
sub
popa
pop
cmc
mov
or
jmp
popf
xor
popa
inc
lods
inc
mov
and
inc
mov
mov
mov
addr16
xchg
or
xchg
icebp
sub
xor
sti
ss
push
mov
or
mov
sbb
and
push
test
loop
adc
out
sub
inc
aaa
mov
pop
shll
fnstenv
mov
fisttps
cld
sub
loopne
pusha
adc
les
mov
js
test
mov
sub
and
inc
jb
dec
adc
leave
sbb
push
xchg
and
xor
loopne
test
jo
cld
push
mov
xchg
pop
xchg
xchg
loop
icebp
inc
sbbb
les
xlat
inc
xchg
aas
add
dec
adc
lea
xchg
jns
or
inc
mov
mov
int3
jns
xor
stos
cmpl
sub
dec
fcoms
sub
mov
lahf
arpl
mov
outsb
loop
cmp
mov
and
scas
cld
xchg
dec
cwtl
int3
jno
inc
shl
pusha
jns
lods
pop
jge
iret
mov
xchg
repnz
scas
ret
pop
cs
stos
add
xor
dec
add
test
mov
and
xchg
loop
jnp
and
or
xchg
push
je
push
pop
enter
fildl
lods
fimuls
insl
inc
gs
mov
add
mov
into
repz
js
add
sahf
aam
cmpl
or
cli
loope
dec
push
mov
fnstenv
lret
jne,pt
xor
lea
je
jmp
aas
int
stos
xor
bound
into
cmc
ret
pop
inc
shlb
jns
and
scas
jno
cmp
jle
cmp
mov
lret
std
into
jmp
jno
jbe
in
repnz
and
cld
aas
into
pop
fbld
imul
in
and
adcb
popf
mov
lahf
ret
sysexit
shll
idivl
sbb
and
aad
jbe
stos
add
dec
fidivrl
in
mov
inc
dec
mov
adc
cld
mov
jge
mulb
imul
es
icebp
or
das
jb
test
or
js
sub
dec
sub
mov
pusha
imul
push
pop
push
aaa
lods
scas
mov
adc
movsb
mov
lock
into
jb
movsb
mov
lea
cmpsl
push
mov
adc
ss
icebp
sbb
sbb
inc
mov
jmp
cmp
push
sub
sbb
test
or
mov
cmpsl
mov
and
call
dec
and
lock
and
loop
aaa
jno
push
adc
jle
mov
jbe
test
daa
jns
out
inc
push
in
cmp
mov
sahf
xor
pop
outsb
ret
mov
sbb
rcr
jne
popa
and
jo
add
mov
test
xchg
inc
sub
mov
roll
int3
jns
adc
out
sti
loopne
mov
fwait
repnz
stos
xchg
and
mov
dec
ffreep
jbe
sarl
sbb
mov
sbb
sub
mov
adc
mov
xlat
pop
mov
mov
add
mov
push
xchg
inc
mov
jmp
ljmp
sub
es
cltd
dec
aad
xor
cli
xchg
insl
xchg
fwait
in
push
mov
add
orb
sti
sbb
fnstsw
rol
jmp
inc
shrl
lods
push
movsl
pop
adc
inc
sbb
pop
jns
cmc
inc
lahf
cs
cmp
lret
xchg
cmp
out
push
pop
sbb
mov
icebp
mov
pop
lock
test
ja
pop
imul
jnp
in
mov
mov
call
cmp
mov
notb
test
cmpsl
leave
add
mov
mov
sub
shrl
mov
loope
icebp
loope
fiaddl
push
clc
or
in
dec
adc
movsl
mov
test
cmpsb
mov
mov
push
pop
es
cmp
cmpsb
fwait
sti
jl
in
addr16
pop
pusha
loop
xor
xchg
adc
cmp
xchg
ret
push
les
mov
fcomp
ficomps
mov
pop
xlat
lods
out
or
fcmove
ds
sti
lcall
jg
imul
lock
mov
in
jb
and
int
cwtl
adc
sub
aaa
popf
add
cltd
mov
in
in
test
xchg
xor
inc
subl
push
mulb
fwait
ja
ss
ror
testl
loope
flds
jmp
aaa
mov
push
inc
pop
pop
fiadds
sbb
adc
sbb
xchg
les
dec
push
adc
es
dec
adc
mov
sbb
and
insb
xor
pusha
jae
sub
jg
ficoml
test
dec
pusha
xchg
in
mov
pop
jp
imul
sbb
push
gs
lret
sbb
pusha
mov
dec
xchg
jo
and
cwtl
test
xchg
xor
ret
ja
cmp
je
inc
cmc
sub
pop
jns
dec
or
mov
adc
jmp
xor
adcl
push
cmpsb
inc
popf
das
mov
add
ss
adc
das
jae
xchg
sub
shl
add
jl
stc
ljmp
sbb
movsl
ljmp
mov
roll
push
sti
adc
push
sub
inc
xchg
imul
inc
cmp
imul
push
call
es
idivl
sub
js
shlb
push
sub
mov
repnz
nop
xor
adc
les
mov
imul
mov
insl
push
pop
inc
sbb
cmp
xor
cmpl
adc
jb
movsl
lret
test
in
pop
clc
mov
xchg
cmpsb
insl
cmp
into
add
adc
popa
xchg
inc
mov
push
lds
pop
jmp
and
cmp
lret
std
or
push
dec
ss
pop
xchg
divl
loope
in
cmpsl
enter
aas
orb
and
sarb
adc
inc
lcall
jmp
cmp
imul
lret
mov
mov
test
sub
lcall
dec
icebp
jae
sub
mov
test
mov
fadds
mov
or
aad
cmp
popa
stos
cmc
gs
dec
and
pop
jp
push
nop
sarl
xchg
stc
adc
ret
or
loopne
add
lahf
adc
sbb
push
stos
push
or
mov
and
icebp
jp
subl
pop
cmpsl
mov
aad
and
fstps
clc
popf
mov
sti
pop
jbe
inc
enter
lds
lock
or
adc
mov
sub
adcl
sub
leave
test
aad
xchg
sbb
add
dec
insb
push
fcomi
pop
orb
push
sahf
xor
ficomps
rcrl
mull
push
and
sbbl
mov
dec
imul
pop
ja
aas
xorl
mov
popf
into
int
out
int3
sbb
and
jp
pop
imul
jl,pt
add
adc
testl
lret
fmuls
into
add
or
ret
pop
stc
js
mov
iret
jnp
orl
lret
clc
adcb
mov
dec
dec
mov
inc
xor
add
ret
push
movsb
pop
ret
or
dec
out
mov
cmpsl
sahf
shll
sub
repz
les
pop
inc
mov
xchg
dec
cmp
push
or
mov
fnstenv
in
dec
jbe
fwait
sbb
dec
push
in
mov
fbstp
sbb
lds
jecxz
shll
mov
loope
cltd
gs
adc
pop
cwtl
push
xchg
fldl
in
out
sbb
jmp
jb
shrl
and
dec
sub
stc
xchg
leave
add
add
pop
sub
mov
nop
stos
or
push
fcomps
jle
jle
add
mov
cli
cmp
aam
and
mov
push
lahf
pop
push
in
pusha
add
and
jnp
aam
out
out
xchg
inc
xchg
in
fidivrl
scas
ljmp
in
frstor
sbb
rcll
xchg
mov
dec
int3
mov
lds
out
ja
out
xchg
mov
mov
sbb
jmp
cmp
movsl
mov
in
adc
popf
mov
push
push
sahf
mov
sbb
mov
sub
imul
rorb
mov
sub
iret
sbb
cmpsl
cmp
shl
idivb
mov
or
dec
cmp
orb
add
or
cmpsl
push
shll
sub
adc
shrb
enter
adc
mov
faddl
jecxz
push
out
int
ds
push
test
shlb
pop
aad
adc
fwait
out
loop
sub
xchg
jl
mov
add
ret
ficompl
repz
push
jb
scas
pop
cltd
fs
andb
mov
lods
lret
out
fistl
xlat
out
sub
fs
cmpsl
inc
mov
into
and
loop,pn
xchg
hlt
mov
imul
mov
stos
icebp
enter
push
insb
cmpsb
mov
popf
aaa
inc
cwtl
mov
push
push
imul
mov
mov
ja
out
shrb
mov
out
add
fistpll
notl
cli
sbbb
les
mov
int3
popf
mov
pop
mov
mov
jno
pusha
dec
mov
sub
xchg
add
xchg
xor
stos
push
xchg
dec
add
push
ret
aad
push
das
push
dec
xchg
mov
mov
cmp
push
rorl
dec
jg
gs
jp
mov
es
iret
movsb
xlat
movb
cwtl
nop
cmp
xorl
and
scas
out
or
cmc
adc
pop
lcall
cwtl
mov
pop
aam
fadds
push
fnstcw
pop
sub
fldt
sub
dec
xchg
adc
ljmp
lret
dec
or
add
inc
xor
adc
in
dec
push
mov
out
adc
cmp
mov
mov
test
lcall
jmp
loop
inc
mov
scas
in
aam
push
in
ds
jae
hlt
mov
inc
xor
aas
test
ss
lret
cmpsb
mov
int
dec
cmp
popa
mov
das
cvtpi2ps
shlb
fcompl
aad
push
cmp
or
xchg
ja
mov
shll
sbb
fst
out
jp
sbb
mov
aam
push
mov
mov
out
int
jne
ds
push
adc
into
lret
dec
pop
sub
xchg
pop
out
jp
jae
in
jp
dec
xchg
sub
jg
pushf
loop
and
mov
ja
repnz
out
add
mov
dec
loopne
xor
repz
jnp
xlat
push
orl
scas
jl
jb
rcrl
jo
xor
or
xchg
into
push
rorb
inc
dec
aam
ret
imul
shlb
aad
push
or
cs
scas
jne
and
sub
adc
xchg
scas
aam
test
pushf
cmpsb
bound
imul
cmpsl
jne
jae
out
mov
js
pop
push
inc
mov
jns
and
aaa
lock
mov
add
add
xor
nop
adc
scas
jno
icebp
cltd
iret
movsl
ret
rorb
mov
mov
mov
sub
and
push
das
in
sub
mov
mov
rorl
nop
mov
pop
push
adc
out
mov
sbb
mov
sbbl
shl
jmp
call
jge
adc
or
mov
call
mov
and
dec
mov
sub
xchg
xchg
movsb
push
mov
jns
outsb
mov
fstp
sub
and
ret
sub
inc
inc
out
lds
adc
fadd
lods
mov
jmp
sub
and
push
lods
out
pop
das
addl
lods
fnsave
jbe
push
pop
add
or
cmp
cmp
jmp
sbb
inc
ja
and
pop
mov
push
dec
mov
pop
mov
mov
push
popf
mov
adc
fs
js
outsb
adc
jb
fucomp
mov
pop
je
aas
jae
mov
shl
adc
mov
xor
mov
dec
dec
sub
jle
inc
es
pop
out
leave
je
pop
push
sbb
inc
idivl
sahf
and
dec
jne
icebp
sbb
mov
xchg
jb
icebp
adc
pop
sbb
lahf
mov
jp
ljmp
scas
xchg
sbb
xchg
out
xorb
adc
cmp
fildl
or
cmp
test
xchg
mov
sti
icebp
iret
and
mov
sbbb
and
adc
imul
cs
jp
pop
ror
fidivrl
dec
sub
adcb
adc
sub
xor
icebp
aam
jb
rol
cwtl
dec
push
inc
addr16
iret
outsb
push
push
add
or
subb
rclb
in
loope
pop
das
idivl
sbb
inc
and
pop
das
add
mov
inc
pop
repz
mov
stos
and
mov
jmp
outsb
mov
push
jns
aam
test
cmpsl
and
cltd
jne
leave
push
sbb
push
lret
adc
push
ret
pop
sbb
aad
sbb
test
add
cmp
mov
sbb
dec
test
je
int
cmpl
cmp
fstps
fadds
scas
xor
mov
inc
test
cmp
adc
addb
fmul
pop
je
mov
sbb
fs
sbb
xchg
arpl
cmc
mov
fildll
add
dec
stos
sahf
mov
pop
arpl
mov
das
shrb
push
pop
cmp
mov
ss
pop
ficoml
stc
xor
mov
cmpsb
ljmp
adc
push
and
add
mov
in
push
sub
cld
stc
out
xlat
add
dec
aam
mov
ljmp
std
inc
or
jo
sahf
mov
faddl
cmpsb
fxch
pop
jmp
add
dec
in
test
mov
jp
cmp
xchg
shlb
pusha
jo
adc
mov
xor
inc
rclb
xorl
and
mov
les
inc
push
xchg
pop
bound
xor
mov
sbb
sbb
jno
cmc
daa
pop
clc
push
insl
dec
lock
arpl
dec
push
aad
inc
dec
xchg
mov
or
jns
pop
dec
in
fucom
or
mov
inc
and
mul
mov
cwtl
xor
push
int
das
shrl
xchg
mov
add
inc
cvtpi2ps
push
jae
shl
sbb
inc
mov
into
push
xchg
sub
lods
fdivs
mov
pop
xor
mov
and
insl
cwtl
pop
mov
inc
mov
and
testl
aam
ret
loopne
pop
aam
addb
jns
mov
imul
sub
xchg
insl
and
jg
pop
adc
jno
lret
add
mov
leave
push
lds
cmpsl
out
lea
sub
or
testb
sub
mov
cmp
rclb
add
out
out
aaa
xor
ret
mov
pop
stc
stos
cmp
or
adc
hlt
cmp
and
imul
adc
pop
fisttpl
adc
rcrl
xor
sbb
xchg
pop
loope
xor
mov
adc
dec
js
out
and
push
std
insl
and
into
pop
inc
cmp
imul
fcmovb
fs
xor
int3
fnstcw
add
sub
call
sub
xor
daa
fadds
mov
jmp
in
push
loopne
jl
sbb
cs
imul
xor
insb
add
cs
push
lods
rcrl
ss
pop
push
enter
negb
je
mov
push
push
in
push
test
sub
adc
and
pop
in
popa
adc
and
mov
xor
add
fsubl
test
imul
pop
inc
cli
negl
pop
jae
mov
loope
mov
or
or
repnz
loopne
adc
push
push
xchg
xor
movsb
sub
int3
inc
pop
mov
nop
and
inc
or
xchg
clc
out
jg,pt
xchg
push
test
icebp
or
and
arpl
fnstenv
cmp
add
inc
xchg
push
sub
lret
push
lcall
push
movsb
jne
cmp
mov
pushf
je
ficompl
fs
mov
jo
add
add
mov
mov
movsb
stos
movsl
xchg
je
or
dec
xchg
adc
out
sub
mov
and
enter
push
or
dec
mov
fisttpll
push
cmpsl
into
jl
pop
orl
fimuls
not
push
or
imul
je
in
or
cmpsb
hlt
jne
jmp
jae
negl
sbb
ljmp
enter
adc
cld
add
or
adc
lods
dec
xor
repnz
mov
inc
push
cwtl
jp
insb
in
test
pop
pushf
aad
hlt
int
out
pusha
loope
shlb
or
idivl
in
mov
jb
fdiv
gs
jecxz
xor
xlat
jle
insl
rcr
cwtl
inc
icebp
je
aad
adc
outsb
pop
data16
ficoml
pop
pop
ss
xchg
mov
subl
cmc
insb
pop
xrelease
out
xchg
stos
jo
fildl
push
test
dec
jp
ljmp
mov
ss
aad
test
mov
push
cmp
dec
sbb
aaa
movsb
xor
std
ret
jnp
lods
push
xchg
mov
mov
xor
fcomp
xor
scas
pusha
cmp
fisttps
into
stos
insl
push
dec
aam
aad
jbe
sbb
mov
cmp
jno
mov
and
xchg
xor
mov
jg
int3
scas
enter
into
cmp
or
xorl
cmp
pop
stc
pop
mov
cld
std
dec
pop
enter
mov
add
sbb
sbb
int
sub
or
js
aas
fwait
int3
cmp
jne
lods
xchg
jb
popa
adc
add
pop
lahf
push
lods
shrl
call
cmp
dec
xlat
mov
loop
jnp
into
lcall
jle
and
clc
add
or
ds
xor
pop
xchg
inc
sbb
cmpsb
pop
adc
xor
dec
out
shll
hlt
repnz
mov
sbb
lea
ljmp
pop
fsubs
mov
mov
or
adc
sub
adc
add
xchg
adc
addr16
sbb
dec
icebp
jb
mov
jne
scas
loop
cwtl
je
xchg
insb
andb
jno
outsb
ret
mov
sub
xchg
or
fs
fimuls
in
sbb
mov
xchg
in
clc
mov
in
sbb
loopne
cmp
add
bound
jl
fldenv
mov
out
adc
sbb
loope
jae
mov
outsl
adc
into
jmp
mov
jg
mov
adc
inc
dec
xlat
popa
aad
ds
push
and
std
or
mov
xchg
pop
mov
jns
inc
mov
imul
cltd
sub
jno
fisubrs
ret
jbe
or
in
nop
fwait
inc
add
loopne
repnz
lret
jae
rcrl
flds
add
add
push
lcall
xchg
lea
clc
scas
dec
lock
sbb
lret
mov
dec
es
xor
cwtl
addr16
pop
mov
lcall
rep
daa
dec
and
push
in
cmc
jns
xlat
xchg
jge
fs
xor
and
mov
into
cli
xchg
push
pop
adc
lock
adc
shll
mov
rcrl
into
addr16
imul
stc
xchg
pop
cmp
jnp
pushf
add
lods
xor
cmpsl
dec
fidivrs
mov
sub
adc
loope
lret
ljmp
jg
cmpsl
sbb
xor
icebp
es
out
xor
sti
std
push
mov
icebp
xor
test
pop
fisttpl
shll
shll
dec
ror
mov
jmp
xchg
test
xchg
xchg
test
push
mov
jmp
jo
loopne
mov
in
xor
insl
jnp
sub
mov
addr16
dec
xor
outsl
inc
and
mov
into
cmp
pop
lods
cmp
mov
dec
les
jecxz
cmp
mov
ret
aad
fimuls
xchg
mov
and
jg
xchg
icebp
inc
pop
hlt
cmp
jno
movsl
cmp
popa
dec
lahf
mov
and
fcoml
sti
jmp
jbe
lahf
xchg
in
add
lock
add
push
dec
xchg
test
pop
fcomip
add
push
insb
ret
add
pop
sub
push
ljmp
mov
add
dec
mov
inc
or
or
mov
push
aam
faddp
mov
mov
mov
add
gs
in
mov
push
jnp
test
hlt
andl
xor
scas
mov
insl
cmp
pusha
mov
gs
sbb
ret
pop
je
sahf
push
addb
mov
pop
mov
inc
lods
cld
add
cs
push
sub
insl
into
rolb
int
lret
jno
pop
out
adc
pushf
in
adc
lds
rep
add
xor
ss
xor
or
fiadds
test
and
decl
fiadds
mov
lock
push
int
lahf
push
inc
fdivr
inc
jp
outsl
sbb
icebp
ljmp
daa
insb
dec
imul
add
lahf
ja
repnz
xor
movsb
loop
pop
sub
xchg
add
sbb
rcr
mov
push
or
cld
jmp
xchg
pop
sub
mov
sbb
mov
fsts
push
dec
adc
dec
cltd
hlt
cs
dec
push
stos
push
loopne
push
dec
fildl
lods
sub
out
lea
mov
add
cmp
jp
in
push
push
sbb
repnz
scas
pop
jnp
repz
fstl
shlb
xchg
cltd
push
cmp
sbb
jl
hlt
mov
pop
mov
xchg
lods
add
or
popa
pushf
jne
and
adc
xor
int
hlt
add
cmpsl
sbb
mov
sub
sbb
mov
icebp
ss
inc
push
fmuls
add
in
mov
dec
insb
lods
lret
lret
dec
push
mov
or
fnstsw
cwtl
pop
repz
pop
sub
leave
subl
sti
sbb
popa
adcl
add
sbb
mov
xchg
lea
clc
mov
jnp
lahf
cmp
test
mov
push
jno
jge
test
stos
cmp
pop
hlt
jmp
mov
sbb
clc
cmp
dec
pusha
imul
int
jae
int3
outsb
hlt
test
dec
imul
dec
adc
or
cmpsl
cmp
mov
push
lret
jle
mov
cmp
bound
mov
leave
pop
add
icebp
out
mov
in
repnz
fsubrs
fwait
jge
inc
gs
pop
jmp
jne
inc
cmp
fmull
inc
mov
jo
sub
adc
mov
fsub
les
inc
cmc
adc
popa
sub
imul
test
mov
push
jmp
dec
in
inc
jl
in
jne
dec
aas
pop
and
add
mov
adc
test
jge
test
xlat
sub
aad
fldt
cli
cmc
daa
mov
jg
sub
mov
cmpsl
fdivrs
cmp
loop
inc
call
pop
xchg
cli
stc
mov
xor
cwtl
xor
inc
mov
jno
adc
mov
push
jp
pop
mov
cs
not
or
lcall
test
loopne
fwait
repnz
nop
mov
das
mov
mov
lock
cld
call
aam
jmp
xchg
into
xchg
push
dec
hlt
scas
inc
dec
inc
fucom
pop
int3
cli
or
into
push
inc
mov
lahf
push
mov
pop
sub
push
or
imul
sbb
mov
xor
xchg
js
movsb
ds
ja
iret
mov
faddl
sbb
and
insb
repz
cmova
push
hlt
xor
xlat
test
mov
push
mov
pop
sbb
in
test
lahf
into
in
or
push
sbb
in
mov
lcall
ss
inc
test
jo
std
dec
xor
and
mov
shll
mov
sbb
movsb
add
insb
lods
fdivrs
push
sub
iret
mov
pushf
and
push
push
loope
or
sub
outsb
outsb
add
or
call
mov
adc
stc
cmp
mov
pushf
stos
jno
test
lods
or
or
inc
mov
popf
push
sub
mov
in
gs
sub
mov
jne
insl
cmc
sub
mov
cmpsl
jo
sub
neg
pop
push
jae
mov
cwtl
rorl
adc
loope
add
pusha
adc
cmp
dec
and
or
push
pusha
repnz
cmp
lret
movsb
sub
sbb
cmp
sahf
jno
inc
cmpsb
or
sbb
sub
jl
push
lcall
pushf
inc
pop
iret
push
pushf
or
xchg
cmp
sub
outsb
xchg
or
pop
adc
jmp
cli
shll
sub
fcoml
addr16
ss
jno
mov
pop
out
aaa
ret
sbb
cmp
stc
xor
xchg
push
dec
mov
movsl
inc
xor
sub
pop
add
add
pop
inc
roll
adc
or
mov
sub
add
sub
cli
lock
iret
push
or
scas
pop
das
mov
jns
cmp
or
adc
pop
xchg
std
jp
scas
imul
in
arpl
out
jbe
mov
test
xchg
ja
cmp
add
popf
int
inc
shlb
fimull
cli
jne
shll
sar
aas
sub
adc
sub
test
xlat
adc
sar
dec
int3
insl
rolb
fcomps
push
jns
push
push
leave
push
push
mov
pop
jmp
aaa
pop
sbb
xor
push
xchg
cmpsb
outsl
jbe
lods
push
push
fs
dec
cwtl
mov
pop
cmpsl
jbe
test
sbb
inc
cmpsl
pop
roll
jns
xlat
add
ret
xor
rcll
das
cmp
mov
lea
aas
lcall
mov
mov
fstpt
push
lock
je
mov
data16
mov
xchg
push
fimuls
mov
add
mov
or
mov
jge
adc
push
add
aam
data16
dec
mov
nop
les
cmp
scas
cmp
fs
aas
inc
jne
xor
pop
cwtl
imul
sub
xchg
ja
shlb
cs
loopne
out
rcl
sub
pop
scas
add
push
aaa
or
and
ja
popa
fisubl
jae
sbb
push
nop
aam
cltd
clc
lods
mov
in
mov
xor
into
xchg
repz
dec
mov
xchg
pop
arpl
mov
sub
rcrl
into
pop
sti
jge
enter
pop
and
sti
das
stos
add
jg
imul
push
dec
test
mov
sub
jns
bound
lahf
push
pop
mov
xchg
jp
xor
and
fwait
int
int
push
ror
aam
cltd
push
sub
pop
fwait
loopne
dec
dec
mov
sbb
or
inc
insb
and
sub
mulb
call
ja
lret
lahf
mov
push
pop
cmp
dec
lret
push
test
es
pop
or
mov
pop
xlat
rorl
popf
cmp
jo
outsl
push
lods
nop
scas
daa
mov
ds
jmp
inc
and
rclb
dec
pushf
pusha
cld
sbb
ljmp
jns
xlat
sub
jle
xchg
test
mov
jo
add
push
xor
pop
xor
sub
imul
mov
jb,pt
cmpsb
bound
xor
ja
int3
addl
mov
test
xchg
lea
dec
scas
push
pop
jno
sbb
mov
fisubl
hlt
mov
adc
insl
add
rcr
es
testb
push
icebp
pop
das
repz
jmp
inc
xchg
mov
xlat
popa
pushf
mov
and
pop
mov
sbb
mov
std
movsl
in
shl
mov
in
scas
jae
sti
int
xorb
add
mov
lahf
jmp
mov
cmp
mov
test
push
mov
pop
fs
pop
rcll
mov
nop
fs
add
jg
cmp
dec
fsub
sbb
fs
mov
cwtl
rolb
adc
loope
outsl
cli
sbb
sahf
call
das
mov
lea
mov
clc
in
sti
call
cltd
aaa
inc
lds
out
notb
cmp
mov
fcmove
xor
mov
pop
inc
rcll
or
aad
cmpsl
sbb
or
in
test
sbb
jns
jns
xchg
sub
imul
scas
adc
shlb
das
notl
ret
jne
push
mov
loopne
xchg
adc
fmul
inc
mov
dec
and
movsl
pop
addb
or
in
stc
jmp
pop
ficomps
mov
push
fidivrl
jmp
dec
in
popf
testl
push
sbb
sub
pusha
push
push
call
inc
pop
imul
fs
js
adc
add
adc
jg
ja
add
xchg
int3
mov
pop
das
adc
movsb
loop
popa
and
jle
mov
in
mov
sub
dec
popa
cmp
adc
popf
icebp
lcall
push
negl
scas
dec
pop
lds
fnstcw
adc
ds
sahf
pusha
out
aas
jb
jmp
adc
movsb
stos
sbb
imul
loopne
push
add
fstl
or
xor
data16
aad
gs
or
mov
sub
sarb
out
jb
adc
xchg
pop
test
test
mov
ja
mov
mov
leave
int
jnp
push
mov
call
cmp
sbb
sub
sbb
push
sub
jnp
mov
jns
mov
xlat
sub
push
lret
or
pop
xchg
xlat
push
into
jno
jmp
in
push
jg
mov
shl
enter
in
outsb
pop
push
loopne
stos
add
jge
sub
mov
fistpl
pop
mov
sbb
xchg
lods
imul
mov
call
loopne
xchg
add
rcl
lods
in
stc
sbb
push
jbe
ror
je
arpl
cmp
pop
push
incb
jno
dec
in
hlt
mov
pop
cmp
sub
out
add
cli
loop
pop
adc
or
mov
inc
insb
add
jae
sub
add
sbb
dec
mov
sbb
sbb
ffree
jo
mov
cltd
pop
cmp
pop
jg
pop
scas
add
loopne
cwtl
in
jecxz
dec
les
fiadds
pop
pop
xchg
mov
out
push
jl
sti
icebp
cmp
xchg
iret
jp
pushf
shlb
xchg
mov
inc
or
jmp
lea
lcall
jns
push
ljmp
scas
jb
mov
std
cli
loop
movsl
pop
sub
jo
ss
or
cmpsb
ljmp
test
mov
pop
inc
mov
in
divl
mov
cs
sarl
push
fcompl
pushf
lock
mov
lds
and
xor
addr16
sbb
push
stos
pushl
push
jp
outsb
and
outsl
mov
aaa
outsl
adc
adc
out
jno
inc
and
or
js
mov
insl
cmc
popa
sti
ds
mov
jle
arpl
or
jo,pt
gs
pop
loop
mov
add
mov
out
xlat
addr16
push
and
push
ret
inc
push
add
ret
lds
push
fucomip
and
shl
mov
out
pop
add
movsl
mov
jl
lods
cwtl
inc
call
lret
popa
ror
jbe
outsl
ret
mov
push
dec
pop
xlat
xchg
sub
cmp
push
pop
rorl
sub
or
es
cltd
sub
repnz
insb
enter
fsubr
pop
pop
je
insb
pop
lds
pushf
insl
pop
aaa
hlt
adc
cmp
or
lahf
or
mov
xor
js
aam
adc
cmp
sbb
jmp
call
and
mov
out
or
mov
push
sub
mov
rolb
jnp
inc
rcr
jae
mov
in
je
daa
icebp
mov
shl
dec
cmp
cmp
arpl
adc
scas
ds
sub
sub
out
fdivl
repnz
mov
shll
push
lods
fbstp
sbb
lea
nop
mov
imul
mov
out
outsb
fcomip
lcall
dec
cwtl
xchg
in
data16
bound
jne
sub
aad
and
sub
jmp
sbb
xchg
fdivl
push
cwtl
repnz
xchg
call
lods
cmp
jmp
test
faddl
stos
mov
adc
pop
sub
push
add
mov
cld
inc
cmpsl
pop
jl
cwtl
inc
aas
bound
xchg
int
and
pop
pop
js
in
cli
sub
add
and
sbb
daa
mov
dec
jl
pusha
jns
dec
and
das
cmpb
iret
sarl
jl
roll
sahf
cmpb
dec
cwtl
cmp
xor
fisttpl
scas
mov
inc
mov
adc
jbe
jle
ret
aad
push
test
xorl
jle
jle
js
or
xchg
sbb
pop
inc
xlat
repz
mov
pushf
stos
fstl
mov
test
adc
cwtl
cwtl
aas
fisttpl
scas
mov
sbb
pop
scas
loopne
ret
push
loop
dec
jo
mov
mov
or
jne
push
je
jno
cli
pop
das
inc
clc
lahf
push
mov
and
xor
mov
int3
cmpsl
aaa
imul
mov
lcall
in
sub
arpl
aam
iret
mov
leave
int
out
jns
sbb
or
mov
pop
dec
inc
jb
subb
and
jl
ret
jg
mov
cmp
std
jb
jge
cwtl
jg
mov
cmp
mov
jle
bound
xchg
sarb
push
xor
mov
cmpsl
xchg
and
shrb
fcomp
lahf
xchg
or
add
fdivrs
in
das
jbe
mov
enter
lret
dec
add
bound
sti
cmc
jmp
mov
xor
mov
int3
shr
cs
fcomps
and
in
dec
and
jns
cli
sbb
movsb
lock
int
sub
div
adc
xchg
enter
aam
loop
mov
and
jne
xchg
sbb
push
aad
popf
in
out
mov
push
mov
loope
std
pushf
dec
into
inc
sbb
or
add
gs
loope
arpl
mov
bound
test
jns
sahf
and
test
and
sub
mov
cltd
sarl
push
mov
sbb
mov
xor
and
into
jbe
shll
lcall
sbb
dec
mov
dec
nop
mov
mov
imull
rcr
lods
push
or
es
fildl
in
inc
push
dec
and
mov
movsb
mov
add
in
in
mov
das
sti
scas
or
cmpsb
jmp
movl
push
jb
and
mov
xchg
bound
add
xor
jbe
daa
sub
push
das
and
pop
aaa
fldenv
adc
xchg
xchg
pop
bound
aas
mov
adc
test
movsb
xor
int3
fidivl
iret
shlb
inc
pusha
movsl
push
icebp
jl
pop
repnz
dec
loop
ret
test
sbb
out
fidivrl
cmp
cmp
mov
and
int
mov
xchg
cmpl
fcmovne
mov
fbstp
nop
xor
je
fs
ljmp
outsb
subl
mov
dec
add
stc
cmp
inc
dec
lret
stos
jp
je
cwtl
adc
inc
xor
mov
pop
jnp
adc
adc
mov
adcl
mov
adc
push
push
push
inc
add
mov
jecxz
or
in
lahf
push
mov
xorl
mov
mov
push
and
push
testl
cmp
sbb
mov
lret
rep
wbinvd
imul
xchg
cltd
cld
and
pop
nop
ljmp
xchg
clc
dec
sbb
aam
ffreep
pop
aas
maskmovq
in
dec
cmp
dec
jo
push
add
nop
rep
inc
rorl
imul
ds
shrb
cmp
clc
xor
jle
cmp
jmp
nop
push
cli
subl
mov
add
imul
dec
xchg
and
sbb
mov
mov
clc
mov
sbb
mov
jo
ja
dec
mov
push
hlt
enter
adc
jmp
cs
xchg
aad
mov
pusha
dec
push
sbb
cmpb
or
sbb
popa
mov
ret
mov
shrb
dec
push
sub
sub
lret
dec
jno
outsb
pop
sub
jg
cmc
dec
jmp
dec
xor
xor
stos
fisttpl
sti
jmp
fstps
mov
push
mov
shr
loop
repnz
and
fwait
mov
les
cmpsl
frstor
push
repz
lods
mov
sub
ds
sub
and
pop
pop
inc
inc
mov
sbb
hlt
rorl
cmp
adc
pop
xchg
out
outsb
mov
popf
jp
es
dec
aad
mov
xchg
and
fmul
push
jl
pop
shl
sbb
fisttpll
es
sbb
in
mov
fucom
das
lock
hlt
inc
xor
in
mov
fiadds
xor
or
mov
fprem1
jge
stos
call
fistl
cmp
icebp
sub
add
mov
les
dec
mov
inc
shl
imul
nop
into
aas
or
jne
add
jbe
roll
push
mov
mov
popf
mov
out
cwtl
hlt
int3
mov
jp
xlat
in
out
pop
or
jecxz
fisubrs
push
mov
arpl
out
out
sbb
jns
cs
or
loopne
aaa
in
pop
iret
sub
fldt
inc
mov
inc
mov
or
enter
rcr
rorl
jl
gs
data16
xor
push
in
inc
and
adc
das
scas
mov
sbb
add
mov
push
movsb
dec
push
out
adc
sbb
out
in
xchg
push
pop
jns
daa
icebp
adc
in
add
jns
or
sub
int
xlat
orl
push
test
dec
scas
xchg
dec
xor
sbb
cmc
sahf
enter
adc
loop
mov
xchg
and
push
out
jge
mov
xchg
pop
dec
rcrb
dec
push
pop
mov
and
xchg
lds
sub
jno
sbb
fsts
addl
pushf
hlt
or
and
lahf
xchg
mov
xor
nop
inc
mov
les
pop
popf
daa
mov
imul
repz
addb
jnp
fcoml
cld
pop
das
pause
outsl
adc
aam
sbb
loope
lds
ljmp
adc
dec
fisttps
push
hlt
dec
sbb
push
aas
jo
pop
sbb
jnp
cmpsl
std
insb
inc
call
sbb
sub
ljmp
int3
daa
or
push
mov
mov
xor
lods
dec
les
dec
inc
stos
lods
emms
es
repnz
push
stc
xchg
mov
cltd
push
push
bswap
sub
mov
mov
repz
dec
sbb
leave
cmp
outsb
bound
xchg
filds
fwait
or
movsb
sbb
cwtl
popf
xor
xorl
inc
loopne
sbb
loopne
mov
mov
fbld
xlat
fs
adcl
pop
mov
test
pop
xor
mov
sub
mov
bound
aad
sbb
jo
out
add
mov
inc
sahf
xchg
push
jnp
hlt
mov
mov
adc
dec
xor
dec
xor
fcmovnu
rcll
movsb
mov
xor
js
xor
in
xor
outsl
or
dec
adc
nop
inc
jae
add
dec
test
mov
sub
fsubl
lock
xchg
insb
and
xor
cmp
or
push
std
fisubl
les
mov
ja
sub
daa
rorl
outsl
popf
ret
and
andl
push
jno
push
mov
enter
lahf
mov
repz
xor
pop
adc
leave
fst
xor
sub
or
lods
roll
fisubrl
mov
sub
xlat
push
jge
int
sbb
and
pushf
std
movsb
xchg
loopne
out
xchg
mov
std
pop
sti
ljmp
mov
or
xor
out
xor
sbbl
aam
je
lahf
xor
dec
or
andl
je
daa
dec
inc
in
add
inc
stos
adc
mov
and
inc
push
push
push
add
xchg
and
pop
push
fcos
mov
xchg
push
pop
push
sbb
fwait
rcll
mov
daa
stc
dec
jge
sub
daa
in
jns
add
data16
jg
mov
inc
sub
mov
stc
aaa
bound
aam
and
stc
gs
mov
xor
mov
and
cmpsl
int
jl
lods
inc
in
inc
bound
adc
mov
inc
or
int3
jmp
pop
lds
inc
cmp
dec
div
lock
leave
add
sub
sub
push
lock
push
ret
jbe
fcoml
repnz
adc
stc
mov
andb
jo
fsubrl
push
mov
imul
pop
mov
test
mov
mov
int3
incb
inc
in
cmp
add
out
adcb
xor
dec
daa
ret
sub
pop
sub
add
pop
scas
cli
pop
cmp
mov
popf
and
push
test
lea
lahf
je
mov
mov
loopne
mov
ss
cs
cmp
add
and
sub
ret
xchg
mov
gs
movsb
sti
inc
loope
xor
mov
mov
lret
add
xor
sub
imul
add
sbb
xchg
lock
or
mov
xchg
xchg
and
cld
sahf
dec
mov
add
insl
sub
jg
cwtl
dec
inc
subl
push
xor
mov
std
fisubs
mov
cmp
mov
testb
or
addr16
aad
fs
pop
ds
gs
lcall
in
push
push
dec
pop
inc
pop
arpl
push
bound
scas
mul
mov
mov
loop
xchg
adc
mov
ljmp
imul
jl
cmc
out
shlb
push
sbb
mov
bound
inc
daa
fwait
arpl
fidivrl
add
das
loopne
in
or
cmpsb
cli
inc
push
dec
add
sbb
dec
lahf
inc
xor
adc
ja
dec
lods
inc
mov
push
push
mov
mov
popa
dec
pop
fwait
dec
mov
push
sbb
sub
orb
loope
ss
pop
jne
das
or
jg
xor
mov
pop
mov
das
fcomp
jbe
aad
mull
xchg
in
mov
mov
xor
jno
loope
pop
out
xor
jne
loop
movsb
cmc
mov
jg
shlb
pop
pop
mov
mov
pop
scas
dec
daa
push
jo
out
mov
sbb
add
mov
sub
les
jns
push
jl
leave
push
lea
rep
or
insl
or
or
insb
cmp
mov
mov
sbb
push
imul
xchg
xor
push
xor
mov
mov
insb
jae
mov
push
xchg
pushf
pop
daa
sub
fsts
lock
shrl
pop
push
sbb
fbstp
cmpsl
test
call
sarl
or
push
lcall
push
mov
jle
jg
lahf
dec
push
push
or
clc
ss
mov
jge
loope
inc
out
adc
cli
dec
mov
xchg
push
lahf
adc
fildll
fcmovnbe
inc
les
add
dec
xor
shll
adc
test
mov
or
jp
mov
xchg
in
mov
das
arpl
or
mov
out
adc
in
xchg
mov
jp
lea
xchg
pusha
or
incl
popa
sti
push
fldenv
push
outsl
into
xchg
es
in
rclb
adc
mov
pop
movlps
mov
or
lods
xor
push
fwait
loope
out
stos
jb
dec
fcomps
in
adc
aad
inc
xor
fwait
add
xchg
pop
cmpsl
mov
sbb
rolb
lahf
lea
stos
add
mov
dec
add
icebp
imul
add
or
push
je
mov
sub
in
rolb
and
dec
jg
jb
xchg
push
adc
aad
loope
movsb
cmc
out
cmpsl
push
out
ljmp
jmp
add
and
loop
in
add
jb
hlt
js
or
aam
sbb
jo
pop
decb
mov
je
cmp
sub
sub
or
fstpt
mov
cmpsb
jmp
cmpsb
lods
push
push
mov
jmp
xor
call
dec
arpl
xchg
or
cmp
test
push
hlt
js
xchg
and
mov
fwait
popa
or
adc
popf
call
es
xchg
pop
push
and
xchg
popa
adc
cmp
mov
xor
js
xchg
adc
xchg
fcmovnbe
sub
mov
addr16
pop
dec
inc
sub
dec
adc
outsb
push
lret
rcrb
xor
enter
jmp
or
cmc
fmul
ret
ror
sbb
jmp
out
inc
fcmovu
movsl
xchg
sub
push
jo
out
push
inc
xorl
add
cli
sbb
leave
fmuls
xchg
add
inc
xchg
jne
pop
lods
jnp
stos
lret
daa
out
xchg
or
pop
push
lods
data16
xor
pop
out
inc
jne
push
daa
xchg
shl
fbstp
je
and
cmp
std
mov
and
and
stc
xchg
in
jno
lods
lret
repz
jae
xor
xchg
pop
iret
ficoml
insl
push
in
cli
pop
cmpsl
mov
sbb
sub
xor
pop
shlb
lcall
inc
sub
mov
fidivrs
jg
xchg
adc
mov
repnz
call
popf
sahf
std
fwait
shll
nopl
adc
pushf
lods
pop
ss
bound
addb
dec
jle
arpl
movsl
jecxz
fdivs
jbe
xchg
shll
dec
imul
int3
xor
pop
out
ficoml
xchg
cmp
jo
fwait
pop
mov
sbb
jae
xchg
dec
or
xchg
dec
arpl
lcall
jmp
dec
or
inc
dec
xchg
mov
jne
subb
xor
inc
rcl
jb
inc
enter
sbb
push
add
push
xchg
lods
mulb
insl
enter
stos
xor
ficoml
xlat
mov
xor
pop
fisubl
push
mov
loope
scas
or
cltd
int
jbe
pop
mov
cld
cmp
lahf
sbb
mov
sub
sbb
xor
jno
push
xchg
xchg
outsl
sti
mov
push
push
shll
add
ss
leave
push
cmp
les
jne
sti
push
repnz
outsl
in
mov
std
jg
sub
cmc
into
or
mov
xchg
aad
and
mov
movsb
sub
xor
push
sub
jns
pop
inc
pop
cmpl
int3
dec
loop
addr16
pop
or
or
mov
adc
cltd
cmpsb
movsl
jmp
push
lods
or
idivb
mov
cmp
cld
xor
xor
insb
mov
pusha
push
in
and
fdivrl
jb
add
dec
dec
mov
out
jnp
loope
mov
push
sbb
out
test
loop
test
loopne
and
xchg
outsb
icebp
fs
lcall
cmpsb
push
loop
int
fwait
jb
test
repz
jb
mov
pusha
adc
mov
mov
pop
and
test
mov
xchg
sbb
int3
popf
pusha
mov
rcll
pop
incw
lods
nop
adc
das
dec
xor
mov
jge
push
cli
jne
or
mov
inc
inc
cmpsb
ljmp
sahf
cli
mov
sbb
cmp
pop
jge
inc
lds
int3
cwtl
cli
popf
les
xlat
dec
mov
imul
sub
or
int
clc
fsubs
aas
loope
mov
out
daa
dec
cmp
cmpsl
jno
test
pop
mov
movsb
push
mov
int3
sbb
and
sti
xor
and
ljmp
in
dec
lods
push
mov
scas
in
adc
ljmp
pop
lahf
cld
jecxz
mov
outsl
xor
or
or
mov
sbb
cmp
nop
or
push
cmpsb
loop
decb
and
insb
jno
sbb
in
and
cmp
push
stc
mov
jb
mov
ficoms
mov
test
fisttps
add
xchg
pop
insl
sbb
nop
dec
out
mov
mov
jne
aad
jp
lret
inc
adc
dec
sbb
mov
repnz
les
sbb
mov
mov
ret
ja
xor
mov
sbb
jb
ja
ret
scas
and
stc
add
dec
xchg
rcll
pop
push
cmp
jp
and
sbb
arpl
cmp
loopne
inc
pop
xor
push
dec
add
push
in
mov
mov
jmp
cltd
mov
sub
and
sti
jbe
popa
pop
scas
ljmp
mov
jno
push
sbb
cmp
dec
lds
jg
mov
and
pop
mov
int3
sub
adc
add
dec
jg
push
fistpll
xor
mov
fs
dec
cmp
test
adc
scas
cltd
aaa
xlat
jb
fmull
jecxz
fildl
cmp
xchg
les
cmc
and
push
mov
pusha
xor
fsubr
popa
lock
clc
jb
mov
and
mov
add
push
pop
jecxz
scas
add
in
add
or
cli
stos
insb
sbb
imul
fadds
cmp
hlt
jne
push
sbb
xchg
sbb
leave
in
shl
mov
inc
testl
mov
cmpsb
push
dec
popa
mov
sbb
ds
lahf
subb
push
xchg
inc
or
in
xchg
mov
adc
jl
les
mov
cwtl
adc
and
loope
sub
int
adc
xor
lea
jmp
push
jg
pushf
mov
push
stos
and
hlt
cmp
ja
iret
sbb
push
pop
add
xor
pop
jns
sub
sbb
or
dec
pushf
in
dec
sbb
outsl
adc
shl
sub
sbb
loopne
les
sbb
mov
xchg
int3
or
cmpsb
xor
insl
es
mov
or
shrb
cmp
cld
mov
loope
outsl
mov
adc
lock
fdiv
jmp
and
pushf
mov
mov
shll
dec
sub
lahf
les
loope
pop
pop
loope
lods
push
cmp
dec
mov
push
mov
pop
sbb
xchg
xor
loope
jle
push
mov
pop
add
dec
sbb
aas
mov
push
aad
mov
pushf
cmpb
push
push
es
jne
in
arpl
xchg
scas
adc
sbb
lret
pop
daa
fcoms
mov
roll
scas
mov
mov
mov
xchg
xchg
stc
movsl
out
or
add
aaa
mov
imul
fbstp
icebp
xor
jle
sahf
scas
jl
mov
ljmp
push
addr16
sub
sub
jne
xor
out
es
push
inc
dec
nop
pop
push
les
or
ljmp
jmp
int3
mov
std
jo
into
mov
in
rcll
pop
pop
scas
addr16
mov
inc
cmp
adc
push
out
dec
jmp
mov
xchg
loope
scas
add
in
xchg
rcrb
sub
hlt
jg
fsts
xor
sub
jo
subw
bound
push
into
mov
lods
iret
push
mov
movsb
sbb
mov
mov
xchg
lret
xlat
mov
cld
pusha
mov
roll
push
mov
inc
in
jo
mov
fcmovnbe
scas
sub
push
test
and
imul
in
movsl
mov
ds
popa
mov
sahf
mov
insl
add
aam
sahf
inc
inc
in
and
and
xchg
mov
xchg
je
pop
repnz
jg
adc
pop
fs
cmp
xor
mov
outsl
and
cmp
push
xchg
push
rcrb
xchg
mov
mov
mov
test
xchg
jecxz
mov
xchg
mov
aam
bound
inc
mov
sub
lret
ror
subl
fincstp
ret
push
xchg
sbb
mov
sahf
imul
aaa
inc
mov
push
loopne
mov
dec
mov
push
or
loope
and
sbb
repz
cmp
addl
in
in
xor
imulb
fisttpl
push
jp
mov
clts
ds
iret
ljmp
and
and
notb
lret
adc
xchg
or
loopne
ret
mov
pushf
jo
cmp
ret
xor
leave
mov
dec
xchg
adc
scas
or
pop
gs
mov
adc
push
mov
xor
enter
subb
sbb
pusha
divb
push
dec
shrl
outsl
or
xchg
lret
clc
dec
je
pop
inc
movsl
mov
inc
out
pop
out
je
mov
mov
mov
mov
jle
dec
jno
mov
mov
push
scas
pop
or
jno
adc
and
fmull
sbb
pop
repz
mov
fldcw
sti
dec
xchg
aas
cld
mov
fnstsw
sbb
movsb
dec
pop
pop
mov
cmp
inc
push
scas
inc
mov
xchg
push
pop
pop
popf
outsb
rcll
subl
and
mov
pop
or
shll
testb
mov
cmpsb
cmp
pop
pop
xor
mov
adc
cmp
xchg
cld
popa
xorb
in
cmp
pop
xor
push
adc
sbb
jns
cmp
clc
idivb
sbb
shrb
dec
jb
sub
pop
cli
mov
ja
or
push
or
fidivl
js
pop
insb
push
xor
aam
xor
sti
ss
fisttpll
jmp
sub
mov
repnz
ss
mov
pop
inc
dec
add
sub
mov
push
arpl
pop
std
sti
aas
lcall
stc
push
adc
xor
push
lds
push
sbb
std
arpl
xlat
pop
add
lahf
cmp
mulb
cmp
push
xchg
mov
mov
mov
or
aam
xor
xchg
push
mov
dec
lods
inc
pop
sarl
sarl
test
push
ss
xchg
shlb
push
push
add
jg
mov
mov
inc
jno
pop
adc
mov
sbb
insb
adc
cli
les
xchg
or
lahf
fnstcw
sub
ret
nop
int
inc
jns
pop
mov
outsl
sub
out
ljmp
cli
in
cmc
mov
scas
jae
add
rclb
pop
fnstsw
add
push
push
in
pop
mov
dec
fstpl
sub
test
mov
lods
popf
data16
jmp
push
in
ja
mov
in
jb
cmc
cmp
sbb
loopne
test
leave
push
dec
xor
loop
lods
inc
mov
mov
daa
sub
jp
pop
int3
xchg
inc
sub
nop
and
mov
inc
std
sbb
mov
loopne
hlt
shll
add
dec
mov
and
leave
jnp
sub
fstps
fldcw
push
adc
inc
arpl
outsl
int3
insl
daa
loopne
out
and
enter
sbb
sub
cmp
movsb
mulps
aas
cmp
lods
xlat
jo
divl
xchg
pop
inc
push
push
and
jo
fisttpl
cmpsb
andl
cmp
and
jno
popa
arpl
dec
and
adc
cmpsl
mov
push
gs
push
cmp
pop
add
dec
les
je
repnz
sub
mov
rcl
mov
fdivs
xchg
hlt
and
pop
ljmp
mov
adc
xor
jmp
pop
xchg
push
movsb
sub
test
jg
outsl
ss
cwtl
imul
xchg
pop
and
out
xchg
add
cs
and
adc
fsubrs
icebp
xlat
pop
jp
lret
jl
and
pop
imul
mov
leave
add
or
ljmp
pushf
rorl
mov
roll
xchg
insl
and
adc
xor
mov
subl
adc
sarb
push
mov
jbe
cmc
push
aaa
jne
jo
lret
dec
mov
cmp
or
jmp
int
clc
movsl
pop
shr
xlat
sbb
sub
movsl
cli
test
or
cmp
outsb
cli
mov
lea
cmpsb
adc
ret
sub
popf
push
mov
pop
aas
pop
out
mov
test
fldl
shll
cld
es
sahf
xor
shr
inc
cld
cs
test
fchs
pop
mov
mov
sbb
sbb
mov
pop
jb
xor
xchg
jbe
pushf
mov
pusha
ss
xchg
fstpt
jg
lret
push
pusha
popl
mov
add
xchg
xchg
sub
adc
sub
add
xor
nop
out
out
hlt
shrl
loope
push
test
push
push
stc
mov
cli
add
cli
or
orps
lods
jb
push
xor
out
andl
push
movsb
sub
aas
ret
jb
xchg
daa
test
mov
xor
xor
lods
sbb
out
or
push
sub
cmp
mov
fwait
mov
clc
jp
addr16
mov
and
add
adc
andl
out
arpl
ret
fsubr
jl
dec
jle
jl
js
sub
push
mov
ret
ss
lcall
scas
sub
and
mov
shrd
ds
add
popa
jle
xchg
or
pop
mov
adc
inc
gs
mov
inc
dec
sub
shrl
into
imul
dec
in
imul
dec
ja
insl
jbe
mov
xchg
lcall
insb
int
bound
rcrl
shrl
sbb
adc
call
in
push
xchg
aaa
mov
xor
loop
pop
andb
cwtl
imulb
enter
mov
stos
repnz
in
cld
cld
pop
mov
stc
xchg
ds
adc
aaa
add
es
or
dec
jge
ja
xchg
cltd
add
ja
call
fcompl
test
xchg
rol
es
xor
xchg
movsb
loopne
dec
cmpsl
mov
adc
pop
leave
adc
lods
out
pop
adc
lods
sub
and
jns
and
xchg
fs
cmp
nop
fisubrs
mov
test
aaa
push
mov
arpl
pop
xor
shrl
mov
fwait
iret
mov
cmp
ficoms
test
cmpl
cmp
out
fwait
fwait
jge
xor
or
jb
ss
repz
jecxz
jns
pop
sbb
lds
mov
fiadds
call
cmp
shl
dec
or
pushf
shrl
push
dec
cli
into
insb
in
sarl
sbb
jl
inc
insb
cwtl
mov
in
dec
imul
mov
sbb
dec
cli
mov
out
ja
mov
addr16
mov
xor
test
mov
push
mov
jo
ljmp
into
add
stos
out
popa
mov
mov
pop
stc
pop
xchg
out
lret
mov
mov
or
jae
cld
and
and
dec
sbbl
cmc
push
lret
dec
dec
out
repnz
mov
push
inc
in
xor
jle
jg
mov
pop
outsl
xlat
ss
xchg
test
push
mov
int
mov
and
pop
push
mov
mov
mov
inc
mov
outsl
and
js
mov
popf
mov
xor
adc
xor
add
out
dec
jb
data16
sbb
scas
cmp
cmp
dec
call
sbb
out
pop
cmc
or
inc
lret
inc
lea
clc
dec
adc
lods
insb
and
std
and
mov
andb
mov
fcomps
and
or
lcall
mov
jl
or
xchg
insb
add
or
xchg
in
push
mov
push
push
sbb
mov
das
loopne
jo
enter
sbb
test
jecxz
insl
jmp
cwtl
xlat
push
bound
ds
sbbl
sti
cmp
sbb
jns
in
push
pop
mov
mov
xchg
in
push
sbb
adc
push
sub
out
sbb
cwtl
or
fwait
and
negl
xchg
sbb
clc
fwait
in
inc
cltd
xchg
dec
std
mov
aad
push
icebp
mov
mov
push
mov
cmp
sbb
outsb
insl
or
ror
daa
dec
mov
pop
ds
imul
sbb
mov
outsl
adc
mov
stos
std
jbe
mov
mov
icebp
pop
push
jns
dec
icebp
lock
bound
add
in
lret
movsl
decl
xor
cmp
adc
sub
push
int
addl
lret
jno
xchg
mov
mov
adc
cmp
bound
sub
push
push
jno
dec
pop
jnp
xor
add
fldl
incb
lods
fistps
mov
fldl
stos
out
pop
ds
mov
iret
push
push
add
ret
lods
inc
out
hlt
dec
adc
dec
ja
iret
inc
in
inc
mov
sbb
test
je
dec
inc
repnz
mov
xchg
icebp
sub
fwait
ja
push
int3
dec
iret
dec
iret
cmp
mov
add
andl
xorb
mov
mov
mov
std
sti
add
mov
push
call
or
mov
or
mov
mov
inc
inc
icebp
cld
cmc
mov
xchg
dec
jp
inc
jno
push
or
daa
imul
insb
adc
sbb
dec
faddl
sub
in
lds
les
or
mov
int
xchg
jge
loopne
in
imul
dec
xor
push
lcall
sub
mov
arpl
outsb
mov
test
sar
xchg
mov
std
mov
imul
push
les
or
jge
mov
lcall
sahf
dec
push
sub
stos
or
xchg
call
jno
push
repnz
comiss
cmp
ja
fcos
push
add
imul
mov
pop
out
movsb
popa
mov
xor
repz
and
bound
int
dec
call
cwtl
fadd
dec
cmpsb
adc
add
rcr
jbe
jno
cvttps2pi
and
mov
add
cmp
jl
negl
and
into
int3
inc
xorb
movsb
daa
stc
subl
es
jne
leave
push
leave
push
jns
push
mov
das
push
mov
mov
and
add
aam
pop
out
mov
adcl
push
push
test
out
mov
adc
outsl
insb
fists
cmp
mov
mov
loope
mov
lods
add
inc
les
data16
xchg
add
cmp
xlat
sbb
pop
es
out
adc
mov
cli
aam
jg
aad
push
loop
cmpsb
jl
lds
out
sbb
mov
xorl
out
adc
push
sbb
cli
jae
std
nop
les
mov
pop
fisttpl
jecxz
mov
rolb
xchg
mov
push
addr16
xlat
daa
jp
xchg
fsts
inc
xor
mov
sbb
pop
mov
and
mov
aaa
mov
xchg
add
ret
repz
lret
scas
pop
and
push
int
flds
and
adc
call
push
sti
loop
lret
or
adc
testl
repnz
adc
mull
or
mov
iret
sub
add
and
dec
in
outsl
cmp
fldt
jge
ds
rclb
mov
sti
push
pop
repz
push
lods
clc
es
repnz
std
std
movsl
add
loopne
mov
inc
out
fldcw
jp
lret
mov
push
push
pop
ret
and
jecxz
add
fwait
push
mov
cmpl
shrb
ret
andb
xchg
clc
pop
rclb
pop
pushf
add
int
ja
movsb
in
xchg
pop
lea
xor
pusha
adc
jp
jns
push
iret
jns
xchg
out
cld
lea
mov
data16
clc
repz
cltd
outsl
push
pop
adc
mov
jns
pop
ret
data16
out
enter
cmp
outsb
sbb
cmp
dec
sbb
mov
dec
pop
cmp
mov
dec
fnstcw
aas
pop
push
imul
inc
mov
fwait
unpcklps
sub
movsl
pushf
sbb
mov
push
mov
xchg
stos
cmpsl
add
gs
lcall
fldt
inc
adc
push
in
insb
fcoml
add
push
mov
insb
dec
into
pusha
sub
mov
addl
pop
inc
fs
stc
push
adc
int
fiadds
cmp
push
sbb
mov
pop
dec
jmp
das
repnz
xor
add
xchg
outsb
cmp
jno
clc
and
insl
mov
mov
stos
cmp
inc
test
xor
sub
arpl
repz
aaa
popf
lcall
cmp
push
movl
adc
inc
ja
push
adc
call
popa
addr16
xlat
faddl
aaa
push
push
stos
in
xor
jl
cwtl
jle
mov
pop
jge
gs
cli
xor
push
adc
jo
push
in
fs
inc
mov
push
and
fildl
clc
mov
sbb
cmp
div
outsb
push
jb
jmp
cmpsl
les
mov
call
adc
inc
pop
pop
add
cmpsl
mov
rcrb
adc
clc
xor
mov
popf
jbe
push
mov
popf
jmp
pusha
test
es
hlt
or
fabs
and
frstor
cltd
data16
sbb
jp
pusha
imul
sub
out
xor
std
sbb
mov
fildll
add
jl
push
jnp
aaa
in
iret
ljmp
std
dec
sub
addr16
cmp
push
aad
sbb
jecxz
pop
jbe
pop
push
cmp
popf
aas
out
fadd
xchg
jecxz
nop
add
scas
adc
jne
aad
mov
jge
xchg
in
jns
ss
mov
push
xor
in
mov
pop
mov
push
jge
jl
stos
inc
pop
aad
push
leave
iret
add
and
mov
push
fisubrs
movsb
xor
clc
out
pop
lods
aad
repz
inc
rcr
jp
dec
xchg
jl
push
mov
or
sbb
ja
fcoml
mov
dec
mov
add
jns
cmp
ret
mov
stos
push
dec
lods
cmp
or
fnstcw
outsb
iret
je
push
pop
add
stc
outsl
mov
inc
fs
sub
loopne
fnstenv
les
call
inc
cwtl
sub
cmpsl
cmp
sub
mov
ja
sbb
fs
pushf
mov
xchg
enter
shlb
inc
std
xchg
mov
in
mov
movsl
inc
cmpb
jecxz
sbb
jle
stc
mov
xchg
xor
push
cmp
icebp
push
outsl
bound
leave
cltd
lahf
dec
mov
sub
mov
xchg
fcomps
jne
mov
not
pop
add
int
add
xchg
push
stos
pop
movsl
mov
jecxz
push
mov
lds
lds
das
jbe
imulb
loop
dec
in
cwtl
jmp
repnz
sbb
fs
lods
out
add
negb
push
mov
inc
enter
aad
fcmovne
pop
popa
mov
aaa
xor
out
mov
or
cmc
add
push
push
sub
ljmp
pop
setae
in
cmp
mov
mov
jns
dec
xchg
cmpsb
out
enter
push
mov
or
faddl
movsb
iret
jmp
out
jo
mov
jle
outsl
dec
mov
jo
pop
sbb
and
xor
lahf
push
inc
loop
sti
push
add
aad
loope
movb
repnz
push
mov
cmpl
popf
out
sbb
mulb
dec
sbb
movsb
jle
out
fs
xchg
repnz
cmp
shrb
mov
cld
cld
das
fcmovu
scas
aaa
out
je
ljmp
push
leave
or
pop
sbb
test
fistpl
push
pusha
stos
ja
jge
into
sub
adc
push
les
dec
loop
pop
push
test
mov
mov
in
cmp
mov
inc
mov
add
fwait
ja
aas
xchg
inc
insb
mov
pop
addl
fmuls
inc
and
jb
icebp
adc
gs
or
or
push
dec
mov
lret
cwtl
loop
and
dec
sbbb
mov
in
adc
in
shlb
in
and
adc
orl
loop
out
sub
popa
push
repz
aas
subb
sti
sarl
bound
jle
test
das
mov
push
int3
ds
cwtl
dec
jbe
push
and
and
addr16
ljmp
xor
repz
jo
sub
pop
add
repnz
outsb
mov
clc
mov
push
cmovbe
clc
fisubl
push
cmp
sub
add
dec
mov
dec
out
xchg
pusha
pop
inc
mov
jae
rcrb
pushf
inc
push
or
daa
cmc
int3
push
jl
push
cmp
xor
fcompl
stos
sahf
ficompl
xor
lods
mov
pop
cmpsl
adc
mov
mov
mov
adc
nop
sub
into
out
iret
sahf
fisttps
ja
mov
fists
push
out
stc
mov
jle
daa
stos
ds
call
sub
adc
outsb
jmp
cmp
push
dec
lret
mov
ret
mov
pop
mov
pop
mov
pop
loope
or
cltd
fidivl
pop
js
push
lret
and
lock
fstl
ss
or
jbe
js
ret
xor
icebp
adc
cmpsb
push
xorb
cli
cltd
pop
rolb
addr16
mov
and
aad
in
test
in
loopne
mov
mov
sarb
leave
test
mov
test
imul
hlt
stc
sbb
or
xchg
jbe
cmp
vpshuflw
pop
mov
sti
dec
or
dec
es
or
sbb
loope
cmpb
pop
cs
jcxz
fnsave
outsl
mov
push
ljmp
push
add
inc
mov
cli
insb
xchg
xchg
lahf
mov
popf
jge
mov
es
cltd
test
dec
push
pop
inc
popf
xlat
adc
xchg
test
push
sbb
push
jb
stc
aas
lock
mov
adc
mov
xchg
mov
jae
hlt
sahf
cmc
leave
adc
xor
sub
inc
divb
push
fisubs
sub
push
pmaxsw
or
cltd
mov
fiaddl
lds
or
push
jg
adc
jnp
stos
stos
and
mov
push
ja
inc
gs
cmp
lods
push
decl
sub
dec
cmpl
fcomi
sbb
and
mov
ret
add
or
cs
stos
xchg
nop
pop
fdivr
out
mov
into
cltd
add
rcl
ds
nop
inc
pop
xor
mov
mov
mov
jecxz,pn
jmp
ss
clc
dec
lds
mov
mov
mov
sbb
call
xchg
outsb
push
gs
pop
pushl
fisubl
psubq
addr16
dec
push
mov
fs
push
cmp
pop
scas
hlt
pop
loope
push
sti
xchg
ljmp
lret
je
scas
add
cvtps2pi
test
das
cmp
push
popf
push
movsb
popf
jle
cmc
sahf
ret
out
pop
aas
stos
pusha
mov
and
mov
adc
lods
mov
daa
xor
loope
mov
popa
adc
mov
shlb
fcompl
xchg
loop
push
xchg
in
aam
xchg
hlt
or
add
mov
pop
out
mov
add
and
fiaddl
fsts
les
sbb
mov
mov
pop
in
movd
fisttpll
dec
xor
push
and
jne
mov
mov
aas
leave
cmpsb
lea
inc
and
gs
lret
dec
stc
cs
fidivs
push
inc
inc
lret
arpl
fldlg2
inc
idivb
test
pop
inc
mov
inc
adc
loopne
push
sbbb
cmp
push
in
fisttpll
inc
in
mov
imul
in
in
mov
mov
in
daa
arpl
mov
xor
add
jge
add
push
lods
subb
add
push
mov
mov
lods
sub
aaa
add
xchg
pop
mov
popa
jnp
xchg
sub
outsl
lods
mov
adc
jecxz
lods
push
call
cmpsb
mov
out
ds
ret
bound
sbb
out
cmp
pop
clc
or
mov
sarl
and
int3
aam
mov
sarl
es
adc
in
sub
adc
dec
fstps
popa
fs
or
add
sbbl
push
jmp
das
xlat
rcl
sbb
nop
and
pop
mov
and
mov
jae
or
loopne
fwait
in
loopne
aad
js
jmp
mov
fcomi
mov
les
add
in
xchg
orb
repz
jle
and
stc
mov
in
sbb
inc
mov
sub
cmpb
mov
pop
sbb
jo
imul
test
pop
mov
push
cmpsb
mov
and
sub
addr16
and
sub
xor
and
push
add
or
jne
xchg
test
sbb
sbb
xor
mov
loopne
fimull
ljmp
fistl
fisubrl
fcmove
test
dec
lret
imul
fdiv
divb
mov
dec
jle
out
shlb
sub
mov
jge
out
or
mov
jecxz
and
xchg
and
add
xchg
je
xor
cmp
push
leave
xorb
insb
movsl
cmp
xor
je
aad
daa
inc
push
popa
jb
clc
int
das
rorl
scas
xchg
sbb
mov
sahf
into
push
neg
iret
loope
shl
xlat
dec
fcompl
subb
shll
pop
xor
pop
mov
fimull
movsb
es
xor
push
pop
add
int
out
fistpll
and
cli
lea
int3
mov
pop
cli
add
sbb
mov
mov
mov
pop
ret
ljmp
add
negl
sub
ljmp
sub
aam
jmp
loopne
jl
repz
ljmp
imul
cltd
dec
sahf
outsl
sub
dec
and
mov
sub
push
push
imul
inc
or
add
lods
les
or
mov
pop
sub
sarb
mov
rorl
in
nop
jns
push
addr16
or
dec
std
imul
loop
ljmp
push
dec
mov
repz
in
in
lcall
int3
jae
mov
push
outsb
pop
push
push
lret
movsb
fs
leave
insb
rcll
push
xchg
insb
aam
ljmp
setle
loope
jg
dec
or
hlt
imulb
dec
es
mov
fists
and
popf
ret
aam
mov
jecxz
lret
xchg
mov
inc
push
je
ret
in
inc
sbb
xor
mov
cmpsb
add
js
push
xchg
fdivp
icebp
or
push
nop
movsb
out
cli
shl
movsb
add
push
gs
jmp
enter
repz
addr16
jb
ljmp
in
cmc
pop
sarl
cwtl
dec
movsl
mov
inc
mov
out
or
lods
js
mov
mov
jg
mov
and
icebp
dec
push
in
jb
rcpps
inc
mov
jnp
shrb
sbb
mov
fwait
popa
cmpsb
nop
push
xchg
add
mov
pop
inc
jge
adc
cwtl
xchg
mov
dec
incb
in
sub
mov
cmpb
mov
sub
add
mov
lahf
push
sbb
cli
sub
and
fiaddl
sbb
in
repnz
sub
fcmovnu
and
pop
mov
add
push
int3
dec
in
hlt
lahf
js,pt
pop
xchg
or
cmpb
inc
mov
pusha
stos
lcall
fsubrs
push
inc
stos
push
pusha
cmp
fsubl
push
xchg
adc
mov
rcll
shrb
loop
clc
out
idivb
fimull
push
pop
dec
pop
sti
mov
outsl
ret
or
pop
dec
enter
dec
cs
add
or
out
mov
jle
rorl
es
outsb
mov
sahf
in
xor
out
cld
xchg
jmp
jp
test
and
or
ret
rcll
dec
ret
mov
jo
out
cli
dec
jp
inc
loopne
std
shl
mov
imul
and
divl
mov
mov
xchg
fstpl
xor
pushf
sbb
jae
lretw
dec
cmp
push
or
lods
cmp
pushf
or
lahf
into
fwait
in
sbb
aas
clc
les
push
pop
mov
aas
cld
aas
inc
mull
pushf
rcll
lods
inc
xchg
xchg
test
push
pop
idivl
loop
and
inc
sbb
fnsave
cs
dec
sub
lahf
lcall
mov
clc
and
imul
jns
movsl
dec
imul
and
faddp
inc
out
test
dec
sti
fwait
outsl
or
pop
xor
rcl
xchg
daa
sub
dec
cmp
rcrl
mov
mov
mov
xor
jnp
sbb
cli
imul
sub
fsubl
mov
popa
rol
call
sbb
loope
mov
sub
mov
icebp
and
out
push
add
xor
jb
cmp
fmuls
bound
lret
flds
push
mov
or
scas
pop
lret
sbb
sub
cmpsl
icebp
gs
dec
sub
in
lock
fwait
loopne
stc
mov
push
adc
xchg
les
pop
imul
jmp
movsb
and
insb
lret
enter
inc
add
call
sarl
dec
scas
leave
stc
sub
icebp
cmp
int3
lods
stos
mov
nop
pop
das
adc
xchg
sbb
insb
push
xchg
fstpt
and
data16
mov
rcrb
jo
jno
dec
mov
scas
les
ljmp
dec
rcl
dec
int
push
lret
imul
dec
frstpm(287
jb
stc
insl
ret
mov
movsb
gs
sbb
jnp
les
push
iret
mov
in
mov
jne
lahf
call
sbb
cli
cmp
imul
rolb
push
jbe
sub
rcr
mov
push
jnp
xlat
jae
mov
or
and
daa
clc
mov
leave
push
insl
adc
cmc
int3
mov
push
repnz
push
pop
movsb
notb
cmp
imul
add
fs
add
fsub
negb
ss
repnz
xacquire
emms
push
push
cmpb
sahf
push
neg
dec
test
mov
add
ja
scas
xchg
rcrl
test
pop
push
xchg
push
jno
imul
adc
ljmp
dec
mov
mov
insl
add
lods
sbb
lret
mov
int3
jae
pop
decl
inc
repnz
push
je
mov
inc
adc
mov
in
out
mov
pop
imul
mov
mov
adc
sbb
inc
sbb
inc
sub
mov
dec
outsb
xchg
repz
mov
dec
jp
cwtl
mov
cmp
leave
mov
jge
inc
dec
mov
clc
stc
jns
mov
pop
ret
mov
enter
hlt
les
ret
adc
add
lds
gs
jno
mov
fsubrs
cmpsl
sbbb
das
xorl
shl
inc
jl
pushf
add
add
xor
sbb
jmp
js
mov
adc
mov
sbb
scas
loop
sbb
cmp
add
lods
inc
mov
leave
xor
stos
or
pop
ljmp
in
ret
loop
push
mov
insb
or
xor
sub
and
cmpsb
dec
inc
aas
inc
or
pop
mov
sub
out
sub
or
push
or
fimuls
or
adc
add
inc
aam
int
xor
jl
push
push
xlat
and
insb
ds
mov
je
out
shll
xchg
shl
popf
dec
pop
dec
adc
fs
outsl
outsl
adc
xchg
add
movsl
mov
pop
aam
mull
mov
cmpsb
cmp
in
sub
scas
mov
xchg
xchg
push
gs
push
xchg
inc
push
std
icebp
leave
popa
mov
mov
adc
add
les
mov
dec
repz
jmp
sti
sti
lahf
fwait
out
cs
data16
dec
jnp
mov
outsl
add
jg
lret
push
insl
sti
scas
push
rorl
sbb
or
jp
mov
fistpll
setnp
push
stos
test
lock
outsl
stos
xor
dec
cmp
dec
daa
inc
sub
xchg
int
sub
test
lea
js
fidivl
int3
das
dec
repnz
icebp
loope
sub
les
roll
shr
call
dec
cmpsl
iret
cmp
and
and
cmpsb
cmc
xchg
dec
cwtl
and
cwtl
sbb
inc
inc
mov
pop
nop
fisubl
test
push
inc
inc
inc
mov
push
sub
sbb
adc
jae
sbb
movsb
pop
adc
xor
fistps
inc
subl
mov
repnz
repz
in
and
fstps
lods
pop
cmp
jo
dec
add
pop
cmp
xorb
loope
pop
jg
insb
add
push
shlb
ret
adc
cmpsb
push
xor
inc
lock
mov
cmp
pop
xor
sub
mov
push
sahf
test
lahf
adc
ret
cmp
sub
push
cmp
push
es
cmpsb
insl
xor
test
jnp
or
aaa
testb
inc
sahf
pop
or
ret
inc
sarb
cmp
dec
into
or
stc
cli
dec
cs
je
and
in
push
imul
pop
gs
add
loopne
dec
push
jmp
and
sub
lds
fmuls
fimull
or
movsb
mov
xchg
inc
sub
nop
lahf
jns
fidivs
dec
lcall
in
stos
push
test
inc
aam
iret
push
incb
add
pusha
mov
or
xor
xchg
pop
sub
add
xlat
test
inc
aad
es
sub
iret
mov
and
ret
or
cwtl
add
jmp
add
and
out
cli
lods
mov
je
nop
cmc
mov
or
cmp
iret
mov
sbb
mov
ja
pop
lret
daa
shl
or
lock
loopne
js
pop
bnd
notb
pmaxsw
jg
fldenv
ja
int3
icebp
bound
pop
inc
mov
adc
xchg
jo
decl
ljmp
out
sub
inc
inc
orb
sub
sub
push
push
test
add
sbb
les
mov
cli
aaa
orl
mov
cld
ficoms
or
lods
xor
sub
mov
ds
stc
adcb
cltd
mov
in
adc
push
push
pop
xlat
sub
cmp
or
test
daa
shrb
xor
shlb
ja
call
or
out
ret
push
imul
xchg
leave
cmp
adc
sbb
lret
fildll
cmp
aad
repnz
mov
popf
mov
sarb
icebp
sub
pop
add
jo
lods
xor
add
adc
and
or
leave
int3
bound
inc
inc
cmp
into
lea
push
sub
cwtl
imul
lret
scas
pop
jnp
sub
stos
ds
sarb
enter
gs
mov
sbb
sub
push
fs
or
push
rcll
pop
out
dec
ret
jge
inc
push
pop
ret
imul
cli
stc
lcall
data16
xchg
and
popf
inc
push
sti
xchg
in
dec
shr
or
jae
adc
add
scas
pop
rcl
mov
jmp
pmulhuw
dec
push
shlb
in
addr16
add
or
jle
in
xor
movsb
cld
sub
mov
fidivrs
or
shlb
outsl
xor
jmp
and
pop
xchg
push
sub
in
in
das
addr16
push
adc
test
mov
es
add
jae
push
adc
jb
mov
lcall
inc
fidivs
dec
xor
push
jb
sub
push
inc
cwtl
in
test
in
jle
pop
imul
xchg
add
aas
gs
push
das
sarb
mov
js
mov
lcall
pop
add
or
cld
shll
aad
push
cmp
mov
inc
es
cmpsl
test
jmp
sbbl
ficomps
jno
pop
jmp
dec
std
inc
addr16
and
sub
add
or
leave
pop
mov
fmul
cmp
aad
mov
adc
add
ss
push
jno
fdivr
adc
push
lret
cld
xchg
in
push
jl
pop
popf
jp
mov
lods
mov
dec
insb
pop
out
outsl
test
in
out
lock
and
ret
xor
add
dec
xlat
ror
pop
and
mov
sub
mov
negl
sub
or
js
or
mov
lock
xchg
xchg
cld
mov
sbbb
push
fistl
mov
mov
aas
bound
cmp
ljmp
mov
mov
xorb
sub
int3
aas
ret
insl
xchg
test
mov
add
hlt
mov
push
inc
ret
jb
icebp
sbb
stos
fidivrl
or
push
out
adc
out
sub
dec
adc
test
sbb
jno
add
int3
cltd
add
lea
ljmp
aad
add
ds
cmc
lret
repnz
mov
out
fwait
jp
mov
lahf
cmp
xor
mov
xchg
jne
insl
adc
outsl
sbbb
cmp
popa
stos
cmp
sub
or
cmp
add
jmp
and
sub
mov
push
or
in
xorl
jne
insl
mov
test
loop
insl
push
fstpl
cmp
xor
jmp
je
pop
shll
push
pusha
adc
cltd
loopne
pushf
or
sbb
dec
pop
pusha
sti
repz
dec
pop
jle
dec
push
enter
scas
mov
fwait
cmpsb
int
roll
lods
dec
mov
clc
jle
outsl
lods
cld
sti
xchg
and
jmp
imul
cs
mov
mov
bound
insl
in
mov
sub
sub
ret
pop
cmpsb
repnz
sub
out
aam
push
dec
pop
data16
int
lahf
insl
push
cmp
sub
repnz
adc
xchg
movsl
mov
jbe
push
cmpsb
cwtl
inc
testb
or
adc
and
outsb
sub
shlb
push
sbb
scas
cmpsl
shr
jge
jo
jmp
je
pop
xchg
ret
lret
clc
adc
lea
adc
in
in
bound
jnp
pop
pop
xor
gs
mov
in
and
and
cmp
jne
xchg
mov
mov
fsubl
mov
pop
jmp
pop
mov
cmc
cmp
sbb
ficomps
mov
out
inc
mov
loopne
xor
insb
dec
int3
xchg
or
call
lret
inc
sub
outsl
sub
dec
and
daa
loope
push
cld
mov
ss
add
rcll
ret
jl
inc
in
repz
mull
scas
push
push
rcrl
cmp
mov
mov
mov
lret
das
stos
es
ret
shl
push
or
jmp
cli
pusha
cmpxchg
mov
mov
out
stos
in
incb
fcmovbe
out
add
pop
or
sub
fists
xlat
sbb
mov
mov
jle
push
cmp
push
in
add
jmp
icebp
out
xchg
xor
ret
imul
sub
and
lret
inc
cmp
inc
sbbb
popa
and
jl
notb
add
sbb
outsb
icebp
cmp
sub
mov
rcrl
xchg
sbb
not
mov
mov
test
ret
lret
fstpt
repz
sbb
push
leave
sub
jbe
jo
fldcw
insb
xlat
pop
jb
push
jecxz
jo
sub
cmp
loop
push
jmp
es
movsb
lds
mov
in
pusha
orl
inc
movsl
xchg
enter
pop
push
pop
fwait
pop
mov
outsb
push
pop
mov
push
ret
jmp
in
jnp
pop
scas
dec
pushl
cld
push
hlt
jb
in
mov
sub
cltd
int
cmpsl
push
lret
jb
jp
fucom
add
push
inc
mov
imul
jl
jbe
jns
mov
jg
and
sbb
jle
pop
mov
adc
aam
sbb
clc
fs
cmpb
test
push
ror
fsubrs
gs
push
inc
mov
cmp
xor
popa
adc
cmp
shll
sub
sti
xlat
test
fldz
popf
jmp
sub
std
push
std
das
out
dec
outsb
inc
cli
daa
mov
arpl
sbb
aas
add
decb
outsb
inc
sbb
dec
into
cs
xlat
pop
pop
xorl
std
mov
add
xchg
imul
pop
pop
adc
and
and
jae
xchg
mov
sbb
sub
and
iret
mov
cltd
inc
add
lret
neg
dec
iret
aas
pop
mov
shll
pop
outsl
popf
leave
pop
add
mov
inc
or
ret
lea
outsb
aas
icebp
adc
sub
lock
popa
fadds
nop
jl
mov
ja
testb
xchg
aas
sub
sub
hlt
in
xchg
push
xlat
in
xlat
cmp
loop
xor
nop
enter
push
jae
mov
and
popf
pop
push
lcall
fnstcw
sub
out
rclb
aaa
push
mov
mov
cmp
cmp
and
or
xor
movl
jo
das
pop
adc
insl
jne
cmc
cmpsl
dec
dec
cmp
xchg
cli
add
jmp
and
and
and
xchg
js
jle
xchg
cmp
cmp
popf
lods
pop
inc
ret
adc
and
sub
leave
sti
push
push
mov
inc
inc
mov
shrb
sub
xchg
and
jl
inc
iret
sub
sub
mov
cmp
arpl
xor
into
and
mov
push
sbb
push
sub
divl
xchg
ds
adc
fs
scas
sbb
jl
jl
ja
jbe
into
xchg
cmp
and
mov
push
mov
cmpsb
popa
push
pop
push
iret
pop
movsb
les
xchg
loope
ret
and
add
jo
push
out
mov
xor
stc
mov
test
push
mov
xchg
mov
test
cld
pushf
cmp
imul
push
fdivp
fsubl
loope
mov
mov
in
sbb
lcall
mov
mov
pop
xchg
inc
loope
or
jae
arpl
xlat
mov
ja
jbe
xor
daa
xorl
mov
mov
stc
mov
divl
xchg
jne
mov
out
pop
fsubs
sahf
mov
aad
pmullw
push
ss
pop
loope
cli
xor
push
jne
cld
xor
cmp
push
pusha
jp
jecxz
push
aad
fwait
lock
shlb
xor
jns
test
outsb
popa
std
cmp
ret
aas
faddl
or
lods
or
dec
mov
popa
ljmp
dec
cld
fdivl
inc
mov
add
call
icebp
pop
mov
push
data16
sbb
xor
orl
push
cmp
dec
sub
into
loopne
test
xor
test
data16
mov
cwtl
push
adc
pushf
mov
sbb
loop
call
sahf
dec
mov
sbb
inc
subl
or
mov
je
xchg
xchg
pop
shlb
stc
cmp
lods
pop
mov
iret
scas
cmpb
push
in
xchg
stc
fwait
xor
or
jmp
js
loopne
push
in
test
cmp
orl
add
outsb
in
scas
divb
clc
mov
es
cmp
mov
xor
sub
xchg
popf
sub
test
jl
sub
sbb
movsb
pop
add
dec
xchg
stc
rorl
scas
leave
mov
lret
neg
xchg
mov
std
push
and
mov
pusha
ds
pop
push
dec
movsb
push
in
out
cmp
insb
push
adc
mov
or
push
out
xor
int
aad
sti
push
xor
popf
mov
js
push
pushf
dec
mov
int
and
jp
rolb
jns
jne
xor
clc
jmp
push
xor
add
scas
and
mov
pushf
jmp
cwtl
pop
lea
pushf
xlat
popf
into
fdivrl
fwait
jae
or
jmp
flds
push
stc
test
xlat
leave
data16
add
cwtl
inc
push
mov
sbb
mov
xchg
int
pop
pop
insb
jb
sub
cmpsb
xor
mov
ffreep
push
call
xchg
xchg
push
adc
add
cmpl
xchg
xor
jmp
dec
das
aam
push
arpl
sub
xor
sahf
rcll
imull
insb
jnp
inc
scas
inc
rorb
jl
and
pop
mov
cmpsb
jnp
aam
cwtl
cli
mov
repnz
mov
inc
fnsave
cmp
sub
mov
aas
jo
pushf
shr
and
call
mov
ror
add
and
dec
sub
cli
into
nop
inc
imul
and
enter
daa
hlt
inc
mull
add
cltd
sbb
popa
xor
loop
add
push
fnstsw
ds
cmp
enter
int3
in
dec
inc
pop
inc
sub
iret
cmp
xor
insl
les
movsl
fadds
adc
pop
inc
incl
mov
cmp
mov
jl
xchg
arpl
mov
ret
mov
movsb
pop
push
push
lcall
mov
repz
ds
stos
adc
dec
push
lods
outsb
jle
xchg
bound
inc
lea
add
cmc
aam
jmp
ret
push
lods
add
push
push
ss
mov
bound
hlt
sub
inc
mov
jae
mov
rol
mov
lock
inc
pushf
jb
add
adcl
aas
js
or
jge
rcll
cmpb
cmp
sub
leave
aad
stos
cmpsl
insb
or
sbb
xchg
clc
addl
sar
std
cs
rcl
out
scas
js
std
imul
mov
lea
stc
lods
inc
inc
pop
mov
jne
sub
jo
push
out
sub
scas
mov
outsl
inc
inc
mov
cld
clc
mov
adc
xor
cmp
xchg
sbb
imul
sahf
sub
ja
mov
imul
clc
insl
test
or
inc
lahf
add
mov
addb
stos
sbb
rcll
xchg
shrl
mov
mov
push
out
inc
xchg
cmpsl
xor
pop
jne
add
jo
fadds
sbb
addb
jl
mov
es
push
fisttps
inc
cmp
les
mov
mov
subb
int3
mov
lcall
cs
out
ret
data16
notb
mov
jmp
enter
movsb
fiaddl
movsb
inc
sahf
adc
cmp
xor
outsb
into
cwtl
leave
dec
in
add
shl
movzbl
mov
pop
dec
hlt
lods
and
addr16
mov
mov
mov
mov
or
popf
cmp
pop
push
les
sbb
ja
imul
or
adc
ja
cmp
push
jecxz
cmc
pop
popf
outsl
jmp
sahf
jo
cltd
push
loopne
mov
cmpsb
mov
inc
pop
mov
loop
inc
gs
cmpsb
ret
inc
mov
std
inc
xor
dec
lcall
pop
fisubrs
sarl
sub
ret
outsb
mov
cld
xchg
mov
subl
push
scas
jg
inc
popa
xchg
fidivs
test
rorl
cmp
rorl
cs
mov
jmp
dec
dec
shl
cmp
cmpsl
lahf
mov
mov
sbb
sub
dec
xlat
stos
repz
xor
cmp
or
enter
push
dec
cmpsb
ljmp
pop
jl
idivl
aad
idiv
pop
test
or
div
nop
pop
fcoml
pop
push
fs
xchg
cmp
add
fxam
and
call
dec
dec
fwait
inc
out
jnp
aas
in
ret
jecxz
xchg
xchg
inc
call
adc
imul
fildll
or
inc
and
lds
movsb
pop
cwtl
push
bts
mov
cli
fs
fistps
cmp
les
pop
cmpsb
mov
sbb
sbbb
jmp
les
imul
aas
jae
enter
or
in
imul
mov
jecxz
push
sub
cmp
push
push
insl
xchg
inc
sahf
xchg
ds
mov
pop
bound
sub
fsubrl
jne
add
mov
cmp
cltd
lods
xchg
inc
and
adc
mov
aad
bound
fldcw
pushf
andl
cmp
lret
lods
push
ret
rcll
add
mulb
mov
loope
ss
imul
adc
xchg
in
sub
cltd
jae
xchg
inc
jno,pn
idivb
int
jbe
scas
rorb
xor
jle
int3
fidivs
iret
fucomp
dec
dec
jne
hlt
dec
inc
andb
out
ret
add
fmulp
cmp
dec
mov
adc
xchg
or
push
ljmp
ds
cwtl
aam
push
sbb
xchg
aam
cmpsb
dec
sar
imul
dec
mov
mov
int
or
sbb
push
rcrb
dec
xchg
pop
lret
jle
or
rcl
fbstp
mov
mov
xor
dec
add
mov
dec
cwtl
xchg
scas
rcr
cltd
lret
push
outsl
pop
fwait
jmp
push
stc
pusha
clc
cli
cmp
cld
inc
inc
int
and
rclb
loop
push
inc
pusha
and
mov
sub
scas
test
or
lods
int
gs
pushf
xor
inc
jns
push
fcmove
xlat
xchg
or
xor
loope
ds
ror
lods
insl
dec
add
shlb
es
test
test
sub
mov
inc
sub
adc
andl
cmp
insb
and
jo
xchg
pop
lods
cmp
addr16
mov
std
mov
scas
mov
sub
xorl
jl
fistpll
mov
adcl
pop
and
cmp
mov
xor
int3
pop
mov
jo
jbe
lock
enter
push
mov
xor
outsb
mov
mov
in
xor
inc
ja
lds
push
inc
jmp
rolb
push
mov
ja
negb
push
xor
lret
rorl
mov
sub
cmpb
cwtl
loopne
rclb
insb
lcall
pop
popa
fwait
das
adc
insl
sbb
cltd
std
mov
and
mov
ret
mov
cld
mov
hlt
fwait
jb
inc
ljmp
mov
rcrl
loop
out
ret
jne
inc
mov
stos
cmp
sar
ret
hlt
and
es
ds
adc
out
adc
pop
xor
fsubl
pop
jae
inc
incb
stc
lods
or
in
xor
pushl
fnstenv
or
add
jg
shlb
jo
pop
cli
int3
add
adc
push
loop
inc
adc
rorl
fnstsw
jle
scas
fwait
mov
or
out
xor
xchg
bound
xor
cmp
adcb
scas
pop
push
and
into
add
ret
call
fwait
inc
xchg
and
jne
mov
xor
jo
inc
or
dec
push
jp
dec
test
pop
test
das
xchg
add
lea
sti
jnp
pop
outsl
adc
or
xorl
cs
arpl
push
add
mov
out
nop
push
jmp
ja
pop
push
ds
ljmp
call
push
insb
push
add
mov
cwtl
dec
je
std
gs
cmp
ror
cmc
xor
mov
pop
push
push
test
es
xor
pop
xor
sub
scas
decb
sbb
ret
cld
xchg
adc
xor
jae
inc
pop
jb
xor
loope
stos
into
jge
es
add
mov
es
mov
xchg
into
push
sub
cmpsl
test
mov
push
ds
jge
shl
mov
and
sbb
imull
jo
dec
imul
stos
push
dec
jecxz
mov
push
xlat
fsts
int3
mov
lcall
add
and
jb
andb
lcall
bound
je
repnz
inc
shrl
shll
sub
mov
lcall
pop
mov
xor
and
dec
or
push
lret
repz
inc
mov
sub
shll
popa
xor
hlt
mov
push
mov
jmp
mov
orl
rcr
sti
sub
ret
je
push
fcomps
jae
ret
push
sub
and
or
jb
pushf
inc
ds
mov
ret
jle
out
psubusw
lods
add
andb
sbb
lods
js
mov
popa
jle
testl
iret
inc
jno
and
repz
add
les
and
movsl
push
mov
jg
clc
leave
enter
adc
lcall
pop
cltd
test
sbbl
push
pop
mov
mov
inc
adc
jbe
jae
insb
sub
sbb
adc
xchg
lahf
jmp
arpl
lods
xchg
int
int
js
out
mov
jae
arpl
jbe
test
imul
push
mov
insb
cmc
fists
ret
cli
stos
mov
push
or
repnz
and
xor
jge
sub
bound
mov
add
lock
cld
adc
pop
mov
pop
fidivl
lds
cmp
ret
hlt
fldcw
xchg
mov
cmp
lods
dec
cmpsb
repnz
mov
fistps
pushf
pop
xchg
push
idiv
dec
out
dec
push
cli
mov
cmpsb
jg
ffree
jb
shl
push
jno
xchg
and
sub
xchg
add
pop
adc
fmulp
rorl
mov
mov
mov
push
xor
add
dec
icebp
stc
xor
dec
stos
xorb
scas
in
test
scas
scas
leave
and
dec
jno
and
or
dec
mov
jp
push
cwtd
and
frstor
jmp
push
fnstenv
dec
mov
dec
xchg
jle
pop
int
sbb
lret
mov
adc
les
adc
sbb
lds
outsl
jne
lods
lcall
jge
clc
jecxz
xchg
dec
jns
test
stc
aad
mov
cmpsl
sub
mov
xor
pop
inc
in
sub
out
mov
mulb
pushf
or
inc
js
and
jp
pop
mov
dec
adc
cli
mov
fsubs
int
sub
scas
push
in
int
sub
inc
fildll
or
mov
out
add
dec
or
pop
into
mov
stc
or
push
in
jbe
addr16
scas
daa
inc
xor
ret
iret
xor
div
and
inc
cltd
cmpsb
adc
or
imul
pop
pop
shrb
xchg
mov
jnp
popa
mov
fdivs
jae
inc
stc
ja
in
mov
lods
pop
shll
or
inc
pop
mulps
add
sbb
push
jle
leave
ss
or
adc
ficomps
inc
or
mov
sbb
xlat
cltd
push
roll
pop
popa
mov
cli
cwtl
cwtl
roll
xchg
int
loop
jecxz
insb
mov
jnp
cmp
adc
add
hlt
add
outsb
jo
daa
add
mov
iret
cmpsl
addr16
inc
ret
ljmp
leave
pop
scas
or
mov
mov
push
lahf
cmp
into
push
mov
movsb
out
int
xchg
mov
xchg
jle
mov
add
insb
scas
mov
stos
adc
std
in
test
xor
inc
xor
and
dec
xchg
jb
cmp
push
adc
enter
xor
roll
mov
outsl
or
andl
xchg
mul
inc
adc
repnz
xor
bound
mov
icebp
aad
push
pop
test
sbb
lock
push
cmp
lcall
jnp
pop
in
push
frstor
cmp
ret
push
mov
add
cmc
lahf
adc
adc
jae
stos
out
leave
aaa
cmpsl
pop
pop
adc
fsts
jns
xlat
ss
pushf
jl
pop
adc
js
into
cmp
lret
pop
adc
pop
jp
lret
mov
adcl
mov
mov
stos
pop
pop
add
sbb
in
push
sub
and
fsubrs
pop
mov
daa
and
inc
inc
cltd
pop
rcrl
inc
mov
dec
and
xchg
mov
mov
adc
xlat
cmpsl
loope
adc
xor
xor
or
push
loop
fwait
mov
adc
and
mov
sar
add
sbb
add
dec
sub
push
mov
aam
cmp
xor
sbb
push
jmp
stos
or
sbb
xor
xchg
popa
addr16
adc
fildll
sub
mov
cmpsb
cmp
xchg
xor
inc
arpl
lcall
jne
cwtl
shl
sbb
lahf
notb
cmp
or
filds
addr16
shll
popf
mov
leave
into
xchg
xchg
cmp
push
rolb
cmp
pop
jbe
inc
test
in
ja
mov
lods
push
dec
mov
loope
cltd
ret
out
mov
test
push
push
inc
fsubp
jmp
ja
dec
xchg
and
push
or
xor
fidivrl
lods
and
data16
dec
daa
test
in
mov
sub
leave
popf
das
stc
jecxz
pushf
sub
add
lahf
sub
pop
out
jl
inc
cmp
je
pop
mov
xchg
cltd
icebp
mov
cmpl
rcrb
push
mov
mov
pop
out
test
daa
aad
cmc
and
jo
inc
fsubs
mov
out
pushf
xchg
mov
adc
lock
popa
xor
mov
in
out
xor
jle
aaa
bsf
scas
mov
jmp
fdiv
push
inc
or
cmpb
cli
mov
cmp
mov
sub
ds
fsts
lock
mov
fdivrl
sahf
imul
pop
xchg
movsb
data16
push
push
sbb
or
push
das
enter
fistl
mov
int
movsl
cmpsb
mov
lea
imul
pop
test
stos
aaa
push
out
push
cmc
xor
inc
decb
sbb
xchg
cli
mov
in
fnstsw
sbb
jae
adc
fiaddl
or
jae
mov
mov
jno
iret
cmpsb
mov
mov
cmp
aam
insl
xchg
mov
out
pop
stos
mov
sub
xchg
or
sbb
cltd
repz
xchg
xchg
add
mov
out
stos
xchg
dec
jno
ds
sub
sbb
out
sbb
mov
shll
mov
loopne
andps
pushf
push
sbb
mov
sbb
cmp
jp
push
daa
clc
mov
adc
mov
mov
cmp
mov
dec
aas
mov
mov
mov
icebp
ret
push
adc
pop
jmp
pop
inc
mov
pushf
test
sbb
jp
js
xchg
out
adc
lret
mov
cmp
and
pop
ljmp
shrl
sub
arpl
xor
add
loope
push
das
adc
mov
les
lcall
mov
mov
in
push
push
arpl
push
stc
jge
xchg
and
mov
adc
fcomps
push
mov
push
mov
call
popf
mov
icebp
movsl
mov
or
mov
xor
pop
cmc
sub
pop
cmp
jns
icebp
jecxz
xchg
push
sbb
lods
bndldx
fwait
sbb
jo
jecxz
aad
xchg
loopne
dec
mov
push
push
aam
loopne
xchg
stos
cld
push
xor
jnp
popa
jge
clc
xchg
in
pusha
sti
and
fldcw
neg
in
sub
test
cmc
xchg
and
or
fisubrs
and
pusha
nop
movsl
lods
faddl
adc
jecxz
xchg
push
dec
jp
movsb
jnp
int3
popa
jl
arpl
mov
inc
sub
loop
es
cmpsl
nop
sbb
in
xor
mov
dec
ss
vpmaxsw
sub
stos
mov
call
mov
mov
push
cltd
inc
mov
xorl
scas
add
nop
xchg
xchg
test
xorb
mov
je
pushf
mov
inc
es
lds
mov
or
aas
jl
cs
cmp
push
roll
jbe
outsl
jle
shr
push
xlat
mov
nop
ret
je
add
cmp
fwait
add
jl
out
push
jg
data16
fdivs
fwait
cwtl
jp
bound
jbe
adc
sbb
inc
fstps
addb
mov
cltd
std
rorb
jge
clc
in
xor
jnp
pop
dec
dec
add
push
int3
movb
mov
xchg
and
mov
setns
adc
clc
and
sub
xor
loopne
mov
je
nop
and
or
cmp
sbb
cmp
mov
aam
jp
jns
frstor
movsl
dec
or
and
ljmp
call
js
idivl
loope
push
pop
sbb
call
mov
mov
rclb
jns
push
cmp
lcall
xor
push
outsb
fcom
icebp
pop
in
add
push
daa
je
adc
adc
jns
mov
pop
insl
imul
mov
push
and
out
xorl
frstor
aad
fadd
movsb
dec
cltd
sarl
mov
lret
enter
es
push
fistl
mov
and
sbb
fsts
aaa
cmpsl
data16
xchg
mov
or
lods
jo
jmp
scas
jo
inc
mov
popa
testb
imul
fnsave
add
ljmp
lret
cmp
arpl
or
and
leave
enter
movb
sbb
add
shrl
xor
add
ret
jle
idivl
dec
push
mov
mov
clc
dec
xchg
outsl
inc
xchg
inc
push
jl
pop
push
xor
dec
push
jo
push
imul
ret
inc
jo
pop
sarb
int3
loop
sub
mov
mov
mov
sub
loop
enter
dec
leave
call
xor
xchg
and
test
in
mov
bound
and
icebp
push
lahf
xchg
mov
sbb
or
xchg
xor
sub
jbe
arpl
cwtl
sti
ds
adc
sub
movsb
adc
mov
mov
mov
lahf
jle
and
pop
ficomps
push
dec
push
lds
out
xlat
dec
ds
sbb
lcall
into
rclb
pop
xchg
pop
mov
jg
mov
cmpb
and
rorl
or
imul
cltd
repnz
sbb
cltd
repnz
jnp
sti
imul
xchg
cmp
mov
cmc
mov
daa
sbb
push
fsubrl
sti
xchg
and
add
and
imul
dec
rcrl
jmp
in
nop
pushf
mov
xlat
mov
jns
outsl
imul
mov
ja
mov
lods
and
loope
or
xlat
call
push
push
ljmp
jecxz
rclb
push
lahf
mov
aaa
lret
xor
add
addr16
js
stos
add
mov
xchg
pop
lret
cmp
xor
push
inc
cld
shl
xchg
push
dec
pushf
jl
dec
rclb
popa
cmp
dec
adc
xchg
jmp
sub
inc
jae
xchg
addl
cld
testl
pop
lret
cmp
cmpb
dec
dec
push
or
lods
ss
push
xor
and
pop
sub
sub
add
mov
cltd
sub
imul
mull
in
iret
fiadds
fadd
sbb
das
sbb
xor
clc
or
jne
fidivrs
fildll
dec
push
cmp
loop
pop
int3
xor
imulb
sub
stos
push
mov
and
notl
nop
add
out
ficompl
data16
test
mov
in
stos
sbb
cld
bound
pop
nop
cmp
or
cmp
int
movsb
cmpsl
push
pop
rol
mov
add
cs
les
xchg
rcl
ret
push
outsb
fistps
sub
ret
and
jo
fdivrp
xor
adc
dec
in
fdivl
xor
jbe
lret
adc
aam
pop
imul
outsl
sbb
mov
dec
mov
jo
jb
cwtl
ret
movsb
xor
pop
mov
test
les
push
cmpsl
shr
sar
into
pop
imul
pop
test
pop
xchg
roll
add
cmpsl
inc
lahf
leave
out
testl
loop
xor
rcr
push
jns
or
cmpsl
mov
clc
mov
ret
cmp
sbb
dec
lcall
fidivs
xor
dec
lock
mov
daa
jns
enter
xchg
add
xchg
imul
int3
lahf
fcomps
cltd
incl
mov
cmp
or
xchg
adc
lods
or
les
push
mov
mov
cmc
sub
cmp
xchg
std
dec
aad
mov
lret
scas
mull
mov
mov
mov
sar
cltd
jae
pop
outsb
sarl
adc
or
mov
and
addb
sbb
addr16
dec
in
loope
out
outsl
in
inc
inc
cmp
mov
cwtl
loop
fs
xor
mov
insl
cmp
mov
into
pop
mov
bound
ss
dec
daa
lock
rolb
xchg
ja
push
jnp
ja
push
add
or
leave
std
push
nop
dec
adc
lret
dec
pop
insb
test
in
inc
mov
mov
jno
shrb
loope
mov
xor
fiaddl
xlat
sub
js
jo
incl
add
into
fstpl
dec
addr16
jge
pop
aas
ret
rcrb
pop
push
jp
icebp
or
sti
cmp
xor
call
fldenv
imul
ljmp
pop
sbb
mov
cmpl
xor
xchg
jmp
or
mov
mov
sbb
stc
and
dec
xor
jg
cmp
lea
icebp
xor
jmp
cwtl
lret
add
push
add
ja
cs
sbb
hlt
rorb
fsubs
pop
stc
dec
cmp
out
inc
pop
or
mov
push
pushl
test
mov
ret
jb
test
jns
push
dec
aaa
xchg
outsb
fcmove
push
push
push
mov
cld
divl
xchg
dec
stos
sub
cmpsl
xlat
and
jns
mull
rol
enter
pop
repnz
xchg
and
in
popa
or
xchg
xlat
rorb
mov
add
dec
loop
cli
pop
jecxz
lret
jmp
arpl
lods
lods
call
adc
pop
dec
or
jae
jmp
push
or
test
test
bound
ret
fwait
mov
mov
or
pushf
dec
jmp
in
inc
mov
lea
adc
outsb
mov
or
jl
xchg
clc
pop
incb
bound
mov
mov
stos
aad
cmc
dec
sub
out
xchg
add
cmp
lahf
xchg
mov
xor
mov
repnz
mov
pop
lret
sbb
aas
jl
pushf
jp
mov
xchg
adc
mov
out
sbb
add
sbb
xor
popa
dec
dec
xor
mov
push
in
xchg
in
insl
and
push
pop
jnp
dec
mov
loop
imul
push
cmp
ja
scas
imul
cmp
jo
push
adc
loop
jns
inc
bound
std
pop
mov
sbb
sahf
subb
cmpsl
jmp
pop
xchg
dec
inc
cmp
shll
lahf
mov
ja
lret
fistps
or
sahf
lcall
pop
xlat
fs
xchg
mov
xchg
pop
dec
rolb
outsl
mov
push
cmpb
inc
fwait
sub
sbb
cmc
inc
mov
les
pop
int
and
inc
out
sbb
add
push
les
outsb
jo
push
pop
sub
jbe
test
test
loope
leave
out
push
cld
test
push
and
adc
sar
jecxz
mov
aas
sub
insb
ret
cmc
pop
xor
jge
mov
lea
and
pop
push
movsb
xlat
mov
mov
or
push
jbe
hlt
shlb
faddp
pop
adc
xorb
or
and
sub
gs
stc
je
out
mov
aas
out
mov
sub
addr16
cwtl
sub
inc
test
sti
stc
sti
xchg
out
or
stos
aad
scas
push
jne
loop
inc
push
mov
jmp
xor
mov
add
or
loopne
mov
imul
imull
loope
sbbl
pop
and
mov
mov
push
jb
sti
aad
fnsave
adc
jg
fdivs
add
jmp
sahf
outsb
dec
or
sbb
cmp
mov
cmpsl
es
movsb
in
sbb
push
cld
cmpsb
fimull
adc
xchg
push
out
pop
pusha
repz
pop
stos
dec
or
gs
jmp
or
sub
push
stc
jne
cltd
scas
ljmp
cmpl
sub
xchg
inc
mov
mov
icebp
xlat
and
push
pusha
adc
negb
stos
pop
aad
mov
push
cltd
jbe
pop
add
negb
stos
mov
rcrb
sub
pop
aad
mov
shlb
ficompl
mov
xor
stc
cmp
leave
jb
xor
inc
out
outsb
repz
out
aam
into
call
movsl
cwtl
mov
fnstcw
mov
inc
and
sbb
loopne
call
ja
sub
push
lods
sbb
xor
sbb
xchg
adc
sbb
push
lods
std
or
cmp
repz
jge
push
pop
lods
inc
push
mov
dec
pop
cmp
out
jl
cmc
neg
data16
loopne
add
pop
aas
enter
shll
sbb
sub
jnp
mov
cmp
enter
in
and
stc
push
or
es
pop
sub
xor
add
js
cltd
fildll
pop
push
or
repnz
bound
cmp
sbb
subb
scas
push
out
mov
push
push
lods
and
add
fldl
call
or
sub
imul
lds
icebp
cltd
mov
fucomp
push
mov
hlt
adc
movsl
je
in
mov
sti
and
test
cmp
mov
inc
mov
je
or
pusha
outsl
cmpsl
stos
lret
adc
lea
lret
inc
repnz
addr16
lock
adc
jno
mov
jbe
sub
add
mov
mov
push
dec
fiadds
ret
sub
aam
cmp
mov
fcoml
dec
pushf
adc
inc
leave
adc
inc
push
adc
aas
sub
out
inc
jge
sbb
xchg
in
jbe
insb
call
xchg
idivb
das
in
xor
or
push
mov
inc
sub
adc
lds
xchg
xchg
inc
call
shll
lods
mov
cmp
jmp
sahf
subb
outsl
and
subb
aaa
sub
and
fildl
in
repnz
mov
test
pop
cli
push
sbb
sub
mov
sub
movsl
aas
mov
jmp
out
adc
movsb
xchg
sbb
lods
frstor
push
mov
dec
loop
jecxz
mov
mov
and
xchg
lds
lcall
sbb
gs
mov
sarl
insb
adc
in
jne
xorb
leave
js
xchg
negl
xor
add
pop
mov
lds
sbb
and
dec
stc
jle
popa
in
test
sub
dec
or
jl
lret
push
xchg
popa
lods
test
push
mov
push
mov
push
or
sbb
shrb
das
ja
test
orb
xor
adcl
mov
ja
mov
push
xchg
pop
or
sub
test
mov
push
or
jae
sbb
or
imul
aam
daa
andl
or
mov
je
lret
jb
scas
sbb
inc
adc
and
push
jmp
pop
mov
std
idivl
push
movzwl
fsubr
int
dec
inc
jl
mov
push
filds
or
iret
push
mov
xchg
cwtl
leave
jnp
cltd
xchg
adc
cli
cltd
das
loopne
aad
or
pop
dec
xchg
arpl
jo
mov
push
scas
es
insl
mov
std
cli
mulb
js
xor
pop
jp
add
adc
pop
int3
les
shl
xchg
sub
cltd
fistpll
fwait
int
and
bound
insl
out
pop
test
insb
push
mov
fisubs
psllq
adcb
mov
adc
jge
mov
rcrb
imul
pop
leave
test
mov
sbbl
xor
and
mov
sub
hlt
adc
inc
clc
mov
push
shll
xchg
and
mov
push
test
leave
shlb
and
mov
out
sbb
lcall
jne
mov
push
cltd
test
clc
adc
jne
jp
cld
in
jno
adc
xchg
pop
inc
pop
adc
cmc
das
xor
aam
cs
shl
pop
push
xlat
lock
popa
in
iret
inc
mov
mull
call
stos
in
inc
leave
lds
sub
adc
cwtl
adc
pop
enter
aad
das
and
inc
sbb
dec
imul
int
adc
mov
arpl
add
jb
fsubrs
es
adc
pop
in
movsl
pop
adc
xor
fnstsw
jp
sbb
inc
push
arpl
jge
ret
xchg
mov
je
cmp
sbb
push
scas
cld
insb
repnz
or
mov
push
imul
daa
rcl
int
mov
mov
inc
adc
mov
xchg
ficoml
mov
and
push
xor
mov
sbb
into
mov
ljmp
divb
dec
pop
xchg
jb
scas
and
xor
bound
and
insl
xor
stc
jae
or
xchg
jb
dec
fs
lret
aaa
xchg
scas
add
cltd
sub
loope
ja
mov
loopne
popa
mov
inc
pop
jbe
push
movsl
add
shlb
inc
jb
add
adc
addb
cmp
cmc
xchg
cmp
fimuls
cld
lcall
xchg
sahf
mov
ds
in
push
xchg
repz
push
test
mov
ja
xor
icebp
mov
mov
dec
push
fdivr
cmpb
loope
lock
fistl
insb
incb
rcrb
push
pop
inc
leave
cmpsb
sahf
and
add
and
cmp
xchg
add
stc
rolb
dec
movsl
loopne
xchg
add
popf
adc
xchg
in
loop
jbe
xor
aas
and
test
inc
xor
mov
cs
std
shr
and
and
movsb
push
sbb
mov
je
lods
repnz
ja
mov
ds
cmpsl
or
repnz
inc
fidivrs
mov
and
scas
add
jg
mov
mov
imul
mov
aam
or
add
iret
xchg
jnp
jg
sti
cltd
cmp
test
cld
notb
inc
sbb
jl
subl
add
loope
sarb
mov
mov
fs
lahf
cmp
lret
cmp
test
test
xchg
fcompl
adc
jecxz
adc
shlb
repnz
sub
sub
xor
mov
imul
jg
add
or
addl
mov
cwtl
dec
repz
cs
xor
pop
sbb
pop
adc
dec
das
push
jge
dec
xlat
or
fiadds
mov
xor
xor
ss
add
fwait
lods
adc
mov
xor
mov
jle
pop
push
aad
xchg
fldl
inc
lock
push
gs
xchg
popa
pop
mov
les
xchg
jo
xchg
jbe
and
lock
div
mov
jae
stos
loopne
orl
es
ficomps
lods
mov
andl
ror
orb
enter
xor
xchg
aas
sbb
das
push
adc
repz
rolb
jno
lods
std
rcrl
sbb
sbb
icebp
jge
sub
mov
scas
push
cld
cmc
nop
lock
inc
cld
or
mov
sub
and
cmp
push
mov
pop
mov
in
or
cmp
dec
scas
cmp
pop
sub
mov
icebp
jno
inc
xlat
pop
dec
xor
rcrl
adc
aaa
or
scas
fsts
scas
fldl
jbe
push
inc
aas
bound
pop
pop
pop
test
mov
adc
dec
pop
xchg
ret
sub
shrl
arpl
sbb
add
cmp
push
cmp
xor
and
test
mov
repnz
outsl
movsl
add
flds
sbb
xchg
scas
mov
inc
sbb
daa
lods
lret
add
cld
ror
in
push
fistpll
push
sbb
jb
sti
mov
sub
sub
inc
in
jl
add
push
outsb
push
jle
mov
inc
jle
jecxz
pop
xchg
push
xchg
mov
fldcw
adc
or
subb
mov
jae
out
push
cwtl
cli
inc
push
lcall
pop
add
sbb
inc
iret
sbb
dec
outsl
or
xchg
movsb
out
xlat
pop
insb
test
sbb
dec
sahf
cmpsb
jp
adcl
jnp
cwtl
push
sbb
lret
mov
cmp
fs
or
addr16
fnclex
sbb
xor
xor
not
pop
push
mov
sub
lcall
sub
jnp
sbb
dec
xor
or
push
es
push
and
push
xchg
mov
test
push
mov
out
jmp
mov
push
adc
lahf
mov
enter
sbb
mov
les
inc
or
dec
psrad
push
cmp
add
mov
std
mov
xchg
and
dec
mov
pop
pop
cli
mov
jbe
xchg
hlt
dec
or
sti
jno
fs
icebp
and
add
sbb
mov
dec
iret
jg
cmp
xor
lret
idiv
mov
rorb
and
subb
addl
jmp
push
movsb
dec
lahf
cli
mov
cli
ljmp
aad
xor
cmp
mov
insl
iret
pop
arpl
enter
cmpl
sub
aad
mov
scas
insb
cmp
mov
inc
jg
xchg
aaa
adc
mov
cwtl
fcmove
sbb
push
repz
inc
adc
into
jl
popa
add
adc
sbb
mov
mov
mov
outsb
pop
cli
mov
shlb
into
xchg
popf
aas
mov
mov
xchg
push
dec
mov
pusha
cmc
std
leave
test
push
inc
or
xchg
and
and
and
fisttps
pusha
mov
cmp
xchg
push
push
ds
popf
push
lea
cli
rclb
cmp
dec
sbb
mov
loopne
movsb
in
jmp
sub
mov
mov
stc
xor
mov
gs
int3
mov
ljmp
or
pop
dec
push
xchg
sahf
dec
cmp
mov
xor
pop
pop
jg
push
cwtl
add
mov
add
push
mov
inc
xor
ljmp
add
lahf
cmc
aaa
mov
mov
add
sbb
dec
or
mov
adc
or
push
sub
jmp
lahf
lods
adc
pop
add
pop
loope
pop
repnz
pop
or
les
cld
xchg
mov
loop
loop
stos
mov
and
stc
mov
addr16
scas
sbb
push
push
push
mov
int
jg
popf
rorl
scas
aam
gs
lock
adc
stos
hlt
push
mov
in
inc
adc
push
push
jno
cmp
movsl
pop
ds
xchg
nop
arpl
inc
pop
jno
xlat
cmp
out
xor
inc
mov
out
in
adc
inc
lock
and
fdivl
icebp
outsl
fnstsw
pop
arpl
pop
repnz
xchg
jge
loopne
jecxz
fisubl
sub
inc
cli
pop
mov
pop
xchg
mov
and
inc
pop
sti
sbb
xor
pop
in
add
jb
or
imul
dec
or
push
adc
inc
scas
sbbl
lea
shrb
adc
iret
in
lock
adc
pop
dec
setae
inc
add
xchg
fwait
adc
hlt
pop
jge
outsb
add
aaa
inc
or
push
mov
std
jnp
test
or
in
mov
fstpl
cmp
das
notl
xchg
popf
jmp
mov
outsl
loopne
sbb
shlb
xor
repz
pop
scas
inc
pop
mov
add
shl
cmpsb
std
nop
rcrl
pop
aas
arpl
cs
mov
mov
mov
pop
arpl
in
add
pop
push
add
pusha
inc
dec
cmp
jecxz
dec
sbb
decl
test
jno
mov
into
xchg
in
sbb
push
insb
in
xor
mov
xchg
repz
sub
mov
outsl
push
cs
int
sbbl
jo
lahf
out
dec
imul
or
test
mov
cmp
popf
dec
cmpsb
fstpl
fdivs
pop
in
insb
mov
push
enter
test
out
xor
fisubrs
fs
mov
jl
mov
scas
loope
je
push
jecxz
fnstsw
adc
sahf
or
sub
jg
jle
fdivs
jae
push
aaa
stos
sub
mov
std
int
xor
dec
inc
add
pop
rcl
rcrb
ds
pop
loop
dec
aaa
fcmovnb
push
outsb
cmp
daa
inc
int3
fs
insl
test
mov
xchg
stc
jb
daa
inc
mul
mov
cmp
sbb
test
repnz
bound
xchg
push
insb
int
mov
mov
mov
adc
xchg
add
mov
rcr
pop
shlb
scas
push
push
hlt
int
lock
es
movsb
mov
push
scas
pop
cmp
sbb
lcall
adc
nop
dec
icebp
sub
clc
pop
inc
mov
inc
inc
mov
pop
insb
dec
fcomps
fsubrl
movl
icebp
cmpsl
push
fstl
cltd
push
cmp
pop
adc
cmp
push
test
xor
lds
fcoml
jge
stc
outsl
inc
in
xchg
xchg
xor
pop
or
xor
sbb
nop
nop
add
cmp
int3
push
shrl
pop
adc
outsb
mov
imul
dec
call
jmp
jmp
mov
add
es
or
movsl
ljmp
inc
or
pop
dec
sahf
pop
movsl
int
and
mov
roll
mov
sbb
jnp
sbb
mov
push
out
aaa
in
push
shlb
mov
and
inc
test
add
push
int
outsl
sub
in
pop
jbe
sbb
sub
sub
inc
xchg
adc
push
xchg
push
cld
icebp
lods
dec
pop
cld
mov
or
and
push
repnz
push
push
out
ja
aam
icebp
jp
hlt
roll
cs
or
pop
aad
jle
sbb
inc
dec
stc
repz
or
sub
adc
xchg
jge
aas
leave
int3
pop
mov
iret
outsl
pop
loop
add
cmpsb
fcmovbe
push
inc
and
enter
pop
into
jae,pt
or
add
ja
cltd
std
iret
add
gs
inc
or
adc
lcall
cmp
rol
pop
scas
mov
cs
xchg
jecxz
mov
aam
pop
pop
pop
inc
cmp
cmp
in
sahf
jmp
movsl
jmp
sub
out
popf
push
inc
inc
sub
shrb
dec
xchg
repnz
dec
jno
pop
aas
mov
call
and
movsb
adcl
sub
pop
subl
and
negb
ljmp
loop
jno
les
aaa
lock
jl
jb
call
arpl
std
inc
loop
aam
inc
adcl
jno
nop
nop
sbb
imul
dec
push
addr16
lds
fmull
dec
xor
rclb
mov
fwait
lahf
inc
mov
xchg
pop
movsb
idiv
sahf
out
leave
lret
outsl
and
push
scas
jge
push
mov
loop
es
xlat
mov
lock
cmp
cmc
xchg
scas
rorl
jo
repz
cmpsb
mov
fcmovu
and
sub
push
lods
add
bound
inc
cld
mov
add
sub
mov
call
and
or
xlat
or
divb
push
mov
cmp
sbb
adc
inc
outsl
ljmp
push
imulb
test
fidivrl
xchg
std
fnstenv
mov
inc
mov
add
loopne
sub
fnstsw
mov
inc
cwtl
fistl
lods
in
inc
frstor
dec
xor
push
out
mov
es
dec
fucomi
int3
pop
in
out
cld
js
mov
int
loope
aam
ss
lods
push
pop
filds
scas
les
cld
xor
fists
mov
in
int3
out
pop
lret
dec
mov
add
loop
insl
call
jl
rcrb
pop
xchg
lahf
cmp
nop
jecxz
cmpb
pushf
imul
jae
sbb
icebp
fwait
sub
cmp
sbb
test
fbld
mov
imul
pop
xchg
push
sahf
sub
push
loopne
sbb
popa
addr16
lock
cmp
fnstenv
imul
add
push
jmp
mov
incb
adcl
stos
test
adc
mov
mov
sub
mov
cli
stc
paddsw
cwtl
mov
or
cmpsl
mov
dec
aad
repz
lret
or
add
fnstenv
mov
sahf
jmp
jmp
out
push
cmp
test
mov
mov
fcmovbe
inc
cmp
mov
shll
mov
aas
nop
adc
dec
leave
dec
and
dec
sti
cmp
mov
movsb
cmp
adc
adc
popa
shl
bswap
dec
jnp
xor
fldcw
jnp
adc
mov
inc
stc
xchg
xor
inc
mov
xchg
xchg
popa
mov
jge
nop
dec
mov
lods
imull
dec
lret
mov
xchg
fwait
push
jbe
adc
aas
mov
xchg
add
inc
jo
lret
movsl
aad
inc
js
ficompl
icebp
jge
scas
cltd
sub
jno
cmp
mov
adc
rcrl
ds
jecxz
fwait
imul
popf
inc
inc
sub
test
xchg
pop
movsl
mov
hlt
fimull
lods
pop
sbb
call
and
inc
addl
and
cs
aaa
je
sub
movsl
aam
ja
mov
cmp
stos
sbb
test
sub
mov
dec
test
and
insb
in
cltd
sbb
andl
push
xchg
movsl
out
xchg
shll
call
or
jmp
not
or
incb
xor
aas
ds
push
adc
js
xchg
in
shlb
sub
loop
inc
mov
jno
jbe
dec
pop
push
mov
jecxz
cli
stos
pop
into
adc
loopne
mov
loope
sbb
jnp
jl
clc
std
incl
pop
inc
mov
xlat
ljmp
repnz
frstor
ss
sbb
aas
mov
loop
mov
nop
adc
sub
push
xor
hlt
bound
add
popf
push
int
stos
test
mov
jge
mov
int
sbb
cmp
push
sub
std
loopne
hlt
or
mov
or
popa
fcoml
dec
push
fdivl
cmp
push
push
inc
out
cmp
xchg
pop
add
jmp
and
call
sub
inc
xlat
sub
stos
pusha
lods
cmovnp
popf
push
jb
pop
inc
jno
int3
ss
push
pop
jb
mov
je
in
adc
push
pop
cld
push
dec
shl
flds
sub
mov
addr16
outsb
jae
cmp
lock
scas
cwtl
ss
imul
scas
mov
popa
or
out
dec
sub
movsb
xchg
mov
es
lret
dec
pop
scas
push
adc
mov
int3
mov
dec
xchg
hlt
cs
pop
pop
add
iret
lret
and
repnz
enter
imul
sbb
dec
jge
push
add
movb
int3
sarl
pop
push
pusha
and
sbb
mov
mov
sbb
mov
pop
ss
pop
movsl
movsb
scas
pop
pushf
mov
testb
jecxz
jns
jmp
cmp
xchg
imul
and
mov
shlb
inc
call
ja
xchg
mov
stos
mov
xor
push
shl
and
stos
popf
ljmp
pop
sbb
xchg
data16
push
lea
pop
call
pusha
inc
stos
pop
inc
repnz
pop
scas
fildl
jbe
xchg
pop
in
call
push
stos
aad
enter
fisttpl
dec
and
cmp
jmp
sub
repz
sbb
fidivs
inc
inc
arpl
cmc
dec
mov
into
pop
push
lock
out
mov
scas
aam
push
arpl
jae
pop
mov
movsb
push
push
mov
lahf
mov
jmp
cmp
cltd
cmc
mov
push
mov
mov
push
mov
std
xchg
gs
stc
mov
adc
pcmpeqb
movsb
sbbb
mov
jle
pop
jns
cmp
and
xchg
ret
fildll
xchg
stos
inc
fcompl
cli
rcrb
mov
xor
movsb
mov
imul
lret
aad
enter
jle
dec
push
xchg
sbb
in
jnp
push
dec
jmp
jmp
cmp
loop
mov
daa
sarl
pop
or
jge
gs
or
inc
fdivrs
out
sbb
push
inc
test
outsb
shl
cwtl
mov
mov
in
loop
push
cltd
xchg
hlt
idivl
cmpl
or
je
mov
inc
mov
xchg
sahf
fistpl
arpl
in
adc
ss
push
daa
or
pushf
pop
sbb
or
cmp
inc
mov
cmp
fwait
shlb
addr16
insl
lds
les
test
sbb
pushf
push
dec
dec
xor
mov
je
fimull
mov
fbld
imul
or
add
push
sub
sahf
sub
dec
dec
or
mov
jbe
cwtl
adc
ret
mov
pop
nop
sahf
sahf
pop
sbb
rcrb
ja
sub
loope
je
mov
daa
xor
add
mov
insb
sbbl
imul
aas
lret
test
jmp
imul
push
call
push
inc
es
push
mov
stos
xor
and
mov
or
rol
xchg
xchg
test
sub
jp
adc
push
mov
sar
in
imul
mov
dec
popf
outsb
push
mov
xchg
xor
inc
cmpsb
nop
mov
jmp
mov
sbb
mull
into
roll
das
jnp
jge
sub
inc
dec
pop
loop
scas
bound
ss
js
xchg
mov
ret
or
jno
in
adc
repz
stos
loope
aam
push
inc
bndstx
inc
sbb
jge
lret
sbbl
sub
imul
xor
pop
jb
ljmp
jae
mov
xchg
dec
arpl
inc
fidivrs
stc
testl
sbb
dec
shr
inc
jnp
and
push
imul
out
das
ret
sub
xchg
es
pop
pop
fstl
jb
mov
or
out
jns
xor
adc
jns
lods
jae
xchg
jmp
mov
mov
fidivl
cmp
adc
pop
js
mull
mov
dec
movl
dec
xlat
cld
fdivr
xchg
out
repz
jae
es
lret
inc
mov
arpl
jnp
pusha
cmpsl
int3
mov
mov
xchg
xchg
movsb
pop
int
xchg
sub
add
add
int
lea
movsb
lcall
iret
cmp
pop
and
sub
pop
add
scas
inc
insl
stc
adc
rcr
inc
aaa
dec
inc
pop
flds
out
mov
repnz
mov
and
lds
lret
ret
arpl
push
aaa
lods
xchg
mov
lret
or
in
pcmpgtb
aad
xchg
clc
mov
mov
add
add
push
stos
ja
fs
mov
xchg
insl
lahf
cmp
pop
mov
xor
or
dec
int
sahf
cli
lsl
sbb
icebp
cld
and
mov
or
gs
xor
mov
mov
dec
xchg
rcrl
add
lods
cwtl
loop
arpl
dec
outsl
xorl
gs
arpl
cs
addl
sub
ror
adcb
dec
clc
mov
xchg
sub
sbb
and
jno
sbb
dec
inc
xchg
lcall
fwait
cltd
cmpsb
sti
test
mov
mov
or
jmp
jne
add
push
loop
mov
testb
jmp
mov
jmp
ficoml
test
push
cmpsb
stos
sub
pop
sub
cmpsb
movsb
in
in
adc
xlat
addr16
push
out
add
xor
orl
pop
jne
in
icebp
notl
push
fnsave
dec
mov
or
ret
sbb
test
rcll
loop
je
or
stc
dec
pop
sub
das
stos
mov
rcr
push
mov
into
or
mov
cmc
jmp
shl
xor
nop
sbb
add
xor
rcrl
mov
inc
inc
scas
dec
aam
adc
lret
int
jmp
or
ja
dec
inc
or
push
enter
enter
in
das
pop
out
les
dec
mov
cmp
pop
movsl
data16
add
das
jo
xor
pop
andl
rcll
dec
jg
pop
mov
aam
inc
jl
ds
iret
fwait
sub
les
jne
xchg
adc
xchg
jecxz
cmp
sti
pop
insl
icebp
out
inc
sbb
xor
std
pop
stos
adc
xor
inc
fcmove
mov
dec
lock
xchg
cmc
push
cmp
cmpsl
pop
ret
mov
fnstsw
data16
fwait
xlat
jne
fsts
cmp
ljmp
ljmp
mov
jae
fisttpl
popa
adc
pop
ret
repz
xchg
sbb
leave
dec
lret
mov
jecxz
shl
inc
pushf
fs
rcr
xor
adc
fidivrs
pop
sub
ljmp
shlb
bound
in
hlt
mov
jno
mov
pop
loope
das
clc
jecxz
dec
pop
arpl
es
sbb
mov
test
test
cld
mov
sbbb
lock
sti
movl
dec
je
and
sbb
aaa
sti
mov
icebp
clc
arpl
aaa
cld
stc
ljmp
pop
inc
cmpl
jmp
outsb
pop
test
mov
fbstp
xor
and
pusha
cmp
cmc
leave
sbb
adcl
or
xor
lds
push
xchg
out
icebp
xchg
lcall
rorl
pusha
fsubrl
cmc
pop
insl
sub
jecxz
call
or
test
jecxz
push
jg
lcall
aad
pop
rorl
inc
ret
push
xchg
ret
mov
mov
ss
lods
pop
mov
adcb
lret
push
sbb
cmpsb
xchg
push
sub
test
orb
cmp
mov
xchg
xchg
mov
lock
lret
outsb
xchg
fimuls
popf
aam
ljmp
das
aam
loope
dec
in
sub
inc
mov
pop
test
insb
sbb
in
jle
loope
push
jl
stos
xchg
ret
lahf
add
mov
adc
bswap
jle
sub
lret
orl
ror
mov
leave
mov
lret
hlt
ds
lahf
jmp
stc
push
ja
pusha
sub
jae
dec
ljmp
nop
mov
lret
mov
outsb
jg
ja
cmp
lds
rolb
lea
mov
loopne
dec
pop
cmp
pop
outsl
cwtl
movsl
outsl
inc
adcb
mov
pop
or
pop
mov
xchg
ds
mov
dec
test
lcall
loope
hlt
cmp
sub
ret
push
test
mov
cld
dec
mov
cmp
mov
dec
fwait
push
dec
cmp
scas
lods
daa
jno
fidivs
das
ds
cmpsb
dec
aam
std
popa
pop
inc
mov
jnp
loop
pop
stos
inc
sub
mul
push
pop
leave
dec
add
mov
fst
imul
and
and
jecxz
lcall
pop
mov
popf
jp
fwait
push
fidivl
hlt
xchg
and
mov
mov
in
test
aaa
std
and
jge
xchg
dec
xchg
sub
sbb
clc
sti
and
or
xchg
shlb
repz
xchg
jno
xchg
add
xor
xchg
cmp
cmp
in
push
lret
dec
call
stc
sub
aaa
insl
jb
pop
call
jg
cld
mov
shrl
inc
inc
ss
xor
divb
outsb
inc
insl
cwtl
xor
sub
cmp
mov
jns
xor
mov
dec
clc
add
lahf
xor
pop
movsb
int3
mov
jae
lock
dec
icebp
insb
mov
out
or
jecxz
bound
inc
cmp
xchg
and
pop
xlat
push
or
cmp
add
and
in
push
add
in
mov
sbb
cltd
xor
stc
adc
sbbl
xchg
add
mov
xchg
jne
add
xchg
adc
scas
mov
imul
mov
loope
mov
sub
jmp
xchg
andb
dec
les
pusha
test
xor
arpl
outsl
lret
movsb
and
push
and
imul
mov
push
loope
xchg
or
sbb
mov
outsl
addr16
cwtl
or
xor
aaa
and
jnp
imulb
or
sar
aas
adc
inc
adc
lods
xchg
jecxz
push
push
and
sbbl
repz
repnz
add
and
mov
adc
jbe
mov
lds
mov
push
jne
fnstsw
sahf
pop
sub
daa
jae
test
mov
jecxz
shll
adc
fcoms
imul
adc
add
pop
dec
xorl
xor
call
mov
lret
out
lock
sarl
lahf
aas
enter
ljmp
push
cpuid
inc
out
mov
jp
mov
sbb
xlat
add
mov
pop
leave
je
pop
adc
imul
jg
call
or
adc
into
dec
mov
sbb
jae
shlb
out
jp
mov
dec
mov
sub
adc
jae
sbb
xor
int
stos
mov
xor
or
dec
inc
cmpsl
dec
out
aam
cmp
mov
mov
cmp
jbe
incb
cmp
ds
scas
addr16
push
or
movsb
int3
repz
mov
add
fwait
inc
and
lods
dec
mov
jae
mov
data16
cmp
rorl
sub
xchg
loopne
mov
adc
and
lcall
pop
ss
dec
mov
arpl
clc
mov
jle
popa
lds
sub
pop
in
mov
mov
adc
mov
mov
mov
andb
pop
sbbb
popa
icebp
and
xor
cmpsb
jbe
jae
push
stos
push
pop
jp
push
xchg
pushf
mov
push
push
popl
add
mov
test
add
sbb
mov
mov
inc
mov
pop
pop
jmp
nop
fimuls
add
je
mov
insl
mov
mov
aas
inc
push
xchg
sar
lahf
aaa
test
jmp
xchg
lahf
inc
xor
shll
dec
movsl
pop
loope
adc
pop
dec
cmp
int
sbb
lahf
mulb
fisttpl
cmp
test
inc
orb
test
adc
aaa
cmp
xchg
pushf
std
repz
cmp
test
fistl
imul
mov
stos
insl
aaa
imul
xlat
pusha
rcll
test
xor
sub
xchg
xchg
or
aad
sbb
push
lock
and
movsb
inc
aad
mov
fwait
dec
dec
out
add
mov
out
push
pop
adc
flds
outsl
jl
mov
inc
out
mov
pop
es
shrl
out
adc
movsl
inc
outsl
cmp
sti
divl
push
xchg
scas
js
xchg
mov
test
dec
mov
xor
in
cmpsb
cmpsl
or
imul
hlt
outsb
lods
fnstenv
pop
and
xlat
call
cld
call
jge
dec
pop
mov
inc
lods
into
sbb
decl
ja
cmp
mov
data16
sbb
daa
cmc
cltd
sti
ret
pop
jecxz
fxch
inc
xor
and
push
adc
bswap
popf
test
xor
mov
sahf
stos
sub
mov
push
lods
cmpsb
jno
arpl
xor
test
leave
sbb
inc
xor
fidivrl
gs
lret
or
xor
sub
push
sbb
in
mov
cmp
or
mov
xchg
sub
nop
or
or
ss
jbe
imul
add
cmc
and
stos
pop
pop
mov
jae
iret
mov
and
mov
imul
cmpsl
jp
inc
lea
and
mov
lret
xor
dec
test
fs
pop
mov
leave
test
sub
or
hlt
fadds
jp
daa
adc
pop
pop
push
jne
bound
loopne
shl
pop
enter
daa
hlt
xchg
in
adc
stos
cmpl
cmp
xchg
or
clc
aam
mov
xor
jo
out
das
je
daa
and
cmp
neg
cmp
mov
lret
or
cmp
sub
adc
xor
jbe
stos
or
fistpl
imul
cld
insl
pop
jae
dec
sbb
pop
out
inc
mov
xor
and
repnz
and
xor
ret
ja
stos
faddl
addr16
jne
add
outsb
dec
pop
gs
je
stos
adc
pushw
adc
xchg
mov
sub
sub
xor
sahf
or
mov
mov
mov
pop
fidivl
jecxz
rclb
mov
or
pop
sbb
in
int
jp
aaa
popa
cli
cmpsb
cmp
sbb
jae
add
sub
xor
mov
test
cmpsb
xchg
aam
xor
mov
pop
mov
push
sub
pop
je
xorl
lea
loope
pop
shr
das
cmp
loope
lock
lret
outsl
imul
jbe
ja
jmp
and
loope
push
inc
mov
lcall
pop
insb
dec
pop
pop
add
pop
mov
lahf
repnz
sbb
movsb
push
mov
cld
xorl
xchg
pop
loop
or
sub
pop
rorb
repz
mov
ficoms
adc
lods
jns
popf
mov
enter
mov
adc
sub
push
les
cmp
stc
or
in
call
inc
adcb
push
imul
insb
out
arpl
repnz
cmpsb
mov
or
cli
ljmp
and
fs
dec
lahf
pop
mov
mov
dec
mov
insl
dec
rolb
loope
stc
cmc
mov
loop
mov
sub
xor
add
bound
dec
pop
into
jo
xor
xchg
and
out
mov
inc
ss
rcl
jno
mov
movsl
fldl
xchg
dec
fsubs
sub
push
outsb
xor
leave
ljmp
jg
add
or
adc
mov
subl
xlat
test
ja
dec
js
and
mov
dec
addr16
mov
dec
jns
in
clc
inc
sti
add
mov
jl
jbe
aam
insl
xor
popa
xchg
mov
jg
int
xchg
dec
fdivrs
push
sub
xchg
and
sarl
roll
push
lods
add
mov
xor
xor
nop
lock
add
pop
in
sub
inc
mov
xor
lock
ds
adc
jge
insl
sbb
scas
xchg
test
sbbl
adc
xchg
pusha
or
jle
sub
ja
inc
ljmp
jnp
sbb
and
repz
pop
int
jo
mov
fdivp
icebp
cmp
mov
mov
and
stc
enter
jmp
movsl
sub
cltd
adc
dec
push
pop
jo
iret
mov
loop
sbb
aas
inc
int
jns
outsl
push
dec
push
add
movsl
repnz
mov
lock
incb
add
mov
jmp
fsubrp
xchg
scas
push
jge
inc
ds
mov
gs
inc
clc
repnz
sub
in
aad
pop
or
xchg
stos
dec
pop
out
das
pushf
jns
cmp
jle
xor
sub
xlat
sub
mov
push
cmp
loopne
lret
in
push
xchg
pop
jae
mov
les
fisubs
cmp
pop
dec
scas
popl
imul
sbb
or
mov
sbb
repnz
inc
int3
ds
adc
mov
cmc
cltd
pop
lcall
lahf
dec
movsl
fildll
dec
sbb
inc
mov
push
loopne
stc
push
out
dec
add
popf
push
sub
push
cs
cltd
adc
rclb
xchg
inc
jns
sub
test
out
and
popf
lods
inc
lds
pop
mov
ficoms
sarl
jno
sub
pop
mov
rolb
lods
push
push
cwtl
jge
sub
or
sbb
fbld
cmp
nop
mull
xchg
outsb
call
pop
sub
pop
rorb
mov
mov
ret
sahf
xor
xchg
mov
pmuludq
popf
orl
clc
inc
mov
mov
or
sbb
xorb
mov
popf
ja
jecxz
dec
mov
addr16
inc
sahf
lea
jno
movsb
imul
fdiv
ret
lahf
sbb
adc
mov
pushf
dec
mov
dec
jo
add
inc
cltd
pop
mov
iret
pop
pop
test
inc
cmp
push
in
clc
xor
repnz
dec
clc
in
sub
push
cmp
movsl
sbb
push
ds
inc
xchg
or
fs
push
scas
or
mov
in
and
outsb
repnz
adc
adc
adc
or
add
fwait
hlt
daa
and
repz
pop
inc
outsl
je
add
mov
sbb
mov
push
push
nop
into
jnp,pt
dec
mov
icebp
jb
aad
sub
arpl
push
nop
shl
pop
add
repz
mov
shll
lret
push
iret
xchg
test
iret
popa
hlt
data16
xor
stc
mov
fwait
in
jecxz
sbb
fstl
mov
mov
mov
add
xor
push
push
adc
xor
addr16
in
fwait
ss
sahf
mov
inc
ret
mov
outsl
xchg
insl
push
fwait
and
ljmp
movsb
stos
mov
mov
in
ds
mov
jl
push
fwait
dec
loopne
cmp
mov
scas
pop
and
sti
lcall
adc
test
xchg
insl
jp
test
pop
jmp
rolb
jne
push
and
mulb
dec
in
jo
adc
dec
clc
ficoms
sahf
mov
out
mov
in
js
jle
stos
add
or
xor
jge
and
push
mov
jp
sbb
jbe
push
pushf
mov
pop
jns
icebp
push
not
repnz
iret
xchg
imul
pushf
fstpt
inc
std
imul
xorb
cmp
cmpsb
les
daa
xor
or
mov
lods
cwtl
mov
loop
dec
repz
jg
xor
push
mov
out
int3
sarb
popa
popf
shlb
sbbb
cli
and
jae
ret
inc
jne
pop
lcall
xchg
xchg
and
nop
xor
or
adc
lock
loop
pusha
add
mul
scas
out
stos
push
and
cld
sbb
sbb
jo
dec
es
inc
gs
pop
jmp
xor
rolb
les
dec
fnstsw
rorl
clc
push
and
and
cmc
or
xchg
sbb
sti
jbe
cmp
cmpb
cmpsb
cltd
pop
rol
aas
mov
inc
movsl
lahf
repz
sbb
sti
or
pop
push
mov
add
fcoms
movsb
jle
pop
imul
ret
mov
push
out
ficoml
inc
pop
cmpsb
js
pop
test
push
mov
mov
mov
dec
jno
xor
dec
mov
cmp
enter
xchg
ds
jns
aad
mov
pop
movsb
fisttps
adc
dec
or
out
idivl
sub
pop
sub
xchg
in
push
sub
divl
add
add
jo
and
enter
add
and
or
xor
xor
stos
insl
sbb
and
pop
push
outsl
cmp
insl
daa
xchg
jno
test
daa
lahf
dec
pop
in
jg
or
not
mov
loopne
fildl
cmpsb
aam
cmpsl
inc
fmull
call
or
in
in
ror
inc
data16
in
push
filds
lret
data16
nop
mulb
pop
adc
inc
xchg
outsb
cmc
les
enter
jae
pop
xchg
arpl
sub
aas
sbb
sbb
dec
push
dec
xchg
xchg
jb
and
xchg
mov
nop
ljmp
jns
cmp
lds
mov
lret
insb
hlt
jns
data16
pop
dec
aam
xchg
adc
les
stos
std
vrsqrtps
testb
dec
push
mov
or
sub
or
adc
xor
hlt
and
mov
in
jle
lcall
or
add
mov
hlt
jecxz
shl
in
sbb
pop
rolb
mov
pop
popa
and
or
pushf
arpl
jp
cli
lds
mov
or
jge
popf
dec
inc
ret
mov
cmp
insl
sbb
mov
adc
jae
mov
andl
lret
push
inc
push
mov
add
sti
xchg
sub
ror
sbb
add
mov
ror
adc
xchg
loop
mov
sub
outsl
dec
jp
push
mov
pop
mov
sub
cmc
aaa
bound
and
adc
mov
sahf
cmp
popa
push
and
movsl
fs
scas
test
sbb
ss
jae
pop
cld
repz
popf
mov
pop
pop
push
inc
stos
insb
sti
int3
nop
inc
aaa
mov
xchg
mov
test
fwait
mov
imul
xor
push
dec
mov
xchg
cmp
jno
mov
insl
sbb
orl
out
xchg
popa
out
jmp
aaa
mov
inc
mov
rcr
xlat
cmp
or
arpl
mov
add
mov
jo
cmp
addb
incb
cmpl
pop
lahf
stos
fsubs
ds
jge
dec
push
bound
subl
inc
xlat
xchg
cwtl
xchg
inc
popa
or
std
fisubrl
cmp
mov
sub
adc
test
imul
mov
or
jb
lods
cmp
xor
or
insb
xorl
cmc
fwait
jmp
push
xchg
leave
pop
fwait
and
add
inc
sbb
je
xchg
push
je
mov
test
rcrl
cmp
iret
das
pop
je
pop
fisttps
pusha
sub
repz
mov
cmc
pushf
mov
pop
icebp
or
xchg
xchg
adc
mov
les
movsb
imul
lods
out
or
dec
stos
in
lcall
imul
pop
jo
cmp
rcrb
js
scas
cmpb
xchg
jecxz
jp
scas
stc
fmulp
ss
icebp
xchg
cmp
sbb
inc
data16
lahf
cwtl
inc
fadds
or
fdivrl
sbb
outsl
enter
ret
jecxz
incb
mov
sub
cmp
dec
push
jne
mov
call
out
mov
leave
test
mov
int3
arpl
cmp
add
jmp
xchg
ret
std
andl
xchg
xor
jno
xor
out
cmp
sbb
jmp
sbb
lret
aaa
idivb
ficoms
mov
add
testl
and
stos
stos
fucomp
test
mov
mov
pusha
jecxz
out
adc
sbb
cmp
dec
in
inc
mov
mov
das
shlb
mov
fimuls
mov
mov
xchg
mov
dec
in
sbb
mov
outsb
inc
sbb
and
inc
adcl
loop
sti
fsubrs
ror
test
pop
push
test
imul
clc
push
push
sub
push
daa
inc
inc
stos
lds
stc
cmp
das
lock
jmp
jo
inc
jecxz
clc
xor
std
inc
jo
pop
dec
inc
sarl
lds
jmp
mov
rolb
cli
shrb
insb
adc
scas
jl
mov
shl
sbb
out
push
ljmp
loopne
ret
cltd
es
fnstsw
mov
ja
iret
clc
or
aas
not
sub
daa
lods
or
daa
insl
jge
add
sahf
sbb
bound
dec
ja
pop
push
loope
mov
and
or
cld
jbe
cmp
lret
inc
cli
popf
loop
add
cmp
sbb
mov
lods
dec
mov
inc
xchg
pop
xor
in
test
mov
lods
or
repnz
adc
fsubrs
ret
adc
xor
mov
fucomip
hlt
cmp
ja
xchg
sar
daa
cld
jb
ret
xor
mov
aas
repnz
lods
shll
popa
mov
jbe
mov
shll
push
into
fsubs
fwait
sub
sub
daa
orb
dec
in
push
pop
pushf
add
daa
sub
inc
je
xor
pushf
jae
jl
outsl
jge
inc
sbb
clc
sbb
mov
int
sub
xchg
adc
push
xor
jg
sbb
mov
outsb
repnz
test
nop
push
mov
stos
jg
add
sbb
sub
jae
or
popa
mov
insl
int3
lsl
or
push
fmulp
test
adc
push
adc
sbb
jle
push
sub
notl
dec
cld
xchg
xchg
push
lods
pop
mov
pop
jp
add
mov
jae
jns
fisubl
inc
ret
push
inc
adc
or
ljmp
inc
dec
mov
loope
cli
lods
sub
sub
stos
ss
xchg
pop
jno
inc
push
orb
jg
out
xchg
iret
and
cmp
sub
pusha
or
fucomip
addr16
idivb
inc
pusha
mov
andl
mov
aad
push
bound
jge
out
shl
or
nop
aaa
popl
insb
jmp
ffree
sahf
sbbl
stc
jecxz
loopne
pop
mov
inc
ret
ret
cli
cmc
push
mov
stos
sub
fldl
mov
inc
dec
sbb
out
jge
pop
loope
dec
out
pop
mov
mov
data16
pop
loop
add
jecxz
divl
out
xor
aad
mov
outsl
flds
xchg
dec
mov
fildll
push
iret
or
cmc
call
outsb
fucomip
loope
fisttps
push
rol
lahf
arpl
js
outsb
or
jne
lret
mov
nop
or
inc
add
xor
sub
rorl
jb
enter
mov
ffreep
xor
xchg
and
test
pop
push
mov
movsl
sbb
push
sarb
add
inc
ds
jle
aas
and
adc
xor
les
inc
mov
jecxz
and
adc
xchg
mov
js
sub
jmp
xor
scas
jne
cmp
or
and
lock
mov
insl
lods
arpl
es
sbb
sub
and
cmp
jbe
xor
cli
jne
dec
mov
push
lock
jb
mov
push
mov
cmp
ja
mov
ret
mov
mov
mov
call
pop
es
call
nop
cmpsb
mov
adc
stos
mov
lock
jg
mov
push
push
sbb
das
loope
icebp
cmpsl
in
xlat
sbb
cmpl
insb
sbb
add
rcr
xchg
pop
in
lock
push
or
outsb
pop
repz
pop
movsb
gs
cltd
lcall
sub
into
js
xchg
mov
arpl
xchg
test
push
or
shl
js
cwtl
xchg
outsb
outsl
loope
fucomi
and
push
push
dec
sub
jle
push
arpl
mov
xlat
ret
mov
js
movsb
bnd
loop
int3
cmc
sub
xchg
insl
push
cmpsl
outsb
inc
fdivl
popa
gs
mov
lods
and
push
jl
fsubrl
shlb
xchg
popa
mov
imul
xchg
pop
cld
sbb
ret
call
add
inc
mov
clc
pop
mov
push
pushf
int
sbb
fbstp
xchg
xchg
daa
push
nop
mov
mov
adc
push
jae
into
pop
xchg
lret
dec
lock
and
xchg
pop
mov
or
xor
mov
push
pop
pop
out
lods
jg
iret
mov
addr16
loop
inc
mov
lock
xchg
push
imul
mov
cmp
jb
ja
daa
jge
add
and
inc
pop
scas
lret
add
inc
pop
popa
sub
lods
cwtl
lock
rolb
das
mov
idivl
es
aad
push
lds
or
mov
mov
lods
jne
shll
gs
mov
rorb
xor
ficompl
rcr
andl
mov
stos
popa
sub
xchg
test
mov
cmpsl
add
filds
fadds
cmpl
push
or
or
ljmpw
outsb
cmp
in
fildll
out
mov
cmpsl
ljmp
jp
mov
push
push
mov
and
inc
or
imul
add
mov
mov
sub
inc
inc
cmpsl
adc
mulb
xchg
pop
adc
hlt
push
jmp
nop
std
sbb
outsl
sarl
inc
scas
sub
mov
mov
repnz
aas
cli
pop
pop
lods
stos
inc
popf
test
lret
and
dec
sub
mov
ret
pop
add
enter
outsb
jne
fdiv
jp
cmp
ret
sbb
ljmp
popa
and
cmp
mov
stos
jae
inc
adc
sub
push
mov
dec
inc
ret
jecxz
fmulp
jecxz
int3
mov
jne
push
ja
aad
loopne
loop
idivb
mov
movsb
je
enter
mov
outsl
popa
fsts
scas
adc
sbb
or
insl
and
mov
xchg
lods
inc
mov
and
jnp
lods
in
inc
outsb
inc
jnp
mov
sbb
pushf
insb
mov
loopne
rcr
int3
cltd
inc
out
test
scas
xchg
adc
dec
std
in
xor
pop
dec
gs
mov
mov
sbb
jnp
outsb
lret
or
in
xchg
clc
fimull
repz
cmovnp
mov
pop
test
je
jbe
xor
rolb
test
incl
arpl
mov
xchg
jnp
push
sbb
sub
insl
test
add
fadd
jmp
mov
xchg
movsb
lcall
test
push
nop
inc
jmp
out
cld
insb
inc
mov
push
mov
out
cltd
jbe
enter
enter
icebp
add
mov
adc
cmpl
mov
test
test
data16
subl
cmp
pop
lds
rorb
loope
dec
push
and
mov
rcrb
stos
fdivrs
mov
and
nop
mov
icebp
lret
call
jae
or
push
stos
pop
std
xor
add
lret
jmp
hlt
jae
add
lret
fcompl
in
cld
push
xlat
sub
sub
push
sahf
add
aad
and
xor
imul
in
jle
popa
bound
popf
in
jns
sarl
jae
fld
shl
loopne
sub
sub
adc
xchg
inc
in
in
les
test
inc
and
fs
fdivrl
out
scas
and
cwtl
scas
or
test
and
and
mov
les
mov
in
xchg
idivb
aad
dec
push
cmc
and
stos
aad
fwait
mov
xor
les
mov
loop
mov
insl
mov
xor
imul
and
es
inc
inc
jg
ret
dec
jg
idiv
jle
sub
push
inc
cmpsl
xor
mov
call
pop
subl
inc
jg
pop
and
mov
nop
pop
sub
xor
and
xor
mov
cmpsl
stos
iret
imul
push
fcoms
enter
std
cltd
cmc
xchg
mov
icebp
test
clc
jle
bound
inc
xor
pop
into
or
cld
inc
cmp
mov
sarb
cwtl
lret
imul
ja
out
dec
and
stos
and
cmpsb
fcoml
mov
and
or
push
xchg
sub
push
scas
jne
rcl
push
and
lcall
mov
sub
inc
popf
movsl
sub
aas
and
and
pop
pop
add
popa
add
pop
mov
cmpsl
sub
dec
adc
push
ret
gs
xchg
jl
ret
xchg
push
push
jmp
pop
leave
jl
sub
push
repz
add
jo
or
std
rdpmc
stos
mov
movsl
icebp
push
cmp
mov
and
push
leave
mov
xlat
xchg
into
test
outsl
mov
and
jnp
xor
test
jle
dec
xchg
and
cmp
aas
dec
ret
insl
mov
sub
lea
dec
push
test
sbb
cmpsb
inc
mov
inc
add
xchg
jp
lds
push
subb
push
jnp
fmulp
popf
lea
push
repz
push
mov
jbe
pop
cmpsb
sbbb
js,pt
je
ds
pop
ja
sarl
aad
dec
hlt
xchg
push
or
mov
xchg
add
inc
sub
sti
sub
lds
dec
in
cs
or
push
inc
fdivrs
jmp
sub
lea
in
sti
call
push
dec
movsl
sti
in
push
cmp
add
movsl
jne
in
in
arpl
jecxz
jns
push
ja
fbstp
pop
cltd
jns
pop
les
aam
lods
cmp
fwait
push
push
cltd
pop
test
mov
sub
shrl
iret
xchg
ds
dec
cmpsl
test
add
sbb
mov
out
push
pop
xor
jbe,pn
mov
mov
ret
xchg
lcall
test
xlat
dec
or
add
dec
add
mov
pop
inc
scas
jnp
popa
jp
inc
cltd
mov
jl
scas
sub
pushf
cmp
out
fadd
push
cmp
iret
inc
test
sub
add
dec
jnp
adc
pop
shlb
push
push
ljmp
add
aas
mov
pop
inc
sbb
in
cs
mov
and
mov
xor
and
fsubrs
je
xchg
push
cmpsl
lahf
jg
sub
scas
jecxz
mov
lea
das
test
mov
daa
shrl
sub
cmp
xlat
pop
inc
shl
mov
mov
out
es
cmpsb
or
add
gs
cmpsl
dec
loope
bound
imul
js
movsb
mov
int3
dec
cmp
xor
pop
pop
xor
stc
rcrl
xchg
std
mov
fcom
mov
orl
ds
in
lcall
das
addl
inc
adc
adcl
stc
repz
add
pop
cmpsl
test
repz
pop
push
shrl
sar
nop
xchg
mov
cwtl
mov
nop
and
jl
xchg
mov
add
sbb
ret
std
ja
inc
push
imul
dec
hlt
xor
lcall
rcrb
mov
mov
leave
sahf
scas
ljmp
in
inc
loope
inc
or
xchg
in
shl
cmc
je
shlb
push
xlat
leave
lock
xlat
subl
adc
or
add
cmp
jge
push
les
sbb
in
ret
jge
cmpsl
jmp
cmp
jne
mov
lods
xlat
popf
outsl
nop
test
or
and
ss
out
mov
mov
pop
add
lock
cwtl
movsb
cmp
dec
push
xchg
out
mov
lahf
push
loop
cmp
gs
push
imul
test
call
jge
clc
lds
mov
shrl
in
jmp
or
shr
inc
inc
cmpsl
adc
jg
repnz
icebp
rclb
or
dec
mov
jl
les
xor
aad
lods
std
mov
pop
dec
mov
pop
sbb
ja
xchg
shlb
divb
icebp
decb
xor
icebp
xor
shrb
test
xchg
repnz
inc
repz
adcl
mov
stos
mov
xor
xchg
xchg
and
xchg
stos
cmc
movsl
pop
nop
or
es
push
imul
push
push
jmp
xlat
movsl
test
out
mov
cli
cltd
shlb
ret
add
test
pop
jg
mov
test
das
mov
inc
mov
nop
pop
sub
push
ds
mov
push
scas
cltd
add
jecxz
push
leave
push
push
pusha
jae
cltd
iret
push
cmp
mov
mov
xlat
es
cmp
mov
dec
stos
jno
repz
jl
sti
cmp
insb
cmp
loop
push
adc
je
outsb
and
or
mov
ret
pop
or
fmull
or
adc
cmp
lahf
pop
ret
movsl
call
out
sbb
iret
lock
inc
cmp
sti
clc
sbb
jg
mov
adc
aam
mov
gs
cmp
je
mov
les
lds
cs
push
mov
push
cmp
popa
pop
in
faddl
inc
jge
pushl
cld
adc
push
add
jecxz
sub
push
adc
pop
mov
xor
lds
shl
push
lea
push
xorl
addr16
cmp
cmp
or
int3
mov
fstps
insb
popa
sbb
xchg
mov
jge
out
lahf
sbb
pop
ret
lahf
and
int
push
xchg
cmpsb
sbb
push
test
xchg
imul
add
cwtl
pushf
sti
mov
xchg
xor
jbe
or
push
lret
xor
pop
leave
jbe
xchg
lea
ljmp
pop
ljmp
daa
dec
mov
mov
cwtl
jge
mov
fwait
add
roll
sbb
add
in
xor
or
mov
mov
push
xor
out
mov
in
sbb
sub
movb
arpl
xchg
sub
mov
lret
mov
in
jecxz
push
add
xor
dec
cltd
out
enter
insb
pop
test
adc
leave
rcr
mov
pop
add
dec
inc
stos
xchg
mov
cmp
mov
jo
sbb
movsb
orl
push
lcall
mov
dec
rorb
mov
imul
xchg
faddl
cld
mov
div
jbe
std
cltd
int3
jg
ss
rclb
xor
or
xlat
jg
xchg
arpl
xchg
inc
cwtl
iret
cli
lcall
notb
xchg
jg
push
fwait
sahf
ss
loopne
pop
int
cmp
xchg
movsb
adcl
adc
arpl
rolb
jns
cmc
and
xchg
cmp
pop
sub
mov
insb
cs
jl
pop
and
nop
cwtl
and
ret
into
pop
dec
shrl
mov
loop
pop
in
and
cmp
jnp
mov
pop
dec
cltd
sub
or
sub
insl
shl
or
mov
dec
sbbb
mov
xor
pop
or
pop
cmp
rcrb
lea
decl
push
mov
scas
mov
inc
fcomi
adc
xchg
mov
xor
inc
push
das
jecxz
pop
ret
dec
inc
dec
xchg
or
sahf
jbe
mov
jle
out
push
xchg
aam
js
sti
dec
mov
stc
push
jns
movb
std
sub
lret
xlat
mov
jle
sti
gs
movsl
cmp
add
mov
mov
fwait
clc
xchg
es
out
sarb
gs
dec
adc
sbb
adc
nop
cmp
cmp
mov
xor
iret
and
movsl
jae
pushl
mov
mov
aam
sub
clc
mov
inc
add
iret
adc
xorl
call
nop
pushf
mov
mov
test
outsb
mov
movsl
jecxz
or
mov
lods
jecxz
loopne
and
xchg
adc
fcmovnbe
flds
pop
movsl
xchg
add
cmp
cmp
or
daa
int
out
and
mov
jno
mov
xor
xchg
aas
push
mov
jge
dec
xor
mov
insl
or
nop
lcall
adc
pop
shll
sti
jmp
pop
mov
inc
lea
loop
rep
sti
icebp
loope
or
icebp
mov
fwait
hlt
xchg
xor
jg
add
sarb
je
dec
stos
xchg
decb
mov
movsl
pop
pop
ficoml
sbb
ret
jmp
pop
inc
clc
dec
sbb
push
jns
inc
in
shlb
sub
and
ret
xchg
jmp
fists
jo
in
xor
and
out
mov
add
lret
or
jg
js
subb
or
mov
cwtl
les
fidivrl
pop
push
lods
test
and
bound
mov
in
mov
out
ret
imulb
mov
jns
pop
pop
movsl
aad
or
popl
mov
mov
in
std
scas
fdiv
leave
ljmp
mov
sahf
sub
inc
xchg
addb
call
lds
jp
cmp
andb
sarb
ja
or
mov
xchg
or
xchg
lock
sub
lea
out
ss
adc
pop
pop
icebp
pop
xchg
outsl
out
mov
mov
pop
sbb
and
mov
scas
lahf
mov
addr16
or
aas
mov
lods
push
in
ss
test
icebp
and
pop
add
fildl
pop
xchg
jae
cmpsb
inc
or
and
add
adc
adc
and
cli
dec
lret
nop
fwait
ret
scas
pop
mov
dec
inc
and
in
in
test
repnz
insb
lret
aam
sbb
fmul
aas
inc
push
cmp
movsb
outsb
cmp
imul
adc
jo
jmp
leave
int
lea
jg
mul
jl
pop
lea
adc
cwtl
pop
popa
jne
xor
xchg
dec
cmpsb
jg
shlb
inc
pop
fs
fimull
sub
loop
lahf
xchg
mov
rorb
out
hlt
popa
fbstp
dec
ss
add
xor
and
ds
lods
mov
mov
pushf
jno
add
mov
mov
cmp
aam
shrl
sbb
jnp
js
sti
mov
push
jae
mov
fcmovnb
xor
xchg
adc
push
or
icebp
sub
push
pop
ljmp
pop
and
pop
pop
lea
add
cmp
xchg
iret
sbb
mov
insl
fimull
and
ret
lahf
inc
stos
push
sub
or
mov
cmc
int
cli
dec
pop
and
fildll
or
testb
les
xchg
jmp
ja
adc
ret
cmovne
cmp
leave
roll
movsb
insb
mov
or
xchg
icebp
clc
or
inc
imul
lahf
push
or
pusha
xor
testl
ret
cltd
ret
or
add
xor
inc
inc
mov
shl
cmp
ja
inc
mov
push
pusha
cltd
mov
jp
ret
sub
dec
mov
mov
adc
mov
les
leave
sub
xchg
add
insb
test
and
mov
test
cmp
push
stos
cmp
jns
inc
jne
inc
dec
xor
xor
decb
xchg
and
jnp
aam
and
or
push
mov
sbb
mov
aam
and
sub
out
mov
add
icebp
ja
fmulp
aam
sbb
bound
mov
xchg
and
jae
sbb
mov
sub
sub
adc
into
in
aam
dec
mov
xchg
dec
jno
cmp
test
lahf
sub
jnp
or
fs
jmp
jg
pop
lea
mov
push
popw
xchg
in
loopne
mov
loopne
pop
shrl
int3
cli
cmp
xor
push
scas
into
dec
mov
inc
clc
xchg
pop
insb
in
pop
dec
fcoms
test
sahf
fdivr
out
push
jecxz
sub
adc
lcall
mov
outsb
mov
mov
sbb
lods
ret
aad
sub
outsb
xchg
test
or
lods
dec
push
inc
in
mov
nop
das
fldenv
cmp
adc
ja
icebp
addr16
bound
or
test
push
cli
outsb
hlt
adc
insb
inc
aam
add
std
into
mov
dec
loope
pop
lret
jg
out
loop
xchg
mov
push
pusha
test
stos
pop
pop
cmpsl
xchg
pop
divl
popf
sbb
insb
mov
pop
ss
or
push
or
imul
dec
sahf
lret
inc
aam
clc
mov
dec
sbbl
sbb
pop
xor
sahf
mov
jl
lret
mov
mov
pop
int
jne
fwait
push
cli
arpl
mov
movsb
xchg
daa
cltd
pop
jmp
in
imul
cmp
fstpl
lods
sti
pop
xchg
cmc
into
mov
les
mov
stc
pop
pop
push
pushf
sbb
lahf
mov
mov
outsl
sub
sti
dec
lods
adc
fildl
mov
sahf
dec
adc
mov
stos
fs
mov
mov
aad
jmp
fmull
ljmp
lock
sbb
sbb
lods
dec
push
pusha
mov
mov
orb
jecxz
push
dec
mov
mov
jb
inc
fwait
xlat
pop
xor
push
enter
mov
inc
inc
push
in
shl
pop
lock
and
imul
xor
out
addr16
adc
xlat
push
sub
or
fisubl
cmp
in
daa
mov
cmpsl
push
outsl
mov
sbb
into
fidivrl
pop
or
clc
adc
test
repz
jno
dec
popa
inc
mov
sbb
ljmp
test
or
mov
orb
pop
inc
fmulp
add
rorl
sub
mov
je
insb
cmc
rol
lahf
mov
test
sub
adc
xor
pushf
movsl
cmpsb
xchg
lret
inc
cmpsl
dec
fwait
popa
mov
xchg
out
inc
iret
adc
push
add
and
inc
jge
adc
bound
and
out
jno
jnp
xchg
insb
leave
scas
setno
js
shll
and
jb
add
xor
and
lret
mov
dec
vpmullw
cld
pop
loopne
fistpl
mov
push
shrl
push
int
mov
pop
aad
ds
imul
xor
push
mov
sub
pop
lret
adc
add
dec
mov
lahf
xchg
ret
loope
inc
sbbb
jae
fs
dec
jmp
or
mov
sub
dec
mov
jnp
sahf
cmp
clc
xchg
cmp
imul
ss
stc
inc
gs
repz
xor
rcrb
into
out
and
mov
movsl
insb
loope
daa
out
sub
push
inc
push
lods
jb
pop
in
mov
push
pop
mov
out
popf
dec
cli
ret
dec
xchg
or
mov
jge
int
mov
push
xor
fbstp
stc
pop
and
les
mov
je
jb
test
lahf
in
cmpb
out
lock
xlat
adcb
mov
rcrb
pop
fmuls
idivl
xor
and
and
and
imul
popf
dec
das
cs
or
add
sub
mov
call
loopne
cmpsl
mov
out
and
cmp
sbb
aaa
addr16
jbe
inc
mov
push
addl
sahf
out
fsubp
loop
push
inc
mov
jne
mov
mov
rol
movb
aaa
imul
xchg
xor
aad
fstl
cmc
out
cmc
in
aam
imul
push
dec
cli
sbb
pop
lret
adc
or
or
loopne
push
or
fmuls
call
ret
push
clc
mov
roll
das
test
xchg
and
push
aas
rolb
into
test
leave
leave
mov
push
jbe
adc
push
dec
cli
fsubl
adc
push
pop
sbb
mov
scas
mov
push
cmp
dec
lahf
cmp
aaa
sbb
cmp
leave
sub
lcall
xchg
pushf
pop
jg
push
jl
mov
das
mov
mov
add
pop
add
std
nop
aaa
loope
xchg
adc
mov
mov
lahf
mov
out
mov
or
in
sahf
mov
movsl
pop
loope
scas
mov
aaa
fdivrs
xchg
out
iret
dec
jg
inc
pop
push
scas
dec
or
xor
mov
push
adc
sbb
pop
out
mov
pop
iret
enter
stc
push
pushf
cmpsl
dec
adc
jle
cltd
imul
out
cmp
mov
in
js
cmpb
cmpsl
cmp
ss
outsb
adc
mov
xor
sbbb
je
daa
test
push
xchg
sahf
int3
jnp
inc
xor
stos
mov
popf
dec
jns
mov
pusha
inc
sub
test
xchg
cltd
adc
or
push
or
test
or
fs
test
iret
pop
xor
sub
xchg
or
pop
and
push
adc
es
enter
stos
xor
flds
jae
mov
xchg
jb
cmp
dec
insb
insl
std
cmpsb
xchg
adc
aad
mov
xchg
lahf
pop
cmpsl
outsb
push
jecxz
int
sbb
mov
cmp
mov
mov
push
xor
sub
prefetch
or
dec
adc
dec
stos
lcall
iret
iret
jle
mov
dec
cli
sti
xchg
ja
lea
fadds
dec
push
push
test
lret
dec
sbb
fadd
adc
cltd
fidivrs
dec
mov
cli
sbb
xchg
jg
xchg
jne
leavew
jl
or
test
xor
lods
mov
jecxz
enter
fistpl
dec
cmp
push
mov
adc
xor
cltd
xorl
fisttpll
shrl
mov
je
xchg
cmpsb
cmp
pushf
xchg
add
lea
mov
int
into
jo
sub
inc
cmpsl
add
cmp
and
cmp
fcmovbe
xchg
lods
jnp
add
xchg
js
cmp
scas
adc
es
mov
pop
inc
rcrl
subl
sbb
movsb
rcrl
je
lods
imul
mov
xor
nop
dec
mov
mov
insb
ret
sbb
fstpt
xor
mov
jne
jne
pushl
js
mov
pop
adc
mov
mov
aaa
shll
aad
rclb
xor
aad
loope
aam
xchg
mov
dec
scas
sub
hlt
sub
test
stos
sub
fisttpll
dec
mov
bsr
mov
lds
gs
lea
stos
js
in
push
or
mov
jl
iret
push
jb
xchg
in
cmp
sahf
andl
das
mov
insb
pop
test
jae
fsubp
dec
add
xchg
lahf
out
pop
sub
and
gs
mov
xchg
xchg
push
dec
adc
into
and
popf
jl
daa
lods
xabort
xor
xlat
js
loope
out
xor
ja
fimuls
lret
or
out
lods
sbb
in
or
stc
push
add
bound
push
dec
xchg
ja
pop
mov
jns
dec
shlb
ja
mov
test
adc
push
lahf
sub
cwtl
pop
mov
das
inc
test
mov
and
push
add
add
jl
and
jmp
in
push
push
mov
out
xchg
mov
pop
dec
sbb
dec
frstors
xor
out
out
sbb
outsb
dec
sbb
rorl
and
sahf
fucomip
dec
sbb
push
mov
xor
fcmovne
or
push
insl
jno
orb
loop
test
fdivl
popa
pushf
fimull
xor
ret
int3
test
iret
fimull
push
fcmovnb
test
sbb
fcmovu
iret
scas
jo
inc
mov
ljmp
and
pop
xchg
push
ja
insl
psadbw
rorb
add
fdivr
je
xchg
cmp
leave
js
idivb
inc
or
or
push
sbb
mov
cmp
aas
pop
pop
xchg
adc
sbb
dec
repnz
enter
push
fld
mov
push
jns
loopne
or
push
or
loopne
sub
out
xchg
das
cmp
xchg
popa
adc
dec
jo
iret
xor
xchg
mov
lret
cltd
add
sbb
push
and
jp
jg
add
and
jle
das
in
stos
mov
into
gs
jge
jecxz
xor
xchg
icebp
cmp
cli
fcmovb
push
div
adc
sub
or
out
push
xor
dec
xlat
mov
mov
loope
push
mov
test
ret
sbb
adc
aaa
imul
mov
add
cld
dec
arpl
or
movsl
sub
mov
loop
aas
ret
and
push
mov
sbb
fisttpl
movsl
clc
sub
lea
cmp
jne
push
push
enter
fdivrl
repnz
sarb
jo
cli
dec
mov
clc
repz
and
setne
pop
mov
push
or
cmp
jns
cmc
sub
outsl
or
xchg
sti
jne
or
mov
test
imul
jo
fildll
push
mov
icebp
pop
dec
daa
mov
push
jb
mov
faddl
sbb
add
in
ljmp
roll
lock
sbb
xchg
movsb
lea
push
repz
insb
fildl
in
fmuls
and
lock
xchg
into
and
xchg
xchg
sub
mov
rcrb
aaa
popf
jl
cmp
mov
leave
lock
mov
cmp
jle
add
pop
mov
and
cld
jecxz
fmull
jbe
cmp
push
repz
mulb
in
adc
stos
pop
scas
andb
sbb
out
daa
jle
jbe
mov
cmp
lahf
inc
sbb
pop
outsb
pop
sub
sarb
loope
jns
mov
add
in
out
in
pop
fadds
sbb
insb
les
test
bound
mov
out
push
xor
and
jo
iret
xor
push
dec
jns
dec
sbb
lock
jmp
push
orb
lea
lret
notl
mov
mov
mov
inc
je
mov
out
cmpl
mov
cmc
lret
and
add
mov
mov
jg
fisubrl
and
in
sub
add
in
int
dec
mov
mov
xchg
fadds
dec
repz
shlb
push
out
jns
mov
inc
jno
lods
sbb
cmpsl
sbb
es
fwait
xchg
stos
or
mov
lahf
adc
lahf
js
jle
pop
push
add
jb
imul
pusha
aas
ljmp
dec
test
mov
jo
xor
mov
push
cmp
fdivrs
sub
mov
xchg
lods
insb
fdivs
mov
fs
call
ds
aaa
ljmp
mov
sub
dec
fs
push
dec
add
stos
call
lds
sbb
mov
ret
rcrb
addb
cmp
inc
je
pop
sub
inc
push
sub
push
pop
dec
test
inc
pop
dec
inc
push
lret
cmp
in
jg
lods
sub
pop
jo
insb
int
pushf
adc
popa
inc
add
nop
push
das
mov
ret
mov
cmp
adc
rol
dec
push
dec
in
fidivrl
cmc
gs
ss
cli
icebp
inc
cmp
jbe
insb
jne
dec
pandn
push
mulb
jb
and
decl
push
mov
stos
or
xor
fdivrs
xchg
adc
sub
loopne
out
push
shlb
insl
push
sub
lret
mov
inc
subl
lahf
xlat
sub
inc
inc
push
push
cli
sub
outsl
stos
cmpsl
mov
pusha
inc
pushf
in
fwait
lods
scas
addr16
int
mov
xchg
push
jp
dec
fwait
sub
jp
aad
psrlw
shrl
cmpsb
mov
nop
and
ljmp
lods
jge
call
sub
jmp
sbb
mov
mov
das
call
adcb
sahf
sahf
int3
into
and
popf
push
aas
add
shlb
xor
push
inc
js
push
dec
fisubrl
test
xor
adc
xchg
lea
mov
xchg
ja
bound
outsb
test
mov
jge
push
cmp
bound
mov
fldenv
mov
test
xchg
int3
dec
movsl
fdivrl
test
lahf
xor
push
lret
dec
shlb
add
dec
push
and
rorb
pop
daa
aaa
cmp
iret
push
jge
in
lcall
ret
push
jne
lret
rolb
mov
lcall
mov
xchg
add
add
pop
popa
lcall
xchg
lods
jecxz
mov
sub
adc
xchg
scas
icebp
in
lea
pop
out
jbe
jnp
fstl
mov
ss
scas
ds
fadd
jp
shrb
xor
mov
fdivrs
fnstcw
sbb
cmp
or
dec
out
out
sbb
fsubrl
sbb
mov
cs
aad
mov
insl
insb
fwait
imul
add
lock
dec
cmp
add
or
or
pushf
mov
pop
mull
in
lahf
xchg
bound
xor
dec
jp
inc
lret
push
push
xor
outsb
arpl
mov
xchg
pushf
xor
sbb
jno
xor
ljmp
call
jb
xchg
sbb
call
in
cli
pop
adc
in
sub
xor
loop
scas
ljmp
int3
jne
inc
call
mov
mov
aam
sbbl
mov
or
cmp
std
and
adc
xlat
xor
fnstsw
repz
stos
nop
pop
fxch
sbb
in
mov
cmpsb
gs
push
xchg
dec
push
sbb
and
push
jbe
rorb
push
inc
outsl
out
sub
adc
cwtl
js
adc
sub
jp
mov
push
add
ret
int
xchg
jl
and
xor
dec
dec
adc
jecxz
lea
fwait
push
das
rolb
loope
add
call
xchg
clc
decl
rcrb
and
pop
sbb
std
push
push
out
aas
ret
repnz
insl
pusha
mov
mov
push
xor
out
out
fwait
mov
xchg
sqrtps
xorl
mov
mov
mov
xor
ja
cmp
ja
hlt
loope
leave
mov
cmp
std
dec
jb
in
jge
lahf
xchg
cmp
bound
push
cmp
outsb
pop
xchg
xchg
adc
outsb
outsl
or
add
mov
push
aam
or
lods
icebp
inc
sbb
xor
jp
mov
outsb
into
xchg
aam
aam
and
inc
loop
jle
fdivl
in
sub
xchg
fdiv
xchg
mov
cmp
insl
lret
jmp
pop
stos
mov
jnp
adc
or
lods
stc
popa
push
lock
fldl2t
subl
xor
cs
fbstp
fisttpll
rcl
push
push
repz
call
jmp
lods
mov
xor
icebp
xor
rcrb
mov
sub
pop
ja
adc
mov
ljmp
inc
in
jmp
fldl
shlb
cmpsb
lods
shlb
xrelease
adc
adc
fs
inc
and
shrb
jno
in
lret
loope
xchg
cmp
jecxz
out
pop
mov
lret
pop
mov
pop
mov
mov
xor
jnp
xchg
scas
adc
lcall
mov
cmpsb
pop
pop
push
cmp
out
mov
aas
repnz
iret
stc
movsl
cmp
jge
mov
stos
cmpsb
outsl
mov
add
add
es
cmc
rol
mov
cmp
mov
lods
mov
dec
pop
fistpl
dec
add
ljmp
inc
test
shrl
mov
sti
add
repnz
pop
and
mov
adc
pop
xor
ljmp
fcoms
int
or
shll
sbb
pop
push
mov
fucomp
lret
sub
mov
pushf
sbb
lret
lods
jmp
lods
sbb
fimull
xchg
adc
lahf
fisttpll
push
pop
push
aas
add
out
jbe
dec
dec
push
mov
popf
dec
xchg
sti
jl
and
jmp
lret
pusha
std
or
sub
lock
mov
inc
and
lret
mov
call
or
xchg
shrl
xchg
xchg
or
mov
dec
sub
inc
xchg
lret
push
idiv
jb
mov
and
lds
stos
adcb
lods
daa
out
mov
inc
inc
push
jnp
ljmp
arpl
inc
xor
or
test
shl
xchg
jae
out
scas
jb
jae
pop
mov
inc
dec
dec
xchg
outsb
dec
sbb
dec
adc
xor
mov
dec
pop
enter
shlb
std
adc
jecxz
cmc
jmp
add
aad
jecxz
pop
es
mov
xor
es
xchg
pushl
mov
adc
lea
cmc
icebp
jns
push
add
pop
fildl
imul
ret
outsb
test
push
int3
adc
popa
repnz
inc
cmp
aas
xchg
inc
sbb
mov
stos
cmp
ret
pop
inc
lds
push
hlt
xchg
xchg
sbb
mov
pop
fcmovnbe
call
xorl
int3
lds
inc
daa
push
test
add
or
cltd
pop
adc
cmp
fiaddl
arpl
pushf
test
out
pop
mov
and
jnp
push
pushf
or
xchg
pop
in
adc
mov
cmp
jnp
xor
adc
push
dec
aad
addb
and
cli
imul
xor
imulb
sub
ds
add
push
pop
test
mov
enter
jne
inc
outsl
inc
dec
xchg
outsb
adc
pop
xchg
xchg
nop
cmp
cmpsb
mov
mov
sti
or
movsl
mov
scas
lret
mov
mov
in
pop
testl
sbb
add
sbb
ljmp
fistps
mov
sbb
xchg
sub
mov
add
cld
aad
xchg
scas
stc
cld
sbb
clc
push
mov
rorb
gs
jmp
and
dec
jno
clc
popf
rcrb
jo
mov
xchg
xchg
jle
pop
sbb
mov
lock
jbe
orb
hlt
repz
in
scas
sbb
popf
cmpsl
cmp
stos
inc
insl
or
mov
insb
nop
cmc
adc
cltd
imul
mov
sub
ljmp
inc
testb
pop
sub
xor
cmpsl
in
fwait
sub
dec
cmpsl
cld
jle
jl
xor
mov
outsb
push
and
es
jo
js
leave
adc
add
mov
lahf
rorb
push
fsubl
faddp
ret
or
mov
mov
pop
dec
into
push
sub
mov
idivb
in
in
cwtl
or
insl
sbb
xchg
adc
mov
pop
push
mov
inc
mov
pusha
xor
mov
adc
or
inc
jbe
xchg
sti
jl
faddl
rclb
ret
mov
addr16
fsubr
and
rolb
test
jnp
and
out
push
mov
cmp
popa
or
addr16
mov
push
insb
push
repz
xor
dec
push
outsb
push
push
test
xchg
sti
aad
adc
sub
push
xor
push
pop
testb
lea
jle
addl
lock
jle
loope
xchg
aaa
sbb
xchg
dec
pop
and
xchg
test
lret
out
decb
mov
mov
stc
mov
rolb
repnz
sbb
jp
mov
mov
jg
scas
popf
xchg
sti
jle
cmc
inc
xchg
imul
ss
fdiv
adc
xchg
rolb
iret
xchg
shll
or
movsb
stc
lahf
lahf
ret
jl
add
dec
dec
or
test
stos
jmp
inc
fld
pop
push
xchg
std
push
rcrl
add
jmp
sub
push
daa
and
mov
xchg
and
or
adc
and
ds
lret
xchg
push
mov
adc
mov
cmpsl
add
or
jg
push
lods
fstl
stc
xchg
daa
lock
test
insb
sti
fistps
repz
es
mov
mov
rorl
daa
lods
xchg
inc
push
das
add
add
inc
mov
inc
bound
enter
loope
xchg
inc
lods
inc
push
arpl
cmp
std
sbb
dec
push
clc
mov
std
cmp
adcl
or
cmp
sbb
xor
bound
stos
adc
mov
pop
and
jmp
inc
sarl
sub
jle
jbe
inc
mov
pop
push
es
add
jno
cld
mov
xlat
sahf
test
adc
jg
push
and
lret
sub
loopne
jns
and
div
rcrb
jmp
sbb
std
jl
shl
ret
and
mov
mov
fld
sbb
mov
mov
push
xchg
mov
data16
or
in
shll
adc
and
xor
pushf
mov
xlat
cmp
shlb
pop
imul
sub
imul
ret
jmp
fstps
out
ljmp
jae
and
jno
popa
js
addr16
sub
mov
push
mov
imul
int3
sbb
mov
psubq
std
mov
stos
jmp
ss
add
dec
clc
pop
out
popa
xor
imull
pop
xlat
or
mov
xor
inc
mov
icebp
ljmp
ficoms
mov
notl
jne
push
mov
mov
dec
sub
es
adcl
fbld
or
lods
in
ffreep
data16
mov
subl
pusha
pushl
int
inc
sub
addr16
mov
mov
adc
jae
lret
inc
pop
not
xchg
xorl
stos
repnz
xchg
sub
add
rclb
cmp
fsub
inc
xor
sbb
cmp
pop
mov
pop
push
jae
enter
fildll
mov
pop
pop
pop
pop
add
fdivl
lret
add
push
adc
adc
ja
mov
dec
stos
repz
stc
xor
insb
mov
iret
leave
push
adc
pop
ss
jno
sbb
bound
xchg
xor
and
mov
pop
and
lret
or
sub
lds
mov
cmp
jmp
and
out
jb
sbb
pop
dec
push
jge
jne
icebp
mov
dec
sti
xchg
or
cld
sub
subb
std
add
inc
rcr
fists
lcall
popf
dec
inc
lret
cmp
aaa
mov
pop
ficomps
ret
adc
call
mov
jnp
int3
stos
mov
xlat
dec
in
lcall
sahf
in
mov
andl
jmp
push
aas
cmp
inc
out
aaa
adc
xchg
and
in
inc
xchg
je
mov
filds
pop
loopne
pop
inc
push
fldcw
lcall
movsb
inc
scas
and
and
xor
repnz
push
and
test
shll
loop
aaa
or
repz
pop
je
dec
push
or
xchg
and
mov
push
adc
jns
xchg
adcl
aas
lods
xor
cmpsl
or
xchg
jl
add
adc
xchg
lods
sbbb
in
in
rcrb
ljmp
add
stc
shrb
lods
aam
lods
jecxz
adc
push
jle
pop
mov
sbb
insb
test
jns
notl
add
je
dec
mov
dec
fisubrs
sbb
pop
sbb
sbb
out
xor
pop
addl
push
lahf
xchg
fcmovnu
popa
dec
adc
mov
outsl
push
mov
lock
fldenv
lea
xor
mov
mov
mov
sub
fstps
xor
enter
inc
sub
xlat
les
add
or
stc
push
icebp
or
lods
cs
nop
addr16
mov
mov
mov
pushf
dec
xchg
fimuls
test
and
xchg
mulb
popf
aas
call
arpl
sbb
or
cli
push
testl
push
call
cmp
jae
jno
sub
jecxz
or
push
ss
dec
in
aad
in
inc
mov
add
jecxz
clc
cmp
jnp
popa
mov
and
inc
fcmovne
into
or
push
push
lcall
imul
stos
sahf
sti
andb
mov
inc
xor
test
lock
jb
lock
add
mov
repnz
aad
pop
xor
pop
xor
or
lds
sub
or
fisubrl
adc
fistps
and
mov
ljmp
mov
xor
into
mov
ret
pop
mov
jnp
pop
jno
mov
hlt
push
mov
inc
xchg
mov
scas
jo
stos
pop
aaa
xchg
pop
dec
shl
push
xchg
je
cmc
mov
out
shl
ss
cmpsb
push
es
jmp
sbb
xchg
push
cmpsb
testl
mov
ss
mov
mov
or
stos
jb
sbb
fwait
mov
mov
push
lcall
sbb
dec
sbbb
arpl
jp
js
ds
add
das
xchg
dec
test
insl
push
dec
mov
pop
xor
dec
pop
xor
or
inc
and
jle
ds
xchg
fadds
enter
pop
test
arpl
and
push
or
xor
mov
mov
pop
mov
adc
shlb
jns
jp
jp
stos
jbe
sarb
mov
or
fisubl
and
mov
test
sub
fisubs
outsb
mov
dec
push
sarb
jmp
stos
imul
ret
jp
loop
push
mov
sub
dec
and
loopne
pop
int3
xor
cs
ds
push
subl
loop
jae
aaa
push
mov
sbb
push
into
loope
xchg
insb
fdivl
stos
lahf
dec
sub
hlt
xchg
inc
pop
sub
mov
xchg
mulb
mov
ret
add
push
mov
lods
adc
mov
insb
sub
fidivrs
mov
mov
out
mov
xor
or
in
add
add
mov
and
or
outsl
insl
xor
loopne
fstl
mov
pop
mov
addr16
cmp
rcr
lds
pop
repz
leave
enter
xchg
jnp
daa
xor
push
sbb
test
outsl
dec
cltd
fld
adc
ss
bound
mov
daa
aam
add
lock
push
or
scas
in
test
lcall
mov
fimuls
shrb
sub
sub
pop
and
push
mov
xchg
cltd
test
je
mul
stos
cli
cmp
sub
movsl
adc
lcall
jb
mov
ret
xchg
push
add
mov
iret
out
mov
in
popa
mov
inc
lds
imul
add
dec
or
xor
push
xorl
ret
jle
in
test
cld
lds
jp
enter
rolb
sarl
popf
lods
mov
pop
dec
jo
mov
inc
fs
mulb
movsb
and
and
imul
ret
sub
movsb
aam
addr16
dec
push
shll
ffree
mov
push
bound
cmp
rcrl
pop
jno
cmp
adc
into
pop
pop
lahf
js
jae
push
mov
std
or
imul
push
or
dec
ret
dec
adcb
push
xchg
mov
lret
xor
call
sbb
dec
and
subl
aad
cmp
cmpsl
aam
pop
lds
add
daa
cld
ja
cli
outsb
or
mov
push
popa
dec
cmpsb
loopne
outsl
lret
mov
and
in
mov
lahf
adc
data16
out
fwait
mov
pop
mov
out
fwait
cmpsb
jl
push
int3
fnsave
or
cli
aas
fst
stc
in
dec
inc
fnstsw
ret
pop
fildl
ret
test
mov
mulb
sbb
mov
sbb
and
jnp
mov
lods
pop
mov
lret
int3
cmp
push
or
frstor
xchg
mov
inc
mov
xchg
or
add
mov
in
pop
push
mov
stc
or
mov
add
stc
dec
mov
xor
jl
arpl
cmc
adc
jns
orl
cmp
and
push
sub
iret
rdpmc
and
call
xchg
dec
subb
pop
xorl
add
cli
mov
mov
das
and
jle
adc
inc
cmp
jb
add
mov
iret
mov
cli
hlt
sbb
push
inc
sti
shrl
inc
gs
mov
lret
push
jo
jp
out
nop
aad
mov
mov
lret
repnz
es
js
clc
subb
mov
mov
popa
cmp
shll
mov
or
ljmp
push
rcr
ja
or
rcr
test
push
stc
and
popf
push
mov
and
lahf
jp
cltd
pop
fildll
xchg
movsb
jl
stos
popa
mov
ljmp
out
sub
pop
cmp
aad
sub
cli
fs
xchg
push
shl
ss
inc
sub
mov
ljmp
xchg
pop
fistps
fcmove
shl
mov
mov
repz
cmp
ret
adc
rcrl
inc
roll
dec
adc
repz
subb
jmp
ljmp
dec
pop
sub
jo
arpl
cmc
out
stos
sbb
cs
or
xchg
or
leave
ljmp
inc
mov
out
in
pop
xchg
xchg
jns
xor
jns
imul
notb
pop
push
test
frstor
push
sub
push
mov
icebp
pop
or
shrl
mov
outsb
addr16
sbbl
lea
daa
fisttpl
pop
jl
cli
sub
idivl
xchg
pop
mov
pop
cmp
mov
push
pop
mov
inc
hlt
lods
loop
decl
sti
fcmovb
add
mov
aas
test
daa
sbb
fdiv
xor
outsl
inc
dec
pop
lock
push
sbb
pop
pop
mov
mov
mov
mov
mov
cmp
addr16
sub
aas
sbb
int
test
lods
sub
mov
mov
sub
xchg
adc
xlat
data16
and
xchg
push
outsb
gs
lret
xchg
int
mov
sbb
popf
lret
pop
and
imul
push
loopne
orb
int
mov
mov
adc
repz
pop
int
mov
xor
test
out
adc
lds
dec
jb
iret
push
and
jle
jbe
les
js
or
push
sub
add
mov
mov
inc
std
jmp
or
std
adc
in
fs
in
mov
mov
mov
inc
fldenv
into
imul
outsb
xchg
pop
out
push
adc
test
jl
push
jecxz
adc
fmull
add
aas
adc
xchg
adc
jb
loop
jle
xor
xchg
leave
mov
sub
cmp
cld
dec
xchg
cmp
push
mov
arpl
mov
imul
test
lret
mov
add
mov
sbb
lds
pop
sahf
cli
les
cld
lahf
call
mov
push
sbb
sub
mov
lods
repnz
sbb
ljmp
sbb
inc
mov
and
mov
cmpsb
xchg
insl
dec
lock
test
popf
jns
dec
neg
pop
and
push
scas
mov
adc
cmc
push
shrb
pop
fdivrl
test
mov
mov
movsl
loope
or
nop
dec
sahf
stos
mov
insb
lds
fnstsw
inc
inc
dec
loopne
jo
lcall
and
mov
das
and
add
cld
adc
mov
inc
jp
sub
sbb
add
push
mov
and
jo
jns
gs
out
int
inc
add
nop
rcrl
repz
fstpt
inc
cmovp
testb
stc
xor
ja
lock
int3
xchg
dec
popf
fwait
js
int
je
addr16
and
push
repz
outsb
mov
test
cmp
sbbl
mov
xor
aam
pop
movsl
cmp
mov
dec
and
mov
mov
jp
mov
or
outsl
jo
test
cli
aad
inc
mov
movsb
fistl
push
js
mov
mov
push
das
out
cmp
sbb
xor
push
aas
adc
cmc
lods
mov
mov
lds
sub
push
test
push
es
add
ret
popa
pop
inc
jns
aad
test
popa
pop
add
xor
add
xchg
jmp
add
dec
mov
inc
xchg
leave
inc
nop
jno
out
aaa
push
shrl
xchg
jnp
inc
add
mov
js
sbb
jne
inc
push
pop
mov
dec
xchg
je
jnp
add
int
sub
fisubrl
test
test
pushf
nop
aaa
lods
push
fnsave
inc
out
push
sub
xchg
out
mov
sbb
inc
mov
cmc
bnd
jge
pop
outsb
sub
ss
fcomip
bound
push
push
mov
nop
cmp
and
or
pop
or
sub
pop
mov
in
and
mov
mov
sub
ret
repz
int3
sahf
inc
or
sahf
insl
push
int3
in
shlb
repz
test
xor
push
fisubrl
mov
mov
outsl
xchg
test
mov
addr16
outsb
sbb
dec
add
movsb
push
xor
jle
push
flds
add
pop
arpl
adc
lods
insl
cmp
frstor
les
scas
jmp
sub
dec
dec
mov
mov
xor
add
nop
addl
aad
sbbb
fists
push
dec
ljmp
jne
roll
cwtl
lret
lret
jg
cld
pop
fsub
jns
ret
mov
add
loop
and
pushf
mov
or
in
dec
repz
adc
inc
in
aaa
cmp
icebp
adc
push
pushf
dec
mov
outsl
leave
cltd
ja
xor
ljmp
inc
xor
fs
jae
mov
or
loope
cmp
push
xor
mov
lods
stc
repz
mov
std
push
sub
pop
sub
int3
jg
fidivs
jbe
insl
iret
xchg
jns
loope
std
int
in
push
call
or
dec
sbb
xor
outsl
xor
adc
dec
std
inc
mov
negb
pop
dec
cwtl
jno
pop
imul
stos
cmp
pop
pop
js
sbb
pop
mov
and
sbb
insb
stc
decl
cmc
xchg
clc
test
xor
inc
cmp
lods
mov
xlat
fistps
mov
jg
and
and
mov
push
out
shll
imul
add
fsub
sti
loope
loope
lea
gs
push
outsb
nop
jp
sbb
sti
jno
cwtl
mov
adc
push
adc
add
or
push
adc
lret
insb
mov
das
sbbb
in
stc
xchg
test
imul
add
add
or
sahf
rcll
sub
add
rcll
cwtl
mov
sub
mov
das
xor
pop
std
fs
rolb
cmpl
rolb
mov
pop
std
aam
push
notb
aam
std
xor
cli
push
divb
and
rcrb
into
in
scas
fisubl
das
adc
xlat
lret
dec
sbb
inc
sbb
outsb
aam
or
dec
ret
cmpsb
test
test
out
rcrb
pop
sub
into
xchg
out
mov
fwait
scas
push
and
wrmsr
sahf
sub
in
cmpsl
dec
popa
sub
sub
jne
das
push
xor
mov
push
lock
dec
mov
add
mov
stos
adc
cmp
push
jg
sub
cmp
aad
push
nop
imul
out
add
sub
mov
add
imul
cmpsl
shrb
pop
sahf
sbb
jns
out
je
shlb
orb
cmp
and
shll
ljmp
xchg
jo
cli
sub
bswap
xor
pushf
sarb
pusha
scas
aam
xchg
push
shll
push
cmp
rclb
mov
xchg
frstor
lock
mov
sub
sbbb
or
sti
shll
loop
cmc
jnp
arpl
push
push
push
rolb
outsl
lcall
xchg
mov
xchg
adc
pop
mov
call
call
mov
loop
in
dec
mov
fsubrp
lods
xchg
cld
in
jns
popf
insb
jbe
push
mov
xchg
or
cmp
inc
mov
xor
clc
inc
ret
inc
ljmp
or
push
xor
sbb
mov
and
rcll
xchg
nop
mov
mov
pop
mov
lods
mov
mov
lcall
lods
shr
mov
lock
dec
leave
aas
cs
lahf
mov
jmp
cwtl
xchg
mov
testl
scas
or
leave
ljmp
dec
imul
mov
xchg
aaa
fwait
inc
push
xchg
mov
jbe
test
jno
lds
xlat
xchg
aas
test
sub
jecxz
jo
pop
or
dec
dec
push
test
mov
out
cmp
clc
jle
or
xchg
scas
jo
sub
pslld
jg
push
and
or
ror
test
aam
lret
xor
or
fcoml
mov
mov
divl
jne
mov
frstor
shr
rcll
fwait
xchg
idiv
into
and
sahf
cmp
mov
popf
inc
cli
cltd
scas
pop
loopne
lods
cmp
adcl
dec
sbb
mov
xor
les
inc
or
dec
or
sarb
cmpsl
aaa
sti
or
push
insb
xor
mov
std
imul
cmp
test
or
out
lahf
mov
push
sbb
pop
jg
xchg
ss
das
sub
and
or
int3
cmp
cli
cmpsb
outsl
and
cld
xor
ret
mov
xor
stos
sub
cmpsl
xlat
in
mov
mov
cmp
lcall
cmp
inc
push
push
fcompl
cmp
imul
ficoml
shrb
imul
in
jb
xchg
jecxz
outsb
inc
mov
mov
leave
outsb
jns
xchg
fmuls
xor
bound
jge
xor
adc
addr16
jecxz
adc
and
enter
jg
dec
arpl
into
test
adc
in
dec
push
jp
out
hlt
addr16
lcall
cwtl
dec
mov
mov
mov
sub
sbb
pop
jg
push
xchg
scas
mov
sti
sarb
cmp
or
mov
jmp
fbld
xor
repz
sub
pop
mov
pop
inc
sub
lret
lds
es
pop
pop
or
and
cs
mov
stos
popl
xor
xchg
push
pop
fisttps
call
adc
mov
rorb
jo
mov
in
lret
mov
test
mov
in
in
jge
adc
sti
in
sub
fneni(8087
jl
sub
lcall
in
sbb
mov
pop
hlt
dec
and
shll
push
lea
sbb
cld
xchg
cld
cmp
fucom
mov
jmp
jnp
jno
push
mov
push
or
int3
xchg
xor
sbb
mov
mov
std
mov
les
gs
test
dec
pushf
leave
jle
rclb
push
xrelease
mov
stos
add
in
mov
ret
sbb
pop
movsl
xor
mov
and
ficomps
shll
xchg
outsb
xor
push
xor
adc
xor
mov
xlat
hlt
xorl
int
cmpsb
int
stc
mov
mov
cmp
jle
sbbl
or
xchg
or
xorb
fsubrl
addr16
push
dec
xchg
lea
in
lock
out
divb
push
dec
sbb
dec
pop
pop
adc
mov
insb
fwait
mov
pop
test
cmp
push
clc
aam
out
dec
jns
xchg
out
push
das
jnp
dec
sub
ljmp
cmc
mov
fidivrs
pop
dec
push
inc
rcrl
mov
adc
xchg
sub
pop
fildl
out
add
jmp
lret
jne
adc
mov
sub
in
push
insl
and
adc
lds
lahf
dec
add
mov
xchg
jecxz
gs
mov
inc
in
cmpsl
orb
dec
jns
cmc
jno
daa
fdivr
fdivl
xor
je
and
popa
cmc
movsb
xchg
insb
sub
in
mov
jbe
loopne
sub
es
and
pop
ljmp
stos
xlat
add
push
mov
pop
sub
dec
or
aaa
jl
into
in
inc
les
je
and
mov
imul
imul
xor
in
daa
or
or
dec
in
outsb
fsubl
pop
cmp
cmp
pop
pop
lret
in
mov
pop
add
test
ljmp
inc
sub
test
cltd
je
outsl
pop
fs
nop
inc
lret
push
addr16
lret
pusha
leave
sbb
jb
lcall
lods
mov
inc
movsb
rolb
pop
arpl
xlat
bound
movsb
jbe
fcmovnu
shlb
lahf
cmp
cmpsl
jns
fsubs
adc
mov
mov
xchg
mov
jo
push
scas
scas
pop
ja
loopne
ds
or
sbb
add
fs
fists
xor
pop
aam
fsubrs
decb
pop
adcl
call
jnp
sub
dec
push
int3
xchg
mov
sub
cmp
fs
xchg
loopne
mov
scas
inc
iret
sar
push
shll
push
insb
mov
cli
push
aad
es
pop
jae
ja
pop
mov
jnp
or
inc
mov
push
add
ja
push
xchg
cmp
mov
pop
xchg
aad
jmp
in
mov
stos
out
arpl
cmp
jo
lahf
cwtl
cmc
out
and
sub
insb
stc
cli
sbb
out
mov
cmc
mov
mov
je
dec
xor
into
push
aas
xlat
xchg
test
sahf
mov
xor
or
lods
aam
mov
dec
adcb
cld
mov
mov
mov
fnsave
or
jo
cli
fistl
pop
insb
scas
sbb
or
pop
push
or
cwtl
int3
fbld
int3
call
sbb
out
jecxz,pn
cli
cmp
das
je
pop
xor
push
sbb
rcrb
mov
mov
sbb
xchg
cmpsb
jae
push
adc
lret
jp
call
adc
out
lds
mov
aas
enter
enter
mov
iret
mov
adc
arpl
push
imull
cmc
sti
sub
mov
fcmovne
dec
jno
sub
aad
jne
cltd
mov
pushf
lods
aad
aad
mov
dec
sbb
cmpsb
jb
mov
aam
aas
xchg
adc
repnz
movsb
dec
int3
arpl
add
cmpsb
xor
scas
cli
dec
icebp
dec
mov
imul
xchg
inc
dec
lds
scas
or
push
or
pop
mov
cmpl
sub
xchg
dec
loop
mov
pop
in
ja
xchg
mov
push
in
stos
mov
xlat
cmpl
test
or
out
mov
lcall
pop
and
and
or
jp
sahf
test
fisubl
xchg
cmp
das
in
or
icebp
adc
dec
sbb
fcom
pop
sbb
icebp
in
das
mov
test
mov
pop
jns
fists
add
inc
jmp
js
xchg
movsl
dec
mov
add
and
insb
inc
out
test
adc
xchg
cli
ret
pop
mov
lock
push
xchg
inc
push
faddp
testb
mov
dec
cmc
and
mov
loop
out
pop
inc
loope
jb
stos
xlat
inc
stos
enter
dec
scas
fwait
jmp
fwait
push
push
cmpsb
jo
scas
dec
or
cmpsb
test
popf
mov
lahf
xor
popl
pop
gs
je
inc
sub
push
xchg
call
out
jns
push
mov
pop
imul
test
pop
mov
je
sbb
pop
movl
mov
jnp
add
mov
pop
out
inc
and
mov
push
mov
jp
ss
xlat
das
adc
pop
inc
repz
jne
add
xor
das
mov
mov
imul
cmpsl
cmpsl
or
fs
push
popa
hlt
fstpt
dec
popf
fstps
xlat
dec
xchg
call
mov
mov
fsqrt
leave
xchg
enter
daa
ret
je
nop
or
bound
xchg
mov
fsts
jmp
fstpl
lds
sub
fcompl
leave
and
in
push
movntq
outsb
icebp
push
in
pop
inc
leave
mov
inc
jae
pop
or
call
call
bound
lea
imul
mov
dec
sbb
cltd
pop
mov
dec
xchg
andl
pusha
jns
sahf
and
andl
dec
dec
ret
leave
repnz
mov
push
cli
icebp
je
add
cmp
lret
sarb
mov
cmpl
dec
int
xor
outsb
popa
mov
add
or
iret
push
add
sbb
sbb
shlb
mov
mov
std
xchg
jmp
enter
pop
out
test
sbb
cltd
xchg
push
cld
shrl
inc
dec
mov
or
int3
das
in
mov
ficoms
out
js
cmp
xchg
cmpsl
rorl
mov
jg
repnz
fmul
and
rorl
rcrl
rorb
mov
out
adc
cmp
out
fisttpl
xchg
xor
push
popf
inc
jo
enter
movsb
add
pop
fbstp
adc
dec
push
ss
push
je
orl
popf
mov
dec
add
sahf
pop
es
xor
mov
ss
cld
add
lret
nop
movsb
push
test
es
fdivs
sysexit
repz
sub
ja
icebp
pop
mov
scas
js
test
mov
adc
arpl
outsb
shll
pop
xchg
inc
pushf
xchg
out
and
mov
outsl
fistpl
adc
dec
pop
ds
cmp
push
stc
push
jg
fcomps
ljmp
mov
xchg
addr16
mov
push
pusha
mov
sub
in
icebp
jb
add
cmpsl
sbb
fdivs
sbbl
adc
popl
in
xchg
lods
icebp
cmp
jae
test
or
mov
pop
adc
imul
iret
inc
loopne
push
out
ret
icebp
or
jbe
fwait
xor
imul
stos
inc
fsubs
sub
cmpsl
mov
dec
push
aaa
repnz
sub
out
ljmp
cwtl
in
mov
jmp
push
and
push
aaa
lock
rcll
mov
dec
subl
push
fisttpll
adc
cmpsl
sub
das
jp
xor
dec
jmp
loop
xchg
dec
je
sbb
jbe
shrb
jb
ret
pop
sti
fidivs
jg
cmp
in
or
or
int3
cmp
rcll
push
fisubs
add
mov
mov
and
and
bswap
rol
out
sbb
clc
mov
jecxz
jmp
inc
mov
push
lret
push
pop
cli
mov
aaa
inc
xor
jns
in
sub
outsl
inc
xor
pop
gs
push
insb
mov
in
cmp
xor
cmp
jae
sbbl
dec
clc
mov
mov
jl
das
xor
xchg
push
sbb
ret
jmp
xchg
hlt
divl
aas
shlb
icebp
rolb
popf
cmp
daa
adc
mov
dec
push
jne
fsubrl
mov
and
pop
pop
cmpsl
mov
int3
sub
pusha
imull
jmp
ja
add
push
ljmp
mov
lea
insl
fsts
sub
xor
mov
mov
xchg
test
and
mov
jae
cltd
fidivrs
jo
xor
jb
mov
mov
dec
les
ret
lock
test
mov
add
cmpb
xchg
data16
ja
scas
idivb
bound
pop
lret
decb
icebp
daa
cmc
dec
adc
iret
fisubrl
inc
mov
add
jmp
or
sub
lods
sub
lock
lock
pop
hlt
push
xchg
rcrl
fcomi
push
push
imul
mov
push
sbb
inc
sub
leave
cmp
cs
sub
in
mov
iret
jecxz
andl
popf
and
ret
loope
pop
mov
es
dec
sub
daa
iret
cltd
or
cmc
icebp
ja
iret
mov
cmp
shlb
xchg
ss
fisttps
data16
cmp
sub
jle
lahf
mov
sbb
jns
push
sub
sub
push
popfw
xchg
xchg
orb
cld
pop
addr16
pop
andb
not
mov
out
and
test
popf
cmp
cmp
mov
lods
jge
in
shrl
push
jnp
sbb
dec
mov
pop
iret
sbb
mov
cli
and
mov
popf
mov
xor
mov
jno
xor
movsl
insb
dec
pop
cmp
pushf
addr16
and
cmp
push
push
inc
mov
mov
mov
or
in
cmpsl
dec
mov
int
lds
int3
jbe
stos
pop
out
mov
adc
mov
add
adc
popa
stc
inc
sub
mov
dec
pop
sbb
xchg
sbb
outsb
sbb
mov
mov
shrl
arpl
pop
sbb
pop
incb
cwtl
dec
inc
and
ret
rcll
arpl
dec
mov
and
int3
pusha
loop
out
loope
pop
adc
sbb
iret
call
daa
test
fwait
out
mov
lea
adc
lahf
gs
mov
sahf
pop
sub
insb
dec
les
jl
mov
jbe
or
packuswb
jg
sub
pop
cmp
icebp
loope
jo
jle
pop
inc
cmpsl
or
cmp
hlt
mov
in
jns
pop
pop
icebp
ljmp
xor
mov
push
pop
pop
rcrb
xor
fcoms
fst
ja
test
pop
dec
mov
jge
adc
outsl
mov
push
xor
and
add
jge
mov
pop
or
xor
or
fisttpll
sbb
hlt
mov
inc
imul
orb
and
mov
ljmp
cmpsb
decb
arpl
dec
sar
lret
push
mov
insb
nop
pusha
pop
push
or
push
push
fstps
iret
mov
repz
aad
jo
js
sbb
shll
xlat
or
dec
icebp
push
jnp
shrb
jns
loopne
loop
sbbb
dec
loope
cmc
dec
loopne
inc
inc
shlb
aad
lcall
push
cmp
outsl
test
lods
mov
fnstcw
fsubl
test
jbe
shrl
inc
cmp
iret
imul
addps
jb
pop
or
lock
lds
fs
lret
ss
dec
test
sbb
pop
jmp
outsl
int3
leave
mov
js
adc
insb
mov
pusha
inc
lahf
sti
in
lcall
loop
cltd
add
xchg
push
sub
dec
scas
dec
loopne
subl
lret
cli
movsb
fnsave
and
xchg
fimull
xorl
pusha
sbb
aad
jmp
push
into
xchg
lods
sbb
mov
cld
push
xchg
mov
cmp
xor
mov
cmp
inc
negl
les
jo
nop
in
ret
std
insb
insl
dec
sub
lea
mov
mov
sti
sub
push
pop
movsl
or
push
adc
test
aaa
insl
or
jle
enter
pop
lock
pushf
xor
xchg
rorb
jb
scas
test
jl
es
push
dec
fs
sahf
jmp
movsl
cmpsb
out
cmpsl
adc
and
pop
dec
add
fwait
mov
fnstcw
aad
inc
pop
gs
inc
jg
bound
fdivrs
cwtl
or
test
out
xchg
push
shl
pop
push
imul
scas
sub
sub
test
pop
pop
mov
data16
popa
data16
push
aaa
dec
adc
xorb
xchg
sub
sub
add
dec
inc
cmc
loop
jmp
adc
xor
dec
lahf
add
clc
pusha
and
dec
popf
mov
addb
mov
pop
std
sub
loopne
xor
repnz
scas
clc
adcb
sbb
jmp
scas
fstpl
inc
pop
in
pop
jne
test
push
jno
leave
cmp
lock
push
push
mov
out
flds
or
nop
test
jns
push
lods
aam
js
fwait
inc
push
jl
jle
in
test
iret
mov
bound
xor
or
lret
enter
jbe
push
xchg
negb
movb
cwtl
jmp
xor
or
out
pusha
inc
into
xchg
pusha
stc
frstor
dec
pop
out
add
xor
and
push
sbb
ja
loop
adc
push
shrl
nop
fstl
xchg
inc
sub
cmpb
popfw
shl
stos
and
mov
adc
jno
mov
jnp
mov
scas
es
aaa
cwtl
loope
and
into
aas
test
out
mov
mov
sbb
out
mov
mov
fildl
ret
jg
cmp
fisubs
dec
ret
sub
pop
ljmp
lea
lock
dec
in
add
ljmp
mov
not
testl
sbb
mov
pop
mov
and
movsb
xchg
wrmsr
push
inc
mov
jmp
into
shll
in
aad
sahf
stc
stc
xchg
jl
mov
rorl
mov
xor
ficomps
xor
js
and
fstpl
clc
inc
addr16
mov
aaa
push
xchg
or
ret
dec
sub
lret
in
mov
inc
call
mov
popa
pusha
mov
pop
and
sarl
repnz
and
push
or
loop
scas
xchg
and
ds
push
test
jno
mov
sahf
scas
inc
cmpsb
lret
add
jnp
rorb
or
adc
stc
ds
lds
cmc
sbbl
hlt
in
xor
pop
add
pop
std
sbb
stos
pushf
cmp
insb
pop
or
mov
mov
mov
add
pop
xchg
jo
insl
mov
stos
in
mov
cmp
movsl
adc
push
dec
das
xor
lods
js
out
lahf
mov
or
in
dec
je
sbb
cmp
stc
jo
inc
dec
lcall
fnsave
popa
iret
push
dec
scas
add
outsb
movsb
pop
dec
mov
test
pop
mov
xor
cmpsl
mov
out
mov
mov
popf
movsb
pop
fsub
loopne
movsb
clc
in
inc
xchg
inc
xor
mov
xchg
mov
insb
out
sbb
mov
dec
dec
in
and
test
inc
adc
cmpsb
fsubrl
and
jl
aad
mov
cmc
push
jecxz
mov
cmp
ja
sbb
shll
xor
xor
sbb
out
xor
addl
add
lret
call
mov
push
test
push
cltd
sub
pusha
mov
add
sbb
aad
xor
mov
fnstsw
cmc
adc
sbb
loopne
xor
xchg
pop
cmpl
out
push
test
mov
xchg
and
fstps
mov
aam
movsl
pop
sbb
loope
or
sarb
push
mov
scas
sarl
push
or
mov
adc
jmp
das
cwtl
and
popf
xor
sbb
lahf
cltd
push
leave
mov
mov
jo
xchg
test
cwtl
cmc
and
hlt
fists
mov
inc
push
ljmp
mov
push
dec
pusha
push
loop
jecxz
in
leave
in
das
mov
cmp
push
push
jl
aaa
and
and
jnp
xor
ret
loope
loop
xor
mov
cmp
cmpsl
popa
lea
lods
pop
loop
xor
fimull
pop
jno
shl
inc
out
add
add
cmp
test
push
pop
or
lahf
popf
cli
sti
fdivrl
jge
outsb
pop
leave
xor
adc
sub
adc
xchg
mov
sbb
xchg
cmp
clc
mov
jge
dec
movsl
lock
frstor
ret
xchg
ds
mov
inc
xor
xor
sbbb
add
aam
push
std
mov
and
dec
and
cmp
and
xchg
ret
bnd
pop
push
repnz
clc
sub
jae
dec
insb
xchg
sarb
ja
cmp
pop
push
and
mov
push
adc
test
inc
push
xchg
cmpsl
xchg
jno
push
mov
dec
jnp
and
clc
out
mov
mov
inc
mov
aas
add
pop
inc
imul
sbb
fnsave
test
sbb
cmp
sbb
fmuls
sbb
jp
mov
dec
jge
add
inc
test
inc
jns
vpaddd
and
sub
imul
jmp
xor
xchg
data16
enter
pop
js
cmc
mov
mov
inc
enter
je
addb
out
mov
shlb
dec
repnz
or
cmp
in
add
faddl
mov
sarl
shlb
aaa
xchg
fs
in
sbb
sti
nop
or
lret
in
xor
xor
xor
inc
xor
fists
sbb
outsb
dec
mov
xchg
mov
dec
and
adc
fnstcw
xchg
sbb
popa
xor
mov
mov
sub
xorl
xchg
pop
out
adc
cli
outsl
icebp
addb
dec
jb
mov
iret
les
scas
dec
stos
clc
addr16
ss
mov
and
pop
and
mov
mov
mov
mov
ficoms
movsl
jle
dec
lcall
fidivl
adc
push
mov
xor
mov
ret
imul
das
push
adc
sbb
adc
xor
push
fwait
xor
pushf
sub
xchg
mov
outsl
es
mov
pop
dec
jmp
stc
pushf
fistl
and
inc
xchg
fs
popf
xor
ss
jg
lods
xor
lret
daa
jno
adc
fistpl
adc
dec
push
outsb
cmp
aaa
inc
dec
inc
test
loop
lods
jmp
arpl
dec
daa
jbe
jmp
pop
pop
add
pop
xchg
in
mov
jmp
movsb
xchg
int
pusha
in
push
xor
mov
mov
sub
int
pop
jle
in
aas
mov
cmp
xchg
pop
inc
mov
rcrb
arpl
out
out
mov
jbe
fwait
add
out
ds
jmp
mov
je
pushf
fs
sub
mov
shrb
mov
stc
push
inc
xor
scas
fnstcw
es
cmpsl
outsl
nop
popf
mov
fldt
loope
push
lock
lock
add
adc
popa
inc
pusha
inc
out
fxch
bound
jnp
cmp
nop
jb
cmp
mov
cli
pushf
daa
aas
push
shlb
xorl
pop
inc
xchg
and
rorb
lcall
push
shll
ja
aam
jmp
ds
inc
js
add
push
es
pop
or
cvttps2pi
cmpl
adc
jbe
fbld
outsl
sbb
mov
es
insl
jns
sbb
jae
popf
push
jg
dec
xor
mov
sarb
pop
mov
subb
out
cmpsb
repnz
xor
dec
lods
outsl
dec
mov
jbe
fwait
repz
dec
movsb
shl
mov
inc
push
mov
stc
xor
push
mov
mov
addr16
lds
lcall
aas
lods
sbb
fsub
cmp
xchg
inc
jge
or
call
jl
int3
icebp
xchg
fsubs
pop
icebp
sbb
push
pop
xlat
mov
jns
leave
mov
in
jnp
dec
ljmp
fdivrl
bound
out
jbe
sub
imull
lret
xlat
adc
push
or
mov
jnp
cwtl
pop
xchg
xlat
mov
nop
sbb
add
sbb
pop
jbe
js
stos
movsl
scas
cmp
jg
mov
inc
push
adc
push
fidivl
mov
pop
insl
cmpsb
and
xchg
ds
lock
jno
or
or
add
pop
arpl
test
cmc
std
cmp
cs
lret
push
dec
rclb
mov
inc
jp
cli
mov
cmc
stos
gs
imulb
sbb
add
and
add
mov
push
push
mov
out
jp
sbb
push
dec
imul
es
jno
pop
push
mov
sub
call
jl
int3
dec
lods
pop
jle
scas
mov
mov
mov
repz
lret
fiadds
fcmove
xchg
sti
cld
stos
mov
or
pop
gs
cltd
mov
fldcw
jmp
xchg
jno
repz
ret
jns
push
out
and
dec
outsl
mov
lds
adc
push
mov
insl
add
jo
cmpxchg8b
add
mov
ljmp
mov
jae
pop
mov
loopne
inc
call
es
dec
shll
cli
cwtl
je
loope
test
add
mov
mov
int3
add
arpl
xchg
jo
push
xor
stos
andb
push
hlt
push
loop
pop
into
lcall
pushf
daa
int
xchg
sahf
popa
xor
addr16
jbe
xchg
pop
lret
xchg
sub
test
aas
lods
pop
cmp
mov
scas
ds
push
pushf
das
jno
adc
mov
add
in
and
les
mov
inc
scas
aaa
cwtl
sub
inc
inc
in
adc
or
out
mov
sub
shrl
and
cltd
xlat
out
adc
mov
rcll
sbb
cs
pop
loopne
in
test
pop
mov
iret
dec
nop
cltd
dec
or
nop
pop
xchg
adc
enter
push
sub
cmp
add
mov
adc
sbb
aad
js
pop
movsl
je
test
hlt
mov
movsl
push
lcall
mov
inc
push
mov
mov
or
loop
popa
xor
dec
push
aad
bound
cmpsl
dec
xor
popf
je
add
insb
aam
insb
iret
lods
pop
std
or
xchg
jae
adc
lret
dec
mov
jns
sbb
into
and
cld
add
test
shll
rcll
cmp
sarl
stos
jmp
xchg
mov
inc
pop
ja
fwait
insl
jnp
mov
out
mov
fsubl
and
add
shl
mov
daa
push
pop
clc
hlt
leave
cmp
push
sub
sti
outsb
shlb
mov
pop
mov
or
and
int3
push
sbb
mov
push
fistpl
add
ss
ljmp
int
insl
xor
arpl
push
push
pop
mov
push
mov
test
add
outsb
nop
and
loopne
shl
jp
cwtl
dec
cmp
mov
mov
cmpsl
mov
or
add
lahf
notb
xchg
and
or
xor
sbb
es
dec
dec
loopne
inc
bound
nop
insb
mov
pop
mov
sub
addr16
imul
adc
mov
shll
stos
jo
jnp
sbb
shll
dec
loope
repnz
aad
into
jnp
mov
pushf
aam
imul
and
jnp
inc
inc
add
test
leave
push
out
in
icebp
testl
or
and
andb
jmp
dec
xchg
popf
outsb
cmpsb
inc
js
add
outsl
xchg
dec
xor
add
shl
push
xor
dec
sub
fabs
andb
pop
xchg
in
ret
divl
jb
push
js
mov
jb
rolb
std
mov
inc
mov
jnp
mov
cmp
loop
mov
lret
mov
neg
adc
repnz
fiadds
add
cltd
hlt
int3
fisubl
test
idiv
aaa
inc
cmp
push
testb
ljmp
pop
invd
ret
cs
sub
add
negb
ret
fs
ja
mov
cmp
fmuls
ret
and
push
xchg
cmp
pop
xor
aas
jns
push
mov
cmp
stos
das
test
push
cmp
push
popa
mov
negb
xorl
outsl
dec
icebp
and
int
je
pop
movsb
mov
add
adc
add
out
fists
and
pusha
ljmp
sbb
xchg
xor
add
dec
sub
lds
sbb
imul
cmp
nop
mov
sbb
das
push
cmp
xor
sbb
adcb
iret
stos
fldt
icebp
or
xchg
mov
inc
popf
lret
mov
inc
or
cld
int
ret
aam
jmp
and
test
dec
sar
inc
lods
js
and
scas
cmp
sbb
xor
xchg
mov
sbb
es
adc
and
pop
mov
ja
test
and
in
push
outsl
or
mov
add
add
mov
std
mov
xor
repz
je
cmp
jge
test
ret
xorl
sub
ss
mov
jne
mov
orb
out
rorb
ljmp
fwait
mov
add
aam
inc
cmpsb
imul
inc
clc
mov
or
shrl
mov
and
cltd
add
cmp
cmp
add
push
xchg
adc
sbb
mov
lods
mov
arpl
cmp
sub
push
pop
rolb
shrl
mov
or
icebp
imul
outsb
stc
jnp
leave
aas
jg
test
or
lea
movsb
les
ret
cltd
jns
adc
fists
enter
fs
pusha
enter
add
cmp
daa
jb
stc
fadd
pop
add
fisubrs
icebp
adc
roll
outsb
lds
xor
or
or
cmpsb
daa
cmpl
mov
push
pop
in
mov
pop
cmp
pop
pop
push
test
arpl
mov
sbb
loopne
jl
inc
cmp
sub
push
add
add
jmp
addb
cmp
xor
jp
mov
into
clc
or
das
cmp
push
aaa
mov
stc
mov
inc
popa
cmp
mov
adcb
add
nop
test
dec
mov
lods
adcl
fwait
movsb
jg
int3
es
cmp
pop
jne
fsubrl
fs
sbb
iret
ljmp
sub
xor
mov
stos
or
repz
shl
int3
shlb
aam
push
out
mov
push
xor
pop
lcall
sub
orl
push
xchg
adc
add
push
mov
fwait
orb
lret
mov
cmp
push
cwtl
jle
push
mov
inc
ja
mov
and
xchg
loope
mov
subl
mov
jmp
cmp
out
mov
xchg
sti
push
sub
xchg
inc
cltd
or
xchg
ja
rorb
xchg
mov
xlat
imull
push
jno
xor
xchg
out
inc
jnp
jns
adc
jbe
jno
jl
fistpll
clc
and
outsl
pop
push
mov
bound
push
sub
aas
xchg
jmp
mov
pop
adcl
push
cmpsl
in
jmp
into
jl
roll
and
daa
cmp
add
js
int
popa
mov
dec
dec
clc
out
out
int3
pusha
decl
or
jns
popf
and
mov
movsl
mov
jge
mov
icebp
jg
shrb
data16
icebp
into
mov
sbb
adc
imul
add
push
sub
adc
fdivrl
aam
dec
jg
lret
sub
and
fstl
jg
add
sti
inc
cwtl
insb
scas
icebp
xchg
shl
outsb
int
pop
test
dec
push
inc
mov
or
rcrl
jmp
mov
push
cmp
dec
or
or
subb
mov
and
and
push
lds
xor
pop
fs
xchg
pop
lahf
or
push
sbbb
mov
inc
and
gs
dec
les
sub
aas
sbb
pop
test
add
or
lock
push
gs
sbb
insb
adc
hlt
mov
mov
scas
inc
int
adc
inc
cmc
mov
xchg
addr16
dec
icebp
add
fildll
mov
adc
push
mov
fmuls
icebp
xchg
andl
cmp
lock
jno
pop
push
sub
testb
aas
pop
pop
fs
mov
jg
out
mov
movsl
pop
dec
lahf
mov
test
sbbb
test
lahf
mov
jo
mov
sub
xchg
adc
movsb
in
mov
fs
push
mov
jmp
or
xchg
inc
shrl
push
es
xor
fdiv
and
imul
lret
movsb
fwait
mov
nop
mov
xor
mov
test
lods
cmp
pop
fdivs
add
mov
cmp
or
lret
mov
mov
push
mov
cld
or
dec
push
sarl
xchg
fdivr
gs
inc
scas
xor
loopne
daa
mov
sbb
icebp
inc
mov
int
xor
jmp
jno
aam
pop
aad
test
fldt
ficoms
jo
ja
rolb
cli
jns
and
mov
lods
stos
mov
and
xchg
jecxz
lds
nop
mov
test
arpl
adcl
xor
push
sbb
popa
xor
movsb
xchg
mov
ficompl
repnz
imul
jb
adc
data16
dec
mov
aaa
adc
xor
sbb
xchg
inc
inc
inc
push
xor
in
or
jbe
lods
std
add
jae
xchg
push
pop
fistpll
xor
jmp
pop
fcompl
xor
xor
push
loope
sub
or
and
shll
dec
adc
mov
imul
push
ret
jae
test
adc
dec
ret
xor
mov
jg
push
les
inc
test
xchg
cmp
cmp
jl
aas
mov
cwtl
or
out
enter
dec
pop
jb
leave
jmp
jle
shlb
call
sub
mov
mov
jl
movsl
movsb
cltd
aas
fdivrs
cld
adc
les
addr16
cmp
push
push
mov
stos
adc
inc
mov
stc
shlb
mov
das
insl
fidivrs
ret
aaa
js
fs
adc
aam
xchg
adc
sub
pop
outsl
incl
pop
gs
fimull
pop
xor
insl
fcmovb
push
cs
jmp
insb
mov
pop
mov
das
cmp
sub
push
rclb
jae
insl
or
test
adc
dec
push
adc
push
jb
add
jnp
sub
repnz
stos
fldl
sbb
jp
adc
out
xchg
shll
scas
insb
mov
jne
shlb
sbb
dec
mov
and
shrl
ffreep
je
mov
or
imulb
push
out
bound
lcall
sbb
mov
sub
scas
into
iret
adc
mov
cmp
add
pusha
add
gs
stos
jne
jle
imul
in
push
enter
xor
popf
push
loope
adc
es
daa
mov
pop
jp
or
testb
fstenv
das
push
movups
mov
mov
aad
sub
repnz
addr16
jb
pop
and
mov
gs
xchg
dec
fldpi
jge
xor
adc
fdivr
push
jp
push
inc
ret
cmp
lret
pop
inc
xor
cmp
imul
insl
sbb
inc
add
fistpl
push
mov
cmp
and
arpl
nop
lock
push
orl
mov
std
fs
rclb
mov
push
mov
mov
idiv
and
hlt
xlat
sub
mov
push
icebp
out
mov
ljmp
lret
popa
fdivs
pop
xor
leave
xchg
cmpsl
in
mov
or
sbb
fcompl
imul
pop
repz
repnz
jecxz
scas
enter
int
cmp
and
and
cli
insl
clc
mov
or
add
cmp
xchg
dec
push
scas
inc
mov
rolb
jg
roll
xchg
dec
adc
cmp
lods
jnp
pop
adc
roll
cmpl
push
add
gs
out
test
dec
sti
inc
icebp
xchg
js
dec
push
fidivrs
fildl
in
xchg
mov
sub
jns
pop
push
jecxz
lret
arpl
shl
mov
in
push
fwait
cmpsb
outsl
les
lahf
pop
mov
xchg
push
xchg
shrb
xchg
xchg
leave
mov
or
xchg
dec
xchg
push
lods
sub
jnp
enter
out
jge
cmc
mov
sub
aas
mov
lcall
pop
ja
mov
std
xchg
cmp
jg
adc
iret
div
and
mov
nop
sub
mov
cmpsl
divl
or
std
out
push
dec
jp
and
inc
sbb
inc
out
dec
das
sbb
fisubrl
mov
notl
push
addr16
dec
sti
test
inc
rcr
mov
lret
or
ss
mov
mov
sbb
stos
das
aad
sub
push
clc
dec
mov
addr16
and
lods
cmp
mov
lods
sub
adc
cld
gs
inc
sub
add
add
lock
fwait
out
test
inc
xchg
jl
lret
or
pop
test
push
pop
pop
aaa
sbb
xchg
push
popa
or
sub
fs
adc
xor
pushf
adc
sub
or
push
in
pusha
jns
xorb
jbe
mov
sub
sub
inc
mov
les
cmpsl
push
cltd
xor
push
outsl
movsb
fcmovu
out
aas
adc
push
jl
jg
arpl
out
mov
stos
or
fstps
int
xchg
push
lods
jo
sbb
mov
cmp
mov
or
jle
or
cmpsb
xor
stos
ljmp
mov
push
sti
int3
hlt
lcall
stos
repz
out
add
dec
xchg
call
and
andl
sub
inc
addr16
pop
iret
xchg
cmpsb
daa
cmp
push
lods
fildl
inc
out
mov
into
rcll
jae
push
popf
jo
gs
dec
sbb
ss
leave
test
fdivp
addr16
xchg
aaa
jmp
stos
pop
roll
sbb
insl
lock
outsb
mov
into
in
xor
jge
repnz
xchg
sub
out
mov
stos
and
sarl
orl
mov
ret
call
fcoms
shll
sub
into
leave
call
mov
mov
pop
cmp
jne
outsb
cmc
jecxz
scas
jl
push
add
inc
and
cmpsl
mov
add
stos
mov
clc
add
pop
loope
pushl
push
stc
add
ds
adc
fmull
push
jmp
fisttpl
adc
adc
cli
insl
cmp
nop
sub
push
pop
inc
add
adc
jp
lods
lcall
pop
add
int
cltd
sbbb
lock
cmp
bound
mov
inc
cmc
cwtl
into
fs
mov
subb
lea
add
sbb
jno
mov
loop
cs
insb
cmpsb
xchg
jge
sbb
jp
or
stos
sarl
jae
repz
mov
pop
dec
xor
sbb
xchg
jbe
cmpsb
ret
ljmp
sub
adc
jmp
enter
ret
sbb
and
int3
sbb
fwait
aaa
cli
cld
xlat
push
out
pushf
and
test
mov
push
shlb
inc
xchg
aaa
call
outsb
pop
inc
adc
cmp
aam
xchg
mov
int
cmp
pusha
sub
shrl
in
mov
jb
addb
cmpsb
aad
orl
pop
mov
dec
jmp
fidivrs
iret
andb
inc
dec
insl
leave
pushf
dec
xchg
pop
sbb
cmpsl
push
adc
popf
xor
cmpsl
add
es
lea
fwait
sbb
lds
mov
fs
push
add
shlb
and
aam
mov
xchg
dec
cwtl
xor
or
fbld
incb
push
dec
addb
repz
mov
je
mov
mov
mov
iret
bound
xchg
loope
aas
les
xlat
push
jl
nop
stc
in
pop
js
push
sbb
sub
mov
int3
push
and
adc
fwait
mov
call
sub
fsubr
gs
lock
ficoml
pushf
adc
fwait
sti
in
js
ret
dec
push
pop
push
insl
dec
cmp
stos
orl
ret
pop
ret
push
push
mov
fildll
in
popa
cli
jle
jmp
scas
cmpsb
xchg
pop
adc
repnz
into
fldenv
jne
sub
cs
xor
xor
sub
mov
jmp
mov
or
aas
cmp
jecxz
fldenv
push
shl
aaa
icebp
mov
and
push
pop
popf
mov
jnp
xor
and
mov
bound
mov
fcomip
pushf
aas
xchg
mov
iret
call
daa
dec
pusha
cltd
ss
mov
addl
imul
jnp
mov
clc
leave
int3
scas
sbb
pop
sub
xchg
es
fwait
dec
push
ljmp
sbb
jne
fwait
sub
sbb
jl
or
sti
sub
sahf
aad
testb
jecxz
xor
cwtl
fwait
lods
rcll
sahf
scas
pop
aaa
mov
sbb
fistpll
loopne
dec
add
pop
jae
jb
cmp
shl
xchg
mov
sub
pop
jns
and
cmp
cmpsl
push
xlat
jge
cmp
sub
push
jmp
ret
repz
stos
lods
cltd
test
popa
ret
cmc
imulb
xchg
lret
push
mov
sbb
and
dec
push
cmp
hlt
stos
outsb
pop
out
ljmp
mov
cmpsb
jno
sbbl
adc
xor
add
jnp
cmpl
pop
xor
xor
cmpb
push
or
call
shrl
pop
cmp
sub
and
xor
and
jns
pop
fimull
and
loope
into
jmp
addl
push
js
nop
out
push
jb
inc
push
sbb
jae
xchg
rclb
cmp
bound
les
inc
icebp
inc
fidivrl
aaa
adc
dec
inc
popf
or
mov
push
adc
lea
and
and
jae
adc
gs
addb
outsb
dec
jle
or
xchg
mov
jecxz,pt
icebp
psubq
cli
pop
fcoml
mov
sahf
lcall
add
xchg
cmpsb
insl
sub
mov
xchg
xchg
xor
or
dec
xor
test
test
popa
popf
inc
dec
ret
aaa
cmp
dec
flds
je
or
repz
inc
mov
mov
sti
sbb
xor
xor
movsl
rolb
bound
jp
xor
outsb
adc
cmp
aam
enter
ret
cmp
cltd
sub
insb
fs
xchg
lret
sti
pop
inc
cltd
fisubs
sbb
lods
jb
fsubrp
mov
das
loopne
bnd
adcl
aas
out
in
ljmp
push
adc
inc
inc
push
cwtl
in
in
jmp
jne
and
pop
dec
ja
adc
mov
dec
jno
mov
ja
mov
leave
imulb
hlt
into
jae
push
shll
cmp
jno
ja
ret
leave
and
xchg
mov
pop
imul
loop
outsl
fstpl
jge
jne
les
fstps
xor
mov
xchg
mov
icebp
fistps
jns
mov
cmp
xor
mov
mov
push
or
mov
out
pop
jnp
mov
and
and
in
rcrb
dec
leave
out
push
out
xchg
adc
int
add
inc
test
insb
jge
sub
xchg
movsl
sar
jmp
sbb
jge
mov
adc
daa
das
sub
clc
mov
mov
jb
ss
inc
out
rcl
ss
push
mov
push
fsubr
sub
pop
xor
push
outsb
mov
dec
push
or
lods
mov
ljmp
in
and
adc
scas
data16
ret
gs
cmp
sar
out
cmp
inc
mov
jle
and
je
sub
xlat
insb
addb
test
xor
int3
xchg
xor
hlt
adc
mov
dec
pop
pop
pop
mov
sub
stc
mov
mov
lea
iret
lods
jle
mov
jmp
sbb
sub
leave
faddp
test
xor
push
mov
jb
add
or
push
test
push
cmp
mov
push
sbb
jg
fiadds
inc
fcoms
mov
lock
cmp
pusha
ja
jle
scas
mov
test
sub
sub
data16
int3
cmp
mov
cmc
cs
imul
or
outsl
xor
aas
std
insl
mov
push
mov
sbb
movsb
std
notl
pop
mov
or
dec
arpl
mov
scas
push
repnz
push
orb
sbb
adc
sbb
or
leave
sbb
imul
into
push
nop
mov
hlt
sub
and
push
dec
or
inc
and
int3
ret
out
mov
cwtl
lret
or
adc
mov
and
mov
out
dec
pop
jo
sub
enter
mov
xchg
sahf
test
mov
js
xlat
dec
xor
inc
out
xor
inc
dec
hlt
jecxz
pop
mov
pusha
cmpsb
and
sahf
inc
mov
sbb
lods
mov
adc
ret
dec
mov
push
or
fwait
cmp
inc
pushf
mov
push
push
jg
and
cmpsl
loopne
fisubs
cmpsb
hlt
repz
add
pop
xlat
mov
mov
aad
test
mov
arpl
movsb
mov
xchg
jp
ja
push
pop
xchg
inc
xchg
jae
xchg
sub
mov
fldcw
xchg
mov
scas
ret
popa
cmpl
cli
adc
shrb
ljmp
aas
shr
outsl
pop
and
ja
movsb
int
jo
xor
xor
mov
into
test
mov
mov
ss
ss
sbb
pop
aas
fisubs
mov
test
sti
daa
movsl
dec
mov
inc
mov
sbbl
add
cmp
push
xchg
fnstenv
movsb
test
jns
andl
stos
cltd
mov
cmp
dec
adc
scas
cs
cwtl
jp
fwait
cmp
pop
sub
mov
xchg
cmc
in
jne
pop
ljmp
fmull
cmp
subl
jp
push
pop
cmc
mov
and
int
inc
scas
ja
addr16
insl
dec
rclb
movsl
push
xor
lock
sarb
sbb
ret
iret
fbld
push
js
lock
in
mov
bswap
push
ret
inc
jb
mov
loopne,pt
cmpsb
xor
addb
inc
clc
repz
add
inc
lods
insb
sbb
roll
push
mov
out
shrl
jns
in
xchg
inc
pop
rcll
fwait
sub
hlt
sub
fcmovbe
xor
nop
test
push
mov
ja
cld
sbb
xchg
sub
xor
lea
lcall
adc
push
out
jns
lods
mov
inc
test
leave
jae
pop
jns
mov
inc
xor
adc
ret
pop
icebp
mov
in
xchg
test
je
xor
pushf
sbb
pop
sbb
pushf
lret
and
outsl
add
mov
jbe
clc
stos
imul
mov
ret
push
pop
mov
adc
dec
xchg
sub
cmc
mov
lret
jnp
mov
repz
jb
rol
mul
sti
in
inc
inc
repz
sub
adc
nop
fisubrl
and
lea
sbb
adc
fcompp
lcall
jmp
mov
rcrl
loope
aas
add
test
sub
cltd
xor
addb
adc
jmp
dec
and
xorl
inc
push
jg
xor
push
movsl
add
xor
adc
rep
push
insl
imul
insl
inc
nop
xor
adc
cmp
cmpl
dec
cmp
sbb
push
arpl
lods
inc
dec
dec
mov
jge
leave
in
pop
and
fbstp
stos
fwait
sahf
cmp
testb
or
sub
outsb
dec
mov
xchg
loopne
inc
ja
add
iret
mov
stos
sbb
ror
movsl
mov
sbb
pop
pop
or
jae
mov
es
push
jl
hlt
out
mov
insb
fldt
mov
adc
inc
ja
lods
test
test
ret
sbb
daa
cld
jmp
mov
dec
jecxz
dec
iret
mov
push
js
es
icebp
insl
scas
mov
xor
movsl
fs
leave
lock
push
add
xchg
sub
adc
sub
push
jge
sbb
andl
push
mov
gs
and
ljmp
mov
inc
popf
xor
daa
andb
and
das
mov
movsb
adc
ret
cld
adc
mov
adc
mov
movsl
xchg
arpl
lea
xchg
sbb
outsb
es
ret
cs
int3
pop
cs
test
or
sahf
sub
sub
ss
or
in
dec
in
inc
adc
bound
sbb
das
or
lea
test
icebp
mov
loope
fwait
mov
sub
jge
aaa
jmp
add
sub
cmpsb
out
and
in
addr16
cs
mov
mov
mov
lods
test
add
daa
inc
push
and
or
jbe
stos
xor
jle
shrl
mov
shll
punpckhdq
pop
lock
sub
cltd
fsubs
loopne
loopne
shlb
add
jp
cmp
push
stc
in
outsl
xchg
cmp
int
pop
push
and
cwtl
inc
sub
xchg
stc
and
dec
mov
jbe
jnp
push
nop
jno
negl
lods
mov
arpl
xchg
pushf
xchg
xor
push
les
and
testb
jp
imul
mov
icebp
and
mov
fstps
dec
fldpi
xor
movl
sbb
lret
cmp
jg
aaa
dec
ss
xor
lods
or
aas
pop
mov
cli
mov
adc
mov
pop
outsb
inc
jmp
mov
mov
push
movsb
sbb
addr16
idivb
je
cmp
jnp
xchg
mov
mov
adc
jg
les
in
decl
dec
push
lock
and
pop
mov
inc
ds
sbb
hlt
ja
mov
dec
cmpsb
inc
cli
jl
inc
inc
pop
sbb
fisubrl
jge
sub
lds
and
pushl
imul
jbe
in
mov
mov
cmp
cmp
mov
lahf
repz
inc
ds
inc
xor
ljmp
mov
lea
sub
pop
xlat
xor
or
and
fisubrs
mov
daa
scas
movsb
pop
insl
cmpsl
mov
pop
int
sub
add
jnp
out
push
sub
cwtl
mov
and
and
mov
xchg
gs
mov
insl
and
in
mov
fadds
aas
out
push
push
fidivs
sahf
xlat
js
cmp
sti
jp
ds
pop
aam
out
ds
add
int3
shlb
inc
out
or
sbb
mov
adc
mov
imul
lret
adc
adc
and
frstor
jns
pusha
call
jne
xlat
repnz
scas
sub
hlt
cld
push
pop
repz
fwait
mov
jle
in
mov
rorl
mov
mov
gs
cmp
lcall
loope
pop
stos
test
dec
or
js
out
sarb
popf
cmp
lret
lret
cmp
iret
lcall
jecxz
and
and
dec
pmullw
sub
sbb
fstl
shlb
mov
cmc
and
sbb
cmc
in
cmp
test
xchg
sub
iret
xchg
or
mov
pop
into
inc
movsb
int
insl
mov
es
mov
inc
in
push
out
lahf
dec
cmp
inc
jmp
pop
push
mov
xchg
cmpsl
fs
fldenv
cld
fcoml
sti
cld
popa
ret
jg
scas
and
fisttpll
insb
xor
sti
jle
xchg
cmpsl
mov
mov
les
xchg
adc
inc
and
pop
dec
repnz
jmp
outsb
lret
loope,pt
jg
mov
ja
inc
fcoml
xchg
dec
or
push
fisttpll
push
push
stos
pusha
and
in
xchg
pusha
dec
popf
dec
dec
jne
mov
mov
ja
cld
or
repnz
dec
sbb
mov
push
jbe
mov
test
stos
stc
jb
inc
popa
inc
xor
sub
dec
xlat
push
shld
fwait
and
out
imul
xor
ja
les
out
adc
ret
pop
and
push
mov
sbb
pop
les
add
pop
hlt
leave
mov
cwtl
fidivs
dec
sbb
pop
imul
movsl
and
xor
push
jg
and
dec
jl
out
jp
pop
lea
add
scas
inc
cmp
inc
xchg
jb
xchg
or
xchg
push
out
mov
jnp
push
sub
iret
mov
inc
mov
jno
jge
jle
aaa
sahf
or
js
adc
fwait
pop
cltd
jnp
outsb
pop
cmp
push
add
insb
mov
sbb
aas
pop
les
shlb
ds
ror
lds
xchg
sub
out
xchg
cwtl
movsb
or
pop
lret
repz
sbbl
scas
add
mov
dec
cmpsb
mov
cmp
push
lods
jnp
out
stos
jmp
pop
mov
mov
push
cmp
dec
push
adc
pop
cmp
lods
in
loop
bound
sarl
mov
fdivrl
nop
rolb
fnstcw
and
mov
sbb
and
insl
fidivl
or
lods
in
sbb
pusha
addr16
popa
sbb
and
or
mov
or
loopne
jae
add
push
lret
or
fldcw
fsub
mov
pop
sub
std
and
adc
mov
pop
mov
ret
cltd
mov
std
hlt
xor
mov
and
mov
sub
es
loop
enter
cmp
and
lahf
xor
pop
dec
cmp
js
push
jb
leave
inc
cmpsl
inc
sub
cmp
mov
mov
xchg
scas
jno
aaa
stos
mov
cmpsl
aaa
mull
test
bound
cld
pop
inc
dec
stos
sub
inc
int3
icebp
xor
dec
pop
mov
xor
daa
jbe
xor
fnstenv
and
lock
in
sbb
fucomp
out
or
mov
xor
in
sub
mov
xchg
cwtl
insb
std
push
add
ljmp
adc
pop
and
sbbb
xchg
sbb
cs
jecxz
aad
mov
pusha
aad
xchg
es
pusha
icebp
inc
shlb
fbld
rorb
xor
fdivl
adc
mov
arpl
insl
xchg
pop
adc
pop
push
mov
xchg
push
fldt
out
and
addl
or
insl
loope
fdivl
lea
leave
jo
decl
jl
dec
mov
ret
ljmp
cmp
lods
leave
loop
pop
out
pop
addl
cmp
cmpl
xchg
pushf
and
sub
mov
lods
and
lea
test
mov
mov
inc
bound
ja
adc
sti
enter
push
pop
pushf
in
or
aad
cmp
shl
testl
pop
in
cmp
jnp
rep
jo
les
xor
sti
or
xchg
push
mov
xchg
xchg
push
and
inc
ds
mov
test
cmpsl
xchg
lods
lahf
out
mov
incb
pop
inc
mov
ljmp
xor
stos
cmc
mov
int3
push
xor
inc
dec
je
shl
sarl
sub
inc
adc
arpl
xchg
roll
adc
or
mov
out
fwait
pop
mov
push
dec
sbb
test
sahf
in
or
xchg
ljmp
mov
inc
mov
adc
std
jns
mov
roll
inc
pop
es
pop
jbe
dec
pop
arpl
lea
loop
mov
xor
int
xchg
repz
enter
mov
int
and
xchg
cltd
aam
push
or
enter
dec
call
mov
add
lret
clc
cltd
sti
sub
adc
mov
out
cwtl
jae
push
fldenv
sahf
sbb
and
mov
popf
aam
jo
sbb
ljmp
lea
xchg
xor
cmpsl
jno
jp
cmp
iret
mov
mov
jge
bswap
insl
cmp
inc
movsb
xchg
sbb
add
cmpsb
inc
pop
dec
fcoms
std
cld
push
ficoml
mov
sub
dec
mov
mov
fdivl
dec
and
adc
dec
cwtl
insb
imul
xchg
shl
dec
rcrb
js
push
scas
pop
les
test
dec
jp
nop
and
outsb
fwait
jl
or
mov
mov
lahf
xchg
shll
cmp
scas
in
mov
adc
sbb
fidivl
sub
jmp
xchg
cmp
sub
sub
hlt
inc
dec
ficomps
and
dec
stc
dec
test
fdivl
mov
cli
bound
inc
nop
add
pop
clc
jl
add
sbb
hlt
inc
ficompl
push
les
mov
mov
pop
arpl
stos
pushf
loopne
mov
pop
xchg
ret
cmp
inc
lret
call
mov
daa
adc
and
mov
sbb
xchg
adc
add
inc
divb
lock
iret
xchg
mov
in
xor
sub
movl
ja
mov
sbb
mov
push
fsubrs
cmpsb
data16
xorl
mov
add
pop
jge
xchg
sbb
leave
stos
dec
cmpb
ds
test
sub
inc
and
pop
jns
data16
or
fistl
sbb
andl
pusha
xor
fmuls
jno
mov
xchg
pop
mov
rolb
mov
xor
cmp
idivl
in
les
inc
dec
jg
stc
insb
rcrl
mov
addl
inc
sbb
mov
popf
xchg
fidivl
les
clc
push
cmp
push
arpl
mov
cmp
inc
or
or
test
xor
test
push
adc
in
orb
cmp
ss
xchg
pop
stos
aaa
pop
push
push
inc
inc
idivb
add
pop
scas
push
mov
test
pop
jle
aas
jge
jmp
pop
and
fwait
add
push
xchg
test
mov
and
sub
jmp
adc
sbb
jb
cmp
shlb
push
sbb
adc
jae
jle
cmpsl
mov
int3
sub
inc
enter
scas
leave
lods
test
pop
icebp
icebp
cli
jnp
sub
jp
mov
sahf
inc
dec
mov
dec
fmuls
and
mov
dec
cwtl
push
jle
push
sub
cmp
dec
add
fwait
es
daa
in
sahf
inc
jle
je
adc
mov
mov
rol
mov
xchg
es
stc
addr16
cmp
rorl
mov
xor
xor
mov
outsb
movsl
adc
add
loop,pn
pushl
mov
cmp
cs
repz
xor
mov
fcomps
adc
mov
cmp
rcr
inc
lock
dec
imul
adc
jmp
sti
addr16
cmp
nop
push
fimull
xchg
out
cmp
jae
fcmovu
xchg
sahf
popa
cmpsl
push
push
add
xchg
movsb
out
mov
add
add
and
je
dec
je
bts
andl
sub
mov
sub
jecxz
push
push
xchg
push
addr16
xor
mov
cmp
decb
int3
and
es
iret
icebp
js
ss
mov
pushw
lods
lods
mov
cli
xchg
xor
jle
je
mov
scas
lret
xchg
mov
ja
xchg
add
ficomps
inc
xchg
ret
icebp
inc
in
xchg
lahf
lods
sub
mov
xorb
and
mov
xor
mov
pop
sbb
mov
iret
mov
pushf
pop
mov
shlb
xchg
inc
popa
sbb
xor
stos
push
sbb
mov
jae
lods
flds
xchg
popa
or
and
sub
scas
out
nop
cmpsl
dec
nop
pushf
xor
pop
div
mov
xor
cmp
fnstcw
inc
out
mov
mov
lahf
pop
repz
dec
stos
cs
push
jg
mov
js
add
sbb
fs
xor
aas
push
mov
xchg
repz
cltd
inc
pop
data16
cmp
out
icebp
pop
inc
inc
out
add
cmc
mov
cli
add
cmc
popf
movsb
popa
inc
lods
pop
popa
fistpl
jp
inc
add
bound
movsb
in
inc
rcrb
sub
out
jno
mov
adc
pop
fildl
adc
ljmp
stc
pusha
lds
inc
and
out
jno
lret
sub
mulb
add
rcr
gs
cmpb
xchg
loopne
or
push
adc
and
sti
xor
mov
add
out
pop
mov
lds
cmpl
or
xor
js
or
in
loope
lret
sahf
cmpl
sti
jg
jno
mov
jnp
adc
movsb
lret
aam
adc
push
repnz
dec
insb
mov
dec
mov
std
addb
or
pop
xchg
into
andl
jecxz
lods
test
dec
aas
sarb
test
aas
mov
sbb
add
imul
in
jg
clc
sahf
repz
xchg
arpl
loopne
or
ret
paddusw
stc
pop
adc
xor
imul
pop
imul
mov
sbb
push
xchg
bound
push
xchg
ror
stc
cmc
movsl
mov
sub
pop
ja
jl
andl
xchg
mov
cmp
dec
add
xchg
pop
adcl
sbb
xchg
add
loopne
adc
cltd
insl
adc
mov
pop
into
hlt
dec
sbb
mov
push
mov
jae
adc
out
rcrl
pop
loop
xor
add
fcomp
in
loope
sbb
cmpsl
mov
fldenvs
mov
sub
sub
insl
ret
mov
outsl
int3
xchg
pop
mov
add
adc
and
in
jl
shlb
inc
cmp
das
xor
pop
jbe
outsl
pop
pop
leave
imul
test
aas
stc
sub
mov
sub
add
push
mov
mov
xchg
enter
xchg
test
fbstp
lahf
test
jmp
std
xchg
and
mov
js
ficoml
js
adc
cltd
test
dec
leave
testb
stc
dec
in
adc
jb
pushf
jnp
aas
stos
iret
push
cmc
cwtl
add
aad
mov
daa
hlt
ja
push
leave
stos
fmull
mov
popa
push
xorb
clc
xor
iret
sbb
push
into
icebp
je
mov
fistps
push
cmp
mov
aaa
loope
dec
ret
dec
in
mov
ret
icebp
sbb
out
cs
adc
mov
and
testb
addb
pop
popa
pop
shlb
adc
lahf
xor
dec
fbstp
in
pop
xor
adc
das
sub
inc
push
or
cli
sub
mov
sarb
jmp
inc
ds
clc
scas
push
ss
lock
mov
lret
into
push
mov
outsb
dec
popa
insb
jp
jl
shll
inc
push
xchg
arpl
or
lods
inc
xchg
inc
adc
jo
aam
aam
aas
dec
jbe
js
mov
das
out
dec
sbb
jnp
es
push
pop
testl
mov
aas
cli
mov
mov
jno
aam
shl
cmp
sub
push
mov
xchg
mov
cld
out
mov
sbb
scas
out
mov
bound
pop
int
test
jg
pusha
dec
mov
jae
xlat
xor
pushf
push
xchg
pop
es
cltd
andl
jl
aam
insb
je
rorb
pop
cmp
ret
imul
cwtl
jmp
fs
and
and
or
in
imul
test
pop
stc
cmpsl
in
sarl
pop
cmpsl
pop
xchg
mov
and
jae
sub
inc
add
call
psrlw
mov
or
stos
cmp
and
iret
xchg
sbb
sbb
bnd
add
in
xor
sub
repnz
xchg
and
or
test
dec
nop
mov
mov
push
aas
push
or
popa
dec
les
or
dec
scas
cmc
adc
insb
jb
int
loope
pop
mov
js
dec
sbb
bound
push
sub
or
and
mov
fdivrp
cmp
pop
sub
pop
mov
lret
das
in
icebp
cld
movsl
in
push
fisttpll
popl
mov
xor
daa
nop
pop
sub
xchg
inc
dec
imul
dec
adc
pop
fildl
lret
or
xor
fldt
mov
lret
mov
out
cltd
mov
mov
test
push
sahf
mov
push
or
movb
mov
pop
insb
je
mov
fcomp
inc
orl
dec
fstps
loopne
aas
xorb
cltd
push
fstpl
insl
ret
xchg
into
jb
add
cvtps2pd
neg
inc
xlat
xchg
aas
adc
pop
mov
and
cwtl
mov
clc
out
add
sub
sbb
push
std
stos
inc
dec
rorl
fucomip
sub
xchg
insl
mov
sarb
mov
scas
push
inc
push
xchg
pop
xchg
lret
rol
mov
not
sbb
test
sbbl
dec
jge
pop
cld
push
push
jecxz
into
pop
mov
inc
je
mov
and
lea
int3
mov
insb
arpl
jb
mov
mov
out
notb
pop
aas
xor
push
xchg
out
inc
subb
sbb
or
inc
jl
sub
je
dec
jle
mov
pushf
test
lds
pusha
inc
jl
movsl
das
sbb
rolb
sbb
sbb
and
mov
in
jns
je
xchg
leave
outsl
jnp
fldl
in
jge
insb
mov
mov
fbstp
daa
loop
stos
adc
sbb
mov
xlat
inc
dec
push
lret
jecxz
in
mov
test
test
aad
add
jmp
loope
xor
pop
jns
sub
pop
loopne
jle
mov
sub
push
cmp
fldl
and
enter
lods
mov
push
jnp
mov
jnp
nop
cmpl
xor
js
scas
pop
rol
mov
or
jmp
daa
pop
cs
xchg
mov
mov
repnz
sub
lret
ds
fs
push
inc
testl
mov
xor
push
mov
mov
xorb
mov
jne
loop
fwait
xorb
push
rcr
pop
mov
popf
dec
cmc
icebp
mov
cltd
loop
scas
cmpsb
mov
inc
mov
cltd
push
icebp
sbb
xchg
xor
dec
outsl
testb
xor
xorl
mov
je
loop
dec
ds
pop
hlt
test
push
mov
stos
jp
jo
jno
in
pop
sub
jg
cwtl
mov
call
imulb
imul
adc
popa
jbe
mov
test
loopne
jle
rorl
stos
jb
orl
push
hlt
cmp
sbb
lahf
mov
push
fstps
outsl
cmpsl
xchg
movsb
and
ljmp
or
orb
adc
data16
jo
insl
inc
repnz
jmp
push
int
sbb
call
test
jne
movsb
jmp
inc
ficomps
fndisi(8087
jl
in
pop
notl
mov
fildll
outsl
mov
push
jle
sbb
inc
lods
lahf
lahf
mov
dec
xchg
nop
out
sbb
outsl
out
inc
cmpsl
lods
sti
sbb
aad
iret
gs
ds
dec
les
add
fcoms
dec
lcall
cmp
mov
mov
xor
mov
stos
jg
pop
mov
out
dec
add
dec
pop
sbb
insl
das
push
mov
out
lret
mov
xor
sub
jne
out
stos
jmp
push
sti
orl
andb
addb
imul
rclb
xor
fisubrs
and
rcll
call
inc
cltd
push
das
nop
jge
sub
mov
push
cmpsl
jae
daa
in
dec
imul
pop
sbb
xor
idivb
jmp
rorb
out
call
push
cmc
mov
inc
pop
and
push
mov
data16
adc
dec
mov
lahf
mov
inc
cld
out
sti
popa
in
mov
pop
fldl2e
sub
push
sbb
or
jle
test
je
test
cmp
inc
add
test
scas
dec
sbb
pop
rcrb
push
xchg
add
roll
maxps
push
mov
mov
repnz
inc
pushf
mov
and
mov
mov
push
imul
repnz
cli
cmp
adc
cmp
and
pop
roll
pop
add
mov
pop
addr16
sub
cmp
sbb
mov
cmc
jecxz
sahf
inc
sub
fs
add
call
lock
insb
adc
nop
test
mov
adc
push
das
call
mov
xchg
arpl
push
jne
in
loopne
add
dec
nop
mov
lcall
sbb
cli
mov
xor
mov
stos
jl
mov
leave
mov
cmpsb
out
sub
fidivrl
mov
mov
inc
lahf
cmp
repz
mov
inc
add
in
sti
fildll
test
xchg
mov
and
sbb
mov
adc
inc
xor
pop
mov
fucomip
iret
mov
in
inc
in
sub
jo
ja
daa
mov
cltd
pop
sub
cwtl
dec
mov
jecxz
arpl
ds
xor
insl
bound
test
sbb
and
dec
ljmp
movl
mov
mov
inc
mov
cmpsl
sbb
fbld
push
pusha
iret
mov
inc
cmp
imul
js
xchg
shr
dec
sbb
imul
insl
cmc
cmc
jmp
and
mov
outsb
mov
push
pusha
add
stos
loop
inc
cmp
ja
xchg
pop
xor
fwait
iret
pop
loopne
or
jl
inc
pop
mov
or
loopne
pop
or
xchg
jp
js
scas
push
adc
pop
aaa
fdivl
ret
add
inc
mov
and
inc
cs
fsub
add
mov
jg
push
cwtl
jb
movb
insl
pop
sub
dec
jno
adc
or
push
lret
push
mov
mov
imul
gs
or
mov
jne
dec
mov
out
scas
dec
mov
popa
aaa
hlt
test
fsubs
mov
fisubs
stos
das
dec
push
xor
std
mov
les
lcall
cmc
sbb
cmp
stos
lds
push
pop
lods
xor
jecxz
ljmp
xchg
testl
and
loope
jb
inc
push
clc
sahf
inc
cwtl
mov
fisubl
dec
and
int3
insl
imul
xor
leave
jbe
repnz
sbb
push
orb
cmp
clc
fdivrl
dec
sub
push
add
mov
ret
add
idiv
dec
or
jo
push
ds
in
sar
cmpsb
in
push
dec
fdivrl
mov
or
mov
mov
mov
lea
movsl
mov
ja
adc
outsb
jbe
mov
or
sbb
mov
ret
shlb
movsb
sbb
cli
movsl
inc
call
addr16
call
sub
outsl
sbb
lcall
ds
jp
lahf
push
sub
mov
push
cld
jl
es
mov
cmp
popa
psubusb
addr16
or
mov
xchg
push
fadds
cli
mov
movsb
adc
or
stos
xor
xor
int
andb
sub
add
push
gs
neg
imul
or
loope
adc
out
add
adc
in
call
bound
mov
mov
lret
ret
jbe
adc
xor
ror
pop
add
orl
xlat
inc
mov
sbb
repnz
xchg
fadds
xchg
das
sti
jae
xchg
mov
fisubrs
js
inc
rol
adc
mov
and
lock
adcb
pop
sub
or
add
shl
insl
inc
sbb
adc
cmp
cltd
mov
pop
test
mov
pop
int
push
movsb
mov
int
shll
pusha
ret
add
push
lock
gs
pop
cmp
and
mov
jno
sub
repz
xor
mov
repnz
movsb
sub
dec
push
aam
je
jo
push
mov
mov
aas
mov
pop
lods
mov
push
outsb
rol
sbb
out
pop
push
movsl
push
vpmovuswb
stos
or
mov
or
ljmp
cs
rcll
aas
imul
inc
dec
xchg
jge
iret
mov
pop
fwait
jmp
lcallw
push
lock
mov
fsubs
and
iret
jbe,pn
or
out
sbb
jns
in
ljmp
inc
or
inc
loop
inc
dec
pop
xor
jne
out
jmp
leave
adc
push
jae
mov
imul
jae
cmpsb
fldcw
pop
mov
into
cmp
mov
inc
insb
mov
mov
bound
add
pushf
mov
cmc
call
sbb
in
dec
or
out
dec
addr16
jp
xchg
jns
jo
aas
cld
dec
mov
jmp
gs
sub
les
dec
loop
fisubrl
mov
mov
in
jp
pop
inc
cmp
pop
lea
and
lahf
das
or
sbb
andl
cmp
xor
pop
jge
lcall
js
lea
test
mov
out
mov
cmpsb
rcll
inc
dec
rcrb
xchg
fisttpll
jns
fisubrs
sti
iret
mov
loop
push
out
lahf
les
sbb
iret
sub
mov
mov
scas
stc
mov
std
fisubrl
add
add
mov
add
adcb
arpl
sbb
cmpsl
mov
jp
xorl
mov
inc
fnstcw
dec
scas
add
dec
inc
pop
inc
dec
mov
push
lock
cltd
inc
rol
aad
ss
dec
insl
in
dec
lods
dec
dec
pop
in
mov
jne
in
pop
mov
xor
in
aam
add
xchg
test
js
jmp
mov
test
jne
pusha
cmp
xchg
aas
imulb
cmp
sbb
cmovne
daa
jns
flds
fisubrs
xorl
addb
pop
in
lea
cmpsb
les
or
adc
das
add
and
push
into
mov
sub
test
fstpt
pushw
pusha
xor
mov
daa
mov
daa
mov
push
movsb
addr16
mov
loop
mull
push
fwait
js
sub
pop
je
ss
jnp
xor
orl
add
jp
pop
push
repnz
push
push
movsl
into
push
rcll
mov
aaa
ja
aas
je
pop
mov
inc
cld
inc
pop
inc
inc
cmpsl
fcompl
add
push
fisubs
add
cld
jno
push
jmp
xor
jnp
mov
repnz
lea
insb
fisubrs
jp
sub
in
arpl
mov
int3
in
and
push
cld
jmp
lock
push
in
xor
gs
out
cmpsb
hlt
xchg
adc
in
xor
xchg
mov
or
jno
jg
add
add
enter
sti
or
arpl
lds
lods
movsb
xlat
insl
mov
xchg
fistpll
stos
mov
mov
mov
jb
xor
popf
scas
push
in
es
test
push
incb
mov
jbe
cmp
stc
adc
sbb
jnp
aam
cmp
mov
cmp
loop
sahf
int3
push
inc
pop
in
outsb
mov
dec
inc
aad
fimull
cmp
push
scas
sub
jle
enter
pop
push
mov
cmpsl
sub
xlat
test
pmulhuw
dec
arpl
inc
xchg
dec
faddl
jge
lcall
jmp
push
add
inc
cmc
xchg
or
sub
leave
ret
xchg
xchg
mov
sahf
dec
ss
pop
inc
faddl
jg
jp
adc
inc
cmp
fsubr
rolb
xchg
push
jmp
mov
cld
repnz
add
shll
fdivs
sar
push
pop
sbb
ret
testl
popf
xchg
mov
mov
imul
dec
outsb
outsl
stos
jecxz
pop
repz
pop
lcall
je
ret
aaa
outsb
and
pop
lret
jg
imul
lcall
jecxz
fsts
movsb
repnz
pusha
pop
or
testl
or
sbb
cwtl
inc
xchg
lahf
lods
xlat
pop
cltd
cli
das
insb
jmp
sbb
mov
dec
imul
pop
adc
mov
scas
xor
fildll
jmp
jns
adc
lods
stc
iret
push
out
faddl
cwtl
jecxz
mov
repz
test
jno
dec
pop
jbe
pushf
aam
les
and
into
inc
aam
mov
lods
popf
test
or
sbb
andb
mov
lock
fsubrp
or
mov
or
xlat
test
add
push
mov
jmp
out
or
loope
mov
mov
ja
hlt
imulb
pop
cs
mov
in
push
mov
lock
mov
repnz
hlt
inc
jl
cmc
sub
inc
jl
cli
movsb
je
inc
cmp
and
mov
pop
jl
sub
sar
mulb
test
jp
out
add
adc
pushl
add
xor
mov
in
bswap
daa
inc
and
ret
leave
enter
rcrl
imul
mov
dec
jp
sbb
iret
frstor
dec
sti
mov
inc
mov
je
inc
adc
je
in
shlb
addr16
xchg
ss
add
or
pop
dec
ljmp
push
mov
cmp
or
or
data16
vpsrad
cld
push
js
sub
ds
popf
iret
mov
mov
push
les
outsl
mov
stos
int3
push
cmpsb
mov
xor
adc
fdiv
add
mov
negl
pop
jns
sbb
je
cmpsb
dec
cwtl
pushf
pop
add
fs
xor
test
mov
imul
dec
jns
dec
roll
insl
lods
inc
add
stos
aas
ficomps
call
fs
mov
mov
jg
movsb
jnp
lcall
push
xchg
cmp
inc
inc
dec
sub
sbb
popf
arpl
lret
vpcomb
scas
add
lods
mov
sbb
repnz
cmp
int3
daa
pop
xor
jo
jmp
loope
stos
jle
std
ja
test
ljmp
sahf
ret
jecxz
clc
std
mov
xor
inc
and
dec
stos
test
mov
enter
js
and
rcl
jg
out
add
loop
push
lods
mov
imul
repnz
pop
sub
cmp
mov
sub
notrack
mov
xor
lret
mov
dec
in
add
sub
dec
test
loop
mov
stos
sub
mov
fldt
and
inc
and
stc
fadds
lock
aam
xor
fcmovnb
dec
push
cs
outsl
cwtl
aaa
mov
lahf
mov
pop
sbb
jp
push
aaa
and
addr16
fcom
aaa
mov
lcall
xor
and
shrl
sti
popf
adc
test
xchg
push
popa
shll
push
mov
dec
pop
inc
jns
leave
lods
lock
mov
mov
mov
cmp
sub
gs
xchg
sbb
jmp
in
sub
mov
xchg
and
leave
pop
out
jb
orb
in
add
xchg
ss
lret
and
cmp
int
aam
sub
pop
or
imul
dec
repz
fnstenv
sbb
adc
inc
inc
mov
add
xor
add
sbb
mov
movsl
pop
adc
out
fiaddl
mov
push
popf
mov
sub
cmp
int3
xchg
dec
jns
in
aas
pop
cmc
and
push
ret
in
cli
aas
mov
pop
xchg
pop
leave
lret
jne
js
popf
cmp
cmp
dec
movsb
xchg
pushf
sbb
cwtl
mov
orb
adc
xor
xor
mov
pop
mov
mov
sub
std
arpl
out
xchg
inc
cmp
aam
call
sub
out
cltd
xchg
jno
out
es
negl
lret
mov
mov
jbe
push
jae
or
insb
ficompl
jo
gs
xchg
adc
popf
mov
push
sbb
mov
loop
pop
jno
jg
int
std
in
rolb
mov
mov
ljmp
lcall
inc
inc
ljmp
mov
inc
xor
push
mov
hlt
cld
inc
cmp
mov
mov
sub
sbb
mov
mov
dec
mov
es
xlat
adc
or
sbb
sbbb
in
lods
cmp
xchg
ret
jbe
lea
push
mov
jns
dec
insb
jb
stos
imull
jge
mov
test
in
in
push
sub
push
dec
mov
les
je
push
jle
fldl
or
pushf
gs
aaa
mov
mov
mov
rolb
sbb
mov
lret
adc
jb
dec
pop
addr16
cs
add
sti
pop
cmp
fcompl
imul
push
in
rcrl
in
or
inc
inc
xor
mov
adc
bound
dec
mov
push
push
punpckldq
arpl
inc
cmp
in
xor
xor
mov
or
xchg
idiv
lcall
ljmp
out
mov
test
cmp
loop
push
test
fldenv
fimull
ret
mov
push
or
push
subb
mov
movsb
push
call
jnp
adc
mov
jp
mov
cmp
mov
mov
fists
lds
ds
loope
mov
or
jg
scas
mov
sbb
and
imull
xlat
pushf
mov
popa
lods
test
dec
pop
clc
and
inc
jae
popf
dec
mov
jns
shl
loop
mov
push
and
int3
lods
mov
xor
fildl
loopne
and
mull
gs
imul
pop
add
out
add
mov
sub
add
xchg
adc
in
fdivs
scas
fmul
aaa
icebp
pop
mov
insl
outsb
stc
jns
les
int3
mov
push
push
outsb
mov
stc
rcrl
ret
in
shlb
push
stos
lds
jle
lds
out
fsubl
movb
cmp
stos
lock
fldcw
push
dec
pop
cli
push
icebp
adc
pop
sti
pusha
daa
push
popa
in
inc
inc
push
cmc
pop
call
sbb
addr16
push
dec
jmp
dec
push
cmp
lahf
push
add
mov
lahf
scas
xchg
xchg
fs
mov
lock
cwtl
arpl
jnp
pushf
mov
jmp
aaa
push
scas
add
imul
mov
sub
fwait
push
sbbl
push
jp
addb
sbb
mov
sub
jne,pn
cwtl
fcomp
mov
adc
jmp
stos
test
scas
pop
inc
push
ds
or
ret
inc
xchg
dec
jg
mov
je
mov
push
test
xorb
ja
test
mov
out
enter
test
sbb
inc
mov
out
int3
sbbl
addl
pop
dec
les
test
sbb
faddl
stos
jbe
mov
test
add
das
lret
scas
sbb
cli
xor
arpl
scas
xchg
sti
call
dec
and
int
pusha
xchg
pop
in
ja
aad
jnp
mov
push
stos
insl
pop
sbbl
push
sbb
jbe
imul
fbld
sbb
pop
pop
xchg
xor
arpl
sub
xor
decl
sbb
out
in
ljmp
adc
int3
aad
inc
pop
popf
dec
push
sub
fnsave
mov
push
ja
jbe
js
inc
sbbb
dec
inc
notl
push
pop
fstpl
push
sub
cli
je
icebp
popa
ds
into
adc
sti
or
mov
and
movsl
iret
jns
jmp
or
std
mov
test
ret
mov
std
out
pusha
inc
test
les
sar
push
dec
int3
lahf
in
lods
ja
cmpsb
sbb
xor
mov
add
or
mov
xor
cmpsl
mov
pushl
lret
mov
push
shl
sti
aad
pop
icebp
jb
sbb
sahf
mov
mov
xchg
roll
scas
jns
xor
jg
aam
fsubp
push
dec
sbb
test
scas
fwait
jle
imul
push
mov
loop
out
pand
testb
sub
shlb
mov
call
jne
xchg
shl
cmp
mov
lds
jmp
insb
jg
xchg
cmp
gs
int3
inc
mov
jno
pusha
insl
adc
jne
mov
icebp
scas
cmpsl
enter
out
mov
push
xor
mov
hlt
and
mov
movsl
lods
loopew
mov
mov
add
cmc
jl
fadds
mov
push
add
fucom
fs
imul
xor
in
ja
cmp
mov
push
inc
pushf
cs
and
mov
pop
cld
iret
inc
jge
inc
in
pop
rolb
popa
imul
push
shlb
mov
icebp
and
mov
fwait
xchg
add
add
inc
icebp
mov
fcmovb
outsb
lods
es
gs
les
lret
mov
or
xor
mov
mov
jecxz,pt
aad
sub
std
push
fcmovnu
mov
pop
insl
mov
stos
outsb
sub
movaps
and
adc
pop
mov
int3
add
mov
cmp
push
add
movsl
call
sub
popf
sbb
mov
push
xlat
cmp
das
sub
outsb
pop
cmp
call
cli
push
jg
xchg
cmp
adc
cmpl
mov
jb
popa
div
inc
fildl
mov
std
add
adc
mov
add
int3
mov
fistpll
push
outsb
addr16
test
xchg
cmp
popa
test
pop
shll
std
sbb
inc
jae
adcb
scas
mov
xor
testb
or
in
cmp
push
sbb
mov
movsl
or
mov
jnp
cmpsl
push
add
ds
mov
dec
xchg
and
and
ljmp
sbb
ja
push
sahf
adc
stc
sub
jge
add
sub
mov
xchg
test
add
mov
daa
mov
dec
mov
dec
and
lods
inc
ljmp
xor
jno
mov
dec
movsl
outsl
jno
sub
insb
xchg
sub
ja
sbb
inc
loop
mov
lret
or
lds
mov
test
aam
pushf
dec
mov
mov
in
cwtl
adc
jns
in
jmp
stos
inc
fwait
roll
xchg
adc
jg
imul
add
or
iret
xlat
adc
mov
cmp
or
inc
sahf
pop
mov
pop
out
sub
fcom
or
dec
aaa
xchg
xrelease
mov
lahf
or
sub
mov
sub
pop
mov
cmpsb
clc
mov
daa
sub
cwtl
je
js
pop
addps
sbb
fistpl
call
cmp
rclb
ror
xor
mov
daa
mov
movsl
dec
mov
jo
push
sub
mov
push
shrb
or
bound
test
xor
lahf
inc
or
mov
sbb
jb
data16
icebp
lods
cmp
movsb
stos
adc
popa
jecxz
insl
stos
jle
add
int3
shlb
rorl
out
ficoml
sbb
dec
test
and
je
adc
inc
inc
pop
push
push
sar
in
sahf
les
inc
test
fwait
scas
inc
cld
xchg
cltd
pop
xchg
inc
ret
daa
popf
movsl
xor
cmp
cmpsb
mov
data16
pop
pop
adc
clc
cld
ret
mov
or
cmpsl
jmp
cmpsl
cmpsl
test
nop
in
and
pop
into
nop
push
fists
push
into
lcall
cmp
dec
jmp
scas
outsl
cmc
pop
arpl
add
out
stos
or
mov
les
out
xor
inc
xchg
adc
cwtl
pop
ja
pop
jmp
dec
cmc
or
iret
lea
or
sbb
push
lods
mov
sbb
call
jp
mov
mov
push
call
dec
sub
inc
add
ja
jp
fcoms
movsl
push
or
movsw
fldcw
call
sti
into
and
xchg
add
popf
pop
mov
mov
mov
sbb
rcrl
test
add
out
rorl
mov
xchg
xor
ret
roll
call
xchg
pop
mov
fwait
jb
pop
outsb
jne
out
jb
mov
mov
push
push
push
mov
push
inc
mov
push
add
shll
cmpb
inc
sbb
sbb
aam
xchg
add
dec
xorl
int
out
loope
jnp
js
stos
pop
and
cmpsl
dec
repnz
mov
dec
test
push
outsl
sub
xor
dec
mov
push
and
xlat
es
adcb
and
push
sahf
sarl
inc
mov
call
xchg
push
int
pop
push
jns
nop
pop
mov
outsb
scas
lods
mov
movb
inc
minps
cmp
enter
push
addr16
lahf
dec
pop
mov
movsb
jg
xor
cmp
push
fsubrs
stc
cmpsb
pop
xchg
inc
test
xchg
loope
push
mov
mov
mov
shrl
cmpsb
push
mov
dec
mov
cmpsb
adc
pop
cli
jbe
mov
in
lcall
repnz
lahf
adc
scas
call
enter
xor
dec
sub
push
jl
daa
and
les
cmp
xor
lea
into
ja
jb
js
xor
std
loopne
rcl
sbb
loopne
nop
fcompl
jne
leave
sahf
mov
ds
and
adc
nop
inc
pop
adc
insb
loop
out
shrb
in
lods
xor
push
add
inc
push
jge
fdivs
inc
loop
ss
and
pop
mov
pop
pop
cmpsl
aas
loope
pop
xlat
cmpsb
xchg
sbb
jl
jmp
fsubp
xor
insb
fbld
mov
mov
lea
call
pop
add
insb
jecxz
ljmp
iret
fidivrs
aam
add
jmp
mov
push
sbbb
pop
jmp
or
int3
dec
jns
in
adc
xchg
sbb
sub
lcall
jno
mov
cli
ljmp
and
and
shll
enter
xchg
pop
incb
pusha
out
xorl
mov
rcrl
pop
movsb
xchg
xchg
leave
mov
xchg
pop
sbb
inc
jecxz
iret
pop
mov
stc
jnp
and
jb
dec
outsl
inc
dec
mov
js
cmp
pop
popf
pop
ror
mov
xchg
mov
ficoms
jae
push
or
lahf
inc
mov
lods
add
fwait
popl
add
shrl
lods
fistpl
addb
lods
cli
imul
push
or
and
cmp
cmpsb
shrl
jmp
add
shrb
mov
dec
pop
or
dec
out
cmp
std
cmp
outsl
adc
lret
aas
xor
push
dec
ss
sti
movsl
scas
fs
jne
out
mov
mov
xor
jae
add
sbb
arpl
dec
pop
ja
int
cwtl
out
push
push
int3
push
or
and
sub
arpl
lods
xchg
gs
or
push
jl
push
sbb
inc
jb
cli
loope
imul
mov
sbb
mov
mov
push
cmp
enter
sbb
fnsave
mov
mov
mov
jno
and
dec
inc
ja
cmp
shll
movsl
xchg
jns
out
mov
jge
stos
adc
lret
mov
movsl
shrb
das
rolb
push
cmc
sub
stos
jge
in
inc
sub
or
jle
pop
lds
cmpl
adcb
mov
adc
mov
cwtl
xchg
pop
cmp
and
imul
jne
stc
idiv
shlb
aaa
out
loopne
js
cmp
xchg
xchg
pop
mov
xchg
mov
jmp
adc
nop
mov
xchg
mov
mov
in
dec
sbb
int
push
push
cltd
sbb
jnp
cld
jae
sbb
mov
lret
add
into
dec
fcomip
mov
mov
int
mov
jmp
fistl
leave
push
mov
call
cmp
rcll
and
cmp
out
sbb
jae
fucomip
in
mov
rcll
enter
lds
lods
adc
mov
cmp
mov
jmp
adc
les
call
mov
mov
push
sti
push
lock
or
sub
push
jne
push
pop
cmpsb
lret
xchg
test
push
test
mov
inc
fnstsw
mov
pop
lods
xor
stos
hlt
pop
add
and
loope
fbstp
mov
fisubrs
lods
jecxz
pop
pop
outsl
lock
int3
es
cwtl
mov
and
and
inc
call
mov
aaa
cmpsb
add
adc
cmp
test
add
divl
aam
mov
or
ja
xor
les
sti
pop
dec
out
mov
and
fdivrl
call
and
xchg
testb
js
sub
fistpl
pop
sub
aam
imul
dec
mov
sub
push
or
mov
mov
push
fstps
mov
jecxz
mov
repz
shrb
push
stos
pop
push
push
sub
lret
or
aaa
mov
fwait
adc
cltd
ljmp
jno
rol
xor
pushf
icebp
xchg
int
iret
xlat
jge
imul
aas
out
in
ret
jns
iret
aad
into
repz
data16
repz
inc
xchg
cltd
imul
rcrb
inc
mov
data16
ror
mov
lods
rcr
xor
pop
ja
sub
stos
jae
pop
adc
imul
fldcw
xor
leave
decb
or
xchg
out
loopne
cli
je
push
xor
aam
shlb
fwait
inc
ret
jmp
lock
jmp
xor
ja,pn
adc
pop
sti
in
add
ja
sub
pop
aas
daa
nop
or
and
cmc
lock
xor
lods
mov
in
aaa
fildl
enter
dec
add
inc
imul
adc
inc
outsb
sbb
xor
pop
pop
je
mov
mov
popf
jl
cmp
add
pop
addr16
xor
dec
fnstsw
inc
iret
push
xchg
popf
rcrb
xchg
mov
and
cmpsb
mov
movsl
fisubrs
add
add
popf
testb
popf
mov
cmp
mov
in
jmp
cmp
dec
lcall
fisubrs
lret
enter
push
inc
dec
imul
clc
fmulp
movsl
call
sti
stos
push
stc
fldt
inc
loopne
aam
ficompl
sub
inc
adc
movsb
xor
jb
add
cmpsb
jbe
in
jecxz
vpunpckhwd
fsubrs
xchg
mov
lahf
add
jnp
pusha
jae
push
stc
jno
movsb
push
std
jp
lods
rorb
xor
ret
std
mov
test
jae
xor
adc
bound
fs
adc
jmp
test
xor
add
sub
cmp
xchg
repnz
ret
inc
cmp
adc
imul
hlt
popf
mov
scas
outsb
dec
cmp
ja
cmp
dec
dec
mov
push
mulb
fistps
mov
pop
pop
imul
cmp
fsts
jmp
repz
push
jb
jo
movsl
push
jbe
cmp
inc
add
and
or
push
aad
mov
or
pop
mov
mov
into
dec
fs
cmp
sbb
das
sbb
out
jns
cmp
test
aaa
sbb
lcall
pop
fimuls
mov
sbb
cmp
fldt
pushf
and
sub
pushf
out
and
scas
filds
enter
js
sub
inc
shll
aas
dec
jo
lcall
scas
movsl
cltd
pop
cmp
in
test
pop
xor
insb
mov
data16
add
mov
mov
cld
cltd
adc
fisubs
out
out
cmp
lods
scas
rcrl
sarb
mov
iret
add
popl
gs
push
jns
pop
test
das
out
dec
mov
inc
sbb
push
mov
popf
jle
in
pop
mov
sbb
jne
pop
daa
dec
mov
dec
xchg
xchg
je
les
dec
cltd
fldl2t
or
out
mov
leave
xlat
aam
sbb
in
enter
push
mov
pop
push
aaa
negl
sbb
push
push
out
mov
incb
cmp
loop
mov
mov
scas
lods
fimull
add
and
mov
dec
mul
and
arpl
dec
negb
or
mov
jmp
addr16
mov
cmp
mov
push
lret
inc
sub
fwait
cmp
ret
xor
fimull
fcmove
sub
add
in
notl
mov
or
pop
cwtl
cwtl
add
movsb
out
mov
je
mov
test
cmc
jb
pushf
sub
pause
fistpll
in
sbb
push
cwtl
mov
sbb
mov
dec
jnp
mov
inc
inc
outsl
jmp
stos
pop
repnz
pop
add
inc
psraw
imul
sub
jecxz
cs
les
rcrb
out
ret
sub
cmc
or
inc
mov
mov
loop
xlat
and
leave
dec
cmpsb
inc
sbb
in
push
mov
mov
mov
dec
adc
dec
sbbb
cmp
xor
fsubrl
dec
dec
rcll
cmp
imul
or
xchg
mov
add
or
adc
in
xchg
lods
jno
mov
jno
and
mov
cld
jno
outsl
sbb
ja
les
sbb
cmpsb
fsubrp
or
inc
in
loop
test
sbb
movsl
jbe
mov
jp
mov
mov
pop
test
and
jl
and
mov
loop
jo
mov
dec
inc
pop
xor
cs
mov
pop
mov
lea
js
lods
mov
sarb
jp
aad
sbbl
mov
aaa
in
push
mov
data16
jp
push
pop
sub
std
aaa
jg
fbld
xchg
movsl
mov
mov
inc
cmp
dec
bound
stos
jno
add
loopne
cmp
fmuls
mov
sub
popa
or
dec
inc
or
sbb
pop
stos
es
enter
lahf
pop
jg
leave
push
jecxz
ja
daa
mov
icebp
xchg
fbld
out
pop
sbb
mov
push
fs
sub
out
in
insl
bound
dec
mov
mov
mov
into
outsb
in
mov
xor
mov
lods
mov
cmc
sahf
in
mov
das
icebp
mov
pop
xor
pop
adc
sbb
mov
scas
xchg
rcl
xchg
sub
xchg
jno
and
js
add
push
adc
pop
push
or
adc
ja
ret
aam
pop
lret
inc
sbb
mov
sub
ficomps
pop
add
jmp
cmp
pop
stos
outsb
cmpsl
xchg
xchg
fwait
test
mov
arpl
push
addr16
lea
dec
lret
jge
sub
inc
push
sub
mov
jns
lods
das
xor
sbb
jp
mov
xchg
dec
xchg
fildll
in
pop
mov
jo
pop
cld
repnz
repnz
add
sbb
pop
insl
dec
dec
add
das
pop
sub
dec
int3
mov
sbb
lahf
ja
imul
lret
xchg
insl
jno
fidivrl
push
cli
adc
mov
icebp
jmp
pusha
imul
inc
aam
push
inc
lahf
out
xor
bound
bound
dec
ss
lret
leave
insl
adc
jbe
dec
sbb
stos
dec
or
cmp
rolb
xlat
into
mov
pop
mov
jp
lahf
pop
jnp
push
push
scas
jnp
rol
dec
pusha
cltd
inc
push
cli
mov
pop
rcr
ja
sbb
sbb
lds
jbe
push
and
xchg
jl
jnp
push
icebp
push
mov
in
push
and
inc
sub
pop
sbb
aam
popf
jne
jl
lods
xchg
data16
movsb
xchg
fbstp
xor
lods
sbb
and
stc
lods
je
and
rol
shll
into
jno
cmp
fwait
xchg
out
fsubl
test
pop
outsl
in
xchg
xor
lret
jle
aam
bound
mov
cld
scas
mov
inc
sub
xor
add
mov
nop
mov
inc
stos
fcoml
jmp
add
mov
inc
mov
daa
jecxz
fbstp
mov
insl
push
das
xor
mov
lahf
jo
mov
clc
jns
jo
cmp
aaa
xchg
jnp
add
outsb
push
mov
or
iret
int3
subb
xchg
in
cmc
in
cmpsl
xor
mov
shll
push
outsl
sbb
repnz
lret
mov
cs
fs
mov
or
test
sbb
sub
xchg
dec
jns
shll
and
out
push
mov
enter
push
lret
aas
lods
inc
lcall
test
sub
mov
jge
insb
enter
jo
ror
inc
imul
mov
mov
adc
jb
push
out
cmc
jnp
insb
lods
and
mov
lods
jmp
cmpsl
push
xchg
xor
je
inc
pop
ss
mov
mov
mov
xorl
sub
out
imul
enter
jne
or
out
lret
dec
pusha
call
inc
lock
jle
sbb
rcr
mov
jae
push
push
jecxz
rol
mov
pop
sbb
jge
adc
cmpsb
movsl
xor
dec
inc
sbb
bound
leave
test
dec
test
mov
pop
mov
cmp
xor
mov
pop
ds
dec
repz
jno
insl
imul
pop
test
mov
notl
and
addr16
pop
fs
xlat
in
pushf
test
jg
mov
ficoms
std
xor
sub
xchg
insb
out
xor
into
sahf
or
loope
push
sbb
xchg
bnd
mov
sub
inc
mov
adc
pop
push
push
add
xor
std
jg
push
xor
pop
jle
icebp
dec
lret
and
fidivrs
adc
fcmovnb
popa
scas
jmp
jecxz
mov
cmp
mov
dec
jmp
mov
dec
jg
jge
jle
repnz
test
lea
int3
mov
add
in
daa
call
ret
jno
lock
jno
shll
push
sahf
cltd
sub
mov
rdpmc
lea
sub
shll
iret
outsb
repnz
or
mov
sub
mov
ss
adc
dec
sub
gs
fwait
les
in
mov
or
mov
pop
lds
xchg
fiaddl
sub
je
cld
arpl
test
insl
loop
cmpsb
xchg
sub
sub
popa
add
add
pop
lea
cmp
or
mov
je
mov
push
push
pop
xchg
and
loop
rcr
dec
bound
push
inc
inc
adc
sub
mov
fstl
or
adc
lret
xchg
out
pop
xchg
pop
decl
lock
movw
push
mov
add
dec
sub
jmp
sbb
jl
orl
sub
mov
jo
mov
inc
data16
lds
imul
mov
cwtl
fs
lock
insl
int
sbb
aam
cmp
sbbb
jbe
cmpsb
jbe
or
test
test
ret
dec
xchg
cmp
or
and
int3
ljmp
outsb
push
into
flds
int
sub
xor
add
mov
xchg
test
cmpsb
mov
out
cld
movsb
or
sbb
push
sbb
xchg
popf
fidivl
scas
lret
xchg
and
and
add
sub
add
sbb
shlb
cmp
mov
push
cmp
std
mov
jnp
jns
dec
adc
lea
cmpsl
pop
sahf
mov
mov
mov
and
dec
outsb
movsb
or
repnz
adc
fcomps
xchg
cmc
out
lods
daa
sub
cmp
jno
inc
xor
sub
or
imul
dec
cs
data16
arpl
ds
mov
jb
mov
or
cs
cmp
arpl
cmpsl
sar
arpl
mov
mov
lret
push
js
das
lods
scas
cmpsl
popa
mov
roll
lret
rolb
inc
stos
sbb
outsb
icebp
adc
jne
jne
and
inc
bnd
xchg
pop
imul
and
cmpsb
mov
mov
jg
and
out
push
push
outsb
aad
sbb
sbb
mov
lock
clc
cmpb
das
fimull
mov
dec
fs
fsubrs
fsubl
imul
push
outsl
adc
cmp
rclb
mov
mov
xor
or
cmpl
sub
addr16
push
jo
jne
sub
pop
movups
cltd
repnz
clc
cmp
aam
lahf
in
outsl
dec
sub
or
sbb
rorb
fistpll
push
cwtl
je
test
nop
in
jl
test
jnp
bound
loope
jg
adc
outsl
mov
mov
adc
mov
outsb
push
mov
mov
mov
xchg
xor
loop
subb
scas
lcall
daa
pop
roll
mov
sbb
int3
xchg
into
push
lds
mov
or
sbb
imul
fs
xchg
repz
mov
inc
jge
jge
lock
xor
or
jmp
add
bound
mov
xor
imul
xchg
int3
cmp
lcall
push
arpl
adc
ficompl
pop
push
inc
mov
sbb
jbe
mov
repnz
mov
xchg
add
rorb
pop
ret
sbb
and
jnp
mov
dec
ret
daa
lret
dec
cwtl
repnz
sahf
mov
cmpsl
clc
xchg
je
mov
jb
loope
xchg
push
and
aam
movsb
mov
out
mov
imul
cmp
into
cmp
fwait
loopne
push
push
mov
stc
cmp
mov
mov
mov
fs
dec
xchg
mov
mov
push
adc
aam
pop
mov
jno
lret
std
jp
clc
xor
pop
aam
and
cmp
aas
or
out
mov
cs
mov
xor
popa
out
xchg
out
and
push
push
mov
sbb
movl
add
mov
jbe
push
nop
sub
bound
inc
dec
sahf
scas
xchg
outsb
adc
subb
cmp
insb
mov
mov
ljmp
sub
and
sbb
fists
mov
mov
sbb
mov
xchg
call
mov
add
xorl
popf
sub
dec
mov
dec
jmp
mov
aam
pop
call
dec
jmp
into
fwait
ret
xchg
sbb
and
push
sub
addr16
test
sahf
xchg
imul
sub
pop
seto
das
loop
testl
mov
mov
icebp
out
out
and
xor
jl
lret
std
shl
lods
dec
and
insl
dec
and
fldt
push
lea
sub
and
xor
arpl
xchg
rcll
loop
xlat
imul
xchg
jle
mov
int3
addr16
lahf
xor
popa
xchg
push
sub
cmp
mov
mov
test
mov
insb
sbb
jae
in
iret
mov
pop
mov
cltd
xlat
xchg
mov
int3
jmp
nop
mov
mov
push
mov
outsb
cmp
and
sar
scas
scas
ss
mov
loop
ret
add
mov
lcall
fucom
xlat
sbb
sbb
mov
nop
scas
nop
leave
jae
in
pop
fistl
clc
fisubrl
adc
inc
fstl
xor
inc
xchg
call
ss
sti
cmp
and
outsl
inc
or
icebp
imul
ror
in
adc
das
and
xor
push
cmp
insb
pop
cmp
jmp
inc
lret
ja
or
and
gs
jnp
mov
and
test
mov
mov
pop
pop
mov
lock
and
loop
sarb
cmp
jns,pn
inc
imulb
outsb
or
cmpsb
in
xor
and
nop
jmp
push
jmp
std
icebp
push
xor
fucomp
daa
pop
fidivl
push
fadds
movsb
and
pop
mov
aaa
mov
imul
fstl
sub
shrb
push
nop
xor
jae
inc
push
movsb
mov
cmpsl
cli
and
insl
or
push
lcall
adc
mov
repz
ret
jae
call
mov
fisttps
mov
mov
mov
hlt
popf
or
xor
lcall
ds
cs
bnd
adc
mov
mov
dec
xorb
subl
mov
lret
inc
mov
mov
test
xchg
popa
cmp
xor
ret
repnz
lea
pop
cld
mov
cmpsl
test
push
mov
icebp
test
push
out
movb
pop
push
aam
jo
jmp
daa
stc
xchg
mov
lds
and
aas
sub
fistl
imul
pop
sbb
jmp
loopne
nop
cmp
fbld
adc
sub
pop
loop
mov
fcoml
dec
mov
mov
cmpsl
cmpsb
push
faddl
inc
int
arpl
xchg
xor
insl
stos
cli
fs
cmp
out
shll
sub
outsl
jl
cld
insb
adc
idiv
and
pop
inc
imul
stos
lahf
je
sahf
sbb
popf
insl
dec
sub
mov
mov
adc
xor
dec
movsl
pop
inc
mov
adc
andl
testb
or
mov
jge
dec
cmp
mov
cmp
inc
jb
in
sbb
int
sbb
mov
scas
dec
bnd
sub
fwait
inc
bound
popl
inc
daa
popl
xorb
or
or
int
xchg
in
rolb
push
push
push
pop
inc
sub
dec
push
insb
and
or
imul
mov
jmp
jle
cmpsl
out
dec
mov
cmpsl
sti
cmp
xchg
sbb
je
add
call
rcr
lahf
cmp
xchg
sub
sti
fdivr
dec
adc
lds
mov
jge
mov
pop
mov
cmp
enter
cmp
punpckldq
sahf
out
sbb
and
sub
pop
cwtl
rcl
dec
stos
mov
mov
xor
sub
sbb
test
pop
insl
push
lret
daa
or
push
pop
imul
lret
inc
das
xor
int3
adc
jb
imul
sbb
sbb
sbb
adc
scas
sub
jp
mov
xlat
lcall
pop
out
fmuls
xorb
mov
lods
mov
pop
dec
sub
ja
and
pushf
in
mov
std
xlat
fcoms
cs
js
or
push
push
pop
nop
leave
out
push
pop
imul
xor
push
mov
and
gs
adc
push
mov
xchg
sub
sarl
in
xchg
popa
cmpsl
test
jmp
test
daa
outsb
inc
insb
fdivrp
cli
cmc
mov
push
movsl
repz
testl
sub
push
pusha
xchg
sbb
xchg
movsb
ficomps
std
icebp
and
lock
jb
movsb
and
cmp
in
jmp
pop
xchg
neg
dec
add
xchg
test
push
dec
std
jmp
and
es
jne
pop
jns
lods
jecxz
es
ljmp
scas
out
leave
cmp
shll
xchg
bound
pop
popf
push
cli
or
or
aam
aad
cmp
xchg
hlt
faddl
pop
flds
jb
xchg
adc
cld
xchg
bound
pop
cmp
mov
andb
loopne
nop
scas
cmp
sti
sbb
imul
or
cmpsb
mov
push
jge
imul
int
mov
iret
dec
cltd
insl
sahf
loopne
sahf
pop
add
aam
jl
lea
push
fiadds
in
imul
xchg
inc
ss
xor
dec
dec
les
cwtl
sbb
shlb
push
imull
cltd
push
gs
cmp
jmp
or
movsb
push
sub
shl
fistpl
lock
and
xchg
jecxz
cmc
andb
xchg
ja
mov
std
sahf
icebp
imul
mov
stos
lds
xor
rcl
sbb
dec
mov
xchg
push
mov
push
cmp
dec
sub
mov
sbb
loope
sbb
cli
addr16
int
mov
out
pop
push
dec
stos
cltd
adc
stos
pop
jae
scas
int3
sarl
inc
sub
mov
push
mov
hlt
loop
inc
data16
push
mov
mov
add
mov
scas
daa
pop
mov
mov
or
bound
ret
mov
mov
push
sbbl
aad
mov
jo
insb
fiadds
out
xchg
clc
mov
xchg
fmull
das
push
aaa
iret
and
push
ds
xor
repnz
dec
and
in
popf
sbb
xor
clc
xchg
ds
mov
fiaddl
jne
mov
xchg
in
scas
pop
jp
and
cmp
in
lcall
sbb
add
jmp
insl
lods
xchg
mov
push
cmp
mov
ss
fisubs
add
ja
ret
fs
inc
sub
add
fwait
rclb
adc
sti
call
lea
xchg
add
push
mov
jnp
push
inc
mov
xor
push
dec
mov
pop
mov
out
orl
mov
mov
adc
mov
sbb
gs
leave
outsl
xchg
xchg
sahf
mov
add
inc
cs
aad
push
rcrb
pop
outsl
add
orl
push
push
je
fdivs
sub
insl
loope
dec
jno
hlt
dec
jmp
popf
pop
ds
xchg
dec
pusha
data16
enter
push
push
dec
ficompl
loope
xlat
repnz
lods
pop
sahf
and
or
push
jle
cmp
repnz
repz
pop
pop
loope
push
mov
push
adc
pop
and
sub
fwait
mov
test
negl
jle
xchg
add
pop
jae
fldl
fwait
pop
shll
sbb
cmpsl
mov
or
lock
pop
insb
ljmp
cmpsb
or
in
lea
sub
in
mov
insb
std
js
jmp
dec
push
fwait
in
cld
sub
fldcw
or
and
add
pop
bound
pop
add
test
aaa
jp
adc
jno
inc
push
fwait
mov
outsl
and
and
push
jp
in
and
pop
fwait
sub
rolb
or
xchg
jecxz
mov
fwait
mov
mov
fbld
xchg
sbb
mov
scas
in
mov
xor
fisubrl
cmp
fisubrs
sub
xor
sti
and
outsl
push
jno
iret
ja
or
xchg
dec
pop
dec
in
xor
adc
sub
jne
and
or
mov
ljmp
les
sbb
sbb
jp
ljmp
shrb
mov
jbe
in
sbb
enter
mov
dec
jl
inc
mov
cmp
xchg
daa
fimuls
outsb
fdivl
les
leave
call
subl
lret
jo
and
sub
rcll
ja
and
dec
inc
out
ljmp
in
scas
sbb
jbe
scas
pop
mov
rclb
sbb
xchg
jnp
fst
xchg
sub
and
in
pop
pop
pop
insb
fdivl
xor
fistps
inc
and
repz
leave
inc
mov
dec
mov
cmp
push
mov
shrl
and
fs
push
xchg
mov
pop
jne
and
inc
gs
inc
shrl
push
and
ret
pushf
fisttpl
imul
mov
jne
pop
sbb
sarl
push
addr16
ds
es
hlt
pop
dec
leave
mov
cmp
insb
add
mov
scas
or
loop
int
scas
test
pop
cmp
inc
pop
mov
or
xchg
xlat
ret
jbe
out
mov
push
mov
fs
push
fdivs
leave
stos
inc
std
call
mov
dec
mov
nop
adc
lret
push
movsl
lret
ret
xchg
adc
gs
xchg
or
fsubrl
mov
mov
ljmp
stos
xchg
nop
stc
out
pop
data16
rol
out
cs
add
adc
cmpl
bound
aad
pop
jp
push
es
orb
add
sub
jmp
daa
sbb
inc
mov
cli
es
xor
push
or
movsb
stos
int3
xchg
rcrb
insl
mov
inc
dec
and
xchg
xchg
jp
jg
cmpsb
fiadds
push
adc
cmpsl
xor
xlat
js
or
sahf
push
dec
std
cltd
aam
mov
dec
push
aad
mov
add
or
das
gs
inc
aas
or
out
mov
mov
or
mov
test
lret
jno
or
adc
insl
sbb
icebp
push
outsb
cld
mov
cmc
mov
ja
inc
xor
xchg
jmp
xor
shlb
dec
cwtl
pushf
xchg
mov
mov
dec
out
add
sbb
xchg
xorb
mov
xchg
xchg
repz
jmp
int
mov
enter
clc
cmpsb
lcall
stos
mov
inc
and
pop
stc
nop
ret
cmpsb
push
test
add
mov
sub
or
cmp
lods
cmpsl
cmp
adc
imul
imul
inc
adc
mov
aas
dec
dec
stos
out
adc
cmp
repz
push
add
imul
xchg
push
xor
cmp
shll
or
in
outsl
cmp
sub
fistpll
popa
mov
movsb
sar
jge
movsb
jp
scas
cmp
jae
jl
xchg
pop
lods
sbb
xchg
out
push
mov
mov
outsb
dec
std
idivl
pop
push
lods
mov
in
orl
sub
cmp
sub
flds
lods
mov
test
add
mov
jne
mov
adc
pop
pop
jmp
cltd
push
xor
enter
adc
inc
mov
inc
bound
cmp
into
sub
pop
cltd
xchg
pop
xchg
leave
mov
scas
dec
dec
push
fists
push
stos
sbb
rcr
lret
aaa
cltd
cmpsb
iret
dec
push
adc
lret
out
add
inc
lcall
fwait
add
and
xchg
stc
dec
push
imul
std
or
scas
jb
sar
into
rorb
mov
std
mov
jb
or
mov
sbb
fidivl
idivl
ja
pop
sub
jle
es
daa
jmp
cmpsl
ja
mov
jp
shl
cmp
cli
xchg
psraw
movsl
cmp
mov
test
scas
pop
imul
push
mov
dec
mov
ljmp
dec
inc
imul
shrb
mov
cld
aas
bound
cmpsb
inc
jmp
ret
cmp
loope
aad
and
push
sbbb
cltd
popf
test
adc
jmp
jae
mov
or
push
mov
incb
cmp
push
negb
mov
xchg
xor
in
mov
dec
cmpl
test
mov
inc
jno
cld
mov
test
dec
cmp
jecxz
dec
cmp
sbb
aas
inc
mov
xor
mov
shll
cbtw
mov
mov
bound
repnz
inc
sub
subb
jo
pop
and
xorl
jno
mov
call
aad
mov
fisttps
xchg
leave
xor
ss
into
pop
jge
push
xchg
jle
loop
std
fsts
inc
mov
int
inc
sahf
push
fcmovb
scas
push
add
mov
rcll
imul
or
mov
xchg
dec
stos
inc
xchg
sbb
and
int
rcl
mov
lea
inc
cmp
and
stos
sbb
ljmp
ficomps
sbb
xchg
mov
cmpsl
sub
push
cmp
push
jno
or
rorb
outsl
loopne
insb
dec
jg
das
insb
pop
dec
cld
and
adc
orl
mov
fbld
mov
push
arpl
std
cmp
inc
pop
push
pop
pop
xchg
xor
dec
icebp
push
and
mov
push
fisttpl
in
sarb
ljmp
cmp
mov
sub
push
push
in
les
enter
fisttpll
in
sub
out
ret
test
int3
mov
push
mov
push
inc
clc
jecxz
push
and
xchg
mov
jae
cmp
cmp
dec
jecxz
and
clc
cmc
jmp
xchg
xchg
push
cmp
stos
mov
dec
push
adc
aad
xchg
mov
lods
xor
pop
push
into
bound
adc
ljmp
int
lods
sub
push
repnz
sub
jmp
xchg
xchg
dec
sub
lods
outsb
adc
daa
arpl
clc
sub
sub
fdivrl
hlt
orl
repnz
notb
iret
rclb
loopne
sbb
leave
mull
inc
jge
imul
adc
idivl
push
jg
add
xor
xchg
icebp
xor
insb
addr16
dec
and
xchg
cmp
adc
outsb
adc
sub
aas
and
cmp
mull
add
cmc
test
ret
mov
dec
mov
pushf
fadd
push
add
rcrb
mov
out
xchg
imul
cmc
decl
push
mov
cmp
mov
push
mov
testb
frstor
inc
and
mov
xchg
les
scas
push
mov
sti
xor
adc
jbe
into
jl
mov
pop
jns
pop
bound
xchg
mov
pop
lods
je
lahf
xor
sbb
stos
lahf
adcl
mov
popa
insb
mov
pop
in
pop
mov
mov
outsl
fs
fwait
test
repnz
pop
mov
dec
jno
sub
addl
ljmp
mov
pop
iret
and
sub
add
sub
jae
faddp
ret
enter
pop
jne
xchg
fisttpll
fnstsw
cmc
flds
daa
and
mov
ret
nop
and
jg
push
mov
sbb
dec
pop
jb
cmpsb
mov
lahf
push
sbb
or
loope
lret
and
mov
and
popf
out
hlt
sbb
fbstp
jno
mov
shlb
adc
cmp
movsl
dec
icebp
lahf
sbb
pusha
push
mov
pop
mov
push
mov
sbb
loopne
lods
dec
frstor
inc
ja
pop
mov
or
cmp
lock
icebp
lods
subl
inc
loopne
pop
sbb
mov
push
sub
jmp
dec
jle
in
inc
mov
movsl
xchg
jnp
out
mov
adc
jae
mov
inc
xchg
xor
sub
xchg
pop
aam
pop
mov
xchg
pop
mov
jae
lock
daa
loope
sbb
and
test
mov
inc
test
jo
adc
sahf
out
mov
xlat
or
xor
push
cs
jns
or
rclb
shrb
cltd
psubsb
scas
push
fnsave
xchg
push
dec
adc
rorb
sbb
add
movsb
ficoms
scas
ss
cs
int3
mov
enter
rorl
fs
cmpsl
xorl
xor
add
jge
pop
roll
mov
loope
fwait
dec
mov
out
push
xlat
jnp
mov
fcoml
addr16
inc
cmp
sbb
push
cmp
jnp
mov
adc
mov
aaa
outsl
sbb
shrl
stos
mov
arpl
jns
sahf
xchg
fisubs
enter
lods
fcos
push
into
fbstp
and
fcompl
push
push
jle
sub
mov
and
enter
mov
int
sub
fwait
mov
cmovo
dec
sarb
add
lock
dec
xchg
jns
std
push
inc
push
jnp
shlb
mov
mov
daa
sub
test
push
and
adc
mov
iret
push
cli
lret
jp
lret
xchg
cmpl
xlat
inc
lret
xchg
movl
pop
fs
out
xchg
cmc
sbb
xor
push
inc
addr16
in
xor
mov
mov
cmp
aam
pop
out
aaa
je
ljmp
shll
jae
lods
frstor
call
push
gs
filds
dec
ret
ror
jmp
ror
pop
pop
cmpsb
xor
and
bound
adc
push
mov
jbe
mov
mov
imul
dec
add
push
push
stc
inc
clc
jmp
xor
mov
jne
add
jmp
jbe
dec
mov
test
mov
int
xchg
and
test
iret
enter
jno
xor
test
add
ret
mov
inc
mov
dec
add
fstl
mov
pop
jg
add
lds
ljmp
mov
jmp
adc
jnp
test
shl
dec
sub
aad
call
leave
mov
loopne
push
dec
lock
test
fdiv
mov
mov
xor
lock
insl
adc
popl
jmp
push
xchg
int
dec
xchg
sar
add
mov
fcomps
pop
shlb
in
xor
fs
jl
lcall
dec
fwait
sahf
loope
push
mov
movsl
push
mov
mov
in
dec
jb
mov
xchg
mov
mov
or
mov
mov
fstpl
cltd
sahf
cmp
aas
rcll
jno
fldl
xchg
xchg
ljmp
iret
fwait
subl
out
xchg
sahf
cmp
mov
fadd
lock
hlt
jp
adc
dec
cmpsb
es
cmp
add
bound
pop
pop
iret
in
mov
ds
std
pop
adc
mov
inc
rcl
jmp
cs
sbb
in
xchg
movsb
sbb
or
sub
xor
xchg
int3
mov
jge
aas
sub
sbb
lcall
add
ljmp
jl
sbb
bound
adc
mov
mov
in
cmp
stos
inc
scas
xor
dec
adc
insl
gs
add
xchg
insb
xlat
cmpsb
jecxz
out
jg
adc
inc
xchg
cmpsl
fsubrl
cli
cmp
les
push
xor
popa
xor
cmp
mov
xchg
bound
shlb
mov
inc
in
leave
add
fs
mov
xchg
test
sbb
mov
rclb
cmpsb
jno
mov
out
xchg
gs
xor
int
and
lods
out
mov
mov
sub
pop
push
xchg
mov
cmpb
cmpb
sbb
sub
cmp
or
sahf
sbb
in
mov
sbb
xchg
fwait
adcl
ja
dec
pop
int3
inc
sub
pop
jbe
outsl
jecxz
jmp
pop
inc
push
rorl
les
mov
inc
std
lds
ss
and
sbbb
xor
pop
dec
sub
call
xor
lea
sbb
mov
out
mov
imul
out
cld
mov
mov
pop
movl
sub
jg
aam
push
ds
pop
add
jne
outsl
xchg
sahf
xchg
mov
cmp
in
ja
or
inc
idivb
out
add
xor
fdiv
insl
adc
cmc
mov
sub
mov
mov
leave
insl
push
jl
mov
pusha
add
aas
in
add
cs
xchg
sbb
xchg
pop
xchg
xchg
andl
shl
xor
fwait
out
xlat
cmp
add
mov
dec
fcoml
enter
push
xor
aam
popf
imul
push
cmovne
movsl
cld
mov
loope
xor
loopne
pop
xchg
cltd
add
dec
inc
mov
sub
adc
inc
inc
jo
pop
std
enter
mov
das
mov
test
popa
pop
push
out
out
and
xchg
loop
jle
test
cmpsb
push
cmp
add
mov
jb
and
stc
dec
cmpsl
push
addr16
lds
or
inc
push
cmp
inc
sub
cmc
outsl
cmpsb
cltd
outsl
xor
fnstenv
es
loope
mov
sub
insb
dec
lock
xchg
je
and
xor
outsb
das
fistpl
out
rcl
fs
call
sbb
dec
cmpsb
pop
pop
and
xchg
sbb
xchg
notb
mov
lds
ret
jnp
aam
push
je
sub
dec
adcl
jmp
loopne
jbe
push
fmull
xchg
inc
cmp
lret
or
aaa
fisubrs
pop
and
lahf
dec
jmp
lea
scas
scas
mov
cmp
pop
leave
mov
xor
pop
lcall
pop
push
ret
and
push
mov
mov
and
dec
movsb
mov
subb
jbe
inc
dec
xchg
jl
incb
repz
mov
scas
fadd
sbb
shll
cld
sub
cmc
adc
inc
aas
or
mov
jl
pushl
inc
cmc
pop
test
shlb
inc
mulb
aas
inc
mov
cmpb
in
pop
movsl
sarl
sbb
into
or
push
or
mov
mov
stc
lock
mov
xchg
mov
adc
jne
dec
mov
imul
dec
int3
jns
jecxz
mov
xchg
in
adc
nop
mov
loopne
lahf
outsl
or
cmc
mov
mov
xor
push
repnz
adcl
and
pop
cmp
jp
mov
xor
jl
repz
and
mov
xchg
mov
ja
fwait
aas
lds
test
push
adc
dec
jle
lea
pop
dec
push
out
and
lods
xchg
orl
cmp
cmp
inc
loop
xchg
pop
pop
add
stos
sub
leave
out
cmp
lahf
jmp
mulb
fmul
insl
inc
int3
sbb
jl
out
push
mov
loop
jne
sbb
or
mov
inc
lods
fsubs
mov
stos
out
dec
pop
out
dec
xlat
jl
jmp
mov
dec
push
dec
push
sub
xor
aam
jbe
xor
inc
push
fs
sti
test
mov
xchg
ret
loopne
sbb
jge
add
cmp
arpl
jge
cwtl
imul
pop
inc
mov
idiv
adc
adc
shll
adcb
int3
cwtl
push
mov
dec
stc
xchg
cwtl
mov
push
jb
fwait
push
add
mov
insl
sub
mov
loop
or
lds
icebp
xor
fs
jb
adc
loopne
push
jne
sub
mov
ja
inc
lods
test
loope
mov
lods
pop
sahf
lock
push
popf
cmpsb
cvtps2pd
fldenv
loopne
adc
add
lock
popf
shlb
fmulp
pop
fisttpll
ficomps
or
sub
push
test
scas
stos
es
fisttps
push
push
mov
adc
in
and
dec
and
pop
flds
jmp
adc
stos
push
and
ss
xchg
adc
add
pop
mov
inc
mov
subb
pop
adc
jl
imul
xchg
fistpl
mov
pop
fisubrl
cmp
fidivrs
inc
mov
loope
jne
sbb
fidivrl
mov
std
mov
outsb
ret
mov
fstpl
ds
insb
mov
xchg
lcall
pushf
add
push
inc
pop
mov
fcomps
pop
and
fsts
cmp
sbb
jle
dec
aas
addr16
lahf
mov
sub
int3
cmp
addr16
int
lcall
add
sub
testb
xor
mov
cltd
mov
movb
dec
cmpsl
out
mov
lods
xchg
lods
jno
or
adc
subl
bnd
decl
push
xchg
movsl
dec
adc
and
cmovge
in
mov
aaa
or
dec
leave
pop
popf
pop
sbb
cmp
fisubrl
jmp
and
push
push
fcomip
fimull
add
loopne
mov
jns
mov
and
jno
pop
test
lock
push
rorb
int3
sarl
sbb
jl
test
dec
and
insl
push
popf
sbb
push
pop
inc
fsub
mov
inc
pushl
lods
mov
dec
jno
rcrb
fbstp
ret
push
popf
add
mov
pushl
push
push
insl
adc
aaa
es
sbb
gs
xchg
or
iret
unpckhps
leave
add
push
xchg
in
test
aas
mov
adc
fldenv
xor
aas
inc
mov
mov
dec
push
mov
fsubrp
hlt
sahf
dec
nop
xchg
aas
mov
xor
sub
or
mov
lret
or
cli
xor
stos
pop
jns
dec
mov
xchg
cmpsb
pop
frstor
pushf
xchg
scas
xor
jo
jns
sti
subl
enter
mov
clc
rcr
lds
ja
jmp
scas
adc
mov
in
adc
jb
dec
dec
incb
pushf
les
lods
arpl
cwtl
and
dec
or
and
sahf
scas
add
push
sub
fyl2xp1
fmul
cmc
push
mov
mov
fstl
ds
mov
incl
das
mov
xlat
push
lahf
mov
add
call
dec
rcll
sarl
dec
fwait
ljmp
outsl
push
lahf
push
sbb
nop
add
clc
dec
sub
jnp
jmp
push
cmp
xor
inc
enter
popf
push
mov
pop
sbb
fcmovnbe
movsl
mov
lahf
sbb
inc
pop
xchg
sbb
inc
lods
into
sbb
stos
pop
bound
sub
test
in
and
mov
xor
xor
insb
mov
mov
jnp
push
and
mov
push
jae
xor
mov
mov
cmp
nop
mov
mov
ljmp
pop
popf
lret
xor
call
imul
or
dec
xchg
xchg
jmp
and
test
jmp
pop
icebp
std
fs
mov
mov
daa
sub
ja
lock
push
push
daa
std
scas
stos
fsqrt
sar
data16
lcall
out
leave
xchg
cmp
mov
lods
stos
jae
imul
add
daa
pop
icebp
and
xor
sti
pop
adc
mov
cld
enter
add
mov
push
jbe,pt
pop
dec
int3
mov
mov
add
fisubl
mov
and
bound
dec
sbb
jnp
jge
lock
pop
mov
sub
sub
dec
adc
sub
scas
dec
pop
push
add
inc
add
addr16
sti
jg
mov
cmp
add
scas
ret
or
rcrb
aaa
ret
and
movsb
adc
xchg
popa
or
xchg
int
call
adc
xchg
add
mov
adc
cmc
movsl
movsl
mov
mov
mov
jmp
xchg
inc
mov
and
adc
sbb
lcall
or
pusha
adc
cmc
sub
sub
mov
sbb
stos
shll
and
decb
and
ret
mov
test
gs
sahf
dec
lock
aas
enter
or
jae
fnstsw
fisttpll
lods
mov
int
jge
adc
xchg
scas
or
mov
lock
mov
sub
jae
adc
xor
ds
dec
or
daa
in
xchg
add
lods
inc
sahf
xor
daa
pushf
fwait
ljmp
orb
and
cmp
cmp
sub
loope
subb
dec
and
push
jl
aam
mov
xor
fisubs
fsts
add
rolb
iret
add
xor
stos
movsl
insb
mov
repz
subb
pop
repz
adc
cmc
cmp
inc
push
call
outsl
imul
fstpl
and
xchg
daa
rcrb
jns
out
mov
nop
fcmovu
push
int3
jmp
aam
or
sahf
dec
cli
push
dec
lret
sbb
or
cs
fnstenv
stc
push
pop
sub
ss
clc
sahf
call
imul
je
push
andl
lock
sub
jecxz
pop
pop
test
cmp
mov
adc
inc
mov
ret
fwait
add
imul
jns
and
xor
rorb
das
sub
aaa
arpl
inc
mov
nop
pop
out
dec
pop
adc
call
call
mov
movsb
xor
adc
out
jg
push
test
pop
lcall
mov
jge
push
push
pushf
pusha
pop
je
add
dec
or
mov
cmc
fldcw
jg
sub
inc
lds
ja
xchg
stos
fsubrs
test
adc
aad
xor
cmp
ret
adc
rorb
mov
aam
jbe
add
mov
ds
sahf
sbb
pusha
and
xchg
aam
cmp
push
xchg
push
popf
ret
dec
ret
sub
adc
xor
ja
jno
fdivrs
rcr
mov
dec
add
decl
pop
mov
pop
or
sub
mov
out
aas
or
mov
and
mov
pop
les
nop
or
add
adc
push
cwtl
pop
pop
ds
dec
mov
popa
jecxz
cli
pop
xchg
lahf
cmp
mov
aam
push
dec
fs
rcrb
sub
or
pop
outsl
xlat
sub
mov
xlat
pop
jae
push
insl
add
xor
arpl
adcb
or
mov
in
and
js
mov
sbb
adc
xchg
lds
aaa
pop
cltd
mov
and
les
int3
sbb
iret
xchg
sub
outsl
lds
js
add
pop
stos
cmpsl
insb
sbb
mov
arpl
rclb
xchg
mov
lcall
mov
jae
inc
adc
or
cld
push
xchg
rolb
out
xor
jp
push
cltd
outsl
add
xchg
repnz
sbb
jno
jge
xchg
or
std
xchg
sub
sbb
test
mov
push
mov
icebp
mov
cmp
or
add
pusha
fs
aam
dec
dec
dec
es
rclb
scas
xlat
enter
cmpsb
cmp
stc
fldcw
sub
in
xchg
mov
sub
in
sahf
fmulp
sub
xchg
int3
stos
xor
ret
pop
in
out
mov
add
icebp
and
ror
xor
dec
lahf
cmp
inc
xor
fcos
cmpl
add
fmull
lock
lret
imul
mov
xchg
das
xchg
mov
mov
xchg
shll
push
cmp
fwait
and
xor
jge
inc
pusha
mov
cmp
dec
xchg
aaa
pop
fsub
and
lcall
xchg
insb
or
popf
dec
cmp
out
xor
repnz
inc
push
push
pop
cs
icebp
push
pop
rcrb
mov
les
mov
aam
arpl
xor
je
mov
mov
movsb
fisubl
sbb
and
mov
into
mov
repz
fwait
lock
sbb
test
xlat
ds
adcb
push
pusha
adc
pop
movsl
ret
add
out
mov
jne
pusha
pop
fldl
and
cmp
test
xchg
cmp
jp
jbe
mov
mov
out
sub
adc
inc
stc
or
jo
xchg
fld
dec
add
call
xor
and
addr16
cld
outsl
enter
lds
hlt
sub
jno
bound
jg
and
ljmp
int3
jmp
vminpd
shll
cmp
movsb
sbb
jmp
mov
adc
mov
adc
aas
clc
xchg
add
push
sbb
scas
out
sub
pop
fdivs
cwtl
subb
jmp
xor
dec
xchg
cmp
out
repnz
push
adc
sub
nop
add
jle
into
ljmp
mov
lods
xchg
adc
rol
sahf
out
loopne
lcall
insb
or
dec
test
ljmp
xor
and
jns
gs
sti
mov
mov
test
sbbl
cwtl
cmpsl
into
aam
xchg
sbb
stos
mov
mov
add
cmp
cmp
jmp
rolb
jne
jle
add
jnp
add
add
pop
ret
and
cmc
push
xor
jae
push
aad
add
es
add
arpl
es
in
sub
or
fs
xchg
pop
sub
in
scas
out
xchg
add
stos
push
out
push
pushf
movsb
pop
jl
int3
mov
jo
mov
into
lea
arpl
adc
out
sbb
test
mov
xchg
outsb
andnps
dec
pushf
ss
adc
xor
ficomps
mov
or
jmp
pop
imul
shll
loop
pop
push
mov
mov
lret
test
push
pop
mov
leave
push
xor
mov
push
fadds
jb
frstor
nop
bound
fisubs
xor
adc
mov
in
movsl
insb
idivb
jbe
cmpsl
rcl
sbb
inc
or
sarb
xor
push
mov
push
addb
push
mov
add
add
pop
xor
fdiv
sets
lods
jnp
add
xchg
ficompl
aam
test
mov
ja
das
cld
mov
test
cmc
mov
into
je
jno
push
jge
jl
imul
mov
lea
ret
in
out
gs
stos
push
loop
aam
pushf
and
pop
rolb
jmp
lods
lret
cltd
and
aaa
mull
lahf
jne
int3
js
cmc
insl
popf
pop
mov
jge
sbb
lcall
push
rcrl
push
inc
or
dec
pusha
push
sbb
jnp
sub
ret
add
pusha
stos
sbb
in
icebp
inc
and
aam
mov
fdiv
aam
out
add
jge
xorb
cli
lods
lahf
sub
xor
ja
mov
dec
insl
enter
ljmp
sbb
imulb
test
push
sbb
repz
js
in
nop
lods
mov
shlb
jb
cltd
mov
fwait
or
adc
mov
data16
aad
pop
ss
adc
int3
dec
xor
rorl
lcall
sub
std
sbb
ret
xchg
push
mov
push
mov
mov
jle
xor
jno
jmp
mov
icebp
out
fsub
arpl
jle
push
push
test
mov
and
es
repnz
enter
insb
fsubs
jo
and
cmp
jns
mov
enter
add
lea
shrb
movsl
insb
jo
aas
popa
sbb
inc
jp
bound
inc
jecxz
dec
push
or
push
add
arpl
mov
ss
add
pop
cwtl
cmp
in
test
ret
adc
int
dec
ja
mov
xor
xchg
scas
fimuls
inc
das
dec
xchg
pop
sahf
xchg
add
cld
push
cmp
xrelease
clc
lahf
ja
lcall
jmp
dec
daa
psubw
popa
lods
inc
shrb
or
mov
cmp
inc
call
xchg
and
nop
sub
fsubrp
jnp
clc
inc
mov
cmpb
pushf
sub
inc
pop
push
sbb
subb
in
adc
dec
inc
call
cmp
and
add
cmp
out
sub
aad
adcl
mov
iret
arpl
dec
cmp
leave
adc
packssdw
xor
test
cmp
not
lock
movsb
and
pop
das
jle
mov
add
inc
movsl
mov
fs
sbb
lock
mov
sarb
frstor
sbb
dec
xchg
jecxz
jl
jmp
ret
das
fbld
aad
jecxz
fimull
dec
jno
cmp
gs
ss
push
cwtl
fdivl
pop
sbb
sub
push
jp
xor
rorb
cmp
aaa
mov
stos
out
jl
test
loopne
jmp
test
dec
cld
or
sbb
ljmp
push
push
std
adc
push
mov
push
adc
rcrb
sub
and
jne
sbb
int
fisubrs
fs
push
rcll
adc
dec
xchg
and
arpl
cmp
push
push
sahf
hlt
in
and
aam
xchg
sub
test
mov
mov
ljmp
pop
scas
in
test
jl
mov
fwait
push
jb
lock
and
frstor
cmp
int
pop
jne
clc
fsubl
mov
in
test
inc
mov
pop
dec
or
xor
and
fnsave
jecxz
mov
popa
imul
xchg
ljmp
pushf
pop
adc
lds
adc
xchg
xchg
mov
sbb
outsb
push
add
stc
sets
leave
jecxz
loopne
dec
test
mov
fistpll
lcall
adc
mov
cmp
daa
into
fucomip
out
inc
clc
pop
and
mov
mov
xchg
je
cmpsb
mov
shrb
push
inc
test
and
mov
imul
xlat
sub
or
mov
popa
test
adc
ss
iret
in
cli
int3
icebp
xor
add
mov
sub
imul
movsl
aaa
mov
pop
jnp
dec
xor
clc
ret
sbb
adc
bound
out
pop
xchg
sub
push
fs
cmp
jbe
pop
mov
imul
xchg
mov
std
dec
mov
in
mov
std
mov
and
loop
daa
push
sub
mov
js
mov
shll
push
movsb
xor
cwtl
ffreep
xchg
adc
in
hlt
ss
push
jge
nop
xchg
ret
xchg
adc
xchg
xchg
inc
cs
xor
push
xchg
sub
ror
ret
sub
sub
shlb
mov
bound
test
xchg
ja
mov
sub
stos
and
cld
in
sub
out
es
aas
mov
aaa
cli
lret
idivl
js
push
dec
cmp
inc
pushf
enter
lahf
fldl
jle
mov
and
jmp
jo
push
pop
dec
das
jno
pop
fistps
cli
cmpsl
daa
ljmp
inc
fildll
and
push
mov
push
movsl
mov
push
movsb
insb
pop
rcll
xor
and
out
fsubl
push
test
inc
sbb
pop
bound
stos
out
push
in
inc
shlb
lahf
popa
dec
pop
loope
push
add
inc
stos
cmp
mov
aas
sub
enter
aas
pop
insb
xchg
and
outsb
mov
orb
push
add
test
pop
cmp
test
jbe
sti
mov
jp
xchg
cmp
sub
adc
mov
scas
jmp
arpl
dec
sub
sbb
pcmpgtd
ljmp
and
adc
shrb
pop
daa
pop
insb
add
mov
mov
sbb
enter
jmp
pop
push
or
xlat
xchg
and
jp
sbb
mov
or
and
push
movsl
cmp
mov
cmp
inc
in
push
jmp
sub
dec
xchg
cmpsb
movsl
mov
xlat
pop
imul
movsl
push
inc
fisubrs
test
outsl
ja
jmp
sbb
lds
arpl
je
dec
xorb
cld
sbb
inc
fsts
loop
pop
add
add
push
jge
ret
rcrl
cmp
mov
push
mov
into
movsb
stos
inc
outsl
and
mov
xchg
jnp
mov
xor
sti
cmp
mov
repz
add
or
mov
ja
mov
in
lcall
clc
or
dec
fwait
dec
lds
add
aam
pop
pop
xor
mov
dec
dec
push
lret
xor
daa
sarl
cwtl
in
imulb
add
lcall
imul
jno
push
int
mov
cmpsb
fisubrs
cmp
es
cmp
jge
scas
mov
and
jle
pop
cmp
xor
push
loopne
cwtl
lret
enter
sub
pop
lods
fcmovnb
adcb
cltd
xor
lcall
out
cld
xor
stos
outsl
scas
pop
xor
or
inc
mov
out
or
mov
rorl
push
push
mov
inc
mov
scas
cmp
inc
aaa
xchg
and
mov
mov
jb
xchg
adc
aas
lds
sahf
pop
sub
and
fwait
mov
push
hlt
repz
std
fcmovu
repz
push
push
mov
aas
daa
push
dec
mov
inc
mov
inc
sbb
dec
out
push
push
lds
sub
mov
jnp
inc
sub
sub
clc
pop
rcl
or
and
cli
push
sbb
xor
loop
out
mov
insb
insb
aas
lock
icebp
and
lret
andl
jecxz
or
pushf
js
xchg
test
bound
fldlg2
jae
xchg
mov
pop
or
adc
pop
scas
sbb
mov
and
mov
fidivl
imul
cmc
fidivrl
cmp
popfw
pop
xchg
mov
loop
fldcw
sbb
pop
push
dec
pop
stos
test
jb
sbb
mov
int
add
hlt
add
xchg
adc
or
in
test
mov
pop
cmp
push
push
cmpsb
sbb
xchg
out
cmp
xchg
cwtl
mov
cmpsb
nop
cmp
rorl
push
sbb
sbb
in
lock
inc
add
push
std
inc
stos
lret
push
icebp
push
arpl
in
les
mov
mov
xchg
shll
ror
xchg
cmp
pushl
outsb
movsb
arpl
ss
mov
mov
je
or
test
lahf
fucomp
mov
mov
xchg
push
fdivrs
int3
jns
mov
add
and
call
mov
fstpl
pop
mov
mov
add
insb
push
sbb
jecxz
mov
push
adc
mov
or
jecxz
bound
xor
fsts
mov
inc
out
sar
jle
mov
and
push
add
enter
fsubs
add
add
nop
sar
cmpl
jne
jno
rcl
fwait
ss
mov
ja
pop
jmp
mov
mov
stos
push
shlb
cmpsl
xchg
sbb
inc
fcomps
adcl
mov
push
pop
aaa
sbb
repz
xchg
sub
push
incb
idivl
outsb
pop
mov
cmpsl
sbb
lods
ja
mov
ret
push
out
jecxz
movsb
xor
mov
jmp
push
push
mov
ss
rclb
fsubrs
dec
or
push
adc
push
decl
adc
cmp
out
dec
aaa
add
adc
and
imul
xor
pop
bound
in
pop
mov
mov
dec
dec
or
aas
sub
shll
xor
push
sub
mov
pop
stos
add
fsubl
loopne
mov
sbb
and
rorb
cmp
stos
adc
push
lock
inc
push
rorl
jbe
fdivr
daa
mov
sub
sbb
fcomip
lock
mov
pop
cmp
inc
cmpsb
push
lock
out
adc
jae
mov
enter
mov
pop
jl
inc
push
addr16
lret
jns
in
mov
dec
shll
mov
xor
xor
dec
jge
insl
add
add
shll
jbe
xchg
push
or
gs
dec
or
leave
and
add
push
adc
cmpsl
movsb
fidivrs
xchg
push
ja
fs
insl
enter
or
cmp
xchg
sub
lods
stos
lds
fidivs
rorl
dec
popf
push
fwait
sub
popa
and
ja
icebp
imul
xor
cmp
xor
fst
cmp
ss
jb
cmp
testb
jecxz
mov
cmpsl
fisttpll
xchg
cmp
stc
jmp
ret
mov
pushf
dec
dec
test
imul
sbb
mov
pop
push
dec
clc
pop
push
cmp
jbe
xchg
outsl
lcall
pop
jg
stc
popa
bound
cmp
stos
jp
pop
mov
inc
sub
sti
ret
jge
pop
xchg
sbb
addr16
cli
add
imul
mov
adc
or
pop
lock
dec
push
clc
rol
mov
icebp
pop
xchg
jne
inc
or
out
fstpl
add
push
cmp
pop
push
cmc
pop
orl
stc
movsb
aam
mov
and
push
push
push
ret
jp
lock
out
flds
shlb
fbstp
dec
mov
mov
rolb
xor
sub
loopne
pop
lahf
dec
dec
iret
jns
or
cmp
mov
sub
xchg
cwtl
rcrl
adc
adc
out
pop
test
cli
pop
xor
movsl
in
xchg
mov
lcall
cmc
sti
xchg
clc
outsl
in
pop
pop
ljmp
sub
imul
pop
enter
xchg
pop
mov
out
inc
jp
push
stos
xor
pop
push
and
repz
jno
scas
jno
ljmp
xorl
mov
in
cltd
cmpl
sub
jbe
pop
pop
add
inc
aam
cmp
or
subb
imul
jecxz
stos
inc
push
add
cmp
sub
add
imul
lods
jle
cmp
mov
dec
jno
sbb
sti
sbb
repnz
repnz
pop
lcall
or
insl
hlt
mov
in
and
sbb
cmp
push
xor
sub
lods
popa
or
int
sbb
sbb
xor
mov
pusha
je
mov
xchg
push
lods
mov
nop
push
ret
ljmp
xlat
sbb
mov
jp
imul
pop
inc
adc
popa
dec
movsb
inc
cmp
shl
push
out
inc
call
xchg
icebp
jo
les
int
cs
in
notb
lods
xchg
xchg
push
arpl
int3
cmp
adc
addr16
cmp
cli
or
sub
sub
push
mov
mov
add
adc
ja
enter
incl
xchg
test
cmc
mov
push
int3
es
cltd
dec
and
int3
pop
orb
in
xor
pop
add
mov
mov
rorb
mov
call
or
mov
aam
xchg
icebp
jb
iret
sti
xor
sub
gs
fcoml
xchg
and
xchg
pop
das
mov
repnz
shr
mov
and
pop
jno
decl
add
cmc
ds
mov
sub
rcrb
lcall
inc
mov
push
enter
fwait
or
scas
jae
int3
xor
xchg
xor
addr16
addr16
sahf
mov
scas
mov
sbb
fimull
and
pop
xchg
outsl
push
cltd
sbb
loopne
xor
clc
lock
into
jno
cmp
add
test
data16
in
sbb
stos
push
ret
lock
sub
jne
divl
adc
sbb
push
dec
scas
imul
push
out
xor
sub
mov
dec
test
xchg
cmp
push
inc
pop
je
cwtl
or
stc
xlat
stos
cmp
fdivrl
mov
push
and
xchg
adc
cmp
xor
and
out
outsl
fiadds
sarl
jecxz
and
fdivrs
sub
enter
mov
fbld
stc
fdivl
neg
lret
jns
add
arpl
shlb
ret
jns
inc
or
cmpsb
fwait
out
mov
jp
pop
sbb
jecxz
sub
loope
mov
mov
in
bound
lea
pop
or
mov
pop
outsb
ljmp
cmp
inc
ret
fildll
rolb
mov
inc
mov
loop
add
cmp
fstl
adc
add
imul
sbb
push
repnz
hlt
movsb
inc
bound
push
dec
inc
aas
sub
cmp
jecxz
xor
jmp
xor
sbb
stos
mov
adc
rcl
mov
aam
mov
mov
and
jns
pushf
addb
cltd
enter
bts
add
dec
inc
in
push
sahf
shrb
sub
pop
or
cmp
jno
and
mov
adc
ljmp
repnz
pop
or
jb
dec
out
jnp
xchg
scas
adc
inc
cmp
jbe
ret
and
inc
pushf
imul
jl
adc
pop
cltd
aas
mov
es
fdivrs
int3
ss
or
pop
les
sahf
xor
insb
je
out
sub
hlt
xor
aad
mov
mov
fwait
sub
insb
xor
out
adc
out
pop
in
cmpsl
mov
imul
cmp
xlat
fwait
cmp
add
xor
sbb
test
jb
loope
sub
out
mul
arpl
xchg
cmp
or
push
or
xor
aam
xchg
test
call
int
ja
push
push
fiaddl
xor
push
bound
adc
xor
divb
mov
rolb
push
sarl
cmp
imul
js,pt
and
gs
push
bound
dec
xchg
aam
dec
test
pop
shrl
fisttpl
sar
sub
push
in
cmc
js
mov
leave
leave
movsb
push
jo
hlt
cmp
lahf
jp
mov
std
pushf
ficomps
stos
sbb
pop
xor
pop
daa
fstl
scas
dec
xor
sub
xchg
daa
pop
in
inc
daa
jnp
sub
xchg
andb
xchg
lret
xlat
ds
addb
cmpl
test
dec
mov
je
pop
xor
push
es
adc
sahf
cmp
aaa
mov
pop
adc
cmp
xlat
aaa
jo
imul
jmp
lock
mov
shl
pop
mov
dec
inc
ret
popf
test
and
std
sub
rclb
mov
xchg
add
sbb
adc
popf
jge
sub
movsl
ret
lcall
jbe
ficoms
and
xchg
push
sbb
cmp
jle
dec
xor
cmp
hlt
jb
ljmp
jl
and
fdivp
popl
ja
movsl
divl
inc
insb
add
ret
xlat
add
mov
cmp
push
pop
add
push
scas
lret
out
mov
xchg
les
pop
imulb
int3
and
lds
jmp
dec
sub
mov
sbb
cmp
adc
cmp
inc
jge
cltd
adc
test
outsl
mov
imul
cli
adc
pop
mov
jae
repnz
sub
fwait
pop
xor
inc
test
scas
lock
xor
cmp
inc
cmpsl
cwtl
xlat
adc
mov
insl
xchg
in
adc
pop
mov
adc
dec
add
aad
and
stos
ror
shll
add
dec
sti
pop
jnp
and
adc
push
es
cwtl
xor
jns
mov
or
fdivr
cmpsl
push
sarl
out
ficomps
mov
sub
je
sahf
add
imul
loop
popa
add
sbb
sbb
enter
lea
mov
cs
rcl
sti
and
test
or
mov
aas
call
clc
cmp
adc
mov
push
mov
pop
xor
push
out
fcompl
xchg
pop
movsb
call
fcoms
scas
xorl
sub
pop
mov
and
pop
push
sub
xor
mov
sti
fs
mov
jge
sahf
inc
adc
inc
jno
pop
xchg
mov
clc
std
enter
cmp
mov
xor
mov
ret
pop
cmp
inc
mov
adc
mov
cmc
cmpsb
sti
mov
jns
adc
xchg
push
jge
movsb
test
insb
mov
std
bound
push
mov
fildll
sti
out
bound
jbe
lret
fists
sbb
aas
mov
or
rolb
lods
mov
daa
xor
sahf
test
cmp
dec
pop
repnz
jle
dec
insl
pop
mov
out
cld
inc
test
iret
or
jle
hlt
das
ss
jb
cmp
arpl
sub
pop
shr
ret
jp
imul
cmp
outsb
mov
dec
lahf
out
and
repz
mov
cmpb
jl
jo
sbb
test
gs
outsb
cvtps2pi
into
push
xchg
jmp
lds
add
cmp
dec
fldt
or
lret
sbb
imul
lds
pop
jb
sub
mov
push
out
pop
xchg
movsb
clc
movsb
loope
pop
and
into
lret
stc
arpl
mov
xchg
int3
in
int
inc
les
push
mov
insl
je
sarl
mov
pusha
insb
and
mov
stos
jecxz
fimuls
popf
mov
mov
mov
cld
cmpsl
sbb
stos
mov
stos
add
idivb
ret
and
mov
inc
push
cmp
popa
sbb
xchg
je
imul
jno
stc
xchg
pop
test
call
cmp
fisttps
mov
andb
out
aaa
adc
jmp
jns
dec
add
jecxz
loopne
jnp
or
pop
xchg
xor
push
test
nop
mov
jl
or
cmp
push
sub
mov
add
push
push
and
push
pop
xor
leave
push
fadd
shl
insb
mov
or
inc
cmp
xchg
fistps
inc
popf
fadds
fwait
inc
loop
ja
push
inc
ds
inc
or
cld
mov
adc
mov
fwait
mov
nop
loop
imul
adc
loope
stos
movsl
sti
push
push
cmp
adc
dec
push
sub
mov
sbb
test
mov
std
negl
jp
pop
popf
addb
dec
pop
sar
into
sar
mov
sbb
mov
shl
lods
ja
mov
push
cltd
fisubrl
shrb
xor
push
and
les
or
or
pop
xor
mov
imul
jp
outsb
sbb
lcall
out
in
movsl
aaa
push
jns
sub
cwtl
or
negb
jnp
pop
push
lret
dec
js
arpl
cmp
call
push
and
dec
das
cmp
lods
push
push
xchg
dec
shl
dec
mov
ret
cld
xchg
and
addl
adc
pop
sub
lcall
push
rcrb
cmp
lock
rcr
xor
adc
aas
push
mov
fs
sub
jns
in
xchg
push
enter
push
mov
xor
sarb
ds
les
fsubs
add
lods
and
mov
shrl
add
cs
lods
mov
push
fnstenv
aad
inc
cmp
mov
push
jo
loope
aad
in
mov
movsb
not
cmp
ds
cmp
bnd
mov
sar
faddl
jmp
mov
and
lret
adc
popa
mov
in
pop
adc
mov
pop
and
push
stos
jge
jne
nop
pop
inc
outsb
jae,pn
and
lret
lcall
xor
out
pop
into
xchg
mov
jnp
cmc
and
repz
mov
fldl
jecxz
js
into
out
adc
inc
out
jbe
dec
xlat
sbb
ficompl
add
cmp
push
popa
push
int
jnp
data16
enter
inc
flds
test
hlt
loopne
pop
mov
cmpsl
inc
mov
adc
mov
sti
and
xorl
outsl
mov
movsb
mov
xchg
aam
jo
xor
cs
mov
xchg
dec
and
sub
jns
adc
shl
or
pushw
cwtl
lods
lcall
ljmp
dec
dec
sbb
lea
scas
dec
cmpb
mov
jecxz
xchg
jbe
in
pop
add
and
dec
mov
mov
pop
ret
sub
int
cmp
stos
in
imul
lret
js
and
xchg
mov
xor
adcl
dec
jg
cli
xchg
sarl
lods
mov
stos
and
mov
sub
daa
or
mov
test
rclb
cmp
dec
sub
dec
out
xor
sub
mov
cmpsl
aam
outsl
cld
and
aad
jp
mov
pushf
rolb
repz
rcll
xchg
in
sbb
xchg
mov
push
lock
outsb
mov
test
jmp
out
imul
inc
inc
ret
gs
inc
cwtl
mov
stos
sbb
inc
loope
adc
dec
pop
add
xor
or
mov
jmp
or
aad
out
popa
cltd
imul
mov
into
icebp
nop
push
cmp
mov
je
inc
test
lods
dec
jbe
dec
xchg
cs
pop
in
cmpl
cmp
popa
and
pop
adc
pop
and
inc
stos
insb
sbb
outsl
sbb
cmpsl
leave
cmp
rclb
mov
leave
sbb
mov
movsl
ret
adc
push
sahf
dec
repz
lret
xchg
and
pusha
inc
cmp
dec
xor
add
mov
mov
mov
xor
add
sbb
cmp
and
fistpll
dec
push
mov
push
in
fldl
push
jecxz
jnp
arpl
jmp
in
adc
xchg
xchg
dec
mov
test
call
pop
push
pop
insl
shlb
adc
stc
mov
pop
and
inc
dec
insl
push
js
out
fisubrl
out
ja
pop
jae
jge,pn
mov
jnp
inc
cmp
andb
mov
xchg
jl
loop
das
fisubrl
adc
add
scas
into
jns
or
test
mov
adc
out
jecxz
mov
out
sbb
jne
shlb
sub
rclb
imul
nop
pop
xor
ja
popf
cmpsl
loop
mov
pusha
jl
pop
mul
cltd
mov
dec
lds
test
inc
aas
jmp
and
cmc
mov
or
imul
mov
in
enter
dec
das
mov
pop
mov
jae
xchg
xor
add
aad
ficompl
sub
xchg
mov
mov
sahf
pop
push
or
inc
imul
lds
fildl
fstps
hlt
dec
iret
mov
dec
or
fwait
mov
imul
add
jns
and
sub
pop
enter
in
mov
jmp
stc
xor
stos
mov
push
movsl
sub
pandn
sbbb
push
js
out
mov
xor
and
xorb
mov
mov
inc
daa
sub
xchg
enter
xchg
out
jnp
pop
scas
cmp
jno
pusha
mov
repz
fidivl
shrl
jmp
lret
xor
inc
fcoml
fnstcw
jl
xlat
cwtl
dec
pop
in
xchg
adc
rcr
icebp
fists
mov
mov
dec
jle
hlt
pushf
lock
bound
mov
sub
mov
enter
or
xchg
outsl
sub
adc
mov
hlt
aam
sub
test
dec
sbb
leave
xchg
xor
adc
lock
jne
add
adc
mov
inc
es
mov
jne
scas
jg
sbb
cmp
push
outsl
jp
pop
push
xchg
mov
push
adc
jbe
clc
bnd
mov
into
and
lret
jo
cmpl
xchg
xor
pop
push
jns
ret
push
mov
push
xchg
in
in
add
dec
mov
gs
daa
mov
and
xlat
out
cmpl
and
stc
cmpl
adc
lock
add
data16
jnp
jo
pop
out
mov
std
loop
test
clc
jp
push
mov
pop
or
inc
push
cmpb
mov
mov
push
xchg
push
shlb
mov
jo
sub
xchg
mov
push
lret
or
push
fdivs
lock
into
push
mov
sbbl
sub
imull
rorl
and
incl
pop
into
push
mov
hlt
loopne
sbb
or
push
pop
cli
jns
push
and
pop
inc
daa
gs
ljmp
mov
gs
subb
sub
aam
adc
mov
mov
out
or
arpl
inc
out
leave
dec
add
loopne
aas
dec
ret
repnz
and
inc
add
hlt
aad
arpl
adc
into
rorl
push
jecxz
xchg
sbb
lea
dec
shlb
fsubrp
repnz
pushf
lock
cmp
mov
add
bts
ljmp
push
pop
orl
nop
mov
aas
cmp
rolb
jae
cmp
mov
repnz
mov
cmpsl
outsb
jmp
or
mov
dec
mov
adc
ljmp
sbb
push
sub
mov
ficomps
sarl
mov
adc
nop
jne
test
jo
dec
sbb
adc
jmp
stos
mov
mov
and
and
jb
or
xlat
mov
ret
mov
and
pop
and
push
sbb
cli
jbe
pusha
cmp
mov
cmp
fsts
inc
ficoms
xor
pop
push
fisubrs
xchg
mov
cmp
das
std
into
push
xchg
pop
je
xchg
fisttpl
push
es
add
rolb
test
or
jl
inc
or
mov
lahf
and
adc
push
fldl
jp
psraw
bound
inc
inc
adc
subl
pop
test
pop
pop
std
out
pop
mov
push
scas
je
inc
jae
movsl
setge
std
fisttpl
push
aam
xchg
es
pop
sti
add
inc
imul
in
std
scas
pop
jb
scas
and
lret
imul
sbb
push
inc
and
pop
popf
add
mov
add
f2xm1
adc
flds
adc
cwtl
cmp
cmp
bound
pop
les
mov
xchg
jb
jmp
sarl
outsb
fsubs
lcall
jl
mov
add
cmpsl
and
mov
ja
jns
xchg
xchg
xchg
enter
stc
cmp
or
sub
add
jae
mov
xor
inc
hlt
jno
mov
sti
lahf
xchg
outsl
test
stos
mov
mov
lret
cmpsl
out
mov
pop
or
sbb
jl
sbb
inc
mov
or
loope
aaa
das
outsl
inc
fdivp
cli
pushw
cmp
sbb
xchg
pop
jnp
push
je
leave
subl
test
mov
mov
jo
cmpsb
xor
aam
xor
adc
and
outsl
lret
and
daa
mov
insb
xchg
xchg
js
imul
adc
test
cmp
dec
shrl
aaa
pop
lods
pop
sbb
notb
mov
adc
xchg
cltd
adc
mov
ja
push
jle
cmp
fistl
or
js
adcb
jae
sbb
popa
movsb
leave
or
xchg
pop
mov
cli
leave
call
stc
fs
cld
sti
stc
andb
scas
pusha
xchg
pop
mov
std
cmp
int
jp
and
in
das
jl
and
xchg
in
adc
push
pop
frstpm(287
pop
rcrb
shl
inc
rolb
fsubrs
andb
push
leave
das
cmp
mov
fdivrp
lahf
ja
mov
adc
test
pop
dec
jmp
pop
rcrl
je
fadd
jge
or
mov
cmp
ret
mov
test
mov
sub
push
sbb
adc
adc
stc
nop
mov
xchg
dec
sbb
push
xor
mov
aad
push
fsts
xor
clc
mov
test
lret
cld
cld
pop
in
es
pop
xchg
pop
mov
je
addr16
ret
loopne
repz
jbe
mov
ljmp
cltd
pop
jae
loopne
push
or
pop
stos
adc
pop
fnstenv
shl
aas
sbb
in
rcl
pop
fmulp
incb
inc
popa
or
aam
push
mov
cmp
push
sbb
mov
scas
aas
std
fbstp
iret
inc
or
lock
test
hlt
push
push
dec
aad
ja
aad
cmp
jae
xchg
mov
clc
and
push
mov
gs
mov
sbb
add
cmp
aas
dec
mov
add
jmp
insb
jbe
pop
xor
mov
add
test
xchg
out
sti
pop
movsl
jl
je
fxtract
mov
movsl
popf
mov
dec
push
inc
and
ds
mov
cli
shl
subb
jbe
inc
pusha
dec
inc
fisttpll
std
xor
dec
mov
out
cltd
pop
mov
stos
daa
jmp
arpl
jl
push
cwtl
lods
push
and
icebp
lds
or
js
fcompl
mov
mov
adc
je
fistl
mov
gs
pusha
pop
pop
mov
aam
push
addr16
dec
test
adc
addb
loopne
stos
mov
mov
psadbw
sub
mov
adc
sub
mov
popa
aam
add
rcrl
cli
rcr
adc
dec
xchg
sbbb
orb
stos
clc
cmp
or
cmp
mov
push
pop
fcoms
stos
outsl
jno
addr16
mov
dec
cmc
pushf
into
shl
xchg
rep
shll
or
sub
adc
mov
dec
mov
add
je
cmp
andl
xchg
and
jns
mov
mov
mov
sbb
or
mov
or
and
xchg
xorb
push
in
movsb
repnz
sub
in
sysret
inc
or
fidivrs
int
mov
inc
js
rcll
adc
jo
subl
cmp
pop
dec
daa
add
jecxz
aas
inc
cmc
sub
pop
orb
jl
or
cmp
jbe
jbe
addr16
je
push
sbb
cmp
adc
dec
ret
loop
repz
adc
repz
insb
xchg
shrl
aaa
loope
jp
mov
xor
lret
dec
push
and
lret
lcall
dec
push
dec
lods
gs
jecxz
xor
scas
loop
arpl
cmpsb
or
mov
add
or
es
cmp
test
pop
ds
popa
scas
loopne
or
push
cmc
xlat
or
cmpb
sbb
jp
cmpsl
fwait
sbb
sub
mov
xchg
jl
jl
adc
shrb
js
imul
ja
inc
dec
pop
cmp
adc
mov
cmc
insl
addr16
test
addl
arpl
xchg
scas
enter
rclb
xchg
insl
mov
mov
repnz
jl
mov
mov
add
add
and
mov
xor
ja
movsl
pop
repz
fisttps
mov
repz
pop
mov
xchg
adc
xchg
dec
xor
mov
jge
jbe
pop
movsl
cmpsb
movnti
mov
mov
fisubs
add
out
and
negl
roll
enter
mov
lahf
xor
pop
dec
sbb
idivb
xor
xchg
cwtl
cld
xor
push
mov
sub
lret
mov
loop
sub
pop
mov
in
loopne
int3
and
lret
pop
iret
jmp
in
fcomps
mov
inc
notl
sub
push
pop
sti
test
adc
jecxz
adc
jp
or
fidivl
mov
sbb
lcall
jp
cmp
test
fldcw
mov
mov
pop
lds
shll
fists
adc
sbbb
pop
jg
adc
mov
cld
imul
jle
int3
dec
push
or
jns
aam
lret
sub
sti
out
testl
add
dec
xchg
pusha
cmp
scas
push
call
daa
xchg
dec
popa
and
mov
shlb
mov
add
mov
les
dec
sbb
lock
lock
pop
inc
movsl
aad
mov
dec
lea
add
in
fdivp
es
inc
inc
mov
mov
cmpsl
fadd
in
add
lock
inc
inc
popf
and
test
mov
sbb
out
out
in
sub
lret
ret
or
scas
dec
cmp
xor
pop
pop
or
cmp
cmp
or
dec
fistpl
ret
pushf
inc
push
out
mov
sub
xchg
lds
sbb
sbb
xchg
iret
dec
gs
fcomip
aad
addl
xchg
jb
xchg
push
jg
sbb
icebp
into
push
pop
xor
out
in
adc
or
mov
mov
and
repnz
popf
inc
pop
push
das
or
inc
sarb
cmp
inc
push
out
jmp
sub
imul
in
fstl
mov
xlat
lcall
cmp
ljmp
in
dec
sti
xorb
lahf
sti
pop
insb
nop
mov
inc
push
pushf
sti
pop
out
adc
in
jnp
cld
cmp
out
shlb
scas
stos
mov
or
mov
rcr
mov
inc
pop
pusha
xchg
pop
sbb
cmpsb
jo
and
jne
ficomps
sti
mov
adc
inc
adc
push
aad
jae
lock
push
data16
pop
std
jns
jb
xchg
mov
insb
lret
add
mov
sub
fidivrs
adc
aas
lods
pop
leave
or
or
push
push
iret
dec
mov
idivl
clc
mov
loopne
jp
mov
sbb
cmpsb
xorb
roll
mov
sub
push
sbb
clc
fstenv
js
sub
sahf
js
or
push
aaa
imul
bound
ficoml
lahf
rolb
jg
xchg
inc
xchg
xchg
inc
arpl
mov
pop
ss
pop
lret
nop
js
int
lea
les
mov
test
push
dec
les
ja
in
in
adc
sub
cmpsb
fidivrs
mov
xchg
or
outsl
lock
sbb
sbb
test
jecxz
ret
scas
sarb
negl
lea
into
leave
lcall
sub
inc
leave
aam
stc
xchg
fcompl
mov
mov
into
lock
jo
xchg
or
xchg
ds
ret
mov
inc
mov
lahf
bound
insl
adc
iret
xor
out
mov
movb
fcmovu
popf
xchg
addr16
mov
dec
leave
jo
or
xchg
mov
imul
cmp
icebp
nop
popa
cmp
jnp
sarl
push
push
dec
cltd
cmp
lods
dec
shl
xor
push
fstps
push
mulb
out
imulb
dec
cmp
xchg
pop
xor
lods
bnd
out
stos
es
mov
jne
xor
subb
sbb
outsb
out
jno
movsb
sub
insl
je
and
cld
in
and
out
xorl
test
outsl
jle
scas
imul
fwait
imul
call
stos
rorl
xlat
mov
stc
jle
lahf
jle
inc
imull
mov
inc
insb
pop
bound
push
jmp
in
clc
jnp
nop
xchg
out
jle
jle
bnd
imul
sub
in
aam
or
das
pop
xor
movsb
xchg
push
sub
daa
or
push
popf
xchg
jl
cmp
cltd
mov
cwtl
hlt
test
mov
les
cmp
cmc
fdivl
ja
repnz
shll
out
fsub
lea
xchg
loop
bound
in
inc
jnp
adc
and
xor
add
push
push
scas
stos
cmpsl
mul
mov
test
inc
popa
inc
jecxz
ret
lahf
cltd
cmp
das
faddl
cmpsl
gs
bound
nop
xor
jnp
mov
lods
adc
mov
xchg
fldt
cmc
sbb
cs
and
loopne
cltd
mov
lods
sbb
jl
scas
adc
fwait
mov
stc
cmp
sbb
icebp
cmp
or
insb
leave
stos
xor
out
nop
push
mov
insb
or
pusha
pop
add
scas
sbb
addl
pop
subl
and
popf
cmpsl
call
mov
cmp
les
cmp
jnp
jge
inc
xlat
mov
fnstsw
add
in
repnz
scas
mov
in
push
xchg
add
cmpsl
push
outsb
adc
push
and
ret
test
mov
mov
jmp
in
sbb
mov
sbb
xor
into
lea
arpl
fucomip
push
outsb
popf
mov
sub
fisttps
sub
ljmp
adc
jg
mov
cmp
int
pop
xchg
cmpsb
popf
lds
mov
imul
or
jb
mov
dec
adc
sbb
mov
xchg
or
aam
xor
cli
daa
lods
dec
jmp
adc
adc
mov
cmpsb
sarb
ret
test
pop
aas
adc
push
sti
test
xor
iret
shlb
mov
inc
out
cmp
or
cmp
mov
ljmp
push
or
xchg
in
jae
xchg
jge
jne
mov
cwtl
decl
fwait
and
imul
push
inc
imul
and
push
xchg
iret
out
int3
jno
xchg
mov
xor
inc
out
stos
xchg
pop
cltd
add
xor
scas
fcoms
mov
repz
inc
mov
or
loop
outsb
sbb
fs
add
sbb
dec
in
sbb
mov
clc
adc
cmp
das
in
aaa
fsubl
mov
cli
test
inc
jb
mov
enter
pop
xchg
clc
xor
addr16
in
jmp
repnz
mov
push
cld
pushf
jp
cmp
scas
out
lahf
std
cmp
mov
fs
fisubrl
mov
aaa
outsb
shll
pop
in
outsb
idivl
fdivs
sub
sti
in
hlt
xchg
pop
mov
jbe
aam
cld
insl
lods
call
lret
in
pop
mov
xchg
xchg
mov
dec
push
jbe
cmp
lret
test
es
shlb
mov
mov
pop
mov
aas
repz
push
insl
pop
sbb
sar
xor
jle
sbb
push
hlt
inc
sbbl
push
rolb
aam
in
pushf
aam
pop
jp
std
stc
jno
cmp
xor
inc
or
cmp
mov
mov
out
lods
test
jb
or
dec
sub
mov
js
cld
fwait
cltd
sarb
stos
pop
jno
xchg
xchg
ficoml
sarl
cmp
imul
jecxz
les
in
out
sub
pminub
and
xchg
leave
sbb
inc
xchg
pop
dec
loope
iret
jl
pop
or
addr16
sub
loop
ret
fbstp
decl
iret
dec
and
test
cmp
jmp
daa
clc
loope
xor
lock
mov
jne
adc
push
dec
mov
pop
cltd
enter
leave
and
mov
cwtl
sbb
pushf
mov
fsubrs
jl
fdivs
xchg
push
mov
push
or
fucomip
mov
cmp
es
push
push
stos
ret
out
mov
dec
dec
xchg
arpl
sub
add
outsb
sbb
ljmp
sbb
cmpsl
mov
push
xorl
fcom
imull
shll
fstpt
ds
pop
shrl
sarl
les
adc
inc
mov
lea
pop
in
icebp
call
mov
push
mov
cmp
testl
test
movsb
mov
jecxz
add
xchg
das
push
mov
or
loope
sub
and
lods
leave
jmp
jo
lods
cs
push
and
pushf
enter
mov
dec
rcr
mov
lock
or
sahf
lret
inc
roll
pop
aad
int3
pop
int
cli
dec
pusha
fidivrs
inc
movl
sbb
jl
insb
add
cltd
inc
in
xchg
out
pop
sarb
fwait
adc
push
les
out
lods
inc
faddl
or
jmp
cwtl
cmpl
jp
lods
and
xlat
call
stos
inc
ret
jns
int3
data16
adc
jb
popa
roll
xor
ss
xor
sub
mov
add
dec
jmp
test
shrb
mov
cmovge
lods
mov
pop
xchg
mov
and
loopne
xor
and
test
rcll
mov
jns
lds
dec
pushf
pop
loope
and
pop
mov
sahf
inc
fs
fistpll
jle
mov
xchg
push
insb
mov
cli
push
mov
je
mov
and
inc
mov
sti
es
hlt
lret
cmc
sti
push
icebp
push
or
stos
test
shlb
sub
pusha
adc
into
das
cwtl
ds
cmp
inc
or
in
int
jnp
movsl
adc
jmp
cmp
sbb
adc
pop
roll
sub
out
stos
inc
jnp
xchg
or
push
addr16
add
xor
and
lea
lret
popa
pop
jb
bound
pop
fsts
lahf
fdivr
sahf
fisttps
aaa
icebp
xor
movsb
insl
mov
lock
call
sub
insb
mov
pop
xchg
add
cmp
sbb
scas
sub
mov
pop
jle
fwait
mov
xchg
dec
xchg
dec
jmp
mov
ljmp
push
mov
sub
fcomp
filds
push
movsl
sub
sahf
sbb
popl
insb
imul
pop
jle
lret
and
jo
push
mov
out
out
jns
out
adcl
mov
rcr
mov
jo
out
mov
pop
xor
adc
pop
inc
push
xchg
stos
fstpl
outsb
ja
cmp
scas
jo
mov
sub
add
inc
mov
call
popf
jecxz
movsl
ds
mov
cld
jns
in
and
cmp
arpl
push
cltd
ficoms
ror
xchg
mov
mov
add
jns
xchg
lods
cmpl
lea
add
lcall
repz
ja
popa
enter
xchg
lods
inc
aas
mov
pop
sub
ja
fs
xchg
aam
push
ret
je
sahf
cmp
push
ret
mov
adcl
ja
mov
loop
in
bound
int
cmpsl
leave
xchg
sahf
fadds
cmpsl
mov
sbb
mov
outsb
leave
cltd
repz
mov
outsl
iret
jbe
shl
std
push
fisttpll
mov
push
lcall
fbld
xor
pop
js
cmpsb
xor
dec
orl
mov
and
jnp
lahf
ds
fsubrs
xchg
sub
xor
xor
mov
stos
les
imul
lods
or
aas
mov
xchg
dec
loop
insl
fidivs
ja
mov
add
inc
mov
into
jae
mov
pop
sub
pop
les
es
idiv
addr16
dec
lcall
loop
jns
dec
pop
ja
sub
inc
in
cld
aam
outsb
cmp
icebp
xchg
pop
aad
jno
test
xchg
es
xchg
adc
nopl
jne
mov
loop
popa
in
xor
xchg
jp
inc
cmp
and
jns
sub
and
jl
push
jmp
add
arpl
dec
mov
and
sub
push
fucom
jge
lods
inc
lea
mov
xchg
xchg
jo
or
jge
xchg
lock
cli
mov
mov
sub
ja
cmp
sbb
in
test
or
out
xor
adc
cs
dec
push
aam
lds
das
xchg
repnz
popf
sbb
in
lods
sub
mov
pop
outsb
dec
add
mov
insl
testb
in
std
pop
push
mov
mov
mov
mov
xor
xchg
out
xor
pop
iret
xor
mov
clc
xchg
ja
jo
cmpsl
fs
dec
dec
xchg
std
mov
daa
imul
cmpsb
shl
cmp
or
jae
hlt
push
sub
int
xchg
mov
add
cmp
pusha
shrl
clc
pop
ja
mov
hlt
xchg
and
lret
jecxz
int3
mov
rcrl
xor
arpl
cmp
int3
push
adc
idivb
or
inc
cli
mov
insl
popf
xor
popa
ja
and
mov
pop
jmp
aas
sub
mov
add
int
imull
ss
adc
inc
push
sbb
xchg
jge
lods
mov
cwtl
xor
dec
aas
fs
dec
adc
pop
cmp
cltd
stos
in
movsl
and
popf
xor
adc
inc
jmp
outsb
mov
sub
mov
es
in
mov
fcmovnb
das
test
popa
mov
adc
lea
repz
and
jg
sar
pop
popf
mov
movsl
jbe
les
fmuls
jnp
test
cmp
sbb
cmp
lret
lret
mulb
lea
std
cli
fisubl
out
fs
dec
xchg
push
in
sti
or
mov
inc
fimuls
test
mov
data16
fwait
nop
fisubrl
out
and
jb
in
cwtl
adc
and
pusha
add
in
in
pop
adc
stc
test
pop
add
pop
ret
lret
push
mov
cld
inc
sbb
push
mov
rorl
out
inc
jg
adc
push
test
and
push
sub
ret
xchg
sar
cmp
mov
mov
xor
popf
pop
add
sub
and
std
dec
pop
push
sti
push
inc
outsl
dec
and
adcl
punpcklbw
ljmp
inc
fiaddl
mov
mov
sti
lret
sbb
jecxz
ja
xchg
outsb
push
js
repz
lods
cmpsl
pusha
add
in
mov
jne
add
pop
scas
fdivrl
shll
je
fnstcw
shrb
imul
scas
pop
sbb
jp
mov
push
pusha
xchg
in
push
jbe
es
ja
pop
addr16
pushf
mov
add
test
and
and
addr16
add
xchg
pop
rol
loop
aaa
sbb
shr
test
shlb
ss
shlb
lret
dec
jno
jo
sar
cli
cmc
cmp
adc
mov
mov
add
add
cli
pop
xchg
push
sbb
sbbl
sub
jne
push
or
sbb
test
push
in
into
dec
flds
call
sbb
fdivs
dec
sbb
dec
mov
mulb
xchg
adc
pop
push
lret
xor
mov
fcomps
adc
and
negb
inc
add
loop
enter
xchg
es
imul
xchg
sbb
xor
testl
cmp
sub
xor
inc
sar
filds
cmp
mov
hlt
dec
push
call
lock
mov
hlt
cld
leave
out
sbb
mulb
jne
filds
mov
loopne
push
mov
xchg
sarb
inc
leave
pop
push
shlb
pop
mov
std
mov
ret
cmp
pop
bound
xor
adc
idivl
mov
loope
mov
pop
ja
jns
lret
inc
add
adc
andb
cwtl
sub
pop
inc
pushf
dec
loopne
gs
jecxz
jnp
dec
cmp
sbb
pop
xchg
jnp
mov
lds
mov
in
lds
push
xchg
pop
gs
mov
sub
push
ret
mov
push
mov
xor
dec
imul
push
pop
sbb
rcrb
xchg
into
fstps
jb
inc
push
hlt
pop
cmp
aam
mov
nop
adc
imul
push
enter
inc
pop
push
sub
int
add
daa
cmpsl
xchg
fisubs
popa
lahf
adc
ret
mov
movsl
cmpb
or
test
adc
mov
inc
cwtl
arpl
andl
loop
jae
test
fcmovbe
cmp
xchg
and
ja
xchg
leave
mov
add
int
fwait
mov
lahf
mov
mov
movsl
mov
push
mov
and
das
pop
out
cmp
and
cmpsb
call
pop
test
pushf
add
arpl
loopne
and
cmp
movb
std
cmc
jg
or
lds
pushf
pop
dec
or
dec
shlb
inc
push
add
push
faddl
mov
or
xchg
xchg
mov
sub
dec
xor
outsl
mov
add
arpl
dec
inc
adc
jl
add
in
loopne
lea
push
push
arpl
xor
shl
sbb
adc
push
cmc
orb
jl
pop
pop
cli
loop
in
dec
popf
jne
loope
in
loop
push
pop
out
adc
xchg
ret
leave
xor
sbb
pop
jl
lret
in
xchg
cli
ja
mov
call
out
sub
subl
or
mov
ljmp
pop
ffreep
sub
jmp
sbb
pop
pop
xchg
jmp
and
mov
push
mov
pop
push
or
mov
push
mov
das
or
adc
ds
enter
and
push
sbb
sbb
loope
lret
lcall
out
dec
jbe
in
mov
add
and
mov
mov
les
ret
pop
fisttpl
mov
xor
mov
imul
lcall
sar
mov
int3
lock
shlb
xchg
push
jne
cli
jb
cwtl
mov
sub
xchg
sbb
xchg
jno
popa
and
push
insb
lcall
xorb
and
lock
out
fists
cmc
mov
outsb
pop
ss
sub
test
ret
add
pop
mov
pop
cltd
lret
leave
and
rolb
dec
ret
mov
hlt
dec
adcl
push
gs
mov
xchg
fsubrl
cmp
jns
out
lahf
insb
sub
stc
dec
out
in
imul
mov
lods
negl
adc
push
je
push
adc
pop
and
mov
mov
into
arpl
sub
test
add
push
mov
sub
les
sti
into
mov
aas
sbb
inc
lea
inc
mov
jne
int3
dec
lret
arpl
sub
add
int
mov
push
push
fdivs
mov
fbld
xchg
rolb
mov
xor
mov
test
mov
daa
cmp
popf
psubd
inc
cli
mov
add
cmp
scas
clc
mov
sti
testb
or
shrb
loop
push
popa
pop
clc
aas
xchg
sbb
rcll
cmc
je
xchg
out
repz
add
hlt
es
cmpb
xchg
push
fisubs
mov
data16
or
fdivr
mov
adcl
aas
mov
xchg
xor
fdivp
nop
test
outsl
dec
adc
mov
mov
jecxz
mov
rcrb
sbb
mov
mov
pop
stc
daa
mov
sub
repz
jb
dec
das
lret
imul
or
sbb
in
xor
xchg
ret
arpl
addb
mov
mov
mov
rorl
loope
pop
mov
pushf
mov
stc
and
sbb
gs
mov
xor
aas
dec
lret
mov
and
es
in
dec
out
dec
sub
fnsave
shlb
and
iret
popf
xor
in
adc
jl
scas
mov
mov
push
add
shlb
jg
stc
jne
dec
jb
cmp
fstpl
ss
sub
sahf
ret
aas
into
xchg
int
and
addr16
cmp
and
fldt
add
and
push
rclb
int
mov
adc
inc
push
into
cmp
aad
pop
and
roll
jg
xchg
xchg
les
fldt
mov
lods
cmp
sbb
jbe
mov
sub
cmp
ljmp
cmpsb
pop
add
inc
addr16
ret
movsl
push
addr16
mov
insl
sub
je
xor
or
ds
aas
mov
idiv
cmc
jb,pn
out
push
out
int
repz
int3
sub
outsl
movsb
pop
and
or
fistpll
sti
sarb
fcoms
add
fwait
jae
push
cmpsb
dec
pushf
dec
mov
sbb
loopne
pop
test
fistpll
xlat
jae
xchg
or
not
arpl
pop
mov
loope
push
mov
push
stos
cmp
pushf
xchg
push
mov
sbb
dec
rorl
lods
stos
jno
jne
dec
movb
adc
cli
clc
daa
cmpsl
mov
mov
pop
popf
xchg
out
test
push
stos
jl
ss
inc
xchg
ds
enter
sbb
int3
push
movsb
mov
fisttps
paddb
rolb
aad
and
out
and
sbb
sub
rcr
pop
mov
lret
pusha
xlat
dec
mov
enter
adc
lahf
insb
jo
data16
gs
inc
fs
mov
mov
test
sbb
sub
push
pop
jl
movsl
ret
mov
cmpb
lds
jecxz
scas
adc
jle
cli
mov
or
dec
cmc
and
mov
xchg
mov
dec
cli
mov
jg
mov
push
xchg
xchg
insb
mov
jns
or
xchg
sbb
std
jae
xchg
test
call
xchg
aaa
pop
out
adc
pop
dec
dec
and
mov
mov
mov
or
mov
jnp
pop
or
repz
ljmp
xchg
xchg
mov
push
test
jmp
cmc
cmp
addr16
adc
jbe
cs
sub
push
shl
ja
out
adc
jbe
or
ret
sarb
push
popa
add
inc
dec
pop
ret
inc
or
mov
mov
bound
test
andl
and
jecxz
nop
mov
jl
inc
inc
adc
in
push
stos
jmp
pop
rol
fs
and
sbb
ds
fwait
out
punpckhdq
inc
cmp
scas
lcall
mov
and
fimull
cmpsb
sbb
inc
xor
lret
aas
jp
mov
rol
lcall
cli
sbb
sub
pop
mov
xchg
inc
cmpsl
push
ds
sarl
in
xchg
rorb
sti
out
mov
fistps
sbb
push
and
dec
bound
push
inc
lods
test
dec
jno
inc
hlt
pushf
sub
sub
dec
lret
mov
adc
sub
lock
lahf
pop
cwtl
mov
sub
mov
test
add
sub
scas
or
loope
scas
cld
insl
push
push
pop
pushf
cld
xchg
pop
add
inc
dec
xchg
mov
dec
push
pop
cs
sarl
push
dec
add
stos
les
outsl
mov
mov
pop
loope
addr16
mov
add
cmpxchg
jno
sbb
jle
pop
les
pop
jmp
dec
loopne
jge
sti
mov
adc
pop
ret
mov
dec
loope
jp
or
ret
aaa
sbb
dec
inc
insl
pop
fnstcw
sub
data16
lods
insb
imul
popa
insl
sbb
std
push
sub
or
xchg
push
push
lds
test
mov
cmpl
sbb
xchg
pop
jle
aam
cld
ret
cli
call
xchg
lods
cmp
push
test
stos
roll
jo
push
xor
mov
inc
cmp
sub
je
adc
daa
mov
adc
dec
loopne
or
jp
sbb
and
pop
imul
test
in
fld
dec
arpl
loope
cmp
and
repnz
jg
mov
jmp
xchg
mov
out
jo
inc
int
cmpsb
fstps
cmpsl
or
adc
cmp
lods
mov
dec
in
iret
push
mov
sub
dec
cmp
pop
jle
mov
push
rolb
jno
inc
adc
and
xchg
xor
xchg
xor
aaa
shll
mov
xor
add
mov
jg
pop
bound
test
popa
dec
adc
subl
push
cltd
cmp
shrb
jp
cmp
loop
aam
test
inc
in
std
hlt
outsb
lea
xlat
outsb
movsl
jne
icebp
sub
sti
movsb
ficoms
outsl
sub
call
outsb
sub
sub
dec
cs
dec
dec
jmp
push
fsubrl
cmpsl
jbe
icebp
xor
pop
notb
jmp
into
and
inc
adc
lods
pushf
mov
sbb
cmp
lahf
pop
push
inc
sbb
bound
out
pop
lock
or
jb
sbb
in
sbb
adc
mov
sbb
pop
pop
mov
cwtl
test
push
mov
lea
in
loop
aad
jns
data16
divps
or
push
mov
sbb
loop
arpl
fs
bound
ljmp
rorl
pop
popa
fdivr
cmc
pop
movsb
xchg
cmp
jne
aas
push
push
mov
repz
clc
fwait
and
dec
lods
js
pop
xor
cmp
cmpb
sbb
out
call
jmp
adc
lret
dec
out
add
in
mov
jecxz
and
and
cmpsl
cld
inc
sbb
xchg
mov
incb
and
cmp
sub
test
and
out
mov
insb
inc
or
nop
push
push
jg
and
popa
sub
xchg
je
icebp
and
mov
push
cmc
or
or
jae
aaa
fistpll
dec
das
dec
push
sub
mov
cld
mov
repnz
fdivrl
sub
ja
in
aad
mov
add
push
pusha
lret
inc
jne
and
push
xor
sub
mov
outsb
cmp
or
jbe
xchg
mov
jl
adc
outsl
frstor
cmpsl
lret
sbb
popf
mov
inc
mov
xor
sub
pop
jg
add
cmc
je
add
mov
fadds
xchg
mov
push
daa
xor
jmp
cmp
addr16
add
sub
into
jbe
dec
sbb
jno
pusha
jge
mov
stos
and
or
or
lret
mov
inc
sub
pop
cld
mov
mov
roll
push
xchg
sbb
push
jl
orl
adc
es
or
mov
test
popf
adc
lock
and
or
sub
pop
mov
pop
pop
sub
daa
insl
pop
test
jno,pn
lods
test
int
mov
sti
fsubs
enter
aaa
cmpsb
pushf
add
mov
cmc
out
stos
lcall
mov
xchg
clc
fstpl
add
pop
cli
rolb
cs
pushf
xor
mov
sti
ja
icebp
xor
jbe
out
mov
std
hlt
cmp
pop
mov
xchg
xorb
xor
out
mov
push
jne
lret
ret
js
pop
mov
mov
push
shll
mov
mov
jmp
add
push
pop
cmp
and
movsb
cwtl
addr16
pushf
push
or
inc
insb
sbb
ljmp
in
loop
xchg
in
into
insl
clc
cwtl
mov
lods
push
repz
inc
cmovbe
fstpl
xor
push
push
popa
jae
and
incl
mov
add
aaa
fsubl
arpl
sbb
xchg
mov
out
mov
fnstcw
scas
inc
fmuls
iret
mov
fs
test
or
jp
lods
mov
mov
mov
out
lcall
adc
xchg
outsl
aas
mov
jnp
dec
push
jg
push
pop
jbe
sahf
stos
sub
fadds
movsb
fadds
jecxz
lock
movsb
int
xchg
dec
movsl
test
add
or
and
ljmp
mov
mov
or
mov
jp
xor
dec
add
sarl
ret
pop
dec
in
hlt
aaa
lcall
pusha
lock
push
scas
mul
and
frstor
and
sbb
dec
insb
inc
imul
es
jnp
xor
mov
adcl
mov
cli
flds
jo
cmp
lcall
je
sub
mov
pop
mov
imul
es
in
rcr
je
xchg
ffree
and
mov
lret
jae
mov
ja
xchg
pop
sbb
and
popa
in
jno
out
daa
mov
movsl
xor
ss
popa
add
int
mov
subb
push
xchg
push
lret
mov
xchg
ljmp
adc
out
rclb
daa
dec
mov
call
push
fwait
sbb
lods
pop
sbb
mov
pop
sbbl
mov
or
push
lahf
inc
sub
sti
cmp
add
int
jp
pop
inc
jge
sub
lds
xor
repnz
ror
push
iret
and
push
repnz
out
testb
mov
les
xchg
out
divl
mov
out
adc
or
and
fsubr
jecxz
cmpsb
data16
jns
ret
mov
xchg
push
sti
rolb
lds
stos
dec
adc
jle
fsubs
stos
cmpsb
outsl
enter
fs
lds
das
fnstsw
lahf
mov
aaa
in
shll
pop
lock
pop
sbb
pop
cmp
dec
dec
lcall
sbb
add
jmp
push
pop
xchg
pop
and
rcll
push
rorb
mov
pop
aaa
jmp
movsb
inc
xor
mov
and
inc
lret
add
out
dec
int3
out
xchg
or
fists
aas
cltd
mov
jo
sbb
cmc
popa
mov
mov
add
mov
pop
rcrb
mov
jne
push
jnp
js
pop
stc
ret
fildll
pop
iret
insl
xorl
jmp
sahf
mov
xor
dec
sti
cmp
sub
xor
scas
lock
jno
in
push
stos
jmp
xor
jno
fisubs
or
mov
and
add
push
jmp
repnz
add
pop
sbb
inc
shrl
int
jnp
pop
sub
pop
add
out
xchg
loope
xor
inc
mov
and
dec
adc
addr16
jmp
shrl
aaa
pop
outsl
push
aaa
cmp
popa
xor
xor
test
pop
adc
fisubrs
sub
and
xchg
insl
and
pop
sub
int
outsb
and
mov
sbb
shr
sti
xor
enter
dec
sub
fadd
xor
mov
nop
fwait
adc
xor
adcb
in
outsb
mov
push
ret
ss
int3
cli
jbe
push
push
fistpl
adc
ja
sbb
into
popf
je
mov
inc
push
mov
inc
mov
fdivrp
mov
mov
aam
aam
pop
in
cmp
pop
outsl
add
xchg
in
fisttpll
jb
inc
mov
dec
inc
shl
mov
jecxz
repz
sbbl
adc
gs
popf
jno
lahf
cmpsb
sub
add
mov
pushf
xor
and
mov
ja
cmp
mov
arpl
or
pop
mov
fsubr
fildll
add
jecxz
cmpsl
shrb
inc
incl
push
lahf
adcl
and
stc
push
loopne
adc
xor
adc
xchg
mov
dec
mov
or
dec
inc
pop
lods
andb
mov
mov
repnz
pop
and
adc
jmp
or
out
inc
mov
pop
cmp
shr
cmp
xchg
test
and
sbb
aas
sub
push
jmp
add
leave
mov
icebp
cmovge
mov
aaa
fstpt
int
sbb
mov
lcall
stos
inc
repnz
nop
incl
push
sahf
in
jle
repz
mov
mov
xlat
mov
nop
pop
sahf
leave
push
sub
push
leave
and
cs
rorl
aad
push
mov
cli
pop
cli
add
pop
in
xchg
dec
out
push
cmp
test
outsb
aas
mov
in
lret
ss
xchg
mov
push
ds
xor
mov
mov
lock
jns
sahf
push
xchg
lds
pop
and
mov
adc
fs
cwtl
or
sahf
call
inc
adc
fs
jno
jo
clc
and
bound
insb
xchg
fsub
push
push
cltd
jbe
in
outsl
mov
icebp
add
in
dec
dec
xchg
movsl
leave
jl
xor
sbb
xlat
jp
jecxz
mov
sub
nopl
mov
mov
mov
and
out
add
je
andb
repnz
mul
jns
ret
push
out
aam
lcall
push
sahf
pusha
icebp
sub
inc
xor
sbb
sbb
cmpsl
mov
aaa
and
cmp
je
and
adc
les
in
addl
xchg
inc
addr16
fs
mov
pushf
add
std
mov
pop
shll
xor
pop
push
and
adc
jo
lret
mov
int
mov
jne
sahf
sub
fists
add
fsubs
and
in
and
mov
add
lret
adc
mov
arpl
ss
jb
addr16
iret
pop
ss
add
mov
loope
cwtl
cmpsl
sub
loop
sub
mov
push
lods
popa
lock
shlb
jb
or
or
push
sub
and
popa
aad
xlat
js
aaa
adc
add
mov
jmp
pop
add
jbe
outsb
pop
mov
jecxz
jmp
sbb
mov
les
sbb
mov
sub
inc
addl
neg
xchg
test
into
adc
push
outsw
adc
jmp
pop
adc
dec
daa
mov
fs
mov
sub
test
cmp
les
dec
nop
and
cld
xor
cmp
xchg
cmp
cltd
xchg
verr
dec
mov
mov
and
pop
jecxz
inc
and
fidivrl
or
lret
in
xchg
outsl
test
sbb
stc
inc
push
mov
mov
repnz
push
cmp
xlat
mov
add
clc
out
int
fisttpl
lcall
les
cmp
out
aam
in
mov
push
repz
out
dec
pushf
lret
subl
lods
test
fimuls
lret
adcb
xchg
jns
add
pop
push
push
scas
jge
lods
ds
das
mov
or
movb
xor
out
add
push
ljmp
ss
cmp
into
add
dec
push
dec
outsb
icebp
pop
xchg
push
cmpsb
pop
inc
shlb
adc
mov
shl
cwtl
push
sub
or
xlat
int3
data16
sub
paddd
out
sti
adc
bound
sahf
es
cmp
cmp
and
cmp
jns
xorl
enter
jle
lea
add
mov
mov
es
ja
xor
push
sub
in
lds
stos
cmp
push
mov
add
pop
mov
fstpt
and
cwtl
int3
pushf
out
jmp
xor
pop
shrl
setg
inc
fadd
outsb
add
xchg
aaa
jmp
pop
mov
shl
lret
jb
out
in
shlb
jg
in
in
and
sbb
push
cmp
add
pusha
xor
mov
jmp
or
orl
jne
jge
int3
push
add
mov
notb
in
nop
mulb
imul
lcall
add
pop
ja
mov
adc
sahf
scas
bound
daa
dec
push
cli
arpl
jo
mov
sub
arpl
and
push
jl
mov
pushl
xor
mov
jb
xor
pop
and
and
inc
cmp
sub
mov
iret
xchg
mov
test
jg
sbb
dec
mov
arpl
outsb
sbb
jne
loopne
out
cmc
adc
outsb
and
xchg
ja
cmp
data16
test
lock
jge
dec
xchg
out
aad
dec
jae
mov
shrl
xchg
mov
clc
insb
dec
fadds
mov
ds
inc
popa
pop
jl
sub
out
mov
gs
fadd
es
mov
shrb
loope
cmp
jno
xor
cwtl
sub
cld
popf
mov
xor
mov
cmc
cmpsb
pop
add
daa
add
xchg
xchg
dec
iret
mov
jmp
cld
ja
test
nop
inc
nop
adc
inc
ret
xchg
jmp
lret
xlat
ds
dec
mov
xor
repnz
add
adc
sbb
lcall
aas
rcl
jne
jg
push
cmp
mov
xchg
pop
add
pop
inc
dec
out
jle
pop
shll
int3
icebp
scas
cmp
pop
movl
ficompl
shlb
cmpsl
cmp
xchg
sbb
aam
stos
push
jp
lea
dec
addb
and
xchg
mov
lods
dec
dec
dec
mov
and
sbb
out
rcrl
daa
or
sbb
shll
cmpl
cmp
xchg
and
sahf
scas
stc
shr
fs
inc
xor
sbb
in
dec
cld
lret
pushf
and
lock
jne
rclb
mov
cmpsb
pop
movsb
push
or
push
loope
outsb
pop
loop
mov
fists
repnz
movsl
inc
movsb
frstor
xchg
jno
shl
mov
and
in
daa
inc
insb
add
div
es
ret
nop
ja
lahf
push
lea
xor
mov
push
inc
lcall
cmp
scas
and
loop
dec
out
dec
rolb
std
mov
ja
pop
sub
jmp
cmp
add
xchg
pop
cvtps2pd
sub
test
jecxz
jne
cmpsb
lds
dec
aam
pop
rorl
cmp
in
cmp
adc
dec
dec
in
enter
sub
data16
cmpsb
leave
loope
jae
push
xchg
jb
ss
shll
xor
jns
mov
xchg
pusha
test
xor
popa
push
daa
pop
sbb
loop
push
pusha
xchg
out
nop
adc
dec
clc
movsb
iret
insb
out
movsb
ja
push
scas
cltd
xchg
mov
xchg
and
in
bound
mov
mov
je
pop
push
jg
mull
sahf
push
arpl
jle
jne
cmp
idivl
adcl
divl
jbe
jno
call
push
insb
packuswb
xchg
push
out
sbb
cltd
scas
test
inc
fiadds
imul
inc
into
lock
aas
sbbl
push
arpl
sti
movsb
xor
sub
xor
mov
loope
nop
mov
xor
or
cltd
ret
push
xchg
sub
popa
inc
cmp
out
push
or
mov
and
sbb
fildll
xor
lods
ja
cmp
dec
arpl
xor
add
cmp
fimuls
mov
mov
loopne
clc
stos
mov
cs
lret
sub
push
lods
sub
scas
mov
es
ret
cmp
or
into
push
cmp
add
adc
repz
fcmovnu
mov
movsb
shl
loopne
or
or
xor
iret
or
mov
sarl
gs
das
dec
jle
into
push
call
xchg
or
shlb
inc
mov
pop
mov
sarb
inc
push
es
sbbl
or
js
add
mov
adc
lods
and
in
rol
mov
gs
mov
xchg
pop
inc
and
test
ret
divb
sub
xlat
pushf
mov
cmp
cmp
in
data16
pusha
sub
push
cmp
push
cmp
cmp
jmp
jmp
cs
jmp
aam
and
gs
ljmp
adc
push
stos
cmp
xor
sub
les
push
mov
mov
movsb
imul
ror
mov
data16
dec
mov
dec
sbb
or
xor
add
lcall
hlt
jmp
call
cwtl
xrelease
jg
sub
sub
push
or
pop
cmp
int
daa
cltd
rcrb
data16
cmpsl
fimuls
pop
pop
push
push
jo
outsb
test
gs
pop
mov
xor
daa
ja
out
test
push
outsl
xchg
scas
jecxz
lods
imul
fcoms
and
xlat
pop
sbb
test
lahf
lcall
jmp
fs
sahf
stos
sarl
mov
orl
test
mov
lahf
ret
test
popl
pavgb
scas
subl
xlat
stos
dec
pop
sbbb
cmp
mov
mov
sbb
add
fnsetpm(287
mov
hlt
imul
or
arpl
sahf
push
xchg
mov
push
aad
xchg
push
jmp
addr16
addb
imul
insb
lods
mov
and
arpl
into
outsl
adc
fwait
int
pop
div
shl
mov
repnz
out
lret
imul
jmp
mov
fwait
sbbl
dec
add
sub
inc
dec
lods
cmc
push
sarl
jp
sti
push
pop
or
icebp
cmpsb
jbe
cwtl
rcrl
mov
pop
lds
icebp
mov
test
imul
push
in
fisubrl
ret
je
mov
xchg
cmp
imul
stc
xor
adc
cmp
push
movsl
push
sub
sbb
and
insl
mov
push
mov
mov
jl
into
adc
inc
xor
mov
adc
or
cld
mov
inc
in
or
addr16
sub
stos
enter
je
adc
mov
out
mov
loop
rcrb
push
mov
cmp
jle
pop
mov
mov
sub
je
jno
mov
dec
dec
outsb
push
cmp
push
xchg
clc
mov
xchg
les
xorl
pop
lods
xchg
pop
out
dec
test
push
loopne
arpl
sbb
cmp
cmpsb
testl
mov
jg
idiv
pop
and
test
lock
xorl
add
push
sub
fdivs
in
cmp
push
xor
addl
jp
addr16
dec
cmp
sub
imul
xor
maxps
out
fmull
cmp
xchg
in
js
xor
dec
outsb
dec
xchg
clc
ffreep
fnstsw
xlat
mov
decl
dec
cli
jecxz
xchg
lods
ja
lods
lea
add
or
mov
int
adc
lds
xchg
ret
or
jecxz
xchg
dec
push
sbb
mov
stos
clc
cmp
bound
or
mov
mov
in
decb
cli
clc
jecxz
cmpsb
daa
cmp
mov
shll
mov
pusha
mov
bound
or
enter
xor
sub
jns
cmp
test
mov
sbb
iret
adc
dec
cwtl
dec
outsb
and
xchg
push
mov
push
dec
sbb
jbe
aam
addr16
test
adc
fld
mov
lock
dec
mov
cli
mov
xchg
les
out
pop
cld
adc
sbb
mov
sub
pop
in
loop
std
out
xchg
out
jne
lea
jl
iret
lock
loop
xchg
mov
xchg
repz
mov
or
stos
std
add
jns
xor
daa
push
mov
ret
and
jno
movsl
or
mov
mov
add
push
popf
daa
jl
test
daa
out
pop
push
xor
push
push
jno
std
aaa
jo
sti
andl
je
mov
adc
shr
insb
and
and
jle
hlt
xchg
stos
or
clc
pushf
cld
pusha
lret
inc
out
dec
std
pusha
add
push
shll
gs
add
das
adc
or
jge,pt
push
dec
je
push
cld
stc
lret
mov
aam
sub
xor
leave
add
or
jae
arpl
adc
mov
inc
sbb
mov
andb
pusha
lcall
jne
pop
mov
cmc
jnp
jno
lret
mov
aam
jl
jno
or
and
daa
inc
into
gs
cltd
dec
aaa
jae,pn
add
and
int3
sub
cltd
out
xor
add
testb
adc
push
adcb
pop
ret
sub
xlat
push
lahf
mov
adc
mov
jl
idivb
inc
dec
and
mov
add
or
loop
call
imul
xchg
jno
mov
or
mov
mov
adc
and
out
or
aas
xor
ljmp
lea
cmp
add
gs
js
ss
insb
out
and
mov
fistps
mov
leave
cltd
data16
add
notb
sbbl
jp
dec
push
mov
insb
lret
push
push
sti
flds
add
dec
lods
pop
jmp
subl
mov
dec
das
pop
aaa
cmc
mov
mov
mov
cmp
xor
out
testb
sub
push
loop
dec
fcomip
sub
jb
rolb
lock
out
inc
pop
inc
cmpsb
jns
in
jge
push
cmpsb
sub
push
xchg
mov
aaa
loopne
fwait
loopne
mov
add
insb
mov
scas
mov
mov
in
jnp
mov
mov
push
xchg
lods
fbstp
jg
push
cli
pop
lret
dec
daa
ficoms
push
jge
dec
mov
lret
les
outsl
sbb
xor
push
xor
xor
icebp
lock
in
sub
sbb
shlb
jle
mov
out
std
out
in
test
or
ljmp
out
sub
ret
mov
ja
movb
mov
jge
jo
add
adc
rorb
pop
mov
leave
add
aam
mov
imulb
cmpsb
pop
ds
jge
stc
mov
mov
popl
pop
fstpl
aad
inc
loop
test
pop
push
in
xor
rclb
dec
mov
mov
push
ds
idivl
pop
sbbb
cld
jo
sub
aaa
popf
cli
mov
in
or
mov
sub
into
or
or
and
addl
push
pushf
push
fldcw
leave
cmpsb
xchg
jb
cmc
mov
mov
std
sbb
jp
std
pop
imulb
pop
xchg
xor
sub
cld
inc
rorb
push
outsb
inc
icebp
rcr
pop
rcrl
aaa
and
dec
and
mov
dec
fbstp
pop
test
jmp
and
cmp
lret
aas
or
fisubl
and
push
adcl
mov
shll
xchg
sti
stos
jge
mov
mov
lds
leave
push
andl
xor
cmp
lods
mov
flds
inc
hlt
orl
mov
scas
cmp
popa
jbe
jmp
push
into
xlat
out
movsl
cmpb
xor
and
xchg
jge
vcmpss
aaa
sahf
idivl
xor
shrl
cmp
sbb
pop
imul
fnsave
fwait
in
in
adc
add
sar
pop
sbb
pop
mov
push
in
cmpsb
ljmp
jnp
dec
mov
lea
xchg
not
sbb
sbb
pop
leave
inc
stos
or
cmp
lahf
insb
xchg
out
into
cmp
sbb
pop
or
cmp
imul
adc
sub
adc
push
cs
in
leave
outsl
arpl
xchg
js
sti
add
arpl
outsb
repnz
pop
scas
and
inc
les
mov
add
imul
jnp
add
imul
xor
pop
mov
or
mov
subl
xchg
scas
or
jle
inc
jbe
sub
xchg
mov
adc
aad
inc
cmpl
mul
pop
imul
faddl
cltd
xchg
mov
fucomip
jno
mov
clc
sbb
lods
push
add
sarl
cwtl
mov
xchg
pop
cmpsb
arpl
push
das
outsb
cmpsb
sub
adcb
popf
add
push
or
jns
jle
scas
adc
inc
cli
dec
repz
add
loopne
sbb
inc
outsb
jno
inc
std
push
jo
test
sbb
dec
dec
or
jno
push
adc
push
call
mov
dec
push
dec
and
mov
jge
push
and
cld
dec
xor
jge
xchg
lods
testb
arpl
inc
rcrb
je
cmp
adcb
mov
cmp
aas
cltd
aas
ja
push
in
fld
mov
and
imul
cltd
pop
in
push
pop
and
js
negb
xchg
repnz
fstpt
adc
mov
dec
cmp
hlt
dec
inc
mov
insb
and
xchg
iret
xchg
cmpsl
sbb
or
ja
cmp
xor
mov
dec
mov
xor
mov
mov
mov
in
imul
ds
bound
jo
fs
popf
dec
dec
loope
sub
scas
jb
or
sub
mov
sbb
xchg
mov
stos
mov
push
movb
out
mov
dec
ds
loopne
and
add
pop
roll
aad
aam
mov
or
jmp
sahf
loop
mov
and
cmc
or
add
sti
scas
adc
push
inc
popa
mov
or
les
jle
mov
ja
inc
mov
adc
repnz
add
cmp
xchg
mov
ss
int
fidivrl
push
xchg
dec
sub
fcompl
lret
or
pop
in
mov
or
inc
add
es
mov
imul
andl
aad
bound
mov
mov
add
imul
jns
jecxz
std
adc
aaa
add
jbe
dec
popa
mov
pusha
cmp
ds
push
lods
inc
mov
push
xor
sahf
mov
push
fadd
nop
inc
inc
pop
test
es
mov
sbb
adc
inc
in
jle
pop
pop
cmp
arpl
cmpsb
sbb
adc
pop
add
add
cmpsb
imul
loopne
repnz
das
xchg
les
push
in
or
bnd
in
or
add
lahf
ret
push
sub
and
stc
fsubrs
cmp
pusha
and
negb
cmpsb
pop
and
mov
mov
iret
xchg
jnp
ds
mov
call
mov
fisttps
jae
scas
fneni(8087
pop
mov
lret
pop
pop
or
push
inc
subl
xor
in
cmp
adc
lcall
test
repnz
ret
mov
sbb
aas
lahf
mov
add
in
push
sar
and
fsts
mov
add
aas
stc
xchg
in
cmp
mov
pusha
cmpsb
xorl
pop
push
in
rcrl
icebp
cmp
jp
sbb
scas
jae
cwtl
insl
push
fldcw
sbbl
dec
add
mov
fcmovnbe
sahf
fldl
das
mov
inc
mov
sbb
and
lcall
xchg
dec
push
sti
pusha
xor
or
pop
inc
ds
out
sbb
mov
icebp
and
push
adc
mov
mov
pop
inc
dec
push
sub
in
jno
jns
nop
ss
mov
subl
aaa
movsl
in
shl
mov
mov
adc
in
lahf
js
lret
sbb
sbbl
inc
mov
ds
and
dec
mov
pushf
shll
pop
scas
js
clc
inc
call
dec
xor
inc
andl
js
stos
loop
adc
jmp
push
dec
movl
nop
mov
out
push
or
scas
mov
ret
pop
sbb
mov
ror
jmp
cmp
lahf
icebp
cmp
jge
jmp
popa
push
pop
push
or
mov
jl
inc
mov
nop
popa
movsb
cmp
push
incb
je
movsb
dec
cmc
stos
jp
in
test
cli
xchg
loop
js
xor
mov
aam
pop
test
add
inc
lret
aam
push
mov
clc
in
call
in
and
xchg
cwtl
cwtl
jg
icebp
sub
jmp
or
xor
lcall
mov
pop
sbb
into
inc
and
sbb
nop
pop
lods
js
cmp
push
cltd
jns
fwait
pop
dec
xchg
add
popa
pop
adcb
push
cmc
sub
test
sbb
enter
pop
mov
nop
bound
or
iret
mov
insb
mov
out
jns
xchg
fsubr
lock
sub
lret
out
mov
mov
push
add
popf
sbb
sub
xchg
adc
and
xchg
mov
cmp
dec
movsb
rolb
movsb
cwtl
mov
arpl
mov
xchg
mov
xchg
cmp
pop
xchg
sarl
and
push
cwtl
xchg
es
rol
mov
int3
xchg
dec
and
sbb
inc
inc
add
inc
sub
pop
xlat
push
rorb
adc
adc
jae
xor
or
or
icebp
pop
xchg
in
lock
xchg
sahf
sahf
mov
push
sub
push
sbb
int3
leave
mov
sbb
sbb
aas
std
adc
enter
aas
dec
divl
inc
shr
cld
into
scas
or
push
push
adc
repnz
jge
sbb
push
ret
dec
pop
dec
cmp
xchg
push
aas
ret
insb
mov
push
cli
adc
adc
mov
enter
leave
pop
dec
pushf
cmp
mov
int3
jno
mov
adc
enter
inc
roll
mov
dec
lock
fisttps
lea
fwait
test
imul
mov
je
xchg
sub
addr16
push
dec
push
add
jns
xchg
sbb
cmp
mov
fdivr
or
scas
gs
mov
mov
add
jo
call
jae
ljmp
adc
xor
add
pop
push
sarb
ret
pop
or
hlt
fisubl
jnp
je
sbb
cmpsl
dec
negl
int
cwtl
mov
push
fdivr
jle
or
aas
pop
push
inc
or
clc
push
jae
ljmp
cmc
xor
rcrb
sti
shl
mov
push
xchg
mov
les
mov
xchg
dec
loopne
in
mov
test
push
out
fbld
xorb
adc
into
or
mov
and
daa
clc
adc
jl
daa
sub
sub
jmp
mov
mov
ljmp
popf
or
test
xor
stos
jg
stc
mov
punpcklbw
mov
xchg
sbb
xor
mov
rcrl
sbb
inc
out
pop
cmp
lret
sar
xor
rcr
xor
sahf
xor
mov
mov
adc
jecxz
fcmovb
jns
dec
sub
pop
lret
add
je
dec
mov
lds
push
cmp
and
out
xor
push
or
pop
imul
adc
jae
sub
mov
rcll
push
lds
mov
dec
adc
mov
fwait
aaa
inc
jmp
jno
push
mov
sti
or
rolb
test
inc
mov
sbb
or
sbb
dec
sub
or
shlb
mov
mov
push
xor
jl
outsb
pop
shl
add
xchg
dec
test
push
movsb
lcall
mov
mov
mov
ret
ret
xchg
shrb
jb
push
sti
push
fdivl
jns
inc
lds
roll
pop
push
add
sbb
add
add
cmp
mov
cmpsb
sub
dec
into
mov
xchg
ja
lahf
inc
and
cmc
pusha
or
dec
popa
in
shrl
orb
aaa
shl
push
mov
inc
xor
push
or
out
fidivrs
jno
cld
pop
and
sbb
mov
enter
stos
mov
cmpsb
pop
test
popf
test
mov
outsb
loop
test
aad
test
dec
xor
mov
sahf
or
fcoms
cmp
lret
dec
icebp
lock
out
dec
movsl
mov
pop
or
xchg
fs
mov
mov
mov
mov
addl
inc
insl
es
xchg
insl
mov
mov
push
lock
xor
mov
icebp
movsb
jg
mov
sub
call
int
stos
int
add
mov
sbb
jge
mov
aam
mov
jecxz
pop
arpl
jl
clc
lcall
adc
or
adc
clc
add
ljmp
sbb
xor
and
cs
pusha
mov
add
call
iret
pop
stos
test
mov
repnz
sub
mov
xchg
das
sahf
addl
jns
cmp
jns
pushf
insb
imul
mov
or
cmp
test
pop
mov
adc
pop
movsb
pop
mov
cmpsl
fs
pop
lahf
sub
fidivs
adc
inc
arpl
cld
bound
pop
push
inc
xchg
outsl
mov
sub
xchg
ficomps
push
push
fwait
mov
cltd
jmp
nop
mov
sub
add
cltd
pop
push
ficoms
shrl
jae
cwtl
adc
add
cmp
mov
xchg
push
sahf
and
cmpsb
dec
cmp
xchg
pop
xchg
xor
test
cs
loope,pt
jno
xchg
movsb
stos
mov
outsb
test
pop
push
insl
dec
inc
add
mov
lds
fldenv
mov
push
jno
mov
aas
xor
or
xchg
mov
or
dec
jbe
nop
xor
out
incl
stc
xchg
cmpsl
push
push
daa
std
push
orb
sbb
cmp
sbb
inc
xor
daa
xchg
cmp
addr16
mov
sub
aas
rolb
js
daa
sbb
push
lods
sub
pop
cmc
push
mov
or
mov
add
push
inc
or
sbb
shll
cmp
push
jo
xchg
into
bound
rcrl
xchg
cmp
imul
or
cli
push
jb
push
xor
imul
push
loope
push
sti
adc
mov
or
xor
push
xor
js
rorl
imul
push
add
push
sbb
repnz
or
repz
or
scas
stos
bound
jge
dec
popa
test
fnop
test
push
clc
cltd
push
loop
push
cli
mov
inc
movsb
dec
out
dec
jnp
push
iret
ds
stos
movb
js
addr16
mov
ja
std
push
jp
push
int3
mov
xchg
mov
pop
adc
mov
dec
addr16
mov
add
shrl
sbb
bound
sub
les
stos
imul
mov
sub
stos
pop
pushf
iret
inc
dec
and
sahf
sbb
and
cwtl
add
xor
mov
push
push
inc
xchg
andl
fidivrs
cs
inc
addr16
pop
push
pop
lret
fdivrs
sbb
jno
in
mov
ret
mov
aam
push
mov
iret
in
xchg
push
inc
fs
xchg
mov
mov
mov
inc
jns
ja
stos
jae
callw
sbb
mov
and
mov
sub
fs
sbb
cmp
cmpxchg
jo
push
jle
data16
jmp
adc
jecxz
dec
jne
push
mov
or
in
int
and
jb
cld
scas
repnz
lcall
sub
push
clc
adc
daa
cmp
lods
das
loop
push
bound
mov
pop
sub
test
inc
fidivl
sub
adc
cwtl
daa
inc
sub
mov
aas
mov
jge
sysexit
pop
scas
mov
push
push
cmp
pop
in
fidivl
out
push
and
js
insl
pop
movsb
fdivrl
fidivrs
leave
mov
and
sbbl
roll
bound
xor
jg
sbb
or
loop
data16
insb
dec
dec
fs
outsb
sbb
es
out
cmp
adc
popf
dec
ss
fldt
rorl
inc
movsb
adc
out
inc
inc
in
and
jle
adc
pop
insl
jp
in
inc
out
or
add
xchg
dec
jnp
cmpl
add
sbb
dec
push
mov
mov
gs
xor
dec
iret
pop
outsl
in
enter
mov
sar
cmp
repz
lcall
adc
ja
rcrl
jg
pop
mov
xchg
cmp
xor
repz
je
iret
fisttpll
mov
dec
idivb
jae
pop
push
sbb
xor
test
std
fcos
dec
aas
mov
fdivp
jno
jge
pop
mov
js
daa
xchg
das
fisubs
pop
sub
xchg
or
mov
into
mov
xchg
cmp
in
in
adc
xlat
sahf
enter
mov
repz
jo
cmpsb
stos
jp
or
mul
fstpl
mov
sbb
bound
gs
bnd
mov
push
push
push
sub
repz
mov
pop
dec
adc
push
stos
imul
xor
ja
mov
int3
lahf
cmpb
test
jb
dec
inc
push
cld
insl
mov
pushf
pop
inc
push
mov
push
es
push
push
or
pusha
cs
popa
or
dec
add
sbb
loop
aam
add
xchg
adc
xchg
push
add
jae
outsb
cmp
xor
or
idiv
xor
mov
ja
pop
jle
xchg
insl
mov
rclb
pop
mov
sbb
call
xchg
nop
sahf
iret
mov
mov
int3
push
icebp
cmp
xchg
movsb
lret
imul
gs
std
lahf
leave
adc
cmpsl
in
dec
popf
in
gs
shlb
or
adc
fcoml
clc
adc
stos
push
je
aad
sub
aad
xchg
lock
les
mov
dec
cmp
cmp
popa
arpl
mov
pop
into
icebp
mov
fildl
mov
jmp
sub
mov
adc
pop
lock
jmp
mov
mov
sub
adc
ret
sbb
nop
add
ljmp
sbb
sbb
es
jbe
loopne
mov
cld
push
loopne
push
cmp
repz
adc
and
jg
mov
out
fnstcw
cmovge
ficomps
or
or
test
ja
or
cld
push
lahf
and
rcr
aam
cmp
add
add
js
test
lret
dec
mov
pop
xchg
jle
cltd
push
ffree
cmp
mov
and
pop
mov
mov
mov
sub
dec
mov
pop
push
mov
hlt
popf
lds
ret
push
movsb
dec
clc
into
cs
adc
adc
xchg
and
testb
dec
inc
or
pushf
arpl
push
mov
inc
call
xchg
movsl
mov
gs
xlat
in
sub
mov
mov
push
in
cmp
xchg
sbb
hlt
sbb
scas
pop
int3
in
aas
icebp
es
pop
mov
push
pop
iret
xchg
push
xchg
add
dec
fildl
add
pmullw
mov
mov
js
add
bound
pop
bound
mov
stos
or
jp
xor
mov
xchg
repnz
inc
rcrb
or
arpl
xor
push
test
ret
leave
xchg
fisubl
jecxz
out
aam
jnp
push
imul
fsin
mov
ljmp
pop
mov
jp
jae
mov
ret
adc
lods
cmp
cwtl
adc
outsl
cltd
xor
mov
adc
in
or
jle
dec
leave
jecxz
xchg
xor
adc
jbe
imul
sub
addr16
insl
mov
aam
frstor
icebp
push
scas
int3
mov
mov
mov
inc
into
pop
ds
jmp
sbb
pop
test
mov
test
gs
pop
xor
negb
insb
or
mov
xchg
push
or
out
sahf
sahf
mov
stc
add
mov
pop
out
push
xor
xchg
xchg
lea
cltd
mov
dec
adc
adc
xchg
mov
fs
ss
xor
jns
rorb
fistpl
clc
shrl
sub
fcmovnu
pop
cmpsb
mov
mov
mov
out
or
and
xor
sbbb
lret
test
movsl
cmpsl
adc
cmpsb
orl
pushf
adc
imul
cmpsb
sbbb
mov
inc
or
rorl
cmp
xchg
fs
mov
inc
aaa
xor
aam
xor
and
int
pop
mov
adc
in
pop
sub
xorl
mov
or
adc
repnz
sub
rcrb
cmp
jbe
roll
or
add
sub
pop
mov
hlt
jge
mov
pushf
dec
mov
and
imul
negb
or
jo
sti
imul
mov
out
mov
adc
loop
movsb
sti
dec
bound
cli
pop
jp
mov
adc
xor
scas
popa
mov
or
add
call
mov
into
sbb
daa
dec
mov
jno
not
cmp
mov
pop
cmpsb
xchg
ret
insl
loop
push
lods
fs
hlt
pop
fldl2t
lcall
icebp
aad
xchg
loope
lahf
das
cmpl
nop
stc
ror
sti
clc
mov
int3
mov
push
xchg
das
mov
or
daa
xchg
std
mov
sub
pop
arpl
call
pop
jmp
bound
jb
pop
jae
bound
mov
pusha
or
maxps
sub
and
cli
xor
xchg
mov
inc
leave
incb
push
and
test
jecxz
loope
mov
loop,pn
mov
mov
pop
dec
mov
xlat
pop
sti
jle
adc
leave
arpl
push
xchg
fwait
jecxz
xchg
xor
and
adc
in
test
hlt
and
and
inc
and
shll
in
cmp
dec
cmp
jp
sub
fs
stos
es
cmp
jl
cmp
sub
lahf
add
mov
jl
je
lret
dec
movsl
inc
out
jae
cmp
pop
push
inc
out
icebp
and
mov
gs
mov
in
mov
pop
test
cmp
pusha
fcoml
and
fsubs
jae
icebp
add
mov
or
hlt
or
jno
pop
aas
pop
fmuls
addr16
and
je
or
push
pop
inc
rol
add
bound
ficompl
cmp
jnp
mov
cmp
rorb
push
jmp
int3
adc
shr
mov
out
adc
xor
mov
jp
hlt
mov
dec
sti
mov
in
sub
jecxz
aad
xchg
lds
mov
scas
leave
leave
lcall
sub
pop
aaa
mov
adc
or
orb
xchg
jns
adc
lahf
repz
xchg
pusha
or
sbb
pop
fnstsw
add
pop
push
and
rcl
jmp
stos
sub
sbbb
insb
cmp
mov
xor
adc
mov
lret
xchg
mov
icebp
cmp
or
rorb
loopne
test
shlb
ljmp
mov
mov
pop
out
scas
sbb
pop
outsl
fwait
dec
mov
lea
xchg
sbb
mov
popf
or
or
xchg
repz
xchg
xchg
xor
stos
push
fwait
loopne
icebp
in
mov
and
daa
push
cmpsl
xor
mov
jmp
xchg
xor
sub
fisubs
gs
sbb
xor
jecxz
aas
inc
cmpsb
scas
push
fwait
test
jne
sbb
xchg
add
cmp
lods
imul
push
in
dec
cmp
mov
movsl
or
mov
inc
loop
push
mov
xchg
ja
fs
or
sub
and
mov
and
stos
push
jns
lods
sub
mov
scas
movsl
xor
or
bound
jmp
iret
dec
shll
int
cli
add
je
mov
push
stos
stos
fimuls
and
fdivr
xor
cmpsl
pop
inc
pop
push
xor
add
xlat
pop
mov
icebp
je
inc
daa
nop
sub
notl
cmp
sarb
aam
xor
inc
push
or
pushf
out
pop
pop
mov
push
std
in
sub
dec
loope
cmp
stos
xchg
xor
xchg
sahf
mov
pop
inc
pop
shll
out
lods
sbb
xor
dec
sbb
xchg
test
add
roll
push
dec
repnz
movswl
cmp
inc
cmc
cmc
lds
icebp
mov
pushl
jbe
xlat
cmpb
pop
das
stos
cmp
int3
mov
insb
rcr
inc
nop
iret
aas
gs
addr16
imul
adc
fs
and
popa
lea
shrl
lret
sti
aad
mov
and
negb
filds
mov
scas
es
test
cmp
mov
mov
imul
in
cmp
push
shl
cli
push
fisubrs
dec
testl
or
stos
ret
sbb
push
lods
inc
mov
inc
mov
xchg
sarb
jge
mov
xchg
sbb
iret
hlt
or
rcl
addr16
fs
popf
mov
mov
lods
js
popl
aad
mov
lods
into
dec
in
fmull
jp
jne
pop
xor
ret
mov
cmp
xchg
and
inc
shlb
iret
in
inc
xor
inc
xor
or
mov
mov
mov
mov
dec
cmpsb
adc
xor
rcr
clc
ljmp
sti
out
push
lds
cltd
punpckhbw
cmp
and
sub
incl
add
xor
into
daa
mov
add
jle
lods
scas
pushf
pop
cli
out
sub
pop
xor
sbb
adc
or
sbb
xor
ret
xchg
mov
pusha
leave
popf
cmovg
lea
mov
loope
xchg
iret
pop
daa
ja
mov
cmp
mov
push
int3
xchg
pop
mov
pop
repz
int3
mov
sahf
pop
les
add
xchg
or
push
xchg
cmp
dec
into
psubq
lret
mov
mov
pop
stos
mov
sti
loopne
cli
shlb
in
pushf
mov
push
iret
sbb
enter
dec
push
jecxz
jns
push
hlt
jp
jns
jne
sbb
popa
sub
sbb
adc
out
mov
xchg
xor
cwtl
mov
stos
bound
gs
mov
das
push
sub
sbb
mov
sub
pop
sub
pop
xor
mov
push
sbb
pop
add
xchg
cwtl
pop
mov
mov
xchg
xchg
dec
xor
in
xlat
jmp
push
in
dec
nop
das
lds
jle
stc
or
out
test
xor
lcall
ja
movsb
pop
bound
pop
sub
je
sbb
out
imul
iret
lods
jnp
mov
lret
push
loop
out
mov
sarb
mov
sbb
ss
mov
mov
mov
subb
out
mov
cltd
imulb
cmp
rorb
or
popf
dec
push
xchg
jecxz
jle
xchg
in
add
inc
mov
inc
xorb
mov
mov
enter
adc
sub
aad
xchg
or
es
pop
or
int3
lods
cmpsb
xchg
add
pop
pop
insl
dec
hlt
insb
mov
mov
adc
ljmp
iret
mov
fs
ud0
lods
stos
mov
frstor
test
sub
std
add
dec
cmpsb
loope
dec
dec
sub
jb
pop
out
out
inc
divl
clc
lcall
mov
fwait
mov
push
xchg
sub
adcl
pusha
mov
push
dec
cmp
leave
xchg
pop
cmovg
cmp
pop
add
out
inc
orl
lock
insb
bound
insb
icebp
push
jbe
dec
xor
sahf
test
clc
leave
in
arpl
sbb
fimull
add
mov
mov
jnp
cmp
xor
mov
fidivrs
jb
inc
and
fs
mov
pop
loop
sub
ds
ds
out
push
xchg
mov
stc
std
jecxz
push
jbe
lret
in
gs
jmp
js
pop
xchg
popf
sahf
scas
mov
inc
sub
rorl
cmc
ss
xchg
daa
sbb
pop
sub
lods
testl
arpl
out
shlb
mov
add
cmpsl
mov
inc
adc
rorl
jmp
fstps
adc
sbb
sub
movsb
fists
cmpsb
adc
mov
ds
test
mov
cmp
jmp
arpl
rclb
ret
jnp
and
cmp
lret
mov
inc
in
inc
add
adc
out
into
cmp
mov
dec
int
sbbl
inc
sbb
push
insl
fdivrp
popf
das
das
jl
add
and
mov
or
outsl
cmp
sub
jp
xchg
inc
mov
pusha
sahf
loop
test
repnz
rol
pusha
and
les
popa
fcmovb
push
fiadds
inc
fdivrl
ja
jge
jmp
jecxz
test
push
fadd
cmp
dec
mov
cmp
fmuls
cmp
cli
cli
ret
cmpsl
or
push
adc
push
lcall
jg
pop
mov
add
push
sar
xlat
or
sbb
mov
mov
xchg
das
ja
mov
out
mov
es
mov
popa
arpl
or
loop
les
adc
in
mov
xor
and
sbb
adc
add
addr16
btr
call
and
push
int3
cmpl
mov
adc
mov
add
dec
clc
lcall
leave
dec
mov
scas
adcl
mov
and
in
arpl
fcomip
adc
insb
cmp
mov
mov
pop
sti
pop
push
scas
inc
repz
cmpsl
cmpsl
push
mov
xlat
and
pop
and
mov
jne
mov
hlt
cmpsb
lods
sub
mov
nop
add
ljmp
jge
add
push
pop
and
iret
sbb
cmp
mov
dec
jp
inc
movsl
das
popf
addr16
fsubrs
rorb
addr16
aam
roll
or
std
icebp
sub
outsb
inc
mov
data16
xchg
es
pop
jne
adc
fld
mov
inc
loop
push
out
xor
mov
and
jb
ljmp
push
jb
ret
xor
xchg
rol
push
loop
pop
sahf
popf
push
xchg
insl
mov
fcompl
dec
shll
int
dec
jbe
sub
ja
call
adc
and
sbb
call
notl
fisttpll
mov
bound
cli
push
gs
xor
test
adc
fdivr
and
jns
cmc
xlat
push
dec
inc
add
repz
test
mov
jne
or
mov
add
mov
leave
push
insb
dec
push
cmp
hlt
jp
mov
jb
fucomi
dec
jge
fs
sub
mov
sbbl
jle
pushf
or
out
in
pop
int
push
and
out
sbb
cli
xchg
sub
and
xchg
movsl
loopne
ret
bound
imulb
dec
hlt
loopne
sub
mov
cs
loopne
mov
rolb
mov
and
xchg
fwait
cmp
push
iret
mov
popa
lea
insl
out
inc
jmp
dec
inc
pushf
pop
and
mov
icebp
jle
cmp
popa
leave
xor
adc
aad
test
adc
push
pusha
cwtl
sarb
es
and
movsb
enter
imul
loopne
out
mov
neg
shll
or
jno
fnstsw
sbb
inc
insb
call
outsl
movsl
imul
mov
cltd
lds
inc
pop
mov
movsb
addl
jne
cmp
cltd
arpl
ja
adc
mov
xchg
push
sar
fisubrl
jl
fidivrs
cmc
aas
roll
jle
adcb
push
les
int3
push
push
sbbl
aam
shr
in
mov
jecxz
lods
dec
movsl
push
repz
mov
mov
xor
test
ret
sbb
outsl
outsb
adc
xor
mov
inc
xchg
cs
mov
pop
or
mov
out
out
xchg
lcall
mov
push
notl
pushf
cs
mov
pusha
and
inc
popa
pop
xlat
add
jno
mov
icebp
mov
push
mov
xchg
popf
xchg
mov
adc
ljmp
cmp
mov
fisubrs
aas
sbb
aas
adc
std
add
pop
clc
inc
mov
dec
outsl
jmp
hlt
xchg
inc
lds
loopne
mov
cmp
sbb
and
rclb
cmp
cmp
push
and
nop
je
adc
xor
aas
push
repz
xchg
adc
or
or
mov
fs
xorb
fldenv
inc
lods
pop
or
cmpsb
repnz
loope
out
pop
fisubs
push
jg
cmp
or
data16
ljmp
popa
hlt
and
sbbl
jnp
fadds
mov
outsl
mov
sbb
ss
inc
xchg
test
adc
fidivrs
cmc
jns
ss
test
stos
mov
in
sbb
arpl
test
adc
loop
es
add
scas
push
aad
jl
ret
and
push
jbe
int3
aam
push
icebp
jae
xchg
mov
xor
sbb
mov
inc
mov
test
mov
add
test
or
mov
jmp
xchg
mov
sti
fdivrl
push
mov
xchg
mov
pop
negl
cmp
mov
pop
inc
jg
push
sbb
bound
sarl
sbb
mov
push
roll
adc
nop
cmp
gs
dec
sbb
enter
repz
lret
fnstsw
hlt
mov
call
mov
leave
je
in
in
push
cmpsb
lea
push
lock
cltd
xlat
mov
xchg
pop
mov
lock
adc
adc
ja
mov
ljmp
dec
mov
mov
jle
push
loop
xchg
add
shl
popf
stos
pop
outsb
lds
cmc
cli
mov
xchg
mov
pushf
clc
aas
mov
cwtl
rcl
add
jle
popa
adc
mov
test
mov
push
pop
adc
push
inc
dec
std
mov
mov
mov
int3
call
call
rcr
test
movsl
shlb
add
ja
mov
inc
into
add
dec
scas
mov
outsb
and
imul
push
push
call
insl
insb
fwait
cs
push
push
inc
rcr
inc
mov
icebp
es
fs
adc
shlb
mov
mov
and
jnp
das
aam
dec
add
in
mov
ret
xorb
call
cltd
push
push
jae
and
in
fildll
es
pushf
mov
dec
xchg
mov
mov
int
cmp
and
pop
or
lcall
movsb
inc
out
adc
les
lods
sarl
cs
sarb
ret
mov
push
or
sub
stos
imul
idivl
fisttpl
or
inc
rclb
repnz
rol
shll
push
xorl
fildll
js
lret
movsb
jg
jle
into
pop
lret
enter
inc
jne
scas
pop
test
jg
ja
pushf
push
stos
movsl
stos
cmp
and
out
repz
aam
and
movsl
clc
xchg
add
xchg
fstp
imul
shrb
loopne
push
xor
dec
xchg
rol
gs
aam
mov
in
cs
mov
pop
out
add
addr16
daa
push
mov
adc
jg
cmp
loop
ja
add
sub
es
aad
sbb
xor
mov
and
or
and
loope
push
ret
jg
lea
test
add
add
cmpsl
add
js
dec
push
sbb
shlb
pop
loopne
push
jge
add
mov
pop
test
mov
jbe
xor
test
shrb
push
pop
dec
add
jns
mov
add
sbb
push
mov
dec
lock
and
ljmp
push
loope
sti
ret
push
mov
adc
ljmp
fdivrs
mov
in
inc
push
xor
ror
jbe
add
mov
jnp
jnp
mov
cld
sbb
xchg
in
nop
loop
mov
adc
mov
xchg
and
call
push
sub
jg
rclb
push
ret
out
mov
jb
jmp
push
mov
xchg
xor
jg
push
rolb
stos
push
mov
lds
bound
dec
xchg
popa
fisttps
or
in
xor
rcrl
pusha
jle
cmp
pop
in
and
xchg
cmp
mov
dec
mov
push
loope
cmpsb
xchg
out
into
scas
jp
xor
mov
adc
cmpsl
insl
jl
pop
stc
xchg
int
mov
fucompp
outsl
and
xchg
arpl
push
jl
xchg
rorl
push
jne
fisubl
negb
fdivl
jbe
lahf
push
mov
in
fucomi
pop
mov
shll
out
and
mov
xchg
fdivrs
lds
or
sub
fiadds
shrb
or
lods
and
lcall
loope
popa
mov
xchg
shlb
std
mov
cli
sbb
jns
mov
lret
push
rolb
jmp
mov
mov
xor
mov
frstor
adc
subb
mov
data16
pop
xor
sub
stc
lods
test
xor
xor
push
xchg
and
or
aas
push
xor
push
shll
pushf
add
ret
out
fcom
rcrl
jo
push
cmp
dec
xorl
dec
push
inc
fisttpll
jo
inc
repz
push
mov
adc
xor
mov
imull
lret
rorl
lea
and
sti
jne
mov
fadds
roll
xchg
sbb
pop
dec
sarb
xor
pop
addr16
loope
movsb
pop
sti
imull
out
scas
dec
push
stos
push
xchg
das
jecxz
pop
cmpsl
in
adc
inc
push
inc
add
out
movsb
jae
xchg
pop
out
lret
mov
cmp
js
sub
fldl
mov
sbb
clc
sbb
push
insl
mov
xor
mov
xchg
push
push
in
out
daa
mov
xchg
pop
mov
or
mov
addr16
and
push
mov
mov
scas
jbe
push
jne
sub
jbe
lea
mov
or
aas
imul
push
and
shlb
imul
mov
pop
pop
mov
or
add
lcall
shll
sub
and
and
cmp
mov
rcrl
xor
movsl
mov
xchg
gs
pop
popa
jb
into
movsl
data16
cmp
or
leave
leave
lret
mov
pop
mov
repz
sub
mov
pop
mov
lcall
mov
fsubl
cmp
imul
pusha
pop
dec
leave
clc
inc
ss
dec
mov
and
dec
aam
stos
stos
scas
jecxz
adc
test
xor
dec
cmp
insl
arpl
inc
mov
out
jb
je
mov
cmpsl
push
test
sub
mov
adc
les
xchg
xchg
es
je
in
dec
jns
jb
inc
add
sub
shrb
cmp
adc
daa
ret
repnz
mov
stc
repz
xchg
xor
sarl
addb
icebp
pop
sbb
jmp
out
aam
hlt
xchg
push
add
movsl
ss
scas
jns
and
lods
lds
xor
mov
mov
leave
mov
lcall
xchg
ret
outsb
rcll
jo
cmp
add
push
imull
leave
push
pusha
lock
sbb
rcr
shl
xchg
and
or
mov
std
out
mov
lea
mov
mov
push
mov
cmp
in
adc
sub
stos
mov
repz
test
movb
jmp
push
xlat
int3
iret
ja
jp
xlat
sub
inc
jbe
push
mov
mov
fmul
rcrb
lcall
mov
sbb
ljmp
sahf
pushf
ret
fsub
scas
push
pop
daa
lods
push
or
fstps
mov
push
jnp
push
sti
stos
mov
ljmp
fwait
jg
or
or
les
aaa
mov
and
cmp
sets
inc
lock
andl
mov
js
pop
push
inc
jg
xchg
mov
mov
xlat
cmp
push
test
inc
push
adc
xchg
push
arpl
cmpsl
xor
fnsave
das
arpl
sbb
fists
iret
sti
cwtl
push
cmpsl
jb
fs
movsl
adc
inc
mov
mov
sbb
ss
imul
fnsave
out
mov
popa
ret
popf
push
mov
icebp
inc
and
xchg
popa
mov
sub
mov
cmpb
cmp
mov
push
cmp
lret
inc
inc
or
lret
stos
fisubrl
or
jmp
jle
imul
movsb
iret
insl
iret
mov
clc
sub
and
scas
add
pop
outsb
mov
lret
inc
sub
pop
call
cs
sarl
aas
mov
sub
ljmp
out
jo
mov
fmuls
sub
and
cld
loopne
shl
mov
jmp
pop
sub
adc
dec
test
cli
xor
xchg
loop
fsubrs
faddp
fldt
psraw
sbb
or
push
cli
in
stc
call
jmp
in
mov
mov
bound
not
loopne
jbe
xchg
imul
lds
mov
mov
push
lods
les
and
fimull
inc
addr16
mov
dec
mov
aaa
xchg
lea
mov
jae
test
mov
aad
cmp
movsl
cltd
xor
outsl
push
stc
cmp
in
jp
into
jg
xstore-rng
cmpsl
test
jae
jno
xchg
mov
push
jb
add
incb
fdivr
and
pop
push
push
cmpsl
xor
pop
sub
push
xorl
repz
imul
add
pop
jmp
stos
jle
lods
test
push
push
ja
xor
fcmovnb
and
cmp
movsl
fiaddl
mov
and
inc
push
test
movsb
xor
dec
mov
mov
and
scas
xchg
fisubrl
mov
ds
fists
sbb
int
sbb
repz
pop
int
test
lret
xchg
packuswb
mov
lret
inc
out
ret
lcall
fisubs
push
pop
and
jnp
and
jg
push
adc
sahf
ss
aas
mov
aaa
mov
sahf
sub
inc
shlb
stos
icebp
fsubs
mov
and
adc
jnp
adcb
jbe
filds
ds
push
xchg
cli
loop
xchg
pop
mov
mov
js
mov
fldt
sbb
push
cmpsb
dec
xor
pusha
sub
arpl
pop
call
xor
sub
fcoms
jnp
insb
adc
adc
and
inc
jno
repnz
dec
push
sub
je
jg
or
cmpsl
lock
sbb
xrelease
pop
pushf
rcrl
mov
pop
adc
sbb
popf
push
add
xchg
or
push
scas
lds
sbb
and
adc
sti
shrl
or
push
sub
cmp
lret
insb
xor
outsl
fs
repnz
data16
movlps
push
push
sbb
scas
add
sbb
inc
es
pusha
lsl
loopne
add
pusha
cmpsl
popa
adc
or
fsub
arpl
xorl
lock
sbb
in
sub
xlat
xor
jno
stc
and
mov
movsb
push
pop
xchg
jl
faddl
pop
clc
jno
dec
adc
adcl
pop
ret
aam
pop
xchg
int
fidivs
mov
sti
movsl
push
icebp
cmp
jl
xchg
loope
int
lcall
clc
aaa
mov
loope
mov
or
aam
pop
dec
and
or
jecxz
cmc
cmp
repnz
jbe
push
test
dec
add
fdivrs
int
sub
push
test
inc
loop
daa
xor
xchg
mov
inc
aad
in
pop
sub
sub
xor
jo
mov
push
dec
popa
in
aam
cld
mov
xchg
into
or
pop
push
xor
push
mov
hlt
sbb
xchg
push
push
aas
in
mov
dec
std
adc
sbb
aad
es
cwtl
xchg
dec
and
mov
xor
jb
test
mov
and
popa
push
adc
push
jbe
nop
jb
leave
lret
cmp
mov
push
out
dec
test
xor
xor
mov
inc
sub
hlt
dec
test
cmpsb
mov
into
lahf
call
xor
and
push
jne
fldl
mov
test
in
cmpsb
pusha
adc
fsub
sub
sar
cli
inc
icebp
xorl
mov
fsub
push
lods
and
or
pushf
cli
lods
pop
test
xlat
popa
mov
mov
cwtl
push
decb
sarl
cmp
or
adc
ret
sahf
lret
lock
repnz
pop
mov
cmp
xchg
repz
jns
xor
or
fsubs
ret
sarb
dec
push
lds
es
pop
scas
sub
movsl
out
ud1
icebp
ja
adc
xor
sbb
add
dec
cli
test
fisubrs
lock
xchg
sahf
loop
dec
fimuls
lahf
cmc
inc
cmp
clc
xor
pop
dec
daa
inc
sbb
in
jno
jbe
testl
sub
sbb
fistpl
inc
adc
inc
mov
inc
adcl
pusha
push
dec
aam
cwtl
and
out
jmp
push
pusha
pop
call
jnp
push
je
jp
adcl
test
mov
pop
sbb
jo
loope
or
fs
mov
and
add
stc
stos
cwtl
push
jne
stos
xor
mov
inc
in
fistpl
popa
mov
aad
mov
lods
mov
jno
xchg
lods
mov
movaps
std
mov
and
and
xor
popa
mov
mov
xchg
int3
cmp
mov
or
cmp
es
jns
pop
out
mov
pop
and
mov
jns
jle
cs
push
js,pt
fistl
outsb
cmp
xor
mov
jae
mov
mov
leave
cwtl
mov
lds
fsubrl
out
xor
push
bound
xlat
jb
filds
sub
fistpll
push
adc
loopne
jno
insb
lock
lock
mov
scas
xor
sahf
sub
arpl
xchg
loopne
inc
jnp
test
stc
or
cli
add
mov
and
ljmp
jo
add
add
insl
adc
mov
cmp
icebp
xchg
or
out
test
pusha
cwtl
pop
bound
adc
sbb
lods
lcall
xchg
jl
pop
outsb
dec
mov
addr16
cmp
jb
fcom
mov
pop
and
sbb
int3
xor
cli
jo
iret
loopne
movsb
push
xchg
insb
arpl
addr16
cmp
js
mov
stos
cmpsb
dec
sub
push
adc
scas
or
xchg
fsubrp
cmp
cld
ret
jae
xchg
mov
mov
mov
adcl
push
test
and
sahf
cmp
rcl
mov
icebp
repz
test
mov
inc
idivb
sahf
and
inc
mov
fs
sbb
sahf
xchg
xchg
pop
jns
xchg
movsl
mov
shrl
out
leave
sbb
adc
rcl
dec
push
pop
clc
xlat
dec
cmpsb
fsub
lret
sbb
inc
repnz
or
data16
mov
xor
movsb
inc
cmp
loope
ret
rorb
and
xchg
xchg
dec
mov
cmp
push
sbb
imul
sti
cmpsb
rcrb
cmpsb
out
mov
leave
inc
lahf
cs
test
mov
outsb
negl
in
sbb
or
push
inc
push
mov
call
aad
shl
loop
sub
add
pop
or
fdivr
fs
add
push
sub
dec
adc
adc
sub
and
fwait
mov
mov
data16
sbb
leave
add
mov
jnp
sbb
sbb
mov
loop
cmpsl
and
arpl
fsubl
repnz
jnp
adc
or
push
add
xchg
sti
shl
mull
pop
fwait
je
jmp
ljmp
push
int
sar
pop
cld
sbb
nop
popf
ss
xor
pop
pop
dec
and
cmp
push
mov
scas
xor
idivb
repz
pop
xchg
xor
pop
aas
and
pop
pop
push
out
push
pop
xor
add
imul
adc
loopne
sbb
faddl
cmpsl
add
mov
lret
mov
push
cmpb
rcl
push
lock
cmp
cmp
mov
roll
pushl
mov
mov
sbb
lret
push
jns
mov
arpl
sub
into
mov
int
into
pop
jbe
pop
int
mov
mov
adc
mov
lock
outsl
out
and
movsl
call
clc
xor
jne
loopne
das
dec
arpl
pusha
push
jmp
cwtl
dec
mov
imull
cmp
int3
repnz
mov
xchg
or
cmpsb
xor
cs
in
pushf
hlt
lods
xor
mov
sbb
mov
sahf
xor
test
das
jecxz
pop
into
jb
lret
mov
rcrb
or
inc
sbb
mov
xchg
repnz
or
dec
fistpll
fildll
pop
xchg
push
sub
push
or
orl
pushf
or
cmp
xchg
enter
imul
jp
jbe
cld
scas
jns
mov
in
icebp
repz
push
xor
in
enter
loope
data16
mov
sub
jecxz
test
cld
mov
cmp
pop
insb
ret
mov
testb
lcall
adc
add
pop
arpl
mov
loopne
adc
roll
lods
xlat
jge
inc
cmpsb
push
add
jmp
out
xlat
shlb
int3
sub
mov
test
lds
fldcw
inc
lahf
aas
addr16
adcb
jge
aam
jae
dec
out
arpl
nop
sub
lea
cmc
ja
sbb
std
sub
mov
fcompl
sub
xchg
pop
bsr
dec
rcll
jbe
inc
mov
movsb
mov
aam
mov
orb
lret
dec
sub
adc
cmp
adc
rclb
mov
push
aas
ds
test
in
xchg
mov
inc
movsl
adc
out
xchg
push
pushl
cmp
dec
jns
out
mov
arpl
mov
test
loop
les
mov
sub
sbb
push
lods
lcall
add
ret
xchg
add
shll
pop
push
jno
adc
lock
jecxz
sub
out
push
movsl
fs
xchg
ret
bswap
mov
add
inc
adc
add
add
ret
add
push
inc
push
aam
popa
xchg
adc
dec
jmp
bound
add
insl
ss
pushf
inc
pop
or
mov
daa
pop
sub
std
xchg
pop
sub
sbb
sbb
notl
es
mov
es
pop
jle
jl
fdivrs
mov
pop
frstor
push
mov
nop
loopne
mov
imul
arpl
out
cmp
jno
push
scas
arpl
cmp
dec
int3
xor
mov
push
mov
inc
fcmovu
clc
and
adc
mov
imul
daa
xchg
push
inc
fstpt
cmp
mov
sub
inc
cmp
pop
mov
sbb
dec
adcb
cltd
fistps
or
mov
arpl
push
pop
dec
stos
sub
jmp
jo
stc
daa
loope
cmpsb
popf
lahf
and
push
imul
andb
jo
xchg
int3
push
fiaddl
loopne
pop
in
xchg
adc
nop
mov
stos
mov
pusha
cs
cmp
and
push
mov
sbb
xchg
mov
cmp
leave
repz
mov
popf
push
inc
in
or
inc
pop
adc
push
jmp
scas
jp
xor
iret
add
inc
add
je
mov
test
sbb
in
in
jge
outsl
sub
jecxz
xchg
popf
add
sub
pop
bound
push
sub
xor
outsl
inc
outsl
xchg
push
jg
rorl
inc
add
and
push
fsubr
incl
sub
sti
std
les
pop
mov
mov
mov
hlt
inc
push
cmpsb
popf
push
int
mov
cli
addr16
orl
gs
lcall
lea
pop
data16
xchg
sarl
test
cld
and
dec
fcmovnbe
in
cli
not
clc
rorb
popa
shl
lret
repz
sub
scas
jae
mov
dec
push
cltd
in
test
leave
repz
jecxz
mov
in
cmpsl
or
mov
jge
dec
loopne
cwtl
pusha
jns
push
pop
pop
jns
and
fwait
into
mov
mov
nop
cltd
cli
movsw
popf
cltd
js
fidivs
stc
test
sbb
sbb
and
push
pushf
adc
leave
cmp
cmpsb
fmulp
je
aad
mov
shlb
xchg
loopne
cmp
push
mov
repnz
test
scas
stos
push
mov
in
hlt
inc
xchg
add
jno
pop
mov
adc
js
jb
loopne
mov
jecxz
insl
pop
mov
sbb
scas
imul
xor
repnz
mov
sti
fs
mov
lret
or
inc
sbb
mov
test
pop
andb
xchg
insl
jo
sbb
dec
pop
push
cmp
ds
in
fisubrl
rol
ret
jnp
adc
std
outsl
dec
xchg
or
leave
push
dec
and
lret
imul
incl
fiaddl
pop
lret
leave
dec
mov
outsb
mov
cmpsl
ss
inc
jne
sub
xchg
ud1
xor
push
and
push
addl
shrb
mov
sbb
lds
sbb
shrb
inc
fiaddl
mov
push
inc
neg
add
mov
frstor
cli
rorb
arpl
stc
jecxz
shll
mov
imul
xlat
pop
out
cld
lahf
out
sub
dec
stos
jo
mov
xor
mov
mov
das
addl
jcxz
xchg
repnz
dec
fsubs
popf
cwtl
movsl
scas
inc
mov
inc
jbe
xor
cmp
int3
xor
scas
int
loopne
insl
dec
or
cltd
rorb
pop
loope
push
scas
mov
push
fsts
cs
pushf
mov
dec
xlat
pop
adc
pop
xchg
and
pop
sbb
rcrb
xor
ja
rorb
je
jne
lcall
xchg
pop
cmp
out
mov
add
pop
push
pop
xchg
shlb
and
push
cmp
pop
popa
dec
push
add
and
jle
mov
cmp
arpl
stos
inc
xchg
mov
xor
cmp
jno
push
lahf
inc
dec
fidivrs
sar
scas
std
mov
gs
fisttpll
stc
pop
xchg
adc
push
jg
cli
addb
lods
mov
cmp
mov
inc
xchg
inc
mov
loopne
shrl
xchg
lea
push
dec
inc
xchg
adc
adc
or
mov
or
daa
mov
dec
xor
xchg
lret
sahf
push
es
add
and
jl
shlb
test
lock
js
lahf
mov
jmp
shll
lret
ret
insl
enter
sub
mov
jnp
cmp
int3
scas
icebp
dec
cmp
mov
mov
push
daa
adc
loop
add
pop
clc
adc
sub
sbb
pushf
stos
shlb
adc
inc
cmp
push
fwait
loopne
xor
aad
xchg
sahf
shr
xchg
sbb
push
and
add
int3
mov
insb
test
je
mov
pop
xlat
dec
ljmp
movsb
fnstsw
dec
jns
in
jb
push
xchg
iret
jp
cli
adc
jmp
mov
inc
aam
pop
enter
gs
lret
stos
ficomps
scas
mov
xorl
movsl
push
sbb
outsl
xlat
cmp
ja
xor
shrl
mov
mov
pusha
sbb
push
mov
dec
mov
nop
mov
adc
dec
call
icebp
out
insl
jle
mov
jnp
add
outsl
xchg
push
jne
repnz
jno
into
sbb
push
jbe
iret
cs
pop
js
pushf
dec
pop
mov
pop
es
test
push
notl
jae
rol
xor
fidivl
push
cltd
mov
subl
test
mov
popf
or
cmp
cmp
xchg
jecxz
ret
pop
or
jmp
or
sbb
mov
stos
loope
sub
sti
mov
pop
xlat
test
setge
fidivrl
rclb
aas
ds
scas
into
push
cwtl
mov
insb
mov
adc
xor
xor
mov
inc
fistps
adc
std
in
cmp
and
cli
or
adc
xchg
dec
cmp
xor
mov
pusha
fldl
scas
or
lods
xchg
jmp
jb
jno
shrb
nop
xor
lock
sbb
mulb
out
mov
cmp
push
push
adc
shll
in
dec
jmp
ljmp
inc
adc
stc
pusha
xor
xor
shl
push
add
imul
ret
and
mov
scas
or
push
cmpsb
aas
scas
or
mull
cli
inc
jo
sub
outsl
jmp
mov
mov
inc
mov
scas
aam
jge
popa
sub
cmc
or
and
pop
jbe
aaa
sbb
fwait
jp
mov
lock
jns
pushl
xchg
lock
pop
and
jns
int3
cmp
push
pop
or
pop
ljmp
mov
movl
jmp
dec
pop
dec
push
jg
mov
aas
arpl
pushf
cld
xor
jne
xchg
cwtl
jmp
shlb
cltd
cltd
sub
mov
aad
sub
pop
nop
push
pop
or
jge
or
and
clc
jge
mov
mov
lods
push
add
pop
js
pop
sbb
mull
fistps
adc
jb
mov
mov
repz
das
cmp
mov
mov
mov
mov
pop
movsb
and
cmpsb
sbb
mov
xchg
pop
repz
in
inc
and
test
scas
test
push
adc
xchg
jge
jl
ss
int3
pusha
dec
mov
pushf
icebp
mov
loope
call
add
cmpsl
adc
into
adc
cwtl
jecxz
nop
es
data16
loop
mov
stos
mov
mov
jnp
cmpsb
into
in
xchg
add
pop
jo
mov
lahf
or
and
push
pop
xor
rolb
xor
mov
fsubr
int
jmp
out
insb
jle
mov
lret
or
and
xor
adc
sub
aas
jbe
lcall
push
or
fxch
jle
inc
push
js
dec
fsubrs
fisttps
dec
or
inc
add
js
mov
stos
test
add
lods
add
push
es
iret
push
push
pusha
in
inc
insl
iret
pop
dec
popa
insl
shrl
jl
loopne
repz
dec
inc
dec
rcrb
mov
sub
adc
data16
sub
pop
adc
push
sbb
or
sti
push
cmp
inc
fistpl
xchg
stos
or
leave
ror
rcll
sti
addl
shll
jge
daa
sbb
jne
inc
sbb
cmp
mov
lea
sub
xchg
jecxz
cmp
nop
xchg
jnp
imul
lret
fwait
push
ja
xor
out
out
loopne
push
je
es
and
pushf
enter
repz
leave
mov
inc
xchg
subl
daa
xchg
fiadds
scas
jg
ja
incb
pop
add
ljmp
push
pop
lret
mov
enter
test
imul
adc
push
lds
lods
stc
inc
adcl
jl
int
popf
ret
mov
adc
sbb
dec
xchg
sub
push
xchg
xor
fidivl
dec
cld
call
int
mov
jle
aam
sbb
inc
xor
cld
sarl
inc
jo
mov
aas
leave
pusha
out
cmp
mov
lahf
pop
out
cmc
sbb
lods
cmp
lea
push
jmp
fdivs
divb
fs
test
paddusb
cmc
xchg
int
jo
addl
cmpl
insb
jle
in
inc
pop
cli
mov
daa
inc
adc
fnstsw
rorb
jl
mov
dec
jmp
add
xor
scas
mov
mov
push
rcr
inc
aad
call
popa
inc
stos
fwait
inc
push
push
xchg
lods
xchg
push
add
cli
jmp
sbb
push
fldcw
loopne
sti
mov
sbb
subl
outsl
mov
lahf
xchg
cli
sub
mov
addr16
out
lahf
ret
insb
call
movsb
lret
jmp
inc
hlt
lret
cli
push
sub
jns
xchg
sub
mov
adc
inc
imul
pop
or
sub
or
xor
hlt
aas
es
lret
push
aaa
push
movsl
movsl
int3
push
add
ja
lahf
mov
ret
mov
and
mov
lahf
mov
fildll
jns
lds
sbb
mov
icebp
movsl
mov
data16
rorb
cmp
aas
inc
and
je
add
mov
jmp
mov
mov
dec
pop
mov
les
mov
mov
push
sub
sti
xor
sbb
push
xchg
aaa
ret
mov
mov
cmp
jecxz
cmpsb
sbb
mov
push
mov
mov
mov
jbe
xchg
repnz
and
pop
sbb
dec
pop
add
insl
cmp
outsl
mov
jbe
mov
fs
sbb
fs
xchg
mull
push
mov
push
ss
sub
jecxz
mov
iret
das
mov
int3
add
ds
insb
cs
mov
stos
adc
xorb
adc
testb
pop
dec
and
jae
push
das
dec
jg
cmpsb
pop
mov
inc
pop
fcom
sbb
mov
xchg
out
stos
insl
or
out
sub
mov
push
stos
in
call
sbb
aad
into
xor
lret
pop
aad
repz
mov
cld
std
popf
mov
jmp
popa
hlt
push
mov
adc
lea
mov
xchg
push
inc
cmc
fcmovbe
pop
jl
sbb
cmp
outsl
lods
mov
scas
in
jb
xchg
pop
imul
out
or
push
and
aad
sub
cmp
test
and
xchg
mov
cmp
test
aam
xchg
xor
pushf
jnp
cmc
cs
cmp
mov
fsubrl
cmp
pushl
lcall
subb
imul
xchg
pop
dec
pop
mov
fimull
push
xchg
lret
fstpl
xchg
and
push
mov
adc
ja
mov
pop
out
push
push
cli
push
ljmp
fwait
into
dec
es
into
in
outsl
xor
scas
aaa
mov
ds
call
sub
push
sbb
cli
sub
gs
sbb
insb
lock
sub
and
sub
shl
aad
fwait
ljmp
jge
or
sub
in
pop
or
and
jnp
push
pushf
fmul
sbb
std
push
jecxz
xchg
enter
adc
push
lahf
push
orb
push
sub
call
xor
cmp
sub
rolb
in
shlb
fs
mov
pushf
rep
dec
dec
stos
or
adc
decl
dec
xchg
int3
sub
mov
jbe
xchg
xchg
xor
js
xchg
enter
xchg
fsubp
and
jb
adc
add
insl
stc
inc
add
jl
jae
adc
mov
push
xchg
enter
imul
sti
mov
ds
xchg
add
cmp
pop
insl
inc
sbb
xchg
mov
jle
pusha
out
inc
jmp
cmpsl
into
mov
xchg
fnsave
jmp
cs
out
add
dec
inc
lret
hlt
adc
enter
testl
jne
sbb
lahf
jne
sbb
test
clc
es
mov
inc
mov
loope
pop
adc
push
mov
cmp
rcrl
incl
mov
cmp
adcb
or
cmp
ret
jg
hlt
fiadds
out
mov
insl
adc
cmp
adc
adc
push
test
test
shlb
xor
out
xor
xlat
dec
cwtl
xchg
faddl
or
insb
in
loope
jecxz
jbe
enter
jne
notb
mov
jecxz
mov
out
imul
lds
or
ss
cmp
enter
sarb
ja
mov
loop
jg
fstl
adc
pop
cmp
push
imul
fwait
leave
pop
pop
sub
fwait
mov
xchg
cltd
pop
cld
xlat
das
xlat
and
shll
mov
xchg
cmp
ja
cs
cmp
xor
shlb
and
push
lea
or
enter
imul
cwtl
stc
xchg
sub
inc
loope
inc
mov
call
pop
xor
shl
movsl
pop
xchg
bound
sti
adc
arpl
jae
repnz
push
gs
sahf
mov
jae
push
in
fs
test
stos
or
sahf
hlt
fdivl
sahf
add
lock
js
stc
ljmp
cmpsb
cld
loope
lret
sub
repnz
mov
addr16
push
in
sub
js
mov
aad
into
lret
lods
enter
out
rorb
pop
outsl
push
fnstsw
mov
fimuls
mov
int3
xor
cld
lret
jb
je
scas
pop
aam
xor
mov
pop
jge
aam
cli
aam
inc
test
test
cmp
inc
hlt
cld
imul
bound
ret
mov
mov
mov
cmp
sti
pop
adc
icebp
call
out
pop
xor
fcmovbe
mov
fnsave
adc
aaa
test
xor
cmpsb
pushf
jns
cwtl
cmpsb
shr
das
mov
lret
cltd
sbb
lds
inc
mov
leave
std
ret
or
mov
stos
mov
aas
adc
mov
stos
out
mov
push
pop
clc
xchg
mulb
les
testb
push
mov
push
insb
mov
push
xor
cld
cli
stos
fwait
clc
mov
dec
jp
aad
shrl
movsl
mov
cmc
sbb
insb
insl
gs
dec
dec
rcr
pop
movsl
loope
fists
dec
mov
cld
cs
and
mov
sarb
sub
or
imul
repnz
repnz
jl
push
and
and
adc
jmp
xor
jg
pop
xchg
pop
insl
or
mov
lods
fldl
imul
ss
je
loope
cmpsb
movsl
lods
fidivrs
iret
sub
jp
sub
inc
cmc
sbb
inc
leave
mov
loop
enter
push
cld
mov
shll
out
jae
test
dec
out
xor
inc
sti
test
jg
sub
xor
sub
lods
cmovs
cli
push
or
loope
mov
rorl
in
sub
xlat
aaa
pop
outsl
jae
test
push
cmp
inc
sub
sbb
mov
inc
adc
fldl
nop
sti
leave
add
or
aaa
fcmovu
sub
sahf
mov
popf
mov
push
xor
scas
and
sub
pusha
sbb
adc
cmc
leave
sbb
mov
lret
sti
std
jge
pop
push
adcl
push
scas
insl
mov
cld
fstpl
int
sub
bound
scas
push
push
cmp
sahf
cli
fstps
push
int
pop
inc
jmp
leave
bound
fucomi
mov
jnp
mov
xchg
and
jbe
inc
xor
push
xor
scas
sub
andl
fidivrs
not
dec
das
jbe
aas
dec
filds
lret
fninit
cmc
mov
ja
repz
mov
push
scas
je
mov
xor
push
mov
cmp
das
cmc
out
into
call
orl
cwtl
xor
xchg
int
arpl
dec
cmp
stos
lods
aad
xchg
pop
inc
insb
mov
pop
lock
scas
clc
xor
xchg
fmul
inc
and
pop
in
shll
mov
mov
les
fstpl
push
sahf
icebp
adc
cmp
sbb
mov
mov
xor
mov
pop
popf
add
jbe
adc
iret
or
int
fldenv
inc
fnop
mov
int3
or
das
mov
jns
and
daa
leave
fisttpl
mov
dec
adc
fwait
sub
test
cmp
cmpb
imul
or
adc
push
xchg
add
inc
push
dec
mov
mov
mov
movb
cmp
lcall
lcall
sbb
dec
pop
test
or
fdivrs
imul
or
fldcw
xchg
jae
sub
pop
dec
jns
ds
xchg
jp
stc
int
pusha
out
sub
call
pop
inc
dec
fdivrs
sbb
mov
cltd
xorb
ds
cs
jecxz
jg
or
sbb
sti
aas
fcompl
lret
sar
mov
adc
sbb
jcxz
and
test
cmp
mov
push
jnp
pop
xchg
subb
xchg
mov
je
mov
nop
jne
sbb
add
inc
shll
adc
cs
push
mov
and
pop
jnp
add
pop
fs
and
mov
mov
sbb
xor
rorb
hlt
ret
int
loope
fs
xchg
inc
cmc
adcl
stos
out
clc
pushf
jle
fwait
shlb
dec
inc
lret
in
mov
scas
xchg
bound
sar
repnz
je
adc
jnp
es
xor
aas
mov
jg
or
mov
out
sub
add
pop
les
jne
push
inc
xchg
out
enter
and
add
sbb
or
scas
inc
scas
loopne
mov
fbld
dec
adc
or
and
arpl
xchg
fdivl
mov
xor
xor
pop
out
add
rorl
add
add
lock
xchg
pop
ss
leave
push
icebp
ret
push
popa
int3
push
dec
cmp
test
outsl
add
mov
cltd
pop
add
mov
imul
outsl
shll
int
mov
test
out
shl
and
add
jb
pop
ss
xor
lcall
adc
mov
in
mov
xchg
fnstenv
lods
inc
push
add
pop
adc
cmp
add
jle
pop
jle
push
mov
inc
xchg
xor
xchg
outsb
xor
cltd
xchg
adc
sub
mulb
out
imul
lea
cmp
aam
sbb
sahf
movntps
iret
add
loopne
fnstsw
clc
mov
lret
stos
addr16
mov
push
xchg
cwtl
imul
push
inc
push
xchg
test
dec
xchg
mov
je
dec
loop
inc
into
mov
push
xchg
mov
lret
popf
dec
repz
pop
nop
xchg
loop
test
clc
enter
cli
out
xor
mov
xlat
imul
xchg
test
out
xorb
jle
rcrl
arpl
in
out
mov
mov
popa
xchg
in
addr16
inc
add
in
fsubrs
adc
cmp
popf
dec
popf
ss
insl
dec
xlat
aas
push
cmp
dec
sbb
pop
int3
push
adc
bound
inc
je
push
adc
push
xchg
push
dec
clc
cwtl
pop
stc
xchg
rolb
mov
scas
lcall
ds
jle
mov
in
enter
mov
add
leave
add
dec
pop
xorl
notl
mov
push
loopne
in
shll
jne
repnz
xlat
les
cwtl
pop
ss
ss
add
jmp
mov
iret
dec
and
xor
sbb
in
mov
or
lahf
cmp
es
aad
mov
mov
mov
lahf
das
mov
pop
test
jb
or
push
mov
mov
xchg
iret
scas
jb
xchg
cmp
aam
rorl
and
mov
jne
dec
mul
mov
incb
xor
or
lods
loope
scas
mov
cwtl
and
jge
aad
flds
fwait
ljmp
imul
push
cltd
inc
pop
fidivl
mov
insb
or
sbb
in
or
stos
loop
adcb
mov
dec
sbb
push
pop
loopne
mov
push
adc
pop
sbb
add
mov
mov
xor
dec
inc
dec
aad
clc
arpl
push
xchg
lea
jmp
in
fcomp
pushf
push
jb
arpl
scas
movsl
test
arpl
fdivrp
mov
xchg
inc
roll
shrb
ss
pushw
pop
std
jne
jnp
push
int3
test
test
jecxz
test
or
repz
fs
and
push
mov
je
loop
insb
or
cmp
lret
mov
mov
push
in
lret
or
test
scas
dec
leave
insb
scas
mov
push
bound
jnp
aas
fadds
negl
sahf
jp
add
xor
fnsave
or
xchg
rolb
cld
outsb
test
jl
dec
or
push
mov
lods
push
loope
adc
std
shll
mov
sub
ja
nop
dec
rcl
and
dec
lods
ret
pop
fadd
shll
cs
fs
mov
mov
loope
or
daa
mov
nop
inc
cltd
sbb
push
push
xor
out
jno
inc
dec
mov
xlat
les
pop
loop
xchg
testb
or
jno
xchg
and
dec
rclb
jmp
nop
rcll
cwtl
xchg
outsl
cmpsb
jl
leave
iret
jnp
ds
setp
adc
mov
aaa
jo
fs
stos
aas
inc
push
mov
test
test
mov
xchg
lahf
ret
pop
jae
adcl
mov
in
pop
test
mov
loopne
dec
pop
icebp
out
jmp
lds
data16
loopne
push
cmp
lods
cwtl
subl
xor
pop
sub
push
cmpb
sub
aaa
mov
mov
push
and
add
jo
dec
imul
repz
dec
out
and
inc
pop
das
inc
inc
jae
and
dec
aad
mov
pop
imul
jae
sar
push
inc
pop
add
insb
addb
add
jge
cmp
push
mov
arpl
gs
ret
out
aas
inc
add
sbb
mov
aad
push
mov
xchg
rcrl
add
mov
int3
inc
arpl
xchg
xchg
divb
gs
adc
mov
jae
insl
fldcw
cmp
inc
add
lret
gs
sti
push
lahf
cmpsl
pop
mov
pop
xchg
rol
repnz
adc
and
inc
movsl
out
iret
imull
add
add
sub
push
outsb
mov
das
or
dec
scas
xor
dec
jno
mov
divb
cs
lods
pop
iret
add
adc
sarl
mov
inc
add
cld
fsubrs
ja
rorl
sbb
dec
not
stos
les
xor
enter
insb
dec
pusha
jl
push
pop
cmp
push
xchg
das
clc
loope
cmp
sbb
xchg
pop
shl
mov
lods
ret
push
out
add
ja
jns
lds
sub
scas
xor
imul
pushf
pop
xorb
call
es
mov
cmp
outsb
add
xor
inc
mov
ja
aaa
ljmp
sub
in
out
loope
sub
push
sarl
fcomps
bound
inc
subl
cs
xor
xor
cmp
leave
lea
sti
mov
lea
mov
dec
sbb
lret
hlt
jecxz
fisubs
pushf
xchg
in
out
mov
mov
xorb
cli
xor
inc
jp
cmp
fucomip
mov
jb
mov
and
shrl
cmpsb
fs
ja
dec
jne
fwait
jo
cmpsl
jno
sbbb
ss
dec
and
inc
pop
mov
jmp
in
out
pop
cli
nop
ds
pushf
shr
jno
mov
adc
mov
cmpsl
nop
pop
xor
xchg
in
ljmp
gs
mov
fcomp
sti
mov
xchg
dec
adc
mov
movsb
fwait
cli
dec
add
xor
loopne
mov
mov
loopne
fdivl
fidivrs
nop
movsb
aaa
loopne
lods
ja
jne
dec
sub
sarl
dec
jle
and
jge
loope
jnp
movsl
pop
mov
pushf
scas
lea
psubb
lret
push
xor
sarl
jl
adc
mov
sbb
pop
jno
pop
ljmp
xlat
gs
inc
xor
push
cmp
adc
stc
sbb
and
lea
cwtl
sub
fbld
fcmovb
dec
fsub
leave
lods
jmp
scas
push
pop
scas
jo
push
mov
sbb
jecxz
scas
test
test
xor
push
aaa
mov
es
stos
out
fstps
jle
js
cmpsl
mov
add
inc
cmp
std
xchg
mov
xchg
push
mov
add
idivl
sub
ljmp
prefetch
movsl
decb
sub
mov
lods
iret
sbb
pop
sub
xor
mov
mov
pop
dec
in
cmp
pop
push
addb
fnop
cmc
mov
cwtl
mov
in
jmp
add
xorb
mov
mov
mov
dec
or
or
and
pop
fcomi
lock
xchg
mov
mov
fwait
dec
and
aam
jecxz
cmpsb
mov
test
mov
repnz
je
stos
sbb
adc
inc
mov
insb
lret
das
outsb
push
repz
sub
fsubs
dec
dec
xchg
add
insl
and
cltd
orl
push
add
insb
mov
cwtl
jge
daa
dec
cltd
xchg
std
bound
hlt
jnp
roll
stos
push
loop
jb
mov
xlat
adc
jmp
inc
in
mov
js
cwtl
mov
jg
sbb
divb
fdivrl
bound
ret
and
cld
clc
ret
cmp
jmp
clc
xorl
cmp
into
aas
in
xchg
adc
adc
movsb
aad
cmp
fisubs
inc
or
dec
mov
add
and
icebp
orb
pop
and
inc
loope
sahf
cmp
xor
mov
fs
pop
mov
jle
mov
std
pusha
movsl
dec
cmp
or
dec
xor
stc
mov
lret
sbb
lcall
inc
sub
mov
fisubl
inc
fldcw
sbb
gs
cmc
pop
inc
fsubr
dec
sub
add
aas
iret
or
popa
clc
out
popl
pop
fcomip
mov
sub
pushf
jg
jnp
data16
mov
sub
inc
mov
hlt
js
xchg
out
mov
call
das
sbbb
mov
mov
jbe
aas
mov
das
rcrb
nop
pop
ja
addr16
fiaddl
stos
xchg
pop
in
pop
dec
pop
xor
sbb
outsb
les
shrl
cmp
out
sar
pop
stos
pop
in
push
mov
movsl
mov
sti
inc
mov
rolb
xor
test
xor
jl
ficoml
push
lret
sub
sub
push
lea
loop
cwtl
pop
enter
addl
stos
sbb
mov
ds
push
lds
inc
jno
cli
jno
xchg
push
arpl
lcall
cltd
and
push
jp
out
jo
push
mov
sbb
enter
iret
test
icebp
icebp
test
jle
aad
das
loope
sbb
add
subl
jp
push
xchg
jns
mov
dec
inc
aaa
lret
dec
test
xor
or
iret
sbb
jns
js
dec
shll
imul
xchg
sub
mov
aaa
add
push
jns
cmp
std
cmp
ljmp
incb
jmp
dec
jb
xchg
sbb
ret
jb
push
enter
orb
enter
add
sub
arpl
mov
aad
push
popf
jbe
adc
adc
sbb
lcall
out
jae
call
in
adc
ss
insb
stos
cmp
inc
hlt
xchg
mov
push
in
je
int3
addr16
iret
inc
sub
and
int3
lahf
movups
or
jge
popa
or
cmp
sahf
cmc
fistpl
scas
pushf
ja
ficoml
add
ret
jbe
adc
dec
and
insb
mov
mov
jns
out
stos
subb
jmp
inc
dec
loope
jne
mov
xor
mov
dec
and
pop
mov
leave
inc
xchg
jno
fiaddl
scas
pop
loopne
xor
int
dec
jno
mov
jbe
sbb
add
push
fwait
push
es
in
xor
jnp
outsb
leave
cmc
rolb
adc
add
scas
xchg
push
add
dec
pop
pop
lret
push
call
jge
stos
mov
rolb
cmp
mov
push
jecxz
sub
nop
sbb
arpl
mov
lahf
add
push
and
push
sbb
dec
mov
in
loopnew,pn
pushl
cwtl
cld
int
add
mov
dec
std
adc
fucomp
inc
iret
cld
inc
push
vmread
mov
pushf
jg
jnp
enter
je
movsb
sub
sub
and
xlat
stc
or
jne
pop
call
inc
and
es
pop
pop
pusha
adc
sbb
test
and
les
popa
mov
add
mov
loope
mov
xor
loopne
mov
mov
cmpsb
arpl
mov
fcmove
jmp
xchg
jae
mov
sbb
xchg
sub
xchg
mov
movsl
cmp
repz
fdivr
mov
and
lret
out
or
push
push
mov
loop
test
sub
cmpsb
mov
sbbb
adc
jb
lods
add
push
and
icebp
jae
scas
js
and
dec
sbb
bound
mov
push
or
lret
lcall
push
insl
fstps
xchg
jo
mov
enter
dec
shr
dec
and
mov
jnp
xor
and
dec
push
cltd
pop
pop
call
jae
in
add
add
cmpsb
xlat
roll
daa
scas
mov
test
xchg
in
pop
sbb
cwtl
xor
scas
lds
test
xor
and
dec
push
mov
sbb
cmc
adc
lock
outsb
mov
or
cmp
in
mov
xchg
fcom
xchg
sub
subl
cli
fisubl
or
xor
outsb
xorl
xchg
out
pop
and
hlt
imul
data16
add
pop
cmc
orl
test
inc
cld
xor
out
bound
xor
dec
hlt
aas
jl
xor
xchg
xor
inc
add
mov
pop
mov
aad
push
inc
dec
ror
and
push
out
loopne
fdiv
in
pop
movsb
jmp
jnp
push
push
test
xchg
jb
call
shl
and
adc
daa
jecxz
mov
ret
push
outsb
and
xchg
push
pop
movsl
aam
fcoml
adc
dec
and
call
push
or
in
sbb
push
stc
pushf
ret
into
cli
ficoms
inc
cmp
mov
outsb
outsl
sbb
lea
sub
bound
cmc
adc
bound
scas
dec
sbb
or
or
stos
lea
cmp
and
dec
test
pop
scas
cmp
jg
push
mov
sti
fidivrs
fs
scas
jl
mov
mov
mov
push
mov
and
int
mov
js
xor
sub
insb
inc
adc
push
das
dec
or
mov
ja
dec
push
mov
aam
mov
into
xchg
mov
lret
in
stos
push
xchg
cli
mov
mov
mov
out
adc
and
pop
or
les
repz
mov
sub
out
fmuls
lret
push
adc
push
mov
out
scas
adc
add
lcall
iret
dec
sarl
bound
cmpsb
pushf
or
dec
adc
jg
stos
adc
filds
test
rcrb
or
xchg
xor
dec
ljmp
les
add
cmp
xchg
out
add
push
jmp
dec
or
repz
orb
push
mov
orl
push
sarl
mov
mov
add
fisttpll
orl
cmp
xor
ret
pop
pushf
cmpsl
dec
fmul
rolb
aam
push
sub
orl
js
push
cmp
inc
out
mov
addb
stos
imul
sub
or
ljmp
iret
mov
mov
icebp
mov
inc
daa
je
outsb
arpl
rcrb
sub
ss
mov
in
cmp
aaa
mov
dec
lret
mov
adc
jp
aas
sbb
fchs
fdivrs
pop
lea
sti
sbb
fmull
lcall
or
loope
sub
clc
das
js
pop
popf
push
mov
jecxz
adc
cld
mov
std
sbb
add
jb
xor
stos
jmp
imul
adc
push
lahf
aas
cmp
or
push
cld
shrl
sub
dec
repz
popa
test
add
mov
cmc
push
adc
mov
cmp
sbb
push
stos
cmc
scas
dec
mov
push
push
movsb
cltd
lea
xchg
xor
push
je
and
inc
and
dec
in
push
or
out
push
mov
sub
cmp
pop
and
xor
testl
xor
cmp
lea
push
mov
pop
insl
flds
pop
cmp
fstp
xlat
outsl
cli
into
arpl
fwait
push
push
cmp
ret
notb
les
xor
outsl
cmp
shlb
adc
pop
lods
cmp
inc
ds
into
xchg
mov
les
dec
dec
fisttps
add
sbb
daa
add
in
int
lret
fistpll
testl
sbb
xchg
adc
inc
ja
pop
sub
das
je
call
mov
and
mov
jne
mov
outsl
xor
mov
loope
aam
jp
push
in
jns
push
inc
mov
orl
in
push
hlt
out
movsl
or
jo
mov
es
mov
inc
popa
pop
js
test
aad
or
mov
dec
je
xchg
xchg
mov
iret
xchg
shl
int3
or
insb
mov
pop
pusha
insb
lods
mov
mov
ja
add
popf
outsl
test
push
mov
pop
into
in
push
test
mov
nop
mov
bound
pusha
inc
pop
push
int
push
xchg
loopne
mov
ds
and
fs
mov
jne
push
mov
or
xchg
jae
mov
mov
js
div
mov
pushfw
js
adc
es
fidivrs
fbstp
iret
repnz
lret
sbbl
jmp
lea
aad
cwtl
adc
jnp
shlb
cmp
cmp
add
rcrl
cmpsl
push
ljmp
inc
inc
jb
or
inc
lcall
pop
sti
test
fwait
insl
popa
ja
push
sti
and
add
xor
ja
mov
movsb
cmp
fildl
and
xchg
in
ret
daa
lea
mov
jge
push
fstpl
leave
popl
mov
or
mov
pusha
scas
cmp
fdivrl
mov
int3
inc
xor
mov
rorb
jecxz
add
dec
lea
popf
push
out
cmp
add
jg
popa
pop
dec
cmpsb
imul
push
lret
xchg
stc
sahf
jecxz
xor
xchg
inc
mov
mov
mov
add
and
xchg
mov
jmp
mov
push
leave
sub
xor
or
dec
mov
mov
sbb
xor
arpl
fcomi
pop
jp
cltd
cmp
iret
out
int3
bnd
idivl
sahf
test
test
pusha
movsb
sbb
xorl
xlat
sbb
lahf
out
movsb
lods
inc
mov
xchg
mov
xlat
or
hlt
jo
pop
arpl
mov
jne
std
jbe
mov
stc
mov
sarb
push
arpl
call
rcr
sbb
fimull
ds
movsl
in
pop
jg
inc
push
mov
jb
inc
insl
push
dec
iret
xchg
jne
das
ja
inc
clc
adc
push
and
insl
cmp
mov
loope
cwtl
cmp
aam
cmc
arpl
xor
pop
adc
mov
push
jne
add
adc
xor
popf
jne
add
fisttpll
cmp
dec
xor
pop
iret
sub
or
fcmovbe
lahf
mov
mov
jge
int3
scas
popa
pushf
add
lret
mov
mov
or
sbb
cs
idivb
scas
xor
add
add
cmp
sbb
pop
test
ss
mov
cmpsb
gs
stc
ljmp
xchg
add
and
sbb
rcll
or
ficomps
xor
mov
fsts
gs
jns
xchg
adc
gs
aam
jae
ja
or
and
xlat
dec
ja
jbe
inc
inc
cli
pop
scas
xchg
fists
add
out
popf
jge
xchg
mov
push
push
frstor
ja
add
ljmp
ficoms
add
or
test
mov
push
lds
add
cmp
mov
incl
ficoms
push
mov
fists
pop
leave
fimuls
pop
and
mov
inc
jg
mov
fsubs
fidivl
aam
mov
int
mov
adc
ss
mov
xchg
inc
xor
dec
dec
mov
mov
jnp
push
fwait
das
push
lret
sbbb
inc
push
xchg
jge
xor
mov
xchg
out
fldcw
ret
sub
jmp
lcall
xchg
xor
mov
pop
popf
call
push
lahf
and
jp
jg
mov
push
enter
jmp
jmp
jmp
int
pop
scas
scas
add
jne
fiaddl
cli
insb
ljmp
loope
addr16
lret
pop
inc
je
dec
mov
gs
or
mov
or
push
popf
clc
in
loop
test
or
sbb
jne
nop
cld
push
daa
pop
loopne
jmp
mov
pop
pop
push
mov
sti
push
lcall
inc
in
test
shl
pop
popf
sub
test
add
movl
hlt
daa
push
insl
sahf
bound
repnz
pop
sti
pop
sub
cmp
xor
mov
xor
and
mov
mov
jp
repnz
cmp
aad
dec
fwait
gs
lahf
cs
lret
addr16
aam
sbbl
pop
inc
scas
idivl
fiaddl
pusha
mov
stos
jecxz
stos
xchg
xchg
daa
inc
addb
rcrl
mov
nop
mov
mov
xlat
push
lret
sub
cmp
inc
mov
test
cwtl
es
testl
data16
fisubrl
add
stc
cld
repz
roll
mov
out
stc
out
and
push
pop
push
lods
das
out
xor
or
pop
in
ss
scas
lods
aaa
cmp
and
test
rolb
fmul
mov
in
les
outsl
pop
dec
pop
pop
adc
mov
mov
mov
mov
jl
dec
pop
jg
xchg
iret
mov
cmc
sahf
lock
loop
iret
nop
jbe
scas
adcl
stc
inc
sub
xor
aaa
jnp
xchg
hlt
pop
sbbl
mov
dec
das
xor
mov
xor
cwtl
mov
xchg
jb
cld
dec
test
les
jno
sbb
mov
in
sti
push
jl
mov
mov
jmp
call
orl
mov
sahf
daa
mov
fxch
sbb
sub
mov
out
jmp
add
dec
and
lods
dec
adc
call
sbb
dec
pushf
pop
in
add
subl
clc
popa
nop
lea
and
mov
fldcw
cmpsl
sub
adcb
jo
push
or
mov
ret
add
fsubl
cmp
mov
mov
test
pop
int3
cmp
dec
movl
add
xchg
and
lods
arpl
les
mov
fnsave
shlb
les
push
mov
jnp
movsl
fidivl
mov
xor
dec
ds
fucomip
imull
addr16
shll
andb
mov
ret
mov
out
lret
inc
inc
rclb
inc
cmp
out
sub
inc
in
add
sar
sahf
ja
ds
mov
push
add
addb
fwait
or
scas
dec
mov
mov
mov
lods
push
rolb
xchg
inc
lock
adc
mov
jge
test
sub
mov
mov
hlt
sbb
pushf
lcall
inc
jae
pusha
add
cli
sbb
fmull
cltd
push
inc
or
adc
inc
jp
push
sub
movsb
es
adc
ja
fsubl
lcall
arpl
push
pushf
andb
sarl
lods
repz
pmaddwd
push
pop
mov
mov
cmc
jl
sub
imul
stc
mov
xor
out
popa
push
pop
and
imul
adc
xchg
mov
mov
repnz
jae
push
icebp
lcall
movsl
fs
add
sbb
xchg
cld
add
leave
mov
fbld
push
lret
mov
int
aam
dec
sub
aad
add
sub
adcl
xchg
cmp
hlt
lock
xchg
jno
xchg
or
movsb
fistpl
shll
test
loop
jae
sti
lret
jns
cmpsl
adcb
sbb
in
stos
test
mov
les
push
es
repnz
hlt
mul
mov
insb
adc
cmc
pop
scas
dec
lcall
scas
mov
cmp
mov
mov
enter
int3
xor
test
inc
adc
sbb
sbb
mov
add
and
xchg
adc
sti
scas
inc
add
jecxz
adc
je
bound
mov
insl
fcmovu
int
test
pushl
mov
dec
ret
jmp
addr16
lea
in
lret
daa
or
aad
mov
jl
sbb
fcoms
jmp
aaa
xchg
mov
hlt
or
mov
jns
jge
fcoml
add
in
mov
int
repnz
and
pop
mov
fdivr
inc
movb
xchg
pop
sub
roll
rcrb
into
xor
jns
pop
repz
mov
cmpb
repz
icebp
je
sbb
mov
loop
xchg
xchg
popf
or
js
scas
xor
pushf
fbstp
xchg
pop
xor
and
in
movsl
in
push
cld
in
pop
addl
aam
clc
cmp
jp
mov
pop
scas
mov
lods
test
and
test
lcall
xor
cmpsl
dec
mov
jp
orl
fldt
sbb
adc
jle
mov
stos
in
loop
mov
mov
mov
or
or
shl
cli
into
lock
push
sbb
mov
add
pop
sbb
and
xor
sub
jmp
pop
xchg
imul
sbb
or
sub
xchg
jge
stc
imul
mov
jae
test
pop
mov
inc
rorb
dec
mov
mov
sbb
add
or
inc
call
mov
jle
push
ljmp
js
ret
xchg
mov
out
fsubl
negl
lcall
lock
insl
aad
mov
fxtract
dec
mov
inc
or
add
lret
pop
mov
jb
sub
dec
ljmp
xchg
lcall
add
sbb
xor
lods
iret
add
mov
addr16
sub
dec
mov
pop
push
repnz
dec
aaa
or
sub
xchg
movsl
out
and
es
push
pop
jnp
dec
ret
lea
out
test
rcll
clc
shll
and
ret
out
packssdw
sbb
jo
cwtl
loope
or
ja
dec
outsb
rcrb
fisttpll
rol
rorb
sbb
mov
insb
mov
rol
xor
int
ret
mov
scas
cwtl
xrelease
add
dec
jmp
rclb
pop
bndldx
sbb
xchg
insl
fldt
popf
push
sbb
pushf
jno
int
pop
cltd
jmp
filds
push
jp
mov
das
pop
ljmp
push
jns
outsl
movsb
add
jmp
pop
int3
pusha
hlt
loopne
and
ret
sti
mov
lret
mov
mov
insb
add
adc
pop
xor
push
lret
dec
loop
call
in
insb
cmp
cld
sub
fsubr
sub
popa
inc
repz
pushf
std
loopne
fcomi
enter
iret
cmp
push
push
outsb
jp
rcll
lahf
pop
add
mull
hlt
leave
push
aas
dec
and
pop
pop
cmp
filds
cmp
dec
xor
aam
cmp
push
dec
ret
add
push
hlt
dec
test
test
sub
inc
testb
xchg
rcrb
inc
pop
mov
jmp
cmpsl
or
dec
cmpsb
push
loop
pop
mov
pop
jae
sub
mov
popl
cmp
clc
lods
push
pop
jle
ja
je
pop
loop
mov
cmc
mov
cmp
or
lods
sbb
mov
adc
adc
roll
push
movsl
sbb
adc
adc
loope
je
test
jmp
leave
mov
dec
sbb
scas
int3
movsl
fisubrs
adc
pop
xor
aad
gs
pop
nop
call
daa
mov
scas
xchg
int
pop
dec
je
xor
jbe
aad
cld
int
mov
dec
sbb
imul
js
dec
iret
mov
cld
sti
pop
cmp
inc
and
mov
sbb
sbb
rclb
mov
dec
popa
frstor
xor
xchg
leave
mov
add
iret
mov
and
add
out
cmp
ja
les
ja
mov
outsl
andl
push
repnz
sahf
aas
lahf
cmc
mov
stos
testb
pop
and
sub
pop
arpl
mov
or
repnz
jmp
mov
cmpsl
cmp
shlb
movl
in
xor
ja
dec
add
or
insb
bnd
inc
sahf
fistpl
sub
cmp
xchg
sub
insl
or
jle
sub
jmp
into
out
in
test
cmp
fsts
mov
loop
mov
xchg
sbb
dec
je
xchg
cli
jbe
into
stos
stos
stos
mov
mov
mov
inc
ss
scas
dec
cmc
push
lcall
mov
es
jle
arpl
sahf
sahf
aad
js
adc
popf
test
adc
addl
repnz
testl
lret
push
cmp
popa
ret
arpl
dec
roll
out
mov
mov
pop
fcom
je
jmp
pusha
cmc
in
mov
stc
jge
add
test
pop
popf
lahf
mov
push
mov
ljmp
cmc
or
lock
in
jl
cmpsb
daa
notl
add
dec
sbb
mov
ret
sbbb
add
and
lahf
es
adc
test
aas
imul
mov
les
push
cmp
sbb
out
or
dec
pushf
imul
jl
cmp
ror
in
jmp
pop
mov
sbbl
scas
jmp
xor
test
jecxz
hlt
scas
pop
int
mov
cld
aad
mov
fisttps
cs
sahf
dec
scas
and
iret
sbb
adc
hlt
inc
ss
movsb
jae
adc
add
push
leave
push
adc
iret
xor
out
lret
inc
inc
inc
ljmp
aaa
ss
dec
mov
xor
stos
lods
mov
popf
into
pusha
stc
je
ret
inc
sbb
sbb
adc
mov
dec
leave
call
mov
fmulp
sbb
frstor
dec
mov
imulb
loop
addr16
cmp
pop
sti
ds
pop
in
pop
cmp
loope
gs
lds
int
push
outsb
call
das
add
sbb
or
and
fcmovb
sbb
sub
or
in
ljmp
call
xchg
xor
pop
and
mov
dec
fs
aad
push
jmp
paddw
imul
dec
xor
sub
sbb
mov
pop
push
mull
xor
stc
push
pusha
pop
leave
test
lock
popf
fs
test
out
les
inc
push
sbb
sub
and
inc
ja
jl
mov
inc
lock
xlat
insb
jge
dec
stos
xchg
ljmp
and
icebp
aas
icebp
adcb
ss
fsubr
lcall
stc
idivb
jb
sbb
jb
pop
jns
ficomps
out
ljmp
push
xchg
dec
dec
in
insb
mov
and
jo
push
pop
lret
sti
mov
cmp
jnp
out
test
pop
mov
pop
jb
fcmovne
sahf
push
mov
pusha
or
lcall
or
daa
sti
mov
cltd
imul
mov
jbe
movsl
pop
ds
je
cli
and
shrb
movsb
gs
mov
add
rorl
adc
cld
hlt
inc
lret
out
mov
add
push
mov
sub
add
push
bound
fiaddl
test
fadd
pop
sbb
js
in
sbb
fs
sub
sub
hlt
shll
test
fildll
in
std
das
hlt
arpl
mov
cld
inc
xlat
adc
and
mov
test
pop
out
jae
popf
imul
or
xchg
lret
lcall
std
xorl
cmp
cs
inc
cmp
popa
clc
movsl
pop
int3
mov
xchg
out
cmpl
fldenv
int3
shll
or
pop
push
cmpsl
cs
mov
leave
or
jle
push
cmp
mov
mov
rcll
stc
lcall
in
and
mov
subl
cltd
pop
out
push
or
add
out
adc
mov
sub
sarb
lcall
push
sbb
sbb
lret
loope
mov
cs
jno
sbb
xchg
mov
test
fnstsw
sbbb
out
shl
jo
cmp
adcl
sbb
xor
inc
jnp
sub
jge
subb
dec
sbb
jle
sub
push
inc
cwtl
xchg
fcmovbe
mov
mov
movsb
aam
add
std
notl
sub
jle
cwtl
mov
adcb
mov
lea
stc
daa
repnz
lods
rcll
mov
or
cmpsl
adc
in
and
out
stos
add
cmp
dec
xchg
test
inc
mov
clc
in
aad
sub
cmp
clc
cmp
data16
hlt
jne
loope
cwtl
mov
ret
mov
adc
or
cmp
ljmp
adc
pop
pop
fisttpll
lea
mov
test
mov
pop
inc
mov
bound
mov
adc
add
rorl
insl
arpl
xchg
cld
or
out
pop
push
fistps
data16
xor
aaa
sbb
cmp
lret
arpl
xor
sub
jl
bswap
jmp
cwtl
dec
sahf
mov
jne
mov
dec
es
cmp
test
cmp
fs
add
xchg
sub
and
int
mov
mov
or
data16
rolb
push
and
and
add
loope
sbb
xor
es
xor
in
fiadds
outsl
xor
adcb
jmp
les
mov
mov
and
out
movsl
scas
aam
shll
jge
mov
mov
jmp
sub
dec
mov
xor
arpl
movsl
cmp
push
dec
mov
lcall
scas
sub
mov
push
mov
sbb
push
pop
dec
dec
jecxz
out
clc
mov
pop
jbe
push
enter
fisubrs
aad
pop
mov
adc
jmp
mov
cmp
ficompl
add
xchg
xor
and
or
mov
repz
pop
ds
and
mov
add
adc
sbb
push
and
cmp
push
inc
pop
mov
stos
call
jge
repz
mov
fwait
rclb
xor
in
jle
sub
data16
push
add
stos
sbb
add
aad
loope
daa
push
cltd
and
data16
leave
mov
mov
shlb
inc
enter
push
cmp
xor
sbb
push
or
sbb
movsb
ja
add
lahf
jp
or
jns
roll
xor
aaa
or
cmc
jge
fisttpl
scas
inc
test
lret
push
mov
push
xchg
cltd
sbb
ficoml
movsb
mov
ret
inc
incl
and
cwtl
dec
rorb
test
lods
mov
cmp
lods
jge
pop
insb
rolb
mov
jecxz
xchg
ss
adc
lahf
insb
decb
aad
fwait
pop
sub
psllw
push
xchg
inc
mov
rcrl
fcomp
sbb
xlat
dec
loope
in
jbe
repz
dec
mov
mov
rorb
inc
je
fdivs
repnz
inc
pop
mov
mov
pop
cwtl
rolb
pop
xchg
sub
push
rclb
imul
lret
jmp
jnp
fdivr
cs
pop
dec
jl
xor
lock
ss
lret
lcall
cmp
leave
cmp
inc
orl
jnp
mov
jmp
lret
std
cmp
shr
or
add
sub
imul
bound
xchg
push
ret
inc
mov
bound
and
mov
push
xchg
lcall
fstps
clc
inc
jle
cmp
pop
outsl
in
fcmovnb
in
and
xor
push
movsl
push
pop
mov
test
mov
lods
mov
fdivrs
out
mov
fsubl
mov
lds
cmp
and
in
rep
dec
insb
and
inc
jnp
iret
sub
lcall
mov
insb
lret
js
xor
jl
adc
inc
mov
test
xor
stos
call
scas
inc
add
mov
cmpsb
mov
inc
sbb
mov
cmp
jns
outsb
sbbl
sahf
stos
fldl
and
daa
push
pop
sbb
cmp
xor
add
stos
pop
faddp
movsb
test
insl
pop
mov
js
lods
out
push
xchg
sbb
insb
mov
ljmp
jl
xchg
and
jle
orb
scas
lods
cs
mov
sahf
outsl
shr
jb
jae
mov
iret
fistpll
and
rorb
mov
data16
add
aas
outsb
sarl
scas
sbb
and
sbb
js
xchg
or
pop
test
es
mov
es
shl
lahf
xor
dec
mov
mov
int
cmpsl
fbstp
in
iret
xchg
sub
cmp
cmp
jo
mov
std
push
or
mov
mov
mov
mov
adc
inc
lock
mov
sub
cltd
cmp
pusha
aas
add
adc
shll
roll
mov
insl
shll
push
jmp
inc
addr16
cmp
and
jg
test
stos
ret
dec
xchg
sar
mov
pop
mov
sub
lds
loope
xchg
mov
push
xchg
fmuls
mov
sub
int3
push
pop
fmul
mov
jne
loope
movsl
pinsrw
fldenv
jecxz
or
scas
jns
int3
pop
xor
les
xor
out
adc
sbb
enter
negl
mov
movsl
inc
push
pop
test
or
xchg
inc
cmp
lods
jbe
xor
rcrl
mov
adcb
lods
lock
movl
ret
cli
lahf
add
and
pop
fsts
mov
mov
js
inc
loopne
fs
sub
pop
dec
lea
lods
mov
cmpsl
mov
imul
or
mov
sarb
fdivrl
push
aad
hlt
testl
mov
mov
mov
xchg
mov
or
aas
enter
imull
sti
xchg
inc
ljmp
pop
xor
aad
icebp
pop
mov
popa
pusha
or
lahf
push
jns
and
mov
imul
stos
js
xor
sub
filds
in
rclb
sbb
pusha
add
in
jle
push
xorl
int
add
or
leave
imul
rcrb
xor
clc
lock
fistl
cmp
push
sub
adcb
and
sbb
jbe
shlb
mov
or
fsubs
jmp
mov
imul
adc
push
xchg
xlat
aas
daa
cmp
mov
mov
add
lret
fwait
addr16
data16
stos
cmp
xor
loope
or
test
push
outsl
pop
or
fs
rorb
xor
popf
xchg
pop
aad
sbb
movb
cltd
clc
call
push
jae
iret
fcomi
jmp
negl
data16
dec
cmpsl
cmpsb
ret
sbb
stos
push
jl
lret
sbb
dec
lcall
rcrl
ss
and
test
lea
aam
push
or
jl
fiaddl
lret
jmp
jmp
mov
and
fwait
daa
dec
fs
sbb
sub
stc
jnp
clc
push
jp
xchg
lahf
mov
int3
mov
scas
dec
rorb
lahf
sbb
xor
push
das
sbb
pop
outsb
mov
rclb
mov
pop
mov
dec
insl
push
sub
jno
xchg
mov
je
scas
mov
and
fldl
pop
shll
mov
les
andb
or
sub
add
or
xchg
add
movsl
push
sbb
mov
js
sub
repnz
idiv
inc
lret
icebp
cltd
mov
clc
pop
out
mov
pop
sti
loope
out
orl
ficoms
aam
xor
pop
push
subl
jmp
mov
xor
xchg
cli
nop
ds
rorl
into
xor
icebp
adcl
inc
adc
lods
dec
and
dec
sub
loope
xor
mov
cltd
cmp
leave
mov
push
or
cld
xchg
lahf
sar
aad
int3
fnstsw
pop
lcall
jb
mov
mov
lds
pop
jl
sbb
addl
dec
aam
pop
dec
aas
inc
pop
sub
scas
jg
xlat
bound
call
push
add
outsl
cmp
mov
loope
add
mov
or
in
adc
imul
sbb
scas
sbb
stc
repz
in
je
sbb
push
fisttpll
repz
ljmp
cld
cmc
mov
or
lahf
xchg
addl
les
les
dec
and
fsubrs
dec
rolb
lcall
cmc
rcll
xchg
pop
out
mov
loopne
mov
xor
pop
dec
dec
cmp
jo
and
insb
fisttps
cmp
cmp
mov
cld
push
rcrl
jmp
pop
dec
fildl
sub
sbb
pushf
push
mov
pop
cld
push
sub
mov
lds
inc
insl
fs
roll
arpl
stos
mov
xchg
mov
fs
insl
lock
pop
jnp
dec
sub
push
jg
test
fsubl
mov
adc
std
xor
add
mov
lods
fwait
jmp
dec
ljmp
mov
test
dec
outsl
or
mov
rorl
mov
push
xchg
in
push
push
xor
aad
mov
pop
jp
cmp
in
cmpsb
dec
inc
in
push
stos
fistpll
fsts
sub
filds
or
sbb
push
jb
push
test
and
mov
dec
xchg
push
add
and
and
ss
arpl
scas
cmp
lods
xchg
fidivrs
arpl
and
mov
lcall
xor
pop
cmp
fdivrs
rolb
xchg
mov
scas
dec
mov
or
jne
cmpsb
stos
pop
ja
lods
inc
or
scas
jb
mov
daa
mov
mov
and
xlat
repz
fisttpll
or
mov
or
or
push
pop
popf
mov
adc
mov
mov
out
repnz
rcrb
cmp
pop
sbb
js
mov
sub
sbb
push
fbstp
lretw
pusha
jmp
enter
fisttpll
shrb
hlt
iret
fsubs
scas
aas
add
jns
aad
xor
and
jp
das
adc
jecxz
test
inc
outsb
nop
test
cmpsb
mov
sub
sbb
jae
push
inc
jecxz
movaps
aam
sbb
sub
mov
push
aam
or
lds
push
faddl
jg
dec
xchg
iret
cltd
add
push
xchg
mov
fildll
jmp
fcomp
shll
cmp
adc
mov
lea
aad
loope
jae
inc
lret
xchg
fisttpll
scas
xchg
sbb
pop
cs
sahf
pusha
or
mov
aam
fsubr
push
jmp
xchg
mov
lahf
mov
jbe
aam
testb
into
fisttps
shll
jg
mov
jmp
sahf
and
dec
inc
and
loop
inc
xorb
add
push
in
mov
pop
leave
lahf
insl
aam
sbb
lcall
or
pushf
mov
inc
push
or
or
mov
cld
xor
cmp
add
cs
clc
test
adc
lcall
sbb
call
mov
sarb
imul
add
add
add
movsl
pop
mov
xchg
sbb
jo
jne
ds
mov
inc
stc
scas
orl
lretw
into
xor
mov
scas
sub
cmp
xchg
insl
in
leave
sbb
cmp
testl
cmpsb
in
jo
dec
dec
jns
mov
hlt
fdivl
add
bound
sbb
scas
xor
mov
or
imul
ret
repz
addl
mov
adc
xchg
xor
lahf
sti
shl
rolb
lahf
shlb
pop
gs
lods
add
sub
ljmp
loop
and
ds
sti
or
dec
sub
push
mov
cmc
sti
loope
xor
mov
or
or
fistps
or
fistpll
int3
es
dec
pop
and
mov
scas
clc
mov
pop
and
mov
ljmp
jl
addr16
cmp
cmc
fcomip
pop
cmp
inc
push
or
mul
sarl
jns
fwait
inc
lods
cmp
cmp
xchg
ret
adc
cmp
dec
adc
sbb
inc
cmp
daa
adc
mov
or
push
sbb
and
sub
movsb
sub
shrl
add
mov
push
jne
enter
adc
repnz
aad
ljmp
jbe
sbb
repnz
mov
adc
jle
xchg
or
sarl
push
jnp
adc
subb
jns
stc
jmp
sti
sbb
in
sub
out
out
pop
mov
mov
push
leave
or
xor
and
pop
jg
ret
outsl
outsb
scas
mov
fstps
xchg
sub
inc
les
clc
push
scas
lcall
inc
dec
pop
dec
cld
pop
cmc
add
clc
lret
ret
cmp
mov
xchg
std
movl
pop
insl
loope
lods
fdivs
pop
wrmsr
jb
ficompl
cmp
push
push
inc
adc
add
pop
push
int
repz
or
lret
std
or
out
testb
adc
adc
xchg
jle
adc
inc
sub
sub
push
push
fwait
lea
or
sub
mov
mov
mov
lret
rol
push
sbbb
xchg
into
dec
testl
push
lods
lea
inc
insb
ja
jle
scas
jecxz
or
pop
and
xor
jmp
xlat
pushf
mov
cmp
cmc
out
push
xchg
jo
lods
scas
roll
push
cli
or
stc
mov
push
testb
add
fisttpll
das
lahf
mov
pop
sahf
inc
cs
pop
lahf
lcall
sub
imul
imul
and
cmp
addr16
aas
dec
daa
mov
daa
cmp
sub
in
inc
test
pushf
add
scas
inc
inc
sbb
je
or
mov
call
stos
xor
fldcw
lods
popa
jle
jmp
pop
imul
mov
mov
inc
cmpsl
mov
mov
dec
push
and
js
std
movsb
inc
push
outsb
and
mov
adc
mov
cmp
jnp
dec
cmp
ret
xchg
dec
cwtl
je
add
jbe
pop
inc
add
xchg
sbb
push
std
pop
mov
test
dec
sar
or
add
hlt
mov
inc
lods
repnz
test
test
push
pop
in
stc
push
mov
pushf
stos
fsubrl
sti
mov
push
pop
icebp
mov
outsl
in
xor
jge
leave
pop
adc
enter
in
in
mov
incl
push
movb
dec
aad
jmp
add
sarb
inc
mov
mov
sarb
aas
xor
sub
cmp
pushf
movsb
mov
scas
in
push
mov
cmp
std
loopne
mov
or
fwait
add
loopw
adc
mov
sti
sbb
insl
pushl
inc
mov
stos
notb
jbe
stc
in
dec
cmp
fwait
popf
es
and
sub
add
mov
adc
popa
or
xor
fisttpl
movsb
dec
adc
pop
js
out
mov
adc
pop
bound
add
and
mov
xchg
mov
mov
and
aam
in
jge
stos
loopne
ds
mov
rorl
out
rcrb
add
xor
and
adc
inc
sub
popa
insb
out
pop
orb
rclb
pop
inc
xor
mov
popa
add
sbb
or
xchg
nop
cmpsl
push
mov
out
sub
push
scas
sbb
cli
dec
sbb
cwtl
push
out
adc
jnp
test
daa
ss
jecxz
into
add
test
push
int
push
inc
add
mov
cwtl
jo
divl
jl
mov
adc
iret
dec
xchg
loop
inc
xorl
mov
xor
test
cmp
icebp
sbb
dec
test
adc
icebp
sub
hlt
mov
mov
mov
jg
ret
repnz
or
out
xor
repz
les
xor
rcrl
xchg
jnp
lcall
pop
fs
push
sbb
xor
les
push
hlt
outsl
or
loopne
test
push
imul
testb
lret
cmpsl
mov
fldln2
xor
mov
and
ret
adc
les
push
and
sbb
sub
rcr
and
push
dec
or
mov
push
and
or
sbb
test
mov
pushf
and
mov
xchg
cmp
sub
inc
xor
xchg
mov
sbb
sub
hlt
std
inc
ret
cs
xor
sbb
pop
std
cmp
mov
hlt
xchg
daa
adc
push
insb
adc
sub
fdivrl
pop
mov
imul
sti
jle
jmp
rclb
push
lea
pop
insl
mov
mov
popa
dec
and
push
mov
aaa
xorb
push
or
jp
or
pusha
loopne
lret
or
shrl
hlt
sub
insl
insl
mov
push
sbb
lods
lods
je
push
and
push
scas
inc
lea
clc
xchg
jne
adc
into
jae
pushf
mov
loopne
je
pushf
xchg
xor
lcall
mov
jle
loop
roll
fs
jecxz
xchg
mov
push
scas
pop
bound
ljmp
stos
pop
sti
in
lcall
and
sti
lahf
xor
jp
in
and
fdivrs
xor
and
adc
test
sarl
jmp
sahf
subb
dec
jb
mov
cli
sbb
test
push
cmp
cmp
mov
xor
cmp
push
mov
nop
mov
les
negl
dec
loopne
and
ljmp
cmpsl
dec
pop
mov
or
vdivss
ss
mov
mov
add
lcall
dec
icebp
ds
pusha
pop
jns
jnp
cli
or
stos
xor
andb
cmp
enter
mov
pop
imul
daa
push
leave
adc
into
ljmp
scas
sbb
cmp
jecxz
sbb
inc
jl
adc
or
pop
mov
or
lcall
inc
out
jmp
or
jns
outsb
pushf
out
outsb
ficoms
pushf
pop
add
push
inc
fiadds
ret
or
dec
dec
push
jo
sbb
cmc
sar
int
negl
lret
sub
jbe
cmp
mov
in
dec
or
cli
lds
ds
in
mov
cld
lods
lods
lock
roll
hlt
mov
ret
test
imull
adc
dec
xor
push
out
lret
cs
xlat
fistl
iret
sbb
popa
inc
hlt
cmc
mov
orl
ja
ror
pop
popa
int
popf
mov
mov
clc
notl
inc
and
xor
or
pop
jae
adc
loopne
cmp
jmp
inc
jle
out
dec
idiv
int3
push
xchg
icebp
sti
push
mov
pop
add
mov
inc
in
add
aas
sbbb
data16
outsl
fistl
enter
xlat
xor
rclb
in
inc
or
mov
stos
movsl
xchg
or
subl
or
bound
xor
insb
mov
das
jp
or
loopne
je
addb
push
jmp
rcrl
inc
movsb
loop
scas
test
daa
cmpb
pop
ja
xchg
inc
and
push
insl
xor
sbb
lea
mov
repnz
adc
cmpsl
call
adc
adc
jnp
cmp
xor
xlat
dec
xchg
fucomi
jecxz
jmp
mov
stos
and
je
xchg
dec
into
ja
inc
arpl
out
aad
call
mov
shlb
lret
mov
shl
dec
or
add
adc
rclb
cmp
dec
movsb
shrl
cmpsb
enter
test
sbb
mov
jae
hlt
test
mov
pop
popf
std
mov
add
push
arpl
mov
mov
cmp
fimuls
mov
clc
test
bnd
iret
mov
or
jle
test
inc
in
xchg
sub
idivb
test
bound
ret
lret
aaa
push
cli
pop
loope
loope
or
jle
add
inc
andl
fsubr
mov
jl
out
cmpsl
das
aam
lods
shll
sub
xchg
iret
out
push
cmp
inc
inc
in
in
andb
pop
pop
jmp
pushf
or
sub
pop
xchg
push
xorb
lahf
gs
cmp
xchg
arpl
cmc
inc
cltd
mov
xchg
gs
xchg
jl
inc
xlat
fisubs
or
adc
push
jl
sub
pop
das
sbb
jnp
cmp
xor
fimull
enter
sbb
jb
inc
sti
push
push
adc
in
mov
push
cmpsb
in
cmpsb
ss
mov
mov
shlb
int3
mov
movsl
stos
outsb
clc
cwtl
addb
xor
dec
lds
sub
mov
es
popa
fstpt
ret
ret
mov
int
sbb
bnd
or
ljmp
dec
inc
mov
jo
xchg
rcrl
xchg
mov
fadds
mov
jp
aaa
dec
lahf
fists
mov
ja
in
pop
mov
es
lods
jns
pop
adcb
jbe
shlb
pop
xchg
rolb
mov
jno
mov
add
test
push
jge
mov
mov
xor
sub
xor
fs
cmp
and
fs
sahf
cltd
jns
xchg
movsb
mov
lods
mov
sub
dec
mov
mov
push
lcall
fdivrl
rol
push
cltd
push
add
or
ds
pop
xor
lret
sub
push
lcall
mulb
mov
decl
gs
push
sti
fistps
mov
push
lods
inc
insb
mov
call
fisubs
fs
pop
cwtl
lods
mov
mov
fs
push
aas
fcompl
push
stc
xchg
mov
mov
mov
std
fdivs
cmc
or
push
xchg
push
mov
xor
sbb
or
ss
sbb
push
lret
icebp
out
push
xor
mov
jae
or
mov
inc
sahf
cltd
sub
and
sbb
leave
jg
fwait
cmpb
shrb
sub
or
inc
gs
adc
imulb
mov
sub
iret
inc
xchg
shll
iret
jns
and
and
xchg
adc
out
rcrb
pop
rorl
xchg
lret
std
ret
push
xor
stc
jmp
test
outsb
movsl
xor
aad
mov
jp
into
add
xchg
sbb
leave
enter
pop
pusha
mov
dec
cmp
xor
lds
adcb
lcall
mov
flds
vpunpcklwd
cmpsb
ret
inc
push
adc
mov
cmpsl
subb
add
mov
gs
sbb
push
sbb
loop
mov
loop
stc
fisubs
xor
xchg
icebp
or
pusha
mov
cmpsl
je
fldz
nop
cli
mov
mov
and
bswap
hlt
adc
push
adc
sbb
add
and
mov
ret
lea
cwtl
jne
sub
sub
and
adc
out
out
jle
imul
jl
das
push
js
mov
stos
fcoml
fistps
fs
jl
push
mov
ror
jl
mov
lret
lods
loopne
push
mov
or
inc
xchg
mov
frstor
loope
call
pop
xchg
les
mov
push
xchg
dec
cwtl
loop
lock
jg
loop
lods
aam
lods
gs
fists
mov
shl
jbe
sti
dec
pop
dec
rcr
add
push
data16
mov
add
pop
push
repz
lds
std
adc
cltd
add
ds
mov
rcll
mov
inc
cmpsl
mov
mov
lret
add
mov
xchg
call
inc
mov
push
xchg
popa
das
ret
test
lahf
sbb
hlt
push
xchg
jg
add
lods
xchg
mov
push
cmp
stos
inc
jle
imul
pop
jl
in
das
push
sbb
aam
jns
nop
fsts
icebp
out
fucom
pop
pop
xor
dec
cs
aas
arpl
adc
div
mov
adc
arpl
xor
adc
ja
stc
sbb
lret
incb
ljmp
dec
cmp
or
pusha
cmpsb
xlat
repnz
xor
repz
jb
rcrb
mov
mov
std
inc
out
aam
movsb
seto
mov
inc
pusha
loope
push
shl
out
dec
popf
jmp
arpl
sub
dec
loop
push
jle
push
pushf
push
rclb
adcl
sub
push
jbe
in
pop
mov
ljmp
sub
sti
mov
push
stc
out
push
adc
rcl
cmp
lods
imul
jbe
pop
movsl
dec
push
cmp
leave
push
mov
or
dec
sub
addr16
sbb
ja
pusha
popf
xchg
cmpsb
les
shll
lds
or
imul
add
call
inc
jl
leave
stos
das
test
icebp
inc
mov
xor
xor
std
dec
test
imul
mov
pop
cmc
cltd
cli
sbb
dec
stos
and
mov
in
jmp
jge
popf
arpl
lahf
add
and
pop
dec
jb
daa
cld
popf
mov
and
stc
mov
ja
mov
mov
mov
jle
std
loopne
cmc
add
daa
out
xchg
sbb
adc
repz
jno
jl,pn
je
cltd
testb
cmp
test
xor
leave
mov
dec
fcoml
scas
push
out
in
sbb
push
fsubs
inc
fldt
cwtl
jb
std
out
sub
popf
jmp
xchg
fneni(8087
fadd
dec
out
pushf
pushf
popl
mov
mov
and
test
xchg
gs
adc
push
and
inc
pop
mov
pop
ss
popl
dec
mov
sbb
outsl
out
mov
xchg
popf
pop
pusha
jmp
scas
and
xlat
fcomi
cmp
lret
lods
stos
adc
test
sub
pop
fucomi
cwtl
jecxz
cmp
jne
addl
or
nop
lret
cld
popl
lret
pop
push
inc
dec
sahf
mov
stc
addr16
inc
mov
push
cmpsl
scas
inc
je
mov
imul
lods
sub
out
or
lcall
mov
mov
sbb
imul
push
lret
push
jnp
mov
xchg
mov
adc
in
addr16
xor
jecxz
sbbb
scas
dec
pop
les
jge
pop
loop
xchg
inc
imul
add
mov
addr16
pop
add
ret
dec
js
mov
insb
mov
ss
test
push
xor
les
repnz
insl
xchg
pop
bound
mov
cmpsl
xchg
cmp
pushf
sub
mov
pop
or
into
imul
ss
inc
jb
mov
push
xchg
shr
ret
and
out
mov
xor
dec
sti
int
aas
inc
push
icebp
xchg
sub
push
into
cs
int
adc
fdivrs
mov
cwtl
mov
xor
movsb
jp
in
mov
js
or
test
mov
jecxz
push
jbe
dec
pop
adc
mov
out
pop
ljmp
arpl
mov
pusha
sub
insl
sub
sbb
push
mov
dec
dec
ja
add
imul
shl
inc
data16
cmp
fldenv
in
jns
xor
lgs
hlt
psrlq
mov
push
ljmp
outsb
dec
arpl
xchg
aaa
mov
sbb
es
sarb
mov
add
imul
mov
aaa
inc
or
cmc
and
dec
fildl
cld
cwtl
cmpl
xor
push
lods
insb
fcoml
test
add
or
scas
fwait
mov
pop
add
jecxz
xchg
pop
in
pop
sbb
mov
pop
push
adc
mov
push
cmp
mov
mov
das
mov
pop
fsub
leave
sub
hlt
ret
imul
dec
mov
ficomps
hlt
imul
and
cmc
in
iret
jecxz
inc
mov
int3
mov
and
jne
fwait
cmc
js
mov
test
int3
or
in
rorl
mov
and
mov
loopne
fistps
adc
mov
dec
add
jg
or
in
ds
sub
aad
test
movl
and
arpl
mov
pop
int3
cli
xchg
jns
dec
pop
or
xchg
inc
dec
leave
cmc
cmp
clc
ss
adc
or
mov
subb
jp
cmc
inc
in
sahf
mov
lock
dec
xchg
fcom
and
in
aaa
sti
pop
dec
stos
cmp
dec
mov
push
je
push
ljmp
inc
sbb
xchg
xchg
mov
inc
sub
add
js
je
add
xor
and
insb
adc
push
nop
sub
adc
pop
shll
out
sub
incl
cmp
test
lcall
push
iret
add
mov
out
dec
in
mov
popf
rcll
jl
scas
ret
xor
aas
call
cmp
jb
sbb
mov
sbbl
jno,pn
xchg
dec
jp
mov
sub
enter
or
xor
lods
add
add
data16
les
js
ds
fsubp
loop
fstpt
out
cmp
xor
cltd
stos
mov
sub
ljmp
jl
mov
pop
jb
movq
xchg
dec
gs
dec
mov
sub
addr16
cmp
fdivr
jae
int3
lea
push
popf
push
jno
shlb
dec
pop
mov
and
ret
jns
movsl
sub
or
imul
xchg
lahf
add
mov
loop
repz
jbe
bound
cld
mov
mov
repnz
loopne
sub
lcall
fsubrl
mov
add
sub
add
scas
outsb
sahf
pop
out
bound
mov
into
pop
jno
sahf
jns
sub
or
insb
div
and
jg
push
aam
dec
inc
inc
xor
loop
adc
ds
frndint
inc
sub
lcall
sbb
jo
jae
hlt
cwtl
mov
imul
jg
call
cmp
int3
dec
cs
lcall
nop
ss
out
push
and
cwtl
leave
out
divb
xor
sub
in
add
addr16
inc
repz
fisubl
xchg
sbb
mov
mov
les
push
add
in
push
jg
xchg
sbb
xchg
cmp
das
out
pop
pop
aad
pop
xchg
jns
sbb
sbb
mov
cmp
dec
rorb
or
es
fisttpll
jg
push
xor
ret
call
imul
cmc
stos
andb
push
scas
aad
pushf
mov
mov
test
pop
adc
add
mov
in
jne
lds
push
adc
ja
jo
xchg
lahf
out
mov
xor
dec
pop
test
ja
dec
mov
pop
icebp
outsl
cmp
mov
stc
js
cmp
sti
pop
dec
jmp
sub
push
cmpsb
xor
add
popa
add
inc
popf
or
fldt
mov
dec
std
jl
flds
das
pop
mov
cli
fcoms
out
xor
push
or
mov
xchg
jecxz
repz
cmp
sahf
outsb
fsubrs
dec
mov
jae
out
cmpl
add
and
or
dec
gs
pop
es
sbb
xchg
ret
pop
adc
scas
pop
or
jg
xchg
loope
cli
bound
insl
xor
js
insb
mov
into
sti
ja
fs
in
ret
std
xchg
push
jmp
hlt
gs
jne
and
sub
stos
pop
clc
lock
mov
fwait
push
sahf
bound
fcomps
repnz
sub
mov
inc
and
mov
mov
cmp
test
bound
loope
fstp
cli
mov
sub
ficomps
jae
or
xor
xchg
aam
add
ffree
jno
cwtl
cmc
ret
inc
sti
push
mov
add
dec
inc
setp
loop
nop
pusha
aaa
and
ficompl
fdivrs
adc
shll
mov
push
mov
dec
dec
jnp
mov
adc
test
mov
das
popa
jns
icebp
xchg
aam
fwait
movsb
xor
pop
and
sbb
adc
cs
cld
out
or
shrl
jne
xchg
jo
ret
movsb
xor
insb
sti
sbb
loop
or
aam
mov
shr
cmp
jp
inc
sbb
rcr
sti
aam
adc
loopne
or
sub
cmp
bound
jne
cmc
stos
and
jbe
and
add
popa
dec
add
jno
xlat
fbstp
adc
mov
in
int3
call
adc
pop
rcll
cmp
daa
add
push
mov
movsb
push
call
addr16
jno
popa
out
inc
xchg
push
xor
lds
dec
add
adc
mov
cli
inc
push
sub
mov
fnstsw
xchg
cmp
orb
stos
int3
mov
mov
mov
adc
xlat
cmpb
das
cmp
or
ja
xchg
inc
jbe
enter
test
push
mov
repz
jecxz
inc
xchg
in
iret
push
fdivr
xchg
push
adc
mov
bound
dec
es
cmp
jp
xor
imul
mov
cmp
nop
xor
jecxz
mov
inc
add
pop
or
mov
cmpsl
outsb
adc
or
push
sbb
mov
sti
loope
and
lods
stos
adc
pushf
popa
lea
mov
pushf
inc
and
imul
sbb
imul
idivl
push
imul
ret
cmc
lods
fdiv
jns
fnstenv
pop
sahf
and
dec
add
sbb
fmull
pop
push
sbb
push
enter
punpcklwd
das
add
push
xchg
inc
mov
insb
mov
rcr
lahf
push
push
mov
popf
aam
sbb
sahf
mov
in
out
xchg
sub
sub
mov
sbb
sbb
add
iret
xchg
push
in
jbe
or
scas
adc
out
lahf
or
test
dec
sti
add
out
mov
subb
sbb
imul
lods
sbb
cld
lret
fs
push
mov
and
mov
jge
push
popa
ljmp
subb
je
insl
pop
jne
sar
adc
lock
bound
jns
test
in
xorb
rclb
test
out
ja
inc
movsb
mov
out
mov
dec
jl
and
sbb
cmp
shlb
push
xchg
and
xchg
shll
mov
or
xchg
jno
and
push
adc
jl
sub
pop
jg
jge
into
lock
dec
cld
out
adc
mov
xchg
das
dec
add
cmp
aad
testl
xor
aaa
loope
incl
push
sbbl
jecxz
inc
or
aas
jmp
dec
pusha
fcomps
dec
inc
xchg
xchg
push
sahf
divb
scas
xchg
xchg
pop
or
bound
mov
je
and
add
rorl
xor
pop
das
mov
mov
adc
enter
inc
aas
jp
dec
imul
es
jnp
movsb
push
cli
mov
sub
mov
clc
outsl
ja
repz
leave
pop
or
and
repz
ljmp
push
push
out
dec
or
pop
and
sub
stc
mov
cltd
subb
sti
dec
adc
inc
add
pop
popa
sarl
cmp
das
subl
mov
scas
add
xor
jb
push
jae
cmp
mov
xchg
cltd
inc
or
sti
mov
out
mov
aad
jno
fdivrl
mov
mov
adc
add
add
or
jb
mov
and
jmp
mov
sub
xchg
pop
pop
fdivrs
sub
out
ret
xchg
mov
add
in
push
dec
pushf
cmpsl
loop
mov
adc
jb
lret
xchg
arpl
push
pop
fisubs
fwait
stos
int
mov
pop
jns
in
add
stos
daa
jnp
sbb
les
adc
dec
add
sbb
dec
jb
insb
mov
sbb
fsubrp
xchg
adc
jl
lods
es
xchg
mov
mov
out
icebp
test
push
sub
pop
sub
jne
dec
fldl
jne
js
push
adc
dec
jns
or
out
cmp
fs
cmpb
sub
pusha
ret
or
imul
mov
push
out
movsl
xchg
jmp
inc
int
add
in
test
push
mov
jecxz
or
stc
pop
xchg
pop
mov
dec
sbb
mov
dec
cmpsl
or
int3
jmp
sbb
call
cmpsl
sub
in
mov
fs
loope
sbb
jb
pop
and
cmp
scas
push
xchg
sbb
les
and
pop
sbb
xor
mov
mov
mov
pop
loopne
aad
fldcw
xchg
shll
sbb
add
mov
lcall
test
cmp
gs
movsl
testb
fs
std
pop
jl
lock
decb
pop
xchg
pop
add
adc
jmp
popf
call
jge
cmp
cmp
push
clc
cltd
iret
push
and
xchg
cmp
lock
cmp
jns
icebp
int3
sub
loope
sbb
jb
lods
pop
or
mov
movsb
out
jmp
xor
xor
stc
cmp
sub
dec
in
lret
nop
jno
out
jg
loopne
cmp
loope
push
ret
popf
add
test
mov
call
cmc
mov
idivl
lods
and
rcll
out
sti
out
loopne
test
jnp
rol
push
sbb
jb
cmc
lods
add
dec
jns
repnz
jg
xchg
int3
xchg
sbb
icebp
sbb
inc
test
sub
sub
sbb
jp
pop
rolb
les
addr16
imul
mov
notl
mov
cmp
popa
fisubl
and
and
hlt
popa
inc
arpl
faddl
add
add
mov
sbb
pop
cmc
test
inc
std
addr16
sub
xor
mov
lods
mov
es
and
idiv
or
mov
stc
adc
and
push
pop
iret
loope
and
popa
lcall
dec
outsl
aad
out
leave
clc
hlt
inc
stos
xchg
repz
lods
mov
adc
xor
xlat
lock
stc
push
out
loop
sub
jno
mov
test
outsb
js
fidivs
mov
pop
sbb
dec
mov
dec
stos
push
mov
scas
cs
add
add
and
push
cmp
lods
cmpsl
sarl
mov
or
stos
or
xchg
fdivrp
xor
sbb
mov
mov
in
out
xor
dec
ljmp
dec
push
aaa
stos
mov
pop
push
dec
dec
cmp
insb
dec
add
imul
xchg
fldcw
leave
mov
loopne
icebp
divb
pop
jp,pt
jno
scas
cmp
sbb
pop
xchg
lcall
dec
and
stc
and
fisubs
cmp
and
dec
dec
sahf
mov
xor
movsl
in
mov
mov
int
aam
les
je
and
pop
or
mov
mov
pop
cld
mov
and
sbbb
rorb
sub
test
jae
xchg
ljmp
mov
adc
pop
inc
shlb
xor
in
ja
sbb
push
mul
inc
insl
dec
push
outsb
mulb
pop
sbb
mov
mov
insl
int
cpuid
out
lahf
cltd
push
mov
push
xor
popf
inc
movsl
aam
or
inc
cmp
test
lods
jne
mov
pop
out
test
cmp
push
push
add
and
dec
push
adc
inc
mov
sbb
and
sbb
jnp
sahf
dec
daa
arpl
dec
pop
pop
mov
pop
imul
xchg
popf
loop
mov
push
sti
and
inc
adc
call
pusha
outsl
daa
test
sbb
test
out
or
popf
rorl
dec
inc
push
test
sub
insl
xor
jne
push
sub
jnp
sbb
lret
pop
mov
faddl
dec
std
mov
pop
mov
je
inc
mov
call
dec
in
mov
add
cmp
sti
movsl
jge,pn
inc
jbe
and
in
jle
lret
dec
push
clc
arpl
fwait
pop
jp
mov
test
aaa
add
inc
jbe
mov
jae
adc
mov
pop
xchg
add
or
lds
div
mov
jnp
mov
shll
scas
aas
dec
mov
mov
std
sbb
scas
sub
xorl
sub
mov
add
in
push
out
int
adc
fidivs
jge
mov
subl
mov
sbb
add
fwait
sub
fimull
psubw
mov
lods
fistpl
test
cmc
es
push
xchg
scas
mov
sub
pop
push
or
repnz
sub
mov
ds
in
ja
movsl
je
xor
inc
ja
mov
in
das
inc
sub
inc
ljmp
das
loope
das
jb
pushf
push
cmp
sub
sbbb
div
pop
fstps
out
cmp
xor
aas
xchg
push
test
jae
subb
cli
jl
addr16
outsb
and
sysenter
popa
cmp
mov
jb
jb
push
cwtl
loop
rep
jge
in
mov
or
push
or
iret
xchg
clc
add
outsb
or
addr16
pop
lret
gs
jno
jecxz,pn
loopne
mov
test
and
and
cmc
xor
bound
pop
popf
push
push
insl
gs
inc
jo
adc
push
mov
stc
test
sbb
ret
out
pop
xor
out
add
push
jg
mov
sub
xchg
jbe
mov
dec
stos
mov
inc
pop
aaa
or
push
push
dec
leave
xchg
lahf
mov
out
call
push
out
in
and
push
neg
nop
adc
mov
aam
testl
popf
movsl
loopne
das
cltd
inc
xchg
popf
ljmp
dec
orl
push
into
int
sbb
data16
pop
add
pop
pushf
sbb
and
sub
iret
adc
pop
xchg
dec
xorl
jmp
hlt
fnsave
push
test
push
mov
sub
sub
rcll
out
nop
mov
pushf
fdivrs
sbb
sub
jl
insl
inc
clc
das
push
and
cmp
ret
pusha
in
push
dec
outsb
sub
aam
and
loop
pushf
je
mov
iret
dec
int
add
sub
icebp
in
fsubrp
movl
inc
mov
jge
mov
iret
cmp
sub
out
cmp
sahf
loop
cmp
adcb
cli
stos
fdivr
out
shrl
cli
cmpsl
mov
in
jmp
cld
jmp
out
sub
shl
mov
sbb
and
data16
sbb
dec
daa
mov
and
sub
jp
mov
pushf
sti
shlb
lahf
mov
or
xor
lods
movb
in
rcll
adc
jmp
xchg
cmp
or
jg
rorb
ds
rcrl
inc
jbe
ret
out
lret
adc
dec
xor
jae
push
sbb
pop
mov
adc
mov
fisubrs
push
mov
mov
pop
das
adc
scas
icebp
jmp
mov
sbb
rcrb
mov
dec
stos
dec
xchg
add
xchg
hlt
cmp
push
adc
js
jb
mov
out
cld
sbb
mov
fisttps
mov
jne
and
xor
jae
sahf
inc
pop
push
arpl
push
sub
cli
pop
mov
movsl
clc
mov
mov
cltd
test
sar
out
xchg
nop
lret
js
cltd
repnz
insb
inc
repnz
clc
rcr
push
jne
in
pushl
add
and
ljmp
jmp
inc
xchg
push
mov
cmp
jbe
das
insl
stc
loope
sub
and
movb
mov
pop
icebp
inc
xor
mov
pushf
rorl
xlat
lret
scas
sbb
xorb
call
fistl
add
fsub
pop
adc
loopne
push
mov
addr16
lds
punpckhdq
fs
inc
scas
xchg
cltd
fs
pop
pop
stos
mov
les
or
bound
lods
lahf
jbe
js
imulb
adc
push
jge
sub
and
jmp
sbb
adc
cmpsl
shll
add
pushf
cwtl
sahf
adc
xorl
jno
pop
xchg
cwtl
repz
shlb
cmp
sahf
fcomps
out
jae
fcoml
or
inc
pop
mov
xchg
push
fisttps
loope
div
cmp
or
add
lret
fnstcw
popa
or
adcb
and
pop
dec
imul
xor
dec
lret
flds
adc
jno
inc
outsb
mov
xor
sbb
pop
cltd
mov
xor
pop
sub
insl
lds
enter
out
cwtl
dec
fscale
xchg
iret
fimuls
gs
fisttpll
dec
mov
pop
xchg
add
loopne
cwtl
mov
sbb
jae
mov
xor
pusha
sub
pop
call
mov
mov
jecxz
sbb
dec
push
push
es
jno
ror
sahf
xchg
cmpsb
mov
xchg
test
adc
cmp
mov
jns
jle
aad
jns
xchg
out
ret
fcom
add
in
mov
jns
mov
lret
dec
and
inc
and
cld
cli
ficompl
notb
and
jns
inc
fldt
ret
or
cld
push
push
in
cli
stos
imul
xchg
rorl
test
andb
and
in
sarb
lods
push
xor
lahf
sbb
cmpsl
pop
shl
and
cmp
cmpsb
stos
xor
mov
mov
ljmp
mov
cmp
pop
sbb
xor
mov
lret
xchg
dec
mov
in
add
imul
sar
in
out
mov
fdiv
cwtl
xchg
fsubrl
mov
add
and
lret
xchg
and
pusha
les
sbb
push
fwait
shlb
into
aas
test
mov
daa
pop
cmp
push
inc
mov
popf
ret
mov
clc
sbb
sbb
pop
inc
adc
mov
movsl
mov
mov
push
xor
mov
dec
cmovae
xor
adc
in
cmp
dec
sub
ret
pop
jle
ret
xchg
pushf
push
test
pop
inc
dec
mov
rcll
cmp
stc
test
bound
jae
loope
lret
sbb
xchg
out
clc
xchg
push
or
iret
inc
pusha
inc
jbe
lods
lahf
jns
add
mov
pop
fidivrl
xor
fldenv
xor
jecxz
adc
sbb
test
sub
gs
ds
xchg
arpl
xor
mov
call
roll
xchg
cld
mov
outsl
sbb
dec
popa
and
jecxz
mov
adc
out
or
or
push
movsl
dec
push
lcall
movsb
cld
push
xchg
pop
loop
sarb
add
orb
jb
sbb
pop
or
xchg
xchg
mov
mov
in
mov
pop
call
sbb
test
mov
push
add
mov
push
fbld
iret
mov
push
incb
insb
pop
scas
jo
cltd
mov
repnz
or
std
mov
mov
jp
inc
pop
scas
fsubl
cmp
push
xor
push
mov
jmp
mov
in
ficoml
aad
cltd
adc
cld
pop
mov
lds
aam
mov
dec
fdivs
push
add
adc
xor
insl
cwtl
mov
or
enter
cmc
rcrb
in
into
addr16
test
cs
and
leave
inc
xlat
inc
mov
xor
mov
sbb
arpl
inc
xchg
jae
mov
or
and
pop
jae
jns
mov
dec
pop
test
int
add
inc
cmp
fisubrs
repnz
aaa
not
dec
pop
pop
repz
packssdw
jle
lret
xor
mov
outsb
push
dec
dec
xor
mov
dec
mov
pop
das
xchg
es
cltd
decb
test
sti
and
and
sbb
jg
mov
dec
nop
repz
jge
push
scas
dec
cmpsl
mov
adc
scas
movsb
jbe
stos
pushl
enter
and
mov
jb
xchg
scas
insl
enter
dec
xor
push
pop
push
es
pop
fwait
add
das
push
pusha
mov
sahf
jg
xchg
mov
lea
lock
arpl
repz
mov
arpl
lods
mov
in
pop
test
rorb
roll
lret
rcrl
bsf
in
fdivs
imul
mov
in
sbb
or
test
call
imul
or
xor
pop
icebp
hlt
mov
dec
adc
cmp
cmovo
movsb
mov
sub
push
bound
sbb
loop
ds
cmp
cmp
ret
jmp
es
subl
inc
and
cmp
mov
cs
xchg
inc
mov
mov
jno
std
into
adc
aad
outsb
or
dec
xchg
test
pop
call
sub
sbb
or
inc
std
gs
mov
pop
in
sbb
pushf
or
inc
lret
adcl
faddp
push
xor
sub
movsl
dec
xorl
stc
xor
and
test
push
or
fucomi
mov
or
repz
cli
inc
or
cmp
out
stos
fsubrs
mov
mov
rcrb
push
cli
xchg
xor
add
mov
cmpb
out
push
in
aad
sbb
shll
out
and
fisttpll
jge
cmp
hlt
sub
roll
jle
popf
cwtl
mov
cmp
aaa
call
add
sbb
inc
aam
add
fimull
cmp
dec
inc
sub
mov
fisubrl
sbb
pop
test
mov
xor
das
sub
lods
push
inc
out
dec
int3
pop
sub
jp
sbb
lods
mov
cltd
fs
sbb
loope
mov
xor
clc
pop
lret
loop
pushf
xor
les
pop
push
or
mov
dec
pop
sbb
int3
cltd
rorb
and
and
jne
ret
xor
jne
arpl
push
aas
pushf
mov
push
xchg
mov
jle
push
xor
jmp
iret
cmp
push
push
mov
adc
test
insl
push
or
sti
cwtl
fldcw
pop
and
push
sub
or
jmp
cltd
cmp
lods
sub
stos
sbb
inc
lds
fistl
push
sbb
adc
sbb
ja
or
push
nop
jp
pushl
stos
fldcw
mov
out
jnp
xor
ficoms
mov
dec
sub
cmp
or
adc
jge
cmpsb
fcoms
mov
push
out
mov
aad
cwtl
dec
xchg
or
pop
outsl
mov
sahf
jmp
shrl
stc
lods
loope
lret
scas
mov
mov
icebp
sarb
xor
mov
dec
sub
sbb
mov
lds
ret
lret
jg
pop
roll
and
inc
mov
mov
icebp
inc
mov
mov
ja
frstor
rcll
mov
or
and
fildll
pop
pop
sbb
adc
gs
add
xor
and
stos
jg
or
out
clc
inc
sub
dec
jno
jge
dec
popf
pop
shll
js
outsl
lahf
insb
mov
mov
cltd
lret
cmp
jge
sbb
sahf
scas
dec
xchg
jb
jo
std
data16
loop
add
jl
add
icebp
mov
mov
mov
mov
push
mov
fwait
add
out
mov
jae
jp
mov
andl
jo
repnz
push
fisubs
jg
das
lods
cmpsb
lret
outsl
enter
inc
pusha
mov
push
ljmp
test
pop
jae
fimull
aam
aad
dec
jne
repnz
or
sbb
decb
jle
mov
sbb
and
adc
sbb
in
sbb
jle
sti
pop
adcb
js
cmp
lret
mov
jecxz
ret
mov
sbb
cmp
test
pop
cmp
mov
das
xchg
pop
lahf
test
adc
adc
insl
dec
mov
xor
cmp
xor
repz
inc
std
lds
add
jb
sub
call
inc
out
xlat
dec
push
ret
sub
mov
imul
adc
into
sub
cwtl
ja
add
cs
cmp
ljmp
popa
nop
fmuls
and
pop
lods
cmp
dec
push
cmp
fildll
dec
or
fwait
hlt
xorl
dec
loopne
lahf
test
inc
lret
sub
push
add
jmp
mov
jbe
sti
add
mov
xchg
ds
and
jbe
mov
imul
fsubr
ret
pop
pop
push
mov
js
jnp
aad
mov
or
lret
adc
mov
aas
movsb
push
lock
xchg
mov
sbb
fisttpl
add
icebp
insl
jno
outsb
test
cmp
decl
ret
or
mov
xchg
jb
jmp
adcl
push
repz
push
inc
aad
sub
jecxz,pt
fwait
pop
sub
imul
fldcw
sbb
mov
push
mov
sub
and
add
xchg
jle
jp
fstpt
lret
arpl
sbb
pop
adcb
movsl
ss
pop
sbb
daa
mul
stos
lahf
mov
jmp
fisttpll
adc
jnp
or
inc
mov
push
add
push
loope
sahf
std
jns
ds
in
lret
or
cmpl
addr16
out
jg
dec
or
jp
jo
cmp
lcall
xor
jl
jge
out
mov
or
xor
fimull
test
sahf
mov
xchg
fwait
pop
cmpsb
iret
fsubrl
mov
inc
lea
mov
lods
jbe
insl
mov
in
jnp
dec
xchg
arpl
inc
jge
and
dec
push
orb
pop
outsl
cli
add
sbb
mov
loopne
mov
pop
shlb
inc
data16
add
arpl
popl
mov
sbb
aam
fiaddl
aas
mov
add
test
out
shl
jmp
loop
loop
and
rorb
pop
vmread
pop
aaa
sub
repz
jge
push
xor
mov
adc
fsubl
or
mov
ss
ja
inc
aaa
je
jge
add
aad
arpl
mov
lods
popf
push
das
orl
dec
dec
je
mov
test
stc
cmpsl
mov
jmp
cwtl
cmp
sahf
hlt
sarl
shrl
shrb
add
jg
inc
sub
inc
fbld
add
or
xor
pop
scas
shr
fcomps
pushl
divb
dec
push
dec
jne
dec
sbb
pop
jg
and
test
in
pushf
jns
sbb
pop
sub
mov
dec
in
cli
or
jle
push
lock
add
jge
jp
cmp
iret
and
dec
push
pop
cs
jnp
push
dec
mov
and
adc
jg
aam
cmp
xchg
push
in
jl
push
push
pusha
push
das
xor
pop
gs
aad
xchg
xchg
fdivrl
adc
mov
or
jecxz
mov
mov
fucomp
dec
mov
push
lods
in
data16
add
push
call
ss
stos
jg
inc
iret
mov
pop
ljmp
and
or
loop
dec
adc
sahf
pop
push
sti
mov
xchg
mov
or
popf
shrb
push
xchg
fs
insl
mov
lret
loop
fisubrs
in
sysenter
fwait
and
cs
sub
xor
jg
aaa
adc
cmpsl
inc
cmp
mov
mov
int3
jmp
loop
mov
lds
adc
lret
out
and
push
repnz
adc
pop
rclb
data16
lock
sarb
cmp
sar
mov
mov
cmc
sub
clc
nop
ss
jne
push
clc
cmpsb
push
hlt
sub
lods
sbb
cmp
adc
repnz
das
sub
test
sub
rcr
xchg
adc
in
jp
aad
and
fldl2e
or
push
js
push
mov
adc
jge
adc
sarb
add
push
outsl
ja
sbb
data16
cld
xlat
dec
jbe
cli
cmp
int3
clc
sahf
cwtl
mov
sub
dec
xchg
and
cmp
repz
pop
movsl
call
sbb
mov
mov
jg
ficompl
inc
and
cmp
sub
sbb
push
popf
data16
adc
cld
aam
cmpsb
sub
and
xchg
xlat
sub
dec
cwtl
sbb
jno
xor
ds
and
shl
pusha
sbb
loope
imul
sbb
repnz
addl
out
add
faddl
jne
xchg
xlat
int3
ficoml
jo
hlt
dec
test
addr16
shlb
xor
and
mov
xchg
nop
iret
aaa
jmp
ja
adc
and
cwtl
hlt
repnz
mov
es
jo
mov
clc
lock
xor
outsb
mov
cli
pop
pop
int3
push
jns
push
insl
movsb
jg
mov
shrl
inc
push
sbb
mov
inc
dec
in
stos
outsb
sbbl
int3
cmc
popf
pop
mov
or
xchg
loopne
mov
jmp
lcall
inc
js,pn
fstpl
push
sub
int
sahf
lods
pushf
xchg
and
shrl
mov
imul
test
shl
pop
mov
xor
lods
sbb
adc
imul
xor
push
xchg
bound
popf
outsb
push
insb
lea
pusha
pop
push
pop
cmpl
repz
jmp
ret
fistpll
mov
xchg
in
imul
pusha
pop
adc
jle
aad
addr16
ds
out
lds
rcll
sbb
mov
jns
outsl
push
ja
xchg
sbb
sub
dec
pop
jle
inc
push
movsl
dec
or
loope
insb
fwait
mov
add
hlt
pushf
pop
jo
pop
adc
sbb
jle
iret
dec
in
cwtl
cmpsl
add
inc
sbb
mov
sub
xchg
iretw
cmp
add
rorl
push
mov
add
mov
lock
daa
in
lret
mov
cmp
inc
int3
mov
inc
test
pop
test
cwtl
jp
add
ja
loope
add
cmp
je
repnz
stc
jbe
popa
inc
jnp
add
in
je
adc
lcall
or
xchg
clc
inc
pop
add
dec
cmpsb
enter
pmuludq
mov
icebp
insl
cmp
out
jns
add
mov
inc
mov
and
aas
xor
mov
stc
call
outsl
addr16
inc
mov
stos
ficompl
jne
loope
add
sub
add
loopne
mov
or
outsl
or
sbb
jmp
mov
pop
pushf
out
fldenv
cmp
pusha
push
ja
pop
and
sbb
pushf
xchg
sahf
repnz
jae
cs
aaa
stos
pop
out
push
movsb
lea
adc
cmp
jecxz
adc
add
sbb
pop
inc
sarb
fistl
fistpll
scas
sub
iret
cwtl
sbb
mov
inc
repz
mov
cmp
xor
mov
imul
testb
sub
jns
cmp
int
xchg
out
xor
dec
mov
out
enter
push
rcl
aad
jo
pop
addr16
or
movsb
subb
dec
fimull
popf
push
cmp
cmp
xchg
hlt
jb
xchg
stos
scas
mov
and
daa
scas
cmp
cmp
pop
lcall
sarb
fucomp
xor
testb
or
ds
mov
lahf
js
mov
adc
xchg
adc
mov
jge
clc
mov
fidivl
rcrb
lock
rorb
sbb
imul
push
jg
in
adc
jg
ret
scas
sbbl
pop
pop
cli
jnp
iret
aaa
fisubs
xor
packssdw
inc
cld
sub
popf
das
pop
out
push
dec
addr16
movsl
dec
mov
inc
xchg
mov
sar
fwait
in
rorb
jb
or
sub
lea
push
and
cmp
inc
cmc
jp
jl
das
xor
clc
xchg
inc
outsb
and
scas
inc
stc
mov
and
loope
xchg
fisubl
outsl
pop
inc
aaa
and
test
push
fbstp
hlt
pop
test
xchg
add
dec
addr16
sbb
dec
fidivl
fisubrs
mov
aam
icebp
push
dec
inc
adc
dec
fnstcw
dec
xlat
movsl
adc
mov
pop
mov
leave
cwtl
cmpsb
stos
and
out
sbb
idivl
lahf
pop
jg
sbb
int
mov
mov
sub
pop
orl
xor
cmp
push
clc
pop
in
push
loope
dec
cmpsl
mov
cmc
shl
filds
pop
or
mov
xchg
sub
cli
mov
sahf
ffree
mov
jb
jae
sbb
adc
xor
pop
popf
cmp
ljmp
and
in
ljmp
in
dec
xchg
stc
fnstcw
and
enter
fidivrl
test
in
out
ret
scas
mov
ret
jne
or
inc
int
dec
pop
jg
lahf
stos
sub
xorb
insl
fs
nop
fimull
loopne
out
insb
sbb
mov
or
dec
fisubl
mov
ret
addr16
or
aam
je
and
mov
jmp
ds
xchg
cmpsb
icebp
imul
or
pushf
das
push
into
pop
push
jmp
jmp
cmp
popf
movsb
sti
cltd
pop
mov
movsl
out
xchg
mov
mov
xchg
clc
jmp
or
lret
jb
lods
in
hlt
loopne
rolb
adc
fxch
insb
jbe
lret
nop
shlb
lock
call
roll
test
inc
fwait
mov
mov
shrb
adc
dec
incl
movsb
jo
add
lock
les
test
lret
or
les
les
out
in
js
push
sub
xchg
mov
inc
and
imul
fldl
test
shrb
cmp
xchg
mov
adc
stos
ret
nop
stos
push
std
mov
push
jb
mov
mov
js
or
mov
dec
sbbl
lods
faddl
aas
push
pop
adc
mov
cmc
nop
add
push
xor
cmp
add
inc
pop
lock
shr
sahf
push
inc
aam
addb
shlb
xchg
hlt
lea
adc
lea
push
popa
mov
aam
jb
jnp
jae
std
cli
into
jns
lret
paddq
xchg
icebp
pop
and
add
pop
mov
mov
push
or
imul
popa
stos
cmp
clc
push
push
test
xor
pop
add
into
test
pop
adc
roll
aam
insb
jnp
inc
ljmp
cmp
inc
jb,pn
insb
pop
pop
mov
and
fwait
es
inc
in
jns
dec
jns
into
fdivl
inc
adc
jp
int
xor
jne
add
mov
stos
sbb
sbb
rol
dec
add
fdivrl
aas
call
lods
jo
mov
sbb
jge
into
jnp
sahf
xor
add
call
out
rolb
repz
mov
cmp
push
push
or
pop
dec
in
jbe
scas
addl
pushf
movsb
in
pop
ljmp
mov
jo
sbb
das
inc
in
out
jg
loopne
jnp
xor
adc
js
cmp
fldenv
xchg
dec
mov
bound
sbb
xchg
test
adc
ret
jbe
dec
mov
mov
push
arpl
sbb
cli
pop
ret
repnz
lods
sbb
ret
jl
insb
jo
popa
sbb
icebp
mov
jecxz
xchg
cmp
xchg
or
fnsave
pushl
sbbb
ror
mov
flds
mov
push
addr16
add
das
push
sub
mov
and
rorb
jge
xchg
xchg
insl
je
mov
daa
inc
sbb
cwtl
push
push
insb
arpl
rcll
fstpt
ret
inc
add
fcmovnb
pop
xchg
mov
in
cmp
fisttps
jb
sbb
inc
mov
mov
cmp
dec
or
dec
and
stos
dec
ja
mov
adc
and
mov
mov
cld
sbb
out
jae
setb
or
data16
mov
push
sbbl
lods
push
arpl
arpl
ret
jmp
push
aas
lods
jb
js
dec
pusha
pop
or
xor
scas
pop
xor
lret
mov
lret
push
pop
repz
xchg
pop
lret
dec
fidivl
loop
jle
mov
fwait
mov
xchg
and
sti
xchg
push
outsl
cmp
mov
add
and
mov
fdivrl
jns
push
mov
dec
mov
cmpl
insb
shrb
adc
sub
leave
js
xor
mov
lret
insl
faddl
jmp
adc
dec
rcrl
hlt
daa
cmc
adc
push
push
movsl
pop
add
mov
lret
out
mov
cltd
test
inc
sbb
pushl
inc
pop
xchg
mov
sti
jbe
push
lahf
jg
das
aaa
push
dec
xchg
stos
mov
push
jne
daa
mov
push
pop
inc
ja
outsl
ds
scas
pop
sbb
adc
mov
loopne
pop
in
xchg
pop
faddp
mov
cld
shr
shrb
dec
pop
pop
icebp
inc
ljmp
sub
lahf
cld
insl
mov
sbb
fnstsw
sahf
jne
and
pop
push
fdivl
mov
jo
add
in
outsl
faddl
fcmove
adc
xor
out
fisubs
add
inc
jge
fcomp
stos
stos
sub
mov
jg
push
test
fdivrl
ljmp
gs
mov
enter
adc
cli
and
sar
mov
dec
xor
aas
xor
sarl
mov
adc
inc
add
iret
fwait
test
push
scas
js
lahf
cmpb
repz
pslld
aad
or
adc
aas
xchg
push
and
sbb
repnz
inc
pop
mov
movsb
into
jl
popf
stc
popf
xlat
fcmovnb
movsl
outsl
inc
mov
mov
adc
jge
std
mov
aaa
rcrb
movsb
cmp
adc
and
inc
cmp
sar
cmp
push
rorb
cmp
xchg
xchg
repz
insl
sbb
and
xor
and
and
inc
aam
js
test
in
cmpsl
mov
das
sub
lret
dec
or
mov
push
in
rcl
mov
pop
add
rcrb
insl
es
gs
cwtl
jae
cmp
xchg
or
into
mov
aas
sub
push
or
mov
outsb
cld
mov
and
adc
jle
push
xorl
mov
cltd
pushf
xchg
in
cmpsl
stos
insb
push
xor
jb
test
out
xchg
add
shlb
int3
lret
or
mov
cmp
inc
in
xchg
imul
adc
mov
mov
pop
mov
pop
push
or
mov
fsubrp
mov
pushf
lock
rcrb
mov
or
inc
push
enter
or
and
inc
sub
jnp
jb
mov
sti
sub
mov
cmc
mov
fdivp
mov
aaa
insl
stos
mov
popa
addr16
sub
int
scas
outsb
lret
andb
inc
pop
lahf
pop
pusha
or
cmpsb
add
add
shr
mov
rcl
inc
test
add
fstpt
lret
mov
inc
push
fmull
xchg
mov
push
xchg
jb
lock
ret
sub
shrb
sti
jge
sarl
loope
cld
push
sub
push
mov
and
enter
in
imul
add
jge
aaa
mov
sub
int3
add
bound
mov
hlt
dec
pop
lods
xlat
lock
sub
cmp
push
sahf
dec
mov
out
jp
ljmp
std
cld
cwtl
nop
cld
movsb
movsb
cmc
cltd
or
enter
cmp
xor
push
loopne
and
movl
mov
mov
dec
jae
ret
mov
nop
and
insl
ret
sahf
out
repz
inc
lods
mov
js
aad
xor
push
xor
push
scas
push
int
fistps
iret
call
int3
lds
loope
xor
sbb
cmp
pusha
add
bound
mov
inc
inc
xchg
mov
rcrb
pushf
push
cwtl
imul
and
lods
dec
ret
mov
insb
lods
inc
out
imul
mov
setl
adc
adc
mov
lahf
add
and
push
and
aam
lock
mov
mov
test
fdivl
push
loop
hlt
sub
lea
and
inc
js
cmpsb
mov
sti
mov
decl
in
sbb
jns
sub
sub
or
pop
shll
mov
pop
adc
push
cmp
push
outsl
mov
fisubl
jmp
shlb
leave
mov
mov
into
adc
jnp
and
push
push
rcr
xor
mov
mov
cli
movsl
pushf
pop
jmp
outsb
int
dec
inc
adc
push
cmp
flds
dec
icebp
pop
shl
cmp
adc
popf
dec
mov
popa
sub
sub
in
ljmp
dec
jle
inc
add
ret
mov
mov
lock
out
mov
outsl
cmpsl
mov
mov
sbb
xchg
ja
cmp
pushf
cltd
sti
mov
loope
push
sar
outsb
and
pushf
jle
or
jb
cwtl
mov
daa
mov
jg
pop
sub
cmp
jno
dec
pop
mov
je
das
mov
xor
sub
pop
sub
push
push
or
insl
sbb
or
repnz
ror
jge
in
sarl
add
mov
sub
add
xor
in
int
mov
xchg
out
out
add
aaa
push
test
test
mov
inc
pop
subl
lahf
inc
inc
in
aam
lock
js
fcmovb
outsl
stc
icebp
repz
mov
push
aad
test
test
lcall
jb
dec
enter
xor
mov
stc
sar
nop
inc
inc
push
xor
xor
ret
jl
scas
dec
shll
mov
test
aad
pop
jns
sbb
arpl
jmp
fsts
jnp
aas
mov
test
pop
in
adc
mov
inc
push
cmp
ja
cmp
sahf
jne
mov
cld
andl
sbb
repz
subl
setb
or
push
cli
lcall
test
mov
push
lods
data16
ss
adc
mov
into
sbb
jle
xor
adc
fisttpl
nop
push
add
push
sub
jae
push
rorb
mov
push
sbb
pop
adc
cld
enter
jns
subl
mov
dec
dec
add
movsl
jne
dec
lahf
sub
add
push
bound
sub
call
cld
dec
pop
repnz
add
dec
fstl
mov
lea
mov
aam
mov
inc
sub
xchg
lds
stc
add
aaa
add
sub
pop
inc
adc
push
je
ret
lcall
test
adc
movsb
mov
clc
mov
fwait
cmp
data16
push
add
cmpsb
pop
out
call
fwait
enter
cmp
mov
sub
dec
into
clc
pop
je
aas
leave
mov
iret
bswap
popa
sbb
popa
cwtl
or
cld
dec
cmpsl
movsl
mov
data16
dec
xor
and
and
mov
dec
jmp
mov
push
repz
call
imul
stc
add
arpl
sub
xchg
mov
jb
jb
sub
outsb
pop
mov
ljmp
inc
movsb
lds
jge
frstor
jle
pop
imul
xchg
push
jbe
fs
mov
out
xor
jge
mov
sbb
jge
xchg
pop
sbb
mov
cltd
aaa
mov
mov
mov
int3
push
mov
into
dec
jp
xchg
xlat
push
repz
insl
xchg
mov
loope
imull
or
mov
mov
push
shlb
in
hlt
scas
repnz
bnd
push
enter
mov
aad
lea
rorl
xor
fsubs
iret
mov
iret
sub
or
adc
cmpl
pop
cwtl
test
or
outsb
push
cmp
adc
or
or
jae
jnp
add
push
dec
sbb
xchg
xchg
adc
fbstp
jecxz
xorl
add
int
sub
mov
push
rorb
fidivrs
or
aam
cmp
push
xlat
mov
outsb
inc
xorl
in
mov
mov
push
xchg
lret
and
xor
push
fistpl
sub
jbe
mov
stos
sbb
jle
xchg
mov
cli
stos
loopne
lds
mov
jp
fldcw
loop
or
xor
sbb
cmp
xchg
xchg
sbb
sbbl
mov
pop
lock
in
pop
test
jp
xchg
sub
dec
clc
fwait
sub
sbb
test
ja
fimull
popf
inc
mov
notb
testl
jecxz
mov
add
nop
and
push
fisubrl
stos
xchg
fcomp
push
jb
cmpsb
leave
sub
mov
mov
stos
mov
inc
adc
outsl
loop
loop
psrld
sbb
rcrb
pop
icebp
sbb
rcll
je
cli
adc
mov
adc
push
aam
addb
sub
scas
dec
lds
and
jno
jae
into
jo
jae
scas
int
or
sbb
fwait
fwait
in
inc
pushf
xchg
xor
mov
adc
insl
unpckhps
jp
les
cmp
or
ja
add
into
xchg
xlat
fidivs
int
mov
mov
adc
cwtl
pusha
sub
es
pop
mov
push
test
or
cwtl
pop
call
stos
mov
mov
cli
lea
or
or
jle
shl
push
mov
out
sbb
loop
push
mov
sbb
repz
add
jl
std
out
push
cmpsl
push
xorl
xorl
and
xchg
inc
dec
xlat
xchg
jge
or
sti
jge
mov
notl
sti
jo
or
adc
dec
lret
push
pushfw
sahf
push
je
jae
pushf
cmp
mov
fldt
cltd
mov
add
jl
xchg
dec
push
nop
fcomip
add
jmp
stos
jne
mov
clc
pop
lock
adc
jecxz
out
aad
cmpb
jo
mov
scas
cmpsb
leave
ja
insb
inc
rcll
mov
adc
pop
pusha
cmpl
jmp
jne
js
pop
aam
or
popa
clc
push
fistpll
adc
mov
sbb
push
mov
daa
xor
repnz
mov
adc
adc
jecxz
cwtl
xchg
loope
xor
and
cli
sub
adc
or
in
das
xor
jo
cmp
jns
pop
ja
out
mov
xor
xor
mov
sub
setne
push
cld
loope
orl
push
sbb
cmp
jmp
cmp
inc
mov
inc
xor
outsb
into
sbb
jecxz
in
pop
sbb
addr16
sti
inc
les
jnp
pop
cli
movsl
inc
fwait
pop
mov
mov
lds
inc
jle
stc
mov
shrb
sbb
xor
inc
test
ss
fbld
mov
pop
jecxz
dec
movsb
adc
jnp
imul
insl
add
cmpsl
pop
push
movsb
inc
fisubrl
cbtw
cltd
fs
add
fiadds
sbb
inc
in
pop
nop
out
or
inc
lahf
adc
add
test
xor
jge,pn
mov
pop
cld
sbb
mov
cmp
pushf
mov
mov
inc
in
xchg
nop
clc
pop
jo
lcall
idiv
mov
ds
std
push
pop
popa
popa
jg
notl
shr
js
lea
in
cmp
lock
test
pop
pop
adc
aas
aam
stc
mov
push
jge
cltd
lds
mov
xor
rcrb
outsl
push
js
lods
and
pushf
repnz
mov
xchg
push
or
movsl
mov
imul
mov
xor
cmp
popf
out
shr
adc
cwtl
cli
repnz
sbb
pop
in
push
push
pop
push
pusha
add
adc
push
mov
lock
movsb
cmp
cs
cli
sbb
jmp
dec
das
ja
pop
pop
popf
cmp
cli
and
das
test
test
cmpsl
xor
pop
fdiv
daa
ficompl
jle
popa
push
xchg
adc
push
adc
inc
inc
imul
jmp
xlat
cmp
mov
dec
pop
sub
dec
mov
clc
dec
push
jge
adc
leave
and
xchg
fdivp
repnz
push
fdivrl
mov
and
std
push
mov
or
in
addr16
mov
pop
inc
arpl
pop
xor
add
popf
ljmp
lods
ds
xor
sub
sbb
out
xor
sbb
jae
mov
loope
cmp
sbb
adc
inc
outsb
sbb
mov
mov
jns
pushf
loop
sub
icebp
in
mov
cmp
push
jnp
lock
mov
xchg
mov
jl
addr16
cmp
add
jge
xchg
lcall
shll
sub
sahf
pop
sbb
cmp
add
mov
out
xchg
aad
nop
fidivrl
mov
sub
cmp
fnstsw
test
sbb
lahf
xor
pop
sbb
xlat
mov
mov
std
daa
jl
dec
imul
push
pop
inc
pop
mov
mov
lods
cltd
daa
in
ja
test
fcomp
test
jg
pop
je
dec
sbb
sub
out
jg
icebp
out
or
xchg
insb
and
pop
movsb
pop
hlt
test
add
sbb
daa
xor
or
sub
hlt
ljmp
ret
test
inc
adc
pop
mov
inc
and
mov
mov
mov
lret
ds
int3
lret
loop
shr
outsl
dec
lea
xor
jno
imul
mov
add
pop
fwait
add
jae
or
sbb
mov
pop
mov
xchg
xchg
jecxz
pop
adc
cld
sar
sti
arpl
add
pop
pop
push
lahf
cmpsl
mov
sarb
hlt
push
es
rcrb
jnp
ds
adc
jbe
lahf
fcomps
leave
mov
aas
xchg
mov
lcall
sbb
push
hlt
imul
pushf
xchg
pop
push
nop
dec
mov
cmp
repz
xchg
pusha
addr16
adc
push
fs
add
sub
add
popa
fstpt
shrl
int
test
jne
loopne
data16
test
std
fsub
cli
mov
xchg
pop
fistpll
imul
pushf
jg
call
pop
out
adc
shlb
or
nop
imul
pushf
inc
addr16
movsb
mov
xchg
and
inc
pushl
sub
rclb
addr16
sbbl
insb
push
mov
jl
fcomps
jno
lods
cs
xchg
inc
hlt
or
mov
xor
adc
mov
xchg
mov
aas
jmp
jge
mov
mov
lock
mov
inc
cmp
shll
cmpsl
inc
int
test
dec
movsb
push
xorb
imulb
cmp
jne
lods
data16
inc
jns
fnstcw
std
dec
dec
lcall
xchg
fdivrl
mov
scas
cmp
bound
push
mov
pop
mov
fidivs
or
pop
push
add
add
lds
gs
xchg
jo
and
das
into
mov
lcall
jnp
mov
lods
adc
in
mov
mov
push
repnz
loope
pushf
xor
loope
push
add
lock
jg
adc
or
jmp
clc
xchg
fcmovnbe
call
outsb
jecxz
fcoms
cs
jle
xchg
insb
popf
add
sarb
cld
sub
filds
sbbl
subb
scas
cs
out
jmp
sarb
add
xchg
mov
pop
mov
inc
jno
ret
or
cld
subb
cwtl
push
les
lret
lods
scas
loopne
clc
or
in
lock
lret
mov
mov
jo
test
jb
xor
lds
es
fsubs
push
push
mov
cmc
push
out
scas
or
lods
nopl
push
in
sub
roll
dec
sbb
cmpsb
je
insb
iret
ja
out
test
jns
dec
add
xor
repz
loope
mov
iret
and
adc
andb
ds
aas
js
push
sti
mov
test
or
xor
adc
cmc
mov
adc
std
push
in
mov
sbbl
mov
sti
sub
cmovno
jecxz
outsb
pushf
pop
pop
nop
pop
pop
jmp
lret
loope
das
ret
xor
fnsave
jo
movsb
mov
mov
cmp
add
xchg
aam
dec
mov
push
aas
aad
mov
and
cmpsb
repz
in
pop
push
inc
enter
or
mov
lret
das
cmpsl
lret
push
mov
hlt
dec
inc
std
popa
enter
pop
mov
fidivrl
mov
inc
pop
adc
push
sbb
dec
adc
fistps
test
add
inc
dec
lret
mov
cmc
lock
jmp
add
dec
mov
fbstp
sbb
fsub
mov
xchg
or
inc
inc
inc
in
roll
cli
insl
pop
addb
sbb
lods
sub
loop
test
aaa
roll
nop
roll
mov
shrl
rolb
mov
fnsave
sbb
or
pop
call
cli
cli
je
icebp
jmp
repnz
ja
in
add
xchg
jp
xchg
dec
push
cli
cmp
hlt
xor
aaa
aam
movsl
out
mov
inc
add
stc
sbb
mov
fisttpl
in
mov
jmp
mov
cmpsb
dec
cmpsb
in
scas
dec
mov
xor
inc
jo
call
jns
xor
inc
lods
add
rclb
jnp
or
push
daa
fdivrs
or
mov
sub
dec
ret
addr16
lods
movaps
jnp
xchg
sbb
popf
cmpsb
inc
sub
out
jl
jne
mov
call
or
mov
es
adc
pop
loopne
push
lret
jb
pop
add
jne
lea
jp
xchg
pusha
lods
scas
insb
rol
cmp
lods
jae
test
lcall
xorb
mov
xchg
js
cmp
lds
shrb
ljmp
mov
pop
in
aas
mov
rcrl
sbb
mov
push
fcoml
xor
jno
dec
and
cmc
mov
stos
xor
cmp
pop
pop
test
inc
xchg
popa
mov
pop
jae
mov
inc
jns
cmp
cmpsl
bound
fwait
dec
ljmp
in
inc
test
das
inc
loopne
shlb
pop
aas
clc
das
mov
shll
sbb
das
and
test
inc
lods
ds
enter
push
push
pop
arpl
sbb
fistpll
test
push
daa
dec
inc
mov
pop
push
dec
sub
sarl
dec
pop
inc
pop
cmp
insl
lahf
inc
insb
lahf
push
mov
xor
scas
repnz
setno
fsubs
inc
daa
mov
cmp
inc
pop
aad
push
pop
mov
outsb
pop
shl
and
lods
adc
add
mov
xchg
or
sub
les
xchg
and
je
sbb
stc
rolb
xor
roll
out
int
inc
repnz
xchg
test
push
outsb
add
stc
or
addl
xor
xorb
jl
arpl
mov
push
imul
fdivrl
popf
pushf
leave
push
push
add
sbb
out
into
dec
or
xchg
push
jmp
pusha
out
jae
icebp
push
loope
daa
setb
popf
int
fwait
or
xchg
aam
aad
stc
jg
in
daa
test
rol
test
push
aam
fs
in
decl
arpl
lcall
add
mov
jae
repz
mov
xchg
push
adcb
dec
lahf
sub
push
js
aam
and
repz
or
in
sbb
adc
cmc
cmp
xchg
pushf
ja
jmp
sbb
cmp
scas
xchg
push
sub
fs
mov
dec
data16
adc
xchg
sbb
adc
lea
int3
xor
and
push
jae
and
push
mov
hlt
xchg
xor
scas
jno
jns
lock
lret
push
or
aaa
mov
jo
jg
pop
int
es
inc
in
cmp
xchg
ljmp
inc
or
add
xchg
ljmp
nop
adc
dec
cmp
cmpsl
mov
adc
into
cmp
push
shr
mov
adc
sbb
push
gs
leave
leave
xchg
cmp
inc
rol
scas
sqrtps
pop
out
mov
out
pushf
mov
test
mov
mov
mov
jb
mov
mov
cmp
xchg
adc
fcmovnb
cmp
dec
inc
ss
int3
push
adc
or
mov
int3
dec
add
sub
sbb
aaa
push
aad
clc
dec
test
lods
xchg
jecxz
mov
add
aad
std
xchg
cs
or
lahf
dec
sbb
pusha
xor
jns
xor
rcl
outsb
sahf
and
push
lret
sbb
inc
rol
addr16
adc
jo
and
and
rclb
inc
cli
add
lock
movl
sub
push
pop
out
sbb
push
xor
sti
add
add
js
sbb
jb
lds
inc
test
sbb
inc
xchg
arpl
pusha
fmulp
mov
mov
popf
mov
push
push
dec
push
xchg
cli
mov
lods
jg
xor
lret
ss
sbbl
aam
int3
ds
ds
inc
xchg
sbb
cmp
fs
pusha
sbb
and
mov
ret
pop
mov
insl
je
cmpb
outsl
push
push
imul
rcl
scas
dec
sub
add
xchg
imul
in
pushf
addl
fmull
xor
scas
lret
outsl
cwtl
lret
cmpsl
cmpsb
int
flds
lock
pop
cmp
ds
scas
xor
push
pop
push
sub
add
mov
sub
fs
sub
sbb
cs
add
xchg
dec
int
pop
push
out
outsb
cmp
and
popf
xchg
sbbb
pop
xor
sbb
xchg
icebp
sbb
jb
push
hlt
add
push
dec
addr16
xchg
push
push
inc
ds
push
sub
bound
repnz
div
inc
cmp
cmpl
mov
in
lret
lds
push
sbb
fcmovnu
fstpt
and
loope
or
sar
xor
mov
ret
adc
std
enter
lods
pop
jnp
or
mov
fistl
outsb
fidivs
jge
in
jle
mov
int
sti
cmp
jge
test
mov
xor
or
or
fcmovnu
call
push
inc
mov
pushf
push
jne
xor
addr16
add
xor
jge
sbb
mov
rcrl
ret
add
rcr
pop
popa
repz
inc
scas
lods
cwtl
adc
mov
mov
push
push
mov
mov
sub
jbe
and
pop
mov
out
sub
jo
sub
mov
aaa
fucom
add
roll
jmp
inc
cltd
push
jmp
jl
fstpl
mov
push
and
xorl
jo
bound
pop
jb
fisubs
andl
xchg
icebp
cmp
dec
push
pushf
sub
iret
jnp
sub
test
mov
mov
aad
xchg
aad
add
mov
loop
cli
cmp
sub
add
addb
or
orb
mov
add
movsl
dec
in
jno
fisubrl
sbb
js
sbb
shl
rcll
inc
cmpsl
pop
rcr
mov
mov
pusha
sub
push
hlt
push
inc
xchg
scas
mov
aas
jp
and
and
push
adc
arpl
int
cmpsb
icebp
mov
push
xor
jbe
or
inc
and
jge
mov
push
js
cmp
pop
sbb
dec
xchg
imul
dec
jno
fbld
rcrl
jne
gs
call
shlb
call
data16
sub
icebp
insb
mov
pop
pop
push
jb
mov
cmp
jge
mov
jns
stos
add
mov
out
add
sub
out
jne
lods
mov
loopne
xlat
jnp
ljmp
push
out
or
out
in
xlat
out
test
scas
fmull
or
call
icebp
das
hlt
adc
ja
sub
je
pop
gs
pusha
test
fstpl
add
mov
pop
or
jmp
push
int3
add
push
std
jo
sbb
jp
lods
in
inc
sub
call
rcrl
xchg
cmp
ficoml
xlat
mov
inc
popf
cmp
fcoms
fs
inc
rorl
mov
in
std
out
iret
xchg
scas
cld
inc
outsl
adc
adc
test
lret
jg
orl
and
hlt
call
xor
xchg
sub
adc
mov
testb
ror
les
fnsave
enter
rcr
pop
mov
xor
and
xchg
test
fistpl
push
fdivrl
jo
pop
out
aad
add
add
xor
jne
ja
je
xor
bound
xor
out
lods
and
std
imul
and
sub
adc
pop
das
or
push
xchg
fwait
rorb
and
adcl
outsb
pop
mov
jb
movsl
loop
scas
iret
aas
cmpsl
les
adcl
mov
imulb
movsl
fmuls
jmp
in
in
sub
xchg
je
xor
inc
xlat
call
pop
xchg
lea
out
inc
mov
push
mov
cmpsb
out
pop
rolb
cmp
jb
and
test
and
mov
stos
push
shl
mov
sbb
push
add
dec
jecxz
pop
imul
xchg
outsb
push
xor
xchg
sbb
jne
fnstsw
sbb
sub
inc
push
mov
sbb
add
imul
jnp
arpl
int
cmp
pop
aaa
jbe
arpl
popa
mov
mov
divb
dec
addr16
fistl
add
xchg
ret
iret
xor
add
push
and
jecxz
imul
xchg
es
jb
out
ss
pop
jl
scas
aam
shrb
ret
lea
push
clc
push
gs
rorb
mulb
mov
das
mov
jecxz
adc
pop
xchg
or
push
in
jp
outsb
and
std
sbb
rorb
inc
xor
test
inc
jmp
sbb
xchg
mov
arpl
es
add
mov
adc
lret
xor
js
js
mov
je
push
addr16
or
xchg
dec
iret
fsincos
ljmp
jmp
out
in
hlt
and
repz
sub
lock
mov
in
pop
sbb
or
iret
xchg
push
dec
and
mov
enter
mov
xchg
in
fistl
mov
xchg
cmpsl
iret
inc
mov
jle
stos
pusha
pop
inc
sahf
mov
orb
cmp
mov
add
loope
adc
add
je
xchg
repz
mov
xor
inc
xor
mov
dec
test
push
xchg
cmpsl
test
out
adc
lret
push
push
xchg
add
imul
cmp
stc
or
dec
lret
bound
sub
mov
push
dec
movb
cmp
out
lds
jle
and
insl
bound
push
mov
push
or
xlat
fnstsw
scas
and
mov
mov
push
ds
cmpsl
pop
add
divl
xchg
pop
inc
cmpsb
sub
or
pop
mov
fwait
rcrb
xor
jae
mov
insl
out
test
repz
xchg
cli
or
add
fcoml
inc
sbb
mov
mov
shr
popa
pop
xor
fisttps
adc
push
aaa
cld
mov
xchg
push
or
and
scas
leave
mov
bound
and
jmp
insb
scas
cltd
mov
fisubrs
adc
cmp
mov
cs
jecxz
inc
popf
push
pop
cmpl
cmp
pop
pop
test
mov
xchg
int3
andnps
adc
dec
subb
gs
jne
jno
push
aad
sbb
cmp
es
fs
mov
xchg
enter
je
scas
das
jge
pop
cmp
or
inc
xchg
out
mov
mov
addr16
cmpsl
fcoml
xor
or
daa
dec
out
mov
adcl
mov
xchg
in
mov
scas
sbb
push
pushf
aas
sbb
jb
popf
ss
xchg
testb
scas
adc
pop
inc
lods
xchg
stos
das
xchg
sbb
sbb
outsb
dec
cmpsb
cmp
xchg
pushf
stos
setge
imul
push
std
and
add
pop
jmp
cmp
call
add
insb
adc
sbb
les
push
cmp
cmc
jo
movsb
pop
mov
push
xchg
pavgb
inc
addr16
cmpsl
std
addl
pop
mov
test
jg
xchg
adc
dec
inc
int3
into
sub
jbe
outsl
adc
dec
fwait
pop
or
stc
inc
or
add
jne
fildll
clc
movsl
sub
call
insl
imul
mov
stos
data16
and
adc
ja
shll
mov
shll
addb
mov
pop
pop
mov
ds
adc
dec
or
pop
nop
ss
xchg
test
rcll
clc
repz
into
sub
cmc
shl
es
lahf
je
sarb
fldenv
rcrb
jp
cmpb
xchg
inc
popa
xor
adc
xlat
sbb
push
push
push
insl
test
cli
mov
out
sub
push
or
xor
pop
xchg
sbb
and
jo
push
or
popa
cld
stos
sbb
das
dec
insl
xchg
mov
mov
push
or
das
adc
add
out
lods
inc
push
push
sbb
inc
das
mov
or
cld
dec
stos
add
xchg
mov
add
cmp
in
pop
dec
xchg
inc
mov
add
cltd
out
sub
adc
ret
scas
out
mov
pop
and
or
subb
repz
sahf
ss
outsb
mov
and
mov
push
push
rcrl
pop
int3
sub
xchg
push
mov
ljmp
xchg
mov
andl
shrl
cmp
mov
sbbb
leave
mov
movsl
mov
pop
xor
jecxz
repnz
loopne
cs
ret
cmp
inc
aas
lods
mov
pop
pop
mov
movsb
test
cmc
xorps
shll
in
cmp
daa
or
xlat
out
bound
sub
sbb
mov
mov
add
imul
lock
dec
jle
dec
mov
outsl
aad
inc
ds
cmp
arpl
xorl
lcall
cs
test
movsb
into
mov
inc
sbb
xchg
orl
sub
loopne
aaa
mov
in
or
movsl
les
ja
cwtl
into
pop
cmp
dec
adc
add
sub
loope
fsubrl
dec
and
pop
call
xchg
icebp
cs
pop
or
jg
add
stos
cs
add
pop
hlt
mov
ds
test
jns
movsb
shll
cli
mov
lret
mov
addr16
mov
dec
mov
xor
test
addr16
shlb
popa
mov
cmc
lods
add
xchg
sub
and
sub
dec
cmp
inc
enter
add
adc
jecxz
dec
mov
imul
aad
fdivl
mov
fwait
leave
icebp
fs
xor
xor
aas
and
push
les
call
and
mov
mov
scas
pushl
lea
stos
divl
cltd
cmpsb
push
or
aas
lret
jo
add
movsb
fdivrs
inc
cmp
jno
aaa
insl
and
andb
repz
cmp
imul
mov
lds
out
dec
das
dec
jo
ss
stos
sbb
aaa
flds
push
xor
add
scas
data16
mov
xchg
sub
aad
xor
inc
out
mov
adcl
scas
xor
jmp
jmp
adc
ret
pop
jo
jecxz
xlat
or
ja
test
xchg
xlat
xchg
mov
cmp
xchg
stc
arpl
cmp
mov
call
sbb
dec
xor
stos
jmp
leave
dec
int
scas
sub
frstor
jmp
adc
movl
rorl
mov
imul
test
xor
dec
cmc
mov
adc
loope
jle
xchg
into
insl
push
je
negl
shrb
mov
and
jp
js
shll
mov
fsubr
rorb
inc
add
test
les
daa
loope
js,pt
jmp
std
push
dec
adc
jae
arpl
inc
scas
lahf
lock
xchg
sub
sub
and
in
insb
jp
sub
outsb
and
sub
ljmp
sahf
pop
arpl
movsl
ja
cli
push
cmp
outsl
pop
xor
and
popa
and
cmpsl
mov
js
or
lahf
cwtl
test
pop
mov
sahf
mov
lods
imul
sbb
sub
testl
insl
mov
inc
jg
fsub
cld
mov
xor
mov
filds
mov
in
dec
daa
xchg
notb
push
nop
stos
mov
jl
and
adc
pop
sbb
repnz
adc
jle
jno
mov
scas
adc
sbb
scas
dec
ljmp
push
pushf
das
iret
push
mov
add
mov
pop
dec
push
or
mov
loopne
xor
fsubrs
bound
mov
pop
fisttps
xor
jo
push
add
mov
lahf
inc
jmp
mov
loop
dec
aaa
push
and
andl
mov
cmpsl
pop
fsubs
xchg
pop
mov
pop
and
jo
sbb
leave
daa
movsl
je
ret
cltd
bound
popf
or
dec
jns
and
mov
cmc
pop
or
arpl
imul
inc
call
stos
je
cmc
xor
jno
or
sahf
push
or
cltd
pop
leave
inc
sbb
cmp
mov
lods
jbe
adcl
out
mov
clc
adc
mov
inc
jnp
xchg
or
xor
test
jo
mov
cld
ficompl
push
push
je
fsts
sub
repz
addr16
adc
mov
in
xchg
jl
cmp
andb
push
inc
sub
dec
rcrl
mov
jne
jge
cs
movsl
and
sbb
gs
or
in
cmp
xor
fstp
push
sbb
jbe
lods
pop
dec
add
pop
mov
cmp
popf
psraw
jbe
ljmp
in
xor
sub
push
sbb
jne
push
mov
xor
cmpsl
adc
inc
aas
dec
mov
loopne
aam
les
lods
out
jae
inc
push
adc
clc
sbb
lds
mov
pop
in
adc
inc
sbbb
repnz
cmc
je
ss
jns
xor
cmp
adc
cmp
mov
xchg
mov
out
scas
push
cmp
popa
mov
fmulp
pop
jno
fisttpll
ljmp
push
arpl
pop
mov
mov
sbb
out
dec
and
xchg
pop
jge
mov
or
mov
mov
stc
mov
adc
pop
fidivs
loopne
ja
shrl
jl
stc
sub
jle
xchg
mov
test
enter
insl
into
lret
mov
int
and
lea
daa
mov
rcr
fists
fldl2t
test
push
pop
mov
int
loopne
insb
cmp
cs
fs
mov
pop
loop
push
and
sbb
lds
call
mov
dec
jecxz
xchg
lcall
mov
repz
sub
or
xchg
movsl
xor
lcall
data16
stc
out
in
sahf
cmpsl
and
mov
xchg
stos
insb
aaa
push
xchg
add
lahf
push
cmp
or
xchg
scas
xchg
or
xor
mov
or
and
pop
sub
mov
arpl
icebp
dec
ret
sub
xchg
mov
scas
mov
out
xor
imul
daa
pop
loop
rolb
xchg
jl
lahf
mov
pop
pop
mov
cmpl
mov
cmpsb
pop
subl
pop
adc
xor
aam
in
rorl
jo
out
fs
shlb
pop
scas
adc
aam
leave
push
imul
jmp
aad
xlat
mov
scas
ds
push
and
inc
or
cmp
or
fistl
jmp
xchg
jb
push
sub
aas
js
mov
xorps
stc
int
mov
cmp
and
mov
lods
mov
cmp
out
cmpsb
dec
test
cmpsl
and
icebp
ficoml
push
add
movsb
movsl
out
enter
sub
pop
mov
pop
loope
aam
jbe
xchg
mov
inc
jns
sahf
add
inc
pop
ret
int
and
aaa
lcall
push
jge
mov
testb
nop
sub
das
test
aas
or
xor
ljmp
jbe
cmpsl
les
dec
inc
stc
and
lcall
outsb
lret
dec
xchg
mov
into
mov
and
push
cmp
cmpsb
ror
iret
rol
test
mov
and
mov
nop
cs
push
and
dec
add
push
fcomp
inc
fistl
pushf
sbb
xor
loope
fwait
lea
fsubrl
cmpsl
into
cmp
lahf
cmp
mov
ret
jmp
imul
adc
jno
push
push
mov
mov
fdivp
sub
repz
push
xchg
in
fs
pop
adc
cmpsl
dec
xor
imul
adc
insb
stc
pushaw
js
sbb
std
sahf
lahf
jecxz
mov
or
push
mov
aaa
imul
sbb
jo
test
jecxz
or
jns
ja
add
dec
cmp
mov
push
je
loope
dec
mov
arpl
pusha
shlb
cmc
loopne
cwtl
cmp
xlat
mov
gs
push
add
imul
insl
pop
mov
xlat
rorb
clc
mov
imul
xor
in
mov
sub
shl
insl
insb
push
dec
imul
aam
rorb
es
dec
cmc
ja
jp
out
xorl
mov
inc
mull
push
ret
lahf
mov
mov
push
cmp
pop
stos
fldenv
lret
xchg
xor
add
nop
inc
fsubrs
add
xchg
movsl
js
or
data16
fbstp
out
xchg
and
or
pushf
dec
lcall
popa
dec
mov
cmp
and
scas
jns
and
out
dec
cwtl
sbb
movsb
insb
aas
mov
popf
xchg
push
dec
ljmp
xchg
xchg
in
dec
sahf
ds
dec
outsl
cmpsl
movsb
jns
mov
loopne
lea
inc
push
mov
xor
cwtl
ljmp
mov
push
cmp
leave
stc
xchg
in
jg
lock
or
mov
jmp
dec
imul
jg
sbb
xchg
pop
pop
sbb
push
pop
add
push
insb
or
mov
in
jo
das
cmp
iret
repz
mov
dec
fsubs
scas
cmc
jmp
test
pop
add
jbe
lock
push
mov
mov
xchg
xor
out
scas
gs
jmp
test
pop
fcmove
and
adc
cld
mov
xchg
rorb
hlt
scas
mov
popf
fiaddl
push
push
or
out
in
call
fistpl
mov
imul
or
in
push
cwtl
jno
daa
pop
out
add
xor
aas
andl
mov
push
inc
sbb
idivb
dec
pushf
in
fwait
xorb
jl
mov
cwtl
adc
mov
pop
xor
movsb
or
arpl
loopne
fcmovbe
dec
push
inc
xor
xor
pop
imul
adc
loopne
jecxz
add
xchg
pushf
aam
add
lods
fistps
add
cmp
rclb
aas
and
roll
out
add
push
lds
int
pop
les
dec
out
add
test
jnp
add
in
mov
mov
in
pop
add
fmul
add
test
cmp
sbb
inc
cmp
test
cmpsb
dec
imull
xchg
pop
adc
sbb
fs
lahf
xchg
push
mov
shll
out
ljmp
mov
jge
fsubrs
push
cmpsb
pop
sub
jle
sbb
sub
divb
out
hlt
lret
rcll
xchg
sbb
pusha
pushl
notl
mov
add
icebp
push
loopne
adc
add
xchg
in
cmp
mov
xchg
mull
mulb
outsb
push
inc
inc
bound
mov
xchg
xchg
repnz
in
push
lret
aam
test
cmpl
cwtl
test
repnz
int
inc
pop
xor
sbb
leave
out
test
mov
xchg
clc
lcall
xchg
stc
dec
outsl
mov
adc
test
lahf
movsl
xor
mov
mov
and
ret
cli
rcrb
lret
out
popa
js
and
out
imulb
mov
lcall
inc
xchg
inc
adc
pop
and
sbb
sbb
dec
jge
sub
fistpll
push
mov
adc
xchg
xor
mov
sbb
lds
cmc
xor
mov
add
adc
aas
out
mov
sub
insl
adc
in
adc
scas
cmp
or
mov
and
jg
sub
cld
clc
dec
add
dec
mov
idivl
xor
or
rcrl
ret
scas
cmp
mov
ljmp
sbb
cmp
inc
ror
ss
idivl
mov
sub
sub
int3
jns
push
mov
add
stc
or
dec
jg
cmpsl
es
shlb
jmp
pop
and
fsubs
out
push
imul
jae
jb
sbb
insb
cmpb
and
xchg
fnstsw
sub
adc
xchg
pusha
xchg
xchg
mov
shrb
or
xor
add
lds
cltd
adc
mov
ss
sub
in
xor
jp
inc
and
mov
ja
sub
fildll
dec
fcompl
out
aad
aaa
shll
cmp
dec
pcmpgtb
aas
test
scas
dec
imul
movsb
imul
fsubrs
sti
sub
call
sarb
addl
pop
mov
push
ja
aas
out
imul
ret
sub
pop
lods
sbb
adc
ja
popa
daa
fwait
icebp
push
fadds
cltd
lea
inc
mov
mov
lea
mov
mov
lcall
mov
in
push
pop
cmp
in
rorb
bound
pusha
gs
int
enter
push
jns
jmp
addb
insb
adc
pop
jle
xchg
call
clc
xchg
sub
dec
ss
mov
aad
ljmp
push
and
cwtl
mov
sub
mov
jb
or
outsl
jmp
mov
sbb
ror
sbb
repz
sub
mov
pop
mov
push
outsl
fldenv
movsl
mov
mov
cmpsb
ret
repnz
sbb
sub
fbstp
pop
dec
or
push
mov
sub
stos
xchg
sub
shll
cld
push
adc
je
mov
inc
pop
xchg
lods
or
repz
and
mov
sbb
inc
cltd
shr
test
xor
out
arpl
push
inc
dec
xchg
in
pop
add
enter
fcomps
jecxz
sarl
in
cmp
push
push
sub
sub
imul
loopne
jp
mov
jmp
xor
cli
stc
cmpsb
dec
cmpsb
adc
jg
rcll
test
sub
jnp
pop
inc
lods
and
pop
aas
xlat
xor
mov
stc
xorb
in
fsubrl
lds
enter
push
sub
dec
xorb
cmp
nop
xchg
lock
mov
ss
xor
add
inc
adc
jnp
add
cli
insb
aaa
sub
lahf
cmpsl
ljmp
jmp
aad
pop
ror
inc
imul
jns
repz
scas
mov
dec
ds
inc
mov
mov
lock
xchg
inc
push
xchg
sahf
inc
jno
mov
lods
cs
pushf
mov
sbbl
stos
pop
out
jae
push
xor
shl
inc
insb
inc
pusha
add
add
stos
adc
mov
out
into
push
jl
cmp
dec
push
data16
xchg
pop
xor
js
mov
and
das
add
or
pop
pop
pop
xchg
pop
outsb
out
int3
jb
je
mov
fucomip
jl
jns
ds
mov
lods
cmp
xchg
nop
and
loop
rolb
cmpsb
test
rcrl
push
jge
sbbl
sbb
and
pusha
aad
popa
fcomip
out
lea
lret
mov
and
test
mov
adc
sbb
pop
pop
cwtl
icebp
rcl
push
jne
pushf
ret
lcall
push
ror
lods
mov
enter
iret
ret
add
movsb
mov
js
or
leave
dec
stos
push
mov
stos
lcall
fcmove
push
fsubrl
cmp
lock
addr16
iret
pop
cmpsb
push
stos
shrl
push
xor
in
fucom
sbb
pop
mov
jne
pushf
into
inc
mov
sahf
pusha
mov
cli
mov
and
aaa
sbb
les
fildl
ret
inc
pop
cwtl
dec
adc
cwtl
das
xchg
jmp
cwtl
sub
out
enter
lahf
insb
das
jno
inc
xchg
sbb
or
xchg
xlat
xor
fs
jo
ret
js
pushf
js
sub
and
inc
lods
sub
add
or
movsb
push
es
frstor
lahf
fiadds
in
stos
dec
fildl
outsb
cmpsb
or
dec
xorb
sar
sbb
sbb
mov
movsl
out
sbb
fiadds
sbb
mov
xchg
and
sarl
movl
jno
sarl
popf
lret
and
xchg
pop
mov
aam
aas
test
arpl
das
jecxz
pusha
push
xorb
sbb
jle
mov
push
dec
mov
les
cmp
repz
les
pop
gs
lods
xchg
andl
add
sub
loopne
push
sbb
std
jp
adc
int
data16
insl
loopne,pn
sub
pop
cmp
push
lods
lods
jnp
cs
xchg
push
std
testl
in
lds
cmpsl
psllw
push
push
data16
into
push
inc
je
lods
out
pop
scas
xor
aas
popf
pop
jb
pop
in
pop
insl
je
add
jg
js
into
pop
cltd
cmc
jle
sti
rcrl
and
xor
fwait
pop
ljmp
push
fmull
inc
mov
push
gs
outsb
mov
lcall
gs
mov
mulb
jne
and
imul
push
mov
cwtl
sar
repnz
mov
sbb
cs
inc
fs
cmp
push
jge
leave
mov
dec
andb
test
mov
aam
mov
and
das
push
add
je
cmc
test
mov
sbb
filds
out
ds
repz
out
mov
leave
pop
push
pop
or
pop
and
pop
and
sahf
test
xor
xchg
mov
outsb
mov
not
xor
jb
add
leave
ret
xor
xor
xor
inc
mov
add
push
push
pop
push
aaa
xchg
call
jp
adc
sbb
je
mov
mov
xor
sbb
pop
and
xlat
xchg
aaa
dec
fstpl
imul
push
xor
or
sub
pop
jle
popf
xchg
sahf
insl
jno
cmp
jle
cmp
out
in
push
adc
mov
sti
dec
lods
mov
push
ss
test
jnp
dec
inc
inc
dec
fsubl
and
jp
and
divl
pusha
sub
iret
xchg
mov
inc
pop
xor
stc
jl
das
add
scas
and
pop
lock
push
cmp
inc
lods
inc
aam
sub
mov
mov
add
mov
sbb
add
or
pop
imul
jo
and
sbb
xchg
divl
mov
xchg
leave
loopne
push
mov
inc
sub
dec
pop
ds
leave
insl
das
test
cmp
adc
xor
sbb
dec
in
test
movsl
dec
das
nop
mov
or
or
jmp
mov
test
outsl
xchg
ja
xchg
mov
iret
sarb
cmp
xchg
push
add
sbb
fistpl
into
shll
xor
push
cli
das
fwait
roll
dec
pop
dec
test
lods
xor
and
fsubs
push
cmc
push
notl
pop
dec
sbb
sub
xchg
mov
mov
or
fimull
push
test
divb
mov
js
mov
js
in
cld
test
lret
sbb
mov
jb
fucomip
sub
or
dec
cmpsb
into
adc
into
test
fwait
lcall
or
lds
inc
xchg
pushf
call
cmpl
dec
fcompl
cmpsl
lss
inc
aaa
cmp
dec
jmp
leave
bound
aam
outsb
xor
sbb
in
test
mov
xchg
mov
popa
mov
mov
popf
or
xor
adc
test
scas
push
insb
dec
pop
rorl
pop
loope,pt
pop
jo
adc
fidivrl
cmp
jb
and
lahf
mov
cmp
sbb
sti
add
cmp
insb
les
shr
js
and
insl
pop
lahf
test
xor
out
nop
add
jg
sahf
ljmp
pushf
mov
xchg
sbb
jle
insb
out
sub
mov
pushf
loop
add
add
movsl
mov
fs
cmpsl
mov
lahf
mov
cmp
enter
outsl
sbb
mov
mov
aaa
sub
aad
add
push
js
scas
aaa
icebp
dec
mov
add
ss
inc
add
out
ret
stc
bound
mov
pop
xlat
in
shl
aaa
mov
fsubl
xor
ja
jg
jae
push
or
xchg
inc
push
lods
dec
int
loop
lods
inc
inc
sub
sti
cmp
cmp
xor
push
mov
lods
sbb
and
xor
inc
add
cmpl
xor
pmaddwd
adc
insl
cmp
xor
mov
ds
mov
mov
mov
stos
stos
inc
fmulp
je
xor
inc
or
movsb
aad
in
dec
sub
push
jns
mov
mov
xor
adc
and
dec
add
inc
test
sub
mov
scas
dec
push
push
pop
push
insb
decb
xor
pop
insb
adc
adc
push
cmp
push
cld
xor
pop
dec
sub
in
test
xchg
pusha
xor
or
pop
jmp
lock
jmp
dec
js
xor
xchg
xchg
out
mov
sbb
inc
sbb
jb
sti
aas
dec
xchg
clc
sub
mov
test
jno
adc
mov
xchg
fidivrs
pusha
shlb
fsubr
and
test
loop
sbbl
icebp
jne
cmp
jno
stos
mov
xchg
jo
pop
mov
mov
jle
mov
fadd
xchg
lods
mov
mov
jb
push
pop
adc
add
cli
lods
pop
sub
mov
push
dec
and
or
mov
push
jg
int
sbb
jne
das
or
es
jne
das
in
filds
jae
adc
pushf
ljmp
xor
fidivrl
cmpb
jb
pop
lcall
push
popa
fidivl
imul
and
mov
mov
xor
int
daa
rorl
es
leave
jge
aad
fcmove
inc
scas
pop
push
mov
mov
out
int
popa
jl
push
xchg
repz
int3
xor
pushl
or
pusha
and
addb
popf
decb
xor
lret
mov
jae
jmp
inc
negl
fimuls
mov
pop
add
sarl
and
notl
add
push
out
push
dec
es
out
jecxz
jnp
sub
jmp
cmp
leave
mov
push
inc
mov
data16
mov
pop
mov
pop
addr16
cmc
or
push
sti
push
lods
jp
mov
dec
and
mov
insl
rcrb
jl
out
fiaddl
cmpb
js
pop
mov
lods
and
inc
mov
mov
push
push
dec
insb
xchg
pop
fsts
xchg
sar
sbb
pop
mov
fmuls
rcl
std
or
push
inc
nop
rcrb
push
movsb
dec
sbb
int
dec
fidivrs
sti
jl
orl
loopne
push
add
test
pop
icebp
push
cmp
sarl
out
xchg
pop
push
pop
cmp
sub
dec
bnd
sub
sti
mov
mov
shrl
int3
jecxz
int
push
dec
pop
stos
mov
insl
repz
rep
das
fdivr
mov
jle
stos
inc
mov
add
cltd
outsl
inc
push
ljmp
incl
aad
test
or
repnz
lcall
mov
xchg
fldl
push
repnz
adcb
or
icebp
inc
sub
icebp
fadds
dec
mov
mov
das
mov
mov
or
add
mov
xor
jnp
sbb
mov
lock
dec
cmp
mov
and
ret
sbb
cmc
pop
inc
shl
ror
mov
shrl
jmp
pushf
jnp
jne
add
scas
stos
test
or
xchg
divl
mul
and
int
inc
gs
fstpl
jne
stos
xchg
xchg
aad
push
cld
mov
mov
arpl
sub
stc
mov
push
out
xchg
or
inc
mov
or
in
int3
xchg
adc
test
pop
jns
testb
mov
outsl
aam
jo
shr
vaddpd
push
and
das
cmp
jmp
pop
jb
and
rcll
daa
mov
push
int
inc
sub
shrb
add
stc
dec
fucompp
in
and
xor
aad
insl
jbe
dec
lret
xor
fiadds
xor
mov
lahf
repnz
arpl
mov
divb
inc
mov
adc
or
jo
mul
inc
shlb
push
or
lock
movsb
aaa
lods
mov
mov
push
adc
subb
add
test
scas
dec
push
mov
das
mov
sahf
pop
lock
xchg
pop
mov
icebp
jmp
stos
icebp
or
daa
sbb
fisubrs
or
add
xor
stc
and
cwtl
lea
xlat
test
mov
push
int
pop
gs
lahf
inc
pop
inc
mov
adc
add
in
or
xchg
in
and
aad
mov
fcmovne
mov
ret
push
xor
push
sbb
inc
push
add
jns
xchg
scas
fmull
sbb
adc
insl
mov
fnstenv
mov
pushf
pop
shrl
add
pushf
inc
arpl
ja
push
mov
loop
inc
insl
mov
fucomp
mov
or
pop
jecxz
enter
xchg
xchg
fwait
lods
leave
xor
imul
push
scas
mov
sub
or
xchg
cmp
comiss
xchg
cld
mov
ficoml
lods
mov
jge
daa
xor
adc
lds
cld
push
jno
sbb
push
dec
loope
xchg
insb
ret
fimuls
jno
xchg
push
rclb
xor
cwtl
loopne
push
int
sbb
in
or
andl
mov
subl
repnz
sbb
adc
cltd
testl
push
cltd
mov
imul
pop
jbe
xlat
aam
cmp
pop
add
dec
jmp
mov
lods
or
sub
orb
push
sbb
xchg
dec
jne
push
fbstp
subb
filds
into
pop
push
adc
les
lahf
cmp
cmp
vmovdqu
das
cmc
loopne
adc
mov
dec
inc
jecxz
ret
gs
sbb
in
mov
mov
cmc
clc
frstor
add
shll
out
push
xchg
cmp
push
pop
jp
push
dec
adc
add
push
icebp
jp
fs
pushf
std
add
or
fldpi
inc
jnp
push
xor
cmp
xchg
xchg
or
jbe
jno
stc
add
adc
add
in
add
mov
ret
inc
arpl
cli
push
inc
and
sub
movsb
cmp
notb
dec
ds
xchg
add
mov
adc
inc
pop
mov
jp
fld1
lahf
sub
push
xchg
stos
jl
push
mov
jo
and
enter
popa
mov
jecxz
mov
ds
cltd
mov
cmp
pop
push
out
or
push
cmp
icebp
das
push
adc
pop
jnp
daa
loop
faddp
call
bound
or
sahf
test
cmp
notb
xor
or
xchg
out
js
push
xor
inc
fbstp
lods
mov
fs
shll
int3
xor
test
jmp
rorb
imul
outsb
ss
cmp
mov
adc
jecxz
pop
mov
sti
fmull
cld
loope
jp
insb
jge
pop
scas
test
fidivrl
dec
in
arpl
fimull
scas
sar
push
xor
xor
push
movsb
in
jp
out
out
push
inc
adc
std
fistpl
dec
jnp
xchg
jo
repz
jp
add
xor
adc
stc
insb
iret
sub
or
movsb
jge
xor
imul
and
sub
push
imul
adcb
lahf
xchg
mov
lds
jle
in
jns
cmpb
pop
stos
push
mov
mov
inc
stc
xor
dec
loope
inc
insl
outsb
icebp
hlt
push
sub
cmp
xor
gs
or
cmp
loopne
lds
jmp
hlt
and
incb
jmp
push
xor
outsb
lahf
cld
outsl
xor
push
gs
dec
pop
cmpsb
out
stc
cmp
clc
pop
mov
cmp
cmc
or
out
fwait
jo
lret
dec
outsl
jns
sub
xchg
stos
mov
and
ret
dec
dec
movsb
aas
adc
mov
iret
push
into
mov
and
ss
and
xor
xor
out
mov
lret
fsub
or
sub
cltd
mov
fstps
jg
les
cmp
loopne
jnp
xor
les
mov
ret
adc
sbb
and
sub
push
cmpsb
lds
fwait
adc
ffreep
out
sub
add
flds
insb
std
jnp
ds
jmp
aad
mov
neg
cmp
fcoms
cmpsb
loope
subl
add
or
mov
sahf
adc
mov
aad
cmp
outsl
ret
jge
out
push
cwtl
lock
repnz
dec
cmpsb
fnstenv
push
inc
and
dec
rol
js
and
iret
push
pop
pop
sbb
outsb
out
scas
lret
icebp
mov
add
add
cmc
add
stos
jb
jle
pop
rcl
outsb
popa
mov
fisubl
push
jmp
test
rcll
sbb
xchg
dec
ljmp
add
imul
out
and
daa
jmp
pop
add
cmp
insl
cmp
aad
xor
lret
test
or
pop
ljmp
je
mov
and
or
cmp
inc
add
mov
push
mov
mov
add
mov
fnstsw
inc
lods
mov
xlat
lods
cmp
lret
enter
and
popa
sub
inc
and
rcl
add
xchg
jp
adc
xor
mov
jbe
clc
test
inc
pop
push
test
mov
lea
mov
out
ds
aam
arpl
fildll
lahf
cmp
jns
nop
sbb
fnstcw
pop
stos
xchg
dec
mov
je
sub
out
sarl
jo
inc
mov
dec
sbb
insl
stos
add
and
ss
out
pop
mov
ret
clc
lret
scas
dec
enter
mov
xchg
int3
lods
ficoml
pop
mull
jae
std
popw
sub
out
sahf
mov
xchg
add
lret
sub
jg
scas
loop
push
jo
push
xlat
ds
or
aam
inc
mov
loop
test
xor
out
inc
ljmp
adc
push
leave
std
pop
loopne
cmp
aad
jae
pusha
out
jmp
fiadds
xchg
orb
out
shlb
and
mov
movsb
out
ror
mov
pop
jg
insb
ret
js
jle
adc
shrl
out
out
mov
mov
push
xor
lret
out
adc
cmp
adc
xchg
rcrl
loopne
outsl
dec
jo
mov
sub
jne
jbe
fs
and
cmpsl
inc
jbe
ljmp
pop
in
scas
es
jno
int
lods
ljmp
dec
ret
sbb
shll
mov
inc
mov
jecxz
cmpsl
jg
fwait
mov
pop
xor
test
or
adc
mov
lcall
mov
push
idivb
std
cli
add
xchg
push
jne
mov
imul
fidivrl
data16
pop
aam
mov
cli
pop
and
dec
pop
mov
dec
insb
je
fsts
ret
mov
test
outsl
xchg
and
insl
testb
repnz
sbb
jg
dec
xchg
scas
sub
sub
rcrl
and
das
fwait
pop
push
inc
popf
mov
push
sub
dec
enter
sub
push
pop
jg
loope
or
lret
inc
fsubrp
mov
dec
add
fwait
add
jae
push
jp
arpl
push
pop
ljmp
in
clc
in
pop
ret
mov
inc
push
mov
rcll
sbb
outsb
sub
jl
sub
mov
jge
aad
jb
and
call
loope
inc
xchg
pop
jecxz
call
push
push
jg
fildl
pop
mov
mov
repnz
rorb
cwtl
dec
pop
test
mov
xchg
ret
push
testl
sbb
and
out
mov
std
rolb
aam
jl
adc
mov
xchg
or
rcr
aaa
and
or
dec
jnp
sbb
push
and
pop
sbb
fdivrl
out
xchg
fs
mov
pushf
mov
insl
push
inc
scas
push
ret
insl
aas
and
sub
popl
and
mov
les
pop
fimull
fwait
int
loopne
addl
repnz
mov
push
xor
test
sub
stos
mov
lods
in
cmp
in
mov
int
mov
adc
fwait
jmp
sahf
or
and
imul
cmc
movsl
mov
cmc
mov
dec
es
add
mov
lods
iret
dec
cmp
mov
jnp
fsubrs
jecxz
xchg
cmp
dec
push
cmp
sub
xchg
ds
leave
sbb
outsl
test
mov
popf
popf
xchg
jle
xchg
cld
sub
push
fmuls
push
fbstp
adc
pusha
add
arpl
push
pushf
xchg
fs
jne
pop
rcl
mov
shl
into
push
ds
stos
push
adc
lds
pop
jno
in
mov
jo
jns
out
and
adc
xchg
test
xchg
add
das
and
mov
dec
xlat
sbb
pop
out
add
xor
fcmovbe
les
idivb
and
pop
jo
xor
sti
insb
push
or
jp
or
lods
cli
and
int3
aaa
jnp
xchg
dec
pop
mov
fidivs
mov
push
dec
pop
sub
xor
test
outsl
xor
jp
addr16
stc
xlat
jns
push
pop
sbb
push
jge
fcomip
pushf
jmp
sbb
rolb
add
popf
mov
and
outsb
jmp
cli
loop
mov
mov
out
pop
aad
push
dec
adc
mov
mov
mov
mov
mov
sbb
xor
jns
cwtl
lea
in
pop
fsub
sbb
sbb
cmp
cltd
lods
in
fstpt
cs
arpl
adc
out
stc
lret
std
xor
inc
lcall
cmp
pmulhuw
ja
and
outsb
inc
add
sub
movb
stc
stc
xchg
jbe
getsec
or
in
jecxz
and
add
mov
inc
mov
and
push
push
rcr
sbb
dec
out
pop
adc
xor
fnstcw
jg
and
adc
inc
leave
cmp
inc
aam
adc
add
repz
test
pop
cld
mov
scas
stos
sub
stc
out
es
pop
sarb
or
cmp
sub
adc
in
push
int
push
test
mov
jg
or
mov
out
lret
popa
dec
jbe
mov
jo
jns
test
jl
popa
mov
dec
mov
loopne
jo
jge
xchg
scas
lock
repz
jle
fstl
test
push
mov
sub
loopne
je
sbbb
and
cmp
mov
sub
xchg
xchg
orb
decb
mov
sub
psubusw
add
jno
cs
mov
xchg
mov
and
jle
repnz
test
add
sbb
adc
mov
add
lret
inc
mov
pop
dec
sub
int
fs
inc
mov
loope
fs
mov
add
adc
inc
ja,pn
into
inc
mov
out
mov
jns
lods
mov
jo
aam
dec
loopne
add
int
and
sbb
mov
xchg
and
mov
inc
cmp
out
test
das
call
out
jle
les
imul
rep
mov
inc
std
das
fimull
std
xor
xchg
or
jo
push
lret
mov
or
push
xchg
jp
push
and
push
mov
fisttpll
inc
xchg
sahf
je
cs
mov
push
scas
or
and
mov
sub
pop
pusha
or
test
xchg
mov
ret
cmp
mov
addr16
push
inc
cmp
pushf
jno
lods
jle
adc
xorl
inc
fwait
mov
sub
push
push
in
sti
rorb
out
and
call
push
test
jnp
sub
cmp
stos
dec
jb
mov
in
stos
push
sub
sub
add
cmp
pusha
lcall
add
hlt
mov
dec
cmp
xor
mov
xchg
testb
pop
popa
sub
pop
sub
popf
adc
mov
and
mov
pop
add
xor
lcall
aaa
scas
adc
nop
dec
inc
dec
jns
dec
sar
loop
mov
fimuls
test
xchg
mov
gs
call
sbb
js
rcl
sub
mov
pop
push
clc
iret
sub
in
or
adc
fdivp
imul
sbb
das
lret
je
js
test
cmp
pop
test
inc
ja
push
cmp
sbb
pop
sbb
fs
in
lcall
imul
xor
in
and
and
call
and
mov
das
mov
stc
jmp
or
insl
mov
cmp
movsb
ret
xor
xchg
lret
jmp
jp
or
aaa
xchg
cmp
into
lret
dec
fistl
arpl
test
outsb
repz
mov
jl
xor
enter
or
das
and
pop
js
inc
inc
push
movsb
cwtl
iret
cmp
lock
inc
hlt
sub
gs
jmp
nop
jmp
jmp
sbb
lret
mov
pop
in
testb
std
xor
add
aas
inc
lahf
cmpsl
xchg
push
or
rolb
hlt
mov
data16
movsb
add
mov
cwtl
scas
bound
test
daa
lds
xchg
mov
dec
adc
ret
jp
dec
stos
lds
mov
and
mov
cmpsb
sti
sahf
push
insl
xorl
push
or
sbb
dec
xor
rcll
iret
test
arpl
fwait
fwait
scas
incl
mov
dec
or
dec
aad
lock
enter
ffree
pop
pop
repz
mov
xchg
stos
mov
sti
sbb
leave
jp
dec
sub
jb
xchg
pop
add
cmp
cmp
scas
or
rol
and
scas
imul
and
js
pop
outsl
adc
btr
movsl
scas
scas
sub
js
jne
jge
xchg
gs
mov
aad
outsb
push
stos
stos
enter
cmp
mov
in
clc
sarb
loopne
add
stc
lods
add
divb
mov
xor
cmpsl
and
out
in
push
pop
je
test
aas
daa
sub
ds
ss
negb
rolb
ja
out
int
dec
mov
fsubs
add
mov
int3
add
xchg
adc
mov
fdivrl
push
xchg
jl
and
in
aas
mov
out
mov
imul
inc
out
lds
sbb
roll
mov
mov
inc
mov
cli
cmp
cmp
insb
mov
mov
iret
fwait
scas
sti
ret
repz
into
push
push
stos
and
cmp
mov
mov
out
cmp
loope
shrl
lret
and
sub
xor
fldt
mov
test
or
pop
mov
fwait
ror
ds
stos
roll
test
outsb
fs
dec
xor
or
loope
adc
adc
test
ret
outsl
je
mov
pop
or
mov
fisttpl
xor
mov
lcall
pop
cmpsb
testb
loopne
fdivr
fisttpll
into
mov
adc
fwait
add
cmpsb
pop
out
mov
dec
xor
lcall
movsl
das
jno
ret
jge
mov
lds
ds
pop
cltd
jno
push
mov
add
out
xchg
outsl
sbb
cmp
mov
hlt
cmpb
andl
xchg
insb
add
adc
cmp
lods
or
pusha
filds
in
inc
jle
scas
cli
movl
hlt
add
push
or
fidivrl
fdivl
cmp
xchg
xor
adc
cmp
scas
inc
movsl
cmp
xor
and
jecxz
mov
mov
xor
sub
add
ja
cmp
test
fiadds
dec
out
aas
rorb
fsubrp
sub
loope
and
cmpsb
pop
adc
mov
push
or
mov
sbb
sbb
mov
js
mov
push
mov
sbb
lds
test
out
pop
imull
jae
pop
mov
pop
inc
rcrb
iret
add
inc
loop
inc
mov
xor
pop
cld
xchg
sub
shll
and
outsb
or
pop
adc
mov
add
frstor
rol
sub
mov
repz
pop
ds
mov
xchg
mov
enter
pop
into
les
sub
adc
push
add
out
jae
jns
fdivrl
in
mov
ret
and
les
mov
nop
push
data16
cli
lret
cmp
hlt
ljmp
and
gs
jno
int3
cmpsl
jl
pop
or
imul
lock
in
add
ljmp
jae
xor
cld
loopne
sub
push
leave
cltd
push
and
sbbl
loop
lds
fisttpll
jbe
pop
repnz
flds
cmc
nop
leave
push
leave
ficomps
xor
pop
xor
cmp
popf
xchg
mov
inc
adc
shrl
aas
push
or
insb
leave
inc
mov
jl
push
ss
ret
cmp
jne
mov
imul
xor
jnp
js
xchg
xchg
mull
mov
cmpsb
and
push
sahf
clc
inc
out
mov
std
mov
and
int3
push
call
js
mov
adc
cmp
dec
sub
mov
ljmp
mov
and
sbb
sub
rclb
jne
pop
xchg
sbb
leave
icebp
lods
gs
and
mov
fcomps
push
mov
in
mov
mov
gs
insl
loopne
out
sbb
push
out
cmp
out
out
mov
mov
aas
mov
and
xchg
js
into
mov
mov
xor
cmp
xor
xchg
ret
bound
rcll
xchg
sahf
shlb
sub
xor
fistpll
add
push
adc
popa
jne
mov
mov
aas
xor
dec
ret
jne,pt
iret
inc
dec
insl
or
mov
jae
pop
xor
mov
sub
fdivrs
loopne
push
mov
xor
jno
adc
mov
test
ja
aas
loop
ds
xor
sbb
push
fdivp
xor
scas
pop
mov
rcrb
mov
es
mov
jnp
pusha
aad
lcall
jne
ret
cmc
pop
aaa
cmpsl
sbb
add
hlt
add
or
fcoml
xor
dec
ja
xor
sub
or
add
cmp
insl
nop
dec
das
cli
mov
add
sbb
sbbl
int3
std
mov
push
mov
cltd
std
leave
in
dec
push
popa
icebp
xorl
lret
push
dec
adcb
icebp
fsubrl
sti
fiadds
jae
int
insl
push
push
mov
bound
clc
mov
in
loopne
xchg
out
adc
fcoml
call
int3
or
repnz
sbb
loope
jae
adc
clc
xor
std
or
pop
cmp
push
dec
push
cs
and
lods
mov
movsl
xor
movsb
test
cwtl
loope
inc
push
data16
cmpsl
mov
jp
adc
loop
mov
sbb
pusha
sbb
out
ja
cs
add
or
out
jl
pop
ss
mov
and
repnz
and
jne
rorb
jbe
dec
movsb
jbe
out
popa
mov
xchg
pop
call
cmp
jne
mov
mov
sub
inc
cmpb
ret
jae
cmp
add
cmpsb
outsl
and
mov
sub
out
addr16
imul
cwtl
lcall
daa
cmp
aad
sbb
sbb
or
mov
jnp
cs
nop
mov
or
and
pop
mov
out
lods
mov
aad
adc
inc
fwait
pop
jbe
repz
adc
adc
cwtl
icebp
mov
sub
pop
std
adc
lahf
dec
dec
push
mov
pop
out
out
orl
xchg
xor
sub
inc
push
add
or
stc
adcl
add
sub
rclb
outsb
cltd
aas
sarl
cmpsb
mov
cli
test
add
mov
jmp
mov
adc
shll
iret
pop
and
push
outsl
inc
and
ss
cs
sbb
push
xor
mov
jg
xor
mov
pop
mov
cld
sbb
adc
jbe
mov
add
push
sarb
xor
movb
pop
jae
jge
jae
push
or
jnp
loopne
jl
or
adc
push
xchg
sub
lock
sahf
leave
add
mov
ret
jno
arpl
push
and
mov
or
jle
jb
jnp
jne
cltd
in
xor
jmp
cmpsb
dec
adcl
bound
pop
push
test
mov
loope
mov
inc
push
out
jle
in
pop
jnp
aas
test
xchg
fisubl
stc
xor
shl
push
sub
xchg
cmp
cmp
push
clc
fsubl
xor
sub
repz
clc
push
cmp
jecxz
insl
divb
out
jbe
leave
std
repz
dec
insl
addl
lret
xor
rorl
xchg
push
dec
bound
adc
aaa
xchg
jl
cmpsb
lret
out
sub
repnz
mov
or
int
sub
orb
cli
pop
mov
jo
add
or
sub
call
flds
inc
testl
mov
or
les
pop
testl
loopne
xchg
in
ds
divb
cmp
pop
dec
inc
aad
add
jnp,pt
push
jne
stc
cltd
enter
jnp
aaa
neg
fs
or
mov
push
adc
mov
pop
sti
sub
sbb
pop
and
xor
incb
mov
xor
arpl
add
mov
push
cmp
xchg
lods
or
cmp
loope
inc
sub
sbb
cmp
insb
or
popf
cmp
jp
dec
and
inc
and
inc
add
mov
scas
popf
lea
jp
mov
push
cmc
pop
test
jbe
mov
lods
mov
inc
cmp
leave
test
lds
and
je
xchg
outsb
adc
sbb
mov
jle
mov
push
repnz
adc
rcl
mov
cs
jns
cmpsl
lret
xchg
test
inc
fwait
loopne
sbb
jl
out
je
pop
mov
inc
arpl
adc
fistpll
ret
xor
or
iret
scas
outsl
push
das
xchg
adc
adc
inc
xchg
sbb
mov
push
shl
adc
inc
imul
mov
insl
cmpsl
or
add
inc
dec
push
sbb
push
or
test
jg
sbb
inc
or
imul
xor
push
cld
sbb
test
dec
jg
mov
cmpsl
push
rorl
imul
out
mov
sbb
push
orl
cli
out
and
inc
lods
mov
mov
pop
das
hlt
pop
ret
test
adc
popa
mov
and
pop
ret
jl
dec
cmp
das
leave
inc
ret
daa
pop
pop
add
loop
lds
leave
sbb
adc
shl
adc
nop
nop
mov
cli
insl
push
dec
jno
add
stc
xchg
add
sub
sub
xor
aas
inc
outsb
mov
cmp
pushf
stos
inc
sub
in
mov
test
iret
icebp
ret
mov
imul
fmuls
sub
fsubrp
aad
arpl
add
inc
dec
mov
testl
mov
lahf
add
lret
arpl
lea
shrl
fisubrl
jnp
cmc
pusha
test
pop
push
aas
gs
mov
mulb
and
lcall
scas
daa
sub
fildl
aam
or
popf
ljmp
inc
mov
push
add
inc
push
mov
leave
fiadds
sub
add
mov
ror
adc
cmc
aaa
sbb
push
sbb
stc
push
mov
adc
inc
lcall
movsl
cli
cltd
adc
aas
sbb
adc
imul
pop
daa
or
sbb
imul
and
sbb
xchg
inc
xor
mov
ja
or
shrl
cwtl
fucomip
fdivrs
mov
jo
les
sbb
and
je
cmp
andb
pushf
adc
cmpsl
mov
scas
xchg
sub
mov
test
dec
jg
imul
mov
xor
lahf
jns
into
add
aas
push
rol
mov
sbb
movsl
fsts
shl
push
das
imul
lods
xchg
jle
cmc
pop
pop
subb
adc
fisubl
jp
sub
dec
pop
call
push
out
adc
push
add
faddl
cwtl
repz
push
pop
inc
bound
lods
roll
pop
or
mov
push
aam
xchg
call
cmp
dec
fcoml
lcall
inc
data16
adc
out
sahf
out
leave
js
pop
xor
pop
movsb
sbb
lret
scas
test
jno,pt
jno
mov
xchg
jge
pushf
jecxz
sahf
push
mov
js
xchg
cs
sbb
or
push
aas
push
scas
cmp
push
iret
mov
xchg
repnz
mov
gs
xchg
and
inc
call
in
cmp
out
movsb
stos
jecxz
aaa
fcoms
test
stc
add
cmpsb
add
addps
data16
xchg
xor
mov
adc
xchg
das
sub
cmp
xor
sbb
mov
add
or
sub
push
mov
outsl
jae
int
js
cmp
push
jge
movsl
or
and
mov
test
repnz
outsb
and
aam
je
xchg
push
jl
imul
sub
lods
je
ds
mov
sbb
jge
pop
scas
push
sub
or
pop
xchg
jge
out
imul
mov
int
jge
jp
shrl
pop
xor
pop
xchg
inc
je
sbb
mov
inc
addr16
clc
sub
fldcw
jns
add
push
clc
push
jecxz
dec
and
add
dec
ss
lret
push
sbb
add
test
sbb
mov
cmp
rcrl
dec
add
ljmp
adc
andl
jae
movsl
into
outsb
int
and
add
in
pop
je
notb
aam
mov
and
xor
arpl
insl
add
pushf
push
xor
jnp
shrl
jecxz
rcll
cwtl
inc
or
mov
push
xor
mov
and
push
jne
rorl
jle
sbb
aaa
fwait
lock
rcll
or
stos
mov
push
call
insl
or
divl
jge
stos
sub
lock
lret
iret
mov
outsl
xor
cwtl
jne
dec
pop
fbld
pop
inc
push
repz
xchg
jnp
dec
pushf
das
out
push
test
ja
push
mov
pushf
push
ds
xchg
push
data16
push
mov
dec
stc
and
shlb
or
dec
loopne
mov
jp
push
sbb
pop
inc
pop
int3
mov
dec
mov
push
mov
sub
sbb
pop
cmp
mov
pop
enter
frstor
cli
cmc
in
add
ss
push
jno
stos
daa
pop
mov
and
testb
into
jne
adc
xchg
push
sub
jp
lock
xchg
arpl
xchg
push
mov
xor
add
or
stc
in
int
fucompp
mov
push
lahf
ds
jnp
les
mov
inc
xchg
xor
sbb
dec
sub
jb
jecxz
ret
loop
push
subl
dec
xchg
sahf
mov
push
ds
push
cmc
nop
xchg
xchg
popf
pop
jp
mov
bound
lret
idivb
aam
xor
add
mov
mov
pop
add
push
rcr
stos
es
fst
dec
sub
lret
fwait
xor
sbbb
out
jno
jg
inc
push
lcall
or
scas
add
add
mov
add
xchg
push
orl
test
xchg
push
push
push
fists
int3
inc
stos
in
push
mov
stos
push
xor
push
dec
repnz
fucomip
lret
sub
into
jge
cmc
dec
xor
xchg
bound
mov
jo
in
or
outsl
pop
jbe
std
dec
add
fstps
mov
lods
mov
xchg
push
lods
nop
mov
lret
and
lods
pushf
loope
sub
ja
add
in
mov
aas
sub
inc
sbb
mov
aaa
aaa
mov
lock
sbbb
rcrl
pop
es
and
jecxz
cmc
fmul
pop
orl
outsl
cld
sbb
cmp
loopne,pn
push
scas
xchg
jno
and
jg
ds
push
cmpsl
adc
cmpsl
mov
xchg
daa
jecxz
dec
pop
jne
ss
mov
pusha
xchg
sbb
xor
movsb
inc
shlb
cmp
jp
scas
stos
pop
fs
call
mov
or
rcl
sahf
mov
js
xorb
xor
pop
add
mov
pop
cmp
pop
test
cmp
xchg
mov
fildl
stos
mov
ja
fidivrl
xlat
xchg
pop
je
popf
fs
fsubr
xchg
frndint
nop
dec
or
shrb
or
xlat
in
out
cmp
add
out
fsts
mov
out
test
jle
mov
movsl
test
cmp
mov
add
outsl
imul
push
out
push
adc
pop
adc
in
aam
stos
or
push
sahf
cltd
cs
ret
jecxz
fisubl
fnstenv
mov
inc
iret
push
ficomps
sbb
xor
and
xlat
mov
mov
sbb
inc
push
cli
jg
xlat
mov
aam
push
sbb
lret
sbb
andl
xchg
hlt
aam
push
movsb
pop
cmc
cmp
push
jne
or
push
fucomip
add
test
lcall
mov
push
pop
sub
or
mov
pop
popf
xlat
mov
inc
subb
mov
push
popa
fcoml
cwtl
add
sub
cmp
movsb
inc
add
fwait
push
in
adc
mov
mov
adc
iret
push
xchg
xchg
lret
xor
and
sub
cltd
jnp
ljmp
and
mov
sbb
sbb
mov
or
push
scas
pop
cmpsl
adc
out
push
loop
pop
hlt
flds
lds
mov
jmp
sub
mov
jne
nop
icebp
je
loopne
add
sahf
inc
in
les
push
sub
sbb
aad
mov
sub
dec
scas
xchg
sahf
fcmovnbe
or
sbb
daa
adc
push
mov
mov
movb
shll
pusha
sbb
outsb
lcall
icebp
inc
push
push
mov
cs
iret
loopne
ljmp
in
aaa
test
lahf
dec
sbb
push
sbb
leave
or
fdivs
pushf
and
aas
loope
inc
sbbl
push
int
dec
pop
mov
mov
push
loop
outsl
leave
xor
popf
cmp
lods
sbb
push
pop
icebp
adc
adc
cltd
mov
pop
aam
push
xlat
and
mov
jno,pt
bound
les
xchg
or
dec
movsb
mov
test
les
jle
fs
movb
fidivl
fistpll
outsb
jle
fisubl
movsb
ljmp
dec
pop
jge
mov
into
cmp
mov
sub
nop
in
sar
dec
jns
lret
rcrb
testb
lock
mov
adc
cs
dec
out
stos
mov
sbb
cmp
outsb
stos
adc
sub
mov
jno
ret
sti
xor
out
ljmp
sbb
sbb
mulb
js
jp
testb
mov
cmp
call
push
sti
sbb
xchg
sbb
sar
jo
mov
lods
daa
add
xchg
fisubl
sub
por
adc
mov
or
call
nop
adc
xor
popa
inc
pop
imul
inc
xchg
or
or
mov
cld
inc
leave
cmp
dec
fwait
inc
inc
sbb
jae
adc
pusha
aas
cmp
je
sub
imul
fidivrs
xchg
std
hlt
sub
fmull
push
and
xor
cmp
pop
cmc
fdivrl
outsb
jecxz
mov
es
je
es
and
mov
out
pop
in
rcl
inc
pop
pop
pushf
mov
cltd
sub
jno
and
cwtl
inc
js
rcll
add
sub
ret
inc
pushf
xchg
xchg
pop
dec
ja
mov
rcll
mov
jecxz
shll
ss
pop
fs
ja
sbb
or
or
add
das
push
pusha
sbb
imul
pusha
cwtl
jmp
pop
mov
xor
test
xlat
inc
loope
and
out
push
mov
test
inc
and
dec
fdivrl
dec
adc
mov
mov
jecxz
jo
xchg
cs
inc
jb
aaa
aad
je
sbb
or
inc
or
bndstx
lret
or
pushf
push
sub
sub
cltd
fs
imul
aaa
icebp
inc
mov
out
jle
mov
xor
xchg
inc
mov
push
out
lret
xchg
pop
dec
ds
add
cld
outsb
add
or
shl
mov
pushf
add
push
rol
xor
in
testb
mov
pop
test
xchg
insb
in
mov
adcl
stos
pop
sbb
add
sti
mov
and
xchg
xchg
and
mov
pop
movsw
or
push
jne
or
movsl
stc
mov
and
aaa
enter
mov
into
mov
add
vmovsd
cmpsb
ret
inc
dec
add
sub
addb
sub
inc
cvtps2pi
sub
dec
imul
xchg
lea
int
jae
cmc
adc
adc
mov
cmpsl
stc
jge
lret
and
sub
inc
fbstp
xlat
stc
nop
inc
add
lods
adc
cmp
xor
mov
mov
jae
inc
sub
mov
adc
and
cmc
int
sti
sub
int3
aam
aam
mov
lret
xor
call
shrb
call
mov
popa
mov
roll
adc
in
dec
movb
das
repz
mov
ret
test
leave
lret
inc
js
pop
push
je
pusha
mov
ret
mov
jecxz
repz
popa
das
js
or
prefetch
sub
outsb
jle
scas
test
pop
xchg
dec
adc
cmp
push
dec
adc
jl
icebp
or
push
adc
pop
adc
inc
sub
add
or
into
jo
nop
ret
loop
pop
js
mov
repz
lahf
fwait
sbb
popf
cmp
mov
movsl
std
aad
clc
aad
je
mov
sbb
es
adc
into
xor
mov
or
aaa
cmpb
jle
mov
fsubrp
jb
repz
and
xchg
mov
leave
or
shll
inc
repnz
sarb
add
mov
fwait
mov
cmp
fdivs
hlt
popa
in
add
xchg
mov
leave
mov
mov
lret
push
loope
pop
data16
xchg
mov
cmp
pusha
pop
cmp
jae
cmc
pushf
cltd
xor
sub
jne
dec
filds
imulb
or
mov
cld
add
push
cmpb
sbb
jbe
push
fwait
scas
and
inc
loope
mov
mov
push
popf
pop
mov
inc
dec
cmpsb
sbb
jbe
push
outsl
mov
das
or
inc
sub
lods
pusha
xchg
and
cs
mov
daa
mov
negl
xor
pop
sbb
add
cli
std
fs
jmp
adc
dec
mov
outsl
sub
adc
arpl
popf
sbb
mov
pusha
pop
jns
cmc
jp
fstpl
das
ja
fadds
imul
push
sub
lcall
daa
fstpl
mov
fcoml
test
jae
and
push
add
mov
orb
sub
das
push
shl
imulb
dec
test
pop
fndisi(8087
cmpsb
jns
aas
fisttpll
addb
jl
fnstcw
aam
sti
xor
in
stos
xor
xchg
jb
mov
insb
adcb
cs
sub
rclb
mov
jle
jb
xchg
scas
add
dec
fwait
mov
sbb
inc
mov
rcrb
pop
mov
fimuls
std
iret
push
xchg
dec
inc
sahf
mov
jmp
inc
xchg
lcall
xchg
adc
push
hlt
dec
jnp
sbb
xor
outsl
cmp
pop
jns
je
push
lcall
xor
mov
ja
and
test
push
push
xchg
arpl
ret
push
fdivl
aaa
out
dec
fnstenv
mov
add
or
xchg
imul
rorb
xchg
ljmp
jnp
fisttpl
lea
aam
xlat
insl
mov
mov
or
leave
in
cmp
addr16
xchg
lea
fdivrs
add
stc
mov
je
repz
pusha
or
call
sub
test
and
and
insb
or
mov
dec
adc
lods
jecxz
out
mov
rol
mov
pop
es
adc
loop
fwait
xor
add
imul
leave
cmp
aam
sub
mov
push
add
jno
rolb
cltd
gs
ljmp
aaa
pop
js
mov
mov
addb
call
and
xchg
sbb
inc
stos
popf
push
mov
iret
inc
pushf
aas
dec
mov
ss
xlat
cmp
push
jo
aaa
xor
insl
jl
pusha
rolb
arpl
loope
cli
enter
mov
inc
jne
inc
mov
cli
call
in
dec
andl
push
dec
out
xchg
fwait
std
daa
xchg
dec
scas
sub
mov
cmp
fisttps
dec
sahf
shrl
mov
xor
test
push
loopne
stos
mov
dec
mov
ficompl
push
sbb
jnp
xchg
add
imul
aad
jbe
adc
test
out
push
lods
arpl
ds
sub
push
js
out
jmp
into
push
mov
mov
scas
mov
lret
and
push
movl
loopne
outsl
sbb
jae
sub
aas
sbb
cmp
fcmove
stc
xchg
push
inc
mov
sahf
out
ret
sar
popa
int
dec
jp
dec
cmp
cmp
les
inc
or
sub
jecxz
andb
js
subl
xchg
mov
outsl
fimull
mov
sub
pop
lods
lahf
repnz
stos
ficompl
adc
inc
fmulp
movntq
gs
jp
mov
push
mov
sub
cltd
and
jge
pop
mov
xchg
mov
fs
sbb
stc
popf
pop
lcall
pop
cmpsb
sbb
cmp
hlt
pop
push
mov
adc
fidivrl
shr
or
int
xchg
pop
shll
pop
rorb
clc
adc
aaa
mov
scas
cmpsl
or
in
jns
mov
test
sbb
xchg
adc
jne
dec
ljmp
or
push
mov
mov
popf
inc
loop
cltd
mov
rcl
pop
push
testl
jae
aas
mov
mov
nop
bound
and
push
lret
and
pop
inc
push
mov
stos
xchg
adc
dec
pop
fmul
inc
dec
or
mov
jge
out
jo
clc
mov
mov
inc
sahf
js
inc
lods
lds
cmp
movsl
sbb
mov
lret
shrb
jecxz
mov
fcomps
jecxz
xchg
ret
cmpsb
shll
xchg
test
lret
jne
push
push
fcompl
mov
pop
push
pushf
xor
jo
in
ret
arpl
fcomps
or
xchg
inc
roll
sub
aad
cld
mov
fst
add
adc
jle
mov
gs
daa
in
aam
sub
push
add
test
fnsave
jne
dec
or
sbb
cmp
arpl
add
mov
jnp
jbe
cmp
cmpsb
dec
out
or
dec
add
sub
iret
xlat
aad
lcall
nop
and
mov
pop
std
and
inc
int3
imul
sub
pop
pop
xchg
adc
or
test
sub
pusha
arpl
sub
icebp
mov
popa
inc
xor
call
jo
sti
cmp
mov
jb
pop
pop
pop
imul
and
pop
les
mov
mov
xchg
and
push
ljmp
add
cmp
test
push
das
dec
aam
and
stos
or
faddp
sub
or
lret
fcmovne
icebp
leave
or
push
lahf
jae
sti
insl
xchg
sub
jns
push
into
jne
push
and
bound
clc
rcrl
xor
ficoms
scas
pop
push
ret
mov
lahf
lds
jecxz
mov
and
xor
imull
push
add
or
loop
dec
cmc
inc
leave
lds
fsubl
jae
adc
shrl
cmc
cmp
push
call
sbb
pop
push
mov
adc
repnz
mov
mov
mov
js
sub
xor
loop
cli
add
arpl
pop
pop
push
mov
sub
sti
pop
mov
gs
xchg
and
push
inc
and
pop
pusha
imul
iret
xchg
lcall
push
outsb
imul
xchg
or
push
fimull
fsubr
or
push
jecxz
add
bound
pop
fcomip
cs
or
sbb
cmp
sbb
cmp
jl
mov
sbbb
lock
test
aaa
test
mov
rcrb
inc
pushf
stos
pop
push
lret
loop
jg
cmp
and
inc
aaa
insb
mov
cmp
jnp
fsubrs
jp
push
sbb
sub
mov
push
je
setnp
or
jne
jnp
cmp
dec
movsl
fldt
jge
ret
mov
leave
add
inc
stos
cmc
jo
daa
lahf
fisubs
mov
mov
dec
addb
mov
add
stos
or
incb
aas
insl
pop
lea
mov
cmpsb
pop
jl
inc
test
or
adc
mov
negl
mov
xchg
push
insl
cli
in
jb
push
in
ret
incl
inc
mov
jbe
hlt
icebp
dec
mov
sbbb
add
outsb
xor
sbbl
jmp
jmp
sub
add
xchg
add
rol
push
shlb
addl
les
in
loopne
and
arpl
in
lahf
push
add
mov
ret
fdivrs
cmpsl
adc
xchg
add
sbb
das
pusha
mov
sub
adc
adc
pop
inc
sub
mov
mov
xor
sarl
cmp
clc
ljmp
mov
insb
bound
out
mov
cmpsb
jp
lret
out
dec
mov
pop
and
inc
es
cmp
fisttpll
incb
cld
test
roll
pusha
jbe
or
inc
clc
test
decl
xor
ds
sbb
arpl
fwait
fwait
push
add
xchg
mov
mov
mov
std
push
sahf
mov
gs
and
pusha
mov
test
andb
xchg
add
push
pop
outsl
mov
rol
clc
dec
cmpsb
movsb
jg
xor
inc
cmpsl
jno
push
mov
aam
xor
sub
popf
movsb
push
jp
cmp
pop
push
inc
ret
pop
xchg
adc
fdivl
xchg
add
outsb
in
cs
push
bound
sbb
xchg
dec
lahf
and
icebp
push
pop
mov
dec
dec
mov
mov
push
lea
xor
dec
cmp
mov
push
mov
mov
stos
inc
xchg
jno
movsl
sarl
arpl
je
or
mov
xchg
mov
push
dec
xor
test
nop
push
mov
pushf
sbb
mov
xor
pop
jecxz
mov
sbb
lods
pop
fwait
xchg
scas
movsb
mov
mov
mov
cld
xor
in
aas
addl
iret
mov
jae
jns
fs
ficoms
call
dec
add
or
mov
add
test
sub
xlat
ds
jne
ds
inc
xchg
js
mov
sub
mov
mov
stc
mov
aaa
lahf
and
xchg
mov
pop
mov
adcl
mov
dec
out
movsb
stc
jae
adc
xlat
sbb
xchg
add
icebp
sub
jno
cmp
icebp
imul
mov
add
push
mov
pop
inc
and
cmpsb
cmpl
dec
cmpb
test
mov
out
jbe
and
jmp
mov
cmpsb
shll
sahf
jle
sahf
sbb
insl
insb
sbb
push
clc
jnp
repz
popf
add
loop
jle
mov
inc
add
mov
insb
mov
ljmp
jo
push
loope
repz
mov
cmpsl
jle
icebp
add
aad
int3
daa
insb
adc
pusha
jb
loop
xchg
jno
mov
dec
das
sbb
je
sub
mov
lods
mov
mov
nop
sub
jecxz
fldt
push
jb
clc
sbb
jbe
sbb
pop
ret
cmp
sbb
stos
mov
adc
outsb
mov
xor
pop
xchg
or
fsts
mov
jns
mov
stc
loop
push
xchg
cwtl
pop
test
adc
pop
xor
les
push
nop
cmp
push
iret
mov
aaa
ljmp
sbb
mov
mov
sahf
cmp
mov
psadbw
fabs
jns
mov
mov
mov
push
fistl
and
int
bound
adc
mov
jnp
mov
mov
int
insb
jns
imul
mov
inc
repnz
or
adc
int3
lea
jns
cmp
dec
je
jle
insb
inc
cmp
and
cmc
leave
test
nop
push
and
mov
pop
dec
mov
mov
shll
xchg
lret
adc
imul
inc
es
lods
repz
dec
fst
cs
adc
sub
aaa
mov
icebp
sub
sub
mov
push
jg
adc
sub
mov
outsl
aaa
sbb
fisubrl
sti
push
pusha
or
jo
sbb
mov
in
dec
xchg
dec
lock
inc
sbb
mov
stos
ficoml
dec
pop
fwait
imul
mov
int3
ret
mov
out
mov
push
push
call
shlb
jo
int3
lods
std
insb
scas
mov
mov
andb
cmp
push
adc
or
and
fcmove
mov
lock
in
xlat
pop
mov
cmp
ficoml
je
stc
fldt
in
int3
outsl
idiv
lea
and
aaa
push
and
stos
push
push
cmp
jo
cmpsl
xor
popf
xchg
mov
lcall
sub
inc
mov
lret
inc
out
cmp
nop
lds
sarb
mov
mov
lcall
loop
add
mov
lods
outsb
arpl
inc
lds
sbb
aas
add
or
out
or
pop
cmpsb
mov
out
xor
adc
daa
xchg
sub
mov
push
xor
cmp
xchg
std
dec
in
outsb
and
jo
lret
sub
push
jg
rcr
aas
shlb
or
push
aas
add
sub
sbb
jnp
nop
cmpsl
mov
inc
cmp
inc
push
cltd
outsl
arpl
es
mov
movsl
xchg
cwtl
push
inc
pop
dec
testl
pop
mov
jns
dec
pushf
sbb
pop
mov
stos
jg
test
call
sub
es
pop
mov
data16
or
pop
pop
push
mov
cmc
je
or
jecxz
mov
cli
push
scas
stos
inc
jb,pn
push
aam
sub
stc
enter
or
push
sub
xchg
sbb
jmp
sbb
lods
or
or
addr16
xor
insb
sbb
mov
test
pop
jge
pop
test
in
and
push
repz
xor
and
pop
fcompl
adc
mov
rolb
insb
mov
lahf
data16
and
xchg
jl
and
les
lea
movsl
test
fistl
cmp
pop
std
scas
into
movsl
in
dec
shll
outsl
mov
loope
andb
in
ja
test
add
pop
jns
cmpsb
pop
sbb
mov
imul
mov
cmpsb
lret
jge
gs
xchg
cltd
push
push
loop
inc
ljmp
and
dec
out
stos
sahf
bound
cmpsl
in
or
jmp
jecxz
sti
hlt
pop
lods
inc
je
cmp
cmp
cmp
outsl
shr
add
enter
cltd
jmp
negl
jmp
pop
in
aas
mov
cmc
sbb
jno
fcom
push
push
push
repnz
aas
out
dec
inc
in
pop
jne
mov
pusha
xor
into
and
mov
int
mov
or
imul
stos
ficompl
or
out
xchg
jo
dec
jle
rorl
adc
mov
mov
arpl
ret
mov
jae
mov
mov
jno
jbe
jp
xor
dec
divb
mov
pop
mov
addl
add
sbb
xchg
mov
pop
into
adc
cmc
push
mov
jecxz
push
mov
fadds
mov
movsb
jl
xchg
xorb
adc
xchg
mov
stc
hlt
fsts
push
dec
add
xor
push
in
arpl
push
adc
js
adc
cmp
mov
push
dec
and
dec
insl
mov
in
jecxz
cs
lcall
cmp
sub
jnp
inc
fdiv
inc
int3
inc
xchg
aaa
frstor
mov
xor
dec
pop
xor
es
mov
sbbl
dec
incb
adc
aas
or
loope
inc
push
dec
rolb
mov
jb
std
in
push
pop
stos
cs
les
pop
in
cmp
test
pop
push
push
sub
and
inc
fs
dec
ret
addr16
nop
stos
ret
clc
lahf
movsb
not
jae
push
or
sbb
mov
and
adc
in
das
jo
ja
fisubl
cmpb
jmp
dec
mov
mov
pop
push
pop
sbb
dec
xor
ja
inc
pop
and
pop
lods
xor
xchg
mov
xchg
cmp
outsl
nop
inc
mov
dec
pop
mov
lret
sarl
adc
fs
dec
inc
jae
ljmp
adcl
lret
jnp
cmp
ja
jp
cmp
pop
insb
into
or
ja
push
pusha
mov
pop
imul
or
adc
in
sbb
sbb
mov
out
ss
icebp
lods
xchg
pop
mov
and
ds
lds
mov
jle
aaa
mov
sbb
into
cmc
sti
fbstp
daa
inc
mov
pop
mov
fwait
cmp
das
dec
xchg
adc
ja
jns
push
mov
lret
dec
mov
mov
cmp
arpl
xor
inc
sarb
test
push
shlb
fnstsw
xchg
add
testb
fisubrl
rorl
test
or
pop
jnp
adc
insb
xor
pop
mov
rclb
loopne
and
lea
fidivl
pushf
mov
xchg
movsl
adc
lahf
or
pop
or
ret
sub
rclb
xchg
das
xchg
enter
loop
inc
lock
push
into
aam
fsubrs
pusha
imul
add
or
scas
sub
bound
or
mov
add
mov
push
lcall
jecxz
cmpsb
jbe
cli
xchg
sarl
mov
jle
fisubrs
call
jb
and
mov
rcrl
push
jge
add
aad
and
fnop
les
negl
pushf
mov
mov
xchg
scas
pushf
and
lcall
aam
pop
sub
mov
aad
or
icebp
or
mov
sbb
dec
mov
mov
xchg
daa
add
cmp
mov
hlt
jb
rorl
push
inc
fstps
inc
jbe
push
pop
mov
mov
adc
mov
xchg
aas
push
lods
or
or
stc
add
adc
push
mov
xchg
inc
xchg
or
push
push
jns
xor
push
mov
lock
mov
sub
movsb
test
call
push
lea
clc
dec
jmp
xor
mov
sub
pop
fdiv
inc
sbb
test
lret
inc
outsl
out
fisubrs
dec
scas
dec
aam
ss
stos
inc
lods
xchg
mov
imul
adc
and
rcrb
xchg
mov
in
dec
push
repnz
xchg
push
jne
mov
fs
xchg
push
jo
std
lcall
cmp
repz
movsb
xchg
push
mov
jg
stos
rolb
xchg
add
jmp
gs
pop
and
paddsb
xchg
cmp
mov
inc
xorl
jmp
ds
out
pop
int3
push
mov
inc
dec
clc
js,pt
sub
cmp
jno
lcall
fucomi
negl
mov
ds
out
cmpsb
mov
and
fldcw
pop
adc
mov
ja
sbb
das
cltd
pop
xor
aas
mov
mov
std
testb
lods
or
call
out
mov
pushf
mov
dec
inc
aad
js
pop
nop
addr16
jle
js
insl
cmpsb
gs
sub
xchg
je
or
mov
cmp
aaa
cmpsb
cmp
or
inc
xor
adc
sar
iret
cmp
mov
movsb
pop
or
adc
sub
mov
cli
enter
adc
fcmovnb
xadd
aam
iret
mov
out
nop
scas
pop
pushf
or
lcallw
std
outsb
jne
mov
ds
insb
cli
pop
hlt
push
sub
cli
mov
sub
cld
jle
sbb
ds
ficompl
ja
adc
adc
add
daa
sub
sub
dec
je
rol
jle
testl
add
sbb
mov
movhlps
dec
jae
lods
repz
xchg
mov
or
repnz
cli
and
into
insb
test
add
icebp
jle
mov
xor
push
add
push
adc
mov
cmp
lods
in
xorb
fdivrs
and
jmp
imul
add
sbb
push
and
dec
test
and
roll
and
popa
cmpsl
xor
mov
sbb
mov
scas
sub
dec
pop
adc
flds
lds
dec
imul
rolb
lcall
inc
movsb
mov
inc
adc
aam
dec
cli
leave
adc
push
loope
and
mov
fstpt
movsb
pop
push
xchg
inc
xchg
pop
inc
adc
arpl
fwait
or
pushf
xchg
sahf
fidivrl
imul
lock
shll
pop
cmp
cmp
addl
mov
sub
jle
fdivl
sbb
mov
mov
xlat
into
pop
ss
xchg
mov
pop
js
addb
sti
cwtl
pop
pop
andl
sbbb
loop
hlt
dec
lcall
sbb
xor
imul
bnd
xor
mov
and
or
fwait
jge
cmp
cmc
cmp
in
dec
mov
out
faddl
cmp
push
arpl
adc
lods
xor
aad
cli
mov
stos
ljmp
and
in
xchg
and
stos
jge
rcrl
js
or
lods
mov
pusha
stc
inc
add
leave
mov
mov
les
inc
add
push
leave
and
push
inc
and
sbb
pop
stos
aas
inc
lret
mov
xor
inc
dec
inc
pushf
jmp
out
sub
or
cmp
shrb
push
fs
loopne
pop
mov
dec
mov
cmpl
push
mov
cmp
sbb
jecxz
out
in
push
cmp
fs
aas
stos
test
push
cmc
mov
mov
mov
mov
sub
inc
mov
jge
cltd
into
sbb
and
ja
mov
ja
add
xchg
les
xor
xlat
inc
xlat
mov
or
ss
cmc
lret
and
nop
and
cli
mov
or
pop
dec
test
popa
jo
icebp
cli
pop
and
dec
iret
pushf
pop
call
in
jae
dec
xor
call
adc
stos
rcrb
mov
imul
push
xchg
xlat
inc
cltd
sub
inc
mov
loope
in
shrb
pop
jl
and
mov
mov
xlat
xchg
jl
fadd
ret
pop
popa
sti
cltd
idivb
and
sub
pushl
and
stos
ret
inc
scas
mov
sbb
pusha
sub
cld
sub
and
push
or
mov
xor
pop
filds
imul
inc
frstor
addr16
add
enter
push
cmp
pop
outsb
push
inc
in
inc
testb
fsubrs
sbb
fs
test
jns
jb
divl
xor
fstpt
sub
daa
lahf
mov
arpl
jo
jmp
and
insb
enter
lahf
pop
add
movsb
in
jl
lods
vminpd
icebp
adc
cwtl
xchg
or
aas
nop
popl
inc
loop
jo
push
push
pusha
sub
lahf
push
lds
and
cmp
add
popa
mov
mov
mov
fnsave
mov
lret
divb
fstp
mov
loop
popa
cmp
pop
loopne
pop
jo
xor
add
leave
mov
mov
ja
lcall
and
jmp
fcoms
jge
and
jnp
xor
mov
mov
jmp
rclb
ljmp
aad
dec
mov
test
sbb
lds
shlb
enter
sub
sti
cltd
andnps
stos
or
enter
std
xchg
mov
fdivl
mov
fiaddl
js
outsl
xorl
mov
fld
sahf
sub
mov
mov
ret
fisttpl
and
lods
data16
in
jge
jo
push
es
rcrl
sub
jns
aaa
push
push
shl
jne
std
push
and
or
xor
push
cmc
fdivs
mov
cmp
stc
je
aam
rclb
inc
repz
les
jecxz
outsb
cld
xchg
sub
outsb
scas
sub
jne
das
in
adc
and
divl
mov
jl
ss
insl
push
test
cmp
gs
dec
hlt
lds
rorl
shll
cmp
sub
outsb
cmovae
movsl
add
cmp
inc
xchg
fcomps
jb
or
sbb
push
imul
dec
mov
lock
and
xchg
push
mov
and
xchg
mov
ja
sub
mov
stos
decb
inc
mov
sbbb
aam
sbb
fcoms
xchg
cmpb
ds
jecxz
scas
arpl
add
mov
repnz
dec
rclb
or
push
neg
add
mov
jg
je
push
pusha
clc
push
pop
mov
xchg
add
repnz
pop
add
xor
and
lods
sarb
jmp
xchg
mov
nop
sub
or
cmp
sbb
mov
ja
jmp
vmread
and
ret
lahf
mov
inc
cmp
and
pop
push
xchg
jnp
and
cmp
pop
pushf
xchg
bound
sbb
pop
sbb
stc
sbb
mov
enter
pop
lods
push
rorb
pop
popf
fstl
sub
mov
xchg
jnp
xchg
leave
xor
xlat
repz
pop
lcall
jge
je
jno
jge
xchg
jns
xlat
pushf
sbb
push
push
lock
cmp
and
xor
test
lret
adcb
lret
xor
sub
loope
sarl
fcoms
cmp
or
push
sbb
sbb
sub
mov
rorl
or
cvtdq2ps
test
push
lahf
adc
popf
sub
mov
in
pop
xchg
xor
daa
stos
push
sarl
repz
push
fcmovnu
fwait
test
dec
or
xor
test
push
repz
mov
inc
jp
test
cmc
inc
int3
dec
mov
adc
fs
add
mov
sbb
popa
and
pusha
sub
stc
call
or
loope
jno
jo
jb
movsb
rcr
inc
das
cs
cld
repz
and
xor
pop
dec
insb
fnstenv
imul
test
jecxz
stos
dec
sub
mov
jg
pop
fwait
jp
sbb
bound
rcrl
mov
or
or
dec
add
lret
add
mov
inc
test
adc
mov
nop
sub
clc
jnp
push
jecxz
jle
dec
xchg
outsl
shl
jecxz
jnp
fcoml
cmp
in
lods
into
nop
ret
sub
pandn
movsl
les
sahf
stc
adc
popa
inc
cwtl
jecxz
cmp
jnp
push
rorl
fisubl
sbb
xor
ret
jge
sbb
push
cmp
mov
push
xchg
in
rcll
mov
cmpsb
jne
inc
pop
sbb
outsl
jecxz
cmpsb
mulb
ja
orl
sti
push
lahf
cmp
sbb
or
imul
call
outsl
push
adc
popf
jle
fwait
int3
in
dec
inc
mov
outsl
lods
out
out
pop
ds
xchg
test
cs
push
mov
dec
call
test
pop
leave
push
stos
sarl
push
sub
xchg
repz
cwtl
leave
jbe
ljmp
and
hlt
loop
and
leave
sub
das
jle
lahf
insb
lret
ds
xor
mov
lods
arpl
outsl
test
mov
or
push
movsb
and
bound
sub
loop
jg
je
fs
xor
dec
aad
mov
push
js
push
lods
out
js
push
scas
test
adc
and
fstpt
xor
fdivrs
inc
ja
mov
cmc
jp
mov
jbe
std
ljmp
ljmp
mov
cmpsb
inc
ret
jns
dec
mov
shlb
stc
push
and
int
mov
lock
mov
or
jae
sbb
fildll
bound
sbb
fbstp
pushf
mov
je
lock
jl
pop
mov
and
inc
sub
inc
add
fiaddl
icebp
test
rcl
jge
adc
or
or
xchg
data16
xchg
push
sbb
into
xor
fmuls
jmp
add
into
and
stos
ret
pop
loopne
in
xchg
jbe
cld
xchg
test
test
mov
sub
ret
inc
add
in
lock
std
xchg
mov
lret
ret
sahf
xchg
mov
push
sub
pop
test
outsl
pop
in
mov
push
add
es
out
ret
or
in
push
roll
jae
push
ja
cmp
and
push
shll
outsb
push
mov
fcomps
mov
and
push
stos
xor
pop
mov
addr16
in
push
imul
fbstp
imul
and
adc
pop
and
jle
cli
stc
xchg
movsl
shl
push
ss
xchg
push
roll
gs
mov
lahf
inc
sbb
arpl
lock
pop
icebp
stos
in
loopne
cltd
sbb
stos
mov
loope
fwait
xlat
out
test
jecxz
lods
stos
sbbl
jle
outsl
jns
xchg
addr16
stos
mov
lds
xor
push
cmp
orb
pop
test
or
bound
and
cmc
cmc
jb
rolb
sub
jo
sub
data16
movsb
push
sub
mov
xchg
mov
pop
jmp
out
pop
add
mov
inc
cmp
in
add
and
mov
mov
repz
imul
test
lahf
fldcw
inc
add
push
cs
cmp
cmc
mov
dec
dec
push
aas
aam
and
stc
out
pop
rsqrtps
xchg
shrl
loopne
dec
fidivl
cli
push
lock
rorb
sub
je
out
pusha
fcoml
push
popa
and
jae
outsb
mov
push
jnp
mov
jbe
inc
test
cltd
add
sbb
xor
out
pushf
insb
pop
push
sub
inc
insl
sbb
stos
stos
fndisi(8087
std
fnsave
rcrl
sbb
jp
ds
pop
push
cmp
jle
xor
pop
ret
dec
dec
cmc
stos
sub
enter
mov
imul
mov
out
cmp
enter
and
leave
lcall
xor
addr16
add
outsl
add
lods
imul
scas
outsb
pop
lahf
pop
bnd
adc
es
mov
cmpb
sti
cltd
or
cltd
test
inc
fdivrl
add
mov
mov
push
cmpsl
sbb
and
inc
mov
pop
imul
je
or
push
int3
lods
ret
lret
xor
imul
mov
aad
cmpsl
rcll
push
shlb
mov
mov
scas
cmp
jo
jno
lock
ret
pop
xor
push
inc
data16
sarl
rorb
mov
or
lcall
mov
push
push
je
std
or
aad
addr16
mov
and
inc
push
lds
mov
pop
xor
xchg
fistpl
mov
stc
bound
or
movsl
sub
pop
inc
mov
gs
or
lret
mov
adc
sahf
insb
cmpsb
mov
push
inc
movsb
or
popl
test
loope
ss
xlat
push
sarl
pop
nop
outsl
fwait
mov
sub
shrl
ds
adc
push
das
pusha
pop
jmp
mov
sahf
addr16
xchg
repz
jae
and
insb
mov
mov
cmpsl
mov
cmp
pop
pop
inc
or
jb
pop
rcr
add
mov
mov
add
xchg
insl
data16
popf
push
pusha
cli
inc
inc
daa
pop
dec
xchg
xor
jecxz
xchg
cld
mov
aaa
in
cmpsl
cli
ds
insl
xor
mov
enter
neg
ja
popf
aas
call
sbb
dec
test
xor
out
jno
into
aam
jbe
mulb
mov
or
and
jo
add
or
hlt
clc
inc
aam
je
mov
adc
cmc
aaa
cltd
jg
dec
add
push
loope
jmp
pushf
xchg
lret
loopne
mov
test
test
add
lea
dec
test
dec
pop
add
lahf
lret
mov
mov
in
fadds
jno
or
lods
into
in
loopne
enter
sub
cmp
pop
mov
xchg
call
sahf
imul
and
repnz
hlt
shll
pop
cs
push
out
mov
xor
inc
in
repz
mov
push
jns
mov
movsl
iret
popa
lea
loop
push
dec
mov
dec
mov
and
push
ret
jns
jnp
or
lods
jmp
jl
sub
into
fimuls
aam
sbb
leave
cltd
loop
push
bswap
sar
xor
std
mov
iret
jl
push
push
mov
movsl
mov
gs
dec
movsb
les
inc
sub
xchg
cmp
push
in
mov
cmpsl
sbb
into
insl
sarb
push
cmc
bound
add
test
or
fbld
ljmp
in
movl
push
outsl
add
stc
aad
push
daa
sti
shll
xchg
sub
int
negb
mov
xchg
pop
sbb
std
sub
fimull
mov
loope
leave
insb
clc
add
inc
aas
out
add
sub
loopne
lds
mov
sbb
test
addl
sbb
sbb
jle
in
mov
addr16
sub
popa
test
lock
sbb
pop
pop
pop
shll
cwtl
insl
pop
fwait
and
adc
cltd
das
lret
cmp
shrl
jge
inc
dec
inc
mov
push
out
cmpsl
scas
es
loop
insl
pop
clc
xchg
stos
repz
cld
jno
movsb
dec
pop
mov
mov
pop
adc
out
adc
cmc
outsl
lods
sahf
test
cmpsb
or
mov
mov
sbb
fwait
shr
or
mov
push
and
incl
mov
test
fisttpll
mov
xchg
xchg
addr16
stos
and
stos
fidivl
xor
ljmp
jp
xor
daa
scas
mul
loop
movsb
js
sbb
int
les
jno
sub
hlt
cmpsl
fs
pop
dec
mov
arpl
cwtl
cmp
adc
popa
aad
jp
xchg
dec
cltd
sub
aas
or
aaa
mov
jbe
dec
inc
sub
pop
or
xor
inc
mov
loope
dec
jno
pop
mov
add
xchg
stos
cltd
mov
mov
repz
int
xchg
lcall
push
sbb
test
ss
test
pop
hlt
loopne
insb
push
in
es
dec
mov
mov
dec
and
fisubrs
cs
mov
ss
mov
sub
cmpsb
mov
lcall
in
fstpt
mov
xor
shl
stos
and
add
adc
add
mov
xchg
enter
jecxz
bound
test
mov
out
mov
daa
popl
sahf
and
lods
xchg
sbb
or
sbb
inc
mov
jmp
repnz
or
push
push
int3
frstor
dec
xchg
fiadds
mov
adc
shl
aas
inc
rcrl
ror
cld
cmpsb
inc
pop
sub
xor
jnp
xchg
stos
cmpb
mov
insb
cld
stc
jo
cli
push
adc
cmpsb
sub
push
clc
lds
mov
out
mov
arpl
mov
mov
push
mov
loop
nop
pop
pop
jo
jno
push
pop
dec
jl
mov
dec
pop
add
dec
and
pop
fsts
cli
jecxz
stos
jle
mov
mov
mov
dec
cmp
cmp
mov
jge
outsl
ficomps
ljmp
lods
push
inc
lret
sbb
leave
mov
sbb
or
in
dec
mov
xchg
adc
xchg
mov
test
mov
ja
insl
fstpl
lret
scas
mov
or
aaa
add
ljmp
adc
add
xchg
jns
sbb
adc
out
cmp
push
js
movsb
jns
mov
scas
shrl
aad
cmp
int3
test
jp
or
in
popa
fwait
jecxz
cmp
xor
dec
adc
sbbl
inc
out
xchg
addb
push
xchg
int3
shll
cmp
inc
cwtl
adc
stc
in
lahf
sbb
mov
into
cmp
push
push
sub
jnp
rcl
call
pop
cwtl
andl
xchg
cmp
shlb
adc
test
mov
in
cli
xchg
cmp
mov
xchg
pop
loopne
fwait
pop
test
jle
fstps
aaa
insb
dec
push
adc
fcompl
nop
shll
das
shlb
das
icebp
das
int3
lea
cmp
adc
sbb
ljmp
xchg
pop
xor
shrl
int
xchg
in
test
adc
es
icebp
xchg
mov
inc
in
xor
in
xchg
mov
jg
xor
mov
in
icebp
sub
xor
rclb
push
sub
neg
adc
insb
xor
popf
mov
mov
pop
imul
aas
pushf
inc
cli
sub
mov
fwait
add
or
xor
clc
pop
and
add
pop
cli
icebp
aas
stos
aad
lock
ret
js
sbb
fs
int3
xor
fwait
mov
sahf
aam
jecxz
inc
mov
dec
shlb
cmp
inc
and
mov
push
add
cmpsb
testb
and
jne
sbb
or
scas
cmpsb
mov
mov
xchg
xchg
loop
jl
or
xchg
and
cmpsl
aas
xchg
andb
out
outsb
in
and
aaa
ja
mov
les
cmp
sahf
push
es
sub
inc
pop
pop
adc
repz
push
pop
dec
gs
cltd
mov
mov
mov
pushf
xchg
cwtl
jae
andl
fnstsw
out
mov
mov
fcmovnbe
cwtl
pop
mov
enter
icebp
data16
nop
mov
dec
dec
lock
xor
clc
sbb
add
or
cltd
js
xor
dec
imul
mov
lahf
scas
pop
popf
test
pusha
int
popf
stc
pminsw
mov
inc
jo
popa
push
jecxz
adc
mov
test
stos
xor
xchg
subb
rclb
fwait
adc
or
add
xchg
je
add
inc
cmp
hlt
cmc
inc
push
cs
leave
sti
jbe
stos
clc
jg
dec
sahf
das
inc
xlat
dec
or
xchg
int3
cli
lahf
sbb
mov
cmp
in
sub
mov
push
mov
sub
jns
into
inc
data16
leave
push
mov
fists
sahf
mov
insb
shlb
roll
adc
cmc
add
mov
sahf
xchg
mov
in
data16
cltd
mov
mov
jge
mov
pop
test
lahf
jmp
inc
repnz
mov
xchg
cwtl
mov
jbe
and
js
add
mov
es
fnstsw
rcll
ret
pop
jle
daa
xchg
push
xchg
push
pop
push
push
nop
dec
xor
and
push
test
jbe
pop
xor
mov
cmp
adc
inc
test
dec
and
or
inc
inc
cmovg
gs
mov
xchg
xchg
push
je
addl
xchg
inc
jo
dec
fs
pusha
push
subb
and
sbb
sub
jnp
cmc
cmp
mov
xchg
fisttps
mov
cmp
call
cmc
mov
std
imul
pop
jp
bound
mov
popf
loope
adc
icebp
jo
inc
add
adc
fisttpll
jg
jns
xchg
jne
or
pop
or
dec
mov
sub
adc
inc
dec
sahf
inc
repnz
mov
call
enter
popf
jp
jp
sub
pop
pop
sbb
inc
gs
out
scas
repz
hlt
out
mov
pop
repnz
sub
std
xchg
or
inc
push
inc
rcrl
cmpsb
dec
pop
dec
mov
push
fyl2x
lret
test
sbb
push
scas
ja
mov
inc
pop
icebp
dec
dec
pop
cld
pusha
jmp
out
lcall
lods
leave
mov
push
enter
mov
dec
add
xchg
push
cli
out
cltd
mov
cwtl
sbb
mov
mov
int
vmovd
inc
enter
cmpsb
popl
or
xchg
dec
mov
sub
pop
shr
sub
out
push
popa
notb
das
adc
mov
mulb
outsl
flds
std
sub
and
out
dec
jecxz
lcall
inc
movsb
aam
in
xchg
mov
loop
mov
icebp
dec
mov
je
inc
and
sbb
dec
fs
sub
jnp
popa
mov
inc
repz
or
mov
pop
lock
fstps
cmp
push
sbb
and
push
xlat
mov
and
push
repnz
scas
push
jmp
cmp
test
in
gs
dec
jg
sub
xor
xor
sub
push
sarb
xchg
movsb
mov
outsb
or
add
lret
daa
cwtl
jge
jbe
outsb
xor
mov
dec
inc
ja
stc
scas
icebp
scas
inc
popf
dec
xchg
xchg
fidivrl
xchg
xor
rcll
sbb
movsl
push
js
pop
in
mov
jns
scas
push
mov
aaa
shr
add
aas
lods
fldt
out
mov
outsb
or
fcmovnb
mov
test
lcall
das
sarl
pop
imul
lea
mov
xchg
rorl
jle
cmp
xor
mov
or
push
cmp
add
mov
aaa
ret
loop
scas
pop
sub
lods
push
movsl
ja
jmp
pop
aaa
adc
push
call
mov
pop
loopne
imul
cmpsb
xchg
xchg
pop
xchg
imul
sub
lock
ljmp
cmp
sbb
ds
pop
pop
addr16
loopne
loope
dec
cs
push
fs
sbb
pop
sub
int
jne
add
mov
hlt
sti
shlb
icebp
arpl
pop
xchg
xor
pop
jno
insl
sbb
divl
and
sub
jp
mov
mov
mov
mov
sahf
aad
xor
int3
loop
push
inc
add
adc
arpl
cwtl
cmp
mov
lret
insb
fsubl
ljmp
mov
hlt
lret
aam
lahf
sar
cmc
push
xor
repz
enter
xchg
popa
arpl
pop
mov
pop
jns,pn
sbb
leave
les
js
and
push
xor
iret
cwtl
lds
fimuls
leave
fstpt
and
inc
out
js
xchg
test
flds
jb
lret
js
imul
cmp
pop
iret
std
pop
sub
lret
mov
cmpsl
jnp
nop
pop
dec
repz
clc
adc
mov
js
fs
mov
rcrl
xor
imul
jbe
push
mov
pop
fs
popf
lods
subl
loopne
scas
in
clc
push
mov
fsubrs
and
test
in
inc
std
aas
lea
popw
jmp
mov
adc
cmc
out
int
dec
xor
aas
sbb
xor
lods
cmp
dec
xor
jne
pop
push
int3
ljmp
mov
jmp
in
add
cli
pop
mov
pop
arpl
lods
mov
gs
cld
aam
xor
pop
push
loopne
jae
out
xchg
pop
out
adc
fdivl
xchg
andb
adc
and
lcall
iret
cwtl
dec
sub
fstl
bound
loop
xor
in
sub
dec
clc
shll
int
call
or
sub
cwtl
mov
call
sbb
adc
test
mov
div
stos
add
lds
bound
popa
ss
packssdw
mov
cltd
dec
mov
and
xchg
sbb
std
test
cmpsl
add
push
lock
jp
jle
insl
or
cmp
add
xchg
fmull
int3
pop
pop
std
js
xchg
daa
pop
mov
add
fisttpl
jge
sub
shll
fstl
push
add
cmp
out
push
xchg
aam
loopne,pn
ret
sub
test
xchg
cvtps2pd
mov
and
add
inc
add
test
inc
jnp
cmpsb
cmp
inc
imul
or
and
out
jae
sti
mov
push
inc
jno
xor
das
inc
pop
cmp
es
inc
call
imul
add
aaa
hlt
or
and
xor
jp
jmp
mov
es
or
stos
xlat
inc
or
xor
jg
insl
cld
add
fs
jo
repz
dec
xchg
cmp
mov
jns
pop
sbb
sti
into
das
movsb
out
pop
movaps
jmp
mov
shl
sub
mov
push
lea
cmp
adc
scas
ljmp
or
aam
call
test
stos
pop
lahf
int
mov
mov
or
push
sub
fldcw
sub
aas
jnp
cmp
je
aad
ud0
push
inc
test
add
pop
jmp
pop
hlt
cmc
xor
push
std
ret
lret
sti
mov
jmp
push
int3
mov
sbb
std
out
sub
add
test
jecxz
sub
into
sarl
idivb
xor
ljmp
push
mov
lret
popa
xor
push
dec
adc
sbbb
ljmp
mov
in
or
push
add
adc
fdivs
pushf
mov
adc
push
jno
aam
xor
push
out
jg
jecxz
sub
xchg
jg
in
fs
adc
out
sti
mov
in
in
inc
mul
xchg
pop
lock
insb
sub
mov
cmp
adc
jo
mov
les
mov
hlt
lahf
fidivrl
fisttpll
movsl
cmp
cmp
scas
xchg
cmpsl
jnp
test
fidivl
or
fs
push
arpl
cmp
and
mov
add
gs
test
adc
int3
mov
ret
test
mov
fistl
push
sub
cltd
in
and
jno
mov
sarb
dec
sub
test
jo
pop
ja
test
jl
jmp
push
xor
fsubrs
push
hlt
jae
jg
and
jg
push
fs
stos
incl
push
dec
negb
in
jae
ret
lret
jmp
stos
pop
and
nopl
out
nop
std
arpl
push
fwait
in
sub
sub
in
jmp
in
mov
xchg
mov
pop
mov
mov
jno
jle
out
dec
xchg
aaa
cwtl
shl
adc
call
xchg
jl
scas
loop
xlat
adc
inc
mov
and
int
fsub
mov
lret
mov
jge
mov
shr
sub
xchg
clc
or
dec
outsb
lahf
lret
inc
pop
dec
mov
dec
inc
or
rol
mov
std
mov
jae
jle
shlb
inc
xlat
or
cmp
pop
pop
test
sbb
rcrb
push
sbb
in
jno
adcb
jb
loop
sub
or
jns
roll
dec
mov
lret
or
xchg
mov
jne
dec
mov
add
ss
icebp
and
shrb
sub
jmp
adc
lret
out
mov
daa
mov
or
test
shlb
mov
push
xchg
addr16
mov
pop
nop
fisubl
mov
or
lods
sbb
sub
cmpsb
mov
int
or
fisttps
repnz
lock
lock
or
dec
push
cltd
pop
std
jecxz
pcmpeqw
out
int3
test
fistpll
test
fstpl
pop
lahf
ds
ds
es
dec
cwtl
mov
lea
and
out
cmpsl
pop
jae
arpl
push
in
shll
loope
push
mov
sbb
dec
into
in
stos
mov
shlb
les
lcall
fsubrl
pop
mov
mov
pushf
sbb
mov
sub
fcompl
data16
mov
imul
xlat
xchg
out
lret
mov
in
lcall
mov
into
nop
xchg
ja
iret
xorl
jle
ljmp
movsb
cltd
mov
into
jmp
fcomps
ret
fistpll
jno
mov
pop
pop
add
and
cld
fmuls
test
dec
sub
mov
int
cmp
xchg
ljmp
sub
or
jno
adc
pop
outsb
xor
cmc
xchg
mov
mov
ja
loope
arpl
out
pop
sbb
scas
outsl
sub
adc
int3
xor
mov
mov
cmpsl
ljmp
test
loopne
push
sub
sbb
or
test
push
stos
adc
fdivs
jne
push
xchg
ds
icebp
ret
inc
adc
sbb
or
jne
stos
add
or
lcall
pop
out
jb
subb
mov
icebp
stos
nop
sbb
mov
ret
pop
testl
sub
pushf
pop
inc
std
mov
pop
inc
mov
out
inc
push
rcr
dec
cmpb
arpl
je
cli
jae
addr16
repz
adc
mov
jae
pop
repnz
inc
sub
xchg
mov
call
lds
repnz
fbld
aam
leave
adc
adc
lret
sti
pop
lahf
lds
dec
lods
and
mov
lcall
cmp
divb
pushl
mov
pop
sbb
es
orl
cmp
js
int
mov
orl
add
incl
fcmovnbe
subl
pop
mov
nop
negl
and
adc
ss
testl
notb
adc
xchg
mov
or
mov
jb
mov
mov
xchg
pop
outsb
dec
mov
shld
loopne
add
popl
int
pop
jae
in
push
jne
pandn
mov
push
lock
or
push
jnp
ja
cmpsb
in
push
mov
dec
and
lcall
sub
lods
cmp
out
fnsave
rorl
jns
stc
loopne
adcb
sbbl
clc
inc
dec
mov
ljmp
push
add
sti
pop
mov
std
into
mov
or
cmp
mov
popa
pop
push
and
pushf
pop
gs
sbb
push
or
xor
sub
xor
mov
negb
dec
out
add
pop
out
dec
iret
adc
cmp
xchg
shlb
and
and
lret
jle
dec
fdiv
jmp
movd
mov
push
inc
sub
cmpsb
imul
push
bnd
dec
mov
push
scas
lcall
loope
enter
ret
adc
daa
jns
or
lcall
icebp
cmp
pop
shrb
xchg
pop
xchg
hlt
stos
mov
inc
notb
xor
jge
jl
arpl
mov
dec
call
dec
adc
inc
test
orl
push
or
test
push
sub
es
rcr
adc
xor
stos
stos
mov
mov
gs
mov
fiadds
lret
xchg
roll
outsb
add
adc
xlat
sub
lock
push
xor
jne
shll
ja
and
js
inc
negl
repnz
xchg
jp
xchg
stos
adc
outsb
xchg
mov
bound
adc
and
jp
scas
cld
das
into
push
sub
std
fs
xchg
dec
test
je
mov
and
repnz
daa
dec
push
repz
add
lea
dec
jns
and
dec
mov
imul
pop
pop
inc
repz
fs
sub
pop
jo
lahf
mov
and
jbe,pt
js
das
or
lret
sbb
mull
stos
mov
mov
insl
stos
cltd
push
nop
fiaddl
xchg
jge
cmp
shlb
or
fisttpl
out
in
sbb
je
popa
add
jb
cltd
mov
imul
movb
jge
lret
xor
scas
pop
lcall
imul
ljmp
sbb
stos
xor
push
mov
int
add
leave
lea
cmc
ja
cmpsb
adc
jae
mov
int
popa
jno
xchg
jbe
cmc
sub
pop
andl
inc
cmp
mov
adc
aas
out
add
repz
adc
cmpsl
pop
pop
call
shll
or
fcomi
orb
or
fucomi
inc
mov
cwtl
adc
xchg
inc
inc
sbb
pusha
push
sbb
jl
imul
js
mov
xor
push
test
sbb
xor
or
pop
sub
adc
add
pop
pop
push
aam
xchg
cmp
add
mov
mov
push
ficoms
push
sbb
inc
or
push
mov
pop
jecxz
xor
push
outsb
cmp
lea
jl
addr16
mov
xor
fistl
and
cmp
or
stos
jnp
push
fsub
ds
cmp
gs
push
lock
mov
nop
mov
pop
loope
rcll
out
scas
pop
dec
sub
fcmovb
sbbb
mov
bound
xor
xchg
mov
sbb
repz
test
cli
xchg
and
loop
mov
mov
pop
mov
push
dec
mov
fildl
aam
icebp
hlt
lock
xor
outsl
pushf
loopne
pop
inc
jge
push
or
jecxz
push
lea
or
scas
and
inc
mov
pushf
popa
test
adc
push
mov
mov
arpl
dec
and
rclb
and
or
pushf
ljmp
loope
ficoml
mov
out
dec
dec
sub
les
xor
scas
int3
jne
std
pusha
adc
mov
and
test
outsb
in
cs
das
dec
int3
mov
mov
adc
aam
test
mov
ret
and
jno
into
push
lret
mov
sbb
cld
mov
mov
fldl
cmpb
jmp
insl
insl
push
addl
fisttpl
cmp
test
jge
inc
add
jmp
lds
xor
icebp
cld
lods
cmp
mov
push
aas
ret
aam
fisttpll
loop
mov
nop
rol
incb
ds
push
scas
movsl
in
ljmp
adc
hlt
fsubrs
xlat
out
aam
pop
jnp
or
repz
cmp
xor
xor
mov
sahf
and
push
mov
inc
sbb
mov
mov
movsb
push
fdivrl
xorb
push
daa
push
ljmp
pop
sahf
jmp
addr16
sbb
mov
lods
adc
nop
xorl
aas
addb
sarl
scas
les
push
xor
insl
ja
hlt
mov
scas
int3
push
jmp
in
dec
rorb
lret
xor
push
lea
sti
pop
mov
mov
repz
add
jbe
arpl
cmp
sub
sahf
cmp
cmpsl
mov
mov
dec
cmp
dec
addr16
sbb
fwait
jle
loopne
in
xor
inc
mov
push
add
loop
mov
lret
call
pop
rcrl
movsb
pop
mov
mov
in
or
push
and
int3
stos
dec
ret
popf
sahf
cmovne
nop
inc
in
xchg
dec
aam
xchg
popa
stc
lods
jno
std
pop
mov
fs
cmp
test
outsl
pop
adc
stos
mov
mov
push
pop
sub
testl
or
fsubrs
das
aam
stc
dec
xchg
mov
jae
outsl
mov
movsb
ja
push
orb
adc
push
mov
add
sub
push
adc
dec
scas
cmp
sbb
test
in
dec
mov
mov
out
scas
dec
add
ja
sub
jno
call
movsl
xchg
mov
mov
mov
adc
adc
pop
xor
push
cmpsb
shrl
dec
outsb
inc
sub
adc
inc
das
dec
hlt
shl
iret
pop
push
fprem1
call
fistps
leave
enter
jnp
jnp
ret
or
hlt
jg
sub
xchg
gs
icebp
aam
mov
movb
mov
push
and
add
in
rolb
fstps
out
fsubs
fadds
and
ficoml
push
mov
sub
bound
roll
out
cmp
sti
bound
push
inc
ret
xchg
xor
push
filds
lods
sbb
in
inc
mov
outsl
push
pop
cmpsl
mov
and
push
jg
lret
xor
push
xchg
inc
jl
sub
add
cmc
ret
je
jecxz
cld
xchg
sarl
outsl
jb
rcl
std
inc
sbb
into
ja
repz
pop
aad
cmp
and
or
out
sub
je
lods
push
incb
sar
dec
movsl
lret
pop
mov
mov
mov
adcl
push
insl
pushf
js
int3
lods
icebp
xchg
push
add
cmp
and
fwait
xor
and
xor
out
add
lcall
pop
loope
ret
push
push
daa
adc
add
int3
in
lcall
les
cltd
lret
fistl
adc
xchg
mov
cmc
push
sbb
roll
fidivrs
into
sbb
ret
data16
test
fwait
push
lods
pop
or
leave
pop
sbb
sbbl
mov
enter
shl
or
fnstsw
nop
pop
gs
dec
int3
mov
sahf
and
loope
ss
adc
xchg
subl
loope
ja
dec
cli
les
mov
data16
xchg
pop
hlt
shll
sub
jbe
push
mov
sbb
lea
and
mov
test
mov
std
test
push
icebp
lock
mov
sub
jno
arpl
cmp
cmp
fwait
sub
mov
push
imul
icebp
data16
arpl
testl
lods
push
mov
mov
aad
jbe
sub
cmp
cmp
pop
aas
imul
xchg
sub
xacquire
scas
xchg
subb
inc
loop
ja,pt
lahf
push
shr
add
cwtl
pop
and
lahf
subl
je
fsincos
imulb
mov
into
movsb
data16
shr
jmp
mov
mov
imul
sbb
jge
in
mov
cmp
into
mov
cmpsl
movsb
fcmovne
jno
repz
lock
mov
faddl
mov
sbb
shll
add
clc
fiadds
rorb
cmp
fsubrs
loopne
mov
xchg
push
jmp
in
insl
cmp
dec
and
adc
push
rorl
cmp
or
or
cmp
jg
mov
jne
ljmp
push
lods
leave
stos
ficompl
push
rol
jmp
idivl
cmp
fmuls
popa
icebp
subl
jo
fdivrl
add
lock
lahf
xor
mov
into
rclb
push
arpl
jecxz
sbb
loop
dec
adcb
imul
nop
ret
mov
mov
mov
int
test
cmp
hlt
and
outsb
aas
ficoms
pop
pop
jae
push
bound
rolb
ljmp
cltd
xchg
ja
jne
cmp
jae
cmc
cmc
sbb
mov
inc
xchg
nop
popa
addl
pop
dec
add
outsl
pop
fistps
faddl
sahf
lods
push
jle
adc
scas
stos
dec
push
and
inc
nop
cmp
mov
push
sahf
popf
or
je
addl
mov
je
mov
or
pop
aas
stos
add
add
add
or
sbb
insl
dec
stc
xchg
std
sub
inc
ror
shr
push
call
cmp
ret
sahf
or
pop
mov
fisubrs
mov
inc
add
add
cltd
scas
dec
fiadds
sahf
pusha
es
mov
cmpsl
add
repnz
ds
pusha
iret
incl
das
dec
pop
push
sti
mov
loopne
dec
cmpsb
pop
inc
clc
or
add
out
dec
loopne
fisttps
xchg
std
push
sub
mov
cmpsb
fs
out
cld
xor
and
jo
adc
jae
push
stos
cmp
mov
rcll
mov
sbb
dec
mov
nop
decb
and
jne
cmp
xchg
pop
dec
cmc
out
fcmovnb
gs
in
out
scas
mov
icebp
scas
lcall
and
addr16
dec
xor
push
xchg
das
xchg
into
popa
push
repz
movsl
dec
xchg
adc
clc
cmpsl
outsb
ret
push
mov
pushf
cwtl
cmp
in
mov
icebp
xor
pop
inc
mov
inc
imul
repnz
enter
bnd
fwait
stc
test
iret
or
int
mov
test
gs
xor
cld
das
clc
xchg
subl
cmp
nop
int3
movsb
xchg
lods
mov
mov
push
lahf
cmp
mov
or
xor
pop
gs
add
hlt
mov
neg
mov
xor
out
out
outsb
out
ror
push
mov
lods
and
rcll
xor
add
sar
fmull
nop
jbe
pop
adc
into
mov
or
lahf
mov
pop
or
cwtl
jbe
cli
jle
jmp
mov
push
xor
inc
hlt
lods
jle
loopne
pop
dec
pop
pop
or
repz
std
lret
iret
jl
pop
cmp
mov
aas
push
negl
pop
xor
imul
mov
mov
mov
repnz
cs
sbb
lods
xchg
xor
fst
call
xor
dec
jne
jmp
adc
test
iret
in
fwait
jae
adc
mov
je
test
mov
jnp
cmpsl
fldt
pop
cmpsl
inc
pop
jge
fcmovnb
cltd
push
cmp
add
adc
mov
mov
cs
and
subl
mov
lret
or
push
and
mov
popa
es
stos
xchg
cmp
inc
ret
or
testl
cmpsb
mov
stos
xor
fsubs
in
xchg
and
sbb
and
inc
mov
lret
mov
mov
pop
and
pop
pop
xor
sbb
pop
int3
out
dec
loop
shll
fadd
jmp
mov
inc
mov
clc
adcl
xorl
vcvtsi2ssl
leave
in
out
adc
push
clc
xchg
cmpsb
mov
jg
rclb
xchg
test
push
inc
sub
dec
jecxz
divl
sti
and
sbb
lahf
outsl
xchg
movsl
loope
imul
mov
dec
cmp
dec
js
dec
jmp
leave
sub
movl
pop
mov
xor
aaa
and
aad
pop
movsb
cli
or
sar
cld
popa
fnstenv
mov
sub
inc
xchg
mov
or
aas
pop
mov
xor
xchg
and
jle
lods
pop
repnz
inc
inc
pop
out
adc
push
gs
sub
sbb
shlb
add
in
mov
pop
bound
mov
cmpsl
in
int
movsl
pop
cmp
and
mov
jno
fdivrs
outsl
cmpsb
ljmp
dec
sub
lret
sub
add
out
dec
leave
mov
gs
movsb
loop
dec
mov
arpl
pop
cmp
ret
mov
lds
neg
stos
in
add
insl
xor
icebp
iret
into
fwait
test
sub
fwait
movl
adc
and
jmp
lret
rol
repz
sbb
mov
imul
inc
push
mov
fcoml
fistpl
adc
fs
orl
mov
shrb
fimuls
call
repz
inc
stos
xchg
mov
mov
sbbl
jns
sbb
das
decl
sbb
or
icebp
jo
sbb
andl
jmp
xlat
flds
pop
and
je
xchg
stos
push
fistps
sahf
push
pop
lock
mov
lods
enter
push
adc
add
es
inc
mov
movsb
movsl
ja
xorl
xor
jnp
lods
mov
int3
pop
push
sub
test
jle
lahf
dec
or
lcall
push
cmp
push
pushf
xchg
xor
aad
xor
cmp
pusha
cld
jl
add
shll
stc
add
es
push
into
loopne
std
jb
mov
ja
popa
push
push
out
arpl
popa
mov
mov
mov
stc
movsl
xor
xchg
or
dec
out
iret
lret
mov
hlt
mov
push
shlb
pusha
xchg
lds
jae
fs
addr16
popa
roll
mov
pop
mov
pushf
inc
das
mov
xlat
xchg
cmp
adc
adcl
test
movsb
pop
stos
out
add
les
mov
dec
xorb
xor
xchg
hlt
pushf
out
adc
sbb
addr16
lea
jo
or
gs
xor
sbbl
aas
outsb
sub
add
leave
fs
jecxz
repz
lds
xor
daa
dec
stc
push
sbb
outsl
mov
jae
sub
call
mov
scas
adcl
mov
sbb
sbb
stc
inc
mov
dec
inc
adcb
fldl
out
push
dec
xor
xor
jle
icebp
dec
cmp
mov
addr16
jg
jns
add
ds
pop
les
mov
in
aas
inc
jbe
in
adc
dec
es
mov
roll
aaa
cwtl
aas
call
jns
movsb
dec
negb
insl
cmpsl
dec
loopne
sbb
mov
mov
dec
xchg
ds
mov
mov
mov
jns
sbb
mov
pusha
pop
fucomi
mov
adc
pop
inc
xchg
js
cltd
int3
add
mov
in
xor
or
stos
insl
xchg
imul
push
add
movsb
mov
xor
fldpi
bound
rolb
movsb
imul
push
sarl
int3
jo
aaa
stos
inc
test
xor
jp,pn
mov
dec
push
divb
imul
xchg
inc
inc
push
movsl
or
add
hlt
shll
mov
push
inc
aam
push
pop
add
xor
out
movsl
pop
pop
lds
push
lock
lods
dec
pop
inc
push
test
lahf
push
stos
outsb
push
pcmpeqb
adc
into
arpl
sarl
or
mov
push
pop
cmp
pop
add
xor
pop
add
jge
sbb
fdivrp
or
push
out
lret
inc
inc
cmp
ret
dec
or
cmc
or
add
stos
fs
pop
sbb
pop
fstpt
push
imul
lds
ret
loopne
lret
sbb
cltd
mov
xchg
ret
mov
clc
fs
xlat
mulb
test
adc
xor
icebp
js
xor
insl
rcr
mov
adcb
pop
jo
mov
ljmp
push
scas
nop
out
dec
push
arpl
pop
daa
sbb
and
jo
in
fwait
dec
dec
sbb
sub
pop
inc
dec
repz
mov
xchg
mov
inc
mov
push
xchg
fildll
or
je
push
jnp
add
xor
iret
jne
dec
imul
pop
call
jg
outsb
mov
fistps
xorb
xchg
mov
xor
fmull
incl
sub
cmp
jne
adcb
mov
and
sub
push
cwtl
sub
div
stos
gs
jne
jmp
jmp
arpl
loope
pop
and
test
bound
sbb
sarb
orl
xchg
fdivrs
mov
dec
sahf
xchg
add
and
xchg
xchg
and
jmp
cmpsl
push
in
sbb
sti
xorb
dec
ds
sub
and
add
mov
and
sub
mov
sub
pop
xchg
sub
mov
dec
rolb
loopne
lods
cmp
inc
fsubs
hlt
loopne
pop
inc
sahf
pop
nop
pop
arpl
or
lret
lods
dec
insb
addr16
movsl
sahf
bound
and
mov
stc
adc
xchg
jne
iret
inc
aaa
rcll
frstor
cld
add
sub
shll
xlat
mov
cmp
out
arpl
popl
sub
xor
mov
loope
cltd
push
sbb
jno
repnz
pop
pushf
lods
sahf
jecxz
dec
add
inc
add
sub
decl
cmp
mov
xchg
lret
xor
mov
inc
mov
outsb
repz
clc
cmp
pop
jno
jo
dec
repnz
cmp
je
xchg
dec
mov
or
addb
xchg
cmp
add
fsubrs
xor
mov
mov
rcrl
stos
nop
insb
jmp
aam
xor
gs
jp
fstp
jl
adc
jl
mov
dec
or
sbbb
pop
aam
sahf
add
cmc
scas
ret
jbe
ljmp
inc
mov
jns
int3
inc
mov
jno
sarl
loop
test
into
pop
push
jl
sub
xchg
test
fcmovnbe
jb
jmp
mov
pop
insb
iret
mov
sar
aad
and
ss
lods
xchg
fidivs
fucomp
dec
es
xor
imul
mov
mov
inc
or
pmullw
and
bound
mov
ja
xor
stc
ss
add
aad
and
inc
and
jbe
movaps
mov
and
xchg
in
xchg
push
cmp
sbb
mov
pop
jmp
fs
jnp
jae
loopne
in
test
pop
mov
lahf
stos
outsb
and
ss
mov
xor
pop
mov
cmp
add
adc
scas
cwtl
cmp
dec
out
es
cmpsl
enter
adc
mov
sbb
jns
push
adc
mov
les
mov
rorb
fdivl
or
add
enter
in
and
pop
enter
mov
inc
pop
andb
insl
cmp
sbb
outsb
test
push
ss
or
xor
dec
inc
lods
loopne
inc
push
outsl
cmpsl
mov
pushf
add
in
mov
lods
pushf
push
je
inc
pusha
sub
cmp
cmp
pusha
into
sbb
add
in
jo
mov
sbb
jl
and
mov
scas
mov
in
or
mov
mov
insl
push
inc
ss
test
mov
mov
int
fistps
shlb
outsl
mov
push
loop
repz
std
test
xor
cli
pop
das
jbe
pop
dec
es
sarb
scas
jne
cmp
xchg
imul
add
jno
scas
imul
push
fistpl
xor
xor
addb
std
cmc
mov
cmp
mov
jae
adc
dec
and
gs
fcompl
ret
lock
jmp
movq
std
fs
test
or
sub
arpl
sarl
sub
loope
inc
sbb
mov
and
nop
pop
cmp
cmp
je
negl
mov
jp
xlat
aaa
pop
push
adc
loope
test
push
mov
and
orb
andl
lods
jne
xchg
in
sub
scas
mov
adc
xor
mov
sbb
cmp
push
or
notb
dec
push
jge
sbb
push
mov
cmp
out
mov
or
dec
cs
push
test
xor
cmc
arpl
sub
or
je
dec
push
addr16
cmp
fsubrl
ljmp
aas
enter
xor
mov
xchg
cld
and
jb
std
cmp
jmp
or
push
sbb
pop
jg
cmp
sub
cwtl
and
std
in
test
loope
int
push
pop
pop
xchg
hlt
mov
aaa
pop
sub
imul
adc
xchg
mov
rcll
jle
push
nop
pop
inc
stos
jp
roll
bound
ss
icebp
and
ret
stos
fbld
and
ror
loope
mov
inc
rcll
dec
mov
test
hlt
push
out
lock
adc
xor
xor
jmp
jp
or
dec
ds
mov
or
nop
push
push
imul
mov
inc
lea
inc
inc
ljmp
push
jb,pt
je
lret
push
scas
andb
jne
out
add
pop
fs
push
es
lods
sbb
jb
and
jb
xchg
pop
gs
cwtl
jne
outsl
pop
mov
push
adc
or
out
jno
daa
divb
test
cmpsl
jge
push
fsubrp
xor
addb
adc
fs
ss
enter
out
sub
jge
jno
cmp
cmp
ja
idivb
test
xchg
outsl
fnsave
test
mov
outsb
cmp
xchg
stc
jle
push
or
add
mov
cmpsl
out
xacquire
incb
nop
cltd
push
pop
hlt
addr16
add
xor
test
add
clc
clc
xor
and
mov
or
xchg
or
add
xchg
cmpsb
out
lahf
pop
pop
mov
xchg
pop
pop
das
mov
sbb
add
xchg
sbb
loop
lea
inc
out
push
cmp
ja
shlb
xchg
testl
sbb
pop
out
add
test
jp
mov
int
out
xor
stc
sub
push
mov
rcl
and
rolb
icebp
nop
push
fidivs
pop
incl
cvtdq2ps
ret
mov
dec
ljmp
flds
and
mov
sbbl
aad
pop
adc
xor
dec
mov
sbb
movsl
roll
push
call
adc
inc
pop
sti
xchg
adc
rorb
hlt
cli
mov
cmp
dec
xor
lods
sbb
xchg
mov
daa
jmp
sti
andb
xchg
mov
das
cmpsb
lahf
fists
sahf
cmp
push
mov
xchg
out
lods
or
lcall
pop
dec
pushf
stos
mov
test
lds
xor
dec
lods
enter
or
inc
scas
mov
mov
or
sub
adcb
mov
int3
pop
and
not
sbb
inc
mov
mov
jbe
dec
es
scas
xchg
sbb
push
sbb
insl
cmpsb
mov
stc
fistpll
in
add
xchg
sub
das
mov
ja
push
xor
push
aad
sbb
cs
xor
ljmp
adc
add
js
fildl
fcomip
dec
sub
xchg
and
gs
pop
mov
dec
lea
jnp
inc
and
sbb
mov
inc
testb
xchg
add
sbbl
adc
ja
xchg
and
fs
mov
inc
sub
cmp
pop
aad
mov
aad
xor
sbb
jno
lret
add
xchg
sbb
mov
imul
adc
mov
test
push
cwtl
jne
xchg
andl
xchg
pop
sub
subl
popa
jl
nop
or
jo
mov
push
lret
xor
je
and
inc
in
lcall
push
cmpsb
xor
fs
test
arpl
out
push
in
pop
in
fildll
ds
xor
addl
xchg
cltd
jle
cmp
insb
sbb
push
xor
addr16
vmovaps
rcrl
test
sub
cmp
out
jns
andl
mov
out
rolb
aas
jno
les
sti
ret
mov
and
test
mov
xor
das
adc
stos
lods
int3
mov
add
movb
fnstsw
add
inc
inc
aad
aam
adc
fucomi
adc
push
add
insb
lcall
jp
cwtl
shll
sbb
loop
mov
add
cltd
push
imul
pop
test
jae
inc
push
push
out
sub
sbb
jmp
out
cmp
daa
jl
adc
inc
push
sub
sbb
imul
int3
dec
add
and
mov
push
rcl
cs
fldl
sti
scas
shlb
cld
sbb
movb
xor
mov
xchg
sahf
mov
sti
je
xchg
cmp
fldt
mov
xchg
push
xchg
int3
arpl
xchg
pusha
scas
es
insb
mov
ret
mov
cmp
sbb
outsl
cmp
dec
mov
sub
mulb
and
xchg
cmp
pop
enter
or
aas
test
arpl
out
iret
into
jb
or
mov
pop
leave
rolb
fnstsw
dec
jno
mov
mov
std
push
push
mov
ljmp
mov
cmp
repnz
outsl
add
pop
addb
push
fadds
sbb
xchg
cmp
push
add
dec
pop
out
mov
sti
stc
pushf
and
gs
cltd
xor
or
inc
setno
add
outsl
dec
mov
aad
xchg
xor
adc
imul
inc
out
jecxz
test
pop
mov
add
leave
mov
call
loop
lea
aas
inc
fstps
xchg
sbb
xchg
mov
shll
out
and
or
mov
fsubp
fld
js
imul
push
jmp
fsubrs
sbb
loopne
stc
jmp
fistpll
xchg
fsubrl
scas
push
fisttps
xor
es
sahf
outsl
inc
sbb
icebp
cmp
fdivl
jmp
aaa
ret
xchg
sub
jecxz
inc
stc
int
iret
outsb
xchg
mov
mov
xchg
xchg
xlat
lods
lea
arpl
inc
imul
inc
bound
push
sarl
add
test
out
in
cs
shld
dec
shll
pop
cmp
mov
pop
push
in
aad
cmpsb
cli
fdivrl
incl
les
mov
dec
mov
sti
stos
xor
xor
inc
and
push
jmp
and
cmp
fdivrs
fidivl
adc
fcomp
ja
dec
jbe
push
sahf
stos
rol
ljmp
loope
cld
outsl
je
mov
adc
loope
xor
pop
movsb
outsb
push
dec
lods
bound
mov
jge
in
in
int
call
inc
push
fwait
mov
ret
js
sub
imul
pop
xor
jae
scas
gs
in
icebp
xchg
or
pop
sub
mov
inc
loopne
outsl
add
cmpsl
xlat
sahf
or
cwtl
push
jp
or
push
repnz
jle
inc
mov
out
pop
jl
movsl
lcall
arpl
mov
fidivs
and
and
inc
inc
je
inc
cli
iret
mov
ljmp
or
push
sarl
nop
repz
in
inc
push
jns
lret
and
sub
or
cmp
test
mov
adc
lret
aaa
inc
lcall
fwait
roll
mov
or
lds
push
pop
mov
loope
hlt
mov
out
xchg
mov
ljmp
mov
pop
add
add
push
lods
and
push
je
cmpsl
in
ficompl
mov
shrl
outsb
mov
fldenv
dec
pusha
jo
jns
lcall
or
insl
int3
ret
rclb
xor
pop
mov
ljmp
xlat
loop
mov
push
mov
sbb
gs
out
outsb
or
clc
push
leave
addb
cli
mov
mov
push
pop
out
inc
pop
stos
iret
xchg
mov
inc
xor
jnp
repnz
rcrl
add
ja
pushf
shll
fldcw
icebp
in
mov
xchg
and
inc
cmp
mov
xchg
stc
addr16
ret
jb
pop
push
or
xchg
call
or
adc
repnz
xchg
es
insl
scas
repz
inc
xor
adc
loopne
and
lods
jns
repz
add
cmp
xchg
lods
xchg
inc
mov
mov
xor
xor
out
adc
mov
dec
pop
loopne
mov
sub
es
movl
sbb
test
mov
xacquire
fstpt
push
and
outsb
out
xchg
sbb
add
jno
scas
decl
scas
mov
push
push
leave
lcall
std
xchg
mov
inc
push
jo
shlb
sbb
mov
cld
es
adcl
xlat
stos
lahf
sub
ret
fucomi
mov
cltd
or
decb
rorb
mov
pushf
jge
inc
mov
test
xor
xor
ja
popa
mov
xchg
aaa
push
jecxz
pop
adc
loop
and
fnstcw
pushf
adc
lds
cwtl
xor
jae
jno
mov
hlt
push
add
mov
mov
pop
and
sti
and
jle
mov
push
push
sub
inc
pop
inc
nop
call
addr16
out
lahf
xor
sub
dec
inc
lods
mov
add
add
xchg
inc
jg
mov
roll
cltd
push
ljmp
mov
inc
jbe
dec
jl
push
cmp
outsl
pop
and
xchg
outsb
push
mov
sub
rorb
mov
push
or
cli
ret
lcall
sub
sbb
jmp
xor
pushf
sbb
stc
sub
dec
enter
jl
pusha
xchg
loopne
jbe
call
mov
mov
out
test
loope
mov
pop
adc
in
mov
test
jb
push
sbb
imul
push
add
jmp
int3
adc
mov
add
jnp
sahf
push
rorl
sbb
xchg
cmpsb
pop
xchg
jp
jmp
pop
jno
jg
cmp
or
test
insl
or
test
orb
mov
popf
inc
leave
into
lods
and
les
sub
iret
jecxz
adc
sub
mov
cmp
cmc
mov
jg
jb
inc
outsl
and
rcl
iret
rcll
add
outsb
xor
daa
fnstenv
jle
jae
in
inc
or
dec
icebp
imul
stos
rorb
and
arpl
add
idivb
movsb
push
movsl
jb
outsb
mov
ret
mov
mov
in
inc
inc
mov
mov
add
hlt
or
pop
add
jmp
dec
mov
mov
mov
xor
xchg
jp
test
pop
inc
mov
and
out
scas
shlb
shll
mov
ret
sbb
das
dec
pop
loopne
mov
sbb
push
or
roll
hlt
inc
out
sbb
arpl
mov
and
in
into
addb
jae
iret
push
pop
test
adc
or
jne
cmp
xor
stc
jno
push
push
mov
les
xor
add
popf
sarl
mov
xchg
or
push
jo
mov
add
mov
mov
mov
fisubrs
fildl
fimuls
in
out
loop
popf
fsub
xchg
dec
and
xchg
jle
pop
and
dec
and
sbb
test
jno
movsb
mov
dec
dec
add
inc
push
cmp
push
or
jmp
xor
inc
outsl
mov
mov
inc
adc
fsubrl
sub
addr16
sub
notl
stos
and
scas
adc
cmp
ljmp
sbb
repz
push
mov
lods
aaa
les
imul
push
pushf
mov
cltd
dec
sbb
das
cwtl
stos
sti
pop
sbb
add
or
ss
sbb
and
sbbl
leave
aam
xchg
js
shrl
call
movsb
out
or
and
bound
mov
scas
adc
std
mov
inc
andb
cmp
push
pushw
mov
cmp
mov
push
push
cli
imul
es
add
in
js
jae
packssdw
sbb
popf
test
adc
mov
jg
xor
ja
jne
aam
test
scas
es
jmp
push
pop
test
aaa
mov
fmuls
jle
lock
mov
cmp
pop
scas
cmp
mov
mov
mov
push
loop
sbb
std
out
xchg
loopne
bnd
in
add
test
scas
fstps
inc
out
mov
fcompl
mov
movsb
fsubr
cmp
push
xchg
mov
xor
test
add
pop
jae
xchg
fs
jp
mov
fbld
push
insb
mov
pop
arpl
ja
gs
or
pop
jecxz
jbe
mov
sub
push
jne
sahf
pop
sub
cs
fs
js
adc
loope
es
leave
jo
jnp
ret
adc
push
int
mov
ds
pop
test
mov
in
mov
lods
mov
imul
add
leave
push
test
lods
icebp
add
out
addb
sbb
jge
adc
push
in
add
fs
xchg
lea
ret
mov
sub
jb
jns
xor
adc
jmp
scas
push
sub
movsb
ficoml
xor
data16
int3
push
sbb
add
in
int
lea
stos
cld
inc
cmp
mov
int3
fnstsw
pushf
mov
mov
rcrb
xor
sub
leave
xor
jb
mov
in
insb
mov
imul
xchg
in
jmp
mov
movsl
ljmp
popa
mov
mov
sti
and
inc
test
sahf
cmp
pusha
outsb
adc
pop
shlb
push
pop
jmp
les
scas
add
adc
pusha
xchg
and
movsb
out
mov
jp
cmpsb
pop
mov
iret
sub
or
inc
mov
inc
out
fistpl
sbb
xlat
ret
mov
stos
and
xchg
lods
pop
push
ds
insb
loope
dec
jno
test
scas
lcall
daa
mov
push
fldl
jg
pop
clc
pushf
es
mov
pop
in
adc
int3
xchg
int
sbb
push
sub
sahf
xor
out
push
pop
inc
mov
scas
jmp
jle
test
adc
ret
lret
pop
leave
fwait
dec
cmp
shll
imul
push
inc
and
push
mov
sbb
xchg
mov
iret
out
push
mov
lahf
das
in
mov
fsubp
cltd
or
pop
and
imulb
mov
ljmp
fsubs
or
arpl
cmp
enter
popa
daa
pop
mov
xor
xor
jae
pop
imul
out
jnp
lods
mov
or
cltd
and
sti
jae
enter
test
gs
pop
mov
iret
mov
inc
jl
jb
sti
or
sub
out
sbb
sbb
cwtl
xchg
lea
pop
sbb
adc
xor
xchg
push
sahf
mov
dec
fldpi
mov
push
mov
les
data16
adc
movsb
push
add
out
mov
mov
mov
imulb
daa
nop
out
jno
sbb
or
imul
movsl
fnsave
push
fistl
mov
repz
cmpb
adc
aad
fdivrp
shll
aas
cmp
jb
add
mov
jp
sti
fcoms
xchg
pop
stc
or
ret
push
stos
sub
sbb
cld
mov
push
add
jns
jne
cmp
jle
jl
push
mov
leave
adc
lods
loopne
bound
lret
pop
scas
shll
inc
pop
shlb
sub
inc
push
jmp
lcall
mov
fdiv
pop
jns
dec
or
data16
pushf
jne
mov
jnp
rolb
subl
xchg
mov
mov
mov
adc
in
sub
sub
call
push
dec
jmp
adc
mov
in
test
jns
leave
cli
je
xor
or
stc
cmpsb
insb
decb
mov
imul
cltd
push
and
mov
clc
cmp
push
gs
adc
ret
in
mull
out
bts
pop
push
pop
outsb
nop
rcll
and
dec
push
mov
inc
fwait
cmp
or
and
sub
leave
nop
cmpsb
fldcw
push
in
popf
and
sub
jae
cmp
xlat
fists
cs
inc
xchg
xor
cli
imul
js
loop
in
out
pushf
xchg
lock
or
pushl
js
sbb
and
out
push
mov
mov
jb
adc
or
shr
mov
lds
ljmp
ds
std
pop
daa
js
add
dec
outsl
stos
bound
stos
xor
xrelease
je
ret
add
shlb
fldl
nop
je
orl
jp
sub
cld
or
out
mov
pop
aaa
inc
add
mov
fwait
je
push
mov
or
iret
adc
scas
aas
arpl
pushfw
in
xorb
xlat
jae
mov
ljmp
ret
mov
or
loop
push
sbb
insb
xchg
loop
es
scas
sub
fadd
xchg
leave
scas
push
adc
adc
sbb
sti
sbb
shll
bound
pop
imul
insl
lcall
rol
rclb
mov
fadds
sbb
xor
add
xor
mov
out
lcall
bound
mov
xor
and
cmpb
jmp
dec
sbb
lcall
adc
sub
nop
xchg
rcl
shll
and
xchg
in
sub
cmp
or
jnp
fldenv
scas
cmp
rclb
cmp
hlt
mov
xchg
add
sbb
or
icebp
bound
cmp
outsb
sbb
test
shr
push
insb
inc
adc
lea
int
dec
ficoms
fimull
mov
sub
or
adc
into
fisttps
outsb
sub
movsb
das
sub
jecxz
scas
fsubl
xlat
xor
pop
out
mov
insw
subl
ja
lret
iret
mov
or
adc
movsb
mov
or
ret
pop
test
jae
mov
cmp
lock
imul
sbb
daa
in
add
xor
xchg
fs
mov
pusha
stc
pop
in
xchg
fwait
pop
daa
sbb
shlb
cmp
or
scas
mov
lret
push
jge
jnp
int3
and
incl
mov
testb
test
movsl
jle
outsl
mov
jb
daa
dec
xor
test
xchg
cmp
mov
jg
or
inc
cmp
sub
ss
ss
push
mov
aas
repnz
in
cmc
ss
pop
pop
or
inc
inc
xchg
enter
insl
nop
jbe
cmp
sti
jl
inc
ss
add
or
pop
jmp
and
andl
adc
mulb
dec
jns
int3
mov
jle
cmp
lcall
and
adc
sbb
cmc
es
sbb
push
test
sub
adc
enter
loop
jns
stos
icebp
movsb
mov
add
xor
and
adc
inc
in
inc
push
mov
push
lock
fmull
dec
jnp
pop
mov
stos
xor
stc
mov
sarl
pusha
dec
sub
xor
pop
stos
push
xchg
cmp
mov
adc
lock
dec
xor
or
sub
add
xchg
xchg
das
cmp
stos
and
push
sbb
mov
jmp
ret
mov
in
nop
call
pop
out
add
pop
ret
cmpsb
mov
movsb
mov
mov
jecxz
sub
mov
mov
fisubl
xchg
outsb
pop
daa
cld
es
popa
mov
pop
sbb
mov
sub
iret
push
push
mov
mov
push
xlat
mov
ret
pop
sub
add
iret
mov
mov
xchg
jle
xor
stos
mov
push
sbb
mov
fs
divb
inc
pop
or
out
icebp
insb
xor
rorl
jmp
gs
fdivrs
cmp
aam
jg
iret
stos
and
out
pop
sub
or
pushf
ret
sub
rcrb
andb
adc
in
aas
repz
mov
pop
pop
xlat
rclb
aad
cs
xchg
inc
fldl
or
cmp
mov
sti
into
jg
push
add
adc
mov
iret
and
inc
fistl
pop
int3
popa
adc
outsl
inc
lock
repz
movsl
popa
movsb
mulb
jne
lods
out
lret
arpl
lret
mov
cmp
jno
push
mov
dec
scas
sbb
push
fidivs
cltd
jno
jbe
shll
fcom
inc
dec
shll
push
mov
cli
cwtl
or
fstp
lahf
pop
mov
divl
pop
jo
jbe
imull
inc
pop
jecxz
lret
nop
out
es
cmpsb
inc
ficomps
imul
add
stc
ds
jbe
dec
neg
fldt
inc
jmp
pop
add
jg
loopne
push
data16
mov
addr16
dec
inc
insl
jno
das
hlt
push
xchg
je
and
imul
cld
xchg
mov
sub
dec
mov
adc
repnz
imul
dec
xor
lock
adc
jbe
aaa
jge
cmpsl
and
mov
das
dec
mov
fxch
xchg
stos
mov
ficompl
sub
sub
xchg
dec
pop
pop
mov
enter
int3
shrb
mov
xor
xchg
hlt
in
cmp
or
jmp
lea
leave
xchg
xchg
xchg
or
cmpsb
out
decb
and
in
out
mov
out
jge
sub
pop
rol
scas
aaa
sub
dec
and
lods
xchg
repz
jns
lcall
xor
jg
jge
stos
and
in
mov
and
mov
imul
icebp
adc
add
jge
dec
sub
test
sbb
imul
scas
jl
pop
fld
mov
inc
jo
adc
xchg
jnp
mov
sub
add
pop
mov
stos
inc
mov
jns
cli
cmc
lods
xchg
testb
dec
aam
xor
and
mov
and
dec
out
dec
lcall
dec
push
dec
dec
int3
inc
imul
or
mov
bound
inc
movsb
inc
sbb
std
outsb
adcb
out
cmp
sbbb
pop
aad
filds
inc
push
sti
cmp
fwait
inc
call
pop
xor
insb
cmp
arpl
inc
push
push
rcr
mov
pop
and
stos
jne
loop
popf
cmpsl
loope
mov
sub
or
add
div
push
sbb
je
inc
inc
call
imul
mov
insl
xchg
mov
or
mov
mov
mov
leave
xor
pop
sub
sub
jno
jo
push
jbe
fidivrl
mov
xchg
lahf
add
test
addr16
and
add
push
sbb
push
jbe
xor
ljmp
lds
mov
dec
lds
jecxz
sub
inc
mov
lea
sub
call
mov
xlat
xchg
sub
shrb
adc
js
cmp
or
push
daa
xor
clc
mov
add
mov
xor
call
mov
xor
test
pop
sub
adc
jmp
lcall
movsl
and
adc
test
std
jno
popf
in
cmp
pop
pop
fs
vandnps
sub
push
sbb
shl
lret
pop
insl
sub
or
repnz
jge
scas
pop
dec
push
fwait
ljmp
sar
add
les
clc
mul
cli
cmpsb
cmp
fsts
xchg
daa
outsl
stos
bnd
ss
cmc
shll
jg
loop
std
movsl
jmp
lods
out
enter
xchg
cmpsb
add
cwtl
xor
aam
fcomps
dec
mov
in
dec
add
mov
idiv
sbb
add
int3
clc
lods
add
mov
jns
mov
lahf
push
mov
jo
add
insb
sub
mov
ret
push
bound
mov
dec
test
inc
sbb
ret
adc
lods
imul
push
mov
out
daa
mov
lods
jmp
sbb
fisttpll
add
add
in
dec
mov
insb
xorl
fdiv
out
push
andb
pop
insb
shrb
repz
in
adc
lock
addr16
lock
sti
sbbb
aad
xchg
push
cs
nop
or
and
clc
adc
sbb
sub
ss
add
mov
dec
inc
aaa
xor
jno
mov
pop
adc
xor
leave
jecxz
push
in
mov
movsb
pop
insb
xchg
icebp
push
lds
mov
lea
push
jle
std
aad
mov
popa
sbb
pop
aas
sbb
mov
or
adc
clc
jne
jne
push
or
bound
lods
bound
fidivs
xchg
lret
jo
pop
pop
dec
xor
lods
dec
imul
add
adc
insl
mov
cmpsl
sub
push
adc
push
add
gs
gs
xor
inc
xor
outsl
adcl
rolb
popf
les
cmp
in
in
and
stc
scas
test
push
sbb
jne
or
sbb
mov
stos
fwait
cld
lahf
xchg
int3
test
xor
pusha
cmp
push
mov
add
fiadds
xor
or
mov
insl
mov
push
sti
push
les
inc
fwait
inc
cli
jae
outsb
cmp
dec
xor
arpl
jo
iret
ljmp
adc
lea
xor
push
in
mov
loope
cs
cmpsb
sti
mov
sbb
add
repnz
gs
mov
stos
js
jne
popf
test
jmp
or
dec
xchg
in
cwtl
lcall
fimuls
jl
jg
inc
imul
inc
rcrb
testl
adc
and
pusha
popa
add
and
repnz
arpl
lret
or
fwait
dec
movsb
addr16
mov
cmpsb
push
push
and
aad
cmp
mov
in
mov
jp
popf
sbb
imull
int3
je
clc
jo
mov
faddp
push
lea
add
inc
inc
cmp
xor
or
push
out
rcrb
pop
push
mov
fsubrp
mov
inc
pop
sbb
xchg
adc
orl
ret
lret
cli
imul
jge
test
or
clc
pop
leave
dec
insb
daa
stos
push
das
adcl
pop
fucomp
cmp
aas
daa
inc
inc
out
jbe
lods
xchg
es
inc
cmpsl
cmp
jge
push
push
movsl
fs
add
fistpl
xchg
sub
insb
pop
mov
mov
pusha
cmp
in
xchg
das
adc
cltd
mov
mov
jmp
push
addr16
fwait
rcl
outsb
dec
es
movsb
push
lcall
dec
fucomi
jo
enter
dec
jl
cmp
shl
xor
int3
xor
in
pop
stos
mov
pop
aad
mov
push
add
mov
aad
lea
fdivrs
pop
mov
daa
inc
incl
flds
or
repz
repz
dec
mov
lods
ret
sti
movsl
sbb
cld
movsb
mov
ret
lods
and
xchg
out
dec
stc
ss
repz
ret
mov
sub
push
or
fidivs
lock
xchg
sbb
pop
lock
popf
nop
sbb
clc
xchg
mov
dec
mov
movsl
ss
lock
imul
outsl
mov
inc
and
stos
mov
sbb
stos
mov
jmp
or
pop
fisttpll
jl
bound
dec
xor
nopl
fstps
jb
es
xor
movsl
ret
jmp
sub
lret
sub
inc
mov
sar
adc
xchg
mov
popf
mov
adc
js
xchg
in
lcall
add
test
out
stos
stc
mov
fsubrs
push
imulb
push
int
push
dec
fwait
xchg
outsl
cli
mov
push
mov
xor
mov
aad
mov
jge
imul
andl
fwait
add
loope
xchg
mov
rorb
das
xor
mov
jbe
mov
clc
js
push
adc
sub
divb
mov
lret
repnz
adc
push
dec
pop
adc
add
mov
or
jno
lahf
or
pop
arpl
mov
jo
mov
cltd
xchg
out
in
or
pop
or
mov
push
xlat
dec
imul
push
fldcw
leave
adc
add
add
jne
enter
mov
lock
cmp
and
mov
fxch
cmp
scas
std
sbb
fmull
into
and
push
in
je
adcl
outsb
jecxz
dec
fnstcw
cltd
dec
mov
and
sub
mov
leave
pop
arpl
mov
pop
std
outsb
outsl
inc
mov
test
mov
rcll
bound
test
enter
test
repnz
sbb
xchg
inc
xchg
cmp
stc
dec
inc
mov
xchg
or
call
jnp
in
mov
loop
push
lret
mov
mov
add
and
inc
inc
xchg
int3
adc
xchg
insb
pop
movsl
add
jns
aaa
pusha
xchg
popl
scas
xor
loope
test
mov
pop
lret
mov
jge
or
fistpll
scas
and
ret
out
addr16
cli
mov
in
add
popa
jnp
es
je
cmp
xor
jmp
fs
aad
out
les
push
iret
out
xor
jb
gs
xchg
or
push
mov
or
popf
jle
pop
and
stc
mov
jp
mov
pop
push
add
data16
xchg
sub
or
cmp
xchg
push
jo
mov
pop
xor
lods
sub
pop
pop
and
mov
shlb
daa
xchg
sub
into
ljmp
fmuls
cmp
and
std
movsl
sub
movb
push
sbb
nop
or
or
mov
aaa
nop
aas
out
js
scas
cmpsl
jg
and
int3
stos
iret
xchg
xor
xor
xchg
imul
inc
je
scas
fwait
xor
mov
lea
sub
mov
pop
js
in
outsl
xchg
xor
sarl
jecxz
mov
mov
stos
leave
fwait
xor
lahf
xchg
mov
dec
das
add
shl
ja
pop
and
adc
pop
jnp
pop
stc
rclb
repnz
push
jecxz
xlat
bound
add
sahf
rcrl
push
icebp
mov
aam
jmp
arpl
pop
dec
fidivrs
pop
sbb
test
sbb
mov
clc
test
sbb
jae
jbe
jbe
fidivrs
push
jo
les
mov
mov
sub
jbe
loope
loop
sub
push
out
xchg
adc
inc
mov
aam
test
sti
jmp
mov
or
sbb
rcrb
cmp
js
cli
scas
scas
out
or
int
cmp
pop
nop
inc
adc
lods
xor
movsb
pop
idivl
jnp
lcall
inc
lret
inc
xor
push
fcoml
mov
pop
or
insl
dec
lret
subb
in
xchg
ds
sbb
xor
jbe
loopne
push
popf
or
mov
inc
std
repz
inc
jae
pop
shr
and
pop
pop
rcrl
fucom
scas
daa
pusha
sbb
dec
icebp
xor
movsl
decl
mov
sub
in
lea
shll
into
sar
sbb
mov
pop
adcl
cmp
mov
mov
mov
xor
outsb
add
ds
repnz
adc
push
les
subl
imul
fstps
in
mov
leave
movsb
sti
loop
xor
into
fdivs
dec
scas
jge
push
lods
push
in
out
scas
push
mov
jp
cmovns
jbe
inc
rclb
lcall
outsb
cmp
cmp
mov
pop
xchg
dec
mov
ja
cld
and
add
dec
xchg
dec
or
mov
stos
pand
jae
xchg
loope
mov
push
jns
cld
aas
jp
push
pusha
or
pop
or
cmp
and
add
pushf
push
ljmp
push
add
ret
push
in
jb
cmpsb
mov
in
inc
in
dec
repz
push
sub
jb
daa
jp
or
loope
xor
pop
pusha
or
mov
xchg
stos
ljmp
xor
mov
jp
inc
sbb
inc
push
mov
adc
aam
stos
or
jl
imul
out
dec
adc
xchg
xchg
add
sbb
or
xor
jns
inc
icebp
in
push
jp
xor
push
sub
movsb
push
mov
stos
test
push
dec
aad
mov
sbb
push
inc
adc
sbbb
in
add
sub
jmp
mov
daa
add
es
adc
push
xor
test
outsl
push
shll
or
mov
mov
sub
lock
and
cwtl
cwtl
clc
sti
lds
push
addr16
in
sub
xchg
pop
sbb
xor
subb
pop
push
add
int3
inc
add
lcall
push
and
movsl
lock
loop
jmp
lret
xor
pop
movsb
sbb
cwtl
pop
addr16
gs
xor
xor
movsl
xlat
xor
leave
sbb
cli
mov
and
shl
fisttpll
sub
mov
aam
dec
repnz
aas
addb
jno
test
clc
repz
cmc
imul
hlt
cmp
mov
mov
inc
rol
out
sahf
pop
jle
adcl
mov
lcall
lret
xor
pop
cmpl
rolb
dec
neg
jb
cli
mov
xchg
rorb
xchg
push
in
cmpsl
dec
repz
out
mov
mov
in
cmp
sbb
clc
jmp
fwait
cs
inc
and
push
add
jne,pt
mov
in
pop
psubd
rcrb
xchg
xchg
and
aad
fs
sbb
sbb
mov
mov
push
jecxz
sub
xchg
mov
add
adc
pop
iret
lcall
arpl
pop
aas
je
sbb
leave
dec
out
cmpsb
fstps
mov
dec
ja
ret
pop
sbb
fmull
jne
aam
shr
xor
stos
rcl
in
int3
mov
sbb
sbbl
in
fidivrl
adc
stc
nop
out
push
std
pop
lods
push
or
fimuls
jecxz
jecxz,pn
pop
out
jne
cmc
xlat
jb
in
in
ret
inc
xchg
push
stc
pop
xor
pop
into
push
imul
sbb
lahf
xchg
jle
std
pop
mov
pop
adc
pop
push
ud2
scas
xchg
rorb
mov
inc
dec
inc
add
repz
push
je
call
lods
ficoml
jecxz
out
fidivl
xchg
sahf
push
nop
push
mov
sti
xchg
mov
jecxz
test
sbb
out
pushl
jp
cmp
mov
lods
mov
inc
or
add
mov
lret
mov
scas
xor
nop
cmp
repz
jge
jmp
jle
loopne
mov
pushf
jns
inc
pusha
lds
pop
jb
inc
lea
nop
lds
js
xor
ficompl
iret
cld
xchg
adc
adc
dec
addl
test
or
pusha
sbb
inc
lahf
xchg
aam
inc
inc
lcall
mov
jne
push
inc
fwait
xor
aas
out
jecxz
xlat
cld
ss
xchg
movsl
cwtl
xor
push
ficomps
mov
test
dec
push
push
decb
leave
lea
xchg
inc
outsl
mov
jnp
test
jmp
or
arpl
fcomps
outsl
cmp
test
push
mov
jge
inc
clc
bound
cli
sbb
xchg
push
fnstcw
ljmp
aam
sub
pusha
xor
mov
nop
push
movsb
movsl
out
pop
cli
jbe
enter
clc
push
mov
mov
xchg
shll
fisttpl
insb
rcrl
fcmovnbe
xor
cmp
bound
rorl
les
arpl
cmp
sbbb
clc
mov
aad
and
stc
das
andb
adc
inc
pop
sbb
sbb
sbb
orb
add
daa
xchg
dec
fiadds
jno
lahf
int
mov
mov
add
lods
fwait
negl
sbbb
xor
adc
xchg
jmp
pop
lret
dec
sbb
shl
mov
pop
lods
call
jo
cmp
dec
cs
pop
hlt
cmp
lcall
push
dec
jp
jecxz
pop
aaa
rol
test
cmp
pop
lods
adc
cmpsl
push
enter
sbb
scas
fstpl
fmulp
pop
mov
push
andl
sub
arpl
into
xor
mov
mov
fs
xchg
negl
sbb
pop
out
dec
out
lret
lret
push
aad
mov
fistpll
loope
inc
jns
aaa
test
cwtl
mov
mov
dec
jae
pop
lret
mov
jle
cmpsl
cli
sbb
mov
sub
fs
imul
mov
cmp
inc
pushf
lods
mov
lock
xchg
sbb
jb
cmpsb
mov
xchg
pushf
push
mov
loopne
lock
aas
in
adc
add
adc
aam
pop
test
mov
lahf
push
popa
adc
cltd
add
and
pushf
push
loope
lret
pop
cmp
imul
js
mov
mov
push
inc
pop
cmpsl
or
les
insl
add
xchg
mov
sub
mov
cmp
inc
out
jp
or
push
adc
hlt
clc
in
cmp
insb
sub
stos
xchg
mov
cmp
mov
addr16
dec
mov
mov
xchg
cmp
push
lcall
mov
rclb
xor
mov
scas
and
mov
fsubr
sub
mov
decl
outsl
pop
sahf
out
push
out
add
and
in
loopne
ret
dec
enter
jno
adc
push
lock
fmul
mov
je
dec
or
sub
insl
imul
pop
sbb
push
stos
push
adc
mov
dec
or
xor
lret
hlt
mov
push
into
out
push
xor
push
jmp
out
jbe
or
std
in
push
and
iret
mov
dec
imul
sgdtl
clc
ja
bound
imul
stos
sub
sub
mov
jne
addr16
repz
fnstcw
aad
mov
mov
ja
mov
ja
es
es
mov
pop
xchg
xchg
aaa
pop
daa
add
mull
add
rorb
fadds
adc
enter
or
stc
outsb
lods
leave
dec
repnz
dec
mov
lcall
mov
rcll
mov
stos
dec
outsl
mov
and
sub
inc
sub
ret
and
movsb
bswap
add
call
popl
or
cmpsb
je
movsb
addr16
jmp
jg
das
pop
sub
mov
and
mov
mov
test
cmc
nop
and
dec
jb
sbb
shll
adc
pushf
rcrl
cmp
shll
lock
jmp
cmp
ja
xlat
push
or
and
jecxz
sbb
and
adc
xchg
or
xchg
mov
or
bound
lea
pop
and
push
xchg
or
pop
mov
push
je
popa
pop
aas
call
icebp
addb
lcall
lds
in
pop
test
or
jl
inc
xchg
mov
mov
push
test
aam
or
ss
int3
andl
mov
mov
call
clc
mov
sti
xlat
dec
and
mov
es
pop
in
ret
dec
pop
ja
ja
loope
sub
dec
js
repnz
jp
and
pop
stos
pop
jne
cmp
mov
jb
stos
int3
ljmp
lahf
js
inc
jp
dec
jmp
cmp
mov
or
arpl
rclb
inc
outsl
adc
insl
cs
bound
push
fcoml
jno
clc
dec
enter
data16
call
push
popf
or
stos
mov
xor
and
daa
aas
cld
out
cmc
cmp
repnz
jmp
cld
xchg
inc
jl
sarl
mov
pop
out
jnp
clc
fucomip
and
inc
outsb
push
loope
inc
jg
add
insb
pop
dec
int3
mov
lea
adc
mov
ficoms
push
fildll
adc
imul
mov
xchg
ljmp
fidivs
and
and
sti
and
inc
sub
mov
shll
das
sub
repnz
jae
leave
or
jmp
jno
lock
lret
js
test
pop
ss
hlt
or
fisubrs
push
sti
out
mov
xor
sub
mov
std
mov
or
jnp
insl
jge
pop
cli
stos
mov
mov
clc
aad
sahf
repnz
push
das
sahf
add
faddp
in
rorb
or
jo
inc
jle
sbb
push
shrl
setl
mov
daa
jp
cmp
data16
sahf
mov
mov
not
jb
dec
jno
lock
push
fs
test
iret
xor
leave
rcll
imul
cs
push
mov
test
fs
mov
stos
sti
js
dec
aam
push
out
dec
add
lahf
mov
xor
push
hlt
xor
in
sub
aam
ja
mov
xchg
jmp
aam
mov
mov
fisubs
sbb
js
js
fcomps
pusha
cwtl
inc
pusha
sub
outsl
sbb
cwtl
enter
pop
repnz
lea
filds
mov
je
outsb
shlb
in
std
adc
sahf
int3
inc
or
adc
xchg
inc
fwait
mov
movsb
in
es
xchg
scas
pusha
xor
jg
insb
mov
push
sbb
in
repnz
in
xchg
cmc
data16
out
into
pushf
out
addb
mov
ror
lock
loope
xor
popf
mov
and
loope
adc
shl
add
jns
or
cmpsb
jo
outsl
pop
icebp
pop
notb
lock
fidivrl
rclb
xchg
sub
popa
sbb
arpl
pop
stos
int3
outsl
cmpsl
cli
and
clc
sub
imul
cmp
push
jne
movsb
pop
aad
dec
ds
mov
adc
nop
jmp
pop
cmp
fistl
mov
push
cltd
push
add
inc
je
lcall
xor
lods
or
inc
in
movl
imul
outsl
mov
in
pushf
scas
stc
shlb
icebp
cmp
ud0
cmp
inc
les
lea
or
add
imul
mov
cmc
xor
mov
scas
sub
pop
xchg
aas
mov
jge
dec
or
out
sub
icebp
stos
loope
hlt
aaa
aad
inc
xchg
pop
lret
dec
mov
ds
into
stos
test
lods
arpl
push
hlt
adc
jle
stos
roll
inc
lods
pop
insl
sub
and
dec
cltd
out
in
test
pop
inc
adc
cmpsb
pop
test
lahf
add
lretw
sub
outsb
dec
adc
dec
mov
dec
hlt
ds
fildl
js
lds
out
push
daa
jno
cmp
sub
cmp
lret
leave
jne
ret
jle
push
fwait
cmp
mov
shlb
jbe
filds
shl
sbb
mov
js
lahf
icebp
jne,pt
adc
mov
jecxz
cmp
jae
data16
das
xor
inc
bound
fadds
xlat
mov
imul
pushf
repz
mov
mov
data16
pop
insb
jl
mov
fsts
mov
adcb
and
andb
cmpsb
mov
jmp
sub
xchg
jne
loop
mov
xchg
insb
xchg
mov
out
pop
inc
or
arpl
fisttpll
lods
inc
sti
push
stc
popf
ret
xor
sbb
mov
sub
or
adcb
jo
xchg
out
outsl
xchg
imul
aas
inc
test
cmpsb
lcall
jne
and
ret
sub
outsb
int3
int
mov
das
dec
jb
es
lock
push
out
cmpsb
imul
pop
ret
or
cmp
in
scas
inc
jbe
sub
push
dec
xchg
rclb
push
mov
iret
xchg
push
mov
jmp
outsl
mov
xorl
push
sbb
fwait
mov
dec
mov
xor
sub
andb
mov
inc
nop
dec
int3
lods
mov
mov
int
dec
push
sarl
adc
out
jp
ret
cmp
sbbb
mov
in
fwait
rcr
jno
mov
clc
cmp
dec
pop
dec
pusha
mov
xchg
imul
cli
xchg
loopne
rcr
xchg
sub
sarb
and
stos
pop
and
imulb
pop
or
cmp
add
std
mov
cmp
and
mov
add
push
push
jecxz
jmp
cmp
cmp
jl
lds
repz
jge
push
mov
mov
adc
pusha
xchg
xor
dec
xchg
mov
mov
push
mov
push
outsb
out
mov
jp
std
jg
movsl
mov
fstp
jnp
test
xor
test
rcrl
xchg
ds
adc
inc
leave
ds
bound
or
inc
mov
jecxz
cmpsl
xor
jecxz
iret
cmc
xor
mov
mov
push
mov
sbb
adc
test
xchg
cltd
movsl
nop
bound
test
pop
adc
sbb
push
imull
mov
pop
in
icebp
lods
insb
fcoms
inc
xchg
sti
inc
inc
popa
mov
add
mov
and
xor
sbb
roll
sub
cld
push
test
pop
sub
push
rcl
cmp
sarb
mov
mov
or
dec
lods
pop
push
dec
movsl
mov
or
nop
xchg
mov
test
adc
lret
mov
cmp
enter
stc
loope
adc
cwtl
mov
imul
mov
in
dec
adc
mov
sub
mov
push
cmpsl
jbe
shll
mov
dec
cmp
jl
aaa
add
hlt
mov
jo
scas
andl
adc
out
mov
dec
test
sarl
pop
iret
sahf
push
pop
and
cmp
orl
sub
rcll
stos
push
out
xor
push
or
lea
loopne
rcrb
mov
inc
jne
cmp
jmp
lea
xchg
xchg
jns
and
int3
pop
or
inc
mov
mov
mov
jecxz
xchg
pop
jb
test
jle
adc
lea
mov
pop
stc
xor
test
or
mov
cli
je
imul
test
push
pop
lret
mov
mov
mov
lods
sar
jp
jnp
sub
and
or
jbe
push
std
ret
sub
out
inc
push
dec
in
in
ja
add
push
mov
adc
jp
cltd
je
movsb
ret
popa
cltd
add
dec
insb
add
xchg
lods
jl
popf
lcall
dec
pop
jp
mov
ret
insl
lods
cmpsb
sarb
push
lret
gs
iret
and
add
or
add
jnp
insb
jle
or
mov
inc
push
sbb
adc
fildll
sub
sub
mov
mov
mov
movsl
leave
lock
into
out
sti
mov
negl
or
adc
push
cld
addr16
fldt
cli
cmpsb
xchg
xchg
mov
jae
sarb
inc
sbb
call
jp
push
dec
lock
add
pop
xorl
repnz
sbb
pop
jp
es
pop
decb
mov
xor
mov
aad
mov
jo
sbb
mul
mov
popl
scas
rcrl
cmpsb
sbb
mov
jmp
pop
push
push
pushf
or
rcl
icebp
xchg
mov
mov
stc
fsubrs
out
ja
lods
or
insl
out
xchg
pop
vunpckhpd
mov
or
or
and
xor
jae
fnstenv
leave
scas
push
and
sti
stos
pop
pop
out
stos
fcmovnu
cmp
adc
mov
outsl
stc
pop
xor
lret
push
adc
mov
add
icebp
invd
mov
imul
ret
scas
dec
inc
xchg
xchg
shlb
add
in
jns
add
call
cltd
dec
xchg
jns
int
outsl
movsb
jecxz
pop
test
loopne,pt
lds
repz
mov
mov
dec
cmp
mov
out
add
imul
enter
mov
fcmove
push
lods
jns
add
mov
push
rcrb
test
call
push
cmp
aam
andb
add
xor
idivb
divb
jne
adc
aam
test
mov
mov
cwtl
scas
add
outsb
icebp
xchg
stos
add
sbb
repz
push
mov
dec
jge
sbb
adc
mov
nop
cmp
xlat
daa
inc
xor
mov
mov
test
mov
stos
push
idivb
xor
mov
rol
fsubs
adc
fidivrs
test
add
sub
sbb
xchg
repnz
aas
pop
lods
lods
xor
ret
or
sub
cmp
pop
fldcw
bound
mov
sbb
push
ljmp
add
in
nop
insl
add
insl
mov
test
cmp
mov
ja
and
mov
call
inc
cli
xor
cs
xchg
xor
jl
loopne
pop
ljmp
or
push
mov
imul
jmp
xchg
mov
lods
icebp
jge
jno
int3
fnstcw
push
outsb
mov
push
and
xor
out
mov
and
in
popf
sbb
aas
lret
call
ja
jmp
mov
push
ss
out
pop
adc
sbb
mov
add
pop
std
repnz
ja
xor
cmp
pop
rcrb
xchg
pushf
sub
scas
dec
into
subl
icebp
cwtl
pop
les
sbb
adc
pop
rcrb
mov
popf
push
jns
movsl
rol
enter
or
sub
xchg
icebp
int3
je
iret
stc
out
push
hlt
add
and
cmp
je
xor
mov
ror
jp
cmp
sbb
cmp
jmp
lahf
psubsw
test
sub
inc
pop
mov
mov
mov
sub
and
sbb
test
test
xchg
add
repnz
mov
or
pop
jae
dec
jge
cmp
sub
cmpsb
jg
lods
jb
sub
testb
push
lcall
mov
mov
int
sub
sub
imul
jne
iret
mov
and
addr16
xor
lea
mov
and
xchg
lret
fistpll
and
jnp
popa
xchg
and
rolb
lock
adc
xlat
popf
nop
icebp
sahf
cmp
movl
and
jb
divb
test
les
ds
jecxz
rcrl
ds
xchg
add
cli
in
repz
in
and
jnp
movsl
sbb
gs
xchg
xor
sub
rcll
jb
inc
ss
sub
mov
out
and
jo
cmp
sub
cmp
bound
mov
xchg
subb
push
jge
xor
test
push
fs
sub
mov
jae
push
leave
mov
movsl
adc
popa
add
pop
pop
retw
cwtl
sub
inc
push
sbb
sub
adc
aam
push
jne
jmp
repnz
sbb
sar
dec
fsubs
mov
mov
js
xlat
inc
aam
movsb
lahf
xchg
cmp
out
pop
xor
jmp
imul
inc
push
in
jge
insb
addr16
jnp
add
enter
nop
inc
bnd
xor
shll
xor
push
mov
fdivr
cmp
shl
xchg
frstor
daa
addr16
jo
mov
stc
jmp
syscall
stos
mov
mov
and
add
mov
or
loop
bound
or
xor
xor
dec
loop
sbb
pop
int3
movsl
or
dec
dec
nop
aas
lcall
mov
sub
shrb
subl
jne
or
mov
pop
push
cltd
push
dec
mov
mov
int3
mov
loopne
push
add
cld
cmp
sub
cmpsb
fsubl
iret
xchg
insb
dec
out
push
mov
and
insl
test
cmc
aad
dec
and
lahf
call
out
or
rol
cmpsl
cmp
jno
jo
push
xchg
jb
fldcw
add
and
mov
mov
jne
call
fstps
sub
rcll
lods
fxtract
push
cli
leave
add
and
int3
outsb
push
mov
pop
rclb
jecxz
test
es
mov
add
das
popf
or
popa
pop
adc
jg
push
mov
sarl
sti
push
call
mov
mov
push
sub
mov
std
mov
or
ficoml
mov
out
movsb
xchg
pop
mov
push
inc
cmp
sub
push
test
clc
and
stc
inc
jnp
push
jbe
dec
dec
outsl
loop
rorl
cmp
stos
inc
hlt
lahf
bound
addb
cmpsl
fs
sbb
mov
pusha
sub
sti
ret
out
stos
les
mov
xchg
dec
push
fistps
dec
icebp
add
fbld
mov
cld
lea
push
aaa
call
pop
outsb
lock
in
jge
iret
jle
lods
push
sbbb
add
mov
push
cmpsl
push
cmp
fistpll
pop
leave
cmpsb
xor
fcmovne
ss
imul
inc
xorl
sbb
insl
fidivl
loop
inc
repnz
push
mov
je
pop
scas
pushf
ds
sbb
cwtl
out
push
rolb
mov
and
adc
hlt
imul
out
enter
jae
xor
pop
xor
lock
aad
mov
shl
ficoml
clc
push
std
push
sbb
jnp
add
into
inc
or
xchg
fwait
loop
or
mov
sbb
mov
mov
push
test
dec
xchg
rclb
andb
jo
push
repz
test
dec
xchg
aaa
lcall
pushf
aam
aas
inc
mov
cmp
xor
out
pop
jp
pop
imul
stos
ficompl
mov
add
mov
mov
mov
jp
out
adc
sbb
test
cmp
scas
jge
insl
in
popf
jp
lods
ret
loop
js
push
loop
movsl
xor
fwait
enter
add
and
stc
adc
cmc
push
dec
push
pop
push
jl
loopne
or
cli
insl
mov
cli
daa
mov
and
shlb
mov
ja
rclb
rclb
jbe
xor
out
mov
sbb
jmp
sub
pop
jb
stos
push
add
mov
jne
out
cli
jae
mov
add
xor
ljmp
inc
inc
jl
insb
pop
scas
cmp
aad
xchg
fs
xchg
lret
cmp
cmp
rorb
scas
movsl
cmp
or
sbb
movsl
or
jge
or
push
dec
fcomp
add
inc
insb
sahf
lahf
cmp
inc
sti
cmp
lock
cwtl
test
inc
jb
pop
add
dec
sub
dec
mov
push
push
fsts
cwtl
mov
call
inc
or
clc
insb
lret
add
insb
add
and
or
xchg
mov
mov
lock
sbb
pop
adc
add
jns
arpl
aas
lret
call
stos
aaa
cmpsl
dec
xchg
orb
ret
mov
stos
pusha
rol
inc
xchg
sbb
ljmp
jno
stc
xchg
call
fs
mov
jecxz
adc
jecxz
fisubs
mov
mov
sub
pop
sub
rorb
dec
jl
out
cmp
sub
xor
das
rorl
and
adc
push
push
xchg
das
xchg
scas
out
andps
push
lods
adc
repnz
lock
mov
mov
jnp
cmc
negb
push
iret
jo
xchg
push
adc
into
push
nop
or
enter
jo
jns
pop
mov
js
fistpl
jno
aaa
cmp
dec
push
pop
add
pop
imul
xchg
loope
and
mov
mov
in
inc
jnp
sbb
jo
cld
out
mov
pop
pop
dec
and
cld
rcrb
imull
lods
pop
mov
sub
ss
jp
xchg
scas
clc
cmpsb
out
inc
sbb
std
lods
xchg
arpl
adc
and
xchg
sbb
add
imul
inc
pop
adcb
cmp
cmpsb
jmp
repnz
in
clc
adc
js
or
out
bound
stos
sub
xchg
es
cwtl
sub
adc
iret
push
jmp
add
add
and
insb
mov
ror
mov
test
xchg
xlat
mov
in
fisubl
addl
aam
sub
pop
mov
test
cwtl
hlt
jecxz
filds
addr16
add
mov
push
xor
add
mov
icebp
add
pop
aad
popa
movsb
mov
dec
test
sbb
dec
dec
jmp
dec
mov
cmc
or
ss
ss
sub
mov
mov
xor
es
loop
popf
lahf
mov
mov
nop
xchg
xchg
mov
cmpsl
xor
sbb
cwtl
imul
data16
stos
pop
ljmp
lret
std
mov
xorl
xchg
mov
adc
jl
and
stc
push
xor
xchg
add
push
jae
sub
scas
hlt
adc
dec
mov
aad
inc
lcall
or
leave
jg
pop
test
pop
repnz
test
adc
mov
mov
jp
mov
fsts
sahf
imul
pop
ficomps
adc
xor
fisubrl
repz
and
dec
not
dec
imul
push
cmp
mov
mov
jecxz
push
cvttps2pi
adc
dec
iret
and
in
outsb
and
sub
rcrl
xchg
jns
mov
mov
cld
mov
fisubs
mov
xchg
jns
int
in
test
mov
stos
inc
pusha
or
mov
jne
jl
mov
cltd
sbb
xor
scas
xor
cmp
xchg
jno
movsl
cmp
or
push
stc
fcmovnu
jmp
test
imul
adc
sbb
pushfw
bound
xchg
aas
les
or
test
sbbb
adc
push
pop
js
sub
lds
mov
sbb
scas
shlb
lea
sub
repz
push
jo
push
test
out
sahf
push
mov
cmp
orb
mov
movb
xchg
insb
inc
mov
decb
push
cmp
imul
aaa
pop
sbb
and
js
lret
xchg
repnz
in
stc
jnp
xchg
and
roll
jno
inc
orl
in
dec
in
out
xchg
push
or
ds
xchg
jmp
inc
xor
js
movsb
adc
dec
xlat
push
shlb
loopne
lds
jl
imul
idivb
enter
int3
inc
add
out
sbb
mov
pop
call
and
mov
cmpsb
xor
jmp
ja
xlat
jbe
fdivs
xor
jg
enter
jns
adc
sbb
call
or
sub
sbb
outsl
adc
adc
fstl
xor
fistl
in
mov
xchg
inc
mov
adc
int3
inc
cmc
ror
out
cld
dec
mov
xchg
push
mov
xchg
mov
inc
aad
out
incl
push
dec
mov
push
or
xchg
dec
out
out
fildl
jbe
div
popf
and
push
adc
fwait
pusha
mov
fstl
mov
inc
gs
xor
test
leave
stos
out
jns
jne
lcall
jbe
addr16
adc
adc
movsb
push
test
sbb
push
in
xchg
adc
hlt
cld
leave
mov
mov
leave
adc
lock
mov
mov
mov
cmp
pop
mov
add
popf
hlt
testl
cmc
inc
mov
sbb
jno
scas
mov
mov
imul
or
imul
fidivs
outsl
sti
loope
iret
in
add
pop
test
cmp
mov
xchg
test
repnz
je
mov
or
lahf
dec
cmp
loop
add
adc
cmp
adc
notb
sbb
mov
jp
pop
jp
mov
loop
mov
nop
mov
loope
jb
jmp
mov
lahf
rorl
cmp
push
or
int
adc
call
fsubrl
adcl
test
hlt
xor
mov
addr16
rolb
shll
sbb
xchg
xorb
js
fisubrl
shr
push
mov
mov
rcrl
leave
scas
scas
sbbl
xchg
jnp
jns
jns
mov
popa
xor
inc
nop
fdivrs
jo
xchg
adc
adc
push
icebp
and
cmpl
hlt
sbb
adc
sbb
popf
pop
mov
aaa
pusha
sbb
loop
in
je
loope
mov
insb
cltd
push
lret
loopne
fcompl
pop
aam
sarb
xchg
xchg
std
push
pop
or
cltd
xor
mov
inc
cmp
xchg
add
cs
pop
dec
or
je
mov
ficoml
pop
imul
add
sbb
aaa
xchg
sub
pop
mov
inc
or
mov
leave
xchg
dec
jl
xor
cli
mov
aaa
imul
mov
sbb
sub
cwtl
mov
stc
cwtl
and
and
and
sbb
insb
mov
mov
xor
movsb
jecxz
and
jge
int
xor
mov
xor
nop
fbld
dec
jmp
cwtl
xlat
sbb
adc
xchg
push
shrl
mov
cwtl
xchg
push
fbstp
cld
scas
xor
adc
in
push
pop
iret
push
mov
lret
push
cmp
mov
ds
pop
sti
int3
movsl
repnz
lock
in
ds
adc
dec
sarl
fmuls
int3
dec
mov
ret
pop
fcomps
fidivs
sbb
xor
inc
mov
fmulp
lea
jp
popa
jmp
fbld
inc
jmp
iret
int
loop
dec
arpl
pop
cltd
inc
ret
add
repnz
insb
cmc
loope
xchg
and
into
cmp
loop
adc
fwait
js
xchg
mov
xchg
shrl
neg
cmp
loopne
pop
daa
adc
pop
movsb
fidivrs
jns
pop
add
push
lret
test
push
push
popa
loop
stos
inc
aad
or
ja
pop
fcmovbe
sub
cs
or
jnp
int
dec
mov
xchg
js
arpl
add
lahf
leave
test
cltd
cltd
test
mov
das
and
fstpl
add
push
popf
jl
fadds
shrl
enter
mov
xchg
mov
push
into
sbb
scas
pop
xor
cmp
insb
mov
clc
not
dec
loop
xlat
rorl
inc
pop
test
cmp
das
mov
in
insl
inc
cmp
mov
mov
test
test
andl
clc
mov
cmpsl
lods
pop
idivb
xlat
pop
sub
sub
movsb
call
xor
cli
xchg
or
inc
cli
inc
in
push
sarl
out
xor
push
dec
inc
cmp
pop
push
nop
lea
cmp
arpl
sbb
mull
subb
pop
push
inc
inc
call
jge
imul
mov
fs
test
push
iret
mov
and
mov
dec
xor
push
push
mov
repnz
mov
jb
shrb
mov
fisubrl
pop
mov
pushf
lock
loopne
pushf
mov
shlb
mov
push
sub
movsb
outsl
movsl
fs
out
popf
jecxz
mov
add
pop
jae
out
pop
into
repnz
xlat
pop
lret
jg
outsl
cmp
pop
dec
mov
sbb
jg
hlt
push
push
xchg
dec
or
xchg
cmpsl
pop
xlat
aaa
jnp
mov
sbb
movsl
jmp
cmp
add
jp
jno
les
mov
sub
push
inc
fcomps
rcl
mov
fisubrs
in
mov
repnz
cmp
xor
fildl
stc
push
adc
mov
push
cmpsl
xlat
pop
decb
ret
add
cmp
push
mov
jle
xor
jbe
std
stos
dec
outsb
add
subb
sahf
icebp
into
lods
push
mov
mov
jge
nop
idivl
out
or
mov
mov
mov
xchg
pop
pop
pop
cs
jbe
or
das
push
std
roll
shr
aaa
xor
fsubrs
gs
xlat
add
mov
fwait
test
xor
cmpsb
adc
adc
jp
or
push
rcrb
and
imull
mov
or
ds
out
jne
dec
lock
mov
mov
test
xchg
pop
lea
lret
lret
negb
leave
mov
mov
mov
dec
sub
push
dec
scas
lds
pop
aam
clc
pop
out
test
push
sub
ds
lahf
sets
inc
mov
jp
nop
pusha
xchg
in
cwtl
fimull
cmp
push
lds
scas
jl
adc
icebp
mov
out
push
jns
test
dec
cltd
xchg
add
dec
push
lret
xchg
in
and
pop
divl
pop
sub
push
and
fbstp
std
jae
mov
repnz
leave
shrl
or
and
xor
pop
jae
and
outsb
sbbl
mov
stos
add
clc
loopne
fsubs
mov
pop
cltd
fs
push
into
pop
mov
xchg
pop
mov
jbe
mov
adc
inc
xchg
xlat
in
cmc
cltd
jg
xor
fidivl
sub
mov
std
sbb
mov
int
popf
jo
push
adc
sarb
sbb
dec
int
dec
sub
xchg
jnp
addr16
xor
sbb
mov
cmp
leave
pop
xchg
lret
cmp
xor
xchg
sub
jl
popl
cld
lods
scas
adc
int
sarb
loop
call
sbb
ffreep
xchg
sysexit
or
push
lds
cmp
imulb
jae
sbb
lea
adc
pop
inc
mov
bound
in
es
xor
or
cli
scas
je
out
fcmovb
lea
and
ds
mov
loopne
imul
dec
test
jl
or
xchg
and
or
xor
push
shll
push
and
jae
or
nop
mov
adc
xchg
mov
xor
out
mov
adc
xchg
aad
es
or
stc
fs
adc
insb
and
stc
and
sbb
stos
sahf
jl
sub
mov
xor
outsl
lahf
mov
mov
jle
call
adc
mov
sub
mov
push
sub
mov
sub
mov
add
pop
pop
lahf
rorb
or
mov
pushf
inc
lds
or
and
out
cmp
flds
xchg
add
popa
popf
sub
sbbb
xchg
enter
lret
into
xchg
inc
inc
mov
sub
lods
es
lahf
std
inc
xchg
inc
xchg
test
sbb
inc
cli
insl
ja
mov
pop
cmp
pop
sbb
adc
sub
mov
jmp
mov
shl
mov
or
ret
call
insb
out
das
cs
leave
shll
adc
lret
lds
pop
js
punpcklwd
add
rcrl
push
es
pop
pop
mov
push
cltd
add
ror
int3
jmp
sub
add
and
mov
pop
mov
popa
push
stos
and
xchg
mov
mov
adc
inc
inc
push
inc
and
or
leave
ret
repz
push
jmp
inc
adc
imul
ss
fwait
push
adc
xchg
push
dec
mov
jae
fiaddl
mov
xchg
add
outsb
or
lea
rcr
or
lahf
xor
out
push
frstor
pop
ficompl
imul
add
xchg
pop
cmp
cli
adc
nop
fmull
cltd
cmc
fisubl
in
out
xchg
into
out
lds
inc
add
mov
push
mov
das
mov
mov
ret
sbb
xchg
inc
pop
adc
dec
cmpsl
and
gs
adc
xchg
in
push
xchg
sub
adc
adc
pop
fdivs
lcall
mov
mov
xor
jo
push
shll
and
inc
sete
mov
mov
cmpsb
fistps
loope
cld
std
xchg
mov
cld
nop
add
movsb
ds
and
mov
int3
test
bound
inc
jo
xchg
sub
add
or
popf
fs
and
dec
jp
sbb
and
lahf
int
fs
popa
pop
mov
push
and
leave
adcb
jno
stos
std
xor
andl
xchg
xchg
sti
jg
js
iret
xor
sub
xchg
push
fldenv
icebp
std
dec
pop
iret
xor
popa
add
mov
or
rcrl
fst
mov
lods
imul
std
fistpll
in
int
or
jecxz
push
xor
sbb
out
push
fcoml
in
or
repnz
add
pushf
push
sbb
pop
hlt
dec
in
es
sahf
std
pop
push
int3
aaa
cmp
out
jp
ss
adc
jle
ds
mov
adc
jge
xchg
insb
cmpsl
or
gs
xor
jecxz
flds
mov
icebp
mov
lret
rep
aam
arpl
mov
cmp
fsub
xor
dec
arpl
pop
ljmp
nop
popa
fidivs
mov
lret
test
jl
aaa
cmp
fdivr
jecxz
out
lcall
int3
out
pushf
xchg
roll
ret
sub
xchg
out
insb
daa
xchg
arpl
xchg
cwtl
push
clc
push
sub
mov
pop
in
add
cld
xor
mov
xchg
test
sub
cmp
ret
pushf
cli
cmp
loopne
fnstcw
gs
jbe
push
and
in
mov
aaa
repz
xchg
mov
subb
sbb
inc
add
mov
std
xchg
xchg
dec
inc
dec
loop
lock
fs
pop
sbb
ja
or
rol
jo
mov
mov
addr16
lcall
jo
add
mov
dec
icebp
bound
cmc
mov
push
cmp
and
cmpl
sbb
cmp
out
mov
jmp
popa
test
ret
push
xor
pop
mov
sbbl
inc
test
js
and
mov
packuswb
lahf
cmp
dec
repnz
in
clc
mov
lods
icebp
mov
insb
and
int3
mov
test
mov
les
in
insl
sbb
mov
sbbl
dec
xor
and
imulb
mov
inc
or
into
xor
mov
xlat
das
dec
mov
mov
call
pop
jo
aam
outsb
insb
iret
lcall
ss
pop
dec
mov
xor
or
or
lods
inc
and
lods
mov
scas
push
test
xchg
pop
pusha
mov
pop
in
negb
data16
shll
or
leave
xchg
cmp
xchg
push
jge
xor
sti
insb
jmp
cmpsl
arpl
popf
mov
sbb
sahf
hlt
pop
leave
pushf
pop
std
adc
or
dec
xor
mov
mov
test
enter
lahf
insl
add
hlt
ja
pop
xchg
inc
insb
shll
jno
int3
mov
adc
xor
popa
addl
mov
gs
cli
add
shld
dec
or
std
xor
xor
ficoml
cwtl
push
push
ror
xchg
sbb
mov
lds
call
ror
outsb
stos
cmp
mov
inc
inc
pop
xchg
inc
filds
adc
cld
push
aas
jmp
mov
jbe
scas
inc
enter
mov
repz
stos
sbb
arpl
lods
sub
sti
sbb
dec
mov
loopne
sub
push
mov
je
mov
xlat
mov
jbe
xchg
push
gs
loop
adc
mov
dec
nop
xchg
lret
sbb
sbb
outsb
mov
or
push
mov
dec
inc
push
inc
pop
dec
int
or
and
mov
insl
cmp
adc
jno
aam
cmp
cltd
or
pop
mov
and
pop
cmpb
insl
xcrypt-cfb
cmpsl
and
pop
or
fwait
mov
lret
in
ja
cmpsl
out
jle
in
popf
mov
sbb
jmp
xchg
mov
daa
adc
lahf
fcom
adc
imul
cmc
mov
fldt
xchg
or
roll
fists
pop
add
scas
je
ja
mov
scas
test
test
dec
lods
pusha
es
xor
mov
lcall
stos
scas
push
test
push
sbb
xchg
insl
leave
fdivrs
scas
push
sbb
ret
mov
testb
dec
mov
insl
fs
sub
pop
pop
pop
dec
fcmovnbe
fbstp
xchg
rclb
js
clc
pop
aad
cltd
or
lret
enter
mov
stc
in
loope
dec
mov
add
xor
roll
sub
push
or
pop
fcomps
es
outsb
cmp
sub
hlt
mov
sub
jno
rcrb
jl
enter
push
xchg
sub
xchg
sbb
push
pop
or
sub
push
mov
movsb
and
sti
push
inc
pop
push
clc
xchg
cmp
aad
ds
cmp
pop
mov
dec
add
and
cltd
stos
mov
xchg
fldt
xchg
call
ss
add
mov
les
lret
psubsb
jmp
fld1
mov
inc
pop
and
mov
mov
adc
outsb
pop
es
icebp
lods
aaa
add
pushf
lcall
adc
xor
insb
jne
add
das
js
push
mov
ret
mov
in
mov
sbb
int
pop
xor
addl
out
sbb
sub
imull
mov
pop
in
add
std
test
sub
loopne
mov
and
inc
std
hlt
dec
in
push
or
cmpb
mov
sub
push
aam
cmp
inc
push
xchg
push
xchg
ds
hlt
mov
dec
jae
icebp
adc
push
adc
jnp
inc
pop
xchg
pusha
stc
xor
sysenter
xor
fs
out
mov
daa
rcl
xor
pop
lret
xor
fs
lret
add
fcmovb
sub
inc
xlat
adc
jae
out
stos
lock
inc
cmp
cs
outsl
xor
inc
add
adc
vmread
push
fadd
out
loop
mov
or
les
pop
scas
xchg
std
sbb
xorl
insb
mov
jne
int3
mov
mov
mov
imul
sbb
inc
jg
jl
add
add
hlt
add
and
mov
lea
jp
push
fisubs
cltd
ss
clc
sahf
mov
rcll
jecxz
popa
subl
push
adc
jnp
icebp
sub
and
inc
pop
mov
stos
push
and
xchg
mov
cmp
pop
add
ss
mov
inc
stos
fs
dec
loopne
xchg
jge
leave
jbe
mov
je
xor
fisubrl
mov
and
push
mov
pop
dec
fmuls
add
xchg
jl
fnstcw
jl
test
mov
push
xor
add
cmpsl
jmp
cmp
inc
sbb
sti
xor
mov
push
cmp
sbb
in
xor
mov
int3
add
jge
test
lods
add
cmpsb
add
rcr
imul
nop
insl
ljmp
jae
bound
mov
pushf
xchg
add
in
idivl
cmpsb
push
je
xchg
sbb
cmp
mov
sarb
xor
add
mov
in
loop
scas
ret
mov
popa
sar
pop
stc
fwait
repz
sub
push
xor
out
movsl
lcall
scas
sub
dec
sub
add
or
cli
call
mov
das
pop
ret
stc
outsl
cmp
inc
and
xor
mov
pop
enter
test
fistpl
call
cmpsl
leave
scas
cli
jne
sti
ljmp
stos
fidivs
loope
aam
dec
pop
fwait
arpl
cmp
repz
subb
mov
or
insb
sub
es
sbbb
sub
outsb
adc
xchg
ljmp
lock
mov
in
dec
mov
lret
mov
jle
aas
cmp
jnp
push
out
xlat
sub
dec
and
adc
inc
dec
fwait
rclb
sub
mov
add
xor
ss
lock
stos
call
cld
mov
aaa
call
inc
aad
sbb
ja
jae
push
sub
adc
add
clc
and
scas
loopne
popf
jecxz
loopne
popa
loope
push
sub
xor
rorl
dec
aam
jno
xchg
and
gs
sbb
ja
cs
jo
push
add
jg
jnp
fisubrl
push
insb
mov
fcoml
push
or
sbb
pop
pusha
fstpl
xchg
filds
rclb
inc
push
xchg
mov
movsl
mov
inc
push
sbb
sbb
cmp
cli
pop
addl
repnz
lock
out
gs
scas
out
jle
hlt
add
or
lds
push
ret
jp
je
fisttps
movsl
mov
sar
dec
xor
fadd
mov
loope
sbb
lea
xor
out
push
daa
in
fcompl
push
push
ljmp
sub
xchg
or
sub
sub
pop
pop
add
or
mov
pop
jb
fadds
cmp
xor
mov
xor
imul
jmp
mov
xlat
out
xchg
sub
jnp
cmc
dec
fcoml
flds
add
int3
shrl
sbb
jbe
test
fisubl
sbb
pushf
cmp
sbb
loopne
test
cmp
mov
test
mov
roll
subl
sub
aaa
test
aaa
push
xlat
repnz
stc
xor
xchg
das
hlt
push
xchg
jno
dec
stos
push
jmp
cmp
sub
aas
rol
rclb
cwtl
outsl
mov
movsl
int3
mov
in
incl
mov
std
leave
mov
cmp
jp
mov
inc
adc
dec
lods
in
ret
roll
pop
cmp
push
out
pop
mov
sub
nop
push
mov
mov
mov
cmpsb
adc
pushf
mov
mov
jge
add
mov
mov
dec
rcrb
out
inc
mov
in
push
addl
mov
mulb
sub
pop
dec
bnd
mov
xor
mov
sbb
lea
push
fbld
cmpsl
bound
cmp
lods
addr16
out
and
mov
std
loop
pop
repz
push
sub
rcrb
lret
scas
daa
sub
and
int3
xchg
test
sub
stc
mov
jne
stc
mov
int3
xchg
add
out
xchg
xchg
inc
mov
cmpsw
jmp
mov
xor
repnz
jo
repnz
or
xchg
jns
hlt
ret
push
ret
repz
add
fwait
mov
in
test
cmc
add
popf
or
loop
jecxz
pop
cld
xchg
adc
test
mov
lcall
fdivp
inc
shl
mov
arpl
ret
test
adc
mov
insb
mov
inc
scas
xor
mov
out
in
lret
sarl
fnstenv
je
subb
cmp
hlt
add
mov
es
in
icebp
lcall
adc
pop
or
ret
pop
mov
cli
mov
dec
fstpl
cmpsl
sub
loop
shl
fwait
mov
push
in
lods
orl
ret
mov
push
daa
or
aam
test
xchg
jp
xchg
mull
add
shll
idiv
or
push
mov
cld
jmp
gs
jp
and
pusha
and
dec
add
orb
orl
pop
ss
mov
pusha
mov
adc
mov
icebp
arpl
jl
cmp
fdivrp
and
mov
dec
add
imul
and
lret
mov
sbb
shlb
movl
xlat
test
fdivr
fiaddl
inc
push
popa
fiaddl
push
fs
repnz
pop
xor
jne
aaa
sbb
cwtl
gs
cli
orl
and
repz
adc
push
push
test
stos
stos
iret
mov
call
sbbl
push
xchg
sbb
dec
jo
inc
aas
jno
jne
push
fdivr
fistpll
movsl
cmpsb
adc
lret
jge
push
or
ret
push
ss
and
mov
pop
out
mov
ret
jnp
insl
push
fcom
addr16
ficompl
mov
out
dec
enter
lods
and
jne
pop
mov
mov
jg
xor
rorl
mov
pop
nop
dec
loopne
adc
add
xchg
jmp
lock
sub
add
mov
in
push
pop
jnp
sub
cmp
xchg
mov
shl
fwait
pop
out
test
mov
loopne
in
in
or
mov
ffree
mov
cmp
jae
shll
insb
cmp
mov
fistps
int
or
in
mov
pop
dec
mov
sub
xor
pop
movsl
aas
icebp
xor
jle
xor
jmp
out
dec
dec
xchg
js
popf
or
ret
enter
xor
xchg
jg
push
or
les
jnp
push
loopne
loope
sub
cs
push
dec
pop
push
sub
clc
sahf
shl
push
adc
shlb
testb
mov
repnz
les
addr16
test
add
out
xor
dec
mov
or
outsb
jne
out
jae
sub
mov
cmpl
jno
enter
rcrb
xchg
sbb
jns
and
or
or
ljmp
pop
add
and
pop
in
cmp
pop
ss
pop
fistpll
push
insb
mov
iret
in
cli
out
into
mov
xor
adc
rcrl
dec
pop
mov
fcoms
sbbb
pop
mov
mov
fs
aas
xor
pop
ja
dec
popa
das
shll
iret
or
out
lret
mov
test
enter
push
mov
xlat
out
lods
xchg
cld
mov
mov
scas
aas
mov
cmp
stos
iret
or
jl
and
cmpsl
lahf
leave
xchg
imul
pushf
in
dec
ja
mov
je
flds
lods
sti
mov
stos
inc
mov
bound
adc
fnstcw
jae
xor
cwtl
push
test
insl
int
xchg
sti
inc
out
push
xor
adcb
add
push
add
les
fimuls
mov
mov
xlat
icebp
fisubrs
add
mov
scas
adc
jo
sub
call
mov
nop
mov
shlb
xor
movsb
lods
jb
fisttpll
stos
push
mov
push
mov
lds
or
fs
mov
mov
lret
lods
gs
sub
pop
inc
push
mov
ret
jmp
cmpsl
scas
and
or
or
adc
xchg
test
jbe
mov
lret
jns
mov
insb
xor
cmp
sub
sub
push
test
add
lea
mov
or
mov
dec
pusha
mov
loopne
xor
loop
nop
es
cmpsb
repz
shll
mov
sub
lret
jnp
push
sub
pop
and
mov
icebp
pop
dec
ret
jae
add
sarl
addr16
popf
cmp
test
jmp
test
pop
push
int3
push
cmpsl
or
imul
cmp
mov
dec
adc
adc
cltd
jp
inc
cmp
pop
inc
pushf
fisttpll
nop
stc
fstp
jo
mov
cltd
cli
push
cmp
test
jecxz
mov
xchg
cmp
pop
and
in
xchg
js
pop
insl
popl
push
icebp
hlt
sub
and
push
cmc
adc
jnp
adc
les
js
jne
iret
pop
jl
lea
add
sbb
notl
fadds
cmpsl
jle
aas
out
jbe
mov
adc
stos
mov
mov
mov
idivb
ffree
in
hlt
xor
mov
jge
inc
pop
sbb
xor
idivb
hlt
daa
sbb
dec
adc
gs
mov
pushf
lea
cld
or
push
push
lds
ja
cmp
xchg
lahf
pop
pop
rorl
mov
insl
xor
aas
mov
jb
fidivl
cmp
lret
lock
and
test
in
inc
in
push
in
imul
pop
in
xchg
dec
push
jg
inc
pop
mov
test
dec
fsubs
xor
cmp
sbb
push
pop
cs
into
cmpsl
nop
xor
in
cmp
push
inc
inc
imulb
cmp
jg
pop
pop
in
or
sbb
dec
pop
sbb
cmp
mov
sub
xchg
js
sbb
scas
inc
xchg
fsubs
cmpsl
push
sub
xor
fnstcw
mov
cmp
lods
or
out
pop
xchg
data16
popa
pop
xlat
xchg
lret
movsl
hlt
lods
xor
adc
xchg
or
shrl
nop
jbe,pt
cmp
cwtl
sbb
jl
xchg
aad
inc
xlat
scas
dec
fs
add
scas
cltd
cwtl
mov
mov
sbb
loope
inc
sti
insl
sub
xchg
cmp
pusha
repnz
out
rorl
mov
mov
lods
movsb
pop
jbe
ret
xor
inc
xchg
xchg
jl
lret
lock
mov
scas
add
sbb
mov
jge
repnz
add
lock
pmaxub
movsl
jne
aaa
inc
jae
test
adc
faddl
adc
test
pop
push
jb
and
lods
ret
ja
sub
pop
mov
hlt
iret
ljmp
in
pop
xor
nop
dec
filds
inc
xor
ljmp
mov
mov
cmp
sbb
cmpsb
xor
mov
int3
xchg
pusha
adc
lds
add
mov
cld
adc
sub
jno
rcll
imul
fs
mulb
iret
jmp
xor
adc
faddl
cmpsl
pop
and
pop
mov
imul
push
xor
pop
clc
mov
and
add
in
add
pop
mov
mov
jl
lret
dec
jns
sub
add
movsb
jge
jl
cmc
outsl
std
mov
fidivs
push
push
mov
gs
leave
add
xor
movsb
mov
mov
dec
popa
mov
xor
pop
repnz
lods
adc
mov
xchg
ljmp
inc
popl
andl
sub
cld
subb
je
xchg
andb
mov
push
sub
fwait
push
rol
orl
fisubs
imul
lea
mov
xchg
aam
frstor
sub
push
xor
and
xchg
lods
les
into
and
and
jnp
fdivs
sbb
sbb
int3
stos
sub
xchg
push
jge
xlat
lock
mov
inc
repz
cs
and
push
rolb
cmp
jbe
in
ljmp
ret
je
mov
in
ljmp
ja
fs
bound
sbb
xor
icebp
mov
addr16
mov
jg
inc
jnp
mov
hlt
cld
decl
jns
push
pushf
and
pop
test
outsl
or
dec
movb
mov
imul
fs
xor
in
push
xor
pushf
xchg
mov
div
icebp
clc
cmp
fs
ja
mov
andl
out
ror
sub
inc
mov
inc
call
or
call
cmp
outsb
push
or
movsl
pop
mov
imul
push
mov
icebp
imul
push
ljmp
cld
mov
lcall
pop
into
mov
cmc
pop
jae
jle
loopne
mov
sbb
push
popf
push
es
cli
int3
icebp
cli
addr16
dec
adc
mov
lcall
cmp
jecxz
adc
mov
mov
leave
lret
mov
and
rcr
out
test
mov
cltd
gs
mov
cmp
inc
dec
dec
lds
rol
xor
push
test
cmp
gs
out
xchg
loop
or
xchg
push
fsubrp
mov
push
lea
mov
dec
pop
sub
push
mov
inc
negl
xor
mov
int3
or
adc
stc
jo
or
jecxz
cmp
pop
lret
dec
lret
fwait
pop
fists
mov
inc
rolb
iret
xchg
aaa
sbb
cmp
add
or
lret
xlat
push
xor
aas
ffree
push
sub
mov
pushf
ja
shll
xchg
pmullw
mov
call
test
pop
push
scas
cs
scas
xor
xchg
hlt
ljmp
sub
dec
sbb
shlb
pusha
push
cmp
mov
push
cltd
je
ret
test
outsl
xchg
ljmp
test
inc
addr16
pop
push
adc
mov
enter
fisttps
inc
das
lret
mov
push
jo
push
adc
inc
cld
int
mov
int3
mov
dec
test
pop
repnz
cmp
mov
lahf
fdivrs
cs
out
js
jo
daa
nop
hlt
insl
or
xlat
int3
sarl
mov
adc
sub
leave
xor
movsl
xor
sbb
ds
add
and
push
mov
sbb
push
inc
cwtl
nop
enter
dec
cs
mov
push
aaa
es
pop
push
and
pop
leave
pop
pop
pushf
es
jl
mov
movsl
ja
mov
cmpsb
inc
icebp
cli
add
sbb
loopne
xchg
ds
adc
mov
push
imul
pop
sub
jbe
dec
dec
out
in
sarb
clc
das
shll
xor
sbb
loope
sbb
push
sti
dec
pop
push
lea
insb
ret
or
addl
test
mov
cltd
fimuls
jl
popa
cmp
test
lods
daa
xor
jl
mov
dec
add
mov
mov
xor
fwait
sbb
aam
mov
negl
stos
pop
test
pop
mov
movsb
in
xchg
push
mov
sub
jle
cld
pop
ret
sub
fldt
xchg
pop
push
pop
xchg
inc
add
cs
pop
push
xchg
je
adc
xchg
mov
add
scas
enter
imul
mov
inc
aaa
dec
lcall
xor
pop
push
sub
cwtl
jmp
rcr
push
sub
ret
and
cmpsb
aas
in
in
lds
mov
orl
or
sbb
lahf
cmp
or
sub
loope
xor
push
scas
xchg
pusha
push
int3
mov
test
inc
loop
mov
dec
pusha
jg
lret
cmp
test
nop
inc
arpl
ljmp
add
stos
sub
popa
mov
imul
out
cmp
jno
jmp
inc
nop
out
aad
pop
dec
aam
aam
jne
lods
sub
aas
dec
repz
mov
mov
sub
testl
lahf
cmpsl
pop
inc
xor
adc
push
mov
dec
out
xor
or
push
or
and
pop
je
add
jmp
mov
sub
data16
repnz
xchg
mov
mov
push
jns
jl
or
ret
test
and
xor
int3
test
xor
or
mov
push
jns
and
adc
fdiv
jno
cmpsb
not
enter
ret
pop
pop
stos
es
sahf
gs
or
cmp
mov
xchg
test
xorb
cmp
sub
pushf
mov
addl
xorb
cmpsb
jmp
jnp
cmp
fldenv
sub
aad
call
mov
sub
add
adc
sub
or
xchg
adc
push
dec
cmpsb
or
xchg
pop
out
ret
jmp
cli
add
scas
jp
mov
sbb
mov
xchg
sbb
mov
inc
and
rolb
je
jge
and
mov
mov
mov
in
movsb
cmp
das
jno
mov
xchg
mov
or
mov
dec
popl
add
lahf
orl
fstps
popa
rcr
mov
out
push
xchg
leave
mov
pop
jbe
out
sbb
popf
add
ret
add
aaa
fnstcw
mov
inc
mov
popw
push
and
test
adc
pop
fcoml
sbb
mov
aam
sar
cmp
xor
aam
jnp
pop
js
or
inc
ljmp
data16
movb
adc
mov
shrl
je
mov
jmp
scas
push
pop
arpl
xchg
pop
lock
scas
sub
stos
xchg
mov
aad
imul
out
pop
xchg
lods
adc
adc
pop
sbbl
xchg
jle
movsb
pop
xchg
shl
ficompl
fsubs
push
jne
jae
sub
pop
je
aaa
sub
aaa
cmp
fdivrl
rcrb
sbb
jg
and
pop
xchg
cli
scas
ret
inc
xorl
xchg
push
inc
inc
or
mov
xchg
jb
or
mov
mov
ja
addr16
in
pop
mov
fs
xor
or
in
je
dec
aaa
pushf
or
mov
xor
mov
pop
push
and
pop
cmp
cmp
xor
cbtw
loopne
repnz
bound
or
dec
mov
jo
call
pop
lret
pop
and
imul
outsb
push
push
cmp
and
xchg
es
and
and
pop
push
push
out
loop
aam
sbbl
je
stos
push
pmuludq
cmp
stos
test
jbe
push
inc
mov
jnp
jb
sbb
sti
mov
out
test
bound
in
add
fwait
pop
movl
mov
xchg
add
lret
out
mov
adc
rclb
test
pusha
aas
loope
dec
aad
dec
add
pushf
xor
push
jle
mov
daa
jns
sti
dec
notl
lcall
sbb
push
fldl
sub
pop
rorl
fs
jbe
js
push
jl
add
sub
repnz
ljmp
int
and
dec
in
aam
shl
fwait
mov
into
xor
insl
repnz
pop
inc
dec
pushf
popa
pop
push
dec
loope
dec
inc
arpl
lahf
xor
filds
fwait
ja
iret
jno
ja
cmc
mov
inc
dec
leave
cmp
xchg
fadds
jg
dec
mov
out
decb
int
das
jge
addr16
and
dec
jae
dec
testl
call
push
ja
or
dec
jnp
cmp
mov
jns
mov
ss
aad
dec
xchg
jb
dec
pop
sti
ja
test
mov
sub
std
sbb
push
cmp
adc
dec
shlb
movsl
mov
lret
mov
addl
inc
inc
jno
adc
pushf
hlt
mov
les
movsl
lds
mov
out
clc
out
sub
faddp
test
xchg
add
or
add
and
loope
movsb
negb
jg
adc
mov
pop
jne
js
mov
cmpsb
in
adc
push
or
add
imul
mov
jb
mov
push
jg
cwtl
mov
scas
lods
mov
ret
jo
or
inc
dec
hlt
xor
mov
xchg
xchg
testl
adc
mov
shr
mov
in
xor
pop
and
add
xchg
mov
jge
adc
loopne
xchg
loope
jo
divl
jl
and
data16
fstp
and
and
cwtl
cmp
daa
negb
jmp
fsubr
cmp
mov
adc
xlat
out
mov
ret
mov
adc
mov
int
dec
aas
or
mov
push
sub
jl
jmp
xchg
loope
dec
add
cwtl
scas
rclb
or
clc
inc
loop
jl
gs
fists
test
inc
dec
xchg
test
cld
xchg
cmp
xor
loopne
das
ficoms
cmpsb
nop
push
sub
or
jl
es
repnz
mov
cmpsl
pop
idiv
mov
bound
mov
pop
or
dec
mov
ror
iret
push
push
loop
aam
fiadds
mov
mov
test
cmp
call
in
inc
jo
hlt
fidivs
push
out
sbb
popa
adc
dec
hlt
cmp
test
and
mov
jb
mov
xor
push
mov
mov
xor
cld
ds
push
pop
xchg
lods
mov
add
jns
sbb
sbbb
pushf
push
into
push
negl
push
repz
fucom
mov
fsubr
in
or
fwait
out
xor
adc
push
call
mov
jecxz
and
mov
js
nop
ja
outsb
in
xchg
fsubp
cmp
arpl
adc
mov
testb
push
gs
xchg
aaa
xchg
and
or
lods
fwait
addr16
jns
popf
add
jmp
mov
addl
jle
mov
and
and
inc
or
fidivrl
cwtl
mov
jne
gs
aad
inc
sbb
jbe
push
iret
pop
add
sar
cmp
mov
dec
push
mov
and
mov
xor
inc
ljmp
mov
loope
or
pop
pop
push
mov
test
out
and
test
bound
or
pushf
cmp
mov
xchg
repnz
adc
dec
and
adc
sub
xchg
das
lods
ja
push
mov
inc
mov
mov
mov
inc
out
add
popf
cld
iret
jmp
xchg
pop
test
jbe
and
inc
stos
aad
ljmp
xchg
shll
cmp
out
addr16
clc
ror
push
loop
mov
add
or
push
insb
filds
mov
mov
fst
ret
les
fildll
xor
sahf
pop
jb
inc
jae
es
xor
lahf
add
rolb
popa
mov
mov
pop
xchg
sub
sbb
jle
xchg
rorl
dec
mov
jg
aas
add
stc
repnz
push
fs
add
push
mov
ret
mov
xor
push
testb
jle
mov
cmp
aaa
shrd
xor
mov
in
or
ja
incb
iret
inc
repz
lcall
cmpsb
movl
mov
fisttpll
in
ja
xchg
insl
or
shlb
pop
fwait
push
leave
fists
iret
data16
insl
fs
es
ret
sub
sbb
fs
int
jge
sbb
repnz
pop
lock
inc
movsb
iret
cmp
jecxz
ljmp
mov
xchg
std
jg
outsb
outsb
dec
and
jle
das
inc
xchg
mov
cld
addb
ficomps
mov
jmp
inc
ret
leave
push
mov
mov
lret
cmp
jg
notb
jge
ljmp
jbe
int3
out
shrb
shll
or
lret
push
push
cmpsl
mov
jp
movsb
jbe
xlat
mul
add
adc
div
jbe
sub
imul
pop
idivb
es
lods
jge
idivl
pop
pop
sub
outsl
add
cmp
push
push
inc
fnstenv
imulb
fdivrs
rclb
xor
push
ljmp
movsb
arpl
nop
jb
shlb
cmp
xor
ljmp
incl
cwtl
lcall
ja
aam
cmp
out
mov
sbb
mov
sub
push
dec
adc
add
pop
mov
enter
out
and
push
test
call
ja
das
lret
test
ljmp
inc
das
rclb
adc
inc
mov
add
hlt
mov
ljmp
aas
dec
rcl
push
insl
jge
leave
sub
into
pop
stos
sbb
in
outsl
sub
dec
inc
dec
or
add
enter
jnp
test
inc
xlat
xchg
sbb
adc
gs
cmc
int
lahf
mov
mov
std
insb
jno
jbe
or
mov
stos
inc
mov
mov
pusha
data16
int
pop
sahf
stos
mov
cld
sub
stc
sbb
and
pusha
pop
outsb
ss
xlat
dec
push
cltd
mov
arpl
out
icebp
and
sbb
in
imul
sahf
cmp
add
xor
dec
cwtl
shrb
lcall
mov
sbb
clc
leave
push
jmp
cmpsb
outsl
jnp
bound
xor
test
shll
add
int
xchg
hlt
adc
aas
xor
lds
popf
pop
insb
sbb
and
push
mov
xchg
and
je
sbb
push
lock
js
mov
xlat
fs
xorb
xchg
mov
movsb
dec
pop
out
mov
cmp
or
cmpsb
out
sub
inc
cmp
push
mov
inc
push
mov
mov
movsb
mov
jae
mov
inc
dec
stos
pop
xchg
sti
push
lods
and
ficompl
push
mov
mov
std
cmpsb
dec
out
mov
mov
outsl
mov
xorb
sahf
repnz
sub
xchg
decb
mov
rolb
sbb
jle
lea
sbb
xchg
mov
sti
test
outsl
dec
scas
jae
outsb
xchg
fisttpl
lds
xchg
leave
push
mov
cltd
inc
mov
aam
push
sub
pusha
scas
inc
mov
xor
shrl
mov
call
adc
fisubl
aas
mov
lds
mov
dec
adc
add
scas
jmp
cs
ja
sub
es
clc
push
add
push
movsb
es
std
flds
adc
arpl
sub
mov
cmp
bound
sub
adc
repz
jge
shll
lret
and
cs
dec
dec
cmpl
lret
xor
int
xchg
or
filds
cld
into
push
test
out
lds
mov
test
jns
nop
mov
mov
nop
sub
fucomp
mov
popa
data16
pop
and
pop
out
insb
or
jne
out
jmp
lods
in
jbe
sub
dec
or
mov
dec
push
mov
mov
or
cli
dec
push
call
clc
mov
push
jne
mov
dec
jle
jbe
pop
push
jb
pop
cmp
mov
incb
lds
jbe
nop
cmp
jae
lds
pop
rcl
fwait
and
and
sbb
fsubl
push
in
test
mov
mov
inc
mov
adc
pop
cld
dec
xor
xor
daa
enter
lret
icebp
inc
push
test
cmc
jl
inc
pop
cmp
push
jl
push
dec
sbb
xchg
divl
xor
xchg
out
sbb
cmc
cli
or
jo
sbb
jecxz
or
fdivrp
testl
andb
es
and
imul
sbb
fists
stos
sub
adc
xchg
mov
xchg
lret
out
ds
jg
pushf
nop
dec
and
lcall
add
aas
sub
mov
jle
push
frstor
sbb
push
add
shrb
loopne
add
inc
notb
fxtract
or
negl
hlt
jmp
push
xchg
xor
std
sbb
stos
xchg
adc
cli
xchg
sub
popa
mov
xchg
sbb
sti
push
jae
sub
outsb
lret
cmp
adc
repz
in
rcrl
mov
les
movl
lret
xchg
div
movsl
into
pop
pop
sub
movsb
negb
dec
add
rolb
inc
cmpsb
int3
repnz
out
fcomp
dec
shlb
ljmp
mov
pop
xor
fstps
idivb
fcmovnbe
inc
dec
lahf
out
fisubs
in
sbb
int
dec
insb
xor
xchg
roll
outsl
cli
fstpt
mov
das
sbb
mov
fldt
loopne
out
pop
xchg
insb
sub
pusha
xchg
sub
out
out
mov
pop
adc
add
dec
push
shll
lock
icebp
sub
cmp
in
fs
sub
lret
icebp
insb
fsub
jl
add
lret
fcoms
cmpsl
push
mov
repz
mov
lahf
adc
add
push
mov
aam
out
push
xor
inc
or
cmc
dec
pop
pop
and
addr16
stos
mov
dec
pop
fwait
lret
mov
cmp
xor
popa
mov
je
mov
or
add
lcall
fldcw
add
push
ljmp
push
ret
lock
mov
sub
lcall
imulb
inc
adc
jbe
das
adc
outsb
pop
mov
cld
movsl
push
imul
dec
cmpl
xchg
popf
imulw
cs
mov
dec
sub
sub
inc
sahf
cmp
sti
sarl
add
pop
and
faddp
lods
icebp
and
ss
pop
sbbl
gs
dec
out
adc
xor
insb
mov
lds
fdiv
data16
sub
pop
or
mov
or
fdivrl
xchg
int3
dec
sarl
sarb
cli
sub
sbb
out
push
xchg
sub
inc
adc
jnp
push
xorb
inc
hlt
inc
sub
out
arpl
inc
cli
scas
iret
or
mov
pop
test
pop
sub
lods
push
ret
and
xchg
mov
xchg
imulb
lods
das
out
pop
mov
push
bnd
lods
lock
addl
or
in
push
xor
mov
mov
jnp
jo
xchg
pop
cmp
xchg
mov
stc
mov
dec
jmp
push
in
mov
repnz
or
pop
mov
pushf
push
movb
mov
mov
cmpsb
repnz
pop
inc
scas
adc
and
jb
insl
cmp
data16
mov
mov
and
sahf
dec
frstor
jne
mov
xchg
int
push
out
scas
mov
add
add
cmp
xor
lods
mov
adcl
cmp
mov
rcll
shrb
inc
mov
ret
ds
dec
les
adc
add
adc
bound
mov
ret
mov
lret
and
mov
fdivrs
sub
rclb
ret
add
insb
add
sti
lcall
mov
fs
out
lahf
jle
or
dec
cmpsb
sbb
mov
sahf
push
enter
adc
mov
dec
sbb
sub
mov
or
cmp
ja
inc
dec
test
sbb
adcb
popa
push
and
cli
sarl
add
sub
jne
insl
cmpsb
subl
or
imul
cmp
jno
mov
into
mov
or
xorb
jae
add
das
inc
roll
pop
push
and
aam
mov
das
add
mov
out
inc
add
sbb
mov
xor
mov
xor
cmc
shrl
pop
adc
mov
rorb
out
sahf
mov
mov
imul
dec
cmp
cwtl
sub
xor
sub
sub
jmp
out
lds
sub
push
add
and
push
jmp
hlt
into
jb
adc
jno
or
cmc
int3
inc
mov
das
test
mov
jp
sbb
lahf
pop
in
push
lds
in
inc
popa
out
xchg
fsubr
enter
mov
aaa
jg
push
push
rcrb
dec
mov
andb
mov
mov
lock
pop
mov
pop
scas
jecxz
jl
dec
push
mov
sub
mov
cmpsl
jo
xor
dec
insl
push
xchg
or
pop
mov
ss
bound
and
adc
cwtl
dec
enter
xchg
fildll
cwtl
fisubl
inc
outsb
cmpb
push
adc
xchg
cwtl
in
arpl
hlt
or
sbb
or
movsb
test
mov
in
test
mov
adc
inc
pop
test
sti
fnstcw
fs
lcall
repnz
movsl
aad
mov
inc
and
into
cmp
aad
add
in
fsubl
iret
rorb
ficoml
pop
adcl
jle
mov
adc
adc
sbb
jle
xchg
lock
pusha
mov
dec
repz
mov
pop
dec
cmp
sub
in
mov
xchg
test
dec
dec
dec
push
arpl
int
sub
cmp
adc
leave
adc
xor
jns
adc
or
sbb
test
push
add
test
or
dec
push
dec
cmp
mov
test
push
mov
or
xor
jge
jecxz
into
aas
lcall
inc
fiadds
mov
mov
push
out
add
pop
dec
aas
jle
mov
pop
adcb
xor
cmp
sti
repz
cmp
popf
clc
sub
fadds
stc
aam
mov
cmc
push
pop
std
lret
fwait
ja
cwtl
orb
repz
push
clc
out
xchg
mov
stos
xlat
pusha
and
aad
add
cmp
cltd
mov
xchg
dec
push
repnz
ljmp
ljmp
jge
inc
push
cmp
dec
je
aad
pop
clc
and
aas
push
inc
adc
jno
mov
rorb
pushf
stos
call
cmp
pusha
adc
push
push
sub
and
test
es
jp
ret
jae
xor
push
outsl
push
int
jbe
fisubrs
or
or
shl
and
and
dec
pop
fdivrl
js
push
ja
mov
add
cld
mov
inc
and
mov
add
xchg
pop
xchg
mov
pop
dec
movsb
sub
lods
push
rol
xchg
pop
call
push
mov
int
push
push
outsl
pop
push
out
fsubrs
pop
cmpsl
stos
pop
bnd
lahf
pop
stc
std
pop
stos
fldenv
xchg
mov
sub
pop
add
dec
pop
mov
into
xchg
clc
sbb
cld
xlat
fisttps
cmp
dec
mov
dec
xchg
and
dec
jmp
cmp
push
xor
fisubrs
xor
cmp
je
orl
mov
sub
icebp
dec
insb
push
dec
inc
into
test
pop
inc
push
inc
or
and
adcb
in
push
lcall
jg
movsb
into
sbb
lretw
test
test
test
fisttpl
addr16
mov
loope
mov
or
div
nop
inc
mov
test
pop
aas
popf
push
sbb
jle
pusha
fucomi
addl
xlat
sub
das
loopne
das
scas
adc
mov
out
out
insb
mov
adc
or
inc
pusha
push
aam
fcomps
cmp
mov
sub
das
xor
arpl
sbb
push
mov
rclb
jae
or
sbb
mov
jne
push
add
adc
push
push
or
negb
inc
lret
add
test
aas
lahf
negb
xchg
sub
loopne
jne
jp
adc
outsl
mov
xchg
les
or
fstp
lahf
imul
xchg
stos
or
out
sahf
aad
imul
xchg
pop
stc
pusha
mov
and
es
mov
sub
pop
xor
sbb
and
rolb
out
sbb
cli
int
lret
xor
loope
cmp
lods
outsb
dec
insb
jae
fwait
dec
jg
xchg
pop
dec
out
cmp
dec
xchg
jnp
insb
push
adc
out
pop
std
pop
jmp
mov
sbb
out
sub
xchg
and
aas
mov
aas
push
push
sub
mov
fisubrl
mov
addr16
in
xchg
and
fwait
lods
aam
mov
fldcw
mov
mov
jnp
jg
pop
and
popa
mov
aas
js
inc
mov
fisttpll
jbe
mov
xchg
sub
and
les
out
jge
or
xchg
cltd
in
or
adc
in
add
xor
loopne
mov
mov
mov
ss
pop
push
jbe
outsb
into
pop
xchg
repz
loopne
cli
lret
push
dec
cmp
fwait
icebp
adc
mov
mov
cmp
push
push
xchg
shl
mov
push
cmpsb
stos
xor
jbe
hlt
jg
mov
xchg
aad
popa
inc
and
dec
and
dec
imul
sbb
mov
pop
adc
fiadds
outsb
mov
dec
or
fbstp
ja
add
mov
cmc
xchg
push
rorb
mov
out
pop
sub
stc
inc
push
cltd
xor
xlat
lea
add
movsb
das
int
cmp
ljmp
add
push
and
lock
lds
dec
fldt
jne
sub
adc
mov
xchg
in
lahf
mov
outsb
insb
jle
mov
xor
jecxz
push
pusha
adc
enter
inc
mov
adc
jecxz
sbb
movsl
push
addr16
push
mov
push
shl
das
test
shl
jle,pt
leave
adcl
pcmpeqw
mov
push
mov
sbb
movsb
enter
testl
in
sbb
xchg
cmp
icebp
pop
add
gs
cmp
or
insl
add
pop
std
jle
sbb
lods
jns
jmp
inc
xchg
imul
xlat
clc
enter
lea
xchg
fisttpll
cmp
les
loopne
les
cmp
das
mov
cmpl
test
or
aaa
pop
mov
push
negb
mov
inc
aam
dec
sti
lea
xchg
in
inc
mov
shrb
out
stos
sub
ljmp
cs
or
jle
lods
or
les
lods
jl
adc
jns
xchg
xor
rclb
jns
cli
fstp
pop
mov
mov
sahf
jb
mov
loope
add
pop
xlat
jecxz
into
pop
adc
mov
pop
in
dec
es
out
xor
shl
push
pop
sbbl
mov
lcall
xlat
push
push
jbe
add
xor
add
push
mov
sti
leave
cmpsb
sbb
mov
adc
imul
xchg
pop
aam
push
repz
jne
push
mov
jno
movsb
sbb
movsb
scas
sub
add
stc
mov
add
mov
andb
pop
dec
inc
ja
pop
or
in
shlb
mov
pushl
inc
fs
loope
ja
jecxz
inc
push
sbb
test
sbb
mov
pop
cmp
push
inc
cmpsb
xchg
shld
pop
sbb
pop
lahf
and
inc
mov
adc
mov
bound
mov
inc
lods
out
loop
jb
and
repnz
push
push
sahf
inc
jmp
loope
pop
mov
in
xorl
push
mov
imul
mov
dec
les
mov
aad
icebp
push
subb
mov
mov
cs
bound
insl
adc
ret
sbb
xorl
jle
push
shll
sbb
xchg
aas
push
lods
es
mov
mov
add
or
dec
mov
jp
xlat
aad
mov
lret
jne
orl
pop
push
lret
shl
stc
imul
das
cmpsl
dec
addr16
popa
mov
mull
mov
pop
adc
stc
arpl
add
scas
jmp
lcall
xor
outsl
es
and
popf
xchg
pop
int
dec
pushf
jae
or
adc
bt
ss
xor
jge
xchg
dec
dec
jne
bound
mul
aas
sub
arpl
iret
xor
sub
pop
pop
or
pushf
lock
movsl
cmp
xorb
rorl
mov
xchg
repz
es
pop
push
jge
psubusw
cmp
mov
or
sub
stos
nop
nop
push
xchg
mov
pop
jge
popf
cld
jp
xorl
xor
scas
stc
imul
and
xor
push
lahf
mov
dec
mov
mov
enter
jmp
fwait
int3
push
and
out
fcoml
daa
xchg
int3
rcl
mov
clc
adc
aaa
mov
orb
xchg
aas
cs
xchg
fimuls
subl
hlt
inc
sarl
xor
xor
pop
gs
imul
xchg
aam
call
lret
adc
push
jae
sqrtps
cmp
add
jns
cmp
sbb
cmpsl
mov
lds
pusha
and
jle
add
sub
xchg
sub
iret
pop
mov
mov
add
inc
in
xor
lds
mov
pop
lods
mov
icebp
test
lods
inc
cltd
mov
sbb
cmc
adc
in
pop
jae
push
icebp
dec
pop
out
lds
lods
sub
outsb
pop
xchg
adc
mov
jl
dec
je
cmpsb
addb
stc
mov
jne
movsl
xor
mov
push
icebp
dec
and
inc
repnz
mov
lods
sub
pop
and
daa
sub
int3
cs
add
xor
sub
rcll
jp
in
stos
call
cmc
leave
loopne
lcall
test
fsubrs
daa
adc
xchg
pop
dec
gs
incb
xlat
dec
adc
into
push
imull
xor
ljmp
stos
xchg
es
sbb
push
push
dec
and
or
lret
mov
and
add
adc
push
jns
cmc
mov
inc
dec
in
pushf
cli
mov
into
shll
sub
pop
push
stos
xor
sbb
adc
and
and
daa
repnz
or
cmp
adc
push
sarl
or
jmp
addl
fidivl
je
mov
pushf
mov
popf
pop
adc
adc
aad
and
loop
popf
xor
adc
in
xchg
push
inc
mov
les
xchg
pop
mov
fwait
xchg
in
aad
fists
inc
jle
jecxz
je
cmp
in
lock
mov
mov
fimuls
adc
fimull
push
jnp
ljmp
out
push
push
xor
dec
push
das
sbb
sti
xchg
aam
insb
mov
cmp
test
ror
jae
enter
int3
iret
inc
sub
pop
je
sbb
jg
cld
fsub
push
adc
fimuls
mov
sub
shlb
int3
stos
and
lock
jl
add
cld
ljmp
lds
push
cmpsl
add
imul
xor
out
pop
lds
dec
xchg
add
xor
mov
cltd
jmp
mov
int
shrb
and
imul
aad
push
sti
mov
nop
stos
scas
incl
fs
push
ret
mov
iret
popa
daa
or
cmp
push
loope
xchg
aaa
shlb
stc
sub
cs
and
dec
jnp
push
dec
xchg
sbb
in
push
mov
es
push
sbb
dec
push
mov
xor
xor
mov
adc
fldt
movsl
jae
jo
jne
std
adc
jle
xor
pop
push
aaa
lret
xchg
dec
jmp
inc
push
leave
cwtl
jne
ds
fmull
out
dec
inc
cltd
in
jno
movsl
inc
inc
in
cmpsb
ss
pop
xchg
sbb
repz
fidivl
and
scas
ss
out
jne
or
xor
sub
daa
push
out
and
cwtl
push
loop
xchg
arpl
cmp
mov
xor
pop
add
shll
fisubl
jmp
in
das
ret
cmp
jle
jl
leave
imul
loop
popf
pop
push
cs
jp
inc
dec
jnp
inc
xor
test
jne
pop
fnstenv
push
sbb
and
loope
dec
shlb
aam
repz
mov
mov
dec
ds
aaa
mov
pop
outsb
dec
into
xor
out
mov
and
ficoms
insb
stos
and
out
sub
mov
ret
movsb
pop
fisubl
cwtl
inc
adc
clc
and
add
cwtl
outsl
je
bound
cli
fisubs
push
mov
mov
pushfw
cmc
sub
mov
push
les
mov
cs
iret
mov
cld
cmp
insb
and
sub
add
ljmp
sbb
cltd
fnstsw
stc
xchg
outsl
movsl
and
add
nop
jno
loop
mov
mov
mov
mov
sti
mov
test
mov
or
outsl
xlat
push
arpl
lods
rcrl
lods
aaa
icebp
lods
aaa
inc
repz
jae
push
fldz
push
pop
ret
mov
pop
xchg
adc
sbb
imul
popa
cmpsl
jmp
aas
jnp
mov
mov
or
cmc
lods
icebp
push
adc
test
and
add
mov
xlat
add
mov
or
fisttpll
and
mov
mov
xor
and
push
push
pop
mov
adc
movsl
push
pop
mov
cltd
and
ss
jns
cmp
mov
dec
mov
imul
mov
mov
sahf
mov
dec
loope
test
insl
pop
mov
dec
pop
push
pop
pop
cmp
inc
andl
adc
stos
or
rcrb
int3
ja
jle
leave
sbb
out
cmp
pushf
adc
fs
xor
inc
stos
xchg
push
or
xor
movsb
hlt
sub
or
cmp
jbe
and
add
dec
loope
mov
mov
inc
add
add
sti
jnp
es
sbb
mov
sbb
test
repnz
sub
test
mov
lret
mov
jl
push
inc
xor
push
and
jno
js
pop
in
or
xlat
jp
rclb
mov
aas
add
jnp
push
outsb
arpl
mov
or
pop
xor
aam
mov
ret
out
aam
and
nop
dec
das
pushl
mov
decb
pop
jmp
incl
cltd
lea
jg
sub
lahf
bound
dec
and
push
push
xchg
js
sbb
mov
xchg
jge
sub
xchg
cmp
call
mov
xor
lret
aas
pop
cwtl
lods
add
xchg
test
fadds
cmpsl
mov
aad
cld
push
xorb
repz
pop
cmp
mov
scas
pushf
mov
adc
jmp
and
outsl
mov
xchg
bound
inc
xchg
lcall
fwait
inc
sub
adc
mov
add
jns
aad
cltd
in
or
mov
arpl
pop
mov
fxch
hlt
xor
fists
sub
shlb
sub
jnp
out
pusha
subb
jno
cld
xor
ret
push
cmp
sub
stc
mov
jmp
sbbl
call
push
sub
movsl
movsb
xchg
fcoml
test
cwtl
jae
ds
cmpsb
mov
dec
scas
adc
jne
cs
mov
adc
xor
cmp
call
out
mov
push
jge
and
jnp
or
xchg
dec
fimull
xor
mov
cmpsb
shlb
mov
and
mov
mov
mov
ds
mov
enter
in
sbb
and
aaa
inc
ss
stos
ret
inc
ja
push
xchg
lret
push
fnstenv
ja
in
movsl
push
daa
push
icebp
xchg
xchg
les
leave
mov
sbb
insb
cmp
push
mov
and
mov
test
or
pop
mov
nop
sub
and
adc
es
inc
dec
shrl
fildl
loope
jns
incl
call
popa
and
pusha
mov
xchg
inc
adc
push
dec
mov
ss
pop
sbb
mov
and
stc
sbb
shrl
notb
jb
xchg
dec
lods
clc
mov
xchg
jle
outsb
insl
daa
data16
mov
addr16
jne
cmpsl
or
insl
mov
shlb
cmpsb
mov
scas
and
dec
mov
push
and
mov
clc
sub
mov
movsb
lret
loope
mov
call
cmc
repz
mov
push
xchg
pop
jmp
fists
jmp
push
sub
imul
fsts
std
repnz
sub
sbb
jnp
adc
je
jnp
lahf
dec
add
out
test
xchg
popf
sub
jmp
sbb
dec
adc
or
xchg
xor
fs
shlb
popf
sbb
mov
subl
push
and
mov
jp
mov
pop
xor
out
and
add
pop
or
pop
dec
jg
lea
sbb
outsl
cmp
mov
add
int3
ss
adc
shlb
jne
jbe
adc
adc
test
test
mov
cli
jle
test
sti
add
pop
cmp
sbb
mov
insb
mov
fsubs
xor
jb
vsubss
lret
and
loope
mov
ja
arpl
sub
cltd
insb
rcrl
test
xchg
dec
fmull
xor
dec
das
cmp
or
sbb
and
mov
mov
scas
mov
cmpsb
xchg
pop
adc
das
out
mov
mov
jbe
mov
dec
mov
lock
lods
movsl
pop
pop
sbb
add
mov
push
rcr
jmp
imul
dec
out
loopne
jge
push
jo
int3
lea
sbb
or
out
sub
xchg
mov
mov
xlat
jmp
ret
cmpsb
test
popf
cmp
dec
movsl
adcl
add
ret
sti
lock
std
scas
and
jl
inc
cmp
xchg
loopne
or
bnd
mov
xchg
add
xor
sub
fdiv
cmp
pop
mov
imul
cs
in
nop
cmp
xchg
scas
pop
cli
arpl
popa
pop
fwait
xchg
mov
xor
clc
cmpb
mov
pop
mov
insl
int3
xor
add
mov
mov
jnp
mov
pop
leave
inc
pop
sub
fildll
or
fildl
push
mov
pop
xchg
out
sbb
push
decb
sub
mov
scas
int
mov
cld
icebp
sub
shll
pop
test
xchg
push
test
mov
xor
jae
imul
add
ss
lods
rcr
xor
in
scas
xchg
pop
das
mov
inc
call
pop
and
or
push
mov
dec
clc
in
cmpsb
in
mov
jge
add
adc
movsb
insl
xor
pop
loopne
xchg
imul
mov
pushf
fsubl
divb
aad
es
test
hlt
test
icebp
nop
clc
rolb
inc
cltd
add
ja
je
inc
push
inc
adc
mov
xor
jb
cmp
hlt
and
test
xor
insb
mov
sti
mov
xor
fadds
add
scas
mov
or
in
js
aaa
cmp
jne
in
cmp
and
popf
cmp
and
dec
pop
mov
mov
mov
inc
sbb
nopl
roll
xor
mov
pushf
cltd
das
mov
dec
sub
or
push
inc
sub
data16
cld
popf
cmp
sbbb
imul
fsubrs
pop
xchg
jbe
xor
xchg
jb
mov
lods
pop
in
lcall
xchg
mov
aad
js
pop
insb
or
stos
iret
sub
lods
inc
orb
xor
adc
sbb
push
mov
sti
test
out
push
mov
cmp
mov
fmul
mov
out
cli
mov
aam
inc
cmpsl
push
mov
push
popf
scas
inc
pop
cld
pop
out
out
add
cmpb
stos
out
ja
mov
stos
sub
addb
xor
add
jbe,pt
mov
xor
cmp
xchg
add
cmp
dec
sub
outsb
int
or
das
jb
cmpsb
xchg
lret
pop
hlt
test
sbb
lahf
fbstp
js
out
shlb
add
xchg
sti
dec
aad
outsl
sub
mov
xchg
mov
mov
test
adcb
adc
dec
shl
je
orb
arpl
pop
lret
loopne
pop
push
pop
push
add
js
and
mov
repz
jecxz
dec
push
add
test
xor
or
cs
sti
into
or
jns
sbb
rorb
jno
xchg
add
adc
lret
loop
les
loop
cltd
lods
mov
jmp
mov
loopne
cmp
sbb
aad
outsl
outsb
mov
loope
mov
lcall
jae
into
lock
roll
mov
cli
mov
pop
xor
mov
pop
cs
in
jnp
loope
add
stos
adc
outsb
cmp
inc
add
in
pop
sub
out
push
add
enter
inc
mov
or
imul
xor
repz
int3
jl
outsl
sbb
dec
inc
ljmp
jmp
cmpsl
add
test
stos
inc
jae
pop
fidivs
addr16
push
adc
jecxz
sub
jne
dec
jge
xchg
js
popf
in
dec
rcrb
or
lret
push
imul
daa
test
hlt
pop
or
or
jne
popf
inc
xchg
push
dec
std
xchg
cwtl
popa
cli
pop
clc
sbbl
imul
xchg
cvtpi2ps
out
cmc
scas
es
sub
cltd
popl
jns
ret
dec
cmp
insl
mov
inc
push
das
loop
sub
mov
fld
ficomps
ret
insl
clc
and
popa
rcrb
push
sbb
mov
inc
push
imul
daa
ja
adc
loope
mov
leave
push
mov
jmp
lea
adc
test
leave
fwait
pop
in
mov
fildl
push
fistpll
loopne
xor
push
inc
fucomp
popf
in
jle
data16
inc
and
jp
cld
sub
add
out
add
pop
aad
pop
mov
inc
push
inc
testl
shrl
movsl
pop
das
sub
aam
cmp
cmpsb
stc
pop
lret
xchg
es
cwtl
mov
cmpl
push
push
push
mov
out
in
mov
xor
adc
mov
sub
stos
sub
call
cmp
lret
js
pusha
push
sarb
xchg
jae
jp
fbstp
push
cmp
in
xchg
cmc
scas
sbb
push
sbb
icebp
stos
jo
stc
ret
out
sub
repz
fstpl
jp
addr16
mov
xor
hlt
int3
mov
clc
push
ret
mov
cmp
inc
jge
pop
fnstenv
cli
sub
ret
cmp
mov
cmp
inc
roll
and
sub
inc
dec
mov
sarb
xor
test
out
aad
in
push
pop
mov
lea
cmpsl
jns
mov
fdivr
nop
stc
jl
cmp
xchg
test
jne
lods
pop
imul
adc
sbb
mov
xchg
aaa
lds
lods
daa
lret
mov
insb
ret
mov
add
loope
and
sarb
imulb
movsb
es
xorb
mov
je
bound
shlb
repz
decb
pop
fisttpl
ljmp
push
and
push
adc
imul
call
das
xor
insb
xchg
xor
push
adc
mov
add
jle
xlat
into
xor
jp
je
es
fdivrl
faddl
cs
xlat
ss
test
jle
sub
stos
mov
xor
pop
inc
lds
sahf
outsl
cmp
and
sahf
movsb
push
icebp
es
loopne
mov
jge
pusha
jecxz
push
sbb
repnz
or
or
xchg
push
int3
xor
ss
ja
jne
lret
out
cmp
testb
sbb
dec
negl
mov
ficoml
jmp
or
cmc
clc
aas
push
dec
movsb
movb
fiadds
cmpsb
dec
push
xlat
sbb
scas
fbld
pop
adc
movsb
push
jae
cmpsb
jb
cwtl
sub
scas
lods
xchg
sbb
rcll
xchg
mov
outsl
cld
mov
loopne
sbb
jge
push
and
mov
sar
cmp
mov
jbe
enter
leave
lahf
push
in
repz
insb
gs
and
add
push
cmp
ljmp
cmpsl
stos
orb
in
mov
xchg
mul
cmp
xchg
jp
sbb
pop
std
loop
jne
sub
mov
xchg
bound
and
pop
pusha
xor
add
push
adc
inc
lods
sbb
push
sarb
jbe
in
xor
mov
sarb
lods
adc
out
cmpsb
mov
nop
cmpsl
inc
xor
cmp
sub
inc
int3
aas
decl
jge
ret
sub
lock
shlb
push
mov
or
sbb
dec
loope
mov
sbb
loope
outsl
or
aas
lret
out
push
and
sub
stc
fcomi
enter
test
insl
dec
push
xchg
jae
sbb
pop
sub
test
dec
jno
popf
push
scas
stos
jmp
jne
loopne
jecxz
bound
cmp
in
dec
fists
mov
cwtl
sub
push
fiadds
or
cwtl
ficomps
dec
movsl
pop
cmc
js
or
mov
imul
and
pop
jmp
sbb
push
ljmp
in
into
sub
sub
in
fstpl
dec
scas
int3
sbb
xchg
jae
xchg
sub
mov
mov
inc
mov
cmc
dec
filds
clc
mov
inc
mov
cltd
add
pop
xchg
popf
and
movsl
sub
popa
addb
sub
mov
hlt
mov
dec
jecxz
mov
aam
iret
imulb
mov
sbb
repnz
jno
pop
sbb
dec
inc
stos
xchg
cmp
in
mov
pop
or
test
hlt
sbb
es
cmp
and
mov
xchg
push
adc
into
add
inc
ficoml
jnp
int
mov
jl
dec
xchg
cmp
xchg
push
sbb
daa
push
xchg
popa
mov
adc
cmp
movsl
jecxz
mov
test
leave
mov
pop
and
inc
int3
sbb
sub
dec
fstl
repz
jg
push
mov
jmp
mov
jmp
js
jb
dec
push
mov
xchg
outsb
xchg
addl
jo
mov
cld
xchg
scas
shll
adc
cmp
lds
cmpsb
mov
and
or
pop
pop
add
xchg
dec
sub
inc
push
pop
jge
sbb
mov
xor
mov
mov
jmp
outsl
jmp
xchg
cmp
pop
push
pop
jmp
js
add
dec
pushf
psraw
mov
inc
dec
lahf
jecxz,pt
js
jne
lahf
out
xchg
or
sub
or
in
not
dec
cmc
mov
cld
fistpll
js
les
push
dec
lahf
rolb
clc
call
aas
jmp
sub
sub
pop
inc
lcall
das
repnz
pushf
jbe
outsl
add
mov
clc
xor
push
fucomp
push
leave
dec
pop
push
jns
jge
fbstp
push
sti
mov
out
in
pop
mov
sub
ljmp
jg
jbe
mov
mov
and
imul
dec
dec
add
mov
testl
jns
xchg
xor
push
fcomps
fmuls
jmp
xchg
push
mov
test
enter
out
mov
sbb
movsb
movsl
mov
inc
mov
xorb
scas
xor
mov
jg
inc
enter
xchg
sbb
pop
imul
xchg
nop
es
mov
ret
mov
jecxz
out
sbb
mov
mov
inc
xlat
or
sbb
xor
outsl
mov
decl
outsb
pushf
repnz
inc
adc
push
adc
lea
push
adcl
out
fcompl
cld
adcl
inc
js
adc
or
gs
xchg
fs
hlt
std
not
lahf
jl
fwait
add
rorb
adc
sbb
or
xchg
out
mov
std
xchg
inc
push
push
cmp
jp
fwait
mov
pop
in
add
xchg
mov
repnz
fdivrl
inc
cmp
xchg
jo
push
push
xchg
add
pop
les
jae
test
or
or
adc
rcl
fistl
push
xorb
cli
iret
push
mov
jo
decb
push
ret
fwait
out
call
scas
xchg
int3
push
xor
shrb
repz
fimuls
dec
cmp
dec
fwait
out
add
sbb
pop
push
dec
push
sub
sub
sti
add
addr16
cmpsl
jmp
xor
fs
cmp
jae
test
jae
and
in
mov
pop
mov
movsb
aaa
add
xor
dec
mov
cmpsl
inc
sbb
mov
stos
and
cmpsb
aaa
and
shrl
mov
lcall
stc
pop
pop
fisubrs
mov
pop
xchg
xchg
testl
inc
ret
mov
mov
je
or
xor
cmp
pop
out
loopne
insb
ss
xlat
add
fxtract
mov
ret
imul
cmp
fsubs
and
adc
mov
xchg
shr
dec
clc
jge
std
dec
fnsave
jne
add
mov
std
andb
jmp
fs
pop
push
loope
outsb
loopne
shr
cmp
add
int3
inc
sbb
loop
lret
mov
add
mov
stos
outsl
mov
cmp
adc
leave
outsb
insb
aaa
or
in
cltd
xor
push
imul
cli
dec
fcoml
pop
inc
inc
or
insl
xor
push
inc
cmp
mov
xor
std
roll
sub
fisubrs
out
mov
hlt
mov
std
outsb
in
inc
into
and
xor
and
arpl
ret
jecxz
mov
jl
icebp
mov
repz
dec
xchg
sub
mov
xor
push
lock
xor
ss
add
mov
outsw
fs
test
scas
addr16
or
add
shlb
push
leave
mov
inc
and
dec
imul
int3
jae
jns
mov
pop
arpl
aad
jae
daa
cmc
jl
imul
daa
adc
out
out
xor
pop
fmull
jns
jmp
pop
daa
cwtl
int
xor
sbb
or
das
nop
add
push
mov
mov
rcll
popa
sbbl
shll
sub
pop
out
push
push
adc
arpl
mov
push
das
sub
and
dec
out
cmpsb
sbb
mov
pushf
sub
cmp
mov
pop
test
inc
popa
nop
and
dec
jg
nop
call
pop
fdiv
popf
nop
jne
call
jp
or
in
sbb
test
int3
sarl
sbb
sub
fsubrl
adc
mov
test
cmp
jp
inc
xor
std
in
in
mov
jl
ret
or
fwait
out
loop
jnp
mov
push
cli
pop
push
xor
and
ret
nop
fldenv
mov
and
jmp
cmc
in
inc
inc
sub
dec
pusha
mov
rolb
cmp
dec
fwait
enter
jecxz
in
bound
in
sub
or
ror
je
adcb
jg
pop
in
imul
xchg
push
xchg
push
push
jg
in
rclb
add
jmp
scas
xchg
dec
add
insb
sub
rorb
xorb
daa
orb
bound
fidivrl
adc
movl
cmp
test
insb
sub
sbb
ljmp
mov
add
sub
or
mov
xchg
or
mov
xor
jae
or
cmc
insb
ds
jno
xor
pop
pop
sbb
inc
in
xor
std
pushf
std
fbld
in
push
jge
push
and
iret
mov
and
push
lahf
cmp
push
in
or
fsubrs
push
cwtl
or
mov
rcr
lcall
xor
aaa
sub
in
fstl
lods
rcll
sarb
idivb
cmc
test
mov
subl
jle
scas
or
arpl
or
xlat
dec
fucomp
popf
mov
or
ficompl
cmp
mov
int3
and
or
outsl
out
jns
adc
mov
sbbl
xor
push
xchg
sub
adc
push
frstor
add
push
dec
popa
cmp
xchg
in
jae
nop
jge
lock
dec
outsb
hlt
insl
sarl
sti
or
xchg
imul
or
push
inc
int
sbb
add
enter
push
xor
mov
mov
fistpl
sti
sti
daa
es
gs
mov
adc
and
jmp
push
xor
pop
add
ss
jle
add
sbb
fcmovnb
das
mov
inc
fwait
adc
outsb
pop
jbe
push
mov
fisttpl
pop
mov
repz
inc
xlat
jle
movsl
xchg
cmp
push
xor
mov
dec
xor
int
sub
xchg
add
pop
or
in
dec
fcoml
dec
ret
outsb
ljmp
vphsubwd
jno
hlt
lods
adc
pop
xchg
pop
stc
shl
outsl
fisubl
cltd
mov
mov
loopne
mov
shll
pxor
push
popf
sub
sub
push
sbb
sbb
jns
arpl
inc
in
cwtl
fisubl
bound
pop
daa
xor
cs
sub
scas
or
jle
inc
dec
or
and
js
lods
inc
jmp
mov
cmp
sub
pop
mov
pop
xchg
pushf
or
out
imul
pop
stos
sbb
xchg
dec
pop
push
repnz
mov
int3
mov
stos
xor
shl
enter
dec
push
pop
xchg
fwait
mov
dec
testl
mov
and
and
xor
sti
or
clc
sbb
push
inc
xlat
pop
mov
dec
sub
repnz
cwtl
lret
sbb
mov
subb
jns
data16
orl
adc
je
fistl
jbe
inc
xchg
stos
stc
jmp
dec
cmovl
xor
xchg
adc
push
ja
repz
fs
stc
mov
xchg
fcomps
pop
mov
mov
movsb
mov
adc
pop
cmp
rcrl
shl
fcmovbe
repz
pop
and
jne
cmpsb
je
jo
jl,pt
shlb
das
das
push
mov
lret
fstl
xchg
jnp
movsw
xor
fwait
sti
cmpsb
imul
xchg
sbb
sub
pop
dec
aad
test
xchg
pop
sub
mov
lcall
mov
in
mov
icebp
mov
das
jle
xchg
cs
adc
pusha
cmp
cltd
jb
lea
or
inc
adc
or
stc
insb
xchg
lcall
and
int3
cwtl
xor
out
jge
std
sbb
js
dec
ret
or
in
movsb
arpl
das
xor
inc
popa
push
int
mov
popa
or
daa
or
mov
jp
aas
push
lret
mov
ror
dec
cmc
daa
dec
repz
data16
pop
addr16
in
pop
sub
push
push
mov
dec
shlb
jmp
inc
mov
arpl
loope
gs
dec
jb
push
or
sbb
xchg
pop
stos
jmp
sub
jb
adc
ds
push
cmpb
jle
sub
pop
lret
inc
call
or
gs
popa
cmp
jmp
mov
xor
sbb
add
jo
out
xchg
repz
int3
sub
nop
or
cmp
and
adc
xchg
ljmp
sub
arpl
jmp
jg
rcrl
push
jo
nop
mov
shrl
mov
pop
dec
push
es
testl
shrl
out
mov
mov
fildl
push
js
outsl
std
popf
jl
ficoml
push
in
gs
xchg
dec
hlt
or
stos
or
pop
roll
sbb
popf
divl
mov
das
dec
jge
ret
sub
in
sbb
ret
fldt
xchg
adc
sbb
es
pop
scas
nop
inc
aas
orl
inc
adc
scas
mov
xchg
inc
leave
push
fidivs
in
sub
push
dec
stos
js
mov
and
adc
jmp
jo
mov
pushf
pand
stos
ret
shll
imul
pop
mov
push
and
jp
add
fdivrs
inc
push
insl
xchg
push
cmc
sub
or
icebp
fstpt
jne
sti
or
pop
cld
and
mov
add
imul
push
mov
dec
and
enter
mov
mov
dec
jae
addr16
mov
pop
jp
add
inc
test
mov
xchg
sub
mov
xchg
jmp
ljmp
rcl
lahf
or
cwtl
clc
popa
in
notl
lock
cmp
sub
sahf
out
push
lods
mov
pop
inc
enter
jle
cmc
push
sub
loope
sbb
arpl
xor
loop
add
jmp
nop
dec
mov
inc
mov
and
test
jno
das
push
cmp
jno
std
push
stos
pop
sbb
fsubrs
in
ret
xor
lods
cmpsb
add
mov
mov
movsb
mov
adc
mov
mov
dec
icebp
in
sbb
pop
roll
push
xor
sbb
mov
or
and
pop
adc
mov
and
pushf
imul
movsb
pushf
push
testl
jo
dec
sbb
pop
mov
or
add
vpsrld
fmuls
dec
jecxz
mov
sub
cmp
repz
mov
cmpsl
mov
jmp
adc
inc
push
mov
out
dec
cmp
clc
xor
push
ret
inc
sbb
fldcw
dec
push
jo
push
stos
push
aam
hlt
ret
mov
fidivl
out
adc
bound
pop
jp
std
ret
lcall
cmp
dec
push
arpl
cmp
scas
dec
shlb
xor
mov
inc
or
aas
sbbb
in
lods
sarl
insb
fwait
nop
adcb
fdiv
icebp
adc
mov
mov
mov
call
shll
mov
mov
and
mov
mov
cmpsb
xlat
lods
das
push
imul
add
sub
je
ss
pop
cli
fs
sub
decl
mov
daa
cltd
mov
xchg
rclb
jbe
hlt
cmp
add
mov
das
jne
pop
push
mov
rcrl
fdivrl
mov
mov
xchg
inc
adc
jne
cmp
jp
shrl
mov
xchg
dec
lcall
jae
movsl
mov
hlt
aam
repnz
mov
xchg
pusha
das
not
mov
out
pop
std
int3
push
ret
push
in
adc
fisubl
sub
cld
stos
pusha
mov
jg
sbb
in
mov
leave
inc
inc
in
adc
mov
inc
cmpsb
out
jno
and
jp
or
cmp
sbb
aaa
adc
xlat
je
sub
mov
xchg
inc
fcomps
scas
push
aaa
cmp
in
int
loope
xor
int
mull
sbb
mov
jns
or
testb
sub
pop
add
je
push
push
rclb
int3
sbb
addb
ja
sub
and
sbb
xchg
sbb
movsb
jnp
mov
sahf
cmc
push
jp
cmp
negb
incb
test
dec
pop
adc
lret
adc
movsl
jmp
shl
push
mov
daa
jbe
pop
jnp
stos
cld
push
int
dec
add
bound
add
mov
subb
imul
add
cmpsb
push
adc
mov
jl
popa
adc
sub
cld
out
jae
incl
cltd
mov
xlat
outsl
push
imul
pop
test
pop
xor
loop
push
mov
lret
add
jns
jb
arpl
popf
xor
lret
mov
and
pop
ja
pop
fidivl
dec
nop
dec
push
ja
mov
pop
arpl
sbb
dec
jbe
sbb
and
dec
ja
ljmp
add
cmp
xor
add
icebp
das
int3
push
inc
ret
add
nop
mov
or
out
and
jmp
sbb
mov
sub
jg
jge
dec
mov
sarl
stc
push
dec
flds
popa
mov
adc
adc
cmc
sbbb
ret
iret
push
mov
mov
and
push
xor
je
jb
sbb
pop
shrd
jmp
cmp
and
and
fisubrs
sbb
mov
loope
cmp
sbb
dec
movsb
and
sbb
sbb
jmp
cli
cmpsb
xchg
movsb
pop
std
cli
dec
jmp
sti
mov
mov
mov
mov
mov
mov
dec
loope
dec
leave
je
insw
mov
ficompl
mov
mov
fisttpl
adc
and
jno
jne
sarb
cmp
repnz
pop
es
inc
divb
test
int
cmp
int3
sub
arpl
sbb
push
cmp
lods
in
xchg
and
inc
dec
lahf
shr
repz
fcomps
xor
jno
xchg
and
lret
repz
dec
pop
fildll
mov
ja
and
or
adc
sub
pop
dec
lret
sbb
xchg
cmp
fbld
xchg
testl
push
jno
jmp
push
mov
inc
shlb
fs
int
aad
pop
and
sahf
out
shrb
repz
testb
push
cwtl
into
enter
in
xchg
cmc
push
psubw
jns
push
fldt
push
adc
jmp
andl
xchg
sti
push
pusha
xlat
aas
ret
push
cmp
add
icebp
cs
and
xchg
loop
ret
fmul
lret
xor
test
test
aas
loop
mov
out
dec
sahf
rolb
xchg
pop
mov
xchg
xchg
leave
jbe
mov
mov
in
hlt
ja
or
pop
pop
dec
in
data16
pop
adc
mov
cmpsb
pop
popa
xchg
lods
sub
or
jno
rcrb
push
dec
inc
shrl
gs
rcrb
cmp
ljmp
xchg
and
popf
push
jp
outsl
out
pop
cmp
jbe
lcall
mov
insb
test
xchg
pop
int3
rclb
icebp
fldt
insb
lea
add
sub
fimuls
pop
or
in
inc
out
lret
and
negb
pusha
mov
jo
in
sarb
mov
mov
add
jbe
or
xor
cltd
lahf
fisubrl
jmp
jmp
push
ret
push
sub
test
cltd
or
mov
push
add
fisttpll
pop
and
outsl
push
cmp
cmp
jecxz
sub
cmc
pop
push
popf
add
lea
sbb
shrb
into
mov
stos
xor
mov
icebp
dec
sahf
fldl
int
mov
lock
mov
jl
lods
or
jbe
in
xchg
out
cld
pusha
add
shr
sbb
lahf
inc
jl
insl
sub
rcrb
push
lods
mov
outsb
adc
mov
mov
movsb
mov
insl
imul
fld
mov
out
or
pop
mov
fidivs
mov
test
fstpt
and
cmp
adc
pop
xor
sti
es
nop
int
lcall
mulb
enter
shrl
add
or
clc
inc
sbb
push
and
mov
in
cld
loopne
xchg
add
fildl
sbb
test
cwtl
add
cmp
fildll
fld
and
int3
icebp
fwait
insl
mov
shlb
mov
sub
aad
data16
push
or
cltd
mov
adc
into
js
and
scas
fidivl
inc
and
push
ljmp
lahf
pop
or
scas
test
lret
imul
and
fbstp
mov
cmp
push
daa
pop
cs
mov
cmc
imul
jb
sub
jno
dec
stos
cmp
and
out
dec
adc
movsb
xchg
shr
shll
dec
int
mov
fistps
pop
push
xchg
mov
dec
mov
rcr
in
push
pop
or
adc
jecxz
mov
ret
hlt
out
pusha
mov
adc
out
stc
test
ret
push
mov
push
imulb
loopne
and
jmp
jae
mov
mov
add
in
seto
mov
mov
cmc
pop
std
inc
or
rcr
pushl
push
cmp
cwtl
lds
inc
roll
xchg
ret
loopne
add
lret
mov
sarl
jmp
pop
jo
push
jp,pn
rcll
repz
lret
or
call
das
xor
out
lret
sbbb
int
cmp
jp
xchg
pop
aam
scas
ds
dec
lods
enter
or
and
and
into
xchg
out
xchg
cmpsb
xor
mov
pop
cmpsb
iret
test
fwait
repz
lahf
or
fisubs
movsb
stos
test
cmpsl
dec
arpl
mov
icebp
mov
and
movsl
adcb
or
mov
jl
mov
push
or
push
sbb
jmp
push
lret
push
pop
pop
lds
cmp
xchg
daa
sbb
jp
out
mov
mov
push
inc
sub
push
int
in
lea
mov
lds
dec
ljmp
or
scas
sbb
ljmp
sbb
in
out
push
mov
pop
or
cmc
adc
jecxz
push
adc
shll
stos
cli
stos
add
cltd
sahf
mov
xor
push
aad
jns
adcl
adc
cmp
aas
popf
cltd
mov
adc
pop
enter
jae
leave
dec
js
jo
pop
enter
fnsave
dec
out
fucomi
sub
icebp
cmp
cld
pop
dec
sbb
aaa
sbb
imul
push
mov
push
push
and
lret
pop
push
jae
inc
cli
adc
aaa
pop
int
lahf
out
jb
xchg
addr16
xchg
lahf
push
leave
in
sbb
imul
push
xor
pop
sub
cmp
and
pop
or
leave
insl
fisubs
add
dec
test
pop
aam
sbb
or
jg
loop
mov
jge
sub
or
or
push
mov
outsb
ds
fcmovnb
aad
and
in
inc
jmp
pop
mov
testl
mov
shr
jo
loope
and
outsb
jo
arpl
adcl
aam
fists
cmp
pushf
call
imul
add
add
mov
xor
and
sbb
push
jmp
jnp
arpl
sub
fmuls
shrb
nop
xchg
push
ficoms
roll
mov
cmp
xchg
ret
test
inc
ficomps
jo
mov
fwait
cmpsb
pop
adc
mov
ds
push
sub
and
dec
add
mov
mov
mov
add
repz
hlt
jecxz
xor
int
cs
out
test
xor
imul
jle
stos
mov
out
cli
inc
pop
jnp
out
xchg
jno
shrl
cli
and
ljmp
mov
or
stos
jo
or
outsl
std
sahf
fnstcw
mov
push
xchg
ret
jecxz
mov
paddb
add
push
std
xchg
jmp
xlat
cld
mov
push
xor
stos
loope
jo
sbb
testl
xlat
lods
out
inc
push
sbb
push
sbb
cli
cld
repz
or
mov
pop
adc
sbb
pop
mov
push
mov
jecxz
fldcw
mov
arpl
ja
popa
mov
sti
sti
sub
dec
lea
fldt
call
jp
dec
shrw
les
imul
sub
push
jne
and
lods
push
push
cli
daa
cmp
push
xchg
mull
mov
push
and
jl
add
lods
push
pop
fistpl
or
push
push
cmc
or
sbb
fsubrs
push
add
pop
popw
xchg
ret
cmp
jbe
roll
sub
cmp
fcmovne
call
push
into
dec
or
orl
loope
testb
sub
jb
sub
or
inc
fdivs
mov
fldenv
xchg
jp
jb
daa
adc
dec
push
mov
dec
mov
pop
mov
aam
mov
add
and
shrb
dec
mov
xchg
jg
dec
fstpl
call
mov
ljmp
cld
jg
loopne
daa
rdtsc
cmpsb
pop
fldenv
movhlps
loop
dec
pop
jle
pop
adc
je
ret
lret
mov
or
not
clc
dec
lods
adc
scas
leave
das
add
and
sbb
popf
add
dec
std
push
lret
ds
dec
ljmp
xchg
pop
sub
out
cli
mov
and
ret
sti
adc
mov
imul
cwtl
addb
push
jnp
call
inc
dec
clc
stc
ds
popf
imul
fisubrs
insl
call
aam
xchg
sub
call
fildll
data16
ret
fsubr
js
xchg
xor
adc
jmp
subb
les
lock
push
sub
jb
xlat
cmp
jg
dec
xchg
stos
pop
std
cmp
in
jb
shlb
sbb
pop
mov
lea
jmp
lods
push
mov
sbb
fsubl
aam
xor
inc
fwait
push
sbb
and
sysexit
and
cmp
mov
lock
lret
jno
jg
stc
and
lods
loopne
pop
pushf
jb
pop
pushf
push
int
add
dec
imul
fstps
xchg
aam
add
out
lock
rcr
xor
jp
mov
xchg
nop
mov
in
xchg
jns
nop
pop
pop
sub
decl
adc
xor
cwtl
adc
cwtl
mov
or
ja
ret
insb
jecxz
or
inc
int3
ficompl
int
add
stos
or
imul
in
or
push
pop
aad
cli
push
outsl
cmpsb
lds
cltd
enter
mov
add
insl
test
push
insb
call
out
test
nop
hlt
scas
test
jno
xchg
dec
jp
dec
cwtl
sub
inc
push
xor
loopne
loop
shlb
adc
test
call
add
mov
cld
std
std
jb
sahf
mov
gs
imul
out
scas
fld
dec
and
pop
pop
mov
add
pop
lods
dec
rcrb
aas
inc
int3
xor
ljmp
mov
jno
jb
roll
push
movsb
movsl
inc
ret
lods
adc
shrl
push
inc
fistps
imulb
cmp
push
je
jne
and
push
repnz
sub
in
mov
shl
adc
lcall
jmp
mov
stos
lods
int
and
jne
xor
sub
aam
cmp
and
rorl
fsubr
test
imul
mov
push
fsubl
and
push
push
pop
aaa
sarb
insl
fldcw
sub
mov
cmp
int
mov
mov
iret
pop
jns
or
fcoms
enter
adc
test
cmp
lret
adc
outsl
pop
cmp
jne
in
inc
xchg
pop
push
lods
stos
notl
xchg
sbb
lods
push
jns
add
fisubrs
pop
adc
push
cmpsl
cmpl
mov
xchg
insb
sarb
pop
inc
dec
jg
push
orb
lods
iret
mov
repnz
out
jae
or
cmp
pop
stos
push
dec
push
dec
push
pop
outsl
cmpsb
inc
es
testb
mov
jmp
fldcw
mov
lock
cmpsl
cmp
add
shrb
sub
lahf
stos
cmpsb
iret
outsl
cmpsl
jmp
inc
inc
aas
loope
fwait
mov
and
xchg
mov
jo
cmp
push
je
mov
shrl
gs
rolb
adc
mov
int3
cmp
push
std
int
es
xorl
std
xchg
mov
ds
es
pop
roll
inc
jl
test
inc
push
jns
and
fwait
push
jg
loope,pn
sub
push
push
testl
adc
sbb
idivb
ret
into
fstpt
and
in
out
xor
daa
cmp
out
test
lret
jl
jo
shrl
dec
push
lods
rcl
and
cmp
jne
xchg
cmp
repz
xchg
test
inc
mov
in
inc
pop
mov
cwtl
pop
out
adc
pop
jo
and
xchg
mov
jne
xacquire
pop
pop
ds
movsb
inc
clc
jmp
cmp
or
int
roll
lods
stos
out
stc
push
outsl
and
jmp
cltd
rcr
inc
inc
lods
pop
repnz
iret
enter
mov
rcrl
mov
insb
nop
and
xchg
cmp
sub
int
inc
cmc
dec
mov
sbbl
movsb
stc
dec
push
push
adc
cmpsb
xor
out
adc
icebp
in
subb
imul
adc
push
sbb
aam
mov
dec
cmp
sbb
jne
je
lret
sbb
mov
test
sub
in
add
in
mov
xor
icebp
rcll
pop
jne
cmp
jb
push
add
inc
dec
insl
jecxz
sbbb
subl
fldl
dec
cmc
mov
decb
lret
sti
jmp
push
ret
addr16
pushf
mov
subl
lock
jp
push
std
sarb
int3
nop
push
and
inc
hlt
in
and
shr
or
and
xchg
lock
out
add
ficomps
pandn
inc
push
ds
sbb
lcall
sbb
push
je
push
mov
mov
xor
add
adc
ret
rclb
or
adc
xchg
ret
xchg
lods
int
mov
xor
ror
sub
pop
jo
pop
cli
enter
sbb
adc
cltd
loop
pop
out
adc
into
ss
rcl
jp
push
out
cmp
in
int3
mov
movsb
and
sbb
fwait
and
clc
fnstenv
dec
sbb
mov
outsb
mov
bound
mov
ret
lods
inc
mov
mov
mov
pop
push
xchg
adc
fwait
dec
das
enter
cmc
inc
pop
dec
cmp
adc
aam
mov
push
sarb
js
xor
jmp
sbb
mov
inc
out
mov
fstpt
into
js
int
push
popa
mov
out
sub
in
xchg
add
xor
mov
inc
cmp
popf
daa
dec
in
bound
jl
xor
popf
and
add
push
dec
cmpsl
lret
push
lods
ret
dec
sbb
lods
cmp
into
or
clc
addr16
xor
add
sahf
je
or
push
outsl
push
adc
out
mov
loopne
lcall
ds
test
cmove
mov
test
cmp
loopne
lcall
and
jg
xor
bound
outsb
inc
aam
call
adc
sbb
mov
jne
fcomps
jae
push
mov
push
fwait
mov
js
dec
jb
mov
lock
test
push
call
xor
out
pusha
sub
sarl
xor
pusha
ja
stos
pop
lods
sti
aam
xor
jg
ss
testl
outsl
lret
adc
incb
testw
fs
and
and
fsubrl
pop
shlb
hlt
sbb
fistpl
jp
xlat
xor
adc
dec
insb
sub
hlt
sahf
pop
sbb
enter
fldl
subl
add
xchg
sub
add
pusha
add
mov
and
in
out
insl
shlb
push
scas
lods
outsl
cmp
clc
imul
add
outsl
sbb
inc
insl
imul
add
jno
int3
sbb
jg
notb
pop
cmp
dec
mov
stos
xlat
jb
sub
mov
pushf
mulb
clc
inc
jl
pop
ja
stos
push
cmp
mov
pop
mov
xor
jg
mov
mov
pop
andl
cmp
inc
pop
pop
push
sbb
sbb
int3
add
jle
mov
mov
ljmp
daa
mov
dec
sbb
cmp
ficomps
loope
out
enter
roll
lods
pop
repz
lcall
push
pop
aad
cmc
iret
fisubl
add
xor
mov
cmp
call
hlt
lret
adc
js
push
movl
push
inc
inc
push
mov
cmpsl
in
push
mov
out
add
outsl
xchg
mov
mov
lods
das
cmp
ror
call
inc
aam
xchg
xchg
mov
xchg
lods
icebp
cmp
mov
or
into
mov
into
test
xor
es
push
loopne
aaa
jge
jmp
cmp
jnp
imul
xchg
pop
mov
lods
add
pusha
mov
push
subl
lret
inc
shlb
pusha
scas
imul
lock
insb
test
jno
xchg
scas
push
adcb
sub
xorl
mov
out
adc
and
push
pop
nop
cmc
xor
data16
je
in
sahf
cwtl
push
add
mov
mov
cmp
in
or
fprem
sub
jge
xchg
xchg
popf
xchg
iret
data16
adc
movsl
xchg
mov
test
mov
ja
stos
jb
xor
mov
movsl
js
jmp
sub
jmp
pop
mov
jo
jbe
daa
stos
icebp
and
shlb
cmpsb
test
into
dec
loop
lret
add
cmp
icebp
mov
in
adc
add
inc
dec
jbe
xorl
add
mov
jne
mov
add
xlat
test
ss
adc
mov
inc
clc
mov
rol
hlt
and
aaa
ljmp
adc
cmpsl
push
andb
jno
pop
les
into
imul
pop
dec
out
aaa
das
pop
clc
xlat
addr16
pushf
stos
adc
lods
cmp
add
cld
mov
popf
dec
jo
cld
adc
add
or
shrb
adc
cs
push
adc
dec
icebp
jp
shll
jle
add
mov
cmovp
add
out
ficoml
jp
insb
jne
fldenv
lods
fnstenv
fs
in
or
mov
pop
jbe
daa
fidivrs
jne
push
fmul
sbb
sbb
add
lahf
push
fcomps
rcr
cmp
movsb
dec
mov
scas
pop
inc
jns
aas
cmpsl
pop
sub
or
cld
movsb
adc
xchg
add
cli
dec
xchg
pop
xor
dec
insb
rorb
add
fisubrl
clc
xchg
or
mov
notl
adc
sbb
fists
in
xorb
fs
ret
add
bound
notb
stos
xchg
je
mov
jle
add
cmpsb
arpl
aam
mov
popa
test
dec
ljmp
test
jnp
scas
test
lods
sbb
sub
push
imul
jne
lock
mov
or
das
clc
pusha
shlb
push
in
ret
mov
mov
pop
jno
ret
inc
push
outsb
xchg
lds
cwtl
enter
pop
jmp
xor
enter
pop
pop
ret
popf
lahf
fndisi(8087
pop
lcall
shll
ja
pop
mov
hlt
sub
cmpsl
lcall
lahf
fadds
sahf
int3
mov
out
sbb
jg
or
or
xchg
cmp
mov
daa
test
xor
dec
dec
stc
and
pop
fdivrl
das
fmuls
pop
stos
fimuls
ljmp
pop
pop
into
inc
mov
sbbb
push
cmp
jno
stos
push
dec
or
ja
and
je
mov
imul
in
in
and
sbb
push
cmpl
inc
push
sub
sbb
cmp
xor
aad
dec
out
add
jnp
xor
mov
cwtl
mov
xorl
add
out
divl
sahf
add
hlt
int3
or
cmp
es
mov
fistpll
movsb
pmaddwd
cmpl
cld
and
test
and
or
mov
pushf
mov
es
scas
ss
inc
hlt
sub
cmp
stos
pop
lea
cmpsl
dec
mov
ljmp
sub
pop
scas
scas
insb
sub
sub
adc
or
jmp
std
aad
cwtl
mov
mov
xor
icebp
mul
push
int3
adc
sub
mov
popa
xchg
mov
jl
stos
jecxz
cwtl
sahf
jns
add
and
mov
bound
add
aad
add
adc
sbb
fdivrl
in
int
fwait
nop
cmpb
mov
lcall
icebp
pop
xchg
cmc
inc
les
hlt
and
push
inc
adc
int3
shrl
sub
sti
call
jb
out
bound
mov
and
lret
repz
pop
movsb
lds
sahf
idivl
imul
out
pop
lahf
sar
insl
mov
sbb
mov
push
js
mov
pop
ja
or
arpl
xor
jmp
out
jle
xlat
rcrb
shlb
jae
js
dec
jmp
push
ret
or
mov
jle
filds
push
sbb
sub
add
movsl
fcomi
fdivr
aas
mov
mov
adcl
xchg
push
loope
push
arpl
decb
jbe
mov
dec
inc
std
rolb
les
add
mov
repnz
pop
or
scas
loop
and
outsl
sbb
fildl
lock
lds
add
mov
loopne
or
sub
xor
lcall
ljmp
jmp
mov
popf
or
pop
mov
mov
sbb
bound
sbb
divb
mov
repnz
dec
jmp
xlat
mov
mov
je
dec
xchg
add
add
push
shl
and
push
xchg
pushl
sub
andb
mov
and
xchg
push
das
xor
repnz
xlat
xor
fwait
push
xor
fs
ret
mov
jno
xor
dec
push
in
push
loopne
mov
fldl
iret
jbe
add
xor
sbb
jmp
adc
ret
fadds
mov
xor
pushf
sub
sbb
mov
cmpsl
or
ret
add
loop
sbb
shl
push
fpatan
mov
cli
jmp
insl
jo
loope
ljmp
dec
mov
sub
cmp
pop
dec
lret
or
lea
gs
mov
or
xchg
outsb
ljmp
dec
je
shl
xchg
or
sbb
ja
add
add
pusha
or
sbb
pop
lods
cld
cld
pop
mov
cs
adc
xor
mov
adc
xchg
aad
add
jmp
mov
add
int
ror
lds
mov
jle
nop/reserved
lods
cmpsl
addl
pop
call
into
and
xor
push
push
js
inc
daa
dec
inc
aad
test
lods
mov
mov
jecxz
mov
adc
pop
ret
gs
mov
and
mov
inc
jne
scas
mov
mov
cmp
sti
addb
xchg
cmp
xchg
addb
cmp
push
pushf
and
jl
jecxz
aam
loope
jle
pop
inc
xchg
sbb
add
push
imul
imul
js
jns
popf
addb
call
mov
sbb
mov
insl
test
xor
in
mov
adc
lahf
sub
xor
mov
mov
cmp
lahf
imul
dec
out
sub
ficoms
int3
cmp
pop
jno
jb
bswap
aad
dec
mov
stos
and
pop
in
sbb
aaa
fcomi
cwtl
fdivl
loopne
das
xor
frstor
cmc
mov
xchg
push
subl
mov
imul
push
ss
inc
insb
mov
push
out
das
mov
mov
cld
in
popf
icebp
in
push
int
pop
lds
in
inc
lret
xor
or
add
mov
shr
xchg
sub
xlat
or
movq
int3
xor
fisttpll
insl
insl
ljmp
push
fdivl
imul
imul
dec
iret
dec
jb
fbstp
adc
ss
jb
arpl
into
or
jns
pop
add
jne
xor
popa
out
mov
test
mov
pop
lock
mov
and
mov
xchg
dec
ljmp
xor
cwtl
inc
cltd
jp
fnstcw
clc
loope
bnd
pop
ja
sub
xchg
xor
lds
jmp
sub
or
pop
jne
push
cmpsb
or
rol
mov
inc
dec
stc
repz
pop
subl
jle,pt
jecxz
cmpb
ret
pop
jbe
cmpb
lret
mov
outsb
mov
aad
mov
test
and
lods
add
xchg
ja
jecxz
or
push
cmp
out
dec
adc
pop
cmp
lock
or
xor
test
insb
mov
xlat
pop
aad
xchg
mov
xchg
nop
jne
out
sub
stos
daa
loopne
rclb
sbb
stos
dec
jge
sub
pop
xor
sbb
push
sbb
cmpsl
mov
fs
pop
pushf
out
repz
dec
mov
and
lds
xchg
xor
das
cmp
jb
bound
xchg
popa
push
inc
cmpsb
mov
sbb
mov
mov
adc
gs
out
cmp
sti
push
lret
aam
push
pop
int3
xchg
insl
jmp
lods
addr16
dec
xor
ja
stc
stos
out
dec
das
test
enter
push
jle
fimuls
movsl
out
pop
mov
xchg
insl
pop
je
das
xchg
sbb
adc
sbb
jle
lret
bound
pop
mov
outsl
or
cmpsb
ret
mov
adc
rcrl
lds
pusha
ficoms
sub
lods
or
sub
and
jo
shl
xor
pop
imul
add
cmp
test
add
inc
rcll
push
and
call
push
or
loopne
cs
adc
pop
or
cwtl
aas
aaa
daa
mov
push
subl
mov
mov
sbb
pop
inc
jl
or
mov
jbe
dec
fldt
pop
outsl
fstl
and
sub
jo
dec
imul
clc
pop
adc
add
addr16
mov
dec
add
test
adc
xlat
leave
sti
mov
inc
inc
push
sar
pushf
mov
ss
dec
mov
test
pop
xchg
push
lret
test
adc
push
jnp
aad
pop
jo
fisttps
xchg
mov
sub
jno
out
inc
mov
int
lahf
pop
cmp
insl
lahf
ds
and
testb
cmpsl
aas
test
dec
cmp
jl
sbb
push
daa
cmp
ljmp
or
inc
xchg
add
stc
es
outsb
fimuls
add
imul
add
ss
call
and
cltd
outsl
push
push
dec
ret
loopne
sub
or
lahf
outsb
or
loop
pop
cmc
stos
push
push
mov
sbb
adc
imul
jecxz
xor
movsb
or
xchg
or
jmp
int3
jnp
into
testb
inc
dec
push
stc
push
dec
imul
xchg
push
add
adc
insl
mov
sub
lret
iret
dec
sbb
pop
aaa
std
dec
cmp
inc
hlt
out
add
mov
cmpsl
mulb
test
dec
mov
inc
daa
xchg
xor
mov
dec
xchg
and
sbb
call
call
aam
cmp
jl
adc
inc
mov
sub
icebp
cmp
mov
mov
dec
push
int
mov
outsl
fidivs
sahf
cmpsb
push
repz
fldcw
call
pop
jle
repnz
push
push
fld
scas
fisttpll
addb
pop
cwtl
cmp
pop
mov
inc
jb
shlb
inc
xor
sub
mov
out
outsb
lock
lret
cwtl
sbb
xor
mov
idivl
fisubrs
pusha
sbb
fs
inc
outsl
or
pushf
mov
andb
fdivl
xchg
icebp
sub
adc
mov
mov
div
stos
test
push
outsl
mov
pushf
loopne
fstps
arpl
sbb
xchg
cmpl
jg
ds
sub
negb
jg
aas
push
mov
cld
xor
sti
adc
xor
or
push
rorb
jae
sti
icebp
in
iret
dec
and
int
sub
lods
mov
mov
pop
jl
dec
push
les
mov
repz
aas
xchg
filds
pop
aad
enter
and
dec
xchg
xor
insl
icebp
pop
faddl
lret
imul
pop
adc
mov
pusha
cmp
data16
fldl
inc
mov
pop
lret
mov
mov
pop
adc
jge
pusha
lret
mov
push
movsb
jno
and
adc
mov
fsubs
icebp
scas
andl
push
rorl
fcmovnbe
adcl
inc
sbbl
mov
cmp
xchg
push
cmpsl
decl
cmpl
mov
adc
xor
inc
addl
es
stc
fucomi
push
dec
lods
or
mov
in
jnp
push
mov
loopne
lods
icebp
cmp
xchg
repz
push
push
es
mov
push
mov
xor
mov
pop
aam
sub
std
sbb
inc
test
loop
dec
sub
stc
or
js
pushf
sbb
pushf
adc
lret
xchg
mov
outsb
data16
xor
iret
push
sub
icebp
cmpsl
les
push
stos
fidivrs
test
sub
rcrb
adc
mov
pusha
es
into
xchg
test
outsb
and
mov
push
daa
fwait
jo
xchg
shll
aad
mov
lock
push
or
jl
ficoms
add
test
jns
pop
mov
and
nop
sbb
sub
mov
push
mov
xor
sub
test
mov
push
xor
into
sti
sbb
pop
outsb
xor
gs
or
testb
mov
cli
sub
and
xchg
pop
roll
mov
inc
add
call
push
push
mov
and
sbb
and
or
sbb
adc
int
call
inc
lret
mov
xor
mov
fisubrs
inc
xor
loope
into
mov
adc
imul
fildll
ret
xchg
int3
inc
in
cmp
aas
stos
fstl
adc
pop
push
not
scas
mov
sbb
aam
lock
sub
frstor
mov
pop
test
mov
bnd
enter
xchg
add
mov
sti
dec
hlt
mov
xchg
mov
cltd
enter
outsl
in
push
cli
cwtl
mov
outsl
js
mov
cld
mov
dec
orb
jmp
and
dec
shll
out
pop
xchg
stos
js
arpl
xor
dec
in
cmp
rorb
dec
add
rorl
jg
inc
sub
mov
sbbl
or
aaa
inc
std
loopne
mov
xchg
push
sbb
in
jb
loope,pt
jbe
xchg
mov
inc
push
sbb
shrd
popa
mov
mov
dec
mov
call
mov
pop
lods
mov
cwtl
rcrb
jmp
adc
lock
xor
sarl
mov
icebp
shrl
pop
insb
xor
scas
or
pop
xlat
adc
sub
mov
movsl
shlb
pop
stos
aaa
lret
xchg
push
stos
mov
jne
lret
dec
std
mov
fisttps
push
lcall
xor
pop
xor
or
or
jb
sub
je
loopne
insb
decl
dec
pop
int3
or
in
mov
sbb
mov
int
mov
adc
jno
popf
xor
outsl
jb
jle
out
test
mov
notl
stos
push
xlat
mov
mov
push
mov
sahf
es
dec
jnp
or
adcl
jmp
add
es
adc
loop
dec
sub
mov
pop
push
sub
popaw
adc
push
enter
push
mov
jl
mov
xchg
or
gs
jge
mov
push
stos
add
ret
fdivl
jge
cld
jmp
jb
outsl
sub
add
jp
push
jmp
mov
adc
or
movsb
fnstenv
mov
mov
outsb
into
pusha
lods
mov
das
adc
out
loopne
or
push
push
daa
jno
jmp
negb
cmpsl
je
pop
fwait
lret
ja
mov
xor
imul
outsl
jnp
jl
jl,pn
stos
fwait
lea
outsb
inc
subb
outsb
test
mov
leave
push
out
sar
jne
sbb
adc
hlt
call
adc
adc
mov
cmp
xor
sbb
fadds
cmp
sub
push
mov
cwtl
fsts
flds
mov
adc
aas
mov
push
add
es
adc
les
call
popa
sub
insb
mov
dec
add
daa
push
push
inc
mov
cmpsl
adc
insb
out
inc
je
daa
sub
or
lods
fisttpl
test
mov
adc
push
xlat
push
push
daa
add
shlb
xchg
push
dec
inc
xchg
fs
xor
push
and
sub
xlat
cltd
fsin
ja
push
pop
in
xchg
adc
std
loopne
and
in
stc
std
aaa
push
mov
push
dec
roll
xchg
adc
les
cltd
mov
jno
lret
push
out
mov
push
pushf
insb
mov
mov
aam
jg
add
sub
lods
popa
xor
sarl
es
or
in
in
adc
and
mov
stc
int3
cmpsb
inc
mov
jg
cmp
imul
test
lods
in
mov
fstl
cmp
mov
or
mov
push
and
sbb
sahf
xchg
fmull
cmpsl
scas
or
pusha
cmp
in
mov
mov
push
or
mov
adc
jge
push
pop
cmp
cmpsb
xchg
test
jl
mov
push
movsb
fdivrs
sub
stc
cwtl
xor
adc
inc
sbb
aad
imul
pusha
xchg
jne
lret
insl
mov
scas
push
add
jns
xchg
jo
adc
insb
ret
in
push
sti
adc
ljmp
xor
iret
fsubl
orl
popa
pop
ficoms
mov
xor
sbb
in
in
lods
stos
push
ljmp
sub
inc
cld
fmul
enter
loop
add
add
js
jo
push
and
inc
scas
pushf
adc
pop
pushf
cmp
sahf
out
or
mov
push
xlat
pusha
int
jae
cltd
je
inc
or
lock
ljmp
lret
and
loope
out
or
mov
mov
out
pop
sar
ds
cld
mov
push
hlt
sti
clc
mov
sub
adc
std
and
mov
or
mov
and
testl
sbb
das
adc
cmp
xlat
out
int3
jmp
fcomi
subl
xchg
sti
push
fimuls
fsubs
adc
nop
inc
jb
imul
inc
div
mov
loopne
push
cwtl
and
and
xor
fcoms
pusha
and
pop
xchg
sub
ja
notl
or
jecxz
fisttpll
shrb
sbb
push
dec
test
inc
mov
outsb
dec
xchg
mov
ljmp
outsb
sub
mov
lea
push
mov
jnp
inc
stc
aad
pop
push
jp
inc
jge
adc
sbb
inc
loopne
xchg
fdivrs
mov
xchg
mov
and
jne
and
js
and
mov
enter
pop
mov
jne
mov
jne
xor
cmpsb
mov
or
in
or
jb
icebp
pop
ret
or
xchg
mov
rcll
test
daa
jne
pop
cmp
sbb
jp
clc
std
lock
aas
pop
inc
pop
jno
inc
popf
addr16
into
lods
cmc
xchg
xor
leave
jb
xor
mov
dec
mov
lea
inc
fisttpll
fldenv
mov
pop
xor
aas
lret
call
adc
xchg
sub
mov
test
dec
or
stc
in
ja
jge
pop
sahf
test
inc
int
sub
mov
test
push
push
pop
push
mov
pop
inc
sbb
xchg
push
out
out
lcall
adc
jae
ret
aas
fists
movsb
fisubl
jne
movsl
nop
movq
pusha
mov
clc
mov
mov
push
pop
mov
mov
cmp
pop
fs
mov
jb
adc
outsl
sub
cmp
or
pop
pop
lds
out
testb
push
cmpsb
mov
mov
cli
loop
sbb
insb
psraw
repz
stc
test
jp
mov
mov
into
mov
hlt
cs
stc
movups
mov
xor
add
mov
test
fadd
cmp
push
aaa
xor
pusha
cwtl
out
mov
hlt
jbe
outsb
mov
daa
pop
push
fs
mov
mov
aad
inc
arpl
push
stos
mov
cs
fs
shll
add
mov
push
inc
add
push
mov
fwait
mov
dec
pop
int3
pop
or
sub
sub
dec
call
ljmp
or
imul
mov
mov
sbb
mov
or
lea
add
das
ret
movsl
jae
arpl
push
and
xchg
clc
sub
lds
fwait
sbbb
jge
lea
xchg
add
stc
xor
dec
cltd
push
sub
pop
xchg
pop
enter
jo
outsl
in
shlb
pop
lock
cltd
iret
xchg
mov
fnstsw
call
icebp
or
sub
js
xor
adc
insl
jge
clc
mov
cmpsb
sub
jecxz
and
inc
pop
sbb
jecxz
mov
sbb
je
mov
add
aas
mov
add
mov
repnz
int
repz
or
dec
mov
push
xchg
clts
popf
cmp
jmp
in
rorb
inc
sub
sbb
ljmp
adc
adc
xchg
mov
push
ret
cmc
insb
sbb
ja
daa
adc
adc
mov
into
jb
mov
inc
mov
jno
push
xor
jne
mov
lea
nop
fiadds
pop
test
or
cwtl
shll
push
fsubl
xor
xor
inc
fsubrp
aas
in
stos
lods
push
push
push
outsl
cmpsb
call
popa
lret
fisubrl
loopne
imul
lahf
xor
xchg
movsb
fistpll
jmp
mov
testb
out
xchg
leave
mov
xor
loopne
repz
dec
test
push
cmp
ret
mov
sub
shll
daa
ja
mov
push
cmpsb
mov
push
or
push
mov
mov
jecxz
mov
inc
test
cmp
repz
adc
dec
or
jl
sub
mov
pusha
mov
pop
pop
aad
sub
test
outsl
jg
imul
in
stos
bound
inc
ret
push
addl
inc
mov
insb
cwtl
insb
mov
cld
jmp
iret
xlat
mov
sahf
mov
insl
mov
addr16
jg
adc
sbb
mov
out
lahf
adc
mov
out
mov
loopne
fnstcw
int
inc
jge
dec
ficoms
cs
mov
std
cmp
xor
mov
ss
lahf
std
xchg
popf
xor
and
jecxz
ficomps
stos
xchg
pop
ret
fisubl
imul
popf
in
add
sbb
mov
inc
mov
aas
ss
jns
sub
leave
and
sbb
mov
inc
push
xchg
cmp
add
sbbl
mov
jno
push
scas
xor
or
js
jno
sbb
out
add
out
ss
jecxz
je
std
in
test
cs
ja
and
add
aad
inc
or
xchg
xchg
repnz
xchg
dec
dec
sub
adc
push
lock
mov
dec
jb
pusha
lea
or
fs
add
icebp
sub
mov
arpl
sbb
jne
cmpsl
in
pop
xor
add
or
jg
pop
cmpsl
dec
and
popf
inc
shl
mov
mov
xor
cmpsl
ljmp
lea
outsb
xor
dec
es
hlt
push
jae
cmp
inc
and
adc
daa
add
fwait
or
sbb
mov
cmp
push
mov
stos
fsubrs
rcl
pusha
xchg
mov
loop
test
dec
daa
or
gs
adc
xchg
or
and
mov
sbb
mov
pop
test
sbb
cmp
xchg
dec
mov
or
adc
aaa
iret
cmpsl
inc
jae
in
pop
add
loop
jbe
cwtl
scas
push
sbb
clc
inc
dec
imull
lods
cmpsb
mov
sbb
push
mov
je
cmp
add
jecxz
js
sub
out
stos
jne
mov
sub
pusha
jl
jns
adc
data16
ss
cmp
sub
nop
add
pushf
and
sti
or
xor
sarb
cmp
scas
ljmp
push
dec
xor
and
sub
std
add
push
dec
push
push
fisttpll
stos
pushf
jl
repnz
add
aam
inc
pop
pop
stos
cmp
je
enter
fistps
loope
in
lea
outsl
xor
mov
cmpl
pop
fisubrl
lods
jo
hlt
cld
loope
xchg
and
jmp
jns
push
out
movsb
ret
mov
cld
cmp
ja
xor
ds
mov
cmp
ret
push
test
inc
push
mov
lret
icebp
arpl
mov
lods
jae
xchg
cltd
pop
std
popa
testb
mov
add
inc
mov
enter
lcall
rolb
gs
sbb
or
xor
outsl
loopne
inc
in
scas
add
pop
cltd
pop
ds
aad
xor
cmp
inc
scas
lods
inc
xchg
mov
stos
xchg
in
mov
xor
sub
cs
fdivrl
popf
fsubl
adcl
push
ret
outsb
mov
mov
add
stos
pop
push
xor
add
fsqrt
std
lods
sbb
xor
push
fdivp
push
imulb
xor
jae
lock
clc
mov
dec
ret
shlb
sti
popf
out
lea
mov
sbb
mov
cmpsb
movsb
lret
adc
cld
dec
sbb
cs
mov
outsl
xor
in
xchg
push
push
mov
rcl
jns
fdiv
loopne
pop
ss
loopne
and
xchg
in
jb
scas
push
dec
call
in
push
sbb
pop
daa
xchg
or
inc
aas
pop
cmp
aad
or
in
xor
dec
rcl
inc
jo
scas
out
mov
icebp
repnz
ds
push
sub
fisubl
mov
out
cmpsb
fcmovnu
xor
or
bound
mov
sbb
hlt
out
jo
ret
xchg
sub
and
enter
faddl
or
repnz
cmp
add
push
adc
lret
mov
lock
mov
loope
add
fildll
into
cmp
mov
pop
sbb
cwtl
outsb
pop
add
xchg
insl
add
mov
mov
repz
mov
aaa
std
inc
push
popa
fldcw
lahf
les
jo
sub
hlt
inc
gs
cli
divps
rcrl
xor
shrl
pop
lods
mov
push
and
mov
icebp
icebp
dec
cmc
xlat
inc
xchg
sahf
hlt
cmp
sbb
mov
jge
push
sbb
rcll
stos
outsb
jb
cmp
or
dec
int3
leave
fdivrl
stos
or
lods
pop
js
cs
mov
add
push
xor
fsubs
movsl
sub
shll
push
pop
pop
mov
or
xor
bound
js
pop
fildl
movsl
ret
jl
pusha
mov
popf
lds
push
cmpsl
lock
dec
loop
call
jne
dec
lods
loop
inc
and
das
leave
test
sub
inc
xchg
jbe
cmp
mov
inc
lea
push
out
filds
push
mov
xor
and
and
jbe
xchg
pop
mov
test
sub
jg
jmp
jne
or
inc
mov
popf
cmp
pushf
loopne
push
insl
data16
movsb
cmpsb
ljmp
adc
adcb
and
sub
fmull
out
inc
jmp
fs
push
cmc
iret
sub
or
sub
ja,pn
test
fdivs
mov
cmp
jge
outsl
out
testb
jmp
xlat
pop
out
or
push
jnp
push
cmpsb
inc
and
ror
sbb
popf
dec
sti
mov
adc
int
dec
xor
dec
inc
test
pop
sub
adc
push
stc
push
push
lret
movsl
fwait
xor
or
push
mov
pop
jae
ret
lds
mov
sarb
mov
cmpsl
loopne
outsb
frstor
imul
cld
aam
aam
jno
push
pop
out
fcmovu
lea
sbb
sbb
mov
insb
in
jp
out
mov
push
mov
lret
xor
and
inc
sahf
sahf
add
aas
in
std
and
shll
jne
push
xchg
mov
add
mov
mov
enter
push
enter
rcll
mov
jp
jne
push
cmp
mov
push
mov
xor
pop
mov
jmp
adc
push
pop
mov
push
cmp
and
push
iret
pop
and
fcompl
dec
aam
das
sub
xor
pop
rclb
dec
xchg
dec
inc
ret
push
add
mov
xor
pop
xchg
idiv
insb
mov
push
dec
gs
jle
cmp
out
push
leave
jnp
bound
pusha
sub
insl
jnp
fdiv
jmp
hlt
movsb
in
xor
fimull
sahf
pop
jp
lock
xor
pushf
sbb
cmc
mov
sarl
adc
rorb
scas
push
mov
adc
mov
sbb
and
cmc
lahf
into
jp
mov
push
sub
ss
xor
pusha
pushf
cmp
fildl
sbb
xor
dec
out
xchg
imull
rcrl
enter
push
or
pop
dec
dec
gs
stos
push
add
ds
adc
or
lods
fldl
push
das
mov
gs
pushf
pop
stos
popf
mov
test
jg
insb
adc
sbb
xor
imul
movsl
nop
and
pop
ss
adc
or
mov
pop
cmpsl
stos
mov
mov
jle
nop
adcl
pop
add
mov
fcmovb
adc
cmpsb
and
dec
lcall
mov
arpl
mov
xchg
orb
loopne
es
ljmp
push
imul
inc
adc
and
jbe
lcall
mov
out
fimull
rcl
push
insb
push
loope
scas
mov
fisubrs
sbb
imul
popa
pop
push
sbb
test
lret
add
or
addl
cmp
icebp
negb
hlt
pushf
mov
mov
ja
addr16
lock
mov
push
call
loopne
or
jne
and
scas
popf
mov
sbb
popa
adc
push
mov
sbbl
lods
sbb
sbb
jns
lret
sbb
xchg
fcoml
push
mov
or
and
leave
mov
push
jne
cs
divl
mov
ret
jne
mov
fxch
cmp
or
push
movsl
popa
xor
repnz
mov
jnp
push
pushf
adc
test
leave
je
cs
mov
push
add
mov
dec
mov
ret
icebp
jg
dec
iret
and
cld
mov
rcrl
movsl
test
jno
or
add
xlat
xlat
daa
jnp
imul
cmp
cmp
add
and
aas
and
or
scas
sahf
mov
mov
mov
imul
pop
subl
push
sub
adc
or
dec
cmc
pop
xchg
xchg
cmp
push
rcrb
popa
out
cmpsb
mov
repnz
and
loope
lds
ss
inc
xchg
das
sbb
test
cwtl
test
incb
out
add
dec
mov
in
mov
xchg
pop
sub
outsb
bound
push
or
xor
mov
xchg
fmull
call
jmp
mov
push
adc
lds
jg
outsb
leave
test
daa
sbb
hlt
roll
push
mov
or
xchg
jo
enter
fistps
inc
lcall
dec
int
out
dec
pop
and
shrl
mov
outsb
loope
add
pop
mov
ret
sarb
xor
or
cmpsb
add
sub
fistpl
jbe
mov
sbb
push
iret
cmp
cli
test
inc
cmpsb
lret
add
dec
push
scas
and
arpl
arpl
movsl
pop
or
add
mov
ret
mov
push
dec
hlt
add
xor
pop
std
outsl
cmc
jno
jp
in
xchg
jmp
adc
inc
push
dec
js
dec
xor
xchg
test
aaa
inc
jns
and
iret
xchg
movsl
stc
hlt
mov
and
shrb
loopne
mov
or
push
mov
mov
inc
mov
push
jg
lret
scas
and
dec
adc
add
fildl
xchg
push
fsubs
pop
cmp
push
stc
xchg
mov
pop
aaa
cmp
fdivr
fcomps
sbb
cli
add
sub
int3
push
push
sar
mov
mov
popa
popf
loop
sub
dec
inc
test
pop
sahf
popl
pusha
adcb
test
outsl
or
pushf
in
cmp
sub
das
cltd
outsb
sbb
pop
das
pop
jo
inc
stos
pop
push
aas
and
loope
ud2
stc
xchg
das
ss
das
enter
aam
in
ja
in
shl
das
je
sbb
mov
ret
in
jb
pop
andl
jecxz
mov
repnz
xor
nop
fadds
xchg
adc
test
xchg
lds
mov
sbb
inc
xchg
add
mov
stc
movsl
fs
cmp
sbb
jecxz
out
push
ds
scas
xchg
addr16
push
xchg
test
push
adc
inc
sarb
pop
and
jp
fiadds
jb
ret
das
mov
add
pushl
scas
in
xchg
out
das
fnstsw
pop
push
and
inc
outsb
sti
and
fs
and
test
mov
movsb
adc
lcall
add
jne
in
sbb
in
jbe
std
cwtl
ljmp
lock
pop
call
push
xchg
cmp
in
in
stos
jecxz
dec
daa
xlat
outsl
mov
sar
test
test
xchg
sbb
pop
jg
movsb
pop
fldt
mov
scas
xchg
bsr
pop
lahf
lock
xor
cmp
adc
lods
adc
mov
xchg
scas
ret
inc
lock
jecxz
lcall
cmp
mov
leave
jae
sti
sub
dec
and
inc
gs
mov
lods
ret
stos
cli
outsb
sbb
aas
scas
fwait
xchg
icebp
add
push
popa
jo
test
int
in
cmp
adc
dec
jge
sub
rcr
clc
jo
sbb
mov
dec
imul
xchg
lret
xor
negl
push
in
fnstenv
push
lods
mov
dec
mov
sbb
leave
mov
add
dec
cwtl
adc
es
fldl
repnz
dec
in
repz
lds
dec
jne
jo
xor
dec
daa
add
leave
mov
test
jne
sub
jns
push
mov
loop
xchg
add
cmp
mov
roll
dec
jne
flds
fsubrs
lods
mov
xchg
out
and
aam
sbb
loope
cmp
pop
ror
mov
sub
imul
add
push
sbb
mov
push
popf
loope
inc
xchg
test
fdiv
jo
test
xor
stos
inc
push
cmpsb
xchg
loop
aas
mov
inc
xchg
jb
jmp
data16
mov
sub
shrl
push
push
fwait
stc
mov
pop
push
lret
dec
mov
sar
xchg
xchg
xchg
sbb
mov
das
incb
adc
mov
or
mov
les
fisubs
sbb
sub
pop
and
les
jns
mov
test
sarl
inc
add
push
jae
insb
sbb
pop
pop
loop
fsubl
jecxz
dec
int3
xlat
aam
sub
out
xor
mov
repnz
and
stos
adc
push
mov
scas
dec
mov
cltd
ja
lahf
jo
mov
test
daa
pusha
shlb
icebp
sub
mov
xor
repz
insb
pop
cmpsb
dec
inc
mov
shlb
rcpps
xor
scas
loopne
fldt
adc
out
pop
repnz
aas
sub
dec
and
call
pop
jg
lds
sti
fnsave
mov
adc
dec
xlat
mov
add
data16
out
xchg
jl
add
jbe
lock
xor
jne
aas
out
enter
mov
stc
lods
pcmpeqd
fbld
fcmovb
mov
sbb
xor
psrlq
cmp
ljmp
hlt
aaa
dec
in
xor
sub
sbb
cltd
cld
inc
mov
jnp
xchg
cmp
lock
inc
add
cli
popa
icebp
jecxz
bound
inc
xorb
jb
imul
in
sbb
xchg
dec
xchg
dec
hlt
adc
scas
push
bnd
xlat
push
or
push
inc
std
sbb
cmp
js
push
mov
rcrb
pop
cwtl
adc
call
imul
inc
repz
cs
cmc
addr16
rcll
stos
xlat
cld
lret
push
mov
push
adc
mov
and
mov
iret
in
xchg
cld
cmp
dec
xchg
inc
sub
movsb
out
test
enter
notb
inc
jl
xchg
sbb
loop
lods
idiv
std
or
into
inc
add
outsl
call
dec
popa
rolb
or
adc
sbb
arpl
mov
sbb
dec
mov
test
lcall
imul
push
aam
int
xor
mov
mov
mov
cmpsb
adc
mov
mov
mov
inc
pop
lret
insl
addb
push
mov
lahf
andb
add
lock
adc
movsb
adc
lcall
and
mov
enter
push
or
push
popf
lea
mov
ret
sbb
dec
imul
aam
mov
inc
pop
test
pop
subb
enter
cmpsl
fildll
mov
dec
gs
pop
inc
rcrl
cmp
int
clc
repz
sub
in
pop
xor
in
or
jle
sbb
jbe
jge
mov
sub
adc
repz
ljmp
popf
gs
push
xchg
scas
mov
pop
lahf
idivb
fcoms
imul
gs
xor
or
mov
rcrl
ret
iret
movsl
hlt
cmc
into
add
mov
push
and
ret
pop
inc
lods
inc
loopne
jae
not
scas
outsb
xchg
xor
std
fbld
mov
lahf
push
mov
bnd
xchg
adc
pop
aad
aam
xchg
rclb
in
mov
sti
test
or
mov
xchg
repz
xchg
decb
xchg
daa
pop
sbb
test
data16
les
insl
mov
ror
pop
sub
mov
mov
pop
mov
push
lret
popa
shll
iret
pushf
jb
or
xchg
out
aas
inc
mov
stos
ja
icebp
imul
mov
lods
or
outsl
mov
pop
out
pop
and
orl
pop
mov
mov
add
or
and
pop
js
or
push
enter
mov
out
jg
in
add
cmp
dec
sub
dec
ja
repnz
pop
adc
push
lcall
pop
pop
mov
test
out
inc
in
sbb
cld
sbb
push
insb
lahf
xchg
sbb
add
and
pop
cmp
push
test
cmpsb
sub
imul
inc
jns
lret
sahf
pop
loopne
enter
sub
adcb
push
xchg
add
mov
sub
in
stc
xlat
and
test
cmc
aad
mov
mov
inc
mov
jle
mov
jg
sbb
and
xor
xor
fwait
pop
mov
dec
cmpxchg
aas
and
adc
fstp
out
sub
push
inc
incl
jmp
fstpt
push
lret
cli
cmp
jae
cmp
xchg
and
gs
fwait
sub
sarl
inc
dec
or
movsl
ss
xchg
mov
xchg
cmpsl
fcmove
add
xchg
int
or
leave
mov
repnz
cwtl
popf
lods
cmp
fldcw
push
add
dec
shlb
adc
popf
dec
daa
cmpsl
in
pop
dec
sbb
mov
cwtl
jl
insl
leave
sahf
shlb
mov
aas
and
sub
mov
testb
mov
insl
scas
es
cmpsl
stos
clc
cli
movsl
cltd
mov
dec
mov
mov
mov
sbb
aam
push
adc
cmp
sbb
add
jp
insl
jo
std
test
fldcw
xchg
stos
ret
xor
in
std
shlb
xor
jp
inc
loope
mov
or
adc
mov
mov
mov
jecxz
stc
out
xchg
mov
lea
xchg
inc
adc
pop
mov
adc
mov
xor
mov
mov
imul
movsb
je
cld
daa
les
xchg
mov
sbb
cwtl
cmp
mov
ja
es
mov
mov
hlt
stc
cltd
shr
cmp
mov
imul
jle
jecxz
mov
jl
std
add
inc
test
jecxz
mov
pop
sbb
xchg
mov
mov
lcall
xchg
xchg
adc
cld
jecxz
sbb
mov
jp
das
js
cmp
imul
lahf
out
push
sub
or
xchg
inc
adc
ret
push
and
xchg
mov
adc
shll
mov
in
sti
popf
jl
subl
push
xchg
push
push
and
sub
or
inc
inc
cmp
lock
data16
lods
xchg
inc
fcmovb
call
aam
push
popa
test
inc
push
shl
mov
xchg
dec
mov
fiadds
jl
sub
add
pop
adc
movq
je
pop
dec
sbb
repnz
in
in
out
sbb
movsb
jg
fs
sahf
xchg
cmp
lock
inc
sub
sbb
xchg
addr16
mov
daa
ret
add
pop
pop
stc
xor
push
into
jp
rcr
lods
mov
repz
sub
fcomps
fidivrs
mov
jecxz
sti
icebp
negl
mov
jno,pn
adc
test
test
dec
lret
pop
shrl
lock
ret
loop
cmc
mov
sbb
and
andb
int
rorb
js
jecxz
pop
fnstenv
and
jge
outsl
subb
fmuls
add
aam
incl
push
mov
jge
les
adc
pop
lcall
aaa
or
sbb
mov
popl
lods
scas
lret
and
dec
cli
in
leave
psubsw
movsb
insb
mov
shlb
outsb
negb
sbb
lods
xor
loop
dec
jmp
mov
ss
sti
fldenv
jge
test
popa
cli
or
stos
sahf
outsl
dec
lods
pop
rclb
imul
pop
das
scas
sub
out
repnz
fistpl
inc
imul
lcall
jle
sti
xor
lret
repz
daa
jno
pop
cmp
mov
out
ret
scas
sahf
test
jbe
rorl
outsb
jnp
arpl
pop
jnp
mov
lret
aad
pop
out
push
dec
ds
jp
cli
aas
lds
mov
pop
call
pop
mov
fnstenv
mov
mov
sbb
imul
mov
sub
das
cmc
push
lds
or
jg
testl
and
jbe
jmp
into
lahf
scas
xchg
icebp
fnstcw
or
pop
stos
and
movswl
daa
lods
inc
mov
xor
inc
fildl
xchg
xor
loopne
sub
dec
mov
xor
cmp
inc
out
shll
hlt
push
mov
in
scas
das
mov
shll
inc
sti
imul
adc
ja
mov
xor
out
xor
shll
add
in
orl
cmc
outsb
or
mov
bound
addr16
addr16
xchg
int3
sbb
xchg
popa
cld
xor
cmp
pop
repz
sbbl
push
frstor
add
pop
jo
sbb
ljmp
add
dec
dec
mov
and
lcall
sbb
sub
pop
mov
dec
loope
sbb
dec
lods
mov
decl
push
rcl
cmp
mov
scas
mov
mov
inc
cwtl
and
ret
xchg
pop
inc
mov
sub
adc
cmc
adc
div
fsubs
lar
outsb
mov
mov
cmpl
add
pop
fists
mov
lret
pop
jae
add
rcpps
sub
shl
psubb
in
pusha
dec
pop
test
sub
popa
js
test
mov
mov
pop
mov
pop
push
stos
pop
test
imul
pop
dec
je
scas
sbb
lret
cmp
popa
jns,pt
fbstp
sbb
imulb
or
cmc
pop
and
pop
add
mov
bound
cwtl
push
cmpl
mov
loopne
rcrl
loop
cmpsl
popf
pusha
xchg
loope
cmp
push
call
dec
lcall
jne
gs
inc
mov
je
ljmp
testb
hlt
aas
cmp
cld
sar
sbb
in
les
sub
pusha
adc
pushf
pop
jo
rol
jb
jg
rcrb
addl
cwtl
aad
clc
push
add
xor
xchg
mov
push
in
jl
jb
daa
test
jge
mov
xchg
dec
imul
lahf
inc
push
and
pushf
test
sahf
mov
in
int3
cld
js
cmp
cmpsb
scas
or
add
dec
dec
add
subb
push
test
adc
cmp
xchg
mov
xor
xor
and
sub
pop
sbb
out
sbb
push
xchg
aas
loope
je
adc
inc
test
xor
fists
loope
cmp
mov
stos
mov
jp
jbe
add
push
inc
mov
cmp
mov
aam
cmpb
pusha
enter
mov
lret
scas
lretw
enter
lret
push
xchg
ret
and
into
outsb
lock
in
sbb
mov
shrl
pop
sub
push
mov
andb
xchg
xchg
outsb
jp
jecxz
mov
into
cmpsl
xchg
push
mov
inc
ret
ds
fs
cmc
sub
cmp
jmp
and
push
add
movsl
pop
sbb
addr16
cmp
push
ret
sti
scas
cld
fwait
xor
dec
xor
ret
mov
inc
das
xlat
cli
mov
clc
pop
sbb
xchg
inc
mov
iret
or
pop
sbb
aas
stos
jae
sub
adc
sahf
ret
sahf
dec
sub
roll
test
sarl
mov
fbld
inc
pop
and
pop
lods
cmp
fmuls
int3
adc
mov
xchg
mov
push
mov
ret
mov
jl
sti
dec
loop
jmp
mov
test
push
cmpsl
xor
jb
lds
subl
sbb
lret
movsl
xchg
int3
pop
gs
add
pop
mov
adc
jno
outsl
jno
aad
loope
and
sti
cmp
rcl
das
in
mov
incl
push
cwtl
mov
cmp
in
incb
inc
jmp
flds
cmp
mov
pop
mov
push
rcr
sbb
loope
cmpsb
aam
mov
lret
jle
push
dec
test
xchg
dec
or
add
ljmp
push
ret
stos
lds
into
mov
and
testb
xchg
iret
xchg
mov
std
shl
lret
xchg
cld
cli
bound
inc
insb
clc
mov
xchg
push
mov
pop
pop
xchg
cmp
in
and
faddl
leave
loop
enterw
call
pop
ficoms
not
loopne
gs
mov
xor
push
xchg
or
loop
stos
ja
xchg
test
pop
adc
pop
lods
sbb
mov
sbb
aad
ljmp
cwtl
cltd
lcall
push
loope
jmp
add
mov
xchg
loopne
mov
mov
cwtl
xor
xor
mov
loop
and
les
pop
pop
mov
dec
jo
dec
mov
inc
lock
je
je
out
pop
and
gs
jno
sbb
sbb
clc
adc
ret
xorb
dec
xchg
mov
inc
mov
ret
pusha
add
jecxz
and
mov
sbb
mov
incl
test
pop
xchg
and
pop
and
fldl
dec
adc
cwtl
xchg
xchg
jno
sub
mov
in
push
inc
inc
pop
mov
add
or
leave
pop
or
mov
call
xchg
dec
jl
int
adc
adc
cmp
push
divb
sub
adc
mov
in
pop
cmp
mov
dec
add
pusha
out
rcrl
adc
mov
sbb
enter
pop
or
jb
jmp
dec
jnp
divl
popa
ret
sbb
pop
out
movsl
pop
mov
out
inc
xor
pop
movsl
inc
popa
das
cltd
mov
cs
popf
push
adc
adc
push
bnd
or
mov
lods
negl
xor
lcall
mov
push
pop
mov
out
aaa
xchg
cmc
js
inc
out
ficoms
hlt
shl
sub
int
push
add
pusha
jns
inc
ss
lahf
sbb
pop
mov
dec
lcall
adc
loope
outsl
pop
xchg
hlt
scas
dec
mov
dec
lea
addr16
adc
iret
psrad
aad
inc
mov
mov
pop
dec
cmp
daa
inc
mov
ja
in
sub
pop
lds
jbe
mov
push
sub
or
decl
sbb
sub
push
jno
sbb
mov
pop
lods
or
xchg
imull
push
ja
test
xor
orb
add
movsl
dec
jl
add
sub
and
mov
cld
xor
iret
idivb
shll
sub
pop
aaa
movsb
adc
icebp
fstpl
cmpb
push
out
push
dec
imul
je
jl
jp
mov
mov
cmpsb
cmp
jl
cs
jb
jo
inc
pop
mov
lods
out
cmp
lret
loopne
push
lret
mov
dec
sub
push
jecxz
dec
fwait
scas
notl
xchg
mov
pop
inc
cmp
daa
mov
faddp
sbb
inc
sahf
mov
and
movd
sbb
xlat
mulb
mov
fnstenv
lahf
adc
mov
lds
out
or
sub
pop
lret
ret
sbb
adc
bound
mov
push
xchg
xor
sub
adc
jp
loopne
and
cs
mov
add
mov
xor
push
pop
mov
aad
shl
pop
mov
fld1
in
clc
cmpsl
sbb
push
jnp
and
add
add
pop
add
arpl
xchg
in
out
mov
in
mov
sahf
pushf
dec
ja
mov
cli
ja
push
popa
jae
jecxz
fs
push
adc
inc
or
push
lds
or
xchg
push
add
jae
pop
addr16
mov
std
mov
push
test
int3
mov
pop
jbe
hlt
into
push
pop
xor
inc
xor
or
js
mov
dec
and
addl
aaa
push
lea
dec
lods
gs
mov
cmp
jo
mov
mov
dec
mov
inc
mov
lods
ja
jae
lret
out
inc
repnz
push
and
pushf
push
jp
test
or
imul
dec
adc
mov
inc
xchg
jp
push
dec
sbb
divb
sbb
inc
cmp
mov
mov
push
cmpsl
cmc
es
mov
jne
adc
push
fdivrl
jmp
sub
sbb
push
in
stos
dec
xlat
sub
sahf
mov
xor
imul
pusha
sti
push
sub
sub
jg
push
in
cmc
cmp
inc
xchg
add
inc
jl
pusha
ret
jnp
orl
test
das
rcll
pop
cwtl
push
xor
mov
outsl
ss
push
cli
dec
add
aaa
inc
lahf
cltd
pushf
push
mov
or
pop
sub
gs
sbb
das
adc
sbb
mul
adc
jmp
arpl
mov
rorl
out
cmp
mov
xorl
add
popa
xchg
add
mov
loope
adc
pop
iret
test
cwtl
out
mov
xchg
or
movsl
cmp
shlb
scas
sub
lods
jb
ret
jns
imul
xchg
fsts
add
mov
dec
push
jne
out
push
inc
fmull
pop
xor
xchg
aaa
adc
xor
mov
push
dec
gs
fnstsw
sbb
gs
loop
int
mov
loope
dec
in
test
repnz
push
popl
push
ds
sbb
pop
push
sbb
out
or
inc
jle
testl
cmp
cld
xchg
out
mov
fnstcw
adc
ds
jmp
out
and
test
xor
test
dec
idivb
add
insb
je
shr
inc
jno
mov
pushf
outsl
push
ss
cmp
ds
jmp
imul
test
out
adc
mov
pop
pop
or
adc
out
fcmove
test
rorl
sbb
pop
hlt
test
mov
test
jp
daa
aam
pop
sub
bnd
xor
in
sbb
jb
xchg
cmp
das
mov
testl
fwait
stc
pop
sub
jbe
mov
push
or
fwait
movsb
ljmp
mov
push
mov
cmp
inc
js
add
es
in
loopne
incb
loopne
pop
icebp
int3
pop
jecxz
fdivr
dec
dec
cmp
mov
pusha
orl
cmp
mov
adcb
adc
mov
push
push
inc
aas
xchg
ret
shrb
out
mov
push
mov
mov
xor
and
jg
xchg
cmpsb
mov
addr16
lret
mov
inc
xor
pushf
push
lock
fsts
pop
test
pop
sahf
mov
mov
cmpsl
mov
mov
into
ja
mov
iret
aaa
stos
aam
pop
lds
pop
inc
pop
clc
in
les
mov
xor
jmp
sbb
and
rorl
lods
pop
lret
mov
push
cmp
xchg
mov
dec
daa
fidivrs
test
out
add
mov
sub
cs
scas
sahf
lret
push
les
sti
pop
out
nop
fcmovnb
mov
pushf
imull
cmpsl
loope
movsb
mov
lock
add
mov
call
lods
insb
out
and
add
cmp
inc
jbe
mov
pop
mov
addr16
add
dec
std
xor
daa
xchg
addr16
sbb
sbb
out
stc
out
rcrb
sbbb
jge
mov
mov
xor
scas
outsl
lret
pop
sbb
pop
lods
push
daa
pop
adc
jns
push
fstpl
push
push
popa
popf
xchg
popa
hlt
repnz
xchg
xor
in
cmp
fnstcw
adc
mov
hlt
fistps
ret
mov
xchg
dec
inc
pop
loopne
lds
mov
cmp
into
or
push
fcoml
sub
jns
shll
int
xor
mov
incb
in
cli
sbb
das
xor
xchg
mov
sub
cmc
xchg
mov
incb
mov
inc
pop
xchg
adc
push
push
dec
sbb
push
add
dec
or
repz
and
inc
and
pop
addr16
insb
add
xchg
or
jae
into
xchg
fnstsw
in
iretw
xchg
xchg
movsl
push
push
jne
rorb
xchg
push
into
jp
and
and
div
inc
jp
inc
insb
mov
inc
iret
mov
sbb
xchg
inc
bound
cltd
jb
out
and
lods
and
cwtl
inc
or
push
cmp
mov
adc
movsb
lds
xchg
inc
out
aam
sahf
xchg
addr16
xchg
jge
pop
popf
adc
call
and
mov
int
insl
cltd
fisttpl
fcoms
mov
adc
dec
loopne
jecxz
xor
mov
jl
xor
pop
imul
hlt
lret
lret
popa
cs
popf
add
or
pop
mov
mov
mov
push
sbbl
cmp
or
push
adc
daa
out
pop
mov
imul
mov
repz
cld
or
or
adc
adc
sti
cltd
mov
call
enter
shll
test
out
in
ret
adc
xlat
imul
inc
test
adc
aad
cmp
push
ficoms
adc
sbb
inc
popf
ret
xor
adc
mov
repnz
sbb
loop
aam
xchg
ljmp
pop
dec
mov
int3
or
mov
fbstp
pop
xorb
push
jae
das
cmc
mov
mov
dec
sahf
mov
xlat
rcll
adc
jb
jmp
mov
or
push
mov
lahf
xchg
fldpi
ret
xor
push
xlat
or
arpl
sbb
mov
jb
loopne
sub
out
cwtl
loopw
enter
mov
jnp
cmp
xchg
jbe
lods
testb
push
xchg
dec
and
shlb
sbb
push
aam
shll
fists
repz
push
fimull
into
add
inc
push
fs
add
xchg
stc
mov
xlat
dec
pop
call
fstl
pop
jo
shr
jp
jo
mov
and
ljmp
push
mov
imul
lcall
js
push
mov
sub
cmp
cs
dec
inc
jo
xor
ds
sub
arpl
push
or
orb
add
lret
ja
cltd
dec
cmp
outsl
jmp
push
mov
insb
push
jg
rorb
mov
sbb
es
dec
cmp
popf
push
xlat
divl
rcr
ret
cmpsb
push
cmp
adc
jge
lret
pop
xchg
and
ljmp
add
lea
out
fcoms
adc
mov
lcall
pusha
loopne
popf
sub
into
hlt
in
xor
dec
pmulhw
mov
pop
adc
pop
out
jmp
pushf
imul
sub
add
cli
xchg
pop
fmull
dec
imul
scas
push
jmp
fcomi
mov
jbe
sub
cmp
cmp
sbb
ret
stos
arpl
out
js
push
mov
lds
push
aad
bound
call
dec
les
int3
jne
sbb
ret
aas
add
and
or
add
int
xchg
inc
sub
mov
xor
fists
imul
fs
inc
das
test
je
scas
lods
testb
mov
lock
scas
iret
add
stos
in
sub
arpl
adc
sub
push
dec
lret
stc
jecxz
sahf
push
icebp
sub
nop
mov
gs
sub
jno
sub
and
aad
mov
das
xchg
test
inc
dec
mov
ret
outsl
dec
or
test
out
mov
dec
mov
cmp
xor
sbb
and
aas
jns
push
pop
mov
mov
or
lea
mov
ss
lods
cmpsb
in
lea
sbb
enter
pop
sti
je
loope
fidivs
out
orb
mov
inc
addl
and
in
fists
leave
mov
sbb
mov
sbbb
jecxz
aam
xchg
dec
das
push
or
xor
mov
jle
xchg
outsl
out
lods
mov
stos
imul
cmp
xchg
jg
push
loope
push
ret
sbb
notb
out
mov
or
adc
sbb
and
outsb
add
add
mov
and
pop
lods
in
push
cli
push
mov
and
sarb
inc
movsb
sub
imul
push
inc
aas
cmp
push
imul
dec
mov
mov
lret
add
outsl
add
cs
addr16
aam
addr16
jb
inc
iret
js
pop
idivl
aaa
insb
lock
int3
jecxz
inc
addl
cmp
shlb
stos
xchg
ror
jge
pop
cmp
add
test
cld
and
push
imul
xor
scas
push
mov
out
mov
cmp
push
outsb
xor
fcoms
shl
push
test
dec
mov
mov
pusha
ficompl
arpl
pushf
xchg
cs
dec
jmp
push
xchg
mov
add
mov
and
add
xlat
fistpl
jbe
dec
mov
movsb
add
gs
mov
rol
mov
test
fistps
scas
dec
lds
outsb
mov
shlb
lods
lret
in
call
lcall
push
add
xlat
pop
or
sbb
aam
pushf
mov
in
add
rcll
pop
pop
lods
add
add
bound
push
clc
idivb
popa
adc
xchg
aas
pusha
lock
push
xchg
lea
into
mov
repnz
pushw
pop
loop
lret
sub
or
es
xor
aaa
scas
pusha
test
xor
js
mov
gs
das
mov
fst
fwait
mov
xor
cmc
cwtl
pop
push
dec
pop
inc
ret
arpl
and
mov
inc
mov
jo
leave
inc
stos
adc
mov
adc
push
adc
mov
mov
popa
mov
lea
xchg
mov
out
sbb
or
rolb
sbb
das
adc
dec
and
mov
adc
cmp
mov
mov
mov
mov
or
ds
adc
das
flds
mov
fstps
jp
in
sub
inc
in
int3
clc
xor
mov
popf
dec
dec
mov
xchg
rcrl
je
test
aas
and
insb
add
pop
or
mov
xchg
popa
iret
daa
push
arpl
int
pop
jg
and
iret
inc
cmpsb
sti
pop
decb
mov
test
jg
bound
jne
jle
adc
loop
in
and
jnp
jge
shlb
sahf
popf
into
sbb
mov
fldenv
cmc
imul
out
sti
divl
jbe
lods
cmp
xchg
pop
out
out
mov
dec
je
mov
cmp
daa
adc
xor
fstpl
outsb
inc
cmp
add
push
xchg
insl
push
scas
aad
mov
insl
leave
jbe
insb
out
jne
jmp
cmp
lret
je
cltd
lea
into
int
popa
sbb
mov
hlt
into
cmp
shll
dec
sub
cld
cmp
popa
gs
or
mov
in
rcl
call
sbb
cmc
and
in
lea
je
lret
sahf
add
sub
mov
scas
hlt
mov
lock
jnp
dec
xchg
enter
sbb
ss
inc
mov
push
add
gs
push
inc
jge
in
cmc
mov
lds
out
pop
cmp
cmp
jecxz
mov
lahf
push
rcrb
jl
pop
cwtl
jo
lret
mov
fldenv
out
sbb
add
ret
sbb
cs
test
cmp
pop
enter
push
and
inc
nop
out
cmc
jne
stc
aas
in
mov
dec
jle
sahf
inc
push
scas
pop
and
push
ret
mov
aam
mov
xchg
pop
push
test
push
sub
pop
inc
mov
mov
aad
fsubr
test
icebp
hlt
sahf
jno
out
test
into
dec
xorb
fs
and
pop
xor
test
mov
dec
push
das
movsb
repnz
sbb
imul
repnz
ss
jnp
xor
rorb
test
xor
sub
mov
lock
call
mov
sub
add
cmpsb
sbb
dec
sub
addr16
pop
jbe
lock
mov
je
or
xor
call
adc
mov
aad
lret
cli
sti
sub
stos
fldpi
mov
lret
ja
pop
insb
pop
sub
in
pop
movl
movl
dec
mov
or
insl
push
call
scas
roll
aas
fnstsw
test
mov
inc
inc
loopne
fildll
inc
add
jnp
add
int
inc
cmp
rolb
and
je,pn
hlt
fwait
dec
jno
rorb
push
push
fcoms
push
xorb
lods
mov
popf
or
and
and
test
aam
out
jl
sbb
sahf
call
imul
aad
adc
mov
mov
std
pusha
sbb
sub
pop
lock
imul
int3
in
decb
mov
ffree
imul
dec
aam
inc
add
jge
popa
stos
push
call
sub
daa
sub
shl
cli
scas
mov
fnstcw
jnp
cmp
out
std
stc
mov
and
inc
mov
sbb
sahf
push
add
lret
popa
jae
inc
fcoml
cmp
sbb
std
push
lret
pop
orb
or
push
adc
pop
xor
dec
sub
std
test
ds
push
leave
mov
icebp
daa
movsb
dec
stc
mov
mov
inc
dec
jp
icebp
inc
imul
push
mov
sbb
popa
pusha
xchg
cwtl
int3
rolb
je
aas
popf
stos
sbb
mov
cli
or
mov
mov
arpl
gs
cmpsb
sub
cmp
cmp
lret
jbe
mov
sbb
lret
inc
rorb
add
fucomi
movzbl
push
mov
cmp
inc
div
push
pop
popa
push
jmp
lods
sarl
push
or
repnz
icebp
sar
or
xchg
dec
xchg
push
push
mov
mov
lea
subl
sub
jne
addr16
push
push
inc
push
es
and
xchg
cmp
repnz
dec
jnp
dec
and
or
mov
scas
push
and
test
in
add
loop
mov
xor
mov
test
mov
sub
adc
scas
push
es
and
aaa
lods
and
xor
icebp
das
cltd
push
repz
mov
mov
adc
fcmovne
or
cmpsb
sub
push
or
iret
cmp
idiv
in
pop
outsb
jmp
xor
cwtl
gs
les
or
je
movsb
pop
xchg
adc
insb
cli
xlat
outsl
jno
cmp
sarl
add
fldenv
mov
mov
lret
fimuls
out
addr16
push
sub
mov
and
inc
sub
inc
or
xor
outsb
xchg
xchg
dec
notb
imul
push
cmpsb
inc
insl
cmc
js
jl
add
test
sarb
push
xor
sub
sub
lret
fildll
cld
pop
or
scas
sbb
cmp
sbb
mov
add
adc
les
in
call
sbb
sub
imul
fdivr
xorb
ja
test
xor
xchg
pop
rcrb
outsb
aad
pop
add
shrl
lea
dec
dec
test
je
lahf
shl
fildll
aam
std
cmp
fnstenv
jl
outsl
cmp
cmpsl
mov
notb
in
rolb
rcll
pmaxsw
js
pop
add
ja
sub
subl
xor
filds
or
leave
mov
sub
lret
xchg
cmp
lea
call
sub
or
add
or
test
mov
inc
fstl
addl
fildll
pop
xchg
fisttpll
mov
sti
push
pop
les
adc
pop
cmp
clc
mov
lock
ret
aam
test
and
hlt
sbb
movsb
dec
cmpb
inc
or
fwait
push
iret
ljmp
xchg
mov
and
pop
push
mov
inc
lock
mov
xor
cmp
and
sbb
and
mov
xchg
xchg
sbb
punpckhdq
or
mov
push
cmpsb
ljmp
fsubrl
lret
mov
jne
dec
mov
out
fcomp
aas
sbb
sbb
jmp
inc
insl
dec
mov
mov
add
add
dec
je
dec
js
mov
cmpb
mov
cmpsl
xchg
aaa
lock
ret
sub
enter
cwtl
and
shrl
push
mov
xchg
push
and
xor
inc
xchg
lahf
mov
div
dec
jae
mov
lods
ds
dec
mov
imul
js
popa
loope
mov
popf
out
add
imul
out
sub
mov
loope
mov
jmp
test
jecxz
mov
sub
addr16
in
lock
sbb
in
xchg
je
orb
enter
in
push
mov
mov
in
movb
loope
ja
or
xor
arpl
sahf
mov
sub
popa
sbb
stos
fstl
mov
add
loope
dec
xor
mov
jne
cmpb
mov
popf
sub
add
leave
sbb
mov
aad
rol
jnp
lea
into
lods
adc
testl
ret
adc
inc
xchg
sbb
fsubs
pop
xchg
dec
mov
push
lock
rcrl
gs
pop
xchg
inc
mov
pop
daa
inc
test
sbb
mov
xor
xor
sbb
mov
ficoml
aas
lods
and
sahf
cmpsb
lea
mov
sub
rol
xor
lret
fidivrs
test
pop
loop,pt
jo
int
cmp
mov
mov
mov
inc
mov
call
in
imul
mov
adc
pop
fwait
and
scas
mov
mov
mov
inc
dec
mov
add
push
jnp
fiaddl
adc
sbb
push
jbe
mov
dec
xor
and
cmp
ficompl
lcall
jo
and
imul
mov
lcall
pop
jae
shrb
mov
in
jae
or
js
add
arpl
movsb
ss
negb
pop
jb
sbbb
pop
inc
inc
loop
adc
xchg
incl
fstl
mov
mov
or
push
pop
popf
xor
jle
cmpl
test
pop
in
sub
jg
cmc
sub
mov
push
out
pop
sub
xchg
imul
test
jnp
cmpb
mov
stos
stos
adc
sbb
mov
pop
es
mov
jnp
sub
pop
sub
jl
jno
mov
imulb
call
je
mov
popf
mov
mov
pop
andl
inc
cwtl
pop
push
inc
push
add
xchg
jnp
cmp
std
jbe
insl
jle
add
cli
mov
std
je
sbb
shlb
jns
es
push
rcl
iret
repnz
or
xor
ret
xchg
adc
bswap
cmp
repnz
loopne
cmp
dec
popa
test
mov
inc
mulb
dec
lods
lahf
push
mov
daa
sbb
test
aad
orb
test
inc
xchg
mov
das
add
and
mov
iret
pop
sbb
jns
loop
lcall
fwait
aas
frstor
int
and
xor
jg
bound
push
and
mov
outsl
dec
inc
xchg
insb
int
sbb
sub
mov
mov
insb
pop
jge
ljmp
push
sti
das
or
add
das
xor
daa
lret
inc
pop
sub
xor
xchg
cmp
cli
sub
fnstsw
loopne
mov
mov
cmp
push
insb
pop
adc
cmpsb
rol
gs
outsb
aaa
in
stos
inc
sub
addr16
ja
jge
sbb
sub
scas
sbb
sahf
push
dec
push
inc
dec
sub
push
mov
es
ds
ret
roll
sub
cmp
lret
mov
lcall
push
scas
inc
lods
push
out
xor
leave
ss
adc
test
xchg
js
mov
loop
clc
dec
dec
add
xor
or
inc
push
aas
mov
jbe
sub
jmp
jb
rorl
je
push
scas
loopne
push
inc
dec
or
repz
insl
sub
test
jb
xlat
push
enter
push
xlat
jns
jae
or
push
mov
sub
arpl
mov
scas
mov
push
mov
adc
push
cld
in
cli
or
xlat
push
pop
roll
dec
mov
iret
xor
idivl
lods
loop
mov
jecxz
lds
dec
movsl
push
hlt
and
mov
xchg
mov
add
mov
dec
sbb
outsl
in
cld
jno
and
aad
out
pusha
lret
loop
test
loopne
push
sbbl
jb
ljmp
pop
xchg
les
jg
mov
sub
cmp
enter
push
stos
cmpb
out
mov
pusha
aad
cmovle
stc
jno
push
out
sahf
or
loope
in
ret
lret
fcomps
sbb
fs
pop
in
mov
out
inc
jns
hlt
lahf
pop
jns
sub
sbb
mov
sti
jmp
and
clc
xor
pop
adc
sub
sti
and
movsb
mov
enter
adc
ds
stc
aas
insl
nop
push
adcb
iret
push
test
lret
stos
or
mov
into
fmul
dec
jp
mov
cmp
test
adc
mov
dec
stc
sub
filds
popf
inc
vcvttsd2si
ljmp
xchg
fimull
fmulp
pop
mov
stos
outsl
cmp
cmc
pop
pop
daa
fisubrs
mov
mov
enter
mov
mov
inc
outsb
test
mov
sbb
mov
ss
sub
xor
sub
pop
inc
jae
jno
pop
lods
and
and
scas
dec
mov
dec
push
je
out
cmp
xor
sub
cmovo
adc
and
stos
jo
mov
ret
pop
nop
ror
lahf
adc
cmc
in
js
push
xor
push
xor
mov
sahf
xor
and
fisubs
push
sbb
pusha
cmp
pop
jb
mov
push
ret
add
sub
es
adc
xchg
lret
sub
and
sub
jne
lcall
outsb
outsb
sub
xchg
inc
cmp
xor
jle
test
inc
scas
push
subps
push
and
outsl
fwait
add
dec
mov
into
cli
jnp
sahf
or
mov
addr16
bound
outsl
movsl
insb
lret
cltd
shl
and
mov
jecxz
call
inc
clc
es
repz
sahf
test
add
outsb
and
ss
repz
sbb
sub
test
addr16
arpl
call
add
out
pusha
in
sbb
imul
call
push
out
inc
and
aad
leave
xchg
adc
dec
mov
sub
push
sub
push
dec
adcl
sbb
mov
mov
inc
xor
sti
repnz
fildl
into
mov
mov
dec
cli
xchg
inc
shrl
pop
adc
out
cwtl
les
insb
out
iret
xchg
push
add
jecxz
or
and
mov
bound
xchg
lahf
push
aaa
sbb
xchg
xchg
inc
incl
lods
xchg
cld
cmpsl
xor
push
lock
pusha
mov
xchg
push
rcrl
cld
mov
cmpl
mov
jecxz
rclb
dec
enter
cwtl
push
leave
fisubrl
movsb
mov
loop
push
hlt
repnz
out
fnsave
rorl
push
pop
loope
sbb
xchg
movsl
cmp
insb
and
icebp
and
mov
sub
pop
aaa
dec
cltd
lret
movsb
cmc
xchg
icebp
and
fcmovnu
xchg
xchg
mov
xor
inc
sti
fs
sub
inc
ss
inc
filds
sub
mov
cmpsb
cmp
push
mov
jo
adc
inc
jns
mov
les
fdivrs
lods
dec
test
or
sbb
pop
lds
cmp
xchg
imul
in
stc
mov
mov
jp
adc
push
or
fidivrl
xchg
repnz
fcompl
mul
jb
out
in
mov
pop
mov
in
push
jb
push
dec
and
or
es
jmp
jo
cmp
and
ret
imul
mov
dec
mov
ficoms
pop
mov
push
jnp
hlt
ja
imul
mov
jae
outsb
push
mov
mov
jns
out
in
add
cmc
outsb
jnp
aas
dec
inc
mov
mov
jnp
push
xchg
movsl
or
cwtl
inc
inc
jbe
enter
cltd
push
popf
mov
xor
sub
fnstenv
mov
bound
sahf
jmpw
or
fisubrs
aam
xor
mov
mov
sub
pop
sub
imull
adc
das
fwait
lea
aam
and
dec
jno
jg
mov
lds
stos
mulb
loopne
push
push
sti
adc
push
sub
push
rclb
xor
jnp
sub
cmpsb
scas
push
mov
lahf
fsubrp
ficomps
test
stc
mov
mov
dec
adc
in
sti
lahf
in
outsb
and
mov
cmp
and
cmpsb
push
jmp
stos
and
call
and
jb
dec
jp
xor
out
stos
std
jnp
subl
orl
cmpsl
inc
sub
xor
cmp
in
jno
pusha
insl
pop
clc
dec
xchg
push
inc
pusha
mov
add
test
jbe
scas
pop
sahf
and
loope
xchg
hlt
in
ret
or
pop
pop
cld
sbb
aaa
lock
cmp
mov
or
repnz
cmp
sub
fwait
les
in
popa
hlt
mov
mov
data16
daa
jo
into
cli
ficoms
daa
xor
push
mov
hlt
jb
fs
adc
mov
sti
mov
lret
push
jmp
sti
jo
stos
lds
inc
dec
imul
push
mov
push
lcall
mov
or
dec
out
add
jo
mov
push
cmc
adc
jb
int
sbb
sbb
mov
hlt
add
add
jmp
xor
jo
push
out
xchg
cmp
ds
sub
mov
lret
cld
out
and
xchg
cmp
cld
xchg
mov
cmp
jbe
out
xchg
or
mov
sbb
outsl
lock
sub
inc
stos
xchg
sbb
leave
je
js
dec
icebp
shll
stos
outsl
call
xlat
mov
pop
fimull
xor
push
ljmp
sbb
lock
addr16
shrb
cmp
mov
addl
jne
jecxz
cmpsb
pusha
add
mov
leave
add
pushf
jae
ret
call
js
jg
sti
out
or
out
adcb
and
call
std
xor
mov
lds
mov
mov
out
push
das
arpl
or
jmp
cwtl
cmpsl
sar
adc
outsb
inc
fisubrl
shrl
sbb
loope
int
pop
pop
cmpsb
outsl
in
pusha
aas
pusha
arpl
or
cli
and
add
mov
movsb
mov
arpl
ja
faddp
cmovno
mov
mov
icebp
mov
ret
repz
or
and
std
mov
cmpsl
xor
xchg
sub
adc
xor
pop
imul
jmp
rorl
out
inc
std
in
pushf
movsl
cmp
sbbb
mov
bnd
jmp
push
push
ljmp
xor
pop
int
loop
das
loope,pn
cltd
dec
stos
std
mov
pop
ds
es
scas
in
push
pop
in
jp
mov
sysenter
push
jmp
cmc
jo
push
jmp
nop
mov
pop
lock
dec
lea
movsl
sub
and
mov
stos
mov
push
test
testl
lods
ds
cwtl
divl
cmpb
jns
int3
add
or
subl
pop
fsubr
ja
stc
cmc
loopne
mov
xchg
or
mov
pop
push
xor
mov
in
cmpsb
dec
cmp
push
xor
cli
xor
loop
jp
mov
and
or
in
icebp
sarl
lret
xor
mov
leave
and
mov
dec
cmpsl
mov
daa
test
leave
sub
cmp
les
or
outsb
rcrb
mov
mov
add
xchg
inc
inc
and
outsb
add
ja
jecxz
xchg
in
and
or
ljmp
repz
aas
mov
pop
inc
int3
scas
jns
xchg
cmp
retw
inc
sbb
in
mov
xor
push
jecxz
ljmp
sub
sub
xchg
fisubs
sarl
xchg
xchg
idivl
and
pushf
out
lret
adc
dec
sahf
dec
cmc
nop
rolb
mov
mov
xor
sarb
sbb
mov
in
loop
dec
cli
mov
xchg
out
out
mov
ljmp
test
pusha
shll
sbb
adc
jg
or
fisttpl
add
scas
mov
test
out
and
movsb
lock
arpl
dec
xchg
dec
fsubrl
pushf
mov
adc
in
lods
imul
xor
push
lret
dec
addr16
ja
mov
pop
lods
cli
jl
rclb
rcrb
push
nop
shr
push
push
xchg
push
pop
mov
rorb
pop
inc
push
pop
pop
or
popa
push
sub
out
xchg
int
push
cwtl
test
int3
cltd
inc
cwtl
hlt
xchg
stos
mov
sahf
add
aad
mov
inc
clc
rol
push
xchg
movlps
cmpsl
pop
rcr
mov
imul
pop
in
test
test
and
add
sub
popa
insb
es
lret
pop
jl
mov
jne
repnz
jmp
dec
sub
inc
cmp
loope
ja
outsb
popf
lods
inc
subb
loopne
lret
mov
fcomps
outsb
push
leave
and
dec
jb
rclb
add
dec
aas
and
and
sbb
cmp
out
cwtl
jno
into
loop
and
shl
leave
xchg
movsl
pop
sbb
add
xchg
orl
and
mov
clc
int3
jge
xor
inc
cwtl
jge
hlt
pushf
fldt
daa
hlt
add
insb
sahf
mov
or
cmpsb
push
pusha
xorl
addr16
ret
push
or
lret
push
orl
inc
popf
pusha
fcmove
adc
mov
out
loopne
out
aad
adc
push
and
mov
hlt
ljmp
pop
cwtl
leave
movsl
clc
or
repz
or
add
in
xor
ret
pop
cld
mov
repnz
mov
add
cwtl
pop
es
cmp
pop
cltd
mov
mov
pop
add
lock
bound
addr16
imul
and
std
out
jg
enter
mov
add
outsl
cmp
out
inc
gs
push
popa
mov
jns
xchg
aas
das
dec
out
ret
lods
add
add
xor
mov
addl
lea
push
fisubrs
push
jo
cmpsl
cmp
insl
xor
test
jbe
push
fsub
cmp
subb
xrelease
push
adc
dec
test
xchg
add
pop
push
js
push
je
cmp
or
inc
mov
jae
push
shl
iret
push
movsb
jbe
dec
int
cmp
jge
and
ja
or
sub
rclb
sbb
pop
jne
arpl
push
adc
sarb
cmpsb
mov
sub
leave
or
push
test
testb
shll
outsl
mov
add
clc
rcll
push
push
pop
and
add
pop
inc
lahf
std
dec
mov
roll
sub
stos
out
dec
mov
pop
outsl
sbb
mov
push
push
jp
ret
subl
in
jo
mov
test
jecxz
dec
xor
psubb
cltd
jne
ret
movsl
pop
inc
cli
insl
rcrl
or
jg
fsubs
ljmp
ds
jo
loope
xor
inc
insb
push
mov
test
push
ret
xlat
pop
sub
mov
ds
xor
aaa
in
inc
es
nop
adc
aad
adc
int
repnz
je
addr16
mov
push
arpl
fnstenv
xor
fdivr
xchg
jg
dec
pop
pop
fisttpl
adc
dec
stos
add
pop
iret
sahf
sahf
lods
loopne
call
incb
out
and
gs
fbstp
dec
mov
add
je
and
or
pop
movb
adc
or
mov
pop
sbb
lods
ja
adc
jge
fwait
out
or
es
inc
and
mov
jo,pn
push
mov
vmwrite
jo
cli
lahf
mov
adc
cs
and
mov
sub
pop
leavew
inc
inc
rorl
jmp
adc
inc
add
arpl
adc
and
lock
or
jle
cmpsb
lock
jp
ret
lock
js
sbb
lret
jns
dec
jnp
xor
sub
inc
out
repnz
adc
and
inc
imul
jge
test
movsl
shll
ret
push
cwtl
inc
xchg
mov
mov
aad
cld
mov
push
std
cltd
jl
in
mov
in
adc
fadd
mov
fldl
sbb
cmp
daa
daa
ds
stc
xchg
shl
inc
xchg
call
popf
shl
push
imull
je
lahf
imul
sahf
repnz
mov
imul
pop
and
sti
ud1
ja
mov
fisubl
sub
cli
push
stos
xchg
in
ret
fcmovnu
in
or
or
push
jb
rorb
lret
add
xor
out
sbb
jmp
mov
or
mov
mov
and
loope
testb
loop
jb
inc
inc
xor
shll
dec
bound
mov
cmp
sbb
loopne
and
push
ret
mov
int3
outsb
fwait
jae
cli
clc
xor
roll
push
call
or
xor
lret
cmp
mov
pop
or
mov
rcrl
icebp
daa
lock
mov
fdivl
lods
lea
stos
cmpb
and
decl
shl
mov
popa
jl
sbb
cmp
cwtl
test
pop
sar
or
ds
shrl
sub
xor
test
mov
leave
addr16
loope
push
cmp
inc
mov
loopne
jnp
icebp
push
add
lock
jge
test
icebp
jno
mov
data16
jecxz
test
pop
in
iret
rcrl
mov
sti
mov
dec
jp
push
in
inc
mov
push
shrb
jecxz
xchg
subb
mov
inc
pop
stc
push
iret
popa
hlt
and
jne
push
xchg
in
mov
push
mov
mov
out
ds
mov
jnp
pop
inc
addr16
loope
js
pop
adc
fsubrl
pop
push
cld
rcr
inc
rorl
mov
ret
mov
movsb
pop
adc
mov
insb
sbb
jbe
xchg
lret
xchg
lods
mov
adc
out
pop
and
lahf
pop
outsb
fsubrp
dec
scas
mov
jno
test
cs
mov
lds
inc
stos
sub
mov
and
push
mov
cmp
sbb
lods
movsl
and
add
rclb
leave
lods
xchg
adc
inc
cmp
dec
inc
xchg
add
xchg
notrack
test
cwtl
js
out
cmp
jae
sbb
sarl
leave
enter
jge
mov
or
sub
sub
jmp
loope
adc
fcmovbe
and
cs
cmp
test
pop
enter
dec
mov
shlb
add
out
repz
dec
popa
fists
fcom
and
fs
cmp
lock
and
dec
push
and
xlat
xor
jb
xorb
inc
push
and
xchg
xchg
jb
xchg
cmc
test
sub
cmp
or
pop
mov
mov
sub
jnp
stos
cmp
xor
fcmovbe
jnp
andb
adc
mov
xchg
pop
sub
xlat
mov
out
mov
xchg
xchg
mov
push
repnz
fcomip
mov
mov
mov
pop
clc
pop
int
pop
int3
or
icebp
jg
aas
push
sub
add
lds
vpunpcklwd
lret
call
or
cmpsb
cmp
push
fwait
mov
fcomps
push
xchg
loopne
pop
or
repz
jo
in
adc
and
sbb
repz
sub
dec
xchg
sbb
jne
in
ret
xchg
or
shrb
out
adc
mov
fisttpll
jno
cwtl
pop
jbe
out
sub
mov
adc
jns
pushf
jl
cmp
inc
push
loopne
pop
cmp
aad
dec
mov
sub
xchg
out
fcmovb
scas
iret
enter
dec
xor
xchg
or
push
sub
cmp
jp
jl
or
mov
dec
push
or
xchg
adcb
insl
pop
into
movsl
pop
fwait
pop
lods
sbb
leave
and
and
xchg
cmp
addr16
and
xchg
imul
xchg
dec
sub
push
dec
cmp
les
roll
enter
xchg
adc
cld
repz
adc
in
test
fildll
dec
sbb
adc
aas
xor
inc
adc
xchg
dec
push
out
mov
in
loope
fstl
inc
or
xchg
sarl
push
xor
and
in
xor
stos
jge
stos
jge
fidivrl
xor
push
add
mov
inc
das
xchg
mov
push
outsb
shl
cmpsb
sub
lds
das
push
xchg
stos
or
or
scas
mov
jmp
lds
out
pop
sarb
xchg
mov
push
hlt
test
jbe
cmpsl
dec
sub
xchg
and
lods
ja
dec
mov
cs
xor
fisttps
inc
xchg
lret
sub
jb
cmp
dec
cmp
inc
fsubl
stc
fdivs
xor
mov
sub
aas
sub
lds
lock
cmp
dec
mov
push
mov
lock
cmp
inc
ret
lds
rolb
inc
push
jbe
adc
mov
jp
sub
ds
shll
cwtl
jmp
pop
adc
mov
clc
rorb
dec
adc
outsb
int
lods
pop
mov
pop
fsubrs
mov
jecxz
fcoml
xchg
cmp
call
imul
add
aas
push
and
icebp
aad
stos
out
cmp
pusha
inc
or
mov
pop
enter
dec
ja
xchg
cmpsb
pop
jle
xchg
mov
sbbl
rolb
xor
insl
in
lea
push
bound
mov
pop
insl
lods
test
mov
cmp
ss
out
jmp
mov
mov
or
sarl
push
jb
add
or
push
mov
ror
xchg
and
add
adc
fisubs
mov
sti
xor
or
mov
mov
inc
sub
loop
mov
push
test
scas
mov
mov
dec
lods
shlb
mov
jp
adc
pop
aad
mov
or
jns
push
xchg
cwtl
lock
daa
nop
sub
arpl
adc
mov
dec
xchg
inc
inc
mov
hlt
xlat
jne
push
pop
xorl
xchg
scas
mov
aad
enter
pop
jl
jbe
andl
or
lods
xchg
pop
fdivl
fiadds
mov
dec
add
push
sbb
xor
insb
cli
fs
mov
jne
scas
clc
enter
cli
jnp
push
and
je
xor
sahf
push
pop
je
and
mov
fcompl
mov
lcall
xchg
out
insl
out
shll
xor
sbb
mov
dec
xchg
add
popa
out
xlat
pop
stos
stc
ds
adcb
idiv
cmpsl
push
xchg
push
inc
cmp
scas
pop
push
fucom
loop
jmp
pop
mov
push
mov
enter
ficoms
xor
push
gs
dec
lret
mov
rorb
gs
xor
add
ds
and
es
dec
mov
mov
ljmp
dec
adc
dec
lret
dec
sarb
xchg
imul
pop
xchg
mov
push
or
or
sbb
mov
xor
ret
rolb
cmp
sbb
out
push
sbb
sahf
xor
add
sub
outsb
iret
fwait
pop
and
shrl
and
bnd
dec
leave
lret
mov
adc
adc
or
das
movsb
inc
cmp
cmc
pop
sub
inc
imul
out
imul
mov
cltd
lcall
sbbb
mov
mov
add
inc
xchg
icebp
loope
lret
stos
add
test
or
rorl
mov
add
sub
dec
mov
jp
in
cli
pop
pop
dec
push
mov
lods
or
jle
pop
jg
int3
xor
rcr
push
mov
aas
jo
xchg
fadds
mov
js
and
inc
in
cmp
btc
mov
rcr
and
mov
xchg
bnd
adc
mov
xchg
scas
pop
iret
rcrl
push
push
mov
xchg
gs
mov
mov
add
sbb
add
jno
jg
xchg
das
cmc
jmp
pop
push
adc
andb
inc
fisttpll
add
adc
rcrl
outsl
pop
add
push
xchg
push
das
add
popl
sub
cmp
nop
mov
icebp
adc
negl
ficomps
enter
mov
pop
push
gs
sbb
adc
shr
xor
aaa
je
cmc
mov
and
inc
mov
test
mov
std
cmove
and
xor
mov
push
push
jmp
mov
insl
push
push
arpl
rcrl
pop
push
mov
adc
out
inc
rclb
test
fimull
emms
pusha
shlb
push
xor
cmp
push
xchg
sub
dec
inc
stc
push
sub
jne
mov
outsb
divb
pop
aad
push
sub
sub
out
loope
mov
mov
daa
sub
and
inc
fcompl
xlat
aam
clc
sahf
orb
adc
stc
stos
in
jmp
fwait
lea
adc
repnz
pop
cmc
push
sbbb
fidivl
mov
inc
aad
jge
sbb
push
int3
inc
cld
ret
mov
testl
jne
aam
insb
fisubs
imull
xor
and
sahf
jmp
test
or
push
stos
mov
out
or
mov
cmp
jge
fisttps
int3
cltd
cs
inc
xchg
sahf
sbb
mov
mov
addb
add
fildl
sub
cmp
aam
cmp
lods
jb
and
es
and
push
shr
xor
mov
and
out
xchg
push
or
mov
push
mov
jno
jmp
imul
push
cmp
inc
cmp
xchg
inc
stos
mov
jno
adc
shll
hlt
add
aam
test
pop
adc
xor
jl
nop
lahf
mov
test
add
inc
fstpl
aas
sti
inc
push
push
mov
aaa
and
add
lcall
stos
pop
stos
sub
pop
push
mov
pop
sbb
jle
push
jne
dec
iret
outsl
out
rcl
mov
inc
nop
fs
icebp
test
pusha
jp
inc
jg
mov
dec
mov
cmpsb
add
clc
xor
in
inc
and
aas
mov
imul
in
cwtl
imul
cs
sub
mov
cmp
fcoml
sbb
cmpsl
shl
ss
test
inc
adc
aam
pop
mov
and
movsl
sub
add
jbe
or
es
pusha
lea
lods
dec
sbb
adc
addl
idivl
xchg
lret
xchg
rorl
mov
or
push
pop
int3
cmpsb
pop
pop
xlat
fwait
cli
out
les
mov
pop
adc
repnz
fdivl
in
mov
cmp
fsubr
mov
push
xchg
rclb
jne
sbb
mov
outsb
push
and
cwtl
pop
clc
xor
imul
jb
xor
bound
movlps
adc
inc
xor
jmp
daa
xchg
sbb
pop
jne
clc
and
cmpsl
jbe
mov
lock
jno
xchg
fnsave
jl
xor
mov
jge
pusha
sub
stos
sbb
rolb
dec
mov
imul
sub
test
scas
push
sbb
mov
mov
daa
test
popa
popf
test
xchg
push
movsl
in
push
mov
cwtl
lcall
mov
cwtl
pmaddwd
fildl
xor
mov
add
mov
movsl
in
lods
cmp
repnz
lods
mov
nop
xchg
mov
or
mov
jecxz
jge
and
sub
bound
pop
jl
outsb
loope
roll
mov
inc
cmc
add
testb
sub
pop
icebp
dec
lods
push
or
dec
paddusw
push
nop
push
out
xchg
sahf
push
ds
inc
jmp
insb
push
push
push
jge
sub
lock
push
dec
dec
and
sub
testb
mov
pop
sti
daa
lock
cs
or
out
sti
addr16
scas
inc
repz
cmp
adc
dec
sub
icebp
dec
lods
and
fisubl
fsub
cmpsb
std
rorl
imul
sub
rcr
fsubr
mov
cmc
ficoms
aad
dec
in
cmp
aam
add
xchg
push
mov
add
or
stos
in
test
loop
adc
dec
push
pop
icebp
add
aas
jmp
cmp
xchg
int
xchg
or
inc
jne
mov
daa
shll
in
ss
ja
je
jge
adc
pop
or
xor
xor
push
enter
push
cld
aam
cs
adc
xchg
rcrb
or
xor
in
add
out
cld
pop
iret
dec
scas
in
loope
testb
jmp
lret
cwtl
cmp
or
in
cmp
outsb
stos
arpl
sbb
in
mov
jo
mov
sub
cmp
add
ret
xchg
push
or
push
mov
fbstp
sub
lods
and
dec
and
push
jno
and
xchg
dec
ret
mov
push
mov
test
js
sbb
jmp
lret
mov
rcr
xchg
sahf
iret
test
dec
jo
xchg
imul
pop
xor
push
jmp
leave
cmp
fistpl
hlt
mov
xchg
mov
not
sbb
int3
push
fldlg2
and
lret
outsb
dec
add
lock
and
adc
and
jl
pop
lea
idivl
xchg
mov
loope
pop
lds
orl
sbb
inc
iret
push
or
xchg
lea
mov
mov
loopne
repz
test
mov
mov
jp
sbb
in
lds
fcompl
mov
mov
test
mull
sti
mov
pop
xchg
mov
cmp
mov
jle
arpl
sub
sbb
pop
fwait
gs
stos
dec
pop
and
jnp
test
mov
jecxz
mov
cmp
push
scas
stos
push
lds
fldenv
orb
negb
sub
and
push
xchg
mov
popf
and
into
xor
xchg
mov
lcall
mov
sub
or
pop
mov
std
cmpsl
xchg
out
xor
xchg
rcll
mov
jp
fisttpll
mov
aas
sysexit
sbb
test
addr16
insl
and
adc
pop
mov
mov
jns
movb
sbb
fmuls
pop
push
sub
cmc
sub
or
jns
push
shl
aad
fnstsw
imul
gs
or
pop
fidivrs
pop
pop
ds
aam
jns
movsl
mov
rcrb
adc
je
dec
in
sbb
mov
shll
sbb
sbb
xchg
pop
push
xlat
push
dec
push
pop
idiv
jnp
adc
add
ss
xor
aad
loopne
dec
out
das
push
adc
pop
xor
and
addr16
shl
jae
in
pop
mov
inc
fisubrs
into
sbb
push
mov
sarl
in
jae
sbb
sahf
jmp
add
pop
xor
ja
lock
mov
das
outsl
loop
or
cmp
clc
fildll
and
xor
insb
aaa
test
xchg
clc
mov
mov
pop
outsb
lea
test
pop
cmp
jae
xchg
mov
stos
aam
mov
enter
adc
sub
jne
cmp
sbb
dec
sti
and
lahf
mov
pushf
arpl
out
add
and
out
pop
int
adc
clc
jb
test
outsl
or
sub
imul
repz
push
mov
sub
cmp
rcll
push
and
rorl
dec
push
inc
jmp
pop
add
int
lcall
jns
ds
bound
pop
pop
inc
push
and
out
in
xor
mov
add
jg
data16
subb
repz
testb
push
lods
push
pushf
or
add
cmpsl
push
pop
nop
push
pop
mov
jae
int
or
sub
jl
int3
jb
pop
loope
iret
jle
mov
or
rolb
cwtl
lret
dec
pop
int3
fnstenv
pop
iret
mov
cmp
xchg
or
mov
fistpll
call
outsl
add
nop
stos
enter
cmc
hlt
inc
gs
lcall
add
adc
shlb
xchg
outsb
add
mov
push
aam
pop
sub
pop
mov
sbb
xor
sbb
aas
fnsave
leave
pop
hlt
lods
xor
push
orb
movsl
xor
or
and
lahf
jnp
mov
adc
testb
mov
xor
stc
push
push
inc
mov
pushf
xchg
loop
decl
sbb
insl
mov
fisubs
adc
xchg
and
in
xchg
xchg
pop
loop
mov
or
inc
mov
imul
mov
add
bswap
sub
cli
mov
loopne
popf
and
stc
pop
xor
xor
push
mov
repnz
cld
cmpsl
xor
shll
ljmp
sahf
mov
aas
fldt
dec
in
movsl
xor
cwtl
out
pusha
pop
dec
dec
pop
das
push
and
in
test
je
iret
out
sbb
add
mov
test
fcom
repz
out
push
jnp
jbe
repz
imul
push
cmp
fdivrp
sahf
test
pop
lahf
iret
sub
add
dec
insb
jo
incl
iret
das
pop
mov
daa
adcl
rcl
imul
test
outsb
or
les
in
xchg
xchg
cmpsl
leave
or
pop
cmp
fisubrs
and
cmc
inc
jg
cmp
xchg
mov
enter
jo
pop
imul
sti
inc
adc
pop
mov
in
pop
int3
jp
mov
xchg
adc
aam
pushf
inc
mov
imul
iret
rolb
cmp
add
xor
icebp
lcall
mov
mov
ret
sub
fistpll
add
xor
mov
aad
push
aad
mov
fcoml
mov
cmp
cmc
xor
data16
pop
xor
xor
inc
dec
mov
dec
outsb
jp
ret
lods
ret
mov
xchg
mov
jno
jno
ja
iret
cwtl
sbb
in
lret
add
mov
cmc
dec
add
fistl
xor
lods
test
je
loope
fistpl
sub
dec
push
stos
add
adc
dec
jns
cli
adc
xchg
push
add
jo
push
paddusb
daa
cmp
mov
faddp
and
jecxz
rcrl
push
out
mov
mov
cwtl
in
inc
jae
sub
adc
push
mov
cmc
int
jp
leave
mov
cmp
inc
jl
cmp
rcll
push
adc
pop
cltd
xorb
mov
lahf
push
stos
outsl
int
lea
xchg
out
adc
scas
int3
pusha
push
pop
xchg
cmc
adc
jmp
jg
sbb
pop
cmp
and
sub
aas
xor
adc
inc
enter
sbb
arpl
fbstp
push
mov
cmp
test
inc
mov
xor
adc
cmp
or
jbe
outsl
push
jg
imul
or
cmp
cmp
push
lods
cs
adc
fs
divl
xchg
jle
sbb
add
jl
xchg
push
push
hlt
cmp
icebp
shll
xchg
js
jp
push
dec
or
idivl
out
lock
notb
data16
loop
push
adc
cmp
int
or
jne
pop
std
inc
mov
push
jg
iret
popa
pop
adc
push
stos
sbb
lods
xor
into
ss
xor
push
insb
sbb
or
dec
lea
mov
rolb
not
js
es
xor
jmp
test
and
lret
inc
adc
inc
add
lock
and
pop
mov
pop
xlat
cmpsb
and
add
cmp
ja
and
jl
xchg
xlat
mov
inc
repz
cmpsl
out
out
mov
sbb
mov
ds
fimull
test
cltd
cmp
xchg
adc
cltd
adc
mov
sbb
jns
mov
mov
add
decl
pop
flds
loop
cmp
sbb
stos
jmp
adc
pop
lahf
lret
mov
movsb
gs
jae
or
jns
sub
fdivs
add
add
aad
je
fimull
jbe
lods
in
outsl
cmp
mov
cld
sahf
stos
push
lds
jp
jmp
ret
enter
mov
cmc
lret
sarl
pop
cmpsb
outsb
lods
push
mov
push
add
dec
shl
xor
inc
jb
gs
or
daa
test
aaa
pop
shlb
mov
scas
in
jno
pusha
dec
insb
pushf
pop
insl
clc
bound
subb
add
sbb
mov
repnz
add
lock
push
push
xchg
fcoms
sub
mov
adc
push
adcl
clc
and
pop
in
xor
cmp
mov
aad
shlb
mov
ds
scas
jb
xchg
lods
xor
push
jae
gs
mov
jl
test
ds
stc
xor
xchg
jb
cmp
cmpsb
and
pop
test
js
mov
sbb
lret
orb
mov
cmp
pop
lcall
cli
ret
dec
scas
mov
adc
test
pop
into
out
or
ret
out
shl
push
mov
push
fs
imul
out
scas
push
in
fisubrs
orb
cmpsb
stos
jbe
outsb
test
test
out
jge
je
pop
in
shl
cmpsb
fnstenv
xchg
or
fisttps
into
cld
mov
xor
add
pop
cmpsb
or
jp
insl
mov
dec
jo
mov
sbb
inc
cwtl
push
cli
imul
cli
xchg
xor
add
ss
popf
lahf
xor
jbe
lds
lock
punpcklwd
rcll
mov
aaa
xlat
mov
lods
ret
pop
mov
sbb
xor
adcb
lea
inc
xlat
stos
push
cmp
js
add
sub
jns
movsl
sub
sub
arpl
sbb
add
push
push
pop
out
mov
aaa
hlt
stc
sarb
in
add
lret
pop
test
xor
pop
pushf
lods
es
sbb
daa
mov
aaa
inc
out
or
mov
sbb
iret
aas
sbb
adc
cmp
dec
mov
fbld
mov
movsl
add
imull
jmp
ror
scas
pop
gs
add
lcall
lret
fcomip
shlb
and
sub
ret
les
imul
repnz
insl
push
jle
push
test
aaa
lret
mov
js
ljmp
sub
loop
dec
add
in
lea
sbb
or
cmp
ret
cmp
aad
adc
push
adc
jo
cs
incl
ret
arpl
and
and
imul
push
iret
push
mov
add
fs
lcall
cmp
dec
call
into
bound
or
and
mov
push
fs
pop
imul
cmp
pusha
pop
icebp
fucom
jns
push
pop
icebp
out
mov
std
cmc
nop
roll
inc
sbb
jno
int3
cmp
insb
popa
sbb
or
add
add
hlt
dec
lret
xchg
dec
jbe
std
fstp
mov
js
mov
cs
clc
jnp
leave
push
lods
dec
dec
lea
nop
fcomp
cmp
sbb
movsl
or
inc
repnz
shlb
mov
sub
test
sub
push
adc
cmc
jmp
add
adcl
xchg
mov
int
dec
and
sub
pushf
std
and
sbb
in
dec
inc
xacquire
mov
sbb
and
xchg
xor
cmpsb
jmp
pop
icebp
sarl
and
mov
mov
xchg
add
jo
mov
aad
dec
and
xor
pop
mov
xlat
out
into
add
cmp
xor
sbb
mov
jne
pop
jp
push
lret
mov
inc
aam
pop
test
push
out
lcall
arpl
cmpsb
xchg
xor
mov
add
lea
xchg
jle
orl
mov
nop
cmp
in
and
iret
sarl
add
aas
mov
sub
and
fwait
inc
flds
jl
adc
imul
mov
cld
repnz
pop
jb
push
lods
adc
mov
imul
or
push
xor
mov
xchg
popa
inc
pop
lock
pop
pop
pusha
cmp
cmp
jno
or
out
into
mov
cmp
stos
xchg
pop
in
stc
ret
pop
ret
fisttpl
jp
jns
call
push
inc
fcmovu
dec
cmp
lds
cmp
xor
test
into
outsl
fistps
imul
das
jle
test
ret
fisttps
push
xor
mov
push
lods
pop
and
or
jo
ret
or
or
mov
or
mov
sbb
add
xchg
xchg
jecxz
xchg
ret
xchg
lahf
stos
mov
push
lock
test
mov
sub
fdivr
cmp
mov
fistpl
cmc
mov
xchg
ja
scas
cmp
push
add
lret
jp
lret
cmpsl
jmp
sbb
inc
pop
mov
mov
pop
repnz
and
push
xchg
inc
adc
cli
add
leave
lcall
xchg
xchg
sub
jne
jnp
loope
int
xchg
xchg
inc
int
mov
pop
add
test
push
aam
xor
jecxz
jne
test
in
sahf
pop
mov
fdivr
sbb
xchg
push
jle
or
shll
xor
add
roll
lret
cld
adc
clc
pop
std
inc
stos
cmp
dec
std
sbb
or
jnp
inc
pop
lcall
inc
cmc
sub
lret
test
pop
mov
cmp
mov
jp
mov
mov
stc
push
add
icebp
jmp
inc
jne
ljmp
or
mov
out
mov
push
dec
es
sub
cwtl
add
sub
sbb
stc
std
cltd
or
jbe
rcrl
pop
fwait
nop
jne
sbb
sub
hlt
jnp
sbb
adc
scas
outsb
cmp
jg
ljmp
hlt
jb
mov
mov
xchg
sub
push
cwtl
dec
enter
push
aad
inc
cld
mov
inc
jle
fisttpll
popa
out
dec
hlt
sbb
scas
out
stc
push
mov
add
daa
jae
jne
xchg
divb
add
push
je
mov
pop
dec
aas
iret
inc
out
fistpl
add
jnp
inc
fnstsw
int
add
sbb
push
mov
inc
jb
sbb
test
hlt
push
rcll
mov
xchg
pshufw
adc
jle
mov
andb
popa
dec
xchg
dec
pop
cmp
jle
pop
adc
dec
sub
sar
sbb
popf
xchg
jae
fldenv
xchg
add
push
stos
and
jmp
ja
xor
ss
xchg
sbb
icebp
mov
add
and
adc
popf
icebp
push
sub
push
mov
sbb
in
or
mov
push
mov
cmc
gs
push
jp
dec
loope
xchg
out
sub
mov
adc
mov
cmp
mov
dec
je
aas
insl
xchg
stos
out
or
shlb
xchg
lea
push
fcompl
push
fisubl
xor
jmp
sub
clc
mulb
sub
jp
pop
test
xchg
jp
fbld
cli
ljmp
push
jo
jbe
inc
xchg
outsb
sti
adc
popf
pop
dec
push
ffreep
xor
imul
sbb
jle
cmc
inc
mov
pop
inc
cmp
repnz
lock
leave
jg
xor
inc
and
popf
xor
push
xor
mov
sbb
aam
movsl
adc
cmp
pushf
mov
lock
pop
cli
push
imul
sub
jg
sahf
mov
or
xchg
dec
xor
loopne
sub
sahf
in
adc
clc
xchg
sub
dec
es
leave
push
aas
jmp
std
add
hlt
repnz
sbb
push
cmc
xchg
fdivrs
cmp
test
sbb
cmp
or
aas
loopne
stc
in
push
out
sbb
mov
xchg
sahf
or
mov
lcall
or
sbb
dec
sub
pusha
loopne
icebp
movsb
fadds
mov
sub
aaa
add
xchg
inc
call
jno
mov
jo
loopne
mov
shl
add
insl
push
cld
aad
sbb
push
js
in
fstl
aaa
inc
jns
fcomps
adc
in
fldcw
or
ret
ss
jg
shrb
sti
sub
outsl
and
dec
jecxz
call
in
pop
adc
push
inc
loopne
pop
orl
ljmp
push
mov
inc
out
outsl
sub
out
out
xchg
dec
movsb
int
fldl
mov
aas
mov
ds
sub
or
lret
idivl
push
jae
ret
xchg
cmp
jl
stos
and
cs
jp
mov
inc
mov
mov
loopne
inc
or
dec
jg
adc
mov
adc
dec
or
pop
adc
fnsave
das
pop
aam
rol
push
pushf
inc
jno
xorl
leave
adc
xchg
or
test
sbb
testl
jmp
dec
pop
dec
mov
jo
cld
cmpsl
mov
lret
scas
jmp
sub
aam
jecxz
test
adc
les
aad
test
push
lret
xor
stc
aas
sub
xchg
leave
mov
add
iret
imul
loopne
fisttpl
arpl
xchg
mov
or
cwtl
jg
pop
ror
andb
jl
push
es
ret
in
push
mov
mov
push
inc
pop
adc
shl
cmc
sub
jb
mov
scas
or
jbe
adc
loope
adcl
lcall
scas
xor
lea
jmp
and
fwait
adc
jbe
ja
or
jae
jge
gs
les
dec
pop
pop
mov
subb
mov
in
inc
dec
push
pop
cmp
jle
adc
jg
fwait
mov
and
scas
int3
rclb
xchg
push
insb
or
lret
scas
add
popa
or
or
inc
dec
pop
popa
scas
sbb
nop
sarl
or
and
aaa
ror
out
les
movsl
addl
add
sti
popf
adc
rolb
aas
insb
mov
mov
adc
sbb
lcall
cli
sbb
jmp
mov
testl
cwtl
cmc
xchg
std
ja
cld
fs
mov
xchg
hlt
nop
xchg
insl
push
fdiv
mov
jbe
lods
or
loopne
and
inc
add
sti
add
mov
sti
andl
push
or
xchg
into
call
fwait
adc
adc
aaa
mov
pusha
stos
add
jecxz
scas
dec
std
pusha
rol
cli
ljmp
pop
mov
pop
pop
mov
outsl
scas
movsl
jge
dec
mov
addr16
add
push
dec
mov
push
mov
ja
orb
mov
xchg
imul
aas
inc
cmp
jg
gs
sub
push
adc
std
jnp
sbb
shrl
push
sbb
mov
add
mov
pop
or
fsubrs
nop
jp
imul
stos
mov
push
jne
test
mov
sbb
data16
adc
sub
out
or
jp
test
add
ror
jmp
add
dec
jge
mov
pop
ror
inc
lahf
in
dec
adc
cmp
mov
mov
or
setp
dec
add
xor
addr16
gs
mov
mov
in
sub
mov
addl
hlt
shrb
xchg
inc
stc
push
stc
pop
scas
shrd
fs
mov
test
push
ror
lret
repnz
into
push
mov
into
mov
scas
mov
jmp
sbb
add
lret
repz
vcvttss2si
popa
lret
inc
scas
fwait
or
pop
sub
jae
ss
outsb
mov
pop
jl
pop
push
out
lcall
fsts
sub
adc
movsl
call
repz
pop
sub
loop
je
stos
in
leave
mov
sub
sbbl
les
mov
stos
andb
cmpsb
pop
mov
sub
add
push
push
jge
cwtl
cli
or
push
sti
add
xchg
xchg
pop
inc
je
mov
aam
andl
inc
orl
mov
jae
dec
aad
adc
xchg
inc
mov
cmp
cltd
fwait
xor
cmpsb
sti
xor
cmpsb
pop
lret
clc
pop
xchg
and
popf
mov
jl
add
test
int
jmp
jmp
add
xchg
fldenv
data16
pop
push
mov
test
add
adc
inc
fmull
mov
xchg
fisubrl
data16
std
scas
mov
out
test
push
pop
ret
shl
add
stos
andl
xchg
jb
mov
mov
sbb
adc
imul
inc
jae
mov
xorb
or
std
push
fdivl
mov
jle
cltd
sbb
add
and
cmp
add
jl
into
and
sbb
sub
mov
jb
inc
std
pop
lods
inc
test
stos
jge
rclb
scas
jbe
cmc
scas
and
inc
fdivrs
xchg
cmpsl
jno
dec
cmp
scas
mov
adc
mov
or
adc
mov
xchg
push
iret
pop
jb
insb
insb
jb
in
and
inc
cmp
lahf
stos
mov
dec
cmp
fwait
jnp
dec
in
adc
and
inc
lret
mov
dec
lahf
data16
insb
clc
fidivs
or
cmp
mov
imul
push
movsb
ret
mov
and
jbe
mov
lds
cmp
jle
and
shl
bound
xchg
pop
mov
xchg
mov
stc
mov
add
cmp
nop
xchg
je
mov
lea
fbstp
fidivl
xor
sbb
int3
jne
fiadds
xor
cmpsl
push
and
insb
fistpl
inc
mov
xor
mov
pushf
repz
enter
in
add
inc
in
sub
sti
test
jmp
lret
add
ljmp
faddp
dec
jle
mov
pop
bound
jnp
mov
testb
gs
test
xchg
imul
dec
push
fwait
popf
cltd
xor
adc
lds
shl
push
data16
fisubrl
jmp
sti
xlat
sub
nop
lea
mov
outsb
ret
in
test
xor
faddp
or
inc
fidivrs
cmp
sbb
in
repnz
add
xor
enter
jo
xor
sub
rcrl
popa
cmp
lock
push
jbe
xor
cmp
mov
sbb
inc
in
out
cmc
cld
cmc
dec
pop
rcl
cmp
pop
rol
pop
cmp
sbb
cmc
pop
xor
or
ret
lcall
movsl
push
fsts
mov
sbb
xchg
sbb
and
adc
in
sub
rep
jecxz
daa
or
movsb
out
pusha
mov
rcrl
cmc
mov
push
and
in
sbb
sub
sbb
inc
fsubr
sbb
and
ret
data16
scas
movsl
mov
fsubrl
fstl
insb
push
dec
add
nop
les
subb
mov
sbb
lds
mov
loope
in
aaa
aas
dec
push
and
mov
lods
es
mov
or
mov
mov
add
dec
pop
jne
fisttpl
mov
add
cmp
ss
pop
xor
mov
scas
mov
lods
imul
inc
lret
sbb
andl
lahf
pushf
iret
jecxz
test
stos
xchg
dec
lret
roll
jmp
mov
inc
ret
dec
jnp
out
lds
xorb
vunpckhps
aaa
adc
sub
int3
in
dec
mov
lods
in
xchg
cmp
loop
sbb
je
and
cmpsl
mov
cmp
std
mov
mov
pop
mov
lds
mov
mov
sbb
movsl
xor
xor
call
adc
sar
testb
adc
mov
aaa
lods
cmp
and
cmc
cmpsl
add
push
in
frstor
adc
or
dec
pop
add
pop
sub
loope
cmovo
add
stc
inc
stc
sti
pop
dec
push
popa
jge
outsb
adc
inc
fidivrl
add
jg
jae
out
cmp
push
dec
mov
pusha
mov
xor
sti
mov
mov
jmp
aaa
sahf
mov
enter
sbb
xlat
fs
sub
inc
test
scas
sub
sbb
fstpt
fs
sbb
hlt
push
pop
mov
sbbl
xchg
sub
pop
emms
push
mov
jbe
aaa
test
loopne
add
orl
adc
je
rorb
mov
and
cld
call
push
add
pusha
sbb
fidivs
mov
and
out
xchg
aaa
pop
cmp
icebp
inc
mov
ljmp
pop
popa
xor
imull
push
and
pop
decb
adc
mov
sub
aas
push
mov
movsl
xchg
data16
jl
lods
xchg
pop
sbb
pushf
jmp
movsb
int3
lret
push
insb
in
dec
xor
out
jle
into
lods
or
enter
psubsw
repnz
lods
xor
cmpsl
addr16
insl
mov
or
les
lods
sahf
repz
push
test
add
movsl
push
loop
pop
je
mov
sub
ffreep
and
inc
mov
dec
pop
fisubrl
push
sub
sbb
inc
cmp
cmp
out
lds
sub
mov
int
mov
and
rolb
and
test
test
lret
ss
clc
neg
xor
jl
addr16
sub
mov
push
mov
pop
mov
xor
sbb
cmp
pop
jo
mov
mov
xor
xchg
inc
xor
testl
push
xchg
push
jb
sahf
pop
push
push
test
pop
shl
or
pop
scas
ror
push
dec
adc
adc
sub
movsl
jp
inc
test
push
fsub
mov
cld
ret
inc
xchg
fsubr
jl
xlat
xchg
lret
push
mov
fs
repz
push
mov
pop
lahf
int
loopne
popa
pusha
jno
mov
inc
out
xor
mov
adc
pushf
add
dec
sbb
dec
outsl
int3
ds
push
xor
pop
or
enter
adc
psrld
push
out
xor
inc
adc
jmp
sbb
fs
orl
adc
xchg
in
xchg
mov
pushf
mov
mov
in
sarb
shl
stc
push
shrb
sbb
dec
inc
lods
sub
mov
mov
dec
xchg
sub
jg
std
fcomps
add
cmp
pop
jbe
fistps
xchg
iret
inc
pop
sub
push
int3
and
adc
add
inc
ss
jo
push
out
or
hlt
repz
int
js
movsl
cltd
dec
mov
mov
ret
clc
imul
xchg
jle
pop
pushf
leave
loope
cmc
daa
leave
mov
rcr
sub
jns
sbb
pop
mov
or
push
and
int
push
xor
lds
add
insl
iret
adc
int3
fldcw
pop
cmpsl
daa
or
call
pop
out
mov
data16
jo
pop
faddl
add
js
dec
stos
cli
cmpsb
pop
aaa
xor
shrl
cli
mov
mov
sub
call
test
sbb
jge
shr
pop
sub
mov
loope
shlb
dec
pop
sub
test
rorb
jp,pn
xor
xchg
push
mov
jl
insl
sahf
jmp
push
sub
cmp
mov
lock
pop
hlt
nop
xchg
inc
fs
or
push
out
sbb
inc
loopne
in
in
or
jo
and
sbb
aaa
inc
or
mov
and
clc
add
sbb
stc
sbb
inc
out
jp
jp
in
orb
push
inc
dec
adc
dec
jns
pusha
or
lods
and
xor
mov
xor
movsl
cmc
cli
fwait
lret
add
into
jne
mov
shlb
fimuls
sub
popa
and
pushf
fstpt
cmp
pop
repz
stc
ret
or
movsb
sub
sub
mov
test
bound
movsb
je
dec
aad
jbe
stos
xor
in
js
imul
mov
jae
loope
addr16
test
sbb
jle
adc
psrlq
xchg
mov
cld
cmp
add
and
andl
jp
das
adc
testl
adc
xchg
lret
adc
out
sarl
lahf
xchg
dec
mov
iret
mov
in
aas
push
pop
push
jnp
cmp
pop
sbb
popf
xchg
mov
pop
jns
sbb
pop
adc
roll
mov
sbb
icebp
test
cs
scas
inc
imul
lahf
mov
imul
or
mov
push
push
mulb
movsb
add
icebp
in
lea
xchg
inc
xchg
repz
mov
sahf
push
xchg
fistpl
int3
fwait
test
imul
xchg
xchg
ja
dec
incl
cwtl
in
fisttps
xchg
lahf
int3
cmp
xchg
mov
fnstenv
cmovle
popa
data16
lahf
addb
pop
xor
adc
clc
int3
nop
xchg
xor
cld
arpl
cmpsl
adc
push
mov
test
mov
dec
fdivl
fsubrs
in
or
mov
ret
fldl
enter
stos
jecxz
or
mov
repz
cmp
sbb
sbb
sub
xor
cmpb
repnz
enter
testl
xchg
xor
pushf
gs
insb
test
jnp
xor
push
int3
rcl
pop
aam
mov
push
arpl
xchg
xlat
lcall
cmp
jmp
test
adc
repnz
jbe
loope
sub
mov
mov
jge
out
cmp
fs
int
cmpsl
lock
rorl
xchg
dec
sti
in
lret
rcr
icebp
mov
mov
jae
mov
sarl
pop
data16
ret
lret
scas
adc
jnp
xchg
lods
inc
lret
and
iret
popa
mov
pop
fld
jecxz
and
jp
sahf
mov
ja
sbb
mov
mov
lods
xor
mov
xchg
lret
jp
dec
bound
xor
jmp
data16
push
call
push
call
and
fsts
push
sbb
jne
mov
mov
shl
stos
lds
add
jno
sbb
orl
sub
loop
aad
push
or
sahf
xor
sbb
push
pavgw
xlat
ficoml
mov
data16
push
in
cmp
mov
fs
add
stos
adc
adc
cmp
stos
push
inc
lock
sbb
mov
push
dec
mov
jne
and
popf
xchg
xlat
dec
je
cwtl
xchg
or
sbb
lods
test
decb
jmp
cmp
mov
xchg
imul
arpl
push
popf
ljmp
and
dec
xchg
dec
lcall
scas
push
cmc
andl
insl
cmp
dec
fiadds
sbb
push
rdtsc
push
stos
and
notb
fstpl
and
mov
aam
jb
xor
shll
and
xor
xchg
int3
dec
push
push
and
imul
stos
testl
outsb
push
addr16
out
loope
ds
jns
fcmovb
and
inc
iret
nop
push
add
pop
jae
inc
push
inc
xor
xchg
xchg
inc
dec
pushf
jae
fwait
mov
fldt
add
inc
loopne
test
jbe
scas
leave
dec
js
or
ja
push
adc
stos
mov
mov
mov
push
xchg
aaa
adc
lcall
lea
std
adcb
popa
insl
jno
jg
stc
scas
imul
lds
add
repnz
setne
repnz
ret
sub
xchg
jae
ret
loopne
pop
xchg
scas
rcr
push
pop
sti
pop
in
gs
lret
pop
mov
and
ds
and
lret
sub
push
sbbb
das
inc
inc
adc
dec
clc
popf
xor
xchg
fucomip
or
dec
lahf
das
mov
adc
cmc
or
mov
push
adc
xchg
dec
add
insl
push
push
roll
mov
mov
popa
cmp
inc
cmp
inc
cmp
dec
xchg
jmp
loop
dec
sbb
mov
cld
inc
pop
push
sub
jge
int3
sub
in
int
pop
xor
aas
hlt
cwtl
push
aas
cmp
adc
jecxz
or
xor
jns
orb
inc
xor
push
insl
divb
and
mov
icebp
sbbl
adc
lret
xchg
jp
rorl
jecxz
mov
movsb
cs
aas
and
cmpsl
inc
in
inc
outsl
cmp
jecxz
pushf
dec
xchg
cmp
xlat
inc
loop
scas
xchg
cmpsl
fmul
sbb
cmp
int3
inc
dec
and
xchg
add
addr16
dec
cmp
mov
mov
mov
pop
fs
enter
adc
pop
dec
scas
xchg
dec
pop
jge
jmp
push
shl
shlb
pop
dec
ss
mov
xchg
sub
rcrb
add
push
push
bound
mov
fisttpl
popf
mov
xchg
fcomi
pop
or
out
cli
daa
push
cmp
push
push
pop
shlb
dec
imul
dec
sahf
jbe
add
movsl
sub
addb
push
jns
cld
push
enter
xchg
cmpsb
dec
and
pushf
out
leave
jae
jo
arpl
or
and
adc
mov
push
pop
or
sub
push
mov
dec
mov
sbb
sub
xchg
int
and
fadd
cmp
pop
mov
xor
mov
bound
lods
lock
ja
cltd
adcb
push
notb
arpl
es
and
repnz
insb
push
jnp
ja
pop
int3
js
mov
xchg
adc
push
cmc
push
js
cmp
and
orl
add
aad
cs
xchg
out
or
pop
push
inc
test
cmpsb
jmp
pushf
ss
jge
jle
sbb
mov
mov
sbb
sub
dec
dec
mov
sub
jle
cmpsb
popa
mov
addr16
mov
sahf
cmp
xor
xor
inc
int3
repz
rorb
mov
cs
lea
addb
cmp
imul
add
les
sahf
movsb
push
test
mov
xor
movsl
cs
popa
outsl
out
subb
push
xchg
insl
or
dec
call
pop
fs
xchg
iret
stos
and
aas
and
or
je
enter
push
pop
jno
push
ds
adc
out
aaa
rcll
jae
lret
outsl
mov
hlt
loopne
pop
mov
clc
jp
outsl
dec
in
mov
into
mov
data16
mov
and
cmp
cmp
dec
popf
sbb
pop
fsubrl
inc
jl
aaa
pop
sub
sbb
iret
and
add
mov
lock
sub
push
xor
push
jmp
ljmp
or
cwtl
mov
mov
repnz
inc
loopne
cmp
ret
sbb
arpl
nop
pushf
mov
fsubp
int
cmp
sbb
push
jae
jge
and
mov
and
ja
mov
icebp
add
mov
xchg
xchg
sbb
xchg
aam
add
repz
mulb
xlat
dec
adc
mov
xor
xor
cmp
out
out
leave
dec
enter
lahf
dec
xchg
ret
xchg
in
mov
cmp
push
sbb
cld
or
loop
cmp
out
xor
cld
jo
test
int
ljmp
pop
andb
mov
xchg
jl
adc
pop
test
pop
xor
adc
arpl
or
int
xor
clc
pop
lahf
stos
mov
sub
xchg
in
shll
jg
sub
lahf
fists
les
xchg
outsl
daa
sub
jg
rcrl
jae
sbb
pop
xchg
sub
and
int3
cs
or
fnsetpm(287
mov
repz
push
or
bound
aam
or
call
jg
loope
mov
call
into
pop
xchg
test
movsl
jmp
andb
and
dec
sub
push
adc
mov
sbb
mov
shll
outsl
rolb
ss
pop
clc
out
mov
test
add
je
scas
out
cld
mov
pop
pop
mov
xchg
inc
xchg
sub
in
push
pop
pushf
pop
mov
push
out
and
lret
test
push
cmp
add
dec
pop
xchg
sbb
test
sub
and
jmp
sbb
cmc
xchg
adcl
loope
test
dec
outsl
cmp
adcb
jne
sub
mov
das
cwtl
dec
jnp
bound
fisubl
rcll
adc
data16
imul
mov
jno
inc
mov
pusha
xorl
cmp
mov
ljmp
cmpsl
xchg
shlb
cmp
xlat
test
fisubl
cmc
adc
pop
divb
dec
lods
adc
mov
pop
pop
xchg
out
mov
pop
inc
add
sbb
insb
pushf
lods
je,pt
sbb
das
add
sub
lcall
in
sahf
inc
rcrl
lret
inc
cmp
cmpsl
das
or
gs
lods
rol
inc
mov
out
ds
adc
mov
inc
and
and
pusha
mov
divb
cmp
addr16
mov
add
xor
mov
inc
or
xchg
incb
hlt
lcallw
inc
jae
movsl
mov
inc
add
imul
loopne
sbb
lods
js
in
push
mov
or
adc
mov
sbb
rorb
arpl
lret
add
or
sub
hlt
int3
out
or
js
scas
pop
psubusb
add
int3
aad
xchg
fadds
mov
aad
dec
add
jo
mov
loope
add
add
outsb
ror
into
mov
mov
out
int
mov
sub
cmpl
repz
cmp
outsb
insb
pushf
loopne
into
enter
and
mov
fstl
cld
mov
cmp
jae
xchg
add
pop
mov
xor
sbb
push
roll
lret
shlb
shl
mov
shrb
mov
aaa
xchg
mov
int
and
jno
push
dec
rcll
pop
pop
pushf
add
les
iret
popf
icebp
jo
fisttps
push
stc
int
jmp
in
pop
cmpl
in
dec
sub
mov
andb
and
push
daa
cmpsl
cmc
je
mov
popf
inc
in
ja
fnsave
fs
jne
mov
lea
repnz
das
enter
icebp
dec
imul
rcrb
int
adc
subl
ret
adc
adc
dec
loop
dec
rcll
inc
cmp
clc
push
xor
ficoml
cmc
icebp
lret
sub
push
mov
in
xchg
mov
mov
gs
xor
imul
dec
xor
cs
nop
jle
lahf
mov
xlat
xor
mov
stos
pop
scas
decl
shrb
in
add
xor
xchg
out
xchg
xchg
cmp
jge
cmp
iret
loope
addr16
ret
ret
inc
pop
pop
stc
mov
cs
lods
mov
lahf
insb
mov
pop
mov
ret
xchg
xor
jmp
int3
push
or
shr
fmull
cmp
mov
lea
push
addr16
movb
or
cwtl
mov
js
stc
lea
fistpl
clc
insb
inc
sbb
test
stos
lock
aaa
fnstcw
lods
adc
jge
xor
or
popa
mov
das
test
push
scas
idiv
outsl
inc
cld
xor
mov
fcmovu
dec
repz
test
push
out
mov
jns
pop
sub
fwait
push
sub
sub
mov
cmp
dec
fiaddl
push
or
push
mov
sub
jno
push
ret
mov
xor
aam
inc
jmp
mov
sub
fld
pop
mov
lret
cltd
shl
jbe
out
repz
test
lahf
orl
cli
dec
outsb
push
mov
jl
nop
sub
xor
jp
xchg
jle
les
ret
rorb
mov
mov
mov
lcall
scas
sub
jbe
es
jb
xchg
mov
or
ret
sub
loopne
add
test
cmpsb
repnz
jae
insl
cmp
xor
out
aaa
sbb
and
dec
jb
rcll
dec
or
cltd
shl
dec
lret
mov
test
mov
mov
ds
jp
and
cmp
xor
fsubl
aas
inc
fdivp
xlat
inc
mov
push
jnp
mov
out
add
inc
pop
lods
xchg
es
andb
add
dec
mov
and
stos
mov
push
push
xchg
xchg
lahf
test
idivl
cmp
ljmp
in
mov
adc
roll
push
mov
out
lahf
sbb
les
xchg
adc
add
sarb
mov
mov
pop
daa
mov
ljmp
call
xor
test
pop
pop
dec
sbb
mov
xchg
and
outsb
pushf
mov
add
xor
adc
lret
ja
xchg
int3
dec
and
mov
jmp
and
out
ss
mov
mov
lret
lahf
jb
mov
fs
enter
cmp
inc
dec
addr16
insb
add
push
lods
lods
jno,pt
mov
outsb
js
not
fcomp
sbb
dec
sbb
repnz
pop
mov
lret
xor
outsb
dec
sahf
dec
cmp
outsl
jb
push
jns
out
adc
rcrl
jmp
outsl
sbb
insb
leave
jg
mov
xchg
repz
sub
fstpt
into
nop
jbe
mov
sbb
cmp
xor
repz
pushf
daa
xor
inc
rcrb
imul
or
mov
dec
mov
cmp
test
fs
js
push
mov
fisubrl
xor
adc
xor
cwtl
mov
fcomp
cmpb
xor
into
inc
cs
scas
iret
pop
mov
dec
inc
or
and
out
rol
mov
push
in
mov
loope
leave
pop
lahf
push
dec
xchg
mov
pop
push
lret
lds
enter
pop
movsl
imul
xchg
mov
test
and
add
xchg
mov
rcl
jae
fs
inc
fsubl
movsl
push
pop
inc
loopne
es
fsubr
add
test
lock
push
dec
inc
sub
sti
add
addr16
cmpsb
mov
dec
jge
aaa
lcall
icebp
cwtl
repz
push
xchg
pop
jbe
icebp
inc
inc
pop
mov
pop
cs
pop
js
push
cmp
and
fstpl
lock
enter
push
je
in
inc
inc
mov
dec
mov
mov
lods
lock
decl
pusha
shrl
call
imul
cs
popf
xchg
inc
pop
xchg
loope
fildll
in
push
mov
push
sbb
std
xchg
loopne
jb
jbe
fstl
mov
vmread
inc
push
sbb
xor
movsb
jp
jle
cmp
les
test
sti
and
in
jnp
pusha
push
cmp
dec
ret
xor
into
jg
xlat
in
mov
rol
hlt
fdiv
test
fldt
xor
sbb
dec
pop
and
cmpsl
out
rcrl
and
loopne
outsb
cmpsl
fsubrs
inc
mov
ds
es
insb
xor
push
fwait
jbe
adc
sub
jg
mov
or
pop
push
fmull
adc
pop
or
iret
mov
xor
cmp
pop
imul
mov
test
in
int3
add
xor
xchg
loopne
fdiv
jb
mov
aad
push
mov
popf
adc
mov
shl
test
adc
pop
mov
int3
daa
aam
pop
sub
into
idiv
popa
dec
mov
jmp
rol
mov
xor
push
in
adc
repz
xchg
or
rcrl
or
fsubrs
popa
dec
pop
test
jle
sbb
arpl
xor
mov
inc
lcall
adc
inc
lods
add
cs
pop
inc
jnp
cld
arpl
and
out
inc
pop
cmp
clc
test
enter
push
xchg
xlat
lods
in
xchg
dec
push
sbb
int
and
pop
bound
mov
ss
dec
push
ret
pop
mov
push
and
adc
adc
mov
jae
addr16
nop
loopne
test
mov
cmp
sub
hlt
mov
mov
in
fstpt
mov
mov
shlb
adc
ret
push
adc
adc
mov
push
pop
aas
xor
daa
push
dec
cmp
pop
das
sbb
lods
leave
pop
mov
arpl
adc
pop
aas
out
mov
rolb
loopne
pop
pop
xor
mov
mov
mov
mov
popa
and
mov
xchg
rcrl
pushf
lret
insl
aas
jae
scas
lahf
aas
mov
gs
mov
rcrl
jge
out
xchg
jmp
lods
mov
outsb
insl
shrb
mov
xor
sub
dec
ss
imul
xorl
adc
xchg
mov
fsubrl
push
add
and
ja
jle
rep
xor
xor
inc
fs
xchg
xchg
popa
mov
mov
jmp
pop
sbb
test
vcvtss2sd
orb
push
mov
in
lds
pusha
mov
jl
jns
aas
es
push
push
sbb
jp
call
xor
loop
mov
icebp
xchg
ret
fwait
pop
stos
inc
or
mov
repz
sbb
add
dec
cmp
cmp
rclb
inc
add
inc
mov
enter
sahf
add
hlt
add
xchg
ds
jmp
or
sub
mov
imul
daa
push
mov
lea
aas
lods
mov
dec
sbb
mov
adc
stc
mov
add
sarb
loope
mov
ljmp
push
inc
mov
cltd
jo
dec
gs
mov
mov
or
aaa
cmpb
add
and
pusha
pop
inc
dec
mov
mov
orl
pusha
push
orl
xchg
pop
push
mov
mov
jmp
push
test
mov
push
pop
adc
dec
dec
sbb
xor
frstor
fidivrl
lcall
into
pop
cltd
jbe
test
jmp
lock
jmp
sarl
call
int3
push
jns
in
es
dec
adc
push
pushf
call
pusha
push
jnp
mov
stos
dec
leave
xchg
rcr
adc
shrb
push
dec
int3
mov
pop
cmp
mov
jmp
add
loope
push
xchg
fiadds
mov
inc
jne
push
rolb
push
push
add
shrb
dec
mov
xchg
push
inc
ja
jmp
adc
jecxz
mov
ret
add
mov
lret
in
mov
test
ds
jae
and
pop
xor
inc
xchg
rcrb
movsb
sahf
push
jp
test
enter
or
lret
xor
dec
lahf
pop
int3
iret
icebp
lods
je
jno
lahf
enter
add
rorb
push
push
jecxz
jmp
rcl
cmc
sbb
fmuls
dec
js
in
enter
outsl
push
jae
add
xchg
cmpsb
add
inc
sti
jmp
daa
xor
stc
sbbl
shll
push
push
add
fnstsw
inc
incb
add
test
aas
das
xchg
push
jae
mov
jp
data16
loop
push
or
stos
scas
outsl
push
lds
sub
add
add
adc
cmpsl
addl
sarl
lret
int
push
out
aas
adc
hlt
pop
das
cmc
xlat
outsl
jmp
sbb
hlt
in
add
push
sbb
outsb
mov
inc
mov
xor
leave
or
inc
cmp
je
add
jb
pop
fisttps
or
test
xchg
loopne
xlat
jns
mov
add
out
pop
cmp
push
xchg
cmp
insb
ljmp
test
and
pop
jl
int3
jmp
nop
xchg
lods
sbb
jg
imul
xchg
fmull
add
xorl
insl
hlt
popl
pop
fsubrs
push
cwtl
call
sub
push
and
in
or
imul
popf
sub
popf
lahf
pop
testl
bound
cli
arpl
pop
mov
in
ret
push
or
hlt
or
jle
lret
aaa
pop
sub
and
mov
mov
sarl
inc
mov
add
lret
jl
and
mov
sub
ret
jns
test
mov
dec
mov
popa
es
ljmp
out
xor
cmpsb
scas
mov
xor
cs
mov
lods
into
fldenv
idiv
adc
mov
cli
adcl
outsb
sub
in
dec
fsubr
pop
insl
inc
pop
iret
pusha
fsubrp
jge
lcall
flds
stc
pop
inc
or
fisttpll
mov
adc
adc
popf
fisubl
mov
mov
sub
cmp
xchg
adc
sbb
sub
mov
idivb
sbb
in
aam
sub
mov
aaa
mov
mov
adc
stos
lcall
adc
cli
xchg
jecxz
fstp
jnp
loop
mov
ret
mov
fcompl
lcall
je
or
leave
in
shll
add
lds
xchg
leave
in
fstl
cmp
sbb
call
xlat
aas
mov
sub
inc
mov
push
xchg
add
inc
xor
test
lahf
jp
mov
dec
das
inc
pop
scas
jns
test
ror
imul
dec
stos
push
push
lahf
fs
leave
inc
sub
and
dec
add
pusha
mov
push
mov
or
pop
pop
and
lods
daa
int
movsl
outsb
mov
das
sbb
mov
or
adc
adc
adc
nop
popa
mov
lods
in
jl
adc
lods
fists
icebp
hlt
lds
adc
jmp
movsb
lds
xchg
sti
sbb
push
sbb
hlt
add
jl
cltd
jge
daa
or
sbb
and
mov
xchg
sub
jo
popf
jcxz
daa
addb
inc
or
cmpxchg
fimuls
mov
scas
xor
out
lret
fs
int
push
xlat
mov
aas
cltd
cmpsb
jns
rcll
mov
inc
jge
fstpl
adc
push
adc
jg
cmp
push
shll
cli
xchg
or
push
dec
or
mov
mov
sub
std
pop
lods
sub
loope
dec
daa
jne
je
scas
lret
jne
in
inc
out
test
cmp
fildl
out
cmp
shll
imul
dec
xchg
fisubrl
dec
fwait
sub
or
jo
dec
xchg
ud0
xchg
mov
mov
and
mov
pop
das
xor
jae
or
cmp
xchg
sub
mov
mov
insl
push
jns
add
adc
xorb
inc
ret
loop
sbb
cmp
or
jg
push
andb
jecxz
mov
cld
xor
fwait
rcll
sbb
popf
ret
push
cmpsb
lods
out
adc
fsubl
jle
cmc
xor
outsl
and
mov
insb
cmpsb
xchg
inc
mov
call
cld
push
pop
ljmp
adc
sbb
dec
in
xchg
dec
pop
in
mov
push
inc
jge
sub
imul
xor
jo
cli
mov
inc
testb
ret
iret
push
cmpsb
ffree
popl
push
out
mov
test
mov
jmp
mov
mov
cmp
bnd
ds
mov
es
mov
pop
mov
pop
mov
shll
adc
adc
inc
enter
jecxz
movsb
dec
inc
cmove
sti
lcall
int
mov
xorl
mov
adc
jns
test
aam
mov
test
mov
fstps
xchg
dec
mov
sbb
mov
push
jg
xchg
cmpsb
sti
mov
jnp
push
test
mov
sub
ret
jp
movsl
jno
bound
sub
xchg
shl
or
xchg
push
jmp
jge
into
adc
cli
aam
jecxz
pop
int3
das
cmp
loop
scas
pop
push
xchg
ja
jo
insb
lea
sti
cltd
cmp
call
inc
je
lds
jge
push
pushf
mov
jne
mov
add
jo
push
xchg
insl
lcall
jo
cmpsb
adc
fwait
xchg
fidivrs
push
test
mov
mov
iret
lock
inc
fs
sub
in
dec
aaa
inc
stos
fwait
mov
and
cmpsb
arpl
arpl
mov
sbb
in
mov
xor
movsb
das
aaa
sbb
adcl
out
jecxz
pop
daa
jmp
push
add
jno
clc
repnz
jp
out
push
and
rolb
pop
add
mov
testl
lret
cmp
pop
and
andb
sbb
xor
cmp
mov
xlat
data16
subb
mov
lds
mov
sub
xchg
push
push
add
cmc
iret
xchg
sbb
scas
lds
xchg
imul
lret
add
daa
pop
mov
dec
sbb
scas
call
iret
ret
inc
mov
push
xchg
jbe
lock
fiadds
add
cmp
or
inc
cmp
ja
mov
daa
fs
or
inc
mov
sub
jne
cld
imul
js
ss
and
mov
outsb
mull
and
xor
es
pop
data16
cmpsb
ret
jns
sbb
xchg
gs
cmp
insl
lcall
cmc
jl
movsb
insl
mov
sub
inc
or
sub
jmp
cmp
ds
rorb
ss
nop
into
add
and
push
mov
out
and
xchg
mov
mov
out
ljmp
jp
mov
push
pop
sub
fistpll
fs
or
dec
je
xor
lea
aad
popf
popfw
or
or
loope
fcomip
dec
xor
out
cwtl
cmp
sbb
and
dec
mov
xchg
xor
in
enter
mov
subb
dec
cmp
mov
inc
addr16
std
and
jmp
cld
cld
sti
pop
push
ss
xchg
jno
and
cld
sub
lea
adc
cmpsl
mov
loope
stos
jno,pt
cmp
bound
xchg
out
lret
push
xchg
sbb
aaa
cmpsb
xor
mov
inc
stc
mov
mov
add
sbb
cld
mov
pop
sub
or
rcl
jnp
loope
mov
gs
cmp
lret
mov
mov
jmp
pop
mov
jmp
cmp
aaa
fldl
sahf
es
test
xor
adc
sub
jo
data16
sahf
adc
outsl
jb
mov
cmp
or
lea
or
mov
inc
sahf
mov
add
js
ljmp
cwtl
icebp
adc
test
xchg
in
bound
pushf
ss
fmuls
cmp
and
inc
add
and
mov
xlat
sbb
lret
sbb
aaa
mov
adc
and
xchg
cmp
int
es
daa
adc
sub
rclb
in
mov
ret
fcomps
inc
test
xor
gs
pop
adc
or
dec
jmp
icebp
les
or
jl
aas
mov
ret
dec
inc
xchg
xchg
stos
push
mov
aas
imul
stos
ret
pop
push
lods
pop
push
mov
jbe
pop
dec
jb
jnp
aas
add
pop
roll
ficoms
lock
or
dec
xchg
pop
and
mov
push
or
in
inc
lea
xchg
lods
call
out
scas
out
stos
das
sbb
aad
dec
mov
imul
loopne
sbb
pop
andb
xchg
add
imul
std
movsb
stc
in
ds
adc
pusha
nop
cmp
jle
mov
int3
cmpsl
dec
sub
int
mov
jbe
sub
daa
lods
lock
fsubrl
xlat
dec
imul
dec
fcomi
hlt
pop
fstps
xlat
dec
insl
ret
in
jns
xor
popa
out
outsb
cmp
and
faddl
lahf
bound
inc
fs
push
adc
push
test
fmuls
mov
cmp
sti
push
jl
xchg
insb
jb
loop
loopne,pn
xchg
mov
pop
and
pop
sub
sbb
outsl
sti
test
mov
fldenv
repz
xchg
jno
sti
int3
mov
stc
dec
mov
out
push
add
mov
pop
je
jae
scas
jg
xor
in
lods
mov
pop
jb
aam
andl
lret
stos
xchg
pop
fnstsw
mov
xor
jle
iret
push
pop
sti
incl
mov
call
arpl
pushf
mov
push
jo
insb
icebp
in
pop
rclb
jb
add
jo
xor
xor
mov
push
loopne
push
dec
js
xlat
jb
pop
xchg
gs
dec
int
sbb
and
mov
ret
shl
xlat
pop
cmp
sahf
ljmp
adc
in
sbb
fwait
sbb
test
mov
xchg
xor
adc
dec
bound
fwait
mov
jbe
lret
subl
movsb
jl
out
mov
shll
aaa
mov
push
rclb
jno
fbstp
jp
popa
lret
sbbl
inc
jo
test
sub
scas
dec
pop
xchg
jae
in
xchg
movsb
sbb
arpl
mov
jbe
jno
jmp
dec
sub
jno
cs
or
pop
dec
and
jae
fs
ss
aad
mov
test
xchg
leave
shll
push
inc
mov
shr
stc
lret
sub
lods
push
in
clc
mov
inc
dec
dec
xchg
cmp
stos
loop
jmp
subl
cmp
movsb
call
xor
ffree
movsl
add
adc
jo
mov
jge
push
jnp
jno
jae
xchg
inc
in
lcall
push
int
push
lea
imul
sbb
imul
cld
rcrb
lock
in
fstl
fists
test
fs
into
testb
jle
cld
pop
push
enter
lahf
hlt
cmp
stc
stc
std
inc
je
lret
jns
in
push
and
jl
inc
out
or
pop
cmp
cmpsl
inc
ja
sbb
push
lock
adc
pop
cmpsl
inc
cld
or
jbe
shll
sahf
iret
inc
es
or
inc
dec
add
inc
test
outsl
sub
fwait
mov
cmpsl
cmp
inc
mulb
js
outsb
retw
sbb
ret
xchg
mov
push
adc
int
movq
adc
das
outsb
jae
dec
lock
sbb
jmp
xlat
xchg
mov
mov
sub
test
ficomps
in
xor
fidivs
repz
or
sahf
test
rclb
shll
movsb
lcall
xchg
xchg
jp
push
in
sub
add
pop
testb
and
cmpsl
jb
cmc
dec
insb
add
sbb
mov
jae
or
cmp
pop
xor
pop
mov
xor
sbb
jbe
popa
mov
mov
je
cli
mov
jnp
fisubrs
push
xor
fists
sbb
push
gs
push
jge
sarl
add
cmp
pop
addr16
jne
pop
mov
jmp
pop
arpl
das
pop
filds
dec
push
and
sahf
dec
iret
mov
inc
loop
lea
inc
lahf
xor
hlt
lcall
mov
nop
and
fsubrs
inc
ret
lds
nop
fisttpll
cmp
sub
fmull
mov
dec
and
adc
lret
outsb
push
cmpsl
mov
cmp
add
data16
push
or
fs
xchg
inc
std
ret
or
inc
test
fwait
push
in
adc
test
je
fucomi
arpl
or
cld
sbb
out
ret
aas
push
xor
mov
cmp
imul
mov
je
xchg
xlat
addr16
jecxz
clc
shrb
mov
cmp
test
idivb
dec
arpl
repz
adcb
cmpb
sub
imul
out
push
lret
imul
fstpl
rcll
mov
addr16
in
jae
inc
adc
pop
aas
aam
push
sbb
jnp
push
inc
xor
repz
sbb
xchg
push
popa
inc
jae
jl
rcll
pop
sbb
xor
icebp
inc
or
dec
push
std
call
int3
mov
pop
out
sti
and
nop
pop
push
bound
lcall
int
int
arpl
popa
mov
pop
loopne
ljmp
mov
add
add
mov
dec
xchg
mov
and
or
or
jmp
stos
fdivrl
or
pop
xchg
jge
sub
inc
push
addl
mov
cli
dec
lds
pop
loope
iret
loopne
stc
dec
cmc
lea
mov
mov
and
push
pop
xor
stos
inc
ljmp
movl
mov
xor
cld
and
cmpsb
mov
mov
mov
dec
and
mov
fwait
mov
adc
cli
xor
gs
es
addr16
je
xchg
xor
xor
ljmp
dec
lahf
push
xchg
jne
dec
cmp
and
outsb
mov
in
pop
dec
xor
enter
mov
xor
mov
outsb
mov
xchg
enter
push
das
loop
jno
sbb
arpl
imul
mov
pop
mov
sub
mov
cmp
out
adc
fwait
adc
mov
lahf
cmp
stc
sbb
test
mov
enter
clc
cld
in
pop
ret
push
rcrb
pushl
inc
inc
mov
pop
xor
push
add
or
push
mov
into
sub
loope
test
ret
pusha
sub
cmp
pop
hlt
into
jmp
push
pop
outsl
loopne
lods
xchg
mov
cmc
pop
cmpsl
sarb
jns,pn
sub
popf
pop
xchg
lds
mov
jle
mov
sbb
ret
leave
xor
mov
sarb
cmc
jne
movsl
and
lds
xchg
push
pop
dec
jne
push
add
lret
dec
push
mov
fisubs
inc
xchg
push
mov
int3
mov
push
mov
pop
push
call
pop
xor
cmp
add
nop
sbb
jecxz
jp
mov
sbb
rclb
icebp
insb
shll
pushf
pop
xor
repz
mov
pop
test
into
lret
dec
dec
inc
jl
aad
jge
sub
out
xchg
es
sbb
data16
or
clc
mov
xchg
mov
and
push
sbb
mov
sbb
out
xchg
pusha
scas
out
les
xchg
insb
mov
inc
pushf
jae
sub
ljmp
movsb
jecxz
fnstsw
daa
test
fs
pop
scas
cwtl
jnp
cmpsb
cmpsb
in
cld
jecxz
std
jecxz
mov
jbe
test
mov
cmp
mov
fisubrs
andb
daa
dec
inc
add
cmp
dec
adc
push
scas
jo
xor
in
xchg
add
or
push
ja
xor
popa
ret
stos
data16
sahf
mov
dec
xor
ret
cs
mov
push
sub
push
lods
mov
movsl
shrl
and
jno
and
jle
sub
lea
rorl
enter
jb
mov
inc
iret
jmp
fsubs
dec
and
pop
out
pop
dec
inc
imul
insb
dec
imul
mov
or
xchg
sahf
sub
inc
jge
push
adc
mov
mov
fdivrp
mov
xchg
dec
inc
mov
es
hlt
fsubrl
addb
sub
adc
lahf
pop
push
xorl
fcmovnbe
fadd
pop
sub
mull
outsb
sbb
lahf
rcl
or
sub
push
mov
fdivrs
mov
jns
enter
enter
std
pusha
movsb
test
test
mov
scas
scas
sbb
jae
call
movsl
xorl
mov
sbb
xor
dec
add
mov
test
xchg
mov
jne
test
mov
mov
jnp
cmp
mul
scas
movsb
mov
icebp
push
mov
mov
out
jne
inc
std
ffree
push
shl
in
into
jmp
cmp
adc
xchg
mov
xlat
je
adc
in
out
insl
xchg
jle
test
fs
sahf
scas
pop
gs
clc
mov
jecxz
ss
sub
es
pop
into
adc
cmp
jbe
or
nop
mov
sahf
shll
ret
fadds
mov
outsl
jb
push
jmp
repz
pushl
outsb
testb
pop
shll
out
cmpsl
or
jp
popa
mov
shr
pop
xchg
xchg
mov
dec
pop
inc
outsl
in
cmovne
sbb
iret
loopne
dec
sbb
sar
cld
or
jns
jle
movsl
xchg
cmc
pop
iret
and
movsl
xlat
mov
test
scas
sbb
clc
cwtl
ret
push
fwait
push
roll
dec
pextrw
adc
push
int
movsb
push
stc
or
clc
xor
aam
adc
test
and
or
mov
repnz
aaa
push
jmp
sub
or
xor
cmpsl
adc
call
mulb
out
jo
scas
mov
cmp
call
mov
cmpsw
jo
cmpsb
xchg
inc
in
insl
push
out
xor
jp
jo
inc
sub
jns
in
arpl
je
sbb
lret
cmp
inc
outsl
aaa
int3
pushw
popl
movsb
pop
push
dec
in
push
fisttps
lret
test
push
mov
fwait
int
adc
mov
cmp
ficomps
andb
or
push
sbb
dec
les
test
add
sbb
inc
dec
in
push
xchg
lret
inc
stos
push
leave
rcrb
inc
stos
and
test
cwtl
pop
sbb
icebp
mov
ds
cmp
xor
push
cmp
lret
fstpt
pop
call
cmpsb
insb
fdiv
test
sub
jecxz
out
aas
xchg
pop
out
xor
pop
jns
jmp
rcll
jl
sub
sub
add
pop
and
adc
iret
sti
icebp
and
jns
mov
mov
fldl
xlat
jp
adc
lret
push
dec
out
mov
cmp
push
addr16
je
pop
xchg
outsb
pop
jae
push
int
out
nop
addr16
cmpsb
and
adc
sbb
ljmp
aas
pop
test
out
mov
das
test
and
and
pandn
sbb
cld
pop
mov
and
call
lcall
jl
pop
sbb
push
mov
cmp
out
mov
nop
adc
movsl
hlt
dec
insb
outsb
sti
or
in
pop
out
jns
rcl
inc
add
lcall
mov
leave
insl
icebp
bound
and
inc
jecxz
or
mov
insl
push
stos
and
mov
or
adc
sbb
inc
iret
xor
out
pop
push
mov
iret
imul
jle
jle
mov
dec
lret
mov
outsb
clc
lea
mov
pop
std
arpl
mov
adc
push
es
xor
or
gs
out
test
sti
pop
jle
stc
shrb
pop
pop
sub
lds
jp
and
test
push
insb
adc
jg
dec
sbb
pop
or
jle
or
cmpsb
sar
mov
jb
and
cmpb
call
fnstenv
cmp
jmp
mov
sbb
test
loopne
and
mov
lods
and
int3
stos
push
outsl
lcall
mov
fldt
push
orl
sub
jbe
sbb
dec
dec
popa
and
insb
and
dec
aam
cmp
cld
or
stos
scas
adc
jae
mov
and
aaa
lcall
cmp
xor
nop
and
flds
test
pusha
pop
adc
mov
pop
inc
push
icebp
stos
inc
in
pusha
add
addr16
loope
push
out
fs
jge
sbb
out
sub
stc
frstor
adc
or
into
jl
xchg
jp
iret
stos
das
mov
into
adc
xchg
adc
sbb
push
dec
ficomps
push
sarb
cmpb
cs
popa
cmp
repnz
aas
push
test
add
popa
dec
sbb
pop
push
mov
fstps
ja
jmp
fldenv
dec
dec
jo
punpckldq
es
je
lds
add
mov
aad
push
les
lret
leave
jmp
leave
insl
xlat
movsb
mov
aaa
xor
scas
mov
cltd
shll
mov
xor
cmp
mov
call
jnp
push
aas
lock
pop
pop
jge
aad
dec
pop
lods
cli
sar
xchg
cmp
xchg
jo
xor
cwtl
pop
lahf
bound
sub
addr16
rcrl
sahf
mov
loop
shrb
mov
sub
pop
sar
pop
jecxz
aad
sarb
in
sub
iret
in
div
pusha
ss
jle
psraw
and
push
and
icebp
imul
xchg
sahf
push
inc
cmp
jmp
sub
aad
fdivrl
add
stos
pusha
adc
sbb
lock
xchg
mov
inc
mov
xlat
xchg
fwait
jecxz
sub
int3
pop
and
in
data16
fldl
jnp
xchg
aaa
dec
pop
xchg
bound
jle
xchg
xchg
inc
jmp
jl
add
xchg
sub
mov
ret
xchg
cwtl
clc
inc
cmp
lds
out
push
lods
inc
xchg
pop
adcb
sbbl
xchg
pop
aad
push
dec
or
sbb
rcr
inc
sub
xchg
loope
push
stc
or
mov
ret
or
mov
nop
mov
add
or
cld
ficoml
lock
stos
jne
jbe
inc
ljmp
fisubs
push
mov
sar
xor
push
adc
inc
cmp
movsl
mov
pusha
fwait
add
out
xlat
push
mov
push
out
inc
sbb
in
add
pop
ja
jne
pop
movsl
jnp
int
ret
orl
mov
movsb
cmp
mov
push
cwtl
dec
not
pop
cmp
cmpsl
lret
mov
fsubr
std
or
lret
repnz
jae
add
push
rorl
jmp
in
push
lea
ret
dec
xchg
pusha
or
pop
aad
mov
loop
lret
mov
cwtl
test
pusha
xchg
jnp
inc
xchg
sbb
inc
xor
adc
inc
jmp
or
add
jle
sub
cld
mov
lret
pop
pusha
movsl
pop
aas
lds
je
push
pop
adc
loop
jmp
setg
ret
xchg
lcall
jp
or
insl
in
imul
stc
fnsave
out
movsb
add
inc
jne
aaa
sub
insl
imull
dec
or
dec
sbb
out
and
hlt
push
cmp
jecxz
loope
pushf
sbb
and
loope
mov
pushf
mov
daa
imul
mov
out
ror
dec
dec
dec
dec
fisttps
daa
daa
xor
mov
test
js
push
inc
repz
decb
sub
fbstp
mov
jbe
xor
ljmp
cmp
movsl
ror
lret
mov
dec
xor
aas
inc
in
or
data16
cmp
daa
push
in
and
pop
loopne
mov
add
and
jge
inc
dec
inc
int
cmpsb
push
ret
jbe
sbb
cmp
test
add
aaa
out
shll
scas
mov
lahf
je
in
into
pop
into
mov
jo
xor
mov
mov
pop
test
push
in
jne
sub
push
shrb
stos
or
inc
mov
in
or
test
xor
inc
sti
iret
add
dec
ja
fsubr
mov
mov
aad
popa
xchg
test
cmova
cs
pushf
out
rorb
sub
inc
sarb
shlb
sub
pop
jne
dec
aam
push
push
cs
int
xor
iret
jl
fwait
inc
pop
divb
push
sub
dec
and
shll
shlb
sahf
test
movsb
push
xor
inc
cmp
mov
loope
in
sbb
sbb
mov
pop
xchg
jo
lods
aaa
dec
xor
dec
cli
add
mov
jb
or
frstor
adc
sub
loopne
movsb
push
sti
xor
xchg
mov
cli
sarl
or
push
push
mov
arpl
cmp
incb
pushf
gs
or
lret
lock
pop
mov
mov
popf
popf
cmp
repnz
aad
mov
jmp
aam
adc
test
lahf
dec
aad
push
mov
xchg
add
daa
fcoml
loope
popf
cwtl
push
fs
in
cmp
xchg
hlt
mov
and
movsb
dec
xchg
iret
xchg
into
xchg
popa
pop
xchg
mov
dec
sub
cmp
mov
stos
shrl
dec
add
scas
jnp
stos
sub
mov
aad
dec
push
stc
dec
imulb
fstps
fs
mov
in
bound
insb
insb
mov
mov
push
cmp
add
out
pop
bound
stos
repnz
lods
cli
mov
sub
pusha
sarb
jmp
pusha
pop
pop
loope
mov
push
xchg
out
ret
fldl
xchg
pop
and
add
mov
adc
pusha
jmp
popf
imul
fsubs
mov
adc
scas
xchg
push
cld
add
loopne
imul
inc
jb
xchg
or
cmp
xor
in
pushf
shll
loopne
addr16
sub
jno
xchg
inc
add
push
xchg
xor
jo
jbe
mov
xlat
cmp
inc
push
xor
sarb
adc
push
sbb
push
sub
or
mov
aad
fidivrl
pop
movsb
dec
aam
cmp
daa
fwait
add
lahf
jmp
push
inc
cwtl
mov
add
cwtl
sarb
ljmp
sub
outsl
xchg
add
mov
mov
jns
sbb
inc
iret
rcr
ret
lcall
mov
jbe
sub
mov
and
add
xlat
add
sbb
insb
cmpsl
dec
ret
je
add
mov
test
aam
das
and
std
add
push
cmpsl
jmp
pop
sub
jge
add
adc
in
xchg
in
dec
jge
push
and
repz
fisttpl
sub
sbb
popf
mov
stos
ljmp
stos
call
mov
mov
and
xchg
and
cmpsl
vsqrtsd
lock
orl
xor
ja
jb
divl
ficompl
xchg
pop
and
scas
cmc
jb
sub
pop
push
jbe
fisttpl
cs
add
pusha
sbbb
sbb
imulb
jg
jae
push
mov
push
mov
cltd
movsl
fadds
dec
dec
sbb
sub
mov
inc
stos
es
xor
xchg
rolb
cld
pop
aaa
in
outsl
aas
lret
mov
data16
mov
sbb
fwait
insl
test
xchg
hlt
push
scas
push
inc
notl
xor
out
dec
xchg
mov
adcb
mov
lahf
shll
ret
jnp
mov
cmp
dec
lea
lds
shr
sub
add
test
je
vpackssdw
mov
jg
mov
pop
gs
mov
in
in
nop
mov
inc
push
sahf
and
fildl
fwait
jmp
mov
subb
mov
andb
dec
arpl
xlat
lret
sbb
movsl
or
shrb
in
sub
cmp
fistpll
cmpsl
aam
ljmp
inc
jl
pop
jle
mov
sbbl
add
fisubrl
hlt
nop
mov
int
insl
pop
xchg
arpl
mov
sub
sub
mov
insb
mov
cld
jge
mov
mov
mov
nop
outsl
shll
imul
fwait
int3
imul
mov
xchg
ja
test
dec
jmp
movsl
push
cmp
scas
push
xor
inc
pop
scas
mov
pop
and
dec
nop
ret
xchg
sub
gs
lods
push
dec
sub
pop
sbb
mov
addl
and
push
pop
mov
in
xor
mov
shrl
xchg
sub
icebp
lock
push
fcmovne
fmuls
pushf
outsl
loopne
nop
pop
lods
mov
sbbb
fwait
sub
clc
insl
sbb
push
fistpll
mov
xchg
std
inc
add
fidivs
jbe
rclb
leave
rorl
test
xor
cs
lret
jno
adc
fisubs
dec
je
jbe
adc
sub
gs
fwait
adc
mov
ds
rcrl
mov
les
jns
ja
fst
into
jp
jnp
stc
test
imul
sub
jbe
xor
stos
adc
and
push
xorb
and
sbb
fnstsw
lcall
fld
dec
xchg
fisubrl
les
lods
pmulhuw
mov
jg
ret
das
rcll
addb
test
push
or
mov
scas
fidivrl
stc
leave
scas
mov
sub
pusha
hlt
inc
insb
adc
mov
sar
dec
scas
push
andb
xor
jbe
movsb
add
data16
outsl
lock
fists
cli
aam
aaa
aaa
fnstcw
mov
mov
not
shlb
jns
in
mov
inc
pop
cmp
test
mov
scas
push
addr16
addb
xlat
inc
rcl
add
clc
std
int3
cmp
imulb
stos
add
cmc
cmp
loop
loope
outsb
sbb
add
xchg
pop
std
mov
pop
nop
mov
and
ret
fwait
mov
cmp
sub
iret
lods
not
add
dec
mov
sub
xor
pop
lret
insl
cwtl
bound
inc
in
cwtl
aad
aas
adcl
jne
int3
pop
xchg
addr16
cs
jp
cmp
cli
and
mov
popa
pop
outsb
in
jp
ret
stos
aas
sub
xchg
jnp
fdivrs
test
icebp
xchg
fs
xor
fimull
push
sub
cmp
ret
cmpsb
into
inc
into
and
mov
sti
loopne
pushf
les
aad
test
sbb
inc
mov
mov
fucomi
jmp
stos
ljmp
mov
stos
sub
mov
fstl
stos
jns
xchg
jo
addr16
sbb
arpl
push
dec
ja
dec
add
in
sbb
std
or
std
cmp
ss
dec
add
std
push
xlat
sahf
mov
push
bound
bound
je
aaa
fnsave
push
sub
mov
rcrb
lock
rcll
sbb
mov
inc
fadds
and
dec
jnp
data16
xor
sbb
lcall
movsl
sahf
jns
inc
test
lret
cmpsl
cld
push
in
sbb
mov
cmp
js
push
adc
jecxz
mov
xor
mov
inc
cmpsl
dec
sub
sub
push
lea
lods
mov
mov
imul
cmc
xor
fs
sub
mov
hlt
out
and
cltd
cmp
ljmp
sub
sbb
test
iret
hlt
lret
ror
icebp
test
lcall
cmpsl
pop
and
and
in
fs
mov
jge
out
test
ja
sub
sbb
bound
pusha
stos
add
mov
notl
mov
data16
dec
out
subw
popf
pop
xlat
sbb
pop
inc
jb
sbbb
fstps
dec
add
aaa
mov
rclb
std
dec
sub
and
loop
add
mov
add
clc
xchg
xchg
adcl
mov
faddp
in
test
pop
mov
lcall
cmpl
jl
call
jecxz
out
or
shlb
rolb
popa
xor
cld
mov
mov
mov
ljmp
testl
add
es
and
shlb
or
mov
out
push
pop
sti
insl
pop
cwtl
popf
test
int
sahf
out
and
inc
mov
into
pushf
mov
jle
mov
add
mov
loopne
jge
xor
cli
das
out
imul
mov
push
cmp
arpl
cmp
stos
ljmp
mov
sub
loope
mov
xchg
fcoms
xor
or
push
adc
push
cwtl
mov
scas
cmp
xchg
add
mov
sbb
loop
das
repnz
sbbb
in
js
adc
shll
dec
jecxz
or
dec
repz
inc
push
repz
lret
sub
or
pop
pop
pop
std
jmp
pop
push
sub
jne
and
xchg
cmc
ja
loopne
push
cltd
subb
dec
jle
sub
outsl
iret
dec
add
popa
mov
test
push
xor
cmp
insb
mov
xor
out
daa
cmp
jns
dec
and
or
inc
xor
jp
pusha
xor
pop
pop
pushf
jnp
cli
push
ja
es
fsubl
cmp
lret
dec
adc
xor
ret
js
adc
aaa
mov
iret
pop
xor
add
scas
xchg
call
fs
mov
movsb
adc
xchg
sub
xor
inc
xchg
cmp
pop
pusha
imul
fs
pop
push
cmpsl
out
push
pop
je
shrb
mov
fdivrp
push
aam
cmp
jae
mov
cmp
inc
fpatan
addb
popf
shll
scas
pop
ja
icebp
and
mov
adc
xchg
jb
stc
jns
mov
mov
xor
and
gs
cmp
sub
mov
jo
popf
insl
gs
jo
test
aad
in
sti
les
dec
sti
aad
push
jae
std
xchg
xor
xchg
add
pop
out
mov
mov
pop
jo
dec
aas
aad
mov
cwtl
pop
push
fidivs
sub
popa
mov
xchg
dec
and
inc
or
icebp
lock
sub
or
in
out
mov
enter
cmpsb
push
xor
dec
icebp
movsl
loop
add
dec
aad
fcoms
cli
mov
lcall
ds
mov
mov
shl
pop
es
fnstcw
bound
inc
push
test
in
push
mov
negl
stos
dec
or
fcoms
jl
out
stc
xchg
jb
rclb
mov
daa
jp
in
pop
hlt
in
inc
push
adc
or
jp
lcall
jl
divl
jp
popa
xchg
sub
jo
lods
xor
arpl
wbinvd
aaa
inc
cmp
mov
fiadds
test
dec
add
xor
ss
jne
xchg
push
fisubrl
cmp
jno
shrl
and
push
jmp
and
cmp
das
in
adc
loope
sub
test
ja
cmpsl
hlt
cmp
ljmp
ljmp
cli
pop
add
test
mov
fildl
adc
filds
adc
das
in
dec
mov
inc
in
sub
dec
jnp
call
aas
mov
ljmp
lock
dec
cli
sarl
out
cli
push
xchg
mov
movsl
sub
cmp
and
mov
pushf
dec
mov
push
push
enter
stc
in
scas
cmp
lret
fisubrs
pop
loopne
inc
sub
jne
mov
stos
cmpl
stos
in
popa
add
cli
mulb
jo
mov
notb
js
lcall
mov
dec
imul
bound
mov
insb
xchg
int
cmpsl
aad
inc
adc
lds
pop
pop
lcall
insl
adc
call
call
jle
push
pop
jle
sbb
xchg
mov
jne,pt
cmp
dec
movsl
sbb
out
loope
popa
dec
pop
push
jmp
mov
popa
cmp
mov
inc
sub
inc
iret
pop
pop
iret
and
sbb
or
jns
adc
es
ss
and
xchg
and
inc
or
stos
sub
sbb
fnstenv
mov
lods
dec
adc
in
ljmp
sti
xchg
or
repz
lock
adcb
daa
inc
mov
mov
icebp
insb
xchg
imul
fs
mov
fbstp
mov
icebp
stos
cmp
leave
ret
inc
gs
cltd
imul
stos
and
adc
or
std
outsb
std
dec
sarl
jge
dec
sahf
push
and
add
ljmp
add
stos
mov
es
mov
loopne
je
xchg
outsb
cltd
jb
movsl
jns
xchg
pushf
or
jl
mov
dec
add
inc
jne
arpl
scas
icebp
push
ja
sahf
pop
xchg
cmp
mov
scas
loop
mov
data16
adc
popa
pop
insb
add
xchg
adc
pusha
pop
sti
cs
call
dec
jle
dec
sub
es
sub
cmp
or
mov
aad
inc
mull
outsl
push
imul
std
adc
and
push
add
repnz
clc
aaa
pop
pop
rorl
jo
ss
scas
fdivrs
adcl
pop
test
inc
and
xchg
adc
jne
adc
and
cs
into
lods
add
jmp
mov
or
sub
orl
cs
mov
inc
cmp
xlat
mov
xchg
ljmp
mov
popf
pusha
push
pop
or
ret
clc
and
inc
push
mov
pop
xor
mov
mov
pop
fs
shlb
dec
push
int
movsb
push
rclb
mov
pusha
sbb
js
les
add
test
add
imul
jp
pop
xchg
jmp
and
bound
pop
mov
insb
adc
mov
mov
mov
stos
popa
inc
stos
stos
icebp
inc
iret
stos
imul
dec
test
rorb
jo
stos
dec
in
hlt
or
roll
adc
dec
or
mov
imul
lds
data16
ret
mov
aaa
loopne
cmp
cld
repz
pushl
push
outsb
xlat
cld
push
pop
scas
xlat
xor
ror
cmpsl
push
lods
cmpsl
aad
sbb
xchg
cwtl
out
mov
inc
push
push
lahf
or
mov
add
jbe
stos
add
in
lcall
jp
inc
hlt
mov
int3
dec
sti
or
adc
inc
call
hlt
push
cs
cmpsl
push
lret
fisubrl
addr16
xchg
leave
outsl
imul
or
xchg
sbb
stos
push
ljmp
inc
scas
lahf
mov
adc
push
mov
repnz
test
pusha
aad
push
mov
xchg
cmpsl
pop
js
push
jnp
addb
in
dec
mov
and
lea
cmpl
pop
pop
rcr
cs
cld
pop
and
cmp
aaa
test
or
push
divl
mov
aas
ss
test
inc
cmp
insb
je
jae
adc
lock
mov
sub
jle
shr
leave
cmp
mov
in
xchg
xchg
sbb
lods
jne
add
push
xchg
bound
cmp
loopne
jge
sbb
fs
cmpsb
xor
pusha
push
fdiv
idivl
ficompl
push
cmpsl
imul
insb
jno
dec
sbb
sahf
sbb
stos
leave
push
aas
push
pop
cmp
fmull
inc
jge
shlb
fldl
mov
rcrl
into
clc
mov
lahf
ljmp
addb
jle
xchg
mov
hlt
ljmp
push
pop
pop
lret
jbe
je
cmp
mov
out
int3
testl
sbb
jecxz
pop
add
int3
pushf
repz
or
in
xchg
pop
mov
mov
dec
sub
mov
mov
repz
int
mov
inc
jae
jne
pop
dec
mov
xchg
jo
lock
sbb
xchg
cs
call
fidivrl
mov
movsl
and
xorb
sbb
mov
loop
cmp
aaa
jbe
adc
std
inc
inc
out
xchg
pusha
add
push
inc
push
mov
adc
ds
fldpi
das
pop
stos
pop
push
push
fistpl
pop
mov
cmp
mov
repz
or
jl
xchg
inc
hlt
enter
xchg
xor
sbb
or
mov
imul
int
cmp
js
std
dec
in
add
movsb
es
mov
mov
lds
repnz
jnp,pn
loop
fs
imul
sbb
insl
cmp
mov
int
das
add
and
ja
dec
push
jmp
fwait
js
pop
or
jae
cltd
inc
mov
test
sbb
dec
inc
mov
sub
lcall
mov
pop
notb
lds
cwtl
inc
mov
sbb
sbb
outsl
mov
mov
fcomi
adc
push
sub
xchg
leave
and
ret
fidivrl
jo
xchg
sti
sbb
out
inc
insb
mov
mov
inc
pop
cmpl
dec
pushf
xor
pop
add
cmpsl
mov
mov
test
xchg
pop
lret
inc
xchg
imul
call
arpl
adc
stc
jne
icebp
mov
sbb
jl
adc
stos
sub
aad
insb
push
jae
inc
xor
add
xchg
xor
repz
pop
xlat
mov
inc
dec
addb
sub
hlt
hlt
testb
push
fldt
in
rclb
pop
xor
pop
dec
push
and
jl
or
or
inc
in
inc
seto
faddl
mov
mov
xchg
aam
sti
push
mov
imul
inc
dec
pop
rolb
cmp
or
in
sbb
jae
loop
sub
addr16
loope
aad
loopne
push
or
xor
jle
in
mov
pop
adc
stos
mov
or
or
mov
push
in
pushf
pop
mov
and
inc
test
adc
xchg
in
sarb
inc
out
adc
and
out
xor
add
jp
loop
pop
pushf
xchg
add
mov
leave
sub
sub
fldcw
dec
push
jns
fs
pop
adc
xchg
mov
jbe
je
pop
push
jge
mov
inc
nop
push
lahf
sbb
sub
adc
push
sbb
or
mov
mov
xor
mov
sub
and
pop
outsl
pop
dec
dec
hlt
sub
and
loopne
cmp
movsl
mov
cwtl
mov
lret
sbb
pushl
pop
mov
jae
cmp
xchg
xchg
jnp
lods
imul
mov
inc
mov
dec
lods
pop
enter
adc
mov
push
pop
sub
add
xor
das
iret
mov
mov
in
es
dec
mov
inc
es
inc
vpmulhw
bound
pop
inc
xchg
and
mov
adc
mov
cmc
mov
sbb
cs
mov
cmpsl
aam
repz
pop
push
fadds
xor
xor
das
inc
ds
xchg
dec
inc
push
cmc
lcall
mov
je
daa
adc
fwait
cmp
stc
jmp
mov
outsb
xor
mov
test
xchg
pushf
adc
clc
jb
mov
lods
lahf
inc
mov
sbb
mov
push
popa
dec
dec
sbb
add
add
inc
sbb
xor
add
jg
ljmp
pusha
mov
aam
data16
jmp
roll
xchg
out
mov
sbb
hlt
xchg
lods
inc
lahf
imul
pusha
out
ja
fnstenv
adc
cmpsl
sbb
adc
xor
lcall
movsb
in
inc
jnp
dec
fbstp
icebp
and
cld
lret
and
arpl
in
xor
mov
or
jg
lcall
pop
jno
arpl
mov
mov
pop
je
adc
fisubrl
push
scas
push
cmp
sbb
xor
data16
jnp
sar
sbb
pop
and
je
add
movsl
lods
int3
pop
xchg
adc
test
mov
std
pop
sub
ljmp
mov
adc
jb
roll
stos
push
pop
jle
jle
or
xchg
cmp
jp
add
pop
lods
mull
mov
add
and
fwait
punpckldq
mov
sub
xor
pop
adc
divb
mov
mov
cmp
mov
cmp
je
jne
inc
adc
and
add
es
orl
daa
inc
int
lcall
push
mov
cmc
clc
jl
add
xchg
fs
mov
push
cwtl
pop
stc
rolb
cmp
xchg
push
sbb
xor
insl
es
and
int
pop
cmpsb
adc
cmp
push
sti
ret
aam
rcrl
jp
cwtl
jecxz
imul
idiv
add
mov
mov
icebp
jbe
iret
mov
fucom
inc
xchg
xor
imul
test
mov
xchg
mov
cmp
pop
cmp
push
push
cmp
imull
addr16
xchg
sbb
mov
rolb
cmpsb
scas
xchg
inc
jge
jns
into
arpl
test
mov
mov
js
sbb
inc
jno
add
pop
jbe,pt
sub
adc
loope
daa
cli
sbb
mov
outsl
jle
cmpsb
xor
shlb
mov
lret
ret
pushf
bound
hlt
dec
or
mov
loop
adc
push
gs
ror
test
call
push
jb
sbb
add
ret
push
fstp
push
cli
mov
testl
dec
and
or
pop
jge
inc
mov
inc
sub
out
xor
fcoms
cli
lahf
pushf
jge
rclb
outsb
jmp
push
xchg
cwtl
sub
call
ret
fdivrs
repnz
inc
hlt
fidivrs
mov
adc
mov
mov
jnp
call
pop
nop
xchg
push
outsb
push
adc
adcl
dec
jmp
mov
pop
in
rclb
ljmp
cmpsb
adc
cmovle
popa
jp
insb
mov
mov
sub
pushf
aad
lock
sbb
mov
stos
lock
and
subb
shr
jo
inc
insl
es
cs
adc
cwtl
inc
mov
xor
xchg
movsb
xchg
lret
push
xchg
xchg
mov
or
in
sub
out
mov
adc
lods
dec
add
cmp
sbb
fiaddl
push
mov
add
call
mov
loopne
push
jl
add
ficomps
loop
or
inc
dec
es
sub
mov
dec
cmp
pop
jb
push
mov
push
repz
lahf
sbb
es
inc
sub
outsl
mov
das
push
out
ljmp
mov
test
dec
xor
inc
mov
addl
icebp
inc
sbb
mov
pop
je
pop
mov
push
in
call
dec
pop
dec
lds
sti
ds
add
rcrb
jo
test
and
mov
jns
scas
xchg
insb
xchg
fsubrs
imul
in
mov
inc
push
cmp
out
nop
mov
fwait
icebp
mov
xor
mov
imulb
lds
jp
cwtl
ljmp
das
inc
xor
xchg
dec
jne
ljmp
out
mov
pop
out
lea
mov
xor
dec
std
dec
scas
inc
cmc
mov
lret
rolb
dec
rolb
xchg
sub
xchg
ss
lock
ja
sbb
mov
xchg
insb
mov
movsl
cltd
or
sub
pop
test
test
js
mov
jp
hlt
test
add
sub
push
test
sbb
mov
xchg
add
icebp
rclb
arpl
rclb
ret
push
loopne
jae
outsb
dec
pop
aam
pop
push
cmovnp
test
cmpb
push
sub
lods
sub
test
repnz
xchg
decl
push
bound
gs
adc
mov
cmp
pop
fmul
push
xor
adc
sahf
into
pop
pop
jns
mov
push
fst
repz
jae
pushf
add
pop
mov
mov
outsb
pcmpgtd
ret
outsl
mov
xlat
dec
or
stos
sbb
mov
dec
loope
lcall
jne
insb
mov
dec
jns
lret
jmp
fninit
fwait
orb
lea
adc
xor
icebp
mov
xor
mov
cli
mov
lcall
std
xchg
pushf
mov
inc
out
cltd
clc
sbb
call
jl
in
mov
shrl
lea
icebp
repnz
cmpb
mov
lahf
popf
fmull
aam
clc
mov
push
es
cmpsb
push
jno
mov
mov
mov
sti
pop
lods
das
mov
repz
loopne
insl
xchg
es
sub
imul
sub
sub
pop
adc
mov
adc
inc
aaa
xchg
push
mov
lock
jb
mov
mov
adc
push
loop
leave
pusha
adc
push
sbb
fstps
scas
cmp
mov
sbb
out
jnp
adc
jle
push
fdivs
inc
pop
cmp
inc
push
dec
push
mov
or
in
push
jp
out
and
pop
dec
jne
jns
lret
add
pop
sub
imulb
inc
inc
outsb
cmp
mov
pop
push
out
mov
xor
fnstcw
fnstsw
mov
icebp
mov
xor
mov
imul
or
push
jnp
cltd
faddp
mov
lret
pop
mov
mov
mov
jbe
push
xlat
xchg
adc
sbbb
mov
testb
and
imul
push
cmp
sbb
dec
sbbb
push
int3
mov
popa
imul
sti
jmp
pop
adc
add
inc
push
dec
testl
outsb
pop
ds
xor
mov
adc
push
in
in
out
sbb
iret
adc
mov
ljmp
inc
or
cltd
lret
scas
xchg
pop
testl
inc
and
add
scas
shlb
orl
call
and
dec
mov
sub
sub
insb
das
jbe
add
out
fwait
lock
fdivl
mov
mov
mov
inc
add
out
pop
cmp
outsl
or
int3
les
dec
and
push
fbld
nop
push
add
mov
stos
xor
mov
imul
insb
xorl
rclb
lcall
jle
scas
cmpb
mov
rclb
mov
std
add
sub
mov
stos
adc
fnstcw
push
cmp
push
sbb
and
push
xor
mov
repnz
test
pop
lret
mov
daa
mov
xorl
outsb
xor
mov
xor
lock
addr16
js
arpl
rcl
addb
mov
sbb
sarl
lcall
dec
stos
xor
xor
lods
jo
xor
in
or
jge
fimuls
mov
test
lds
and
imul
mov
scas
scas
jns
je
xchg
cmp
jae
int3
fstl
aam
loopne
fld
shr
pop
div
mov
notb
aad
or
pop
das
jmp
aad
xchg
mov
dec
lahf
mov
ljmp
sbb
or
jl
jo
mov
sub
push
jg
in
mov
mov
mov
xchg
jg
daa
scas
sbb
cld
repz
cmc
movsb
dec
sub
mov
lock
pop
push
pop
pop
pop
inc
orb
cld
mov
mov
jl
push
pushf
mov
bound
jmp
sbb
lds
sbb
icebp
xor
lock
out
mov
inc
inc
loope
xchg
xor
push
stos
push
lods
and
pop
mov
dec
pop
sub
add
add
cmpb
sub
scas
dec
lea
movmskps
add
dec
scas
out
pop
adc
pop
xchg
insl
xor
push
pop
mov
mov
rorb
dec
outsl
fs
pop
aad
xchg
loop
or
cmc
scas
pop
mov
test
in
mov
out
inc
cmp
and
out
stos
andb
xchg
push
movsl
mov
adc
cmp
jo
movsb
jbe
test
rcrb
call
addr16
je
loope
cmp
mov
ret
lahf
cmpsb
cltd
cwtl
xlat
nop
ljmp
cmp
and
insb
lcall
jl
ds
in
sub
or
popf
jbe
insl
xor
sbb
cld
mov
std
loope
dec
test
pop
push
mov
divb
jmp
jmp
subb
or
mov
outsb
pop
int3
ljmp
in
mov
jl
or
adc
popa
fucomp
cwtl
cwtl
cmpsb
fistpll
inc
sub
or
xchg
les
push
shll
mov
mov
aaa
adc
pop
icebp
or
inc
sahf
nop
pop
jns
inc
adc
loopne
mov
pop
iret
cwtl
mov
movsb
pop
inc
fs
cwtl
sahf
jns
in
push
into
lods
mov
push
js
add
imul
movsl
cmp
shrb
xlat
mov
add
xor
sbb
outsl
into
add
or
dec
repnz
ficoml
xchg
xchg
clc
inc
jno
mov
bound
xlat
in
push
outsl
fildl
popf
add
xchg
les
aaa
mov
lcall
jbe
mulb
xchg
test
shlb
ja
push
nop
mov
mov
mov
and
sub
out
int
inc
imul
sub
push
xchg
out
mov
fidivrl
stos
xchg
adc
xchg
mov
jnp
sub
or
clc
test
loopne
lds
or
loop
repz
xor
pop
aas
sub
jl
jo
out
cmpsl
mov
jb
sub
das
sub
pop
sub
out
stc
sahf
cmp
cs
inc
std
das
adc
jl
les
pop
scas
fldenv
cmp
pop
fwait
inc
lret
aaa
repz
sbb
mov
daa
pop
sbb
sub
xchg
add
int3
iret
pushf
mov
mov
in
push
or
mov
popf
shlb
xchg
pop
add
cmpsb
mov
cmpsb
adc
outsb
out
inc
test
iret
fdivrl
sub
lods
aam
cmp
xor
mov
xchg
mov
leave
lods
test
mov
test
int3
arpl
sub
xlat
lea
mov
out
mov
enter
fdivrs
xchg
test
insb
and
xchg
sub
adc
push
push
mov
repz
add
pop
mov
cmp
xor
out
mov
scas
dec
adc
mov
sub
push
loop
add
jmp
int
dec
pop
rcrb
mov
mov
dec
add
pop
test
popa
and
or
test
rorb
andl
sub
pop
clc
ds
dec
inc
rcl
call
and
out
pop
in
push
js
sub
pop
or
inc
js
push
dec
daa
pop
pop
test
dec
int
mov
push
mov
add
mulb
gs
mov
nop
xor
fnstsw
ret
cmp
adc
jecxz
push
test
inc
loopne
outsb
ficompl
xlat
call
fwait
mov
sti
fimull
loopne
pop
jp
sub
sbb
int3
adc
test
das
jecxz
in
in
inc
mov
imul
jbe
lret
mov
push
outsb
mov
jne
pop
mov
lock
bound
mov
and
and
pushf
fldenv
shlb
outsl
loopne
inc
arpl
adc
or
jle
in
mov
push
xlat
xchg
xor
dec
mov
cwtl
outsl
pop
sub
xor
testw
pop
cmp
xor
xor
cs
inc
cmp
adc
inc
lock
push
dec
jns
test
sahf
fldenv
dec
jb
loopne
out
sti
popa
inc
leave
cmpsl
das
roll
dec
dec
push
inc
pop
push
into
imul
add
je
adc
rcll
or
xchg
pop
aas
mov
movsb
cmp
or
xchg
inc
mov
mov
jo
dec
add
push
xchg
jmp
xchg
clc
jno
jge
pushf
test
sar
or
and
jbe
pop
xor
inc
dec
mov
jne
xchg
dec
je
lret
test
jp
fbstp
test
adc
test
mov
lar
jp
pop
pop
and
outsl
mov
dec
clc
sahf
sub
inc
fxch
inc
inc
insl
stos
pop
xor
push
lods
sbb
and
jecxz
test
lahf
mov
xchg
cltd
mov
insb
and
jne
and
pop
add
push
call
inc
aaa
dec
jnp
loop
xchg
scas
fldl
lds
cmpsl
inc
nop
xor
lret
jno
ret
or
in
dec
push
jle
xor
adc
sar
dec
sti
pushf
mov
inc
aaa
or
fldt
or
jne
xchg
push
out
push
aam
fstp
mov
es
sbb
mov
out
lret
push
ja
shll
lahf
idivl
lret
cvtpi2ps
fstl
sbb
lret
cld
pusha
iret
out
cli
rclb
pushf
mov
pop
mov
mov
xchg
sub
decb
xor
jecxz
jmp
add
adc
pop
cltd
rcr
fs
enter
cs
sti
mov
cli
cmp
xchg
int
xor
pop
xchg
outsl
hlt
xchg
xchg
gs
lcall
scas
or
add
sbb
sub
sbb
xchg
pop
je
in
or
adc
in
dec
and
pop
dec
lret
sbb
sbb
mov
mov
les
in
rcrb
inc
in
lds
sbb
mov
mov
jae
pop
imul
loopne
fldt
pop
push
pop
push
mov
mov
fbld
insb
lea
push
out
add
adc
pushf
out
fildll
gs
push
es
mov
fs
insb
daa
add
pop
mov
lret
xchg
into
sbb
jge
out
xorb
jb
punpckldq
sub
pop
push
fiaddl
dec
call
aas
cmc
and
addr16
loope
dec
sub
dec
mov
xor
push
xchg
or
mov
inc
cld
bound
add
xlat
mov
mov
sub
sub
xor
mov
jmp
inc
dec
inc
pushf
jmp
cmp
xchg
lret
mov
loopne
shlb
pushf
hlt
jne
movzwl
mov
mov
div
fisubl
jge
pop
js,pt
movsb
test
aas
dec
fwait
inc
fisttps
stos
out
test
sarl
xorb
negl
insb
imulb
xchg
orl
mov
sbb
sub
test
and
dec
test
xchg
das
jne
or
mov
xchg
adc
mov
lret
pop
mov
ret
ficomps
das
or
mov
push
int
cmp
icebp
clc
adc
mov
cmp
jmp
jno
movsl
or
xchg
out
dec
jmp
into
call
sbbb
jae
pusha
and
fucom
mov
shll
inc
add
or
cmp
enter
in
pop
mov
into
pop
int
shl
jmp
mov
outsb
inc
adc
sarl
sub
dec
cwtl
pop
jnp
pop
push
fcompl
mov
adc
push
add
pop
inc
xor
dec
jbe
push
aad
jae
movsl
test
dec
push
jne
sub
pop
dec
pushf
aas
mov
pop
or
lret
into
js
sbb
faddl
daa
xchg
xchg
adc
test
insl
add
ret
push
or
mov
jge
out
sti
jne
sbb
std
mov
add
or
popl
sub
mov
stos
iret
mov
iret
mov
insb
shrb
dec
push
mov
in
jns
enter
mov
pop
inc
jnp
outsl
mov
rclb
add
mov
out
scas
add
daa
movswl
int
dec
dec
notl
fisttps
stc
xchg
inc
lock
dec
xlat
dec
data16
mov
addr16
mov
js
lea
inc
and
je
pop
es
fistpll
les
jns
fwait
mov
push
mov
scas
adc
stos
push
jmp
jge
sub
cmp
popa
xchg
test
push
lea
add
push
inc
and
sbb
mov
xchg
push
bound
mov
push
mov
sbb
imul
pop
mull
cwtl
fidivl
pop
or
dec
enter
loope
add
adc
dec
adc
insb
setge
pop
ja
push
xchg
dec
or
test
adc
jg
stc
cli
sub
cld
pop
jne
cwtl
sub
pop
mov
sub
in
cmpsb
in
xchg
arpl
in
lds
aad
ret
js
cmp
dec
jo
jo
cltd
inc
jp
add
fists
sub
notl
cs
xchg
jb
scas
imul
jmp
aam
jle
cli
out
mov
mov
lcall
xchg
add
or
stos
fcomps
leave
in
shr
hlt
or
and
mov
wrmsr
fimuls
jbe
rclb
xchg
cs
pop
fcompl
int
add
xchg
mov
or
add
rcll
lods
mov
mov
sbb
xchg
movl
sub
outsb
pop
dec
imul
xor
mov
or
insl
push
lock
fwait
cli
add
scas
in
and
xor
sbb
inc
jo
jno
nop
push
into
sbb
repz
sub
inc
add
sub
jecxz
test
mov
popf
jp
jg
pop
pop
outsl
idivl
fdivs
in
jae
xchg
les
popa
push
mov
ret
cmpl
sbbl
lret
dec
decb
bound
ds
mov
mov
and
push
fwait
mov
addl
mov
test
jle
in
xchg
aas
cwtl
dec
and
sbb
inc
jecxz
in
popf
jns
mov
push
mov
dec
mov
jmp
daa
or
add
stos
adc
lret
daa
lods
aam
ret
ret
jge
ret
ja
cmp
inc
cli
dec
inc
rclb
push
add
mov
pushf
pusha
fcmove
ret
testb
xor
jae
les
adc
aad
out
xchg
and
fwait
push
sub
and
test
repnz
imul
xor
dec
xchg
pushf
mov
xchg
mov
test
cmp
mov
cmp
add
dec
gs
xchg
mov
imull
xchg
adc
push
icebp
in
jecxz
addl
stc
rol
inc
jne
nop
dec
enter
cwtl
imul
xor
push
pop
sbb
lret
mov
adc
mov
mov
xchg
mov
xchg
xchg
test
mov
xor
inc
clc
push
ror
and
mov
add
fldl
fwait
sub
mov
jb
xor
aaa
jno
pop
push
pop
pop
mov
sbb
test
cmpsb
pop
lret
pop
test
insl
mov
fisttps
test
xchg
loope
je,pt
xlat
testb
outsl
andl
enter
push
fwait
xlat
mov
insl
pop
adcb
dec
pop
in
pop
int3
arpl
divl
imul
dec
mov
push
pushf
dec
inc
push
mov
test
scas
fsubp
out
xchg
fs
mov
loop
int
sarl
loope
add
orb
xchg
out
push
lock
pop
out
push
jmp
mov
mov
aas
pop
sbb
adc
in
sub
mov
xor
and
aas
in
sub
jge
pop
dec
int3
dec
jo
pop
fsincos
movsb
sbb
xchg
or
jmp
and
sahf
lock
jle
lret
imul
sti
pop
mov
in
imul
and
sbb
imulb
cmp
lds
orl
pop
leave
or
movsb
setbe
inc
and
movsb
pop
rorb
scas
xchg
xlat
sbb
sbb
in
leave
cmp
inc
insl
push
jne
push
cmpsl
insl
add
mov
lds
cmp
cmp
lods
sub
xchg
out
cwtl
sbb
pop
jle
int3
inc
and
stc
jg
and
xchg
loopne
mov
push
aaa
cmp
std
sub
mov
inc
sub
mov
add
repz
adc
out
ret
mov
sub
lahf
push
dec
add
add
xor
and
xchg
rorb
cmpl
pusha
sbb
jg
push
loope
lods
xchg
jb
xchg
lea
or
or
fimuls
inc
ret
les
xor
daa
adc
sub
mov
pop
push
adc
cmp
jge
jmp
xor
mov
push
xchg
rclb
xor
cmc
and
pop
mov
push
sahf
mov
or
xor
cwtl
xchg
aas
out
imul
adc
lret
cmpsl
sub
push
dec
mov
jmp
cmp
xchg
xchg
jb
js
mov
out
xor
icebp
dec
xor
cmp
arpl
adc
dec
movsl
pop
mov
loopne
pop
ret
lods
jnp
adc
hlt
mov
outsl
fistps
adc
pop
dec
lock
test
subb
pop
pop
popf
arpl
cmp
popf
int3
mov
mov
sti
bnd
rorb
rolb
inc
aam
mov
or
or
xchg
ror
pop
repz
jno
enter
add
mov
je
push
fwait
add
fidivrl
loop
push
adc
mov
test
inc
mov
lahf
test
call
cltd
jp
gs
mov
cmp
push
mov
sarl
gs
add
iret
or
xchg
mov
test
iret
enter
pusha
adc
rcll
sub
movsl
dec
pop
or
fs
incb
fs
fidivrl
gs
fmul
popf
scas
insb
xchg
jle
mov
xor
adc
mov
jno
das
arpl
fldln2
fnstenv
xlat
jecxz
add
jge
notb
or
ljmp
mov
lret
mov
jge
lods
sbb
and
pop
shlb
cmpsb
pop
lods
dec
les
lahf
jae
jmp
dec
imulb
or
in
mov
jg
or
lret
mov
add
stos
popf
push
mov
das
xor
inc
dec
fbstp
sbb
mov
pop
lret
fwait
outsl
daa
mov
lds
mov
mov
idivl
ret
xor
push
std
fdivrs
push
sub
adc
out
jns
xchg
int
mov
in
pop
aad
xchg
scas
pop
movsb
pop
cli
fsubr
push
stc
pop
mov
repnz
fstpt
jbe
xlat
push
add
stos
out
rcr
dec
pushf
jo
pop
jnp
sub
pusha
pop
mov
sbb
mov
outsb
push
push
dec
xchg
add
push
mov
mov
pop
push
scas
test
mov
mov
and
xchg
fstp
push
and
or
out
sahf
mov
push
and
mov
idivb
adc
xor
pop
mov
xor
idivb
sub
jecxz
push
xchg
movsl
add
shr
outsl
sub
iret
stos
addr16
jb
pusha
lret
repz
rsqrtps
and
lds
sub
fdivrs
popa
pushf
pop
lock
cmc
cmp
movsl
in
push
aaa
add
push
xchg
sub
jge
inc
test
push
movsl
xor
mov
out
and
xor
call
sbb
mov
xchg
pop
pusha
mov
jo,pn
leave
mov
jmp
sub
adc
and
jp
movsl
fimull
jmp
mov
mov
loop
lret
sbb
mov
ret
loope
nop
enter
cmp
mov
arpl
clc
pop
fnsave
inc
cli
jo
out
lods
aaa
dec
jno
pop
fadd
enter
fstpl
insl
cmp
outsb
dec
mov
sbb
jge
cwtl
mov
scas
out
and
xchg
test
add
inc
lcall
fldl
sub
std
xchg
pop
xchg
cmp
stc
dec
cmp
and
lahf
or
xchg
es
sbb
push
das
std
dec
xchg
xlat
xchg
cmpsl
stos
pushf
push
imul
mov
adc
cwtl
pop
imul
cmp
sub
std
vpcmpgtd
pop
das
cmp
pop
mov
push
fs
loope
xchg
xor
fnstsw
and
je
lock
pop
cmp
orl
daa
sbbl
ret
adc
dec
test
and
sub
jmp
andb
andb
sti
test
sbb
jmp
outsl
jle
push
push
repz
pop
inc
mov
fs
lea
sti
cld
xor
inc
shlb
shrb
mov
aaa
xchg
leave
jbe
sbb
fwait
into
imul
sub
ljmp
lods
hlt
xlat
cli
repnz
mov
dec
out
or
inc
and
cltd
das
pop
push
mov
mov
sub
imul
jge
stos
xor
xchg
pop
popf
sbb
bswap
fs
xor
inc
data16
push
dec
std
dec
insl
sbbl
nop
movsb
mov
pop
data16
mov
jecxz
xor
cmp
pop
cmp
lds
adc
out
ds
imul
test
idivb
pusha
cmp
mov
imul
sbb
ret
lock
sbb
jg
xchg
mov
xor
mov
cmp
loope
ds
negb
jae
sti
xchg
fs
dec
cli
mov
push
pusha
jae
std
push
imul
jae
pop
lret
inc
rcrl
mov
mov
aas
jnp
adc
icebp
pmaxsw
mov
in
pop
sbb
cmp
xor
test
int3
pop
inc
std
popa
je
cmpsl
pop
sbb
cmpl
ds
cmpl
ljmp
loopne
or
lret
lods
push
lds
in
loopne
lea
cwtl
xchg
inc
jo
dec
loopne
jl
mov
out
pop
clc
lods
movl
xorl
jo
and
scas
popf
fcmove
pop
sti
mov
jg
mov
xchg
jecxz
jmp
dec
mull
clc
mov
cmp
cli
xorl
nop
aaa
fwait
imul
jge
jne
dec
mov
push
add
in
das
repnz
inc
aad
in
pop
dec
mov
dec
mov
mov
adc
fsub
mov
cs
imul
cmp
mov
add
daa
insl
adc
cltd
xchg
lret
pop
gs
and
mov
mov
push
test
dec
subb
xchg
mov
fidivl
mov
sub
cmp
mov
cmp
or
mov
sar
cmp
movsl
sub
repz
hlt
test
sub
nop
or
xor
ljmp
subb
std
mov
mov
xchg
push
mov
std
cld
rcr
and
inc
push
inc
or
int3
sbb
pop
mov
pop
sbb
mov
jl
add
and
xchg
pop
jbe
ljmp
xor
sub
mov
lret
dec
adc
insb
mov
ds
add
adc
data16
addl
outsb
mov
pop
sub
pushf
aad
push
ja
mov
adc
or
lahf
fistpl
repnz
fwait
xor
lods
and
inc
insl
shll
ss
stos
or
lods
or
imul
nop
xor
cltd
rcl
sub
out
xorb
in
insb
xlat
cmc
addr16
out
or
aaa
xchg
daa
ss
aaa
out
pop
and
jle
mov
push
mov
mov
hlt
stos
add
adc
sbb
jae
mov
ljmp
push
xchg
shll
xor
ljmp
scas
ror
clc
popf
clc
subb
jns
cwtl
jnp
cld
xlat
ja
add
add
sahf
push
in
push
adc
push
aaa
hlt
or
adc
xor
pop
fmulp
sahf
imul
insb
dec
call
out
mov
sub
dec
roll
cld
pusha
sti
std
xchg
mov
mov
push
cmpsl
mov
or
pushf
stc
fisubrs
inc
dec
call
add
push
stos
pop
mov
pop
mov
dec
push
or
pop
fwait
dec
ret
push
daa
mov
and
jg
arpl
ret
mov
inc
inc
mov
imul
mov
mov
jle
or
mov
mov
push
into
xchg
inc
in
dec
out
pop
cmp
jnp
mov
out
jl
lret
call
sbb
xorb
push
pop
cli
pop
arpl
jnp
xchg
pop
xor
and
xor
and
sbb
xchg
sbb
in
pop
fsubrs
ret
arpl
and
pusha
aam
push
nop
push
jne
push
loope
dec
pop
adc
dec
cs
fstpl
xchg
push
jno
mov
and
lods
sub
or
jne
lock
mov
and
xor
xchg
sahf
daa
lds
push
mov
or
cwtl
ret
fcmovne
sti
sub
or
out
loop
push
sbb
lret
adc
sub
dec
sahf
gs
lret
push
leave
mov
fnsave
loope
and
sub
inc
cmp
outsl
dec
jmp
mov
add
rorb
sar
cli
dec
clc
push
dec
push
insb
leave
ret
add
out
cmp
jg
ss
mov
call
push
outsb
popf
das
dec
popa
out
jp
je
cld
iret
inc
inc
int
addr16
pop
roll
inc
push
imul
xor
sbb
mov
push
fdivrs
push
ja
sub
and
in
fmuls
and
loop
ficompl
mov
outsb
pop
mov
mov
arpl
js
and
inc
bnd
mov
filds
mov
cli
das
xlat
and
leave
fstps
cmpsb
xchg
leave
sbb
inc
mov
pop
inc
mov
shlb
insb
les
aas
mov
stos
sbb
out
shr
lock
addr16
insl
pop
sti
aaa
or
jne
pop
mov
ds
aaa
push
xchg
jmp
xor
pop
outsl
pop
loope
xlat
inc
fs
and
inc
pop
inc
cmpl
aaa
mov
and
cwtl
mov
add
push
ret
insl
sar
loope
adc
dec
outsb
lods
mov
sub
jns
cs
xor
hlt
scas
or
xor
test
cmc
lret
xchg
bound
adc
sbbb
test
in
int3
mov
xchg
fst
popa
movsb
fsubp
add
stos
scas
in
lahf
adc
jbe
mov
mov
rcrl
sti
inc
jne
test
jne
cmp
in
sbb
add
xchg
adc
movsl
sahf
fdiv
mov
cmp
dec
popa
sub
sbb
xchg
xchg
pop
mov
add
sbb
faddl
adc
lret
je
scas
adc
shrl
push
jge
or
mov
xchg
push
cmp
pop
push
sbb
sbb
rolb
ja
or
cmc
ja
iret
pushf
sti
aam
cmp
bound
and
bnd
out
negl
lea
jne
shrl
and
in
pop
jns
sahf
dec
scas
push
outsl
adc
out
mov
mov
loope
mov
mov
xchg
faddl
fidivrs
les
xor
dec
loopne
xchg
pop
and
inc
mov
sub
repz
insb
sub
addr16
mov
pop
mov
gs
jae
dec
je
cmpsl
jg
sub
sub
cltd
pop
jecxz
sbb
int
xchg
cs
call
leave
push
pop
jns
adc
xchg
out
jecxz
adc
jmp
jmp
xchg
dec
cmp
mov
cmpsl
push
add
cmc
pop
es
push
jg
push
inc
lods
lds
insb
icebp
les
repz
mov
mov
test
jmp
lds
adc
inc
pop
scas
repz
in
sbb
xor
mov
cmp
add
mov
jno
aaa
jle
sub
stc
stos
inc
sub
out
movl
jae
inc
dec
mov
js
into
xor
sbb
adcb
int3
test
mov
lcall
sbb
in
mov
pop
xchg
rcr
mov
stc
loopne
je
sbb
fcmovb
cmpxchg
adc
ds
ljmp
adc
mov
inc
mov
gs
lcall
add
and
lods
push
pop
jp
scas
pop
push
lds
arpl
inc
add
es
push
adc
shlb
push
shlb
mov
pop
xor
mov
in
push
pop
lret
mov
mov
mov
lahf
push
sbb
inc
inc
inc
mov
js
jecxz
std
ljmp
pop
cs
xchg
cwtl
push
xchg
xchg
sbb
adc
adc
popa
ret
lret
mov
je
jle
adc
xchg
nop
xor
push
fildl
xchg
sub
jp
in
movsl
fldcw
lret
lods
mov
fisttpll
sarl
addr16
mov
mov
sbb
mov
add
mov
push
push
fsubrl
into
div
jne
ljmp
frstor
push
pop
cmpsb
push
out
mov
cmp
xchg
mov
insl
in
repz
rorl
pop
xorb
lock
data16
imulb
jp
and
repnz
icebp
pop
shrl
testb
dec
aad
mov
pop
pop
mov
jl
add
scas
mov
movsl
push
aad
icebp
stos
inc
ja
insl
imul
sub
loop
inc
add
xor
dec
loop
xchg
nop
dec
hlt
int
mov
mov
sub
jge
sahf
sub
lea
fucomip
ss
scas
and
inc
loope
mov
aas
insl
fcoml
cmpsb
xor
dec
cmp
and
gs
pop
mov
jl
addr16
pop
sbb
or
or
in
xorl
push
xchg
xchg
cmp
dec
out
fists
sarb
ret
xorl
or
adc
int3
loop
dec
lea
popa
xor
sub
hlt
insl
sub
repnz
mov
xlat
xchg
leave
mov
and
cmp
leave
adc
sbb
mov
adc
mov
cli
rcrl
push
cld
cmp
xchg
jbe
stc
ja
jae
jle
cld
push
mov
out
cltd
pusha
xchg
jmp
sbb
add
adc
dec
sbb
ljmp
cli
pop
ret
fstl
pop
aas
sub
popf
or
int
test
pop
mov
js
popf
mov
sub
and
sti
icebp
js
add
adc
push
imul
pop
cwtl
leave
cmp
lock
iret
pop
xlat
jl
cs
xchg
pop
rol
fsubrl
lods
jge
call
es
or
aad
stos
jnp
pop
lods
push
xchg
out
shlb
sbb
cmc
adc
sbb
test
mov
insb
cmp
and
enter
lahf
dec
icebp
pop
mov
cltd
push
jmp
pop
rcr
lods
xchg
lds
push
or
mov
push
ret
jge
cmpb
hlt
adc
xchg
or
mov
loope
in
add
xchg
int3
fcoml
mov
mov
and
cmp
pop
cmp
add
xchg
fidivrl
dec
test
push
jb
imul
push
xchg
cmpsl
sub
pop
arpl
out
sbb
pop
sub
jmp
ja
addr16
lret
xor
pop
in
arpl
dec
cli
stos
loop
enter
sbb
insl
stos
lods
fdivrl
sbb
in
lock
aaa
mov
lods
push
and
xlat
xchg
adc
out
mov
dec
mov
push
and
jbe
or
popa
ds
test
lcall
ret
dec
pop
mov
fistps
xor
cmpsb
mov
add
lods
ficomps
jge
push
pusha
int
int3
shrb
xor
pop
inc
frstor
stos
ds
sbb
in
push
sarl
inc
add
aaa
adc
sar
aad
push
bound
or
push
or
out
cmpsl
sbb
pop
mov
and
mov
mov
int3
sbb
pusha
sub
push
stc
in
add
mov
into
stos
add
add
pop
jge
mov
xor
insl
xchg
imul
pusha
sub
cwtl
cmp
cmp
in
xchg
sbb
mov
lcall
in
mov
inc
loopne
ljmp
int3
sahf
inc
or
ret
data16
pusha
idivb
push
push
mov
add
push
inc
dec
shll
in
imul
test
sub
cmp
mov
lcall
sub
stos
xchg
sub
mov
andl
out
jns
pop
mov
test
cmpsb
stc
xchg
dec
mov
sbb
repnz
outsb
sbb
cmp
adc
xchg
push
test
ds
add
add
cs
push
leave
into
pop
lods
cld
repz
jmp
push
ret
mov
cwtl
mov
les
cmpsl
push
aaa
push
not
jg
repz
pusha
shlb
xor
hlt
add
shll
pop
enter
pop
xchg
es
js
out
push
mov
lods
cmc
jg
dec
insl
and
sub
sbb
add
mov
call
add
int3
fwait
mov
cmc
clc
xchg
lds
push
ret
repnz
cmp
outsl
lods
mov
inc
push
lods
cli
lods
jo
je
jne
xchg
pop
fldt
testl
dec
or
lods
xor
icebp
lods
xor
mov
xchg
imul
mov
sbb
outsb
cmp
cwtl
mov
push
push
int
jns
negl
es
sbb
adc
sub
inc
cltd
jnp
loope
pop
fiadds
lcall
js
arpl
les
jbe
pop
dec
inc
popa
mul
call
jl
rcrb
lock
pop
pop
sbb
in
sbb
cli
fsubrp
or
push
cmp
jge
test
push
cmp
xchg
sbb
into
jae
mov
sub
dec
mov
adc
xor
pop
jno
imul
aam
or
mov
xor
testl
and
adc
sub
lahf
inc
sbb
and
outsb
pop
cmp
stos
sbb
fmull
push
inc
loopne
inc
in
add
fcompl
scas
mov
je
mov
nop
cmp
cltd
pusha
mov
and
es
mov
push
test
mov
or
hlt
dec
outsb
pop
adc
call
sahf
xchg
mov
xchg
add
pop
inc
and
cmp
adc
call
lcall
xor
add
xchg
mov
cmc
xor
inc
pop
and
push
fnstcw
mov
sub
lret
fdivl
jmp
mov
sub
sub
xchg
test
es
fldenv
jecxz
push
adc
vaddsubps
or
test
pop
jg
imul
rep
arpl
fisttpll
mov
negl
xchg
scas
mov
negl
mov
or
sub
xor
sub
xchg
cmp
aad
int
and
pop
inc
sbb
sbb
les
insb
stos
mov
cmp
cli
stc
out
popf
xor
and
and
mov
imul
xlat
enter
push
int
inc
xor
dec
add
insb
iret
inc
cmc
enter
push
mov
aaa
jg
cmp
dec
psubd
mov
scas
dec
sar
es
test
adc
lds
outsb
inc
iret
adc
mov
and
mov
js
jl
out
mov
sbbb
pop
mov
mov
pop
hlt
inc
add
out
dec
add
cmp
ja
lea
sbb
mov
fisttpll
xabort
adc
cmpsl
adc
mov
jne
aaa
mov
je
sarb
aam
push
test
ret
stc
sub
mov
mov
jp
pop
scas
push
adc
mov
pop
push
add
mov
dec
inc
dec
xchg
lods
loope
sbb
adc
mov
push
and
mov
mov
enter
push
lods
cmp
or
add
xchg
push
dec
inc
in
mov
mov
lock
aam
add
sub
pop
rorl
ficoms
add
mov
sbb
cmp
push
shrb
mov
fiaddl
fidivrs
jbe
fimull
notb
scas
sbb
popf
pop
mov
ret
js
jp
lret
sub
push
fistl
or
rcll
mov
and
pop
cs
movsl
cltd
add
xchg
mov
add
pop
es
paddusb
lock
jmp
lret
movb
pop
mov
push
dec
into
or
icebp
sar
lahf
rolb
movsb
in
loopne
pop
ja
sub
test
mov
mov
mov
cmp
xor
leave
arpl
push
cli
imul
dec
pop
inc
push
pop
lret
xor
inc
mov
ret
es
hlt
divl
scas
mov
cmp
mov
mov
push
pop
loope
fxch
sub
les
dec
nop
test
scas
stos
xchg
scas
inc
pop
mov
cmc
mov
xchg
in
stc
mov
xor
cmp
xor
jle
insb
ret
addr16
inc
jae
fcmovb
imul
loop
push
mov
fdivrl
xor
imul
test
dec
loop
ds
mov
shll
nop
in
fisubrs
nop
pushl
mov
or
xacquire
cmp
pop
sub
shrb
test
sbb
outsb
pop
xor
pop
mov
mov
mov
repnz
pusha
push
insb
xor
mov
sarl
cltd
outsb
shr
xchg
popa
frstor
adc
push
ds
fwait
mov
cmp
mov
fs
mov
jg
sbb
or
lock
pop
pop
js
xor
insb
mov
sub
shl
les
push
lret
and
mov
inc
pop
mov
insb
mov
xor
fmull
test
jne
or
pop
insl
add
sbb
ds
cmp
rcrl
xor
int
loop
js
pop
pop
push
sub
xchg
cmp
ffree
mov
cmp
add
dec
decl
adc
add
add
repnz
sti
inc
cmpb
xor
pop
mov
mov
xchg
rcl
xchg
mov
or
jae
push
aaa
gs
das
or
and
push
add
ljmp
repnz
outsl
cmc
xchg
add
fisubrl
add
jl
dec
push
andb
stc
pop
cmc
pop
in
jno
mov
and
jmp
cmpsl
es
cmp
mov
decb
mov
jle
scas
outsb
and
or
sti
jmp
das
jo
cs
cmp
mov
jbe
mov
mov
imul
call
push
scas
push
xor
daa
test
sub
sub
xchg
pop
std
mov
imul
ds
or
sbb
sub
pop
sub
shll
sub
push
dec
ss
pop
adcb
mov
xlat
scas
dec
mov
stos
rcrl
pop
xor
or
dec
push
mov
mov
sbb
pop
stos
adc
rcrl
fdivrl
lcall
jp
push
push
inc
mov
adc
fcomps
stos
scas
jle
movsl
frstor
lds
mov
inc
xor
cld
inc
pop
mov
add
push
stc
hlt
out
push
mov
jecxz
cmp
sub
sahf
lret
pop
pop
dec
adc
mov
and
push
sbb
push
jae
jp
pop
mov
push
adc
cmp
jae
je
into
inc
cmpsl
pop
shrb
mov
pminub
cmp
xchg
lock
xor
xchg
push
out
lret
pusha
add
std
lods
mov
xlat
cmp
notb
lods
adc
enter
jmp
aaa
shll
pusha
sub
adc
mov
cmpsl
and
sbb
data16
sbb
sub
in
sbb
inc
xlat
mov
movsl
cmp
out
dec
fisttpll
mov
inc
xchg
or
mov
orb
mov
xor
xchg
jne
shlb
or
push
out
insb
sbb
pop
and
dec
les
jmp
insl
test
adc
sbb
cmp
sub
call
mov
repnz
andl
push
adc
sub
je
or
or
push
jo
loopne
dec
aad
and
stos
and
mov
cmpsb
jg
jl
cmp
shll
or
aam
and
sbb
mov
loop
lea
rolb
out
ds
mov
and
leave
and
and
mov
jmp
mov
mov
jl
sarl
shl
xor
cmp
mov
cmp
sub
fwait
into
das
dec
pop
jmp
rcrb
add
xor
mov
daa
inc
jb
std
pop
mov
sub
sbb
jmp
in
cmc
or
inc
scas
mov
ljmp
xor
orb
test
jnp
jbe
xor
je
ss
xchg
push
cmpsl
movsb
adc
add
sahf
xchg
lret
sbb
sbb
clc
mov
fbstp
out
xchg
loop
xor
loopne
mov
nop
rolb
xchg
sar
and
cmpsl
shlb
inc
in
sub
iret
push
aaa
mov
jge
int
mov
insl
das
add
inc
ds
test
shl
insb
add
pop
inc
sub
xchg
and
mov
sahf
repz
in
aaa
sbb
cmc
lcall
mov
iret
roll
sub
mov
jnp
pop
jno
jb
pop
adc
xchg
mov
sar
pop
ffreep
insl
inc
lock
fidivrs
push
cltd
shlb
add
or
pop
push
cs
push
adc
mov
dec
add
arpl
insl
call
xchg
xchg
xchg
xchg
in
iret
pop
add
das
sahf
inc
jp
loopne
sbb
mov
jno
inc
pusha
out
lea
inc
mov
shrl
lahf
movsl
fcomps
test
enter
fnstenv
cmp
cwtl
cmpsl
cs
enter
add
pop
nop
stos
ss
dec
rcr
push
cmp
push
inc
add
in
js
mov
pop
sbb
adcb
xchg
sub
into
loope
decl
loop
orl
cs
inc
addr16
icebp
mov
loop
adc
aaa
in
xor
sbb
or
stos
loopne
ret
lods
xchg
jmp
push
cmp
jge
out
icebp
cmpsb
and
sub
jns
mov
aas
cmp
scas
push
hlt
xor
xor
divl
adcl
fucomp
cli
mov
cmp
cmp
test
or
nop
mov
xchg
dec
rcrl
mov
adc
shrb
hlt
push
mov
stos
push
pusha
push
xor
jg
ja
xor
push
aaa
js
jnp
in
pop
jb
sbb
jbe
cmp
mov
and
and
mov
loope
mov
dec
push
sbb
fists
push
sbb
push
clc
sub
ds
pop
mov
push
aam
adc
mov
into
adc
pop
mov
cmpsl
clc
stc
imul
fadds
inc
addr16
add
pop
dec
pop
xchg
mov
repz
scas
cld
adc
mov
mov
pop
lods
lods
test
lods
mov
imul
sbbl
pop
and
sub
in
in
cmp
jnp
cli
rep
sbb
mov
ljmp
int3
outsl
add
ret
call
cli
xchg
mov
cmpsl
cwtl
or
push
hlt
nop
or
pop
add
jns
dec
jns
mov
push
mov
xchg
or
jecxz
mov
hlt
daa
and
jg
out
and
imul
js
ja
gs
mov
xchg
loopne
pop
aas
das
iret
fsubrl
fildl
inc
andb
push
push
rcrb
in
js
iret
shll
mov
shl
jg
out
out
jp
pop
inc
and
ja
ret
mov
dec
rorl
insb
shlb
xor
jbe
rorl
adc
fadds
add
cli
lock
xor
movsl
jmp
mov
arpl
sbb
je
enter
test
jmp
and
xchg
insl
lds
enter
jp
enter
mov
gs
mov
cmp
scas
xor
adc
lret
jp
test
dec
pop
sti
aas
mov
cmpsb
cmc
dec
jnp
add
test
ds
and
roll
das
sub
mov
jno
cmc
and
ret
mov
push
subb
mov
loop
or
loopne
xchg
xchg
pop
push
dec
xchg
shll
inc
imull
icebp
xchg
xchg
pop
dec
xor
pop
call
dec
fdiv
dec
jns
fbld
shl
dec
adc
sbb
add
jns
mov
push
cmp
fildll
inc
pop
push
aam
mov
int
je
cmp
lock
jge
dec
mov
sbb
cmp
fnsave
test
push
mov
sqrtps
addb
add
dec
dec
mov
cmc
xchg
jg
and
sbb
sub
mov
aam
dec
push
mov
js
or
xchg
out
dec
and
enter
pop
cmpb
xchg
shrl
xchg
and
aam
sbb
test
stos
sahf
inc
cli
lea
icebp
jp
cmpsb
mov
mov
stc
ljmp
jp
aaa
inc
adc
orb
sbb
ficompl
orb
and
jmp
add
mov
or
or
stos
sbb
lods
xchg
addr16
cwtl
fnstenv
inc
inc
push
testl
mov
ds
outsl
sub
lock
push
jecxz
mov
adc
add
mov
push
out
insb
mov
mov
cmc
add
mov
xchg
mov
fsubrl
pop
pusha
sub
fnstsw
imul
push
inc
cltd
adc
ret
mov
xchg
leave
xor
sbb
sbb
shll
lods
lock
sbb
ljmp
mov
lea
push
pop
mov
push
jmp
repz
imul
popf
inc
mov
mov
pushf
cli
in
aam
add
lret
iret
mov
add
mov
insb
dec
popf
dec
and
rcrl
shl
das
mov
add
xor
cltd
and
and
dec
aam
and
push
decl
and
hlt
inc
outsl
push
int
inc
ljmp
outsb
mov
insl
ljmp
add
xchg
js
inc
or
addr16
bound
movsl
and
add
dec
pop
xor
rol
push
inc
andb
dec
dec
fwait
shlb
adc
imul
mov
ret
in
jl
les
pop
test
xchg
jp
jg
flds
fs
jo
adc
scas
pop
sbb
ss
inc
sbb
aad
add
pop
mov
inc
and
mov
loopne
inc
jge
push
cld
scas
out
mov
loop
lret
or
es
and
jmp
jae
jle
xchg
pop
outsb
ljmp
test
jb
loopne
jae
or
cmpsl
or
iret
icebp
cmp
int
pop
cltd
push
and
mov
push
and
and
sbb
or
in
fistpl
mov
popa
lret
fadd
fildl
jbe
and
popf
movsl
test
sub
push
lds
sti
das
icebp
push
outsb
fsubl
pusha
fildl
out
daa
in
mov
lea
jge
test
aaa
mov
fsubl
pop
sarb
inc
jno
in
aam
mov
or
rol
test
cltd
dec
and
daa
mov
scas
sahf
jb
xor
cmp
in
xor
je
ljmp
push
lcall
inc
rcrl
xor
inc
mov
or
xlat
cmp
sbb
scas
das
adc
ljmp
iret
fldl2t
sbb
push
call
sbb
or
icebp
push
mov
pusha
sbb
rcrl
pop
int3
stos
in
xchg
cmp
incb
xchg
adc
sti
sbb
outsl
mov
fisubrl
or
faddl
int3
mov
in
and
popa
mov
out
add
push
in
das
dec
stos
adc
roll
adc
dec
fidivl
pop
sub
sub
sub
jno
mov
enter
add
sbb
jns
call
mov
dec
mov
roll
sub
aaa
stos
xchg
xchg
mov
mov
stc
fistpll
js
sub
movsb
leave
add
loope
xchg
lock
xchg
std
jg
cld
scas
aaa
repz
sti
scas
ficompl
inc
and
xor
icebp
xor
sbb
in
sahf
lea
stc
pop
cmpsl
das
xchg
sbb
loop
ja
jb
into
insb
orl
jbe
repnz
jge
cmpsl
xor
mov
jg
out
clc
push
repz
outsl
insl
lea
adc
out
push
mov
arpl
push
sub
cli
lret
adc
aas
dec
xchg
lss
repz
xchg
add
ret
shll
movsb
dec
rol
adcb
xlat
pop
call
test
push
mov
movsl
popf
int
orl
cmp
push
sbb
lcall
mov
adc
jnp
sbbb
pop
movsl
test
lods
jns
sbb
in
fsubrl
cld
sub
push
int3
pop
jno
lods
bound
sbb
adc
jb
out
xor
les
xchg
mov
jp
into
outsl
movsb
pop
mov
fiaddl
xchg
mov
jg
shlb
shl
push
xchg
pop
rdmsr
and
les
in
fbstp
test
mov
lock
repz
icebp
mov
pop
or
out
jge
jp
push
enter
inc
test
xchg
mov
js
clc
cmp
stc
push
jecxz
push
xchg
test
js
inc
adc
testl
and
add
mov
mov
mov
loope
pop
std
inc
cmp
or
fwait
and
into
xor
insl
or
call
mov
in
jns
int3
jne
loope
leave
cmpsl
out
leave
gs
loopne
movb
hlt
inc
jns
pop
ds
add
daa
mov
xor
int3
mov
ret
int
jae
and
pop
imul
cli
addb
push
mov
ret
jne
dec
sbb
movsb
aaa
in
mov
mov
pop
out
add
icebp
mov
lahf
pop
scas
push
dec
in
ljmp
shll
adc
iret
cld
addr16
fwait
mov
fwait
shll
int
jecxz,pn
shrb
pop
push
fsubr
adc
pushf
push
and
add
shrl
into
or
pop
or
pop
outsl
push
jle
mov
mov
or
fwait
gs
int
xchg
xor
out
push
test
xlat
xor
fiaddl
ja
sbb
jp
addb
negl
cwtl
cli
nop
iret
add
push
cltd
leave
mov
sbb
sub
mov
imul
lret
shrb
dec
mov
mov
mov
testb
int
mov
adc
mov
mov
xchg
cmp
add
outsb
jno
or
mov
andb
jbe
call
cltd
out
daa
ds
inc
pop
inc
ljmp
loop
sar
movsb
inc
and
inc
fistl
andl
into
adc
hlt
cmp
cmp
ret
imul
xchg
in
dec
mov
adc
ja
mov
adc
gs
add
mov
push
inc
xchg
pop
dec
adc
sbb
xchg
jle
mov
or
push
cmp
jg
cltd
repnz
ljmp
jmp
scas
stos
mov
out
std
out
jnp
ljmp
fs
in
jb
insl
jo
sbb
fs
int
sub
jb
in
fwait
das
shll
int3
rcl
sbb
lea
in
jne
inc
dec
fsubrp
cmp
subl
sub
mov
into
jo
in
or
pop
xor
cmp
mov
jns
aam
in
sub
mov
je
enter
push
mov
icebp
sarb
cltd
shlb
pop
jecxz
pop
xor
aam
ljmp
jno
jp
stos
mov
scas
dec
inc
or
and
fldt
xchg
or
aam
icebp
push
fildl
ja
cmpsl
lret
sbb
xor
sbb
in
sub
add
clc
mov
cmp
push
cwtl
in
inc
xchg
pop
jp
xchg
pop
add
push
or
jmp
aaa
xorl
repnz
inc
add
mov
mov
adc
xchg
fistps
cmp
mov
add
loopne
mov
js
push
cmpl
in
sbb
leave
sbb
xchg
or
fidivrs
addr16
into
rcpps
jle
push
lcallw
jge
fnsave
stos
dec
lahf
dec
dec
add
lfs
repnz
les
sti
inc
or
std
pop
sbb
sbb
dec
rcrl
stos
cmp
mov
mov
push
jbe
repnz
int3
jne
call
jns
lret
gs
imul
xchg
gs
cli
iret
mov
div
mov
dec
lock
fildl
enter
push
aad
lret
enter
rorb
jae
sub
fcomps
repz
stos
jge
hlt
sbb
push
pop
andb
mov
into
in
sub
movsl
inc
in
fldenv
enter
ljmp
pop
out
cmc
je
jnp
test
into
pop
inc
sbb
push
xchg
movsl
dec
imul
lret
outsl
cwtl
push
imul
data16
fsubs
aas
stos
xorl
lret
mov
adc
fidivrl
scas
dec
inc
adc
lods
cmpsb
roll
cmpsl
pop
sbb
push
outsb
mov
mov
sbb
xor
add
push
sahf
push
cli
push
dec
leave
fsubrs
test
mov
sbb
pop
xchg
loope
sbb
mov
add
cmc
dec
pop
or
in
mov
subb
xor
adc
xor
or
ret
lods
cld
daa
dec
pop
sub
lret
and
in
scas
insl
push
xchg
mov
adc
pushf
jge
and
cmpsb
loop
int
ja
add
jnp
mov
test
icebp
xchg
pop
cmp
out
mov
sar
sub
popf
sub
sub
mov
pop
shl
add
jb
jp
mov
movsl
pop
cmp
test
cmp
notl
out
sbb
shll
push
mov
cs
arpl
sbb
ss
add
jbe
push
sbbb
les
xchg
inc
mov
xchg
dec
xor
sub
ss
lcall
jp
adc
insl
and
testl
scas
xor
xchg
pushl
mov
sub
sub
rcrl
xor
mov
mov
xchg
movb
sub
les
mov
adc
push
out
sbb
and
orl
xchg
push
jmp
aad
or
push
dec
jbe
sub
mov
call
cmpl
jp
insl
sub
test
cs
mov
xor
cmpsl
pop
imulb
mov
or
cmp
sub
mov
pop
cmp
cli
push
pop
pop
ds
mov
xchg
stos
push
push
cmpsl
sbb
jns
ret
jg
mov
lret
out
add
push
call
jmp
jnp
fnstcw
mov
aad
clc
adc
xor
jno
stos
lret
gs
sbb
int
fdiv
pop
lret
rclb
cltd
cmpl
sahf
mov
mulb
xchg
out
js
xchg
cmpsb
sbb
jl
mov
scas
popa
mov
leave
xchg
cli
scas
push
push
push
xchg
aad
sbbb
in
push
out
jae
int3
adc
inc
adc
cli
fcoml
lea
aam
push
jns
add
fimull
and
add
ja
cmpsb
xor
mov
push
sti
lret
pop
aad
fsubs
lods
sub
stos
cmp
push
in
and
sbb
jl
repnz
stc
enter
sub
aad
enter
in
sub
sbb
fiadds
es
rcr
pop
into
pop
xor
lods
add
pop
ja
lret
dec
repnz
lock
repnz
stc
cmp
test
xchg
pop
rcll
cmp
sarb
int
dec
cltd
jle
inc
cmpsb
movsl
or
pop
pop
mov
cltd
outsl
pop
mov
lods
addr16
mov
xor
ds
adc
dec
lock
dec
rol
mov
mov
dec
add
push
inc
popf
arpl
cmp
add
aas
aaa
jg
test
sbb
xchg
cmp
xlat
lock
sub
aam
mov
in
mov
sub
and
jmp
mov
test
aas
fwait
xchg
add
mov
inc
mov
in
call
mov
mov
lahf
or
stos
lods
pushf
insb
jle
xchg
or
dec
xchg
test
adc
add
insl
subb
and
out
cli
jecxz
xchg
enter
xlat
mov
fwait
testl
mov
stos
outsb
push
cwtl
fstpt
add
jg
push
jno
adc
movsb
in
xor
mov
xchg
rcll
jle
rcll
mov
dec
pop
loopne
and
jmp
sbb
mov
adc
xchg
subb
jb
iret
cmp
push
or
leave
mov
mov
loope
xchg
vmovntps
nop
adc
xchg
add
nop
xchg
add
rcl
jp
push
mov
xor
and
sbb
mov
xorb
stos
inc
xchg
mov
rolb
std
add
jno
push
repnz
testl
rorl
int3
fidivl
sbb
popa
bound
mov
jl
xor
outsb
loopne
clc
mov
push
pop
fnstenv
mov
ret
push
aad
jnp
in
test
out
cmp
imul
jp
addr16
fcoms
lods
jge
xchg
sbb
jmp
and
sbb
pop
cmp
sub
test
jae
adc
xchg
sub
icebp
ror
and
jmp
and
fdivs
xor
push
int
or
mov
in
into
and
mov
and
rcr
add
sbb
push
push
stc
dec
orl
outsl
push
sub
jmp
cs
xchg
insb
add
jecxz
pop
and
fsts
mov
notb
or
out
dec
adc
jmp
inc
jg
push
adc
mov
pop
adc
or
outsl
dec
sub
or
pop
stos
int3
mov
ljmp
jo
xchg
jno
idivl
adc
xor
popf
cltd
xchg
sbb
push
int3
cmp
nop
fucomp
pop
sub
imul
push
inc
jle
hlt
xchg
and
pop
and
mov
push
sbb
inc
mov
pop
or
popf
push
jmp
nop
mov
test
add
clc
cmp
cmp
jbe
es
mov
jecxz
aas
inc
int
lcall
jp
rclb
rorb
mov
xor
mov
rol
rcrb
mov
outsb
dec
pop
rcrb
xchg
out
pop
shl
dec
pop
sub
test
inc
into
add
aas
enter
add
jbe
pop
out
jnp
mulb
mov
movsl
orps
lea
loopne
out
or
jge
pop
lea
loopne
inc
jecxz
xor
cmpsl
jbe
xchg
fsts
push
pop
lds
fildl
fwait
mov
xor
xchg
divb
pop
hlt
addr16
sbb
add
imul
imull
out
andb
jb
cmp
or
sbb
test
sbb
inc
add
sub
mov
repz
mov
dec
imul
sbb
lret
adc
mov
iret
mov
jno
xor
ds
or
xor
test
imul
shr
mov
add
les
jecxz
aad
mov
out
movsl
iret
inc
add
cmp
xchg
sub
outsb
push
push
clc
xor
shrb
stos
mov
and
lods
push
adc
push
or
jae
mov
jns
or
daa
out
cmp
cmp
sarl
mov
cmp
adcl
xor
push
scas
test
xor
cmpsl
and
sub
push
add
mov
pop
adc
xchg
arpl
jnp
fisttpl
stos
jne
mov
sub
inc
sub
inc
aam
sbb
sbb
sahf
cltd
mov
out
dec
push
out
jae
pop
hlt
jp
pushf
pop
imul
inc
inc
inc
ret
or
test
emms
cmp
pop
sahf
inc
xor
cmp
orb
cli
xchg
sar
ret
fxam
mov
adc
outsb
push
mov
pop
roll
out
jbe
into
xor
sbb
add
dec
clc
aas
test
pop
mov
ljmp
xchg
sti
mov
push
aad
push
lods
int3
mov
sar
xor
sbb
mov
mov
iret
aam
stos
fisttpll
hlt
xlat
add
sbb
xchg
push
arpl
xor
and
pop
inc
fsubrs
das
cmc
out
pop
mov
xor
int
inc
out
sub
aam
dec
nop
fs
std
or
jge
test
outsl
lds
lret
xchg
mov
dec
push
pop
sub
paddd
daa
xor
adc
lds
mov
push
nop
icebp
dec
xchg
xor
sbb
and
jno
jbe
pop
stc
js
cmp
gs
pop
adc
add
pop
and
fmull
adc
std
push
jae
mov
adc
dec
fcompl
lods
lds
sbb
aam
mov
cmp
pop
lods
cli
cld
jne
insl
mov
push
mov
dec
movl
repz
les
jle
xchg
push
pop
jnp
mov
sbb
in
into
mov
cmpsb
pushf
pop
adc
stc
imul
in
icebp
jns
in
mov
cmp
xchg
test
ss
sub
sbb
shll
xchg
and
sbb
and
sub
mov
sub
das
cmp
hlt
cmp
sub
fmulp
int
jmp
loopne
sti
push
test
out
stos
movsb
pushf
cli
and
cmp
shll
sub
hlt
sbb
orb
add
lahf
in
std
jge
mov
pushl
mov
popa
lret
rcll
xchg
sti
roll
subb
pop
push
inc
cwtl
adc
jns
aad
and
lods
aad
push
sbb
cmp
xor
mov
shlb
xchg
mov
outsl
cli
xor
cmp
xchg
fwait
lods
mov
loopne
std
dec
arpl
xchg
add
xchg
ds
jbe
mov
mov
cmpsl
xor
xchg
test
push
mov
xchg
jne
rorb
push
push
clc
iret
shr
inc
mov
cmp
fistps
cmc
dec
inc
jnp
clc
xchg
xor
jmp
ficoml
lcall
sbb
cs
and
adc
imul
xchg
fwait
test
xchg
je
leave
in
imul
gs
mov
das
jo
xchg
ret
repnz
jb
cld
sub
in
push
dec
and
jp
mov
dec
dec
jno
idivb
xchg
in
rclb
jg
lcall
nop
jg
or
and
and
fidivrs
and
mov
inc
add
push
push
push
pop
xor
or
pusha
cmpsb
push
xchg
es
push
pushf
mov
fiadds
and
nop
lahf
lcall
push
dec
push
addb
cltd
mov
out
lea
int
mov
jo
sbb
jmp
xchg
cmpsb
daa
mov
xchg
rol
aas
mov
jo
mov
popa
scas
xor
popf
inc
pop
inc
dec
sarl
arpl
or
je
aam
shll
shl
mov
adc
mov
push
inc
pushf
cld
mov
in
jmp
int3
or
sbb
mov
mov
enter
std
xchg
jae
out
in
lcall
xor
popf
mov
rcrb
xor
fsubrs
and
into
push
clc
in
xor
nop
lret
and
outsb
add
or
imul
inc
ss
into
testl
xor
ljmp
scas
mov
lock
jbe
pop
das
outsb
adc
imul
or
sub
push
push
pop
or
jl
leave
inc
leave
mov
mov
mov
adc
or
or
jp
popf
fsubs
xchg
jnp
stos
xor
xchg
ret
inc
push
lock
into
mov
jns
or
js
test
or
xchg
xor
enter
jb
ficomps
mov
push
jmp
mov
inc
jb
popa
cmp
push
inc
aaa
arpl
cltd
and
adc
hlt
inc
xlat
xor
scas
mov
and
test
addr16
dec
dec
aam
sub
mov
add
stos
fisubrs
adc
mov
or
ret
popf
xchg
push
ljmp
repnz
mov
imul
adc
dec
push
dec
stc
fldenv
inc
fucomip
sbb
jl
fadd
rclb
pusha
xchg
mov
jbe
push
incb
push
out
cld
out
dec
mov
mov
pop
mov
cmp
int3
cld
mov
subl
scas
jb
cld
cltd
test
stos
loop
test
mov
ret
xchg
aad
xchg
in
xchg
ljmp
or
outsl
jmp
enter
xchg
push
je
sub
or
cmp
dec
cmp
mov
mov
and
or
shll
sahf
into
cmp
js
mov
lock
lods
pcmpeqw
sbb
jnp
or
sub
loopne
rcll
sub
ret
lock
ljmp
iret
fdiv
icebp
pop
adc
pop
or
jne
inc
addl
add
stos
fs
or
mov
int3
movsl
pop
mov
mov
xchg
call
aas
stos
adc
add
add
pushf
stc
repnz
mov
into
aas
pop
fwait
out
xlat
xor
xor
in
mov
imul
and
aam
enter
pop
in
fs
int
jbe
push
adc
test
sbb
and
push
pusha
push
inc
mov
and
movsl
sbb
loop
mov
or
sbb
out
and
push
dec
jl
xchg
sub
out
mov
cmp
jle
jo
aaa
mov
popf
sbb
mov
sub
jecxz
dec
or
jmp
jbe
test
sub
jmp
jno
sbb
cmp
pop
int
push
push
cli
inc
rolb
mov
mov
jno
addr16
or
sbb
adc
lahf
jge
lds
bound
xchg
jns
dec
pop
cwtl
add
inc
jne
mov
pop
stos
add
sub
test
imul
add
shll
mov
lock
dec
push
mov
aas
jg
mov
pop
es
sbb
or
sub
jne
push
cs
lock
imul
andb
and
or
lcall
testb
fisubl
xchg
pop
mov
push
inc
pop
xlat
aaa
sbb
jg
mov
cltd
not
cltd
fidivrs
rcl
in
cli
push
or
xchg
pop
mov
movsb
je
repnz
push
pop
or
into
dec
dec
sbb
add
add
cwtl
outsl
xchg
push
in
popl
mov
adc
hlt
or
push
ffree
add
es
sbb
mov
frstor
mov
sub
int
adc
imul
shll
xor
jnp
sti
fstpl
cltd
jbe
cmp
inc
add
push
pop
test
in
mov
cmp
jl
data16
nop
push
sahf
add
push
stos
pop
aam
lcall
push
lods
jmp
mov
push
add
std
and
dec
out
stc
andb
push
xchg
xorl
mov
adcb
and
xlat
and
or
or
sbb
cmp
adc
jp
inc
fdivs
pop
mov
mov
imul
int3
insl
mov
fistps
arpl
jl
arpl
jg
cmpsl
and
or
cltd
addr16
dec
push
mov
stc
xchg
dec
shl
mov
sub
decb
int3
xor
sbb
lods
add
push
dec
arpl
in
adc
leave
lods
test
pushf
fsubs
out
ds
inc
cld
xlat
stos
mov
rcll
and
jecxz
stc
add
push
aad
mov
add
int3
je
xchg
add
testb
loop
movsb
pop
pop
sub
inc
mov
fwait
sbb
cmpsl
fdivrl
jp
mov
jo
dec
or
sti
add
xchg
pushl
std
rol
xchg
sub
inc
shrl
movsl
fldcw
test
push
cmp
popf
xor
inc
xlat
testl
loope
jo
fwait
sub
pop
xor
mov
ljmp
mov
ficoms
nop
cmp
daa
or
inc
pushf
jle
inc
xchg
out
dec
mov
and
lods
sub
daa
sub
dec
xchg
mov
fcomi
xor
shr
sbb
shrb
arpl
mov
xchg
and
sbbb
pusha
mov
sbb
and
fnstenv
dec
test
fs
nop
jnp
and
xchg
xor
imul
stos
sub
pop
mov
clc
or
movsb
test
cmp
or
and
push
xor
fxch
or
jae
pop
lahf
cld
test
or
outsb
mov
ljmp
enter
aaa
loope
adc
clc
jg
dec
out
sarl
push
or
cmp
repnz
in
sub
push
icebp
cmp
pusha
cs
arpl
inc
jbe
aad
sbb
repz
mov
scas
mov
dec
push
inc
lods
jae
sti
gs
shr
ds
inc
pop
into
cli
mov
cli
cwtl
insl
mov
and
in
jecxz
dec
sub
xor
and
test
rclb
dec
jbe
mov
cmp
pushf
mov
fwait
mov
enter
lods
leave
mov
jno
mov
not
and
push
mov
icebp
push
adc
mull
data16
sbb
ficoml
pop
pop
or
shr
insb
adc
cvtps2pd
xchg
or
rcrl
inc
jmp
pop
jg
jmp
mov
repnz
scas
out
sub
outsb
jge
outsl
cmp
mov
push
inc
xor
xchg
xchg
xchg
cltd
pop
cmp
and
mov
cmpsl
es
lahf
xchg
or
ret
push
pop
mov
add
ret
sbb
add
add
jle
dec
aas
fnstsw
les
fcomip
inc
pop
rclb
mov
sbb
cld
rcrl
push
push
ljmp
or
fisubl
into
pop
lods
jp
jmp
stos
inc
pop
fwait
inc
out
mov
jg
insl
fdiv
in
ja
addr16
pusha
mov
add
cwtl
push
fs
cmp
lahf
mov
fs
or
int3
push
add
lcall
xchg
add
cltd
addr16
data16
ss
sbb
xchg
adc
cmpl
or
rolb
loope
mov
lret
xchg
popa
cmp
sbb
xchg
test
push
dec
in
add
rcr
sub
mov
ret
out
jmp
in
add
shlb
push
bound
addr16
push
pop
sbb
rolb
mov
shrb
xor
dec
std
or
jno
or
mov
dec
pop
and
xlat
cmp
pop
push
push
lds
shlb
mov
test
inc
xorl
dec
xchg
das
aaa
movsl
and
sbb
std
mov
push
push
jl
jl
xlat
or
int3
and
push
out
aaa
and
aaa
lods
adc
cwtl
dec
mov
ret
jnp
movsb
fs
pop
lret
dec
into
sbb
in
sbb
sub
lahf
test
movsb
pop
test
scas
or
sub
xchg
sbb
mov
jo
mov
cmp
mov
rcrb
inc
push
adc
inc
cltd
mov
sar
dec
sbb
sbb
mov
cli
sahf
insl
mov
out
cmc
cmp
mov
pop
lcall
sbb
test
cltd
or
mov
pop
mov
jge
jle
pop
push
arpl
sub
loope
and
push
mov
push
fucompp
je
negl
hlt
pop
and
lahf
cli
ja
jns
clc
jmp
je
aad
mov
xor
push
outsb
pop
cmc
dec
cmpsb
cmp
pop
in
aas
and
mov
inc
lret
repnz
mov
cmp
lret
dec
inc
dec
leave
adc
xchg
xchg
cltd
jg
std
and
fcomps
xchg
ret
loope
jnp
test
movsb
outsl
subl
cmp
cmc
adc
pop
shl
das
xchg
inc
movsb
inc
lods
xor
jmp
cmpsl
daa
jmp
jo
xchg
sbb
out
xchg
jg
mov
test
repnz
adc
cmp
sbb
scas
insb
inc
inc
lea
push
pop
mov
mov
fisubs
push
jecxz
push
add
mov
loope
ror
push
xor
aas
jmp
repnz
xchg
push
movsl
fsubrp
aaa
scas
or
ret
gs
inc
fbld
cmpsl
adc
cmp
xorb
pop
mov
lods
or
xchg
fsub
dec
jmp
push
and
push
aam
hlt
fs
imul
xor
jmp
mov
addr16
xor
mov
add
shrb
in
mov
inc
lock
mov
outsb
js
pop
arpl
dec
mov
sahf
push
push
and
lret
sub
add
xchg
xor
lods
insb
addr16
arpl
pusha
imul
decb
inc
movsl
jl
jp
bound
mov
add
lcall
popf
pop
popa
or
mov
shr
and
ja
insb
ret
out
pop
sti
mov
push
fadd
dec
push
lds
ljmp
outsl
out
jno
test
out
flds
jl
inc
mov
jns
push
enter
jne
xlat
popl
addl
clc
scas
sahf
mov
pop
movsb
rclb
mov
bound
fstps
lret
fistpll
das
das
int3
pop
mov
out
push
sahf
xchg
dec
push
fimull
mov
jo
xlat
scas
dec
rolb
fwait
sub
adc
stc
xor
mov
stos
cmp
pusha
loope
test
lahf
sbb
and
jnp
gs
mov
int
ss
lds
push
xor
mov
mov
int3
jl
push
leave
inc
xchg
test
cmp
imul
movsl
int
sub
lret
movups
sar
mov
or
imul
orb
or
fmuls
into
sbb
insl
in
xchg
das
dec
lods
xchg
jle
sub
sub
adc
pop
push
mov
cmp
scas
mov
sti
pop
outsb
dec
stc
lds
adc
push
push
pop
movsb
fildl
dec
push
xor
or
addr16
pop
push
or
xchg
xchg
mov
lcall
mov
je
aam
fwait
cmpsl
jg
sahf
in
mov
addr16
mov
js
jnp
cmp
jecxz
jmp
xor
cmp
and
mov
bound
mov
cwtl
pop
push
insl
sub
test
cmp
mov
iret
pop
pushf
lcall
jle
mov
jae
cmp
int3
push
gs
cli
xchg
filds
lock
mov
subb
jbe
shll
push
inc
add
and
cmp
sarb
fldl
cmp
daa
add
mov
xor
test
cltd
lods
sarl
mov
sbb
int
or
leave
fidivs
xorl
ss
in
repz
dec
shll
roll
cmp
mov
adc
cmp
pop
cwtl
mov
fmull
es
xchg
daa
push
pop
int3
sti
push
push
xlat
pushf
pop
adc
push
jmp
sbb
push
pop
out
icebp
mov
inc
jl
sbb
int
push
jmp
repnz
push
dec
cmp
lds
pop
push
add
pusha
or
or
and
lret
repz
shll
mov
push
out
and
pop
loop,pn
inc
shll
push
sbb
jmp
cmpsl
int
out
inc
mov
jne
jno
fninit
inc
cmp
sbb
xchg
push
mov
lahf
repz
dec
clc
mov
roll
cld
pop
mov
in
rclb
and
mov
movsb
ljmp
push
adc
icebp
inc
enter
lretw
add
xor
jns
out
adc
int
pop
jge
aaa
push
leave
sahf
cld
mov
fwait
mov
fs
and
mov
loopne
mov
pop
imul
pop
cmp
jecxz
or
pop
push
mov
cs
int3
ds
repz
cmp
mov
repnz
lods
call
arpl
pop
push
std
mov
push
add
jge
repnz
rcll
adc
mov
outsl
or
leave
pop
xchg
pop
mov
dec
push
pop
xlat
sti
test
jae
ja
fucom
lds
pop
sbb
das
pop
and
mov
lods
rcrb
sbb
fcmovb
xchg
dec
inc
aas
push
push
rclb
jb
test
adc
mov
scas
dec
cmp
mov
inc
loope
jle
pop
pop
fadd
xor
sbb
push
jp
ret
or
inc
repz
inc
ja
sbbb
sbb
fmul
cmpsb
mov
pop
pop
into
lcall
xchg
ret
outsb
xlat
xor
out
mov
cmp
pop
xchg
sti
int
xchg
sahf
jmp
or
or
pop
sbb
inc
adc
mov
aaa
xchg
and
sub
xchg
mov
fdivs
push
dec
pop
or
cmpsl
jg
xor
stos
out
mov
lret
mov
cmp
xor
mov
jns
popl
lods
jbe
out
imul
scas
mov
cmp
test
cwtl
mov
dec
xchg
pop
jnp
inc
sbb
mov
jne
test
ljmp
and
std
call
mov
pop
loop
outsl
scas
inc
push
dec
inc
scas
jge
jle
and
outsl
add
fwait
aas
add
lcall
je
push
adc
sub
je
scas
cli
and
xor
stos
sbb
xchg
add
js
lods
cmpsl
sbb
xchg
adc
jp
xor
xchg
pop
mov
jb
push
dec
popf
sbb
ret
dec
std
and
dec
xchg
divl
cmp
imul
sbb
jl
mov
inc
aas
mov
lods
outsl
jns
jmp
jle
push
loop
rol
dec
popa
pop
notb
jne
jns
cmc
leave
sub
std
push
popa
ja
call
rcr
andb
pop
pop
mov
sub
xchg
adcb
mov
cmp
and
sub
inc
int3
or
arpl
ds
mov
jl
add
cwtl
mov
push
cmpsb
aam
data16
xchg
test
jo
test
inc
xchg
adc
imul
sbb
dec
adc
addb
mov
push
dec
in
xchg
int
or
ljmp
pop
fdivrp
xchg
rcrl
mov
xlat
cmp
das
ret
shll
mov
pop
mov
dec
push
and
jp
ja
dec
adc
clc
pop
int3
or
fcomps
test
fldcw
xchg
sarb
mov
jmp
movsl
add
push
or
adc
add
pop
adc
sarb
pop
xlat
adc
or
arpl
call
subb
mov
mov
les
push
add
mov
xor
or
or
sbb
shlb
mov
or
int
push
imull
cmp
sbb
pop
lcall
scas
pushf
cmp
inc
push
hlt
sub
lods
push
icebp
es
mov
and
subl
sub
not
aad
mov
fildl
ja
xor
and
jne
inc
push
in
arpl
fldt
test
add
ffree
mov
addr16
or
inc
js
push
mov
jmp
outsl
cli
and
iret
inc
or
mov
pop
in
sub
lcall
add
or
cmp
inc
shlb
push
hlt
addr16
sbb
imul
out
lods
adc
ljmp
jmp
cmpsl
jae
push
inc
xor
cwtl
push
daa
fists
sub
je
clc
mov
inc
mov
repz
pop
sbb
lret
repnz
das
cmp
lds
pop
lahf
ror
pop
cmp
mov
mov
adc
ds
lods
adcl
push
loopne
sbb
ficoml
in
jle
pushf
fstpt
jp
inc
call
sub
or
xor
outsl
push
pop
cmpsb
or
adc
rcl
ret
xchg
or
addl
clc
popa
gs
add
jmp
lods
dec
repnz
negl
packssdw
scas
mov
mulb
into
inc
cltd
sbb
fcos
push
mov
sti
aaa
or
inc
test
ljmp
cmp
or
mov
xchg
ret
mov
pop
or
jb
sub
jae
outsl
arpl
or
jno
data16
cmp
xchg
roll
inc
xor
push
xchg
mov
shlb
and
shl
push
jmp
addl
dec
cmpl
cmp
mov
mov
push
inc
lret
and
xchg
pop
imull
or
mov
bound
xchg
ljmp
adc
and
add
or
inc
shr
cli
adc
adc
andl
push
mov
test
cltd
mov
aaa
cmp
adc
xor
std
mov
enter
out
in
popa
test
scas
push
mov
popa
dec
mov
inc
mov
cmp
mov
out
sbb
or
mov
fstpt
ja
xchg
lock
leave
dec
mov
xchg
mov
adc
ficompl
xor
call
or
mov
es
pop
or
loopne
cs
dec
arpl
xlat
add
add
iret
lods
imul
jge
pushf
out
jae
jo
rorb
pop
push
inc
outsl
inc
or
lcall
mov
adc
sti
shll
or
lahf
adc
lods
xor
int
dec
mov
xchg
shlb
pop
jb
movsb
ror
ljmp
mov
out
pop
mov
mov
aaa
mov
fwait
jp
push
dec
into
xor
iret
filds
cltd
jbe
mov
gs
mov
fsubl
mov
jmp
sbb
repnz
adc
jae
mov
adc
dec
xor
jp
cmpsl
mov
add
dec
lahf
inc
aas
sbb
sbb
dec
jp
jge
stc
mov
rcl
sbb
mov
mov
out
pop
js
mov
fwait
bound
cmp
leave
mov
pusha
xor
pop
fwait
mov
and
inc
loopne
mov
leave
arpl
adc
mov
jg
and
test
add
mov
int3
inc
mov
scas
push
cmp
std
int3
add
mov
insb
int
sbb
cmpsb
add
in
push
sub
lock
fsubrp
pushf
adc
xchg
insb
adc
popf
rorl
in
dec
aas
aad
and
push
pop
test
test
xor
into
adc
test
jp
aam
in
push
movsl
adc
lcall
lods
inc
and
mov
pop
je
sbb
lcall
frstor
mov
jae
sbb
inc
ja
jns
jnp
cmc
sahf
lods
or
push
rol
fstpl
popa
and
ja
mov
rorl
daa
sbb
sbbb
cmp
cmp
push
sar
mov
push
add
fwait
aaa
xor
cmp
cli
add
orb
inc
pop
div
jo
out
in
or
cld
int3
data16
push
scas
idivl
and
sub
fistps
lcall
jp
dec
stc
mov
cmp
addl
ret
inc
or
sub
shlb
fcmovne
pop
stc
adc
fadd
shrb
idivl
inc
jne
pop
cwtl
sub
adc
pop
std
fldenv
nop
xor
xor
outsl
push
push
pop
adc
sbb
jnp
mov
adc
mov
outsb
xchg
out
out
add
and
mov
in
push
inc
sub
adc
inc
fstpl
jno
push
movsl
cli
jecxz
loopne
mov
jecxz
lods
pop
jecxz
ljmp
pop
xchg
sbb
inc
pop
fistps
dec
pop
stc
and
movsl
aaa
jnp
add
jge
mov
xchg
lea
jg
add
mov
sahf
or
popf
subb
sbb
add
in
cmpsb
loopne
cmp
and
lahf
shlb
insb
add
cltd
stos
add
or
push
insl
dec
xchg
out
add
cmp
lods
bound
adc
cmp
in
jno
sub
jmp
cmp
sub
jbe
add
xor
sbb
push
outsb
push
xchg
adc
mov
test
mov
xor
outsl
xchg
cltd
xor
es
mov
leave
push
jne
dec
loopne
sbb
dec
test
ret
inc
xchg
ret
sub
xchg
mov
cld
xchg
push
cmp
push
jp
sub
adc
aas
je
test
dec
imul
adc
popl
adc
or
leave
add
outsb
xchg
or
xchg
ret
int
jae
movsl
mov
in
fs
mov
data16
dec
bound
fisubl
popa
test
inc
pop
out
mov
cmp
adc
xor
push
mov
push
fistps
cli
mov
cs
je
jne
cmpsl
in
dec
aad
mov
ljmp
pushf
adc
inc
push
sbb
scas
dec
push
imul
push
pop
cltd
addr16
out
ds
sub
adc
xchg
add
addl
insb
push
push
test
cmp
xchg
fistpll
xchg
pop
cmp
hlt
jno
sahf
sbb
scas
or
xor
adc
sar
push
inc
mov
xor
mov
test
push
mov
pop
mov
ret
repz
mov
pop
or
out
loope
pop
movsb
clc
mov
pop
push
outsb
repz
fistpl
enter
push
mov
repz
out
or
push
lea
enter
mov
test
dec
addr16
pop
jecxz
push
je
dec
sbb
lret
lcall
push
lret
je
pop
jmp
insl
lods
sbb
mov
mov
ret
add
les
sbb
xor
pop
adc
sbb
dec
sbb
xorb
les
sub
xor
loop
and
in
pop
dec
faddp
call
arpl
stc
lret
jns
mov
rcrl
lods
fyl2xp1
lret
fwait
movsl
and
adcb
dec
jns
sbb
xchg
movl
cs
cld
lret
mov
jb
data16
inc
sub
outsb
cmp
adcb
fcompl
dec
out
inc
push
jno
fcmovnb
add
jmp
adc
in
mov
in
pop
xor
je
pop
aas
or
mov
sub
push
insl
add
out
lret
bound
imul
mov
sbb
inc
and
movsl
xor
dec
lods
das
dec
bound
sti
mov
push
js
mov
sbb
dec
add
push
sub
hlt
lods
mov
cli
mov
adc
mov
loopne
adc
dec
lea
mov
xchg
xor
jb
jge
xorb
int3
fwait
inc
jnp
adc
mov
mov
fildl
cltd
out
add
mov
into
xorl
inc
sbb
insl
push
mov
fcoml
call
adc
js
popa
push
cmp
inc
mov
jl
mov
jae
jg
mov
out
mov
out
mov
icebp
imul
mov
xor
xchg
call
scas
scas
sbb
test
inc
leave
sub
ds
repz
aaa
cld
xchg
dec
xor
sub
jp
lods
lret
aaa
sbb
call
gs
mov
inc
decb
mov
xchg
das
lods
inc
mov
xor
mov
jns
cmp
inc
mov
jns
xchg
xchg
xchg
ja
imul
cmp
dec
push
adc
pushf
and
or
roll
cmpsl
outsb
push
jbe
lret
jmp
and
notl
mov
jp
adcl
fisttpll
mov
inc
loope
daa
mov
fcom
mov
mov
mov
pushf
sbb
sbb
stc
insl
gs
push
sbb
dec
mov
loop
or
jb
add
ds
in
repnz
sub
cli
push
out
loope
addr16
dec
mov
xchg
cmc
sbb
mov
dec
adcb
lahf
int3
lret
mov
inc
push
out
dec
and
or
test
in
enter
fildll
push
ret
and
mov
xchg
das
clc
fidivs
jle
mov
dec
push
mov
jnp
jbe
ljmp
and
sub
sub
pop
pop
call
jl
pop
cmp
xchg
sbb
and
dec
or
inc
test
dec
inc
jbe
or
add
fdivl
mov
mov
into
std
jle
add
lret
icebp
stc
adc
rcl
std
scas
mov
subl
sub
gs
or
xorb
stos
and
test
xchg
addl
add
movsb
sbb
stc
or
lea
push
jmp
inc
lods
or
pushl
dec
jle
dec
in
gs
cmpsb
dec
scas
inc
and
aas
pop
mov
dec
cli
aaa
popa
out
jecxz
mov
and
nop
inc
inc
in
pop
pop
lods
push
pusha
push
leave
mov
push
mov
mov
movsl
or
inc
push
cmp
adc
sti
xchg
cwtl
xor
cli
or
mov
testl
dec
pushf
inc
fbld
imul
scas
mov
rolb
fisubs
rorb
add
jmp
sahf
mov
mov
jecxz
in
jge
sbb
add
cld
cmp
mov
jo
push
mov
imul
xor
add
test
pop
add
inc
rcrb
in
jp
mov
pop
aad
push
sbb
shrl
fucom
ret
rcll
push
int
shr
pusha
xchg
js
adc
fisttps
cwtl
shr
nop
dec
push
cmc
cmp
stc
jle
dec
mov
inc
jp
cli
jmp
xchg
jae
cmp
adc
inc
out
fwait
jmp
jne
xor
sbb
mov
ror
xor
ds
ret
jge
xor
iret
inc
aam
xchg
sbb
jl
mov
das
movsl
test
aam
por
test
dec
rclb
add
adc
xor
cs
gs
add
fisubl
xlat
mov
mov
push
or
sub
shll
xor
dec
pop
and
outsl
loopne
pushl
mov
mov
dec
dec
and
inc
movsl
pop
jmp
pop
xchg
jmp
popf
add
xor
out
mov
stos
test
push
push
adc
mov
add
and
test
aam
or
loope
push
roll
pushf
icebp
adc
sar
rclb
xorl
xchg
repz
pop
sub
adc
inc
adcb
mov
mov
mov
ror
pushf
cmp
mov
std
rcll
hlt
and
insb
stc
jb
push
push
in
hlt
or
in
xor
push
sarb
mov
out
mov
jecxz
push
flds
bound
sbb
lcall
movsl
cmp
mov
push
arpl
cmpsb
lea
mov
xchg
or
pop
sub
enter
adc
hlt
xchg
enter
adc
loope
xor
jge
imul
cmp
add
push
dec
mov
ja
lea
jmp
and
lahf
test
and
jge
mov
addr16
cli
pop
outsl
sub
int3
sbb
xchg
test
lods
sarl
es
aas
or
add
dec
fildl
movsl
xor
push
inc
pop
orl
jnp
imul
adc
mov
popf
mov
lock
and
cmp
in
push
push
xchg
xchg
fwait
lock
inc
mov
sbb
xlat
jb
dec
lret
rcll
dec
cli
or
jge,pn
sbb
xchg
dec
sub
sbb
mov
out
stc
xorl
ud2
loopne
jnp
lahf
sbb
mov
push
push
inc
movsb
scas
xor
xchg
mov
mov
push
push
pop
mov
push
xchg
scas
out
mov
nop
xor
adc
or
mov
add
sbb
vaddsubpd
test
xchg
movsl
mov
and
imul
cwtl
ljmp
mov
or
xor
rclb
cld
xchg
sbb
xchg
pop
cli
lret
pop
or
mov
das
mov
decb
es
pop
daa
add
inc
popa
fdivrs
scas
cmpb
xchg
scas
bound
jb
dec
push
push
add
xchg
arpl
inc
loop
pusha
std
cwtl
add
movsl
and
in
jno
out
mov
aad
xor
mov
inc
in
jg
jecxz
sub
ja
test
mov
cltd
js,pt
cmpsb
xchg
pop
cmp
sbb
mov
das
sub
stos
int3
xchg
dec
adc
add
or
outsb
adc
fstps
or
sbb
outsl
mov
or
adc
pusha
dec
mov
cmpsl
pop
sub
or
bound
lret
popa
cmp
jae
and
sub
lods
rolb
fisubl
popa
insb
jne
mov
int
mov
pop
or
inc
imul
mov
into
jbe
xor
iret
iret
movsl
dec
sub
insb
or
mov
call
lods
jl
push
mov
jnp
adc
loop
cltd
dec
mov
lret
adc
testb
into
lods
fcompl
push
xchg
cltd
sbb
fsubrl
jno
sar
sub
repnz
insl
or
dec
jno
in
and
mov
dec
dec
jg
xchg
fisubrs
fcoms
loop
add
dec
sub
cwtl
push
jg
out
fwait
imul
jecxz
mov
repz
pop
insl
xchg
dec
and
in
fdiv
mov
popa
ret
xchg
cltd
or
pop
push
xchg
or
push
inc
rcr
stos
fiadds
push
cwtl
push
add
xchg
jbe
sub
inc
jecxz
xor
mov
inc
adc
rcr
stc
inc
in
aad
and
sahf
mov
adc
push
dec
adc
rcrb
pop
cwtl
push
mov
popa
mov
movsb
dec
cmp
inc
in
jg
xchg
push
xchg
mov
and
int3
sbb
xchg
aad
adc
loopne
xchg
aad
ret
add
aad
sub
cld
rcr
and
movb
sbb
inc
lds
sub
inc
mov
fcmovnb
xchg
or
mov
add
out
jae
orl
sbb
stc
jae
or
lret
lcall
jno
push
inc
push
jp
cwtl
pop
cmpsl
test
adc
decl
imul
call
add
dec
xchg
aad
dec
mov
dec
hlt
jb
jae
pop
push
call
test
fistps
dec
adc
fadds
pushf
ja
in
aad
or
push
sub
mov
mov
out
out
sub
dec
adc
outsb
divb
adc
xchg
dec
add
fnstcw
mov
test
adc
fdivl
repz
dec
out
cwtl
cmpsl
mov
sub
insb
mov
xchg
sbb
push
ffreep
cmc
mov
imul
dec
das
dec
push
test
push
shrb
pop
dec
pusha
adc
mov
mov
jno
fnstenv
sub
mov
lahf
int3
sbb
push
fcoms
imul
adc
orb
adc
dec
repnz
sti
inc
mulb
mov
cmp
jmp
or
mov
xchg
cmp
mov
ds
call
lea
pop
aam
lea
stos
cwtl
outsb
mov
mov
mov
aam
pop
inc
sub
aam
adc
push
aad
dec
in
imul
or
rorl
xchg
lcall
sbb
out
xchg
inc
bound
popa
stc
stos
pop
xchg
scas
mov
ljmp
add
xor
push
and
mov
bound
in
xor
dec
add
aam
mov
and
sub
sarb
xchg
mov
sbb
shrb
jb
in
movsb
cmpsl
aaa
fildl
movsb
out
push
mov
inc
in
fcomps
adc
inc
outsb
cmp
repz
adcb
sbb
outsb
pop
or
push
dec
cltd
jb
add
scas
cltd
cld
jns
call
fnstsw
mov
jne
push
adc
dec
fdivp
pop
and
enter
xlat
cltd
pop
dec
push
repz
or
adc
xor
or
shll
push
pushf
clc
fdivrs
lods
pushf
xor
add
in
or
sbb
add
imul
push
mov
xchg
adc
stos
push
jns
mov
jb
loope
jb
inc
std
mov
ret
out
push
ss
inc
rclb
ljmp
shll
dec
inc
jecxz
adc
sahf
rorb
xor
outsb
pop
dec
je
mov
dec
les
push
mov
lea
lret
fwait
mov
xchg
cmpl
push
sysret
div
xchg
mov
insb
xchg
les
push
sahf
or
inc
cs
les
mov
xchg
xchg
lahf
lahf
iret
cmc
mov
jge
xor
or
push
cmp
in
aas
clc
repz
or
mov
popf
mov
mov
and
pop
push
es
cmpsb
dec
test
popa
sub
test
cld
daa
mov
xchg
aas
enter
or
leave
add
jns
cmp
xchg
dec
push
and
mov
jg
addr16
sahf
es
xor
pop
jecxz
cmpsl
mov
movsl
xor
lahf
cmp
sbb
sub
add
sarb
pop
scas
push
sbb
stos
imull
push
and
das
stc
imul
daa
ss
cmp
out
call
int3
pop
outsl
std
ja
mov
mov
sub
sub
cltd
jne
pop
cmp
sti
xor
mul
dec
or
xchg
mov
fiaddl
jge
pusha
testl
add
adc
push
push
stc
sub
mov
es
cs
test
cmp
inc
push
pop
xchg
adc
jb
lret
lea
mov
mov
xchg
xlat
sbb
pushf
aaa
sbb
mov
in
inc
cmp
daa
dec
mov
sub
or
sbb
sub
jp
adc
call
xchg
addr16
sbb
es
repz
adc
adc
pop
enter
and
test
incb
sub
cld
repz
and
hlt
test
mov
mov
aam
xor
rorl
pop
cli
mov
cmpsb
and
cmp
cmp
pop
mov
add
or
out
or
sub
in
jp
inc
sub
test
bound
xchg
cmp
mov
adc
mov
inc
and
adc
pusha
roll
sub
popa
outsb
cmc
sub
je
addr16
xor
cmp
adcl
out
cmp
mov
fsubrl
push
add
jb
mov
shll
and
push
xor
enter
xchg
sbb
stos
mov
xlat
cmpsl
dec
push
int3
push
je
cmc
in
or
jo
or
add
push
cld
pop
hlt
inc
xchg
sarb
or
decb
std
xor
xor
or
mov
mov
cmp
cwtl
xor
jge
cmp
sub
out
filds
ljmp
push
pop
dec
loop
mov
pop
ret
mov
mov
shr
mov
mov
aaa
jle
pop
test
jmp
push
fisttpl
cld
mov
mov
sub
mov
pop
jecxz
in
pop
adc
shrb
rcll
xor
dec
mov
lods
out
push
imul
outsl
push
into
aas
lods
push
mov
cmp
arpl
xchg
loope
out
inc
lcall
out
xchg
sbb
mov
xchg
stos
inc
mov
jmp
push
xor
int
add
iret
xor
or
lret
shrb
rcrb
adc
fcomp
fisttpl
xorb
aas
add
push
pop
push
movsb
push
add
xor
sub
or
sti
rorb
mov
negb
mov
inc
push
rcl
cmpsb
stos
imul
or
jb
lcall
push
fistpll
imul
rolb
dec
ret
push
lret
in
dec
sub
loope
adc
pop
mov
std
mov
xchg
les
imulb
sub
outsl
aaa
cmpl
sbb
lds
or
push
xor
push
repz
dec
mov
mov
cmp
lock
js
jbe
mov
sub
dec
xor
or
jbe
cmp
je
icebp
or
xor
jecxz
cmp
lods
insb
mov
call
mov
cmpsb
sahf
add
daa
push
cmp
clc
xchg
cmp
jo
add
test
pop
lock
dec
sbb
stc
fwait
pop
add
test
fld
mov
and
add
insb
aam
pop
lahf
sbb
inc
imul
inc
and
pop
popa
xchg
and
imul
sahf
fdivp
sub
xchg
pop
aas
inc
sarl
sub
int
cvtps2pd
in
cmp
adc
push
jae
mov
or
bound
mov
pop
enter
add
mov
fldz
or
sub
insl
jge
out
adc
shlb
add
push
adc
jg
in
fwait
ja
cmp
add
sub
cmp
enter
pop
or
ficompl
mov
jmp
pusha
ss
mov
xchg
sahf
insb
push
shr
out
sub
cs
pop
inc
cltd
add
jmp
lods
cmp
lds
dec
dec
mov
pop
negl
pop
xor
push
cli
mov
add
sub
sub
xor
stc
cmpsb
pop
adc
out
jp
fidivl
ret
dec
pop
gs
sbb
mov
into
faddl
xor
adc
pop
dec
xor
mov
push
icebp
adc
fwait
pop
add
dec
mov
daa
mov
addr16
hlt
cwtl
jecxz
jae
jg
xor
out
or
insb
dec
xor
fwait
das
xor
iret
es
dec
je
xor
mov
and
pop
addl
push
sub
shlb
and
cvtpi2ps
push
jo
xor
adc
mov
sahf
lods
sbb
mulb
ret
adc
xor
fs
fmul
movsb
mov
pop
sub
loop
loope
sti
xor
fldcw
dec
mov
mov
icebp
jle
sub
xor
test
movsl
cmp
xchg
sahf
push
bound
pop
outsl
xor
add
xchg
insb
lods
inc
push
out
push
inc
lcall
sbb
scas
cmc
mov
push
xchg
outsl
mov
inc
mov
or
add
jmp
movsb
xchg
and
outsl
mov
or
pop
rcrl
test
dec
inc
test
mov
lret
push
and
push
popf
jg,pn
repnz
xor
cwtl
xchg
inc
inc
rorb
sbb
jp
addr16
ljmp
inc
sub
mov
cli
sahf
fwait
gs
and
push
xchg
fldenv
inc
lods
test
lds
popf
push
xchg
lahf
mov
rolb
cmovs
pop
cld
sub
mov
sub
pop
or
add
lret
pusha
fwait
pop
pusha
das
int
loope
xchg
sub
cmpsb
out
into
jle
jmp
rorb
orl
mov
and
xchg
cmp
call
jbe
xchg
jb
cmp
cltd
jl
das
out
inc
lock
mov
or
insl
sarl
and
adc
repz
cmp
push
pop
fwait
subb
inc
pop
jo
push
jae
jp
data16
call
push
cmp
clc
push
aas
mov
repnz
inc
int3
lcall
jno
sbb
xor
jle
lret
out
mov
sub
jecxz
loop
ss
cs
movsb
pop
or
in
mov
or
cmp
js
fists
inc
sub
mov
shlb
jmp
arpl
mull
arpl
xchg
movsb
lret
jmp
xchg
adc
loope
movsl
hlt
mov
cmc
xor
movsl
mov
xlat
pop
jbe
pop
xlat
imulb
sbb
cmc
cmp
or
nop
dec
clc
adc
aad
jmp
enter
je
mov
push
mov
sub
cld
adc
mov
adc
mull
and
push
mov
xor
loope
cld
into
inc
push
dec
lahf
pushf
and
add
or
repnz
mov
das
lahf
rcrl
scas
xchg
nop
push
cmc
or
lods
imul
pusha
cld
pop
out
or
jns
jl
ss
inc
dec
jbe
sbbl
add
call
scas
adc
orl
insb
test
push
out
mov
mov
loop
sub
mov
mov
stos
fcoml
mov
jnp
rclb
mov
lcall
push
sbbl
jg
js
add
push
sti
jp
lret
in
decb
mov
popf
push
push
xor
cmp
inc
and
adc
jne
jg
loope
jecxz
dec
cmp
stos
outsl
out
or
hlt
pop
scas
negb
cmc
mov
pusha
icebp
pop
outsb
rep
dec
xor
or
xorb
mov
or
in
inc
or
jnp
cmp
fs
call
bound
mov
std
xchg
iret
cmp
sub
fisttps
mov
sub
or
shl
xor
add
xor
imul
pop
xor
jo
sti
sub
popf
inc
in
mov
push
in
cs
fidivl
cltd
cmpsb
mov
loop
in
aaa
fstpl
lret
pop
xchg
sub
ret
test
clc
inc
or
pop
in
push
fs
mov
adc
rorl
adc
out
fcoms
lods
inc
push
jns
pop
sub
adcb
mov
sti
jbe
es
cmp
pop
lret
jae
pop
jbe
das
push
test
cld
and
add
mov
movsb
inc
add
dec
jne
pop
jecxz
jne
pop
fdivl
push
mov
or
fldcw
lods
ja,pt
ret
enter
loope
lret
push
sub
jecxz
sub
std
mov
adc
incl
pop
pop
jl
adc
pop
mov
push
icebp
or
out
inc
ljmp
adc
imul
inc
dec
pop
push
sbb
jge
xchg
jae
push
sub
outsb
fwait
dec
mov
in
mov
jl
imul
arpl
aaa
cli
leave
jb
out
jb
outsb
test
ja
and
jbe
sbb
ret
push
adc
fnstenv
in
out
icebp
sub
mov
test
cmp
adc
cld
or
jbe
sbb
and
into
xchg
shl
repnz
mov
pusha
aaa
push
jmp
insl
push
ret
ds
xchg
pop
rol
add
in
cwtl
jl
cmpsb
nop
push
xor
or
push
jmp
in
movsl
and
mov
or
scas
call
repnz
add
cmc
sbb
dec
mov
jae
les
aaa
bound
add
movsl
scas
scas
push
inc
pop
pop
sbb
mov
addr16
inc
push
subb
shrl
and
or
scas
aad
mov
mov
loope
jns
cmp
cmp
xchg
jae
and
imul
jae
mov
imul
lods
mov
xor
popa
adc
jmp
je
and
adc
or
and
and
push
mov
mov
xor
sti
iret
mov
push
xor
ljmp
out
lahf
mov
movsl
xchg
scas
arpl
or
inc
aaa
aam
push
sbb
add
cmpsl
mov
stos
jnp
sbb
and
test
jae
mov
mov
into
das
xchg
popf
aam
push
sub
inc
shlb
xchg
push
jb
push
pop
popf
xchg
push
je
imul
adc
popl
mov
out
push
sahf
jb
lret
lret
scas
mov
mov
or
loope
lcall
inc
jb
call
sub
jb
jo
mov
cmp
push
popa
sub
cmc
cwtl
sbb
cmp
int
mov
or
xchg
dec
pusha
popa
lret
aas
in
jno
push
add
jl
jmp
push
add
or
pusha
adc
pop
dec
fcompl
in
mov
or
ljmp
adc
jne
movsb
sub
inc
outsb
dec
jne
je
call
ds
loope
lock
loope
movsb
and
jno
cltd
out
fidivrl
cltd
imul
sti
push
ret
mov
dec
mov
repnz
mov
cmp
push
hlt
jl
dec
dec
mov
cltd
test
pusha
add
pop
aaa
jbe
addr16
xor
addr16
cmp
arpl
pop
ret
shrb
inc
cmp
mov
xchg
cmp
or
test
lods
inc
or
mov
xchg
mov
mov
pop
std
repnz
cli
mov
shlb
sub
sub
lret
test
movsb
mov
and
clc
pushf
fdivs
cmp
fimuls
das
scas
xor
in
pop
sub
ljmp
pop
in
daa
add
data16
inc
pusha
popa
xchg
and
sbb
imul
sub
fnstcw
mov
ljmp
sbb
out
fwait
dec
cld
repnz
shll
inc
xchg
cmp
jb
nop
push
rcrl
inc
inc
leave
pop
stos
push
ret
and
sbb
cld
mov
rorb
subb
sbb
or
ss
filds
inc
jge
sbb
icebp
inc
push
cmp
enter
pop
addr16
cld
out
dec
cli
mov
cli
mov
and
icebp
int3
xchg
xchg
or
mov
lock
jmp
mov
insb
pop
int
test
sahf
fs
sbb
daa
nop
hlt
lret
lds
fisttps
gs
adc
adcb
mov
xor
shrb
jnp
repnz
jbe
sbb
lods
shrb
gs
ds
pop
pop
pop
call
repnz
cmp
stos
xchg
je
push
mov
repnz
clc
dec
xor
cmp
andb
mov
xchg
xchg
cmp
cmovl
inc
or
mov
loope
add
jmp
test
ljmp
add
push
in
dec
cmpsl
daa
push
jnp
mov
jns
push
cmp
mov
xor
nop
mov
repnz
mov
fistpll
test
out
sub
loopne
push
popf
int
push
pop
lcall
aad
or
aas
sbbb
and
dec
or
mov
inc
mov
call
xor
xor
rorl
iret
mov
call
cmp
cmp
mov
inc
jmp
mov
or
mov
roll
test
bound
inc
fcoms
js
rorl
inc
mov
lods
adc
scas
jge
pop
mov
push
and
lods
jmp
shlb
in
and
iret
scas
push
movl
jno
push
or
adc
xchg
lds
imul
push
je
jno
ja
data16
lea
ljmp
sbb
scas
stos
in
adc
jmp
push
inc
ret
sbb
push
shll
call
mov
ud2
xchg
push
pop
xchg
mov
pop
jne
nop
in
push
mov
add
rorl
add
push
jno
and
and
push
sbb
rcrb
pop
inc
loop,pt
cmc
imul
daa
add
fs
sbbl
cmp
xor
gs
rorl
mov
push
js
inc
shll
mov
xor
dec
pop
mov
adc
imul
cmc
and
popf
adc
pop
repnz
xchg
divl
lret
push
inc
dec
cmp
dec
scas
rcrb
stos
jne
jmp
pusha
jbe
xchg
testl
push
je
lret
sbb
fistps
jns
loope
stos
inc
xor
insl
mov
push
adc
nop
push
stc
cltd
ret
pop
sub
aad
sarb
test
js
notb
popa
dec
jne
sbb
bound
or
xorb
cmpsb
and
iret
push
movsl
leave
mov
stos
sahf
push
imul
test
and
push
adc
in
mov
imul
dec
add
or
in
adc
pop
shll
adc
movsl
mov
xchg
imul
ja
jg
mov
fnstsw
daa
sub
aad
sbb
sub
insb
cld
adc
imul
pop
inc
xor
cmp
aas
cwtl
dec
scas
ss
xchg
and
xchg
jmp
loop
add
xor
and
fucompp
xchg
popf
push
inc
adc
popa
xor
sbb
jge
fsubrs
sbb
incb
cmpsl
lahf
inc
xchg
or
out
dec
jl
adc
xchg
gs
in
lea
pop
pop
inc
mov
dec
decb
push
lret
xor
xor
ficoms
js
push
in
jmp
push
xor
sub
ret
lods
aad
jae
cltd
dec
fdiv
movsl
andb
lods
jb
hlt
push
add
mov
cld
push
mov
add
sbbl
xchg
cltd
sbb
pop
insl
std
pop
cmpsb
outsl
lcall
mov
test
popa
dec
cmp
bound
scas
push
rcrb
lret
xor
mov
or
loop
mov
outsl
dec
nopl
out
jmp
mov
in
sub
or
in
in
fldenv
lret
jbe
add
in
negb
push
fstl
sbb
pop
lcall
sub
fistps
shrl
fs
mov
fiadds
aaa
fneni(8087
jno
daa
fidivl
and
push
js
dec
adc
add
and
adc
jge,pn
sub
in
jne
jne
pusha
decb
aas
dec
mov
or
mov
jle
cmp
call
std
mov
mov
xlat
sub
ja
rclb
out
jmp
in
stos
xchg
inc
aas
mov
sub
mov
jne
test
addl
mov
push
aam
adc
xchg
push
rorb
mov
adc
out
jecxz
mov
je
mov
aas
pop
adc
pusha
ljmp
add
lods
xchg
pop
fwait
and
aas
fsubr
sub
adc
mov
or
mov
repnz
out
fcmovnu
lds
mov
fistpl
dec
mov
sub
jecxz
subb
sub
icebp
leave
out
and
push
loope
ja
stos
aas
sub
pop
jne
lods
out
sbb
addr16
sti
andb
loop
in
cmc
repz
jnp
imul
repnz
gs
adc
fidivrs
push
psubd
mov
mov
push
inc
xchg
lea
inc
push
jo
pop
fcmovbe
dec
fs
and
sub
adcb
push
cmp
pop
jg
add
loop
adc
pop
push
int
pop
add
push
fld
jecxz
out
adc
push
popa
and
cld
sarl
outsl
push
xchg
mov
ss
rcl
mov
dec
mov
ret
mov
lea
pop
xchg
test
js
xchg
lock
insl
mov
stc
jle
mov
lret
pop
lock
cltd
int3
push
arpl
or
push
ret
mov
ja
inc
sbb
ljmp
mov
jl
mov
cmpsl
jns
jne
xor
jmp
outsb
inc
adc
cmc
jno
adc
scas
jecxz
xchg
inc
pop
js
int3
rcrb
dec
in
pop
or
ror
xor
aam
jne
insl
lods
ja
inc
mov
add
push
jns
bound
cmpsl
xchg
outsb
es
mov
addr16
sbb
dec
cmp
and
scas
lret
mov
inc
cmp
pop
cmpsl
ret
lret
mov
xor
jae
sub
xchg
lret
sbbl
stc
cwtl
hlt
jecxz
leave
mov
mov
popf
pop
imul
or
test
scas
gs
xchg
in
mov
cmpsb
arpl
lahf
mov
fiaddl
stc
cmp
outsb
or
mov
shr
mov
dec
sub
xchg
ds
and
int3
inc
xor
inc
xchg
jb
imul
push
mov
pop
inc
aas
pop
push
and
mov
outsb
xlat
sarb
fsub
cltd
cmpsl
xor
jg
mul
test
cmpsl
pop
leave
lods
cld
jne
inc
dec
je,pn
fidivrl
push
stos
xor
hlt
push
adc
outsb
js
push
sbb
or
inc
arpl
ljmp
loope
repz
and
out
jb
aad
cmp
repnz
sarl
mov
nop
lods
cli
xchg
arpl
fsubs
inc
test
sbb
ficoms
add
jg
mov
adc
or
mov
xlat
scas
xor
push
mov
inc
int3
stos
mov
lds
cmc
outsb
mov
mov
add
sub
loop
xchg
sbb
pop
nop
add
and
std
cli
inc
outsb
imul
daa
mov
xchg
adc
push
in
fistpll
mov
mov
sub
shrb
sbb
sub
fimull
push
mov
mov
ret
imul
outsb
loope
int
inc
inc
xor
xchg
adc
pop
clc
sbb
in
enter
fwait
sub
adc
in
and
push
pop
popa
adc
mov
hlt
mov
test
pop
iret
aaa
add
nop
pop
iret
mov
push
mull
loope
sub
stc
dec
sbb
push
movl
dec
mov
and
adc
cmp
inc
rclb
lret
dec
cld
mov
xchg
mov
js
push
rorb
mov
loop
lds
fwait
cmp
in
outsl
adc
mov
pop
sbb
pop
pushf
pushf
mov
push
or
adc
mov
pop
std
int3
jp
mov
out
inc
mov
idivl
imul
popa
stos
out
push
call
cmpsb
jno
pop
ret
sub
fsts
outsb
push
cmp
flds
jp
cmp
jne
pop
movsl
inc
rol
jmp
pop
stos
repz
fisttps
adc
ret
mov
lret
mov
out
test
mov
test
rorb
adc
scas
jo
out
imul
movsl
sbb
arpl
jle
push
idivb
xchg
lcall
sbb
push
in
xchg
loop
xchg
mov
ret
sbb
jne
mov
in
lret
scas
inc
push
jne
fiadds
ret
scas
shrl
pop
data16
pusha
pushf
lods
and
pushf
xlat
xchg
popa
cltd
and
push
sub
mov
sbb
add
push
mov
jge
test
test
scas
scas
mov
jmp
add
or
loopne
xchg
cli
push
int3
adc
push
add
or
imul
pop
cltd
pushf
xchg
sbb
sub
clc
mov
pop
push
lret
sti
xor
xchg
xchg
pop
dec
sbb
pop
sub
clc
cmp
dec
pop
and
dec
push
add
test
push
pusha
push
xor
mov
mov
xor
push
arpl
cltd
loop
imul
adc
cmc
add
push
cld
call
inc
sub
loopne
cld
dec
subl
mov
aas
mov
sub
lahf
in
inc
sti
rorl
dec
test
mov
or
outsb
negb
jnp
imul
add
dec
inc
jbe
test
mov
xchg
clc
inc
stos
shlb
ljmp
repz
cld
mov
mov
mov
lods
and
imul
andb
and
jno
cwtl
mov
add
jo
add
xor
push
and
test
cwtl
leave
dec
dec
adc
jae
cli
or
je
mov
adc
mov
gs
and
push
jg
jo
xchg
mov
imul
cltd
xchg
pop
lahf
mov
adc
mov
dec
mov
in
jmp
ret
and
mov
cmpsb
inc
adc
jg
repz
cmp
xor
loope
lods
lock
pop
jbe
dec
mov
dec
ret
jo
out
mov
pop
push
enter
repz
inc
or
lahf
int
adc
mov
sbb
push
aam
mov
iret
pop
ss
nop
test
mov
andb
mov
out
jl
mov
std
lcall
xchg
in
fisttps
and
outsl
xchg
push
lahf
xor
push
sbb
rcl
mov
xor
fstpl
test
enter
xchg
mulb
inc
hlt
stos
notb
or
push
fbstp
push
shlb
pop
inc
bound
mov
jmp
je
data16
xchg
outsl
ret
pushf
outsb
clc
out
pop
hlt
cs
sbbb
push
and
fisubrl
jmp
nop
mov
push
daa
das
push
ffreep
xor
lods
cmp
ret
jg
pusha
xor
mov
mov
shrl
cmpsb
outsb
mov
cmpsl
sar
mov
cmpsb
lods
jno
pop
test
pop
inc
xchg
fsubl
lods
shrl
push
xchg
push
test
sbb
mov
shl
rorl
ret
fdivr
push
push
inc
into
sbb
adc
idivl
cmp
les
out
or
fucom
hlt
adc
repz
mov
push
repnz
lock
mov
ret
and
add
or
stos
ds
push
arpl
mov
mov
pusha
stos
andb
int3
subl
fsubr
mov
xchg
inc
movsl
les
push
data16
inc
dec
nop
out
mov
push
push
loope
ret
das
adc
js
sub
ljmp
inc
fldt
fdivp
pop
or
popa
inc
mov
xor
cmp
mov
jp
loope
jb
dec
sti
and
sbb
sti
mov
jp
repz
xchg
loope
dec
mov
cmp
dec
fisubs
dec
iret
xor
icebp
add
push
mov
insl
ret
sub
in
mov
aas
outsb
adc
es
push
into
mov
data16
shll
repz
inc
daa
andb
daa
test
cmp
jge
call
mov
or
inc
aad
mov
sarb
sub
shll
into
stos
dec
popf
mov
iret
fstpt
aaa
push
xor
test
shrb
loope
cltd
je
mov
and
stc
sahf
mov
inc
ss
mov
daa
daa
jae
mov
popa
divb
add
stos
sub
arpl
mov
jge
in
jne
repnz
add
push
movsb
addb
shll
jne
and
push
fcompl
adc
jecxz
add
icebp
xchg
adc
push
xchg
push
popa
rcrb
add
pop
inc
fwait
insl
mov
decl
es
xadd
xorl
outsb
cmp
xchg
mov
cmp
xchg
data16
mov
sub
outsb
sbb
adc
jg
gs
les
data16
js
push
dec
shrb
dec
stc
or
shl
push
test
enter
jge
leave
jl
lods
addr16
cmp
adc
test
ret
xorb
push
lock
push
enter
push
out
sub
lods
jno
xchg
add
sbb
iret
mov
fsubrs
add
or
fwait
pop
push
mov
shll
imul
lcall
dec
lods
fstps
hlt
jbe
arpl
push
daa
xor
cld
xchg
and
out
mulb
outsl
inc
push
xor
adc
setg
in
adcb
inc
sub
stos
xchg
xlat
enter
mov
lcall
rep
cmp
mov
mov
int3
push
scas
xchg
test
adcb
inc
lods
mov
xor
iret
adc
notb
sahf
scas
gs
leave
loop
mov
in
aaa
call
mov
cmpsb
andb
xchg
lock
or
cmp
mov
aam
das
mov
cmpsb
jno
scas
mov
sarb
jne
mov
rcll
jns
xor
stos
pop
or
test
data16
jmp
stc
popf
iret
inc
xor
mov
repz
aaa
sub
sbb
push
inc
subb
push
cmpsb
negl
mulb
mov
xchg
aas
aaa
frstor
inc
mov
jne
dec
inc
adc
ror
test
push
jmp
lret
test
daa
mov
dec
mov
lods
sbb
les
push
popa
sbb
popa
cmpb
lret
pop
mov
std
cmpb
sbbl
leave
mov
sahf
xchg
rolb
lock
push
and
add
test
mov
sub
sub
mov
jl
nop
in
enter
cmpsl
icebp
cmp
cmpsl
mov
rorl
loopne
mov
adc
insb
mov
add
in
mov
stc
rcl
inc
pop
xchg
mov
fistpl
xchg
nop
mov
outsl
out
mov
mov
pop
or
pop
arpl
and
and
xchg
xor
adc
mov
and
fwait
mov
inc
push
mov
das
mov
jp
cld
iret
pop
test
adc
loop
adc
push
inc
roll
and
jo
mov
into
lret
aam
das
outsb
pop
outsb
mov
test
lret
lret
xchg
pop
aad
lea
out
or
push
inc
jae
in
pop
int
dec
lret
outsl
es
adc
mov
les
out
cmp
push
xor
fadds
push
dec
dec
es
mov
in
repz
ds
shl
sub
or
add
fmulp
into
orb
loopne
test
stc
xor
popf
push
xchg
pop
inc
inc
sbb
sub
xchg
movsb
pushf
out
xchg
jge
inc
adc
lret
sti
pop
mov
cmp
mov
iret
jae
lahf
out
lods
adc
push
aas
lret
popf
outsl
sbb
inc
pop
pop
xlat
inc
xor
imul
push
and
jnp
lods
lcall
cmpsb
mov
or
mov
nop
push
pop
mov
repnz
or
mov
inc
fmulp
sbb
std
fcmovnb
cwtl
cwtl
mov
cwtl
out
aam
daa
lret
sub
movsl
xchg
je
lea
cmc
xor
and
jbe
aam
fnstsw
ljmp
mov
fisubl
mov
insb
push
lcall
in
movsb
inc
and
lret
out
insb
in
into
xor
add
pop
inc
call
mov
cmp
xchg
inc
mov
stos
fwait
ret
fdivrs
xor
fnsave
in
jns
aad
fs
cmp
and
jb
je
in
outsb
cld
sbb
pop
adc
ret
lods
cmc
lods
push
pop
mov
mov
jl
loopne
fsubs
fmul
loop
jbe
push
flds
int
incl
inc
enter
cwtl
rorb
cld
sbb
or
hlt
out
stos
ljmp
movsl
push
adc
jno
fistl
push
push
lods
out
adc
dec
aaa
pop
xor
popa
adc
fstl
add
mov
fdivl
mov
pop
pop
movsl
push
jns
rcrb
stos
dec
mov
push
mov
pop
jp
fsubrl
jecxz
pop
pop
jb
mov
std
movsb
scas
sub
jnp
pop
test
sub
cmpsb
es
call
int
pop
stos
jecxz
orl
scas
xor
cmp
out
jne
in
les
divl
pop
lret
push
iret
addr16
scas
ja
adc
popf
push
lcall
inc
xor
add
adc
push
pop
cmp
and
xchg
xlat
psrlq
push
rcrl
stc
repnz
dec
leave
push
and
mov
scas
addl
aas
adc
xchg
aam
in
dec
lahf
mulb
xchg
dec
lahf
and
sbb
pop
fwait
mov
iret
std
mov
push
movsl
fistps
xor
add
imul
clc
cs
pop
inc
xor
out
mov
lea
clc
shl
jmp
int
xor
aaa
es
test
and
jg
jo
mov
ret
aad
mov
push
loop
adc
add
push
mov
inc
push
addr16
add
addr16
mov
push
pop
addr16
lds
fcmove
sub
addr16
sub
jae
fs
pop
ds
cltd
dec
jae
dec
dec
das
sahf
jecxz
imul
arpl
pop
pop
fimull
xchg
bound
stos
fmul
mov
and
mov
mov
das
mov
fstl
std
lea
xlat
push
lcall
dec
cmpsl
ficompl
lods
adc
jne
popa
mov
and
dec
inc
push
push
mov
out
cmp
inc
es
xchg
push
dec
das
lods
xor
pop
xor
cmp
mov
std
sbb
pop
insb
adc
or
out
mov
aas
xor
int
test
push
mov
mov
mov
inc
ficompl
push
jne
adc
cli
cmp
xor
mov
jns
lret
dec
lcall
mov
inc
mov
add
jnp
dec
pop
aad
out
jns
ds
xor
out
jge
xchg
jo
fdiv
ret
xor
pop
aad
cld
nop
stc
push
pop
push
dec
cmp
out
iret
or
cld
xchg
loopne
jns
adc
aas
mov
mov
or
dec
jns
sub
mov
lock
cmpsl
std
and
pushf
popf
sbb
in
cmpsl
scas
jns
inc
xchg
and
stc
out
pop
in
adc
cmc
ljmp
adc
and
pop
repz
mov
into
mov
loop
inc
dec
fiaddl
dec
es
pusha
adc
cmp
sbb
pop
roll
mov
clc
int3
roll
repz
jne
push
mov
insl
mov
push
xchg
cmp
mov
lcall
push
mov
into
cs
test
jmp
movsl
dec
jae
sub
push
popf
aas
mov
int3
and
cmp
inc
mov
push
mov
stos
or
mov
js
push
data16
rcrb
xchg
adc
out
fcomps
nop
adc
push
xchg
xor
test
add
or
lock
and
mov
lret
ret
pop
stos
mov
idivb
aad
int
or
popa
mov
lret
adc
add
mov
cmc
cmc
mov
jp
mov
xor
aam
fprem1
iret
test
repz
adc
test
stos
jg
pushf
xchg
push
mov
dec
loope
test
lods
scas
fwait
mov
xchg
ret
sub
in
loopne
inc
pop
out
jl
fadds
int
test
jo
popl
jne
aaa
cwtl
pop
push
rcll
jae
loop
les
or
int3
mov
mov
mov
mov
out
pop
sahf
sub
pop
xor
sbb
jp
int3
aas
scas
sbb
cmp
dec
adc
cli
sarl
cli
icebp
pop
add
xchg
dec
rcll
aad
out
push
mov
dec
adc
setge
mov
pushf
mov
lea
xchg
ret
xchg
fs
repz
sub
push
inc
je
stos
jbe
dec
pop
jo
sbb
mov
xchg
imul
out
cmp
test
scas
add
mov
add
rorl
sbb
pop
sbb
lds
adc
sbb
arpl
inc
lock
sub
xchg
movsl
add
sbb
sbb
cmp
sahf
sbb
mov
mov
dec
adc
js
jb
mov
adc
cmp
mov
lods
jle
inc
push
push
dec
ftst
das
mov
addr16
in
cwtl
push
pop
mov
mov
movsb
mov
add
push
xchg
sub
dec
outsl
mov
mov
lahf
sti
pop
es
push
cmp
sti
push
adc
xchg
mov
lods
push
or
imul
outsb
js
push
dec
imul
ret
mov
js
leave
mov
mov
fisttps
scas
xor
push
push
lods
ljmp
inc
aam
fiaddl
mov
mov
aas
subb
xchg
and
lcall
cmp
mov
ss
loop
add
push
xchg
sub
ret
sbbl
imul
ret
add
fdivr
pushf
mov
and
push
ret
roll
or
repnz
jnp
subl
jl
xor
mov
fidivrl
mov
sbb
aaa
or
adc
in
shr
pop
inc
xor
in
inc
adc
addr16
icebp
int
or
movl
xor
jg
sbb
aas
icebp
and
enter
ret
jbe
andb
push
pop
xor
inc
in
push
push
dec
std
test
and
mov
cmp
subb
or
lock
int
fnsave
sbb
adc
je
cmpsb
sub
shlb
adc
cwtl
mov
mov
mov
icebp
mov
lahf
lret
gs
pop
and
jg
mov
clc
sar
sbb
mov
in
ds
adc
into
inc
out
mov
in
mov
negl
push
lods
adc
inc
sbb
and
fwait
add
insl
pop
and
and
out
nop
mov
imul
adc
in
test
mov
and
insl
fildll
mov
cwtl
out
inc
sahf
sub
enter
stos
insb
inc
in
xlat
xchg
pop
mov
dec
mov
sub
add
out
pusha
or
xchg
pop
cmc
lods
cmc
sbb
sbb
js
push
lods
out
sti
aas
stc
xchg
and
scas
mov
xchg
push
out
lret
mov
fimull
mov
mov
cmp
inc
push
pop
mov
cltd
out
xor
insl
inc
adc
inc
mov
jne
fnstcw
dec
sub
mov
push
cli
test
pop
sbb
daa
push
inc
pop
push
cmp
cmp
insl
jo
repnz
ret
lret
jg
jne
pushf
inc
sub
mov
lahf
in
repnz
scas
cmp
push
jns
ret
mov
adc
std
xor
dec
dec
scas
xchg
pop
daa
dec
or
scas
cmpl
inc
push
pop
jecxz
pop
rcrl
repnz
xor
push
dec
xchg
movsb
and
mov
sub
mov
inc
test
nop
movsb
jg
mov
pop
mov
jnp
jge
in
outsl
mov
ljmp
push
mov
divl
pop
xchg
shlb
fwait
inc
push
ds
rol
arpl
jo
add
jle
inc
jae
and
cmp
mov
cmpsl
or
scas
xchg
mov
xor
xchg
xchg
mov
pop
mov
fstps
mov
mov
or
add
jecxz
push
push
lock
jns
cmc
mov
repnz
sbb
fdiv
and
cmp
or
mov
bound
sbb
rclb
adc
mov
icebp
and
cmpsb
int3
sti
add
imul
mov
ss
mov
xchg
add
ret
cmp
inc
mov
imul
daa
orl
fistl
inc
loop
scas
and
and
or
dec
adc
jbe
mov
add
cmp
sbb
out
jl
enter
xor
imul
add
push
gs
iret
or
mov
iret
mov
or
xchg
mov
stos
out
aas
lods
dec
xor
int3
pop
ljmp
fsubr
insb
push
dec
mov
les
xor
loopne
out
pushw
jnp
out
addr16
mov
nop
push
cmp
je
aam
movsl
scas
sbb
data16
pop
stos
adc
add
inc
adc
fcmove
out
test
icebp
xchg
add
xor
xor
cmp
adc
fcomi
out
and
mov
push
cmpsl
mov
icebp
mov
stos
cmp
mov
sub
xor
and
cli
adc
fdivrs
and
mov
enter
out
subb
mov
dec
ficomps
or
pushf
adc
jmp
mov
cmpl
xchg
jmp
xor
mov
rclb
dec
push
cltd
mov
sbb
mov
ljmp
push
jns
rcl
cwtl
shlb
pop
xchg
pushf
outsb
test
mov
rcr
fildl
jo
outsl
lds
jge
nop
icebp
stos
push
lahf
gs
sub
fcomp
std
das
mov
dec
arpl
fwait
dec
bound
sahf
sar
ret
xchg
inc
xchg
popf
mov
cld
mov
enter
adc
pusha
nop
in
add
mov
ss
and
and
mulb
test
adc
dec
pop
sub
or
out
rcl
or
pushl
pop
jmp
cmp
sbb
push
mov
pushf
setg
ficoms
pop
gs
push
fisubrl
int
mov
push
leave
mov
jnp
testl
mov
xor
fldl
push
inc
mov
mov
inc
icebp
dec
fst
cld
sub
inc
pop
or
sahf
popa
mov
or
sbbl
fsts
in
ret
js
les
ds
inc
sbbl
and
sbb
ljmp
mov
sbb
push
pop
push
mov
jb
data16
mov
call
daa
rorl
xor
stc
adc
aas
fsubs
insl
sbbl
push
mov
sbb
inc
ja
pop
xchg
pop
bound
cmpsl
inc
sub
mov
pop
pusha
cmpl
adc
mov
jns
imul
imul
cmp
push
xor
or
xor
xchg
sbb
and
xchg
sub
sbb
in
pop
and
loopne
push
int
cmp
aad
push
mov
jge
mov
mov
dec
add
arpl
xor
pop
pop
mov
jbe
fimuls
adc
outsl
and
xor
lcall
cli
push
push
sbb
or
xorb
push
push
sub
stc
xor
mov
imull
jo
jp
rol
cmp
lods
push
cmpsb
xchg
fsubrs
xor
roll
repz
push
mov
jg
cs
xchg
jp
sbb
out
inc
mov
test
jp
mov
test
dec
cmpsb
mov
out
adc
mov
lds
sbb
push
pop
gs
cmp
lods
mov
notb
xor
mov
jne
js
and
gs
les
mov
xor
dec
xchg
lock
dec
adc
cmp
adc
lock
sbb
orl
lds
std
or
mov
xor
in
aad
lods
iret
lcall
sub
test
cli
lret
lods
out
jae
add
sub
jae
ds
fidivrl
pop
pop
add
stos
int3
mov
dec
fs
fildll
mov
sub
ds
add
jmp
sbb
xlat
pop
icebp
mov
mov
insb
lds
lahf
aas
inc
mov
loopne
sub
mov
mov
scas
stos
repnz
push
inc
gs
jmp
xchg
and
and
sahf
sbb
inc
lock
rcll
xchg
je
push
mov
mov
sti
icebp
xchg
cmp
subb
lahf
dec
clc
inc
cltd
aad
hlt
push
mov
mov
cmp
push
mov
addr16
daa
lret
push
shlb
pop
mov
push
in
cli
xchg
pop
and
xor
mov
xchg
pop
xor
std
inc
xor
aam
sbb
js
jecxz
add
shr
cmpsl
cmpsl
test
scas
sbb
mov
out
inc
push
fmull
xchg
push
mov
xchg
loope
sarl
imul
stos
push
mov
adc
notb
cmp
stos
inc
push
and
mov
xchg
sahf
repz
mov
pop
aaa
daa
and
std
mov
dec
ja
aaa
add
pop
mov
or
xor
insb
cmpsl
pop
xlat
inc
loopne
push
or
xchg
mov
daa
repz
sbb
lahf
dec
cvtdq2ps
xchg
adc
push
int3
sbb
mov
mov
inc
shrb
out
mov
lods
test
mov
cmp
dec
icebp
mov
test
inc
xor
push
jns
or
mov
mov
outsl
out
insb
movsl
inc
addr16
jge
frstor
repz
cmp
test
pop
xchg
sbb
jmp
jno
scas
out
mov
les
jge
mov
cwtl
mov
sbbb
jmp
cld
fs
inc
arpl
movsl
mov
in
leave
jo
mov
jle
dec
sub
test
jo
sysenter
adc
scas
enter
movsl
xchg
sahf
out
test
sub
scas
dec
and
mov
push
inc
push
repz
lret
or
shlb
dec
nop
icebp
icebp
adc
adc
cmp
pop
push
mov
and
jnp
gs
fsubp
in
lods
data16
fwait
insb
incl
jp
xchg
mov
int3
bnd
and
pop
xchg
imul
dec
push
xchg
imul
outsb
push
sti
loope
or
sub
sahf
insl
loope
cmp
push
push
in
pop
mov
lods
and
xchg
mov
and
daa
bound
icebp
pop
and
ss
lods
jns
push
or
and
int3
jo
in
sub
inc
pop
sbb
and
fistpl
in
xchg
sbb
in
mov
aam
fsubrl
daa
mov
push
int
dec
mov
jg
outsb
ja
adc
push
jbe
jbe
push
pop
movsl
fsts
push
popf
dec
insb
pop
ret
scas
mov
imul
and
rcrl
repz
daa
cmpsb
push
dec
jbe
xlat
mov
adc
push
lea
mov
popa
mov
int
and
xchg
insl
pop
shl
stos
sahf
sbb
lret
pop
fwait
lock
mov
jnp
dec
cmp
xchg
pop
adc
lods
inc
and
rcr
test
inc
or
pop
fwait
pop
movsb
jnp
and
rcrl
into
inc
xchg
stc
mov
pop
xchg
insb
add
xchg
std
popf
sbb
or
rcl
daa
jno
pop
sub
in
sti
andl
cwtl
dec
test
das
je
insb
in
inc
and
mov
fimull
mov
fwait
push
enter
mov
xor
repnz
fildl
dec
out
lret
nop
push
sbb
push
dec
fnstenv
mov
sbb
test
lods
jae
pusha
iret
icebp
or
add
jecxz
das
mov
js
push
and
stc
add
push
add
sbb
mov
and
in
mov
push
fwait
jne
fimull
mov
push
fstl
leave
mov
out
sub
movq
cli
or
mov
jp
jge
filds
sbb
adc
jae
das
lret
rcll
sub
jbe
outsl
mov
cwtl
pop
pop
pop
popf
lods
sub
fnstsw
xor
lret
xchg
outsb
mov
das
jecxz
stc
inc
jle
jae
lock
add
cwtl
sbb
jle
test
xchg
xchg
adc
xor
or
xor
data16
into
scas
mov
inc
sbbl
fnsave
jl
shlb
push
insb
mov
pop
push
lds
or
dec
adc
pop
ds
pop
movsl
jl
xor
add
fstpt
cwtl
aaa
dec
ret
adc
sbb
cwtl
or
and
xor
hlt
mov
insl
push
push
mov
mov
sti
sbb
fisubl
test
push
insl
ss
pop
push
aam
adc
imul
cmp
xor
dec
add
sbb
xchg
fcompl
sbb
or
xchg
aaa
sbb
sbb
fcoml
out
cli
out
push
lahf
jno
pop
jge
ss
adc
aas
sti
cmc
cwtl
mov
sub
xorl
out
nop
in
push
orl
mov
inc
sub
sbb
jmp
aas
cmp
xlat
xchg
cmp
jp
ss
dec
adc
xchg
mov
add
outsl
push
test
adcl
shll
adc
ljmp
xchg
mov
dec
cmpsb
test
sub
add
push
subb
jle
mov
idiv
aad
jo
arpl
rolb
dec
xchg
mov
lods
stos
cmp
cwtl
sub
insb
hlt
nop
mov
in
shrb
std
or
insl
or
jecxz
loope
lret
in
mov
sbb
fs
addr16
inc
jns
cmpsb
pushf
adc
jmp
pop
pop
ffree
pop
shl
sbb
outsb
jg
jg
in
sbb
jle
out
clc
inc
test
cmp
or
sbb
push
in
loope
leave
xchg
jns
les
loope
lret
and
in
sbb
pusha
xchg
sbb
shll
or
push
out
and
mov
ret
lcall
aaa
or
das
cmpsl
cmp
test
test
insb
pop
loopne
xchg
or
fistl
jge
mov
mov
xchg
adc
jno
adc
stos
daa
imul
out
neg
mov
dec
push
sti
mov
xchg
test
mov
fdivs
pop
push
push
dec
cmp
pop
rcrb
add
xchg
insl
mov
inc
push
outsb
sub
cld
or
inc
jo
inc
adc
aam
in
stos
test
mov
jl
das
add
and
cwtl
mov
cli
fwait
mov
ljmp
icebp
mov
mov
ds
aaa
sub
cmpsb
lods
xchg
lds
mov
mov
push
imul
int3
jg
mov
pop
ror
add
lods
pop
loope
sbb
fidivrl
xchg
in
rolb
test
xchg
xchg
jno
imul
stos
imul
rep
icebp
loop
cmp
jge
loopne
daa
xor
cmp
in
addr16
out
jbe
aas
lock
call
sub
and
cli
iret
xchg
fstps
push
push
mov
push
lds
cmp
xor
lret
scas
cmp
sbb
sbb
test
pop
loopne
test
ret
cmpsb
roll
scas
subb
cmp
fbld
cld
stc
aad
mov
mov
and
ja
in
dec
loope
pop
adc
ja
or
iret
mov
mov
loop
fwait
negb
repz
das
aam
sub
sbb
clc
pop
sub
jno
add
push
aam
sub
testb
out
das
mov
xchg
sub
stos
xlat
mov
inc
fcomp
pop
mov
loopne
push
cmp
test
pop
test
repnz
push
cmp
test
stos
scas
js
push
orb
xchg
int
movsb
push
push
clc
xor
mov
jg
and
stos
or
movntq
sub
or
jnp
mov
or
cmovno
lret
dec
jnp
int3
movsb
sub
add
fnsave
fsts
push
pop
fdivrs
inc
push
cmp
push
scas
xchg
inc
std
out
ret
mov
and
jl
inc
rcrl
lds
push
add
xchg
insl
push
shll
dec
cmp
insl
cmp
in
test
mov
enter
xchg
sbb
jne
add
lods
testl
out
and
lds
js
icebp
lcall
sbb
cmpb
jbe
cmpsl
imul
dec
xor
test
in
and
test
pop
and
xor
cld
call
mov
call
pop
arpl
add
mov
sbb
lahf
lret
dec
pop
push
push
out
clc
out
cld
and
push
repnz
xor
std
push
ja
mov
rcrb
out
lods
int
je
pop
and
int
sbb
inc
ss
shr
scas
pop
push
mov
lock
in
mov
adc
movsl
xorl
iret
push
jl
leave
mov
jp
jmp
cmp
fadds
scas
inc
addr16
icebp
imul
mov
call
add
sbb
stos
mov
inc
insb
mov
out
jp
into
pop
push
sub
jmp
js
mov
int3
dec
das
add
sub
hlt
pop
inc
std
inc
inc
dec
cmp
push
loop
stc
mov
jmp
ret
and
rolb
repnz
std
adc
mov
mov
bound
pop
adc
lods
in
lods
out
into
cltd
mov
xlat
cmpb
add
repz
test
mov
dec
sbb
pop
mov
mov
sbb
xor
fisubrl
jp
mov
mov
jg
inc
inc
xchg
push
aad
mov
push
cmpsl
out
and
inc
cmp
in
mov
pop
into
and
in
data16
or
inc
mov
iret
xor
mov
lret
jl
mov
jne
xor
jo
fiaddl
mov
pushf
lcall
stos
sub
sarl
loop
add
mov
mov
mov
sbb
xchg
mov
es
push
gs
xchg
xor
push
mov
out
jmp
adc
or
xchg
ja
mov
movsl
ret
sub
sub
pop
dec
les
fisubl
inc
mov
mov
mov
adc
adc
stos
cmp
push
jecxz
arpl
icebp
mov
stos
jg
add
loope
cmp
and
mov
and
idivl
add
lret
movsl
imul
push
lret
push
rclb
std
or
pop
out
sbb
clc
mov
adc
jnp
fwait
mov
gs
out
sub
mov
dec
ss
xor
jbe
insb
sub
in
rcrl
fidivs
and
lock
or
mov
jns
movsb
fisttps
mov
inc
fwait
leave
das
in
add
pushf
mov
daa
pop
push
lcall
dec
sub
jae
xchg
fcomps
cmp
sub
jo
pusha
sub
je
shl
or
orb
ret
sbb
cmp
inc
stos
call
jg
test
jp
sbb
dec
jg
inc
popf
scas
jo
push
dec
sub
rol
xchg
cmc
inc
imul
imul
xchg
pushf
or
xchg
mov
xor
inc
cmp
aad
enter
in
lods
popa
mov
dec
pop
lods
das
jbe
mov
mov
inc
inc
fmuls
mov
arpl
and
movsb
inc
stos
jno
js
adc
fstps
add
dec
sub
iret
xor
fs
movsb
xor
xor
movsb
inc
push
je
shll
mov
scas
fs
and
imul
ja
sahf
loope
mov
repnz
es
pop
jne
sub
mov
das
aas
out
lret
pop
sub
scas
test
test
hlt
jne
ja
xchg
rolb
je
mov
mov
frstor
lock
push
and
nop
les
xor
push
pop
jmp
mov
cmp
pop
sbb
dec
dec
std
inc
adc
xor
add
sbb
xchg
mov
jno
or
cld
jg
lods
mov
mov
mov
popf
inc
and
gs
and
and
scas
and
push
pop
pop
inc
sbb
add
cltd
jbe
xor
adcl
dec
lea
shlb
gs
movsb
insb
fcmovnb
mov
je
aad
fwait
les
imul
das
pop
inc
incl
aaa
insl
loope
inc
jb
sbb
negb
pop
add
mov
shlb
insb
mull
mov
dec
cld
pop
mov
adc
inc
out
out
sub
sbb
fs
push
xor
cmp
mov
mov
pop
cmp
mov
addr16
out
cmpsb
sarb
and
add
or
or
movsb
push
inc
je
cmc
or
movb
lahf
and
mov
dec
loopne
sbb
and
sub
mov
push
int3
imul
add
ficoml
frstor
imul
xor
jl
scas
mov
sbb
pop
loop
push
adc
push
icebp
inc
sub
out
ret
jge
aad
jnp
pop
add
orl
mov
scas
leave
in
jbe
int3
roll
in
lea
jae
int
cmp
fistps
repz
cwtl
or
inc
add
es
andl
jg
movsl
xchg
leave
jo
ljmp
lret
lods
insl
sub
mov
mov
sub
mov
jl
test
pop
insl
sar
or
xchg
jle
cs
or
or
mov
jne
jecxz
out
in
cmc
stos
mov
add
nopl
fiaddl
arpl
inc
ror
shlb
mov
pusha
dec
xchg
decb
sbb
rcll
pop
xchg
push
xchg
pop
lods
inc
sbb
fdiv
ret
test
push
out
negb
mov
outsb
lds
inc
inc
xor
pop
inc
xchg
lret
jmp
adc
mov
inc
movsb
push
sbb
push
ss
push
jge
cmp
mov
xor
mov
imul
mov
or
adc
es
scas
pusha
sub
jbe
pop
popl
aas
jp
and
int3
push
xchg
dec
sub
inc
xor
stc
dec
popa
sahf
xchg
jne
leave
xchg
aam
in
enter
lods
sub
push
cmp
lods
sbbb
dec
sub
inc
testl
pop
pop
lods
arpl
pop
sub
push
add
mov
stc
jns
mov
lret
pushf
movsb
mov
enter
fisttpl
dec
adcl
adc
clc
pop
loope
xor
inc
pop
pop
xchg
decl
mov
test
and
jae
mov
out
sahf
mov
into
repnz
cli
aam
dec
jmp
loope
push
dec
std
lds
pusha
cmc
scas
call
adc
sti
add
add
mov
add
ja
sbb
ja
fwait
dec
sub
mov
mov
mov
addr16
sub
add
adc
sbb
push
out
pop
jns
pop
mov
fsubr
mov
push
mov
pop
jecxz
sub
daa
pusha
pslld
inc
dec
push
out
add
and
push
jne
lock
das
jecxz
test
inc
jb
lods
sub
rorl
mov
pop
bound
shrl
mov
push
cmpb
xor
inc
fdivs
fxch
cmp
xlat
stos
test
shlb
jae
inc
mov
ffree
in
xor
sbb
push
in
jecxz
ret
out
jo
inc
data16
loop
xchg
sub
xchg
push
mov
jge
or
dec
out
in
pop
fs
int3
js
pop
push
inc
cld
push
jne
inc
fcoms
cmpsb
nop
add
in
sti
loopne
push
cli
adc
leave
out
cmpsl
int
xor
sub
outsb
xchg
aaa
mov
rclb
sub
dec
sub
mov
pop
mov
xor
sbb
inc
cmp
mov
mov
icebp
sbb
out
mov
lock
sti
or
or
mov
inc
sbb
jmp
cs
add
add
mov
xchg
std
popf
lret
pop
push
test
mov
idivb
cmp
inc
int3
add
xor
push
fstp
ja
jmp
nop
xor
jmp
cmp
jg
inc
frstor
or
push
cmpsb
sub
sbb
stc
pop
popa
out
xchg
dec
pop
loop
or
iret
iret
and
outsl
or
stos
jb
push
out
in
dec
adc
mov
daa
loope
mov
rcrl
adc
and
xchg
dec
lret
faddl
xor
sbb
insl
ja
loop
push
adc
sub
inc
jmp
test
push
mov
dec
cmc
jge
cmp
sub
ja
out
push
add
cli
jecxz
lcall
pop
cwtl
pop
and
leave
xor
sub
dec
imul
and
in
icebp
add
inc
dec
mov
sti
lods
jmp
icebp
xchg
push
push
dec
push
push
movsb
xor
mov
inc
and
push
gs
pusha
insl
cmpsl
scas
mov
xor
lds
xchg
add
std
js
aas
shlb
sbb
lret
pop
sub
dec
inc
jo
les
in
js
nop
jne
add
mov
adc
jp
sbbb
fidivs
xchg
fwait
xor
ja
cmp
mov
jg
pop
xor
sbb
movsb
addr16
daa
push
lods
mov
shrb
cmp
dec
std
jae
mov
ja
data16
xchg
das
jle
pusha
adc
test
and
mov
pop
inc
je
lret
and
insb
addl
fdivrs
cli
push
push
push
pop
pop
inc
jle
dec
mov
and
and
mov
xchg
popf
mov
popa
mov
das
in
pusha
cmp
pop
jo
mov
mov
roll
adc
js
inc
out
mov
in
add
add
push
std
sub
jg
bound
lret
dec
add
mov
icebp
das
pop
xchg
xor
mov
adc
js
mov
jno
mov
pop
out
call
aas
push
xor
sbb
push
add
and
stc
mov
les
pop
dec
mov
leave
lret
xchg
xor
imul
ljmp
add
orl
les
cmp
mov
inc
repz
jo
mov
out
jg
dec
inc
sbb
pop
adc
stos
js
fbstp
and
cmpsb
inc
fimuls
xor
jbe
or
mov
adc
mov
cmp
lds
sub
hlt
mov
and
jp
mov
jae
popa
mov
daa
fldenv
cmpsb
cmp
mov
adc
int3
push
cwtl
pop
push
test
xchg
outsl
sub
loop
mov
movsb
lea
pop
xchg
mov
push
cli
cmp
jmp
push
jge
shlb
or
xchg
test
xchg
rorl
fimull
test
or
mov
into
add
pusha
or
aam
jne
jo
ja
adcl
pop
pop
lret
cltd
scas
mov
ss
xchg
arpl
fnstcw
push
jno
adc
mov
xchg
fnstcw
cmp
jp
gs
out
aas
dec
sub
add
arpl
mov
mov
mov
mov
xchg
addl
fwait
and
push
aas
stos
jge
into
add
lcall
pop
jne
jns
std
jo
lcall
sub
and
enter
ret
cmc
hlt
push
test
les
jmp
push
mov
out
fcom
sub
jl
jmp
pop
xchg
nop
mov
dec
dec
mov
add
hlt
stos
xchg
adc
les
sub
adc
imulb
mov
push
pop
jle
xor
and
mov
jbe
daa
push
xchg
add
mov
or
mov
loope
scas
icebp
jg
leave
inc
scas
inc
test
xchg
xor
xchg
sub
lret
jo
add
sti
xchg
les
mov
xchg
popa
aam
and
sub
clc
xchg
cmpsl
test
movsl
iret
rorb
int
and
push
repnz
imul
fildll
ficoms
inc
cmp
es
xor
andl
ret
ret
test
jl
enter
dec
sbb
outsb
jne
xchg
pop
lods
push
fbld
add
ljmp
ljmp
xor
cmpl
lods
push
mov
and
xchg
cmpsl
or
enter
lcall
fcmovnu
sub
std
mov
loop
cmp
pop
mov
loop
jle
xchg
ds
xor
call
mov
lea
sub
clc
stos
das
push
pop
shrb
cmp
popa
rcl
xchg
std
mulb
fists
jbe
or
xchg
out
lods
cmp
in
mov
testb
aam
shlb
jbe
fdivrs
cs
loop
sub
loop
movsl
and
cwtl
or
cmp
xorb
jmp
mov
fisubl
or
orl
stos
ds
mov
pop
and
repz
sar
fwait
test
movsb
lea
xchg
aad
cmp
adc
jnp
lds
dec
mov
mov
rorb
inc
xchg
mov
and
or
dec
lods
push
pop
jle
add
and
cmpsl
scas
mov
mov
call
jmp
push
icebp
inc
jb
push
jns
sub
mov
sub
dec
inc
sub
shlb
enter
push
xor
xchg
test
sub
js
arpl
sbb
adc
xor
jae
int
es
or
mov
pop
subl
ret
dec
push
mov
psllq
mov
lods
push
adc
pop
out
jp
xchg
adc
cmp
jp
sub
dec
cmp
mov
lret
mov
int
repz
fnstsw
cmp
pop
inc
bound
popf
mov
filds
scas
push
sub
and
mov
mov
out
jecxz
mov
mov
dec
fwait
inc
push
rcll
adc
data16
jp
repz
fisubrs
jno
test
je
fdivl
icebp
sbb
mov
jmp
test
xchg
dec
ds
movsb
jge
and
mov
sub
or
aas
addb
xor
jno
adc
pop
cld
ret
call
leave
dec
lock
stc
pushl
cmp
add
add
push
pop
jo
lret
test
scas
and
sub
leave
pop
jp
cmp
cltd
mov
icebp
popf
xor
pop
in
loop
mov
insl
dec
das
xchg
xlat
stos
cmpsl
aad
iret
pop
dec
mov
insl
cmp
ljmp
or
lock
dec
add
dec
dec
fldcw
mov
jecxz
pop
jg
es
or
xor
ds
jb
xchg
repz
push
push
ficompl
adc
ljmp
jmp
add
cmc
sbb
sbb
test
ss
dec
js
test
jo
insl
out
out
add
pusha
and
jmp
cs
out
imul
pop
push
xor
outsb
and
push
cli
cld
dec
jg
fmull
fisubrl
xchg
js
xchg
shll
adc
sub
cltd
and
ficoml
pop
ret
scas
hlt
jo
subl
adc
loopne
jbe
test
in
xor
add
xchg
movsl
add
add
jg
jbe
es
sub
cmp
imul
cli
ja
les
cmp
and
xorl
nop
decb
addr16
push
mov
enter
mov
inc
in
mov
iret
aam
jge
add
cmp
add
popf
gs
repz
call
jne
jmp
mov
cmp
or
and
lret
rcrb
sahf
lret
pushf
out
xchg
mov
jp
mov
dec
jmp
leave
mov
xor
xor
ja
andl
jecxz
mov
int
int3
push
or
in
add
inc
cli
sbb
shlb
mov
jmp
add
mov
pop
loope
or
enter
sub
add
mov
push
adc
popf
and
scas
mov
xor
push
mov
inc
xchg
sar
ds
jp
mov
sub
fldcw
jp
cmc
faddl
popf
mov
jmp
sbb
xor
sbb
fbstp
pushf
sub
sub
test
push
out
sub
dec
idiv
mov
pop
xchg
es
mov
or
push
sub
and
xor
cmp
xchg
in
mov
outsb
sbb
pop
dec
addl
xor
out
scas
or
xlat
mov
sub
push
daa
testb
popl
jbe
and
sbb
das
cs
ficomps
cmpsb
pop
int
adc
or
leave
aam
add
hlt
lods
push
test
movb
iret
and
pop
xor
hlt
js
in
push
dec
out
in
mov
dec
test
adc
mov
fwait
scas
mov
or
out
mov
add
loope
hlt
sub
stos
js
push
pop
es
mov
popf
rolb
push
test
scas
xchg
or
sub
jle
xor
orb
cmp
push
inc
push
stc
pop
sub
rcll
sbb
pop
sahf
sahf
mov
sub
add
push
insb
adc
jle
sub
push
xor
jl
inc
and
sti
int3
xchg
sub
push
inc
into
sbb
cmp
fs
sub
outsl
loopne
imul
adc
sub
mov
mov
pop
and
mov
jecxz
ret
adc
mov
cmc
cltd
andb
add
dec
pop
inc
mov
fiaddl
std
xchg
pusha
es
jge
repnz
push
adc
inc
or
adc
inc
mul
mov
push
js
notb
dec
movsb
fdivl
stc
push
repz
jmp
hlt
mov
adc
sbb
mov
rorl
pushf
scas
cmpsl
mov
stc
jbe
inc
enter
lahf
subl
xorl
mov
mov
mov
adc
ret
inc
inc
addb
jne
nop
jb
jge
mov
xor
imul
fsubrl
cmp
sub
fwait
dec
and
push
mov
popf
test
adc
ret
push
and
xchg
push
dec
push
out
mov
test
lea
jns
sbb
in
add
adc
adc
fbstp
insb
xchg
or
or
mov
jecxz
mov
fisttpll
add
add
cmpsb
mov
cmpsl
insb
dec
inc
inc
adc
sub
in
insl
fs
add
test
fs
dec
mov
push
push
xchg
and
xchg
popl
dec
in
mov
sbb
lret
fldcw
loopne
jecxz
push
xchg
adc
inc
cmp
into
cld
dec
xlat
imulb
add
popf
shrb
dec
xor
push
and
fcmovbe
adc
sub
sub
aaa
es
dec
stc
nop
loope
lahf
out
xchg
std
mov
scas
jb
imul
scas
mov
rcll
inc
sub
sub
mov
adc
rcrb
in
mov
xchg
cltd
inc
adc
stos
out
xor
mov
mov
inc
icebp
inc
xchg
mov
sbbl
pop
leave
mov
lret
sbb
sbb
icebp
xchg
das
leave
lock
sahf
pop
pop
pop
or
ror
push
mov
out
adc
faddl
xchg
xchg
mov
jbe
dec
lcall
dec
ljmp
iret
das
clc
jno
sarb
mov
or
shll
dec
xchg
sbb
scas
rcrl
xor
fists
xor
jnp
rcrl
xchg
pusha
mov
mov
jmp
in
ljmp
pop
addl
pop
cmp
daa
shll
jle
mov
mov
sub
push
adc
and
cld
lcall
xor
xor
xchg
dec
xor
xor
loop
add
mov
js
mov
cltd
xchg
sbb
mov
xchg
stos
xor
ja
add
pop
pusha
movsb
or
js
add
mov
jno
mov
notb
fsubl
mov
cmp
fs
push
or
sahf
push
pushf
jmp
mov
sbb
cs
inc
lret
lahf
mov
in
inc
bndldx
lods
adc
shr
xchg
jecxz
mov
les
stc
out
xlat
sub
insb
and
iret
mov
stc
mov
cmp
push
gs
popf
insb
imul
pusha
sti
pop
cmp
ljmp
not
das
xor
sub
aas
pushf
push
outsl
sbb
mov
and
sub
lock
push
adc
sub
lods
test
cmc
fs
add
push
fcom
outsl
mov
pop
cmpb
add
mov
mov
insl
and
jle
addl
dec
sub
push
lcall
sub
sti
or
insl
mov
mov
loop
lock
pop
inc
in
push
out
pop
mov
int
out
and
gs
cmp
ficomps
sub
jl
inc
pop
adc
out
mov
ret
xor
push
adcl
jp
loopne
scas
push
insl
sub
jmp
cmp
pop
lods
xchg
cmp
jb
cmpsb
dec
and
scas
jge
xchg
adc
inc
ljmp
mov
test
stc
lcall
into
test
out
test
jae
pop
into
dec
mov
or
sub
imul
dec
and
pop
add
testb
sub
loop
cmpb
inc
cmp
mov
test
cmpsb
pop
or
xchg
lcall
jb
push
or
flds
pop
mov
jnp
push
or
insb
ss
div
lea
div
cmpsl
adc
cmc
xorb
xchg
lea
mov
cmpsb
lahf
fwait
sahf
xor
out
or
rcrb
fadds
sub
int3
and
rol
mov
jp
push
push
jbe
dec
call
push
sbb
fsubl
fwait
sub
or
popf
mov
sbb
les
lret
fs
dec
negb
sub
jae
sbb
test
jecxz
pop
jb
punpckhdq
pop
push
cwtl
pop
push
xlat
fwait
or
inc
xchg
pop
mov
mov
pop
ss
jbe
cmpsb
imul
add
divl
test
cltd
pusha
into
scas
subb
sbb
call
pop
mov
into
std
int
lock
cmc
inc
add
roll
xchg
fs
jg
dec
lret
ds
aam
and
mov
inc
int
cmp
cmp
jle
inc
cltd
mov
lahf
fnstsw
pop
mov
mov
inc
push
jmp
mov
cmpsl
xchg
gs
out
mov
pop
dec
je
test
loop
sbb
mov
jmp
int
xor
pop
shlb
mov
adc
test
push
add
lret
sbb
pop
ds
orb
ja
pop
addr16
pop
stos
cmp
loopne
fs
xchg
ljmp
out
imul
cmc
out
cmp
out
int3
ret
inc
popa
aad
pop
or
movsb
out
int3
fisubl
sbbb
mov
fadd
jbe
xchg
loop
dec
mov
xchg
iret
js
ds
add
in
sub
fwait
cwtl
jge
pop
insb
outsl
push
dec
iret
loop
outsl
outsb
push
rcl
cmc
jg
mov
pop
sub
idivl
sub
ljmp
aam
push
loope
aad
popa
mov
sbb
or
imul
jp
rorb
xlat
sti
or
xchg
lods
add
pop
insl
and
adc
jno
out
add
mov
xor
adc
pushf
cmp
sti
mov
stc
and
xchg
or
dec
js
in
pop
push
sbb
cmp
cmp
adc
inc
mov
dec
pop
dec
jae
je
push
push
pop
pushf
jmp
push
das
mov
push
cmp
outsl
cltd
repnz
push
mov
ret
sub
aaa
mov
out
shll
clc
adc
pop
lods
inc
jbe
jnp
adc
std
jns
mov
and
loop,pn
fsts
ret
repz
mov
scas
ss
jge
push
jns
movsl
js
inc
call
rorb
pop
push
fidivs
push
jns
cmp
and
sbb
xchg
or
mov
push
sbb
scas
and
pop
push
mov
jle
jne
push
jnp
push
negl
push
xor
dec
in
mov
dec
lock
shlb
fdivl
imul
shll
jmp
lods
lahf
inc
ljmp
test
nop
cmp
dec
fmuls
inc
or
sub
mov
popf
gs
ds
mov
add
ret
mov
dec
mov
sbb
fldt
movsl
test
js
stos
add
and
lds
adc
add
mov
aas
es
fisubrs
jmp
lcall
pop
stc
push
inc
daa
loope
sub
loope
icebp
loop
dec
inc
or
aam
cmp
dec
jne
pop
mov
roll
push
inc
add
jle
rcll
inc
xchg
push
arpl
sti
cmp
cmp
leave
ror
out
push
or
pop
cmc
pusha
test
lret
pop
pop
minps
std
xchg
pop
ret
cmp
jno
dec
or
or
inc
pushl
mov
inc
and
pop
xchg
cwtl
rorb
jge
dec
pop
cli
mov
mov
add
mov
mov
fsubp
mov
add
je
mov
pop
pop
enter
mov
fisubrl
sub
push
xchg
adc
imul
jae
mov
xchg
cli
bound
fnstcw
jno
loopne
lahf
in
aad
or
in
xchg
adc
rcll
mov
xchg
ffreep
pop
mov
stc
jl
inc
mov
sbb
jp
mov
cmp
in
sub
sbb
outsb
sti
sbb
add
stc
arpl
insb
negb
pop
shrb
adc
hlt
adc
pop
stc
add
int
lea
dec
lret
mov
xchg
aaa
out
jmp
mov
mov
movsl
hlt
adc
mov
sbb
es
add
dec
sub
cli
int3
or
jno
insl
aaa
dec
mov
jno
out
inc
pop
mov
popa
mov
push
call
nop
stos
mulb
inc
dec
test
sub
fs
jmp
movsl
hlt
fimull
sbb
push
dec
sbb
lahf
clc
cmp
inc
push
push
pop
stc
stc
jp
and
lods
lods
or
inc
stos
cmp
lods
rol
push
adc
cmp
push
pop
mov
push
cmp
cmpsb
cli
or
cld
mov
push
pushf
push
iret
movsb
adc
pop
push
out
cmpl
cwtl
fxch
test
test
add
into
and
aad
jb
and
stos
fiadds
ret
or
mov
xor
and
lea
jge
cmpsb
mov
repnz
sbb
jp
sub
adc
jecxz
inc
sub
jno
jnp
inc
sbb
dec
lods
stos
loop
cmpsb
xchg
push
out
into
popf
loop
std
dec
adc
out
cmp
dec
and
data16
sub
xor
xorb
xchg
aam
mov
es
cmp
mov
mov
mov
xchg
pop
or
cmp
pop
mov
mov
mov
xor
adc
cmc
push
pop
adc
xchg
cltd
fdivl
lods
adc
sbb
roll
and
sub
mov
pop
cwtl
push
fs
out
negl
add
push
test
pop
and
dec
adc
stc
pop
sbb
js
aaa
jmp
inc
lret
js
dec
adc
jnp
gs
or
xor
data16
xor
std
inc
adc
sub
cld
cmp
mov
dec
loopne
out
into
fimull
out
ret
and
xchg
rorb
adc
cmc
push
push
inc
sub
ficoms
clc
cmp
decb
ljmp
scas
mov
cli
addb
nop
cmp
inc
loop
jp
test
push
mov
jbe
xor
xchg
sub
push
in
insl
loop
or
mov
jno
ficoml
bound
adc
ss
pop
xor
mov
inc
lock
jmp
stc
mov
mov
mov
aaa
jle
sahf
aas
xchg
ret
sub
inc
insb
test
pushf
neg
jo
stos
in
in
mov
or
fcoml
mov
push
xor
push
repz
les
mov
mov
stc
aad
mov
dec
mov
jmp
pop
bound
lods
push
pushl
stos
dec
or
mov
test
lahf
mov
mov
push
jle
jbe
lea
cmp
pop
lock
adc
pop
fbstp
sbb
add
dec
pop
fbld
pop
adc
std
inc
xor
or
xchg
mov
into
and
test
rolb
cmp
out
cmp
adc
pop
mov
sti
inc
fimuls
mov
xchg
out
mov
push
push
push
jns
frstor
mov
push
inc
push
xchg
movl
jl
mov
mov
sub
aam
fstpt
leave
scas
pop
idivb
shll
loop
mov
sub
pusha
mov
jo
sub
ds
or
lret
jmp
sub
mov
jns
cmc
mov
int
mov
jg
sbb
push
addb
shl
push
in
push
movsl
jmp
jne
fdivr
rcll
add
nop
mov
lahf
ds
jb
in
cmp
mov
arpl
xor
in
mov
push
in
fwait
pop
cmpsb
cmp
add
ja
test
xchg
pop
push
popf
addr16
shl
mov
ja
iret
inc
push
mov
cmp
xchg
scas
aaa
jmp
fnsave
or
inc
mov
mov
jmp
ljmp
scas
inc
mull
fnsave
pop
fstpl
push
push
cmp
push
xchg
test
cld
sbb
fnstsw
mov
ss
mov
test
arpl
lcall
adc
pop
loopne
mov
push
insb
in
adc
jbe
xor
loope
shrl
cli
roll
xor
mov
icebp
loop
out
clc
lahf
cmp
push
outsb
int
jnp
mull
fnsave
test
xor
fcoms
jmp
lahf
fcmove
jae
or
pop
shll
sub
push
cmpsb
inc
sub
imul
ss
cmp
xor
cmp
loopne
icebp
pushf
adc
psubq
das
in
movsb
rorl
xlat
hlt
xor
xorl
pop
mov
mov
movsb
inc
mov
bound
sbb
std
out
push
sub
xor
add
pop
mov
xchg
out
xchg
mov
rcr
cmpsl
pop
dec
lcall
in
iret
and
push
test
negb
jle,pn
cmp
sbb
mov
scas
test
roll
sbb
sbbb
sbb
mov
fs
or
lcall
aaa
push
iret
fdivrl
adc
fistpll
nop
test
jp
dec
pusha
mov
xlat
mov
rcrl
addb
xchg
movups
shrb
test
imul
xorb
xor
stos
jge
inc
sahf
pop
data16
pop
sbb
xchg
pop
cmp
fcoms
jl
sub
cmp
insb
push
pop
sbb
add
fcmove
mov
aas
pop
jbe
mov
inc
push
mov
loopne
imul
subl
add
cwtl
sub
rclb
push
or
arpl
lods
sub
ret
xor
push
add
push
xchg
fdivr
or
scas
jae
test
shlb
dec
push
or
adc
lahf
leave
mov
loope
stos
lcall
pop
test
js
ljmp
hlt
sarl
push
es
mov
jmp
add
iretw
ret
add
adc
xchg
test
test
xor
arpl
inc
add
icebp
jnp
cltd
xchg
and
popf
fdivrl
cltd
lds
mov
stos
sub
jo
pop
sbb
lcall
mov
xor
pop
in
lahf
cmpsb
adc
fs
sub
iret
inc
sub
iret
out
dec
cmc
xchg
int
jns
dec
kmovb
sbb
pusha
stos
sarl
lea
std
ret
in
loopne
mov
icebp
sti
push
pop
insl
mov
int
icebp
mov
inc
cmpsb
sub
fisttps
popa
adc
dec
pop
jg
sbb
or
mul
nop
xchg
rcll
psubsw
insb
repnz
inc
mov
notl
es
rsm
and
xor
sarl
std
int3
hlt
or
dec
test
lret
pop
add
ret
mov
pop
xchg
es
and
or
cmp
in
outsb
mov
and
xlat
in
out
cwtl
orb
dec
mov
sbb
xchg
and
cmp
bound
or
dec
jnp
adc
repnz
js
loope
push
dec
jno
mov
daa
jb
ds
add
xchg
imul
cld
ret
xchg
cli
dec
jne
int3
pop
fldenv
mov
mov
dec
mov
insl
or
in
test
cmp
cs
add
jg
sbb
aam
in
or
movsb
mov
fbld
mov
jp
mov
dec
pop
xchg
loopne
lcall
adc
dec
jb
mov
in
mov
xor
jbe
scas
aad
es
xchg
adc
sbb
cld
fcmovbe
cli
cs
adc
fldt
lret
add
cmp
push
and
mov
mov
cmp
and
mov
jnp
gs
rol
je
mov
jno
push
fdivrl
sbb
sbb
jmp
ss
int
mov
push
fs
ss
nop
iret
test
mov
hlt
int
into
dec
xchg
mov
cltd
sub
iret
sti
push
fsubs
mov
pusha
or
inc
mov
jle
sbb
adcl
pop
fiadds
cwtl
mov
rcrb
icebp
mov
dec
hlt
xchg
mov
sub
cmp
mov
jb
movsb
push
enter
mov
repz
leave
outsb
push
adc
and
aad
inc
sbb
add
cmpb
jecxz
insl
in
ljmp
and
movswl
lock
lds
cmp
addr16
pop
fadd
in
loopne
xlat
inc
aam
dec
stos
cltd
insl
xor
mov
or
stos
push
jg
into
pusha
ret
adc
inc
ljmp
subb
insb
xor
ss
outsb
or
mov
jo
lcall
stos
clc
inc
xor
adc
push
fs
adc
jl
xorl
adc
movb
test
xchg
dec
and
and
loope
mov
sub
jno
pop
mov
and
sbb
pop
push
sahf
xor
inc
xor
mov
std
xchg
cmp
xchg
js
loop
add
sbb
push
dec
sbb
pop
pop
cld
bound
in
mov
sti
mov
push
ds
xchg
xchg
fadd
or
or
cs
and
mov
cmc
insl
and
xchg
cmc
dec
es
gs
inc
and
sub
imul
xor
push
test
adc
cmpsb
les
ja
push
ss
cld
ret
lcall
xchg
int
mov
pop
jp
shl
fisubrl
mov
adc
cmp
scas
dec
dec
js
cmp
sub
mov
xor
dec
outsb
aas
push
pop
loop
xor
pusha
push
push
fcoms
add
in
dec
lods
lcall
jno
imul
cmc
pop
pop
test
mov
das
sbb
out
sbb
loop
mov
add
inc
sarb
xor
sbb
sti
subl
out
lcall
repz
sahf
lea
xor
std
cwtl
testb
les
xchg
jno
scas
lock
push
stc
dec
mov
mov
xchg
jg
push
nop
adc
mov
dec
fldenv
scas
lahf
sahf
xor
leave
mov
xor
inc
pusha
arpl
inc
in
in
cmpsl
pop
jp
hlt
mov
repz
xor
and
sbb
sub
dec
imul
stos
push
mov
divb
hlt
pop
dec
popa
icebp
and
stos
and
push
inc
jbe
stos
aad
bound
sbb
push
pushf
and
stos
cs
outsl
ja
mov
sub
loopne
std
repz
cmp
inc
jle
shrb
mov
xchg
sub
fildll
aam
push
lret
jnp
jno
sbb
aaa
sti
lds
andb
js
enter
mov
aaa
push
pop
fbstp
inc
enter
lods
or
sbb
cltd
cmp
lock
jp
dec
inc
shll
mov
lock
test
loop
adc
cmpsb
sub
in
lret
xchg
call
daa
cwtl
push
pop
out
call
and
ljmp
idivl
fstl
pop
push
loop
add
dec
sti
xchg
int
push
leave
xor
aad
sbb
push
cld
jge
dec
adc
and
inc
mov
xchg
mov
pop
mov
dec
popf
scas
ss
jno
adc
js,pt
xchg
inc
mov
xchg
dec
xor
imul
dec
ret
and
test
fidivrs
add
sbb
or
mov
cld
jbe
fstl
and
loope
fucomi
notb
push
sahf
hlt
pusha
xchg
das
jp
repnz
fcmove
icebp
jnp
push
jge
fstps
mov
jne
fldt
sti
mov
inc
jmp
sub
cmp
mov
or
aaa
imul
out
test
mov
pop
repz
and
sbb
mov
bsf
je
mov
and
sti
lret
lret
aaa
negb
and
ja
lahf
sbb
or
jno
enter
movsl
xchg
es
pop
inc
stos
xchg
mov
or
xor
lret
inc
lock
mov
cltd
mov
stc
jo
add
pop
enter
sub
js
push
jns
jbe
sub
fsubl
mov
push
cmp
test
in
cs
fsts
xor
test
add
scas
adc
fldl
fsubrl
dec
mov
and
mov
dec
cmp
mov
pop
nop
fs
push
repz
loop
imul
push
xor
notl
jne
daa
pcmpeqw
push
insb
dec
int
mov
add
push
dec
sarl
lods
sahf
jl
leave
leave
mov
rol
jmp
ficompl
push
jmp
outsb
outsl
or
mov
hlt
mov
jecxz
arpl
dec
test
hlt
pop
inc
or
or
add
xor
sub
lods
xchg
shrl
mov
mov
cmpsb
fs
pop
sbb
xlat
mov
nop
jge
jmp
mov
push
add
ljmp
pushf
and
cmp
xor
icebp
pop
sub
or
or
mov
popa
push
ljmp
repz
sbb
push
sahf
out
pop
hlt
cwtl
adc
jbe
cmpsb
aaa
push
adc
sub
sbb
cwtl
cltd
popa
push
outsb
mov
mov
ret
jo
movsl
lcall
pop
test
sub
mov
mov
push
inc
xchg
ljmp
dec
or
fmulp
push
xchg
ret
sbb
ja
mov
inc
pop
shrb
fdivrp
inc
mov
cmpsl
int3
enter
outsb
stos
mov
fdivl
mov
pushf
movsb
arpl
lea
sahf
test
nop
and
mov
fdiv
stc
jmp
sub
xrelease
mov
inc
es
decl
sarl
adcb
mov
ret
push
stos
jns
dec
cmc
or
pop
inc
sub
mov
outsl
sahf
iret
loope
pop
dec
in
hlt
jg
pop
ss
mov
insl
mov
rcrl
jp
hlt
lods
inc
aam
push
pusha
jl
mov
sbb
ficompl
sub
jl
shl
repnz
ret
jl
mov
comiss
mov
adc
add
in
push
test
fnsave
cmp
fcomi
jo
iret
fimuls
jb
sahf
fcmovnu
push
shlb
jae
pop
mov
push
mov
xchg
insl
nop
rorl
mov
cs
inc
xchg
xor
push
dec
fidivrl
xor
lcall
jge
js
xor
ss
addr16
fs
jg
push
mov
es
xchg
jle
mov
jle
lret
cmp
test
push
add
jbe
out
adc
pop
add
push
or
lcall
imul
call
dec
xlat
or
je
inc
repnz
dec
fdivrl
movsl
adcb
insl
and
pop
jmp
and
repz
push
stos
or
lret
jmp
ret
mov
fdivs
outsb
jnp
cmp
movsb
cmpsl
rcrl
imul
inc
repnz
xchg
adcb
lret
es
loopne
cltd
dec
xchg
jl
std
pop
aas
push
aam
dec
mov
push
mov
cld
push
rcrl
ja
das
jmp
and
push
adc
repnz
mov
push
jge
dec
sub
shr
in
cmp
jg
sbb
add
in
mov
push
jp
push
xchg
xchg
add
loope
xor
sbb
lret
cmpb
lods
test
add
je
insl
cmp
xor
push
stc
cltd
jb
push
push
shr
mov
cmc
adc
sub
inc
fwait
xchg
clc
push
gs
shlb
subl
mov
xor
popf
dec
mov
stc
icebp
xchg
bound
jns
adc
dec
aam
jl
mov
pop
sbb
dec
aam
nop
mov
xchg
stos
nop
rorb
mov
and
addr16
out
enter
cmp
fwait
mov
push
lcall
cmp
cmp
mov
lcall
inc
lock
dec
loopne
add
jmp
aad
mov
pop
js
inc
mov
movsbl
sub
add
inc
mov
es
push
and
jmp
cmp
mov
stc
push
mov
pusha
mov
sbb
scas
xchg
rcr
orb
hlt
aas
loope
adc
das
pop
add
push
cmp
loop
or
xchg
push
das
adc
sarb
out
mov
daa
stos
cli
jl
popf
jb
pop
jecxz
rcrl
push
loope
cmp
fdivrs
dec
repnz
add
jno
mov
or
adc
push
stos
sbb
insb
xchg
or
orl
stos
inc
jmp
cltd
clc
in
xor
jecxz
hlt
inc
add
jns
stos
cmc
xchg
popa
cmp
pop
mov
stos
imul
push
lock
add
hlt
test
pusha
mov
dec
imul
dec
cld
jge
jle
xorb
fbld
dec
lods
xchg
inc
cli
xor
cld
cmp
sbb
jns
mov
pushf
imul
in
mov
dec
frstor
cli
xchg
stc
fnsave
adc
test
adc
pop
xor
stc
inc
insl
jnp
shll
push
cmp
sub
rcrb
ja
js
jno
xor
pop
mov
int3
pop
mov
aas
dec
cmpsl
cmpsl
popa
mov
mov
test
adc
outsb
lret
sub
in
arpl
jmp
inc
stc
cltd
add
xor
in
sub
ds
daa
gs
push
js
push
sbb
das
popf
ficomps
lds
push
rolb
idivl
leave
mulb
insb
loopne
ds
hlt
iret
fisubrl
push
les
and
sub
inc
jle
jge
or
mov
std
stos
sbb
xlat
inc
cltd
aaa
cmp
mov
mov
adc
cwtl
xchg
fwait
mov
sbb
test
outsb
dec
mov
mov
cld
int3
aad
cli
mov
lahf
pop
out
jle
cs
cld
es
xchg
rclb
aaa
in
je
stc
jae
clc
cld
jns
push
std
daa
push
ret
ret
nopl
and
bound
pop
das
xor
cmp
xor
popf
inc
xor
xchg
mov
push
or
jmp
and
stos
int
sub
out
ret
xchg
js
or
outsb
mov
ret
push
int
pop
sahf
int3
out
in
mov
cmp
lds
fwait
in
int
jp
enter
and
mov
push
add
popa
jecxz
mov
lds
test
pop
cmpb
adc
xor
cwtl
daa
test
mov
popf
addr16
xchg
push
dec
pop
out
cmp
shrb
test
xor
adc
sub
mov
shld
lods
sbb
dec
dec
pop
fiaddl
dec
xchg
mov
xchg
adc
xchg
jo
dec
sti
dec
xchg
dec
mov
and
or
out
sbb
nop
loopne
into
popa
xchg
mov
cmc
popa
scas
adc
push
out
jbe
in
push
cs
fsubrl
fwait
mov
cltd
das
xor
xchg
push
jo
loop
mov
lock
lret
adc
in
adc
je
cmpsb
ds
xchg
test
sar
movsb
sbb
and
inc
mov
jp
mov
mov
adc
in
popa
fstpl
and
jno
pop
pop
add
xchg
jno
mov
mov
sbb
push
ljmp
jmp
lcall
loope
xchg
xor
cmp
out
xchg
rol
add
and
xchg
inc
ret
inc
mov
mov
movsl
mov
push
call
fidivs
maxps
dec
push
movsb
sub
pop
scas
pop
mov
or
jle
mov
fs
jp
sub
push
add
ret
mov
sahf
in
xor
fmul
pop
pop
nop
cmp
pop
int3
jb
fistpll
push
je
stc
outsb
xor
push
and
mov
out
xchg
dec
push
daa
pushf
fdivrs
sbb
pop
rcl
movsl
aaa
test
fwait
mov
sar
in
cmp
popa
xchg
or
int3
js
jmp
adc
cmp
into
add
cmp
aaa
push
fidivl
mov
jle
push
xchg
in
jbe
mov
sbb
or
pop
pop
ret
mov
cltd
scas
push
push
xchg
dec
cmp
xor
mov
jo
add
mov
mov
sub
loope
pop
xchg
ja
adc
cmc
jmp
ret
loopne
xchg
dec
hlt
fstps
gs
pop
les
popf
icebp
push
mov
pushf
mov
jp
popf
or
aaa
pusha
clc
std
dec
pop
jo
out
mov
jno
add
ret
aas
push
adc
mov
pop
jns
cmp
mov
jae
jge
pop
movsb
sti
and
fimull
out
scas
aas
out
sahf
jnp
ds
push
loopne
mov
xchg
mov
pushf
jno
inc
in
cmp
sti
lock
sbb
and
push
inc
test
inc
loope
push
aaa
sar
sbb
push
popf
dec
jae
sbb
daa
test
sbb
leave
dec
push
cmp
mov
idivl
lahf
sar
mov
cmpsb
dec
mov
ss
decb
idivl
cs
and
hlt
or
pop
rcrl
movsl
push
sbbl
pop
lock
jge
test
aad
stos
icebp
pusha
add
sarb
lock
shlb
arpl
fs
pop
jmp
imul
sbb
js
mov
jns
in
fisubrl
ficoms
sbb
leave
inc
cs
sub
fdivrl
adc
inc
push
loopne
push
cmc
scas
pop
and
pop
sub
lret
and
sahf
xchg
push
sbb
rorb
jecxz
jmp
lret
mov
xor
outsb
addb
ljmp
test
or
repnz
xor
shll
imul
aas
iret
out
insb
mov
mov
arpl
adc
imul
int
frstor
das
ja
leave
mov
cmp
in
aas
cmpsl
nop
xor
dec
cwtl
jae
pushf
movsl
out
and
lret
xlat
push
or
lahf
subl
mov
arpl
add
cmpb
sbb
inc
aas
or
lods
pushf
dec
rolb
jmp
cld
or
roll
mov
mov
jmp
or
jae
repz
pop
test
sub
std
inc
sbb
outsl
sub
inc
xchg
mov
xchg
or
cmpsb
xor
cmp
add
sbb
lcall
imul
cmpb
add
cmp
mov
jne
les
dec
ljmp
hlt
jge
fwait
loope
out
into
pop
jne
dec
cwtl
ja
imul
xchg
fdivs
cmp
or
test
xlat
jns
ret
sahf
aam
jno
xor
inc
and
roll
test
repz
mov
push
jne
fsub
fs
clc
push
loopne
sbb
cltd
addl
dec
arpl
mov
fidivrs
out
loope
dec
push
enter
sbb
pop
jns
inc
adc
mov
stos
pop
loop
mov
cmp
xchg
int
mov
and
add
pop
adc
mov
jae
or
sbb
and
int
nopl
mov
sbb
testl
mov
dec
mov
jge
sub
sub
out
push
or
mov
jae
cld
in
jecxz
scas
stos
xchg
aam
jl
loopne
aam
sti
dec
psubb
sub
pop
sbb
mov
push
pop
xchg
sbb
sarb
je
adc
aam
xchg
sbb
xchg
adc
testl
xchg
and
bnd
pop
fnstcw
lea
inc
fdivl
dec
cmpsl
daa
jge
ss
inc
bound
rcrl
sbb
adc
adc
repnz
xchg
test
and
fsubs
fbld
adc
xchg
cmpsl
imul
sbb
sti
cmpsl
xor
cmp
ret
enter
roll
test
sbb
cmp
push
cmpsl
mov
repz
adc
maskmovq
divl
add
jmp
repnz
cmpsb
test
pop
fwait
dec
sbb
pop
mov
add
clc
call
jecxz
test
ja,pn
rclb
jns
movsb
hlt
pop
mov
cmpsl
sbb
dec
lock
mov
and
insb
inc
jno
mov
adc
xor
and
in
mov
dec
xchg
fistpll
dec
lcall
cs
pop
sbb
cmp
insb
test
cmp
ret
hlt
test
lock
xchg
cmp
sub
mov
mov
popf
mov
fcompl
cwtl
sbb
scas
out
xchg
mov
cmpsl
ljmp
xchg
rorl
ficoms
or
in
jo
sub
aad
sub
or
cmp
inc
or
js
test
insl
movsb
jecxz
mov
jg
ljmp
adc
imul
push
dec
mov
pop
sarb
fimull
inc
pop
or
stos
mov
inc
xor
push
int
iret
sti
fwait
stos
inc
fs
jmp
push
lret
add
and
sahf
cmp
clc
xchg
or
jge
mulb
pusha
outsl
in
subb
les
or
jns
insl
aaa
sub
cli
xchg
enter
ja
pop
adc
decb
lcall
ja
push
push
loope
inc
pop
xchg
sbb
add
daa
lea
mov
adc
pop
or
push
in
aaa
insl
inc
btr
lods
enter
repz
sbb
add
movups
cmp
lods
or
add
and
dec
dec
mov
call
ljmp
stos
popa
and
xchg
push
dec
lahf
repnz
jp
out
pop
repnz
repz
mov
push
sahf
ds
jb
lods
mov
mov
or
add
add
sub
aad
lret
or
cmpsb
je
mov
arpl
mov
cmpsl
cmpsb
jno
jmp
pop
jbe
cld
pop
pop
ret
xchg
add
mov
inc
ljmp
mov
fdivrl
cld
sub
loopne
fdivs
enter
push
jo
stos
adc
imul
jb
mov
ret
fimuls
in
and
out
sbbl
mov
aad
xchg
mov
sbb
mov
addr16
pop
pop
jbe
mov
fisubl
out
xor
lds
sub
xor
aam
mov
lret
or
dec
sub
fwait
or
sbb
cmp
sarb
adc
pop
dec
xor
add
and
shlb
outsb
iret
inc
jge,pn
and
or
or
mov
incb
pusha
jns
adcb
fnstsw
mov
sbb
ja
adc
jmp
adc
fldt
jns
or
xchg
xorb
jmp
pop
sti
jbe
cmc
push
jle
sbb
cmp
inc
outsb
leave
sub
icebp
subl
stos
push
std
fstl
cmp
enter
add
or
adc
incb
push
add
jg
loope
xchg
fsubrs
stos
or
in
fld
push
pop
ss
bound
shrb
lcall
mov
outsl
push
lds
lock
fs
and
test
jnp
cs
push
and
cmp
push
adc
pop
iret
mov
mov
xor
sbb
cwtl
mov
push
mov
fsts
ljmp
inc
sarb
cmp
xlat
push
sub
int
lret
pop
lret
push
lret
pop
fwait
addb
icebp
arpl
or
cli
fmul
scas
jae
aas
jno
ljmp
andl
mov
in
dec
imul
xorb
mov
sub
in
int
inc
xchg
cmpsl
mov
lods
dec
mov
add
je
sbb
mov
push
rol
loopne
ret
adc
mov
xlat
aad
pop
mov
xor
add
out
cs
ficoml
ficomps
shll
inc
loopne
sub
jae
or
imul
mov
jl
pop
dec
das
outsb
insb
das
jae
lods
loope
pop
push
in
xchg
repz
mov
add
into
xor
cli
and
mov
lea
jns
ss
dec
cmp
mov
int3
test
nop
xchg
idivl
jae
loop
dec
jl
jecxz
sbb
jmp
fistpl
or
add
sub
mov
sbb
aas
rcll
inc
inc
sub
fs
mov
mov
sbb
aas
cmp
test
ja
int
xchg
pop
mov
xor
mov
fwait
and
out
pop
inc
or
je
test
xorb
push
xor
push
test
pop
cltd
mov
dec
dec
insb
sbb
sbb
xlat
icebp
mov
sub
repz
fwait
inc
outsl
xchg
int
xlat
leave
xlat
mov
dec
sub
cmc
enter
bound
repnz
and
inc
lcall
jb
jp
jb
nop
fwait
movsl
or
mov
jo
scas
mov
nop
and
mov
sub
sbb
fadd
push
movsb
aam
sti
lret
shl
icebp
pushf
inc
aad
and
jmp
pop
ds
cmpsl
push
js
or
int
adc
lods
dec
xlat
fst
js
mov
arpl
decl
adc
dec
lods
adc
in
les
fistpl
inc
add
lds
aam
out
std
clc
xor
andl
lahf
outsl
vmwrite
and
fimull
adc
dec
sub
sub
adc
xor
xor
cwtl
mov
ja
pop
repz
aaa
test
int3
inc
xor
cli
xor
inc
stos
pushf
mov
imul
cltd
aam
cmp
sbb
adc
popf
xchg
xchg
add
rorb
xor
nop
mov
xlat
adc
int3
pop
xchg
dec
pusha
aam
dec
repnz
push
pop
insl
mov
push
xorl
stos
lcall
insb
adc
dec
imull
cmp
addr16
dec
dec
fistpll
mov
addr16
push
mov
and
sbb
and
xorb
push
pop
mov
lods
mov
mov
mov
add
sub
ret
aam
pushf
cmpsb
cmp
out
jne
pusha
dec
xor
and
lea
js
sbb
aas
insl
cmp
mov
icebp
int
inc
fistpll
test
push
push
xor
cmp
sbb
inc
and
shll
add
cs
fs
orb
addr16
sub
or
fdivrl
inc
adcb
movsb
mov
sub
push
xor
inc
push
sub
mov
popf
cwtl
es
cmp
xor
adc
nop
cs
cmp
mov
scas
push
in
incl
jae
push
jb
out
nop
jno
adc
mov
mov
rcrb
and
mov
xor
cmpb
pop
fcompl
mov
divb
popa
popa
leave
pop
aaa
insb
ja
lret
inc
iret
jae
cmpsl
jae
pop
mov
or
jg
cld
out
or
repnz
or
test
xchg
data16
out
inc
xchg
arpl
xchg
mov
jecxz
jge
enter
fs
out
mov
test
adc
adc
sti
sahf
into
and
sub
int3
mov
push
imul
sbb
popa
push
fnsave
sbb
stc
dec
arpl
std
pop
ljmp
mov
mov
inc
sbb
rcrl
fistpl
nop
popf
cmp
jl
mov
pushf
pop
mov
sbbb
pop
les
gs
xchg
in
sbb
dec
or
and
in
ret
mov
out
insl
push
mov
pushf
ret
xchg
mov
dec
mov
sbb
mov
add
nop
xchg
outsb
push
jnp
enter
loop
mov
sub
jno
in
cltd
daa
and
cs
loop
bound
push
xor
jmp
add
in
sub
js
aad
lock
inc
les
jns
arpl
pop
movaps
leave
mov
negb
add
pop
sarb
mov
dec
add
pop
jno
cmc
and
sti
sbbl
mov
sbb
pushf
sbb
push
mov
and
jg
mov
popf
scas
out
cmp
mov
nop
insb
xor
or
and
fdivs
in
xchg
or
cmp
jg
mov
andl
js
mov
xchg
iret
cmpsl
mov
jne
dec
xchg
ds
push
insl
xor
gs
mov
jecxz
push
lods
iret
int3
cltd
rcl
dec
popf
test
nop
xor
mov
jbe
test
mov
jmp
hlt
sub
rdmsr
lcall
mov
clc
iret
mov
iret
ds
aaa
push
dec
imul
cmp
lds
addb
cmp
push
into
das
aaa
cmp
sub
test
leave
lods
ret
mov
sub
mov
lock
in
dec
test
imul
xor
pop
fs
dec
mov
xor
filds
sbb
iret
sbb
dec
je
jb
jle
push
in
iret
mov
mov
xchg
cmp
gs
jnp
movsl
clc
mov
xor
fs
jns
inc
pop
scas
cmpsl
cmp
mov
jg
mov
and
aad
pop
stos
and
jmp
add
popf
fwait
bound
loopne
and
jl
mov
pop
test
loopne
pushf
add
jae
outsl
add
mov
add
mov
pop
es
or
ja
jb
adc
dec
pusha
jecxz
dec
insl
fildl
loope
repz
jl
inc
mov
xor
jle
dec
xchg
adc
mov
clc
xor
ds
push
cmc
sub
pop
lock
test
daa
ficompl
jp
sbb
and
adc
xor
push
scas
std
add
popa
lcall
cmovnp
cmp
subl
loopne
setns
cmp
lahf
in
mov
mov
mov
outsb
adc
mov
int3
adc
jg
add
add
stos
sub
imul
filds
pop
add
xor
aas
popa
jmp
inc
add
clc
cmp
inc
hlt
push
and
jbe
ret
xor
mov
cmp
xor
jl
lods
aam
add
xchg
xlat
pop
or
inc
inc
mov
test
cmp
inc
mov
push
addr16
mov
bound
pusha
and
cli
inc
test
jns
mov
scas
xor
xchg
lea
repz
and
push
sbbl
not
adc
outsl
out
xchg
add
xor
fidivl
dec
jge
dec
test
jecxz
and
pop
nop
xorb
or
inc
dec
adc
jae
test
xorl
and
lock
addr16
sbb
int
aas
push
in
aaa
mov
or
xchg
scas
sub
rolb
mov
mov
rorb
in
stos
xchg
sub
jg
cmp
clc
inc
ret
mov
push
fcoml
push
mov
mov
jo
lock
aaa
fsubr
add
stc
cmp
aas
pop
pop
in
jns
dec
dec
xor
jnp
mov
mov
fsubr
cwtl
and
call
adc
cltd
je
adc
cmpsb
in
in
jno
iret
out
jno
std
push
roll
pop
xchg
jne
pop
mov
test
fst
sahf
inc
or
jecxz
mov
loope
icebp
fisttpll
jns
sub
rcll
xor
cmp
shlb
lcall
inc
pop
clc
ljmp
lcall
int3
stos
mov
mov
gs
inc
adcb
push
mov
or
subl
jp
outsb
add
pusha
push
jg
and
cli
xor
mov
or
push
sbb
jae
sub
movsb
sahf
and
xchg
xchg
frstor
or
cltd
jne
sbb
and
jl
in
add
mov
inc
or
pop
and
cmp
cs
movsb
icebp
outsl
mov
iret
inc
push
inc
ss
jae
aam
test
call
ficoml
jp
das
adc
inc
lea
cli
dec
pop
into
pop
lods
incb
inc
cmp
mov
sbb
insl
adc
cmp
in
mov
fildll
loopne
test
cmp
cmp
xor
shl
xchg
adc
sahf
pop
cmp
or
ljmp
cmp
inc
jne
sahf
stc
cmp
mov
dec
cli
addr16
push
cwtl
mov
popf
fs
fistps
mov
dec
in
pop
rcrb
mov
nop
sbb
pop
mov
popa
fistpl
lcall
push
bound
clc
daa
sbb
xor
sbb
pop
push
fnstsw
mov
out
pop
jns
and
mov
or
scas
cwtl
mov
movsb
loop
mov
ds
dec
mov
outsl
jb
pop
mov
xchg
lock
mov
mov
adc
ljmp
pop
stos
mov
arpl
push
and
les
xor
fildll
pop
pop
dec
in
scas
cli
pop
inc
adc
sub
dec
insb
pop
arpl
pop
fistps
fists
movsl
adc
inc
pop
cwtl
stos
stos
adc
ss
pop
jb
push
sub
daa
sub
mov
mov
insb
daa
inc
out
jg
sbb
and
jle
imul
orl
mov
mov
test
repz
pusha
scas
out
adc
xchg
pop
push
mov
fs
in
ror
xor
in
xor
orl
test
sub
lock
jg
dec
stc
sbb
bound
jae
outsl
cmp
hlt
pop
xor
inc
test
dec
push
mov
iret
mov
cmpl
icebp
xchg
fcmovbe
mov
xor
cmp
jne
arpl
mov
test
pusha
ja
adc
daa
pop
cwtl
mov
imul
and
fisttpll
in
pop
adc
int3
adc
dec
scas
push
stos
rol
es
test
jle
popf
mov
xchg
sub
mov
mov
cs
adc
outsl
sub
in
lds
addr16
stc
mov
jne
gs
fbstp
outsl
in
sti
xchg
aaa
sarb
ja
xchg
fs
nop
mov
ret
jbe
sbb
nop
xchg
cmp
xchg
inc
ja
sub
loop
stc
in
add
jge
testl
lret
fbstp
clc
ret
jae
popa
iret
dec
loopne
sti
add
jmp
mov
ret
scas
sub
fwait
lods
inc
cwtl
rcll
mov
pop
inc
aam
cmp
dec
ja
mov
in
xor
cmpsb
mov
jp
lock
pop
fcmove
add
cmp
lods
insl
outsl
cmp
xchg
or
pop
mov
mull
add
test
sbb
insl
mov
fwait
dec
pop
roll
sub
jle
mov
jl,pn
lcall
dec
push
cmp
sub
push
adc
nop
dec
lds
cmc
mov
mov
xchg
repz
outsl
gs
bound
jmp
jae
adc
mov
lea
dec
mov
pop
fimuls
in
cmp
and
js
xchg
jae
repz
mov
cltd
mov
ljmp
aas
xlat
sahf
lods
addl
cld
sbb
adc
pop
mov
or
sbb
mov
lret
lahf
push
and
pusha
cli
and
ret
dec
outsl
dec
shl
mov
push
stc
ljmp
xor
inc
and
cmp
adc
push
cmpl
push
cld
inc
data16
addr16
aam
mov
test
das
adcl
insb
lock
fldenv
push
cmp
jnp
daa
sbb
adc
cmpsl
jbe
test
sti
hlt
in
fcoml
adc
sahf
out
xchg
cmpsb
rorb
cmp
cmpsl
sub
cli
push
in
bound
push
orb
adc
adc
or
nop
push
rol
clc
ja
push
mov
scas
negl
shll
loope
jnp
mov
jge,pn
out
fucomip
hlt
jb
jg
jne
nop
sub
xor
cmpsl
ss
rcr
adc
dec
rcrl
push
sub
sbb
jo
or
stc
fwait
push
dec
cld
out
lods
clc
nop
test
xor
jp
push
inc
gs
lock
adc
cmp
rcll
incl
add
sahf
lock
xchg
mov
into
stos
jl
psrld
clc
std
aam
jmp
or
sbb
ret
lcall
test
imul
cs
xchg
add
cmp
adc
or
fcmovb
mov
insl
inc
push
sbb
mov
loope
jmp
adc
jae
pop
je
or
pop
pushf
push
mov
mov
pusha
sti
dec
dec
dec
mov
pop
call
push
xchg
js
shll
pop
inc
ljmp
iret
jp
mov
fstp
xor
push
ds
lock
scas
fcompl
adc
popf
cmpsb
fdivp
out
cli
data16
sub
dec
pop
xchg
jo
xor
jno
test
and
ds
ror
adc
mov
mov
push
sub
inc
sbb
data16
push
repz
mov
mov
pop
push
out
lods
add
or
xchg
sbb
stc
mul
imulb
les
aad
and
xor
jp
icebp
xchg
lea
push
pop
out
cmovge
pop
fisttpl
adc
shrb
nop
stos
mov
cmp
pop
xor
loopne
push
bound
mov
lahf
add
push
ja
mov
call
mov
loopne
sarb
xchg
adc
xchg
mov
in
push
ret
incb
dec
scas
jg
cmp
aam
mov
adc
cmp
iret
leave
ljmp
loopne
stc
lods
rcll
push
dec
pop
jns
mov
stos
xorl
loop
push
xchg
and
shrb
jg
jg
fs
jl
push
xor
dec
fmul
cld
ficompl
arpl
ret
jbe
push
xor
xchg
popa
ret
outsb
test
fsts
shl
push
dec
seta
hlt
sbbb
and
xor
inc
ja
mov
xlat
cwtl
int
and
or
call
push
out
rcll
gs
mov
cmc
imul
inc
add
daa
push
cli
jns
les
mov
in
jl
push
in
cs
sti
pop
sar
and
cmp
fsub
test
lahf
mov
jmp
mov
mov
mov
pop
mov
add
lret
ret
mov
je
push
lret
sub
add
stos
popa
in
addl
xor
rcrb
pop
leave
sbb
xchg
lock
imul
mov
xor
mov
out
mov
add
test
mov
lret
xchg
pop
outsl
rcrb
jb
jmp
loop
push
nop
int3
in
int
cmp
mov
mov
push
add
cwtl
aam
rclb
and
lods
dec
loope
aaa
push
jle
mov
xlat
nop
cmpb
repnz
xchg
jle
sub
add
subl
cmp
xor
mov
rcll
inc
je
dec
jl
out
icebp
inc
lret
sub
cltd
es
lea
int
es
lods
ret
fnsave
xlat
popf
lret
sti
fistl
cmp
shll
sbb
addr16
scas
lods
push
fldt
inc
scas
jp
cmp
push
ret
xchg
lods
sbb
and
andw
ja
orb
sahf
sub
test
clc
push
loope
mov
and
sbb
scas
jp
mov
pusha
mov
xchg
or
cmpsl
dec
cmp
cltd
push
insl
push
stc
mov
dec
cli
dec
loope
mov
adc
add
sub
outsb
ja
fsubs
or
inc
xor
xor
out
fwait
xchg
sub
jb
imul
lahf
push
ja
lock
ds
ficomps
pop
mov
push
lods
pop
and
icebp
or
lea
mov
fistpll
xor
ja
sbb
or
jmp
je
dec
inc
das
cmc
pop
cmp
lea
rorb
inc
fstps
pop
mov
gs
or
fmul
insb
lods
jb
cld
add
outsl
sti
mov
push
or
test
sub
test
sbb
in
and
pop
jb
jb
out
nop
fmuls
and
dec
lret
lods
daa
sub
or
pop
xchg
insl
push
cmp
sub
stos
jle
pusha
push
in
out
pushf
xor
stos
imul
dec
outsl
adc
dec
aas
insl
mov
scas
sbb
push
movsl
xor
pop
mov
daa
push
sbb
cld
sbb
lods
loope
shlb
das
push
mov
dec
mov
test
pop
xchg
add
jmp
inc
xchg
inc
js
xor
push
loop
jnp
aas
cmpsl
dec
mov
cld
inc
les
jo
xor
cmp
sarl
inc
fucom
pop
add
add
add
jo
hlt
sub
inc
cmp
pop
xchg
lods
lcall
jp
sbb
sbb
pop
mov
mov
repnz
adc
lahf
add
mov
sub
cmp
adc
jne
pusha
or
ret
inc
adc
rolb
icebp
cmp
lock
mov
pop
add
fcomps
mov
ficomps
cmp
cmpsl
insb
jg
lods
ffreep
xor
jmp
vmwrite
fists
stos
insb
push
sbb
sub
sbbl
mov
andl
inc
fiadds
cs
xor
cmpsl
enter
dec
xor
and
imul
into
call
mov
add
out
pop
ja
icebp
es
outsb
or
xchg
and
divl
mov
and
lea
xor
xor
ret
pop
lods
aad
and
cmpsl
xchg
xchg
mov
mov
daa
mov
push
dec
xor
adc
xchg
ds
daa
in
mov
adc
jne
cmpsb
cmp
ret
and
inc
das
jns
icebp
out
and
inc
dec
in
imull
jmp
test
add
and
mov
push
pusha
ljmp
push
in
xor
push
push
pop
mov
ret
push
mov
loop
pushf
xchg
aam
test
add
out
pop
mov
push
jb
lahf
jnp
adc
adc
int3
andb
setnp
xor
xor
xchg
mov
idivw
xor
mov
inc
mov
inc
fimuls
dec
or
pop
sub
mov
cmpsb
mov
lods
cmp
xor
mov
mov
rcrl
in
jmp
rcl
inc
sub
scas
pushf
es
push
aas
adc
cld
mov
jb
les
mov
outsb
stos
pop
dec
addr16
roll
rclb
mov
jns
dec
mov
daa
rorb
jae
call
lcall
jl
ljmp
dec
cmp
mov
out
rorb
jle
hlt
xlat
cwtl
or
rolb
out
push
xchg
aam
xor
dec
popf
mov
divb
push
sub
xchg
adc
jae
test
sub
loopne
mov
mov
out
and
repnz
xor
mov
pop
add
lret
lret
cmc
out
xor
push
jnp
ljmp
cmp
out
mov
fstpl
mov
rol
cmp
out
mov
jbe
pop
pop
stc
in
xor
subl
or
inc
mov
adcb
sub
lods
sbbl
push
popa
pop
mov
push
ds
mov
test
fidivl
cmp
bound
in
pop
push
loopne
ja
xchg
ljmp
push
jg
repnz
loopne
push
mov
and
loopne
inc
xor
inc
xor
and
and
cmpsl
dec
loopne
push
hlt
mov
pushf
push
cmp
out
mov
jae
push
or
mov
cmpsb
xor
repz
add
and
test
outsl
dec
mov
repnz
std
pusha
nop
lods
mov
xor
add
mov
into
and
and
and
push
and
loop
fbld
mov
pushf
dec
add
ja
dec
mov
sbb
push
and
sub
out
incl
mov
ret
cmpsb
loopne
mov
jecxz
movl
repnz
mov
stos
or
inc
xchg
xchg
push
out
je
add
cmc
mov
mov
and
ja
xor
and
das
fpatan
loop
rcl
orl
xchg
pushl
cmp
jno
mov
and
cmpsl
dec
dec
jnp
divb
jge
aas
xor
mov
pusha
sbb
adc
dec
xchg
xor
xchg
aas
mov
mov
xor
dec
in
into
call
and
push
pop
and
pop
cmc
aad
and
or
aas
aad
mov
in
rol
nop
dec
xchg
sub
test
xchg
sti
fwait
mov
jb
cmpsl
push
imul
mov
inc
loopne
outsb
push
and
mov
mov
rcrl
in
push
rcll
shrb
sar
jmp
ficoml
inc
sub
shlb
pop
fimuls
and
push
pop
xor
stos
mov
in
or
mov
fcmovu
dec
scas
test
adc
hlt
lahf
mov
mov
cld
inc
cmc
sub
leave
out
enter
inc
fisttps
push
mov
ficoml
add
mov
mov
push
dec
mov
es
inc
cld
stos
in
rcr
jmp
out
mov
bound
dec
jmp
xchg
imul
xchg
int3
dec
cmp
push
and
lea
ja
add
push
lsl
push
add
aad
fildll
mov
fildl
xor
mov
push
aam
into
in
xchg
inc
fistl
pop
adc
cs
mov
adc
int3
inc
or
inc
and
fs
testl
iret
cmc
inc
hlt
inc
xchg
out
push
lret
fidivrl
enter
push
cmp
sti
mov
out
orb
pop
pushf
roll
call
imul
loopne
cwtl
push
xchg
lods
mov
cli
pop
cmp
lock
mov
cmpsb
mov
pop
insl
fnsave
js
loope
mov
sbb
or
lret
mov
add
enter
je
pop
inc
mov
pop
in
sbb
mov
rcr
add
push
xchg
sub
mov
lea
mov
cmp
xorl
sarl
fcmovnb
or
fistps
gs
push
aam
mov
dec
out
push
std
lea
mov
push
mov
adc
or
sahf
incb
jo
cmp
mov
sub
adc
subb
pop
mov
jge
repnz
xor
mov
dec
xor
sbb
pop
das
push
pushf
sahf
mov
pop
aam
repz
jo
stc
pop
xchg
outsb
outsb
inc
and
hlt
mov
xchg
aam
pop
dec
or
fistpl
push
hlt
adcl
sub
fsts
arpl
mov
leave
movsb
jge
adc
xchg
pushf
add
pop
pop
test
mov
pop
add
rcll
pop
fimull
in
test
cmpsl
add
dec
sub
jne
sub
stos
movsl
xchg
out
movsb
cli
pop
jno
adc
pop
or
mov
aaa
lods
sub
push
clc
gs
aam
xor
lcall
test
les
ja
out
loopne
push
cwtl
xchg
mov
rcll
test
int
adc
pop
imul
mov
lods
imul
stos
cmc
push
and
fs
in
aas
rclb
test
mov
int
jne
fidivrs
iret
or
sti
push
cmp
cmpsl
insl
or
mov
in
mov
push
cmc
orb
leave
fwait
add
add
stc
and
and
js
dec
repnz
stos
jg
addr16
or
insl
inc
test
out
push
jns
jns
cmp
lock
dec
jge
inc
lock
out
jmp
popf
andb
popf
inc
cmp
jbe
jmp
cmpsb
jno
dec
mov
test
adc
jnp
jecxz
lock
jge
adc
popl
inc
mov
jnp
lea
xchg
inc
push
dec
cmc
ret
mov
xchg
lret
sub
dec
mov
and
subl
or
mov
mov
mov
mov
outsl
pushf
inc
in
mov
mov
mov
pop
push
test
adc
lret
mov
inc
push
inc
jp
or
cltd
xchg
je
insb
xchg
addr16
stc
inc
in
jnp
test
lds
pop
divl
and
jp
jns
punpckldq
push
cmpsb
leave
xchg
pop
pop
jle
lret
or
dec
lock
dec
fistl
test
cwtl
mov
mov
inc
add
mov
shrb
lret
push
inc
push
add
or
pop
iret
pop
xor
sub
dec
dec
movsb
cmpsl
dec
imul
hlt
mov
xor
leave
and
ffree
mov
mov
int
sbb
mov
push
push
xchg
ja
lcallw
adc
or
push
cltd
popa
stos
arpl
jg
daa
inc
mov
adc
daa
sbb
pop
jae
cwtl
cld
xchg
xlat
or
xor
gs
movsb
test
and
in
mov
mov
adc
lcall
inc
inc
fnsave
dec
stc
pop
frstor
sbbb
in
and
iret
xor
ljmp
scas
jns
lcall
jge
sub
shrb
je
and
xchg
sub
arpl
mov
sarl
sbb
sbb
repz
adc
std
mov
mov
dec
incl
xor
arpl
fcmovb
std
mov
sarl
pop
sub
mov
lahf
cmp
and
push
rcl
popf
mov
cmp
lret
les
pop
std
call
repz
sbbl
dec
xlat
loop
push
sbb
mov
push
pop
test
shrb
sahf
ja
scas
push
adc
loop
scas
mov
xor
test
les
fucom
cli
mov
xlat
loop
mov
dec
inc
pop
jg
std
adc
dec
adc
xchg
cmp
mov
subb
notb
test
rorb
push
shlb
popa
mov
mov
loope
xor
leave
mov
pop
insb
add
or
push
inc
adc
cld
xchg
aad
movsl
pop
repnz
jge
ja
into
xchg
pop
add
xchg
sbb
stc
jae
push
loopne
pop
ss
fstl
push
nop
jno
popf
fwait
lea
insb
nop
or
mov
sbb
rclb
in
into
xchg
into
negb
pop
daa
pop
mov
inc
cltd
jno
adc
xchg
clc
cmp
mov
sub
or
xchg
push
sbb
xor
push
cmp
movsl
mov
loopne
xchg
dec
and
data16
stos
adc
stos
gs
movsl
fisubrl
outsl
daa
negl
sub
adc
add
inc
jnp
add
mov
data16
push
xor
and
mov
jno
inc
adc
lcall
mov
push
pop
xchg
jb
jne
cmp
orb
stc
orl
mov
push
nop
cld
imul
mov
pop
lock
fsubl
lods
into
pop
adc
xchg
sbb
pusha
sbb
xorl
in
shl
adc
in
aas
sbb
or
mov
or
fwait
lds
push
je
cmc
dec
in
pop
jp
adcb
jle
out
loop
jb
dec
cmpb
scas
xor
adc
push
daa
sar
cmp
pop
push
mov
dec
insb
pop
push
out
cmpsl
mov
cmp
adc
pop
jecxz
shl
pusha
push
stos
mov
mov
adc
pop
repnz
hlt
pop
or
add
push
add
fs
or
cmp
jne
das
jns
xchg
add
push
xor
cmp
cwtl
aad
mov
xchg
or
inc
movsl
lahf
and
dec
and
sub
dec
mov
cmpsl
test
jo
out
pop
xchg
xor
sahf
popf
jmp
mov
imul
mov
cmp
push
fisubs
xor
mov
sbb
mov
pop
les
xor
outsb
bound
popa
mov
adc
rclb
jae
add
or
lcall
xor
dec
dec
xchg
and
xchg
sub
icebp
mov
add
test
sarl
push
pop
pop
gs
xor
pop
into
push
pop
dec
push
in
add
mov
adc
sbb
insl
imul
mov
in
imul
adc
xor
movsb
fidivs
pop
add
roll
cld
int3
arpl
scas
pop
sbb
scas
js
ds
mov
xchg
inc
aaa
int3
dec
and
jb
and
loop
bound
out
out
mov
lods
dec
out
inc
mov
sbb
xchg
push
jecxz
adc
push
push
fs
out
inc
enter
fstps
mov
out
jecxz
mov
loope
out
fisttps
roll
xor
aas
imul
test
or
mov
rorl
jns
loope
adc
dec
cltd
cltd
jecxz
jns
push
test
mov
add
lcall
ds
mov
xchg
add
and
push
ja
xlat
cmc
cmc
test
fists
dec
gs
mov
divl
cmp
jae
dec
iret
dec
ds
aaa
adc
in
inc
push
rcrb
cmp
mov
outsl
lea
xchg
mov
push
xor
dec
sahf
ja
sbb
mov
sbb
pop
rcrl
cmp
dec
jno
or
mov
dec
cli
enter
insb
sub
mov
or
fs
or
in
add
jle
or
sti
lock
arpl
xchg
iret
dec
cli
cmp
outsb
pop
cmp
je
loop
inc
mov
pushf
iret
pop
lea
cld
pusha
test
shll
popl
stc
flds
sub
shrl
adc
sahf
jecxz
mov
mov
mov
xor
mov
out
arpl
int
fs
sub
dec
repnz
lds
mov
add
scas
push
pop
pushf
push
jl
imul
add
jle
jl
test
movsb
loope
std
mov
xlat
sub
and
mov
pop
mov
push
or
adc
dec
xor
dec
or
push
adc
sti
ficompl
sub
sti
into
pop
int
aaa
inc
inc
sti
dec
shll
cmp
jae
mov
adc
cmpsb
inc
dec
fdivl
adc
lods
lods
aam
xchg
jns
in
or
xor
data16
mov
int3
ljmp
jnp
inc
jmp
xchg
jecxz
sbbb
sub
mov
pop
lds
xor
or
cmc
push
shrl
daa
dec
xchg
jnp
sbb
cmpsb
add
pop
xor
in
pop
mov
repnz
pop
xchg
dec
popf
xlat
and
gs
rorl
adc
repnz
xchg
scas
jno
int
pushw
cli
pop
xor
test
or
sbb
xlat
dec
and
xchg
in
scas
or
outsl
out
pop
xorl
push
pop
cmpsl
push
mov
hlt
push
mov
mov
clc
icebp
loope
inc
mov
in
imul
add
mov
lea
andb
mov
pop
cmpsb
lret
sahf
test
loope
sub
in
sub
push
or
lods
cwtl
aaa
lods
pop
stos
imull
xor
push
jecxz
xchg
dec
cld
or
into
dec
leave
lock
xchg
jl
add
imul
xor
out
lcall
dec
cmpsb
pop
mov
inc
mov
clc
loopne
loope
xchg
dec
jle
fdivrs
xlat
mov
cmp
push
std
mov
fisttps
adc
inc
pop
icebp
xchg
pusha
insl
fcompl
stos
xchg
repnz
inc
mov
sti
add
mov
or
push
test
mov
loopne
leave
jle
loop
sbb
lret
pop
fs
inc
xchg
push
jg
mov
das
cmp
fidivl
addr16
mov
ja
push
push
into
xchg
xor
xlat
pushf
iret
std
mov
sub
pop
gs
push
repnz
adc
push
add
shlb
sub
dec
out
call
xchg
adc
inc
hlt
pop
loop
fisubrs
out
shr
and
lea
test
aas
xor
xchg
pusha
xchg
jbe
and
lock
ror
test
js
leave
or
cmp
sub
lret
push
popf
int3
outsl
jb
ds
out
xchg
cmp
mov
add
mov
cwtl
cmp
adc
mov
adc
jmp
inc
dec
sbb
pop
xor
dec
inc
pusha
cmpsb
stos
out
mov
sub
push
fsts
mov
dec
lahf
lock
aas
insl
mov
cmpsb
or
outsl
mov
mov
sub
dec
adc
mov
cmpsb
in
insb
adc
pop
pop
out
pop
fcomps
mov
shrl
lods
sbb
aad
jle
rcrl
pop
lock
xor
into
cmpsl
pushf
into
stos
test
addr16
or
push
scas
dec
popa
in
idiv
sbb
xchg
stc
loop
mov
dec
lea
dec
mov
sbb
arpl
mov
scas
repnz
cmp
mov
dec
dec
xchg
pushf
sbb
jnp
in
fldt
pop
data16
negb
mov
pop
ljmp
fcomip
jae
lret
push
bound
mov
iret
pusha
pop
dec
js
fs
push
ja
mov
fnstenv
push
addr16
movsl
cmp
push
popf
xchg
xlat
mov
xchg
and
mov
adc
clc
sub
mov
inc
mov
dec
js
mov
push
push
sbb
adc
das
bound
and
mov
enterw
bound
sbb
pop
xchg
jge
pusha
addr16
fimull
cmp
push
pop
adcl
out
and
das
es
pop
mov
flds
sbb
in
mov
pop
in
mov
jae,pn
outsb
mov
jl
loope
jecxz
daa
pop
outsb
push
dec
out
lock
mov
push
push
pop
loop
test
ret
ss
fwait
add
and
mov
not
jl
cmp
xchg
or
mov
or
inc
pop
push
cli
hlt
hlt
insb
push
mov
mov
test
mov
mov
push
sbb
cmp
xchg
fildll
rorb
cmp
push
sub
xor
out
xor
xorl
outsl
or
bound
ret
jbe
loope
sbb
mov
leave
pop
push
mov
mov
iret
int3
sbb
xlat
fsubl
xchg
add
cmc
repz
pop
mov
sub
or
or
xchg
loopne
hlt
sbb
add
fcomps
loope
lahf
ja
je
movsb
scas
fildl
adc
lcall
cmp
and
adc
out
int
push
lahf
test
flds
sbbl
inc
mov
gs
inc
nop
xchg
stc
mov
pop
jl
insb
in
push
ret
std
or
add
mov
call
dec
mov
mov
sub
adc
mov
adc
repz
dec
jmp
lods
xchg
insl
xorl
test
adc
clc
icebp
inc
aad
fsubrs
cltd
add
and
in
push
sahf
cld
inc
out
addr16
jae
insl
sub
cmp
movsb
inc
fwait
stc
mov
inc
jns
mov
add
lahf
leave
arpl
int
cmp
inc
adc
push
xchg
inc
cmp
dec
faddl
imul
jnp
popa
mov
xor
lahf
sbb
mov
push
jo
scas
imul
dec
and
ret
pop
popf
iret
and
adc
xchg
dec
push
xor
call
mov
loopne
fmull
out
adc
arpl
xor
les
cltd
loop
add
push
lea
test
sbb
test
cltd
xchg
jo
dec
add
dec
addr16
punpcklwd
inc
pop
fimuls
xchg
sahf
add
pusha
je
jbe
adc
push
stos
jbe
shrb
cmp
movsb
call
les
mov
ja
fnstsw
push
xor
sbb
mov
push
shlb
sub
mov
pop
push
xor
cmp
test
jno
mov
les
push
fwait
lods
or
jne
es
fucom
imul
fwait
xor
xchg
pop
les
sbb
test
pop
subl
test
arpl
push
xchg
daa
jb
jbe
imul
idivl
adc
lods
in
jg
cltd
or
jecxz
cmp
out
inc
sub
sub
scas
or
popf
push
addr16
push
ficomps
push
ficomps
jmp
ret
pop
ret
aad
xchg
fsts
sbb
stc
sub
dec
clc
adc
push
and
push
out
pop
aam
repnz
repnz
pop
sarl
ja
cmp
pusha
fildl
insb
add
loopne
clc
incb
mov
lock
vmaxps
mov
inc
add
cmp
push
les
in
lea
add
lret
pop
mull
mov
pop
fimuls
inc
push
sbb
mov
or
ja
ja
or
bnd
das
sbb
cmp
icebp
mov
ds
mov
xlat
cmp
movsl
dec
jp
stos
repz
leave
repnz
sti
cmp
mov
adc
or
jo
or
ljmp
into
rcrl
dec
addr16
lock
es
les
and
sahf
cmc
lahf
adc
scas
lea
lods
pop
ja
mov
stc
and
mov
jbe
push
repnz
and
lds
and
test
dec
mov
cmp
out
lret
add
test
outsb
adc
inc
dec
out
outsl
pop
xor
mov
dec
sahf
or
add
xor
sub
sbb
gs
repnz
mov
push
loopne
inc
push
mov
pop
into
push
mov
test
sti
mov
cwtl
mov
aad
jecxz
clc
adc
jno
mov
xchg
cmp
out
loop
in
test
lcall
sbb
mov
insl
stos
sbb
adc
stc
or
cmp
std
fs
bnd
dec
dec
mov
adc
sbb
loop
cmpb
cmp
movsl
cmp
push
mov
push
sub
push
fiaddl
ljmp
adc
push
in
out
and
lock
es
inc
aaa
cmc
daa
mov
mov
in
and
xor
jle
fisttpl
scas
mov
pop
test
shll
int3
shll
sti
repnz
std
push
loop
inc
mov
mov
cmp
dec
xor
pop
lcall
mov
ds
jg
pop
ret
in
rol
daa
aaa
sub
and
mov
xchg
and
sahf
lds
daa
adc
ret
adc
shlb
js
sub
fldl
cmp
jno
orl
outsb
call
clc
xchg
mov
mov
pop
stos
jmp
test
js
out
jns
mov
pop
xchg
pop
and
lret
int3
mulb
sub
cmp
and
out
out
or
imul
mov
ret
mov
jne
xor
pop
pop
js
or
pop
add
sbbb
sbb
cmp
cltd
adc
xchg
sbb
jp
gs
fisubrl
andl
in
pop
js
test
movsb
ret
ja
or
push
in
xor
std
pop
icebp
mov
mov
xchg
daa
mov
jl
cwtl
cmpsl
fstpt
mov
addr16
icebp
add
dec
test
or
lret
add
pop
inc
push
inc
mov
pop
test
dec
sbb
mov
jae
shr
lahf
ret
adc
into
clc
push
mov
cld
or
mov
fs
adc
incl
xchg
xchg
inc
mov
fs
mov
sub
shlb
add
and
insb
push
ret
insl
pop
js
inc
pop
cmovns
sti
or
push
js
test
in
std
fldcw
add
dec
int
cmp
inc
das
sti
sub
cmp
int
inc
cmpsl
sbb
xchg
jge
popa
adc
adc
lahf
xchg
mov
dec
xchg
shrl
fwait
lods
mov
xchg
jne
inc
push
push
xchg
stos
stc
xchg
mov
jl
shlb
das
fisubl
icebp
xor
xchg
xor
cltd
lahf
shl
and
js
pop
dec
dec
dec
mov
xor
out
loop
je,pn
shlb
es
fidivrl
xor
out
mov
imul
mov
mov
push
xor
mov
out
push
inc
cs
lcall
inc
rorb
jl
shlb
mov
imul
test
in
hlt
xchg
movsb
pop
je
dec
pop
pop
sar
imul
rclb
idivb
fdivr
stos
mov
les
jp
gs
adc
fisttps
pop
mov
cmp
ljmp
gs
ret
push
and
mov
cli
sbb
xor
in
stos
push
sub
lret
idivb
into
bnd
aam
mov
subl
outsl
movsl
leave
cmp
out
sarl
jl
mov
in
mov
iret
test
in
push
out
repz
lods
sub
jno
mov
xchg
push
in
jae
adc
inc
fnstenv
negl
jb
rcll
pop
or
aam
inc
lea
push
jbe
js
mov
in
sub
sbb
push
add
pop
or
js
int3
xor
in
adc
mov
inc
inc
sbb
push
mov
fstp
sbbb
mov
add
sbb
movsb
sti
pop
js
mov
inc
or
cli
add
cmpsb
jbe
jmp
push
mov
mov
aad
out
bound
not
add
dec
xor
fcompl
push
repz
ds
fcmovb
aaa
dec
mov
or
mov
out
sti
in
pushf
jg
mov
fdivl
push
in
lret
ret
dec
popf
divb
cltd
sub
sub
insb
call
fwait
inc
test
add
jno
cmpb
movsb
nop
in
xchg
push
mov
mov
lret
cmp
mov
cmc
xchg
filds
popf
pop
loop
lahf
adc
dec
les
sub
lret
in
outsb
jns
pop
and
and
push
jns
imul
push
pushf
sti
adc
cmp
jp
lods
addr16
cmp
sub
fmulp
pop
inc
mov
xchg
pop
cmpb
push
insl
int3
aas
fld
rcr
dec
ds
push
and
cmp
ja
setne
mov
aaa
jge
es
pop
inc
lcall
xchg
ja
repnz
and
cmp
test
stos
test
jnp
or
adc
mov
dec
or
mulb
pop
adc
shl
pop
outsl
aam
pop
popf
adc
enter
dec
dec
jecxz
push
push
test
jg
dec
adc
fsubp
stc
push
add
shlb
fisubrs
cmp
mov
pop
push
test
ret
iret
add
lods
test
int3
push
lods
mov
fldenv
mov
mov
xorb
xchg
jp
mov
iret
cs
ret
std
cwtl
mov
jo
repnz
out
pop
mov
std
hlt
cmp
cld
mov
inc
lds
inc
sbb
cs
int3
dec
jo
fnstsw
sub
or
push
fwait
sahf
sub
outsb
sbb
dec
pop
mov
int3
push
dec
pop
inc
repz
ret
sub
idiv
icebp
lahf
aad
push
or
push
addb
ds
pop
imul
lret
mov
fistpll
scas
out
repnz
lods
pusha
repz
push
std
lds
outsl
and
nop
pop
out
cltd
dec
pusha
stc
push
xchg
out
lcall
pushf
fidivl
mov
out
and
push
sub
pop
mov
or
sbb
daa
imul
in
xchg
and
out
loope,pn
pop
xchg
cmpsl
outsl
jmp
jnp
clc
lock
shl
jnp
mov
mov
arpl
scas
lahf
pop
shl
push
fcomi
jg
pop
ret
es
insb
imul
ja,pt
mov
in
rorl
jmp
outsb
sbb
movsb
jge
lods
sahf
scas
cld
cmpl
mov
int3
pushf
xchg
je
sub
cld
mov
fwait
popa
jne
in
lea
icebp
mov
mov
adc
pop
cmp
push
dec
icebp
out
push
pushf
add
fld
and
popa
jne
mov
mov
adc
sbb
sub
loope
add
pop
sbb
rorb
xchg
lret
adc
fsubrs
ss
repz
in
mov
test
xor
cli
je
mov
add
test
imul
xor
and
mov
xor
sbb
clc
mov
dec
mov
xor
mov
mov
mov
dec
fisubs
lock
push
push
inc
imul
xchg
adc
sbb
js
push
push
call
pop
push
repz
sahf
and
loop
jp
add
sbb
lds
sbb
fmuls
std
sbb
loop
fdivl
mov
jge
inc
int3
pushaw
sbb
push
or
cmp
and
dec
fbstp
cmp
xchg
xchg
lret
xchg
sbb
jecxz
sbb
jo
cld
or
faddl
mov
lods
cmp
add
rolb
sbb
and
cltd
adc
mov
popf
in
cmp
jns
mov
lcall
sti
xchg
in
mov
ss
or
test
das
imul
cld
mov
dec
xchg
cmp
fwait
jp
mov
mov
pop
pusha
sub
pushf
adc
pushf
pop
or
dec
cmpsl
stos
jge
push
in
dec
inc
add
add
in
push
pop
sahf
inc
mov
loop
cmpsb
ds
test
fmuls
das
jmp
sbb
fnsave
movsl
std
mov
or
push
xchg
cld
dec
xchg
sub
lods
jg
jge
jecxz
jno
xchg
sbb
iret
jae
xchg
cmp
pop
es
adc
lcall
jmp
xchg
or
es
inc
dec
push
dec
dec
mov
fs
aas
fneni(8087
dec
stc
adcl
icebp
mov
into
mov
dec
jno
cmp
jmp
pushf
repnz
fcoms
push
push
std
xorl
push
mov
subl
cmpsb
orl
xchg
outsl
mov
andb
xchg
add
popf
outsb
sub
lods
or
push
rorl
mov
sar
aas
pop
inc
dec
mov
mov
stc
push
aad
scas
dec
sbb
test
lea
lahf
mov
mov
data16
shrl
call
in
inc
mov
outsb
mov
popf
lods
ror
fdivrs
push
fdiv
negl
add
mov
jnp
sarb
jmp
lahf
jmp
shlb
test
add
loop
lcall
push
stos
push
add
cli
mov
dec
sbb
adc
add
dec
or
sbb
dec
mov
jbe
pop
push
daa
dec
sbb
pop
f2xm1
xor
pop
xor
xchg
je
push
mov
or
push
fwait
push
inc
mov
ss
pop
fadds
adc
push
pop
or
aad
jge
outsb
test
push
mov
das
leave
int
out
cmpsb
ljmp
sub
ret
shll
cmp
dec
out
xor
jle
hlt
out
xchg
cmp
mov
or
dec
inc
or
mov
pop
cld
in
mov
jge
stos
rcll
add
push
lcall
ss
xor
push
bound
js
sbb
lret
ss
icebp
jnp
fst
mov
or
mov
jb
sub
bound
lds
push
adc
xchg
mov
andl
in
pusha
bound
push
mov
pop
pop
out
loop
mov
in
add
sar
add
out
cmpsl
add
repnz
idivb
adc
cmpsl
sub
push
fmulp
jmp
in
pusha
in
sbb
mov
test
ret
imul
inc
push
popf
je
push
xchg
dec
shl
jbe
test
add
mov
aam
cmpsb
fisttpl
cmp
test
pop
das
mov
xadd
fidivrl
and
adc
rolb
mov
ljmp
xchg
push
test
inc
mov
inc
xchg
nop
fsubrl
in
mov
inc
sbb
in
loopne
jns
cmpb
bound
jns
and
scas
jo
add
in
lods
rclb
jno
test
mov
mov
or
cld
lcall
or
repz
adc
sbb
pop
addr16
es
clc
sahf
or
out
adcb
mov
fcoms
pop
test
call
cmp
cltd
scas
jae
mov
in
leave
sbb
loope
mov
jae
ljmp
stos
jge
popf
mov
or
inc
cmpsb
mov
mov
js
sub
xor
push
inc
cmp
int
xlat
mov
push
dec
push
pop
and
pop
lcall
das
inc
pop
idivb
cli
cs
dec
push
pop
lea
sbb
movsl
inc
mov
out
inc
clc
insl
xor
and
push
xor
inc
aaa
fisttpl
std
push
jge
aam
xchg
sbb
pop
cmp
int
outsb
pushf
mov
xchg
punpckldq
jne,pn
push
ret
ficomps
mov
or
testb
adc
sti
jns
sub
je
and
add
pusha
push
adc
xor
and
sub
xchg
and
mov
adc
and
jge
mov
push
imul
in
dec
cmc
lock
jp
inc
int
pop
pop
je
shufps
xor
mov
std
in
gs
scas
sbb
leave
jle
add
adc
andl
negb
insl
movsl
lret
in
push
std
enter
mov
adc
shll
mov
out
inc
push
mov
add
in
push
cmp
sub
push
adc
pop
fs
jns
cmpsb
sbb
in
decb
addr16
pop
nop
hlt
idivb
or
jge
leave
push
jae
push
xor
add
iret
xchg
popa
sbb
mov
dec
daa
ljmp
xchg
pop
push
add
in
sbb
xchg
push
push
xor
xchg
mov
and
pop
cmpsb
xor
aad
mov
js
scas
mov
xorl
sbb
dec
pop
and
leave
cmpsl
test
fs
rol
sub
fs
xchg
jbe
lcall
mov
cmc
in
in
xlat
sbb
and
movl
jns
xchg
popf
push
inc
roll
and
push
mov
int
enter
push
test
push
rcl
cmp
aad
adc
in
addr16
xchg
mov
lods
hlt
je
insb
fmul
xchg
and
jle
loop
into
and
subl
shr
popa
and
sti
fildll
cwtl
pop
push
nop
pop
xorl
not
in
adc
fbstp
cmp
fildl
sub
xor
test
pop
mov
sbb
daa
xchg
stos
dec
and
in
jno
outsb
out
mov
ljmp
adc
fidivs
into
stc
pop
int
shl
cltd
movsb
sbb
xchg
mov
inc
xor
out
mov
sti
mov
fistpll
pop
cld
pop
fadds
or
adcl
and
repz
mov
xor
mov
gs
cmpsb
enter
jp
adc
sub
mov
mov
sub
mov
out
cs
cwtl
cmpsb
hlt
fadds
lcall
out
and
xor
out
loopne
add
cmp
pop
push
cmpsl
sub
cmp
cmp
sub
les
inc
inc
adc
push
lea
cmp
popf
and
push
lahf
xor
insl
outsl
adc
mov
out
jae
mov
cwtl
das
cs
adc
and
sarl
or
sub
xchg
lcall
push
mov
jo
dec
nop
push
mov
push
sbb
jb
jno
sbb
addr16
lea
pop
dec
xor
sbb
scas
aaa
sub
fdivrl
or
loop
iret
push
cmp
imul
and
cmp
mov
mov
shll
mov
or
call
mov
popf
add
addb
jne
out
out
not
cmp
repz
incb
adc
cmpb
cmp
jbe
add
test
jne
jmp
push
sbb
shll
das
outsl
mov
xor
xchg
stos
jb
cmpsb
add
das
je
jb
pop
cmp
sbb
cmpsb
fdiv
iret
pop
sbb
xchg
push
jge
cmc
cld
adc
xor
mov
add
insb
and
or
je
inc
xchg
sbb
sub
sbb
sbb
loop
stos
and
insb
aas
std
sbb
dec
enter
mov
rolb
xchg
fstps
lret
or
sub
jmp
mov
test
jbe
sub
cld
sub
gs
mov
fdivl
inc
sub
lods
mov
es
pusha
mov
dec
imul
cmpsl
push
es
ret
addr16
cmc
stos
mov
pop
ret
ljmp
jns
xchg
push
pop
aas
cli
movsl
adc
adc
inc
dec
repz
jmp
xor
xchg
mov
je
sub
mov
mov
mov
aas
cmc
mov
sub
pop
cmc
mov
fs
push
jae
xchg
and
rorl
xor
out
icebp
roll
jecxz
lds
xchg
inc
sbb
ja
sarb
bound
xor
movsl
adc
mov
adc
shrl
div
jne
stos
jns
cmp
ficompl
dec
cs
leave
movsb
add
ret
aad
call
bound
movsb
adc
cmp
out
les
push
push
loope
pushl
movsb
mov
arpl
dec
data16
iret
cmpsb
or
mov
pop
ret
test
mov
add
mov
xchg
aad
fstpt
jbe
sbb
inc
cmp
in
jns
push
in
xchg
pop
outsl
push
sbb
lea
cmpsl
add
and
cmp
cmpsl
jno
mov
mov
fcomps
insl
dec
and
testl
xor
lock
mov
outsl
mov
xor
gs
stos
rcl
movsl
jns
sub
daa
pushf
cs
rclb
sahf
or
das
mov
sbbb
xor
ret
sub
das
stc
fsubrs
loopne
ds
push
lods
aas
inc
imul
jne,pt
shlb
out
lods
outsb
stos
lea
push
insl
pop
jge
shrb
dec
jmp
das
dec
lds
xchg
je
push
out
adc
sti
or
into
jno
inc
hlt
shrb
int3
movsl
adc
pop
repnz
inc
mov
mov
dec
adc
inc
dec
xchg
cli
loope
daa
or
or
cmp
jae
jge
mov
cld
pop
lcall
lea
ret
push
or
inc
fisubl
cmpl
iret
sub
xchg
sbb
fists
xlat
mov
cmp
imul
sahf
cmp
lods
aad
mov
stc
lahf
inc
repnz
push
adc
sub
aas
push
add
sub
adc
sub
or
mov
xchg
sub
leave
sub
lret
push
or
sbb
xchg
dec
mov
jmp
xlat
hlt
scas
xchg
mov
mov
jb
dec
adc
adc
cmp
add
xor
fs
jle
rorb
scas
in
out
andb
inc
inc
hlt
fisubrs
sbb
mov
fnstsw
adc
jns
mov
adc
lret
mov
aad
shrb
mov
sbb
xchg
pushf
mov
add
ror
push
fadds
mov
sbb
adc
jns
icebp
hlt
cs
mov
lods
lock
call
das
or
sbb
cli
inc
add
jbe
xlat
adc
push
pop
xchg
in
adc
xor
push
lods
xchg
fcoms
jo
pop
mov
mov
or
iret
sbb
aas
fsubs
add
popa
lret
sbbl
pop
push
inc
push
cwtl
inc
fsubrs
mov
xor
jno
xchg
jecxz
sbb
data16
pusha
insb
fsubs
adc
xchg
jp
insb
roll
out
sbb
adcb
outsl
test
mov
scas
dec
mov
push
mov
clc
in
adc
dec
fadd
test
mov
push
sub
jnp
push
cmp
push
lods
inc
movsb
test
xchg
push
jg
hlt
icebp
adc
and
mov
adc
lock
jo
je
dec
fisubrl
push
inc
push
push
es
and
mov
sarb
dec
adc
jnp
outsb
hlt
gs
mov
jne
dec
out
push
sbb
sub
add
jge
jmp
dec
lock
out
xchg
dec
xchg
xchg
jne
dec
sbb
add
cltd
addl
mov
xor
xor
or
sub
sub
push
test
sub
bound
ss
jg
bound
hlt
adc
fwait
pop
aam
mov
jp
mov
adc
xrelease
mov
mov
daa
mov
cmpsl
in
xchg
das
mov
sbb
or
sbb
pop
jle
repnz
cmp
outsl
xchg
mov
cmc
insl
dec
in
jmp
adc
sub
loopw
es
pop
or
in
add
repz
sbb
dec
hlt
popa
xchg
movsl
adc
pop
xchg
loope
mov
loope
cld
jbe
adc
hlt
adc
in
and
mov
lds
jne
pop
cwtl
mov
cs
shlb
mov
mov
ret
jg
popa
xor
sbb
mov
arpl
or
daa
pop
ror
sub
aad
pop
mov
xlat
enter
xchg
lods
lret
xor
aaa
jecxz
and
lock
into
push
xor
dec
lock
stc
hlt
lock
pop
call
mov
xor
sub
inc
addl
xchg
sarl
sbb
mov
xchg
inc
cli
inc
mov
and
orl
jp
inc
popa
lret
dec
fisubrs
je
mov
negb
dec
jle
outsl
xor
add
inc
pop
cmp
es
and
jle
xchg
repz
in
ret
bound
out
clc
jg
mov
cld
mov
jmp
into
mov
stos
add
stc
inc
jae
lea
cld
in
cmp
test
jg
xor
cmpsl
mov
ljmp
and
daa
or
cltd
notl
xor
jbe
inc
push
lods
mov
je
test
dec
and
mov
jnp
cli
cs
fxch
add
int3
xchg
in
mov
hlt
jge
clc
cltd
fxch
cmp
sti
subl
jbe
dec
sub
xchg
push
repz
out
lea
test
dec
lret
ss
sub
jle
mov
and
jbe
xchg
cwtl
pop
outsb
scas
cmp
xchg
sahf
jbe
add
scas
sbb
pop
or
dec
nop
push
push
push
sbb
mov
lods
fdiv
cmp
movsb
rorl
pushf
fiadds
mov
js
dec
cld
add
mov
dec
cmp
sub
sbb
jb
pop
mov
sbb
xor
xor
inc
call
xchg
inc
rolb
xor
hlt
outsl
jno
xlat
jno,pt
lds
and
ret
addl
and
shr
ljmp
jns
xchg
push
push
pusha
cmp
mov
stos
and
mov
jbe
xor
outsl
pop
test
int
insl
aaa
add
aam
imulb
pop
xchg
in
inc
xor
loope
clc
mov
test
mull
mov
in
inc
into
or
mov
lds
mov
mov
lock
jp
adc
ja
xchg
into
scas
scas
cmp
xor
loopne
adc
jmp
in
fsts
bnd
insl
sarl
fstpl
mov
xlat
int
xchg
pushf
test
hlt
ret
imul
test
aad
mov
pop
loop
inc
lcall
ret
adc
insb
push
enter
mov
test
push
xchg
fs
jbe
lcall
jmp
cld
test
jns
out
mov
and
and
add
imul
inc
sbb
sbb
push
data16
fidivrs
jl
push
xchg
fstpl
int3
push
cmpsb
pop
push
dec
imul
repz
lods
jecxz
lcall
movb
clc
xchg
xchg
xor
or
inc
push
lret
xchg
push
jle
movsb
lea
popa
sti
xlat
or
in
fldenv
lods
repz
pop
jecxz
xchg
iret
sbb
ljmp
std
and
outsl
lock
ret
xor
rorb
je
pushf
nop
lret
scas
jp
sarb
jb
in
or
loop
movsb
shl
xor
and
mov
cmc
cmpsb
mov
jb
loopne
pusha
test
popf
xor
cwtl
dec
ss
sti
dec
jno
add
jp
mov
test
mov
and
sub
dec
inc
add
shlb
jo
aam
out
mov
outsb
or
out
insl
int3
xor
mov
mov
xor
push
scas
and
sub
add
into
inc
and
cmp
adc
sub
jge
add
repz
roll
aam
xchg
sbb
xor
cmp
test
xchg
jg
push
xor
jno
dec
jmp
pop
mov
pushf
je
ja
pop
out
mov
out
push
aas
test
xor
push
adc
sbb
mov
int
push
xchg
cmp
xor
adc
sahf
pop
push
mov
mov
jge
rorb
adc
rcrb
sarb
add
push
in
ret
sbb
cltd
lret
inc
adc
sbb
push
out
aas
jp
call
xchg
adc
sbb
mov
jle
and
adc
push
sbb
or
leave
xchg
and
aas
and
sbb
cmp
ja
call
leave
xchg
mov
pop
bound
scas
and
ret
inc
addl
push
lret
clc
jnp
mov
nop
and
lock
insl
in
jnp
xor
mov
lea
xor
sti
pop
mov
cmc
dec
inc
mov
push
mov
popl
shll
lock
mov
xor
insb
mov
sub
les
mov
cltd
sub
and
mov
mov
adc
adc
scas
rcrb
lods
popa
pop
lods
xchg
stos
add
jnp
cmp
int
dec
mov
jl
mov
gs
jg
xchg
aam
or
inc
hlt
arpl
pop
popf
jmp
loope
mov
movsb
xorl
add
sbb
push
lock
pop
push
xor
ljmp
inc
and
repz
lret
or
imull
cmp
and
insb
mov
movsl
push
pop
dec
fincstp
dec
inc
test
push
mov
xchg
add
pop
orl
and
xlat
test
mov
shrl
push
inc
xlat
iret
out
fistl
shlb
xchg
mov
shl
insb
xchg
icebp
mov
sbb
xchg
je
scas
and
loop
jle
xor
or
aad
or
insb
dec
in
dec
adcb
pop
mov
cmp
lcall
mov
repnz
cwtl
xchg
out
push
mov
clc
fldl
lds
in
not
psubsw
dec
ret
insl
mov
xchg
sub
pop
add
movsb
stos
xchg
sbbb
mov
push
aad
out
sbb
clc
aad
shll
or
jno
inc
mov
loop
add
lret
pop
jecxz
adc
ja
inc
mov
sbb
lahf
xchg
pushf
daa
or
stos
jmp
mov
enter
inc
ljmp
pushf
ret
pop
add
sbb
divb
xchg
sub
xor
sbbl
pop
lahf
scas
mov
nop
lret
sbb
lcall
add
cmpsb
mov
inc
call
sbb
pop
mul
loopne
jne
xchg
jno
add
es
dec
inc
out
inc
gs
dec
mov
and
push
sub
xsave
xchg
ret
pushf
mov
inc
int
xchg
push
test
xor
imul
aam
lods
je
xchg
lds
mov
pop
pop
xorl
lret
bound
out
adc
pop
jo
cmp
cs
cmp
lahf
pushf
lock
cmp
adc
imul
fs
inc
ret
sti
jnp
loopne
out
lcall
mov
mov
or
pop
aas
repnz
int
cmp
xchg
xchg
push
rcr
inc
xor
xchg
pop
push
lahf
xchg
mov
rclb
loope
xor
or
dec
inc
push
cmp
outsb
jecxz
dec
xor
je
in
mull
inc
in
sbb
add
lds
xor
sbb
jp
xchg
cmp
enter
fcoml
and
dec
ret
pop
adc
sub
addr16
sbb
rolb
insb
pop
add
gs
lock
mov
outsb
das
mov
mov
mov
xchg
dec
into
gs
scas
gs
iret
repz
jg
adc
cmp
jp
cltd
aas
push
or
push
rorb
dec
jl
adc
jae
xchg
jne
adc
loop
lods
mov
adc
cmp
jbe
add
mov
xchg
mov
cmpsl
loopne
enter
inc
lcall
or
pop
lcall
xchg
jp
fs
jne
int3
sbb
popf
loopne
andl
and
cmc
xor
jp
and
mov
stc
sti
call
ss
xor
in
int
stc
int
add
and
js
add
or
xchg
and
pop
dec
add
ss
int3
jp
lods
sarl
push
pop
inc
cvtps2pd
push
stos
rolb
mov
pop
mov
jbe
adc
rclb
dec
rclb
mov
xor
xor
jl
mov
jge
out
jbe
dec
xchg
out
clc
pop
enter
push
xchg
insb
dec
sbb
iret
cmp
jp
mov
inc
fsubrl
fcompl
jecxz
in
stc
aaa
decl
xchg
adc
push
lahf
std
bound
xchg
cmp
pushf
sbb
ss
fisubrs
js
push
push
mov
mov
sbb
adc
es
test
sub
pop
repz
or
arpl
and
xchg
cmp
jnp
cwtl
fadds
xchg
sti
fldcw
ret
or
dec
test
stos
outsb
pop
mov
imul
sbb
daa
insl
aas
inc
xor
js
filds
popa
inc
mov
stos
call
popa
sbb
mov
jo
sub
std
push
pop
pusha
push
loop
and
push
jp
jg
push
or
stos
nop
xor
push
inc
mov
push
xor
loopne
push
sub
mov
mov
leave
into
sub
push
dec
repz
aaa
xchg
jle
test
push
mov
lret
lds
or
gs
test
das
and
mov
repnz
cmp
cmp
inc
aad
xlat
pop
xchg
test
call
jmp
outsl
xlat
cmp
std
subl
cwtl
stc
test
mov
cmpsb
and
scas
das
out
shl
std
lahf
sbb
pop
lahf
in
call
sub
xchg
xor
mov
cmpsl
mov
insl
mov
adc
enter
cmp
lods
hlt
mov
sub
ret
or
out
mov
movsb
fldz
xchg
insb
sub
inc
ss
add
fwait
sub
mov
sbb
mov
cmp
sub
leave
jecxz
cltd
pop
mov
cs
push
inc
sub
or
jne
mov
addb
xchg
into
loope
pop
dec
xchg
xor
sub
mov
adc
pop
inc
xor
jmp
push
icebp
sub
lret
call
test
imul
or
icebp
scas
and
inc
mov
mov
stos
cmc
lds
pop
lret
inc
jl
sub
sbbl
enter
jl
adc
out
and
bound
and
inc
and
push
xorb
mov
in
or
in
mov
mov
push
cltd
mov
in
inc
popa
mov
xchg
cmc
mov
pop
aaa
mov
mov
xor
push
and
cmpsb
xchg
dec
test
adc
testb
jbe
and
sbb
sub
sbb
cmp
mov
add
js
sub
int3
gs
and
add
adc
or
dec
mov
add
mov
push
ss
mov
sub
jno
mov
jg
imul
pop
outsl
inc
aad
call
push
sarl
mov
mov
pop
mov
lcall
lock
fdivs
cmp
enter
ljmp
insb
stos
pop
inc
xchg
in
movsl
or
subl
loope
xchg
sahf
je
jno
in
aaa
mov
dec
in
mov
mov
jae
mov
sbb
outsl
sub
push
push
jg
push
pop
movsl
lods
mov
testb
sub
inc
cmp
pop
xlat
cmpsl
push
les
jnp
in
arpl
mov
inc
xchg
ss
sub
iret
imul
push
out
outsl
ds
cltd
mov
jbe
mov
sub
addr16
mov
cmpsl
lahf
test
sti
pop
sahf
mov
add
icebp
ja
stos
jno
fwait
cmp
and
addb
pop
and
leave
xorb
mov
mov
imul
xor
ret
std
cmp
jnp
cmpsb
loopne
rol
rclb
push
mov
popa
or
bound
js
mov
nop
sub
test
in
jo
aas
adc
jl
xor
aas
adc
dec
imul
fiaddl
and
sub
dec
push
enter
fistpl
inc
xor
idivl
fildl
jns
inc
pop
cltd
push
nop
add
pop
aad
popf
jle
xchg
dec
in
fdivrl
loop
repz
mov
je
les
mov
fldt
cmp
pop
add
lock
push
cmp
inc
test
addr16
aam
cmp
mov
ret
add
push
jg
je
or
add
jnp
leave
xchg
addb
insl
ret
addl
mov
or
add
mov
add
int
xor
mov
sub
in
clc
push
scas
mov
mov
xchg
push
xor
or
roll
jnp
into
imul
inc
imul
enter
fsts
mov
or
sti
fimull
lahf
xor
adc
add
shrb
sub
xchg
mov
in
push
mov
pop
adcl
xor
xor
insl
mov
out
mov
sub
push
jmp
mov
jb
repnz
test
pop
push
mov
dec
sbb
adc
jmp
lcall
lcall
sbb
ds
test
jg
test
sbb
mov
add
sbb
insb
lret
lods
jae
fcmovnb
pusha
fldenv
xchg
fwait
loop
scas
push
dec
aas
test
fadd
sbb
mov
sub
or
mov
jne
xor
push
lahf
dec
sub
push
shlb
in
lods
out
add
or
andl
pushf
or
dec
out
sub
out
sbb
jp
push
adc
lods
cvttps2pi
sub
or
jbe
mov
pop
add
in
pop
loop
and
inc
mov
adc
dec
mov
push
negl
repnz
aas
incl
mov
rcrb
scas
addr16
fcomps
or
popa
fs
jnp
mov
cmp
stos
push
iret
push
or
sbb
jae
sbb
and
or
or
ja
push
jge
stos
int3
les
bound
into
stos
jb
je
enter
jb
mov
push
lret
enter
adc
lods
fnstenv
xor
test
adc
mov
add
or
enter
ss
fdivl
mov
pop
mov
int
inc
gs
dec
loopne
outsb
pop
xchg
data16
fwait
cmc
stos
enter
pop
sbb
sub
or
push
xchg
xchg
aas
jl
pusha
bound
xchg
sbb
lds
nop
mov
mov
sub
dec
xchg
ret
mov
dec
call
xchg
add
cmp
and
cltd
mov
jecxz
adc
loope
int
ss
jnp
sub
jns
and
ficomps
jns
jge
pop
ret
lea
mov
add
outsb
push
dec
push
and
bound
xor
dec
sbb
shr
lea
sbb
movsb
mov
cltd
lock
inc
sub
add
add
xchg
js
jle
xchg
xchg
orl
mov
adc
sbb
test
das
gs
es
cmp
lret
lret
and
fwait
mov
or
enter
xchg
das
pop
xchg
into
lret
addr16
push
out
or
dec
jne
sti
push
mov
or
stos
inc
aam
cmpl
stos
lcall
in
lcall
clc
and
cmp
pop
push
movsb
imul
aaa
pusha
insl
lret
mov
sbb
dec
mov
xchg
sub
dec
mov
stc
cli
mov
sbb
bound
fwait
push
outsl
repnz
push
lret
scas
cmp
clc
xchg
stc
push
cs
xor
add
ljmp
add
jne
js
inc
dec
xchg
nop
adc
js
imul
stos
and
push
lea
mov
push
ljmp
and
pop
std
xor
mov
xchg
insb
push
jp
and
sti
sbb
cmpsl
lock
inc
insb
or
leave
sub
lock
gs
add
ret
xlat
pop
cmp
pop
jb
les
leave
lods
add
mov
add
fmull
ret
and
inc
xchg
jge
mov
xchg
xor
mov
mov
clc
data16
adc
xlat
in
pop
fdivl
pop
int
frstor
and
push
cmp
mov
or
popa
cmc
stos
push
inc
and
fdivs
mov
xchg
out
push
stc
data16
or
adc
push
or
mov
lods
or
test
fs
cmpsl
cltd
sub
jmp
pop
xor
xchg
out
out
and
gs
hlt
mov
vshufpd
lods
inc
in
jne
outsb
or
pushf
mov
stos
mov
jae
cmova
cmp
pusha
into
jns
jmp
mov
outsb
outsb
push
enter
mov
cmp
mov
cmp
loopne
rorb
sub
in
sbb
adc
sbb
lahf
xor
loop
call
add
dec
rclb
test
mov
leave
inc
push
adc
sti
fmul
ljmp
inc
js
pop
rep
or
cmp
jl,pn
xlat
pop
sub
scas
mov
int3
bound
inc
push
sub
in
cli
idiv
dec
push
xrelease
es
xchg
mov
pop
jbe
mov
and
pop
shl
xor
stc
push
and
xchg
fbld
mov
sti
mov
es
lahf
shll
adc
cmpsl
sbb
pop
inc
pop
inc
ljmp
mov
ss
mov
adc
push
jl
cmpxchg
fadds
dec
cli
movsl
jo
js
outsb
movsl
jp
push
add
ljmp
stos
cmp
dec
out
int
lret
insl
repnz
and
mov
mov
mov
inc
and
movsl
mov
jae
divb
ret
jae
sahf
ret
stos
xor
or
subb
and
xor
and
cmp
rclb
jne
or
inc
movsl
cmp
push
pop
addr16
clc
arpl
jae
add
ljmp
xchg
lret
fcmove
in
stc
jle
inc
call
dec
shr
adc
gs
divb
pop
clc
js
int
mov
cwtl
mov
pop
fwait
xchg
pusha
out
rcll
fisubs
jns
mov
jae
popa
das
dec
xchg
pop
mov
mov
adc
add
jecxz
pusha
jmp
cs
fs
adc
ret
repnz
jo
xchg
xchg
push
mov
cmove
popf
add
pop
or
push
ficoms
fisubrs
pop
adc
or
outsb
outsl
push
sbbb
mov
sbb
pop
sub
mov
fcoms
int3
aaa
adc
enter
je
mov
imul
add
or
repz
clc
jge
mov
outsl
into
jo
out
xchg
mov
rclb
xor
hlt
lea
mov
mov
stos
dec
out
cmpl
push
pop
lods
pusha
fmull
sbb
sahf
mov
mull
jp
push
xor
pushf
jne
fimuls
add
pop
mov
or
test
incl
pop
nop
iret
mov
dec
xor
lcall
pushf
insb
sub
test
cmp
mov
insb
fstpt
push
adc
movsl
jg
push
arpl
push
cmc
or
stc
sub
scas
push
shl
or
jp
nop
in
mov
inc
popa
aam
xchg
inc
out
push
loopne
mov
mov
lock
xchg
sti
jle
xor
fs
lret
pop
mov
sub
mov
jle
sahf
sbb
xchg
pop
mov
jae
sbb
lahf
fstpt
sbb
jp
sub
mov
sahf
push
sbb
dec
mov
adc
sub
mov
sti
fwait
loop
insl
scas
hlt
jnp
inc
push
sub
adc
push
fdiv
lret
sub
sub
or
lods
cld
test
or
sahf
lock
lret
push
inc
in
loop
or
sub
js
test
pop
pusha
lret
sbb
cmp
scas
sub
rolb
stos
jge
repnz
add
jb
int3
cltd
adc
les
lods
mov
gs
adc
add
add
notl
jno
sub
mov
jns
sbb
repz
fld
mov
jl
add
sti
mov
xor
pop
out
in
cmp
dec
adc
test
std
sbb
pop
push
xchg
outsb
jp
jecxz
xchg
jmp
fistpll
rolb
enter
or
pop
loopne
lods
or
add
fcmovnu
cmp
adc
sub
add
insl
sub
in
cmpsl
xor
dec
movsb
jge
icebp
inc
mov
adc
sub
add
imul
push
lock
xor
call
sub
push
out
inc
inc
jbe
adc
mov
lcall
adc
jbe
jae
test
js
call
popf
mov
rorb
int
sub
in
mov
int
lods
int3
jmp
dec
pop
pop
pusha
fdiv
stos
jg
dec
divb
mov
mov
xchg
or
divb
adc
push
shrb
aas
jg
andl
push
xchg
sub
cs
pusha
scas
xor
push
loope
cmpsb
scas
cmp
popf
inc
outsb
mov
popf
lea
xor
cli
xchg
mov
xor
insb
dec
mov
jg
push
mov
and
and
inc
stos
mov
jnp
xchg
insb
loop
xchg
leave
lret
dec
mov
push
mov
fmul
test
xor
xchg
mov
fmuls
xor
imul
subl
mov
adc
je
mov
jge
inc
cld
fwait
mov
mov
mov
jnp
loopne
or
clc
and
movsb
or
in
scas
xchg
js
fcmovnbe
call
xchg
into
mov
push
out
and
xchg
lea
mov
xor
fs
clc
mull
jb
in
push
push
dec
sub
dec
push
xchg
mov
out
rdmsr
dec
push
pop
push
mov
cmp
pop
xor
sbbb
pusha
jns
push
loopne
enter
in
aad
lcall
mov
insl
sbb
mov
sbb
adc
inc
xchg
lods
add
hlt
mov
mov
stos
mov
test
or
popa
push
bound
movsl
jmp
pop
mov
add
mov
jae
movl
outsb
xor
nop
ss
push
push
call
sbb
fsubs
test
xchg
into
inc
cmp
je
fs
out
sbb
jecxz
movsb
xor
dec
pop
and
sbb
adc
fs
sti
ffreep
mov
sahf
sbb
or
pusha
push
pop
xor
das
inc
int3
pop
inc
clc
cltd
sub
mov
jmp
push
cmp
imul
out
or
bound
and
in
xor
ret
rol
inc
into
jnp
ja
xchg
ret
sub
xchg
or
imul
loop
dec
sub
pop
push
or
imul
notl
jns
dec
sbb
bound
dec
out
mov
aam
pop
fsubrp
push
test
mov
in
pusha
popf
jg
repz
sti
imul
lods
xchg
ficomps
incb
lea
std
sbb
xor
lods
ljmp
inc
into
cmc
inc
mov
lock
decl
in
movsb
mov
pop
lods
sub
test
sbb
gs
cli
xchg
ljmp
movsb
lahf
push
mov
icebp
adc
xchg
insb
xchg
inc
push
iret
or
movb
add
shlb
hlt
mov
cmpsb
or
fldenv
mov
xor
aam
mov
scas
jb
add
jecxz
test
lcall
jo
fbld
inc
push
clc
sbb
addr16
ja
cltd
add
bound
shr
testl
adc
lock
push
cmp
jg
push
lds
ret
stos
pop
and
ret
rol
es
enter
fidivrs
add
jns
inc
sbb
bound
push
sbb
mov
xorl
aam
adc
inc
cmp
push
sub
fld
mov
mov
scas
xor
mov
sub
add
or
push
out
inc
roll
sbb
and
shl
pushf
pop
cwtl
jbe
jmp
sbbl
shll
and
jno
sub
loopne
ret
sbbl
xchg
lods
cmpsl
xor
filds
and
orl
mov
inc
icebp
mov
sti
inc
popa
push
add
and
test
dec
lods
sub
aas
mov
out
ja
aas
add
andb
sbb
lods
or
lock
add
loopne
repz
cmp
xlat
out
inc
in
fsts
fimull
add
and
sub
test
mov
or
emms
jo
leave
je
mov
lcall
pop
pop
movsb
fbld
jl
je
xchg
dec
or
mov
xor
icebp
lock
push
pop
xor
sahf
jo
mov
add
and
fsubl
ljmp
je
sub
aam
and
mov
insb
shr
or
inc
adc
clc
enter
fprem1
cs
push
inc
lahf
inc
pop
fcom
push
jns
leave
out
inc
jmp
dec
ss
pop
add
mov
jmp
sub
and
es
inc
imul
data16
xabort
imul
and
jmp
std
xchg
add
int3
pop
sbb
psrld
mov
xlat
sarb
push
fdivrp
test
pop
test
sbb
xchg
lcall
fcomps
data16
inc
jge
sarb
cmpsb
lcall
gs
push
xchg
xchg
cmpl
mov
in
aas
mov
ja
scas
std
outsl
in
es
in
or
stos
mov
neg
cmp
in
add
fnsave
int
rolb
add
mov
and
xchg
test
les
or
sahf
scas
pop
ss
out
test
popa
mov
jmp
xor
notb
lcall
cmpsb
mov
in
fdivrl
stos
bound
fbstp
xchg
mov
inc
lds
in
add
pop
js
jae
xchg
fnstsw
in
mov
outsl
push
cmpsb
sub
jno
xchg
sub
shll
leave
fstpt
jle
imul
add
arpl
loop
xor
dec
popa
out
movsb
mov
jmp
test
iret
arpl
inc
fmuls
pop
stc
xchg
jno
scas
mov
pop
mov
scas
outsb
pop
popa
cmp
mov
and
pop
or
fs
or
jns
mov
inc
cmp
into
xor
or
jg
out
or
repz
gs
jmp
jns
dec
pop
lds
and
test
xor
dec
or
lret
aaa
pushf
pop
add
stos
push
xlat
mov
inc
dec
lahf
repnz
jne
add
jg
xorl
sub
out
sbb
dec
inc
push
cmp
stc
pop
cmp
adc
movsl
add
test
cmc
pop
jae
mov
cwtl
pusha
fs
cmp
ss
xchg
adc
jg
mov
mov
mov
mov
xchg
popa
imull
decb
pushf
dec
sbb
loopne
scas
xchg
stc
inc
leave
or
push
ljmp
xchg
addr16
arpl
rcrb
stc
cmp
or
pop
popf
fdivp
fcoml
push
sbb
fsubrs
jno
push
mov
mov
cmc
lcall
popl
stc
mov
lcall
imul
push
xchg
jge
sub
sub
jmp
and
xchg
cmp
sahf
out
cmp
sub
ret
and
lock
xor
jno
mov
pop
push
call
and
rorb
aaa
pop
scas
in
dec
xchg
lods
fwait
add
fwait
popa
push
cmp
mov
jmp
add
push
mov
mov
imul
inc
xchg
inc
dec
mov
sbb
xchg
scas
or
and
pushl
cmp
mov
jne
das
int3
xchg
adc
mov
fimuls
lret
ss
mov
clc
add
inc
loop
mov
xlat
orb
in
icebp
xchg
clc
fcomps
add
das
aam
cmp
mov
scas
mov
xor
mov
jle
aaa
lods
test
neg
pop
mov
ljmp
xchg
inc
pop
and
inc
or
mov
xchg
mov
insl
sub
out
xchg
xchg
mov
cmp
loop
jg
gs
add
dec
imul
je
mov
mov
mov
out
and
loopne
pop
rcl
mov
push
xchg
sti
or
int3
jae
mov
pusha
push
or
pop
mov
xchg
cmp
clc
lcall
and
arpl
mov
lret
int
cmpsl
loop
add
in
mov
and
clc
push
mov
mov
xchg
pop
push
int3
ljmp
adc
adc
mov
mov
jns
imul
cld
inc
enter
sbb
add
insl
fwait
cmc
ss
jmp
popa
cld
xlat
push
push
mov
subl
test
mov
push
int3
lds
adc
lods
nop
jle
ljmp
stos
or
mov
push
push
push
lods
stos
insl
xchg
add
mov
push
cmp
fs
nop
test
lea
cmc
jmp
ds
outsl
inc
push
cmc
inc
sub
add
leave
xor
arpl
roll
mov
icebp
inc
mov
jns
cmp
xor
faddl
call
mov
jg
mov
out
mov
dec
lcall
cli
and
inc
or
mov
jge
pop
cmp
test
dec
nop
sub
dec
mov
sbb
inc
pop
xchg
shr
mov
test
add
and
testb
lahf
or
movsl
mov
or
and
jb
mov
mov
test
icebp
pusha
test
test
cmp
sub
sub
aad
mov
je
in
mov
inc
imul
fildl
cmpl
ljmp
and
imul
and
cmp
repnz
sbb
pop
pop
adc
push
cmp
jo
xchg
dec
sub
jno
sbb
leave
movb
shll
dec
loop
dec
jb
arpl
pop
mov
pop
jp
push
js
pushf
mov
in
cltd
iret
pop
fnstcw
sbb
lret
sti
sbb
imul
push
and
sbb
pushl
jp
rorb
jbe
xchg
inc
sahf
push
pop
sahf
lret
and
push
or
bound
jg
or
mov
es
mov
dec
cmp
sbb
push
enter
jp
cmp
xchg
xlat
pop
into
jg
jg
int
into
mov
fs
mov
iret
push
sub
jge
imul
daa
lea
sbb
sub
loop
jge
xchg
roll
fstpt
or
inc
xor
inc
inc
lahf
scas
push
movl
mov
jne
cmc
xchg
in
nop
imul
std
je
clc
push
pusha
dec
jl
loop
pop
lcall
xor
xchg
cmpsl
dec
pop
popa
popf
sub
sti
in
lock
adcl
fisubl
add
stc
and
inc
rcrl
std
mov
inc
or
adc
sub
cli
movl
fstl
test
xchg
repz
lock
pop
loop
mov
pop
mov
ja
add
add
mov
mov
add
sbb
mov
hlt
adc
insl
pusha
mov
dec
mov
adc
loopne
mov
jae
lods
sbb
xor
and
mov
int
push
push
inc
add
sub
inc
adc
or
cwtl
mov
xor
cld
sub
pop
cltd
pop
push
enter
fs
xchg
lret
jmp
jns
mov
lods
idivl
pop
js
movsl
andl
cltd
sti
dec
adc
sbb
or
push
ds
cs
das
lea
and
xchg
dec
sbb
in
setle
xchg
movsb
cs
rclb
xchg
jmp
jg
popf
pop
rcl
sub
cmp
ret
lret
xlat
pop
enter
call
lea
or
inc
mov
mov
cmp
hlt
sbb
iret
xor
nop
inc
cmp
sbb
inc
dec
outsb
movswl
and
add
lret
int3
mov
pop
inc
mov
hlt
orl
jp
mov
ss
mov
rolb
pop
pop
cmpsl
daa
lods
enter
dec
out
xchg
insb
lret
dec
insl
xchg
adc
fsubs
jb
or
push
inc
and
dec
pop
clc
xchg
pop
inc
mov
mov
test
or
fidivl
push
lea
sbb
sub
nop
enter
and
popf
sub
andl
add
out
shrl
jl
pop
fcomip
sbb
push
les
loope
push
pusha
jmp
mov
cmp
cltd
cltd
fstp
mull
xor
fs
add
jmp
lock
cmp
adc
pop
in
cld
iret
dec
jae
adc
mov
lods
cmpsb
inc
jo
jo
adc
xchg
pusha
and
sbbb
fnstenv
xchg
dec
xchg
mov
mov
subb
xor
sbb
gs
adc
ja
fstps
stos
jmp
aam
sbb
xchg
dec
dec
gs
mov
rcll
or
lea
and
inc
jecxz
and
mov
std
sub
leave
clc
push
nop
add
sti
add
jbe
sbb
push
jle
pop
je
fsts
call
mov
sbb
test
push
cmpsb
insl
mov
shl
out
int3
lods
cmp
adc
mov
add
call
sbb
inc
xor
or
mov
cmp
fdivr
std
push
popf
fcmovbe
fadds
test
pushf
xor
mov
fs
push
push
cli
loop
cmpsl
xor
adc
aaa
pop
cmp
jge
movb
rorb
dec
sub
scas
and
xor
or
repz
mov
jns
or
stc
jbe
push
mov
jp
enter
ljmp
ret
div
in
or
cli
xor
icebp
pushf
or
sbb
push
cmp
hlt
cmc
mov
and
add
in
sbb
stos
imul
jb
push
xor
cmp
out
scas
sti
jl
sti
std
jae
mov
or
in
or
je
sbb
stos
cmpsb
push
adc
inc
rorl
push
mov
hlt
inc
push
sub
mov
inc
scas
pushf
outsl
inc
xchg
push
loopne
add
aaa
fadds
inc
popf
lods
add
mov
xchg
push
clc
cli
dec
ja
cmpsl
xchg
add
rcll
dec
rcr
cmp
cmp
xor
outsl
inc
dec
cmp
dec
jbe
mov
mov
fisubrl
mov
push
or
testl
mov
or
xor
xrelease
mov
gs
pop
jmp
add
add
testl
adc
dec
stc
inc
cs
or
js,pn
mov
loopne
pop
fsubrs
sub
ds
dec
mov
inc
pop
cmp
adc
gs
lock
push
leave
sbbb
or
xchg
jg
in
push
adc
add
and
test
cs
pop
pop
and
or
data16
loopne
jmp
pop
cmp
adc
lods
addb
gs
inc
frstor
test
sbb
jo
add
inc
fs
mov
std
mov
sti
insl
insl
mov
out
mov
push
je
test
adcl
adc
in
sar
xor
push
jmp
pop
adc
aaa
jmp
lods
add
stos
adc
pop
push
mov
sub
fucom
and
inc
push
out
xchg
test
pusha
sti
adc
dec
xor
sbb
fildl
push
repnz
mov
pop
int
lcall
push
sub
in
cmp
xor
sub
adc
sub
aas
cmpsl
fwait
sub
stos
jl
idivb
sbb
int
mov
sahf
mov
jno
out
mov
xchg
sbb
pop
sbb
and
pop
fisubrl
mov
dec
sub
mov
inc
mov
testl
jg
jge
jg
xchg
adc
les
sbb
or
mov
mov
loop
jae
xchg
mov
lods
xor
fldenv
sbb
xor
pop
dec
mov
cmp
imul
addr16
add
cmp
ds
xor
mov
sbb
xchg
gs
lret
inc
fldl2e
lahf
movsl
or
imul
aas
xchg
lock
push
lea
negb
frstor
lds
lea
add
sub
aaa
sarb
push
pop
push
xor
in
cmpsb
popf
mov
inc
push
ret
lret
xor
dec
lods
js
push
aam
and
mov
dec
inc
out
cld
icebp
pop
ret
mov
cwtl
pop
adc
push
pop
das
flds
cld
nop
mov
adc
jnp
inc
dec
outsb
or
lds
sub
fmul
cli
cmpsb
std
or
icebp
dec
icebp
xor
test
inc
push
mov
adc
mov
insl
mov
xchg
mov
pop
loope
lea
lock
fstl
rolb
in
inc
repnz
cs
lods
hlt
jb
out
sub
inc
fnstcw
adc
mov
dec
mov
mov
out
ret
repz
push
arpl
aas
enter
cmp
lcall
xorb
cltd
mov
cs
das
stos
jge
rcr
push
xchg
repz
dec
dec
in
sbb
arpl
scas
lock
fadd
jg
mov
popf
add
ljmp
es
or
mov
lret
jno
xchg
cmpsb
test
repz
jbe
mov
cmp
dec
and
movsl
lahf
and
cmpsl
add
xor
and
cmp
adcl
test
rcl
jmp
inc
adc
dec
and
loop
or
testl
not
int
test
push
rcrl
les
test
bound
in
xor
lock
pop
mov
add
add
adcb
mov
mov
dec
inc
rorl
subb
pop
pop
push
or
bound
inc
loopne
jnp
into
xchg
jp
xchg
lods
cmp
add
cmp
addl
jne
repnz
push
aaa
addr16
sbb
test
sub
inc
in
inc
push
lea
out
dec
dec
out
jl
dec
mov
mov
mov
sti
cs
or
je
test
adc
imul
ret
xchg
jne
aas
stos
fucomp
mov
ret
jnp
jb
into
add
jge
mov
dec
xor
cli
or
push
mov
and
outsb
sbb
sti
add
imul
jmp
mov
hlt
sbb
xor
mov
pop
add
mov
rcl
or
pushf
psadbw
xor
hlt
jle
imul
icebp
mov
and
fcompl
dec
gs
fsubrs
xchg
int3
mov
inc
shl
ds
pop
add
aas
cmp
push
mov
jecxz
fimuls
sbb
outsl
mov
xor
jge
scas
sahf
push
out
jns
push
push
or
add
cmp
int3
lds
xchg
xor
push
iret
rorl
inc
imul
mov
ret
mov
or
dec
cwtl
pop
fwait
and
popf
sbb
mov
lret
jge
push
int
push
add
add
inc
xor
lcall
inc
sub
lcall
adcb
loopne
leave
test
push
inc
fildl
stc
dec
jmp
negl
or
inc
popf
mov
imul
jmp
cld
les
xchg
pop
stos
ret
mov
pop
inc
push
and
xor
out
and
orb
je
jge
int3
lods
fsubs
insl
sbb
out
outsl
adc
cmpsl
or
aaa
xchg
mov
aaa
adc
jbe
pop
mov
mov
js
mov
imul
cmpsb
mov
push
push
mov
inc
sub
ja
faddp
call
lds
cmpsb
bound
jbe
aas
sbb
aaa
aad
push
aaa
inc
fisttpl
push
push
es
sub
sbb
mov
cwtl
adcl
jns
mov
lea
mov
lds
sti
dec
call
inc
idivl
scas
cmp
xchg
inc
mov
jo
mov
or
xchg
int
outsl
test
out
adc
out
bound
pop
inc
js
repnz
cld
jnp
pop
and
mov
js
idivl
inc
in
pushf
cmp
jb
leave
test
fiadds
inc
mov
push
ret
out
adc
sahf
aad
mov
inc
sub
ret
push
lods
mov
and
in
scas
sbb
sbb
imul
lds
pop
test
and
adc
or
je
insl
adc
jge
push
iret
jbe
scas
cmp
in
adc
shrl
mov
sbb
push
int3
mov
pop
sbb
loop
sbb
jle
testl
sti
inc
movsl
adc
ror
addr16
arpl
paddsw
or
dec
aam
shll
std
nop
xchg
loop
mov
gs
mov
dec
push
and
mov
mov
cmpsb
cmp
dec
pop
dec
xchg
jge
movb
cmp
jg
add
xlat
icebp
aas
or
je
xor
ljmp
add
in
mov
clc
and
sahf
bnd
and
mull
in
loope
xchg
sahf
scas
data16
adc
sbb
mov
jg
jg
cli
pop
stos
bound
sbb
pop
rorb
mov
aaa
inc
fisubl
pop
lock
xchg
stos
fucom
dec
mov
xchg
mov
imul
mov
stos
push
clc
out
cli
cmp
rep
sahf
sub
cld
jge
xchg
ja
inc
sub
repnz
negl
in
iret
ror
enter
enter
push
mov
inc
add
pop
jb
inc
sub
inc
inc
mov
shr
inc
add
insl
add
mov
inc
dec
test
dec
lods
inc
mov
inc
mov
mov
enter
mov
subb
xor
or
jle
outsb
and
lret
mov
gs
dec
fdivrl
dec
aam
pop
scas
pushl
inc
inc
dec
jmp
movsb
cs
or
or
jl
es
bound
lods
les
push
jae
jno
xor
mov
and
or
or
in
pushf
sbb
sub
xor
dec
cltd
and
sbb
mov
jecxz
fiadds
mov
lock
insl
inc
cmp
xor
js
out
jg
push
add
test
or
push
pcmpeqw
jmp
push
xchg
push
jb
pop
push
xorb
jno
aam
into
fcompl
ret
imul
jg
lock
jbe
lahf
mov
fisubl
sub
movl
les
or
jnp
cli
mov
pop
fisubrl
or
cmp
movsl
push
jns
mov
cmpsb
add
int3
call
cmp
int
outsl
or
inc
sub
std
sub
jno
mov
lret
inc
outsb
jmp
cli
mov
int3
pop
and
push
sti
aas
jecxz
push
jno
jmp
xchg
mov
mov
jle
xor
js,pt
stos
imul
xor
lock
push
inc
mov
test
outsb
subl
push
aas
ljmp
pop
test
jno
fidivrl
adc
push
xor
adc
outsl
and
out
adc
dec
imull
out
xchg
scas
shll
xor
push
add
iret
add
daa
push
add
lds
push
sbb
cwtl
dec
mov
mov
xchg
xchg
insl
lahf
jo
cwtl
jae
cli
inc
bound
mov
push
cs
loopne
cmp
pop
dec
arpl
lods
push
mov
fisttpl
mov
fiadds
mov
movsb
ficoms
xchg
lods
arpl
icebp
and
repz
repnz
aad
mov
push
xor
loopne
mov
jb
sub
inc
inc
movsb
mov
hlt
fcmovne
mov
mov
xchg
jnp
inc
push
mov
dec
inc
inc
and
addl
push
fistps
adc
lock
xlat
insl
push
sub
push
mov
das
movsl
mov
xor
xchg
adc
jne
mov
int
fdivr
cs
jae
push
es
add
push
mov
cmp
popa
cld
out
inc
mov
or
or
mov
push
loope
lock
mov
aas
mov
push
mov
sub
pop
test
roll
pop
inc
fiaddl
xor
xor
mov
sarb
sub
adc
dec
shlb
popa
lret
fisubrs
jo
mov
pop
xor
ret
push
scas
cwtl
les
stc
add
inc
add
push
in
mov
push
sub
add
outsl
dec
aaa
inc
push
cmc
inc
mov
xlat
loopne
sub
sarb
popa
icebp
out
pop
fstpt
push
mov
xor
xlat
sti
mov
or
fwait
insl
movsl
ror
sub
or
ljmp
pop
out
cmp
in
fnstcw
in
adc
movsl
jle
push
inc
ret
sub
jnp
mov
and
jbe
and
dec
call
push
cmp
ficoml
ja
cmp
sahf
mov
dec
cli
sbb
dec
outsl
xchg
mov
adc
cmpsb
lcall
sub
sahf
cmp
js
inc
fbld
or
sbb
pusha
sub
filds
outsb
jae
jg
and
jns
std
lods
inc
push
mov
shrl
ja
jno
sub
cmp
push
pop
mov
test
repnz
push
cs
push
testl
repnz
cltd
xchg
mov
mov
mov
xor
add
cmc
sub
fcomp
call
inc
dec
add
xor
xor
cmp
mov
fadd
mov
jae
repnz
mul
scas
pop
dec
inc
rorb
jno
fnstcw
fadd
in
popa
sbb
inc
or
add
popa
jge
xchg
xchg
gs
mov
insb
imul
xlat
cmp
cmpl
mov
rolb
xchg
notl
cmp
stc
pop
mov
fsubrp
mov
add
or
pop
jnp
int
dec
ja
pop
pop
inc
xchg
lret
in
sti
cmp
sbb
stc
dec
xor
mov
shll
cmc
sbb
dec
leave
out
xchg
mov
cmp
mov
inc
test
test
into
mov
xor
leave
mov
push
mov
xchg
or
xorl
dec
push
or
rcrb
sbb
xor
jl
sub
out
sbb
stc
sbbb
rorl
ss
dec
adc
iret
loope
icebp
mov
pop
popa
mov
icebp
out
cmp
lahf
add
inc
xor
sub
popa
imul
fisttpll
fidivs
imul
pushf
loope
pop
clc
test
mov
adc
inc
jnp
xor
mov
dec
mov
sub
jg
cmp
out
jae
sbb
rcll
sbb
mov
sti
shrb
ret
xchg
push
xor
lods
add
dec
jmp
test
xor
fcoml
inc
repz
sub
insl
fstpt
fs
pop
mov
test
jmp
mov
loopne
xor
pop
cmp
mov
or
lods
jne
pop
adc
mov
lock
jle
and
dec
jo
push
inc
cmc
mov
pop
xchg
sbb
in
dec
or
jecxz
fmul
daa
sbbl
push
or
rol
sti
sbb
inc
cmp
cs
add
rcrb
mov
add
rolb
dec
mov
fstp
push
inc
sti
stos
into
push
jns
mov
ss
jg
out
adc
adc
add
push
stc
arpl
cmpsb
iret
push
jmp
pop
cmp
loopne
dec
lret
loopne
push
lea
int3
lea
sub
test
mov
setne
dec
inc
daa
sub
sub
or
pop
shrl
mov
gs
xchg
loop
xchg
mov
cltd
xchg
jp
cs
cmpsl
jb
xor
adc
and
push
xchg
cmc
jl
sub
sub
sub
shll
mov
stos
loope
ret
daa
pop
and
daa
dec
lock
hlt
clc
inc
inc
push
pop
mov
hlt
adc
scas
mov
xor
leave
enter
loop
mov
idiv
inc
lret
dec
pop
lea
imul
jl
fildll
sbbl
nop
or
jmp
or
loop
sbb
add
inc
dec
cmc
inc
mov
adc
lds
lds
xchg
cld
and
cld
xchg
pusha
push
push
sbb
jle
xor
fnstenv
mov
add
xor
adc
pop
test
cmp
add
adc
xchg
scas
mov
jmp
push
iret
test
mov
push
jb
and
push
jno
mov
adc
lret
dec
cmp
cmp
push
outsb
jmp
aaa
mov
cld
mov
sti
mov
ds
push
fistl
mov
xor
sub
mov
std
push
pushl
mov
pop
rorl
xchg
mov
mov
jno
push
pop
aad
sbb
lahf
aad
es
add
push
mov
in
lods
aam
je
repnz
jl
sbb
out
mov
add
pop
pop
xchg
mov
enter
mov
fmull
cmc
sbb
cltd
inc
jnp
add
test
lock
leave
in
dec
inc
and
fbld
aam
pop
aas
sub
sbb
mov
and
inc
and
dec
cmp
test
pop
xor
jno
sub
mov
rorb
or
fmul
pop
imul
pop
push
xor
insl
leave
pop
dec
dec
stc
xor
adc
adc
xlat
mov
mov
pop
cmp
sar
push
adc
sti
push
push
mov
adc
push
aam
lea
ja
movsl
push
repz
jge
mov
sub
push
adc
rcrb
imull
sti
stos
mov
adc
int3
stos
mov
and
ror
sbb
jg
add
stc
lret
mov
mov
add
jmp
lsl
inc
or
inc
xor
push
sub
sub
jle
lret
in
sub
mov
mov
out
incl
mov
das
lods
test
mov
or
movsl
lcall
dec
pop
xchg
push
xchg
popf
test
test
cld
das
push
add
int
loop
fnstcw
subb
je
push
popf
cmp
pop
mov
xor
dec
jecxz
sbbb
sub
cmp
mov
push
jnp
fnsave
mov
dec
cs
inc
call
movsb
and
adc
mov
mov
les
adc
clc
in
inc
dec
loopne
cs
cmpsl
in
inc
jbe
aas
aam
mov
outsb
jle
in
push
dec
rcrl
inc
bound
in
add
mov
mov
lock
push
outsb
vcvtudq2ps
inc
in
dec
sub
and
xchg
pop
inc
mov
int3
cwtl
pop
mov
jmp
dec
cwtl
mov
xchg
cltd
repz
mov
mov
out
scas
xchg
out
adc
in
int3
icebp
iret
and
icebp
mov
shrl
dec
and
jle
push
xchg
xchg
lahf
lock
fucomp
xor
aad
xchg
xchg
add
push
mov
cmp
gs
scas
inc
fs
in
in
loope,pn
dec
push
mov
pop
mov
rcll
xchg
icebp
xorb
lea
xchg
xchg
fimuls
mov
rorl
xchg
sub
dec
mov
sti
shlb
mov
jo
sub
mov
iret
mov
push
mov
sbb
pop
jecxz
cli
pop
fcmovb
inc
test
mov
xchg
mov
leave
jne
inc
iret
xchg
out
cmc
adc
cld
and
in
pop
add
jnp
pop
int3
mov
leave
or
aam
fstps
add
stos
pop
cmp
xor
push
xchg
lea
push
fdiv
xlat
std
pusha
cltd
lret
daa
aas
cmp
lods
push
das
dec
adc
pop
cmpsl
fmull
in
jno
nop
cmpsb
sub
cmp
aas
scas
jo
lods
jbe
into
push
rclb
addr16
loope
popf
adc
gs
aad
imul
sti
mov
fsubrs
add
jbe
pop
mov
push
sti
push
cmp
push
jmp
cltd
adc
mov
daa
movsl
sbb
incl
push
dec
rorl
xchg
jno
sbb
jmp
xchg
notl
sbb
add
movsl
push
and
adc
mov
in
popa
in
jle
mov
pop
mov
enter
cmpsl
adcl
outsb
sub
mov
fcomip
xchg
arpl
movsb
adc
imulb
mov
sub
add
inc
sub
shlb
lods
dec
lret
cmpsl
or
cmp
lret
aam
sub
ret
jno
add
not
out
inc
jle
popa
mov
ljmp
adc
jmp
loope
loopne
out
inc
test
cmpsb
dec
dec
fiaddl
xor
sbb
fbstp
outsb
loope
daa
xor
push
or
test
cwtl
sub
fwait
sub
in
aaa
fdivrl
fdiv
dec
add
sbb
icebp
clc
movsl
int
dec
or
push
jle
jns
call
mov
jmp
push
test
jbe
inc
mov
loopne
sbb
aaa
fcoml
mov
loop
nop
rcr
movsl
pop
cmp
test
or
push
adc
icebp
idiv
mov
xchg
jae
and
outsb
gs
push
aad
shr
fldz
xchg
push
insl
cld
mov
xor
inc
fdivrs
jb
aas
aaa
rol
push
push
movsl
js
jb
cltd
frstor
dec
mov
jnp
loopne
fsts
stos
into
in
pop
mov
sbbl
jp
gs
or
mov
loopne
mov
in
loopne
daa
fnstenv
xchg
cmc
ja
sbb
popf
sbb
les
pop
fsubr
out
out
xchg
push
mov
inc
add
cltd
aaa
cltd
es
push
stc
xchg
sti
lds
lea
lret
mov
enter
xchg
mov
jo
aas
sub
cmp
popf
xor
lods
xlat
mov
add
shlb
cltd
jp
mov
pop
into
enter
mov
ljmp
jbe
insl
js
adc
fcomip
sbb
push
pusha
es
dec
xlat
add
cli
dec
outsb
repnz
lahf
xchg
cld
sub
adc
sarb
imul
cmp
jno
xor
jmp
push
and
dec
mov
xchg
push
bound
and
nop
call
mov
fistps
adc
xor
push
addr16
mov
cmpb
add
sbb
loope
aad
xchg
add
sub
nop
xchg
cpuid
or
mov
testb
test
xor
or
mov
out
js
aam
mov
mov
fiadds
push
out
xor
loopne
pop
ror
mov
out
sbb
je
dec
cmp
mov
jmp
jl
push
mov
dec
cmp
int
inc
pop
dec
std
out
xor
xorb
insb
jmp
pop
mov
jmp
cmc
outsb
push
imul
xchg
fistpl
xor
roll
cwtl
loopne
mov
push
shl
or
shr
xchg
outsb
inc
pop
and
xor
test
call
enter
movsb
jne
lods
mov
sbb
inc
xlat
mov
mov
fcomp
fidivl
cmp
mov
dec
inc
mov
mov
mov
push
sub
sbb
pop
mull
mov
pop
mov
push
adc
xchg
das
mov
pop
inc
pop
mov
aad
enter
movsb
shll
dec
pop
fidivs
mov
jl
cmpsl
loope
inc
test
sbb
mov
inc
mov
pop
add
pop
ds
ljmp
jp
sub
and
or
andl
mov
xchg
dec
jae
int3
in
push
mov
sub
xor
stos
icebp
adc
xchg
int
jp
sti
fidivrs
dec
cmpsl
test
mov
sti
icebp
lods
pop
pop
add
dec
or
data16
pop
and
pop
in
pop
dec
pop
xor
push
test
cmp
xchg
ds
cmpsb
xlat
out
pop
dec
cmp
inc
add
pop
js
cli
dec
rcr
dec
lret
xchg
inc
shufps
lahf
jle
fdivrp
push
push
fistpl
aaa
adc
lods
in
adc
mov
adc
pushf
mov
mov
test
andl
adc
jl
int
aaa
lods
mov
mov
ret
gs
stos
and
fs
inc
or
outsl
push
mov
sub
cld
xchg
fwait
sbb
sarb
cmp
or
jo
mov
xchg
pop
cmpl
cmp
xor
aas
addr16
mov
mov
out
addr16
enter
test
test
fstpt
inc
aad
scas
out
stos
mov
or
dec
andl
xchg
mov
cmp
jge
xor
cmp
add
xchg
sbb
or
sub
jg
repz
test
test
ret
mov
and
out
fstps
std
js
lahf
add
cmpsb
mov
or
mov
push
lea
insb
mov
dec
loop
push
bound
cmpb
push
test
idiv
ret
enter
mov
lcall
div
fidivl
pop
adc
push
cmp
dec
into
int3
cmpsb
lret
inc
mov
jno
and
pop
sub
xlat
add
add
pop
sbb
adc
sbb
or
loopne
inc
hlt
or
pop
out
and
xchg
aad
ret
jns
xor
fildl
push
and
pop
jecxz
in
jnp
ret
addr16
dec
push
mov
pushf
outsl
xor
jns
outsb
xchg
sub
sahf
cmpsl
adc
int
inc
dec
das
xor
xchg
sub
in
sbb
fsubr
or
lods
mov
inc
test
or
testb
andl
jb
sbb
inc
dec
ds
lcall
repz
and
pop
enterw
cmp
cmpsl
scas
call
movsl
add
jl
xchg
cltd
stos
popf
mov
js
mov
popf
pop
sbb
test
ficomps
rcrl
jns
fimuls
call
in
lcall
mov
test
jo
xchg
out
push
insl
fdivrl
mov
mov
add
dec
mov
xchg
mov
mov
stc
xor
mov
stc
push
mov
or
sub
fisubrs
xlat
fwait
insb
inc
pop
xor
lods
shrb
or
mov
or
mov
scas
js
mov
and
sbb
xor
xor
push
xchg
out
dec
or
movsl
sti
jge
and
es
dec
push
push
inc
cmp
bswap
ret
sbbl
xchg
movsl
lock
lret
mov
jmp
je
mov
lods
add
out
jnp
push
push
lret
out
ror
pusha
dec
lret
xor
sbb
mov
jne
stos
in
in
rorb
les
jmp
out
mov
mov
inc
loopne
inc
mov
xor
lahf
fdivp
repnz
and
movsl
fs
outsl
pop
jno
add
add
cmp
jg
pushf
ja
jp
nop
test
clc
dec
fstpt
lock
nop
push
movsb
adc
or
dec
cmc
mov
dec
dec
fcmovnu
inc
mov
ja
daa
pushf
pusha
xchg
in
xchg
pop
mov
sahf
std
xchg
sub
jbe
lret
das
cmp
lods
sbb
mov
rorb
loop
inc
or
sub
push
xor
add
jl
jns
stos
mov
icebp
ret
pop
xchg
mov
fcompl
push
dec
imul
cltd
shrb
mov
mov
pop
cmp
fidivs
and
cmp
imul
cmp
mov
add
cmp
sbb
addl
inc
cwtl
stos
cwtl
mov
test
lods
xor
fnstenv
mov
xchg
frstor
xchg
lret
or
cwtl
mov
rol
mov
xchg
setb
mov
iret
sub
fsubrl
jge
and
lahf
mull
xchg
mov
xor
out
push
inc
or
cmpsb
mov
insl
jge
sbb
cmp
sub
pop
sub
sbb
cmpsl
pop
fldcw
add
cmpsl
push
cmp
mov
movsl
and
fs
into
jmp
pop
add
mov
pop
pop
imul
mov
jmp
jle
dec
cmpsb
jmp
in
mov
inc
jmp
sub
mov
repz
cwtl
jle
pop
or
mov
roll
adc
mov
das
es
jle
jno
lahf
mov
and
lods
inc
or
lods
pop
pop
jecxz
imul
cwtl
xor
dec
idivl
xorl
dec
mov
cmp
xor
mov
push
jle
movswl
sbb
dec
ds
in
mov
mulb
push
xor
push
sub
adc
mov
jmp
ljmp
into
pop
mov
enter
cmp
fscale
int
sub
nop
sbb
cmp
repz
js
cmp
jmp
mov
pop
out
dec
pop
mov
loope
pop
jg
dec
mov
inc
stos
xor
cld
add
xchg
call
push
movsb
imul
xor
out
pusha
fists
cmp
sbb
scas
lods
fcoml
cli
int
jbe
mov
shrl
push
in
adc
out
data16
sbb
ss
mov
xchg
sbb
aad
and
mov
idiv
int
jns
repnz
push
clc
lahf
inc
js
scas
jbe,pt
arpl
push
jns
inc
jne
and
and
add
and
neg
push
mov
jmp
lahf
lahf
les
cli
pop
arpl
int
fdivs
pop
popa
nop
cwtl
mov
mov
sbb
mov
jne
repnz
pop
punpcklwd
add
xchg
into
call
push
sbb
jge
ffreep
mov
fsubs
repnz
iret
xchg
movsb
xchg
test
dec
inc
xorl
shlb
mov
mov
jo
push
adc
jg
mov
sub
add
mov
mov
mov
sub
mov
xchg
mov
xchg
sbb
xor
negl
xor
test
xor
mov
adc
jecxz
icebp
or
mov
xchg
mov
add
daa
in
jp
adc
mov
cwtl
fistpl
je
lods
dec
jnp
cmc
push
sub
sbb
aad
sqrtps
mov
cli
repz
xor
xchg
push
dec
leave
or
fists
dec
mov
mov
stos
enter
push
mov
repnz
negb
ds
out
pop
push
scas
es
aad
or
int3
jo
arpl
jmp
out
adcl
mov
daa
out
pop
push
pop
lahf
add
fildll
iret
loopne
aas
fucomp
mov
xor
cmp
int
sbb
or
jae
in
and
js
loope
pop
lods
mov
into
jmp
in
inc
mov
dec
and
repz
xorl
pushf
add
ret
repnz
dec
xchg
dec
sarl
fsubl
add
jbe
jl
cltd
push
out
cmp
and
mov
adc
lds
xor
mov
cmp
stos
xor
push
sahf
adc
add
sub
nop
pop
scas
aam
mov
in
jmp
cli
xor
mov
nop
adc
sub
sbb
out
sub
mov
xor
das
ret
int3
popa
rcrb
xchg
jle
mov
add
dec
jbe
nop/reserved
mov
xchg
inc
mov
js
mov
bound
mov
je
lcall
push
mov
addr16
scas
and
jmp
or
jecxz
les
mov
xor
cld
fdivl
adc
xchg
mov
fisttps
push
push
xchg
stos
push
imul
or
xchg
outsl
xor
pusha
adc
rclb
xchg
cmp
push
and
lods
jge
jbe
cld
cmpsl
jmp
jnp
test
push
ljmp
mov
lret
inc
call
dec
sti
or
and
xor
xchg
fwait
aad
lret
push
shl
fs
test
dec
je
insb
inc
insb
mov
dec
push
add
in
cltd
cwtl
mov
cmp
and
push
lods
jp
loop
cmp
mov
movsl
ret
push
fwait
xchg
lock
popa
nop
test
mov
sti
int
adc
cs
pusha
xlat
insb
xchg
and
addr16
fcomps
jl
push
ja
insb
push
insl
mov
mov
dec
cli
pop
ja
aaa
cmp
xor
cmp
repnz
addl
ja
and
xchg
add
pushf
and
repz
xchg
cld
push
add
je
orb
or
imul
xchg
and
scas
xlat
cld
cwtl
fimull
inc
xor
inc
dec
inc
jbe
fwait
es
lock
int
sarb
xor
xor
push
push
jnp
cmpsb
ficoml
movsb
fdivl
aas
push
adc
nop
cli
pop
shrl
icebp
add
fdivrs
pop
pop
ficoms
flds
jg
inc
jns
sub
aaa
add
into
xor
ljmp
scas
xor
popa
mov
lock
pop
cli
sbb
std
fcmovnbe
xchg
popf
cmp
mov
int
sub
das
stos
add
jg
sub
enter
inc
push
jae
outsl
insl
cmp
inc
or
cmpsl
and
mov
xchg
sub
sbb
xchg
scas
imul
mov
add
out
xor
orl
jnp
xchg
in
shrl
xchg
pop
bound
jnp
scas
cmc
xor
int
aas
cli
ret
pop
mov
mov
sub
lds
leave
or
pop
push
cmp
mov
xchg
dec
inc
pop
daa
cld
ds
cmc
mov
mov
add
into
in
pop
and
lahf
pop
sbb
testb
adc
ja
cmp
sbb
or
lea
aad
jecxz
jecxz
mov
enter
xchg
mov
fidivrl
dec
lock
cmp
adc
daa
pop
or
sbb
mov
popa
xchg
xchg
push
cmp
dec
or
dec
xor
aad
hlt
test
andb
push
loopne
sahf
fwait
das
xor
xchg
pop
mov
out
sbb
les
xchg
xor
xchg
xchg
popa
sahf
test
fs
daa
lea
aas
dec
lods
or
jl
les
fists
hlt
je
ljmp
faddp
ret
int3
mov
repnz
adc
jb
outsb
stos
call
cmp
fnstsw
inc
test
mov
iret
shlb
addr16
mov
lcall
aad
push
cltd
mov
inc
lahf
xchg
mov
sub
jle
sbb
add
xchg
dec
lods
mov
imul
dec
cli
fdivs
push
repnz
push
mov
xor
mov
xor
inc
arpl
mov
adc
jb
mov
mov
pop
inc
xchg
ds
or
sarb
mov
into
mov
repz
add
adcl
and
in
or
adc
scas
or
sub
lods
gs
jo
mov
fdivr
jecxz
sahf
aad
fstl
or
inc
sti
push
mov
lds
out
je
mov
mov
adc
sti
lea
std
idivl
add
cmp
push
aam
pop
lret
addr16
insl
movsb
jg
jno
jb
or
inc
mov
jbe
mov
loope
or
pop
fs
jo
add
mov
shl
std
jo
roll
mov
ret
jb
dec
dec
gs
dec
in
push
lret
sub
push
or
add
scas
xor
dec
fsts
jb
sub
arpl
je
push
inc
push
test
mov
movsl
push
arpl
fcom
inc
inc
cmp
pop
in
and
call
ret
fnstcw
vmovlps
mov
inc
dec
incb
outsl
mov
mov
inc
enter
popa
call
xchg
pop
nop
sbb
jns
inc
and
mov
in
pushf
adc
pop
and
or
add
push
cmp
in
int
mov
int
adc
movb
sub
dec
xor
mov
cmp
adc
mov
fisttps
repnz
std
cmpb
push
xchg
ja
sbb
cltd
and
dec
dec
cs
push
xchg
inc
insl
lock
xor
mov
out
test
mov
pop
aam
pushf
mov
ret
or
outsl
dec
push
xchg
das
xchg
loopne
push
adc
sub
mov
add
pop
pop
rcrb
out
daa
mov
aaa
movb
loopne
stos
xor
div
mov
bnd
jmp
rcll
int3
fdivrs
xlat
cmp
call
scas
ljmp
add
sahf
scas
lock
push
shrl
add
dec
pop
in
xchg
sbb
incb
cmpsl
mov
faddl
pop
xlat
xchg
push
mov
cmpsb
aam
shl
inc
cmpsl
xchg
repnz
add
stc
jge
sbb
mov
mov
loop
inc
mov
idivl
inc
imul
int3
cltd
insb
and
sti
add
in
es
pop
outsb
fistps
mov
xlat
push
inc
or
std
bound
fsubrs
sbb
nop
pop
xchg
cmp
or
mov
inc
cli
sbb
stos
push
xchg
fimull
rol
lods
mov
sbb
dec
jne
sbb
jmp
fcomps
popf
dec
add
mov
push
das
or
fldl
push
dec
xor
rclb
test
and
jl
xchg
push
aam
pushf
cmpl
jmp
pop
out
xchg
in
aas
outsl
jns
les
insb
jb
cmpsb
adc
out
push
rolb
mov
inc
inc
push
cld
mov
call
xorl
idivl
xchg
ficomps
lret
mov
push
lods
push
xor
dec
and
loope
nop
inc
loopne
mov
adc
pop
push
cwtl
pop
lea
das
loope
xchg
or
test
lea
mov
sti
mov
cmp
lcall
in
mov
stos
aas
aaa
pushf
add
xchg
pop
ficompl
pop
rorb
xor
popa
push
cmp
std
fildl
pusha
mov
push
mov
jno
mov
adc
cmp
xchg
outsl
in
xchg
mov
clc
lods
enter
mov
cli
push
push
out
or
inc
mov
jmp
shlb
in
xchg
inc
mov
andl
sahf
call
adc
fcompl
add
mov
xor
dec
outsb
push
movsb
sbb
or
push
stos
movsl
mov
or
mov
xchg
push
inc
jnp
mov
jp
jnp
xchg
mov
xchg
xchg
imulb
mov
outsl
mov
dec
xchg
add
shll
lcall
popf
mov
sub
lret
mov
push
leave
shrb
mov
in
lods
dec
jno
stc
cvtdq2ps
adc
outsl
mov
loope
mov
adcb
pop
divl
test
sbb
fnsave
mov
push
daa
xchg
icebp
mulb
rcl
fistps
das
arpl
fsubrl
outsl
xchg
inc
sbb
clc
cmp
nop
xor
daa
dec
dec
mov
or
xchg
cmp
je
dec
sub
ds
mov
cmpsb
jecxz
xchg
push
jge
loopne
jecxz
loope
mov
in
xor
xchg
arpl
cmc
scas
test
mov
ja
imul
enter
movsb
ss
sub
ror
mov
cmp
pop
mov
lea
pop
icebp
xor
jae
rcll
add
les
xchg
cmp
push
push
cmc
add
lods
sbb
fs
jmp
aad
mov
fsubrl
adc
pusha
clc
scas
mov
inc
shll
in
mov
and
aas
aam
mov
inc
rcrl
pop
addr16
imul
imul
dec
imul
test
mov
ja
shlb
pushl
xchg
int3
decl
jnp
sub
adc
test
loopne
insl
testl
ret
iret
ds
jle
int
push
jo
jbe
fistps
mov
loope
sahf
mov
mov
sub
ja
add
gs
pop
jge
jl
push
pushf
or
test
nop
or
jle
es
fcmove
push
cmpsb
sbb
lret
mov
dec
inc
xor
popf
mov
jg
subl
loop
push
jmp
sub
sbb
sbb
ds
orb
cmp
ds
push
lods
push
cmp
jecxz
cmp
jns
xor
aaa
and
fs
jl
je
rcrb
pop
cmpsb
in
cmp
dec
or
insb
cltd
inc
leave
xchg
inc
and
neg
fimuls
pop
mov
rolb
sbb
test
push
enter
lahf
loope
mov
cli
jg
add
xchg
lock
add
inc
inc
in
sahf
cmp
xchg
stos
pop
and
adcb
or
adc
out
sarl
lret
insb
push
mull
call
xchg
rolb
add
loop
in
jb
inc
push
pop
mov
inc
divl
mov
pushf
push
pusha
sbb
cmp
sub
das
dec
jo
lds
push
mov
loopne
mov
lods
mov
pop
js
fcompl
in
lret
dec
mov
lahf
push
stc
dec
pop
dec
jecxz
inc
fldl
ja
cmp
shlb
aad
shlb
ja
ret
cmp
jge
sub
or
lahf
scas
push
ja
pop
movsl
setb
sbb
push
inc
lods
in
add
pop
add
add
lret
xor
push
div
shrb
and
test
enter
pop
cmpl
add
cld
xlat
les
add
adc
imul
dec
push
test
das
push
fmul
cwtl
mov
incl
lods
dec
or
andl
div
push
decl
jge
test
sub
xor
in
push
push
int
es
int3
sub
insb
jp
jae
aad
mov
sbb
pop
jmp
in
mov
pop
pop
neg
jle
cmp
pop
xchg
stos
and
add
jmp
sbbl
lahf
push
ljmp
push
je
int
enter
push
imul
push
imul
fmull
adc
lahf
arpl
rorb
ljmp
loopne
push
movsl
fdivrl
aad
add
pushl
js
addr16
inc
imul
sub
pop
aaa
cmp
cmp
pop
mov
mov
mov
xor
dec
add
inc
data16
adc
pop
mov
mov
in
test
loop
dec
lahf
mov
adc
or
adc
out
or
jp
idivl
rcll
mov
pop
outsb
inc
jle
addr16
push
sub
pop
xchg
mov
xor
sub
leave
mov
jo
or
adc
add
push
pop
xchg
jo
fstpt
mov
sub
idivb
fiaddl
dec
std
dec
sub
fisubrs
add
mov
neg
dec
mov
add
loope
push
test
fnsave
ret
or
stos
shlb
or
jmp
push
outsl
ret
stos
jl
movsl
lea
jno
adc
jns
add
daa
out
pushf
adcl
cli
sub
xchg
cmp
jae
bound
sahf
mov
fistpll
lahf
push
push
push
roll
cmc
jne
enter
xchg
cmp
push
push
adc
dec
int3
jp
fbld
push
je
sbb
sub
sub
scas
inc
pop
mov
fwait
or
ret
lcall
fdivrl
ljmp
sbb
xchg
es
jo
clc
cwtl
fwait
outsl
nop
fisubl
ljmp
lods
lods
lods
push
cmp
mov
loopne
or
imul
xor
or
out
movsl
pop
adc
aam
jnp
jnp
sub
stos
je
mov
jl
mov
es
push
shlb
clc
mov
push
sub
loopne
out
filds
add
gs
fists
rorb
mov
enter
push
imul
dec
bound
mov
iret
rolb
scas
xchg
xchg
xchg
xor
xchg
outsl
sar
in
shrl
pop
sbb
jno
xor
dec
addr16
sti
cmp
roll
ret
dec
pop
push
adc
push
addb
daa
rcll
stc
pop
adc
push
push
stos
mov
cmp
jb
mov
mov
xor
sahf
sub
adc
xchg
sarb
jmp
and
addl
inc
inc
jg
movsb
popa
sbb
mov
xchg
pop
enter
jbe
fs
mov
imul
sti
sahf
sbbb
out
mov
mov
xchg
or
test
jns
mov
push
jns
out
push
aam
cs
jne
negl
ja
lret
sbb
and
push
xchg
and
xchg
loopne
mov
xor
sub
imulb
push
fsubl
test
mov
dec
adc
mov
xchg
push
call
rol
std
jne
ljmp
and
xor
pushf
ficompl
lock
movsb
add
push
mov
ret
push
push
sub
jns
cmp
mov
and
les
xor
sub
fs
pop
add
outsb
aaa
sbb
out
shrl
jns
fsubp
mov
loop
hlt
pusha
test
vucomiss
pushf
popa
sbbb
ror
or
pop
cmp
sub
push
scas
stos
mov
nop
ror
test
cmp
dec
and
icebp
push
shrb
fistl
push
pop
pop
std
mov
int3
xchg
dec
pusha
test
xor
test
cmpsl
push
adc
sbb
sbb
jl
xchg
mov
inc
ret
dec
insl
ret
or
rcll
xchg
and
push
lods
mov
xchg
std
pop
push
lods
xchg
paddusb
mov
enter
pushf
jle
or
shll
pop
cmp
inc
xlat
push
outsb
jp
stos
cmc
insl
mov
std
scas
pushf
stc
jne
cli
dec
test
sbb
shlb
add
cmp
mov
mov
scas
push
push
inc
lods
movsl
dec
in
sub
divb
call
add
les
push
mov
pop
cwtl
inc
xchg
pop
sbb
jb
pop
jnp,pn
dec
je
ret
push
clc
sahf
scas
testl
cmc
lods
jmp
fcomps
imul
mov
aam
jb
rcrb
or
cli
jno
sti
mov
xchg
aas
in
call
insl
push
cmp
in
aaa
fs
mov
mov
xchg
jae
mov
add
mov
push
inc
aaa
xchg
mov
iret
aas
cmp
mov
xchg
iret
adc
jb
mov
adc
gs
adc
repnz
das
jns
sub
add
sub
mov
cli
xor
mov
fdivs
dec
lahf
sbb
je
sbb
add
xlat
inc
mov
xor
mov
out
cmp
mov
test
sub
sbb
push
jae
cmpsb
jae
jne
and
je
incl
sbb
xchg
or
or
enter
iret
std
ds
in
pop
mov
fists
insb
sub
sub
loope
arpl
cmpsl
fnsetpm(287
scas
sbb
jg
dec
enter
ljmp
jae
xchg
adc
sub
mov
mov
adc
test
cld
pop
mov
movsb
sarl
xchg
jl
hlt
mov
xchg
lods
adc
pop
push
mov
dec
push
je
fs
dec
sub
dec
or
inc
out
clc
mov
addb
cs
sub
out
mov
pop
jo
cld
popf
icebp
jmp
lahf
leave
sarl
add
dec
xrelease
pop
mov
faddp
mov
adc
mov
xor
mov
jl
fucomip
and
rcll
sbb
std
xchg
sahf
lahf
mov
sub
xchg
jns
hlt
iret
dec
cmp
shrl
cmpsb
in
mov
adc
inc
outsb
push
lret
push
push
xor
or
jbe
lret
lahf
adc
outsl
adc
sarb
jbe
mov
pop
add
mov
addr16
ret
outsl
cmp
pusha
addr16
and
lret
add
jl
jns
lods
jo
jns
cmpsl
jbe
dec
pusha
xchg
push
fcomip
sbb
int3
xlat
push
mov
stos
cmp
adc
ret
sbb
sbb
xchg
jo
lods
jns,pn
mov
pop
jecxz
movsl
fisubrs
dec
mov
test
push
cmp
sbb
in
out
std
mov
int
pop
sbb
popa
mov
push
stc
mov
shll
dec
sbb
pop
sti
fdivrs
pop
mov
xchg
aad
ljmp
lods
jg
ret
loop
mov
cmp
dec
jbe
xchg
jno
push
out
xlat
sahf
mov
mov
cmp
lcall
dec
pop
sbb
dec
jl
lock
jns
sbb
fldcw
sbb
sbb
push
dec
call
cmp
inc
in
and
sub
or
mov
sahf
ss
clc
jb
sub
pushf
dec
adc
lcall
sarb
cmp
jmp
lods
rcrb
cmp
icebp
add
stos
cmpsl
and
sub
add
xchg
mov
or
das
jp
sbb
rolb
iret
adc
cmp
push
cwtl
ja
pop
sub
lods
dec
and
or
outsl
nop
mov
mov
lcall
mov
stos
or
ret
orl
lret
mov
and
test
out
xor
enter
mov
ret
mov
incb
outsb
add
mov
cmp
gs
fadds
cmp
shlb
mov
adc
pop
fidivs
clc
or
arpl
inc
scas
sub
jns
mov
std
lret
test
outsl
push
aas
cltd
fs
out
mov
adc
sarb
and
sbb
inc
mov
cltd
sub
mov
mov
sub
xor
les
mulb
xchg
mov
add
test
mov
cmp
xlat
cmp
push
xchg
pop
dec
dec
je
clc
in
fmuls
in
mov
loope
add
xchg
daa
inc
outsl
sub
in
mov
mov
sbb
test
push
push
pop
cwtl
sub
mov
mov
outsb
cs
inc
cmc
inc
repnz
cli
fs
mov
mov
mov
adc
insl
xor
in
jle
xor
push
fiaddl
stos
inc
lods
imul
stc
sub
mov
lcall
and
sahf
insl
cli
push
xor
cli
mov
cmpl
fdiv
daa
push
fdivrl
xchg
add
xor
add
sti
lods
subb
cltd
je
out
and
scas
jle
adc
pop
loopne
out
mov
pop
shlb
ficompl
mov
enter
jp
push
data16
ja
jnp
adc
xchg
shrl
jl
mov
push
loope
dec
mov
std
decl
sbb
dec
jne
imul
sbb
or
jo
cli
jle
xchg
dec
pop
mov
push
lret
int
out
mov
roll
mov
es
push
jne
adc
es
mov
repz
pop
orl
int3
outsl
cmpsb
jae
fildl
xchg
push
jb
stc
mov
addb
xor
pop
sub
loope
or
in
out
addl
sbb
mov
iret
int
inc
mov
in
mov
xor
imul
pop
mov
iret
lock
add
cmc
pop
mov
pop
xchg
push
loope
and
jp
and
popa
cwtl
push
stos
xor
fsubs
daa
lret
clc
leave
add
push
mov
call
xor
leave
sub
sbb
and
and
and
jbe
xor
mov
pushf
fisubrs
std
and
int
repnz
or
or
cmp
mov
sahf
outsb
inc
xchg
cmp
daa
stos
loop
rcrl
adc
mov
aas
jne
pop
jle
rclb
pop
sub
inc
fucomip
dec
orl
loopne
cltd
mov
dec
xor
loopne
mov
cmc
push
iret
movsb
xchg
and
add
adc
repz
and
rcrb
adc
push
push
mov
adc
xchg
mov
jae
mov
sbb
push
pop
aas
in
cmpsb
adc
daa
daa
popa
xchg
ja
cmpl
repz
inc
lret
or
fs
loop
hlt
and
cli
clc
lock
sbb
inc
clc
jo
hlt
mov
jae
pop
xchg
nop
ficoml
jo
insb
and
scas
push
repz
lds
dec
and
sbb
mov
sbb
xchg
js
dec
leave
add
rolb
mov
negl
jle
xchg
cmpsb
or
fs
fwait
into
pop
cld
sub
xchg
mov
cltd
fsubrl
cmpsl
and
pavgw
popf
cmpsl
push
adc
inc
sbb
jo
es
test
sub
mov
leave
mov
je
hlt
test
mov
data16
inc
push
lea
insb
lahf
jle
sbb
jbe
daa
das
cmp
jge
jle
enter
or
jne
fimuls
and
xchg
jp
clc
insb
inc
loope
fsts
add
fcmovnb
or
push
dec
insl
dec
jp
test
inc
jns
adc
cmpb
push
xor
adc
xchg
mov
or
imul
sbb
int
mov
cmp
rcrb
sub
mov
dec
sbb
test
jb
andb
adc
cmp
and
movsl
in
add
push
mov
adc
arpl
loop
xchg
xor
test
fcos
ljmp
jle
stos
sub
cli
in
jno
or
lcall
xchg
orb
mov
or
faddl
push
push
jg
sahf
fdivr
push
ljmp
xor
int3
add
xor
mov
jne
sub
lcall
inc
mov
lret
imul
mov
jo
push
out
std
sub
jbe
mov
scas
mov
adc
jmp
fistl
cmp
cmp
push
push
dec
movsb
dec
data16
push
dec
call
sub
out
pop
xchg
stos
movsb
jg
jle
push
push
in
inc
mulb
sub
sbb
lahf
pop
sub
sbb
mov
shr
add
fs
pslld
xlat
push
inc
ja
jnp
add
test
ror
push
jl
jp
cmp
mov
in
lahf
mov
pop
aaa
dec
aad
lea
roll
pop
xchg
lret
add
xor
xabort
adc
scas
idivb
loop
add
out
jg
xor
imul
or
in
cvtps2pi
mov
data16
mov
int
sub
jns
pop
orb
sub
jge
or
fwait
dec
ss
or
cli
dec
mov
cmpsb
jmp
mov
jns
ficomps
sub
mov
mov
mov
mov
fidivs
inc
ss
jbe
pop
xchg
xchg
scas
mulb
jmp
mov
es
cmpsb
rcll
ja
sbb
lock
int3
mov
adc
sbb
ljmp
lods
adc
fld
clc
jns
jle
and
push
mov
inc
insb
bound
jmp
fwait
or
xchg
ja
cs
fst
pop
cmp
lahf
enter
aad
and
dec
jnp
mov
fsubrl
inc
push
lock
fistps
dec
call
in
sbb
mov
pop
jmp
lods
ret
sub
icebp
cmpsl
sbb
sub
cmpsl
icebp
inc
fisubs
cmp
in
mov
fistpll
or
jb
jo
leave
std
lock
inc
mov
push
lret
fwait
sbb
in
sub
mov
mov
mov
push
xor
xchg
sbb
movsb
xchg
jmp
sub
dec
stos
xchg
jmp
xor
cmpl
xchg
sub
sub
pop
movsl
icebp
out
mov
cmp
sub
lea
lods
push
cmpsl
adc
roll
or
and
cmp
jne
js
mov
stos
mov
jg
pop
dec
inc
das
cs
das
subl
dec
jg
sahf
iret
mov
xor
sub
inc
xchg
iret
push
aas
inc
lea
sahf
rcll
pop
movsl
pushf
ljmp
testb
insl
mov
sbb
fbstp
and
movsb
subl
stc
negl
insl
ja
mov
notb
mov
xor
aas
aas
adc
out
test
mov
xor
add
stos
iret
test
sbb
xchg
aad
std
leave
cs
in
xchg
or
jmp
and
xor
arpl
test
jecxz
cmpsb
jnp
mov
adc
repz
jnp
xor
mov
fsts
cmp
push
scas
jl
pusha
push
inc
push
xchg
mov
sub
xor
sbb
sbb
xchg
adc
outsb
cmp
or
cmpsb
sub
insb
aaa
xchg
pop
mov
shrb
lock
je
push
movl
dec
add
inc
popf
data16
insb
mov
xchg
cmpsl
pop
dec
loop
xor
cmp
mov
xchg
or
inc
out
xorb
push
xchg
popa
xchg
subb
mov
lea
sub
add
mov
cmpsb
pop
cmp
xor
out
cvtdq2ps
mov
popa
pop
outsb
jmp
in
out
xchg
push
rolb
jno
mov
shl
je
outsb
daa
jns
sbb
jo
push
call
dec
jb
sbb
xor
test
mov
ficomps
mov
ret
add
shlb
fldcw
shr
mov
das
adc
sbb
lock
jb
dec
lcall
inc
inc
cmp
xchg
add
loop
movsb
inc
jbe
jge
cmp
push
fmul
cli
iret
xchg
sub
pop
push
add
out
mov
mov
hlt
mov
addr16
movsb
shl
mov
test
popf
mov
and
mov
inc
or
mov
and
loop
pop
imul
pop
ljmp
test
lahf
cmp
fs
inc
xchg
push
iret
ds
negb
stc
jmp
add
dec
fs
jne
push
clc
hlt
push
jecxz
cmpsl
stc
hlt
call
pop
inc
cld
xchg
inc
aas
lds
outsl
orb
dec
jcxz
test
aad
jmp
aaa
mov
push
repz
bound
push
cmpsb
lds
ficoms
and
inc
es
gs
call
xchg
lods
std
insl
mov
or
or
cmp
jae
jg
rorb
mov
xchg
mov
add
lds
inc
cltd
inc
clc
sbb
jnp
xchg
add
jge
popa
sbb
xchg
lock
sbb
test
dec
mov
xlat
int
lea
in
andl
jecxz
and
dec
add
mov
in
inc
lahf
clc
pop
scas
idivl
fwait
ret
scas
push
outsb
jno
pop
sub
sbb
push
nop
lock
add
cmc
push
xchg
out
inc
jecxz
das
out
ss
adc
jle
aad
insl
popf
testb
mov
leave
and
push
mov
test
faddl
insb
pop
xchg
in
mov
cmpsb
mov
jb
xchg
xchg
xchg
cmc
cmp
fucomip
cmp
jnp
cmp
and
ror
mov
enter
dec
inc
xchg
sar
stos
insl
lock
test
sbb
pop
adc
imul
adc
pushf
cmpsb
and
xchg
xor
mov
dec
pop
cltd
jg
push
add
popa
fwait
pusha
dec
cmpsb
xor
fstl
and
out
jecxz
movsl
js
in
pop
mov
lds
pop
aam
outsb
pop
sub
js
iret
pop
fimull
lea
xchg
test
shl
jbe
xor
mov
insb
add
fdivrl
addl
es
lods
ja
lea
cmp
mov
mov
xchg
pop
cmp
in
stos
loop
adc
outsl
pop
push
pop
aad
lahf
dec
or
clc
popa
sbb
pop
xchg
es
cltd
mov
ret
jo
cmpsb
mov
movq
and
inc
fdivr
test
fsubl
lock
mov
mov
mov
in
cmp
roll
add
and
les
pop
movsb
mov
adc
js
mov
nop
int
push
push
test
movsb
in
cs
cmp
sbb
sub
dec
xchg
sbb
xchg
out
rcrb
fdivs
push
cltd
cmc
ret
push
jp
jnp
out
inc
push
pop
sti
outsl
push
xor
fwait
push
stos
lods
jp
ljmp
inc
lods
xchg
sbb
mov
pop
stos
insl
dec
dec
gs
sbb
add
mov
nop
stos
stos
iret
neg
mov
mov
imul
push
scas
jnp
in
imul
fdiv
xor
inc
bound
cmc
shll
adc
xor
cmpsl
jecxz
lahf
notb
addr16
ja
ret
ret
inc
mov
repz
hlt
push
ja
xchg
push
lcall
into
rclb
mov
sahf
or
jno
fcoml
push
pop
test
cmp
xchg
test
inc
insl
lods
adc
mov
add
outsb
mov
adc
xor
and
xchg
mov
cmp
mov
repz
inc
pop
aas
sbbb
loopne
or
aaa
cmp
adc
lcall
mov
test
push
mov
dec
stos
pop
pushf
scas
scas
hlt
pop
adc
dec
aam
pusha
jns
mov
out
jnp
vpmovmskb
ret
mov
into
in
das
push
arpl
push
mov
mov
dec
pxor
sub
nop
jns
dec
packuswb
addl
js
iret
int3
push
dec
sbb
mov
fs
mov
inc
jne
inc
fcmovnbe
jecxz
mov
sbb
ljmp
push
sbb
jno
mov
cmp
adc
sbb
insl
gs
add
loope
dec
push
dec
test
fcomps
push
aam
xor
mov
out
sub
and
ja
pop
into
pop
push
in
sub
adc
sti
in
inc
ret
popa
sti
in
xchg
les
inc
push
in
xchg
imul
and
dec
sbb
addb
inc
cmp
adc
dec
int3
les
push
mov
mov
xor
mov
test
mov
in
xchg
loopne
into
mov
lcall
test
fbld
add
push
push
mov
int
test
and
inc
xor
add
add
jns,pt
sbb
mov
leave
cmpsb
daa
mov
mov
jecxz
lock
jb
mov
clc
mov
insl
ss
scas
push
or
push
pop
add
xchg
test
mov
push
lods
sub
pop
aas
leave
mov
and
mov
pop
adc
scas
adc
push
xchg
jb
pop
sbb
lods
test
mov
sub
nop
fstpl
add
push
sub
int3
mov
popf
sahf
adc
add
pop
fisubrs
test
push
mov
out
mov
and
mov
repnz
fsubr
lods
sbb
or
pop
icebp
pop
mov
movsb
dec
push
imul
nop
lret
sbbl
fildll
jae
pop
aad
pop
cmc
cmp
rep
adc
mov
dec
rcr
add
xchg
notl
lcall
jle
sub
aaa
xchg
dec
pop
mov
and
push
movsl
ljmp
cmp
pusha
popa
and
pop
pop
sub
sbbl
out
jbe
ja
pop
inc
push
fcmove
mov
inc
sarb
std
aam
jge
add
mov
sub
and
dec
cmpsb
scas
test
mov
xchg
adc
xor
pop
shlb
lods
mov
add
fmull
mov
inc
mov
push
bound
mov
push
outsb
cmp
xchg
daa
stc
push
pop
sub
data16
cld
add
jne
in
add
inc
out
mov
call
outsb
pop
pop
int
leave
mov
in
dec
xlat
mov
mov
out
push
scas
push
push
orb
or
xor
or
stos
cmpsl
fnstsw
ffreep
in
mov
ss
out
jp
sbb
mov
outsl
loop
idivl
adc
adc
out
xchg
insl
fiadds
mov
movsl
pop
stc
ljmp
add
cmpsb
data16
mov
mov
sub
loopne
jns
lods
push
mov
xchg
fwait
int3
inc
inc
neg
add
repnz
pop
das
lds
stc
inc
sub
xchg
aam
loope
adc
inc
ss
and
cmp
xchg
mov
das
adc
nop
adc
xchg
cmp
inc
outsb
negb
mov
push
pop
inc
xor
sbb
out
enter
or
dec
in
fldcw
andl
push
mov
ret
jns
push
or
out
xchg
inc
add
inc
xor
stc
fldt
xor
xor
je
dec
jnp
jmp
jb
leave
mov
push
push
aam
sti
jns
scas
shrb
and
in
shrl
mov
test
enter
aaa
test
out
xor
sbb
sub
imul
xchg
out
lret
adc
fisttpl
cmp
out
roll
sub
push
js
add
pop
xchg
sub
movsl
sbb
add
inc
push
clc
lds
push
mov
cltd
and
subl
movsb
adc
mov
outsl
nop
sbb
cmpsb
jno
cld
sbb
and
fcmovnu
sbb
jne
das
xchg
push
fistl
lcall
push
clc
lds
sub
movsb
push
cmp
sub
aad
mov
rcrl
and
cmp
cwtl
fwait
js
bound
lea
insl
js
add
rcrb
ljmp
ret
movsb
arpl
add
out
sub
mov
or
xchg
cmpsb
lock
stos
addr16
out
push
movsb
stos
mov
and
inc
fwait
cli
xchg
out
insl
sub
push
adc
and
repz
fsubl
xor
pop
ss
stc
sub
out
nop
loope
xor
mov
subl
imul
inc
or
xchg
out
mov
pusha
std
movsl
lret
jge
in
lds
jne
xchg
je
xor
imul
jecxz
jmp
lock
fldcw
lcall
jl
sub
lods
test
sub
movsl
addr16
cs
ficompl
lret
sbb
pop
insl
les
dec
in
lds
gs
pusha
cmpsb
jae
jmp
aam
push
outsl
out
and
rorb
xor
jg
cs
movsb
mov
cmp
sub
adc
jb
popf
push
add
lds
jecxz
subb
add
fbld
pop
dec
jnp
out
add
add
test
sbb
arpl
sbb
fwait
sbb
or
fldl
mov
mov
rcr
mov
iret
sbb
lods
les
xchg
sbb
ret
jbe
sub
push
mov
push
sti
xor
inc
fimuls
or
in
enter
call
xchg
jle
pusha
lods
push
dec
insl
dec
shrb
cli
mov
std
cli
cmpsb
in
lock
xchg
mov
jns
fisubrs
cmp
jl
pop
pop
ja
jmp
in
pop
je
jns
pop
int3
and
stc
adc
adc
adc
jns
fcoms
stos
ja
mov
ret
lods
cs
mov
fisttpll
enter
leave
outsl
xchg
xor
xchg
xchg
pusha
icebp
xor
into
scas
dec
and
push
push
das
pop
gs
pusha
xor
mov
xor
or
inc
cmp
xor
mov
fsts
jmp
dec
pop
clc
and
loopne
addb
sti
lods
movsl
movsl
dec
mov
aad
push
mov
jns
push
fildll
xor
inc
mov
push
mov
pop
mov
cmp
xchg
adcl
int3
bound
sbb
sahf
pop
push
setl
popa
data16
testb
fistpll
adc
mov
cld
or
and
repz
sub
dec
into
inc
out
mov
cli
or
bound
test
shl
and
xor
push
adc
fsts
unpckhps
dec
into
pusha
push
adc
inc
inc
arpl
adc
or
inc
clc
jecxz
data16
push
xchg
and
push
jo
aas
insl
mov
pop
aam
jg
cmp
pop
adc
scas
outsl
or
mov
aam
cltd
rcl
daa
test
mov
push
mov
lahf
mov
and
movsb
mov
adc
inc
subb
jnp
sarl
fisubrl
mov
mov
lods
jle
int3
in
movsl
fisttpll
mov
dec
dec
pop
mov
xchg
into
ficoml
sub
sbb
push
jno
pop
pop
push
les
mov
or
shll
push
fidivl
pop
jne
cmpsl
push
or
or
ret
mov
pop
xrelease
out
adc
xchg
sbb
xrelease
test
mov
popa
stos
jg
mov
cltd
cltd
adc
sbb
les
cld
cmp
jmp
mov
ret
pop
nop
dec
in
jge
xor
mov
push
das
or
push
mov
gs
enter
shll
cmp
int
call
cmp
out
mov
cli
idivl
mov
outsl
pop
data16
test
adc
and
xchg
mov
cmp
fsubs
push
testb
jmp
lods
imul
sub
add
mov
fnstsw
ds
out
test
inc
popa
stos
push
sub
jae
sub
lcall
cmp
adc
push
shl
pop
push
mov
mov
xor
scas
jecxz
jg
and
xchg
or
inc
push
outsb
shll
sahf
pop
in
and
cmpsb
outsl
movb
loopne
lods
mov
and
vpaddsb
pop
cmpl
push
stc
repz
jae
mov
lret
cmp
xchg
xchg
inc
out
xchg
and
in
das
lahf
out
pop
xchg
add
or
enter
lcall
or
mov
rcrb
xchg
sub
movsl
dec
pusha
jmp
lds
call
js
ss
flds
mov
inc
jg
xchg
xchg
push
pop
ret
in
repnz
inc
lcall
jge
push
jae
xor
test
cwtl
es
cmovg
cmpsl
imull
pop
pop
sarl
nop
dec
xchg
lods
xor
inc
out
popa
add
jle
lock
test
and
pop
or
aad
xchg
loope
outsb
pop
fldt
ret
insl
leave
mov
mov
push
sub
pop
inc
fldl
inc
fwait
aas
xchg
sbb
push
jg
cmp
xchg
sbb
mov
outsl
in
mov
loop
rcll
jb
jnp
xchg
sub
jmp
enter
ss
ret
psubusw
push
int
ljmp
out
mov
jae
mov
or
push
dec
cmp
outsl
sarl
mov
loopne
sbb
dec
sbb
push
xchg
pop
pop
fldcw
mov
out
sub
addr16
adc
mov
lods
cmp
inc
in
push
aas
fisubrs
xchg
xor
cs
popa
popf
push
pop
ret
xchg
cmp
and
cmpsl
ret
pop
or
lock
and
jae
lahf
push
dec
cltd
jge
lcall
push
and
pop
cs
mov
scas
arpl
add
dec
lahf
mov
lret
idivl
push
xor
inc
and
jne
inc
lock
jne
jecxz
cmp
xor
jecxz
and
arpl
or
andl
mov
popa
dec
pusha
jae
mov
jmp
dec
cmp
and
push
addr16
jne
pushf
aaa
adc
sub
pop
inc
push
maxps
add
stos
in
or
js
popa
cmpsl
sub
mov
sbb
jnp
nop
dec
push
add
pop
jae
xorl
dec
or
outsl
inc
test
dec
sub
fmull
cmpb
pop
mov
rcrl
adc
lds
mov
mov
fcompl
or
xchg
in
lea
adc
popa
cmp
sub
nop
xchg
aam
inc
negl
mov
fimuls
ret
sti
icebp
xchg
push
jno
xlat
fst
es
fimuls
cmpb
pop
loopne
fsubrs
sahf
aad
shl
or
push
xor
lods
arpl
xchg
sbb
and
inc
fnstenv
lret
iret
xchg
or
subb
push
and
fidivrl
lods
pop
sarb
xor
mov
xchg
popl
aad
push
cmp
daa
outsl
rcll
cmp
and
sbb
cmp
gs
sub
imul
mov
xchg
aam
fs
fadds
mov
lcall
mov
ret
repz
paddsb
stos
jns
inc
adc
aas
cmp
xor
xchg
and
lahf
sbb
test
aad
dec
mov
cmp
or
xchg
sub
inc
imul
pop
out
sbb
int3
shrb
std
movsl
repz
push
add
cmp
sub
out
lahf
das
inc
aas
sub
jbe
mov
iret
mov
in
pusha
out
jp
push
ret
and
xchg
test
int
xorl
mov
dec
rorl
mov
fucomp
sbb
dec
cs
aam
pop
pop
sbb
sbb
dec
xor
push
imull
mov
imul
lea
and
ret
js
mov
cltd
sbb
xlat
fsts
popa
bnd
adc
in
jg
add
pop
pop
push
sub
gs
insb
les
jge
dec
or
mov
or
xchg
adc
insl
mov
fisubrs
pop
xor
mov
mov
ja
mov
rcrl
lcall
pop
rol
ret
push
sahf
test
push
loopne
add
sarl
dec
les
test
cltd
push
sti
stc
mov
push
adc
lahf
jle
xchg
fsubr
xchg
dec
hlt
inc
test
sub
cltd
pushf
mov
outsl
sub
pusha
addl
and
movsl
jno
pop
aam
and
mov
enter
out
bound
clc
aad
bound
aad
push
andb
pop
das
into
fwait
aaa
inc
inc
jecxz
add
sbb
mov
jae
pop
mov
and
jle
loope
pop
cmc
or
push
stos
inc
mov
or
insb
data16
dec
pop
sbb
cmpsl
into
movd
stos
rclb
stc
flds
sbb
adc
pop
ret
or
push
jecxz
mov
into
add
dec
mov
sbb
sub
mov
mov
inc
xchg
inc
mov
push
pushf
push
fiaddl
pop
int3
sbb
mov
mov
pop
int
ret
imul
fiadds
popf
in
ljmp
or
or
data16
mov
jecxz
inc
fs
dec
jno
das
imul
adc
cmc
scas
sbb
and
popa
adc
call
scas
or
xlat
aaa
sub
add
aaa
add
dec
jg
dec
adc
shrb
jns
dec
lcall
cwtl
jmp
xchg
ja
fimuls
cmp
test
jecxz
ret
inc
iret
pop
inc
xor
push
cmp
rcr
lret
sub
fdivrp
xchg
pop
dec
or
ja
shll
pop
and
adc
lods
cmp
je
and
add
shrb
dec
imul
or
mov
pusha
jno
pop
mov
outsb
loopne
fsubl
jecxz
fcomip
dec
xchg
xchg
jno
and
inc
add
fwait
jge
push
mov
addr16
lcall
rcrl
add
push
mov
sbb
ret
gs
mov
inc
scas
sbb
inc
jo
adc
int3
sbb
adc
sahf
pushf
xor
cmp
lahf
in
or
mov
test
loopne
or
shlb
mov
push
xor
ret
push
outsl
bound
movsl
bnd
je
std
cmp
ss
lahf
add
stc
xchg
fucomp
js
js
in
cmp
sub
test
mov
adc
aas
andb
ljmp
cmc
stc
xchg
lahf
pop
xchg
pushl
xchg
adc
lret
adc
jge
add
addr16
in
out
jns
outsb
stc
lcall
jp
mov
add
lea
fdivp
je
cmp
into
sub
cmp
lret
test
mov
pop
pushf
stc
nop
push
xchg
imul
add
test
sbb
mov
cmp
aas
mov
jno
push
push
sbb
repz
push
movl
aam
xchg
negl
arpl
je
jb
movsl
je
test
pushf
push
push
clc
aad
xchg
ss
shr
rclb
sub
jl
or
jp
aas
ljmp
pop
lcall
and
mov
push
xor
loope
jne
shll
roll
adc
pop
shl
test
ret
adc
pop
pop
xchg
push
mov
pop
push
inc
or
jo
mov
sbb
movsb
mov
push
push
jbe
ss
jne
in
aas
jnp
jg
fdivrs
mov
xor
out
sbb
inc
es
pop
mov
lods
out
es
mov
adc
cmp
sub
jo
sub
insl
imul
xchg
add
pop
je
mov
lret
sarl
xlat
popf
pop
and
inc
loope
std
xor
cmp
dec
call
fidivs
fldt
sub
ret
repnz
jbe
xor
mov
pop
adcl
push
ljmp
ffree
int3
ret
xchg
ja
imulb
push
push
or
ss
out
popa
and
jle
movb
xchg
sbb
mov
xchg
mov
jg
insb
xlat
jne
adc
inc
stos
insb
xchg
jne
fstps
adc
lahf
outsl
loopne
xor
test
inc
std
pop
mov
lahf
out
popf
fwait
xor
jp
fcompl
das
xchg
adc
dec
loopne
popa
adc
lahf
fwait
inc
mov
jnp
sub
movsb
mov
fnstsw
mov
rol
clc
xlat
inc
adc
mov
mov
shl
adc
lods
pop
lea
nop
mov
push
daa
hlt
xchg
cmp
sar
xchg
popa
pop
fisubrl
aam
addr16
or
mov
push
jo
xorl
pop
data16
mov
ja
sbb
inc
insl
mov
movsl
pop
clc
mov
test
xchg
cmp
out
add
adc
push
popa
ja
loope
xor
adc
ja
fldt
pop
sub
inc
enter
sbb
jo
push
movsl
lahf
filds
jb
ljmp
inc
popa
xor
jns
dec
pusha
push
ret
out
outsl
loope
stc
jae
hlt
nop
or
les
mov
lock
movsl
xchg
call
fistps
aam
shrl
jge
fistps
push
inc
mov
or
test
sbbb
nop
in
cmc
add
cltd
or
jb
bnd
sbb
aaa
ror
loop
test
inc
lock
or
pop
iret
pop
xor
or
addb
adc
inc
dec
push
mov
nop
mov
or
jmp
sub
pop
andb
jmp
xchg
mov
fcom
shrl
xchg
scas
jb
push
repnz
out
mov
xchg
inc
add
int3
iret
clc
js
mov
inc
notb
adc
pop
test
iret
pop
or
xchg
mov
daa
test
inc
mov
mov
fwait
xor
fcmovbe
add
es
jmp
ret
inc
cwtl
iret
or
jp
gs
sbb
add
icebp
repz
cltd
pusha
loope
mov
mov
xchg
mov
sbb
lea
jg
test
mov
jno
push
cmp
mov
lcall
stos
fstl
dec
sbb
sbb
cld
outsl
data16
sub
sub
lret
cli
repnz
fdivl
push
xlat
and
sbb
popa
icebp
popf
bound
je
or
out
test
dec
scas
test
sarb
inc
stos
out
int
cli
repz
sbb
mov
add
jle
imul
fcompl
ret
pop
inc
int3
mov
ss
ds
std
add
shll
pusha
insb
mov
inc
outsb
lret
lds
movb
shlb
das
aam
in
sub
add
out
leave
lods
mov
mov
sbb
fnstsw
push
cmc
push
sub
cmp
push
ficomps
je
gs
and
fwait
xchg
sub
shll
ds
mov
adc
lods
sub
mov
insl
pop
mov
sbb
psubusw
push
das
div
jg
push
xor
push
cli
xor
divl
flds
sbb
add
out
cmpsb
or
shl
shll
dec
cmp
ds
mov
nop
nop
mov
add
adc
jbe
pop
push
insb
push
das
lds
aas
bound
push
sub
lods
pmulhw
pop
fwait
outsb
imul
xor
and
in
mov
rcrl
lea
roll
add
lret
or
ja
inc
ficoml
add
fistpl
push
and
fcmovne
out
loopne
inc
test
enter
imull
sbb
dec
cmpsl
push
fiadds
push
and
sub
pusha
or
icebp
jge
cld
jle
sub
nop
mov
mov
push
je
sbb
call
movsb
inc
jo
cmc
add
inc
or
pop
push
add
fadds
iret
inc
sub
mov
add
es
test
xchg
mov
imul
lret
inc
add
dec
adc
jne
mov
cltd
mov
sub
push
popa
orb
or
outsl
xor
in
int3
imul
mov
ret
daa
repnz
mov
push
or
arpl
test
dec
or
scas
add
dec
xor
mov
or
roll
dec
adc
adc
mov
mov
sahf
test
lahf
add
push
fld1
sub
cmp
mov
jo
push
out
adcl
dec
sub
outsb
aas
insb
pop
leave
adc
sub
push
mov
insb
push
loop
out
mov
mov
mov
ftst
cmp
cmp
pop
or
imul
cwtl
jns
push
nop
rol
fnsave
fisttpll
add
jno
xchg
bound
ds
bound
push
inc
mov
push
pop
mov
movsl
mov
aam
jl
cmp
lock
lcall
test
std
adc
mov
bound
pop
inc
pusha
lods
std
cmc
pop
iret
pop
ljmp
cmp
out
fcomps
fs
push
lcall
jne
cltd
push
mov
jge
sub
dec
inc
fdivl
and
les
push
inc
add
xor
fs
pop
std
inc
clc
les
cmp
sub
daa
out
mov
leave
shlb
pop
aad
adc
fnstcw
add
rcrb
adc
pop
mov
shll
dec
cmp
dec
sub
leave
aam
pushf
mov
add
mov
cmp
mov
dec
mov
push
loopne
jno
inc
sub
dec
mov
aaa
mov
shrl
cmp
fs
adc
in
push
cmp
mov
sbb
jne
sub
pop
mov
test
pop
std
push
rcrl
dec
mov
dec
lods
outsb
jp
xor
dec
cmpsb
fcmovnb
push
jbe
out
or
cmp
std
ljmp
fldenv
popa
mull
loop
push
xchg
gs
jno
push
inc
subl
ss
dec
lods
fwait
inc
int
jnp
jge
pop
in
pop
jb
ffree
ss
aas
mov
mov
aas
or
push
imul
jge
xchg
popf
jno
inc
mov
leave
sub
data16
push
pop
aaa
inc
cmpsl
sbbb
inc
sti
jl
nop
scas
decb
addr16
jno
add
adc
ret
pop
mov
push
leave
orb
xor
fdiv
mov
frstor
ja
adc
inc
xchg
repnz
nop
clc
xor
push
rol
addb
data16
sahf
sub
xlat
adc
dec
cwtl
mov
pop
xchg
call
sahf
xchg
cmpl
lret
mov
lret
inc
and
jl
call
push
sbb
pop
or
loop
shll
add
lret
push
shlb
pop
ret
cld
push
sbb
jmp
mov
mov
mov
lea
sbb
psubq
out
jmp
push
sub
out
adc
imul
aam
cmp
inc
push
ja
sbb
fisttpl
mov
pop
inc
data16
lods
ficomps
lods
mov
push
enter
adc
daa
pop
sbb
adc
clc
add
xchg
push
xchg
mov
std
mov
aam
test
popf
aaa
clflush
aad
fsub
mov
and
jmp
in
popa
pop
jmp
aam
mov
sbb
push
and
xchg
out
aaa
push
imul
mov
sbb
fdivrl
sbb
pop
mov
jne
xor
xchg
outsb
daa
cs
out
and
es
int3
mov
ljmp
pop
jle
ret
xor
scas
push
clc
sub
pop
jge
leave
shrb
repnz
icebp
sub
stos
mov
fwait
movsl
inc
sub
outsb
jae
xchg
xor
fiaddl
inc
mov
stos
add
push
cmp
inc
mov
int3
dec
or
inc
shl
sbb
shl
xchg
out
mov
add
jbe
test
je
jae
cs
or
jp
or
push
dec
lcall
pushf
add
xchg
xchg
inc
movsb
lahf
jae
mov
sbb
divl
or
xlat
popa
sti
xchg
cltd
sub
mov
jbe
nop
inc
into
xchg
data16
pop
cmpsb
into
or
fdiv
mov
leave
mov
mov
inc
push
mov
insb
jo
outsb
xchg
in
mov
pop
mov
add
stc
cmp
into
jg
adc
jmp
inc
sub
fadd
sbb
roll
jnp
test
movsl
hlt
cmp
mov
mov
xchg
test
push
pop
dec
cs
stos
xchg
int3
fcomip
cs
jecxz
sbb
lods
je
mov
cmp
daa
sub
rorb
aas
xlat
mov
push
push
jecxz
out
add
jno
mov
add
pop
push
call
shll
rorl
cli
popa
test
icebp
sbb
mov
push
jb
jnp
icebp
push
pop
add
mov
xchg
cmp
lds
je
push
out
shrl
sub
mov
fsubl
lods
jle
cmp
repnz
pop
addr16
mov
inc
cwtl
adc
push
int3
cli
ljmp
nop
out
jo
jl
ja
cld
daa
ret
test
pop
test
sub
mov
dec
lahf
outsb
xor
xchg
outsl
imul
lahf
cmp
mov
addr16
mov
push
sbb
inc
jnp
repz
dec
dec
or
into
inc
push
add
ljmp
jb
pop
dec
insl
scas
xchg
add
pusha
dec
mov
mov
cmp
ljmp
xchg
xchg
aam
test
push
xor
push
sbb
fisubrs
and
rclb
push
push
nop
or
popa
orb
jb
dec
aad
mov
lods
loop
orl
and
cmpsl
pop
in
sahf
mov
mov
and
sub
loop
push
cmpsb
ljmp
aad
mov
pusha
pop
addr16
mov
fstpt
mov
mov
ljmp
fistpll
repnz
incb
dec
lea
testl
in
xchg
sub
in
ret
bound
pop
fs
push
adc
xchg
cli
loop
neg
stos
xchg
mov
movsl
mov
xchg
jge
lds
xchg
call
inc
xor
pop
push
shll
pop
push
in
pop
test
or
mov
lea
lods
mov
pusha
push
xor
xchg
stos
das
adc
int3
jns
push
dec
std
sbb
daa
lock
dec
mov
dec
or
push
pop
mov
cmpsb
push
in
lret
mov
fiadds
icebp
fimull
negl
adc
scas
sub
outsl
cmp
test
imul
mov
gs
test
test
xlat
inc
sbb
inc
xor
pop
add
int3
pop
lods
push
mov
pushf
xchg
xchg
nop
jb
xchg
in
mov
mov
aaa
push
inc
pop
push
ds
fwait
movsb
lret
sti
push
xlat
pop
jmp
mov
popa
or
lock
cmpsb
jl
inc
mov
xor
imul
push
and
int
mov
clc
adc
sub
mov
rcll
sbb
ds
rcrb
add
loopne
jecxz
jno
rolb
cmpsb
imul
ret
repnz
sub
push
pop
mov
aam
clc
inc
pop
pop
test
mov
out
in
cmp
outsl
sahf
ja
jg
out
shrb
xor
sbb
push
push
pushf
aad
jle
out
jle
sub
stc
cmp
xchg
push
mov
stos
gs
loopne
push
les
imul
push
xor
fwait
ret
mov
sub
movsl
lock
cli
rol
push
push
mov
insl
jmp
lcall
in
cmp
xchg
and
sub
aas
imul
insl
push
fldenv
and
js
fwait
aad
test
gs
stc
mov
movsl
mov
jg
or
and
enter
enter
inc
arpl
push
ror
cmp
fstl
jae
adc
sbb
fidivrs
xchg
sbb
popa
lods
or
add
and
and
sub
xchg
mov
add
pop
mov
cltd
ja
xorb
mov
nop
negb
adc
mov
fisubs
test
pop
inc
dec
sbb
out
pop
add
sub
pop
int3
test
xchg
stc
sub
cs
inc
pop
cltd
cli
das
pushf
cld
adc
aas
sbb
jle
adc
in
inc
mov
xchg
cmp
cmc
xor
xchg
aas
hlt
ret
scas
adc
sub
lds
xchg
out
or
jo
rclb
mov
and
cmp
sub
sbb
mov
sti
mov
push
movsb
fiaddl
loope
mov
push
aad
test
stos
hlt
out
dec
les
shlb
scas
pop
pop
mov
cmp
pop
push
gs
jns
jbe
roll
in
leave
cmp
in
stc
cmp
rcl
mov
xchg
fisubrs
mov
fistl
sbb
lods
ret
dec
sbb
lods
movsb
mov
or
sar
xor
mov
xchg
push
je
mov
sbb
inc
xchg
xadd
mov
jb
adc
je
dec
ret
out
xor
jle
push
pushf
test
popa
or
dec
cmp
clc
test
mov
or
shl
hlt
push
subl
push
xchg
decb
scas
push
xchg
dec
leave
xchg
stc
xchg
fstpt
jg
ret
cmpsb
mov
or
sub
cmp
adcl
xchg
cmp
xchg
cmp
fiaddl
xchg
jg
xor
outsb
xchg
nop
outsb
xor
xor
push
imul
sbb
pop
rolb
dec
push
mov
inc
out
inc
push
in
cmp
roll
call
sbb
inc
pop
cwtl
lcall
fldt
aaa
mov
fcmovb
test
add
das
stc
in
inc
inc
cs
push
adc
scas
not
push
sbb
jae
mov
xchg
lds
or
xor
mov
xchg
into
cmp
lcall
mov
aam
cltd
cld
les
test
lea
les
ret
pop
test
sub
rcrl
fldcw
add
push
sbb
jbe
cld
lods
xchg
mov
adc
jbe
jae
xchg
idivl
cmp
popa
jecxz
negb
sbb
adc
mulb
mov
lea
and
je
push
or
sarl
mov
lds
inc
push
ficompl
sbbb
gs
leave
or
push
xlat
andb
adc
scas
mov
inc
lcall
sbbb
sti
cmc
les
outsl
int
js
aas
jge
leave
xchg
mov
das
jbe
push
jnp
push
lret
sub
addr16
cmp
imul
push
sub
lahf
aad
mov
cltd
xorl
dec
mov
adc
mov
adc
push
sti
mov
push
pop
sbb
cltd
addr16
mov
sbb
mov
rcrl
cmpsl
push
cmpsb
mov
lods
push
xchg
add
inc
pop
jno
or
add
les
nop
int
inc
lods
add
into
hlt
out
test
mov
or
and
push
jno
jp
jo
inc
das
pop
sbb
cli
push
insl
dec
push
call
adc
test
insl
jmp
mov
in
jne
add
repz
ja
mov
jae
push
aad
jle
stos
fisubrs
pusha
or
shrl
inc
sub
xor
cld
scas
int3
cmpsl
inc
push
push
imul
push
adc
cmp
popf
stc
xor
jge
cmpb
pop
mov
cli
lods
lcall
in
add
add
adc
stos
orb
push
dec
aad
out
jae
hlt
and
scas
mov
add
inc
mov
pop
and
inc
jp
adc
and
sub
xor
mov
out
mov
movsl
loopne
mov
insb
jge
popf
mov
jp,pt
ret
add
pop
orb
push
enter
scas
or
cmpsb
mov
pop
ja
jg
loop
xchg
lock
push
adc
pop
bound
out
and
cmpsl
imul
xor
dec
push
test
or
jle
and
icebp
in
fnsave
cmpsb
pop
xchg
adcl
fiadds
aaa
inc
insl
es
cwtl
addl
mov
xchg
cwtl
int3
int
movsb
sub
inc
negb
idivl
mov
movhlps
mov
out
xchg
repnz
and
cmp
jg
xchg
sub
xor
repnz
cld
lods
adc
sahf
dec
gs
dec
insb
ficoms
cmp
xchg
push
rcr
mov
fstpt
sbb
add
mov
popa
mov
add
and
xchg
xchg
jb
jg
imul
sub
add
push
mov
cmc
or
stos
sub
rorl
sbb
cltd
xor
rorb
dec
icebp
add
mov
cmp
rcrb
idivb
cmpsl
fisubrs
test
loop
mov
lret
pop
fmulp
mov
and
mov
pusha
pop
mov
daa
push
inc
mov
xchg
in
add
fmuls
mov
mov
hlt
xchg
jae
in
clc
add
jmp
aas
inc
jae
mov
lahf
mov
fidivrl
push
lret
xchg
out
xlat
adc
and
or
pusha
pusha
int3
iret
mov
ret
fs
lret
or
pusha
sub
roll
loope
add
lods
aam
pusha
jns
fisubs
pop
dec
xor
ljmp
cli
ret
push
sbb
inc
rcrl
repz
mov
pushf
inc
and
das
xchg
lock
lock
lods
mov
data16
dec
jb
adc
inc
and
inc
outsb
cmp
push
mov
sub
mov
cltd
sbb
ja
pop
cmp
dec
inc
jmp
dec
fdiv
or
and
mov
movsl
sahf
das
fldcw
jb
test
xor
and
jb
pop
lcall
inc
sbb
sar
outsb
in
inc
out
adc
jg
xchg
pop
jp
into
clc
rcrl
insb
arpl
push
out
jmp
add
inc
lods
xor
mov
and
scas
jp
add
jp
mov
fiaddl
jae
mov
out
cltd
in
mov
cmp
mov
jge
add
repz
push
test
cli
in
mov
hlt
es
sbb
test
scas
hlt
flds
ljmp
xchg
fwait
xchg
pop
testb
test
push
je
cmp
mov
inc
sbb
call
mov
xor
loop
xchg
gs
add
inc
aad
sub
ss
scas
ljmp
test
icebp
push
mov
inc
les
xchg
daa
in
push
sbb
leave
sub
mov
inc
sbb
pushf
out
jb
dec
sti
loope
lock
test
fwait
dec
inc
inc
adc
jbe
in
xor
dec
mov
mov
adc
fidivrl
lret
mov
or
mulb
cli
jbe
mul
push
and
lock
dec
or
shrl
fistpll
icebp
adc
repz
push
lcall
mov
dec
pop
mov
outsl
cs
ror
cmp
sub
dec
test
mov
jae
dec
xor
jbe
jne
sub
test
mov
push
jecxz
and
cli
scas
cli
jae
cmp
mov
adc
xchg
out
out
push
mov
mov
sbb
push
xor
mov
add
push
jg
in
mov
sbb
push
and
fiadds
xchg
fcmovnbe
pusha
mov
std
cli
out
inc
push
daa
pop
xor
dec
mov
sub
je
data16
gs
xchg
ds
inc
sti
xor
adc
adc
fwait
push
xchg
das
cmp
push
sti
jo
addb
in
push
mov
mov
subb
push
pop
mov
mov
sbb
dec
loope
dec
and
lods
insb
gs
inc
shll
call
sub
pusha
addr16
cli
xchg
fisubl
iret
roll
leave
pop
cmp
std
inc
and
test
and
adc
pop
push
imul
jp
and
push
mov
mov
lods
fstpt
mov
ja
adc
push
sub
pop
stos
jle
enter
mov
cmp
push
shll
push
mov
stos
stos
xchg
cmpsb
gs
xor
test
dec
mov
or
addr16
out
jo
addr16
imul
sbb
fcmovnu
pushf
or
xchg
int
push
addl
hlt
popl
mov
mov
mov
fxch
pop
lds
and
loopne
jns
jp
cmp
dec
into
mov
dec
mov
shl
dec
sbb
push
xchg
loop
rclb
in
jns
repz
outsb
sub
aad
sbb
repnz
aas
mov
dec
or
sub
lods
mov
jle
mov
sub
sbb
jp
lret
push
pop
shl
sbb
aaa
add
aaa
push
mov
es
in
mov
jbe
push
or
repz
loopne
rcl
dec
lds
shll
mov
ficoml
xchg
jmp
mov
pop
loope
lds
jg
mov
fadds
mov
rorl
ffreep
in
mov
push
xchg
xorb
mov
mov
insb
xchg
mov
jle
dec
mov
in
shlb
mov
mull
icebp
add
mov
push
dec
cmp
scas
lods
rorl
jge
ss
adc
aam
loop
cmp
divb
clc
imul
xor
rcrb
xor
insb
mov
inc
fwait
fwait
dec
and
ficompl
push
test
out
sub
mov
bnd
push
call
or
aas
out
loop
cltd
leave
rorl
pushf
stos
aas
stos
lret
cmp
jmp
or
cmp
sbb
insl
call
xchg
sbbl
mov
mov
cld
or
xchg
push
jae
cmp
lcall
lock
xchg
roll
popl
pop
jl
sbb
pop
pop
popa
xor
shrl
ljmp
cwtl
mov
shr
shll
pop
pop
mov
fwait
test
stc
xchg
out
nop
pop
lsl
repz
sahf
iret
fs
out
pop
push
pop
nop
xchg
test
pop
iret
call
sbb
movsl
stos
jo
xchg
es
fsub
jge
mov
xchg
pop
lret
cld
xchg
xchg
shlb
mov
das
inc
dec
push
stos
arpl
and
sub
sub
xchg
sub
mov
xchg
cmp
int
mov
fdivs
adc
mov
and
pop
and
inc
jmp
popa
push
cmp
pop
pop
sbb
cli
push
fistpll
in
xor
loop
mov
mov
das
shll
sub
test
or
inc
bnd
or
push
jne
fmull
mov
fildll
icebp
int3
lock
xchg
dec
fwait
xchg
push
push
add
call
inc
sbb
ljmp
jle
es
push
dec
push
adc
push
or
xchg
jno
ficompl
movsb
shr
jg
test
add
shll
adc
dec
add
mov
aad
jg
les
mov
iret
mov
sti
dec
dec
adc
pop
and
cmpsl
xchg
or
push
rcl
les
xchg
test
lock
pop
or
jl
leave
add
enter
xor
mov
andb
and
cmp
iret
fbstp
sbb
js
jne
jmp
adc
mov
mov
pop
out
outsb
jno
pusha
xlat
lods
adc
fs
push
mov
jg
ret
mov
add
adc
aas
mov
cmc
leave
xchg
sbb
mov
dec
sarl
push
mov
jne
push
sbb
dec
cmp
imul
out
cmp
mov
mov
jno
cmp
or
movsl
les
jl
std
fs
xchg
out
adc
pop
ljmp
add
cmp
mov
int3
xchg
test
decb
call
and
cmp
jl
xlat
scas
iret
hlt
pop
sahf
rol
jnp
inc
rorb
mov
std
icebp
cmp
imul
push
mov
pop
or
aad
pop
push
cmp
push
and
in
or
pop
xchg
xlat
sbb
cmp
call
rol
stc
leave
lret
cli
mov
popl
inc
out
pusha
jge,pt
dec
dec
pop
xchg
push
sahf
mov
and
add
sub
dec
into
dec
add
xor
rcrb
and
iret
inc
add
decb
je
arpl
test
or
xorb
mov
xchg
dec
hlt
lods
jp
mov
sar
fs
lea
jg
fs
lods
or
sub
leave
fwait
clc
dec
fistps
sub
cmp
jnp
sarl
dec
jno
jg
mov
std
js
dec
cmp
add
call
jo
xchg
xchg
lcall
mov
jg
sbb
nop
maxps
dec
daa
imul
adc
or
out
or
nop
scas
scas
je
sbb
aad
xlat
in
and
sbb
and
jge
cmpsb
sub
jnp
jbe
add
xchg
push
divl
inc
mov
pop
pop
mov
lret
xor
inc
cmp
dec
into
xorl
stos
pop
movsl
xchg
mov
cmpsl
push
bound
ficomps
scas
movsb
cltd
fwait
mov
in
push
or
dec
lds
pop
jle
add
dec
fdivrs
cwtl
or
and
dec
mov
pop
nop
inc
incb
rol
push
sbb
adc
in
cmpsl
mov
rorl
push
add
rcll
gs
and
sub
adc
and
in
mov
cmp
pop
sub
cmovo
jb
push
push
and
pop
xchg
je
aaa
sbb
pop
xor
adc
insb
pop
xchg
movsl
push
in
fwait
or
push
lahf
in
mov
dec
fdivl
or
pop
sarl
add
rorl
mov
mov
negb
or
pop
push
bound
sub
pop
xchg
lcall
mov
loop
imul
cs
jnp
mov
and
movsb
fcmovnb
sbb
cmp
push
bnd
dec
out
dec
mov
or
sbb
and
jl
inc
jmp
sbb
outsb
andl
push
and
pop
mov
push
fstps
or
and
imul
xor
hlt
outsl
setbe
mov
cmpsb
xor
sbb
aaa
inc
sub
or
adc
mov
xor
je
test
push
mov
add
fiadds
push
and
subl
lea
jl
mov
gs
add
sub
shlb
inc
mov
aad
mov
loope
movsb
dec
divb
fwait
adc
fstl
xchg
daa
bswap
into
inc
movsl
jmp
out
sarb
xchg
mov
sahf
and
sbbb
add
mov
pop
fwait
adc
jo
lcall
adcb
loope
inc
les
popf
lahf
push
nop
ret
jmp
mov
mov
cmp
xor
jg
and
mov
inc
xor
je
xor
test
pusha
push
jo
push
cmp
lods
xor
jl
inc
or
fldt
dec
xlat
mov
iret
outsb
cmc
jae
sub
in
or
not
out
negb
ja
outsb
popf
imull
xchg
dec
or
pop
mov
push
or
sbb
jns
inc
mov
or
iret
push
out
dec
aaa
sahf
sbb
jbe
ret
cmp
pop
loope
xchg
xor
dec
andl
and
aad
outsb
pusha
ficoml
lret
inc
jg,pn
jge
xchg
push
mov
push
lret
aaa
jns
out
mov
pop
mov
lock
mov
xchg
mov
pop
int
cwtl
or
cmpsl
inc
pop
sub
add
add
fcoml
sbb
dec
pushf
push
out
pusha
pop
or
push
inc
and
lahf
xor
scas
push
cwtl
popa
sbb
push
inc
sbb
adc
add
out
in
push
jmp
pop
dec
fcmovbe
mov
das
xchg
adc
clc
jno
movsb
xchg
je
inc
sub
cltd
aam
mov
cltd
imul
mov
lret
ljmp
lock
inc
lahf
mov
rorl
pop
sahf
sub
lret
lcall
sti
mov
pop
and
jae
pusha
repnz
ret
jle
or
jge
xchg
leave
add
and
jecxz
stos
shll
iret
mov
insb
in
jg
or
out
sub
data16
divb
and
jb
adc
dec
mov
and
je
fcoml
adc
mov
hlt
fadds
sahf
in
scas
adcl
push
push
jne
push
or
pop
cli
jp
jmp
test
ret
arpl
aas
add
ja
jmp
dec
addb
movl
jp
mov
shrb
leave
enter
cwtl
andl
ja
pop
cltd
and
scas
scas
aas
push
inc
dec
sbb
in
mov
xchg
addr16
rolb
test
test
push
push
mov
adc
arpl
mov
jecxz
pop
lock
je
add
push
pop
or
xor
iret
enter
dec
in
sarl
cmpsl
xor
mov
lahf
addr16
loope
in
xorl
xchg
cmp
cmpsl
jmp
addb
int
sub
jle
mov
dec
lods
jo
cltd
inc
xor
nop
mov
ja
leave
and
cmp
dec
mov
shr
cmp
vorps
add
repz
xchg
ret
hlt
push
std
mov
fwait
cmovle
xchg
jb
pop
gs
mov
icebp
call
dec
cltd
xchg
xlat
popf
in
pushf
cltd
loope
push
lds
test
repnz
and
or
sbb
aaa
in
pop
add
mov
xchg
sub
jmp
mov
shl
adc
movsb
push
mov
lods
xlat
out
into
mov
imul
fcompl
rcrb
sub
hlt
cmp
xchg
add
insl
fldcw
imul
sti
orb
dec
pusha
push
outsl
fisttpll
sbb
out
pop
js
or
fistpll
xor
test
mov
xchg
fcmovbe
mov
fnsave
jne
lods
ss
lret
ljmp
and
lods
clc
stos
jns
dec
mov
and
nop
pop
jp
cmp
xchg
repz
xor
pop
aad
xchg
lock
push
xor
addl
insb
rclb
vpsadbw
pop
mov
lcall
jno
mov
jecxz
into
jae
popf
push
push
fs
rcrb
repnz
cmpsb
test
hlt
test
int3
loopne
femms
fisubl
dec
icebp
je
leave
pop
shll
push
push
in
jge
adc
pop
nop
outsl
frstor
or
movsl
jl
lcall
lret
dec
push
cmp
xor
cwtl
cmp
ret
in
sahf
lahf
shll
sbb
mov
out
mov
mov
es
inc
and
push
cmovnp
rcrl
or
push
arpl
enter
adc
sub
push
lcall
rolb
vpsllw
pop
pop
sub
rcrl
and
std
faddl
mov
out
push
sti
sub
cmp
lahf
xor
pusha
xor
cmp
cmp
mov
pushf
cmp
cmp
cmpsb
shl
cmp
lods
mov
test
dec
cli
ljmp
and
mov
inc
inc
mov
push
rclb
lods
aad
mov
scas
mov
push
cmp
nop
push
jo
in
or
and
lret
and
ja
int3
cltd
icebp
pop
xor
sub
inc
stos
clc
add
jl
pop
outsb
sbb
cs
jmp
in
xor
ja
movsb
xchg
mov
add
std
add
ss
or
lea
jnp
ja
in
inc
mov
aas
inc
pminsw
add
or
push
aam
sbb
sub
xor
ret
adc
pop
insb
cmp
lahf
push
inc
cmpsl
clc
dec
and
pop
mov
sub
sarl
push
xchg
cwtl
loop
cmpsl
imul
sbb
daa
out
xchg
dec
mov
pusha
pop
xchg
sbb
push
dec
or
mov
stos
cmpsl
mov
push
aas
jb
dec
adc
jl
xchg
adc
scas
arpl
sub
pop
inc
jle,pt
in
sbb
js
and
mov
lods
outsb
in
add
jp
adc
adc
mov
adcb
add
mov
xor
aas
mov
adc
sbb
lock
fxch
sbb
jl
add
test
and
mov
sahf
xor
or
movsl
clc
jo
sbb
fsubrs
jecxz
xor
cmp
sarb
in
mov
cmp
aas
inc
lods
push
aad
push
ja
outsl
dec
lea
gs
out
or
jae
pop
sub
push
stos
sbb
insb
adc
push
mov
repnz
out
ss
sbb
push
mov
mov
dec
jo
cmp
imul
mov
mov
mov
xchg
inc
inc
mov
lahf
xchg
sbb
mov
inc
push
mov
insl
mov
ret
cltd
cmp
lods
inc
sbb
ret
std
js
rcll
sub
cmp
movsb
push
fstpl
adc
int3
pop
mov
fdivs
xor
sbb
push
jle
xchg
push
out
nop
sbb
xchg
out
stos
sbb
test
cld
aam
cmpsb
stos
data16
push
cmp
adc
ret
das
iret
cmpb
les
movl
jns
mov
mov
fisubrs
roll
add
testb
ja
mov
outsl
orb
fldl
sti
mov
inc
mov
sub
xchg
pop
jge
add
dec
les
xchg
test
out
call
cmpsl
idivb
outsb
dec
aad
pop
inc
pop
pop
in
movsb
les
dec
push
add
mov
mov
jbe
lods
cmp
int
clc
faddl
cmpsb
or
loopne
loope
jnp
jo
dec
pop
xor
aam
or
xor
pop
mov
mov
mov
push
imul
fiaddl
mov
sub
bound
jb
adc
adc
xchg
jle
gs
mov
cmc
push
mov
test
shll
mov
stc
scas
inc
ds
insl
arpl
sbb
cmp
sar
xchg
ret
jo
dec
test
bound
pop
mov
jbe
sub
mov
xor
insb
cmp
and
jne
xlat
fucomip
or
xor
push
into
sbb
xchg
jle
insl
out
sbb
cwtl
fisubl
pop
int
xor
push
int
les
cmp
sub
mov
fwait
std
and
adc
shl
jnp
mov
dec
ss
addr16
push
push
dec
shrl
pop
pop
add
sub
xor
jne
push
mov
in
dec
sbb
mov
xor
push
jecxz
mov
xorl
fldt
cltd
mov
jbe
aad
jae
mov
mov
pop
and
pop
jb
repz
dec
inc
ds
cmp
cltd
cmp
pusha
dec
xor
cmc
ja
pop
imull
lods
push
dec
pop
inc
fildl
mov
pushf
adc
xchg
mov
and
xor
sub
fsubs
insl
rcll
nop
dec
fs
push
xor
movsb
imul
mov
or
leave
cmp
add
arpl
sbb
xlat
loop
jbe
sahf
daa
push
enter
xor
movsb
imul
mov
pusha
dec
data16
lock
jo
adc
add
jecxz
enter
dec
cli
lea
cltd
bound
push
je
int3
inc
sarb
dec
test
push
or
and
pop
push
out
popl
sbb
mov
xchg
mov
adc
mov
clc
repz
push
mov
fiaddl
inc
ficompl
notb
addr16
push
pop
js
aas
mov
mov
push
mov
movsl
sbb
mov
or
les
adc
mov
and
lods
sarb
xchg
or
and
push
sub
fcoml
rolb
les
scas
or
xor
xor
inc
inc
adcb
push
loop
push
aam
pop
sub
add
sub
xchg
or
imul
ljmp
roll
fwait
mov
or
xchg
jnp
sub
xchg
fwait
stos
push
clc
je
test
mov
mov
push
shrb
jecxz
mulb
fisttpll
dec
dec
cmpsb
cs
rcrb
push
sbb
icebp
repnz
mul
fnsave
popf
aad
jmp
pop
mov
negb
lock
pop
shl
mov
mov
cmp
aaa
dec
push
addb
cmp
xlat
adc
xchg
movsl
dec
shll
jno
sbb
jns
xchg
out
jp
mov
cld
or
adc
out
mov
orl
jl
insb
mov
fcomps
cmp
int3
stc
xchg
mov
xor
mov
mov
jle
and
stc
pusha
pushf
xor
jne
add
icebp
pop
lds
fisttpl
repnz
or
xorb
push
sbb
sub
cmpsl
outsl
xchg
cli
insl
hlt
lretw
mov
idiv
insl
and
andl
js
sbb
je
add
in
xchg
fisubl
jbe
bound
or
into
bound
hlt
lods
popf
jnp
inc
stos
stc
xor
ja
dec
cmp
lods
inc
fdivrs
mov
sbb
aas
sub
and
stos
or
or
inc
mov
cwtl
rolb
jge
adc
lods
icebp
stos
dec
call
dec
sub
pop
inc
sbb
jle
dec
pop
add
xlat
inc
lock
cmc
dec
cltd
iret
mov
icebp
mov
cmpsb
stos
rcrl
test
test
xchg
test
cmpsb
lcall
mov
add
dec
out
test
or
jns
xchg
fimuls
sub
test
xlat
jg
pop
in
mov
in
jo
push
stos
sbb
add
repz
push
jmp
sahf
dec
jmp
cld
lock
mov
dec
pop
dec
and
and
sub
dec
lcall
rolb
shll
mov
mov
cmc
inc
fcomps
xchg
and
ret
lea
adc
and
inc
or
dec
inc
lcall
cs
clc
pushf
sub
jp
jne
and
in
jbe
cwtl
stos
jecxz
jo
jae
fldl
test
ljmp
repnz
cmp
test
lret
fcomps
sahf
cmp
test
lock
pop
maxps
pop
std
cli
mov
jl
sub
in
popl
loopne
sarl
repz
rcl
adc
popl
push
sub
inc
movsl
sbb
mov
sar
outsl
jbe
pop
pushf
and
cltd
and
test
xorl
sub
mov
popa
iret
inc
cmp
outsb
shrb
xchg
dec
mov
cwtl
dec
and
cmp
jle
pop
inc
test
cld
jg
shll
xor
sub
data16
enter
lods
cmp
rcll
jge
in
negl
cmp
adc
ss
dec
pop
fwait
mov
orb
das
inc
mov
pcmpgtb
push
and
mov
jb
fs
fs
inc
fprem1
ffree
jb
lret
in
jb
jnp
pop
add
addb
pop
push
into
mov
inc
hlt
xor
and
ret
sub
loopne
shl
es
fisubs
pop
xor
ljmp
push
or
dec
and
fwait
add
cmp
and
fildll
mov
pop
mov
xor
mov
movsb
cmp
xchg
jne
jg
mov
sbb
xor
fsubl
repnz
f2xm1
icebp
sbb
cmp
in
or
jae
aad
add
and
cmp
rorb
ja
add
pop
test
fmull
and
push
dec
jne
sub
cwtl
jmp
push
inc
ficompl
adc
and
fisttps
imul
ja
push
pop
pop
sub
dec
mov
lods
repnz
mov
and
pop
andl
push
decl
mov
push
mov
xorb
aas
cmp
push
sub
adc
push
stos
inc
ret
mov
pusha
sbb
or
mov
loopne
movsb
mov
and
cs
loopne
iret
adc
icebp
mov
sub
mov
fsubrs
mov
aam
daa
push
add
call
sbb
jmp
inc
mov
test
cwtl
pusha
out
dec
xchg
sub
daa
jg
les
shll
push
cwtl
enter
add
in
rcrl
shrb
fs
fbld
cmc
sub
push
adc
cli
adc
xchg
push
sbb
lods
mov
sub
std
gs
mov
xchg
testl
popf
sahf
and
outsl
lods
fbld
and
sub
stc
xlat
es
aaa
push
rorb
xor
test
push
mov
mov
sbb
divb
adc
fiaddl
inc
out
push
mov
sbb
fsubs
xchg
xchg
sub
inc
xorb
outsl
push
fstpt
inc
and
cmp
dec
in
mov
call
inc
sbb
nop
pop
push
addb
and
add
or
lahf
lea
loop
inc
arpl
adc
es
sub
sbb
ds
out
ds
mov
push
imul
xor
iret
fwait
dec
daa
xchg
xchg
sbb
sub
mov
jle
ret
dec
das
xchg
rcrb
jne
cmp
addl
fbld
add
xchg
nop
xor
adc
dec
rcr
inc
aaa
sbb
mov
xchg
pop
xchg
fcomps
out
or
aaa
addr16
cmp
jmp
mov
ret
std
test
xchg
xchg
mov
inc
popf
ljmp
add
dec
outsb
repnz
or
inc
lret
xchg
add
sbb
xor
in
out
das
sub
dec
adc
pop
push
shrb
or
pop
mov
sub
mov
cmc
sbb
sub
outsl
cli
mov
lds
mov
adc
ljmp
imul
cmpsl
mov
mov
or
inc
xor
leave
ret
pop
xchg
mov
sub
xchg
mov
scas
imul
pop
push
enter
lret
mov
cltd
jecxz
enter
pushf
sti
jmp
jbe
enter
movsb
aaa
mov
cli
jle
lahf
mov
insl
mov
out
outsl
inc
adc
cmp
outsl
ficompl
test
sbb
fmulp
mov
cmc
bound
sbb
jle
cmp
jae
adc
icebp
cmpsb
testb
movd
in
push
repz
xchg
push
push
in
and
es
ret
rcrb
push
pushf
loopne
mov
sar
lods
shl
mov
add
xlat
testl
leave
xchg
lcall
shlb
adc
cmc
bnd
shrl
push
rolb
pop
in
mov
cmp
ds
inc
sub
cmp
popa
clc
pushl
xchg
push
movsb
loope
icebp
aam
push
xchg
lds
cmp
sub
cmp
mov
mov
mov
out
jmp
bound
lcall
das
scas
bound
push
test
sbb
shll
rcll
ss
call
mov
push
push
bound
jbe
test
cltd
sub
mov
pop
sub
push
sbb
inc
mov
sub
xchg
jo
add
jno
lods
pop
xchg
pop
pop
mov
mov
push
inc
out
out
jle
jno
stc
in
mov
pop
sub
cmp
add
fnstsw
pop
ja
stc
pop
outsb
inc
stos
in
push
mov
pop
in
xchg
cmp
fs
mov
rolb
mov
negb
cmp
or
aaa
adc
pop
pop
test
xchg
sbb
test
out
fwait
xchg
pop
sbb
leave
jg
aam
fadd
add
rsm
xor
mov
cmp
fdivr
adc
or
inc
leave
sub
pop
lret
adc
fistpll
lock
call
mov
icebp
data16
and
aad
popf
and
cmpsb
and
and
iret
sbb
js
inc
psllw
in
mov
pop
daa
add
mov
loopne
icebp
test
and
push
or
arpl
sbb
jp
or
add
inc
xor
xor
inc
pop
loope
or
and
dec
inc
mov
mov
faddp
dec
sbbb
rcll
stc
leave
sub
pop
leave
sbb
imul
and
adc
mov
jb
inc
out
cmp
das
pop
lock
aaa
cmp
imul
mov
mov
mov
adc
lret
addr16
jge
cmp
or
into
lcall
cmp
fstps
cmp
enter
xchg
aas
xchg
cmp
xchg
mov
ds
sbb
adcl
shrb
repz
loope
mov
movsb
inc
dec
pop
add
mov
call
and
lock
pop
mov
ret
jb
add
add
cmc
or
push
repz
imul
idivb
jg
adc
inc
enter
and
mov
cmp
dec
mov
sbb
test
cmp
xor
push
mov
add
sbb
insl
pushl
int
shll
adc
out
dec
mov
fcmovb
dec
push
mov
inc
xchg
stc
or
inc
ljmp
jl
shlb
cmp
or
mov
cmp
cli
repz
push
jbe
js
bound
movsb
je
xchg
insl
mov
mov
mov
cltd
cld
cwtl
push
and
dec
fsubp
pop
mov
aad
xchg
imul
aad
cmp
fld
je
sbb
shrb
ss
mov
xor
xlat
icebp
xor
into
and
call
xor
mov
ljmp
inc
sub
and
sub
mov
push
jns,pn
inc
pop
gs
xlat
cwtl
idivl
sub
imul
shll
mov
nop
xchg
scas
sbb
xlat
or
sahf
jg
mov
pop
jecxz
ja
fs
push
push
inc
mov
xchg
jl
inc
adc
in
mov
and
mov
fsubrs
xchg
test
xchg
ljmp
in
push
fcoms
movsl
pop
push
jae
lahf
or
jp
jae
adc
inc
add
mov
adc
cmc
repnz
pop
icebp
in
stc
add
inc
dec
jbe
adc
pusha
outsb
das
inc
push
jae
jne
sbb
push
and
lahf
mov
push
xor
cmp
sahf
mov
pop
lods
xlat
out
testb
cs
popf
arpl
or
insb
xchg
int3
add
pushf
dec
test
call
push
test
jne
sbb
mov
out
dec
add
cmp
xchg
ja
scas
jmp
sbb
push
sbb
hlt
mov
mov
push
stos
hlt
inc
cmp
cmpb
rolb
inc
cmp
sub
mov
aam
fnstenv
pop
out
rcll
dec
cmp
mov
outsb
in
mov
inc
call
jmp
xchg
lsl
push
fistpll
cmp
lea
mov
lods
orb
mov
mov
mov
fsubrs
aam
cmp
cmc
pusha
and
outsl
scas
mov
ds
pop
mov
mov
and
push
rcrl
popl
or
aas
stos
sahf
add
push
insl
sahf
jnp
cmc
cmpsl
add
bound
jae
loope
aam
mov
lods
mov
push
das
xchg
cmp
repnz
lea
jno
xlat
test
xchg
mov
jnp
cltd
ja
mov
mov
pusha
pop
push
xor
inc
clc
xchg
aad
sub
add
out
rcrb
mov
or
insl
call
lea
stc
incl
pop
ss
jne
cs
xor
or
xor
das
mov
push
pop
je
movsb
dec
int3
call
push
xchg
pop
test
lret
repz
test
daa
push
popa
mov
subb
inc
push
pop
cmp
nop
fiadds
loope
sbb
xchg
sub
sbb
loopne
cmp
js
mov
fsts
loopne
push
loop
fdivp
out
in
or
cli
test
dec
push
lret
inc
icebp
ds
cmp
gs
cmp
xor
cmc
or
xor
bound
aad
mov
xor
popa
lods
sbb
mov
loope
test
jge
aas
jbe
ret
sub
jno
in
pop
leave
pop
sbb
push
mov
stos
xor
shrb
ss
in
ret
sbb
mov
mov
mov
lea
pop
test
push
sub
adc
mov
jo
jmp
out
roll
testb
xchg
enter
pop
mov
push
fwait
popa
loopne
iret
mov
mov
dec
aad
leave
jl
push
sbb
sbb
mul
sub
jle
jb
push
mov
out
push
imul
push
mov
cs
or
sub
pop
call
leave
cli
jne
fcom
pop
arpl
das
cmp
jns
es
mov
mov
fstps
and
pop
jmp
or
bound
mov
pop
add
repz
pop
cltd
xchg
pop
les
std
stos
fisttps
imul
icebp
pop
mov
mov
ret
pop
cltd
in
sub
pop
cmp
das
rol
xchg
adc
rclb
mov
xchg
and
out
sbb
addr16
test
inc
popa
paddw
and
cmpsl
dec
pop
jb
mov
xchg
jo
sbb
cmp
mov
call
mov
push
in
outsl
in
scas
mov
insb
sbb
js
pop
sti
test
into
pop
pusha
push
dec
scas
ss
mov
in
test
shl
out
pop
les
sub
stos
jbe
aas
fsubrl
dec
inc
mov
or
stos
repnz
test
sbb
push
sbb
jnp
lret
sub
lahf
pop
sub
inc
inc
fsubrl
int
jae
or
js
and
sbb
and
out
mov
pop
lock
scas
dec
push
adc
stos
push
push
clc
mov
add
xchg
lods
loop
dec
shlb
into
sbb
in
lock
pop
or
and
pop
lods
xchg
arpl
push
mov
and
add
lock
ret
mov
pusha
out
sbb
hlt
lods
std
fnstsw
idivl
sbb
fstl
pop
out
xchg
xchg
add
and
loop
jmp
lds
fsubl
pusha
mov
mov
mov
test
cwtl
sub
je
imul
jmp
insb
dec
out
dec
repnz
nop
pop
push
lods
and
jecxz
jecxz
xorl
es
xor
ja
and
int3
mov
xchg
sbb
aad
out
incl
out
iret
xor
mov
pop
out
stos
inc
je
jae
push
icebp
fcmovnu
sub
aaa
sbb
rcrb
sbb
mov
add
popl
sbb
add
cmpsl
adc
int3
dec
inc
xchg
cmp
sar
test
xchg
inc
xchg
scas
lock
pushf
push
xor
or
mov
ja
das
aaa
xorl
bound
lea
sub
imul
xor
sub
sarb
lret
cmp
push
ret
or
sub
dec
daa
lods
xlat
sahf
jl
mov
fistpl
or
xchg
pop
cli
outsb
mov
cmpb
push
fistl
shrb
add
lods
push
inc
mov
loope
push
lods
dec
sub
push
daa
fidivl
cwtl
push
out
outsb
jle
push
lret
xor
jmp
enter
flds
pop
mov
arpl
in
aaa
inc
mov
push
ljmp
xlat
sub
add
sub
std
scas
insl
and
mov
imul
lret
stos
shrb
fildll
xor
mov
jecxz
jb
sub
jae
inc
cmpsb
sub
dec
test
xchg
pushf
cmpsl
mov
add
cmp
or
jecxz
arpl
add
daa
mov
xlat
push
arpl
mov
xchg
push
clc
add
imul
rorl
popf
jge
lcall
and
or
leave
sar
testl
or
sbb
cs
cwtl
cmp
xchg
and
inc
out
push
or
out
shll
call
jp
imul
cld
fs
jae
xchg
mov
cs
leave
xor
adc
fbstp
test
sub
inc
es
jbe
xchg
push
loope
pop
push
add
les
stos
call
pop
imul
daa
and
push
sub
mov
inc
jl
inc
daa
push
cmp
sbb
mov
jnp
push
xor
xchg
ret
cs
mov
dec
cmpsl
push
xlat
imulb
imul
cmp
fisttpll
out
jbe
decl
adc
mov
dec
out
push
gs
sti
fnsave
push
push
and
jp
pop
pop
sbb
repnz
test
jl
xor
add
aad
outsl
lods
jle
scas
xchg
mov
hlt
xchg
cmp
sbb
data16
lods
push
das
cmp
push
insl
repnz
stos
adc
xor
and
enter
ja,pn
stos
dec
jecxz
jae
add
fbld
jp
es
push
in
clc
and
mov
sahf
loop
enter
cwtl
mov
lds
test
xchg
add
xchg
jno
add
jl
xor
subl
xor
cmpb
xlat
inc
pop
cmp
adc
into
outsl
pop
mov
aam
mov
fsubs
test
adcb
pop
mov
xchg
in
mov
in
lret
add
jmp
sub
ja
insl
inc
rol
test
popa
nop
dec
and
cmp
jg
sbb
cmp
adc
sbb
mov
jg
in
jp
dec
fdivl
inc
inc
xor
push
adc
addr16
outsl
cmp
inc
lcall
inc
hlt
setge
subb
sbb
roll
cmp
dec
xchg
dec
pop
dec
push
das
sbb
or
enter
mov
orl
push
movsb
jne
inc
aad
inc
or
xchg
popa
lahf
aad
js
sbb
shll
and
pusha
shr
add
cltd
stos
cltd
ret
into
orb
sub
or
loop
arpl
outsl
lods
add
adc
push
int3
add
jge
out
push
inc
pop
ret
outsb
mov
cmpsb
jg
test
push
arpl
fs
xchg
xor
mov
aad
and
sbb
add
inc
pop
in
sbb
je
mov
sbb
jmp
pushf
mov
rep
mov
rcl
xor
push
andb
pop
subb
arpl
jo
in
call
xor
adc
jae
pop
xor
in
lds
lods
mov
xor
jnp
out
push
shl
bound
lcall
cmp
mov
mov
xchg
in
imul
inc
jo
in
and
mov
fsubs
test
cmp
and
ret
and
or
movsl
lods
out
repz
cmc
insl
leave
mov
jmp
xchg
imul
mov
jbe
aas
mov
jne
cli
or
and
movsb
lret
hlt
inc
fwait
das
sar
scas
mov
sbb
mov
push
fdiv
sti
ljmp
mov
and
inc
pop
in
adc
sti
sub
cmc
jp
and
push
xor
scas
sub
sbb
outsl
aad
pop
cmp
mov
scas
push
repnz
std
push
das
loop
sarl
xor
popa
xchg
es
add
ret
pop
daa
js
mov
pop
aad
ja
cmp
test
nop
data16
push
cwtl
mov
xor
lahf
push
adc
jno
xor
inc
sub
repnz
xor
adc
testb
mov
sti
js
out
jl
repz
add
or
inc
mov
jno
xchg
nop
mov
sub
cmc
daa
int
mov
in
gs
adc
sbb
lea
stos
fildll
cmp
dec
pop
ss
pop
mov
pop
aad
add
fcmovb
push
shrb
xor
lea
pop
or
insl
adc
daa
inc
loopne
mov
and
mov
les
js
push
jbe
sbb
mov
jae
sbb
cld
fstpl
inc
bound
out
cmp
push
inc
dec
repnz
xor
scas
and
adc
fcoms
fistpll
lods
push
sub
pop
inc
dec
fstl
sbb
push
pop
lods
push
cwtl
pop
mov
mov
mov
data16
pop
adc
mov
adc
push
in
movsl
icebp
addr16
test
int
mov
adc
or
pop
inc
iret
movsb
enter
sti
lea
mov
mov
sub
call
popf
daa
push
or
add
fs
out
mov
das
xlat
xchg
mov
bound
loopne
stc
sub
cwtl
cmp
lret
mov
flds
lahf
fldt
xor
icebp
or
in
xchg
dec
insb
mov
divb
insb
adc
cmp
lods
int
mov
or
lea
mov
clc
mov
dec
dec
sub
mov
jle
cmp
mov
les
xor
xchg
out
jne
mov
inc
push
inc
punpckhwd
pop
push
sub
push
and
push
and
and
rcll
movsl
push
call
repz
inc
sbb
std
into
sbb
fs
nop
mov
insb
ret
sahf
lahf
push
outsl
pop
push
jecxz
jno
dec
int3
sti
push
push
xor
lods
jl
push
call
out
fnstcw
dec
sti
sbb
push
jnp
dec
test
mov
addr16
stc
sbb
andb
sbb
cmp
push
sbb
cmp
sbb
add
leave
xlat
sbb
enter
roll
fst
push
and
pop
mov
xchg
jnp
pop
mov
lds
sbb
cmp
sbbl
jno
push
repnz
xor
jbe
xchg
push
jae
cmpb
jae
and
jg
js
cmp
popl
mov
push
leave
addr16
or
dec
test
es
inc
stc
inc
push
pusha
and
in
arpl
test
stos
push
and
mov
bndldx
push
pop
or
pop
xchg
cs
into
imul
inc
mov
mov
jae
or
or
stos
loop
pop
mov
sbb
stos
push
pop
fld
popf
das
sahf
je
cmp
inc
sub
jno
ficoml
loope
test
push
jnp
pop
push
dec
ret
push
sub
pop
in
or
frstor
andb
scas
int3
pop
rorl
test
push
or
sahf
lock
shlb
add
movsl
sahf
test
mov
nop
ret
sbb
sub
inc
lret
leave
jge
dec
xor
push
xchg
mov
stc
mulb
xchg
pop
pop
scas
lahf
jb
je
cwtl
les
and
imul
out
push
xchg
dec
cmp
loope
pop
ret
lods
xchg
xor
arpl
pop
sbb
lcall
xor
and
pop
stos
ds
and
adc
sbb
or
add
mov
add
mov
loop
push
adcb
xor
xor
bswap
psubb
out
dec
push
sbbb
cmpsb
test
mov
dec
les
xchg
add
adc
jmp
add
popf
shrl
dec
test
mov
sbbb
jle
aam
and
loop
int
call
cmp
mov
ret
and
stos
repnz
pop
mov
pop
outsl
xchg
dec
dec
and
insl
leave
add
cs
xlat
and
inc
xchg
push
mov
cmp
sub
mov
jmp
jg
push
stos
or
test
pop
or
test
fwait
push
rcrb
adc
mov
inc
and
push
fbstp
mulb
and
ret
shld
cmp
push
int3
test
sub
mov
sub
or
or
out
ret
int
inc
jb
jecxz
jmp
pop
scas
dec
notb
arpl
jg
and
ss
scas
jo
sub
iret
sub
data16
ds
iret
cmc
outsl
pop
mov
shlb
call
mov
xor
lahf
jmp
sbb
arpl
in
push
jg
dec
xchg
sarl
xor
xorl
jp
clc
sbb
xorl
sub
lret
jnp
and
out
or
or
pusha
insb
daa
out
and
xchg
adc
mov
jns
mov
and
add
loop
adc
cmpsb
fiadds
pop
aad
and
adc
data16
inc
cs
jge
xor
dec
mov
cmp
popa
mov
hlt
lods
sub
les
sub
pop
aas
sbb
cmpsb
dec
out
enter
clc
or
cmpsl
pop
fstpl
pop
addr16
je
push
and
jle
out
inc
push
sbb
xchg
jp
mov
and
rcl
and
push
push
mov
lea
add
mov
pop
inc
jl
ljmp
jecxz
dec
mov
add
pop
sbb
loopne
leave
jecxz
mov
out
pop
or
sbb
insb
shrl
pop
shlb
xchg
mov
inc
mov
sarb
pushf
adc
adc
dec
scas
pushl
les
adc
mov
ret
fisttpl
sub
jmp
call
add
dec
outsl
or
inc
xchg
popa
iret
pop
lds
rorb
lea
cld
add
add
ret
loop
mov
jecxz
xlat
push
repz
or
sbb
popa
repnz
fwait
out
add
mov
jb
pop
mov
xchg
icebp
ljmp
mov
idivl
dec
mov
mov
stos
cltd
loop
insl
loope
leave
mov
pushl
or
inc
mov
test
jge
add
inc
mov
pop
adc
data16
pusha
dec
mov
and
sub
fsubl
or
subl
clc
or
test
int3
cmp
stos
cmp
leave
jl
jl
stos
mov
cmp
and
mov
xchg
jae
sti
insb
out
add
or
mov
sbb
movsl
jmp
mov
out
sbb
adcb
les
lahf
mov
cwtl
ja
pushf
enter
cmp
or
fldenv
std
adc
clc
insl
dec
clc
or
mov
or
cwtl
rcrb
push
xor
adc
xchg
ds
roll
lret
xor
inc
and
mov
jbe
das
stos
or
adc
pop
insl
pushf
mov
push
rorb
movsb
lret
sub
or
jp
out
iret
loope
or
out
pop
hlt
cmp
sbb
pop
repnz
jnp
dec
fcoml
mov
cmp
sbb
es
cmp
popl
adc
hlt
mov
mov
idivb
aad
jp
popf
or
pop
adc
pop
cmpsl
jno
jge
movsl
es
lods
into
sub
jo
cmpb
push
hlt
js
lcall
cmp
add
inc
cmp
out
jle
icebp
cwtl
or
pop
inc
stos
adc
push
xor
add
mov
test
aas
cltd
outsl
xor
cs
scas
ljmp
xor
fnsave
xor
out
pusha
pusha
std
cmp
sub
or
push
repz
rcr
int3
adc
xchg
adc
pushw
xchg
mov
mov
dec
and
push
xor
ret
cmp
fdivr
mov
xchg
jmp
cmp
shrb
imul
add
cmpsl
test
sar
in
xchg
adc
adc
mov
inc
jl
push
inc
sbb
int3
add
lret
xchg
bound
inc
or
insl
add
in
loopne
ret
out
xchg
sub
mov
pop
stos
mov
imul
dec
call
mov
mov
jbe
insb
and
ret
or
popa
hlt
jle
xor
mov
cmp
shll
fs
jnp
movsl
xor
mov
std
lahf
jno
bound
rcll
loop
mov
adc
inc
mov
rclb
mov
repnz
sub
fs
shlb
stos
sub
adc
outsl
aaa
jae
sub
pop
cmc
loopne
push
xchg
sub
ret
xchg
fldcw
inc
adc
cmp
push
mov
push
popa
cmp
je
pop
push
cmp
pop
mov
outsb
add
sti
add
cli
orl
push
aam
inc
loopne
push
fsubrs
loop
mov
gs
pop
lea
sahf
push
sbb
icebp
loopne
in
adc
pop
cmp
fs
aaa
mov
cwtl
fwait
andl
or
push
in
in
add
out
icebp
mov
push
enter
bound
xchg
dec
das
iret
xchg
fwait
dec
and
cld
loop
cmp
in
cmpsl
pop
jle
xsha1
cmpsb
mov
int
call
ficoml
xor
loopne
pop
ss
xor
insb
pop
pop
jne
xor
mov
and
dec
add
mov
sub
repz
mov
jbe
fnsave
insb
or
mov
into
jnp
pop
or
push
jmp
pop
push
nop
addl
movsl
mov
insl
push
add
imul
push
jbe
mov
and
or
mov
faddp
jns
loopne
mov
adc
test
ljmp
repz
xchg
incl
xchg
lret
xchg
dec
mov
adc
outsl
sahf
sbb
mov
mov
loopne
stc
mov
push
pop
push
jnp
push
aaa
push
and
add
imul
sbb
xorl
je
jo
pop
xchg
pop
dec
or
scas
in
pop
jp
data16
mov
mov
mov
bound
inc
mov
ffree
repz
inc
ja
out
pop
mov
jbe
imul
leave
xchg
ret
push
and
rclb
pushf
ds
adc
add
cltd
sub
cmp
lods
loopne
jno
cmp
movsl
iret
add
jl
jns
lcall
incb
dec
mov
mov
int
lods
roll
dec
into
aad
packuswb
fisubrl
scas
sub
std
mov
sub
mov
pusha
adc
fsts
ljmp
add
adc
cwtl
inc
mov
aam
dec
cmc
sub
int3
adc
push
mov
idivb
push
movsl
push
aam
adc
in
mov
into
sub
jae
mov
jge
xchg
push
dec
js
inc
push
push
push
pop
xchg
jo
roll
pop
dec
clc
aad
shrl
mov
xchg
push
repz
xchg
push
repz
mov
nop
or
sarl
mov
cmp
inc
and
pusha
das
ds
pop
add
sub
jl
lret
jp
into
shrl
je
or
cmp
mov
pushf
sbb
jne
loopne
push
push
pop
adc
in
xchg
inc
jp
lcall
inc
lahf
fdivl
jl
sbb
icebp
dec
addr16
ds
or
cmp
nop
jne
push
push
mov
or
add
xchg
rorb
addl
stc
sub
loopne
and
sbb
pop
mov
cmpsl
cmp
push
xchg
xor
pop
bound
mov
cmpsl
cmp
mov
push
cmp
mov
fistps
dec
icebp
push
xchg
push
xor
xchg
or
adc
sbb
lock
data16
cmc
popa
ss
and
in
add
push
notb
pop
mov
xor
test
dec
shll
fadds
xor
push
push
add
xor
test
xor
pop
push
in
dec
ljmp
mov
nop
pop
test
pop
push
idivb
sbb
pop
pop
inc
jae
mov
cwtl
pop
inc
mov
adc
lock
pop
push
dec
int3
sti
fsubp
data16
in
add
imul
pop
shrb
push
cmp
and
jo
adc
dec
pop
mov
inc
adc
in
roll
outsb
and
xor
dec
adc
iret
mov
les
or
cmp
push
out
mov
scas
or
or
popa
adc
xchg
adc
out
rcr
mov
sbb
aaa
push
mov
push
pop
in
xlat
xchg
pop
out
shlb
icebp
xchg
or
xor
pop
sub
jge
xor
adc
in
insb
pusha
sbb
cld
lods
pop
push
mov
xchg
outsl
fwait
or
cltd
fnstenv
jb
test
fcmovbe
mov
pop
sarl
lds
aaa
mov
dec
cltd
sahf
loopne
mov
or
arpl
fstps
int3
mov
or
cmpsb
cltd
out
cli
sub
repnz
stc
rcrb
out
adc
ds
outsb
xor
xor
testl
pushf
jns
jb
and
cmp
xor
inc
pop
mov
movsl
or
scas
adcb
mov
pop
fwait
and
mov
jns
rcrl
inc
push
mov
add
xor
sbb
cmp
pop
shr
xchg
cltd
adc
jnp
std
cmp
ror
nop
mov
outsb
scas
mov
cmc
xor
xchg
fs
xor
xor
std
decl
xor
cld
out
mov
inc
stos
jnp,pt
sub
fiadds
mov
stc
jl
or
repz
xchg
imul
mov
add
push
ret
out
call
frstor
out
test
aad
arpl
pusha
mov
sub
jae
arpl
ja
jae
std
push
sbb
jg
add
aas
push
lret
sbbl
dec
enter
mov
cmp
outsb
mov
add
movsl
call
sbb
mov
fidivs
push
test
sub
scas
out
sbb
sbb
arpl
pop
cmpb
stos
push
and
push
mov
rolb
pop
inc
int
dec
sti
rclb
push
inc
ss
pop
add
pop
cmpsb
test
int3
xchg
iret
adc
adc
bound
xor
sub
mov
insb
cmpsb
mov
mov
jb
mov
addr16
jbe
cmp
push
clc
test
ret
sbb
insb
xor
add
inc
lods
xor
and
movsb
cmp
ss
mov
cld
dec
in
dec
pop
out
xor
mov
pop
dec
lock
fnstcw
cltd
cld
jp
fnsave
pop
xchg
popf
cs
test
das
sbb
test
lds
jbe
test
es
fistl
or
jne
inc
lods
addr16
es
xchg
mov
hlt
in
cmp
dec
notl
cwtl
mov
sti
std
std
pop
push
addr16
push
xchg
fnstsw
test
or
lods
daa
xor
xor
movl
cmp
dec
xchg
cmp
hlt
fs
addb
cs
lret
bound
cs
in
ss
jne
inc
je
lods
sub
loop
outsb
fsts
rcll
mov
hlt
mov
pop
jo
mov
cmp
and
pop
pop
loopne
push
sbb
mov
pop
or
loope
sbb
mov
std
adc
fwait
and
mov
adc
not
push
mov
arpl
mov
sub
in
loope
bound
stos
dec
jno
add
inc
lock
out
cli
sub
push
or
aaa
paddw
imul
clc
add
push
push
ror
cmp
dec
push
out
ds
pop
xlat
push
mov
sub
cmpsb
test
adc
fbstp
roll
add
and
test
push
fstps
and
jle
inc
scas
pop
xchg
jb
adc
or
sub
call
xchg
sub
adc
pop
xor
sbb
adc
sar
loop
and
mov
push
mov
sbb
inc
dec
push
fistps
cwtl
lock
fisubrl
mov
xchg
mov
sub
cltd
stc
inc
xlat
add
and
push
testb
enter
lss
outsl
cmpsl
jge
sub
jne
aad
lea
xchg
movsl
xor
sub
push
fmuls
sar
ja
pop
adc
mov
pop
fistps
std
jne
mov
jg
ficoml
dec
push
cmc
add
or
iret
xchg
sbb
scas
mov
jnp
adc
mov
xchg
aam
xorb
adc
mov
stos
popa
inc
mov
jle
rcr
iret
mulb
jecxz
xchg
shl
sbb
inc
xor
xorpd
or
cmp
js
cs
shlb
daa
les
mov
icebp
les
stos
push
popf
mov
xchg
fistps
in
out
and
test
add
jg
shl
jnp
add
mov
mov
mov
pop
lahf
scas
arpl
adc
stos
jecxz
es
in
mov
stc
xor
push
jle
inc
xor
aaa
cmpl
xor
mov
test
add
mov
lahf
mov
gs
push
outsl
loop
sub
push
int
sti
lock
sbb
xor
insl
add
or
pushf
rorb
out
fsts
mov
loop
stc
stos
in
add
insl
sub
xchg
xchg
sbb
fisttpl
test
sub
push
adc
mov
mov
dec
xchg
aam
pop
cld
jo
inc
gs
jno
push
sub
jns
cltd
outsb
loop
mov
aad
lahf
xor
loop
xor
lret
mov
cmp
xchg
sbb
mov
mov
mov
loope
push
jo
mov
sbb
imull
fcmovb
jge
cli
jmp
lods
pop
ret
shlb
aaa
push
sbb
push
xor
data16
in
cwtl
push
das
inc
jg
pop
mov
xchg
sbb
add
sbb
out
xor
jo
cmp
stc
inc
movb
imul
or
cmp
cmpsl
push
les
inc
jl
stos
jno
insb
xchg
mov
mov
aas
push
adc
or
xchg
in
or
and
out
outsl
xchg
ret
xor
stos
mov
add
movsl
lahf
notb
lea
popa
jg
roll
movsl
push
xor
gs
lods
mov
and
outsb
out
inc
push
pusha
imul
and
mov
fistl
imul
mov
adc
stc
adc
jmp
xchg
push
popf
adc
rorl
and
push
cmc
or
and
andb
fiaddl
cmp
std
pop
adc
hlt
add
cld
inc
in
and
add
add
jecxz
pop
in
bndldx
ljmp
pushl
sub
daa
fwait
pusha
inc
sbb
jo
scas
mov
in
shr
or
test
mov
fs
movsl
inc
mov
jmp
icebp
test
bound
xchg
push
push
xchg
add
mov
mov
jae
loopne
sub
mov
mov
cmc
push
std
stos
cmp
adc
xchg
into
fidivl
jo
loope
cmp
je
mov
push
jae
and
arpl
add
push
not
test
jae
inc
mov
insl
and
sub
pop
mov
dec
div
pop
inc
push
aad
inc
mov
sub
sub
push
mov
pop
ja
scas
adc
add
out
cmp
nop
dec
addr16
sbb
mov
sahf
mov
or
mov
add
out
popa
sti
idivb
sub
orl
out
lret
xlat
sbb
call
repz
xchg
pusha
jo
icebp
jle
scas
mov
dec
test
fwait
sbb
clc
fwait
cli
jo
in
add
movsl
lret
pop
cmc
ret
clc
cmp
mov
daa
jle
test
mov
inc
mov
ret
repnz
out
addr16
ret
xor
mov
movsl
or
mov
in
popa
cmc
add
jg
test
adcb
sahf
movsl
in
pop
mov
cltd
repz
xlat
fsubs
mov
sbb
in
js
into
add
cmp
add
outsl
lea
lds
mov
unpcklps
dec
cmp
test
sbb
mov
cmpsb
sbb
mov
int3
scas
mov
dec
fiaddl
out
inc
xchg
adc
xor
xchg
and
mov
addr16
cmp
das
lret
mov
movsb
insb
repz
dec
mov
xchg
iret
hlt
jb
flds
jecxz
add
loop
jo
enter
pusha
adc
out
imul
xchg
push
lock
fldt
in
js
and
jg
jb,pn
cmp
pop
in
movsl
fwait
pushf
push
adc
sahf
push
lret
jge
inc
push
ss
mov
lret
pmulhuw
movb
pop
lds
pop
jns
test
mov
in
push
or
fisubs
sbb
in
or
pop
outsb
cmp
jbe
insb
movsl
mov
xchg
outsl
es
sbb
inc
dec
cmp
inc
or
jl
das
rolb
adc
in
aad
adc
nop
mov
pop
mov
adc
sub
fwait
sub
push
push
rclb
pop
sbb
rclb
sub
shll
fs
mov
sbb
cmp
cmp
hlt
dec
std
xchg
dec
jno
mov
mov
cmp
les
mov
into
xchg
inc
jmp
mov
ficompl
fldl
mov
inc
bound
xor
pop
mov
movsb
mov
jp
cld
cmp
out
cld
das
icebp
imul
pop
mov
mov
arpl
mov
xor
sarl
test
cmp
gs
gs
lods
ljmp
xchg
in
mov
stos
xchg
jp,pn
fisttpll
pop
lods
push
pop
pop
sti
fwait
xor
ss
test
je
aas
sub
push
xor
pop
cmp
rcll
lret
sbb
sub
dec
in
mov
push
push
fistl
imul
fdivrl
loop
dec
cli
pop
sar
sbb
out
les
xchg
xchg
int3
sub
jl
mov
mov
push
pop
mov
inc
imul
dec
push
xor
movsl
sahf
enter
test
or
lods
dec
das
notl
addr16
mov
in
push
ficoms
push
mov
mov
gs
in
out
aaa
jne
xchg
cwtl
fmull
xchg
cwtl
mov
std
cs
mov
outsl
adc
ficoms
fiadds
lcall
sbb
aam
hlt
jl
roll
mov
rcl
adc
pusha
inc
std
or
loop
ficompl
xchg
cmp
sbb
mov
or
inc
sahf
pop
add
xchg
and
or
sbb
push
xchg
mov
jg
lret
cmp
movsl
lret
and
fldt
sahf
mov
dec
cmp
dec
lock
xchg
ljmp
sub
testb
jmp
or
int
jmp
inc
out
test
or
dec
xchg
and
mov
js
imul
jp
daa
jmp
fisttpl
pop
sub
loopne
mov
xchg
fdivl
jb
add
ficoml
loope
push
and
sahf
leave
and
inc
mov
lret
pushf
sbb
mov
sub
das
imulb
pushf
xchg
shrl
jae
in
mov
xor
imul
push
xchg
aad
jl
repz
xor
or
stos
cmpsl
fistpll
jmp
in
ja
dec
xchg
jg
mov
cmp
in
mov
insl
rorl
inc
dec
nop
and
loopne
out
mov
dec
cmc
push
leave
and
sub
ds
inc
jbe
clc
mov
cwtl
push
rcr
lds
xchg
inc
xrelease
or
dec
or
fimuls
sub
jge
ja
fsts
push
js
popf
dec
stos
imul
jecxz
aam
jbe
push
int3
mov
add
push
push
sub
xor
test
mov
test
fbld
mov
addr16
pmulhuw
sahf
pop
or
shlb
icebp
xchg
cmp
fcomps
cmp
dec
cmp
cwtl
and
mov
mov
imul
das
dec
pushf
mov
jle
dec
sub
aas
sbb
sbb
pop
int3
push
mov
int3
dec
lock
jecxz
xor
stc
roll
cmp
sub
imull
jecxz
fs
xchg
add
adc
enter
aas
inc
and
aaa
jb
cmpsb
xor
rcll
addr16
pop
movsb
sti
push
mov
cmp
push
out
das
icebp
nop
dec
sahf
dec
jns
add
cmp
fiadds
push
repnz
dec
pop
jle
adc
mov
mov
out
mov
mov
rcrb
push
xor
mov
mov
sbb
mov
movsl
lock
int3
fisubl
push
xchg
or
nop
scas
inc
add
sub
inc
js
inc
mov
fdivl
xor
stos
sbb
mov
jp
ret
in
sbb
sub
lods
pop
push
xlat
fisubs
outsb
or
lock
lcall
pop
sub
or
sub
pop
sarb
pop
push
sbb
xlat
push
arpl
jae
movsb
pusha
mov
imul
in
jbe
dec
loop
sahf
insl
repz
push
mov
sbb
push
je
das
fidivl
jmp
dec
int3
call
dec
scas
ret
xor
dec
push
ds
mov
mov
and
daa
test
xor
cmp
rcrl
push
out
jnp
call
aas
test
cmpsl
cmpsb
cmpsb
inc
pusha
push
lea
stc
sahf
jbe
xchg
adc
mov
mov
pop
ret
inc
popf
dec
xor
mov
scas
and
sahf
aam
xor
pusha
mov
cmp
xor
lea
leave
xor
pushf
daa
bnd
pop
mov
inc
mov
xorb
mov
rclb
lods
popa
mov
rcr
sbb
and
xor
inc
andb
aaa
cmp
mov
cmp
cmp
jns
push
movsl
shl
xchg
stos
mov
mov
fwait
imul
and
fcomp
xchg
xor
pop
push
cmp
imul
shl
shlb
ljmp
cwtl
fdivrl
mov
loopne
xor
bound
and
cmp
cwtl
xchg
out
push
or
test
xchg
mov
dec
test
cmp
stos
mov
pop
dec
and
scas
jecxz
pop
push
je
popa
xchg
or
cmpsb
and
fstpl
pop
xor
pop
cmp
cli
insl
inc
adc
mov
adc
pop
xor
pop
add
lret
ret
adc
pop
sti
sub
sbb
push
bound
xlat
and
in
iret
xchg
pop
popa
movsl
push
or
mov
outsl
cmc
adc
xorl
cmp
iret
lods
pop
or
cmpb
xor
cmp
mov
mov
frstor
sub
sbb
cmpsl
xchg
jge
ljmp
out
rcrb
gs
test
sub
mov
push
pop
dec
pop
xlat
dec
push
les
lret
out
lea
rolb
push
mov
xchg
mov
mov
ljmp
nop
dec
inc
mov
loop
into
cmp
ss
arpl
out
subl
inc
add
pop
out
push
inc
jns
inc
insl
cmp
sub
jo
cmpsb
xor
clc
inc
cmp
mov
mov
fdivrs
pusha
shlb
addb
pusha
inc
push
jp
cmpsl
adc
sbb
fsts
add
test
rcrl
jg
mov
mov
xchg
mov
inc
push
mov
sbb
cmp
push
aas
mov
cmp
sbb
inc
test
sub
and
sub
dec
sbb
test
mov
add
xchg
jge
pop
push
fnstcw
and
dec
dec
aam
popl
shrb
mov
adc
sub
lcall
pop
divb
fildll
xor
xchg
add
ffreep
test
lahf
mov
outsl
gs
adc
loop
out
mov
popf
dec
or
and
push
inc
movsl
inc
lret
push
push
push
pop
mov
mov
test
jns
mov
or
xchg
and
or
js
sbbl
xor
fildl
shr
fldcw
sbb
inc
pop
jno
int
inc
iret
std
mov
repz
push
sbb
sub
or
test
decb
shlb
aad
nop
mov
jge
mov
es
dec
jne
mov
sahf
dec
inc
inc
shll
push
xor
adc
out
pushf
popf
pop
int3
cmp
fiadds
aaa
mov
and
or
inc
xor
sti
jnp
xchg
fistpll
bound
sbb
inc
sbb
int3
cs
ds
xor
daa
jl
xor
fdivl
adc
fsin
jnp
in
pusha
cmpsl
lahf
repnz
mov
add
mov
sarb
adc
mov
call
pop
call
push
jecxz
or
add
inc
or
lret
pop
jle
repz
lea
repnz
cmp
mov
mov
sbb
xchg
cmp
scas
scas
scas
fwait
out
dec
test
movsb
adc
inc
lcall
test
stos
aad
dec
pop
outsl
mull
add
cmc
push
loopne
ret
or
arpl
and
mov
pop
and
loope
sbb
and
sbb
dec
or
and
pop
xchg
hlt
pop
inc
sub
mov
cltd
adc
pop
ss
jmp
xchg
inc
dec
sbb
jo
pusha
or
pop
insb
ss
scas
aas
pop
lret
stos
rcrb
xchg
add
icebp
or
xlat
std
xor
jnp
dec
cmp
out
mov
xchg
pop
jmp
scas
mov
test
outsb
mov
cmpsb
pop
xchg
push
push
sub
scas
insl
mov
fwait
out
mov
inc
insl
pop
out
out
cmpsb
pushl
out
sbb
pushf
or
lock
jns
shrb
adc
dec
test
cs
xchg
inc
movsb
xchg
pop
add
jp
rcrl
ret
or
xor
test
and
push
inc
das
push
hlt
or
test
sti
cli
sbb
aas
dec
je
xor
jp
jne
mov
sbb
mov
jnp
inc
mov
cmp
dec
and
xor
out
test
sbb
cwtl
sahf
fidivrl
sub
insw
adc
aas
sahf
cli
or
faddp
into
add
rorb
fcoms
or
cmp
aam
cmp
bnd
pushf
and
pop
je
bound
mov
call
dec
loope
xlat
dec
jbe
jae
fs
arpl
xor
inc
insl
ret
sar
aas
insb
ljmp
sbb
or
loop
stos
dec
adc
fidivrl
cmc
or
adc
xchg
xor
cmpsb
dec
dec
jo
lods
adc
shlb
xor
or
ljmp
and
jp
out
ljmp
enter
fwait
orl
insl
sbb
into
mov
fisubrl
add
mov
jmp
imul
add
int
stos
in
and
cmp
es
sub
cmpsl
inc
dec
sarw
std
jecxz
shlb
dec
mov
xchg
sub
sbbl
fiadds
cmp
dec
je
xor
int3
daa
aad
dec
inc
inc
xchg
js
inc
inc
pop
std
in
iret
into
out
test
mov
ljmp
add
stos
pop
iret
das
push
inc
add
icebp
mov
mov
xchg
addr16
hlt
test
sbb
in
mov
mov
aam
fcmovbe
cmp
les
div
mov
inc
fisubrs
pop
out
dec
mov
jmp
and
mov
clc
jmp
cmp
mov
adc
mov
jecxz
xchg
jbe
fs
cs
fbld
daa
pop
inc
jb
dec
stc
dec
sub
fwait
outsl
mov
mov
outsb
loope
cs
adc
pop
mov
fistpll
and
mov
addr16
clc
jne
push
mov
jge
and
lret
fisubrs
addb
loope
sti
mov
test
sbb
jb
enter
sarl
inc
test
ja
push
out
mov
lahf
daa
cwtl
xor
sbb
pushf
push
push
aaa
movsl
addr16
jg
dec
ficomps
scas
loopne
or
xor
cmp
mov
cld
lret
xchg
stc
xchg
sub
lods
jge
pop
roll
jnp
aas
call
pusha
lea
pop
out
pushf
iret
and
lds
lock
fsubrs
xchg
jnp
jae
aad
pop
cmc
das
pop
test
xlat
pop
popf
mov
push
fadds
add
or
test
aas
outsb
jmp
sarl
or
rorb
adc
add
mov
sub
add
xchg
test
add
inc
jo
pop
mov
aas
or
sub
in
jbe
aas
cs
or
sbb
rcll
pop
cs
pop
daa
ja
sub
and
cmp
sub
aas
add
das
lods
rorb
pop
test
mov
icebp
sbb
jnp
add
and
stos
push
mov
aam
fcoms
cmpsb
les
setns
add
sub
dec
jnp
orb
mov
mov
add
push
push
fsubrs
sbb
xchg
inc
push
and
hlt
mov
imulb
inc
out
fiadds
xor
mov
fldl
sti
jnp
add
jg
adcb
pop
push
sub
cmp
icebp
mov
movl
pop
orl
adc
addl
or
cmp
mov
adc
sahf
ret
ss
push
mov
mov
out
xchg
mov
mov
or
push
or
jnp
lea
aas
xor
push
dec
inc
notb
add
aas
out
out
into
out
dec
mov
movsl
fildll
xor
adc
lock
je
xor
rcl
inc
pop
lods
insb
pop
push
outsb
sub
dec
lods
ss
je
outsb
pop
addb
inc
add
inc
or
out
in
xchg
xchg
push
xchg
test
mov
push
dec
or
repz
repz
cvttps2pi
mov
popa
add
inc
mov
cltd
aas
int3
mul
pop
mov
pop
movsl
push
loop
dec
push
dec
ja
cmp
stos
dec
pop
ret
inc
mov
jle
inc
shll
push
sub
jmp
and
or
pop
push
mov
aad
jno
and
push
push
les
das
aad
adc
gs
dec
mov
ud2
mov
mov
cmp
push
mov
ljmp
xor
mov
sbbl
scas
mov
aam
ja
mov
and
setp
rcr
cmp
cmp
mov
push
dec
pop
sbb
add
faddl
rcrb
push
stos
andl
dec
fstpl
mov
mov
mov
paddd
mov
lods
jnp
lret
dec
push
jno
fs
push
mov
test
mov
xorl
jne
xor
mov
mov
fisttpl
rcrb
cmp
and
out
mov
icebp
shrb
mov
jp
sub
nop
push
mov
leave
lea
push
sbb
call
mov
mov
cmp
mov
mov
xchg
add
inc
xchg
fcomps
js
mov
pop
jb
mov
lods
sub
pushf
out
daa
cwtl
or
inc
cmc
mov
call
into
mov
cli
cld
loope
fdivs
int
inc
mov
dec
fidivs
push
fbld
mov
out
adc
fwait
add
pop
inc
mov
mov
xchg
loope
aad
mov
pop
xor
shll
pop
push
push
mov
or
in
repz
or
mov
and
imul
nop
imul
fsubrl
aam
xorl
pop
jns
cmpsl
rcrb
cmp
in
ret
push
inc
call
in
xchg
jl
scas
repz
ljmp
je
aad
sbb
xchg
xchg
jecxz
xchg
add
cmp
call
das
push
icebp
push
push
ret
int
push
les
hlt
cltd
movsl
pop
lds
xor
lcall
iret
mov
je
addl
cltd
and
jmp
pop
jecxz
insl
fcompl
jbe
cld
pop
xchg
outsb
ds
jp
jo
push
and
mov
sbb
jb
fwait
lret
movsb
out
or
push
nop
arpl
or
mov
mull
xor
mov
jo
rep
jp
stc
and
xchg
sub
bound
out
fmuls
dec
jl
pusha
in
in
and
fucomp
lds
mov
inc
sahf
lahf
dec
dec
xor
adc
xchg
fimuls
xor
ficoml
stos
mov
mov
push
xor
push
pushf
jb
xor
cmc
lds
xlat
mov
mov
lret
sbb
fcmovnbe
in
push
cli
push
mov
push
test
xchg
test
pushf
pop
cwtl
push
jne
inc
bound
push
mov
mov
je
sti
sbb
sbb
icebp
clc
xor
sbb
leave
call
mov
mov
in
cmp
pushf
pop
inc
lret
pusha
dec
dec
mov
inc
cmpb
mov
fimuls
mov
add
dec
addr16
int3
cltd
mov
insl
lret
pop
lock
pushl
mov
mov
fstpl
cmp
xchg
mov
in
stos
es
xor
push
or
sbb
sbb
popf
mov
sbb
push
push
clc
mov
data16
lcall
or
mov
es
pusha
xchg
sbb
mov
add
sub
push
sbb
mov
scas
push
loope
sub
xchg
or
loopne
insl
adc
clc
rcll
inc
loopne
cli
jnp
push
sbb
shlb
movsb
lcall
insb
les
ret
or
dec
jmp
je
enter
stos
push
repz
popf
fs
repz
mov
adc
jmp
mov
out
push
xorl
add
mov
shlb
mov
das
mov
repz
cmc
popa
cmp
xchg
push
or
mov
test
inc
mov
nop
pop
es
stos
pop
repnz
xchg
daa
pushf
dec
adc
add
testl
cmp
rclb
mov
mov
inc
jo
fbstp
xlat
add
scas
cmpsb
sti
mov
gs
sub
cltd
lock
mov
xchg
inc
inc
imul
out
and
pop
mov
jmp
push
cmp
rep
in
cli
enter
sahf
in
inc
mov
popa
sub
mov
xor
cmpsl
mov
out
jecxz
rorl
scas
clc
push
mov
dec
mov
movsb
loope
push
mov
dec
mov
lahf
xlat
adc
iret
lahf
iret
dec
mov
cli
jo
cmp
out
sub
sub
push
pushf
in
mov
adc
push
pop
arpl
xor
out
std
and
pop
xchg
mov
pop
dec
inc
xchg
es
je
dec
cmp
and
andb
sub
into
and
setb
cmp
pop
fidivs
cmp
inc
fcmovnbe
shlb
mov
inc
xlat
xlat
enter
enter
mov
mov
mov
sub
jno
ljmp
adc
sti
in
aam
mov
push
aaa
bswap
fwait
lea
push
or
sub
add
pop
or
lret
popf
mov
jl
jl
sbb
jmp
mov
mov
or
sub
mov
rdmsr
fmulp
aaa
iret
xchg
stos
inc
xchg
push
or
rorb
clc
push
cli
mov
mov
jb
and
xor
push
fistps
or
popa
rclb
lds
jne
xor
mov
ficompl
in
push
fwait
push
xlat
or
mov
cs
adc
dec
mov
aaa
scas
js
dec
jl
repnz
mov
cmc
movsl
add
movsb
cmc
xchg
aad
inc
adc
arpl
cmc
aas
pop
mov
pop
cmp
enter
xchg
jbe
jae
adc
das
xchg
fucomp
mov
test
xchg
stos
jg
xor
rorb
mov
leave
int3
das
mov
fimull
add
int3
sti
sbbl
pop
aam
int3
jno
daa
das
adc
jo
or
mov
js
in
cmc
in
inc
sti
jb
daa
adc
xchg
add
bound
cmp
inc
jmp
dec
xchg
cmc
mov
cld
cmp
imul
and
shl
dec
filds
ljmp
add
stos
add
push
int
adc
adc
test
adc
or
sahf
mov
push
pop
jb
es
std
ret
mov
sub
add
adc
cld
insb
pop
pop
ret
cmpsb
rclb
xchg
and
push
pop
push
sub
cltd
cmp
mov
and
cmpsb
mov
push
push
adc
push
pop
or
ljmp
stos
pop
cltd
test
repz
jo
mov
mov
inc
inc
xor
lds
and
adc
filds
dec
inc
xchg
test
fs
mov
into
andb
daa
in
dec
sub
orl
out
in
jp
push
lret
cmc
pop
sti
mov
cmpsb
push
cmovl
sti
inc
fcomp
mov
jge
add
fcmovnbe
sbb
pop
xchg
cmc
or
sbb
imul
addb
mov
scas
or
mov
test
xchg
dec
divb
or
mov
xor
dec
jnp
or
xor
or
iret
push
jecxz
or
jg
xor
dec
sbbb
lcall
loope
xchg
xchg
addr16
lret
mov
test
cwtl
mov
or
jle
inc
stos
adc
push
and
ds
cli
and
add
dec
int3
daa
sbb
dec
add
popa
js
mov
sti
dec
mov
sbbb
mov
call
out
fdivr
dec
outsb
out
ret
nop
mov
inc
jg
je
xchg
add
pop
subl
push
jns
mov
shrb
cmp
cli
mov
iret
pop
pop
mov
jnp
sbb
test
fisttpl
sub
fidivrl
inc
in
jne
movb
push
ret
daa
lahf
or
add
aad
clc
xor
mov
outsb
cmp
jno
cmpsl
int3
cmp
jbe
out
dec
sub
xor
pop
and
sub
add
mov
cmpsb
popa
mov
cltd
subl
and
enter
test
rorb
adc
out
subl
xchg
pop
enter
lcall
cmp
mov
in
int
iret
bound
inc
lods
loopne
lret
adc
hlt
add
out
fstpl
andb
push
jbe
divb
push
imul
negl
mov
or
popa
push
pushf
rorl
int3
xchg
xor
xor
dec
jns
pop
jo
jge
repz
sbb
push
out
movsb
lea
mov
in
or
mov
aas
xorb
out
cmpsl
stos
por
std
xlat
adc
shlb
into
xor
btcl
movsb
adc
inc
notb
sub
xchg
xor
std
jnp
cmpsb
xorl
cltd
xchg
and
popf
mov
xor
clc
arpl
fnstsw
add
loopne
imul
sub
mov
sbb
loop
add
pop
xlat
fsts
jne
adc
fnstsw
imul
dec
xchg
xor
out
popf
push
je
cli
insb
outsl
mov
loope
mov
scas
xchg
repnz
outsl
iret
cmp
xchg
pop
lock
in
pop
push
sbb
cmpsb
out
test
jmp
lahf
in
scas
mov
jg
aas
lret
je
test
addr16
cltd
xor
sar
push
in
cld
xchg
jnp
std
setle
cmp
inc
in
movsb
xchg
push
sarl
mov
lahf
int
ja,pn
cmp
inc
sbb
jno
xchg
jne
push
int3
leave
push
xor
mov
out
stos
shll
xchg
xchg
push
push
push
pop
adc
xor
xor
iret
sbb
out
dec
iret
pushf
dec
jns
fdivrs
insb
in
xchg
or
lcall
and
xor
sub
nop
insb
mov
pop
mov
icebp
mov
jne
rol
fwait
xor
cmp
pop
or
add
mov
push
jb
mov
fisubrl
movsl
adc
dec
in
xor
std
in
popf
ret
inc
push
mov
sbb
fcom
int
mov
outsb
push
xor
inc
aam
or
cltd
or
xlat
in
and
adc
cmp
sub
xchg
mov
dec
mov
push
mov
mov
xchg
sarl
adc
in
dec
and
lret
jbe
jo
push
sahf
lock
or
outsl
rolb
lods
test
outsl
sbb
fdivl
or
add
pop
das
xchg
mov
add
xchg
clc
std
out
cmpsl
aam
push
out
rcrl
dec
aaa
mov
pop
mov
pop
mov
jns
cld
sbb
ds
aas
stos
lock
jns
bound
rclb
push
mov
push
mov
out
pop
into
jnp
cmpsl
cltd
jno
les
or
cmp
jbe
repnz
xor
jb
adc
lahf
fistpll
and
stos
outsl
into
js
or
sub
jno
push
mov
sete
scas
and
iret
inc
out
cmp
ret
and
adc
cwtl
sub
ja
jmp
push
pop
es
out
lods
aaa
outsl
lock
outsl
testb
cwtl
cli
cmp
mov
lcall
pop
pusha
sahf
add
ret
jb
fmuls
popa
cmp
xchg
loopne
fadds
sub
push
mov
orb
mov
push
testl
inc
push
insb
pop
jecxz
inc
in
mov
pop
push
sbb
dec
shll
jbe
lods
lahf
mov
filds
cmp
vprotb
jl
mov
cmp
mov
lret
sub
push
mov
cmp
pusha
jmp
movsl
jb
dec
mov
scas
aad
rorb
in
jns
sub
inc
inc
cmp
inc
sbb
and
pop
mov
imul
cltd
icebp
adc
outsb
or
les
ljmp
fstpt
aad
adc
push
jns
repz
call
cs
clc
shlb
or
out
popf
cmp
xor
jns
loopne
das
jnp
xchg
sub
into
and
aaa
and
pop
loopne
mov
das
mov
adc
lea
mov
in
xchg
pop
mov
sbb
sub
and
mov
inc
jbe
cmp
sub
pop
ret
ss
testl
shlb
jmp
push
scas
jo
js
lahf
cmpsb
aas
push
push
xchg
push
cmpsl
cld
cmpsb
pop
adc
dec
push
mov
imul
push
in
aas
dec
insl
pop
add
inc
ret
push
scas
dec
sub
push
lods
pop
jae
fists
ljmp
sub
push
bound
imul
sbb
rorl
jecxz
pop
dec
clc
ds
iret
adc
ss
mov
sti
mov
xchg
pop
pop
xchg
push
mov
in
add
es
push
xchg
mov
loopne
mov
xor
test
xorb
mov
sub
inc
mov
inc
dec
cli
test
lock
add
xchg
sti
or
pop
ret
jns
insb
mov
mov
pop
hlt
or
fwait
pop
insb
mov
mov
movsb
fstpt
push
jl
jmp
push
pop
jbe
or
adc
mov
xor
dec
and
scas
lret
mov
rolb
rolb
fdivrl
and
ljmp
and
mov
rorl
scas
addps
inc
pusha
shlb
dec
loope
push
mov
cwtl
lahf
jecxz
rolb
and
xor
cmp
fisubrs
sub
std
cmp
test
sbb
mov
inc
and
sbb
xchg
outsl
pop
mov
test
adc
mov
xchg
and
cmp
mov
adc
mov
xchg
pop
flds
test
push
lret
pop
push
cmpsl
xor
sub
icebp
jnp
popf
jne
cmc
mov
inc
adc
ja
pop
imul
sti
shrb
test
xchg
sbb
dec
inc
dec
mov
jae
in
popa
mov
insl
leave
scas
lock
push
popf
lahf
cmc
dec
pop
and
pushf
daa
jae
repnz
into
cmc
and
jle
imul
daa
or
xlat
xchg
ffree
aam
loopne
mov
add
subl
add
push
ucomiss
xchg
add
pop
mov
test
fbstp
pop
mov
sub
leave
adc
rep
ja
inc
aam
fidivrs
xchg
push
pop
sub
jge
imul
adc
jne
out
sbb
cli
xchg
xor
rcrl
or
daa
sbb
pop
mov
dec
pop
mov
stos
fdivp
adc
and
cmpsl
and
push
stos
add
inc
nop
in
imull
mov
into
adcb
add
test
mov
sbb
cmp
ds
add
mov
jl
ret
pop
add
jns
dec
lea
arpl
jg
call
clc
fs
test
rol
cmp
adcb
rcll
pop
and
iret
or
or
mov
xor
xchg
ret
xor
loop
sbb
and
jns
cmp
push
aad
scas
lret
mov
jg
inc
inc
mov
lock
lods
test
dec
mov
mov
iret
leave
shl
es
fisttpll
jo
push
jne
xchg
cs
mov
jo
ja
pop
mov
dec
add
dec
cmpl
cs
mov
mov
pop
hlt
push
out
mov
sub
psubw
out
cmpsb
cld
sti
adc
hlt
imul
cmc
pop
out
push
les
add
test
int3
out
jl
pop
das
mov
subl
cmp
xor
add
scas
mov
and
mov
inc
arpl
dec
push
iret
dec
mov
test
jae
fidivl
repnz
dec
pushf
pop
mov
jo
rcl
clc
sbb
daa
jp
dec
repnz
add
add
inc
fwait
les
xor
mov
mov
into
mov
jge
sub
pop
and
cmpsb
jae
rcl
mov
enter
sub
imul
cltd
inc
add
pop
adc
mov
sub
add
push
aaa
stos
imul
push
and
test
data16
xchg
bound
aam
sub
xchg
push
mov
pop
mov
mov
data16
and
adc
pop
dec
mov
sti
cmpsl
cmp
pusha
cmp
inc
jmp
rol
dec
fisubrs
fmulp
rol
stc
mov
addr16
ds
daa
lods
pop
imul
sub
mov
mov
popa
push
dec
das
enter
inc
lods
ss
sub
subb
aam
out
xchg
pop
fcmovnu
add
iret
mov
shrl
shll
mov
clc
mov
fwait
cmpsb
pop
jg
xor
cmp
sub
andb
and
movb
and
push
cmp
or
mov
dec
sarb
or
jns
add
fcomip
imul
aad
shll
repnz
sub
mov
loopne
sbb
pusha
mov
mov
scas
hlt
jo
push
mov
into
mov
ljmp
mov
jns
xorb
cmpsl
mov
out
shrl
jno
and
adc
mov
sti
pop
or
mov
int3
mov
rcrb
xorb
aas
cltd
push
and
mov
jge
adc
inc
mov
std
cs
dec
lds
test
das
movsb
jp
lock
faddl
imul
cmc
lahf
enter
addr16
pop
mov
mov
cmp
adc
fstpt
lods
adc
cmpsb
push
inc
xlat
mov
arpl
test
push
pop
outsl
dec
dec
ljmp
sbb
into
adc
pop
aad
test
rcrl
dec
mov
pop
dec
adcl
call
ss
fidivs
pushf
ss
xchg
out
pusha
and
data16
xchg
ja
lods
cwtl
cltd
cs
inc
stos
hlt
lea
in
jbe
stos
sub
pop
gs
negb
push
in
mov
pop
int3
arpl
mov
repz
jo
sub
dec
pop
je
and
popa
add
in
cmp
and
std
fcomps
cmc
lahf
pop
dec
lret
imul
inc
fstpt
lcall
pop
test
and
inc
and
fimull
or
or
out
lds
sub
daa
leave
mov
and
lock
sub
testl
mov
mov
cmpsb
lods
add
xor
loopne
je
pop
lahf
sub
out
mov
adcb
pop
ss
in
das
sub
cmp
lcall
jno
mov
xchg
cs
jle
js
call
push
mov
loop
mov
loope
push
icebp
cmc
clc
pop
dec
xor
and
mov
cmp
xor
add
insb
inc
imul
mov
repz
js
pop
test
push
fucomp
jno
outsb
pushf
test
jmp
repz
jae
scas
outsb
push
pop
xchg
mov
jge
jnp
jmp
mov
or
imul
fs
push
sbb
cmc
lock
pop
push
pop
and
xchg
movsl
mov
sti
fstp
dec
shrb
in
pop
cs
into
shl
popa
and
sbb
mov
mov
lods
mov
mov
sub
insl
jo
and
xor
cs
sbb
sbb
std
sub
push
pop
stc
mov
jecxz
push
cmp
clc
enter
mov
xor
push
push
int3
lahf
cmp
mov
jecxz
mov
and
pop
xor
mov
push
push
lods
adc
shlb
jb
mov
pop
dec
into
sub
sti
dec
rcrb
subb
call
fistpll
sub
aaa
add
jnp
scas
je
inc
pop
push
leave
xlat
jnp
adc
into
sbb
out
mov
sti
mov
adc
xlat
hlt
cmp
scas
adc
mov
pop
out
or
repz
xchg
in
jg
pop
movsb
cmp
mov
js
iret
lahf
in
fisubrs
add
stos
dec
outsb
dec
call
fucomp
insb
imul
mov
test
aad
jbe
cmp
daa
scas
enter
xchg
call
aam
out
lcall
jbe
aam
sub
cmp
add
imul
xor
or
jp
cmp
mov
jne
dec
add
mov
rorb
in
js
testb
frstor
shl
xchg
xchg
nop
enter
test
xchg
sub
xchg
fcomip
push
incl
sti
shll
inc
inc
in
lcall
xor
ljmp
mov
pop
xchg
ja
insl
push
sub
jno
and
adc
xchg
and
mov
mov
sbb
ret
mov
ret
mov
imul
je
jb
mov
lahf
pusha
lock
fs
pop
pop
push
mov
pop
dec
shlb
lcall
xor
ret
lret
pusha
lea
lock
pop
adc
mov
sub
enter
inc
shll
sbb
divl
push
jne
dec
mov
loope
insb
arpl
or
es
and
enter
xchg
sub
arpl
push
ds
push
adc
addb
adc
repnz
test
adc
sti
lock
push
ljmp
add
aad
andb
test
sbb
dec
and
fldcw
xchg
ljmp
fwait
mov
imul
sbb
push
jmp
fsts
es
push
pop
xchg
fistpl
popa
mov
xor
ljmp
mov
or
andl
pop
push
pop
shrb
jl
rclb
movsb
cmpsb
lds
ret
cmp
cmp
or
in
sbb
xchg
in
or
insl
negl
mov
cmp
rcrb
dec
dec
push
popa
out
sbbl
jbe
mov
loopne
leave
jp
test
mov
pop
or
int
dec
jge
orl
lret
mov
sbb
fisubrl
cmpl
cwtl
imul
ja
cld
push
or
xchg
loopne
push
pop
jge
aam
xchg
pop
cmc
push
sbb
push
jg
leave
imulb
and
inc
adc
mov
js
fwait
std
inc
je
in
add
cmc
xor
and
jg
popa
and
pop
jg
push
out
inc
inc
mov
add
xor
ljmp
dec
rol
adc
mov
mov
fs
fwait
or
mov
adc
mov
dec
lret
or
movsl
inc
sub
int
dec
xchg
lret
xor
and
cld
sub
xor
pop
sub
aad
pop
push
add
pop
xchg
or
mov
inc
icebp
sub
mov
pop
ror
sub
addr16
cmp
jns
xchg
sahf
sbb
dec
sub
out
jl
pop
pop
pop
cs
pop
dec
mov
dec
mov
mov
movsb
loopne
sbb
test
jns
adc
jb
xchg
xchg
ror
stos
jae
mov
mov
shll
mov
outsb
ud2
dec
fwait
sub
loopne
ficomps
xor
out
sub
lods
dec
mov
mov
ret
iret
sbb
in
jmp
pusha
aas
inc
pusha
in
mov
push
loope
mov
movsb
decl
push
shll
hlt
js
mov
jecxz,pt
mov
imul
ljmp
lods
add
adc
loop
dec
xor
mov
cmovs
pop
and
add
test
fstps
pop
aad
popa
jb
dec
negl
and
lret
shrb
xlat
push
sub
inc
leave
mov
cwtl
cmpsl
push
xchg
cmp
cmpl
sbb
push
ds
or
test
shl
aam
sar
mov
mov
xor
outsb
or
outsb
loope
ficoml
addb
mov
lahf
lret
inc
mov
or
lcall
inc
das
pop
mov
sbb
mov
mov
movsl
enter
push
pushf
and
sub
sbb
and
push
bsr
roll
jecxz
jle
mov
push
outsb
ds
sbb
jge
jle
mov
jb
shrb
mov
rorl
in
gs
int
and
stc
mov
add
cmp
or
mov
in
mov
and
xchg
or
rcrb
xchg
daa
mov
jl
pop
push
cmp
jle
push
add
stos
ret
hlt
pop
pop
test
cmp
stc
jo
xchg
dec
add
xor
cmp
xchg
in
inc
add
pushf
and
in
imul
sub
sbb
test
addl
push
fcom
lcall
es
push
jg
add
pop
scas
bound
cmc
test
shl
pop
cmp
lret
lds
xor
sbb
stos
fists
xchg
gs
cmp
inc
out
cwtl
test
test
test
xor
or
hlt
je
xlat
inc
mov
jo
addr16
push
roll
inc
push
es
loop
nop
outsl
fnstenv
inc
rolb
imul
test
in
cld
mov
rcrl
inc
push
lock
js
sub
loopne
mov
or
mov
pop
adc
call
push
lret
fcoml
movl
popf
pop
lret
pop
into
mov
push
fadds
gs
push
inc
jne
lret
out
icebp
stos
rcll
ss
int
dec
movsb
sarl
shrb
lahf
movb
mov
xchg
cli
clc
mov
loopne
mov
cmp
pop
pop
popf
push
shlb
mov
dec
les
mov
mov
inc
xor
cmp
push
xchg
lods
jge
dec
sub
dec
out
sbb
xchg
dec
aad
cli
push
dec
xchg
xchg
xor
enter
das
inc
mov
push
pushf
addr16
mov
lea
lods
push
push
test
cmp
arpl
push
lahf
mov
roll
push
cmpsb
mov
cs
sahf
repz
pop
mov
mov
shll
jp
test
jo
nop
xchg
adc
push
popf
jne
mov
test
fistpl
fwait
adc
pop
add
mov
fbld
sbb
dec
mov
jmp
cli
inc
in
xchg
repz
dec
dec
fwait
hlt
repz
test
gs
es
ds
push
mov
adc
push
stc
xor
gs
push
lea
add
push
pop
xchg
push
mov
mov
add
insb
inc
jae
mov
xchg
fsubs
push
int3
fs
pushf
aaa
jne
lret
addl
lods
out
or
jl
cmp
jecxz
push
testl
test
rcll
xor
hlt
xchg
es
xchg
ja
in
push
lea
or
imul
movsl
int3
addl
pop
jno
pop
inc
enter
das
ret
push
sbb
cmp
fs
sbb
cmc
add
sahf
jnp
adc
push
jp
cmpsb
jo
add
adc
mov
mov
cltd
cmc
int3
cmp
adc
xchg
mov
push
lock
mov
push
jge
outsb
ss
mov
dec
push
repnz
cmp
sbb
mov
sbb
xorb
imull
lock
adc
lahf
pop
adc
shlb
je
inc
in
xchg
mov
shlb
sbb
xchg
xchg
pop
out
sub
and
pop
cltd
inc
and
cmpsb
out
mov
rorb
sbb
cmpsl
mov
loope
mov
adc
icebp
dec
loop
sbb
adcl
test
mov
push
and
xchg
nop
xchg
das
aad
pop
scas
sbb
xor
inc
mov
jecxz
scas
push
cmp
jge
sarl
mov
mov
aaa
xchg
adcb
gs
cs
gs
or
out
arpl
out
enter
xchg
imul
cmp
ret
stos
sbb
sub
add
fldcw
outsb
push
insb
flds
mov
es
es
aaa
or
lods
pop
add
lods
shll
stos
pushf
jmp
cmp
xor
inc
add
and
mov
jge
lea
jl
ja
jge
cmp
inc
and
adc
das
xchg
mov
pop
insb
outsl
jno
lret
mov
aas
adc
or
inc
sbb
into
aas
popf
and
or
dec
in
das
cmp
xor
sub
popa
mov
dec
push
ss
xchg
mov
sbb
icebp
popf
xor
mov
outsl
gs
push
iret
iret
in
stos
fadds
sub
lcall
outsb
jno
mov
fldl
xor
add
fistl
out
mov
test
or
mov
lock
xchg
cmc
adc
mov
xchg
pushf
shrl
int
daa
mov
cld
inc
mov
sbb
xor
fistpll
outsb
push
shl
mov
mov
bound
ffree
lcall
push
sbbb
sbb
mov
or
sub
jl
sub
jbe
mov
out
jge
sub
outsl
iret
stc
cmpsl
std
lds
sub
rol
pop
pop
shlb
rcrb
mulb
nop
inc
adc
xorb
dec
nop
scas
movsb
ds
push
xchg
or
lcall
push
xchg
cmpsl
imulb
jmp
rorb
lret
sarl
inc
out
mov
sub
repz
in
pop
push
mov
xchg
xor
xchg
les
xor
or
scas
pop
add
mov
sbb
iret
cmp
jg
and
jp
cmp
push
xchg
mov
push
in
jge
jmp
jle
mov
cmpsl
mov
add
call
sbb
push
arpl
xor
aas
ret
rorb
sbbb
rcrl
mov
sub
outsb
add
inc
dec
dec
sarl
das
lcall
int
andb
push
nop
push
call
dec
je
push
sbbb
xchg
mov
aad
leave
add
push
xchg
add
sub
aam
sub
push
mov
or
cmpsl
xchg
aad
jne
cmp
gs
aad
call
inc
roll
xchg
mov
mov
jae
fnstenv
xchg
xor
lahf
pop
decl
xchg
inc
pushf
xor
push
cmp
fistpll
mov
sub
mov
test
sbb
iret
xor
pop
jns
into
mov
adc
ja
pop
es
popf
les
mov
data16
fcomps
dec
stc
stos
clc
jmp
test
jns
sbb
mov
aaa
into
out
xchg
nop
jmp
out
ret
pushf
mov
push
push
push
scas
sbb
sbb
dec
in
aad
mov
xchg
lret
aam
mov
lea
fisubrs
clc
jne
jp
xor
jecxz
push
test
aad
sbb
or
xchg
ss
aaa
outsl
daa
and
lods
sbb
mulb
dec
bnd
daa
xchg
outsl
popa
push
jne
vandps
push
push
lea
arpl
or
sahf
pop
sar
imul
insb
fs
testb
mov
in
loope
inc
mov
cli
scas
inc
push
add
bound
fsubrs
sbb
mov
mov
cmpsb
addr16
push
test
decb
shrl
sub
jmp
loopne
mov
and
int
pop
aam
shl
and
push
xchg
rol
test
sahf
inc
mov
jbe
dec
dec
test
inc
mov
mov
inc
inc
cmpsl
scas
cmp
xchg
cmp
dec
cli
sti
fwait
dec
test
xchg
xchg
inc
pop
jp
cli
inc
inc
dec
pop
scas
dec
xlat
outsb
adc
insb
inc
push
pop
adc
mov
cli
or
and
mov
es
cmp
or
aas
adc
adc
mov
pop
sub
push
jbe
and
pop
xor
push
push
out
and
push
mov
lea
sub
fmull
xchg
jp
pop
lods
jl
push
push
mov
dec
mov
jle
test
cmpsl
mov
shll
lret
dec
jne
pop
in
xor
lods
stos
pushf
xor
addl
arpl
aas
xor
jl
or
imul
cmp
mov
cwtl
je
jp
fiadds
shll
cltd
mov
pusha
jbe
inc
pusha
stc
outsl
mov
popf
jae
subl
dec
repz
scas
aam
lret
cmp
scas
into
not
fisubrs
push
into
jns
dec
xchg
lret
sub
mov
jnp
dec
lock
mov
shrl
and
adc
loop
add
and
iret
cmp
xor
or
add
sbb
out
setns
xchg
xchg
xchg
jl
dec
shlb
rcll
not
cmc
adc
mov
xor
xchg
jecxz
sbb
xchg
mov
mov
mov
movsl
xlat
pop
mov
jmp
sub
das
out
jp
sub
nop
xchg
pop
mov
fildl
inc
jne
jge
insl
pop
aam
andl
mov
cs
lods
movsl
outsl
dec
pop
and
fistpl
lret
movsl
mov
enter
push
pop
adc
lds
nop
jbe
inc
sbb
ss
mov
pop
or
cmpsb
xlat
push
fistl
pop
jmp
scas
xchg
xchg
mov
stc
jns
jnp
xchg
mov
adc
outsl
fcomi
dec
push
fists
pushf
adc
out
out
xor
cmpsl
addr16
adc
xchg
ljmp
icebp
addr16
sub
push
aas
lret
repnz
dec
popf
xor
cld
nop
cmp
mov
into
sbb
lret
mov
cmp
fnstcw
xor
nop
adcl
push
push
test
fld
es
jle
xchg
and
xchg
jg
sbb
mov
adc
ljmp
out
mov
fstpl
shll
xchg
lahf
dec
ja
test
daa
lcall
fistpll
sbb
push
push
inc
orl
xor
jns
out
and
or
stos
enter
popf
scas
dec
int3
xor
popa
and
aad
pop
or
addb
sub
fnstenv
cmpsb
mov
sub
incb
test
std
pop
js
stos
je
add
jecxz
or
push
jae
clc
loop
insb
mov
push
mov
insb
mov
imul
add
mov
add
pop
mov
xchg
jl
cli
dec
cmpsl
data16
scas
testl
push
inc
sub
bound
xchg
cmp
adc
mov
xlat
sub
xchg
sbb
add
cmp
pop
mov
cld
fisttpl
idivl
or
das
outsb
repz
push
movsb
adc
and
mov
jmp
adc
inc
xor
mov
cmp
sbb
xor
push
jle
xchg
push
sub
xchg
xchg
movsl
mov
cmp
mov
int3
mov
aaa
es
shlb
inc
stc
or
inc
pop
ja
into
add
lahf
adc
sub
test
roll
mov
inc
lret
ljmp
outsb
cmp
inc
mov
std
les
sbb
cmpb
sub
xchg
add
or
movsl
cltd
lds
or
data16
fcmovnu
rcrb
fwait
pop
push
dec
jae
push
xor
mov
outsb
rol
jno
xchg
jae
jle
popf
mov
popf
xchg
call
addl
inc
loope
flds
stos
leave
inc
bts
ficompl
stos
cmpsl
mov
jno,pn
adc
xchg
test
add
ja
std
mov
and
adc
popf
adc
repz
inc
int3
push
cmp
jge
mov
mov
add
adc
mov
repnz
fisttps
in
pop
sub
adc
call
sub
dec
cmpsb
or
lea
or
xor
je
or
cwtl
pop
int
push
pop
push
xchg
xchg
adc
push
inc
jne
loop
cmp
xchg
out
insb
js
and
xor
jno
and
mov
icebp
xor
lahf
out
scas
xchg
std
shld
les
call
or
idivl
mov
movsl
jae
lcall
leave
pop
popf
arpl
in
mov
cli
mov
pushl
daa
or
idivl
mov
push
insb
cmc
add
test
cld
pop
dec
sbbl
in
sbb
vcvttps2dq
cmpsl
xchg
notl
ljmp
clc
gs
fdivp
mov
mov
mov
pop
dec
cwtl
lods
and
dec
fsts
and
sub
mov
xor
add
popf
dec
repz
inc
rep
movsl
sub
mov
lret
mov
sbb
in
mov
push
xchg
fdivs
subb
jo
orb
add
xchg
std
pushf
insb
jnp
pop
bound
mov
je
fcompl
add
sbb
mov
xchg
pushf
add
push
push
sti
and
add
lods
add
ret
cli
mov
mov
cltd
jmp
and
lcall
mov
xor
pop
in
push
lock
lcall
xchg
jb
ret
mov
stos
aam
pusha
movsl
inc
addr16
sbb
jl
pop
insl
and
outsb
inc
dec
mov
sub
push
inc
pushf
adc
or
cs
loop
std
enter
sti
jns
addb
or
dec
mov
jnp
imul
mov
shr
xchg
jns
add
jge
inc
adc
stc
scas
cld
cmpsl
sbb
lock
sub
mov
inc
nop
adc
sbb
mov
ja
mov
mov
ror
mov
pop
int3
gs
mov
and
pop
les
jno
mov
aas
call
push
cmpsb
std
lock
imul
xor
push
and
push
and
icebp
test
sti
xor
mov
cwtl
out
xchg
cmpl
jnp
cmc
xchg
push
mov
mov
jecxz
stc
cmp
loopne
cmp
lods
sahf
and
pop
lret
cltd
or
and
in
popf
xchg
jg
mov
mov
inc
xchg
outsb
jnp
dec
adc
sbb
and
rcrl
adc
adc
xchg
dec
leave
and
sub
add
pop
pop
insb
insb
jnp
jg
adc
out
xor
mov
loope
adc
in
std
inc
fwait
pushf
aas
out
fcompl
push
pop
cmp
dec
cmp
fildl
in
cmc
or
mov
jg
inc
sbb
jmp
out
test
loopne
mov
test
es
push
in
lret
xchg
adc
test
add
push
jecxz
add
sub
cmp
rolb
push
sbb
mov
dec
paddusw
vmulps
push
loop
push
testb
arpl
cwtl
or
pop
stos
leave
mov
and
sbb
es
or
popl
pop
lret
or
lret
test
in
adc
pop
add
lahf
mov
push
adc
sub
jl
cli
out
adc
jae
outsb
add
lock
add
mov
mov
mov
fisubrl
mul
lret
enter
stc
mov
fistpl
mov
test
cmc
mov
mov
mov
add
jb
fsubs
xchg
es
scas
fwait
lods
cltd
leave
sub
bound
scas
cmc
cmpsl
cmc
int
out
repz
mov
out
mov
icebp
ja
out
cmp
mov
pop
dec
mov
pop
into
cmp
cmp
mov
addr16
out
adc
call
cmp
pop
subb
stos
mov
loop
mov
push
clc
inc
adc
pop
pop
xchg
int3
cmp
mov
ds
pop
dec
pop
push
loope
pop
and
sahf
mov
push
adc
adc
dec
mov
seta
stos
jmp
int
jns
loopne
lret
sarl
push
stos
loop
and
cmp
test
cld
out
fs
add
das
nop
cmpsb
stos
addr16
imul
movsl
js
mov
sbb
add
add
xchg
test
aas
or
fs
xchg
cmpsb
enter
pop
hlt
repz
dec
outsb
mov
sub
adc
push
xor
fimuls
les
push
and
cmpsb
pop
fsubp
adc
loop
cmpb
or
imul
lds
push
xlat
lret
inc
jp
arpl
xchg
dec
insl
test
lret
mov
outsl
lahf
push
imul
jae
popa
mov
mov
xchg
xchg
stos
jp
pop
lods
repnz
cmc
andb
insl
xor
inc
loope
sub
daa
jb
pop
jo
or
xchg
adcb
arpl
mov
sub
xor
inc
addb
fnstsw
cli
inc
jns
jmp
bound
js
rorb
push
out
out
jmp
add
fldt
mov
jbe
sbb
mov
sub
iret
lret
lea
xor
enter
into
push
push
lret
in
iret
mov
imul
out
inc
xor
xor
lods
lds
pop
mov
jb
adc
sbb
in
push
push
outsb
fucomi
pextrw
xor
add
inc
std
out
fwait
scas
shlb
repz
push
int
or
out
ret
dec
adc
jae
daa
xlat
bound
xor
pop
mov
call
sbb
pop
insb
insb
sbb
dec
ret
inc
mov
xchg
push
ljmp
je
and
xchg
test
inc
cmp
jl
ficompl
jge
ficomps
mov
jmp
fnstsw
push
stc
cmpsb
rcrb
lods
jne
ret
mov
cmp
mov
add
xchg
xor
mov
dec
xchg
mov
orl
xchg
loopne
mov
mov
jne
sbb
adc
mov
aas
adcl
pop
addb
jbe
pop
movsl
xor
push
in
push
outsb
xlat
js
sub
lock
xchg
scas
mov
jmp
ficomps
js
inc
movsb
stc
into
repz
pop
ss
icebp
push
lahf
inc
mov
sti
mov
xchg
std
inc
shlb
js
loopne
push
mov
push
xchg
and
adc
enter
aas
shl
fwait
dec
fdiv
xchg
shll
loope
dec
cld
sbb
fldcw
cs
add
xchg
sbb
jo
test
fsubrl
jne
fs
cmpsl
xor
sub
ljmp
pop
xchg
or
xlat
lahf
dec
mov
and
popf
orl
add
add
or
jecxz
mov
scas
cltd
nop
pop
pop
adc
in
scas
loopne
arpl
test
mov
in
and
sub
scas
cmpsb
negb
inc
mov
fnstcw
jae
jb
cmp
xor
flds
movsb
scas
icebp
aaa
fstps
js
lea
dec
push
inc
sbb
xchg
rorl
adc
adc
pop
dec
adc
lcall
inc
popa
in
ds
in
cmp
insb
push
xorl
and
mull
dec
mulb
int
adc
fildl
inc
shll
inc
or
movsl
rol
adc
adc
jmp
es
fsubs
adc
xchg
mov
movl
pop
into
ret
ret
mov
sti
sbb
mov
sarl
rorl
mov
and
xor
ret
mov
sbb
cmc
jo
pop
or
push
out
cmp
adc
adc
adc
mov
push
mov
stos
jbe
lcall
pop
sub
mov
and
jb
and
fwait
arpl
adc
stos
arpl
pop
or
xchg
rorb
fldt
int
xchg
xchg
xor
in
insb
mov
imul
adc
sub
mov
call
adc
mov
mov
test
mov
adc
push
aaa
enter
mov
jne
push
fbstp
push
fcmovb
pop
inc
iret
sbb
out
int3
sbb
gs
icebp
jb
mov
les
pop
pop
or
repnz
mov
fidivrl
mov
or
jge
ljmp
rcrl
sarb
popf
loopne
mov
and
pop
fldl
adc
aas
jnp
cwtl
sub
in
jl
sbb
movl
cmp
icebp
ja
js
shll
mov
out
shl
or
sub
mov
pop
mov
out
dec
cwtl
lods
movsb
xlat
mov
stos
push
iret
dec
clc
scas
call
ja
jg
call
call
scas
fdivs
in
push
xor
loope
in
addr16
loop
sub
mov
lds
into
sbb
loope
mov
cltd
xchg
jb
mov
push
push
push
fistps
call
add
fcomip
dec
or
jb
and
mov
xchg
jge
shlw
jo
ret
popf
xor
loop
bound
lock
cmp
insb
push
fstpl
hlt
pushf
mov
std
or
sub
pop
inc
add
adc
mov
shl
stos
sbb
lods
lret
xor
push
sub
lret
pop
add
mov
mov
xorb
in
scas
aam
fadds
pop
insl
mov
clc
hlt
mov
jecxz
sub
outsl
and
fidivrl
ljmp
mov
pop
add
jae
xchg
jg
xchg
notl
adc
aad
ret
pop
jge
xor
int
lds
test
call
rcll
push
lret
stc
loop
mov
xchg
mov
jo
xor
mov
arpl
lret
ljmp
insb
fldt
das
mov
push
mov
push
lea
pushf
push
jbe
scas
scas
xor
push
cmp
loopne
bound
mov
mov
stos
mov
movsb
outsl
out
jle
mov
adc
jmp
cmp
push
scas
mov
sahf
mov
mov
mov
fs
pop
mov
xchg
outsl
fldenv
mov
bound
fcompl
rorl
cmc
push
dec
and
into
es
or
faddl
mov
jns
cmp
adc
dec
sub
pop
rcrl
cmp
cmp
mov
cs
jno
pop
mov
inc
stc
insl
pop
std
inc
inc
sub
jo
scas
nop
adc
xchg
mov
mov
ljmp
stos
pop
lock
fs
sbbl
add
daa
cmp
sbb
inc
je
repz
shll
int
aaa
test
int
repnz
adc
push
pop
sub
fidivl
cmpsl
inc
xchg
add
xor
sbb
mov
into
inc
das
push
fbld
mov
movsl
call
xor
in
mov
pop
mov
je
jge
xchg
add
test
iret
into
dec
jmp
xor
xchg
std
pushf
hlt
inc
fsubr
add
insl
popf
clc
push
inc
out
xchg
pop
mov
xchg
mov
xchg
cmc
testb
sbb
and
imul
cs
and
sub
add
fidivl
fimull
mov
nop
enter
fnstsw
sbb
jae
leave
shll
test
mov
jmp
hlt
subl
aam
call
lea
mov
inc
fsub
mov
dec
sbb
jnp
aaa
gs
cli
jle
mov
std
imul
mov
adc
notw
xchg
cli
jnp
xor
lds
cmpb
iret
pop
int
ja
enter
insl
addr16
in
jge
push
inc
or
push
adc
icebp
or
xlat
aad
mov
shrb
icebp
fs
mov
cwtl
into
pop
xor
jno
pop
mov
adc
mov
or
inc
ja
rcrb
jmp
js
mov
jbe
mov
je
lods
sub
adc
xor
sub
xchg
hlt
sbb
xchg
and
sbb
lret
dec
ljmp
jae
ret
or
xchg
and
nop
cmp
xor
mov
imul
pop
xor
les
movsb
cmp
mov
std
xlat
or
rcr
outsl
xor
outsb
mov
js
xchg
fsub
jne
leave
pop
sbb
cmp
or
enter
jecxz
xchg
inc
and
jae
out
decl
jmp
jecxz
cmp
cli
out
lds
aam
jae
pop
nop
mov
jne
sbb
stos
xor
es
sub
loope
cmp
pop
rcr
mov
cli
sub
in
push
inc
mov
or
movsb
cmc
jg
shll
les
mov
sbb
imul
sahf
shl
mov
out
mov
mov
in
xchg
push
out
out
dec
xchg
call
xchg
xchg
aaa
inc
jl
xor
and
push
nop
jns
pop
insb
dec
mov
mov
imul
cld
aam
xor
dec
push
xor
ljmp
adc
cmp
insb
cmp
fbstp
add
sub
in
test
sub
insb
cmpsb
int3
test
push
faddl
int
ljmp
mov
or
xor
cmpsl
xchg
push
scas
xchg
push
pop
adcl
test
fadds
int3
sbb
loop
adc
add
inc
jo
sub
ljmp
sbb
push
js
fldcw
dec
fisttps
dec
arpl
test
inc
sub
xchg
xchg
pusha
xor
and
rcrl
sti
cmpsb
pushf
adc
in
xor
daa
popa
cwtl
aas
stc
mov
add
xchg
in
inc
pusha
mov
jbe
jl
out
mov
mov
nop
loopne
and
sub
xchg
dec
subl
jns
aas
rcl
xchg
mov
lret
jmp
push
add
repz
jo
mov
jbe
minps
test
in
hlt
push
lods
rorb
dec
into
mov
or
add
nop
jmp
xchg
in
fldenv
lcall
stc
mov
xchg
xchg
mov
or
les
pusha
pop
mov
add
lcall
cltd
ja
inc
das
pusha
fcoml
xor
adc
mov
pop
outsl
mov
test
mov
mov
arpl
push
mov
xor
pop
sub
ret
stos
xor
jae
lods
push
xor
pop
out
addr16
dec
mulb
jg
imul
loope
insl
test
ja
xchg
imul
mov
scas
movsl
out
sub
jle
jl
pop
cmp
mov
enter
jo
mov
xchg
cmp
lock
dec
les
pop
mov
pop
insl
testb
test
or
out
and
xor
and
imul
aad
jecxz
xchg
or
mov
movsl
xchg
pop
pusha
jmp
xor
or
xchg
and
cwtl
jnp
mov
ja
jl
xor
xor
jg
cmpsl
decb
fldenv
xchg
jge
add
pusha
inc
enter
iret
inc
pusha
mov
movsb
mov
xchg
aaa
lock
mov
mov
inc
pop
inc
fdiv
dec
pushf
int3
stc
pop
clc
lahf
push
shrl
jecxz
cmp
test
gs
add
inc
mov
inc
aas
or
push
mov
enter
add
pop
or
jle
sub
xchg
out
pop
cmp
int3
out
pop
push
sub
add
cwtl
hlt
call
mov
mov
push
mov
imul
jns
fiaddl
out
outsl
aas
pop
aad
loopne
adc
test
lahf
enter
repnz
push
or
cld
push
xor
add
add
jmp
dec
inc
pop
leave
lods
jp
add
gs
push
daa
push
imul
inc
and
sub
add
lcall
xchg
push
sub
cwtl
loop
or
hlt
pop
adc
sbb
jecxz
leave
push
push
adc
stos
fisubs
insb
xor
or
xchg
push
imul
pop
aas
and
in
loopne
into
fidivl
xor
shrl
nop
dec
jg
je
mov
cmp
and
inc
repnz
iret
ficoms
or
xchg
out
ds
stos
mov
lods
pop
int3
dec
or
pop
out
push
loop
int3
stos
or
mov
jns
inc
sar
adc
push
test
pop
mov
mov
sahf
andb
mov
xor
mov
fwait
sbb
sub
insl
pushf
lcall
jl
fisttps
pop
jmp
fisttpl
hlt
es
jl
out
or
and
mov
push
pop
jne
push
aas
out
xor
call
mov
xor
out
outsb
pop
andb
clc
mov
add
pop
mov
add
mov
scas
mov
lods
test
and
fdivs
or
inc
fwait
mov
cld
or
pushf
mov
push
cli
out
mov
push
stc
cmp
cmp
or
xchg
xchg
adc
movsb
adc
inc
mov
push
jnp
pop
addb
mov
mov
ljmp
pusha
mov
sub
jge
jno
push
add
subb
cli
pop
repz
rcll
xor
cmp
jbe
xchg
or
clc
into
in
mov
or
adc
add
add
aaa
mov
addb
in
sub
mov
push
mov
sbb
mov
das
adc
sub
pop
in
jb
jns
jmp
leave
xchg
int
mov
cmpsb
repz
mov
pop
lahf
icebp
cmp
pop
pop
fildl
insl
rcrb
cmp
js
and
scas
inc
arpl
xlat
xorb
cwtl
out
pushf
pushf
push
dec
repnz
xor
insl
xchg
mov
pop
jns
fisttpl
dec
pop
adc
rolw
pop
mov
in
or
lret
es
out
mov
sub
scas
mov
flds
leave
pop
movsl
mov
xor
js
adc
pusha
icebp
jle
and
aas
lods
xchg
ds
pushf
aas
movsb
ss
rclb
mov
and
mov
aam
pop
and
loope
and
sub
xchg
popf
sub
cmpsl
mov
mov
roll
repnz
ljmp
jae
pop
add
loop
xchg
cmp
push
mov
ret
push
jne
xor
lods
pop
cltd
popa
cltd
iret
ss
int
fs
loopne
or
andb
stc
push
and
mov
xchg
divb
popa
inc
jnp
or
mov
addr16
sahf
mov
sub
sbb
lret
inc
xchg
hlt
cmp
out
sub
pop
jo
stos
loop
cmp
repnz
movsb
xchg
sub
inc
into
je
inc
pusha
sub
ret
das
and
pop
or
popf
les
dec
aas
enter
adc
in
add
jmp
sbb
aam
icebp
cld
or
add
and
mov
jns
bound
mov
xchg
push
mov
cmp
inc
cmp
mov
iret
movsb
sub
mov
fdivs
sbb
xchg
out
es
mov
sbb
xchg
cmp
sub
mov
cld
pop
leave
aas
push
jb
cwtl
jb
pop
mov
repz
inc
mov
lds
repz
in
dec
mov
pushl
push
scas
cmp
xchg
outsl
fisttpl
es
and
ljmp
ret
push
pusha
or
cmpsl
fidivrl
popf
push
mov
ror
dec
xchg
adc
cmp
push
mov
gs
inc
iret
xchg
and
pop
cmp
sbb
outsl
xor
mov
or
ss
cmc
sti
xchg
mov
push
and
testl
sbb
rolb
fcompl
add
add
int
pusha
pop
push
push
fdivrl
and
xor
lea
and
dec
pop
outsb
popa
pop
cmovle
cmpb
pop
xchg
imul
mov
movsl
int3
push
pop
xchg
insl
mov
jae
mov
imul
push
mov
xchg
movsl
fisttpll
call
ret
dec
lahf
adc
mov
cwtl
in
or
shll
ja
xor
sub
scas
jnp
sbb
test
xchg
pshufw
insb
ja
xchg
push
int3
inc
cmp
adc
push
ret
outsl
daa
enter
xchg
inc
incl
clc
fcoms
out
cmpsb
pop
pop
lea
jp
xchg
lahf
pop
jae
psubsw
xor
ja
ljmp
rcrb
and
pop
push
out
fwait
cmp
jno
or
int3
movsb
pop
lea
test
sbb
mov
clc
scas
mov
pop
push
in
loopne
daa
sub
aas
mov
mov
sahf
cmpsl
and
es
movsb
push
divb
mov
scas
in
je
mov
dec
and
lret
in
xor
jno
rcll
inc
xor
sbb
outsb
das
mov
clc
xchg
xor
orl
jne
and
fs
push
mov
jge
mov
adc
ds
subl
pop
cmp
inc
xchg
daa
loope
mov
mov
jo
mov
hlt
fldcw
aaa
js
and
jns
fwait
mov
mov
cmc
cmpsb
lods
cmp
add
je
test
add
sar
adc
aas
mov
sub
add
xor
mov
jmp
xchg
cs
or
test
popa
das
mov
stos
pop
or
jne
sub
inc
pop
inc
into
push
insb
repnz
add
xchg
je
pop
ret
and
jns
outsb
shlb
pushf
jbe
sub
fidivl
aas
lret
push
mov
sub
movsl
push
mov
pop
mov
hlt
inc
xchg
lods
xchg
adc
push
cmp
in
mov
mov
add
mov
ljmp
xchg
hlt
cmc
add
mov
inc
jecxz
and
arpl
xchg
jo
jnp
and
jmp
fldenv
inc
arpl
scas
jae
out
test
pop
push
xchg
and
cs
mov
jl
dec
lods
inc
xchg
mov
aaa
push
testl
mov
dec
jb
sbb
frstor
in
or
and
xchg
arpl
call
movsl
mov
and
sub
xchg
push
pusha
out
pop
int3
in
out
sbb
pushf
push
cmpsl
inc
std
add
ds
add
hlt
lea
add
pop
xor
sti
sub
and
das
scas
mov
test
out
jle
aam
repz
loopne
sub
mov
jle
mov
std
addb
push
adc
fmul
str
adc
fidivs
mov
mov
bound
mov
je
enter
loope
imul
jnp
jmp
imul
loopne
in
sbb
into
cmp
pop
pop
pusha
leave
orl
cwtl
push
mov
jns
jnp
push
sbbb
popf
movsb
pusha
mov
sti
or
jbe
cltd
out
jp
mov
or
pop
inc
add
leave
rcrl
sub
es
mov
notb
cmpsl
inc
xor
sti
add
or
fldt
xchg
rcrl
rolb
and
gs
mov
inc
in
dec
lret
add
icebp
ret
repnz
ret
unpckhps
xor
out
sbb
lods
dec
bound
outsb
shrb
fnstcw
outsl
adc
pop
int
and
ds
sub
adc
push
cmpsl
sbbb
lret
sahf
sub
push
pusha
mov
in
icebp
in
and
fistl
cmp
es
data16
cltd
jns
pop
pop
fisttps
cmp
aaa
lds
lods
sbb
cltd
cmc
mov
or
pusha
sub
repz
lret
jl
sub
and
mov
xor
in
ja
sbb
sbb
lods
out
fbld
ficoml
mov
sub
iret
in
and
pop
in
jb
push
sti
scas
mov
sbbl
adc
mov
ljmp
shr
push
adc
sbb
push
xchg
sbb
mov
pop
jb
pop
inc
mov
sbb
jae
sub
push
mov
popa
bnd
inc
lds
adc
or
jae
mov
mov
push
add
cld
sub
ret
dec
pop
dec
scas
adc
popa
inc
ret
or
push
dec
ljmp
imulb
jnp
mov
cwtl
cmpsb
push
jb
mov
mov
insb
ds
fndisi(8087
in
mov
inc
mov
jb
dec
sub
and
jbe
mov
xchg
cmc
xchg
mov
add
subb
adc
mov
inc
or
divb
out
add
push
imul
aam
sti
fcompl
pop
sahf
and
adc
mov
mov
cmpl
mov
in
push
das
shll
dec
mov
and
pop
inc
cmp
add
popa
cwtl
inc
shrb
xor
mov
jg
cmp
add
xor
std
imul
nop
jo
imul
inc
js
mov
cltd
lahf
lock
lcall
inc
jne
jo
push
and
lods
sbb
movsl
lds
or
in
mov
movsb
in
icebp
cmpsb
cmpsb
xchg
mov
popf
xor
mov
cmpsb
popl
sbb
mov
aam
push
inc
pop
iret
mov
outsl
add
in
arpl
scas
pop
adc
jae
test
jecxz
mov
in
xorb
and
push
outsl
add
sbb
test
ficoms
dec
sub
sub
and
outsb
inc
nop
test
sub
movsl
fs
mov
notl
dec
xlat
mov
mov
or
sbb
addr16
mov
out
sbb
push
xorl
icebp
xlat
or
or
test
mov
dec
mov
fsubs
push
int
adc
arpl
xchg
add
cwtl
daa
mov
and
and
mov
lret
dec
cmp
mov
dec
mov
pop
icebp
clc
fxch
xchg
inc
movl
cmp
in
iret
sub
popw
push
push
pop
idivl
xchg
sti
push
dec
je
push
jle
or
fs
outsl
adc
dec
push
adc
push
push
mov
adc
stos
and
ret
add
mov
call
cmp
mov
insl
test
pusha
pushf
loope
cmp
lcall
in
test
loop
lcall
lock
pop
cmpb
mov
mov
sahf
pop
test
or
cmc
jmp
mov
xchg
sbbl
outsl
cwtl
cmp
fstpt
dec
xchg
mov
push
push
nop
adc
cmp
push
cmpsb
rorl
sarl
cld
cmp
std
xchg
lock
mov
mov
adc
imul
into
imul
stos
xchg
hlt
lods
pushf
addr16
xor
cmp
xchg
insb
dec
and
jbe
pusha
test
lahf
adc
push
mov
lret
mov
mov
or
jne
inc
out
shrl
ret
sbb
adc
sti
js
sub
pop
sub
clc
inc
add
cli
inc
sub
push
xchg
adc
pop
subb
add
pop
rol
pop
adc
sbb
bound
push
je
mov
sbb
lret
dec
sbb
movsb
out
aam
mov
cwtl
adc
daa
repnz
mov
sbb
test
mov
shr
fsubrp
mov
pop
inc
loop
pop
pop
push
mov
rcll
push
sti
jmp
mov
pushf
in
cmp
or
movsl
pop
sbb
pop
cmp
xor
imul
sbb
scas
test
insl
jns
rorl
sbb
jb
mov
movsl
aad
int
and
mov
lods
sti
mov
dec
pop
dec
lret
mov
lahf
inc
dec
cmp
adc
or
dec
jb
mov
xchg
add
dec
cmpsl
out
daa
je
aas
jns
jg
and
xchg
fstpl
push
shr
and
ret
lret
je
in
fnstenv
pop
pop
xchg
dec
or
popa
push
xchg
mov
mov
shlb
sub
jne
in
and
enter
pusha
and
cmpb
xchg
clc
push
add
scas
mov
jmp
mov
rcrb
stos
sbb
inc
xchg
mov
sti
pop
popa
push
or
int3
mov
jae
xor
into
add
or
pop
push
cmp
push
rcrl
out
dec
or
mov
pop
lcall
or
push
pop
test
dec
shr
jmp
rcrb
dec
sub
or
daa
cmp
test
fidivrl
xchg
jb
ret
and
jno
shll
loopne
icebp
out
mov
cmc
or
adc
and
incl
stc
dec
out
inc
push
rcll
and
mov
nop
push
int
shl
in
lock
outsb
sbbb
bound
in
cmp
js
inc
push
mov
xchg
movsl
xor
cmp
add
mov
xchg
cmpsl
mov
xchg
clc
push
inc
inc
pop
sub
sarl
push
fsubrl
in
cmc
sarb
imul
cli
mov
daa
out
jnp
mov
mov
int
js
sub
and
sarl
mov
mov
inc
push
lock
jbe
mov
mov
xchg
outsb
jbe
cmpsb
rclb
cltd
sahf
push
push
ljmp
jg
mov
adc
or
push
mov
iret
nop
dec
pop
xor
push
lea
test
aaa
mov
mov
test
in
clc
push
xor
pop
add
ror
jae
int
pop
adc
ret
or
loopne
push
lock
mov
xlat
push
ljmp
shl
mov
daa
push
shrl
stos
icebp
adc
repnz
stos
dec
or
cmp
inc
decb
push
test
or
leave
sub
jmp
cwtl
sbb
icebp
testb
loope
outsl
insb
jno
scas
rorl
mov
sub
or
fmulp
ds
jecxz
popl
es
into
cld
insb
setg
or
sbb
gs
popa
clc
stc
pop
pushf
je
adcb
jmp
pop
cmc
pusha
leave
int3
push
inc
insb
int
push
adc
jne
pusha
add
push
mov
loopne
stos
lahf
mov
and
add
fisubrl
push
cli
xchg
pop
loope
popf
mov
mov
int
add
push
cwtl
sub
stos
and
cmpl
lahf
inc
aas
mov
icebp
push
mulb
gs
mov
inc
cwtl
xor
ss
cmp
imul
test
adc
push
pop
mov
shrb
nop
scas
imul
mov
cmpsb
mov
sbb
mov
aam
dec
sub
pusha
popa
cmpl
jbe
mov
cmpsl
mov
push
mov
adc
out
and
and
fwait
jo
lcall
test
cmp
mov
aas
mov
mov
repnz
sub
xor
pop
jle
sbb
fisubrl
popf
xchg
lock
sbb
mov
mov
mov
mov
int3
mov
add
insl
adc
push
pop
xchg
filds
inc
mov
pop
cmpsl
mov
xchg
mov
mov
iret
ja
inc
lods
hlt
lds
push
inc
shr
push
inc
repz
stos
xchg
cmc
sbb
pop
gs
mov
lret
fimull
xchg
mov
push
pop
dec
add
sub
xchg
cltd
insl
xchg
pushf
pop
inc
int
pop
pushf
mov
int3
xor
mov
imul
xchg
dec
mov
dec
shlb
sub
cltd
hlt
cld
sbb
scas
push
cmpb
pop
mov
dec
or
sahf
xchg
or
incl
mov
jbe
rcr
divb
ja
xchg
dec
or
sahf
xchg
add
test
fsts
aam
adc
cmp
mov
push
fcmovu
daa
into
loope
dec
test
push
fsubl
dec
std
mov
inc
cmp
adc
add
lret
daa
mov
dec
out
out
or
mov
push
lods
pop
aam
pop
push
or
inc
scas
xchg
cmp
loopne
pop
aam
sub
test
mov
std
fistps
xchg
popa
sahf
stc
mov
jne
and
adc
mov
inc
push
pusha
cmp
adc
andl
shrl
jl
sub
add
orb
les
lahf
scas
jg
jae
dec
sub
sbb
lret
orl
loopne
popf
mov
inc
jmp
enter
mov
xor
in
lahf
jne
lret
dec
imul
or
test
xchg
xchg
mov
aam
push
jge
mov
mov
loop
ljmp
popf
xchg
decl
and
fidivl
lods
fcmovnbe
jne
dec
cltd
and
test
cmp
jecxz
cmp
pop
jecxz
addb
and
into
sti
icebp
aaa
gs
or
add
sahf
push
xor
cmc
sahf
in
mov
aaa
mov
jae
frstor
lods
cmp
loopne
shr
lret
pop
pop
lock
jbe
cmp
push
aaa
sub
rol
pop
insl
stos
dec
jl
and
out
fcmove
push
jmp
bound
stos
fadds
push
and
in
gs
repz
clc
popl
out
dec
int
adc
add
xchg
mov
mov
pushf
or
or
hlt
sbb
adc
les
sbb
imul
xchg
or
sbb
sbb
ficompl
add
inc
add
inc
cwtl
or
ljmp
mov
mov
mov
lret
hlt
pop
xlat
push
ret
out
outsl
sbb
sub
or
testb
sub
mov
inc
cmpl
ljmp
rcrb
jecxz
lods
mov
das
ljmp
popf
mov
sbb
roll
insb
fcoml
mov
fdivp
es
and
inc
test
es
imul
inc
sbb
pop
mov
sbb
or
int
add
add
push
cld
divb
data16
in
dec
in
inc
orb
inc
xor
add
push
pop
adc
cltd
jno
loope
mov
nop
mov
or
data16
and
xor
push
mov
daa
popl
call
cmp
scas
mov
aam
popa
adc
dec
inc
xchg
aaa
cmp
movb
xlat
xchg
lcall
imul
jecxz
cmp
idivl
movsl
jno
rcrl
daa
sub
gs
incl
imul
mov
mov
push
add
aaa
inc
mov
cltd
lahf
pop
in
pushf
pop
pop
outsl
popa
mov
adc
add
popa
call
mov
in
sub
insl
ds
mov
mov
jge
dec
insb
fnsave
mov
adc
pushf
dec
cli
fs
mov
call
stos
mov
shll
clc
xchg
das
cmpsb
fldenv
mov
mov
jae
cli
pop
mov
dec
std
mov
imul
out
test
fdivl
shlb
subl
ss
jg
cltd
sbb
inc
sub
roll
mov
pushf
nop
cmp
insb
gs
outsb
in
inc
rcll
sub
daa
cmpsb
jl
int3
add
nop
sbb
js
or
sbb
dec
les
mov
testl
into
lods
push
enter
imul
push
jmpw
cltd
push
cwtl
roll
pop
jl
inc
inc
pop
movsb
fadds
pop
cmp
stos
sbb
cmp
repnz
xor
push
dec
pop
fistpll
xchg
icebp
inc
test
mov
xchg
ljmp
or
int3
xor
shrb
rcrb
lods
sbb
bound
fsubl
and
js
scas
mov
or
mov
sub
mov
ds
cmpsl
pop
lock
push
gs
mov
repz
dec
dec
stos
mov
add
and
ret
dec
les
dec
stos
push
outsl
and
dec
sbb
and
xor
xchg
stos
outsl
mov
mov
sub
outsb
sbb
ret
jp
sub
outsb
divl
xor
pop
test
scas
js
pop
movsl
lock
ss
cmc
fs
jb
mov
pop
mov
jp
addr16
xchg
pop
lea
das
xor
sbb
jl
div
insl
mov
scas
orl
sbb
lret
mov
or
lret
rcl
aas
sbb
int3
lcall
shlb
or
sub
sti
mov
inc
lods
aam
push
lea
lcall
stos
in
mov
hlt
hlt
sbb
pop
mov
dec
mov
mov
sbb
inc
mov
pushl
sbb
mov
xchg
aam
ds
mov
mov
mov
add
repnz
mov
xor
pop
mov
mov
shll
mov
xchg
push
lock
in
dec
pop
push
and
dec
pop
fisttps
xchg
arpl
jnp
xchg
outsl
add
push
sbb
and
cmp
mov
es
scas
sbb
adc
jmp
xlat
add
mov
xchg
sbb
mov
jl
push
data16
dec
je
push
mov
mov
sub
loop
movl
push
and
iret
popf
stos
jmp
loope
xchg
push
ds
jo
pushf
and
mov
pop
clc
mov
and
sub
insb
fisubl
lods
mov
adc
into
mov
push
mov
and
out
movsb
add
inc
adc
shrb
xchg
dec
lds
mov
bound
daa
push
cmc
jmp
aad
mov
cld
push
adc
cmp
jecxz
add
or
loope
outsl
add
aaa
lcall
add
adcl
sbb
stc
adc
or
test
sahf
int3
add
decl
pop
aad
imul
fsubrs
and
clc
addr16
out
movsl
sti
daa
popa
mov
repnz
daa
imul
jecxz
inc
outsb
mov
mov
push
dec
push
stc
inc
xchg
or
jmp
mov
movsl
fs
and
inc
mov
push
push
ja
pop
fstps
notl
popf
dec
add
xor
iret
xor
in
into
jp
pop
lcall
scas
cmpsb
xor
in
add
xchg
sbb
ljmp
scas
iret
pop
sbb
adc
xchg
push
out
movsb
sub
shll
mov
mov
fwait
addl
stos
cltd
dec
lahf
mov
fsubrs
jg
mulb
add
jle
cmpsl
and
ror
sbb
mov
rcll
in
push
outsb
sub
push
cmc
or
jbe
jg
dec
mov
xchg
or
je
mulb
cmp
dec
adc
fldl
jge
jmp
ss
cmc
shlb
addb
sbbb
hlt
add
fs
imul
sbb
je
iret
xor
dec
dec
sub
fsubrp
push
cmp
adcl
sti
cmp
sarb
not
hlt
ds
arpl
cli
cmp
pop
icebp
inc
xor
cmpsb
add
jp
fisubrs
add
shr
clc
sub
icebp
pop
int
imul
idivb
sub
movsl
mov
push
xchg
lea
or
jmp
jbe
sub
add
push
pop
mov
adc
shll
cld
fs
popf
pop
aam
daa
inc
jb
rcll
or
pop
inc
jmp
jp
sub
jmp
mov
mov
xlat
push
pop
or
cmpsl
out
mov
loope
daa
jle
add
fcomps
fs
out
push
aad
xchg
mov
in
inc
pop
sbbl
repz
ljmp
xchg
xorb
popf
xchg
mov
test
inc
and
repz
xor
add
lret
cmp
jge
out
mov
insb
arpl
pop
sub
push
mov
lea
bound
arpl
or
or
mov
and
out
jp
into
sub
and
jmp
xor
xor
test
xor
push
insb
sub
sahf
xchg
mov
push
sub
cmc
sahf
mov
pusha
adc
jnp
inc
add
stos
dec
icebp
daa
sbb
hlt
jne
cld
adc
fnsave
dec
call
or
xor
das
mov
ficoms
mov
jbe
cmpsb
push
repz
outsb
or
lcall
adc
cmpsb
mov
mov
sbb
jmp
loop
aas
push
push
adc
add
push
cs
push
push
xor
adc
int
pop
filds
sahf
leave
or
sub
jl
test
adc
lcall
fisttpll
in
enter
mov
adcl
popf
daa
imul
jno
pop
mov
push
in
in
cmpsl
pop
fisttps
lods
aas
mov
mov
xchg
push
aam
mov
push
mov
decl
aaa
shrb
dec
mov
dec
hlt
bound
push
lahf
cmc
lahf
jp
push
daa
mov
mov
std
push
out
outsb
mov
pop
mov
je
or
mov
cmpsl
adc
inc
mov
mov
outsl
pop
imul
ret
add
sbb
mov
xor
icebp
jg
sarl
lock
jo
in
adcl
arpl
fadds
js
mov
jecxz
cmc
mov
xor
inc
hlt
pop
jbe
add
xlat
orb
mov
subl
adc
mov
lock
aaa
xchg
subl
loop
xchg
scas
sbb
pop
push
cmp
push
cmp
lock
jns
mov
jmp
xlat
mov
and
ja
pusha
sbb
mov
call
cmpsb
inc
mov
movsb
out
inc
imul
outsl
push
push
scas
std
push
dec
and
pop
lods
loop
aad
inc
sbb
mov
imul
sbb
inc
cmc
inc
cld
add
xchg
mov
xor
pushf
mov
mov
mov
add
inc
orl
in
cmp
in
push
scas
mov
cmp
shrl
fwait
inc
pop
dec
add
mov
mov
inc
inc
add
fwait
imul
insb
sbb
jl
xchg
out
xor
push
sub
aad
loopne
jne
fisttpll
jmp
fdivrl
pushf
outsl
lods
out
scas
rcl
aas
pop
or
into
into
lock
push
push
mov
in
mov
xor
mov
xor
push
mov
and
xor
push
push
jl,pn
adc
test
pop
in
lahf
aam
notl
mov
xchg
out
dec
sahf
filds
xchg
sbb
pushf
enter
lods
xchg
and
sub
mov
pop
out
fbld
inc
add
add
mov
lcall
ja
iret
pop
lcall
mov
adc
xchg
aas
mov
aad
mov
dec
dec
push
loop
or
sbb
pop
mov
fsubrp
add
pop
dec
mov
or
add
push
loop
test
cmp
jle
jo
cmp
lea
aas
imul
push
in
je
add
in
cmp
mov
je
popa
push
mov
lds
and
jl
clc
mov
or
mov
push
and
fstp
xchg
sub
into
repz
xchg
add
out
mov
dec
sbb
ret
sbbl
mov
cmpsl
cmpsl
lret
sarl
mov
pop
dec
jge
dec
movsb
jp
ficomps
jno
ret
pop
pop
dec
mov
cmp
adc
cmpsb
add
fimuls
out
xchg
pop
mov
mov
adc
pop
jne
push
dec
insb
push
and
inc
jmp
mov
or
inc
mov
mov
stos
add
xchg
adc
fucom
pop
xchg
jecxz
adc
mov
add
dec
scas
pushf
js
mov
dec
daa
cmc
and
test
into
mov
mov
stc
shll
hlt
jb
fadd
cmp
jb
add
fcomps
push
pop
daa
fstps
mov
stos
ss
lret
roll
in
aaa
cli
nop
add
xchg
outsb
sub
stc
jecxz
adc
adc
fimuls
add
fwait
inc
jg
in
cmpsl
rcll
inc
mov
jns
inc
adc
fidivrs
cmpsb
imul
int
lea
aad
jbe
push
mov
sbb
jnp
aaa
sbb
test
pop
lods
xchg
arpl
adc
cmp
mov
into
sub
cmp
ss
xor
insb
movntps
mov
aaa
xchg
pop
push
sbb
mov
pop
xor
jb
jle
lret
rcll
push
pop
adc
ljmp
hlt
jl
sbb
xor
mov
test
loopne
mov
in
dec
lods
and
push
sbb
xchg
ja
mov
adc
cmp
mov
push
subb
sbb
jle
mov
ficomps
xchg
sub
test
arpl
push
nop
pop
add
enter
sarl
je
pushf
fwait
lret
mov
test
xchg
jle
sub
inc
pop
add
jg
jmp
movsb
inc
or
and
enter
jbe
and
jns
fld
aas
aam
jmp
jecxz
hlt
movsl
xchg
push
xchg
aam
dec
lds
dec
je
or
shr
mov
xchg
call
movsb
stos
test
fucomip
cmc
xlat
cmpsl
mov
push
xor
jle
inc
mov
ret
loopne
mov
adc
in
insb
outsb
mov
dec
arpl
xchg
es
pop
movl
mov
cld
or
rcr
mov
sti
bound
mov
sbb
repz
sbb
rcll
xlat
sub
dec
pop
je
mov
adc
adc
int3
cmpsl
sbb
shlb
or
stos
dec
sub
and
int3
inc
pop
fcom
inc
sbb
mov
inc
sahf
mov
cs
or
movsl
inc
in
clc
push
imull
xchg
xchg
jmp
and
jo
and
test
cmpsl
cmpsl
mov
pop
mov
orl
movsb
mov
mov
fcompl
insl
sti
jl
push
xlat
hlt
sahf
or
sbbb
mov
cmp
test
push
xchg
push
out
into
push
daa
out
std
xchg
aam
cld
adc
aas
loopne
xor
mov
mov
test
xchg
popa
mov
inc
sarb
mov
rolb
stos
push
mov
cld
cltd
mov
sbb
fildl
test
sub
mov
xchg
or
sub
mov
int
lods
aaa
sarl
mov
adc
jmp
push
adcl
and
pop
arpl
adc
cmpsl
push
les
cmp
jp
test
test
xlat
jo
test
nop
jg
or
push
stos
add
cmc
inc
jmp
and
adc
pop
iret
lret
mov
sahf
outsb
jmp
mov
or
add
out
inc
out
pop
inc
inc
sbbl
orb
fwait
xor
fstl
imul
pushf
cmpsb
xor
cmc
xor
pop
jmp
mov
sub
push
xchg
jmp
add
in
stos
in
mov
repz
fidivrs
cmp
push
insb
mov
and
push
adc
in
adc
mov
repz
and
lret
scas
dec
push
add
mov
push
movsb
inc
cmp
lcall
or
dec
cmp
lods
or
inc
lds
xchg
jnp
outsb
cld
test
push
push
mov
lret
int3
jmp
adc
dec
xlat
jg
push
xor
jl
std
mov
dec
cmp
xchg
mov
addl
repz
fwait
xchg
test
popl
and
sti
addr16
push
fildl
xchg
push
adc
enter
mov
out
ret
push
test
mov
jecxz
pushf
mov
sbb
sbb
movsl
scas
and
ret
pop
shrb
sub
push
fcmovnu
fcomip
and
fwait
incb
xchg
test
leave
popa
add
add
inc
in
lcall
movsl
xor
ljmp
fwait
dec
out
xchg
mov
xor
nop
sbb
xor
inc
pop
sbb
xor
mov
addr16
push
mov
fildll
xchg
dec
out
in
inc
mov
jbe
in
xchg
jge
mov
in
and
cmp
pop
nop
mov
mov
mov
stc
in
test
lahf
ficomps
add
lahf
fbld
dec
jno
cld
push
stos
adc
dec
dec
int3
push
inc
test
cmp
jns
cmp
xlat
lock
daa
xchg
xchg
pop
xchg
jmp
aam
pop
loop
inc
scas
testl
dec
sbb
mov
mov
in
dec
push
insl
dec
cmp
jge
rcrb
fldenv
adc
push
sub
pop
mov
test
in
adc
mov
mov
sub
fwait
sub
repnz
mov
aaa
test
inc
aad
pusha
pmulhuw
popf
mov
lret
pop
stos
roll
mov
add
and
dec
pop
add
int
call
imul
push
insb
icebp
mov
cmpsb
and
stos
bound
and
mov
dec
adcb
je
adc
lds
jmp
push
lock
mov
rcrb
std
inc
cmp
or
imul
lcall
hlt
call
leave
rcrl
mov
cmpsb
pop
jno
jb
mov
push
cmp
lods
das
fwait
rorb
imul
clc
aad
stos
gs
xor
fldcw
sub
xor
fstpl
divb
lods
xchg
mov
cwtl
pop
clc
jecxz
push
push
and
je
mov
mov
mov
jb
dec
fidivrl
jmp
cmpsb
adc
mov
jg
cli
pop
jg
rorl
pop
cld
push
lahf
mov
sub
jge
frstor
fcom
fisubl
shlb
cld
pop
les
sahf
lds
mov
add
mov
cmp
mov
pushfw
adc
sbb
into
mov
lock
imul
pop
push
decl
lods
enter
loop
add
adc
popf
fadds
je
lahf
mov
mov
adc
mov
adcb
lcall
and
cmpsl
je
xor
mov
out
adc
sub
mov
popa
in
lds
mov
mov
adc
dec
popl
cmpsb
adc
sub
fdivp
xor
fildl
xorl
movsb
mov
or
fldl
jns
pusha
sub
imul
push
inc
dec
or
rorb
jmp
add
test
arpl
sub
push
das
mov
mov
bound
adc
dec
push
add
test
and
inc
mov
enter
shl
cmp
xchg
mov
inc
imul
aad
push
pop
cltd
test
xchg
sbb
jp
jmp
int
sbb
pusha
mov
inc
or
push
pop
and
icebp
rcr
sbb
push
sbb
out
fildll
les
subl
insl
jns
jg
xor
inc
icebp
xlat
mov
add
js
dec
lret
sub
in
incb
cmc
std
jp
fistps
xor
sbb
mov
cmp
rclb
inc
add
sub
imul
mov
jle
in
and
ljmp
mov
fdivrl
mov
pop
popa
sub
cli
pop
mov
ja
in
jecxz
sub
dec
cmc
jp
rcrb
adc
and
insl
lcall
into
into
dec
or
push
iret
add
ss
loope
dec
in
mov
push
sbb
sahf
stos
jmp
sub
fwait
xor
ljmp
mov
movsl
or
in
iret
test
aad
jo
inc
push
pop
push
shll
pop
into
push
out
outsb
loope
jae
mov
push
mov
andl
sub
iret
dec
xlat
add
jo
cmp
add
lahf
xchg
out
adc
daa
inc
cmp
lea
call
push
sbb
das
add
call
das
fbstp
push
cmpl
call
push
adc
es
cld
mov
fidivrl
aam
lock
pop
inc
popf
sbb
fwait
cmpl
scas
dec
fnstcw
add
xor
sbb
sbb
fs
lods
out
mov
popf
mov
inc
clc
mov
int
test
addl
jns
enter
push
pop
sbb
jns
mov
iret
rorb
sub
adc
mov
add
sub
and
jnp
inc
flds
mov
repz
rcrb
dec
xchg
and
jge
mov
mov
inc
rcl
scas
sub
and
pop
mov
in
sbb
cmc
ror
mov
and
fistpll
jne
sub
clc
pop
pop
mov
ss
iret
ljmp
xchg
clc
cmp
push
aam
int
xchg
push
xchg
sub
push
add
enter
jno
and
or
out
imull
fprem
push
fnstsw
addr16
xor
cld
ds
adc
jle
xchg
lods
mov
xchg
or
adc
icebp
or
inc
sub
mov
std
bound
xchg
int3
mov
jo
out
pop
pop
jne
out
inc
jp
sbb
and
and
mov
dec
lods
xor
inc
inc
or
dec
insb
adc
xlat
or
jae
xchg
push
pushf
push
cmpsb
xchg
dec
mov
daa
push
adc
call
add
push
decl
movq
push
cmpsb
or
or
fs
jmp
inc
movnti
js
gs
rolb
sub
cmp
in
ss
pop
cmp
iret
decl
insl
andl
js
add
dec
ret
stos
aad
in
imul
jns
aad
ss
push
stos
push
mov
jl
jbe
xchg
and
shlb
stos
arpl
stc
bound
add
pop
pop
daa
sbb
jne
popa
and
int3
add
test
pop
xor
lods
loopne
jbe
iret
bound
daa
faddl
test
sub
ss
frstor
push
shlb
push
dec
push
mov
sbb
jmp
or
outsl
add
jbe
sub
sub
pop
arpl
decl
adc
fstpl
xor
leave
stc
mov
shlb
push
pop
or
cmpsl
push
jl
mov
cmp
cltd
fcmovbe
lahf
pop
int3
enter
and
aad
or
xor
aaa
fdivrp
push
int3
nop
add
scas
or
adcl
test
cmp
mov
sub
iret
sbb
inc
hlt
inc
fwait
in
cli
outsl
leave
adc
push
movsl
dec
lahf
push
adc
and
int3
enter
dec
and
cwtl
and
aad
loopne
push
sarb
dec
clc
daa
or
int3
int
mov
inc
fistl
jns
cmp
xor
int
mov
in
mov
lods
mov
mov
fisubl
jae
mov
xchg
mov
hlt
movsl
and
rclb
cmp
aas
add
jecxz
popa
mov
xor
dec
or
jg
mov
shlb
test
lock
mov
or
adc
ljmp
mov
mov
add
push
sub
ds
sbb
and
pop
imul
lock
imull
pop
fisubrs
sti
repz
outsb
dec
fcoms
adc
decl
test
das
lods
scas
fwait
outsl
cmp
movsb
es
movsl
and
fsts
pop
inc
cmpl
push
stos
mov
or
mov
fcmovnu
cli
mov
and
xchg
aam
push
data16
fiaddl
mov
aam
out
arpl
and
cmpsl
lret
jns
scas
mov
roll
lods
push
fmulp
movsb
in
sbb
rcrl
out
push
sbbb
ffreep
cmc
mov
sbb
pop
out
dec
pop
imul
push
shl
movsl
inc
add
sbb
loop
and
add
inc
cmp
inc
mov
into
sub
incb
fwait
add
pop
push
mov
jmp
out
mov
outsb
mov
fwait
push
adc
push
xchg
push
lds
jns
lods
mov
in
pop
loope
adc
out
lds
mov
mov
into
sti
les
inc
fcmovbe
mov
mov
jl
xchg
cmpsl
inc
push
popf
push
jbe
mov
sbb
inc
lods
dec
cmp
xor
push
xchg
mov
add
cmp
mov
push
aam
insl
adc
in
shll
mov
pushf
adc
jno
sti
mov
xor
dec
xchg
ror
in
nop
lahf
sti
lret
add
dec
xor
sub
sub
push
cwtl
aad
sbb
inc
adc
pop
leave
jbe
clc
mov
or
out
cwtl
jge
mov
cmp
dec
repz
int
test
ret
xchg
in
into
mov
test
dec
sub
shrb
push
pop
pop
and
push
rclb
stc
inc
scas
adc
cmp
js
push
subb
ret
repnz
xchg
movsl
ret
sub
insb
mov
push
cmpsl
cs
jge
jmp
jno
in
jp
movsl
std
sub
imul
repz
shrb
aas
push
add
adc
bound
rcll
mov
test
or
lock
inc
push
scas
cmpsb
jns
js
push
mov
movsl
pop
mov
fdivl
push
mov
fs
mov
pop
aaa
das
and
jecxz
sarl
and
push
cmp
dec
jp
push
lret
jmp
xlat
fistpl
add
mov
xchg
xchg
cltd
xchg
xchg
ret
clc
lcall
inc
sub
sahf
out
mov
scas
sahf
and
popa
gs
imul
imul
jecxz
mov
mov
adc
adcl
sbb
lcall
pop
ljmp
imul
xor
cmp
fucomp
lcall
mov
mov
iret
loope
or
pop
popa
push
sahf
mull
mov
adc
cld
sbb
repnz
or
insl
cli
add
jb
lcall
or
dec
loopne
xchg
inc
xchg
ror
mov
xlat
lods
sub
mov
mov
mov
dec
pop
xchg
cld
push
jb
call
cmp
add
ret
push
test
int3
push
fcmove
loop
or
hlt
xchg
fidivrs
lret
ljmp
pop
pop
mov
jo
in
stc
cmpsb
repz
in
iret
mov
adc
dec
enter
sarb
dec
lods
dec
jne
jns
daa
les
popa
xor
jne
das
mov
inc
or
in
imul
inc
das
enter
loop
sbb
enter
sti
clc
fs
push
jae
fisttps
xchg
add
std
sahf
lret
repz
mov
jno
push
test
jle
clflush
push
fld
adc
loop
lock
xlat
aam
int
add
call
sbb
mov
add
jp
fnstenv
fmuls
adc
iret
inc
cmp
mov
push
adc
addl
push
fstps
leave
or
xchg
add
xor
scas
aaa
pop
push
stc
pusha
mov
mov
pop
sarl
bound
test
dec
popa
sub
mov
call
or
stc
ficompl
add
stos
pop
mov
jb
mov
stos
lahf
sbb
es
jg
lods
sbb
bound
pop
loop
loop
scas
mull
pop
cmp
mov
int3
std
mov
sub
mov
test
sbb
mov
jmp
lods
add
mov
cmp
ret
lahf
in
cld
and
mov
sti
mov
add
sahf
rorl
add
dec
push
mov
push
in
aas
sub
es
test
sbb
es
ficompl
test
lods
sti
outsb
and
pop
in
ret
mov
stos
xor
icebp
rorb
lds
adc
pop
fidivrs
lret
dec
xor
dec
mov
push
nop
adcl
add
cltd
sub
sarl
jb
push
int
bound
push
fadd
dec
scas
ja
pusha
inc
fwait
pop
adc
adc
push
xchg
push
inc
jae
lods
jg
outsb
testb
nop
inc
lahf
jmp
jne
push
push
cmp
scas
out
lock
xchg
ljmp
jle
addl
int
test
rcr
dec
xor
sub
int3
jnp
loope
cmp
push
pop
sbb
jae
mov
daa
stc
cld
push
loopne
sti
and
popa
inc
sub
cs
divl
mov
mov
dec
push
sbb
sub
pop
sub
jge
cwtl
mov
faddp
cltd
adc
or
lcall
cwtl
add
scas
or
pop
dec
test
stos
mov
loopne
dec
mov
out
or
mov
mov
fs
sub
cmp
sub
push
add
adc
lods
sub
pop
inc
dec
mov
aam
cmpsl
aas
push
sbb
cld
add
and
adc
cmc
popa
mov
pop
jle
sbb
xor
negl
sahf
inc
add
aaa
stos
xor
push
aam
cmpsl
jbe
cmpsl
push
sbb
movsb
push
outsl
mov
in
xor
in
jecxz
ror
inc
add
pop
imul
mov
pop
push
xor
jg
push
mov
lret
adc
push
sub
clc
movsl
mov
std
and
inc
push
push
dec
xchg
hlt
in
rcll
sahf
pop
icebp
jno
lock
incb
fsubrl
pop
mov
pop
mov
aad
push
mov
or
dec
stos
pusha
jns
jp
push
inc
adc
cld
add
lahf
lods
adc
outsb
mov
cmpb
sti
mov
fnsaves
es
cmp
out
lret
or
lret
loope
push
mov
es
lret
jns
xor
mov
add
fs
adc
xlat
data16
aam
mov
cli
mov
scas
mov
lods
mov
movsl
inc
and
rcr
fs
xchg
sub
scas
pusha
outsl
push
aam
or
pop
cltd
jo
dec
popf
scas
mov
int3
xor
imul
iret
pop
mov
mov
dec
out
inc
xor
sub
movsb
add
scas
pop
xor
push
fildl
in
sti
push
movsb
pop
addb
cmp
jge
inc
or
out
sub
inc
push
out
mov
sub
cmp
loope
mov
cli
iret
rol
dec
add
imul
test
sbb
xlat
call
cmp
ljmp
push
mov
das
in
mov
ret
mov
jb
fidivl
mov
inc
adc
mov
mov
xor
icebp
add
outsl
test
leave
sbb
movsl
add
sub
xor
adc
shll
sub
mov
pop
pop
sbb
andl
xchg
fisttpll
jno
mov
aas
pop
lcall
jne
push
orb
pusha
outsl
stos
push
mov
mov
mov
add
xchg
cmp
fstpl
out
cmp
xchg
fdivrs
lods
mov
and
int3
jecxz
fldt
dec
adc
iret
lahf
sbb
xchg
cmp
mov
lods
sar
xor
fdivrl
cmpsl
mov
ret
in
testb
clc
and
mov
movsl
xchg
dec
aaa
sbb
inc
or
sbb
mov
mov
or
add
in
ljmp
inc
add
outsb
gs
daa
test
bnd
xchg
les
movsl
movsb
xchg
pop
out
in
outsl
push
pop
mov
repz
fists
dec
mov
cmp
in
add
add
pop
aam
jecxz
das
lods
js
jp
sbb
test
fiadds
xchg
int3
add
pusha
mov
aad
pop
jbe
mov
leave
sub
fs
mov
add
mov
xor
setne
jp
mov
mov
and
cmc
adc
dec
movsb
ret
sbb
adc
or
lahf
movsl
shlb
push
loopne
orb
in
pop
sbb
inc
mov
or
inc
les
xor
lcall
mov
pop
pop
pop
shlb
add
sbb
cltd
jge
pop
cmp
inc
cmpl
test
leave
jbe
sbb
rcrl
movsb
xor
pop
push
lock
push
repnz
mov
and
scas
cmp
sub
jnp
gs
adc
movsl
imul
xchg
mov
lahf
add
les
pop
fmull
push
mov
dec
sbb
sbb
ror
or
je
pushf
cmp
inc
cltd
dec
push
xchg
std
lods
xchg
sbb
pop
xchg
add
or
xchg
pop
pusha
inc
xchg
rcl
inc
push
cmp
scas
fists
sbb
aam
popa
ret
xor
in
push
stos
sub
in
lock
pushf
adc
stc
push
clc
fisubl
movsl
cmp
push
push
lock
push
mov
lret
adc
cmp
cli
data16
or
sbb
in
movsb
cmp
arpl
sub
je
add
cmpsw
add
inc
mov
addb
movsb
push
add
cmc
std
daa
mov
xchg
fdivrs
or
xchg
pop
jp
sbb
shlb
jge
into
movsl
and
xor
mov
scas
stos
lret
into
ljmp
popl
bound
inc
mov
push
jle
movsb
lcall
sub
cmovs
mov
sub
cmp
xor
mov
push
xchg
push
mov
push
push
mov
add
xor
cmp
fwait
pop
hlt
push
cmc
mov
pop
lret
cs
in
cmp
sub
xor
mov
xchg
pinsrw
out
push
push
xchg
rorl
pusha
lds
fldt
pop
cltd
test
mov
out
or
push
nop
lock
stos
roll
push
cwtl
xor
stos
xchg
stc
mov
or
movsb
call
cmp
pop
hlt
sub
rclb
ja
mov
push
fidivl
and
mov
test
and
fstl
add
fxch
cmpsl
sarb
push
les
mov
divb
push
mov
push
inc
mov
repnz
jecxz
pop
and
out
xor
cmp
sub
das
test
inc
jle
lock
je
test
cmpsb
pushf
mov
icebp
aas
outsl
pop
popa
push
mov
cmp
cmp
pushf
outsl
or
xor
dec
xorb
cmp
nop
sets
scas
jmp
pop
mov
mov
call
jae
pop
cmp
mov
aas
push
xchg
loope
sbb
sbb
aas
testb
xchg
dec
adc
aad
sbb
mov
pop
fdivs
ljmp
hlt
fiaddl
mov
jmp
arpl
sub
iret
aam
add
icebp
mov
lods
mov
sarl
ja
icebp
sbb
adc
out
scas
xor
mov
cli
les
and
cmp
bound
inc
jo
outsl
andb
adc
push
push
dec
mov
pop
inc
ljmp
fs
xchg
shl
cmpsl
mov
mov
pop
inc
jg
imul
rcrb
pushf
pop
lcall
pop
mov
cld
mov
rorl
push
dec
jnp
shl
jmp
add
mov
loopne
mov
dec
sahf
jno
fwait
mov
or
ffreep
lds
mov
sti
loop
mov
sub
es
cmp
adc
cld
iret
xlat
popf
adc
inc
mov
and
inc
sbb
mov
imul
mov
jp
movb
mov
cmp
repnz
push
fstp
sbb
cld
mov
enter
ss
push
jmp
mov
repz
cwtl
fidivrl
bound
sub
push
pop
imul
push
int3
sbb
ret
stos
out
imul
mov
fisubrs
adc
lods
gs
mov
into
pop
sbb
inc
pop
push
test
mov
dec
mov
xchg
lods
jl
mov
pop
mov
push
nop
xor
dec
pop
addr16
ljmp
dec
fisttps
sbbb
lods
sbb
js
pop
in
loopne
dec
out
jnp
mov
jae
mov
leave
jae
mov
scas
xchg
daa
push
aad
jecxz
icebp
test
and
mov
adc
scas
lds
les
pusha
faddp
ret
ja
pop
lret
fwait
cltd
fs
int3
sbb
mov
stos
or
aam
aas
sbb
mov
icebp
or
fimull
gs
and
insb
mov
jb
adc
call
jecxz
mov
cmpsl
push
aas
shlb
cs
ljmp
jae
stos
inc
inc
mov
call
cld
jno
adc
cmp
xor
cmp
sub
jle
xor
sbb
sbb
and
pusha
or
aad
std
imul
sbb
sar
mov
fdivs
fisubrl
inc
xchg
lahf
and
sub
into
test
push
push
sbb
dec
jge
lods
cmp
pop
call
jae
adc
jge
xchg
cmc
orb
iret
in
lret
lret
cmp
xchg
pop
mov
lcall
cltd
dec
push
or
roll
mov
cltd
pop
push
lahf
pcmpeqb
inc
push
test
mov
mov
frstor
jl
cmpb
jmp
shll
rclb
imul
rcll
fistpll
jmp
pop
cs
add
inc
jo
andl
mov
mov
pushf
cmp
das
ror
dec
add
inc
cwtl
stc
add
inc
clc
cmpsb
xor
shl
sbb
fstps
cltd
and
adc
test
inc
daa
inc
fs
daa
mov
mov
stc
mov
jno
mov
sub
adc
mov
jmp
push
int
sbb
ret
push
mov
xor
addb
push
pop
mov
out
out
stc
and
pop
test
pop
xchg
jbe
sbb
mov
cli
push
out
jmp
adc
mov
lea
clc
sbb
int3
iret
xchg
pushf
cmpsl
sbbb
les
inc
ja
and
sub
mov
jne
pop
jae
push
mov
int3
mov
mov
push
mov
cs
mov
pop
mov
lahf
push
or
mov
scas
pop
xlat
add
stc
xor
push
pop
cmp
pop
xchg
and
shlb
stos
mov
in
pop
test
jmp
movsb
mov
dec
clc
pop
xchg
push
xor
cmpsl
aad
sbb
xor
inc
leave
adc
cmp
fldl
xor
cmp
test
out
flds
nop
inc
leave
imul
pop
pushf
pop
ret
mov
addl
pop
je
in
sbb
mov
rclb
in
pop
pop
pop
rcl
ror
data16
aas
arpl
lods
out
aaa
push
pop
mov
or
cltd
cmp
jne
cmp
adcb
pushf
test
mov
mov
push
repnz
mov
add
pop
sbb
jbe
test
fnstcw
shlb
ret
jg
jne
add
icebp
lahf
lock
jp
hlt
dec
mov
fbld
push
inc
push
out
mov
stos
in
ds
imul
les
call
fsubrl
pop
xor
inc
sahf
mov
pop
mov
mov
adc
mov
lret
fildl
pop
xchg
fcoml
dec
push
push
repz
mov
mov
cmp
cmp
aaa
je
dec
mov
inc
inc
clc
std
sub
stos
sbb
fsubrp
mov
cmc
in
fistps
popa
add
xor
push
adc
jne
adc
scas
mov
or
popf
ss
sti
and
pop
dec
in
imul
mov
dec
test
fmull
mov
stos
sbb
mov
test
sarb
sub
ss
movsl
mov
aad
lcall
or
pop
sarl
test
cld
sub
xchg
inc
push
mov
sbb
mov
pusha
jnp
shl
mov
inc
shrb
dec
inc
jmp
push
sbb
js
push
movsl
dec
mov
fwait
das
sbb
mov
jg
addr16
test
aam
xchg
add
jge
jg
out
push
xchg
push
stos
push
loopne
adc
pusha
enter
mov
mov
test
out
cs
cwtl
mov
mov
push
jge
aaa
rol
xor
xchg
add
dec
dec
int3
cli
mov
loopne
std
negb
into
mov
test
insb
add
lret
mov
xor
and
in
not
mov
aaa
jns
scas
and
outsl
negl
int
mov
and
pop
sub
or
ss
xchg
fwait
pushf
repnz
push
sub
in
jp
xlat
add
inc
mov
into
adc
insb
fcompl
lret
sbb
sarb
lods
movsb
lret
dec
lods
dec
and
mov
out
test
test
lods
out
daa
pop
sbb
pop
incl
push
adc
jb
lea
cmp
push
xchg
pusha
cmp
and
jnp
daa
outsb
and
imul
pop
push
push
movsl
jle
ljmp
mov
fstpl
fisttpl
jl
pop
out
mov
lcall
or
pop
mov
inc
xchg
jl
movsl
orb
hlt
lret
xchg
cli
mov
push
rolb
push
xchg
fbld
pop
add
and
mov
mul
icebp
and
dec
enter
stos
lock
pop
test
loopne
dec
lcall
jg
xchg
push
push
jb
ljmp
fnsave
pop
in
mov
push
mov
cmp
xchg
dec
test
sub
fimuls
aam
or
mov
in
mov
lods
into
ja
fwait
ds
pop
stos
push
sub
in
mov
dec
scas
and
movb
fnstenv
shl
and
or
aam
xor
enter
mov
inc
pusha
mov
imul
in
loope
fwait
hlt
jo
xchg
cwtl
mov
out
into
movsb
xor
jb
jb
lds
jns
pop
clc
rolb
mov
icebp
inc
fcmovnu
and
jb
jbe
or
leave
test
icebp
loopne
shlb
sbb
add
jmp
mov
in
sbb
pop
and
or
rcrl
mov
add
sbb
mov
dec
inc
fldl
mov
inc
add
inc
push
adc
outsl
fbstp
cmpsb
insb
mov
aas
mov
or
scas
scas
mov
or
mov
aas
jmp
stc
fs
mov
sbb
pop
xor
mov
and
aas
mov
cmp
lea
fstp
pop
mov
loope
mov
idivl
xor
or
ficomps
mov
cmpsl
xlat
push
arpl
mov
inc
mov
sbb
popa
out
jge
lock
leave
push
mov
into
outsb
mov
push
fwait
mov
or
daa
sahf
inc
notb
xchg
imull
inc
pop
stos
pop
shlb
cmp
popf
xchg
cmpsb
cld
adc
daa
rclb
stos
sub
jb
lcall
fsubs
xchg
inc
lods
sub
or
frstor
std
mov
dec
into
cbtw
loopne
and
popa
mov
mov
xchg
int
test
jo
popf
cs
push
push
mov
xor
scas
adcl
jo
jl
lock
push
xchg
sbb
scas
xor
shll
sub
mov
pop
pop
push
outsl
cmpsl
push
mov
cmpsb
pop
ret
fwait
adc
push
fisubrl
pop
adc
test
jb
add
cs
jb
pushf
or
sub
outsb
cmpsl
xchg
lods
test
mov
and
stc
jb
adc
add
or
xorb
pop
pushf
pop
dec
inc
addb
fsubrl
inc
addl
pop
pop
into
icebp
enter
or
rcrb
insb
ret
push
idiv
jp
jno
inc
cmpb
xor
mov
cwtl
mov
lcall
inc
pop
adc
dec
xor
rcrl
adc
icebp
push
icebp
inc
imul
arpl
testb
sbb
mov
mov
ret
dec
not
movsl
jle
xchg
ror
cmp
cltd
cld
frstor
je
inc
jg
dec
mov
es
dec
or
outsl
xor
mov
sbbb
xor
out
out
mov
lods
gs
xlat
out
cmp
mov
sbb
arpl
fidivrs
adcl
stos
rol
adc
sub
xchg
test
fdivrl
pop
fdiv
sub
shll
cli
mov
repz
ss
test
push
add
jmp
leave
std
pop
cld
mov
popa
xchg
inc
das
mov
mov
fsubl
insb
xchg
pop
add
push
lock
aas
in
cmp
mov
jmp
test
rolb
mov
pusha
xor
jge
cmp
test
mov
rolb
sub
daa
pop
adc
cs
add
sahf
cmc
inc
fisubrl
lret
inc
cwtl
xor
int
pop
mov
insl
sarl
jno
sbb
stos
pusha
dec
insb
and
scas
push
jge
cmp
fnstenv
sbb
adc
sbb
add
inc
adc
rorb
dec
aad
pop
or
lock
sub
in
sbbb
pop
mov
divb
test
in
mov
popf
inc
xchg
push
pushf
subl
add
lcall
dec
mov
push
les
movsl
loope
sub
xchg
push
sbb
adc
mov
inc
pop
cmp
pop
popa
imul
jbe
jmp
test
xchg
and
lcall
add
pop
lods
push
ds
xchg
loop
mov
lret
or
xor
call
inc
dec
call
xchg
dec
popf
pushf
dec
adc
fcomps
jno
scas
es
int
test
xor
xor
clc
dec
std
add
fwait
lods
dec
repz
inc
or
push
and
in
mov
mov
test
nop
js
aaa
and
mov
cmovnp
pushf
sub
out
mov
add
sbb
dec
push
push
jl
push
sbb
andl
sti
fwait
sbb
mov
jne
xchg
arpl
imul
mov
sahf
cmpsb
sbb
sarl
cmpsl
mov
push
imul
mov
in
sub
mov
sar
mov
add
add
mov
mov
cmp
sbb
mov
sub
ror
pushf
popf
ds
pop
dec
pop
scas
mov
arpl
call
pushf
and
push
push
test
push
iret
mov
sub
push
mov
add
outsl
sub
add
xchg
pop
out
and
es
inc
inc
mov
das
pop
push
sub
daa
sub
xchg
sbb
pusha
loopne
inc
push
pop
lock
pop
mov
mov
xor
sarl
mov
aam
dec
leave
pop
or
pop
int3
or
aas
mov
shlb
mov
adc
test
subb
inc
sbb
rolb
mov
jb
mov
xchg
xchg
ljmp
cmp
fdivr
out
pop
movsb
clc
fsubl
and
aas
cwtl
xchg
in
and
lret
add
add
or
scas
adc
xor
call
push
mov
lret
shrl
lahf
je
out
imul
xlat
sbb
push
xchg
inc
xlat
mov
lret
stos
add
outsl
inc
lret
aam
adc
dec
sub
fwait
jmp
add
ja
mov
testl
ret
inc
cmpsb
or
jae
imul
and
out
push
sti
and
aaa
push
notb
cmp
enter
subl
repnz
xchg
xchg
pop
fstpl
sti
imul
aaa
rorb
je
scas
fists
unpckhps
aad
es
shlb
xor
xor
hlt
scas
or
mov
mov
dec
aad
cs
adc
les
add
filds
movsl
mov
add
imul
cwtl
dec
lea
jmp
sbb
insl
rol
nop
inc
mov
aad
in
shl
lret
dec
hlt
sub
add
push
imulb
pop
insb
into
insl
iret
adc
mov
add
mov
cltd
fwait
stos
insb
mov
loope
push
dec
imul
ja
mov
adc
lahf
dec
xor
in
lods
xchg
jb
bound
inc
lock
pop
cmp
mov
push
push
ljmp
pushl
dec
shll
js
add
loop
sbb
cmp
into
setge
and
inc
out
xchg
cltd
aam
cmp
inc
adc
cmp
and
cmc
pop
xor
into
push
ljmp
and
pop
xchg
fisubl
sub
fwait
mov
outsl
sbb
mov
sbb
ljmp
stos
dec
rcll
xchg
hlt
dec
mull
add
mov
cwtl
loope
dec
into
js
aam
dec
data16
sahf
mov
test
data16
xor
jae
jg
lahf
lods
aaa
in
call
mov
sti
pop
fiadds
les
stc
sar
adc
mov
pop
in
shrl
cmpl
add
adc
sarl
add
inc
cmpsb
stc
jne
clc
push
push
inc
inc
out
insb
cmpsl
dec
push
leave
mov
or
cmc
je
fmul
push
inc
inc
and
add
xchg
fstp
sbb
call
inc
fcomps
or
popa
fldl2t
adc
scas
into
inc
sbb
push
inc
adc
fisttpll
sub
cltd
mov
inc
push
xor
add
push
gs
cld
int3
add
push
inc
inc
scas
mov
fldt
jecxz
mov
fdivl
mov
popf
mov
pop
cltd
ljmp
in
in
dec
scas
movsl
jecxz
shll
jle
push
mov
pop
cmpsb
add
mov
dec
pop
outsb
out
testb
push
mov
cwtl
hlt
into
mov
aam
mov
xor
or
popf
mov
arpl
mov
adc
or
mov
adc
lret
xor
push
dec
iret
cmp
out
cmp
xchg
enter
dec
jns
sarl
jp
or
push
dec
fidivrs
adc
mov
xchg
jl,pn
cwtl
pop
push
int3
sbb
push
sbb
add
mov
xor
mov
mov
ss
xchg
or
fisubl
inc
scas
sbb
dec
jns
jecxz
adc
sarl
push
dec
out
jl
dec
rcrb
out
mov
clc
mov
pop
mov
mov
call
dec
inc
lods
pushf
push
xchg
repz
gs
xchg
addr16
outsb
in
leave
pop
inc
add
jae
aam
loope
std
lods
pop
sbb
mov
cmc
outsl
cmpsl
das
adc
adc
mov
out
nopl
xchg
or
push
shlb
jge
lock
sub
mov
and
bnd
inc
cmpsb
mov
call
and
movb
clc
dec
xchg
divb
adc
adc
imull
cmp
jb
cmp
fisttpl
mov
test
mov
or
pop
sbb
mov
arpl
sbb
dec
outsb
repz
add
fsubrp
inc
nop
int3
sub
lret
dec
dec
xor
sbb
dec
js
mov
roll
push
es
push
mov
fistps
leave
adc
cld
xchg
loopne
mov
mov
loope
lea
pusha
iret
mov
ljmp
aad
jns
inc
lcall
and
xchg
imul
pop
inc
mov
push
out
les
int3
lcall
sub
je
and
shl
test
adc
xchg
cmpsb
popa
sub
nop
out
push
or
inc
clc
xor
cmp
les
js
lods
fisubs
sub
sbb
inc
ret
icebp
fldt
cmp
addr16
lahf
jp
in
inc
adc
or
add
cmp
add
shlb
neg
fdivs
jnp
inc
scas
aas
int
push
jecxz
mov
dec
mov
nop
mov
jae
leave
cltd
push
mov
xlat
mov
js
pop
subb
out
or
push
xor
cli
pushf
fidivs
pop
fwait
negl
or
sti
rol
outsb
and
adc
sub
bound
mov
xor
in
add
push
jbe
dec
arpl
pop
idivl
or
sub
repnz
lahf
loope
sub
popa
dec
add
movsl
scas
popf
sbb
jp
pop
sbb
dec
mov
or
sti
fwait
sbb
jge
mov
in
ljmp
sets
add
jno
scas
rcll
sbb
xchg
push
scas
out
pop
in
jmp
ret
stos
fiadds
js
decb
xchg
js
fmull
pop
jg
js
ret
mov
or
shll
enter
lea
insb
loopne
dec
xor
dec
fisttpl
push
inc
mov
cvtps2pd
jae
push
jp
xchg
jmp
cmp
daa
mov
push
decl
inc
stos
jle
jno
jbe
rcrl
sub
lahf
adc
dec
loop
test
outsb
jg
mov
cli
ljmp
out
adc
lods
dec
inc
dec
inc
bnd
rolb
popa
jl
adc
loop
repz
test
sbb
cmp
mov
push
pusha
or
jo
mov
mov
cli
sub
mov
cmpsl
inc
out
xchg
stos
add
adc
adc
rep
dec
mov
dec
push
js
and
stc
std
lret
push
mov
orb
inc
mov
mov
jne
stos
mov
mov
sbb
imul
mov
loope
xor
cmp
in
je
cmp
aam
cmp
test
aad
aas
fadds
pop
push
pop
and
call
aam
and
add
sub
sbb
insb
inc
mov
lcall
sub
cwtl
push
mov
jbe
inc
pop
dec
sbb
fs
call
mov
idivl
daa
cmp
jecxz
pop
lock
mov
mov
stc
pop
push
jle
xor
mov
call
inc
mov
sbb
adc
movsl
and
jg
repnz
cwtl
lsl
inc
shll
adc
lret
or
inc
in
das
aas
and
inc
pop
mov
in
sbb
cmc
jo
nop
bound
mov
mov
xor
shr
push
xchg
into
in
add
cmpl
push
andb
xchg
enter
sbb
push
repz
inc
xlat
push
sbb
inc
mov
adc
orb
call
add
scas
xchg
cmp
enter
jb
fucomi
xor
xor
mov
loope
dec
scas
push
dec
les
pop
imul
lds
lahf
xor
fisttpl
xchg
mov
repz
daa
sti
mov
ret
add
test
and
mov
in
dec
icebp
mov
ficompl
ds
sub
sbb
mov
and
nop
aaa
mov
fwait
mov
push
mov
lods
push
loope
mov
int
push
inc
sti
mov
jp
pop
aaa
xchg
xor
cmp
mov
stos
mov
mov
push
nop
mov
cmc
aam
fistpll
out
jne
repnz
loop
mov
xchg
mov
push
jl
pop
adc
test
jo
sub
in
lods
sahf
pop
jbe
into
and
fucompp
call
vandpd
sbb
sub
adc
mov
adc
mov
jp
jge
and
pop
mov
or
inc
fadds
mov
lods
and
inc
divb
cwtl
or
bound
mov
jmp
push
lock
lcall
lret
inc
rorl
test
test
mov
dec
cmp
aad
stos
in
sbb
loopne
dec
mov
lcall
enter
out
lea
and
ss
daa
adc
movsb
in
xlat
sub
cmp
shrd
mov
mov
pop
mov
or
push
push
ret
into
fisttpll
push
mov
mov
in
or
mov
jnp
fstp
lret
sbbl
and
pop
jae
sti
push
sbb
xchg
gs
idivl
stos
mov
fsubrp
dec
pop
lods
add
sub
imul
sti
mull
or
dec
lds
xor
mov
xchg
ds
pop
fcoml
fidivs
dec
rolb
scas
addr16
cmp
xchg
lret
outsl
sti
push
lcall
xor
dec
xchg
sub
jge
mov
jbe
aas
sahf
pop
adc
scas
fdivs
rcrl
push
cmc
test
pop
jo
sbb
pop
push
push
xchg
arpl
jl
inc
push
xlat
inc
je
mov
jle
aaa
lret
add
add
stos
movsb
push
mov
push
add
int3
mov
xor
sbb
iret
sub
inc
push
sbb
push
cwtl
push
or
pushf
or
fwait
lods
sub
mov
mov
cmc
call
jo
out
mov
xlat
add
adcl
insb
push
repnz
add
lret
fdivrl
fstps
inc
popa
std
push
ds
xlat
lret
outsl
js
dec
out
push
push
in
in
mov
xchg
ficoms
adc
div
and
out
xchg
subl
jae
jge
movsb
pop
pop
mov
or
xor
mov
je
push
jns
mov
mov
repnz
int
jb
pusha
inc
xchg
mov
lahf
stos
pop
dec
xchg
inc
and
adc
cmp
popa
xchg
fistpl
lods
mov
addw
arpl
out
and
pop
add
mov
insb
xchg
sarl
sub
daa
mov
iret
add
aas
xor
andl
ret
lahf
icebp
testl
mov
mov
pop
mov
jno
push
sub
xor
and
data16
mov
sbb
scas
xor
xor
lds
jecxz
xorb
mov
push
and
or
imulb
pop
or
jl
xlat
les
sub
jb
pop
adc
jns
add
mov
shlb
add
push
addr16
call
push
xchg
sbb
loope
xchg
xchg
xchg
cmp
out
or
adc
xchg
push
sub
mov
push
repz
mov
std
jne
vdivps
xchg
out
scas
mov
xor
push
pushf
mov
std
ret
pop
or
xchg
xor
mov
mov
pop
lods
idivl
idivb
xchg
jmp
shrl
sub
adc
jg
das
out
shl
es
xchg
test
and
jns
mov
lock
mov
pop
inc
inc
test
test
jb
pusha
mov
adc
dec
xor
pop
sahf
cld
test
xor
add
mov
int
lods
js
and
mov
sub
popa
dec
mov
push
fcoms
outsl
out
mov
paddq
stos
xchg
jle
push
movsl
sarb
push
jmp
jo
dec
sub
ret
xor
and
inc
pcmpeqd
lret
push
or
invd
adcb
mov
and
pop
push
mov
into
add
addr16
lock
mov
clc
add
pop
mov
pop
jb
fs
das
fimull
cs
sub
rcll
pop
xchg
iret
pop
xor
add
xchg
cmp
cmpl
imul
xchg
outsb
inc
jge
mov
dec
adc
es
jnp
dec
aam
adc
fcmovbe
xor
or
push
mov
push
filds
mov
cld
ljmp
jno
or
xor
or
push
pop
test
inc
cpuid
loopne
pop
inc
rorb
pop
push
adcl
xor
jmp
out
notl
jle
imul
hlt
jge
xchg
std
daa
in
mov
inc
icebp
rcrb
mov
orl
adc
gs
mov
int3
mov
push
sbb
adc
shrb
jo
orps
shll
test
dec
das
sbb
fimull
inc
subl
arpl
sarl
dec
cmc
roll
pop
push
jl
xchg
xor
adc
mov
jno
jne
fnsave
cmpsb
cmp
bound
lret
lahf
add
mov
pop
sub
in
xor
pop
testl
push
mov
add
loop
ffree
leave
aam
imul
adc
add
stc
push
adc
push
xor
inc
lcall
push
xlat
inc
pop
xor
mov
dec
sahf
sbb
divl
add
loopne
xor
xchg
xor
dec
js
sbb
bound
inc
mov
cmpsl
add
mov
addr16
jecxz
outsl
jmp
mov
jae
inc
les
cmp
jb
pop
jmp
out
cmc
rcll
push
and
pop
imul
add
and
cmp
rcrb
mov
jge
mov
push
dec
push
fldl
test
in
mov
xor
leave
fwait
push
push
pop
lods
add
push
lret
mov
stos
dec
movl
mov
into
pop
gs
es
rcll
out
daa
sbb
xchg
fmuls
repz
mov
jo
out
icebp
cmp
push
xchg
mov
std
iret
clc
cmp
push
cld
aaa
outsl
or
divl
adc
mov
mov
ds
cmp
jbe
insl
jnp
inc
inc
cld
test
dec
sub
pop
xchg
adc
xchg
inc
dec
in
pop
adc
jno
mov
mov
inc
push
or
movsl
stc
in
addr16
or
cltd
ss
cmc
cld
jle
inc
dec
les
es
fdivrs
sbb
xor
ja
sbb
mov
push
enter
mov
fwait
jbe
mov
xor
xchg
mov
int3
neg
lret
movsl
pop
push
mov
mov
cmp
sbb
int3
cltd
roll
cmp
arpl
or
mov
or
ljmp
push
mov
mov
sub
icebp
rcll
jo
dec
vcvtdq2ps
sub
cli
fdivrl
or
lods
mov
cmp
and
pop
fisttpll
or
jle
cmp
je
push
inc
sbb
add
stc
mov
cmpsl
mov
sub
inc
jno
dec
cmpl
push
lods
sub
cmp
xchg
or
xor
jbe
aad
test
in
dec
adc
js
addr16
pushf
ljmp
jp
jmp
aam
mov
pop
stc
scas
hlt
out
jb
xchg
pop
pop
flds
repz
mov
pop
push
out
sub
inc
popa
arpl
jnp
jecxz
stos
test
cmpsl
mov
gs
std
in
xchg
jne
iret
mov
shlb
inc
daa
mov
hlt
in
daa
shlb
pusha
cltd
ja
mov
sub
inc
mov
sub
mov
scas
cmpsl
fwait
subl
cmp
jns
movsl
mov
push
xlat
out
lods
cmp
mov
mov
icebp
adc
out
pop
gs
push
je
and
add
or
lods
mov
dec
jmp
cmc
sbb
xorl
fcomi
sbb
mov
pop
xchg
add
arpl
pop
push
js
push
mov
icebp
jae
cmp
jmp
aas
mov
cmp
shll
pop
push
jl
mov
in
xchg
ret
arpl
movsl
test
mov
xlat
dec
scas
push
lea
fsubl
mov
push
mov
mov
lret
pushf
fbstp
notl
aam
aas
xchg
sbb
pusha
loopne
lds
push
xor
xlat
lret
sub
push
jae
pop
mov
es
jl
test
sub
cmp
sbb
std
idiv
shlb
add
js
jg
sub
push
xor
in
mov
dec
push
cmp
xchg
add
push
out
xchg
mov
xlat
in
jne
cmovg
inc
and
filds
inc
inc
mov
adcb
or
stos
jge
jecxz
lret
arpl
mov
mov
je
mov
mov
fldenv
negb
push
adc
adc
sub
leave
mov
push
sbb
std
loop
lods
and
cmp
xchg
pop
cltd
imul
rol
daa
and
xor
cld
test
repnz
xchg
adcb
xor
cmp
push
xchg
pop
outsb
xchg
enter
imul
sub
lock
sar
arpl
mov
test
out
sti
jp
xchg
fdivl
cmpsl
push
xor
jmp
sbb
mov
mov
and
loope
lds
and
loope
add
lret
roll
jno
scas
xor
mov
adc
leave
subb
xchg
inc
mov
mov
inc
add
addr16
decb
pop
push
add
fnstenv
and
or
fistpll
cld
add
cmp
popa
lock
pushf
sub
dec
enter
or
add
push
sbb
mov
fs
out
dec
pop
cmp
and
xchg
lods
gs
push
and
mov
std
outsb
test
adc
mov
push
jo
and
and
cs
mov
ret
loopne
imul
sahf
fwait
jo
or
dec
mov
push
or
mov
lods
loop
fmul
jo
aad
outsl
sbbl
mov
add
lock
ficomps
add
ljmp
pusha
or
test
test
shl
dec
dec
enter
out
sahf
ljmp
jp
icebp
in
and
mov
pop
mov
or
lock
mov
pop
xchg
dec
lahf
add
fwait
mov
and
inc
hlt
jp
jne
scas
lods
fnstcw
dec
push
dec
lahf
push
pushw
pop
xor
pop
inc
imul
or
mov
mov
icebp
ds
or
ret
pop
jae
push
outsb
jge
sar
jo
leave
scas
cmpsb
sub
shrl
and
xchg
shr
xchg
push
call
emms
xor
and
sbb
pop
push
sbb
xor
jge
sbb
out
adc
sub
jp
adcb
lea
jp
add
or
ljmp
dec
aaa
xchg
aad
scas
or
ret
push
xchg
adc
sbb
cltd
sub
add
dec
mov
ficompl
andl
xor
push
jo
jl
and
xchg
sbb
int3
cmp
xchg
icebp
bound
jbe
cltd
ja
mov
cs
pop
sbb
neg
push
test
push
pop
sub
adc
popa
xor
and
movsb
das
jae
mov
inc
sti
lret
jmp
lcall
and
mov
cltd
dec
pop
lock
clc
repnz
sbb
hlt
lret
fidivl
inc
or
cltd
dec
addl
mov
lahf
fs
sub
pop
lret
rcl
and
jne
mov
inc
dec
lds
stc
ljmp
rolb
arpl
mov
out
cld
imul
dec
pusha
mov
or
and
adc
push
lcall
ficomps
loop
imul
scas
ljmp
iret
push
or
sub
inc
jmp
push
hlt
sbb
xor
add
jge
adc
mov
push
iret
test
ljmp
dec
scas
xor
lcall
fistpll
imul
mov
in
loope
add
fbld
cmp
mov
mov
icebp
arpl
add
cmp
aad
push
mov
lret
cmp
fsubrl
stos
ret
mov
shufps
adcl
jmp
sub
fistpl
add
jnp
and
outsl
mov
mov
sub
or
inc
jbe
cmp
dec
push
stos
cmp
mov
stos
sarb
sbb
jne
dec
mov
push
xor
jge
incb
scas
insb
dec
mov
dec
es
aad
dec
add
xchg
data16
pop
cmpsl
jnp
ss
fmull
cmp
roll
lcall
push
or
std
cmpsb
xor
adc
or
enter
inc
ficomps
je
ret
or
cltd
jp
dec
lret
sbb
stc
push
push
pop
xchg
pushf
xchg
xchg
jne
cli
xor
cmpb
dec
xchg
inc
push
mov
or
gs
addr16
dec
inc
lock
sub
mov
repz
cmpsb
mov
add
sbb
negl
les
and
bound
rorb
jno
xor
ret
xchg
xor
jge
sbb
xchg
ret
push
xchg
sub
pop
rcrb
call
pop
das
and
jmp
out
pusha
push
jge
icebp
int
mov
test
cli
movsb
std
fstl
in
cmc
xchg
push
sub
cld
sahf
jecxz
gs
je
xor
jle
sub
inc
pop
push
out
es
xchg
lock
sbb
dec
int
es
roll
adc
and
mov
inc
and
mov
xchg
mov
and
pop
mov
xchg
jo
test
push
mov
fbld
in
aam
fwait
jmp
sti
xchg
jp
mov
mov
shrl
xchg
lock
lcall
adc
mov
repz
dec
fisttpll
add
add
ja
pop
stos
jg
cmp
in
cltd
xchg
mov
inc
fisubrl
nop
insl
mov
in
mov
mov
jp
lahf
adc
and
pop
bound
cmpsl
sti
jge
movsl
pop
les
push
mov
enter
aas
xor
lret
ss
std
shll
xchg
sub
repz
outsl
jns
push
or
mov
out
shl
js
lret
cmp
rorl
cmc
mov
mov
hlt
lods
sarb
sub
xchg
mov
insb
cmp
imul
shr
imul
lock
and
pop
cmp
xor
fcomps
add
xor
sub
int
mov
dec
subb
inc
pop
inc
pop
push
imul
inc
inc
std
in
dec
sbb
add
fidivrl
stos
xchg
shll
inc
out
cmpsl
insb
push
orl
mov
add
jbe
mov
sub
mov
xchg
lods
icebp
and
mov
push
xchg
pop
cmp
cmp
mov
test
xlat
or
ficoml
and
repnz
mov
imull
pop
mov
les
add
lahf
sbb
mov
divb
jae
push
lret
arpl
mov
push
jb
pop
daa
ret
cli
insb
jecxz
loop
lahf
mov
loopne
dec
add
add
push
mov
mov
punpcklwd
push
out
sub
or
mov
and
outsb
push
lahf
add
and
movsb
sbb
mov
mov
mov
jmp
clc
clc
fstpl
mov
push
pop
sub
lahf
xchg
inc
js
and
fstl
cmpsb
add
fbstp
ficompl
cmp
sub
mov
adc
mov
mov
jmp
notl
xor
add
mov
es
repnz
ljmp
or
int
mov
sbb
int3
mov
ret
xor
push
loope
imul
test
iret
xchg
mov
pop
mov
adc
xchg
jmp
pop
sub
pop
mov
sbb
push
lods
pop
clc
outsl
pusha
pop
sbb
lea
jns
inc
adc
mov
mov
pop
je
fsubrs
imul
pop
in
dec
jnp
jnp
scas
js
jnp
mov
and
nop
stos
sub
hlt
push
int
and
fiadds
out
mov
stos
int
das
add
mov
mov
sub
ret
sbb
cmc
mov
ss
cmp
fcmovnbe
add
mov
test
push
jp
sbb
adc
scas
mov
in
scas
sub
inc
sub
and
shlb
adcb
jp
scas
and
mov
add
fwait
imul
stos
mov
addr16
adc
pop
in
movsb
xchg
and
mov
aam
into
pop
dec
stos
divb
pop
in
and
repnz
jl
loop
movsb
sti
pop
repnz
dec
jle
lret
mov
loope
sar
sbb
xorl
xlat
ja
xor
xlat
lea
mov
xchg
cmp
dec
les
lea
cld
dec
dec
inc
mov
xchg
int3
imul
repz
push
add
inc
xchg
mov
jnp
lcall
or
inc
mov
sub
jnp
mov
mov
push
icebp
push
xor
fcmovnb
sbb
fldenv
cmp
inc
incl
daa
in
push
testl
xor
subl
push
add
fstpt
fs
ficoml
push
xchg
psrad
mov
dec
jns
imul
cmpsl
bound
push
cmp
xchg
rcr
mov
lock
test
mov
mov
inc
loop
push
mov
in
shlb
sub
add
xor
divb
xorb
mov
aad
push
pop
xor
out
jae
cltd
cli
and
loope
in
int
rorl
mov
rclb
je
shlb
xlat
gs
or
add
jecxz
out
xchg
fistps
pop
cmp
push
es
scas
dec
test
lock
enter
cmpsb
call
mov
push
dec
push
push
pop
aam
sub
outsl
mov
jb
pop
mov
imul
push
jnp
fsubs
sbb
sub
sbb
mov
bound
xchg
cmpsl
xlat
sbb
dec
mov
test
mov
mov
pop
add
popa
stos
scas
dec
aad
pop
push
call
jge
sub
addl
movsl
add
pop
jecxz
adc
sbb
call
jle
sub
inc
movsb
or
and
push
inc
stos
xchg
dec
stos
pop
aam
dec
sub
mov
mov
stos
repz
push
add
push
mov
leave
mov
mov
fldlg2
fiadds
xchg
fimuls
aaa
addr16
pop
mov
jo
pop
xorb
lock
cmp
into
dec
mov
push
mov
arpl
ss
jno
sbb
or
test
mov
pop
push
add
push
mov
sbb
and
test
sub
stos
dec
or
inc
jae
scas
mov
out
mov
cmp
lea
lock
add
jge
or
push
mov
xchg
and
stc
in
int3
repnz
add
lock
dec
inc
test
dec
or
outsl
add
hlt
mov
call
push
pop
and
imul
push
lods
mov
sub
into
cmp
jp
outsb
cmp
leave
jbe
or
inc
mov
leave
das
ror
xchg
xor
jne
jns
ret
xor
xor
hlt
cmp
das
pop
push
ljmp
cmpsb
push
or
int
push
jl
lea
adc
popl
mov
aad
and
repz
inc
inc
fisubrl
insl
sub
push
shrb
addr16
leave
mov
mov
pop
repz
jb
jg
mov
fdiv
xchg
leave
sub
jle
cmpl
pop
dec
fs
and
cmp
and
push
pusha
inc
dec
push
push
cmpsl
jo
aad
out
pop
push
xchg
inc
and
or
movsl
jns
pop
shlb
cmp
or
stos
fildl
jno
mov
repnz
das
cli
sbb
inc
lret
ret
repz
push
ror
pop
shll
xchg
jl
mov
mov
jae
stos
dec
pop
arpl
test
out
les
sbb
add
xlat
jns
mov
xor
ss
push
inc
mov
int
jbe
jbe
icebp
or
cli
fstpt
ret
iret
fdivrs
pop
insl
pop
lret
ret
adc
cmc
aam
lods
mov
add
or
xchg
xchg
stc
add
mov
inc
mov
jns
push
fucomp
aam
mov
sbb
or
pop
and
sub
add
cmc
decl
imul
pop
mov
or
data16
out
rol
sub
add
xchg
cli
jmp
xchg
mov
xor
push
inc
je
loope
or
loop
clc
mov
add
mov
out
add
loop
sub
push
popf
scas
loope
ret
outsb
pop
mov
jl
push
int
dec
jle
dec
and
shll
cwtl
sbb
mov
aas
lods
imul
add
repnz
xchg
xchg
xor
cmp
movsl
dec
test
pop
cmp
sbb
pop
pop
repz
out
in
lret
js
repz
int3
jnp
sub
adc
out
std
scas
test
popf
mov
lea
and
testb
call
out
or
pop
xor
repnz
pop
inc
push
pop
in
or
rorb
mov
stos
sub
mov
xlat
loope
xchg
stos
outsl
scas
outsb
fbstp
lret
pop
and
cltd
jmp
je
pop
mov
ss
jnp
loopne,pt
push
mov
mov
popf
fdivs
mov
push
scas
xor
dec
rorl
jo
jns
inc
mov
mov
arpl
push
insb
jnp
call
pop
cmp
sub
out
addr16
adc
fmulp
adc
sbb
aam
or
loope
das
int3
mov
dec
xchg
inc
stc
and
fs
test
rorl
jg
cmp
pop
xor
or
into
test
mov
enter
jne
imul
shrb
iret
std
dec
stc
dec
inc
push
push
adc
cltd
iret
sbb
lock
mov
lds
add
ret
inc
iret
aam
mov
cltd
ret
dec
cmc
jge
sbb
xor
mov
sub
and
cmp
call
pop
mov
arpl
push
jo
sub
jnp
movsl
jbe
ficomps
rolb
test
lock
push
cltd
in
sub
jmp
lcall
add
js
jmp
out
js,pt
rcrb
iret
mov
jge
fs
mov
mov
push
sbb
mov
icebp
insb
mov
mov
adc
and
nop
sbb
sti
sbb
jecxz
sub
xchg
mov
js
push
pop
adc
arpl
imul
dec
inc
dec
iret
xor
mov
loop
ret
jno
aaa
das
out
pop
pop
lea
sarb
das
xchg
ds
lock
flds
test
mov
push
int
loopne
mov
ret
repnz
mulb
cli
mov
dec
mov
push
jg
lret
xor
stc
cli
mov
inc
data16
fsubs
pop
in
add
test
xor
nop
aaa
dec
loope
pop
out
ror
pop
movsl
test
in
push
ret
mov
mov
dec
jecxz
cli
test
ljmp
xor
mov
test
add
xor
dec
mov
mov
addps
mov
xchg
cs
movsb
fsubs
sub
fbld
adc
test
movsb
xchg
shrl
inc
push
andl
xor
or
int
adc
mov
shl
cmp
in
sbb
and
aaa
pop
ljmp
test
scas
sub
dec
push
out
call
les
mov
out
sbb
or
lds
dec
pop
mov
out
movsl
pop
dec
daa
fs
outsl
mov
jg
hlt
jne
test
push
test
adcb
pop
sbb
mov
das
lret
aas
xchg
add
into
imul
hlt
cltd
inc
addr16
jge
dec
xorl
push
testb
mov
adc
aad
cmp
lods
adc
frstpm(287
pop
cmp
jecxz
inc
cmpsb
dec
dec
lds
xor
pop
jnp
es
mov
pop
adc
xor
pushf
xor
hlt
std
imul
arpl
sub
imul
or
add
sub
mov
out
xchg
mov
mov
cmp
into
mov
popf
jp
add
lea
movsl
test
pop
dec
pop
mul
movsl
push
mov
xchg
sub
cs
cld
sti
xchg
jge
inc
repz
into
imul
adc
xor
xchg
or
test
lcall
clc
push
pop
pop
addr16
lods
sub
mov
sub
mov
fidivrs
add
mov
push
sub
arpl
or
ljmp
and
shl
je
xchg
lods
cmp
scas
data16
clc
mov
xor
sub
cmp
lock
lret
pop
fcoml
mov
jbe
dec
xor
xchg
ljmp
inc
and
mov
ja
jecxz
mov
inc
or
lds
or
lret
test
xlat
xchg
test
sub
popf
mov
mov
leave
repnz
mov
sbb
xor
pop
cld
mov
loopne
dec
xchg
mov
xchg
add
repnz
add
or
push
mov
and
sub
test
imul
and
xor
out
add
mov
jns
cmp
adc
mov
mov
mov
ret
lret
iret
pop
adc
fwait
jge
xchg
rcrl
add
and
int
outsl
push
mov
mov
mov
and
jne
outsl
xchg
mov
jp
xor
pop
fiadds
jmp
fadds
les
mov
cmp
inc
sti
cmp
and
sbb
push
fs
mov
xor
mov
es
and
add
xchg
add
mov
or
fldcw
mov
add
pusha
xor
popa
pusha
arpl
in
lods
lods
and
mov
data16
dec
push
push
fisubs
xorl
in
dec
jne
jnp
xchg
xchg
dec
adc
inc
movsb
xchg
push
rorb
mov
or
and
mov
sbb
cmp
cwtl
ljmp
dec
jmp
sbb
add
mov
fisttpll
push
cmpsb
jecxz
cmpl
sbb
aas
xchg
sub
jecxz
imul
cmp
in
mul
jmp
mov
jno
jge
jmp
imul
popf
movsl
fs
mov
xchg
rolb
fwait
push
mov
subb
rcl
sub
cmc
and
mov
add
dec
je
jo
fcmovbe
push
shll
or
sahf
into
sbb
mov
xchg
lods
mov
jp
dec
dec
out
pop
xor
in
sbb
out
shll
movsb
or
aad
test
or
lret
rclb
jns
add
mov
ret
xchg
xchg
add
adc
xor
mov
mov
sbb
mov
add
enter
fucomi
mov
and
push
sub
test
inc
int3
mov
mov
pushf
pop
dec
xor
pop
ds
out
add
pushf
sbb
int3
xor
push
cwtl
xchg
fildll
fisubl
sub
or
inc
pop
and
dec
push
xor
jecxz
jb
mov
mov
stc
loop
loop
fiadds
scas
test
out
fwait
jmp
leave
bound
cmp
call
push
mov
push
jg
lds
loope
sub
shr
mov
lea
xor
in
jl
inc
inc
dec
outsb
push
mov
sub
jle
add
test
add
jmp
out
into
sahf
jae
stc
mov
scas
xor
xchg
adc
fcomps
or
ret
ja
xchg
xchg
jg
or
rorb
and
dec
lds
jno
push
movsb
std
inc
mov
loope
testl
out
adc
inc
jns
jge
imul
outsl
add
and
test
jno
push
mov
cmp
and
add
outsb
or
mov
pusha
pushf
xlat
jae
adc
lods
mov
stos
jecxz
je
test
and
aaa
outsb
jge
fstpt
scas
mov
test
sbb
mov
repz
xor
aam
mov
jg
fstl
incb
cmp
test
sub
mov
inc
lret
jl
mov
inc
sub
push
pop
es
iret
test
mov
dec
in
sub
push
out
mov
jno
add
mov
dec
es
es
adc
jnp
mov
pop
mov
rcll
int
dec
in
jge
push
out
or
imul
cmp
pop
cwtl
enter
dec
and
test
movsb
and
xchg
adcb
pop
shld
adc
fimull
cmpsb
cmovge
aad
fmull
andl
xchg
out
xchg
cmpl
mov
stos
sbbl
std
fcompl
ss
mov
inc
lret
push
ljmp
cmpsb
dec
adc
repnz
movaps
fbstp
push
call
mov
dec
leave
adc
xchg
daa
sahf
enter
jle
mov
mov
jno
mov
into
test
xchg
dec
les
and
ss
rcrl
int3
bnd
sub
cmp
mov
ds
xor
movb
sbb
dec
push
inc
in
inc
iret
fstpt
int3
addr16
and
je
sub
jle
icebp
sub
sbb
pop
and
call
ss
fcompl
lahf
ffreep
test
xor
mov
pushf
mov
je
jecxz
cmpsb
sahf
iret
sub
subb
ret
push
lahf
or
fcompl
sbb
or
sbb
test
push
mov
movl
pushf
jne
or
sub
mov
fxch
xor
mov
inc
cli
adc
xchg
repnz
out
jo
mov
inc
imul
lods
cmpl
xlat
xchg
jge
test
xchg
jbe
jae
pop
sbb
jmp
std
in
insb
fdivs
cmp
mov
xchg
inc
cltd
mov
add
cli
in
dec
push
mov
daa
mov
and
data16
mov
mov
mov
dec
shll
repnz
mov
popf
or
shll
fcomip
mov
int3
push
inc
mov
stc
call
into
mov
imul
dec
sub
ret
sub
js
push
movsl
movsl
imul
mov
mov
fimull
jns
hlt
insb
sbb
mov
push
push
or
cmpsl
push
push
popa
lret
inc
and
or
test
push
inc
sbb
jno
dec
push
das
loop
lret
or
xchg
stc
mov
pop
and
paddusw
adc
bound
mov
inc
imul
sbb
and
inc
sbb
sbb
mov
sahf
or
fidivrs
popf
jle
dec
mov
or
xor
jge
sti
insb
shll
xor
mov
add
pushf
pop
dec
clc
ds
loope
jg
push
scas
in
mov
jne
adc
into
clc
in
sbb
pop
ja
adc
ficoml
or
xor
test
or
fadd
sbb
or
jo
push
jg
xlat
fimull
bound
add
insl
mov
xor
and
or
arpl
mov
cwtl
sbb
mov
xchg
ss
rorb
int3
cmp
adc
lea
lods
mov
hlt
in
and
dec
mov
test
fldt
fists
mov
pop
jnp
sbb
mov
cmp
insl
push
je
pop
insl
imul
ret
lahf
out
bound
sub
cvtdq2ps
pop
aad
test
bound
loope
test
loopne
in
and
addr16
add
popa
out
push
cltd
aaa
and
sub
mov
fildl
mov
adc
and
jge
mov
push
or
mov
mov
push
adc
mov
mov
aaa
movsl
test
xchg
outsl
daa
fsubrl
push
xlat
sub
mov
call
sbb
dec
dec
jg
sub
nop
imull
in
loope
push
mov
mov
cmp
cmp
das
sbbl
in
pop
mov
shlb
aam
stos
jl
jg
push
cltd
cmpsb
mov
popa
cmpsl
and
dec
xchg
jmp
xor
dec
arpl
ror
es
out
idiv
ljmp
test
dec
mov
dec
xchg
mull
aaa
lock
dec
mov
iret
pop
js
jmp
dec
pop
mov
or
out
sti
add
mov
pushl
fbstp
dec
or
push
cmc
jae
cmpsl
imul
daa
inc
scas
cmpb
js
sub
dec
imul
pusha
out
dec
dec
into
in
loopne
and
subb
xchg
mov
cld
adc
cmp
push
cmp
rorl
loop
xchg
out
inc
cmp
add
mov
and
ja
pusha
mov
sti
scas
sub
mov
mov
pop
mov
xor
inc
in
mov
pushf
mov
rcl
sbb
mov
rclb
mov
cmpsl
imul
or
ss
addr16
add
popa
add
mov
sbb
pop
xorl
loopne
mov
push
jp
clc
ljmp
and
and
mov
test
cmpl
test
xor
std
icebp
mov
xor
cmp
cs
adc
out
ret
imul
adc
test
stc
test
pop
dec
cmp
out
and
xchg
mov
add
inc
mov
scas
fs
stos
inc
sub
rcrb
ja
jo
out
sahf
popa
push
and
or
and
in
pop
ret
adc
lahf
inc
push
lcall
xor
add
ljmp
inc
jno
es
stc
iret
dec
cmp
mov
and
jbe
movsl
lret
fldt
xchg
lahf
insb
adc
rclb
jl
mov
ja
hlt
ljmp
mov
sbb
aaa
out
sbb
int3
call
pop
jno
iret
sti
add
add
jecxz
pop
mov
mov
lock
aad
mov
stos
jo
out
jb
or
leave
pop
cltd
push
pop
cmp
mov
dec
daa
jnp
xchg
sbb
aas
sub
cmp
cmpsb
lret
fdivs
cli
push
cld
inc
inc
call
lock
sub
xchg
loope
add
sub
cwtl
jae
enter
xor
push
sbb
and
inc
pop
dec
fwait
mov
sub
inc
scas
dec
popf
mov
cli
fisttpll
cld
clc
xchg
sbb
inc
pusha
adc
ja
aas
dec
gs
vunpckhpd
lds
add
aam
push
outsl
mov
xchg
xor
inc
sub
xchg
sub
les
sti
sub
xorb
sub
in
je
push
addw
push
lock
push
mov
fbstp
mov
out
data16
dec
dec
ds
inc
bound
out
dec
loop
leave
pop
dec
mov
dec
xchg
ljmp
in
es
pop
xor
pusha
idivl
dec
mov
iret
sahf
mov
ds
insl
in
out
aam
lds
aad
pop
dec
jmp
rol
jae
js
cmpsl
and
js
inc
sub
outsb
xchg
inc
push
fnclex
xchg
pop
orb
fidivrs
mov
je
jnp
fmuls
sbb
mov
pushf
xchg
jnp
jb
or
sbb
mov
mov
inc
lods
mov
jnp
jbe
push
ds
dec
loop
popa
ja
out
pop
gs
stc
pusha
mov
enter
addr16
dec
or
mov
push
mov
enter
push
sub
iret
insl
xor
popa
cmp
iret
outsb
xlat
pushf
dec
adcl
scas
leave
ss
mul
and
jmp
std
push
mov
mov
pop
out
or
in
cmc
pop
scas
mov
and
sti
insb
xchg
das
cld
cmpl
fnstenv
mov
and
xchg
push
movl
mov
hlt
out
dec
and
adc
jge
aaa
icebp
mov
mov
out
push
arpl
dec
lahf
sbb
lret
push
inc
sub
es
cmpsl
mov
mov
popa
cmp
and
lea
out
mov
inc
xchg
push
out
inc
push
stos
aas
fstpl
mov
or
mov
pushf
je
adc
enter
push
and
inc
mov
mov
out
mov
mov
dec
setle
xchg
stos
cwtl
mov
mov
xor
mov
lods
pop
dec
negb
inc
inc
inc
mov
jnp
add
sub
outsl
shl
push
and
push
xor
or
lock
int
and
int3
xchg
xchg
sti
ss
js
adc
ficoms
xchg
push
xor
jmp
jb
int
int
daa
xor
push
js
lahf
pop
scas
cmc
mov
pop
fsubs
out
popf
and
enter
mov
dec
push
push
mov
gs
mov
cmp
lea
pop
jns
jle
sbb
jo
enter
aas
mov
hlt
call
loope
mov
adc
mov
les
xor
aaa
pop
mov
xchg
stos
dec
add
dec
rcll
popa
xor
fldl
mov
in
cltd
pop
xchg
arpl
xchg
bound
add
mov
test
adc
push
aad
cmp
into
push
iret
aaa
pushl
dec
loopne
pusha
xor
fcomp
fiaddl
cmc
cwtl
add
jns
add
cmpsb
and
jge
repz
test
dec
xor
pop
shl
ljmp
dec
cmp
jecxz
dec
push
scas
daa
popf
scas
sbb
and
in
into
popa
add
xchg
pop
jge
sub
ret
outsb
inc
cmp
cmp
gs
inc
data16
push
xorb
xor
dec
cmp
fsts
addr16
dec
test
cli
fwait
lods
or
sbb
xor
fdivrs
sbb
inc
and
inc
sub
adc
insb
sbb
mov
hlt
push
or
dec
xchg
outsl
inc
out
loopne
dec
pop
sbb
cmpsb
repnz
push
pop
sahf
fisttpll
lret
ds
orl
inc
sarl
in
jbe
icebp
sahf
sarl
popf
test
cmp
in
cli
js
in
push
das
fcmovnbe
rcr
push
mov
lret
call
fldcw
jbe
cmp
enter
dec
sub
test
xchg
dec
adcl
sahf
aas
jmp
enter
scas
jle
testb
push
mov
mov
mov
jb
mov
addl
and
pop
dec
cltd
test
pusha
pop
aam
mov
imul
mov
push
shlb
mov
mov
clc
popl
aas
jo
inc
mull
std
jmp
jne
fistps
cmc
lcall
or
xchg
sarl
pusha
mov
movsb
mov
mov
xchg
addb
mov
jns
sub
test
mov
movsl
push
jg
inc
jecxz
xor
jle
jp
mov
das
mov
xchg
xchg
push
or
push
shll
aaa
dec
daa
mov
out
ficoms
leave
xorl
push
out
sub
in
or
fsts
clc
inc
push
andl
repnz
mov
scas
lock
pop
dec
add
jne
repz
or
das
ljmp
xor
mov
cmp
popa
xchg
xor
xlat
aad
jle
pop
add
sbb
push
add
jecxz
insb
fs
data16
loop
out
cmp
xor
sbb
dec
add
daa
movsb
cmp
ja
sbb
mov
and
ficomps
popf
hlt
cmc
push
push
sarl
inc
and
ja
in
in
int3
sbb
sub
movsb
in
loope
mov
xor
leave
inc
mov
mov
jmp
inc
pop
xor
pop
in
imull
push
cld
cmpl
jecxz
xchg
xchg
xor
push
ds
push
mov
adcl
pop
jo
enter
add
je
jge
add
adc
loopne
imul
and
in
fwait
xchg
int3
pop
inc
in
out
test
cmp
sbb
lds
fs
test
xor
cmp
sar
adc
enter
pusha
outsb
sub
outsb
addb
dec
aas
test
or
xor
add
xchg
fidivs
cmp
fadd
cmp
aas
cld
xchg
sahf
xorb
mov
cmp
add
lods
and
mov
outsb
gs
push
sti
jns
cmp
popa
sbb
in
mov
lahf
xor
rolb
xchg
jnp
jmp
xorb
sbb
lret
fcoms
mov
push
push
ljmp
sbb
les
adc
cmp
dec
pop
push
or
cmpsb
in
test
xor
jae
hlt
iret
fwait
cs
lock
add
je
in
push
or
sub
jecxz
dec
sub
bound
and
addl
dec
ljmp
icebp
sub
mov
mov
aaa
arpl
cli
adc
jo
xchg
lods
ds
ds
adc
jbe
jnp
xor
add
push
ja
sub
or
idiv
mov
or
lea
mov
in
pop
cmp
push
lret
mov
in
jb
or
jb
jbe
ljmp
cmp
sbb
andb
and
lods
mov
inc
in
xor
xchg
adc
fistl
pop
mov
gs
inc
xor
push
lea
sub
loop,pt
sti
test
or
inc
mov
push
shl
imul
loope
mov
pusha
fdivrl
andl
cwtl
lcall
ljmp
lret
lods
push
ret
xorb
xchg
mov
loop
jo
loopne
int3
sahf
aaa
bound
bound
adc
xchg
fldenv
inc
jbe
cmp
jmp
bnd
cmp
and
andnps
lock
push
pop
lahf
ss
mov
lahf
pop
aaa
pop
stos
and
and
lret
adc
hlt
xor
or
dec
cltd
sbb
loope
pop
test
shrb
dec
sbb
aas
cld
and
jg
push
xor
ret
jmp
lcall
jmp
movsb
push
addl
in
push
mov
adcb
cmp
aaa
and
aad
sbb
jbe
cmpb
loop
push
sahf
int3
repz
add
add
nopl
jbe
xchg
pop
sub
iret
jae
aas
in
jbe
sub
push
cmpsb
sti
add
loope
or
adc
mov
cltd
xor
ljmp
nop
loope
push
add
int3
inc
inc
mov
movsl
lods
ss
and
sub
test
roll
daa
mov
adc
fs
ficompl
data16
ficomps
adcl
movsb
out
imul
pop
cmp
mov
mov
mov
cli
decb
and
inc
ljmp
ret
cmp
ljmp
cmp
push
mov
scas
hlt
cmp
movsl
dec
lods
and
lcall
in
adc
xor
push
movsl
mov
clc
std
mov
push
out
dec
jmp
or
jne
iret
mov
cmp
in
loope
mov
testl
sahf
scas
mov
jmp
xchg
add
mov
mov
add
sbb
ucomiss
dec
shl
scas
icebp
aad
xlat
inc
ja
dec
inc
add
mov
stos
lods
lcall
push
mov
xchg
mov
popa
jnp
fwait
out
movsl
add
es
sub
dec
xchg
push
call
jo
imul
int3
hlt
daa
sub
dec
sbb
adc
push
adc
cmp
inc
stos
test
test
add
dec
out
data16
push
cs
repnz
fst
movsl
push
addr16
mov
fisubrs
in
ljmp
mov
pop
arpl
roll
dec
test
cmp
not
mov
fldln2
daa
xchg
inc
leave
lahf
fs
inc
out
xor
out
flds
popa
add
cmp
xor
dec
lds
int
fsubrs
push
push
sbb
movsl
adc
sbb
mov
adc
lcall
dec
mov
push
xchg
int3
mov
xchg
dec
push
jno
and
cltd
cmp
stc
icebp
pop
adc
push
lock
xchg
adc
xchg
mov
xor
ret
test
orb
not
sub
sti
shll
cmpb
mov
ficompl
aad
leave
cltd
inc
xor
out
pop
popf
sub
adcb
jle
mov
push
inc
push
jg
ficompl
lods
int3
clc
xor
repnz
cmp
mov
and
into
mov
mov
fsubrs
jno
lcall
jmp
cwtl
sub
enter
cmp
cmpsl
dec
sahf
stc
push
out
sbb
ljmp
push
mov
out
xchg
test
subl
push
iret
imul
mov
data16
adc
pushw
call
les
inc
lcall
xor
repz
mov
dec
std
add
mov
into
cmp
push
adc
inc
pop
push
and
in
int
mov
jne
addr16
outsb
dec
cltd
adc
sbb
sbbl
scas
movsb
repz
xchg
hlt
fwait
lods
inc
call
mov
and
and
push
bsr
cmpl
ljmp
sub
lock
call
loope
adc
pop
sub
push
jns
loopne
xchg
test
push
pusha
movsl
jecxz
mov
sbb
rcrb
pop
enter
or
rol
stos
xor
dec
jb
mov
jne
out
jae
push
clc
adc
jns
xchg
mov
mov
aad
std
call
mov
repz
push
enter
sbb
iret
or
aam
adc
and
cltd
jge
insl
and
out
add
aaa
fbstp
sti
cltd
into
mov
out
scas
dec
rorb
adc
cld
cltd
pop
sub
mov
jns
mov
mov
add
std
mov
negb
ljmp
xchg
push
add
adc
jne
cli
jle
push
mov
inc
jle
xchg
jo
das
push
lea
push
adc
pop
push
pop
out
movsl
scas
pop
xor
mov
fnstcw
cmp
xor
push
rclb
lret
mov
pusha
jecxz
pop
cli
and
jnp
xor
mov
pop
jbe
mov
arpl
adc
dec
sbbl
pop
test
rolb
and
mov
mov
or
mov
mov
jp
pop
sub
xchg
in
mov
cmpl
fabs
adc
cltd
pushf
inc
add
push
in
inc
sbb
jp
test
imul
xchg
aad
xor
add
jmp
into
push
mov
and
lds
jnp
pop
and
call
fcoms
and
dec
aam
outsb
loop
inc
arpl
cmpsl
add
push
lahf
inc
push
ja
xlat
addr16
push
add
test
jns
add
cld
ret
test
pop
lds
leave
pop
push
popf
adc
add
pop
dec
dec
adcb
sbb
pusha
add
push
lea
or
jecxz
mov
inc
cmp
xchg
subl
pop
adc
jmp
xchg
decb
pop
xor
orl
repz
mov
jmp
gs
inc
test
loope
mov
xchg
or
jno
ja
lds
or
popf
or
inc
lds
bound
int3
repnz
js
xchg
xchg
lods
int
mov
iret
sbb
dec
dec
add
xchg
jg
pop
mov
jnp
roll
pop
inc
mov
mov
and
inc
pop
push
xlat
sti
sbb
sbb
loop
and
jnp
cld
mov
loope
push
mov
sub
push
ja
jns
shld
rol
add
sub
mov
pop
leave
push
and
mov
sbb
fisttps
jl
outsl
sbb
shrl
in
xor
or
jns
pop
icebp
xor
out
dec
test
xchg
xor
call
int3
addr16
dec
xor
sub
mov
mov
mov
pop
pop
imul
leave
mov
push
mov
push
dec
jns
outsb
push
pop
pop
clc
inc
orb
and
jle
rcll
loopne
lcall
add
adc
dec
pop
push
int
dec
mov
mov
test
faddl
dec
testb
loopne
xor
in
test
push
push
mov
les
pop
shl
jmp
cmpsb
ret
pop
movsb
add
jne
or
movsl
ret
xchg
icebp
push
insl
lret
fwait
xchg
es
dec
daa
pushf
fiaddl
je
xor
cmp
jae
jecxz
mov
leave
or
jo
clc
sub
add
push
adc
aaa
negl
dec
in
rcll
enter
pop
dec
lahf
out
inc
mov
into
xchg
jp
fcoml
or
add
sub
xchg
xchg
incl
inc
push
sahf
mov
push
out
dec
jae
sub
insl
subl
push
dec
cmp
mov
xor
xor
stc
js
mov
iret
xor
arpl
sbb
loop
jg
xor
xchg
or
je
fcmove
fs
push
out
mov
cmp
add
movsl
inc
cld
ja
dec
test
lock
add
dec
fwait
outsl
and
adc
jmp
or
inc
xchg
mov
push
into
clc
cltd
outsb
xor
mov
loopne
adc
int3
mov
mov
daa
inc
xchg
cwtl
lds
inc
ljmp
movsl
mov
lret
push
and
in
mov
sub
cmc
adc
lds
aam
or
pop
mov
lret
scas
mov
jle
sbb
push
mov
fstpt
or
or
add
jp
jmp
mov
mov
int
stos
mov
ds
nop
push
cs
fldt
je
aam
adc
outsb
push
mov
popf
pop
pop
testb
cwtl
aad
add
sbb
sub
add
lahf
sub
rcr
jge
sub
add
xor
leave
sbb
aas
out
inc
mov
scas
mov
mov
sbb
mov
sbb
cmp
mov
or
xchg
push
enter
lret
and
dec
push
sub
mov
clc
repz
loopne
and
add
inc
or
sahf
cmpsl
mov
mov
dec
mov
pop
ss
dec
mov
adc
flds
in
mov
mov
push
cmp
jnp
and
cmp
pop
mov
mov
add
jno
add
je
ja
in
add
addr16
or
arpl
xchg
aam
cmpxchg
add
xchg
imul
xor
les
push
fidivrl
adc
stos
and
stc
mov
push
push
pop
push
jo
fadds
loope
push
adc
test
cmp
lahf
inc
mov
addr16
jne
cltd
fistps
jmp
into
mov
jns
sbb
call
shrb
sub
lods
pop
dec
inc
repz
dec
cli
nop
adc
std
lea
repnz
in
cmpsb
cmpsl
int3
fwait
jns
jp
xor
xor
in
mov
pop
sbb
mov
cld
xchg
xchg
movsb
lock
jno
add
xorb
fisttps
xchg
aam
cmc
pop
fs
mov
pusha
mov
loope
mov
dec
js
sub
sub
or
scas
test
adc
loop
shll
jne
cmpsb
xor
insb
lret
pop
xchg
jnp
sbb
sub
int
mov
inc
and
orb
jo
ds
jmp
in
dec
or
sbb
mov
xor
adc
inc
out
fnstsw
insb
cmp
insb
xor
pop
pop
scas
ret
jp
pop
outsb
movsb
jno
pop
pop
shrl
jl
jns
push
rcll
jp
dec
movsl
add
sbb
xor
pop
or
loope
sti
sub
adc
mov
xchg
stos
sub
fs
rclb
imul
sbb
cltd
dec
cmp
jae
dec
xor
jne
bound
call
and
and
pop
push
loop
enter
idivb
xchg
mov
leave
xchg
xchg
sub
push
hlt
rcl
mov
mov
push
mov
hlt
adc
sub
push
push
fs
inc
mov
push
in
xor
dec
and
xchg
or
movsb
xor
pop
fucomp
aaa
aad
pop
stos
push
or
jbe
jno
jno
addr16
xchg
hlt
cmpsb
jge
dec
sbb
das
xchg
aaa
sar
cld
cmp
fnstcw
xorb
es
jmp
fnstcw
shll
lahf
and
xchg
add
mov
addr16
dec
jg
sub
rorb
xlat
sbbb
mov
cld
ret
jns
cmp
pop
rcrl
xor
inc
mov
inc
out
mov
cmp
mov
mov
sub
push
scas
je
jnp
pop
mov
dec
int3
xor
mov
and
into
ss
sub
movsb
insb
pop
jecxz
pop
icebp
xor
sbb
orl
shrb
orl
push
pop
iret
cld
cwtl
call
pop
adc
shl
imul
push
add
stos
jo
in
sbb
ljmp
lock
or
adc
sbb
cmp
mov
fcmovnu
inc
data16
inc
add
cmp
pop
fstl
sub
cmp
xorl
mov
addr16
xchg
and
and
ss
test
out
cli
fs
xor
mov
push
fdivrp
hlt
push
xor
jl
ret
in
ja
inc
loopne
jg
ret
mov
xchg
imul
mov
ja
das
jno
cwtl
sahf
push
mov
inc
jb
in
aad
loopne
pop
dec
int
jae
sbb
push
sbb
jge
pushf
pop
cmp
cmp
pushf
icebp
sbb
fimuls
xchg
jno
pop
mov
pop
jnp
jb
adc
xchg
test
add
pop
xor
lahf
jp
sbb
sbb
sti
xor
sub
fld
inc
add
lods
jb
hlt
and
rorl
adc
add
rdtsc
imul
lret
adc
mov
divl
or
bound
pop
lods
xchg
cmpsl
mov
cmp
jmp
in
movsl
dec
add
and
dec
xlat
lea
adc
lret
repz
cld
bound
push
enter
loop
stc
inc
pop
cmp
movsl
jle
les
movsb
pop
mov
xorl
mov
es
mov
in
push
shll
cltd
sbb
jp
sub
fldcw
dec
icebp
enter
jnp
sbb
xlat
xor
cld
fcmovnb
sbb
and
push
push
push
push
call
jg
mov
and
adc
xchg
inc
ret
inc
mov
or
push
sbb
push
mov
and
mulb
inc
inc
into
lods
imul
add
jecxz
in
dec
dec
cmp
scas
mov
dec
push
sbb
push
or
add
mov
ret
dec
mov
int3
out
push
cltd
in
sbb
aam
gs
mov
mov
xchg
outsb
push
sbb
jnp
pop
push
and
scas
aas
imul
out
imul
movsb
mov
rolb
pop
and
in
adc
mov
mov
adc
mov
dec
pop
rolb
aad
shld
or
lds
mov
and
mov
xorl
jns
and
cmp
jno
sbb
push
or
adc
ret
das
xor
movsl
movsb
jae
adc
mov
pop
cmp
dec
dec
sbb
xlat
push
ljmp
adc
cmc
fcmovu
cmpl
test
loopne
jge
inc
pop
add
push
cwtl
xor
jb
data16
sub
xchg
pop
dec
addl
adc
mov
xor
adc
jle
sbb
jg
movswl
xor
enter
ss
mov
cmpsl
pushf
icebp
add
adc
jge
adc
outsl
adc
xor
fs
cmpsb
and
sarb
les
dec
mov
sar
jg
push
aas
push
repnz
jle
or
mov
repnz
mov
sub
out
xor
sub
xchg
out
fmul
push
int
ret
aaa
cmp
inc
mov
outsl
fbstp
sbb
mov
dec
jb
or
xor
fwait
shrl
push
aaa
in
mov
sbb
scas
fidivl
pushf
je
pop
rorl
stos
scas
mov
push
leave
fsubl
clc
mov
xchg
xor
test
mov
mov
sarl
and
call
mov
daa
adc
xor
fwait
xor
push
fcompl
xor
insb
enter
jmp
sub
xor
sahf
jp
push
imul
jb
imul
sti
jno
aam
jmp
ss
popa
jmp
sahf
pop
in
mov
in
xor
xchg
decb
jbe
fisubs
inc
dec
stos
setnp
test
das
sbb
imul
mov
shl
dec
aad
pop
fyl2xp1
mov
pop
or
jp
sub
out
xchg
dec
icebp
pop
mov
mov
addr16
jmp
pop
stos
mov
xchg
jne
pop
sbb
cmp
out
icebp
negl
rolb
scas
in
add
rolb
and
sub
xor
xor
shl
dec
xor
cmp
mov
inc
add
lahf
sbb
mov
repz
test
cwtl
jo
arpl
jo
xchg
test
push
mov
xor
or
das
xor
mov
clc
fs
in
dec
sarl
mov
jl
loop
cmp
add
inc
scas
sarb
mov
cmp
call
pushf
outsl
out
lods
sub
sbb
stos
jl
pop
and
xchg
aas
lret
in
adc
jnp
xor
pop
les
lcall
mov
out
mov
ds
cmp
repz
cmp
test
repz
testl
mov
add
shlb
cmp
cmp
nop
das
test
pushf
les
sbb
js
mov
test
push
or
dec
adc
mov
out
insl
xchg
aad
xor
les
mov
aad
jae
movsl
cmp
lea
jl
and
fcoms
je
mov
addr16
or
outsl
insb
imul
loop
and
xor
jns
push
pop
add
push
adc
inc
xor
add
sub
push
testl
ret
adc
adcl
sub
inc
out
cltd
mov
dec
imul
jns
or
mov
cmpsl
cmpsl
pop
fstpl
pop
jle
jno
out
into
jns
jo
push
outsb
pop
mov
add
jg
movsl
mov
adc
fmull
add
clc
cld
in
pusha
or
movsl
pop
adc
inc
rolb
int
xor
push
ds
popf
data16
popa
jmp
mov
test
adc
frstor
inc
mov
sbb
aas
movsb
pop
loope
pop
stos
sbb
ds
jge
jb
xchg
lcall
mov
mov
push
mov
cli
out
pop
xchg
fcoms
cmpsb
ljmp
jle
outsb
xchg
cmpb
outsb
cltd
mov
fidivs
arpl
xor
divl
and
add
and
xor
sub
stos
mov
or
out
inc
cmp
xor
out
lret
imul
pop
test
lock
pop
jne
push
dec
pusha
fwait
sbb
push
dec
jl
jmp
jmp
scas
push
xorl
pop
js
sbb
ds
addr16
inc
jo
negl
test
mull
lcall
mov
mov
dec
pop
push
mov
icebp
sub
notb
outsb
and
sub
iret
cmp
aam
test
mov
jae
mov
pop
daa
nop
ljmp
add
bound
adc
mov
or
nop
pop
jae
xchg
jmp
mov
mov
shl
dec
repz
sub
mov
sub
pop
adc
test
sahf
daa
in
adc
mov
aas
or
loop
daa
rol
and
xlat
fidivrs
ffreep
pop
or
pop
mov
mov
movsb
and
mov
shlb
clc
xchg
sbb
sbb
pop
js
pop
cmp
aaa
push
or
sbb
push
sarb
rorl
in
cmp
rcrl
xchg
lods
adcl
out
push
mov
int
or
mov
das
sub
clc
sahf
cmp
test
xor
in
mov
mov
sub
ja
fsubrl
jmp
cmp
notl
fimuls
hlt
cli
fsubrl
pop
lods
push
ljmp
push
test
sbb
add
int3
pop
sub
in
dec
adc
jge
lods
push
insl
out
dec
sbb
dec
inc
aas
inc
pop
addr16
not
aaa
mov
in
pop
sbb
ret
pop
inc
dec
and
push
lock
dec
adc
jl
ja
xchg
mov
push
cli
xchg
push
push
out
jae
fcmovnb
and
mov
adc
out
push
jmp
or
xlat
ljmp
scas
cmp
outsl
inc
cmp
aaa
dec
in
lock
lret
fcompl
mov
test
sub
daa
cld
daa
fbld
leave
sub
cld
orl
sti
push
outsb
xchg
push
mov
hlt
cs
mov
roll
dec
dec
push
je
inc
test
pop
lcall
mov
jo
popa
push
mov
fisttps
sahf
loop
push
into
ja
cmp
lods
popf
std
mov
rorb
stos
mov
and
stos
dec
mov
dec
jle
pop
sub
cmp
pop
pand
inc
fildll
lds
inc
jae
lods
cld
hlt
fidivrl
insl
add
out
pop
or
subl
add
fmul
mov
outsl
fsubrl
rolb
and
mov
dec
mov
fucom
stos
je
into
push
jbe
mov
mov
je
inc
sbb
xchg
jg
adc
ljmp
call
in
dec
xchg
mov
xor
stc
jne
and
pop
ffreep
push
mov
adc
xorl
push
ret
add
popa
lret
mov
or
jne
cmpsl
push
test
popf
pop
xor
fisubs
bnd
pop
rolb
push
ljmp
repz
fnstenv
mov
pop
or
loopne
shrb
je
lcall
mov
out
decb
mov
ja
xor
adc
mov
and
pop
and
daa
daa
std
cs
or
arpl
adc
mov
fisttps
push
adc
fs
ss
push
pop
das
popa
outsb
or
mov
out
aam
or
pop
and
aas
call
jl
iret
pop
jae
sbb
gs
dec
push
cmp
mov
sbb
call
in
xchg
aaa
jno
mulb
shll
and
mov
loop
leave
cld
mov
shll
add
or
ficoms
fidivrl
add
adc
cmp
cltd
push
cmp
je
js
mov
pop
lock
das
imul
dec
jp
leave
rorl
xchg
jl
jo
aad
ljmp
fs
lret
shr
and
rcll
inc
mov
pop
lds
std
fldcw
mov
bound
fdivl
jb
cmp
in
add
stos
pop
popf
pusha
cli
push
out
push
fildl
stos
dec
cli
or
filds
sub
js
cmpsb
adc
out
jb
mov
mulb
icebp
adc
and
fidivs
jnp,pn
cltd
xchg
inc
aaa
scas
dec
cmpsl
xchg
lret
or
sti
xor
mov
or
adc
cltd
inc
adc
pop
mov
lods
dec
cmpsl
xchg
call
enter
js
imul
cmc
iret
xor
icebp
lods
imul
cmp
cmp
dec
fsubrl
lock
cmpsl
cmpsl
mov
into
out
enter
and
aaa
push
jne
mov
mov
hlt
inc
dec
cltd
xchg
sbb
mov
out
inc
outsl
in
lods
sbb
hlt
cmp
rcr
mov
lods
in
ja
cmp
loope
xor
insl
dec
dec
and
mov
gs
cmpsl
dec
push
and
loope
aam
dec
clc
pop
cmpsl
xlat
sub
scas
and
jle
push
xchg
outsb
std
imul
mov
pop
xchg
cs
call
mov
out
jmp
dec
and
push
mov
repz
adc
sub
cltd
mov
rorb
loopne
orb
sahf
pop
sbb
cld
ret
mov
daa
sub
testb
pop
dec
or
sbb
mov
mov
bound
es
repnz
pop
mov
push
or
data16
sbb
fwait
sub
enter
mov
xor
imul
inc
cmc
ljmp
and
push
fmuls
mov
dec
nop
push
stc
xchg
sbb
mov
xor
popa
shlb
jo
imul
dec
das
xor
pop
inc
push
xor
cmp
mov
repnz
xchg
sti
cmp
clc
sub
sub
int3
in
mov
and
pusha
cmp
leave
stos
dec
mov
sbb
xorb
xlat
jo
repz
nop
mov
addb
and
xlat
shrb
call
mov
jle
outsl
adc
test
ja
add
mov
lret
push
rol
mov
scas
cmpsl
xchg
push
cmp
push
test
les
mov
jecxz
mov
testl
and
inc
aam
and
push
imul
xor
jnp
loop
mov
inc
mov
adc
sub
negb
test
push
mov
fcoml
test
popa
jecxz
fistl
mov
movsl
sbb
jo
xlat
lock
sahf
mov
or
jle
cltd
jmp
xchg
push
xchg
lds
push
or
das
cld
mov
jecxz
add
xor
loopne
inc
clc
push
xor
repz
leave
inc
jg
stc
repz
lret
ja
insl
mov
sti
jnp
cmpsl
push
mov
into
adc
insb
cmp
and
cs
pop
repnz
or
popa
lcall
loopne
lds
mov
or
jb
mov
fstl
jge
lock
ss
getsec
sbb
out
movsb
cmp
ljmp
pop
ret
stc
iret
mov
dec
inc
sarl
call
and
jp
jnp
sub
or
fadds
pop
jnp
sub
add
sub
dec
loop
test
xlat
shlb
sbb
mov
in
xor
xor
insb
mov
pop
add
nop
xlat
nop
jg
mov
push
sub
in
mov
cli
xor
and
and
repnz
insb
add
xchg
loop
pop
lods
repnz
mov
push
sbb
int
mov
pop
test
mov
pushf
cmp
pop
sbb
mov
pop
in
imul
test
insb
inc
adc
cmp
fs
outsb
mov
or
xchg
dec
mov
pop
jno
sub
pop
subb
cmp
loope
jecxz
jecxz
dec
sub
sub
jno
fsubrl
out
or
xchg
mov
dec
cmpsl
ret
cmc
ficoml
push
shll
jmp
xor
mov
loope
gs
out
mov
adc
push
xor
mov
sub
cmc
in
sub
cmp
es
je
in
dec
push
push
and
sbb
xor
adc
xchg
sub
fcomp
mov
mov
and
cld
mov
lods
sub
stos
cmp
mov
sub
pop
add
jmp
int
imul
jle
pop
incl
xchg
in
xor
adc
hlt
push
or
mov
sub
push
aaa
mov
aam
outsb
lahf
out
sub
fiaddl
pusha
inc
xor
ficomps
pushf
loope
ficoml
inc
clc
ficomps
dec
mov
scas
shlb
bound
test
fisubs
dec
imulb
shrb
pop
push
lods
inc
pop
mov
cmp
add
icebp
std
sarl
cwtl
arpl
lret
jae
rorb
cmp
push
mov
or
out
fldenv
mov
clc
les
test
push
mov
add
push
icebp
adc
pop
push
add
push
mov
sahf
inc
jb
mov
pop
mov
sar
cmpsb
or
mov
jo
cmp
mov
in
cmp
sub
mov
cmpsl
fldt
jno
jae
js
fstpl
out
xor
xchg
sarl
xchg
les
mov
icebp
in
imul
les
add
pop
lods
arpl
jnp
push
sbb
sbb
mov
lods
sti
movsl
cmp
jl
mov
and
test
push
xor
shrl
or
push
test
push
jmp
adc
test
dec
jns
push
negl
fstpl
sbb
gs
sub
shlb
add
inc
xor
clc
imul
mov
ss
add
in
cmpsl
std
add
test
arpl
lahf
cltd
pop
mov
lcall
rorb
imul
push
or
dec
divb
mov
cmc
loope
jae
fisttpl
cs
inc
mov
xchg
bound
movl
loopne
pop
outsl
repnz
pop
inc
xchg
or
fdiv
jecxz
inc
mov
insl
data16
push
leave
jbe
push
push
mov
mov
xor
cld
push
fcoms
stos
into
mov
dec
in
stos
push
aaa
cwtl
add
cmc
adc
mov
cmpsb
push
popa
fmull
scas
jecxz
and
jle
int3
xor
test
jb
sarb
jns
mov
int3
or
xchg
pop
ret
lods
rorl
sub
lret
icebp
push
xchg
addb
push
and
xchg
cld
xorb
arpl
mov
fcmovnu
stos
and
cmp
cwtl
js
jne
out
lahf
pop
pusha
xor
pushf
nop
adc
imull
add
ja
push
mov
jo
dec
or
stc
sub
movsl
push
movsl
mov
ja
arpl
push
mov
cwtl
mov
fcomp
sub
push
js
add
int3
scas
push
mov
testl
bound
xorl
sub
jecxz
mov
mov
into
mov
xchg
xor
mov
jmp
add
ljmp
push
inc
inc
das
adc
test
fs
and
pop
shl
push
js
pushf
aaa
dec
pop
mov
lock
hlt
mov
xor
add
je
adc
sar
outsl
dec
shll
dec
push
inc
push
or
mov
stos
jg
mov
daa
daa
mov
and
loope
pavgw
pop
stos
jns
jmp
cmpsl
pushl
movsb
or
jg
inc
add
pop
sub
repz
jns
mov
cmpl
mov
cs
rcrl
jo
xlat
loope
mov
adc
dec
cld
icebp
ds
sti
ret
push
lret
push
rcll
xlat
dec
add
lods
stos
mov
mov
push
dec
cltd
pop
nop
inc
das
fstps
lcall
lods
or
xlat
les
mov
scas
lcall
repz
jecxz
shlb
repnz
in
repz
mov
push
aad
orl
sub
fs
cmp
jecxz
nop
stos
or
jbe
mov
pop
xchg
pushf
xor
cmp
adc
sbb
les
pop
movb
in
mov
test
insb
arpl
mov
mov
pop
xlat
and
inc
lcall
push
xor
stc
pusha
jg
lea
mov
mov
jge
fwait
imul
sub
hlt
mov
ficoml
pop
dec
jns
xchg
xchg
sub
dec
or
into
dec
cmpsl
ficoml
out
loope
into
in
lods
xchg
or
push
or
jecxz
outsl
jecxz
adc
mov
imul
lahf
lahf
push
rcrb
aad
xchg
jne
gs
mov
mov
mov
or
and
ffree
and
into
inc
mov
leave
pop
adc
cmp
icebp
stos
pop
sbb
lret
add
decl
inc
adc
and
sbbl
sub
subb
aaa
inc
es
mul
add
ss
cld
bound
cmp
push
jne
enter
and
fbstp
jmp
cmc
cmp
imul
fisubs
or
adc
jl
adc
jle
aad
xchg
je
dec
xchg
sarl
mov
leave
arpl
pop
xor
xchg
scas
clc
test
or
int3
ljmp
sbb
imul
in
mov
sub
and
jge
test
lea
frstor
lret
decb
shr
sub
fidivs
mov
sarb
push
mov
mov
xchg
or
xor
sbb
adcb
shll
jle
mov
push
shr
int
out
cltd
and
stc
out
dec
and
leave
push
lret
mov
cmp
add
aaa
int3
sub
cld
jp
std
or
pop
mov
pop
jl
popf
gs
or
xchg
pop
hlt
out
mov
aas
frstor
mov
out
movsb
pop
xlat
outsb
das
lcall
decl
cmp
cmp
adc
adc
dec
mov
out
cmc
and
pop
out
mov
js
pop
adc
cmp
pop
arpl
or
jge
jecxz
cli
dec
insl
mov
cmpsl
insl
cwtl
pusha
sub
xor
pop
dec
ja
bound
sub
das
lret
inc
fcomps
popa
out
mov
test
mov
aad
mov
sahf
mov
cmpl
mov
enter
or
mov
inc
xchg
loop
adc
cmp
ljmp
cwtl
scas
xchg
test
sub
cmp
inc
mov
inc
sahf
jp
jbe
sbb
fadds
push
mov
mov
xchg
add
mov
and
mov
cld
clc
and
iret
mov
pop
ljmp
sbb
adc
add
push
sub
pop
dec
xchg
imul
int
jge
faddl
pushf
mov
lcall
data16
jne
lahf
mov
std
adc
mov
out
gs
lock
cmpsb
in
mov
aad
sbb
mov
movsl
dec
subb
je
aad
jmp
es
fldl
and
fiadds
stc
xor
insb
xchg
xorb
icebp
or
lock
adcb
add
adc
jge
test
lods
sahf
xchg
lods
fstsw
sub
mov
sub
fistl
and
mov
stos
xor
stos
loopne
add
ljmp
ljmp
fdivr
jno
aad
inc
int3
lret
aas
sarl
movntps
push
mov
shr
lcall
pop
dec
add
popf
push
shlb
add
enter
mov
iret
stc
xchg
mov
add
clc
dec
add
movsb
jl
inc
xchg
sbb
aas
dec
lret
xchg
jb
and
jne
jl
sahf
jbe
mov
lret
xor
out
mov
sti
push
jbe
insl
pop
outsl
cmp
in
xlat
push
in
mov
sub
xchg
lea
fisttps
pop
sbbl
hlt
aad
pop
and
sbbb
mov
mov
push
jg
pusha
or
loopne
js
loope,pn
push
mov
mov
mov
push
shr
jmp
mov
mov
in
dec
xor
fnstcw
pop
repz
cmpsl
das
jl
cmpsl
popa
jmp
and
and
cmp
scas
mov
mov
sub
test
cmpsl
shll
and
pop
mov
mov
push
dec
jp
or
sti
mov
and
inc
or
cmp
add
mov
mov
lea
pop
mov
xchg
pop
cs
push
or
out
clc
out
mov
jno
sbb
dec
and
pop
aaa
adc
pop
mov
or
or
and
xchg
test
push
aaa
cmp
sub
inc
jecxz
dec
stc
in
mov
fistpl
mov
mov
xorl
in
and
int
decl
imul
test
ja
rorl
js
insb
std
mov
es
mov
scas
sti
lret
mov
je
ficompl
mov
nop
ljmp
mov
imul
xchg
stos
ret
mov
icebp
jb
insl
insb
scas
sub
lock
enter
jb
hlt
cmp
or
mov
arpl
or
push
mov
jmp
cmpl
xchg
jae
enter
repz
scas
inc
rclb
icebp
leave
repnz
js
je
popf
mov
push
jne
inc
mov
mov
data16
add
stc
sbb
push
sbb
arpl
or
lret
mov
into
mov
out
scas
mov
jecxz
std
jno
xchg
lea
gs
and
and
mov
and
incb
inc
adc
sub
xchg
mov
jl
or
mov
mov
mov
jns
call
pop
or
aaa
aam
rorl
sahf
mov
push
inc
fsubl
insl
call
decl
xchg
jmp
mov
lcall
fsubr
dec
inc
pop
xor
das
cmp
test
movsl
mov
cwtl
xchg
xor
pop
out
bound
or
sahf
stc
xor
data16
jne
mov
idivb
sub
mov
shll
xor
pop
fcomi
jecxz
mov
or
call
and
dec
das
sub
and
cltd
pusha
xchg
lcall
sub
mov
push
push
adc
fucom
inc
mov
outsl
adcb
in
rol
stc
test
std
xor
scas
push
std
mov
lock
pusha
xchg
jmp
fimull
cmp
cltd
and
jge
sub
pop
dec
sbb
lret
in
cmpsb
pop
clc
xchg
inc
sbb
test
xlat
or
arpl
mov
mov
ljmp
pop
fwait
int
inc
scas
or
mov
aam
xchg
orb
xchg
add
stos
jge
fbstp
xchg
sub
adc
cwtl
pop
sub
inc
xchg
xlat
outsb
pop
rorb
add
adc
xlat
cmp
add
xlat
adc
mov
jl
sarl
xchg
or
gs
mov
xor
int3
enter
push
xchg
push
dec
sbb
jns
mov
push
xchg
fs
mov
xor
fbld
fidivl
rcr
mov
daa
adc
mov
cmpxchg
rcl
cld
test
loop
out
jb
dec
outsb
les
xchg
idivb
pop
and
mov
and
cmpsb
pop
ret
jge
jg
inc
xchg
jl
adc
mov
and
push
adc
mov
mov
and
xchg
or
jmp
jge
out
cs
adc
cmp
push
stos
mov
in
xor
test
nop
mov
addb
mov
aaa
mov
mov
adc
push
xor
adc
mov
movsb
mov
pop
and
cmpl
adc
sahf
daa
cmp
enter
iret
or
addb
pop
std
mov
sub
sti
mov
sub
les
inc
out
cmpsl
mov
and
cmc
aas
sub
iret
loop
fwait
das
das
jmp
xor
sbb
jecxz
xor
mov
ja
mov
psrlw
pusha
dec
mov
mov
sbb
xchg
lods
pop
leave
xchg
loop
dec
mov
push
or
int3
fdivl
inc
out
loope
inc
movsb
je
jnp
sbb
sub
test
xor
lock
iret
inc
push
ss
push
adc
jae
mov
jl
roll
and
xchg
mov
jns
lcall
and
int
dec
and
scas
mov
and
lods
xchg
les
arpl
ja
dec
and
das
inc
push
rorl
push
and
lods
push
dec
mov
sar
mov
sbb
bound
mov
pop
jg
lfs
outsl
mov
adc
cmp
stos
xchg
pop
fcomi
jmp
push
xor
mov
jge
mov
xchg
stos
xchg
mov
loop
mov
lret
fisttpll
push
xorb
and
ljmp
pop
add
adc
ret
jmp
cmpsb
mov
xchg
pop
ja
js
push
sbb
out
xchg
jle
call
push
mov
icebp
add
ret
ret
aaa
fs
mov
mov
js
xor
je
mov
sub
test
xor
in
lds
popa
push
adc
dec
inc
adc
les
pop
push
lods
push
cltd
jmp
repz
dec
push
or
adc
mov
ss
rcr
mov
jno
cmp
mov
lahf
loope
jns
jl
inc
dec
pop
out
sub
sub
outsl
jbe
adc
cmp
imul
lret
mov
roll
stos
push
into
xlat
jb
clc
aad
sbb
clc
push
stos
fisubs
call
and
pop
push
mov
jl
jo
and
scas
stc
xor
xchg
pop
adc
add
scas
mov
adc
jns
dec
jp
and
mov
or
sub
mov
outsb
ret
jno
loope
xorl
divl
cmc
push
je
in
jne
xchg
repz
adc
incb
mov
cmp
sub
daa
push
cmpsl
sbb
enter
jns
int3
fadd
inc
mov
ret
push
and
lahf
inc
pop
mov
cmp
mov
imul
pop
cmp
sti
and
in
incb
enter
loopne
sub
shll
push
push
mov
push
and
mov
loop
insl
aad
mov
xchg
mov
dec
out
adc
adc
in
loop
mov
sbb
repnz
adc
mov
cmp
shr
dec
dec
call
mov
daa
push
lret
add
or
sbb
sti
pop
in
push
pop
adc
pusha
lahf
sbb
sub
sbb
jmp
shll
je
dec
cmpsl
mov
mov
pushf
cmpsl
lahf
xor
outsb
pop
dec
xor
mov
in
test
jnp
xchg
arpl
ficoms
xchg
les
ljmp
data16
mov
lock
xor
ss
popa
and
in
out
xor
movsl
pushf
and
dec
loop
fsubl
mov
inc
cmp
mov
adc
popa
xchg
mov
jmp
fs
outsl
add
push
test
ret
loope
dec
subl
jp,pt
xor
in
push
fcos
push
nop
imull
nop
leave
xor
xor
shrl
mov
leave
adc
jg
jne
bnd
add
sbb
inc
add
sub
shlb
jg
fmuls
inc
jp
arpl
lret
aaa
push
test
push
lcall
mov
fwait
lds
mov
lock
call
mov
jecxz
outsl
inc
push
out
lret
pop
aas
or
adc
mov
xchg
ret
pop
cs
push
incl
jp
std
or
stos
cmp
sub
or
cmpsl
add
or
xor
and
scas
pop
ss
cwtl
jmp
pmaddwd
cld
lea
sti
imul
mov
add
mov
dec
imul
ljmp
mov
into
or
sti
add
insb
jnp
stos
shlb
xor
stos
out
cmp
cld
mov
mov
mov
repnz
pop
stc
inc
adc
psubsw
or
mov
mov
outsl
fxch
lahf
sbb
inc
jnp
movsb
fs
cs
inc
xchg
popa
in
add
adc
mov
pop
dec
ja
cltd
in
cmp
or
loopne
pop
pop
adc
dec
xorb
inc
mov
movsb
xchg
pop
or
loope
add
shl
lock
pop
push
xchg
stos
push
xchg
and
xor
aas
inc
sbb
sti
std
jmp
add
aam
and
push
mov
test
xchg
ret
xchg
pushf
test
jp
jg
test
mov
pusha
xor
push
and
sub
pop
repnz
iret
xchg
inc
push
pop
and
sahf
mov
cmc
in
push
out
push
mov
push
jmp
lods
test
jmp
mov
jle
fstps
sbbb
imul
lock
jg
loopne
mov
outsl
jl
fidivrs
ret
jbe
aad
adc
cwtl
pop
pushf
cmpsb
fs
loope
ljmp
mov
jb
cmp
ss
sub
pop
ja
inc
pop
push
add
fsubl
es
lret
int3
data16
sub
fsubrs
out
idivb
inc
cmp
in
sub
xor
fiaddl
and
test
out
mov
out
and
or
jp
cmp
fistpll
int
pop
sub
lcall
jne
out
sbb
mov
fadds
xchg
cli
mov
pop
xor
imul
fsubrl
bound
xor
ss
into
lretw
mov
scas
jmp
xor
int3
mov
iret
xor
dec
push
and
push
pop
dec
fisubs
bound
sbb
mov
xchg
inc
outsb
mov
fisubrl
sarl
and
insl
jne
cmpb
xlat
push
pop
dec
insb
push
mov
sub
pushf
inc
or
adc
push
and
lods
int3
jae
fisubl
pop
mov
incl
data16
rcrl
lea
add
shlb
mov
cmp
hlt
pop
mov
pop
mov
test
les
sahf
cli
dec
mov
add
or
lds
aad
jl
xchg
mov
push
pop
imul
mov
add
cltd
cmc
popa
cmp
sub
lods
mov
fisubs
sbb
mov
jge
sub
mov
ret
pop
xchg
sahf
adc
call
imul
out
push
dec
imul
push
inc
and
push
or
dec
imul
icebp
std
popf
sbb
dec
imul
pop
in
out
or
dec
clc
add
stos
jl
sahf
cli
sbb
push
jmp
ffree
dec
mov
push
mov
push
jp
mov
dec
xor
lods
lds
inc
aam
or
adc
testb
jmp
fadds
shrb
pusha
cmp
les
fdivl
fildll
shll
mov
imul
push
int
je
imul
or
mov
outsl
mov
movsb
mov
lock
fnstenv
test
addr16
test
outsl
out
je
div
dec
add
das
sti
dec
ret
popa
push
enter
stc
iret
cmpsl
adc
sbb
xchg
frstor
push
jne
xchg
aas
xor
push
dec
ljmp
std
ret
fs
cmp
stos
cli
dec
or
rcll
xchg
pop
mov
mov
ret
sarl
cltd
idiv
xor
pop
aad
and
iret
outsb
cwtl
cmp
xchg
pop
mov
jbe
ss
adc
fwait
mov
in
inc
pusha
ss
adc
inc
sbb
rcrb
mov
pop
cltd
or
leave
and
ret
mov
push
pop
xchg
arpl
inc
sbb
and
pop
mov
repnz
push
and
dec
sti
xor
stos
testl
pop
mov
dec
add
mov
jg
and
dec
aad
arpl
int
out
sub
and
xchg
add
adc
pop
or
lods
push
cmpsl
sub
and
adc
mov
xchg
fldcw
jecxz
lahf
pop
popa
adc
add
pop
push
mov
in
sub
testb
lcall
adc
mov
mov
pop
out
xchg
leave
mov
cli
jge
shlb
xchg
push
mov
adc
add
xchg
out
scas
inc
mov
fwait
xchg
sub
dec
rclb
cmp
in
adc
push
xchg
mov
xchg
adc
jmp
adc
push
insb
popa
pusha
not
popa
xchg
cs
cwtl
ja
sub
idivl
pop
and
stos
fucomip
js
out
rcl
sti
or
push
cmp
mov
xor
cmp
or
mov
pavgw
xor
or
and
fldenv
pusha
out
cmp
test
sbb
and
and
fiadds
jo
lret
icebp
punpckhbw
pop
gs
sbb
rcll
sti
test
dec
stos
mov
cmc
shll
jnp
inc
pusha
aaa
xchg
xor
scas
rcrb
cltd
jmp
xor
lods
adc
jp
pop
inc
push
aam
cmpsb
add
loopne
aad
or
jmp
iret
out
fidivs
std
pop
jge
call
lods
push
sub
je
lea
repz
jg
call
test
jo
ljmp
or
push
mov
mov
sbb
pop
scas
mov
sbb
imul
xchg
inc
and
xchg
out
jmp
nop
imul
stos
je
enter
push
push
inc
add
fisubl
out
mull
int
shr
xlat
mov
mov
add
cmp
int3
leave
gs
push
pusha
scas
popf
xor
mov
jle
sbb
les
mov
inc
jmp
push
pop
iret
call
or
jb
icebp
fdivrs
mov
pop
scas
pop
repnz
loop
xchg
mov
movb
shr
lahf
int3
push
pop
xlat
out
fcompl
popa
dec
push
cmp
xchg
daa
pusha
add
aam
sbb
push
loope
xchg
je
lret
test
xchg
mov
pop
ja
cmc
jno
xchg
xchg
sarl
inc
lods
dec
or
imull
shll
add
xchg
pop
out
cmpsl
lcall
popf
call
xlat
sub
sbb
push
mov
jecxz
inc
movsb
roll
mov
add
popa
mul
loop
sub
xor
mov
cmp
pop
push
sbb
cmp
clc
inc
xor
stos
leave
out
jg
int3
xchg
aaa
push
add
xchg
fildl
mov
cmp
aas
mov
push
dec
cld
jne
std
or
loopne
insb
xchg
push
cli
mov
ss
je
cli
adc
fcmovb
repz
fimuls
jmp
jg
sbb
cld
sbb
or
sarb
xchg
dec
add
lahf
xchg
mov
mov
add
adc
test
jg
xchg
mov
rcrb
sub
push
in
mov
pop
cmp
add
in
bound
stos
jne
outsb
aam
xchg
popa
test
sbb
push
sahf
movsl
call
in
das
mov
lods
mov
sahf
cmp
dec
jae
scas
lahf
push
sbb
xchg
leave
lock
add
aad
fistpll
ret
add
dec
xor
outsb
xchg
sbb
cld
stc
cwtl
shrb
cmp
scas
scas
bound
mov
mov
adc
mov
ds
scas
dec
or
daa
add
sub
ret
jp
outsb
add
push
inc
js
cs
les
lea
enterw
insl
mov
movsb
cmpsb
xchg
push
lret
sub
dec
dec
mov
sub
shl
xor
xor
mov
cmc
jl
shll
fcmovbe
ja
xchg
xor
cmp
add
cmp
in
fdivs
out
mov
test
cmpsb
mov
mov
or
or
jmp
dec
les
int3
cwtl
mov
xor
push
inc
add
test
dec
jg
aam
test
loop
push
lods
scas
call
nop
xor
mov
pushf
ficoml
sbb
enter
mov
xchg
repnz
call
sub
int3
adc
decb
popw
push
mov
and
rcrl
push
or
xor
mov
cmp
jl
dec
sbb
std
cmp
mov
fs
sbb
xor
inc
pop
loopne
mov
scas
ss
jns
cli
and
iret
xchg
mov
adcl
ret
fimull
cmpsl
arpl
cmp
enter
and
dec
iret
push
and
ret
lahf
jb
loope
mov
add
xchg
push
cmpb
cmpl
lcall
mov
or
fcmovu
sbb
lahf
inc
and
pop
out
lret
pop
pop
dec
inc
je
mov
xor
push
dec
inc
movsb
cld
jp
cmp
cmp
dec
jge
mov
cmp
push
dec
aaa
cmp
xlat
push
mov
andps
cmp
jge
push
test
fstps
mov
inc
and
int3
mov
pop
add
cmp
scas
pop
jg
nop
jp
xchg
js
es
xchg
daa
sti
outsb
sti
xchg
dec
lret
xchg
jge
pop
jg
or
pushw
sti
fsub
movsb
add
xorb
pop
insl
int
xor
cli
add
popa
ret
gs
add
enter
sbbl
cmp
mov
jl
or
or
xchg
filds
inc
cltd
sbb
insl
movsb
pop
cltd
and
mov
icebp
or
shlb
push
xlat
jae
xchg
clc
pushf
fs
inc
ljmp
in
aad
aaa
sbb
movsb
or
loopne
test
clc
add
sarb
mov
push
stc
jne
push
iret
subb
mov
daa
fcoml
jle
dec
pop
bound
pop
xchg
adcl
xchg
add
int3
ret
xchg
sbb
add
jl
inc
cmc
scas
mov
mov
pop
test
ret
cmp
lods
or
call
mov
add
dec
lods
bound
fstps
push
push
jns
out
pop
pop
sbb
xchg
dec
or
pop
cmpsl
test
jle
ret
mov
sbb
cmc
pop
or
sbb
mov
cmp
gs
xor
data16
sbb
jmp
mov
jnp
mov
jmp
bound
inc
scas
push
roll
jns
inc
popa
nop
mov
in
sti
inc
mov
xor
pop
mov
mov
test
aad
lret
jnp
pop
xchg
mov
mov
stos
lret
cmp
imul
mov
addb
push
mov
sbb
stos
inc
aam
jg
fsubrs
test
js
pop
leave
aaa
jge
pop
fwait
cmpsl
push
sub
add
dec
sub
out
in
pop
mov
sahf
sbb
addb
loop
dec
dec
test
push
mov
add
or
push
stos
jns
mov
lar
out
lock
push
mov
ss
dec
mov
xor
pop
shl
pop
mov
jp
loopne
pushfw
rcrb
lods
mov
ja
lret
inc
adc
inc
push
and
jmp
fstps
sub
inc
dec
sub
cmp
mov
xor
mov
aad
sbb
jns
pop
inc
test
lahf
inc
xchg
rolb
dec
mov
adc
xchg
xchg
xor
mov
mov
adc
dec
and
sbb
insl
cmpb
cld
test
inc
out
repnz
cmp
jle
rorl
add
fisubl
lcall
push
ss
mov
rclb
rcrl
push
inc
mov
pop
movsl
cmp
add
push
js
lret
loope
or
leave
sub
sti
in
sub
sti
cmp
sub
xchg
popf
jge
adc
mov
lock
loopne
inc
popa
jp
cmpsl
jno
xor
and
adc
enter
xchg
int3
pop
push
mov
cmp
xchg
xchg
out
mov
add
sbb
xchg
ss
or
mov
lods
pop
mov
push
jmp
or
jns
xchg
lret
sarl
mov
adc
inc
inc
jmp
mov
mov
and
xlat
lock
pop
inc
out
jb
cmp
xchg
pop
jmp
and
insb
cmp
xor
adc
inc
jno
dec
dec
in
jmp
jmp
test
xor
scas
dec
jb
stos
sub
and
push
push
add
mov
inc
mov
cs
xchg
mov
inc
movsl
or
lods
inc
mov
pop
imul
mov
rorb
mov
out
push
adc
xor
mov
pusha
sti
out
insb
xlat
clc
adc
sub
mov
ret
iret
les
sti
incb
jmp
add
push
dec
lahf
pop
pusha
pusha
lock
stos
add
inc
bound
sbb
lods
and
mov
sbbb
jbe
jno
push
and
adcb
adc
push
pop
outsb
inc
adc
xor
ss
icebp
inc
inc
je
xchg
xorl
out
lcall
mov
jg
sbb
sub
mov
push
sahf
outsl
add
and
or
push
or
scas
lcall
pop
sub
sbb
repz
popa
sbb
add
inc
add
push
out
call
aas
mov
push
iret
push
jecxz
push
adc
pop
aad
stc
imul
daa
push
jne
movsl
or
cmp
pop
cmp
adc
pop
push
lahf
xor
jbe
push
loopne
test
pop
int3
jns
test
fistps
in
cmp
adc
inc
repnz
xchg
enter
or
cld
cmp
jge
bound
push
dec
and
aaa
lret
jmp
test
add
iret
leave
shlb
iret
mov
xchg
mov
loopne
lcall
mov
sbb
mov
rcrb
push
cmp
sub
shl
sahf
push
shlb
mov
adc
and
mov
xchg
movsb
mov
mov
dec
xor
mov
jl
xlat
add
xlat
pop
pop
int
scas
test
push
mov
leave
cmc
sbb
xor
lret
icebp
jmp
cmp
xchg
popa
lret
jp
push
add
test
hlt
mov
test
dec
xor
and
mov
data16
jl
xor
imul
pop
arpl
sub
imul
mov
ss
inc
fiadds
in
mov
xchg
dec
loope
inc
sbbb
cmpsl
lret
out
sti
lret
fnstcw
push
mov
hlt
insl
dec
js
mov
adc
mov
movsb
adc
pop
lcall
mov
mov
adc
xchg
cmp
sahf
stos
outsl
movl
xlat
sahf
pop
je
lret
pop
push
pushf
pop
cwtl
sbb
fadds
push
mov
jbe
shll
mov
pop
mov
cmp
out
test
inc
fildl
call
das
lahf
in
and
inc
out
xchg
jge
xchg
shr
lret
dec
pop
subl
push
dec
fnsave
lock
inc
mov
jns
adc
popf
flds
push
sbb
js
sahf
aad
push
mov
fildll
adc
mov
mov
lea
dec
dec
sub
pop
js
or
inc
mov
lods
icebp
add
push
gs
lret
inc
das
jge
and
or
inc
popa
test
mov
jmp
lods
xor
int
int3
leave
imul
roll
popa
cli
test
xor
call
xlat
bound
sbb
mov
sti
lret
jae
dec
sahf
aam
jge
pop
pop
cmp
inc
ficoml
dec
xchg
notl
mov
in
cwtl
ss
cmp
das
ja
mov
add
adc
stos
icebp
cmp
fisubrs
cmp
mov
xchg
fidivl
jne
je
inc
pop
dec
data16
lods
add
and
mov
sub
adc
sbbl
repz
mov
push
pop
scas
in
or
ja
imul
mov
jp
fistpll
jmp
ljmp
pushf
sbb
push
mov
sarb
ret
xchg
xchg
test
mov
dec
or
bound
bound
pop
cmpb
popf
jecxz
fisttpll
xchg
cmp
ss
dec
and
add
dec
xlat
xor
dec
xchg
pop
add
sbb
jle
rorl
xchg
and
inc
xchg
int3
insl
enter
push
clc
push
sub
add
xchg
lahf
fidivs
inc
aad
xor
mov
test
pop
pop
shll
dec
inc
scas
aas
xor
mov
or
stos
dec
cmpsb
add
imul
popf
adc
outsb
sti
sbb
sub
inc
xlat
cmpl
loopne
mov
js
cmp
ffree
cmp
rol
mov
das
cmpsb
sub
pop
adc
xor
push
jmp
pop
push
inc
out
sahf
ret
gs
imul
jecxz
outsb
pop
xchg
les
sarb
das
mov
and
xchg
pop
push
addr16
push
jnp
pop
xchg
movsl
clc
jns
ret
repnz
adc
mov
jnp
int
incl
mov
cmp
xchg
mov
test
xchg
mov
inc
pop
mov
mov
dec
lock
call
out
mov
repz
out
mov
pusha
push
gs
mov
jno
testl
mov
sti
mov
in
dec
fistpll
movl
dec
or
fcmovu
xor
popf
mov
fisubrl
into
mov
outsl
fdivrs
movb
mov
dec
call
hlt
lds
push
xchg
inc
lock
push
dec
je,pn
inc
dec
add
push
jg
imul
arpl
sub
fwait
pop
ret
and
push
xchg
jb
xor
xor
dec
repz
add
push
cmp
scas
shlb
mov
sub
cmpsl
insb
inc
out
dec
jo
sbb
pop
or
mov
enter
lea
dec
das
and
and
daa
shrb
mov
mov
push
testb
push
adc
push
pop
cmp
or
dec
xchg
lods
mov
outsb
outsl
mov
jl
enter
cwtl
cmpsl
shl
sub
adc
nop
call
jbe
nop
std
stc
mov
add
pop
pop
loop
mov
fwait
cwtl
lods
jl
fcomp
add
or
js
aas
in
adc
notb
fdivrs
shrb
inc
out
loopne
and
insb
adc
and
fxch
cmp
mov
inc
iret
lods
sahf
lret
cmpsl
pop
mov
mov
mov
or
mov
cmpsb
mov
sub
xor
sub
gs
jp
jns
sbb
out
mov
xor
mov
popa
push
mov
mov
gs
pop
jge
pxor
jb
out
pop
or
scas
sahf
fbstp
or
push
cli
cmp
inc
jno
push
xchg
stc
pop
loop
loop
pop
fidivl
xor
fs
pop
call
jae,pn
cmpb
push
fldl
jg
loop
push
and
ret
ja
pushf
clc
sub
aaa
adc
inc
out
xor
or
sub
out
nop
mov
testb
xchg
rclb
and
roll
dec
mov
sub
lcall
mov
dec
and
xchg
iret
cmpsl
mov
adc
add
popa
inc
sbb
push
mov
mov
xor
jle
fcmovbe
orb
lds
push
push
stc
dec
outsl
push
jp
cmp
push
enter
xor
jbe
adc
cmp
push
add
nop
lret
imul
mov
or
pop
add
xchg
mov
mov
addr16
bound
mov
sub
cmp
daa
in
or
sbb
arpl
leave
movsl
popa
cltd
pop
xor
insb
cli
inc
cmp
test
push
dec
inc
pop
shlb
rcrl
out
xchg
loopne
cmpsl
sbb
dec
scas
adc
push
and
cmp
adc
mov
cld
call
xchg
or
push
scas
lahf
repz
xor
xchg
popa
adc
mov
aaa
lcall
push
hlt
cmp
push
sbb
adc
add
pop
hlt
bound
test
movsb
push
sbb
cmc
xchg
add
mov
push
mov
and
adc
push
jmp
or
inc
sub
jne
shr
lcall
mov
enter
mov
fcmovbe
bound
outsl
jge
inc
shrl
ljmp
mov
stc
cmp
sbb
add
iret
test
imul
mov
xchg
dec
mov
out
mov
dec
adc
inc
jae
mov
shlb
imul
mov
mov
loop
or
sti
xchg
scas
mov
sub
pop
loopne
hlt
dec
push
xchg
jo
xor
call
test
test
cmp
out
jns
adc
sub
mov
add
xchg
adc
inc
inc
enter
pop
and
add
sbbl
mov
es
frstor
cwtl
cmp
addr16
ret
in
lcall
stc
fisubs
lock
mov
mov
sbb
mov
data16
or
cli
cmc
jno
int3
sub
sbb
lods
xchg
or
mov
mov
adc
into
mov
adc
fadd
lret
or
xchg
js
insl
movhps
push
mov
cmp
cmpsb
mov
pop
test
pusha
push
xchg
pop
push
dec
sub
xchg
ret
sub
dec
adc
stc
jo
iret
insb
pop
in
lcall
add
in
lods
xchg
lret
cmp
xor
mov
iret
movsb
cmp
popf
push
sub
jg
sub
fwait
ret
sub
outsl
imul
fwait
and
or
adc
mov
add
sbb
mov
fmul
jb
jg
pop
dec
out
ficoml
cwtl
outsb
mov
lret
shl
outsl
pop
pop
lds
idiv
xchg
push
out
or
inc
or
mov
cmpsl
adc
fs
shll
cmp
pop
pop
cmc
int3
repnz
lcall
aas
pop
lret
inc
gs
das
jae
popf
mov
stc
lret
cltd
add
iret
pop
jae
lahf
jmp
es
lret
push
aaa
sub
push
ret
je
mov
mov
cmp
and
clc
add
and
or
pop
lea
sbb
mov
and
push
and
dec
push
jnp
mov
xorl
push
xchg
jecxz
sti
mov
in
jbe
fsts
bound
stos
xchg
imul
jno
out
inc
cld
popa
incb
ret
scas
cltd
out
or
mov
loopne
push
jnp
repz
sub
and
les
mov
jmp
pop
lcall
mov
mov
je
adc
push
adc
in
dec
mov
inc
out
add
xchg
mov
pop
xor
adc
add
imul
mov
mov
pop
adc
outsl
jb
hlt
and
int3
lahf
dec
inc
cwtl
dec
cmpsb
pop
jg
mov
imul
xlat
push
pop
mov
mov
shll
and
dec
sarl
ret
loop
sar
cs
dec
mov
stos
leave
int
jbe
lods
jmp
scas
inc
sbb
enter
jb
ficomps
mov
shr
mov
jne
sbbl
enter
arpl
cmp
fsubrp
mov
daa
aas
jae
sbb
leave
ja
scas
jge
xor
jmp
add
push
mov
aad
mov
sti
in
push
stos
icebp
adc
push
pop
je
push
cmpsb
push
aam
lock
lret
popf
xor
xor
mov
mov
xor
dec
js
dec
dec
cld
cmp
dec
xor
mov
in
push
inc
addl
push
or
jp
or
clc
nop
push
dec
mov
add
es
imul
in
jmp
jne
cmpsl
mov
mov
pop
imul
lea
int
cltd
in
fisubrs
or
not
xor
ds
ljmp
leave
xorl
shl
and
inc
add
aam
in
mov
or
sbb
add
inc
dec
dec
ds
sub
lock
mov
ret
rorl
lcall
rep
int
std
fldl
inc
adc
test
in
iret
fsubs
or
push
push
jecxz
stos
insl
sub
lods
sub
and
cmp
fisttps
test
pop
mov
mov
add
dec
jnp
into
cmpsl
int3
out
ds
xor
outsb
and
and
stc
or
mov
divps
mov
lret
dec
mov
es
iret
ja
fidivl
std
imul
or
ss
ljmp
xor
cwtl
adc
mov
or
repnz
pop
or
push
test
and
into
cmpl
push
mov
jecxz
stc
fsubrl
inc
mov
lahf
das
jmp
andb
xchg
xchg
add
jb
mov
leave
jno
xor
out
add
cmp
ret
repz
sbb
pop
test
aaa
push
pop
add
lock
pushf
mov
data16
dec
addr16
sub
loopne
sbbb
or
je
mov
call
stc
jecxz
sti
repz
jle
ds
aam
mov
xchg
jne
mov
and
and
or
enter
bound
je
push
cwtl
fprem
loope
mov
ud1
mov
ja
repnz
lock
insl
pop
mov
stc
mul
jmp
scas
dec
das
mov
xchg
mov
mov
xor
sbb
call
dec
xor
mov
pop
cmc
bnd
jnp
fld1
cmc
push
popa
addr16
insb
loope
mov
int
cmp
pop
pop
mov
std
xchg
jnp
jne
mov
cmp
pop
and
pop
push
clc
cmp
shlb
iret
data16
xchg
jns
je
das
aas
arpl
out
lret
repnz
call
xchg
in
push
mov
sub
les
pop
es
cwtl
pop
xor
fisubrl
mov
sub
sub
or
or
lods
jl
sub
push
or
fincstp
cmpsb
test
pop
lods
ret
add
add
lcall
inc
mov
leave
out
sbb
mov
js
idiv
outsb
push
in
movsb
out
jp
testl
mov
push
jecxz
jge
dec
scas
cmpsb
shll
iret
fsubrs
imul
sbb
pushf
xchg
bound
ss
push
cmp
insb
data16
aas
ja
cwtl
jmp
inc
dec
jmp
sti
lahf
int
int3
cmp
sub
xchg
mov
push
inc
sub
sbb
je
jno
cltd
lods
iret
add
mov
mov
xchg
pop
stos
mov
out
rol
cwtl
pushf
pop
xor
incl
mov
icebp
add
loop
repz
jge
mov
popf
lds
inc
pop
mov
inc
das
cmp
test
sti
jle
adc
rcrb
push
mov
arpl
jge
shlb
lock
add
cmpb
loopne
lods
stc
mov
mov
push
addr16
add
mov
xor
push
in
cmp
enter
ljmp
inc
lods
lcall
mov
pop
jno
add
mov
dec
cwtl
rol
pop
jo
nop
adc
imul
xchg
repz
movsl
leave
mov
stc
into
mov
dec
mov
push
mov
mov
fldenv
test
mov
or
iret
jmp
clc
das
out
push
cli
cmc
negb
ss
inc
aad
in
cmp
mov
les
fstl
insl
ret
add
into
ds
jne
js
ljmp
xor
cmpsl
push
push
cld
xchg
pusha
ret
into
dec
cmp
mov
sub
jmp
rcrl
mov
cwtl
lods
das
rolb
xchg
and
shll
repz
mov
xchg
les
es
rcll
pop
stos
jbe
fisubl
arpl
aas
push
mov
jo
repz
mov
es
mov
xor
inc
nop
out
mov
insb
lahf
ja
dec
jg
and
cmp
mov
adc
lds
out
jmp
sub
sub
in
inc
fmull
ja
or
sbb
test
movsb
incl
xlat
push
scas
mov
dec
pop
xor
cld
sub
add
into
cmp
adcl
jmp
lret
pushf
addr16
push
hlt
js
cli
ret
imul
fyl2x
sti
sub
repz
add
inc
mov
sbb
push
add
push
les
push
adc
cmp
fcomps
cmpb
sbb
inc
int3
or
sbb
jg
sti
clc
push
mov
xchg
loop
xlat
push
aad
push
dec
xchg
popa
cwtl
out
mov
sub
jg
arpl
les
rolb
ja
pop
dec
mov
lcall
xchg
das
outsb
lahf
test
imul
out
das
lds
jbe
push
nop
inc
movb
jmp
aam
bound
int3
cmp
pop
cmp
jl
dec
xchg
pop
mov
dec
or
stos
inc
jno
xchg
inc
jg
ja
xor
icebp
mov
lret
and
filds
in
mov
and
cmp
in
pusha
pop
mov
sub
ss
bound
aad
ror
in
xor
das
pop
fistpl
push
xchg
aas
jo
mov
mov
scas
push
mov
or
pop
adc
adc
push
pop
cmovle
sbb
pop
dec
cltd
call
icebp
pop
aad
xor
clc
mov
or
sbb
adc
and
inc
mov
dec
rcll
ds
mov
mov
daa
rcl
and
sbb
loopne
inc
repnz
push
mov
cltd
sbb
adc
ret
push
sahf
xchg
sub
pop
push
xchg
ret
movl
mov
enter
cwtl
pop
out
and
xchg
mov
inc
jecxz
enter
rorl
cwtl
xchg
push
or
fldcw
rcrl
cmc
add
add
pusha
xchg
cwtl
mov
enter
lret
ds
pop
cld
push
lahf
divb
xor
fwait
mov
mov
or
push
or
adc
loop
dec
sahf
divl
mov
cmc
push
jbe
add
in
sahf
daa
pop
lock
jbe
fimuls
fimull
jno
fdivs
cwtl
pop
add
es
jecxz
pop
pop
add
sahf
addr16
je
lds
fdivrl
add
adc
push
in
inc
clc
es
sarb
lods
mull
dec
push
roll
cmc
mov
mov
in
cmp
rol
mov
jno
cmpsl
scas
push
or
loope
fcoml
rcrb
jg
push
mov
cltd
imul
lret
pop
cmp
pop
sahf
inc
xor
notb
ljmp
std
ds
inc
lahf
in
jge
sbb
lret
int
fimull
aaa
mov
lahf
lahf
adc
and
mov
push
jbe
xor
mov
push
sub
cmp
cwtl
mov
lods
outsl
fsubr
or
cmc
inc
mov
daa
test
add
or
xchg
sbb
cli
sub
mov
fbstp
gs
dec
jg
mov
cmp
mov
sub
mov
add
insb
lcall
gs
mov
aaa
sbb
lods
push
jbe
outsl
jbe
jg
add
mov
repz
ljmp
adc
ja
sbb
mov
sbb
or
and
mov
mov
sub
inc
fstpl
xchg
add
jecxz
mov
js
neg
in
push
cld
mov
sbb
sbbl
pop
push
in
das
xchg
movsl
and
cltd
leave
divl
sbb
mov
bnd
add
jns
jle
push
mov
xchg
loope
xchg
ds
add
or
movsb
cs
clc
dec
divb
push
popa
xchg
es
pop
lods
mov
inc
push
sub
cltd
push
mov
ret
xchg
push
dec
aam
pusha
test
out
into
test
fisttpl
push
repnz
in
mov
push
jns
sti
test
dec
in
cwtl
subl
das
out
dec
sti
adc
mov
pop
ret
jge
mov
fnstenv
add
test
lret
aad
pusha
push
out
mov
xchg
push
out
dec
int
dec
sub
push
stos
xor
in
mov
sbb
xchg
into
jecxz
fildll
stos
cltd
adc
jns
and
es
out
mov
pop
sti
in
xor
or
or
mov
aaa
outsb
adc
lret
movsb
and
in
jae
repz
adc
lds
mov
rol
add
mov
das
mov
push
bound
test
shrb
push
ret
les
adc
jnp
adc
mov
shlb
jecxz
test
adc
xor
fcoms
js
fstpl
pop
lcall
mov
pop
xor
mov
xorl
inc
int
xchg
push
je
and
mov
push
dec
inc
cmp
add
xorl
mov
mov
fadds
clc
and
dec
cmpsb
in
dec
cmc
push
dec
sub
aam
lds
pop
cmpsb
inc
adc
icebp
inc
gs
xchg
mov
sub
sti
sbb
cmpsb
add
int3
jg
shlb
cmpsl
mov
or
in
das
jmp
cmpsb
bound
cmpsb
mov
popa
insl
movsl
cmpsl
fsub
stos
or
xchg
test
adc
fwait
dec
add
movsl
bound
sahf
cmp
out
aad
xlat
shll
add
dec
jmp
pop
cld
stos
aaa
lcall
pushf
add
mov
sub
push
pop
lret
pushf
sbb
jmp
insl
js
jle
jo
jno
xor
cmpsl
cmp
clc
jno
fimuls
movsl
pop
sti
fnstsw
sbb
mov
arpl
mov
xchg
pop
sub
adc
es
and
inc
or
dec
xorl
mov
aaa
shlb
pushl
addl
andb
std
aas
cltd
jg
xchg
repnz
sbb
jmp
push
rorb
pop
sub
cmpsb
mov
cli
and
je
fisttps
inc
cmp
outsl
lds
pop
addr16
and
jge
cmp
imul
aad
das
xor
aad
scas
jb
or
mov
and
addr16
sbb
dec
and
mov
sub
mov
push
test
fbld
cli
xlat
push
jl
add
mov
pop
insl
or
mov
iret
enter
jmp
sti
sbb
lods
shr
jle
mov
sub
cwtl
pop
aam
sbb
pop
jbe
dec
in
cltd
xchg
sbb
das
jns
sbb
or
ret
jge
xor
push
add
or
push
pop
jg
mov
mov
test
into
std
aad
xchg
sub
ss
test
push
and
sub
mov
notb
adc
and
inc
pop
or
shll
test
push
nop
pop
cmp
shrb
mov
int3
ds
cmp
sbb
fisubrl
push
mov
mov
mov
lret
push
adc
xchg
std
test
out
dec
xor
aad
jnp
int
cli
cmp
push
sub
jb
movsl
mov
popf
repnz
jb
mov
sbb
hlt
cmp
push
adc
das
mov
and
out
test
or
add
out
lods
inc
mov
cmpl
out
adc
dec
cs
inc
rclb
movsb
in
jmp
mov
push
xchg
xchg
sub
mov
inc
dec
in
mov
cwtl
daa
pop
dec
popa
xchg
fnstenv
mov
insl
mov
mov
sbb
jns
scas
lods
data16
cmp
movsl
in
adc
inc
sbb
test
in
jl
push
inc
and
fcoml
jge
push
test
sti
and
cmpl
or
push
jg
lods
mov
mov
testl
pop
mov
addl
xchg
jno
inc
mov
in
push
jle
aam
adc
push
mov
lret
dec
outsl
je
push
cs
xlat
notb
call
and
addl
iret
jae
jnp
push
add
mov
pushf
adc
or
icebp
dec
xor
jnp
test
pop
add
lods
stos
repz
or
aas
fistl
push
inc
mov
insb
push
lret
ljmp
ret
or
xchg
je
xor
sub
fistpll
lods
cmp
or
je
loope
dec
in
fisubs
lret
testb
xchg
outsb
push
xchg
inc
sahf
lahf
int3
mov
add
movsl
imul
cs
adc
pop
or
pop
push
jp
fistl
fistpll
inc
ret
mov
mov
lcall
lods
lret
stc
cli
aad
and
andb
dec
pop
adc
aad
ja
xlat
push
enter
not
jae
push
sti
dec
enter
insb
xor
imul
hlt
repnz
inc
xchg
notb
fistpll
mov
inc
hlt
push
jo
xchg
repz
dec
adc
mov
xchg
push
inc
les
sub
push
lock
ret
jns
sti
mov
adc
icebp
xchg
push
sbb
lock
sbb
xchg
sub
out
xor
mov
rcl
bound
mov
inc
and
and
mov
sbb
cmp
in
outsl
enter
das
xor
sub
xor
dec
cmp
in
je
ror
arpl
xor
imull
std
mov
dec
out
sbb
dec
pop
stc
fstpl
sahf
aad
cmp
scas
stc
dec
sbbl
push
cmp
fnstenv
dec
pushf
jg
icebp
sub
stos
mov
das
mov
mov
adc
ljmp
movsl
inc
xchg
add
rclb
ficompl
adc
jns
aaa
xchg
aad
xor
cltd
in
into
sub
push
adc
inc
adc
jge
mov
push
jo
decb
loopne
fdiv
cmp
push
sub
fstps
shlb
inc
hlt
das
push
cmp
xorps
in
xchg
loopne
mov
repz
sbb
scas
cmp
sbb
push
xor
mov
mov
gs
bound
insl
pop
pop
mov
or
aaa
mov
cmpb
cmpsl
test
mov
push
insb
roll
push
adc
sub
jbe
mov
inc
repz
xor
xlat
fmuls
jecxz
xchg
gs
out
pop
add
ficoms
mov
ds
pop
cltd
adcl
cmp
lcall
xor
lods
xchg
lock
cmp
pop
das
lcall
je
mov
or
outsb
insl
mov
addr16
sahf
imul
dec
dec
repnz
xor
repnz
mov
in
pop
mov
push
xor
mov
fdivr
add
jmp
ret
pop
push
icebp
je
lods
xchg
push
cmp
sbb
test
pop
push
aam
adc
in
sub
inc
add
jae
xchg
sub
inc
mov
test
notl
cmp
xchg
fsub
dec
ror
movb
add
test
orl
sub
pop
fwait
lds
stos
int3
stc
testl
lret
ljmp
adc
add
into
push
mov
and
xor
sbb
aam
out
inc
loopne
cmp
test
push
xchg
push
dec
push
cmp
scas
xor
cmp
sti
xchg
jb
add
jmp
leave
stc
fstl
dec
out
push
lret
scas
and
outsb
push
mov
sub
or
mov
inc
adc
rorl
push
or
dec
sbb
lret
mov
mov
inc
jo
mov
adc
shrb
mov
mov
test
scas
jo
nop
jle
add
mov
xor
fldcw
mov
gs
lret
leave
sti
pop
mov
out
mov
inc
push
popf
cmp
sub
cmc
int3
pop
xor
xchg
and
es
mov
dec
push
pop
pop
xabort
ret
cmp
dec
push
mov
dec
scas
dec
ja
mov
pop
stos
and
sub
mov
mov
ljmp
les
movsb
das
push
push
loopne
lret
stc
and
push
pop
ds
lds
test
inc
jb
movsl
mov
adc
mov
inc
jge
push
adc
mov
ret
mov
push
out
xor
repnz
mov
xchg
hlt
addr16
dec
xor
nop
int3
mov
push
inc
and
add
ret
mov
mov
cmp
xchg
popf
inc
lret
cmc
dec
in
push
pop
in
mov
cmp
mov
rcrl
int3
mov
xor
in
rorl
ds
into
lods
pushf
mov
or
mov
imul
daa
cmp
mov
popf
addr16
sarl
lahf
and
inc
out
cmc
xor
sub
rcll
inc
int
dec
xor
lock
and
push
sub
dec
and
shlb
add
test
loopne
std
mov
out
sub
into
push
stc
and
adc
lret
cmp
sub
sbb
fnstsw
sbb
dec
jge
mov
sub
lcall
pop
and
mov
dec
hlt
dec
xchg
rcl
dec
and
cmc
lds
mov
mov
jge
cli
xchg
sbb
idiv
and
pop
loope,pt
or
xor
and
and
add
in
outsb
pop
icebp
bound
cmp
mov
mov
xor
ss
movsl
cld
aas
jbe
xor
dec
pop
hlt
mov
int3
sub
js
in
out
pushf
push
js
hlt
pop
cs
pop
push
insb
sbbb
nop
dec
jecxz
repz
or
dec
sub
jbe
push
mov
add
and
sbbb
xchg
sbb
repnz
clc
pop
mov
mov
loopne
jo
sub
mov
pop
sub
cmpsl
adc
int
jl
cmp
stc
out
and
andb
cmp
outsl
outsl
add
ss
or
loope
mov
push
stos
sub
pusha
fstpt
and
imul
popa
jnp
cmpsl
adc
xchg
and
jo
lock
in
bound
or
mov
lods
adc
xor
mov
popa
sti
adc
int
jp
mov
sub
or
dec
fiaddl
mov
adc
dec
sbb
outsb
push
mov
sub
jbe
filds
mov
stos
jno
pop
sbb
lcall
push
push
mov
je
xor
movsb
push
das
or
in
in
rcll
xor
clc
pushf
das
pop
mov
lret
and
lea
or
ljmp
sarb
iret
jmp
fwait
aas
push
mov
cwtl
out
cmp
push
or
lea
or
pop
mov
mov
push
loopne
pop
pop
notl
jno
mov
mov
cld
repz
or
push
sbb
lock
out
mov
ficoms
jl,pt
push
jp
stos
lock
mov
adc
in
jb
ss
pop
movsl
cmp
ljmp
sub
jge
jle
mov
jmp
sbb
cmpsl
mov
fstl
push
lock
stc
out
sbb
mov
sub
or
loope
lods
push
outsb
jmp
push
jae
scas
out
out
jne
dec
popa
or
xchg
jns
push
jge
aam
out
sbb
jbe
and
pop
dec
inc
mov
cmpsl
bound
mov
cmpsb
sbb
mov
das
inc
xchg
ret
lret
jg
addr16
inc
dec
push
sub
jns
fcomps
scas
cltd
sub
xchg
pushf
adc
andl
pop
sbb
daa
pop
jecxz
jge
mov
add
sub
ljmp
adc
enter
cmpsb
dec
mov
mov
mov
fildl
mov
or
adc
lahf
test
or
jle
and
stc
out
hlt
cmp
and
xchg
clc
stos
xor
cmp
fidivrs
loop
clc
lods
add
inc
stos
or
or
fsubrs
or
xor
popf
dec
add
rcll
lret
adc
adc
pop
aaa
or
cs
xchg
fsubl
push
out
icebp
int3
pop
sbb
jae
cwtl
mov
aam
aad
dec
mov
sbb
pop
add
cvtps2pi
or
dec
mov
mov
cmc
pop
jle
mov
pop
mov
cmp
rcr
push
int3
and
inc
xchg
adc
jmp
xchg
or
push
jp
ljmp
insl
xchg
test
sub
cltd
enter
leave
cmpb
xchg
fldenv
lret
aam
test
inc
scas
fistpl
pop
fs
push
lahf
sbb
in
aaa
jp
mov
sbb
jle
test
push
xchg
adc
aam
repnz
xor
mov
push
ljmp
lds
add
or
popf
mov
insb
jo
xchg
cmp
movsl
xchg
je
or
repnz
out
jne
gs
mov
mov
lods
cltd
insb
imul
lret
mov
test
dec
imul
push
stc
lcall
pop
sbb
dec
mov
fs
xchg
rorl
bsr
call
mov
cmpsl
fistl
arpl
data16
xchg
jns
jns
jl
fstp
push
sub
out
sahf
idivb
push
sub
xchg
mov
dec
jle
pop
sahf
pop
or
insl
jle
sbb
and
fstl
dec
gs
pop
lea
pop
pop
arpl
ss
jmp
mov
sti
jb
orb
lds
push
idivl
mov
jbe
fwait
shll
lock
push
mov
mov
or
out
stos
sub
add
jne
pop
xchg
lock
pop
ret
push
idivl
cmp
test
mov
cmpsl
dec
jecxz
add
and
cmp
js
and
adc
push
iret
ds
jno
int3
jle
mov
out
mov
int3
mov
bound
xor
and
pop
dec
insb
decl
ljmp
mov
imul
jp
mov
push
mov
and
iret
aas
jno
and
jae
xchg
ds
dec
dec
inc
mov
mov
ret
cmp
sbb
pusha
mov
mov
scas
pop
sbb
movsb
test
mov
jo
push
jae
out
lods
int
sub
adc
or
or
bnd
imul
inc
inc
sub
repz
enter
cmpsl
inc
mov
lock
push
push
lds
sbb
xchg
mov
incl
imul
sbb
sbb
and
aas
add
outsb
xchg
dec
mov
adc
cmp
nop
adc
add
int3
sub
cltd
add
mov
fnstenv
inc
add
fildl
cmc
aas
popf
push
sbb
mov
aam
xchg
insl
cmp
lcall
rcll
lods
and
repnz
mov
stc
xor
mov
outsl
cwtl
or
push
fdivrp
jle
sub
paddb
daa
and
jecxz
mov
std
sbb
mov
int3
sbb
inc
mov
jmp
mov
jg
mov
pop
gs
mov
lods
gs
mov
call
mov
mull
inc
rcrb
mov
pop
dec
ljmp
dec
rol
and
inc
sub
fs
int3
out
shrl
fwait
jo
into
adc
frndint
inc
test
in
mov
pushw
decw
add
sbb
push
add
xorl
push
lds
xor
inc
jg
and
pop
repz
mov
add
aaa
push
imul
loop
hlt
xlat
jno
std
psrad
xchg
xor
inc
xor
aam
inc
xchg
push
push
add
test
sahf
mov
and
test
jp
testl
and
adc
push
adc
sbb
sti
mov
les
leave
mov
insb
push
sbb
cs
fsubrs
dec
aas
test
or
xchg
mov
xchg
jle
pop
fmull
daa
xchg
repz
jle
fidivs
dec
pop
imul
xchg
lods
adc
xor
jb
cmp
cmp
shrb
test
std
or
xchg
shll
scas
movsl
jle
jg
call
les
xchg
mov
movsl
lret
mov
nop
jmp
xor
xchg
test
leave
or
xor
xchg
popf
push
pop
cli
outsl
call
mov
sub
sbb
leave
outsb
mov
sub
imul
mov
pop
movsl
pushf
ds
adc
fdivp
popa
sbb
jl
movsb
loope
aam
pop
cmp
neg
jecxz
mulb
shlb
pop
and
pusha
sub
cwtl
movsb
lret
push
jp
iret
std
dec
mov
es
fistpl
lahf
js
fcmovbe
xchg
mov
or
sbb
add
jecxz
sbb
loopne
stc
cmp
aam
push
shlb
mov
scas
mov
test
add
jecxz
push
cmp
and
mov
mov
or
cmp
dec
xchg
jp
jmp
aam
shll
xor
jno
sub
push
jmp
inc
mov
in
sahf
mov
ret
xchg
dec
les
xor
js
scas
sbb
out
aad
mov
stc
clc
jecxz
push
fisubs
gs
dec
sub
lods
lcall
push
and
dec
inc
xor
mov
mov
sti
adc
mov
stc
mov
xchg
jbe
aas
and
and
mov
sbb
push
sub
test
mov
xchg
and
cmp
lock
pop
in
ss
nopl
pop
push
jb
rol
and
adc
add
icebp
adc
or
imul
mov
jecxz
mov
jae
mov
pushf
cmp
xorl
pop
jecxz
daa
mov
jge
inc
outsb
in
ja
dec
adc
lahf
sbb
in
scas
outsl
jno
es
sub
xorb
mov
push
mov
scas
mov
stc
or
arpl
fs
xor
pop
rcrb
in
out
test
rcrl
aad
lea
pop
lret
adc
pop
inc
stos
mov
mov
sahf
jbe
push
pusha
ljmp
inc
fcmovnu
nop
add
test
mov
in
int
rcrl
in
enter
sarb
arpl
lods
sub
cmpb
push
dec
jno
ja
pop
and
jg
movsl
xchg
or
xchg
dec
cmc
addr16
dec
lcall
pusha
mov
ljmp
imul
mov
stos
or
cmc
in
pushf
out
xchg
xchg
or
or
jp
lods
adc
out
sar
xor
loope
ret
loope
or
adc
and
js
mov
xor
xchg
jns
movsl
sbb
lahf
jnp
mov
outsl
aam
jno
cmp
mov
pop
ljmp
test
mov
and
push
sbbl
movsb
and
jmp
push
out
int
mov
jg
pushf
push
rolb
cwtl
sti
push
or
pushf
test
cli
jecxz
jg,pt
iret
js
push
ljmp
test
jge
stos
out
add
das
cmpsl
test
mov
push
jnp
and
xchg
jo
lds
add
fcoms
add
inc
push
leave
mov
sbb
clc
shlb
xorl
or
push
rclb
fstl
cmp
and
pushl
mov
mov
sbb
clc
mov
sub
addb
fisttpl
mov
ljmp
in
sahf
lahf
jg
mov
mov
dec
jbe
inc
cmpsb
fwait
xchg
in
ljmp
push
stc
inc
dec
and
lcall
pop
sub
sub
cmp
gs
imul
in
js
cmp
jp
adc
out
dec
test
popf
and
pop
or
out
fnstsw
stc
mov
dec
lock
cs
add
push
jo
jge
test
aad
dec
and
sbbb
lock
cli
fisttpll
mov
lret
jb
cmpsb
fldl
mov
xchg
andb
test
pop
or
sub
lret
mov
fisttpl
insl
popa
js
out
pop
insb
int
inc
jne
scas
xchg
sbb
or
push
cmp
dec
fisttpll
js
pop
ret
jns
dec
dec
push
fbstp
movsb
adc
hlt
rcll
mov
iret
xchg
inc
les
cs
loopne
mov
and
sbb
aam
test
scas
stos
mov
test
dec
xor
sbb
stc
fisttps
loope
mov
mov
sub
push
jge
push
cltd
test
jns
cmp
or
nop
push
in
out
outsb
mov
mov
daa
dec
out
add
xchg
add
push
fldl
mov
mov
and
sbb
inc
rorb
xchg
adc
arpl
mov
xchg
push
push
ficoms
rorb
mov
push
ficompl
aaa
xorb
inc
add
jmp
iret
cmp
xchg
mov
jne
repz
popf
jnp
in
adc
out
cmc
jecxz
popf
pop
inc
add
int3
loop
xor
pop
andb
cmp
xor
jecxz
mov
in
lods
scas
xor
outsl
sub
dec
repnz
jnp
xlat
pop
cmp
mov
xchg
dec
xchg
push
jle
mov
gs
or
call
xchg
mov
test
inc
mov
jg
into
stos
scas
pop
jl
divl
aaa
fucomp
bsf
jp
loopne
or
enter
sub
jns
dec
lds
inc
scas
add
cs
pop
loop
aaa
mov
pusha
and
les
add
das
jp
pextrw
or
cmp
add
std
sbb
sbb
lahf
pop
sub
out
lock
mov
fstl
test
cmp
shrl
jno
repnz
popa
leave
ret
mov
imul
jp
add
lret
aam
mov
inc
loop
lcall
xchg
int
jo
ss
dec
add
iret
into
data16
leave
lock
mov
pop
inc
rcrb
mov
or
lret
mov
or
jae
add
dec
xorl
out
sbbb
mov
movsb
xchg
nop
sub
push
sbb
xchg
adc
test
enter
andl
mov
push
shll
and
out
icebp
cmp
pop
mov
imul
cld
in
pop
sbb
push
jecxz
mov
jl
ss
loope
mov
jl
mov
sbb
test
mov
daa
dec
cmp
fbstp
sub
adcb
lods
pop
rcr
mov
loop
mov
aam
inc
jne
xor
incl
js
cmpsb
push
cmpsl
xchg
inc
cld
jo
lock
dec
sarb
jg
movsl
pop
inc
pop
sbb
int3
hlt
test
adc
push
push
idivl
adc
shrb
or
dec
pop
cmpsl
adc
insl
pop
mov
dec
ret
mov
mov
pop
cmpsl
sbb
sub
sahf
lods
pusha
dec
ss
das
outsl
xlat
movsb
std
bound
stc
jp
enter
xchg
inc
cmp
add
icebp
out
fsubrs
adc
mov
jmp
daa
sbb
adc
mov
lods
or
aad
sbb
mov
xor
insl
xchg
shlb
mov
sbb
mov
jge
pusha
out
push
gs
or
jge
loop
add
and
outsb
call
add
sbb
sub
inc
fnstsw
pop
scas
orl
in
insl
and
add
ljmp
and
in
sub
addb
adc
inc
cmp
cmp
dec
mov
jbe
pusha
movhps
jle
ffree
roll
cli
mov
or
scas
popf
movb
data16
adc
mov
mov
adc
mov
js
xchg
and
xor
hlt
mov
xchg
adc
rcll
sub
lods
aam
faddl
mov
xor
lods
fstpl
inc
mov
ja
sbb
cwtl
inc
mov
add
jp
imul
nop
dec
or
jnp
popa
imul
rcrb
adc
lock
aad
test
add
jmp
and
dec
xlat
pop
popa
repnz
adc
insl
adc
or
xlat
mov
push
push
outsb
cmp
adc
jnp
add
cli
add
rolb
lods
xchg
ret
aaa
mov
test
inc
push
into
or
mov
add
filds
sub
sahf
and
iret
lret
je
outsl
int3
pop
jg
mov
inc
cmpsl
out
icebp
int3
testl
mov
stos
leave
fisubrl
fdiv
cs
les
dec
mov
addr16
cld
shl
lret
push
pop
cmp
pop
fistpll
pushf
sbb
lcall
jae
fiadds
jge
add
mov
cmp
in
push
sbb
pop
adc
sbb
inc
cmp
or
push
sarb
loopne
rcrl
dec
xchg
adc
adc
mov
shl
adc
jnp
cmp
sub
fucomip
shrl
mov
adc
out
jnp
xchg
data16
push
adc
mov
mov
adc
in
lods
orl
sbb
jnp
mov
stos
mov
adc
or
or
sarl
jo
add
mov
rcr
cmp
mov
adc
xchg
jnp
mov
sub
push
lea
in
sbb
les
sub
mov
pop
iret
inc
and
sbb
cmc
add
push
push
push
adc
adc
push
mov
pop
or
cmp
push
mov
adc
push
xchg
pop
ljmp
xchg
out
pop
je
jne
push
mov
add
mov
mov
fldt
xchg
cmpsl
call
jg
popa
loopne
inc
stos
adcb
sahf
pop
addr16
test
in
and
in
lret
stos
inc
jle
dec
inc
popf
xlat
je
imul
stos
das
mov
xor
sbb
stos
aas
xlat
cmpsb
loopne
mov
mov
push
xchg
xchg
gs
and
mov
test
shll
pop
adc
adc
mov
scas
outsb
out
stos
pusha
inc
jne
call
stos
mov
test
pushf
push
movsb
cmp
arpl
or
lret
loope
hlt
fcompl
pop
pushf
xor
aas
cmpsb
ja
xlat
das
xchg
call
xor
es
fldl
adc
dec
popa
outsl
cmp
push
imul
pop
mov
or
jle
lahf
in
mov
roll
adc
cmp
sbb
leave
push
add
sub
lods
lods
jns
repz
sbb
xor
es
mov
adc
fs
or
mov
bnd
mov
or
xchg
or
cmp
pop
xor
loopne
or
add
pop
pop
fsubs
scas
ds
and
fwait
xor
cmp
pop
and
popf
scas
sbb
clc
cld
xchg
fwait
ss
insl
ljmp
arpl
loopne
xchg
mov
dec
mov
inc
mov
bound
loopne
xchg
jp
mov
add
cmpsl
lock
pop
push
test
ret
int
push
xor
push
mov
lods
jge
jle
pop
and
mov
out
xor
mov
je
or
pop
xor
cltd
push
jbe
xchg
xchg
and
sub
daa
out
cltd
and
imul
and
adc
and
push
mulb
insl
push
adc
testb
dec
ret
iret
jmp
and
aaa
call
fsubr
test
sbb
rorl
xchg
imul
push
cltd
pop
insl
inc
nop
mov
jecxz
loopne
sub
fsubrs
push
xchg
mov
inc
push
and
loop
sbb
loopne
push
mov
dec
add
mov
mov
cmp
xchg
lods
mov
cmpsl
push
or
ds
push
push
in
mov
mov
das
mov
arpl
jg
inc
cli
xchg
mov
iret
daa
rorl
mov
xchg
jb
add
sbb
inc
pop
ljmp
scas
repnz
add
fnstsw
mov
push
out
daa
push
fimuls
stc
sahf
and
cs
iret
sti
sbb
push
mov
pusha
cli
jns
xchg
mov
pop
or
out
fcompl
add
add
mov
jp
lods
icebp
mov
clc
scas
mov
icebp
add
ja
add
es
in
ja
cmp
mov
and
std
mov
cld
inc
dec
ljmp
push
test
cmc
xchg
xor
mov
xorl
int
lds
pop
mov
outsl
mov
jecxz
cmpl
sbb
jb
mov
jbe
push
int3
inc
repz
lods
aad
push
xorb
call
enter
mov
xchg
rcr
shr
push
or
insl
cmp
scas
mov
iret
sbb
inc
test
std
pop
sbb
pusha
aas
les
out
rcrb
andb
dec
fcomip
stc
adc
cs
stc
mov
jo
fistps
adc
orb
cli
subb
inc
in
xor
or
gs
xchg
addb
ret
loopne
rorb
mov
in
adc
mov
outsb
scas
sbb
outsb
aaa
jmp
popf
mov
xchg
pop
fmull
or
adc
sub
dec
adc
inc
and
sarb
popf
lcall
gs
fisttpl
lea
outsb
sub
nop
mov
sbb
shlb
sbb
adc
push
outsl
cs
fldlg2
outsl
jnp
mov
fistpll
mulb
imul
lds
addr16
fwait
sbb
in
movsl
pop
test
xchg
dec
xchg
push
mov
sub
lahf
testl
das
sub
pop
dec
out
pop
nop
lea
divl
xor
stos
fst
add
scas
out
loope
out
mov
mov
stc
mov
insl
loope
jnp
sti
push
out
lret
pop
mov
sbb
test
xrelease
int3
jo
push
pusha
adc
ljmp
movsl
popf
jbe
stos
push
dec
ret
jb
dec
enter
iret
inc
pop
arpl
ss
int3
sbb
mov
gs
pop
mov
rcrl
xor
repnz
sbb
jbe
or
jl
and
idiv
xor
cmp
xor
push
cmpsb
cmc
std
rorb
pop
test
stc
sub
pop
hlt
movsb
jmp
sbb
jge
sub
pop
xchg
jl
aas
dec
dec
inc
insb
testb
repnz
adc
popa
jno
xor
sbb
mov
clc
cld
xor
rcrl
xchg
test
add
inc
xlat
xchg
fmuls
push
push
adc
mov
stc
lret
iret
mov
fsts
ds
imul
aam
fisubrl
sbb
and
sub
aaa
aas
test
in
and
int3
sbb
inc
push
subl
int3
pop
mov
mov
fwait
jp
push
outsb
pushw
cwtl
mov
push
xchg
in
push
mov
jecxz
stc
or
setb
out
fldcw
pop
imul
pop
adc
xlat
fidivl
mov
mov
and
cld
and
cwtl
pop
pusha
cmp
loop
inc
js
jmp
jne
or
sub
and
fiadds
aaa
mov
pusha
jge
or
pushf
scas
mov
xor
inc
popa
test
sub
xchg
out
bound
sub
mov
test
das
sbb
push
arpl
mov
xor
push
adc
pop
test
cs
dec
shll
cmp
xchg
fldcw
push
sub
fwait
movsl
cs
std
mov
fwait
mov
dec
lahf
jnp
dec
int3
loope
add
pop
jmp
outsl
and
int
mov
pusha
jp
mov
popa
repz
fdivrs
sub
and
and
adc
popa
ret
repnz
iret
push
push
je
or
arpl
add
lds
lods
enter
cmpsl
ret
scas
push
hlt
mov
aas
fsub
rcl
int
xchg
insl
lock
sbb
mov
fwait
push
pop
pop
pop
jle
xchg
ja
das
xor
jle
add
jg
jo
gs
lds
jmp
xchg
dec
jne
and
repz
pushf
pop
jge
daa
jne
outsl
imul
inc
mov
adc
sbb
iret
int
push
cmpsb
outsb
add
lock
dec
push
in
addr16
sahf
pop
xor
insb
push
push
xchg
mov
push
insb
shrb
shlb
outsb
cmc
jp
lret
movsl
nop
mov
in
xorl
mov
cmp
mov
cmp
test
or
cmpsb
fistpl
scas
call
push
or
stos
pop
and
mov
sbb
pop
mov
fcomip
lahf
xor
xchg
lods
outsb
fisubl
fisubs
jb
inc
rcrl
inc
in
dec
and
fsub
mov
fcoms
or
test
arpl
cmp
sub
xorb
or
test
mov
insb
cmc
add
enter
int3
cmp
xchg
cmpsb
jmp
sub
jl
iret
xchg
cmp
movl
xlat
pop
mov
out
mov
nop
movsb
shlb
test
mov
jb
mov
leave
dec
cmpsb
and
cwtl
mov
nop
pushf
sub
mov
jno
jge
inc
push
sarb
mov
cwtl
add
ror
mov
movl
xor
rclb
jge
mov
pop
lods
neg
in
subb
iret
out
add
pop
mov
cwtl
call
push
mov
clc
mov
cmc
inc
lret
cmp
push
ret
mov
js
mov
notb
mov
push
nop
jl
pop
int
add
ret
push
push
jnp
in
push
popa
add
mov
pop
clflush
and
loop
sbb
and
xor
and
sbb
and
sub
stc
cltd
adc
rcll
lea
loopne
pop
add
aad
sub
insl
rorl
shll
xchg
xor
cwtl
pushf
ja
fucompp
xor
jne
je
and
cltd
out
mov
mov
fs
mov
shl
pop
xchg
mov
xor
xor
mov
sbb
in
pushf
cli
sub
call
repz
dec
je
sub
cmp
std
push
cmp
mov
xor
push
imul
loope
int
ret
mov
insl
jl
cmpsb
and
jle
bound
mov
insl
xorb
fwait
xor
in
movsl
aas
push
inc
testb
adc
mov
in
fisubrl
inc
sbb
loope
cmp
jecxz
push
lahf
push
aad
adc
mov
cmpsl
adc
mov
fcomps
add
mov
and
add
jno
outsl
popa
pop
fcmovnbe
pop
std
bound
jp
je
inc
ret
shll
imul
aas
sub
lods
sub
and
mov
dec
fwait
and
and
inc
loopne
mov
std
ror
mov
inc
js
mov
inc
pusha
sub
mov
or
mov
and
xor
cmpsb
push
dec
or
sbb
jnp
sub
rorl
lods
iret
xor
jbe
cli
cld
adc
les
push
cwtl
jmp
inc
loope
pop
into
mov
sbb
push
mov
addr16
movsb
outsb
dec
icebp
arpl
insb
enter
jl
xchg
clc
adc
lods
inc
ss
cli
imul
push
ljmp
imul
outsb
movsb
das
push
stos
shrl
adc
jb
cmpl
shr
xchg
call
sub
pop
sub
xor
pushf
test
rorb
push
gs
movsl
mov
cmp
mov
mov
mov
dec
jbe
lret
adc
push
pop
lea
ret
jno
mov
shr
test
push
mov
fimuls
xor
xor
mov
cmc
pushf
in
pop
xchg
scas
pop
mov
pop
cmp
shrl
sti
movsl
hlt
dec
daa
xchg
fistpl
fnstenv
movsl
or
sahf
lods
sub
sub
or
dec
push
fiaddl
and
push
fs
or
mov
inc
xchg
add
push
sub
addr16
test
fsts
push
sub
fwait
loope
xchg
cmp
rcl
pop
add
loopne
clc
xchg
fwait
adc
and
mov
in
pop
outsb
imul
lret
sbb
push
rcrl
test
pop
pop
cltd
test
cmp
insb
cmp
xor
mov
and
jne
or
xchg
mov
in
push
mov
and
ret
lret
inc
imul
ja
jge
mov
outsb
mov
aas
rcrl
pop
mov
in
push
inc
loop
bound
cmp
cmp
sbb
dec
or
push
in
push
xchg
and
mov
mov
mov
jg
cwtl
lret
out
jns
clc
jge
test
adc
jl
and
adc
in
xchg
lret
int3
adcl
mov
fucom
xor
or
xlat
mul
lds
jge
inc
jle
cmp
aam
sbb
jl
movl
cmc
mov
shrl
out
loop
test
pop
shlb
add
in
leave
push
sbb
cmp
cltd
cwtl
cmp
adc
sete
pop
pop
scas
jne
dec
movb
jmp
into
mov
or
aam
insb
out
loope
dec
loop
psubd
jne
outsl
lcall
or
in
mov
outsl
popf
fdivp
mov
xchg
mov
sub
xor
outsb
mov
mov
pop
lods
fstpt
add
xchg
stos
sub
inc
adc
mov
jne
scas
mov
dec
dec
jg
rcrb
mov
test
jecxz
jecxz
es
imul
or
mov
mov
fdivs
fwait
iret
xchg
adc
inc
adc
xchg
push
cmp
push
adc
cmp
mov
repnz
pop
outsb
inc
int3
stos
push
fsubs
stos
push
ficomps
aam
add
push
test
movsb
add
bound
xor
jno
jae
andb
imul
pop
sbb
xor
gs
mov
bound
negb
in
cmp
pop
stos
shll
sub
inc
mov
and
sub
jne
xchg
pop
dec
loopew
jmp
test
hlt
cmc
and
xchg
inc
pop
daa
xchg
mov
pop
pop
or
cs
mov
and
push
jecxz
bound
icebp
repnz
popa
insl
std
inc
in
dec
push
sbb
adc
jmp
f2xm1
xlat
pop
repz
jp
sbb
lods
into
mov
dec
fnstcw
pop
dec
icebp
imul
pushf
jno
xorb
cmpsl
lahf
out
mov
mov
push
mov
sbb
sahf
dec
test
sbbw
imul
cmp
cltd
popa
xor
jne
imul
test
pop
ret
pusha
xchg
xlat
mov
jno
sub
sub
in
push
daa
fsubp
call
lcall
jne
insl
lock
roll
or
in
hlt
pop
lret
sarl
xor
cmp
outsb
std
imul
test
je
add
or
add
mov
adc
mov
xchg
jb
push
mov
dec
ret
ret
lret
aad
sbb
cmp
add
and
mov
shlb
or
fdivs
pusha
sbb
mov
pushf
ficoml
inc
int3
popa
mov
fidivl
sbb
add
mov
repnz
cmpsl
scas
jle
outsl
das
js
inc
cmp
popf
xchg
aam
inc
divl
sbb
pop
inc
cli
dec
cmpsw
mov
pop
inc
lods
mov
mov
stc
or
mov
inc
jl
lcall
sbb
lea
aad
push
mov
cmpsl
cmpsl
mov
rcll
mov
pop
add
pushf
mov
mov
cli
popf
jle
dec
jo
add
xlat
jp
sbb
jbe
popf
out
shll
jl
pop
jns,pt
mov
xor
push
and
inc
mov
mov
jmp
fistpl
popa
xor
mov
sbb
out
jge
xlat
pop
inc
pop
js
or
xor
lds
sbb
pushf
ja
jle
out
xchg
shlb
test
js
pop
outsl
std
sbb
or
push
mov
cmp
or
xor
jnp
xlat
dec
das
sbb
inc
fcomps
ret
inc
pop
sti
mov
dec
lds
jae
stc
ret
adc
push
psllq
adc
pop
mov
lods
lahf
iret
ja
stos
jne
sub
stos
and
ret
mov
sahf
cmp
xchg
sub
scas
les
and
rolb
icebp
fcomp
inc
insl
lods
sbb
push
repnz
adc
push
cmp
push
pop
lret
in
scas
scas
sbb
jecxz
mov
xor
sbb
gs
pop
mov
cmc
inc
push
and
int
or
mov
pushf
imul
xor
xchg
add
in
mov
loop
test
dec
int
xchg
rorb
inc
xchg
jecxz
xor
pushf
iret
sbb
sub
pop
jle
nop
xchg
fsubs
and
cmp
xor
push
insl
icebp
mov
xchg
data16
and
inc
ds
mov
jbe
js
jle
subl
aad
jnp
mov
mov
and
push
mov
pushf
in
test
fs
in
add
sbb
adc
arpl
arpl
xor
pop
std
and
and
xor
push
call
test
dec
fdivl
or
dec
dec
mov
repz
repz
repz
movsb
sub
pop
mov
popa
aas
adcb
call
clc
mov
inc
jp
clc
mov
rcl
xchg
notb
fistl
xor
dec
outsl
push
pop
mov
pop
push
xor
push
rcrb
int3
lds
inc
scas
jae
sub
mov
push
out
enter
jb
in
cwtl
fnstenv
xchg
jl
stos
shll
dec
lods
subb
dec
cmp
mov
fndisi(8087
mov
mov
call
push
mov
and
enter
push
and
push
and
test
mov
insl
shlb
outsl
je
call
xchg
dec
lds
mov
push
adc
sbb
and
enter
jmp
dec
sti
cld
sub
clc
jno
sub
push
ds
scas
cmpl
pushf
repnz
fdiv
pop
jo
call
arpl
push
add
dec
inc
mov
dec
clc
stc
push
cld
xchg
ds
sahf
fs
test
sub
lea
pusha
cs
ja
ret
loop
lods
add
data16
mov
or
les
enter
fistl
in
and
lahf
lock
inc
add
sub
dec
cld
cmc
pop
fisttpll
repnz
pop
iret
mov
outsb
mov
stos
cmp
adc
or
enter
movsl
or
sub
sahf
lock
stc
ret
stos
fldt
dec
sub
loope
aas
pop
and
ficoml
lret
mov
in
mov
mov
imul
push
icebp
inc
add
stos
pop
pop
negb
leave
out
jo
push
pop
push
gs
xor
rclb
test
cmpb
int
push
stos
mov
stos
sbb
mov
or
push
mov
test
dec
dec
cmp
insl
sbb
pop
outsl
fiadds
jno
jp
in
jb
sti
lods
addb
rcrb
cmp
scas
scas
syscall
sbb
rclb
pop
mov
arpl
repnz
xchg
fildll
add
lds
inc
cld
hlt
cmp
sbb
repz
and
ret
shlb
and
sub
in
test
insb
mov
loope
pushf
je
mov
mov
and
test
orb
movsl
adc
sbb
mov
jmp
pop
cmp
and
bnd
jmp
mov
cmc
in
rorb
xchg
inc
mov
enter
jmp
xchg
les
gs
pop
inc
out
loop
scas
jne
pop
roll
mov
aaa
mov
scas
adc
cmp
fildll
enter
jg
sbbb
int3
sbb
lret
ds
push
or
clc
pop
inc
ret
ds
jmp
sbb
loopne
cwtl
outsb
or
jg
mov
mov
or
push
cmp
sub
ret
xorb
cmpl
push
xlat
cmp
mov
jl
mov
cmp
iret
jge,pt
mov
mov
fildll
push
imulb
orl
push
sbb
divb
scas
rcrl
mov
inc
mov
cmp
sbbl
push
push
mov
jge
aaa
sti
mov
jmp
movzbl
cmpsb
ljmp
clc
add
and
xor
mov
pop
ja
in
out
sub
enter
xchg
push
cmc
mov
lret
mov
lahf
mov
jb
push
mov
sbb
jecxz
mov
pop
lds
pop
and
sbb
pop
inc
popf
dec
shlb
cli
mov
andb
mov
or
addr16
jae
cld
shll
sbb
jno
in
pop
mov
mov
sbb
or
mov
sbb
add
int3
jecxz
scas
and
test
loop
je
mov
lret
adc
cmpsl
shrb
push
fnsave
sbb
dec
ret
xor
pushf
and
loopne
mov
ja
inc
sub
cmp
insb
das
sbb
xlat
je
js
or
out
movups
dec
pop
mov
pop
dec
sub
sbb
pop
les
push
push
and
and
lret
sarb
inc
jb
cmc
pop
enter
clc
mov
mov
and
stos
sahf
add
test
dec
mov
and
cmp
inc
add
test
sub
out
xor
jb
inc
roll
rcll
pushf
add
push
lock
out
sti
push
xor
mov
mov
cltd
fcomi
in
jne
adc
mov
xor
pushf
dec
push
ds
push
inc
adc
hlt
iret
inc
lea
lret
xchg
sbb
inc
pop
push
lret
push
mov
loopne
xor
test
arpl
xchg
ds
jnp
das
leave
repnz
lcall
xchg
shll
jns
jnp
arpl
movb
popa
inc
mov
sbb
aas
adc
daa
jo
setle
xor
mov
ror
mov
lock
aam
inc
dec
lods
xor
outsl
test
push
push
or
loop
rclb
xor
dec
adc
sti
adc
jl
add
jp
bswap
in
daa
les
cmp
sub
push
fldt
cmp
push
das
divl
mov
push
xchg
xchg
ret
dec
js
lds
cmpb
cmpsl
xor
movsl
nop
mov
add
sahf
jns
adc
push
fstl
scas
movzwl
pop
mov
jp
fists
flds
sahf
test
sbb
and
add
sbb
aaa
test
fimuls
test
ret
cltd
jbe
out
xchg
xor
loope
and
in
mov
jle
flds
mov
and
cmp
rolb
and
test
dec
jne
pushf
faddp
pop
sub
mov
data16
jo
inc
flds
adc
shrl
insl
push
cmp
xchg
mov
rsm
pushf
jns
jns
loopne
mov
lahf
repz
sbb
aaa
jmp
ds
jo
sub
test
in
jle
mov
push
outsl
add
fwait
cli
xor
int
out
xchg
push
movsl
xor
scas
mov
add
jne
aam
jp
mov
mov
divl
cmp
lods
lret
add
arpl
mov
xchg
jge
aam
mov
in
cltd
jl
dec
adc
rcl
shll
ds
not
mov
repz
shl
dec
scas
dec
shl
movsb
test
mov
lcall
in
mov
sub
popa
cltd
enter
mov
or
cmp
out
add
cmpb
sbb
add
push
imul
pop
imul
out
xor
add
shll
es
add
test
out
data16
hlt
dec
shrb
stc
mov
cmp
or
cltd
xchg
nop
xchg
hlt
popa
std
mov
and
inc
clc
out
add
push
cmp
sub
jg
into
add
imul
adc
popa
mov
movntps
call
test
in
lea
outsl
lods
in
sub
das
sahf
lea
outsb
cmp
xchg
sti
vmovhps
fimuls
lods
test
adc
adc
out
and
in
fdivr
shrl
xor
sub
inc
outsb
lods
adcl
scas
dec
ret
xchg
pop
int3
jne
rep
and
rolb
mov
leave
or
xchg
jae
outsb
shrl
push
xor
sub
mov
or
ljmp
push
mov
push
adc
xchg
mulb
or
pop
bound
aad
cmpl
mov
jne
xor
sub
sub
pop
sub
loop
inc
in
sti
jge
insb
sbb
shll
mov
sarl
sbb
jns
flds
xchg
aas
les
outsl
js
out
scas
out
fst
rcr
fldl
fstp
jno
cltd
fcmovnbe
push
adc
adc
ret
or
pop
push
sbb
scas
sti
ljmp
stos
jg
cmp
popf
inc
mov
sbb
mov
jnp
add
aas
xchg
mov
shll
cmp
mov
pop
jno
dec
or
stos
shlb
cmp
cmp
repz
cmp
dec
xor
mov
xchg
in
movsl
mov
mov
in
cmp
push
addb
mov
jp
push
pop
cs
movsb
pop
out
sbb
sbb
xorb
scas
dec
or
dec
xchg
loopne
mov
sarb
shll
mov
decb
cmp
or
sub
je
mov
adc
jmp
mov
jge
push
test
mov
lret
pop
lock
insl
or
or
pusha
idivl
pop
and
and
shl
push
pop
outsb
xchg
icebp
add
mov
mov
clc
sbb
adc
stos
cvtdq2ps
pop
jbe
inc
or
pop
test
lret
jne
pop
sbb
shlb
into
ret
out
and
movsl
jnp
insb
stc
mulb
sub
iret
push
cmp
mov
arpl
mov
lods
lahf
shll
je
or
push
das
add
ret
xchg
xchg
push
mov
jae
loopne
test
out
scas
fwait
xchg
fcoml
push
sti
call
daa
mov
cmp
mov
mov
xchg
je
loope
mov
fisubrl
pop
jp
xchg
sbb
in
cmp
lock
inc
dec
jns
je
xlat
sbb
popa
xor
xchg
adc
repz
inc
aad
push
xor
daa
mov
into
int
dec
dec
jge
test
lret
xchg
pushf
ds
mov
adc
or
xor
inc
out
inc
sub
popf
shlb
fists
add
cmp
sti
insb
fwait
push
aas
pop
sbb
aaa
lods
pop
cmp
sbb
mov
lret
mov
pop
xchg
cmp
std
jl
sahf
out
mov
fistpl
and
movsb
rcrb
add
outsl
dec
xor
jmp
js
cmp
stos
nop
adc
dec
testl
daa
gs
arpl
and
mov
mov
lock
push
rcrb
fs
or
or
jb
push
int3
js
mov
out
jae
lret
es
cltd
icebp
mov
rcrl
std
scas
xchg
push
xchg
or
pop
hlt
push
xlat
and
les
adc
xchg
aaa
divl
rorl
adcb
or
mov
scas
jo
or
dec
fwait
mov
popa
xchg
dec
xor
imul
sar
mov
sbb
out
fisttpl
jno
es
inc
jl
xor
jge
loopne
in
and
xchg
mov
icebp
loopne
jns
ja
shr
inc
aaa
xchg
mov
sbb
js
fnsave
les
cmp
popa
movsl
or
clc
mov
out
pushf
mov
xlat
jne
mov
xor
loope
push
shl
mov
inc
inc
outsb
imull
push
cld
daa
and
push
pop
jno
xchg
push
push
lods
ret
xchg
std
push
andl
pop
stos
fsts
into
mov
adc
loope
mov
or
sub
repnz
sbb
movsb
lcall
pop
xor
test
hlt
or
push
dec
dec
mov
mov
xor
aaa
fstpl
adc
dec
pop
lock
in
clc
stc
cli
inc
dec
inc
and
cmp
cltd
and
ja
pop
push
lahf
pop
jg
jecxz
mov
movsl
mov
stos
in
out
in
out
and
mov
cmc
lock
pop
add
xchg
sub
mov
int
push
mov
and
mov
cmp
sub
mov
mov
sahf
aas
scas
dec
das
fimuls
sbb
mov
xor
cmpl
jns
cmp
xchg
mov
cmpl
xchg
out
push
fadd
lret
add
mov
adc
imul
adc
sbb
dec
mov
pop
jmp
push
push
jg
pop
cltd
mov
leave
jne
mov
and
push
push
mov
inc
inc
inc
out
xchg
iret
shll
mov
call
testl
aas
aaa
fidivl
mov
dec
cmp
push
add
test
sub
cmp
push
cli
adc
es
popf
mov
add
and
inc
adc
out
enter
jne
insl
out
mov
test
addb
jl
and
arpl
cmpsl
cmpsb
dec
xor
xchg
cmp
jmp
andl
enter
leave
int
test
ljmp
inc
push
add
ja
push
and
push
fwait
jl
movsb
loope
pop
popa
mov
xor
fiadds
lds
pop
test
cmp
add
jo
loop
dec
sub
cs
dec
movsb
jb
lret
pop
adc
sbb
arpl
mov
cmp
mov
xchg
cmp
aas
sarl
add
pop
or
std
aas
dec
mov
mov
nop
movsl
inc
scas
movsb
inc
xchg
xchg
mov
insl
inc
shr
push
rorl
in
mov
ret
sbb
std
inc
add
aam
sub
mov
mov
leave
loop
inc
mov
pushl
outsb
and
sbbb
fs
jge
jns
movsb
cmp
sbb
sub
inc
movsb
dec
cld
inc
lds
lret
xchg
jae
ljmp
xchg
decl
leave
sahf
xor
mov
enter
incl
pop
jb
popl
or
mov
repnz
sar
int
mov
mov
bnd
push
repnz
gs
les
insb
enter
les
ja
dec
push
mov
nop
stc
adc
in
sahf
jmp
stc
ds
loopne
cld
imul
xor
loopne
and
stos
les
cwtl
insb
dec
faddl
lods
test
popf
lock
iret
ds
stos
fsubs
sahf
or
jle
jne
cmc
pusha
testb
mov
mov
cmp
xor
scas
jmp
imul
jg
lods
jle,pt
xor
cli
test
aas
add
xchg
pop
mov
js
push
fiadds
cmp
xor
push
out
mov
cmp
dec
ret
loopne
shlb
mov
aas
aaa
pop
cmpsb
fimuls
in
mov
sub
shrb
hlt
pop
ljmp
xor
adc
sbb
call
jbe
sub
pushf
add
dec
adc
push
jl
mov
mov
ror
out
push
dec
roll
sbb
popf
sub
sahf
cmpsb
arpl
popf
sbb
mov
lods
repz
fbstp
xchg
pop
cmp
jno
and
scas
push
dec
int
cmp
mov
cmpsl
push
adc
mov
aam
fldl
and
cmc
and
or
and
push
pusha
xor
loopne
xor
int
ja
in
aaa
int3
aad
movsl
xor
das
sub
adc
jge
sbb
in
adc
add
dec
in
or
out
call
mov
inc
jnp
sub
out
xor
test
ror
scas
in
sub
dec
fs
cmpsl
in
mov
fwait
aad
pop
jnp
push
push
add
jecxz
std
add
adc
adc
adc
add
sub
jbe
push
jmp
add
dec
int3
je
aaa
insl
nop
xchg
fwait
ja
adc
add
pusha
leave
cli
xchg
out
mov
out
rorb
popf
dec
push
cmc
subl
inc
adc
movsb
ss
add
jle
insl
push
out
and
in
xor
push
xor
stos
and
in
dec
sbb
arpl
stos
sub
mov
and
je
jns
jl
pop
cmpsl
popa
outsb
clc
sub
arpl
mov
test
push
insl
sub
imul
test
xor
sub
leave
mov
in
dec
dec
push
imul
notl
xchg
popf
scas
icebp
dec
jbe
sbbl
stc
fisubrl
inc
sahf
mov
in
aad
xor
cld
pop
imul
pop
aad
lret
jae
cwtl
popa
test
imul
mov
mov
sti
pop
push
rcll
sbb
sub
push
or
adc
inc
daa
arpl
pop
sub
pop
mov
and
xchg
add
or
cmp
jl
cmc
mov
inc
leave
test
fs
push
dec
or
lock
mov
mov
fstpl
xor
lods
xchg
add
in
movsb
inc
lret
stos
int3
xor
decb
add
xchg
sub
push
push
mov
subb
aas
lret
cwtl
fidivs
xor
nop
push
xor
or
lret
data16
jns
mov
xchg
ret
mov
sub
jo
cmp
out
outsl
mov
mov
xchg
mov
xchg
dec
sbb
inc
lods
jg
das
jecxz
jbe
jne
mov
pop
mov
ret
inc
call
cmp
fdivrs
jl
mov
inc
sbb
es
lock
out
aas
mov
iret
icebp
adc
dec
pop
or
incl
cs
or
in
sub
das
cmpsb
lods
dec
mov
je
aaa
fadd
pop
loop
or
rcl
or
adc
arpl
xchg
and
xor
jb
push
jmp
aam
mov
cwtl
cmp
jnp
das
cmpsl
sbb
xchg
call
or
push
mov
insl
cwtl
mov
pop
mov
loop
cmpsb
lds
cwtl
int
push
test
push
sub
jecxz
xor
insl
jecxz
out
xor
aad
fs
sbb
or
iret
imul
out
aad
adc
sub
cli
pop
fildll
xchg
enter
push
jns
cltd
inc
andb
iret
stos
imul
dec
xchg
mov
xor
cmp
stc
adc
fstp
mov
xchg
js
negb
lcall
dec
adc
pop
mov
sarl
push
dec
xlat
fdivrs
pop
push
jecxz
cmpsl
int3
adc
xor
mov
rclb
mov
out
jecxz
mov
ja
pop
mov
xchg
adc
mov
popf
pusha
inc
jns
inc
shlb
and
adc
hlt
jne
inc
jnp
xchg
stos
rcrl
pop
lret
test
jl
jne
dec
test
xchg
mov
jge
xor
jle
into
imul
mov
mov
mov
js
testl
adc
adc
dec
ror
mov
mov
cli
test
sbb
and
pop
jns
mov
inc
fs
in
xor
std
mov
push
loope
sub
add
shrl
and
mov
or
mov
cmc
add
sbb
jp
pop
gs
jb
xchg
push
ljmp
fldl
das
int3
mov
xchg
outsb
jmp
jno
ret
push
inc
sub
repz
xchg
shrl
hlt
stos
mov
popf
sahf
arpl
cwtl
mov
pop
dec
xchg
sub
dec
push
mov
movsl
fldcw
js
cmpsl
inc
add
test
lahf
sahf
or
push
xor
mov
xchg
leave
std
or
mov
dec
in
mov
mov
outsl
inc
stos
mov
int
insl
fnstsw
mov
dec
paddusb
mov
or
jecxz
popa
shrl
mov
ja
inc
in
mov
jne
sub
outsb
int
test
mov
xlat
or
cmp
or
dec
ljmp
clc
adc
jno
sbb
out
mov
pop
jo
jne
vpcmpeqd
mov
lea
cltd
push
push
mov
xchg
cli
push
ja
mov
out
inc
shrb
dec
or
push
out
xor
mov
enter
gs
lods
sub
in
cld
mov
cmp
mov
pop
and
lea
js
jne
push
ror
sub
pop
lock
in
xchg
sub
xchg
push
and
add
adc
in
mov
sub
add
jl
icebp
sub
mov
jg
push
mov
pop
in
xor
test
inc
xor
iret
cmp
or
int
and
cmp
rcll
inc
out
sbb
bound
add
les
xchg
hlt
pushf
mov
sbb
sbb
out
lods
dec
or
push
sub
and
lods
xor
xchg
or
scas
xchg
mov
push
mov
mov
inc
mov
push
sbb
jg
stos
push
inc
xor
es
je
mov
push
pop
int3
stc
sbb
jmp
lcall
and
mov
xor
fildl
nop
add
jae
filds
aad
xchg
int3
int3
mov
addr16
add
sbb
stc
xchg
sbb
cmp
scas
pop
mov
insl
lock
mov
xchg
leave
mov
aaa
gs
cmp
cmp
inc
mov
enter
add
icebp
mov
adc
pop
jne
iret
sbb
inc
outsl
pop
mov
inc
cld
test
and
and
bound
sbb
ss
mov
scas
and
test
mov
ja
cmp
iret
or
jl
push
mov
in
add
nop
test
mov
mov
sub
sub
je
jne
inc
addr16
insb
sti
sbb
enter
insl
jae
push
dec
or
mov
mov
stos
mov
and
enter
push
call
sahf
and
and
pop
insl
pop
mov
cmc
jb
mov
xchg
push
clc
cli
ljmp
fldt
xchg
hlt
jecxz
mov
fmuls
lret
icebp
popa
stos
sti
repz
js
aaa
sbb
or
pop
lods
std
dec
mulb
mov
bnd
push
jl,pt
jl
mov
push
dec
filds
pop
jbe
adc
jecxz
pusha
dec
fisttpl
lret
out
decl
int3
mov
flds
mov
push
ds
dec
insl
xor
inc
sub
lahf
xchg
push
repnz
js
mov
fwait
aaa
es
popf
aaa
xchg
fwait
xchg
cmp
aam
test
test
lods
mov
xchg
cmp
ljmp
jne
push
jns
sub
loope
xchg
call
push
inc
test
pop
ret
pusha
mull
inc
push
mov
mov
push
rcrb
jmp
sbb
push
ret
push
xchg
mov
imul
mov
popf
outsb
addr16
es
pushf
jecxz
xchg
or
sahf
and
dec
shl
push
adc
add
or
jae
push
fldt
std
sbb
addr16
adc
dec
stc
xchg
add
cmp
jae
loopne
out
cmp
jnp
sti
mov
out
bound
cmp
mov
dec
hlt
roll
mov
xor
pop
enter
mov
daa
cmc
push
in
std
fxch
adc
call
insl
movsl
push
daa
push
xchg
push
mov
std
loopne
xor
inc
into
or
dec
add
adc
cwtl
rorb
pop
imul
add
stc
ljmp
jne
in
mov
pop
xchg
inc
xorl
dec
jp
shl
dec
dec
es
pop
or
mov
ja
adc
push
sbb
sbb
inc
incl
inc
fiadds
xchg
rcrb
mov
repnz
jns
dec
mov
mov
inc
cmpsl
dec
push
sbb
pop
je
xor
lods
shlb
mov
shll
mov
scas
inc
mov
scas
rcrb
xchg
fadd
dec
mov
adc
jb
push
add
sbb
fsub
inc
mov
xor
or
in
sub
sbb
rorl
cmp
pop
jmp
sbb
popa
add
aad
into
pop
rorb
mov
xchg
xchg
and
cltd
data16
lock
imulb
fdivp
testb
cmp
inc
cld
xchg
stc
stc
in
in
aad
push
shld
test
clc
cmp
pop
daa
and
int
push
clc
int3
movsb
jmp
inc
pop
cltd
xor
mov
pop
push
add
pop
or
mov
xor
sub
dec
js
fisttpll
pop
and
sbb
test
xor
inc
sbb
xor
push
lods
pop
sbb
mov
cmpl
push
ja
adc
sbb
inc
mov
pop
cld
pop
sbb
ss
xor
xchg
insb
sahf
and
jnp
cld
xor
xchg
movsb
cld
dec
push
adc
jl
push
add
cli
call
mov
xor
xchg
daa
nop
mov
ret
push
leave
clc
fwait
mov
sub
cmp
inc
adc
scas
movsl
dec
ror
xor
ret
xor
ds
pushf
fistpl
or
dec
insl
add
fsubrs
cmc
leave
ret
cmp
insl
push
xchg
in
aaa
dec
dec
dec
xchg
mov
xchg
mov
std
pop
or
dec
sub
jl
divl
ds
xchg
dec
pop
inc
pop
cmpsb
out
leave
and
mov
or
jl
sub
dec
mov
mov
cmp
and
insb
and
and
leave
mov
js
pop
ljmp
stos
fisubrs
lahf
shlb
add
or
ret
lret
mov
jb
je
xchg
mov
jg
lret
addr16
stc
cwtl
test
cmpsl
nop
pop
rolb
test
movsb
les
mov
fdivs
cmp
hlt
or
es
add
lahf
mov
adc
adc
outsl
addl
dec
push
call
xchg
iret
out
std
loopne
dec
mov
sbb
aad
outsb
fwait
cli
loop
sub
nop
jne
popa
inc
mov
mov
xchg
pusha
mov
jmp
push
negl
jbe
lds
push
das
fmuls
jmp
xchg
add
sahf
add
fnsetpm(287
or
loop
add
xchg
enter
arpl
decl
adc
hlt
and
lcall
xchg
iret
enter
sti
mov
sar
mov
mov
or
std
xorb
xchg
jge
movsb
iret
xorl
adc
lcall
push
or
sahf
add
and
repz
dec
int3
mov
pop
jns
xor
loopne
add
in
xchg
dec
rol
sub
push
je
sbb
les
cmp
stos
sbb
pop
leave
or
dec
out
jno
and
inc
adc
in
shlb
ficoms
xlat
into
mov
scas
stc
cwtl
inc
clc
push
in
orb
mov
pop
jne
hlt
jge
mov
sarb
test
mov
or
daa
mov
aam
mov
sub
ficoml
xor
aaa
cmpsl
es
repz
jmp
stos
mov
test
dec
dec
xor
aam
push
popa
mov
dec
pop
ss
add
das
sub
mov
lret
jbe
arpl
fsubrs
cltd
test
pop
sbb
in
push
das
xor
outsb
out
notb
mov
imul
fwait
pusha
pop
dec
aaa
or
xchg
xlat
rclb
imul
aad
into
aaa
out
mov
nop
dec
mov
mov
insb
lret
movsb
mov
push
stos
mov
inc
cmp
iret
pop
sub
addr16
sbb
sbb
push
push
cmpsl
xor
lods
sbb
mov
mov
and
jecxz
dec
int
xchg
mov
push
test
pushl
mov
insl
add
dec
push
shlb
mov
jnp
aam
push
push
dec
jl
outsl
loope
lds
mov
lret
mov
jmp
inc
jge,pn
pop
xor
or
sub
insb
popf
xlat
cmp
fldl
dec
pop
mov
xchg
add
inc
cmpsl
sub
adc
cmp
mov
jns
lcall
and
or
xor
or
loope
stos
ds
out
enter
stos
shl
sub
and
ja
lret
dec
xchg
shll
mov
into
push
scas
lcall
jecxz
jp
and
xor
sbb
das
fsts
test
in
pop
jne
mov
xor
sbb
push
fadd
cmc
aas
pop
sbb
aam
push
jbe
shlb
pop
mov
add
mov
jle
mov
xchg
loope
je
sub
push
xchg
xor
repz
mov
jg
jmp
lock
cs
xor
mov
test
rcl
xlat
in
jp
xchg
scas
sbb
ja
inc
outsb
push
pop
xchg
popf
das
sub
neg
jbe
cmp
mov
sbb
push
addr16
mov
pop
sbb
xor
push
fld
aas
mov
lods
xchg
xchg
inc
ljmp
ja
dec
adc
mov
std
lahf
mov
bnd
dec
loop
xchg
dec
inc
mov
in
stos
pop
and
or
inc
faddl
mov
pop
jge
jecxz
scas
loopne
inc
imul
or
mov
mov
inc
hlt
xchg
int3
pop
xor
icebp
mov
cmp
dec
dec
mov
cmc
shll
mov
mov
add
pop
stc
lods
or
push
loope
dec
jno
sbb
xlat
gs
aam
mov
mov
xchg
das
out
test
mov
clc
adc
fwait
inc
and
in
rsm
mov
inc
loopne
sbb
jo
or
sub
out
lods
lds
lds
scas
sbb
pushl
popf
xchg
lcall
inc
cli
imul
out
into
xchg
sti
dec
mov
mov
pop
std
cmp
orl
sti
xchg
jae
or
shrb
decl
fwait
lock
jno
ds
test
mov
ror
sbb
popa
lea
fidivl
push
outsb
outsl
or
push
faddl
leave
movsl
add
cmc
testb
push
insl
mov
subl
lahf
sub
cmp
pop
imul
sub
ficoms
out
test
loopne
adc
mov
or
stc
inc
xor
mov
repnz
insl
xor
mov
mov
cwtl
xchg
adc
je
popa
in
xlat
mov
mov
mov
sub
mov
xor
sub
pop
fxtract
xor
decb
pop
dec
jg
mov
adc
cmp
push
shl
pop
cwtl
xor
mov
jno
mov
aaa
decl
leave
sub
xchg
pop
inc
cltd
shl
bound
push
dec
hlt
or
adc
dec
fwait
xchg
add
and
fildl
push
xchg
sti
push
or
test
add
xchg
sub
xor
out
outsl
jnp
scas
adc
loopne
call
roll
icebp
je
mov
ret
hlt
dec
xchg
mov
xlat
gs
cltd
and
dec
stos
xchg
fsubrl
xor
out
jmp
mov
mov
cld
fstpl
push
cwtl
icebp
out
fcos
fistl
fisttps
sbb
scas
add
fdivrs
mov
xor
lock
cmp
push
loopne
mov
add
insb
push
cltd
adc
xchg
pop
sahf
fcomps
jecxz
loope
loope
hlt
mov
test
xchg
rcll
cmpsb
jno
inc
sar
mov
mov
dec
and
push
lock
inc
push
jle
movsb
inc
mov
enter
movsl
mov
sar
xchg
ss
jae
mul
daa
test
xchg
cwtl
jbe
fldt
insl
mov
mov
sbb
out
hlt
pop
cld
in
xchg
ret
pop
mov
cmp
mov
lea
mov
push
mov
mov
jb
out
push
jo
jno
test
inc
rcr
mov
push
jmp
shrl
xchg
xchg
int3
arpl
xchg
scas
dec
jns
pop
or
xchg
mov
aaa
pop
enter
mov
pop
cli
xor
mov
adc
or
aam
sub
xchg
js
adc
push
xchg
pop
jmp
jno
pop
or
pusha
dec
or
call
mov
sbb
movl
fwait
arpl
mov
mov
push
sti
add
xor
xor
sub
mov
cltd
int
out
xchg
push
xchg
mov
cmpsb
cmp
adc
sbb
inc
inc
test
add
jge
push
aad
dec
cli
daa
into
fiadds
dec
mov
repnz
push
sub
ret
daa
mov
mov
dec
data16
mov
and
lret
out
add
iret
testl
ret
push
mov
cwtl
ja
lcall
adc
sub
shlb
roll
sbb
sub
into
push
loopne
mov
outsl
test
add
mov
enter
inc
rcrb
inc
addr16
cmp
lret
lock
fldcw
mov
mov
lahf
cmc
daa
fbstp
jp
clc
pop
ss
rorl
outsl
and
aam
mov
pop
loop
jno
cmp
add
pop
cmpb
xchg
push
or
movsl
add
jns
mov
cmp
and
outsl
jns
inc
sub
clc
out
lods
push
jg
mov
mov
dec
push
jo
sub
decb
push
outsl
rol
jp
rorl
add
xchg
dec
sub
stos
dec
mov
mov
outsb
dec
mov
sub
imul
adc
out
lds
aas
ror
std
pop
dec
ds
jbe
jle
cmp
push
xor
in
rcrl
mov
xchg
dec
cli
pop
div
xchg
sbb
out
xchg
or
pop
loope
fnstenv
in
cmpsb
push
insb
iret
xor
and
push
jp
mov
test
push
cltd
inc
sub
je
push
vpaddd
ja
or
orb
pop
jle
or
sub
sbb
add
or
sub
and
and
test
orb
jmp
dec
push
push
or
cmpsl
pop
in
lods
xchg
das
xor
je
imul
test
scas
arpl
add
jecxz
outsb
jg
movsl
push
mov
adc
sbb
fdivr
out
add
loope
inc
pushf
ret
push
xor
xlat
imul
pop
dec
mov
nop
ss
pop
jb
scas
stc
adc
sub
pusha
ljmp
fs
outsb
orb
xlat
int
mov
shll
cmp
push
sti
mov
andl
hlt
js
rcrl
adc
cmp
cmpl
jmp
or
push
pop
test
mov
popa
pop
and
mov
lret
and
sub
mov
sub
nop
ss
push
xor
mov
and
rorb
sti
shll
jle
test
xchg
sub
cmp
stc
fldt
adc
xor
outsb
out
jg
add
mov
enter
sarl
and
jne
mov
mov
sub
sbb
dec
mov
lret
adc
adc
ds
mov
sub
bound
punpckhbw
jbe
pop
mov
data16
mulb
stos
xchg
pop
lea
sub
sbb
mov
or
sahf
icebp
jno
mov
mov
push
das
ds
lds
fistps
mov
sbbb
test
dec
ror
jp
jl
sbb
sbb
cmpsl
cli
imul
jle
ret
cltd
xchg
fsub
mov
xchg
adc
call
jle
daa
jbe
in
rcrb
inc
mov
adc
sbb
jnp
xor
push
pop
outsb
dec
mov
out
leave
out
sahf
xchg
popa
mov
call
inc
xchg
and
mov
lcall
fsubrl
jg
xchg
xlat
push
andl
arpl
mov
mov
stos
lahf
cld
inc
pop
adc
imul
adc
xchg
xchg
lahf
jecxz
imul
or
push
pusha
pop
stos
je
sub
gs
fwait
out
cmp
mov
push
adc
pusha
lahf
jb
emms
je
adc
jne
add
mov
lahf
mov
leave
dec
not
dec
loopne
stc
shlb
daa
outsb
add
cmpsl
cmpl
lods
jb
push
lret
push
push
in
or
xlat
push
aad
xor
jnp
push
pushf
test
sbb
adc
mov
mov
out
mov
loop
sub
add
loop
cltd
sti
dec
mov
or
push
mov
jbe
mov
stc
sub
insl
jecxz
idivb
mov
xchg
add
dec
jne
push
jl
es
push
jmp
mov
data16
xchg
push
in
cmp
adc
outsl
lds
lahf
mov
inc
fbld
mov
aad
decl
sub
adc
out
mov
jp
sub
cmp
fmull
aam
and
lahf
fstpl
jg
push
fistps
lea
out
ret
or
xor
loopne
pop
xor
ret
fstl
fucomp
mov
dec
clc
cmp
adc
jl
enter
and
xchg
orb
xor
fwait
mov
adc
and
pusha
push
aad
test
dec
addr16
scas
leave
xchg
inc
test
sbb
loope
xlat
and
xor
test
repnz
mov
fmuls
out
insl
vfmadd213pd
xchg
xchg
je
push
lret
out
test
pusha
xchg
inc
cmp
push
popf
inc
stos
mov
adc
inc
cmp
test
dec
sbb
or
mov
js
das
ja
push
sbb
and
aaa
out
sbb
xor
inc
in
sbbb
mov
leave
and
js
cmp
aad
lods
scas
inc
mov
daa
push
pop
sub
stos
test
fsqrt
ja
and
ja
cmp
in
in
adc
or
jns
xor
int3
dec
sub
into
and
in
testb
dec
subb
adc
jle
or
xchg
pop
arpl
arpl
cli
mov
push
nop
xchg
pop
int
dec
std
and
dec
stos
push
add
adc
out
ljmp
push
pop
mov
jnp
push
mov
iret
xor
dec
shl
mov
push
push
mov
out
push
add
sub
imull
es
xchg
mov
cli
mov
push
int3
lds
cmc
jmp
jb
inc
push
jmp
adc
imul
pop
pop
pop
sub
mov
iret
data16
fdivl
mov
xchg
sub
icebp
jns
jne
repnz
adc
shlb
aas
aaa
ss
mov
pop
ret
cmc
test
popf
pop
jb
add
push
cld
sbb
add
rcrl
mov
mov
pop
std
fildll
push
mov
push
aas
enter
mov
sbb
mov
xchg
sti
pop
imul
ret
xor
or
cmp
inc
mov
fsub
lret
lret
nop
jmp
mov
loope
mov
push
outsl
push
adc
xchg
cltd
dec
cmp
inc
lods
enter
ds
mov
daa
aad
lcall
and
scas
pop
mov
lar
divl
mov
or
jo
dec
in
pushf
mov
sub
xor
sbb
notl
pop
xor
push
sbb
mov
popf
aas
aaa
mov
dec
xchg
mov
and
inc
adc
cli
or
out
pop
lret
filds
xchg
call
push
pop
cmp
dec
xchg
ljmp
push
and
mov
push
push
loop
ret
xlat
mov
dec
or
and
popf
jl
mov
adc
cltd
sub
test
lods
dec
push
les
shlb
jb
mov
pusha
in
and
xor
mov
out
movsb
xchg
mov
pushf
dec
cmc
mov
mov
mov
push
add
addr16
int3
lods
scas
lahf
gs
mov
mov
jno
mov
loopne
mov
inc
pop
lahf
ljmp
pop
xchg
sub
pop
xor
and
or
pop
cwtl
test
and
and
bound
stc
jae
scas
jecxz
dec
adc
cli
fisttpll
insl
mov
xchg
pop
xchg
cmpsb
iret
in
decb
adc
mov
cmp
and
icebp
sbb
cmp
negb
call
loopne
test
jb
scas
js
sub
inc
sub
hlt
pop
mov
mov
xor
pop
xor
addr16
subl
fwait
stos
stos
xchg
idivl
push
ss
int
repnz
ret
inc
test
lcall
ljmp
fwait
push
lcall
mov
cmp
or
arpl
dec
insb
xchg
xor
cltd
fstpl
sub
rorl
daa
xchg
sarl
inc
std
fistl
sub
pop
cmp
jno
dec
pop
into
imul
mov
loope
sar
lcall
add
xor
je
icebp
inc
lret
cmp
loopne
inc
xor
xorb
int3
xchg
xchg
sbb
aam
outsb
mov
push
and
ss
mov
adc
jae
repz
add
mov
xchg
outsb
lahf
in
push
xchg
shll
fwait
mov
inc
pop
jecxz
addb
lods
inc
cltd
fcoms
lods
push
loopne
xor
out
mov
mov
pop
je
or
loope
pop
ret
xor
xchg
rolb
dec
test
mov
push
xchg
add
cmp
and
lcall
loope
xor
pushf
xchg
std
js
pop
add
imul
fmulp
loopne
push
adc
ret
aaa
and
push
adc
imul
icebp
les
repnz
lods
xor
pop
pop
fadd
xchg
imul
or
leave
jmp
mov
sub
frstor
or
shlb
add
outsb
mov
mov
push
out
lea
pop
jg
push
rorl
in
call
ljmp
arpl
push
int
mov
sarl
ja
mov
cld
mov
je
movsb
xlat
call
inc
jae
xor
mov
sub
inc
roll
stos
adc
les
movaps
hlt
or
pushf
or
xchg
lcall
sub
pop
adc
pop
aad
mov
mov
int3
stos
ror
dec
jecxz
ret
sub
sub
stos
test
ret
imul
ret
xchg
jb
stos
push
inc
sub
int3
inc
mov
jb
mov
dec
pop
sub
mov
loop
fimuls
adc
loopne
jecxz
hlt
mov
mov
xor
mov
pop
push
jg
notb
xchg
adc
jno
clc
jae
push
dec
xchg
cmpl
mov
popf
in
mov
dec
pop
sub
cmp
xlat
cmp
sub
je
and
rolb
or
cmp
add
call
leave
dec
outsl
pop
push
push
filds
sub
pushf
xchg
dec
das
add
pop
xchg
dec
xor
pop
and
scas
shlb
push
mov
push
add
and
mov
or
fwait
nop
mov
lods
xlat
mov
int3
mov
xchg
cltd
xchg
aam
pop
push
cvtps2pd
sub
lret
jg
stos
or
sbb
int
into
mov
fcomps
xchg
fldcw
jmp
les
cmpsb
inc
fstpt
sub
pop
pop
in
mov
xor
das
lods
in
adc
gs
cmp
sbb
xor
aas
shl
gs
push
mov
ja
jo
mov
sbb
xlat
out
imul
push
int
lds
in
sbb
push
stos
adc
xchg
cltd
jmp
add
notb
lods
test
fucomp
jno
js
cs
leave
je
gs
adc
fisttpll
mov
test
je
data16
clc
and
movsb
inc
or
fcompl
test
sbb
mov
sub
jnp
push
xchg
mov
xor
cli
imul
adc
jno
sub
inc
jmp
es
arpl
cmp
mov
lods
int
dec
inc
fwait
push
jb
mov
sub
loope
lock
arpl
cmpsb
fistpl
iret
xor
lock
pop
jb
inc
insl
vandps
mov
sub
adc
cmp
mov
jmp
ret
ss
fidivs
and
mov
adc
stc
inc
insl
data16
sahf
sub
xor
inc
sub
xchg
movsb
and
push
pop
and
adc
outsl
dec
cmp
and
jo
sarl
xchg
mov
lcall
add
xor
call
scas
sub
mov
mov
adc
hlt
and
push
in
pusha
adc
and
xor
xchg
jnp
push
or
popl
call
push
jbe
pusha
rep
fstps
lret
out
jns
loop
or
insb
push
in
movsb
jp
jne
jns
sbb
imul
cmpsb
std
arpl
lods
sahf
je
mov
shrb
add
fwait
cwtl
gs
push
pushf
movsb
xchg
imul
ret
aad
mov
push
or
inc
xor
ljmp
push
jb
xchg
cwtl
mov
adc
inc
popf
call
enter
mov
cmc
icebp
mov
outsl
xchg
int
stos
mov
fs
pop
xor
jl
mov
fdivrl
stc
or
cmpsl
add
or
mov
push
cmpsb
mov
ss
adc
sbb
shlb
fwait
pop
call
jno
xor
test
in
push
stos
sbb
inc
pand
xlat
loop
add
sbb
sub
sbb
mov
mov
push
popf
lods
pop
cmpsb
mov
dec
dec
dec
aas
inc
mov
xchg
popf
pusha
outsl
xchg
xor
sbb
jno
sub
es
imul
jo
xor
mov
cmpl
xor
add
das
cs
aad
sti
mov
mov
les
ljmp
jnp
jno
mov
cs
inc
fadds
mov
xlat
hlt
sbb
test
fwait
add
sub
and
lret
pushf
xor
scas
pop
stc
push
sub
mov
or
movsb
lret
jmp
fmuls
lcall
addr16
jne
cmp
push
ljmp
cld
or
mov
or
add
pop
jbe
jae
test
fistpl
pushf
xchg
push
movsb
adc
inc
sbb
jecxz
gs
shrb
xor
out
in
daa
lock
mov
stos
fsubrp
inc
jnp
sti
xor
shrb
in
fdivrp
test
pop
mov
xorl
mov
pop
jge
push
mov
lahf
sti
jle
jo
cltd
aas
repnz
ss
mov
mov
cmp
lock
loope
movsl
push
push
lahf
adc
adc
cmp
fistpll
dec
imul
jg
jle
or
lret
fbstp
sbb
cli
pop
xchg
push
fwait
lcall
or
or
addr16
fwait
push
sbb
add
pop
scas
mov
jbe
push
add
lretw
mov
aam
dec
rorb
cmp
fidivs
jo,pt
and
jb
cmp
ret
add
adc
push
add
mov
and
or
cmpsb
rolb
or
sub
cmp
icebp
mov
out
ret
fistpl
fdiv
imul
add
jecxz
cmp
loop
add
fsubrl
loop
xor
dec
mov
mov
iret
or
mov
lret
mov
jbe
jg
popa
cmp
mov
xchg
or
imul
and
and
cmp
in
push
push
lret
add
scas
mov
mov
leave
jno
hlt
into
xchg
and
mov
mov
fistps
test
pop
test
js
jbe
rep
add
ss
adc
sub
fstl
and
jmp
mov
repz
jo
sti
pop
das
inc
fildll
dec
imul
int
pop
fidivl
push
push
dec
lahf
xchg
pop
push
push
and
mov
cmp
std
outsb
lret
fs
data16
pushf
mov
inc
sub
mov
stc
pop
aas
dec
mov
jb
ljmp
xor
jmp
into
xchg
ficoml
lock
enter
mov
add
mov
and
push
out
mov
dec
cmpsl
push
mov
dec
addl
test
popa
arpl
jno
jns
data16
mov
mov
call
gs
or
cld
push
dec
mov
neg
ss
mov
xorb
sbb
jns
shrl
pop
inc
xor
mov
push
insb
mov
pop
movsl
je
and
aam
jg
push
fdivl
pop
cmc
dec
jecxz
add
icebp
imul
cmp
dec
xchg
dec
dec
pop
fcmovnb
sub
sbb
cwtl
cmp
cmpsl
sbb
rolb
and
fbld
aam
in
fsts
pop
int3
dec
clc
test
push
pushf
inc
stc
orb
mov
pop
sub
jp
insl
fsubl
mov
movb
int
add
jno
mov
daa
mov
out
dec
sbb
xor
mov
or
sub
insb
int
ja
test
jg
movsb
fbstp
sarl
lods
aam
lock
int
dec
scas
mov
adc
test
mov
sbb
mov
cs
movsb
repz
icebp
ffree
iret
cltd
add
mov
pop
jmp
add
inc
pop
addr16
daa
cmp
jbe
push
jle
popa
out
add
fwait
movsb
test
movsb
dec
loope
inc
sbb
jae
mov
mov
cltd
lret
inc
in
aad
xchg
mov
repnz
xchg
push
lcall
pop
sbb
iret
xchg
insb
inc
dec
cmp
mov
arpl
sub
sub
xchg
xor
jnp
xor
decl
mov
dec
push
andl
aam
and
dec
rorl
cwtl
mov
adc
pop
add
mov
div
push
ss
ss
mov
cwtl
jp
inc
xchg
fimull
jnp
fcoms
push
adc
stc
adc
sub
sub
outsl
mov
enter
pop
xchg
rclb
or
insb
adc
sub
outsb
mov
mov
inc
cmp
aas
xchg
enter
rclb
cmpsw
fdivl
in
pop
in
loope
sbb
add
loop
jae
mov
lea
bnd
lds
jo
fldcw
xor
imul
daa
aaa
cmc
iret
in
push
inc
pop
pop
mov
sub
xor
inc
loope
lret
sub
fcoml
in
sbb
sbb
or
repnz
pop
and
jg
fcomip
xchg
push
mov
mov
dec
scas
xor
pop
clc
or
mov
enter
rorl
sub
xchg
insl
xchg
dec
ror
xchg
pop
sbb
leave
bound
pop
and
cmpb
sbb
lahf
push
push
push
imul
shll
cmp
mov
inc
mov
and
inc
in
push
aam
sub
pop
lock
sub
cwtl
bound
mov
rcr
mov
testl
mov
sbb
popf
scas
lods
adc
out
jo
ss
sbb
data16
sub
lahf
test
xchg
aad
out
xchg
loopne
das
mul
lods
daa
adc
ror
and
cmp
adc
mov
mov
pushf
and
ret
cmpb
pop
inc
mov
adc
sub
ja
or
mov
fwait
mov
cmpl
add
das
jg
popa
jb
and
adc
jl
pop
notl
fbld
enter
outsb
push
jg
and
aas
and
xor
and
push
imul
les
mov
out
aam
mov
pop
pop
out
xchg
arpl
ss
dec
jmp
movsl
push
dec
aas
nop
es
add
inc
mov
add
mov
std
xor
push
cmp
jns
es
leave
push
pop
cmp
les
insb
cmc
mov
sahf
mov
test
add
xchg
sub
loopne
fisubs
sbb
xchg
int
push
push
add
push
sub
sub
notb
into
xchg
dec
hlt
test
aas
filds
sbb
mov
pop
or
push
out
cli
outsl
sbb
mov
push
fisttpll
sarl
mov
adc
mov
lret
push
push
int3
cwtl
pushf
and
dec
repz
pop
lret
push
ss
pop
mov
aad
loop
xchg
shll
call
push
cmp
xchg
rclb
movsb
out
stos
sarl
stc
aam
push
ljmp
sub
pop
insb
jecxz
jmp
pop
xor
add
mov
adc
mov
shrb
cmpsl
and
cmp
mov
loopne
cmpsb
cmp
out
test
insb
xchg
xor
enter
pop
cwtl
sub
lods
das
in
lcall
pop
and
je
stc
movl
xor
rcrb
jecxz
dec
inc
icebp
cmpsl
arpl
out
xor
arpl
adc
push
or
xor
sbb
loop
movsb
lea
inc
add
shlb
mov
pop
repnz
hlt
inc
jno
addr16
ds
das
loope
sti
push
loope
out
and
stc
pusha
dec
pop
fldt
out
ljmp
lret
sub
and
and
push
mull
adc
mov
jbe
pop
push
mull
and
in
mov
nop
call
cmpsl
mov
push
ja
jl
sbb
test
mov
je
scas
imul
add
sbb
inc
xor
adc
pusha
xchg
pop
add
dec
pop
pop
sbb
int
stos
rclb
clc
js
push
cmpsl
dec
or
jmp
cmp
cli
bound
in
inc
lock
sub
xchg
aaa
pop
jl
neg
inc
jne
cwtl
data16
jbe
mov
mov
arpl
neg
cmp
lcall
sub
movsl
push
sub
mov
sub
jae
insl
vmread
fisttps
shrb
dec
enter
popf
int
in
xor
movsb
mov
bound
loop
nop
std
cmp
les
orl
fmuls
enter
loope
and
sub
fldcw
or
fcompl
sub
inc
roll
lcall
outsl
bound
pushf
jle
add
xlat
or
popf
js
or
in
pop
and
mov
cmp
ljmp
fstpl
mov
cmc
paddsw
sub
jno
aaa
aaa
js
dec
mov
jmp
mov
pop
stc
xchg
repnz
add
jno
xor
lds
push
outsl
arpl
arpl
sahf
outsb
jecxz
mov
mov
test
in
xchg
mov
pop
cmp
pop
loop
mov
or
xor
push
sar
sub
movsl
ret
lods
loop
pusha
fisttpll
orb
insb
fisubrl
pop
out
in
lcall
sub
out
and
pop
stos
rcll
loop
or
mov
jo
fwait
clc
and
dec
pop
and
repz
adc
inc
scas
lret
mov
ds
scas
xlat
mov
aas
add
xlat
rcrb
jns
add
xchg
loope
ds
fiadds
push
inc
adc
stos
iret
icebp
xor
jns
call
xchg
mov
and
xchg
lock
scas
and
pop
ret
ret
fisubs
je
push
js
push
or
stc
inc
out
push
mov
add
and
push
push
in
pop
fld
in
ljmp
sbbl
cmpsb
xor
xor
pop
aas
popf
mov
sti
mov
mov
dec
sbb
adc
gs
dec
ljmp
aam
jmp
pop
testb
mov
scas
outsl
mov
rcrb
sbb
sar
xchg
adc
lods
mov
call
mov
stos
or
sub
daa
mov
repz
fwait
add
repz
pushf
mov
jo
mov
push
mov
ret
sub
mov
fsts
xor
iret
in
dec
test
ret
lcall
xchg
cmpsl
xchg
push
pop
dec
adc
inc
xchg
lret
cli
int3
fstpl
cwtl
pop
jb
ss
xchg
lea
stos
fildll
shll
jnp
adc
adc
cmp
icebp
flds
mov
inc
adc
xlat
lahf
lahf
ret
and
mov
out
shrl
and
dec
addl
or
jno
out
push
inc
test
push
mov
mov
mov
xor
popa
cmp
test
in
sub
jo
pusha
cltd
jne
cmp
jae
sub
test
pop
lret
mov
out
data16
jmp
stos
lahf
inc
and
data16
int
lods
enter
jg
in
pop
mov
scas
fldl
pop
inc
push
and
sub
shlb
cmp
int3
stos
jle
iret
pop
or
cmp
loop
in
xchg
jle
inc
push
adc
aaa
mov
sub
call
ljmp
mov
lods
int3
insb
push
jbe
into
hlt
sub
pop
or
pop
and
sub
push
fwait
cmp
xlat
loope
out
xor
jl
popa
cmpsl
jmp
aaa
mov
xchg
add
mov
xor
or
xchg
and
iret
inc
dec
rcrb
int3
sub
popa
sbb
stc
cmp
jns
in
sbb
fistl
push
out
insb
push
xlat
push
movl
xchg
mov
dec
or
mov
loop
fnstenv
push
xor
inc
pop
fsts
cmp
in
dec
add
pusha
sub
add
cwtl
cmp
lea
push
jp
lds
or
divl
sub
mov
mov
leave
mov
add
mov
out
jne
jbe
test
mov
xchg
xor
sub
repnz
fs
jne
mov
pop
xchg
inc
sbb
dec
stos
adc
das
mov
mov
push
jg
xchg
cwtl
dec
mov
dec
jecxz
sbb
mov
je
mov
pop
gs
mov
lea
fsin
loopne
ljmp
scas
insb
das
loope
xchg
lret
std
leave
xor
mov
aas
or
mov
jno
shlb
idivl
or
lods
jmp
dec
rolb
jo
cmc
or
nop
pop
mov
pushf
or
daa
push
inc
loopne
lahf
aam
in
inc
fdiv
scas
ficoms
arpl
or
inc
scas
in
cmc
std
or
stc
or
lods
insl
lahf
or
sahf
imul
jg
imulb
adc
push
sti
lea
rclb
jmp
das
addr16
repz
push
mov
aaa
and
jge
cmp
mov
sahf
dec
sbb
adc
cmp
dec
push
add
sub
xor
dec
inc
loope
pop
lret
cwtl
mov
push
aaa
mov
pusha
fs
fisubl
push
ret
mov
xor
push
push
and
mov
ss
sub
push
lods
dec
bound
sub
sub
cmc
add
dec
arpl
das
mov
xor
das
ss
push
lcall
loope
sub
mov
dec
push
sub
adcb
sbb
mov
mov
sbb
cmpsl
mov
pop
bound
xchg
aaa
lahf
out
xchg
scas
mov
aad
mov
imul
ss
popl
das
insb
into
cmp
nop
pop
in
cmp
movsb
ja
xchg
test
aas
push
adc
sbb
mov
cmp
rorb
dec
mov
pop
pop
xor
sub
and
out
cmp
cld
push
scas
pop
or
add
shr
jle
hlt
sub
adc
xchg
nop
sahf
push
popw
sub
jp
or
sahf
int3
out
mov
lret
jmp
push
xor
aas
jmp
and
mov
pop
jle
cli
std
add
lods
pop
sbb
icebp
push
cmpl
loop
sub
pop
xchg
adc
pop
sub
jmp
xchg
es
shlb
insb
imul
or
pop
pop
imul
fisubrs
pop
cmp
fdivrl
imul
xor
leave
xor
add
outsl
iret
add
dec
mov
mov
and
out
std
pop
xchg
dec
push
lds
sahf
les
iret
in
cmpsl
adc
jbe
add
mov
pop
outsb
lods
es
cld
loopne
cmpsl
popa
adc
stos
sbb
fsubl
pop
pop
aam
xchg
adc
pop
jecxz
sub
loop
sti
sub
dec
pop
cmpsb
and
in
dec
and
movsb
das
pop
int
sbb
stos
call
addb
cltd
or
xor
xchg
repnz
out
xor
aad
or
xchg
xor
aas
out
inc
fs
adcb
and
imulb
push
lret
iret
or
add
out
push
jbe
out
jns
faddl
pushf
xlat
cmp
stc
imul
mov
lret
in
mov
test
cvtdq2ps
xlat
jbe
adc
pop
les
daa
loopne
and
pushf
ret
mov
mov
movsb
jno
repz
xor
les
jg
jae
sub
popa
mov
jb
fdivp
cmpsb
fdivs
inc
mov
cmpsb
iret
push
cmp
sub
adc
dec
test
ss
es
sbb
inc
jl
rcrb
and
jnp
xchg
in
jae
jmp
xor
jae
jbe
movsb
shrb
mov
add
sbb
mov
lock
ret
mov
push
sub
xchg
js
or
arpl
sbb
test
pop
lods
and
repnz
xchg
cli
mov
insb
js
aad
adcl
int3
mov
xor
roll
fwait
subl
in
loopne
inc
es
and
sbb
dec
int
aam
xchg
ret
adc
in
scas
push
mov
and
test
fcoms
stos
xchg
xchg
mov
loope
jae
gs
sbb
inc
rorl
cmpsl
loop
add
iret
mov
sbbl
sub
xchg
les
arpl
pop
add
movsl
jge
jecxz
inc
push
gs
xchg
jo
cmp
inc
xchg
inc
lcall
mov
loopne
mov
and
lahf
xchg
mov
iret
addr16
dec
sahf
dec
xchg
dec
xchg
loop
adc
and
divb
repnz
mov
outsb
rcrl
in
xchg
adc
add
sub
pushl
jle
orl
sti
inc
rcrl
rcr
jnp
jbe
pop
sbb
add
xor
jge
scas
into
mov
cmpsl
cwtl
ljmp
sbb
push
lods
jp
stos
mov
xor
push
xchg
mov
adc
add
mov
mov
fneni(8087
mov
ss
push
pop
and
lods
mov
out
out
push
out
mov
cwtl
jmp
push
xlat
inc
jmp
xor
fwait
xchg
rorl
jno
lret
lods
mov
pop
out
pop
jbe
std
pop
negl
xchg
dec
or
je
dec
ds
lret
dec
shll
push
in
clc
dec
addr16
shlb
cwtl
aam
inc
cld
mov
cmp
shrl
dec
fbld
rcr
cld
jg
push
cmp
je
sub
inc
fdiv
xchg
add
or
mov
dec
arpl
sbb
sub
aam
mov
dec
and
int3
rcll
roll
lods
mov
clc
stos
xchg
test
xchg
xchg
mov
xchg
popf
movl
js
xchg
fcmovne
pop
xchg
cmp
adc
test
xor
or
sbb
addr16
scas
in
inc
xchg
push
leave
pop
es
sub
cmp
dec
loopne
pop
ljmp
xchg
lahf
xchg
xchg
jnp
cmp
push
or
out
addr16
jb
in
mov
mov
pop
cmp
icebp
push
adc
mov
xchg
in
mov
mov
xor
cmp
lcall
push
enter
insb
repz
dec
jecxz
mov
add
insb
fdivrl
std
cmp
mov
jp
or
std
sbb
pushf
dec
hlt
or
adc
mov
cli
sarl
pop
push
or
push
cmp
push
mov
jge
iret
jecxz
dec
adc
lds
pop
push
lods
and
cmpsb
aaa
jp
inc
repz
cmpsl
mov
repnz
sbb
ficomps
gs
cmpsb
cmp
mov
inc
ret
test
adc
sub
call
sarb
shlb
jmp
fcoml
xorb
notl
mov
mov
cmpsb
push
jnp
jecxz
push
movsl
js
ret
mov
jl
bound
aas
repz
lcall
fwait
jnp
push
cmovae
sti
inc
mov
mov
dec
dec
or
jl
fldl
daa
out
popa
gs
and
shlb
int
test
sub
jnp
outsb
push
fsub
cmp
jg
dec
xchg
into
aam
push
mov
xchg
mov
xchg
push
pop
or
adc
jno
lret
pop
jo
pop
hlt
or
jge
push
cmp
push
cs
shl
dec
movsb
mov
or
dec
int
sub
loop
int3
sub
mov
lea
add
loop
lahf
mov
loope
push
xchg
ret
xor
ret
ret
aaa
xor
sbb
push
fs
jne
jge
push
xchg
ljmp
or
inc
jb
aam
adc
dec
mov
int3
pop
clc
mov
cmp
hlt
xchg
dec
fdivrs
dec
cmp
xlat
bound
mov
repnz
sarb
mov
sub
push
inc
cmp
or
fistpl
orl
call
lock
add
push
push
test
cltd
leave
dec
or
jp
mov
mov
leave
repnz
xor
xchg
mov
leave
cld
mov
test
fucomi
inc
movb
imul
jl
inc
add
pop
loope
out
loopne
mov
sub
ret
std
or
pop
ret
sub
aad
loopne
push
xchg
cvtps2pd
mov
mov
rorl
lods
lcall
add
mov
sti
adc
lret
xchg
cmp
enter
scas
bound
nop
jae
incl
xchg
in
pop
call
pushf
mov
jecxz
cwtl
adc
repz
cmpsb
shrb
shlb
cmp
mov
dec
pop
flds
mov
adc
imul
mov
inc
jns
gs
mov
cmp
loope
jmp
adc
mov
scas
push
negb
cli
ss
les
ljmp
dec
pusha
shll
or
nop
ljmp
mov
push
out
dec
push
sbb
mov
mov
les
add
pop
in
inc
loopne
xor
lret
lds
fdiv
adc
lret
lret
push
cmp
sub
idivl
psadbw
call
loop
and
lds
mov
dec
aas
push
push
mov
push
xchg
mulb
or
shrl
cmp
insl
dec
xchg
je
out
push
faddl
push
out
sti
xchg
call
mov
mov
stc
movsb
or
and
jmp
xchg
mov
sbb
shlb
push
pop
mov
lret
rcl
mov
adc
sub
pop
sub
add
xor
pop
cld
aad
and
cmpb
sbb
mov
cmp
cwtl
outsb
in
and
les
leave
dec
pop
daa
imul
and
mov
inc
lea
dec
push
jnp
out
leave
ds
mov
lea
pop
jecxz
and
inc
inc
int3
ds
nop
inc
mov
add
inc
push
jno
mov
and
call
repz
fdivl
mov
shlb
mov
pop
lret
loopne
test
xor
push
sbb
clc
jle
insl
out
movsb
sub
fistps
jle
insb
push
hlt
inc
stos
fwait
push
pop
sub
add
adc
in
adc
push
testl
add
ds
es
inc
in
addr16
js
cltd
dec
in
xor
add
inc
loopne
xchg
pop
out
repz
xchg
adc
mov
push
enter
inc
bts
jecxz
mull
lds
xor
ss
das
mov
push
mov
pop
cmp
ret
lds
pop
jbe
mov
dec
pop
rorb
mov
in
mov
and
pop
dec
andb
or
push
rorl
hlt
stos
inc
enter
xchg
xchg
push
outsb
pop
loopne
inc
fcomi
xchg
add
push
xchg
sahf
xor
test
sub
data16
push
dec
int
pop
gs
pop
and
hlt
int3
insl
push
lahf
iret
jg
jno
arpl
cmpsl
xchg
xchg
mov
dec
push
push
mov
incl
fwait
xor
jecxz
pop
push
dec
and
adc
pop
push
mov
mov
in
cs
jns
jb
js
dec
dec
js
inc
scas
lret
mov
push
mov
jne
aaa
mov
push
loop
xlat
sbb
push
loopne
scas
xchg
lods
lcall
dec
xor
mov
jbe
insb
out
lahf
pop
mov
adc
iret
add
mov
divb
add
ljmp
les
sub
xor
iret
movsb
sub
sbbb
add
push
fistps
push
arpl
fstps
mov
in
push
pop
xchg
add
mov
sub
dec
dec
add
push
sbb
shrb
rolb
mov
js
movntq
push
pop
imul
sub
or
daa
push
lods
xor
sbb
icebp
adc
mov
repnz
mov
call
ljmp
loopne
ret
out
pop
xor
pop
iret
ret
lcall
dec
aad
int3
mov
dec
mov
or
sarl
ret
add
imull
mov
movsl
addl
inc
sbb
test
sbb
idivb
inc
push
fisubs
mov
push
or
sbb
xchg
push
cld
mov
lret
xor
out
mov
lea
mull
add
add
sub
add
mov
inc
or
data16
scas
dec
dec
pop
xchg
push
iret
int
movsb
dec
mov
sbb
nop
lock
ljmp
mov
mov
push
leave
fimuls
movsl
das
repz
loope
dec
jge
leave
add
out
dec
adc
stos
sbb
xchg
xor
push
jnp
cld
or
lds
mov
xchg
js
and
mov
pop
jg
leave
jno
in
mov
lods
adc
jmp
xchg
sub
mov
stos
outsb
xchg
sahf
xor
popa
xor
out
xchg
xchg
fidivl
or
adc
lea
enter
lret
dec
aas
or
adc
sbb
and
mov
cmpsl
push
stos
sbb
and
imul
mov
and
and
xchg
dec
dec
mov
or
sbb
es
and
adc
pop
and
popf
jno
popf
mov
nop
loop
cmp
or
and
jge
lahf
enter
clc
add
dec
mov
push
push
mov
scas
adc
iret
fisubrs
or
or
les
test
dec
outsb
std
popa
xchg
lock
mulb
jns
frstor
sub
cmp
scas
pop
lahf
push
mov
xor
arpl
out
das
sub
push
xchg
xchg
inc
mov
and
or
pop
lret
inc
insl
push
mov
xchg
cwtl
dec
inc
movb
lods
mov
cs
movsb
rolb
bound
sar
xor
sti
dec
push
cmpsl
jmp
inc
cmp
inc
sbb
out
add
cmp
pop
dec
gs
xchg
lods
stc
inc
xchg
bound
cmp
sbb
ja
or
mov
lret
jmp
lahf
fstpl
cmpsl
push
clc
daa
iret
arpl
adc
sti
xchg
fiadds
fs
push
pop
sub
in
jae
jbe
fcompl
cmc
xor
nop
loopne
add
loope
sbb
push
mov
mov
in
mov
jae
mov
cmp
aas
fnstenv
shl
add
push
push
cmpsb
stos
fcmovnbe
mov
pop
xor
mov
addr16
xor
jl
fisttpll
pop
arpl
es
insb
pop
fcoml
add
sbb
fiaddl
faddl
pop
ret
and
and
push
ret
jb
lcall
mov
aad
std
mov
shll
loope
and
stos
sub
lock
adc
mov
bound
sub
repnz
push
outsl
xchg
fidivrl
cmp
es
add
stos
lods
movb
and
mov
add
mov
mov
cmp
sti
outsb
scas
fsubrl
je
pop
fidivs
ljmp
rcrb
pop
ja
adc
jecxz
lods
adc
lcall
jle
dec
jne
xchg
mov
fimuls
bound
in
dec
jmp
scas
popf
arpl
cmp
dec
fldcw
dec
je
test
scas
test
scas
fcom
jnp
mov
bnd
aaa
lds
jno
mov
xchg
iret
dec
dec
std
inc
test
loope
push
push
arpl
dec
out
scas
cli
int
lods
js
inc
fwait
dec
int
js
repnz
ret
dec
jle
idivl
js
test
xor
lahf
repz
jne
push
cmp
dec
or
sub
in
dec
fwait
rdtsc
sbb
leave
jbe
pop
pop
add
in
mov
pop
pop
jmp
repnz
mov
stos
xlat
jbe
xchg
push
cwtl
pop
jne
mov
or
sbb
out
frstpm(287
xor
test
imul
or
inc
cli
pop
inc
jns
idivb
mov
adc
mov
cmp
xchg
cmp
rcll
jp
in
repz
mov
outsb
scas
mov
mov
popf
stc
stos
mov
sub
dec
pop
push
xor
cmp
ds
mov
movsl
aas
popf
jp
push
cmpsb
lahf
mov
stos
fs
mov
mov
xor
or
in
jg
cmp
cmp
xchg
and
pop
js
and
xchg
xor
cmp
stos
mov
inc
cmc
add
in
mov
mov
jo
sub
cmpsb
lcall
add
xchg
mov
mov
jle
push
cmpsl
add
inc
xor
leave
push
dec
mov
inc
mov
add
inc
cltd
sbb
jo
aas
cmp
dec
out
nop
movlps
mov
jbe
int3
mov
add
jge
lods
fdivrs
lea
xchg
mov
and
push
fs
sub
in
jno
aad
inc
and
dec
sbb
mov
popa
or
xchg
lea
loope
ljmp
mov
sarb
ds
mov
loop
sarl
sbb
and
ljmp
inc
popa
xchg
das
pop
inc
scas
fisttpll
dec
jno
stos
ds
lcall
mov
movsl
xchg
lret
inc
xchg
rcrb
int3
or
nop
dec
bound
and
inc
xor
dec
mov
or
cltd
lcall
sbb
add
rcll
jle
sbb
lcall
inc
lret
add
mov
stc
fmull
std
pop
jbe
jne
mov
mov
in
call
rolb
divl
xor
lods
jecxz
in
cmp
lods
arpl
xlat
pop
cmpsl
dec
cmpl
fidivrl
sub
xchg
outsb
nop
and
mov
call
jle
shll
mov
out
jb
test
loop
int3
sbb
or
xchg
mov
lods
enter
aam
lcall
idivb
push
cltd
lret
cld
cmpsb
incb
cwtl
push
xor
repz
mov
inc
push
sbb
push
cmp
lcall
inc
out
movsl
sbb
les
std
pop
mov
nop
cmpsb
scas
ret
adc
adc
jecxz
pop
mov
pcmpgtb
inc
sbb
hlt
xor
mov
sahf
mov
xchg
inc
inc
mov
inc
xor
sbb
clc
cmp
inc
in
xor
movsb
mov
shl
mov
jl
fisubl
add
fdivrs
inc
xor
mov
or
mov
cmp
push
rol
lret
and
mov
jne
das
xchg
shll
dec
loopne
and
loop
lods
stos
or
addr16
pop
gs
jnp
ret
js
mov
rcrb
mov
fwait
pop
adc
pop
or
pop
sub
lea
in
dec
ds
cld
enter
cmp
jae
adc
pop
mov
mov
pushl
loope
jp
pop
sub
push
daa
sub
ss
iret
cmc
lods
fimuls
or
adc
lea
into
xor
pop
in
or
mov
out
jo
adc
mov
pop
sbb
shl
xchg
fiaddl
push
leave
pushf
xchg
adc
outsb
fiadds
jp
sub
movsl
lahf
testb
jae
leave
pop
testl
arpl
adc
bound
lcall
movsl
dec
lods
std
adc
pop
cmp
repnz
mov
mov
data16
sahf
cmp
lea
gs
out
xchg
sub
xchg
sub
aad
cmp
bound
push
xchg
lahf
aaa
xchg
or
sub
test
jp
aas
push
inc
jnp
dec
fisubrl
xor
xlat
and
out
sbb
fisubrl
out
adc
je
rorl
jl
mov
popa
dec
daa
inc
push
fcoms
imul
mov
hlt
test
into
inc
mov
pop
das
test
xor
sub
inc
jne
divb
inc
inc
sbb
xlat
out
push
mov
push
insb
and
pushf
adc
outsl
mul
xchg
cmp
sbb
push
ss
add
subb
dec
xor
mov
out
jae
pop
out
cmpsb
addl
das
adc
fnstenv
pop
mov
shll
jo
dec
imul
jle
or
xchg
or
lea
adc
insl
xor
or
pop
shl
aas
arpl
fs
negl
jp
stos
pusha
inc
pop
xor
inc
pop
xor
or
inc
leave
xchg
and
jle
xchg
lret
sbb
xor
mov
adc
jg
xchg
push
es
in
enter
cmp
movsl
insb
popf
idiv
negl
popf
or
adc
adc
xchg
cmp
inc
cmp
insl
pop
pop
xchg
sbb
jl,pn
imul
adc
dec
mov
fisttpll
mov
sub
lret
rolb
inc
fiaddl
ss
dec
lock
add
ds
xchg
push
adc
mov
dec
int
sub
add
sub
stc
pop
insl
jge
dec
dec
orb
popf
jmp
xchg
loopne
push
jp
loope
or
pop
outsb
lret
call
loope
out
dec
adc
rcrb
inc
stc
mov
fstpl
lret
add
imul
sahf
cmpl
imul
mov
imul
cmp
ret
push
aas
pop
and
std
dec
leave
ss
ds
outsb
mov
jg
jmp
call
pop
arpl
dec
mov
int3
imul
push
leave
jns
shl
cmc
mov
es
inc
fs
scas
mov
ret
je
jl
in
mov
push
xchg
xchg
push
fcoml
cmp
sub
cltd
aaa
arpl
js
negl
test
mov
pop
orl
jp
mov
inc
roll
pop
loope
leave
test
dec
je
mov
lods
into
xchg
roll
into
xchg
push
xchg
cmpsl
pushf
test
add
test
lret
roll
add
mov
fmuls
xchg
xchg
pop
in
scas
jmp
push
mov
pop
mov
lock
ret
mov
outsb
fldt
pop
outsl
test
xor
push
mov
loop
or
adc
int
ss
aas
out
clc
mulb
adc
test
sbb
sub
xchg
popa
mov
jmp
mov
add
jg
cli
dec
mov
ds
and
pop
ja
adc
jle
xchg
cmp
push
mov
bound
shrb
mov
push
roll
push
inc
dec
xchg
in
test
mov
and
cmp
dec
xlat
enter
sub
or
ljmp
das
push
push
xchg
push
inc
lret
mov
cwtl
les
add
hlt
push
lods
je
jbe
pushf
fs
lcall
inc
subl
mov
cmpsb
jcxz
std
jmp
bound
pop
jno
pushf
xor
cmp
mov
xchg
jle
lahf
fld
push
add
xorl
xchg
test
nop
ljmp
mov
lahf
inc
mov
stos
repnz
ficoml
leave
ss
inc
mov
add
pushf
xor
das
mov
adc
adc
push
xchg
jecxz
fs
arpl
sub
stos
xchg
mov
je
icebp
mov
out
push
lods
mov
mov
prefetch
movsl
pushf
jno
push
push
mov
out
cmpsl
mov
cld
adc
icebp
xchg
fbstp
push
cltd
push
pop
inc
sti
sbb
lods
push
bound
loop
pop
xor
push
ljmp
push
mov
cld
sub
lret
leave
imul
xchg
fnstenv
adc
fldcw
stos
xlat
cmpl
imul
and
out
pop
lods
mov
mov
stc
mov
sub
push
arpl
mov
lds
ret
mov
adc
pop
test
push
jge
ret
pop
call
cmp
cmp
loopne
cmp
jnp
add
in
cltd
dec
mov
xchg
aas
and
jb
push
lret
call
sbb
sub
xchg
insb
in
push
mov
and
inc
mull
sarb
subb
stc
inc
push
push
adc
dec
enter
mov
leave
rcrl
mov
int3
sbb
pop
insb
mov
imull
leave
inc
sub
xchg
or
cmp
scas
add
mov
mov
rol
add
mov
adc
lcall
pop
movsb
aas
sbb
call
xor
iret
imul
out
sub
aad
pop
ficoml
out
push
call
popf
cmc
arpl
add
call
lahf
push
loop
loop
lcall
xor
jbe
popf
in
incl
lret
dec
lcall
es
out
push
sahf
jl
sbb
sbb
inc
inc
or
jp
mov
stos
adc
clc
daa
mov
add
into
pop
sub
mov
aas
mov
rolb
cmovnp
mov
decb
cmp
xor
add
adc
inc
gs
adc
mov
popa
cli
pop
mov
scas
nop
push
mov
mov
into
mov
add
adc
cmpl
lahf
sub
mov
mov
das
cmp
out
add
test
pushf
push
jmp
pusha
fidivrs
xchg
sub
outsb
pop
aad
test
in
and
enter
fwait
xor
or
in
dec
hlt
or
inc
lods
cwtl
xchg
push
fbstp
xor
add
cmp
cmp
lods
adc
dec
aam
aad
mov
pop
es
mov
jns
xorb
movsb
and
or
mov
icebp
xchg
stos
xchg
mov
daa
xchg
or
adc
cli
int3
sub
ja
xor
bound
push
add
loopne
int3
aas
daa
xor
add
xlat
push
sbb
popa
cmpsb
pop
stc
pusha
pop
sti
sbb
dec
in
test
dec
jnp
insb
push
mov
test
das
lret
in
and
adc
mov
out
inc
stos
stos
sub
aad
adc
xor
adc
xor
andb
push
xor
mov
sbb
imul
inc
cvtpi2ps
cld
roll
dec
jae
lods
rolb
push
pop
mov
lods
imul
sarb
mov
cmp
dec
and
jecxz
and
mov
mov
mov
mov
mov
rorb
lods
nop
xor
cli
rorb
cmp
push
inc
jns
leave
leave
imul
xchg
lods
cli
loope
int3
mov
or
cmp
mov
scas
fcmovbe
cmp
push
pop
scas
xchg
jecxz
movl
jbe
xchg
cmp
cmp
jl
xchg
lds
add
test
push
sub
dec
push
call
sbb
push
sbb
aad
cmp
mov
cmp
pop
leave
fstpt
sub
cmp
jo
push
sub
int
inc
mov
gs
jns
sbb
mov
ret
cmp
push
fnstcw
push
in
repnz
lods
or
hlt
fstp
xchg
in
push
decl
lds
cmp
cmp
xchg
push
xor
outsb
lea
aaa
lods
into
xchg
out
cmp
mov
mov
sub
lret
jno
sbb
lcall
cmp
test
mov
and
add
cmp
or
lock
outsb
pop
add
adc
jmp
and
out
push
xchg
inc
fs
or
lret
push
popa
dec
clc
jg
push
inc
ret
pop
add
jmp
jns
sub
test
hlt
idiv
mov
jae
pop
push
popf
push
aaa
into
pop
mov
out
add
lods
push
arpl
add
clc
sahf
sahf
cmp
cmpl
into
addl
xor
jnp
lds
lock
mov
mov
nop
push
cld
sub
incb
mov
mov
std
xlat
rclb
pop
sarl
imul
push
mov
fistps
pop
cmp
sub
add
inc
dec
addr16
call
into
leave
pop
ds
dec
mov
jns
pop
jno
mov
mov
and
movsl
pop
cwtl
mov
sbb
insb
sti
outsl
insb
jp
xorb
jne
or
mov
test
rorb
nop
pop
adc
xor
and
out
jmp
dec
shr
jecxz
es
push
sarb
ljmp
out
mov
inc
into
cs
add
inc
repnz
js
jge
push
cmp
xor
dec
inc
xchg
inc
adc
cltd
mov
lret
mov
incb
sbb
orl
mov
loopne
les
int
aaa
jnp
fwait
ss
push
push
mov
mov
sbb
pop
cmpsl
stos
call
rorb
test
outsl
enter
nop
jge
sub
xlat
mov
addr16
aad
out
sub
xor
test
cmp
cwtl
int
add
adc
xchg
sbb
jae
or
adc
iret
jl
add
repz
push
jecxz
cmpsl
pop
out
add
rclb
xchg
aaa
mov
cmp
out
sarl
mov
popf
out
stos
aad
ficompl
shll
arpl
decb
ds
cmp
xchg
add
fmull
gs
hlt
cmc
aaa
adcb
or
mov
sub
aaa
cmp
pushf
sbb
jb
push
jne
shrb
or
xchg
push
into
sahf
lods
mov
inc
adc
hlt
add
das
stc
push
mov
ss
sbb
pop
shrb
out
sbb
test
mov
enter
push
or
mov
push
enter
into
lods
filds
out
push
xchg
add
mov
xchg
sub
xor
xchg
out
ds
mov
aas
push
inc
bound
xchg
and
scas
lock
inc
pop
mov
jns
mov
mov
cs
mov
stos
sarb
cmp
and
lods
mov
hlt
fadds
sbb
cmp
cltd
aaa
cld
imul
push
ds
fwait
mov
cs
lea
cmp
test
outsb
test
or
mov
ret
lea
shl
adc
into
int
dec
imulb
cs
mov
and
mov
popa
in
test
mov
lods
mov
scas
scas
dec
sbb
sub
sbb
sbb
in
adc
ret
cmp
jl
loop
or
adc
popa
add
lods
in
insb
in
stos
sahf
loopne
or
adc
test
mov
js
ja
and
fisubl
sbb
fisubs
dec
insb
inc
adc
pop
mov
inc
stc
mov
daa
fists
inc
sbb
rorl
push
hlt
jmp
inc
xchg
xchg
xlat
add
push
jecxz
gs
cltd
mov
and
sbb
aaa
pop
push
xchg
clc
xor
add
and
pop
push
pop
jge
adc
push
lret
ljmp
ret
jns
out
in
imulb
add
in
rorl
sub
in
mov
push
aam
gs
and
mov
inc
jbe
dec
js
sub
ljmp
outsb
or
xor
sbb
lret
je
out
cmpsb
cmp
adc
mov
jl
inc
repnz
jg
test
inc
jo
std
dec
and
dec
push
mov
and
mov
mov
imul
jl
dec
mov
stc
std
pop
insb
addr16
lods
shlb
mov
jl
sub
push
insb
add
bound
in
adc
mov
adc
and
sub
into
in
inc
adc
jl
and
or
and
jmp
push
test
es
sub
repz
inc
pushf
lahf
xchg
jns
adc
scas
adc
mov
xor
dec
js
sar
inc
cmp
or
fmuls
aas
xor
insb
shll
out
dec
sbb
hlt
das
push
out
add
adcl
xchg
inc
cmp
pop
and
cwtl
loopne
jb
loope
nop
pop
adc
and
jg
mov
into
adc
add
sbb
cs
cmp
jbe
push
iret
sub
leave
cmp
xlat
pop
xchg
cmp
cmpsl
rolb
cmp
arpl
jns
call
dec
push
cli
out
repz
pop
cmp
in
adc
push
lea
js
pushf
adc
out
inc
and
mov
dec
cmp
jg
mov
mov
dec
mov
mov
jo
or
ret
lods
and
aad
stc
out
add
loopne
popf
pop
sarb
mov
sbb
aad
sbb
add
mov
cmpl
xchg
add
ss
shl
pop
aaa
imul
push
lea
fmull
dec
mov
cwtl
add
in
in
inc
add
mov
sub
push
lret
sti
jno
push
pop
cmp
mov
mov
dec
push
fdivl
dec
pusha
mull
ret
orl
mov
xchg
lods
push
push
or
enter
push
pop
pop
pop
lods
push
out
mov
fsubrl
pop
fs
rcrb
mov
jo
push
jle
cmp
cmp
lret
clc
cmp
and
mov
outsb
xor
jb
or
mov
push
daa
leave
in
jge
mov
sti
sti
add
cmpb
xor
lret
pop
es
mov
dec
iret
insl
cmpsl
loopne
cs
repnz
adc
stc
pop
inc
mov
cwtl
dec
mov
add
adc
adc
pop
fcomip
jo
jb
dec
pop
arpl
stos
cwtl
lods
mov
pop
stc
sbb
and
jb
jnp
adc
mov
loopne
jns
sub
push
add
fcomi
mov
jecxz
xor
dec
xor
cmp
data16
mov
inc
xor
inc
js
xor
repz
push
inc
push
repz
mov
inc
and
outsb
and
add
lods
add
ds
repz
or
sbb
mov
pop
je
movsl
mov
add
pop
adc
mov
cmc
aas
or
sub
js
arpl
adc
loope
mov
push
lret
pop
sbb
in
cmp
cmp
stos
data16
lcall
add
or
cmp
loop
ljmp
stos
les
mov
xor
or
xor
ss
aam
adc
daa
xchg
or
mov
repnz
cwtl
iret
int
jne
sub
ja
addr16
aaa
test
mov
fisubrs
testb
in
push
and
repz
mov
adc
mov
inc
lea
add
dec
cs
out
sahf
push
lods
cmp
repz
fstpt
in
mov
shll
in
cmc
cmp
retw
jb
into
test
sub
lods
dec
pop
mov
inc
shl
pushf
jp
mov
in
insl
stos
ja
mov
inc
push
jns
xchg
out
sbb
mov
sub
or
aad
jmp
or
xchg
dec
adc
xchg
xchg
sub
dec
testl
cli
push
por
mov
and
jmp
jno
sbb
fadds
inc
xchg
push
jmp
shr
xlat
popa
inc
mov
test
fldt
insb
arpl
insl
test
cltd
adc
inc
push
and
or
pusha
sub
jb
and
enter
or
and
imul
jp
daa
xor
mov
pop
in
mov
adc
mov
cld
mov
adc
into
pop
jmp
jns
sbb
insl
scas
push
adc
cld
sbb
push
movsl
test
stos
fnstsw
hlt
xchg
stc
pop
inc
mov
add
or
mov
jmp
cmp
int3
into
cmpl
adc
sti
and
pop
mov
jne
sahf
dec
push
sub
xor
sahf
mov
clc
cmc
cmp
out
loope
lret
out
mov
dec
add
lds
aad
sub
pop
pop
hlt
sbb
pop
paddsb
xchg
jno
inc
push
nop
push
outsl
sub
lods
push
flds
cmp
adcl
cmp
shll
inc
dec
fsubl
cs
dec
adc
and
or
jp
mov
sub
test
pop
pop
dec
mov
dec
or
adc
or
les
push
ds
adc
jle
aad
xchg
test
test
mov
push
and
jne
cmp
lea
or
dec
sbb
outsb
lcall
push
dec
lret
and
jmp
sub
adc
mov
imul
xor
test
popa
inc
into
notb
out
mov
jecxz
jb
fadds
ss
jge
sub
mov
pop
adc
and
mov
or
sbb
cmc
jbe
call
mov
and
push
fstpl
stos
insl
mov
sub
mov
pop
push
aaa
mov
imul
in
mov
popa
push
std
xchg
jmp
add
je
mov
xor
pop
insl
mov
or
cmpsl
loopne
mov
adc
bound
jle
ret
push
ljmp
lds
sbb
inc
enter
test
inc
add
xchg
jo
xor
dec
push
xchg
div
movsb
into
jne
dec
fiaddl
xchg
xlat
lcall
lods
jle
dec
jb
add
bound
repz
bound
mov
dec
xchg
divl
pop
mov
out
das
cli
cld
aam
mov
inc
xor
cld
loopne
mov
sub
movsl
push
mov
out
arpl
das
xor
xor
adc
in
sub
sbb
fildll
push
mov
stos
movsl
aas
xchg
add
aaa
and
cmp
fsts
aas
fistps
pop
inc
inc
insl
push
add
inc
cs
xlat
cmp
xchg
out
lahf
in
adc
adc
pop
dec
out
cmp
jge
pop
popl
lock
xchg
loopne
xor
inc
lds
xor
mov
fadds
les
cmp
fstl
pop
stos
pop
inc
hlt
fcom
push
int3
ret
outsl
dec
sub
and
cmpsl
jo
cmp
sub
adc
adc
pusha
ds
int
rcr
inc
fs
xor
inc
jno
enter
out
rclb
lret
pop
xor
das
imul
stos
mov
pop
push
cmpsl
inc
lahf
mov
pushf
rcl
aad
es
dec
sub
sbb
push
daa
mov
jne
push
xchg
push
outsb
in
sub
mov
pop
sbb
jbe
in
adc
lahf
lods
push
and
adc
loope
sahf
pop
lds
mov
jecxz
test
lds
in
adc
hlt
arpl
jl
insl
push
lds
lods
pop
pop
test
push
les
jne
call
xchg
lahf
push
push
in
pop
mov
xchg
sahf
sub
out
push
repz
lock
pop
lods
mov
je
fsubs
adc
subl
stc
repz
sarb
cmp
sbb
or
xchg
add
dec
mov
jg
push
cs
dec
neg
dec
lea
xchg
daa
test
fidivrs
mov
or
and
ret
lods
and
xor
mov
scas
sbb
jno
call
cmp
and
imul
cmp
push
add
or
jge
mov
sti
adc
movsl
bound
aad
or
inc
adc
push
pop
push
mov
movsl
xor
jnp
mov
adc
cmp
sbb
xor
push
push
add
dec
cltd
div
mov
lret
inc
mov
mov
push
sbb
rcll
imull
adc
dec
sub
icebp
mov
cltd
rclb
cmp
js
sti
mov
loopne
push
pop
js
pop
jmp
jmp
shl
pop
sub
les
push
rclb
add
mov
rol
in
aaa
outsl
cmp
pop
cmp
jns
xorb
cmp
cmp
out
pop
aaa
pushf
and
movaps
mov
xor
ljmp
lea
push
xor
mov
mulb
or
es
adc
jge
ljmp
clc
add
in
std
and
movsb
push
ds
nop
add
lods
fcmove
in
lea
stc
fstpl
or
loopne
mov
adc
dec
cmp
bound
xchg
xor
pop
roll
mov
adc
insl
test
pushl
insb
ficomps
in
pop
int3
jl
cli
fisubrs
in
inc
xchg
push
mov
adc
mov
hlt
mov
sbb
repz
jnp
bound
mov
pop
dec
movl
movsb
popf
nopl
xchg
pop
test
jae
sbb
jnp
jbe
mov
insb
imul
hlt
push
mov
lods
outsl
or
mov
add
fsubs
das
pop
add
dec
cmp
dec
test
mov
ja
sub
cmpb
mov
add
dec
dec
jmp
ret
pop
jg
push
adc
ljmp
mov
rcll
mov
rorl
movsl
push
pop
pop
popa
dec
les
mov
adc
jmp
stos
aam
mov
adc
dec
adc
mov
jecxz
dec
pop
sbb
push
mov
daa
fimull
int
cmp
mov
push
inc
lcall
xor
or
jl
or
adc
xlat
scas
lds
cmp
mov
push
cmpsl
or
out
rclb
mov
pop
cltd
and
hlt
pop
test
jp
rcrb
fsubrs
notb
into
inc
jmp
xchg
mov
xor
sub
imull
bsr
and
pop
mov
popf
outsl
stos
mov
andb
gs
mov
mov
jp
lahf
testb
pop
ds
sbbb
jge
jecxz
or
or
push
jl
loope
mov
mov
out
fldcw
sbb
or
fsubrs
mov
sbb
into
push
mov
xorl
aas
mov
outsb
test
fisttpll
mov
aas
scas
adc
stos
xchg
jae
icebp
dec
mov
outsb
cmp
inc
jo
movsb
inc
in
and
inc
repz
pop
push
add
pop
cmp
mov
push
ret
inc
lret
lods
jmp
dec
mov
ljmp
lea
rcl
leave
rcrl
push
mov
add
rcrb
sbb
mov
xlat
pop
mov
in
mov
add
pusha
jae
jnp
addb
jbe
cmp
cmp
dec
inc
mov
test
in
repz
dec
fcoms
rclb
lcall
negl
push
incb
cli
daa
mov
cmpsb
shr
aas
dec
cmp
adc
je
xor
cmp
popa
push
std
mov
fisubl
out
cmc
loope
mov
sbb
add
scas
lea
inc
sbb
addl
cmpsb
pop
in
inc
outsb
mov
push
leave
push
push
fldenv
fwait
ds
pusha
sbb
cmc
mov
fsubr
jne
dec
and
inc
fdivp
cmp
jecxz
pop
xor
aaa
mov
sub
sarl
stc
daa
jae
xor
jp
mov
xor
out
nop
ljmp
xchg
pop
sbbb
sahf
repz
popa
out
inc
mov
mov
inc
data16
lret
int
mov
push
mov
mov
mov
xor
or
lahf
mov
and
pop
push
lcall
pop
lret
out
test
jb
sbb
repz
jle
into
inc
aam
scas
adc
stos
inc
lcall
xchg
dec
mov
imul
add
movsl
xchg
and
insl
jg
mov
adc
insl
inc
inc
out
ljmp
insb
pop
scas
adc
push
cs
add
test
inc
and
mov
lods
fcoml
or
mov
call
jecxz
pop
push
push
and
shl
mov
scas
jbe
pop
add
test
insl
mov
sub
out
test
dec
jae
xchg
sub
cmp
fldt
xlat
sti
or
addr16
inc
cltd
jmp
rol
sbb
rcrl
das
in
or
inc
mov
add
inc
fnstenv
outsb
in
push
imul
jl
push
clc
add
out
stc
jb
fldt
in
dec
xchg
aaa
dec
mov
push
lods
jnp
aaa
xor
xchg
mov
or
mov
jge
adc
cli
jmp
push
daa
lods
or
xchg
pusha
leave
dec
test
inc
cwtl
gs
mov
mov
adc
push
test
movsl
lahf
scas
pop
stc
ljmp
lret
mov
stos
fisttps
mov
jns
inc
cmpsl
sub
push
imul
lret
iret
dec
test
xchg
adc
mov
sub
dec
ret
je
mov
nop
mov
out
mov
rcl
sarb
mov
jne
leave
pop
sbb
mov
out
ficompl
shr
mov
pop
jmp
push
in
dec
mov
aam
jns
xchg
ds
xchg
add
cmp
lock
mov
dec
popf
hlt
push
lret
cmp
jae
nop
adc
inc
push
inc
add
sub
and
mov
das
xor
jmp
cmp
mov
fadd
rcrl
clc
aaa
shrl
sub
xchg
bound
int
sbb
je
pop
pop
aam
xor
mov
mov
lahf
add
lods
dec
sbb
pushf
cwtl
cmp
adc
testl
mov
cmpsl
cmpl
mov
movsb
lret
ret
loop
ds
iret
in
xor
in
ja
cmp
pop
mov
je
xor
sbb
mov
test
shll
aaa
mov
xor
pop
hlt
add
mov
stos
rcl
xlat
js
jmp
lret
sub
mov
popf
xor
push
adc
push
sub
out
mov
movsb
stos
jb
sar
mov
ljmp
jge
icebp
pop
sub
std
leave
sti
sub
cmc
add
fiaddl
jg
dec
push
pusha
xor
out
test
push
and
mov
lock
sub
cmp
ja
dec
imul
push
inc
or
rorl
add
insb
in
xor
add
jo
ret
jecxz
loope
xchg
shl
loop
orb
daa
lret
jp
inc
dec
cmp
mov
shll
jo
sbb
xchg
or
xlat
nop
push
push
push
jecxz
mov
test
sbb
jne
stos
sbb
mov
inc
mov
jp
or
pop
pushw
cmp
notl
ficomps
or
cmp
push
fcmovbe
inc
loope
mov
jb
inc
lcall
xorb
and
jo
imul
iret
or
scas
inc
lea
rcrl
fcmovnbe
cmp
and
pop
cmc
insb
jg
popf
jecxz
aam
ret
or
push
js
out
sahf
inc
daa
inc
cltd
sahf
mov
clc
and
push
stos
push
stos
dec
or
push
add
inc
push
clc
inc
call
mov
movsl
les
and
sahf
out
jnp
out
mov
rcr
fs
pop
push
daa
jmp
insb
lods
loope
sbb
jno
push
mov
mov
dec
iret
xchg
fimuls
addr16
push
lods
out
call
pop
push
push
dec
dec
pop
sahf
fmull
jns
repz
xor
add
ja
xchg
xchg
pop
xorb
adc
or
lods
xor
add
insb
dec
dec
dec
cmp
xchg
fwait
xor
cmpsl
addr16
cld
outsl
xchg
sti
jnp
xor
and
dec
adc
mov
decb
jmp
pop
outsl
cmpsl
out
push
jmp
add
hlt
fwait
sbb
sub
ja
stos
repz
mov
add
js
sbb
xchg
sub
add
add
pop
arpl
inc
sub
lcall
xchg
push
push
cmp
les
xor
out
jb
mov
mov
sbb
pop
sub
bound
mov
sti
divl
iret
mov
cmp
and
jge
xor
movb
dec
mov
insb
jb
mov
pop
shll
movsb
subl
pushf
cmpsl
pop
in
cmp
js
pop
xchg
push
or
sbb
dec
ds
enter
pop
adc
add
xor
fisubrl
push
repz
jae
adc
sbb
sub
jb
lcall
xchg
xchg
aam
es
inc
repnz
mov
ja
out
jp
fs
jae
in
jecxz
enter
insb
cld
out
lret
dec
xchg
or
std
push
rorb
cmp
sbb
push
pusha
mov
jge
inc
scas
jne
nop
lock
mov
or
pop
mov
push
sbb
mov
xchg
mov
pop
lret
push
insb
lahf
jns
lret
xchg
bound
arpl
mov
adc
xchg
loop
mov
xor
in
push
outsb
lds
xchg
pop
dec
clc
xchg
cmc
sbb
stos
add
mov
loop
jb
inc
jno
xchg
aad
out
fdivs
mov
in
mov
adc
lea
mov
push
repnz
dec
dec
sarb
inc
mov
stos
pop
add
mov
dec
push
push
xor
sarl
mov
sub
fldt
dec
and
xchg
in
lods
popa
aas
sub
ljmp
jmp
stos
adc
shlb
adc
lret
das
xchg
sbb
out
int3
cmp
jl
out
mov
ljmp
add
jmp
lcall
cmp
cs
xorb
xchg
cwtl
popf
cmp
pop
mov
movsl
lock
in
add
pop
add
pop
mov
nop
sbb
xlat
mov
mov
adc
adc
or
cmp
adc
xchg
daa
sbb
mov
sbb
and
xchg
pop
jmp
mov
adc
xchg
adc
les
jne
adc
pop
and
in
outsb
leave
stc
repz
push
add
xorl
sbb
jmp
lret
and
les
mov
adc
cltd
mov
mov
jbe
imul
add
fsubrs
out
test
inc
mov
lret
gs
je
les
push
adc
mov
push
cmp
int
movsl
stos
sbb
xchg
sbb
jb
nop
icebp
xchg
mov
hlt
mov
ret
popf
adc
cli
dec
movsl
dec
xorl
daa
les
add
xchg
sbb
jl
adc
add
pop
icebp
fsubl
pushf
iret
cmpl
cmp
out
imul
push
add
cld
lahf
scas
mov
je
stos
pop
push
das
sbb
icebp
js
xchg
add
mov
in
mov
add
mov
daa
ret
mov
inc
xchg
test
aas
sub
popa
mov
es
jle
popf
add
cmp
stos
orl
mov
cmpsl
sbb
inc
jle
cmp
rorl
cltd
cmpb
out
sbb
aad
fs
or
jae
xchg
enter
stos
test
mov
xchg
push
mov
rclb
lret
ret
jp
pop
mov
and
xchg
lret
jp
popf
xor
xchg
xorb
mov
or
cmpsl
sub
dec
mov
gs
mov
add
sub
jo
inc
rol
cmc
jge
shl
orl
mov
cmpsb
cmp
xorl
in
popf
loopw
sbb
int
bound
jg
jno
pop
imul
int3
push
outsb
repnz
sti
cmp
or
and
push
je
cmpsl
push
and
push
sarb
mov
pusha
jo
ret
fidivl
inc
xor
repnz
pop
cmpsb
repz
jno
sub
push
push
mov
dec
test
loopne
add
sbb
js
mov
jb
popf
jmp
inc
or
add
mov
pop
cmp
xchg
or
pop
push
push
fnsave
mov
dec
sub
test
enter
mov
bound
push
icebp
inc
sub
movsl
mov
jl
cmp
add
loopne
insb
inc
xor
pushl
nopl
adc
mov
in
jae
mov
gs
aad
pop
mov
rolb
dec
sbb
shrb
pop
sbb
and
and
jge
sahf
xchg
fisttps
aam
cmp
cmpsb
adc
mov
xchg
push
les
sbb
dec
nop
sti
dec
cmp
inc
dec
test
and
sbb
in
push
inc
add
lods
outsl
inc
loope
addr16
pop
orl
pop
test
ja
popf
adc
mov
push
stos
add
pop
xchg
ljmp
sub
fisubl
push
jp
lods
cwtl
pushl
ffree
inc
test
xchg
dec
cmc
xor
clc
mov
dec
mov
jno
cmp
jb
packuswb
aad
push
mov
iret
cmp
pop
mov
and
xchg
out
push
mov
repz
xchg
cmpsb
jae
int
push
xchg
sti
adc
xlat
clc
mov
dec
fisttpll
icebp
arpl
stos
in
jl
sub
inc
bound
jb
inc
lret
arpl
gs
in
cmp
sbb
push
outsl
inc
mov
jae
stos
cmp
insl
icebp
std
scas
jbe
fisubrl
xor
pop
gs
pop
fistl
mov
xchg
push
test
aaa
dec
or
test
add
dec
lahf
xlat
rcrb
jnp
ret
enter
cmpsb
jo
fxch
sub
std
pushf
mov
out
addr16
clc
xor
ficomps
cltd
out
adc
mov
and
pop
int3
lea
push
pop
and
fs
je
jmp
stos
cwtl
out
xchg
testb
pushf
rcl
dec
mov
xchg
cld
sarb
jg
xchg
push
mov
test
pop
and
lahf
add
hlt
jecxz
out
cmp
push
rolb
mov
lcall
sbb
push
stos
stos
sbb
iret
mov
jle
fists
pop
mov
dec
mov
cmpsl
and
pushf
or
insl
fldl
rorb
arpl
inc
call
in
add
mov
int
lods
fistpl
mov
dec
sti
xchg
fldcw
add
push
test
dec
add
aad
dec
or
vmread
stos
in
jecxz
adc
leave
in
aas
adc
mov
les
pop
inc
gs
mov
dec
jb
mov
inc
pop
leave
icebp
icebp
loopne
mov
mov
jne
add
sub
push
add
and
loope
ret
jmp
jbe
addr16
adc
cwtl
xor
test
int
cltd
jl
inc
adc
stc
inc
jp
dec
dec
mov
cs
sbb
xor
cmc
popa
mov
mov
andb
in
mov
subl
call
insl
mov
data16
mov
cmp
dec
shrb
adc
mov
in
sub
shrb
not
add
xor
xor
shll
pop
popa
int
push
push
mov
fnstcw
fisubrs
xchg
mov
mov
or
mov
repz
push
pop
mov
mov
call
in
lcall
adc
pop
sarb
add
lret
push
mov
push
in
std
mov
sbb
inc
inc
pop
js
out
pop
sub
lods
insl
sbb
idivb
cmpsb
sbb
mov
subl
repnz
mov
arpl
jns
pusha
mov
sbb
shll
repnz
cmc
pop
and
adc
cmp
pushf
pop
stc
push
cmp
jmp
jno
adc
nop
push
lcall
mov
cmpsb
push
ret
and
adc
les
aad
push
push
pusha
shrl
imul
je
cmp
loope
mov
roll
cwtl
sbb
cltd
test
icebp
aam
movsl
outsb
adc
pop
sub
sbb
sub
mov
ret
imulb
and
inc
mov
in
lds
or
out
mov
cmp
cmp
cmp
ljmp
fcomip
push
cmp
push
rorl
dec
js
aaa
bound
ror
add
fsts
gs
out
xchg
gs
fndisi(8087
mov
mov
repnz
stc
sub
aam
popa
cld
mov
adc
pop
jl
jns
ja
xor
mov
adc
xchg
negl
das
dec
adc
sbb
xor
jg
add
mov
jp
fs
shr
xlat
cmpsb
pop
sub
jge
ljmp
add
negb
sbb
mov
push
xchg
ficoml
fnstcw
in
test
mov
ficompl
sub
push
clc
add
jl
mov
leave
add
stos
sbb
jl
in
pop
sbb
mov
jmp
adc
push
jge
mov
cltd
add
cmp
jp
iret
cmp
in
std
add
sbb
in
add
fsubrp
mov
sarb
aas
in
xchg
dec
idiv
js
lahf
pop
inc
adc
pop
outsl
aam
shlb
shrb
mov
into
imul
sub
out
aaa
lock
clc
or
sbb
xor
mov
cli
jnp
jge
pop
adc
dec
pop
lea
cmc
mov
decl
scas
cwtl
or
fwait
movsb
lret
pop
hlt
imul
cltd
aas
arpl
xchg
inc
jl
lahf
ds
out
stos
movsb
adc
insl
inc
div
insl
subl
adc
lahf
es
in
dec
mov
das
out
addl
jne
das
xchg
outsb
xor
jge
nop
jns
scas
insb
add
dec
movsb
adc
mov
push
mov
iret
sbb
into
xchg
push
aas
xchg
mov
jp
in
mov
push
leave
bound
add
mov
enter
pushf
push
push
xchg
xchg
mov
iret
les
outsb
test
mov
jb
iret
jle
sbb
mov
test
es
pop
jge
popf
into
jne
add
mov
xor
cltd
shl
mov
insb
add
mov
pop
hlt
push
mov
hlt
sahf
lret
push
lret
xchg
inc
lahf
push
mov
inc
add
aam
test
stc
dec
movsb
mov
shll
je
and
lds
aam
pusha
daa
sbb
stc
je
jbe
fdivrs
and
popf
popw
push
cmpsb
fisttps
jge
and
sub
sbb
cmc
push
jnp
shll
mov
xlat
xchg
adc
and
lcall
mov
ja
adc
cmp
mov
cmp
add
pop
inc
jb
por
fadd
push
es
icebp
dec
cmp
jmp
in
push
insl
xchg
adc
adc
test
pusha
scas
call
dec
loope
fsubl
cld
xlat
bound
push
mov
mov
mov
inc
es
mov
jb
arpl
and
lock
mov
sub
cmp
das
push
or
add
hlt
push
out
test
sub
rcr
or
pop
les
lds
mov
nop
popa
xchg
scas
cmp
mov
mov
jae
mov
push
xor
clc
or
cmp
in
jp
adc
sbb
add
leave
jle
fisubs
dec
aas
loope
jmp
shll
cmpsl
nop
push
f2xm1
aam
aaa
dec
jae
sub
ret
mov
enter
add
sub
xor
es
mov
jb
clc
cmp
add
cmp
cmp
inc
into
dec
mov
or
pop
cmp
fstps
mov
insl
clc
das
ret
dec
pop
data16
cmpsl
mov
mov
shlb
shl
lds
inc
dec
cmp
inc
and
fs
mov
jle
lahf
popf
sub
adc
dec
popf
aaa
or
mov
dec
in
jae
daa
dec
sti
icebp
xor
or
and
push
test
aam
loope
arpl
push
fs
loop
xor
cmc
cmpsb
mov
inc
mov
movsl
cwtl
jg
mov
aam
and
inc
adc
mov
or
inc
mov
ficoms
push
push
ss
orb
sbb
mov
popf
clc
push
pop
add
outsl
arpl
arpl
sub
lea
sahf
cmpsb
mov
mov
xchg
sahf
sbb
out
adc
movsl
push
adc
and
push
scas
push
ja
out
shll
imul
adc
ss
dec
adc
lds
ficoms
jmp
mov
push
sub
mov
dec
imul
imulb
stc
popf
jmp
jmp
xchg
test
fwait
stos
aaa
jne
mov
xchg
mov
test
sbbb
add
mov
clc
xchg
shrb
movsl
dec
cmp
mov
mov
dec
inc
pop
subb
jl
xor
shl
insl
pop
cmp
lods
dec
xchg
test
ljmp
and
cwtl
in
imul
int3
xorl
push
int3
push
mov
xchg
xor
insb
dec
ljmp
mov
filds
jg
jo
mov
es
in
out
out
imul
mov
mov
mov
test
xor
or
cmp
mov
ljmp
jae
stos
shll
data16
inc
call
mov
xlat
jns
push
pop
push
and
adc
lret
icebp
push
sbb
adc
dec
ja
pop
sti
xor
mov
add
dec
fldt
data16
out
push
cmp
adc
lods
pop
cmp
fidivs
jl
dec
divl
jp
xor
int3
fnsave
sbb
mov
pop
mov
out
je
or
mov
cmp
leave
scas
data16
lret
out
xchg
fs
cmp
sub
or
xchg
repz
ss
dec
xor
adc
lock
adc
mov
and
ja
test
jle
outsl
stos
add
cmp
divb
pushf
sbb
fwait
push
cmp
dec
mov
cltd
push
popa
pop
pop
insl
cmp
mov
mov
xor
fdivrl
je
adc
pop
xchg
dec
enter
inc
xchg
ss
scas
mov
repnz
jno
movsl
iret
cli
iret
push
lcall
pop
cmp
lret
cltd
cmp
cld
push
xchg
movsl
imul
mov
cmp
testl
arpl
aaa
cld
stos
rcl
ja
arpl
mov
dec
pop
mov
or
jmp
push
in
call
gs
enter
pop
inc
stc
jl
mov
xor
mov
jnp
sti
out
pop
clc
push
lock
add
cmp
mov
mov
or
pop
xorb
inc
iret
jmp
fucomp
outsl
lret
push
mov
cld
pop
call
mov
fisubs
lcall
stos
push
lret
pop
sub
xchg
push
fmull
out
das
test
inc
cld
outsb
jo
shll
mov
sahf
dec
or
fwait
mov
mov
jecxz
out
cli
sub
or
nop
aad
roll
sar
sbb
pop
repz
pop
push
add
loop
lods
cmp
push
sbb
xchg
fcoms
dec
or
xlat
pop
pop
jl
das
jns
stc
or
dec
negl
hlt
cli
out
int3
jno
repnz
lret
dec
rclb
xchg
and
pop
pushf
jnp
fmuls
push
pop
insl
xchg
movsb
sub
lds
ret
test
cwtl
iret
xchg
mov
popf
add
loop
sub
sbb
lret
jmp
aam
cmp
or
xchg
xor
xchg
pushl
xor
sbb
inc
hlt
mov
and
fsubs
addr16
daa
stc
pop
js
loope
sarb
es
test
push
sarl
mov
pop
add
lods
cmp
iret
out
sbb
sbb
or
fwait
lock
push
stc
jg
fimuls
jle
dec
mov
mov
push
nop
imul
push
cltd
push
push
cltd
lcall
loope
cwtl
cmp
out
out
and
in
xchg
xchg
daa
inc
inc
arpl
inc
leave
add
das
iret
fisubs
les
inc
jle
ret
adc
jl
out
ljmp
inc
and
pop
mov
mov
dec
inc
ss
add
add
call
aaa
lods
inc
sbb
mov
bound
or
lds
xor
cmpsb
xor
adc
in
push
lcall
jns
cld
pop
in
jp
and
pop
cmc
stc
push
push
dec
aas
out
imul
or
xor
mov
mov
dec
mov
aad
sub
stc
xor
imul
mov
lahf
jl
jp
mov
mov
hlt
pop
dec
imul
popf
push
lds
inc
sub
lcall
aaa
shrb
sub
jo
cmp
lods
push
push
xchg
add
sbb
popf
shl
jns
int3
ffree
aas
cltd
jle
lods
push
xchg
in
jmp
push
nop
pop
mov
pop
cmpsl
pavgb
xchg
cmpsl
imul
out
imul
jb
int
mov
idiv
mov
pusha
repz
je
inc
roll
lea
out
stc
cmp
gs
pop
or
pop
pusha
int3
jle
loope
ret
mov
jb
mov
adc
push
cs
add
sahf
mov
mov
jne
les
push
shl
mov
xor
icebp
and
mov
pushl
mov
push
pop
mov
dec
std
xchg
lret
mov
xor
clc
jbe
daa
lahf
adc
ror
sbb
add
insb
mov
xor
add
add
jnp
lret
dec
add
pop
jecxz
mov
adc
frstor
jl
mov
jae
or
adc
jne
push
jb
dec
push
xor
aas
dec
xor
out
lds
add
pop
pop
push
aaa
cs
xchg
mov
inc
stc
xor
pop
inc
stc
mov
nop
fistps
add
inc
inc
call
loope
or
push
push
es
fxch
push
ror
adc
inc
aam
orb
cmpsl
jp
xor
mov
sbbl
dec
daa
outsb
inc
sbb
jno
adc
sbb
mov
fdivrs
cmp
test
add
jns
rcll
lods
out
lds
ret
dec
mov
jae
and
imul
fidivs
pop
iret
fstpl
pop
pusha
jle
mov
sbb
xchg
outsb
or
add
in
inc
mov
jne
add
dec
xor
sahf
imul
out
out
sub
mov
xchg
outsl
jp
inc
sbb
scas
xchg
mov
movsl
mov
loope
adc
add
imul
fwait
in
je
in
enter
mov
mov
in
fsts
arpl
out
or
inc
ljmp
in
leave
test
adc
stc
ja
jnp
notb
xchg
cmp
aaa
push
mov
pop
out
and
add
xchg
aas
insb
icebp
jp
cwtl
test
nop
lcall
out
mov
mov
and
fmull
cmc
aaa
cmp
cmpsb
lea
add
movsb
xor
jo
les
in
xor
and
sub
mov
sbb
pop
mov
imul
jne
loopne
inc
add
inc
dec
test
and
add
ljmp
pop
lock
adc
pop
lea
sahf
sub
push
add
pusha
fistpl
inc
repnz
jne
add
sub
mov
fidivrs
pop
xor
push
dec
mov
add
sahf
push
incl
xchg
xlat
pop
int
les
insb
xor
xor
push
add
loop
dec
clc
or
jbe
into
movsl
arpl
push
xor
xlat
sbb
cwtl
test
mov
movsb
cld
and
or
aad
inc
rclb
pop
sub
test
push
rcrb
xor
push
sbb
fiaddl
dec
shll
movsl
in
push
jge
repnz
pop
jb
je
pop
dec
sub
mov
test
adc
cltd
dec
nopw
ret
notl
sbb
arpl
shr
notb
mov
popf
movl
mov
mov
add
mov
mov
sbb
jecxz
lds
xor
push
pop
iret
and
mov
fldcw
push
lret
cmpsl
arpl
mov
scas
ljmp
xor
dec
jno
lret
nop
pop
adc
mov
int3
add
imul
shll
call
add
xchg
xlat
movsb
inc
push
sbb
into
inc
je
xor
js
pop
lea
testl
pushl
push
jmp
add
sbb
hlt
clc
mov
or
jp
adc
mov
fsubs
in
and
into
lods
pop
cmp
aaa
fs
adcl
and
add
and
add
stc
push
loopne
lea
outsl
shll
mov
xchg
in
lcall
aaa
adc
aas
sub
out
movsb
xchg
dec
arpl
cmp
sbb
or
lock
mov
mov
inc
cwtl
js
push
aad
mov
pop
cwtl
js
mov
clc
inc
mov
out
jno
pop
fs
rcrl
dec
pop
push
mov
das
push
sbb
pushf
nop
xor
adc
cld
mov
int
cmpsb
xchg
outsl
push
mov
pop
mov
dec
repnz
out
enter
jmp
cmp
mov
ds
scas
pop
sbb
adc
repz
ret
jge
or
repnz
in
xchg
xchg
or
xchg
sub
insb
imul
xor
and
iret
call
inc
nop
push
mov
loope
pop
into
test
jmp
jmp
xchg
push
dec
dec
push
mov
cmp
leave
rcrb
jg
aas
xchg
loopne
das
mov
jl
insb
jmp
ret
lods
jmp
js
xor
push
insb
pop
lds
add
insb
inc
mov
int3
loop
mov
loop
xor
xlat
adc
insl
leave
fistpl
mov
call
sbb
dec
inc
push
andps
test
sub
jns
test
js
and
dec
popa
mov
or
sub
push
sti
jle
pushf
lret
dec
andl
shrl
add
dec
icebp
repz
xchg
xchg
inc
popa
lods
dec
dec
aam
cmp
xchg
lahf
pop
clc
mov
std
jmp
jbe
lret
xchg
sub
add
sbb
pop
dec
jnp
or
ds
mov
mov
sbb
mulb
add
add
cmp
in
scas
inc
sbb
mov
filds
pause
test
je
leave
bound
addr16
mov
mov
mov
aad
dec
rcrl
push
sahf
mov
add
ljmp
popf
popf
and
movsb
lods
aaa
movsl
fstps
std
shlb
mov
scas
int
mov
sbb
or
cmp
xchg
cmc
imul
pop
mov
push
jns
mov
out
dec
xlat
rcrb
mov
xor
cmp
cmp
mov
jle
daa
fadds
rclb
rorl
sbb
xchg
test
cld
jne
mov
pop
popf
mov
outsl
sub
inc
ds
dec
imul
lret
push
mov
push
push
or
jg
xor
aas
dec
jo
sbb
pop
xlat
mov
aaa
imul
test
insl
dec
in
cltd
mull
pop
dec
mov
and
mov
cmp
pcmpgtb
and
mov
mov
mov
lods
mov
inc
pop
and
scas
repz
fcmove
les
mov
mov
testb
xchg
mov
sub
pop
adc
adc
or
lcall
movsb
ljmp
pushl
sub
mov
mov
popf
or
icebp
mov
mov
dec
mov
cld
mov
jecxz
ds
fyl2xp1
nop
outsb
mov
pop
jo
cmp
cwtl
cmpsl
and
pop
ds
pusha
sub
pop
mov
ret
mov
xchg
test
cmp
int
xorl
mov
or
adc
xchg
enter
ret
in
mov
push
shrl
xchg
les
and
les
loopne
in
sbb
jecxz
or
add
out
mov
inc
sub
push
push
cmpsl
cmp
shlb
pop
dec
mov
inc
andb
jle
and
jns
clc
loop
xchg
int
aam
and
ret
popl
clc
sub
push
repnz
pop
or
daa
in
scas
sbb
test
mov
cmpsb
mov
xchg
shll
push
add
mov
mov
int3
ljmp
loopne
push
inc
test
fsubr
sub
fwait
add
dec
jg
mov
adc
sti
scas
mov
rcrl
lret
fadd
dec
jp
out
jne
push
daa
jae
jg
cmpb
pop
out
lcall
cmc
movsl
mov
daa
insl
shr
add
aad
into
dec
or
push
nop
push
push
mov
adc
inc
mov
push
xchg
idivl
pushf
out
mov
jo
fistps
call
cmc
mov
mov
js
test
add
cmp
dec
jl
xchg
fbstp
mov
js
into
cli
outsl
das
pop
jg
data16
faddl
jge
in
out
dec
dec
ror
mov
fadds
es
mov
mov
jl
xchg
call
in
dec
icebp
mov
jnp
imul
mov
adc
mov
nop
out
ficompl
push
pop
inc
jnp
test
xor
jb
fistpll
mov
jb
pusha
mull
mov
int3
ficoms
movsb
xchg
and
dec
jnp
push
call
mov
jb
pop
rcll
xchg
insb
inc
cmpsl
in
sti
in
push
xor
movsb
xorl
bound
mov
pop
dec
sbb
cwtl
ss
mov
adc
das
stos
xchg
movsl
addr16
lods
in
jns
roll
add
negb
lock
mov
mov
dec
and
ljmp
outsl
push
icebp
test
scas
mov
arpl
add
mov
xor
mov
and
enter
sub
ret
sbb
push
repnz
dec
push
cmp
fadd
pop
pop
push
add
dec
leave
insb
sub
negl
lret
je
adcl
jno
pop
xlat
adc
xor
add
aas
cli
push
xchg
cmpb
sbb
popl
xchg
sub
sub
lock
cmp
fwait
add
test
xchg
or
xchg
mov
pop
or
hlt
jo
mov
cli
cmp
inc
jl
inc
repz
inc
lea
jno
jp
mov
mov
test
xchg
push
jne
nop
sub
stc
outsl
out
xlat
push
mov
rcll
outsb
or
and
xor
dec
inc
in
or
inc
jnp
cmp
lock
mov
push
popf
test
fldcw
push
mov
repnz
lds
inc
push
add
lret
hlt
cmpsl
test
sahf
lahf
inc
cmp
outsl
adc
sbb
mov
push
hlt
incl
jb
lods
int
lea
sahf
pop
jge
or
shrl
inc
xlat
pop
cmp
in
mov
test
movb
xor
cld
or
lcall
pusha
mov
add
mov
sub
push
rcll
mov
aaa
out
mov
into
add
addr16
call
dec
movsl
dec
in
cmp
dec
xlat
or
aam
xchg
mov
jo
insb
jb
sti
outsl
mov
sub
xor
arpl
cmpb
and
pop
outsl
gs
and
aas
andl
movsl
xchg
and
pop
sar
add
cmp
and
inc
cmpsl
xchg
sub
push
push
inc
rol
and
inc
in
out
adc
decl
pop
xor
pop
xchg
ds
jae
test
sbb
nop
lods
cmp
lods
ja
inc
xchg
mov
lret
in
dec
out
in
jge
cltd
sub
rcrl
loop
and
jmp
mov
push
call
repnz
xchg
sarb
and
sti
xchg
mov
rclb
cmp
outsb
lea
mov
aad
cs
xlat
ja
mov
jl
mov
cmpsl
sbb
sti
push
out
mov
test
adc
adc
addb
cmp
test
loop
es
testl
cmovl
roll
int3
test
mov
jae
fldcw
aas
pop
xchg
push
cmpsl
jns
out
cmp
sbb
or
xor
movsl
pop
sub
and
adc
out
push
mov
mov
mov
faddl
stos
sar
mov
mov
ds
pop
movsl
sub
nop
or
jmp
insb
mov
jmp
cmp
lahf
mov
xchg
and
leave
pop
popa
inc
push
and
push
pop
jg
jno
cmp
nop
enter
loopne
mov
pop
mov
xor
lahf
popf
push
ljmp
push
dec
out
fldt
pop
mov
mov
stos
jo
les
mov
lcall
lds
cmp
sbb
xor
fmull
inc
or
punpcklbw
jmpw
xchg
adc
mov
mov
dec
ljmp
push
jno
bound
in
cmp
jno
bound
enter
psrlq
testb
mov
and
movsl
and
into
add
or
sarl
cli
hlt
fcompl
and
stos
jb
in
inc
xchg
dec
sbb
andb
and
sub
jecxz
mov
xor
jl
pushf
daa
stos
adc
testb
mov
mov
scas
xchg
imul
mov
adc
fwait
jb
push
cld
arpl
inc
jb
repnz
repnz
push
cmp
xchg
mov
push
mov
inc
data16
push
inc
lret
inc
inc
adc
fs
xchg
andb
sahf
mov
test
mov
shlb
mov
shl
aam
push
push
sbb
pop
cli
fwait
inc
insb
ffree
gs
cmc
mov
mov
int
mov
imul
mov
in
test
test
rcll
mov
and
dec
jecxz
inc
pusha
cmc
jb
fidivs
xor
mov
cmp
es
lock
dec
mull
icebp
push
addl
adc
mov
and
dec
pop
jae
idivb
mov
aad
jns,pt
outsb
adcb
pop
incl
fsubl
clc
mov
mov
loop
mov
push
mov
dec
jmp
or
mov
xchg
mov
hlt
mov
pop
fdivrs
xchg
test
js
mov
sub
sbb
inc
and
pop
pop
add
sub
roll
mov
scas
cmp
cmpsl
rorb
rcr
dec
stos
fistpll
into
pushf
stc
out
out
mov
imul
lret
sti
stc
xor
shlb
mov
jo
dec
inc
popl
dec
push
or
pop
test
fisttps
fcomi
mov
bound
push
cli
sub
lock
cmpsb
mov
rcr
mov
mov
xchg
mov
adc
dec
scas
cmc
insl
inc
push
in
mov
jno
cmpsl
imul
xor
add
pop
dec
and
cmpsl
mov
mov
arpl
mov
push
jae
je
test
lret
leave
ss
fnstenv
pop
xchg
sbb
aam
or
or
xor
loop
insl
add
mov
in
mov
xchg
mov
push
push
pop
aas
stc
jecxz
out
sub
imul
xchg
adc
sti
sub
lcall
sub
movsl
add
jecxz
sbb
inc
jns
cli
jp
mov
bound
repz
int3
adc
inc
out
jmp
loope
adc
out
push
lahf
dec
arpl
rcll
and
inc
jo
movsl
insb
sbb
pop
in
lahf
outsl
daa
dec
in
mov
cltd
shlb
sbb
out
cmp
xchg
in
xor
les
imul
dec
push
inc
icebp
jae
shlb
push
pop
jae
fwait
arpl
leave
jmp
push
ret
enter
pop
stc
inc
outsb
xor
dec
ljmp
push
dec
faddp
fldcw
fwait
add
pusha
in
adc
inc
inc
push
sub
jmp
add
outsb
xchg
push
js
scas
mov
stc
loopne
lahf
mov
jg
ret
das
push
cli
xchg
rcll
add
inc
repz
lods
xor
mov
adc
jp
xchg
in
imul
arpl
and
adc
fistl
fsts
divb
push
sahf
std
mov
pop
int3
mov
xchg
mov
jp
jo
or
test
insl
in
adc
pop
imul
push
mov
sub
jl
lret
cmc
dec
jg
mov
stc
int3
sbb
push
dec
sub
call
pushf
shrl
pop
mov
popf
xchg
inc
stos
insl
sbbl
lea
div
subl
fstps
jbe
jle
jnp
dec
dec
rol
xor
adc
xchg
mov
jg
bound
mov
ret
sbb
jnp
cmp
dec
clc
jmp
inc
sub
pop
stc
mov
ja
outsl
mov
loopne
cld
testb
add
fimuls
cmp
jmp
movl
or
cmpsl
inc
or
arpl
out
ja
dec
insl
je
lret
or
and
into
sub
mov
pop
pop
sbb
xchg
dec
shll
add
dec
movsl
mov
out
jo
loope
rcr
dec
insb
loopne
out
daa
xchg
or
and
add
jecxz
addb
mov
imul
cmc
dec
repz
cmpsl
mov
out
adc
push
in
loope,pt
fidivs
cmpsl
and
scas
test
xchg
out
add
mov
nop
fsts
fsubrl
aaa
cmc
js
cmpsb
jo
in
jge
xor
mov
shl
sub
dec
or
arpl
pusha
add
xor
insb
out
not
ds
push
mov
xchg
pop
adc
push
mov
cs
nop
pop
loopne
cmp
adc
inc
adc
insl
mov
popa
lcall
push
inc
dec
jb
dec
fcompl
aad
sbb
push
ret
push
sbb
fneni(8087
das
adc
stc
rcrl
clc
ret
cmp
push
cltd
sbb
mov
lahf
fnstsw
push
xor
xor
lods
cmc
fldenv
sub
hlt
fsubs
cmp
jne
mov
pop
lea
lods
pop
cltd
or
jno
jmp
pushf
jmp
jne
imull
inc
out
inc
ret
xorl
adc
jmp
ja
fsts
ret
cmc
jle
mov
push
lods
insb
imul
add
jecxz
jne
cmp
movsb
insl
pop
and
or
and
and
add
lcall
pop
pop
pop
xor
add
mov
sbb
dec
push
dec
bnd
es
mov
push
in
mov
push
out
ret
push
xchg
mov
mov
push
dec
or
pop
xor
xor
sub
repnz
in
popf
xchg
aad
mov
mov
mov
into
aaa
jmp
xchg
popf
lea
adc
xchg
inc
sbb
ss
mov
and
xor
mov
sbb
and
test
xor
cwtl
dec
sub
ret
movsl
sub
add
mov
and
mov
mov
and
mov
dec
flds
test
insl
pushl
ret
mov
xchg
jae
pushf
dec
stos
mov
inc
stos
cmp
roll
xchg
test
std
mov
ficomps
cmc
in
or
pop
jae
or
shlb
sbb
cmp
dec
inc
inc
lds
push
loop
sbb
aaa
xor
gs
leave
mov
mov
fnstenv
enter
out
fldt
insl
jmp
mov
fdiv
int3
out
mov
xchg
xor
rolb
jne
cmp
aad
xor
sbb
pop
pop
lock
push
mov
popf
pop
leave
movsl
sti
cmp
call
adcl
les
jo
das
inc
jae
cmc
xchg
add
adc
xchg
mov
xchg
inc
or
std
in
shrl
push
in
adc
xchg
lcall
sbbb
bound
inc
cmp
inc
mov
or
test
imul
lret
xlat
adc
dec
jecxz
jb
cld
pusha
ret
ret
repnz
test
out
mov
add
push
ret
rorb
outsl
sbb
popa
repnz
inc
sbb
xchg
in
into
push
lret
arpl
cli
stos
daa
cmp
jl
dec
adcl
clc
cmp
xor
mov
outsb
sti
mov
add
mov
push
and
inc
or
or
cmp
je
addr16
mov
dec
mov
push
sub
fucomp
mov
js
push
add
rcrl
lock
inc
pushf
cmpsl
out
inc
mov
cs
push
fists
mov
outsl
mul
sbb
mov
std
nop
testl
hlt
bound
int
gs
or
and
dec
xor
lcall
stos
popf
mov
lods
or
or
fmull
inc
mov
subb
jg
mov
lds
movsb
in
adc
mov
add
mov
pushf
jp
sahf
int
push
sbb
mov
cmp
sub
push
int
outsl
adc
es
fidivrs
xchg
bswap
jno
fsubr
jg
es
jo
jle
jle
or
popa
cs
sbb
jecxz
dec
mov
rorb
sub
popf
pop
pop
sub
addr16
mov
jbe
ds
scas
movsb
mov
adc
addl
pop
ror
mov
sarb
mov
inc
imul
das
les
dec
jmp
push
mov
mov
and
je
dec
cs
loopne
bound
xchg
sub
mov
push
pmulhw
and
mov
ljmp
es
cmp
sub
subb
gs
mov
sub
dec
sarb
cmpl
sbb
mov
sub
xor
cmp
pop
test
popa
mov
bound
mov
imul
test
daa
jmp
test
inc
jb
cmp
ds
pop
adc
rcl
shll
cmpsl
add
adc
lds
sbb
cmp
push
shlb
push
push
xor
pop
mov
shl
mov
xchg
push
add
add
in
mov
dec
dec
xor
cmp
stc
sbb
test
xchg
mov
popl
fcomp
inc
mov
call
xchg
and
xchg
mov
and
call
pop
and
je
ret
aas
push
inc
add
adcl
in
jbe
mul
nop
lcall
into
jb
xchg
hlt
sub
push
jo
mov
adc
push
sub
hlt
dec
push
or
or
fsubl
jmp
in
fadds
and
jge
xchg
or
scas
xor
mov
rorb
inc
mov
sub
lret
test
outsb
jmp
dec
pop
stos
cmp
movsl
inc
jmp
aas
cmp
adc
mov
loop
in
mov
inc
fs
stos
xorl
dec
nop
mov
cmp
fisubrs
nop
gs
xlat
xor
das
jne
jle
cld
fsubrs
hlt
mov
mov
dec
pop
out
mov
xchg
test
add
into
dec
loop
add
xchg
cmp
ja
cmp
mov
add
mov
pop
std
xchg
mov
pusha
add
mov
mov
cmp
pusha
sub
scas
mov
lretw
mov
loope
and
jno
call
or
jne
pop
lds
adc
sbb
repz
scas
mov
jne
mov
rorl
adc
enter
pop
outsl
shlb
cmp
inc
cmc
es
out
or
or
push
loopne
xchg
jmp
sbb
ret
mulb
or
insl
ret
dec
xchg
daa
test
jno
mov
xchg
shll
push
mov
inc
out
cmc
out
pop
or
jne
sbb
push
std
imul
test
pop
jae
pop
adc
cmc
call
pop
sub
xor
jb
jmp
sti
push
or
bound
sti
int3
js
arpl
fdivrl
stos
mov
loope
jns
and
sbb
rcrl
jmp
ret
icebp
xchg
mov
jl
bound
jmp
cwtl
jns
sub
dec
leave
lods
into
and
cli
xor
cmc
pop
pusha
fsubrp
sub
jle
pop
lcall
mov
xchg
push
scas
lods
jg
pusha
xchg
xor
jne
sbb
sub
das
aad
mov
mov
adc
xchg
and
sbb
jno
cmp
aaa
aad
pushf
bound
mov
movsl
shlb
jp
add
stc
pop
loop
cmp
mov
popa
cmp
jno
mov
pop
sub
sbb
sahf
insl
fwait
mov
push
shrl
jb
cmpb
outsl
mov
outsb
cmpsb
fisttps
push
mov
ret
aad
in
cs
xchg
mov
jmp
fisubl
push
and
cltd
addr16
mov
cmc
cmp
cmc
or
sub
adc
xchg
addl
xor
fwait
mov
dec
inc
js
popf
inc
fsts
mov
scas
and
push
fs
adc
mov
test
mov
roll
fwait
nop
xchg
incb
aam
pop
rolb
insb
mov
fwait
pop
enter
cmp
push
icebp
loopne
mov
add
ja
je
push
pop
xor
jmp
cmpb
lea
and
fidivl
ret
or
dec
xchg
lahf
sub
inc
jb
sti
ficompl
pushf
jb
divl
add
scas
add
sti
mov
xor
dec
aaa
je
push
aas
and
jnp
lahf
popa
test
mov
jg
sahf
sbbb
xor
int
mov
xchg
jno
mov
mov
out
mov
cmp
mov
aad
adc
jae
int3
daa
rolb
lea
stos
jmp
xchg
repnz
add
sarb
add
add
cld
js
cmpsl
pop
cmpsl
or
xorb
add
mov
imul
pavgb
cmc
xlat
lods
and
addr16
lcall
imul
ss
test
sub
mov
cmp
jae
mov
mov
gs
enter
inc
add
push
push
adc
jle
aas
pop
mov
inc
sti
push
notb
rcl
and
test
int
and
xchg
mov
int3
mov
add
jle
lret
xor
cmp
mov
and
or
ds
and
dec
je
ret
xchg
or
das
mov
repz
push
xchg
adc
lret
bound
fstl
fnsave
les
lret
mov
xor
loop
xchg
test
xchg
xor
cltd
pop
xor
mov
pop
push
inc
rcl
insb
out
cmp
insb
ror
inc
insb
repnz
cs
test
data16
xor
repz
loopne
or
scas
inc
mov
xchg
out
fcomps
xchg
in
mov
pop
pop
je
mov
es
iret
cmp
xchg
std
ljmpw
and
mov
imul
scas
sti
jae
shrb
sahf
adc
mov
sub
pop
fisubs
cmp
mov
xor
je
dec
popf
or
cmpsb
aaa
mov
cld
addr16
hlt
cmp
inc
out
sbb
mov
dec
mov
cmpb
cmc
stos
out
add
mov
mov
in
add
jo
insl
rcl
lods
push
icebp
dec
or
fwait
pop
push
iret
mov
jge
add
dec
test
jno
in
in
add
aam
ljmp
leave
hlt
cmp
divb
mov
je
jp
repz
ret
add
sbb
add
cwtl
out
xacquire
rep
sub
sbb
mov
jmp
cmp
mov
xchg
iret
popf
jmp
int
fisttpll
jl
movsl
aaa
xchg
pop
push
inc
push
out
inc
push
rorl
and
pop
and
push
mov
add
in
int
mov
outsb
mov
mov
mov
scas
cmp
sbb
aam
pop
mov
and
fmuls
into
mov
cmc
loop
inc
lea
dec
insb
ja
insb
in
pushf
inc
insl
pop
repnz
cmpsw
mov
sbb
and
pop
xchg
sub
dec
xor
jo
out
jmp
jo
fndisi(8087
imul
or
fucom
setg
repnz
pop
mov
mov
out
mov
pusha
push
aaa
and
es
push
jl
out
cmp
sbb
mov
xlat
int
outsl
stos
enter
sub
cmp
push
shrl
sub
repnz
loope
push
sbb
out
inc
push
or
fldl
jns
xlat
jae
adc
sbb
pop
inc
movsl
pop
pop
xchg
and
test
scas
dec
int3
in
inc
out
test
out
jb
dec
call
stos
jge
push
int
inc
cmpsl
jns
lret
dec
jmp
into
jo
imul
cmp
lds
dec
les
into
insl
loope
pusha
bound
mov
mov
ret
adc
in
cmp
pushf
cmpsl
test
dec
sub
sub
sbbb
fdivs
pop
sub
and
test
sub
adc
ret
lret
xchg
in
rcll
cmp
inc
mov
lcall
add
sub
pop
orl
xlat
mov
loop
xorl
pop
mov
loop
and
imul
xor
mov
cmc
dec
fisttpll
add
pop
lcall
push
mov
rcr
ds
shlb
push
lret
inc
push
stos
enter
test
stos
pop
mov
mov
mov
idivb
test
insb
pop
sbb
pushf
sbb
movsl
mov
dec
inc
movsb
jo
mov
push
jecxz
faddp
js
lret
push
out
lods
inc
aas
xchg
outsb
pop
shrb
mov
cmc
rcl
stos
js
inc
roll
sbb
pushl
cmp
push
lret
addr16
mov
cmp
ss
popf
jns
in
pop
scas
popf
push
mov
mov
sbb
test
fsub
mov
sub
pop
loope
pop
out
adc
jne
les
iret
call
mov
jnp
sbb
mov
bnd
xor
out
ficomps
sub
gs
sbb
ja
jo
lock
rorl
fstpl
imul
outsl
add
pop
aad
sub
pop
outsb
das
rcll
inc
andb
add
mov
mov
xor
ret
cmp
orl
mov
loope
adc
add
aaa
cmpl
jmp
test
out
adc
push
mov
cmp
mov
inc
or
mov
lea
fidivs
add
jb
sbb
inc
mov
mov
out
add
lahf
fsubrs
and
fwait
xor
sub
hlt
fbld
xchg
leave
out
stc
mov
ds
or
frstor
sub
and
mov
push
fwait
cmp
bound
mov
push
sarb
dec
jle
sub
call
jnp
cltd
mov
mov
inc
adc
in
js
xor
and
nop
ret
ljmp
adc
or
sti
push
push
inc
sub
insb
leave
adc
and
mov
pop
lock
lret
sahf
add
stos
xchg
repz
cmc
or
ljmp
mov
and
pop
jmp
dec
lea
movsb
loopne
or
push
xchg
enter
clc
idivb
lods
fcompl
cmc
add
xor
mov
scas
mov
jl
xchg
cltd
jecxz
xor
push
sbb
xchg
fwait
mov
repnz
add
repz
add
push
sarl
or
les
adc
or
insl
push
mov
aaa
inc
push
test
pop
jae
testl
and
mov
sub
push
and
pop
push
xor
fwait
adc
xlat
dec
cmp
pop
and
mov
dec
test
clc
pop
and
dec
push
stos
pop
es
cmpsl
insb
out
into
push
jns
xor
in
mov
jmp
mov
mov
xchg
pop
out
xor
xchg
xor
jnp
enter
or
cmp
sarb
cwtl
or
clc
je
sub
mov
push
testl
cli
js
jae
hlt
iret
jae
fidivrl
je
and
pop
scas
sbb
lods
loopne
ret
jnp
stc
aam
xchg
aad
mov
loope
adc
mov
int
imul
push
clc
or
add
jae
sbb
push
stos
scas
xor
add
cltd
repz
cmpsb
pop
adc
mov
push
leave
mov
in
mov
or
push
jns
adc
shrb
jp
dec
xlat
lods
out
adc
dec
jns
pushf
push
inc
int3
cli
not
insl
jl
aam
dec
scas
and
shrb
pop
test
cltd
push
cltd
in
les
xor
cmc
ljmp
popf
mov
xor
stos
xor
shr
mov
sbb
push
push
mov
or
mov
push
adc
xchg
inc
lock
scas
dec
jns
pop
les
dec
or
sbb
or
or
jg
nop
ja
mov
jno
aas
xor
pop
je
cmp
fidivl
dec
jp
mov
imul
mov
cmp
insb
cmp
cmpl
pop
mov
xchg
dec
xor
clc
xchg
loop
mov
in
push
cmp
fwait
cmpsb
xorl
movsl
enter
inc
push
jo
scas
adc
data16
popa
ret
cmp
adc
xor
outsl
xor
and
jo
mov
out
inc
stos
cltd
push
mov
stos
test
repz
out
adc
and
daa
dec
shrb
cwtl
mov
inc
mov
and
xchg
fildl
ret
daa
in
mov
subl
lods
mov
pop
aad
stc
and
push
or
scas
jnp
inc
sarb
or
push
xor
ret
adc
pusha
insl
fwait
dec
mov
pusha
xor
xor
hlt
gs
sbb
gs
mov
outsb
lret
mov
lods
xchg
ret
xchg
mov
je
inc
into
addr16
roll
mov
jge
call
es
inc
loop
pop
inc
mov
xor
xor
adc
mov
dec
test
adc
adc
inc
push
cwtl
or
adc
xchg
ret
cltd
pop
sbb
mov
sub
mov
pop
ret
rcll
ja
mov
sbb
and
mov
in
mov
pop
shlb
mov
add
arpl
mov
pop
mov
js
leave
mov
sub
dec
mov
test
lahf
pop
xor
loop
jno
popf
inc
lods
pop
rorb
jmp
mov
adc
xchg
xchg
leave
adc
jp
push
test
popf
push
cli
add
fs
dec
rorb
addr16
pusha
cs
mov
xchg
shrb
or
int
lds
mov
jle
jno
les
xchg
push
mov
lock
add
ja
shrw
cmpsl
nop
xor
sbb
popf
iret
pushf
fsubrl
pop
inc
lcall
cltd
dec
insl
stc
jne
push
dec
imul
int
mov
xchg
jbe
pop
mov
adc
add
push
out
jae
test
dec
scas
pop
mov
mov
icebp
push
loopne
nop
dec
stos
cwtl
inc
dec
cwtl
aad
ret
push
xlat
pop
cmp
faddl
push
cmc
icebp
sahf
jo
rol
sub
fsubl
shrl
sbb
mov
shrb
es
lcall
nop
je
sti
sbb
xor
ficoms
xchg
fnstenv
fsqrt
pop
in
jae
mov
mov
or
push
cmp
ljmp
mov
xlat
adc
insb
mov
imul
mov
mov
outsb
enter
xchg
aam
mulb
sbb
test
xchg
stos
push
mov
add
cmc
and
adc
or
inc
ss
dec
dec
test
push
cmp
pop
mov
and
add
adc
gs
int3
mov
clc
mov
xchg
into
lcall
insl
adc
add
fisttpl
pop
fs
sub
cmp
push
and
push
and
in
jmp
xor
notl
in
inc
js
xchg
sbb
in
xchg
pop
frstor
cmp
lods
movsl
scas
addr16
dec
stc
pop
xor
pop
pop
push
orb
bound
sub
or
sbb
xchg
and
add
shll
ficoms
mov
sub
das
xlat
das
or
popa
rclb
mov
adc
stos
sti
inc
fwait
cmpsl
out
mov
or
pushl
mov
inc
shld
adc
inc
in
in
ja
push
jae
cmc
mov
outsb
and
popf
cwtl
nop
dec
stc
inc
sahf
fisttpl
dec
faddp
sbb
mov
out
mov
jbe
fistl
fisttpll
or
addr16
pop
inc
fisubrl
ss
cld
pusha
adc
rcrl
mov
rorb
jno
loopne
cwtl
or
cmp
insl
or
sbb
mov
mov
loop
ljmp
pop
push
scas
push
mov
js
adc
arpl
icebp
pop
lret
mov
imul
cs
test
mov
sarl
fstl
sti
push
sbb
mov
cld
call
lret
ljmp
or
cmp
gs
push
jl
mov
scas
je
fstpl
sti
xchg
inc
push
jl
jno
fsts
sub
out
arpl
add
aad
lds
add
fdivr
repnz
ffree
mov
add
mov
mov
adcl
inc
fisttps
sub
jmp
pop
mov
mov
jb
pusha
in
stos
mov
cmpb
or
sub
jae
in
movl
mov
xchg
fldcw
jle
es
or
push
es
loope
outsb
xchg
cltd
jecxz
mov
scas
inc
test
xor
cld
mov
mov
cwtl
lcall
daa
scas
and
addr16
outsb
or
xlat
push
inc
mov
push
xor
outsb
std
mov
adc
mov
fistps
cli
adc
and
jg
dec
push
inc
or
cmpsb
pusha
ret
xor
fisubrs
xor
insb
loope
xchg
sbbl
or
mov
fldl
jne
into
mov
xor
stos
pop
jp
daa
or
or
xchg
xor
out
les
and
xchg
xor
mov
xchg
dec
jbe
sahf
mov
xchg
pop
or
xchg
dec
aam
add
inc
mov
rcr
inc
xor
testl
xchg
cmp
mov
push
sbb
movsl
rorb
repz
aaa
mov
xor
sbb
clc
sub
cmp
dec
mov
jbe
sbb
adc
pop
fnstsw
push
xchg
sbb
cs
mov
aas
aas
inc
into
in
dec
lods
mov
and
or
bound
mov
clc
in
fisubrs
jnp
dec
push
pop
sub
into
sub
or
cmp
test
jno
ja
cli
xlat
mov
int
lret
and
iret
inc
inc
mov
das
rcll
mov
popf
fistpll
xor
subb
aas
iret
roll
mov
push
or
cmpsl
sbb
push
shlb
test
push
adc
xorb
mov
mov
sbb
fistps
sbb
mov
scas
jb
xchg
out
dec
rclb
xor
lret
sbb
inc
xchg
xor
lock
push
cmp
out
and
adc
lea
movsl
or
lret
ds
stos
repz
scas
jmp
push
push
gs
xchg
ds
sub
jnp
aam
iret
sub
fildl
or
movsl
mov
or
pop
orl
ljmp
mov
push
testl
aad
scas
lret
movsl
jae
fs
das
test
cmpsb
or
sbb
adc
repz
fistl
orb
or
int
ds
stos
insb
cmp
mov
mov
and
mov
jns
rclb
repnz
jmp
sub
jle
popa
in
movsb
add
inc
sahf
xor
repnz
jmp
cmpsl
pop
fildl
les
adc
pop
dec
add
cmp
test
push
pop
lret
cld
push
pop
push
fidivrl
stos
lods
lock
mov
push
jb
dec
ret
shlb
xor
cmp
adc
ds
dec
pop
and
mov
out
out
int
pop
pop
outsl
out
loope
jb
push
push
dec
push
sbb
mov
push
dec
pop
cmp
cmpsl
xor
jge
and
xchg
mov
dec
pusha
in
out
imull
sti
pusha
jp
loopne
mov
push
sbb
cmp
dec
xor
pop
stos
fdivs
xchg
xor
mov
repz
add
arpl
pop
mov
movl
jbe
xchg
xorb
out
xor
mov
aam
mov
lahf
das
into
shlb
inc
loopne
in
dec
push
cwtl
jb
sub
push
cmpsb
sbb
lahf
mov
stc
lods
lods
sbb
push
ljmp
jmp
seto
and
push
fnstcw
add
cli
push
cli
or
jle
outsb
mov
sub
pop
add
aaa
xchg
jp
and
jbe
sti
mov
jl
and
xchg
mov
mov
mov
dec
and
ss
pop
mov
jns
xor
insb
mov
pushf
xor
add
jmp
enter
or
mov
aas
rorb
xor
pushf
or
scas
insl
jbe
aaa
ss
shll
push
push
popf
sbb
sbb
outsl
roll
sbb
push
add
std
sub
in
push
stc
imul
xor
and
shrl
inc
add
in
rcl
inc
fwait
xchg
add
push
daa
test
inc
mov
xor
pop
data16
push
sbb
and
fisubs
repz
sub
test
and
stos
xchg
sysenter
push
bound
pop
arpl
jmp
mov
imul
fs
push
sahf
iret
ljmp
lret
roll
ja
sub
aaa
aam
lea
add
jae
jb
xchg
shll
loope
test
cmp
shlb
ljmp
sub
or
cli
jb
xchg
xchg
inc
insb
sbbl
pop
jnp
mov
out
faddl
or
push
push
mov
pop
cmp
ds
les
jge
dec
test
in
outsl
jge
mov
or
add
vmovupd
repnz
rcrb
add
dec
je
adc
sbb
pop
xchg
mov
jnp
dec
imul
inc
and
rcrl
or
sub
push
cwtl
out
mov
lock
jne
ds
aad
add
cli
pop
repz
add
aam
pushl
test
test
sbb
js
mov
and
aas
out
mov
xor
es
mov
cmpsb
movsb
sbb
mov
mov
xor
pusha
fadd
push
dec
shrl
jno
test
test
or
sub
shl
cmp
lret
sete
aam
dec
pushf
mov
imul
xorl
add
movsl
bound
cmc
push
jbe
push
xor
movsb
cmp
repz
xchg
xor
cmpsb
push
xor
rcr
inc
lock
cs
xlat
mov
in
dec
out
out
test
clc
sahf
cmpsb
les
adc
push
jnp
mov
and
call
or
dec
mov
lock
std
repz
push
cmc
mov
lcall
jbe
jl
xor
pushf
cmpsb
jb
push
mov
or
imul
inc
mov
or
ror
mov
pushf
popa
mov
mov
mov
cld
pop
sbb
mov
mov
mov
cmp
cs
mov
mov
popa
or
nop
jns
dec
add
pop
jno
jo
stc
gs
or
xorl
xor
jb
aad
sbb
adc
xor
adc
mov
push
pop
cs
rclb
popf
clc
outsl
sarl
out
sbb
std
add
sbb
xor
notl
dec
pop
xor
cld
mov
add
test
movsl
fstl
adc
dec
add
fistps
sub
push
cmp
xchg
sti
sbb
pop
into
mov
jnp
enter
jnp
loop
pushf
mov
subb
xor
xlat
sbb
mov
xor
push
loop
mov
cli
mov
movsl
out
push
shl
movsb
mov
or
mov
loope
arpl
jbe
je
jo
gs
sti
cmp
mov
inc
fiadds
imul
inc
cld
push
jb
sbb
leave
gs
stos
ja
sti
jnp
adc
or
popf
lret
mov
jo
jnp
xchg
mov
push
int3
clc
test
push
xor
imul
sbb
popf
cmp
pop
test
test
add
cld
repnz
mov
movsl
cmp
or
jnp
imul
sbb
adc
jbe
and
cli
stos
sbb
pop
xchg
dec
inc
inc
lds
shr
sub
lock
aas
inc
daa
mov
rolb
inc
pop
rcll
stos
mov
adcb
out
lock
inc
mov
push
roll
dec
jae
xchg
pop
xor
add
mov
sub
mov
lahf
jne
gs
push
repnz
dec
test
lret
fidivs
aaa
nop
std
mov
cmp
sub
sahf
fstl
jb
bound
inc
ret
in
outsl
mov
loop
sbb
jb
dec
pop
push
add
sub
mov
pushf
fld
mov
pop
arpl
or
or
arpl
fisubrs
pusha
test
mov
jo
hlt
dec
fwait
scas
or
or
lcall
adc
inc
fcmovu
jnp
add
and
rcrb
shrl
mov
inc
fyl2xp1
jl
mov
popa
push
and
je
shlb
test
push
mov
rorl
loopne
jg
xchg
pop
ret
jmp
dec
out
dec
jne
loop
hlt
aad
push
or
or
rcrl
enter
aas
rcrb
pop
xor
jecxz
adc
rcrb
sub
bound
push
cmp
mov
pop
adc
imul
jl
out
or
xor
mov
mov
mov
ds
lea
push
out
pusha
insb
fwait
jmp
repz
ret
jge
add
jle
cmpb
stos
and
mull
mov
add
pop
jno,pt
jne
repnz
lock
add
mov
jns
punpckhwd
sbb
mov
insl
lds
adc
xchg
xchg
fstl
int
sub
and
jne
mov
test
mov
adc
inc
arpl
out
jecxz
add
movsl
adc
xor
mov
aam
cmp
std
hlt
xor
xor
or
and
nop
xor
mov
int
ss
out
mov
push
mov
leave
lods
pop
add
dec
into
pop
jae
mov
ja
movsl
enter
ja
lahf
cmp
push
hlt
lock
scas
or
inc
pop
or
call
push
mov
xlat
fcompl
icebp
pop
add
xor
aad
jge
cmp
adc
ret
mov
cld
sub
dec
fists
push
mov
pop
cmp
rcl
int
or
adc
addr16
mov
stos
lods
sub
push
pop
jns
push
xor
mov
xlat
jmp
push
ret
xchg
fdivrs
in
lods
cmp
aas
adcl
or
fmulp
ret
movsl
repz
push
sub
xchg
inc
sbb
in
xor
pop
aam
pop
adc
pusha
sti
xlat
cmp
jl
mov
das
fiaddl
sahf
mov
in
jae
and
mov
in
xor
sahf
jns
fiadds
fldcw
sbb
push
bound
cwtl
push
jmp
lock
jg
push
mov
subb
cwtl
xchg
inc
in
ret
stos
testl
cmp
ss
mov
jne
data16
icebp
incl
pop
movsl
push
xorps
stos
cmp
leave
dec
sub
mov
add
loopne
lret
sub
popf
mov
outsl
mov
cmpsb
sub
push
ja
pop
in
hlt
sub
adc
xchg
imul
or
cmp
jns
mov
gs
cld
cwtl
inc
inc
cs
pop
mov
imul
imul
fwait
dec
rcll
cs
pop
arpl
jl
dec
lahf
sbb
dec
aam
je
rcll
xorl
push
sbbb
jl
cmpsl
jne
iret
jne
loope
aas
cmc
pop
bound
adc
cmpsb
imul
or
stos
imul
dec
arpl
sbb
and
dec
lret
dec
arpl
pop
dec
cs
fmul
repz
pusha
push
popf
dec
lret
arpl
adc
cmp
mov
pop
add
and
pop
mov
cmp
add
aam
rorl
mov
je
lea
push
gs
mov
adc
inc
testl
mov
inc
jg
cmp
and
mov
xchg
pop
mov
aas
aaa
and
xor
ficoml
inc
not
mov
ss
in
mov
mov
or
subps
mov
out
pop
push
add
xor
jns
js
xor
icebp
icebp
push
popf
iret
mov
adc
ret
pop
aaa
aaa
xlat
mov
push
inc
lahf
or
loope
psubusw
mov
dec
cmp
pop
mov
fwait
sub
adc
inc
inc
test
into
xchg
adc
gs
cld
pushf
std
subb
cmp
mov
je
cmp
fdivrs
push
push
lods
mov
adc
into
mov
pusha
mov
mov
clc
mov
adc
js
out
leave
sbb
jp
sbb
mov
mov
jbe
and
shrb
test
pop
pop
sbb
aas
mov
lods
adc
sub
add
fwait
push
pop
sub
icebp
pop
js
or
popa
push
in
int3
imul
push
jae
mov
pushf
jae
sub
xchg
js
leave
mov
cltd
aas
xlat
push
bound
daa
push
fisttpl
lea
loope
fldt
aas
rol
adc
clc
cmpsl
dec
ror
in
stos
xor
xor
cmpsl
cltd
adc
enter
jmp
push
mov
or
stos
arpl
or
push
mov
jecxz
and
adc
add
mov
dec
je
aam
lods
loop
sub
push
fdivl
adc
fsubs
push
arpl
inc
push
mov
mov
xchg
mov
sbb
lds
mov
pop
adc
je
lods
imul
mov
dec
mov
or
pop
test
jle
out
sbb
clc
in
push
adc
setle
mov
sub
rcr
xor
cmp
sti
dec
daa
cmpsl
sti
lret
ret
xchg
pop
jns
push
jb
rcll
js
fsub
pop
inc
sbb
mov
lret
adc
shl
pushf
push
mov
fcomp
jnp
push
sbb
sub
xchg
mov
loope
gs
clc
xchg
jge
inc
mov
movsb
imul
aad
adc
divl
sub
imul
lods
cmp
subb
add
mov
int3
ds
es
lret
jge
pop
cli
lods
and
les
push
add
repz
sub
mov
sti
and
xor
push
jb
clc
movl
or
cltd
sub
xchg
dec
ja
fisttpll
leave
stos
sbbl
add
lcall
xor
cltd
insl
enter
leave
or
test
jl
sub
push
aas
hlt
and
cmc
dec
loop
sub
jg
add
sbb
aad
mov
insl
or
call
frstor
or
mov
jae
movsl
aas
jo
std
push
pushf
cmpsb
sub
mov
in
dec
insb
shll
dec
inc
les
jl
lcall
dec
sbb
gs
aas
push
and
xchg
jne
outsb
jmp
sbb
jb
icebp
jp
cmovs
xor
pop
daa
outsb
mov
jb
jle
lods
ud1
cmp
add
ret
push
mov
imul
out
and
fmull
add
mov
bound
pop
push
mov
push
pop
ss
xor
mov
xor
push
lods
xchg
gs
push
stc
outsl
or
xchg
xlat
mov
rorb
xlat
mov
loop
push
pop
push
push
add
mov
cmpsl
stos
cli
jp
adc
fimull
ret
push
cwtl
sub
lods
mov
jno
les
and
inc
aaa
imul
mov
sub
cli
mov
or
push
xchg
or
in
arpl
pop
mov
daa
sarl
jg
or
sub
dec
in
pop
cmp
add
aad
xor
or
jns
mov
stos
jl
push
jecxz
sbb
push
inc
mov
inc
cltd
dec
movsb
mov
mov
test
fdivs
out
out
leave
lock
shrb
shrl
sub
lds
mov
into
push
xor
dec
mov
jl
enter
movups
push
dec
out
push
out
sub
push
test
add
out
and
add
lock
shrl
cmp
and
int3
les
das
push
cmp
out
js
addr16
and
enter
push
fidivs
mov
sub
imul
int
or
xchg
pop
jns
fneni(8087
mov
xchg
shrl
or
jb
fnstenv
jg
lea
push
jo
mov
arpl
cld
bound
xchg
sarb
sbb
pop
fnstsw
jbe
mov
xor
add
jmp
jle
sbb
jnp
fadds
leave
scas
xor
xor
sbb
mov
jle
inc
fidivl
mov
inc
imul
push
popf
xor
out
inc
stos
in
sbb
jmp
pop
mov
jmp
push
inc
cld
pop
add
movsb
sub
dec
std
dec
xor
mov
jnp
cmp
insb
mov
mov
and
jnp
ljmp
sbb
addr16
push
fdivrs
sub
xor
js
mov
jecxz
repz
neg
repnz
sub
inc
je
cs
popl
leave
mov
cmpsb
fdivs
jle
push
jne
cltd
mov
pop
mov
mov
add
pushf
daa
mov
ljmp
mov
jp
scas
ret
push
mov
xlat
push
jle
mov
hlt
xchg
shrb
idivl
ds
push
fwait
pop
div
or
cmp
pop
jg
int3
in
xchg
dec
sbb
hlt
xor
cltd
idivb
add
inc
pop
inc
adc
xchg
fucomp
fiadds
popa
sub
jns
rcll
inc
push
aam
lods
dec
out
inc
dec
lods
cltd
dec
push
jecxz
mov
or
stos
addr16
popa
bnd
daa
pushf
stc
in
push
bound
dec
xor
std
jae
and
push
xor
and
sub
aaa
or
lods
aad
pop
mov
dec
inc
push
stc
inc
and
sub
roll
test
sub
or
lock
add
pop
and
cmpps
mov
dec
add
sbbl
inc
xor
add
mov
cmp
adc
mov
inc
and
sbbl
pusha
mov
sub
mov
movsb
jge
cmp
xor
add
inc
mov
mov
out
pop
ja
jne
aas
xor
pop
pop
mov
outsl
cmp
push
xlat
push
adc
inc
dec
inc
xchg
nop
xchg
add
adc
adc
sbb
insb
rcl
and
inc
stos
in
cmp
cld
loopne
pop
or
or
shlb
std
je
mov
mov
adc
test
mov
lahf
ror
mov
sub
aaa
push
and
sbb
dec
nop
cmp
or
ss
xchg
push
mov
into
ja
inc
outsl
jbe
adc
sbb
imul
in
push
pusha
imul
jg
xchg
shl
ret
mov
xchg
dec
mov
push
jmp
lret
jg
inc
aaa
cmp
mov
mov
pop
and
inc
rcll
das
jnp
out
sahf
sbb
bound
xchg
mov
sub
in
push
push
pushf
mov
cmpsb
mov
out
xchg
pop
aas
inc
xor
test
and
inc
xor
pop
lret
ja
mov
jmp
sti
or
or
sbb
jmp
sub
add
cltd
notl
in
cmp
jnp
jmp
dec
popa
inc
or
mov
jns
es
jb
inc
mov
jbe
jae
and
ss
je
xchg
in
jae
out
cmp
push
inc
sub
subl
inc
cmpsb
and
shll
xor
outsl
adc
in
and
sbb
cmpsb
mov
arpl
mov
xor
dec
loope
bound
insl
mov
jo
cmpl
xchg
dec
or
fisttpll
andl
adc
test
dec
ficompl
stos
lods
cli
pushf
das
popf
test
jne
and
mov
imul
xchg
pusha
inc
jg
mov
shl
inc
xor
push
testb
add
ds
ljmp
aas
data16
jns
decb
push
lret
sarl
out
hlt
and
movsb
cmp
cmpl
inc
jo
test
cmp
mov
xor
loopne
inc
push
outsl
mov
cmp
sbb
cmc
lea
stos
ret
jp
sahf
jo
mov
mov
ret
inc
ds
sbb
pop
mov
cwtl
xor
ffreep
outsb
cmpsl
cmp
xchg
shrb
push
cli
or
ljmp
mov
xchg
iret
sub
sbb
nop
sti
test
mov
mov
cltd
xchg
mov
pop
inc
outsl
daa
sahf
adc
test
ret
hlt
push
jle
inc
pop
pop
outsl
xor
icebp
dec
lret
cmp
or
jmp
cltd
les
jno
movsb
insb
pop
mov
sub
sahf
clc
xor
pop
cmp
jae
nop
vucomiss
push
add
sbb
or
repnz
mov
mov
sbb
out
lcall
pop
pop
dec
outsb
jne
cmpsb
std
cmc
jne
lods
imul
stc
rcrl
shlb
aas
sbb
jbe
repz
shrl
scas
js
mov
pop
dec
jle
mov
stos
xchg
or
imull
stc
orl
lea
das
outsl
sub
cwtl
xlat
repnz
mov
fcomip
cs
loopne
inc
sub
or
mov
push
ljmp
pop
mov
cwtl
loop
leave
mov
sbb
xchg
inc
aam
dec
pop
sbb
xchg
cmpsl
into
dec
jns
outsl
and
pop
xchg
or
xor
aaa
in
decl
into
xor
jmp
dec
dec
test
shlb
jns
pop
cmpsb
lret
ret
mov
push
pop
inc
lcall
sub
xchg
ret
std
mov
cmp
jl
adc
cmp
push
call
arpl
lret
sbb
inc
dec
and
mov
imul
leave
xchg
add
popa
inc
lret
adc
rcrl
fmull
push
push
sbb
stos
sbb
pusha
outsl
insb
imull
test
xor
stc
movsl
mov
inc
mov
mov
popf
sbb
push
push
mov
sbb
test
sbb
jae
in
or
jle
pop
shlb
mov
mov
popf
cmp
adc
pop
dec
and
call
jmp
push
push
sahf
jle
and
xchg
call
imull
fldenv
lock
adc
test
jecxz
or
inc
push
cld
pop
iret
sub
or
jecxz
and
pop
in
jg
sbb
pop
sbb
push
call
leave
hlt
and
stos
push
xchg
pop
fwait
xchg
movsl
add
into
jmp
je
xor
add
dec
sub
sbbb
in
adc
outsl
clc
fistpll
jne
jg
popa
adc
cmp
pushl
jne
xor
adc
sbb
jl
inc
cmc
and
loope
mov
or
inc
jmp
adc
xchg
into
jo
sbb
add
ret
pop
jnp
xchg
in
push
rcl
mov
inc
push
xchg
cmp
xchg
lock
cmp
lret
mov
pusha
das
xchg
dec
dec
dec
in
mov
pop
pusha
push
add
cmp
inc
add
fdivrl
in
push
and
into
pop
lcall
test
into
adc
lods
pop
scas
das
jae
pop
fimull
call
or
and
mov
sub
pop
add
jae
addr16
cwtl
stos
push
fsubs
push
pusha
inc
mov
fnstsw
fimull
xor
fisubrs
lret
adc
testl
pop
aam
pop
cmp
jge
icebp
jno
add
inc
js
or
mov
imul
jno
dec
inc
inc
jmp
cmp
loope
jl
clc
jb
mov
pushf
push
lds
adc
cmp
aad
xor
mov
xor
inc
out
jp
loop
imul
js
cmc
dec
stos
fisubs
xchg
fistpll
inc
mov
int
popf
std
pushf
dec
cmp
icebp
clc
dec
insl
cmp
popa
push
in
fmul
inc
test
xchg
xor
ss
std
jnp
jle
mov
fldenv
or
mov
rcl
aam
or
iret
aaa
jnp
and
push
jns
out
repz
pop
adc
fiadds
sbb
push
movb
movsb
sbb
mov
sub
sub
dec
push
nop
sar
mov
jle
xor
clc
sbb
daa
ret
xlat
mov
push
fldenv
mov
in
add
mov
je
adc
fildll
sbb
movsl
mov
push
mov
hlt
adc
mov
sub
cmpsb
and
insb
mov
inc
sub
js
data16
cwtl
movsl
rcrb
sbb
mov
cmp
repz
mov
fimuls
cmpsl
sub
lea
and
sub
or
les
shrl
or
cwtl
lret
xor
sahf
jbe
jae
fucomp
roll
mov
mov
ds
xor
sti
imul
imul
xor
xlat
ja
repnz
dec
mov
adc
jae
sbb
arpl
shll
into
gs
out
outsl
xor
fdivrs
ja
iret
cmpsl
dec
out
xlat
pop
pop
popf
push
cmp
add
stos
jne
fs
sbb
leave
add
loope
jg
jle
adc
push
gs
and
mov
loopne
lret
ficomps
cwtl
inc
or
mov
pushf
or
stc
fsts
pop
inc
adc
dec
push
add
and
jno
jecxz
aad
dec
mov
add
out
lods
xchg
cmp
mov
xor
push
mov
movsb
inc
insb
and
jmp
mov
jge
xchg
shrl
pop
cld
ficomps
jnp
addr16
jmp
aam
xchg
and
ss
lcall
dec
lcall
xor
mov
bound
popa
mov
iret
bnd
lods
fcompl
jno
ja
dec
mov
jb
dec
jmp
into
dec
scas
lea
pop
push
cwtl
xor
clc
mov
addr16
cld
add
das
out
loopne
adc
xchg
das
xchg
xchg
fists
pusha
xchg
sub
fstpl
jbe
pop
mov
test
mov
test
inc
sarb
jb
shrb
pop
scas
ljmp
addr16
pop
nop
test
enter
sub
jae
pop
and
or
mov
add
mov
out
loop
xchg
movsl
push
dec
outsb
or
icebp
pop
popf
test
mov
inc
jb
lret
cmp
jmp
mov
mov
imul
push
mov
mov
insb
fcomi
push
loop
and
adc
negl
mov
xor
add
fs
pop
test
in
in
cmpsb
scas
das
mov
aam
sub
rolb
mov
jg
arpl
cmpl
mul
jg
out
and
jle
mov
fs
gs
fsubrp
repz
dec
mov
iret
rcl
jmp
mov
lcall
sbb
push
lahf
mov
or
insl
cmc
ss
or
sbb
inc
fsub
inc
mov
call
out
jge
xchg
push
xor
push
mov
dec
xor
xchg
test
movl
mov
mov
andl
out
hlt
ret
imul
outsl
xchg
setl
jae
inc
mov
sub
jmp
out
ds
inc
and
push
cltd
xchg
fsubp
cmp
pop
mov
xorl
test
pop
cltd
mov
xor
repnz
and
jmp
lds
push
leave
loope
and
repnz
or
ret
jge
xchg
je
jmp
cmp
sbb
insb
inc
aam
jne
inc
fisttps
daa
mov
je
pop
xchg
ja
mov
mov
and
mov
mov
out
call
movsb
sbb
les
inc
int
adcb
xor
test
stc
enter
push
jecxz
cld
add
sahf
movsl
pop
jge
bound
aad
int
jmp
loop
aam
pushf
jg
fcoml
ret
in
ljmp
dec
cltd
pop
clc
jne
mov
xor
inc
mov
and
das
adcl
pop
xchg
stc
loope
shlb
xor
outsl
ss
mov
jne
inc
je
scas
shll
or
push
push
mov
jbe
es
popf
and
inc
jnp
movsb
dec
ficompl
push
xchg
jbe
mov
lret
sub
xchg
or
cmpl
scas
cmp
fwait
push
dec
mov
sub
and
sub
cmpsb
add
push
xchg
imul
repz
xlat
xor
popa
mov
pop
sbb
pop
jmp
iret
popf
sbb
mov
jmp
cmp
outsl
movsl
rorl
lock
xchg
inc
pushf
pop
mov
jp
popa
fidivrs
push
mov
jnp
bound
mov
arpl
push
or
jg
aas
xor
outsb
test
and
repz
les
cli
add
sub
push
cmp
or
sub
mov
loope
into
inc
dec
pusha
fistl
add
and
loope
repnz
fsubl
mov
stos
mov
mov
mov
jmp
mov
add
fnstcw
rol
mov
arpl
sub
mov
adc
out
out
jp
scas
push
adc
xor
pusha
retw
lea
xor
aam
cmp
add
rorb
stc
lahf
xor
xchg
pop
lock
inc
jg
iret
stos
push
sub
ja
xchg
test
jbe
addr16
out
cli
fidivs
test
lret
and
in
stos
mov
push
push
sub
mov
mov
mov
inc
lcall
push
loope
ds
lea
shll
int
cmp
sbb
jg
ror
repz
dec
and
mov
mov
pop
jg
into
out
addr16
test
test
push
cmpsb
sub
or
insb
and
shrb
cmp
jecxz
fsubs
test
push
movsl
and
in
and
ljmp
and
add
cwtl
into
adc
jecxz
inc
das
aaa
xchg
call
mov
test
push
mov
jle
in
popa
jnp
sub
popa
push
out
das
or
sbb
dec
outsb
lret
imul
mov
cmp
cmpsb
test
adc
vmovaps
aam
loop
cmpb
ret
ljmp
push
cmp
in
stc
cs
add
cmpsl
inc
or
jmp
xlat
dec
push
fdivrp
decb
andb
pop
faddp
jne
mov
adc
scas
or
mov
xor
loope
adc
xchg
cmp
adc
jecxz
sub
mov
pop
rcr
testb
fidivrl
xchg
popl
jns
shll
add
push
lods
js
pop
lods
insl
push
mov
shlb
cmp
sbb
mov
add
and
pop
jb
push
push
xor
push
and
dec
push
mov
shl
adc
ds
lds
sbb
jecxz
data16
out
lahf
out
nop
mov
inc
cmpsb
mov
inc
js
mov
scas
dec
sbb
push
dec
fimuls
sub
or
decb
shl
xlat
xchg
xchg
sub
sub
outsb
sbb
mov
sub
fldcw
mov
dec
adc
loop
dec
sti
aad
andb
pop
inc
pop
ljmp
mov
data16
dec
mov
mov
inc
push
and
repz
mov
shr
push
xchg
in
mov
xchg
ljmp
ds
neg
cwtl
call
rcrb
jmp
in
daa
cs
fiaddl
jp
and
data16
std
mov
mov
adc
in
adc
out
push
jge
insl
adc
es
jbe
and
andl
cmp
outsl
adcb
pop
or
xchg
dec
xor
out
or
push
push
mov
clc
lds
add
inc
iret
push
jo
mov
dec
ret
mov
cwtl
mov
fsts
lcall
mov
jae
iret
jbe
push
hlt
dec
sti
ficompl
jo
push
orb
outsb
and
insl
jnp
sbb
mov
push
pop
sti
jb
jecxz
outsb
cmp
mov
mov
fwait
mov
fisubl
or
sub
add
sub
or
leave
ds
call
pop
push
sbb
push
jecxz
sbb
mov
jg
jbe
add
pop
cltd
lea
push
or
fsubrs
leave
pop
pop
sub
ret
and
shlb
sub
and
shrl
dec
sahf
aas
lret
ljmp
scas
cmp
xor
mov
and
das
xchg
cmp
mov
pushl
lcall
repz
push
sub
sahf
fcomi
daa
movsl
mov
jns
cld
int3
xchg
fwait
dec
inc
push
xchg
cmpsb
testl
stc
mov
test
xor
sbb
test
fsubrs
in
mov
xor
jns
mov
insb
mov
fildl
ljmp
cmp
or
mov
mov
outsl
and
nop
pop
lods
call
inc
insb
pusha
fucomp
ret
push
nop
stos
jns
dec
lds
repz
int
test
rclb
mov
mov
jmp
mov
xchg
addl
xor
outsb
push
sti
gs
inc
popf
aas
add
mov
sub
adc
sarl
fcompl
lds
das
jg
aad
shll
mov
sbb
insl
jne
lods
mov
sti
jb
xchg
ret
xor
ficoms
call
fneni(8087
loope
movsl
imul
aas
xchg
fsubrs
push
addl
loope
inc
movsb
and
aas
lds
cmp
sarb
dec
dec
dec
xchg
push
lret
inc
dec
out
les
movb
and
imul
mov
and
adc
jns
sbb
sarb
push
ret
int
jo
cld
gs
dec
xchg
adc
push
stc
imul
sbb
jg
and
mov
fwait
pop
or
lret
add
sub
cmpl
daa
push
das
or
push
nop
imull
xlat
xchg
enter
sbb
cmp
push
lods
lret
fsubr
adc
jge
pop
lods
out
outsl
test
enter
in
jne
and
ret
ret
in
idiv
sbb
nop
push
mov
xchg
lahf
stos
int3
adc
mulb
loop
mov
or
sbb
adc
or
loopne
cmp
jp
mov
loopne
fwait
lret
pop
sahf
div
jne
jne
cmp
dec
sub
test
jmp
xlat
insl
jnp
mov
jo
push
or
xchg
enter
popl
jmp
push
mov
mov
and
arpl
ja
push
pusha
jmp
mov
es
jmp
cmp
int3
stos
pop
outsb
dec
pusha
mov
aad
scas
jbe
add
addl
fdivrs
mov
cmp
mov
scas
jae
es
test
pop
dec
and
mov
push
movsl
loope
out
push
adc
popl
std
pop
jge
mov
cmpsl
mov
insb
hlt
sbb
ficoms
push
add
cs
shrl
lods
inc
pop
sub
push
adc
loop
repz
lret
jle
add
xor
sbb
rcrb
jle
dec
adc
insb
dec
incb
add
cmpsl
fidivrs
repnz
imul
aas
fldl
and
dec
mov
pop
outsb
cld
and
xchg
mov
popf
and
xchg
xchg
cmpsl
stos
sub
sbb
jp
mov
xchg
jnp
fisubl
inc
cld
jbe
clc
pop
das
xchg
and
sub
loopne
push
shll
and
std
and
int
sub
enter
inc
mov
and
cld
fimuls
jne
movsb
adc
add
push
and
fdivp
cmpb
into
push
or
fsubp
das
mov
rolb
dec
dec
enter
and
cmp
jg
int
add
sbb
pop
icebp
sub
cmpsb
pusha
out
cld
sbb
jecxz
push
dec
dec
imul
cmp
sub
inc
add
adc
outsl
sbb
popa
cmp
in
arpl
ret
sbb
xor
cmp
lea
cmp
inc
dec
negb
clc
inc
sbb
mov
jno
push
sbb
add
jecxz
pop
decb
cmp
add
test
scas
jmp
icebp
in
mov
xchg
test
push
sub
adc
ljmp
xor
adc
xchg
lahf
jns
push
xor
or
xchg
loopne
cmp
pop
mov
ss
popf
dec
xchg
imul
fbld
jae
int3
push
pop
mov
aas
fs
inc
xchg
cmc
xor
repz
leave
fisttpll
inc
inc
subl
daa
cld
inc
xorl
out
xchg
dec
adcl
les
mov
jmp
jns
sti
into
xchg
sti
ja
out
jnp
push
mov
and
dec
stos
cld
cmp
sub
push
sbb
add
dec
out
test
outsl
aad
lods
mov
pusha
mov
iret
gs
mov
stos
jmp
dec
and
negl
out
std
and
cmp
cmc
pop
ljmp
ds
gs
push
adc
addr16
pusha
shrb
inc
cmp
xor
aas
addr16
clc
add
or
inc
hlt
imul
adc
aad
lods
cli
rcr
jae
dec
xchg
lods
repnz
in
push
sbb
rolb
fdivr
clc
pop
xchg
pop
cmpsb
psrlq
jle
popa
lods
popf
and
jnp
xchg
mov
jp
mov
subb
loope
dec
pop
adc
loop
cmp
jecxz
popa
push
lahf
mov
pop
push
outsb
or
cld
xchg
or
push
loop
test
sub
xchg
pop
jl
pop
frstor
xor
sahf
push
fstl
mov
mov
xchg
daa
ljmp
or
loope
pop
and
repz
cli
sbb
jg
inc
or
mull
add
lock
jecxz
pop
and
enter
mov
das
repnz
mov
inc
xchg
nop
sbb
imul
out
imul
ljmp
int
mov
scas
dec
outsl
mov
sub
pop
xchg
insb
pop
or
insb
and
mov
roll
vmovapd
sbb
adc
ret
xor
fistpll
add
je
rsqrtps
add
lcall
insb
int3
or
outsb
and
jo
or
pop
ret
add
mov
dec
push
mov
ds
test
xor
idivl
jae
inc
cwtl
or
sbb
jl
xor
xor
jns
daa
mov
shll
cmp
fwait
dec
int
aas
or
std
lret
test
cltd
push
pop
stos
cmpsb
pop
fldcw
daa
movsl
mov
lods
cwtl
sbb
int3
pushf
cmp
xchg
xor
add
outsl
lock
fdivrl
shrb
cs
adc
sarl
ljmp
and
in
ja
adc
movsb
sbb
cmp
xlat
cmpsb
dec
into
rolb
popa
push
xchg
xchg
xchg
adc
jns
or
pop
or
pop
sahf
inc
fnstcw
outsb
std
cmp
js
sub
pop
xor
test
push
pop
pop
daa
subb
dec
pushf
mov
and
pop
insb
xor
mov
sti
cmp
outsb
pop
popl
fbstp
adc
sbb
push
ficompl
popf
pop
mov
and
jecxz
sbbl
ss
jo
mov
sahf
or
xor
and
xchg
adc
scas
addl
sub
pop
xchg
je
fstps
add
inc
inc
popf
mov
or
sbb
sub
jle
and
jno
push
push
lock
and
shr
sti
loop
cwtl
jno
les
aad
pop
pop
and
xor
and
push
push
daa
mov
fs
xchg
add
cmovle
loopne
mov
xchg
jne
roll
sub
jns
mov
je
mov
jmp
movsl
imul
cmp
stos
das
sahf
sub
lods
or
or
push
and
movsb
stos
sbb
std
movsb
enter
subb
pop
sub
adc
xchg
in
cmp
dec
ret
and
inc
sub
shll
mov
in
aas
mov
xchg
sbb
jne
lock
push
xchg
cmpsl
lcall
pop
daa
inc
jne
xor
push
aad
inc
dec
imulb
scas
and
jg
inc
mov
xchg
cltd
fistl
sar
push
fucom
aam
into
jnp
int3
xor
lds
sbb
jecxz
aaa
or
adc
adc
test
idivb
mov
push
shlb
mov
dec
in
sbb
fistpll
lcall
dec
test
xchg
jae
mov
cmp
push
aad
cs
subb
pop
dec
sub
aam
cmp
daa
and
adc
insb
aaa
fs
and
jnp
cmp
loopne
jmp
mov
andb
and
loop
in
jne
lea
lds
dec
xor
xchg
cmp
pop
push
out
pop
addr16
rclb
dec
pop
xchg
int3
cmpsl
sub
aas
pop
xorb
cmp
xorl
test
enter
mov
jg
pop
xor
jae
pop
inc
scas
xor
add
add
push
mov
push
popf
sahf
sbb
cltd
insl
lea
mov
lds
shlb
adc
rorl
mov
push
jns,pn
jle
clc
insl
jecxz
filds
sarb
daa
push
loopne
cli
xchg
dec
cmp
stos
add
sbb
pop
xchg
pop
push
dec
push
inc
jne
aad
xchg
pop
dec
fadds
out
adc
lret
xlat
adc
jb
dec
xchg
inc
jno
sbb
into
test
sbb
decb
sbb
push
out
or
xchg
and
or
ljmp
xchg
mov
nop
jne
jge
inc
or
sbb
inc
loop
cmp
sub
in
and
dec
jle
jge
xorb
or
mov
loope
rcl
fcomps
add
sbbl
and
cltd
cmp
lret
sbb
loope
sbb
lds
movsb
cmpsb
fldt
fisubl
inc
lods
fcoml
push
jb
fldl
jle
sbb
subl
das
lds
sbb
test
or
insb
xchg
outsb
lahf
ss
addr16
and
or
push
jge
loope
adc
pop
inc
sbb
xchg
dec
jno
lret
push
cmpsb
fxch
enter
sbb
push
sbb
int
inc
or
cltd
movsb
scas
fs
clc
mov
cwtl
mov
push
popa
scas
insb
and
rcl
jmp
dec
cli
jno
pop
push
or
inc
pop
fwait
aaa
xchg
sub
inc
sti
add
push
mov
in
test
aad
sub
mov
and
add
jl
jae
xor
mov
fldt
adc
xchg
jmp
aas
jmp
lods
mov
iret
dec
js
add
and
push
pop
test
adc
pop
pusha
cmc
fsubr
xchg
cwtl
outsl
imul
daa
out
fadd
mov
pop
call
adc
fsubl
xchg
cmp
xchg
dec
lret
out
dec
fxch
lret
cli
sti
aas
cltd
test
repz
pop
xchg
pop
mov
jg
mov
pop
xchg
arpl
sarb
xlat
scas
mov
mul
cs
pop
daa
cmp
sahf
lods
clc
out
lcall
out
xchg
adc
repz
pop
jge
push
gs
call
sahf
imul
mov
adc
aas
or
sub
jg
imul
push
test
out
enter
jl
dec
js
mov
push
mov
dec
jb
sbb
dec
push
out
stos
icebp
xchg
mov
mov
sub
jae
call
sti
dec
and
mov
and
mov
stos
aaa
dec
pop
add
sub
cmpsl
sub
xor
lea
les
push
cmp
add
gs
and
mov
pop
pop
fisttpll
aam
addr16
xchg
pop
aam
ss
jg
pop
arpl
push
lods
jg
movsl
lods
xchg
pop
movsl
xchg
out
mov
lcall
loope
js
xchg
dec
add
shrl
mov
imul
xchg
jnp
aad
mov
mov
pop
mov
mov
inc
inc
sbb
jp
xor
stos
in
call
dec
adc
xor
cmp
cmp
test
push
jl
dec
mov
clc
pop
subl
xchg
icebp
sbb
push
add
mov
jmp
mov
jle
adc
gs
fildll
inc
adc
dec
test
decl
iret
push
push
and
leave
mov
rorb
push
hlt
sub
mov
shrl
inc
adc
fadd
repnz
xchg
jge
pop
cwtl
xchg
fucomi
loope
cmp
xor
shlb
jbe
xchg
sbb
mov
mov
pop
push
cwtl
fstp
cmc
adc
movsl
xchg
jg
xor
je
das
lret
cmpsl
xor
dec
xlat
jmp
add
fs
push
nop
incl
sub
int
push
fsts
loopne
icebp
mov
dec
adc
dec
sbb
inc
jecxz
xor
jno
adc
jecxz
imulb
rorl
test
ss
scas
mov
add
orl
lea
stos
cli
lret
sarl
shrb
xchg
push
test
inc
loop
nop
or
test
fst
aaa
arpl
out
rcll
xchg
xor
enter
insl
push
clc
push
sub
push
cmp
psubusw
call
xlat
xchg
ds
jmp
movsb
cmp
dec
adc
cmpsb
xor
xchg
mulb
mov
sub
in
adc
inc
jno
clc
imul
mul
mov
xchg
sbb
mov
into
push
and
arpl
stos
lods
inc
fcoms
frstor
popf
adcl
sbb
shr
psubb
and
jo
add
sbb
ja
mov
pushl
cmp
test
fildll
xor
in
loope
aaa
outsb
ret
je
cmp
out
inc
dec
xchg
sbb
out
fistpll
out
mov
lret
bound
cmp
inc
cs
jl
mov
mov
stos
push
ror
sbb
fildll
loope
adc
insb
sub
jp
cli
add
inc
push
repnz
jb
add
mov
jbe
mov
dec
sbb
stos
addb
icebp
adc
dec
pop
into
xchg
lret
jne
loop
nop
lods
xchg
int
and
xchg
dec
pop
stos
movsb
push
push
mov
dec
pop
sub
es
xorl
rcll
cmp
outsb
push
rclb
adc
subb
call
mov
adc
ficoms
or
jecxz
cmp
lcall
cld
xchg
fcoms
dec
shrl
mov
pop
lcall
push
fdivl
adc
hlt
loop
xchg
sahf
push
lcall
shrb
negb
nop
mov
out
xchg
loope
je
push
ja
mov
cmc
mov
gs
fsubp
sbb
adc
sub
jns
aas
add
mov
push
int
xor
movsb
and
push
xchg
xchg
mov
inc
std
cld
or
loope
loop
mov
ljmp
bound
scas
xor
or
in
inc
jo
add
cltd
pop
data16
loopne
cmpsl
imul
int
jmp
pop
lea
push
add
pop
sub
cltd
roll
pop
loope
cmp
add
or
mov
cmp
repnz
notl
sub
cmp
negb
push
cwtl
lods
sbb
fistps
push
pop
jle
pop
or
pop
pop
ret
inc
or
sub
lods
shrl
and
xchg
es
faddl
jne
and
fstpt
or
mov
mov
mov
addr16
sub
or
mov
dec
or
and
aad
cmp
addr16
pop
mov
aaa
cmp
pop
imul
push
xor
mov
or
jp
int3
or
lret
loopne
pop
or
push
je
andl
lock
mov
sbb
dec
and
cmp
cmp
shll
fbstp
add
hlt
mov
push
test
rclb
push
in
sbb
cwtl
int3
jns
xor
sbb
sbb
lcall
loopne
ja
jnp
xor
adc
clc
int
add
and
mov
pop
inc
add
arpl
sub
mov
mov
ja
mov
sbb
in
insb
jb
adc
dec
fs
inc
pop
ljmp
bnd
pmaddwd
sub
jmp
aam
xor
idivl
call
push
loope
lea
pop
test
adc
rcrl
sbb
pop
xor
mov
xchg
gs
dec
in
mov
and
rorb
mov
sahf
mov
adc
pop
and
data16
ds
ja
dec
inc
shr
mov
pop
pop
add
mov
xor
stos
fwait
pushf
out
jmp
jmp
out
ficomps
imul
leave
or
stos
pop
jmp
out
insl
xor
out
aam
insl
sti
xlat
mov
outsl
push
loope
test
pop
lret
negb
add
test
scas
ja
jmp
xor
inc
lret
cld
mov
mov
mov
xchg
lds
push
lea
xchg
mov
fsub
sahf
mov
sbb
dec
jno
mov
rol
pop
dec
fdivs
imul
or
xchg
push
arpl
push
jns
sbb
lods
push
xchg
jge
cmp
ss
xchg
mov
ss
dec
xchg
mov
pop
xor
sbb
inc
cmp
ljmp
cmp
or
lea
iret
int
xchg
pop
mov
cmp
aad
jg
cmp
test
fstpt
sbb
dec
cmp
out
in
mov
mov
xchg
push
cmp
pop
jle
loope
pop
clc
adc
or
outsl
lock
rcrb
lahf
and
cmp
mov
xorl
cmc
lret
fildl
scas
into
or
mov
mov
sahf
cmc
jae
mov
cmp
and
push
xlat
and
pop
and
outsb
sub
lods
cmc
mov
push
dec
mov
inc
pop
leave
cmc
or
mov
std
or
dec
cmp
rclb
dec
sub
cli
and
dec
sbb
lcall
das
add
jmp
fbstp
stos
frstor
pop
mov
idivl
inc
sbb
xchg
cmpsb
lea
flds
lods
idiv
aad
test
xlat
mov
ficoms
in
das
sbb
iret
loopne
adc
lahf
imul
mov
lock
cmpl
xor
popf
mov
mov
xchg
aas
add
or
cmpsl
das
and
hlt
pop
testb
mov
inc
out
mov
loopne
and
inc
add
pop
or
dec
adc
adc
sbb
xchg
pop
push
mov
fstpt
jmp
pop
jl
cld
xor
in
out
pop
inc
shlb
mov
mov
push
lahf
cmpb
jnp
or
aad
pushf
pusha
push
jle
ret
icebp
int
sub
sbb
or
pop
out
mov
xor
addr16
outsl
mov
mov
mov
cwtl
mov
pusha
xor
andb
xchg
inc
pop
and
lret
outsl
lods
add
in
xchg
xor
je
dec
rclb
xor
in
ret
pop
dec
mov
mov
mov
mov
push
adc
push
addl
mov
scas
xchg
sub
dec
cmp
xchg
mov
xchg
movsb
mov
push
ds
test
add
ret
push
dec
cmpsb
jmp
push
mov
jae
sbb
mov
mov
pop
ret
insl
xchg
movsl
xchg
jmp
leave
loope
sbb
push
pop
lea
pop
mov
iret
aam
sub
movsl
and
pop
ror
lock
inc
cmp
es
sub
push
lahf
pop
call
mov
mov
cwtl
jbe
pop
clc
xchg
into
cld
mov
dec
sbb
pop
out
xchg
daa
movsl
pop
repnz
and
push
gs
jmp
je
ret
lock
xchg
imul
xchg
int
add
pop
add
add
jecxz
int
lret
fwait
mov
sti
xchg
icebp
ret
jns
das
std
or
jne
aaa
jns
xor
fstp
int3
inc
lcall
push
adc
or
jl
outsb
push
sub
jno
or
js
push
cmp
mov
cwtl
jmpw
jae
cmc
jb
dec
into
lahf
sahf
mov
pop
inc
lock
js
shl
in
inc
dec
popf
mov
adc
outsl
out
cld
lea
cmp
gs
sub
push
xchg
mov
mov
fcomip
nop
repz
addr16
xor
cwtl
push
stos
mov
pushf
push
or
movsb
loopne
lret
lret
gs
out
into
mov
mov
add
mov
inc
pop
incl
sti
dec
xchg
push
lods
aam
or
in
xchg
aam
adc
out
jl
add
ret
sbb
add
pop
pop
inc
dec
sub
or
jmp
adc
int
test
pop
shll
add
sub
icebp
sub
xor
jo
fdivl
pop
pushf
test
sarl
pop
out
pop
pop
imul
scas
sbb
into
lahf
clc
data16
cmc
aaa
xchg
je
sbb
mov
push
test
int
push
mov
cmpsl
pop
sub
jo
cmpsb
mov
mov
addr16
stc
jo
jmp
mov
ror
loope
inc
inc
jg
xor
es
sub
xchg
pop
sbb
adc
scas
out
lret
rorl
mov
bound
movb
sti
jnp
call
lahf
pop
push
cld
insl
out
ret
int
mov
imul
sbb
lock
dec
fistl
ret
and
pop
or
jp
sahf
push
dec
out
push
push
jl
mov
mov
arpl
pusha
arpl
lods
push
mov
out
inc
and
jecxz
jecxz
mov
das
je
mov
fcoms
push
lods
lds
add
jns
imul
mov
outsb
push
scas
repnz
cmpsb
sbb
repnz
cwtl
jle
ret
cmc
cmp
cmpsb
add
pop
rcl
cwtl
mov
cmpsb
push
clc
cs
repz
faddl
flds
xchg
inc
push
xchg
sub
sbb
fs
and
scas
je
fwait
sbb
insl
mov
cli
out
jo
inc
dec
int
cs
mov
js
enter
enter
insb
insl
js
fwait
mov
inc
jo
lret
push
xor
and
xor
mov
or
repz
inc
out
pusha
cmp
cmpsb
dec
sub
mov
add
imul
or
sub
fdivs
out
xchg
xor
rorb
lods
ror
pop
sbb
les
cmp
out
push
inc
ret
leave
dec
in
push
mov
mov
rcr
dec
mov
pop
lea
and
cwtl
fists
push
cmp
lret
int
or
lret
mov
bnd
std
aam
inc
lcall
scas
aam
ds
pop
sub
xor
mov
out
insl
arpl
xchg
mov
or
daa
xlat
sub
shr
ja
dec
mov
ss
pop
sbb
cmp
je
jnp
pop
mov
and
sub
jecxz
mov
in
dec
js
nop
aad
jmp
inc
sub
setbe
pop
xchg
jg
das
mov
mov
lret
int
enter
pop
push
mov
bound
and
stos
sarl
int3
inc
dec
push
test
clc
les
pop
sub
ja
fsubrl
inc
pop
pop
xchg
movsb
in
sub
in
in
ret
xor
dec
lods
cld
sbb
inc
enter
nop
dec
mov
push
mov
jno
mov
pop
fsubl
add
jbe
inc
sbb
mov
inc
mov
xor
aaa
mov
jns
popf
adc
push
mov
cmpsb
clc
jmp
sbbb
xor
ljmp
jl
push
push
inc
jbe
bound
cli
xor
jmp
pop
mov
test
inc
aad
mov
dec
mov
leave
std
push
and
mul
push
cmpsl
xor
inc
and
int3
cs
es
pop
stc
adc
popf
stos
pop
mov
dec
dec
mov
les
dec
jg
sbb
and
xlat
jmp
loope
loopne
pop
xchg
int
clc
xor
or
jmp
fwait
sub
sbb
addr16
aam
inc
shrb
xor
or
push
or
inc
cmp
stc
cmp
rorl
mov
mov
cmp
fwait
scas
mov
or
lcall
sarl
dec
cld
jne
push
sub
stos
push
aaa
dec
aaa
cmp
orb
sbb
mov
movsb
mov
and
lret
push
ljmp
je
fs
in
fwait
dec
je
xor
inc
jne
rorb
dec
inc
fwait
inc
shlb
sahf
jle
shlb
shr
cmp
jb
lret
fidivrl
cmc
pop
adc
fwait
sub
andb
clc
xchg
sub
in
test
and
cld
mov
push
sub
std
dec
sbb
popa
cs
sahf
mov
clc
jae
repnz
scas
mov
lods
pop
inc
adc
adcl
jne
lock
cmpb
jo
aaa
inc
iret
ret
cmp
cmp
xchg
imul
and
lods
mov
shll
inc
and
cmove
std
not
xchg
xor
fadds
and
js
in
imul
mov
inc
ja
data16
je
add
inc
sarb
dec
fisubs
pop
stc
mov
sbb
sbb
jge
mov
cld
fwait
ljmp
lods
mov
pop
lods
xor
pop
sbb
pop
xchg
lret
outsb
or
mov
push
add
ds
sbb
movb
rclb
or
js
std
mov
bound
add
lods
in
lahf
push
stc
cwtd
xchg
mov
and
inc
push
shlb
cs
jae
push
bound
test
repnz
fistpl
pop
cli
lods
push
sub
adc
mov
cmp
push
push
iret
loopne
xor
aad
xchg
stos
sti
mov
dec
ja
and
out
les
testb
ja
je
mov
adc
andb
pop
push
mov
inc
cmpsb
mov
aas
data16
out
push
mov
out
xor
mov
push
sub
test
cltd
mov
loopne
mov
inc
pop
out
adcb
adc
mov
in
loop
push
jns
mov
xor
out
and
es
mov
dec
pop
mov
sbb
clc
mov
inc
mov
js
shl
lods
mov
mov
mov
scas
divb
xbegin
sbb
iret
nop
daa
insl
movsb
mov
stos
shrl
push
mov
mov
mov
andb
or
shlb
jp
mov
fistps
or
vpackuswb
pop
jns
loop
subb
fisttpll
pop
jmp
jnp
sbb
ljmp
lret
dec
bound
push
jge
add
sbb
aam
inc
jns
cli
xor
test
imulb
sarl
inc
or
push
test
xor
insb
adcl
sbb
inc
cmpsb
push
in
xor
in
mov
ja
imul
aad
sbb
rcll
adc
inc
rcll
imul
lock
cld
inc
inc
stos
repnz
orl
loope
or
imul
test
ljmp
sbb
push
jge
cltd
test
pusha
sub
test
jno
sbb
fistl
gs
or
fisubl
in
mov
cmp
cmc
mov
inc
lret
sbb
adc
cld
ret
mov
rcll
enter
jmp
pushf
push
dec
ss
das
into
jb
out
sbb
leave
sbb
cmp
cmpsl
in
ja
sbb
pop
xlat
pusha
movl
subb
outsl
sahf
lret
shrl
lock
add
xchg
dec
sub
jmp
fdivs
and
das
xchg
jne
popa
out
jmp
jno
pop
and
out
inc
dec
adcb
and
push
pop
test
push
jg
int3
fmull
mov
popf
sbb
repz
or
dec
je
nop
and
push
aas
in
dec
cli
sti
lods
out
xlat
rcrl
push
out
adc
push
mov
out
repnz
bound
movsl
fnstcw
and
dec
ss
clc
mov
sbb
mov
std
fs
xlat
mov
loope
and
mov
ret
mov
scas
inc
mov
fcmovb
push
dec
hlt
sbb
or
pop
pop
xchg
lahf
inc
jle
popa
cmc
jns
cmpsb
push
dec
fstpl
xchg
pop
cmpb
insb
pushw
cmpsb
pop
out
mov
not
jb
hlt
xchg
push
jae
adc
sub
scas
jne
loopne
je
mov
jmp
pop
insb
les
cltd
sarl
sti
inc
andb
out
sub
dec
test
push
sbb
jno
or
mov
pop
test
and
push
dec
fisttpll
mov
fprem1
add
xor
push
add
xor
or
or
adc
jg,pn
pop
xor
pop
std
mov
out
dec
xor
aam
dec
or
mov
sbb
sar
mov
neg
cmp
lret
mov
jg
lahf
lret
xor
test
mov
cmp
pop
adc
adc
inc
mov
les
cmp
imul
mov
into
or
push
sbb
ljmp
push
cli
in
ficoms
mov
pop
xor
sbb
aam
xor
and
aad
in
lret
loop
adc
or
jecxz
xchg
mov
sti
xchg
dec
leave
sbb
and
mov
sub
out
jecxz
lods
dec
and
jne
xlat
ficoms
insb
xlat
sbb
xor
repz
lea
in
sarb
fadds
popa
xchg
sub
mov
ss
jmp
jnp
jl
add
pop
sbb
mov
and
mov
dec
pop
add
nop
cmp
lcall
jg
mulb
scas
out
or
adc
fistpl
sub
test
push
xchg
nop
pop
jge
movsb
inc
or
hlt
orb
and
adc
fsubr
jns
xchg
icebp
sub
jnp
push
push
mov
ret
addl
test
aas
popa
adc
into
sub
ja
push
jnp
push
xchg
inc
jle
jp
xchg
imul
inc
in
nop
mov
dec
pop
lds
bound
mov
add
cltd
or
sub
lret
loop
test
xchg
fldt
mov
pop
fsubp
push
shlb
or
ret
add
mov
imull
push
testb
imul
sahf
call
pop
js
aad
xor
shlb
bnd
lds
mov
mov
xchg
popa
fcoms
in
das
dec
jb
in
xor
adc
insb
jmp
cwtl
sbb
fisttpll
cmpsl
dec
xchg
sbb
das
insl
mov
int
into
test
lahf
dec
notl
mov
xor
aas
sub
dec
dec
xchg
sbb
out
or
lock
addr16
int
bnd
test
imul
add
fs
cmp
lea
lds
jp
pop
ljmp
aam
in
jmp
arpl
fiadds
jbe
int
mov
js
dec
mov
cmp
dec
int
lock
xor
jp
es
in
ljmp
out
xchg
fiaddl
push
xchg
rorb
out
sar
aad
rorl
test
out
push
cmp
mov
int3
and
jge
pop
adc
sbb
outsl
rorl
adc
mov
rcl
sbb
out
cli
pop
negb
pop
xchg
pop
cs
adc
sarb
or
sub
aaa
out
mov
inc
or
adc
pop
je
scas
mov
jns
mov
cmp
fcmovnb
mov
xchg
clc
inc
inc
or
in
sub
enter
std
aas
xchg
scas
ljmp
mov
lret
and
jns
add
add
shl
lcall
xchg
iret
mov
adc
adc
repnz
xor
sub
mov
leave
mov
push
cmp
ror
add
dec
out
cli
stos
stc
adc
mov
lret
cmp
mov
xchg
aam
xor
dec
lods
repz
adc
mov
int3
or
sbb
out
jmp
jnp
xchg
out
add
cli
cmp
pusha
pushf
ja
cmpsl
cld
sarl
cmp
cmp
sbb
out
daa
pushf
adc
add
pushf
pushf
lods
mov
rcll
shll
mov
xor
call
xchg
dec
xor
cmp
shrb
jae
test
into
mov
xchg
fwait
cmpsl
xchg
pop
repnz
dec
mov
xor
mov
adc
sti
xor
push
dec
clc
mov
outsl
mov
shl
aaa
nop
cmc
jg
inc
cmp
ret
rorb
add
mov
cwtl
addl
fisttpll
add
jne
cwtl
out
sbb
mov
mov
aad
sarb
jne
or
mov
lahf
cmovge
data16
inc
sahf
fst
mov
mov
dec
aas
cltd
pop
cli
movsb
jl
stos
lretw
mov
addr16
mov
outsl
outsb
and
xorb
dec
repnz
or
das
or
xchg
lea
rol
dec
mov
mov
jb
push
cmpb
popa
add
or
push
push
sub
push
fbstp
and
lahf
or
sub
mov
mov
test
jb
sub
andb
cmp
jge
mov
adc
test
dec
xor
push
fcomi
std
push
js
in
dec
cmp
pop
jno
loop
scas
push
or
daa
push
xor
jmp
aas
mov
test
imul
cld
cmp
pop
jae
add
push
mov
inc
push
aaa
ja
push
xchg
sbb
loope
and
add
xchg
inc
ret
testl
push
fnstsw
push
test
cmp
or
stos
fwait
xchg
arpl
stc
mov
popa
push
or
in
xor
adc
adc
mov
adc
daa
mov
les
daa
cltd
imull
push
mov
mov
orb
pop
jno
xchg
out
jge
or
mov
mov
push
loop
rcll
xchg
or
or
clc
aaa
test
xlat
cltd
jbe
cmp
in
stos
jecxz
cli
sbb
bt
and
push
xchg
movsb
mov
add
imul
test
mov
enter
dec
fwait
repz
ljmp
or
imul
inc
pop
mov
nop
lcall
inc
stos
in
pop
xchg
lods
out
loopne
loopne
repnz
xchg
test
scas
dec
mov
inc
ret
mov
call
xor
mov
mov
mov
jle
mov
icebp
fldcw
push
push
lock
nop
adc
dec
cwtl
sbb
in
sbb
js
or
cmp
or
jmp
sahf
filds
cmpsb
aam
inc
and
outsb
mov
cli
test
pop
imul
mov
clc
cmpl
adc
rorb
adc
testb
sbb
inc
pop
pop
lret
lods
sbb
cwtl
out
mov
cld
repnz
clc
ss
and
fdivrs
aaa
xchg
addr16
shrl
push
out
jns
rcrb
sub
mov
mov
std
lret
push
mov
popa
adc
xchg
data16
sub
mov
pushf
xchg
push
cmp
mov
hlt
pop
out
sub
mull
sub
inc
push
adc
mov
add
lods
sub
push
push
fsubrs
sub
loop
xchg
mov
or
xor
popa
inc
bound
xchg
inc
rolb
pop
idiv
scas
inc
stos
jmp
pop
ret
xchg
in
mov
xchg
out
mov
mov
pusha
lods
cmp
dec
push
orl
orl
mov
cmc
or
movl
sbb
sbb
dec
mov
inc
std
sub
lea
mov
shl
pop
sti
aaa
ficoml
dec
ficompl
pop
lea
jmp
push
inc
lds
jns
xchg
mov
enter
push
mov
cmpsb
mov
fld
jle
mov
jbe
mov
jo
push
sub
pop
mov
xor
es
pop
pop
mov
add
aad
jno
rep
sti
adc
hlt
mov
add
lahf
out
xlat
pop
pop
pop
mov
xchg
dec
mov
jnp
int
pop
movsb
sti
sub
out
sub
sbb
fldl
mov
cmp
sarl
jno
jg
mov
add
sub
or
cmp
jnp
jns
aas
les
aaa
push
xor
sbb
dec
inc
mov
insb
add
and
pop
lds
xchg
add
dec
inc
pusha
cltd
jg
lods
out
int
cmc
cltd
xchg
push
rorl
clc
sbb
fidivrs
sub
push
jnp
or
lret
div
sbb
into
xchg
andb
xor
dec
inc
cmp
ret
mov
sub
shll
xchg
xor
into
xchg
mov
int
pop
loope
cwtl
mov
sub
lahf
jge
out
movsl
ret
scas
dec
in
push
adc
bound
std
push
dec
or
cmp
popf
aaa
mov
pushf
mov
jo
out
rorb
dec
call
test
dec
les
das
ffree
je
add
rcrl
mov
loope
js,pt
push
push
pop
shrb
xor
mov
fildl
mov
jl
cmp
lea
jg
int
dec
fs
push
jbe
dec
out
jl
jecxz
add
iret
pop
incb
jno
mov
push
imul
insl
movsl
inc
es
sbb
sahf
icebp
jle
pop
or
insb
outsl
pop
xchg
lods
cwtl
pop
inc
aam
sub
mov
and
stos
cli
data16
mov
push
loopne
xchg
jmp
mov
in
in
jmp
data16
mov
adc
in
lods
int3
je
lahf
aad
push
lea
xchg
jo
fcoms
push
cli
imul
xchg
cltd
scas
mov
mov
and
sbb
ret
out
xchg
cmp
stc
out
fnstenv
sti
shr
mov
mov
rcr
ret
ret
insb
mov
inc
mov
push
pushf
pop
xchg
rclb
mov
insb
sti
mov
out
jae
cs
test
sbbl
inc
push
mov
out
adc
imulb
gs
xchg
pop
and
movsl
push
jnp
inc
stos
or
xchg
xorl
fadds
stc
inc
mov
dec
add
in
in
mov
push
dec
sbb
loope
leave
ljmp
or
orb
lret
scas
or
jb
sbb
mov
ss
xchg
sub
cs
push
jne
pop
es
mov
xlat
sahf
jae
jp
nop
addr16
jno
rclb
push
test
add
stc
decb
and
mov
mov
addr16
xchg
lea
sub
inc
add
or
punpcklwd
xchg
popf
lcall
jmp
cmpsl
dec
and
pusha
les
flds
pushf
mov
or
ljmp
enter
xchg
fisubrs
and
add
adc
mov
jg
insb
mov
repnz
xor
push
mov
out
xchg
push
jb
mov
cmp
push
xchg
mov
mov
retw
mov
and
jl
js
cmp
adc
xchg
fwait
sub
push
or
fcomp
adc
packssdw
or
add
sub
add
or
in
mov
les
ljmp
shlb
sbb
sbb
ja
pop
mov
push
into
repz
loope
imul
sbb
mov
cs
stos
sbb
jo
jno
xchg
push
pop
cs
shlb
and
mov
repz
dec
xchg
fisttpl
shlb
add
fldl
xchg
jb
push
xlat
add
test
lea
pop
mov
es
xchg
cmpsl
mov
inc
insl
pop
loope
mov
lea
mov
bound
cmp
or
mov
adc
mov
cld
lahf
pop
push
ret
adc
ret
push
stos
pusha
mov
or
mov
add
data16
je
inc
inc
int
lahf
xlat
jmp
movsb
mov
aas
inc
pop
lcall
popf
mov
sub
xchg
xchg
ret
push
lret
and
xchg
dec
dec
stos
cltd
adc
inc
xchg
mov
push
insb
pop
pusha
sub
add
xor
scas
cwtl
or
lret
sbbb
filds
outsl
xchg
cld
sub
or
dec
jp
add
sbb
add
cmp
into
ljmp
mov
sbb
adc
aaa
stos
cmp
fstl
inc
lret
repnz
loop
fnsave
and
add
xchg
mov
cli
leave
mov
dec
and
add
int3
inc
ret
ret
xor
stc
pushf
stos
stc
subl
data16
jbe
or
push
push
mov
lds
inc
pop
push
xlat
in
fdivl
xchg
mov
xchg
jno
fstps
sub
dec
jns
lcall
aam
push
dec
jne
sub
fwait
insb
dec
cmp
xchg
cmp
push
stos
jmp
cmp
aas
arpl
push
add
negb
sbb
jg
aam
and
push
push
jne
add
les
xchg
xor
pop
test
xor
loope
adc
repz
ds
je
mov
roll
dec
sbb
ljmp
mov
cmp
push
push
inc
test
mov
int3
and
sbb
xor
jp
notl
jmp
mov
test
xor
fsubs
sbb
push
addr16
loop
pop
fildl
out
repz
jb
sub
insb
pop
cmp
test
shl
lods
mov
sbb
add
pop
cld
sbb
push
push
sub
jo
test
loopne
jle
cwtl
imul
push
pop
js
enter
dec
loopne
lret
imul
ds
sbb
sbb
fwait
add
xchg
pop
cltd
mov
and
xor
xchg
gs
aad
push
push
xchg
pop
inc
ss
sbb
in
subb
xorb
or
in
mov
into
aam
cmc
and
outsb
dec
add
jp
mov
scas
cwtl
push
outsb
pusha
adc
mov
cld
lahf
mul
mov
subl
repnz
cmp
fildll
push
inc
xchg
sub
pop
xor
mov
lds
push
fcoml
or
pushf
and
repnz
orl
and
jb
ja
fnsave
data16
pop
insb
std
imul
dec
fsub
clts
pop
mov
scas
sub
xorl
dec
je
push
sub
loop
push
shrb
loop
pusha
mov
jae
mov
pop
loope
or
in
in
cmpsl
push
dec
inc
popa
cmp
or
mov
jecxz
es
sub
cmp
paddsb
lods
lret
cmc
adc
dec
loope
push
int
and
in
insl
sbb
fwait
iret
arpl
and
mov
idivl
test
repz
fsubs
movsl
sarb
push
jo
xchg
inc
lock
jbe
repnz
and
cs
xlat
les
add
leave
hlt
jl
dec
popf
cli
test
nop
sbb
in
cmpsb
xchg
pop
test
rolb
cwtl
pop
rcl
cld
adc
cld
mov
pop
imul
jge
lahf
push
add
and
pop
or
inc
dec
insb
adc
enter
aam
scas
aam
popa
das
aaa
cmpsb
pop
subb
xchg
add
dec
pop
push
inc
lcall
cmp
adc
scas
dec
scas
sub
repnz
adc
loop
mov
call
fucomip
mov
cli
jp
and
mov
fstpl
xlat
jg
pop
jns
cmp
xor
shll
inc
jle
sub
add
xchg
das
push
insb
out
hlt
add
gs
popf
lock
jbe
sbb
outsb
hlt
loope
sbb
push
mov
stos
xchg
mov
or
adc
shl
pop
push
clc
stos
mov
and
int
xor
in
test
mov
leave
adc
mov
sub
xchg
sub
inc
out
cltd
dec
popa
inc
mov
andl
pop
add
add
cmpsb
mov
ss
inc
or
sbb
sbb
fcompl
push
dec
cltd
xchg
and
and
out
insl
jp
mov
fdiv
dec
loop
movsb
xor
add
jno
xchg
xor
dec
mov
rep
imul
or
sub
inc
movb
push
mov
mov
jbe
dec
adc
mov
jo
leave
hlt
add
int3
push
push
test
sub
cltd
jae,pn
lods
push
push
push
xlat
mov
pop
add
test
outsb
jo
outsl
add
aam
leave
push
inc
dec
push
dec
xor
das
cmp
pop
cwtl
outsl
push
pop
mov
mov
jbe
nop
les
cli
mov
out
fucomi
mov
and
loopne
sbb
push
jmp
out
pop
add
stc
and
loope
adc
or
inc
xchg
repnz
out
sbb
push
fidivrs
jmp
jle
dec
mov
jecxz
sahf
lret
push
in
ret
daa
push
je
push
fldcw
daa
sub
adc
mov
mov
or
sub
out
inc
loop
push
les
cld
imul
push
xor
adc
add
and
mov
test
mov
mov
mov
cltd
fwait
movsb
mov
test
xor
les
push
shlb
xchg
mov
push
idiv
dec
inc
adc
das
xor
dec
sub
daa
mov
cmp
daa
or
xor
mov
sub
imul
jl
mov
notl
mov
fwait
aam
pop
dec
neg
int3
sub
aam
arpl
mov
pop
inc
dec
ret
fcoml
sbbl
repz
scas
inc
lret
mov
dec
ficomps
bound
push
add
pop
or
sbb
lds
adc
xor
push
xchg
xorb
dec
dec
pop
xor
fwait
ret
mov
and
fwait
jmp
push
or
aas
adc
sahf
jg
ret
dec
push
pop
outsb
pop
mov
jae
stc
jnp
data16
test
jg
push
adc
lahf
sahf
hlt
lcall
push
loopne
add
sbb
mov
in
in
dec
mov
xor
shl
mov
xchg
loopne
push
ds
jecxz
ljmp
push
cmp
jb
pop
mov
je
and
cli
aaa
jg
pop
adc
cmp
lds
add
in
mov
xchg
movb
fwait
lahf
in
outsl
or
sbb
cld
lret
repz
and
dec
loopne
push
mov
in
ds
pop
mov
cli
cmc
push
fwait
pop
inc
jbe
xchg
loop
mov
shrb
mov
lods
jp
sbb
mov
and
js
jae
add
mov
stc
stc
inc
outsb
push
arpl
dec
call
mov
jns
xor
int3
popf
mov
mov
addr16
into
xlat
mov
aam
xchg
sarb
js
dec
sub
adc
mov
aas
cmp
nop
ds
scas
test
das
or
push
pop
mov
sbb
xchg
sub
mov
push
add
lret
add
jp
les
adc
adc
and
ficompl
push
jne
fildl
or
cs
popf
xor
inc
push
pop
mov
lcall
add
outsl
push
adc
cld
cwtl
ds
pushl
mov
add
dec
or
aas
loop
shr
fisttps
fwait
fs
outsb
xchg
push
aaa
fnstcw
cmpsb
lcall
das
lock
xor
adc
mov
inc
cmpsl
cli
pop
jecxz
pop
mov
add
mov
movsb
sub
xchg
stos
pop
or
and
push
loop
rcll
insb
orl
or
scas
mov
cmp
mov
xchg
push
aam
enter
cmpsb
inc
sti
ds
inc
ficoms
fst
mov
ja
dec
mov
pop
mov
fsubrp
clc
dec
cmp
push
pop
push
mov
sub
fnsave
adc
push
mov
lds
xchg
inc
ljmp
loope
loopne
shl
or
shrb
adc
outsl
outsl
cmp
pop
mov
push
and
sbb
in
ss
mov
add
fidivrl
int
cmp
add
imul
insl
and
xorb
mov
cmp
popf
push
je
adc
or
in
inc
aas
cmpsb
mov
mov
sub
jns
lahf
mov
test
sub
je
push
imull
int
pop
fsts
inc
loope
pop
mov
fdivrl
xchg
ds
cmp
rcrl
aaa
lock
dec
adc
movsb
cltd
mov
repnz
into
add
push
pusha
push
hlt
mov
mov
insl
or
jbe
test
sub
sbb
test
and
bound
out
xor
js
stos
xchg
pop
jp
ret
sub
call
fdiv
iret
out
jl
and
push
jl
add
jmp
daa
es
pop
vpmaxub
in
test
sbb
jecxz
arpl
jg
test
mov
jns
push
popf
pop
xchg
pusha
add
pop
mov
mov
push
and
inc
xor
push
sbb
int
cmc
dec
int3
andl
mov
push
mov
jno
ret
pop
cmp
test
inc
out
cld
inc
jp
cld
outsl
call
cld
fiaddl
xlat
ret
test
add
push
and
movsl
jecxz
in
or
lds
dec
cmpsb
insl
ret
cs
comiss
add
push
cld
push
add
fidivl
stos
jno
fisttpl
adc
daa
loope
cli
lret
sbbl
dec
fsubl
mov
pop
int
sbb
pop
sbb
fwait
insb
xchg
dec
mov
adc
add
lock
pop
cltd
daa
add
outsb
cmpsb
pop
add
fistl
mov
fdivr
test
sub
sbb
ja
push
int
inc
inc
and
pushf
sbb
sahf
sbb
pop
mov
loope
push
inc
lock
xor
sub
es
repz
lcall
push
xchg
stos
mov
mov
enter
xchg
push
pop
ja
cmp
daa
nop
or
or
jbe
daa
mov
negl
stos
mov
mov
rclb
sub
andb
fistl
push
jg
jg
les
sbb
movb
imulb
cmp
fadd
dec
xchg
mov
or
jl
mov
xor
xor
mov
push
sbb
mov
mov
dec
bnd
dec
loopne
push
inc
jnp
cs
loope
lea
sti
pop
sbb
dec
imull
push
fs
dec
push
push
and
mov
scas
fldl
daa
pop
lods
mov
mov
subb
push
jo
movsb
cld
mov
jge
pop
insl
or
push
icebp
popa
cld
pop
push
cmp
cmp
push
xchg
lahf
shll
adc
fcoms
cld
mov
sbb
int3
fisubrl
jae
cmp
jae
mov
or
lds
enter
or
sub
sbb
dec
xchg
xor
mov
jne
pop
fwait
int
cld
adc
out
mov
es
movsb
inc
jbe
imul
cltd
or
push
fimull
pop
lret
mov
sub
pop
pushf
stc
out
nop
and
pop
popf
and
inc
test
and
popa
jl
inc
out
in
pop
mov
xor
std
sub
bound
jae
cmp
jle
stos
xchg
sub
repnz
push
outsb
test
xlat
xchg
sub
pop
pop
mov
adc
testb
sbb
cmc
lret
out
addr16
dec
push
call
cwtl
pop
imul
jbe
cmp
pop
jmp
push
xor
mov
ds
or
add
mov
out
pop
push
out
test
and
int3
scas
out
imul
mov
pop
sbb
lods
xchg
and
push
addl
and
xor
sarb
mov
inc
je
mov
daa
shll
push
jg
bound
add
stc
mov
jmp
out
xchg
xor
fsts
adc
mov
mov
incl
mov
adc
inc
sbb
jmp
mov
iret
cmp
fnstsw
clc
aam
or
xor
xor
incl
lret
lods
jae
out
adc
jb
ret
jge
sub
xor
iret
lock
adc
xor
inc
sbb
arpl
adcl
negl
mov
int
frstor
jp
hlt
xchg
jb
jnp
loopne
sub
jne
inc
push
loope
inc
and
dec
fimuls
sbb
enter
xlat
dec
std
aas
lret
into
xchg
test
mov
cltd
mov
xorb
js
adc
dec
mov
sbbb
test
xor
fldcw
jg
mov
loop
into
das
lea
inc
or
jne
jl
fists
inc
mov
adc
out
xlat
dec
pop
ds
xor
mov
mov
sbb
in
pop
lds
push
imul
pop
movsb
loopne
add
inc
inc
push
sti
mov
ret
notb
xchg
addl
insb
inc
dec
rcrl
push
je
stos
lcall
pop
loop
ljmp
mov
stos
fldln2
sahf
call
sub
es
ss
push
push
mov
push
jb
and
loop
leave
outsb
test
mov
cmpb
lret
pushf
scas
xchg
inc
cmp
test
mov
dec
ficoml
scas
push
stos
ja
dec
lret
pop
adc
add
jb
out
test
fwait
cmp
rclb
rcll
movsb
leave
pop
xor
shrl
rcrb
jb
sbb
es
mov
dec
mov
push
jbe
iret
arpl
mov
cs
and
in
xchg
add
fs
pop
jno
and
inc
imul
pop
cmc
jle
dec
lds
fdivl
stos
adc
sub
inc
fsubp
dec
hlt
fs
mov
push
pop
xchg
mov
and
loopne
sbbl
xor
sbb
mov
loopne
mov
rorb
mov
je
test
lock
and
lock
sub
sbbl
outsl
xchg
ja
out
loopne
cmp
cmp
inc
xchg
dec
shl
mov
cmp
sub
or
jp
ss
ret
inc
dec
daa
std
inc
nop
bound
pop
or
iret
call
jne
test
aaa
adc
sahf
shl
scas
repnz
cmp
jne
inc
mulb
imul
popa
pushf
rcrl
push
dec
mov
sub
xchg
je
sbb
sbb
jp
dec
repnz
rol
addr16
jne
inc
lods
xor
or
cmp
pop
mov
ss
inc
outsb
mov
xchg
cwtl
ljmp
mov
rorl
push
xchg
scas
fistl
mov
ds
fcoms
sbb
add
sub
push
or
pop
add
in
addr16
outsl
cs
push
cwtl
std
or
sbb
jg
sbb
mov
mov
jbe
stc
xor
loope
cld
sub
loop
mov
or
mov
pop
fs
adc
and
fisttpll
int3
les
pushf
sbb
mov
hlt
lods
mov
shrb
inc
adc
cli
push
mov
sbb
icebp
cmp
and
cmp
push
in
sub
mov
pop
sub
fcompl
bound
fnstsw
inc
xlat
nop
mov
lock
xchg
lds
pop
in
cmp
mov
mov
enter
dec
dec
test
and
xchg
jecxz
add
cmc
ret
sub
pop
out
in
pop
roll
cmp
mov
adc
or
add
stos
ds
sbb
and
jge
adc
adc
cmp
add
mov
mov
rorb
push
pop
or
dec
inc
pop
xchg
lcall
adc
adc
fsub
jne
xor
divl
sbb
add
mov
and
jmp
stos
call
push
mov
xchg
sub
mov
add
scas
and
adc
idivl
mov
xor
das
add
sub
popf
int
cld
add
sbb
and
mov
and
pop
inc
jecxz
inc
popa
adc
or
mov
jp
aam
xchg
repz
scas
gs
mov
pushf
xor
icebp
lods
test
enter
adc
shlb
mov
fs
mov
int3
mov
or
aas
daa
inc
loope
fildll
mov
cld
subl
adc
shlb
out
rclb
jno
push
xlat
cmpsb
cmc
xchg
in
das
repz
inc
adc
in
mov
dec
aas
pop
and
cld
push
out
in
dec
dec
loopne
push
loop
int
inc
test
leave
inc
push
lcall
lahf
mov
adc
push
mov
lock
fcmovb
wrmsr
jmp
push
mov
aaa
adc
or
jne
pushf
das
jne
xchg
imull
sbb
mov
roll
daa
dec
cmp
aad
divl
push
lret
mov
mov
inc
jbe
dec
pop
out
xchg
push
bound
nop
scas
or
hlt
lea
xor
mov
add
pusha
aas
or
nop
movsl
push
clc
sbb
lret
inc
js
inc
dec
dec
ljmp
lods
pop
test
scas
insb
cmp
jg
rorl
jmp
inc
jo
pop
inc
movsl
ss
fists
incl
sub
inc
cmc
aam
mov
fwait
andb
inc
dec
and
gs
pusha
adc
sub
jae
push
add
cmpsl
dec
push
sbb
cmp
dec
pop
adcb
call
jne
add
jl
bound
pop
fildll
loopne
mov
xchg
sahf
loopne
dec
xor
ret
stc
out
xchg
fldenv
add
push
lret
and
dec
shlb
shl
cmp
add
mov
aam
add
scas
xchg
addr16
test
pop
add
mov
push
cli
jno
sbb
push
adc
into
shlb
in
int
daa
mov
mov
cmp
mov
ja
jg
adc
mov
mov
test
out
mov
jmp
sub
jge
mov
insl
ss
in
je
cmp
sbb
inc
cmp
sbb
mov
inc
xorb
clc
cvttps2pi
xlat
insb
and
faddl
push
data16
jne
popa
fwait
mov
test
xchg
pop
jne
push
inc
shrl
and
je
clc
and
pop
mov
jbe
pop
lock
insl
ljmp
push
cmp
mov
sbb
cmp
hlt
popa
mov
dec
mov
mov
add
imul
adc
mov
and
xchg
addr16
stos
adc
and
pop
mov
popa
mov
and
test
popf
mov
lea
sti
cmc
mov
outsl
pop
dec
adc
ret
jb
imul
cmpsb
cli
cmp
pop
jp
dec
sbb
or
push
mov
popa
fists
jle
in
sbb
push
xchg
xchg
mov
in
test
mov
cpuid
xchg
add
or
jae
add
and
shll
inc
popf
jno
pop
insb
xor
add
test
in
adc
inc
push
sub
mov
mov
xor
fldt
fidivrs
popa
aam
pushf
push
mov
pop
pop
xchg
enter
testb
pusha
mov
imul
pusha
out
pop
and
popa
jmp
ret
jns
out
sti
push
cmpsb
test
sbb
std
sub
mov
sbb
push
adc
add
test
sub
imul
adcl
cltd
cmp
cmpl
gs
out
xchg
pop
mov
cwtl
add
mov
std
stc
rorb
aas
sbb
out
push
push
aam
sub
push
mov
int3
or
movsl
div
psrlw
out
dec
es
les
mov
stos
pusha
or
adc
outsb
dec
xchg
dec
out
add
insl
sub
sbb
fs
xchg
adc
adc
dec
pop
sub
cmc
dec
jecxz
xchg
iret
jle
popf
push
inc
in
gs
jne
or
pop
jmp
dec
mov
xchg
stos
incb
shlb
add
cltd
inc
fnstenv
lock
loopne
es
pop
mov
jp
dec
xchg
pop
mov
data16
sbb
mov
xchg
fadds
xchg
mov
jmp
lret
and
sbb
pusha
in
hlt
fnstenv
mul
mov
ret
fdivl
cmp
cs
sbb
inc
pop
fsubl
pop
fmul
fiadds
in
and
lahf
sub
pop
push
mov
lea
jmp
rorl
sbb
shll
jno
pavgb
nop
sub
gs
mov
pop
gs
cltd
dec
mov
nop
xor
sbb
imul
inc
dec
inc
shl
cmc
sub
add
popa
pusha
xchg
repz
or
adc
orl
idivb
and
les
add
mov
mov
aaa
and
ret
sbb
cmpsb
pushf
pop
pop
call
gs
and
imul
inc
jb
stos
arpl
cmp
mov
decl
fimull
sbb
cmpsl
in
fldl
leave
mov
jle
test
das
xor
movsb
shr
out
addr16
scas
and
mov
mov
sbb
dec
mov
sbb
test
hlt
je
jge
icebp
sub
out
jecxz
hlt
mov
aam
xchg
jg
jmp
push
fnstsw
test
inc
int3
inc
pop
enter
pushf
mov
aaa
repz
push
inc
outsl
scas
ja
xchg
mov
push
shlb
pop
pop
divl
inc
nop
repnz
lret
hlt
out
mov
dec
push
mov
aaa
mov
dec
int
xor
rcrb
js
js
gs
lahf
sub
sbb
ja
inc
xchg
sub
jae
cwtl
rcr
movsb
sbb
pop
cwtl
fstps
cmpsb
lock
pop
pusha
add
or
int
cmpsb
jbe
iret
jge
out
fcomps
out
sub
ja
aad
adc
mov
enter
and
or
or
pusha
shll
xchg
mov
sbb
push
jbe
test
or
insl
cmpsb
or
jl
mov
ss
and
xchg
movsb
push
xchg
shlb
sub
cld
jno
dec
jo
jecxz
insl
xchg
mov
xor
and
pop
pushf
xchg
jns
and
add
pop
ror
sub
lret
xchg
mov
push
push
pop
pop
mov
sub
inc
in
into
add
out
js
and
lods
mov
arpl
cli
adc
xchg
xor
and
pusha
xchg
movsb
fbstp
push
cmc
xor
ss
ss
adc
aaa
sub
or
dec
mov
out
xchg
or
bound
dec
inc
xlat
ds
enter
mov
mov
fwait
and
pop
jnp
pop
clc
dec
mov
or
xchg
mov
lcall
fsubs
dec
pop
jle
xor
ljmp
stos
sbb
ss
jle
cld
adc
or
outsb
or
dec
ret
stc
inc
insb
xor
pop
inc
cld
cmp
ficoms
dec
xchg
xchg
das
shlb
and
dec
sbb
movsb
dec
arpl
mov
std
lahf
xchg
or
and
fdivrl
sbb
in
mov
in
pop
adc
daa
fsubrl
xor
dec
mov
pop
movsb
lods
and
and
jae
push
mov
aad
push
fadd
push
mov
lea
das
mov
stc
sbb
push
in
andl
bound
scas
iret
test
jb
lea
xlat
std
xor
add
push
jle
mov
std
xchg
jge
or
ret
shlw
mov
es
xor
mov
adc
out
pop
in
ds
add
mov
xchg
lret
ljmp
cmp
mov
bound
or
ss
cli
es
mov
sub
in
jmp
dec
lods
inc
and
adc
inc
hlt
outsl
imul
ss
pop
mov
lods
xor
jno
mov
push
inc
add
in
jnp
std
test
add
pop
mov
add
add
outsl
outsb
push
sbb
inc
adc
in
mov
clc
pop
xchg
ljmp
lock
lock
les
xor
cmp
add
stos
xor
lret
cmpsl
add
mov
jno
jmp
std
push
ja
inc
fs
pop
pusha
dec
mov
mov
into
rol
pop
xchg
adc
jno
ficompl
in
inc
xchg
daa
mov
dec
push
cmp
mov
sbb
inc
les
sub
clflush
mov
xchg
mov
pop
cld
dec
fmul
xchg
push
inc
test
xor
inc
in
movsl
push
push
leave
loopne
xor
dec
negb
mov
loope
pushf
movsb
and
arpl
ss
scas
mov
adc
xor
rolb
sub
flds
add
pop
jecxz
fwait
xorl
sbb
mov
sbb
cmp
jle
mov
aas
arpl
push
lea
mov
adc
sbb
pop
inc
int
call
fs
pop
test
or
mov
shll
xor
xchg
mov
push
xor
fs
xor
scas
incb
bound
adc
jl
push
mov
in
xor
mov
leave
pop
jp
fists
jg
inc
lock
inc
scas
stc
scas
cmpb
jecxz
adc
cmp
adcb
mov
fdivp
jge
sbbl
popf
sub
jp
sbb
sub
adc
roll
lahf
pop
pop
cmp
shrl
mov
mov
aam
loopne
enter
in
enter
xlat
repz
mov
cmp
outsl
loopne
ret
sbb
ljmp
imul
dec
scas
xor
add
pop
sub
data16
xchg
rorl
rep
dec
and
fisttpl
scas
in
ja
es
rol
fisubl
fstpl
push
push
xchg
out
movsb
xchg
pusha
jge
test
sbb
shl
int
add
pop
in
mov
hlt
or
ljmp
out
int
movsl
add
ja
das
es
loop
leave
and
mov
stos
sub
push
addps
push
es
cli
and
popf
sbb
or
arpl
and
jbe
inc
mov
pusha
push
pop
mov
jecxz
cmpsl
inc
jae
push
dec
movsl
cmp
and
hlt
nop
lods
jl
jmp
push
adc
cmpsb
insl
das
adc
into
fistpll
xchg
ljmp
insb
dec
jl
xor
push
cmp
mov
jmp
int3
vmaxsd
mov
mov
push
add
add
adc
fcmovnu
mov
adc
xor
jg
inc
mov
int
and
in
add
sub
roll
mov
sub
jle
jnp
inc
dec
pop
sub
sahf
imul
insb
aaa
push
cwtl
rclb
mov
xor
or
push
jo
loopne
push
xor
stos
cmp
nop
mov
xchg
sbb
es
push
mov
xchg
cwtl
std
nopl
inc
movsb
fnstcw
push
sub
mov
sub
scas
push
sbb
adc
js
dec
cmpsl
fsubs
cmp
push
pop
ret
jns
fbstp
sbb
ret
leave
mov
rclb
cmp
lret
addr16
xchg
call
cmpl
test
cmp
es
inc
xor
cwtl
mov
add
sbb
ja
loopne
popf
ss
mov
xor
inc
imul
jmp
mov
pop
xor
fs
cltd
xorb
or
xor
adc
jae
cmpb
push
sbb
aaa
in
xor
add
cmpsb
adc
xchg
dec
cmc
shll
xchg
in
or
mov
or
inc
adc
mov
mov
and
insb
add
addb
out
sub
inc
cmp
sbb
or
push
or
lahf
data16
in
lret
dec
flds
adc
jp
cli
lock
aas
xor
cmp
xchg
adc
leave
std
outsb
xchg
or
pop
xchg
mov
sub
in
adc
loop
add
repz
mov
mov
mov
das
insb
aad
notl
test
inc
test
pushaw
push
rcr
aas
mov
out
rcrb
lea
add
inc
ja
and
sub
push
out
in
je
xor
int3
push
leave
js
stc
rclb
xchg
inc
xor
sub
add
pop
shlb
cld
out
int
inc
jbe
cmp
cmp
mov
push
mov
dec
and
mov
aaa
push
mov
loopne
add
pop
adc
mov
pop
lods
mov
pop
push
jno
pop
sbb
es
mov
or
xchg
jno
mov
mov
popa
cwtl
push
pop
cltd
push
inc
stos
mov
ja
adc
movsb
int3
imul
insl
int3
lcall
jg
or
push
adc
ljmp
inc
mov
xchg
jecxz
jae
cmp
jae
mov
sbb
push
fwait
jmp
cltd
mov
arpl
sbb
adc
jle
and
xchg
jecxz
xchg
mov
mov
fcomi
push
popa
je
aas
add
test
xchg
dec
test
sub
add
loop
imulb
mov
fdivl
rcrb
jae
das
in
mov
mov
xor
iret
into
jle
lahf
mov
rcrb
sti
sti
jno
in
and
lds
imul
push
mov
mov
sbb
rcl
inc
hlt
mov
or
cli
mov
aam
sbb
pop
out
pop
lods
push
nop
repz
xchg
pop
fs
add
lret
cmp
flds
and
outsl
iret
and
enter
pop
dec
fisttpl
sub
xchg
popa
mulb
in
add
xchg
je
stc
sub
out
jle
push
push
mov
sub
mov
sbb
dec
cmc
sahf
and
jmp
adc
jb
enter
jae
xchg
fsub
daa
femms
das
dec
add
lcall
fs
lret
shll
clc
testb
divb
jbe
or
icebp
aam
push
xor
jmp
dec
fistpll
mov
fcmovnu
out
push
pop
pusha
out
sahf
mov
outsb
das
xor
cli
or
sub
vpshaw
push
sbb
arpl
adc
or
mov
jo
adc
jg
adc
aam
push
and
sub
lret
test
test
add
xchg
xchg
mov
pop
stos
pop
add
sbb
sbb
mov
mov
jmp
xchg
rolb
mov
push
cmpsl
push
inc
xchg
inc
jle
rorl
aam
ret
adc
pop
insb
or
sub
sub
outsl
mov
insb
and
add
adc
inc
push
test
mov
pop
mov
pop
aam
push
mov
out
add
aad
mov
lock
fadd
ljmp
adc
je
pop
std
roll
repz
xchg
stos
pop
mov
scas
adcb
out
fs
ds
sbb
loop
sahf
lods
in
stos
repnz
sarl
in
mov
pand
dec
mov
jae
inc
pop
pop
jl
sarb
push
sbb
adc
push
xchg
cmc
lahf
loope
jmp
jmp
add
test
int3
cmp
icebp
arpl
js
inc
mov
dec
sti
mov
ror
insl
pop
xchg
mov
nop
addr16
fcoms
dec
xchg
push
cmp
aad
cmp
sbb
lahf
loope
mov
jb
test
xchg
sbb
insl
ret
int
push
frstor
sbb
lock
sbb
or
cmp
or
push
scas
std
push
jmp
call
xchg
int3
sub
bound
push
outsb
inc
dec
adc
dec
pop
aam
xor
pop
aaa
rcll
push
mov
inc
mov
sbb
mov
pop
inc
pop
fmull
popf
clc
lds
pop
clc
mov
ret
clc
sbb
dec
or
test
jne
repnz
shl
pusha
mov
xor
lods
inc
in
push
imulb
fidivs
std
mov
cmc
adc
ja
popf
mov
ljmp
rcrl
rcr
aam
cmp
mov
popf
inc
repnz
sbbl
rolb
fcomps
xchg
int3
inc
decb
sbb
cmp
inc
pop
call
in
ds
cld
sbb
cmp
in
add
mov
fstpl
sub
insb
das
push
sbb
pop
lods
xor
xor
adc
mov
sahf
call
test
jns
sbb
adc
fwait
dec
jae
inc
in
pop
fadds
aaa
lret
ret
and
or
ds
cmpsl
mov
push
jge
push
cmp
std
pop
inc
mov
cmc
cwtl
add
inc
xchg
mov
adc
cmpsb
gs
aad
scas
xor
cmp
push
adc
ja
pop
cli
push
test
das
stos
gs
movsb
enter
outsb
dec
in
adc
jo
cmc
jne
inc
cmpsb
adc
pop
jmp
insb
adc
inc
dec
subb
ds
out
popa
iret
shlb
jnp
andl
outsb
mull
stos
jno
xchg
jp
out
test
leave
push
or
mov
mov
jnp
addl
dec
mov
push
jb
fmuls
jg
adc
icebp
stos
leave
aaa
leave
fmulp
stos
and
insb
cmp
dec
dec
xchg
inc
imul
and
add
add
inc
mov
inc
push
push
mov
or
faddl
in
add
add
leave
xchg
fnstsw
and
mov
hlt
shll
jge
test
insl
dec
sbb
adc
xor
rcl
lods
fisttpl
outsl
roll
and
mov
inc
das
scas
xor
ljmp
push
and
int
stos
mov
sub
dec
dec
shrb
mov
rolb
push
mov
xlat
cmp
mov
push
push
hlt
das
daa
xor
outsb
lock
push
jns
mov
ds
xchg
add
inc
cmp
and
loopne
imul
inc
cmp
mov
add
pushf
fidivl
lock
mov
imul
jmp
rcr
les
mov
rclb
jp
xchg
fwait
gs
jmp
lea
cmc
or
lret
stc
lahf
jb
cli
xchg
pushf
sbb
or
ret
or
fnstsw
mov
rcll
pop
cli
sub
xchg
pop
push
fst
or
lret
jg
ret
mov
inc
fbstp
jmp
jp
or
into
xchg
push
sbbb
test
stc
or
incl
ja
sub
and
fwait
or
idiv
xchg
movb
shll
or
inc
and
ds
pop
push
ss
pusha
cmp
rol
movsb
lret
pop
test
mov
hlt
adc
mov
aam
adc
xor
jl
inc
jnp
xchg
mov
movsl
sub
push
int
push
fstpt
push
mov
jle
mov
xchg
lods
leave
xor
xchg
xor
mov
mov
enter
push
out
aaa
sti
push
std
mov
mov
ss
mov
xchg
push
sti
sbb
sub
repz
adc
cmp
ret
dec
mov
fdivrl
sbb
cs
jle
inc
cs
sbb
add
fwait
dec
adc
xchg
inc
call
sub
lahf
xlat
xchg
xlat
outsl
das
addb
mov
cmp
xchg
jae
fidivs
push
movsb
adc
push
push
mov
cmp
iret
adc
or
jno
outsl
push
add
sub
xor
push
lahf
out
enter
mov
sbb
xor
in
fmul
xchg
xor
and
loope
sub
andl
aaa
fucomp
mov
aam
dec
imul
or
test
cmpsb
cmp
mov
sub
js
incl
pop
fmull
loopne
in
ds
test
mov
cmc
stos
int3
add
fs
cmpsb
aad
lock
sub
cwtl
std
enter
pop
imul
sahf
cld
loop
lods
pushl
outsl
adc
cmp
jle
insb
xchg
aad
xchg
push
in
outsl
je
adcl
test
xchg
or
pop
pusha
sbb
sarb
sbb
repnz
addr16
pop
sub
jo
push
out
nop
les
sbb
stos
leave
cs
cmp
daa
test
pop
xchg
hlt
daa
rorl
test
aad
sbb
jle
into
xlat
les
add
imul
xor
insb
jo
stos
jle
sub
xchg
and
mov
sub
mov
loope
cltd
push
pop
sbb
mov
sub
scas
pop
out
fstp
inc
xchg
pop
adc
push
sbb
test
inc
xchg
push
cs
cmpsl
sarb
and
jmp
ficoml
repz
fdivrl
jge
scas
test
or
in
push
push
jmp
or
hlt
into
dec
mov
xchg
sbb
and
mov
in
lret
cmp
mov
jns
dec
push
pop
sbb
movsb
lods
sub
mov
loope
or
push
mov
push
mov
pop
inc
int3
cmp
pop
pop
xchg
rclb
call
xchg
aad
out
pop
mov
xor
xchg
sub
xor
insl
cwtl
adcl
cmp
mov
sub
in
inc
sbb
imul
inc
dec
nop
lret
sub
sbb
das
inc
mov
lods
mov
jo
xor
mov
pop
jb
les
sahf
inc
inc
push
sbb
jmp
push
sti
aam
andl
or
ret
jmp
mov
fbstp
ret
push
fst
cltd
xchg
test
or
movsl
stos
cltd
push
adc
or
xor
sub
push
mov
push
and
push
sbb
xor
in
mov
loopne
jnp
sbb
fs
pop
test
fnstcw
cltd
movsb
dec
dec
cmpsl
test
mov
lcall
or
adc
imulb
or
push
test
and
sbb
data16
xor
xor
sahf
adc
jno
or
fmuls
or
dec
out
xchg
mov
ret
in
jmp
mov
pop
rcl
sub
xchg
mov
inc
jae
imul
enter
dec
int3
sub
popa
xchg
es
inc
aaa
mov
push
ds
repz
daa
push
xchg
pop
cmc
int
add
jae
cmpb
xor
daa
pop
gs
pop
inc
jl
or
pop
fsubrl
ficoml
pop
xchg
add
icebp
imul
dec
lea
inc
and
popf
pop
sarb
cmpsl
jge
adc
into
sub
loopne
ljmp
cmp
adc
xchg
pop
sbb
imul
clc
pop
imul
cmc
mov
subb
jne
mov
sbbl
test
sbb
decl
loope
inc
pop
lahf
xchg
and
sar
pop
add
mov
scas
push
lret
sub
in
dec
cwtl
pop
imul
push
pop
sbb
lahf
mov
xor
outsl
stos
ss
mov
mov
push
cli
fnstsw
jle
rolb
test
sbb
xchg
icebp
aad
ja
in
jne
int3
mov
mov
xchg
push
add
jmp
enter
clc
xlat
add
std
test
dec
test
pop
movsl
cmpsl
push
add
add
mov
int3
push
mov
sbb
push
aas
scas
fsubs
cmpsl
leave
cmp
inc
scas
shll
add
cmp
mov
aad
int
inc
imull
jns
out
mov
dec
loop
and
pop
lock
cmp
movsl
mov
mov
and
les
cltd
bound
repz
jno
inc
inc
push
les
pop
jl
mov
jge
and
lret
sahf
leave
fcompl
lahf
push
xlat
flds
dec
sti
scas
xor
jp
xchg
or
iret
push
fcomip
pop
xlat
rolb
dec
leave
xchg
mov
mov
push
fwait
sub
ret
mov
add
insb
enter
add
imul
adc
shrl
xor
icebp
sahf
adc
neg
js
js
push
jp
jmp
xchg
jp
jl
inc
push
dec
push
dec
mov
mov
shrl
int
dec
andb
mov
jge
out
aam
ret
jae
pop
sahf
jle
rol
ffreep
or
push
je
add
pop
repnz
push
fildll
data16
xor
and
ljmp
lea
pop
sti
clc
scas
outsl
jecxz
push
xlat
fbld
dec
addr16
cs
cmp
cmpsl
lcall
scas
sub
repnz
in
int
sbb
push
add
adcb
sbb
enter
ret
loop
pop
mov
jnp
pxor
fstl
mov
ljmp
push
dec
mov
mov
fcomi
inc
add
xchg
jg
jecxz
lcall
mov
rclb
dec
scas
or
imulb
and
sarb
outsl
ret
cld
mov
dec
into
sub
push
sub
shlb
xchg
mov
dec
xor
lcall
sbb
and
jge
jb
inc
filds
js
ficoms
sbb
mov
mov
mov
mov
lret
movb
rcrl
cli
adc
dec
lods
mov
lret
and
sub
mov
mov
jne
out
mov
mov
shll
sarl
add
sub
xchg
arpl
xchg
daa
mov
sub
ja
cli
ret
nop
push
fists
nop
dec
bound
imul
mov
loop
mov
jg
cltd
pop
pop
inc
jge
sub
test
dec
rclb
fnstenv
sub
das
ljmp
insb
jne
inc
pop
pop
paddw
jne
cmp
xchg
adc
insl
mov
in
inc
mov
push
outsb
mov
sbb
aam
mov
add
cmp
imul
cwtl
mov
leave
sbb
sub
fsubl
adc
inc
cwtl
and
fisttps
lods
imul
decb
out
aad
xor
inc
xor
cmp
dec
xchg
lock
cmp
mov
js
jl
dec
xor
ret
daa
cmp
outsl
in
nop
add
jae
jmp
gs
aaa
ljmp
sub
js
jg
inc
xchg
fiadds
invd
mov
pop
adc
adc
int
mov
scas
jns
out
cmp
movsl
sbb
pop
xlat
loop
push
test
push
sub
mov
or
fmul
aaa
mov
or
push
lea
mov
sbb
leave
jbe
data16
sti
mov
pop
jne
pop
movsl
roll
out
xchg
jecxz
sbb
pushf
movsl
mov
xor
mov
sbb
xor
and
pop
adc
pop
movsb
lea
pusha
mov
test
enter
jecxz
arpl
orl
pop
sbb
jmp
into
ret
mov
popa
push
ret
cs
sahf
mov
jbe
dec
xor
sti
jecxz
lock
nop
movsl
push
pop
out
popa
xchg
ss
cmovle
and
movl
clc
pop
cmpsl
mov
xchg
adc
aaa
lret
push
mov
rorl
xor
mov
out
and
inc
mov
lret
pushf
adc
mov
mov
adc
mov
mov
ds
adc
clc
mov
mov
fbld
shrb
push
lds
xchg
addr16
in
adc
cmp
std
scas
lahf
xchg
lods
sub
cmc
push
push
jbe
push
mov
test
lock
jecxz
push
dec
inc
sarl
ss
testb
inc
imul
push
sub
inc
adc
xor
mov
cmp
mov
insl
fadds
push
inc
inc
stos
lcall
mov
mov
mov
xor
mov
je,pt
shll
xlat
cmp
shr
js
aaa
in
sbb
jnp
xchg
adc
hlt
mov
jo
cli
xorl
mov
jmp
sbb
fadds
xchg
xor
push
icebp
push
push
nop
and
push
sub
cmpsb
adc
xchg
int
stos
push
mov
dec
insb
and
dec
cmc
imul
out
ss
xchg
mov
sub
lods
movsb
ja
psubd
in
sbb
push
add
jge
and
xchg
push
xchg
mov
mov
call
mov
incb
xor
or
movsl
push
pop
pop
lret
adc
loopne
std
out
push
movsl
inc
mov
and
out
fcoml
movsb
iret
xchg
and
pusha
push
rcll
mov
xor
mov
cwtl
dec
in
sahf
dec
lock
enter
and
or
pop
dec
xchg
xor
push
mov
leave
int3
psubusb
xchg
push
lahf
jne
sub
es
sub
cmp
jmp
xor
inc
inc
cmp
iret
fcomp
push
pop
clc
mov
loope
fiaddl
mov
clc
xor
imul
cmp
add
xchg
and
aaa
fs
cmp
int3
out
popa
repz
mov
and
scas
add
adc
sbb
cmp
push
or
mov
fildl
mov
sbb
testl
mov
xchg
arpl
push
clc
inc
ja
sub
shlb
mov
add
ss
or
dec
mov
ret
push
push
ds
and
clc
push
jp
imul
out
pushf
call
sbb
fisubl
loopne
sub
xchg
call
adc
mov
cmc
int3
cmp
icebp
fs
jecxz
sbb
inc
cld
in
scas
jecxz
pop
sar
xorb
xchg
xchg
xchg
int3
mov
movsl
xor
cld
inc
or
out
cmp
or
and
outsl
jle
cli
addr16
sbb
and
sub
push
xchg
sub
or
xor
xlat
movlhps
test
insb
rorb
insl
xor
sbb
mov
aas
or
jge
jns
and
call
imul
fstpl
in
into
push
cmp
xchg
push
out
xchg
outsl
ficoms
push
mov
add
icebp
pusha
cmp
sbb
mulb
aam
test
mov
orl
shr
cld
cmp
pop
inc
pop
imul
push
mov
scas
in
push
cmpsl
add
aam
insl
outsl
daa
test
push
inc
imul
push
dec
scas
nop
pop
cmc
mov
inc
add
jno
aaa
insb
call
leave
test
sti
js
jle
test
scas
insl
adc
loopne
sbb
outsb
mov
sarb
leave
pop
xchg
out
adc
pop
adc
pop
push
mov
ja
adc
imul
cli
jp
movsb
xchg
push
inc
push
out
sahf
test
orb
mov
ljmp
cltd
mov
mov
push
push
inc
stos
jle
shl
cmc
dec
jle
pop
call
adc
out
in
pop
fsubrl
pop
push
pop
test
dec
sbb
jmp
or
lret
out
dec
rorl
fwait
inc
js
xchg
ret
pop
jmp
and
jg
cs
sahf
jmp
roll
dec
cmp
adc
in
cmp
stos
dec
pop
das
pop
scas
fbld
lods
push
cmpsl
fcmovnb
mov
je
mov
stc
test
mov
aas
push
das
aaa
push
mov
les
outsb
pop
aaa
fisubs
jns
incl
mov
fisubrs
mov
xor
adc
daa
addr16
or
icebp
sub
js
dec
pop
cs
push
add
dec
jbe
push
fadd
loopne
aaa
cmc
fcomps
xlat
movsb
mov
lahf
js
push
pop
int
dec
daa
sbb
fsubs
xlat
dec
mov
xchg
push
gs
cmpl
sbb
mov
fistpll
jnp
xor
in
xor
mov
xchg
xor
jns
xor
gs
pop
mov
mov
inc
movsb
ret
jo
sub
xor
xchg
imul
imul
rorl
in
cwtl
repnz
sahf
cmpsl
mov
sbb
inc
int3
fninit
push
sub
push
int3
cmp
pop
mov
fidivrs
xchg
aad
cmp
cmp
fiadds
bnd
sbb
fldt
les
arpl
pop
or
jb
cmp
out
jb
loope
xorb
dec
pop
scas
imul
nop
mov
in
pop
mulb
add
lcall
ljmp
ja
pusha
or
out
out
int
mov
mov
lcall
insb
fstpl
fsubs
rclb
sbb
div
xchg
shll
pop
sub
xchg
adc
ret
mov
and
out
daa
loope
jge
mov
dec
cwtl
jg
sarl
leave
pushf
data16
add
mov
fcomip
mov
mov
mov
jnp
jno
or
sysret
add
insl
adc
les
cmp
xorb
stc
pop
adc
shl
outsl
cli
push
stc
scas
add
push
push
mov
les
mov
int
or
ss
sbb
and
jge
dec
sbb
cmpsl
ds
add
pop
pop
mov
dec
inc
push
mov
sub
daa
mov
and
iret
les
pop
lahf
mov
das
jb
dec
outsb
mov
popf
jnp
pop
sbb
sub
out
aas
sbb
xchg
jns
ljmp
jl
mov
and
mov
sub
stc
dec
jns
xchg
push
xchg
mov
stos
sub
pusha
test
jmp
sub
ljmp
pop
push
fisubrl
lea
or
mov
test
xchg
xchg
sub
pop
rclb
ficompl
pop
inc
adc
rcpss
xor
cmpsl
sti
sbb
xlat
push
repnz
pop
mov
ret
xor
adc
sub
shl
inc
adc
cmp
frstor
pusha
push
adc
adc
cwtl
and
fbld
in
aad
ds
dec
cli
sub
fsubr
xor
cmp
data16
sub
stos
mov
aam
add
add
lods
sub
jnp
popa
rcl
lock
mov
push
in
ret
insb
pop
jge
mov
pop
push
aaa
arpl
cmp
mov
lds
mov
popa
sbb
jl
dec
int3
orb
in
das
inc
fucomip
or
mov
and
mov
nop
imul
in
mov
aas
pop
xchg
push
push
pop
mov
and
imul
sub
ret
pop
je
rol
xor
push
mov
or
or
fwait
rcll
xchg
rol
adcl
test
xlat
fwait
out
mov
add
xchg
je
sbb
aad
iret
ret
add
lea
imul
rcrb
cmpb
sub
je
not
inc
movb
push
sbb
jae
in
mov
mov
inc
cmp
ret
sahf
mov
xor
cmp
pop
notb
stos
data16
lds
test
mov
adc
jbe
push
test
pushf
dec
test
xor
sarb
std
sbb
inc
sub
jge
and
lret
push
mov
cmpb
mov
sub
fmuls
in
stos
inc
cld
cmp
push
cltd
loop
fidivs
repz
jae
andl
pop
jo
or
leave
leave
mov
adc
pop
lock
enter
push
aas
and
scas
lcall
push
pop
outsl
jmp
insl
mov
mov
aam
stos
add
mov
fwait
mov
mov
shrl
inc
and
shll
aas
pop
mov
sub
mov
out
xor
lcall
iret
scas
lds
out
imul
adc
lret
cltd
push
pop
jg
adc
xor
out
fwait
insb
iret
mov
sub
lock
mov
sbb
out
movsb
xchg
mov
repnz
sub
or
mov
push
mov
sbb
mov
js
in
mov
stos
add
cmp
sbb
adc
push
mov
jnp
adc
fmuls
xchg
push
rcrl
arpl
mov
inc
and
dec
scas
das
addb
aad
lret
movsl
jmp
fisttpl
and
test
mov
mov
adcl
cmpsb
push
xchg
mov
sub
jp
inc
mov
test
jae
add
dec
add
adc
mov
out
ss
pop
and
pop
test
test
push
push
sub
fisttpll
add
fisubrl
inc
fstp
inc
into
outsb
lds
loopne
jp
cmp
pop
fmul
lods
decw
into
mov
and
test
adc
movsb
sbb
inc
pusha
bound
pop
mov
sahf
pop
pusha
cmp
add
pusha
inc
cmp
xor
daa
test
sub
dec
movsb
xor
ss
cmpsl
js
adc
out
sti
outsb
test
inc
and
dec
notb
jmp
dec
adc
jle
xor
leave
fwait
inc
add
push
movsb
popa
push
rclb
inc
fsubp
push
shlb
dec
jle
jp
popa
lcall
dec
mov
pop
in
and
cmp
daa
mov
insb
stos
jb
negb
imul
daa
call
inc
and
cmp
fcmovu
leave
xor
cmp
pop
push
ret
push
subl
nop
and
lds
add
imul
pop
adc
pop
pop
scas
mov
mov
fldenv
pop
stos
inc
iret
mov
sbb
mov
shll
cltd
sub
jmp
jo
xchg
ja
xor
aam
xchg
pop
push
or
out
and
jle
testl
cmp
cltd
xor
pop
aam
or
addr16
jae
movsl
imul
mov
mov
test
in
outsb
pop
adc
cmp
xchg
ja
stos
test
stos
pop
adc
bound
dec
xor
fwait
lcall
cmp
jb
lock
int
pop
push
sbb
sahf
sahf
cmpsb
cmp
jp
rorl
loopne
out
mov
ja
mov
lds
add
imul
push
mov
mov
push
sbb
sahf
test
inc
mov
mov
repz
adc
inc
mov
clc
mov
dec
or
scas
sbb
test
mov
add
sub
mov
sbb
adc
paddsb
cmp
andl
insl
push
stos
push
mov
mov
push
repz
fcmovbe
aam
sbb
hlt
fst
aas
gs
cmp
push
push
dec
add
pusha
mov
lret
sbb
cmpsl
push
cmc
outsl
out
dec
lods
out
jne
sbb
leave
sub
das
dec
adc
or
or
nop
imul
jb
adc
insl
inc
clc
and
add
movsb
nop
andb
pop
xor
inc
push
lcall
inc
sbb
roll
push
jle
cmpb
lcall
xchg
iret
mov
jmp
loopne
out
shl
push
cmp
inc
mov
lds
clc
mov
js
cmp
or
mov
adc
jo
mov
mov
jno
pop
cmp
jg
mov
call
mov
in
ret
pop
aad
cmp
adc
inc
mov
iret
mov
test
and
mov
xchg
xor
lods
push
and
fwait
cmp
xchg
push
add
mov
dec
cld
inc
in
sbbb
testb
bound
lret
hlt
mov
leave
mov
loop
ret
in
jbe
mov
mov
outsb
mov
xor
sbb
pop
movsl
sbb
testb
adc
mov
arpl
jle
data16
insl
bt
aas
gs
mov
xor
repz
in
adc
add
mov
popa
mov
xor
ret
sarl
hlt
pop
fadd
loope
xchg
xor
mov
jl
stc
and
addl
xor
jg
dec
cmpsb
pusha
insl
rdpmc
pop
iret
fs
in
push
shll
mov
dec
cwtl
rclb
jo
fs
fstpl
mov
fwait
inc
cmp
lret
xchg
imul
test
aas
pop
inc
and
xchg
mov
mov
fidivs
xchg
out
pop
bound
xor
lock
jg
fbld
push
addr16
decb
xchg
xchg
xor
cs
push
ficomps
mov
mov
jne
pop
sbb
fldl
cld
sub
movsb
adc
xchg
jmp
pop
je
xor
xchg
fsts
sbb
cltd
repnz
mov
dec
pop
out
fsubl
xor
shrl
pop
movsb
sbb
cld
cwtl
mov
push
test
notb
rolb
add
mov
jle
push
cmpsl
xlat
lcall
in
pop
pop
jne
xchg
cwtl
subl
adc
pop
addl
jno
push
cmpsl
mov
xor
or
mov
add
push
add
out
xchg
sbb
push
cmp
mov
push
ret
and
pop
lea
je
jmp
leave
out
dec
popf
test
std
sbb
cs
and
add
mov
mov
sahf
fistpll
mov
mov
xor
sub
in
lds
pop
lahf
mov
int
sbb
xorb
mov
mov
decl
insb
or
es
jbe
out
adcb
xor
jo
movsl
sarb
loope
jp
mov
mov
xchg
in
lea
and
or
pusha
push
scas
shll
cmp
ljmp
gs
jae
push
cmpsb
sbb
pop
loopne
xor
roll
iret
or
popa
ret
lret
imul
mov
jnp
out
shl
pushf
or
cs
mov
sub
cmpsl
call
sub
ss
inc
fwait
inc
ljmp
dec
lahf
ds
int3
jl
push
mov
cmp
or
inc
aas
rcrl
fildll
inc
cmp
pop
cmpsb
cmp
pop
xchg
sbb
xchg
jg
pop
bound
push
inc
mov
loope
or
in
push
sbb
enter
out
lret
push
enter
adc
add
adcb
ret
xchg
xchg
cmp
inc
and
popf
movsl
xchg
and
xchg
ljmp
sub
xchg
pop
popa
xchg
arpl
xlat
insb
iret
pusha
xor
jnp
jg
popa
mov
xchg
lds
fsubs
cli
jp
mov
inc
loope
xor
pop
sarb
sbb
mov
cld
mulb
mov
xor
fisubrs
jnp
cmp
rolb
jne
fnstenv
inc
iret
cmp
pop
mov
sub
lret
jmp
and
sbb
mov
or
mov
ret
sti
fcomps
xor
and
push
adc
and
lcall
mov
mov
jle
mov
sbb
jae
fildl
sbbl
push
jge
loop
push
int3
inc
pop
cli
ret
jp
inc
repnz
jmp
or
dec
mov
jo
sub
jo
imul
xor
xor
nop
loop
sbb
insl
repnz
lods
xor
cmpsl
xchg
andb
add
mov
ficoms
mov
sub
dec
sbb
xor
cs
mov
fs
and
mov
into
sbb
mov
imul
gs
xchg
mov
repnz
mov
lds
jo
cs
mov
mov
sub
test
xor
push
xchg
xchg
cmp
adc
mov
and
rcl
cmpsb
ss
add
nop
inc
iret
std
inc
xor
mov
std
xchg
xchg
repz
add
andl
mov
jnp
loopne
and
and
lods
lods
imulb
arpl
cmp
sub
or
out
pusha
pop
movsb
push
leave
dec
inc
out
sbb
dec
xchg
lret
add
shll
out
popa
push
and
in
inc
mov
and
xchg
loopne
clc
bound
sbbl
test
cmp
mov
mulb
adc
push
push
add
jmp
jecxz
sbbl
out
sub
and
rdtsc
aam
test
inc
sub
pop
sbb
nopl
cmp
adc
scas
repnz
jo
or
mov
mov
dec
dec
and
cwtl
inc
hlt
fs
sbb
dec
push
js
adc
push
and
incb
inc
enter
cmp
popf
pop
jecxz
push
dec
inc
rcl
pop
insl
rsqrtps
pop
dec
movl
pop
adc
aam
add
jbe
les
inc
cmp
gs
test
xchg
sub
pop
lret
adc
mov
loopne
andb
xchg
test
fidivl
shl
jg
out
mov
jne
xchg
cli
push
lcall
inc
fstpt
mov
lods
in
jl
xor
enter
repz
cmp
out
pop
fcompl
pop
cltd
sub
iret
test
add
sub
divb
out
cmp
adc
xor
aam
mov
hlt
loop
cmp
mov
in
loopne
data16
mov
ffree
pusha
js
mov
dec
xchg
add
out
cmp
push
cmp
scas
arpl
fidivl
mov
sbb
inc
pop
cld
inc
icebp
jbe
lods
sahf
jnp
adc
jns
xchg
sti
jno
mov
dec
or
and
cltd
mov
lret
lahf
divb
jecxz
mov
add
popa
mov
das
js,pn
adc
xor
cmpb
pop
push
dec
fiadds
fs
sub
push
out
push
mov
and
push
lods
xor
xor
lock
jbe
xchg
mov
shlb
push
pushl
dec
hlt
xchg
push
clc
clc
nop
nop
cmp
and
outsb
in
cli
xchg
mov
jno
jg
inc
push
cmp
cmpsl
call
pop
adc
push
jl
xchg
ss
in
xchg
xchg
sub
pop
fnstcw
shrl
loop
js
fstpl
repz
lret
pusha
and
add
xor
push
rcl
adc
int
stc
stos
loopne
jnp
mov
into
test
xchg
pop
hlt
cmp
mov
popf
adc
push
ss
or
mov
mov
enter
pop
cmp
push
test
add
xor
or
mov
dec
pop
fnsave
mov
es
pushf
stc
repnz
cmpsl
cmp
push
push
cmpsl
daa
xchg
in
sub
dec
cmpsl
fistps
gs
pop
lock
bound
mov
cli
insb
jo
cmp
adc
inc
jg
sub
fdivs
adc
mov
push
sub
je
pop
pop
ljmp
faddl
enter
sub
mov
icebp
jne
lods
aas
imul
xlat
xor
sarb
rcr
shll
fidivrl
mov
push
sbb
mov
pop
cmp
rcl
testl
notb
xchg
in
xor
inc
test
loop
aam
cmc
fld
cltd
jp
jl
addr16
cmp
les
and
std
lods
test
pop
pop
ret
iret
push
cmpsl
stos
dec
neg
xchg
pop
sub
iret
sbb
xor
push
xlat
call
js
push
cmp
jecxz
inc
je
inc
lcall
push
stc
pop
hlt
fbstp
mov
outsl
and
je
test
out
hlt
jp
jecxz
loope
loope
inc
sahf
imull
cld
cli
lods
sti
sub
lods
mov
scas
lcall
out
rcrl
imul
je
cltd
jmp
lret
push
push
pop
or
jmp
test
mov
and
movsb
add
fildll
jno
enter
xlat
sbbb
push
mov
mov
sarb
shrb
sub
xchg
dec
jns
hlt
xchg
xor
sbb
in
imull
ljmp
mov
jnp
dec
lods
push
jnp
scas
xchg
mov
xor
inc
mov
in
jmp
push
popa
pop
push
dec
enter
rorl
and
or
scas
lods
push
cmc
cmp
push
or
xor
jo
pop
cmp
jle
test
add
fxch
fcmovb
outsl
dec
sbb
add
ss
mov
mov
dec
lds
lds
inc
arpl
inc
add
fiaddl
orl
xor
push
push
and
or
mov
stc
lret
pop
pop
push
or
cmp
enter
icebp
xchg
xchg
push
inc
cs
lods
stos
sarl
scas
sub
test
inc
test
and
xor
arpl
mov
pop
call
shlb
adc
mov
aas
inc
movsb
or
sti
adc
shll
inc
arpl
cmp
pushf
mov
dec
mov
es
jo
jp
cwtl
cmp
and
cmp
xchg
in
psrld
xor
mov
imulb
test
test
out
stos
mov
cmp
cli
sahf
pushf
sbb
xor
sub
popf
push
mov
fnstsw
andl
out
clc
subl
mov
daa
pop
lods
mov
pop
cmp
shll
sub
shlb
addr16
cmp
outsl
sub
ret
lcall
adc
push
into
sbb
mov
xchg
test
test
pop
out
and
inc
xchg
imull
inc
leave
sbb
sub
cmpl
fisubs
ret
js
rclb
fs
aas
add
lcall
and
jg
xchg
cmp
pop
inc
lcall
dec
pusha
addr16
pop
mov
sahf
test
mov
out
out
jns
in
je
pop
dec
rcll
xchg
fwait
sub
test
push
enter
adcl
nop
sub
push
push
mov
add
mov
cmp
loopne
hlt
pop
and
jbe
rorl
mov
addr16
cmp
jo
popa
in
add
sub
test
outsb
pop
pop
and
cmpl
jle
or
xchg
sub
stc
jae
cmp
mov
or
mov
mov
cmp
test
xchg
inc
bound
pop
adc
adc
add
sbb
cmp
fisubrl
mov
add
in
pushf
call
fwait
push
add
data16
insl
and
pop
repnz
int
lock
fsubl
xchg
aas
jo
movsl
xor
sub
out
pop
insb
shlb
nop
fldz
insl
in
and
pop
adc
das
xor
xor
jae
sub
ds
cmpsb
mov
ljmp
insb
add
sahf
push
xchg
mov
cmp
movsl
push
repnz
mov
andb
fldcw
or
fcomp
cmp
push
push
and
jle
fsub
lret
jae
mov
imulb
sub
divl
mov
lea
sbbl
lods
sub
push
push
sub
jae
jg
add
jmp
and
pop
pop
cs
stos
mov
or
pop
sub
inc
out
push
mov
out
push
sti
sbb
xlat
cmp
fiaddl
or
movsb
mov
cmp
mov
mov
pusha
fnstcw
movzbl
mov
mov
xor
loopne
xor
sbb
mov
jbe
test
inc
xchg
das
push
ret
scas
mov
cmp
push
adc
xor
test
mov
out
das
or
mov
jae
out
mov
les
xor
dec
or
and
iret
into
in
mov
fisttpll
dec
aam
cmpsl
lods
pop
jp
mov
add
and
sbb
out
loop
jge
or
jmp
or
shlb
jns
addb
rcrb
loopne
addr16
or
in
cmp
out
xchg
shr
cli
push
dec
outsb
fcoml
fwait
sbb
and
xchg
or
imul
jae
jecxz
mov
mov
pop
dec
sub
xchg
mov
dec
das
pop
cmp
sbb
stc
movsl
mull
pop
inc
out
push
popa
stc
xchg
add
mov
sbb
xchg
popl
sub
xor
inc
hlt
rorl
xchg
movsb
test
xor
xorl
push
sub
mov
pusha
or
jl
jmp
insl
bnd
and
loope
adc
fists
or
push
fldt
cmpsl
ja
daa
jecxz
mov
insb
leave
cmpsl
in
pop
sub
inc
movsb
jge
adc
ds
dec
leave
in
mov
iret
dec
dec
addl
test
xchg
ret
add
cmp
sbbl
or
ljmp
les
jne,pt
pop
mov
add
cs
xor
sub
scas
sbb
xor
iret
xor
mov
xor
jg
lret
mov
popa
add
mov
gs
xor
subb
dec
repz
out
lods
or
repz
fstps
mov
ret
mov
inc
add
ss
js
xor
xchg
cs
adcb
leave
fildll
js
imul
dec
es
loopne
sti
or
leave
mov
std
add
cmpsb
out
xchg
or
cmpsl
or
test
shll
xchg
jo
fisubrs
jmp
dec
jne
inc
into
adc
jg
inc
mov
push
mov
pop
in
xchg
adcl
mov
xchg
int
and
stc
test
lock
test
dec
sub
loop
xor
and
fistl
dec
inc
repz
imul
stos
add
inc
jmp
or
daa
mov
cmc
mov
sub
mov
pop
push
shlb
sbb
rorb
iret
sarl
adc
rorb
loopne
or
cmpsl
cs
or
out
jnp
stos
inc
lret
cmpsl
scas
mov
pop
rorb
test
aas
in
insb
jge
sub
pop
and
add
loopne
mov
loope
sahf
mov
dec
mov
and
jnp
jg
jge
cld
push
inc
inc
rcr
popf
adc
and
fucomp
cmp
and
push
movsl
sbbb
dec
imull
int
popf
add
mov
bound
js
push
shll
stc
mov
pop
pop
nop
ror
out
out
icebp
mov
fcompl
sbb
xchg
inc
xadd
int
xlat
xor
mov
adc
in
pop
cli
fdivrp
pushf
scas
or
packssdw
mov
andb
pushf
cltd
fstps
pop
repz
pushf
pusha
push
push
jae
push
loope
sbbb
push
add
ljmp
add
mov
lret
mov
sbb
sbb
sub
test
cmp
cmpsb
dec
outsb
mov
adc
mov
dec
mov
jae
clc
sahf
push
mov
stos
ja
adc
or
mov
xor
daa
inc
das
call
arpl
cmc
outsl
ret
inc
in
clc
jecxz
mov
sbb
cmpsb
dec
xchg
mov
test
xchg
in
call
testb
xchg
mov
outsl
mov
xchg
js
and
inc
mov
mov
pop
inc
in
push
dec
sbb
inc
sub
xlat
sub
mov
mov
jmp
inc
sbb
xorb
sub
xor
mov
xorl
daa
movsb
add
in
xchg
loopne
jge
ds
cli
sbb
mov
mov
insb
js
lea
das
ss
les
jo
jne
lods
into
fcomip
inc
and
mov
inc
sbb
or
mov
lret
dec
cmp
add
test
stc
and
pop
lods
and
sub
add
xchg
jo
insb
js
jl
rorl
lods
cmpsb
andl
xchg
popf
fldt
mov
out
xchg
aaa
shl
mov
push
sbb
icebp
or
imul
inc
cmpsl
jne
popf
in
sar
pop
pop
jge
clc
fcoms
pusha
and
mov
bound
pop
mov
daa
sub
pop
mov
adc
push
cs
push
adc
icebp
push
int
cmp
xchg
sbb
scas
jle
xor
rcl
add
mov
fadds
inc
scas
add
adc
hlt
lea
add
xchg
lods
in
sahf
add
sbb
mov
mov
mov
jne
dec
scas
stos
inc
les
xchg
rolb
jae
pop
data16
and
or
push
and
pop
fisubl
mov
jb
push
fbstp
shlb
adc
cmc
in
mov
jmp
ss
cmp
xor
js
hlt
rclb
inc
jno
out
adc
and
insl
and
sub
add
dec
repz
xchg
push
xchg
xchg
lods
dec
in
test
jae
loopne
adc
test
stos
faddp
inc
pop
jmp
and
rclb
sbb
mov
mov
divl
sbb
dec
movsl
xchg
in
and
test
and
mov
mov
pushf
aaa
ret
in
enter
adc
and
dec
sbb
xor
pop
dec
into
mov
in
mov
mov
cltd
je
ss
dec
leave
jmp
jp
fadds
adc
mov
ds
xor
nop
sbb
loope
insl
jmp
sbb
fldt
inc
imul
into
aam
cmp
pop
add
pop
jo
inc
int
xor
mov
repnz
sti
por
inc
in
and
or
js
adc
cmp
xchg
gs
cmpsl
imul
mov
daa
and
std
fldenv
push
cmp
and
mov
jae
sub
sub
js
xchg
ds
or
dec
mov
cmp
sbb
pop
pop
xchg
cmp
inc
pop
jno
cwtl
pop
and
mov
push
xchg
sbb
ror
scas
pop
sub
fndisi(8087
divl
loop
jnp
iret
bound
jb
pushf
dec
mov
rcrl
jae
insb
inc
mov
mov
mov
cmpsb
sub
inc
mov
and
sbb
scas
test
mov
ljmp
push
xor
loope
pop
cmp
push
add
scas
aad
pop
xchg
or
and
push
add
enter
sbb
bnd
mov
cmpsl
lock
pop
mov
imul
adc
push
test
mov
scas
mov
add
aad
push
sub
or
jecxz
jae
shr
jbe
sbb
imul
pop
pop
or
sti
inc
or
and
push
sti
jae
push
fbld
fwait
push
cs
ret
sbb
and
lcall
dec
out
inc
cmc
add
jae
mov
add
add
and
pop
xor
mov
sub
or
sub
out
popf
push
xchg
repz
sub
fwait
gs
and
imul
sbb
mov
xor
xchg
fimull
xchg
fsubs
mov
ret
sbb
lret
pop
pop
cmc
dec
insb
iret
add
enter
aad
mov
add
xor
mov
cltd
add
pop
xchg
outsl
das
inc
popa
cwtl
xchg
fcomps
jle
scas
aad
add
jge
out
add
xchg
jg
pop
push
mov
daa
sbb
add
sbb
icebp
fisubs
xchg
jo
rclb
pop
sub
cli
and
jmp
xor
push
outsl
subb
dec
out
xor
filds
ljmp
inc
lock
iret
or
push
mov
or
pop
sub
adc
mov
jge
pop
sub
mov
out
mov
cmp
movsb
jl
jg
xchg
fstpl
sbb
movsb
idivb
ds
xor
ss
xor
aad
cltd
cmp
xor
pop
filds
mov
jecxz
cmc
iret
arpl
bound
mov
ret
cmp
ljmp
cli
and
jbe
xor
call
xchg
jne
cld
stc
ss
push
push
stos
lret
int
stos
sti
jb
test
imul
push
push
mov
stos
xor
jle
inc
push
cmpsl
fdivrl
dec
pop
insb
div
ret
push
stc
dec
add
cld
push
ljmp
loope
loope
scas
int
mov
adc
and
fldt
imul
stos
enter
test
ljmp
jmp
aad
test
cmpsb
lods
test
shlb
push
inc
andl
or
hlt
sub
and
xchg
mov
lret
stc
aaa
and
xor
push
sub
adc
loopne
mov
or
lret
scas
cmp
in
and
xchg
mov
subps
push
ljmp
push
inc
add
shrb
es
aam
fcmovbe
dec
shll
imul
notl
ret
and
jnp
je
icebp
xchg
mov
push
pop
loop
ret
vfrczss
rolb
adc
js
jae
and
aad
divb
sarb
cld
xchg
lret
addr16
imul
js
and
imul
mov
jae
imul
jns
inc
fwait
xchg
movsb
and
and
mov
iret
pop
fildl
mov
lods
lret
sti
jne
xlat
cwtl
xor
fsubrp
sahf
mov
call
jns
int
mov
xor
imul
dec
pop
pop
mov
adc
mov
xor
sub
inc
js
mov
cmp
add
add
adc
jns
outsl
push
ret
stos
ja
lock
mov
je
mov
mov
xor
pop
arpl
int3
ds
stc
xchg
gs
mov
es
pop
or
push
mov
mov
jbe
mov
subl
lret
aad
fidivs
sub
xchg
mov
daa
or
jecxz,pt
pop
mov
mov
in
out
mov
mov
iret
mov
push
pop
rcl
out
inc
jl
xor
jg
and
xor
lea
sbb
add
rolb
sbb
nop
mov
out
cmp
insb
dec
repz
lret
mov
jecxz
lret
inc
outsl
fwait
cwtl
dec
ret
sub
sbb
sbb
cmpsb
dec
pop
add
in
inc
mov
test
repz
imulb
jle
loope
jecxz
int
or
mov
inc
xor
jns
xchg
xor
dec
scas
loopne
xchg
jle
repz
sbb
stos
mov
mov
mov
xor
jp
fwait
jecxz
ljmp
cwtl
pop
dec
or
and
test
cltd
jae
notl
mov
cmp
out
mov
testl
std
xlat
jecxz
fidivs
int
or
mov
push
insb
sub
cmpsl
in
pushf
pop
adc
sbb
fmul
mov
add
ja
test
mov
aam
or
fwait
cltd
jo
push
nop
dec
pop
cmp
cltd
xchg
pop
adc
cmp
xor
popf
sti
imul
push
jb
or
aam
stos
jb
add
std
or
cmpsl
sbb
js
jbe
push
dec
cld
aad
jae
mov
dec
aam
gs
push
or
lret
scas
dec
lret
push
add
xorl
fisttpll
mov
ret
in
or
pop
loope
cwtl
lods
loopne
data16
or
fdivs
int
movsl
fisttps
daa
dec
fyl2x
rcrb
fsubrp
pop
sbb
movsb
adc
cmpsb
push
mov
mov
xor
mov
and
jmp
add
mov
inc
inc
pop
shll
inc
stc
cmp
and
inc
jo
push
mov
mov
jmp
or
fldt
test
jne
pop
xor
push
bound
xlat
push
rcrb
jg
rclb
je
popf
inc
cmpsl
lea
cmpsl
lods
xor
enter
xchg
adc
push
jbe
pop
xor
in
xor
out
xchg
ret
jne
repnz
out
mov
cmpsl
add
je
sbb
sbb
mov
and
or
je
mov
mov
push
xor
jmp
fimuls
xor
movsl
adc
fwait
sarl
loopne
mov
xor
addl
test
xchg
fistps
mov
mov
xor
or
xchg
into
scas
xor
aam
mov
xchg
sbb
mov
and
xchg
xor
add
push
sub
jmp
ret
into
mov
test
cld
mov
jbe
or
pop
bnd
mov
pop
or
roll
dec
mov
sub
xchg
sub
sarb
mov
pusha
sahf
in
inc
std
mov
neg
mov
outsl
lock
cmp
mov
loope
push
stos
push
cltd
inc
pushf
fdivl
aam
mov
mov
lock
mov
pop
std
shr
lock
and
loopne
jl
and
or
xor
es
pop
lret
and
mov
icebp
cmpsl
das
cmp
insb
rsqrtps
sbb
mov
insl
imull
xchg
outsl
inc
pop
fistps
jecxz,pn
mov
pop
add
imul
push
mov
xchg
inc
sub
sbb
jge
loope
or
fldcw
inc
cmc
or
mov
dec
xor
int
jne
xor
jne
lods
mov
push
dec
sub
add
sbb
in
out
dec
sbb
inc
dec
inc
or
in
mov
sbb
cmpsl
mulb
cmp
ds
xchg
xchg
popl
fidivrl
mov
dec
mov
ss
fnstenv
pop
fcomp
std
add
scas
and
inc
cli
cmc
xor
cmp
sbb
jmp
dec
add
orl
test
ret
fsubrl
jge
ret
insb
xchg
dec
jo
sbb
xor
pop
fldenv
push
adc
mov
xlat
jle
inc
shlb
adc
push
push
enter
dec
out
cmpl
xor
sub
cld
and
dec
adc
loopne
test
adc
add
or
xchg
sbb
imul
cmp
stc
andb
insb
add
adc
test
jae
cmp
xchg
lock
and
outsb
xchg
std
scas
rclb
les
mov
or
das
movsl
inc
push
xchg
jp
xchg
in
outsb
adc
scas
shr
and
roll
dec
jns
xor
dec
iret
pop
shlb
xor
popf
ljmp
cmp
iret
dec
shll
adc
out
adc
lods
lret
mov
aad
outsl
xchg
push
sub
cwtl
adc
sbb
repz
sbb
jae
mov
add
mov
mov
out
sub
das
inc
orb
push
push
emms
jne
mov
sbbl
xor
xchg
sahf
cmpsb
cmc
gs
std
iret
fs
jp
xchg
bound
ret
cmpsl
fstps
jl
mov
outsb
xchg
stos
in
popf
and
mov
outsl
mov
jecxz
xchg
dec
mov
push
adc
inc
leave
in
or
test
adc
jge
lret
xchg
wbinvd
loop
je
adc
sbb
nop
ret
pop
jae
es
add
xchg
mov
lock
aad
out
callw
push
shlb
lods
mov
shrl
sbb
and
into
out
and
mov
mov
cltd
aad
ds
push
mov
into
and
jne
rcrl
icebp
jecxz
scas
sarb
pusha
outsl
pop
jmp
cwtl
fsubs
sbb
jp
in
stc
fs
mov
jbe
inc
iret
movsl
pop
loopne
xchg
mov
add
lods
mov
lea
mov
jnp
ds
mov
cmp
pop
frstor
ljmp
mov
push
js
hlt
push
xchg
add
sarl
or
inc
push
and
mov
enter
fistps
jmp
and
xchg
or
mov
add
inc
xor
into
shll
int3
mov
shll
or
add
stos
sub
jb
adc
jp
mov
or
daa
sbb
cli
or
push
push
pop
outsb
and
sbb
in
icebp
adc
in
push
iret
inc
iret
add
sub
imull
adc
sahf
pop
push
scas
dec
in
lahf
pushf
cmp
rol
cmp
imul
aas
cs
pop
addr16
adc
addl
sub
push
jo
out
dec
xor
add
inc
fstl
pop
ficomps
test
add
test
movsb
leave
cmp
cmp
popf
xchg
xchg
hlt
fs
repnz
andl
ret
inc
and
bound
imul
mov
adc
ds
xchg
mov
sarl
sahf
dec
inc
sti
fdivl
int3
leave
sub
pop
xchg
push
aas
and
adc
cmp
call
movsl
jae
inc
mov
cmp
stc
mov
iret
jle
jae
push
movsl
adc
or
mov
int
add
in
mov
stos
xchg
push
aad
stos
shlb
inc
js
loopne
negb
mov
rclb
out
imul
sbb
scas
shll
inc
jmp
or
punpcklbw
jl
add
inc
push
adc
mov
push
sar
dec
mov
test
or
rolb
cmp
loope
and
out
dec
mov
mov
sti
stos
adcl
xchg
inc
adc
adc
lret
cmp
mov
xor
loope
xchg
fiaddl
jne
imul
jmp
das
addb
or
filds
shlb
adc
adc
setae
mov
pop
and
mov
popa
jnp
mov
rolb
jecxz
push
bound
rcll
xor
cmp
mov
fwait
aaa
iret
or
inc
or
ret
loopne
divb
sbb
mov
jnp
pop
jmp
sub
test
sub
adc
into
out
sbb
mov
lods
in
pop
mov
mov
add
xor
aas
dec
das
mov
in
aam
jnp
fildll
jns
xorl
rorb
xor
out
mov
notl
sbb
mov
mov
mov
xchg
jmp
aam
cmp
xchg
sbb
adc
jbe
add
iret
jle
jno
testb
push
orl
push
faddl
ljmp
dec
inc
dec
dec
stos
push
lds
jmp
xchg
jmp
shr
xor
dec
mov
push
sub
cwtl
shlb
mov
sti
push
sbb
mov
cmpb
movsb
call
sbb
sti
ficoml
sti
or
sahf
lock
sbb
jb
adc
icebp
fbld
test
add
sbb
adc
mov
stc
pop
cwtl
out
sub
add
mov
cld
push
or
not
aaa
xchg
cmp
scas
es
out
xchg
ret
insl
xor
xchg
gs
ret
pop
lret
mov
popa
pop
xchg
cmpsl
dec
insb
cmp
js
out
clc
pop
sarb
mov
lods
and
aaa
addl
out
jle
ds
out
ja
shl
push
pop
mov
test
add
xchg
std
xchg
out
jae
pop
cmp
lahf
inc
jno
or
loope
mov
les
std
jo
xchg
sbb
loop
daa
adc
js
test
pop
sbb
mov
clc
sbb
xchg
aam
mov
cwtl
adc
ret
mov
out
jae
inc
pop
sahf
inc
out
int3
neg
je
sub
cmp
pop
and
aas
out
insl
or
jmp
add
loop
scas
mov
fwait
jae
push
lds
cmc
test
fldenv
xchg
movups
mov
or
push
or
aad
sbb
bound
loop
mov
add
mov
cmp
xlat
lock
fsubs
jmp
loopne
outsl
pop
leave
in
in
jl
pop
js
lods
pusha
xor
clc
daa
je
or
inc
ja
lret
xlat
gs
mov
repz
jo
jecxz
out
mov
inc
xchg
jp
add
les
sbb
push
test
mov
outsb
push
pop
fwait
inc
loopne
test
dec
bound
call
arpl
sbb
pop
dec
pushl
sub
lret
push
addl
pusha
orl
push
jp
adcb
das
cmpl
stos
push
sub
add
push
mov
into
cli
sub
mov
aam
mov
inc
push
out
insb
add
faddp
pop
das
loop
mov
inc
jns
or
orl
or
cwtl
sub
push
cs
mov
sbb
pop
mov
lea
repz
xchg
inc
dec
sbb
cmp
cmpsb
lods
test
xchg
ret
dec
jle
enter
jp
xchg
ds
pop
mov
icebp
add
add
test
mov
or
xor
aad
and
dec
lock
xchg
adc
sbb
cmp
shlb
dec
fnsave
xlat
xchg
jbe
sbb
jg
out
daa
jmp
addb
in
cwtl
lret
sbb
mov
popa
xor
repnz
add
xchg
mov
stos
inc
dec
mov
rolb
rclb
mov
mov
and
dec
aad
adc
dec
sahf
stos
inc
aas
dec
dec
scas
or
push
divl
movsl
xor
push
mov
test
or
lea
icebp
gs
adc
lret
shlb
bound
xchg
bnd
push
cwtl
mov
lret
and
sarb
orb
shlb
xchg
xchg
push
push
addr16
fldt
sub
jb
movsl
int
sub
repnz
mov
aas
push
and
das
movb
mov
pop
push
jns
pop
and
movsl
scas
jecxz
cmp
jne
fsubrp
or
hlt
add
repz
cmp
in
in
add
outsb
jg
fbld
add
lret
lods
pop
mov
and
xor
mov
pop
cmpsb
aaa
pop
rclb
les
aad
prefetch
pop
and
loopne
sub
daa
dec
jo
adcl
rorl
and
jg
in
stos
in
mov
push
dec
imul
xor
mov
xchg
dec
adc
enter
fcmovbe
xlat
push
cmp
inc
sbb
sub
insb
fadd
or
les
mov
call
dec
outsl
pop
cmpsl
out
push
mov
pusha
jge
popa
fwait
pop
out
add
ret
fcomi
adc
cmp
bound
sbb
push
sar
cmp
lock
xor
movsl
xchg
adc
test
cld
movsb
mov
add
testb
sarb
fdiv
cmpsl
pop
iret
add
icebp
imul
or
imul
push
push
push
mov
add
movzbl
push
inc
pop
xlat
enter
and
jp
adc
in
xor
mov
flds
inc
and
popf
stos
loope
jg
lahf
mov
mov
in
push
daa
orb
push
or
inc
insb
jecxz
out
nop
push
fdivs
mov
movsl
jg
xor
int
pop
in
pop
add
pop
ficompl
pop
cmp
inc
add
mov
mov
repnz
push
push
ret
inc
add
sar
lds
out
test
cs
fnclex
push
in
mov
pop
leave
imul
sahf
int3
test
testl
mov
dec
push
cli
fstpl
or
mov
cltd
xor
iret
test
adc
push
repnz
cmp
mov
mov
mov
mov
frstor
sbb
sbb
mov
std
jl
dec
pop
mov
pop
lret
cmp
cmp
insl
pop
add
pop
pop
shrb
pop
mov
mov
or
fsubr
xor
cmp
lret
sub
adc
adc
cmpsb
ljmp
pop
xchg
aaa
push
stc
sbb
lds
fistpl
push
cmp
lods
and
aam
in
add
in
pop
cmc
lods
jnp
inc
je
jae
push
cld
popa
xor
jne
jg
pop
idivl
rolb
xchg
cmp
mov
mov
insl
mov
mov
out
fcoms
cmp
xlat
mov
je
fstpl
inc
xlat
insb
pop
or
xor
xor
dec
jge
unpckhps
lods
nop
xlat
pop
dec
fiadds
and
mov
cltd
dec
test
inc
cli
mov
mov
xor
loopne
lahf
jmp
mov
mov
cmp
and
stc
cwtl
push
pop
pop
mov
add
movl
jo
dec
fwait
mov
adc
aam
lret
pop
sub
sbb
push
mov
mov
repz
iret
test
and
sbb
mov
pop
dec
pushf
test
stos
jnp
adc
xchg
inc
xchg
sub
repnz
movsl
and
clc
movw
aad
xor
shrl
and
inc
and
pop
imul
rorb
cmp
aad
mov
xchg
cmp
lret
jge
sbb
outsl
cmpsl
in
xorb
cmpsb
aaa
jb
xlat
mov
out
push
lock
xchg
call
stos
add
in
sbb
in
sbb
xor
rcrl
inc
fidivrs
ss
mov
lea
mov
test
push
hlt
iret
sub
movsl
je
ret
fmul
add
inc
icebp
mov
out
xor
cwtl
xchg
je
jne
push
add
xor
lret
pusha
std
leave
pop
jg
xchg
into
xor
fldenv
mov
in
pop
ret
test
icebp
inc
insl
mov
inc
and
negl
mov
imul
jno
sub
sbb
lret
sbb
cs
bound
push
popl
dec
arpl
ljmp
inc
push
aam
mov
mov
int3
ficoml
bound
dec
cmp
mov
xor
test
test
hlt
movl
dec
cmp
sub
pushf
stc
dec
sti
pop
dec
inc
xor
imul
ret
jne
fucom
ljmpw
cmpsb
sarb
adc
jecxz
mov
push
dec
xchg
jle
mov
pop
adc
jns
mov
subl
lock
mov
jecxz
xchg
mov
stos
pop
lods
jge
mov
xchg
or
jmp
xchg
push
pop
or
int
sbb
inc
out
jmp
mov
cmp
dec
addb
jo
arpl
popa
sbb
leave
push
pop
imul
lock
insb
mov
fcmovnbe
xor
cltd
xchg
or
and
fbstp
addr16
xor
jle
push
sub
imul
mov
insl
jne
jp
or
add
clc
stos
cmp
addr16
inc
sbb
jp
sbb
inc
adc
mov
jbe
repnz
cmp
xor
xchg
lcall
fcomi
xchg
dec
pop
mov
inc
aas
sub
xor
xor
pop
push
cmp
mov
fidivs
gs
lahf
push
aam
cmpsl
repz
scas
and
xor
inc
jmp
sub
or
mov
xlat
fidivrs
imul
xor
push
adc
push
mov
int3
mov
int3
add
inc
in
xchg
mov
movsl
scas
add
sub
pop
outsb
pop
dec
int3
mov
daa
nop
adc
cwtl
sbb
adc
fs
xchg
mov
or
lcall
loop
jno
push
xchg
adc
lahf
test
mov
out
cmp
push
mov
jne
inc
nop
xor
ficompl
lds
pop
stos
inc
cmp
imul
xor
lock
pop
call
xchg
inc
dec
push
rol
das
xchg
dec
stos
shll
mov
stos
dec
clc
xchg
test
mov
sahf
test
push
jnp
out
jae
outsl
lods
jae
into
das
fstps
in
jp
mov
inc
mov
mov
pop
or
movsl
dec
into
decl
mov
shrb
icebp
pushf
pushf
jl
inc
testb
lahf
xchg
jmp
lahf
mov
inc
sbb
adc
mov
cltd
jne
cmp
cmp
sti
push
inc
lock
fs
fwait
aas
adc
and
mov
or
xor
sbb
lods
adc
fwait
stos
adc
pop
sub
sbb
fcoms
pop
cmpl
das
rcl
and
rcll
fs
frstor
mov
push
xchg
lods
pop
dec
mov
shrl
scas
or
stc
into
scas
pop
pop
bound
mov
loopne
lock
and
sub
jp
inc
jno
out
jp
cmpsb
and
je
cmp
push
stos
stos
rol
and
jp
and
into
adc
sub
push
clc
xor
add
ror
in
out
push
mov
mov
cwtl
daa
or
fdivr
lods
xchg
xchg
mov
add
fcomp
pop
les
add
ljmp
jecxz
loopne
xor
push
into
adc
xchg
pop
add
xor
test
mov
fwait
addr16
jmp
inc
dec
into
lods
push
inc
fwait
imul
push
shrb
jae
insb
xor
inc
into
mov
iret
scas
ret
stos
pop
mov
aad
clc
xchg
fcoml
nop
aas
xchg
lock
ja
mov
pinsrw
lds
test
sti
sbb
fildl
daa
dec
mov
int3
ds
xchg
jae
out
sbb
mov
push
into
jecxz
xchg
cmp
jle
lea
loopne
negl
push
pop
jmp
out
mov
inc
fstpt
cli
cld
xchg
mov
ljmp
or
adc
xchg
cmp
negb
shll
push
push
mov
push
lret
or
notb
add
pop
bound
adc
dec
jns
cmpb
pop
aam
gs
jle
inc
pop
sub
ftst
adc
pop
xchg
jle
mov
jle
inc
add
rorb
mov
pop
fdivr
push
pop
dec
sbb
push
adc
lret
or
pop
stos
push
cmp
daa
sbb
sbb
test
xchg
lcall
stos
add
mov
push
jp
push
mov
pop
fldt
and
stc
jbe
pop
fcmovne
sub
shrb
lcall
mov
and
das
ret
fsubrl
pushw
nop
fdivrl
cmp
pop
fimuls
mov
push
mov
xchg
aas
cmpsb
stos
out
outsl
fldt
mov
jp
xchg
xchg
in
fdivrl
pop
in
pop
rcrl
or
xor
sahf
fimuls
std
mov
cmp
fistps
mov
mov
xchg
jne
fcmovnb
sub
xor
xlat
cmp
xchg
cli
or
jmp
inc
dec
cld
jl
or
nop
push
dec
add
xchg
xor
push
lock
xlat
das
aas
ret
mov
in
xchg
mov
gs
in
dec
fisttps
sub
test
stos
imul
rorb
sahf
or
add
push
cld
bound
bound
sbbl
icebp
sub
inc
sahf
lcall
inc
dec
pop
mov
arpl
push
xchg
jbe
inc
mov
daa
cmc
arpl
sbb
and
sarl
or
lcall
mov
imul
hlt
loopne
inc
jae
aas
fmuls
cltd
cmp
mov
inc
push
cmp
sub
fcoms
lret
xchg
xor
js
pop
int3
sbb
xchg
cmpl
fcom
inc
test
or
mov
sub
inc
aad
mov
sbb
xor
xor
ret
jae
mov
aaa
jno
mov
daa
jne
clc
xor
jle
sti
arpl
dec
aaa
cwtl
ljmp
sti
lret
cltd
mov
mov
push
lock
movsb
lods
into
repnz
pop
repnz
subl
das
xor
xlat
inc
fs
push
rcrb
pop
sbb
dec
jecxz
orl
jnp
in
gs
mov
shl
push
sub
dec
xor
inc
sti
fildl
mov
into
nop
clc
lahf
xor
xor
ss
adcl
cmp
lahf
mov
fucom
dec
nop
jg
lcall
pop
jl
xchg
dec
sbb
mov
jge
fidivrs
adc
into
jp
mov
and
aad
shlb
sbb
mov
xchg
out
gs
imul
or
cmp
adc
mov
push
add
out
pop
xchg
mov
in
dec
lret
jnp
out
sbb
in
mov
jp
mov
fisttpl
call
sahf
bnd
lock
jne
mov
jmp
arpl
xchg
push
repnz
dec
mov
stc
and
mov
cmc
bound
jmp
notl
or
jno
ja
call
loope
outsl
lods
adc
das
mov
and
sub
mov
cli
mov
mov
scas
inc
jle
fwait
nop
mov
movsb
dec
addr16
daa
lods
mov
pop
mov
and
inc
pop
scas
cmpsl
xor
mov
mov
out
jge
add
out
pop
push
lods
fnstcw
push
rorl
xchg
js
or
mov
mov
outsb
mov
out
subl
inc
adc
jns
sub
jns
enter
jne
sub
jle
test
add
cmpsl
loopne
iret
test
dec
out
call
mov
xchg
jb
dec
pop
adc
sarl
stc
ret
nop
dec
mull
sbb
add
fcomip
cli
pop
add
cmp
popf
ljmp
push
inc
xlat
sub
mulb
push
mov
mov
insl
sbb
xor
dec
pushf
testb
cli
sti
cmp
mov
sti
push
inc
call
inc
sbbb
popf
pop
push
ffreep
in
cmp
mov
mov
cmp
mov
cmc
jnp
iret
int
aam
adc
push
aas
push
sahf
cld
cmp
cmp
xor
jbe
dec
and
scas
add
inc
jbe
sub
mov
adc
xchg
je
roll
lcall
nop
scas
adc
movsl
jo
repnz
mov
or
lock
inc
pop
jno
or
or
mov
ficomps
push
adc
lret
cs
rcrb
pop
rcrb
stos
aam
xchg
cld
inc
cmp
aam
sar
jg
cmp
sbb
lds
mov
aam
lret
jg
bound
aad
lret
repnz
push
xchg
jmp
mov
loop
stos
inc
idivb
fsubrs
mov
push
sbb
mulb
out
fcoms
lret
cld
sub
cmp
xor
outsl
cltd
jne
xchg
sub
xchg
icebp
mov
mov
sahf
bound
jecxz
sub
sbb
shrl
std
leave
jns
sbb
mov
mov
btc
sbb
int3
in
jns
push
pop
out
out
push
aaa
push
pusha
movsb
xchg
int
les
or
adc
mov
cltd
inc
fistpl
push
scas
sti
test
xabort
add
bound
mov
mov
fdivs
cmp
test
enter
and
or
test
shll
lock
std
jmp
sub
cmp
inc
mov
cltd
mov
je
js
int
mov
data16
xchg
dec
add
lahf
pop
mov
into
pop
sahf
sub
or
lods
or
andl
mov
neg
or
lock
in
cmc
jae
xor
in
lret
popf
dec
pop
push
cmp
mov
lahf
clc
mov
xor
xchg
push
pop
xor
mov
stos
ds
les
mov
mov
lret
sub
mov
test
std
fists
iret
xor
out
cltd
popf
jo
pushf
xchg
sub
adc
or
cmp
hlt
pusha
icebp
mov
ljmp
sub
push
iret
jno
push
xchg
stos
adc
inc
mov
pop
loopne
dec
xchg
dec
xlat
test
jl
inc
and
inc
stos
pop
push
or
les
jnp
pop
push
mov
int
mov
xchg
ds
cmp
jmp
in
xchg
jne
mov
rcrl
hlt
sub
in
and
pushf
stos
mov
movsl
add
hlt
in
outsb
sahf
popf
rcrl
loopne
adc
cmp
das
pop
jae
fsubs
jecxz
call
gs
adc
fcoms
mov
mov
add
lcall
arpl
sbb
dec
scas
lds
or
arpl
scas
lods
and
lea
mov
xchg
sbb
mov
cmp
xor
dec
push
add
jg
lods
divl
push
mov
es
dec
bound
pop
cmp
cmp
push
insb
mov
sahf
lret
pop
xor
mov
push
jb
jp
mov
stc
jae
xor
sub
stc
sub
aas
pop
xchg
mov
push
dec
lcall
adc
das
xor
or
xchg
insb
xchg
pop
sub
aam
cmp
movsb
sbb
mov
sub
out
out
adc
push
movsb
pusha
cli
xlat
jle
inc
ficoml
jl
adc
stc
ret
imul
pop
iret
mov
push
pusha
lcall
and
outsb
cli
insb
lds
mov
mov
xor
pop
mov
fiaddl
adc
cmp
repz
jle
cmp
in
subl
and
out
pop
ret
mov
mov
adc
pop
inc
adc
jne
push
jno
aas
jnp
insl
xor
ss
adc
lock
xor
jo
sti
dec
mov
adc
dec
jnp
mov
addr16
jmp
in
add
mov
mov
test
pop
ret
aas
sahf
sbb
ljmp
dec
lods
and
test
das
mov
fwait
jns
xchg
loope
xlat
popa
hlt
xchg
xchg
mov
add
mov
jae
nop
adcb
popa
test
mov
lahf
nop
repnz
push
dec
sbb
fisttpll
inc
shlb
mov
jb
insb
sub
dec
cmp
pop
sbb
push
rcrb
repz
cmp
in
jmp
repnz
dec
and
cmp
sti
xor
mov
xchg
cmp
les
sbb
or
push
and
xchg
jbe
push
mov
mov
sti
mov
lcall
notl
push
out
int3
jp
and
xor
lret
sbb
iret
pusha
leave
add
push
roll
sub
jl
shll
cmp
jne
inc
xor
scas
nop
dec
adc
inc
repnz
or
cltd
push
sbb
mov
mov
aas
outsb
jmp
xchg
ja
mov
out
and
loop
or
mov
mov
sub
in
aad
movsl
ficompl
mov
xor
push
fidivrs
movsb
jne
xchg
and
and
bound
adc
dec
inc
rcrb
and
loopne
pop
popf
shll
loop
mov
sbbl
or
mov
mov
mov
fwait
mov
xchg
in
cmp
sbb
mov
in
adc
movsb
jg
sbb
into
push
dec
repnz
testl
mov
cli
pop
loop
xorb
pop
cs
xchg
xlat
imul
into
add
out
and
pop
pop
jp
stc
sbb
scas
pop
fwait
dec
xorl
adc
xchg
scas
inc
movsl
aas
and
xchg
fldl
nop
or
or
fisttpl
or
inc
imul
imul
cwtl
add
mov
add
sar
or
push
mov
jnp
sbb
mov
ds
pop
in
shlb
lahf
cmp
inc
cmpsl
shrl
cld
int3
and
mov
mov
dec
xor
push
xchg
int
sub
out
push
jno
leave
xor
shl
lock
jb
pop
js
adc
outsl
xor
sub
jg
andl
cltd
jl
add
dec
xor
sbb
cmp
adc
mov
lods
jl
mov
inc
dec
imul
bound
popa
jae
lods
cld
dec
dec
je
mov
int
std
out
test
ds
xlat
pop
movsl
clc
cmp
xchg
sub
enter
shrb
cld
xchg
pop
dec
imul
sbb
mov
into
repz
xor
dec
loopne
lahf
pop
stos
mov
sahf
inc
xchg
add
xchg
popa
jno
or
aam
pushf
mov
push
sub
and
out
or
push
pop
jnp
mov
pop
into
xor
loopne
lret
pop
hlt
sub
xor
jne
push
loope
inc
pop
jmp
cs
jg
push
es
sti
sub
ljmp
cmc
mov
ret
pop
jge
bound
movsl
sahf
bnd
adc
sub
std
sbb
idivl
inc
xor
shll
stc
cmpsl
jne
push
mov
movsl
dec
pop
out
cmp
xlat
and
fidivl
mov
xchg
lock
or
icebp
adc
jnp
mov
clc
fcoms
test
shlb
dec
lods
stos
and
mov
jp
outsl
jb
push
adc
xlat
mov
mov
xchg
into
aam
add
push
cmp
pop
hlt
lahf
mov
and
lret
jbe
mov
mov
xchg
pushf
fcomi
jns
xchg
push
lods
pop
or
jecxz
xor
testb
loop,pt
sbb
cmpsl
cmp
push
xor
not
popa
push
mov
or
add
mov
cld
mov
push
jae
dec
lret
dec
inc
adc
movsl
jae
dec
sub
leave
scas
dec
in
mov
sbb
xchg
or
add
das
sbb
mov
mov
pop
mov
push
lret
in
mov
lock
dec
jp
lea
fwait
sbb
inc
stc
add
mov
repz
lods
clc
or
adc
lcall
xor
dec
inc
scas
adc
das
jmp
iret
adc
shrb
mov
dec
pop
jg
ret
daa
sbbl
rolb
arpl
and
xlat
movsl
test
pop
jbe
aaa
fdivrl
das
ds
dec
fsubrl
add
insl
pop
dec
and
mov
mov
mov
sbb
lods
lahf
jle
pop
mov
insb
pop
clc
pushf
jp
fstpl
sub
test
adc
push
mov
and
and
shll
subl
push
add
sbb
stos
jmp
cmpsl
jmp
xchg
xchg
ljmp
add
in
push
and
sbb
sahf
sti
popa
lcall
mov
icebp
iret
dec
decl
xorl
aad
aaa
xor
je
pop
ficomps
push
push
or
addl
imul
fcmovnb
das
mov
mov
std
movsl
push
icebp
xchg
pusha
daa
les
pop
les
add
mov
sub
pop
sbb
push
cmpsb
xchg
aaa
mov
push
xchg
ja
nop
loope
popa
adc
push
pop
add
mov
sbb
fs
cmp
fistps
xchg
outsb
pop
jne
daa
stos
lcall
sbb
push
cmc
lea
loope
fsqrt
lock
inc
push
sbb
dec
and
adc
pop
aam
je
je
adc
leave
loop
jp
push
in
cmc
jo
icebp
data16
adc
pop
and
roll
push
lret
ss
cmp
sarb
movsb
add
mov
test
inc
iret
or
fs
pop
add
or
out
or
jecxz
test
mov
xor
xorl
ss
xor
lock
pop
ret
xorb
cmp
cmpsl
xchg
mov
xor
cmp
or
dec
add
lods
ret
and
mov
stos
inc
sbb
jecxz
fadds
and
xchg
mov
adc
xchg
lds
in
clc
mov
inc
xchg
pop
outsl
ds
jo
into
rorb
mov
pop
out
mov
in
lods
daa
cmp
jmp
adc
push
jne
nop
mov
mov
xor
fstpt
push
jae
jge
xor
shl
sub
scas
pop
cltd
roll
pop
inc
xor
rorb
adcl
dec
pop
jae
imul
ljmp
pop
int
add
pusha
sbb
push
cmpsb
sub
out
jmp
subl
dec
xchg
jbe
and
push
and
dec
mov
mov
jg
ret
sub
inc
mov
jle
and
sbb
push
sbb
add
add
xor
inc
or
mov
adc
push
mov
das
pop
dec
adc
test
mov
mov
fs
mov
sbb
aam
hlt
inc
sub
lds
adc
mov
add
cltd
pop
sarb
mov
push
ja
sub
add
mull
les
or
and
addl
push
cmc
aas
popf
cmp
push
lea
cmp
and
aas
insl
nop
lret
test
repz
mov
mov
loope
notb
les
loopne
roll
and
or
or
or
lahf
aam
lahf
loop
xchg
adc
pop
jmp
arpl
pop
push
scas
mov
cmp
jl
dec
cmp
fmull
ss
in
mov
nop
test
fbld
dec
bound
push
shll
mov
pop
insl
mov
lds
je
push
sarb
je
scas
testb
adcb
xchg
fs
sub
pushf
inc
and
mov
sub
nop
push
popa
pop
fbld
sub
sub
hlt
imul
and
and
in
dec
movb
out
xchg
xchg
cmp
scas
mov
xor
mov
out
cld
imul
add
ja
lret
aam
lods
imul
insb
inc
mov
pop
jne
jle
xchg
xchg
out
cmp
add
or
into
repnz
cmpsb
test
inc
call
pusha
outsl
push
enter
ret
and
xchg
dec
jecxz
pusha
or
cmp
adc
cmp
pop
loope
mov
std
xor
fidivrs
test
ds
mov
lahf
movsb
roll
add
loopne
addr16
imul
xlat
daa
aas
mov
add
iret
ja
pop
fsubp
dec
lods
pop
inc
popf
and
pop
or
cmp
sub
pop
inc
cmp
es
clc
hlt
xchg
push
das
decl
daa
int3
sub
or
add
mov
repz
cmp
out
xchg
les
cmpsb
orl
sub
sub
push
aas
test
xchg
insl
mov
test
repz
cmpsl
fistpll
testl
sub
xor
or
mov
adc
and
and
out
cmpsl
jl
dec
repnz
mov
mov
pop
faddl
push
aad
fsubs
mov
stos
lss
jge
sbb
pop
in
cs
xchg
mov
jmp
testb
dec
inc
ret
adc
cmpsb
jg
dec
pop
pop
adc
lock
lea
mov
inc
mov
add
pop
push
pop
adc
adc
ret
jbe
ljmp
bound
cmp
cmpl
push
call
cmp
inc
in
mov
stos
add
push
lea
mov
loop
mov
aad
in
test
leave
imul
or
mov
aad
mov
mov
pop
ds
gs
hlt
xlat
jnp
mov
add
daa
insl
lds
adc
popl
sbb
or
add
lds
or
stc
or
outsl
cltd
xchg
imul
ret
shl
jmp
cs
call
mov
jns
std
adc
add
and
call
out
aas
mov
test
xor
sbb
sbb
dec
mov
sahf
inc
std
push
add
jecxz
mov
loope
jne
xchg
jae
xchg
and
es
pushf
and
push
push
in
jns
in
jo
fadd
int
cli
pop
xor
pushl
jb
lock
inc
xor
in
cmp
sub
and
dec
xchg
es
dec
imul
sbb
xchg
int3
neg
dec
fadds
mov
test
jecxz
push
nop
sub
loope
jecxz
xor
clc
dec
sahf
shl
sbb
dec
xor
call
jmp
xchg
scas
leave
inc
xchg
int
fcmovnbe
lock
jle
ja
pop
stos
mov
xorb
hlt
sbb
roll
call
mov
dec
lock
xchg
sub
cmp
xchg
lcall
scas
movsl
jl
fidivs
inc
cmpsl
loop
and
into
dec
jae
push
inc
mov
adc
imul
xor
mov
enter
pop
aaa
xchg
lahf
mov
fdivrl
push
add
bnd
gs
xchg
xchg
and
pushf
mov
xor
mov
lcall
inc
push
xor
ficomps
or
add
adc
pusha
clc
mov
cmp
xor
repnz
in
ret
loopne
je
and
mov
xchg
mov
xor
xchg
lea
fnstenv
inc
mov
stos
dec
std
jecxz
xchg
add
dec
pusha
negl
test
nop
loope
icebp
enter
cmpb
mov
je
jno
pushf
add
xor
push
mov
jae
test
test
repz
mov
pushf
jg
fnstenv
xlat
imul
pop
in
das
jle
daa
je
push
sub
gs
clc
flds
lcall
mov
xchg
lcall
mov
pop
xor
or
mov
or
cltd
sti
dec
push
cmp
imul
aaa
xchg
in
xchg
rcl
nop
repnz
sub
in
out
test
ret
shrl
addr16
jmp
mov
fnstsw
pop
pop
mov
rorl
aad
xchg
jae
xor
fs
mov
inc
lret
cmc
aas
aaa
je
cmc
pop
add
int3
lret
ljmp
je
jl
adc
jb
mov
into
movsb
idivb
mov
std
aas
add
cld
jns
mov
add
pop
daa
lahf
shlb
loope
push
sbb
or
mov
ret
lahf
rcrb
out
pop
in
bndldx
out
lcall
aam
dec
xchg
and
pop
aaa
idiv
insl
xor
out
sub
sbb
mov
jbe
push
aad
lret
orl
cwtl
lods
xor
sarl
jae
icebp
pop
je
push
jnp
push
ret
mov
dec
data16
cmc
pop
and
in
push
mov
adc
xchg
push
push
push
dec
leave
fnstsw
jmp
in
insl
insl
sub
outsb
hlt
icebp
and
icebp
aad
icebp
jmp
mov
jns
inc
pusha
push
or
fldl
cmp
dec
xor
sbb
adc
cltd
dec
movsb
sbb
mov
or
stos
mov
daa
loope
push
fwait
ds
and
dec
je
adc
std
fcomp
lret
aad
cmc
sub
or
les
inc
cmp
pop
outsb
cmc
test
fstp
xchg
inc
mov
sub
pushf
cmpsl
stos
int3
aam
sub
xchg
jmp
cmpsl
inc
fistl
addr16
das
into
js
adc
movsb
pop
mov
jmp
or
lock
and
incl
stc
cmc
loope
pop
out
mov
decb
pop
sti
das
das
sti
mov
inc
outsb
out
and
or
cmpsb
and
cmp
inc
rclb
fwait
pop
inc
mov
repnz
insl
xor
and
pop
ljmp
and
imul
out
les
sub
jae
rol
addl
mov
imul
inc
inc
sbb
out
popa
aas
or
mov
cmpb
xchg
jmp
inc
and
pop
fldcw
scas
inc
rorl
add
sbb
push
movsb
out
jne
xor
add
jbe
fwait
mov
movsl
mov
jmp
enter
fbld
in
xchg
mov
jle
decl
or
or
adc
lret
cmp
or
mov
and
divb
push
xor
sub
inc
pop
lahf
ljmp
inc
jmp
xchg
pop
test
jg
hlt
xchg
and
rcl
jmp
clc
outsl
jnp
jl
xchg
xchg
pop
call
fldenv
add
not
aam
movb
and
cmc
jbe
mov
movsb
pop
loopne
fsubp
xchg
cld
or
fiaddl
fbld
push
adc
pushl
dec
add
pop
mov
shll
push
sbb
mov
je
data16
cli
in
pop
dec
loopne
or
fsub
xchg
jl
mov
rorb
imull
mov
mov
stc
cmp
cmpsb
mov
cmp
or
in
sub
sub
fwait
sbb
xchg
imul
jl
nop
xor
test
mov
insl
iret
sub
je
dec
ret
scas
xor
daa
stos
mov
mov
jb
mov
bound
cmc
insl
mov
ret
push
cmp
pop
mov
decb
daa
lret
out
cmp
mov
fcmovu
sub
jo
push
push
add
sub
neg
mov
push
les
test
out
cs
xor
stos
pop
cltd
or
ss
xchg
xchg
dec
lods
sbb
mov
and
sub
in
les
loop
popa
inc
icebp
outsb
sarb
and
sub
push
pop
mov
test
jnp
adc
mov
in
push
nop
test
push
enter
pop
aam
fisttpll
daa
sbb
push
cli
sbb
and
fdivr
cs
icebp
out
xchg
ds
out
mov
mov
js
scas
pop
xchg
mov
xor
out
jo
xchg
cmp
adc
sub
js
cwtl
inc
and
out
jg
pusha
pop
out
cs
cmpsb
xor
push
add
xchg
or
loope
sbb
cmp
leave
cs
in
dec
out
mov
fwait
push
imul
cmp
jp
repnz
ret
mov
roll
xchg
pop
out
dec
sub
inc
pop
lea
rcrl
inc
inc
pushf
mov
pop
mov
loopne
hlt
clc
sub
push
cs
mov
iret
mov
dec
and
repz
popa
dec
adc
pushf
lods
mov
adcb
push
arpl
fs
cmp
xchg
adc
and
mov
xorl
mov
xor
sbb
scas
loop
pop
lldt
push
hlt
scas
adc
xor
mov
sahf
jo
add
pop
jb
mov
hlt
div
sub
jp
push
shlb
jbe
or
push
or
addr16
enter
xadd
sbb
mov
sbb
arpl
pop
jle
fbld
fs
adc
maskmovq
push
scas
repz
cmc
mov
mov
idiv
mov
jno
clc
mov
out
xchg
xor
jg
fldenv
cmc
int
jle
into
and
je
jo
aam
adc
mov
std
insl
frstor
and
cmp
cmpsb
test
arpl
out
jle
mov
xor
out
jg
push
pop
cmp
stc
lret
shr
mov
mov
cmpsl
daa
add
les
out
push
scas
pop
mov
cs
sub
or
inc
movsb
popa
cltd
inc
popa
popa
in
or
dec
rclb
jns
pop
sub
fdivs
jne
or
loopne
and
jno
outsb
xchg
fsubs
xor
pop
out
push
inc
xchg
push
dec
aaa
cmc
xchg
loope
cs
cmc
clc
or
push
mov
test
mov
shrl
fdivl
test
aaa
in
or
stc
lds
xchg
jmp
sub
lds
adcl
scas
stos
dec
cmp
test
mov
popa
dec
aam
sub
call
iret
test
pop
cmpsl
dec
dec
sub
sub
push
addb
arpl
stc
xor
pop
in
addr16
mov
mov
in
out
jg
out
pop
fiadds
cmp
cli
rolb
mov
in
push
shll
inc
rep
aam
das
test
xor
add
pop
mov
lcall
adc
fwait
sbb
push
fimuls
xor
push
cmpsl
or
and
adc
bound
roll
aas
aaa
mov
dec
pop
mov
inc
cmpsb
mov
push
cmpl
fs
ds
mov
mov
daa
xchg
xor
in
adc
popa
popa
mov
sbb
in
cmp
ret
sbb
xor
add
inc
inc
jns
adc
jne
sahf
mov
sahf
movsb
mov
fidivl
cld
aam
mov
inc
xchg
ja
push
lds
jmp
dec
imul
outsb
dec
jle
or
in
outsl
lods
test
scas
mov
sub
cs
jo
repz
add
mov
adc
hlt
xchg
loopne
std
cmp
mov
lahf
and
jne
fsts
xchg
incl
add
data16
lcall
mov
out
ret
mov
mov
mov
mov
sbb
in
out
mov
inc
les
adc
and
mov
iret
mov
mov
inc
mov
leave
or
push
push
bound
dec
or
and
mov
add
test
pop
cmp
inc
xchg
jmp
dec
stos
xor
or
sbb
imul
sub
mov
push
push
dec
pop
cmc
shlb
mov
lods
cltd
mov
sbb
jns
stos
lahf
jl
lods
mov
mov
mov
mov
push
cwtl
out
inc
aaa
hlt
pop
into
add
push
jbe
mov
mov
push
clc
cmp
xor
imul
pop
movsl
out
add
lcall
xor
pop
out
pop
imul
jne
test
outsb
jbe
adc
dec
scas
nop
lods
mov
add
jnp
cmp
or
jmp
add
pop
mov
dec
movsl
adc
push
jl
and
add
pop
nop
sti
paddusw
dec
fadds
cmp
xchg
sub
xor
or
std
aaa
not
inc
es
mov
cmp
jge
mov
mov
mov
jg
push
lret
xchg
sub
push
push
nop
std
lods
mov
adc
mov
or
das
lcall
mov
cld
dec
push
sbbb
dec
dec
mov
into
xchg
jae
call
xchg
pop
pop
push
push
shll
and
sbb
nop
sti
test
clc
cmp
add
pushf
shll
mov
cli
outsl
push
inc
dec
add
xor
addr16
scas
mov
mov
call
sbb
dec
mov
and
sub
outsb
cltd
push
cwtl
inc
lods
sub
repnz
dec
mov
mov
dec
sbb
dec
add
loopne
in
imul
sub
dec
push
cmp
aaa
or
xor
movsl
push
dec
sbb
xchg
xchg
dec
xor
fisttpll
pop
add
hlt
jmp
xor
xor
mov
mov
jmp
loop
mov
aas
jl
jb
xchg
in
mov
sbb
lahf
push
imul
mov
fistpll
xchg
and
adc
pusha
mov
subl
sbb
xchg
adcl
jne
stos
pop
fs
roll
test
mov
idivb
xchg
and
in
sub
insl
loope
std
mov
xadd
inc
fwait
pushf
inc
sub
fcmovnbe
mov
addb
add
scas
push
in
jo
test
xchg
je
movsl
push
push
fsub
mov
sti
and
mov
mov
loope
aam
call
js
or
lods
int
in
and
lds
mull
sti
cmpsb
or
or
faddl
popf
loop
fidivs
or
loope
mov
hlt
sbb
jg
add
dec
mov
cmp
lods
subl
push
fcomps
ljmp
pop
in
aad
filds
fs
or
scas
dec
stos
or
sbb
hlt
ljmp
cmp
repnz
cmp
inc
push
adc
scas
pop
dec
fisubrl
jp
dec
mov
fsubrl
jae
mov
fwait
pop
mov
dec
jmp
lods
mov
out
imulb
test
out
mov
lods
repnz
pop
pusha
std
push
outsb
fmuls
add
mov
fldt
enter
std
pop
cmp
push
dec
add
fs
testb
cmp
bound
rorb
jl
sbb
push
and
fdivl
or
adc
adc
lods
arpl
pushw
dec
movsb
int3
add
fdivrp
jecxz,pt
mov
orl
mov
xor
xchg
and
lods
cwtl
jb
in
add
push
xchg
hlt
imul
push
ds
stc
icebp
jle
add
scas
lods
and
bound
pop
and
out
ret
fs
divl
or
inc
lea
shl
sub
xchg
lahf
sub
jne
jecxz
sub
push
shl
stos
jge
dec
jns
enter
cmp
xlat
mov
lret
les
sbb
lahf
dec
fidivl
dec
and
imul
loopne
mov
mov
jle
sbbl
mov
or
jae
mov
push
test
lea
mov
inc
or
xchg
outsb
je
sub
lret
inc
movsb
std
cld
adc
cmp
sbb
pop
sub
push
jbe
mov
mov
add
mov
adc
mov
dec
adc
daa
rcrb
cmpsl
xor
cmpsb
sub
cmp
fs
icebp
xor
sar
mov
inc
in
sahf
or
popa
xchg
icebp
xchg
jb
lea
enter
mov
add
or
outsb
pop
inc
inc
and
mov
sbb
data16
xchg
repnz
or
mov
jle
mov
pop
mov
mov
dec
repz
cltd
pop
and
into
lcall
cmpl
push
inc
mov
cmp
int3
int3
popa
stos
in
jp
je
push
sbb
fs
jp
xor
sahf
push
cli
adc
das
cmpsl
pop
mov
sub
imul
sub
cmp
add
cmp
dec
or
sub
shll
in
bound
sub
push
xor
xorb
out
outsl
cmp
xchg
dec
aad
push
inc
cmpsl
outsl
jae
repnz
xchg
jge
mov
push
adc
xchg
mov
std
cmpsl
repz
icebp
lcall
ror
arpl
dec
insb
inc
jl
ljmp
dec
rorl
arpl
lds
movsl
clc
in
or
pop
pop
fwait
jbe
sbb
inc
mov
adc
pop
ljmp
xor
add
mov
jge
imul
mov
movsb
pop
pop
fstps
les
stc
pop
jl
add
or
hlt
mov
leave
test
jl
cmp
jo
jae
or
push
adc
jg
pushf
imul
sarl
jp
add
lock
pop
mov
mov
sti
and
fdivp
in
cli
adc
ret
or
daa
jecxz
cmpsl
dec
adc
xchg
stos
test
push
aas
lock
lret
pop
lcall
lods
sub
neg
jmp
sub
xlat
fidivrl
loop
das
mov
or
ret
stc
pushf
imul
sub
mov
xchg
ja
cld
popa
add
lods
enter
pop
addr16
in
sbb
frstor
or
cmpsl
fs
or
mov
xchg
inc
filds
mov
test
pop
shlb
jno
test
xlat
inc
repz
inc
inc
lods
lds
hlt
inc
pop
rcrl
repnz
sub
divl
add
jb
push
or
out
lds
adcb
sbb
inc
repnz
leave
push
out
xchg
aad
mov
stos
sub
ja
cmpsb
adc
mov
dec
mov
hlt
in
push
mov
test
adc
push
xor
lret
push
es
les
mov
fstp
ja
push
das
cmp
adc
sub
sbb
cmpsl
xchg
adc
sbb
incl
push
xor
adc
adc
xchg
fwait
into
dec
rolb
ret
cmp
cmp
xor
sub
and
int
xacquire
sbb
mov
dec
cmp
xchg
out
push
into
outsl
jmp
repnz
dec
ljmp
enter
out
pop
jnp
int3
or
xor
sar
stos
adc
fmull
outsl
mov
adc
mov
jp
sub
stos
int3
stos
pop
pop
jb
fcoms
ret
repz
push
or
in
mov
call
pop
xchg
cld
test
mov
xchg
adc
fmulp
clc
insl
push
in
movsl
push
test
stos
dec
jne,pt
fs
scas
push
stos
xor
ret
xchg
pop
inc
insl
xor
jl
mov
repnz
jmp
lock
jnp
repnz
or
andb
jbe
fadd
imul
xor
loop
jp
ror
adc
pop
fsubrs
mov
in
or
mov
dec
mov
clc
lcall
shlb
adc
cmc
or
jbe
incb
pop
push
add
jnp
push
jmp
mov
fcomi
loopne
outsl
pop
jmp
inc
insb
icebp
filds
push
sti
cmc
jmp
sahf
sbb
add
cwtl
xchg
movsb
jne
popa
mov
aam
mov
sarb
mov
mov
popa
sbb
mov
rol
mov
cli
jbe
insl
sub
ret
inc
popa
add
cmp
cmp
sbb
xor
rolb
push
popa
scas
roll
pop
mov
pop
out
dec
mov
pop
xor
shrl
sub
jg
sahf
nop
pop
xor
scas
push
shlb
ss
cwtl
fwait
clc
imul
push
dec
pop
shll
dec
push
rcl
inc
fcmove
sbb
sub
ret
fwait
mov
adcb
cltd
adc
ds
cwtl
xchg
adc
in
mov
sbb
sbb
enter
sbb
adc
stc
mov
je
ret
inc
sub
jle
or
mov
sbb
pop
int3
and
fcomps
test
mov
sar
int
pop
subb
movsb
and
push
sti
scas
mov
frstor
and
mov
inc
ljmp
mov
aaa
fwait
push
out
movsb
or
adc
mov
addr16
shrl
xchg
shll
scas
adc
in
ds
xchg
cmp
jo
popf
or
mov
inc
mov
aam
mov
xchg
xchg
xor
pusha
adcb
clc
jb
ret
call
inc
push
pop
lahf
mov
add
das
push
or
xlat
jo
pop
mov
mov
test
fsts
mov
inc
int
lret
pop
fcoms
out
add
pop
movsb
scas
mov
fisubs
cltd
lods
adcb
push
gs
xchg
fstpl
test
stos
xor
lods
adc
cmp
pushf
jo
cltd
test
loopne
xor
push
inc
sub
mov
push
lods
bound
mull
hlt
test
mov
jmp
cmp
jae
std
stos
cmc
fnstcw
sti
sub
jb
jb
mov
cmp
movsl
jne
mov
cmp
pop
pop
mov
std
ljmp
test
cmp
cmpb
testl
add
outsl
push
xor
push
cmpsb
daa
sub
dec
jns
jno
shl
cmpl
fldcw
mov
std
push
nop
push
mov
pop
push
fcompl
sbb
loopne
cmp
icebp
pop
inc
fabs
in
mov
push
lea
inc
xor
and
bound
xchg
cmp
das
rcll
lcall
xchg
pop
dec
lock
shlb
mov
or
push
cmc
xchg
pop
sbb
lock
aad
and
cmc
mov
outsl
sbb
sahf
dec
movsl
insb
ja
addr16
stos
imull
cli
stc
jns
out
lret
rcll
mov
mov
test
mov
out
cmp
les
mov
scas
inc
ror
sbb
test
sub
cs
adc
imul
hlt
mov
mov
jp
std
mov
lcall
gs
in
xor
sti
push
in
shr
or
int3
jp
cmpsb
repnz
ss
enter
mov
test
xor
fcomip
and
sub
adcl
xchg
push
imul
hlt
ret
leave
inc
mov
insl
pop
push
dec
inc
hlt
add
mov
add
inc
sbb
stos
add
arpl
mov
dec
or
pop
int
rol
inc
out
add
mov
jb
or
push
out
lock
xchg
adc
out
sbb
and
test
adc
jg
xor
mov
ret
add
jmp
jl
mov
ja
bound
aaa
scas
sbb
adc
or
jo
sbb
xchg
sbb
les
jle
or
xor
and
insl
ficoml
mov
lret
cwtl
daa
jmp
lods
push
and
js
pusha
bound
lods
mov
xchg
mov
leave
fisubl
popa
ret
xchg
dec
test
mov
iret
sbb
popa
aas
and
mov
cmp
sub
test
sar
stc
in
shlb
mov
adc
push
lahf
xchg
push
movsb
cmp
xor
jae
fstp
pop
pop
cmp
xor
dec
shr
test
daa
push
cltd
pushf
push
movsl
xor
scas
pop
in
pop
insl
mov
jp
pop
sub
jmp
push
call
fwait
pushf
insb
repnz
cmc
xor
inc
leave
jecxz
push
rorl
xchg
mov
rcr
push
aas
int3
repnz
pop
shrl
repz
mov
sti
call
xor
add
xchg
js
jns
in
lods
loopne
mov
pop
in
dec
sar
orb
repnz
cmpsl
add
mov
movsl
cmp
cmp
leave
pop
xor
xlat
js
into
inc
add
pop
dec
into
xor
dec
mov
push
mov
push
movsl
scas
push
ret
in
xchg
testl
adc
lea
aad
add
ljmp
fxch
clc
inc
ret
xchg
fidivl
out
lds
or
xchg
push
sbb
ret
sub
fwait
jg
addr16
mov
popf
mov
jns
in
add
adc
add
add
mov
fstl
in
push
cld
inc
sbb
xchg
mov
xchg
mov
push
inc
jge
inc
jne
lods
pop
adc
sbb
in
mov
or
mov
scas
xor
and
mov
int
xorl
fisttpll
mov
cmpsb
mov
dec
not
xor
ficomps
xor
out
cld
cmp
pop
sbb
int3
xor
xchg
arpl
divl
aaa
mov
pushf
shll
lods
cmpsb
fbstp
fbld
test
movsb
dec
test
cvtps2pd
xchg
sub
scas
loopne
aad
mov
aaa
fnsave
pop
loopne
pop
std
xor
in
movsb
ljmp
or
push
test
leave
or
es
jecxz
mov
nop
fistpll
into
testb
ss
ja
jne
mov
insb
mov
xor
push
mov
jbe
dec
cmp
push
or
fs
lret
mov
bound
inc
scas
div
push
sub
mov
or
xor
das
dec
or
push
ja
mov
push
fsts
sbb
sub
rcl
stc
mov
jae
int3
jo
xor
xchg
std
add
mov
cmpsb
gs
mov
rcll
and
adc
add
add
mov
cmp
adc
pop
sahf
das
add
mov
lods
pop
and
mov
cltd
inc
jl
or
mov
sub
jg
sbb
mov
jecxz
aas
dec
mov
mov
mov
add
xor
inc
add
or
xchg
inc
push
imul
stos
or
mov
jo
push
lret
cmp
movsb
daa
sahf
imul
les
stos
mov
ficoml
js
or
aam
adc
inc
lcall
cmpsl
mov
and
dec
lret
js
in
cmpsl
adc
sti
mov
xchg
lock
fsubrl
mov
pop
sar
imul
cmp
test
cmp
xor
and
sub
fstpt
out
dec
jo
ja
bound
iret
or
mov
adc
popf
rorb
inc
push
push
lahf
mov
imul
sti
mov
fcomip
repz
testb
xor
xor
movsl
inc
cwtl
ja
in
xor
lock
cli
sbb
lret
ljmp
push
std
pop
mov
mov
cmc
push
lods
stc
lcall
inc
or
pop
jmp
dec
das
clc
pop
mov
jnp
sub
sahf
jnp
and
rclb
xchg
adc
lods
movsb
icebp
jl
cmpsl
stos
dec
push
out
cmpsb
and
fsubrp
cmpsb
mov
or
ret
test
iret
enter
jae
add
or
add
stos
mov
jmp
pop
xchg
repnz
ja
cmp
pop
push
dec
mov
jge
das
orl
das
jge
push
repnz
xor
xchg
jno
movsl
inc
pusha
iret
ret
test
inc
mov
imul
mov
xchg
or
out
iret
cmpsb
cmp
mov
rcrl
jge
push
add
xor
push
pop
push
add
mov
pop
or
fcomp
insl
leave
pushf
out
lcall
xor
movsl
frstor
and
jno
sub
aam
mov
jae
sbb
push
jmp
lock
xchg
push
ja
jns
mov
push
dec
call
repnz
push
adc
xor
pop
push
bound
fstpt
inc
inc
call
mov
dec
adc
jle
hlt
adc
out
add
imul
das
div
inc
xor
fnsave
and
not
int
sub
out
jo
test
aaa
std
loopne
jmp
push
xorb
xchg
fisttps
mov
jb
ficomps
orl
jp
test
insb
xchg
jmp
sub
jns
mov
jns
xchg
stc
xor
mov
push
insl
inc
std
roll
and
div
subb
add
scas
cmpl
add
mov
xchg
add
lea
or
pop
cmpsb
ret
ljmp
xchg
int3
cmpsb
xor
fldcw
sbb
lods
sti
mov
add
cmp
or
ss
adc
aaa
and
mov
or
sbb
shl
jp
loope
inc
test
pushf
mov
jno
sbb
js
or
jmp
shrb
shrb
dec
hlt
pop
push
or
fmulp
xlat
inc
cmp
pop
push
mov
mov
arpl
ss
sbb
loope
add
cmpb
scas
mov
jae
sub
jp
andb
dec
xor
cmp
push
test
cmp
push
shlb
outsb
inc
pop
out
push
imul
add
mov
in
shll
push
test
in
insb
push
arpl
pop
or
arpl
jo
mov
cli
cwtl
in
pop
loope
lret
mov
pop
lret
adc
lods
mov
fnstenv
lea
out
in
push
pop
jle
or
ds
jnp,pt
mov
jge
xor
fidivrs
addr16
push
adc
shrl
xlat
pop
xlat
or
push
or
rclb
fdiv
fs
loop
or
mov
int3
imull
dec
sahf
push
sub
mul
adc
in
shlb
add
pop
jno
xor
pop
xchg
pushw
movsl
data16
les
fcmovbe
jne
pushf
out
add
iret
pusha
mov
and
cmp
push
add
jno
leave
fildll
or
sub
pop
push
push
shll
sub
ja
mov
mov
cmc
adc
lret
push
insl
in
call
push
mov
dec
daa
int3
push
jae
add
xlat
lods
push
jo
pop
cwtl
shrb
outsb
jne
aam
jg
sbb
sub
xor
sbb
rorl
cli
mov
mov
pop
insb
xor
cwtl
mov
push
sbb
and
cmpsl
push
sub
rcr
gs
mov
pop
mov
mov
repz
rorb
and
insb
loope
pop
or
jnp
add
adcl
popa
mov
flds
subb
mov
xor
icebp
cmp
mov
pop
or
aam
pop
or
sub
loop
or
pusha
mov
call
mulb
sbb
xor
ss
fwait
lahf
dec
sbb
ss
jle
adc
jl
add
stos
pop
pop
je
sub
ds
xlat
or
out
or
in
dec
das
push
in
lock
cmp
jne
out
test
mov
rorl
lret
jne
pop
sbb
outsb
imul
pop
jp
and
out
add
push
pop
cmp
push
int3
rcll
ds
je
xor
cwtl
mov
enter
xlat
test
lea
inc
ficomps
jae
repz
push
imulb
popa
sub
cli
ljmp
hlt
jae
xchg
repnz
xchg
xor
inc
sbb
int
ss
add
in
xor
pop
mov
xchg
inc
aas
push
jle
mov
xchg
jp
cmp
or
ljmp
fistpl
in
out
jne
test
and
fucom
mov
jmp
movsb
jg
cwtl
cmp
aaa
xor
scas
sahf
iret
outsl
xlat
mov
sbb
add
jne
jle
mov
jmp
sub
js
inc
addl
arpl
sub
lcall
lcall
mov
popa
sahf
inc
pop
push
popf
inc
fisubrs
jnp
sahf
pop
xor
mov
xchg
js
or
enter
pop
fiadds
adc
mov
pop
push
in
ja
aad
xor
pop
adc
mov
dec
mov
outsb
jbe
add
fsubr
cmpsl
and
shr
xor
jo
fcomps
mov
jmp
dec
icebp
xchg
xrelease
inc
sub
sqrtps
vmread
jae
sbbl
inc
mov
out
mov
and
enter
les
mov
mov
xor
cmp
sbb
xchg
mov
in
ds
loopne
cmc
xchg
nop
aam
cmp
add
outsl
leave
pop
out
mov
inc
pop
cli
aaa
inc
jp
lock
in
enter
inc
test
incb
inc
or
outsl
pop
fsubr
dec
notb
cmp
push
xchg
pop
dec
inc
fcompl
and
mov
xchg
or
dec
std
mov
das
mov
popf
mov
hlt
pushf
sti
xchg
jo
js
jge
jnp,pn
int
pop
test
ljmp
adc
cli
jmp
lock
push
sbb
mov
add
popf
lcall
sub
repnz
mov
lret
cwtl
stos
push
xor
orl
ljmp
push
xchg
jp
and
in
dec
inc
inc
mov
dec
inc
jl
xchg
xlat
mov
lcall
jnp
leave
or
pop
lret
movsl
test
repz
sbb
lods
outsb
test
incb
mov
sub
das
decb
pop
or
in
daa
and
mov
test
gs
push
dec
mov
jmp
jb
cmp
mov
nop
sbb
repnz
aad
out
dec
lea
pushf
cmp
lds
stos
pop
jbe
std
cmpsl
insl
lahf
aad
lret
jbe
test
dec
call
ss
jae
stos
out
mov
push
mov
rcll
mov
cmp
adc
xchg
sub
xchg
jo
mov
sub
inc
pop
jmp
clc
jmp
idivb
pop
cmc
ljmp
fmull
xchg
sbb
adc
int
out
mov
sbb
mov
cmp
loopne
mov
xchg
fmull
cmpl
test
mov
sbb
std
push
push
notl
bound
xchg
data16
cmp
pop
dec
push
xor
pushf
lea
rolb
test
mov
sub
cmpsb
cwtl
fwait
dec
lret
test
or
mov
jae
leave
jg
dec
mov
fisubrs
xchg
mov
pop
bound
mov
faddl
popa
dec
dec
stos
les
ret
out
lahf
jns
jo
vfmsubadd231ps
cltd
jl
or
roll
fisubrl
jecxz
mov
data16
mov
stc
test
rcrl
sbb
jns
insb
js
add
xchg
bound
pushf
cmp
mov
or
mov
cmp
shl
mov
mov
sub
or
lock
dec
shll
lods
lret
dec
std
cmp
adc
inc
sbb
outsb
data16
or
jecxz
pushl
js
sub
das
cmpsl
loope
mov
cltd
mov
test
xor
data16
movsb
icebp
repnz
out
int3
or
inc
or
pop
add
add
pop
add
mov
sbb
dec
and
add
add
sub
inc
sub
loopne
adc
lahf
pop
ret
dec
dec
fs
ja
outsb
lret
int
mov
fwait
mov
push
mov
icebp
jle
cwtl
push
sbb
cmpsl
ret
in
out
xchg
std
ljmp
icebp
xor
mov
arpl
or
adc
xor
push
dec
add
out
add
and
dec
les
fnstcw
sbb
jne
push
mov
add
loope
movsb
inc
push
mov
sub
or
cmp
rcrb
mov
rcrb
mov
jb
repnz
dec
inc
insb
testl
out
mov
jae
xor
mov
mov
ret
jbe
sub
xchg
gs
sbb
testl
fwait
mov
mov
das
mov
fsubs
das
lock
mov
call
sti
add
lods
adc
in
jmp
repz
insb
mov
xchg
xchg
rolb
stc
mov
fidivrs
or
arpl
out
push
in
stc
fidivrs
cmp
rolb
dec
sbb
roll
lods
gs
fists
push
ret
jns
adc
daa
jle
sarl
in
jno
jbe
mov
pop
push
adc
mov
pop
dec
das
xchg
sbb
jo
inc
in
stc
ss
jl
adc
call
xchg
sti
enter
and
hlt
pushf
mov
arpl
std
ja
hlt
and
and
hlt
fwait
mov
jp
scas
in
jbe
daa
dec
push
mov
lret
aam
jae
mov
out
push
int
ja
ljmp
jno
jo
adcl
jns
scas
dec
mov
stc
dec
lds
inc
mov
shrb
cmp
aaa
hlt
addb
aaa
imul
mov
push
into
bound
lods
push
xor
sub
or
mov
pop
xor
push
movsb
jle
idivb
xor
push
xchg
jns
or
insb
mov
mov
jg
dec
das
shrb
inc
jo
cmp
addl
ficompl
add
fadds
test
or
jle
or
loopne
insb
lahf
pop
push
insb
loopne
push
or
cli
pusha
lret
lods
inc
push
test
movsl
or
inc
lahf
jb
xchg
jno
add
mov
add
popf
cmp
adc
pop
jbe
imul
cmpsl
ja
rclb
pop
add
pop
pop
stos
xor
adc
in
fsubrs
imul
sti
iret
int3
or
push
jne
fsubrl
mov
shr
lcall
insb
test
cmp
aam
lods
cmp
dec
popa
outsl
add
push
gs
dec
outsb
mov
and
xlat
daa
push
inc
int3
dec
or
and
pop
stos
push
aaa
out
sbb
test
sub
pop
sbb
mov
imul
cld
imul
mov
popa
lods
pop
pop
test
xchg
or
out
xchg
aas
dec
push
mov
arpl
or
pop
xchg
xchg
sub
ds
and
pop
gs
jnp
shll
and
int
cld
fbld
outsl
sbbl
or
ss
fldl
add
dec
xor
gs
mov
scas
les
lods
mov
mov
in
movsb
loope
ret
xlat
sub
mov
les
nop
mov
or
mov
jecxz
dec
push
mov
fs
sub
add
xor
mov
mov
dec
cld
push
jl
stos
lods
cltd
lcall
stos
dec
xor
mov
add
cmpsb
stc
xchg
mov
xor
or
inc
roll
sbb
push
adc
jno
inc
xchg
iret
sub
fmull
daa
cmpsb
and
mov
inc
pop
or
xchg
jg
add
outsl
ret
pop
adc
leave
adc
push
cmp
loopne
sbbb
int3
rclb
scas
cmp
test
and
mov
add
push
in
into
int3
icebp
out
xor
fsubs
stos
xlat
out
adc
arpl
push
xor
pop
pop
xchg
push
pop
lock
jg
outsb
cli
pop
mov
cwtl
or
pop
scas
add
pop
iret
hlt
mov
cmpsb
add
incb
loop
pop
aam
addl
add
or
xchg
inc
dec
adc
mov
sbb
fiadds
jnp
cwtl
pop
fnsave
adc
repz
ret
pop
jb
lock
cmp
mov
pop
scas
xchg
popa
dec
or
jbe
in
jle
cmp
fs
scas
insl
imul
clc
cmp
hlt
clc
push
add
fcmovne
out
and
daa
xchg
ret
in
adc
hlt
stos
jmp
insl
stos
movsb
sub
dec
ljmp
cmp
jo
cld
cmp
mov
jne
pusha
les
test
testb
mov
lret
cmp
imul
or
scas
mov
sub
xchg
in
out
pusha
mov
orl
and
sub
sahf
push
sbb
xchg
push
mov
bound
jae
jl
sar
mov
fisttpl
dec
movsl
aas
shll
pop
xor
pop
add
and
jle
pop
dec
mov
push
or
in
sub
pop
pusha
add
popf
pop
jmp
jo
xor
insb
jns
stos
mov
lods
mov
xchg
or
js
push
out
rcrl
ljmp
bound
cmpsb
mov
paddq
je
nop
sub
xor
sub
sbb
aaa
xchg
xor
sbb
ja
insb
push
xor
sub
cmp
inc
ljmp
imul
in
mov
lahf
adc
jno
pop
push
test
add
sbb
push
stos
dec
orb
jge
in
call
fmul
jg
add
es
push
dec
mov
insl
inc
lahf
mov
daa
pop
popa
and
and
pop
lret
xlat
call
test
mov
incb
pop
jle
stos
lods
cmpsb
or
mov
push
jg
sarl
xchg
aad
inc
mov
lods
ds
cmp
and
fdivp
xchg
cmp
and
adc
xor
xchg
aaa
sbb
and
mov
mov
jns
xchg
shl
mov
sarl
bound
imul
ss
jmp
gs
lret
in
dec
lea
push
lods
mov
sti
roll
push
or
add
stos
mov
int3
jge
daa
insl
loope
loopne
jle
mov
jnp
stos
adc
stos
shrl
cmc
adc
ds
adc
or
xchg
push
mov
das
leave
hlt
fs
sub
in
xchg
js
dec
cltd
cmpsb
adc
xchg
rclb
repz
xor
dec
das
movsb
fld
insb
xor
push
inc
cmp
sbb
sub
jns
jp
mov
inc
popf
push
pop
xlat
cli
cs
cltd
pop
mov
shl
jecxz
int
les
dec
cmp
xor
inc
cli
mov
stc
js
jge
cmp
jg
mov
leave
cmpb
jmp
ret
push
out
add
pop
mov
push
mov
cld
inc
mov
lcall
pop
inc
lock
jle
mov
sub
fisubl
or
movsb
push
stc
mov
mov
add
in
mov
jl
in
xchg
sub
push
adc
aam
arpl
and
clc
add
out
add
add
push
pop
lahf
mov
push
loopne
push
push
shrl
cs
or
out
and
push
les
pop
sarb
adc
movsl
cmpb
out
std
dec
shl
sbb
inc
cmp
push
sub
sbb
insl
sbb
andnps
mov
adc
aam
lock
test
mov
pand
aas
jne
add
lahf
insl
inc
xor
mov
cmovb
jp
push
adc
movsb
fisubl
jno
test
fildll
mov
fs
inc
rcrb
shlb
dec
xchg
pop
jae
cltd
sub
loopne
jo
test
test
imul
test
adcl
and
mov
fadds
pop
dec
mov
mov
or
cli
sub
jl
loope
popf
mov
push
or
pop
xchg
aaa
int
add
cmp
sbb
sub
decl
sbb
out
scas
jecxz
push
int3
clc
stc
js
jl
mov
and
in
ja
enter
cmp
les
xchg
pop
mov
fcoml
mov
jle
cld
adc
sbb
stos
jns
mov
lahf
repz
dec
push
dec
je
inc
icebp
push
mov
nop
jbe
mov
push
pusha
adc
and
outsl
jns
inc
xor
repnz
ficomps
sub
cli
mov
adc
sbb
loopne
pop
ret
gs
mov
mov
mov
mov
sub
jmp
mov
ljmp
sub
hlt
or
mov
mov
xrelease
add
push
lret
dec
or
sbb
sub
dec
mov
lods
stos
pop
push
pop
mov
jb
xor
clc
dec
in
scas
fwait
aas
inc
lret
enter
mov
hlt
inc
outsb
xlat
dec
sub
xor
add
xor
cmp
jno
aam
outsb
add
mov
mov
stos
popf
insb
pop
bound
out
hlt
pushf
pusha
pop
mov
je
in
mov
sbb
jo
and
hlt
push
mov
xorb
fiaddl
mov
and
mov
mov
or
push
jne
int3
stos
loopne
sbb
jmp
push
scas
mov
push
cli
out
test
add
filds
inc
jno
inc
fstl
pop
in
ret
jecxz
mov
addr16
or
or
sub
outsl
paddq
pop
dec
fwait
xor
fldenv
mov
fisubs
add
std
adc
leave
mov
fisttpl
xchg
dec
xchg
aas
jb
fcmovnb
and
cld
mov
scas
int3
mov
aad
mov
insl
dec
iret
fcomi
cmovle
imul
mov
sbb
xor
dec
clc
cmp
outsl
xchg
pop
add
imul
insl
dec
inc
sub
push
fdivr
mov
data16
add
pushf
fs
je
sub
mov
pop
cwtl
fadds
jp
mov
pop
incl
std
push
inc
pop
lea
aas
jecxz
add
xor
icebp
jmp
adc
jg
out
loopne
mov
pop
xorl
xchg
add
mov
int3
fcmovbe
cmp
and
xor
mov
xchg
movsb
mov
jp
xor
lcall
inc
mov
xor
loop
mov
in
sbbl
ds
or
out
jl
push
mov
movsl
and
dec
mov
scas
xchg
xchg
outsb
cmc
dec
jle
nop
or
xchg
imul
out
pop
mov
loop
mov
adc
in
adc
jl
jbe
punpckldq
sub
inc
jp
scas
jle
aas
sbb
divl
fwait
or
xchg
jl
push
pop
jb
sahf
inc
inc
adc
outsb
add
stc
sub
jmp
lds
mov
mov
pop
inc
or
insl
or
fs
xchg
xchg
lods
lret
pop
clc
pusha
push
dec
mov
xchg
xchg
test
stos
push
pop
add
lret
aam
rcr
lahf
in
ret
xchg
loope
imul
repz
out
sbb
inc
imul
neg
sub
mov
lods
aas
out
pop
pop
repnz
cmp
popa
pop
gs
pop
mov
jns
jmp
cmpsl
orl
pop
mov
jmp
das
inc
and
inc
mov
jne
orb
dec
sbb
inc
stos
popa
cmpsl
lcall
and
test
mov
push
leave
adc
mov
sahf
sub
shlb
mov
sbb
pop
xchg
cmp
adc
cmp
xor
shr
adc
into
js
pop
loopne
sarl
mov
hlt
dec
add
cmpsl
gs
std
icebp
and
sarb
mov
dec
je
outsb
xor
aad
jnp
cld
dec
push
insl
jne
xchg
rcrb
in
push
lret
or
dec
pop
stos
sub
adc
int3
pop
xor
ret
xor
jno
ds
dec
jo
push
popa
js
loope
cmc
js
adc
sub
das
sub
sbb
sub
es
std
out
test
hlt
cmp
andb
sarb
stc
inc
std
ja
cmc
in
js
sub
cwtl
cltd
repz
lret
push
insl
or
and
jge
imul
outsl
ret
adc
dec
out
jns
xlat
mov
sub
push
mov
stos
and
xchg
cs
fisubrl
nop
int3
fdiv
or
mov
int
lret
loopne
cld
leave
mov
sub
inc
mov
pop
movb
mov
or
xlat
in
jb
pusha
lret
cmp
int3
mov
xor
popf
dec
sbb
inc
xor
imul
rorb
lods
or
mov
jne
imul
mov
jp
out
mov
repz
nop
ss
lcall
fdivs
cmc
sbb
sti
das
call
shl
inc
xor
mov
or
dec
scas
aam
cwtl
push
cmp
in
repz
mov
push
sbb
pop
mov
or
test
lods
inc
lock
das
ds
fs
div
lds
mov
add
fdivs
inc
into
inc
inc
cmpb
adc
stos
clc
cli
mov
sub
jg
mov
movsl
jmp
mov
inc
cmpsb
or
lahf
jae
xchg
adc
xlat
repnz
enter
daa
insb
push
cmp
push
and
cmp
ja
mov
bswap
icebp
enter
xor
xchg
push
gs
jle
xchg
ljmp
popf
dec
imul
mov
sub
push
jnp
jmp
pop
xchg
cli
or
xchg
sahf
lock
adc
sub
xor
mov
push
add
pop
out
addr16
ja
mov
push
push
dec
cld
cltd
pop
xchg
imul
loopne
sub
adc
int3
aad
mov
jecxz
sbb
daa
addl
sbb
movsb
sbb
cmp
mov
mov
push
adc
xchg
push
cwtl
jbe
xchg
cld
outsl
in
push
jg
jno
cmpsb
fnop
aaa
jge
cmp
mov
xchg
inc
cmpb
ljmp
inc
mov
shrb
rorb
add
mov
push
sti
sti
jbe
mov
out
stos
rorl
addr16
jle
xor
cmp
inc
adc
aad
and
mov
out
mov
ljmp
adc
addb
fldenv
cmpsb
mov
out
frstor
bound
push
incl
xchg
cmc
pop
mov
push
jmp
test
adc
data16
jno
lds
sbb
lret
in
push
cmp
sbb
mov
xchg
push
test
int
jmp
cmp
mov
push
stc
mov
js
xorl
or
aaa
les
mov
rol
jl
out
scas
add
and
clc
ds
outsb
xor
sbb
stos
shrl
cmp
jmp
das
insl
cmpsl
mov
js
aad
mov
push
orl
les
mov
dec
div
mov
shlb
inc
pop
pop
pop
mov
shll
iret
rcrb
fnstsw
imul
mov
fisttps
push
stos
push
push
sarb
ret
mov
cmp
nop
addr16
xchg
sub
push
pop
sub
xchg
jle
incl
in
je
push
sti
lds
out
testl
push
sbb
cmp
cmpsb
pop
pop
xchg
dec
ds
and
push
in
aam
fiaddl
jns
dec
cmp
outsb
and
in
lods
cmp
mov
insl
adc
cli
push
adc
movsl
std
mov
inc
insl
or
xchg
mov
pusha
sbb
outsl
mov
cwtl
mov
repnz
or
mov
and
push
icebp
hlt
fimuls
adc
movq
push
fsubrs
hlt
or
lret
dec
jo
mov
push
js
outsl
sbb
or
and
sbb
sub
test
sbb
push
out
xor
mov
mov
xor
fcoms
lahf
cld
pop
pop
xor
cmp
cld
mov
into
aas
push
sub
aad
popa
loopne
pop
stos
test
mov
shll
es
adc
in
mov
inc
in
cwtl
jae
sbb
push
in
shll
adc
sub
lcall
lret
clc
add
mov
mov
push
iret
xchg
fimull
stos
pop
pop
xor
sti
adc
mov
pmulhw
xchg
aam
xchg
rorl
cmp
das
xchg
stc
pmaxub
mov
sub
adc
dec
cmp
push
dec
jb
imul
adc
jb
je
xchg
in
cld
popf
and
sbb
cltd
sub
popa
mov
jno
mov
mov
push
adc
dec
jg
add
mov
dec
xchg
or
loopne
mov
push
je
aad
push
pushf
mov
xor
fs
lcall
inc
jl
icebp
out
outsl
in
adc
sbb
mov
or
xor
negb
sub
xchg
mov
adc
in
cmp
fiadds
push
xor
movsl
out
stc
sbb
test
dec
push
sbb
in
out
pop
sbb
pop
pop
enter
jnp
or
nop
movsl
cmpsb
out
and
xor
call
test
je
test
and
cli
jl
shll
push
and
add
or
sarl
pop
dec
movsl
xor
jae
push
dec
daa
hlt
xchg
and
cmp
sub
int
notl
rcll
stc
push
je
loopne
loope
scas
xchg
or
fisttpl
jmp
movsb
mov
lahf
aad
xor
xor
bound
cmp
jno
lods
dec
lods
mov
adc
or
cli
add
adc
or
outsl
xor
scas
fisubrs
xchg
stos
push
xor
push
stos
fisttpl
xor
jb
cs
xchg
out
fistps
repnz
xchg
inc
mov
repz
imul
and
cmp
xor
pop
and
das
loop
test
lds
test
and
jl
mov
cli
jl
sub
inc
jg
inc
std
cltd
and
pop
or
adc
xor
aaa
push
movsb
pushf
test
outsl
fstpt
push
ret
pop
repz
fiaddl
fcoml
push
or
in
xchg
mov
jns
test
in
mov
testb
aas
dec
call
loop
push
mov
lret
and
pop
xchg
daa
push
pop
in
or
and
cld
mov
rcll
stc
cwtl
xor
inc
hlt
into
mov
divl
mov
ja
cmpsb
outsl
push
aam
xchg
sub
aad
out
xor
sbb
mov
hlt
jnp
imulb
push
adc
aaa
clc
push
fs
sub
or
pop
sub
push
icebp
sbbb
imulb
pop
adc
mov
jge
jecxz
in
jnp
lods
push
mov
lret
sbb
xor
xor
push
inc
and
stos
cmpsl
aad
mov
bound
mov
mov
mov
lret
push
enter
xchg
fcoms
mov
outsl
sub
fidivl
test
lock
cli
loop
fwait
mov
jo
iret
adc
call
jge
jns
and
out
sbb
pop
cmc
mov
sub
and
outsb
out
subl
aas
movsl
mov
leave
mov
sbb
cmp
jecxz
mov
mov
sarb
cmp
push
out
cli
insb
adc
mov
sbb
add
ret
jecxz
sub
cmpsl
jno
push
mov
mul
bound
push
rcr
ret
clc
xchg
data16
dec
pop
dec
sbbb
cmp
dec
js
inc
clc
das
popf
insb
mov
dec
jnp
xlat
fdivl
sbb
outsl
mov
bnd
testl
pop
xchg
add
cmpsb
mov
and
pusha
addb
push
adc
sub
add
xor
inc
jno
lret
sbb
dec
xchg
outsb
fcmovu
es
jle
mov
jecxz
jge
lahf
test
mov
push
jg
stos
xorb
add
jmp
popf
jecxz
push
push
fs
jecxz
fs
in
es
xchg
outsb
sbb
lcall
pusha
pop
inc
loopne
dec
in
icebp
scas
fistpll
sbb
aaa
leave
push
dec
inc
out
inc
mov
jo
mov
repz
lret
xor
adc
test
and
xlat
push
xchg
test
mov
pusha
jo
pop
incl
adc
jnp
repnz
out
jbe
dec
or
sahf
stos
lcall
aaa
mov
xchg
js
mov
sbb
inc
or
xor
cwtl
ret
xchg
scas
sub
sub
icebp
dec
cltd
add
cli
xchg
xor
jl
adc
loopne
pusha
or
jo
mov
cmp
cli
jge
lcall
fdivrs
mov
jne
dec
mov
sbb
mov
mov
inc
icebp
cmp
mov
cli
sbb
out
imul
mov
xchg
mov
add
mov
inc
dec
lock
pop
jle
imul
aad
aaa
in
sbb
mov
in
add
nop
jecxz
dec
je
pushf
mov
jle
fidivrl
ljmp
jnp
mov
mov
jno
out
and
lcall
jnp
adc
ss
fstl
stos
dec
lahf
test
xorl
scas
dec
stc
lds
lahf
sbb
das
aaa
arpl
data16
in
test
les
insb
ds
leave
mov
popl
jmp
bound
xor
and
sahf
push
cmpxchg
lods
xlat
cwtl
xchg
aam
mov
sbb
xchg
mov
adc
jecxz
cld
fwait
out
mov
std
or
dec
push
cld
cmpsb
mov
mov
movsl
dec
or
inc
icebp
mov
jns
cmp
sbb
push
mov
andl
fwait
xor
adc
push
ja
fstl
hlt
lret
xor
pop
outsb
xorl
aad
das
mov
pop
movsl
insl
int
lds
int3
xchg
shr
in
jae
push
sbb
xlat
das
add
add
add
dec
jbe
mov
fisubrs
fisttpl
xchg
push
out
add
in
dec
int
pusha
push
ja
sub
ret
inc
jmp
jo
push
sbb
push
push
mov
sub
mov
push
jbe
sbb
dec
maskmovq
divl
push
sbb
lods
add
insb
push
movsb
xchg
lea
jg
movsl
ret
or
decb
jo
mov
jno
repz
or
out
and
jmp
std
outsl
mov
test
ljmp
or
icebp
mov
movsl
outsb
mov
outsl
and
sub
xchg
ljmp
roll
and
ds
mov
xchg
cs
lds
sub
lea
imul
js
cmp
mov
pushf
insb
pop
xchg
rolb
xchg
push
shl
mov
inc
icebp
mov
mov
addr16
rcrb
addr16
dec
xor
mov
add
jno
sbb
lock
xor
in
stos
test
insl
mov
fcomi
popa
shll
jmp
outsb
cmc
mov
lret
pop
sbb
ret
jae
inc
and
push
call
push
sub
xlat
push
jne
jno
xlat
fdivs
xor
push
pop
in
pushf
outsl
addr16
in
dec
push
mov
mov
leave
ret
mov
jge
or
jne
inc
mov
xor
shr
dec
nop
adc
jl
xor
push
jne
leave
fcmovnu
jbe
cmp
stos
push
dec
push
or
int
leave
inc
mov
idiv
fisttps
mov
adc
imul
mov
flds
xor
iret
cli
jg
js
mov
mov
rcrl
aam
inc
aad
dec
or
push
icebp
arpl
stc
cmp
push
rcl
pusha
dec
divl
add
sub
adc
push
fmul
jl
mov
jl
jne
dec
push
jns
dec
test
sub
mov
jbe
ret
or
xor
fcmove
hlt
rolb
mov
xlat
or
lcall
cmp
lods
dec
jb
push
inc
loope
adc
xchg
pusha
shlb
test
add
mov
xor
ror
xchg
sbb
jecxz
call
mov
shl
lds
clc
push
cli
sub
fildll
repnz
mov
xor
jp
dec
cmp
test
add
scas
mov
gs
icebp
inc
jp
pop
mov
sbb
clc
sub
sbb
inc
lret
nop
xlat
test
inc
int
cld
jne
movsb
jo
xchg
mov
outsl
repnz
add
cli
cmp
and
fcoml
es
and
ret
aam
or
xorb
shrb
xor
stos
rcrl
jg
pop
jo
cmpsl
imul
or
lcall
pop
ret
cli
jns
decb
pop
mov
ror
mov
push
movsb
jle
bnd
in
adc
in
mov
mov
jl
mov
mov
mov
test
ljmp
es
icebp
int3
imul
or
xchg
call
aaa
adc
lock
mov
data16
and
shlb
pop
jge
mov
test
sarb
mov
and
cmp
sub
iret
pop
daa
push
sub
mov
xlat
fadds
ret
pop
js
adc
jge
int
push
mov
sub
mov
fsubrl
inc
xor
arpl
out
leave
cmpsl
pop
xchg
dec
mov
dec
sub
dec
leave
subb
dec
shl
movsl
rolb
mov
or
loopne
popa
pop
or
cmp
inc
aam
jae
add
mov
fisttpll
mov
mov
pusha
cmp
add
add
and
or
xchg
negl
incb
or
icebp
into
mov
xor
cmp
cmp
mov
subb
or
lret
out
cld
out
pushf
push
aad
stos
mov
pop
cmp
mov
or
fnstenv
test
outsl
sbb
scas
add
aaa
cld
fnsave
mov
hlt
mov
icebp
fildl
xchg
pop
loope
jge
enter
outsl
inc
dec
mov
popa
mov
jne,pt
mov
sahf
ret
jle
std
cs
xchg
inc
pushf
inc
mov
aam
loope
in
scas
adc
adc
stos
jp
movsl
pavgw
xchg
cmpsl
adc
and
jmp
mov
sub
iret
orb
movsl
or
sarl
inc
popf
pop
push
fwait
mov
mov
jp
ret
cmp
inc
jne
ret
mov
jmp
lods
lock
xor
shll
jo
or
and
jp
mov
test
cld
adc
jge
pop
sub
jo
cmovs
aaa
inc
dec
sbb
test
mov
push
test
jb
xchg
repz
hlt
loopne
mov
mov
jle
inc
test
sub
jmp
pop
fs
int
sub
movsb
int3
lret
lods
call
mov
pop
xchg
fadds
lcall
stos
fs
stos
pop
pop
sub
std
lock
movsb
enter
dec
push
mov
repnz
lock
test
mov
jg
lock
lods
lea
mov
test
repz
jno
sub
mov
dec
mov
je
aam
cmpsl
hlt
mov
fldcw
in
inc
cmpsl
pop
aaa
cli
xchg
imul
ljmp
mov
and
inc
pop
mov
and
fistpll
lahf
push
repz
stos
dec
test
adc
in
pushf
movsl
inc
outsb
and
fdiv
das
xor
pop
xor
jnp
xchg
pop
and
je
mov
mov
mov
or
aad
sub
mov
xor
xchg
shlb
jbe
push
inc
mov
sbb
in
divb
sbb
mov
dec
sub
test
int3
jge
add
pop
mov
out
repnz
and
push
add
iret
or
das
mulb
or
scas
int3
shll
cld
movsl
xlat
pop
enter
push
inc
icebp
mov
push
xorb
daa
mov
adc
bt
lods
shrb
ficoms
xchg
movsb
pop
xchg
pop
sbb
xchg
mov
test
or
jmp
jle
pop
test
pop
je
iret
mov
fisttps
movsb
push
sbb
add
jle
scas
mov
pop
push
lock
xchg
jno
pop
xchg
mov
in
cmp
lods
shrl
cltd
pop
fcomp
jmp
jmp
not
jle
xor
pop
jg
jne
pop
mov
dec
aam
cld
sbb
xor
movsb
fsubs
jns
les
or
xor
mov
imul
outsl
jle
push
push
js
sub
ds
sub
dec
jae
xchg
int3
cs
cltd
sbb
add
fwait
repz
adc
mov
adc
shrb
lcall
jle
out
mov
dec
xchg
mov
cmp
push
dec
mov
or
xchg
mov
mov
out
lret
cmp
push
cmpsb
jp
cmp
sub
pusha
enter
xor
bound
cwtl
mov
jp
mov
adc
dec
imul
adc
insw
test
sub
or
out
adc
sbbl
scas
shrl
divb
jp
push
in
push
movsb
xor
xor
jp
scas
call
fldcw
inc
loop
lcall
xchg
orl
mov
mov
pop
lock
sub
aaa
test
lret
and
stos
sti
leave
sub
and
mov
or
and
mov
jae
dec
xchg
xlat
popf
xchg
imul
lret
dec
adc
ret
cld
xchg
dec
adc
in
cmp
mov
pop
lcall
loop
or
iret
jno
daa
sbb
lods
xchg
jne
lret
dec
es
or
adc
xor
xchg
lds
icebp
inc
es
mov
sbb
rorl
cld
jecxz
aaa
jns
inc
pop
and
pop
xchg
xor
mov
xor
sub
lods
out
push
xor
cs
mov
add
dec
xchg
addr16
incb
inc
movsb
lahf
adc
jecxz
add
insl
negb
jae
insl
xchg
aad
roll
sub
fldt
sbb
test
aad
nop
jae
push
addr16
pop
mov
fstps
mov
lock
lahf
out
xor
insl
ss
icebp
out
cmp
aas
cmp
in
adc
push
popa
inc
push
push
aam
mov
jle
push
rcrb
dec
cmp
inc
repz
cmp
cmp
jae
fwait
mov
xorl
inc
adc
push
jbe
pop
push
sub
and
das
mov
push
xchg
sub
test
daa
inc
sub
push
stos
xor
xchg
call
xor
push
push
aaa
jbe
popa
add
xchg
jb
mov
in
pop
push
dec
adc
aaa
addr16
adc
mov
ds
leave
jb
ljmp
pop
sbb
inc
test
cmp
adc
flds
cmp
cltd
shlb
jp
mov
sbb
mov
xchg
adc
fucomi
movsl
jbe
push
adc
mov
push
inc
aas
aam
sub
int3
push
jns
sub
push
or
jle
xchg
dec
inc
nop
cmp
jno
loope
xor
push
hlt
jle
inc
cmp
in
or
dec
daa
jp
aad
les
mov
dec
stos
incl
xor
inc
hlt
dec
xchg
testl
shr
adc
inc
push
lret
lea
xchg
pop
add
or
jb
pop
mov
pop
stc
mov
cmc
mov
jl
sub
sub
mov
and
sbb
jl
mov
fistps
add
in
mov
insb
add
out
inc
dec
mov
stos
mov
dec
mov
xchg
orb
jl
les
pushf
stc
hlt
lea
ss
js
mov
dec
in
adc
mov
dec
inc
pop
mov
mov
add
dec
dec
std
push
es
sub
pop
add
jae
ja
cmpsl
out
mov
in
add
sub
sub
jno
ja
cmovae
push
test
int3
cmc
pop
in
and
inc
jecxz
mov
je
jg
xchg
popf
lcall
pop
xor
inc
aaa
cmp
daa
xor
add
out
adc
mov
ja
xchg
mov
shrb
sub
pop
aad
push
aas
add
movsl
dec
faddl
ret
jmp
lods
dec
out
iret
add
push
pop
push
pop
imul
les
fcmovbe
jge
ror
jle
cmpsb
xchg
mov
pusha
fldl
or
ljmp
inc
mov
pop
pop
ds
jae
scas
mov
and
jnp
stc
loop
add
sbb
cmovne
mov
hlt
xlat
adc
push
in
adc
and
cmp
shrl
xor
fwait
mov
loop
nop
les
mov
xchg
push
outsb
and
and
jne
mov
das
mov
mov
sbb
call
jmp
sahf
mov
test
and
and
xor
lods
add
sub
jle
dec
push
jecxz
ljmp
mov
adc
xchg
pop
mov
imul
test
js
adc
mov
pop
scas
mov
xchg
sar
jg
call
pop
repz
xor
aaa
aad
dec
pop
lcall
insb
mov
pop
lock
shlb
or
xchg
ja
stos
data16
xchg
int3
cmp
cmp
fisttpl
testb
imul
or
cmp
push
pop
adc
mov
push
mov
fsub
lcall
out
adc
sub
sub
arpl
mov
ret
jo
je
daa
ja
scas
pushf
test
insl
and
ror
push
pop
dec
loop
int
mov
sahf
mov
or
cmp
mov
cmpsl
pop
add
sahf
fstp
adc
lea
and
mov
pop
xchg
mov
jne
pop
js
mov
xor
shlw
sti
cwtl
inc
add
jae
pop
adc
movsl
xchg
lcall
sahf
xchg
dec
fsubrs
ljmp
fadd
or
and
sub
fisubrs
mov
xchg
mov
leave
push
pop
or
shll
cmp
sbb
add
xchg
push
dec
scas
fisubs
sahf
cmp
shlb
cmp
scas
push
movsb
xor
imul
popa
mov
sub
push
inc
mov
pop
jle
fisttpl
add
movsb
push
mov
push
or
xchg
mov
leave
std
xor
xor
lahf
int3
inc
inc
dec
cld
test
mov
add
pop
pushf
mov
fists
movsl
push
add
jle
addb
jle
xchg
push
mov
sbb
push
cld
outsl
es
jns
loop
addl
cmp
dec
movsl
gs
add
inc
sub
pop
add
xchg
mov
aam
push
xchg
xchg
int3
divl
outsb
push
int3
sbb
orl
dec
aaa
jbe
cltd
lds
pop
cld
or
push
dec
ficomps
mul
mov
sub
jns
cmc
ret
in
ds
cmp
stc
aaa
aas
cli
pushf
sbb
or
inc
push
or
ds
cmp
jmp
xor
adc
inc
cli
pop
cmpsl
rolb
pop
adc
xchg
xchg
clc
pop
push
cmp
or
insl
xchg
mov
push
pop
ds
ret
or
push
fists
xor
jmp
and
pop
lock
outsb
dec
add
and
dec
shll
push
ficompl
fcmovu
in
lods
insl
mov
adc
sbb
cld
adc
dec
push
orb
cmpsb
cltd
pop
mov
push
add
cmp
jno
xor
push
aaa
dec
jg
fstl
pushf
mov
hlt
inc
cmp
sbb
adc
vpsubsw
push
push
adc
loope
out
call
push
sti
stos
push
mov
aam
pop
stc
jne
xor
adc
fs
sahf
push
imull
inc
mov
test
mov
xor
insb
push
xor
test
negb
sbb
push
push
xchg
cs
loopne
xchg
mov
aas
push
adc
sbbl
jmp
cld
aaa
mov
sbb
ljmp
mov
fimuls
leave
outsb
dec
cmc
pusha
lock
lret
fistl
cs
xchg
jmp
dec
lock
mov
mov
jl
push
inc
sub
in
pop
cld
mov
or
ss
adc
imul
mov
aad
mov
push
cmp
xchg
pop
call
add
popf
xor
cmp
add
outsl
jb
or
adc
orl
leave
dec
loopne
cmp
insl
jno
mov
lea
imull
cmc
sbb
inc
mov
mov
js
inc
xor
cli
xor
out
data16
in
das
cmc
pop
mov
add
int3
dec
sub
sub
pop
mov
dec
xchg
mov
int3
enter
add
arpl
cmpb
in
movl
les
stc
addr16
xchg
mov
loopne
in
jg
jg
dec
icebp
arpl
push
inc
dec
xor
cmp
and
mov
divb
inc
adc
cltd
push
icebp
xlat
rcrb
or
pusha
call
xchg
dec
rcl
sub
aam
pop
negl
repz
adc
jae
xor
mov
push
leave
cwtl
inc
jp
and
fstl
push
daa
dec
sbb
xor
fs
rol
out
outsb
repz
add
pop
xchg
out
test
stos
iret
out
sub
stos
xor
pop
xchg
dec
add
pop
out
cmp
xor
fs
imul
lcall
jae
sbb
ds
adc
int
pop
sub
sub
xchg
fsubs
and
pop
stos
out
xor
xchg
xchg
push
dec
jb
out
daa
aad
jl
jno
xchg
mov
nop
cmp
cmc
dec
jb
xchg
dec
les
out
orl
loopne
pushf
fnsave
jo
int
outsl
and
jg
loope
add
out
mov
push
scas
int
adc
test
dec
ret
jge
test
imul
cmp
dec
sbb
fwait
sbb
test
or
or
stos
jb
mov
repnz
xchg
pop
cwtl
pop
repnz
push
das
and
mov
push
arpl
cmp
divb
ss
js
mov
sub
cwtl
push
xlat
loope
in
cs
mov
jb
outsl
jmp
inc
mov
push
std
inc
dec
or
and
sbb
pushf
mov
in
sub
xchg
push
jo
stos
rorb
cltd
and
scas
xorl
imul
and
xor
sub
mov
lret
or
cltd
clts
out
add
jmp
arpl
push
scas
adc
jae
ret
fildl
call
mov
mov
adc
or
out
jmp
inc
lret
push
xor
mov
xor
and
xor
adc
sbb
jbe
rcrb
or
dec
jmp
sub
sti
jo
xor
jae
neg
push
cs
xor
dec
pop
stc
bound
mov
loope
mov
pop
lds
clc
dec
es
push
scas
gs
lcall
mov
mov
stc
sub
inc
ficoml
fs
push
rol
scas
add
das
hlt
sbb
jbe
cwtl
inc
cmpsl
inc
sub
jo
jbe
push
jne
ret
or
dec
cmp
mov
add
enter
rorb
mov
ret
adc
sub
lods
cmp
lods
inc
adc
cmpl
mov
mov
mov
xchg
jb
lea
cmpsl
jmp
jns
xor
pop
f2xm1
cli
inc
pop
pop
jnp
xor
push
sti
jo
pop
ss
xlat
jg
cli
jmp
xchg
mov
movsl
mov
clc
in
outsb
add
in
lret
mov
in
add
ret
pop
sub
pushf
push
xchg
xor
imulb
dec
out
mov
cmpsb
sub
mov
inc
jb
jo
push
mov
dec
ret
jo
mov
pop
or
clc
jne
or
or
lahf
dec
push
push
push
sub
pop
cmp
adc
adc
roll
in
jns
lods
and
xlat
cmp
add
mov
add
enter
lret
xchg
xchg
insl
add
inc
pop
scas
fwait
insl
cli
jmp
daa
rep
xchg
adc
sahf
cmp
scas
sbb
cltd
movsl
int
jno
loopne
mov
mov
mov
into
aaa
adc
sub
mov
xor
jg
ret
lahf
jl
sahf
fwait
add
clc
and
xchg
in
mov
in
rclb
and
pop
mov
lock
mov
cmc
adc
shrb
inc
sbb
sub
imul
dec
shrl
inc
and
inc
or
sbb
rorl
pop
add
ljmp
add
add
out
push
imul
addr16
or
dec
or
cmp
call
repnz
inc
inc
aad
xor
and
jno
cld
lahf
shll
jno
fcoms
xchg
inc
sbb
pop
shll
into
aas
stos
test
xchg
daa
xchg
roll
push
ja
pusha
push
sub
test
adc
dec
jecxz
fcomp
xor
popa
pop
jb
mov
xchg
pop
std
call
or
sub
int
sub
shr
pop
jp
movsb
loop
fbld
cwtl
jae
jg
fs
pop
pop
pop
sub
adc
stos
sub
inc
inc
cmp
shl
fdivrl
clc
mov
mov
shll
orl
mov
mov
rol
adc
mov
hlt
std
cltd
jg
nop
xchg
mov
sti
xor
sub
fcoms
push
out
cwtl
mov
lcall
aam
outsb
dec
pop
jg
shlb
cmpsl
nop
fiadds
jle
shll
jmp
jno
or
shll
insl
ror
xchg
cmpsl
and
mov
mov
xor
sub
imul
xchg
loop
lock
push
mov
lcall
adc
cwtl
fwait
sub
xlat
inc
xorb
mov
sub
cmp
cmp
pop
xor
xchg
popf
addr16
cli
and
adc
xchg
sub
shll
js
lods
lds
call
xchg
mov
sbb
mov
jb
rcrl
lahf
xchg
les
adc
push
jge
add
push
fldl
pushl
and
cmpsb
xchg
sbb
dec
insb
adc
cmp
or
add
ja
add
mov
inc
push
and
xor
mov
scas
ret
lock
daa
jae
loopne
mov
xchg
mov
cli
or
mov
mov
dec
fnstsw
xor
push
in
not
mov
je
adc
pop
testl
pop
bswap
cmp
inc
pop
mov
lret
lret
and
push
inc
push
gs
mov
mov
mov
dec
or
nop
pushf
lret
push
lcall
in
xchg
les
push
out
icebp
push
sbb
push
jae
sub
mov
inc
dec
adc
xchg
sbb
jmp
cltd
ljmp
psrlq
pop
jbe
dec
rol
inc
aas
repnz
mov
out
push
lock
or
out
std
loopne
gs
imul
xchg
js
sbb
loop
xor
inc
xchg
mov
mov
and
xchg
push
mov
add
fdivs
dec
or
call
scas
pop
outsl
imul
pop
push
push
clc
and
test
xchg
sub
push
sbb
jmp
test
add
mov
push
sub
fisttps
mov
cli
lret
fcmovne
fistl
in
or
stos
jno
pop
ljmp
or
mov
out
test
cld
add
ja
push
pop
or
jp
bound
jp
test
subl
xchg
bound
subb
das
dec
pop
enter
mov
mov
mov
mov
push
push
pop
inc
ficomps
push
imul
pop
push
sbb
dec
ret
jecxz
cmp
xchg
cmp
mov
and
inc
int
adc
gs
mov
pop
xlat
pusha
and
out
bound
fwait
stos
stos
insb
inc
sbb
add
jg
mov
enter
jp
jnp,pt
dec
jnp
and
dec
adc
scas
sub
xchg
cltd
mov
mov
cltd
mov
xchg
lret
inc
das
or
pop
ffree
push
add
and
out
xor
test
and
inc
cmpsl
test
xchg
arpl
outsl
test
cmpsb
out
out
mov
jl
xor
out
rorb
cltd
jb
daa
pop
int3
pop
fwait
jle
test
pop
ds
sarb
inc
jmp
aaa
sub
mov
push
push
xor
xchg
pop
lret
addb
fadd
cld
scas
in
out
addb
iret
mov
push
jmp
lea
ss
es
rorb
ds
je
loop
pop
sarb
inc
das
ljmp
ret
rclb
aad
or
add
pop
loop
cli
push
or
or
xlat
push
pop
adc
int
pop
sub
mov
int
jg
sub
ret
dec
or
mov
and
ss
xchg
cmp
popf
lret
cmp
sbb
add
lea
mov
rorl
lahf
push
jns
adc
in
or
loop
jp
aad
ds
sbb
aas
pop
pushf
out
into
test
mov
loope
push
inc
sbb
repnz
les
sub
dec
loop
in
into
dec
jecxz
mov
mov
pop
out
add
mov
pop
fstps
cmpsb
dec
jae
and
pop
cmp
pop
cld
push
fidivrl
nop
xchg
orb
test
ja
dec
cmp
push
xorb
js
loop
stos
cmp
imul
sbb
hlt
jo
jae
lds
mov
pop
mov
push
mov
push
int
mov
jo
mov
inc
stos
jge
or
cmpb
out
movsb
sub
gs
js
jecxz
cli
cs
scas
or
mull
rcll
js
stos
fsts
mov
push
rol
cltd
mov
inc
repnz
loopne
xchg
cmp
test
aam
cmp
shlb
mov
adc
mov
ret
js
pop
subl
pop
pop
xor
or
mov
cmpl
iret
pop
mov
fnstcw
stos
lds
scas
cmp
dec
fidivrs
mov
rclb
es
xor
mull
sbb
jne
cmp
gs
repnz
cs
dec
shrl
push
sbb
push
cmp
mov
stos
xor
push
data16
insl
push
push
pop
jle
mov
orl
dec
xlat
dec
ljmp
xor
mov
rcrl
mov
int3
cmp
dec
testb
xor
pop
pop
loopne
shll
in
out
rorl
jne
and
or
and
in
xorb
mov
ret
ret
in
in
outsl
mov
stc
test
xchg
fistl
dec
stos
jnp
xchg
push
in
jle
cli
pop
gs
cmc
in
mov
in
add
sbb
loope
push
xchg
stos
roll
inc
jge
mov
or
data16
add
shrb
out
idivb
push
inc
jl
pushf
orb
or
cmp
test
fs
lret
imul
imull
xlat
pop
pop
js
popf
and
pop
dec
xor
fisubrs
mov
int3
cmp
frstor
add
pop
or
imulb
fnstenv
mov
dec
cmp
sub
xor
out
insl
les
sti
mov
sub
loope
jmp
lods
or
leave
loopne
fimull
jmp
cmc
loope
inc
fiaddl
add
ja
mov
sbb
dec
and
mov
scas
dec
push
mov
clc
lock
mov
fs
pop
ljmp
xchg
mov
inc
jp
in
in
andb
fwait
movsb
dec
push
ljmp
shlb
sahf
cmc
push
lret
add
xchg
xor
jne
pop
and
repz
es
mov
dec
ja
mov
mov
sbb
ljmp
shrl
fiadds
mov
xor
xchg
cwtl
lret
mov
cmp
and
mov
adc
nop
rcrb
pop
add
loop
es
in
lds
repz
icebp
and
push
inc
mov
icebp
mov
scas
sahf
sbb
cmc
leave
jae
cmpsb
xchg
in
jns
sti
pop
iret
int3
cltd
inc
movsb
add
es
scas
movl
dec
mov
addl
sbb
rclb
mov
popa
pop
in
push
clc
popf
lfs
rcll
push
fnsave
mov
mov
inc
jae
mov
aas
in
adc
subl
lcallw
das
imul
inc
dec
inc
cmp
sbb
sbb
pop
repz
dec
xchg
inc
and
aam
push
jp
rcr
movsl
push
push
xchg
mov
loop
fildll
ret
push
add
mov
icebp
scas
mov
pop
cmp
in
mov
jge
cmp
mov
shlb
cmp
push
and
mov
stos
xor
out
daa
sti
int3
mov
xchg
mov
and
inc
fwait
mov
sub
add
jae
pop
adc
xor
stc
daa
mov
movsb
mov
jl
mov
sub
mov
aam
out
add
lds
jne
popa
sbb
jo
movsb
jp
out
cmp
mov
data16
jmp
jp,pn
outsl
xchg
fs
sarb
mov
jnp
leave
out
add
add
lret
mov
fistpl
cmp
enter
sub
pmaxub
aam
repz
sbb
push
jno
cmpsl
fdivr
adc
jno
lea
fwait
dec
jo
cli
sub
cmpb
sbb
xchg
or
outsl
lret
pop
test
loope
addr16
and
fcoml
cwtl
pop
movsl
xchg
xchg
aad
es
test
jp
jmp
iret
scas
in
mov
inc
sarl
jns
pop
test
test
xchg
fildll
and
cmpsb
or
and
mov
jae
int
adc
push
out
nop
mov
lea
sub
xchg
fisttps
pop
add
iret
jo
fsubr
xchg
mov
xlat
lahf
pop
mov
xchg
hlt
sbb
cwtl
subl
push
adc
cwtl
pop
movsb
outsb
ds
cwtl
divb
pop
mov
pop
cli
mov
jns
cmp
loopne
into
fldenv
imulb
cld
cmp
divb
add
mov
mov
andb
mov
shrl
lods
adc
push
lret
mov
xor
iret
mov
or
out
rcll
in
mov
push
pop
xlat
xorb
inc
shr
test
frstor
repz
loop
sti
pusha
jnp
xchg
cmp
psllq
fdivrl
inc
icebp
sub
push
cmc
xor
loop
mov
aad
scas
cltd
push
push
scas
push
cli
xchg
bound
hlt
pop
in
lcall
loop
loop
call
add
pop
jbe
gs
cmp
addr16
aas
mov
movsl
adc
insl
xchg
repz
lea
sbbl
jns
sub
xor
pop
xchg
popa
mov
mov
sti
mov
or
inc
int
add
test
dec
add
jge
inc
pop
lea
push
std
mov
mov
sub
das
or
enter
les
push
push
xor
sbb
or
out
in
bound
dec
rolb
in
and
stc
fcoml
sbb
clc
push
xchg
or
aad
cltd
adc
mov
sub
ss
xor
shll
adc
adc
mov
hlt
and
outsl
sbb
sbb
fistpl
out
ficoms
push
lcall
lods
int
mov
push
adc
lcall
xorb
sarb
in
mov
dec
and
in
pslld
lahf
in
sbb
xor
lds
adc
dec
pop
leave
ds
and
push
xor
cwtl
xor
das
out
pop
xchg
mov
aaa
xchg
in
mov
test
xor
sub
mov
cmpsb
sub
push
mov
cmc
pop
xchg
jl
sbb
loopne
push
mov
in
mov
xor
jg
cmp
pop
repnz
mov
mov
loope
inc
push
adc
in
lahf
lods
sahf
out
movsl
dec
push
mov
popa
or
push
popa
aas
lcall
js
cwtl
jg
insb
test
mov
lret
ret
ja
ljmp
test
les
es
push
jbe
stos
add
sbb
scas
push
xor
jno
pop
xchg
mov
mov
inc
dec
add
pop
mov
sub
jl
cli
sbb
mov
dec
pusha
push
lds
stc
or
jp
and
pop
in
cmc
cmpsl
out
dec
mov
jecxz
aas
test
repnz
mov
lds
jnp
mov
cmpsb
mov
jmp
idivb
pushf
adc
ds
test
outsl
js
loope
push
cmc
lods
cli
add
or
mov
or
in
repnz
jne
adc
mov
fxtract
rolb
xor
jmp
test
xchg
xor
sbb
scas
out
mov
out
and
jl
popa
std
xchg
je
int3
sahf
loopne
pop
aad
daa
pusha
cld
sbb
outsb
scas
dec
adc
dec
lahf
ret
bound
or
mov
rolb
pop
pusha
movsb
fdivrl
dec
insl
and
out
inc
loopne
jmp
xor
sub
pop
jle
and
outsb
add
pop
mov
adc
cmp
jnp
enter
pavgb
jnp
fmuls
aaa
cwtl
lret
pop
inc
cld
jae
push
aad
jp
enter
mov
and
repnz
out
jno
test
xchg
cmpb
arpl
pop
lahf
dec
xchg
or
mov
jns
or
es
adc
ljmp
jno
ss
pop
movsb
mov
popa
cltd
shll
sbb
fimuls
xchg
sahf
xor
sub
pusha
fdivs
mov
and
xchg
lret
sub
sarb
nop
dec
in
aad
jmp
inc
insl
ror
mov
or
ss
aam
cmp
in
mov
gs
or
dec
xorl
cld
cmp
adc
movsb
mov
and
xchg
mov
inc
inc
mov
pusha
mov
enter
jmp
fadds
enter
test
cmpsl
stos
pop
pop
dec
sbb
fadd
out
mov
test
sub
ffree
roll
dec
dec
negl
js
ror
imul
adc
les
mov
nop
jge
rorl
int
fistl
mov
stos
mov
push
lds
call
adc
fistl
daa
push
aam
sbb
xchg
pop
push
jmp
shlb
adc
ficompl
inc
xlat
shll
gs
add
mov
and
insb
mov
mov
insb
or
mov
dec
and
xor
or
xchg
sub
xchg
mov
rep
adc
dec
and
out
xchg
ret
mov
je
imul
and
aam
push
jns
mov
stc
lds
sub
scas
xor
and
mov
pusha
dec
bnd
cmp
mov
out
mov
sbb
mov
mov
js
rcrl
dec
jno
lods
jg
addr16
pop
adc
cmpl
mov
pop
xchg
mov
jle
addr16
testb
push
lcall
into
scas
and
lock
popa
sub
or
jae
pop
xor
test
rolb
mov
mov
ret
insb
movsbl
ss
sti
jl
sbb
mov
pop
les
lcall
pop
mov
sub
dec
rcll
out
int3
xor
hlt
xchg
popf
mull
lds
out
sbb
jl
jne
sbb
push
pcmpgtw
loopne
mov
mov
xor
lcall
jne
add
cwtl
dec
pop
pop
bswap
jp
shlb
sub
cwtl
pop
lods
push
into
mov
push
push
loope
aam
outsl
incl
divl
sbb
dec
sub
and
jb
xor
xchg
clc
lods
inc
fdivrs
outsl
shlb
mov
arpl
rorb
stos
sbb
out
pop
addr16
ja
rep
cmp
jle
pushf
daa
xor
mov
int
das
cwtl
pushf
xchg
js
cmp
pusha
cmc
xor
and
xor
ret
cmc
movsl
ret
add
or
imul
loope
ja
sbb
fsubl
cmc
mov
clc
sahf
jge
lret
insl
sub
sbb
gs
sti
or
pop
pop
ja
mov
rcrb
dec
mov
stc
in
jle
movsb
cmpsb
cmp
or
dec
in
arpl
dec
add
add
mov
dec
cmp
push
or
xchg
jne
popl
mov
int
inc
adc
shrl
in
xchg
scas
sbb
sti
cmp
rolb
xor
pop
inc
xchg
cwtl
shl
adc
or
std
mov
negb
pop
shlb
pop
gs
mov
lret
mov
xor
pop
cmp
xchg
les
dec
gs
mov
xor
xor
mov
movb
sub
jl
in
shlb
mov
inc
dec
mov
sbb
add
call
loope
xor
or
push
movsl
icebp
pop
cli
imul
test
popa
xorl
or
stos
mov
add
lret
cmp
inc
stos
movsl
fldt
outsb
fldenv
sti
cmp
mov
lods
lock
jecxz
aam
sbb
sbbl
cld
sub
mov
jmp
sbb
xchg
pop
repnz
rol
ret
jle
outsb
push
and
iret
pop
and
xchg
pusha
mov
pop
dec
fwait
out
mov
popa
leave
push
xchg
inc
sahf
xor
outsl
nop
aaa
sbb
mov
imul
mov
add
xor
xor
adc
jnp
cwtl
push
jae
mov
push
ljmp
rcrb
inc
sbb
push
or
mov
subl
push
push
jg
out
cs
jecxz
aas
out
jae
xchg
sbb
mov
cmpsb
mov
pop
je
jg
mov
cmp
cmp
fildl
mov
rorb
sahf
lret
inc
dec
int
mov
imul
leave
int
pop
dec
inc
rol
dec
jb
add
mov
xchg
cwtl
imul
add
xor
ja
mov
jbe
int3
fcmovbe
lret
shll
ja
into
cli
enter
aaa
mov
hlt
pop
rorb
mov
cmp
mov
loope
xchg
add
jecxz
outsl
adc
cmp
push
push
lret
lret
hlt
and
or
ficomps
mov
pop
out
mov
mov
pop
movsl
insl
lahf
cltd
dec
xchg
outsb
xor
movb
xchg
xchg
nop
pop
mov
ret
and
fistpll
lods
mov
cmpsb
stos
cli
mov
xchg
xchg
inc
push
sub
stos
sbbl
mov
call
push
fdiv
fldl
mov
in
orl
ja
repnz
into
cwtl
push
adc
jne
in
cltd
pusha
or
addr16
cmp
mov
in
push
cld
mov
loope
mov
push
ljmp
cmp
imul
mov
addb
loopne
pop
dec
lods
and
lods
xor
cli
adc
inc
adc
adc
dec
xchg
dec
or
hlt
jecxz
mov
xor
jecxz
cmp
outsl
push
incl
jmp
clc
cld
inc
fistps
iret
fcoml
into
add
ja
addr16
stos
sarb
clc
dec
cwtl
xor
lret
add
jle
adc
cmp
shll
jge
aas
push
inc
sub
sbb
xor
sahf
andb
out
arpl
pop
ja
sahf
cmpsl
sbb
cwtl
jnp
aaa
add
into
stc
dec
imul
push
mov
loop
cmp
push
fdivs
mov
dec
stc
filds
xor
imul
cmp
xor
lock
cmp
stos
loop
jno
scas
or
adc
ss
dec
adc
pop
sub
jne
inc
mov
push
cmp
mov
stos
pop
scas
test
mov
mov
mov
cmp
clc
loope
outsb
stos
sbb
repnz
enter
sbb
repz
mov
das
or
addr16
hlt
pop
cltd
stos
or
or
cmp
add
inc
hlt
add
mov
push
mov
ss
data16
xchg
mov
rcll
xchg
ret
adc
cli
xchg
aad
add
into
jge
adc
pop
push
ljmp
push
inc
in
mov
ror
cmpsl
incb
cmp
aaa
test
lock
lahf
jge
adc
ret
pop
shlb
mov
xchg
dec
arpl
xor
dec
jns
test
jge
pop
in
js
test
sub
jmp
in
int
inc
movsb
js
xor
hlt
es
imul
faddp
stos
out
add
jno
outsl
scas
xchg
cli
jmp
jmp
roll
arpl
and
nop
ds
jns
sbb
test
stc
xchg
or
scas
or
jle
imul
or
les
push
aam
dec
add
scas
out
loop
aaa
xor
outsb
bound
adc
pop
adc
mov
sbb
mov
not
imul
movsb
into
ficomps
out
dec
popa
pop
dec
movsb
inc
cli
stos
mov
jae
clc
add
movsl
fimull
mov
rol
pop
jb
jnp
inc
call
test
jg
pop
jo
and
ds
subl
adc
pop
dec
pusha
mov
push
xchg
push
adc
mov
sti
insl
jge
pushf
test
inc
and
jne
xchg
jbe
inc
jae
mov
add
outsl
lret
test
ss
dec
scas
mov
inc
test
sar
repz
stos
xchg
frstor
push
andb
sub
xor
xchg
outsl
les
shll
gs
mov
es
ljmp
lods
jecxz
lods
mov
mov
gs
adc
push
pop
mov
and
dec
or
and
mulb
cli
dec
je
cmp
adc
xor
add
idiv
sub
je
adc
fbstp
dec
pop
mov
inc
lock
aad
test
push
push
add
cmpsl
popf
mov
xchg
adc
movsl
loopne
and
filds
pop
jcxz
mov
sbb
mov
inc
xchg
push
lds
mov
pop
fimuls
or
or
je
fidivs
rorl
lcall
out
lock
mov
shrb
stos
clc
lock
cs
adc
iret
outsl
lcall
fldl
pop
loope
pop
rcll
pop
add
add
pop
mul
and
repz
mov
sbbl
push
xchg
in
add
adc
sar
je
addr16
mov
xchg
push
ret
jg
mov
add
and
inc
and
stos
fsubrl
addb
xor
inc
loop
add
sahf
popf
add
ds
loopne
jge
pop
stc
sbb
stc
cmpsb
into
jnp
imulb
mov
mov
int3
sbb
hlt
pop
outsl
mov
sub
add
insb
pop
sbb
jle
mov
adcl
out
adc
pop
lock
imul
adc
push
xchg
fcoml
out
add
mov
jecxz
fistpl
ja
je
pop
arpl
inc
loope
mov
jg
ljmp
dec
adc
fisttpl
push
stos
fcomi
cmp
loopne
sub
sbb
lods
cwtl
pusha
xchg
jl
or
adc
jp
enter
jne
jo
repnz
mov
mov
mov
sub
adc
jo
sub
push
sbb
clc
mov
and
out
push
dec
xor
fdivl
mulb
test
mov
outsb
dec
push
repnz
adc
pause
mov
test
and
divb
sub
movsl
xor
imul
fs
jmp
stos
mov
mov
bound
jecxz
das
loop
push
and
ss
pop
xor
and
mov
sub
mov
in
adc
aam
sbb
add
int3
pop
xor
ret
pushf
jbe
jle
push
jl
stos
nop
daa
leave
and
inc
inc
xor
inc
mov
test
sbb
jno
lcall
bound
test
ret
shlb
push
mov
add
jns
sbb
or
push
mov
insb
dec
dec
pop
or
aad
mov
or
aaa
add
jns
icebp
dec
lret
mov
xchg
dec
out
inc
jg
mov
pop
fs
xchg
xor
js
out
lret
push
mov
rcll
scas
imul
test
xlat
pop
lock
sbb
lcall
xchg
pusha
lahf
fists
jl
sbb
pop
mov
lahf
dec
mov
inc
sbb
mov
mov
jg
bound
in
cld
lret
sbb
jb
test
pop
int3
pop
mov
mov
xchg
sub
data16
push
xor
bound
shlb
data16
cmp
jno
mov
iret
adcl
out
ljmp
ret
test
addl
cmp
imul
fs
push
testl
dec
dec
cmp
pop
pop
data16
lods
mov
js
ljmp
push
push
scas
mov
aas
repz
jb
cmc
das
sub
xchg
flds
jle
pop
mov
ds
mov
sub
mov
push
cmp
lock
xor
fbld
lds
addr16
push
mov
xchg
jecxz
pop
xchg
mov
dec
mov
mov
leave
lods
or
xchg
loopne
test
lea
xor
sahf
fldcw
enter
cmp
icebp
out
xchg
mov
shl
xor
pop
sbb
fsubs
inc
mov
mov
ljmp
adc
mov
cs
xor
mov
jl
jne
loopne
stos
pushf
aam
fldcw
mov
js
ds
out
cmpsb
push
xor
aad
pop
push
inc
pushf
sbb
add
std
sub
mov
add
xlat
test
js
dec
and
jp
jp
pop
mov
sbb
iret
ret
mov
jle
stc
fildl
loopne
insl
xchg
pop
sbb
add
dec
int3
adc
mov
pop
jmp
stc
sahf
inc
out
pop
jo
lahf
jl
xor
icebp
sub
mov
cli
ss
scas
jg
aas
push
inc
push
mov
ss
out
pusha
mov
addb
fs
cmpsb
and
das
cmp
sbb
cltd
out
pop
cli
hlt
push
and
inc
imul
inc
jne
loopne
xchg
int3
fs
scas
mov
push
cmp
ds
push
clc
nop
aam
out
popl
dec
sbb
jge
inc
inc
cmp
popf
push
sbb
and
or
sub
jbe,pt
cmpsb
daa
dec
cli
cmp
icebp
add
mov
lock
sub
sub
xchg
sbb
xchg
add
dec
add
inc
jmp
outsb
mov
test
test
sbb
or
clc
jne
loop
xchg
imul
in
movsl
jle
add
push
jp
sbb
lds
test
add
mov
lods
mov
dec
jg
outsb
pop
clc
sahf
fdivs
or
inc
bound
stos
jnp
adc
stc
js
sahf
fs
sbb
mov
fists
inc
mov
repz
adcl
mov
fs
fsubr
leave
push
fsubp
or
cmc
adc
inc
leave
push
shrl
cmp
scas
fdivrl
loope
ffreep
xchg
xor
mov
push
data16
wrmsr
cmp
or
or
stc
mov
mov
mov
sbb
cmp
push
sbbl
mov
bound
jmp
cltd
fsubp
adc
lahf
rclb
fwait
xor
js
jnp
in
rcrb
or
sub
je
or
cmpsb
xor
mov
mov
xchg
jo
notl
sbb
sbb
lret
jp
popa
aad
inc
xchg
push
std
jmp
inc
cmp
mov
push
cmp
sti
cs
into
inc
in
or
mov
xchg
sti
fwait
push
cmp
xchg
mov
xchg
cli
addr16
scas
adc
xlat
loop
jne
adc
inc
jbe
data16
fdivrs
dec
jne
xor
mov
pop
addr16
sbb
sub
mov
mov
push
jns
out
and
loope
adc
aas
dec
or
out
fstps
aas
dec
adc
cmp
sub
xlat
adc
loopne
jnp
mov
stc
inc
xor
lret
movsb
in
cli
cmp
fwait
mov
pop
push
pop
pusha
cmp
jmp
cmp
adc
test
aas
pop
dec
fstps
shr
mov
mov
push
xchg
push
clc
mov
or
test
and
mov
jecxz
dec
lret
push
fldlg2
xor
insl
out
mov
mov
mov
daa
cld
xor
hlt
mov
jg
mov
rcll
sbb
jecxz
pop
int3
xchg
sti
inc
jo
add
pmaxsw
push
int
inc
mov
sub
imul
dec
jecxz
dec
xchg
xor
add
fldenv
in
fs
jnp
or
cwtl
and
gs
pop
inc
decb
inc
sar
imul
insb
adc
les
pop
je
mov
arpl
inc
mov
cmpsb
movsb
jbe
sahf
sbb
es
out
ja
out
mov
addr16
stos
mov
loop
ret
inc
arpl
inc
lds
es
dec
notl
sub
out
xorl
push
sbb
dec
mov
push
pop
xor
or
jge
jns
sbb
pop
fidivrl
pop
mov
mov
push
xchg
xchg
push
dec
and
int
stos
addr16
mov
jmp
adc
or
mov
or
sbb
mov
iret
xor
sti
pop
adc
dec
repnz
repz
insl
jns
mov
lea
push
fnstenv
pushf
dec
inc
ja
mov
push
addr16
into
je
mov
inc
cmp
pop
mov
sub
shl
setb
sbb
jle
xchg
xlat
es
popf
nop
ljmp
out
mov
ficompl
dec
push
loopne
dec
lahf
mov
mov
inc
loop
add
or
hlt
lret
inc
repz
into
sahf
pop
and
out
pop
add
inc
mov
push
xor
push
cmpsl
stc
adc
cmpsb
mov
inc
lea
insl
mov
and
add
and
pop
push
mov
xor
push
push
ror
scas
cmp
mov
cmc
ljmp
imul
out
test
or
repnz
jno
stos
es
mov
int3
int3
jp
lret
ss
stos
push
cmp
adc
push
adc
jl
mov
dec
orb
jle
mov
aam
pop
mov
xor
cmp
xchg
mov
sub
call
xor
push
dec
les
cltd
sbbl
insb
iret
xor
mov
pop
out
imul
jle
lods
idivl
loop
rorb
cli
pop
mov
test
ja
iret
mov
jl
rcr
lods
or
mov
setle
mov
and
into
movsl
pop
mov
jg
pop
aam
xchg
xor
push
sahf
int3
je
push
pop
jle
push
lahf
inc
push
stos
mov
xor
imul
mov
jmp
xor
mov
dec
ret
or
mov
icebp
lock
rcrl
insl
cld
stos
ret
icebp
ja
mov
mov
fsts
pusha
sub
jo
xchg
push
mov
and
xchg
add
lds
cmpsb
sbb
scas
sub
dec
jo
add
popa
incl
xor
mov
xchg
sub
js,pt
bound
subl
loop
or
xlat
js
pop
sbb
andl
sbb
rcrb
xor
clc
rorb
addl
or
dec
cwtl
scas
mov
in
push
js
sahf
repz
push
inc
leave
fwait
push
stc
xchg
mov
imull
je
popa
repz
ds
aas
push
pop
cmpsb
es
mov
and
stc
ljmp
loope
mov
test
hlt
les
rolb
ja
cmp
iret
mov
movsl
xchg
cmc
in
cltd
and
pop
imul
movsl
das
in
xor
sub
fsubp
or
sbb
int3
stos
fnstenv
enter
sub
push
cmp
sub
std
xchg
push
pop
les
clc
xchg
ds
icebp
stos
xor
cmp
movsl
fldenv
fbld
outsb
fcomps
pop
xchg
inc
inc
cmp
dec
in
imul
push
loopne
ljmp
jmp
xor
mov
out
test
mov
dec
mov
xlat
aaa
mov
sti
push
clc
inc
xrelease
sub
mov
out
add
dec
rcrb
jl
push
ljmp
icebp
mov
dec
cmp
push
mov
lock
clc
jb
xchg
test
adc
mov
out
xchg
pop
add
out
pushf
pop
sub
repnz
popl
jae
push
cmp
mov
push
pop
mov
jmp
cmp
nop
out
push
ret
add
inc
repnz
sbb
out
cltd
or
je
sub
mov
adc
lock
in
daa
pop
push
shll
in
mov
jb
xor
mov
mov
xor
inc
cmp
loopne
outsl
mov
sbb
mov
or
sti
lret
cmp
dec
mov
popa
inc
enter
xchg
mov
stos
stc
lock
mov
in
and
into
mov
lods
xor
fcoml
push
lock
out
test
cmpsl
cld
in
rcrl
out
test
out
aam
std
aas
ds
and
lds
dec
mov
jge
jl
iret
movsl
cs
fbstp
xor
aad
lcall
mov
into
test
mov
or
ficoml
sub
push
jmp
push
int3
inc
icebp
xchg
mov
mov
lret
aaa
and
mov
cmp
mov
sub
inc
xor
inc
or
add
mov
ss
push
push
and
xchg
pop
mov
insb
sbb
pop
fbld
fsubr
jne
pop
pop
push
movsl
mov
mov
ss
add
jnp
cmp
rcr
push
mov
jne
insl
sbb
jle
jae
lret
jp
das
mov
xor
decl
jns
iret
add
frstor
nop
sbb
cmp
int3
jb
pusha
mov
add
out
cwtl
xor
sub
in
fldenv
add
dec
add
cmpsb
jbe
lea
and
mov
outsl
or
jmp
jns
lds
jle
jg
jmp
mov
shlb
in
fstps
sarb
adc
pop
jle
or
scas
xlat
cmp
scas
bound
scas
cmp
xchg
push
jle
sarl
push
cli
fwait
js
iret
dec
mov
or
es
xlat
jl
fadd
adc
ljmp
xor
sbb
arpl
mov
adc
lret
fcomps
xor
jne
decl
xchg
push
fs
roll
push
adc
push
loope
das
pop
repnz
xor
jg
loop
pop
pop
xor
cmp
mov
mov
je
cmp
mov
repnz
out
push
ret
movsb
out
sub
mov
out
jge
movsb
or
inc
das
cmp
mov
inc
pop
and
stc
add
cmc
jnp
inc
push
jecxz
sbb
test
out
pop
inc
dec
push
repz
pop
loop
mov
cltd
nop
cmc
out
inc
jmp
aas
add
cmp
vsubps
nop
pop
xor
lods
or
xor
xor
addb
mov
fisttpll
lods
inc
cmpsb
lret
adc
inc
push
rol
jns
es
enter
xor
out
sub
pusha
push
repnz
mov
jecxz
push
pop
mov
loope
xchg
pop
add
pop
imul
fisttpl
shrl
pop
lods
push
push
jp
scas
jns
lret
jle
test
cmp
out
loope
ficomps
xorb
and
adc
cmp
dec
dec
sti
lods
movsb
cld
sub
xor
popl
cwtl
xor
xor
scas
test
jmp
sahf
shl
int
or
insb
lods
in
cmp
js,pt
mov
inc
mov
mov
lret
push
cmp
push
mov
xchg
push
jnp
js
sahf
stc
cltd
call
or
lods
xor
rclb
shrl
sbb
cli
xchg
mov
test
int
out
xchg
add
sbb
mov
xor
and
mov
push
das
stc
sub
int
push
std
pusha
iret
shll
pop
mov
jl
xchg
ds
xorb
jg
out
insb
pop
out
cmp
xor
inc
mov
mov
or
stos
mov
movsl
cmpsl
mov
imul
adc
cmp
insb
iret
cmp
movsl
mov
inc
push
addb
cli
mov
dec
dec
cmp
inc
push
mov
push
fs
xchg
mov
sub
paddusw
mov
loope
sbb
lret
push
lock
lret
aam
dec
xor
sbb
push
mov
ret
and
inc
push
jecxz
js
cmp
dec
cmp
dec
aaa
push
mov
bound
out
dec
rolb
andb
aad
push
nop
sub
pop
push
push
jl
lea
aam
cmp
lcall
push
xor
add
xor
cmpsl
es
mov
push
je
mov
ss
push
and
xchg
in
xchg
inc
rorl
xchg
inc
add
adc
pop
mov
movsl
add
test
sub
xor
popf
xor
cmc
mulb
mull
cwtl
sub
dec
hlt
leave
push
and
data16
xor
push
sub
xor
int3
and
int3
jmp
fiaddl
jne
sub
cvttps2pi
mov
cmpl
push
cmp
fldt
sub
ljmp
xchg
rcrb
adc
icebp
mov
out
jno
inc
pop
add
pop
lods
hlt
insl
pop
lock
sbb
in
push
ja
adc
mov
xor
into
inc
xchg
xchg
push
sub
loop
dec
xchg
js
dec
arpl
fadds
jge
rcll
outsb
sub
xchg
popf
jno
mov
pop
add
sub
dec
adc
dec
xor
stos
mov
mov
push
jae
in
sbb
out
dec
mov
hlt
mov
in
sbb
test
xchg
aaa
das
fiaddl
lods
jns
subl
lea
js
in
jge
ret
and
push
sti
inc
add
sbb
jl
addr16
inc
imul
orb
lret
orb
mov
push
loopne
xchg
cmp
and
test
sti
shrl
jb
jge
push
shlb
xchg
lcall
in
aam
mov
divl
push
es
jne
cmp
xchg
stos
lahf
sbb
mov
xor
in
xchg
cltd
mov
mov
dec
inc
lret
sti
adc
inc
into
movl
mov
out
add
test
inc
loopne
mov
mov
gs
sbb
mov
test
adc
aaa
clc
mov
sbb
shll
shrl
and
adc
push
int3
stc
outsl
movsw
xchg
stc
inc
pop
ret
mov
sbb
jecxz
xchg
int3
pop
add
push
mov
andl
push
arpl
pop
push
inc
cltd
shlb
nop
dec
test
push
push
sbb
jne
cmp
into
pushf
or
das
mov
pop
test
sbb
xchg
int
mov
pushf
pop
inc
or
int3
out
mov
xchg
mov
out
xchg
lahf
cmpl
sysenter
jno
mov
xlat
dec
loop
test
cmp
lcall
jbe
cltd
popl
js
test
fsubrp
cmc
mov
imul
loopne
xorl
xor
sub
pop
mov
incl
cmp
rcrl
dec
push
les
icebp
pop
cmovge
sar
fs
cmp
lahf
sub
dec
push
enter
cltd
cmp
cli
pop
lods
inc
mov
inc
outsb
cld
dec
mov
pop
xchg
and
and
mov
sbb
aas
out
std
jl
loope
pop
sub
jae
into
stc
clc
pusha
std
test
icebp
loopne
scas
pop
aaa
sbb
aas
enter
adc
lret
or
fcoms
lock
push
orl
jno
inc
lods
push
xchg
lcall
pop
inc
mov
and
and
xchg
ss
xchg
repnz
pop
add
xchg
data16
es
jle
aad
mov
add
leave
mov
test
sbb
callw
inc
inc
xor
xor
mov
pop
jp
mov
cmp
scas
test
sub
insl
int
jno
push
sbb
dec
mov
jmp
dec
mov
arpl
mov
sar
or
inc
push
cmp
inc
pop
call
stos
pop
jle
dec
jmp
es
scas
xchg
pop
les
movsb
rcr
mov
div
adc
test
jno
rcrl
inc
jmp
xor
push
add
dec
inc
or
ret
mov
cmp
in
pop
lods
push
mov
mov
pop
mov
pop
lds
pushf
scas
push
and
jl
sub
add
mov
popa
sbb
out
pop
adc
dec
fistpll
ficompl
rcr
inc
pusha
stos
enter
insb
daa
movsb
fsubrp
mov
cmc
or
out
mov
or
mov
popa
mov
push
add
or
inc
aas
lods
sbb
mov
and
cwtl
mov
add
es
sbb
mov
add
jecxz
dec
fidivl
aaa
mov
xor
mov
repz
inc
popf
xlat
or
xor
jne
push
and
popf
pop
mov
xor
lahf
addr16
test
mov
push
in
dec
push
ret
adc
mov
or
nop
fsubl
insl
mov
sub
lods
inc
iret
call
loopne
lcall
jbe
inc
dec
outsb
cmp
mov
inc
xlat
mov
xchg
imul
insb
mov
or
mov
mov
je
mov
popa
out
imul
ja
mov
and
mov
mov
mov
cltd
adc
add
mov
sti
js
nop
sbb
inc
fucomp
sahf
daa
push
lcall
jo
in
add
loope
push
pop
stos
pop
xor
mov
xchg
cmpsb
repnz
inc
scas
lea
push
and
mov
imul
enter
std
mov
sarb
imul
mov
pop
sahf
cs
xchg
fisubs
cmpsl
dec
imul
jge
sub
into
ss
mov
xchg
and
xchg
add
loop
cmpsl
mov
sahf
cmc
dec
cmpb
cmpsl
and
icebp
add
sbb
adc
inc
in
movb
xor
pop
bound
lods
xlat
mov
mov
pop
xchg
mov
mov
jecxz
fnstenv
sti
clc
pop
ljmp
fisttpl
cmp
stos
push
pop
cmp
sbb
mov
outsb
pop
lods
popa
xor
push
cmp
mov
jp
jns
cmc
dec
test
cld
or
mov
jmp
adc
push
movsl
xchg
mov
sbb
pop
clc
xchg
push
addr16
xchg
dec
out
fwait
mov
scas
mov
cmp
leave
jns
lock
xchg
sbb
cmp
cs
mov
mov
sub
lods
cld
les
sub
sahf
test
repnz
mov
imul
lods
out
sub
inc
vpcmpgtw
mov
push
mov
ficompl
xchg
outsl
xor
pop
in
imul
pop
mov
popa
dec
sbb
movsb
xor
adc
icebp
xlat
hlt
sbb
jmp
sbb
pop
push
aaa
add
repz
add
sbb
mov
bound
mov
dec
add
hlt
inc
or
mov
dec
fadds
sbb
inc
lret
xor
add
movsl
xor
sub
stos
imul
sbb
push
push
ret
lcall
ret
test
pop
push
scas
andl
into
xor
cmpsl
pop
fcompl
mov
lea
add
mov
add
jmp
xor
jp
xor
pop
jle
dec
pop
stos
cmp
lea
in
scas
add
test
xor
push
rorl
shlb
pop
cwtl
popa
leave
icebp
mov
inc
sbb
push
jge
shll
adc
lock
xchg
jge
xchg
cmp
scas
inc
mov
insb
mov
xchg
jb
les
push
js
push
adc
test
addr16
mov
jge
in
pop
pop
dec
inc
int
test
xor
xchg
stc
es
lret
jmp
inc
arpl
lret
les
outsb
jl
jmp
ds
lock
pop
ja
pushf
arpl
mov
in
lahf
sbb
in
lods
cmp
lret
in
andnps
adc
test
pop
xlat
mul
push
dec
daa
std
mov
mov
push
gs
jb
loopne
mov
fbld
xor
xlat
xchg
in
xor
jbe
shlb
mov
ds
fsub
int
test
adc
xor
iret
iret
push
mov
mov
movsb
pop
sahf
iret
int
loopne
push
movsl
xorb
and
adc
push
int3
cmp
jge
outsl
call
cltd
sub
or
lods
add
mov
pop
mov
pop
lcall
xchg
mov
nop
add
int
push
mov
lea
xchg
mov
lcall
outsl
add
push
adc
fstl
jne
jmp
fsubrs
cmpsb
in
or
and
ret
xchg
daa
mov
fistps
leave
jmp
call
int
aad
xor
lahf
jns
dec
adc
cmp
xlat
mov
push
std
ja
out
sbb
out
mov
addr16
mov
jb
shl
or
imul
negl
adc
and
testl
sub
inc
in
jbe
xorb
xchg
popf
pusha
pop
movsl
push
jecxz
imul
sbb
inc
mov
mov
in
pusha
in
mov
nop
cmpsl
cmc
or
mov
push
lock
aam
mov
adc
cltd
xor
je
aaa
jno
pop
daa
pop
bnd
arpl
lods
xor
mov
ret
mov
je
mov
cwtl
fdivr
dec
pandn
aas
mov
lods
aaa
jle
xor
test
dec
push
adc
sarb
cli
cmpsb
jnp
imul
and
mov
inc
ret
rorb
scas
dec
pushf
xor
rorb
xchg
repnz
xchg
jne
push
and
arpl
std
and
sub
adc
xor
clc
cmp
or
das
dec
out
incb
adc
adcb
addl
pop
notl
jns
int3
cmp
ja
sbb
fsubl
lea
xor
jl
and
push
rolb
xor
push
xchg
test
fmull
sbb
xchg
ret
mov
cs
leave
mov
std
ljmp
movsb
dec
cmp
insb
mov
jno
fadd
inc
xor
lods
ret
loope
ljmp
xchg
stc
stos
ja
mov
add
mov
mov
clc
outsl
fnsave
sub
dec
adc
jb
cmp
sti
imul
xlat
in
movsb
xchg
or
daa
daa
mov
test
in
dec
mov
pop
fs
lcall
jecxz
inc
inc
sbb
lods
out
push
push
imul
lock
pop
movsb
pop
movsb
dec
push
mov
aaa
sub
or
push
inc
push
cmp
ror
sbb
push
scas
aaa
mov
jne
mov
iret
stc
and
push
movsl
fucomip
cmc
mov
sub
sarl
adc
popa
cmp
popf
and
out
pop
dec
lds
mov
xchg
sbb
adc
divb
popf
ficompl
cli
out
cmp
mov
test
popf
cmpsl
fldcw
and
or
stos
xchg
xlat
stc
sub
or
sub
sarb
mov
mov
push
andl
sbb
repz
outsl
push
hlt
aaa
dec
push
pop
jno
popa
arpl
and
mov
sub
sbb
xchg
fiadds
or
inc
push
mov
mov
xlat
jl
or
data16
xchg
nop
loopne
scas
xor
push
orb
mov
mov
mov
cmp
lahf
fadd
push
jl
mov
mov
jbe
fisttps
inc
das
stos
sahf
fidivrl
orl
pop
clc
xchg
xlat
jle
push
cltd
fbstp
outsl
mov
fnstcw
xchg
imul
jnp
inc
jmp
fidivl
fcompl
repz
mov
je
movsb
inc
into
fsubr
aad
mov
lods
dec
call
jbe
std
mov
jge
std
test
out
mov
add
fcomi
pusha
rcll
aaa
test
popf
insl
pop
jo
add
lea
pusha
repz
add
cmp
xchg
xor
pop
sub
lods
mov
iret
stos
cmp
mov
ds
roll
dec
cmpsb
xor
sti
cs
push
push
pop
push
mov
sub
lods
out
sbb
pop
pop
sub
popf
push
xor
popa
inc
mov
out
adc
pop
dec
rorl
repz
movsb
sub
andb
adc
popa
jmp
sbb
push
sti
and
ret
lret
cwtl
dec
xor
add
lods
fiadds
fwait
daa
push
inc
xchg
incl
sub
gs
or
fwait
scas
dec
dec
push
mov
dec
lret
mov
ret
test
test
sbb
shrl
mov
aaa
mov
or
lahf
xchg
pop
neg
jl
cmc
dec
add
jge
aam
pushl
idiv
testb
mov
repnz
or
cmpsb
push
lock
les
rolb
sub
pop
mov
popf
lret
subl
jecxz
and
cmp
mov
add
shrl
jmp
enter
je
in
jl
xlat
mov
dec
dec
pop
test
xchg
clc
insb
pushf
cltd
incl
popa
popa
fldl
insl
xchg
aas
fsubr
rorb
fidivrl
mov
pop
lods
jle
pushf
jae
je
sub
pop
pop
mov
test
orl
int
ss
stos
add
mov
jbe
xchg
jl
inc
mov
dec
cmp
fmulp
pushf
loope
push
jo
int
mov
out
ds
loopne
insl
add
mov
cltd
loope
idivl
out
cwtl
push
jo
lret
push
mov
les
ljmp
dec
xor
scas
je
jmp
sbb
lret
jae
scas
adc
dec
leave
jo
int3
adc
mov
xchg
add
imul
outsb
or
loop
fimuls
xor
add
cmp
cltd
cmp
pop
sbbb
stc
jmp
repnz
sbb
out
mov
jecxz
pop
cmp
nop
xchg
mov
lds
inc
xchg
cmpsb
pushf
pop
xor
mov
lods
dec
inc
out
ljmp
push
clc
or
lods
sub
popf
shll
pop
lock
sbb
shll
lret
xor
adc
dec
mov
mov
movsb
pop
mov
call
out
mov
lock
mov
clc
dec
dec
cmp
cmp
clc
lret
jle
sbb
adc
es
in
in
push
in
mov
mov
aas
cmc
inc
push
aas
lods
insl
int
sbb
mov
xchg
ja
jle
xchg
sbb
and
lds
inc
fistps
or
xchg
addb
imul
stc
dec
push
xchg
test
bound
iret
push
insb
aaa
mov
adc
andb
pop
mov
mov
mov
pop
sub
mov
push
push
movsb
sbb
sbb
xor
nop
xchg
jge
mov
lods
imul
push
scas
xchg
pop
and
dec
ss
fnstcw
sbb
inc
lods
mul
mov
mov
jg
and
ljmp
push
mov
mov
cmp
ftst
iret
xchg
xor
lcall
les
in
loopne
bound
xchg
inc
and
jg
adc
pop
es
ficoml
pop
add
out
loope
dec
push
add
xor
addr16
in
iret
and
push
xchg
push
or
jb
lret
jg
ss
jo
mov
lds
inc
testl
repz
push
shrb
mov
adc
pushf
pop
orb
outsl
dec
mov
nop
xchg
aad
and
mov
js
add
adc
mov
clc
inc
imul
sbb
push
jmp
or
sub
push
std
xchg
add
sbb
mov
push
push
popa
jno
push
sub
xchg
stc
test
mov
mov
pop
clc
lcall
jnp
call
lods
fnsave
int
xchg
mov
add
fnstenv
daa
cmp
repz
jbe
mov
loope
xchg
sub
fcoml
popa
or
pop
xorb
imul
fs
dec
and
push
jmp
lock
push
add
pop
and
repz
or
in
test
fldt
push
adc
sbb
aam
out
mov
insb
movups
mull
enter
mov
lret
pop
xor
lret
xchg
or
nop
insl
fistl
adc
adcb
ret
in
addr16
jno
jg
mov
push
or
cltd
fwait
mov
sbb
cmp
das
dec
and
orb
out
cmp
fstl
fdivrl
adc
leave
adc
adc
outsl
xchg
or
cmp
fcoms
addl
cmp
fs
lcall
pop
jecxz
xor
adc
fistpl
mov
jno
cmp
sbb
pop
fst
and
or
enter
pop
test
imul
sub
dec
lret
and
jge
aas
ja
mov
fadd
clc
fdivs
jbe
int
xor
push
inc
lret
fiaddl
movl
adc
movsl
or
or
xchg
mov
mov
mov
dec
push
stc
in
int
int3
testb
cli
inc
je
icebp
xlat
out
decb
push
and
cli
fst
cmp
imul
inc
lcall
mov
xchg
and
cld
add
sub
les
idiv
adc
sbb
xor
and
fucompp
pop
mov
popa
or
pop
sar
xchg
push
dec
xor
and
loop
push
dec
ss
lcall
enter
out
jle
and
sbb
pop
call
or
pusha
bound
out
rcr
jl
es
jbe
push
stc
mov
push
stos
leave
push
out
and
test
dec
lds
test
sahf
aas
in
aam
lods
cmc
pop
je
je,pn
cmp
xor
mov
lods
std
xchg
pop
xchg
xor
nop
sub
mov
cmp
dec
int3
sbb
cmc
pop
pop
stc
inc
mov
mov
lahf
stos
xor
inc
xor
leave
push
inc
ds
inc
ret
ret
cs
mov
pop
adc
jecxz
mov
xlat
sub
imul
dec
push
dec
repnz
mov
mov
pusha
xchg
ret
ljmp
fnsave
jge
adc
insl
jnp
or
mov
subb
cmc
xor
outsl
jb
stos
adc
mov
fisubrl
mov
mov
jecxz
out
ja
dec
ret
pop
adc
insl
arpl
outsb
xor
mulb
ljmp
pusha
jmp
mov
fmuls
iret
movsl
sbb
mov
mov
adc
scas
sbb
dec
adc
test
adc
test
das
nop
out
add
xlat
mov
rol
mov
or
cwtl
cmp
inc
lds
fs
or
insl
inc
pop
pop
adc
adc
lret
shll
aad
and
push
add
xor
pop
ljmp
loopne
jge
aas
lea
jo
in
add
mov
mov
cmc
cmp
xchg
mov
jno
xchg
leave
jl
adc
repz
xchg
inc
flds
sub
mov
push
aas
test
in
add
dec
cld
jge
jns
scas
sub
xor
cmpb
add
xor
jno
data16
xor
movsl
stos
xchg
ret
mov
lret
enter
dec
xor
mov
fsub
cltd
lret
lods
das
xorl
inc
xchg
insb
into
aad
jno
mov
mov
js
xor
xchg
jp
and
out
mov
lea
inc
sbb
loopne
jne
sahf
imul
lret
xchg
cmpsl
sti
mov
jo
jp
in
pop
sub
lods
pop
das
jo
icebp
out
aam
fcom
stc
mov
in
sub
movsl
add
sub
lock
stos
outsl
cmc
test
jae
mov
pop
add
jno
or
mov
pop
jg
jp
inc
repnz
ret
or
mov
mov
sahf
into
xlat
test
sub
sub
scas
sbbl
xorl
push
dec
xor
cmpsl
xor
xchg
dec
lock
dec
mov
lret
std
shr
out
mov
xchg
sbb
repnz
enter
test
fnstenv
mov
out
loope
and
push
mov
mov
jb
test
lea
imul
sarl
xor
mov
cmpsl
inc
addr16
sub
pop
inc
jns
jns
push
xchg
push
in
pop
cmpsb
mov
ljmp
adc
shrl
into
mov
dec
xchg
adc
mov
or
pop
stc
fistpll
jg
pop
and
pop
and
inc
bswap
sbb
push
adc
jmp
lods
push
adc
enter
mov
mov
dec
imul
mov
test
push
addr16
stos
in
arpl
cli
fstpl
outsb
jge
pop
adc
cmp
sti
dec
add
cld
mov
lods
push
lcall
inc
mov
ss
adc
jge
mov
mov
shlb
nop
jb
jg
testb
mov
pop
pop
pop
in
and
scas
movsb
mov
pop
xor
mov
pop
dec
addl
cmp
push
jmp
push
lea
jns
scas
out
jge
adc
scas
mov
arpl
jp
or
mov
xchg
mov
jle
mov
add
xchg
xchg
inc
loop
pop
inc
mov
pop
ret
pop
icebp
and
cli
adc
je
repz
in
jno
add
stos
insb
stc
outsl
sub
jo
mov
mov
dec
mov
xchg
mov
pop
outsb
fdivrl
lret
ret
lret
das
jp
ret
jle
sbb
test
xor
gs
push
outsl
sub
lret
and
test
mov
rcrl
out
int
mov
push
add
loop
movsl
shr
cmp
jge
pop
or
push
push
jmp
repnz
pop
fistl
xchg
mov
test
cmp
clc
or
xchg
sub
push
jo
sub
cmpsb
filds
mov
mov
inc
outsl
std
inc
pop
cmpb
je
pop
imul
stos
into
pop
loop
sarb
daa
dec
stc
adc
loop
lret
cld
add
iret
xor
cltd
pusha
std
add
add
ret
sub
std
das
add
fdivrl
pop
lea
rcll
xchg
xor
repz
sahf
fsubr
or
push
dec
xchg
mov
pop
push
adc
push
inc
mov
add
jae
xchg
and
pop
aad
je
ds
xor
jl
cmp
cmc
push
daa
lahf
push
and
stos
jae
cmp
aam
xor
add
jl
cmp
mov
popf
xchg
aam
das
xchg
xchg
test
loopne
and
sub
sub
mov
fdivr
imul
sbb
rorl
ljmp
jmp
daa
nop
sbb
in
mov
imul
into
jmp
sbb
mov
dec
dec
jmp
or
in
inc
out
loopne
and
nop
cmp
pop
sub
sti
cld
cmp
xchg
mov
mov
mov
cmp
stc
scas
adc
fmuls
mov
lcall
sbb
iret
cltd
sahf
aaa
or
into
ret
pop
jmp
add
lock
les
mov
and
fwait
mov
cmpsb
push
mov
rolb
lods
nop
xchg
int
shl
sub
popa
ret
push
sbb
aad
ss
ror
movsl
sbbl
push
sub
cmc
jle
mov
sbbl
adc
add
sub
lret
push
sbb
pop
add
inc
mov
xchg
sti
std
rcrb
sub
and
pop
xchg
in
dec
icebp
mov
adc
mov
std
cmp
rol
mov
xor
call
sbb
jno
add
sub
push
inc
icebp
xchg
aas
xor
lds
and
in
pusha
test
in
imul
int3
push
cmp
loopne
cmpsl
insb
scas
mov
add
sbb
popa
jmp
and
daa
movsl
mov
cwtl
and
pop
lea
push
test
daa
in
dec
loopne
inc
in
mov
mov
cmp
movsl
push
test
mov
push
xchg
call
jp
jp
fistpl
je
in
mov
jo
das
lds
mov
mov
push
or
lcall
sub
jb
cmp
mov
mov
mov
jp
mov
pusha
or
jnp
sbb
lods
mov
adc
and
incb
jp
add
jmp
jp
xor
loop
inc
add
je
sar
cmc
out
arpl
and
mov
jmp
xor
mov
test
insb
push
push
int
outsb
aad
mov
xor
pop
adc
cmpsb
and
fsubl
or
rcl
imul
sub
aam
sub
mov
stos
jmp
dec
pusha
sti
repz
or
xor
ljmp
or
xlat
sbb
and
cmp
xor
push
sub
aaa
dec
cmp
lods
movsl
mov
jmp
push
mov
xor
jnp
or
jle
pop
movsl
ds
add
std
and
push
push
inc
js
or
push
es
ret
repnz
xor
jl
jge
int3
pop
and
loopne
fldcw
push
and
inc
add
jne
into
scas
pop
xor
fnsave
cmpsl
fwait
sbb
jg
divl
pop
dec
pop
jecxz
ret
push
pop
push
xchg
jp
js
push
je
xchg
out
cmpsl
mov
pushf
pop
add
adc
stc
xchg
sarl
dec
fildl
ds
mov
mov
mov
push
lret
cwtl
jl
xlat
xchg
popf
mov
cmp
negb
adc
dec
lods
cli
and
add
loope
xor
rorl
insb
push
xor
in
xor
xchg
aas
jmp
inc
inc
test
icebp
push
inc
adc
subl
imul
xor
ss
jno
repz
jae
add
mov
lahf
lahf
sub
in
pop
sub
sbb
cld
sbb
ds
dec
xchg
cmpsl
sub
imul
aaa
test
and
mov
adcb
lcall
jmp
repz
inc
lds
dec
cmpsb
imul
inc
fnstcw
addr16
adc
movsl
dec
inc
lcall
popf
xchg
leave
sarb
mov
adc
ja
xchg
jl
or
mov
jb
out
inc
je
mov
cwtl
xchg
sti
xchg
rorb
js
sahf
adcl
inc
cld
iret
or
mov
out
mov
out
jns
cmc
int3
mov
push
popa
adc
shrl
jbe
xchg
lcall
cltd
add
pop
nop
inc
outsl
ret
jecxz
pushf
pop
jae
test
xchg
pop
push
sbb
aas
xchg
lock
in
pop
rcrb
mov
fimull
mov
jmp
jo
pop
or
popa
lds
and
pop
aam
mov
sub
add
pop
and
insl
cmpsl
cmp
into
push
adcb
push
or
and
repnz
pop
and
pop
insl
arpl
pusha
stc
xor
jnp
scas
push
push
pop
pop
xchg
cltd
sub
adc
mov
mov
mov
mov
jle
dec
arpl
sub
in
mov
pop
adc
sub
fdivrs
data16
push
fcom
inc
bound
mov
or
jmp
adc
sub
mov
mov
push
lcall
or
aam
cs
push
and
push
or
jle
mov
scas
xor
arpl
mov
lods
sub
and
in
or
cmpsb
push
arpl
imul
sarl
scas
xchg
mov
scas
ja
mov
jnp
jmp
movsl
and
out
mov
cltd
xchg
pop
and
mov
adc
jecxz
inc
lahf
add
or
fs
negl
mov
insb
and
pop
movsb
cwtl
inc
stos
aaa
cmp
mov
pop
or
int3
add
inc
sbb
test
test
cmp
adc
ljmp
dec
sbb
sub
icebp
aad
cwtl
loop
lret
jnp
popa
inc
and
test
js
add
scas
ret
js
sbb
lcall
push
lods
inc
xchg
mov
daa
out
insb
outsb
adc
lret
daa
lcall
ret
adc
add
inc
insl
cmp
and
mov
and
xor
dec
or
aad
xchg
push
cs
cltd
mov
cmp
xchg
std
pop
or
and
jmp
mov
lods
sbb
lods
mov
inc
dec
sbb
sbb
xor
out
cmp
mov
iret
test
mov
je
repnz
loope
fwait
or
and
out
sub
xchg
xchg
shlb
cli
rclb
or
push
in
mov
xor
and
mov
mov
push
add
movsb
je
das
loop
and
cmp
mov
xor
mov
popa
mov
cli
fwait
dec
cltd
sti
cltd
add
xorl
imul
jle
dec
jl
and
lret
pop
dec
test
lahf
loope
mov
gs
and
ret
imul
decl
and
xchg
inc
cmp
hlt
jno
pop
add
add
fidivrl
in
lds
dec
add
jle
mov
jle
addl
imul
int3
sbb
ja
adc
arpl
orl
mov
ret
cwtl
mov
mov
lds
dec
lods
mov
push
pushf
lock
rol
mov
pop
fistl
inc
int3
hlt
lock
mov
rol
aas
fistpll
popa
insb
out
sahf
and
add
xlat
cmc
sbbb
mov
sbb
stc
mov
sub
fisttpl
lcall
jmp
sbb
data16
cmc
sbb
imul
xor
mov
xchg
mov
pushf
sub
fs
add
sub
or
mov
or
xor
sbb
scas
lods
jbe
int
lds
rcl
and
jmp
pop
lods
mov
pop
adc
int
std
lcall
sbb
es
rorb
fdivrp
and
aaa
push
xchg
push
mov
fsubrs
cmp
fwait
mov
pop
sub
scas
bound
imul
dec
mov
fcoml
xchg
lret
mov
jbe
jno
or
and
test
xor
pop
iret
sub
xor
cmp
rorb
jle
mov
pop
cli
mov
iret
pop
dec
jp
leave
inc
add
arpl
int3
push
adc
rorl
addr16
lret
xchg
std
pop
out
jne
icebp
ret
movsl
cmp
mov
jge
mov
sbb
cmp
dec
leave
push
test
cmpsb
mov
jo
mov
inc
rcr
mov
ret
rcrl
cmp
fnsave
sahf
push
addr16
and
cmp
loopne
movsl
sbb
jp
out
and
inc
jle
mov
lret
clc
and
popf
jge
call
mov
cmp
mov
sbbb
test
adc
int3
sub
jl
fsubs
filds
mov
sub
ja
xchg
mov
mov
cmc
call
inc
mov
and
in
ljmp
inc
sbb
mov
xor
outsl
int
adc
hlt
shll
lahf
dec
out
add
les
lock
movsl
cmp
data16
into
dec
lret
xor
adc
cwtl
and
sub
shrl
jl
repnz
push
xchg
cmpsb
or
imul
push
and
cmc
nop
mov
adc
cmc
aam
cmpl
scas
out
jp
inc
cmc
dec
mov
subb
stc
or
dec
leave
arpl
call
cmp
mov
jne
psrad
es
cwtl
aad
or
dec
sbb
adc
cld
push
popf
jmp
fisubrs
lret
out
jecxz
pop
sub
fwait
testb
and
addr16
sub
cwtl
movsl
aad
in
inc
and
jb
daa
push
sbb
aad
lret
and
sbb
sbb
daa
pop
pop
mov
dec
test
and
xor
xchg
mov
ret
test
push
fbld
ja
mov
sbb
arpl
sub
mov
add
dec
es
xor
cld
shrb
push
fadds
lock
adc
les
pop
incb
or
sub
mov
xchg
mov
fiaddl
jns
mov
in
js
out
add
mov
imul
gs
fimull
addr16
adc
lods
pop
addr16
adc
mulb
mov
fbld
int3
mov
push
push
stos
iret
into
fstpl
pop
xor
and
pop
loope
sarl
movsb
dec
mov
popf
into
cld
imul
imulb
adc
sbb
ret
test
push
xchg
into
insb
outsl
push
pop
gs
mov
sbb
push
outsb
sbb
in
xchg
jo
leave
pop
jnp
movsb
add
test
mov
sbb
addl
sbb
popl
mov
pop
lods
push
imul
cmpsl
popl
xchg
or
adc
xor
and
mov
xchg
sub
pop
fwait
pop
mov
insb
xor
stos
fidivrl
sbb
adc
popa
xchg
fcmovnb
les
push
sbb
sub
stos
mov
ss
psrld
ds
pop
xor
out
rclb
lods
xor
imul
adc
cmpsl
out
movsb
filds
out
sbb
jnp
mov
sti
sub
pop
xchg
or
or
add
sbb
movsb
jl
fcoml
clc
add
push
aaa
or
mov
sti
jae
or
mov
movsb
jg
ss
xor
mov
jmp
mov
sti
jne
push
mov
pop
jno
std
pushf
stos
push
pop
pop
cvtpi2ps
mov
and
movsl
jno
rorl
cmp
enter
ljmp
test
pop
test
sub
cmp
xor
push
cmp
mov
sub
pop
icebp
xor
adc
jne
jo
mov
lock
pop
push
jnp
pop
psubb
in
lret
rcrb
mov
or
or
addr16
ljmp
repnz
pop
xchg
out
rol
addb
popf
pop
sti
push
mov
data16
es
into
mov
repz
xor
lea
adc
sti
out
mov
cmp
jmp
pop
outsl
xor
into
in
jae
std
pop
inc
inc
pop
dec
pop
mov
sbb
nop
inc
cwtl
adc
in
mov
sub
aad
test
in
nop
fcomps
shrb
movsb
mov
addr16
adc
outsl
idiv
aas
test
mov
or
push
lods
and
loopne
leave
lret
clc
test
dec
sub
repnz
cmc
xor
pushf
xchg
cmc
orl
pop
pop
fnstenv
xor
adc
dec
adc
inc
xor
or
insl
cmc
jb
ja
xchg
std
in
push
jae,pn
stos
gs
stos
lahf
and
mov
add
mov
mov
mov
mov
sbb
xchg
pop
adc
sub
push
test
jmp
xchg
adc
adc
mov
add
dec
add
cmp
push
jecxz
maskmovq
idivl
pop
enter
clc
adc
popf
lret
sti
mov
leave
mov
ret
leave
adc
ss
mov
mov
pop
mov
push
sti
fwait
ljmp
dec
cmp
std
jns
clc
ret
sarb
sbb
xor
mov
mov
push
or
xchg
adc
fwait
mov
inc
int3
je
mov
and
and
mov
inc
dec
outsl
xchg
ljmp
pop
in
sbb
sbb
in
or
test
cmp
leave
pop
orl
stc
mov
out
dec
mov
mov
imul
cmpsb
sarb
pop
mov
mov
sub
lret
mov
mov
sub
daa
cmp
pop
sbb
mov
lahf
scas
pop
jb
les
repnz
pop
xor
clc
rcl
fldcw
fs
loope
mov
in
fstpt
push
cmp
push
sbb
orb
xchg
fwait
cmpsb
or
adc
cmp
xlat
push
int
or
mov
mov
bound
out
add
idivb
faddp
cli
jno
insb
pop
add
xor
push
dec
rcl
cmp
aad
pop
pop
out
iret
hlt
mov
loope
jbe
lcall
stos
push
hlt
add
outsb
test
lds
cmp
add
rorw
data16
mov
jmp
xchg
pusha
clc
dec
cmp
dec
mov
cld
scas
repz
mov
pop
fwait
inc
push
jbe
pop
shrl
jne
jo
cld
mov
sub
jne
mov
pusha
jg
pusha
shrl
inc
pop
repz
cltd
pusha
outsb
loopne
nop
daa
lock
call
movl
push
xorl
fstpt
mov
mov
cmp
and
adc
xlat
fistpll
call
into
cltd
test
cmc
sub
ja
pop
push
mov
les
inc
mov
in
popa
movsb
iret
sar
mov
sub
and
pushl
sub
scas
and
push
sbb
inc
les
pop
pop
mov
stos
addr16
loope
daa
jmp
into
mov
mov
xchg
in
movsl
cmpsb
mov
in
or
std
stos
dec
fnstenv
sub
pop
jecxz
lea
clc
jb
in
test
mov
push
cmp
adc
mov
add
je
and
rorb
cli
out
dec
jle
dec
test
into
mov
ljmp
sbb
dec
rolb
aad
repnz
add
and
or
pop
sbb
and
adc
mov
and
or
cmp
cmpsl
and
or
fdivrs
xchg
pop
inc
sbb
loope
gs
mov
mov
fs
jno
xor
jae
inc
mov
cmpsb
hlt
bound
decb
lds
insb
lahf
cltd
cmp
rolb
pop
ret
cmp
movhlps
lea
mov
or
ja
mov
rol
sahf
mov
loope
negb
dec
push
inc
hlt
mov
clc
mov
add
cmp
jae
ret
cmp
sbb
adc
mov
or
jl
inc
hlt
push
sub
sbb
or
sub
mov
movsl
loope
std
push
sub
xchg
adc
xor
mov
mov
scas
scas
pop
push
sub
adc
test
cs
dec
les
lret
lock
sbb
ret
xchg
imull
shrb
dec
cli
mov
neg
jne
add
adc
push
ss
pop
and
jmp
addr16
or
mov
hlt
and
sbb
push
std
mov
pop
sarl
xor
push
dec
and
cmp
cwtl
push
and
add
mov
int
mov
xor
pop
call
push
push
idivb
lcall
and
cmpsb
cmp
lahf
dec
andw
andl
lcall
dec
mov
insb
jg
mov
je
sbb
xor
mov
lods
sbb
out
clc
xchg
mov
bound
adc
xor
pop
pop
subb
push
pop
inc
mov
xchg
push
stos
sbb
loop
gs
sbb
repnz
xor
pop
imul
lahf
outsl
push
mov
sbb
jg
jge
aad
in
sub
js
cmp
cwtl
mov
lcall
sbb
sbb
enter
xchg
popa
lods
or
push
mov
mov
mov
pop
in
inc
movsb
xchg
das
out
ss
scas
pop
in
fucomp
push
pop
andl
arpl
or
add
xchg
pop
push
cmpsb
pop
int3
inc
repz
gs
shlb
stos
imul
arpl
dec
inc
popf
push
insl
iret
fs
mov
mov
dec
jp
je
push
out
aaa
lea
dec
fs
add
push
popa
lret
cltd
imul
jno
outsl
andb
test
jecxz
shll
aas
adc
lock
out
jg
xor
outsb
and
mov
imul
pop
inc
insl
stos
or
dec
fdivrs
pop
mov
inc
in
sub
out
cmp
out
sbb
xor
jno
mov
fidivrl
stos
pop
clc
inc
bound
pop
fstpl
cmp
in
jo
lods
divl
dec
mov
xchg
insb
xchg
adc
lret
mov
test
jae
push
inc
cli
mov
fsubrs
cmp
adc
je
xchg
mov
insb
push
aas
outsl
in
ds
push
push
jle
push
fdivrl
xchg
ljmp
adc
ljmp
mov
jle
sub
or
pop
jb
aaa
pushf
scas
sub
and
adc
inc
inc
stos
negl
sub
frstor
in
adc
and
push
icebp
call
scas
xor
shl
push
push
scas
and
mov
dec
lods
testl
xorl
notl
mov
sbbl
sbb
lahf
sbb
cs
xor
leave
push
ret
dec
sub
ret
rolb
std
pop
or
xchg
pusha
or
xchg
add
pop
pushf
inc
int
outsb
sbb
sbb
shll
cmp
imul
sbbb
add
and
mov
mov
pushf
pusha
ret
mov
mov
lahf
xor
adc
push
leave
je
and
lods
in
xor
and
sbb
dec
mov
xor
add
daa
sub
push
xchg
push
sets
clc
jne
das
adc
in
adc
push
mov
mov
sti
xor
addr16
imull
shrl
pop
loop
out
in
lods
and
dec
aaa
xchg
inc
sub
pop
mov
sub
mov
xlat
push
iret
pop
call
cmp
xor
xchg
outsl
rcr
call
adc
or
xchg
sbb
out
test
stc
rcrb
lcall
fcomps
adc
pop
mov
inc
les
rorb
int
push
fiadds
mov
xor
imull
pop
adc
in
mov
add
add
inc
cld
pop
cwtl
mov
xchg
fisubrl
insl
sahf
nop
inc
movsb
les
mov
xor
cwtl
and
jns
daa
cmpsl
and
jle
cmp
jo
adc
int3
test
push
int
fists
daa
sbb
arpl
dec
sbb
sub
notb
cwtl
mov
repnz
push
lahf
mov
and
jmp
ret
or
std
adc
pop
fwait
test
in
xchg
push
movsb
pop
rcl
jg
pop
sahf
sbb
xchg
inc
adc
add
lods
lods
sbb
push
mov
jmp
inc
stc
leave
hlt
ret
mov
test
iret
nop
pop
xchg
les
add
out
xchg
pop
sbb
or
add
data16
loopne
mov
arpl
mov
in
popf
sub
fld
pop
dec
and
xor
pop
and
push
mov
cmp
dec
cmp
je
rcr
jp
dec
cmpb
pushl
jl
mov
negl
iret
inc
imul
ret
mov
std
out
mov
sbb
xor
sti
mov
push
or
adc
and
cmpsb
lock
sbb
loopne
aas
arpl
mov
jle
add
pop
mov
xor
mov
stc
jmp
cmp
fisubs
ds
xchg
mov
and
ss
add
xor
idivl
pop
push
lret
fstpt
mov
shlb
int3
pop
adc
hlt
mov
scas
push
jge
sahf
lret
enter
shlb
insl
ret
sub
xor
dec
xchg
insl
jle
in
or
je
clc
stos
inc
pop
xor
sub
xchg
cmc
insb
pop
xchg
and
movsl
lahf
sub
adcl
popf
mov
cmp
xchg
sbb
addl
gs
stc
xchg
cmpsb
dec
sahf
cmp
xchg
jns
cltd
mov
nop
or
add
xchg
cli
stos
call
sub
pop
lods
adc
lods
mov
mov
jo
imul
jmp
or
xor
dec
notb
int3
mov
cmpb
or
adc
fwait
mov
mov
jecxz
jecxz
dec
sahf
adc
arpl
fsubs
sbb
pop
mov
jno
lock
ret
hlt
scas
xchg
aas
mov
pop
and
mov
out
arpl
jne
fucomip
cld
push
mov
xchg
mov
outsl
add
lahf
in
jge
test
sub
jnp
push
xchg
lds
inc
outsl
iret
lret
das
push
pop
rcrb
mov
ud0
inc
ljmp
fs
out
rol
jae
insb
lods
sub
shl
jp
push
sti
in
in
rol
dec
loopne
xchg
sbb
xor
push
mov
sub
hlt
cmpsl
movsb
and
or
aas
outsb
push
mov
mov
push
push
push
ret
in
pop
mov
fwait
fs
jno
mov
adc
nop
sbb
push
div
adc
adc
pop
sub
scas
inc
lods
pushf
rcll
inc
ljmp
jns
inc
mov
or
mov
push
push
add
or
ja
push
cmp
adcb
in
jbe
imul
repz
xchg
push
sahf
sbb
shlb
pop
andl
cs
push
fidivs
cmp
cmc
xchg
cwtl
adc
jge
das
jge
cmp
fdivs
or
and
xor
push
mov
mov
mov
mov
fstpl
repz
jmp
cmp
sub
iret
imul
cli
sub
dec
pop
iret
xchg
popa
jecxz
cmp
mov
push
aam
xchg
or
ds
jno
sbb
and
in
xchg
cwtl
rcr
push
inc
stos
ds
jnp
xchg
push
pop
lods
mov
xor
notl
jo
and
jae
or
xor
pop
or
cmp
call
mov
mov
xchg
push
testl
push
aam
in
jle
popf
jnp
sahf
nop
cltd
cld
mov
popa
in
sub
sub
adc
and
jno
setg
test
pop
fcmovu
add
cmp
inc
pop
lret
fstl
cmc
add
push
loop
inc
pop
incb
ljmp
push
iret
jb
rcrl
inc
xor
cmp
mov
aam
dec
ss
mov
fcomps
inc
ds
lods
add
mov
insl
cmc
loop
mov
cmc
testl
mov
inc
clc
pop
mov
pop
fs
das
dec
jnp
fstps
jno
fcmovb
flds
push
dec
rcrb
jbe
jb
cltd
jne
orb
push
hlt
fisubl
xchg
xchg
shl
sbb
and
xchg
test
sbb
inc
daa
jp
jg
adc
mov
pop
add
lret
and
mov
and
dec
sahf
in
in
fadds
mov
pop
test
iret
mov
sbb
icebp
xlat
push
push
jnp
add
mov
stos
mul
adc
xchg
sahf
pop
add
movsl
pusha
xor
fsubs
xor
stos
adc
dec
int
insb
or
cmp
mov
xor
adc
xchg
xor
movsl
bndstx
adc
xor
or
adc
out
mov
jmp
movsb
mov
pop
outsl
movsb
inc
cmpsb
jo
mov
dec
pop
cmp
mov
jmp
incl
mov
dec
jp
repnz
xor
adc
xchg
push
test
push
sti
popf
out
cld
xchg
xchg
push
ljmp
sbb
icebp
sbb
int3
ds
xchg
loop
adc
mov
stos
test
je
inc
out
xor
xchg
imul
push
jge
in
mov
pop
int3
add
push
loopne
stos
xchg
scas
aad
mov
sbb
mov
push
mov
jmp
hlt
rcr
xor
rcl
sub
mov
subb
and
loope
mov
popa
mov
shlb
or
sahf
inc
pop
add
sub
inc
es
sbb
or
adc
outsl
pop
push
in
loopne
pop
in
mov
mov
mov
mov
or
pop
repnz
dec
call
mov
mov
pop
cmp
add
ficompl
xor
add
into
dec
faddl
inc
stc
cld
ds
imul
adc
mov
in
insb
lea
or
iret
jg
cs
push
pop
or
push
sbb
push
cmpsl
shl
mov
scas
xor
ss
ljmp
test
xor
adc
ret
xchg
mov
mov
insl
shlb
sbb
push
divl
movsl
inc
popf
les
into
insb
fdivs
outsb
mov
aad
inc
push
andb
xor
jmp
lea
mov
out
pop
or
jmp
in
jbe
mov
or
or
xor
mov
add
mov
arpl
les
push
adc
roll
sub
out
lcall
es
push
mov
push
decl
daa
jecxz
ror
push
jb
adc
add
es
mov
push
imul
mov
insl
lock
in
imul
pop
and
xchg
xorl
cmp
pusha
bound
mov
mov
cmp
cwtl
ror
sub
mov
fiaddl
mov
repnz
cmp
mov
or
mov
add
ficoms
jle
mov
xor
mov
aad
mov
or
adc
movsb
mov
xor
mov
ds
hlt
lods
mov
and
hlt
andl
push
ja
adc
mov
testl
sti
movsl
add
adc
ret
shl
lds
jno
push
in
mov
ret
mov
inc
mov
out
jnp
nop
jmp
mov
fbld
and
test
stc
test
cmp
add
jb
jne
jp
test
jb
clc
sub
imull
std
dec
sbbl
scas
xchg
outsb
jmp
arpl
fdivrs
ret
push
cs
lahf
pop
and
xor
sbb
sbb
insl
je
cmp
mov
inc
or
mov
imul
adc
adc
jmp
mov
std
out
in
sarl
ljmp
add
mov
pop
inc
add
lods
xor
push
sbb
inc
cld
lods
jns
movsl
xchg
sub
aam
adc
jmp
fsubr
push
outsb
lods
leave
dec
js
loope
jl
cli
stos
add
dec
stc
dec
ret
shlb
js
dec
out
and
and
or
mov
cmp
sbb
mov
ror
stos
rorl
pop
mov
add
insb
inc
mov
jg
xchg
scas
in
cld
jno
cmp
mov
shlb
dec
pop
nop
xchg
hlt
inc
outsl
out
and
aas
loopne
fsubl
and
es
dec
decl
adc
popf
mov
bound
add
movb
or
push
inc
imul
push
aad
add
xchg
xor
data16
out
add
subl
add
inc
push
pop
pop
stos
inc
iret
push
pop
sar
dec
xor
adc
or
std
sbb
push
cmpb
mov
fdivl
cmp
iret
pop
pusha
xlat
inc
jge
call
clc
add
dec
inc
jecxz
dec
dec
cs
cmc
sbb
shll
out
enter
mov
fisttpll
inc
fstp
fmuls
xchg
in
stos
sub
xchg
cmp
lock
call
mov
xor
push
xlat
repz
lret
mov
lods
notb
outsb
jne
loope
or
int3
sub
jge
test
push
loopne
inc
sbb
cmp
pop
sbb
lods
jl
loop
mov
test
lea
daa
inc
sub
pop
in
jae
test
hlt
pop
stos
mov
push
ret
xor
xchg
jae
cmp
sbb
lahf
xlat
and
loope
ret
std
lods
dec
add
mov
adc
adc
ljmp
adc
sbb
xlat
push
mov
addr16
ljmp
out
cld
lods
and
push
test
cmpsl
jbe
add
scas
icebp
sub
insl
dec
das
cmc
lds
sahf
xchg
out
xchg
call
call
sahf
pop
mov
jbe
scas
bswap
shr
lahf
inc
aad
add
sti
fdivrl
pop
mov
xabort
rclb
iret
dec
xchg
mov
cmpsl
mov
jl
or
cmp
xor
repz
pop
out
xor
or
aaa
cmp
push
jno
jae
and
adc
insb
out
push
outsl
and
mov
mov
jge
mov
sub
ja
in
mov
outsb
sbb
push
shrl
js
xchg
xor
pop
xlat
xchg
dec
mov
ljmp
sbb
loopne
xchg
sbbl
fwait
mov
dec
mov
adc
fldcw
jae
out
lret
movsb
and
mov
jns
cmp
mov
std
or
mov
push
outsl
xlat
cli
pop
sarb
mulb
mov
pop
sbb
mov
stos
jge
sti
fimuls
sti
sub
sarb
in
aaa
iret
inc
out
xor
cmp
sbb
xor
and
push
cli
mov
mov
cmp
loope
pop
sub
jne
push
mov
push
xor
xor
inc
aam
fs
orl
add
jae
pop
adc
cmc
rcrl
mov
mov
shlb
inc
test
fisubrs
ds
cmp
jle
repnz
lock
sub
shrb
shrb
into
xchg
or
sub
scas
jmp
cmpsl
push
adc
pop
movsb
jle
fmuls
incb
xchg
cltd
dec
arpl
mov
hlt
xchg
cld
cmp
xchg
sub
aas
ds
aad
and
insb
pop
push
sub
daa
xchg
jl
iret
cld
lds
jecxz
loop
pop
inc
cmp
popf
push
adc
lea
aas
pop
daa
aam
push
xchg
jbe
fildl
lret
or
dec
loop
lods
adc
mov
lock
ss
pop
mov
mov
mov
mov
stos
cmpsl
in
test
insl
push
enter
jge
lods
call
push
lcall
int
addr16
adc
shrl
test
pop
jno
dec
mov
inc
fwait
jecxz
lods
mov
sub
outsl
or
jbe
lock
test
sub
cmp
orl
jns
cmpsl
push
leave
aad
jo
mov
pop
push
popf
jmp
push
addb
cmpsl
push
cmp
in
repz
clts
fisttpll
into
popf
insb
js
adc
push
notl
mov
cmp
in
call
clc
dec
adc
std
ret
push
stos
jl
cmp
and
mov
dec
pop
push
mov
xchg
add
add
mov
adc
dec
mov
fdivp
sub
out
in
push
arpl
cmpsb
ljmp
or
jmp
roll
insb
cmpsl
mov
test
or
pop
cmp
ds
and
gs
mov
inc
inc
insl
mov
mov
cmp
les
rorb
lret
int3
sub
icebp
divb
xor
sti
fists
sbb
mov
outsl
and
jno
adc
std
mov
aas
lock
jo
lock
sub
fstpl
pop
gs
pop
arpl
jbe
add
push
sub
mov
shrb
loop
loopne
add
leave
bound
or
sub
out
jmp
divl
sub
sbb
sub
mov
loopne
sbb
jmp
add
sub
clc
add
mov
mov
cmpsl
jp
sub
jmp
repz
jp
pushf
sbb
sub
push
addr16
cld
mov
or
popw
std
add
add
shll
jle
xchg
repz
mov
pop
jo
pop
sbb
inc
lret
mov
push
jne
sub
js
dec
lods
testb
jae
mov
add
pop
jbe
ja
and
xchg
lcall
cmp
push
rolb
cmp
cltd
cmp
out
mov
mulb
pusha
jp
test
adc
xor
loope
insl
and
pop
mov
jmp
jl
andb
je
cld
add
sbb
data16
pusha
incl
xor
lahf
pop
push
loop
push
es
sub
js
fmulp
scas
dec
jp
adc
sbb
ret
xchg
jmp
movsl
gs
into
cli
pop
mov
jecxz
jmp
outsl
add
ficompl
or
mov
rcr
rolb
pop
insb
aaa
jne
rcrb
scas
cmc
jb
outsb
fmulp
roll
pushf
fwait
push
xchg
push
sti
mov
xor
dec
push
call
cmpsl
popa
popf
cmpsl
sbb
std
push
inc
les
in
adc
dec
repz
in
fs
or
hlt
fsubrl
jp
cmp
mov
xor
dec
les
lock
mov
push
cmp
test
sahf
out
sbb
cmp
ds
or
dec
aad
pop
or
dec
inc
addr16
sub
repnz
push
scas
ret
inc
adc
mulb
dec
call
inc
out
mov
mov
add
inc
mov
cmpsb
dec
xchg
xlat
jae
sti
data16
and
cmpsl
fcomps
mov
test
pop
popa
dec
xor
xor
clc
fcoms
add
in
add
fldenv
cltd
mov
fs
sbb
icebp
adc
xor
insl
scas
push
jle
inc
xchg
lods
mov
int
xchg
imul
ja
push
or
inc
and
aas
stos
stos
inc
aaa
inc
fstpl
xor
xchg
mov
cwtl
test
and
in
movl
aam
push
addr16
mov
daa
lret
push
push
jae
push
inc
xchg
loop
in
push
outsl
jns
push
cmc
jg
xchg
in
ss
bound
std
pop
cmpsb
xor
add
adc
mov
adc
sbb
jmp
in
dec
cli
add
dec
mov
hlt
sub
and
mov
push
addb
mov
push
dec
mov
jns
popf
out
jns
jns
in
inc
or
jl
jne
cmc
stc
sub
scas
jnp
pop
add
out
jp
or
sub
push
xchg
pop
ljmp
fisubrs
testb
negb
loop
mov
sub
out
mov
mov
leave
add
enter
je
cwtl
sbb
mov
out
push
xor
neg
in
xchg
out
mov
mov
mov
aam
leave
dec
add
jno
inc
inc
mov
test
push
push
insl
sub
sti
dec
push
pushf
ds
adc
scas
repz
das
mov
addl
lahf
mov
js
and
ds
mov
push
ja
roll
lahf
mov
daa
xor
mov
insb
lcall
and
cmp
jle
xor
ljmp
cmp
inc
rorb
sbb
repz
push
bound
sbb
test
fcompl
lds
jae
pusha
cltd
scas
dec
test
mov
sbb
sub
pop
dec
popf
ret
leave
fbld
push
lods
lods
pop
and
push
hlt
xor
sarl
test
movsb
cld
xor
and
lcall
xchg
cmp
sbb
xchg
out
mov
jno
ret
movsb
xorl
or
dec
adc
in
pop
or
sbb
lret
repz
pushf
les
sbb
add
rorl
sbb
mov
cld
sub
ret
mov
notb
aaa
jmp
lods
dec
add
rcll
or
fldt
inc
rolb
fcoms
pop
popa
in
jge
sub
imul
loop
sbb
cli
xchg
or
ljmp
js
testl
test
outsb
std
repz
aam
inc
rol
fidivrl
repnz
jnp
sbb
cs
jl
add
dec
divl
push
inc
sbb
inc
ror
fsubrl
movsl
rcrl
xchg
pop
push
jae
push
je
aad
aaa
add
and
aas
orl
sbb
push
clc
test
iret
ljmp
into
xchg
popa
sbb
jle
dec
ret
sbb
cli
fldl
scas
pop
lock
popa
popa
adc
adc
push
mov
cmc
sti
adc
sub
test
mov
xchg
insb
xchg
sbb
aaa
stos
mov
int3
add
push
ret
ja
push
adc
out
inc
lds
test
sub
xchg
mov
cmp
cltd
lock
sti
dec
negb
dec
dec
push
orb
mov
adc
push
fdivs
push
push
pop
movsl
dec
mov
sbb
in
or
pop
mov
repz
inc
jle
jnp
push
loop
xor
add
xchg
addb
dec
and
pop
aam
mov
adc
rcl
cltd
sub
je
inc
arpl
adc
scas
cmp
pop
dec
push
out
mov
pusha
jne
enter
sbb
loop
cld
sub
cmp
cmp
aaa
adcl
inc
dec
aas
cmpsl
loop
adc
sub
mov
and
fimull
shlb
lea
pop
xchg
pop
stos
xor
in
lods
dec
adc
pushf
xchg
mov
xor
pop
add
ret
lcall
bound
push
adc
mov
cmc
cmp
cmp
sahf
popa
jmp
int
mov
mov
pop
xchg
addr16
mov
and
sub
dec
push
sub
push
xchg
jnp
dec
aam
jge
repnz
push
scas
mov
leave
notl
nop
cmc
or
repz
aaa
in
popa
incl
mov
and
das
or
test
xchg
stos
aas
xorl
outsl
push
fimull
add
pop
jo
test
adc
std
inc
cmpsl
insb
gs
test
xchg
sbb
in
test
xchg
inc
repnz
push
in
sbb
cwtl
mulb
dec
je
in
adc
rclb
xor
mov
cmc
fldl
adc
and
cmp
xor
movsl
xchg
dec
ror
mov
out
push
inc
je
mov
jns
xchg
or
mov
cmp
aas
es
xchg
mov
bound
jbe
ljmp
data16
pushf
stos
mov
cld
mov
add
and
ss
lods
out
pop
and
cmp
jl
mov
lds
add
mov
jmp
imul
sub
imul
aam
andb
popa
mov
ret
mov
sbb
mov
testb
cld
mov
outsl
jmp
sbb
cwtl
cmc
mov
pushf
sarb
dec
mov
mov
sub
sub
sub
pop
mov
xchg
inc
aas
xor
xchg
icebp
jle
dec
adc
dec
int3
stos
inc
stc
push
mov
orl
mull
sub
divb
lods
idivl
sbb
test
imul
pusha
ds
xchg
lea
std
daa
mov
push
pop
sbb
inc
movb
rcrl
cmpsl
mov
dec
mov
or
in
inc
mov
push
adc
push
mov
shrl
add
jg
leave
shrl
leave
lret
push
stos
mov
iret
lea
cmp
shrb
sbb
pop
and
xchg
lahf
jg
ret
js
add
xchg
jge
lods
mov
lods
add
inc
inc
jg
pop
into
adc
sub
lods
hlt
inc
mov
shl
add
and
and
in
shrl
cltd
cmp
stos
inc
aad
pop
sbb
mov
movsb
add
fisubrs
mov
inc
test
push
gs
out
aaa
leave
mov
pop
test
mov
decl
jb
push
jl
dec
fwait
lea
lds
inc
int3
push
add
jbe
add
cmp
lret
movsl
adc
jo
jne
mov
testb
cmpsb
xor
lcall
hlt
insb
shr
popa
mov
adc
add
and
xchg
ss
push
mov
cmc
push
pop
mov
jmp
mov
shl
mov
fs
cmp
cmp
mov
adc
iret
mov
sub
fxch
jge
imul
jmp
out
jecxz
mov
fildll
mov
pop
and
aad
push
loope
test
sub
call
dec
inc
test
cmpsb
repz
jg
enter
ret
adc
mov
or
add
repz
or
and
add
or
add
popf
push
mov
xor
adc
mov
stc
push
pop
clc
pop
lret
pop
or
je
sbb
shlb
mov
or
sbb
xchg
inc
pusha
jbe
arpl
shrb
or
lock
int
shll
data16
sbb
push
enter
pop
push
test
jp
xchg
adc
mov
adc
xchg
lret
cmc
adc
adc
jecxz
bnd
jg
mov
inc
mov
mov
mov
insb
ss
dec
lea
inc
and
imul
popa
fildl
add
iret
iret
inc
mov
jle
in
cmpsl
push
imul
push
or
cli
xor
xor
sub
pop
ror
pop
mov
ret
and
out
call
scas
ljmp
mov
mov
stc
fistl
mov
add
push
test
adc
aas
xlat
xchg
jns
stos
sar
sbb
fisttps
lock
cld
pop
in
leave
leave
hlt
aas
in
dec
stc
ret
jbe
pop
cmc
in
popa
addr16
and
push
xchg
mov
jbe
es
jno
mov
xchg
test
dec
jmp
xchg
pop
enter
ret
push
cmpl
inc
pop
gs
adc
cmc
pop
in
arpl
lea
subl
sub
imul
stc
scas
dec
int
cwtl
xor
sub
xor
js
mov
out
mov
cmp
mov
push
and
cmp
and
cltd
outsb
xchg
andb
mov
imul
punpckldq
or
lret
sarl
lds
cmpsl
inc
sbb
rcrb
pop
add
das
and
aad
lods
xor
or
lea
negl
daa
dec
sbb
xchg
sti
mov
dec
pop
dec
dec
sbb
in
jns
shrb
imul
mov
mov
lcall
mov
rol
push
aad
outsl
aas
dec
push
pop
push
add
xor
mov
xor
push
jecxz
repnz
adc
int3
mov
aas
mov
test
pop
push
add
mov
push
mov
sbb
loopne
sbb
push
out
push
pop
arpl
xchg
test
push
std
je
jb
inc
pop
jl
cltd
xchg
push
jmp
lahf
ja
imul
outsb
pop
push
push
cwtl
push
mov
adcl
xorl
mov
jae
sbb
jle
sub
push
aaa
jmp
pop
push
mov
inc
ds
add
mov
cmp
fldpi
lcall
cli
arpl
add
or
dec
sbb
cli
les
inc
xor
cwtl
mov
inc
outsl
push
add
clc
mov
int3
add
jg
jle
aad
mov
xchg
clc
les
mov
inc
shl
xchg
mov
movsl
jg
outsl
lret
push
push
xchg
sahf
mov
push
mov
adc
out
lret
sar
repz
push
xchg
loope
adc
inc
cmpsb
out
sub
push
cmp
mov
js
lods
outsl
ja
movsb
mov
xchg
add
sub
repnz
outsl
xor
xchg
sub
xlat
sahf
cmpsl
gs
sub
mov
repz
lcall
ret
leave
inc
adc
je
roll
enter
ret
xchg
sub
imul
jae,pn
xchg
fwait
sar
jae
roll
pop
xchg
jmp
jecxz
lcall
push
jmp
add
fimull
cmc
pop
mov
std
int3
jbe
inc
lock
test
das
push
ffree
lcall
icebp
inc
outsl
outsb
cmp
scas
and
pushf
xchg
cmc
lahf
dec
cltd
or
mov
pop
add
lea
cltd
mov
mov
mov
add
aad
mov
frstor
inc
jns
push
mov
push
jp
and
sti
dec
mov
mov
add
xchg
jge
dec
loop
aad
repnz
or
punpcklbw
sub
bound
test
daa
mov
loopne
sub
sub
loopne
pop
adcl
cmp
pop
rolb
xchg
dec
rcr
clc
sti
push
xchg
sahf
sbb
ljmp
ret
sbb
xchg
dec
je
adc
push
adc
aas
imul
xchg
lret
sbb
push
fsubp
icebp
jmp
into
xchg
or
popa
lret
jge
sbb
js
mov
xlat
sub
popa
iret
dec
shll
fldcw
and
or
fists
mov
cmp
out
push
or
add
js
aas
sbb
push
sbb
xchg
pop
fbld
pop
cltd
mov
add
lret
lcall
int3
jbe
sbb
clc
shlb
push
jno
popa
push
mov
mov
mov
ds
push
bound
xchg
push
mov
das
inc
dec
sub
sahf
daa
lock
fcomp
cmp
add
in
inc
cmpsl
dec
jl
dec
movsl
and
addl
inc
adc
push
jmp
inc
iret
adc
inc
or
jo
sahf
pushw
xor
ficoml
mov
lret
mov
repz
jge
and
stos
sbb
cmpsl
ret
dec
mov
sbb
cmpsl
leave
sub
mov
inc
sbb
out
pop
sbb
movsl
int
daa
xchg
pushf
xor
dec
push
lretw
rcll
aad
ds
movsl
dec
mov
imul
sub
jle
gs
push
xor
jp
cld
mov
cmp
sub
adc
insb
add
and
cmp
imul
mov
cmc
sarl
stos
js
cmp
adcb
std
or
jecxz
push
cwtl
rcll
jnp
lahf
mov
jg
jo
jbe
in
jbe
lcall
negl
xor
lcall
push
aas
cmp
pop
mov
clc
scas
out
into
rolb
dec
aas
push
rcll
push
add
mov
xchg
in
test
inc
cld
inc
mov
data16
lcall
into
aas
add
cli
and
das
mov
int
sahf
mov
mov
cmp
pop
xor
jno
add
addr16
pushf
stos
sbb
mov
and
inc
nop
inc
mov
loope
sbb
jae
mov
cmp
shll
sub
pop
push
xor
aaa
arpl
sahf
dec
pop
sub
push
sbb
add
push
fistl
xchg
cmp
stos
adc
mov
add
lcall
out
ss
inc
xor
sub
mov
and
ficoml
sbb
push
sti
insl
stos
dec
out
fs
ss
lds
inc
daa
add
cmp
and
xor
xchg
jne,pn
jmp
sub
jns
or
out
jns
lds
xchg
mov
int3
or
cmp
sub
int
cmp
sbb
dec
dec
inc
inc
imul
sbb
mov
push
mov
iret
imul
jl
fwait
mov
lcall
faddl
popf
jg
and
movsl
push
std
sub
inc
loopne
fdivs
jmp
leave
int
mov
jle
imul
xchg
cwtl
repnz
or
add
inc
mov
mov
stc
sti
idivl
sub
jmp
ret
in
push
lds
testl
in
push
jge
mov
push
enter
out
adcl
or
or
leave
mov
adc
sub
iret
or
repnz
mov
fisubs
or
popf
addr16
stos
dec
cmc
aaa
imul
hlt
xlat
sbb
into
fadds
sbbl
push
mov
mov
jg
mov
shlb
inc
call
jnp
dec
ror
out
dec
or
cmpl
pop
mov
mov
xchg
jmp
call
cmp
xchg
xchg
sub
pop
nop
mov
arpl
lds
ljmp
pop
lock
xor
inc
je
sti
jg
insb
xchg
addr16
les
jo
lahf
repnz
insb
lret
xchg
shll
mov
cwtl
jmp
mov
xchg
jmp
rcl
jl
jo
add
icebp
ja
loopne
xor
or
mov
sbb
push
inc
dec
popw
aaa
jne
xlat
lahf
pop
jo
jb
add
push
cmp
sub
sbb
cmpsl
mov
mov
push
jmp
fistpll
and
ds
lods
jmp
mov
cmp
jge
test
pop
clc
decl
mov
cmp
daa
push
pusha
xchg
ret
cmpsl
imul
jnp
fisubrl
mov
mov
cwtl
sbb
out
data16
push
jo
mov
jae
pop
push
mov
fsubs
lcall
adc
inc
mov
xor
pushf
jg
adc
lock
dec
mov
jmp
je
movsl
mov
stos
mov
pop
ret
sub
fwait
jbe
lret
inc
cli
mov
xchg
jp
lods
mov
cmp
movsb
test
ret
cs
lahf
jnp
pop
mov
inc
xchg
ljmp
mov
shlb
fisubrs
mov
mov
inc
xorl
daa
inc
mov
pop
cmp
into
cmp
fnstsw
in
inc
fimuls
int3
lret
or
fstpt
or
ljmp
fwait
sti
repz
lret
xor
or
xor
repnz
pop
cmp
mov
imul
pop
xchg
lods
pop
ljmp
mov
pop
add
and
xor
inc
mov
loope
xor
out
outsb
not
sbb
dec
imul
adc
jne
dec
call
sub
inc
sub
or
iret
mov
sub
daa
sub
imul
push
insl
pop
ljmp
xchg
lcall
pushf
pop
aad
lret
pop
sbb
push
mov
jo
repz
adc
jo
pop
xchg
jge
mov
push
xchg
pop
add
ret
mov
sbb
cmp
lcall
pop
dec
mov
decl
sub
adcl
jno
ret
jns
dec
xchg
dec
fwait
mov
inc
pop
shrl
dec
lret
inc
and
xor
arpl
jb
rcrl
add
push
pop
dec
pop
out
nop
xor
push
into
clc
mov
outsb
and
jns
sbb
pusha
pop
sub
stc
pop
or
bound
bound
movsl
add
inc
sub
stos
xor
rclb
jns
push
push
inc
ljmp
fdivs
fdiv
ret
out
dec
into
push
scas
jo
pushf
mov
xchg
fnstenv
in
pop
xor
jns
nop
xchg
cmp
push
sub
adc
sbbb
or
mov
jg
mov
jnp
and
lods
daa
push
inc
arpl
add
mov
push
or
loopne
mov
add
or
pop
sub
xor
data16
lods
jnp
push
nop
cltd
dec
cmpsb
gs
sarb
push
arpl
test
adc
in
fidivs
adc
jge
fldt
not
rorb
outsb
mov
movb
cs
cs
gs
sub
lods
loop
pop
mov
inc
enter
xchg
mov
pop
sahf
into
add
test
inc
jnp
test
mov
push
mov
adc
imul
add
das
arpl
lds
das
clc
mov
mov
sbb
leave
fidivs
add
cmp
bound
or
lds
je
xchg
push
sub
push
add
fnstenv
int3
dec
insl
and
and
jb
and
and
inc
push
xchg
or
int
sahf
jecxz
add
or
sub
and
aad
inc
xor
movsl
lock
testl
aam
icebp
enter
in
rcrl
mov
dec
or
mov
dec
jne
cmpsb
push
sti
out
mov
xchg
mov
pusha
popf
pop
dec
gs
jo
push
push
inc
ljmp
sub
jno
xchg
imull
sbb
push
rclb
arpl
rcrb
es
insb
pushf
out
loop
adc
icebp
in
jns
lods
out
and
lahf
repnz
in
pop
rcrb
in
dec
aad
test
lcall
dec
and
and
out
xchg
pop
and
rcl
and
arpl
sub
bound
xor
sub
imull
aam
rcrl
add
lcall
dec
fstp
xor
xchg
rcr
pop
mov
mov
scas
push
cmpsl
xor
lcall
xchg
pusha
ds
mov
add
les
lret
or
scas
mull
lret
push
adc
pop
xchg
cltd
int3
cmpsb
xchg
repz
dec
ficompl
das
cmp
mov
push
icebp
repz
or
in
lret
test
lea
mov
cmp
ret
jnp
xor
and
push
mov
mov
shlb
cmc
and
lret
pop
mov
loopne
enter
jb
xlat
ljmp
and
popa
and
mov
add
push
flds
mov
add
addr16
adcl
imull
and
xlat
cmpsl
fisttpll
les
or
or
iret
das
adc
and
pushw
dec
addr16
push
movsb
mov
sub
and
push
addb
movsl
sbbb
popf
inc
inc
mov
in
sbb
pushf
lret
cmp
cmpb
ljmp
push
scas
push
arpl
sub
out
cld
add
fcompl
ret
jle
fcmovnb
pop
adc
mov
pusha
mov
std
add
cs
std
mov
cmpsb
imulb
popa
cmpsb
icebp
iret
pop
mov
push
mov
pop
shrb
sbb
test
cltd
leave
fwait
or
lcall
cmp
mov
mov
xor
movsl
sub
arpl
popa
inc
out
sbb
lods
scas
imul
adc
imul
pop
cmc
movsb
mov
cltd
movl
shr
fstl
roll
movsl
cmp
pop
movsl
xchg
aad
ss
lret
outsb
ja
int3
mov
and
dec
rcll
xor
pop
fisttps
cmc
vmovups
sub
mov
xchg
pushf
xchg
add
call
mov
scas
mov
sahf
outsl
aam
xchg
jl
lea
shrl
dec
cmp
mov
dec
mov
in
push
dec
mov
mov
outsl
mov
push
sbb
pop
aam
test
adc
add
add
sub
stos
add
mov
daa
pop
sbb
cmp
mov
cmp
cmp
loope
lds
lret
cld
loop
stos
xlat
adc
and
pop
sti
call
scas
push
mov
packsswb
hlt
cmp
mov
mov
dec
cs
imul
notl
mov
mov
inc
pop
mov
mov
xchg
dec
sub
xchg
and
out
jno
mov
mov
add
add
adc
ret
gs
leave
lahf
add
adcb
mov
stc
adc
and
mov
in
cmpsb
nop
dec
stos
pushf
and
jb
lock
mov
loope
out
inc
enter
pop
cmp
lret
dec
loop
push
xor
aas
lahf
test
xlat
repz
sbb
sbb
call
mov
or
ljmp
shlb
imul
in
or
cs
loop
inc
pop
push
fdiv
pusha
xor
push
pop
push
test
push
push
xchg
push
mov
mov
mov
mov
pop
inc
pop
xorb
mov
loop
cmp
loop
jo
int3
in
iret
cmp
stos
mov
adc
add
mov
fs
mov
mov
daa
out
iret
jl
mov
add
cmp
push
mov
push
fs
push
enter
jne
test
scas
jae
push
sub
outsb
in
pop
pop
scas
test
cmp
icebp
les
xor
inc
pop
imul
arpl
xchg
icebp
lcall
mov
and
push
sahf
in
dec
xchg
adc
add
loopne
inc
out
aad
xchg
dec
leave
pop
insb
push
sbb
or
mov
outsb
push
sti
mov
or
xchg
js
icebp
or
mov
insl
jl
scas
add
sti
fsubrl
aas
cli
jmp
imul
jp
push
dec
movsl
gs
mov
add
es
xchg
xchg
test
dec
loope
xchg
sbb
sub
cmp
in
add
testl
inc
roll
mov
xchg
mov
mov
nop
pop
sub
and
jnp
movsl
mov
jle
daa
fs
stos
out
xchg
test
cmpsb
jo
dec
subl
and
arpl
imul
repz
xor
cmc
mov
push
xor
or
stos
and
lea
xchg
pop
maskmovq
divl
out
addr16
loop
xchg
in
push
or
pop
jnp
pop
rcr
enter
lods
mov
clc
aas
mov
flds
scas
and
rcrl
mov
xchg
adc
xchg
mov
inc
stc
or
sbbl
mov
fistpl
xchg
mov
lods
jbe
inc
xor
jecxz
test
or
loop
xor
push
rorl
out
cmpb
cmp
jecxz
mov
daa
dec
xchg
outsl
test
cmp
addr16
pop
or
sub
mov
fstpt
out
pop
enter
rclb
in
fstpl
xchg
adc
mov
call
mov
mov
and
imul
cmpsl
mov
mov
pushf
or
ja
inc
ja
inc
cmpl
pop
mov
movsb
mov
inc
fists
fnsave
push
xor
pop
sarb
das
or
movsl
xchg
push
divb
inc
cmpsb
inc
mov
mov
dec
sbb
cmp
jbe
lea
sub
adcl
push
xor
adc
rolb
test
xchg
dec
inc
add
inc
dec
push
out
outsb
rcr
popl
mov
lods
sub
jae
orb
fwait
adc
sbb
dec
imul
mov
inc
jbe
lods
ljmp
xchg
scas
sbb
sahf
push
mov
ds
adcl
xchg
gs
add
push
or
push
sub
js
adc
rcll
sbb
outsl
js
pusha
inc
mov
push
out
cld
add
fwait
dec
movsb
pop
shrl
fiaddl
inc
jnp
jbe
inc
mov
pop
jb
fdivrl
insb
jp
idivb
andl
les
mov
out
stos
xor
jecxz
lret
jmp
aaa
testl
sub
sti
jae
sub
mov
adc
sbb
test
gs
lods
mov
aas
cmc
dec
pop
sbb
jbe
push
or
dec
pop
adc
fsubrp
into
stos
mov
mov
mov
mov
stos
mov
in
cmpsl
jbe
mov
sub
xor
cmp
lret
scas
push
aas
arpl
sub
fwait
pop
xor
xor
sti
sbbb
shl
idivl
dec
push
push
add
fistl
scas
mul
icebp
fstp
inc
or
in
in
outsb
sub
loope
and
loope
mov
movsb
xor
mov
push
dec
lret
rcrl
pop
jno
mov
cmp
in
into
sbb
andb
push
sbb
xor
mov
sbb
push
cmp
pop
repnz
add
add
in
and
sbb
jl
in
in
sbb
inc
sahf
into
mov
inc
gs
rorl
cmp
xchg
cs
sbb
mov
and
mov
imul
outsl
loope
fwait
cmpl
adc
dec
arpl
add
fwait
hlt
jb
loopne
mov
imul
test
xchg
sbb
and
push
dec
pusha
outsl
and
call
mov
lea
add
jae
aas
ja
or
cmp
cmpsb
inc
or
imul
es
or
xlat
pop
pop
cmp
and
inc
add
fbld
and
pop
arpl
addl
nop
jmp
ljmp
mov
scas
cwtl
sub
jno
inc
enter
jmp
xor
test
flds
xor
xchg
jle
xchg
xchg
mov
test
mov
push
in
adc
sbb
push
sahf
push
test
in
pop
adc
aaa
fwait
xchg
and
jmp
jmp
lcall
and
rcrb
xchg
data16
xchg
cmpsb
outsl
jg
sbb
nop
xor
popf
add
dec
mov
nop
and
push
adc
inc
sbb
data16
fmuls
inc
push
push
ret
hlt
test
rcr
pop
inc
in
pop
cmp
jbe
mov
fsubr
repz
ljmp
or
jmp
sbb
lock
je
xor
and
fimull
pushf
rorl
subb
adc
sub
or
imul
pop
mov
in
jbe
repz
adc
test
xor
decb
xchg
mov
test
inc
cmc
sub
aaa
adcb
xchg
push
mov
pushf
sbb
mov
pop
push
cmpsb
in
dec
jle
stc
xchg
fisttps
jo
aam
add
mov
jp
enter
inc
mov
iret
cld
scas
sbb
je
lret
aam
bnd
cmp
jae
jns
pushf
rorl
sub
lods
out
push
cmc
int
xlat
jecxz
fidivrl
cmp
test
xor
xchg
ret
dec
lahf
xchg
or
xor
mov
pop
mov
cmpb
fneni(8087
inc
leave
xor
xchg
push
jmp
push
cli
call
xchg
fstl
pop
into
adcl
fsubrs
push
scas
shlb
out
cs
insl
divb
mov
jge
dec
ret
in
ret
push
sub
dec
int3
push
cmp
out
push
mov
xor
xlat
mov
int
mov
jg
dec
mov
in
fnclex
outsb
fbstp
out
mov
push
sub
pop
pop
ds
lret
inc
sbb
movsb
push
mov
popa
jg
out
or
pop
sbb
jp
push
daa
dec
pop
adc
adcb
sbb
mov
in
mov
fidivl
hlt
lret
movsl
and
sbb
lods
push
repnz
pop
mov
xchg
or
movsl
sbb
push
sub
xchg
xorl
clc
add
lret
push
insl
jmp
jae
mov
lock
insl
dec
mov
xchg
and
iret
adc
xor
sub
xorb
dec
lret
pusha
out
mov
fwait
and
mov
fbstp
test
ret
fsubrl
push
jmp
arpl
and
push
cmpsl
adc
or
out
adc
testb
and
lods
lds
jle
bound
lods
pop
adc
ja
mov
and
js
cld
xchg
mov
test
pop
stos
mov
sub
ss
scas
pop
mov
mov
imul
test
mov
call
aas
outsb
sub
cmp
add
lahf
inc
dec
dec
sub
sti
lret
sahf
pop
les
inc
loope
inc
aad
mov
pop
lret
and
push
shrl
int3
jno
sbb
adc
push
test
or
out
pop
inc
push
add
test
fmull
pop
jle
dec
std
pop
aam
cmpb
xor
inc
cmpsl
jp
push
icebp
sbb
inc
clc
inc
hlt
pop
add
mov
notb
pop
test
pop
stos
lcall
lret
addr16
or
push
lcall
mov
stos
fisubl
jne
and
jg
inc
jno
push
inc
int3
mov
popa
cmpsb
loop
add
lcall
sub
dec
sub
leave
and
adcl
pop
xchg
add
mov
dec
mov
mov
les
jecxz
das
movsl
mov
push
lret
int
jg
mov
jle
int3
out
lods
cltd
adc
insb
pop
in
mov
out
xchg
push
dec
mov
and
pop
gs
jns
or
imul
repnz
int
adc
xchg
test
aam
adc
mov
repnz
cld
push
adc
jle
pop
scas
jne
addl
push
dec
inc
imul
dec
aaa
stc
cltd
out
jge
cmp
add
lock
imul
mov
push
loopne
test
adc
mov
sahf
pop
aas
cmp
loop
jbe
repnz
movsl
and
xchg
mov
jmp
addr16
cmpsb
popa
mov
mov
jb
movsb
out
mov
and
cltd
jmp
fsubl
in
sti
pop
addr16
outsb
insb
jnp
sub
jno
test
dec
sbb
loope
ds
fidivl
xlat
lahf
outsl
dec
adc
xchg
inc
movsl
xchg
in
cld
cld
jns
inc
sub
pop
dec
repz
xchg
iret
bound
cmp
push
inc
add
mov
mov
or
lahf
loope
fucomi
ljmp
pop
test
xchg
fadds
push
lahf
nop
mov
cwtl
outsb
jp
lds
mov
dec
fsts
outsl
jge
ljmp
jle
xor
pop
roll
xchg
in
sub
je
cmp
sbb
adc
push
adc
cmp
xor
andb
jb
mov
movsb
adc
mov
cs
sub
inc
add
xchg
shlb
je
add
xor
inc
mov
jl
cwtl
icebp
jo
xchg
into
mov
adc
sbb
mov
add
jg
movsb
lahf
rcrb
jbe
sub
sub
xchg
enter
movsb
mov
xchg
mov
repnz
iret
cld
je
imul
idivl
movsb
gs
scas
jne
loope
testl
icebp
mov
dec
and
nop
or
jmp
aas
das
lds
inc
scas
testl
pop
out
or
mov
dec
mov
adc
inc
xor
flds
xor
inc
adc
xor
icebp
popa
add
mov
imul
pop
dec
xor
ficomps
cmpsl
repnz
loop
or
sbb
jno
enter
dec
dec
jbe
dec
into
push
sbb
repnz
out
xchg
rolb
xor
push
pop
inc
pop
sbb
mov
cli
cs
sub
in
inc
pop
xor
dec
xor
dec
sub
push
push
mov
jp
pop
inc
pushl
inc
cmc
sbbb
popf
lds
dec
loopne
dec
stc
test
sarb
jg
jge
mov
adc
lcall
iret
xchg
mov
jmp
sub
pop
mov
add
test
cmpsl
std
jb
sti
xor
aad
mov
xor
xor
xchg
out
jecxz
cwtl
lcall
fistpl
and
jne,pt
xor
xchg
iret
cmpb
cmp
mov
loopne
mov
stos
xchg
dec
movsb
inc
shlb
mov
adc
add
lods
ret
out
xlat
cld
cmp
imul
mov
sub
cmpsl
enter
std
lods
push
push
je
aaa
push
jbe
jle
cmpsl
jecxz
in
ret
shlb
jecxz
push
pop
mov
pop
out
call
cmp
shrl
popa
jle
jne
pop
mov
push
jbe
xchg
or
push
push
or
adc
xchg
push
pushf
jecxz
cmp
rcll
ret
les
fcomp
jp
idivl
xor
clc
mov
mov
adc
je
fucomi
push
lods
inc
and
mov
shrb
stc
aaa
lock
xchg
dec
pop
outsl
push
jbe
call
mov
push
pop
call
cmpsl
out
cltd
sub
add
ja
mov
or
faddp
nop
int3
aas
repz
bound
shl
pop
pop
and
jmp
call
cmp
mov
add
mov
or
movsl
jmp
cmpsl
jbe
jl
sub
aaa
sbb
jp
sub
sub
lods
cwtl
mov
or
jg
in
lcall
mov
inc
xchg
test
xor
jl
popa
pushf
in
sbb
xor
int3
aas
mov
xor
test
pusha
push
frstor
repnz
hlt
cmp
adc
fdivr
lea
test
push
cmp
jecxz
fst
jns
cwtl
ficompl
mov
dec
dec
and
cmc
loop
mov
jmp
xchg
sub
inc
bound
lea
adc
fstsw
adc
mov
push
ss
jno
rclb
jp
mov
negb
pushf
inc
jne
popa
out
lret
add
nop
add
icebp
dec
mov
cmpsb
xchg
sub
in
pop
leave
push
fidivrl
ds
adc
outsb
imul
fldenv
sarb
jmp
inc
xlat
cmp
sub
fcmovnbe
shlb
inc
mov
aad
shrb
cs
dec
pop
mov
sbb
dec
or
lds
inc
add
fwait
mov
shl
mov
push
dec
fdivrp
jp
sub
sub
xchg
mov
sbb
jo
sti
popf
rcl
push
pop
bound
xchg
aas
cmp
mov
fildll
nop
movsl
dec
pop
fsubrl
push
ds
adc
outsl
or
mov
mov
jnp
iret
mov
mov
jb
sbb
jns
fsts
out
mov
in
mov
ret
dec
jle
pop
add
cld
sbb
xor
lret
shll
push
cmp
pop
sub
inc
mov
jae
sbb
xor
int
and
out
bound
push
xor
jbe
or
jp
mov
test
xchg
ret
lock
shl
aad
popa
in
es
adc
cmp
sbb
fwait
mov
xchg
clc
fmuls
dec
stos
sub
xchg
mov
sub
push
push
stos
jbe
hlt
sub
xchg
push
inc
fs
iret
jmp
int
jle
fnstsw
aas
das
sbb
mov
cli
xor
fidivs
jnp
sub
mov
or
ja
sbb
add
stc
stos
push
and
cmp
sub
pop
je
sub
lea
lcall
pop
and
inc
xor
jl
mov
sub
pop
xchg
cld
jbe
dec
test
adc
mov
push
mov
jmp
out
add
std
jb
nop
sahf
dec
xorl
xchg
popf
int
xchg
insl
divb
push
fdivrl
jno
xchg
loopne
lahf
push
push
stc
push
iret
add
xchg
gs
dec
movsl
inc
pop
in
mov
push
loopne
cmc
jno
dec
out
lock
cmc
mov
mov
fs
ds
leave
jl,pn
sbb
out
lcall
int
mov
pop
jnp
fadds
test
fisubl
loop
inc
pop
in
fnstenv
and
inc
xchg
cmpsl
aam
or
mov
insb
test
les
lods
or
mov
xchg
cmp
fsts
xor
out
mov
hlt
in
inc
nop
test
mov
lahf
adc
clc
push
dec
imul
fs
add
xor
jne
dec
push
xor
orl
add
mov
mov
pop
or
add
xchg
popf
js
push
movsl
and
clc
into
sbb
jb
pushf
pop
fwait
inc
aam
sbb
test
jo
xor
aas
mov
jne
add
sub
je
push
adc
mov
imul
flds
jb
sub
out
jne
in
repz
and
mov
mov
mov
xor
mov
cmc
push
popf
xchg
cwtl
test
xchg
out
aad
inc
mov
iret
ss
outsb
les
dec
stc
mov
sub
into
iret
pop
mov
cmc
mov
push
push
adc
jmp
repz
cld
cmpsb
add
add
adc
incl
call
and
cmp
dec
or
dec
and
pop
xchg
movsl
dec
xor
mov
ja
fnstenv
data16
push
stos
aam
push
cwtl
test
pop
lret
mov
xorb
jnp
push
mov
cmp
mov
fwait
jae
xchg
ja
add
fs
sub
and
jne
in
flds
adc
sbb
and
adc
fnsetpm(287
fcomps
dec
enter
sbb
inc
sbb
and
inc
out
rorb
push
mov
loop
cmc
bound
stos
in
insl
int3
lret
dec
lahf
in
dec
rolb
arpl
test
mov
cmpsl
out
and
or
cmp
pop
test
call
mov
icebp
int
lods
stc
pop
and
outsl
jge
cmp
lahf
ror
dec
arpl
sub
shll
push
sub
movsb
loopne
mov
mov
pop
sub
cli
inc
lock
arpl
mov
mov
push
dec
inc
mov
lock
out
sarl
pop
inc
adc
sub
iret
pop
push
cmp
mov
jae
xor
call
jmp
xchg
adc
mov
or
outsl
dec
xor
icebp
fwait
lret
jecxz
das
mov
dec
sub
out
int
push
and
test
jbe
std
pop
sbb
lods
push
push
mov
adc
hlt
imul
pop
mov
ljmp
aas
outsl
mov
xchg
mov
mov
aas
xchg
cmp
cmp
stos
xchg
test
add
or
sbb
pop
lods
iret
fnstsw
xor
mov
aas
mov
and
cltd
stos
lods
xor
add
or
cltd
das
or
shl
pop
xlat
adc
xor
je
push
push
shll
push
aaa
cmc
or
mov
lock
or
jb
sub
out
and
cmp
fisttpl
dec
add
loopne
daa
mov
lret
std
flds
aas
xor
jecxz
addr16
pushf
in
fsub
cmpsb
repnz
js
and
test
mov
out
jns
mov
ret
iret
fbstp
in
sbb
add
imul
in
push
gs
adc
test
jne
dec
sti
pop
pop
and
mov
or
outsl
adc
dec
int3
fsubr
jnp
mov
movsl
push
mov
xor
sub
cmp
xor
fadd
jb
mov
mov
mov
cmpsb
aad
mov
push
or
ja
inc
dec
or
fwait
push
mov
dec
ret
aam
push
es
mov
mov
xchg
dec
or
mov
and
or
in
cmp
int3
adc
ljmp
sub
repnz
cmp
aaa
cld
pop
or
bound
fsubs
mov
dec
mov
cwtl
xor
loop
inc
mov
repnz
sub
dec
mov
adcl
dec
cmp
cmp
cli
mov
insb
sahf
lcall
push
int
mov
sub
lret
add
cmp
sbb
inc
inc
icebp
and
pop
and
inc
daa
mov
mov
cld
add
jbe
fs
test
cwtl
sbb
outsb
in
dec
idivb
repnz
jne
and
mov
sbb
xchg
dec
xchg
outsb
xlat
adc
push
add
ja
shrb
jg
mov
cs
std
mov
dec
test
mov
inc
mov
push
inc
fwait
cmp
dec
xlat
add
sti
adc
ja
jg
sbb
das
popf
lahf
pop
dec
insb
dec
lods
jp
sbb
imul
clc
jne
outsl
and
fidivrl
push
pop
mov
loope
aas
sbb
repnz
stos
daa
outsb
ret
sbb
pop
subl
mov
je
js
xchg
sbb
mov
fwait
leave
and
cmp
sbb
arpl
dec
jp
bound
mov
in
sbb
repz
xchg
test
xor
out
pop
fnsave
je
loop
mov
or
xor
add
lret
ljmp
xor
push
fcmovnbe
adc
nop
sarl
mov
mov
test
add
out
sbb
int
sarl
mov
aad
call
mov
ret
cmpsb
cmp
dec
icebp
or
jno
pextrw
sbbb
dec
add
inc
sub
mov
jb
adc
or
out
pop
sbb
cmp
sub
mov
int
ljmp
bound
in
int
lret
lret
jmp
jo
inc
je
sub
or
adc
cmc
faddl
xchg
ret
xchg
and
sbb
loopne
sub
mov
addr16
and
jb
int
pop
push
sbb
loope
test
adc
arpl
test
mov
aaa
aad
or
mov
bound
lcall
in
adc
sub
lods
leave
sbb
lret
bound
aas
push
ja
sub
mov
pop
add
fistps
inc
xor
shll
dec
inc
sarl
mov
ljmp
loop
mov
xor
xor
mov
stos
lahf
inc
inc
or
xchg
cmpsb
mov
loop
mov
xchg
jno
pop
mov
aas
pop
mov
sti
in
lock
leave
add
mov
int
lock
stos
js
mov
jle
outsb
mov
insb
dec
fbstp
imul
push
mov
fisubrs
shrb
popf
dec
imul
stos
pop
inc
pop
cld
enter
arpl
jmp
ss
pop
in
mov
std
pop
adc
addr16
dec
and
mov
cld
xor
dec
ret
xchg
daa
mov
mov
cmc
inc
in
out
popa
and
popf
xchg
cmp
jmp
xchg
ljmp
filds
xor
dec
cmp
sahf
dec
aas
test
cmp
push
adcb
or
sub
popa
xchg
jno
xchg
xchg
jp
or
dec
jne
imul
or
xor
cli
sub
in
push
xchg
lret
ss
mov
mov
mov
xchg
dec
jp
sahf
leave
ret
mov
mov
or
inc
sub
je
out
in
mov
inc
inc
adc
sub
or
jge
jle
clc
imul
xchg
std
fistl
stos
inc
mov
or
cld
sbb
in
mov
add
cwtl
hlt
cmp
dec
pop
mov
insl
fidivrs
cli
add
cmpsl
int3
jb
dec
sbb
idivb
or
mov
adc
pop
dec
test
sbb
adc
mov
es
dec
cmp
ficoms
inc
out
dec
dec
lret
or
in
push
or
rcrb
push
out
pushl
add
sbb
inc
xchg
push
insl
or
lods
sub
xchg
arpl
sub
xor
mov
filds
push
sbb
aas
inc
mov
gs
mov
out
mov
pop
mov
pop
aad
jecxz
dec
add
and
cmc
jecxz
pop
or
sti
xor
mov
and
scas
lds
and
hlt
leave
jg
outsl
addr16
jp
sub
ficompl
and
inc
ja
shrb
xchg
es
arpl
stos
sub
jo
mov
push
aad
arpl
or
ss
sbb
adc
jp
js
add
fildl
lock
adcb
mov
push
cmpsb
mov
cwtl
loope
out
jecxz
gs
xor
mov
fdecstp
push
jbe
dec
pop
imul
addr16
xor
aaa
aad
mov
lret
les
mov
fmuls
pusha
jne
jmp
fmuls
daa
sbb
or
mov
inc
out
test
orl
insl
ds
bound
push
dec
cmp
xchg
mov
xchg
adc
cmp
mov
dec
loop
popa
mov
sub
test
mov
lock
jne
cmpsb
fildll
inc
jne
shl
mov
sbb
adc
xchg
js
loope
jl
fildll
popf
fsincos
loope
pop
xor
int3
dec
fbstp
jbe
loop
push
rcll
mov
mov
sbb
sub
xchg
out
dec
jl
push
dec
lods
popa
loopne
adc
incl
jo
xchg
pop
fcmovu
fsubrl
inc
fcoml
pop
mov
scas
adc
pop
xchg
cmp
lock
xor
ja
das
push
arpl
lods
sti
jecxz
or
lods
mov
dec
jecxz
push
std
cmp
pop
jecxz
push
shlb
xlat
jae
xchg
call
aas
mov
imul
aam
dec
push
andb
sbb
je
nop
in
mov
add
out
jne
dec
sub
inc
pop
lea
xor
push
sbb
out
insl
and
jbe
movsb
dec
mov
jle
rorb
sub
shrl
je
pop
cmpsl
add
or
in
mov
xchg
cli
mov
mov
out
or
out
adc
dec
mov
jmp
sub
xor
subl
lock
mov
mov
push
ja
out
cmpsb
push
stc
repnz
jb
sub
pop
push
inc
cld
push
aaa
inc
or
js
int3
mov
mov
adc
aaa
jnp
pop
ljmp
push
js
jle
mov
or
popf
popa
dec
pop
inc
jecxz
fbld
out
leave
rol
xor
mov
mov
outsl
inc
add
cld
pop
les
iret
and
inc
dec
xor
fs
es
vpcmpeqw
mov
add
fwait
sahf
fnstcw
cmp
fbstp
dec
ret
mov
shrb
sbb
bound
sub
sbbl
push
pop
push
inc
lea
mov
cwtl
dec
push
imul
das
mov
and
xchg
sub
xchg
and
jg
js
arpl
cmp
out
inc
test
stc
mov
cmovb
and
stos
mov
and
jl
pop
std
leave
sub
xchg
push
cmpsb
fsubrl
fnstcw
mov
push
mov
xor
cld
addr16
aad
xchg
outsb
push
mov
sahf
xor
test
test
in
or
cld
aam
aad
int
pop
xor
fisttpll
mov
popf
ds
xor
out
push
cwtl
cwtl
es
jo
fcmovne
cmp
lret
jae
mov
movsb
mov
hlt
adc
cmp
rcl
cmp
pop
inc
jle
cmpsl
pop
or
mov
xchg
xchg
xchg
xchg
jge
or
mov
mov
push
repnz
enter
popf
or
xchg
loopne
pop
inc
pusha
cmc
pushf
and
cld
shlb
add
cs
out
mov
andb
or
insb
lods
dec
nop
mov
inc
int3
fiaddl
scas
in
andb
pusha
daa
inc
jecxz
in
mov
pop
push
das
sub
sub
xchg
add
ja,pt
pop
lahf
sub
das
ss
rcrl
frstor
out
push
in
cs
pop
and
xchg
mov
sub
enter
mov
mov
jge
or
cmpsl
aas
shll
inc
pop
mov
xchg
sbb
cmp
push
incb
sti
dec
jmp
hlt
and
push
xchg
mov
add
pop
pop
pusha
sub
scas
add
rol
cli
inc
hlt
pop
add
and
add
bound
mov
aaa
mov
pmulhw
xor
xchg
repnz
in
inc
xchg
rorb
in
cmp
sti
ds
shll
movsb
addr16
addr16
scas
stos
ljmp
sti
cmp
cli
cmp
push
dec
lods
leave
dec
xor
shll
inc
das
dec
fstps
subl
sbb
addr16
xchg
lahf
aam
ficompl
xor
mov
jmp
sub
mov
xchg
movsb
or
push
loope
stos
fdivrs
sub
bound
pop
cmp
filds
cmp
fnstcw
js
je
sbbl
insb
scas
repz
mov
xor
in
in
clc
les
and
subb
hlt
jle
dec
mov
jmp
cltd
xor
cmpsb
stc
or
pop
dec
jp
adc
mov
ja
lahf
inc
nop
leave
mov
adc
lret
or
pop
sti
iret
in
bound
ljmp
sub
push
lock
sub
scas
dec
nop
push
fs
xor
lea
inc
lret
and
test
pop
lods
lods
or
xorb
int3
inc
xchg
shl
cmp
mov
sub
fistpl
data16
sub
adc
imul
add
test
xor
rcrl
lcall
cmp
jnp
xlat
sbbb
sub
mov
out
xchg
mov
mov
mov
movsl
cmp
clc
shrb
ror
mov
aaa
call
lock
pop
dec
mov
pop
cwtl
rcl
add
add
cwtl
mov
mov
add
stos
mov
and
data16
ja
or
jge
inc
mov
fwait
push
shrl
push
cs
mov
lret
sbb
xor
test
jl
insl
loope
fs
arpl
jae
rol
int3
mov
sub
adc
fmull
jae
push
mov
incl
ds
mov
sub
and
pop
xchg
xor
mov
addb
pop
aas
jb
jge
mov
dec
mov
lds
jmp
scas
lds
mov
iret
stc
scas
clc
bound
sbb
jns
adc
sbb
mov
aaa
xchg
sbb
aaa
xlat
mov
iret
adc
adcb
mov
xchg
jg
sbb
test
lret
jbe
mov
push
sub
scas
incl
sahf
dec
into
push
xchg
xor
icebp
sbb
jo
pop
or
cmp
ret
add
xor
xchg
loope
stc
in
push
adc
mov
dec
cmc
imul
jle
sub
mov
mov
pushf
push
inc
jp
or
das
scas
cmp
jp
je
add
lea
imul
jp
out
outsb
add
cmpsl
adc
repz
stos
add
xor
adc
daa
fadds
cld
pop
cli
pusha
xor
xchg
xchg
mov
inc
push
pop
rcrl
add
frstor
xor
xor
jo
sbb
mov
call
inc
xchg
int
imul
dec
mov
add
adc
xor
add
subb
mov
mov
mov
sbb
sbb
je
bound
aam
xchg
sbb
hlt
jecxz
jmp
mov
insl
andb
enter
adc
sbb
adc
xor
out
sti
cli
sti
lcall
cmpsb
in
mov
mov
loope
inc
mov
shrb
add
pop
adc
xor
hlt
push
stos
push
mov
pop
xchg
cld
nop
lea
sbb
jp
pushf
pop
mov
mov
and
pop
pusha
cs
mov
xchg
mov
pop
add
or
push
lahf
stos
add
xchg
test
and
mov
rcr
add
insl
jecxz
mov
jecxz
inc
in
sbb
scas
jae
sbb
testb
shll
fsubr
in
fs
xor
movsb
ret
mov
mov
in
and
mov
xor
js
cmp
jg
mov
cmpb
stos
cmpsl
in
jnp
mov
fimull
inc
nop
cmp
cmpsb
lcall
out
jne
sub
xor
ret
push
add
mov
add
fdivs
int
inc
and
es
xlat
jbe
pop
in
sub
fcomi
add
jge
mov
dec
sub
repnz
and
sbb
mov
add
mov
fstps
out
sbb
sbb
xchg
sub
xor
sbb
movsb
in
mov
fmul
jno
inc
xchg
bound
leave
xlat
stos
dec
and
shl
jl
adc
pop
or
pop
add
and
jg
xchg
sub
inc
clc
les
pop
stc
leave
in
mov
dec
movsb
inc
or
mov
xchg
mov
push
mov
pusha
push
or
inc
inc
adc
cwtl
mov
in
push
add
mov
cmp
arpl
pop
xchg
popa
cmp
ret
call
data16
push
fbstp
test
mov
jae
pop
ljmp
xor
dec
or
xchg
jecxz
pop
notb
sbb
xor
jbe
pop
pop
sub
jb
ljmp
or
jns
pop
sub
jns
xlat
pushf
shlb
outsb
aaa
jmp
xlat
xchg
jno
lock
sub
data16
fdivrl
aaa
and
add
or
xchg
in
ficompl
outsb
cmc
xchg
jo
adc
cmpsb
push
push
mov
sbb
das
mov
add
in
pop
dec
out
mov
pop
mov
push
sbb
aad
add
mov
ret
aaa
xor
lock
adc
aad
adc
movsb
enter
mov
stos
daa
add
movsb
add
test
fisubs
ljmp
inc
cmp
jno
dec
adc
push
es
inc
mov
into
or
dec
enter
adc
inc
fbstp
rolb
cmp
out
pop
xor
pop
lock
xchg
or
adcb
imul
or
lcall
lods
sbb
adc
mov
mov
sbb
dec
fdiv
jge
pop
lock
mov
in
aas
dec
dec
roll
pushf
push
js
stc
push
mov
fwait
sbb
push
mov
or
lea
adc
test
dec
sub
or
fsubrs
xlat
pusha
in
lods
out
nop
rep
lahf
pop
xor
mov
inc
jle
test
cld
mov
int3
push
xor
mov
shl
inc
or
std
fdivrp
ficompl
movsb
cmp
jl
mov
or
mov
fdivrs
mov
mov
xor
cltd
les
add
dec
iret
bndstx
inc
notb
inc
rclb
icebp
inc
lret
ret
pop
adc
jmp
cli
mov
xchg
je
fadds
out
mov
sbb
jo,pt
scas
jp
xor
jge
fidivl
push
pop
cltd
insb
popa
popf
iret
mov
and
and
fs
mov
out
adc
mov
push
inc
fcoml
or
aam
aas
sub
adc
es
jno
sti
fisttps
cmp
jne
jmp
fimull
jg
jbe
mov
mov
ret
jbe
into
in
dec
pop
test
js
pop
mov
inc
add
xchg
outsb
cmp
andl
jge
mov
jbe
and
movsl
dec
adc
rcrb
cmpsb
ja
inc
sbb
or
clc
mov
int3
ljmp
aaa
dec
sub
jg
dec
loop
scas
aad
out
sti
cmpsb
mov
pushfw
mov
dec
sbb
mov
xor
sbb
out
addr16
lods
inc
mov
movb
jle
lods
and
hlt
es
out
icebp
and
push
out
fidivrl
pusha
jmp
loop
out
inc
mov
mov
nop
mov
jb
push
shrb
loopne
clc
mov
les
push
jecxz
test
ljmp
lahf
xchg
ret
xchg
push
xchg
shlb
out
jb
pop
in
movsb
insb
cwtl
sub
fcomp
cmp
fnstsw
lret
test
outsb
push
xchg
mov
stos
movsb
mov
je
mov
cld
mov
xchg
fisttps
lds
add
call
or
rolb
sti
push
inc
xchg
adc
sub
or
in
ja
clc
add
xor
les
push
popf
mov
loope
dec
fst
and
leave
scas
jne
notb
jmp
std
jnp
nop
and
rorb
xor
push
push
inc
pop
rcrl
inc
icebp
lds
ret
sub
bound
or
sub
sub
cli
repnz
stos
fstpt
repz
and
and
inc
mov
cmp
mov
push
arpl
sub
and
push
fsubrs
dec
test
mov
loop
fldcw
mov
dec
mov
mov
xchg
cmp
cs
jnp
lock
mov
cli
cs
sarl
movl
xor
test
sbb
pop
scas
mov
mov
and
outsb
or
or
scas
push
subl
in
dec
leave
aaa
mov
pop
shlb
insb
sbb
adc
push
lods
out
push
sarb
jl
xchg
jns
hlt
enter
push
test
jecxz
popa
sbb
stc
fsubr
test
xchg
dec
test
ja
icebp
fldl
je
call
test
sti
movsl
mov
jmp
xchg
loope
jl
insb
jecxz
loope
push
ljmp
push
test
arpl
and
stos
mov
loope
push
xor
xor
ficomps
mov
sub
cmp
stos
mov
enter
sarl
jnp
inc
mov
lret
sarb
insl
in
cmp
fists
into
push
push
ret
enter
fiaddl
adcb
inc
mov
cmp
xchg
mov
add
lret
dec
cmp
les
inc
mov
xchg
movsb
fwait
cmpl
or
scas
or
out
test
push
pop
dec
popa
mov
sarb
pop
mov
cmpsb
and
popa
lcall
pop
cmp
pop
subl
jmp
fistpl
pop
mov
mov
push
cmp
xor
repnz
les
push
mov
push
lods
inc
and
dec
mov
mov
push
push
cmp
xor
test
xor
add
lret
aaa
out
lock
out
dec
fisttpll
loope
cmpb
shrl
repz
test
jne
mov
fsubs
sbb
iret
dec
ror
faddl
fistps
sbb
and
or
into
adc
pop
inc
and
lcall
cmp
mov
orb
fisubs
int3
icebp
inc
cmp
adcb
push
shrl
rsm
popa
out
pop
int
aad
adc
shrb
ja
pushf
and
mov
and
data16
cmp
cmp
fs
lock
rorb
imul
sarb
insl
dec
inc
xor
test
add
jne
xchg
mov
out
add
xchg
shl
pop
jp
adc
fcoms
fmul
loop
dec
inc
xchg
inc
push
int
call
rcrl
inc
into
adc
fcmove
adc
adc
pop
test
sbb
out
pop
mov
or
addr16
mov
clc
xchg
pop
ja
lea
push
rcl
dec
jp
outsb
ficoml
mov
and
cmp
dec
fcoml
xor
cmp
scas
cmpsb
or
aaa
inc
xchg
and
and
cmp
and
decb
pop
and
sarb
daa
mov
mov
dec
cmp
negb
push
aam
cwtl
cmpsl
jno
xor
les
pop
jbe
in
andb
imul
push
ds
xchg
dec
jmp
pop
lcall
pop
lahf
insl
out
subl
and
sbb
bound
lcall
je
aad
scas
inc
icebp
push
lea
cltd
into
jae
pushf
mov
add
push
cmpb
dec
cs
push
xchg
ja
mov
cmp
ret
out
push
push
test
and
add
mov
dec
add
push
mov
test
ljmp
mov
in
or
jl
pop
ss
xchg
inc
stc
addr16
cmp
call
test
inc
inc
nop
add
clc
inc
pusha
stos
inc
push
adc
cwtl
outsl
cmp
call
push
mov
mov
xchg
pop
cwtl
xchg
xchg
jns
sub
and
loope
nop
cwtl
inc
in
mov
push
out
push
xchg
into
dec
das
inc
inc
pop
aad
cmp
dec
sub
jp
addr16
push
adc
test
mov
out
setge
out
mov
test
xchg
fcoms
inc
cld
mov
dec
shll
es
loope
inc
xor
cwtl
filds
test
loopne
sbb
mov
xchg
jnp
daa
insl
cld
insb
pop
jmp
dec
jb
or
cmpsl
mov
jnp
pop
jmp
jle
rcll
dec
xor
dec
xchg
addb
xchg
pop
mov
inc
adc
in
xlat
dec
fcomps
icebp
into
andb
or
cmp
cmc
fucom
mov
daa
adc
cmp
xchg
ds
insb
mov
adc
or
dec
bswap
arpl
mov
mov
loope
dec
mov
les
pop
decb
pop
sub
lret
pop
mov
mov
cmpsl
in
inc
cmp
scas
nop
call
push
sti
sub
inc
pop
imulb
sbb
inc
movsl
pop
add
jae
xchg
dec
aaa
cmp
adc
sub
pop
pop
mov
in
inc
mov
jae
mov
push
icebp
repz
jae,pn
pop
mov
sub
push
push
or
and
cltd
repnz
out
sbb
push
adc
push
pop
pop
mov
mov
dec
je
clc
xor
cs
call
fisubrl
popf
add
lcall
enter
je
pop
adc
les
mov
mov
movsl
jae
stc
cmp
jge
xchg
outsb
pop
out
pop
push
mov
mov
push
mov
mov
and
mov
loopne
arpl
or
cmc
shlb
clc
imul
fsubp
mov
lods
push
aaa
xlat
lahf
mov
sbb
test
xchg
int
scas
arpl
fsubr
pop
xchg
or
or
mov
inc
add
xchg
int
mov
xchg
jl
jae
pop
fistpl
xor
imul
mov
sub
sti
sbb
jo
in
and
dec
mov
lret
mov
cmp
cmp
xchg
cmp
mov
mov
arpl
daa
lock
xor
mov
pop
data16
ret
aaa
in
push
ficompl
and
mov
sub
jge
xor
and
cs
cmp
xchg
cld
push
es
inc
das
ficomps
test
add
cltd
call
gs
in
and
lcall
ret
push
in
ss
insb
adc
inc
fwait
or
sbb
pop
jae
xor
sbb
add
jp
sub
push
mov
lret
das
scas
gs
movsl
xchg
in
cmp
lret
or
xchg
out
mov
xchg
rcrl
imul
xor
pushf
leave
jbe
push
mov
sub
cmp
cmc
push
mov
xchg
scas
xchg
xor
or
sti
xor
jb
lret
pop
mov
mov
mov
std
dec
jb
and
loope
test
sub
ljmp
fwait
inc
aad
cld
ja
aam
push
jmp
sub
add
sbb
popf
dec
add
insl
pop
addr16
jno
popf
mov
clc
sahf
addb
mov
push
inc
cs
test
pop
adc
cmp
cmp
dec
fisttps
dec
inc
jecxz
mov
js
cmp
lods
xor
add
imul
call
in
mov
mov
je
push
inc
adc
vlddqu
lock
cmp
scas
ffreep
fisubrs
stc
mov
adc
je
test
and
stc
ja
push
push
nop
inc
call
pushf
adc
mov
ret
dec
popf
fucompp
or
adc
out
ja
dec
rol
jb
je
cmp
ljmp
mov
mov
int3
pusha
mov
insb
mov
jp
data16
insb
icebp
dec
ds
inc
lcall
movsl
addb
mov
add
mov
test
imul
loope
mov
daa
adc
pop
aad
and
repnz
mov
imul
pushf
out
loop
or
scas
sbb
cli
mov
imul
fisubrl
je
dec
lret
shll
ja
leave
dec
pop
push
rol
les
push
xchg
nop
test
call
mov
icebp
and
lods
push
icebp
add
imul
aaa
pop
js
push
push
sbb
xchg
sub
dec
sub
xchg
adc
shll
jno
sti
imul
je
push
sti
movsl
std
or
rcr
jmp
push
inc
js
cltd
jge
cmp
sbb
lods
sahf
push
jne
leave
stos
cmp
sub
pop
cmc
push
sti
jecxz
jno
pushf
dec
stos
pushf
icebp
and
ds
mov
push
pop
icebp
cmpsb
aad
jle
iret
data16
pop
rcll
jbe
daa
orl
std
lods
sub
mov
fidivl
pop
movsb
cli
add
into
add
mov
push
cli
push
ljmp
xchg
test
mov
sbb
cmpl
int
inc
std
xchg
cmp
sti
dec
shll
mov
nop
cwtl
pop
lret
pusha
inc
lret
les
int
ljmp
sahf
ret
outsb
adc
jnp
hlt
xlat
adc
icebp
mov
cmp
xchg
mov
pushf
cmpsl
inc
xchg
scas
aad
sub
jo
add
mov
xor
fwait
rolb
mov
xchg
es
fstpl
mov
sti
xor
mov
in
orb
inc
pop
imul
pop
inc
push
mov
dec
lds
addr16
jl
loop
pop
mov
clc
and
fsts
or
push
mov
test
xchg
jo
jne
pop
fwait
pop
push
data16
push
cwtl
mul
mov
adc
scas
jecxz
test
repnz
test
adc
mov
inc
mov
pop
dec
mov
out
xchg
xor
daa
or
add
cmpb
clc
shr
sub
pop
mov
int
cmpsb
cmp
ds
aad
lds
cmp
aas
daa
sbb
in
jne
lret
push
sbb
xchg
or
xor
sarl
cmpsl
mov
dec
pop
sub
pusha
mov
pushf
xor
sub
scas
jge
inc
dec
mov
fs
and
arpl
push
or
rclb
int3
mov
mov
pop
and
dec
jecxz
pop
mov
adc
xchg
faddl
dec
repz
pop
mov
mov
adcb
push
mov
xchg
pop
fsubp
loope
addr16
xchg
xchg
xchg
scas
lock
dec
lret
rclb
gs
xor
loopne
cmc
adc
push
outsb
nop
adc
xchg
out
jnp
test
mov
sbb
fldcw
pop
mov
int3
xor
repz
push
cld
in
sbb
repnz
lret
clc
adc
sbb
mov
or
push
jae
xchg
mov
dec
sub
or
add
icebp
pop
decl
push
mov
xchg
aas
push
andb
pushf
fwait
ret
xchg
test
jnp
xor
sbb
sub
sub
rcrb
dec
xlat
inc
loopne,pt
repnz
xor
ret
mov
ficoms
mov
xor
add
leave
sahf
clc
shrb
icebp
dec
xchg
filds
aaa
rcrl
fisttps
xor
ljmp
je
mov
dec
add
or
movsb
push
int
and
jbe
pushf
mov
sbb
in
popf
cld
das
rolw
and
xchg
mov
ficoms
xchg
imul
or
cmp
popf
leave
clc
scas
inc
and
dec
jne
jecxz
jbe
sub
mov
cmp
pushf
notb
mov
jecxz
mov
lahf
or
aam
orl
nop
add
mov
mov
mov
dec
xchg
jecxz
adc
add
xor
ret
lret
lret
enter
sub
test
xor
lock
test
loop
mov
aam
add
test
imulb
adc
in
jmp
insb
sub
out
cmp
fisubl
orb
addb
add
scas
xchg
lds
cmp
roll
jnp
mov
cli
add
lret
fsubrs
shlb
mov
andl
aaa
cwtl
icebp
xor
rorl
sub
lds
movsl
jp
ds
cwtl
jnp
inc
enter
adc
fidivl
xor
sti
jns
movsb
pop
outsl
out
incl
add
sub
mov
xor
sub
xlat
aas
test
add
xchg
add
iret
mov
sti
fwait
and
dec
fcoms
pop
test
mov
repnz
cmp
jb
jmp
pop
xchg
add
loopne
inc
pop
ss
aam
pop
adc
adc
push
je
mov
outsl
shl
aad
lods
lock
rcrl
jmp
xlat
mulb
aad
shlb
fldl
sub
insb
sub
mov
and
cs
add
aam
mov
add
cld
insb
xor
mov
xchg
pusha
gs
in
bound
xchg
arpl
jecxz
rolb
loopne
jle
mov
mov
push
adc
jne
in
and
and
call
push
ret
out
xchg
sub
leave
aam
aas
out
jecxz
pop
push
dec
xor
xchg
cmpsb
sub
fmull
fmul
outsb
stc
sub
xchg
repz
and
mov
sbb
inc
add
push
test
popa
and
add
popa
into
loop
pusha
movsl
sbb
call
fsub
sub
mov
das
mov
pop
lret
push
pop
aaa
test
or
cmpsb
pop
subl
rorb
jle
mov
stc
clc
xchg
jl
adc
fistl
mov
pop
sub
sub
hlt
jmp
mov
je
or
sub
inc
subb
stos
loope
jae
pushf
loope
stos
sti
imul
loop
xchg
add
adcb
sbb
or
stos
and
pop
pop
mov
mov
push
and
mov
adc
mov
lret
push
ss
test
pop
sbb
mov
mov
dec
adc
dec
push
mov
xchg
cmpl
loop
mov
cmp
clc
add
loope
mov
jmp
pop
sub
lea
ds
xchg
sub
or
pop
test
mov
or
xchg
dec
and
cmp
push
in
lret
negl
stc
leave
pop
sbb
pop
push
xchg
sti
lock
in
sbb
stc
call
divl
cld
das
sti
mov
cmpsb
adc
mov
mov
pop
dec
mov
jo
push
xor
xchg
call
repz
ficompl
outsb
inc
ficoms
leave
bound
je
pop
pop
mov
movsb
jg
xchg
cmp
ljmp
imul
aam
push
jecxz
mov
out
out
mov
and
sbb
sbb
jl
out
sbb
cmp
out
jae
jp
dec
sub
leave
xchg
daa
dec
hlt
jl
into
inc
cmp
jmp
std
inc
push
sbb
inc
pusha
les
cwtl
daa
mov
dec
push
sub
testb
fwait
daa
lret
pop
lret
pop
adc
addr16
xorb
insb
xchg
and
outsb
cs
daa
lds
outsl
dec
mov
inc
xchg
vmovsldup
push
addr16
popl
jb
icebp
inc
imulb
adc
lret
jl
push
es
fcomp
test
push
leave
std
mov
xchg
push
sub
mov
psrld
dec
dec
sbb
movsl
mov
sbb
adc
push
cmp
test
push
add
pop
dec
dec
xchg
mov
in
mov
xchg
lcall
ss
jbe
testb
stos
adc
out
mov
ja
pop
sbb
sbb
jne
fstps
pop
or
push
fstl
cld
jl
or
rorb
cmp
add
sbb
fadds
cmp
and
lock
mov
pop
aas
repz
add
mov
movsb
jg
incb
xchg
sub
mov
push
out
sbb
xchg
rcrb
fcoml
mov
or
and
movsl
xchg
mov
das
jbe
cltd
add
shrb
or
shrb
cmp
push
movsl
into
pop
mov
loop
loopne
fisttpll
xchg
xchg
out
movsl
arpl
cmp
mov
cwtl
stos
jecxz
adc
ds
std
sbb
out
push
lds
xor
sub
mov
jo
mov
clc
jo
out
mov
inc
dec
mov
fadds
test
bound
xchg
sbb
paddusb
mov
jl
add
mov
push
pop
pushf
or
ljmp
adc
test
mov
inc
das
insb
cmpsb
cmp
gs
jae
insl
ret
out
cmpsl
bound
sbb
jne
loop
les
aaa
outsb
iret
hlt
xor
dec
stos
fsqrt
std
ret
pushf
movl
in
sbb
clc
ss
dec
cmp
gs
std
rolb
xchg
shll
loope
xor
push
or
sub
fstpt
cmpsl
outsl
xchg
jle
lahf
xor
lods
mov
dec
pop
enter
psrlq
aad
repz
xlat
add
or
bound
or
popa
xchg
clc
push
test
push
pop
push
add
dec
insl
add
pop
std
adc
movsb
sub
cmp
adc
dec
jns
cmp
in
adc
adc
into
push
or
sub
adc
es
xchg
mov
inc
and
stos
pop
inc
in
add
inc
sub
imul
aas
sbb
xor
or
mov
mov
movsb
mov
aaa
lods
lcall
sub
add
loop
mov
repnz
cltd
daa
jg
enter
jl
pop
test
stc
arpl
enter
jne
mov
lret
mov
xor
repz
insb
add
js
or
aad
roll
lahf
push
push
mov
lea
xor
xor
mov
sahf
jp
xchg
mov
pop
jge
fildll
or
jo
xchg
inc
mov
push
mov
jecxz
pop
dec
into
xor
out
jmp
mov
lahf
out
adc
nop
or
jg
mov
ss
fimull
mov
mov
std
xchg
mov
movsl
push
popa
push
add
and
mov
call
adc
jle
add
in
clc
cmc
out
xchg
add
fdivl
adc
sbb
sbb
inc
loope
add
outsl
xor
arpl
add
add
fsts
mov
sub
ret
cli
sub
cmp
mov
adc
shll
mov
xchg
sarl
testb
or
mov
rol
inc
pop
insb
lahf
movsb
pop
out
sbb
add
lds
clc
pop
scas
pop
push
rcl
out
push
or
xchg
and
push
mov
in
stos
sbb
fidivl
std
cmpb
fsubs
sub
pop
dec
mov
jae
out
call
aad
jl
test
mov
das
cs
xchg
aaa
adc
and
testl
addr16
push
loope
jmp
aas
frstor
inc
mov
mov
cmp
bound
dec
aas
adc
les
pop
pop
push
sub
adc
push
cwtl
or
mov
mov
xor
pop
xchg
pop
pusha
movsb
dec
sub
stc
jnp
and
adc
scas
sti
cmpsl
jb
fldl
mov
test
out
jb
adc
mov
mov
pushf
xlat
pop
mov
mov
outsb
je
pushf
mov
pop
jl
hlt
cmp
lods
pop
scas
jle
and
stos
mov
add
xor
jns
pop
repz
jo
jcxz
pop
mov
rcrl
push
icebp
cmc
adc
lahf
shlb
daa
outsb
jns
pop
and
popf
gs
lods
fwait
mov
cmc
xor
incb
inc
stos
aam
out
mov
loopne
xchg
mov
outsb
mov
xchg
cltd
cmp
inc
sahf
xor
lret
pop
or
ss
adc
mov
mov
repnz
xor
mov
out
js
mov
mov
cld
mov
js
dec
xor
cmc
dec
stos
pushf
loope
cld
stc
dec
mov
dec
pushl
outsl
xchg
in
cmp
dec
adc
out
pop
daa
outsb
pop
jno
jb
sub
das
dec
test
mov
cmpsb
es
lock
dec
and
pop
sbb
andb
and
scas
dec
stc
xchg
stos
shll
fmull
fxch
adc
add
neg
idivl
ror
jne
repnz
stc
cld
cmp
jmp
jno
stos
popf
pop
fcmovu
sub
pop
push
or
or
xchg
shlb
inc
xor
stos
bound
aam
mov
mov
inc
scas
xchg
je
sub
pop
shrl
add
or
jbe
sbb
and
js
test
mov
andb
in
scas
sarl
mov
fstps
es
std
cmp
add
sub
add
cmpsl
inc
mov
cmpsb
test
and
outsl
jecxz
and
enter
mov
inc
pusha
push
loop
loope
lea
xor
add
fidivrl
jp
sbbl
ret
pop
mov
xor
jecxz
mov
add
or
push
test
popa
jl
insb
daa
test
mov
xchg
fbld
fidivs
in
stc
xlat
xor
mov
mov
sub
xchg
pop
cmp
mov
data16
mov
lret
cltd
out
inc
ljmp
mov
and
xchg
or
imulb
test
push
jl
lret
sbb
das
jmp
cmp
loop
pushf
ror
scas
fnstsw
lock
jge
mov
imul
mov
sahf
popf
sbb
test
jmp
mov
pusha
dec
mov
fidivs
push
cltd
push
inc
sarl
cmp
sub
popa
fsubrs
popa
sbb
mov
mov
int
inc
fcmove
adc
pop
lods
push
fiaddl
and
push
pop
int
or
ljmp
sub
xchg
popa
repz
pop
mov
mov
negb
pop
xchg
add
outsb
clc
jno
arpl
addr16
push
mov
nop
incl
outsl
sarb
rorb
pusha
or
inc
cmp
insb
and
add
cmpl
es
jp
repz
jns
sub
lret
pop
lcall
mov
pop
fdivp
and
inc
insb
nop
scas
mov
inc
sbb
mov
xor
test
out
pop
push
jle
imul
test
cs
rorl
repnz
xor
cmpsl
jo
lret
pop
std
inc
xlat
xor
in
lods
dec
sub
sbb
je
loopne
cmpsb
arpl
rclb
inc
pop
aam
jb
jmp
popf
mov
movsl
sub
push
stc
lahf
in
push
rcrb
fsts
xchg
xchg
jp
popf
ljmp
lock
das
or
xchg
mov
pushf
or
and
jo
popf
push
sbb
jl
or
ret
popa
mov
sahf
cmp
inc
xchg
sbb
addb
stos
gs
js
xchg
push
daa
xor
addb
vzeroupper
mov
mov
sub
ffree
sub
daa
mov
push
and
mov
sbb
loope
cmp
mov
sbb
pop
xor
scas
mov
imul
and
rclb
xchg
mov
testl
nop
adc
out
stos
out
sbb
sub
enter
push
test
les
mov
ljmp
mov
inc
and
lret
jne
add
sub
xor
push
dec
cmp
ss
jle
mov
jb
jb
fldcw
jbe
pop
and
rorb
inc
sub
incb
lret
add
lret
push
dec
pop
xor
lea
hlt
outsl
or
icebp
sub
pushf
xor
jo
daa
stos
xor
fdivrs
repz
sbbb
jge
mov
jg
mov
pusha
jns
and
nop
nop
pushl
xlat
pop
dec
cmc
push
shld
xchg
pop
dec
or
inc
push
mov
or
add
stos
mov
mov
loop
out
fcoms
xor
cmp
xchg
mov
add
xlat
aam
add
jb
xor
and
adc
lahf
jne
out
mov
imul
push
int
jmp
shll
insb
jmp
std
sub
xchg
and
jle
push
pop
xor
shlb
movsb
mov
push
sbbl
pop
cli
loopne
dec
xor
leave
addr16
inc
cmp
xor
imul
xchg
decl
sub
js
cmp
and
add
and
mov
out
sub
fldt
add
or
aad
into
sub
test
pop
popf
adcl
dec
sub
mov
mov
xor
xchg
adc
jmp
mov
pushf
dec
clc
mov
iret
lock
lds
dec
gs
negl
sti
xchg
ja
pop
in
lods
addr16
imul
ja
mov
and
scas
xor
roll
ret
hlt
mov
mov
roll
popf
mov
sahf
jmp
leave
mov
stos
mov
fdivrs
jmp
cmpsb
cltd
mov
bound
iret
push
xor
xor
push
or
fstpt
xchg
punpcklwd
loopne
into
fisttpll
adc
movsl
ja
xchg
icebp
inc
mov
mov
mov
ds
dec
dec
pop
pop
cmp
cmp
insl
mov
xchg
daa
cmpsl
cmpsl
lea
aas
insb
popa
cmp
repz
xor
lds
jmp
xchg
mov
imul
mov
jbe
iret
mov
outsl
and
aas
testb
jnp
cmc
mov
jp
rcl
inc
rorb
stos
lea
lret
ja
movsb
cld
enter
mov
mov
xchg
push
adc
fstpl
das
mov
adc
mov
xor
cmpsb
sub
mov
jae
outsl
fmuls
adc
clc
aaa
sub
mov
movsl
cmpl
lcall
mov
jns
push
push
jg
xchg
sbb
adc
out
orb
aas
es
out
dec
cmp
lahf
into
shll
ljmp
mov
outsb
adc
daa
xor
inc
lods
xchg
inc
je
test
leave
push
jp
outsl
push
lcall
and
fstl
and
aas
lret
cmpsl
push
es
adc
adc
inc
movsl
jae
mov
es
pop
adc
cmpsb
xchg
lahf
mov
cmpsb
add
ret
fwait
jmp
inc
js
jg
data16
cmp
out
or
mov
js
inc
lret
jbe
nop
dec
insb
leave
repz
jge
mov
sbb
bound
sub
mov
test
sbb
lods
cmp
xlat
inc
cmp
inc
mov
cmpb
push
jmp
popa
and
sbb
loop
xlat
adc
int
jo
xchg
xchg
xchg
popa
jecxz
mov
sbb
out
add
lods
mov
jne
stos
jne
scas
test
aad
fmulp
inc
cmp
sahf
jmp
test
mov
fisubrs
sbb
push
loopne
add
stos
mov
clc
mov
out
ret
mull
inc
push
int
test
fnstenv
outsb
in
js
mov
mov
inc
lcall
rcr
std
pop
push
adc
fcoml
scas
push
dec
lds
inc
mov
mov
mov
lret
lods
lcall
fisttpl
add
in
push
mov
adc
arpl
mov
and
add
push
mov
mov
push
ja
int
arpl
shrl
mov
or
jg
xor
leave
inc
mov
push
addr16
movb
loopne
movsb
stos
rcl
repnz
pop
push
stc
scas
cmp
mov
pop
jl
add
daa
inc
stos
mov
shrl
pop
sbb
mov
in
fidivl
fucomp
push
loopne
jbe
jb
push
inc
inc
cmp
shll
mov
scas
dec
pop
stc
inc
ja
ds
xor
cmp
adc
sub
ds
sti
sbbb
and
dec
dec
repnz
mov
cmp
bound
push
test
adc
outsl
out
pop
adc
inc
dec
lock
push
in
test
movsb
les
push
push
popf
fs
mov
mov
call
jmp
clc
push
xchg
or
jmp
outsl
push
xlat
and
sbb
cmp
inc
addr16
sbb
sub
stos
je
sbb
hlt
pop
fcmovnbe
xchg
inc
pop
shl
sbb
lret
subl
adc
std
lahf
mov
mov
outsb
lret
adc
nop
cmp
jns
pop
sub
stc
mov
cmpsl
push
push
leave
sub
push
cmpsl
insl
les
mov
mov
add
jno
aas
xor
mov
sub
and
popa
or
pusha
inc
dec
in
and
sbbb
mov
and
scas
shl
imul
sbb
mov
xlat
lock
mov
rcll
jp
mov
jae
sarl
bound
cmp
leave
sarb
cmp
xchg
xlat
jnp
hlt
daa
movsl
and
dec
ljmp
inc
insl
mov
movsb
push
mov
ja
iret
aaa
jnp
dec
pop
jp
or
jmp
xchg
cmp
jl
inc
flds
fmull
mov
pop
lret
outsl
or
pop
or
cmp
popa
ja
test
out
sub
bound
xlat
and
lret
sub
icebp
lahf
scas
sub
adc
es
sahf
and
add
outsl
in
adc
dec
add
out
mov
dec
cs
lds
out
rorb
mov
mov
pushf
in
push
out
or
add
es
add
jo
pushf
daa
push
call
jmp
shr
in
sbb
nop
mov
daa
sbb
mov
xchg
jge
jnp
fwait
int
hlt
es
push
in
mov
jp
add
mov
lea
pushf
sub
aad
push
cs
mov
mov
addr16
enter
mov
stos
xor
xchg
sub
idivl
cs
andl
pop
sbb
add
or
out
les
scas
sub
into
xor
outsb
in
test
andb
mov
popa
dec
ds
mov
add
dec
cs
pop
pop
jle
test
xor
daa
inc
xchg
mov
pushf
sub
jae
mov
movsb
shr
stos
jp,pn
lahf
outsb
pop
shll
outsb
push
add
fdivr
cmp
push
dec
sub
cmp
and
imulb
mov
mov
push
je
dec
mov
cmp
mov
mov
xchg
pushf
mov
xlat
cmp
lea
fsub
scas
andb
xchg
sub
pop
mov
push
sbb
cmpsl
push
inc
mov
movq
push
mov
xor
mov
and
jb
xor
jnp
insb
mov
xchg
mov
inc
push
adc
mov
inc
pop
dec
jno
add
lahf
inc
addr16
xor
repnz
imul
push
shll
inc
les
xchg
icebp
pop
loopne
add
fistpll
test
addr16
cli
cmpsl
xchg
out
push
shrb
and
dec
mov
inc
loop
loopne
xor
push
xor
push
xchg
aad
std
bound
dec
scas
mov
adc
call
sarl
daa
movsl
rol
jne
add
push
js
jae
jge
dec
push
xchg
xchg
xchg
mov
int3
imul
push
andb
scas
and
inc
dec
adc
cmp
es
pushf
jo
or
sbb
outsb
xchg
jmp
out
out
sbb
leave
jno
vmulpd
divl
in
out
mov
cld
sbb
push
push
jbe
ss
fildl
jbe
ja
ds
cmp
push
out
xlat
sub
adc
loopne
mov
es
arpl
cmp
in
pop
mov
pop
dec
dec
jp
icebp
test
dec
mov
fsubr
mov
cltd
ss
out
push
cmp
fadd
mov
stos
gs
fwait
outsb
sti
jo
incl
push
cmp
fidivs
movsb
int3
push
cmp
xor
xchg
inc
adcb
pusha
lret
cmc
xchg
jmp
loope
jne
and
adc
pop
fs
mov
call
mov
sti
and
in
jo
add
push
aad
jmp
imul
lret
popf
sub
push
and
daa
lret
jmp
pop
bound
rcrl
repnz
xchg
mov
shr
out
test
mov
and
mov
mov
mov
imul
xchg
pusha
cld
in
mov
inc
lcall
daa
call
xor
xorb
jg
ljmp
adc
and
test
rcl
rcrl
jbe
loop
bound
cltd
popf
mov
mov
and
test
inc
popf
or
sub
mov
push
fldenv
addr16
and
popa
es
lods
mov
call
lahf
jae
shlb
mov
mov
inc
movsb
faddl
and
std
mov
ljmp
fcomps
add
insl
inc
sahf
mov
jo
ja
enter
je
pop
leave
cmp
xor
mov
xlat
test
psubb
mov
negb
mov
mov
test
outsb
push
push
dec
pusha
js
andl
bound
stc
insl
adc
repz
out
sbb
cmp
in
in
addl
push
push
push
jns
xchg
fidivs
jne
jmp
xor
cmp
in
das
gs
in
mov
mov
inc
stos
mov
or
push
mov
xor
nop
sarl
fldt
loope
test
push
in
sub
push
cmp
jmp
push
add
jecxz
mov
and
mov
es
mov
sahf
mov
xchg
xor
and
andl
shlb
jns
fnstsw
mov
jnp
fs
jns
fs
out
out
pop
pop
inc
sarb
mov
rcrb
adc
mov
imul
repnz
fisubrl
pop
jbe
nop
cmc
inc
inc
add
mov
mov
ret
jae
jne
inc
in
insl
lods
mov
in
pop
pop
or
inc
cmc
stos
cmpsl
fs
mov
sahf
push
push
pop
lods
divl
out
vmptrld
hlt
add
xchg
pop
xchg
inc
or
sti
inc
lret
data16
mov
inc
push
adcb
iret
pop
std
movsb
xchg
insl
push
ljmp
aaa
pop
lret
xchg
in
xorb
imul
mov
inc
xchg
dec
jae
daa
sub
rcll
xor
sti
pushf
shlb
nop
test
cmpsl
push
or
pop
fdivr
sahf
rcrb
add
mov
das
imul
xchg
and
pushf
pusha
cltd
cmp
mov
push
shrl
pop
mov
pop
mov
pop
aaa
ja
mov
cld
lods
nop
mov
ds
in
xchg
push
das
push
jno
icebp
stc
push
push
sbb
loope
sbb
lods
shll
push
shlb
xchg
les
sbb
cli
jno
enter
jb
scas
cmp
jge
scas
xor
push
mov
dec
push
in
push
cmp
xor
sub
cmpsl
stos
mov
sub
push
inc
ret
sub
jg
push
in
adcl
jns
rcll
inc
sbb
dec
pop
jl
shrb
push
scas
repnz
sbb
push
fs
cmpsl
call
bnd
lcall
in
enter
push
mov
inc
xor
sbb
sub
stc
mov
adc
xchg
sbb
stc
data16
mov
cmpsl
xorb
or
push
mov
cmp
lret
lods
pop
inc
xor
gs
xchg
xor
pop
stos
pop
ja
ja
dec
xchg
push
hlt
add
ss
mov
es
xchg
fdivl
sub
ss
fistl
dec
fmull
mov
gs
add
mov
adc
in
stos
mov
and
mov
push
aam
imul
push
dec
arpl
rcrl
cmpsb
fiaddl
lcall
std
insb
inc
cs
fs
daa
xlat
fistl
int3
push
mov
cs
mov
inc
ss
das
lods
inc
xchg
not
pop
sbb
rcr
push
mov
dec
push
popa
movsl
push
int3
fnstcw
clc
rolb
pop
inc
das
lahf
sbb
sbb
popa
fidivrs
push
sbb
mov
test
je
lea
push
enter
inc
insl
pop
insl
sarb
out
adc
adc
cmp
test
pop
or
imul
aad
dec
dec
cli
dec
jbe
add
jle
repnz
popf
xchg
cmc
mov
js
cmp
les
xor
pop
add
adc
dec
in
push
mov
jo
xlat
add
test
call
cmp
rcl
mov
dec
dec
arpl
mov
mov
test
lcall
jg
mov
mov
cmp
iret
in
inc
mov
cld
jle
and
push
loope
int
pop
dec
out
add
arpl
stos
scas
outsb
mov
lahf
imul
imul
ds
push
xchg
xchg
jae
in
daa
xor
es
fs
adc
into
pop
xchg
testb
inc
divb
push
xor
xor
cli
sbb
xchg
mov
and
jnp
out
and
mov
and
out
add
aaa
push
dec
in
aam
or
jl
push
pop
mov
lcall
in
push
shlb
cli
mov
sub
cmpb
push
mov
xor
outsb
jg
jp
shlb
jg
pop
pusha
lret
add
js
cmp
inc
jge
mov
pushf
and
mov
sbb
je
lock
ucomiss
fucom
push
sbb
mov
xchg
inc
push
repnz
daa
cmp
dec
aad
pop
pop
xor
ds
pop
mov
adc
shrl
addr16
fmull
leave
fistps
push
and
mov
loopne
fnsave
adc
cmp
imul
cs
lods
push
leave
data16
ja
dec
sbb
ficomps
inc
ss
ja
shl
stc
aaa
lahf
std
in
cmovnp
dec
push
xchg
out
fwait
sub
bound
xor
or
and
int
lods
orb
add
push
loope
adc
rorb
mov
fbstp
adc
adc
ja
les
outsb
xor
fnsave
out
mov
pusha
fwait
stos
dec
mov
push
repnz
lret
stos
data16
ja
inc
mov
fwait
cmpsl
rcll
cmp
dec
push
and
rclb
xor
int
mov
jmp
mov
mov
aas
cltd
out
mov
xchg
repnz
mov
push
pop
int
push
push
nop
xor
outsl
adc
add
leave
cmp
pop
sbb
inc
ds
mov
shll
sbb
pop
pop
or
pop
clc
or
test
xor
popl
in
push
leave
negl
movsl
or
das
jge
fistl
icebp
mov
and
mov
adc
pop
adc
mov
mov
lods
cmp
add
call
test
repz
sbb
sub
push
xlat
rdpmc
adc
add
jno
popa
xor
jb
inc
mov
mov
pop
daa
fstpl
lcall
or
cmpl
popf
fwait
mov
dec
out
movb
jb
addr16
fs
inc
dec
lock
in
fsub
inc
fists
push
adc
gs
xorb
mov
jecxz
adc
mov
mov
stos
lock
insb
ror
es
int3
jae
pusha
adc
adc
pop
mov
mov
dec
clc
add
mov
mov
mov
add
rorl
mov
lock
loope
dec
fiadds
shld
popa
mov
and
daa
mov
sbb
call
negl
jle
push
scas
je
cmp
addl
and
add
scas
or
xor
in
mov
jmp
lahf
pop
dec
out
scas
test
or
adc
leave
arpl
adc
push
sti
int
sbb
mov
mov
mov
aam
popa
or
out
cmp
sub
pop
mov
mov
adc
sub
mov
fldl
add
mov
ret
lret
mov
je
loop
pop
in
outsb
dec
mov
pop
movsl
lds
popa
jecxz
jnp
divl
xor
in
cmp
out
dec
jnp
mov
les
icebp
into
dec
loopne
scas
ficompl
sarb
dec
out
pop
lret
pop
aas
movsl
mov
ss
int3
dec
pop
mov
loope
xlat
cwtl
enter
lretw
xchg
mov
dec
or
test
jns
lods
jo
pop
mov
push
jp
xlat
daa
xchg
inc
mov
popa
jae
adc
rcrb
inc
out
mov
movsl
adc
mov
push
xor
fmull
data16
cmc
in
xchg
xor
sub
cli
ret
out
cltd
leave
aam
jg
xchg
push
repz
jp
xchg
mov
lods
and
scas
sub
or
jbe
add
mov
int3
popa
inc
fcomp
dec
xlat
lods
sbb
mov
push
add
cltd
and
adc
push
mov
inc
lcall
jle
mov
mov
sbb
ss
mov
xor
out
cld
or
push
and
test
cmp
jb
xchg
jecxz
inc
movsl
xchg
rcl
pop
stc
pop
jmp
je
sub
sbb
adcl
cmp
xchg
cwtl
inc
std
imul
enter
xor
ret
inc
insb
push
out
push
rcl
push
dec
into
lcall
mov
sbb
das
push
data16
lds
aam
sub
rorb
xchg
push
repz
das
aas
nop
mov
shll
mov
aaa
stos
dec
cld
xchg
sahf
cmc
push
mov
mov
push
cmp
lds
mov
jle
jge
out
pop
adc
pop
imul
jecxz
and
aaa
fidivrl
xchg
mov
lea
cmp
in
fisttps
movsl
and
sub
filds
mul
daa
or
data16
es
mov
shlb
xchg
pop
test
xchg
shlb
test
das
xorl
mov
push
outsb
scas
bound
pushf
repz
nop
mov
int
scas
ljmp
mov
inc
out
movl
fstpl
aam
out
xor
xchg
dec
inc
fsubrl
push
jnp
int
lea
bound
mov
movsl
call
adc
cs
dec
and
or
sub
xor
mov
push
cs
popf
movsb
enter
and
and
pop
push
stos
clc
xor
popf
test
out
aam
mov
mull
sbbb
inc
xchg
dec
push
stos
xchg
orl
xchg
and
cmp
repz
les
jno
sbb
jmp
mov
pop
sub
imul
nop
push
pusha
stc
lods
mov
jl
sbbb
jg
lods
cltd
xor
mov
mov
inc
mov
sub
repnz
dec
mov
pop
in
and
or
adc
leave
loopne
mov
rcl
enter
mov
or
daa
loopne
fsubr
pop
shlb
test
or
jmp
xchg
add
xor
sarl
cmpsb
lods
fistl
enter
pushf
mov
cld
sub
fcoms
bnd
sub
and
enter
and
andl
dec
xor
sbb
push
rcrl
mov
jae
cmpsb
rclb
mov
sbb
loope
sub
cltd
jecxz
je
cwtl
out
push
sbb
push
fiadds
jae
sahf
aam
inc
aas
sbb
xchg
aaa
sti
shll
adc
jmp
adc
sarl
lret
dec
cmp
stos
xchg
mov
cmp
add
les
out
push
pop
and
aas
or
hlt
sbb
movsb
inc
and
or
std
sub
dec
inc
pop
repz
or
fisubl
cli
mov
xchg
mov
mov
shlb
pop
cmp
lahf
ficompl
push
and
cmp
pop
out
jnp
sbb
add
mov
vmread
iret
push
out
hlt
push
insb
dec
push
mov
ret
popf
scas
jnp
xchg
fistps
xchg
movsl
cld
jno
mov
xor
sbb
push
add
psubsw
fmuls
or
inc
sbbb
lods
add
xchg
lcall
push
push
js,pn
scas
mov
hlt
mov
jp
push
mov
jg
inc
mov
cmp
xchg
xor
jo
popa
lret
shrl
add
aas
mov
push
push
pop
ret
mov
aaa
push
jle
dec
shrb
mov
int3
adc
mov
cltd
arpl
int
and
mov
mov
or
cmp
lret
sbb
popf
sub
out
mov
stos
jecxz
ja
sub
in
xchg
mov
or
gs
lds
das
in
icebp
test
xor
cltd
sub
lock
lods
xchg
fcomp
sub
mov
mov
aas
aam
xor
and
mov
cs
xorl
cwtl
push
in
xchg
loopne
frndint
fsub
das
push
jge
cmp
xor
sbb
inc
cwtl
cltd
mov
hlt
aad
lock
pop
push
pop
mov
mov
jns
and
pop
sbb
ret
inc
cmp
or
xchg
rclb
push
ds
add
xor
das
xor
dec
fimuls
inc
and
int3
mov
or
jnp
pop
cmc
rcr
mov
mov
rclb
test
insb
xchg
mov
cs
dec
push
dec
fldenv
out
or
push
cmp
sbb
sub
rcll
sub
mov
pop
pop
stos
push
pop
rclb
xor
or
ret
insb
rcll
andl
mov
xchg
jns
or
ret
cmpsl
fisttpl
add
lcall
inc
mov
inc
and
mov
dec
leave
mov
es
daa
stc
jl
lahf
dec
lahf
les
sub
mov
dec
cwtl
mov
and
sub
or
cmp
js
cmp
sbb
xor
jge
xchg
jl
inc
add
sub
js
das
mov
mov
jl
outsl
sbb
xor
fld
push
inc
or
jae
lds
movsl
iret
inc
xor
sub
adc
call
mov
aas
fucomi
dec
cmc
dec
das
je
sub
dec
repz
jmp
xor
loop
cld
sbb
xcrypt-ctr
cmpsl
pushf
add
aas
inc
cmpsl
ret
stos
mov
mov
enter
test
icebp
ret
cmp
sbb
inc
sbb
xchg
stos
ret
xor
mov
adc
pop
dec
mov
fsubr
cmpsl
push
pop
dec
mov
jp
insl
rcrl
out
adc
lods
stos
push
sbb
jne
push
pop
xchg
lret
stc
stos
lods
test
cmc
shll
and
mov
ffree
mov
jle
out
shll
mov
xchg
jecxz
pop
clc
xchg
cmpsl
pop
lea
dec
ss
and
push
cmp
inc
jae
fld
lea
dec
mov
insb
int
popf
xor
je
cmp
and
inc
sub
icebp
sarl
in
dec
pop
popa
push
lcall
scas
sbb
test
pop
mov
pop
sti
shll
ret
sti
popa
add
adc
pop
mov
pop
out
sbb
sbb
call
or
cmpb
pop
fcmovbe
fbld
pop
xchg
add
mov
test
arpl
lahf
xchg
sub
lock
in
data16
pop
xorl
cwtl
xor
jne
enter
pushf
nop
test
push
call
xorl
mov
xor
shr
cmp
insl
stos
ljmp
sub
test
test
int
mov
push
ljmp
mov
mov
jge
clc
pop
jae
int
pop
js
pop
fcomi
fnsave
ss
add
arpl
fnstcw
mov
adc
mov
in
cmc
mov
pop
or
ret
pushf
push
enter
ds
daa
ds
lock
cltd
mov
xor
mov
int
jge
movsb
insb
jg
and
adc
jns
mov
lcall
lret
add
aam
pop
rcrb
dec
std
push
inc
pop
jno
pop
pop
jo
xor
or
bound
cld
jo
push
mov
lods
cmpsb
imul
movsb
jecxz
push
sub
leave
mov
ret
or
in
jne
daa
ds
jecxz
enter
cmp
addr16
into
popf
subl
jb
in
adc
dec
neg
push
push
dec
dec
pop
push
mov
add
cld
jle
or
pop
std
inc
or
mov
sub
and
jle
mov
cmpsb
push
popf
sbb
mov
call
mov
lret
jns
inc
and
mov
jo
shl
xchg
add
scas
mov
xor
adc
mov
mov
leave
add
in
ja
mov
insb
mov
push
pop
xchg
cmc
mov
pop
pop
ljmp
pop
cli
mov
cld
cmpsb
subb
test
xchg
mov
mov
lea
adc
mov
pop
repz
mov
inc
outsl
adc
lahf
jne
lahf
subb
sahf
mov
adc
test
jle
and
rcl
stc
repz
daa
xor
add
xchg
jge
mov
imul
jne
dec
sar
call
mov
hlt
mov
mov
fistpl
lret
sbb
dec
mov
add
pusha
adc
jmp
in
js
out
sub
aad
int
insb
cmp
insl
cld
das
add
lcall
mov
sbb
fists
jbe
insl
cmp
sbb
adc
cmpl
add
stos
fucomip
dec
sbb
aas
call
cltd
je
incb
nop
push
add
fdivrl
cwtl
jle
xlat
sub
cmp
xchg
in
xchg
sahf
jno
add
or
cs
and
xchg
aaa
fs
loope
sub
lret
rcl
xor
add
in
dec
test
loopne
dec
subb
xor
ror
sbb
rcrl
jae
insl
out
test
mov
xchg
cs
ret
flds
cmpb
ss
jns
adc
inc
sub
ret
xchg
xchg
jae
dec
icebp
pop
or
aam
inc
mov
mov
clc
out
repz
mov
mov
push
cmp
xlat
jbe
mov
shlb
xor
dec
jae
fdivs
jmp
mov
inc
mov
push
aas
out
pop
and
outsl
sbb
iretw
add
add
enter
or
and
fdivr
sqrtps
xor
adc
stc
test
cld
sub
xchg
addr16
xlat
mov
jno
pop
popf
adc
xchg
fs
cmc
xchg
cld
std
or
adc
daa
lods
stc
xchg
rcll
jae
jno
mov
jp
push
shrb
xchg
and
push
jge
xchg
push
imul
cmp
add
insl
xor
mov
sbb
mov
xor
popa
test
outsl
adc
cs
shlb
clc
das
out
pop
inc
mov
ffree
lret
scas
movsl
leave
sub
adc
jg
lods
jne
xchg
push
xchg
outsb
cli
mov
ret
repnz
je
add
orb
xor
pushf
mov
pushf
clc
in
or
mov
das
dec
cli
sbb
add
jecxz
adc
das
sbb
inc
repz
sbb
push
in
sbb
mov
rcr
icebp
and
mov
mov
adc
xor
and
rorl
mov
int
mov
mov
mov
nop
inc
pop
insl
imul
adc
pop
pop
cmc
fisttpl
push
or
jae
ret
aas
mov
sahf
and
pop
sar
lock
xchg
sahf
jno
sub
jmp
les
mov
pop
int
movsb
scas
fidivrs
or
loopne
je
sbb
xorl
mov
insl
insb
cmp
movsl
dec
jne,pn
in
sub
call
jb
cmp
ficoms
mov
sahf
and
cltd
mov
cmp
adc
adc
notl
es
push
fucom
nop
jne
and
inc
cltd
jmp
pop
pusha
dec
push
lcall
test
leave
int3
inc
xor
pop
inc
cli
iret
inc
loopne
cltd
xchg
lods
jns
out
cmp
sti
pop
into
sbb
sarb
mov
dec
cmp
pop
bound
les
cmp
push
sbb
rcrl
lret
jecxz
jmp
push
xchg
push
mov
jmp
xor
iret
cmpsl
stos
aaa
inc
add
push
mov
mov
dec
aam
sub
pop
and
pusha
mov
add
int3
stc
adc
lea
add
pop
cs
xchg
loope
fnstcw
dec
cli
in
adc
mov
test
push
mov
pop
pop
outsl
pop
pop
add
cmp
popf
test
xchg
lret
addb
in
mov
in
aam
dec
lods
test
xchg
push
enter
xchg
sub
mov
jle
sub
or
inc
stc
lds
xchg
fwait
movl
inc
xchg
xor
xchg
subl
adc
je
push
pop
adc
dec
cwtl
xor
jmp
and
fcompl
out
shrb
ret
pushf
inc
lahf
jnp
popf
aaa
dec
xchg
xchg
or
lret
push
imul
add
cmp
mov
mov
or
mov
pop
inc
popf
jb
cmp
mov
pop
sub
iret
sub
cmp
cmpsb
loope
adc
xor
sbb
imul
add
xchg
push
push
in
rorl
call
mov
mov
xor
sub
or
push
lahf
les
dec
insb
add
mov
rcl
mov
pop
inc
stos
les
shll
seta
mov
dec
out
or
and
rcr
dec
dec
jle
test
in
in
pop
andl
pop
adc
test
aaa
popa
ret
sub
mov
cmp
add
add
sub
es
repz
inc
cmp
pop
push
insl
and
movsl
xchg
push
test
in
pop
lret
jl
sub
jp
inc
jecxz
pop
test
or
push
popf
in
hlt
inc
cmpsl
cltd
cmc
pop
fidivl
sub
xchg
popf
insl
and
sarl
lods
movsb
pop
jae
fadds
xor
xchg
mulb
daa
adc
cmp
mull
loop
inc
sbb
push
insb
push
adc
outsl
jge
mov
sbb
les
dec
xor
sbb
aas
jecxz
inc
test
sbb
cwtl
jo
outsl
jmp
clc
and
cmc
or
or
fsubrp
js
cmp
dec
das
xorl
orb
cmp
push
stos
sahf
es
xor
inc
and
cmp
fsubr
ret
stos
sub
xor
aam
in
lock
cli
mov
xchg
jp
add
aaa
and
push
aaa
xchg
int
xor
push
sub
mov
shll
and
test
gs
daa
cmpsl
sub
or
lret
sub
jns
mov
in
mov
xchg
icebp
mov
mov
add
mov
and
or
aas
jl
and
loope
lcall
aad
mov
ljmp
subl
inc
sti
shll
lret
arpl
pop
clc
outsb
ja
sub
add
mov
lret
aam
cmpsl
sbb
jge
push
movsl
sti
add
or
icebp
movsb
incb
fcompl
cmc
xor
xchg
xchg
push
xor
repz
inc
shlb
ror
jl
fstp
ds
ret
test
rcrl
leave
aaa
fistpl
pop
or
das
inc
enter
or
jb
sbb
pop
mov
mov
insl
push
out
adc
adc
test
ljmp
mov
cld
daa
sbb
cmpsl
adc
mov
je
sti
dec
fs
lods
insb
push
loop,pn
cmp
mov
in
add
add
push
xchg
mov
aas
test
add
pop
aas
xchg
cltd
xor
cli
xchg
pop
inc
xchg
pop
and
cmpsb
jo
iret
dec
rep
ss
stos
cltd
inc
jp
sbb
jo
pop
xor
ds
cmp
push
idivl
push
pop
mov
loope
repz
mov
cmp
jae
test
daa
in
or
mov
lcall
loope
int3
dec
sub
sbb
outsb
addr16
adc
dec
push
fsts
dec
ss
fst
popa
lods
call
sub
mov
push
lods
fwait
xchg
cmc
mov
cmp
jbe
jl
sub
xor
and
push
lock
popf
jno
pop
mulb
ret
lret
iret
push
lock
mov
mov
sub
fdivs
push
fnsave
push
xor
icebp
and
xor
and
popf
dec
nop
cmp
cli
mov
cwtl
mov
pop
and
or
jle
dec
and
cmp
pop
mov
lods
add
test
lds
fwait
int
test
sbb
in
push
sbb
mov
orl
in
inc
sub
xchg
push
cmpsl
dec
add
xor
xchg
pop
cs
imul
enter
push
jg
mov
scas
and
lcall
out
in
and
xchg
fidivl
idivl
mov
xchg
push
mov
add
mov
mov
fisubl
inc
mov
jecxz
outsl
mov
pop
mov
cmovle
test
mov
mov
popa
and
decb
aaa
sbb
notb
and
pop
cmp
and
loopne
jnp
cmp
cmp
ss
push
cmp
fwait
mov
jbe
ss
dec
in
adcb
xchg
adc
ljmp
lods
adc
jae
xchg
xchg
sbb
rol
sbb
mov
mov
sbb
push
pop
outsl
xchg
sub
xchg
xchg
sbb
adc
scas
jne
mov
fwait
push
mov
xor
inc
sub
pop
mov
dec
mov
and
fisubs
and
add
aaa
and
jle
aad
mov
repz
cmp
add
jg
mov
mov
or
aad
rclb
pop
cmpsl
add
repnz
cli
dec
outsb
add
ja
fidivrs
lods
fdivrs
gs
dec
xor
loopne
jne
mov
mov
or
daa
cmp
out
lcall
pop
loop
push
and
pop
cld
icebp
inc
test
shll
dec
adc
and
xchg
imul
fnop
pop
movsl
mov
orb
popf
lods
jecxz
orl
das
push
cmp
ret
lret
lcall
in
outsb
pop
sar
xor
jb
mov
mov
mov
mov
dec
sbb
fwait
add
xor
xor
movsb
fcmovne
out
dec
ret
pusha
mov
shl
mov
xor
or
mov
insl
fldt
xor
and
push
test
fdivl
mov
pop
mov
loope
sub
sbb
mov
mov
xchg
cmc
es
repz
push
dec
mov
mov
or
or
and
adc
rcll
cld
sbb
or
mov
xor
jne
pop
inc
jge
jl
inc
mov
lret
mov
mov
mov
je
rcll
push
nop
repz
fadd
call
push
nop
ljmp
sub
or
fiadds
das
mov
inc
dec
fnstenv
push
fiadds
mov
outsb
imul
in
mov
insl
jbe
sub
lea
pop
xchg
xor
cmp
das
jae
mov
stos
mov
dec
out
cmp
loope
push
mov
ret
dec
dec
jp
aam
sti
ret
je
sbb
scas
or
cmp
out
insb
push
sub
mov
mov
nop
mov
push
in
dec
mov
pop
or
push
aas
test
mov
call
cld
movsl
out
stc
imul
adc
jl
xor
pop
call
data16
cmp
push
fisttpll
es
test
andb
popw
scas
add
test
fldcw
sbb
add
push
loope
xor
ss
cmp
pop
push
xchg
repz
lods
call
testl
dec
stos
rcrl
ds
cmp
pop
lahf
iret
scas
mov
jne
xchg
cmovb
dec
mov
mov
inc
test
daa
adc
inc
repz
mov
mov
mov
icebp
loop
orl
xchg
jl
addr16
addr16
out
inc
shll
xor
insl
add
outsb
xor
push
fadd
inc
add
mov
iret
cs
lock
jg
ss
lea
xor
xchg
sub
push
push
in
not
bound
or
or
cwtl
push
lret
sub
pop
cmp
test
lret
outsb
fdivs
imul
in
xchg
dec
push
nop
cmpsb
push
insl
add
lret
push
push
rcll
arpl
dec
orl
and
mov
jg
divb
stos
rol
scas
inc
dec
mov
mov
sbb
xchg
imulb
fwait
xchg
in
je
mov
inc
or
sub
dec
lcall
mov
push
imul
xor
xchg
mov
adc
shrb
stos
mov
stos
lret
mov
sbb
test
jne
loope
jl
jne
mov
daa
je
jge
inc
dec
mov
clc
mov
imul
insl
xchg
mov
stos
sarl
sub
jp
test
jne
cmp
sub
outsb
xlat
dec
ret
mov
lret
ficoms
loopne
test
sahf
hlt
adc
cmp
test
jmp
leave
xchg
or
pop
popa
xor
dec
es
or
pop
push
cmp
mov
jb
adc
jecxz
sbbb
mov
cltd
and
dec
mov
push
rcr
outsl
push
dec
jl
cmpsl
lock
jne
shlb
stos
test
pop
in
hlt
push
pop
pop
sbb
cmp
mov
ja
dec
dec
jo
popf
inc
and
jge
lret
mov
mov
xorb
mov
push
fwait
fwait
jb
xchg
mov
sub
cs
jb
outsb
inc
insl
je
push
jo
or
adc
test
jg
mov
mov
jb
jecxz
pop
mov
push
jno
lods
or
adc
insb
call
mov
cmpsl
into
out
mov
mov
arpl
int3
add
jbe
iret
aad
in
in
fsubl
jge
sub
mov
ret
clc
xchg
fcoml
xchg
rorb
popl
fwait
sub
push
rclb
cltd
mov
fidivrl
or
inc
out
int3
aaa
dec
out
iret
inc
xorl
push
push
sti
and
mov
scas
dec
into
adc
je
pop
cmp
pusha
adcb
jge
orl
repnz
mov
add
pop
aaa
lock
and
leave
lods
jbe
push
or
out
push
mov
mov
outsb
pop
subb
rorl
mov
inc
pop
jmp
mov
cmp
test
ret
adc
scas
fbstp
inc
add
jmp
inc
xchg
inc
jge
cld
sub
scas
or
mov
and
outsb
push
add
adc
out
pop
xor
mov
test
add
sbb
ret
sbb
mov
mov
cwtl
cmp
rclb
iret
jo
ror
leave
xchg
jno
pop
in
and
lods
push
sbb
out
in
push
push
and
in
cltd
mov
xor
xor
jo
in
mov
jge
ds
hlt
mov
cmc
out
mov
jo
fsts
leave
into
sbb
mov
std
jnp
icebp
scas
jb
fcoms
cmpsl
loop
add
xchg
push
push
jg
cmp
insb
mov
pusha
stos
mov
frstor
and
adc
xor
mov
and
pop
lods
ja
or
loop
xor
mov
and
cmpsb
fs
mov
mov
xor
adc
push
pop
notl
addb
inc
xor
in
fstps
push
iret
sbb
xor
pushl
pop
cmp
cwtl
shrl
sbb
jno
test
ret
stos
jecxz
stos
cmpsl
ret
cmp
cmp
mov
movsb
rolb
adc
ljmp
aam
nop
cmp
ret
or
fwait
and
xor
fildll
ljmp
jecxz
cmp
add
hlt
mov
insl
push
call
push
fildl
xchg
fwait
dec
jne
dec
sub
dec
mov
adc
mov
sub
in
cmpsb
frstor
repnz
xchg
andb
adc
test
out
mov
inc
jne
aaa
shrb
or
jecxz
repz
out
jne
icebp
data16
je
xchg
addr16
sub
cmp
sbb
mov
jmp
pop
sub
outsb
std
loope
loope
mov
nop
mov
les
inc
push
sahf
mov
std
rcr
push
adc
das
fldt
test
lahf
mov
push
sub
repz
jge
cmp
ror
push
negb
and
lock
push
mov
cmpl
jg
xchg
sarb
inc
fmull
sbb
test
aas
fwait
jnp
jae
dec
pop
ficoms
mov
loop
mov
push
bound
cltd
sbb
in
stos
scas
add
xor
fwait
pop
scas
std
xor
addr16
jp
mov
in
and
or
scas
xchg
xchg
fcmovnbe
aam
leave
cltd
clc
mov
inc
xchg
lret
shll
mov
stos
mov
scas
jmp
mov
fidivl
fs
adc
daa
lahf
pusha
or
mov
cmp
cmp
popf
dec
daa
adc
std
dec
les
fs
cmp
cmp
jnp
inc
dec
mov
sbb
xchg
pop
sbb
es
data16
jge
dec
pop
bound
mov
popa
xchg
inc
cmpb
mov
push
xchg
outsl
bound
test
xchg
add
adc
xchg
inc
movsb
push
ljmp
imul
adc
mov
dec
sbb
mov
ret
sti
add
sbb
mov
push
xor
scas
mov
out
les
jb
iret
push
jge
stos
jno
mov
add
sub
ret
popf
xchg
outsb
movl
push
adc
lcall
sahf
lcall
inc
or
mov
stos
jnp
pop
push
ljmp
orb
ret
cmc
mov
cmp
dec
mov
sbb
out
inc
mov
dec
push
div
adc
sbb
andl
in
jp
inc
mov
pop
shlb
xor
cwtl
dec
pop
jo
sub
lret
dec
cmp
test
in
inc
iret
cmp
ljmp
mov
jecxz
mov
ret
mov
test
sti
mov
jo
es
push
cmp
in
leave
sub
insl
push
sbb
iret
outsb
bound
mov
imul
das
sbb
int3
scas
cmpsl
dec
mov
inc
mulb
push
jg,pn
sti
cmp
fwait
or
mov
pop
or
push
cmpsb
mov
cmp
push
outsl
repnz
mov
lahf
mov
ja
or
ror
sbb
ret
mov
xor
or
lret
xor
adc
cli
dec
cmp
repnz
add
addl
test
inc
sub
pusha
inc
out
aas
pop
test
fdiv
jp
pushl
leave
cmp
xchg
and
sbb
jb
stos
fcoml
int3
mov
icebp
sbbb
sbb
cwtl
cmp
pop
lods
sub
rorb
push
cmp
mov
pop
add
out
cmp
shll
cld
ret
jecxz
in
push
mov
jb
ss
dec
daa
not
inc
dec
or
xchg
push
fnstenv
push
lahf
lahf
outsl
jo
or
fbld
adc
sahf
call
jp
loopne
fdivp
mov
in
sti
jecxz
call
pop
push
call
cmp
cwtl
lret
fsub
pmuludq
inc
cld
push
and
fidivrs
iret
stos
ja
cmc
outsb
mov
fcmovnb
sub
test
sbb
xor
mov
out
lret
and
mov
inc
imul
push
inc
insb
cmp
call
cmp
xor
in
cld
mov
adc
xchg
and
push
jge
stos
mov
icebp
push
inc
int
add
cmp
mov
rcrl
data16
adc
or
loop
insb
aam
xchg
sbbl
and
dec
je
ljmp
inc
scas
sub
mov
rcrb
push
pushf
inc
pop
inc
fwait
mov
mov
test
mov
dec
mov
cmp
adc
xchg
pushf
xor
insb
pop
lods
scas
or
xchg
and
push
shlb
aas
fisttpl
in
inc
xchg
sub
inc
lea
or
sbb
or
adc
xchg
adc
xor
cvtpi2ps
fs
xor
adc
mov
cmp
cmpsl
jno
scas
insl
pop
into
rorl
ret
adc
pop
ss
inc
shl
mov
xchg
mov
imul
cmpsb
data16
popa
xchg
mov
imul
mov
bound
maskmovq
notl
test
mov
and
push
jno
std
or
aad
xor
in
out
lcall
sub
ds
ficompl
sbb
or
arpl
and
cmp
xchg
imul
sti
idivb
mov
sbb
xchg
push
stos
push
fwait
shr
jno
lods
mov
xchg
mov
pop
pop
jnp
fbld
adc
out
mov
push
sbb
jne
sbb
dec
or
fwait
xchg
addb
xchg
test
inc
mov
or
sub
adc
xchg
fwait
sbb
add
jmp
enter
je
hlt
iret
movsb
mov
sahf
sbb
mov
fidivrl
popf
xor
adc
outsl
fwait
inc
or
in
push
xor
or
pop
or
adc
and
andb
xor
xchg
lods
inc
flds
lret
daa
xchg
or
imul
mov
sbb
mov
lahf
xchg
cli
imul
pop
mov
aad
cmp
enter
fadds
xchg
mov
push
mov
jp
lods
outsl
add
cvttps2pi
mov
mov
jae
js
lret
add
dec
ja
shll
aad
cld
mov
ljmp
cmp
mov
inc
push
stos
mov
mov
pusha
sbb
mov
test
mov
je
mov
std
adc
push
ss
stos
inc
out
int3
sbb
rcrb
les
sub
ja
pop
shlb
pop
sub
mov
push
mov
inc
jl
pop
add
out
inc
std
pop
pop
pop
lock
pop
push
dec
fmuls
bound
out
lods
aas
pop
add
jle
fcom
pop
push
lods
add
adc
jmp
fs
pop
mov
xchg
outsb
iret
add
inc
or
sbb
call
js
jno
jle
popf
xchg
dec
addr16
in
cmp
insb
shll
mov
cltd
lret
cmp
out
jne
hlt
addr16
and
pushf
jge
pop
ret
mov
movsl
int3
es
fildl
addb
or
aad
push
xchg
push
cli
pop
pop
nop
dec
inc
pop
mov
mov
cmpsl
mov
enter
nop
movsb
add
push
push
cmpb
iret
je
inc
push
xor
xlat
mov
push
cld
ljmp
push
mov
cmpsl
mov
xor
imul
mov
xchg
push
push
push
push
mov
fiaddl
pop
int3
dec
jp
test
stc
stos
je
fiadds
adc
rcrb
mov
pop
popl
sbbb
repz
xor
in
inc
scas
cli
sbb
loope
xchg
pop
into
dec
je
movsl
push
insl
dec
sub
inc
int
mov
mov
repz
shr
mov
dec
push
xor
jge
push
pop
cs
outsb
in
aaa
push
add
sbb
pop
les
cmp
xor
sub
fnstcw
add
stc
fs
in
adc
sbb
shlb
mov
sub
sbb
repz
aam
sbb
out
sbb
push
std
out
aam
cmp
adc
dec
inc
gs
insl
int
mov
mov
iret
test
or
pop
adc
sbb
or
ffree
int
pop
adc
mov
lret
xchg
nop
ja
jmp
lea
lret
jae
arpl
popa
stc
xchg
rcrl
out
or
mov
ss
nop
push
popa
mov
in
insl
mov
or
orl
mov
or
xchg
jmp
gs
push
mov
adc
mov
xor
rcrb
mov
jge
inc
xlat
out
xchg
pop
outsl
cwtl
pop
inc
mov
ret
repz
xor
jg
mov
loop
add
push
cli
cmp
dec
or
mov
out
fidivl
xchg
xor
pop
int3
aas
mov
out
movsb
divb
jns
fucom
mov
ja
mov
mov
xchg
out
neg
dec
fisubl
mov
mov
or
inc
xchg
add
jge
js
vmovq
push
mov
push
inc
lahf
mov
dec
outsb
push
aaa
pop
add
jne
cmp
jg
add
stos
repz
mov
xor
outsl
divb
add
xor
hlt
rclb
dec
pop
cmpsb
fcmovbe
enter
push
cmp
daa
test
sahf
dec
out
dec
push
repnz
inc
cwtl
fiadds
sub
scas
lods
mov
inc
jmp
cli
addr16
and
mov
mov
or
fildll
iret
xchg
add
or
rcll
jmp
sbb
dec
adc
add
mov
jno
cmp
mov
xor
arpl
pop
and
gs
aaa
lcall
pop
filds
mov
cmc
mov
inc
std
cmp
jge
cmpsl
sub
jmp
inc
nop
outsl
dec
sub
sti
cld
xor
inc
push
mov
mov
repz
jno
dec
ja
frstor
movsl
jg
frstor
jne
pushf
pop
jle
or
je
lods
ror
xlat
fadds
dec
rcl
loope
hlt
cmp
js
int3
shlb
lea
outsl
or
add
push
rorb
mov
add
jae
inc
xor
mov
inc
jno
mov
xchg
add
mov
aad
sbb
aaa
mov
stos
cmp
jg
push
in
nop
push
filds
adc
popf
push
adc
aaa
mov
out
and
sbb
cmp
fwait
pop
mov
pop
test
xor
or
push
dec
mov
sub
fidivs
and
aam
push
pop
add
stos
inc
push
add
jne
stos
xchg
jge
repz
cwtl
sub
jns
ja
xor
cld
mov
ds
fwait
insb
inc
mov
fsts
mov
pop
add
push
dec
popa
xchg
or
repnz
test
insl
aad
mov
jnp
dec
or
mov
dec
mov
xor
mov
cmp
pop
cld
mov
fucomip
xchg
inc
ret
test
arpl
and
inc
insl
jns
sbb
outsb
xchg
mov
adc
add
cmpsb
cltd
mov
arpl
int3
pushf
bound
jne
mov
and
in
dec
sbb
pop
shrl
imul
mov
imulb
movsb
es
out
sbb
pop
mov
dec
jne
movsl
jmp
push
fidivrs
stc
cs
xchg
mov
add
fnstsw
mov
scas
cld
dec
ds
pop
mov
xchg
ffree
push
push
nop
cmpsl
in
cld
shrl
xchg
das
xchg
cmp
xor
sbb
scas
and
ret
cmp
cmp
scas
insb
xor
loop
jcxz
mov
cmp
int3
jecxz
xor
fisttpl
sbb
stc
lock
dec
inc
rol
rorb
mov
int3
mov
divl
jns
jp
jo
pop
dec
clc
jb
stos
psrld
adc
add
stc
xor
xchg
ljmp
adcl
xchg
cs
scas
mov
adc
push
ljmp
data16
cmp
inc
enter
loopne
stc
pushf
lds
inc
or
push
push
fdivs
in
mov
sar
in
inc
in
mov
daa
pusha
pop
or
jo
jo
aas
rorl
aaa
cmp
pop
push
and
aam
and
or
cmp
mov
dec
test
add
xchg
sbb
mov
loopne
xor
jg
cli
inc
inc
and
loop
and
bound
hlt
add
dec
sub
bound
jns
ss
test
fsubrl
movlhps
pop
stc
push
cmp
adc
and
xchg
jb
sub
xchg
inc
and
arpl
pop
mov
stos
mov
iret
sub
rolb
sahf
pop
push
in
sbb
xlat
xor
xor
mov
lret
dec
dec
js
test
pop
fstpt
iret
in
enter
nop
outsb
jbe
or
pop
sbb
shl
adc
cwtl
or
sbb
ss
jl
jno
mov
sub
or
bound
sbb
xchg
mov
pushf
add
mov
mov
adc
lea
xchg
ror
add
xchg
ja
aaa
pusha
jecxz
mov
mov
mov
andl
xchg
sbb
or
inc
shl
mov
lahf
lcall
xchg
sub
movsl
push
jns
xor
mov
mov
mov
addr16
pop
repz
inc
jno
and
add
stc
sub
mov
mov
jg
jge
nop
repnz
push
mov
outsb
imul
aad
icebp
mov
sti
mov
sbb
enter
jle
imul
add
jae
jne
push
and
clc
push
pop
fmuls
rclb
in
and
inc
add
in
mov
jge
dec
lcall
xchg
nop
mov
imul
arpl
adc
pop
lcall
lds
aaa
cmp
rorl
inc
repz
testl
das
cs
repz
add
or
add
push
das
f2xm1
jo
or
nop
xchg
mov
xor
es
sub
sbb
inc
inc
push
mov
and
sti
mov
sub
iret
lods
mov
pusha
mov
fiadds
xchg
leave
mov
pushf
roll
adc
push
xor
jb
les
outsb
mov
aam
xor
xchg
mov
cmp
es
mov
fsubrl
cmpl
filds
dec
xchg
bnd
stos
fcompl
ss
mov
sbb
sub
pop
xchg
movsb
mov
aas
jmp
hlt
xchg
or
jno
dec
in
or
into
add
add
inc
jl
call
dec
push
jnp
jbe
in
mov
int
push
push
fwait
lea
pushf
sti
ljmp
push
xor
and
inc
inc
xor
scas
cmpsl
jle
jbe
fbstp
dec
cmp
pop
jp
inc
xor
xchg
sti
testb
xchg
out
push
dec
push
sub
dec
dec
xchg
stos
mov
outsl
inc
add
pop
ss
in
mov
and
ss
ret
and
lahf
add
scas
stc
fwait
addb
cld
dec
mov
aas
sbb
out
movsb
mov
out
mov
in
xchg
ss
sub
inc
mov
aaa
xor
outsb
notl
hlt
adc
cmc
mulb
lods
movsl
lahf
push
sbb
xchg
das
pop
xchg
arpl
mov
jmp
repnz
cs
jo
fs
out
gs
jmp
cmp
in
out
jp
arpl
nop
jle
pop
cltd
pop
stos
add
xor
movsb
loope
cmp
inc
push
jle
xor
mov
jbe
or
dec
jne
xchg
inc
aam
imul
sbb
sbb
jb
dec
cwtl
cmp
dec
popf
or
call
loop
std
popa
popa
test
sub
js
ret
cmp
mov
dec
jge
fs
sahf
fwait
int
xchg
xor
mov
dec
mov
out
negl
sub
aas
aas
clc
rcrb
ret
push
push
scas
xchg
insb
sbb
jp
test
test
test
lcall
out
out
push
mov
push
xor
push
mov
daa
loop
jns
xor
lock
movsb
les
enter
addr16
add
xor
mov
push
clc
xor
dec
ret
add
popa
in
gs
adc
xor
dec
dec
jae
jb
add
aam
and
dec
add
jo
push
cmp
lcall
orl
loope
mov
and
insl
or
xor
mov
imul
jbe
aaa
mov
sbb
rol
mov
mov
mov
dec
imul
sahf
hlt
xor
xchg
jae
and
jmp
int
mov
fldcw
inc
adc
ljmp
jp
nop
rcrb
mov
xchg
pop
cmp
lds
adc
mov
test
popa
stos
pop
repnz
out
add
adc
or
sub
sbbb
int
mov
rcrl
nop
ds
shl
sbb
xchg
and
mov
fbstp
or
je
out
imul
pop
sub
rol
rclb
aam
sub
inc
cmp
mov
aaa
mov
push
ljmp
in
add
cmp
syscall
sti
ret
test
add
mov
inc
cmp
sub
pop
in
xor
push
xchg
fwait
ljmp
and
pop
pop
jl
xor
push
rcll
or
lds
jno
andl
jecxz
mov
dec
push
test
xlat
in
mov
or
orb
xchg
cld
sbb
adc
out
mov
loop
cs
cmc
scas
imul
aam
nop
mov
outsb
sbb
fldl
hlt
mov
cmp
adc
pop
adcl
mov
mov
leave
pop
mov
in
fs
sbb
add
mov
sarl
scas
pop
add
sti
fsubl
push
das
test
add
dec
decb
inc
adc
and
mov
loopne
inc
inc
movsb
sbb
or
jo
ja
lea
jp
ljmp
jae
push
mov
mov
aad
js
dec
stos
jg
xor
popa
inc
and
sbb
fdivs
andl
cmp
xor
popf
dec
sbb
or
push
rorb
mov
into
pop
push
mov
pop
daa
test
in
xchg
mov
test
xchg
mov
daa
push
imul
paddd
or
fcoms
dec
xchg
jmp
mov
push
repnz
xor
js
test
outsl
push
outsb
mov
push
xor
inc
xchg
js
jmp
jecxz
test
sbb
outsb
cltd
jge
xchg
cmp
xor
sbb
inc
ret
mov
scas
loope
inc
in
push
xchg
das
mov
sbb
mov
ss
mov
loop
xchg
mov
pop
jbe
jbe
lret
int
cmp
or
push
mov
insb
mov
inc
pop
imul
lods
jno
push
aaa
cltd
add
sbb
insb
mov
loope
inc
cli
stc
jns
or
sub
sub
sub
mov
pop
push
imul
push
enter
or
test
inc
jl
inc
inc
out
dec
lock
jl
test
testb
repnz
les
arpl
icebp
push
jne
inc
mov
sub
fldl
inc
jecxz
mov
sub
xor
xchg
mov
fs
ret
rcrb
es
mov
mov
add
jo
cmp
in
or
ljmp
in
jl
shl
jne
subb
fimuls
je
cmpl
and
xor
hlt
cmc
lods
repnz
pop
add
inc
cmpsl
push
mov
js
xor
lock
ficompl
pop
pop
sub
inc
insb
add
ss
dec
adc
inc
mov
pop
pop
adc
mov
xchg
inc
lahf
ret
imul
addl
xor
int
int
jle
xor
scas
xchg
or
xchg
dec
jns
xchg
shl
jmp
inc
push
and
and
fisubrl
mov
call
cltd
inc
ret
jmp
mov
mov
mov
js
arpl
out
dec
lcall
pop
dec
repz
or
daa
test
std
iret
pop
stc
mov
test
lcall
cmp
lret
pop
popf
imul
jnp
xlat
stos
imul
adcl
test
std
sub
sbb
out
xor
cmp
xchg
xchg
pop
add
call
mov
outsb
sub
lret
jecxz
cwtl
outsl
fmuls
sub
movsb
cld
imulb
jmp
test
pop
mov
and
cltd
sbb
lret
xchg
add
iret
sbb
lock
sub
repnz
inc
dec
aaa
mov
mul
adc
test
insl
push
push
sarb
sahf
pushf
mov
fwait
xchg
sub
inc
andb
mov
xchg
lock
pop
jns
scas
sbb
cmp
jbe
jle
xchg
sahf
xor
cltd
mov
movsb
and
je
inc
fcoms
and
dec
aad
shrl
xchg
inc
cmp
xchg
pusha
sub
adc
popa
je
pop
mov
leave
jo
add
mov
push
jmp
aaa
pop
and
mov
pop
pusha
mov
in
sub
jecxz
fcomps
jne
xchg
mov
aaa
and
jno
inc
jl
jnp
adc
loop
icebp
mov
clc
shll
pop
pop
dec
add
mov
out
mov
in
test
xchg
jo
ds
ret
inc
rol
gs
mov
push
fcoms
mov
dec
insl
add
mov
or
jp
push
pop
dec
xor
sbb
push
aaa
adc
push
xor
mov
out
jle
xchg
jo
ud1
push
fnsave
mov
mov
and
cmp
xor
sbb
adc
ret
pop
and
pop
adc
or
jae
adc
fsubl
dec
sbb
sbb
cs
cmpsl
in
inc
ret
mov
in
or
leave
jp
and
mov
fs
sub
out
repz
sbb
clc
push
mov
movb
sub
ret
jae
divl
jns
mov
pop
pop
in
mov
jg
sub
je
push
stc
fldl
test
sbb
loopne
push
jmp
and
push
rcll
ret
add
aas
pop
adc
iret
mov
ss
push
push
testl
sbb
mov
scas
xchg
and
cmpsb
hlt
rcl
mov
pop
pop
addl
inc
or
addr16
bound
push
adc
leave
sub
shlb
dec
push
mov
js
sbb
pushf
cmp
xchg
test
test
inc
sbb
push
cli
sysexit
xchg
push
xor
movsl
fs
das
lcall
jne
shrb
cmp
int
xchg
cmc
jnp
les
lret
insb
xor
cmp
enter
mov
pop
inc
movsl
add
or
fdivrs
pop
cmp
jecxz
adc
push
jg
inc
shrb
arpl
seto
mov
fldt
pop
cwtl
outsb
mov
in
jmp
lret
pop
subb
pusha
xchg
roll
add
jbe
jbe
pop
lods
fbstp
je
or
mov
jo
push
cmpsb
sub
add
ret
jne
push
fdiv
mov
fldt
nop
jp
outsb
arpl
mov
and
mov
dec
adc
ds
sbb
mov
push
dec
xor
iret
into
mov
dec
lods
popa
fidivs
push
push
jne
int3
sub
js
inc
cmp
jl
test
js
fldenv
cmp
cltd
add
mov
gs
xchg
add
pop
int3
into
push
mov
jl
push
repz
add
jo
movsb
addb
push
out
mov
pop
ja
mov
mov
pop
dec
push
jo
mov
testb
cmpb
add
in
cmc
loopne
push
movsl
stc
pop
pop
shrb
icebp
stos
inc
lret
das
pop
sub
jbe,pn
add
sbb
popf
sub
cs
dec
jns
sub
mov
adcl
xor
lahf
filds
int3
repz
lods
lds
in
aam
in
imul
jg
dec
dec
xor
rcrl
mov
stos
loopne
test
iret
in
dec
mov
js
stc
sub
scas
loop
inc
cmp
enter
ss
mov
ret
das
lret
cmp
shll
imul
jmp
inc
xchg
rcrb
dec
orl
cld
ret
mov
mov
inc
fcoms
jbe
in
sub
aam
sbb
fistpl
xchg
sbb
gs
add
pop
scas
cmp
js
cwtl
jbe
dec
lds
and
std
xor
lea
xchg
lret
fmull
and
jg
add
js
jnp
push
fwait
mov
pop
and
cmp
out
sbb
fldt
ss
jmp
hlt
jg
push
adc
aas
out
push
pop
inc
cltd
xor
xchg
stc
pushf
iret
push
and
cwtl
shr
enter
adc
loope
push
dec
pop
push
les
jns
jb
imul
insl
insl
mov
sub
adc
jnp
jl
push
pop
push
xor
ds
mov
jge
and
xchg
xor
add
sbb
mov
and
inc
clc
aad
outsb
repnz
scas
incl
add
push
popa
mov
adc
mov
xchg
mov
jmp
mov
jp
sub
and
cld
xchg
lock
xchg
flds
das
cs
push
pop
jb
xchg
sti
ret
jnp
and
mov
xchg
xchg
andb
pop
in
jbe
div
sub
repnz
jo
sub
dec
out
pop
jp
push
cmpl
test
in
in
les
mov
fnstcw
adc
fs
jecxz
sbb
jb
lods
pushf
rcrl
sbb
lcall
push
in
add
ds
sbb
adcl
add
rorb
jecxz
testb
push
push
pop
testb
xchg
sbbl
adcb
jb
inc
andps
invd
ss
jbe
pushf
popf
out
out
pop
and
sbb
mov
lds
mov
sbb
repnz
push
inc
jmp
sti
mov
jge
sub
shr
testb
push
scas
out
adc
mov
cmp
and
pop
and
sub
dec
pop
pop
jecxz
scas
lock
mov
or
lods
cld
dec
scas
xlat
ljmp
lret
cmp
push
mov
add
shrb
out
sbb
mov
push
cmp
mov
rorl
out
jae
aad
inc
jo
jns
stc
push
pop
jecxz
or
inc
or
cli
pop
test
repz
xchg
das
push
rclb
in
xchg
push
cmp
and
int
mov
push
outsl
inc
aaa
lahf
pusha
iret
int3
cmpsb
outsl
mov
in
mov
adc
xor
fisttps
fs
out
int
movsl
movsb
xorl
and
subl
mov
pop
jo
xchg
jge
push
outsl
bound
repz
mov
cmc
jns
fucomip
jg
push
pop
add
movsb
mov
das
js
iret
cmpsl
repz
jae
or
or
dec
fwait
add
test
scas
adc
pusha
jne
das
cmp
clc
cmp
lcall
lcall
push
nop
insl
sbb
iret
lds
or
dec
mov
pushf
mov
mov
loopne
mov
push
pusha
add
test
mov
sub
mov
lods
jmp
int3
inc
xchg
mov
add
lret
cmp
mov
sbbl
ret
out
aam
jo
ror
pop
in
pop
hlt
mov
js
lods
inc
aaa
xor
shlb
xor
sub
and
xlat
fmulp
mov
cmp
mov
sub
jmp
mov
push
test
inc
rcpps
xor
aam
push
inc
mov
notb
ds
lock
pop
mov
lds
ss
dec
div
stos
out
or
mov
addb
cwtl
mov
cmp
mov
pop
mov
and
cs
xor
jae
scas
dec
js
cmp
sarb
scas
add
push
bswap
rcll
pusha
filds
lret
mov
sbb
inc
pop
test
mov
test
loop
sub
add
dec
andl
fbld
cmp
inc
push
inc
int3
out
sub
lock
jo
ficompl
adc
ss
fs
cmp
pop
pop
insl
xor
es
aaa
jnp
add
jp
jecxz
push
inc
mov
add
leave
pop
cmp
jge
popf
lret
aad
aam
fisubl
scas
in
inc
jge
fcmovnbe
popa
hlt
push
rcll
in
stc
cltd
popa
stos
jno
pop
aaa
mov
lret
dec
push
insl
mov
pop
jge
add
pop
and
pop
mov
xchg
adc
nop
mov
pushf
adc
mov
jb
popa
addr16
jmp
popf
push
dec
inc
cli
inc
testl
test
add
sbb
ficoml
test
jg
ret
dec
ret
enter
push
add
lret
cmpsb
ficoms
and
mov
or
xchg
addr16
jb
test
std
lods
mov
aas
ficompl
and
push
adc
imul
adc
insb
adc
iret
call
shlb
call
add
jge
xor
sahf
mov
repz
imul
push
faddp
inc
mov
pop
fistps
sbb
sub
xor
xor
mov
pavgb
loopne
popl
jb
dec
dec
xor
es
or
sub
clc
fldenv
and
fs
jno
push
push
mov
xlat
shl
lahf
mov
jge
cld
testb
insb
pop
std
inc
mov
mov
adc
inc
aas
test
sar
sbb
mov
inc
es
stc
adc
xor
or
mov
pop
push
xchg
jp
test
pop
cltd
stos
xchg
int
mov
pop
cmpsl
movsb
inc
fsubr
insb
dec
movsl
out
movsb
cli
xchg
faddp
xchg
jecxz
jmp
ret
movsl
lea
ss
or
adc
daa
fnsave
scas
cmp
aam
popf
xchg
mov
sub
xor
lock
mov
xor
xlat
movsl
cld
jecxz
lods
and
cmpsb
lds
push
inc
push
add
sub
inc
enter
dec
xchg
notb
mov
std
pop
aaa
push
push
pushf
xchg
xchg
mov
into
enter
sbb
rcr
dec
mov
xchg
sub
outsb
inc
pop
outsl
lcall
scas
cmp
pop
test
adc
call
push
xchg
mov
cmp
dec
jp
jno
lret
fs
mov
push
aad
mov
sti
aam
movsb
push
sub
fiadds
in
xorb
jb
scas
xchg
lret
int
push
jbe
cmp
je
sahf
lret
popf
movsl
mov
iret
das
fldenv
cli
or
ss
mov
jbe
loope
sbb
mov
inc
out
hlt
push
lods
pop
sti
adc
add
cld
mov
push
ljmp
cmc
jno
repz
xor
hlt
mov
scas
or
pop
repz
dec
xor
stc
stos
push
sub
sub
scas
call
lret
inc
sbb
dec
cli
mov
inc
loopne
xchg
sbb
hlt
mov
je
jnp
stos
mov
mov
and
add
hlt
frstor
push
popa
stc
out
out
xchg
je
and
adc
out
fs
adc
js
inc
fcompl
test
mov
clc
hlt
lods
es
push
fsubs
stc
loope
jmp
iret
sarb
xor
adc
sbb
and
sub
sub
xchg
rcll
es
add
xchg
lcall
adc
int
push
loope
pop
scas
xlat
outsl
mov
or
stos
and
dec
les
lret
loope
push
loope
std
adc
inc
clc
sahf
fdivrl
jge
mov
adc
das
mov
fbstp
push
mov
aad
mov
pushf
fwait
sub
dec
ss
add
xor
popf
adc
inc
pop
arpl
jo
jge
aad
das
jp
inc
mov
int3
stos
xchg
insl
int3
cmp
mov
int3
adc
pop
cmpsb
mov
and
add
mov
sub
fs
enter
cmp
ljmp
push
jge
test
mov
bound
or
dec
es
test
mov
sti
fwait
call
les
sbb
pop
push
mov
stos
jns
cwtl
test
mov
fcompl
addl
sti
xor
cltd
cmp
loope
xchg
pop
xchg
aaa
shll
mov
mov
out
lods
mov
mov
dec
mov
mov
sbb
cmp
jp
sbb
mov
ret
sub
insl
jno
repnz
adc
jns
xchg
jecxz
clc
xor
and
xchg
adc
mov
pop
mov
insl
fcomps
dec
mov
popa
or
pop
lcall
pushf
fwait
cmp
mov
pop
or
jno
pushf
repz
hlt
jae
push
cmc
dec
sub
addr16
adc
rolb
dec
insb
jns
jnp
pop
dec
push
fcmovnb
jns
fsubs
adc
sarl
dec
xchg
inc
push
and
test
adc
aas
mov
or
xor
dec
repnz
xchg
shlb
pop
inc
repz
imul
mov
jb
dec
cmp
mov
lcall
push
es
mov
fmull
push
stos
addr16
push
pop
adc
dec
cmpsb
outsl
xchg
adc
add
lds
fsub
pop
mov
mov
and
cld
sahf
dec
push
inc
movsb
loopne
and
xchg
lret
stc
mov
jo
out
sbb
cmpsb
lock
xchg
mov
movsb
push
fcomp
add
lods
ja
out
aas
mov
xor
and
xor
add
push
enter
sbb
out
ljmp
add
cli
sbb
mov
int
dec
out
lea
pop
adc
pop
ret
sbb
sbb
lea
fsubrl
and
mov
roll
out
enter
or
aaa
sbb
sub
xlat
lods
mov
movsl
ret
add
nop
cld
les
icebp
scas
pop
imul
pop
fdivrs
lret
xchg
ficoms
xchg
add
xor
out
inc
lock
mov
mov
push
std
fldl
test
lods
outsb
xor
btr
sbbb
sbb
or
arpl
insl
push
mov
repz
lret
push
jmp
imulb
in
xchg
sbbl
sbb
or
ds
fistpl
fdivrs
cmp
jo
mov
test
mov
icebp
jmp
xchg
and
push
inc
sub
test
fnstcw
das
es
xor
in
pusha
or
cmpsb
and
or
cmp
inc
sub
mov
ds
das
mov
das
jno
add
test
cmp
out
rcrb
cmc
into
sahf
adcb
ret
sbb
sbbl
rcll
fwait
xor
imulb
movd
lods
push
push
xchg
pop
and
mov
lcall
mov
ss
movsl
insb
loopne
hlt
scas
mov
mov
movsb
add
stos
aas
loop
test
adc
sbb
fisubl
sub
sub
hlt
into
and
shlb
stc
push
ffree
mov
or
jecxz
popa
fucomi
fstpl
push
in
adc
adc
fwait
in
out
popa
pushf
inc
popa
jecxz
icebp
icebp
aas
ljmp
add
mov
mov
inc
and
fsubr
in
hlt
and
sbbb
lods
rcrb
sbb
test
insl
or
cmp
daa
sub
imul
mov
inc
and
cmp
es
pushf
push
mov
js
test
out
xchg
aad
mov
mov
inc
in
mov
jae
add
stos
dec
mov
imul
jb
adc
xlat
inc
dec
and
mov
cmpb
ja
call
insb
pop
fsubl
pop
jge
shl
loope
icebp
xor
cmpsb
pushf
or
adc
adc
fsubp
in
push
sub
mov
or
mov
fstl
pop
sti
sahf
lods
daa
cwtl
test
dec
into
in
mov
out
gs
xchg
push
jle
xor
test
add
mov
cmp
mov
pop
or
dec
dec
xchg
pop
add
data16
sbb
stos
int3
scas
out
stc
fnstsw
out
repnz
loopne
sti
out
test
lea
xchg
jo
je
fwait
test
leave
push
in
daa
inc
andb
fwait
push
add
enter
add
sbb
adc
jmp
scas
cmp
adc
xor
jge
cltd
fbstp
je
dec
jmp
and
enter
out
or
imul
sbb
jle
hlt
sub
pop
pop
mov
out
shll
incl
arpl
sarb
sub
push
xchg
ret
add
fadds
sti
loopne
inc
or
xchg
sti
pop
movsl
add
dec
pusha
in
bound
mov
cmp
outsl
fmulp
shll
in
nop
push
addr16
rorl
xchg
movsb
lock
idiv
rolb
jb
mov
sub
dec
lods
or
imul
pop
incl
xor
jge
sbbl
push
outsb
mov
fiadds
ja
mov
push
mov
aaa
js
movsb
jnp
scas
mulb
nop
xor
jp
inc
fbstp
push
lahf
std
sub
mov
cmp
inc
lret
jne
ja
enter
aaa
xchg
xor
iret
adc
call
pop
ret
mov
movsb
jne
push
idivb
cmpsb
je
xor
cmp
pop
pop
jmp
mov
and
lods
sub
rclb
or
pop
pop
movsb
jmp
cmpsl
aas
pop
sahf
adc
pop
and
loope
enter
cmpsl
xchg
std
inc
cmp
xlat
stc
push
sahf
sbb
test
out
hlt
sub
jne
sub
dec
movsb
xor
xchg
push
dec
mov
and
mov
leave
subb
jbe
test
push
jl
orb
jns
mov
dec
movl
sbb
rcrl
shlb
mov
lcall
xor
cmc
movsl
pop
enter
jns
xchg
stos
rcll
push
jns
mov
xor
fwait
test
mov
add
jne
int3
push
sti
push
hlt
ljmp
rcl
adc
leave
cmpsb
xchg
jp
sbb
xchg
mov
sub
jp
add
cs
sahf
add
leave
lods
popf
push
addl
push
int
jne
lret
jns
pop
cmc
inc
cmp
mov
sbb
dec
mov
hlt
mov
into
and
data16
test
xor
sbb
xor
inc
mov
xchg
mov
mov
sti
movsw
in
pop
mov
int
dec
jb
fcompl
adc
push
mov
mov
pusha
inc
xor
into
out
push
repnz
mov
or
dec
ficomps
inc
outsb
mov
jnp
stc
xchg
xorl
lods
adc
mov
pop
pop
js
cmp
cs
mov
pop
mov
or
in
push
mov
or
cmp
xlat
test
les
push
lret
dec
or
mov
push
xchg
add
js
aas
scas
push
push
test
mov
xor
mov
pop
mov
push
and
pop
popf
gs
fs
xchg
ss
push
das
inc
cmp
mov
xchg
adc
dec
ds
lahf
ffree
sub
pop
mov
in
sbb
cmp
in
or
cmp
push
jg
adc
jne
push
sub
mov
stos
mov
fbld
xor
and
insl
enter
call
jbe
outsb
mov
dec
xchg
push
mov
cmc
mov
jne
inc
ret
lret
jmp
mov
fcoms
daa
loope
mov
sub
jno
stos
lret
out
dec
es
jns
lods
in
daa
sbb
aam
jmp
adc
push
fisubs
push
inc
outsl
xor
inc
mov
inc
or
pop
ret
xor
idiv
mov
mov
mov
ret
addr16
push
add
stos
cli
repz
push
sti
cmp
popf
outsl
cld
jmp
xchg
push
pop
iret
push
mov
mov
dec
lods
clc
jbe
sbb
cmp
sbb
imul
and
aad
dec
pop
fisttps
push
xor
xor
call
aam
out
loope
or
and
mov
fnstcw
clc
mov
jae
das
popf
push
mov
cli
int3
inc
dec
int3
repnz
test
sbbb
icebp
popa
lret
pop
fldt
mov
aam
ficomps
push
adc
xchg
dec
adc
sub
add
ds
mov
cmpsb
repz
jo
sbb
arpl
repnz
iret
out
fcmovu
pusha
mov
das
lret
test
mov
int
je
mulb
add
sbb
mov
neg
jge
mov
push
repz
jno
xchg
in
inc
inc
push
int
testb
out
loope
mov
adc
push
xor
hlt
mov
push
xchg
jns
jns
inc
sbb
add
xor
lods
leave
sbb
xchg
lea
mov
lea
jns
lahf
sahf
pop
lea
inc
icebp
aas
push
jp
cltd
and
push
xor
insb
ljmp
cli
push
sub
inc
jmp
xchg
subl
mov
sub
clc
mov
pop
xor
ljmp
mov
mov
out
sub
jg
push
movsl
mov
dec
sahf
xor
fldenv
sbb
pop
push
inc
pop
dec
cmp
loope
pop
ss
dec
scas
in
sbb
mov
aad
std
rclb
cmp
xchg
pop
mov
nop
cli
sbb
jne
push
adc
mov
and
mov
pop
movsb
mov
inc
inc
adc
add
push
sbb
popa
mov
lods
lods
cmp
jcxz
sbb
mov
aaa
jge
test
fmuls
pop
insb
dec
mov
sub
xor
sbb
mov
inc
cmpsl
sahf
pop
or
arpl
mov
rorb
adc
jl
pop
push
adc
add
fisttpl
inc
inc
mov
lock
add
sbb
xorl
xchg
adc
rcrb
cmp
cmp
dec
pop
and
sbb
popa
jg
mov
subb
xchg
mov
mov
in
xadd
mov
test
xor
testb
inc
js
pop
jns
ret
push
jg
sbb
mov
test
test
test
mov
xchg
daa
and
cltd
pop
js
jo
adc
imul
push
nop
lods
popf
insb
data16
xor
inc
and
repnz
cwtl
pop
dec
lds
insb
and
jle
mov
sti
scas
inc
fmull
add
daa
mov
mov
das
aam
mov
adc
std
inc
jle
jne
or
mov
jg
or
jbe
or
adc
mov
call
cmpb
mov
loop
sahf
ret
ss
test
imul
movsb
repz
shlb
and
loope
fisttpll
xorl
loopne
popf
sub
dec
roll
pusha
std
cwtl
call
call
mov
xor
hlt
push
fwait
push
cld
les
push
adc
lahf
loopne
popf
outsb
in
mov
test
lock
cmp
mov
push
lea
push
roll
mov
mov
sub
xchg
orl
cmpl
pusha
jmp
xchg
in
cwtl
cmpsb
mov
sbb
rol
or
xchg
std
stc
add
std
fdivr
aaa
std
psubsb
or
lds
shll
adc
in
adc
cld
rcl
cwtl
xchg
fwait
test
xor
andl
pop
popa
push
cmp
cld
lret
cltd
movsb
call
lcall
xlat
call
into
retw
sub
xchg
xor
mov
add
loopne
cmpsl
cmpsb
jb
pop
das
enter
mov
daa
outsl
lret
pop
and
out
sbb
imul
add
out
pop
in
jle
inc
push
xchg
jecxz
dec
jno
incb
loopne
dec
jmp
and
cld
out
das
addr16
mov
ret
mov
sub
add
gs
or
push
mov
aam
jecxz
cmp
lcall
mov
add
sti
add
lahf
sub
inc
mov
xor
xorl
ror
push
jmp
and
xchg
dec
sti
mov
fisttpl
xchg
es
pop
adc
lods
pusha
enter
inc
xlat
and
pop
insl
adcb
lret
pop
xlat
sbb
in
dec
scas
adc
lds
mov
xchg
addr16
test
mov
cld
aas
push
lret
xor
movsb
push
scas
add
dec
sbb
call
push
std
sub
movsb
push
rorb
sbbl
push
mov
shr
xchg
in
xlat
das
lahf
call
fdivr
xchg
into
std
cmpsl
fldt
jmp
add
std
fs
inc
jno
mov
mov
sub
xchg
idivb
dec
or
cltd
sar
in
lcall
sub
rorl
stos
inc
pushf
or
inc
sub
imul
xchg
icebp
dec
pop
inc
sbb
in
xchg
push
movsb
xchg
mov
pop
jp
fcoml
push
fiaddl
cmpsb
fldenv
sub
lahf
jecxz
and
inc
jecxz
roll
fiadds
popa
imul
cwtl
outsb
je
mov
and
fimuls
jae
pushf
ficoml
aam
ja
mov
jae
stos
cmp
outsb
lea
into
bound
and
gs
fdivrs
lock
das
xchg
jns
push
ficompl
sub
cmpsl
aad
fstpt
pop
dec
jno
cmp
jmp
popf
or
lret
pop
cmp
fwait
mov
sarb
lock
xchg
repz
push
push
dec
das
pop
lea
inc
adc
xor
xchg
fcomps
cmpsl
push
cmpsl
jns
and
sbb
cmp
aaa
mov
adc
dec
or
sbb
sub
mov
imul
jp
clc
mov
popf
pop
aaa
mov
pop
stos
ret
push
push
sub
scas
jo
mov
cmpsb
es
mov
sarl
pop
add
jmp
and
sub
pop
mov
and
iret
jns
int
outsb
stos
jbe
dec
outsl
sub
push
int3
jle
cmc
xor
or
lea
in
mov
pop
pop
add
andl
or
idiv
mov
jge
jns
jne
fs
adc
mov
add
jmp
sbbl
rcl
and
faddp
leave
add
xchg
dec
sbb
sar
xor
dec
cltd
mov
int
test
int
jns
out
push
pop
aaa
pop
xchg
adc
les
ret
xor
mov
inc
add
sub
push
shlb
push
push
in
cld
neg
cmp
mov
stos
add
cmp
push
rol
fwait
icebp
aas
sub
and
in
sahf
cmp
xor
scas
int3
pop
movsl
sbb
test
xor
xchg
mov
in
call
cwtl
xchg
insb
movsb
loope
mov
adc
jmp
xor
sti
movsb
cltd
outsl
mov
je
jp
lea
incb
mov
cs
pop
adc
loop
mov
test
dec
jae
sarl
adc
lret
sbbb
outsl
in
xchg
shll
or
cmp
jecxz
xor
arpl
mov
or
aad
repnz
stos
dec
lcall
enter
xchg
pop
push
fdivl
iret
pop
movsb
inc
sub
in
sbb
or
sbb
xor
mov
shrb
inc
cld
lods
clc
sub
adc
loope
es
adc
cmp
bound
insl
stos
mov
xor
inc
pop
xor
cmp
sub
fcompl
scas
stos
xor
fcoms
xchg
sahf
shr
adc
pop
pop
cmc
es
adc
fsubl
sub
test
daa
daa
sahf
inc
test
fidivrs
gs
mov
push
mov
sbb
rorl
movb
test
push
lcall
notb
repz
xor
adc
jge
cmpb
jns
jg
cltd
adc
jp
sahf
jb
loop
pushf
dec
push
sbb
test
sub
xchg
aam
sub
loope
ljmp
inc
cld
jecxz
enter
mov
popf
add
push
in
cmp
or
sbb
pusha
ds
mov
scas
fistpll
fwait
jns
jl
mov
fbld
aaa
das
or
subb
adc
out
adc
outsb
add
aad
and
sbb
bound
sbb
daa
cltd
loope
push
insb
shlb
sbb
lods
sbb
push
fdivp
inc
jb
pop
lcall
jns
cmp
hlt
imul
lahf
cmp
sarl
xor
js
cmpsl
dec
push
fcompl
std
lret
js
add
or
jmp
and
test
dec
jae,pt
jae,pt
mov
xchg
xchg
hlt
pop
xor
pop
jg
mov
jmp
lret
dec
pop
jmp
push
mov
loop
xchg
jnp
daa
mov
push
push
sbb
std
adc
inc
push
imul
xchg
aam
push
pop
mulb
add
adc
jns
jmp
jg
pop
xchg
jns
outsb
outsl
das
ret
adc
int
jne
mov
cld
or
mov
push
lret
in
les
clc
lock
jge
addr16
jmp
lret
pop
roll
push
imul
bnd
jge
mov
pop
dec
cld
jmp
push
mov
test
lods
dec
mov
fisubrl
jecxz
push
int
sub
in
pop
xor
fs
sti
push
ja
xor
pop
shlb
bound
mov
int3
mov
invd
and
fs
adc
mov
ret
andl
std
mov
fsubr
xorl
push
mov
lret
lock
cmp
inc
adc
shll
ja
pop
adc
cmp
or
xor
cmpsb
mov
out
sarb
nop
and
dec
ret
test
or
jnp
andb
fldcw
cmp
int
sbb
adc
lret
inc
mov
es
sub
lds
pop
lret
hlt
in
mov
mov
jb
fistl
push
jmp
shll
jg
out
je
lret
je
cmpsl
jmp
movsl
cmp
js
jnp
cwtl
sbb
pop
insl
fmulp
cs
std
jnp
scas
or
in
jge
fbld
stc
mov
dec
jbe
mov
aas
xor
pop
cmp
and
sahf
and
stc
adcb
push
clc
into
std
jo
push
xchg
sbb
mov
mov
out
push
add
pop
sbb
xchg
lds
imul
negb
aas
scas
adc
pop
xchg
push
pop
mov
sub
bound
sub
inc
into
cmp
jne
cmp
cmp
fisttpl
and
and
mov
repz
les
jbe
test
xor
dec
movsl
arpl
jmp
lret
push
in
pop
and
shlb
xorl
in
mov
xchg
lock
fists
ret
cli
or
out
mov
and
jnp
insb
adc
dec
in
xchg
outsl
cltd
xor
lea
xchg
or
stos
fisttpl
out
jecxz
jb
adc
enter
push
or
sbb
mov
add
mov
adc
jb
cmp
es
pop
mov
clc
inc
pop
ja
push
lcall
push
add
mov
aaa
cmpsb
sub
daa
jle
movsl
ret
lds
mov
mov
pop
loope
addl
shlb
lahf
inc
es
rsqrtps
dec
jle
and
popa
mov
or
test
outsb
outsl
aam
test
or
dec
jmp
call
in
xchg
jle
cmpsb
jo
loop
aas
push
rcll
mov
or
in
mov
xor
push
nop
jb
stos
jae
mov
mov
sbbb
or
mov
add
sub
pop
pop
stc
adc
into
test
data16
enter
insb
sbb
lret
in
jg
idiv
dec
dec
adc
fistl
stos
dec
xor
dec
push
sub
or
mov
lds
shlb
leave
lds
enter
or
aaa
cmp
xor
adc
test
jae
daa
or
aam
sub
push
scas
sbb
sbb
push
addr16
pop
push
dec
dec
cwtl
cltd
add
stos
jbe
fidivs
fwait
scas
and
jecxz
outsl
ss
sub
icebp
scas
ret
adc
xor
mov
rcll
and
cltd
out
jge
xor
fldcw
nop
sbb
xor
pop
sbb
sahf
adc
mov
inc
lahf
sub
mov
movsl
mov
gs
out
mov
pop
orl
jmp
lret
jne
add
sarl
sub
je
sub
jns
lret
pop
sub
in
inc
jbe
aas
xchg
daa
pop
rclb
shlb
mov
sbb
xchg
iret
push
into
mov
rcrb
insb
mov
jp
les
cmp
add
push
out
push
and
paddb
sbb
subl
lea
pop
push
push
jmp
xchg
adc
pop
scas
aaa
test
fs
enter
inc
jmp
xchg
and
mov
and
stos
leave
jge
jp
aas
test
xchg
cmp
out
pop
and
adc
faddl
dec
movsl
hlt
or
sbb
int3
nop
cltd
xchg
ljmp
push
push
add
inc
mov
mov
xlat
cmovne
in
pop
push
jo
loope
mov
cmp
dec
into
test
sub
xchg
hlt
sub
mov
sbb
xor
inc
pop
negl
dec
das
or
sbb
fcmovne
or
sbb
and
jmp
pop
sbb
out
and
shll
push
out
inc
out
icebp
inc
movsb
pop
mov
and
sbb
in
or
bound
sbb
dec
mov
hlt
and
mov
push
xor
js
cmp
sbbl
xchg
adc
cmp
mov
ljmp
aad
mov
outsb
mov
aam
outsb
sti
test
inc
dec
add
popf
in
adc
gs
mov
sbb
in
jnp
fwait
sub
or
push
cs
rclb
and
push
pushw
cs
inc
sub
in
mov
add
ss
sbb
enter
pop
pop
test
sti
push
sub
mov
dec
enter
mov
call
repnz
mov
mov
leave
loope
lods
test
pop
push
jb
or
rcr
and
jmp
lcall
sbb
cmp
dec
sub
dec
and
insl
out
inc
add
jbe
aaa
sbb
or
cmp
fisttpl
fldcw
sbb
cltd
sub
or
in
inc
xchg
dec
test
pop
sub
int
pop
dec
xchg
cmp
mov
push
push
repz
fwait
mov
jae
mov
mov
ds
adc
cltd
sub
or
int
xchg
push
orb
sahf
sbb
jge
xchg
dec
push
icebp
pop
add
jo
or
and
or
out
in
fadd
adc
lea
dec
je
sahf
push
sbb
push
pop
lock
jg
int
push
push
pushf
test
xchg
xchg
push
popf
ss
orb
clc
repnz
sbb
push
push
gs
movsl
pop
hlt
ja
fs
call
xlat
dec
push
push
jo
fdivl
cwtl
icebp
lea
mov
dec
or
mov
repz
aaa
cli
pop
aam
mov
je
incb
inc
push
or
nop
frstor
cltd
ds
outsb
lods
ret
daa
lds
das
xchg
cmpsl
xchg
xchg
insb
roll
cwtl
push
in
movsb
add
addr16
sarw
shll
mov
xor
adc
mov
fmul
nop
pop
je
pop
or
dec
jl
dec
sti
pop
ficompl
and
fadds
dec
push
mov
test
mov
pop
cmp
jecxz
xor
add
xchg
mov
out
pop
mov
aaa
add
ds
and
iretw
mov
enter
xchg
aas
dec
les
sbb
cli
jp
ficoml
not
pop
cmp
cmc
icebp
loope
cmpsl
stc
pop
and
jae
movsl
mov
mov
lret
xlat
pslld
push
cmp
sub
mov
loop
add
jno
call
sbb
dec
jns
pop
scas
idivl
sbb
xchg
cmpsb
add
mov
dec
adc
xchg
shlb
orl
jb
aas
add
addl
bound
add
xor
jns
lock
cli
daa
fwait
or
adc
sub
in
cmp
push
mov
pop
mov
int3
loope
mov
jmp
loope
lods
cmp
pop
fbstp
je
mov
pop
dec
adc
or
jle
gs
push
imul
frndint
pop
jl
aad
es
sbb
test
pop
cmp
aaa
mull
shll
jnp
aad
cmp
inc
pop
jmp
mov
add
imul
movsl
pushf
out
mov
int
xchg
lea
lahf
mov
xchg
ss
inc
cmp
and
add
lds
fwait
jae
pushl
pop
movsb
jmp
mov
sbb
jmp
xlat
sub
and
stos
call
push
popa
push
ja
mov
adc
cmp
decl
repnz
std
lock
mov
jmp
xchg
xchg
mov
adc
xor
push
cltd
sbb
xchg
hlt
mov
lock
push
fisubrl
lea
cmp
lea
push
add
ja
pop
mov
push
mov
lods
clc
andl
inc
repz
mov
sub
mov
pop
or
mov
dec
mov
mov
into
cltd
inc
push
jbe
inc
push
icebp
xchg
sub
hlt
stos
cmp
xchg
and
adc
lods
pusha
mov
inc
es
xchg
rcl
shll
push
or
pushf
lcall
out
jbe
test
das
icebp
sti
ja
sub
pop
xchg
in
push
xchg
out
icebp
idivl
stos
push
mov
lret
cmpsb
cmp
lods
adc
inc
lret
pop
inc
imul
sub
int
mov
fstpl
pop
add
aaa
cmp
leave
into
jmp
outsb
aaa
mov
testb
mov
dec
js
xchg
ljmp
mov
or
das
sbb
pop
jb
push
xchg
fisubl
sub
repnz
fsubrp
push
int
push
dec
adc
test
lahf
bound
aam
mov
icebp
movsl
jns
pop
int
push
jns
jmp
mov
in
mov
dec
adc
arpl
call
movsl
gs
push
jmp
dec
test
cmpb
jmp
mov
xchg
push
jmp
sub
arpl
mov
dec
sub
data16
jns
sub
inc
es
ds
mov
fdivrl
lds
and
scas
pop
cmp
movsl
and
xchg
in
push
and
dec
sbb
mov
or
call
pop
and
jbe
and
js
les
adc
xchg
and
adc
mov
inc
imul
or
mov
in
repnz
mov
and
daa
add
jo
shrl
dec
data16
outsb
bound
sub
add
fimull
mov
out
adc
arpl
test
mov
push
lock
mov
xchg
test
cmp
cs
imul
and
mov
insl
in
aaa
into
fmul
adc
jno
addr16
sbb
mov
loope
cwtd
imull
inc
inc
xlat
lods
fsubp
aaa
sbb
stos
inc
popa
imul
iret
push
or
in
cmp
jl
out
sti
sarb
cmp
mov
cmp
jo
pop
inc
xchg
lods
bound
jg
jge
lret
and
push
stc
dec
sbb
jge
xor
icebp
popf
xor
rcrl
movsl
cld
rcrl
scas
inc
add
popf
sub
pop
dec
outsb
scas
xchg
push
leave
inc
xor
push
arpl
push
xchg
adcl
lds
hlt
flds
mov
or
lods
dec
mov
or
xlat
sub
lods
push
pop
mov
push
icebp
or
call
push
mov
cmpsb
mov
insb
xchg
cli
dec
and
out
lret
sbb
movsb
fisttps
leave
xchg
jo
xor
jne
xlat
mov
ret
loope
imul
jnp
fwait
shll
jge
xor
lret
mov
shll
pop
ja
insb
dec
in
mov
jne
stc
in
popf
jae
xorl
xor
add
xchg
and
inc
repz
popa
dec
mov
data16
lcall
fs
adc
pop
adc
in
sbb
fcompl
sbb
pop
mov
outsl
addr16
sbb
loop
lahf
pop
pop
dec
push
rolb
mov
dec
mov
jo
xchg
hlt
fiaddl
out
or
push
jb
mov
jno
aas
adcl
lds
jns
outsl
sbb
add
jno
mov
out
xchg
je
mov
jnp
jnp
xor
mov
movsb
pop
popf
push
jno
cmpsl
pushf
push
stc
test
xor
dec
stc
movsl
cmpsb
in
lds
add
popa
inc
sub
xor
repnz
in
xchg
daa
adc
loop
push
or
jl
insl
adcl
sarl
bound
mov
fdiv
pop
xchg
inc
sarb
dec
cwtl
jp
and
lcall
and
imul
outsl
jmp
and
mov
jmp
push
cltd
ja
xorb
test
jle
add
lods
out
loopne
loopne
movsb
mov
aas
pop
sbbl
outsb
in
dec
fwait
push
push
push
mov
rcrl
test
and
jb
dec
movsl
pop
inc
dec
add
inc
lret
pop
jle
pusha
fbstp
mov
clc
daa
fcmovbe
xchg
sub
and
mov
int3
out
leave
cld
or
movsl
lods
pushw
ror
jmp
icebp
js
jo
fmull
outsb
or
test
imul
mov
xor
xor
popf
and
adc
add
mov
ret
mov
inc
inc
int
jb
push
xchg
inc
jecxz
jb
aaa
sub
xchg
repnz
and
or
js
shll
outsl
jecxz,pt
xor
dec
xchg
fdivl
pop
in
sub
dec
stos
xchg
adc
sbb
xor
ret
mov
lret
push
mov
shrb
test
mov
xchg
jp
arpl
mov
xlat
add
adc
dec
test
pop
push
xchg
fst
xchg
daa
mov
aam
std
and
cmpl
xor
fisttps
in
call
mov
sarl
and
mov
out
test
pop
inc
aad
mov
inc
push
cli
pop
pop
push
sbb
mov
pop
cmp
pop
cli
jmp
xlat
and
jae
inc
sbb
lret
cli
insb
fs
out
roll
push
stos
dec
cli
test
movsl
and
or
adc
lods
push
fs
mov
dec
leave
sbb
xchg
xchg
pop
cld
pushw
cmp
ficoml
lods
xchg
mov
shll
cmp
pop
mov
imul
ja
inc
cmp
mov
dec
std
cmc
jle
popa
loope
aam
adc
or
push
insb
fs
jp
or
inc
clc
cmpsl
bnd
pop
cs
pop
pop
in
data16
stc
dec
loopne
xor
push
call
or
dec
shrb
dec
and
xor
adc
out
cmp
xlat
scas
aaa
pop
mov
mov
dec
insb
lret
and
and
add
shlb
movsl
fcoml
ja
dec
add
pop
je
dec
loope
or
push
aas
leave
cltd
push
shlb
ret
jnp
xchg
int
adc
push
loopne
ljmp
mov
dec
push
add
in
sbb
pusha
xor
cmp
dec
mov
mov
or
idivl
or
imul
cmpsl
call
mov
les
enter
hlt
or
fisubs
mov
xor
sbb
mov
lcall
pushf
mov
sbb
insb
mov
xor
daa
rcrl
adc
cld
ficoml
xlat
push
mov
pushl
sub
jmp
aaa
jo
push
push
jge
out
sti
mov
push
ret
scas
xor
or
inc
inc
sbb
dec
inc
jb
push
and
lret
sub
sub
push
dec
in
sbb
lods
inc
mov
cmc
cmpl
stc
jb
pusha
int3
out
jbe
das
roll
pop
sarb
dec
test
stos
pop
call
xchg
scas
xchg
shll
test
xchg
inc
mov
outsb
scas
fidivs
addr16
jmp
dec
mov
mov
mov
add
imul
add
scas
pop
inc
xor
mov
pop
out
inc
push
popf
mov
int3
adc
add
sub
pop
sub
lret
cmpsb
jne
adc
les
ja
or
and
inc
dec
or
dec
sub
mov
fistpl
ss
in
lcall
mov
movsl
jnp
push
mov
dec
popa
dec
cmpsl
int3
in
ret
insb
ja
pop
jbe
sub
leave
adc
iret
test
xor
lahf
fstpt
xchg
gs
mov
lret
push
ds
and
test
mov
adc
in
pop
mov
jp
and
subps
and
push
mov
cmpb
das
into
push
mov
push
icebp
sub
pop
ret
pop
mov
push
je
clc
adc
push
mov
push
and
les
push
inc
mov
mov
adc
cwtl
les
xchg
jns
push
inc
nop
leave
imul
lret
push
jb
pusha
xor
ss
pop
inc
leave
sub
sti
test
jp
xchg
outsb
je
lcall
add
pop
test
xlat
fstpt
movsl
jns
sub
push
ror
popf
cwtl
cld
jae
inc
andl
fs
push
jnp
xchg
out
les
dec
imul
mov
mov
xor
cmc
arpl
mov
sbb
push
inc
stos
jae
inc
cmp
sub
stc
jne
imull
outsb
inc
and
mov
push
push
orb
dec
push
pusha
xlat
test
sub
mov
in
test
adc
shlb
jg
mov
neg
mov
add
jb
cmp
wbinvd
cmp
mov
rcrb
xchg
jmp
in
popa
in
xchg
ljmp
mov
fisttps
lret
push
cwtl
jmp
cmp
setns
shll
inc
decb
cmpsl
fcmovu
push
push
add
sti
pop
mov
adc
jne
daa
push
jle
ret
es
loop
cmpl
movsl
mov
std
fisttpll
cmp
rorl
vsubpd
pop
and
shrb
sbb
lcall
ds
addb
xchg
aad
adcl
lcall
inc
add
arpl
std
jbe
popf
scas
cmpsb
add
mov
scas
test
xor
pusha
pop
dec
or
mov
outsb
scas
push
mov
sbb
jnp
mov
in
xor
mov
or
nop
fstp
fiaddl
xchg
scas
push
mov
popf
dec
aaa
xchg
mov
pop
lahf
jge
mov
ss
mull
inc
in
outsl
jns
cmp
push
cmp
push
xchg
inc
and
dec
jnp
out
fsubrs
jne
lret
jge
out
fisubl
mov
mov
adc
cmp
sub
orl
mull
jmp
jp
xlat
and
mov
jae
sbb
ret
shlb
hlt
fnstcw
cwtl
in
dec
xchg
jp
mov
mov
lahf
dec
mov
or
or
ficomps
mov
jnp
jbe
xor
xor
scas
mov
clc
pusha
pop
pop
je
insl
fwait
pop
cmpb
loop
push
jns
cli
call
xchg
andb
arpl
loope
xorb
jg
mov
ret
mov
mov
rcl
jge
rcll
push
aad
movsl
sbbl
add
jmp
rol
mov
pushf
cmpsl
outsb
out
xchg
push
xchg
jne
ljmp
push
mov
fisttpll
lods
mov
mov
incb
movsb
cmp
push
push
sub
and
call
and
cmpsl
out
pop
xor
push
xor
adc
xchg
shlb
cmp
mov
pusha
roll
mov
pop
ficoml
and
mov
push
mov
mov
mov
or
lds
leave
popa
loop
pop
xchg
aas
in
out
fsubr
pushf
mov
fdiv
pop
rolb
push
mov
push
mov
inc
sub
call
xchg
fistl
movsb
test
in
xlat
jb
adc
xor
hlt
js
xor
js
jno
jae
orb
dec
not
cmp
jnp
mov
repnz
cmp
xor
cmpsb
jle
test
loope
popa
aam
push
mov
rolb
xor
add
repnz
repnz
dec
cmc
adc
es
push
in
inc
lock
jge
jne
loop
nop
jae
test
testb
lea
jbe
insl
sub
jp
mov
lods
pop
push
and
cmpsb
outsb
rol
dec
dec
sub
sub
jmp
jp
sub
and
test
push
lret
shlb
jle
jo
jb
fs
push
pusha
sub
sbb
jnp
repz
inc
loopne
cltd
in
inc
stos
repz
push
xor
mov
imul
fstps
das
inc
int3
sub
aas
popf
and
dec
lahf
movsl
or
in
dec
xor
jecxz
and
sub
test
decl
fnstenv
mov
movsb
leave
movntps
jge
je
je
mov
push
xor
xchg
dec
sti
add
dec
add
hlt
adc
or
inc
icebp
mov
scas
inc
or
outsl
shlb
and
lds
dec
pushf
push
popf
xchg
sbb
xchg
movsb
pop
mov
sbb
push
mov
cmp
inc
lret
int3
incb
adc
pop
sub
sbb
push
cmpsb
xchg
mov
and
dec
cltd
mov
fsubrs
out
xchg
sarb
mov
mov
ja
stos
mov
pop
jle
xor
push
leave
fwait
pop
inc
xchg
int3
js
xchg
cmp
pop
or
and
out
push
fs
cs
dec
and
or
arpl
ds
jbe
adc
inc
ja
jbe
pop
pop
xchg
ficoml
pop
mov
mov
add
mov
cmp
cmpsb
scas
cs
imul
dec
orb
push
or
adc
ret
push
ja
rcll
mov
aas
add
inc
inc
sbb
aam
das
mov
xor
loopne
mov
or
jecxz
push
sub
xchg
xor
jle
jo
xchg
adc
sub
mov
jns
pop
dec
clc
push
mov
xchg
lret
fstl
inc
pop
mov
fdivl
imul
test
int3
movsb
out
aam
sbb
add
cld
inc
jns
push
notl
xchg
xor
ljmp
int
mov
push
inc
mov
in
adc
mov
cld
fst
adc
jo
dec
test
daa
push
add
or
mov
je
inc
popa
jl
neg
gs
sub
mov
out
and
test
inc
stos
movsl
lds
addr16
push
mov
idiv
ja
lock
add
add
ja
add
jnp
cmpb
inc
andl
jnp
dec
jle
xor
xchg
cmp
jle
push
cmc
shl
pop
cs
das
fbld
dec
bound
jmp
xor
cltd
mov
add
fistpl
filds
sbb
sub
mov
pop
scas
push
fnstcw
xor
jl
mov
adc
gs
adc
dec
or
mov
insl
push
jb
pusha
add
call
rorb
fsts
sbb
add
push
test
insl
mov
and
cmp
xchg
scas
sarl
idivl
movb
insl
push
aam
dec
xor
dec
push
sub
pushf
xchg
les
push
mov
dec
sbb
mov
fidivrl
add
in
movaps
pop
fstpl
repnz
das
push
pop
xchg
movsl
jbe
add
push
imul
loopne
movsb
or
sub
repnz
or
mov
dec
clc
sub
sub
sub
adc
pop
repz
and
ror
pop
pop
inc
aad
adc
xor
sbb
retw
sbb
mov
xchg
aas
pop
dec
scas
jns
adc
fnstenv
mov
sti
nop
mov
shl
cld
cli
mov
pop
rcll
or
add
pop
jmp
xchg
sub
fmuls
cmpsb
cmp
add
or
repnz
jne
jbe
hlt
cwtl
loop
mov
adc
out
adc
push
ja
cmc
imul
sbb
test
sbb
jp
xchg
xor
je
js
xchg
loop
xor
add
jmp
mov
lock
fs
arpl
daa
es
dec
inc
adc
adc
push
mov
pop
sub
cs
pop
add
shlb
nop
out
nop
xor
mov
outsw
outsb
aad
xor
cmp
or
jo
cmp
mov
jp
cmp
jmp
into
pop
jecxz
and
or
jne
addr16
xorb
xchg
push
andl
mov
mov
enter
adc
cld
inc
cli
in
mov
pop
aam
jns
dec
scas
cmp
mov
call
push
inc
or
fstl
mov
lock
jbe
imul
pushf
jp
push
insl
movsl
lret
inc
scas
lret
push
loop
cmpsl
dec
jle
pop
test
scas
fidivrs
iret
xchg
fdivr
daa
testb
lods
rcrb
dec
inc
inc
ss
xchg
cs
or
rorb
inc
out
pop
rclb
les
pop
add
adc
dec
pop
ret
push
loop
pop
ret
ror
outsb
mov
out
adc
rorb
data16
jbe
std
jnp
mov
jecxz
rolb
dec
add
jne
sub
push
jl
cmp
sti
ror
jns
xor
rcrb
cmp
insl
fmul
pop
pop
dec
cmp
sub
push
lret
in
or
jl
xchg
jp
jnp
fisubrl
rclb
pushf
std
sub
into
cmp
stc
rol
out
mov
jl
mov
imul
adc
sbb
push
sub
jecxz
push
dec
addr16
out
fwait
lret
mov
ret
or
mov
inc
jae
mov
clc
add
mov
bound
test
add
jmp
push
out
push
hlt
xchg
int
pop
add
mov
aam
dec
insb
jns
push
stc
mov
xor
jo
jmp
fsubrs
jbe
fcomps
or
xor
xor
and
push
sub
sar
fisttpl
mov
stc
cmp
pushf
test
ja
pop
dec
add
dec
ja
pop
int
add
outsb
addl
enter
popa
int
adc
clc
mov
fs
sbb
jae
dec
jno
jmp
pop
push
dec
scas
lods
movsl
mov
add
cmp
repnz
xor
pop
xor
cmp
lea
push
movsb
ja
push
xchg
daa
lret
sbb
xchg
and
out
inc
add
mov
xchg
add
xchg
add
mov
xor
mov
scas
cmp
cwtl
xor
bound
repnz
pusha
sbbb
jnp
aam
dec
mov
mov
sbb
xchg
xlat
jns
xchg
stc
or
adc
jnp
and
aas
mov
sbb
cmp
imul
idivb
inc
popa
inc
fmul
pop
mov
cwtl
subl
iret
add
stos
jg
push
int
shrb
jle
out
aas
add
push
adc
mov
pop
iret
jnp
daa
test
loop
inc
sub
pop
nop
mov
out
icebp
cmpsb
je
cmp
cmpsb
jb
inc
test
adc
pop
sbb
jnp
addr16
rorb
rcll
sbb
mov
not
jbe
sub
mov
push
ljmp
xchg
ret
and
and
lret
cmp
mov
scas
dec
adc
mov
out
pop
int
stos
negb
sahf
sub
pushf
xchg
and
subl
adc
adc
push
mov
imull
in
pusha
shld
ljmp
cltd
mov
add
cld
test
fimuls
call
rorl
sti
or
push
mov
shll
push
xor
pop
ljmp
dec
leave
xor
std
and
arpl
sub
mov
adc
cmp
pop
pop
in
insb
enter
pop
cld
mov
loopne
mov
loop
or
cmpsl
js
stos
cmp
in
push
pop
mov
aam
ret
mov
jmp
fmull
sub
jno
add
bound
jbe
sbb
and
or
mov
cmp
adc
aaa
jge
mov
push
clc
sti
jle
jmp
adc
data16
cwtl
das
adc
inc
fcompl
stos
and
push
nop
pop
mov
aaa
adc
in
testl
movsl
cli
xlat
movsl
xor
dec
mov
mov
mov
mov
mov
and
das
scas
imul
add
aaa
imul
out
sbb
sub
mov
out
int3
push
iret
addr16
ljmp
mov
pop
adc
pop
xchg
and
cld
enter
sbb
cmpsb
insl
and
sbb
dec
xor
cmp
test
sbb
aam
push
mov
jb
loop
xchg
loop
icebp
mov
lret
nop
dec
aas
or
inc
fisubs
add
in
pop
dec
push
in
stos
xlat
jg
js
push
jmp
mov
add
enter
andl
pop
mov
inc
fiadds
pop
push
add
jne
loop
lock
push
sub
dec
pop
insl
clc
loope
fdivl
push
ja
adc
mov
or
sbb
cmp
add
jl
mov
or
test
lods
push
popf
cmpsl
out
stc
in
aaa
pushf
stc
cmp
imul
sub
cld
mov
fnstsw
xchg
sahf
int3
cs
dec
jmp
aaa
mov
dec
add
xchg
sub
push
mov
fadd
jmp
xchg
out
cli
mov
nop
insl
fisttpll
push
lock
call
mov
in
sahf
push
mov
insb
dec
lret
mov
xor
popf
mov
ficompl
jo
mov
fsubrl
mov
addr16
jmp
pop
ja
or
outsl
pushf
dec
mov
cmpsb
out
xchg
nop
xor
adc
ss
dec
aaa
or
das
ja
mov
adc
inc
ja
gs
out
sbb
imul
cmpsb
orl
fcomi
jge
out
stos
jp
movsb
stos
lea
push
lret
aas
jnp
push
pusha
bound
xchg
sbb
lds
inc
xchg
test
jp
dec
stos
outsb
enter
aam
sarb
nop
jno
xlat
mov
iret
mov
jl
movsl
push
test
add
and
push
or
mov
xchg
sub
outsb
mov
mov
out
in
call
adc
lret
in
movsl
push
xor
nop
subb
subb
cmp
push
xlat
and
faddl
jmp
sub
icebp
jo
mov
adc
pop
fcomps
or
loope
inc
scas
mov
loop
dec
mov
inc
fistl
je
xchg
pop
insl
inc
xchg
lock
or
cmp
aas
sbb
cmp
mov
lock
fsubrs
fdivrs
and
je
js
mov
test
mov
mov
pop
mov
insl
icebp
mov
je
insb
repnz
sub
loopne
fimull
hlt
inc
cmp
adc
clc
mov
fnsetpm(287
rorl
pop
iret
or
jl
dec
scas
cmpsl
mov
jnp
clc
in
inc
test
arpl
repnz
flds
stos
out
adc
mov
int
ret
pop
out
dec
outsl
xor
jle
adcb
jbe
add
dec
xor
push
loope
in
popf
ret
xor
mov
mov
push
adc
xchg
mov
mov
cli
pop
cmp
jne
adc
das
xlat
mov
pop
xor
addr16
popa
aam
jmp
int3
and
addl
cmp
adcb
cmpsl
sub
mov
pop
jp
pop
pop
jb
mov
je
notl
xor
xor
andl
mov
xchg
arpl
out
pushf
push
aam
bound
push
lods
repz
sub
and
fldcw
mov
jbe
into
in
mov
lret
cmpb
push
in
nop
fisttpll
nop
stos
movsl
adc
repz
sub
pop
add
inc
inc
mov
fcoms
fisttpl
mov
inc
lds
cmp
and
bound
mov
inc
adc
jne
sbb
pop
pop
lret
inc
in
xor
fcoms
jnp
addr16
adc
repnz
mov
jbe
adc
cmp
test
and
or
cmpsb
sbb
arpl
and
xchg
imul
int
inc
inc
sub
mov
jmp
xor
mov
lods
cmpsl
arpl
mov
sub
adcl
je
movsl
roll
addl
out
out
addr16
lock
or
test
clc
adc
inc
sbb
rcrl
or
sbb
test
pushf
in
stc
or
ja
push
cmpsl
nop
adc
jmp
xor
mov
pop
jecxz
jp
or
adc
aad
stc
xorl
jg
push
cli
lea
dec
push
je
pop
jg
and
movb
inc
push
loope
mov
negl
inc
faddl
pop
cli
punpckhwd
popf
add
xchg
add
push
pop
mov
adc
arpl
loop
inc
adc
add
pushf
lea
adc
cmpb
ja
xor
repnz
xchg
xchg
and
add
dec
xchg
jbe
test
adc
cmp
add
xor
xor
mov
xor
fnstsw
adc
bound
pusha
sbbl
sbb
push
icebp
and
sub
and
adc
mov
scas
dec
out
push
add
jb
test
and
inc
sub
push
xchg
pop
cmc
cmp
push
imulb
pop
cmpsl
mov
push
pop
sbb
repnz
out
push
clc
cmpl
xor
jecxz
jno
outsb
divl
mov
adc
xchg
out
cld
cmpsb
movb
cwtl
in
scas
es
cmp
sbb
stos
fmuls
jle
jmp
adc
xor
sub
xor
mov
xchg
mov
sub
mov
imul
dec
divl
xor
or
push
xchg
fisttpl
popf
cmpsl
push
mov
add
xor
jbe
push
push
rcr
out
loope
push
out
fidivl
popf
mov
inc
aad
sbb
mov
nop
add
sarb
in
pushf
call
sti
sbb
sbb
lahf
mov
fisttpl
std
cmp
mov
push
daa
int3
loopne
lods
or
jle
push
aaa
dec
icebp
adc
fstpl
sub
jecxz
push
bnd
pop
out
dec
mov
cwtl
cli
ror
aas
mov
cs
cld
sbb
cmp
movl
push
pop
in
dec
addb
nop
xchg
mov
ror
xlat
adc
pop
xchg
icebp
dec
push
pop
dec
fsubrp
fldl
adc
test
mov
and
xor
jge
dec
push
push
repnz
fcoms
jg
sub
insb
aaa
mov
icebp
jl
xchg
dec
gs
test
in
and
mov
fadds
add
push
adc
aas
aam
loope
and
mov
fwait
jb
and
jns
or
push
adc
fdivr
aaa
iret
or
and
out
mov
jns
adc
fwait
clc
pop
imul
rclb
jno
add
and
mov
adc
jno
ret
clc
test
iret
jns
cmpsb
out
int
inc
call
pop
sbb
stos
xor
inc
sub
dec
or
dec
daa
test
fsub
in
dec
xor
or
push
outsb
fucomi
dec
adc
loope
cmp
popf
cld
or
out
dec
psllq
fwait
inc
push
mov
rcll
push
rolb
es
dec
xchg
push
es
pop
xchg
leave
or
jle
test
pop
xchg
test
jno
rcll
paddd
pop
popf
xor
outsl
inc
sbb
pop
lcall
in
mov
data16
inc
icebp
scas
cmp
adc
hlt
pop
jo
push
and
fs
add
mov
push
mov
and
lods
push
cmp
adc
scas
mov
jne
push
xchg
repnz
jae
orb
add
xor
xchg
inc
xor
adc
adc
mov
adcb
jns
dec
xchg
cmp
adc
arpl
movsl
mov
push
mov
push
push
cmp
in
popf
mov
mov
sub
or
stc
lcall
in
aaa
mov
dec
arpl
in
in
pop
xchg
xor
add
cli
int3
fs
fsubp
mov
stos
movsb
pop
test
mov
ds
push
inc
aas
or
adc
jnp
test
loop
sub
mov
insl
xchg
xor
and
lock
xchg
in
insl
jp
fsub
cmpsl
xor
cmpsl
rep
shll
xchg
pop
in
nop
lods
arpl
dec
pop
insb
ror
icebp
adc
iret
movsb
nop
xor
or
imul
stc
les
sbb
jmp
and
push
or
rorl
cmp
and
sti
sub
push
cmc
push
aaa
cli
fdivrs
stos
add
dec
or
test
adc
pop
mov
inc
dec
dec
mov
inc
xor
stos
cli
or
inc
jmp
cmc
sahf
sbb
fs
movsb
jb
lret
xchg
and
mov
push
sub
punpckldq
mov
sbb
pop
fwait
jno
cli
xchg
inc
das
jle
es
inc
out
xor
mov
imul
add
push
iret
mov
int3
xchg
xchg
pop
stos
leave
and
push
rcll
cmc
lcall
adc
jae
xchg
cmpsl
jge
lock
mov
xor
cld
repz
mov
enter
sbb
jns
std
jecxz
push
mov
sub
push
sbb
inc
clc
pop
iret
pop
inc
push
popf
ret
xchg
sti
lods
mov
adc
xlat
mov
push
jl
fidivrl
fdivl
jo
rorb
push
jmp
dec
sub
mov
mov
jg
cmp
iret
mov
jns
lret
fwait
ss
lock
sbb
cmpsb
pop
push
loop
insl
daa
jno
inc
xchg
loop
mov
rorl
mov
mov
push
and
mov
call
dec
lods
repz
mov
aam
mov
xor
dec
xor
stos
adc
les
xlat
jnp
aas
leave
xor
or
pop
mov
pusha
jns
movsb
fdivp
sub
into
repnz
push
xorb
ret
dec
lods
cmp
push
push
cmpb
lret
stc
imul
loop
and
je
sub
loopne
nop
es
mov
js
dec
sbb
imul
cmpsb
or
jmp
lods
enter
push
add
xchg
test
stc
inc
pop
addr16
push
mov
dec
push
jecxz
inc
pop
into
adc
pop
ss
cmp
mov
outsb
in
enter
inc
and
or
jecxz
xchg
sbbb
sbb
pop
jle
clc
scas
addl
lods
mov
out
ret
mov
dec
mov
shl
sub
and
xlat
inc
jns
jge
adc
call
mov
daa
xchg
push
or
inc
cs
mov
lret
ljmp
adcl
es
out
lods
adc
adc
jb
push
mov
test
jecxz
icebp
or
es
and
iret
adc
stos
push
dec
mov
or
cmp
fld
out
jge
movsb
shrb
fmul
es
gs
xor
sub
xchg
das
or
popa
or
aad
mov
scas
into
push
outsl
ljmp
lahf
std
bnd
or
inc
push
or
adc
dec
test
mov
popf
test
mov
mov
icebp
xchg
pop
sub
gs
dec
dec
pop
sub
xchg
jg
mov
jg
nop
cld
jg
pop
pop
xchg
adc
roll
pop
push
loope
roll
js
sub
pop
andl
rcl
push
and
sahf
mov
jbe
or
dec
ss
xchg
jge
jle
sub
cs
mov
test
test
sahf
sub
add
xchg
int3
les
test
cld
mov
xchg
pop
sub
loopne
inc
pop
sbb
inc
cmp
ret
popf
imul
mov
sub
push
dec
nopl
es
adc
mov
jmp
adc
iret
ja
xchg
sbb
in
enter
pushf
fisubs
push
mov
test
jne
loopne
lret
xchg
cwtl
popa
aam
inc
ja
mov
pushf
fmul
jecxz
jl
adc
outsb
add
or
xor
mov
out
fwait
sahf
rorl
sbb
and
or
xor
ss
cmc
ja
push
adc
subb
ja
leave
mov
aad
and
test
rcrb
lods
jmp
add
mov
cmpsb
les
pop
rorb
fs
adc
data16
jg
cmp
ret
pusha
mov
jb
and
fbld
cs
cs
das
movsb
mov
dec
mov
or
mov
push
xchg
dec
push
mov
dec
cmp
sarb
rorb
cs
ss
pop
lock
pusha
and
shll
mov
mov
cmc
sbb
mov
fcomp
push
push
pushf
cwtl
outsb
dec
dec
fiadds
fistpl
and
fistps
adc
into
push
daa
hlt
in
lret
jp
xchg
in
mov
shlb
fstl
sub
mov
add
xor
pop
pop
jns
inc
sub
clc
fcmovne
xchg
imul
ret
rcrl
pop
out
dec
cmp
and
inc
andl
and
lods
gs
sahf
mov
push
sub
xchg
and
push
cmc
sub
xchg
sar
push
sub
les
aaa
xchg
insb
sbbb
jno
lods
push
xchg
imul
xchg
orl
xor
mov
int3
mov
add
xchg
push
mov
xor
jnp
mov
jmp
pop
int
jp
ret
loope
repnz
mov
xchg
xchg
sub
sbb
orl
bound
in
imul
loope
incl
mov
iret
mov
mov
and
stos
scas
jo
int
push
cmpsl
cmpl
xchg
jl
pop
ss
scas
and
in
mov
rorb
jne
mov
inc
pusha
es
add
xchg
jecxz
jmp
call
xchg
divb
xchg
push
stc
hlt
lods
mov
test
xchg
jg
dec
icebp
out
insb
mov
in
lret
or
scas
cs
and
push
in
sbb
push
mov
ficompl
lea
insb
dec
pop
sbb
hlt
cmpsl
cld
pop
icebp
cld
pop
adc
adc
dec
dec
cwtl
mov
in
lods
stos
lds
sbbb
jno
aaa
enter
pop
pop
adc
sbb
imul
pop
cmp
pusha
in
andb
aam
in
push
movsl
ficoms
xchg
outsb
fwait
pop
xor
push
and
loop
jmp
rcr
clc
arpl
cmp
adc
in
mov
push
fdivs
dec
xor
inc
ds
data16
or
stos
xchg
sbb
lea
adc
mov
or
push
fisubl
fidivs
mov
in
and
and
out
fcomp
cmp
add
xchg
das
xlat
push
or
or
ss
lret
pop
mov
push
jne
hlt
lret
cmpsl
pop
or
fwait
je
imul
lret
stc
lret
push
mov
stos
jl
push
nop
jmp
movsb
cltd
jle
inc
mov
xlat
ss
cld
lret
jo
inc
adc
adc
sbb
loopne
push
cmp
data16
add
sbb
test
dec
add
add
bound
push
xchg
out
lret
or
ret
jbe
jge
test
in
inc
mov
push
jnp
cmp
les
stos
incb
in
rolb
xor
mov
arpl
icebp
cmpsb
or
cmp
js
cltd
hlt
jns
enter
xor
shll
xchg
mov
lcall
jo
cwtl
ret
and
sbb
jge
pushf
push
add
dec
in
ss
jecxz
movsl
int3
movl
aas
sbbb
mov
xor
pop
mov
push
adcl
dec
pop
mov
xor
add
mov
xchg
loopne
andb
out
aad
movsl
cmp
aaa
xlat
rorb
cmc
xlat
loopne
cmp
cld
ret
js
stc
jbe
imul
fdivrs
lds
cli
insl
xor
pop
and
mov
std
ljmp
adc
daa
ljmp
arpl
inc
jp
movsb
cmp
jnp
rolb
mov
adc
iret
pop
adc
shrb
in
inc
inc
stos
push
es
push
cmpsl
cmp
add
js
stc
push
push
nop
fcomi
push
or
fxch
test
stos
pusha
cld
aaa
inc
jne
jp
sbb
mov
push
sbb
cld
mov
mov
gs
push
mov
mull
out
adc
incl
add
and
rcrl
neg
adc
pop
adc
imul
pop
or
mov
pop
lcall
xchg
sti
rcrb
dec
mov
gs
lock
cmpsb
test
daa
std
add
fcoml
cltd
pop
xchg
fnsave
dec
jae
cmp
and
mov
sbb
jmp
fists
mov
movl
or
int3
or
mov
mov
fnstenv
fisttps
cmp
dec
jmp
jge
pop
les
fcmove
inc
iret
lahf
fildl
into
xchg
repnz
lds
or
xchg
xchg
jnp,pt
pop
sub
lock
jne
rcrl
push
jnp
les
arpl
xor
daa
bound
push
les
add
in
loope
adc
mov
lahf
xchg
and
cli
add
lds
sbb
mov
rolb
add
outsb
pop
sbb
in
fbld
aaa
pop
mov
shr
mov
sub
out
sarb
mov
push
in
imul
push
jg
or
jl
sbb
add
cli
fisubrs
adc
mov
fimull
pop
hlt
mov
ss
out
sbb
jl
dec
subl
inc
fmull
mov
sahf
fucomp
xchg
bound
xchg
mov
inc
xchg
xchg
pop
loopne
mov
and
iret
idivl
aam
xor
loope
jo
fwait
sub
add
xlat
push
inc
dec
xchg
push
sbb
fwait
rcl
mul
fstl
loopne
enter
jo
repnz
std
lods
or
jbe
rcrb
dec
fsubp
pop
lret
jg
sub
lcall
sub
jp
sub
loope
adc
call
mov
mov
dec
adc
pop
cmpsb
mov
and
sbb
loopne
cmp
out
rcr
add
mov
or
loop
jae
frstor
insb
sbb
iret
leave
jbe
sub
mov
push
jne
adc
cmpsl
fwait
call
pushl
insb
jp
fildll
xor
addr16
shrb
in
xor
call
gs
push
in
call
dec
pop
in
sub
push
outsl
lds
hlt
pop
ljmp
movsl
in
pop
and
sub
aaa
stos
js
leave
out
mov
sahf
lret
popl
add
mov
adc
cltd
sub
fcmovnb
int
push
jp
xor
adc
js
repnz
inc
xchg
adc
jecxz
push
cmp
dec
fcomip
jle
lret
sbb
cld
out
jo
out
loope
inc
jmp
hlt
cwtl
das
lea
ret
fstps
outsb
mov
and
int
push
int3
push
push
pushf
loop
aas
lock
xor
hlt
shr
jmp
sbb
inc
or
std
push
data16
lret
mov
jne
pop
pop
inc
sbb
fcoms
ret
out
test
popf
cwtl
jp
push
mov
rcll
xchg
push
adc
test
repz
loop
sbb
fcoms
dec
xor
jb
push
mov
bound
xlat
es
out
inc
dec
movsb
movsl
pop
jnp
mov
dec
das
jns
xchg
cmp
fcoms
popa
dec
cmp
out
mov
xorl
fs
popa
dec
jnp
sarb
loop
pop
mov
sbb
lahf
nop
mov
scas
jnp
fsubrs
ret
cmpsl
fcomp
sahf
mov
and
jbe
bound
dec
loopne
adc
cmp
lret
cmpl
mov
dec
sbb
in
adc
jnp
inc
int
out
sub
fisubs
int3
aaa
mov
push
or
iret
in
insb
and
push
out
pop
ss
xchg
push
insb
int3
sahf
mov
ja
aas
sub
loop
lock
test
dec
mov
sub
mov
fsubl
jl
or
nop
fdecstp
aas
lahf
loopne
xchg
mov
xchg
lods
es
data16
popf
cmp
mov
jmp
pop
pop
mov
jo
iret
mov
out
xchg
pop
dec
pop
add
lock
in
add
adc
sti
push
and
popl
cmp
insb
xor
call
icebp
les
jo
sub
mov
or
ret
sbb
out
mov
inc
ud1
lods
int3
push
or
sub
sbbl
or
xor
push
xchg
loope
cmpsl
xor
xchg
in
mov
pop
inc
sbb
xorl
lahf
aad
nop
shl
stos
insl
xchg
stos
and
adc
jp
popf
xor
insl
movsl
icebp
ds
jb
test
int
or
aas
stos
pop
or
mov
fildl
ss
addl
jns
inc
xchg
imul
mov
inc
jmp
inc
jle
pop
dec
int
cli
or
cmp
mov
and
xor
jns
inc
out
out
and
out
mov
ficomps
dec
cmc
jne
es
sbb
cmpsl
in
ret
cmp
es
addr16
sbb
and
call
dec
pop
decb
clc
mov
xchg
pop
pcmpgtb
mov
sbb
lret
adcb
ss
jge
lock
aaa
je
xor
jno
sbb
push
dec
adc
js
push
inc
push
pop
push
xor
outsb
fsubl
adc
shll
xchg
nop
push
ret
adc
xchg
pushf
fdivl
call
push
iret
dec
movsb
pop
mov
nop
sbb
cmp
ret
stos
sbb
mov
movsl
fstpt
in
lea
popa
add
sbb
gs
hlt
dec
mov
or
jne
pop
xchg
pushf
mov
push
sbb
adc
sub
push
iret
inc
cmp
jnp
fwait
mov
adc
lds
pop
dec
std
aam
into
push
cmc
mov
pusha
call
cwtl
xchg
aas
enter
sbb
ljmp
mov
inc
test
cmp
js
pop
fisubrl
xchg
jb
xchg
gs
jnp
xchg
and
xchg
cmp
cmp
add
outsl
das
and
pusha
push
cwtl
loope
out
shl
pop
inc
and
mov
or
bound
and
mov
push
fcomps
test
sub
push
inc
or
sti
test
pop
fmull
adc
lcall
lret
sti
mov
sbb
pusha
dec
adc
jns
add
lock
cmpsb
arpl
es
inc
fstpt
outsb
push
mov
movb
dec
push
hlt
adc
insl
in
push
sub
shlb
loope
xchg
mov
pop
in
jle
push
into
repz
push
pop
addr16
xor
push
rcr
add
sahf
or
cmc
rolb
mov
adc
out
insb
aas
cmp
jg
test
pop
fidivrs
fstl
jl
cmp
adc
mov
jle
out
ljmp
int3
xor
sub
imul
rcrl
icebp
mov
pop
adc
inc
adc
divb
roll
mov
test
sbbl
fcomps
cmp
or
into
pop
add
sbb
pushf
push
negl
out
adc
pop
jae
in
mov
and
sub
mov
xor
mov
test
pop
sbb
gs
and
mov
mov
test
insb
gs
arpl
adc
test
lock
dec
lret
notb
inc
je
insl
fnsave
imul
rorb
sbb
cmpb
pop
jge
jnp
add
pop
mov
jmp
add
mov
adc
in
xchg
fistps
mov
push
xchg
popa
xchg
loopne
add
push
std
ja
cltd
push
fiaddl
arpl
data16
jge
pop
mov
loop
fidivl
lahf
fwait
out
out
aam
cmp
sbb
imul
jmp
icebp
mov
bound
cli
pop
adc
jmp
adc
shlb
or
sbb
sti
sub
push
das
pop
adc
sub
and
mov
xor
mov
xchg
inc
movsb
mov
or
dec
sub
adc
jg
ret
adcb
push
cltd
stc
lea
sarb
pushf
ljmp
jb
xchg
and
mov
call
enter
fmul
outsb
daa
inc
inc
sbb
pop
push
or
lret
dec
jo
mov
aad
and
or
leave
pop
mov
push
hlt
xchg
add
sub
lock
adc
loopne
psubq
pop
jge
xchg
cmpsl
lret
out
les
seto
push
lock
sbbl
xor
pop
dec
push
lods
sbb
loopne
in
pop
jge
scas
lods
sub
jbe
repz
jns
rolb
cwtl
aam
int
pop
sbb
inc
mov
xchg
jecxz
aad
dec
jp
inc
divl
and
loope
out
ja
dec
lret
lods
out
pop
and
shlb
ds
push
es
sahf
mov
pop
pop
int3
mov
cmovbe
ret
cmc
lds
std
in
cmp
cmc
loopne
negl
inc
in
das
stos
jp
xchg
jmp
ss
xchg
cmpsb
mov
outsl
and
sbb
push
push
or
jge
leave
inc
jns
test
xchg
and
push
in
insl
in
mov
dec
sahf
mov
xchg
hlt
adc
push
aam
std
insl
leave
mov
imull
pop
cmpsl
das
and
xchg
push
xchg
in
jno
ret
dec
das
and
push
mov
cmp
dec
push
test
dec
xor
jle
andl
xor
pop
mov
pop
dec
movsl
adc
inc
cld
sbb
sbb
incb
jae
enter
sti
test
push
jmp
sti
push
mov
cmp
jl
mov
cmc
sub
fiadds
sbb
mov
insl
mov
push
xlat
ret
fiadds
cs
add
cld
test
mov
repnz
mov
push
lods
repnz
xchg
push
pop
ret
add
shll
out
xor
cmp
jg
and
sub
negb
mov
out
mov
jecxz
stos
add
pop
loopne
inc
ret
push
push
fcmove
shrb
shrb
int
inc
lea
arpl
cs
js
mov
mov
outsb
lods
push
sub
sub
pop
repnz
test
sbb
mov
cmpsb
xchg
xchg
push
inc
jae
jae
adc
fwait
lret
rcr
cmp
xorb
mov
or
cmp
sbb
shrl
stos
shlb
icebp
lcall
call
cs
pop
push
jnp
mov
movsb
sub
aam
push
push
in
or
test
lcall
pop
sar
sub
xchg
fs
mov
cld
out
xchg
fstpl
cmp
push
fcmovu
test
inc
push
loop
lods
mov
pop
or
jo
push
xor
pop
icebp
sbb
push
and
xor
adc
add
pusha
outsl
test
dec
cmp
mov
adc
leave
mov
in
sub
xchg
icebp
push
lret
mov
sarb
movsl
mov
sbb
dec
cmp
xchg
cmc
mov
pushf
scas
adc
fnstsw
xor
sub
inc
sahf
insb
push
outsl
daa
push
repnz
sti
into
or
ret
lods
or
ror
cmpsb
xchg
jns
dec
inc
jg
repz
or
ja
inc
jb
xor
arpl
nop
es
loop
movsb
cli
add
and
daa
leave
pop
dec
sub
arpl
cwtl
roll
leave
movsb
test
xchg
sub
jne
inc
rcll
xorb
mov
dec
pop
aad
fldl
sbb
dec
sbb
cmp
test
pushf
ret
scas
clc
dec
lahf
or
mov
sub
cmp
jae
mov
daa
int
add
add
mov
roll
pop
lods
push
ja
movsb
and
inc
or
xor
in
sub
nop
insl
stos
push
and
cld
sub
je
or
scas
inc
mov
add
sub
mov
dec
jbe
sub
pushf
mov
push
dec
jmp
pop
sub
xchg
jbe
pop
fdiv
mov
mov
xor
add
inc
mov
stos
lods
loop
pop
push
jmp
lahf
mov
dec
pop
mov
or
adc
imul
lds
sti
and
out
roll
adc
or
stc
shlb
sahf
or
filds
inc
jo
pop
dec
das
and
sub
ja
mov
repz
cwtl
sub
jne
sub
mov
pushl
negb
inc
ljmp
inc
mov
sbb
xchg
data16
mov
mov
sub
jmp
xchg
sbb
push
ret
test
xchg
in
mov
imul
adcl
pop
data16
cltd
movsl
mov
jnp
xchg
decb
dec
repnz
mov
push
sbb
jbe
dec
movsb
adc
xor
mov
and
mov
pop
fwait
xchg
mov
int
aaa
lea
shlb
add
or
mov
jne
pusha
mov
in
cld
add
jns
or
mov
neg
mov
shlb
ficomps
xor
sarl
in
ja
icebp
pop
sbb
cmp
inc
xor
imul
mov
or
ss
dec
xlat
xor
sub
or
inc
sub
loopne
cli
xchg
dec
xor
test
into
inc
adc
int3
pop
add
dec
aam
aam
cmp
fcompl
push
test
repz
xchg
std
mov
jns
adc
xor
andps
sbb
mov
ja
dec
outsb
mov
sub
mov
cmp
add
dec
mov
xchg
pop
pop
adc
das
sbb
pop
push
ss
mov
dec
xlat
std
jp
mov
mov
pop
pop
scas
jge
push
jmp
shl
flds
inc
test
adc
or
sbb
cmc
cmp
aad
dec
add
pop
push
jmp
add
xchg
rorb
mov
jl
fwait
xchg
pop
loopne
andb
adc
or
inc
dec
and
or
std
push
ljmp
mov
movsb
or
pusha
and
fucom
pop
cmpsb
lcall
imul
pop
int3
and
inc
sub
xor
fdivrs
inc
fildl
pop
loopne
inc
scas
add
or
push
fdivrs
cmp
adcb
mov
dec
sbb
ret
mov
fisubrl
bnd
sub
xor
inc
stos
inc
rorb
cmpsl
cmp
sar
fnstsw
pop
xlat
fiaddl
movsl
push
xchg
stos
cli
aas
sub
pop
xchg
xor
pop
mov
jnp
xor
push
int3
jns
imul
arpl
jae
pushf
js
cmpsb
xchg
xchg
pop
ja
loopne
negb
pop
mov
push
cld
scas
xor
js
and
cmpsb
mov
fcomps
jo
mov
sarl
sbb
adc
adc
fisttpl
fcoml
stc
ror
lods
negl
call
dec
mov
or
fnstcw
jecxz
test
cld
adc
enter
adc
outsb
sbb
sub
push
push
cmp
push
in
or
mov
inc
inc
test
roll
scas
in
mov
cmp
push
adc
sub
xor
pop
dec
xor
movsl
dec
testb
es
test
rep
fimull
les
sbb
adc
aam
inc
cmp
pushf
decl
scas
pop
xchg
cs
daa
shrl
cmpsb
add
call
fisttpl
idivl
mov
scas
cmc
stos
cmp
or
repz
aad
stos
pop
ds
pop
popf
ds
adc
dec
sbb
call
outsb
clc
xor
cmc
shrb
pop
pop
inc
mov
fwait
push
jl
or
adc
fdivs
or
xor
fidivrl
cltd
push
mov
jecxz
pop
adc
fbld
mov
les
push
xor
out
and
lret
bound
lds
out
test
jbe
and
das
xchg
arpl
movb
push
icebp
sbb
adc
shrb
cmp
xchg
hlt
sti
mov
sbb
shl
inc
mov
clc
rol
loopne
mov
addl
push
cmp
cmp
lret
push
negb
cmpsl
jg
mov
mov
stc
out
movsb
or
cmp
mov
insl
addl
mov
dec
mov
xchg
fisttps
aas
call
pop
mov
mov
std
fisubrl
and
pop
sub
out
in
xchg
test
adc
pop
mov
inc
mov
jmp
jl
mov
xor
cmp
ds
sub
lcall
lret
cmp
ljmp
popf
lods
mov
cmpsb
xchg
or
jo
jg
xlat
data16
adcb
jge
pop
sub
adc
mull
sub
pop
sbb
sbb
cmp
jb
aad
mov
js
xor
xor
arpl
xor
popa
adc
mov
jle
ret
mov
or
das
and
xchg
inc
mov
sub
mov
sub
mov
mov
xor
clc
shll
add
rorl
jg
sarb
push
xchg
rcll
pop
mov
xchg
cmp
xchg
addb
out
mov
pusha
pop
mov
sub
or
or
mov
jp
add
or
ret
daa
adcl
dec
lods
push
mov
adc
test
xor
and
xchg
nop
pop
lea
jecxz
in
xor
sub
mov
jecxz
mov
adc
pop
mov
enter
popf
scas
movsb
nop
push
les
dec
pop
or
xchg
inc
sbb
dec
dec
test
call
icebp
push
scas
mov
dec
dec
lret
pop
add
fdiv
xchg
pop
add
rorl
addr16
jp
out
lds
les
pop
add
mov
cmp
mov
fsubs
mov
inc
push
sti
mov
sbb
out
push
push
sti
imul
inc
jae
stos
sub
bnd
dec
or
addr16
aad
stos
mov
add
and
jnp
ret
mov
lds
testl
xor
mov
ret
data16
ljmp
inc
int
ret
mov
xor
or
mov
les
fmuls
push
test
lcall
dec
mov
cmp
sub
pop
jmp
inc
imul
into
pop
and
imul
dec
push
into
sub
dec
add
sbb
std
addr16
lds
sbbb
ds
iret
mov
jmp
jnp
or
cmp
std
roll
jge
inc
jb
fadds
pop
inc
inc
sub
in
adc
aad
mov
bound
mov
icebp
inc
roll
jb
test
pop
adc
push
adc
enter
int3
scas
pop
gs
mov
dec
movsl
lret
cmpsb
shl
lcall
jo
jb
aad
shll
sub
xchg
aaa
out
popa
mov
mov
xchg
sarl
mov
mov
xchg
js
jmp
int3
fisttpl
jmp
add
and
and
movsl
sbbl
subl
aaa
arpl
sbb
push
fldt
test
cmpsl
or
xor
popa
mov
call
xchg
jne
enter
ss
movsl
icebp
push
jmp
add
ficomps
push
inc
ljmp
jns
outsl
es
hlt
jecxz
mov
mov
mov
push
xchg
cmp
sub
push
or
and
negb
jno
cli
mov
add
shll
cld
jo
pop
or
cmpsb
jns
jl
xchg
mov
repnz
cmpsb
insb
sbb
lret
jae
test
cmp
and
push
push
and
leave
mov
adc
cmp
mov
and
sti
cld
mov
adc
push
and
xchg
daa
lods
adc
imul
cmp
pop
cs
sbb
lods
and
stos
cmp
scas
cmp
shlb
push
imul
inc
cld
xchg
call
pop
push
movsl
adc
lea
pop
gs
lret
xlat
scas
mov
sub
mov
gs
test
mov
ret
adc
mov
pop
push
mov
inc
and
addr16
mov
adc
rclb
xor
cs
in
shll
sub
xchg
pop
pop
jne
test
mov
lds
negb
or
popa
popf
fs
pop
jle
xchg
mov
xlat
push
xor
shr
jecxz
nop
in
mov
sub
int
mov
jb
adc
pop
inc
aaa
cli
fbstp
clc
mov
push
in
or
insl
pop
lea
lret
add
xorl
leave
dec
shll
mov
and
mov
jl
jb
ss
push
or
jb
push
lcall
mov
out
out
jg
inc
mov
add
sub
loop
mov
in
lods
sub
int3
mov
push
jecxz
cmp
or
xchg
xchg
and
cmp
dec
iret
lret
andl
and
xor
push
jecxz
stos
mov
xorl
ds
orb
jne
pop
push
lea
sub
xchg
mov
data16
xchg
lahf
inc
adc
xor
loope
aas
sbb
pushf
adc
lret
in
cmc
add
mov
mov
sub
add
aad
xchg
inc
loopne
push
outsb
in
push
xor
lods
ja
push
aas
xlat
loopne
mov
out
adc
xor
mov
aad
adc
movsl
inc
out
ss
int3
rcrl
aaa
and
lock
imul
pop
ja
cmp
lods
xchg
repz
faddp
and
stc
push
inc
hlt
in
pop
sarb
xchg
inc
cwtl
scas
pop
sbb
popf
mov
push
in
xchg
fdivs
or
ds
idiv
sbb
push
test
xchg
inc
push
movsb
fnstcw
ror
xor
insb
jb
sub
xchg
sbb
out
in
ret
sbb
xchg
loopne
bound
sbb
inc
shrb
repz
and
inc
icebp
lock
mov
and
test
sub
stos
lahf
rcll
stc
mov
push
push
out
nop
std
cmp
mov
sti
inc
in
sub
shll
or
push
loopne
mov
push
pop
push
push
ret
adc
push
add
pop
xchg
cwtl
xchg
insl
xor
xchg
out
xlat
cmpsb
pop
je
sub
repz
subl
adc
xchg
in
mov
xchg
cld
or
xchg
sbb
std
sub
xlat
fmuls
mov
pop
outsl
pop
mov
cmp
ss
fs
in
mov
shrb
fbld
sbb
test
jno
add
jne
pushf
fldenv
and
outsb
and
mov
mov
jp
cmpsl
pusha
pop
jl
sbb
pop
jae
test
lcall
imul
mov
andb
out
aam
adc
call
es
xchg
fimull
sub
dec
repz
mov
xchg
mov
add
add
lahf
push
lret
add
pop
and
dec
or
adc
adcl
aam
mov
mov
outsl
jae
outsb
push
repnz
lods
scas
test
and
adc
mov
cmc
rcrl
out
mov
imul
cmp
mov
rcrb
push
cmp
insb
fbstp
out
or
mov
es
and
mov
test
inc
sbb
ret
ss
inc
leave
pop
or
call
inc
mov
mov
mov
orb
jne
pushf
adcl
stc
push
push
lods
pop
add
mov
xchg
ror
repz
adc
add
arpl
test
leave
int3
pop
cld
fisubrl
mov
cmpsb
xchg
sub
or
sub
dec
pop
mov
scas
outsb
jno
or
jns
incb
aaa
in
iret
insb
fdivrs
mov
test
jmp
ljmp
push
bt
lret
mov
arpl
inc
ds
divl
inc
xchg
pand
cmp
mov
test
rcr
jo
clc
jb
je
jge
mov
add
cmc
push
pushf
pop
inc
pop
ret
and
mov
xchg
fcomps
mov
jmp
dec
out
leave
jno
pusha
mov
dec
pop
pop
mov
outsb
xchg
inc
add
jo
xor
dec
mov
test
repz
pop
pop
mov
or
cwtl
jle
jnp
outsb
pop
mov
mov
add
pop
shll
mov
or
add
daa
inc
out
psllq
or
sbb
mov
pop
imul
mov
dec
addb
bound
rorb
jne
mov
xor
mov
push
inc
rolb
lock
xor
xchg
xor
mov
inc
dec
dec
lcall
dec
sub
cmp
or
dec
adc
adc
incl
out
adc
sub
leave
xchg
inc
xor
std
xchg
jl
add
push
lret
sti
mov
mov
andb
xor
aam
leave
mov
les
ss
lcall
bound
cwtl
test
movsl
cltd
mov
in
mov
mov
ds
sbb
pop
insb
mov
outsb
ljmp
cwtl
dec
shrb
mov
cwtl
xor
add
and
push
es
fildll
cmc
add
push
mov
xchg
dec
pop
repnz
mov
data16
sbb
outsb
inc
dec
inc
lret
inc
ss
mov
xor
mov
push
pushf
dec
aaa
daa
jns
jl
xor
mov
adc
or
mov
nop
outsb
sub
xchg
xchg
dec
pop
icebp
sbb
fisttpll
shlb
inc
int3
dec
xor
cmp
fists
xchg
mov
fs
inc
jl
aam
test
or
sbb
sub
dec
ret
pop
pop
push
mov
fstpt
adc
mov
shrl
fdivrp
movsl
pop
mov
push
xchg
push
mov
js
lea
hlt
movl
xchg
loopne
out
out
cwtl
enter
jo
cltd
hlt
mov
push
dec
add
cld
adc
adc
adc
or
movsb
xchg
mov
cli
xor
cs
popf
pop
mov
lcall
scas
int
mov
fisubrs
pop
xchg
ljmp
add
push
pop
lea
inc
sub
adc
jp
adc
mov
sbb
push
dec
cwtl
or
and
das
sti
dec
mov
jmp
push
push
fsubl
lret
rolb
pop
ror
fsubrl
test
addr16
ret
in
adc
sub
xor
jl
push
dec
push
cmp
bound
mov
mov
mov
in
das
mov
mov
lods
clc
pop
mov
ret
addb
ss
inc
mov
test
add
pop
fwait
aad
scas
fs
loop
cmp
push
xchg
push
dec
mov
jb
jo
push
xor
in
lods
xor
add
mov
cli
mov
xchg
aad
movsl
mov
fisubrl
push
jmp
cwtl
adc
stos
and
pushf
dec
jne
dec
rolb
aam
or
loopne
ja
sbb
mov
sbb
mov
aaa
sub
sbb
cs
xchg
ret
jecxz
cmp
pop
popf
loopne
sarb
or
xchg
xor
mov
nop
sub
adc
fnstcw
fdivrl
mov
xchg
add
add
xchg
mov
sub
test
addl
push
fstpl
inc
mov
inc
push
out
pop
daa
mov
fsubs
push
inc
lock
inc
jl
push
movsl
aaa
ss
aaa
imul
fidivrl
sbb
leave
in
pusha
mov
mov
push
inc
mov
jmp
and
fisubs
cmp
lock
jae
jb
mov
lea
lret
sub
inc
aad
pop
sbb
pop
xor
push
cmp
hlt
inc
pop
lcall
or
lods
dec
mov
out
repz
iret
js
inc
inc
js
fs
test
jge
insl
adc
push
adc
std
jecxz
and
mov
xor
inc
mov
loop
mov
mov
lret
into
sub
fbld
mov
dec
adc
dec
sbb
lcall
or
and
out
mov
aad
lods
sbb
aam
test
and
jmp
filds
push
or
sub
ret
pop
popf
dec
aad
fs
mov
testl
shrb
rolb
ret
add
add
dec
add
cltd
cmp
hlt
ja
lods
pop
fwait
scas
xchg
fadd
jne
mov
pop
js
outsl
aaa
shrl
outsb
push
arpl
movsl
jl
repz
out
sbb
shl
xor
into
jno
cwtl
es
pop
add
and
lret
test
jo
rcrl
push
mov
fwait
in
stc
xor
sbbl
mov
shrl
fcoml
jmp
cmpsb
fmull
push
xchg
sub
hlt
std
lcall
mov
pop
out
ret
and
mov
push
mov
loopne
pop
sbb
fcoms
out
inc
stos
xchg
push
mov
loop
andl
adc
jecxz
cwtl
adc
mov
scas
iret
or
pop
ss
shll
mov
lds
insb
sub
pop
mov
cltd
inc
or
outsl
in
ret
mov
jnp
bound
popf
flds
loop
mov
jne
movsl
fsubl
pop
dec
fs
sbb
ret
sbb
iret
jns
xchg
sub
fldl
xchg
test
stc
je
lea
std
cmp
test
mov
fsubs
sub
sbb
jge
sub
lret
movsb
js
pop
sbb
and
popl
sub
test
addr16
ficompl
xor
dec
adc
aam
sub
scas
xor
shl
jp
es
jmp
cld
pop
and
fdivl
roll
insb
ffreep
in
call
xchg
repz
sbb
out
and
pop
pop
ficoml
xchg
adc
insb
repnz
fistl
test
or
shll
dec
mov
inc
mov
cmp
loopne
jl
lcall
pop
push
inc
jae
mov
aad
sahf
hlt
xchg
int
mov
repnz
push
pop
fnstenv
mov
in
cli
repnz
ljmp
ljmp
push
sbb
flds
out
dec
mov
aaa
flds
aam
jb
mov
les
imul
and
ficomps
or
movsb
xchg
mov
adc
push
or
push
xor
and
cmc
cmp
movsb
cmc
mov
adc
cmc
add
std
jbe
jg
pop
cld
pop
es
lcall
add
stc
add
push
imul
insl
testb
icebp
inc
ret
insb
cmp
in
sti
push
dec
call
ficompl
out
rcrl
in
or
adc
xor
push
mov
or
repz
mov
sub
jle
loope
and
pop
fisttpl
repnz
add
aam
jl
cmp
push
cmp
push
xor
pop
fldenv
or
dec
adc
sub
mov
insl
and
dec
call
outsb
test
scas
in
xor
pop
xor
lds
pushf
pop
jmp
add
mov
roll
jmp
pop
mov
pop
sbb
mov
xor
lcall
and
dec
push
pushf
les
cmc
mov
xor
int3
jno
xchg
push
lret
sti
xor
push
outsb
pop
or
and
add
mov
das
jae
push
bound
adc
sti
jle
xchg
sbb
xor
shll
xorl
sub
xor
cld
jg
es
mov
lock
push
icebp
shl
outsb
jbe
xchg
mov
adc
js
rorl
test
adc
jg
ret
xor
xchg
cmc
add
nop
les
fnstsw
cld
inc
pop
inc
ret
sahf
filds
hlt
jbe
iret
clc
setae
lea
in
out
add
ret
fmuls
test
pop
rolb
into
lret
iret
fcoml
cmpl
pop
sub
xchg
mov
mov
int3
jno
cmp
sarl
scas
loope
insl
call
push
and
xlat
push
into
sub
fstps
mov
movsb
bswap
clc
in
mov
mov
cmp
xchg
push
cmovge
cmc
and
push
pop
lahf
out
xchg
inc
test
imull
movsb
mov
push
stos
pop
je
out
repz
lds
lds
mov
push
and
pop
push
pop
pop
shrl
lcall
pop
into
sub
jne
adc
outsl
fdivl
add
jno
sub
mov
push
clc
pop
pop
mov
test
cmp
out
jnp,pn
or
cmp
push
xor
pushf
ja
call
ja
test
addr16
fmull
lret
cltd
xchg
sbb
shrl
xchg
push
push
dec
cmovs
pop
mov
inc
call
lds
testl
mov
imul
cmp
or
inc
inc
add
xor
sub
test
roll
push
fisubl
iret
xchg
mov
mov
dec
cmpsb
push
cmpl
stc
js
clc
add
cltd
and
mov
fnsetpm(287
pop
sahf
ret
push
ret
mov
lcall
stc
push
and
jb
loope
scas
push
cmpsb
jo
loop
push
xorl
push
cmp
adc
ret
jmp
in
ret
fcomi
int3
repz
inc
lock
mov
fstpl
inc
lahf
jnp
ss
ret
sarl
sbb
push
mov
cltd
mov
pop
push
add
jns
fistps
hlt
orl
stc
dec
loop,pn
add
movsl
mov
out
das
jle
xlat
jae
stc
lock
or
outsb
test
mov
jns
cmp
lea
inc
sub
enter
cld
cmc
xchg
cmp
mov
push
dec
sbb
idivl
push
and
xor
sbb
test
jmp
inc
repnz
pop
cmp
mov
fnstcw
mov
jg
in
or
mov
addr16
ret
sbb
pop
das
or
aad
mov
fldcw
shlb
push
sub
mov
pop
pop
ret
cld
in
sub
fldenv
pushf
shrb
cmp
repnz
ja
imulb
jp
sti
dec
xchg
push
mov
mov
faddl
jno
mov
sub
xchg
stos
mov
aas
and
out
pop
fwait
dec
popf
aam
sbb
arpl
pop
xor
pop
cli
out
xor
lret
ss
loope
mov
clc
subl
sbb
jnp
xor
or
pusha
mov
inc
iret
mov
out
push
cmp
es
xor
jg
lahf
xrelease
cmp
xor
enter
xchg
sub
jb
mov
cltd
mov
mov
adc
mov
loopne
add
push
lahf
das
mov
insb
pusha
call
xchg
or
out
mov
ss
xlat
push
dec
vpabsb
std
jns
push
ss
shlb
enter
movsl
add
jne
mull
cltd
das
push
ret
mov
jo
insb
les
cmpsb
xor
cli
and
jle
sub
inc
fucomip
test
mov
jno
xchg
or
mov
ja
dec
adcl
mov
daa
les
shrb
inc
mov
mov
push
loopne
pop
in
cmc
sbb
into
or
or
loopne
add
fcompl
add
and
dec
sahf
xor
adc
inc
inc
sbb
jno
negb
mov
repnz
ss
hlt
mov
cmp
addr16
enter
pop
push
lods
dec
popa
loopne
and
sub
pop
dec
xchg
iret
xor
jnp
rol
dec
fildll
fsts
or
ljmp
stos
out
hlt
inc
jge
pop
inc
imul
lds
sub
jecxz
js
sbb
sarb
cmp
xor
inc
adc
nop
insb
enter
jmp
mov
or
inc
or
int3
flds
ret
mov
std
ret
xchg
lods
imul
sbb
xchg
fnsave
stos
fisttpl
mov
add
scas
mov
repnz
inc
sub
add
sbb
inc
mov
andl
ljmp
mov
mov
movsb
psubw
scas
lcall
in
negl
xchg
inc
mov
add
adc
pop
sbb
jmp
outsl
xor
enter
pop
jno
dec
lahf
dec
data16
std
out
cwtl
or
dec
jmp
repnz
push
xchg
mov
pushf
aam
jbe
adc
movsl
dec
or
ljmp
sub
pushf
outsb
xlat
and
movd
push
sub
out
jnp
jb
sbb
cld
daa
bnd
adc
mov
or
mov
lahf
xor
fnstsw
mov
push
cs
insb
pop
out
xor
repz
jae
sbb
fidivs
mov
lahf
jp
add
movsb
cmp
pop
outsl
sbbl
out
dec
jge
mov
scas
jno
mov
xor
ret
dec
push
mov
or
sbb
jne
pop
cmp
test
mov
sub
pop
push
lock
leave
sub
testb
loopne
jo
xchg
push
inc
fs
cmpsb
lahf
lods
xchg
push
jno
dec
es
popl
xchg
push
sbb
loope
mov
inc
push
jns
leave
mov
inc
jmp
add
mov
sarb
mov
ds
sub
xchg
mov
es
mov
jmp
das
in
out
jg
mov
and
sub
int3
pop
add
lods
pop
dec
add
outsb
pop
push
xor
sub
lods
bound
sbb
js
push
inc
mov
jb
push
lret
fdivp
xor
fists
mov
mov
jmp
cmp
loope
xchg
test
je
mov
mov
sbb
test
inc
in
jo
and
and
aam
add
ja
mov
adc
lret
adc
sub
cltd
lods
das
test
fcoml
inc
inc
fcomip
repz
cmp
pop
loop
lret
ljmp
lock
fs
dec
jns
lods
out
push
icebp
lret
sub
ret
lods
je
sbb
jns
push
es
mov
outsb
push
pop
push
test
loop
leave
aaa
cs
dec
fisubs
ja
jle
inc
es
gs
mov
scas
mov
lock
and
and
xchg
rcrb
push
fidivs
repnz
mov
mov
ret
jne
xchg
push
pop
shrl
mov
les
xchg
repnz
pop
pop
insl
int3
mov
cmp
cmpl
xor
xchg
or
inc
push
jo
dec
mov
test
das
cltd
test
push
push
jle
xchg
aad
inc
or
lock
add
inc
popa
ret
in
inc
imul
seta
sti
mov
mov
inc
inc
into
ds
or
ret
mov
jg
jno
mov
mov
decb
aam
jnp
mov
lret
pusha
fcoml
mov
ss
mov
push
and
inc
aam
inc
leave
and
js
hlt
lock
adc
jb
xchg
fidivs
lret
sbb
icebp
hlt
fnstenv
in
adc
into
jbe
js
xor
movsb
jl
or
sub
mov
imul
sbb
dec
xchg
jl
ljmp
or
pop
iret
imull
iret
sbb
jnp
shlb
push
in
inc
pop
xor
mov
add
xor
jns
les
mov
mov
mov
cltd
data16
sub
out
test
mov
and
shrd
jmp
xchg
sbb
inc
sbb
inc
adc
rorl
jl
dec
outsl
sbbb
lds
jo
out
sub
mov
popf
rcrb
sub
lahf
scas
xchg
in
push
arpl
push
movsl
mov
cld
cmpsl
mov
dec
add
dec
add
cli
lds
repz
ficoms
push
fsubs
cmp
and
jp
jae
pushf
ds
or
repz
std
sbb
cli
push
xchg
dec
arpl
pop
pushf
mov
leave
ds
pop
outsl
adc
or
repz
pop
loop
inc
das
push
scas
movsl
add
dec
rcll
inc
adc
imull
inc
das
or
adc
push
cmc
xor
sub
ja
pop
cmp
dec
mov
add
or
lds
or
dec
xchg
and
xor
mov
xchg
lahf
inc
pop
cmp
jbe
xor
js
insb
jmp
repz
bound
dec
xchg
movsb
cmp
sbb
js
stos
pop
roll
push
pop
dec
popa
pop
cmp
xchg
push
dec
cli
mov
mov
inc
sbb
clc
dec
inc
ss
fnstenv
or
lret
test
sbb
or
xchg
mov
push
ljmp
loope
lcall
push
dec
adcl
pop
mov
sub
pushf
ja
jle
shlb
aad
sub
inc
enter
arpl
daa
inc
mov
and
sbb
repz
scas
adc
aas
mov
sub
cmpl
add
lock
sbb
fimuls
outsl
test
jmp
fldenv
ljmp
cmp
jecxz
cmp
bound
inc
in
pop
cmp
das
cmp
push
xor
mov
out
dec
sbb
xor
ss
mov
mov
xor
int
int3
mov
cmp
jbe
xchg
bound
push
jmp
lea
in
enter
pop
xor
outsl
and
sti
adc
mov
ljmp
stos
stc
insl
lret
out
out
push
pop
xor
jno
fnsave
mov
gs
les
add
push
fldenv
push
jnp
jle
repz
push
je
movsl
adc
dec
xor
into
add
push
fsubp
inc
dec
into
inc
cmc
dec
push
mov
in
int
or
roll
xchg
test
fdivrs
adcb
push
push
fwait
and
cmpsb
fcos
ja
xchg
test
jno
leave
push
imul
xchg
jecxz
jo
imulb
pop
dec
insb
aaa
lods
pop
jge
sbbb
lret
les
adc
je
xor
into
out
sub
mov
call
iret
clc
jg
lods
ja
jb
inc
inc
icebp
add
fs
mov
mov
stc
push
sbb
sub
adc
fsts
out
int3
xor
xchg
adc
aam
xchg
arpl
jae
adcl
push
ret
push
scas
bound
push
or
or
or
stos
cmp
mov
filds
stos
mov
xchg
out
test
push
jno
xchg
and
push
insl
push
mov
pop
ljmp
push
lds
sbb
xor
dec
inc
mov
xchg
sub
adc
in
sahf
popf
add
or
inc
sbb
xchg
mov
xchg
mov
shll
jnp
push
lcall
jecxz
mov
or
push
push
bound
jecxz
pop
mov
jmp
cltd
loopne
int3
das
imul
sub
aam
push
subl
fldl2t
mov
xchg
xchg
cmp
pop
stc
push
lret
test
sahf
repnz
ljmp
lods
shr
mov
adc
fistl
or
jbe
loop
and
addr16
mov
subb
mov
aad
xchg
imul
push
inc
std
movsb
pop
stos
cmp
lret
or
push
pop
and
notb
das
xchg
mov
sbb
lahf
sub
add
icebp
xor
rcrl
adc
rcl
sub
scas
cli
jne
outsl
xchg
stos
sub
int
cmp
loopne
jae
pop
and
subb
push
iret
ljmp
add
or
imul
fdivr
sub
add
or
outsb
or
bswap
nop
and
js
or
add
ss
jecxz
loope
jecxz
fistpl
xchg
shll
jmp
mov
push
shl
sub
dec
imul
inc
sahf
inc
jns
fdivrl
xor
xchg
xorl
pop
fs
xchg
sbb
dec
mov
push
imul
adcl
lahf
pop
dec
into
fidivl
sar
jo
mov
dec
or
lods
xlat
hlt
push
ss
or
ds
sahf
jmp
scas
sti
inc
push
scas
inc
jb
je
xor
test
mov
enter
aad
data16
sbb
jmp
cmp
mov
push
les
sub
inc
pop
fld
adc
sbb
xchg
leave
test
cmp
lock
or
popa
add
paddusw
les
jns
or
fisubl
pushaw
cltd
popa
pop
add
mov
addr16
std
jmp
adc
outsb
adc
pop
leave
arpl
cmp
jecxz
xor
add
pop
mov
rcll
sbb
cmp
icebp
adc
mov
jo
clc
xor
cmp
dec
jge
cs
fstps
push
in
or
mov
int
popa
mov
jmp
sbb
scas
mov
fcoms
test
add
push
imul
out
je
ss
repz
shl
push
aam
push
push
dec
lea
jg
sahf
or
jae
and
jnp
xchg
test
add
mov
dec
jo
fisttps
les
popf
inc
imul
adcb
sbb
das
cmpsb
add
imul
outsb
loopne
lret
sub
cmp
inc
add
push
inc
cli
mov
xor
xlat
cli
adc
mov
mov
mov
pop
adc
pop
out
inc
inc
jbe
xchg
jmp
stc
sbb
loope
mov
fsubr
push
cmp
gs
scas
jmp
pop
js
mov
lods
cmp
jecxz
mov
in
xchg
in
ds
and
stos
pop
mov
and
aam
scas
ds
pop
inc
xchg
nop
mov
orb
adc
xchg
xlat
inc
jl
popf
push
pop
mov
xchg
into
pop
jmp
inc
xchg
divb
repnz
push
inc
dec
push
mov
mov
jmp
mov
js
in
adc
loope
cmc
inc
fistl
je
xchg
adc
lcall
or
add
mov
lock
mov
adcb
repz
out
call
add
push
xchg
dec
gs
xchg
inc
xor
fisttps
cmp
jae
dec
mov
pop
push
sub
pop
nop
insl
rcr
movsb
ret
lret
aad
push
push
sbb
and
add
ret
dec
fchs
inc
in
adc
hlt
mov
mov
pop
aas
mov
and
insb
dec
jne
das
pop
fcoml
sbb
and
or
push
fnstenv
mov
sbb
sti
mov
jbe
cmp
loop
inc
popa
sbb
mov
pop
push
aas
jnp
xchg
fcompl
frstor
das
xchg
sub
xchg
insb
add
mov
jno
inc
mov
ficoml
xchg
pop
ds
push
xchg
mov
insl
les
int3
int3
xorl
push
adc
sbb
pop
sub
or
jnp
faddl
xor
jbe
inc
dec
cltd
sub
cmpsb
add
xchg
pop
push
dec
cmpsl
or
pop
ret
jmp
aam
stc
icebp
aam
mov
jmp
mov
sarb
mulb
call
mov
enter
sbb
xor
nop
inc
sahf
fsts
les
hlt
dec
adc
push
inc
add
adc
pop
sarl
xor
push
stos
sbb
and
sub
stos
add
xchg
scas
loope
xchg
mov
int
and
sbb
xor
pop
mov
push
mov
jg
dec
mov
push
mov
rorb
testb
test
xchg
add
mov
dec
and
es
cmp
add
or
cmp
add
outsb
inc
adc
push
lahf
cmc
andb
int
insl
fmull
cwtl
stc
dec
jnp
xchg
push
stos
jecxz
or
jno
repz
inc
mov
mov
lret
xor
sahf
in
or
out
rcr
icebp
nop
ficomps
dec
sbb
fyl2x
and
xchg
mov
jp
ret
mov
and
sti
iret
or
icebp
xor
jnp
mov
mov
and
mov
xchg
and
fisubl
jmp
sbb
inc
adc
or
inc
ljmpw
mov
lock
mov
jbe
out
aam
mov
push
jle
dec
xchg
and
mov
das
dec
jb
pop
xor
push
cmp
mov
sbb
scas
mov
cli
jecxz
cld
lods
in
cmp
xlat
and
out
mov
adc
gs
adc
insl
or
fidivl
ret
inc
mov
hlt
arpl
les
push
iret
rcll
lock
add
jb
and
js
std
mov
movsb
popf
mov
loope
push
pop
in
xorb
mov
data16
adc
xor
or
out
roll
push
and
orb
adc
pop
or
xor
or
ds
push
xor
sub
jns
outsb
pop
or
stos
mov
adc
sub
mov
push
sti
cmp
movsl
cwtl
adc
jno
test
test
dec
jae
dec
hlt
push
out
xlat
shll
and
jnp
sbb
icebp
insl
xchg
pop
push
inc
sub
enter
jl
fdivrl
xor
jbe
cmp
mov
mov
xor
mov
lcall
mov
jle
cmpsl
xlat
push
mov
jmp
das
testb
mov
add
mov
fcmovnbe
stc
or
out
sbb
xchg
mov
ljmp
xchg
stos
bound
xchg
in
mov
stos
out
sub
cwtl
mov
outsl
pop
nop
mov
pop
inc
lods
shrl
aaa
out
adc
inc
mov
sbbb
ret
push
or
fadd
outsb
ja
sub
aad
adc
iret
and
xchg
neg
cmc
push
cmp
jno
aaa
mov
and
sub
xor
dec
xor
jg
mov
mov
or
rolb
iret
shrd
andb
pop
push
outsl
shlb
popf
push
dec
clc
or
cmp
pop
stos
rclb
bound
jne
or
xchg
sbb
dec
pop
out
arpl
nop
int3
xor
inc
in
add
pop
test
cmpsl
inc
loopne
adc
in
jne
mov
in
and
push
into
dec
add
rclb
imul
mov
or
xor
ret
insl
repz
adc
sbb
sub
daa
xchg
mov
aad
mov
jg
sub
ficoms
testl
mov
ret
repz
mov
aam
pop
adc
es
fiadds
lock
mov
insl
popf
pop
cwtl
mov
test
adc
jp
jmp
adc
insl
jg
into
aaa
mov
add
xchg
ja
test
leave
out
and
outsb
mov
ret
pop
mov
and
fldt
mov
jle
pusha
hlt
adcb
enter
movsb
push
xchg
pop
cmp
xchg
jl
lahf
rcll
or
test
xor
sub
ja
add
mov
sarb
shll
lods
out
mov
rcll
pop
sub
jno
xchg
adc
push
imul
out
out
adc
mov
pop
cmc
fsubs
sub
sti
es
and
add
inc
cmp
in
stos
push
dec
mov
inc
out
clc
adc
mov
cmp
ret
cld
push
stc
stos
push
les
std
out
inc
or
sbb
mov
lods
or
jmp
adc
jp
sub
cmp
iret
mov
mov
mov
out
fnstcw
loopne
or
jo
out
lahf
movsb
or
sbb
mov
dec
mov
test
mov
loope
enter
addb
add
xchg
lods
out
imul
sub
sub
adcb
cmp
xchg
roll
cmp
ds
mov
nop
out
cli
lds
adc
mov
stos
mov
push
dec
push
sub
jnp
push
push
mov
aaa
cmc
jl
xor
mov
ficoms
notb
dec
sub
aas
std
xor
mov
pop
mov
nop
aaa
cs
and
xchg
das
mov
xor
loop
mov
es
loop
sbb
stos
push
arpl
arpl
dec
scas
sbb
pop
adc
fistps
pop
cmp
sub
pushf
mov
xlat
add
fsubr
mov
or
dec
jge
or
adc
and
shrb
aam
adc
mov
dec
push
add
inc
lock
shrb
outsb
vpandn
pusha
int3
mov
icebp
sbb
aas
imul
aam
outsb
adc
adc
or
into
jge
rol
rorl
mov
push
lahf
xchg
addr16
add
sbb
data16
loope
jge
insb
adc
or
loope
dec
jmp
cs
xor
mov
pop
mov
stos
sub
leave
imul
xlat
movsb
cmpsl
popf
stos
inc
pop
xor
mov
push
xchg
sbb
push
inc
add
idivl
sub
push
xor
daa
aam
cmc
cmpsb
mov
enter
jb
xchg
and
mov
leave
add
stos
add
icebp
inc
jge
aas
and
pop
mov
add
xor
fisubrs
push
pop
sub
sub
inc
outsb
clc
stos
dec
inc
jl
xchg
xchg
mov
into
sbb
fists
jnp
xchg
inc
fs
cwtl
dec
stos
xchg
inc
dec
cmpsb
xor
pop
and
push
cmp
ljmp
or
cli
in
mov
shr
lcall
cmpsb
fisubl
xchg
lods
in
das
aas
mov
or
inc
and
mov
ss
scas
sub
outsb
xor
push
hlt
adc
imul
mov
repz
cmpsl
sub
imul
cmp
sub
enter
outsl
mov
jb
arpl
stc
dec
push
stos
popa
inc
mov
jno
pushw
stc
sti
sbb
les
pop
addl
sub
cmc
sbb
xchg
xor
add
faddl
call
mov
xorl
out
sbb
bnd
jmp
add
or
xchg
and
dec
inc
xor
test
mov
adc
fistpl
pop
push
int3
inc
mov
xor
cld
push
sbb
lahf
sarb
repz
cmp
aas
popa
sarl
mov
out
dec
es
pop
mov
add
pop
imul
lods
and
stos
rcrl
or
mov
out
cmp
pop
rcll
inc
and
xor
test
outsb
movsb
add
clc
push
sbb
ret
push
xchg
sahf
shlb
xchg
xor
fistpl
pop
aad
jbe
add
mov
inc
cmpsb
or
rcl
push
std
je
add
xchg
xor
dec
jb
jecxz
xchg
lea
inc
jl
in
or
sub
xchg
inc
daa
je
cmp
jne
push
jns
jp
gs
mov
pop
ret
jge
inc
mov
in
fbld
inc
jl
xchg
sub
mov
jno
or
pop
mov
call
xchg
sub
dec
gs
push
cmc
lret
sub
push
ja
insl
fld
lret
add
pop
push
into
xor
cmp
adc
xchg
popf
js
mov
imul
ljmp
cs
cmp
or
pop
adc
stos
sbb
push
inc
shlb
fistps
inc
jne
arpl
cwtl
jbe
mov
testb
cmp
push
test
push
mov
cmp
inc
mov
and
inc
pop
mov
or
lock
cmp
sub
rolb
and
adc
into
inc
mulb
mov
and
push
and
jns
out
pop
sub
and
mov
jae
sbb
inc
shl
scas
inc
ljmp
cmp
or
dec
xor
add
mov
sub
lods
stos
jge
pop
dec
sbb
mov
in
and
pop
pop
stos
cmpsb
mov
dec
repz
cmp
pop
xlat
test
arpl
mov
lea
inc
jb
sti
imul
push
mov
imul
inc
and
dec
iret
inc
sahf
jno
jmp
jbe
loope
jg
insb
and
and
testl
in
inc
pop
jl
pop
mov
sbb
inc
xchg
clc
ret
bound
jmp
sti
push
adc
fsubrs
repnz
add
add
cmc
icebp
sbb
es
shrb
test
mov
dec
and
scas
xor
popf
sub
scas
scas
xlat
mov
test
aad
mov
mov
ja
cmpl
fiadds
sahf
cmp
sub
sahf
hlt
insb
fildll
outsl
or
sub
cs
divb
mov
cmpsb
into
dec
mov
pop
sub
popf
jge
and
mov
add
push
rclb
lea
lods
push
lods
mov
jmp
mov
mov
out
enter
lahf
loope
fisttpl
out
sub
je
mov
push
adc
lds
mov
pop
dec
mov
sub
call
sub
lods
jp
mov
inc
jecxz
popa
jae
xchg
add
notl
and
add
xchg
push
or
fcmovu
and
jae
pop
outsb
mov
cmpsl
loop
xchg
dec
and
lds
xchg
scas
adc
fisubl
lahf
cmpsb
ljmp
dec
call
adc
adc
xchg
imull
xchg
xor
cmpsb
shrl
mov
pop
pop
stc
enter
xor
jb
push
cmpsb
mov
jo
dec
xchg
mov
mov
ss
sub
out
and
push
data16
pop
andl
dec
sub
xchg
cld
push
or
cmp
mov
sbb
xchg
or
mov
nop
or
xchg
vmovntpd
cmpsb
xchg
cld
sahf
imul
pop
inc
jb
out
xchg
arpl
add
adc
mov
jns
mov
mov
fdivr
mov
test
shlb
pop
stos
nop
sub
inc
aas
pop
mov
sbb
xchg
rorb
adc
jo
sbb
and
fnstcw
adc
lret
rclb
int
shrb
xor
inc
popa
adc
push
jne
pop
popa
mov
mov
cmpsb
lret
pushf
jbe
mov
cmpl
inc
fisttpl
dec
xchg
sbb
les
lea
ljmp
jae
arpl
add
cld
jl
sahf
fcomps
inc
sbb
popa
push
mov
mov
ret
fwait
adc
and
sahf
addr16
or
sbb
push
cmp
jg
adc
sbb
ret
arpl
and
cltd
rcrl
emms
jmp
or
sbb
or
cmc
pop
sub
sbb
dec
cmp
pushf
sub
add
stc
inc
fwait
lock
dec
fcoms
into
int
ret
jl,pt
aas
ds
mov
xor
mov
shll
pop
xor
out
mov
cmpsl
aaa
xor
sarl
dec
fidivrs
lea
shr
mov
or
and
adcb
mov
mov
int3
jne
pop
adc
pop
adc
pusha
dec
data16
adc
ret
aas
jmp
jmp
gs
mov
shl
repnz
ret
push
ret
test
scas
push
lret
arpl
sbb
les
lods
dec
dec
or
push
rcrl
mov
ret
jge
hlt
bound
fdivrs
mov
and
lods
adc
cmpsb
int
shl
xor
sbb
dec
inc
in
loop
lods
call
mov
in
int
ffree
xor
pop
xchg
cld
aad
leave
iret
jl
repz
inc
psubusb
mov
jbe
push
nop
popf
xchg
sbb
cmp
push
loopne
xor
adc
sahf
mov
mov
rcll
xor
mov
les
rcrl
insl
mov
imul
movsl
icebp
xchg
movsl
cmp
mov
in
mov
daa
push
mov
out
xchg
mov
mov
aam
int
shr
lock
das
pop
cmpsb
aaa
loope
add
int3
loope
push
push
into
or
pop
push
inc
std
rolb
mov
bnd
cltd
call
pop
mov
jns
clc
mov
imul
scas
mov
outsl
adc
int
cmp
push
push
xor
add
cmpsb
mov
clc
sbb
pop
imul
setnp
pop
lds
in
call
cs
or
fchs
xor
pusha
push
testb
shlb
fs
out
mov
insb
in
lret
pushf
in
inc
mov
mov
pop
fstp
bound
aaa
adc
mov
push
mov
dec
sub
stc
jecxz
and
cld
jge
xchg
rorb
jg
mov
and
cld
ret
xlat
cmpsl
dec
dec
pop
dec
out
jne
inc
mov
push
fistl
jecxz
iret
int
mov
movsb
push
aad
dec
cmp
in
cmpsb
mov
daa
lods
jge
out
daa
test
test
cmp
inc
inc
cmp
jno
insl
xor
sbb
cmp
mov
stos
sbb
loope
mov
jmp
fsubl
sti
jns
lret
arpl
insl
lock
aas
adc
rorb
pop
orb
fisttpl
shll
jns
aaa
xchg
scas
push
jns
sub
fldt
fldt
stos
mov
lahf
push
push
lcall
adc
insl
shl
in
clc
imul
lea
mov
data16
sbb
push
test
dec
lea
xor
and
or
mov
mov
mov
cwtl
dec
mov
iret
jno
mov
icebp
mov
adc
or
adc
and
jne
xorl
push
jns,pn
and
xor
pop
lods
cmpsl
jmp
dec
je
pop
loop
ficomps
mov
sbb
mov
dec
jl
aaa
out
fcoml
cli
movsl
push
and
xchg
cmp
sub
push
cmp
ret
pop
cmpsl
xchg
lds
mov
or
fcmovnb
push
cmc
pop
sbb
pop
icebp
cs
jno
dec
pushf
jle
sbb
fcompl
dec
imul
mov
insl
fs
sahf
leave
pop
test
mov
inc
adc
stos
jns
dec
aad
test
cmc
lcall
and
pop
out
gs
mov
shlb
or
sar
push
adc
pop
mov
loopne,pt
push
js
lret
aad
orb
mov
push
cmp
pop
jae
or
rorb
lods
cmp
mov
jbe
ljmp
sbb
fsub
ret
bound
loope
rcrb
dec
fsubl
faddl
ret
mov
jno
dec
into
orb
cmp
sbb
jg
inc
push
push
mov
stc
shrl
inc
and
inc
add
shll
fadds
cmp
cmpsl
fcomps
push
cmc
scas
adc
aas
fnstenv
into
iret
xchg
push
jmp
sbb
incb
sbb
inc
pop
sub
inc
xchg
cmpl
fwait
jp
cmc
nop
push
and
xor
mov
out
mov
js
or
ljmp
fidivs
aam
cmp
push
mov
mov
test
mov
cs
jge
ds
pushf
sub
gs
ffreep
jecxz
pop
ljmp
call
scas
sbb
push
pop
addl
sahf
adc
aam
sub
test
sbb
jnp
loopne
iret
adc
inc
loope
cmp
fs
adcl
dec
mov
dec
cmpsl
shll
scas
pushf
cwtl
mov
jb
push
or
movsl
mov
shrb
out
adc
rorl
rcll
loope
cmp
les
inc
enter
xchg
jo
mov
cmc
and
jmp
movl
imul
out
add
cmpsb
jmp
dec
sbb
fdiv
out
subl
shrl
cmc
ss
or
pop
in
popf
cmpb
cmp
arpl
dec
jmp
xor
add
movsb
cmp
rol
sbb
mov
mov
adc
out
jge
out
sub
add
or
lds
inc
dec
cmp
js
mov
popf
fistpll
and
lock
addr16
aaa
xchg
cld
xchg
notl
cmpsl
pop
mov
icebp
and
push
jmp
add
push
and
ja
cmp
jbe
gs
loop
sub
sbbb
xor
nop
pop
cmp
pop
xor
fistps
or
pop
icebp
mov
push
jg
ljmp
pushf
adc
imul
gs
dec
and
imul
or
xchg
fwait
adc
or
mov
filds
ljmp
cmc
mov
jg,pt
xor
sub
insl
cmp
pushf
jecxz
loopne
aaa
fstpl
inc
xor
jmp
adc
fistpll
lds
test
pop
fildll
rcr
repnz
dec
xchg
ds
stos
loope
push
fsubr
mov
or
cmpsl
cmp
mov
jge
sbb
in
inc
fwait
mov
fisttpll
mov
mov
sbb
pop
push
mov
add
inc
cmp
std
pop
or
pop
adcb
and
lret
dec
pop
push
fsubs
and
adcl
cmp
mov
div
jge
sub
push
mov
pushf
pushf
inc
add
cld
insl
inc
add
pushf
daa
aas
xchg
inc
adc
xchg
mov
inc
xchg
int
ljmp
aas
jnp
sub
int3
mov
stos
xor
arpl
push
inc
fldcw
stos
push
pop
mov
push
aam
push
or
cmp
repnz
pop
ja
mov
mov
mov
outsb
adc
lret
mov
mov
ret
add
dec
inc
cmpsb
lods
xchg
lods
in
aad
pop
int3
mov
std
pop
pop
jno
jo
add
sub
pop
lods
mov
sbb
add
inc
dec
xchg
and
aas
push
add
outsl
sbb
in
lret
cltd
xchg
mov
push
sarl
and
inc
dec
or
adc
ljmp
mov
pop
or
cmp
ja
jo
cmp
lods
or
movsl
jp
imul
insl
xchg
and
ds
sub
mov
or
mov
mov
ret
sbb
mov
mov
test
lods
hlt
stos
dec
ret
loop
jmp
sbbb
xchg
adc
or
mov
popa
or
or
shll
aaa
lcall
push
lret
dec
lea
adc
bnd
fistps
inc
or
mov
mov
in
ret
lods
jns
inc
cmp
add
sbb
std
cmp
loope
lds
jo
fs
aaa
aas
stos
in
cmp
mov
rcrl
cmp
ds
mov
inc
dec
js
pop
push
xor
dec
mov
jecxz
sbb
mov
imul
lahf
pop
sub
rorl
lock
jae
clc
outsb
jo
adc
pusha
in
pop
fcmovnbe
repnz
cld
pusha
das
jl
pop
dec
repnz
xor
dec
shl
pop
sub
push
lret
inc
inc
push
xor
xor
pop
adc
insb
ja
inc
xor
inc
movsl
idivl
adc
xchg
sbb
fildll
xchg
and
mov
pop
pop
and
jl
xlat
dec
out
jno
pop
je
mov
cmpsl
inc
sbb
cmpsl
into
push
and
or
add
push
push
push
out
mov
pop
rcr
sub
sub
sub
loopne
int3
jmp
cmp
push
sub
in
mov
fildll
pop
pop
cmp
mov
call
fdivrs
add
push
add
inc
cmp
test
cmp
sub
xor
inc
lods
out
jecxz
sbb
inc
out
loope
push
sbb
xor
pop
loop
inc
cmp
inc
cmp
push
repnz
lea
jg
and
mov
or
movsl
sti
xor
sbb
loopne
data16
adc
jmp
std
loope
xlat
pop
cwtl
cmovl
xchg
xchg
nop
aas
in
in
jecxz
push
pusha
scas
mov
es
stc
xlat
xchg
shrl
inc
scas
ds
movsb
pop
cwtl
fwait
loopne
mov
ret
in
testb
pushf
push
arpl
bts
add
mov
push
or
stos
sub
sub
lock
js
sub
fsubrl
inc
adc
add
js
and
mov
push
aaa
ret
bound
mov
lret
adc
jns
loop
inc
mov
lahf
add
clc
push
mov
push
das
push
ss
xor
cmp
ds
dec
fstpl
lea
leave
int3
mov
cmc
rcl
xlat
and
jp
mov
mov
jnp
addr16
fidivrl
xchg
imull
pushf
insb
mov
sbb
dec
dec
or
ja
out
arpl
dec
mov
iret
pop
push
fnstsw
push
rclb
mov
roll
inc
jb
ljmp
or
push
mov
lret
test
std
outsl
adc
xchg
packsswb
inc
into
ja
in
ljmp
push
inc
add
jnp
mov
lods
sub
andl
push
xor
pushf
into
nop
ja
pop
pop
in
push
xor
inc
and
iret
mov
pop
gs
pop
in
inc
sbb
jg
dec
aam
and
push
sti
xchg
cmp
enter
jae
fcomps
mov
adc
fcomp
xchg
xor
addr16
pop
mov
jb
push
leave
cwtl
jae
test
orb
pop
sub
cmp
mov
adc
aam
hlt
mov
je
daa
mov
add
lret
inc
xor
push
push
in
xchg
ljmp
testb
out
negb
popf
popf
aam
cmp
scas
out
and
adc
std
jnp
daa
xor
dec
dec
int
stos
loope
adc
add
jbe
call
sub
mov
push
pop
out
sub
enter
je
xor
mov
inc
dec
lret
leave
sbb
ss
lds
jmp
sub
out
sub
aad
ss
sbb
push
jge
ja
pop
std
jle
cmp
mov
rcrb
mov
imul
mov
mov
addb
subb
xor
sbb
bound
push
inc
stc
jp
daa
popa
or
mov
stc
push
dec
mov
push
and
mov
xor
lock
add
xor
in
testl
test
dec
mov
fldenv
dec
xchg
cltd
adc
jp
sbb
xor
scas
cld
jmp
add
in
nop
sbb
enter
mov
ja
xlat
and
ficomps
imul
sahf
cs
loopne
in
in
push
into
mov
add
mov
push
mov
mov
inc
lods
cltd
add
mov
lods
ss
je
or
int
mov
jns
push
mov
xchg
pop
cld
sbb
lret
add
push
or
sbb
fidivrs
bound
cmpsb
dec
scas
test
pop
mov
mov
add
push
aas
sti
test
sub
inc
sbb
imul
mov
popa
inc
test
stos
and
popa
xchg
inc
notl
mov
out
lea
stos
pop
pop
jno
mov
cmp
lds
loop
insb
js
cmpsb
leavew
fldt
or
cmpsb
or
pcmpeqw
mov
js,pt
inc
add
sbb
sbb
inc
sahf
push
sbb
cs
repz
dec
das
add
mov
mov
gs
adc
push
fmull
or
dec
fs
arpl
inc
imul
xchg
fucom
js
mov
cmp
popa
push
lock
pop
sbb
and
dec
test
and
fcomps
sbb
cmp
pop
or
cmp
movsb
or
jmp
mov
jnp
push
push
pop
cmp
inc
sbb
lea
in
imul
jne
subl
into
mov
sbb
cmp
mov
mov
xchg
loopne
outsb
mov
mov
lods
out
ja
aam
dec
xor
rolb
fsts
insl
inc
cmp
iret
ljmp
psubb
jge
mov
bound
mov
sbb
mov
sub
outsl
add
inc
outsb
icebp
dec
sbb
dec
sbb
ret
in
mov
test
aad
mov
sbb
jb
mov
aas
add
jg
cmpsl
push
out
cltd
jmp
pop
paddusw
test
mov
jo
ja
rclb
into
or
lcall
sbb
and
cmpb
or
mov
stc
cs
andb
cmp
pop
xchg
sti
xor
mov
sbb
loopne
push
daa
cwtl
icebp
add
mov
fnstenv
stos
pop
stc
mov
xor
add
mov
lock
jl
dec
cli
mov
sub
xor
xchg
jae
jmp
push
pop
into
jnp
gs
jb
mov
loop
movsb
std
daa
outsb
mov
cwtl
shl
fs
pop
xchg
xor
xchg
ljmp
cmp
xor
mulps
inc
push
mov
rclb
dec
pusha
and
aaa
mov
aam
aas
dec
cmp
fiaddl
ds
lret
mov
std
out
mov
arpl
bound
push
dec
dec
xchg
stc
test
insb
out
jg
xchg
sbbb
mov
lret
jp
cmp
popf
cwtl
jecxz
mov
fldcw
addr16
arpl
sbb
inc
sarl
jns
cmp
lea
cmp
sub
test
cs
xorb
aas
inc
shll
sub
mov
test
stos
bound
or
or
push
pop
repnz
les
aad
idiv
stos
xchg
xchg
push
es
push
cmp
inc
xchg
inc
cmp
orl
arpl
cmp
add
inc
adc
outsl
movsl
arpl
addr16
aam
je
addr16
mov
in
cmp
pop
notb
add
xor
mov
call
in
jl
add
dec
push
xor
jbe
sub
adc
xchg
dec
add
arpl
divb
stos
scas
ret
cmpsl
xchg
mov
div
mov
lret
adc
imul
xchg
arpl
jns
xchg
and
nop
and
clts
insb
ret
stc
jg
lret
sub
icebp
or
xchg
mov
sbb
and
and
loop
xchg
and
xchg
pop
add
mov
rep
mov
pop
xor
pop
addb
mov
addb
sub
cmp
adc
or
or
scas
push
out
es
aam
cmp
push
sub
mov
mov
sahf
mov
mov
inc
stos
aad
ret
fsub
xchg
das
adc
add
das
sub
loope
frstor
fldl
push
mov
not
jle
dec
ljmp
xchg
jb
inc
push
sub
out
nop
bound
stc
or
adc
xor
adc
out
xchg
adc
push
inc
jl
and
daa
adc
mov
cmpsl
popf
fsubrp
push
jo
lcall
push
arpl
and
adc
test
insb
adcl
ja
lea
push
movsb
dec
push
jbe
andb
xchg
inc
ds
pop
mov
sbb
pop
pop
pop
cmc
push
xor
je
cltd
loop
fmuls
xchg
pushf
xor
lcall
sub
mov
flds
or
dec
fdivr
push
push
popa
push
aam
arpl
xor
push
mov
dec
mov
add
test
arpl
mov
pop
fcompl
lds
out
adc
lret
xor
pop
data16
daa
pop
sarl
push
es
xorl
push
stc
shl
test
rolb
push
mov
cs
dec
add
int3
mov
or
pop
lret
gs
mov
aad
rcr
and
imul
xlat
stos
adc
sti
xchg
das
jge
sti
sbb
inc
lock
jmp
pop
pop
jle
jno
ret
jmp
loop
arpl
mov
adc
adc
stos
mov
lds
dec
mov
into
jnp
mov
sbb
mov
mov
dec
out
xor
push
cmp
jg
mov
test
cld
dec
sbb
mov
cmpsb
push
ds
add
dec
and
outsb
sbbb
mov
add
jnp
imul
adcb
dec
test
insl
inc
xchg
jnp
xor
sti
je
cmp
lods
in
or
push
dec
in
mov
loop
sub
out
mov
inc
pop
or
xadd
jg
insl
pop
push
add
arpl
aam
aaa
push
repnz
jg
xor
pop
filds
jmp
icebp
iret
repz
add
cmp
mov
decl
push
sbb
leave
mov
mov
out
fwait
mov
call
in
mov
movsb
push
ffree
lahf
aas
in
sti
and
sbb
leave
jno
movsb
mov
push
daa
xchg
stos
repnz
push
stos
fistl
clc
loop
das
xor
gs
sbb
jl
push
in
movsb
mov
pop
jns
mov
sarb
das
adc
std
adc
cmpsb
icebp
fsts
shr
push
push
scas
mov
add
in
or
andb
dec
xchg
sbb
or
std
stc
test
jbe,pt
and
sbb
jno
jbe
bound
jg
jecxz
jle
jmp
std
popa
mov
xchg
or
inc
popf
fcompl
mov
sbb
push
inc
test
xchg
pop
push
adc
out
dec
ja
ljmp
ret
xor
pop
sbb
xchg
icebp
push
xor
cmp
add
mov
int3
dec
dec
arpl
in
addb
outsl
cmp
sti
mov
ja
jbe
jae
hlt
jle
and
jae
scas
int
aas
push
and
hlt
inc
xchg
cmp
outsl
sahf
data16
add
xchg
hlt
inc
pop
jb
outsb
bound
test
mov
cmp
xchg
cmpl
lods
jecxz
push
ja
idiv
iret
inc
add
mov
mov
or
inc
enter
outsl
loop
je
sbb
movsb
push
icebp
inc
push
into
es
ret
mov
test
sub
sbb
shlb
jp
ds
xlat
loopne
mov
cmp
pop
clc
pop
fstp
inc
pop
sbb
xchg
mov
mov
movsl
sub
push
rcl
fisubrl
inc
xchg
pop
push
nop
mov
lahf
sbb
test
xchg
inc
fisttps
addr16
out
or
xchg
cmp
pop
sahf
dec
rol
mov
cld
aas
lret
adc
sub
pop
or
jecxz
mov
adc
inc
add
mov
jmp
jecxz
scas
add
pop
cmp
jbe
repnz
bnd
mov
in
lock
loopne
in
jecxz
call
sbb
cwtl
jl
in
arpl
adc
call
in
outsb
pop
mov
xor
repnz
jbe
and
mov
and
add
jg
dec
inc
mov
mov
test
insb
ds
ror
lret
mov
sti
cli
popf
je
addl
inc
ljmp
push
notb
aaa
into
mov
mov
popf
sbb
imul
daa
outsb
sbb
or
outsb
sti
sbb
enter
fsubr
pusha
or
inc
cmp
cmp
add
ret
stos
xor
xor
mov
add
cs
xchg
jne
push
mov
imul
pop
mov
push
xchg
mov
cmp
cli
fnstsw
xchg
add
xor
adc
jmp
dec
mov
into
xchg
mov
test
pusha
sbb
sahf
leave
or
int
adc
cmc
ss
cmp
push
sti
or
pushf
mov
sub
adc
mov
push
je
iret
pusha
leave
out
shl
andb
insl
lret
aam
enter
jge
mov
adc
stos
pop
inc
fwait
mov
sub
call
pop
in
dec
pop
mov
lea
cmp
stc
push
popf
loopne
jp
mov
das
shlb
add
out
ffree
pop
jne
test
mov
cmp
mov
inc
sbb
add
scas
mov
dec
and
jle
jae
addr16
mov
jno
insb
fldl
mov
sti
loopne
xor
pop
jle
fwait
lret
shlb
or
fnstcw
rep
pop
or
xchg
cmp
out
mov
ffree
insb
cmpsb
inc
fisttpll
mov
out
popa
push
fsubr
daa
es
mov
cmp
push
loop
push
data16
or
ret
push
xchg
mov
mov
mov
ds
imul
or
subl
rcrb
xor
pop
aam
xchg
add
mov
js
jno
cld
push
aad
and
pushf
jae
ss
and
xchg
jmp
fxch
mov
gs
adc
xor
mov
or
and
add
push
jns
mov
and
sbb
xchg
in
and
push
test
adc
mov
mov
dec
sahf
icebp
push
pop
out
lcall
loop
push
inc
xchg
sbb
push
sub
iret
pushf
scas
mov
dec
scas
enter
push
sub
jle
mov
fcompl
mov
sbb
push
daa
repnz
add
je
jo
cmpsb
adc
mov
jbe
inc
jae
or
sbb
push
xchg
adc
mov
mov
push
mov
pop
dec
ljmp
add
push
pop
cmpsb
adcl
pop
xor
jmp
loop
mov
lcall
cld
adc
int3
mov
and
sub
add
inc
lcall
push
mov
rol
lock
jno
iret
shrb
or
xchg
movsl
add
lahf
and
dec
push
push
and
mov
add
test
push
lds
and
dec
int3
divb
aad
mov
push
mov
imul
push
scas
pop
jg
negb
push
xor
pop
push
movsb
or
aaa
leave
cmp
out
out
mov
sbb
push
push
jnp
insb
ja
and
lods
mov
add
sbb
cmp
adc
out
jbe
adc
and
orb
add
pop
in
mov
leave
mov
cmp
jo
add
mov
mov
hlt
mov
imulb
icebp
adc
arpl
xorb
lea
sbb
test
std
xchg
pop
and
scas
lds
test
mov
dec
adc
dec
sahf
mov
push
xor
xchg
adc
fimull
scas
bound
fldcw
int3
je
cmp
aaa
dec
rolb
lock
nop
inc
in
add
sbb
icebp
cmp
pop
xchg
test
ljmp
mov
rolb
cmp
ds
stc
scas
cmp
arpl
popf
and
jg
mov
push
adc
notl
sahf
fdivrs
and
shr
mov
mov
ret
out
lcall
lahf
cmp
das
inc
push
inc
repz
icebp
pop
addl
dec
popf
call
movsb
cld
or
or
inc
clc
pop
mov
xchg
sub
xor
mov
xchg
ficoml
lock
sbb
out
pusha
sti
loop
pop
loope
outsl
call
test
mov
shlb
lret
mov
fwait
sub
lahf
push
jg
and
out
shrb
lods
adc
add
sar
sahf
mov
jnp
mov
test
push
ret
jno
mov
aas
fsubl
cli
mov
fstl
pop
outsb
ja
sub
xchg
push
jb
movsb
xchg
aas
push
mov
imul
outsb
int
test
daa
idivb
rep
push
lods
orb
add
mov
pop
fcomi
jb
push
aam
jp
aas
int
test
pop
jb
jb
push
jnp
push
ret
mov
xor
pop
int
cmp
push
mov
dec
data16
xor
pop
repz
scas
xor
inc
movlps
or
out
mov
push
sbb
jno
adc
fiaddl
mov
sub
sbb
mov
push
movb
stos
lahf
scas
fwait
imul
adc
cli
xchg
cltd
fwait
rclb
sub
mov
xor
pop
ss
mov
cmp
sbb
lcall
repz
stos
out
jg
cmpsb
add
pop
adcb
push
orb
shlb
push
mov
cmc
sahf
mov
pop
mov
repz
fsubrs
cli
add
int
lret
cmp
mov
rorb
loop
add
push
dec
mov
mov
sbb
mov
push
icebp
dec
fcomi
movzwl
or
xchg
mov
inc
dec
or
push
or
mov
in
je
imul
pop
arpl
cmp
xchg
jl
jl
int
repnz
and
fadd
sbb
adc
imul
or
add
in
scas
cmp
call
pop
pop
mov
stos
cli
or
pop
mov
arpl
clc
addb
or
mov
cmc
xor
and
push
imulb
inc
pop
jnp
xchg
ss
pop
call
shr
dec
loope
dec
fidivrs
stos
push
jg
lahf
cltd
aam
cmp
pop
loopne
sbb
mov
dec
push
stc
sub
popf
call
pop
shr
mov
ja
and
xchg
inc
test
shlb
jl
xchg
push
xchg
mov
pop
out
jmp
fwait
sbb
fistps
cmp
cmp
xchg
fmuls
jno
aad
ret
cmp
femms
jp
std
push
bound
fstl
clc
fidivrl
xor
loope
cld
insl
jae
int
pushf
xor
sub
and
cmpsb
add
fsubp
push
add
or
sbb
xchg
or
les
or
mov
sti
xorb
in
cs
sbb
pop
mov
outsb
out
insl
sbb
add
shrb
std
dec
bound
xor
mov
jmp
cmp
inc
push
mov
pop
shlb
in
mov
or
adc
loope
test
and
sbb
fcmovnbe
cltd
jb
sbb
lock
fwait
inc
mov
sti
and
dec
aas
mov
cmc
out
pop
fiadds
cmp
dec
or
sahf
icebp
sub
addl
lds
int3
in
sbb
mov
ret
sub
mov
outsb
fldz
call
leave
clc
fs
xchg
add
sbb
cli
jle
movsl
xchg
fsqrt
leave
add
or
sti
push
mov
jecxz
jge
push
mov
dec
and
and
shll
mov
aad
xchg
xchg
jmp
pop
cmp
sub
mov
fmull
xor
cmpsb
jo
adc
fiadds
adcb
insb
insl
jbe
shlb
pop
dec
and
sbb
in
xchg
mov
inc
loope
inc
sub
dec
cmpsb
daa
adc
stc
repnz
inc
jg
add
jno
mov
fwait
pusha
andb
jno
shlb
orb
dec
pop
cmp
cmp
sbb
in
icebp
nop
ffree
cmp
imul
jge
xchg
sub
stos
data16
jmp
mov
xchg
mov
pop
xor
scas
cmp
scas
loopne
loop
inc
jne
and
testl
mov
test
movsl
test
in
jns
pop
mov
jp
cwtl
in
popf
cli
fwait
pop
adc
and
and
cli
in
push
add
sub
aas
jbe
scas
gs
jmp
sbb
inc
or
mov
sbb
in
bound
pop
xchg
mov
xchg
mov
adc
cmc
mov
sti
xchg
les
lea
dec
andl
cmp
adcl
add
aas
jns
and
xchg
jmp
xor
pop
fcomip
std
mov
inc
inc
mov
test
andb
aas
push
lcall
fs
sub
and
test
jne
add
mov
call
sub
jnp
ds
insl
je
in
mov
and
or
outsl
aaa
lahf
add
hlt
lds
add
rorl
mov
xor
das
xchg
sbb
jbe
test
outsb
pop
andl
int
pop
mov
idivb
lcall
ljmp
cmp
push
mov
lahf
out
sbb
mov
stos
xchg
gs
push
dec
js
cmp
imul
adc
fisttps
test
adc
sub
movsl
movsl
gs
dec
inc
add
cmp
jo
mov
push
or
jecxz
adc
mov
stos
rcl
and
pop
int3
outsl
test
decb
xchg
mov
push
test
sub
inc
stos
dec
std
inc
pop
cmp
cmp
sub
mov
pop
mov
daa
sbb
popf
sbb
inc
lret
into
adc
or
cmp
test
push
cmpsl
jb
loopne
rcr
or
push
les
xchg
gs
dec
or
mov
in
addl
sahf
out
aaa
jne
sbb
and
leave
xchg
mov
outsb
nop
testl
in
push
adc
dec
stos
mov
cmpsl
xchg
enter
dec
ss
or
and
jne
sub
out
shlb
das
sbb
add
xlat
in
sti
call
out
lods
xor
and
iret
add
loop
test
pop
or
or
or
out
mov
xor
xor
out
fdivrs
fimuls
push
aas
sbb
jle
mov
inc
mov
ret
xchg
ret
or
sarb
add
jp
jmp
subb
xchg
xor
mov
pop
fbstp
push
sub
ret
lcall
push
loopne
jecxz
frstor
data16
mov
cmc
cmpsl
rcr
js
xchg
das
pop
or
sbb
mov
or
push
inc
loope
fs
inc
cmpsb
pop
adc
ret
in
pop
xchg
or
mov
out
xchg
scas
scas
hlt
aas
sti
mov
iret
push
jnp
push
xor
jae
dec
xchg
jb
enter
ss
jo
mov
movsb
mov
loopne
jmp
xchg
add
fidivs
push
mov
mov
adc
sarl
out
iret
and
gs
dec
mov
mov
push
pop
fwait
cwtl
mov
jne
loopne
dec
pop
jg
mov
repz
adcl
jp
lods
jle
cltd
add
xor
clc
cld
int3
outsb
stos
aaa
jnp
push
or
fiaddl
adc
in
mov
ss
jns
mov
xchg
ds
push
shlb
dec
cld
push
pop
mov
testl
xor
pop
js
pop
xchg
ficoms
push
adc
jbe
xor
int3
fildl
lock
or
js
movsb
cmpsb
inc
mov
stos
cli
xchg
mov
push
jecxz
in
in
and
inc
and
push
adc
data16
or
xchg
fwait
into
xlat
loopne
aaa
push
fnstenv
mov
inc
push
dec
inc
dec
arpl
fisttpl
aad
add
rclb
lahf
insl
xor
pusha
or
inc
cwtl
leave
int3
mov
aaa
push
loopne
dec
jne
pop
xchg
jge
cmpl
out
push
pop
add
pop
push
dec
xorl
out
hlt
test
int3
fildl
cmpsl
nop
mov
dec
aam
inc
out
arpl
aas
testb
dec
lret
or
popa
add
push
dec
inc
lret
icebp
xchg
shll
inc
dec
mov
mov
mov
jo
idivl
lods
sub
dec
in
mov
call
icebp
addr16
adcb
out
sarb
dec
movsb
jb
push
and
pop
inc
ss
pop
jnp
add
mov
mov
out
int3
pop
xor
mov
fisubl
mov
dec
cmc
xor
pop
ss
std
inc
leave
enter
sbb
pushf
loop
cld
xor
gs
fwait
pop
cmpsl
mov
cmpsb
fcmovnu
das
mov
std
lods
pop
mov
or
cmpsl
movsl
test
inc
add
jno
add
dec
gs
cmpsb
js
pop
ja
hlt
mov
scas
mov
lret
inc
xchg
push
cmp
mov
imul
popf
stc
dec
pop
loop
fwait
mov
mov
sbb
mov
leave
aas
add
jbe
sbb
sar
out
inc
and
xchg
cmp
mov
sub
aam
mov
xchg
sub
sbb
and
adc
mov
push
loopne
pop
call
xchg
dec
mov
rcll
insb
adc
lea
mov
imul
sub
cs
cli
scas
jmp
int3
xor
out
and
inc
inc
lock
pop
pop
mov
mov
subb
mov
inc
sub
jl
push
or
lret
pop
or
jge
in
cld
popf
push
out
lahf
mov
fdivs
cwtl
mov
loopne
jae
mov
add
stos
mov
add
rorb
and
or
daa
adc
jmp
mov
wbinvd
mov
xchg
push
repz
pushf
cmp
out
jno
imul
adc
mov
inc
lret
push
inc
leave
and
sbb
mov
fwait
scas
pushf
mov
std
aas
push
sahf
sub
clc
adc
jbe
gs
sahf
sub
in
mov
mov
cltd
ret
inc
and
fucomp
aam
sbb
lahf
sub
leave
lahf
orb
jno
xor
int
mov
add
pop
push
jle
add
xchg
std
test
cli
dec
xchg
out
add
sti
subl
xor
adc
lcall
jbe
xchg
testb
mov
test
mov
into
push
in
and
jge
fdivrs
pop
loopne
popl
lods
aam
and
scas
sbb
xchg
cmp
js
adc
sbb
adc
inc
repnz
cmpsl
les
repnz
pop
sbb
rorb
aas
enter
hlt
and
sub
jbe
add
lds
jle
sub
mov
je
inc
repnz
imul
push
mov
sub
aam
aam
push
pop
lods
fistpll
inc
and
pusha
xor
jns
mov
or
mov
jbe
mov
popf
fadd
cmp
and
push
jmp
sub
enter
movsl
or
jo
adc
rcrl
aad
jp
jecxz
loopne
std
call
pop
pop
sbb
imul
add
mov
or
fsubr
loope
adc
mov
pop
leave
mov
jno
jbe
scas
lods
jecxz
sbb
mov
jb
test
mov
add
cmpsb
fs
subl
cmp
mov
insl
data16
test
rcrb
pusha
movsb
mov
pop
pop
cmp
sbb
adc
hlt
popa
gs
ret
mov
cmpsb
je
xor
mov
ljmp
lods
push
insl
xor
xlat
dec
jge
lahf
push
les
adc
repz
lds
xchg
xlat
adc
scas
ljmp
push
mov
sub
sbb
aaa
int3
in
arpl
test
stos
push
into
mov
lret
push
push
lcall
adc
out
sbb
aas
add
add
cmp
xchg
fs
dec
adc
insl
leave
nop
mov
inc
xchg
push
inc
push
jae
adc
mov
push
rcrb
push
xor
jmp
loop
fmuls
leave
cmp
xor
mov
aaa
sub
daa
out
xor
cmp
sarl
rorl
pop
or
subl
cmpsl
sub
out
loope
sbb
add
pop
and
roll
insl
add
out
call
mov
xchg
fisubrl
test
and
xor
divb
xor
add
pop
pop
mov
push
das
add
mov
fbstp
add
lds
les
scas
push
movsl
jno
ja
jecxz
dec
scas
jnp
js
jnp
test
js
sbb
cld
sbb
xchg
mov
inc
push
jae
aam
add
test
repnz
js
mov
adc
jb
lds
mov
jne
call
test
mulb
loopne
fdivr
lcall
in
ds
rcrb
push
pusha
jne
lds
jp
fnsave
shll
scas
pop
test
push
mov
mov
and
mov
push
sti
cld
sub
xchg
xchg
sbb
int3
mov
pop
add
push
push
insl
pop
xchg
or
pushf
mov
jp
inc
aad
mov
fmul
daa
loopne
xlat
jle
inc
arpl
inc
push
enter
rcrb
xor
subb
inc
mov
inc
pusha
inc
lahf
ds
pop
jne
sbb
push
add
dec
test
out
jae
push
and
test
fwait
int3
xchg
mov
sub
mov
xor
lods
out
out
dec
mov
mov
test
outsb
push
xor
pop
popa
out
icebp
mov
adc
iret
sbb
add
lcall
jb
ds
mov
xor
sub
inc
ja
sbb
push
or
pop
stos
pop
mov
out
push
mov
or
sbb
or
push
andl
and
mov
popf
out
jns
add
insb
lahf
and
mov
pop
bswap
pop
ret
sub
jle
xchg
leave
lds
and
in
clc
adc
jp
scas
iret
pop
pop
cmc
pusha
or
orb
mov
aaa
stos
lahf
loop
cmpsl
pop
icebp
sbb
push
out
jg
jns
in
inc
pop
push
lds
add
or
mov
cltd
cmp
mov
fisttps
inc
loopne
mov
leave
add
jecxz
pushf
jg
fwait
jl
in
xor
mov
cmpsl
lock
sbb
in
sbb
incb
es
push
sbb
adc
fdivl
jmp
mov
aaa
imul
mov
jnp
jbe
mov
and
inc
sub
lds
lahf
lret
jmp
jbe
add
test
movl
sbb
nop
rcll
rclb
std
movsl
fbstp
sbb
adc
sbb
and
mov
rcll
sti
and
lahf
push
cmp
dec
ljmp
hlt
lcall
mov
int
jbe
mov
push
push
shll
fsubr
mov
fs
inc
push
mov
pop
stos
nop
jb
das
pop
test
sarl
mov
dec
cmp
mov
mov
cld
pop
data16
adc
cmp
push
cmp
ret
xor
sbb
rcrb
xorl
xor
movsb
into
mov
cmp
push
xchg
and
cmp
adc
mov
loopne
jle
cmp
bound
test
int
mov
sarb
cmpsb
mov
cmp
fldenv
sub
jne
dec
jnp
outsb
mov
imul
lea
scas
mov
sbbb
call
mov
push
mov
xor
es
lcall
int
xchg
ret
cmpsl
push
adc
cmp
out
in
cmpl
adc
cmp
and
cmpsl
xor
push
xchg
xorl
push
push
fsubrp
jmp
nop
stos
lahf
dec
mov
testb
and
xlat
mov
cmp
outsl
push
push
adc
dec
cmc
xchg
icebp
pop
fwait
std
cmp
lret
insl
and
xor
outsl
xchg
xorl
jne
sub
lods
stos
enter
inc
fstpl
in
insb
movsb
rcr
shlb
int3
cmp
stc
sarl
into
xchg
clc
je
lods
mov
mov
leave
jnp
shl
sbb
test
push
fsts
mov
rcrl
dec
lcall
or
sahf
hlt
push
xlat
pop
push
jne
and
mov
pusha
mov
pop
push
inc
xor
icebp
les
enter
mov
push
in
inc
sub
jnp
push
inc
ret
stos
xchg
pop
xchg
mov
mov
bound
clc
xor
push
mov
fistpll
mov
push
fs
xchg
dec
pop
jecxz
mov
and
aaa
inc
xchg
stc
and
cmp
pop
icebp
inc
data16
movsl
sub
xor
rorb
fstpl
loope
push
cmp
fcmovnb
popf
push
and
xchg
adc
lock
dec
loop
mov
pop
cmp
mov
sahf
dec
push
sbb
push
icebp
stos
and
pusha
lock
sub
xor
mov
push
clc
jae
lods
inc
add
je
xor
fisubs
rcll
shl
mov
inc
cwtl
sahf
js
shrl
dec
pop
pushf
push
dec
xchg
jbe
mov
jo
mov
lcall
inc
xchg
xchg
js
xchg
add
out
push
add
dec
cmp
add
scas
insl
iret
mov
mov
sub
mov
shr
mov
insl
xchg
dec
sbb
sbb
stos
jge
or
inc
out
dec
pop
out
movsl
in
call
test
scas
cmp
add
xchg
leave
adc
and
lds
mov
mov
andb
mov
popf
mov
lock
add
jnp
push
cmpsb
jnp
outsb
adc
nop
dec
gs
insb
inc
popf
orl
xor
inc
pop
loopne
mov
or
xchg
cmpsl
fistpll
dec
mov
mov
pop
int
xchg
inc
ljmp
out
pop
in
xor
outsb
movsb
call
fisttpl
cmp
fisttpl
insl
fst
stos
mov
ljmp
imul
inc
jno
into
in
xchg
xchg
lea
movsl
std
sbb
popf
inc
or
repz
pusha
jne
cmpsb
cmp
popa
adc
fcmovbe
or
fdivrl
lret
inc
es
sbb
sbb
lcall
pop
push
add
mov
pop
mov
mov
lock
scas
addr16
adc
dec
insb
inc
loope
inc
cmpsb
out
push
mov
mov
popa
cli
sbb
push
js
xchg
push
ljmp
cmp
ss
cwtl
dec
xchg
mov
and
stos
out
cmpsb
and
fs
xor
or
lahf
mov
cmpsb
scas
add
movsl
dec
jecxz
mov
pop
shll
sub
fs
and
movsl
jo
jmp
cs
rclb
pop
cld
test
inc
fwait
fs
adc
jns
das
add
fbld
nop
aam
jb
gs
xchg
xchg
or
sub
sti
lds
jo
arpl
mov
addb
mov
add
fisttps
sti
cmpl
es
sbb
or
repz
add
fcompl
sbb
orb
pop
outsb
jle
rcr
cld
jl
push
sahf
lcall
mov
popa
icebp
jbe
stc
mov
mov
dec
mov
xchg
setbe
les
test
or
inc
jno
pop
xlat
pop
xorb
sub
adc
negl
pop
xorb
rorb
xor
test
pop
push
idivl
fdivs
mov
mov
pop
mov
ljmp
loop
push
dec
not
lahf
in
and
imul
mov
pop
stc
mov
imul
test
insl
mov
lcall
pusha
jo
sub
out
icebp
ds
adc
sub
adc
pushf
mov
mov
je
stos
mov
test
sbb
cli
out
xchg
call
dec
xchg
int
mov
hlt
push
aaa
pop
jnp
aam
xchg
leave
int3
cld
dec
lods
test
adc
or
jp
divl
lods
aam
mulb
cmp
fldt
dec
push
adc
xor
push
outsb
inc
addr16
push
mov
jnp
push
cmp
cmp
mov
dec
cmp
test
sub
mov
test
xor
test
inc
xchg
mov
mov
adc
addr16
inc
jo
inc
cwtl
bound
out
add
cmp
popf
and
jp
repnz
test
loopne
push
xchg
sub
mov
sbb
mov
es
add
adc
push
sbb
movups
fsub
xchg
xchg
insl
fwait
test
cmpsl
out
das
mov
push
arpl
aaa
dec
ret
std
adc
stos
or
lods
rorl
pop
inc
xchg
cs
push
jns
imul
pop
xchg
pop
lahf
jno
aas
in
adc
cmp
movsb
aam
mov
rcrl
adc
lea
sarb
jae
loop
lds
jns
and
push
mov
int
icebp
lret
xchg
fnstcw
negl
pop
out
add
sub
into
dec
scas
cmp
xchg
enter
in
push
cmp
in
cmp
mov
ret
mov
notl
mov
mov
xchg
cmp
xchg
and
sahf
in
inc
dec
ljmp
lea
xor
fs
shll
jb
and
dec
ss
mov
repnz
icebp
subb
cmpsb
adc
xchg
out
cmp
xlat
mov
dec
int
sub
outsb
das
push
data16
jbe
cltd
and
mov
lds
pop
inc
dec
inc
mov
and
fstpl
or
pop
mov
out
imul
push
dec
inc
enter
sbb
loopne
add
es
xorb
out
inc
out
rcl
sub
adc
hlt
dec
xchg
jl
push
push
jno
fwait
hlt
xlat
push
xor
mov
movsl
cmpsl
aas
mov
mov
insb
ds
cwtl
enter
aam
arpl
repz
inc
stc
add
jle
iret
cli
and
sbb
mov
loopne
jg
cmc
push
sub
fistps
cs
fadds
pop
nop
pop
add
push
fildl
mov
mov
mov
mov
dec
or
mov
pop
in
ss
mov
fldt
pop
pop
dec
dec
ja
fsubrs
push
andb
incb
dec
inc
jbe
push
test
xorl
pop
cwtl
stc
jp
out
xchg
cmp
adc
xchg
mov
imull
dec
xor
lock
sub
cwtl
insb
cmpsl
xchg
pop
in
rol
push
sbb
outsl
xorb
movsl
filds
bound
dec
xor
repz
enter
or
push
loope
fwait
insl
xor
mov
stos
mov
test
std
ljmp
sbb
sbb
push
xchg
fadds
roll
aaa
mov
popw
fidivl
cli
int3
inc
ret
je
aaa
scas
sub
mov
loopne
imul
pop
mov
les
repnz
push
dec
fistl
jle
mov
dec
push
fsubs
cmp
movsb
loope
and
sub
jb
iret
sub
ja
hlt
mov
fistl
cld
jl
shr
insb
push
ret
xor
fidivs
ljmp
neg
cmp
xchg
mov
aam
pop
outsl
out
es
int
push
mov
mov
faddl
nop
adc
jb
es
fwait
sbb
aad
mov
jg
std
mov
mov
loop
mov
fisttpl
scas
lret
outsl
mov
jns
push
adc
adc
nop
decl
into
cmp
adc
inc
mov
push
in
cmp
popf
xchg
xchg
std
sub
jp
stos
mov
mov
xchg
pop
popf
call
mov
jl
aas
inc
stos
decb
mov
imul
dec
jbe
add
add
les
pop
pop
ds
push
pop
xchg
and
lods
in
xor
fistps
push
loop
test
adc
jne
xor
jecxz
les
mov
lea
test
cmpsl
cmp
shlb
adc
jo
cmp
or
sub
xor
les
rorl
icebp
jmp
jne
movsb
and
xchg
dec
xchg
mov
lret
std
pop
nop
adc
lea
pop
mov
push
dec
and
mov
insl
leave
dec
jb
fwait
mov
ds
sbb
push
jb
outsl
cmp
adc
into
das
fistpl
pop
icebp
mov
and
pop
negb
inc
cmp
inc
jecxz
cmp
push
arpl
fsubr
dec
adc
aas
in
push
lock
or
sti
mov
jle
mov
pushf
test
pop
std
adc
imul
mov
test
push
push
xchg
test
mov
or
ljmp
int3
pusha
stos
imulb
fwait
cmp
clc
pop
mov
sub
and
xor
mov
xor
cmc
dec
loop
pop
jo
lea
loope
jp
fs
repnz
cmp
insl
mov
pop
repnz
mulps
and
push
das
cld
inc
cld
sub
pop
gs
imul
push
mov
cli
jne
cmp
adc
jae
jnp
jns
push
leave
cmp
mov
out
xor
mov
stos
sbb
jnp
mov
mov
jge
inc
popa
iret
xchg
xor
addr16
mov
inc
out
aas
dec
mov
add
jmp
popa
loopne
jmp
fadds
mov
pushf
scas
aaa
popf
icebp
inc
xor
lret
popf
addr16
pop
mov
push
insb
mov
frstor
push
out
in
rclb
mov
xlat
push
add
jg
and
aam
mov
dec
pop
or
inc
xor
cmp
nop
dec
xchg
adc
out
js
and
mov
mov
pop
pop
fninit
cmp
in
adc
es
cmp
mov
lcall
fwait
pop
push
cltd
or
sbb
adc
xor
leave
repnz
pushf
push
xor
mov
iret
inc
testl
mov
int3
es
and
mov
and
jge
or
jo
mov
pop
out
adc
cs
aad
and
mov
xchg
lahf
push
mov
mov
loope
push
or
ficoms
mov
or
outsl
cld
add
mov
mov
aad
or
cli
popf
push
mov
shlb
sarl
jle
ljmp
jo
xor
and
and
inc
test
inc
xchg
mov
call
jg
add
inc
dec
xorb
push
sub
cli
push
aaa
xchg
mov
fsub
mov
in
leave
inc
add
mov
pop
rorb
or
test
fbstp
mov
imul
iret
xchg
xor
popa
ret
mov
nop
and
jbe
pop
aad
mov
push
add
or
js
push
sbb
loope
jb
lahf
movsl
fistpl
dec
in
sub
pop
inc
loope
mov
sbbb
push
ja
dec
or
dec
shrl
das
pop
cmc
add
sti
stc
cmpl
popf
stos
movsl
popf
movsb
mov
push
sarb
pop
mov
pop
das
jg
aas
mov
xlat
xchg
adc
mov
pop
jbe
cmpsb
fcomps
fstps
in
cmp
mov
xor
cmpsl
xor
nop
aas
ret
push
xchg
mov
incl
add
lcall
and
je
xchg
daa
cwtl
push
xor
ds
or
cmp
jp
sub
and
out
fnstsw
xchg
adc
call
add
mov
dec
lret
mov
imul
cs
and
pusha
testb
cmp
jo
clc
mov
or
lret
push
cmp
je,pn
ret
mov
lea
hlt
out
xchg
jp
and
push
adc
jbe
ret
das
fists
jbe
sahf
cmp
push
push
push
das
jecxz
movsl
insb
or
mov
jge
mov
iret
sub
push
fidivrl
sbb
push
pop
test
bsr
pushf
scas
aad
push
nop
in
xchg
cmp
add
cmp
cs
add
out
or
push
jae
sbb
bound
pop
test
sub
fcom
pop
ss
push
inc
subb
lret
into
inc
xlat
fisubs
mov
pop
loop
test
mov
and
push
loop
aam
jl
cld
shll
adc
clc
or
and
xor
push
inc
xchg
or
cld
out
ja
jbe
stos
lahf
push
mov
push
pop
into
shl
insb
incl
aas
pop
mov
mov
in
cmp
mov
xorb
aas
movsb
ret
sti
inc
loop
lret
xchg
and
pop
adc
xchg
mov
out
scas
addr16
sub
cltd
mov
sbb
sub
add
dec
cmc
lret
shll
je
cwtl
movsl
pushf
ret
pop
cmpsl
mov
clc
sub
sub
cs
dec
test
mov
fcomp
jo
xchg
cmpsl
or
inc
dec
and
push
xchg
test
mov
or
mov
push
bound
sysexit
dec
je
xor
add
pop
or
jbe
pushf
daa
data16
arpl
add
mov
fistl
mov
loope
fadds
and
cmp
or
or
inc
ljmp
sub
rep
jb
dec
and
sbb
shrb
clc
loope
in
cmp
mov
scas
stos
adc
xor
sub
movsb
call
jmp
sbb
mov
insb
leave
negl
pop
push
ds
xor
adc
cmpsl
fdivs
lcall
bound
stos
outsb
mov
xchg
jecxz
loope
sub
je
stos
test
sub
or
add
cmpsl
add
dec
or
inc
int3
js
fwait
rcl
lahf
test
in
mov
mov
cmp
ss
add
sub
movb
popa
jg
out
into
mov
and
xchg
mov
mov
dec
xchg
jae
mov
lret
negb
push
leave
in
or
mov
in
mov
fcoml
inc
dec
imul
add
mov
cmp
lea
dec
pop
movsb
cmp
push
cmpsl
jb
sbb
mov
dec
testl
inc
jle
cmp
bound
dec
dec
jecxz
repnz
pop
cmpsb
add
imul
out
pop
icebp
xchg
shrb
mov
pop
inc
rcrl
orb
insb
xchg
mov
lahf
or
je
stos
mov
cld
ljmp
cmp
mov
jmp
cmpsb
jae
xchg
sub
xor
push
dec
lock
pop
push
and
std
cmp
and
pop
pop
xchg
jbe
mov
dec
xchg
js
test
mov
repnz
jae
ja
cmc
pop
push
pop
xchg
xor
inc
jmp
int3
aam
adc
cmp
inc
cmpsl
out
insb
inc
jno
mov
push
in
sarl
cs
fcmovu
push
pop
pop
fs
sti
jb
sbb
mov
jl
dec
scas
repnz
call
ret
push
insl
jg
testb
mov
mov
imul
mov
mov
enter
lds
xor
xchg
adc
mov
pop
fisubs
mov
in
jbe
test
and
dec
cmp
xchg
cs
xchg
or
sbb
pop
pop
pop
inc
cmpsb
dec
jle
and
roll
jno
xor
int3
dec
cmpsl
cmp
loop
imul
rcrb
and
pop
jo
and
rcrb
push
sti
xor
sbb
addr16
jle
andl
cli
pop
mov
xchg
std
fs
cmp
jb
mov
cmp
out
cltd
cmp
andb
cld
xor
jo
repnz
lock
call
gs
mov
inc
xchg
adc
xchg
test
cli
and
mov
jno
mov
jge
add
push
push
imul
loopne
push
sub
push
jl
iret
fwait
stos
jb
push
xchg
mov
mov
adc
ja
repz
xchg
fdivs
or
adc
js
sub
adc
push
lea
xor
sbb
stos
fidivrl
mov
sub
mov
add
and
icebp
xor
sti
stos
push
push
sti
imul
enter
insb
loopne
push
xchg
gs
mov
add
jns
xor
out
mov
inc
cmp
xchg
sbb
ret
std
dec
or
inc
ficoml
outsl
aad
mov
push
std
pop
lods
jle
cld
push
into
jmp
psubq
inc
adc
dec
cmp
clc
fdivrl
scas
rol
cmc
sahf
push
pop
and
mov
jo
cmp
shll
and
mov
push
sbb
fldt
push
xor
aam
test
aas
cmp
sbb
int
push
test
pminsw
je
scas
mov
movsl
flds
mov
pop
pop
repz
pop
mov
loopne
pop
pop
jb
fldcw
cs
add
pop
jb
mov
push
sub
dec
movsb
xchg
dec
push
test
loope
arpl
xchg
dec
subb
in
cs
inc
dec
loope
and
pop
in
mov
lods
push
cs
lret
fdivrl
into
push
xchg
push
dec
push
inc
cli
cmpsb
imul
sti
outsl
and
int
movzwl
adc
xor
mov
and
push
mov
add
pusha
aaa
jl
xchg
xchg
mov
gs
or
in
sbb
bound
mov
xor
xor
mov
xchg
add
insl
mov
mov
add
ja
inc
add
inc
lahf
xchg
leave
dec
dec
pop
push
mov
pusha
pop
dec
pop
and
mov
mov
jne
lret
sarl
test
cmpsl
push
pop
pop
popa
fcmove
js
jmp
lcall
jmp
pushf
pop
nop
cmc
or
and
adc
lahf
xchg
xchg
idivl
sbb
push
sar
in
insb
jp
stos
mov
ds
ret
aaa
xor
push
outsb
in
adc
jno
ljmp
jbe
call
xor
or
insl
repnz
mov
pop
sub
orl
jl
lock
popf
add
add
jle
adc
inc
scas
inc
sub
nop
push
add
jb
jge
lods
pop
shll
push
lahf
stc
stos
and
and
test
mov
mov
fsubl
fprem1
push
pop
jno
push
push
lods
insb
or
pop
clc
div
int3
out
ljmp
inc
dec
shl
sub
sub
test
cmpb
jb
xor
push
mov
or
ja
shll
xchg
sub
mov
mov
add
push
pop
push
push
sbb
add
jge
repnz
xchg
mov
in
rep
aaa
push
and
fdivr
shrb
or
clc
cmp
pop
xor
in
cmp
cmc
jg
mov
push
in
aam
inc
dec
sahf
cli
jge
iret
inc
xchg
and
fisubrs
aad
fwait
cli
stc
dec
orb
cli
lds
aas
scas
fisubrl
insl
xchg
pushf
dec
mov
sar
mov
adc
arpl
ja
dec
jl
push
roll
mov
or
mov
ja
push
or
ss
cmpb
addb
js
push
jb
push
rorb
mov
xchg
or
jns
and
add
cwtl
cmp
fdivrl
xor
imul
nop
pop
pop
sbb
adc
clc
enter
subb
fwait
lods
mov
mov
adcl
inc
arpl
push
ds
subb
clc
inc
lahf
out
cmp
fsts
add
inc
push
pop
push
ud2
xchg
adc
je
inc
fidivl
loope
ljmp
or
pop
push
pusha
pop
rolb
push
push
lcall
aaa
lret
or
cmc
push
cmc
xor
or
arpl
dec
mov
aad
mov
sub
or
rcrl
mov
test
mov
test
xor
imul
push
nop
mov
call
cld
lahf
icebp
and
jge
inc
test
pop
cli
mov
jmp
inc
shl
scas
xchg
outsl
push
sbb
mov
xor
add
push
mov
adc
mov
xor
or
mov
popf
in
cltd
inc
movsl
fistpl
popf
pop
das
pop
insl
mov
mov
adc
hlt
lea
fsubp
call
jns
sbb
shrb
test
movb
sahf
iret
and
and
int3
adc
push
inc
in
jmp
sbb
fcomps
or
dec
xor
push
pop
fstpl
xor
xor
inc
and
push
lret
mov
mov
sub
cmc
mov
xchg
sbb
mov
jb
les
in
cmp
pop
sahf
lahf
inc
adc
lcall
xlat
insb
pop
lods
or
cwtl
push
xchg
shrb
insl
arpl
mov
cmpsb
imul
mov
nop
mov
mov
cmp
and
xchg
xor
add
addr16
hlt
out
pushf
sub
cli
insb
xchg
mov
mov
mov
mov
scas
outsb
test
push
ljmp
push
ljmp
xlat
xchg
jmp
xlat
int3
xor
jecxz,pt
sti
test
imul
je
jecxz
cli
mov
jmp
xchg
addl
aad
adc
mov
xchg
mov
pop
loope
iret
ret
shll
cmpsl
xchg
clc
mov
and
lcall
mov
and
jo
shll
jp
pushf
nop
mov
mov
xchg
xchg
loop
cmp
pop
mov
lcall
jb
lds
into
mov
jo
and
jo
mov
xor
out
push
ds
rcrb
rcrl
lahf
stos
sbb
out
jns
movsl
stos
sarb
pop
mov
cmp
push
xchg
xchg
xor
scas
test
jne
imul
mov
lret
pop
push
cli
je
test
cmp
lret
adc
hlt
roll
sti
andl
daa
push
or
or
sahf
rorb
movl
jne
sbb
mov
fstpl
clc
adc
std
pop
fisttpl
mov
add
push
cmpsl
pop
das
imul
stos
xor
xchg
xor
jae
cld
lock
lea
sti
lods
cli
call
xchg
fimuls
inc
scas
xor
insb
xchg
repz
repnz
push
lods
sbb
sarl
inc
adc
sub
stos
fs
dec
jmp
data16
cmp
push
cli
js
daa
notl
xchg
jb
insb
jne
pusha
xor
stos
pop
popl
mov
mov
cmpsb
test
lods
mul
dec
in
and
pop
inc
and
pop
add
sub
lods
in
leave
or
fsubs
mov
call
jecxz
inc
cmp
jns
mov
cmp
scas
xchg
push
jns
popf
add
hlt
or
push
in
out
xchg
pop
les
and
rcr
clc
call
dec
xchg
mov
sub
movsl
sub
jns
push
inc
add
mov
mov
push
cwtl
outsl
pop
repnz
mov
movsb
or
add
inc
shlb
in
push
daa
dec
mov
inc
adc
out
adc
cmp
shll
outsb
mov
add
sub
add
and
jo
push
aas
mov
mov
sub
cmc
mov
pop
int
enter
cmc
scas
stc
repz
jmp
movsb
adc
movsl
jns
repz
pop
cwtl
pop
xor
pop
cmp
pop
inc
test
push
enter
ja
pusha
xchg
xchg
out
xchg
dec
dec
fwait
dec
mov
or
ja
jns
ljmp
push
sub
and
out
pop
gs
mov
loope
push
loop
push
les
jo
push
aaa
sar
in
and
int
addr16
lahf
testb
mov
and
jle
addl
sti
add
xor
fcoms
jle
popf
mov
movsb
out
jmp
mov
int3
inc
mov
or
cmovl
pop
xchg
inc
pop
xchg
xor
sbb
cld
aas
iret
add
xor
xchg
cmp
popa
ja
cmpb
mov
pop
sti
cmp
sbb
xchg
int
inc
aas
adc
xorb
and
and
pop
xor
dec
add
fcmovu
scas
cmp
clc
jno
mov
adc
xor
jne
dec
inc
cmpsl
and
cmp
dec
mov
lea
fmuls
mov
inc
adc
mov
aaa
repz
gs
fldz
jno
mov
pop
es
dec
mov
fmull
in
push
cmc
das
jne
mov
stos
jbe
out
sub
outsb
mov
fidivl
loop
mov
or
mov
inc
jb
out
sbb
and
data16
dec
stos
mov
dec
call
add
loopne
jae
insb
rcrl
gs
dec
not
paddusw
and
adc
or
dec
mov
sub
push
sbb
mov
nop
popa
mov
sti
inc
les
sbb
mov
pop
add
popf
xchg
mov
dec
enter
and
xor
pop
inc
cli
in
mov
lahf
test
outsl
inc
or
adc
xor
enter
pop
arpl
lcall
stc
mov
rol
dec
push
aam
inc
push
fsubl
aas
cltd
inc
adc
xor
js
sti
inc
insb
push
dec
shrb
adc
mov
sub
and
enter
popa
inc
outsb
cwtl
mov
dec
xor
cli
cmpsl
xor
lds
lock
jae
cmpsb
adc
fiadds
fsubrl
pop
sbb
xchg
xchg
movsl
or
mov
and
mov
mov
inc
or
out
sub
in
out
fcompl
pusha
sub
gs
inc
sbb
xchg
mov
bound
jbe
loopne
mov
mov
loop
inc
dec
daa
push
mov
out
test
outsb
icebp
cmp
xor
cmpsb
xchg
jg
iret
insb
hlt
or
repnz
dec
outsl
push
negl
and
incl
adc
outsl
das
outsl
mov
xchg
lock
loope
mov
xchg
jo
aam
mov
pop
call
pop
test
test
jl
mov
loopne
out
pop
test
das
cmpsb
std
outsl
push
cld
sub
shl
mov
adc
mov
stos
je
mov
dec
cmp
cmpsl
mov
cmp
pop
std
dec
mov
aaa
out
inc
push
fdiv
rorl
mov
jae
leave
inc
test
stc
cld
push
jp
cld
adc
mov
sbb
jo
out
cmp
leave
bound
pop
loope
xor
int3
xor
or
pop
pop
add
pop
mov
xor
push
leave
or
add
pop
dec
cld
xlat
fmul
jnp
sub
xor
or
jl
jmp
jbe
cmp
mov
shll
jb
sbb
clc
fiaddl
sbb
in
sub
orb
and
pushw
mov
cmc
jno
xlat
out
into
cltd
fisttpl
xchg
lock
inc
insb
push
pop
push
sbb
mov
mov
cmpsl
push
dec
ret
mov
sbb
mov
loopne
pop
inc
inc
and
test
cs
sarl
or
jle
mov
sbb
dec
xchg
push
dec
cmp
shl
and
add
cs
sub
adc
repnz
enter
leave
jno
and
dec
lock
stos
in
inc
fs
arpl
nop
add
int
sbb
pop
or
sbb
mov
or
mov
push
enter
mov
sbb
aad
ljmp
in
loope
sbb
cmc
addr16
inc
inc
push
shrl
clc
and
out
mov
out
add
push
mov
mov
sub
cli
sbb
in
dec
push
icebp
cmpsl
or
push
push
push
pushf
sbb
icebp
test
lods
leave
mov
cmpsb
jge
fisttps
adc
sarb
sbb
bound
and
push
jo
iret
std
jle
xlat
jge
mov
cmp
sub
mov
popl
xchg
repnz
ja
and
jmp
icebp
xor
mov
pushf
push
popf
hlt
pop
imul
pop
push
aaa
pop
bnd
mov
fsubs
push
dec
arpl
mov
lock
scas
jb
jle
jg
inc
outsb
and
inc
xchg
into
push
addr16
inc
aam
ret
testb
ds
jo
mov
pop
out
mov
mov
sahf
cmp
sub
clc
sbb
sbb
jg
rcr
movsl
mov
sbb
scas
push
and
rcrb
xchg
pop
and
inc
or
pop
add
scas
sbb
aaa
xchg
nop
adc
lock
jl
inc
cmp
jge
cmp
mov
push
inc
jge
jns
aaa
int
gs
mov
outsl
xchg
cli
fisttpl
mov
pop
push
xor
dec
out
dec
sub
mov
jnp
sbb
loopne
sub
test
fs
les
xor
or
or
dec
into
push
inc
lret
scas
cmp
inc
cmp
pop
add
cwtl
xor
dec
bound
push
dec
add
mov
cmp
addr16
pop
mov
movsb
xor
adc
cmc
xor
mov
mov
pop
movsb
out
or
es
mov
sbb
push
stos
xlat
push
fidivrl
xchg
mov
inc
push
popa
leave
pop
cltd
test
mov
add
rorb
fmul
pop
push
mov
adc
and
popf
insl
mov
jb
filds
sub
ror
sub
idiv
xchg
push
and
ljmp
mov
jne
dec
cwtl
sti
pop
repz
mov
fimuls
leave
pop
sarl
sti
xchg
mov
addr16
lcall
or
aas
jle
notl
outsl
ja
hlt
xchg
push
ret
pop
sub
push
add
into
aad
jmp
hlt
cmp
pop
enter
jl
shl
nop
sub
sbb
cmp
lods
gs
out
lods
inc
push
sub
push
xor
ficoml
add
loop
subb
push
jp
bound
shrb
sbb
and
cltd
in
incl
sub
out
and
and
mov
jge
or
jno
pop
jnp
pop
cli
xchg
sub
or
stc
push
push
jecxz
sbb
out
mov
mov
cs
aam
leave
push
neg
clc
add
cwtl
or
shrl
cs
fs
pop
neg
xlat
pop
adc
jmp
int
xchg
fwait
cmp
xchg
pusha
mov
mov
sub
pusha
mov
cwtl
xchg
hlt
push
popa
sbb
cld
push
xchg
xor
lock
adc
lcall
push
mov
insb
and
inc
adc
lds
or
shlb
push
aaa
or
addl
lds
mov
dec
inc
mov
jbe
lea
sbb
fcmove
add
or
in
push
clc
mov
in
out
cs
pop
call
lcall
sbb
aas
jge
and
sbb
sub
push
stos
pop
mov
stc
sub
adc
stc
cmc
push
fst
sarl
cmp
insb
stos
adc
pop
add
push
in
jo
or
add
mov
mov
push
ljmp
push
adc
jp
das
les
mov
and
inc
ficoml
adc
push
popa
sub
jge
adc
test
pop
xchg
out
leave
leave
mov
jae
dec
inc
pusha
jns
push
je
movl
mov
imul
rorl
loope
xor
ficoms
daa
xchg
pop
adc
movsl
jo
lret
movsl
aas
es
cmp
and
lock
out
mov
mov
cwtl
inc
cld
xor
jmp
sbb
xchg
out
subl
int3
inc
ret
dec
jge
sub
adcb
ljmp
int
sbb
dec
fisubs
clc
shll
jnp
push
ds
pop
sbb
pop
es
push
fwait
in
sbb
mov
jae
pop
xlat
imul
adc
sti
stc
arpl
enter
jns
sti
add
xchg
call
cmp
cli
les
adc
inc
out
fstl
xchg
or
push
lcall
jb
lret
ja
sti
mov
mov
je
in
or
sub
mov
inc
addr16
sbb
fistpl
loope
icebp
fs
jnp
or
inc
in
out
adc
jbe
pop
mov
xor
aaa
xlat
shlb
mov
int
enter
cltd
inc
pushf
test
dec
xor
mov
mov
mov
jno
out
or
mov
fs
packsswb
mov
imul
jle
je
jmp
xor
jbe
test
dec
dec
test
push
popa
cwtl
adc
inc
int3
adc
mov
int
std
dec
inc
cli
dec
bound
lret
jp
scas
repz
pop
add
mov
adc
shr
sbb
sbb
xchg
icebp
sarl
lea
push
or
mov
dec
rcr
lods
fisubl
pop
testl
dec
ficompl
jo
mov
ret
fstps
push
das
jg
rorb
pushf
enter
sbb
mov
loopne
cmp
sbb
pop
sbb
dec
sahf
push
jp
negl
imul
cs
and
repnz
icebp
fdivs
lock
scas
jns
test
popa
mov
mov
mov
outsb
mov
sub
hlt
cmpsl
rorb
add
pop
xchg
jns
movsl
fcmovnu
minps
xchg
and
jecxz
add
repnz
jg
xlat
outsb
idivl
inc
cmpsb
ljmp
aaa
popa
xchg
add
stc
or
dec
pop
outsb
inc
lock
in
mov
test
fcoml
ss
cli
inc
xchg
sbb
mov
and
cmpsb
dec
xchg
jno
dec
popa
mov
adc
sbb
iret
jl
xor
lods
cld
cmp
loop
lcall
les
negb
dec
int3
xchg
cmpsl
popa
cwtl
cmp
iret
dec
and
xchg
and
dec
stos
push
jno
inc
inc
test
xchg
sahf
nop
clc
jg
xlat
es
dec
test
insl
jnp,pn
and
dec
cmc
ja
pusha
add
and
je
mov
dec
loope
xchg
adc
xchg
dec
cmp
mov
stos
cmpsl
cs
js
ret
push
popa
dec
dec
cli
and
inc
inc
les
xor
pusha
fwait
lock
mov
pop
es
xor
ljmp
test
ret
cmp
jecxz
mov
push
jb
pop
pop
mov
inc
mov
xchg
outsb
out
cmc
mov
dec
fbld
fsubrl
add
cmp
jns
mov
ror
jno
push
dec
imul
xchg
int3
jge
jbe
frndint
push
pop
xchg
xchg
mov
jp
sub
or
jne
sub
icebp
push
xchg
mov
ljmp
and
xchg
fstpl
aad
scas
pop
push
loop
mov
pusha
xor
shl
imul
push
jmp
add
mov
int
lret
xor
jno
aaa
ret
jne
add
push
call
mov
sarl
mov
sub
push
loop
andl
fsub
les
int3
outsb
roll
mov
bound
xchg
mov
mov
mov
cvtps2pd
stos
in
ret
loopne
cmp
sbb
lods
int3
mov
sub
ljmp
lret
xchg
push
notl
mov
xchg
rorb
loopne
in
jge
mov
xchg
mov
xor
push
add
jae
jne
aad
jl
outsb
inc
jbe
mov
ljmp
loopne
jno
sahf
pop
cmp
or
xor
stc
jnp
cmp
fadds
mov
mov
iret
cmp
adc
iret
in
stc
or
adc
addr16
jnp
sbb
lcall
lods
pop
xor
and
call
iret
mov
popa
inc
add
cwtl
cld
or
mov
ret
adc
mov
sbb
push
in
fdivrl
mov
aas
jecxz
in
lock
sub
cwtl
mov
pop
rol
insb
scas
jle
loopne
cli
xor
mov
or
data16
xchg
outsl
les
xor
push
add
sbb
arpl
xchg
adc
pop
mov
cmp
cmp
jg
xchg
jne
xor
movsb
out
cli
sahf
xchg
nop
enter
add
cli
jne
push
cmp
leave
popa
jbe
pop
xlat
hlt
data16
pop
fdivp
outsb
movsb
test
cltd
sbb
push
insb
add
mov
mov
call
mov
addr16
adc
mov
lock
aad
ljmp
ds
xchg
lret
bnd
mov
dec
fs
leave
or
fcmovne
icebp
aad
pusha
out
hlt
in
or
cli
xchg
out
in
pop
jnp
cmp
sub
adc
cltd
jl
push
dec
mov
in
inc
aad
lods
aas
xor
push
cmpsb
aam
sti
inc
outsb
lods
fstpl
je
sbb
das
popl
popf
sbb
inc
fsub
test
pop
ja
mov
mov
jo
mov
pop
push
stos
out
push
loope
pop
les
out
mov
inc
ss
movsl
mov
into
pop
lret
pop
pop
inc
or
cs
mov
js
pop
push
and
and
adc
out
fldt
cmp
dec
cmp
int
dec
jbe
ficomps
popa
inc
mov
mov
jle
in
sub
push
and
sahf
jp
daa
aas
sbbl
adc
cmp
movl
or
negl
add
jb
dec
daa
xchg
ja
sub
cwtl
jecxz
lret
sahf
adc
dec
imul
inc
xor
or
pop
pusha
fwait
nop
jbe
enter
pop
and
js
adc
clc
dec
in
add
xchg
jmp
in
popa
adc
movsl
lds
insb
in
jmp
inc
xchg
ss
test
mov
out
mov
dec
fwait
loopne
jecxz
push
ljmp
aam
lahf
rcrb
js
xor
daa
mov
pop
insb
push
pop
mov
sti
mov
subl
iret
adc
out
addr16
je
mov
sbb
aaa
dec
jo,pt
xor
xor
jg
mov
sbb
out
pop
jb
lahf
imul
dec
jp
dec
lahf
or
pushf
push
arpl
lcall
test
pop
subl
xchg
insb
adc
aas
in
inc
sbb
scas
jle
xor
adc
pushf
popfw
sbb
div
xor
add
adc
mov
cmc
pop
scas
inc
inc
stos
pop
cltd
and
mov
mov
clc
mov
cmp
sbb
xchg
in
enter
call
pop
inc
jmp
ret
pop
bound
inc
jne
inc
sahf
inc
cmp
fcmovnbe
pop
stc
dec
mov
adc
loope
sub
mov
pop
pop
inc
mov
dec
jl
jl
inc
dec
out
in
add
repnz
fnstenv
hlt
add
or
fldl
pop
gs
in
cmp
ja
and
xlat
jg
lret
sbb
les
sub
sti
out
push
out
aam
popa
repz
cmc
or
lcall
mov
inc
out
inc
and
ss
xor
call
pusha
fsub
data16
push
jbe
mov
ret
sub
setge
lahf
add
pop
dec
mov
mov
int
scas
es
dec
in
or
mov
pushf
or
sbb
repz
dec
lods
sbb
dec
aas
inc
pop
outsb
and
and
std
fsts
push
sub
jmp
bound
shll
pop
sbb
repnz
mov
cwtl
pop
push
xchg
cmpl
mov
cs
packuswb
jno
stos
or
pavgw
clc
stos
mov
lods
pop
movsl
sub
mov
lret
sbb
in
rcll
dec
or
adc
fs
aad
inc
sub
sub
sbb
std
daa
stos
lret
aaa
gs
ret
push
insb
test
rcll
and
xor
scas
mov
push
icebp
cmp
cmp
add
dec
outsb
rolb
push
push
clc
in
aad
adc
mov
ja
mov
out
into
fwait
inc
cmpsb
push
sbb
xchg
sub
xorb
sbb
mov
jbe
mov
jge
rolb
testb
scas
xchg
clc
mov
je
pop
mov
sbbb
xchg
leave
pop
push
sub
loope
push
test
mov
cmp
mov
jecxz
mov
outsl
aaa
mov
pop
fmuls
mov
or
jecxz
fdivs
inc
xchg
mov
test
ret
fidivrl
sub
movsl
fisubl
cs
fwait
or
xchg
pop
fwait
mov
scas
mov
sahf
sub
cli
mov
and
mov
sahf
mov
jl
cli
adc
jns
outsl
adc
xchg
add
out
icebp
jns
xchg
decl
jp
xor
xchg
notb
std
dec
or
stc
jo
or
push
and
movsl
inc
rorb
jb
jne
mov
mov
cmp
or
mov
inc
data16
push
push
or
mov
mov
ja
push
cmp
push
push
mov
leave
and
jmp
lds
mov
xlat
xor
push
adcb
sub
aad
adc
mov
jle
pop
aas
mov
jmp
jg
imull
and
dec
addb
movsl
leave
daa
fstpl
xchg
sti
and
xor
push
sarl
adc
sub
add
or
mov
cmp
pop
stc
push
jne
insb
jae
stos
pushf
fmulp
pop
enter
pop
pop
xchg
rcrl
push
pushf
hlt
incl
loop
jp
fistpll
mov
sub
out
fmulp
data16
and
inc
dec
roll
sub
aas
jno
mov
popf
or
in
xchg
jmp
and
dec
adc
roll
mov
pop
mov
stos
filds
rorb
pop
xor
sub
sub
mov
sbb
cmpb
mov
das
sub
scas
jmp
push
pop
mov
pop
lods
push
and
and
int3
fwait
int3
imul
test
loop,pn
push
xor
or
incb
enter
xor
sbb
jmp
cltd
push
mov
jae
sbb
mov
or
dec
pop
sbb
xchg
add
pushf
pop
nop
push
push
dec
or
lods
pop
push
fsubrs
inc
sbb
imul
mov
adcb
sbb
xor
in
cmpsb
and
clc
lea
push
data16
mov
push
leave
std
sbb
cmp
pusha
cmpsl
dec
jne
pop
jle
sub
sbb
test
sahf
paddusb
pop
sub
adc
lcall
les
mov
xchg
cmp
bound
rcrb
outsb
data16
lea
jp
mov
push
enter
add
pop
push
add
xchg
dec
cmpsl
xchg
into
cltd
or
pop
sbb
int3
in
push
sbb
call
sub
jns
and
js
mov
lea
clc
jecxz
jno
add
mov
mov
push
out
push
and
jp
aaa
add
pusha
out
rclb
or
scas
jle
ret
sbb
jns
mov
mov
xchg
dec
push
lahf
js
iret
ja
call
js
pextrw
pusha
mov
scas
adcl
scas
xchg
xchg
mov
lcall
lret
scas
leave
std
mov
lahf
inc
jns
mov
inc
hlt
inc
jge
rol
decl
addr16
das
or
push
jb
fdivl
add
add
pop
and
xchg
and
jl
xor
mov
fwait
pushf
adc
mov
fwait
cmpl
xchg
fldcw
xor
outsb
cld
pushw
pop
sbb
jno
dec
pop
mov
lahf
add
inc
xchg
and
cli
js
add
mov
loope
jge
sub
cmp
dec
pop
add
mov
mov
in
je
inc
sbb
xchg
mov
jo
pop
jl
jo
xchg
push
fmul
cwtl
ret
in
daa
mov
loop
lea
cli
nop
cmp
xchg
mull
mov
or
mov
cld
sub
mov
cli
pop
out
xchg
add
sub
mov
add
daa
mov
xchg
fists
xchg
pinsrw
or
loop
push
sub
xchg
dec
cmp
jecxz
bound
push
or
jle
nop
lds
mov
pop
lahf
inc
jnp
dec
and
lods
mov
lock
jge
cmpsb
add
mov
mov
call
imul
dec
lret
loope
outsl
stos
mov
jo
adc
clc
bound
sti
xor
call
xchg
lcall
pop
fmull
mov
cmp
hlt
mov
mov
push
sub
xchg
lods
sub
mov
fwait
ret
lret
fimull
fidivs
popf
addr16
push
dec
popa
call
sarl
and
sti
aaa
fsub
test
add
cmpsb
adc
icebp
sbb
jb
cltd
mov
shrb
int
jno
xor
fsubrl
mov
dec
and
inc
in
sbb
cmp
subl
jecxz
mov
dec
fldl
test
inc
je
xchg
pushf
push
lds
cmp
mov
je
test
sbb
lock
loope
bound
jecxz
roll
sti
andl
cmp
adc
subl
in
popf
jp
mov
add
fcomp
mov
negl
mov
fstpl
xchg
ss
or
add
pop
dec
and
filds
mov
popf
in
fstpl
mov
rol
dec
lods
pusha
jnp
cmpsb
add
lods
dec
mov
sbb
mov
add
scas
cltd
scas
xchg
add
call
jns
mov
js
incl
and
pop
shlb
inc
push
fcmovu
test
mov
sub
xchg
mov
cwtl
push
and
cmc
ss
dec
adc
add
fsubp
pop
out
jae
cltd
xchg
dec
lds
xor
pop
pop
mulb
push
sbb
jp
jl
sub
add
cmp
xorb
push
mov
xorb
std
sbb
fwait
lods
xchg
cmp
xor
jbe
aad
insb
pop
lods
arpl
fisttps
mov
jne
xlat
jecxz
pop
dec
mov
nop
dec
jle
inc
mov
mov
xlat
xchg
cmpsw
xchg
out
inc
mov
jle
loop
shufps
hlt
xor
shll
fiaddl
adc
lea
sub
sbb
cli
leave
dec
out
movl
imul
dec
mov
dec
and
fs
gs
push
fwait
data16
sub
aam
sub
push
dec
inc
in
mov
nop
fsubrs
xor
mov
add
orl
push
or
shr
xor
loopw
in
lods
jg
js
or
adc
fsubs
and
add
outsl
and
pop
in
mov
xchg
mov
mov
int3
iret
mov
loope
sub
xchg
xchg
ss
pop
jp
mov
rorb
cs
mov
or
dec
mov
add
cli
shlb
xchg
orb
pop
pushf
into
pop
and
dec
cs
pop
fistps
fiadds
divb
mov
pmullw
dec
cmp
jns
aad
jge
popa
xorb
sbb
xor
cwtl
jnp
pop
mov
inc
or
jl
jl
fsubrl
inc
mul
call
or
dec
clc
add
cmp
xor
repz
insb
dec
push
or
arpl
push
cmp
push
mov
cmpsb
push
sbb
cmp
addr16
push
stos
pop
sub
xor
xlat
inc
mov
cmp
xlat
or
imul
mov
fwait
ja
bound
call
ss
lret
pop
dec
lock
fdivr
cmpsb
icebp
lahf
daa
imul
jg,pt
and
mov
push
sti
xor
push
decw
xchg
rolb
in
lret
jo
hlt
inc
pop
repz
cmp
cmpsb
and
mov
sahf
repnz
and
sbb
jl
es
push
xor
sbb
adc
push
ret
pop
pushf
sub
push
mov
stos
xchg
je
mov
lea
call
push
xor
pop
xor
mov
mov
aam
test
fs
sub
rclb
in
xchg
stc
orl
xchg
mov
in
add
fs
movsb
jbe
push
and
xor
fidivrl
shrl
dec
addr16
out
gs
push
pop
dec
outsl
cmpsl
imul
in
sahf
dec
xor
mov
inc
pop
jbe
fst
mov
xor
mov
jne
add
push
dec
xor
adc
int3
and
test
out
pop
mov
dec
pop
into
mov
xorb
dec
aaa
sub
jo
jg
aad
mov
push
mov
cs
imul
aaa
in
xchg
std
xchg
push
push
lfs
call
push
ljmp
adc
movsb
rclb
sbb
test
mov
ret
lds
xor
pop
sti
and
repz
mov
icebp
pusha
ret
repnz
jg
push
xchg
xchg
notb
adc
xchg
inc
dec
xor
cltd
arpl
pop
dec
pop
mov
jns
cld
inc
pop
int3
into
lret
ljmp
xchg
fwait
jns
movsl
pop
cmp
fcom
inc
fldcw
outsb
xor
sbb
popf
and
add
lock
pop
sub
iret
cmpsl
add
xor
add
adc
or
scas
lahf
dec
inc
rcll
mov
mov
jge
call
das
inc
subl
mov
sbb
jcxz
add
adc
jno
pop
adcb
daa
popf
in
je
sahf
mov
jns
or
pop
cmp
adc
xchg
adc
cmc
nop
outsl
test
fwait
jl
pop
leave
inc
push
mov
push
add
and
into
test
mov
stos
xorl
jae
dec
outsl
mov
mov
xor
mov
sqrtps
inc
aam
clc
fisubrl
mov
pop
jne
pop
adc
in
repz
lods
push
stos
jbe
scas
mulps
int
arpl
dec
mov
out
sti
or
inc
inc
dec
stc
daa
lret
pop
aad
xchg
in
imul
xchg
rorl
jno
mov
ja
int
push
repz
pop
jg
leave
xchg
lods
divl
adc
pop
das
jns
imul
std
lods
insb
xchg
daa
push
xchg
or
and
mov
and
mov
xor
pop
pop
fists
cltd
add
inc
lods
sub
lret
mov
mov
in
paddsb
lahf
lahf
data16
xor
movsl
xchg
inc
aad
lahf
xchg
movsb
dec
das
pop
xlat
xor
lahf
sub
rcr
mov
cmp
imul
mov
lea
xchg
adc
xchg
adc
dec
test
mov
dec
inc
jo
gs
test
mov
jmp
mov
mov
inc
mov
inc
and
xor
jb
sbb
cmpsl
les
mov
dec
mov
in
je
add
add
dec
sbb
mov
dec
fildll
inc
rorb
movsb
xchg
sub
das
adc
or
inc
ljmp
pop
int3
loop
insb
sbb
mov
adc
lcall
fcomps
lcall
subb
cltd
inc
jbe
div
push
xor
lahf
xor
fucomip
push
lret
dec
sbb
hlt
inc
mov
cmp
fisubrl
mov
std
out
jmp
fnstsw
or
jg
bound
out
dec
add
rorb
lret
dec
lock
daa
cmc
and
ret
into
cli
or
push
inc
cmp
mov
jl
push
scas
imulb
add
repz
jge
inc
je
and
adc
lret
mov
or
insb
test
jmp
scas
mov
stc
fisttpl
sbb
mov
sbb
inc
ljmp
movsl
and
add
xchg
dec
push
stos
sub
pop
icebp
mov
repnz
shlb
sbb
insl
cmpsl
cmpsb
and
push
pop
push
sbb
xchg
xchg
jo
scas
cmp
incb
leave
leave
pop
das
sbb
push
pop
lret
push
rcll
sqrtps
push
arpl
popf
out
imul
adc
adc
loope
popf
loop
mov
cmp
test
call
mov
mov
mov
xlat
inc
push
push
mov
sbb
lret
mov
mov
mov
pop
jecxz
sarl
push
dec
gs
mov
decl
mov
xchg
mov
bound
pop
cmpsb
cli
leave
push
iret
jp
mov
sbb
cmp
adc
addr16
inc
sub
adc
je
in
movsl
rolb
sbb
or
out
ret
and
popa
lret
js
pop
xor
je
imul
movsl
adc
cld
cmp
inc
ret
aas
mov
invd
jb
aad
jbe
push
mov
pop
add
jecxz
movsb
ficompl
inc
dec
jp
sub
inc
dec
shlb
push
stos
neg
hlt
incb
addr16
dec
lret
push
jnp
mov
mov
loop
pop
in
sti
jno
pop
out
stos
adc
dec
pop
push
cmp
das
push
add
cmc
cmp
pop
sbbl
mov
mov
arpl
sub
daa
xchg
test
push
push
xchg
es
cltd
pushl
pop
in
test
mov
gs
pop
imul
lds
lcall
and
rolb
cmp
mov
push
mov
sbb
arpl
push
inc
and
xor
or
call
add
cmp
push
adc
arpl
cmp
jne
xchg
test
movsl
xchg
shlb
outsb
aam
movsb
ret
loopne
jbe
cmp
shl
or
ljmp
ds
inc
mov
or
imul
jmp
imul
das
sbb
hlt
push
clc
dec
jnp
imul
pushf
push
in
mov
push
sahf
out
fs
or
es
iret
pop
sub
inc
sar
pop
rorl
js
out
cvtdq2ps
mov
or
jg
out
add
ds
sbb
out
inc
call
pop
cmpsw
add
cli
dec
adcl
xlat
repnz
push
and
xchg
jge
dec
xor
sbb
repnz
loopne
jmp
add
sbb
adc
enter
inc
stos
test
add
sahf
inc
shll
mov
mov
mov
popf
jge
shll
mov
xor
push
or
mov
dec
or
fnstcw
lahf
mov
cmpsl
adc
rclb
jp
loope
into
arpl
das
not
or
cmp
add
test
push
sbb
insl
inc
push
and
or
pop
push
mov
jmp
pushf
sbb
sub
xor
stos
or
cmp
sbb
pop
pop
sbb
daa
push
xchg
sub
test
leave
mov
dec
adc
cmpsl
into
icebp
jne
stos
sub
insl
idiv
mov
push
xchg
pop
sub
jmp
xchg
mov
or
test
xchg
mov
xor
pusha
mov
cwtl
loopne
ss
clc
aad
int
popa
imul
push
arpl
mov
movsb
push
shl
or
push
dec
lds
and
push
bound
test
jne
mov
mov
fldt
sbb
pusha
imul
stc
faddl
pop
imul
mov
or
and
or
and
cmp
cmpsl
ret
mov
mov
add
imulb
adc
mov
push
jbe
testl
arpl
cs
bound
or
pop
and
mov
jbe
lret
addl
enter
rcr
mov
push
mov
call
neg
mov
out
jge
jge
loope
mov
cmp
xchg
mov
cmp
int
xchg
sti
xchg
jae
lahf
lret
sbbl
cwtl
filds
mov
fs
test
inc
push
jmp
pop
aaa
xor
and
push
stc
scas
inc
dec
test
loop
sbb
addr16
jae
pop
icebp
mov
dec
mov
fwait
sub
mov
bswap
xchg
mov
repnz
rclb
mov
add
xchg
jmp
pop
aad
sbb
ret
push
or
insb
xchg
add
inc
loop
ss
aad
sbb
lret
divl
stc
mov
aam
mov
int
and
stos
push
pop
out
dec
dec
fs
daa
arpl
cmpsl
mov
push
mov
mov
xchg
leave
cmp
adc
in
pop
pushf
hlt
xor
pop
inc
aad
push
sbb
addb
cmp
mov
ss
cmpsb
xor
or
or
sbb
jnp
push
sbb
imulb
movsb
in
cltd
cmc
ss
gs
or
mov
sub
imul
loope
in
and
aad
popf
pop
mov
test
pusha
push
filds
cmc
push
mov
push
outsb
hlt
sbb
jae
push
dec
fisttpl
in
mov
cltd
pop
add
pop
cli
cmp
pop
xor
mov
jl
or
call
mov
aaa
cwtl
and
xchg
inc
xchg
cmpsb
xlat
xchg
xchg
sbb
sub
push
add
mov
jnp
cli
sub
clc
xchg
xchg
pop
notb
pop
icebp
adc
jo
cld
pop
mov
pop
in
and
mov
or
inc
imul
push
fidivrl
xchg
pop
push
loop
xor
popa
sbb
into
lock
jmp
aad
pop
push
xlat
addr16
mov
and
or
sbb
roll
lods
movsl
push
push
push
fcomps
bound
push
xchg
or
test
cmp
into
xchg
aaa
mov
xor
inc
lret
sub
je
lahf
incb
data16
dec
scas
mov
sbb
int
out
ds
mov
js
pop
pop
mov
mov
test
and
adc
and
stos
sahf
popa
fs
sbb
arpl
sahf
mov
sbb
inc
push
and
pop
shrb
push
push
das
dec
jnp
scas
nop
loope
rcll
pop
sbb
lods
mov
divb
add
sbb
ret
jns
mov
xor
push
cltd
sub
mov
mov
out
in
xchg
das
movsb
cmc
jg
jg
ljmp
test
jl
xlat
int3
mov
iret
xlat
in
movsb
in
pop
mov
pop
push
jl
cld
repnz
pop
arpl
mov
sub
jmp
je
in
iret
or
add
and
jae
xchg
jns
xor
dec
or
sbb
ficoms
lods
cmp
and
xchg
outsb
jb
jl
push
pop
xchg
jae
cmpsl
gs
adc
inc
mov
push
iret
mov
cltd
add
xchg
mov
test
dec
fsubp
ret
rcr
pop
jnp
addr16
dec
in
inc
cld
flds
mov
mov
dec
and
out
mov
lret
add
lret
ds
repz
int
mov
aas
xor
pop
loopne
sbb
mov
pop
in
xchg
test
push
or
pop
xor
ror
jg
stos
sbb
push
pusha
jmp
lods
xchg
lods
sbb
mov
test
je
sti
push
pop
out
lods
nop
jno
dec
dec
enter
pushf
ljmp
call
lock
pop
dec
xlat
sub
mov
mov
in
xor
dec
cmp
jle
dec
pop
mov
cmpsb
cmp
dec
cwtl
ljmp
arpl
pop
andl
fdivrp
cmpsl
xchg
adc
cmp
mov
lahf
or
test
enter
inc
addr16
lods
add
rorb
xor
aas
or
mov
cmpsw
dec
add
pop
inc
imul
lds
cmp
add
adc
scas
cmpsl
xchg
cs
pop
mov
mov
xchg
fdivl
pop
in
and
aam
cmp
cmp
or
cmp
cmp
test
test
adc
adc
fbstp
ljmp
xchg
dec
or
test
mov
mov
incb
popl
add
mov
int3
xchg
sbb
and
out
inc
rol
add
or
sub
push
push
dec
mov
mov
add
repnz
test
mov
hlt
pop
sbb
lcall
inc
call
mov
leave
in
ret
xor
lret
xchg
add
lret
xor
testl
pop
std
sub
jnp
aaa
movsb
shll
xor
outsl
jg
xor
fsts
test
mov
inc
sbb
pop
xchg
fistpl
ficoml
dec
xchg
ja
clc
mov
dec
or
out
test
movsl
and
std
or
mov
cmpsb
xor
stc
sub
ret
repz
cmp
test
cmp
add
loop
fmulp
imul
jbe
loopne
cli
mov
enter
add
aad
pop
pusha
popa
push
cmp
add
sbb
dec
fs
clc
dec
fsubr
jno
in
inc
in
data16
jo
push
in
push
cld
or
stos
xor
icebp
sub
mov
cmp
cs
cmp
jno
aam
into
aad
push
mov
test
fbstp
fidivl
xchg
cli
jae
aaa
ret
pop
repnz
xchg
push
out
sub
nop
mov
lock
pop
and
pop
scas
dec
cmp
xor
mov
mov
xchg
fdivr
and
mov
rorb
mov
ss
out
je
pop
mov
push
cli
scas
push
fs
inc
xchg
sbb
adc
cmpsb
and
jno
leave
ds
jae
adc
pop
dec
jmp
movsl
scas
ffree
mov
or
mov
stos
fistpll
into
mov
or
sub
and
add
mov
inc
aaa
or
sbb
inc
or
fdivs
push
dec
push
lods
movsb
sti
and
cmp
rcrb
in
mov
pop
jecxz
push
out
inc
or
hlt
cltd
lods
cltd
sbb
cmc
fsubrs
pop
pop
mov
clc
xchg
push
and
fcomps
mov
pop
push
test
ss
call
in
cmc
enter
xchg
mov
mov
mov
test
adc
push
test
mov
lods
sub
mov
outsb
jg
lahf
in
gs
loope
xchg
scas
pop
fmull
in
and
or
ds
xchg
dec
cltd
mov
lods
cli
cwtl
mov
daa
fs
dec
add
add
in
cmc
fistpl
sub
enter
cmp
cmpsl
imul
rolb
loopne
adcb
mov
test
cmp
push
adc
rorl
or
movsb
dec
out
sbb
lock
mov
jg
mov
sub
sbb
push
and
jle
icebp
test
loop
pop
fidivs
daa
fs
enter
xchg
imul
lock
es
mov
in
into
mov
test
dec
xor
cs
jle
stc
mov
add
fldcw
jmp
in
dec
push
pop
mov
in
ljmp
arpl
mov
cmp
stc
push
cmp
lea
cmp
js
push
cltd
xchg
push
ss
push
in
inc
mov
loopne
inc
lock
icebp
nop
dec
inc
dec
mov
pop
and
lods
sbb
mov
or
gs
js
ficomps
and
jae
add
and
icebp
add
jo
movsb
loop
insb
jl
adc
mov
int
out
test
das
mov
clc
pop
mov
cmpb
les
clc
mov
push
shr
push
mov
pushf
and
xchg
out
sub
in
sbb
mulb
xor
or
mov
rclb
jl
jp
add
ds
mov
cmc
test
notl
lret
xor
outsb
push
in
jge
mov
adc
jge
in
nop
nop
inc
aad
or
gs
mov
cmp
mov
decb
mov
dec
cmp
cs
mov
xorl
cmp
sub
mov
mov
test
push
pop
sbb
sub
iret
xor
dec
xor
and
loopne
adc
out
repz
sub
cld
je
fnstsw
sbb
sub
sub
ret
scas
fistpll
mov
cltd
andb
loope
pop
push
adc
sahf
aad
sub
cmc
mov
jmp
test
sub
adc
lods
xlat
jb
push
inc
andl
pop
push
push
push
test
dec
inc
dec
or
xor
imul
in
imul
fldln2
outsb
movsb
push
xor
repz
xor
adc
jns
xchg
xor
jns
adc
shr
or
xchg
push
shll
mov
fistps
sub
movsb
lret
mov
add
lcall
outsb
or
pop
adc
icebp
icebp
scas
lret
in
lods
push
sar
ficoml
mov
cmc
in
sbb
icebp
cmpsb
jnp
fwait
das
imul
or
add
adc
push
jp
xchg
icebp
shrb
pop
pop
push
cmp
out
test
addr16
stc
push
jns
dec
cwtl
and
hlt
mov
and
leave
pop
adc
mov
dec
pop
imul
pop
mov
decl
push
ds
jo
mov
bound
sbb
xchg
outsl
inc
jnp
xchg
inc
push
dec
insl
xchg
aas
popa
mov
adc
lock
roll
sbb
scas
sbb
imul
and
add
enter
push
add
fisttps
dec
cwtl
xchg
mov
clts
dec
sbb
xchg
jnp
out
cmp
mov
int
xor
jbe
icebp
fadds
pop
mov
into
lods
orb
mov
shlb
nop
lcall
cmc
mov
mov
fs
ds
xor
adc
int3
pop
jg
imul
jp
icebp
mov
sub
dec
pop
xchg
ja
mov
xchg
rclb
inc
lock
pop
jns
inc
in
clc
and
lahf
repnz
or
imul
ret
pop
push
ds
aaa
push
out
mov
mov
xchg
leave
ror
test
mov
inc
sub
int
sub
out
push
int
and
unpckhps
add
insb
dec
sub
testl
adcl
pop
in
add
ljmp
mov
int3
icebp
mov
popa
test
adc
cmpsb
xchg
jle
lcall
inc
mov
in
and
jp
cmp
es
fbld
outsl
imul
sbb
dec
mov
enter
negb
lds
dec
lods
in
lret
push
mov
jnp
das
bound
loope
mov
adc
push
les
mov
clc
xchg
mov
sub
cmc
pop
out
aad
outsb
mov
pushf
movsb
xchg
out
inc
shll
or
xlat
aad
add
jb
mov
push
jnp
sub
outsb
mov
lock
xchg
and
fwait
scas
cmpl
decb
test
xchg
ficompl
or
in
dec
jle
fistpll
pop
out
jmp
push
adc
loop
jle
je
or
mov
push
test
lock
addr16
dec
mov
mov
jo
cmc
push
or
sarl
pop
fsubs
xor
add
popa
insl
mull
mov
push
cli
daa
lea
jge
loopne
out
aaa
pop
adc
pop
movsl
or
repnz
cmp
aad
mov
notl
ljmp
push
cmp
sahf
icebp
fmull
xor
pop
popa
xchg
and
das
push
adc
push
lods
cmp
ret
scas
xor
sbb
loop
or
add
fisubrs
sahf
test
and
or
add
movl
jb
dec
movsl
clc
movl
cltd
xor
jmp
and
xor
dec
mov
mov
mov
push
int
jp
clc
ds
fildll
stos
or
data16
clc
testb
sbb
inc
jge
iret
movsl
cmpsl
in
sbb
push
mov
aad
or
outsl
adc
popa
pop
fmuls
test
popf
shl
adc
shrb
sub
lea
sub
pushf
not
cmp
jne
xchg
test
ss
jp
push
popf
xchg
sbbl
call
cmpsl
subl
sbb
out
sub
int3
pop
cli
nop
fcoms
cmp
push
cmp
jns,pn
or
mov
xor
mov
daa
mov
inc
inc
xchg
insl
outsl
adc
cmp
test
orl
jns
xor
rcrl
adc
cmp
out
insb
pop
add
sbb
mov
jbe
mov
in
mov
inc
sbb
mov
xor
jae
test
mov
pop
lods
cld
jbe
pop
pop
mov
sbb
jmp
mov
idiv
cmc
sbb
pop
pop
push
mov
loopne
mov
addl
and
sbb
fmuls
test
aas
add
mov
lods
xor
xorb
loopne
orb
push
mov
lahf
dec
movsl
jecxz
fdivs
mov
xor
xchg
push
repz
jp
call
jb
ror
mov
cld
jge
inc
ret
push
call
outsb
enter
push
inc
test
xor
cmp
in
cmp
sub
add
pop
mov
push
insl
stos
popa
negl
cmp
push
mov
lahf
mov
push
out
pop
js
add
dec
and
xchg
mov
jl
ret
sub
mov
call
test
jl
cli
or
rcrl
mov
mov
mov
jb
mov
test
ret
adc
into
repz
push
rcrl
push
adc
loopne
mov
lret
cwtl
mov
push
jmp
in
daa
out
in
or
lds
mov
out
xor
faddl
push
aas
or
xchg
push
jp
push
jle
xchg
pop
cmp
es
mov
pop
lods
lock
mov
loopne
inc
scas
test
int
inc
dec
je
dec
xor
das
hlt
push
add
scas
iret
adc
enter
insb
and
jns
pop
jecxz
lret
adc
xchg
pop
sub
dec
add
hlt
dec
popa
pop
enter
into
push
xchg
outsl
adc
cmp
pop
or
mov
repz
fldcw
mov
pop
xchg
inc
enter
add
xlat
sub
lcall
je
imul
xor
movsb
movl
pushf
ret
dec
outsb
outsb
adc
adc
push
add
test
js
imul
aad
js
ss
aas
lret
cwtl
dec
loop
pop
jne
jge
push
movsl
icebp
sub
dec
push
inc
push
pop
add
idivb
jecxz
out
xor
and
or
es
ja
mov
xchg
lret
push
sti
pusha
test
xorl
push
into
xchg
lret
sahf
mov
mov
lea
xor
pop
inc
outsl
dec
and
mov
pushl
ffreep
inc
adc
jge
out
or
cmp
mov
sbb
into
icebp
xchg
test
ffreep
aas
pop
jl
movsb
outsl
dec
lock
push
sbb
int3
mov
jg
mov
cmp
cwtl
pop
cltd
sbb
popa
je
xlat
mov
push
dec
in
jp
inc
mov
orb
nop
lea
call
sbb
dec
and
cmp
push
xchg
sub
cmp
repz
bound
lds
xchg
loope
cmp
ret
ljmp
mov
jnp
cmp
mov
pushf
cmp
xor
fisttpll
repz
push
mov
nop
mov
cmp
fldcw
sbb
cmp
mov
lods
pop
insl
cs
outsl
mov
je
imul
inc
and
jns
clc
mov
sub
sbb
scas
adc
adcb
int3
mov
lcall
ret
data16
testl
faddl
push
test
call
jno
jle
cmp
ret
in
lods
idiv
push
jge
subl
push
pop
sub
daa
fsubs
test
mov
aaa
nop
leave
or
pop
arpl
mov
or
xor
adc
mov
icebp
adc
or
inc
pop
jo
mov
pop
sbb
and
int3
hlt
mov
push
popa
sarb
xorl
mov
xor
mov
lret
sub
and
shrl
xchg
adc
cwtl
add
insl
ja
aam
jns
dec
stos
daa
inc
push
cmc
sahf
xor
fldenv
lods
jb
popa
push
scas
fdiv
pusha
jge
fsubrl
test
int
xchg
clc
int3
and
cmc
mov
ud0
jmp
movb
lcall
mov
fldt
pop
je
add
dec
sarl
xor
es
loopne
or
sbb
leave
sub
adc
jb
jne
sbb
rolw
mov
ret
lds
jl
push
mov
dec
lds
mov
mov
and
dec
lock
push
add
aas
out
inc
in
lods
and
pop
pop
aaa
mov
shlb
push
arpl
xor
or
lret
inc
dec
mov
cmc
pushf
inc
outsl
out
cmp
mov
inc
addl
xchg
roll
and
pop
iret
adcb
fdivrp
mov
sub
nop
dec
pop
lahf
cmp
add
addl
or
mov
in
jne
shll
in
mov
rcl
ja
jb
loope
in
into
loope
xchg
dec
adc
dec
inc
push
fldt
dec
notl
call
movsl
mov
or
mov
clc
jle
mov
inc
testl
jmp
mov
mov
lods
xor
repz
mov
mulb
inc
sub
pop
in
mov
push
mov
mov
cltd
call
clc
jnp
adcb
bound
inc
xor
clc
xor
push
jnp
cmpb
addl
add
insl
adc
push
sbb
xorl
mov
add
mov
cld
mov
cld
cmpb
setnp
xchg
mov
mov
push
std
stos
test
cmp
hlt
bound
sahf
sub
cmc
int
call
mov
cmp
out
jne
mov
hlt
inc
std
das
pop
and
dec
push
fwait
scas
jo
jae
add
xor
fisttps
jns
mov
out
adcl
ss
mov
mov
mov
in
leave
fwait
popa
scas
mov
mov
sbbl
cmp
imul
adc
xchg
enter
std
ja
jo
in
inc
mov
sub
mov
movsb
sbb
push
mov
out
cmp
stos
add
or
imul
cmpsl
pop
test
mov
jne
cmp
arpl
ljmp
sbb
iret
lea
sub
adc
xor
jmp
outsb
dec
mov
adc
mov
sub
dec
cmp
in
pop
lret
push
sbbb
movsl
xchg
xor
daa
mov
shrb
mov
mov
jecxz
into
xorb
xchg
cld
in
add
pop
jne
add
jg,pt
pushf
out
sub
or
jmp
les
out
pop
aaa
and
or
ds
lods
std
and
movsl
roll
xchg
jg
lock
pop
out
fsubrl
inc
mov
data16
mov
movq
pop
cli
aaa
mov
xchg
imul
orb
xor
jns
out
stos
add
cli
rcll
pop
in
arpl
mov
push
dec
pop
in
lcall
inc
lahf
outsb
add
and
inc
addb
cmc
dec
in
cmpsl
or
cmp
pop
adc
and
xchg
xor
add
scas
lea
enter
out
xchg
adc
sbb
addr16
jp
je
jge
mov
call
out
cmp
test
movsb
andl
imulb
pop
pop
jae
inc
fwait
or
inc
leave
push
sbb
mov
mov
stos
mov
jp
mov
xor
cmp
fwait
sbb
sub
scas
sti
push
sbb
iret
stc
xchg
cmpsl
mov
dec
popf
pop
test
sbbl
jmp
pop
js
or
insb
mov
aaa
cmc
test
daa
xor
dec
adc
fsubrs
aam
dec
mov
sbb
fisubrl
or
jmp
jno
mov
test
sbb
mov
jno
fimull
mov
adc
call
mov
subb
cwtd
cmp
jecxz
mov
shrb
shrb
sbb
dec
aas
lea
fildll
fs
sarl
mov
test
aad
mov
popa
jnp
dec
xchg
cltd
inc
or
sub
shrl
sbb
clc
call
scas
cmp
add
or
mov
ds
pop
sbb
sbb
mov
push
xor
into
mov
lahf
sub
and
add
int3
fisttpll
cltd
jl
jmp
dec
xchg
rclb
or
and
jne
sbb
jp
nop
dec
stos
and
lds
cmp
lea
lea
test
xor
jno
add
pop
jne
repnz
rorb
mov
dec
fdivl
mov
jmp
dec
bnd
mov
movsb
dec
repnz
mov
test
jmp
mov
pop
jb
inc
int
fdivrs
pushf
arpl
cwtl
das
sbb
push
inc
ficompl
and
cmp
arpl
out
jge
repz
mov
pop
jp
inc
mov
bound
pop
stc
aaa
adc
dec
mov
push
mov
add
lcall
push
movsb
push
sub
lea
sbb
imul
mov
push
inc
pusha
movsb
jae
push
mov
fstp
and
mov
test
mov
ds
push
repz
mov
xchg
pop
call
popa
test
mov
mov
mov
dec
xchg
lods
test
mov
cli
jecxz
mov
clc
loop
mov
addr16
xor
adc
cli
into
gs
ret
lea
mov
dec
aam
das
sbb
push
cmpsl
jle
lods
inc
movsl
mov
mov
repnz
adc
dec
sub
jmp
or
std
lds
int
lods
notb
rolb
inc
xchg
jle
loop
mov
adc
mov
repnz
mov
pop
mov
outsl
hlt
aam
mov
pop
notl
inc
push
insb
push
ror
data16
jb
daa
push
pushf
lods
adc
ret
and
nop
lcall
inc
cmpsl
js
sub
mov
pusha
sbbl
fwait
sarb
mov
jns
xchg
pop
pop
xacquire
sbb
sbb
aas
dec
pop
push
dec
lods
mov
sti
in
cmpl
mov
xchg
imul
xor
imulb
aas
dec
aaa
adc
xchg
push
inc
jl
lods
sbb
nop
divb
leave
or
dec
pop
mov
jbe
jg
mov
sbb
fwait
outsb
cmp
mov
lods
sbb
sub
or
jecxz
hlt
lahf
dec
cmp
inc
mov
dec
scas
loope
mov
mov
push
hlt
fisttpll
add
test
jnp
add
les
pop
fdivr
add
xor
add
mov
cltd
inc
hlt
or
fs
jbe
xchg
test
lea
fdivrs
loopne
scas
mov
dec
rolb
xor
push
adc
or
pop
dec
or
in
popa
neg
rolb
lock
je
aad
add
sbb
fbstp
leave
mov
aad
jp
scas
push
mov
or
mov
push
mov
xor
inc
arpl
ficoml
daa
fwait
xchg
jecxz
ljmp
mov
and
cwtl
jecxz
pusha
test
fdiv
ret
dec
jg
xor
fstps
pop
cld
dec
stos
push
dec
cltd
les
or
jae
and
pop
dec
and
pop
int3
mull
outsl
dec
scas
inc
cmpsb
fsubrl
es
clc
fstl
inc
fnstenv
pop
sub
mov
push
cld
test
jmp
or
mov
pushf
inc
sub
xchg
cmpsl
repnz
sbb
cli
dec
fsubrs
loopne
movsl
mov
cmp
addb
out
xor
sar
lea
sbb
xchg
dec
in
pop
inc
pop
xorl
sub
push
iret
aad
adc
ss
lods
arpl
andb
imul
mov
in
add
loope
push
pop
std
push
dec
xchg
cmp
fisubrs
adc
ds
xor
jmp
mov
mov
mov
jnp
and
fistps
icebp
mov
arpl
lcall
lret
add
adc
jmp
dec
push
mov
fcomip
stc
push
testl
insb
cli
insb
xor
es
mov
sbb
jg
stos
push
arpl
adc
xchg
aam
or
daa
and
adc
sbb
mov
sub
imul
int
cmp
inc
lahf
dec
loopne
mov
mov
or
pop
dec
push
mov
ljmp
mov
push
mov
clc
xor
test
imul
loope
sub
stos
jo
inc
dec
and
sbbl
add
xor
mov
and
inc
jecxz
sti
add
decl
mov
jbe
pusha
in
sbb
push
jg
mov
stos
negl
dec
into
push
shl
adc
je
pop
mov
je
inc
ret
jp
xor
mov
mov
sarl
fidivs
sub
hlt
dec
add
push
testb
mov
lea
hlt
fsub
jbe
cmpsl
loope
cld
or
mov
jo
or
mov
sbb
xor
pop
mov
imul
adc
xchg
jmp
push
jle
lock
mov
cmp
push
insb
push
mov
xchg
pop
sbb
or
sbb
clc
push
dec
mov
xor
mov
clc
andb
aam
je
sbb
es
mov
jno
push
mov
popf
insl
pop
test
adc
repnz
divb
and
pop
shr
pop
mov
pop
and
pop
jb
push
test
call
jge
fists
jl
or
adc
addr16
mov
mov
and
aas
xor
or
mov
sbb
call
rcrb
cwtl
dec
nop
fadds
mov
cmp
or
sbb
inc
pusha
js
fsubrl
mov
mov
outsl
popa
outsb
jecxz
outsl
cli
cmp
insl
adc
jle
or
adc
push
addr16
mov
pop
mov
outsl
jl
sub
jo
sub
pop
enter
push
mov
pop
stc
cmc
push
in
push
sbb
jge
mov
mov
jl
roll
aam
cltd
notl
xchg
mov
repz
mov
mov
cli
and
addr16
stc
je
cltd
push
fmull
adc
leave
shlb
sub
nop
mov
inc
lret
inc
sahf
jmp
cmpsl
les
sbb
push
pop
add
lcall
inc
scas
and
test
xchg
cmp
jge
outsl
jmp
repz
inc
loopne
aad
mov
fildll
sub
xchg
push
in
mov
push
nop
xlat
adc
pop
gs
pushf
idivb
push
xchg
add
add
js
mov
fdiv
pop
lret
sub
enter
in
mov
sbb
dec
dec
sub
neg
mov
jno
inc
mov
cmpsb
inc
clc
adc
or
sarl
or
add
dec
scas
add
repz
and
or
jae
loope
inc
push
lcall
clc
mov
call
pop
pop
mov
daa
pop
sub
adc
mov
incb
adc
lcall
xchg
or
sub
test
scas
xor
stc
cmp
pop
mov
push
in
push
fiaddl
mov
std
enter
in
and
sub
add
pop
adc
mov
cltd
arpl
orb
push
mov
in
mov
into
int
mov
mov
xchg
mov
cli
add
xchg
or
xchg
ss
leave
and
aas
sbb
mov
cmp
xchg
lods
push
lock
mov
das
pop
ljmp
or
fs
imul
cmp
mov
cmp
lods
ficoml
cmp
ret
aaa
in
cmp
int
sbb
jge
in
rcrl
fucom
pop
fdivr
mov
push
dec
add
jle
out
add
cs
dec
jno
adc
pop
jp
xor
dec
sub
mov
push
aad
jb
cmp
and
cmp
push
push
cmp
not
mov
test
xchg
std
dec
jnp
mov
xchg
pop
mov
add
cmp
fists
jnp
sub
mov
adc
cmc
jg
loope
movl
or
xchg
mov
iret
cmpl
mov
sub
mov
rcrl
xor
pop
sbb
xor
sti
or
cmp
lret
inc
xchg
inc
sub
sbb
xchg
jge
mov
test
andl
jge
stos
dec
mov
roll
lock
arpl
aas
inc
repz
ljmp
dec
push
jl
aas
adc
fstpl
mov
jno
out
xor
xor
and
lds
int
std
lods
imul
lea
test
fbld
mov
and
icebp
scas
por
and
cmp
jmp
aad
js
test
jg
push
add
cmp
mov
add
pop
mov
dec
jb
loop
jg
fisubl
inc
daa
sbb
xlat
or
call
addl
ds
fwait
add
cli
rcll
xor
pop
mov
stc
push
jo
jge
or
inc
sub
xchg
mov
dec
ds
jns
mov
dec
sub
insb
daa
cltd
sub
or
xor
lret
mov
inc
fidivs
imul
jle
jecxz
add
add
or
dec
int3
mov
insl
jl
jg
jecxz
inc
jae
or
mov
xorl
das
hlt
les
add
dec
in
pop
je
jle
push
jecxz,pt
test
mov
inc
mov
lahf
je
sbb
pop
out
inc
repnz
cltd
test
ljmp
push
aad
icebp
repz
pusha
cmp
dec
and
push
icebp
into
adc
jbe
mov
cmp
imul
and
cmp
lods
cmp
xor
cmp
push
mov
dec
ret
lret
sahf
frstor
je
mov
ficoms
bound
lods
add
mov
xor
sub
data16
xchg
nop
dec
mov
ljmp
int3
or
jmp
mov
decb
pop
cltd
orb
xor
push
mov
jp
lahf
push
call
inc
fcomps
sub
lahf
or
ds
mov
das
sti
shll
test
adc
mov
repz
xor
pop
inc
xchg
push
rcll
rolb
std
movsl
jno
rsqrtps
mov
fiadds
mov
xchg
jmp
scas
insb
add
mov
ret
dec
pop
dec
mov
mov
das
sbb
adc
loopne
push
in
movsb
push
push
jbe
sarl
mov
stos
add
mov
ja
insl
daa
stos
es
fstpl
jecxz
mov
in
xor
sbb
in
cmp
and
push
pop
cmp
and
in
icebp
in
lods
dec
ficompl
fsubs
aaa
cmpsb
addr16
mov
ret
hlt
pop
roll
mov
test
es
ret
sub
cmp
push
pop
std
in
jo
lock
scas
test
mov
mov
xchg
in
jmp
dec
adc
into
addr16
fcmovnbe
mov
fnstenv
sbb
ret
movsb
cmp
icebp
mov
mov
movsl
mov
loope
repnz
jns
mov
pop
cmpsb
mov
or
lret
scas
jle
xchg
lahf
pop
addr16
popf
popa
adc
lcall
push
dec
adc
mov
or
cld
mov
add
sti
loope
xor
push
mov
jb
or
push
push
cmpsl
push
add
andl
mov
ja
ss
dec
ja
hlt
rcrb
xchg
and
cmp
loope
dec
sub
not
jbe
andl
add
clc
sbb
mov
repz
out
mov
mov
push
rolb
sub
add
fsub
rcrl
fnstenv
pop
xor
xor
xchg
sub
mov
or
push
int
inc
loope
and
xchg
or
mov
inc
mov
mov
push
push
shlb
fstpl
rolb
stc
inc
mov
iret
jp
dec
js
es
in
push
data16
jg
mov
int3
push
ja
loopne
xor
loop
fwait
adc
loopne
xchg
nop
rcrl
sbb
jb
or
repnz
arpl
aas
mov
push
add
cs
sti
mov
xor
imul
jne
test
mov
add
arpl
and
outsb
movsb
mov
movsl
jg
and
or
loop
ret
fistl
mov
fldl
shrb
inc
gs
push
divb
xchg
xor
cmp
push
ret
inc
gs
inc
aad
nop
sahf
stos
inc
cmpsb
lret
push
and
loopne
imul
inc
das
cmp
xlat
or
push
nop
jbe
cmp
rolb
jmp
mov
push
jne
xchg
push
add
nop
pop
cmpsb
jp
or
mov
sub
popf
push
lods
adc
mov
je
push
mov
pop
loope
mov
sbb
dec
rclb
jne
and
es
xchg
rcpps
xor
stc
dec
ds
nop
sbb
out
rorl
mov
sbb
inc
and
lahf
fs
out
pop
es
dec
mov
push
xchg
mov
arpl
jmp
mov
lea
outsl
ret
repnz
push
fnstsw
movsb
ficomps
jle
push
inc
fldt
popf
inc
sub
in
sub
mulb
dec
rorl
aas
or
hlt
clc
in
dec
jecxz
inc
and
in
and
mov
loope
imul
pop
dec
mov
push
iret
mov
or
inc
sub
xor
xchg
sarb
adc
cli
pop
sahf
dec
stos
adc
push
shrl
dec
shrl
xchg
addr16
in
mov
mov
insb
jne
jle
insl
inc
jmp
and
stos
insb
fstpt
sbb
xchg
insl
int3
xchg
out
movsb
pop
jmp
ds
cmp
inc
lret
push
hlt
cmp
aad
mov
out
cmp
sarl
xor
sbb
in
movsl
ss
cmpb
mov
jnp
push
lret
aas
mov
int
cmp
stos
pop
mov
js
cmp
imul
cmpsl
rcrl
stos
mov
sub
cmp
rcrb
test
out
leave
jle
sbb
cmp
push
mov
xchg
fstpl
cwtl
pop
lods
or
mov
das
sti
mov
lock
pop
pop
lret
push
shl
mov
mov
movsb
pop
xor
adc
mov
shll
mov
repz
sub
sbb
lcall
rol
sbb
arpl
inc
xchg
fucom
mov
std
mov
movsl
pop
xchg
fwait
sti
xchg
jae
cmc
decb
das
nop
leave
aad
imul
sub
mov
pop
push
jno
push
dec
or
test
xchg
cmpsl
mov
mov
mov
adc
or
dec
push
hlt
mov
cmpb
iret
pusha
aas
out
cs
loopne
data16
mov
fs
dec
popl
lahf
mov
test
adc
outsl
sub
mov
sti
cmp
incb
sbb
movsb
sub
and
push
cwtl
add
mov
iret
cld
cs
imul
insb
jb
gs
dec
or
testl
push
mov
popf
aam
mov
js
std
xchg
lea
push
push
and
sbb
cmp
or
imul
inc
pop
int
in
dec
cmp
testl
sti
dec
dec
pop
lock
xchg
bnd
mov
jo
outsl
inc
dec
loopne
lcall
aad
dec
int
lcall
std
push
xchg
xchg
stc
mov
pop
xor
fcoml
addr16
pop
lods
adc
negb
fmuls
repnz
sub
not
stc
add
fisttpll
jne
mov
and
jp
lock
loope
xchg
loope
cmpl
je
daa
mov
iret
jge
imul
mov
flds
sbb
loop
mov
cmpsl
cld
jb
push
xor
xlat
cmp
and
sbb
dec
add
pushf
les
int3
jo
inc
stos
inc
hlt
cli
adc
add
subb
sub
rorb
imulb
stos
pop
lret
lods
jle
jno
inc
aam
fisubs
enter
dec
push
fsubrl
pushf
in
jecxz
iret
cmp
popl
mov
repnz
mov
arpl
jns
das
add
adc
pushf
ret
ficoml
fdivrs
je
cmc
push
add
mov
and
movsl
mov
rorl
lds
das
pop
loopne
insl
pushl
mov
aad
imul
jmp
inc
xchg
aam
mov
push
push
js
mov
test
bound
stos
mov
xorl
jns
js
push
adc
push
out
loopne
pop
dec
out
movsl
and
aas
movsb
jle
jecxz
mov
xor
clc
std
ret
jp,pn
and
popf
mov
js
inc
and
xchg
xchg
mov
frstor
pop
push
jle
inc
or
iret
into
adc
push
scas
cld
mov
xlat
gs
rorb
or
jae
cs
and
xchg
mov
mov
arpl
insb
cs
or
mov
mov
jne
fcmovnbe
push
in
pop
or
data16
incl
sarb
push
inc
sub
pop
sub
pop
in
test
cmp
and
mov
add
jo
and
dec
je
shlb
pop
aad
aad
mov
and
lods
push
inc
pop
addr16
dec
sub
mov
sub
scas
rcl
not
jno
call
pusha
mov
psubusw
ret
push
mov
sub
push
rcr
mov
fidivrs
lods
jge
sub
push
aaa
leave
daa
leave
test
movsl
and
daa
ficomps
pop
inc
xchg
mov
lret
xchg
int3
addr16
xchg
inc
fwait
stos
dec
rcl
inc
scas
cmp
or
mov
popl
in
adc
in
inc
mov
adcl
rcl
outsl
xchg
sbb
fs
imul
in
int
xor
pminsw
mov
sti
aaa
jne
sbb
and
jg
jb
mov
shrb
jge
popf
push
adc
es
pop
rclb
jno
popa
shl
add
movsb
mov
lcall
push
roll
lahf
mov
aaa
call
mov
das
in
test
jmp
mov
scas
add
push
pop
mov
gs
out
adc
fnstenv
rorb
jnp
mov
std
movsb
outsb
stos
aaa
lahf
imul
addr16
pop
repz
les
cmp
loop
test
sbb
push
add
cmpsl
aaa
push
cwtl
xor
in
pushf
mov
push
cmc
mov
outsl
sbb
add
add
xor
es
les
and
xor
push
xchg
sahf
dec
aad
jo
daa
push
lret
jb
les
test
or
jb
test
cmp
cmp
add
sbb
push
mov
jmp
mov
push
dec
ss
xchg
xchg
test
stos
adc
xor
pop
daa
lea
jae
psubsw
arpl
jne
iret
mov
cwtl
popl
aam
or
dec
dec
or
outsb
enter
fists
sub
dec
nop
mov
dec
mov
xchg
push
ret
push
and
push
pop
fnsave
mov
and
push
mov
daa
lahf
mov
push
xor
or
jg
mov
push
rcll
sti
dec
pop
pop
test
jbe
pushf
in
inc
pop
jno
mov
mov
loop
in
fmuls
mov
lock
inc
xchg
sbb
outsb
xor
es
shlb
mov
xor
ror
mov
lods
push
nop
sub
imul
scas
rolb
iret
sahf
jg
push
adc
pop
lods
stos
rorl
inc
sub
enter
aam
jp
stos
mov
add
mov
fcomps
std
jmp
shl
add
jae
mov
push
mov
sbb
dec
repz
sub
inc
or
pop
call
nop
dec
sub
sahf
jo
push
lods
clc
fmuls
and
cmpsb
push
bound
adc
stc
push
setns
jecxz
inc
ret
xor
std
xchg
inc
push
stc
sbb
in
sub
pop
add
in
cmpsl
inc
or
repz
adc
dec
aam
xchg
stos
jne
add
fisttpll
add
cmp
inc
inc
aaa
push
in
push
fimuls
movsl
cmpsb
lret
and
mov
dec
ret
or
mov
sti
xchg
mov
jne
adc
jmp
pop
adc
mov
mov
jecxz
xchg
sarl
mov
cmp
adc
out
add
sub
pop
cmp
cmp
mov
lods
neg
fnstcw
rorb
jge
push
mov
mov
sbb
insb
ret
mov
shrb
xlat
jl
repz
icebp
loopne
stc
cmpsb
jb
hlt
fcomip
push
cmp
out
cmp
push
mov
popa
add
sbbb
insl
push
jnp
sti
mov
inc
mov
sbb
lret
jecxz
cmp
call
shl
les
push
push
mov
cmp
inc
sub
inc
xlat
jle
adc
iret
insl
inc
decl
dec
divl
mov
and
cmc
and
cltd
or
mov
pop
leave
sub
loop
shrl
loopne
rorl
shrb
data16
pushf
jg
inc
popf
adc
xchg
jl
add
dec
push
sbb
jmp
or
add
mov
xchg
mov
aaa
cltd
into
dec
and
fcoms
aaa
in
push
dec
in
test
inc
rclb
adc
xor
push
mov
lret
mov
jb
cmpsl
pop
inc
inc
shlb
adc
adc
push
lret
int3
and
sub
fwait
iret
pop
xor
leave
add
jnp
xor
or
adc
pop
xor
int
or
mov
pop
lret
or
pop
lods
dec
jmp
test
lods
jmp
inc
add
jne
adc
hlt
rolb
and
xor
pop
cld
sti
adc
stos
mov
cmpl
stc
xor
sub
adc
xor
mov
pop
testl
out
sub
mov
inc
cmp
mov
fwait
push
add
cltd
mov
cwtl
jno
cmp
lods
push
xchg
cwtl
mov
cmp
imul
bound
fistl
inc
ss
mov
xchg
add
in
stos
repz
jae
and
loope
stos
int
xchg
imul
stos
cmc
testb
fmuls
sbb
out
mov
or
sbbl
jl
imul
and
mov
gs
mov
push
and
aaa
dec
jecxz
lods
test
aas
or
int3
sub
push
mov
jmp
je
jl
nop
pop
dec
aaa
shrd
push
test
adc
fcmove
iret
clc
xchg
sbb
jo,pn
xor
adc
xlat
xchg
loop
cmc
mov
inc
jmp
mov
xor
in
pusha
cwtl
ljmp
js
lds
inc
subb
sbb
mov
test
sahf
jo
lds
nop
adc
mov
outsl
mov
scas
jbe
repz
insb
push
in
push
shll
jmp
pop
jle
shll
mov
fsubs
and
add
gs
or
rcll
les
xchg
jnp
cmp
mov
iret
xchg
jmp
insl
rcrb
arpl
mov
movsb
sbb
nop
cwtl
dec
jo
ret
leave
inc
mov
sub
lock
loopne
dec
or
pop
ss
pop
popf
jne
setg
xor
mov
loope
push
adc
ja
push
clc
leave
aas
fsubs
ret
mov
fnstsw
pop
mov
and
push
je
jle
ret
ja
in
outsb
lcall
fadd
push
jecxz
mov
test
cwtl
jns
jo
int3
fucomi
fcoml
xchg
cmp
xor
pop
adc
aaa
das
xchg
mov
sti
dec
pushl
pop
iret
rorb
pop
addr16
or
lahf
xchg
stos
sbb
ja
jne
nop
jp
mov
stos
or
add
mov
and
xchg
or
je
inc
dec
pop
icebp
outsb
or
push
lods
xchg
cmp
das
jmp
push
lea
mov
nopl
arpl
pop
sub
imull
sbb
imul
xchg
rcll
out
add
cmpsl
nop
repz
outsl
out
pop
inc
cmp
pop
pop
dec
push
std
rcll
dec
dec
or
imul
xchg
dec
mov
enter
imul
cmp
sbb
sub
aaa
ljmp
shll
dec
repz
jle
ja
in
es
fbstp
dec
or
cmp
or
in
out
push
xorb
orl
or
mull
xchg
dec
in
std
mov
lods
insb
nop
idivl
sbb
test
mov
pop
dec
adc
aas
nop
aaa
pop
push
std
jbe
sub
in
xchg
xchg
lods
mov
mov
sub
call
cmp
sahf
cmc
mov
or
faddl
test
in
or
lcall
or
mov
and
xchg
inc
int
adc
jno
sub
or
scas
fidivrl
cmp
aam
jne
loopne
or
cmpxchg
mov
outsb
push
scas
xchg
adc
cmp
push
ja
popf
imul
xor
lahf
daa
call
int3
outsl
icebp
inc
push
popl
mov
sbb
insb
out
das
and
inc
ret
mov
outsl
add
inc
nop
out
mov
pop
adc
popf
lret
andl
lahf
hlt
xchg
jl
push
in
out
icebp
sub
adc
iret
sbb
rcl
cmpsl
mov
cltd
insb
cmp
xchg
inc
push
push
xchg
fldt
cli
xchg
shl
jecxz
pushf
or
jge
inc
xchg
mov
push
dec
ja
add
xchg
jnp
xchg
out
inc
imul
cmp
sbb
clc
push
imul
pop
mov
in
ds
mov
xchg
inc
ret
stos
xchg
or
or
jecxz
jg
pop
pop
leave
mov
ljmp
pusha
ret
in
aas
and
rorb
and
mov
xor
sahf
mov
leave
int3
pusha
enter
inc
add
cmp
call
rorl
test
xor
testb
pop
inc
lods
rcll
jl
jbe
ds
fisubrl
popa
or
inc
shrl
fmuls
insl
push
out
sahf
jb
jp
xor
test
mov
inc
mov
in
mov
call
dec
test
jo
or
mov
mov
mov
shll
xchg
push
sub
and
rolb
push
cmp
cmp
push
out
mov
sub
sti
xchg
jae
jbe
call
mov
pop
push
lcall
xchg
xchg
arpl
dec
and
xchg
xor
nop
sbb
testl
dec
test
pop
jl
std
pop
add
dec
jnp
insl
lahf
jae
sbb
mov
push
cmp
mov
sbb
scas
jb
test
out
movsl
lods
or
mov
jo
arpl
stos
sahf
dec
jg
cmpl
mov
sub
popa
mov
sub
in
enter
xor
pop
push
sub
sub
pop
insb
mov
adc
mov
xlat
leave
sub
push
adc
dec
lds
mov
inc
push
inc
jo
sbb
mov
xchg
push
or
call
pop
icebp
xchg
cmp
push
xor
and
dec
ja
cltd
in
cmpsb
dec
dec
cli
push
mov
pusha
push
mov
xchg
pop
pop
sbb
sub
fwait
xchg
dec
data16
dec
and
mov
lods
xlat
jge
jle
in
imul
aas
jmp
nop
mov
inc
adc
xor
lahf
loopne
xchg
out
je
adc
loope
aad
les
inc
adc
dec
mov
xor
mov
jo
das
or
inc
movsl
push
adc
sub
inc
or
xor
mov
fistps
fxch
cwtl
xor
push
popa
ret
mov
mov
adc
xchg
jecxz
test
xlat
cmp
loopne
mov
pop
or
sbb
dec
jo
std
fldt
in
xchg
xchg
dec
lret
je
fisttpll
popf
adc
sub
ss
out
mov
rolb
fmull
mov
inc
mov
adc
or
sti
mov
jle
inc
repnz
negb
leave
cs
popf
shll
mov
pop
popw
aas
mov
shlb
push
dec
add
push
xor
mov
dec
out
xchg
cld
js
push
push
mov
xor
rolb
mov
out
jmp
cltd
inc
sbbl
sub
dec
mov
adc
cmp
sarl
sbbl
dec
daa
xchg
lret
jge
rolb
jb
mov
or
push
inc
mov
mov
lahf
push
orb
stc
mov
pop
mov
push
sbb
nop
mov
fnstcw
xlat
push
cld
les
mov
lahf
stos
neg
arpl
aad
cmp
push
rol
stos
data16
jmp
test
in
mov
pop
sbb
shl
push
pop
push
mov
jb
leave
cmp
pop
sti
adc
mov
rcll
xchg
or
lret
xor
mov
push
in
outsb
jb
push
fdivrs
lcall
mov
popa
inc
shr
or
jne
adc
inc
out
mov
mov
jmp
cmpsb
sub
jmp
pop
sbb
mov
jb
movsl
jp
sub
mov
push
fistpl
cmpsb
decl
dec
jae
dec
mov
mov
pop
dec
and
jo
cli
subb
je
push
and
jp
xor
mov
cld
pop
loop
fmuls
lock
add
or
jg
rclb
repnz
mov
mov
icebp
add
cmpsl
mov
adc
shrl
or
ja
daa
into
cmp
mov
mov
iret
repnz
and
in
and
dec
jae
jge
aas
rorl
or
mov
cmp
push
cmpsl
pusha
repz
xor
or
cmc
test
mov
push
sub
jle
int
in
lret
loopne
ret
inc
sub
negb
lahf
iret
jns
xor
cli
shlb
lret
inc
xor
enter
ljmp
mov
movsb
add
leave
push
cmp
pop
jle
inc
or
roll
xchg
loop
push
push
movsb
aad
inc
push
roll
or
hlt
ljmp
fs
daa
ja
shll
mov
pusha
outsb
loopne
testb
idivb
xor
dec
repz
lcall
mov
sub
jmp
or
std
jl
jg
test
je
lock
outsb
cmp
frstor
popf
popa
test
insl
or
jns
pop
sbb
push
push
hlt
imul
xor
push
and
mov
pop
xor
and
rorl
push
mov
insl
or
jbe
and
and
imul
ljmp
scas
test
test
clc
orl
fldenv
xchg
sti
shrl
and
mov
xchg
mov
sub
ljmp
push
je
xchg
adc
xchg
pop
shr
sub
je
xor
xchg
cmc
mull
jg
lcall
ds
out
push
xlat
push
mov
mov
sahf
fwait
cmp
sub
leave
loop
and
xchg
sub
sbb
sbb
or
jae
xchg
xlat
and
add
int3
jns
inc
enter
pop
fstpl
mov
ret
xchg
cmpsb
mov
mov
ds
test
cld
sub
mov
push
bound
and
lcall
push
lret
and
int3
adc
pusha
lcall
std
jo
xor
sar
ret
call
mov
movsl
in
cli
push
mov
dec
mov
clc
adc
push
pop
das
inc
inc
dec
out
push
xor
xchg
dec
add
fsubrs
ret
push
jae
lahf
pop
gs
mov
mov
inc
sbb
popf
cmp
setge
push
adc
in
cmp
jae
mov
add
xchg
mov
dec
pop
aas
sub
testb
jg
adc
in
outsb
ljmp
pop
mov
cmc
cltd
rcrl
into
jmp
sbb
imul
addr16
arpl
lret
loope
adc
push
dec
mov
pop
jp
adc
xchg
sub
xor
and
jg
jno
dec
and
arpl
subl
lahf
add
sub
cld
add
xchg
ror
cmp
or
and
pop
in
das
loop
sub
ja
shl
mov
ljmp
push
pushf
mov
popa
in
stc
mov
mov
out
or
mov
mov
or
jp
ret
clc
das
ja
hlt
cmpl
cmp
int3
repnz
push
pop
xlat
fdivrl
jg
adcl
int3
push
jne
les
enter
test
adc
movsb
ret
and
mov
addr16
popf
jbe
sub
lods
bound
ret
inc
mov
pop
dec
add
xchg
mov
or
ja
jb
int3
scas
cmpsb
out
cmp
xor
rcl
les
clc
rorb
iret
dec
xchg
cmpsl
arpl
loope
movsb
xchg
sub
mov
notl
scas
idiv
out
push
test
jns
or
stc
shlb
addr16
push
mov
or
push
cld
mov
jnp
out
dec
add
stos
ljmp
fcmove
xlat
mov
daa
and
sahf
and
ret
scas
ss
cmpsb
add
in
cmp
into
inc
and
jg
mov
cmp
inc
cld
enter
rorb
mov
movsb
loope
jge
es
sahf
jno
or
lods
test
sbb
xor
jb
jg
xchg
push
jg
mov
lods
add
repnz
fiadds
jns
xchg
rep
das
xchg
in
push
roll
or
ret
lcall
push
push
inc
xor
cmp
xor
out
test
adc
or
lret
and
pusha
sbb
outsb
ficompl
mov
dec
sub
jno
test
push
jmp
daa
stc
aam
loope
sbb
add
out
adc
add
int3
shll
sub
pop
dec
and
imul
ret
cmp
add
add
mov
or
inc
xchg
adc
xor
shr
sbb
and
jae
cmp
adc
fldenv
je
rcl
xchg
gs
dec
mov
cmp
jae
push
pop
adc
adc
mov
cmp
push
ror
inc
mov
cmp
insb
je
mov
arpl
pop
jmp
adc
xor
lock
push
push
jg
mov
ds
mov
dec
testb
repnz
fisttps
sub
sbb
or
inc
pop
mov
insb
mov
push
lods
mov
push
xchg
inc
xorb
jge
sbb
xchg
jl
stos
push
leave
lea
mov
pop
mov
leave
daa
dec
data16
push
dec
cmp
dec
stos
aas
pushf
dec
mul
mov
fstpl
rolb
add
push
inc
push
insb
push
pop
ss
mov
xchg
mov
popa
mov
loop
push
outsl
test
mov
pop
sbb
mov
cmp
xor
or
xor
js
cmp
cs
movsl
enter
pop
iret
add
iret
cmp
adc
mov
cmc
daa
jmp
test
or
int
xor
adc
ljmp
aam
pop
test
or
outsb
aaa
cmp
xchg
pop
je
pop
in
ret
rolb
cmp
enter
lcall
and
push
aaa
add
dec
inc
or
sub
mov
jl
xor
stos
sbbb
test
mov
jmp
and
cmp
and
mov
jno
out
fisubs
mov
jp
inc
daa
jne
xchg
push
mov
sub
lret
lods
sub
mov
or
fucom
inc
xchg
into
add
jecxz
add
stos
test
je
and
aad
push
dec
fbstp
in
sub
push
jl
into
ret
or
stc
fisttpll
mov
rorl
mov
mov
subl
lods
out
dec
and
fstpl
aad
or
xchg
rcrl
inc
lret
aas
dec
mov
mov
mov
pop
out
inc
and
jl
add
pop
popa
sbb
xchg
sbb
into
jecxz
xor
dec
pop
inc
push
push
and
data16
or
jge
cmp
pop
push
fadds
and
orl
stc
jecxz
jle
and
jmp
add
adc
adc
rorb
ret
adc
xchg
subl
adc
rcll
xchg
or
aam
sbb
push
aad
mov
xor
sub
cmp
dec
dec
insb
xor
pop
sbb
xor
mov
ss
xor
xor
dec
mov
jne
xor
sbb
out
scas
or
xor
xchg
dec
movsl
push
cltd
inc
cmpsb
jle
hlt
pop
add
xor
fs
fwait
mov
xor
into
sbb
jo
jae
push
sub
ret
xor
and
add
sub
and
aam
inc
add
mov
pop
mov
add
sbb
ja
mov
pop
insl
shr
xchg
jle
movsb
in
fcmove
loop
inc
xchg
in
lret
push
xchg
sti
adc
lcall
pop
test
pop
jo
rcrl
or
and
cli
push
mov
mov
pop
xor
daa
or
lret
or
fisttpll
fisubrs
inc
mov
cmpsl
test
jmp
or
daa
out
out
cmpb
pop
sbb
pushf
xchg
push
xor
rolb
xchg
ficompl
mov
inc
es
cmp
out
loop
cs
mov
lods
test
pop
mov
fs
popa
cld
push
xchg
mov
add
lds
dec
or
mov
shll
xchg
cli
mov
add
addr16
dec
mov
sub
mov
cld
fsts
jne
sbb
bound
push
add
lods
inc
test
inc
das
push
jle
jmp
pop
pop
cmp
mov
push
out
xor
add
std
aaa
lods
in
hlt
xchg
pop
rorl
imul
cmp
repz
fstps
cld
mov
xor
mov
sbb
dec
dec
or
adc
push
nop
dec
movsl
sbb
rcrb
ss
and
mov
xchg
lods
es
es
sbb
sar
xchg
push
push
fsub
xchg
push
fwait
mov
mov
addl
rolb
sub
jmp
jnp
loopne
add
in
fs
pusha
xor
cmc
push
loope
xchg
lret
inc
lahf
insb
push
mov
cs
fwait
push
les
xchg
lds
ljmp
out
ljmp
dec
xorl
movsl
jg
mov
sti
out
dec
pop
mov
cmp
int3
and
orb
aaa
lret
jb
movsl
test
mov
xor
cli
loope
add
sub
repz
fmull
sub
mov
fs
nop
mov
push
dec
xchg
or
pop
cld
sub
enter
aam
ds
lea
xor
jecxz
test
mov
mov
fistpl
dec
push
inc
insl
mov
sti
adc
push
cmp
je
inc
mov
testl
fwait
in
push
mov
sti
and
jae
pop
sub
cli
stos
data16
pop
hlt
shrb
movsb
mov
std
push
mov
and
sub
stos
mov
mov
fs
push
dec
aaa
jnp
jo
push
xchg
push
adc
pop
in
repz
fcmovnb
or
es
xor
inc
jne
test
dec
push
jmp
inc
mov
pop
mov
mov
movsb
nop
cli
aas
lret
and
and
and
repnz
imul
cmp
or
outsl
or
or
sahf
pop
or
fs
mov
popf
notb
mov
inc
mov
outsl
sub
rcll
pop
mov
pop
jo
testl
and
std
mov
cmp
pop
shll
stos
fistpl
inc
lods
add
inc
je
dec
and
jne
mov
scas
fdivp
jmp
imul
faddp
mov
leave
push
push
pop
es
mov
jns
jl
push
cmp
push
xchg
jl
lea
test
add
int
js
pop
push
hlt
push
test
and
leave
jle
stos
test
push
adc
mov
lret
pusha
incl
mov
out
push
or
dec
dec
fldt
out
daa
loopne
mov
adc
push
lret
in
hlt
xor
and
jl
in
loope
out
int3
lock
xlat
daa
dec
sbb
movsl
mov
jnp
xchg
adc
jecxz
add
movsb
outsb
ror
or
xor
push
adc
and
arpl
fidivs
jo
or
pop
push
mov
inc
jle
outsb
in
movsl
test
repz
add
add
fdivrs
jnp
mov
cltd
in
hlt
lock
pop
mov
out
push
das
cmp
push
jecxz
roll
inc
and
push
push
fdiv
jl
and
inc
iret
fneni(8087
mov
pusha
xor
push
sub
xlat
pop
inc
xchg
subb
lea
hlt
adc
push
orb
xchg
mov
dec
xor
add
stc
push
push
shll
aad
inc
mov
dec
cmp
xchg
repnz
dec
jle
jbe
nop
xchg
mov
test
add
push
outsl
xchg
scas
lcall
pop
fsubs
xchg
push
jl
xchg
push
lds
int
dec
addb
jg
rorl
je
inc
cmp
or
cmp
xor
mov
popf
mov
add
jnp
out
cmpsl
mov
mov
mov
outsl
xlat
pop
adc
cmp
out
dec
cmp
fists
pop
or
jbe
out
xchg
ret
shlb
push
pop
jg
sbb
mov
push
xchg
lods
jbe
and
enter
inc
push
sbb
inc
addr16
cmp
aas
outsl
cmp
xor
cmc
mov
push
imul
int
pushf
pusha
loope
ret
lret
or
aaa
into
adc
mov
lea
add
adc
outsl
imul
cmpsb
push
sbb
daa
pushf
mov
dec
ljmp
adc
push
mov
mov
and
sub
sub
or
clc
and
pop
fsubr
fs
pop
xchg
pushf
xor
mov
push
ror
dec
nop
xchg
test
stc
fsubrs
scas
pop
dec
andb
jne
rcr
fnstcw
pop
cmpsl
sbb
fs
dec
ret
mov
dec
cmp
sahf
mov
add
xchg
sub
mov
ja
addr16
pop
mov
scas
inc
add
out
cmc
add
mov
in
pop
negb
mov
out
cwtl
xor
cs
pushl
fcmovnbe
xor
les
or
arpl
jmp
pop
ret
sub
jge
jns
iret
xchg
in
mov
in
cmpsb
in
pop
in
ja
and
leave
sub
jnp
lds
lods
and
inc
fisttpl
das
nop
xor
aas
xor
cmc
pusha
dec
fsubs
je
jg
push
cmovbe
mov
cmp
push
je
adc
xchg
aam
or
xchg
xorb
xchg
dec
leave
cmp
xor
push
inc
fmull
movsb
fcoml
je
aaa
mov
jl
mov
and
or
sbb
mov
push
popa
mov
out
stos
or
sahf
or
cmp
daa
mov
jae
xor
orb
xor
leave
lock
daa
loopne
lods
add
mov
adc
dec
mov
push
imul
pop
sbbl
jmp
sbb
adc
loopne
jle
into
or
movl
jge
pop
push
sub
jne
jecxz
mov
push
xchg
in
in
insb
in
add
push
fsubrl
sbb
aas
xchg
adc
push
mov
stos
jg
push
adc
dec
sahf
mov
mov
rorb
cmp
lds
out
into
outsl
dec
mov
negl
jnp
ljmp
pop
push
xchg
ss
mov
cmc
push
xor
sub
jo
loop
adc
fstp
mov
popl
dec
movq
jnp
add
not
xchg
xorl
shlb
int3
inc
mov
xor
xchg
arpl
mov
jns
push
jae
fildll
fwait
or
sub
sarl
out
or
mov
hlt
jl
in
push
sub
inc
and
add
mov
xchg
das
xor
jg
push
call
pop
out
jl
rorb
jnp
test
gs
or
xor
in
xchg
and
arpl
xchg
mov
popa
adc
jecxz
leave
mov
fcmovnb
xlat
sub
add
push
loope
cmp
addr16
mulb
scas
or
ret
in
shl
add
shl
pushf
xor
stos
push
cld
outsb
mov
xchg
pusha
scas
jg
ret
das
xchg
les
mov
ds
gs
and
dec
loop
ljmp
rclb
inc
pop
lds
sbb
xor
jecxz
les
stc
shrl
push
sbb
sub
dec
in
andl
dec
ja
xor
pop
cwtl
dec
jns
push
imul
xchg
push
inc
xchg
loop
dec
jb
and
jge
jns
mov
hlt
mov
dec
in
jg
sti
dec
ds
fistpl
out
cmp
push
and
pop
cmpxchg
xchg
negl
inc
lcall
mov
jg
test
push
jno
adc
sbb
push
out
lods
out
mov
jmp
dec
sub
mov
push
in
adcb
mov
cld
mov
push
lret
dec
pop
popf
adc
ljmp
addl
inc
lock
sbb
xor
push
inc
int3
push
outsb
mov
cmpsl
fiaddl
test
adc
add
and
dec
ret
movsl
pop
outsb
sahf
cmpsl
fstpt
repnz
jb
sub
repnz
add
dec
sbb
jnp
std
add
fs
std
jnp
stc
mov
push
scas
stos
push
xor
sahf
sub
push
pop
xor
push
sub
loop
sbb
test
adc
cmpsb
stos
and
pop
adc
into
leave
outsb
shll
push
shll
cmp
daa
push
pop
inc
icebp
push
xchg
mov
into
shlb
fnsave
insl
pop
cs
mov
sarl
or
jb
sub
pop
sbb
sub
js
add
dec
shr
fnstsw
or
sub
cmp
cmp
lcall
mov
push
fidivs
lcall
int
push
sti
dec
sbb
dec
aad
pop
outsl
dec
sbb
and
xor
addr16
pusha
dec
mov
pusha
sbb
test
mov
hlt
aaa
add
mov
inc
dec
xchg
and
or
movsb
mov
insb
add
mov
les
sbbb
push
xchg
fldcw
repz
pop
iret
xchg
adc
cld
outsl
and
arpl
mov
mov
dec
adc
mov
lret
pop
scas
loope
and
jo
dec
add
cmp
gs
ret
shrl
jge
and
xor
and
lock
mov
push
enter
xlat
lret
stc
push
in
sub
xorl
dec
jmp
pop
sub
test
inc
and
inc
xchg
push
sbb
push
sbb
jmp
sub
lcall
popf
fsubl
cmp
mov
clc
push
add
jecxz,pn
xchg
rorb
fists
notb
adc
sub
rorl
scas
pop
daa
sbbb
xchg
cs
xor
outsb
adc
push
cmp
mov
cmp
jle
xor
out
xchg
ss
jae
or
aad
subb
insb
add
loope
sub
sbb
mov
xchg
add
inc
in
sub
dec
insl
sahf
push
mov
and
scas
cli
popf
imul
jnp
mov
das
inc
cmp
dec
mov
adc
mov
jno
iret
sub
mov
jo
flds
cmp
push
jl
enter
shrb
mov
mov
jge
mov
fdivrl
add
jge
add
mov
mov
add
stc
cwtl
or
stos
ljmp
jb
mov
repnz
jecxz
xor
inc
lcall
cmp
cmpb
jo
jae
sbb
call
es
add
addr16
push
ret
adc
fisubrl
xor
add
push
xchg
pop
mov
aam
dec
and
add
pop
pop
hlt
push
jnp,pt
loop
cmpsb
add
aaa
xor
loop
rcrb
test
pushf
pop
cli
add
sub
jb
pop
leave
inc
pusha
inc
add
leave
shrb
push
and
pop
ss
xor
hlt
popa
xor
cli
lret
pop
cmpsb
push
sub
ror
sahf
and
rclb
fs
push
daa
inc
push
data16
iret
lahf
and
bound
adc
int3
mov
mov
into
lahf
int3
push
into
popf
sub
jns
popf
push
leave
mov
daa
stos
mov
dec
in
ja
add
int
xor
and
lret
bound
movaps
stos
sub
xlat
pop
dec
cmp
mov
cmp
push
addr16
pop
cmpb
js
lods
ds
jae
movsb
mov
xchg
sbb
mov
imul
pop
pop
add
shrb
rcrl
xor
adc
pop
movsb
mov
inc
pop
jnp
xchg
pop
fildl
dec
lods
fildl
data16
mov
ret
jbe
dec
imul
lds
mov
dec
jp
mov
test
xchg
dec
xor
mov
sbb
cmc
scas
xor
lahf
cld
into
dec
insl
mov
fildl
mov
int3
sahf
mov
pusha
in
stc
jp
outsl
push
loopne
sub
rorb
and
repnz
xchg
in
shlb
lods
cmp
dec
in
sub
je
mov
push
cwtl
or
int
lods
fwait
into
push
nop
xchg
add
nop
popa
mov
pop
fwait
add
jp
cmpb
repnz
mov
pop
xchg
fcoml
in
fadds
cmp
cmpb
mov
jge
jns
add
mov
enter
pop
push
cltd
pop
in
jo
dec
dec
xchg
es
stc
jg
aaa
and
mov
cltd
imul
push
lahf
loopne
mov
xchg
cmp
mov
xor
adc
mov
mov
rorl
int
jmp
inc
addr16
or
or
pop
shlb
movsl
xor
aaa
cmp
adc
fs
gs
dec
mov
pushf
adc
and
jo
xchg
adc
push
les
jns
lds
jo
ss
notl
fstpt
pop
sub
bound
das
push
sub
cmp
aas
clc
cmpsb
fcoml
push
arpl
mov
ljmp
or
or
bound
daa
neg
mov
adc
movsb
sbb
dec
iret
mov
mov
sub
adc
in
std
out
mov
pop
test
aas
repz
lods
orb
dec
inc
dec
iret
xchg
rorl
imul
jl
jae
add
or
int3
inc
dec
jp
mov
fmuls
push
ds
int3
mov
cmp
or
jbe
lret
push
rorl
outsb
mov
daa
dec
sub
call
mov
cmpsl
leave
xchg
stos
outsl
mov
inc
mov
in
mov
imul
aaa
orb
or
repnz
xor
xor
adc
inc
mov
xlat
in
lds
ret
in
inc
lahf
hlt
js
pop
xchg
das
adc
pop
xchg
int
push
scas
movsl
mov
dec
bnd
jbe
pop
int3
addr16
mov
xchg
addr16
mov
lea
mov
inc
out
roll
ficoml
sbb
lock
aaa
ds
xchg
or
test
fdivl
fs
pop
in
mov
push
movsb
divl
inc
arpl
xor
dec
adc
int
cmc
rolb
mov
scas
std
sbbl
mov
sub
pop
lods
in
mov
pop
inc
mov
cmpsl
rclb
xchg
scas
shll
adc
adc
jns
insl
adc
sbbb
ret
xor
cwtl
adc
inc
fdivl
movswl
into
sub
sub
lret
and
int3
sbb
fidivl
add
cwtl
sti
repnz
pop
shll
mov
insb
mov
test
cmp
mov
imul
add
adc
xchg
or
loop
lods
scas
pop
fwait
mov
jb
aam
incl
add
mov
xor
mov
inc
cmp
test
pop
cmp
rdpmc
mov
out
sahf
add
popf
mov
push
ja
mull
or
jecxz
jle
fisubrl
lret
test
std
adc
xchg
pushf
add
aas
mov
push
push
lods
lods
dec
push
test
lret
push
push
stc
ja
and
push
xchg
fldenv
push
or
into
dec
cltd
xchg
inc
loopne
addb
mov
lods
int3
xchg
lods
into
sahf
xlat
xchg
popa
and
call
in
imul
cmp
cmp
loope
pop
pusha
scas
lods
dec
ret
outsb
orb
rcrl
lock
or
xorb
mov
pusha
pop
gs
xor
scas
push
int
cmp
cmp
cs
sbb
cmp
es
lea
xor
lds
mov
pop
mov
push
push
int
sub
lds
push
out
movsl
or
and
mov
shrb
negl
push
jmp
cmpsl
aas
test
mov
dec
push
lds
jne
std
pushf
push
xchg
aaa
push
xor
xor
push
idivl
push
pop
mov
or
dec
mov
in
daa
outsb
mov
cmc
aad
sbb
lods
inc
int
inc
shll
or
dec
lret
push
cmpsl
push
loop
fmuls
shl
js
test
mov
sbb
test
mov
and
or
dec
jb
pushf
adc
jbe
test
aad
sub
shr
rorb
repnz
ss
mov
aam
subb
test
jo
js
lret
sub
xchg
iret
out
cmp
not
jp
xchg
adcb
or
or
nop
lcall
or
sub
call
sbb
ja
cmp
sti
out
jne
clc
xchg
and
lret
adc
adc
data16
jae
fiaddl
pop
cli
jmp
in
outsb
dec
out
sbb
stc
inc
fmul
pop
sub
adc
jecxz
in
fsubl
sarb
rolb
push
or
push
mov
notb
ja
cmpsl
stos
lods
and
cmp
ds
mov
popf
xor
lods
xchg
scas
push
jo
test
imul
lret
fildll
push
inc
and
push
ljmp
gs
into
sub
jg
jl
pop
mov
popa
incl
int
add
maxps
mov
adc
dec
mov
jge
mov
cmp
mov
mov
push
sar
jmp
cmpsl
pop
xchg
sahf
insb
stc
xchg
insl
pop
dec
ret
pop
int
inc
adc
xchg
xor
xorl
mov
and
xor
dec
popf
push
fcoms
push
jle
outsl
jmp
jnp
inc
rcrb
push
out
imul
lret
out
testb
test
in
addb
jne
orl
push
pop
dec
pop
les
mov
ror
fists
jo
sub
push
jp
mov
data16
add
in
cmpl
cltd
jns
mov
cmp
in
pusha
pop
insb
and
jmp
mov
xor
inc
loope
pop
in
xor
in
sbb
add
out
or
add
ret
cmp
and
or
add
into
push
dec
arpl
adc
out
out
mov
mov
jp
dec
shlb
loope
js
out
rcll
jge
dec
lret
ljmp
imul
into
mov
loopne
dec
mov
addr16
clc
push
sub
ja
lds
inc
sbb
mov
sti
cli
and
fisubl
push
add
rolb
iret
lods
fidivl
push
inc
leave
jae
mov
cli
mov
xchg
insl
pop
lods
out
and
outsl
iret
scas
and
sub
mov
sahf
std
push
inc
clc
xor
sub
add
xchg
sahf
arpl
cmpsl
fistpll
insb
clc
sbb
dec
iret
fisttpll
cmp
jge
push
lret
loope
movsl
subb
mov
mov
jns
push
cmp
cltd
inc
mov
cmp
fldenv
push
hlt
lods
or
push
das
stc
stc
lea
les
mov
stos
sub
movsb
xchg
or
nop
adc
dec
arpl
gs
pop
jecxz
push
loopne
push
xlat
jmp
push
pop
rcrb
out
ss
cmp
pusha
pop
pushf
enter
push
cli
adc
dec
or
inc
xchg
stos
popa
aad
pop
push
sub
push
in
aaa
add
dec
dec
pop
sbb
mov
push
push
mov
xrelease
jp
movaps
sub
push
inc
mov
mov
and
jecxz
aaa
jne
pusha
aaa
scas
icebp
xchg
pushf
xlat
or
pop
cbtw
mov
lcall
sti
push
into
pop
add
push
add
loopne
andl
les
test
push
xor
add
movsl
xchg
sbb
outsl
mov
xchg
rol
mov
enter
in
nop
scas
jg
jg
mov
jnp
lret
pop
mov
or
inc
cltd
outsl
loop
mov
fimull
inc
jnp
xacquire
mov
xor
mov
xchg
lcall
sub
cli
sti
loopne
cltd
leave
fisttps
adc
mov
xchg
jo
mov
aam
data16
adc
sbb
add
fldenv
xchg
xchg
or
subl
mov
cmp
ret
adcl
insl
fdivl
mov
jl
cld
add
loop
jecxz
mov
sti
push
xor
and
inc
xadd
lods
inc
idivb
mov
jp
mov
add
in
cmpsb
call
xor
and
outsl
dec
enter
lret
movsl
jmp
adc
mov
sbb
mov
pushf
sub
jg
dec
xlat
push
sub
or
mov
in
dec
inc
sub
es
nop
mov
sub
pushf
loope
subl
jae
push
rcrl
pop
adc
jp
dec
and
adc
push
dec
lds
adc
pop
sub
pop
xchg
or
sbb
adc
loopne
mov
les
shlb
xlat
fwait
ret
dec
cmpl
pop
mov
mov
mov
mov
jo
jno
xchg
shlb
mov
lret
das
push
test
and
sub
ret
aam
jo
jmp
iret
mov
dec
mov
jae
mov
add
je
push
pop
cmp
dec
ret
lods
sub
and
sub
mov
inc
gs
mov
xchg
pop
jnp
out
out
fcoml
ljmp
mov
xchg
adc
mov
in
push
fsubl
xor
fstpl
adc
and
add
and
aad
scas
in
dec
mov
dec
jl
nop
sahf
pop
inc
repz
shlb
push
mov
outsb
xchg
xor
lods
addr16
inc
xor
lds
cmp
inc
imul
sbb
xchg
bound
sahf
xchg
rorl
movsl
scas
jae
or
add
mov
rolb
xchg
iret
pop
add
mov
popa
and
lret
cmc
out
insl
xor
cmpsb
pop
fidivrs
cmp
and
mov
pop
jmp
add
es
xorb
fwait
cmc
out
test
enter
stc
mov
pop
test
inc
test
in
mov
add
cwtl
mov
in
popl
test
cwtl
xchg
xor
xchg
pop
inc
jge
and
jno
aam
sub
cmc
inc
xor
jmp
add
xchg
lahf
pop
jnp
mov
jo
pop
cmpl
cmp
gs
xorb
cwtl
data16
lods
jge
push
into
imul
aam
jg
ret
push
mov
addr16
jecxz
lods
ljmp
lahf
xor
leave
sub
push
in
into
jmp
loopne
add
sarb
icebp
popf
sarl
mov
xor
mov
jl
fisttpll
and
push
pop
xchg
imul
addb
fldl
mov
in
jecxz
cli
dec
inc
mov
lret
pop
mov
sbb
pop
loop
jns
jae
mov
pop
ds
rol
lret
xchg
ficomps
ficompl
cmp
push
pop
cmp
add
ljmp
adc
jns
clc
cmp
jle
call
pop
bound
loop
dec
shrl
jg
cmpsl
mov
cld
mov
popa
shrl
jg
pop
jmp
jb
or
add
ret
addb
xchg
xchg
cli
stos
pop
popf
out
dec
aam
or
xchg
inc
dec
or
ret
lret
push
or
add
push
mov
push
std
mov
je
push
mov
movsl
sbb
add
or
out
out
cmpsl
or
cmc
pop
add
and
clc
lahf
adc
push
ret
xchg
repnz
sub
stc
ret
pop
mov
cmp
push
mov
int
fsubl
ffree
mov
call
mov
insb
in
mov
and
mov
add
mov
adc
inc
rclb
and
je
mov
mov
sbb
movsb
push
mov
scas
aaa
push
and
hlt
inc
or
mov
pusha
scas
sub
add
hlt
imul
add
push
add
jne
jg
stos
lds
add
jle
cwtl
cmc
adc
push
pop
rorl
lcall
xor
ftst
or
xchg
fidivl
inc
push
xchg
pushf
cltd
inc
in
sub
ffree
mov
mov
pop
xlat
pop
out
adc
mov
push
sub
imul
or
dec
mov
aam
add
push
fs
stos
xchg
jmp
add
es
sti
push
push
hlt
mov
neg
jmp
dec
test
pop
mov
cmc
icebp
out
repz
pusha
xchg
jb
in
and
ljmp
push
repz
push
fnstenv
mov
add
dec
push
sbb
mov
loope
jl
mov
test
push
fadds
stos
mov
sub
mov
cmp
add
dec
test
dec
dec
and
jmp
mov
outsl
popa
mov
call
inc
xchg
xor
scas
fcmovne
jbe
xor
sbb
insb
sti
pop
sbb
and
addr16
test
in
or
stos
jno
cmpsb
dec
push
inc
jbe
mov
sbb
iret
ljmp
mov
cmp
inc
inc
scas
xor
test
mov
es
jge
mull
bound
mov
movsb
lods
lcall
sbb
data16
iret
call
enter
iret
rclb
xor
dec
stos
cmp
adc
sti
pop
fwait
roll
arpl
jbe
int
aaa
mov
or
inc
mov
pusha
mov
rorb
xadd
in
lret
lret
jnp
xchg
jmp
add
push
cmp
aad
in
jmp
imul
aad
cmp
dec
jmp
mov
pop
out
xchg
je
aaa
cli
sub
int
ret
adc
test
push
xchg
sub
test
in
cli
xor
push
data16
and
outsb
push
out
adc
subl
pop
sbb
outsb
mov
or
movsb
out
ret
cmp
and
adc
push
lcall
sub
jae
subb
ficompl
outsl
fistpll
test
cmp
es
xchg
pop
lret
xchg
bound
sbb
addr16
adc
dec
js
sub
incl
loope
adc
inc
bound
xor
xor
sub
sbb
cmp
daa
push
pop
xlat
xor
push
cmc
xor
lods
sub
cs
scas
xor
push
aam
pusha
inc
xor
xor
out
pop
adc
jmp
jae
aam
cli
add
cmp
push
mov
jge
xchg
mov
push
fbld
ss
cmp
sti
scas
cld
fidivl
xor
sub
fs
lcall
cmp
sbb
pop
lret
in
pop
in
pop
aad
movsb
pop
gs
inc
cld
pop
or
add
cmp
pop
repz
aad
imul
fisubl
and
bound
jmp
ret
imul
mov
rorb
repz
pop
loop
paddusb
aas
cmp
or
mov
sahf
insl
add
adc
lret
sbb
add
testl
sbb
mov
dec
pop
inc
sbb
jge
adc
aam
push
sbb
lcall
out
xchg
xchg
mov
dec
test
adc
mov
mov
mov
je
and
in
cmc
lahf
loopne
xchg
ss
int3
orb
lock
sbb
add
mov
test
lret
lods
fstp
mov
fcmovnu
fwait
fdivr
arpl
daa
sarb
es
sbb
add
jns
xchg
adc
mov
push
fldenv
inc
imul
xor
sbb
mov
in
cmp
mov
lds
arpl
push
push
push
mov
mov
xor
sbb
scas
xor
fucomip
mov
adc
fidivs
subl
lret
inc
call
mov
xchg
fistpl
jnp
mov
xor
adc
mov
testb
xchg
cmp
inc
dec
inc
das
movsl
push
daa
add
sub
xchg
shll
sbb
mov
dec
mov
mov
sbb
pusha
push
cmpb
sub
test
clc
pop
call
pop
mov
es
fistps
sub
or
cwtl
iret
lods
mov
adc
cmpb
jg
xchg
leave
pusha
mov
or
movsw
cli
insb
xor
xchg
cmp
sub
int3
imul
loop
repz
loop
mov
cmp
cmp
nop
mov
fstp
and
or
pop
jl
push
jnp
movsb
and
pop
xchg
and
add
clc
dec
push
jnp
jmp
cs
push
and
mov
jnp
mov
into
sbbb
cmc
cwtl
adc
mov
add
push
nop
or
in
dec
xor
test
xor
stos
test
push
xchg
mov
mov
in
add
mov
mov
push
pop
imul
fcmovu
repz
in
sbb
cmp
pop
mov
lahf
aad
cmp
test
xchg
or
icebp
jne
or
aas
jle
test
std
in
call
mov
xchg
add
ret
xor
or
pusha
inc
lea
xchg
daa
test
out
sub
mov
aaa
dec
out
sub
js
xchg
pop
mov
loopne
mov
les
loopne
les
jle
repnz
push
xchg
cmpsl
stos
shlb
aam
push
push
lahf
xchg
jnp
clc
dec
enter
adc
push
leave
lret
fbstp
push
push
and
repnz
sbb
cmp
jl
push
out
add
adc
cld
jbe
dec
test
dec
dec
cmp
inc
lret
into
cmp
shl
ret
mov
dec
pop
add
jns
and
psrlq
pop
pop
les
sub
in
in
repnz
std
aad
div
push
jns
dec
scas
mov
adc
shrb
icebp
js
pusha
mov
fistpll
sub
fwait
ja
lods
mov
inc
inc
ds
inc
mov
fstps
sbb
les
fbld
jb
outsb
cmpsl
arpl
inc
enter
inc
jge
cmp
mov
iret
clc
cli
inc
mov
hlt
jns
pusha
lret
push
mov
in
stos
sbb
jp
out
and
or
icebp
and
or
push
dec
stos
imul
je
mov
rcrl
loope
hlt
xchg
cmpsb
pop
mov
clc
sub
stos
pop
fsts
testb
sub
jo
aaa
gs
loope
xor
ret
pop
ficoms
inc
push
jge
iret
loopne
ret
mov
mov
out
aas
enter
sub
xor
sbb
ss
sti
arpl
sahf
fldt
aas
adc
mov
mov
sub
jp
insb
fistpll
push
cmp
call
or
or
nopl
out
xchg
sbb
and
jnp
xor
outsb
in
sahf
leave
cmpb
in
cmp
inc
int
bsr
aas
insl
lcall
adc
pop
sub
pop
sbb
pop
test
orl
cmpsl
rcrl
push
pop
test
sub
ds
popl
leave
cld
add
mov
xor
jno
and
sbb
hlt
call
mov
ljmp
cs
out
es
enter
lahf
movsl
nop
in
popa
ja
and
insb
sbb
scas
pushf
repnz
or
sbb
push
jae
dec
outsl
or
fdivp
inc
ljmp
out
cmc
xchg
xchg
shlb
iret
xor
xchg
popf
imul
incb
lock
mov
stos
push
mov
lgs
lret
mov
sub
push
lock
daa
sbb
xor
movl
lea
lods
push
inc
outsb
xor
and
dec
clc
incl
mov
xchg
and
cmp
push
shlb
dec
outsl
inc
jns
sbb
dec
scas
and
mov
inc
jmp
pop
loopne
cmpsb
decl
jae
pop
dec
stos
pop
sub
lahf
loope
sub
mov
cmp
xlat
shr
push
ljmp
fmuls
mov
insl
fcmovu
enter
jmp
mov
push
loop,pn
add
notb
push
push
jmp
popa
pop
xchg
inc
pushf
dec
pop
add
sbb
loop
dec
add
or
xorl
js
jbe
dec
jp
lock
push
dec
fcoml
xchg
pop
pop
fildll
xor
inc
mov
sbb
jno
cmpb
rdmsr
fnsave
mov
push
adcl
popf
inc
mov
push
leave
aaa
fnsetpm(287
pop
dec
mov
xchg
mov
add
inc
or
adc
shl
cmp
pop
sub
xor
cmp
adc
jnp
sbb
bound
jmp
out
dec
adc
adc
scas
or
xor
rol
div
insb
sbb
cmpsl
aam
mov
imul
mov
sub
daa
lret
xor
out
out
push
pushf
jle
inc
in
fcoml
iret
js
pop
ret
scas
int3
lcall
iret
jg
mov
lds
stos
imul
xchg
imul
or
mov
loop
mov
mov
cmp
dec
test
xchg
pop
ja
sub
test
hlt
jmp
mov
ss
xor
pop
cli
xchg
xchg
and
push
sbb
add
mov
adc
adc
jbe
cltd
adc
or
idivb
mov
test
sbb
movsl
push
xchg
push
imul
pop
cs
movsl
xor
xchg
ret
sahf
jno
fstpl
adc
xor
xchg
decb
je
sub
idivb
repnz
adc
inc
sub
sbb
stos
jl
sarb
out
negl
loopne
ja
xchg
int3
adc
xchg
lahf
out
cld
ds
int3
and
jg
movsb
mov
jne
and
pop
ja
xchg
jg
push
rorb
mov
lock
psrlw
fildll
xchg
adc
cmpb
rolb
ss
and
jnp
daa
dec
bound
fimuls
push
mov
jne
inc
xchg
movsb
jns
mov
mov
bnd
push
lock
lret
push
int3
mov
xchg
xchg
or
or
pop
aam
jge
cld
cs
gs
dec
rep
ljmp
sub
adc
ja
mov
imul
mov
xor
fstp
jns
xchg
popa
jno
cmp
push
jecxz
push
shrl
mov
xor
pop
cmp
jns
push
lods
and
push
mulb
das
xlat
dec
or
or
sub
cmc
movsl
mov
pop
rorb
mov
cmp
xor
sub
ret
pop
mov
lock
mov
shll
out
xor
out
ds
mov
and
jb
pusha
jns
push
lock
inc
int
out
cmpsl
dec
jle
jl
and
insb
push
fidivrs
and
inc
cmpsb
mov
imul
jl
jnp
jo
addl
mov
mov
pavgw
cli
mov
idivb
stos
test
jb
jp
push
pop
ljmp
rorb
fistps
mov
out
cmpsl
or
mov
loope
inc
pop
push
push
xchg
data16
push
mov
outsb
mov
dec
sub
xor
ljmp
cld
pop
mov
pop
imul
popf
daa
sbb
sub
bnd
xor
andl
cmc
dec
imul
dec
push
es
mov
daa
jle
imul
pop
mov
fstps
ret
les
jp
inc
scas
jge
ljmp
jbe
out
hlt
jo
jmp
jle
add
out
sub
nop
cmpsb
or
push
xchg
sub
jge
ss
pop
xor
jmp
out
clc
mov
mov
jl
jp
push
adc
push
ljmp
arpl
aad
xor
insb
aad
mov
lret
xchg
filds
loope
rcll
pop
jne
shrb
mov
cwtl
shl
cli
sub
and
gs
pusha
ret
test
and
sbb
or
shl
inc
pop
xchg
sti
sub
push
scas
cmp
orl
pop
jbe
std
inc
pop
sbb
stos
push
xor
stos
movsb
fdivr
into
addr16
or
das
xor
adc
call
xor
nop
sbb
lds
mov
sbb
fwait
push
imul
sub
frstor
cs
jge
or
push
subb
fiadds
fistpl
sub
adc
jns
mov
aas
pop
or
jbe
fwait
out
sub
cmp
inc
push
repnz
cmp
int
cmp
jmp
aas
lret
pop
sti
jp
xchg
je
loop
arpl
push
clc
out
xchg
pop
in
out
inc
les
cwtl
insb
mov
jns
adc
test
mov
lock
sub
add
cld
mov
sub
fadds
mov
dec
push
in
xchg
mov
jl
inc
fimuls
jnp
imul
ljmp
sbb
push
mov
repz
inc
dec
cmp
mov
leave
das
mov
xor
or
test
inc
mov
adc
sbb
xchg
outsb
dec
js
outsl
hlt
das
xor
sub
push
mov
stc
cmp
jo
je
jbe
fs
push
adc
fwait
pop
out
jecxz
lods
mov
loop
movsb
imul
imul
imul
aad
inc
dec
cmpsl
push
xor
hlt
sbb
les
add
pop
and
sbb
mov
jae
mulb
push
mov
dec
dec
xchg
rcll
in
test
push
lock
in
fidivrs
into
pusha
ret
inc
cmp
test
stos
jp
shll
mov
jle
outsl
xor
mov
cwtl
in
lcall
jns
ret
ret
loopne
lcall
mulb
push
arpl
mov
push
nop
ret
dec
fsubrl
jge
je
cmp
and
push
std
cmpsb
or
daa
aaa
shrb
jnp
imul
loopne
sub
or
cltd
add
mov
ficompl
mov
jns
mulb
pop
dec
test
mov
cmp
push
imul
sub
jb
sbb
push
iret
add
imul
repnz
clc
sbb
pushf
add
cmp
or
and
mov
les
or
inc
aaa
negl
ret
mov
sub
sarl
pop
stos
insb
xor
shrb
stos
es
inc
sbb
aas
fsubs
jg
ror
xchg
mov
insl
bound
adc
or
or
jg
js
cld
mov
adc
xor
aam
jl
push
push
push
ljmp
ret
sub
pop
inc
adc
push
das
and
mov
cmp
and
jns
mov
lret
mov
sbb
inc
jns
mov
je
daa
mov
popf
mov
sbb
inc
xchg
fwait
pop
add
es
inc
dec
cmp
push
fmuls
adc
xchg
lock
jne
jae
pop
mov
sahf
insl
xlat
cltd
mov
adc
and
cltd
cmp
ljmp
jmp
imull
lods
call
mov
mov
bound
je
into
imul
ja
data16
aaa
icebp
shlb
out
cmp
adc
mov
addr16
push
fldt
xchg
stos
popa
outsl
js
xchg
stos
dec
mov
inc
mov
bound
js
in
add
push
test
push
mov
daa
movsw
arpl
stc
cmp
add
out
gs
in
push
inc
adc
fmuls
in
xor
loopne
xchg
lahf
xor
lahf
in
aaa
pop
in
xor
inc
add
and
add
fmuls
inc
jp
mov
enter
mov
mov
add
cmp
push
adc
sbb
shrb
leave
push
pop
push
xor
sbb
adc
rorl
jo
clc
jae
fwait
mov
scas
fnstenv
push
je
xchg
sub
mov
xchg
test
test
xchg
sahf
pop
xor
out
xor
neg
decl
dec
dec
push
shrl
sub
adc
sar
fisubs
sarb
jg
sbb
imul
lahf
mov
mov
scas
popa
aas
fistl
icebp
pop
sub
inc
xorl
scas
push
or
jle
mov
cmp
ds
pop
pop
dec
frstor
mov
pusha
pop
out
jno
bound
test
les
cltd
sub
mov
insb
fwait
and
mov
in
xor
pop
popf
ja
add
adc
pop
scas
adc
and
push
pop
or
push
mov
lahf
push
adc
mov
or
daa
mov
mov
mov
mov
inc
sub
jae
inc
cmc
int
ret
les
fsts
and
push
cmp
pop
push
pop
pop
ljmp
inc
pop
std
lods
adc
jne
addr16
mov
fs
xchg
inc
mov
jmp
je
jns
jb
sbb
xchg
loop
popf
sub
mov
lock
in
fidivs
mov
fisubs
cmp
push
pop
ljmp
js
xchg
pusha
adc
out
sbb
push
fcoml
cmp
jnp
sarb
or
push
mov
mov
or
inc
mov
call
leave
into
fistl
push
jmp
push
jo
pop
sub
lods
sbb
add
mov
bound
add
hlt
hlt
dec
dec
pop
aam
sbb
jmp
jae
pop
dec
pop
push
xor
and
es
es
popa
icebp
cld
add
pop
xchg
in
adc
and
mov
hlt
jl
out
test
cli
xchg
pop
mov
movsl
mov
fisubrs
jno
jmp
sahf
xchg
test
addr16
test
fldcw
js
pop
sahf
inc
inc
daa
mov
pop
mov
jge
pop
mov
xchg
sbb
and
mov
jne
or
nop
sub
aas
fwait
xor
jns
pop
subl
std
aas
add
or
je
mov
push
pop
xor
jg
shrl
in
int
lods
push
sub
mull
adc
push
mov
mov
jle
push
cmp
adc
fsubrp
pop
jbe
cmp
mov
jb
cmpsl
mov
aad
clc
enter
rcl
jp
cli
push
jmp
mov
and
adc
push
pop
loopne
lret
repnz
mov
repz
ret
shrl
mov
xor
ds
into
fiaddl
and
adc
lret
aad
aas
push
sbb
push
ret
seta
adc
mov
or
inc
mov
jl
rcrl
dec
out
add
pop
cmp
stos
pop
outsl
loope
mov
add
mov
inc
je
sbb
sbb
xchg
lret
mov
xchg
sti
mov
cltd
scas
push
push
sahf
js
sub
dec
dec
xor
dec
push
xlat
xor
adc
stos
test
jo
and
cmpsl
test
jmp
or
shlb
mov
popf
xchg
or
outsl
pop
pop
mov
sub
push
xchg
pop
inc
in
pushf
and
mov
sub
aas
je
outsb
stos
test
iret
inc
inc
inc
les
mov
mov
cltd
les
jne
in
insl
in
xchg
les
jbe
mov
stc
add
jecxz
mov
and
ret
mov
or
mov
pushl
fisttpll
adc
test
jno
pop
data16
pop
lret
in
ja
arpl
pusha
dec
movsl
inc
jae
aas
jl
mov
lea
cmp
push
test
pop
pop
dec
movsl
clc
out
pop
int
jge
or
mov
and
inc
xor
sub
insl
test
push
mov
daa
rol
jg
jecxz
fists
mov
push
xchg
data16
or
pop
mov
add
icebp
inc
push
mov
pop
adc
ret
ja
in
or
push
sbb
mov
ljmp
test
aas
stos
adc
inc
cltd
pushf
cld
cld
es
fwait
sbb
mov
icebp
outsl
mov
xadd
lea
pop
shll
inc
jno
sbb
inc
loope
push
adc
aas
sub
movsl
mov
ljmp
movsb
out
or
sti
and
cwtl
mov
or
repnz
jge
dec
sbb
sbbb
push
testl
pop
jb
repnz
push
mov
test
subb
sub
xchg
ja
movsl
pop
pop
sub
mov
faddp
je
jb
sbb
adc
pop
adc
inc
lahf
sub
pop
sahf
xorb
mov
mov
add
inc
lahf
and
fnstenv
xor
cltd
ljmp
das
stos
jo
push
push
out
fimull
insb
jecxz
hlt
jmp
lods
or
cmpsl
inc
in
push
adc
xor
loopne
mov
mov
cli
out
cmpsb
sbb
or
fwait
inc
xor
and
pop
cmpsb
xor
adc
mov
add
imul
mov
adc
in
and
test
push
fisubl
or
lock
fldt
dec
xchg
leave
scas
aam
pop
fld
dec
in
sbb
inc
hlt
leave
loope
jbe
gs
dec
sub
int3
in
inc
loop
sub
das
pop
jl
xchg
lea
xor
rorl
shll
in
add
sti
push
or
adc
mov
sbbb
xlat
stos
jb
sub
push
xor
ljmp
fistl
inc
sub
dec
pop
in
pop
inc
cs
xchg
roll
adc
sbb
imul
xor
lea
mov
mov
stos
push
mov
subb
fcmovnu
cmp
call
subl
fcomps
jp
sbb
ja
jne
push
lret
sub
scas
aam
std
fistl
movsb
pop
cmp
pop
cld
cmp
dec
mov
pop
add
adc
inc
push
inc
pop
in
in
dec
int
outsb
lret
loope
sbb
add
cmp
sub
mov
cwtl
xor
in
add
xchg
out
int
ss
mov
mov
lods
andb
les
inc
inc
sbb
mov
cmp
and
leave
cld
jg
jno
and
jae
mov
adc
fistpll
push
and
nop
ja
insl
pop
mov
mov
pop
dec
rcrb
test
daa
bound
lret
movsl
cltd
inc
sbb
cltd
jge
mov
mov
loope
fsts
pop
mov
sahf
jbe
ljmp
stc
call
xor
cmp
je
lret
fcomi
xor
out
mov
add
xchg
dec
scas
mov
or
fistpll
dec
jnp
add
xchg
cli
cltd
popa
insb
add
lahf
imul
adc
add
xchg
pop
cltd
inc
jbe
imul
aaa
test
xchg
ret
jp
sbb
daa
xchg
cmp
pop
mov
cmpsl
inc
test
pop
mov
or
pop
push
notl
mov
sarl
imul
das
mov
pop
add
xchg
pop
lea
inc
aaa
xchg
dec
xchg
cmpl
cmp
in
and
mov
pop
test
int
push
leave
pop
clc
fs
nop
repnz
out
imul
out
cmp
xchg
sbb
cmp
cmpb
ljmp
fiadds
pop
jge
push
std
xchg
pop
jno
je
cmp
xor
lock
xlat
adc
and
stos
adc
ficompl
mov
fmul
sbb
test
adc
cmpsl
pop
add
sbb
out
punpckhdq
jp
sbbl
mov
mov
call
adc
enter
xor
test
mov
cwtl
xor
push
xchg
cmpsb
jo
stos
push
xor
pop
push
mov
jns
jno
sbb
sub
not
jp
sub
faddl
imul
mov
popf
test
roll
xor
dec
clc
mov
lods
and
jbe
pop
stc
mov
inc
in
adc
and
cs
rol
mov
ds
ja
popa
mov
pop
cmp
xchg
sbb
fistps
mov
out
popa
dec
sahf
push
dec
das
push
icebp
cmp
cmp
shll
mov
insb
fildl
rcrb
mov
push
xchg
test
mov
xor
sahf
xor
mov
xlat
mov
repnz
fisttps
shl
dec
mulb
fimuls
mov
xchg
mov
mov
mov
push
in
rorl
imul
es
mov
cld
jno
test
sbb
outsb
xor
mov
push
xchg
fistl
cmp
fisubl
loopne
mulb
iret
cmp
jnp
repnz
mov
repz
int
sub
push
xor
repz
shll
lret
leave
jmp
and
iret
dec
sub
or
xor
push
mov
scas
stc
lock
movl
push
cmp
cli
pop
ljmp
lock
int3
js
stc
test
mov
add
or
ja
mov
push
mov
xchg
and
clc
sti
rcrl
insl
cmc
fimuls
fldenv
into
outsl
xchg
movl
xchg
mov
std
and
sbb
ds
mov
lret
sarl
fmull
leave
mov
jb
xchg
xlat
pop
pop
call
fiadds
adc
mov
mov
imul
fstl
imul
and
imul
dec
push
pusha
lock
cltd
clc
push
test
xor
aad
mov
movsb
outsb
ja
dec
mov
ret
cmp
dec
xchg
lret
incl
mov
mov
int3
cmp
lds
cmp
je
movsb
stos
out
xchg
adc
pop
adc
cmp
loop
sub
mov
xor
mov
or
fistl
jge
jne
pop
mov
mov
mov
repz
call
js
jne
sahf
mov
xchg
cmp
fsubl
sub
dec
mov
mov
sbb
in
clc
stc
add
test
add
enter
adc
inc
xlat
pushf
sbb
ret
pop
loope
mov
jmp
iret
adc
cltd
fisubrs
or
cmp
sub
sbb
mov
call
xor
dec
xchg
or
sub
mov
xorb
popf
jmp
inc
int3
lret
mov
cmp
push
fstpt
push
or
push
aaa
pop
and
les
movsb
cmpb
ljmp
xor
mov
mov
sbb
pop
inc
roll
gs
push
mov
inc
cmp
test
inc
je
int3
inc
pop
lods
mov
mov
popa
out
adc
xchg
popf
in
sti
inc
inc
jl
es
push
jnp
inc
mov
sbb
mov
xor
jb
ret
and
xlat
imul
rcll
mov
inc
xor
frstor
jo
jp
sahf
cmp
or
xchg
mov
outsl
push
enter
dec
cmp
cmc
and
sbb
adc
mov
popa
jno
xor
push
mov
add
mov
mov
hlt
fistpl
das
je
dec
pusha
inc
ret
xor
fs
sarl
scas
pop
iret
mov
and
fnstcw
dec
repnz
xor
clc
out
xor
mov
push
push
stos
repz
inc
push
mov
je
das
es
xchg
or
inc
or
inc
mov
xor
xlat
dec
sub
lods
sbb
push
sub
imul
mull
test
arpl
push
sbb
dec
jmp
inc
jb
push
sbb
push
jno
add
add
push
xor
rorl
enter
sarl
pop
push
fwait
je
mov
pop
jge
gs
mov
sub
push
js
sbb
aam
insl
xchg
and
pop
mov
fisubrl
push
xchg
test
inc
sar
inc
mov
outsb
iret
or
mov
jbe
movsl
or
call
sbb
les
leave
cltd
cmp
test
jge
xor
push
mov
xor
mov
movsl
mov
adc
jnp
mov
ljmp
data16
inc
jp
test
mov
in
mov
into
jnp
sub
adc
cli
xchg
aam
pushf
sbb
sub
jg
in
cli
cld
loop
xchg
push
repz
jno
sub
loop
fs
cmp
xchg
xchg
sbb
rclb
les
jl
xor
mov
loop
fcmovnbe
jne
bound
fbstp
or
mov
push
ljmp
dec
cli
gs
outsl
stos
iret
aad
lret
bound
imul
xor
cbtw
cmpsl
testl
pushf
aad
popl
addr16
add
jns
xor
dec
xor
sbb
in
imull
lret
mov
dec
idivl
mov
lahf
push
into
xlat
popa
mov
iret
adcb
aaa
sub
fcomp
shrl
lods
rorl
jl
jmp
mov
imul
shlb
push
daa
nop
inc
pop
xchg
lds
cmc
ljmp
xor
das
and
out
fcompl
subb
pushf
out
lret
data16
ljmp
lds
insb
data16
fisttpl
sub
cmc
adc
mov
pop
aaa
and
push
out
jmp
add
add
pop
inc
sbb
push
xor
test
cmp
lods
enter
repz
jae
pusha
sub
sbb
and
add
aad
adc
scas
jae
in
pop
stc
mov
inc
and
fcomi
cmp
out
xchg
movsb
das
or
xor
sbb
jae
push
int3
sarb
pop
sub
add
es
adc
enter
hlt
inc
lcall
sbb
mov
mov
dec
mov
cmp
in
sbb
and
movsb
bound
mov
iret
out
xchg
push
adc
push
aam
call
xchg
sub
arpl
insl
fwait
and
sbb
into
mov
adc
shll
cli
sbb
jp
cld
push
xchg
mov
rcrb
pop
call
push
daa
in
cwtl
movsb
mov
cmpsb
test
push
int
das
outsl
lahf
push
xchg
lods
sbb
scas
add
nop
fwait
repz
movsl
call
test
sub
sbb
mov
push
adc
gs
popf
cmp
popa
cmpsl
repnz
inc
int3
add
push
mov
rorb
xchg
cmpb
test
cmp
pop
adc
test
pop
xlat
out
sub
int
sub
adc
pop
arpl
xchg
push
mov
std
adc
cmp
cli
scas
dec
fsubl
ficompl
adc
ret
cmp
xchg
mov
int
sbb
mov
inc
dec
sbb
cld
js
adc
fidivs
inc
sbb
push
xor
inc
add
jne
xchg
cltd
xchg
push
nop
decb
ret
push
stc
mov
out
pop
aad
pop
and
outsb
stos
or
jae
xor
lock
pushf
ljmp
std
flds
movl
pop
xchg
cmpsb
dec
nop
repz
ljmp
loopne
pop
cmc
clc
rcll
sbb
adc
lcall
push
adc
cli
dec
cltd
sub
and
bound
sbb
lcall
jp
int
push
ret
stc
dec
out
mov
fwait
rcrb
sub
ret
xchg
aad
int3
or
push
imul
push
ret
mov
ror
fdivs
dec
not
or
pop
mov
out
dec
pusha
ret
pop
jo
mov
mov
cld
loop
or
test
hlt
mov
out
mov
pushf
jbe
adc
add
pop
pusha
sbb
pop
dec
cmp
mov
cmp
jle
inc
jle
xchg
addl
lds
test
ja
clc
flds
and
sub
jb
xor
test
xchg
outsb
mov
outsl
sbb
mov
mov
add
pusha
movsl
jae
mov
lods
fisubrs
cltd
les
fwait
std
add
rol
fwait
int3
mov
jle
ret
adc
lahf
xchg
push
and
mov
sub
dec
and
sub
jb
cld
xchg
lahf
shlb
ljmp
mov
mov
bound
jbe
sub
inc
and
cmp
pop
jmp
lret
sbb
or
pop
adc
add
scas
xchg
out
push
lret
lahf
insb
cs
fimull
pop
inc
stos
hlt
and
xchg
cmp
test
out
pop
adc
pop
jle
enter
insb
cmp
mov
mov
inc
sub
cli
xchg
daa
and
int3
and
stc
push
adc
pushf
cmp
filds
faddl
cli
and
ja
cmpsb
push
push
lock
sub
notb
inc
push
xchg
mulb
in
or
addr16
movsb
push
aas
adc
xor
repnz
aam
xchg
mov
mov
cmpsl
or
inc
enter
popf
sbbl
sub
dec
imull
mov
jmp
sbb
ss
mov
addr16
jbe
adc
outsb
adc
mov
iret
cwtl
fdiv
scas
iret
mov
fldt
add
ret
or
push
inc
addr16
push
sbb
and
sahf
mov
adc
mov
into
enter
sub
jmp
mov
or
and
lods
pushf
movsb
pushf
stos
shll
inc
xchg
aas
int3
mov
xchg
repnz
mov
gs
jae
mov
cmp
pop
ret
push
and
cmp
mov
dec
inc
dec
jmp
sub
mov
and
pop
pop
mov
sub
mov
push
cmp
orl
subl
xor
push
mov
das
or
mov
fisttpll
in
mul
je
cmpsl
test
rolb
dec
cmp
adc
outsb
sub
lcall
into
jne
hlt
mov
cmp
push
pop
jecxz
je
jl
cmp
sbbb
pop
cmp
aad
mov
push
push
pop
and
popa
outsb
cmp
loope
stc
ret
push
adc
stos
cmp
xorb
adcb
mov
mov
add
arpl
mov
mov
jns
and
push
adc
out
push
out
xchg
das
jp
cli
fildll
xlat
out
test
lret
into
inc
ds
es
and
push
jge
xchg
or
cld
xchg
cmp
clc
adc
inc
adc
mov
inc
in
pop
mov
add
pop
lahf
test
and
mov
jae
cmpsb
inc
or
jecxz
out
cli
jbe
movsl
add
push
cmc
add
jecxz
pop
adc
outsl
mov
imul
lock
xchg
out
dec
mov
cld
js
into
mov
jmpw
loopne
andb
ds
add
adc
pop
push
imul
mov
dec
jno
jno
and
sub
inc
inc
or
andl
lock
add
jp
arpl
pop
inc
pop
and
xor
mov
sbb
dec
and
mov
cmp
out
les
xor
fstpl
cmp
rcrb
nop
mov
mov
dec
push
mov
mov
test
push
dec
jp
push
sbb
aas
lock
test
mov
mov
xchg
cmp
add
out
lcall
xchg
xchg
loope
setno
push
push
mov
push
or
stos
lcall
stc
mov
mov
pusha
int3
ja
pop
xchg
or
xchg
les
jae
cmp
out
rcrl
cmpsb
push
lds
xor
sub
pop
fsubs
test
and
xor
adc
aas
jecxz
sbb
xor
shrl
in
out
mov
int
fcoms
in
xchg
xchg
pop
pop
js
and
fnstenv
into
push
out
call
adc
not
xchg
sub
fidivrl
leave
add
sarl
lea
sub
mov
cmpb
add
add
pop
or
call
sub
popa
dec
sub
sahf
lods
xchg
jae
xchg
in
push
cmpsl
ret
cmp
lcall
cmp
loopne
cwtd
push
push
fbstp
sbb
push
std
arpl
sub
xchg
cmp
push
sti
pop
adc
add
leave
xor
std
ret
and
adc
cmc
icebp
inc
push
rorb
cmp
lcall
pushf
mov
sbbl
sub
imul
out
out
sub
js
sub
pop
add
nop
adc
aas
cmpl
sbb
ljmp
pop
jno
and
sbb
mov
mov
cwtl
lock
xchg
mov
push
gs
dec
scas
jmp
xor
outsl
fisubrl
out
inc
xor
fwait
mov
sub
xorl
lahf
mov
mov
fbld
jnp,pt
scas
mov
or
jno
cltd
cmp
mov
mov
out
leave
adc
xor
in
push
pop
pop
iret
mov
stos
push
mov
fwait
xlat
negl
fwait
push
add
xor
testb
or
adc
pop
stos
mov
insb
sbb
or
int
sbb
dec
fistl
and
clc
es
inc
sbb
add
leave
aam
fbld
xchg
jmp
or
jmp
aad
sbb
mov
arpl
mov
sub
sub
adc
lods
xchg
sbb
jns
addr16
pop
sbb
jl
shrl
lea
xor
pop
dec
es
fst
jecxz
xorb
jno
mov
cwtl
or
cmp
sbb
into
out
mov
or
xor
mov
rcl
dec
adc
add
push
iret
fstps
xlat
cmp
adc
mov
dec
xor
lock
pop
mov
imul
add
js
loop
popa
loop
or
sbb
js
xor
add
lahf
movsb
jp
xchg
jae
and
pushf
fsubr
lret
xor
int3
adc
test
xorb
mov
xor
pushf
cmpsl
cmp
enter
sub
ss
ficomps
cli
xchg
cmpl
adc
inc
js
int3
sub
xchg
jns
push
into
ljmp
int3
in
inc
push
adc
mov
or
pop
jne
sbb
mov
pushf
sub
or
sub
mov
lods
cmp
xchg
movsb
ss
push
addb
mov
mov
pop
mov
and
imul
push
inc
shlb
dec
inc
test
and
push
stc
stos
stos
fmul
push
jp
xor
ljmp
push
rcr
pop
push
imul
xchg
fstl
sbb
sbb
insb
pmulhuw
fstpt
mov
fmulp
sbb
fwait
outsl
int3
cmp
popf
pushf
cld
scas
sub
in
or
cmp
movb
fdivl
cwtl
sti
bound
enter
fisubrl
inc
sti
loop
mov
mov
add
mov
adc
cwtl
test
jnp
cmp
fsubs
push
shl
iret
rorl
ds
cmp
xor
pop
repz
xor
sbb
add
stos
sub
shll
sub
pop
or
ss
push
sar
cmp
sbb
std
push
sub
outsl
pop
or
out
loop
jecxz
push
inc
mov
lahf
jo
pushf
fsubs
mov
pop
adc
sarl
xchg
inc
xor
daa
aaa
mov
mov
sub
cmovo
mov
mov
adc
imul
popf
or
push
cmp
js
push
out
outsl
out
jne
push
jo
ljmp
cmp
mov
push
xor
mov
jno
pop
cld
enter
push
xor
mov
pop
xchg
cmp
leave
gs
pop
mov
pushf
push
mov
and
mov
sbb
mov
cmpb
les
cmpsl
test
or
out
smsw
or
mov
push
mov
lock
xchg
dec
xchg
xchg
into
popf
pop
inc
test
out
fwait
int3
cli
pop
xor
call
or
fbld
add
or
inc
or
xor
dec
mov
movsb
cmp
jg
jge
pusha
repnz
add
jb
lahf
lock
fcmove
insl
add
repz
mov
mov
add
pop
lahf
xlat
fbstp
jp
xor
sti
cmp
xchg
lahf
or
dec
je
xlat
aad
es
mov
inc
jge
arpl
or
inc
xor
adc
dec
jge
clc
shll
inc
emms
cld
in
xor
rcrb
add
testl
or
neg
sub
aas
or
out
ds
inc
iret
test
rcr
mov
sub
out
sub
into
repnz
sbb
add
cld
repz
cwtl
inc
cld
pop
lcall
cmp
ljmp
lods
sbb
call
stc
pop
and
mov
psubusw
movsl
fld
mov
rcr
mov
lods
push
clc
ja
dec
and
push
mov
adc
outsb
out
sbbb
mov
andl
lea
arpl
jge
inc
dec
pusha
dec
jmp
popf
hlt
add
xor
xor
adc
jg
sub
testb
in
stos
fs
movsl
scas
ss
lods
popa
fimull
out
rcr
imul
jo
mov
xor
dec
daa
pop
jo
and
fs
xor
mov
aaa
jecxz
dec
cwtl
and
aas
pusha
inc
das
fstpl
ss
shll
inc
adc
rcll
out
lcall
aaa
mov
sti
repnz
outsl
addr16
xchg
sbb
imul
lods
mov
mov
xchg
rcl
dec
push
jnp
insl
jmp
fisttpl
testb
mov
inc
pop
xor
push
je
js
sarb
push
mov
push
and
inc
inc
adc
or
sub
dec
adcb
jo
mov
mov
sbb
leave
push
push
hlt
es
movsb
or
adc
jge
fisttpll
data16
daa
jle
dec
out
mov
or
dec
cmp
cltd
cmpsl
aas
mov
mov
clc
sbb
sarl
cmp
hlt
lds
dec
jp
mov
sbb
sbb
push
inc
xchg
push
idivl
loop
xchg
sbb
mov
push
test
add
dec
imul
sub
sbb
iret
xor
adc
or
cld
mov
into
call
out
out
jl
cmp
mov
cmp
add
loopne
ds
dec
shld
or
add
mov
insb
add
loope
mov
jae
mov
leave
enter
xchg
or
mov
aas
add
mov
dec
lret
and
push
in
dec
popf
cmpsl
xchg
in
sar
les
rol
clc
mov
add
xor
cmp
xorl
dec
jmp
mov
and
out
and
cltd
dec
pop
adc
pop
stos
xchg
nop
arpl
push
stos
ds
inc
out
fldl
mov
sbb
ss
add
in
subl
mov
iret
fistl
shrb
syscall
and
dec
adc
pop
dec
lcall
stos
inc
xchg
ror
add
clc
push
push
cli
fwait
inc
mov
jmp
daa
addr16
adc
add
jp
loop
aas
mov
adc
jae
iret
adcb
jg
jae
push
shl
add
add
cmp
int3
and
daa
pop
ret
add
push
cmpsl
iret
mov
pop
mov
mov
cwtl
mov
imul
test
jns
subl
push
jl
insb
mov
movaps
fisttpl
arpl
std
dec
stc
shrl
add
clc
sbb
xor
xchg
and
cld
or
pushf
pop
add
outsb
imul
mov
jg
pop
jecxz
and
pop
stos
jecxz
cmc
in
test
int3
push
das
inc
xor
adc
loop
out
lds
add
mov
xchg
mov
sbb
pop
insb
and
mov
push
cmpsb
fidivrl
push
loop
dec
es
sbb
dec
lods
cmpsb
xchg
test
cmc
enter
call
aad
mov
push
divb
and
mov
dec
xchg
xor
xchg
lock
ds
xor
out
cli
pop
adc
imul
mov
pop
lret
add
shr
sti
xchg
cmc
lret
and
popf
aam
inc
stos
or
mov
push
aaa
pop
sub
das
aaa
popf
jns
pusha
jns
clc
mov
sbb
incb
fstl
xor
inc
sbbl
shll
adc
push
cmp
xchg
jne
xchg
jo
add
push
push
cmp
das
adc
mov
mov
jb
addl
inc
xchg
mov
mov
push
rcrb
push
not
dec
jo
jo
in
inc
test
aaa
pop
shrl
push
iret
sbb
inc
pop
mov
es
iret
dec
jnp
aam
movsb
loope
jg
out
dec
das
push
adc
inc
xor
add
inc
cmp
mov
mov
sti
add
or
pop
dec
shlb
in
cmpsb
bound
push
fbstp
cmpsb
add
xchg
pop
mov
in
rclb
jl
xchg
mov
nop
lea
cmp
sbb
inc
ret
lret
pop
lcall
js
in
jo
jbe
fstpt
outsb
jae
lds
fisttps
aad
or
fimull
movl
dec
mov
mov
lock
mov
daa
jge
cld
les
xchg
enter
in
pusha
jg
adc
sbb
add
xor
pop
push
mov
fucomip
push
sti
mov
mov
int3
aas
shll
xchg
adc
mov
shrb
xor
icebp
roll
xchg
mov
pop
mov
pop
imul
dec
lods
mov
loope
xchg
lods
xor
mov
dec
push
lret
mov
sub
inc
iret
mov
lock
sub
movsb
jp
fdivr
xor
loope
mov
imul
clc
in
cmp
shrl
pop
fst
rcll
mov
jne
dec
pop
push
fcompl
cmovo
ljmp
jle
fbld
cmp
sub
pop
or
fstpl
push
movsl
fucomip
xchg
jecxz
mov
in
fadds
sarb
lret
fidivs
inc
sbb
or
fnstsw
cs
addr16
movsb
jg
enter
ja
push
cmp
mov
inc
test
fmull
xlat
outsl
jle
ljmp
xchg
mov
mov
mov
push
pop
xor
push
push
mov
lret
ja
lods
iret
and
add
rclb
xor
cmpsb
mov
xchg
test
push
push
push
sbb
fidivs
shl
adc
pop
inc
xor
ret
mov
call
nop
ss
jno
ret
add
push
mov
sbb
xor
add
movq
rorb
cmp
push
ljmp
pop
or
dec
pusha
addb
add
and
fildll
xor
ret
xchg
jp
ficoms
incb
popl
adcl
adc
arpl
mov
aam
jecxz
pop
pusha
shll
or
sbb
sub
sbb
adc
subl
add
mov
mov
popf
jnp
inc
sub
add
adc
push
or
pop
pop
ds
shlb
sbb
fmull
and
aad
insl
mov
cltd
ljmp
aam
pop
ret
into
sbb
add
sahf
lea
ja
fwait
pusha
mov
out
cmp
in
adc
cmc
popa
test
daa
cltd
dec
mov
mov
mov
rorl
and
popf
js
out
scas
daa
add
test
xor
or
adc
sbb
daa
push
inc
aas
add
push
lret
mov
outsb
dec
data16
pushf
cmp
inc
std
roll
sti
stos
cmpsb
mov
sub
lods
je
jg
insb
sbb
sahf
jae
insb
dec
cld
outsl
std
imul
lret
test
adc
jae
inc
sub
enter
pop
dec
ds
pop
push
xchg
and
fcomi
rcr
dec
jbe
jnp
add
sub
push
lret
add
mov
movsb
fidivs
add
adc
xor
mov
clc
out
mov
sbb
packssdw
popa
clc
push
dec
mov
out
sub
push
pop
je
jge
lea
or
inc
mov
repnz
and
inc
xchg
mov
xchg
sub
xchg
add
adc
lods
mov
cmp
stos
outsb
lea
push
add
repnz
adc
push
sub
call
outsb
movsb
dec
xor
cmc
lret
xorl
and
and
pop
outsl
add
outsl
fisubrl
ret
mov
orl
xchg
ret
push
add
sbb
into
inc
inc
rcll
pop
clc
xchg
mov
outsb
out
je
dec
mov
mov
and
jns
test
inc
cwtl
test
jmp
ja
mov
adc
pop
adcl
int3
pusha
and
mov
leave
test
stc
push
pop
sbb
and
push
iret
sub
inc
mov
and
fcoml
lahf
lret
movsb
push
cmovo
push
sbb
lret
jno
sbb
sub
rclb
lds
pop
adcl
out
push
inc
popa
ds
jecxz
jg
aas
jmp
dec
xor
cmp
or
add
fldenv
inc
roll
and
cs
daa
cmp
pop
pop
out
mov
out
rcrb
push
lods
fstps
xchg
cmp
fwait
mov
loop
cmp
fcmovb
sbb
jg
inc
sbb
jnp
lock
xorb
rorl
sahf
sahf
in
jg
dec
addl
test
xchg
repz
fcom
lods
mov
roll
lahf
xor
aas
popa
jl
sub
ss
clc
scas
out
mov
push
cmp
push
sub
mov
or
xor
addr16
mov
inc
mov
in
rorl
pop
jmp
dec
jo
mov
inc
addr16
dec
iret
test
push
test
or
mov
loope
adc
mov
inc
fisttpl
jmp
sub
outsb
or
pop
or
sbb
fstpl
and
pop
adc
les
stos
sub
and
push
std
xor
sbb
jle
jbe
lret
bound
push
testb
mov
rclb
pop
fstp
or
mov
es
mov
fcompl
lahf
enter
std
adc
adc
mov
xlat
xor
movsl
cmpsl
sub
add
ret
scas
mov
cmp
pop
and
insb
sbb
mov
mov
lods
test
out
fs
scas
xchg
xlat
fsts
sub
push
repnz
stos
in
xlat
sub
aaa
out
mov
xor
lock
xor
pop
iret
leave
lock
aam
add
add
imul
fs
into
fisttps
into
adc
mov
out
jo
movsl
cmp
mov
std
cmp
lret
cli
mov
cmp
repz
dec
fbstp
mov
and
dec
shlb
xchg
fcmovnu
sub
cltd
mov
add
out
lods
int
test
xchg
or
jbe
ret
sub
loop
sbb
leave
mov
pop
aam
das
pop
daa
icebp
ja
orl
flds
cmpsl
and
or
cltd
dec
pusha
cmpsl
inc
jns
pusha
pop
and
xchg
jo
js
jnp
push
cmp
add
xchg
sbb
mov
mov
mov
lea
ds
adc
adc
es
dec
jg
outsl
and
ds
int3
out
xor
or
bound
mov
sub
ds
mov
jle
fcmovnu
xchg
pop
rcll
lcall
int
mov
xlat
and
stos
dec
fs
and
xor
out
cmp
xlat
jb
inc
mov
shl
test
out
cmpsl
nop
aam
xor
or
pop
xchg
jp
xchg
ds
xchg
lret
sbb
hlt
push
push
inc
jnp
int3
lds
mov
and
xchg
sti
ds
and
stos
adc
push
xor
and
sub
sub
mov
inc
add
test
sbb
xchg
sarl
test
pop
inc
test
xor
icebp
push
push
sti
andb
dec
lea
xorl
adc
cmc
add
pop
lcall
pop
or
xor
dec
add
jecxz
notb
les
add
shlb
int3
push
lea
mov
cmpsl
jns
lahf
sti
xor
not
add
cld
in
lret
pop
mov
addr16
fildll
push
and
mov
nop
push
push
or
inc
adc
pushf
ljmp
adcl
scas
cmp
fs
jp
insb
pop
push
sub
pop
jmp
mov
js
out
mov
rclb
mov
ja
enter
ljmp
mov
in
mov
adc
out
mov
mov
pop
call
sub
and
subl
lea
cmp
fsubs
ret
and
loopne
or
pushf
mov
daa
hlt
or
ss
mov
sti
addb
shl
mov
stos
pop
cmp
out
push
call
inc
cs
mov
div
add
cmpsb
inc
cmp
inc
iret
mov
enter
jecxz
xchg
sub
out
aad
mov
out
dec
inc
stos
jnp
adc
fwait
push
je
xor
fwait
pop
ds
ljmp
movsb
push
movsl
xor
shl
faddl
outsb
add
rorb
xchg
push
lods
lret
repnz
or
cwtl
scas
inc
jg
cmc
xlat
cmp
cmpb
fidivs
lret
daa
jae
xor
cmpsl
add
sbb
push
or
movsb
les
push
das
add
fcoms
clc
add
push
sahf
test
cmp
jge
pushf
mov
outsb
jns
stos
pop
sti
adcl
lahf
test
mov
mov
repnz
adc
dec
aaa
mov
cmp
repnz
das
imul
int
dec
jp
mov
fwait
adc
xchg
mov
xor
mov
mov
jnp
movsl
ss
in
cwtl
jl
xor
push
or
push
mov
push
add
xor
leave
jbe
mov
nopl
dec
mov
stos
cltd
shlb
fiadds
xorl
sub
mov
jno
mov
xor
pop
testl
sarb
add
cmp
add
clc
test
adc
sub
shll
sub
mov
pop
adc
ja
iret
mov
mov
push
mov
inc
fistpl
dec
das
and
mov
sub
push
adc
pop
mov
lds
mov
push
ja
jmp
es
mov
rcll
pop
mov
mov
add
shl
test
inc
in
ret
test
cmp
jecxz
aam
cmpb
mov
stos
ret
test
xor
insb
cmpsb
jg
or
ljmp
fnstcw
add
daa
push
cmp
jne
inc
mov
lods
loope
xchg
insl
stc
icebp
and
subb
negb
or
sar
add
in
xchg
cli
inc
add
add
mov
inc
flds
std
sarb
cwtl
xchg
lods
popf
fidivrs
cwtl
inc
sbb
add
mov
fidivl
or
lret
push
add
mov
aas
dec
add
sbb
add
lcall
lea
pushf
xchg
and
jnp
push
pop
push
jns
decb
outsl
cmp
dec
add
sub
orl
jmp
stc
push
mov
cli
cmp
xor
push
jle
or
rcrb
mov
nop
fimuls
mov
je
fucomi
jmp
jg
aas
repz
mov
icebp
das
sbb
mov
orl
push
stos
insl
sbb
addr16
call
sbb
mov
rolb
sbb
outsb
sahf
es
mov
jns
sub
cmpb
push
xchg
sub
jb
insb
cmpsb
mov
adc
lods
outsb
push
cltd
and
push
cmp
sbb
stos
sub
cld
sbb
fwait
mov
fs
push
bound
lcall
out
mov
or
out
push
cli
mov
std
ds
mov
push
and
or
loope
loopne
sub
test
leave
xor
fadds
popf
jb
push
pop
pop
xchg
mov
mov
sub
les
dec
dec
cmp
mov
cmc
ret
ss
mov
shlb
fistpll
js
in
mov
repz
push
sbb
clc
and
mov
and
or
fsubp
push
mov
mov
in
mov
repnz
insb
hlt
mov
add
pop
xchg
lret
ret
cmc
or
sahf
adc
movsl
cwtl
and
int3
in
mov
jl
add
stc
mov
push
push
cli
lret
push
add
sbb
test
sbb
and
xchg
fidivrl
and
shrb
aad
mov
pop
or
push
imul
sub
pop
cmpsl
test
out
bsf
mov
mov
push
mov
pop
push
xchg
hlt
flds
loopne
jnp
rcrl
shl
in
cmpsl
filds
add
lods
arpl
adc
adc
cmp
xchg
js
pushl
inc
js
andb
insl
sub
adc
pop
jge
jg
sbb
push
lock
lods
ljmp
add
addr16
xchg
mov
push
test
sub
jecxz
js
or
pop
rolb
cmp
jg
in
push
push
sub
inc
daa
cli
mov
aam
das
int
pop
jmp
sahf
push
mov
andl
mov
xchg
xchg
dec
adc
mov
test
inc
pusha
lods
push
jge
add
mov
jo
xchg
mov
mov
jb
mov
inc
mov
rcll
sub
cmp
push
in
jnp
mov
xor
cmc
hlt
out
push
mov
fdivrl
test
push
icebp
mov
enter
loop
lock
dec
hlt
fcmovu
jb
inc
jge
jecxz
fcomp
loop
std
inc
cmpsb
loop
adc
mov
adcl
popf
push
roll
dec
into
lret
dec
gs
sahf
mov
and
sbb
and
xor
and
pop
adc
pop
rol
adc
fwait
xchg
loop
mov
inc
icebp
and
mov
jmp
or
or
dec
jmp
fsts
mov
lds
imul
xchg
cmp
std
xchg
stos
mov
jb
je
mov
cli
sub
xchg
jae
stos
mov
or
not
ret
in
jno
pop
in
popf
shll
clc
and
inc
subb
test
lret
stos
add
scas
sub
xor
push
pop
mov
addb
xchg
dec
cld
imul
outsl
push
shrl
xor
cltd
lock
jl
xchg
aas
ret
lret
xchg
xor
dec
sar
pusha
icebp
dec
and
das
xchg
dec
jl
mov
test
mov
inc
and
fstl
inc
adc
xor
cmpsl
das
adc
xor
fnstsw
fildll
cs
adc
pmaddwd
outsb
jbe
cltd
mov
xor
hlt
add
add
rcpps
ja
or
xchg
or
mov
sbb
and
aad
sbb
push
pop
cwtl
sbb
mov
inc
outsb
jne
pop
insb
mov
xorl
sub
cs
mov
push
push
cmp
jo
jo
rclb
inc
adc
enter
lods
push
movsl
out
cmp
cmp
scas
test
cltd
jmp
mov
sarb
imul
lret
in
push
push
or
mov
jmp
mov
sub
sbb
rorl
sbb
or
sbb
jae
dec
jp
mov
and
fstpt
leave
fidivl
andl
stc
fildll
daa
mov
xchg
je
andl
popa
fwait
arpl
mov
scas
cmpsb
pop
sub
xlat
shrl
lret
sub
inc
out
xchg
push
and
maskmovq
notl
pushf
cmp
cwtl
sbb
arpl
mov
daa
int3
jnp,pt
outsl
jo
mov
and
push
mov
jecxz
divb
call
xchg
mov
push
mov
sub
xor
jb
sub
pop
ja
jno
scas
pop
mov
je
aaa
test
push
adc
jge
bsr
leave
mov
jno
push
div
push
test
adc
sbb
mov
mov
jnp
sub
jns
out
mov
dec
adc
xchg
push
jecxz
sti
cmpsl
mov
cmp
sbb
roll
lcall
shrl
sbb
lock
aad
xor
ret
jbe
les
sbb
or
stc
cmc
mov
or
fmulp
mov
mov
inc
fildl
test
add
adcl
into
ror
jg
ljmp
insl
mov
insl
xor
call
push
cmp
js
lret
leave
inc
xchg
stos
push
cli
adc
mov
rolb
mov
dec
mov
lahf
push
dec
lock
sub
je
dec
pop
lret
cmp
push
cmp
dec
fnsave
imul
sahf
and
out
inc
hlt
sub
or
jae
aam
mov
mov
push
fiaddl
ret
push
stos
pop
int
loop
fidivrl
fmul
sarl
mov
xor
and
cld
cwtl
ss
cmpsb
jne
jbe
cmpsl
jg
ffreep
stc
push
dec
gs
leave
xor
popf
data16
movsl
jmp
mov
out
adc
loopne
lods
pusha
shlb
into
mov
sbb
iret
cs
in
sub
sub
xor
jle
ds
inc
mov
add
cmpsb
push
stos
pop
call
test
sbb
in
push
movsb
loopne
lahf
sbb
jns
and
mov
idivl
movsl
sub
lret
xchg
insb
mov
push
sti
mov
pop
and
cmp
stos
xchg
mov
popa
inc
mov
popf
iret
xchg
dec
inc
lea
dec
ds
mov
mov
arpl
mov
push
xlat
push
aam
jecxz
pop
lret
testb
pop
daa
adc
bnd
fbstp
mov
push
add
addr16
inc
inc
test
out
cli
cmpsl
sbb
xchg
mov
xchg
lahf
xor
pop
jl
jnp
or
mov
enter
jae
mov
sbb
outsb
hlt
xlat
ja
xchg
dec
nop
mov
test
add
and
outsb
jnp
jno
test
jbe
pop
push
popf
xchg
ret
arpl
sub
shll
ret
mov
xor
cltd
aas
aas
or
or
adc
cmp
adc
mov
mov
cmpsl
mov
pop
movsl
add
and
fisttpl
mov
jo
cwtl
dec
pop
and
ret
out
mov
add
jmp
mov
xlat
test
jo
sbb
lahf
in
movsl
scas
xlat
mov
mov
adc
mov
ficoml
cmpsb
fimull
cmp
mov
popl
fwait
xchg
or
cmp
cli
dec
and
adc
jb
fldenv
lret
arpl
stos
lods
or
sub
test
mov
pop
add
add
jmp
ja
mov
mov
fwait
mov
xchg
lock
jae
ja
cmp
push
dec
push
sti
push
push
inc
push
dec
add
pop
add
int3
xchg
loop
test
or
inc
and
das
mov
fdivrs
xchg
stc
sub
push
test
or
pushf
xor
mov
pop
mov
sub
popf
mov
nop
cmpsl
ljmp
inc
push
cmpsb
in
sbbl
sub
push
pop
rolb
test
test
push
lea
cmc
gs
cltd
jnp
adc
aas
sbb
or
punpckldq
xor
jb
sbb
ret
jnp
repnz
xor
or
iret
mov
lret
jl
daa
pop
inc
dec
hlt
imul
int3
sub
jle
lret
or
adc
add
jbe
imul
outsl
adc
mov
cs
sahf
sbb
dec
jb
movsl
pop
pusha
lods
sub
inc
xor
sbbl
fists
scas
and
inc
in
dec
add
loope
adc
mov
xchg
data16
and
arpl
ja
mov
scas
pop
roll
call
ret
leave
orb
fdiv
js
jmp
mov
es
mov
jae
call
lahf
add
jl
dec
iret
inc
test
jmp
inc
repz
cmp
test
jecxz
jnp
js
sub
jne
add
mov
xchg
fwait
shrb
gs
int3
fisttps
mov
push
sbb
out
sbb
cmp
mov
cmc
lods
idivb
sbb
ja
sub
gs
sub
outsb
je
movb
dec
sub
in
push
dec
cmp
sub
movsb
dec
das
je
aas
add
sbb
pop
push
dec
xchg
lods
mov
xor
mov
sti
jg
lods
push
push
lock
popf
aaa
push
lret
int3
adc
pop
xor
shlb
and
hlt
sub
loop
fldl
xor
rcr
jns
std
rcl
mov
mov
cmp
jb
addr16
popa
pushf
pop
or
and
xchg
loope
div
aas
mov
pop
xorb
hlt
push
adc
jbe
cmc
cli
imul
loopne
adc
push
push
push
hlt
mov
mov
xlat
in
cmp
pop
xchg
cwtl
pushf
sarb
rcll
outsl
pusha
shll
iret
jge
ret
sub
jle
repnz
sub
shll
repnz
mov
inc
jns
fcoms
jmp
jbe
xchg
shr
push
xor
fwait
shll
icebp
push
jmp
outsl
bswap
leave
mov
bnd
inc
sub
or
mov
nop
inc
insb
cmp
sbb
addl
push
ror
push
mov
in
mov
xchg
mov
pushf
push
loope
push
int3
arpl
fmull
push
test
fs
xlat
jg
push
test
push
pop
add
leave
ljmp
icebp
push
aam
cmpb
mov
loop
in
sub
dec
aas
adcl
lods
push
jge
sub
sub
mov
aas
shll
xchg
mov
inc
ss
ret
arpl
dec
mov
sub
jo
lret
jne
cmp
das
inc
xchg
das
dec
mov
std
in
add
ss
pop
ljmp
insl
add
ret
cld
lock
add
jecxz
outsl
sbb
gs
test
in
leave
xchg
repz
and
in
sub
jecxz
imul
add
jl
movsb
mov
rclb
push
repnz
roll
movb
fwait
test
adc
cmpb
xor
lahf
das
push
sub
ror
dec
rcll
adc
lea
mov
xor
cwtl
adc
or
cli
push
fnstsw
jne
pop
sub
mov
addb
roll
push
imul
stos
neg
paddusw
pusha
pop
dec
jo
sub
nop
fdivs
push
fpatan
cmc
in
xor
imul
mov
mov
stos
sub
mov
cmp
stos
ret
cld
xorl
cmpsl
shlb
pop
jmp
rcrb
es
in
push
jno
mov
daa
cmp
xor
mov
mov
in
pushf
lock
sub
pop
pop
sub
jle
aaa
sti
lock
in
mov
ds
or
xchg
icebp
scas
ret
adc
stos
cmp
jle
sub
test
lods
stos
sub
rcl
fidivs
lcall
hlt
cwtl
cs
iret
mov
or
mov
lret
jb
daa
scas
fsubs
fcomi
test
sbb
sbb
lret
aaa
lret
xchg
test
or
pop
scas
lock
inc
push
cmp
popf
repnz
fabs
sub
mov
dec
push
fbld
stos
cli
outsb
mov
ds
pop
xor
xor
lret
in
call
fsubr
data16
outsl
int
push
jo
cmp
add
pop
xchg
xor
gs
mov
daa
fisubs
cltd
inc
dec
lret
out
scas
pop
in
aam
out
dec
push
not
mov
inc
and
and
call
aad
mov
push
mov
sbb
lock
xchg
out
push
divl
clc
xchg
jae
fsubrp
divl
mov
lea
adc
mov
fwait
push
pusha
push
bound
mov
pop
mov
fdivrs
xchg
inc
add
lods
jae
cmpsl
decb
and
jae
inc
aad
jo
das
mov
adc
cmp
xor
push
sub
lcall
into
mov
hlt
popf
mov
jl
in
fimull
add
and
pop
adc
cmpsb
fistps
mov
xor
cmp
sub
movl
mov
outsb
inc
loope
lock
sbb
lds
or
fcmovnu
ss
inc
xchg
dec
addr16
jmp
aad
mov
outsl
push
cmpsl
mov
dec
aam
dec
out
hlt
js
push
xlat
outsl
xchg
add
cmp
leave
sbb
popf
and
in
sub
dec
lods
add
iret
sbb
lods
divl
mov
mov
rcrb
xchg
sub
add
leave
inc
inc
dec
out
in
jp
lock
sbb
pop
push
inc
or
or
mov
bnd
les
xchg
push
xchg
pop
pop
sub
push
ret
cmp
pop
pop
adc
out
xor
push
mov
xor
push
xchg
jmp
int3
arpl
and
or
jl
out
jnp
push
mov
and
loopne
sub
int
pusha
shlb
and
pop
adc
ret
outsl
loopne
pop
pop
sbb
insb
ret
movsl
in
push
and
sahf
dec
and
pop
cmpsl
adc
lods
push
repnz
aas
icebp
mov
out
cmc
icebp
push
addr16
fisttpll
jo
dec
in
mov
repz
dec
sub
xchg
lahf
lcall
and
adc
dec
mov
lret
int
xor
push
jne
adc
stos
dec
pop
jp
insb
lds
add
adc
push
in
dec
inc
mov
fldenv
repnz
imul
lock
scas
sti
xor
loope
mov
xor
fcoml
je
scas
sti
pusha
mov
out
sub
neg
das
movsb
es
andl
lahf
sub
cmp
aaa
and
inc
fists
sbbl
push
ret
sub
sbb
dec
jo
sahf
fcomip
int3
imul
xchg
adc
push
lahf
ljmp
mov
test
and
xchg
sub
add
je
lcall
pop
stos
inc
jns
inc
shlb
dec
mov
jmp
imul
ds
mov
iret
xorl
push
push
xchg
sub
imul
cld
aas
pop
and
cmp
or
jnp
inc
ds
in
push
add
dec
and
pop
std
jae
fistpl
out
clc
leave
and
hlt
lret
sbb
mov
inc
fdivs
imul
push
aam
std
adc
movsl
add
or
jecxz
mov
inc
iret
sub
out
and
dec
mov
add
ljmp
into
test
cld
adc
xor
jge
or
lods
mov
and
int
aaa
push
dec
mov
cld
cmp
or
cmpsl
lcall
xor
test
loopne
cld
pop
addr16
movsb
mov
aaa
add
addr16
mov
and
ljmp
les
iret
ja
xchg
repz
lcall
push
icebp
add
mov
jge
test
lret
stos
divb
cmp
dec
push
push
fimull
mov
loop
or
or
sub
xchg
out
addr16
xchg
mov
mov
xchg
outsl
xlat
or
pusha
add
sbb
insb
test
dec
pop
inc
std
mov
mov
mov
scas
dec
hlt
icebp
adc
stos
adc
gs
push
cmp
cmp
mov
int3
pop
loopne
call
lock
sbb
clc
out
inc
loopne
call
add
mov
sti
scas
sahf
imul
mov
sub
add
add
and
lock
mov
fwait
scas
sub
inc
inc
test
leave
lods
movsb
jne
jno
add
add
int3
mov
sbb
mov
out
adc
pop
push
loopne
pop
into
shlb
enter
dec
mov
icebp
shl
mull
mov
and
mov
mov
jp
pop
lock
or
push
int3
push
pop
icebp
lods
int
imul
mov
adc
sbb
and
out
pop
imul
mov
sti
mov
jp
fadd
data16
xchg
cmp
insl
push
mov
mov
pop
js
lret
jmp
int3
xchg
jle
cwtl
cmpsl
inc
addr16
and
loopne
xor
sub
adc
es
adc
inc
enter
push
leave
push
mov
add
outsb
sbb
mov
ljmp
jmp
jle
imul
adc
push
xor
pop
mov
aas
sub
mov
rolb
lock
out
mov
pop
bound
add
out
inc
imul
inc
cmp
adc
mov
out
mov
movsl
xchg
loope
data16
adc
repnz
lods
xor
jl
jb
cwtl
ja
imul
mov
push
fistpl
testb
cs
test
mov
dec
pop
mov
fnstsw
fldt
in
pop
push
sub
cld
and
pop
cli
sub
jno
sub
xchg
and
mov
cmp
xchg
rcpps
adc
adc
fistps
push
bound
xchg
mov
mov
add
aas
inc
mull
cmp
cmc
push
out
pop
dec
sub
mov
daa
fadd
dec
movsb
sub
add
sarb
gs
xchg
pop
dec
std
xchg
pop
sub
clc
fmuls
cmpsl
mov
xchg
xchg
and
cmpsl
inc
xor
int
dec
mul
subb
add
inc
push
iret
ret
out
jecxz
daa
les
mov
imul
lret
sbb
jns
and
ljmp
loopne
clc
lahf
sahf
sbb
std
push
xorl
ja
int
ret
rcr
xor
imul
pop
cwtl
mov
ljmp
mov
rorl
sub
jle
add
orb
pop
fcomi
sub
push
les
jb
hlt
push
and
in
jmp
mov
xchg
inc
xor
into
or
dec
cmp
sub
shr
jns
or
fadds
jle
outsb
push
add
jle
fwait
mov
mov
sar
int3
xchg
out
cmp
and
push
push
xor
pop
mov
cmpsl
sbb
pop
in
or
add
or
adc
mov
in
mov
inc
inc
sub
adc
stc
adc
pop
pop
out
std
ljmp
jecxz
cs
mov
jge
decb
sub
fdivp
arpl
push
dec
mov
sub
mov
add
add
mov
fs
andb
sub
sarb
pop
lods
dec
mov
gs
sub
push
imul
sarb
jmp
pop
xchg
cmp
mov
test
out
adc
or
sbb
ja
lock
dec
sub
pop
pop
into
fiaddl
fistps
mov
addl
outsb
mov
push
jno
ret
cmp
arpl
fwait
pop
cmp
jo
sbb
pop
call
out
sub
dec
sub
push
fisubs
inc
or
ja
sbb
popa
imul
mov
and
mov
adc
dec
mov
gs
pushf
push
aas
loop
sbb
add
es
mov
sbb
roll
loop
or
and
sarb
mov
test
gs
cmp
jg
popa
aad
xor
jno
test
ljmp
arpl
inc
dec
pop
ja
sahf
mov
dec
scas
repnz
inc
aam
add
mov
data16
aam
pop
adc
repnz
enter
enter
testb
inc
cs
sahf
pop
xchg
das
and
push
stc
sbb
lcall
sbb
xchg
ja
gs
les
dec
lcall
ficoms
jecxz
jnp
push
mov
mov
mov
add
loope
ja
jb
loop
out
sti
cwtl
sub
std
ret
jg
mov
adc
and
mov
cmpsb
dec
sub
pusha
jmp
or
fadds
movsl
sbb
mov
mov
jecxz
jmp
loop
push
pop
mov
mov
lcall
cli
and
mov
gs
mov
rorl
cltd
pop
dec
xchg
pusha
mov
push
and
and
rorl
cwtl
and
fsubrs
xchg
cmpl
hlt
dec
or
cmpsb
push
aaa
dec
jno
lods
cs
cmc
add
or
in
addr16
stos
aas
cmp
jno
jnp
mov
pop
jnp
pop
mov
test
flds
std
sbb
cmp
push
xor
mov
inc
xchg
add
cwtl
or
out
inc
aam
mov
insb
int
movsb
dec
push
mov
popa
icebp
push
xchg
test
lods
jae
in
in
ljmp
adc
imul
fdivl
sbb
call
cs
sbb
push
bound
push
fucomp
mov
out
jae
adc
pushf
imul
test
push
fld
pop
sbb
sub
addl
add
dec
jne
in
ja
popa
shlb
cld
adc
xchg
dec
inc
xor
push
or
stc
shlb
cli
xchg
cmp
pop
pop
cwtl
cmp
add
pop
sti
mov
loop
jp
ds
dec
xor
data16
jp
mov
je
xor
jnp
sarb
xchg
fsubl
cmpsb
push
ret
cltd
imul
mov
dec
repz
lds
adc
cwtl
repz
inc
in
xchg
lret
sub
test
cmpsl
add
test
push
mulb
clc
iret
dec
lods
pop
or
and
and
lock
lods
sbb
mov
mov
inc
inc
loope
cmp
jns
jle
mov
scas
nop
shl
jbe
jbe
clc
call
aaa
and
mov
xchg
imul
aaa
sub
xchg
xor
jg
cmp
aad
push
jmp
jno
dec
call
and
mov
lea
xlat
mov
fstl
outsl
push
in
ret
jb
mov
in
pop
in
jb
popa
stos
push
lahf
mov
shlb
inc
xchg
sbb
mov
hlt
mov
adc
add
pop
shrb
xlat
ffree
push
dec
outsb
sub
lea
add
test
push
sub
jno
pushf
lret
lock
out
subl
sub
dec
fwait
test
mov
inc
xor
cmp
jp
mov
sbb
mov
mov
scas
jp
inc
push
adc
sahf
cmp
push
mov
inc
popf
lcall
aad
aam
mov
es
call
iret
mov
std
jb
inc
pusha
mov
in
xchg
incl
gs
xchg
idivl
jmp
sub
in
inc
push
xchg
jl
or
fcomps
sbb
shrb
repz
out
cmp
jnp
jne
or
xor
imul
pop
sahf
jno
loop
dec
dec
cli
push
cmpsb
and
lods
mov
jmp
lret
stos
mov
scas
lcall
xchg
mov
fs
mov
call
xor
rcrl
sbb
repnz
sub
rcll
idiv
pop
jbe
pop
push
fwait
hlt
inc
mov
xchg
hlt
xchg
push
add
pop
pop
cmp
mov
jl
int3
fstpt
pop
cmp
dec
mov
inc
inc
ja
cmp
xchg
push
dec
xor
and
clc
decl
out
push
inc
sub
dec
imul
push
clc
test
out
mov
lods
loop
pop
out
pop
xchg
xchg
adc
cmc
cmp
mov
sti
xor
nop
mov
test
mov
aam
adc
inc
es
addl
popa
lret
imul
and
adc
jnp
sbb
jmp
jb
or
dec
dec
push
aam
cmpb
les
repz
mov
pop
fbld
pop
repnz
out
cmp
pop
repz
push
arpl
lock
movsb
cs
jge
mov
dec
fidivs
mov
sbb
mov
andl
jmp
mov
repz
push
sbb
test
sub
stc
rcr
xor
cmp
pop
out
and
nop
xor
out
mov
or
or
cmpsb
xor
js
in
dec
mov
insl
int
jl
sub
jp
mov
jp
mov
or
call
out
jle
xor
or
dec
loope
adc
jle
xchg
fs
ret
sbb
push
cwtl
and
xchg
ja
push
mov
cli
inc
or
sbb
bound
in
inc
bound
xchg
xchg
xor
push
jno
shll
into
add
icebp
scas
mov
xchg
lods
inc
filds
mov
movsb
pop
adc
fs
push
xor
sahf
ret
add
xchg
fisubrs
sbb
rcrb
cmp
and
outsl
dec
lahf
mov
mov
xchg
push
sbb
pop
sub
bound
ljmp
clc
cmp
push
nop
push
jbe
mov
hlt
sub
addl
or
movsb
hlt
jae
pop
inc
adc
fcmovnu
mov
std
mov
mov
in
mov
and
movsb
loopne
lret
push
mov
pop
push
jns
nop
cmpb
les
jns
ljmp
xor
xchg
loope
mov
push
je
dec
sub
mov
pop
adc
subb
cmp
jecxz
jl
jge
xchg
mov
adc
xor
cmp
mov
pop
cmp
gs
sbb
xor
jbe
je
jno
sar
xchg
push
pushl
mov
push
xchg
add
andl
ljmp
cmpsb
dec
mul
mov
lahf
pop
pop
mov
js
jge
popf
push
pushf
push
adc
dec
xchg
jecxz
sub
cmp
mov
sbb
push
rcll
insl
add
dec
xor
add
shl
incb
sti
cmp
sub
push
cmpl
ljmp
fsubl
mov
aam
sub
int3
hlt
sub
inc
xor
sub
loope
int
fs
test
pop
and
sub
ret
je
idivb
adc
ljmp
jnp
cld
loop
das
mov
rcl
and
cmp
callw
in
add
mov
push
push
mov
shl
jae
add
sbb
mov
mov
mov
imul
xorl
fstps
mov
add
cmc
sti
jp
mov
or
mov
jne
add
jmp
xchg
push
push
sbb
shll
fcomps
jp
dec
adc
jae
in
gs
pop
in
sbb
popa
mov
pop
imul
push
mov
and
aam
scas
sbb
stos
push
mov
std
sub
or
xor
xor
lock
push
icebp
pop
lods
outsl
lcall
fisttpll
jne
gs
inc
addr16
sbb
das
inc
mov
fisubs
stos
sbb
cmp
add
call
add
out
xchg
pop
aas
jbe
pop
pop
cmp
ret
jnp
dec
cmp
in
dec
ja
cmpsl
push
lea
push
cwtl
inc
pop
adc
jecxz
mov
addl
mov
mov
lcall
jnp
std
add
mov
pop
loopne
mov
out
sbb
and
mov
je
dec
push
adc
repnz
dec
jne
dec
stos
sub
push
inc
daa
popa
or
inc
xchg
mov
add
jmp
push
jo
sub
adc
ret
mov
sub
rclb
stc
mov
push
inc
divl
sub
push
mov
mov
mov
jle
int
pop
mov
orb
repz
lahf
je
dec
push
pop
adc
jo
sub
xor
or
lods
pop
mov
lret
in
out
or
and
adc
jbe
and
lret
mov
ljmp
es
xor
adc
call
push
add
pop
push
sbb
iret
jmp
addr16
jg
stc
repz
call
les
xor
in
add
inc
or
push
push
aad
pusha
daa
aaa
cld
jb
sub
jns
scas
xor
fsub
adc
std
ss
sbb
out
adc
adc
adc
jae
fwait
xlat
repnz
fwait
aaa
add
out
dec
push
fnstcw
add
scas
push
call
cmp
movsb
lock
clc
push
ret
pop
xchg
push
shrb
mov
test
imul
js
jmp
mov
dec
xchg
mov
aaa
inc
xor
pop
sahf
rolb
mov
cmp
stos
ret
and
pop
cs
sti
xchg
ret
ficoml
xor
loop
add
fcompl
imul
push
lahf
dec
sub
lret
aad
pop
mov
xchg
test
jmp
pushf
mov
adc
pop
add
or
xchg
mov
fisubrs
std
outsl
pop
out
lcall
jp
xor
mov
mov
dec
pushf
inc
stc
roll
and
xor
ds
jne
lock
outsb
mov
xchg
lock
or
sub
lcall
xor
movsb
icebp
in
cs
out
mov
mov
inc
mov
jp
jb
push
jg
clc
sbb
or
xlat
test
addl
orl
aad
jle
inc
sub
cmp
mov
and
in
cmpsb
jle
jg
popa
pop
push
add
cmp
icebp
pop
adc
pusha
sbb
ss
insl
das
sub
jnp
mov
aad
inc
repz
ljmp
push
add
cmpsb
add
fists
icebp
fdivrl
xorb
jns
add
sbb
sub
xchg
das
in
lahf
insl
xchg
lret
outsl
or
rcrl
stc
fsts
testb
and
insl
decb
rcrb
sbb
dec
fstpt
cld
mov
lret
into
data16
fimull
ljmp
fstps
mov
push
push
sarb
cld
gs
dec
inc
aaa
mov
xchg
push
cmp
cmp
clc
fsub
cmpsb
mov
cmpsl
call
testb
div
jmp
sub
cmp
out
not
adc
mov
inc
mov
movsb
stc
data16
into
arpl
loope
cmp
push
movsl
and
insb
imul
mov
jle
inc
push
test
mov
dec
inc
fwait
jl
out
loop
adc
fisttps
in
xchg
jne
mov
insb
jbe
enter
or
iret
jno
fcomi
pcmpgtb
cli
lcall
or
dec
lret
not
mov
mov
xor
mov
mov
mov
lods
mov
cmp
mov
test
push
testl
pop
arpl
sub
ja
das
fisubs
movsb
mov
mov
adc
popf
hlt
inc
jge
cmp
xchg
fwait
imul
and
rorb
in
rcrl
fnstsw
push
sub
hlt
mov
pop
or
je
pushf
lea
dec
push
jl
pop
stos
insl
xchg
ret
cmp
fildl
hlt
addr16
movsl
nop
pop
mov
jb
dec
dec
outsl
jge
dec
cmp
aam
out
sub
in
add
fcomps
push
cmp
imulb
cmpsl
movl
outsb
or
pop
inc
scas
lahf
in
xor
movsb
mov
pusha
xchg
jnp
mov
pop
ror
fistl
xchg
pop
pusha
aam
insl
les
pop
test
mov
xchg
mov
push
ja
mov
mov
clc
push
and
jae
incl
jg,pt
in
nop
inc
das
leave
leave
filds
neg
jecxz
mov
outsb
mov
push
sbb
loopne
pushf
fidivrl
adc
jb
call
test
mov
test
int
mov
popa
daa
sarl
sub
sub
cmp
inc
mov
test
data16
sarb
cmp
sub
fcmovnb
add
fistps
lods
repz
add
addr16
les
fsubrs
adc
cltd
divb
testl
mov
xchg
test
cmp
roll
adc
adc
adc
dec
loop
mov
inc
lea
cmp
notl
xchg
inc
gs
sub
cmpb
sub
mov
movsb
fdivl
xchg
xchg
add
data16
push
test
aad
cld
push
cli
mov
dec
clc
pop
notb
mov
clc
out
add
fsub
es
or
cmpsb
aaa
out
cs
fisttps
add
outsl
hlt
shll
mov
adc
adc
add
hlt
imul
out
dec
pop
call
clc
xchg
repz
and
mov
push
cli
mov
or
sbb
cmp
cmp
ja
dec
sti
cwtl
push
ljmp
cs
cmp
lret
outsl
js
rcl
icebp
push
inc
or
or
jno
imul
loopne
jo
or
pop
xor
cld
call
sbb
mov
mov
sbb
loop
inc
jo
shl
inc
int3
mov
xchg
insl
movsl
xchg
sub
scas
lods
or
repnz
inc
jo
syscall
mov
mov
xor
jno
scas
xor
push
shrl
js
mov
pushf
fstpl
pop
rorl
jo
add
outsb
mov
xchg
icebp
jmp
or
enter
movsb
adc
imull
add
mov
clc
mov
pusha
or
loopne
jae
addr16
pop
js
add
and
cmp
xchg
cmp
mov
mov
popf
rol
push
imul
add
adc
dec
mov
xor
sbbb
pop
pop
arpl
out
dec
loope
cli
aam
sbb
scas
adc
or
sahf
sbb
aam
test
aad
adc
repnz
in
stos
jecxz
std
push
xchg
inc
pop
stos
sbb
sub
xchg
sub
jp
out
push
xor
or
push
mov
ljmp
and
sub
and
test
dec
lret
mov
pop
inc
xchg
mov
inc
sti
repnz
lods
sub
mov
cmp
dec
ret
jae
lods
js
inc
pusha
lcall
in
ljmp
int
enter
sub
das
arpl
xor
xchg
into
jb
mov
fstp
or
roll
or
mov
sahf
inc
jno
rcrb
xlat
movsb
sub
push
xor
push
adc
lods
or
xor
add
xorb
aaa
pop
pop
mov
icebp
rcrb
rclb
fidivl
bound
les
fisttps
push
shll
lahf
ror
push
js
fldcw
lds
sahf
rorl
mov
push
cmc
pop
das
xor
idivl
leave
mov
jecxz
lds
std
and
pop
push
jle
xchg
shll
pop
mov
loope
mov
test
jns
pop
xor
fsubl
adc
loope
fstpl
aam
xor
dec
lahf
cmp
push
mov
fiaddl
lods
aad
dec
add
mov
arpl
mov
xchg
add
stc
push
mov
je
notl
iret
dec
daa
movsb
cmp
shlb
jl
jmp
pop
nop
imul
dec
rorl
jecxz
jo
mov
iret
fiadds
lea
loop
ret
xchg
sub
adc
mov
mov
pop
xor
mov
cmp
stos
idivl
push
and
das
sub
xor
add
popf
movsb
cmp
xchg
aad
mov
xchg
inc
dec
mov
int
stc
aad
adc
leave
adc
and
pop
cld
jmp
mov
sahf
push
inc
dec
mov
xlat
bound
pusha
stc
mov
or
xchg
adc
out
jno
pop
in
rorb
adc
jle
aam
in
mov
mov
xchg
shlb
sbb
xchg
bound
pop
xchg
in
inc
push
jg
outsl
pop
push
enter
jg
sbb
rcl
inc
dec
in
jecxz
jl
fisubl
lcall
inc
test
inc
scas
fisttpl
icebp
std
sub
je
rolb
fidivl
dec
test
out
fidivs
in
outsl
cmc
arpl
pop
cmpsb
sbb
nop
push
adc
jp
push
cld
stc
and
addr16
and
xor
adc
movsb
divb
repnz
dec
xchg
adc
lret
mov
cmp
push
movsb
mov
sub
lods
int
test
xlat
sub
pusha
fs
jae
cmp
ficompl
add
imul
mov
push
jmp
jecxz
jbe
sub
insb
sbb
xor
xor
mov
pop
cmc
mov
mov
rcl
mov
enter
or
lahf
nop
xchg
loop
mov
add
ret
mov
hlt
dec
pop
icebp
loope
je
stos
outsl
mov
ret
pop
mov
arpl
daa
js
push
orl
stos
imul
fcmove
out
cwtl
lcall
insl
scas
add
xchg
arpl
push
mov
mov
mov
adc
aam
push
cmpsl
sub
adc
cmp
je
mov
popa
mov
imul
int3
aas
loopne
dec
lahf
out
popa
leave
inc
stc
mov
data16
lds
lcall
int
out
repnz
sbb
push
adc
or
cmp
jne
iret
lock
das
arpl
cmp
xorb
or
xor
adc
inc
sahf
xor
jge
or
cmp
rclb
pop
and
bswap
mov
iret
lods
inc
mov
loop
sbb
inc
jg
imul
hlt
push
push
into
jmp
adc
dec
mov
pop
adc
sub
sbb
bound
arpl
pop
sub
adc
mov
fadd
out
aad
testb
rcl
rcr
mov
xchg
scas
testl
xchg
outsl
mov
fwait
rolb
mov
push
adc
push
add
pop
add
jl
loope
data16
xor
dec
or
fwait
xor
js
hlt
cmovo
xchg
and
fistpll
lret
in
ficoml
imul
pop
mov
ss
loopne
adcl
xor
xchg
or
test
xor
cld
cmpsb
sbb
xchg
inc
and
outsb
inc
push
ljmp
dec
movsb
inc
js
ret
nop
test
mov
pushf
lahf
push
je
push
inc
lods
stos
cmpsl
jno
push
clc
sahf
outsl
mov
add
mov
cmpb
out
sbb
loope
mov
sbb
xchg
imul
das
and
leave
lahf
fcmovnb
jge
cmp
data16
fwait
loope
dec
je
insl
inc
es
hlt
fidivl
insl
mov
incb
pop
loopne
mov
rep
sbb
shll
or
pop
clc
or
cmp
jmp
scas
push
dec
or
imul
loopne
lret
inc
inc
mov
mov
ja
adc
jae
in
mov
lock
movsl
lret
mov
push
cmpsl
in
inc
mov
fs
lock
mov
sbb
sub
aad
call
cmpsb
add
fwait
cmpb
push
outsl
sub
pop
je
adc
xchg
jns
out
lds
fwait
pop
push
xchg
decb
add
adc
into
outsl
xlat
gs
scas
jle
jbe
and
xchg
pop
in
xchg
loop
xchg
cmp
lods
xor
lret
sbb
adc
lods
sub
scas
ljmp
movsb
pop
dec
int
jae
and
sub
mov
push
lea
mov
aaa
mov
movsb
cs
cmp
cld
aas
outsb
mov
sub
pop
outsl
xor
mov
push
int
pop
mov
shrb
inc
ret
jecxz
stos
cltd
test
cmp
jp
push
cmp
cli
push
out
test
inc
sub
dec
data16
xor
test
clc
cmc
or
iret
jno
aaa
lret
pop
in
xor
subb
fcompl
xchg
mov
les
cmpsb
sahf
imul
xchg
ljmp
xchg
pop
mov
loop
push
cmp
and
and
out
dec
fmulp
das
addr16
jmp
pushf
shrl
mov
xor
cltd
inc
push
pop
fnstenv
xor
test
pop
push
xor
lret
and
call
loopne
out
or
mov
mov
pop
mov
inc
cltd
std
stc
cmp
cwtl
popa
hlt
cmp
pop
fldcw
out
clc
fdivrs
xor
or
fildll
pop
call
fists
cmp
mov
imul
push
mov
inc
pop
sub
mov
lock
sub
test
idivb
pop
cld
or
cmp
jle
out
clc
xchg
sbb
adc
xlat
pop
xchg
mov
repz
repnz
out
dec
aaa
or
jg
out
xchg
inc
in
push
and
iret
lret
clc
sti
clc
in
int
jae
adcl
jle
mov
mov
jmp
loope
sub
test
test
repnz
inc
push
dec
aaa
dec
mov
mov
in
and
dec
pop
test
push
pop
in
sbb
mov
lods
cli
lock
add
scas
or
mov
ficompl
jmp
dec
adc
cmpsb
add
push
mov
mov
psadbw
stos
and
sbb
or
fisttpll
fwait
xchg
outsb
dec
repz
jb
pop
mov
jnp
ja
adc
sub
xchg
fiadds
popa
push
mov
jnp
mov
mov
cs
icebp
or
dec
inc
push
mov
test
mov
mov
std
push
dec
stos
arpl
cmc
sarb
sub
dec
pop
jp
addb
bound
enter
pop
and
add
pop
sbbl
int3
inc
xchg
lea
imul
les
xchg
in
cs
pop
adc
mov
lods
in
inc
inc
in
iret
out
jno
mov
fwait
ss
lea
jb
adc
stc
cmpsb
int3
xor
cmpsb
dec
cld
fsubs
pop
pop
jae
imul
push
push
adcb
es
xlat
loop
xchg
ljmp
jg
ficoml
sbb
cmp
xchg
add
cmp
mov
mov
test
out
das
arpl
cmp
push
scas
mov
jns
xchg
xor
mov
or
push
or
sbbl
inc
dec
push
mov
cmp
sbb
stos
mov
cs
and
hlt
dec
testl
push
in
cld
adc
push
data16
fdivrl
xchg
or
xchg
xchg
outsb
das
imul
cwtl
int
or
inc
mov
adc
aas
popf
int3
pop
and
push
adc
add
mov
sbb
mov
scas
xor
xor
inc
sub
pop
enter
aas
cmp
adcb
push
mov
push
mov
lahf
jge
shr
xchg
imul
sbb
or
out
xchg
add
pop
inc
pop
mov
in
or
inc
pop
fstpl
cmp
jb
xlat
push
jecxz
enter
mov
out
shll
push
mov
sbb
mov
data16
test
das
inc
or
dec
adc
jmp
cli
add
fsubp
aaa
hlt
pop
xchg
dec
pop
sbb
inc
jae
adc
sbb
inc
or
sub
jge
fistpll
leave
add
lret
pop
lahf
push
jbe
inc
fisttpl
lods
cmp
mov
stos
sbb
jb
and
pushf
inc
mov
std
mov
cltd
adc
insl
adc
loope
adc
mov
and
xchg
xor
xchg
ja
mov
out
pop
repnz
and
sti
mov
cmc
stos
push
sub
pop
sub
in
dec
shll
popa
mov
cld
sub
inc
cmp
push
push
push
test
cltd
jecxz
fdivp
add
or
cld
adc
sahf
pop
fidivrl
xor
lds
mov
scas
pusha
gs
xlat
push
mov
or
push
jne
or
or
andl
cmpsb
pop
push
push
xchg
js
dec
or
add
bound
dec
icebp
idivl
sub
push
push
repnz
shll
mov
in
stos
adcl
push
ret
les
sbb
xor
cmp
jmp
mov
fisubrs
and
cwtl
into
push
dec
cmpsb
lcall
mov
and
jg
out
mov
xchg
imul
xchg
fsubp
or
int3
cwtl
jl
mov
xor
sub
notl
js
push
pop
push
inc
push
fstpt
jno
aad
jns
repz
and
push
mov
shll
mov
lods
shrl
dec
mov
je
cmp
dec
gs
jmp
mov
or
mov
icebp
mov
mov
pop
rorb
into
and
ljmp
clc
inc
nop
cli
jnp
inc
dec
sarl
pop
pusha
xchg
cmpsb
xor
scas
jb
frstor
or
movsb
jmp
cmp
inc
cmpsb
ja
pop
lods
leave
push
ja
andl
or
loop
sub
aas
or
int
pop
popa
inc
aas
adc
aam
cmp
inc
psubusw
arpl
mov
pop
int
adc
adc
dec
in
push
out
xchg
jg
repz
dec
pop
jnp
cmp
in
fwait
pop
dec
mov
cld
adc
cli
mov
mov
inc
sahf
or
cmp
cld
rcll
add
jb
lock
icebp
sub
jno
mov
les
pop
push
xlat
or
mov
test
das
xchg
lods
addr16
mov
dec
pop
or
pop
mov
test
jo
cmp
xchg
pop
out
sahf
aaa
scas
cmpsb
fcmove
sub
push
adc
lcall
fs
ret
aas
aad
imul
jb
add
mov
outsb
pusha
pop
out
mov
xchg
dec
testb
int3
or
popf
push
mov
push
mov
outsl
jge
xchg
pop
arpl
fmull
sti
int3
cmp
and
bound
sbb
jmp
dec
and
push
jo
in
jg
push
stos
test
ss
je
data16
loopne
stos
mov
cwtl
rclb
and
or
out
inc
insb
loop
bound
xchg
mov
mov
jmp
imul
mov
cltd
roll
mov
in
and
mov
dec
lret
adcl
adcl
push
popl
ja
sarl
adc
aam
xor
jae
jns
mov
int
addr16
push
sarl
ret
pop
xchg
mov
xchg
dec
or
xchg
test
push
popa
adc
adc
rcrl
aaa
mov
insl
xchg
and
in
insb
xchg
enter
jmp
mov
gs
mov
mov
pop
pusha
shrb
lret
mov
test
adc
cmp
enter
cltd
lods
inc
mov
xchg
adcb
mov
jno
mov
or
pop
push
adc
cmc
jg
out
inc
xchg
add
sub
mov
hlt
sti
xor
pop
push
xchg
mov
loopne
or
aam
cmp
jle
sub
xchg
shrb
inc
mov
inc
jne
jmp
sbb
rep
ljmp
sub
fwait
insl
shll
add
adcb
in
ljmp
or
mov
rclb
inc
lret
movl
jl
repz
clc
jbe
and
and
aas
or
test
paddsb
imul
lret
mov
dec
or
andb
jl
add
adc
js
mov
jbe
pop
and
mov
movsl
lock
bound
icebp
cmp
out
push
dec
aas
popa
jecxz
pop
xor
mov
inc
test
or
scas
inc
push
ret
sub
iret
jno
aad
fwait
and
inc
mov
lahf
lds
out
out
jnp
add
ror
stos
mov
aas
pushf
or
mov
and
adc
rcl
mov
js
adc
sahf
sbb
pop
sahf
push
jbe
repnz
movsl
jae
enter
test
jne
lods
xchg
std
or
rol
jp
fiadds
loopne
sbb
pop
aaa
sbb
std
sub
popf
push
push
and
mov
pop
test
addr16
dec
in
or
xchg
pushl
fsubrp
addr16
setne
mov
cs
sbb
dec
jno
sub
jle
shl
cmpsl
xor
jae
pop
cmp
ja
push
movsb
xor
out
rcl
mov
scas
jae
fimull
cwtl
xor
cmp
movsl
rcl
call
cmp
cwtl
int
das
inc
test
mov
mov
test
daa
rorl
lea
push
xorb
loopne
shrb
adc
pop
xchg
subb
ja
pop
daa
js
mov
gs
push
or
popf
push
and
bound
adc
pop
dec
sahf
shrl
fnsave
mov
clc
xor
adc
lea
dec
jge
jno
add
in
fstp
dec
pcmpgtw
fmuls
add
mov
fwait
std
adc
icebp
incl
insb
inc
movsb
push
mov
jno
cmpl
push
out
vfmsubadd231ps
push
and
lret
mov
lret
aad
mov
pop
mov
cltd
sbb
mov
scas
pushf
sbb
xor
ja
test
push
mov
xor
fsubrs
in
mov
adc
jae
and
stc
add
sbb
lea
mov
push
and
mov
xor
fs
xchg
push
fsubp
mov
or
cmp
push
inc
ja
sub
aaa
sbb
pusha
mov
hlt
lcall
dec
in
jge
and
outsl
rorb
sbb
f2xm1
dec
jae
sbb
xor
inc
insb
lahf
movsl
hlt
add
pusha
and
or
cwtl
loope
xchg
ficoml
mov
mov
jge
fwait
cmpsl
xchg
enter
cmp
clc
rcrb
xchg
lret
sub
ret
stos
into
in
push
pop
sub
sub
push
gs
dec
icebp
inc
dec
xor
sub
xchg
push
dec
push
in
adc
pop
xor
jne
xor
call
cmpsb
adcl
lods
mov
pop
lcall
xlat
bswap
dec
mov
lods
rep
into
aam
lock
sub
sbb
es
cmp
jae
arpl
jg
loopne
jle
divb
pop
je
mov
or
nop
mov
mov
push
popa
std
popf
ljmp
add
jp
ja
push
repz
jecxz
movsl
mov
xchg
push
push
shr
inc
fcomps
pop
into
mov
mov
cmp
xor
push
xchg
jae
cmp
mov
adc
add
inc
inc
in
xor
pop
inc
push
ja
fs
sub
lea
pushf
inc
pushf
scas
sub
or
sbb
enter
js
sub
pushf
or
pop
clc
jp
dec
iret
jb
jmp
popa
inc
push
jge
sbb
adc
sbb
jns
jp
and
andb
mov
in
mov
xchg
out
and
mov
or
mov
fcmovnu
pusha
dec
daa
cmc
pop
sub
mov
add
sbb
pop
cwtl
test
add
fimuls
xchg
push
pusha
push
sub
mov
pop
pop
daa
xchg
jo
add
pop
jae
xchg
push
andb
movl
fs
cltd
addl
mov
cmpsb
add
xor
mov
pop
inc
jae
sbb
xor
pusha
imul
adcb
push
rol
push
dec
push
out
inc
mov
pop
das
lcall
cli
lods
and
push
out
int3
mov
mov
repz
lea
in
push
push
repz
out
cld
xor
lds
xor
xor
push
sub
and
pop
dec
imul
adc
das
pop
or
ds
mov
stos
adc
pop
and
push
jno
and
sbb
xlat
mov
xlat
mov
jl
mov
jae
pop
dec
lea
cmpsl
or
test
xchg
dec
xchg
sub
xchg
test
je
out
jne
std
pextrw
inc
mov
push
loopne
addl
adc
shlb
lahf
add
mov
jle
jecxz
sub
or
pop
and
xor
inc
fsubs
std
bound
or
mov
fstl
mov
jle
ficoms
jnp
sub
cmpsb
pop
enter
enter
jecxz
arpl
in
negb
ja
xchg
jbe
es
int
fcmovnu
sbb
lock
cld
mov
add
cmpsb
and
rcll
in
in
mov
das
sbb
cs
addr16
in
xor
cmp
inc
test
mov
rcrl
scas
lock
subl
dec
push
cmp
pop
xchg
xchg
dec
cltd
mov
in
sbb
pushf
adc
dec
in
mov
cmc
pop
push
mov
scas
cmp
daa
xor
hlt
mov
hlt
inc
ss
dec
mov
int3
scas
popf
dec
mov
pop
stos
lods
jle
mov
out
jge
xchg
imul
dec
jge
xlat
fs
pop
push
nop
jecxz
mov
js
jae
mov
xor
or
lods
and
aas
cmp
pushf
iret
andb
out
xchg
daa
and
cs
pushw
sbbb
fldt
jl
leave
fists
pop
outsb
lods
test
cmp
xor
dec
adc
xor
insb
bound
cli
fs
mov
dec
negl
pop
data16
xchg
daa
hlt
mov
dec
xchg
jecxz
inc
add
out
mov
push
rol
cltd
test
pop
test
stos
outsl
popf
aas
lods
mov
xor
shrl
mov
xchg
insb
or
xor
jle
sbb
incl
dec
jb
cmp
cmp
mov
test
addl
jbe
mov
xor
sbb
cmp
arpl
ss
mov
popf
int3
movsl
out
mov
inc
rcr
es
sub
mov
arpl
jg
pop
clc
add
outsb
sub
ds
in
or
rcrb
adc
arpl
ficoms
sarb
jle
mov
out
loop
bound
xor
sbb
jle
ljmp
xlat
sub
outsl
dec
popa
mov
imul
lods
roll
sar
mov
push
jb
cmp
fdivl
push
sub
loope
mov
xor
mov
aad
aaa
int
pop
jp
jnp
in
xlat
pop
shll
mov
std
mov
or
fldenv
inc
mov
and
ret
js
fildll
daa
push
loope
or
dec
mov
jg
das
or
jmp
enter
insb
insb
cmp
stos
inc
push
mov
sub
mov
in
js
jecxz
inc
ds
dec
push
fwait
pop
jmp
fisubs
scas
movsl
gs
shrl
aad
ficomps
add
sti
mov
addb
sarl
add
push
jb
mov
adc
mov
sub
test
sti
pop
inc
xchg
xchg
repz
mov
dec
mov
insl
push
out
push
out
pop
lcall
xchg
sti
push
sub
loop
xor
dec
mov
jb
xchg
into
mov
aam
sub
mov
inc
xor
loope
hlt
insb
cltd
jp
ror
cli
pop
jl
aam
mov
lods
aaa
orl
cmp
jae
int3
sub
cmp
sub
inc
mov
outsl
imul
mov
ret
xchg
insb
lahf
into
add
lods
lahf
fwait
dec
in
icebp
xor
mov
mov
hlt
stos
push
sti
push
lods
pop
and
or
inc
dec
xlat
fistl
dec
incb
fsts
movsl
mov
sbb
xchg
xor
mov
or
ds
xor
ret
push
xchg
cmp
adcb
ljmp
ljmp
mov
ret
int
cmc
testl
xchg
mov
cltd
daa
out
add
mov
xchg
shrl
sbb
imul
and
and
jnp
mov
movsl
xor
jp
comiss
fcmovne
aad
fwait
mov
outsl
scas
imul
sub
dec
jl
pusha
hlt
and
push
and
movsb
mov
daa
and
mov
xchg
inc
sbb
push
mov
push
aam
mov
cmc
lock
icebp
push
mov
sub
mov
test
cmp
out
rclb
cmp
dec
or
and
cltd
fdivr
sarb
jnp
push
int
xor
cmp
int3
mov
mov
mov
mov
mov
mov
add
sub
in
push
sub
and
push
sbb
xchg
adc
call
lahf
ja
test
test
pop
mov
test
sbb
mov
xlat
shl
ss
xchg
cld
andb
push
test
inc
out
mov
sub
ret
fimull
mov
or
stc
stos
dec
fcomip
push
and
movsl
iret
mov
fnsave
pushf
or
cmp
rclb
pusha
mov
les
test
pop
in
ret
data16
push
and
push
inc
mov
aas
les
push
inc
dec
mov
inc
fstpl
lea
sbb
fdivp
push
dec
jae
xchg
xchg
push
pop
adc
ss
js
mov
mov
imul
into
inc
mov
std
enter
and
push
loop
mov
xchg
call
mov
push
daa
fisubs
jns
inc
cmp
pusha
and
mov
sub
hlt
lret
dec
int3
cmp
test
and
push
sub
push
adc
add
add
fwait
sub
jbe
sbb
dec
lret
xor
jne
or
hlt
loopne
arpl
fidivrs
sub
idiv
int
in
pop
sub
stos
jo
dec
aaa
int3
jl
jno
ret
sbb
pusha
rcr
dec
mov
insb
repnz
test
sti
sbb
addb
pop
push
pop
or
mov
and
fdivrl
outsl
mov
and
inc
xchg
int
pop
xor
or
leave
fcomi
daa
scas
dec
cltd
cmc
and
test
cmp
sahf
fcoms
sub
xor
xchg
fsubrs
dec
push
or
cwtl
fcomps
inc
popw
xchg
aad
shlb
fcmovnb
pop
inc
rorl
push
inc
cmp
mov
mov
and
cmpsb
mov
out
movsb
icebp
mov
jg
add
andb
push
and
pushl
inc
push
loope
cmpb
insb
fimuls
push
cmp
adc
pop
ja
ljmp
daa
aas
push
add
cld
stc
fwait
xlat
rorb
popa
fucomp
sbb
xor
aaa
ds
aam
jmp
and
add
lea
pop
lcall
call
icebp
pop
jmp
je
dec
jmp
sbb
lahf
loopne
dec
or
stc
pop
pop
fisttpl
movsb
iret
xchg
insl
lods
xchg
fcompl
push
out
out
fadds
in
sahf
mov
nop
sub
cmp
fsubp
outsl
sti
ja
fxch
dec
leave
push
repnz
push
call
dec
es
adcl
fiadds
mov
cmp
pop
push
xchg
cmp
jno
mov
cmp
in
lcall
fadds
iret
dec
mov
js
mov
cmp
cli
rclb
or
rolb
outsl
adc
sbb
and
negb
sub
movsb
push
xchg
sub
in
push
jns
mov
adc
push
dec
loope
fwait
cmp
insl
scas
or
dec
xchg
lret
add
lea
out
adc
push
and
mov
popa
mov
addr16
xor
mov
pop
in
cmp
xchg
add
stos
and
or
push
inc
pop
movsb
jle
and
mov
pop
fsubl
xchg
loop
mov
push
add
pop
or
repz
jae
lcall
sbb
fisttps
sub
ret
mov
xor
mov
into
xor
push
es
in
pop
cmp
sub
jno
xor
pop
push
es
leave
or
xchg
cld
cmp
push
mov
push
sbb
icebp
insl
pop
scas
cmc
out
pusha
repnz
or
shlb
data16
pop
mov
mov
mull
lahf
stos
adc
sub
mov
mov
inc
jbe
push
mov
xchg
push
push
movsl
and
push
dec
mov
mov
jl
xor
mov
imul
pop
cli
test
jl
loop
jecxz
and
dec
bnd
and
and
sub
stos
pop
mov
jle
jae
dec
daa
jo
xorl
mov
pop
aas
ss
sbb
mov
stos
lds
dec
data16
jmp
sub
jae
lcall
pop
cmpsb
sahf
out
in
and
js
jbe
adc
or
mov
sub
rorb
lret
imul
jb
cs
mov
cmp
sarb
loop
inc
and
and
test
daa
das
and
pusha
stc
decb
imul
test
je
pop
mov
sbb
mov
pop
jle
cmp
dec
iret
inc
fistps
into
lahf
in
test
dec
stc
jno
sbb
aad
xor
clc
xchg
mov
add
hlt
rdmsr
imul
les
or
scas
ret
jno
lahf
rclb
add
call
xchg
mov
sbb
ja
push
dec
sub
mov
jp
push
push
mov
lock
cmpsl
fwait
lods
pop
out
lret
sbb
sub
cmp
in
sbb
or
push
ffreep
ret
inc
cwtl
mov
push
cltd
or
pop
arpl
xchg
inc
xor
fstl
adc
add
mov
loop
dec
scas
loope
and
mov
adc
lock
dec
mov
add
mov
pop
pop
rorb
adc
or
sub
push
jl
mov
fidivrl
dec
inc
enter
and
jp
out
inc
clc
sub
sbb
adc
inc
sbb
push
and
lods
sbb
sbb
gs
daa
mov
mov
pop
and
push
iret
data16
mov
push
out
and
in
repnz
in
loope
rcl
inc
mov
add
mov
les
push
sub
gs
in
arpl
scas
sbb
push
or
addr16
push
lock
or
adc
xor
dec
pusha
enter
in
int
sbb
repnz
jecxz
cwtl
mov
pushf
jae
xchg
lea
sti
jge
cs
cmp
sub
jmp
fwait
rol
jmp
pop
cli
fdivrl
ret
leave
add
in
dec
inc
ss
inc
in
jbe
push
dec
ljmp
scas
xchg
test
int3
daa
jle
sbb
mov
sbb
shll
jp,pn
inc
sarl
dec
push
push
out
inc
pop
mov
sub
xor
inc
cmpsb
push
in
pop
sahf
cltd
xor
xchg
mov
jns
and
adc
movsb
dec
fstpt
inc
sbb
lock
lahf
or
mov
pop
dec
sub
inc
cmp
aas
jge
cmp
xor
mov
sbbl
pop
add
adc
aas
in
loope
pop
sub
mov
dec
test
pop
arpl
scas
nop
shrb
dec
dec
add
push
cmc
push
fidivrs
jp
mov
add
jnp
cmp
inc
fnsave
cmp
mov
lea
sub
add
push
shrl
fisubrs
hlt
cs
pop
loop
dec
pop
sbb
dec
mov
lret
cwtl
or
loopne
lock
jmp
pusha
push
fidivl
shr
hlt
scas
jmp
fwait
stos
lahf
xchg
icebp
into
adc
scas
mov
dec
inc
aam
or
nop
pop
dec
aaa
sub
xchg
gs
sub
imul
adc
mov
or
daa
outsl
or
cmp
int3
mov
negl
popf
adc
iret
jo
sub
pop
sub
cli
shrl
mov
clc
lahf
mov
test
mov
inc
imul
sbb
xchg
or
xorl
jg
jge
mov
sahf
lcall
imul
mov
mov
das
sbb
in
daa
mov
enter
pop
orb
adc
cwtl
mov
pop
shrl
cs
mov
mov
mov
and
mov
sbb
cmc
sbb
out
and
andb
inc
and
pop
xchg
into
mov
mov
push
shlb
and
outsl
push
das
jb
jo
push
mov
out
jg
inc
inc
aas
pushf
fs
mov
mov
pusha
xchg
push
std
in
je
mov
lret
je
inc
std
add
stos
jae
mov
inc
out
cmp
xor
or
xor
out
jns
in
pop
xchg
add
aas
insl
in
lods
imul
loope
aam
arpl
les
cmpsl
dec
add
shrb
jecxz
repnz
aam
inc
xchg
mov
mov
idivl
outsl
mov
xor
movsb
push
lds
movsb
je
shl
mov
jmp
dec
aas
xchg
cmp
out
rorb
lds
mov
sub
leave
je
and
test
insl
dec
dec
lods
xlat
pop
popa
push
sbb
sub
sub
inc
popa
ror
cwtl
andb
xor
jbe
pop
lea
out
dec
cmc
lea
add
or
icebp
mov
daa
jp
xchg
jbe
subl
sbb
xchg
and
movsl
sarl
jge
inc
push
dec
and
icebp
lods
mov
scas
sub
cmpsb
movsl
ljmp
mov
lret
inc
and
lds
scas
pop
and
daa
imul
sbb
hlt
mov
mov
push
sahf
pop
cmp
jne
xor
rorb
sbb
lcall
outsb
aaa
hlt
fidivs
or
data16
cmp
push
iret
push
xchg
loop
add
jge
dec
sahf
lds
push
cmp
inc
or
jmp
fistps
sub
sti
enter
xchg
jnp
pop
mov
dec
rorb
sbb
mov
xlat
cltd
xchg
dec
popa
xor
push
inc
ja
sub
dec
pushf
and
inc
xor
push
scas
mov
jg
outsb
jo
call
cmp
nop
inc
lods
sub
sarb
mov
sub
sub
cmp
popf
scas
cmp
mov
mov
adc
arpl
into
jle
jb
adc
out
pop
mov
or
mov
imul
imul
or
adc
imull
stc
or
mov
loop
les
stos
jecxz
cld
dec
test
adc
cli
fldcw
adc
in
cwtl
rorb
mov
lock
inc
pop
leave
rcrb
mov
and
pop
mov
adc
pop
dec
fs
ljmp
pop
cmp
arpl
mov
lret
cmpl
mov
xchg
jbe
jns
sbb
test
stos
mov
stc
pop
pushf
popf
pop
mov
fsubr
add
inc
mov
adc
aaa
sub
std
icebp
pop
aam
sub
shlb
stos
scas
imul
xor
mov
or
lods
mov
xor
or
xchg
int3
ret
ror
cmp
aaa
dec
xchg
jnp
dec
movsl
fsubrl
ret
mov
jb
inc
dec
jmp
push
faddp
ret
mov
pop
stos
pop
pop
dec
and
xor
sbbb
push
adc
dec
cli
push
dec
loope
loopne
pop
dec
xchg
inc
or
mov
jns
repz
push
mov
xchg
jmp
mov
ret
movsl
sar
add
das
xchg
pop
xor
lret
and
jno
addr16
repz
sbb
adc
pop
das
jl
add
mov
inc
notb
lcall
mov
mov
jle
aad
mov
sbbl
sub
mov
mov
sti
sub
mov
mov
mov
loopne
dec
lds
sub
pop
daa
das
adc
dec
iret
lcall
movsb
orb
loop
enter
mov
and
dec
push
add
pop
sub
mov
sahf
loopne
xor
xor
mov
insb
mov
mov
mov
jb
fists
xchg
pop
xorl
inc
andb
imul
arpl
lods
pop
adc
pop
mov
cmp
lret
out
and
mov
negl
into
shr
inc
fildl
sub
dec
loopne
or
pop
cmpsl
shld
insb
mov
sbb
or
dec
sbb
add
push
cmp
jl
into
xchg
faddp
sti
call
mov
cmp
mov
xchg
aas
dec
or
pop
and
cmp
push
push
aas
dec
mov
sub
push
push
and
pop
jl
mov
ret
mov
adc
fildll
les
xlat
fs
mov
out
push
fidivs
push
mov
nop
mov
jae
cmp
mov
pop
fldl
lret
imul
out
fcoml
outsl
pop
mov
int3
adc
out
inc
fstpl
or
addr16
mov
nop
jge
fwait
mov
pusha
add
jle
mov
push
test
ret
dec
imul
lds
outsb
mov
fst
dec
divb
push
sub
pop
and
mov
loopne
sbb
daa
imul
imul
into
mov
ds
in
and
sbb
or
mov
xor
mov
pop
dec
je
mov
call
cmp
andl
loop
stc
cltd
mov
stos
dec
fsubrl
push
xor
ss
mov
jne
jg
cld
cltd
cmpl
jae
mov
scas
bswap
push
rorl
aas
lret
and
fwait
icebp
lea
xchg
cltd
mov
aas
in
mov
in
mov
sbb
out
inc
sub
ds
jge
test
in
call
push
xor
pop
in
mov
test
cmc
lock
ffreep
stos
popf
inc
lods
mov
adcb
cmp
enter
int
fnsave
cwtl
push
aad
mov
mov
and
aas
pop
mov
movsl
mov
xlat
pop
or
aaa
jnp
cs
cwtl
stos
add
ret
cmp
xchg
shr
movsl
dec
andb
jge
in
and
or
nop
push
push
cmp
dec
cmp
mov
xchg
jg
or
adc
outsb
ds
mov
mov
push
push
jle
fdivr
mov
push
das
mov
pop
outsl
mov
xchg
push
repnz
or
fcompl
out
test
push
push
xchg
stc
fisttps
mov
dec
pop
fs
and
cld
or
mov
pushf
xchg
or
lds
xchg
inc
mov
xchg
mov
push
push
mov
daa
and
rorl
mov
rolb
mov
out
mov
mov
into
lea
xor
adc
aaa
ret
into
fistpl
call
inc
dec
je
mov
imul
and
xor
sbb
jnp
jnp
cmc
mov
rcrl
adc
push
pusha
mov
arpl
insl
mov
push
mov
imul
or
inc
mov
mov
sti
or
cmp
jo
cld
out
inc
and
or
and
ficoms
push
std
rcr
and
push
mov
and
mov
sub
sub
scas
fmul
sbb
jnp
dec
outsb
cmpsl
ret
xor
notl
jne
sti
push
std
daa
insl
outsl
inc
xchg
dec
xchg
inc
sbbb
xchg
and
imul
cmpsl
addb
ret
jb
decl
pop
js
dec
adc
push
push
sbb
cmp
and
shlb
adcl
ljmp
adc
push
inc
pop
jae
mov
push
jbe
fcmovne
push
cmp
int
movsl
dec
clc
loop
outsl
cld
xchg
imul
lea
push
dec
fbld
and
sub
loop
lods
les
xor
fldl
bsr
pop
int
add
inc
in
shlb
sub
lods
rorb
or
pop
or
addr16
sahf
xor
push
hlt
nop
ljmp
je
and
leave
ret
aaa
popl
cs
arpl
repnz
shlb
xlat
sbb
mov
iret
sub
mov
fidivl
pushf
mov
dec
jge
test
mov
fs
loopne
push
lock
xchg
cwtl
xchg
xchg
rorl
icebp
rol
push
jle
inc
xchg
inc
mov
adc
dec
idiv
lcall
jl
in
mov
fsts
test
sub
lods
inc
adc
fcoms
cmp
and
jp
mov
xchg
fstl
rcrl
mov
pop
jo
mov
xor
cmpsl
sbb
aam
fs
or
mov
outsl
scas
pop
lock
data16
mov
ja
push
add
push
and
inc
mov
dec
fsubrl
divl
mov
mov
pop
push
push
xchg
mov
cli
aam
mov
sub
push
mov
sbb
fcmovne
add
aam
outsl
jle
fs
or
sbb
xchg
inc
fisubs
rclb
es
fldenv
sti
fnstsw
jns
and
mov
stos
jmp
add
loope
push
cmp
jge
or
in
leave
pop
enter
lret
mov
dec
leave
dec
dec
in
mov
xchg
sbb
insb
adc
dec
push
pop
call
dec
mov
dec
push
out
test
xor
sbb
xchg
sbb
and
adc
test
sti
mov
ss
fsubl
xchg
or
adc
mov
push
inc
lret
xor
lea
mov
jb
jnp
ffree
jp
fs
mov
push
or
mov
mov
movsl
mov
fstl
ljmp
mov
add
jle
cmp
in
incb
adc
cli
xchg
out
xchg
lock
mov
aad
pop
idiv
int3
cmp
dec
add
sub
and
hlt
jmp
pop
adcb
js
in
or
jbe
out
dec
icebp
ret
js
sub
movsl
pop
sahf
or
enter
sub
pop
test
cmpsb
icebp
lds
pusha
add
mov
outsl
sub
sub
mov
xchg
mov
mov
jmp
xchg
leave
xchg
ret
xchg
fdivrl
popa
lock
jecxz
lods
pop
sub
xlat
jecxz
cmp
and
ret
push
xchg
pop
shr
pop
or
push
fldenv
mov
mov
mov
pushl
inc
cld
jo
imul
test
mov
add
mov
dec
adc
scas
dec
insb
rcl
cmp
dec
xor
cbtw
in
sbb
push
push
push
leave
dec
jo
cmp
pop
xchg
xchg
pop
scas
data16
lea
lods
lea
das
sub
dec
ljmp
xchg
jecxz
cmp
pop
test
mov
xchg
xchg
xlat
pop
add
xchg
stos
out
repnz
push
stc
mulb
jle
jecxz
adc
mov
and
out
inc
test
cmpsb
cmp
sbb
and
or
cmpl
xchg
jno,pt
jb
mov
in
inc
in
or
xor
push
push
add
leave
roll
add
sti
test
lea
ljmp
xorb
mov
mov
adc
outsb
fwait
imul
mov
ficoml
xchg
sbb
outsb
lcall
jns
repnz
xor
in
fsubr
sbb
inc
lahf
sub
data16
inc
jge
dec
mov
mov
dec
sub
fidivrl
out
loope
sbb
insb
sbb
mov
in
sub
mov
push
call
daa
fwait
sub
outsl
adc
cmp
mov
fsts
sbb
notb
in
addr16
test
pop
and
xor
enter
pushf
jbe
js
fnstsw
pop
neg
std
mov
mov
stos
and
rdmsr
imul
inc
fnsave
push
repnz
mov
roll
xchg
xchg
hlt
sbb
jmp
stos
push
sub
jae
xchg
insb
sub
outsb
das
ss
push
lea
loop
or
cld
hlt
cltd
cli
mov
cmp
adc
in
pop
push
or
sbb
scas
mov
lods
pop
mov
popf
push
insl
aad
xor
xchg
cmp
adc
pop
and
lahf
sub
out
mov
shll
mov
jmp
xchg
adc
pop
jl
mov
ret
push
es
sahf
imul
inc
jge
push
shrb
sbbb
xchg
repz
or
hlt
pop
cltd
es
mov
dec
call
in
add
rcr
icebp
imul
cwtl
lahf
xchg
xchg
inc
pop
cmp
ss
jnp
sbb
loopne
scas
aas
into
out
jne
icebp
std
jb
stc
mov
testl
inc
mov
cltd
dec
jge
fiaddl
mov
ret
and
cmpsl
out
scas
adc
fwait
inc
mov
in
scas
push
test
xor
pop
mov
adc
mov
shll
sbbb
popa
fcoms
push
mov
enter
loope
stc
adc
sub
push
outsb
pushf
aam
xchg
clc
stos
orl
pop
mov
adc
xchg
and
movsl
int3
lods
orl
xor
mov
mov
mov
sbb
push
adc
fstpl
dec
cltd
in
xchg
mov
dec
test
and
shlb
add
jo
adc
lock
outsb
pop
push
sub
shll
pushf
mov
mov
mov
or
jecxz
std
push
mov
stc
mov
sbb
adc
push
data16
add
fcoml
dec
sti
pop
cwtl
lods
insl
sti
lret
mov
divb
test
xchg
inc
ds
repnz
leave
mov
cmc
sub
mov
cmpsb
aam
pop
push
rol
test
clc
imul
ret
xor
push
adc
xchg
rorl
movsb
push
xor
jnp
cs
shlb
push
xor
mov
out
in
adc
mov
jnp
and
test
pop
dec
adc
js
in
cltd
mov
out
push
xchg
pop
push
and
movsl
jno
sub
mov
in
cmp
loop
ret
xchg
insb
ds
push
mov
xor
arpl
xor
push
bound
adc
mov
xor
lret
pusha
out
js
lret
cli
leave
pop
je
xchg
sbb
test
dec
xchg
xor
popa
and
movsl
in
lahf
cltd
loop
sub
aaa
ret
mov
cld
sub
sbb
jmp
mov
outsb
idivl
inc
ss
cmp
pop
shrl
pop
jbe
dec
push
in
and
cli
rcrl
in
or
xchg
aad
lds
inc
daa
cmpl
add
mov
cmp
test
leave
xchg
sti
sbb
gs
test
ret
push
je
cltd
fildl
xchg
rol
jno
fldenv
add
repz
test
pop
call
test
jmp
out
or
inc
inc
out
mov
into
adc
fwait
xorb
sti
lea
xor
xchg
popa
insb
iret
push
je
jge
cld
lret
mov
in
mov
pop
insb
sub
ds
dec
into
leave
aad
xchg
stc
xchg
fxtract
rolb
inc
xchg
gs
outsb
inc
lret
les
imul
iret
je
add
mov
stos
inc
call
inc
cltd
rorl
adc
push
mov
out
lea
pop
or
or
dec
loope
fwait
add
je
sub
ret
js
clc
pop
mov
fcmovne
stos
jecxz
mov
push
jo
xchg
icebp
sarb
xchg
outsb
imul
out
out
mov
es
mov
cmp
dec
push
ja
jae
mov
mov
mov
cmp
push
movsl
jb
sbb
jp
mov
mov
aaa
xlat
cmp
cltd
jp
dec
jl
insl
inc
lods
fidivs
lret
sub
pop
ret
clc
xor
shrb
push
mov
scas
push
push
stc
mov
add
dec
jbe
addb
ss
popf
loopne
das
mov
mov
xchg
fisttpl
dec
out
push
lods
xchg
nop
shlb
xor
gs
mov
pop
shlb
mov
jmp
clc
sbb
lret
dec
stos
cltd
movsl
dec
mov
mov
dec
call
mov
ret
test
fmull
outsb
insb
pop
xor
mov
push
xor
xrelease
or
fiaddl
push
mov
cmp
push
dec
cld
jnp
xor
les
add
mov
sub
pop
jo
sbb
jb
in
shr
in
bound
in
inc
faddl
fstl
andl
insb
stos
sbb
cmc
lret
inc
sbb
mov
push
push
roll
lcall
push
pop
adc
adc
pop
jne
sub
cmc
cld
mov
add
test
mov
jmp
add
cs
mov
cmp
in
mov
hlt
push
pushf
add
push
sbb
mov
cmp
push
push
push
inc
mov
adc
adc
test
fdivrs
jnp
push
pop
adc
lods
addr16
addr16
pop
popa
negl
xor
jo
cwtl
or
mov
int
adc
sub
fwait
popa
cwtl
in
hlt
jmp
or
stos
mov
mov
jecxz
jg
cmp
pop
push
jbe
sti
cli
cltd
mov
sbb
mov
sti
test
aaa
mov
out
lret
sbb
mov
js
mov
das
or
mov
loope
repz
push
xor
push
or
lret
orl
inc
sub
xchg
dec
int3
idivb
lods
sbb
je
xchg
es
insl
pop
mov
jmp
jecxz
add
add
ret
xlat
inc
push
pop
cmp
dec
adc
sub
push
jne
in
add
loope
sub
inc
pop
inc
push
xabort
movsl
ljmp
sub
jbe
mov
adc
aad
and
fnstsw
push
pop
sti
dec
mov
out
mov
fwait
ror
fcoml
dec
inc
fbstp
push
add
mov
movsl
rolb
aam
sub
fisubrl
or
mov
adc
jne
sarb
repnz
push
jg
jp
xacquire
or
dec
inc
imul
inc
sub
cmp
mov
adc
sub
loope
icebp
sub
fbld
ss
insl
xchg
sti
dec
xchg
mov
aam
in
jge
sub
adc
mov
rclb
outsb
mov
mov
ret
add
mov
cld
xchg
insb
cmp
and
fistl
iret
inc
clc
les
adc
cmp
hlt
jmp
aas
iret
shrb
adc
fidivrl
jne
push
push
test
into
add
adc
lcall
out
sti
ret
movsl
repnz
cmp
mov
mov
mov
jg
sub
sub
ret
mov
push
or
cmp
cmp
cmpsb
mov
inc
mov
cmpsl
out
jo
and
scas
rcr
pop
inc
fdivp
loop
rcl
fwait
and
leave
mov
incl
xchg
push
push
pop
data16
add
cs
push
clc
jle
cli
ret
iret
dec
and
mov
loopne
imul
pop
dec
cmc
mov
data16
add
dec
or
dec
pop
sub
mov
inc
push
add
or
insl
adc
dec
pop
lock
xchg
xor
xchg
or
cwtl
ss
jmp
ja
lock
lahf
xor
pop
fcoms
pop
in
jb
dec
jb
out
les
test
stc
js
mov
popf
fimull
shlb
cmp
push
mov
push
push
cmp
xor
js
mov
mov
xor
push
rclb
xor
xor
jns
dec
out
loope
mov
clc
push
jl
xchg
dec
pop
mov
ret
test
dec
pop
in
test
xchg
dec
stos
lods
mov
jg
aam
out
push
push
fcomip
pushf
scas
lods
enter
and
xchg
imul
pop
cld
arpl
addr16
xlat
cwtl
aad
lds
mov
sub
pop
lock
xchg
push
fidivrs
enter
sbb
xchg
out
push
mov
xchg
cmp
loope
aad
and
lcall
cmpb
icebp
and
lods
imul
hlt
mov
mov
in
ret
or
pop
cwtl
lahf
sub
addl
pop
push
jno
push
test
movsb
add
jbe
mov
nop
adc
inc
mov
test
icebp
adc
mov
inc
pop
rol
lods
mov
xchg
into
pop
popa
lock
sub
add
sbb
js
add
cmpsl
data16
push
pusha
pop
sub
stos
xlat
fstpl
cli
pop
xor
cmp
mov
in
dec
mov
es
cmp
les
mov
add
pop
or
inc
addr16
test
ret
fisubrs
mov
lret
lcall
push
outsl
std
pop
bound
mov
gs
test
or
push
es
loop
movsb
out
lret
push
outsl
mov
lock
jp
lahf
cmp
scas
int3
and
lods
insl
clc
jle
popf
stos
test
je
lea
movsl
adc
scas
out
xchg
inc
mov
xchg
scas
push
std
push
rclb
aas
sbbb
mov
mov
out
rolb
lahf
out
sbb
frstor
mov
xor
mov
push
jnp
jl
in
aas
mov
mov
push
mov
or
mov
sbb
jmp
mov
cmp
sqrtps
push
cltd
popa
jg
popf
loop
xchg
lahf
iret
or
out
stc
xchg
pop
loope
cmp
adc
add
push
xor
push
sarl
shrl
xchg
adc
cmp
loopne
and
sub
data16
lcall
xchg
lret
fsubrl
adc
popa
mov
jnp
lds
adc
push
and
push
xchg
mov
test
lcall
push
sbb
incl
dec
mov
xchg
int
inc
xor
mov
sarl
imul
xor
out
lds
loop
lods
sarl
lods
push
pop
push
lret
mov
sub
js
xchg
lods
inc
and
push
xlat
or
in
dec
or
lods
fidivl
dec
enter
push
test
cmpsb
into
inc
or
add
sbb
cmpsl
jnp
mov
xchg
mov
add
idivb
jne
ds
out
negb
cmpsl
xlat
fldenv
stc
nop
jecxz
cli
sbbb
loop
sahf
and
mov
adc
stc
sub
cmpsb
into
leave
mov
or
xchg
test
rcl
aas
mov
rolb
push
jmp
adc
sub
cmp
aaa
in
lret
mov
mov
lret
xor
add
pop
push
add
add
adc
add
lea
sbb
xor
mov
lds
sub
stos
jnp
inc
imul
xchg
sub
aaa
ds
popf
and
sbb
mov
or
cmp
push
adc
inc
pusha
mov
cmc
or
cwtl
lret
ffreep
jno
inc
add
out
daa
fcomip
mov
sti
sub
jbe
cmp
in
repnz
and
jb
xor
cmp
stos
aas
cmp
add
in
fsubrs
std
in
test
jge
imul
aas
cld
outsb
jecxz
dec
mov
xor
cmpsb
mov
sub
stos
inc
popa
std
mov
nop
push
dec
mov
ret
adc
jb
and
inc
cli
fistl
mov
pushf
sub
push
aam
out
push
mov
hlt
sbb
push
dec
shlb
fstps
pop
addps
js
int
lock
shlb
pop
mov
aam
add
out
dec
mov
pop
movsb
push
dec
pop
push
jg
xchg
adc
test
jl
jle
push
and
mov
call
sbb
sbb
movsb
into
cmp
mov
mov
das
in
inc
adc
pmaxub
repnz
mov
addr16
cld
mov
inc
in
mov
fmull
mov
lods
xchg
daa
mov
jmp
jg
push
adc
ja
and
cwtl
mov
mov
pushf
shrl
jge
dec
dec
jp
adc
mov
or
mov
jle
sbb
js
push
out
add
sbb
xorb
ds
adc
jl
cmc
xlat
jg
mov
push
pop
mov
add
xchg
test
dec
jno
cli
imul
pusha
jge
push
xchg
push
mov
mov
fistpll
adc
outsb
mov
ljmp
insl
add
mov
loope
mov
sbb
xchg
jae
inc
test
inc
popf
fsub
lahf
mov
pushf
cmpl
or
push
test
jmp
pop
mov
or
into
or
adc
push
mov
imul
je
mov
je
cwtl
lahf
pop
cmp
orb
sub
imulb
repz
and
in
fidivs
and
fadd
sub
fists
hlt
pushf
rorl
in
and
or
orl
fstl
sub
negb
inc
clc
mov
mov
xchg
sub
iret
sbb
adc
adcb
mov
repnz
push
pop
popa
dec
inc
pop
jl
xchg
add
push
xor
sbb
insb
xchg
mov
aas
pop
std
and
adc
or
nop
lahf
es
add
cmp
popa
mov
mov
aad
jl
daa
cmp
push
fistl
inc
inc
adc
aas
icebp
or
aaa
cmp
add
jl
out
pop
pushf
pop
push
dec
push
push
jmp
jg
imul
and
cltd
roll
ljmp
pushf
cli
push
popa
cmp
cmp
fidivrs
int
push
cmp
std
mov
ja
shrb
jnp
and
rcrb
xor
repz
push
out
cld
xor
push
int3
imul
pop
inc
insb
sbb
std
pop
jmp
fmull
roll
daa
rcrb
fnop
or
call
scas
cwtl
pop
incl
sbb
stos
fwait
xor
adc
push
mov
fsubr
inc
xor
xor
popf
test
mov
cmp
shlb
push
adc
mov
xor
or
loopne
in
dec
and
scas
and
loope
nop
int
push
loop
sbb
cmpsb
xchg
callw
mov
test
imul
jle
push
cmc
testb
pop
js
lock
push
ficomps
push
ja
insl
rorb
cmp
es
push
mov
and
or
cltd
push
mov
in
push
mov
jae
jp
sbb
dec
fistps
rclb
out
mov
lcall
or
or
inc
sub
mov
aaa
test
imul
inc
adc
aas
jne
mov
es
pop
xor
ljmp
jne
std
fldl
lods
xor
js
add
adc
jle
xlat
jle
out
pop
sbb
mov
inc
mov
pushl
push
hlt
mov
jl
out
scas
mov
jg
out
xor
xor
cli
jle
push
movsl
pushf
ret
mov
subl
add
sub
cli
lret
fcoml
sar
lods
js
daa
pop
mov
xchg
xchg
push
fs
rcr
pop
adc
xor
mov
mov
stc
and
dec
or
aaa
mov
mov
sub
pop
repnz
repnz
test
imul
add
cmp
popf
mov
outsl
and
cwtl
cmp
fcompl
xchg
es
add
mov
pushf
push
lret
sub
dec
pop
push
mov
pop
pop
adc
or
cmp
out
cmp
sbb
es
out
jle,pt
in
ds
or
push
cmp
add
mov
inc
les
push
into
xchg
pusha
es
je
sarb
or
xor
push
sti
scas
in
in
or
jbe
ret
scas
dec
cltd
pop
fwait
sbb
xchg
push
cld
adc
xor
mov
cmp
or
in
imul
push
adc
mov
cmp
and
daa
les
cld
dec
loop
mov
dec
inc
xchg
roll
mov
sub
mov
gs
mov
lret
lds
push
das
jbe
lahf
loopne
cmpsl
pop
scas
mov
js
popf
mov
jp
jmp
stos
xor
xor
inc
mov
cmp
mov
sbbl
es
stos
in
movsl
aas
lret
fdivp
mov
ss
test
sub
cmpsb
xchg
mov
test
xchg
mov
addb
in
repz
cmp
xchg
test
push
ja
sub
sbb
sub
lret
sbb
xlat
loopne
mov
jge
stos
or
sub
lahf
arpl
push
mov
pop
in
cmp
jmp
lock
fnstenv
pop
jl
xor
movsbl
mov
lret
and
cmp
cmpsb
cmpsl
add
fdivrl
rcr
outsl
out
dec
lcall
mov
add
mov
or
jge
sarl
sbb
out
inc
lcall
fidivrs
popa
or
push
xlat
iret
cmovb
aad
test
inc
test
scas
mov
sbb
or
sub
sbb
sahf
push
nop
loopne
fsubrs
mov
jns
xor
dec
and
jle
ret
cmp
cld
js
pop
les
test
fists
inc
xor
mov
insb
mov
pop
loop
inc
cld
xchg
dec
xchg
ds
push
sti
ds
inc
orl
sahf
scas
jmp
leave
or
add
test
sub
push
mov
pusha
push
lret
cmp
push
ds
jge
into
cmc
sub
mov
pushf
adc
scas
mov
repz
pop
call
lret
in
stos
loopne
mov
xchg
xor
stos
cmpsl
nop
jae
cli
pop
dec
jg
into
xor
sbb
dec
dec
fwait
out
shrl
out
push
aaa
xchg
iret
inc
fisubrs
fsubl
xor
jp
imul
loope
ljmp
int3
sbb
cmp
cmp
das
xlat
xchg
sub
adc
mov
inc
cmp
xchg
and
neg
dec
cmp
xor
aad
jp
sbb
dec
mov
xlat
adc
loopne
jb
add
out
cmp
fnstsw
inc
popf
add
push
loopne
sbb
and
out
ljmp
dec
mov
pusha
push
add
sbb
outsb
sti
cmc
cltd
push
cmp
jle
mov
dec
sahf
lock
mov
cmp
imul
loopne
jge
cld
sbb
in
push
inc
movsl
jae
loopne
mov
push
adcb
jl
jg
cmp
lods
xor
mov
mov
adc
xchg
scas
adc
fchs
inc
inc
pop
pop
lcall
je
popa
pop
pop
call
shrl
and
push
inc
daa
pushf
add
adc
dec
mov
sub
call
into
aas
bound
pop
xlat
jmp
dec
scas
sub
add
inc
jnp
mov
jne
push
scas
das
stos
imull
mov
cmc
or
sti
data16
lock
add
stc
imul
jb
rcl
aam
insl
sbb
push
pop
lods
jno
fwait
sbbb
cmp
jge
out
pop
sahf
fwait
out
pop
cwtl
int
xchg
push
mov
cmc
popf
imul
jo
mov
stos
in
tzmsk
fs
xchg
add
repz
cli
loop
arpl
add
mov
adc
inc
aas
mov
out
vfrczpd
in
mov
outsb
ret
adc
fcoms
cmp
and
mov
xchg
jne
arpl
cmp
mov
or
stos
test
dec
sahf
and
loop
lahf
pushf
mov
int3
icebp
popa
in
sbb
and
loopne
or
xor
out
mov
dec
int
int3
mov
ss
pop
sahf
es
nop
mov
enter
cmp
orb
lea
or
iret
jp
mov
lds
dec
adc
push
xchg
inc
sbb
pop
mov
mov
or
mov
push
in
lret
or
psubsb
jb
or
sub
xchg
pop
inc
movsl
pop
cmp
test
sub
jmp
inc
pop
lods
xor
pop
and
inc
add
cld
push
and
or
push
adc
mov
fidivs
add
adc
xor
adc
or
push
xchg
jno
fmul
mov
scas
das
cs
push
or
shrb
addr16
and
int3
mov
or
jge
dec
adc
lock
adc
jg
xchg
pop
mov
xchg
push
loop,pn
jle
mov
sub
pop
sub
fisttpll
or
lahf
pop
sbb
sbb
vcvtdq2pd
sbbl
inc
idivl
push
mov
cmpsl
dec
push
mov
or
js
leave
fsubl
popf
xor
popa
push
or
xchg
adc
cmc
sbb
xor
test
jne
mov
jge
ds
movsb
xor
sub
xchg
cmp
sub
inc
in
in
inc
rcrb
aaa
pop
ja
aas
stos
lds
add
xor
test
push
loop
dec
jne
js
pop
fwait
push
jp
out
fstpl
scas
jmp
add
xor
dec
ljmp
xchg
pop
scas
paddw
movsl
fs
or
xchg
xchg
dec
gs
pop
shrb
mov
lods
daa
mov
int3
dec
lahf
mov
cmpsb
repnz
icebp
cs
mov
jg
shl
jge
stos
mov
std
pop
inc
test
in
xor
jmp
push
xor
lret
cmp
lods
test
mov
inc
cmp
dec
xchg
mov
pop
or
cltd
shll
pop
xchg
rcl
push
popa
addr16
test
inc
xchg
inc
xchg
cmp
mov
and
push
xor
sub
fnstsw
xor
inc
mov
cmp
scas
cwtl
mov
lret
xorb
jo
icebp
out
mov
pusha
adc
rcrl
scas
sub
cmc
adc
push
ficoml
cmpsl
mov
repz
xor
daa
jo
addl
jl
imul
adc
mov
mov
push
and
cmpsl
push
mov
popa
cli
xchg
mov
xor
movsb
ret
xorl
dec
imul
or
xor
popf
add
inc
xchg
cmp
ret
inc
mov
outsl
in
xchg
fwait
cmc
sbb
bound
sbb
pop
dec
cs
fbld
xchg
cwtl
fdivs
xchg
loopne
sbb
xor
push
lds
lret
int3
push
lods
sbb
ret
push
adc
ret
sbb
cmpsb
scas
fnstenv
push
jp
add
lret
inc
mov
test
and
mov
fstpl
aad
lcall
cmp
packsswb
bound
sbb
lahf
jb
xor
hlt
int3
fists
push
incb
lds
imul
or
insb
movsl
mov
loope
or
mov
mov
cmp
lds
sbb
or
lods
push
jno
inc
nop
sti
mov
dec
shll
mov
rorl
sbbb
xchg
into
test
in
xchg
mov
pusha
xchg
mov
xchg
imull
mov
mov
jno
shlb
mov
push
push
xlat
pop
mov
cwtl
xchg
pushf
repnz
loopne
into
adc
xorb
push
fldcw
push
popa
xchg
jns
pop
out
sbb
popa
xchg
bound
adc
movsl
js
adc
jge
data16
or
or
fisubl
mov
jp
push
xor
shlb
fwait
mov
dec
dec
inc
mov
mov
fldenv
ja
fs
add
rcl
or
inc
sub
daa
fstl
ret
push
leave
xchg
idivb
mov
jae
dec
mov
mov
aas
es
mov
pop
jnp
inc
bound
mov
inc
lock
push
jno
arpl
jo
dec
jae
mov
aad
xchg
fbld
mov
outsl
mov
and
dec
mov
gs
push
imul
aad
xlat
les
lret
aad
sbb
inc
outsl
int3
mov
cmp
sub
call
adc
int
jno
cltd
xchg
xchg
movsb
push
inc
idivl
incl
xor
mov
mov
jp
jae
ja
mov
cmp
mov
cwtl
out
bound
pop
adc
lods
lods
into
jmp
sub
pop
scas
xchg
xor
lds
cmp
enter
or
shlb
xor
addr16
iret
pop
mov
inc
ret
bound
clc
xor
mov
in
push
xchg
js
mov
cmpsb
ret
enter
std
pusha
xchg
mov
and
into
sbb
pop
out
add
mov
inc
lock
sbb
pushw
and
dec
cld
clc
fnsave
xchg
cs
mov
loopne
push
sub
mov
xlat
mov
mov
mov
sub
stos
lock
sahf
mov
lods
cmp
or
pop
or
jnp
mov
lock
hlt
aad
out
lretw
cltd
insb
pop
js
and
es
popf
xlat
stos
mov
xchg
hlt
bound
fisubl
push
fwait
jp
leave
jle
jmp
xorl
inc
lcall
outsl
sub
pop
and
cmc
mov
xchg
mov
jmp
jp
jl
adc
xchg
sti
mov
inc
leave
adc
cmpsb
outsl
rcll
mov
push
xor
push
jnp
add
push
mov
das
mov
sbb
test
or
pop
pop
cli
or
cmc
dec
mov
pushf
sbb
loop
and
in
sub
das
xor
out
mov
jnp
pop
or
into
and
inc
scas
mov
xor
dec
push
jle
les
xor
fidivl
pop
xchg
lea
mov
icebp
cmp
dec
sbb
dec
fldt
inc
push
vrcpps
loopne
mov
pushf
dec
icebp
push
pushf
js
cmc
mov
mov
sub
push
jne
dec
sbb
mov
daa
fdiv
repnz
jl
add
cmp
mov
adc
cli
ds
lcall
outsl
push
scas
fidivrl
cmp
or
jle
jp
or
cmpsb
in
push
jnp,pt
pop
xor
fstpl
xor
test
mov
mov
dec
loopne
fidivrl
sub
test
ret
stc
mov
push
lahf
adc
pop
das
imul
xchg
ds
sbb
jnp
add
or
rcll
push
lret
ljmp
mov
jo
aam
cmp
push
pushf
add
je
ficoml
stos
cltd
cs
addr16
ret
imul
add
sub
mov
imul
pop
pusha
lret
shl
mov
arpl
test
fmull
out
or
pop
ss
pusha
cmp
clc
jb
das
pop
sbb
int
jg
lods
fidivrl
push
xchg
lret
adc
sbb
xlat
dec
add
sbbl
test
xchg
popf
mov
shlb
jo
neg
inc
inc
popa
orb
add
or
aas
cmp
pusha
in
jae
add
mov
shrb
imul
icebp
mov
mov
insb
and
mov
or
sbb
push
shrb
pop
or
notb
mov
je
mov
out
pusha
cmp
pusha
mov
mov
call
lds
shr
and
sbb
out
and
add
ss
imul
pop
fbstp
jne
lahf
outsl
test
or
mov
sub
ds
sub
subb
inc
jne
mov
dec
xchg
pop
mov
sbb
lods
lock
pop
mov
js
lret
repnz
popf
out
pop
loope
orb
insb
lret
cmpsl
call
ds
mov
clc
fsin
cmp
nop
sub
fdiv
xchg
lods
out
loop
or
add
mov
and
xor
loop
lock
sbb
movsl
mov
aas
bound
xor
adc
sbb
or
jae
pop
outsb
mov
mov
mov
add
inc
mov
cmp
mov
sahf
nop
xchg
mov
movsl
jns
sub
pop
in
jns
jbe
hlt
sbb
push
int
js
adc
mov
mov
sub
cltd
sbb
rcr
add
push
mov
shlb
inc
or
xchg
int3
inc
pushf
xchg
jle
xchg
xor
addr16
dec
pop
adc
or
xchg
add
divl
push
push
cmpsl
pop
popl
mov
subb
xorb
jae
shrb
mov
dec
lods
out
stos
dec
mov
imul
iret
jns
xor
rcrl
scas
scas
xor
sbb
test
fbld
int3
add
jecxz
das
push
jle
ficomps
inc
gs
inc
dec
sbb
xorl
inc
inc
adc
mov
dec
mov
push
pop
fstpt
hlt
pop
jl
inc
dec
jb
mov
fisubl
gs
xchg
mov
mov
sub
std
bound
shll
push
test
sbb
push
mov
mov
adc
sub
int3
fwait
cmc
fisttpl
mov
push
xchg
out
and
imul
in
push
inc
rcl
add
out
dec
ret
dec
leave
push
mov
push
imull
adc
and
dec
jae
daa
inc
call
in
shll
lds
lahf
adc
mov
mov
cmpsl
sub
cmp
pop
ja
push
enter
jle
addb
jge
pop
fdivrs
lods
mov
int
push
repz
testl
inc
cld
mov
push
fstpt
and
popf
pop
jno
xor
jnp
pop
pop
sahf
insb
fsubrl
cld
cmp
pop
rcll
hlt
hlt
mov
push
js
cli
mov
fwait
mov
push
jbe
ds
rorb
push
cmp
loopne
ja
sbb
cs
pop
mov
js
div
rcrb
fs
mov
push
shlb
std
out
pop
sub
mov
lret
dec
sub
sbb
ret
push
mov
imul
jge
hlt
cli
push
mov
xchg
lods
sbb
pop
js
mov
mov
in
fwait
stos
in
fimuls
xchg
movsb
inc
cmc
xor
pop
scas
push
mov
je
inc
cmp
test
xchg
jb
dec
push
sbbl
je
stos
xchg
mov
inc
jae
outsb
sahf
sarb
in
insb
shlb
in
lods
cltd
cli
popa
jno
sbb
lock
mov
mov
ret
sbb
imul
xchg
out
push
xchg
and
dec
rorl
dec
sub
out
mul
sbb
cmp
pop
dec
pushf
xor
std
daa
mov
js
jno
pop
mov
roll
dec
cs
push
and
out
jne
mov
jae
cmp
jp
pop
jns
inc
adc
push
mov
aam
xchg
pop
ret
ficoml
jbe
pop
loopne
cmc
sbb
lock
adc
mov
sub
add
inc
aaa
test
rclb
lock
xor
cmp
popf
outsb
push
lahf
test
cli
add
stos
sar
dec
ret
cmp
fmull
rclb
jne
outsl
les
es
adcl
sub
into
nop
lods
out
clc
cmp
xchg
push
stos
sti
stos
mov
aad
cmpsb
pop
sub
xor
shll
enter
mov
mov
pop
stc
scas
inc
pop
and
adc
xchg
sbb
sub
out
test
les
insb
call
cltd
ja
enter
and
mov
xchg
mov
lret
lods
les
pop
pop
inc
fdivp
xchg
sbb
outsl
mov
scas
push
sbb
xor
lock
and
ret
jmp
ljmp
out
adc
dec
xorb
jno
aaa
ficoml
push
lods
repz
ljmp
or
jno
mov
and
xlat
sub
stos
sbbl
mov
movsb
dec
out
or
repnz
js
cli
and
out
jns
in
and
nop
pop
and
or
inc
jb
xchg
mov
imul
add
cmp
or
loopne
sbb
fists
pusha
in
ljmp
outsl
fs
js
push
lods
xchg
incl
push
in
push
ret
push
ja
cli
adc
fildl
push
ja
inc
jne
cmp
fucomp
ss
outsb
adc
and
ficompl
fs
pop
mov
imul
inc
lods
aad
pop
cli
adc
jbe
xchg
and
xor
inc
xchg
push
out
imul
xchg
pop
add
lds
dec
int
test
icebp
sub
dec
dec
fnstsw
aam
inc
push
hlt
insl
sbb
inc
ss
fdiv
loope,pt
ret
or
lods
aaa
cld
mov
daa
push
push
addb
adcl
mov
xor
rcll
xor
sbb
std
mov
jp
push
cs
and
pop
push
js
out
push
and
bound
insb
xor
mov
xlat
jp
xchg
inc
pop
fldt
notl
call
movsl
jne
push
mov
movsb
mov
int3
push
mov
add
fcompl
imul
push
je
add
xor
mov
jns
inc
fsubrs
ja
push
ljmp
mov
cmpsl
xchg
push
ret
pop
jp
cmc
lret
xor
mov
fs
iret
das
xor
jmp
mov
cmp
cmp
pop
jne
outsl
rorb
clc
scas
or
daa
pop
jnp
pop
aaa
dec
test
sub
push
push
test
ret
jecxz
stc
lds
xchg
aad
and
and
int
inc
sub
ljmp
pusha
push
push
mov
rcrb
cmp
sub
das
cmp
into
ror
fidivs
jl
push
sub
dec
cmovp
addr16
pop
daa
push
xchg
jl
adc
mov
popf
push
mov
and
and
and
and
jnp
sbb
shrl
push
xchg
fdiv
mov
pop
insl
scas
imul
js
je
mov
xor
sub
sbb
sub
sub
stc
sbb
icebp
test
stc
bound
aad
push
loopne
adc
xor
nop
push
test
add
add
xchg
loopne
xorb
pop
out
loopne
mov
add
mov
cli
sti
adc
sbb
js
in
or
add
add
in
icebp
hlt
pop
jbe
sahf
mov
fbstp
mov
adc
jmp
fcomip
sub
inc
xor
mov
loopne
jae
mov
mov
mov
rcrl
and
push
jge
rolb
stos
mov
mov
push
sub
in
mov
add
out
lods
aas
add
sbb
xor
cmpsb
or
pop
mov
dec
es
insb
sbb
lods
shl
fsubrs
aas
mov
fsubs
daa
sub
fwait
sub
jno
fnstenv
jae
mov
push
mov
in
mov
xor
lcall
xor
fnsave
call
icebp
out
aas
sar
jno
shlb
cli
flds
addr16
xor
lret
das
add
xor
imul
add
pop
or
iret
dec
and
jne
cwtl
repz
jecxz
mov
in
jg
and
xchg
ljmp
rcll
xor
mov
mov
mov
xchg
mov
or
mov
insl
xor
pop
jb
ret
outsl
pop
enter
lahf
leave
jl
xchg
fildl
and
xchg
adc
insb
sbb
pop
mov
je
shl
mull
cltd
xchg
test
sub
mov
out
popl
ljmp
or
ret
cmp
loope
fs
pop
pop
mov
jae
ret
push
imul
fdivrl
cmp
and
pop
leave
sbb
movsb
mov
mov
push
and
aad
hlt
adc
js
mov
cmp
xchg
push
dec
xor
sbb
sahf
stos
xchg
pop
fldcw
imul
outsb
adc
push
cltd
shlb
and
jne
xor
int
imul
ficompl
aad
lea
push
daa
push
xor
jbe
je
cmpsl
outsl
dec
and
sahf
iret
dec
mov
fnsave
sarl
lds
lock
dec
arpl
popf
in
jmp
insb
fcompl
fsubl
cmc
jg
xchg
addr16
test
insl
mov
clc
inc
push
mov
sbb
or
ss
sbb
mov
jl
jp
sub
fdivs
cmp
outsl
mov
fwait
adc
inc
pop
dec
xchg
or
mov
jo
xchg
pop
inc
mov
clc
mov
cmc
add
xchg
ret
insb
xchg
adc
and
push
push
inc
adc
fisubs
jae
mov
adc
lcall
or
push
cmc
cmp
add
jl
sbb
popa
xchg
call
dec
inc
in
clc
lock
dec
inc
mov
cmpsl
xor
test
mov
mov
mov
and
xor
inc
repz
push
inc
push
js
jns
nop
cmp
xchg
xor
arpl
shrl
mov
sub
lahf
sbbb
mov
mov
test
pop
mov
sti
xor
or
out
decb
mov
out
popf
xor
push
in
mov
idiv
test
mov
movsb
pop
rorb
sbb
jne
lods
mov
cmp
xor
push
and
xor
sub
sub
aaa
out
outsl
pop
loope
mov
push
dec
cmpsl
inc
lret
sbb
iret
mov
mov
lahf
cld
arpl
fidivrl
mov
cmc
out
cld
in
inc
loop
rorl
andl
mov
xchg
push
sahf
das
outsb
pop
stos
in
xchg
aaa
ret
std
add
sub
add
mov
cmc
mov
mov
fs
aaa
inc
inc
jl
jmp
jl
dec
jl
cmp
pusha
add
ret
cmp
jp
push
cmpb
nop
test
mov
lds
lret
inc
pusha
push
cmpb
movsb
stos
cmp
mov
and
mov
push
mov
int3
mov
int
aad
adc
sti
inc
jnp
lret
fistps
add
fstpl
cmp
or
xchg
push
lahf
mov
je
dec
cmp
enter
mov
sub
out
rorl
es
dec
in
push
jmp
pop
sti
push
imul
pop
sbb
mov
sub
mov
sbb
rcll
fstp
mov
lret
or
rclb
fwait
push
testb
out
mov
out
xlat
ljmp
dec
jae
fiaddl
push
and
and
xchg
loop
ret
cli
inc
out
xor
shrl
daa
nop
sub
add
jecxz
std
icebp
jle
adc
inc
clc
into
fistpl
pop
cmp
icebp
ds
icebp
fidivl
leave
cs
sbb
mov
mov
xor
pop
cmp
mov
jnp
dec
jp
mov
dec
pop
call
push
mull
mov
dec
mov
call
push
xchg
mov
cmc
or
xchg
adc
mov
mov
dec
lahf
js
pop
int
aaa
sub
fcmovnbe
adc
sub
cmovae
fidivrs
cmc
cmp
dec
xor
fldlg2
fs
sbb
dec
or
inc
mov
jns
mov
stos
jg
incl
je,pt
xlat
xchg
or
dec
lcall
mov
sti
mov
dec
stc
mov
and
jmp
inc
push
lcall
mov
push
imul
mov
mov
xor
push
xor
pop
adc
jns
pop
jge
inc
aaa
and
dec
adc
fs
aas
mov
dec
mov
outsb
xchg
jae
int
mov
mov
mov
push
ljmp
rorb
push
dec
movaps
stos
mov
loopne
fcmovbe
xchg
or
test
jl
loope
xchg
sbb
sub
jl
sub
inc
pop
dec
jnp
adcl
insl
or
mov
adc
aad
sbb
lret
loope
cmp
lahf
test
xlat
sub
mov
cmp
xchg
inc
adc
imul
daa
shlb
out
sti
data16
adc
and
lret
cld
mov
fbstp
repnz
jmp
pushf
mov
push
push
loope
inc
add
cld
xchg
test
sub
push
sbb
jp
xor
xor
lock
imul
dec
cwtl
in
mov
mov
fidivrs
add
push
push
or
cmp
in
fdivp
vxorpd
ret
std
mov
cmpsl
hlt
lock
sbb
test
push
mov
fsubl
jecxz
or
das
imul
pop
rcll
lea
xor
aad
inc
adc
jg
mov
xchg
mov
jns
out
mov
adc
pusha
mov
mov
push
lea
imul
fs
push
xlat
lcall
xchg
add
sub
add
movsl
mov
inc
cltd
or
add
mov
mov
xchg
scas
addr16
mov
jae
jmp
sub
fwait
sarb
inc
pushf
sbb
shll
push
bound
cltd
int
aaa
or
push
push
mul
icebp
dec
push
sub
and
add
adc
cwtl
mov
add
pop
gs
cltd
imul
add
adc
das
stos
ss
jle
push
out
out
xchg
push
xor
fsubr
lea
jno
inc
imul
es
std
fs
outsb
adc
icebp
xchg
fcomi
lret
aam
jo
adc
push
ds
outsb
sbb
xchg
roll
movsl
pop
sti
lret
stos
cmp
and
push
inc
pop
outsl
adc
push
mov
cli
inc
mov
push
xor
cmc
push
cli
cmp
mov
jbe
cmc
fmuls
inc
sub
ret
aaa
mov
cmp
mov
rolb
in
decb
cmpl
xor
inc
dec
test
cmp
xor
adc
ljmp
adc
push
lods
push
mov
lahf
ss
jle
rorb
out
fsubrl
or
arpl
add
pushl
call
and
mov
aad
popf
xchg
mov
jnp
push
and
push
repnz
push
inc
outsb
in
push
shlb
mov
adc
mov
lret
push
daa
mov
and
pop
in
sbb
jns
lret
jl
loope
mov
mov
mov
inc
out
mov
in
dec
std
notb
sub
jne
popa
daa
sbb
mov
shlb
cmp
inc
daa
stos
mov
pop
fsubrl
arpl
es
scas
lahf
out
aad
cld
sub
adc
dec
ret
call
jmp
xchg
push
mov
out
cli
scas
test
mov
ret
ret
mov
inc
repz
into
je
push
sub
int3
movsl
mov
or
arpl
or
movsb
gs
jle
pop
shl
sbb
xlat
les
sti
inc
mov
nop
mov
and
mov
cmp
ds
repz
add
int3
out
mov
gs
mov
xor
jnp
jns
inc
jmp
mov
mov
xor
xchg
pop
jl
cmc
pusha
and
or
shrl
cmp
pop
lret
cmc
or
inc
pop
pop
jl
ret
push
jecxz
insb
popa
push
or
lcall
xchg
lcall
int
insl
aam
push
call
pushf
mov
or
xchg
xchg
shll
pop
xchg
arpl
inc
lods
das
repnz
mov
inc
fisubl
cmp
or
in
xchg
pop
mov
test
inc
sbb
ss
clc
mov
adc
jp
xchg
push
sahf
xlat
mov
das
dec
xchg
cwtl
insb
test
mov
dec
repnz
push
out
xchg
ret
pop
ret
mov
outsl
xchg
pop
rcll
imul
outsl
ss
inc
add
jmp
jmp
in
shll
pushf
cmc
ds
fucomp
jecxz
lret
xchg
in
out
sarb
mov
shlb
dec
mov
xor
xchg
fucomp
inc
adc
repz
or
mov
xor
pop
jl
cmp
jb
pop
push
mov
dec
rcr
xor
push
int3
cmp
imul
xlat
in
dec
mov
inc
mov
mov
loope
mov
cmp
xor
sub
dec
adc
sbb
jo
xlat
loopne
cmp
mov
jge
pushf
les
push
fcmovb
lcall
mov
push
mov
adc
push
out
into
sar
cmpsl
mov
pop
in
jl
mov
lods
lahf
xor
and
ljmp
cmp
push
and
dec
loopne
push
pushl
in
scas
iret
psubq
pop
scas
outsl
mov
push
es
mov
cmp
fldt
jge
or
sub
loope
adc
push
dec
push
pop
aad
lret
push
lock
dec
lods
in
dec
fimuls
dec
sbb
sbb
adc
cmpsl
dec
fimuls
in
xor
pop
or
movsl
or
shl
jno
repnz
dec
push
fldl
xor
mov
stc
jg
or
test
aas
inc
mov
add
cmpb
mov
mov
lahf
jno
xor
fldt
fistps
dec
jno
dec
add
adc
xorl
subl
xor
adc
fdivrl
mov
rcl
lods
mov
sbb
gs
mov
lret
pop
scas
hlt
xchg
movsb
data16
into
cmc
decb
inc
and
movsb
add
inc
dec
ljmp
cli
dec
mov
mov
jnp
and
frstor
dec
dec
and
mov
es
fwait
movsl
jns
push
arpl
imul
pusha
inc
sub
xor
arpl
inc
cwtl
fs
mov
xor
jg
lret
xor
aam
es
movsb
std
sub
push
adc
das
pop
adc
mov
orb
inc
andb
roll
jg
and
mov
vpcmpeqw
leave
adc
ss
inc
je
xor
aad
rcr
sub
xchg
push
imull
xchg
push
in
jae
xchg
add
push
loopne
and
testl
outsl
lret
and
or
inc
or
mov
dec
and
sbbb
dec
out
and
sub
shr
ret
popf
dec
push
inc
or
rcr
mov
jecxz
aas
xor
push
cmp
pushf
rorb
lock
xchg
lcall
xorl
pop
pushf
jns
cmp
call
shrl
movsb
sbb
push
out
xchg
loopne
dec
jmp
std
daa
test
stos
imul
sub
fnstsw
loopne
mov
pop
mov
pop
inc
and
mov
das
ljmp
int3
jg
leave
or
add
sbb
mov
lds
fdivl
cwtl
xor
inc
mov
sub
or
pop
mov
adc
pop
movb
jns
leave
jmp
mov
xorb
sahf
stos
xchg
and
and
mov
pop
in
push
jbe
xchg
addr16
adc
cmp
sbb
test
fisubrl
fcmovbe
gs
cmp
sub
xchg
fnstsw
or
xor
les
fsts
push
ljmp
adc
imull
mov
sub
push
jge
into
aas
test
cmp
sbb
fs
pop
shr
push
rclb
mov
mov
jo
test
lds
add
xchg
aaa
into
and
xchg
push
test
cli
cmp
mov
jbe
mov
adc
mov
dec
lea
mov
mov
mov
mov
cmc
xchg
cld
cmp
enter
xchg
inc
pop
xchg
add
add
push
scas
pop
aad
adc
inc
movsb
xchg
leave
imul
sub
push
xor
lret
mov
repnz
cmp
xor
sahf
jge
in
dec
xlat
dec
adc
loope
sahf
mov
mov
lahf
dec
dec
inc
inc
les
insl
lock
xchg
movsb
add
bound
pop
pop
jecxz
jp
pop
xchg
or
mull
and
push
fidivl
pop
push
enter
mov
fwait
xor
outsb
ret
adc
sbb
or
xchg
pop
clc
cmp
xchg
hlt
cmp
out
pop
int3
xchg
mov
dec
mov
clc
gs
shl
adc
shlb
mov
xchg
arpl
sbb
mov
insb
xor
scas
je
in
mov
stos
aam
div
mov
jbe
pop
xchg
push
adc
mov
sub
repz
mov
inc
mov
daa
or
cmpsb
cld
decl
mov
cmc
aad
imul
mov
ds
into
roll
mov
xor
sbb
lods
mov
lea
pop
sbb
mov
scas
push
add
inc
cmovae
push
fsub
mov
movlps
mov
jae
fistl
mov
mov
loopnew
add
xor
div
jae
cmpsl
cld
dec
jle
shrl
int
or
fadds
pop
outsl
mov
pop
lcall
lods
push
push
jl
inc
test
mov
cmp
jg
push
clc
dec
xchg
and
shlb
mov
sub
sbb
push
cmp
pop
jl
mov
and
mov
jno
push
lret
test
inc
xor
or
mov
lahf
stc
rcrb
sub
faddp
addl
jae
sub
negl
loop
mov
outsl
ror
sbb
in
push
inc
lock
pop
inc
out
jecxz
jnp
mov
dec
loope
shll
dec
sti
out
mov
sub
das
adc
in
jl
loopne
add
call
jle
push
or
push
mov
dec
pusha
ss
cmp
hlt
fwait
repnz
mov
mov
out
inc
pop
inc
sub
loopne
mov
jnp
std
icebp
dec
pop
movsb
nop
mov
test
mov
sub
jno
xor
movsb
pop
pop
jecxz
outsl
movsb
cmp
xchg
fsubrp
iret
sbb
jo
mov
mov
lds
popf
push
inc
jmp
mov
push
pop
fisubrl
inc
mov
outsb
mov
inc
insb
in
pusha
in
push
ds
fimull
sbb
cmc
lcall
cmpsl
pushf
lahf
pusha
aam
inc
mov
sbb
fbstp
push
cmpsl
mov
imul
ljmp
fistpll
pop
lret
jg
dec
push
insl
mov
cmp
stc
jb
xor
loop
cmp
hlt
mov
or
cmc
or
sarb
movl
ret
mov
mov
mov
loopne
fisttps
lea
loopne
lahf
dec
pusha
xor
fbld
push
daa
and
jb
je
ja
push
mov
addb
sub
fdivrl
add
mov
or
je
mov
aaa
call
xchg
add
fs
or
fnsave
aas
sbb
mov
in
sarl
aas
pop
sbbl
mov
shrl
aaa
fisubrs
mov
inc
add
mov
dec
daa
inc
fisttpl
std
repnz
xchg
lcall
adc
jne
jae
and
outsb
aas
loopne
xchg
out
xchg
inc
pop
les
rcl
arpl
shll
mov
xchg
xchg
loop
cmp
cli
pop
push
test
or
loope
jne
mov
sub
lahf
movsb
subb
mov
nop
in
push
test
call
mov
jb
lock
data16
scas
mov
orl
imul
xchg
adc
xchg
and
pop
out
inc
ljmp
mov
imul
cmpsl
mov
into
pop
sub
cmp
icebp
ret
pop
in
jo
subb
movsb
pop
dec
adc
test
jl
add
roll
out
pop
mov
mov
ret
ds
mov
dec
movsl
push
pusha
and
and
iret
test
mov
orl
or
bound
ljmp
mov
stos
dec
fldl
rcll
push
into
adc
dec
aaa
mov
sbb
cmpsb
and
inc
bnd
pop
int3
inc
ljmp
sub
fs
das
mov
xor
xchg
out
xorl
mov
mov
insl
in
dec
idivl
scas
dec
xchg
push
pop
test
cmp
in
push
bound
mov
fsts
hlt
mov
imul
push
shl
testb
mov
add
and
test
icebp
xchg
add
test
or
xchg
add
int
mov
and
loopne
mov
outsb
push
cmp
mov
and
aad
ret
aas
bound
pushf
sahf
into
xchg
xchg
and
xor
adc
xchg
shr
jnp
xor
xor
and
popf
sti
adcl
xchg
mov
pop
sub
inc
loopne
ja
fistl
pop
mov
test
dec
cltd
cmp
les
dec
into
adc
cmp
std
inc
and
test
cmpsb
pop
aaa
aad
pop
inc
or
cmpsb
mov
dec
inc
sbbb
insb
dec
mov
pusha
rorb
inc
out
push
mov
repnz
and
cmp
and
jbe
mov
push
xlat
sub
loope
movsl
leave
enter
scas
ret
jecxz
inc
les
inc
cwtl
jne
push
push
test
sbb
cmp
inc
in
pusha
xor
xchg
mov
inc
jns
test
mov
pop
stc
aad
pop
mov
sbb
cmpl
adc
mov
pop
rcll
out
cli
aam
xchg
jl
jg
and
and
jne
pop
cwtl
push
dec
aad
popf
fs
push
mov
xlat
sub
pop
lods
mov
lds
aad
movb
sub
fwait
mov
mov
mov
nop
inc
aad
add
scas
loope
sti
aaa
testb
xlat
ljmp
mov
cmp
outsb
lahf
jbe
stos
jg
jnp
jp
mov
loop
add
and
stos
insl
shrb
xchg
gs
mov
adc
frstor
mov
popa
and
enter
add
xchg
stos
lods
mov
lock
add
mov
aas
mov
dec
push
push
test
mov
fsts
mov
insl
mov
add
rol
pop
sbb
pop
or
out
lret
std
push
add
inc
test
add
push
movsb
imul
mov
xor
sub
mov
or
jnp
push
stc
daa
ja
popa
lcall
lahf
xor
fwait
arpl
ljmp
icebp
lods
push
stc
je
dec
and
dec
push
aad
xor
inc
pop
jo
data16
pop
mov
ds
cmpsl
out
mov
mov
push
fdiv
std
test
sbb
es
test
idivb
sbb
cmp
outsb
mov
dec
ljmp
nop
jo
sbb
xor
jle
out
push
push
dec
loopne
xlat
sbb
cld
pop
sbb
mov
aam
popf
sarl
loope
jae
mov
clc
fs
test
adc
push
rorb
cmp
add
shufps
and
enter
loop
mov
popw
sbb
loopne
icebp
addb
scas
ret
cmpsb
ds
stc
sti
fildl
jbe
int3
enter
jg
fistpl
das
test
sub
inc
sub
outsb
jg
or
adc
lret
and
jle
repz
cmpl
jae
into
mov
out
lock
test
test
sbb
jbe
arpl
pop
and
xchg
or
addr16
push
call
jge
mov
das
icebp
mov
dec
rcll
mov
jno
lahf
mov
test
inc
push
mov
rolb
mov
in
js
xchg
popa
addl
popf
out
loop
addr16
lods
fstl
fwait
or
fiaddl
pop
mov
fists
clc
mov
push
jo
insl
cmp
pop
sub
xor
xor
jge
repz
xor
sub
paddd
mov
mov
stos
arpl
mov
xor
cmp
cli
push
xchg
aas
push
insl
jbe
dec
jp
mov
sub
out
xor
sbb
ret
into
icebp
inc
fmull
into
int3
push
mov
and
lret
adcb
cmp
push
test
add
xor
insl
loop
xchg
negb
add
fistps
cmp
and
add
xchg
test
and
outsb
mov
fistps
data16
sbb
jg
pop
addr16
fsubp
scas
int3
ror
push
dec
out
sub
lds
mov
and
fimuls
outsb
mov
lahf
dec
xchg
push
test
int
out
fdivp
sti
xlat
repnz
sbb
call
mov
jl
clc
cmpsl
add
repz
and
push
rorl
push
mov
ja
pop
jmp
out
movsb
mov
pop
inc
int3
jle
pop
or
xchg
fsubr
in
stos
pusha
xlat
mov
jo
mov
setnp
jp
daa
mov
xor
add
xor
ljmp
fcompl
jnp
mov
insl
cs
mov
push
bound
ljmp
jbe
push
pop
cmp
pop
test
ljmp
fs
fdivrp
and
push
mov
or
xchg
fdivrl
mov
add
in
std
mov
int3
sti
pop
fucomip
xchg
mov
or
inc
dec
inc
popf
lcall
inc
scas
push
std
sbb
mov
sbb
jg
jne
push
inc
and
add
out
or
inc
negl
sti
lcall
jg
call
out
lahf
mov
lds
lods
push
cwtl
mov
add
sbb
je,pt
test
cli
and
mov
das
mov
ds
sbb
mov
aad
int3
js
es
adcb
xchg
mov
ss
pusha
xchg
in
popa
leave
adc
add
add
mov
mov
and
pop
ret
push
mov
or
add
and
cmc
je
push
cmpsl
int
jns
int
or
test
ljmp
or
cmpsl
mov
dec
xor
push
or
gs
mov
or
movb
pop
pop
pop
push
jp
std
pop
sub
out
xchg
jmp
xchg
stos
testl
shlb
out
mov
mov
xchg
test
repz
mov
loopne
fcomps
hlt
inc
pushf
pop
enter
pushf
push
aas
fstl
ljmp
bound
sub
into
cmp
mov
sahf
xlat
sbb
mov
xchg
mov
add
fucomp
mov
cmp
push
repz
add
xchg
pop
insl
sub
ret
push
inc
push
fimull
add
pop
jns
sbbl
adc
add
and
push
lret
subps
inc
leave
dec
pop
jae
lret
pop
stos
mov
cmp
pop
cmpsl
pop
js
dec
movsl
and
je
xchg
jle
xchg
cld
aaa
scas
scas
sarb
out
scas
mov
cmp
loope
dec
mov
inc
in
repz
aam
fdivrl
into
outsb
inc
xor
loopne
dec
or
or
sbb
arpl
cld
dec
pop
hlt
dec
mov
cmc
in
push
mov
inc
in
daa
pop
add
ret
movsb
inc
xchg
add
xchg
jne
jno
mov
fiadds
jl
jb
in
inc
cmpsl
mov
push
xchg
repnz
add
and
shl
in
or
fnstcw
cmpsl
sub
jb
mov
sbb
add
jo
in
cmp
loop
or
sti
mov
test
push
dec
fs
testl
es
or
cmp
test
add
insl
push
cmc
jg
mov
and
mov
pop
fistpl
or
push
mov
je
sbbb
mov
test
sub
jmp
mov
push
scas
sbb
subb
jo
loopne
xchg
xchg
cmp
pop
mov
pushf
lds
cmpsb
pop
shl
and
ja
mov
stos
inc
in
pusha
cmpb
cmp
dec
jp
out
mov
or
cmp
and
mov
jp,pn
aaa
mov
xchg
imulb
pop
sbb
jno
sbb
mov
js
dec
adc
sub
leave
lret
push
cmpsl
test
movsl
jnp
lret
jbe
fcomps
push
push
and
hlt
xor
jge
pop
and
pop
jmp
dec
mov
popa
cs
dec
fisubl
jno
subb
cmp
in
movsb
adc
jns
ds
ret
sbb
dec
push
dec
add
sub
xor
lods
xchg
mov
push
mov
mov
xchg
ret
loopne
lret
or
cwtl
add
rolb
xchg
mov
mov
xchg
lods
nop
lret
repnz
scas
xchg
in
jo
cmpsb
int
push
pushf
add
mov
decl
pop
push
cltd
or
dec
movsl
insl
fs
mov
cmp
mov
mov
add
movsl
sbb
pop
jecxz
addb
dec
or
loope
ffreep
insl
shl
push
fmul
clc
xchg
das
xlat
inc
fsubs
mov
xchg
lcall
inc
dec
movsl
xchg
arpl
jbe
gs
inc
pop
lret
cmp
mov
je
cmc
pushf
jge
aam
in
mov
call
push
inc
dec
pop
shrb
addr16
lahf
sbb
inc
jns
je
lods
pusha
leave
movsb
sub
lret
leave
js
mov
jg
sub
cwtl
mov
mov
lret
lods
jle
addl
sarb
loope
jp
mov
mov
jo
or
aas
test
and
shlb
hlt
jle
das
jge
pop
into
xor
stos
fldenv
mov
imul
sarb
or
and
cmpsb
mov
cmp
add
pop
cmpsl
xor
repnz
cmp
push
dec
xchg
pop
inc
scas
mov
mov
inc
dec
cwtl
nop
mov
pop
out
inc
stc
jbe
aas
inc
scas
je
fwait
movsb
movsl
lahf
cmpsl
inc
mov
adc
mov
sub
pop
pop
ss
adcl
mov
daa
xchg
push
pop
sub
cltd
je
and
cmpsl
xor
sti
and
stos
mov
imul
daa
stc
adc
sahf
pop
push
test
dec
movsb
mov
lods
adc
divl
es
mov
ds
call
loop
lock
xor
jne
push
clc
lret
jbe
cmp
pop
scas
movsb
mov
dec
ret
je
mov
cmp
std
mov
shl
popa
into
cmp
and
lds
mov
xchg
loopne
mov
fsubl
ja
xchg
inc
xchg
xchg
divb
xor
std
dec
adc
sub
jecxz
addr16
add
inc
cmp
and
pop
cli
cmp
jecxz
jnp
outsl
mov
xchg
sti
arpl
sub
mov
mov
cmpsb
xchg
mov
jno
xorl
ficoms
push
sbbb
jbe
lret
popa
aaa
mov
iret
imul
xchg
jge
ret
cmp
int3
cmpsl
rol
adc
cmc
rolb
xor
inc
or
inc
mov
cmp
movsl
mov
addr16
mov
xchg
dec
sub
xor
mov
pop
add
or
jnp
orb
jle
mov
das
roll
jl
dec
mov
icebp
dec
cmpsb
icebp
insb
pop
les
push
pop
mov
cmp
ds
mov
pop
push
arpl
fstp
sbb
inc
cmp
push
mov
sarl
movl
mov
push
inc
xchg
mov
jbe
movsb
xchg
jne
push
push
lret
pusha
repz
pop
mov
adc
or
mov
pop
imul
fistps
pop
pop
out
orb
fcompl
or
xchg
push
pushf
inc
mov
push
aaa
cmp
icebp
push
fs
jnp
xor
test
sbbl
fistps
hlt
add
inc
and
mov
cmp
cmp
or
out
neg
in
xchg
mov
lods
xchg
fsubs
outsl
outsb
add
stos
push
cmp
push
dec
outsb
rclb
adc
sbb
shll
push
sbb
mov
and
sbb
jns
das
xchg
pop
jno
scas
push
out
out
jle
mov
pop
stos
xor
mov
fnsave
push
cmpb
cmpsl
sbb
xor
jbe
jb
lods
mov
icebp
out
inc
lods
enter
stos
add
movsb
push
call
data16
rol
leave
adc
dec
dec
push
and
es
pop
sti
in
push
sbbb
jecxz
jae
negl
imul
inc
xor
mov
mov
insb
mov
jge
xchg
nop
mov
je
int
sahf
fisubl
push
sub
enter
int3
call
les
test
or
loop
lea
lret
mov
or
xor
packssdw
shll
adc
in
xchg
add
pop
outsl
pop
pop
mov
pop
testl
sbb
lcall
call
iret
out
fidivrl
mov
pop
and
adc
ret
subb
jl
shl
rcrl
sbb
int3
and
mov
jl
in
cwtl
cs
cmpsl
inc
leave
and
jg
lcall
mov
or
lods
fdivp
je
adc
dec
xchg
xchg
movsb
addl
and
pop
mov
stos
out
mov
sti
imul
push
arpl
mov
fisubrs
jp
add
inc
mov
outsl
movsb
cmp
fiaddl
push
xor
ret
das
jb
fldenv
aad
scas
aaa
pop
mov
jnp
dec
into
outsb
pop
lods
jnp,pn
cmpsb
mov
ja
lods
cs
push
and
dec
and
and
lods
push
stos
loopne
ret
or
sti
mov
push
mov
lock
cmpsb
add
ret
or
negl
or
pushf
rorl
xchg
test
out
push
sub
popf
je
mov
stc
fsub
push
cmp
sbb
or
stos
cld
or
test
dec
and
filds
dec
loopne
test
pop
enter
fisubs
xor
dec
ljmp
dec
les
pop
mov
enter
fcompl
pop
imul
imul
imul
and
mov
add
adc
sahf
fs
shll
xchg
popf
in
cld
ljmp
out
mov
sbbl
ret
popa
pusha
push
pop
test
xor
cli
sub
or
xor
xchg
sbb
dec
aad
pop
out
pop
popa
mov
dec
jmp
subl
lock
jmp
popf
push
pop
mov
in
repz
mov
aas
decl
or
outsl
outsl
xor
jge
or
and
pop
xchg
push
mov
jne
mov
popa
and
pusha
shll
test
push
jne
jl
or
push
cmc
std
inc
fldt
sbb
movsl
sub
je
icebp
daa
ljmp
sti
cltd
js
xchg
mov
inc
lcall
xchg
orl
push
sbb
add
loopne
pop
jne
iret
mov
cwtl
jecxz
mov
jmp
push
cs
pop
test
pop
pop
inc
or
pop
scas
shl
push
jae
jbe
lds
jp
sti
adc
and
loope
cwtl
outsb
shr
aaa
in
sahf
cmp
xchg
xchg
mov
movsb
movsb
insl
imul
dec
adc
jne
or
aas
shlb
into
mov
pop
pop
sub
mov
dec
das
or
jecxz
sbb
sbb
cmp
decl
das
xchg
aas
pop
jb
mov
dec
push
and
push
mov
aaa
les
push
xor
cld
sub
lret
cmpsl
dec
test
jge
mov
push
fcmovnu
xor
icebp
mov
adc
and
jbe
shl
pop
lret
mov
add
jae
insb
popf
jbe
das
popf
fdiv
jae
and
push
sub
adc
sti
lahf
fisubs
loope
aas
notl
mov
pop
pop
or
aas
pop
push
xchg
sub
sbb
mov
or
push
or
jns
je
xchg
pop
ljmp
jae
insb
adc
stc
out
ja
push
ja
sbb
mov
subb
pop
lret
je
ja
icebp
cld
cmp
into
xor
xor
mov
push
mov
or
into
js
xor
pop
addr16
adc
pop
xchg
pop
pop
mov
mov
fcomi
lock
lock
mov
add
sbb
xor
gs
sub
jbe
fnsave
push
lock
fwait
call
aad
mov
mov
add
orl
jl
outsl
or
add
sbb
and
iret
mov
pop
sub
sti
sub
jg
or
fimull
subb
cli
xor
shlb
mov
cmp
cmp
cmpsl
insl
inc
and
mov
sub
lret
mov
imul
popa
aam
fsub
stc
adc
add
testl
mov
or
dec
push
mov
pop
push
insl
test
jmp
and
pand
cmp
jg
pop
add
or
jg
lea
test
jno
and
aam
add
mov
and
scas
push
fnstenv
push
leave
sbb
xchg
sbb
outsl
mov
inc
js
dec
movsl
cmp
lds
jl
mov
pop
mov
push
movsl
out
imul
ret
pop
dec
leave
mov
jo
push
and
and
test
pop
hlt
xor
cmp
add
jge
or
xchg
mov
adc
je
dec
jnp
rorb
pusha
repz
push
ljmp
lcall
sbb
push
add
push
test
mov
adc
dec
inc
aaa
mov
lret
mov
xlat
dec
add
mov
cmp
daa
fmul
arpl
mov
rclb
adc
mov
iret
lret
lea
ljmp
sahf
popf
mov
lea
ret
adc
lcall
jb
aas
lock
shlb
or
adc
mov
les
dec
lcall
in
cmp
test
icebp
mov
cmp
jp
stc
divl
out
imul
mov
lcall
leave
mov
cmp
xchg
or
push
gs
xchg
dec
aam
ds
pop
and
sub
sub
aam
pop
jb
scas
adc
sub
cmpsb
cli
cld
cli
aas
and
in
jge
sti
lahf
push
je
stos
out
popf
push
ret
sbb
and
sbb
and
insb
test
inc
mov
or
sub
lahf
or
add
testl
push
jl
int
aam
in
xor
jo
push
mov
mov
mov
jmp
das
lock
dec
or
jg
pushf
push
push
push
nop
mov
lea
fists
dec
xor
out
add
rol
pop
sbb
int
adc
mov
pop
xorl
jno
cmp
iret
inc
mov
add
dec
hlt
pop
lods
xor
std
dec
mov
cmp
jbe
and
push
pushf
pop
mov
aas
lea
std
xchg
std
and
adc
push
add
lret
cmp
jo
push
mov
cmp
mov
push
or
out
cmp
xor
aam
lods
ds
xor
push
add
push
push
jnp
inc
push
not
pop
add
mov
sub
push
mov
push
mov
mov
sahf
ficomps
loopne
adc
mov
xor
lret
es
lea
int
fcmovbe
mov
pop
and
movsl
adc
sbbb
lcall
dec
cmp
lods
fs
inc
mov
fldl
push
mov
aam
aaa
or
mov
addr16
xchg
mov
dec
inc
push
test
shll
pop
pop
lret
mov
xchg
mov
leave
cmc
in
cmpsl
mov
leave
aas
daa
cmp
bound
push
inc
pusha
xlat
inc
mov
or
iret
lret
es
sbb
enter
xor
iret
xchg
shr
ss
add
enter
mov
push
in
jl
pop
push
xor
pop
and
dec
xchg
cltd
ja
in
dec
add
xor
xchg
or
mov
clc
push
xchg
mov
adc
dec
scas
inc
test
das
sti
mov
dec
imul
shrb
jecxz
cwtl
lock
add
movsl
sub
mov
test
sbb
pop
insl
fstps
mov
fsubp
in
loopne
cmpsb
mov
mov
test
popa
and
push
mov
addr16
loopne
movsl
and
int
ds
mov
adc
jl
cmp
popf
and
xor
pop
cmpsl
lock
add
sub
repnz
out
jnp
sub
sbb
jg
lods
fwait
jnp
fs
mov
jb
lcall
arpl
andl
adc
push
outsb
sbb
mov
sbb
and
aad
adc
insb
push
push
pushl
das
or
sbb
fld
xchg
imul
aam
enter
pushf
lods
cli
test
int3
ficoms
inc
pop
xchg
xor
insb
mov
out
xor
cmpl
add
cmpsl
cmp
daa
jmp
fistpl
das
sti
add
jle
mov
cmc
shrb
stos
movsl
loope
or
jmp
mov
add
in
jp,pn
fstl
cmpsl
mov
or
push
push
cld
call
ss
pop
bound
cmp
push
xchg
popa
outsb
xor
inc
std
cs
mov
aaa
fwait
adc
loopne
cmp
adc
aaa
shr
pop
call
leave
adc
sub
shrl
in
push
test
cmp
xchg
dec
cld
iret
or
movsl
add
outsb
xchg
test
ds
dec
cld
shrb
xlat
gs
fchs
in
sbb
adc
cmpsl
add
inc
shll
aam
or
xor
in
cs
les
jnp
sub
add
mov
push
std
sbb
add
push
movsb
call
cmp
mov
test
cli
cmpsl
and
test
add
mov
sbb
addl
push
fsubrs
repz
mov
fcomps
cmp
push
mov
insl
adc
notb
loopne
and
fsubrl
mov
xchg
fstpl
arpl
push
mov
jns
enter
lcall
fnstcw
mov
movsl
popf
add
je
call
ficomps
sub
add
and
popf
stc
or
pushf
pop
int3
daa
mov
dec
scas
in
mov
and
sahf
mov
jge
xchg
and
cmp
mov
icebp
jmp
cmp
dec
idivb
outsb
aas
pop
lret
jmp
inc
js
dec
lods
hlt
dec
jbe
fldl
cmp
push
add
adcb
or
and
pop
mov
mov
aas
pusha
sahf
pop
nop
mov
pop
xchg
xor
push
jno
and
mov
movsl
push
push
mov
fadds
push
ljmp
or
pop
or
jg
int3
cmc
sub
xor
daa
lock
in
lea
sarb
dec
xchg
push
jo
scas
test
insb
nop
sub
jno
xchg
mov
mov
insb
repnz
pushf
fimull
mov
lock
les
das
dec
xchg
jmp
and
jp
daa
dec
push
popf
in
clc
inc
loopne
mov
dec
cmp
or
shrl
stos
add
jmp
lock
xchg
jo
push
clc
fidivs
add
lods
pop
xlat
sti
dec
fnstsw
mov
dec
mov
dec
es
inc
lds
repnz
nop
mov
repz
ljmp
sbb
movsb
fisubrs
mov
inc
movb
add
jle
inc
jbe
cmovae
dec
or
pop
push
cmpsl
pushf
sahf
test
xchg
xor
inc
scas
ja
mov
sub
or
mov
sbb
jnp
xor
or
stc
dec
outsb
pop
pop
addr16
add
jae,pt
fsubp
mov
cmpsl
mov
jbe
cmc
and
jno
sbb
imul
mov
xorb
pop
shlb
je
push
rorb
or
imul
fldt
adc
push
shlb
sar
imul
inc
int3
fnstsw
je
mov
adc
inc
fistps
int3
cmp
mov
add
or
mov
sahf
jle
iret
mov
popf
cmp
std
fcmovb
gs
mov
xchg
loop
outsb
jb
aad
mov
loopne
insl
jae
inc
xchg
sub
and
test
mov
sbb
nop
or
mov
push
cld
pop
mov
test
xchg
mov
mov
pop
pop
lods
scas
outsl
push
sbb
pop
adcb
lahf
addl
js
test
pop
bound
jns
push
cld
ficompl
add
dec
push
mov
push
in
mov
pop
insl
out
in
push
stos
add
fildl
mov
outsb
inc
mov
ljmp
mov
or
mov
xchg
push
sbb
jno
fbld
jnp
mov
sub
xor
sbb
dec
sub
cs
daa
ffreep
mov
mov
scas
stos
not
notb
test
mov
dec
sahf
xchg
mov
in
leave
cmp
daa
arpl
mov
xchg
outsb
push
pop
xor
mov
pop
xchg
insb
aaa
mov
xchg
scas
push
adc
insb
mov
jnp
mov
push
xor
push
movsb
shlb
cli
jle
hlt
or
dec
in
lock
add
je
nop
dec
data16
hlt
jnp
fmull
sub
adc
outsb
pop
cmpsb
inc
lods
out
push
leave
cmpsl
mov
repnz
aad
rorl
sub
mov
out
inc
gs
sbb
in
pop
mov
xor
adc
daa
xor
push
lret
xchg
and
test
inc
jle
jl
sbb
test
das
jle
leave
jae
shll
and
inc
jp
clc
or
sub
mov
jae
sub
out
and
add
call
mov
movsl
push
jp
cmp
call
mov
mov
mov
aad
cld
fcomp
dec
pop
push
bound
inc
jmp
or
xchg
js
cmp
imul
sub
jo
dec
sti
and
in
xor
and
js
dec
pop
cmc
std
jnp
nop
cltd
out
dec
pop
dec
add
movsl
mov
lods
and
mov
jo
rolb
test
loope
add
and
bound
scas
adc
iret
push
fadd
sub
jns
push
and
cmp
popa
lret
movsb
mov
add
test
dec
add
adc
mov
mov
sub
sbb
pop
mov
cmp
mov
xor
loopne
adc
ret
sarb
xchg
ficoml
sahf
addr16
mov
mov
push
xor
and
mov
daa
xchg
add
es
xor
outsb
or
mov
lret
pop
out
and
fbld
or
push
cli
push
call
leave
lds
decb
dec
clc
sbb
sub
xchg
mov
pop
dec
mov
nop
push
loopne
stos
add
xchg
imul
sub
loopne
cmpsb
xchg
rcrl
test
sbb
cmpsb
push
std
push
jge
inc
add
cmc
dec
jp
hlt
movsl
aam
pop
add
jbe
mov
cli
push
inc
test
movsl
add
pop
sub
in
cmpsb
sbb
pusha
jl
ret
out
test
xor
push
pop
ja,pt
repz
pop
dec
sub
push
jae
inc
fidivs
pushf
xchg
imul
xchg
ffreep
jb
jge
out
mov
clc
daa
and
out
cmp
shll
cli
cld
and
lods
jne
fs
push
fdecstp
pushl
fildl
sbb
add
out
rcll
push
add
repnz
push
mov
push
fsubrs
daa
and
xchg
cmp
pop
fbstp
mov
rclb
scas
movzwl
insl
or
inc
fisubs
dec
jno
dec
cmc
cltd
outsb
dec
jle
popf
lods
or
cmp
or
add
pop
std
pusha
push
push
fdiv
sub
mov
andb
popl
mov
xchg
sahf
ljmp
mov
fsubs
jne
and
adc
popf
jnp
sub
sti
shlb
xchg
lcall
lods
cli
cmc
xchg
fnstcw
mov
stc
and
shlb
xchg
shrb
jno
cmpsb
jnp
fcompl
mov
pop
mov
or
jmp
sub
and
repz
pusha
pop
arpl
imul
jbe
imul
jae
jno
jo
pusha
sub
sbb
fsubl
movsl
cs
or
imul
add
xchg
adc
int
popa
xchg
in
cmp
lds
mov
imul
subl
mov
inc
pop
mov
addr16
xchg
push
push
sbb
xor
test
xchg
adc
lcall
js
add
cmp
test
pop
ss
or
fwait
mov
movsb
jp
aam
jnp
sub
fidivrs
ret
setp
aad
add
or
mov
fimuls
cmp
pop
stos
js
addb
xchg
and
fwait
int3
inc
fidivrl
das
test
aaa
sub
leave
jns
mov
cmp
push
add
lcall
int
mov
stos
jecxz
cwtl
in
mov
mov
mov
jmp
lock
xchg
popl
pop
fiaddl
cmpsb
mov
mov
cmc
inc
cltd
cmp
sti
pop
test
rcll
fildl
adc
xchg
das
call
addr16
mov
aaa
pop
pop
pushf
fidivrl
andb
outsl
sarl
stos
fnsave
pushf
or
mov
jle
push
sub
push
aas
ss
movsb
inc
pop
or
inc
lea
dec
call
xorb
dec
stos
sub
xchg
shlb
push
xchg
or
fisttpll
sub
lret
inc
popa
out
add
aas
mov
and
arpl
pop
lret
mov
pop
jbe
inc
pusha
aam
jmp
pop
pop
sub
and
cmp
push
call
add
ss
pop
lock
push
jnp
xor
jno
pop
hlt
mov
sahf
daa
push
cmpsb
loop
push
xor
or
dec
xor
data16
fadd
das
sub
adc
ret
sbb
and
xlat
xchg
cmpsl
fadds
xor
and
aas
mov
data16
pop
mov
push
pop
lcall
jo
jae
in
push
cmp
call
push
lds
cmp
idiv
lds
xlat
inc
mov
mov
movsb
ret
mov
and
subb
out
les
mov
mov
outsl
xor
sti
mov
sbb
mov
sbb
rcr
and
sbb
pop
shl
pop
jecxz
pop
xlat
dec
and
mov
arpl
mov
jo
mov
cmp
fldpi
xorl
jmp
jnp
mov
xchg
imul
inc
sub
scas
adc
shll
mov
dec
pop
js
popa
test
jl
add
jb
lcall
sahf
subb
add
lea
xorl
lret
and
push
sub
scas
mov
xor
mov
pushf
arpl
jle
xchg
hlt
je
out
mov
clc
popf
iret
in
cmpl
outsb
aad
lcall
push
cmp
or
push
cmpsl
jecxz
scas
sbb
push
repz
and
ficompl
out
icebp
int
pushf
cmpsl
fsub
xchg
sub
or
mov
cmp
cmpsb
movsl
mov
fcom
mov
or
pop
loop
xor
or
pop
movsl
dec
pop
cli
pop
inc
fwait
push
inc
gs
mov
dec
sub
icebp
adc
rorl
mov
imul
cltd
dec
jno
xor
scas
push
hlt
add
mov
adc
dec
mov
jmp
cmp
cmp
addr16
mov
and
iret
and
aas
pop
ds
inc
test
mov
xchg
and
cli
pop
and
xor
rcll
inc
repnz
push
test
in
inc
sub
jl
lcall
xchg
jo
xchg
xor
loope
mov
xchg
mul
icebp
jecxz
ss
das
aam
pusha
inc
and
pop
loope
xor
mov
into
inc
shrb
les
mov
jl
push
imul
xor
inc
mov
out
dec
out
negl
xchg
imull
mov
stos
shlb
xchg
cltd
jb
and
andl
mov
cmpsl
jecxz
mov
xchg
or
fst
mov
aam
and
mov
addr16
sbb
cmp
scas
sbb
testb
mov
insb
add
xor
outsb
pop
cli
cmp
push
or
in
aad
ljmp
xlat
push
repz
jge
jl
jp
pop
pop
mov
xlat
aam
and
adc
cmc
repnz
cld
mov
fsub
insb
jp
test
push
dec
add
mov
add
inc
mov
mov
out
add
popf
jmp
shlb
into
test
insb
inc
xor
push
mov
movb
int
test
insl
fcmovu
xchg
out
jg
ss
movsb
jb
pmullw
adcb
push
cmp
jg
out
icebp
push
and
lahf
ja
jne
mov
jp
lcall
push
inc
test
dec
rorl
mov
xchg
sahf
mov
testl
rcrl
mov
movlps
lock
cli
fs
xchg
fsubr
xchg
jnp
imul
mov
mov
mov
testl
mov
loopne
pushf
mov
fstpl
dec
js
ss
lea
daa
mov
inc
mov
jns
ds
cli
test
icebp
jmp
cld
xlat
ret
or
das
jmp
lds
lods
or
movsl
inc
out
pop
mov
mov
scas
push
pushf
test
fidivs
push
pusha
adc
adc
lret
push
inc
repz
sarl
jae
lds
adc
cmp
js
cmpsb
shrb
dec
push
lret
mov
loope
and
xor
hlt
adc
inc
mov
rcrb
fisttpl
adcl
add
inc
jge
inc
cmpsb
outsb
xchg
mov
pushf
lock
pushf
mov
enter
push
mov
mov
sbb
subl
xor
movsl
push
idivl
insl
ficoms
mov
sub
sub
sub
ds
call
inc
xor
daa
test
aas
rclb
inc
rcr
inc
addl
xor
sahf
cwtl
add
hlt
push
add
hlt
popf
clc
rcl
cmp
xor
outsl
sbb
inc
cmpsb
sub
fisttpl
mov
mov
sbbb
pop
pop
cmpsb
pop
loope
xchg
dec
imul
pop
mov
js
adc
lods
inc
xchg
xchg
icebp
loope
cld
add
rcll
and
jns
and
dec
les
inc
mov
push
sub
jmp
sbbb
out
por
frstor
scas
popa
pop
sahf
and
xchg
pop
popa
push
push
sub
and
jns
mov
pushf
jno
dec
xlat
push
cmp
lock
jae
xchg
jecxz
and
xchg
repz
std
cmpsb
cmp
fsubrl
add
adc
xchg
mov
icebp
xorl
fmuls
dec
shl
in
lret
xor
out
pop
insb
xchg
incl
ja
ret
inc
les
and
xchg
pop
push
mov
loop
cmp
aas
flds
fs
xchg
add
shll
ret
test
pop
sbb
xor
sub
or
xchg
lea
pop
ljmp
andl
add
mov
mov
and
and
in
mov
fisubrs
inc
je
mov
outsl
pop
pop
call
sbb
push
inc
xor
push
mov
push
enter
loopne
cs
mov
loopne
ficoml
insl
outsl
in
push
jmp
das
lods
xor
sub
data16
out
outsl
les
lods
pushf
ja
mov
fwait
sbb
or
xchg
mov
inc
ret
push
in
adc
xor
aad
dec
sbb
jb
pop
or
cltd
out
sbbl
jb
jge
push
ds
cmp
pop
fisubrs
mov
push
or
popa
neg
xchg
ficompl
mov
push
jg
cli
mov
xchg
subl
and
test
mov
enter
mov
adc
sub
pusha
es
out
negl
int3
adcl
adc
mov
dec
rolb
sub
fildl
cmp
mov
sbb
mov
pop
push
sub
mov
cmp
insl
dec
mov
hlt
mov
iret
adc
dec
add
cmp
pop
inc
in
push
mov
icebp
aas
add
ljmp
mov
lods
pushf
sbbl
std
stc
or
cltd
jno,pt
arpl
bound
insl
fistpl
pusha
shlb
dec
pop
sbb
mov
std
add
fsts
lock
push
inc
fdivr
dec
in
push
sub
stos
add
lret
inc
in
insb
and
mov
fwait
imul
jl
cmp
push
test
mov
jmp
jmp
jns
jns
pop
mov
push
arpl
out
or
add
adc
frstpm(287
add
mov
xchg
add
icebp
icebp
fnsave
cld
sub
es
js
sub
pop
inc
addb
decb
sbb
insl
or
sub
xlat
mov
jle
sub
mov
pop
sbb
addr16
popf
ret
ret
xchg
imul
notl
inc
cmp
fmuls
aaa
lods
imul
xchg
inc
mov
lods
rep
cmp
sub
cmpsb
sub
adcl
ret
add
mov
popa
arpl
cmp
sarl
xchg
add
stos
sub
stos
push
mov
dec
outsb
cmpsb
test
mov
imul
rcrl
xchg
and
mov
xchg
ja
movsl
jne
hlt
aam
dec
dec
fcomps
fucomp
push
mov
cmpl
enter
cmpsl
sbb
adc
mov
pop
test
jmp
rorb
loop
or
mov
jne
jmp
mov
inc
nop
sbb
dec
xchg
pusha
adc
xchg
aas
fildll
insl
push
mov
mov
xor
mov
leave
aas
clc
sub
and
inc
mov
xor
push
cmp
mov
mov
gs
cld
mov
in
icebp
jae
aam
mov
dec
loope
push
sub
jg
jae
mov
mov
test
push
xlat
sbb
std
cli
dec
inc
lret
jl
mov
cld
mov
or
xorl
inc
dec
push
test
xor
or
inc
jno
xchg
push
xor
lock
mov
and
adc
mov
shll
call
popf
mov
jb
cmp
jmp
sbb
sbb
test
cmc
call
outsl
jae
lahf
and
cltd
xor
and
test
pushf
lret
sbb
xchg
lock
add
icebp
jb
or
imul
in
pop
xor
nop
std
loope
jo
addl
pop
pop
xlat
aas
cli
pusha
pop
pop
mov
pop
xor
xchg
jnp
xchg
mov
leave
insl
lds
outsb
test
mov
imul
or
inc
int3
roll
int3
inc
rcll
mov
insl
test
jecxz
cmp
enter
sbbl
or
orl
fsts
outsb
repz
cmp
sbbb
fimuls
dec
adc
dec
lds
dec
popf
or
mov
inc
and
jmp
cmp
xchg
test
lahf
in
dec
out
ds
mov
pop
xlat
mov
test
shll
clc
inc
fisttpl
mov
ss
jns
repnz
mov
inc
and
lds
mov
lret
pop
pop
lcall
dec
dec
lds
mov
inc
cmp
mov
fisttpl
shlb
pop
pop
dec
mov
xchg
mov
outsb
dec
iret
mov
hlt
subb
hlt
xchg
test
lods
cmp
jmp
mov
fnstenv
pop
nop
mov
add
jecxz
sbb
scas
or
in
inc
mov
stc
bound
mov
xchg
jo
pushf
sub
adc
hlt
inc
or
push
push
gs
es
mov
xchg
add
inc
ds
sub
sub
and
pushf
push
iret
sbb
mov
ret
repz
int3
lds
pop
jne
ljmp
daa
and
add
call
push
dec
mov
pop
in
push
lcall
notl
jmp
pop
loop
jo
aam
pushl
enter
mov
leave
sub
adc
pop
dec
xchg
popa
cmpsl
ljmp
xchg
mov
push
inc
mov
jmp
adc
inc
loop
jmp
jmp
xor
and
je
shl
pop
push
mov
pop
dec
inc
inc
pop
in
cmp
mov
xchg
test
sub
cld
imul
insl
jne
mov
test
fsubrs
lret
mov
iret
xor
xor
rol
lea
adc
dec
sbb
mov
insb
test
jmp
sub
lret
insl
add
stos
mov
inc
xchg
ljmp
cmc
scas
pop
cld
mov
push
clc
pop
addr16
idivl
sbb
xchg
aam
dec
cmp
ret
imull
mov
mov
es
outsl
dec
and
addr16
pop
push
inc
adc
mov
iret
adc
ds
es
decb
movsl
mov
adc
pop
or
or
pop
pushf
bound
lods
cmc
mov
sbb
je
adc
xchg
adc
test
cwtl
xorl
roll
or
mov
sbb
xor
push
adcl
dec
dec
cmp
xchg
out
imul
xchg
mov
lods
fwait
jg
pop
fildll
pop
int
aad
popa
xchg
jnp
cmpsb
outsl
test
arpl
sbb
xor
ror
push
ds
dec
adc
xlat
test
fldt
sub
adc
jae
testb
ja
test
clc
fisttps
jp
idiv
mov
sub
out
cmp
sub
mov
outsl
cmp
and
inc
test
add
mov
int3
sbb
push
xchg
mov
sahf
cmp
xchg
push
xchg
sub
xchg
dec
adc
stos
inc
push
fimull
sbb
mov
popf
cltd
pop
stc
xchg
pop
jp
popf
idivl
inc
addr16
mov
in
or
cmp
pushf
repnz
in
mov
addr16
aaa
imull
rcr
movsl
fbld
lahf
or
push
sub
imul
mov
mov
or
lds
push
call
fs
sahf
cli
xor
and
mov
insb
or
fs
addb
lea
inc
xlat
or
mov
mov
jle
xor
ffreep
push
js
fisubs
inc
gs
cmp
cmp
inc
jle
or
xchg
pop
outsl
aaa
lret
ss
push
xchg
push
aad
shlb
pop
inc
in
pop
std
jno
in
fcmovu
cwtl
and
rclb
push
ds
int3
push
and
inc
repnz
sub
ja
loop
jb
adc
jo
pop
call
loope
push
std
popf
repnz
push
jge
gs
jne
mov
test
test
dec
push
rclb
mov
mov
pop
clc
push
inc
mov
push
cmc
fcmovnb
cmpb
and
out
int
push
xorl
xchg
cmp
orb
or
jmp
sti
add
or
stc
ds
fdivrl
mov
adc
insb
aad
add
das
add
inc
sti
loope
mov
mov
cmpsb
adc
ljmp
mov
dec
push
xorl
sub
iret
mov
and
fbld
loop
sub
jg
xchg
mov
xchg
inc
cmp
inc
adc
fstl
lret
mov
fcom
int3
out
dec
or
mov
gs
lret
mov
movsb
jae
jp
and
mov
lahf
adc
arpl
and
dec
call
mov
fildl
push
mov
add
fcmovnbe
push
imull
xchg
adcl
movsl
lock
ret
lock
jnp
push
push
jbe
in
loop
xchg
daa
mov
cld
pop
cld
sbb
pop
fdivs
xor
push
jge
dec
movsb
mov
push
push
dec
fcomi
aas
add
dec
aad
roll
ret
nop
sbb
leave
or
lea
or
repz
mov
mov
dec
xchg
push
popa
in
xchg
xor
stos
xchg
idivb
mov
iret
arpl
mov
dec
push
push
jecxz
dec
mov
fidivs
and
xor
out
jp
add
sbb
stos
fldcw
mov
std
mov
repnz
mov
lret
movsb
lahf
call
dec
mov
out
iret
ds
stos
in
scas
mov
adc
imul
test
insl
fnsave
sub
xor
push
dec
jmp
add
andb
jmp
rcrb
shrl
insl
cs
add
add
mov
cld
aam
jp
fnstsw
mov
dec
movsb
jne
sub
add
roll
out
scas
sahf
push
test
cmp
adc
ja
call
cmp
and
pop
pop
and
xor
dec
cmp
cmp
and
sahf
bound
ret
movsb
dec
aaa
lcall
negl
and
movsb
in
dec
lea
xchg
lea
mov
into
push
mov
xor
mov
mov
pop
adc
mov
negl
mov
lds
leave
std
and
and
arpl
out
mov
mov
out
inc
lods
jle
aas
sub
shl
das
cmpsb
es
mov
scas
push
data16
mov
lret
adc
mov
pop
mov
cmpsl
ret
mov
cmp
inc
mov
or
in
jmp
mov
sbb
or
push
aas
out
pop
sub
in
outsl
rcrl
clc
test
jne
popa
cmp
sub
pushf
lcall
daa
mov
mov
orl
iret
jno
xchg
pop
jecxz
addr16
repz
add
jne
jecxz
mov
je
xchg
addr16
bound
xchg
ds
dec
sub
push
cmp
dec
sbb
or
ljmp
sbb
fdivrs
test
vmwrite
movsl
cmp
stc
xor
mov
and
icebp
sub
sub
mov
inc
sti
xor
scas
cmp
inc
pushf
test
dec
ror
gs
mov
fiaddl
cmpsl
in
aad
lret
data16
add
out
daa
adc
and
stos
sbb
and
imul
inc
or
inc
popf
fnsave
adc
imul
jp
rcrl
into
cwtl
inc
test
sbb
sahf
lcall
stc
xor
mov
xchg
in
pop
push
addr16
mov
mov
mov
sahf
std
daa
push
repz
pop
popf
gs
cmpsb
pop
mov
or
cmp
rol
rclb
inc
in
inc
add
pop
outsl
jo
ror
xchg
pop
and
sbb
dec
push
hlt
test
jnp
jns
fstpl
sbb
lds
xchg
test
fwait
xchg
mov
adc
sub
insl
ja
les
push
add
jmp
mov
and
out
lods
dec
mov
jbe
mov
aas
cli
cwtl
inc
adc
lods
lds
xlat
sbb
push
and
in
jge
sbb
idivl
xchg
cmp
jne
mov
xor
repnz
cmp
les
test
cld
ljmp
imul
rolb
fs
mov
fadds
cld
dec
pop
data16
xlat
pop
cmpl
ljmp
pop
mov
mov
hlt
into
mov
test
les
fcomp
mov
sti
or
pop
jno
add
pop
mov
xchg
icebp
arpl
subl
xchg
inc
xor
dec
add
fwait
in
cltd
push
and
jmp
fistpll
mov
sub
jmp
mov
xor
pop
or
andb
int
mov
clc
inc
ljmp
cmp
cmp
out
lea
fisttpl
push
cmp
pop
dec
adc
mov
out
test
or
das
pop
in
cmpsl
and
jae
add
jae
mov
jg
push
into
push
out
mov
je
ret
or
loopnew
mov
push
cmpsl
or
mov
into
cmp
cmp
xchg
xor
leave
and
xchg
push
outsb
jge
movsb
loop
fsubl
pop
pusha
jmp
adc
jne
outsb
sti
js
adcb
mov
xor
mov
fwait
and
mov
push
sub
jp
or
popa
lock
pushf
pop
jnp
in
pop
fsubr
insl
out
in
mov
das
mov
mov
pop
sbb
push
and
dec
and
ljmp
jp
fidivrs
mov
or
pop
push
ret
mov
or
mov
or
and
jae
sbb
or
mov
lock
pop
aam
ljmp
jmp
mov
mov
push
push
ss
fs
jecxz
cli
jne
insb
roll
repnz
ljmp
std
enter
adc
out
rcrl
scas
test
test
mov
sbbl
jecxz
or
lds
xor
int3
lahf
je
lret
movsl
pop
dec
mov
pop
lea
leave
jp
ret
in
repz
cld
lret
adc
out
cs
int3
inc
add
fsubr
jb
in
aam
mov
scas
push
cs
test
inc
jmp
rolb
cli
test
mov
test
xor
mov
jl
sbb
xchg
outsb
dec
xchg
decl
repz
push
in
aam
lret
popa
mov
jbe
sub
fildl
push
ffreep
push
xchg
mov
insl
unpcklps
mov
insl
or
ss
hlt
lds
jbe
inc
adc
out
cmp
fdivs
lock
jnp
sbb
stos
cmp
push
std
subl
mov
sbbb
insb
jp
andb
in
int
pop
adc
pop
ret
push
sub
rorl
sub
and
adc
push
cmpsl
mov
das
sub
sub
push
inc
fimull
jae
sbb
jnp
pop
dec
sbb
jecxz
fildll
jp
mov
pop
xchg
loope
cmpsl
push
push
inc
negb
mov
inc
pop
add
mov
jbe
mov
lea
clc
adc
and
lods
and
xor
cwtl
xor
and
fiaddl
clc
xor
adc
mov
mov
inc
pop
jge
push
fsubrs
repz
lret
push
shlb
loope
mov
aad
mov
pusha
cld
inc
rcrb
sti
pop
and
gs
jo
push
leave
out
push
sub
jae
bnd
jo
cli
stos
xchg
and
addr16
adc
pop
ret
jecxz
lahf
sub
cmp
leave
sbb
stos
xlat
popf
sub
sub
insl
pop
sub
jle
shrb
rcll
xor
dec
fwait
jns
clc
cmp
sbb
dec
mov
mov
int3
movsl
pop
push
mov
out
lea
repnz
stos
push
xchg
xor
sbb
test
cmp
mov
iret
fwait
xchg
push
fsubrp
movsb
push
inc
adc
inc
into
stc
je
rcr
ret
inc
add
dec
in
hlt
insl
push
push
and
ss
xchg
loop
lcall
loope
or
lea
ret
fsubrs
jecxz
fistpll
xchg
ja
addl
pop
movsb
xchg
inc
mov
xchg
lods
pushf
scas
rcrl
xchg
pop
and
cltd
or
lds
test
stc
mulb
sub
jp
rclb
pop
sbb
lods
mov
mov
pusha
ja
fcompl
xchg
ret
pop
into
push
test
jle
lahf
and
push
iret
jmp
mov
or
xchg
sbb
je
lret
sub
dec
out
push
data16
dec
pop
mov
int
test
cmpl
push
mov
leave
xlat
inc
inc
aas
and
bound
mov
stos
push
mov
js
pop
jo
add
jp
push
hlt
test
sbb
rol
xlat
stos
jb
mov
out
jb
lds
jnp
sbb
pop
push
lret
cld
lcall
pop
loop
popf
pop
pushf
sub
and
enter
xchg
out
stc
daa
cmp
dec
xchg
scas
mov
xchg
repnz
xlat
call
and
jae
xchg
inc
xchg
hlt
mov
xor
aad
pxor
jnp
adc
clc
jge
test
cmp
cld
mov
sbb
mov
jmp
fstpt
ficomps
mov
scas
mov
inc
mov
insl
and
cmp
repnz
mov
add
ret
or
or
or
test
ret
push
and
xor
jg
insb
xchg
cs
mov
pop
test
in
mul
push
movsl
decl
push
imul
push
jbe
xchg
xor
pop
leave
enter
dec
sbb
sti
sbb
pop
mov
mov
stc
out
cmp
movb
incb
jmp
inc
push
pushf
cmp
test
int3
adc
stos
mov
xor
in
xchg
cmp
outsb
fmuls
test
inc
jge
shrl
mov
jae
sbb
mov
mov
pop
inc
leave
xlat
sub
sub
aaa
pop
div
daa
scas
xchg
pop
push
negb
xor
call
fistpll
cwtl
mov
mov
arpl
insb
into
ja
aam
popa
or
and
dec
mov
mov
jnp
out
aaa
frstor
dec
test
popa
rcrl
adc
and
push
movsb
shrb
add
xchg
notl
idivl
sbb
and
sub
enter
rcrb
xlat
mov
aam
outsb
jnp
sub
int
adc
mov
fdivrp
lock
iret
in
pop
and
imul
aad
sub
cmp
popa
adcb
push
jne
inc
push
scas
hlt
cwtl
mov
test
lahf
xchg
addl
mov
sub
movsl
inc
jbe
aam
pop
inc
adc
push
add
das
xor
out
pop
add
inc
and
imul
fldenv
cmp
xchg
movsl
dec
pop
mov
in
out
repz
adcb
lahf
and
mov
cmpl
mov
mov
lds
xchg
inc
sbb
jl
filds
adc
mov
outsb
sub
pop
sub
hlt
xor
scas
int
or
sbb
jl
repz
cmp
lods
push
mov
sub
pop
outsb
push
aas
sahf
sub
adc
in
rol
cmp
fwait
les
fstpl
or
lock
in
nop
fsubrs
cmp
mov
xchg
or
jecxz
ss
hlt
enter
out
lret
pusha
or
rolb
scas
and
hlt
jecxz
jp
mov
es
aad
adc
mov
ret
mov
cmp
rcl
cmpl
clc
ficomps
cmp
sbbl
cmc
rorl
push
lea
sahf
sub
xchg
out
fimull
in
lret
jnp
xor
push
sub
scas
hlt
aas
cmp
decl
out
fiadds
scas
in
push
inc
ficoml
mov
mov
cmp
sub
popa
out
sbb
sub
push
je
push
or
dec
out
jmp
outsl
scas
inc
addr16
hlt
repnz
mov
fxch
imul
dec
mov
cli
push
inc
mov
cmp
and
data16
jbe
ss
jbe
pop
xchg
jae
mov
insb
sbb
xchg
int3
inc
imul
mov
fidivl
xor
das
bound
fdivrl
test
xchg
fs
jns
out
push
sbb
and
fbld
nop
adc
movsb
xchg
jns
std
pushf
push
test
push
xchg
pop
adc
mov
and
xor
fnstenv
jge
out
push
aam
popa
out
jb
adc
jp
ret
test
nop
mov
adc
xchg
pop
jae
ret
or
jno
hlt
fisubl
xchg
adc
ret
push
sbb
or
mov
mov
push
negl
xchg
outsl
dec
xchg
mov
pusha
xchg
sub
fdivl
inc
pop
inc
add
cmp
cld
shl
xchg
std
cmp
dec
pop
fwait
mov
pop
sbb
das
ja
fldcw
mov
sub
cmpsb
das
orb
repz
call
sbb
push
daa
push
lods
add
pop
add
add
sbb
ret
push
out
lods
leave
fwait
lret
ljmp
rcll
addr16
imul
add
adc
cmp
inc
inc
aas
idiv
cmp
je
jge
fs
mov
dec
fwait
xor
push
mov
sub
mov
nop
adc
in
loopne
repz
icebp
sbb
cmp
int3
sbbb
test
in
std
cmpsb
jl
or
adc
cmp
sbb
push
lcall
lock
jmp
cmpsl
ja
fmull
cwtl
xchg
test
and
test
pop
jns
insb
test
clts
adc
xor
inc
adc
xor
mov
mov
add
repz
mov
cmp
outsb
add
mov
push
push
xchg
push
pop
sahf
shll
push
lea
push
dec
push
lahf
icebp
mov
fdivrl
sub
clc
test
mov
add
push
aaa
aad
mov
cmpsl
adc
cmp
call
mov
or
adc
jae
mov
mov
sub
test
inc
xchg
adc
xlat
gs
sbb
add
xlat
insl
and
xor
sbb
fcoms
ss
int3
pushf
dec
sahf
and
push
jbe
gs
pop
popa
mov
aas
xor
inc
repz
push
rcl
push
add
loopne
push
test
mov
icebp
lahf
add
sub
cld
jl
jmp
int
int
ret
lock
dec
mov
jle
mov
jmp
or
test
and
adc
and
xchg
cmp
insl
fld
mov
adc
pop
jb
mov
nop
movsb
push
cmp
out
dec
jbe
mov
mov
jecxz
dec
fbstp
push
imul
pushf
mov
fwait
cmpsl
rclb
nop
xchg
vcvtss2si
jl
cmc
es
andb
ret
push
repz
cltd
dec
scas
fcmovbe
fisubrl
testl
push
mov
adc
aad
enter
mov
lods
xor
cmp
and
pop
mov
testl
sub
and
cmc
js
or
pop
mov
lock
mov
or
push
scas
popf
cli
les
push
xchg
cli
jl
jmp
sub
negl
cmc
in
nop
xchg
mov
and
jl
jno
push
sysenter
enter
mov
fsubrl
or
mov
int
jge
cmpsb
jbe
push
dec
lods
loope
sar
dec
and
push
push
std
pop
ss
scas
jecxz
and
out
shrb
sub
and
add
adc
scas
mov
sub
shrb
or
add
cmp
push
mov
leave
push
adc
int
jb
test
inc
int3
adc
xchg
jnp
adc
test
lret
movsl
mov
sub
xor
sub
rcrl
iret
pop
push
pushf
xchg
pop
pop
scas
inc
xor
imul
lock
push
pop
cltd
xor
jl
enter
movsl
fbstp
stos
xchg
loop
roll
nop
stos
inc
into
dec
sub
dec
addr16
fwait
lahf
stc
mov
mov
add
stc
dec
fsub
pop
jmp
loope
insl
imul
and
pop
mov
sub
cli
pushf
mov
daa
scas
je
ds
inc
bound
hlt
mov
enter
xchg
scas
mov
xchg
jmp
lahf
fs
and
sub
sbb
adc
push
cmp
fs
mov
push
lret
push
testb
ficoml
or
out
push
inc
lret
pop
cwtl
adc
jns
xlat
das
inc
pop
stc
mov
into
cli
je
mov
add
xchg
cmpsb
call
iret
fs
jbe
fwait
les
icebp
xchg
int
jbe
add
lcall
add
test
aad
xchg
mov
add
je
mov
jle
out
pop
add
enter
push
dec
sbb
mov
mov
in
and
fmul
into
imul
push
sub
in
ljmp
dec
and
inc
and
les
lock
iret
push
ret
adc
fdivr
aad
outsl
into
sub
arpl
std
iret
jno
fwait
adc
idivb
cmpsl
hlt
repnz
xor
adc
cmp
aaa
leave
nop
loopne
jg
mov
jl
data16
daa
pop
adcl
xlat
push
mov
outsb
int
mov
dec
sbb
call
cmp
sbb
loop
jmp
sbb
cmp
mov
ja
sbb
lret
in
push
cmp
jns
pop
dec
push
push
test
iret
inc
test
inc
in
rcll
push
jbe
pop
insl
leave
and
rclb
jle
insl
testb
jg
fsubrs
push
mov
js
addr16
cltd
push
dec
or
cli
mov
mov
outsl
xlat
scas
xchg
aad
test
mov
pop
mov
add
sbb
xor
push
sub
cld
mov
dec
cmp
push
mov
cltd
stc
dec
push
addl
jle
scas
dec
ja
mov
push
dec
cmp
aas
pushf
mov
enter
cs
and
inc
das
lret
rcrb
frstpm(287
adc
fxch
mov
lret
dec
movsl
int
sbb
sub
push
inc
xor
pushf
fists
xor
mov
push
add
sbb
push
data16
daa
mov
xor
fisubs
and
cmpb
push
cmp
lods
inc
repnz
mov
inc
mov
in
jge
rolb
jae
sbb
jb
mov
lahf
aas
or
jo
or
mov
push
jl
inc
pushf
cmc
pop
jmp
ljmp
int
sti
aad
cmc
mov
int
push
mov
add
push
mov
aaa
pusha
mov
jg
mov
jmp
pop
mov
movl
jmp
int
dec
les
sbb
mov
cmp
adc
jne
sub
xchg
sbb
xchg
xor
pop
jge
add
xchg
add
ret
inc
xchg
xchg
dec
popf
jmp
sub
push
jle
xor
sbb
mov
mov
jl
jle
add
int
xlat
adc
filds
cld
std
inc
cmp
insl
adc
sbb
sbb
in
or
sub
inc
sbb
fistpll
adc
cmp
cli
or
and
jecxz
dec
pop
fistps
iret
cmpsb
ret
call
adc
pop
pop
push
fildl
std
or
mov
jo
sub
in
inc
xchg
xchg
dec
or
cmp
and
lods
xchg
cmp
in
jl
sub
psubb
adc
sti
jns
or
es
clc
cld
scas
jmp
mov
mov
pop
cmp
loop
sbb
loope
test
dec
sub
orb
cmp
fwait
xchg
cmpsb
sub
incl
fcoms
push
iret
lcall
ret
or
mov
xor
mov
cli
in
shll
or
jmp
dec
inc
sahf
xchg
or
dec
jns
out
and
mov
mov
inc
insb
xor
and
lcall
repnz
cmpsb
mov
andb
push
imul
push
sbb
jo
cmpsl
pushf
sub
rcrb
jmp
sub
xor
stc
sbb
pop
mov
sub
mov
in
inc
int
add
jbe
aam
bound
dec
cmp
clc
mov
ret
mov
jge
popa
rcr
cmp
call
adc
pop
repnz
movhps
frstor
out
fildll
insb
adc
or
sbb
adc
fistps
nop
stos
dec
leave
mov
jo
sub
jg
jle
add
mov
adcb
xor
sub
call
loop
mov
cmp
or
jne
add
mov
sahf
xor
mov
popa
gs
adc
sbb
jbe
clc
inc
insb
mov
xchg
lea
and
cmp
popf
pop
push
fidivrl
pop
mov
cwtl
cld
cmpsl
cltd
push
push
hlt
push
sbb
jbe
repnz
cwtl
jge
scas
and
push
incl
loope
jnp
fcmovnu
fimull
outsb
rcl
loope
out
jo
pop
sub
daa
push
loope
xchg
lods
std
push
mov
mov
mov
loopne
fcoms
mov
imul
and
movsb
int3
jecxz
pop
cmpsb
sub
lcall
jbe
sub
imul
cmp
int
and
clc
mov
test
imul
outsb
repz
lret
int
xchg
mov
cmp
les
lahf
imul
inc
lock
pusha
adc
mov
dec
fldcw
cmp
sub
mov
test
leave
inc
sub
mov
ret
jne
xchg
lock
ja
fs
and
pop
jge
xchg
lret
mov
sti
push
cmpsb
or
pop
aaa
popl
or
lods
fstl
jo
adc
outsl
push
dec
scas
jp
adcl
jo
lods
icebp
xchg
jbe
orl
mov
cmpsl
push
pop
popa
pushf
jbe
mov
jne
xchg
pop
std
test
or
leave
subl
push
call
enter
ja
cmpsb
icebp
pop
in
sbb
add
stos
and
js
je
imul
sub
rol
xlat
xor
cmp
jmp
js
xor
rcrl
dec
mov
push
push
cmpsb
mov
dec
xlat
loopne
push
loop
ror
xchg
push
jp
mov
in
jmp
jmp
dec
lds
lret
jo
addr16
sbb
arpl
inc
inc
and
push
push
mov
call
fistl
add
pusha
mov
roll
sarl
cwtl
jmp
aad
scas
enter
int3
je
add
std
xchg
xorl
fisubs
mov
ljmp
mov
sub
cld
mov
mov
sbb
lock
push
cmpb
mov
shll
push
jmp
xor
and
mov
mov
jmp
mov
push
and
sbb
pop
xlat
fdivrl
ds
in
jg
pusha
lea
xchg
add
add
test
push
popa
dec
dec
mov
jno
out
jmp
das
js
cmc
fdivp
int
cmp
add
lock
inc
repnz
imul
mov
or
jo
test
cmp
fidivl
adc
lcall
jae
mov
subl
push
lock
test
popf
mov
push
andb
and
aad
cmpsl
je
xorb
lods
test
add
iret
loop
xchg
jge
cld
pop
fmulp
jp
jmp
sti
and
mov
xor
or
cmpsl
push
insb
and
fdivrs
cmp
jae
cmp
testl
test
pop
sbb
pusha
inc
pop
push
lods
dec
and
sbb
xchg
sbb
jmp
int
repnz
sub
dec
sub
scas
cltd
loope
ss
mov
ljmp
mov
out
lods
push
rcll
adc
or
sbb
shl
js
or
loope
jo
shrl
cs
jnp
sbb
pop
mov
add
adc
jl
out
cmp
data16
inc
mov
mov
addr16
sub
mov
sbb
xchg
cli
jp
sbb
in
loope
mov
pop
mov
add
pop
or
ljmp
cmp
inc
lock
ja
fimull
daa
and
dec
andl
incl
imul
addl
inc
xorl
pop
push
cmovno
xor
mov
jb
add
fs
mov
and
inc
inc
push
daa
mov
jne
xor
and
mov
or
shrl
xlat
insl
out
add
dec
or
ret
cmp
mov
jge
pop
andl
setnp
push
mov
pop
in
outsb
mov
arpl
lock
in
ficoml
clc
jbe
mov
adc
inc
shl
mov
mov
imul
dec
mov
sbb
mov
and
ret
mov
pop
fdivl
int
and
jmp
jae
push
pop
push
lahf
add
lods
cmp
sbb
jg
es
cmc
and
paddusw
gs
lock
gs
xchg
movb
pop
cmpsb
jg
pop
adc
mov
push
xchg
and
pop
scas
dec
pop
mov
sahf
lret
add
inc
jnp
mov
dec
jae
jl
out
loopne
icebp
stos
insb
xchg
dec
xor
in
add
sbb
mov
les
or
fimuls
scas
or
idivl
xchg
movb
out
data16
icebp
cmpsl
jo
inc
dec
mov
push
and
add
ffreep
mov
icebp
imul
jns
jo,pn
insl
push
dec
jbe
ficoml
out
testb
and
fwait
insl
fstl
mov
cmp
stc
out
mov
cmp
js
iret
rcrb
leave
mov
xor
xchg
cmp
inc
mov
cs
cmp
sub
movsb
int3
test
or
pop
into
ret
pop
mov
mov
pop
lds
les
mov
or
arpl
jae
and
test
gs
fwait
push
sub
insl
jbe
rcrb
inc
popa
adc
cmp
fadd
or
push
je
xor
pop
mov
sti
testl
nop
xor
dec
jg
ss
into
mov
mov
jmp
pop
cwtl
jne
sbb
mov
insl
fidivrs
jmp
jg
xorb
nop
imul
pop
sbb
addr16
lret
cmc
aam
mov
mov
mov
mov
push
dec
ds
ret
call
xchg
mov
jecxz
cmp
dec
lods
es
shlb
movb
inc
fnsave
sbb
push
mov
sbb
adc
mov
lods
insl
mov
icebp
clc
jnp
out
push
dec
mov
in
inc
lcall
fs
dec
enter
imul
das
out
xor
mov
xchg
insb
push
dec
fadds
or
lea
movsb
cs
aad
loopne
push
mov
imul
mov
enter
rcrb
stos
or
movsb
mov
push
adc
and
push
stos
push
ret
ficompl
cld
fsubr
rorl
in
popf
pop
mov
stc
or
iret
out
mov
into
rorl
jne
cmp
adc
lea
sbb
in
cwtl
jle
test
ficomps
stc
push
lock
mov
mov
add
mov
nop
mov
les
dec
jg
sbb
or
sbb
mov
push
jg
add
popa
dec
leave
fdivs
pop
push
jmp
dec
adc
inc
sub
cld
clc
add
inc
cmp
mov
sub
fxch
into
addr16
jo
inc
adc
and
in
stos
cs
jmp
mov
mov
idivl
lea
add
jns
mov
sub
dec
repz
add
sub
xchg
sbb
xchg
xchg
jns
xor
dec
in
sbb
imulb
pop
out
add
pop
jae
repz
cmpl
rclb
sbbb
mov
lods
xchg
cmpl
test
idivb
cltd
lret
stc
scas
push
mov
je
lods
out
ret
shlb
or
sbb
mov
xchg
pop
shlb
cwtl
jns
sub
sbb
mov
aam
push
imul
cmp
rolb
or
sar
fwait
cltd
xchg
or
jns
fdivs
jecxz
xchg
xchg
mov
scas
cli
out
or
jecxz
or
inc
scas
sub
mov
in
push
push
fnstsw
scas
sub
hlt
test
jb
jg
sbb
pop
xchg
fldl
lret
outsl
sub
repz
mov
ret
pop
inc
mov
lret
lcall
mov
lahf
push
stc
inc
xor
subb
adc
pop
out
jmp
cmp
jge
bound
repz
stc
call
ljmp
sub
dec
pusha
pop
adc
pop
out
and
shr
popa
movl
dec
leave
pusha
fistl
sbbl
add
cmp
sub
and
or
mov
incl
scas
rolb
jno
xorb
nop
nop
dec
inc
fstpt
insb
mov
in
add
stc
and
arpl
fldcw
cmp
and
jb
jns
cs
fnstenv
jmp
mov
push
adc
and
shlb
push
lods
add
mov
pop
aas
test
adc
jnp
jg
xchg
leave
push
inc
pop
push
xor
push
aad
mov
int
push
xor
push
xchg
out
jbe
xchg
aad
push
push
dec
loop
push
inc
jge
int
mov
imul
inc
in
lret
push
ljmp
xlat
sbb
inc
movsb
les
mov
cmp
enter
mov
pop
push
jmp
mov
mov
mov
aam
hlt
cmp
add
lret
iret
sarb
daa
pop
into
in
and
cmc
mov
adc
mov
and
mov
xor
lret
inc
std
pop
push
push
mov
pop
testb
lods
push
inc
lods
push
xor
shrb
into
mov
stos
hlt
sub
or
enter
pop
testl
xchg
aas
jmp
test
lret
pop
cmp
ja
cltd
sbb
ja
clc
add
xor
stc
inc
outsb
sbb
jne
push
cmpsb
xorb
mov
lcall
mov
clc
mov
inc
pop
lcall
dec
and
clc
cs
popf
mov
repz
adc
push
in
adc
popa
jle
xor
xor
push
sbb
ret
mov
and
mov
mov
adc
rorl
popa
add
mov
adc
out
jecxz
shll
or
adc
xor
pop
aaa
jne
and
mov
ljmp
mov
or
mov
aam
es
push
or
cmp
pop
lds
nop
je
push
mov
adc
add
cmc
mov
sti
add
sub
or
xor
sti
lret
dec
jae
push
shl
dec
out
scas
loope
andl
add
push
imul
fdivs
fcomps
push
or
xchg
lret
int
inc
repnz
mov
sbb
dec
pop
imul
jp
xchg
mov
testb
push
xor
int
add
mov
in
aaa
out
jbe
mov
mov
adc
xor
mov
enter
lret
adc
sub
dec
adc
jns
and
jns
adc
jmp
mov
jb
cmp
flds
imul
xor
push
or
insb
ret
dec
rcll
jo
push
popa
cmpsl
in
inc
test
push
test
lods
popa
push
cmp
xor
inc
sbb
loopne
dec
dec
or
adc
xchg
xchg
es
out
pop
cmp
and
das
push
lea
test
out
jnp
mov
iret
pop
inc
cmp
test
or
int3
jae
jbe
sti
in
sub
clc
lock
lds
adc
cmpsb
fisubrl
push
mov
push
lret
fcomps
inc
movsl
lock
int
repnz
cmc
hlt
jp
fists
fst
jecxz
dec
and
ret
fildl
sbb
push
mov
sahf
ja
popf
lcall
faddl
in
in
xlat
loop
out
mov
cwtl
or
jg
sub
push
adc
jmp
sbb
cmp
adc
sub
mov
out
outsb
icebp
sub
cmpsb
leave
ds
shrb
xlat
fnclex
xchg
add
sub
test
lcall
jnp
or
or
mov
push
aas
xchg
fwait
jbe
xor
shll
ret
call
in
lods
mov
and
movsb
test
es
popa
insb
mov
xchg
push
jle
push
lods
dec
outsb
push
enter
lcall
jp
std
aad
jns
xor
or
cld
rcl
inc
mov
notl
stos
sub
movsb
addr16
in
stos
dec
mov
outsb
xor
sbb
adc
shl
js
adc
add
subl
jge
sub
adc
sub
dec
mov
and
jle
push
int
push
sbb
in
cli
pop
inc
push
js
cmp
xchg
scas
out
push
mov
into
push
push
packsswb
adc
lahf
aaa
mov
push
gs
test
xchg
jae
cmp
jp
mov
xchg
sahf
jno
pop
push
insb
push
int
mov
cmovnp
aaa
dec
mov
sahf
outsb
cmpsl
fwait
add
xchg
cli
mov
mov
mov
cmp
pop
dec
add
pop
aaa
scas
or
sub
test
lock
imull
add
outsb
stc
std
cmp
push
cmp
lcall
jno
loope
incb
daa
les
jne
daa
fs
add
cld
faddl
stos
push
addr16
xlat
out
or
push
pop
and
xor
push
mov
sti
jno
inc
or
dec
mov
mov
movsl
ret
inc
or
js
repnz
fiadds
or
dec
mov
cltd
mov
and
repnz
mov
out
inc
adc
mov
mov
fistl
adc
mov
mull
lds
or
and
push
cs
rolb
inc
sbb
sbb
es
hlt
mov
inc
inc
push
hlt
mov
out
jo
fwait
inc
fdiv
data16
ss
xchg
in
fucomp
lret
addr16
andl
xchg
in
lea
rcll
mov
sub
sub
mov
mov
addb
or
out
pushf
test
lret
iret
mov
das
sub
mov
adc
movsb
call
popa
push
sbb
xchg
sub
mov
lods
scas
in
adc
sbb
into
cmp
cmpsb
cmp
lock
fistl
movsb
sbb
test
jae
inc
pop
lds
shlb
stos
cmpsl
add
stc
loop
ljmp
cld
mov
push
push
arpl
bound
lea
and
leave
push
sub
mov
lods
push
jg
push
mov
cmp
or
mov
int
ss
xchg
add
pop
ljmp
daa
fst
hlt
adcl
adc
nop
jp
iret
dec
ja
les
xor
xchg
loope
mov
mov
or
fs
sahf
pop
lahf
jb
shlb
add
movsl
inc
cmp
push
mov
xchg
dec
mov
fs
and
cmpsw
inc
clc
ja
out
enter
outsl
sahf
insl
pop
mov
roll
cli
pop
int3
xorb
xchg
jg
dec
or
mov
mov
outsl
aas
mov
pop
mov
inc
aad
aad
jge
pop
lds
add
push
xchg
sub
xor
or
jg
sbb
adc
push
sar
mov
cmp
adc
cmpsb
pop
xor
push
and
push
jo
aad
sub
aam
mov
fwait
cmc
aad
das
repz
inc
out
pop
inc
in
dec
xor
mov
push
push
push
pop
fcoms
mov
lret
and
into
cwtl
pusha
xor
lods
jmp
shrl
pop
mov
and
sbb
add
pop
or
scas
dec
or
push
or
imul
adc
sti
cvttps2pi
shll
push
fwait
push
dec
stc
add
jnp
aam
ds
mov
fsubrs
ja
cltd
cmpsb
subl
insl
jno
nop
sub
adc
data16
les
es
xchg
nop
mov
stc
clc
and
and
insb
push
into
lahf
imul
sbb
clc
add
jnp
cmpsb
or
scas
into
pop
xor
icebp
int3
cmp
fildll
fdivs
pop
incl
jno
cmp
mov
sbb
jno
leave
scas
rol
or
jno
jl
popa
inc
pusha
mov
cmp
pop
lods
or
scas
icebp
enter
or
in
cmp
stos
jle
loop
movl
out
fwait
movsl
cli
cmp
jbe
cmp
rorl
sbb
call
xor
je
and
clc
inc
mov
pop
pop
in
xchg
rol
daa
xchg
push
repz
adc
movsl
nop
push
andl
push
lods
push
outsb
jmp
add
or
jl
lret
enter
xor
lcall
loope
jge
or
push
mov
lods
adc
data16
mov
fistpl
push
mov
divl
or
mov
sahf
aad
inc
add
repnz
cmpsb
push
pop
jns
mov
cmp
jbe
xchg
jae
and
push
sti
sub
or
mov
inc
ror
fsubl
pop
mov
loop
ret
stc
hlt
pop
gs
in
inc
xchg
or
sub
hlt
loop
loop
test
mov
push
pcmpeqd
or
or
or
movl
outsl
jle
cld
xchg
popf
jmp
mov
jle
dec
je
bound
mov
adc
or
and
mov
ffreep
popf
daa
adc
xorb
test
jg
push
or
subl
int
pushf
insl
pop
mov
imul
push
cld
imul
mov
sti
jno
pop
subb
inc
xor
int
and
add
lcall
dec
sti
inc
int
loope
push
cmpsb
popf
mov
xchg
mov
sbb
dec
mov
lock
int
pop
jne
arpl
js
icebp
push
repnz
lahf
lret
lret
lock
cld
hlt
test
jge
push
pop
push
mov
andb
loope
pop
popa
adc
mov
mov
sub
pusha
lahf
dec
adc
pop
lcall
imul
testl
and
je
cltd
mov
movq
jge
pop
mov
push
push
pop
sbb
js
loope
mov
sbb
dec
pop
std
cli
and
push
in
push
push
jns
aad
clc
dec
mov
xchg
lret
in
add
std
cmp
or
cmp
dec
notb
std
bound
inc
mov
push
fs
dec
sbb
lret
mov
add
iret
rorb
jo
mov
mov
cmp
mov
int3
xor
lea
hlt
sub
imul
movsl
push
xchg
xor
dec
stc
movl
mov
and
cli
mov
xor
sbb
cmp
rorb
testb
push
adc
insl
mov
std
inc
xchg
pop
push
push
scas
xor
dec
lods
inc
cmp
sti
add
bound
gs
mov
movsb
xlat
jne
mov
insb
pop
mov
dec
sub
xchg
out
jo
mov
std
ret
sbb
pop
adc
orl
sbb
cld
mov
and
and
test
add
imul
repnz
popl
rep
fs
ds
add
dec
test
inc
dec
sbb
push
sahf
sub
popf
pop
shrb
pop
mov
mov
mov
sbb
out
push
sbb
adc
xor
and
std
test
inc
and
fnsave
sbb
aaa
xchg
mov
inc
push
mov
pop
out
inc
add
repnz
mov
int
dec
test
cmp
dec
sbb
dec
xchg
xchg
mov
lea
stos
add
fdivs
inc
shrl
pop
sub
stos
mov
dec
rcl
xor
aaa
lcall
ja
and
sub
cmp
aad
loopne
inc
jae
jecxz
xor
pop
in
mov
mov
fildl
aam
ret
lret
mov
xor
sar
jbe
sbb
sbb
sahf
sub
call
dec
mov
pop
jmp
movq
xchg
mov
ret
sbb
inc
pop
lods
inc
xor
add
and
lods
xchg
fildll
leave
in
fs
test
lds
mov
roll
lret
pop
mov
mov
movsb
fnstenv
mulb
cld
sbb
jecxz
xor
inc
pop
push
jno
imulb
xor
or
movsb
inc
lret
mov
jne
cmp
xchg
and
mov
lods
dec
dec
sub
push
mov
push
and
mov
inc
les
in
sarb
inc
cmp
push
sub
sbb
jbe
and
dec
fmull
mov
gs
scas
test
mov
add
jo
mov
add
js
xchg
adc
ljmp
jns
pop
and
fisubs
mov
xor
lea
cmc
das
dec
pusha
clc
push
ret
adc
in
movsl
sti
push
and
sub
lret
cmc
xchg
leave
jp
xorl
pusha
sub
and
jp
out
inc
scas
and
pop
imul
cs
adc
stos
jbe
repnz
stc
jnp
cwtl
fstpl
inc
flds
cmp
mov
push
lea
cld
jnp
pushf
gs
insl
pop
pusha
inc
mov
xor
xchg
mov
mov
cld
xchg
jno
test
inc
out
jmp
adc
or
jbe
sahf
and
lret
mov
enter
insb
inc
icebp
xor
les
push
cmp
orl
adc
call
mov
xlat
cmp
pushl
mul
out
mov
adc
stos
je
mov
sub
xchg
dec
sbb
ror
pop
push
scas
push
mov
adc
mov
pop
data16
sbb
insb
lret
mov
and
mov
pusha
ret
push
and
adc
jo
xchg
push
xor
dec
addb
test
ret
les
int
and
pop
sarb
test
dec
xor
in
dec
cmpsb
outsb
dec
jp
les
int3
shl
mov
inc
jns
fmull
ds
jno
out
pop
xor
add
push
pop
add
ds
fstps
jg
rorl
add
fsubrl
sbb
jno
mov
notl
cld
push
mov
fs
fsts
ficomps
fnstsw
mov
in
popf
adc
xchg
adc
test
jl
mov
ret
cmp
push
std
and
adc
daa
sarb
leave
mov
mov
nop
out
leave
jne
push
jnp
loop
jae
mov
sub
lds
out
arpl
mov
jg
inc
sub
dec
xchg
sbb
pop
loop
push
popa
jecxz
std
loop
and
xchg
sti
into
xlat
push
loop
iret
mov
adc
xchg
negb
jb
cmp
mov
jecxz
fiaddl
in
cmp
ljmp
xchg
add
les
jecxz
pop
mov
push
xor
adc
jl
mov
mov
loop
inc
push
lds
pop
pop
adc
mov
jmp
pop
or
stc
mov
call
pushf
sub
pop
insb
cld
pop
mov
sbb
jnp
jae
xchg
cld
push
out
push
inc
movsb
loope
shl
hlt
jge
in
cmp
imul
and
add
imul
lds
inc
xchg
in
mov
and
sbb
jns
adc
ds
mov
je
out
mov
mov
push
add
aaa
sbbl
filds
adc
mov
xlat
xchg
popf
mov
sub
xor
or
sub
sbb
mov
repz
jns
ficomps
lds
cltd
mov
call
loop
mov
mov
xchg
adc
loope
je
or
lret
sub
sbb
ljmp
cli
add
cmp
je
insb
mov
or
lret
inc
pop
or
xchg
inc
test
out
mov
adcl
add
dec
mov
adc
fldcw
mov
push
scas
mov
hlt
mov
scas
popf
mov
inc
sar
aaa
inc
shl
push
add
stc
sub
imul
sub
enter
in
imul
pushf
imul
jb
pop
sub
xchg
xor
xchg
mov
jp
out
fwait
adc
in
ds
add
jne
xchg
or
pop
adc
std
inc
inc
out
cltd
into
and
leave
mov
imul
ss
push
mov
jge
pop
ds
push
stc
jle
jmp
mov
fwait
or
jb
dec
nop
pop
je
outsb
dec
int
fs
jns
gs
rcrl
adc
xchg
aad
ja
subb
sbb
js
ss
loop
insl
cmpsl
daa
pop
adc
pop
std
hlt
icebp
das
sbb
arpl
mov
xlat
xchg
hlt
sub
imul
pop
sub
and
fwait
aaa
jns
pop
fmull
push
jmp
imul
mov
and
mov
push
add
lods
cli
into
xor
xchg
lods
mov
push
xor
insb
scas
in
pop
aaa
sbb
jg
gs
ret
xchg
cld
pushf
mov
test
jle
mov
adc
xor
or
sbb
aad
fldcw
and
dec
rclb
mov
mov
lds
out
clc
sbb
push
fstpl
pop
pop
add
int
ja
sbb
arpl
aam
ds
or
mov
adc
jnp
ds
pop
and
dec
xchg
xlat
sub
sbb
add
inc
lea
xchg
int
je
mov
call
hlt
cmp
inc
xor
xchg
or
mov
lcall
gs
fdivrp
inc
test
sub
sbb
sti
mov
loope
inc
pop
daa
jnp
adc
enter
outsl
je
push
sub
inc
mov
push
je
repnz
pusha
in
push
add
out
push
sbbb
mov
jbe
xor
jg
lods
push
xor
repz
sti
stos
push
movsb
mov
mov
dec
test
xchg
addl
cmc
sub
repz
inc
pop
shlb
je
mulb
xchg
aad
xchg
inc
jnp
hlt
sti
dec
pop
jnp
push
or
xchg
jb
aaa
popa
lcall
cli
insb
lods
das
fistpl
jp
bound
pop
or
or
mov
pop
fldl
sbb
mov
or
rolb
xchg
aam
xor
movsl
mov
inc
test
add
outsl
sub
jg
gs
lcall
jno
or
fsts
shl
jb
push
in
adc
incb
scas
sub
lea
ja
das
les
aam
imul
test
lock
inc
addb
popa
or
mov
sub
orb
lods
xchg
add
jge
pusha
lcall
mov
jge
shrl
or
out
loopne
ret
nop
test
in
daa
and
std
pushw
jg
rcrl
repnz
lret
in
xor
push
stos
in
or
and
mov
call
xor
outsb
sub
pop
add
mov
std
inc
sbb
in
jle
lock
dec
insb
cmp
mov
push
dec
jp
repnz
test
add
nop
pushl
pop
nop
inc
inc
lods
shr
outsb
or
and
push
insb
sbb
aaa
xor
in
sbb
das
jl
jge
loopne
das
ljmp
or
push
mov
int3
int
std
cmpl
stos
insl
mov
call
stc
lods
mov
mov
cltd
jo
or
repz
outsl
lods
and
inc
lcall
xchg
jp
idiv
push
lock
loope
mov
ret
aad
ret
mov
jbe
sub
mul
int
insl
xchg
pop
mov
mov
ficompl
inc
mov
mov
les
shlb
dec
cmp
in
inc
push
sub
sub
loopne
lds
cmpsl
movsl
rolb
sbb
adc
test
pop
mov
pop
sbb
out
into
inc
dec
and
sub
mov
inc
adcl
cmp
sarl
lahf
inc
loopne
rcl
gs
push
mov
pop
pop
mov
out
and
jnp
imul
andb
and
aad
rcrb
andl
adc
lea
mov
imul
mov
sarb
xor
push
mov
sbb
enter
shr
inc
cmp
stos
lods
notl
xchg
dec
ds
or
adc
xor
mov
mov
fimull
inc
lock
pop
lock
pushf
ja
stos
ret
jno
lcall
adc
pop
lret
hlt
push
inc
jmp
dec
add
aas
call
js
inc
out
and
scas
dec
pop
push
mov
inc
imul
fstps
jmp
sbb
mov
out
push
jmp
shlb
mov
lds
fmuls
in
aas
push
aad
fucomp
pop
mov
mov
mov
dec
in
jge
cmp
xchg
add
add
loop
test
in
aas
mov
imul
jecxz
push
mov
jne
cmc
jb
ds
mov
jne
ret
sub
aaa
xor
sub
ret
insb
adc
push
dec
sbb
sub
jbe
out
dec
pop
push
repz
dec
jno
inc
popl
add
mov
out
int3
xchg
pop
inc
testl
xor
cmp
cmc
lods
mov
mov
int3
sub
testb
adc
aaa
cmp
mov
cs
daa
push
pop
movsl
pop
aaa
in
addb
pop
pop
lea
roll
jle
xchg
mov
mov
ss
lds
nop
repnz
rorl
cmp
adc
xchg
xchg
rcr
pop
adc
mov
pop
int
pusha
add
push
mov
fwait
pop
or
or
fucomi
cmp
or
jb
push
lcall
call
mov
mov
es
iret
cmc
jo
mov
aam
and
data16
sbb
mov
push
insl
jp
xchg
insb
scas
out
cmp
shll
lret
add
jge
xchg
adc
arpl
mov
cs
cmc
sub
xor
out
adc
mov
sahf
imul
xor
cwtl
sub
lods
out
fs
fwait
bound
test
mov
adc
je
icebp
xchg
mov
cmp
int3
or
lret
in
out
xor
shr
unpcklps
jnp
dec
aam
int
ret
pop
pop
pop
mov
mov
xor
xor
mov
and
mov
aaa
cmp
jns
cmpsl
xorl
cmp
inc
loopne
sbb
into
inc
inc
mov
or
mov
push
and
lods
inc
dec
ss
sub
or
enter
xchg
cmp
int
jmp
out
or
jmp
mov
mov
fwait
ds
dec
mov
ljmp
xlat
test
push
test
push
aad
stc
sub
ret
sahf
ljmp
xchg
sub
xor
sub
out
xlat
aaa
push
popa
orw
sub
aas
xor
add
cli
push
mov
mov
lods
ja
les
xor
sub
push
out
es
iret
inc
mov
add
in
or
mov
jne
das
out
jmp
scas
call
bound
or
test
mov
lcall
ret
sbb
sbb
xchg
leave
hlt
daa
pop
movsb
iret
adc
bound
cmp
or
add
pusha
add
mov
movsl
xor
repnz
repz
sbb
add
or
aaa
rcll
and
lock
add
mov
fidivrs
sub
sbb
cld
mov
mov
jmp
xchg
xor
or
mov
repnz
notl
out
or
aam
lea
aaa
xchg
mov
cmp
mov
je
push
mov
jl
add
mov
les
movsl
pop
xor
lods
pop
sbb
decl
scas
push
pop
iret
dec
xchg
jge
stc
jle
test
gs
pushf
jmp
push
clc
mov
add
addb
pop
fwait
mov
cmc
in
push
scas
into
pop
icebp
jg
xchg
enter
inc
sbb
call
pop
or
pop
inc
inc
lods
rcll
push
and
sbb
stc
lock
lcall
cmp
ret
lret
ror
pusha
sub
inc
jle
lds
in
jne
fidivrl
das
jle
stc
lcall
mov
rcrl
xchg
and
lods
pop
or
test
and
and
or
lock
mov
xor
push
dec
cmpb
lret
adc
cltd
inc
xchg
cltd
mov
lcall
enter
cltd
data16
jecxz
or
xor
sub
fwait
repz
jg
mov
mov
push
add
sub
dec
add
push
pop
aas
nop
in
mov
popa
cld
stos
lock
gs
sbb
cmp
dec
cmp
in
inc
push
insb
adc
hlt
sbb
ss
push
inc
sbb
pusha
lcall
mov
hlt
mov
lea
jo
and
cmp
jb
xor
dec
lret
out
dec
or
cmp
addr16
xor
lea
dec
xor
data16
enter
jno
inc
shl
arpl
push
std
mov
cmp
pop
cld
nop
int3
sbb
movsb
pop
or
and
or
aas
andb
cltd
or
mov
push
mov
movsl
inc
cld
xchg
fwait
nop
mov
push
movsb
inc
lahf
mov
and
cmpsb
pop
inc
ret
cmp
test
jle
movsb
addr16
decb
cmp
push
lods
push
adc
mov
stos
fdivl
jo
or
out
lret
jle
lock
cmp
jne
cmp
add
test
mov
fs
fmul
imul
and
cmp
inc
cmc
adc
inc
outsl
ja
add
cmc
dec
gs
lds
lds
iret
pop
aaa
stc
cmp
cmp
lds
cld
sti
sbb
mov
mov
push
inc
jl
loopne
movsb
jge
push
cmpsl
cld
push
cmp
mov
scas
out
pop
lds
cmpsl
es
cmp
sub
jbe
mov
andnps
sbb
push
sub
cmp
ja
fidivl
inc
leave
cs
xor
cmp
fcmovnb
jge
ja
pop
test
fwait
mov
movsb
imul
add
add
data16
out
jecxz
nop
movsl
cmc
push
push
leave
mov
je
int3
cmp
es
dec
jnp
dec
ss
push
jp
push
lcall
and
outsl
lcall
pop
ds
cs
je
lds
pop
in
stos
push
mov
sub
push
sbb
jg
mov
repnz
sbb
cmpsl
in
ss
mov
roll
imul
mov
movsl
fists
fcomps
in
xchg
lret
insb
mov
mov
push
pop
jmp
mov
daa
outsb
push
and
push
jmp
sbb
mov
loop
mov
mov
cld
scas
mov
aad
adc
les
and
les
cmp
lds
push
test
pop
sbb
push
jb
xor
mov
lea
mov
sarb
test
in
pop
mov
xor
mov
mulb
sub
add
fldt
je
push
fs
sarb
adc
bound
or
xor
jae
or
mov
inc
ja
xchg
into
jne
cwtl
and
mul
inc
fildll
aas
mov
fistps
add
lods
cltd
jbe
inc
lods
test
mov
jl
xchg
dec
daa
iret
push
repnz
mov
jle
outsb
fwait
test
mov
jg
insb
sub
test
in
jb
mov
push
mov
cmp
jg,pn
pop
dec
mov
xor
pop
lcall
adc
adc
dec
imul
bound
mov
daa
push
nop
negb
jbe
filds
fmull
jo
mov
cmpsb
out
in
push
rcrl
je
insb
add
cmp
add
sub
repz
adc
pusha
sub
pop
add
mov
orl
popf
data16
xor
push
fwait
lret
mov
shr
es
mov
aam
lods
movsl
shrb
scas
movsb
mov
and
call
popa
int3
lock
insb
fadds
out
sbbb
adc
movsl
popf
repz
xchg
xlat
dec
test
sub
lcall
jle
pop
test
push
and
call
add
notb
fistpl
pop
in
imul
faddl
mov
pop
and
fisttps
gs
sub
mov
or
roll
jne
mov
fmull
imul
and
dec
push
inc
push
in
cld
add
mov
mov
rolb
movsl
ds
cs
mov
cmp
jo
or
mov
notb
add
data16
lods
in
movsb
fdivl
mov
xor
fwait
jecxz
sbb
jb
mov
in
xor
into
jb
push
scas
ds
repnz
imul
lods
cmp
pop
test
xchg
rcrb
push
out
repnz
mov
push
or
mov
adc
imul
out
mov
or
es
pop
mov
xor
fistl
jb
push
aad
sub
adc
clc
stos
shll
in
xor
xor
xlat
add
mov
in
inc
lods
lock
xchg
in
ret
fwait
mov
shll
xlat
xor
lahf
outsb
mov
push
lea
add
push
fs
andl
sarl
mov
mov
outsl
push
cmp
jno
jle
and
inc
cli
fwait
jecxz
stos
sub
xchg
push
mov
cs
push
mov
std
lret
or
in
mul
cmp
loope
cmp
sbb
push
ds
lea
xor
jmp
dec
xchg
popa
inc
mov
sbb
xchg
add
in
adc
sbb
fildll
or
and
push
das
in
push
or
jb
push
jg
pop
and
adc
xchg
jmp
gs
add
mov
mov
dec
in
stc
push
imul
jmp
les
pushf
mov
xlat
xlat
mov
repnz
je
ror
imul
lret
lods
adc
and
int3
and
mov
xadd
ljmp
cli
lods
pop
or
pop
fistpll
pop
push
pop
jmp
in
add
subb
dec
add
push
jmp
ret
mov
sub
push
pushf
cmc
popf
loop
cmp
inc
xor
jge
es
fmuls
lds
lret
sub
mov
aaa
fsubrl
jp
lock
in
hlt
enter
push
roll
mov
xor
push
push
setg
sub
in
mov
clc
dec
gs
jno
mov
dec
ret
cwtl
push
hlt
adc
mov
sti
and
add
lock
push
mov
pushf
mov
add
add
dec
mov
leave
xchg
mov
fists
nop
mov
and
inc
pop
loope
outsl
and
pop
mov
mov
mov
call
xor
mov
arpl
repnz
aam
mov
push
ret
fldl
inc
jno
mov
fcmovnu
inc
jle
jge
sub
mov
or
aaa
xchg
adc
inc
test
sub
push
stos
push
stc
lcall
fdivp
fcomps
lcall
and
mov
sti
jb
cmp
aam
jmp
outsb
shrb
clc
mov
mov
or
aaa
rolb
or
mov
mov
pop
push
xchg
das
jge
cmpl
je
cmp
inc
mov
arpl
leave
inc
mov
stc
stc
cmp
call
lds
dec
fdivrl
outsb
sub
out
fstpl
lods
ja
mov
mov
mov
shlb
repz
nop
sbb
push
pop
mov
add
sub
sbb
sbb
mov
dec
lds
cmp
and
loope
xor
xchg
out
pop
xor
jae
gs
cltd
outsb
aad
dec
mov
aam
mov
mov
sbb
pop
pop
cld
and
push
arpl
pushf
stos
ds
repnz
int
bound
push
push
pop
push
lahf
push
and
mul
lcall
or
mov
in
mov
cltd
imul
cli
jp
xchg
test
jecxz
cmp
fstpt
call
xchg
jle
mov
mov
lock
icebp
test
sub
das
and
mov
stos
xchg
or
mov
scas
jae
jecxz
dec
stos
xchg
hlt
inc
jecxz
pop
add
push
out
xor
lcall
lcall
xchg
adc
jp
xor
jno
jp
rorl
xlat
divl
jns
xchg
lods
sbb
push
or
lods
xor
add
sub
jg
fidivl
push
outsw
rcrb
fidivrs
xchg
push
mov
pushf
call
cld
and
xchg
jmp
mov
iret
jno
mov
dec
add
orl
or
or
or
sub
xchg
repnz
scas
inc
shl
stc
or
repnz
rcrb
sub
jp
xchg
adc
adc
roll
leave
shrl
addr16
andb
inc
mov
xchg
sub
bound
and
and
pop
jge
adc
fptan
mov
enter
mov
sub
jg
inc
js
fstpl
ja
test
sub
sbb
and
inc
cmp
popf
call
sub
lods
and
pop
popf
mov
xorb
fmuls
sub
mov
mov
push
dec
jns
jg
movsb
lock
mov
jmp
pushf
mov
cld
repnz
loop
dec
lods
faddl
dec
ror
xlat
test
popf
add
sub
fcoms
push
pop
inc
out
add
cmpsl
test
and
lock
rorl
jne
das
bound
pop
lods
sti
inc
rcll
dec
add
lds
or
xchg
mov
mov
mov
mov
addr16
mov
mov
enter
movsl
ja
test
stos
adc
aam
in
push
mov
dec
ja
enter
and
mov
adc
aad
sub
add
xchg
sub
aam
movsl
push
shrl
mov
scas
ja
or
icebp
dec
movsl
cmp
jg
ss
cmp
dec
clc
cs
sub
pushf
pop
ljmp
cld
pushf
pushaw
cmpsb
pushf
mov
adc
push
push
jno
cmp
sub
lret
cmpsb
int
mov
mov
lcall
fs
je
out
movsl
xor
adc
inc
lea
fwait
mov
xor
sti
hlt
jo
xor
jae
xor
xchg
pop
jl
lock
push
pop
je
mov
loope
fildll
sub
sbb
orb
xchg
rcr
cmp
pop
xor
sbb
jecxz
cmp
call
shlb
cmpsb
loope
loope
and
cli
stc
lea
push
mov
sub
pop
jmp
pop
shrl
cmp
mov
dec
or
and
movsb
enter
daa
daa
mov
loope
hlt
push
shr
inc
ds
mov
inc
aas
or
sar
in
mov
pop
rcr
imul
repnz
adc
mov
mov
mul
shll
or
lfs
fists
jp
mov
ds
and
scas
sub
dec
fmuls
push
sbbl
rol
or
mov
stos
lret
cmp
dec
xor
aaa
pop
icebp
cmc
jge
das
pop
pop
pop
inc
subl
mov
std
testl
sub
imul
xlat
in
bnd
sti
cmp
inc
push
into
mov
jb
bound
enter
jl
jo
jge
or
adc
mov
adc
pusha
inc
sbb
aam
inc
jb
adc
mov
cwtl
fsubs
pop
xchg
or
sub
lea
ja
out
pop
push
inc
hlt
fnstenv
pop
and
scas
mov
dec
add
or
out
imul
push
mov
mov
sbb
roll
xchg
sbb
jo
jb
sarb
add
and
xor
lock
into
inc
sub
ret
pop
add
lcall
mov
scas
pop
mov
sti
in
push
mov
add
pop
int
xor
cmp
mov
jp
es
add
in
lds
xor
leave
lds
xor
xor
test
movsb
fidivrs
fildl
xchg
sub
xchg
rclb
xor
adcl
mov
push
jnp
in
push
cli
ret
ss
gs
int3
inc
pop
inc
mov
jae
cmp
data16
mov
mull
in
test
notb
mov
out
inc
pop
stos
jg
mov
add
cmc
cmpsb
sbb
in
fimull
pop
dec
fmull
aam
sarl
mov
je
pop
mov
in
shl
xor
dec
filds
popa
dec
or
mov
cmp
or
mov
sbb
mov
xorl
xchg
mov
cmpsb
daa
adc
inc
ljmp
push
cmp
int3
or
dec
inc
out
dec
jb
clc
lcall
xchg
lock
push
popa
scas
push
jbe
push
dec
push
push
inc
xchg
mov
ret
mov
and
cmp
xor
pop
adc
fildll
inc
js
out
cli
push
loopne
dec
jge
mov
test
cs
lahf
add
and
repz
mov
jb
jle
fwait
outsb
movsl
adc
xor
cmp
cmp
icebp
add
dec
and
or
mov
mov
jne
mov
aam
sti
cmpsb
mov
clc
rcrl
shld
ss
clc
sbb
jmp
out
or
pop
sub
xchg
nop
or
adc
sti
fnsetpm(287
push
or
mov
xor
dec
dec
inc
xor
pop
mov
dec
jmp
and
out
inc
mov
xor
das
cmpsl
lods
je
in
xchg
pop
nop
xchg
in
push
cs
popa
mov
mov
cmp
or
jb
hlt
out
adc
dec
jo
fidivs
xchg
adc
loopne
ficoms
jmp
ret
mov
test
cmp
mov
cmp
iret
sub
xorl
mov
pop
dec
aam
outsb
adc
es
and
mov
sbb
or
dec
jg
iret
das
xor
push
add
pusha
or
inc
je
fmuls
cli
sbb
inc
or
test
xchg
leave
mov
insb
lods
dec
fsubrs
jmp
mov
sbb
das
add
cmp
xchg
jnp
cwtl
imul
sub
lret
rcr
xor
jmp
in
and
sub
cwtl
ret
bound
pminsw
movsb
lods
leave
cmp
inc
repz
push
mov
sti
pop
jl
fdivr
leave
pop
add
repz
push
mov
cmpsl
mov
mov
jno
test
in
fs
jle
and
mov
mov
xchg
mov
jb
jo
lods
inc
out
adc
lods
clc
test
pop
push
mov
cmc
ror
roll
mov
push
aas
inc
xchg
and
subl
jge
jecxz
and
aas
scas
push
jo
aaa
xor
cwtl
repz
push
add
mov
push
insb
cmp
push
xor
cmc
mov
dec
inc
pop
movsb
je
inc
outsb
imul
fmuls
jno
and
sbb
push
pop
neg
add
leave
jl
rcrb
pop
les
jecxz
push
cmpb
jl
xchg
out
sbbl
mov
loopne
jge
lock
xor
insl
xchg
cmpsb
mov
lea
das
mov
inc
dec
pop
and
push
stos
aaa
or
inc
xor
sub
push
mov
pop
loopne
pop
adc
mov
lahf
mov
jecxz
cld
ret
imul
call
inc
pop
push
cmpsl
push
sub
lret
inc
test
sub
cmp
dec
push
jmp
out
aaa
out
idivb
mov
pop
fiaddl
out
xchg
adc
add
adc
daa
mov
xchg
dec
adc
insl
int
cmp
inc
icebp
sbb
mov
pusha
pop
mov
and
sbb
sub
jb
inc
and
pmuludq
add
sahf
sub
add
mov
xchg
mov
cmc
inc
das
cmp
test
push
add
bound
movsl
repnz
dec
shrl
mov
jnp
mov
imul
rclb
lret
jmp
andb
xor
cmpsb
vpcomub
add
loop
jmp
lods
pop
or
movb
pop
cmp
lods
pop
pop
out
push
stos
and
int3
inc
ljmp
lock
imul
mov
sub
in
add
je
push
sbb
cmpl
in
and
pop
add
add
adc
xor
mov
inc
loopne
aad
adc
cmc
es
jl
xchg
add
dec
xchg
or
test
imul
repz
and
clc
push
xchg
adc
mov
pop
dec
das
mov
jb
sub
mov
mov
int
inc
test
test
dec
fimuls
xor
mov
aad
movsl
xor
in
cli
leave
xchg
cs
jne
into
sahf
negl
gs
jns
and
xorl
cli
ret
push
sbbl
pop
push
es
stos
jp
test
dec
mov
xor
pop
inc
aam
adc
jnp
cmpsl
idivl
adc
pop
and
inc
and
jge
or
or
xor
mov
imul
test
sub
sub
mov
imul
or
popa
xchg
insl
add
orb
pop
out
lock
jb
jno
mov
mov
xchg
mov
mov
jno
cmc
mov
cs
jo
das
mov
pushf
pop
aas
repz
or
pop
push
add
mov
xchg
cmc
clc
insb
das
mov
data16
cmp
push
mov
cmpsb
ss
jo
rorb
and
and
jb
adc
int3
test
xor
out
repnz
lods
mov
add
and
and
cmc
aaa
or
aad
and
out
popf
adc
into
add
jmp
cmp
push
mov
pop
sbb
dec
mov
inc
pop
and
ljmp
popf
fstl
push
aam
bound
adc
pop
add
mov
ret
jno
push
jb,pn
js
xorl
push
popa
sarb
inc
pop
test
xchg
clc
rcrl
test
and
xchg
mov
inc
and
push
sbb
jae
lds
lock
mov
ja
sub
cmp
push
mov
cmp
fs
cmp
clc
pop
dec
or
push
pop
xchg
or
jp
sbb
movsl
jo
pushf
bound
or
outsb
adc
and
inc
jno
pop
bound
nop
or
push
clc
mov
pop
fildll
call
jge
dec
scas
or
loope
pavgw
jmp
lcall
inc
inc
notl
daa
cmc
fcmovu
test
outsl
xchg
outsl
pop
pop
inc
jbe
push
ljmp
mov
cli
add
mov
xchg
and
pop
inc
ret
jge
xlat
scas
cltd
notb
dec
pushw
ss
pop
or
dec
or
or
xlat
movb
fcmovnb
inc
lcall
shlb
sub
les
jmp
orb
dec
push
xor
shrb
xor
insb
aad
cmc
out
dec
repz
fwait
and
ja
push
or
cwtl
dec
pop
mov
inc
adc
stc
xchg
sahf
mov
idivl
push
jl
mov
std
outsb
mov
mov
stos
push
cwtl
pop
mov
outsb
out
sbb
mov
int
cmpsl
adc
outsl
jo
push
jns
jle
sbb
sub
mov
sub
adc
jae
ljmp
pop
jo
inc
out
adc
or
fisttpl
sub
hlt
daa
mov
sub
std
cmp
imul
sarb
lahf
mov
xchg
adc
mov
push
out
lcall
inc
mov
aaa
mov
adc
and
and
inc
adc
les
stos
lcall
hlt
jge
adcl
dec
int
sub
hlt
jl
inc
xchg
movsb
jns
dec
xor
gs
fisubrs
adc
scas
adc
push
cmpsl
das
fdivrl
neg
cmpsb
test
subb
aas
pop
mulb
dec
ss
sub
mov
sub
into
test
insb
dec
movb
imull
push
sbbl
jne
into
dec
loop
pop
adc
shll
sahf
jge
jmp
push
insb
or
dec
shrb
cmpb
sbb
enter
outsb
xor
aaa
sub
icebp
xchg
nop
fmull
test
ljmp
jae
inc
or
adc
push
stos
push
mov
ds
mov
lods
jnp
jb
mov
jl
repnz
pusha
iret
dec
fs
cmp
fimull
lea
add
out
add
loope
or
lahf
or
mov
jmp
pop
movb
inc
cmp
xor
lock
pop
daa
sub
lods
cmp
ds
inc
dec
mov
clc
mov
add
pop
adc
decb
add
pop
cmpsl
add
in
jne
mov
pop
mov
push
mov
out
aam
xchg
or
mov
mov
in
mov
popa
cs
movl
add
lcall
mov
insb
pop
scas
jle
pushf
lods
jge
mov
addr16
push
xor
jmp
es
cmp
dec
pop
add
or
rcl
insl
xor
popf
mov
push
fwait
insl
push
add
mov
out
xchg
in
sbb
add
cwtl
fmull
dec
cmp
subl
mov
adc
gs
mov
push
cli
nop
sub
aas
pop
add
fnsave
dec
cmp
rcll
sbb
or
mov
pusha
and
fdiv
inc
xor
pop
push
cmp
push
xchg
mov
out
cmp
xchg
es
lret
stos
jle
pop
jno
ret
jp
iret
dec
ret
and
movsb
and
call
mov
inc
mov
fwait
push
jb
rclb
mov
inc
ret
lret
les
fs
mov
sahf
cld
leave
std
aaa
inc
sub
cmpsl
pop
test
imul
aam
insb
dec
and
jnp
push
adc
test
shrl
out
jp
pop
jmp
test
fnsave
ficomps
fucom
ds
loope
push
xlat
xor
pop
test
neg
scas
scas
and
xchg
push
xor
jl
lods
shlb
fs
fsubs
sbb
or
mov
cs
ret
loope
xchg
adc
outsl
pop
testl
imul
sti
lret
mov
nop
in
mov
loope
orl
xor
addl
dec
pop
ficoms
or
or
scas
jne
add
leave
push
push
aam
push
xor
jmp
add
push
pop
add
pop
and
sub
mov
popf
adc
xlat
mov
push
pop
jmp
sbb
dec
sub
xchg
cmpsl
ror
push
mov
call
bound
std
out
sti
mov
data16
mov
inc
mov
nop
les
xor
or
jmp
push
adc
jle
fs
jmp
inc
shrb
add
sub
ljmp
jbe
dec
les
imul
dec
mov
sbbb
add
addl
fildll
push
push
xchg
rcll
cmp
imul
dec
aad
add
loop
fidivl
aaa
test
ret
ja
pop
and
ret
mov
sbb
dec
mov
lahf
lock
mov
xlat
sti
lea
inc
mov
pop
nop
inc
stc
inc
push
je
mov
xor
pop
lret
sub
call
lods
jae
mov
mov
adc
pusha
rol
fsubr
mov
inc
or
push
xor
jno
loop
push
jle
cmp
fucom
pop
xor
push
push
mov
jl
pop
push
xchg
add
enter
inc
es
jns
int
arpl
xor
ss
or
xor
fldl
movsb
fs
cmp
shll
sahf
mov
shrl
scas
jb
jg
into
push
or
aam
pop
pushf
or
nop
les
cmpsb
rcrb
andl
daa
jge
test
iret
ss
insl
pop
iret
add
push
std
and
mov
shrb
andl
xchg
inc
mov
jnp
scas
popa
inc
xor
cmp
outsl
push
pop
cmp
inc
negb
and
ds
pop
aam
loop
aad
adc
popa
xchg
mov
lods
sub
mov
pop
sub
push
test
cmp
jecxz
sbb
xchg
loope
add
push
push
dec
xchg
mov
ret
out
gs
fstenv
sbb
or
rorb
mov
sub
aam
xchg
icebp
scas
fadds
inc
jne
stos
xchg
sub
adc
xchg
scas
in
jne
mov
mov
pop
and
das
popa
and
mov
out
jg
mov
movb
pop
adc
sub
fcmovu
mov
das
or
stc
add
pop
rol
fwait
repnz
adc
pop
sbb
fsubrl
insb
pop
xchg
pop
add
imull
pop
mulps
add
outsb
dec
les
jb
jge
imulb
pop
in
into
mov
add
xor
and
aas
lret
imul
enter
mov
mov
fadds
and
imul
inc
dec
mov
cmp
cmc
mov
loope
cmp
inc
ret
xor
sub
roll
lea
add
fwait
and
mov
jg
jmp
sbb
pushf
jmp
out
push
flds
or
inc
js
mov
mov
inc
mov
adc
pop
push
pop
sbb
adc
inc
adc
mov
lahf
js
adc
add
mov
imul
jg
inc
popa
shr
sarb
cs
cmp
gs
rorl
or
int3
int
jns
rcll
xor
or
xor
adc
outsl
pop
jecxz
jne
rcrb
push
out
mov
dec
fadd
pop
push
and
jo
cmp
add
mov
adcl
scas
inc
push
sbb
or
es
and
sti
inc
cmp
mov
or
xor
mov
inc
fmull
int
mov
inc
lock
push
mov
jno
mov
and
mov
cmovno
loope
aam
sbb
xor
adc
jmp
rorb
xchg
popf
ja
scas
in
mov
dec
dec
xor
lretw
iret
push
push
leave
in
repnz
ror
mov
push
lret
inc
xchg
dec
jns
sbb
pusha
stos
mov
cmp
and
jns
fs
out
dec
sbb
jge
mov
movsl
pop
scas
xchg
push
out
faddl
aas
fs
rorl
sub
add
mov
push
sbb
pop
cmpl
or
push
and
ds
pop
js
jb
fsubs
xorl
out
cmpsb
push
movsl
lock
mov
divl
hlt
fwait
in
das
nop
mov
sub
jecxz
int3
inc
lds
or
popa
iret
aaa
cmp
sti
cmpb
dec
jae
pushf
push
push
adc
sub
cmc
cmc
add
out
push
divb
mov
imulb
cmpsl
aam
or
leave
jb
fs
xchg
nop
mov
aad
or
xor
jno
testb
testb
outsl
inc
xor
shll
mov
clc
or
test
cmp
mov
adc
insb
fimuls
add
dec
icebp
jo
enter
mov
movsb
jne
inc
adc
adc
pop
out
push
inc
add
clc
and
movsb
scas
aad
scas
mov
jnp
push
mov
arpl
nop
in
shll
clc
in
ljmp
nop
xor
arpl
add
pushf
mov
mov
pushf
shrl
dec
xor
mov
xchg
inc
into
dec
mov
fs
inc
loopne
xchg
pop
dec
lcall
pop
pusha
pop
lods
sub
neg
pop
jb
push
ljmp
xchg
pop
cltd
out
out
adc
mov
dec
push
mov
in
or
lret
aas
push
inc
leave
ljmp
pop
jecxz
in
or
add
fwait
jae
rclb
ja
fistps
or
add
cmp
mov
shlb
push
es
sti
push
xchg
test
and
in
mov
jb
hlt
in
and
dec
stos
xor
ss
fwait
movsb
aaa
pop
push
and
lea
or
inc
jmp
xchg
push
cmp
and
push
mov
clc
xor
pop
jl
mov
cltd
mov
daa
jno
enter
lea
mov
outsl
hlt
js
enter
popa
add
add
lret
add
jmp
adc
test
arpl
stos
test
mov
lcall
aaa
fdivrs
xor
mov
and
ljmp
cmpsb
jle
xor
mov
push
cmpl
pop
lret
mov
fcompl
out
out
cmp
jp
mov
sbb
fldt
push
testb
pop
or
subb
fsts
mov
xor
rcll
cmp
loop
das
xchg
or
sbb
cmp
mov
idivb
dec
jg
xchg
stos
subb
int3
notb
fistpll
dec
xchg
ja
stos
or
mov
pop
cld
mov
loope
or
cmp
sub
and
and
ss
pushf
pop
gs
frstor
and
test
test
mov
rcrb
xchg
xor
xchg
or
adc
dec
push
push
jb
mov
fists
pop
mov
aad
call
es
jl
hlt
cmpsl
rcrl
sti
sahf
fisubs
push
sbb
mov
fidivs
mov
jl
pop
xlat
jmp
cs
loop
add
repnz
call
and
imul
es
insb
push
icebp
sbb
lret
xlat
pusha
jmp
subl
pop
cmp
xor
notl
ret
aad
sbb
jns
sub
cmpsl
add
add
mov
aad
mov
filds
cmp
addl
pop
mov
out
out
cmp
jmp
push
jbe
fcomps
lcall
imul
cmp
add
inc
push
scas
cmc
lret
test
xchg
sahf
and
sahf
mov
rcrl
mov
pop
or
repnz
xor
sahf
inc
cmp
xchg
lea
ret
daa
mov
imul
pop
lahf
or
inc
or
hlt
mov
xor
stos
push
nop
cmp
shll
in
loopne
jae
clc
idiv
cmp
jle
adc
cmp
mov
sub
imul
inc
dec
push
out
xor
push
in
cmp
mov
test
adc
and
inc
mov
cs
cmp
mov
je
mov
sub
lods
inc
cwtl
adcl
cmp
loope
mov
das
stc
xchg
mov
addr16
das
cmp
dec
dec
mov
dec
enter
mov
fwait
sahf
imul
sbbb
std
testl
mov
mov
and
push
dec
mov
in
cmp
mov
popa
dec
scas
mov
mov
mov
lret
jno,pn
adc
dec
shlb
ja
out
jne
fidivrs
enter
scas
arpl
add
inc
mov
fucomp
jbe
iret
and
mov
mov
js
std
out
jmp
lods
cld
jb
mov
adc
and
dec
sub
pushf
xor
or
push
dec
jecxz
je
push
sub
inc
and
mov
bound
lahf
int3
fdivr
mov
lahf
mov
pop
xor
jecxz
adc
pcmpeqb
jp
aad
cli
lret
push
clc
fidivs
push
loope
lea
adc
shll
roll
into
sbb
or
idivl
jl
and
mov
jne
sbb
mov
std
jl
call
push
aas
adc
mov
frstor
test
imul
adc
xchg
out
pushf
rcrl
test
xchg
aam
mov
adc
pop
adc
arpl
sub
shlb
in
jb
leave
popa
popa
add
jo
cmovnp
mov
xchg
ljmp
and
sbb
negb
push
mov
add
mov
pop
push
out
cmpsb
jnp
sub
loopne
arpl
imul
testl
pop
clc
out
das
out
xor
xchg
inc
mov
arpl
psrlq
dec
pop
js
lahf
xchg
or
dec
mov
dec
dec
and
es
jns
cmpsb
lcall
test
inc
dec
cmpsb
fwait
aas
add
es
jmp
ja
jne
inc
mov
sub
jbe
orl
lea
lods
subb
cld
pop
sub
pop
ds
cld
nop
push
insb
sub
adc
mov
test
ljmp
sub
lcall
adc
ljmp
icebp
orb
mov
or
sub
enter
xor
into
aaa
mov
idivl
sub
cmp
ds
stos
jle
push
pop
cmp
inc
pop
dec
mov
push
inc
loopne
jns
fildll
dec
ja
rcr
sbb
aas
sarl
cmp
xor
or
add
fidivrl
insl
sbb
fldt
dec
adc
cltd
mov
jmp
into
loop
cmp
mov
repnz
js
out
adc
clc
push
or
mov
addr16
mov
mov
rclb
aas
mov
mov
xor
jbe
lds
imull
stos
xor
ja
mov
sbb
sbb
in
lds
or
mov
jge
ss
lods
mov
push
das
rclb
ffree
pushf
mov
mov
mov
loopne
ret
xchg
bndldx
xchg
sub
movsl
xchg
aaa
rclb
mov
lret
or
mov
movsb
mov
cli
push
addl
sbb
xlat
push
sub
imul
insl
xchg
mov
jbe
outsl
roll
mov
cmp
sub
mov
and
popa
sti
jmp
inc
mov
mov
jl
xor
ficoml
sub
dec
into
shll
pop
mov
push
sti
loopne
cld
fwait
movsb
mull
das
xor
sub
mov
mov
les
jle
and
jecxz
sarl
sub
inc
std
stos
push
scas
in
je
leave
sbb
loopne
mov
loop
push
xor
pop
stos
inc
lds
inc
aam
xlat
xchg
add
dec
mov
nop
add
pop
ss
shl
xchg
lods
sbb
dec
ljmp
add
pop
mov
jge
dec
mov
cmpl
loope
out
incl
mov
cmpsb
mov
cmpsb
push
mov
int
ss
sub
loop
sbb
data16
sti
mov
gs
mov
sub
jg
out
jle
pushf
ss
cmpsl
out
push
mov
pusha
lods
mov
or
testb
xchg
js
dec
push
mov
out
ljmp
std
mov
sbb
cmp
inc
jae
adc
nop
mov
push
out
sub
into
cmc
jno
pop
aaa
dec
and
xor
sub
inc
mov
jmp
push
or
ljmp
mov
cmp
arpl
out
js
sbb
fisubs
dec
inc
mov
cmp
jmp
sbb
cmc
dec
cmpsb
push
fucomi
movsb
aad
arpl
ret
int3
mov
sbb
das
adc
in
js
inc
cmp
data16
inc
mov
pop
fisubl
mov
mov
and
cmp
notl
sbb
or
lds
hlt
cmc
push
fsubl
push
fisttpll
das
aas
push
aaa
ja
in
push
xchg
aam
lods
adc
test
inc
dec
sub
icebp
xor
xchg
mov
or
test
add
popl
enter
aas
test
adc
adc
xchg
jle
es
shll
jne
sbb
and
fs
pop
out
sub
call
xchg
popa
fwait
lock
lcall
test
sub
xor
pop
pushf
mov
mov
in
jge
sbb
ljmp
test
clc
sahf
fdiv
cwtl
clc
loop
mov
int3
add
jnp
cmp
scas
xor
aad
fnstsw
adc
out
daa
scas
add
xlat
les
push
push
test
mov
imul
bound
ret
aas
fistpll
jbe
loop
push
in
mov
xchg
cli
insb
ret
inc
pop
testl
add
mov
addb
push
xor
or
xor
stos
stos
xor
adc
in
fimuls
rcr
and
xchg
fsubs
std
ss
dec
leave
sti
and
or
test
mov
enter
mov
xchg
lock
push
inc
dec
das
xchg
roll
out
outsb
xlat
mov
scas
dec
push
lea
inc
shll
fld
or
dec
dec
xor
push
out
push
jne
mov
daa
dec
fwait
out
cld
mov
nop
jle
outsl
sbb
test
addb
jns
sbb
inc
pushl
hlt
mov
fs
push
daa
add
dec
push
push
adc
test
in
add
mov
in
adc
lret
mov
scas
fidivl
add
push
mov
dec
inc
outsb
sbb
aaa
xchg
mov
xchg
popa
xor
inc
popf
mov
mov
and
or
fbstp
xchg
in
int3
mov
jno
dec
shlb
dec
cmp
dec
jae
adc
scas
xchg
ret
lods
xor
cltd
mov
mov
xorl
push
and
mov
ret
pop
das
adc
mov
in
not
rol
xchg
jo
aam
mov
pop
mov
mov
icebp
imul
lcall
pop
loop
xchg
push
fisttps
icebp
cmp
xlat
dec
adc
fsub
orb
jg
ljmp
cltd
pop
stos
adc
pusha
cltd
xchg
stos
in
data16
sti
bound
mov
sahf
mov
stos
aam
fists
and
dec
clc
stos
push
inc
fs
jnp
cmc
scas
inc
popa
stc
add
test
mov
lret
movsb
and
aad
out
sahf
fdivrs
loope
ror
lcall
pop
lcall
xchg
xor
push
add
cmp
repnz
add
push
mov
lea
mov
repz
mov
mov
sub
push
dec
fdivp
sarb
pop
push
inc
sbb
cmp
shll
loope
xchg
xchg
mov
movsb
mov
nop
call
ret
clc
xchg
aaa
inc
push
and
aas
xchg
xor
movsb
add
mov
mov
test
jo
fisubrs
mov
jo
push
xor
sti
xchg
sbb
and
adc
sbb
adcl
je
fimuls
loop
repz
mov
pop
add
push
push
jns
inc
ljmp
outsl
outsl
inc
out
int
rorb
dec
mov
loop
gs
cmp
int3
cmp
fdivrp
xchg
ja
popa
out
addr16
jle
js
out
mov
jmp
repz
dec
jns
leave
repz
xchg
insl
sbb
dec
fdivl
mov
xor
xchg
cs
mov
lret
add
or
mov
xchg
and
addr16
js
icebp
push
pop
outsl
jl
xchg
xor
sub
fsubs
xchg
insl
test
xor
stc
pop
clc
mov
and
mov
ss
mov
jmp
cltd
sub
cmp
cmpsl
pop
pusha
mov
and
pop
loopne
mov
xlat
iret
inc
adcl
into
jle
inc
mov
adc
mov
lret
inc
mov
dec
dec
pop
je
fmul
sub
cs
push
clc
mov
xor
rcrb
push
popa
lahf
lahf
sub
mov
insl
add
lahf
movsb
test
mov
stos
sub
push
addr16
lds
inc
push
into
ljmp
jns
add
out
xchg
jns
lea
fsubrl
jae
aad
es
push
call
xchg
imul
cmp
outsl
jecxz
push
lret
xor
sub
lret
clc
mov
int
mov
test
or
sahf
xchg
inc
mov
inc
aas
nop
xlat
cmp
inc
xchg
mov
cmp
xor
xlat
fwait
aas
sub
mov
xchg
or
xchg
xchg
lcall
sub
pop
and
test
mov
adc
cmp
jl
dec
dec
xchg
sbb
xor
fidivrs
pop
enter
dec
cmpsl
repnz
cmp
and
pop
mov
testl
mov
push
push
outsl
dec
lods
mov
mov
add
dec
in
ja
test
and
pop
in
inc
and
ja
pop
push
jnp
fsubrs
ficoml
dec
push
cmp
lods
lret
popa
mov
cmc
and
dec
push
out
stos
mov
nop
xchg
xor
ret
in
mov
sub
sbb
or
xchg
inc
ss
xchg
hlt
std
shlb
inc
and
mov
sub
fisubrl
push
fldenv
cmpsb
pop
sbb
jge
rorl
mov
sub
mov
aad
ja
mov
sub
sbb
sub
lods
push
add
das
movsl
or
sbb
mov
jg
xor
pop
fstpl
jg
roll
add
leave
js
stos
insb
jmp
sub
lcall
xchg
mov
shl
add
in
pop
cli
je
das
add
jg
or
push
or
add
data16
sub
push
mov
sub
loope
push
add
mov
jne
ljmp
ss
add
inc
lret
addl
stos
cmp
fwait
jo
pop
fs
inc
shr
xchg
sub
xchg
sbbl
inc
push
push
adc
scas
mov
mov
fisubrs
mov
movsb
mov
popa
sub
out
add
cs
push
mov
out
adc
fdivl
int3
test
sbb
test
mov
mov
fwait
nop
mov
into
adc
mov
outsl
orb
fdivl
fcmovbe
dec
and
inc
or
dec
or
sahf
push
fisttpl
jo
popa
mov
shlb
inc
or
xchg
negb
lcall
mov
inc
push
popf
int3
outsb
sub
sub
pop
test
xlat
call
mov
orb
and
add
inc
sbb
adc
lock
popa
stos
iret
mov
hlt
xchg
cltd
daa
inc
push
mov
stc
pop
dec
push
jnp
js
call
lea
xor
xor
out
andl
inc
mov
aad
scas
dec
aas
add
sub
pop
ror
out
xchg
or
add
stos
cmpl
int
adc
add
xchg
xchg
movsb
and
cmp
mov
add
push
cltd
stos
cmp
inc
and
scas
inc
or
xchg
cs
inc
mov
lahf
push
repnz
xchg
mov
dec
lods
bound
dec
cmpsb
je
lods
sub
mov
ja
movsb
sub
cld
add
and
or
cmpsl
xchg
pusha
setl
fbstp
or
mov
cwtl
int
mov
sti
cmpsb
imul
movsl
outsb
lods
mov
jns
xchg
mov
mov
dec
jne
xor
enter
cmc
sub
ficompl
dec
repnz
out
pop
pop
add
adc
imul
mov
jle
divb
scas
xlat
and
or
lret
inc
xor
or
add
xchg
lret
push
aad
dec
adcl
aad
adc
inc
js
test
not
xchg
call
imul
pop
subl
lahf
and
adc
jbe
out
pop
xchg
push
rorl
lock
loope
je
jmp
bound
sarl
stos
push
lods
sar
sti
cmp
xchg
stos
std
mov
aas
andb
jp
fldt
repnz
jle,pt
adc
lock
call
lcall
ret
gs
lods
cmp
shll
popf
xchg
test
sub
adc
hlt
in
xchg
sbb
sbb
jp
imul
mov
addr16
cmp
inc
js
scas
rcrb
imul
xchg
push
dec
test
push
adc
jo
push
adc
in
test
sti
add
imul
imul
adc
lods
icebp
mov
out
sarl
dec
loopw
outsl
mov
mov
popl
mov
lret
shll
add
fwait
repnz
and
fwait
sbbb
dec
bsr
and
sbb
jg
aas
mov
mov
out
xor
inc
mov
and
ljmp
movsl
dec
xchg
add
in
ficoml
jmp
aad
aaa
push
xchg
inc
cwtl
jecxz
xchg
push
mov
call
mov
dec
push
sbb
adc
add
inc
pusha
sbb
cmp
in
inc
outsb
mov
shll
in
leave
or
cli
cmpsl
nop
test
movsl
ja
fldt
and
movsl
mov
shlb
mov
cmpsb
and
into
mov
divl
popa
out
sub
or
xchg
mov
xor
aad
rol
es
into
out
sub
pop
ret
sbb
mov
test
cmpsb
sbb
lahf
or
scas
mov
push
adc
fadd
xor
pop
mov
lds
mov
ret
cmp
xchg
jo
jle
jbe
jo
inc
inc
cli
jp
push
leave
dec
int
sbb
push
orb
lcall
lea
shrl
mov
aaa
std
shll
aam
gs
mov
jl
shrb
ds
dec
inc
test
das
call
jns
and
gs
addb
testl
aas
xor
pusha
les
pop
push
push
xor
cmpsb
inc
ja
ficomps
or
decb
call
enter
mov
shll
mov
xor
sbb
pop
cmp
rclb
push
shlb
push
aad
icebp
ds
and
xor
cli
das
pop
dec
inc
push
mov
xchg
fdivrp
sbb
out
imul
arpl
popf
das
aaa
pop
inc
and
cmpsl
sub
repnz
call
faddl
push
xchg
call
adc
inc
xchg
hlt
dec
xlat
outsl
mov
mov
adc
nop
inc
ret
in
mov
addr16
loopne
mov
out
cmp
or
js
lock
mov
addl
push
push
xor
aas
loope
push
testb
jg
adc
xchg
adc
jecxz
mov
aas
cmp
dec
xor
inc
shrb
cmc
jp
mov
dec
ds
cmpsl
call
mov
inc
subl
pop
xor
ja
scas
inc
test
sti
test
outsb
aad
jb
mov
ljmp
das
daa
sahf
pop
push
rolb
xchg
dec
pop
mov
gs
lock
pop
jmp
lea
cmp
inc
add
call
mov
pusha
xlat
mov
std
and
mov
orl
mov
push
jl
outsl
and
push
mov
jo
mov
aam
das
xchg
adc
xorb
mov
shrb
mov
ja
inc
jmp
jecxz
inc
push
out
push
mov
xchg
dec
dec
push
mov
mov
testb
push
int3
jns
and
jecxz
or
roll
adc
xchg
cs
stc
fmul
xchg
jns
test
add
test
and
leave
xchg
push
inc
cs
out
jnp
mov
sub
fldt
jecxz
hlt
fbld
pop
xchg
in
sub
and
dec
rol
mov
and
test
xchg
sar
pop
cmp
push
sub
arpl
xor
xor
xchg
push
mov
ret
sbb
cltd
in
mov
orl
pop
xor
jge
xchg
push
mov
in
jns
xchg
dec
ret
adc
jns
adc
outsb
sbb
repz
data16
adc
popf
popa
loopne
mov
or
mov
sub
cmc
decb
fmul
cmp
cltd
inc
pop
fbld
xchg
div
xchg
xor
pop
push
adc
mov
and
data16
hlt
test
jne
bound
lahf
xor
ja
adc
jbe
mov
ljmp
pop
xchg
ss
lods
or
fimull
pushf
add
enter
leave
dec
frstor
lock
pop
push
inc
nop
sub
push
and
add
ret
in
aas
fdivl
imul
push
adc
jmp
xor
addb
hlt
or
and
stos
clc
testl
in
mov
lcall
dec
xchg
loop
sbb
push
cmp
ret
bound
adc
cld
out
outsb
fs
mov
and
jle
or
mov
xchg
push
push
pop
imul
push
xchg
cmp
fistpll
mov
test
jo
add
push
into
dec
adc
orb
filds
push
cld
pop
or
adc
pop
outsb
jl
xor
mov
mov
mov
dec
movsl
testl
cmpsb
lods
xlat
pavgb
xchg
mov
repnz
xor
dec
iret
xchg
fcoms
shlb
or
into
and
mov
jmp
mov
xchg
sarl
pop
sbb
add
cmp
enter
shrb
mov
push
addl
adc
lret
into
mov
fmulp
inc
adc
insb
sahf
ss
mov
xor
movsb
sarb
out
fisubl
daa
sub
sbb
mov
out
mov
mov
dec
popa
inc
fidivrs
pop
push
push
mov
pop
jns
loope
mov
and
xchg
mov
adc
jecxz
daa
shll
pop
pop
xchg
adc
inc
ljmp
pop
mov
jae
adc
xor
std
lock
or
hlt
and
mov
jecxz
fs
dec
pop
jns
mov
jp
mov
dec
inc
add
add
or
sbb
lcall
or
stc
neg
lock
mov
sub
sbb
fisttps
mov
or
mov
loope
jle
test
sbb
adc
xchg
push
mov
dec
cmp
adc
cmc
call
cmp
gs
dec
pop
push
testb
ljmp
xchg
xchg
pop
and
loope
mov
xor
cmpl
test
test
or
mov
pop
out
mov
in
jns
xor
clc
loope
roll
icebp
movsl
push
inc
xor
sbb
xor
fistpl
push
jne
xor
adc
push
push
and
push
inc
movsb
jo
jl
int3
mov
fidivs
mov
repnz
addr16
es
mov
lret
lds
sbb
push
sbb
and
ds
sbb
jo
sub
lods
jle
pop
xchg
cmpsb
in
or
leave
loope
dec
cmc
sti
mov
ljmp
and
sbbb
mov
iret
mov
ret
jo
rcr
push
in
sub
bound
hlt
sarl
mov
xor
inc
xchg
ss
cmp
daa
loopne
std
les
sti
xchg
push
or
es
push
popa
call
fmuls
les
arpl
ds
fistpll
enter
in
xlat
addr16
or
f2xm1
cmpsl
pop
mov
jo
ljmp
mov
in
mov
cmp
fnsave
test
movsb
sub
xlat
rolb
mov
cmpsb
outsl
push
std
add
add
mov
adc
xor
xorb
mov
xor
lahf
insl
outsb
into
add
cmpsl
add
adc
stc
sub
xor
lea
clc
movsb
add
sbb
xor
cld
aad
test
cmp
push
push
sbb
adc
and
mov
ljmp
testb
es
and
mov
sti
clc
xchg
inc
out
mov
mov
cmp
mov
ja
or
push
xor
shr
pop
xchg
lret
dec
mov
mov
push
adc
insb
mov
movsl
xchg
das
scas
testl
hlt
mov
xor
pop
jecxz
call
cmp
outsl
stos
pop
sub
lcall
and
fdivrs
jl
fldl
xor
scas
add
sbbl
iret
push
push
xlat
adc
xchg
push
pusha
push
pop
cmpl
js
dec
mov
push
sub
mov
dec
icebp
jo
inc
stc
inc
cltd
popa
mov
rorl
pop
notb
cltd
mov
add
sub
lret
insl
pop
jp
inc
out
pop
mov
push
imul
insb
loopne
pop
popf
imul
leave
cmpsl
sub
xchg
in
add
shl
jno
ljmp
push
lea
insb
mov
mov
lock
in
or
fwait
jmp
mov
adc
mov
jb
and
rorl
mov
mov
gs
fs
ds
icebp
sbb
sub
out
mov
sbb
cmp
dec
mov
dec
push
sub
inc
jg
mov
into
pop
aaa
outsb
rclb
sub
sbb
xor
push
es
pusha
repz
pop
mov
xchg
jp
popa
push
loopne
add
iret
pop
arpl
and
sbb
sbb
inc
push
adc
jne
xorl
lods
pop
fldenv
popf
xchg
sti
iret
jmp
in
hlt
inc
push
idivb
arpl
cmp
mov
nop
lcall
or
outsb
cwtl
push
dec
mov
rclb
fldl
sbb
inc
inc
arpl
xorl
sbbl
pusha
mov
jmp
inc
clc
or
lea
push
pop
mov
adc
cmp
shr
popa
push
inc
loope
aad
cmpsb
push
xorb
daa
int
fs
imul
mov
mov
inc
mov
push
call
push
jno
ss
cmpsl
insb
fnstcw
mov
mov
mov
loope
xor
stos
mov
dec
dec
fcom
or
popf
mov
arpl
adc
test
inc
lds
jns
xchg
adc
stc
fimull
daa
jle
push
adc
push
mov
push
inc
andb
sbb
dec
imul
add
xchg
aad
icebp
inc
icebp
mov
les
cmc
push
cmp
aam
mov
xchg
push
ficoml
ret
or
mov
das
test
addr16
push
xchg
xlat
das
mov
cmpsb
xor
cs
pushf
sbb
arpl
add
shr
andb
mov
rolb
shl
or
testb
out
mov
stos
fstps
loope
rorl
inc
aad
movsb
pop
fadd
push
mov
or
sbb
or
scas
test
stos
adc
js
mov
aas
and
lcall
mov
pop
in
aam
push
xor
cmp
into
xor
or
nop
enter
jl
mov
sub
stos
sbb
loope
dec
into
cld
sbb
ret
push
mov
clc
imul
push
cld
cli
xor
mov
sub
pop
ror
jne
daa
arpl
push
into
test
stc
jbe
jmp
lret
sarl
scas
sbb
cmc
ja
loopne
sbb
inc
sub
cmc
hlt
clc
push
jle
movsl
add
jno
adc
and
fldcw
adc
inc
into
sub
pop
clc
ja
pop
xor
cmp
lods
mov
aad
jge
shr
ret
je
xor
pop
or
rorb
adcl
push
pop
ret
jnp
mov
sub
lahf
inc
clc
xor
lcall
sti
dec
add
mov
test
xor
push
daa
mov
pusha
or
iret
iret
shrl
cmp
xchg
sbb
mov
cs
pop
test
mov
imul
pusha
cmp
mov
xchg
lret
xlat
mov
push
jb
cmp
sub
aas
pop
cmp
adc
aaa
enter
shrb
xor
sbb
aas
xor
ja
loope
test
hlt
ret
int
inc
xchg
data16
and
ss
outsb
xorl
loope
lods
dec
mov
ja
test
repz
incb
lret
inc
and
iret
outsb
pushf
pusha
pop
iret
ret
adcb
xlat
add
rolb
arpl
adc
mov
add
jle
jecxz
add
mov
addl
mov
mov
mov
insb
js
dec
pop
insb
adc
push
dec
cli
jne
nop
loope
sub
push
pop
dec
pusha
aam
sahf
xchg
pop
insl
xchg
and
mov
mov
dec
mov
das
cmpsl
xchg
cmp
inc
cli
pop
mov
xchg
adc
int
push
popa
pop
sbb
mov
fld
in
xor
push
ss
sbb
stos
imul
sub
sbb
mov
in
gs
mov
inc
push
dec
mov
cmp
inc
aaa
cmp
ss
aam
mov
fcompl
or
lahf
popw
xchg
insl
inc
gs
mov
repz
nop
push
pusha
dec
cmp
push
inc
push
jp
mov
sbb
sub
adc
cmpsl
mov
addr16
int3
daa
lea
imul
or
pop
and
sbb
dec
stos
movsl
fisttpll
shr
push
cwtl
sub
out
scas
sbb
pop
mov
clc
xchg
sbb
lock
clc
adcb
or
sbb
imul
mov
rorl
push
jae
add
push
jno
divb
test
adc
xchg
stos
jne
jae
in
jns
aad
xor
leave
frstor
add
data16
mov
mov
push
nop
jo
jge
enter
and
sti
lea
pop
mov
sub
pop
jg
cmp
xchg
icebp
adc
ss
pop
xchg
cmp
ret
sti
xchg
xor
ja
incl
das
jge
pushf
push
aam
sub
daa
test
lret
out
xor
ret
pop
cmp
cmp
mov
add
imul
mov
jne
jg
shld
push
xor
ss
add
dec
push
flds
shll
cmp
and
jo
int
pop
out
push
adc
inc
jp
pop
and
insb
shr
cmpsb
inc
adc
jb
ret
test
mov
sbb
mov
jmp
pop
cli
das
or
sbb
add
movsl
or
andl
xor
and
add
sbb
pop
jp
inc
stos
push
mov
fs
fcmovnbe
js
imul
fadds
nop
cld
sbb
and
cmpsb
stos
je
sub
adc
hlt
divb
pop
xchg
xor
rcll
test
icebp
aas
add
inc
lahf
ficoms
es
or
aad
pop
sarl
inc
or
fwait
scas
sub
wbinvd
dec
pop
add
sbb
mov
push
jecxz
mov
inc
cmp
and
xor
pop
xor
jns
addr16
jle
shl
imul
fiaddl
mov
jl
aam
call
fistl
lock
data16
adc
fmull
adc
dec
xor
cmp
ds
js
rolb
pop
adc
mov
mov
dec
jb
cli
testb
cli
iret
mov
cltd
in
fcomps
mov
and
and
ret
sbb
sbb
cld
cmp
leave
push
jns
insl
lret
adc
mov
nop
dec
ss
movsl
inc
int3
rcll
popl
jmp
rep
mov
dec
jl
test
mov
cmc
xor
leave
sti
dec
punpckldq
lret
mov
inc
sub
loope
insb
inc
insl
sbb
push
shrb
pop
inc
mov
into
stos
push
mov
inc
stc
pop
mov
xor
in
cli
imul
scas
sub
call
xchg
jg
jmp
sub
and
and
insl
fst
xor
add
leave
dec
popa
xchg
cmpsl
imul
mov
inc
sub
dec
jo
adcb
loopne
jge
sub
or
mov
repz
xor
sbb
xchg
repz
sbb
and
mov
shlb
jge
sbb
movsl
dec
inc
stc
push
adc
daa
push
lds
jg
jae
lea
xor
ret
ficompl
cmc
sbb
ljmp
mov
cmpl
int
pop
pop
enter
cltd
xchg
insl
cli
add
and
dec
lret
xor
xchg
xor
lods
mov
cmp
jecxz
cmpl
adc
cmpsb
nop
subl
inc
stos
icebp
loope
lret
lea
mul
push
rolb
je
push
int
out
jno
pop
jbe
popf
int3
lahf
fs
movsb
sbb
fdivl
outsb
xorl
sub
sub
xchg
cmp
pop
mov
hlt
xor
repnz
dec
mov
out
shrl
push
fldt
dec
stc
add
pop
xchg
fisttps
and
jnp
adc
push
call
push
xor
pop
daa
adc
addr16
xchg
xchg
aaa
test
dec
mov
mov
push
push
push
cmc
sbb
sbb
in
cmp
xchg
stos
popa
pop
pop
pop
push
dec
cmc
insb
lock
int3
mov
and
lret
aam
lock
stc
sbb
mov
scas
dec
in
push
outsl
add
lret
lret
dec
ljmp
mov
pop
ljmp
shll
lods
aas
jae
pop
jg
jp
inc
ret
mov
das
mov
out
fstps
adcb
aaa
jo
mov
sbb
push
inc
fstps
rorl
inc
jnp
mov
imul
and
cltd
mov
js
add
lret
adc
and
jecxz
inc
xchg
push
sbb
dec
test
push
pop
in
aas
mov
imul
sub
stc
iret
enter
fnstsw
loopne
into
jmp
arpl
fistpll
sub
int3
cmp
shl
fistpl
dec
xchg
shrl
into
in
lock
imul
subl
add
je
inc
cmp
lret
xor
mov
sbb
adc
ret
andl
push
sbb
inc
xlat
xchg
insb
popa
data16
mov
sbb
test
jno
lea
cmpsb
jg
mov
lea
stos
adc
shlb
idivl
dec
and
loop
and
das
mov
mov
mov
int3
cwtl
loop
cmp
jge
xor
inc
in
test
inc
repnz
loope
or
rcrl
out
mov
and
sbb
movsb
push
in
int3
icebp
and
movsl
lods
notl
jecxz
sub
pop
xchg
pop
aaa
adc
push
ror
mov
in
sahf
dec
inc
ret
ror
bound
movsl
or
jbe
mov
stc
adc
lds
test
and
bnd
add
cmp
leave
sbb
hlt
fwait
ret
dec
xchg
sbb
lds
and
lahf
arpl
push
mull
pop
push
pop
in
cmp
xchg
aaa
pop
adc
adc
mov
test
push
out
mov
rorl
mov
add
jno
dec
xchg
js
sub
dec
adc
test
mul
pop
push
cld
inc
jecxz
test
mov
out
pop
testl
in
pop
fsubrl
add
out
fildll
or
ds
bound
jns
cmc
cmpsl
nop
push
pop
aad
jbe
adc
sbb
pop
mov
pushf
movsl
cmp
sbb
dec
test
add
scas
divl
dec
call
sub
fdivr
mov
sbb
into
and
mov
mov
fcomp
inc
pop
xlat
cmp
fs
xor
sub
out
ljmp
inc
call
xchg
data16
and
and
mov
lods
int3
pop
pop
sbb
in
jno
xchg
test
lcall
push
pop
mov
test
jle
push
popf
inc
pop
lret
rorb
mov
or
stc
mov
pop
xchg
sub
ja
aam
lea
mov
xchg
dec
sbb
push
or
mov
xchg
mov
push
add
pop
mov
add
pop
lock
aad
xor
je
or
je
daa
out
loope
xor
jp
mov
xchg
sarw
dec
fcoms
aaa
hlt
arpl
scas
sbb
enter
and
sbb
jmp
lret
mov
cmp
cmp
inc
or
xchg
inc
outsl
mov
jmp
sub
adc
push
xor
pop
and
fdivrl
cmp
in
fcomip
cmp
stos
stos
lock
mov
cmp
les
pop
cli
mov
xchg
jnp
fisttps
es
push
test
int3
mov
or
pop
pmuludq
inc
mov
cmp
push
loop
sbbb
stc
pop
dec
push
mov
push
sbb
fs
jbe
sbb
imul
imul
mov
ret
sub
push
ret
test
push
cmpsl
mov
push
push
mov
push
stc
aas
jns
dec
fildll
adc
out
fs
stc
or
push
mov
pop
adc
sbb
fisubs
lret
bound
inc
jnp
fidivrs
xor
mov
aam
inc
loope
push
outsl
jge
sbb
sbb
push
fidivl
inc
or
sub
jmp
xor
xor
xchg
mov
insb
push
push
and
sti
out
add
stos
js
cwtl
popf
mov
push
inc
test
sub
xor
data16
and
mov
xchg
xchg
movsl
xor
pop
movsb
inc
repnz
iret
mov
push
lock
out
lcall
mov
xchg
fists
popa
or
xor
inc
call
dec
sbb
push
mov
push
fwait
and
ret
mov
shll
cmpsb
repnz
sbb
xchg
or
movsl
xchg
pop
adc
jecxz
inc
loop
push
sub
loopne
mov
mov
outsl
or
scas
adc
push
popl
xchg
lds
insl
and
in
rcl
out
arpl
mov
imull
lds
call
popa
in
mov
aad
pop
dec
mov
aas
movsb
mov
les
jl
in
lcall
fwait
sub
shll
stc
adc
out
xor
jae
inc
or
pop
jge
std
mov
lods
in
bound
pop
push
inc
adc
out
ds
or
in
xchg
outsl
clc
jne
addl
push
xchg
shrb
daa
xor
in
push
fcomps
in
gs
push
mov
mov
and
cs
xor
add
and
loopne
lret
out
test
push
inc
xchg
cli
rcrl
push
cmp
and
icebp
or
jmp
ds
pop
lock
adc
sub
pop
into
lods
sbb
data16
sbb
loope
stos
call
das
fldenv
popl
fstpl
cli
jge
popf
pop
cmpsl
call
jge
adc
sti
mov
imulb
test
push
inc
fwait
ret
cmp
int3
fsubrl
cltd
cmpsb
inc
xchg
pop
in
je
mov
cmc
mov
sarb
dec
jbe
inc
sub
dec
imull
test
lods
jmp
cmp
fdivrs
inc
sub
subb
dec
pop
rolb
in
jnp
test
or
cs
push
lock
jne
xchg
daa
dec
in
cmc
movsl
cwtl
ret
jg
imul
sub
mov
shll
ret
cmp
or
rorl
sbb
mov
in
test
inc
hlt
and
cld
or
adc
pop
fmul
jns
pop
movsb
jge
cltd
cmp
jle
jae
je
push
rorb
mov
insl
xchg
jl
sbb
imul
scas
sbb
insl
and
hlt
xor
insl
leave
movsl
mov
cwtl
dec
ja
lahf
sub
mov
test
jbe
pop
xor
das
mov
call
shlb
sbb
jno
rcll
xchg
outsl
iret
and
test
xchg
jle
fiadds
push
loope
fldt
cmp
or
mov
ljmp
mov
popa
iret
mov
add
call
loop
frstor
in
xchg
pop
and
dec
dec
jnp
push
clc
mov
jp
outsb
std
xor
imul
gs
aam
das
pop
popl
pop
scas
mov
cmpsb
push
dec
cltd
movsl
aam
sahf
push
push
push
shrb
subl
dec
xchg
xor
jle
push
fcmovu
xor
push
lods
out
mov
xchg
add
and
mov
in
loop
stc
lods
inc
dec
lea
dec
inc
mov
jmp
fmull
dec
add
push
mov
jmp
outsl
out
in
imul
leave
cmp
and
aad
mov
lds
xor
incl
lret
sbb
xor
xor
xor
fldt
sub
js
and
jecxz
std
jle
insl
movsl
shlb
mov
push
mov
cmpsb
out
lea
or
pop
ret
push
xor
movsl
mov
add
mov
inc
ss
sbb
add
iret
test
sub
popa
xchg
sbb
mov
in
loopne
jbe
mov
jle
cmp
dec
test
pop
xor
add
ficoml
pop
icebp
sbb
std
loope
mov
pslld
loopne
mov
testl
sub
xor
adc
jmp
jnp
cwtl
mov
aad
das
xchg
jns
and
adc
inc
cmc
bound
push
stos
ljmp
ss
es
outsl
cli
dec
je
or
mov
test
movsb
push
mov
in
cmp
pop
push
outsb
mov
pop
push
fcomps
push
jmp
out
mov
scas
pop
das
iret
adc
fisttpl
and
cmc
lret
sbb
aam
jle
add
lret
jp
ret
fnstsw
lcall
push
dec
sub
mov
imul
jecxz
jo
insl
movsl
mov
iret
push
mov
pop
loope
hlt
dec
dec
out
lds
push
mov
movsb
sub
inc
and
xor
mov
dec
cmp
je
mov
sub
cs
mov
fs
push
jae
mov
mov
hlt
xchg
mov
cmpsb
jle
cltd
addb
into
or
sbb
fcoms
add
aas
dec
int3
sbb
jae
sti
lds
lea
push
ja
sub
or
stos
add
cmp
dec
out
add
jbe
cmpsb
test
pusha
cmpsl
pop
adc
scas
js
xor
cmpsl
scas
fidivrl
imull
pop
pop
rorl
roll
inc
fisttps
mov
and
cltd
stos
rcll
mov
mov
fcoml
mov
add
and
movsl
mov
iret
or
mov
mov
cmp
sub
push
cmpsb
mov
js
dec
push
fwait
add
jge
into
pop
iret
test
dec
dec
push
sbb
jecxz
addr16
mov
mov
push
popa
cld
movsb
mov
rcrb
pop
sbb
xchg
mov
xor
lcall
or
xchg
jle
mov
mov
fs
shlb
inc
jo,pt
pushf
xor
mov
sahf
dec
xchg
xor
mov
flds
pop
sti
jno
sbb
pop
divl
int3
insb
adc
ljmp
sub
mov
arpl
loope
jae
push
das
lds
inc
in
mov
fdivrl
xchg
cwtl
inc
push
sbb
mov
mov
cmc
pop
std
ret
adc
or
xor
adc
add
push
mov
pop
iret
mov
push
jg
mov
insb
sub
aad
inc
mov
cmp
pop
pop
sbb
lods
insl
inc
ljmp
push
pushf
pushf
inc
into
cwtl
sub
jno
push
push
add
pop
push
inc
test
sub
add
jae
sbb
ljmp
xor
daa
xor
mov
int
push
aad
push
daa
fnstsw
shlb
rorl
rolb
and
pop
xor
pop
jns
push
fdivl
sbb
push
mov
sti
and
call
mov
pop
fldcw
inc
push
jns
jbe
mov
dec
mov
jnp
ljmp
sbb
adc
decl
push
push
fdivrs
dec
outsb
cmp
push
cmp
xchg
xorb
dec
std
movsl
lea
mov
out
stos
cmp
push
add
xor
out
and
dec
lods
mov
mov
sti
ds
xchg
stos
jmp
repz
dec
cltd
dec
inc
inc
int
ficoms
mov
cmc
int
imul
xchg
sbb
popf
ficomps
out
xlat
scas
arpl
push
test
push
xchg
cwtl
leave
and
ret
lcall
add
loopne
into
inc
adc
lock
rcrl
pop
test
arpl
loope
mov
rcrl
cmp
cmp
mov
or
sub
and
in
push
jo
addl
ja
ss
mov
int3
lock
fwait
mov
xorl
and
push
mov
push
adc
pop
movsb
cmp
adc
jle
sbb
xor
out
push
jmp
inc
bound
mov
scas
pop
fimull
cmp
clc
out
sub
ss
movsl
leave
insl
fdivrp
popf
adcl
jg
sbb
pop
out
xor
or
ss
inc
push
fnstcw
fimull
jnp
xor
das
xor
adc
adc
jns
hlt
cmp
bound
mov
mov
stos
setge
jns
icebp
shll
into
jnp
xchg
jmp
ret
fdivp
xchg
in
add
test
adc
cmc
fldt
arpl
xor
scas
inc
jecxz
lret
fisttps
jbe
mov
and
mov
mov
test
je
push
adc
jne
sti
dec
insl
lock
fwait
adc
jl
push
cld
push
push
jmp
gs
mov
insl
cwtl
cwtl
fs
adc
mov
pop
sbb
bound
add
xchg
and
adc
lods
and
dec
popf
mov
cltd
enter
or
fidivrl
sub
add
and
pop
jmp
lods
iret
ret
jge
inc
sti
cmp
sbb
add
mov
cmp
test
je
mov
imul
imul
cmpsl
mov
xchg
dec
sub
push
add
push
adc
xchg
add
testb
fisttps
in
int3
and
mov
push
mov
in
std
cmpsb
sbb
mov
test
adc
in
mov
push
fiaddl
addr16
jl
and
and
stos
into
gs
loopne
fs
imul
adcb
andb
enter
adc
mov
mov
sahf
cmp
xchg
insl
out
call
cs
repz
mov
enter
and
pop
jp
push
movsl
fdivrl
outsb
adc
sahf
arpl
dec
cmp
addr16
lcall
xchg
add
rorl
push
push
aad
dec
sub
mov
pop
divb
mov
sahf
roll
push
sarb
mov
mov
lret
push
imul
stos
fisubl
pop
jle
cmp
clc
mov
cmp
xlat
in
test
push
cmpsb
xor
inc
mov
adc
scas
jnp
and
add
inc
les
lret
in
pop
add
pop
flds
jecxz
mov
jg
cmc
pop
shlb
test
fistps
adc
movsb
pop
mov
jmp
leave
or
jbe
bound
xchg
repz
popa
dec
jno
lea
dec
and
add
jp
cmp
dec
mov
mov
js
in
cmp
push
or
or
and
inc
xor
or
call
jle
mov
stos
shll
jns
and
mov
mov
test
lea
outsl
or
add
dec
stos
mov
popa
and
lcall
les
out
arpl
in
cltd
jg
pop
mov
pop
daa
fdivs
test
adcb
push
inc
sti
add
stos
ja
mov
shlb
pop
out
adc
mov
movsb
push
subb
mov
sahf
mov
cli
pop
lods
scas
inc
das
cwtl
test
cmp
push
roll
hlt
aaa
pop
clc
or
cmp
mov
stos
dec
cwtl
std
cmp
jle
xor
mov
jle
jg
jmp
loope
loop
inc
xor
sahf
pop
push
jne
cmpsb
pop
popf
inc
mov
rolb
lret
and
xor
push
and
and
jns
pop
or
outsw
xor
dec
cs
and
lahf
mov
sbb
pop
outsb
pop
cmp
mov
andb
mov
push
jnp
push
mov
fisubrs
or
pop
mul
clc
push
push
int3
mov
fsts
in
fst
inc
push
cmpsl
cmpl
mov
mov
repz
lret
fimull
jle
jbe
bound
xchg
int
jb
fucomip
xchg
je
mov
cld
adc
jle
sbb
into
jmp
adc
clc
pop
fs
mov
xor
cmc
pop
in
xchg
cwtl
add
jns
daa
push
outsl
mov
in
jle
call
mov
mov
addr16
les
cli
cld
adc
dec
inc
jp
push
loopne
daa
pop
and
ja
pusha
in
adc
jbe
xchg
pop
fwait
sbb
adc
lock
and
mov
add
ret
loopne
icebp
sub
dec
roll
mov
mov
jle
mov
and
push
pop
mov
cmc
mov
xchg
fwait
out
cmpsb
mov
das
mov
push
jmp
adc
pop
mov
inc
jge
mov
push
pop
enter
mov
fiaddl
mov
sub
jb
dec
jb
or
repz
inc
sub
fiadds
aad
mov
pop
pop
sub
rolb
adc
jb
es
fldenv
stc
sub
mov
and
push
mov
xchg
add
push
idivb
xchg
gs
or
push
lahf
jecxz
into
dec
xor
add
adc
xor
cmpsl
arpl
aaa
jae
xor
in
jge
movsb
adc
and
lds
xchg
pop
sbb
aaa
mov
xor
mov
dec
push
test
adc
adc
js
jne
lcallw
add
ja,pn
and
lahf
cmc
push
xlat
jecxz
js
dec
es
sarb
stc
movsb
movntq
jae
mov
push
das
lods
mov
inc
insl
loope
adc
loopne
fucomip
jne
hlt
movsl
aaa
pcmpgtb
xchg
int
cmp
sarl
dec
out
mov
mov
movsl
sti
shll
cld
sub
mov
dec
mov
cmp
lcall
fcmovb
cmp
fstl
cmp
int3
mov
mov
push
inc
pop
add
sahf
gs
xchg
sbb
jae
hlt
and
call
pop
scas
addr16
fistpll
insb
gs
mov
pop
js
pop
jl
fstpt
dec
cmp
mov
iret
arpl
cmpsb
dec
jb
cmpsl
lret
dec
inc
test
dec
xor
mov
pop
jno
pop
mov
inc
dec
jecxz
adcl
xor
test
arpl
fucomip
in
sahf
fisubrs
insl
fldt
push
jl
cmc
push
in
sti
cmc
pop
sub
sti
cmc
fdivrp
popa
sbb
je
adc
push
in
out
stos
cli
sub
daa
pop
mov
xchg
les
movsl
adc
in
iret
js
lods
sub
push
xor
std
jbe
pop
fidivrs
sbb
push
shll
cmpsb
push
int
add
sbb
mov
or
push
pop
imul
xor
xchg
sbb
movzwl
lcall
push
scas
stos
push
xchg
push
or
lods
aas
lret
test
mov
and
xchg
aad
imul
inc
pop
fs
jmp
jmp
jg
fdivrl
mov
or
sbb
xchg
ret
pop
in
movb
das
xor
inc
mov
or
scas
mov
cmp
or
jne
addr16
sbb
daa
fsubrs
pop
mov
jnp
inc
xor
cmc
pop
orl
jge
push
xchg
iret
push
mov
test
jb,pt
popf
pop
scas
cmc
and
js
loop
jae
test
pop
xor
jae
pop
imull
pop
or
out
mul
and
sarb
std
imul
and
fbstp
les
cld
sbb
sbb
test
xor
xchg
fnsave
push
inc
test
mov
mov
mov
rcrb
xor
jbe
jl
ret
ja
adc
imul
vcvtps2pd
cmp
nop
das
mov
mov
and
popa
mov
dec
cs
lcall
jne
xor
jl
cld
xchg
rcll
std
cwtl
imul
xor
int
mov
push
outsb
cld
cmp
ja
mov
incl
jp
mov
jno
inc
and
pop
aas
sub
movups
jmp
jecxz
enter
out
mov
lods
mov
sahf
mov
rcl
aad
mov
jnp
jp
dec
sub
cltd
mov
push
add
jge
push
scas
or
jb
aam
out
inc
adc
push
insl
mov
sub
lock
cmp
dec
cltd
scas
addr16
or
pop
outsl
sti
fcoml
repnz
out
cmp
insl
jne
or
jne
stos
dec
add
mov
call
inc
or
push
testl
xor
fildll
arpl
into
insl
ficomps
sub
fidivs
fnstsw
fdivs
jnp
fucom
jl
push
loope
enter
jo
enter
mov
test
test
cmpsl
test
adc
inc
shlb
pushf
jp
add
and
pop
add
jb
std
movsb
stos
dec
sbb
mov
jo
movsb
clc
adc
loop
sbb
fcmovnbe
popa
push
xchg
loop
subl
mov
int
and
and
pop
ficompl
les
sub
icebp
cmc
cmp
cmpsb
fisubrs
es
push
push
add
sub
xchg
add
mov
fisttpll
inc
shrl
dec
hlt
clc
in
shr
add
and
and
outsl
jns
inc
push
pushf
mov
adc
aad
push
mov
inc
push
pop
and
push
test
into
cltd
scas
aaa
int3
jne
divl
pop
or
ret
test
pop
cmpsb
pop
aam
mov
shll
les
mov
add
add
inc
jmp
mov
xlat
in
and
lock
jbe
sub
cmp
ror
push
lcall
fists
dec
jp
sub
add
cmp
push
adc
dec
mov
jae
inc
dec
aaa
lods
push
insl
ja
push
test
xor
and
roll
fwait
hlt
gs
mov
out
imul
jle
and
push
lret
aaa
push
rol
add
into
xchg
inc
mov
fisttpll
push
or
ss
in
das
and
jns
xor
cmp
cltd
fists
xorl
popf
add
out
outsb
xchg
mov
lods
ret
enter
call
into
mov
rcll
into
mov
cs
xchg
mov
and
mov
jmp
add
xchg
scas
cmpsl
imull
xchg
out
sbb
rorb
sub
popa
out
adc
mov
pop
rorb
sbb
ja
insb
shlb
out
out
ror
cmpsl
outsl
movsb
pop
loopne
push
inc
push
popa
lret
mov
jbe
inc
cli
add
cmpsl
mov
stos
lret
lock
pop
iret
xlat
test
out
fldl
push
lret
cmp
jle
dec
mov
xor
sub
mov
popa
inc
pop
sbb
cmp
insb
jmp
outsb
or
mov
push
test
cmpb
andl
adc
mov
sub
push
and
pushf
in
lock
aaa
and
sbb
mov
or
jl
daa
adc
jae
jp
movd
mov
outsl
fld
xchg
xchg
inc
dec
loope
jmp
inc
stos
mov
push
ficoms
mov
mov
xchg
xchg
mov
adc
cmp
jge
push
xchg
fbld
lcall
add
jmp
xlat
mov
test
pop
leave
pop
js
cmc
decl
repz
aas
dec
xchg
icebp
mov
hlt
push
inc
inc
fsubr
mov
in
add
mov
jb
add
fcomi
ds
jp
shrl
dec
call
test
mov
jg
jge
in
ftst
ja
mov
pop
loop
in
cmpsl
sbb
out
inc
xor
cltd
outsl
dec
push
popa
insb
hlt
daa
dec
fadds
out
scas
fdivr
call
pop
mov
lock
jns
leave
loopne
ror
cmpb
push
adc
add
sub
pushf
fcoml
push
ret
jge
scas
xor
mov
xor
lock
ss
repnz
in
jl
inc
mov
fsqrt
cmp
fsubrp
mov
movsl
test
inc
test
inc
pop
xor
dec
or
jb
xor
outsl
push
leave
in
out
push
ss
fld1
mov
out
mov
stos
fs
filds
ja
sbb
jl
arpl
je
adc
and
aad
rcrl
cmc
ret
test
push
js
insl
and
cmp
ffree
ljmp
push
call
addl
and
sub
jl
mov
mov
out
or
sub
mov
or
sti
cmp
test
aam
mov
shrl
mov
insl
scas
add
sub
and
xorl
lret
icebp
shl
repz
push
sub
leave
insl
pop
scas
inc
mov
dec
popa
and
dec
lock
xor
push
iret
jg
lea
add
clc
lds
cmp
jg
xchg
sti
push
add
in
jecxz
mov
dec
stos
push
xchg
leave
pop
cli
mov
les
ret
xor
and
cmpsb
mov
mov
fcomps
and
aad
pop
out
xchg
pop
in
cmpsl
sub
add
scas
mov
aad
jnp
xchg
jp
inc
jmp
pushf
mov
push
stc
pop
jmp
sub
jne
ss
loop
and
idiv
jns
das
push
repnz
sbb
add
dec
call
lods
in
xchg
lock
movsl
cmp
inc
push
dec
into
movsl
dec
push
sbb
test
dec
mov
push
lods
lds
into
inc
dec
xchg
fwait
mov
clc
divl
xchg
pop
pop
sbb
adc
mov
push
sub
mov
adc
push
lcall
das
out
loopne
pop
xchg
ret
and
mov
mov
pop
lods
hlt
jae
mov
fwait
loope
rorb
stos
fcoms
xor
mov
stos
ja
add
subb
push
mov
daa
fst
int3
ds
dec
push
outsb
stc
mov
jne
in
jbe
testb
das
ss
lds
mov
push
cs
sti
push
add
dec
data16
fisttps
out
xor
fisubs
cmp
insl
ja
add
mov
icebp
scas
cmp
mov
out
out
jg
mov
int3
add
imul
and
xor
dec
scas
test
in
push
int
push
push
inc
mov
pop
lea
push
loope
arpl
or
mov
jmp
mov
and
mov
mov
add
gs
xchg
ret
push
jmp
dec
outsl
nop
inc
cld
push
mov
jbe
test
fsts
test
ret
and
pop
mov
cwtl
dec
jl
cmp
shrb
lock
leave
inc
xchg
sub
and
stos
mov
rcrb
jb
popa
pop
mov
mov
sbb
xchg
push
iret
pop
adc
sbb
nop
scas
pop
sbb
push
stc
mov
adc
sti
fldenv
std
in
dec
sbb
pop
pop
andl
cmp
inc
loopne
lret
xchg
popa
jno
and
fcmovb
adc
and
shrb
xchg
jne
iret
sahf
std
mov
jmp
and
dec
ljmp
stos
icebp
xchg
or
add
in
pop
faddl
mov
jno
insb
das
push
outsl
pop
xchg
shl
pop
dec
sbb
inc
ret
sbb
shl
xchg
and
clc
shll
in
cmp
aad
fisubs
dec
fs
jg
add
jb
push
in
mov
pop
daa
aam
push
push
mov
subb
or
addb
sub
mov
and
mov
clc
adcb
or
cmp
inc
sub
dec
test
sti
cmpsb
cmpsb
jecxz
call
popf
push
inc
cmp
and
dec
push
cmpsb
iret
sub
pop
mov
push
fs
mov
lcall
adc
mov
mov
rcrb
out
inc
mov
cmc
pop
cmpsb
mov
out
push
in
lock
pop
les
xchg
sub
gs
psubw
xchg
fadds
inc
sub
cmp
aad
mov
push
mov
aad
dec
ss
xchg
xchg
sub
leave
lock
jns
xor
test
idiv
jo
push
push
test
out
xor
adc
and
jl
dec
inc
dec
and
mov
add
jno
fcompl
inc
inc
push
jge
imul
jecxz
ret
or
adc
inc
dec
imul
test
jbe
mov
xchg
adc
mov
or
aaa
mov
bound
into
sub
inc
pop
test
mov
sbb
mov
je
orl
aas
cmp
pop
adc
outsb
jae
js
outsl
cld
lods
inc
mov
mov
ret
bound
ficomps
adc
insl
xor
mov
stos
inc
dec
scas
shl
inc
outsl
jb
cld
lock
cmp
xchg
jne
out
dec
roll
sbb
sbb
std
and
mov
test
vminsd
inc
mov
aaa
pop
loop
movsl
xor
adc
sub
lods
push
add
lock
add
adc
jecxz
push
stos
xor
push
pushf
sub
or
dec
pop
iret
jae
shlb
out
inc
pop
push
pop
mov
cltd
mov
scas
lock
cmpsb
push
gs
inc
adc
ljmp
pushf
pop
mov
pop
imul
dec
enter
adc
sbb
sahf
push
jmp
imul
dec
or
lea
insl
sbb
mov
int3
imul
or
cmpsb
ret
cmp
mov
adc
mov
mov
or
mov
aad
fcmovbe
xchg
dec
cmp
xor
adc
scas
sbb
pop
leave
mov
dec
mov
and
lods
dec
cmp
mov
mov
imul
and
std
push
test
rorl
lods
inc
sarb
xor
out
xchg
cld
or
jp
or
and
mov
inc
inc
push
je
rorl
dec
mull
jbe
in
dec
fiadds
sbb
push
mov
sbb
xchg
leave
fs
add
cmp
test
cwtl
mov
or
mov
enter
outsb
test
cmc
lcall
and
push
in
xchg
in
or
inc
in
enter
xchg
fldt
leave
fmul
cmpsb
dec
cmp
ja
enter
mov
aad
and
loopne
ja
mov
push
int3
and
stos
mov
mov
dec
sub
cmpsl
enter
bound
lea
imul
lock
das
mov
dec
jmp
lods
mov
test
push
lcall
and
or
and
hlt
sti
mov
popf
or
cmp
adc
xor
lods
cwtl
arpl
iret
push
push
cmp
test
cmpsb
int3
push
mov
xor
push
mov
mov
sbb
xor
xchg
xor
and
cmp
pop
add
adc
and
jmp
jle
mov
xor
dec
int3
mov
lds
scas
test
les
cmp
out
lret
int3
mov
add
es
xor
xor
out
xchg
push
fwait
pop
aam
sub
rolb
mov
in
insl
dec
mov
inc
adc
lods
sarl
test
adc
add
adc
inc
push
aas
js
jle
add
pusha
popl
dec
fisttpll
adc
repnz
cli
inc
rorb
mov
cmc
sub
mov
dec
inc
lahf
dec
fs
pop
cmpsb
xchg
in
js
jno
xchg
fstpt
bound
jge
dec
jmp
jle
aas
xchg
test
pushf
in
cltd
dec
xor
or
dec
repnz
stos
adc
push
daa
jns
lea
mov
xor
test
movsl
push
aaa
mov
movsb
repz
movhlps
cmpsb
dec
jae
dec
stc
push
stos
addr16
add
mov
xor
stos
das
fdiv
sbb
fucomip
lea
test
outsb
ret
mov
leave
pop
push
cld
mov
outsb
adc
mov
in
sbb
in
ret
push
loopne
cmpl
in
sub
add
lahf
sbb
push
adcl
push
loop
push
jo
ja
mov
push
mov
in
sub
push
and
aas
pop
and
cli
lods
pop
jae
xchg
mov
lds
pop
xchg
cltd
cmpl
gs
jg
icebp
mov
clc
xlat
dec
cmpsl
test
fisttpll
inc
adc
inc
mov
ds
iret
cwtl
in
add
ret
dec
rorb
test
lds
or
lret
test
xchg
inc
pop
adc
mov
add
aas
sarl
sbb
sub
rcrb
jno
xorl
mov
call
or
push
mov
hlt
sub
outsl
lods
adc
sub
cmp
cmc
push
jle
xchg
adc
std
lods
mov
fisttpll
clc
xor
adc
call
imul
popl
aad
popa
jo
add
cmp
cs
cwtl
ss
int
es
xor
mov
inc
push
add
mov
fs
dec
aaa
fisubrl
inc
lret
mov
pop
test
cmp
xor
int
gs
xchg
in
enter
dec
or
nop
orl
mov
push
loopne
xor
incb
rorl
loopne
pushf
aad
mov
push
pushf
or
pop
imul
fdivs
imul
test
mov
call
and
ret
adc
mov
psrlq
sub
cmp
dec
in
mov
add
fwait
inc
jb
jecxz
scas
fwait
hlt
insb
loop
sbb
add
fstps
jne
iret
mov
ret
fwait
aaa
mov
jmp
push
adc
btr
pop
jge
cli
xorl
roll
andb
scas
cmp
psubsb
in
push
std
pop
lods
ljmp
sub
push
or
dec
adc
mov
loop,pn
jecxz
test
or
lret
lods
mov
je
or
imul
dec
push
mov
adc
out
rep
xchg
inc
and
enter
je
ret
pop
xchg
test
popf
dec
and
rclb
aas
aaa
cmpsb
loope
les
add
adc
bound
mov
pop
sub
cmp
out
movsl
dec
jmp
jmp
or
or
cli
sarb
cltd
adc
xor
inc
in
jbe
add
mov
sbb
xchg
aam
xor
bound
arpl
fcomip
pop
add
mov
js
out
mov
adc
sub
mov
push
imul
cmp
shrb
cmp
addr16
and
scas
adc
dec
pop
data16
out
adc
push
rcll
jl
sbb
mov
push
dec
out
mov
sub
ret
pop
or
std
loop
mov
or
dec
pop
fistpll
push
loop
enter
pusha
or
or
push
iret
ret
inc
scas
rcrl
mov
sub
mov
ds
aad
lahf
addl
fmull
pop
sti
loope
addb
fisttpll
adc
adc
jg
sub
into
adc
ficompl
fisubl
and
pop
dec
inc
outsb
testl
addr16
ss
add
lret
aam
stos
sbb
cmc
pop
sub
fbld
sub
pmullw
lret
inc
test
or
cmp
int3
enter
clc
xor
stc
fisubrl
sbbl
cli
adc
test
insl
pop
dec
js
out
jge
sbb
enter
xor
decb
out
and
sarb
mov
sbb
mov
push
loopne
pop
popl
xor
rorb
jnp
out
cmp
in
and
mov
pop
mov
jno
push
add
ror
insb
cmp
or
test
jb
lret
test
stos
nop
lods
push
push
dec
test
mov
pop
in
jecxz
arpl
and
ret
arpl
jmp
out
xchg
push
jl
xor
and
fdivr
cmp
shrb
cltd
xlat
mov
outsl
pushf
push
sub
cmp
cmp
rcrl
mov
dec
mov
xchg
xchg
int
jmp
xchg
enter
pop
js
enter
xchg
xchg
jbe
div
cmpsl
inc
pop
scas
sbb
lock
xor
cmp
fdivrl
jmp
les
ljmp
out
out
jae
pop
cwtl
sub
xor
rcll
in
cmp
add
cmp
xchg
sbb
imul
inc
sub
cs
mov
jae
jbe
jmp
shl
push
adc
clc
mov
adc
aas
inc
repz
gs
adc
inc
cmpsl
test
dec
fildll
aad
hlt
lods
jbe
sub
fildl
sahf
jmp
call
cli
outsb
aad
adc
cmpsl
je
mov
sub
cmp
jge
les
mov
mov
push
xchg
sbb
inc
in
imulb
push
add
std
rcll
outsl
mov
aad
jg
sbb
cmpsb
or
mov
orb
test
loope
mov
inc
mov
sbb
xchg
sbb
fcoms
pop
mov
mov
mov
mov
out
mov
test
in
cmp
orb
mov
int3
ret
outsl
mov
xor
xchg
in
mov
test
cmp
xchg
mov
mov
sub
mov
jmp
sbb
popf
sbb
xor
adc
jne
leave
mov
icebp
mov
or
push
pop
mov
dec
rorl
fcompl
pop
jmp
and
call
dec
mov
pop
cs
xchg
jns
xchg
pusha
mov
mov
mov
dec
dec
stos
mov
aam
push
push
insl
loope
sub
inc
inc
sbb
pop
inc
pop
add
into
aas
add
mov
jns
jns
insb
loop
add
xlat
push
test
xchg
mov
into
ja
hlt
adc
xor
sbb
mov
xlat
ficoml
jmp
lea
pop
fisttpll
lahf
push
ret
mov
lahf
inc
insb
sti
pop
cmp
cmc
jge
fbstp
mov
repz
jmp
stos
movsl
adc
mov
cmp
test
xchg
inc
out
inc
sbb
and
test
fsubs
pusha
in
push
dec
nop
jbe
push
out
imul
cltd
cli
icebp
cmp
dec
lds
sbb
inc
jmp
insb
dec
jp
sub
arpl
pop
sub
cmc
cmp
sbbb
mov
or
add
cbtw
es
fdivrs
sub
shll
or
mov
stc
ret
jecxz
sti
in
ss
addr16
xorb
arpl
notb
pop
lret
loop
repnz
das
orb
das
inc
push
dec
or
pop
push
pop
cmpsl
ja
mov
xor
adc
or
rorl
jns
adc
inc
notl
js
cmp
mov
lods
hlt
mov
sti
mov
pop
je
dec
aad
faddl
fdivrs
push
mov
mov
movl
pop
or
adc
repnz
nop
loop
rclb
pop
xor
pop
test
add
je
pop
and
es
fnstsw
mov
mov
cs
cmpsb
insl
movsb
aas
out
into
pop
stos
push
pop
fnstcw
stos
loope
push
cmp
jl
jmp
movsb
jecxz
ss
dec
jg
pop
aam
sub
pop
mov
jp
sub
pop
pop
sbb
int
and
push
cmpsb
out
xchg
cltd
scas
icebp
cltd
out
fxch
and
or
push
popf
data16
bound
jecxz
arpl
sbb
loop
stc
loop
jo
fistpl
repz
testl
jo
loopne
shl
or
js
jge
lea
rcrb
jp
inc
imull
std
movl
cli
pop
out
call
jno
out
adc
fadds
mov
xorb
iret
sub
lods
xchg
push
mov
in
or
scas
mov
jbe
jns
adc
cltd
into
jo
mov
sti
rcr
or
inc
call
cli
scas
push
mov
fst
and
cli
es
stc
ficoms
iret
fldt
stc
fchs
dec
lds
and
mov
add
into
inc
pop
sub
test
outsl
sahf
pop
and
les
and
lret
jbe
mov
lret
cmp
frstor
cmc
sbb
cmp
inc
pop
scas
pusha
jnp
jp
in
js
popa
mov
dec
push
test
inc
mov
aas
loope
icebp
sub
xor
push
pop
arpl
shl
fisttpl
xchg
call
mov
xchg
mov
insb
and
and
mov
mov
test
sub
sbb
sbb
cmpsb
sbb
pop
mov
iret
scas
and
push
mov
in
gs
mov
add
ret
stos
rcll
out
fidivrs
subb
dec
ficoms
inc
cld
aad
mov
cmc
mov
push
pop
js
pop
int
or
xchg
mov
jbe
sbb
sub
cmp
rcr
int
cmp
lahf
jle
lret
jae
xor
scas
arpl
sbb
into
movsb
xchg
filds
lock
or
int3
test
xor
je
jae
xchg
stc
insl
xor
and
jg
sbb
in
cld
push
rcr
cmp
pop
and
cmp
and
movsb
jge
cmp
lock
or
jmp
div
cld
cmc
jb
mov
pop
pop
and
mov
jns
scas
lcall
out
pop
std
hlt
sbb
fbstp
inc
mov
mov
xlat
push
pop
xchg
sbb
sti
stc
xor
xchg
sbb
repz
dec
gs
popf
aaa
sbb
sti
add
push
outsb
cwtl
outsb
in
mov
ret
mov
loopne
loop
bound
mov
es
scas
push
mov
sbb
fwait
add
dec
and
dec
es
sbb
mov
dec
outsl
daa
adc
inc
inc
gs
rcll
adc
ds
sbb
or
stc
push
fs
xchg
fcomps
test
flds
adc
dec
push
push
cmp
rolb
dec
sbbl
mov
pop
dec
aam
jne
xor
jb
cltd
and
jp
outsl
sahf
sbb
int
xor
adc
das
testb
test
jne
scas
insl
add
shlb
adc
jecxz
jg
or
cli
cmp
or
jecxz
and
stos
sbb
xor
pop
cmp
jne
loop
test
out
add
push
icebp
xchg
data16
sbb
adc
es
sub
pop
adc
popf
jo
pop
xchg
daa
jb
inc
fabs
xor
add
pusha
dec
inc
xor
nop
sub
cli
cld
mov
dec
fistps
fcmovu
test
shll
shll
mov
fisubrs
insl
test
incl
frstor
daa
xchg
add
movsl
aam
icebp
or
cmc
mov
xchg
call
mov
cmp
push
mov
out
sbb
lret
movsb
lods
adc
data16
ret
cmovo
inc
and
jne
mov
data16
dec
dec
sarl
xchg
mov
mov
push
in
roll
fidivl
test
jno
dec
lods
adcb
lret
cmp
in
mov
popf
xchg
xchg
add
xchg
lock
lret
jmp
mov
pusha
cmp
lret
dec
stc
jo
test
push
dec
int
icebp
daa
adcl
xchg
ja
in
testl
cmp
xor
aad
sub
pop
jmp
cmp
sub
clc
xchg
movsl
das
pop
idiv
cld
or
pop
push
cmpsb
pop
inc
add
xchg
dec
sbb
and
xchg
pop
es
jno
orb
movsl
xor
pop
inc
pop
inc
mov
xor
sbb
mov
sub
lock
cli
xor
fldl
stos
insl
inc
lahf
and
aad
pop
and
push
push
sub
push
les
xchg
jl
daa
pop
roll
cmp
fsubs
jg
push
std
lods
add
ret
call
pop
hlt
mov
jge
xchg
dec
jp
push
push
xchg
adc
add
sbb
push
stos
cltd
jae
push
mov
insl
sub
les
mull
pusha
and
out
pop
in
mov
and
pop
mov
hlt
mov
jbe
inc
jb
inc
js
out
or
hlt
jge
or
shll
out
cmp
mov
ret
ret
insb
xor
cmp
jle
lret
or
lret
pop
dec
loope
pop
push
sbb
or
in
adc
inc
arpl
add
repz
mov
insl
ja
sub
or
das
dec
push
cmpsb
repnz
enter
pop
jo
xor
aaa
inc
ret
stc
sbb
lcall
or
nop
js
lods
aam
inc
pusha
xor
stos
push
rol
pushf
sbb
mov
cmpsb
inc
stc
aas
cwtl
jne
mov
les
sbb
fcmove
cmp
hlt
xor
sbb
adc
mov
gs
int3
inc
cli
jno
push
cld
nop
out
push
mov
add
dec
les
mov
cmp
xlat
sti
lcall
mov
jns
cmp
jno
nop
and
adc
xor
cmpb
loopne
std
and
out
lret
in
and
and
or
lahf
fldl
push
imul
and
xor
lea
push
pop
xor
mov
jl
mulb
mov
test
int3
test
cmpsb
lret
jl
xchg
cmp
jmp
adc
insl
bound
icebp
in
or
gs
dec
dec
xor
cmc
jl
icebp
loope
jl
jno
popa
xor
dec
lods
insl
mov
gs
mov
fnstsw
add
daa
lcall
jb
pop
xor
ss
pop
jecxz
jg
repz
push
in
or
cmc
xor
mov
sbb
and
mov
roll
adc
mov
mov
and
mov
xchg
aam
loop
gs
adc
mov
js
repz
stc
les
scas
out
sti
mov
fimuls
cmp
or
adc
lock
scas
aas
inc
adc
pop
adc
xor
mov
les
xor
and
lret
fsubr
dec
lock
mov
lods
adc
pop
int3
dec
push
fldenv
popl
inc
icebp
xor
mov
cwtl
push
in
shrl
or
andb
outsl
push
stc
xchg
fyl2x
dec
mov
inc
cwtl
add
adc
xor
lods
dec
jmp
adc
cmp
fnstenv
jge
xor
push
gs
movsb
fisttpl
and
stc
mov
xor
stos
push
adc
push
or
sbb
addr16
xchg
xor
cmp
ret
out
push
mov
sahf
les
or
push
shll
jns
aad
and
je
mov
sbb
std
in
cmpsl
push
cld
dec
int3
movsl
xor
push
and
lea
push
sti
scas
push
out
pop
or
rclb
lahf
dec
pop
rep
aam
pop
je
inc
xchg
outsb
inc
pop
call
pop
sub
push
jmp
scas
adc
inc
or
int3
inc
sbb
ljmp
cmp
pop
outsb
push
pop
mov
orb
and
cmp
mov
popa
jp
repz
ja
fwait
out
mov
clc
sti
mull
addb
ds
xlat
pop
xchg
call
mov
repz
or
adc
sub
pusha
sub
adc
jbe
jb
xor
mov
repz
xchg
fldl
pop
aad
ror
or
stc
hlt
push
aaa
leave
sub
or
int
test
inc
xchg
stos
adc
push
push
sbb
mov
push
or
cli
add
imul
fwait
dec
jne
ss
add
addb
cmc
sbb
mov
adc
or
sti
popf
dec
adc
loop
jo
sub
jecxz
in
sbb
xor
xchg
out
orl
scas
or
sbb
mov
jecxz
jg
and
sbb
sti
sbb
add
mov
cmpsb
or
mov
jge
xor
imul
mov
xor
sbbb
xchg
aaa
fwait
aaa
jne
mov
sarb
fwait
and
div
arpl
adcb
push
sub
cmp
pop
mov
dec
add
in
testl
inc
enter
dec
jl
aas
aam
jp
sbb
in
mov
sbb
outsl
test
mov
add
repz
les
mov
frstor
les
push
ljmp
lcall
outsb
in
xchg
dec
pusha
pop
leave
mov
call
in
jmp
popa
aam
add
popf
mov
dec
push
lcall
cmc
ret
mov
adc
cmpsb
mov
jl
xlat
ja
rcrl
or
out
add
mov
xchg
stos
xchg
rolb
cltd
cli
in
pusha
mov
testl
push
and
test
sub
outsl
scas
add
inc
fbld
pop
inc
jle
cmpsl
adc
mov
call
jae
jecxz
stc
mov
xor
sarl
or
and
iret
ja
cmp
lods
hlt
xor
mov
out
mov
and
in
push
and
pusha
jns
enter
into
loop,pn
xchg
fwait
cmp
push
pop
testl
std
lcall
mov
push
nop
imull
insl
jbe
pop
cmp
inc
lds
mov
inc
xor
gs
push
scas
fsubr
mov
ret
imul
movsl
xor
mov
add
stc
pushf
scas
call
addl
shlb
push
mov
mov
sub
mov
adc
sub
push
sbb
lret
out
out
out
sbb
je
or
adc
cmp
adc
inc
fs
jle
mov
fwait
fiaddl
cltd
fistps
divb
jne
test
mov
and
movsl
enter
sub
xchg
test
jmp
push
jl
adc
out
repnz
sbb
pusha
adc
fwait
dec
dec
lods
sbb
cmc
mov
sahf
add
mov
ljmp
stos
lds
adc
pop
cmp
xchg
pop
in
das
sbb
jae
pop
iret
lock
popf
js
loope
xchg
jge
fisubs
add
mov
jmp
or
and
mov
pop
and
push
subl
push
pop
ljmp
lret
mov
in
fcmovnb
imul
outsb
lods
xchg
out
mov
daa
test
xorb
rclb
mov
movsl
mov
idivb
adc
dec
mov
pop
and
inc
adc
iret
shrl
xchg
test
in
xor
xchg
cmp
jl
test
mov
sub
out
xlat
es
adc
or
test
jae
int
clc
jl
adc
mov
push
mov
and
push
aad
movl
adc
ljmp
xchg
xor
adc
cmp
aaa
push
xor
pop
xor
ret
jecxz
aam
daa
gs
dec
xorb
ja
mov
dec
sti
div
lahf
xchg
rcll
ja
test
pop
add
rolb
push
pop
mov
xchg
in
sub
cmpsb
cwtl
or
xchg
jb
outsl
mov
jg
ss
mov
lock
lcall
jecxz
mov
js
add
in
stc
cmpsl
pop
movsl
shll
pop
xchg
sarb
jge
aad
jne
frstor
xor
rolb
push
jmp
fwait
dec
mulb
push
loope
mov
dec
pop
test
mov
cli
pop
pop
sub
jp
xchg
adc
or
imul
and
dec
jg
and
loop
sbb
divb
jns
cmpl
sahf
inc
mov
xchg
xchg
push
fiaddl
jb
and
daa
pop
jne
mov
sub
sub
imul
inc
rcl
sub
je
test
popl
fists
aam
adc
cmp
cmp
add
test
jge
mov
mov
aaa
sti
cmpsl
cmp
dec
xchg
push
pop
dec
or
cmp
mov
fdiv
inc
add
cmp
push
loopne
xor
mov
add
pop
loope
aaa
les
leave
loope
push
xor
in
js
jo
mov
pop
pop
pop
ret
scas
call
out
cmp
ds
mov
loop
add
cmc
and
xchg
ljmp
sub
decl
mov
gs
mov
fadds
enter
jg
jl
mov
mov
adc
iret
push
pop
and
or
mov
sbbl
fdivrs
aad
popl
sub
popf
jb
and
or
mov
popa
sbb
sub
iret
sub
lods
imul
push
fcmovnu
xchg
fs
outsl
mov
push
dec
lock
call
add
and
orb
sbb
adc
add
xchg
pop
jle
push
rorl
mov
gs
cmp
lock
mov
inc
testl
mov
xorb
les
cmp
mov
lods
fcmovnbe
mov
aam
into
orl
push
xor
hlt
xchg
mov
push
cmp
ret
mov
xor
pop
mov
imul
mov
add
inc
outsb
hlt
in
leave
sub
add
int3
out
fwait
xchg
and
push
push
add
mov
repz
jae
or
pop
cmp
fs
fldcw
push
popa
and
lods
lret
in
js
jbe
and
xbegin
fnstenv
movsl
push
mov
jbe
mov
je
lds
and
in
lcall
inc
outsl
sub
lock
jns
mulb
sbb
arpl
jo
mov
pop
ljmp
cltd
xchg
inc
ja
rcll
xchg
fwait
leave
jo
push
push
mov
sub
mull
cmc
xor
nopl
push
dec
lods
or
jge
or
stc
or
pop
xchg
sbb
cld
scas
adc
ss
leave
lods
pop
mulb
ret
lock
out
loopne
rcll
mov
cmp
push
hlt
cld
in
push
mov
in
cmpsl
int3
cmp
xor
push
sub
push
loop
out
fiadds
sub
clc
dec
jp
imul
mov
push
fcmovu
xor
rorl
inc
cmovo
jmp
cmp
ljmp
or
jbe
and
push
mov
pop
mov
sub
cld
add
mov
push
daa
dec
cs
pop
dec
jle
lahf
sbb
or
test
add
mov
mov
dec
xor
sbb
dec
mov
sub
jge
xlat
push
add
cs
cmp
jno
cltd
repz
jne
icebp
insl
stc
lcall
rolb
enter
test
je
xorb
in
mov
jns
in
inc
mov
push
push
cmp
push
jmp
jns
enter
shrb
cmp
aad
imul
or
ret
aas
inc
cs
les
cmp
pop
lret
or
out
aam
dec
mov
enter
push
mov
into
addl
or
cli
enter
pushf
jg
jbe
test
push
sub
xor
stos
pushf
mov
jno
mov
cs
dec
ss
lock
mov
mov
in
fidivl
out
loop
xor
enter
or
sti
in
sub
std
push
sub
sbb
mov
xor
adc
hlt
mov
scas
std
lret
xor
sbb
mov
xchg
push
leave
dec
mov
jne
mov
je
cmp
pop
push
je
fisubrl
ljmp
repz
cmp
stos
repz
fidivl
add
int
xchg
cld
mov
outsl
mov
lret
xor
and
and
mov
push
call
sub
add
pop
sub
shll
mov
pushf
push
imul
insl
sub
inc
jns
hlt
fisttpll
outsl
push
enter
xor
outsl
inc
or
sub
mov
out
js
inc
stos
push
shl
int
mov
pop
outsb
pushl
inc
dec
sti
test
in
mov
je
mov
xchg
cmp
outsl
decb
jb
fucomi
cld
ss
sub
lcall
jmp
addr16
cmp
in
sbb
xchg
mov
outsl
mov
jb
ficoml
jb
add
mov
push
jne
jne
test
mov
mov
in
aam
es
fcoml
add
jno
cmp
lea
ds
adc
out
pop
in
sub
arpl
mov
std
filds
pop
mov
popa
fidivs
jns
mov
dec
outsl
rclb
cwtl
jl
pop
add
fwait
mov
pop
movsb
fistpl
mov
xor
cmc
ja
les
or
and
push
push
push
mov
movsb
mov
sahf
fldlg2
hlt
movsl
jb
lret
in
push
iret
jne
or
mov
testb
int3
sbb
inc
mov
fsts
push
jnp
mov
lods
inc
mov
sub
cmp
sbbl
push
cltd
sbb
pop
pushf
sbb
inc
addl
nop
push
out
movsb
push
in
mov
ficomps
add
lret
xor
jl
mov
aaa
inc
or
leave
gs
xchg
mov
push
adc
adc
jae
and
sbb
add
mov
mov
test
adc
add
cli
pop
stos
notl
out
ja
imul
sbb
cmpsl
call
jg
data16
sbb
mov
xchg
mov
sub
movsl
mov
mov
xchg
mov
testb
inc
mov
fcom
jge
mov
aaa
jg
lahf
insb
jl
add
sub
enter
cmpsb
sbbl
cmp
test
inc
or
insb
pop
push
inc
popf
dec
sub
addl
lea
dec
jb
sbb
add
push
lcall
mov
add
mov
jnp
sub
stos
mov
fists
add
lahf
test
repnz
lret
scas
faddp
fs
inc
in
jp
repnz
fdivs
lea
xor
insl
stos
mov
mov
xchg
sbb
mov
js
in
add
fdivrl
lds
xchg
adc
mov
push
add
jl
push
in
dec
sbb
rol
dec
adc
push
pop
push
cmpsl
daa
add
xchg
push
xorl
and
into
out
adc
popf
and
sarb
add
push
scas
out
add
aad
fwait
lock
adcb
into
mov
fs
daa
pop
sbb
aaa
pop
mov
xor
cmp
out
inc
sbb
push
mov
int
lea
pop
out
jp
idivl
adc
xchg
push
push
cld
jge
mov
outsb
pushf
sahf
ror
or
push
test
stos
in
frstor
sahf
roll
inc
aad
jns
repnz
lcall
mov
adc
jbe
sarb
dec
dec
pusha
mov
sbb
arpl
out
mov
sti
aad
dec
xchg
iret
mov
lods
xchg
xor
sbb
xchg
adc
or
sbb
push
jns
iret
pop
inc
and
cmp
inc
dec
sub
xorl
rol
and
imul
mov
jae
cmp
mov
mov
pop
ret
add
add
or
outsl
and
iret
sbb
xchg
pop
xchg
aam
pop
push
aam
jle
in
pop
pop
push
xchg
lret
sub
out
in
sub
cmp
add
adc
ficoml
popa
scas
jo
fs
test
cmpsb
mov
inc
lods
stos
xlat
cmp
repz
mov
push
inc
xchg
dec
insl
push
and
out
cltd
aas
fstpt
xchg
xor
in
popa
xor
xor
jo
inc
dec
ret
adc
andb
jne
mov
push
or
aam
push
jbe
xor
lds
repnz
push
mulb
push
or
outsb
mov
dec
inc
xorl
or
cmp
and
pop
and
xor
lock
inc
fsts
xor
jge
push
mov
shlb
dec
cmp
xchg
dec
jne,pn
scas
adc
addr16
ret
fiaddl
gs
pop
push
xchg
fstl
mov
pop
and
fidivrs
mov
xchg
push
dec
sbb
sbb
loopne
push
aaa
xor
sbb
icebp
out
in
adc
jae
loopne
mov
imul
jno
sbb
daa
jno
jbe
dec
gs
sub
jecxz
pop
adc
jp
cmc
hlt
mov
std
mov
sbb
repnz
jl
sti
or
push
mov
pushf
push
addb
sbb
lret
stc
sbbl
mov
outsl
cmp
xor
iret
adc
lret
xchg
mov
adc
sti
pop
pop
mov
xor
sub
enter
movsb
loop
cld
arpl
mov
idivb
push
sub
into
add
rcll
jae
push
in
mov
add
pop
inc
pop
lock
addb
inc
enter
aas
cmpsb
in
adc
cli
jbe
pop
lcall
in
sahf
pop
pop
sbbl
nop
rclb
dec
xchg
push
in
push
inc
pop
mov
negb
shrb
xorl
ljmp
jb
mov
pusha
dec
gs
inc
add
lds
push
fists
or
mov
rorl
imul
add
fdivl
stos
shrb
cwtl
mov
add
subl
xor
jae
jecxz
or
rcrb
repnz
sbb
aam
sub
lret
cld
out
in
or
jmp
loope
icebp
test
adc
push
add
jecxz
xor
xorb
sub
sub
sub
outsl
call
mov
or
xor
insl
mov
dec
loopne
and
mov
in
dec
inc
loope
jne
cs
sbb
cs
scas
mov
and
adc
jge
imul
fwait
sahf
scas
push
ss
jb
cmp
sbb
jbe
pop
mov
fdivrs
and
mov
push
push
or
inc
popa
movb
mov
dec
push
jns
push
dec
push
mov
mov
xchg
mov
fidivs
dec
jge
aad
sti
std
test
es
incl
lret
cmpsl
ja
lcall
dec
lea
cli
rol
cmp
pop
je
jo
movsl
adc
dec
loopne
cmp
dec
mov
mov
mov
or
adc
or
mov
cmp
jl
xor
jnp
push
adc
xchg
mov
cmp
or
mov
push
outsb
ljmp
xor
adcl
shl
in
jbe
sub
cwtl
not
fs
dec
or
mov
imul
jo
dec
aad
adc
lret
aad
xorl
repnz
push
bound
pop
lods
andb
arpl
lea
loopne
rclb
lret
inc
jg
dec
push
xchg
mov
xor
cmp
jbe
inc
scas
inc
mov
mov
or
test
inc
pop
jp
movsl
fs
nop
cld
hlt
push
ss
gs
lret
inc
sbb
fisttpl
jmp
fiadds
adc
xor
xchg
or
jae
mov
mov
jmp
test
xor
bound
ja
and
shll
xchg
cmpsb
movsb
test
dec
outsl
cmp
outsl
push
adc
fsubl
testl
jae
sti
pop
xor
cmc
push
jmp
or
repz
or
pop
mov
xorb
push
push
xor
xor
movsl
mov
pop
jge
jl
jecxz
mov
aas
mov
neg
mov
fwait
clc
addr16
dec
jle
lret
mov
fstps
cwtl
push
lret
pushf
scas
xor
enter
ss
jb
xorb
push
add
clc
xor
popa
shrl
pop
test
push
pop
jmp
jo
iret
add
stc
fidivrl
mov
fwait
scas
ja
mov
mov
lret
and
push
xor
dec
adc
shlb
pushf
mov
add
in
mov
add
je
inc
push
dec
mov
push
push
adc
orb
cmp
pop
scas
fs
xchg
sbb
movsl
mov
pop
stos
outsl
and
stos
mov
and
addr16
pop
in
ret
xchg
imul
mov
sub
pop
pop
lods
push
movsl
out
scas
stc
ret
test
ja
inc
sub
loopne
fmull
sub
cmp
fwait
cmp
cli
std
xchg
lcall
lods
mov
sbb
out
or
jne
nop
in
rolb
orb
add
add
mov
outsl
mov
inc
adc
xchg
movsl
aad
sbb
or
aaa
test
adc
inc
lahf
subl
inc
mov
in
or
das
cmpb
adc
cmp
arpl
sub
call
ret
and
in
fs
in
movsl
loop
loope
lretw
pop
xor
mov
pop
pop
in
jnp
or
pop
out
jl
push
popa
jl
dec
mov
lret
mov
adc
test
cmpsl
lahf
pop
mov
xchg
incl
ljmp
imul
cs
or
icebp
adc
rol
inc
pop
fmull
cmp
std
int
mov
out
ret
out
lahf
push
sub
jmp
mov
fldl
out
fistpll
or
data16
cmp
aas
je
mov
aaa
cmp
je
leave
aad
out
dec
pusha
mov
mov
cwtl
out
into
push
pop
adc
jo
dec
mov
dec
stc
dec
out
out
movsb
mov
ds
push
xchg
fcoms
faddl
nop
daa
ficompl
sahf
sti
imul
mov
addr16
sub
rorb
loopne
pop
mov
mov
dec
cmp
xlat
adc
negl
imul
popa
inc
push
pop
stos
pop
xchg
cmp
mov
xor
xor
lds
and
ret
jne
inc
popa
mov
cmpsl
cld
cmp
xchg
shl
mov
pop
mov
fisubrs
xorl
lcall
imul
cmp
push
shrl
jb
inc
cmc
dec
jl
arpl
xor
outsb
shl
dec
in
jmp
fidivs
dec
cmp
push
lcall
add
mov
testl
push
aas
jl
push
dec
mov
sbb
stos
aad
xor
jge
fs
push
lds
jle
insb
mov
fstpl
lcall
movsb
inc
aaa
cmp
fnstenv
ljmp
xchg
push
fs
cs
inc
ficompl
inc
fdivr
pop
mov
add
movsl
aas
mov
pop
add
mov
test
push
inc
fstpl
jb,pt
pop
and
lahf
pop
pop
lea
out
mov
dec
adc
xchg
das
mov
sub
rorl
xchg
fsubs
hlt
fnsave
xchg
repnz
mov
dec
lea
clc
jbe
jge
sub
or
and
pusha
in
popf
and
shll
push
ds
js
mov
xor
xchg
push
dec
and
fs
push
add
adc
mov
mov
iret
push
popa
xchg
aam
enter
les
push
aaa
mov
stos
push
dec
lret
mov
mov
sbb
hlt
xchg
adc
sqrtps
popl
movsl
sbb
sbbl
mov
mov
dec
outsl
ja
sti
inc
test
pop
in
aaa
pusha
lcall
mov
pop
fstps
pop
adc
jge
push
out
out
jmp
js
and
push
jo
rcrl
lcall
ja
imul
andb
popf
and
sbb
arpl
into
cmp
hlt
sub
ds
outsl
insb
adc
adc
popa
push
fisttpl
nop
test
aad
mov
cmp
sbb
sbb
ds
dec
jl
and
mov
sub
ficomps
xor
push
fnstsw
or
sub
ja
mov
arpl
arpl
jo
out
in
stc
mov
inc
push
jnp
cli
ret
insl
aaa
shrl
mov
movsl
testl
adc
mov
jno
loop
push
dec
push
and
pop
xlat
sub
pusha
mov
jl
sbb
test
xchg
push
lds
in
shrb
movsl
or
cmp
leave
xor
cmc
dec
mov
cmpsl
shl
jl
das
icebp
mov
mov
and
jnp
pop
add
jo
out
and
flds
push
xchg
push
lock
pop
idivl
mov
cwtl
pop
pop
ds
or
mov
sub
inc
or
push
stos
sub
enter
bound
repz
mov
int3
xchg
jg
sbb
mov
lahf
lahf
sarb
push
push
push
lcall
jnp
dec
data16
frstor
xchg
out
pop
push
adc
mov
imul
xchg
jl
xchg
xchg
out
mov
add
imul
aaa
dec
jp
mov
aaa
repz
aas
hlt
outsb
mov
dec
cmp
cld
jo
jmp
push
mov
push
jg
shrb
out
xchg
insb
out
push
ljmp
jle
xor
jge
mov
in
sub
loop
or
ficoml
jb
or
nop
stos
push
mov
push
sbb
pop
push
mov
xchg
fistpl
pop
mov
adcl
movsl
mov
xor
call
xor
std
aaa
mov
jecxz
xor
xchg
mov
push
jne
xlat
sub
xchg
sarb
stos
mov
das
xor
outsl
iret
xor
inc
mov
ror
sbb
push
lea
lock
dec
fmul
bound
push
inc
mov
shlb
xor
or
sbb
mov
popf
ds
mov
lahf
add
enter
push
aam
jnp
jbe
pop
movsl
mov
repnz
ds
xor
jbe
enter
inc
mov
jno
in
inc
aad
out
sbb
mov
cltd
sahf
inc
stos
and
in
enter
push
popf
push
jle
lds
add
push
jle
jle
data16
rcl
vmovsd
js
rolb
cmpsb
sarl
ss
insb
mov
mov
pop
sub
mov
and
mov
bound
insl
icebp
jb
fwait
cmc
sbb
daa
xor
in
jle
jno
push
arpl
outsl
mov
ror
mov
mov
pop
and
pop
dec
daa
xchg
int3
dec
ja
push
fsubl
adc
sbb
sub
mov
cld
jg
cmc
dec
cmp
aaa
testb
xor
add
iret
jb
outsl
cld
cld
stos
adc
xchg
insb
shll
jl
fwait
cmp
loopne
das
xchg
push
or
pop
xor
test
mov
sub
and
sbb
xchg
adcb
mov
adcl
ds
movsb
inc
push
or
pusha
inc
cmp
pop
stos
test
stos
imul
call
or
bound
lods
sbbl
inc
mov
mov
push
pop
add
orb
ljmp
cmpsl
pop
jo
aas
pop
fsubl
xchg
into
scas
fxch
popl
mov
xor
adc
pop
outsl
sbbb
xchg
movsb
shll
pop
mov
mov
in
cld
jae
es
sub
lea
repnz
lcall
xor
cmp
test
jle
movsb
pop
fsubrl
iret
dec
mov
and
lret
pop
push
mov
ret
ss
lahf
sbb
out
sahf
adc
xlat
insl
cmc
add
cmc
pop
sti
aaa
imul
fwait
loopne
rolb
inc
adc
pusha
add
movsl
mov
sbb
ret
fdivs
movzbl
mulb
xchg
jae
dec
imul
test
dec
add
xor
clc
mov
xchg
das
imul
test
sub
mov
insl
jno
xor
mov
or
pop
insl
adc
xor
jp
pusha
mov
jp
cli
jle
daa
mov
sub
lahf
xchg
sub
gs
and
add
cmpsb
ljmp
mov
pcmpeqd
mov
into
pcmpeqb
mov
add
pop
dec
inc
and
mov
scas
mov
flds
pop
cltd
aas
jno
inc
mov
repnz
mov
fcoms
les
sub
mov
push
mov
outsb
rcr
leave
mov
push
mov
mov
push
test
cltd
shlb
push
jecxz
add
inc
hlt
dec
pop
inc
lahf
fistl
mov
mov
pop
iret
dec
test
out
push
lods
and
cld
cmp
and
ss
push
ror
inc
jnp
rclb
jnp
ljmp
movsb
jmp
jmp
xlat
mov
cs
xchg
lret
xlat
out
movnti
mov
daa
add
adc
pxor
loop
jo
aas
lcall
inc
and
add
cs
jge
inc
inc
icebp
xor
mov
add
iret
popf
inc
jno
aas
pop
mov
loopne
lret
xchg
lahf
decb
iret
cwtl
mov
pop
mov
loopne
outsb
cmpsl
add
xchg
sbb
ja
insl
pop
test
cwtl
gs
sbb
mov
cmp
lods
loope
sub
arpl
pop
ja
jge
mov
repnz
inc
stc
dec
xchg
test
jmp
dec
sbb
mov
push
adc
mov
movsl
int
out
adc
loopne
xchg
popa
jnp
xor
cli
lds
cmpsl
cmp
jo
cmpsb
js
push
mov
ljmp
dec
pop
loopne
lods
fiaddl
mov
jl
insb
pop
aas
cs
in
sbb
xchg
enter
dec
out
sbb
mov
int3
sub
xchg
cmpsl
jns
jp
stos
pop
out
adc
ret
je
popa
push
push
xchg
jns
and
pop
xor
dec
mov
or
jg
lock
out
into
in
push
mov
add
test
dec
push
jecxz
lret
mov
dec
sbb
shlb
ljmp
xchg
adc
xchg
cmpsl
sbb
repz
aaa
dec
mov
cwtl
loop
mov
popa
push
pop
mov
xchg
je
repz
jno
sbb
mov
frstor
mov
mov
sub
pop
gs
dec
or
imul
pop
insl
jp
out
dec
jae
mov
gs
lcall
inc
mov
bound
and
jmp
cmpsl
orl
sbb
movsb
popa
mov
xor
jno
sarl
mov
push
hlt
das
xor
dec
add
js
inc
xchg
int
cmp
ret
cltd
xchg
jae
and
xcrypt-ecb
cmpsl
dec
add
ljmp
aaa
mov
hlt
ja
call
push
inc
xchg
addr16
sbb
push
lret
dec
and
test
jmp
testl
jo
xor
daa
stos
cmc
popa
dec
mov
das
push
inc
in
push
push
jno
test
imul
sbb
das
cmpb
mov
xchg
xor
mov
sbb
xor
xor
ds
push
push
sub
mov
inc
inc
shl
shl
push
pop
mov
jmp
pop
adc
pop
inc
cld
jmp
or
mov
in
int
push
and
mov
inc
rclb
jg
pop
dec
lods
cld
push
lds
xor
jge
mov
adc
add
test
call
mov
inc
fmul
xor
clc
in
push
stos
jge
mov
fists
push
dec
insl
std
adc
mov
sub
sbb
mov
mov
daa
cli
xor
decl
pop
add
push
push
push
or
and
lret
mov
lea
repz
xchg
add
push
inc
cwtl
fldenv
dec
call
xchg
leave
into
cmp
sub
in
je
loop
sahf
daa
out
mov
xor
repnz
or
xchg
pop
stc
pop
xor
dec
bound
jecxz
pushl
jno,pn
pop
add
mov
pop
cmp
push
pushf
add
dec
xchg
cmpsb
std
add
sub
scas
ret
fstpt
cmpsl
ss
mov
in
and
arpl
fldl
push
and
ss
shrb
cmpsl
and
inc
cwtl
and
xor
sahf
pop
and
stc
xor
pop
jge
movsl
jp
in
pusha
mov
jb
fidivrl
in
sub
and
fs
mov
inc
divl
iret
scas
adc
xor
mov
in
xchg
lock
mov
adc
sbb
adc
rcl
add
mov
in
sti
or
jae
sub
fmuls
dec
pop
and
inc
or
in
imul
mov
rcll
dec
push
cmc
add
pop
sbb
xor
xchg
sbb
js
adc
addl
jg
pop
out
sub
mov
or
inc
rclb
cwtl
lret
mov
cmpb
inc
pop
mov
enter
push
aaa
pop
push
pop
out
idivl
dec
insl
xor
sub
sbb
and
enter
es
nop
jno
dec
shll
push
pop
cld
dec
pop
jbe
pop
jl
sbb
and
mov
mov
pusha
pop
fistpll
repnz
lods
adc
mov
out
jae
out
sbb
popf
add
in
out
mov
mov
push
imul
dec
pop
and
loopne
or
xchg
mov
or
mov
data16
pop
rcrl
aas
push
sbb
std
push
fistps
sbb
test
xlat
movsb
add
dec
in
out
dec
repz
mov
inc
int
pop
pushf
jp
sub
sbb
or
test
repnz
movsb
fwait
lock
and
inc
fnsave
pavgb
int3
jno
sub
cli
lret
scas
push
bound
fwait
xchg
cmp
cmpsl
push
pop
xchg
inc
push
and
mov
jbe
push
mov
jmp
mov
xor
mov
add
bnd
fldenv
jns
stos
subb
fs
punpcklwd
inc
mov
sbb
sahf
popf
mov
pop
add
ljmp
mov
adc
jp
repnz
sbb
mov
xor
dec
add
or
sarb
mov
jg
or
aad
dec
shr
push
rcr
pop
je
push
sahf
int
std
rclb
adc
mov
jae
lea
and
popa
sbb
mov
cmpsb
cmp
into
test
and
add
mov
fstpl
xor
fwait
xchg
pop
test
iret
cs
hlt
insl
mov
std
in
sbb
push
test
mov
xchg
sbb
cli
pop
jp
cmp
ss
or
xchg
ljmp
cmc
mov
dec
ror
shlb
stos
loopne
push
lds
inc
xchg
ja
mov
call
jmp
es
mov
sub
xor
imul
faddl
push
mov
mov
jecxz
mov
adc
sub
outsl
jmp
push
repz
xchg
orb
inc
add
xchg
pop
push
inc
in
dec
gs
shlb
push
jecxz
mov
fcoml
fildl
mov
xchg
aam
and
addb
in
mov
loopne
mov
sti
lahf
sbb
mov
sub
dec
nop
inc
push
sbb
sarl
jg
test
pop
stos
mov
jmp
xor
movsl
bound
dec
mul
push
sar
and
ljmp
cmp
mov
inc
cld
std
call
das
mov
ljmp
clc
in
xchg
dec
out
add
sub
lahf
pop
xor
es
fwait
xlat
xchg
out
pop
fst
pop
fsubl
loope
lret
add
sti
xor
out
pop
out
sar
mov
outsb
test
sub
and
sti
in
lret
mov
rolb
sbb
cmp
pop
xor
pop
xchg
cmp
insb
jne
dec
xchg
xchg
cwtl
pop
aad
mov
dec
in
ljmp
nop
scas
add
lcall
jno
cmp
cli
pop
sbb
push
dec
movsb
subb
push
outsb
loopne
jp
arpl
push
sbb
loopne
paddusb
mov
adc
cmp
ss
mov
push
jle
into
jns
scas
imull
insl
xchg
incl
call
mov
lcall
loop
fimull
pop
sub
movb
pop
jns
aaa
pop
push
xchg
dec
xchg
dec
push
enter
jmp
cmpsb
fidivs
push
out
lea
aad
mov
jne
and
mov
mov
fstp
mov
jno
shlb
ljmp
mov
icebp
and
push
leave
fldz
mov
js
pusha
hlt
jbe
daa
test
jno
or
pop
test
push
aam
ds
stos
mov
mov
inc
inc
xchg
push
jno
popa
outsl
adc
ret
lret
ret
cmp
loope
xlat
jb
call
cmp
and
inc
mov
adc
lret
aas
shrb
mov
sarb
pushl
sbb
fwait
shl
movsb
vcvtsi2ss
sbb
add
adc
and
movmskps
xchg
call
xchg
js
dec
push
mov
sbb
lret
cmp
sub
jb
repnz
xchg
push
mov
push
ja
pop
push
ret
hlt
dec
mov
pop
add
stos
cmp
ret
push
js
aas
adc
mov
push
sarl
mov
popa
cmp
mov
cmc
and
out
jecxz
jbe
hlt
cmp
scas
mov
rcll
nop
jnp
js
iret
mov
sbb
dec
mov
cld
jnp
push
mov
test
rolb
scas
sbb
push
mov
cld
lods
popf
movsb
push
xchg
or
jle
jnp
mov
lret
adcl
jmp
adc
or
stos
stos
ffreep
ficoml
dec
inc
pop
mov
add
mov
or
inc
dec
aad
and
dec
sbb
pop
dec
mov
std
or
mov
mov
adc
gs
iret
and
cmp
aas
inc
adc
mov
movsl
ret
mov
mov
les
lahf
dec
pusha
rcll
ret
xchg
xchg
jnp
es
sub
cmpsl
xor
inc
lods
into
sbb
pop
pop
repz
cmpsb
xchg
filds
daa
stos
mov
decl
push
stc
xor
dec
jns
ds
leave
pop
pop
fcomps
scas
jmp
push
sti
mov
push
jae
lret
sbb
das
fildll
pop
out
jl
shll
aas
imull
pushl
xchg
mov
xchg
mov
push
inc
pop
cld
cltd
repnz
cmp
jp
lcall
out
subb
mov
add
loop
sub
out
aaa
mov
and
sbb
sbb
cmp
aam
and
pop
add
repnz
mov
rorl
ljmp
daa
fisubrs
sub
mov
scas
insl
sbb
dec
int3
jmp
mov
insl
dec
fiadds
xor
iret
add
sbb
and
js
add
pushf
in
push
and
adc
in
out
xchg
dec
mov
pop
inc
ret
xor
repz
movsb
fistpl
xor
xchg
push
cmc
mov
push
cli
popf
xchg
add
add
mov
lods
xor
and
or
hlt
cmc
sbb
push
fwait
jp
pop
fisubs
popf
hlt
xchg
mov
imul
pop
or
push
cmp
jmp
push
popf
lret
push
xchg
inc
mov
in
push
sbbb
pop
push
hlt
adc
ret
shrb
lods
scas
ja
fimuls
out
movsl
shll
les
inc
cmp
insl
scas
mov
jo
fadds
xlat
lahf
mov
sub
mov
dec
inc
out
xchg
xchg
dec
mov
movsl
xchg
cmpsb
jle
or
inc
inc
add
mov
mov
xchg
jnp
popa
jle
xor
xor
in
xchg
ljmp
loopne
mov
stos
jae
add
aam
bound
add
scas
dec
popl
mov
inc
mov
adc
test
xchg
or
add
mov
lahf
and
sarb
xchg
sahf
xor
jge
add
flds
scas
jns
es
jbe
ss
pop
mov
xchg
cltd
mov
sbb
and
pop
adc
dec
out
addb
adc
cmpsb
mov
repnz
sbb
sbb
or
mov
movb
push
pop
and
or
push
inc
cmp
sub
jb
push
ljmp
cmp
fnstenv
fmuls
and
push
out
scas
in
sti
or
sti
xchg
bound
arpl
into
insb
arpl
rcrb
jmp
pop
cmp
push
inc
cmpsl
push
xorl
mov
jo
sbb
outsb
sbb
and
add
adc
rorl
inc
pusha
or
push
dec
sbb
lahf
int3
imul
mov
mov
shlb
jnp
ss
scas
mov
add
xor
pop
jle
std
dec
rorb
cmp
mov
sbb
loop
std
mov
mov
movhlps
jb
lcall
add
fldcw
jo
aam
xorl
xchg
or
fcmovnb
mov
loope
test
add
jbe
mov
lods
pop
les
shrb
xor
inc
mov
pop
xchg
mov
stc
sti
aaa
mov
dec
push
and
lods
imul
shrb
xlat
inc
xor
mov
lock
jl
mov
daa
xor
inc
pushl
ss
test
sbb
sbb
addr16
rclb
jg
sbb
xor
dec
inc
cli
and
sbb
mov
outsb
outsb
fisttpl
jg
adc
pushf
js
pop
mov
and
jle
xchg
in
incl
cli
push
push
mov
lret
pop
mov
lret
test
scas
stc
in
lcall
xchg
gs
pop
pop
test
xor
push
jp
xchg
mov
gs
xlat
ds
push
jne
mov
inc
inc
pop
add
insb
inc
sub
sbb
mov
lods
jns
xlat
out
jae
iret
fstps
mov
cmp
cwtl
mov
pusha
mov
fisubs
popf
sub
lea
stos
rclb
mov
or
std
pop
outsb
sub
fstps
scas
xchg
push
outsl
or
mov
leave
arpl
cltd
dec
dec
cmp
stc
adc
cmp
lds
adc
outsb
ret
jg
sbb
mov
push
repnz
push
push
ret
fcoml
jns
cmp
mov
jp
push
test
loopne
push
pusha
divb
cmp
pushf
xchg
insl
jno
or
cwtl
and
jge
push
adc
mov
lods
sahf
push
iret
test
push
fimull
mov
pushf
mov
rorb
nop
sub
add
divb
mov
rolb
movsb
sub
xchg
test
adc
dec
or
adc
xchg
imul
fnstenv
je
push
cs
pop
sbb
cmpsl
test
enter
aaa
push
bound
push
daa
inc
dec
inc
repz
cmpsl
mov
rclb
loope
pushf
jmp
popa
fisttpll
sbb
ret
rcr
jnp
movsl
mov
or
sub
mov
push
cmp
inc
inc
movsb
loopne
dec
rorb
or
rcl
push
cmovge
orb
and
push
lea
cs
lahf
nop
sarl
cmp
lret
pop
mov
std
fisttps
inc
pop
loope
stos
lods
mov
imul
cmpl
or
sti
cs
fimuls
add
sub
mov
mov
insb
inc
mov
mov
and
cmpsb
mov
inc
scas
sub
loopne
cmp
idiv
add
pop
bound
mov
loopne
mov
cmpsl
xor
jle
loope
xchg
push
and
push
inc
stos
jle
shlb
adc
xlat
push
add
sbb
sub
xchg
jg
aam
jne
pop
out
pop
shlb
jg
ds
mov
dec
mov
mov
jb
test
sbb
and
sub
in
jb
outsb
in
movsb
and
mov
sbb
pop
mov
jp
mov
or
pop
adc
dec
push
mov
movsb
lods
in
sbb
pop
mov
inc
push
ja
clc
sbb
jnp
mov
dec
outsb
clc
mov
dec
aaa
dec
jge
int3
xchg
mov
push
pop
addb
addr16
out
adc
bound
mov
mov
in
mov
dec
mov
add
inc
pop
addr16
dec
sbb
aam
mov
pop
push
xchg
adc
stc
xchg
or
mov
imulb
xlat
pop
rcll
lds
je
fnsave
mov
mov
shrb
jne
lock
aad
lds
pop
dec
call
and
fstpt
push
or
dec
daa
lcall
out
dec
scas
push
or
pop
rcrb
repnz
dec
das
xchg
inc
adc
and
mov
jg
sarl
in
loopne
std
inc
jne
jae
ds
mov
in
scas
pop
push
cwtl
test
fcompl
dec
dec
add
jnp
mov
push
xor
pushf
in
test
push
mov
mov
push
or
lock
bound
adc
cmp
mov
ljmp
add
packuswb
and
aaa
and
cmp
mov
mov
nop
insl
pop
xor
ret
bound
sbb
push
mov
lcall
inc
mov
nop
sti
aas
and
jle
push
sbb
lea
jmp
jp
imul
mov
lret
sbb
loop
aam
or
lea
cmpsl
xchg
push
ja
imul
add
arpl
imulb
sbb
fnsave
xor
ja
ret
xor
repz
adc
xchg
lret
pop
jno
jg
das
dec
jmp
adc
dec
xor
push
inc
ret
add
mov
rorl
inc
adc
sarb
out
cmp
sub
insb
cmp
cli
shlb
leave
fisubs
pop
push
pop
sbb
inc
js
mov
lods
ret
stos
das
mov
mov
pusha
aam
jae
xchg
into
mov
push
ss
xor
lahf
adc
mov
mov
push
dec
es
sbb
jno
fwait
ret
cmpl
cmp
call
movsb
cmp
lock
adc
inc
and
fsubl
lcall
movsl
xchg
xor
sbb
enter
mov
ja
push
push
or
jl
cmpsl
lret
roll
mov
xlat
lret
aam
and
add
jle
push
fildll
jnp
sahf
or
mov
mov
pop
jbe
fs
test
xor
cmp
sub
push
pop
and
pop
add
sub
adc
stc
mov
mov
pop
rcl
and
mov
jecxz
pop
aaa
mov
aad
xchg
stos
std
in
cmpsl
sbb
push
mov
jge
dec
mov
jmp
jmp
lahf
sbb
movsl
lods
push
add
sahf
jne
lea
adc
hlt
mov
out
js
adc
jno
shlb
std
mov
fldl
cmp
pop
mov
fisubrl
xor
fstpl
and
fs
jl
cmp
repz
popf
push
sbb
sbb
iret
testl
dec
mov
and
movsl
sub
pushw
test
fldenv
xchg
mov
mov
cmpb
fs
pusha
aaa
mov
mov
sti
pop
insl
mov
and
jnp
mov
je
xchg
mov
shll
mov
jb
sub
mov
jle
xor
mov
mov
sbb
jae
aam
pop
lods
mov
sahf
dec
addr16
and
test
xor
or
pop
sub
mov
popa
dec
ljmp
lret
jno
in
fcompl
inc
test
shrb
gs
xor
filds
outsl
in
inc
jns
pop
ret
iret
sub
add
or
and
xlat
call
mov
repz
or
sbb
dec
popf
cmp
ss
popa
cli
lret
pop
and
shlb
je
leave
lahf
pushl
mov
nop
shlb
jg
inc
dec
cwtl
orb
fiadds
andl
push
filds
and
in
pop
sub
xchg
into
lret
cmp
mov
add
dec
sbb
ljmp
pop
ret
mov
and
out
xor
add
mov
rorl
sbb
addr16
push
sbb
das
insl
xor
fstpt
adc
lea
addl
inc
enter
jnp
sbbl
in
jge
sub
js
mov
cwtl
adc
inc
xor
or
out
pushf
shl
ja
xchg
jbe
in
xlat
ja
movsl
scas
int3
pop
ja
mov
pop
iret
outsl
sbb
andl
inc
test
nop
nop
int
or
in
scas
insb
out
repz
fiadds
test
ss
jl
or
loop
cmp
movsl
cmpsl
and
mov
lds
aas
and
icebp
push
aas
pop
lea
aaa
sbb
stc
icebp
pop
rep
add
mov
bound
jecxz
mov
cmp
aaa
rcrl
pop
push
adc
sbb
aam
jmp
cs
mov
xchg
mov
daa
push
in
sbb
mov
repz
jo
push
lods
xchg
arpl
sub
cmpsl
popl
jecxz
sbb
in
add
lahf
ret
xor
pop
push
fcoms
sbb
mov
mov
lcall
mov
pop
ljmp
rorl
jmp
stos
adc
fidivs
repnz
rolb
push
data16
push
mov
adc
pop
mov
push
lcall
mov
hlt
ret
xor
mov
stc
mov
mov
inc
inc
sub
aaa
push
inc
mov
pop
add
stc
mov
test
xor
pop
mov
xor
test
mov
incl
pop
dec
cmp
sbb
popf
push
addr16
inc
push
ds
xchg
lret
or
push
dec
add
inc
mov
aas
aad
dec
pop
push
loop
insl
jecxz
iret
loopne
loopne
mov
sub
out
in
and
lea
outsb
push
jne
mov
cmp
mov
idivl
pushl
repz
lods
pop
adc
sub
bound
inc
jae
push
mov
sbb
daa
sub
mov
stc
pop
pop
clc
xchg
ljmp
mov
movsl
sub
cmp
lret
add
and
xchg
xchg
out
je
mov
pop
adc
mov
xchg
lret
movb
insl
pop
xchg
adc
out
xchg
jmp
inc
cmpsb
lea
and
rcl
mov
lret
adc
mov
in
jge
fsts
ljmp
ss
shlb
or
sbb
pop
andps
xchg
popa
aad
divl
mov
adc
adc
mov
inc
jae
pop
push
jecxz
fbstp
cli
jp
js
inc
adc
push
xchg
fbstp
hlt
push
pop
dec
lods
inc
pusha
mov
out
imul
pusha
aas
cmp
jnp
imul
imul
cli
xchg
lret
cs
jge
cwtl
cmp
inc
and
lods
push
fstpl
inc
in
ja
mov
test
adc
mov
movsl
cli
adc
push
sahf
stos
sti
cmpsb
aad
clc
xor
popf
xchg
push
jne
decl
shll
rcrb
sbb
adc
scas
lret
xor
adc
xor
inc
jb
ds
outsl
push
fdivrs
adc
mov
push
jo
ret
or
ret
push
repnz
hlt
push
js
je
inc
mov
inc
push
iret
adc
clc
insl
in
stos
and
pop
mov
push
js
repz
imul
inc
inc
leave
outsb
xchg
fistpl
cmpsl
movsl
or
mov
push
aaa
imul
in
aas
lret
jno
int3
dec
mov
dec
fadds
iret
sbb
rcr
xchg
enter
mov
xchg
int3
cmp
dec
pushf
push
nop
cld
aaa
aaa
test
or
sub
ret
bound
nop
sbb
mov
mov
jp
pop
sub
cmp
outsb
xor
sbb
mov
cmp
fdecstp
jecxz
call
xchg
inc
pop
loop
out
inc
or
pop
push
inc
inc
fdivs
inc
pop
inc
pop
addb
mov
pop
mov
mov
or
loope
shl
lods
xchg
movsw
fs
xor
inc
jo
dec
push
sbb
sub
and
rclb
lock
or
hlt
stc
leave
cld
push
mov
addr16
cmpsb
cmpsl
dec
loop
addr16
mov
sbb
subb
cs
js
scas
movsb
xchg
subb
ss
xor
jno
fwait
sub
cwtl
dec
in
jne
jno
ficoms
dec
xchg
loopne
scas
inc
insl
add
xchg
aam
ret
cmp
push
or
add
pop
sbb
out
jnp
mov
inc
es
sahf
addl
int3
dec
les
fisttpll
lahf
add
mov
hlt
xchg
jecxz
call
xor
add
lock
add
les
cmp
or
out
inc
rcrl
popa
and
adc
sbb
xchg
adc
mov
or
add
pop
mov
push
mov
cmpsb
int3
sub
daa
fwait
xchg
push
mov
mov
nop
xor
and
xor
and
or
sbb
ds
aam
ljmp
shlb
out
daa
popf
or
outsl
adc
loope
and
adcb
pop
xchg
push
int
xchg
ret
pop
jbe
jmp
cmp
sbb
mov
push
and
jo
mov
cmpsl
sbb
jno
ss
in
mov
lret
xchg
loop
jne
pop
sti
mov
xchg
xlat
fdivs
shr
test
aas
push
push
sbb
inc
loopne
push
popa
inc
fiadds
int3
nop
mov
daa
xor
js
stos
sbb
jp
flds
push
nop
test
std
into
cli
push
fld
addl
jp
xor
stos
out
jg
cwtl
ja
xchg
cli
mov
mov
das
rcr
xchg
xor
adc
cmp
adc
stos
insl
sahf
adc
leave
leave
jle
mov
mov
sub
jl
add
lahf
fs
ficoms
inc
adc
fisubl
rcrl
fnsave
or
dec
repz
loop
out
mov
mov
andl
test
popf
test
sbb
xor
aaa
int3
insl
es
dec
inc
neg
lcall
movsl
push
bnd
push
jmp
lret
add
cmc
arpl
add
test
out
fistps
fstps
sbb
mov
addr16
jmp
lahf
dec
and
or
stos
iret
jns
fiaddl
push
and
fidivrl
mov
sub
adc
push
jb
dec
gs
outsl
rcl
rclb
call
ds
pop
and
setne
cmp
subl
int3
inc
fsts
imull
mov
xchg
rolb
jns
fxch
lret
sti
and
mov
arpl
flds
sub
ja
addl
fwait
push
imul
adc
loop
int3
xchg
int
adc
push
dec
and
insb
xchg
iret
jp
push
xchg
pop
xchg
xchg
imul
jge
fcomps
lcall
movsb
scas
dec
lahf
xchg
out
mov
jle
mov
rcr
sub
int3
clc
jns
mov
aam
xchg
adc
repz
imul
pop
xchg
xchg
add
mov
or
cltd
std
xlat
scas
fwait
mov
mov
ds
bound
testb
push
adc
sub
mov
or
jle
dec
cmp
repz
mov
push
scas
mov
mov
rcr
sub
lock
shlb
test
pop
rolb
jg
es
ret
jno
sub
dec
push
mov
xor
cli
pop
sbb
dec
xchg
test
pop
cld
sub
into
test
inc
dec
cmp
pop
lcall
lret
xchg
inc
xchg
dec
sbb
cs
cmp
push
iret
dec
mov
inc
jle
fs
mov
dec
mov
cld
push
outsl
lret
sub
pop
test
inc
push
adc
xor
je
cmpl
and
ja
adc
jg
popf
mov
mov
fucom
test
jns
aas
adc
bound
sub
fmuls
adc
fs
jp
iret
cmpsl
pusha
out
pop
popf
inc
mov
leave
mov
popa
js
sub
push
jno
bound
cmp
ljmp
or
shl
imul
adc
sbb
insb
jmpw
push
jnp
inc
sbb
dec
add
xchg
in
jb
and
popl
mov
outsb
pop
cltd
sarl
jge
stos
sbb
xchg
daa
in
dec
daa
cmp
movsb
stos
into
cmpsb
and
pop
js
adc
in
arpl
add
loope
aaa
xchg
xor
add
mov
int3
test
fistl
cmc
add
mov
pop
in
xchg
adc
cmpsb
fcoml
jecxz
test
mov
jne
lods
aaa
ret
mov
mov
sub
loopne
add
fwait
test
movsb
xchg
pop
jb
adc
leave
jb
aaa
popa
arpl
enter
mov
fdivp
add
dec
fs
test
mov
pop
mov
loopne
inc
pop
out
pop
cmp
es
inc
mov
shlb
cmp
cmpsl
fistl
jnp
mov
push
xchg
sub
pop
popa
pop
jae
dec
mov
fsub
xor
mov
imul
shll
mov
sub
sub
lret
cli
xor
mov
sarl
push
inc
insb
mov
mov
adc
xor
cld
sub
mov
sbb
adc
lea
adc
test
ljmp
in
mov
dec
pop
and
lock
sub
out
cmp
lcall
in
rcr
cmp
cmpsl
clc
addr16
mov
stos
test
pop
ljmp
push
inc
cmpsb
sarb
fimuls
cmp
shlb
add
stc
xor
dec
adc
pop
push
jge
pushf
inc
fcmove
jl
or
lahf
jae
imul
pop
mov
jno
adc
cmp
std
int3
xor
inc
pop
fiaddl
sbb
lods
dec
outsl
sub
aam
les
add
insl
dec
sub
pop
and
xorb
movsl
or
pop
div
adc
add
ljmp
push
push
popf
push
mov
enter
pop
add
scas
jae
push
nop
xchg
and
adc
bound
cmp
mov
ret
test
mov
xor
out
lret
mov
test
unpcklps
or
gs
je
inc
pusha
sub
jg
xchg
sti
pop
xchg
xor
je
test
idivl
cmpsb
adc
lahf
lahf
sub
fdivrl
inc
sbb
mov
and
lret
loop
mov
lea
and
lock
jae
roll
jle
xchg
fsubrl
cmp
cmc
mov
cmp
jnp
mov
sti
pop
pop
ret
jns
enter
adc
fdivr
mov
ss
add
xchg
xor
loope
mov
int3
cmp
jo
xor
sti
and
aad
stos
jns
rolb
jmp
test
mov
add
mov
xchg
ficompl
movsb
das
xchg
xchg
sahf
in
negb
adc
cmpsl
push
xchg
int
mov
dec
lds
push
testl
sysenter
add
lcall
ret
incb
or
lcall
mov
out
ret
add
les
call
bound
sub
fs
jg
xlat
sbb
in
xchg
aad
pop
lods
cmp
fcmovnbe
fadd
mov
push
jne
push
das
and
enter
jmp
stos
pop
cmc
dec
lahf
repz
pop
in
sub
jg
ret
notb
stc
les
xor
pop
jb
cmp
mov
sub
xlat
xchg
pop
xor
dec
or
aam
fs
je
xchg
mov
cmpsl
add
push
or
adc
outsb
sti
int3
pop
mov
mov
lcall
or
test
pop
roll
sbb
popf
fdiv
cmp
dec
and
ja
lds
pop
mov
inc
jae
js
lock
in
mov
add
jns
sbb
xchg
and
into
mov
push
mov
xchg
jne
shlb
jo
mov
xchg
sub
lret
sbb
fsubrp
paddsb
fcmovu
gs
loop
inc
dec
addl
lea
pop
in
mov
cmpsl
push
push
lret
lea
aam
lea
test
inc
mov
sahf
dec
iret
pop
loope
leave
inc
push
iret
inc
xor
add
cltd
xchg
stos
jno
mov
sub
push
inc
aam
cmp
roll
pusha
dec
and
xchg
rclb
sub
mov
add
insl
ds
cmp
cs
imul
jmp
ds
jae
push
dec
jmp
xchg
insb
scas
sbb
xchg
or
sub
add
xor
adc
or
outsl
jecxz
cld
mov
loop
rolb
insl
dec
shll
dec
mov
test
fwait
int
addr16
cmpsb
add
jb
inc
jmp
daa
test
int
dec
sbb
mov
xchg
rorl
xchg
imul
lcall
jns
jnp
xor
xor
mov
mov
jl
cmpsb
pop
xchg
lds
xor
mov
shl
sbb
adc
rcll
and
inc
je
movsb
and
icebp
adc
movsb
mov
ss
mov
xchg
jo
je
xchg
xor
mov
xor
sub
xor
rcrb
fistpll
and
cmp
sub
ja
icebp
adc
decl
add
scas
adc
scas
fsts
mul
cmp
jg
xor
pop
sub
mov
daa
mov
lret
insb
dec
btc
or
dec
je
jge
push
jmp
lret
not
inc
mov
js
lods
iret
xchg
push
gs
dec
adc
aaa
ja
sbbl
mov
cmc
jge
std
adc
push
mov
mov
and
test
sbb
mov
xchg
mov
xlat
xor
outsl
cmp
inc
xor
jb
push
mov
dec
push
jge
dec
fmulp
stos
dec
popa
xor
imul
das
dec
lods
push
push
int3
shll
mov
lods
or
repz
jmp
jle
loopne
push
xor
std
in
outsb
or
xchg
repz
mov
in
push
push
popf
mov
int
js
leave
enter
and
scas
in
pop
mov
dec
xchg
enter
int3
sub
xor
loope
xor
xor
int
inc
push
cmc
add
imul
dec
fists
xor
pushf
pop
in
inc
test
cmc
push
les
hlt
mov
inc
rcrb
stc
xchg
ret
xchg
pop
lret
mov
xor
add
setne
test
stc
inc
add
and
sub
stos
jae
push
pop
cmp
shl
popf
ret
pusha
rcrl
push
mov
fsubl
jge
sub
lea
xor
call
cmp
es
fstpt
imul
jno
mov
sub
ficoml
aaa
subl
inc
aam
icebp
mov
adc
add
icebp
cmp
mov
loope
xor
sub
hlt
mov
adc
mov
and
in
jge
mov
arpl
loope
fcmovnb
jmp
adc
out
mov
pop
or
xor
sbb
xchg
xchg
popa
mov
fs
call
mov
xchg
pop
dec
faddp
push
int3
mov
mull
cmpsb
sbb
inc
push
cmpsb
in
loopne
mov
sbb
movsl
or
aas
sti
bound
call
rclb
lea
dec
stos
data16
shr
xor
mov
in
push
ds
dec
stos
subl
lea
and
cmpsl
popl
mov
push
fmuls
je
call
cmovg
into
in
arpl
or
pop
pushf
and
dec
sbb
xchg
iretw
fwait
dec
sub
les
jle
roll
fsubl
ret
mov
iret
rorl
push
push
inc
aam
test
pop
jp
jge
sarl
ja
jge
pop
mov
push
mov
pop
cmp
leave
xchg
sub
cmpsl
cmp
xor
movsl
fsubr
test
push
arpl
xorl
fistl
nop
push
fdivl
test
clc
mov
jns
xor
jecxz
pop
add
mov
insb
sahf
dec
sub
cli
or
test
push
mov
jne
pusha
lcall
ficoml
sbb
loop
and
adc
push
testl
push
scas
pop
mov
xchg
cltd
xorb
mov
mov
inc
xor
in
fldt
in
ret
call
les
repz
fstl
adc
push
int3
test
or
and
enter
xchg
cmp
ljmp
cmp
rcrl
pop
xor
repz
sub
cmp
and
or
mov
fistl
sub
push
inc
repnz
repz
fisttps
movb
loopne
testl
mov
out
mov
mov
xor
pop
lret
jl
pushfw
cltd
mov
and
gs
inc
mov
rcr
sarb
js
fdivrp
lcall
add
sub
mov
sbb
sub
mov
mov
pop
xchg
push
movsl
loop
mov
inc
mov
popa
mov
sub
jmp
add
pop
iret
add
daa
add
test
fstl
xchg
mov
dec
dec
dec
or
jb
jbe
push
icebp
dec
negb
jb
mov
jmp
outsw
cmpsb
mov
aam
imul
dec
lods
ds
ljmp
xchg
hlt
jmp
clc
stos
in
jecxz
in
fldl
fcmove
jg
xchg
push
popa
icebp
xor
sti
sub
pusha
lods
adc
roll
sbb
mov
addb
jle
push
sbb
cmp
loope
dec
jmp
lret
mov
mov
dec
push
stc
je
xor
setle
repnz
add
xchg
fwait
repnz
mov
rcrl
inc
mov
or
out
push
dec
lds
mov
pop
sbb
daa
and
bound
cmp
sub
jp
jae
jmp
jns
aam
jecxz
xchg
push
fldenv
into
dec
cltd
push
mov
adc
popa
clc
dec
stos
test
mov
ljmp
test
inc
inc
mov
dec
mov
jns
or
mov
jmp
jp
loopne
stos
adc
mov
pusha
jmp
rclb
in
add
adc
push
daa
shl
cli
stc
lcall
cmp
in
iret
lods
pop
dec
mov
out
in
das
dec
nopl
cmpsl
repnz
outsb
cmpsb
mov
test
bound
mov
sub
ffree
int
pop
nop
imul
or
cmpsl
iret
cmp
in
pop
shrl
mov
and
in
inc
xor
adc
jecxz
cld
sbb
xchg
push
xor
cli
dec
out
cwtl
xchg
outsb
lods
xchg
add
cld
std
xor
xchg
rcrb
sbb
test
jnp
fidivrs
mov
inc
nop
xchg
loope
adc
fldt
inc
stos
cmpl
push
xchg
les
and
jns
sbb
imul
sub
push
shrl
mov
jbe
sbb
xchg
and
loopne
int
push
jl
jecxz
movsl
hlt
xchg
cmp
and
jmp
insb
mov
out
mov
mov
jmp
sarl
imul
xor
cmp
cs
push
je
pop
mov
das
mov
xchg
bound
mov
sbb
sbb
xchg
enter
adc
into
clc
mov
pop
and
sbb
dec
xchg
int
mov
push
lcall
cltd
push
sbb
test
jb
jae
lahf
cwtl
dec
scas
outsb
addr16
rcrb
mov
in
push
inc
inc
add
sub
testl
xor
add
aaa
fcoml
sti
insl
imul
pop
jne
jb
and
jo
mov
lods
dec
cmp
out
or
xor
test
add
outsb
push
adc
mov
jmp
imul
pop
push
xchg
pop
push
add
dec
mov
je
sbb
xchg
rorl
cltd
cmp
test
inc
call
xchg
jae
mov
sub
jns
pop
dec
jecxz
push
lcall
mov
ds
add
and
xchg
cld
xor
loop
test
sub
or
in
mov
xchg
data16
push
stc
inc
popa
stos
mov
add
jmp
rcrl
cmp
adc
mov
lret
faddl
ja
cmpsl
shll
mov
test
divb
test
jae
adc
pop
js
dec
lock
mov
fistpll
xchg
repz
loopne
xchg
fidivrl
cmpsl
int3
sbb
xor
mov
add
jne
das
dec
mov
add
loopne
xchg
push
or
cmp
jno,pt
mov
outsb
jnp
cmp
pop
xor
pop
das
xchg
jae
pop
jle
cmp
jmp
ja
xor
mov
movsb
mov
sub
aam
cmp
lahf
rolb
gs
cmc
sbb
jnp
daa
arpl
js
add
or
rorl
jmp
dec
cs
std
cmp
rorb
or
repnz
cwtl
push
add
xor
and
popa
push
pop
shrb
or
inc
xchg
daa
pop
out
pop
repnz
repz
std
fptan
inc
test
sub
fs
push
inc
or
fmul
sub
push
inc
jg
xor
xchg
outsl
sti
push
mov
nop
push
cmp
sub
sbb
jne
aas
test
in
mov
stc
stos
ja
and
sub
mov
imul
fs
add
add
out
mov
andb
pop
xchg
loope
das
repnz
jp
loop
xchg
add
jbe
mov
jmp
cmp
mov
jno
fcomp
mov
jg
mov
cli
xchg
dec
arpl
and
es
jno
fldlg2
add
popf
sub
cltd
je
mov
cltd
add
les
or
dec
mov
mov
fsubs
test
mov
mov
adc
push
mov
icebp
push
mov
xchg
shrl
mov
ret
push
mov
cmp
xchg
mov
push
or
xlat
lahf
sbb
lods
sbb
push
cli
add
pop
jl
ja
add
stos
imul
stos
jmp
xchg
in
loope
jp
pop
bound
xchg
popl
mov
adc
xor
insl
lahf
les
pop
dec
pop
pop
push
int3
mov
inc
sbb
and
mov
incl
inc
mov
test
popa
fcmovnb
fidivs
add
mov
cmpsl
push
ficoml
mov
ds
mov
sbb
fisubl
std
push
fistps
sbb
int
mov
jb
rolb
lret
adc
inc
inc
sbb
sub
cmp
aam
addb
bound
push
jns
daa
xor
fs
cmp
sub
mov
dec
daa
mov
push
dec
mov
sbb
cli
cs
pushf
bound
enter
ret
add
pushf
add
clc
cwtl
jnp
cs
mov
sbb
outsb
mov
mov
mov
pop
push
adc
mov
rclb
popa
pusha
mov
sti
cwtl
jo
dec
mov
push
flds
js
sbb
insb
or
ja
pop
ss
sbb
sub
icebp
jl
out
xchg
insl
clc
push
and
xchg
enter
test
sbb
xchg
call
rcrb
mov
xchg
shll
or
jle
bound
sub
cmp
outsb
addb
lsl
pop
cmc
dec
outsb
push
jo
mov
dec
and
adc
cltd
mov
push
cmp
jne
mov
lcall
sbb
lods
add
jge
push
leave
xorl
add
lret
icebp
sub
loop
cmp
mov
jg
scas
clc
sbb
daa
mov
insl
leave
leave
push
xchg
dec
sbb
aam
test
cmp
cmp
mov
pusha
and
popa
mov
push
xor
xchg
inc
sub
icebp
jmp
inc
imul
lock
insb
jnp
pop
push
pusha
loope
sub
sarl
imull
or
push
andl
push
fistl
jne
jmp
or
xchg
mov
mov
decl
dec
ja
add
inc
mov
or
xchg
push
pop
das
testb
repnz
inc
leave
pop
xor
jne
out
sbb
outsl
lock
inc
lods
dec
ret
mov
sbb
jl
or
inc
cmp
out
ja
pushf
and
jne
inc
imul
dec
rcrl
mov
or
lods
mov
push
mov
jge
push
pop
dec
fsubr
dec
pshufw
seta
lahf
push
inc
loop,pt
push
sbb
cmpsl
in
int3
shrb
incl
or
xchg
pop
sub
xorl
pop
inc
lahf
jne
add
cmp
inc
insb
repnz
add
lret
movsl
xchg
lcall
aas
add
xor
push
and
movsl
sti
add
xchg
cld
adc
ljmp
add
dec
jbe
xchg
xor
and
push
push
movsl
xchg
inc
dec
mov
mov
scas
add
cltd
es
pop
sbb
daa
or
out
das
ja
adc
in
adc
repnz
adc
outsb
clc
mov
dec
cmpsl
jecxz
add
dec
mov
jge
cmp
cmpsb
lret
sbb
rcrb
into
sbb
pop
popa
insl
pop
jns
pop
add
pop
cmp
cli
xor
pop
pop
pop
popa
xor
push
fidivl
and
andl
push
aad
jge
xchg
cmp
xchg
scas
push
and
mov
jmp
sub
test
and
xchg
aam
cmp
mov
jecxz
pop
sbb
and
aaa
push
ret
push
jge
ftst
scas
cmpsb
xor
sub
movups
clc
push
xchg
jecxz
test
lock
lcall
cli
inc
push
xor
jp
pop
dec
mov
adc
dec
sub
out
mov
or
ret
dec
xchg
les
mov
push
into
fisubs
lock
rolb
jmp
out
push
mov
out
sbb
xchg
add
dec
lret
jns
mov
cltd
inc
arpl
pop
push
sbb
daa
push
daa
jbe
inc
xor
out
aaa
iret
mov
cmp
lods
and
xchg
les
sub
or
addr16
dec
mov
popf
ljmp
add
cmp
add
inc
add
jb
dec
cmp
les
xor
jb
call
stc
cltd
lret
and
shrl
cli
out
mov
push
add
inc
mov
push
call
call
sub
in
rorl
mov
lahf
cwtl
lods
dec
loope
xlat
cwtl
das
push
and
in
in
xchg
cmp
push
fmuls
and
sti
ljmp
stos
cld
or
leave
cmpsl
or
mov
pop
and
loop
jb
lahf
add
stc
and
mov
pop
mov
out
movsl
lcall
jmp
mov
je
mov
pop
lret
pop
sbb
jbe
imul
insl
xchg
lret
lahf
cmp
adc
or
inc
jge
daa
in
add
jae
lods
loopne
aad
add
xor
test
and
mov
sub
push
daa
and
ret
divl
cmp
fcomps
mov
adc
stos
dec
scas
sti
cmp
cmp
dec
stos
sbb
push
loop
shll
shl
loop
lods
sbb
aaa
pop
mov
sahf
dec
xor
sbb
jns
xor
cmp
xchg
stos
add
sahf
int3
subb
mov
cmp
xor
cli
outsl
inc
sub
daa
fcomi
jmp
loope
stc
dec
aas
ja
sub
and
pop
mov
out
roll
jmp
push
mov
push
jno
mov
jecxz
shlb
add
pop
sarl
addr16
in
shll
push
cmpsb
add
add
inc
jb
push
fadd
aam
js
sub
and
mov
rclb
push
je
push
loope
jne
push
xor
test
mov
push
sub
pop
or
xor
push
sbb
rorl
dec
add
or
adc
arpl
outsb
cwtl
adc
mov
pop
mov
lods
xchg
into
mov
jl
lds
jns
pop
or
inc
add
arpl
push
mov
sub
sbb
inc
sub
pop
jl
arpl
pop
push
hlt
popf
mov
sbb
rclb
or
rolb
in
in
decl
fildll
mov
stc
sbb
mov
ja
sbb
enter
pop
add
add
cmp
xchg
pushl
rclb
push
push
cmp
pop
hlt
sahf
mov
jo
insb
pusha
or
jno
pop
mov
push
movsl
loopne
or
pop
mov
out
sbbl
lret
ror
lds
mov
xor
movsb
add
and
cld
fcoms
fisubs
and
pop
fsubrs
std
cmc
cmp
mov
xor
ds
mov
lahf
clc
or
xchg
mov
add
add
insl
adc
pushf
or
std
js
stos
andl
mov
leave
add
mov
push
inc
xor
leave
xor
popa
push
and
jmp
sub
xchg
mov
mov
orb
add
mov
insl
inc
popa
mov
cld
jno
dec
sahf
test
stc
pushl
push
inc
loope
je
mov
xor
in
and
cmp
push
dec
dec
imul
or
data16
stc
clc
mov
js
fisubrl
in
xchg
fdivrs
enter
les
mov
or
cmp
mov
out
int
or
pop
inc
popa
out
leave
rol
mov
je
pop
ret
mov
insb
vorps
das
repz
and
dec
je
in
jg
add
movsl
sahf
mov
adc
xlat
xchg
lret
fcomps
xor
enter
or
or
xchg
adc
mov
jecxz
ljmp
cmp
xchg
std
bound
pop
popf
xor
cmpsb
mov
mov
and
jmp
pop
pop
mov
mov
lahf
and
pushf
pop
leave
add
cltd
jno
loopne
jb
add
jecxz
jge
pusha
jle
dec
rcll
roll
fisttps
pop
adc
aas
and
add
mov
push
call
dec
mov
frstor
pusha
lods
sarb
cwtl
cmp
push
outsb
jecxz
lea
out
scas
pop
inc
aam
movsb
mov
hlt
out
enter
xor
into
inc
mov
mov
or
xchg
push
pop
jbe
and
xchg
clc
or
loope
push
repnz
je
popa
mov
mov
jecxz
jmp
mov
fucomip
stos
xor
lcall
outsb
mov
sub
jo
cmp
mov
or
mov
out
and
push
push
lcall
test
repnz
push
dec
iret
sub
test
cmp
int3
push
cmp
mov
lcall
dec
ljmp
push
add
addr16
push
inc
scas
sub
inc
push
stc
inc
and
jg
dec
mulb
sub
lods
xchg
pop
dec
pop
ljmp
xchg
push
push
sbb
mov
jg
mov
sahf
movsb
cli
arpl
push
stos
or
in
scas
xchg
and
jge
mov
pop
and
cmp
frstor
sub
cmpb
cwtl
mov
das
xchg
adc
push
aam
or
cwtl
jo
adc
inc
inc
jp
mov
popf
pop
jbe
inc
push
arpl
aaa
jno
and
and
adc
push
inc
jg
cs
popf
push
mov
rdtsc
push
cmp
sbb
outsb
add
xlat
dec
add
sbb
dec
fdiv
scas
adc
bound
push
dec
mov
fdivrl
lods
dec
mov
sti
test
add
jb
sbb
pop
popa
jbe
repz
and
xchg
cmp
cld
aas
xchg
cmp
dec
inc
cwtl
test
sahf
js
cmpsb
test
fcmovbe
add
fisubs
std
test
sbb
fcoml
shrb
sub
ret
clc
jle
inc
sbb
ret
cltd
fcmovne
pop
mov
in
mov
pop
push
test
mov
fisubl
mov
push
mov
dec
inc
mov
stc
adc
push
addr16
dec
lods
test
mov
inc
insb
insl
xchg
jno
aam
sbb
fs
mov
adcl
sub
add
cmp
mov
xor
daa
mov
loopne
add
pop
push
ja
ret
inc
xchg
std
mov
cmp
xor
lahf
fs
pop
pop
ds
push
popf
push
xchg
dec
xor
jns
js
icebp
mov
adc
fsubs
sbb
adc
imul
and
ret
cmp
cwtl
or
jge
dec
push
pop
sub
xlat
mov
mov
sub
mov
dec
pop
cmp
dec
sub
mov
leave
xorl
das
cli
int3
rol
sahf
push
inc
adc
sub
and
inc
mov
rolb
cs
cmpsb
adc
sbb
adc
testl
push
gs
dec
xor
cli
pop
in
mov
ljmp
or
add
push
jle
push
fildl
scas
xor
cmp
fs
sub
pop
or
lahf
push
pop
sbb
mov
lahf
fisubrs
shlb
adc
addb
scas
inc
jne
outsl
ja
cmp
pop
stos
cwtl
aad
jnp
mov
xchg
dec
add
xchg
sub
jl
hlt
imul
jle
aad
and
stos
adc
fxch
push
out
dec
dec
int
push
push
fmul
dec
fisubs
fsubr
andb
add
mov
cmp
sahf
scas
test
inc
cli
into
inc
dec
mov
inc
ficoms
jno
fsts
mov
das
sub
push
scas
ss
add
movl
push
lahf
and
pushf
inc
popf
int3
cld
stc
sbb
xchg
iret
mov
leave
iret
in
adc
daa
mov
cmp
outsl
lret
aas
js
stos
test
jno
mov
add
lcall
xor
xor
sub
bound
fmuls
cltd
sbb
or
xchg
mov
sub
imul
push
test
outsb
push
daa
loope
out
mov
adc
fidivrs
ret
mov
or
jne
shrl
in
fs
push
inc
leave
cs
dec
push
pop
jae
jne
orb
jmp
xchg
stos
jmp
cmp
ja
popf
mov
jb
loope
popf
shlb
in
xor
or
sti
push
call
mov
in
xlat
stc
xchg
leave
cmp
sbb
mov
pop
in
lods
dec
cmpsl
xlat
sub
into
in
sbb
mov
dec
mov
push
jnp
fisttpl
fnstcw
inc
inc
lock
cmp
add
and
mov
jmp
pop
enter
or
lea
loopne
sub
scas
rorl
cltd
pop
jg
aad
dec
cmp
out
sbb
adc
adc
lcall
leave
prefetcht1
inc
or
xchg
aaa
dec
das
js
in
jo
jg
jp
ret
dec
and
sub
push
xorl
not
pop
in
bound
sub
inc
outsl
decb
cs
pop
mov
cmp
rclb
cmp
xchg
cld
jge
push
xchg
push
data16
repz
ret
icebp
addr16
lahf
fisubl
and
imul
mov
cmp
lret
jae
lcall
aas
ljmp
repnz
dec
or
push
xchg
cmpb
sbb
lahf
lods
scas
insb
cli
dec
pushf
call
out
mov
sub
and
rcrb
and
ljmp
pop
repnz
daa
xlat
add
adc
sbbl
insl
ja
pop
and
mov
cld
jecxz
cmp
fidivrs
daa
or
aaa
lods
cld
mov
push
notl
cmp
mov
sbb
fsub
mov
mov
pushf
inc
inc
aaa
insl
adc
sub
adc
adc
hlt
shlb
rdpmc
sahf
js
cmp
xor
and
aam
dec
rolb
jecxz
lods
fistl
adc
mov
out
idivb
addr16
mov
push
cmp
pop
adc
ficoms
data16
cmp
filds
jp
sbbb
dec
push
addl
jno
loop
out
dec
push
into
test
cmp
cmc
bound
add
leave
adc
and
xor
mov
sub
cmp
push
push
inc
movsb
pusha
sub
movsb
movsb
xor
add
jmp
sbb
hlt
gs
sbbb
popf
mov
and
lcall
nop
outsl
jne
sbb
cmp
push
pop
stos
bound
xchg
aad
xor
xlat
push
cmp
shll
cltd
insb
scas
jne
insb
mov
mov
inc
inc
or
mov
aad
push
mov
pop
push
mov
ds
add
add
xchg
enter
jns
mov
int
jb
mov
jmp
popa
cmp
xor
cmp
in
ret
mov
xchg
nop
hlt
ror
mov
jae
jnp
enter
ret
das
leave
pop
mov
cwtl
shrl
nop
mov
xor
jnp
lcall
and
add
inc
cmpsb
cmp
sbb
pop
mov
in
shlb
into
lahf
stos
aad
movsl
popa
mov
ret
dec
xchg
popf
out
mov
bound
pushf
push
out
or
add
cmp
cli
cmpsl
rorb
push
xchg
jge
fbstp
cmp
xor
xor
xchg
jb
xchg
mov
dec
out
mov
mov
pop
xor
or
jl
imul
hlt
dec
dec
les
sti
cmp
cwtl
pusha
lret
ret
sahf
and
addr16
sbb
aad
cmp
cs
shrb
or
lret
inc
pop
adc
int3
imul
es
mov
dec
xchg
stc
loopne
sarl
fists
jle
stos
mov
push
je
mov
xor
sbb
mov
cmp
andb
mov
std
stc
dec
mov
dec
or
shrl
stos
xlat
jae
inc
mov
pushf
adc
jo
push
lret
mov
enter
mov
sarl
adc
jbe
mov
outsb
loopne
mov
jp
lcall
fmull
and
mov
push
push
mov
insl
popa
sbb
push
ss
fs
es
jmp
sub
icebp
xor
or
xor
in
mov
in
jae
gs
cmc
addl
dec
mov
xchg
sub
jae,pt
xor
js
xchg
js
in
push
std
and
and
jg
nop
adc
dec
mov
data16
sbb
mov
repnz
mov
ret
stc
and
mov
xchg
fwait
mov
jns
int
jbe
sub
mov
cmp
push
js
outsl
mov
push
push
xlat
push
in
and
push
mov
adc
fcomi
pop
loop
data16
rcl
test
mov
xor
scas
push
ret
push
sbb
mov
inc
mov
jp
mov
mov
inc
xchg
daa
cwtl
enter
rorb
mov
adcb
pop
out
inc
stos
mul
jae
repz
std
xchg
test
xor
jl
pop
cmc
adc
xchg
fcmovnb
mov
in
jnp
or
jecxz
inc
hlt
aam
xchg
addl
test
push
ret
iret
pop
inc
push
adc
sub
xchg
stos
test
jns
scas
test
mov
imul
pop
popa
sub
sub
xor
ljmp
lcall
in
stos
jo
inc
rcll
dec
adc
gs
sbbb
stos
loopne
scas
pop
test
xchg
pop
fldenv
lea
mov
fdivrl
dec
and
std
mov
push
fucomp
int
call
pop
scas
aaa
add
je
jae
les
xchg
add
xor
sbbl
lret
out
mov
shlb
mov
stos
mov
int3
loope
jo
std
mov
cld
decl
insl
sub
loopne
push
cmpsl
lock
jg
inc
jno,pn
mov
lret
hlt
daa
jbe
and
daa
pop
xchg
es
pop
jp
or
lods
sub
push
fisubrl
pop
scas
repz
movsl
dec
call
in
ss
sbb
pop
cmp
inc
mov
pop
mov
jb
push
pusha
pop
and
jmp
sub
sub
xor
or
mov
xchg
sbb
outsb
cwtl
adc
xor
adc
daa
orl
out
fcom
add
inc
push
popf
jo
jp
sub
xor
int3
jg
mov
pop
mulb
dec
sbb
test
mov
fnstenv
push
cltd
xchg
cmp
rorl
xor
nop
andl
add
int
or
cld
rorb
hlt
push
ja
sbb
pop
out
push
rol
cmp
leave
popa
inc
in
ljmp
push
lret
mov
dec
sahf
repnz
mov
int3
mov
mov
adc
test
mov
dec
mov
push
roll
cmc
mov
lcall
in
cli
gs
mov
mov
shl
mov
movmskps
lret
je
lea
fdivr
mov
add
xor
je
push
xor
sub
cltd
lahf
dec
aaa
push
mov
and
mov
decb
mov
outsl
mov
ror
imul
xchg
lds
xor
mov
filds
adc
aad
in
stos
jg
pop
arpl
test
scas
sahf
xor
stos
and
ljmp
cmpsl
adcb
jne
and
mov
loopne
xorl
pop
je
aas
adc
ss
scas
inc
mov
inc
mov
bound
jmp
jae
dec
mov
xor
repz
add
xchg
pop
pushf
fistpl
mov
jno
cld
pushl
ret
add
push
loop
das
movsb
out
popa
gs
test
out
xlat
int3
mov
mov
jno
repnz
mov
adc
sti
je
mov
inc
daa
lret
in
out
xchg
cmp
rcrb
inc
jge
sbb
sbb
xor
mov
fldl
mov
fsubp
or
inc
inc
and
push
jb
add
hlt
or
iret
scas
das
in
fwait
fcomps
fldenv
dec
mov
cmc
cmpsl
pop
mov
adc
sub
xlat
cmp
cld
mov
xor
xor
insb
js
aas
rcrb
lock
loopne
mov
lock
jae
in
add
pop
xchg
rcrl
jns
inc
stc
push
pop
test
mov
jge
jmp
adc
decb
push
scas
movb
out
fnstsw
cmpsb
pop
sub
jp
imul
inc
int3
movsb
scas
fiaddl
jbe
mov
xor
outsb
sbb
clc
insb
loopne
adc
sbb
mov
jecxz
popf
adcl
xchg
inc
and
dec
xchg
repz
add
mov
stos
out
xor
aad
out
test
push
dec
ds
pop
cld
scas
inc
rcrl
or
mov
lcall
mov
mov
int3
fisttpl
or
js
lds
xchg
jge
push
cmp
or
nop
mov
cmp
jne
in
fucomip
fbld
push
jno
out
push
test
mov
push
enter
mov
out
lea
sti
xor
xchg
mov
or
imul
xor
in
or
out
in
mov
push
or
fldcw
idivl
push
mov
xorl
lock
jne
add
rorl
popa
adc
std
repz
outsb
ficomps
cmp
pop
jge
cmp
sub
jl
addb
or
shrb
stos
int3
rolb
insl
xchg
dec
aad
cmpsb
lea
push
into
mov
repnz
psubusb
aaa
out
and
insb
xchg
mov
pop
test
cwtl
test
fs
fsubs
pop
lds
repnz
xor
jnp
xchg
clc
inc
cld
mov
sbb
movsb
bound
or
jg
push
int
in
inc
dec
nop
jbe
cld
push
xchg
shl
arpl
fistps
hlt
push
push
fldt
mov
pop
int3
cmp
sbb
pop
sbb
mov
stc
and
dec
inc
movsb
repz
xchg
sub
bound
jmp
and
dec
cmc
adc
fwait
aas
in
test
dec
adc
push
or
pusha
xchg
jno
test
jge
sti
fwait
mov
push
iret
pop
nop
mov
pusha
push
sbb
ja
sbb
imul
negb
push
shrl
add
nop
dec
dec
aaa
inc
push
repz
insb
cmp
cmp
cmpsl
aaa
rcr
adcl
xor
les
ret
sbb
inc
add
mov
xlat
out
pand
cli
insb
inc
cs
out
xor
pop
and
dec
fisttpl
push
loope
sbb
xor
push
or
into
ret
and
push
sbbb
and
xchg
jecxz
xchg
push
and
inc
sbb
mov
pop
mov
je
mov
pop
sub
jo
xor
adc
jno
xor
stos
pop
pop
fdivl
sbb
dec
jne
xor
and
mov
sbb
in
loopne
cmp
jns
xchg
dec
je
addr16
xchg
inc
pop
mov
or
sbb
sahf
arpl
and
mov
es
fists
stos
and
inc
shll
iret
cwtl
sub
outsb
lock
sbb
and
out
ljmp
xor
push
push
loop
or
pop
in
in
les
inc
popf
clc
dec
ds
fdivl
scas
mov
cli
les
cmp
mov
cmpsb
push
mov
xchg
enter
idiv
jb
jecxz
jb
js
das
ljmp
cld
in
out
into
je
adc
std
pop
cmc
lods
push
xor
cmpsl
lret
les
aad
daa
and
xlat
ja
mov
xor
fdivrl
jmp
pop
and
in
or
nop
fiadds
rcl
sbb
movsb
std
rolb
jno
pushf
push
adc
pop
and
jnp
cmp
add
js
popa
inc
cmp
mov
fistpll
pop
and
xchg
push
xchg
dec
xor
cmp
inc
adc
je
ret
arpl
lret
sub
out
mov
popa
pushf
repnz
xchg
xor
add
clc
sbb
mov
rcl
jns
adcl
push
das
cld
and
push
xor
mov
les
test
lock
push
inc
and
pop
mov
xchg
sbb
cmc
dec
bound
mov
cmp
sbb
pop
scas
sbb
in
mov
add
je
movsl
call
lret
push
rorb
xlat
xchg
in
sbb
mov
pop
pop
and
push
xlat
xchg
sub
push
dec
sbb
mov
inc
push
in
add
out
push
gs
scas
xchg
add
cmp
jae
ljmp
ds
daa
pop
push
addr16
pop
nop
pop
mov
push
dec
add
in
jmp
int3
pop
xchg
inc
push
repz
fldenv
xchg
mov
push
adc
ret
fcompl
pusha
mov
rolb
ss
sub
mov
iret
pop
xchg
fisubrs
icebp
dec
mov
lods
dec
cld
jns
and
loop
pushf
in
sbb
aaa
cmc
jp
xchg
dec
es
inc
add
jecxz
pop
mov
outsl
pushf
scas
sub
xchg
xor
lret
out
lods
jns
out
shlb
subl
gs
pushf
and
add
mov
out
jge
cmp
call
mov
mov
push
idivb
and
cwtl
jle
xchg
jae
jnp
push
les
sahf
imul
jle
pusha
repnz
inc
andb
mov
xor
cmpsl
das
ss
or
ljmp
push
fdiv
stos
sub
inc
sar
jo
ror
and
jl
and
repz
xchg
lcall
xchg
jmp
xorl
sbb
out
inc
pop
and
mov
jnp
mov
pop
movsb
inc
out
sti
rcrb
mov
pop
lods
push
xor
test
pop
xor
test
or
scas
push
sub
push
xchg
sub
bound
arpl
jns
pop
icebp
or
sbb
jl
cmc
adc
ja
sub
call
jne
fisttps
or
mov
stos
xor
sbb
jl
inc
or
ja
adc
push
neg
fstpt
cltd
jbe
push
popa
cld
imul
scas
sbb
pushf
test
rcrl
mov
hlt
mov
inc
mov
fidivs
xchg
outsb
mov
scas
add
repnz
pop
cmp
push
jg
test
cmpb
fnstsw
cmp
mov
lods
cltd
mov
addr16
mov
push
push
daa
movsl
jp
or
lret
ret
push
cmp
xchg
ret
mov
push
jne
out
inc
mov
in
mov
sbb
out
inc
cmp
pop
xor
out
pop
push
lods
imul
jno
dec
insl
pop
mov
cld
pop
mov
push
scas
pop
xchg
loopnew
adc
cmpsb
mov
adc
out
add
or
xchg
mov
fisttpl
loope
inc
push
xchg
repnz
cmp
adc
clc
pop
xor
cli
pop
xor
repnz
scas
xchg
inc
pop
clc
xchg
push
in
dec
clc
push
leave
daa
inc
arpl
dec
scas
icebp
fildll
xchg
in
or
fstpt
fs
mov
cmp
negl
aam
popa
jge
fisttps
and
nop
cli
xchg
stos
pop
sbb
or
jnp
fnclex
sbb
xchg
repnz
pop
ljmp
or
xor
dec
sbb
movsb
mov
inc
pushf
mov
dec
out
out
cmp
in
decl
jns
stos
or
cmp
les
bound
add
nop
loop
xchg
xor
stos
ficomps
ret
into
push
xchg
int
pop
stos
mov
dec
xchg
push
cmp
arpl
outsb
sbb
pop
daa
sbb
mov
sub
lea
sbb
mov
or
aaa
cmp
and
scas
sub
mov
cs
sub
cmp
sti
xchg
cmp
xchg
jne
loope
shll
dec
in
in
movsb
pop
dec
andb
sbb
jne
test
lret
push
outsl
push
mov
and
lcall
pop
vunpcklps
mov
icebp
and
and
and
into
sbb
iret
push
xchg
popa
sbb
aaa
in
cmc
mov
sbb
into
fwait
inc
aas
imul
test
mov
stos
rol
xchg
popf
mov
or
mov
cmp
in
test
mov
cs
pop
std
adc
fists
lock
shrb
xchg
push
xor
fwait
repz
outsb
xlat
and
sti
insl
clc
loope
fcomip
data16
xchg
pusha
int3
fnsave
ja
xchg
cltd
add
imul
push
bound
popa
and
repnz
mov
sbb
add
push
or
enter
rcrb
dec
iret
cmc
outsb
push
dec
leave
inc
jnp
and
push
mov
mov
ror
fistpl
push
xor
add
inc
ret
iret
mov
jecxz
push
or
mov
cmp
push
dec
cmpsb
sub
xor
inc
addr16
mov
mov
inc
sbbb
xchg
arpl
arpl
aaa
mov
dec
cmc
inc
dec
dec
mov
ljmp
push
scas
aad
loopne
fisttpll
mov
adc
and
lods
jge
into
add
inc
push
or
sbb
adc
loope
mov
std
lock
jge
jmp
icebp
jno
xor
out
gs
cmpsb
into
add
or
sti
je
xchg
lcall
cmp
fwait
inc
jne
stc
stos
cmpsb
lods
test
cmp
dec
push
into
push
xor
cmpsl
mov
jno
jbe
repz
or
adc
cs
mov
lods
and
cmp
push
pop
scas
mov
sbb
test
mov
mov
bound
pop
push
sbb
hlt
mov
add
mov
cli
xorl
out
shll
rorl
sub
dec
sbb
inc
sub
hlt
jecxz
inc
nop
pop
or
lret
sub
mov
pop
sahf
orl
push
scas
or
xorb
push
scas
jl
pop
xor
push
mov
and
push
test
jo
bnd
in
jbe
mov
jnp
push
mov
movsb
int
out
xor
push
push
cmp
cwtl
xor
and
fsubrp
dec
jns
sti
inc
sbb
repnz
rcrb
xlat
jle
repz
pop
push
inc
jp
jnp
xor
mov
lret
out
xchg
xchg
and
mov
loop
mov
jnp
js
out
inc
jns
fwait
xor
js
adc
mov
or
test
xor
sbb
test
popa
mov
push
mov
rcrl
add
pushf
fucomi
js
adc
adc
ja
xor
xlat
cmpsb
sbb
jne
sub
jg
mov
in
cld
stos
mov
push
hlt
sub
jmp
push
mov
rcr
loope
lods
leave
inc
scas
mov
mov
stos
mov
pusha
mov
movsl
rclb
sbb
adc
mov
pop
or
sub
fimuls
lock
repnz
rol
lods
stc
out
add
pushf
add
nop
xchg
test
or
clc
imul
scas
inc
in
or
ss
add
sub
in
or
repnz
shlb
sbb
dec
xor
pusha
mov
mov
fldcw
push
outsl
adc
test
ret
xor
imul
push
adc
outsb
add
push
add
loope
fisubs
add
jge
aas
dec
or
test
movsl
or
push
inc
add
int3
xchg
movsb
shlb
jmp
cmp
mov
or
mov
ret
cmp
icebp
jge
scas
cmc
ss
dec
mov
out
mov
icebp
and
in
out
push
lds
push
aas
push
leave
fiaddl
jbe
repz
subb
ret
jecxz
mov
jle
or
jge
jle
jp
gs
outsb
sub
mov
punpckhdq
inc
icebp
rclw
cmp
call
jb
out
cmp
jae
lcall
pop
mov
cmp
std
xlat
jno
ror
mov
pop
push
mov
shrb
sbb
mov
scas
add
inc
sbb
in
lock
insb
popf
and
sbbl
mov
jp
sub
inc
out
mov
or
cmp
repz
les
lds
fildll
pop
imul
xor
fwait
enter
pop
jo
popf
or
push
js
imul
xchg
and
out
sub
mov
in
out
scas
jno
sub
negl
arpl
lea
mov
cmc
shlb
imul
sub
gs
into
adc
stos
dec
sub
scas
push
push
mov
and
xor
inc
adc
jecxz
stos
adc
mov
xor
out
mov
clc
sbb
sub
out
xchg
call
xchg
das
bound
cltd
mov
pop
jp
insb
dec
aam
subl
dec
or
rorl
rcll
psubd
call
jae
fcoms
fidivl
xchg
pop
shr
xchg
push
iret
jbe,pn
repz
pop
stos
cld
adc
xchg
in
jb
mov
cmc
std
inc
mov
ret
xor
iret
stos
xorb
mov
bound
out
sbb
sbb
cld
cmp
repz
push
xchg
jnp
nop
out
rcll
mov
or
ja
xchg
hlt
in
imul
rclb
dec
test
and
loopne
mov
jnp
pop
hlt
rorb
cmp
cld
push
dec
inc
xchg
push
jl
enter
jecxz
fisubl
std
fs
mov
daa
add
xchg
push
outsb
ds
dec
ds
das
xchg
hlt
in
push
cs
xlat
xchg
mov
xor
cmp
mov
insb
push
notb
or
ljmp
das
fistl
inc
and
inc
inc
mov
jle
insl
enter
fisubs
mov
jbe
xor
cmc
mov
mov
and
cmp
fwait
mov
and
in
pusha
lock
push
divb
repnz
inc
testb
mov
ret
in
outsb
jne
pusha
pop
inc
popa
xlat
out
xor
xchg
and
inc
and
je
jo
or
popf
int3
pop
push
jecxz
icebp
mov
jecxz
sti
out
jns
push
iret
xchg
sub
aam
xchg
pop
xchg
push
and
push
and
imul
dec
inc
movsl
jmp
jb
mov
fists
xchg
cltd
gs
ja
jle
pop
out
sbb
leave
stos
xor
out
push
pop
jnp
inc
push
adc
push
dec
mov
or
fisttpll
loop
not
clc
popf
outsb
cmp
or
xorb
shl
jno
jmp
fsts
fcmovu
movsb
popf
out
sub
icebp
fwait
repz
notb
ja
sub
mov
pop
cmp
dec
addl
nop
mov
or
out
xlat
fcomip
in
in
mov
mov
jo
in
inc
push
sub
xabort
push
fbstp
jno
cmpsb
jle
jbe
adc
pop
shufps
sbb
clc
das
repnz
add
push
mov
xchg
popf
jmp
rep
mov
jmp
ljmp
cmpsb
mov
fs
out
xchg
out
pop
enter
xchg
pop
jp
out
movsl
xchg
sub
lds
sub
inc
mov
rolb
sbb
inc
adc
fimull
and
dec
mov
lahf
dec
lret
cltd
sbb
xlat
fsubl
hlt
into
fscale
mov
and
cwtl
mov
bound
xchg
or
sbb
and
ljmp
nop
mov
sbb
aam
ds
or
in
adcl
jp
push
rcll
sahf
shrb
jno
xor
das
fdivl
xchg
adc
sbb
mov
sub
mov
insb
loope
xor
mov
sub
mov
jbe
xchg
popa
cmpsl
aad
inc
insl
cmpsl
xchg
xchg
push
push
push
adc
imul
cmp
cli
mov
adc
cmp
sbb
sbb
aad
mov
add
outsb
sbb
dec
sbb
in
ret
mov
dec
push
adc
mov
sarb
and
jge
mov
ret
es
pusha
scas
idivb
xor
stos
rcrb
sub
call
xchg
sbb
mov
xchg
ds
ljmp
push
iret
mov
insl
fisttpll
push
cmp
test
stc
repnz
push
aas
mov
or
stos
push
cmc
inc
repz
add
fidivrl
push
add
cmp
xor
out
inc
sbb
movsl
inc
insl
andb
mov
sub
mov
jmp
mov
fucom
pop
xor
ja
push
ljmp
repnz
dec
std
lock
and
lret
jno
or
lock
popf
cwtl
adc
sbb
push
xlat
clc
jae
adc
into
and
pop
rcll
jb
fs
aam
repnz
add
xor
test
xchg
pop
pop
add
in
jp
je
jge
xchg
mov
loope
sti
sbb
es
sahf
mov
xlat
loope
mov
mov
notb
push
cmp
add
mov
sub
xor
add
sbb
int3
pop
xchg
popa
jecxz
mov
xchg
test
clc
popf
pop
xlat
mov
rorb
out
cmpsl
in
mov
and
scas
neg
mov
cmpsb
loop
jl
xor
jmp
js
sbb
pop
or
jle
out
mov
pop
out
xor
aaa
addl
lahf
add
out
jg
mov
pop
orb
fsubrl
dec
xchg
movsb
popf
add
jle
call
inc
jmp
pop
cwtl
mov
stos
push
stos
out
enter
iret
mov
push
xlat
jp
ret
xchg
mov
fcoml
cmp
andl
add
into
lock
mov
dec
mov
outsb
fists
ja
lock
idivb
jno
pop
sbb
xor
or
rorl
jns
cli
movsl
inc
pop
sub
sub
or
add
hlt
adc
leave
adc
cmp
mov
adc
mov
push
push
lock
scas
iret
push
leave
mov
mov
xor
mov
addr16
xchg
bound
push
imul
cmp
test
mov
enter
sbb
ds
in
std
jns
out
stc
sub
loopne
xchg
adc
popf
mov
movsb
pop
add
faddl
out
dec
cmp
jp
inc
cmp
fiadds
add
adc
pop
into
or
xchg
scas
push
mov
jmp
jnp
roll
arpl
pop
scas
fistl
jae
dec
xorb
push
fiadds
jae
cmc
mov
or
cmp
mov
push
sub
and
loope
out
stc
enter
stos
inc
pop
pushf
pusha
jbe
in
roll
push
adcl
sbb
les
pop
pushf
aas
lock
or
movsl
inc
xlat
sub
cmpsl
outsl
xor
rcrl
push
cs
or
and
shrl
cmp
ljmp
sbb
add
or
lods
xchg
add
and
repnz
pop
nop
add
sbb
iret
and
les
adc
sub
lods
mov
xchg
pop
pop
loopne
rcrl
xor
out
mov
imul
pop
push
mov
lret
scas
xlat
jbe
inc
jae
insl
jp
sti
or
ja
pop
adc
mov
fstl
aaa
aas
pop
test
pop
mov
jno
je
lods
test
ret
sub
pop
jl
cmovp
push
daa
adcl
and
mov
and
mov
fidivs
pop
mov
mov
and
mov
jmp
xchg
cmp
jle
repnz
adc
daa
cmp
in
sub
xlat
leave
aas
xchg
sbb
rcrb
fistps
out
cmc
sti
fistpll
sbb
fdivs
xchg
sub
jp
das
hlt
data16
das
inc
ljmp
jmp
xor
jp
and
mov
sub
test
pop
aaa
lods
push
roll
sub
rorl
mov
lretw
cli
call
dec
std
insb
dec
add
mov
adc
inc
pop
mov
mov
jo,pt
dec
pop
xor
inc
fwait
adc
les
cmp
subb
push
mov
popf
mov
dec
add
xor
aam
psubusb
inc
dec
shrb
stos
xor
lods
cltd
pop
xchg
paddq
jecxz
and
test
fldl
dec
jb
pop
ja
jl
xchg
popa
icebp
cmovle
test
aaa
add
out
mov
pop
xor
divb
adc
shl
xchg
xor
cwtl
fsubr
sub
mov
mov
lods
pop
ret
int3
ficompl
addl
xchg
jecxz
mov
adc
mov
mov
js
cmpsb
mov
and
fimull
out
mov
dec
cmpsl
out
idivb
mov
rolb
dec
xor
push
insb
dec
lahf
dec
ss
inc
cmpsb
add
mov
cmpsb
and
in
sbb
cmp
ja
jo
ds
xorb
cld
incl
mov
pop
xchg
iret
clc
lock
xor
mov
ds
mov
call
cltd
movsl
mov
add
jge
mov
lods
xor
lods
out
and
mov
sbb
pushf
in
loope
push
test
sarl
jbe
cltd
mov
insl
inc
push
jo
roll
cs
orl
fistpll
fidivs
popf
inc
js
push
mov
insl
lods
stos
sub
or
mov
mov
xchg
stos
cmp
mov
stos
add
push
sub
insl
mov
mov
cmp
push
sbb
div
cmpsl
add
pop
add
mov
mov
jp,pn
aad
aas
dec
ficoms
ficoms
inc
xchg
rol
aas
mov
scas
add
fimull
push
mov
sub
push
loopne
iret
cmp
outsb
sub
adc
add
je
and
or
xor
jo
jo
push
mov
in
in
sbb
loop
scas
adc
push
nop
mov
fnstenv
xchg
pop
and
sub
std
in
cli
cmp
hlt
push
adc
repnz
mov
adc
jle
jne
fimull
pop
mov
adc
je
xor
mov
call
movsb
push
fs
jp
pop
orl
jp
xchg
xchg
out
cmp
xor
shr
adc
cld
cmpsb
mov
pop
pop
hlt
xchg
add
nop
stos
pop
add
loope
hlt
andl
fists
test
rcr
outsl
daa
lahf
sarl
pop
sbb
repz
jl
mov
mov
xor
xchg
add
mov
popf
outsl
sarl
mov
add
sub
mov
iret
shrl
cld
add
push
mov
iret
push
inc
mov
or
cmp
sub
xchg
fcom
sbb
and
mov
int
inc
xchg
scas
xchg
mov
loopne
jnp
insl
daa
and
sub
loopne
push
mov
fcoms
fldenv
jge
cwtl
rorl
ret
andb
popf
fisubrl
push
sub
lods
rorb
xchg
push
xlat
sbb
out
arpl
pop
loop
dec
inc
sarl
xchg
shll
xor
pop
xchg
lret
mov
ss
jmp
repnz
lret
lock
ljmp
push
jno
xor
xor
push
test
cmp
clc
lds
or
addr16
mov
mov
adc
jb
xchg
cmpsb
push
fistpll
int
icebp
das
jp
jno
xor
jbe
jo
add
cltd
into
fs
cmp
fisubrs
jb
jecxz
sub
dec
icebp
jle
shlb
sbb
repnz
xor
test
jecxz
jbe
popf
popa
mov
lds
pop
std
arpl
hlt
cmp
add
aaa
jle
cmpsl
repnz
das
leave
cli
and
jl
ljmp
or
pop
outsl
ffree
add
xchg
mov
stc
ljmp
pop
and
or
pop
idivb
lahf
sbb
icebp
push
stc
sbb
inc
adc
fisttpll
xchg
push
add
mov
mov
mov
in
lret
jb
xchg
outsb
out
cmp
iret
xchg
push
mov
decb
out
add
bound
mov
push
clc
xor
std
into
dec
xchg
xor
faddl
ljmp
fwait
lock
dec
out
pop
out
sub
sub
add
movsl
mov
jle
gs
cltd
mov
and
das
arpl
out
lds
jae
leave
jecxz
mov
clc
xchg
xor
or
cld
cwtl
bound
loopne
dec
and
jl
inc
push
mov
insb
adc
ret
xor
or
adc
mov
shrb
jae
pop
inc
shrb
out
mov
mov
into
rolb
fcoms
insl
sahf
out
out
and
insb
push
push
jle
fs
or
adc
ret
sarb
test
push
add
pushf
cld
dec
leave
arpl
or
jae
push
orb
push
hlt
xchg
pop
inc
or
adc
mov
pop
flds
or
jne
mov
add
stos
movsl
test
in
xor
das
xor
pop
movsl
icebp
cmpsb
push
pop
cmp
shr
es
out
lret
loop
and
pop
pop
pop
mov
outsb
cmp
fisttpll
pop
adc
xor
xchg
jp
mov
dec
cmc
dec
aad
and
in
mov
xchg
mov
xor
lret
ds
xor
insl
mov
jge
lret
jns
jo
test
aas
aaa
pushf
jbe
ja
sub
mov
xchg
mov
scas
xchg
orl
hlt
xchg
or
inc
imul
push
push
mov
repz
test
cld
inc
sbb
pusha
xchg
pop
mov
adc
decb
jl
add
fiaddl
cwtl
fnstcw
andb
and
push
lods
add
and
ja
loopne
mov
cmp
ret
and
push
fistl
cltd
jno
xchg
push
cmp
fidivrs
jbe
xor
mov
leave
adc
adc
movsb
jg
pop
mov
push
xor
clc
pop
pop
mov
pop
loopne
insb
call
and
out
inc
cmp
pop
mov
xor
inc
ss
insb
mov
sbb
pop
push
push
lods
call
popa
inc
cmpsl
and
cmp
in
out
add
ja
pop
mov
pushf
stos
ret
or
stos
daa
push
scas
pop
outsb
xor
pop
or
negb
subb
xor
jmp
cmp
lea
lret
push
inc
test
xlat
call
hlt
add
inc
sub
in
lods
cltd
sub
ss
rcrl
cmpsb
int3
xchg
inc
inc
adc
nop
push
sbb
mov
iret
xor
mov
xchg
ljmp
inc
sarl
call
xor
dec
jnp
out
mov
push
sub
push
cmp
push
and
mov
prefetch
adc
data16
idivb
push
xchg
ja
pop
or
in
or
push
stos
push
imul
dec
and
idivl
mov
or
xchg
addr16
div
lods
sub
push
lock
mov
in
mov
in
push
repz
sub
and
lea
sbb
add
nop
popa
mov
push
shll
mov
or
or
enter
mov
or
andb
shl
nopl
xchg
mov
roll
cmc
sti
push
sbb
mov
lahf
cmp
mov
mov
lds
repnz
bound
push
and
sub
ss
cmc
sti
mov
mov
imul
into
jle
add
xchg
inc
cmp
push
insl
loopne
arpl
pushf
xor
mov
xor
inc
data16
iret
aam
in
dec
xchg
sbb
loop
push
lock
out
mov
pushf
sahf
test
cld
or
or
adc
notb
jg
mov
cmp
loope
and
add
fs
scas
mov
inc
ret
mov
icebp
iret
cmc
inc
sbb
and
or
sbb
xor
adc
aas
add
xchg
aaa
inc
add
std
mov
lods
dec
xor
push
or
xchg
lcall
push
cli
outsl
cmpb
push
push
cmpsb
jecxz
xchg
arpl
adc
pushl
outsb
leave
pop
dec
pop
mov
insb
pushf
mov
stos
js
js
in
lret
ljmp
jb
mov
adc
sbbl
pop
loope
data16
mov
pop
jns
dec
xchg
mov
mov
add
xchg
jns
or
shll
stos
imul
enter
pop
cmp
pushf
inc
push
push
enter
lret
ret
ret
fwait
cmp
fwait
pop
adc
sbb
sbb
test
cmp
push
add
mov
fs
icebp
or
mov
xor
imul
out
inc
add
sahf
adc
js
das
pop
pop
pop
loop
fistpl
xor
mov
les
sahf
dec
jnp,pt
outsl
sbb
mov
shrb
xor
das
sub
mov
cmp
stos
sahf
mov
pop
dec
xor
es
and
fildll
cmc
mov
cmpsb
ja
and
cs
xor
pop
mov
pand
lcall
notb
outsl
test
sub
cli
cmpsb
xchg
xor
mov
mov
add
mov
pop
inc
jns
pop
scas
mov
cs
add
lods
outsb
jmp
les
idivb
sub
jbe
dec
push
orl
das
jno
imul
stos
inc
shrb
xchg
fisubs
in
inc
fcomps
and
scas
ret
pop
inc
add
jmp
jl
cwtl
dec
in
rcr
scas
adc
xor
push
or
leave
jnp
push
push
lea
dec
inc
cmpsb
or
test
lret
push
add
inc
pop
testl
clc
mov
push
cmp
and
inc
loope
add
inc
adc
clc
mov
xlat
les
int
fimull
cli
xchg
pusha
push
jg
xor
sbb
add
mov
xlat
pop
cmc
mov
das
mov
add
add
dec
mov
push
mov
int3
mov
adc
clc
adc
inc
sub
clc
mov
repnz
in
int
int3
push
out
xlat
mov
test
test
mov
mov
xlat
popa
dec
mov
fidivl
lea
inc
lret
fistl
adc
mov
sbb
mov
xchg
int3
xor
ljmp
cmp
andl
add
dec
testl
cmp
insl
cmc
fdivl
xor
sub
xchg
mov
push
es
scas
loope
mov
leave
jo
rcll
fiaddl
aas
cmp
mov
es
sahf
jbe
in
dec
mov
and
mov
cs
loope
push
adc
adc
fsts
js
rorl
push
cwtl
rcr
lods
cmp
outsl
inc
lods
out
ret
dec
mov
mov
jl
repz
xchg
dec
push
sub
push
call
or
int3
dec
scas
addr16
xor
lock
pop
out
cwtl
pop
cmp
and
add
daa
sub
cmp
sub
inc
leave
cmpsl
pop
cmp
jmp
outsl
iret
push
push
nop
sub
loope
shll
lcall
pop
cs
push
jae
inc
mov
xor
lahf
sub
or
jecxz
aad
mov
sbb
jle
mov
jo
sbbb
sbb
add
inc
mov
pop
lds
jmp
add
out
pop
mov
aam
jno
jo
xor
test
cwtl
dec
repz
outsb
add
test
out
stos
mov
sub
mov
popf
iretw
pusha
out
add
movsb
push
jns
data16
movsb
loopne
addb
push
mov
nop
push
pop
inc
sahf
sbbb
popf
aaa
cltd
fistl
pop
inc
mov
xchg
push
fwait
outsb
push
pop
mov
bound
in
dec
adc
ret
mov
sti
outsl
sbb
sbb
adc
xchg
xlat
mov
bound
cmp
or
xor
divl
fnsave
cmpb
fdivrl
jae
push
push
xor
inc
pop
cmp
jecxz
sbb
shll
es
data16
cs
jp
adc
xor
xor
in
loope
pop
call
test
xchg
cmp
add
push
pop
popf
xchg
or
and
mov
mov
cmp
mov
mov
add
cmc
sahf
int
sbb
inc
fsubs
and
test
pushf
addr16
lock
ss
add
xchg
and
lret
and
leave
lea
mov
repz
shl
dec
adc
pusha
cmp
fdivr
lods
out
sub
jnp
mov
icebp
pop
lock
cs
ds
ss
push
std
mov
or
in
pushf
test
fstpl
neg
js
push
push
mov
mov
xchg
or
fs
adc
enter
int3
aam
dec
ljmp
sbb
cmp
mov
xchg
faddp
cmp
sub
fsubrl
mov
mov
and
sbb
lahf
xchg
xchg
sub
idivb
loope
mov
sbb
aas
or
jg
fists
repz
mov
jmp
push
mov
pop
fsubrl
daa
mov
xor
sub
xchg
mov
fisubrl
or
push
adc
insl
addr16
cmp
mov
loopne
xlat
pop
imul
jge
inc
insb
ds
jge
shrb
pusha
out
or
test
xor
push
in
mov
inc
or
std
push
inc
inc
pop
sbb
ret
arpl
push
inc
and
or
aas
outsb
cltd
mov
jg
in
ja
call
insb
xchg
pusha
xlat
jbe
shrb
test
ret
mov
sbb
or
aad
fmul
es
popa
ss
inc
rcl
cwtl
cwtl
js
movsl
adc
or
repz
inc
inc
aam
das
xchg
pushf
jo
cmpsb
mov
or
cmc
leave
in
shlb
xchg
xchg
lret
vorpd
mov
mov
sub
cmc
into
sahf
lods
movsl
xchg
sub
adc
outsb
or
fstl
add
in
roll
aas
fisubl
or
mov
pop
add
push
hlt
in
cmpsl
or
jle
cmc
and
pop
dec
mov
lret
out
scas
fcmovnbe
ss
xchg
test
fmuls
out
or
mov
sub
aaa
test
ds
stc
pop
cld
xorl
enter
cltd
xchg
aam
pop
rol
push
add
push
mov
test
testb
in
rclb
mov
jnp
xchg
clc
xchg
sahf
stos
dec
aas
test
aaa
mov
lods
sbb
aad
sub
clc
movsl
das
mov
mov
sub
dec
jb
mov
imul
xchg
cld
pop
jmp
js
jbe
out
inc
das
lcall
jb
and
ret
push
mov
pop
mov
mov
push
push
in
mov
xchg
xchg
cs
xchg
imul
lret
iret
dec
push
adc
inc
xorb
gs
popa
dec
inc
in
pop
int
push
lds
fcmovne
pop
loope
outsl
push
fisubrs
fsubrs
call
hlt
fsubr
pop
gs
mov
ja
lods
neg
stc
xorb
adc
mov
inc
lock
cmp
leave
push
scas
fwait
shl
sarl
xor
shll
lods
cmp
fcmovnu
insb
pusha
lahf
les
mov
pusha
pushf
std
and
mov
nop
test
out
cmpsl
mov
sbb
scas
mov
fdivrl
mov
sbb
stc
pop
xchg
xor
pop
jno
mov
stos
push
shll
loope
dec
xlat
enter
mov
dec
pop
cs
dec
sbb
loopne
push
addr16
adc
lahf
adc
push
sbb
in
sti
movsl
inc
repz
loop
xor
inc
dec
ret
xor
or
fldpi
lods
fidivs
repz
loope
push
and
ror
int
xlat
or
mov
xchg
mov
add
ja,pt
pop
sahf
and
add
cmp
nop
lret
sbb
cmp
sahf
icebp
adc
xchg
stos
pop
shlb
cld
xchg
repz
call
xchg
stos
ret
out
xor
sbb
sub
leave
in
adc
nop
cmp
lods
std
ljmp
imul
sbb
mov
mov
adc
pop
pop
mov
mov
imul
insb
xlat
add
fistpl
dec
inc
mov
cmpsb
adc
cmpsl
inc
jns
cmp
sub
pushf
pushf
mov
fsubrl
adc
outsl
xchg
or
adc
pop
incl
xchg
sahf
int3
in
das
jo
pop
mov
stos
mov
push
or
xor
pusha
call
rorl
ds
divb
es
sti
fbstp
rorl
inc
mov
inc
pop
in
and
les
std
xchg
xor
xor
sarb
fsubl
clc
cmp
cmp
mov
movsl
insb
sbb
data16
jb
push
in
jp
mov
sahf
inc
inc
mov
add
xchg
push
lea
xchg
adc
xchg
and
mov
addb
push
sbb
pushf
cmpsb
jb
pop
dec
jecxz
lcall
or
jne
popa
push
mov
dec
fstpl
stos
aas
push
dec
lcall
aas
test
rolb
fmull
dec
hlt
test
and
out
push
mov
popf
sbb
sbb
sbb
call
sbb
jae
fs
mull
push
mov
add
divl
and
test
lods
outsl
fmulp
mov
mov
lods
push
test
imul
jo
jmp
jp
pop
dec
sbb
sbb
push
mov
stc
lret
ret
or
xchg
jp
out
adc
aas
mov
mov
jo
clc
insl
hlt
pop
sbb
mov
daa
loop
fisubrl
jnp
adc
shrb
sub
orb
push
insb
popf
dec
ljmp
mov
andnps
push
add
pop
lahf
mov
idiv
xchg
push
xor
lods
lea
lcall
jge
pop
bound
and
xchg
ror
aad
dec
rorb
rcrb
sub
insb
shrb
adc
mov
mov
insb
push
cmpb
and
xchg
cmp
and
mov
add
mov
inc
and
outsb
movsb
pop
cltd
push
pushf
xchg
mov
jno
ds
cmp
stc
aam
out
negl
push
pop
in
cmp
cmp
mov
out
lods
out
lcall
std
adc
dec
cmpps
cltd
pop
aaa
mov
cmpl
add
cs
cmpsl
adcl
scas
cmp
jp
sbb
nop
scas
push
sbb
sbb
inc
push
pusha
add
xchg
mov
xor
push
adc
cld
sbb
aas
mov
daa
into
add
pushf
std
ljmp
dec
adc
fbstp
adc
outsl
or
subb
insl
pop
sahf
mov
or
clc
aam
push
mov
sbb
push
fiadds
mov
sarl
daa
test
pop
jmp
pop
out
or
or
insl
xor
dec
xchg
and
xorb
lds
jo
sub
out
lds
outsb
sbb
test
test
test
cs
cmp
sub
xchg
imul
test
call
dec
cli
mov
sbb
lods
leave
push
daa
test
sti
pop
add
jp
push
comiss
pop
scas
sar
xor
rcll
mov
cmp
ljmp
push
leave
clc
je
repnz
addr16
push
jno
push
test
mov
sub
sbb
xchg
push
das
push
aas
xchg
pop
add
scas
inc
mov
lock
mov
dec
mov
flds
mov
in
mov
cs
int3
lods
add
nop
bswap
add
cltd
push
rol
jb
xor
mov
js
dec
add
push
aam
push
sbb
mov
sbb
fiadds
mov
dec
lods
into
xchg
lea
ljmp
pusha
out
cmp
xor
outsb
arpl
mov
dec
xchg
inc
mov
lret
push
aam
cmc
lods
in
adc
cmp
xchg
adc
test
sti
dec
add
cli
int
fwait
into
pop
push
mov
jne
mov
mov
sub
arpl
sahf
ret
dec
shlb
mov
shr
hlt
or
mov
cmp
inc
lahf
jp
sbb
rolb
sbb
jge
jae
and
sbb
xor
call
jae
test
dec
mov
std
dec
pop
addb
popf
out
lcall
and
pushf
daa
sub
daa
lea
xchg
pop
test
pop
mov
pop
sbb
shll
pushf
insb
out
jbe
sti
xchg
mov
popa
stc
bound
xorb
adc
mov
enter
mov
mov
mov
scas
inc
mov
mov
and
popf
mov
iret
mulb
adc
push
arpl
inc
lods
and
shl
inc
jecxz
push
ss
hlt
sbb
in
adc
sub
in
fwait
mov
jns
sub
cmp
sub
mov
mov
rcrl
sbb
jbe
mov
or
push
push
add
inc
xchg
adc
mov
sub
leave
imul
push
jl
push
sub
push
jle
mov
mov
cs
imul
in
sti
pop
sub
push
inc
add
add
hlt
ljmp
pop
jns
jo
jle
ret
outsl
jbe
or
add
mov
push
aam
testb
loope
pop
out
lret
cld
leave
outsb
popa
jne
daa
imul
in
in
mov
sub
sub
sbb
clc
dec
inc
mov
subb
sub
push
mov
addr16
sub
mov
mov
cld
sub
in
dec
jns
roll
lea
adc
clc
push
dec
xor
jno
xor
pop
cmp
mov
push
and
sub
adc
repz
shrb
mov
pop
sub
pop
loopne
aaa
adc
push
mov
pop
sub
loope
mov
jmp
jb
mov
popw
jmp
mov
cltd
inc
sub
jb
jno
cmp
bndstx
into
ja
xor
mov
clc
pop
leave
int3
push
ljmp
icebp
xchg
mov
sbb
int3
fldl
les
aam
and
sar
int
mov
addr16
mov
clc
int3
test
mov
mov
sti
ja
rcrb
and
mov
pop
pushf
fdivs
mov
es
orl
mov
jle
mov
dec
cmp
outsb
mov
negb
add
push
scas
jle
lahf
mov
enter
hlt
xor
outsb
xchg
push
rcrl
negl
addr16
mov
cmp
into
mov
andw
pop
aaa
rcrl
mov
sbbb
ror
mov
popa
xchg
cmp
jne
fisttpll
sti
imul
lret
push
xchg
mov
int
hlt
scas
jmp
mov
aam
cli
into
in
outsl
push
std
inc
cmpsb
add
xchg
flds
and
pop
xor
jnp,pn
mov
mov
cmp
fadds
cwtl
mov
cmp
cld
jp
mov
test
or
arpl
ret
adc
sbb
xorb
sbb
andb
rol
shll
pop
mov
sbb
sti
test
xor
inc
inc
jge
xlat
ret
leave
stos
cmc
add
adc
mov
add
in
faddl
arpl
jb
mov
movsb
les
pop
fcmove
bnd
sub
in
push
jmp
cmp
scas
out
lcall
xchg
mov
inc
jmp
add
int3
push
push
xor
cli
add
in
push
and
iret
rolb
xor
push
mov
cmpb
cltd
stos
sub
mov
or
jnp
xor
in
jle
pop
xchg
and
inc
or
testb
shll
dec
push
sub
loop
xor
or
jnp
scas
repnz
hlt
es
xor
cmp
js
fiaddl
cwtl
aas
adc
incb
jo
imul
cmp
stos
leave
pop
dec
fsubr
xchg
jae
mov
xor
inc
notl
in
xchg
ds
sbb
out
mov
adc
mov
je
daa
fcompl
loopne
scas
or
or
cmp
inc
cli
outsl
inc
mov
dec
adcb
fucom
cmp
push
cmp
xchg
lret
add
push
in
pop
sbb
arpl
push
dec
or
jecxz
push
jge
and
inc
push
aaa
in
xchg
outsl
ds
in
in
inc
bound
add
sbb
dec
aam
mov
hlt
or
movsb
adc
js
imul
lea
mov
pushf
addr16
dec
in
stos
mov
xchg
and
ror
clc
sti
cmpsl
and
mov
jge
insb
inc
iret
cld
jge
sub
xchg
inc
inc
push
mov
xchg
in
or
loope
add
fsubrs
icebp
in
clc
mov
and
push
add
std
fisubl
sahf
jmp
adc
mov
mov
sub
dec
jmp
fistps
cmp
shll
adc
mov
dec
push
cmp
scas
or
dec
addl
andl
pop
sbb
dec
aam
inc
inc
mov
shr
sub
lcall
int3
leave
adc
add
add
push
int
xchg
loop
mov
aam
cmp
js
cld
stos
mov
in
xor
cmp
into
pop
push
mov
and
inc
inc
mov
cmpsb
sbb
jno
das
pop
cmpsl
mov
xor
fwait
jge
jno
subl
daa
and
mov
push
fsts
pushf
insl
or
cld
test
jo
dec
jo
gs
push
push
fnstcw
sub
xchg
mov
mov
sbb
pop
mov
popa
ds
jg
insl
pop
cmp
or
out
mulb
loop
jo
and
fisubrl
subl
pop
dec
sbb
add
das
aas
mov
add
jp
jne
mull
or
push
xchg
xor
aam
dec
mov
lds
lret
sbb
stos
mov
aad
inc
mov
and
ja
les
fs
xor
mov
inc
repz
xor
in
lods
mov
movsl
and
scas
fstpl
ja
cmp
imul
lahf
xchg
add
lret
xor
movsb
xchg
dec
mov
adc
jge
enter
pop
sbb
pop
cltd
imul
pop
jmp
adc
inc
sbb
and
jno
pop
add
sbb
xchg
sahf
shrb
rol
pop
cli
or
xchg
out
pop
inc
jle
lock
sub
sbb
sbb
inc
and
push
sbb
sub
negb
fcoms
sub
and
cmc
ss
popf
popf
mov
sub
jl
ljmp
adc
gs
jb
cwtd
fs
jns
pop
inc
es
js
cltd
cmp
or
das
gs
dec
cmp
iret
fisttpl
ret
test
mov
add
fstp
push
ss
outsl
pop
mov
dec
hlt
pop
dec
movsb
nop
inc
pop
sarb
or
pop
pushf
loope
and
pop
popa
cmp
pop
cwtl
mov
movsl
into
test
les
sbbb
dec
call
mov
mov
frstor
sbb
cmpsb
call
jnp
sbb
mov
mov
mov
xchg
dec
aam
cltd
add
and
mov
push
int
in
mov
jb
sbb
sbb
icebp
sti
ja
into
xor
test
pop
in
adc
pop
and
mov
incb
int
loopne
fs
es
std
sbb
or
jl
arpl
cmp
fistps
gs
and
sub
xchg
mov
rcll
push
inc
fsubrp
pop
lcall
lock
pop
cmp
scas
icebp
sub
mov
loope
loop
loopne
hlt
ret
fmuls
push
stc
int3
in
adc
mov
rclb
inc
mov
gs
mov
loopne
ret
ret
jge
leave
xor
imul
add
mov
cs
add
cltd
jns
and
xchg
fcmovnbe
cwtl
lret
hlt
mov
iret
mov
shlb
mov
sar
pop
mov
lret
pop
lea
adc
pushw
xor
pop
mov
notl
divl
push
lcall
fldcw
fwait
andb
das
rorl
pop
pop
cmp
xlat
imul
cmp
subl
push
outsl
out
jne
xor
arpl
sub
daa
pop
lahf
fstp
lods
mov
cs
jno
aad
cmpl
xor
ja
xchg
xchg
bts
arpl
inc
rcr
sub
or
and
clc
in
sub
mov
jae
push
in
push
push
fmull
push
outsb
clc
scas
ret
shll
pop
orl
lock
insl
mov
pop
sbb
and
out
into
and
and
mov
xchg
out
xlat
add
pop
pop
daa
mul
mov
lret
outsb
stos
push
sbb
data16
add
adc
jbe
push
inc
jmp
mulb
call
mov
xor
jbe
jl
mov
ljmp
jo
hlt
ret
mov
xor
fisttpll
lret
aas
ret
andl
and
xchg
push
outsb
mov
gs
jb
sub
daa
and
jbe
into
ficomps
iret
cmp
stos
std
mov
cmp
andb
push
orb
aam
adc
sbb
mov
data16
adc
cmpsb
clc
sbb
js
sub
xchg
scas
push
mov
enter
pop
jbe
jae
push
xchg
push
stc
icebp
push
scas
push
rclb
mul
mov
sbb
test
nop
pop
sub
lods
xor
push
cs
xchg
addb
rol
movsb
stc
pushf
push
dec
push
adc
cltd
pusha
inc
jo
dec
mov
push
cmp
arpl
sbb
dec
in
int3
push
cld
test
mov
and
cltd
aad
adc
imul
lahf
cmc
cltd
out
jbe
in
insl
adc
and
aaa
inc
or
xor
inc
in
add
lcall
lds
jmp
aas
aas
push
cmp
out
pop
mov
sub
pop
xor
aas
outsb
ss
scas
mov
call
andb
inc
pop
in
loopne
inc
mov
out
mov
xchg
push
mov
push
cmp
aas
xchg
xchg
inc
stos
dec
loope
mov
insb
xchg
push
fsubrp
in
mov
pushf
test
adc
or
xchg
lret
add
or
int
out
in
xor
xor
je
fimuls
mov
or
sub
cli
hlt
mov
xor
loop
fstpl
in
dec
pop
mov
pushf
pop
scas
cmpb
jg
inc
in
push
repz
insb
addr16
or
loopne
shrb
sub
and
jbe
fs
std
adc
jo
push
sbb
mov
dec
mov
jb
add
faddl
mov
or
addl
cmc
inc
mov
cltd
mov
xor
adc
sbb
inc
dec
xor
sahf
lock
decl
jp
adc
cltd
cltd
pop
adc
sbb
adc
sti
sarb
pop
xor
mov
daa
mov
or
mov
stos
xchg
out
aad
dec
in
xlat
loop
mov
mov
in
mov
adc
jle,pn
dec
xlat
icebp
fstps
sbb
int3
test
sbb
add
in
sub
add
xor
fists
inc
and
add
fldcw
es
cmp
mov
mov
dec
inc
cli
insl
shlb
adc
mov
dec
loope
cltd
push
mov
sbb
shlb
add
dec
add
clc
ds
fwait
dec
cmpb
xchg
leave
jb
fists
iret
repz
push
push
mov
mov
pop
fs
out
cmpl
inc
loop
and
je
mov
clc
pop
aaa
pop
cwtl
cmpsl
add
dec
xor
sbb
inc
add
xorl
sbb
xchg
mov
in
mov
test
das
sbb
daa
rolb
ja
xchg
push
repz
imul
ret
mov
jne
outsl
cltd
leave
imul
scas
xorb
leave
cmp
hlt
push
dec
adcl
or
in
rcll
clc
push
push
clc
inc
mov
sbb
mov
xor
dec
loopne
lret
lds
popf
xchg
jp
cld
movsb
clc
rolb
aaa
mov
sti
jns
imulb
inc
mov
adc
das
stos
insl
cld
fistpll
pop
push
test
outsl
aas
pop
xor
imul
jmp
aaa
shrb
inc
xor
and
push
mov
into
pop
fsubl
mov
in
ficoms
aad
sub
lret
inc
mov
call
pusha
mov
pop
js
jno
test
jo
mov
push
cmp
aam
jns
dec
cmp
popa
test
loopne
and
loope
mov
sbbl
rcll
push
cmpsb
cmp
fcomip
jle
lahf
add
test
push
daa
jno
mov
jo
dec
or
dec
stos
movsb
out
xchg
adc
fprem
cs
ret
mov
jl
pop
frstor
cmp
add
add
mov
sbb
insl
or
aad
orl
lret
arpl
xor
clc
mov
iret
jb
or
pop
hlt
mov
test
or
jb
xlat
loopne
sub
mov
sub
add
lret
aaa
jg
push
sub
cltd
and
sub
and
sbb
inc
inc
lock
dec
hlt
pusha
les
xchg
pop
lea
subl
cmc
in
sbb
xchg
jnp
mov
pop
jae
jns
ljmp
dec
xchg
je
xlat
xor
test
dec
lods
jp
stos
dec
sbbl
lods
pop
out
data16
lret
outsl
sub
stos
pop
hlt
daa
lds
or
cmp
scas
or
test
fisubrs
xlat
test
mov
out
std
aam
xor
lret
dec
push
or
cld
push
out
dec
nop
add
popa
lcall
fst
sbb
push
mov
push
imul
pushf
mov
or
cmp
fsubrp
imul
pop
cmovbe
shll
insb
inc
sbb
lods
sub
push
sub
mov
add
lods
rcrb
aam
popf
jge
addr16
pushf
sti
pop
or
xchg
ljmp
addr16
and
mov
rclb
or
imul
iret
dec
cltd
movsb
das
faddl
addr16
jo
jmp
pop
mov
jge
pop
mov
cmovs
push
push
cmpsl
enter
loop
or
ljmp
push
ficomps
jle
pop
pop
xchg
fsubrl
stos
scas
or
daa
sbb
cmpsl
pop
jne
xchg
sbb
cmc
loop
dec
push
cltd
les
or
loope
into
jbe
dec
sub
mov
inc
gs
fwait
pushf
pop
xor
adcl
mov
cld
sar
sub
dec
cmpsl
xchg
ja
pop
cmp
adc
movsb
jne
push
mov
ficoml
testl
in
jmp
pop
push
dec
loop
sub
imul
lods
xchg
add
push
fadds
out
pop
call
mov
data16
in
cld
add
or
lcall
xor
iret
mov
js
fimuls
ud1
popf
test
and
dec
push
xchg
cltd
pop
data16
mov
cmp
mov
in
jno
and
xor
ja
ss
lods
lods
inc
call
stos
out
test
mov
inc
sbb
push
popa
sub
adc
push
xchg
add
push
ss
ja
out
sbb
out
xchg
test
scas
aam
jns
xchg
out
stos
pop
mov
out
ja
stos
ljmp
scas
xor
xor
aam
xchg
add
out
imul
xor
in
xor
icebp
sahf
cld
sbb
cmp
cld
cmp
je
jae
mov
divb
orl
push
ds
push
in
mov
movsl
xor
stos
cs
mov
or
sbb
aas
loop
pop
out
cmp
mov
sub
fistpl
adc
sbb
xchg
cmpl
inc
mov
sub
outsb
mov
sbb
data16
xlat
mov
push
movsb
add
out
subl
mov
and
mov
pop
or
pop
inc
lea
insl
mov
xchg
xlat
jmp
mulb
sbb
aas
sub
fisttps
add
hlt
fsubl
pop
sub
cmpsb
push
cld
add
mov
mov
xchg
mov
adc
dec
out
movsb
notl
stos
flds
xchg
lret
dec
pop
mov
lods
cli
ret
bound
sbb
jge
jp
mov
cmpsb
out
push
mov
int
mov
cmp
shrb
lsl
sub
test
mov
in
aad
out
ja
fnstenv
in
in
adc
das
test
daa
jmp
jmp
cmp
adc
jecxz
xor
and
xor
stos
or
sbb
inc
adc
adc
xchg
loop
push
push
stos
xchg
pop
push
pop
pushf
pop
pop
sbb
xchg
in
sub
pushf
xchg
xchg
int
pop
fldl
pop
sbb
adc
pop
mov
jge
leave
cmp
dec
xor
mov
imul
mov
jecxz
add
xchg
sarl
fsubrl
repz
js
jge
scas
add
and
in
cmp
xchg
xor
aam
ja
outsl
aaa
or
pop
out
pop
ret
sar
fwait
sahf
lock
push
les
loop
jg
pop
pop
xchg
xor
sti
mov
loop,pn
mov
and
pop
fcoms
xlat
sbb
pop
shrl
ret
mov
dec
cmp
mull
cmpb
in
mov
pop
lret
das
cmc
xor
sub
mov
ret
test
call
adc
rorl
testl
mov
arpl
jno
lds
cmp
into
pop
push
dec
ja
inc
pop
push
and
jl
aad
scas
mov
cmp
xchg
mov
dec
outsl
cld
jg
mov
jns
cmp
dec
out
ja
popf
dec
inc
popa
aam
stc
imul
sbb
dec
movsl
mov
adc
jo
push
mov
push
sahf
lock
inc
int
pop
out
inc
pop
mov
pop
cmpsl
mov
fdiv
mov
data16
loope
dec
lods
sub
dec
out
into
sbb
jno
popa
loope
pop
cmp
das
cmp
add
mov
in
push
jle
outsl
in
and
pop
inc
orb
ret
inc
add
or
adc
jecxz
mov
xor
jb
das
adcl
aam
dec
xchg
mov
push
insb
imul
pushf
in
lock
mov
sahf
pusha
mov
ss
aam
push
mov
js
subb
fcompl
add
out
sub
sbb
insb
fnstsw
into
cmpsl
xor
dec
inc
inc
ds
mov
test
cwtl
or
pusha
mov
dec
lods
cs
cltd
cmp
popa
popa
cmp
je
icebp
sti
mov
xchg
and
lret
jg
lret
sub
cld
ja
or
mov
sbb
jnp
std
jmp
push
or
sub
bswap
pop
adc
inc
xchg
orl
jne
xor
testl
rcrb
mov
ss
popa
fimull
mov
imul
mov
xchg
jb
insl
insl
sar
pop
outsb
pop
inc
and
aas
pop
push
or
mov
mov
scas
inc
dec
cltd
arpl
sti
push
jbe
addl
and
pushf
pushf
pop
lret
xor
push
aam
or
jbe,pn
cmp
jne
cmp
lea
sub
loop
mov
andb
jno
mov
fistpl
jmp
rclb
jle
sbb
fdivl
push
mov
inc
mov
fisttpl
add
dec
sub
push
test
push
or
je
lahf
lea
xor
dec
pop
sub
into
mov
imul
inc
dec
hlt
mov
cmp
xchg
int3
mov
mov
ds
in
loopne
jns
sbb
xchg
adc
test
sbb
or
mov
xchg
in
or
lret
cli
cmp
xchg
adc
push
mov
sbb
lahf
sbb
mov
test
imul
ret
push
popa
jle
fists
into
cmpb
jp
call
adc
scas
lods
cmpsl
mov
add
bound
jecxz
rcl
fs
sbb
add
ret
mov
jl
and
sub
dec
push
sar
test
xchg
xor
jl
loope
push
in
mov
pusha
lahf
loop
sbb
mov
mov
xchg
cmp
xchg
daa
pop
mov
addr16
bnd
stos
mov
adc
cs
shlb
add
mov
outsb
mov
loope
std
sbb
jg
pusha
cmpsb
in
add
cmpsl
sbb
sub
insl
hlt
repnz
fildl
lods
mov
imul
and
ds
adc
pop
cmpsl
ror
push
add
lds
sub
jecxz
lock
fsubl
cltd
mov
repnz
jns
cmp
pop
je
lock
pop
inc
jb
jno
stc
dec
jo
push
add
sbb
pop
pop
cltd
loope
and
xor
sub
jb
inc
mov
fisttps
and
into
xorl
hlt
loop
adc
xchg
xor
stos
sub
pop
ljmp
lock
mov
cmp
bound
scas
cmpsb
or
push
enter
xchg
inc
jb
add
es
mov
jecxz
xchg
pusha
out
movsl
mov
test
and
jp
and
inc
stos
sub
pop
aad
movsb
popf
or
rorl
cmp
adc
stc
add
and
sti
mov
xchg
and
jecxz
jl
pop
insb
add
sbb
mov
nop
test
push
ja
aas
pextrw
xor
cwtl
jb
mov
and
push
lea
ss
loopne
jge
mov
or
inc
mov
or
mov
das
jmp
pusha
enter
iret
lods
inc
sub
dec
jg
and
sahf
fs
data16
inc
mull
fcomip
insl
std
out
sbb
aaa
dec
outsl
lahf
pop
pop
xchg
mov
out
fldenv
xchg
cmp
ret
cmp
in
cmpb
cwtl
dec
dec
icebp
dec
sbb
xor
xchg
lea
inc
shlb
push
outsl
lret
cmp
movsb
push
int3
and
imul
fldcw
call
cltd
xchg
ret
in
push
pop
jae
aas
jo
cmc
ret
sbb
clc
or
mov
sarl
mov
idivl
and
add
test
pop
fisubl
movsl
imul
xor
xor
mov
mov
push
jl
imul
dec
add
lds
xlat
jg
dec
push
fadds
sub
movsl
push
jmp
dec
pop
adc
jno
mov
push
dec
adc
stos
insb
fidivrs
rolb
inc
popf
xor
sbb
fbstp
xchg
pop
movsb
test
or
lret
cmc
outsb
add
mov
movsb
sbb
xchg
loopne
fdivr
mov
int3
xor
insl
push
xor
lds
pop
in
cmp
push
lret
mov
cwtl
or
add
or
fisttpll
pop
fistpll
mov
js
dec
test
xor
js
pop
pop
les
and
dec
adc
xchg
push
hlt
imul
loopne
clc
dec
stos
cmp
cmp
int
pop
push
push
call
cmpsl
mov
mov
inc
imul
fcoms
insl
loop
aam
gs
dec
arpl
loope
xchg
mov
shll
test
cmp
adc
or
jo
loopne
add
aaa
mov
ret
mov
xor
lahf
add
dec
psubusw
cmpsl
shll
cmp
jp
ljmp
imul
pop
add
cmp
jle
mov
pop
dec
fcoms
xchg
repnz
test
test
inc
stc
xor
mov
inc
xchg
pushl
mov
jbe
insl
insb
mov
lret
sbb
call
hlt
ret
adc
jle
int
nop
idiv
add
adc
jne
cwtl
stc
jae
stos
loope
cmpsl
adc
or
gs
rcll
out
loop
push
sub
push
push
cwtl
adc
and
sbb
xchg
sbb
fldcw
fwait
add
inc
fisttpll
sub
loop
aaa
je
push
lods
dec
out
dec
lahf
lcall
push
popf
inc
pop
add
out
cwtl
sub
push
fbstp
test
out
leave
add
arpl
cli
cmp
pop
cmp
aas
mov
adc
fs
jp
fcompl
add
cmp
jno
je
repz
lods
jle
mov
out
add
pop
and
lods
mov
cmp
jp
jmp
push
fistps
inc
xor
xchg
fdivrl
jg
je
push
ret
mov
jae
lret
mov
mov
inc
mov
fwait
mov
mov
fldt
aam
pusha
ds
adc
pushf
testb
in
xor
pusha
mov
in
out
dec
aam
in
xor
push
push
ljmp
jmp
mov
fdivrl
xlat
push
sub
jae
dec
cwtl
push
cmp
fisubs
jl
add
dec
imul
mov
test
jp
je
xor
sbb
sbb
mov
pop
cltd
xchg
and
mov
iret
pop
pop
lret
jbe
mov
in
dec
test
push
mov
sub
in
and
int
pop
jbe
leave
pop
pop
rcr
mov
and
mov
push
lods
inc
ret
jge
aad
add
push
ret
pop
xchg
sub
rcl
popf
dec
xchg
in
xor
rcl
cmpsb
cli
sbb
adc
cmc
rcrl
dec
lods
xchg
sbb
inc
cmpsb
cmpsl
popf
outsl
clc
jg,pt
inc
add
cmp
je
es
inc
sbb
popa
lcall
roll
ret
push
sub
mov
nop
adc
in
push
bound
shlb
out
sub
mov
cli
js
scas
sti
or
push
sbbl
jbe
jo
add
inc
dec
lcall
mov
xchg
xchg
cmp
leave
jo
inc
nop
adc
sub
push
pop
orb
mov
insb
xchg
jae
faddl
pop
xchg
repnz
enter
aad
xchg
pop
cmp
inc
dec
cmpsl
or
pop
lcall
cmp
dec
and
arpl
insl
mov
and
insl
ret
xor
scas
pop
stos
seta
xor
nop
enter
lret
mov
mov
dec
xchg
dec
xor
jecxz
lret
xchg
cmp
mov
enter
mov
aas
fnstcw
js
data16
dec
sbb
iret
fldl
and
and
and
add
sbb
mov
adc
add
lds
fsubs
lahf
mov
xchg
jbe
mov
pop
xchg
and
ret
push
push
fistl
xchg
dec
mov
add
and
popf
mov
mov
es
shll
testl
ret
cmp
jmp
leave
fidivs
and
aad
psllq
loope
jnp
mov
push
and
cmp
jo
inc
out
xor
mov
bsf
rorb
jnp
xchg
jg
cs
iret
js
push
sar
rclb
adc
js
outsb
add
push
cmp
sub
xorl
insb
imul
ss
sub
jle
jmp
loope
inc
orb
jo
ljmp
loopne
cmp
test
cmp
dec
into
enter
mov
in
mov
mov
xchg
inc
xor
mov
loop
xchg
push
hlt
adc
mov
lock
outsb
xor
lahf
push
mov
mull
clc
in
add
add
mov
leave
or
es
cmp
jno
cmp
subb
daa
loop
jns
and
or
stos
jg
lret
popf
je
xlat
mov
adc
insb
cmpl
les
mov
mov
jl
jp
lahf
in
and
cmp
in
adc
pushf
rcrl
ret
std
aam
leave
lea
sbb
andb
out
dec
out
push
inc
or
out
popa
clc
pop
mov
imul
aam
adc
or
roll
pop
or
rcll
sbb
lods
arpl
testb
dec
cmc
icebp
fbld
lcall
fistl
xchg
xchg
stos
je
aas
jmp
mov
or
out
dec
pop
ljmp
std
mov
daa
sub
pushf
fdivrl
pusha
sub
cwtl
test
gs
mov
mov
push
out
jb
popf
adc
adc
repz
mov
into
in
xchg
idivb
jecxz
cwtl
sub
dec
push
lods
push
ret
adc
nop
fnsave
sub
sbb
lods
stc
xor
pop
mov
xchg
divb
int
test
ss
aaa
scas
testl
sub
stos
jne
mov
mov
cmpl
imul
xchg
adc
test
aam
sbb
daa
jmp
push
ficomps
sar
fstpt
adc
dec
or
cld
lods
fs
sbb
pop
test
or
mov
bound
mov
xor
sub
pop
sbb
pop
out
inc
mov
out
dec
dec
aas
push
sub
test
andl
push
fstpt
sbbl
cmp
inc
pop
repz
push
mov
lods
sub
xchg
xor
lods
sub
xor
adcl
es
sti
cltd
and
fimuls
push
int3
ffree
insl
inc
xor
jo
cmp
cltd
and
fistl
sbb
into
jecxz
mov
cmpsb
or
push
incl
dec
inc
sbb
lods
xchg
cmpsl
repnz
rorl
clc
loopne
dec
xor
pusha
sbb
mov
jl
lret
jbe
out
sti
jbe
cmp
dec
mov
jmp
push
and
adc
and
popa
cwtl
test
hlt
cmp
mov
adc
xchg
or
jg
adc
push
shlb
daa
fldpi
dec
call
adc
xor
cmp
in
ret
mov
dec
popa
xchg
aam
popf
cmpsb
inc
push
mov
mov
sbb
mov
fsts
add
push
aam
or
rorb
jl
shl
arpl
mov
ret
mov
cmp
lret
lds
jne
clc
mov
int
pop
mov
xor
and
rolb
adc
sar
mov
popa
test
pushl
jge
loopne
xor
and
divb
clc
add
mov
imul
pop
addb
outsl
dec
mov
or
out
mov
das
xor
imul
or
mov
out
dec
mov
repnz
repz
ret
dec
jle
dec
mov
mov
sub
out
das
inc
cvtps2pd
ds
pop
in
mov
dec
lcall
jp
lods
sbb
jmp
xchg
or
mov
int
cmpsl
xchg
sub
push
stos
repnz
ror
mov
test
push
push
daa
xor
hlt
addr16
in
popa
xchg
out
sbb
mov
je
popl
leave
scas
fs
inc
xlat
pop
clc
faddl
pop
cmp
and
inc
pusha
subl
rorb
lahf
xchg
cwtl
daa
and
sar
dec
shlb
pop
lods
push
fmuls
jbe
pushf
arpl
xchg
mov
push
mov
adc
ficomps
insb
int3
jns
mov
mov
xchg
xor
mov
cld
and
xor
jbe
cmpsb
sub
and
clc
push
jo
stos
mov
pop
cmp
jg
out
cmp
push
mov
iret
push
and
in
mov
jb
sbb
into
xchg
mov
or
rcrb
cwtl
cmp
ja
xchg
jbe
std
test
aam
data16
lea
mov
or
push
jecxz
sub
js
add
scas
test
sbb
repnz
shrl
pop
rol
sub
int
cmp
shl
scas
in
add
cmpsb
adc
outsl
inc
dec
stos
stos
push
out
xlat
or
fs
shll
pop
repnz
lret
loop
scas
shll
inc
mov
push
cli
out
pop
and
mov
in
mov
jns
push
and
xchg
dec
lahf
nop
sub
and
push
jge
pop
xchg
das
mov
ja
cmpsl
pop
cmpsb
outsb
out
arpl
and
mov
bound
ss
daa
and
addr16
xchg
in
sbb
sbb
sub
mov
jo
push
mov
mov
cmpsl
mov
int3
push
xchg
xor
xchg
aad
jns
bound
es
jecxz
pop
addr16
cmpsl
dec
shlb
cmpsb
iret
ljmp
ss
cwtl
mov
inc
xor
pop
and
mov
fidivl
sub
mov
jmp
cmp
dec
insb
ljmp
fcmovu
gs
fs
lcall
jl
xchg
mov
xor
addr16
addr16
loope
jne
sbb
xchg
sub
inc
push
cltd
insb
mov
setne
or
mov
push
inc
cmp
ljmp
push
push
inc
pop
pop
mov
test
insl
in
insl
or
cli
jle
push
inc
or
push
test
mov
ja
mov
sub
mulb
xlat
fucomi
rcll
inc
push
add
cmp
mov
mov
cwtl
sub
idivl
data16
inc
mov
mov
adc
pop
or
mov
inc
test
jle
pushf
cmp
loop
out
je
jmp
mov
xchg
push
adc
mov
int3
mov
sti
cmp
xor
insb
xchg
mov
ljmp
mov
sbb
or
outsb
fcmovb
xor
mov
addr16
push
jmp
pop
mov
sub
clc
mov
jo
scas
out
push
xlat
add
and
divb
into
jns
lock
jecxz
or
flds
aaa
add
lahf
and
or
adc
sbb
xlat
dec
xchg
inc
pop
sbb
cmp
xor
std
stos
fidivl
xorb
les
mov
je
std
pop
movsl
mov
xchg
cmp
xchg
imul
fcoms
xchg
jecxz
mov
jge
sbb
or
inc
cmpsb
push
or
aaa
push
ret
rcr
aaa
inc
popf
lock
cmpsl
cli
clc
test
xchg
jae
xchg
push
in
hlt
hlt
cltd
clc
xchg
mov
dec
mov
fwait
stos
push
imul
enter
mov
clc
mov
pop
ja
test
push
mov
add
shrl
inc
jo
jo
push
sub
mov
scas
adc
pushf
mov
sbb
clc
idivb
outsb
mov
test
inc
insb
jo
lods
mov
sahf
xchg
cli
in
clc
fs
xor
movsl
movsb
jp
adc
ret
jmp
and
push
sub
es
dec
xor
adc
outsb
lret
out
pop
fmul
insb
pop
popf
add
mov
xor
mov
jae
int3
paddq
push
mov
inc
rclb
or
cmc
xor
cwtl
sahf
decb
rolb
insl
push
std
dec
cwtl
sub
ja
dec
push
push
mov
dec
add
mov
mov
push
loope
adc
xchg
inc
sbb
fwait
test
sbb
sub
pop
mov
inc
scas
dec
sti
mov
mov
sti
out
in
fidivrs
cli
pushf
in
dec
xor
add
adc
cwtl
push
shl
gs
pop
addb
stos
jbe
out
lahf
xchg
lcall
mov
mov
ds
in
stc
cs
icebp
inc
nop
add
mov
jne
subb
repnz
sub
lret
jecxz
or
pushf
outsl
mov
and
out
inc
imul
lds
inc
pop
lcall
bnd
pusha
jns
jno
fisubl
andl
jecxz
aaa
mov
stos
test
mov
cmc
sbb
cmp
mov
lcall
sub
les
jne
xchg
xor
shl
xchg
fwait
mov
std
js
je
adc
mov
jge
int
pop
adc
or
test
fistps
into
dec
sbb
imul
lahf
ss
mov
aam
in
ds
mov
adc
scas
jb
lahf
jnp
out
inc
sbb
call
stc
lock
sarl
aaa
xchg
clc
sbb
push
adc
stos
ficoml
xor
pop
mov
decl
jo
mov
subb
xchg
or
test
sub
cmp
mov
inc
js
aas
int
ljmp
nop
insb
sbb
jle
cld
or
rcr
cmpsb
fdivrl
add
in
ret
mov
pushf
call
ljmp
out
add
cli
xor
cmp
or
fisubrs
stos
cld
cmpsl
xor
jmp
fimull
lahf
aaa
add
fistpll
cmp
xchg
into
sti
lods
mov
loopne
and
jmp
add
lret
sub
popa
mov
push
lods
push
clc
or
js
out
and
loopne
outsl
lods
add
lcall
repz
aas
dec
jge
in
cltd
rol
in
and
cmpsb
push
add
out
inc
push
test
negb
mov
xchg
fcomp
push
push
mov
mov
cmp
or
mov
cwtl
add
mov
iret
jno
mov
xchg
xor
pop
push
leave
stos
jns
je
shll
sbb
adc
ret
out
lods
cwtl
pop
cmp
jnp
add
mov
xchg
adc
test
movsb
jbe
mov
xorl
fldl
rol
inc
xor
ja
mov
int3
dec
mov
enter
inc
out
mov
adc
pop
xchg
call
lahf
inc
dec
pop
test
pop
pop
mov
pop
cmp
jle
mov
sbb
add
push
pop
scas
fisubrs
adc
mov
mov
and
and
leave
lret
xchg
ret
add
sar
adc
es
sub
cltd
xchg
gs
leave
push
add
jns
push
fistpl
pushf
dec
sub
hlt
push
pop
xchg
xor
cli
push
push
pop
push
lds
not
imul
dec
daa
mul
lds
pop
aaa
jmp
jp
clc
xchg
hlt
or
into
lods
sbb
jno
out
shl
cmp
in
fincstp
fidivrs
jmp
push
and
mov
movsl
iret
mov
lea
in
data16
ret
adc
push
cld
ja
jne
inc
mov
jmp
inc
out
hlt
mov
and
add
stos
addr16
inc
dec
push
test
stc
movl
adc
ljmp
ret
push
push
push
and
in
insb
loope
rcrb
icebp
pop
movsl
out
out
jo
popa
mov
add
sub
fstl
pop
jae
daa
in
fcompl
sub
or
push
popf
add
and
jbe
scas
pop
cld
inc
xchg
push
in
bound
pop
js
adc
adc
mov
mov
push
mov
outsb
icebp
dec
inc
jmp
lahf
and
cmc
out
lea
jno
dec
and
push
aaa
dec
insl
push
and
daa
arpl
test
pop
push
mov
lods
push
call
pop
sbb
dec
pop
and
pop
xor
xor
add
push
mov
jnp
cmp
enter
push
fcomip
scas
sbb
movsl
mov
jb
pop
cs
jne
xor
subb
pop
adc
mov
push
sub
int3
push
sbb
test
mov
xor
call
xchg
jb
stos
fsubrl
scas
push
mov
xchg
lods
xor
cs
push
lods
mov
and
negb
mov
ljmp
inc
fimuls
cmpsb
pop
jnp
sbb
pop
xchg
xor
xor
xchg
pop
cwtl
cmp
cmp
or
sub
fs
sub
ljmp
inc
testb
imul
xlat
mov
xchg
lock
fs
and
sub
ret
adcb
test
stc
sub
sahf
mov
das
orl
fucomp
movsb
cmp
in
cmp
mov
mov
cli
and
mov
cmpsb
cmpl
divb
es
outsl
jg
add
paddw
xor
dec
rcr
shrb
and
rorb
mov
pop
mov
dec
and
adc
movsb
clc
mov
imul
pop
int3
or
add
xlat
fldt
pop
xor
pop
push
cltd
stos
lds
xchg
xor
cmp
jns
xchg
lds
or
loop
mov
mov
xchg
pop
les
stos
jns
sbb
sbb
shr
cmp
mov
pop
fisubs
mov
imul
sub
sbb
pop
mov
adcl
jne
push
mov
pop
rcrb
mov
inc
scas
xchg
and
insl
aad
sbb
inc
inc
mov
mov
mov
orl
or
jp
adc
mov
xchg
test
sbb
push
inc
addb
mov
in
daa
pop
cmp
les
mov
jmp
mov
jnp
in
imul
mov
nop
lock
cmp
jle
iret
pop
mov
inc
pop
dec
jno
pop
jg
out
mov
subl
or
popf
mov
adc
pushf
sbbb
push
lods
aaa
out
xlat
jge
lahf
push
lods
andb
push
cmpsb
stc
cmpsl
jle
iret
fisttpll
movsl
mov
adc
out
cs
popa
jns
inc
lcall
sub
dec
in
cmc
mov
fwait
adc
xor
pop
mov
movsb
shl
sub
mov
arpl
loope
and
dec
fsubr
xor
movsb
xor
mov
repz
dec
sbbb
jmp
stos
pushw
push
rorl
pusha
dec
xchg
adc
daa
cmp
mov
xchg
inc
mov
in
or
lret
sub
push
inc
inc
popf
mov
ret
test
es
fistl
sti
pusha
clc
mov
cmp
xchg
repnz
or
mov
inc
jbe
dec
xor
mull
xor
test
js
lods
sub
in
mov
sub
stos
mov
testb
sarb
xchg
imul
sbb
adcl
mov
lods
mov
jnp
data16
adc
pop
pop
cmp
push
es
jbe
imul
iret
enter
inc
jecxz
test
add
xor
sahf
aam
and
jmp
adc
rcrb
imul
and
bound
jne
xchg
inc
les
lret
inc
pop
jnp
ds
std
xchg
bound
into
fmull
dec
adc
add
mov
psrlw
mov
outsl
sarb
jb
push
sbb
mov
or
xor
xlat
je
lret
stc
stc
push
xor
sbb
scas
test
push
in
arpl
mov
mov
mov
xor
fcompl
scas
into
cmpsl
cld
in
push
aad
sbb
enter
add
mov
pop
cmp
mov
fs
addr16
ljmp
icebp
movsb
jb
xchg
push
lcall
adc
mov
fists
in
cmpsl
mov
dec
dec
pusha
popa
les
pop
roll
jbe
cmp
pop
les
push
lret
hlt
loope
cmp
xor
lea
ret
inc
xchg
lods
lds
insl
scas
cld
ss
loope
jg
lret
movsb
sarb
xchg
and
ja
int
adc
mov
repnz
mov
ja
pusha
icebp
jns
push
dec
stc
mov
in
aas
lods
lods
mov
mov
push
dec
or
shrb
aaa
and
add
cmp
cmp
push
dec
and
loop
out
arpl
pop
adc
inc
outsb
stos
xchg
arpl
sub
movsl
push
pop
test
addr16
xchg
out
sub
mov
cmp
xchg
add
lea
xchg
not
mov
fwait
dec
push
sarb
jne
mov
xchg
lods
lcall
jo
aad
pusha
sbb
cld
adc
int3
or
std
push
inc
decb
mov
loop
mov
pop
loope
xor
stos
xchg
pop
rcrb
stc
xor
imul
dec
es
jno
enter
cli
call
nop
xchg
mov
xor
add
xchg
add
inc
cmc
jns
jo
and
mov
in
test
xor
orl
add
fnstsw
and
iret
gs
cmp
jge
test
cmpsb
and
pop
lods
stos
rorb
mov
mov
rcr
jno
ret
lds
cmpl
inc
das
or
fcomps
pop
push
xchg
inc
addl
cltd
adc
sub
mov
dec
and
mov
popf
jmp
in
sub
call
sar
fcompl
aaa
andps
mov
mov
adc
jno
xchg
sti
cmp
mov
jnp
or
test
adc
push
aas
gs
xchg
xor
push
add
cmp
in
cmp
dec
insb
jmp
js
sbb
das
icebp
in
jp
vandnps
xchg
jb
ret
and
cltd
addb
fisubrl
jp
or
int3
lods
mov
inc
push
mov
mov
jae
mov
xor
mov
adc
das
cmp
and
mov
aad
scas
ds
push
mov
mov
fldcw
xor
in
mov
pop
inc
sbb
fiaddl
scas
push
cmpsb
shll
scas
mov
mov
pop
pop
adc
cmp
rorb
push
cmp
arpl
push
scas
cmpsl
mov
xor
jmp
dec
andb
enter
fsubs
fdivp
lahf
dec
push
pop
inc
incl
cltd
cmp
mov
pop
xorl
in
xor
add
sahf
push
mov
mov
xor
je
and
jg
jnp
stos
insb
mov
cmp
into
mov
pop
in
lds
mov
test
add
ss
lock
sub
mov
test
aas
dec
nop
adc
stc
cmovbe
push
jae
test
cmpsb
es
pop
mov
imul
sti
mov
jno
cli
or
xor
xchg
jnp
sub
push
vpaddq
xchg
dec
push
ret
sahf
xchg
dec
lret
enter
sub
adc
mov
pop
or
mov
and
xor
add
cmp
dec
clc
mov
jbe
jno
add
stos
sub
out
roll
sbb
adc
sbb
fsubrs
push
mov
cmp
push
mov
stc
sub
lahf
nop
dec
xor
imull
inc
fidivrs
cmp
sub
push
mov
pop
loope
lods
pop
js
lcall
arpl
or
sbb
and
add
push
mov
fiaddl
mov
sbb
xor
lods
or
lods
pop
or
inc
or
repz
sub
lods
xor
dec
mov
mov
loop
jmp
das
xorl
fistl
xchg
mov
mov
sbb
in
bt
dec
xchg
call
lods
push
sub
lsl
cltd
sub
cmp
mov
push
scas
sbb
mov
int3
push
lds
or
and
daa
mov
xchg
mov
jb
add
ret
xor
and
mov
mov
loope
mov
xlat
es
fmull
fisttpl
mov
pop
cmp
xor
push
dec
ds
add
test
mov
fs
jns
xor
in
inc
nop
sub
add
int
cld
xchg
iret
push
or
sbbl
add
mov
jae
mov
aaa
hlt
and
pop
and
dec
pop
xchg
pop
or
push
adc
mov
add
inc
adc
pop
mov
cwtl
loop
adc
js
sbb
out
sbb
mov
pop
jns
add
loop
jo
jne
jecxz
xchg
imul
cvtps2pi
xchg
push
jmp
sbb
or
mov
stos
outsl
mov
and
mov
mov
repnz
outsb
cld
clc
in
imul
xor
scas
fistps
mov
push
jp
and
out
or
mov
xor
daa
mov
pushf
push
dec
sti
movsb
and
inc
add
enter
push
fsubs
xchg
shlb
jge
in
sbbb
add
and
fimuls
add
push
inc
push
lods
adc
jns
add
jmp
or
inc
lcall
daa
push
dec
fldenv
pop
xchg
mov
pop
dec
cli
insb
fisttps
std
jnp
jne
sub
stc
dec
call
sbb
dec
mov
xchg
imul
push
xchg
xor
mov
scas
popf
sub
adc
sbb
adc
jnp
insb
mov
mov
int3
notb
adc
test
in
push
push
mov
xchg
add
mov
sti
jae
mov
int3
int3
test
les
fmuls
stos
mov
mulb
lcall
mov
mov
nop
sub
int
and
gs
jle
inc
data16
push
mov
or
icebp
arpl
cmp
fmulp
pop
inc
mov
fcompl
jmp
xchg
and
push
pop
arpl
push
js
lock
add
mov
or
imul
xor
notb
fsts
xchg
mov
pminsw
sbb
xchg
ss
out
push
jmp
rcll
xchg
ret
stos
dec
lret
push
imul
sub
cld
dec
mov
out
hlt
out
ret
push
pop
xchg
jmp
or
or
cmpsl
mov
cmp
mov
out
and
jbe
xlat
orb
out
xor
daa
cmp
lods
incl
nop
decl
dec
pop
mov
into
insb
shl
or
arpl
mov
xchg
push
mov
push
push
enter
add
push
shrb
and
mul
inc
jns
pushf
jg
add
std
dec
adc
or
pop
shrl
mov
mov
out
or
mov
mov
arpl
adc
sbb
adc
xchg
arpl
stc
into
iret
lods
scas
and
sbb
sbb
mov
in
imul
cwtl
addr16
scas
test
xchg
adc
push
sbb
mov
movlpd
clc
push
mov
xchg
and
mov
scas
rcrl
lcall
push
pusha
popa
lock
test
adc
fisubrl
or
inc
hlt
insl
cwtl
inc
out
cmp
popf
cmpsb
pusha
sbb
push
pop
ljmp
mov
into
push
cmp
faddl
or
cmp
cmp
repz
pop
jmp
mov
and
push
jmp
adc
out
push
dec
add
rcrb
pop
cltd
xchg
mov
xlat
or
pushf
push
and
imul
jg
out
xor
daa
in
rolb
faddp
inc
sub
push
jns
pop
jb
adc
pop
sbb
movsb
popa
daa
ds
sbb
lods
sub
repz
imulb
mov
jb
idivb
adc
pop
push
pandn
shlb
xchg
jmp
test
jae
into
bound
sahf
dec
rol
pinsrw
push
mov
or
lahf
sti
daa
xchg
adc
pushf
scas
jp
xor
dec
pop
pop
icebp
inc
mov
push
adc
fldcw
push
movsb
push
in
xchg
loop
out
cmpsl
mov
icebp
inc
push
in
sub
jl
dec
mov
mov
cmp
sti
lcall
cmp
mov
int3
jne
push
cli
outsb
addr16
movsl
xchg
cmp
stos
sti
or
pop
test
jns
inc
arpl
jno
imul
jbe
sbb
jno
jge
sub
jae
and
push
fisttpll
mov
pop
call
mov
jle
test
mov
rolb
jo
mov
jle
clc
rcrb
cmp
cmp
fcmovu
pop
std
mov
lea
push
outsb
jmp
inc
jmp
in
int3
xchg
sbb
std
mov
bound
mov
test
sbb
inc
mulb
in
in
orb
mov
outsl
or
sbb
gs
or
test
jmp
enter
inc
cmpsl
outsl
jo
xchg
xor
popa
rolb
data16
gs
cmc
ja
push
in
pop
out
mov
jbe
or
sbb
mov
in
out
add
pushf
push
push
sbb
lret
fs
or
xchg
rcll
mov
xor
sub
sub
aad
or
and
es
pop
pop
icebp
filds
inc
loopne
pop
inc
mov
imul
pop
jg
enter
fnstsw
adc
test
mov
pop
inc
sbb
sbb
mov
jbe
cmpsl
jo
fstpl
lcall
int
rcrl
sbb
pop
add
ja
mov
cs
out
dec
pop
test
lahf
push
popf
sbb
or
call
test
sbb
adcl
or
mov
mov
loop
test
cmp
adc
push
andl
mov
adc
mov
inc
mov
in
shll
out
insl
mov
aad
xor
fdivrs
inc
gs
call
out
jns
in
mov
data16
test
pop
jg
xchg
mov
test
imul
inc
mov
push
inc
cmp
int3
test
test
sub
push
xchg
fcomps
push
shrl
and
fsubl
xor
pushf
xor
insl
adc
jl
sbb
jno
insl
cmp
mov
sub
cwtl
out
rcrl
dec
popa
cmp
fldl
xchg
mov
jne
in
add
and
mov
xchg
bound
jb
insb
je
cwtl
pushf
out
xchg
imul
xor
aas
dec
push
je
lret
pop
fildl
lea
cmpsl
inc
sub
and
cs
jo
popa
jp
push
dec
jecxz
insb
repnz
dec
adcl
fdivl
jecxz
pop
lds
fs
sarl
dec
cmp
cmp
mov
imul
mov
dec
scas
pop
mov
sbb
fidivrs
or
sbb
into
and
inc
dec
add
push
cmp
mov
lods
sbb
lock
popf
test
clc
subb
mov
ss
jge
mov
push
sbb
mov
inc
cmpsl
out
jo
mov
cmp
andb
fsubr
xchg
add
dec
rclb
cmp
xchg
mov
mov
jb
jl
xchg
mov
cmp
addr16
les
sysexit
aaa
arpl
and
pop
push
jo
mov
mov
jnp
adc
pop
pop
sub
pushf
cmc
push
inc
jne
jbe
xlat
adc
loope
stos
pusha
icebp
or
xchg
pop
or
xor
loope
xchg
dec
mov
mov
dec
arpl
dec
loope
cmpsl
lock
and
add
push
jecxz
pop
jb
dec
sbb
mov
test
sub
jo
sbb
push
adc
test
dec
cmp
scas
lds
mov
pop
sbb
lcall
negb
mov
cmpl
shll
in
jl
inc
adc
stos
jge
xchg
push
and
out
mov
lock
int
iret
insl
dec
sti
les
lea
daa
push
sub
stos
fstpl
cmp
add
mov
out
xchg
xlat
push
jmp
push
repnz
adc
mov
dec
add
in
mov
fsts
jnp
in
out
ljmp
out
mov
jge
sbb
dec
das
mov
pop
add
jg
xor
xlat
inc
mov
xlat
std
sub
push
jnp
mov
push
pop
aas
jb
insl
push
mov
and
dec
arpl
sarb
push
lods
fcmovnbe
das
lods
insb
das
cld
sbb
leave
es
aam
jnp
xchg
je
out
sti
push
adc
jbe
int
call
ja
jno
outsb
loopne,pt
jl
in
jbe
sbb
inc
xchg
std
xchg
lds
jo
ret
cs
pop
pop
add
sub
jmp
bound
pop
sub
jno
icebp
sahf
push
cli
insb
or
and
xchg
adc
fisttps
mov
lahf
add
sub
je
shll
stos
fsub
dec
popf
pop
lret
push
ss
mov
ret
fisttpl
aad
mov
push
stos
push
mov
mov
pop
test
shrl
xchg
mov
or
mov
roll
cmp
repz
scas
jo,pt
call
jne
std
push
faddp
sbb
sbb
in
inc
insb
pusha
cmp
mov
push
test
pop
dec
ds
jmp
xchg
arpl
jns
ss
sti
stos
dec
dec
insb
jl
sahf
or
pop
xchg
sbb
pushf
subl
and
jo
out
out
test
repz
or
mov
xor
popf
xchg
add
arpl
repnz
les
mov
vhaddpd
and
in
dec
pop
iret
arpl
sub
outsl
sub
sbb
lcall
pushf
adcl
paddsb
xor
jns
into
xor
cmc
mov
jl
gs
aaa
ljmp
lea
add
or
aas
or
imul
add
mov
push
pop
cmp
jge
test
lock
pop
arpl
outsl
add
call
mov
ljmp
dec
outsb
insl
push
aas
mov
stc
xchg
and
sub
add
fs
jge
rcrl
inc
insb
xor
mov
stos
sbb
cld
dec
push
das
int3
jbe
xchg
cli
testl
sahf
ds
pusha
dec
ljmp
addps
cli
dec
push
and
push
fisubl
lret
fwait
xchg
fsubl
and
add
scas
and
mov
add
roll
push
jnp
and
mov
pop
lea
adc
cmc
jge
push
fs
mov
or
xor
sbb
outsb
inc
dec
inc
dec
fstps
push
push
sub
repz
lret
sti
cli
lret
pop
scas
outsl
mov
adc
nop
cmp
fwait
add
sar
mov
jmp
dec
xchg
adc
pop
mov
lods
gs
mov
and
cmc
test
xor
pop
js
pop
arpl
dec
sbb
push
push
fsubl
cmp
sub
inc
out
jo
inc
aas
outsb
mov
dec
popf
sub
xchg
jns
enter
int3
and
test
pop
adc
subl
dec
std
xlat
xlat
jnp
nop
mov
cmpl
cmp
jmp
dec
fmul
sub
arpl
or
and
jp
mov
sub
pop
mov
mov
pop
push
jne
mov
mov
loopne
sbb
cmp
call
jecxz
mov
adc
inc
mov
push
jae
mov
pop
or
xor
inc
out
nop
pop
imul
insl
scas
mov
jnp
and
sbb
cmp
mov
rorb
iret
push
orl
sbb
aam
shlb
out
int
pop
gs
and
in
xchg
fcmovnu
arpl
cmp
lods
mov
push
loopne
lret
sbbl
push
ret
xchg
pop
mov
call
test
in
mov
out
cmp
flds
cltd
pop
stc
push
mov
xchg
into
insb
lds
jbe
repz
scas
jae
mov
xor
cmpsl
ret
cmpsb
and
fstpt
stc
sbb
adc
stos
push
loope
push
js
pop
shld
rol
imul
sbb
enter
add
xchg
mov
xor
mov
enter
xchg
add
stc
cs
sbb
jb
add
lods
roll
push
push
inc
hlt
adc
mov
mov
lods
shll
cmp
pop
mov
mov
clc
cli
clc
out
sub
inc
xchg
jmp
out
dec
lods
ficoml
rorl
cld
scas
fcomip
decb
inc
dec
psraw
cmpsb
mov
jo
sti
lds
push
inc
xchg
mov
js
push
sbb
popa
pop
imul
aad
mov
shr
mov
sbb
jmp
adc
or
pop
jo
in
add
push
jns
pop
cltd
adc
adc
ss
lods
lods
push
sub
rorl
repz
call
and
mov
dec
ljmp
jl
adc
and
or
fs
rcl
aam
jo
mov
jns
sahf
es
mov
sub
xchg
std
popa
jb
test
jnp
insl
popa
test
inc
adc
scas
or
sbb
mov
mov
pop
lock
test
insl
pop
cmpsb
outsl
pusha
sar
addr16
push
cld
adc
jecxz
jae
popf
mov
cmp
out
addr16
mov
out
cmpsb
xchg
bound
aaa
jp
jae
pop
xor
adcb
imul
adc
fabs
out
rorl
fstl
sbb
push
into
fwait
cld
adc
adc
rcr
in
out
repnz
xor
lcall
out
stc
or
lock
les
ret
cmp
out
dec
sbb
dec
js
dec
xorl
jnp
sub
gs
xchg
mov
cld
repz
sbb
insl
andl
dec
adc
jb
sbb
je
leave
leave
adcl
in
mov
mov
adc
std
popl
push
out
lds
jns
sbb
out
or
nop
jbe
xchg
inc
test
cmp
lds
out
bound
sahf
out
mov
enter
js
aaa
push
sahf
jecxz
xor
ds
stos
roll
xor
mov
subl
mov
add
sub
faddl
sub
sbb
jp
adc
push
mov
ljmp
sub
or
pop
sub
in
add
mov
test
iret
shll
sub
int3
sub
call
fisttpll
dec
int3
jno
sarb
xchg
cmp
or
mov
scas
ret
iret
js
xchg
pop
jg
in
dec
jmp
mov
out
jne
add
movsb
stc
push
cmp
cwtl
adc
loop
into
mov
out
cli
cmpsl
mov
mulb
add
mov
loope
ret
dec
and
pop
mov
lea
mov
jbe
mov
xchg
mov
aas
pop
pushf
xchg
push
adc
sarl
ss
push
push
and
hlt
cld
jne
decl
pop
je
jae
loop
adc
push
push
in
push
popa
adc
ds
sub
out
test
sarl
xchg
jae
mov
test
popf
data16
lea
ss
jl
cwtl
aaa
push
mov
shl
dec
popf
rolb
or
xor
out
push
and
adc
movl
or
adc
dec
sub
jb
mov
or
das
push
sahf
xor
icebp
push
lret
dec
mov
jle
lret
nop
mov
fsubr
mov
fs
lahf
sbb
pusha
jp
mov
ss
mov
iret
rolb
adc
aam
out
xchg
out
mov
lret
xor
push
push
stos
call
adc
lret
mov
das
jnp
pop
lret
sbb
idivb
addl
dec
sbb
xchg
arpl
inc
hlt
cs
cmc
lahf
shrb
in
jo
out
out
mov
jle
xchg
ss
sub
jg
outsl
mov
icebp
mov
xchg
sub
fbld
pushf
cmp
push
jae
enter
out
add
jae
pop
lea
pop
cs
add
xorl
cmpb
fstpt
into
divb
out
mov
mov
imul
mov
mov
xchg
or
mov
cmp
ret
jg
testl
loop
cmp
aas
fisubrs
in
mov
or
jp
add
rclb
push
pop
mov
nop
rcr
and
cli
roll
mov
test
mov
mov
lret
fistl
mov
hlt
mov
fs
inc
std
fsubr
rorl
lods
int3
out
imul
dec
mov
ja
jg
pop
int
sub
sbb
jmp
push
push
testb
jge
dec
xor
cs
adc
or
mov
sbb
pop
fnsave
mov
push
xchg
mov
pop
jb
push
push
jle
in
push
mov
cmovbe
movsb
mov
sub
ss
push
repnz
or
sbb
sbb
cmpsl
lods
in
or
mov
push
jge
stos
ror
fwait
mov
movsb
inc
adc
jae
mov
fnsave
xor
test
xchg
push
push
and
in
mov
test
or
sbb
sub
mov
rsqrtps
xor
adcb
push
lea
ret
xchg
fs
push
or
dec
lahf
and
sahf
push
xor
pop
je
add
jnp
rcll
imul
mov
insl
lcall
or
fstpt
fiadds
and
lcall
hlt
lret
test
push
arpl
mov
insl
fistl
in
sti
shrl
or
shlb
add
and
pop
xlat
insb
cmp
outsl
test
loope
xchg
out
popf
lahf
lods
add
jl
inc
xchg
insl
inc
push
xlat
jo
mov
add
dec
push
add
data16
add
fnsave
stos
fidivrs
ret
inc
add
fs
daa
xor
push
test
sub
lahf
aaa
mov
insl
int
jb
push
pop
xor
push
cmc
jl
rorb
sbb
mov
cmp
lcall
in
mov
sub
dec
push
jmp
movsb
adc
dec
mov
add
ja
inc
mov
fwait
push
pop
adc
fwait
in
cmpb
mov
dec
aaa
ss
xchg
mov
pop
xorl
addl
cmp
fs
or
pushw
rcll
and
das
cmp
lahf
das
jg
fsubs
test
test
imul
sub
mov
cmp
lcall
push
mov
andb
mov
xchg
scas
xor
roll
adc
loop
fbld
iret
rcl
insb
inc
jg
mov
dec
add
pop
ret
mov
call
jns
mov
sub
fbstp
cmpsb
sahf
inc
and
pop
mov
fnstsw
push
mul
mov
loopne
shlb
ret
in
inc
mov
movsl
cli
xor
cmp
outsb
or
and
aad
mov
in
dec
fnsave
je
fs
stos
cmpsb
insb
inc
mov
push
mov
push
clc
rolb
cmp
pop
and
cwtl
pusha
mov
add
add
cmp
in
xchg
adc
test
jne
add
add
cmp
xchg
mov
jbe
lret
into
and
mov
fadds
movsb
lods
andl
push
pop
lret
idivl
or
and
rcll
cmc
imul
cmp
std
xchg
push
outsl
and
mov
insl
xor
add
cmp
or
aad
daa
pop
repnz
iret
sub
or
mov
xlat
lds
popf
and
cmpsb
jae
xchg
pop
cltd
cmc
push
pop
test
in
out
dec
and
stos
cmp
imul
int
out
imull
xchg
daa
or
sub
cmc
mov
nop
out
jns
mov
xchg
jnp
adc
repz
stos
dec
mov
mov
push
fs
cmc
mov
add
arpl
push
clc
adc
imul
adc
test
inc
out
pop
inc
xchg
xor
rol
mov
dec
adc
or
das
mov
scas
test
push
sub
cmp
sti
add
push
icebp
adc
ja
daa
pop
les
inc
cmp
or
mov
pop
mov
loopne
adc
pushf
sub
stc
adc
jno
jl
push
inc
cli
ljmp
push
mov
dec
sub
les
pop
add
cmp
sti
cltd
std
xchg
cmp
jnp
insl
and
adc
scas
imul
iret
mov
stos
jp
fldcw
jns
sbb
jno
popf
dec
ljmp
cld
aas
call
sahf
sti
cmp
mov
jmp
lret
jne
mov
daa
dec
dec
pop
pop
add
jns
mov
les
xor
push
out
outsb
jb
cld
mov
and
xor
and
stc
pusha
mov
mov
xchg
daa
lcall
cmp
cmp
pop
inc
aam
mov
pusha
sahf
stc
dec
cltd
jge
dec
cmp
xchg
cwtl
xor
dec
mulb
push
sbb
lock
pop
jne
shll
fldl
into
mov
adc
sub
pop
jbe
in
scas
ljmp
pop
or
cmpsl
ret
push
add
adc
push
adc
ficomps
fisttpl
js
and
lds
sbb
cmp
mov
notl
iret
sub
or
inc
jle
stos
jae
mov
outsb
and
in
cli
mov
jb
outsb
rorl
lods
or
iret
xorb
or
out
cmp
add
xchg
mov
aam
jae
movsb
pop
outsb
pop
pusha
test
jg
sub
call
ds
les
data16
adc
xor
and
gs
sub
mov
je
cmp
xor
aad
aad
sub
jl
adc
or
dec
cmp
jo
repz
notl
int
outsb
adc
cmp
xlat
aaa
shll
pop
mov
insb
and
repnz
mov
push
in
jmp
mov
ret
les
ss
lock
jle
sbb
or
push
xorl
fmul
push
orl
push
cwtl
addl
sub
gs
out
push
sub
xor
dec
mov
imul
dec
sbbb
ret
cld
mov
mov
mov
push
add
lret
cmc
mov
cmpsl
mov
sub
sub
xor
adc
fildll
jmp
int
in
mov
add
cmpsl
out
hlt
inc
rclb
jmp
sbb
les
stos
pop
adc
push
out
sbb
mov
mov
pop
fmul
nop
mov
jp
xor
inc
leave
out
in
cmc
or
cwtl
out
fildll
pop
and
mov
shll
and
adc
jb
or
push
fs
into
movsl
inc
push
pop
mov
push
stos
mov
clc
sbb
sub
mov
jne
or
add
scas
and
stc
sbb
prefetchnta
sub
pop
or
mov
mov
mov
test
cmp
outsl
dec
cmpsb
sbb
sbb
std
and
pop
clc
sub
outsb
cmc
inc
pop
xchg
mov
pop
xchg
push
pop
push
dec
or
xchg
or
push
fwait
js
cmp
shl
cli
cmp
das
fimull
arpl
add
and
imul
ja
add
test
mov
mov
imul
and
mov
mov
leave
pop
mov
les
mov
ret
push
mov
divl
out
dec
js
mov
iret
mov
aad
mov
sub
push
mov
pop
hlt
mov
int
sub
jg
dec
xlat
jb
cltd
xchg
dec
js
leave
push
and
shll
je
mov
outsb
in
push
js
mov
sarb
mov
js
xchg
std
pop
call
movsl
adc
arpl
adc
or
cwtl
sbb
ret
test
data16
aad
lock
push
inc
jecxz
mov
rol
mov
mov
xchg
cmp
mov
jge
sti
push
sub
add
in
pop
add
dec
hlt
imul
push
or
dec
movsb
mov
jbe
and
or
int3
fadd
push
cmpsl
in
push
fldcw
mov
or
jbe
cmpsb
xchg
dec
fnsave
add
mov
ret
repnz
pushl
insb
ss
test
dec
in
jle
inc
sub
loope
or
out
leave
jnp
sbb
push
jns
cmp
cmpsl
sub
repz
int3
jge
and
scas
sub
inc
test
jp
jge
cmpsb
fistps
std
and
inc
push
sbb
add
adc
jle
imul
jns
mov
push
adc
cmpsb
push
out
lret
xchg
rorb
jmp
gs
mov
pop
mov
loop
add
in
sahf
js
xor
jne
cmpl
dec
sub
mov
aad
xchg
stc
in
sub
mov
lcall
mov
jle
mov
inc
cmpsb
addb
movsb
mov
sub
aas
push
dec
mov
sub
shrb
sahf
jno
aam
sbbb
mov
xchg
jb
ss
test
inc
pop
jmp
cmp
movsl
outsl
push
mov
insl
adc
fists
or
push
and
inc
mov
sub
add
ficompl
dec
xor
das
mov
jge
sbb
sbb
rclb
push
mov
lret
mov
dec
jne
or
faddl
add
fcoml
xchg
daa
int
hlt
jne
mov
mov
sahf
aas
add
xchg
enter
fistps
and
add
idivl
mov
ucomiss
mov
in
fisubl
popa
inc
push
iret
andl
mov
outsb
jg
and
gs
adc
dec
pop
stc
stc
xchg
fstpt
pushf
jg
cmpsl
dec
mov
xor
cmp
into
subl
mov
xchg
fistpl
into
mulps
mov
mov
inc
bswap
jp
jg
inc
fidivs
push
mov
iret
stos
sub
aas
jae
adc
xchg
pop
xchg
fidivrs
addr16
imul
cld
sbb
xchg
sahf
xlat
mov
cwtl
and
jmp
std
clc
add
sbb
jl
stos
xor
sbb
xor
arpl
mov
pop
into
shlb
inc
aad
int
add
add
das
popf
push
ja
out
xchg
stos
pop
and
push
adc
or
xlat
sub
in
aam
cmpl
jle
in
pusha
mov
ficoms
mov
mov
push
or
loope
mov
adc
jmp
xor
xchg
cmp
mov
bnd
jbe
hlt
xchg
insb
jp
das
fsubrl
scas
scas
sti
shrb
cmp
push
ret
out
cmp
sub
mov
adc
stos
lret
scas
adc
test
icebp
pop
or
cmpsb
arpl
adc
or
lea
fisttpll
ja
mov
into
outsl
mov
mov
push
loopne
out
inc
xor
call
push
push
fadd
mov
mov
fsubrl
xor
xchg
insl
arpl
dec
mov
les
sbb
push
rcrl
stc
jmp
jbe
inc
popf
loopne
push
pop
repz
push
jg
dec
int3
and
dec
jp
jmp
loope
xchg
imul
rcrb
rcl
icebp
mov
and
cmp
push
fildl
xchg
popa
xlat
adc
ss
fistl
insb
or
mov
jns
push
add
add
test
fmuls
xchg
jecxz
dec
mov
xor
aad
sbb
enter
imul
jp
xchg
cmp
adc
shrb
ljmp
idivb
cwtl
jbe
cmc
adc
mov
xchg
decl
arpl
adc
or
les
leave
dec
push
push
push
lea
sbb
leave
push
xchg
adc
push
inc
xor
xchg
sbb
cli
in
or
rcll
mov
dec
out
roll
sub
addr16
loope
dec
incl
xchg
cltd
clc
mov
lods
sbb
mov
dec
and
pusha
mov
push
fsts
sti
push
adc
and
inc
data16
arpl
inc
and
push
mov
lret
stc
inc
or
adc
mov
cli
fwait
les
jae
or
enter
pop
lods
outsb
jo
ror
pop
fimuls
or
mov
stc
rcl
xchg
popf
mov
add
dec
pusha
int3
push
push
xchg
xchg
fisttps
pop
std
add
push
sbb
pop
xor
jp
bound
insb
xor
enter
jae
aad
cmp
imul
les
sahf
cld
imul
in
ficompl
or
subl
outsl
xchg
lret
cld
inc
popf
xlat
cs
nop
mov
or
add
xor
mov
pop
adc
sub
repnz
ret
insl
popf
mov
inc
sub
test
and
outsl
pop
aad
ja
fs
sub
push
dec
jmp
jle
add
aas
cmpsl
inc
mulb
aam
jge
lods
sub
lods
pop
cmp
mov
popa
idiv
dec
add
xor
shll
pushf
leave
fmuls
or
mov
add
data16
mov
into
pop
xchg
mov
xor
bnd
ret
mov
pop
cld
mov
jb
mov
push
hlt
jo
gs
dec
jo
dec
mov
sub
cmpsl
in
divb
mov
pop
or
pop
insb
insl
inc
imul
jle
js
mov
and
dec
sbb
and
push
xlat
movsl
dec
repnz
xchg
decb
pop
mov
fstl
or
lret
lret
aam
push
add
movsl
dec
test
xlat
jmp
mov
xchg
mov
mov
and
pop
fstpl
push
das
fdivl
dec
ja
or
add
and
or
or
sbb
lods
push
adc
jge
dec
lds
in
lds
cltd
insb
shl
nop
sub
sti
add
or
iret
sbb
xor
ret
cs
push
sbb
scas
mov
in
test
and
dec
faddl
cmp
inc
popa
dec
ljmp
mov
adc
xorb
jl
es
push
pop
push
aaa
inc
pushf
push
stos
add
or
xor
cmp
insl
mov
lds
clc
nop
sbb
clc
lock
popa
fcoms
pcmpeqw
mov
fists
aaa
stos
fnsave
mov
xchg
subl
iret
jg
inc
insb
aad
mov
xlat
cmp
fbstp
xchg
hlt
cmpsb
dec
movsl
bound
and
fwait
inc
out
cmp
sub
addr16
test
pop
add
int
dec
push
insb
jle
cmp
dec
setne
jns
cwtl
insl
fistps
imull
cmpsl
pop
push
sub
jae
fidivrl
add
mov
pop
mov
cmp
lods
push
xchg
cmp
jae
push
sbb
jbe
divps
movsl
sbbb
fwait
push
ja
xchg
xor
cmpsb
aaa
adc
cmp
ret
jno
addr16
addr16
sbbb
cld
mov
imul
mov
inc
ret
cmp
mov
inc
test
push
movsl
and
add
mov
jbe
outsl
lcall
mov
call
aaa
mov
lcall
sbb
xchg
iret
popa
inc
mov
push
repnz
mov
enter
jp
adc
push
or
rcrb
mov
out
jb
out
sub
mov
ds
xchg
int
outsb
mov
inc
inc
lods
push
ds
enter
and
sub
or
lcall
es
inc
mov
push
cmpsw
into
int
and
inc
mov
pop
mov
movsb
jle
les
test
push
das
mov
sbb
ds
sahf
mov
repnz
dec
sbb
push
rol
dec
xlat
push
xor
add
mov
test
fiaddl
arpl
daa
mov
inc
jb
popa
test
jecxz
ds
inc
push
and
mov
adc
push
sbb
test
cmp
iret
insb
cmp
sbb
and
cmpsl
or
stos
je
popa
jge
lds
cmpsb
mov
sub
xor
cs
and
add
xchg
sbb
pop
mov
enter
fdiv
les
jp
mov
fldcw
or
push
cmp
dec
addr16
ja
and
test
fstps
lcall
jle
ds
ljmp
in
cmpsb
dec
jno
add
cmp
repnz
pop
cmp
or
ds
inc
repz
mov
popl
and
int3
push
rcl
faddl
movsb
jb
cmp
lahf
pop
int3
mov
dec
pop
gs
xchg
in
jg
xchg
into
and
stc
mov
nop
add
lret
fsubs
cld
push
pop
rclb
dec
ja
xchg
mov
cmp
scas
mov
scas
clc
loope
add
mov
mov
pop
dec
movsb
shrb
lret
mov
mov
xchg
cli
mov
mov
push
call
and
xor
arpl
lea
jecxz
popa
mov
mov
and
movb
jae
cmp
cld
mov
lock
add
mov
add
dec
push
test
push
mov
add
or
cmpxchg
cmp
arpl
cmp
stc
cmpl
mov
fcmovnu
or
clc
ljmp
inc
pop
xor
cmc
xchg
mov
jmp
ret
cmp
jo
xor
scas
enter
mov
sub
mov
mov
and
enter
sbb
pusha
jmp
jp
jg
push
cli
insb
dec
and
push
xor
gs
sub
push
add
add
adc
cmp
inc
shll
or
leave
mov
ret
clc
rcl
fisttpll
xor
adc
mov
cmp
jl
mov
adc
mov
xchg
sar
in
inc
mov
mov
push
or
mov
in
mov
inc
mov
loopne
repnz
shlb
push
leave
movl
jl
cwtl
fadd
repz
push
int
mov
pusha
xor
mov
cmpsb
fistl
jp
and
jne
cmp
loope
sbb
lds
jns
and
mov
dec
popa
fwait
sub
call
ror
or
xchg
aaa
push
and
fcompl
scas
and
fiaddl
insb
les
nop
pop
mov
push
imul
add
jns
fs
pop
or
cmp
cmp
push
push
inc
das
fstpt
xor
cmpsl
cmc
das
outsl
lods
inc
jnp
repnz
ret
cld
cmp
dec
and
push
push
jne
rclb
ror
xorb
mov
pushf
sub
cmpsl
mov
inc
xor
test
mov
test
test
sarl
fdivrs
xor
daa
call
stc
sbb
push
pop
add
into
xchg
ds
lret
sub
rorl
imul
mov
adc
insl
imul
adc
test
jne
andb
pop
xchg
test
jno
inc
and
mov
cmp
scas
mov
sahf
and
lret
fildl
jnp
in
cmp
push
rcll
int
and
pop
cmc
stc
scas
xchg
adc
int
and
adc
pop
or
lods
sub
fstl
cmp
cmpsl
lods
xchg
or
cmp
gs
scas
cmpsl
mov
jbe
dec
stos
xor
jecxz
cmp
cmp
sub
in
fadds
das
cld
mov
mov
add
aaa
popf
add
pop
push
rcrl
das
jecxz
cmp
lahf
clc
addr16
jo
xchg
test
cmp
orl
sti
out
mov
cmp
cmpsl
cld
push
cmpsb
sub
andl
cmp
and
outsl
shlb
cmp
and
push
push
cld
pop
mov
jbe
sub
jg
loope
lret
out
je
lret
popf
adc
outsb
mov
outsb
jg
in
xchg
xor
xchg
or
push
pop
inc
push
imul
js
mov
dec
xchg
mov
cmpsl
cmpsb
mov
jecxz
insl
into
jmp
lret
into
push
mov
es
mov
push
or
and
call
bnd
std
jbe
lret
adc
sbb
push
add
pushf
jo
lods
aam
inc
jge
or
jb
adc
and
cmpsb
ror
or
push
lret
inc
aaa
test
sbb
add
mov
popa
add
imul
mov
sub
push
xchg
cmp
in
testb
aad
rcrb
test
and
cwtl
xchg
cli
mov
mov
xchg
cs
iret
insl
mov
dec
test
rcl
fs
ret
leave
out
scas
inc
jb
mov
adc
jno
pop
pop
enter
dec
stc
rclb
negl
addl
sub
xor
adc
psrld
sbb
in
adc
ret
sub
out
mov
insb
mov
or
ss
sbb
roll
out
sub
out
rorl
ret
rol
pop
repnz
sbb
lods
inc
jns
inc
xlat
add
mov
jo
fwait
xor
int
loopne
int3
and
mov
lret
insb
shll
popf
pop
push
addr16
mov
cltd
add
dec
xor
enter
fsubl
ljmp
xor
lods
sub
pop
or
mov
lock
scas
ljmp
es
dec
psrld
lret
sti
mov
lahf
in
push
jmp
std
sub
jl
sbb
fldl
cltd
mov
das
mov
mov
adc
loop
mov
fsubr
stos
sbb
cmp
stos
sbb
xor
fs
dec
inc
jno
lret
cmp
mov
stc
mov
call
lds
hlt
aam
femms
cmp
test
pop
fildl
pop
mov
inc
repnz
stos
cmp
push
cmp
lret
test
add
pop
jge
xchg
inc
adc
mov
clc
stos
cwtl
push
js
push
cmp
andl
lcall
ds
repz
out
xor
adc
loope
je
loope
xchg
push
sbb
adc
and
mov
out
in
js
cli
iret
pop
shrb
dec
fwait
add
sbb
fcmove
clc
lahf
fisubs
daa
std
mov
fcomip
jb
xor
xchg
xor
jnp
fisubrl
imul
imul
jbe
pop
cmpsl
cmp
push
or
or
mov
inc
adc
imul
out
mov
pop
pop
inc
ret
push
repz
dec
jb
mov
ds
xchg
cmc
and
add
xor
pop
cmp
push
test
jge
mov
push
pop
mov
mov
aam
jns
out
movq
clc
lock
inc
test
sarb
jnp
pop
sub
jecxz
pop
repnz
leave
and
cli
mov
ljmp
xchg
adc
sub
or
inc
inc
out
sub
pop
cmp
adc
out
mov
aam
mov
jb
loop
outsb
outsl
test
lret
outsb
push
xor
push
sbb
fprem1
push
pop
insl
rol
cwtl
sub
push
jge
sub
fisttps
outsl
mov
or
cmpsl
sahf
jl
mov
mov
cmp
dec
sub
adc
sub
fidivl
fcomps
mov
stos
divb
adc
mov
push
scas
lcall
outsb
lods
xor
dec
icebp
pop
lret
lods
flds
in
aam
pushf
mov
int3
cltd
jp
pushf
lret
pop
mov
xchg
xor
inc
in
pop
mov
subb
loopne
cs
aas
jb
daa
xchg
imul
sbb
dec
xchg
mov
xchg
adc
jg
cmp
lea
std
in
mov
imul
int3
pop
jecxz
push
push
lcall
sub
jmp
lods
and
sbb
xchg
jecxz
popa
inc
je
or
xor
and
add
int3
mov
fsubl
mov
adc
out
adc
xor
cmc
cs
cli
fwait
out
cmp
movsl
or
or
roll
fnstenv
sbb
pushf
and
lods
loop
sbb
mov
mov
pop
mov
mov
jl
call
movsl
icebp
cmp
incb
insb
jbe
mov
enter
adc
add
sbbl
pop
test
adc
pop
arpl
lahf
pop
add
add
ret
es
mov
popa
imul
sbb
jo
mov
pop
leave
mov
iret
loop
jno
loope,pn
fwait
add
inc
in
push
jnp
dec
push
mov
cli
dec
lahf
icebp
lahf
sbbl
repnz
or
aam
cmp
lods
jno
xor
lock
push
cmp
js
and
mov
adc
out
xchg
iret
pusha
arpl
out
adc
cmp
sub
xchg
mov
insl
ret
xchg
out
das
repz
mov
pop
into
rcl
and
adc
and
jne
dec
sar
push
xor
mov
pop
movsl
sahf
pop
dec
pop
or
test
cmpl
pop
sti
in
dec
mov
xchg
mov
mov
add
cmp
add
push
and
fsub
adc
jae
push
pop
lcall
inc
mov
into
xchg
out
ficoml
lds
mov
insb
xchg
bnd
push
inc
lock
and
sbb
popa
inc
cmpsb
mov
andb
enter
stc
push
push
adc
push
inc
pop
and
repz
cltd
adc
or
aad
cmc
aad
scas
subl
cltd
xor
inc
jae
pushw
xchg
fsubl
add
xlat
daa
sbb
sbb
inc
cld
lods
dec
scas
and
sbb
jl
xor
fisubrs
fnsave
pop
cs
xchg
sbb
push
mov
xor
dec
dec
xchg
xchg
sbb
sbb
or
mov
pop
lock
aaa
aas
inc
pop
aas
xlat
jge
lret
push
sbb
std
inc
loope
jg
jae
and
rolb
cmp
ret
ficoms
cmp
lods
mov
std
dec
xchg
sbb
inc
pop
mov
sub
int3
ficoms
push
lea
mov
mov
mov
jae
adc
sbb
dec
dec
sarb
lods
jmp
xchg
xchg
mov
leave
adc
inc
jb
adc
jge
push
js
bound
iret
pop
xchg
or
adcb
and
and
jge
out
xor
cltd
aam
lcall
inc
mov
outsb
aad
and
or
mov
shrl
xor
inc
pushf
or
hlt
shlb
dec
lret
out
xchg
push
je
xchg
push
enter
sub
jmp
jecxz
pop
add
out
inc
adc
pop
ret
es
adc
lods
cmp
leave
mov
mov
pop
inc
test
inc
mov
xchg
fsub
std
movsb
pushl
leave
adc
ja,pn
fstps
xor
or
adc
inc
addr16
mov
dec
dec
popa
imul
mov
dec
sub
inc
mov
mov
lret
mov
xchg
jl
or
dec
xlat
jnp
icebp
xchg
ret
push
in
fwait
test
adc
cli
hlt
dec
mov
xor
push
push
fwait
test
js
mov
imul
subb
sub
xchg
call
sbb
push
jo
dec
xor
pop
call
mov
cmp
repnz
mov
in
pop
iret
fists
mov
sub
jno
lcall
adc
arpl
imul
pusha
in
pop
iret
push
jmp
jnp
mov
mov
dec
cmc
cwtl
mov
pop
push
jb
adc
shlb
sti
int
or
test
xchg
cmpsl
popl
and
mov
xchg
stos
pop
pop
sub
sbb
mov
mov
cmpsl
stc
icebp
jo
xchg
arpl
mov
dec
div
inc
and
int3
and
sbb
je
out
fcomi
xor
lea
jbe
jecxz
or
jnp
rcl
push
insb
mov
mov
scas
and
add
push
inc
mov
rclb
sahf
sub
sbb
data16
pop
lcall
ret
rorl
jl
mov
repz
out
popa
cwtl
mov
jbe
add
jmp
push
cmpsb
scas
jae
dec
loope
mov
cld
call
ja
adc
push
loope
loop
ficomps
sbb
fisubs
push
add
fs
sbb
shr
daa
stos
dec
push
adc
pop
js
push
je
mov
inc
nop
pop
add
pop
and
inc
xor
dec
stc
pop
fcomp
bound
das
pop
push
jmp
ljmp
pop
scas
xchg
or
dec
xchg
inc
sarb
xor
push
idivl
jecxz
pop
dec
pop
xorb
or
js
add
mov
cmp
rolb
aad
hlt
lds
hlt
sub
fistl
inc
dec
mov
sub
cwtd
sub
pop
andb
inc
mov
mov
unpckhps
xchg
cmp
ja
pusha
repnz
lcall
jnp
mov
mov
mov
cmp
pusha
xchg
xchg
adc
sbb
xor
icebp
cmp
fwait
ja
jg
add
je
dec
and
popl
sbb
pop
fnstsw
xchg
push
push
fsubrs
xchg
lret
mov
jno
sti
shrb
inc
sbb
pop
pop
test
mov
pop
mov
repz
dec
rcr
ret
test
pop
mov
dec
testb
sub
jne
cmpsl
inc
xchg
shll
mov
mov
loopne
insb
push
sub
enter
jns
ret
rcrb
xor
and
push
and
repz
push
xchg
call
int3
jle
in
dec
in
and
aam
or
ret
push
xchg
and
cmp
leave
pushf
fildll
stos
shlb
scas
arpl
or
push
mov
cmpl
mov
mov
mov
es
movsl
dec
add
xchg
rol
dec
imul
gs
arpl
mov
lahf
ret
nop
or
jle
fsincos
mov
les
jecxz
orb
mov
and
push
push
iret
inc
push
add
adc
lcall
pop
test
fstl
aaa
fcomps
andl
scas
jb
dec
mov
pop
pop
jae
js
sahf
scas
cmp
call
ror
pushf
mov
pop
xor
pop
lea
dec
xchg
push
cld
aas
in
xchg
jle
mov
out
jno
or
jns
add
arpl
pop
xor
jl
xchg
xchg
jmp
out
push
mov
jg
mov
jle
push
insl
je
inc
aas
inc
stos
and
xor
cmp
mov
dec
mov
fbstp
dec
cmp
sub
gs
test
stos
insl
je
mov
ret
mov
dec
nop
sbb
mov
add
mov
jmp
push
inc
add
fistpl
push
arpl
pop
roll
mov
push
cs
xchg
adc
add
mov
js
mov
lret
jno
outsb
lret
enter
cmp
test
push
js
inc
sbbb
ljmp
lret
out
jge
leave
cld
inc
cmc
dec
loop
xor
fstps
popa
loope
addr16
shlb
pusha
lret
and
mov
test
rclb
clc
cmp
adcb
stos
les
ror
mov
mov
push
jo
or
call
js
mov
cmpsl
push
lds
aaa
outsl
add
xor
mov
addr16
mov
dec
push
arpl
imul
xor
mov
adc
jp
xor
test
xchg
dec
xor
sti
loop
outsl
mov
cmp
fcmove
xchg
loope
pop
cmp
cltd
mov
push
mov
daa
nop
push
mov
mov
jb
mov
stc
xor
xor
data16
xor
xchg
pop
int3
mov
and
vpsrlw
lahf
scas
jmp
xor
inc
xchg
insb
test
lock
xor
das
inc
or
addr16
mov
imul
pop
inc
ret
lahf
sbb
sub
into
sbb
jle
int3
jbe
xchg
outsb
cmpsl
sbb
xchg
in
arpl
xchg
pop
or
push
dec
jg
pusha
pusha
add
or
xchg
test
sbb
hlt
hlt
std
dec
lret
leave
pop
and
iret
xor
into
inc
aas
mov
inc
call
mov
sbb
and
mov
ret
xor
and
ja
pop
push
push
movsl
fcmovne
addb
adc
leave
sbb
pop
loopne
jns
inc
enter
arpl
arpl
push
shrl
cmp
mov
sub
or
lock
mov
sub
in
sahf
sub
lods
mov
shl
into
gs
repnz
out
fdivrl
out
insl
mov
mov
inc
gs
mov
icebp
sub
hlt
or
rcr
lock
int
sub
test
xor
popf
xchg
adc
bound
lret
push
add
mov
das
cs
loop
into
push
push
out
std
sub
jns
sub
cmp
mov
lea
repz
inc
leave
jo
es
frstor
fcoms
insb
and
rolb
sub
sbb
mov
pop
lods
mov
inc
mov
pop
in
sub
cmpsb
lahf
fldt
lret
sarl
in
jmp
inc
cmc
pushf
pushf
and
movsl
mov
push
fs
shlb
inc
or
cs
push
add
jns
dec
rcll
pop
fcmovu
rcll
repnz
ja
outsl
xor
push
add
mov
aaa
adc
mov
cltd
scas
mov
int
adc
xchg
inc
les
test
scas
inc
mov
cltd
lock
mov
js
xor
imul
ror
enter
gs
pusha
xchg
mov
test
imull
pop
cmp
arpl
jp
push
test
push
ficoms
or
mov
pop
rorb
shrb
xor
cs
push
or
imul
mulb
out
mov
arpl
xchg
push
add
fcmovne
fwait
sti
sbbl
dec
loop
push
cs
push
incb
cs
lahf
rcrb
into
fstpt
or
adc
les
xor
mov
mov
jge
cmc
mov
fwait
hlt
add
dec
rclb
stos
out
mov
sub
cld
icebp
mov
pop
cmpb
or
roll
cmc
jo
push
popa
repnz
mov
aam
cmp
rclb
fdivl
adcl
sahf
sub
outsb
cmpsl
test
std
cli
adc
fisubrs
cmp
mov
incb
mov
add
mov
and
pop
mov
and
adc
lds
ljmp
lds
push
repz
ret
xor
mov
scas
jb
movsb
clc
xorps
add
add
and
repz
out
xchg
cwtl
lret
jnp
rcrb
outsl
es
mov
mul
inc
nop
adc
and
cmp
sar
pop
and
in
jl
or
add
out
iret
ret
cmp
mov
adc
les
push
leave
mov
ss
out
xchg
mov
je
mov
fisttpll
pushf
xchg
outsl
cltd
cmp
jno
cmp
test
add
add
inc
notl
out
add
or
ljmp
les
jl
jmp
adc
aaa
mov
xor
adc
out
pop
push
and
aad
ltr
sub
sahf
cmp
push
lods
mov
xor
cld
into
push
loop
lret
loope
scas
ja
iret
sbb
mov
mov
in
jae
push
call
imul
cmp
cmp
mov
daa
outsb
das
outsl
stc
push
out
les
lcall
outsl
call
gs
xor
cmp
out
mov
je
movl
shr
ret
jb
in
push
stos
mov
sbb
mov
mov
arpl
movsb
and
insl
lret
mov
ret
jne
popf
inc
in
lahf
adc
sbb
add
sub
lcall
inc
ja
mov
das
fs
mov
mov
das
ret
sbb
xor
ljmp
jne
jmp
outsl
push
nop
adc
jnp
or
mov
jle
fwait
or
mov
imul
sub
dec
lods
or
sbb
cmpl
cmpsb
sbb
or
jnp
dec
or
jl
leave
sarl
pop
jb
lcall
mov
int3
and
jg
pop
out
cmp
and
out
movsl
out
scas
mov
adc
lret
scas
es
sti
or
pop
stos
inc
stos
iret
xor
or
pop
or
aad
pop
ficoms
pop
insl
gs
filds
lret
dec
cmp
adc
cld
xchg
dec
std
stos
xor
aad
jo
pop
mov
mov
mov
push
cli
push
push
dec
push
in
outsl
jp
xchg
mov
xor
inc
or
stc
lcall
repnz
or
xor
iret
notl
fninit
data16
dec
loop,pn
mov
xchg
or
pop
lea
inc
into
imul
fnstcw
in
dec
pop
dec
sub
push
cmc
into
call
inc
fs
test
jns
jmp
aam
mov
inc
lahf
or
jb
in
ljmp
fadds
pop
mov
dec
lods
outsl
inc
mov
add
das
fimull
enter
xor
push
imul
add
pop
mov
and
shrl
mov
mov
gs
pop
xorb
mov
test
fwait
xorb
xchg
jo
decl
pop
sub
xor
out
inc
cmp
fs
pop
adc
into
pop
mov
pop
fwait
xor
adc
mov
mov
add
sub
add
scas
mov
inc
je
jl
push
push
sub
lcall
nop
mov
cmp
mov
sub
mov
adc
push
sti
js
and
xchg
stos
les
sub
sarl
mov
cmp
jbe
iret
cmp
xchg
daa
pop
ja
jae
shlb
inc
jl
loop
fmull
cmp
push
mov
jmp
repz
xchg
mov
aaa
daa
mov
decl
push
cltd
sub
and
adc
stc
xorb
je
jbe
mov
mov
mov
adc
repz
aaa
daa
shr
js
sbbb
pop
leave
daa
push
add
das
shll
adc
sub
push
push
inc
jge
jb
xchg
aad
in
mov
inc
in
mov
out
add
pop
mov
loope
sbb
mov
mov
cmp
fdivrl
rorb
mov
fisubs
mov
daa
fsub
pop
inc
or
and
lods
push
enter
inc
inc
mov
push
out
test
pop
inc
xor
xchg
xor
nop
les
cmp
test
jae
clc
push
js
subb
push
dec
lret
xchg
mov
out
loop
dec
fldcw
ljmp
aam
inc
shlb
push
push
mov
pop
push
sub
mov
shll
stc
inc
add
je
fxtract
out
xchg
enter
loope
add
rcll
movsl
aad
dec
pop
fsubrs
push
clc
adc
sbb
out
jb
jle
push
fldenv
das
loope
icebp
ja
mov
xchg
ljmp
mov
jbe
dec
arpl
pop
pusha
sub
outsb
or
pop
fs
nop
out
fs
std
cli
jle
jg
ss
popf
loope
ljmp
dec
and
outsl
mov
mov
dec
int3
data16
jne
loope
xchg
sti
jno
prefetch
or
ds
sub
cmp
cld
pusha
add
mov
push
sti
popf
aad
and
jae
sbb
push
pop
insb
mov
aas
fistpll
pop
inc
pop
out
orb
dec
pushl
jne
add
sub
push
dec
js
mov
or
icebp
loopne
into
ljmp
lret
and
or
loop
sbb
stc
rorl
mov
lret
test
or
xor
pop
mov
repz
mov
sub
fists
icebp
das
mov
out
adc
jg
xchg
out
push
mov
fistpl
frstor
repnz
nop
sub
clc
testb
and
lcall
cltd
insb
aaa
rcll
add
out
xchg
pop
arpl
fnstcw
daa
dec
cmpxchg
in
jo
lea
faddl
or
xor
mov
aam
mov
sbb
out
subb
sbb
cmp
lret
or
dec
and
das
shll
lds
bound
dec
cwtl
setp
push
test
pop
lret
addr16
sbb
xchg
or
bound
jle
popf
jo
outsl
pusha
pop
mov
scas
je
mov
and
cvtps2pi
lock
sbb
loopne
pop
push
pop
or
xchg
and
and
fldl
rcrb
into
mov
cwtl
test
movsb
pop
cmp
pusha
jb
hlt
shl
or
fcmovnu
add
pop
je
jbe
lods
dec
or
cmp
adc
pop
je
and
mov
out
mov
add
adc
push
in
pop
aas
rolb
pop
ficompl
loopne
push
xor
sbb
mov
lahf
ffreep
frstor
pop
mov
loop
das
xchg
clc
push
inc
inc
fwait
add
ljmp
cmp
adc
inc
xchg
fisubrl
mov
xchg
cmp
jecxz
add
mov
cmp
sbb
or
sbb
imul
aad
jae
cmpsb
sub
pop
mov
mov
jae
into
cmpsb
out
xor
and
pop
xor
ret
mov
or
pop
sarl
bound
sub
dec
xorb
xor
pop
add
push
mov
cmp
xor
stc
stos
adc
sbb
pusha
aas
xchg
lret
sub
dec
pop
mov
dec
jmp
add
fs
sbb
cltd
cld
fnstcw
nop
notb
sbb
lea
sti
pop
cld
pop
mov
inc
add
pop
dec
mov
sti
cmpb
sbbb
fildll
mov
sub
pop
jmpw
aas
out
mov
jns
popa
nop
xchg
leave
adc
popf
or
sbb
rclb
jbe
push
jne
ret
and
inc
cmpsl
cld
xchg
mov
cmp
and
loopne
pop
mov
rorl
dec
es
stos
push
iret
mov
mov
mov
inc
pop
ja
jae
adc
pop
xor
movsl
push
lods
xchg
push
sub
out
mov
push
pop
push
sub
inc
jno
scas
hlt
sarl
in
cmpsb
sbb
fldl2e
adc
cmpsl
call
out
push
mov
push
loopne
sub
mov
inc
xchg
popa
ret
xchg
mov
fsts
jnp
jg
and
orl
mov
adcl
in
fnsave
pushl
fisubrl
push
insb
mov
add
loopne
aad
inc
or
pminub
mov
xchg
in
and
mov
leave
stos
mov
or
stos
xor
int3
rclb
mov
popf
scas
jle
jo
sub
test
push
dec
les
cltd
aam
shrl
call
fdiv
push
ljmp
dec
sub
cmpsb
jp
stos
pop
test
xor
mov
mov
fbstp
xor
shr
pop
pop
lods
sbb
jecxz
sub
arpl
xchg
push
stc
xchg
and
push
add
leave
add
cwtl
pop
pop
xchg
fwait
dec
ljmp
rcll
ret
sahf
cmpsl
mov
sub
outsl
ror
mov
in
pop
movsl
pop
mov
mov
sub
rolb
aam
daa
cwtl
inc
addb
stc
imul
jmp
sub
movsl
out
jb
cmp
fdivs
add
and
or
insb
cwtl
adc
xchg
push
sbb
leave
xchg
sub
push
jb
shll
dec
dec
cmp
fsts
sub
inc
jno
ja
mov
push
fists
ret
bnd
xor
stc
andb
int3
test
mov
ret
and
xlat
push
fidivrs
mov
add
lahf
andl
call
xor
cltd
cltd
insb
ret
popa
lret
mov
std
mov
and
nop
arpl
cltd
jle
push
gs
mov
jecxz
enter
or
push
into
add
add
testb
jne
out
dec
test
leave
fucomi
into
mov
push
cmpsl
mov
sbb
mov
adc
ss
fsubrl
push
mov
vpaddsb
dec
js
out
aad
in
repnz
push
sahf
mov
push
xchg
insb
scas
push
je
inc
pop
mov
push
add
mov
or
push
xchg
xor
mov
imul
pop
shll
mov
ret
addb
insl
cmp
inc
stos
sti
dec
push
in
pop
adc
shrb
jns
sbb
repnz
jne
pop
fisttps
repnz
loopne
cmp
scas
cwtl
jg
shrl
add
aad
xor
ficoms
nop
insb
sbb
call
and
test
lods
cltd
lods
push
sub
and
lods
mov
push
lret
sbb
pop
jno
stos
cmp
andb
mov
fidivl
mov
inc
pop
test
lret
push
jl
outsb
ret
fstpt
testb
mov
xchg
out
lcall
cmc
mov
clc
jp
lock
xor
insb
sti
movsl
sbb
idivl
cmp
ror
mov
dec
push
push
push
push
xchg
adc
pop
mov
xchg
jno
cmp
jecxz
mov
pop
ja
cmp
add
xchg
sub
push
loop
adc
shlb
mov
sbb
jle
xor
in
adc
xor
in
inc
shlb
sub
xor
cmp
movsl
shll
lcall
aas
pop
xchg
sub
les
sbb
shl
sahf
xchg
push
mov
leave
jmp
cmp
xor
divb
sub
out
dec
lods
inc
adc
dec
pusha
andb
loope
bound
xchg
or
adc
lods
imul
cmp
incl
minps
pop
popa
dec
test
jo
out
and
fs
mov
orb
xchg
cmpsb
in
mov
notl
cmp
int3
sub
mov
cmp
xor
out
pop
outsl
pop
mov
xor
sub
fisubrs
test
out
push
or
lcall
mov
jns
xor
loope
pop
mov
or
lods
jne
sbb
lret
sbb
mov
aam
verw
out
call
dec
add
or
movsl
outsb
and
fildl
and
sbb
jb
movsl
outsl
add
int
sub
fsubrl
and
out
push
xchg
adc
arpl
and
jg
mov
movsb
mov
adc
pushf
stos
adc
push
int3
pop
in
jmp
rcl
jp
xchg
cmp
mov
cwtl
jno
ret
and
and
adc
push
sub
mov
adc
bound
inc
cmp
into
out
sub
cmp
nop
push
sti
sar
pop
jnp
xchg
lret
jae
outsl
xor
idivb
insb
xor
inc
sub
sbb
ja
test
sub
les
push
jecxz
fists
pop
bound
mov
fsubr
jbe
adc
xlat
shlb
jae
mov
enter
xor
mov
negb
shlb
inc
lods
dec
lret
inc
dec
mov
pop
mov
pop
popf
and
jmp
std
dec
repnz
sbb
or
add
or
xchg
jmp
push
mov
mov
clc
fsubrl
xchg
dec
arpl
or
inc
fldl
inc
rcrl
inc
das
mov
jne
data16
jl
in
rcrb
shr
push
in
dec
add
into
ss
in
xchg
lahf
movl
icebp
sbb
lock
cmpsl
das
fdecstp
jge
push
mov
ret
mov
cld
rcr
js
dec
les
sbb
mov
xor
sub
fmulp
pop
mov
adc
nop
in
sbb
cmp
jne
adc
inc
das
aad
loope
push
mov
adcb
icebp
subl
outsb
pop
pop
mov
cmp
scas
negl
jne
inc
rclb
push
lea
cmpl
sbb
xchg
cmp
lahf
xchg
mov
enter
fwait
mov
cs
adc
stos
fstpt
push
push
push
rorl
ds
dec
cmpsb
dec
in
mov
shll
fsubr
shll
ss
enter
jecxz
sahf
pop
inc
push
push
jp
push
out
push
pusha
inc
clc
test
mov
imul
push
popf
mov
jo
xlat
cmpsb
jns
pushf
test
hlt
cld
popa
rcrl
push
push
cmp
inc
shlb
push
enter
xchg
jbe
adc
cmpsl
fimuls
lds
testl
out
lret
xchg
mov
xchg
es
rcl
push
std
call
stos
lock
mov
in
adc
shrb
sahf
jne
in
jno
mov
rcll
sub
mov
fbstp
filds
es
aas
jmp
es
in
push
icebp
push
es
mov
and
roll
cli
or
inc
pushf
dec
sarl
sbb
pop
lods
in
cmpb
xchg
lea
leave
jbe
jmp
push
mov
cs
dec
sbb
pop
imul
pusha
repz
in
jns
inc
jecxz
hlt
lcall
sbb
loop
gs
out
mov
pop
aaa
sub
movb
ret
or
cmp
add
fdivrl
ret
xchg
jmp
xchg
xchg
sbb
mov
cmpsl
cmp
push
inc
mov
mov
jp
sub
ret
xor
ficoml
xor
loopne
sbb
dec
push
xchg
fidivrl
dec
dec
xchg
into
aaa
add
pop
int3
jmp
pop
adc
jmp
mov
test
pop
gs
lret
sbb
cmp
inc
mov
inc
or
into
sub
mov
push
jne
cmp
adc
hlt
aas
and
clc
mov
clc
xchg
cld
leave
repz
shlb
cwtl
mov
cmpsb
jecxz
and
cmp
sbb
mov
sti
cmp
inc
push
push
test
insb
inc
mulb
loopne
jb
in
sub
and
addr16
stc
add
sahf
add
movsl
inc
jmp
or
ret
push
scas
aam
cmp
in
cmpsl
clc
lahf
jbe
pop
iret
dec
int3
sbb
fmull
jo
or
mov
stos
pop
xor
pop
push
pop
stos
or
sahf
jle
sbb
int3
sbb
insb
mov
dec
inc
imul
pop
push
ljmp
addr16
arpl
xchg
fdivrs
testb
inc
mov
test
and
sbb
int3
xor
jb
aad
push
sub
xor
jo
mov
push
subl
cmp
sub
nop
cmp
ret
ss
stc
into
sbb
mov
pop
mov
mov
inc
mov
and
test
push
test
subl
lock
jmp
ret
or
adc
inc
es
push
jcxz
in
cs
push
pop
pop
or
popa
xor
push
les
inc
test
sbb
xor
mov
cld
pop
inc
outsl
jns
mov
and
mov
out
mov
and
out
sti
xor
dec
pop
mov
push
sub
and
lds
mov
adc
outsl
cmp
adcb
aaa
in
inc
sti
xchg
jg
aas
xor
mov
push
adc
es
fbstp
cwtl
fs
fdivl
sahf
les
xchg
jp
mov
out
scas
xchg
sub
mov
sub
out
lcall
jmp
cmpsl
frstor
pop
jge
ljmp
movsb
pop
jmp
iret
push
mov
mov
jns
aas
cmc
fwait
stos
dec
int3
pop
fdiv
sti
xchg
add
xchg
lret
dec
std
mov
fdivrs
jb
push
and
cld
icebp
dec
loopne
hlt
or
enter
or
in
sbb
inc
push
and
push
add
mov
stos
fsubl
jge
out
fcomip
ja
into
xor
dec
loopne
push
hlt
mov
dec
pop
adc
add
cmp
enter
xchg
call
mov
les
add
sbbl
insb
call
iret
jl
test
fcmovu
mov
jmp
popa
xor
adc
or
mov
data16
push
stos
jns
cmpsb
dec
push
jg
stos
xchg
sbb
arpl
mov
push
pop
mov
jmp
aam
in
and
mov
or
mov
xchg
push
xchg
push
iret
int3
es
clc
repz
sub
mov
mov
push
pop
jbe
xchg
dec
jae
out
sbb
jl
fdivl
jnp
addr16
lock
mov
or
sbb
dec
pop
mov
dec
xchg
pop
rcll
sarl
data16
sub
inc
lea
xor
sti
je
xchg
scas
xchg
pusha
xor
subl
cmc
popa
sub
je
or
jns
xchg
bound
add
test
nop
push
cltd
cmp
cmp
test
mov
mov
mov
dec
pop
out
pop
int
add
mov
cmp
ret
or
arpl
jae
and
repz
jg
sbb
pushf
cmp
lcall
jg
push
inc
xor
test
inc
inc
jae
lret
adc
hlt
fmull
mov
hlt
loop
pop
pop
add
cmp
jecxz
sub
xor
pop
xchg
or
stos
cmp
je
ja
movsl
inc
xor
lahf
leave
in
fldcw
xor
in
mov
icebp
adc
out
inc
ret
mov
mov
shll
aaa
dec
push
add
outsb
inc
pop
orb
pop
adcl
neg
aas
jno
add
roll
or
sub
pop
inc
push
shll
insb
loopne
pop
in
jecxz
jae
add
xchg
lds
int3
je,pn
stos
xchg
add
jg
jnp
jge
cmc
add
sbb
fisubrs
gs
or
mull
fcoml
lcall
loope
mov
lahf
fstps
jle
pop
jne
fs
out
hlt
or
test
iret
sbb
leave
push
and
insb
aad
ss
or
stc
cld
and
mov
ljmp
addr16
imul
rcll
in
pop
jg
push
mov
add
jmp
es
push
dec
xlat
xchg
xor
inc
mov
mov
fistpl
xchg
ja
cld
adc
jmp
push
mov
in
dec
xchg
jbe
adc
dec
cld
adc
sbb
imul
lcall
imul
add
fptan
jae
rcl
jnp
add
fistl
mov
mov
sub
fwait
ds
push
icebp
rcr
xorb
sub
xor
popf
stos
cmp
dec
les
mov
dec
fs
or
push
arpl
in
mov
in
fisttps
inc
ss
popf
sbb
cmp
xchg
sbb
cmp
mov
cmp
fstpt
test
or
es
cld
mov
and
shrb
lea
fstl
cmp
adcb
cmc
faddl
pop
push
mov
fistps
adc
stos
jle
add
pop
sbb
or
sbb
ret
scas
repnz
push
pushf
adc
pop
div
jne
dec
shll
movsb
sub
pop
adc
mov
xor
push
icebp
stos
adc
dec
imul
jge
lahf
adc
repnz
mov
push
inc
dec
cltd
test
pop
sahf
pop
ds
mov
push
cmp
jp
adc
dec
in
pop
xor
loope
xor
insl
mov
pop
push
xchg
or
xor
ds
mov
or
insl
sbb
sti
out
mov
cmpl
xchg
mov
or
dec
add
push
fdivrl
push
into
pop
xor
mov
idivl
rcr
inc
sub
test
sub
mov
cltd
inc
sub
jb
iret
jg
dec
xchg
scas
mov
cvttps2pi
insb
jb
mov
mov
pop
dec
lods
push
imul
xchg
ds
in
pop
push
mov
movsb
inc
cmp
pop
pop
cltd
xlat
movsl
loop
ret
mov
inc
sbb
pop
adc
cli
loope
js
or
dec
and
sub
jb
mov
sbb
test
lea
or
rcrb
pushl
pop
ror
inc
mov
popa
sub
lcall
mov
mov
add
and
mov
dec
ja,pt
pop
add
lret
ret
sub
pushl
loop
pop
jbe
xor
leave
add
pushf
ret
lahf
enter
cld
std
mov
les
pop
lahf
fdivr
sbb
in
mov
sbb
sahf
jae
add
or
add
xlat
lock
adc
xchg
hlt
add
mov
jne
jmp
mov
mov
inc
popa
mov
addr16
das
adc
inc
jl
xorl
daa
cs
lods
testb
xchg
pop
pop
cs
and
pop
and
lods
ja
daa
leave
adc
addr16
push
pop
mov
into
pop
push
push
in
test
jo
arpl
pop
jmp
mov
xor
cs
adc
jo
add
sti
iret
mov
mov
xlat
arpl
lahf
adc
aaa
ret
xlat
jge
mov
dec
in
ljmp
loopne
jmp
stos
mov
ds
push
jl
cmp
mov
lret
cmp
sbb
and
mov
jbe
cmp
mov
ss
pop
and
cmc
stc
stc
dec
les
and
inc
cmp
push
ffreep
arpl
adc
mov
iret
pop
popf
insb
sub
cli
xlat
ret
dec
les
or
dec
adc
aaa
cmpsb
or
stos
ljmp
in
insb
pop
cmp
mov
outsb
and
mulb
out
xchg
icebp
adc
shlb
outsl
sub
and
mov
mov
push
jo
out
cli
push
jle
inc
xlat
pop
out
insb
aam
ret
push
jmp
mov
loope
xor
xchg
bnd
xchg
aas
sbb
popf
rclb
jno
push
div
pop
ljmp
jmp
out
ret
clc
and
cmp
and
repz
inc
enter
cli
stos
leave
push
mov
mov
aaa
scas
fidivrs
mov
movsl
adc
outsl
dec
jmp
in
add
movsb
fdivr
pop
lahf
popf
pusha
jbe
std
sub
sbb
cmp
jl
or
push
or
and
pop
into
and
ds
sbb
es
sbb
test
cmp
fistps
stos
into
test
das
lods
enter
inc
sub
xchg
daa
neg
adc
inc
mov
rolb
int
pop
mov
adc
add
idiv
adcb
lock
ja
dec
scas
mov
gs
movsl
das
pop
mov
out
xchg
jbe
in
add
or
xchg
lea
or
or
pushf
mov
sub
push
xchg
dec
jne
rcrl
xor
ss
stos
xchg
push
call
fildl
dec
dec
mov
add
xchg
or
pop
sbb
ss
inc
mov
xor
adc
mov
jbe
or
fs
movb
xlat
imul
lods
les
insb
int3
stos
loopne
dec
mov
test
mov
mov
pop
cmc
sub
jae
into
pop
adc
and
pop
lods
jmp
jo
push
jne
out
inc
dec
iret
mov
das
insb
cwtl
sub
cmpsb
sti
jae
adc
sub
jbe
ret
fwait
adc
movsl
dec
imul
mov
stos
outsb
cmp
fidivs
mov
pop
cmpsl
fwait
jo
inc
mov
mov
cmp
dec
and
ret
dec
and
jge
lcall
cmpsb
jne
jge
and
add
aaa
cmp
xchg
xor
rclb
scas
gs
clc
pop
jecxz
loop
loop
daa
xchg
add
jnp
mov
xchg
xor
or
or
or
dec
mov
mov
fmul
or
int3
dec
adc
lods
xorb
call
aad
int
fnstcw
xchg
xor
aaa
adc
pop
push
adc
aaa
cli
sub
xchg
arpl
sbb
lret
sti
and
push
lods
es
scas
jp
sub
rorb
arpl
icebp
pop
xchg
cmp
dec
xchg
and
lahf
mov
mov
dec
mov
cmp
mov
mov
icebp
cmp
xchg
enter
xchg
cli
ljmp
dec
add
test
push
imul
pop
pusha
cmc
lahf
stos
rol
sub
test
and
sti
and
out
leave
add
fisubs
sti
int
fstpl
cmp
shll
and
es
push
mov
sub
cmp
imul
and
insl
and
mov
sub
roll
dec
mov
lahf
div
cmpsb
clc
imul
xor
imul
or
sbb
jmp
pop
das
dec
loopne
mov
mov
jns
pop
add
sbb
push
cmp
outsl
sahf
je
stos
xor
sub
arpl
cld
jbe
insb
in
loop
ss
rcl
lods
cmp
cmp
xor
cmpsl
gs
and
das
xchg
mov
adc
jbe
jmp
jns
divb
iret
outsb
push
pop
in
push
pop
push
mov
adc
daa
add
stos
out
or
jno
inc
out
fs
lods
loopne
rorb
mov
iret
mov
cmpsb
mov
mov
sbb
mov
pusha
inc
cmc
pushl
dec
lret
pop
rcrl
bound
dec
mov
repnz
xor
or
outsb
mov
icebp
cmp
jo
add
in
stos
das
daa
push
push
fidivrl
mov
add
jno
or
movsl
mov
or
insb
pop
dec
bndldx
out
aas
or
pop
add
xchg
lock
push
push
sbb
testb
mov
fisubl
sbb
les
sar
mov
loop
movl
call
mov
and
push
lcall
dec
and
gs
mov
cmc
ljmp
lods
lds
lds
push
mov
dec
clc
loopne
and
in
jl
mov
stos
cmp
stc
test
mov
and
cwtl
xchg
pop
cmp
test
sub
cld
dec
loopne
decb
or
pop
mov
outsb
test
jo
or
scas
icebp
je
ja
roll
adc
jne
xchg
push
push
ss
arpl
add
lret
in
out
in
call
adc
lret
and
jecxz
fildl
js
imul
jmp
sahf
sbb
sti
test
mov
lret
sub
ss
jbe
mov
and
cwtl
sahf
or
inc
enter
add
and
cmp
rcrl
or
je
jnp
jns
sbb
add
sbb
shrl
ret
mov
rolb
lahf
sbb
cmp
insl
xchg
icebp
or
mov
shll
push
sub
mov
or
mov
mov
ss
xchg
sub
dec
push
push
ljmp
out
arpl
sahf
xchg
das
test
sbb
add
imul
adc
lcall
outsb
jl
xor
es
mov
mov
enter
pop
mov
dec
sub
pop
mov
stos
inc
pop
add
insb
dec
cmp
adc
dec
pop
icebp
jmp
lods
idivl
in
cmp
out
jbe
bound
lock
es
ds
adc
cmc
and
imul
mov
dec
inc
out
mov
jns
jns
popf
scas
in
and
pop
fstpl
sub
mov
xchg
data16
inc
cmp
inc
lds
aaa
rorb
xchg
push
push
test
xchg
sub
mov
adc
sub
sub
adc
mov
mov
mov
mov
xchg
inc
lret
clc
or
outsb
cmc
mov
loop
inc
mov
cli
mov
out
popa
ljmp
pop
js
nop
sub
dec
scas
movl
test
in
xchg
jmp
lahf
mov
aam
fcmovnu
test
mov
cwtl
dec
xor
sub
jae
xor
mov
es
das
test
push
dec
ja
xor
aam
push
mov
and
lds
sbb
and
sub
or
scas
add
aad
cmp
xchg
inc
dec
add
jg
or
push
les
sti
loop
mov
out
mov
add
ret
mov
inc
aad
aam
jge
mov
out
and
cmpsl
fbld
xchg
inc
jl
or
nop
or
cwtl
pop
lock
icebp
jmp
shlb
adc
in
push
mov
pop
andb
leave
xchg
mov
jp
add
xor
pop
mov
push
fnstenv
cmp
scas
loope
cmpsl
int
xor
mov
and
cmp
jbe
ds
mov
mov
out
inc
or
and
mov
xorl
xor
jnp
fidivs
imul
les
repz
loope
pop
add
fistl
mov
mov
cmp
hlt
pop
push
sbb
movsl
dec
das
jp
adc
sbb
push
cmp
enter
push
lds
or
cmc
addb
fsubs
fwait
mov
lcall
cmp
imul
push
insb
gs
daa
jns
sbb
psubusb
push
repnz
pop
xchg
fnstcw
dec
cmp
mov
outsb
iret
push
or
jno
es
mov
cmp
cmp
lock
aam
add
mov
cmc
jp
je
ljmp
xor
or
nop
mov
ljmp
mov
ficoml
cltd
in
or
mov
add
pop
pop
les
lcall
adc
xchg
mov
sahf
mov
imul
mov
movsl
add
es
and
clc
jbe
xorb
movsl
out
jno
mov
cmp
xchg
test
fildl
jmp
push
dec
xor
out
sbb
enter
add
add
repz
out
clc
jne
js
shll
push
repnz
imul
ret
xor
bound
cld
fnsave
cmp
sbb
ds
push
push
popf
xorb
push
mov
dec
xor
mov
or
fnstsw
xchg
mov
and
shr
in
jg
aad
popa
in
mov
fmul
inc
popl
jg
js
xchg
scas
fistl
mov
xchg
jmp
fwait
ljmp
test
xchg
dec
shlb
cmp
lods
insl
lcall
xchg
pop
mov
repz
cmpl
or
out
std
jno
mov
lahf
cmpsb
sbb
lahf
sub
test
sub
inc
xor
movsl
push
fldenv
and
nop
inc
arpl
and
push
xchg
xchg
std
add
ficompl
xchg
out
insl
nop
aas
pusha
push
hlt
adc
mov
bound
dec
push
movsl
dec
das
aaa
dec
lock
sbb
mov
mov
xchg
mov
andb
fdivr
mov
std
lea
and
inc
ret
push
js
mov
mov
dec
outsb
inc
divb
pop
or
gs
insl
pop
pusha
outsb
jb
cmp
fsts
test
sub
jb
jle
mov
jl
and
sub
mov
jbe
sbb
xchg
out
sahf
dec
or
sbb
mov
enter
sub
add
fwait
sbb
and
xchg
test
cmp
xchg
add
inc
adc
jge
inc
xchg
stos
xchg
jmp
dec
xorl
and
jo
mov
jne
adc
loope
mov
push
aam
popa
psubq
mov
js
mov
pop
xor
inc
pop
scas
pop
pop
stc
nop
cmpsb
push
dec
sbbb
adc
dec
pop
jno
cltd
js
gs
repnz
jae
lods
mov
add
jns
scas
or
dec
jmp
fs
or
mov
or
out
outsb
movsl
popf
cmpsb
out
mov
cmpsl
mov
jge
hlt
lods
mov
push
add
inc
das
cwtl
int3
xchg
icebp
loop
adc
xor
movsb
shrl
faddl
add
test
sbb
sbb
es
xchg
pop
int3
push
scas
sub
or
mov
lret
sub
cmp
sub
jbe
inc
aaa
mov
leave
in
adc
pop
xchg
mov
pop
xor
push
mov
mov
inc
popf
and
loopne
dec
xor
xchg
jno
je
fcomip
sbb
sbb
sub
sbb
adc
mov
outsl
jnp
cwtl
mov
inc
cli
jae
or
mov
cmp
rorb
fsubl
mov
mov
adc
leave
xchg
jge
shlb
inc
fistps
outsb
fcmovbe
scas
in
sub
dec
pop
inc
enter
inc
dec
rcrb
rcrb
repz
push
jns
cwtl
pop
push
mov
bt
ja
daa
sub
gs
in
xor
jp
subl
loopne
push
jb
ljmp
sbb
enter
outsb
adc
insb
or
jae
repz
adc
ffree
dec
clc
into
push
and
icebp
fwait
cwtl
cs
int3
push
fistps
test
sti
andb
and
ja
movsbl
or
jge
mov
xor
sbb
and
repnz
xchg
mov
in
stos
in
jae
fidivl
cwtl
xchg
lea
mov
bnd
dec
mov
sbb
jno
inc
dec
xchg
cmpb
cli
add
lcall
lcall
xor
mov
cmp
fnstsw
ret
roll
xor
mov
fadds
mov
jo
nop
pop
sub
and
popa
cli
mov
dec
push
icebp
std
pop
mov
cld
xchg
cmpsb
mov
sti
mov
push
jge
aam
mov
andb
adc
mov
shl
pushl
or
testl
jle,pn
push
out
clc
sbb
sub
adc
insl
pop
inc
les
xchg
xlat
xor
add
mov
jbe
mov
je
mov
inc
xchg
and
or
bound
mov
sbb
inc
cmp
push
rolb
std
adc
lret
jbe
fstps
repnz
or
xor
imul
push
inc
dec
xor
lock
icebp
movsl
leave
sub
jo
jge
ja
addl
popf
sbb
jge
sti
in
mov
lret
mov
jmp
adc
cmp
sahf
sub
pop
pop
fwait
mov
clc
int3
inc
clc
scas
gs
in
jp
out
lods
ss
push
inc
push
fcmovb
roll
push
sbb
dec
cmp
je
fdivp
mov
lret
xchg
lea
jecxz
cmpsl
xlat
mov
psllw
scas
imul
jbe
mov
inc
sub
jl
push
sbb
cmp
es
cmp
outsl
push
fwait
cmpsb
stos
cmp
popf
fwait
rol
in
mov
cmp
pusha
std
adc
pop
into
mov
shrb
mov
add
test
pop
shlb
or
adc
xor
and
fwait
or
pusha
jb
mov
cmpsl
mov
sub
xor
mov
add
mov
add
push
xchg
inc
jno
into
test
jle
cltd
mov
xchg
or
push
ljmp
fwait
adc
push
adc
loop
mov
and
fst
mov
or
pop
xchg
add
test
int3
pop
or
and
xor
cwtl
jmp
loop
nop
inc
push
add
shrl
fidivs
into
mov
mov
scas
pop
hlt
cmp
mov
and
lods
xor
js
push
lods
ret
fstps
mov
inc
add
mov
jge
push
pop
push
sub
ja
outsl
xchg
xchg
ret
ret
and
sub
in
sahf
js
sahf
popa
cld
movsb
dec
mov
add
mov
les
add
and
lcall
fcoms
fs
jns
inc
mov
dec
xchg
mov
xor
test
sti
popa
ret
outsl
and
std
lods
aam
mov
outsl
cmpsl
push
pushl
seto
sub
je
mov
add
mov
pop
mov
adc
adc
repz
mov
jl
push
push
mov
inc
pop
mov
ds
sahf
and
cli
lea
mov
jne
lret
mov
stos
or
int
int3
add
cmpl
gs
fsubr
jnp
xor
sub
xor
dec
shrl
sahf
cmp
fsubp
ret
sub
outsb
call
adc
cmp
test
scas
enter
test
cmpsb
int
call
imul
jb
sahf
cld
jns
movsl
in
out
push
aas
ja
xorl
push
inc
shlb
xchg
insb
and
loopne
xchg
dec
mov
xchg
lahf
inc
ret
bound
loop
enter
jne
sub
fsubr
fldl
add
pushf
push
lds
int
push
jge
push
or
test
aaa
sub
push
sbb
push
popa
inc
scas
xor
xor
cmc
test
nop
inc
mov
add
sbb
inc
ljmp
shl
mov
jo
cmp
pop
int3
aam
mov
xchg
mov
xor
loop
sub
lahf
jp
das
cmp
insl
xorb
pusha
pop
xchg
lds
and
call
lods
sbb
xor
pop
jmp
pop
aad
imul
out
push
jne
fbstp
pop
dec
cmp
ja
movsb
push
neg
xlat
sarl
sub
pop
push
xor
push
pop
adc
xchg
lcall
les
ljmp
ror
jmp
sbb
cmc
out
iret
aaa
stos
adc
mov
fwait
jns
cmc
inc
xor
ret
or
popa
imul
imul
and
cmpsb
push
fadd
cmp
sub
sbb
lods
xchg
imul
scas
ret
or
or
dec
or
sbb
cmp
lret
xorb
dec
cmp
push
cmp
fisubrs
insb
jnp
fisttpll
cmp
and
cmpsb
mov
outsl
push
decl
test
rcrb
idivb
pusha
jle
add
insb
mov
ret
dec
or
mov
pop
cmp
jne
lods
and
pushf
js
repnz
lods
cmpsb
leave
lods
ja
mov
mov
mov
dec
xor
xchg
fidivl
decl
mov
dec
cwtl
cs
mov
in
xor
testb
in
adc
pushf
fwait
loopne
scas
aad
cmc
shll
aas
pop
adc
repz
push
xor
adc
aaa
dec
jns
testl
sbb
scas
mov
mov
or
loop
movsb
rolb
dec
test
dec
adcl
mov
inc
es
jmp
jl
mov
and
mov
pop
mov
insl
lahf
sarb
ja
out
mov
mov
pop
jnp
rcrl
cmp
or
xchg
mov
sbb
rorb
divb
inc
mov
test
dec
xchg
sbb
xchg
and
push
push
daa
push
mov
hlt
out
mov
jp
and
sub
ljmp
pop
imul
push
fildl
mov
out
xor
ja
jle
jb
jle
push
or
insl
add
cmp
je
insl
stc
cwtl
stos
xchg
jae
inc
in
test
jmp
adc
xchg
sbb
push
dec
pop
ret
dec
sbb
inc
imul
popf
cwtl
push
test
mov
enter
shl
lret
dec
inc
sub
cmp
or
jmp
imul
xor
inc
xlat
jo
in
push
testl
movntq
push
je
xor
xchg
stos
lds
rcl
out
testl
mov
lds
sub
jmp
jl
cmpsl
mov
and
and
adc
xchg
cs
scas
mov
dec
fstpl
mov
xor
pop
lahf
out
popf
mov
dec
les
sahf
or
outsb
or
loope
push
xchg
pop
and
cs
test
mov
outsl
inc
cmp
mov
mov
test
xchg
nop
test
fidivl
adc
leave
mov
jecxz
mov
add
ror
fucomp
sub
std
dec
mov
fs
test
iret
js
insb
fistpll
aad
cli
xchg
or
pushl
inc
xchg
sbb
leave
rcll
out
addb
pop
pop
dec
cmpsb
xchg
mov
jb
sub
in
pushf
movsb
icebp
out
cmpsl
sub
and
scas
mov
and
insl
jnp
sbb
mov
lods
lea
or
push
cmp
pop
aaa
cmp
popf
and
je
xor
inc
add
inc
push
addr16
fnstcw
push
push
loope
icebp
mov
mov
test
sarl
or
mov
shrl
cltd
arpl
cmp
mov
insb
out
pop
jmp
insl
jo
sbb
leave
dec
add
jl
xchg
ret
push
scas
and
push
arpl
paddsb
incb
inc
inc
push
cmp
sub
pop
and
mov
pusha
mov
jnp
xchg
jle
cmp
addb
jbe
repnz
enter
outsl
add
lods
sti
fisubrl
faddl
fsubrs
insl
jns
mov
sub
xor
mov
or
pop
movsb
mov
subl
out
dec
sbb
sti
ds
jnp
inc
dec
cmp
lea
nop
sbb
dec
idivl
xor
pop
xchg
js
fldenv
shrb
out
jno
sarb
sti
cmpsb
mov
add
dec
pusha
xchg
and
lcall
mov
leave
lret
mov
cld
xor
pop
and
push
je
leave
mov
xchg
jmp
dec
push
xchg
loopne
add
mov
std
push
cmp
stos
jle
adc
icebp
out
fildl
and
aad
scas
mov
xchg
negl
sub
iret
jmp
dec
mov
out
jecxz
loope
mov
adc
mov
push
test
sub
push
stc
pop
xor
sti
jbe
pop
sbb
mov
sarb
mov
push
push
repz
mov
push
pop
jecxz
arpl
rol
dec
and
ljmp
pop
dec
fsubs
ds
aaa
cmp
push
xor
mov
pop
test
lods
cmc
cltd
xchg
dec
inc
jae
cmc
mov
lea
icebp
add
test
mov
sbb
mov
in
push
and
xchg
sbb
lods
inc
push
push
jmp
out
test
xor
mov
fistpl
jne
mov
fidivs
xchg
je
mov
push
mov
sarl
sbb
xlat
mov
and
jl
icebp
mov
xlat
push
xchg
loopne
and
add
mov
push
rorl
adc
lret
lahf
xchg
adcb
mov
and
push
adc
ds
and
and
dec
loope
dec
setb
push
push
popa
cmp
dec
adc
sti
fildl
mov
sbb
add
daa
ja
popa
leave
popf
pop
lcall
mov
out
mov
xor
fsubl
push
imul
xchg
ss
enter
stc
mov
xchg
sti
mov
fwait
movsl
mov
jl
pop
pop
cmp
call
sub
lods
dec
sti
mov
mov
jmp
or
jo
adc
sahf
and
and
lock
in
iret
jns
rolb
jns
in
xor
xchg
jns
stc
xchg
xchg
pop
and
mov
loope
xchg
test
dec
mov
mov
jbe
mov
lret
cld
inc
mov
sahf
pop
sub
push
adc
mov
jge
out
jmp
adc
sbb
fbstp
int3
sbbb
mov
ds
mov
jge
ret
movsl
pop
in
inc
sub
scas
fmull
mov
adc
add
lahf
or
loopne
insb
mov
out
push
or
scas
xchg
or
int3
dec
jbe
inc
push
mov
mov
dec
jnp
mov
inc
push
out
mov
nop
in
stos
inc
hlt
xchg
inc
xchg
xor
loopne
cmp
mov
stc
insl
or
add
int3
jnp
xchg
mov
push
jg
sub
mov
adc
in
cmp
movsl
outsl
int
xchg
inc
test
das
jp
dec
cwtl
addr16
dec
dec
xchg
insb
mov
cmpsb
jl
mov
setne
pusha
dec
movsb
scas
xchg
mov
push
out
mov
xor
prefetchw
adc
mov
data16
fistps
jle
inc
das
cmp
lds
lahf
dec
stc
mov
fs
out
orb
mov
pop
fimull
ds
jge
in
adc
in
iret
add
push
sbb
scas
xor
mov
xchg
xchg
das
paddw
mov
inc
jmp
repz
xchg
dec
add
adc
fwait
scas
es
shlb
mov
stos
or
setno
cmp
and
aaa
jnp
cs
jb
push
in
in
cmpl
test
fsubrl
jns
add
enter
sbb
add
push
aaa
ret
mov
stos
jb
les
mov
imul
mov
out
mov
add
mov
inc
adc
ror
jbe
into
scas
xor
xlat
hlt
es
xchg
or
sbb
bound
mov
out
mov
push
sbbl
mov
into
push
sub
shrb
jmp
and
hlt
push
sub
nop
subb
clc
ficompl
xor
mov
pop
ret
xor
mov
xchg
not
push
mov
pop
inc
test
out
dec
inc
xor
pusha
mov
sub
rclb
fs
pushf
in
bound
sub
sbb
stos
outsl
imul
cli
xor
mov
scas
mov
sub
mov
sbb
jg
subb
mov
stos
ljmp
cmp
mov
pop
pusha
mov
pop
dec
pop
movsb
xchg
inc
xchg
imul
fsubrl
pop
add
sub
sbb
adc
fists
push
sbb
jbe
movsb
and
and
inc
xor
adc
pop
cmp
and
fwait
dec
ret
xor
dec
pushf
and
push
repnz
push
push
addb
or
mov
aam
mov
div
shll
or
outsl
pop
sub
sub
mov
mov
sbb
mov
mov
cmp
push
mov
mov
xchg
sbb
mov
sbb
pop
xchg
pushl
push
push
cwtl
divl
ficompl
jbe
sbb
cmpsb
adc
pushf
scas
cmp
ljmp
insb
fisubrl
mov
cmp
inc
gs
nop
out
jnp
mov
les
pop
aad
je
dec
push
icebp
or
mov
xor
xor
incb
ret
js
xchg
nop
mov
ror
aas
gs
mov
mov
jnp
out
push
adc
sbb
lock
repnz
add
and
cmpb
call
jbe
mov
ret
cs
pop
insb
sahf
inc
inc
xor
mov
imul
or
mov
adc
iret
ss
das
or
sub
sbbb
inc
or
shll
out
int
xlat
ficompl
insl
xchg
pop
push
ret
cli
mul
sbb
cmp
iret
insb
ret
add
in
xchg
jge
sarb
xor
loop
fisttpll
ja
jnp
sarb
ljmp
jp
mov
ljmp
push
jns
popa
in
fdivr
adc
mov
dec
dec
adc
bound
xor
test
mov
and
fisttpll
js
insb
test
pop
adc
sbb
mov
repnz
popa
dec
bnd
imul
ljmp
mov
and
jmp
mov
rclb
cmp
mov
inc
xchg
imul
in
ja
das
adc
cld
stc
lcall
mov
push
mov
mov
ss
notl
scas
jp
xchg
in
pop
mov
mov
jb
enter
pop
mov
pop
xor
mov
xchg
cmp
stc
inc
and
mov
sub
xchg
sbb
outsb
repz
ret
sub
stc
or
add
data16
lds
sub
inc
mov
push
push
sti
cmp
mov
dec
addr16
and
jmp
mov
xor
inc
sub
jnp
xlat
cmpps
mov
fdivs
imul
pusha
jbe
imul
cbtw
lods
lea
add
mov
mov
sarl
adc
jo
imul
jbe
repz
jb
notl
out
push
in
pop
sub
cltd
ret
sub
pop
xlat
sub
inc
popf
sub
sbb
jle
push
movl
push
push
repnz
fnstsw
mov
fcmovu
in
fisttpll
lds
ret
rcll
pop
mov
nop
pop
cmp
xor
out
mov
jle
push
ret
vmulsd
mov
cmp
in
out
inc
stc
in
insb
pop
xchg
or
mov
pop
arpl
jg
test
loopne
in
xor
mov
dec
clc
dec
fs
sbbl
lods
daa
je
jno
int
std
repz
mov
mov
pop
hlt
jecxz
insb
imul
outsl
add
mov
stos
cmc
adc
push
xchg
jmp
mov
insl
jnp
incl
stc
insl
bound
stc
pop
pop
inc
lock
cmp
faddl
jb
mov
push
push
push
popa
lahf
pop
adc
ljmp
cmc
stos
dec
push
sahf
jnp
dec
xor
sbbl
dec
fstl
mov
sbb
jmp
or
mov
mov
and
inc
test
cltd
add
bound
roll
mov
cmpsl
mov
movsl
mov
psubsw
shrl
pusha
into
push
adc
and
fistl
xor
ds
sbb
jne
mov
test
je
mov
loopne
mov
pop
pop
lret
out
mov
jns
cmpsb
mov
ficompl
adc
mull
andb
aas
sub
sbb
dec
jge
xor
sub
lcall
in
dec
and
dec
sbb
inc
and
or
add
jae
movsb
jae
shr
out
xchg
pop
jnp
xor
sub
cmp
in
fidivrl
das
jmp
imul
cltd
xor
rcrl
inc
lahf
fwait
cmp
or
addr16
push
pop
stos
shr
divl
or
dec
popf
pusha
xlat
jbe
xchg
shr
insl
cltd
jae
sbbl
push
lock
roll
xchg
frstor
push
movsb
pop
imul
mov
or
mov
push
sub
sbb
inc
mov
inc
sub
jns
hlt
lds
clc
add
adc
fadds
xchg
popf
xchg
jmp
cmp
int3
in
mov
xchg
inc
daa
mov
iretw
jo
mov
icebp
or
mulb
pusha
sub
lock
and
sti
icebp
cld
lea
xor
adc
push
push
fcmovu
sbbl
push
pusha
pushf
es
insl
sbb
das
in
int
xchg
pop
mov
testb
add
pusha
aad
leave
imul
movsb
pusha
loopne
shlb
push
inc
jo
lock
mov
int
jns
inc
dec
in
pushf
lods
add
mov
fnstenv
mov
addr16
ja
roll
ljmp
add
cmp
pop
or
pop
pop
shl
lods
dec
cmpsb
cmp
inc
and
lcall
mov
jp
pop
or
adc
mov
sub
movsb
or
rol
inc
mov
xor
xchg
push
daa
dec
cld
jmp
sbb
dec
out
cmc
mov
mov
jae
sbb
jmp
mov
icebp
mov
sbb
call
sub
dec
sub
inc
iret
lea
cmp
mov
cltd
jmp
pop
aad
and
andb
xchg
or
test
push
imul
insl
mov
loope
jl
or
xchg
pop
in
into
fldenv
shr
insb
ja
cmpsl
adc
jns
mov
sub
add
mov
push
hlt
repz
or
nop
push
fwait
out
addl
jmp
mov
push
xor
add
push
jb
into
cmpsb
xor
mov
aam
xlat
dec
dec
sbb
pop
xlat
dec
sbb
scas
adc
cmpsb
push
sbb
push
dec
sub
push
xchg
push
aad
ss
outsb
pop
sub
aaa
jnp
insb
out
lret
icebp
xor
mov
sbb
pushf
jecxz
in
push
in
or
mov
into
lea
lods
push
scas
or
jb
shrl
or
mov
dec
sti
daa
enter
and
adc
inc
dec
push
ja
in
and
mov
xchg
jne
fcoms
adc
mov
movsb
shlb
stos
js
sbbl
jecxz
lret
mov
imul
jmp
or
push
int
popa
push
dec
rcl
dec
cmp
aas
mov
mov
jge
cmp
push
into
inc
xchg
mov
cli
test
adc
dec
or
and
jmp
lds
mov
stos
cld
xor
push
lahf
cmp
pusha
rcrl
mov
push
fs
jo
shll
sbbb
xor
mov
test
gs
xor
sbb
cmp
pop
xchg
xor
ss
lea
xchg
adc
adc
inc
sub
jecxz
and
es
and
and
mov
decl
fsubl
adc
aad
xlat
test
xorb
loope
hlt
into
cmpsb
lahf
pusha
jge
repnz
jbe
jmp
push
jp
inc
mov
stos
cli
sub
fnsave
js
xchg
sub
xchg
mov
stos
call
test
add
lea
pop
add
aas
adc
jecxz
ret
fsubl
cmp
fldt
or
inc
and
xor
push
dec
push
lcall
lret
repnz
mov
inc
cwtl
maskmovq
testl
dec
ljmp
jmp
pop
jecxz
movsb
xchg
mov
jecxz
hlt
aas
cmp
imul
data16
sub
adc
mov
xor
sub
jecxz
cmp
push
sbb
xchg
jne
lock
cmp
xor
fsts
movsb
push
sub
inc
in
jecxz
xor
cmpsl
jb
rorb
ds
icebp
pop
js
inc
sub
or
inc
pop
inc
je
xlat
fdivl
mov
out
add
pop
ds
add
push
mov
xchg
es
stos
jbe
push
movsl
mov
in
ljmp
push
movsl
fs
pop
jg
imul
cmp
jo
lods
movsl
cmc
cmc
mov
fists
fwait
and
mov
jb
fimuls
pop
mov
nop
mov
fcompl
adc
push
addb
das
cwtl
out
ficoms
jl
mov
sub
adc
jge
js
adcb
insl
mov
aas
addr16
mov
repnz
fcmovnu
or
int
pop
shrl
je
loop
push
mov
xchg
fdivrs
out
or
inc
mov
outsl
test
scas
stc
sbb
push
mov
popf
rorb
in
test
push
xchg
pop
dec
inc
aad
xchg
out
mov
fcmovu
pop
popa
andb
adc
scas
pop
fdivr
dec
insl
insl
cmp
jle
pop
enter
inc
mulb
pop
or
jb
cmc
sbb
loopne
adc
data16
hlt
sub
lret
out
inc
shll
pop
xlat
lret
iret
leave
dec
aas
adcl
in
scas
jp
jecxz
cmp
loopne
sbb
es
push
sarb
push
outsb
aad
repz
pop
jecxz
inc
lret
jo
std
cmc
in
pop
jle
cmp
jnp
sub
insb
icebp
das
imul
sub
hlt
add
push
lret
inc
lea
shrl
fcmovnu
icebp
cltd
sarl
loopne
mov
adc
add
jmp
sete
jae
add
push
pop
ret
std
mov
xor
jg
jbe
jbe
ret
fadds
mov
sbb
inc
or
ja
lret
adcb
pop
dec
xchg
lds
outsb
rcl
sbb
shlb
push
adc
popf
and
and
cs
mov
xor
jge
sub
sbb
jle
inc
mov
addr16
in
pop
mov
jmp
sub
pop
divl
fmuls
mov
sbb
mov
icebp
ja
cs
pop
mov
xchg
cmp
or
lahf
mov
mov
mov
xor
mov
int3
cltd
lock
pop
stc
jne
mov
push
dec
testl
or
gs
sbb
dec
fimuls
add
stc
mov
sbbb
ficompl
cmp
mov
xchg
and
sub
nop
xchg
and
sub
push
pop
pushf
insl
cld
mov
jge
cmp
mov
xchg
pop
lods
movsb
aas
cmp
cli
arpl
icebp
dec
loop
je
addr16
add
sbb
or
outsl
xor
ficompl
adc
scas
scas
jno
sub
mov
xlat
pop
pop
clc
aaa
xor
mov
mov
lret
aaa
push
repz
add
and
adc
or
aas
push
jle
adc
imul
pop
sti
inc
dec
mov
mov
cmpsb
cmpsl
mov
mov
in
std
or
loope
xchg
call
push
jl
out
jecxz
add
aam
or
sahf
lock
fwait
in
shrb
js
xchg
sub
cmpsl
adc
rol
leave
and
fdivrs
test
or
jg
lret
mov
in
jle
push
adc
loope
push
inc
mov
fildl
dec
shrl
clc
cli
test
aad
dec
mov
cwtl
lret
orb
out
xchg
je
pop
popa
popf
faddl
sahf
pusha
sahf
sbb
pop
aas
push
mov
xchg
inc
push
ja
movsl
xchg
mov
sti
mov
and
outsb
daa
notb
dec
negl
mov
mov
adc
jmp
mov
mov
aaa
jnp
mov
and
and
leave
movsb
xor
je
mov
jbe
das
jne
fsts
xor
cmpsb
push
stos
jp
adc
sbb
mov
mov
imul
jnp
rorl
es
test
dec
bound
insb
outsb
jp
ficoml
mov
pop
test
pop
insb
pop
mov
popf
mov
pop
ret
mov
loop
scas
push
mov
fdivs
cld
pop
nop
pop
dec
dec
xchg
cs
les
cwtl
jae
sbb
shrl
mov
cmp
and
movsl
flds
and
mov
pop
add
push
adc
xchg
into
jns
andl
scas
add
sbb
gs
jne
inc
in
mov
punpcklbw
stos
sub
sbb
arpl
aam
xor
bound
test
or
sbb
and
cmp
xchg
and
scas
call
pop
and
or
gs
in
hlt
movsb
loope
pop
js
out
jecxz
dec
es
fwait
and
push
push
mov
dec
push
add
pop
cs
mov
mov
and
mov
mov
int3
mov
rorb
fadd
mov
dec
and
pop
je
xor
and
subl
cmp
add
mov
ror
out
test
cmp
sbb
add
jbe
add
scas
imul
mov
test
out
adc
cmp
mov
mov
sub
fisubrl
pop
jnp
ds
movsb
fnstcw
add
push
lds
xchg
add
fldl
imul
sub
xchg
and
inc
loopne
xchg
pop
scas
jae
or
dec
sbb
fbld
arpl
pop
sub
jg
sbb
idivl
adc
stc
push
das
data16
cmp
int
rcrb
xchg
test
mov
mov
cmp
adc
out
cwtl
cmp
pop
xchg
mov
outsb
mov
arpl
push
xor
push
stos
sub
push
pop
push
xchg
stos
pop
decl
mov
lret
and
into
pop
call
add
in
mov
daa
cmc
dec
std
xor
push
cmp
mov
sub
adc
ret
jo
pop
addr16
pusha
cwtl
orb
jl
or
das
jnp
out
push
js
xor
cmp
inc
adc
jg
mov
xor
fdivr
sub
mov
fldt
sub
cmpsl
pop
pusha
movsl
bound
xor
mov
adc
std
jbe
call
pop
mov
addr16
das
in
sbb
mov
arpl
into
int
ss
ret
mov
imul
ss
jo
ljmp
lahf
cs
inc
int3
repnz
and
movsl
popf
xlat
aaa
adc
lock
sbb
fldcw
mov
into
jg
push
jno
das
cmp
cwtl
mov
pushf
pushf
out
pushf
mov
dec
popa
dec
test
ja
popf
mov
lahf
daa
xor
mov
popf
cmpsl
fisubs
jo
or
dec
aam
add
mov
and
sub
push
dec
test
cmp
aad
addr16
or
jmp
imull
scas
jo
dec
out
dec
and
or
iret
add
mov
out
imul
cmpsb
xor
and
mov
mov
and
leave
jg
sbb
addr16
fwait
xchg
cmp
sbb
or
adc
push
and
aam
mov
mov
scas
pop
xchg
sarl
dec
push
inc
xor
jg
imul
ret
fcoml
cmp
aad
push
mov
xchg
jmp
andl
sub
insl
roll
ja
mov
push
fs
mov
rcl
repnz
mov
movsl
inc
xchg
adc
cld
push
xor
mov
cmp
inc
bound
cmp
test
sti
std
dec
xor
xchg
es
dec
je
and
test
cmp
mov
cli
fmuls
xor
push
lcall
outsl
mov
mov
push
adc
lods
jo
xchg
shlb
add
sahf
int3
cmp
pop
je
or
push
test
in
or
mov
dec
push
mov
add
cli
push
add
fstpl
stos
in
insb
jge
xchg
loope
daa
out
loopne
mov
sbb
xlat
stc
fmull
pop
je
in
mov
cmp
das
shrl
mov
mov
scas
jne
in
or
adc
scas
rcll
sbb
in
les
aas
mov
push
xchg
aam
fsts
pop
push
dec
and
dec
arpl
gs
push
xlat
xor
lods
cli
cld
and
xchg
and
imul
std
and
xor
sbb
push
test
into
push
push
in
jb
pushf
add
adc
inc
push
jecxz
jnp
cmp
inc
data16
pop
push
aad
test
inc
mov
aad
sbb
pop
sub
daa
je
fidivl
fstpt
jnp
pushf
jne
sbbl
loope
mov
sbb
imul
mov
scas
aam
out
sbb
movl
std
aam
and
mov
jmp
mov
add
pop
jl
incb
stos
cmp
sti
mov
fisubl
push
leave
xor
mov
sahf
xor
add
lock
jbe
movsb
shrb
mov
icebp
pop
jmp
push
scas
push
in
icebp
sbb
sub
jp
cmp
dec
jno
cmp
inc
mov
jnp
adc
dec
leave
bound
pusha
insl
sub
mov
pop
mov
lds
pop
adc
out
in
xor
and
or
jle
std
lds
mov
add
adcl
adc
or
sbb
fldt
pop
dec
jnp
jbe
pop
jmp
test
clc
mov
lahf
into
lcall
mov
insb
roll
mov
inc
lds
aad
ja
push
scas
rclb
adc
icebp
ret
movsl
push
sbb
cld
jns
push
sbb
jecxz
xacquire
inc
cmpsl
daa
or
jge
jg
je
lret
mov
insl
jle
aad
mov
movsl
pop
add
and
aaa
jg
es
jmp
adc
inc
lods
data16
cmp
add
hlt
addl
lods
xchg
add
sbb
xor
shlb
dec
out
cmp
inc
shrb
xchg
sub
mov
cmp
ds
pop
mov
mov
jle
push
dec
push
mov
xchg
add
ja
ss
xchg
aam
dec
icebp
out
bound
js
shrb
dec
inc
sti
xor
decb
or
outsl
ret
ret
push
outsb
adc
push
adc
outsb
je
cmp
inc
inc
test
sub
xorl
sti
cmp
inc
cwtl
xchg
pop
xor
out
test
out
jl
or
scas
mov
ja
bound
mov
push
xchg
pop
cltd
mov
mov
xor
dec
xor
cltd
fildl
jg
push
inc
push
fcmovb
mov
cmpsl
cwtl
in
mov
adc
loop
mov
outsl
shlb
rcrl
and
sub
dec
jno
xchg
adc
out
jae
and
jmp
popf
cwtl
call
xlat
xor
into
mov
lret
sub
push
cmpsb
add
out
pop
xchg
ficoms
dec
pop
inc
and
dec
test
jl
and
add
dec
clc
pusha
and
jb
or
sti
or
sahf
jl
and
ds
pop
mov
pop
xor
ret
test
sbb
scas
pushf
and
push
stos
mov
push
test
cmpsl
bound
insl
mul
push
gs
sbb
jecxz
mov
les
xchg
test
icebp
xor
mov
jle
fidivs
lahf
pop
sahf
lock
fs
jae
jp
fcomps
insl
repz
inc
repnz
xlat
xor
fcompp
jge
cli
clc
jo
je
inc
dec
inc
out
or
enter
scas
dec
rcll
lahf
mov
sbb
es
repnz
dec
es
cltd
popf
sbb
lock
add
fisttps
outsl
je
pop
mov
pop
loop
into
push
cld
push
insl
sub
add
sub
icebp
and
test
inc
or
dec
cmp
ja
xchg
scas
xchg
mov
mov
lahf
fwait
cltd
pop
lds
or
stos
popa
mov
test
iret
stos
and
mov
fbld
xchg
rcrb
push
push
shr
ret
shr
js
pusha
cmp
dec
outsl
mov
pop
pushf
mov
xchg
lcall
push
jne
or
sbb
and
mov
bndldx
sbb
and
sub
adc
mov
push
pop
mov
add
cmc
dec
adc
sbb
xor
and
imul
xor
jge
add
movsl
xchg
xor
icebp
xchg
pop
mov
and
or
ljmp
mov
push
mov
pusha
mov
mov
das
or
fdivrp
dec
mov
pop
daa
ret
lds
repnz
or
pop
in
or
mov
dec
bound
dec
shl
popa
and
ds
mov
pop
push
out
adc
stos
fistps
jae
cmp
pop
xchg
jo
mov
lcall
jmp
inc
sbb
jg
inc
mov
cmp
fs
sbb
insb
out
xchg
cld
fdiv
mov
mov
xor
push
and
scas
icebp
repz
hlt
sbb
xor
in
movb
lahf
lahf
pop
int
ret
test
and
mov
adc
in
mov
enter
pop
xor
cmp
addr16
pop
inc
imul
adc
cmp
pop
or
mov
pusha
cmc
jae
mov
push
sub
shrl
dec
fadd
mov
mov
or
sbb
std
xor
mov
mov
xor
and
je
leave
add
cmp
popa
inc
and
mov
add
out
mov
jnp
lock
xchg
mov
add
xchg
jle
mov
repnz
mov
lods
fbstp
sub
and
loopne
rclb
xor
lods
xchg
dec
xchg
fucomip
jns
ret
mov
test
mov
xchg
sbb
push
iret
mov
adc
and
stos
adc
jecxz
lahf
jbe
push
cmp
adc
push
loopw
rcrb
mov
push
je
mov
sub
xor
addl
cmp
dec
add
push
into
and
rcl
adc
inc
xlat
scas
xlat
ss
in
cld
lret
vprotq
lods
xchg
cmp
sbb
rcr
adc
in
xchg
lock
dec
test
shrb
and
orb
daa
out
xor
adc
lcall
shl
fs
aas
push
mov
xchg
cmc
es
and
les
xchg
push
cli
mov
inc
xor
sbb
inc
scas
add
test
dec
clc
pop
cmc
out
jno
cmc
fs
out
ret
mov
in
adc
jns
test
ret
pop
dec
push
negl
xchg
cltd
jecxz
clc
push
xchg
inc
das
ret
and
or
lret
sahf
addb
jle
cltd
push
loop
out
lea
and
dec
and
imul
sbb
adc
push
xchg
sbb
mov
and
xlat
and
scas
nop
push
imul
jo
dec
test
sbb
push
ror
push
rorl
aaa
mov
mov
repz
int3
cmpsl
sbb
xchg
out
sti
mov
jno
cmp
gs
decb
push
scas
out
mov
jae
push
mov
sub
roll
dec
out
testb
mov
sbb
imul
jae
mov
jns
fwait
out
into
xchg
push
sub
pop
loope
jmp
aad
lods
in
add
xchg
or
or
ret
ret
inc
or
stc
out
idivl
xchg
xlat
aad
push
es
insb
out
xchg
test
and
and
cmp
movsb
les
push
cli
push
icebp
sub
push
shl
mov
out
movsb
xor
sub
mov
adc
imul
mov
push
lea
jecxz
or
mov
repnz
pop
xor
mov
andl
dec
adc
pop
push
sar
cmp
pop
and
repz
add
mov
inc
clc
mov
decb
mov
mov
test
mov
sbb
or
pop
loopne
cmp
dec
jb
outsl
sti
push
push
fdivs
mov
cli
push
insb
push
popa
ljmp
stos
inc
iret
mov
xchg
in
pop
shll
add
divl
mov
ds
dec
outsb
add
sahf
jle
mov
pushf
pop
movsb
cmp
pop
xchg
inc
xchg
add
js
dec
xchg
push
lret
push
cmp
clc
into
cmp
andl
mov
je
nop
mov
or
dec
stc
xor
aaa
js
ja
dec
cmp
mov
lds
shll
dec
pop
jnp
pushf
daa
lret
mov
mov
sub
cmp
sbb
fcom
fs
jmp
cmpsb
inc
cli
mov
inc
push
inc
jmp
es
jbe
fnstenv
imul
lret
test
divb
mov
fimull
ret
rcrl
filds
rolb
ljmp
adc
lea
adc
pop
loop
sub
jae
cmc
mov
mov
inc
mov
in
int
int
dec
xor
imul
jle
popf
push
sub
lcall
or
add
fstps
cltd
les
pop
mov
pop
fwait
addb
mov
xchg
xchg
jl
data16
imull
jecxz
xor
arpl
cmc
mov
jnp
pusha
stos
jb
addr16
mov
inc
aas
fisubrs
fwait
repz
xlat
push
dec
jno
lds
jb
iret
rorb
fadds
mov
je
mov
xor
nop
inc
mov
enter
or
sub
xor
and
rorb
adcl
pop
shlb
sbb
jno
jmp
mov
push
pop
and
popf
cmp
mov
jecxz
push
pop
mov
setl
cli
mov
fs
insb
addl
adc
ret
adc
imul
mov
push
and
jg
xchg
addr16
stc
sub
enter
xchg
mov
sub
pop
rclb
insb
stos
das
adc
aad
stos
iret
rcll
call
imul
xorb
mov
out
add
mov
mov
sbbl
fists
pushf
jmp
ret
dec
test
dec
push
sbb
enter
jg
fcoml
jle
xchg
jne
data16
cmp
mov
push
out
addl
mov
mov
fs
or
push
mov
fdivrs
clc
stos
push
es
frstor
fwait
iret
rcl
outsb
xchg
lods
fisubrs
jnp
inc
adc
shll
and
or
xor
cmp
in
sbb
das
mov
sbb
sub
xchg
outsb
inc
lods
mov
lcall
pop
test
push
outsb
lods
es
rcl
sbb
outsl
repz
sahf
mov
add
popa
jno
cli
jb
scas
mov
xlat
arpl
mov
mov
or
stc
sub
sub
push
dec
push
inc
cmpsl
fwait
push
addr16
xorb
mov
sbb
mov
mov
mov
xchg
jno
xor
push
nop
shlb
shlb
mov
sarb
lods
repnz
inc
dec
sub
jae
cmp
jg
adc
fmull
cmp
movsb
pop
push
jmp
mov
gs
and
cmp
push
mov
mov
sbb
mov
dec
ss
mulb
lds
mov
call
sub
xchg
push
in
cmp
xor
xchg
mov
in
push
lds
mov
fdivrs
lock
xrelease
push
push
xor
pop
pop
pushf
inc
xor
sarb
nop
pop
dec
pop
xchg
push
sbb
xlat
neg
xchg
in
in
aad
sbb
inc
inc
ret
pop
cltd
push
adc
sub
repz
add
mov
cwtl
call
cmp
data16
out
pop
push
int3
mov
sbb
jns
adc
mov
dec
ret
out
and
xchg
mov
mov
lcall
fsubrs
mov
mov
mov
cmp
cmp
cs
sub
mov
sti
fimull
ss
bound
xor
repnz
arpl
shl
mov
pusha
out
cmp
int
repz
loopne
xchg
popa
lods
xlat
jno
xor
xlat
test
pop
or
mov
lret
out
mov
out
mov
dec
lret
pop
ds
cmp
iret
jne
adc
into
stc
inc
xlat
sahf
dec
lods
jmp
into
imul
lret
test
mov
test
cltd
mov
pop
adc
loopne
mov
mov
add
push
pavgw
lret
test
les
xor
pop
jmp
ja
int3
mull
mov
data16
mov
xchg
adc
test
outsl
push
jnp
push
adc
incb
hlt
cmc
xor
cmp
repz
push
inc
aas
std
les
adc
lret
scas
insb
sub
inc
push
loope
jns
das
jl
sub
or
or
inc
adc
push
nop
in
jg
adc
xor
dec
cmpsl
clc
cmp
jmp
outsb
mov
inc
pushl
jnp
inc
xchg
adc
pop
jmp
adc
jbe
jnp
and
add
cwtl
push
out
enter
sbb
xor
call
lods
mov
pop
or
repz
repz
mov
push
lods
jmp
outsb
sub
insb
jbe
sub
neg
jmp
fscale
push
jns
pop
mov
clc
lods
cli
and
hlt
pop
xor
lods
mov
adc
into
and
fstpt
cld
subl
icebp
and
pop
jmp
dec
sub
jmp
icebp
movsb
push
cmp
and
ss
shrb
sbb
lods
imul
mov
adc
adc
xlat
or
cmp
and
call
imul
addl
in
imul
lea
loopne
cmp
loope
outsl
ss
jb
imul
add
add
int
nop
fs
pop
data16
icebp
and
mov
sbb
mov
xlat
dec
push
popf
lret
lret
lds
fcoms
pop
lret
xorl
push
dec
push
sub
lahf
in
or
push
insl
rcl
cmc
sbb
sbb
fistl
cmp
jb
mov
push
sbb
gs
fcmovb
jne
and
adcb
mov
mov
xor
lret
aas
mov
dec
loope
bound
jge
jge
fcomip
push
inc
dec
xchg
arpl
cltd
int
push
sbb
into
test
xor
ss
or
jbe
out
int3
popa
jno
cli
mov
mov
jg
ret
push
icebp
cmc
mov
lock
push
push
dec
mov
and
jmp
or
inc
pushf
subb
mov
push
pop
jg
int3
cwtl
stc
push
xchg
call
xor
ret
lods
cmp
jne
aam
mov
aas
or
leave
ljmp
roll
pop
sub
sbb
xchg
mov
and
cmpb
mov
mov
mov
sti
lods
xchg
cli
push
aas
scas
push
xchg
pusha
pusha
cmpsb
jecxz
mov
sbb
mul
shlb
movsl
cmpsb
mov
aas
and
fisubl
cmp
shrl
jecxz
lret
adcb
push
dec
ret
mov
rcr
mov
mov
hlt
inc
arpl
adc
cmc
daa
bound
mov
mov
or
mov
cmp
adc
cmpsl
mov
mov
mov
out
cs
xor
inc
cmp
mov
adc
xor
push
mov
call
push
pop
or
add
mov
loopne
and
xor
jp
ds
mulb
add
add
stc
popl
jp
sbb
movsb
push
repz
sbb
je
push
inc
cwtl
adc
and
sub
push
enter
inc
in
fsubl
jbe
inc
jle
sbb
inc
lcall
mov
or
pushl
loopne
mov
push
cltd
xor
sbb
and
test
daa
pop
and
cltd
add
mov
mov
leave
and
out
incb
dec
cmp
ja
xchg
gs
lcall
jb
mov
inc
std
mov
jecxz
sti
fincstp
pop
shl
push
es
shr
sub
add
mov
testb
cmp
sbbl
mov
adc
shlb
pop
cmp
sbb
js
in
sahf
in
mov
jae
into
jae
lcall
cmp
ret
xor
in
inc
xchg
adc
aas
jge
dec
dec
push
idivb
test
pop
jecxz
xchg
in
xchg
mov
pop
das
test
push
and
fnstenv
dec
inc
xchg
or
jns
dec
repnz
adc
mov
ret
jl
cmp
lret
dec
std
or
cmc
lds
mov
popf
mov
adc
nop
xor
rorb
xchg
xor
mov
mov
or
add
push
scas
xchg
mov
mov
sbb
pop
nop
int3
xchg
jnp
shll
hlt
mov
es
addl
rcr
adc
and
xchg
and
xchg
ss
lds
jle
lcall
mov
dec
push
repz
nop
mov
cmpb
lcall
nop
inc
xlat
popa
mov
sahf
cmpsb
xchg
mov
xor
adc
mov
mov
psrld
inc
pop
movsb
lds
scas
test
cs
cli
call
movsb
subl
std
subl
dec
arpl
insb
jecxz
inc
mov
jo
in
and
fwait
neg
xchg
sub
push
sbb
sub
aad
mov
add
push
int3
loope
mov
movsb
sbb
ret
out
xchg
fstpt
adcl
ror
mov
fldenv
out
int
sub
cmp
pop
loop
cmp
push
ljmp
in
andb
xor
push
and
xor
xchg
jp
in
in
daa
add
imul
leave
in
mov
xor
ret
addr16
add
lret
cmp
xchg
push
jp
adc
data16
xor
jnp
xchg
inc
sub
mov
clc
and
adc
xor
lret
inc
pop
insl
mov
dec
adc
or
out
cmpsb
mov
push
cmpl
mov
lret
dec
jae
pushf
dec
stos
sub
imul
sub
imul
mov
fildll
mul
push
test
cmp
cwtl
aad
stc
push
xchg
xchg
call
fcoml
mov
or
jbe
cmp
cmc
and
xor
lcall
outsb
insb
xor
adc
and
lea
out
xchg
mov
lcall
dec
push
hlt
add
jl
arpl
pop
mov
shlw
aaa
mov
sarl
push
pop
lea
inc
dec
mov
push
fisttpl
jmp
inc
scas
aaa
cmp
xor
cmp
jle
push
les
lret
mov
mov
sbb
xchg
aas
jne
movsb
cmpsl
xchg
test
dec
jbe
test
mov
sbb
hlt
test
pop
mov
dec
shrb
and
call
into
sbb
subb
lcall
push
aas
call
mov
cmp
jmp
cs
out
icebp
mov
sub
in
lahf
outsl
into
cmove
rolb
push
pop
stc
sub
lods
and
hlt
rcr
mov
pop
mov
push
xchg
lret
leave
ficoml
cld
aas
scas
sub
xchg
cs
scas
lcall
mov
lahf
add
jecxz
xorl
sub
jae
add
adc
jge
xor
call
test
sbb
test
pop
lds
dec
adc
sbb
ljmp
inc
xlat
popa
cwtl
bound
and
add
mov
test
inc
sbb
clc
pushf
shr
pushf
pop
int
xor
push
and
mov
loop
cmp
dec
icebp
aas
movsl
mov
lahf
and
scas
setle
dec
enter
mov
xlat
aam
dec
stos
adc
push
xor
sub
ret
dec
xchg
icebp
or
mov
call
out
fsubl
xchg
dec
js
jb
movsl
ficoms
cli
imul
add
sbb
mov
pop
daa
adc
sub
or
inc
xor
rol
adc
popf
cmp
mov
bound
sbb
push
loop
sub
mull
mov
lret
adc
div
cs
jno
out
xlat
stos
and
rol
std
lret
roll
iret
mov
fs
cmp
xor
cwtl
stc
sti
mov
call
pop
sbb
hlt
and
stos
lcall
jmp
cli
jg
xchg
mov
mov
push
cmpsl
mov
rol
and
nop
mov
xchg
xchg
les
inc
fimuls
les
xchg
paddw
sahf
xchg
xchg
mov
push
xor
push
xor
mov
pushf
bound
xchg
movsb
inc
mov
lahf
sbb
popw
negl
xor
mov
push
loope
addb
jae
jmp
clc
sub
fsubr
mov
aad
sub
hlt
mov
mov
into
and
lret
adc
clc
sbb
push
subb
lcall
jge
mov
out
adc
jp
push
int
scas
lods
mov
into
mov
cmp
sub
mov
nop
and
xchg
out
ds
jecxz
mov
test
lods
inc
or
push
test
repz
lret
and
xchg
sbb
inc
xchg
cli
cmc
imul
pop
cld
popa
ds
push
sub
in
xchg
push
or
outsl
fsub
cmp
inc
loope
and
fidivrs
push
sbb
xchg
mov
das
fistpl
pop
inc
mov
or
sub
test
adc
or
shlb
jle
dec
jno
jb
bound
mov
fnsave
add
call
add
mov
cmp
cmp
mov
lcall
pop
leave
or
das
jmp
jae
and
dec
adc
xchg
aam
nop
push
pop
bound
cs
stc
push
and
xor
into
dec
mov
popa
in
js
sub
fmulp
testl
daa
jmp
pop
jbe
or
icebp
or
push
add
xchg
sarb
iret
stos
rcll
notb
cmpsb
int3
push
sub
shrl
sub
popa
xchg
mov
adc
outsb
imul
adc
add
dec
push
xchg
sbb
adc
cmp
jae
je
fidivl
jbe
add
mov
popa
imul
pop
lea
fadd
inc
sub
pushf
adc
add
test
add
ds
adc
cmp
popf
popa
arpl
or
push
into
lods
inc
adc
lahf
or
shlb
lods
adc
mov
lret
fadds
gs
adc
mov
shrl
outsl
movsb
add
test
pop
daa
in
decb
mov
loope
and
sbb
lea
mov
jmp
xor
out
popf
or
cli
clc
cs
ret
jecxz
mov
int3
pop
cltd
ds
gs
std
xor
mov
pop
jge
insb
and
mov
stos
mov
jno
xor
fisttps
jle
xchg
add
inc
dec
xchg
sbbl
cld
mov
xchg
jbe
push
sar
loopne
push
loop
leave
jle
inc
js
enter
xlat
xor
jne
inc
dec
push
mov
push
outsb
dec
repz
mov
je
xor
fiadds
add
in
sub
fs
and
call
mov
je
aad
idivl
pop
mov
push
inc
inc
mov
pop
mov
scas
mov
mov
mov
in
fsubs
ds
mov
shlb
mov
and
cmpsl
rcrb
inc
testb
nop
test
stos
pop
sarl
out
push
popf
loope
jnp
into
mov
inc
push
sarb
jbe
leave
in
mov
cli
ss
int
jmp
sub
push
sub
add
decb
cmp
and
push
out
js
mov
lahf
sub
pop
and
lcall
or
pop
adc
inc
lods
jo
pop
mov
and
fstp
push
je
aam
mov
dec
pop
lds
sbb
jge
hlt
ficoml
mov
bound
xchg
ror
movsb
mov
inc
jge
mov
int3
cmc
ljmp
ja
xchg
push
jl
add
pusha
push
fistps
mov
dec
insb
jmp
mov
test
sarl
or
mov
xlat
fisttpll
or
and
shlb
mov
cmp
in
sbb
lahf
andb
mov
insb
pop
testl
hlt
mov
cmp
pop
sbb
push
ja
xchg
jge
mov
mov
iret
mov
sub
les
je
fisttpll
mov
or
flds
arpl
inc
insb
fwait
pop
int
jle
imul
mov
push
cmp
enter
addb
mov
sub
cwtl
or
call
sub
mov
and
mov
rcrl
add
fistpl
iret
push
mov
inc
int
test
xchg
cwtl
inc
xchg
dec
test
push
andb
mov
push
loop
jb
outsl
scas
jae
cmp
daa
mov
and
sub
movsb
mov
push
enter
pusha
dec
stos
sbb
dec
mov
cmp
insl
pop
sub
fwait
xor
outsl
xor
xor
xor
sahf
push
in
cs
imul
in
out
hlt
mov
jo
cli
mov
les
xor
mov
les
cltd
mov
scas
scas
jnp
sub
fcomps
addr16
push
int3
adc
out
pop
xor
das
scas
sbb
fcmovnbe
andb
dec
outsb
jb
inc
jns
notl
lret
repnz
ds
mov
clc
mov
test
in
lcall
insb
int3
pusha
and
xor
mov
stos
xchg
jb
in
push
jnp
outsb
mov
lret
leave
loopne
pop
cmc
cmp
std
cltd
mov
add
and
fnstcw
imul
inc
test
aad
push
mov
push
nopl
fildl
pop
xchg
call
pop
or
xchg
or
dec
jge
mov
js
xchg
bound
sahf
xchg
cwtl
add
es
jmp
rorl
adc
sub
mov
pop
dec
sbbb
nop
scas
mov
lods
test
pop
pop
mov
insb
push
ds
bound
sti
inc
in
shrb
mov
arpl
das
mov
and
push
inc
push
aam
dec
sub
jg
popf
pop
mov
push
leave
rclb
mov
lock
jo
push
in
jmp
imul
add
mov
mov
repnz
loop
loop
pop
push
fldcw
adc
and
or
sub
or
cmp
loope
push
jmp
iret
and
cmp
test
ret
dec
popa
sub
rorl
das
bound
fsubr
pusha
mov
stos
or
sub
add
call
push
xchg
stos
xchg
mov
aaa
or
inc
xorb
inc
in
mov
fimuls
shrb
push
mov
mov
dec
push
out
repz
loop
pop
mov
gs
imul
jmp
jo
ja
pop
iret
xchg
push
or
lock
jns
cmp
out
scas
out
add
or
sahf
js
ret
mov
leave
std
sbbb
push
pop
sbb
mov
outsb
insb
pushf
repz
sub
enter
mov
adc
pop
icebp
dec
leave
lock
fsubr
sbb
icebp
in
aas
dec
outsb
mov
sub
aam
js
rolb
movsl
fnstsw
or
je
bound
je
jbe
out
cmp
add
les
roll
out
rorb
push
fstp
test
sahf
hlt
mov
sbb
pop
imul
into
cltd
lret
xchg
lret
or
out
dec
or
xorl
ret
fistps
jmp
xor
test
sarl
das
xor
into
mov
adc
popf
jne
jae
jge
jno
and
xor
xchg
push
addr16
sarb
aaa
cmp
sub
fwait
push
pop
add
pop
mov
pushf
sbb
fadd
and
cmc
push
pop
sub
loop
icebp
stos
or
fisubs
add
xor
loope
and
inc
repnz
cmp
shll
mov
mov
push
pop
xchg
int
jne
fldl
movl
hlt
pop
loop
aam
flds
repz
ja
jecxz
lret
mov
xchg
jae
push
je
push
mov
mov
mov
sbb
add
mov
lock
clc
sub
cmp
dec
lock
xor
shrb
xor
and
xchg
dec
stos
or
test
mov
ret
pop
mov
rolb
ja
enter
repnz
sbb
ret
pcmpeqw
push
mov
sub
xchg
insl
push
mov
adc
cltd
sbb
shlb
in
jae
test
mov
mov
fisubl
push
test
pop
xor
or
mov
xchg
gs
xor
cmpsl
jae
in
lods
push
mov
sahf
insb
jb
and
mov
dec
out
jo
inc
jecxz
mov
mov
xchg
adc
xor
mov
nop
xchg
jae
adc
repnz
pusha
jecxz
dec
std
adc
jmp
xchg
push
xchg
pop
push
push
or
jns
and
and
or
scas
jle
push
shll
in
arpl
jge
shll
cwtl
jns
aas
sbb
push
mov
cltd
fcmovnu
dec
jnp
xchg
and
push
and
and
jbe
out
pop
popa
addl
incb
adc
in
test
mov
jns
add
dec
add
jo,pt
dec
cld
inc
mov
pop
mov
scas
inc
dec
jne
jg
loopne
jmp
ja
arpl
mov
leave
mov
fnstcw
mov
pop
pop
jp
add
add
inc
push
stos
push
lods
mov
in
mov
xor
dec
xor
fs
jp
sbb
adc
or
mov
or
push
mov
inc
mov
stc
cltd
or
in
incb
push
adc
dec
leave
popa
je
test
dec
inc
pop
cmpsb
mov
in
data16
jg
xlat
or
xor
xchg
ljmp
imul
push
popf
inc
lods
daa
dec
ds
into
movsl
xchg
cvtpi2ps
sub
mull
dec
lods
mov
movsb
xor
xor
daa
decb
aam
xchg
out
out
insb
insb
sti
mov
dec
mov
stos
sbb
stos
adc
jmp
sub
or
pop
sub
lcall
out
movsb
ja
inc
cld
push
outsb
xchg
inc
xor
sahf
or
sub
dec
rcrl
xor
ljmp
jae
sub
xor
fldt
clc
inc
in
inc
adc
in
mov
bound
sbb
daa
mov
mov
mov
inc
jl
or
pop
call
push
out
sub
ret
insb
out
cwtl
and
gs
cmp
je
mov
nop
in
inc
xchg
jnp
hlt
movsl
adc
inc
cmovnp
imul
mov
xlat
mov
addr16
ljmp
mov
es
jbe
mov
out
out
sbb
shlb
mov
inc
mov
dec
loopne
cmpb
jle
add
dec
mov
insb
fisttps
cwtl
mov
sbb
repz
push
or
dec
cltd
cmp
iret
pop
gs
ficoml
fistpll
clc
in
outsl
or
add
xchg
mov
pop
insb
pop
js
lea
es
data16
data16
aas
loope
xchg
cld
and
jne
aam
jbe
or
add
ljmp
xchg
in
add
lcall
lea
les
cmpsb
lock
out
push
adc
dec
mov
xchg
xchg
mov
sub
mov
stc
enter
lock
pop
mov
in
sahf
pusha
mov
shl
int
or
pop
pop
cltd
fsubl
mov
mov
xchg
xor
pop
fisubrl
sub
in
inc
xchg
mov
dec
sbb
sub
ds
mov
movsb
in
xor
out
push
out
cmp
pop
inc
jl
jmp
pop
pop
stc
push
push
in
inc
mov
lock
ret
movsl
mov
cmpsl
cmp
cmpsb
inc
stos
test
sub
aad
mov
mov
xchg
dec
push
sarb
sub
loopne
lea
fstpt
sub
xor
clc
push
push
cmp
shr
pop
ret
or
stos
in
call
jno
insl
or
and
in
mov
mov
push
push
mov
sbb
sub
std
cmc
and
pop
fmull
or
stos
int3
and
mov
movsb
push
in
xchg
xor
jns
mov
or
ja
fwait
sub
mov
adc
fcomps
mov
movsb
xor
daa
jmp
frstor
fcmovbe
popf
adc
cwtl
sbb
jg
clc
ja
jae
mov
xchg
sub
jmp
cmp
jbe
in
cwtl
mov
and
int3
clc
mov
dec
mov
incl
jle
ss
out
sahf
sub
insl
scas
push
push
dec
aam
nop
lret
in
mov
addr16
pop
inc
mov
sti
pop
sub
lods
xor
fwait
out
test
xor
adc
lret
in
cltd
jne
hlt
mov
push
mul
mov
sub
lds
jnp
rcrb
mov
sub
adc
add
sub
in
mov
pop
cmp
je
or
andb
dec
subl
das
sahf
inc
jle
cltd
fldl2e
inc
movsl
addb
pop
subl
xchg
jl
addb
or
lock
pop
shrb
cmp
or
push
push
mov
or
lahf
insb
icebp
lahf
sti
subl
and
dec
jne
cmpsb
stos
inc
cwtl
push
cltd
mov
test
jp
pop
cmp
lods
add
mov
pusha
jno
dec
push
fldt
adc
sbb
pop
and
outsl
pop
mov
xchg
and
dec
push
jge
mul
mov
push
mov
mov
jl
int3
data16
mov
push
xchg
sbb
je
and
sahf
cmp
imul
dec
movsl
aad
jg
hlt
addr16
xor
inc
lock
test
add
pop
stos
pop
scas
mov
fnsave
pop
mov
cmp
das
adc
stos
pop
fsubrs
popf
addb
fldenv
sbb
lret
pop
test
clc
or
dec
lahf
inc
dec
into
jle
das
pusha
or
movups
mov
jg
rolb
or
fld
or
or
pop
sub
push
leave
or
iret
arpl
test
out
push
mov
sub
ljmp
ret
sbb
xchg
add
loop
enter
inc
imul
dec
das
out
mov
inc
int
dec
jns
push
mov
or
xor
inc
stc
mov
test
mov
sbb
stc
dec
cli
xchg
jae
pop
mov
mov
pushf
cmpsb
push
loope
jle
adc
jnp
int3
sub
es
ja
xchg
mov
sub
scas
addl
jmp
dec
sbb
mov
lds
insb
dec
jle
movsb
addl
test
insb
xchg
xor
add
cmpl
mov
fcmove
outsb
push
add
pusha
jecxz
mov
and
ss
mov
add
xorl
xor
shlb
mov
hlt
sub
aad
or
jns
call
stos
or
jg
sbb
sti
jg
mov
push
jns
pop
fldcw
testb
ret
fisubs
ljmp
push
ret
sub
les
inc
lea
shl
and
inc
or
cmc
dec
xlat
clc
imul
jb
sbb
pop
faddp
lods
mov
sub
in
repnz
inc
and
subl
cmc
and
addl
mov
jo
adc
aas
iret
xchg
in
xor
or
cmp
sbbb
cwtl
cmp
sub
pop
xor
mov
sarb
loope
xorb
fistpl
sub
or
mov
adc
pop
inc
sub
es
hlt
add
pushf
clc
add
mov
decl
dec
jae
jecxz
xchg
sub
mov
je
xor
pop
and
and
adc
lahf
out
ffreep
push
push
mov
repnz
mov
jno
out
int3
jp
testb
scas
cmp
mov
jg
jl
aaa
enter
ret
push
cld
xchg
push
dec
stos
xchg
inc
push
sbb
and
lret
ljmp
and
pop
mov
out
push
or
lock
mov
dec
mov
jnp
inc
fldcw
cwtl
in
sbb
imul
out
clc
imul
insb
aaa
std
jmp
push
pushf
cmpl
ret
test
cmc
gs
sbb
mov
adc
pop
cmp
dec
sarb
test
push
pop
fcomps
lahf
push
aam
out
or
movsl
lret
out
scas
push
das
call
jecxz
mov
adc
inc
cli
ja
daa
mov
or
adc
subb
mov
pop
push
lods
mov
scas
jnp
xchg
sub
jecxz
jnp
add
mov
and
sbbb
mov
adc
inc
inc
mov
mov
xchg
ds
inc
push
addr16
fwait
sbb
adc
fisubrl
test
stos
loop
sub
lods
mov
dec
cmp
xor
sbb
mov
jo
pop
cwtl
fsubrl
notl
push
dec
mov
mov
aam
testb
jne
pop
sbb
cmpsl
mov
fisttps
daa
outsl
repz
ja
inc
test
movsl
xchg
or
push
ja
inc
imul
cmp
enter
and
test
jnp
orl
scas
in
out
insb
pop
out
mov
mov
inc
nop
clc
adc
mov
pop
or
movsb
lds
mov
jecxz
push
shl
fwait
cmp
mov
test
insl
mov
shrb
lret
mov
cmp
mov
insl
pop
adc
out
xchg
xor
inc
test
inc
in
mov
in
sbb
push
rclb
testb
outsb
jno
dec
js,pt
mov
pop
sarl
mov
sub
cmc
mov
push
mov
cmp
int
out
xlat
andb
jb
push
arpl
movsl
cltd
jp
and
es
scas
fidivl
and
mov
adc
xchg
mov
enter
jo
movsl
jno
inc
pop
and
push
adc
test
xor
aas
sub
dec
or
jbe
cli
lret
ds
enter
pop
xor
daa
daa
enter
pop
lea
testl
mov
adc
test
call
sbb
ror
js
cmp
xchg
and
lcall
movsl
sub
dec
push
mov
lods
sub
add
ja
inc
mov
fcoms
fbld
pop
popa
int3
or
or
jbe
repz
fsub
mov
sbb
dec
add
push
loope
fcompl
fisubs
cmp
and
mov
xlat
daa
dec
pushf
push
dec
sub
cmp
loopne
insb
sbb
out
fs
fldcw
dec
addr16
mov
xlat
jo
bound
stos
jnp
rclb
and
adc
mov
mov
pop
sahf
sbb
cmc
aam
cmpsb
dec
movsl
inc
cwtl
add
testl
sub
and
sub
adc
cmp
inc
push
int3
hlt
jl
inc
ljmp
ja
mov
leave
orb
and
loop
xchg
bound
jo
cmp
xchg
into
into
cld
cmp
mov
push
or
std
scas
push
int3
test
mulb
mov
mov
imul
adc
lods
dec
movl
or
scas
hlt
shr
ljmp
dec
sub
sub
ficoml
jb
fxch
add
lret
call
mulb
pop
sahf
sub
test
and
push
insb
or
shlb
or
mov
jnp
nop
pusha
in
and
dec
scas
or
sarb
cmp
les
jecxz
push
aaa
aas
xchg
test
or
push
addr16
fnsave
add
xchg
sub
jp
or
add
xor
fstpt
shrl
cld
or
adc
sub
pop
push
lret
or
pop
jl
ret
jle
mov
or
jbe
dec
out
dec
add
mov
xchg
fs
out
push
jge
pop
out
repz
pop
jp
hlt
jle
and
pop
inc
das
jle
sub
pop
pop
scas
imulb
sub
lahf
dec
mov
push
cli
mov
adc
lret
fdivl
subb
repnz
add
or
scas
es
in
mov
jnp
nop
mov
xor
jbe
mov
leave
mov
cli
fdivrl
hlt
lea
icebp
incl
out
xor
lods
jl
fimull
inc
adc
movsl
add
ret
pusha
imul
and
sub
enter
cs
leave
sbb
andl
pop
xchg
dec
xchg
ljmp
fwait
sub
sti
sub
xor
mov
xchg
pop
ficoms
orb
or
mov
out
addl
or
jno
xor
stos
pop
jno
pop
add
or
std
sahf
loopne
mov
mov
or
incb
cwtl
aam
mov
sbb
insb
test
aad
lcall
loop
mov
push
xorb
in
mov
insl
dec
adc
icebp
cli
mov
xor
and
data16
loope
rcrb
es
sbb
fcom
jb
popl
rcrl
lret
adc
aaa
test
xchg
sbb
out
adc
mov
cmpsl
xlat
arpl
inc
in
iret
push
push
and
jno
mov
inc
in
call
or
adc
in
xchg
in
mov
ret
stos
add
sti
lds
inc
stc
adc
ss
sub
push
jmp
icebp
xchg
mov
mov
repz
or
fildll
les
xchg
and
xchg
mov
fidivl
test
sbb
push
rcrl
movsl
icebp
xchg
fcoms
xchg
jecxz
cmp
mov
jecxz
lret
nop
leave
mov
jb
test
xor
ja
nop
push
xchg
xchg
mov
mov
cmp
fcom
mov
push
aam
repz
sbb
dec
call
inc
test
nop
add
out
mov
jl
push
mov
or
pop
cmp
and
cmovno
cmp
stos
and
xor
pop
xor
xchg
pop
test
dec
jb
in
rsm
add
sbb
push
mov
mov
jmp
std
pop
mov
jg
mov
and
dec
mov
std
insl
and
jp
lock
mov
add
mov
mov
loop
notb
and
addr16
nop
in
cwtl
mov
or
pop
push
sub
xor
add
push
adc
pop
negb
xchg
in
jle
cs
pop
push
push
cmp
leave
cltd
jns
cmp
imul
push
sbb
fdivs
jmp
sti
jbe
inc
sbb
call
rorl
dec
or
adc
js
imul
mov
pusha
scas
sbbb
stc
cs
xchg
xor
mov
inc
push
cmp
lret
cli
inc
sub
filds
mov
push
aam
repz
mov
pop
insb
xchg
or
loopne
cmpsl
sbb
repz
inc
sub
adc
push
lods
repnz
xor
xchg
jae
sbb
sbb
clc
sub
or
js
jo
scas
pop
lcall
jno
out
push
in
dec
dec
call
add
out
imul
inc
sahf
mov
jno
stos
dec
in
test
out
pop
stc
pop
xchg
mov
pop
repz
es
xchg
cs
add
mov
mov
icebp
dec
fs
bound
fbld
inc
fwait
ljmp
sub
lock
mov
mov
stos
lock
lcall
pop
or
fs
pop
outsl
lock
cs
cmp
icebp
inc
fstpt
arpl
inc
mov
sbb
pop
mov
xchg
clc
es
pop
ret
push
fldenv
or
pushf
inc
jbe
jp
sub
icebp
rol
fdivr
fs
lods
loope
test
sub
lods
sub
sub
mov
fdivrs
pop
sub
pop
arpl
xchg
inc
jno
dec
mov
js,pt
dec
dec
loop
xchg
fisubrs
mov
insb
xor
rcl
and
or
mov
dec
mov
jne
sub
xchg
hlt
add
xor
or
hlt
cmp
add
mov
pop
mov
stos
fisubrl
mov
jb
shlb
jae
inc
imul
out
icebp
mov
xchg
loop
nop
or
movsl
mov
jae
addb
test
sub
in
inc
cmpsl
fwait
jmp
mov
shl
or
roll
cmp
out
stos
shll
loopne
adc
movsl
scas
jbe
mov
mov
mov
dec
add
popf
mov
rcrb
mov
jns
fsubrl
movsb
sbb
popa
nop
jmp
jns
out
fisttps
cmp
cmpb
cmp
mov
cs
jo
lods
or
adc
jmp
push
daa
lcall
mov
fisubrs
in
jp
add
sbb
mov
loop
pop
imul
das
inc
imul
dec
cltd
cltd
into
testl
mov
fcmovnbe
std
sub
jo
inc
xchg
inc
out
inc
add
mov
xchg
mov
mov
out
xchg
push
push
xlat
sub
ret
cmp
sbbb
ret
sub
divb
cmpsl
negb
xchg
xor
pop
sarb
mov
jecxz
shrb
rcr
sbb
cli
pusha
push
cmpsl
jns
icebp
sbb
dec
std
push
mov
stos
jecxz
mov
jmp
aad
add
push
lock
decb
out
icebp
mov
add
enter
ds
mov
dec
jne
jp
adc
mov
jae
xlat
lds
mov
xchg
jl
jnp
jae
xchg
and
int
arpl
insl
xchg
jb
addb
xor
cld
cmp
pop
push
dec
mov
movsb
add
mov
push
inc
fisubs
lahf
inc
or
add
lret
es
xlat
stos
mov
sbb
in
cmp
push
cmp
icebp
mov
xor
adc
repnz
add
jp
xchg
daa
mov
inc
add
popf
dec
pop
sub
jp
xchg
xor
test
push
xchg
out
in
push
sarl
sbb
add
sahf
mov
cvtps2pd
data16
jnp
and
ljmp
and
pop
call
lock
pop
push
pop
xor
or
imul
cmp
ret
les
mov
mov
ljmp
xor
mov
mov
mov
push
mov
sbb
dec
jg
dec
imul
inc
and
sub
js
mov
stos
notb
add
jae
mov
jno,pn
data16
sbb
sarl
cmp
out
lds
fdivrs
pushf
adc
in
xchg
mov
loop
xor
and
fisttpl
lock
mov
sub
scas
fstps
mov
inc
or
cwtl
add
pop
mov
jno
push
fcomi
lret
lret
ss
cld
or
pop
jne
add
out
outsb
loop
and
addl
test
fdivs
shll
pop
lds
fisubs
repz
ficomps
ret
push
jl
jmp
and
shll
hlt
cmp
jno
push
pop
daa
dec
lock
jne
stc
inc
cwtl
xchg
mov
xchg
adc
imul
lea
imul
adc
fwait
xchg
dec
sub
mov
test
sub
ret
insl
cltd
and
movsl
dec
mov
jl
ja
xchg
ret
iret
and
jmp
pop
mov
add
ss
adc
mov
incb
inc
jne
arpl
sub
shlb
lret
mov
sbb
leave
ret
stc
mov
add
imul
adc
negl
inc
cld
xchg
adc
sbb
dec
aam
adc
sub
pop
fcmovu
xor
outsb
not
or
in
lret
in
lahf
dec
xor
and
xchg
lcall
push
xchg
sarl
jecxz
and
outsl
xchg
imul
add
es
or
adc
mov
inc
jns
sbb
lock
xchg
rcrl
cmp
cld
push
xlat
xlat
pop
push
push
mov
int3
push
xor
aas
inc
out
sbb
or
xorb
mov
add
adc
mov
xchg
test
ret
ss
fimuls
inc
pop
or
pop
or
out
xchg
sbb
pop
test
aam
xor
test
lret
test
sub
add
jo
or
mov
push
jae
lret
mov
cmp
add
fistpll
mov
xorb
mov
xor
ljmp
iret
in
jb
adc
inc
outsl
repnz
xchg
loope
mov
cwtl
gs
sbb
mov
repnz
ljmp
jns
je
sbb
or
icebp
push
rolb
and
dec
movsb
inc
pop
and
jg
aam
fwait
cmp
xchg
xor
stos
flds
xor
out
inc
jb
adc
jle
mov
pushf
dec
loopew
xor
xchg
cs
sub
push
mov
rclb
fstl
out
push
inc
push
repnz
sahf
xor
jmp
sub
mov
push
xor
adc
push
pop
cli
insl
jb
pop
arpl
mov
rcrb
loope
je
ljmp
test
test
mov
inc
push
push
mov
ja
xchg
jae
sub
je
es
cmpsl
lcall
dec
ret
movsb
in
xorb
xchg
cmc
sarb
fmuls
mov
in
and
xchg
std
fcmove
insb
shlb
push
xchg
addr16
mov
dec
lea
mov
inc
scas
xor
test
push
dec
push
das
dec
lahf
repz
mov
and
outsl
cmc
inc
sub
mov
lock
pop
int3
push
and
add
stos
int3
imul
add
ficoms
jns
push
or
cld
dec
stos
arpl
fst
data16
mov
sbb
test
aas
and
lret
push
jae
divb
mov
rorl
ja
call
add
inc
out
xchg
push
cs
sub
out
pop
aaa
push
pop
lods
pop
loopne
jecxz
bound
adc
dec
mov
loope
add
pop
test
and
shll
xor
loop
and
loopne
test
sub
jg
and
push
push
sub
shll
or
js
xchg
jg
imul
in
cmpsb
inc
outsl
inc
dec
out
xlat
sub
jbe
call
mov
pop
out
and
and
and
lods
sub
les
cmpsl
jmp
push
bound
and
ret
daa
iret
int
jnp
in
sub
adc
inc
mov
fwait
lods
jle
push
xchg
ret
push
clc
dec
jmp
mov
sbb
sub
inc
dec
inc
inc
repnz
icebp
or
and
jecxz
mov
push
ja
sbb
and
lods
in
xchg
xchg
aaa
jbe
xchg
sub
xchg
or
iret
mov
bnd
xor
push
push
or
into
sbb
aaa
sub
xor
dec
push
inc
mov
dec
and
inc
mov
jne
dec
push
pop
jge,pt
cld
and
push
cld
dec
loopne
sahf
pusha
xlat
lods
mov
loopne
push
insl
jge
dec
mov
jo
or
xor
xor
xor
sub
inc
jnp
mov
int
hlt
inc
mov
repz
pushf
inc
xor
lret
push
fmul
mov
mov
insl
sub
scas
outsl
xlat
pop
xchg
lods
loopne
repz
nop
fld
add
fisubrs
sub
test
mov
psrld
push
push
fbld
mov
imul
outsl
and
xchg
xchg
push
adc
lea
lock
sbb
movsb
negb
cmpsb
ss
stos
sahf
lea
push
imul
scas
stos
mov
bnd
or
push
negl
pop
cmp
cmpsb
push
cmp
pop
mov
ret
fildll
sub
inc
jne
sbb
setae
push
push
bound
adc
jnp
stc
jae
xor
and
insl
sbb
es
cmp
js
sub
andl
es
lret
loopne
jmp
out
sbb
pop
xchg
xchg
loop
imul
jl
push
inc
cmp
cmp
in
and
inc
fisubl
out
clc
and
inc
popa
adc
inc
inc
mov
aam
add
hlt
and
push
das
mov
lds
repz
push
leave
pop
push
mov
in
into
mov
aaa
cltd
push
in
mov
xor
push
inc
push
and
jge
or
sbb
fstps
pop
adc
mov
out
mov
jg
cli
inc
cld
mov
call
into
das
sbb
dec
adc
jmp
adc
mov
test
adc
cmp
jg
mov
pop
xchg
js
sub
cmp
ds
fidivs
add
fwait
sbb
repnz
int3
fiaddl
ret
stc
xor
popa
cwtl
enter
into
pop
sub
and
push
mov
repz
xorb
inc
in
fs
bnd
lret
adc
enter
xchg
dec
test
sbb
dec
decb
jno
popl
mov
sbb
pop
pop
outsl
pop
not
popf
push
adc
in
and
inc
sub
dec
out
decb
mov
xchg
mov
fbld
pop
scas
cmp
add
inc
pop
popl
sbb
mov
addr16
addr16
inc
push
stos
test
cmpsl
test
mov
jecxz
push
or
mov
lods
lods
test
dec
cmp
cld
sbb
sub
pop
test
jno
cli
out
cs
mov
lea
ds
fcmovnb
jbe
movl
int3
xlat
inc
repz
repz
jnp
aam
ljmp
xor
aas
xchg
lahf
dec
lods
sub
shrl
cmp
adc
add
push
pop
aaa
arpl
call
xchg
xor
sbb
jo
lea
xchg
jmp
cmp
push
xchg
ret
pop
xchg
mov
andb
out
add
or
cmpsl
outsl
cmp
repnz
pushf
cmpsb
xchg
pop
sti
mov
pop
scas
jae
call
cmc
mov
imul
std
popa
push
mov
jae
pushl
xchg
shr
test
add
arpl
or
xchg
loope
hlt
pop
cmp
sbb
sbb
push
sbb
cwtl
inc
xchg
adc
adc
das
int3
push
test
xor
add
sub
iret
or
in
or
in
cmp
movsl
or
jb
ret
inc
mov
sbb
pop
pop
ss
in
ds
stc
jae
out
je
ffree
jo
popf
mov
cmp
jmp
lods
loop
or
sbb
cmp
mov
sub
adc
xchg
push
push
mov
sahf
pop
shll
rclb
mov
das
stc
sbb
sbb
loopne
jg
aad
scas
mov
or
mov
add
mov
jmp
out
in
out
shl
push
push
andb
jno
mov
mov
cmpsb
scas
jb
repnz
xor
lock
mov
clc
adc
sub
ret
xlat
arpl
fcoms
push
insl
dec
test
pop
mov
push
fcoml
jns
scas
push
popa
and
stos
test
sbb
pop
push
mov
in
shll
cmp
rcrl
std
mov
and
cmp
arpl
dec
sti
outsl
daa
adc
cltd
jnp
push
mov
daa
dec
in
xor
subb
jecxz
inc
adcl
and
or
fsubrs
mov
pop
arpl
push
pop
popa
cli
dec
pop
pop
pusha
xor
mov
test
push
mov
loop
stos
and
fistpl
xchg
add
insb
pop
mov
pop
popl
jb
xor
cld
out
clc
xchg
movsl
les
cmp
mov
es
pop
cmp
fnstenv
pop
pushl
nop
and
add
cmp
and
call
lret
xor
ds
outsb
inc
test
cmpsb
and
nop
ja
adc
mov
shrl
pop
addb
xor
nop
mov
dec
rcl
adc
xchg
mov
mov
lahf
jno
inc
lret
mov
rol
jecxz
sbb
jle
pop
rol
lods
mov
adc
loope
in
lds
std
inc
test
aam
inc
cmc
cmp
pop
imul
xchg
scas
or
call
mov
mov
jmp
arpl
pop
cmp
aad
stos
adc
cmp
test
data16
cmp
inc
insb
sbb
cmpsl
push
ret
push
sbbl
xor
in
xor
jge
in
repz
lcall
int3
test
and
adc
ret
cwtl
out
pop
call
push
je
insl
cmp
jle
fst
out
sbb
stc
dec
cwtl
mov
daa
inc
out
push
ds
add
mov
test
dec
add
je
mov
test
xchg
jnp
faddl
jg
push
lret
mov
add
pop
pop
and
pushf
int3
fstpl
fmuls
sub
mov
ss
inc
xchg
cwtl
mov
or
lods
test
rolb
mov
pop
fs
and
addr16
jb
js
jo
pusha
push
cmp
outsl
dec
nop
rol
loope
ret
shlb
add
xor
inc
insb
pusha
or
lock
xlat
sar
imul
mov
xchg
pushl
mov
outsb
fsubl
pop
and
mov
lods
xor
clc
popa
movsl
mov
ret
pop
rorb
cli
ds
lods
imul
or
push
push
cmp
dec
push
pop
jle
xchg
add
cmp
notb
test
jo
adc
cmpsl
or
cmc
inc
cmc
xchg
idiv
fimuls
or
xlat
dec
xor
xor
mov
icebp
test
js
rcrb
push
sbb
jl
mov
adc
fimull
jmp
out
and
adc
xor
jp
in
xchg
sub
cmc
inc
push
push
sbb
sub
repz
sub
pop
cli
shlb
std
sbb
gs
sahf
aaa
mov
int3
or
sbb
shrb
mov
add
js
out
jns
inc
jnp
loop
mov
xchg
push
push
fs
add
mov
test
sahf
cli
jle
xchg
inc
test
jmp
mov
and
mov
orl
or
and
std
loop
jge
mov
mov
inc
push
mov
xor
enter
lock
imul
pop
ss
adc
std
cmp
mov
loope
pop
lcall
jae
xchg
jg
inc
push
stos
gs
jg
nop
xor
inc
addl
inc
sbb
sub
mov
lahf
mov
xchg
movsl
cs
adc
dec
xlat
or
dec
mov
fwait
jle
and
out
into
cmpsl
dec
lcall
out
adc
sbb
xlat
mov
mov
sbbl
fistpll
std
test
mov
icebp
sub
mov
subb
adc
mov
sbb
cwtl
dec
push
dec
and
dec
inc
mov
cmp
out
out
ds
mov
push
movsb
pop
ja
adc
mov
push
ficomps
loope
pop
movsl
sub
outsb
sbb
jne
loop
sub
add
lock
cmpl
fnstenv
push
push
and
mov
insl
imul
dec
pop
rclb
push
test
ss
imul
cmpb
mov
stc
and
test
pop
cld
push
dec
push
xor
dec
push
jp
lds
ja
arpl
scas
pcmpgtb
cmp
dec
mov
dec
jns
hlt
cmp
test
mov
dec
ja
sub
js
xchg
mov
xchg
mov
dec
mov
shrl
aas
sub
cmp
ds
mov
fs
pop
subl
lds
loope
pop
movsl
xchg
iret
pop
mov
pop
movsl
mov
aas
or
hlt
shlb
icebp
jl
sbbb
cli
sub
mov
mov
stos
push
icebp
xchg
push
lret
outsb
xor
in
out
sbbb
out
add
inc
addr16
dec
repnz
jns
repnz
dec
push
pop
shlb
lods
mov
aas
sbb
hlt
sub
push
and
inc
push
dec
cmpsl
add
and
mov
jl
pushf
mov
jl
in
pushf
and
pushl
imul
pop
jg
add
dec
scas
js
aam
and
ret
pushl
rcl
pop
mov
js
rorb
jbe
test
pop
lods
mov
fisttpll
out
mov
in
pop
bound
out
mov
pop
push
lods
js
add
adc
xchg
sub
xlat
repnz
imul
ret
mov
outsl
push
sti
outsb
mov
loopne
stos
cmp
cmp
and
push
scas
jne
js
or
cmp
sub
es
test
inc
mov
dec
mov
loopne
ds
pop
mov
lods
pusha
lods
out
mov
or
shlb
mov
cmp
sahf
and
ljmp
cld
add
or
pop
fisubrs
lcall
loopne
enter
dec
scas
jb
lods
addr16
pop
sub
arpl
scas
inc
test
mov
shrl
mov
mov
add
clc
pusha
dec
jo
gs
in
mov
pop
sbb
hlt
sbb
xorl
stos
test
mov
inc
pop
xchg
xchg
xor
gs
lcall
ret
and
inc
jno
aad
mov
mov
cltd
push
int3
pop
sub
hlt
push
aam
push
add
sbb
mov
sbb
jne
fs
ljmp
loopne
insb
adc
jmp
dec
jle
inc
mul
icebp
inc
cmp
mov
outsl
add
lret
repnz
std
ret
adc
xchg
mov
dec
ds
xor
push
or
push
adc
xchg
fwait
js
test
imul
enter
or
push
jecxz
add
lret
xchg
mov
les
pop
and
shlb
fwait
and
mov
mov
xchg
mov
cmpsl
push
stos
leave
mov
mov
push
push
imul
mov
cmp
flds
es
jae
arpl
adc
je
sbbb
call
cli
mov
mov
jnp
ljmp
stc
mov
and
sbb
mov
loop
cmp
mov
and
mov
pushl
test
sub
pop
dec
push
mov
imul
lock
pusha
fldt
jne
sbbl
fsubrl
nop
ret
out
and
cli
fbstp
scas
pop
lahf
jecxz
mov
mov
cli
pushf
fs
dec
and
jge
pop
sub
sbb
jae
fidivl
mov
cli
cmove
pop
pop
adc
and
and
mov
pop
add
mov
in
insl
ljmp
rcrb
cltd
hlt
dec
shlb
sbb
mov
data16
jmp
in
int3
cmpsl
call
xchg
jg
jecxz
pop
xchg
dec
inc
lret
movaps
mov
xbegin
ret
fidivl
mov
scas
in
addb
cmpsl
xchg
outsb
outsb
addr16
xor
enter
bndldx
dec
lcall
jae
int
or
pop
mov
punpcklwd
push
ret
loopne
add
add
inc
push
sub
lahf
cmpsb
lahf
ret
xchg
and
mov
arpl
jmp
sub
inc
stc
jp
xchg
sub
dec
push
call
test
ds
arpl
xor
push
or
bound
cwtl
mov
push
dec
aas
adc
add
lcall
in
xor
jnp
mov
xchg
clc
pop
in
mov
push
sti
and
mov
jmp
lods
sbb
int
pop
sarb
push
in
call
dec
sub
fistl
ja
pusha
adc
in
ja
fsubl
dec
outsb
ret
jnp
jno
iret
loopne
imul
outsl
lock
out
inc
xchg
cltd
xchg
popf
inc
and
int
out
sarb
ret
xchg
cmp
stos
cmp
loope
inc
jecxz
push
or
les
mov
into
jge
pop
xchg
int
cmp
hlt
xorb
mov
fildl
shrb
in
test
xchg
enter
dec
mov
orb
in
jns
cmp
pop
stos
lds
popf
jle
cmp
inc
xchg
movsb
cmp
imul
xchg
pop
mov
or
or
test
lock
mov
testb
xchg
subl
cmp
xor
and
jl
imul
icebp
mov
sub
mov
outsb
int3
cs
mov
push
push
ds
daa
stc
mov
movsl
cs
add
fisubs
adc
ret
inc
mov
test
aad
mov
mov
xlat
fadd
insb
inc
sub
xor
mov
xchg
mul
mov
out
fistpll
mov
rcll
pop
adcb
jle
lea
addl
popa
das
test
push
cmp
jge
pop
cli
rolb
mov
xchg
ds
loopne
imul
test
cmp
sub
jg
arpl
push
in
adcl
mov
int3
movsl
loopne
stos
int
or
mov
pop
add
es
jl
push
out
sbb
mov
dec
jnp
inc
outsb
lahf
std
xor
add
xchg
in
sub
jge
pop
push
mov
pop
ljmp
loopne
mov
lds
dec
push
adc
adc
repz
fisttps
mov
jecxz
mov
dec
mov
and
dec
ss
out
jno
loop
xor
jl
dec
push
fstps
mov
movsl
jbe
fistpl
les
mov
adc
jbe
jno
cld
addl
test
cmp
daa
add
xchg
jbe
out
out
in
arpl
nop
outsl
loopne
imul
or
lds
jge
out
add
dec
xlat
mov
aas
fistl
cmpb
rcrb
dec
add
rorb
mov
shlb
pop
jns
lret
xor
cmp
xor
pop
mov
cmp
fst
shl
xor
call
fiadds
push
xor
pop
mov
adc
xor
sub
mov
out
xchg
std
mov
pop
test
pop
andb
ds
cli
shll
out
mov
jb
cmc
jo
jp
cli
jmp
repnz
shrb
sub
aas
sub
push
cld
add
push
inc
cmp
push
dec
jecxz,pn
push
jmp
stos
loop
lea
mov
or
or
push
stc
bt
push
out
es
xor
xor
and
out
test
insl
sbb
push
cwtl
mov
jecxz
push
movb
cli
sub
scas
pop
push
cmpxchg
push
mov
jo
test
adc
xor
lahf
pop
cmp
icebp
xlat
pop
aas
mov
mov
addb
cmp
je
repz
pop
cmp
les
ja
leave
xorl
or
lret
pop
sbb
pop
cmc
popa
frstor
push
js
inc
je
inc
outsb
dec
sahf
jno
mulb
inc
lock
pop
testl
es
cmpsb
and
pop
sbb
mov
insb
fwait
sub
xor
loope
jle
movsl
movsl
pop
orl
stc
mov
dec
stos
mov
mov
xchg
test
mov
icebp
jle
or
jne
scas
dec
cmpb
popf
inc
in
iret
pop
rol
lods
mov
mov
push
inc
push
jnp
aam
push
sbb
ljmp
adc
add
sbb
outsl
out
adc
fisubs
lods
mov
cmp
out
rolb
dec
xor
dec
sub
cli
and
jmp
mov
sbb
test
das
xlat
ss
ret
loope
stc
int3
imulb
jecxz
test
or
add
adc
cmpsb
dec
jnp
pop
shrb
adc
inc
mov
adc
pop
dec
pop
aaa
jge
testb
loop
out
pop
pop
cmpsl
inc
flds
aaa
mov
adc
mov
mov
push
fwait
fs
xor
push
and
cltd
ret
xchg
sbb
push
cwtl
mov
add
loopne
inc
ljmp
jbe
test
daa
mov
adc
lahf
int
fmull
fidivl
mov
push
inc
xor
sub
dec
cld
imul
sahf
adc
mov
icebp
adc
sbb
dec
jp
in
xlat
dec
dec
mov
stos
rcll
push
push
adc
mov
xlat
xor
fiaddl
pop
dec
xchg
push
lcall
and
mov
insb
inc
test
jne
or
repnz
add
mov
push
push
pop
sub
jo
cli
jb
insl
add
stos
xchg
out
mov
xor
or
add
clc
or
iret
mov
lock
cmp
mov
pop
call
ret
sti
aas
test
cmp
imul
push
xor
sbb
icebp
inc
dec
ret
inc
jns
ret
loop
mov
sahf
je
repnz
std
push
fadd
lea
inc
jbe
xchg
xor
or
daa
xor
dec
lds
mov
aas
mov
mov
push
sub
pop
fcoms
push
fimuls
add
adc
jle
hlt
push
mov
imul
enter
mov
mov
outsl
jmp
sub
enter
stc
incl
arpl
mov
jo
in
dec
out
mov
dec
fcomps
cmpsb
mov
cmp
or
pop
stc
ljmp
inc
fisubs
dec
and
jl
cli
das
cmp
inc
cld
fcmovnb
sub
aad
sbb
rcl
and
jge
mov
mov
sbb
sub
test
gs
pop
jne
in
mov
into
cmp
add
scas
dec
lahf
aam
aam
ss
jp
mul
or
pop
gs
out
mov
cmpsl
nop
pcmpeqd
jne
adc
movsb
js
enter
adc
mov
aam
shll
sbb
mov
mov
mov
sbb
dec
and
std
or
jmp
incl
xor
sahf
and
pusha
out
push
dec
cltd
jge
and
fsqrt
popf
in
fldenv
and
xor
jle
hlt
in
pop
lods
es
xor
jl
pop
pop
xlat
xlat
sbb
and
arpl
cmp
push
lret
cmp
loop
or
je
pop
xor
xchg
jle
mov
fcomp
push
xor
lock
int3
shr
andb
loop
cs
jl
xor
mov
aaa
mov
cmp
icebp
or
push
mov
lods
test
call
pop
shl
fwait
stos
pop
jl
mov
push
shlb
pop
popa
lcall
inc
or
arpl
cmpb
mov
shr
adc
aad
cwtl
lret
sti
daa
mov
or
test
xchg
adc
mov
int
push
lods
das
hlt
es
shrb
das
movsl
pop
dec
lds
clc
rorb
xor
cmp
mov
mov
insl
push
mov
lds
add
cmp
lret
jmp
jns
adc
in
roll
pop
and
daa
xor
or
adc
insl
dec
mov
sbb
aad
das
xchg
push
pop
dec
out
punpcklwd
push
mov
stos
xchg
fldlg2
jge
mov
mov
lods
sub
out
fcmovu
test
mov
das
jbe
push
loop
or
test
insb
mov
in
lret
and
popa
inc
imul
push
pop
arpl
inc
shl
dec
scas
enter
jo
loope
xor
dec
xchg
xchg
jbe
xchg
mov
cmp
xchg
pusha
rolb
pop
xor
sub
ret
dec
jle
movsl
sbb
jns
aas
lahf
ljmp
icebp
repz
lahf
incb
dec
xorb
loop
xor
divb
pop
in
xchg
cld
jbe
icebp
xchg
movsb
clc
inc
or
dec
xor
mov
xchg
clc
mov
in
pusha
mov
mov
ret
dec
mov
xor
xchg
leave
inc
jmp
shrl
xor
and
negl
lock
or
jno
hlt
arpl
aaa
mov
mov
testb
mov
movsb
push
mov
int
repz
mov
sbb
out
addb
push
lret
in
aam
sbb
sarb
in
into
rorb
dec
es
ss
popa
dec
xlat
mov
das
enter
push
int3
stc
dec
sbb
or
sub
in
decb
xchg
fcomip
pushf
fcoml
pop
loopne
scas
and
ret
cmc
pop
mov
bound
pop
lods
rcrb
push
sbb
xchg
xchg
xchg
mov
mov
fbstp
cmpsb
dec
rclb
inc
mov
pop
mov
cmp
mov
ret
dec
jb
enter
aam
inc
std
or
aam
negl
rcll
pusha
leave
insb
pop
insl
push
aad
fistpll
jae
shl
pop
dec
add
xchg
test
or
mov
fmul
jmp
xchg
xor
xor
insb
cmp
pop
and
addr16
mov
cli
repz
ficoms
cmpsb
or
pop
sub
or
pop
push
mov
rcr
addl
dec
sbb
cld
inc
out
xchg
pop
jecxz
mov
mov
xchg
scas
fdivl
dec
out
test
inc
or
add
ds
cmp
std
push
pop
inc
mov
aam
pop
dec
cmp
jo
arpl
push
out
mov
mov
out
popf
lret
jecxz
fcomps
xor
and
cmp
cmp
sub
pop
cmp
pop
cld
cli
add
inc
flds
pop
ja
mov
loope
cmp
mov
xchg
stos
mov
cmp
adc
mov
ja
orb
fxch
insb
scas
vcvtsd2ss
push
inc
js
std
xlat
sub
mov
enter
xor
rolb
mov
shlb
jl
lea
and
sbb
mov
jge
xchg
add
stos
lea
mov
cmp
mov
ja
xchg
and
lods
leave
jecxz
mov
cmp
push
inc
push
pushf
shl
and
out
aad
jmp
mov
es
sub
inc
dec
lcall
jp
and
add
cwtl
cmp
repnz
push
adc
lahf
pop
fdivrs
pusha
xor
add
or
arpl
jno
int3
adc
and
js
ja
or
push
and
xchg
mov
sub
dec
cld
jnp
out
aad
out
push
cltd
pusha
aad
jle
rorl
fisubs
mov
dec
sub
and
xchg
shrl
xchg
mov
dec
cmp
jnp
movsb
push
jmp
sti
sbb
jmp
jecxz
sub
movsl
pop
repnz
xchg
or
fcomp
sub
arpl
insb
iret
daa
daa
out
add
andb
jns
adc
and
pop
adc
jne
add
nop
xchg
jle
cmp
push
fcmovne
inc
dec
sbb
notb
sub
loope
push
cwtl
in
std
mov
push
xchg
sbb
jno
orb
lods
mov
dec
mov
and
imul
test
leave
cmp
rol
and
repnz
mov
cmp
int
dec
adc
xchg
leave
xor
pop
pop
mov
fldenv
loopne
pop
out
dec
sbb
inc
xlat
adc
mov
inc
and
push
insl
pop
jno
add
sub
mov
stos
cli
mov
cmp
add
dec
push
sar
mov
out
adc
subb
test
ret
and
aas
out
inc
push
iret
push
aas
fstpt
cmpsb
in
xor
adc
mov
imul
aad
mov
outsb
sarb
and
enter
mov
xchg
sub
fistl
inc
adc
mov
sbb
mov
je
inc
cmp
push
cmp
xorb
or
iret
xor
add
pop
jmp
xorb
je
ret
mov
xchg
stc
mov
sti
int3
add
std
cmp
imul
sahf
mov
adc
adcl
sbb
sbb
push
cmpl
idiv
loop
sub
mov
mov
cmp
add
icebp
stos
stc
jb
sub
shlb
notb
push
pop
mov
xchg
ja
fisubs
adc
jmp
mov
stc
dec
jo
repz
mov
fisttpl
pop
cmp
dec
stos
pop
ja
jne
pop
dec
repnz
gs
inc
call
test
inc
lcall
mov
adc
jge
enter
outsl
das
xlat
and
lcall
shl
or
pop
and
outsl
mov
jbe
out
aam
sahf
mov
mov
dec
jle
inc
aad
ljmpw
mov
lds
cld
mov
loope
lret
icebp
in
or
add
adc
pop
mov
test
cwtl
inc
adc
ss
sub
fnsave
xor
dec
dec
xchg
lahf
mov
push
inc
movsb
cmp
mov
pusha
xchg
or
nop
popa
or
mov
rorl
mov
mov
inc
dec
lods
lds
add
cs
pushf
cmp
imul
add
loopne
mov
call
out
imul
outsb
imul
mov
sbb
dec
cmc
cmp
out
loope
xchg
jl
lea
and
cmpb
fstps
push
stos
and
adc
stc
jl
out
sub
jnp
push
mov
push
nop
cmc
add
rcrl
and
cmp
adcb
pop
fildll
stos
js
mov
mov
and
cld
jge
fidivrs
pushf
mov
lret
jg
dec
or
pop
mov
inc
or
dec
or
mov
jns
fimull
shll
sub
bound
xchg
cli
jecxz
nop
jg
arpl
pop
cmp
jnp
loop
lret
xorb
sub
cmp
popa
mov
out
xchg
lret
lret
push
pop
movsl
daa
test
popa
mov
sbb
lahf
in
inc
inc
push
mov
lahf
jno
adc
and
repz
imul
lods
iret
shlb
dec
mov
mov
lahf
inc
aas
xchg
jns
stos
faddl
test
mov
repnz
jg
push
dec
sub
loop
push
test
adc
icebp
adc
fildl
rolb
push
rorl
mov
mov
mov
pusha
dec
mov
or
icebp
je
scas
imul
xor
jge
cmp
call
sbb
dec
and
jno
push
arpl
fwait
ds
fcompl
pusha
les
repz
mov
test
and
scas
dec
mov
xor
or
arpl
insl
jne
nop
test
cmc
and
data16
add
je
push
leave
icebp
jo
cmpsb
shrb
jg
andl
push
sub
xor
push
loop
int3
jp
mov
out
pop
add
pop
sub
or
cmp
aaa
mov
inc
in
scas
mov
test
jecxz
add
cli
aas
push
rorb
and
loope
pop
mov
fsubp
jge
xchg
orl
ds
scas
gs
nop
jns
mov
aaa
mov
push
mov
sbb
xor
fcomps
sbb
bound
movsb
daa
sahf
je
dec
push
dec
andl
lret
mov
pop
ret
cli
xchg
cmp
mov
pop
add
imul
popf
and
pop
pop
inc
lds
out
cmp
jg
fbstp
or
mov
push
xlat
xchg
hlt
imul
mov
add
adc
adc
int
inc
adc
or
stos
inc
into
inc
sbb
jge
ss
or
out
xlat
lahf
or
test
adc
adc
test
sub
in
out
iret
rcr
jo
gs
dec
mov
cmp
movsl
sbb
or
loop
xchg
mov
dec
adc
mov
in
subb
mov
xchg
call
stc
sub
inc
sbb
sbb
mov
xor
inc
dec
lahf
inc
jno
scas
push
clc
pop
inc
mov
add
ja
push
fmuls
cmp
push
loop
xchg
sbb
lds
adc
inc
cmp
int3
push
inc
test
lods
pop
sbb
cmpb
in
add
lds
mov
pop
stos
fldt
lahf
es
roll
and
sbb
pop
mov
and
das
insl
icebp
adcl
xchg
pop
dec
or
cmp
mov
test
or
mov
mov
fists
ffree
add
loope
jae
outsb
fisubrs
aad
pop
xor
in
arpl
cmp
jne
lods
ljmp
mov
cmp
stos
jno
or
mov
cs
test
out
out
nop
aad
mov
repz
mov
cmpsb
dec
loopne
inc
and
popf
fisttpll
call
cmp
in
xchg
rorb
xor
mov
int
jno
sbb
cmpsl
lock
mov
rcll
lods
and
sbb
lcall
mov
sbb
mov
test
outsl
inc
push
dec
bound
push
pop
or
js
loope
sbb
mov
or
ljmp
test
loope
mov
es
rorb
loope
mov
les
rorb
and
sbb
ja
jo
inc
cmp
dec
int
bndldx
adcb
mov
lret
dec
mov
inc
out
push
lcall
jecxz
popf
add
cmp
cli
fadds
jne
xor
test
push
xchg
aaa
or
outsb
dec
imul
movsb
jl
insl
mov
out
je
roll
sub
mov
sbb
jecxz
pushf
fcoml
mov
push
repnz
or
stos
push
xor
jge
and
dec
and
add
bound
sub
ljmp
pop
lods
mov
add
mov
cmp
adc
rcrl
imul
addl
xor
in
lcall
aam
dec
arpl
jbe
shrb
fnstsw
sti
push
mov
enter
inc
mov
mov
scas
repz
fsubrl
cld
inc
pop
aam
jmp
or
and
fistpll
and
leave
sbbb
adc
rolb
ret
lods
cmp
sub
icebp
sub
ret
scas
inc
push
mov
mov
sarb
in
xchg
inc
or
xor
xor
daa
cmp
ja
fsub
jae
sahf
divb
pop
jno
cltd
es
mov
push
jno
fnstenv
inc
mov
jecxz
dec
mov
sbb
add
std
xchg
in
push
push
fwait
pop
pop
mov
flds
mov
mov
addr16
mulb
xchg
arpl
imul
addr16
mov
adc
test
or
push
cmpsl
loope
xor
int
mov
rcl
cmp
dec
movl
pusha
inc
mov
movsl
inc
adc
pop
push
aas
cwtl
cld
inc
hlt
sahf
mov
sub
pop
loop
jnp
push
xchg
xor
insb
inc
lahf
push
sub
das
sub
sbb
popa
aaa
inc
push
cmp
inc
mov
jmp
repnz
xor
outsb
xchg
push
cmp
mov
ss
lods
push
into
push
mov
or
sub
fnstenv
repnz
cltd
inc
inc
repnz
xor
ds
or
adc
mov
push
pop
cmp
push
pop
cmp
jmp
sbb
pop
lret
mov
mov
mov
sbb
cld
movsb
sbb
scas
lret
mov
inc
inc
cmp
sub
xor
xchg
cmp
sbb
xor
push
push
mov
scas
not
imul
outsb
and
mov
pop
sahf
jge
sub
adc
and
xchg
les
fisttpll
mov
sbbb
fiadds
data16
pop
ret
insb
in
into
mov
fstpl
adc
es
and
xor
imulb
in
push
inc
insb
and
dec
pop
test
xor
in
xchg
aas
add
loopne
dec
xchg
clc
mov
jle
insb
jnp
pushf
into
fcmovnbe
add
mov
cmpb
ss
and
dec
int
scas
lret
ss
push
into
loopne
in
popa
imul
cli
ja
inc
scas
lahf
xor
das
mov
or
mov
pop
xchg
js
jae
mov
fs
jns
pop
outsl
insb
aas
outsl
js
cmpsb
xchg
xor
loopne
sub
pop
pop
xchg
cs
nop
mov
out
mov
inc
cmp
xchg
add
add
loope
inc
dec
fcmovnbe
jle
xchg
scas
mov
xor
dec
mov
inc
outsl
pop
popf
rorb
jge
fmuls
sub
rol
cmc
sbb
dec
pop
jnp
ret
push
sbb
or
std
enter
cmp
insb
mov
push
dec
sahf
or
add
je
cmp
mov
and
dec
repnz
add
adc
jl
addb
add
dec
push
xchg
adc
stos
mov
cltd
insl
pop
dec
sub
add
push
xor
data16
mov
sbb
pusha
cmc
loope
outsl
push
ret
mov
push
stos
dec
js
push
or
leave
ficoml
ss
clc
or
hlt
leave
loope
cmp
popf
js
inc
or
stos
cmpsl
andb
in
popf
sub
add
inc
push
and
adc
jae
fbld
jo
sbb
das
inc
xorl
fwait
and
mov
xchg
push
mov
adc
sahf
ja
add
inc
and
addr16
add
rcr
adc
fcomps
xchg
iret
xchg
repnz
and
and
and
mov
cli
fwait
sbbl
xchg
dec
pop
and
mov
das
aas
adc
fidivrl
leave
int
in
ret
mov
int
mov
inc
pop
sti
mov
jmp
mov
xchg
jmp
lret
shl
iret
into
aaa
aas
js
adc
sbb
jmp
inc
ljmp
mov
mov
imul
fmull
fdivrl
call
int3
mov
xchg
mov
fstpt
dec
pop
xor
push
stc
out
xchg
outsb
xor
push
and
ljmp
mov
xchg
cmp
mov
fisubl
call
notb
mov
stc
dec
andl
lahf
ret
or
lgs
mov
ss
jecxz
in
test
xchg
sarb
add
adc
xchg
adc
pop
popa
or
and
fdivrl
cmpsl
mov
cld
mov
and
push
loopne
pop
push
dec
mov
jb
pop
or
out
and
int
ret
jg
lret
in
pop
add
inc
dec
pop
movsl
mov
mov
mov
dec
xlat
out
mov
and
leave
repz
mov
add
mov
jns
scas
cmp
mov
aad
das
sub
icebp
sub
dec
es
je
lcall
cmp
test
movsl
or
andb
notb
into
xchg
outsl
or
xchg
sbb
sub
cld
cli
ss
sub
sbbl
mov
sbb
xchg
push
jp
test
and
mov
push
mov
out
ret
bound
fisttpll
cmp
clc
mov
dec
dec
push
adc
pop
js
out
mov
pop
mov
test
or
out
inc
out
dec
sub
inc
xor
pop
add
inc
lods
mov
rol
inc
sahf
xchg
cmc
outsl
inc
mov
push
mov
xor
xor
js
push
test
xchg
mov
xchg
mov
scas
pop
cmp
rcr
ljmp
mov
xor
jnp
add
lret
add
sarl
jmp
xchg
xor
mov
jle
xchg
mov
add
sbb
push
sbb
or
xor
pop
adc
pop
les
and
pop
dec
xchg
pop
mov
inc
clc
cmp
xlat
cmc
call
mov
mov
add
stos
in
sub
mov
mov
cmp
xor
ljmp
push
and
je
cmp
cld
jae
and
leave
aaa
test
les
mov
xor
lahf
inc
mov
and
movsl
xchg
aad
cli
mov
push
aam
int
outsb
movsl
dec
pop
movb
movsb
addb
sub
imul
gs
push
pop
dec
fcmove
mov
dec
das
xor
add
imul
xor
mov
iret
in
mov
int3
fadds
aas
arpl
filds
dec
cmp
pop
mov
pusha
mov
movsl
sahf
mov
hlt
mov
fdivrs
es
dec
leave
das
sbb
adc
push
xor
xor
push
inc
enter
into
jnp
les
call
pop
daa
fadds
cmp
fstl
test
xor
mov
adc
xor
ffreep
mov
js
jmp
or
jns
cmp
movsb
mov
je
push
testl
cmc
rolb
cmp
in
sti
cmc
lods
push
andl
inc
fwait
adc
stos
mov
insb
fidivrl
or
imul
out
adc
sub
mulb
in
mov
sub
mov
jp
in
xor
clc
sub
pop
adc
mov
int
cmp
in
jp
pop
adc
std
jl
and
rorl
testl
mov
popf
insl
mov
pop
addr16
call
jno
and
movsb
jno
sub
or
shl
inc
mov
inc
popa
sahf
xchg
or
scas
mov
mov
jns
in
push
outsl
mov
into
or
add
scas
movsl
mov
lret
ret
xchg
lds
mov
jp
dec
repz
loopne
in
js
test
xorb
psrad
mov
and
clc
nop
cmpsb
mov
fistpl
ret
gs
sub
imul
sub
jl
sub
out
xorb
movsb
out
addr16
lods
sbb
xchg
popa
sti
dec
push
daa
js
into
pop
jo
push
cmc
rolb
dec
test
mov
in
push
sbb
jb
adc
lds
es
pop
cmc
jnp
sbb
int
outsb
inc
and
fdivl
pop
jb
inc
out
push
mov
lret
mov
mov
leave
inc
sub
cmp
lods
in
add
add
jle
add
and
dec
sbb
xchg
jle
into
into
xchg
xchg
mov
sbb
jns
mov
test
hlt
adc
jl
xlat
cmp
mov
or
fadds
not
arpl
imul
and
nop
test
out
js
jl
cmc
decl
adc
adc
ljmp
cmp
pusha
popf
fcmovnb
loope
loope
sub
jle
jp
inc
pop
adc
inc
pop
movsb
pusha
fisttps
mov
jb
pop
sub
es
push
fiaddl
nop
or
lcall
adc
dec
or
mov
sub
repz
add
add
inc
sub
scas
dec
rcrb
inc
sub
pop
ret
inc
aam
xor
in
mov
test
jbe
fstpl
sbb
rol
icebp
cltd
sbb
push
movsb
setl
mov
add
inc
adc
add
or
stos
dec
je
lods
pop
push
clc
into
cmp
xor
stos
or
push
sub
cmpsl
rcrl
fidivs
xchg
ret
sbb
loope
adc
mov
lods
out
loope
cmp
in
mov
repnz
int3
in
add
sahf
cli
push
or
gs
cmp
cmpsl
movsb
cmp
cmp
shrb
sbb
mov
decb
adc
mov
bound
orl
dec
sbb
daa
inc
cmp
sub
xor
inc
cmp
mov
roll
pop
stos
jmp
bound
sbb
aas
test
jmp
fnstenv
outsl
and
jp
loopne
dec
push
mov
jae
sbb
adc
pop
adc
inc
add
test
jae
pop
pop
jmp
xchg
das
lar
or
xor
jnp
je
mov
fucomip
lods
hlt
in
pushf
scas
and
fs
fdivrs
cwtl
pop
pop
cmpsl
ret
out
add
aam
jno
cmp
push
mov
sbb
sub
jmp
imul
push
aam
sub
sti
cmp
push
js
gs
test
mov
inc
dec
add
mov
popa
ja
mov
lret
je
and
cwtl
xlat
sbb
add
jmp
insb
mov
in
add
xchg
lcall
sar
mov
out
mov
stos
xchg
mov
andl
daa
clc
sbb
clc
test
push
push
inc
add
cmp
push
pop
notb
aad
repz
inc
mov
mov
sbb
insl
fsubl
mov
mov
inc
out
xlat
scas
fsubs
sbb
and
xchg
leave
sub
cwtl
clc
xlat
sub
mov
pop
dec
repz
in
int3
mov
enter
adc
test
test
and
scas
mov
lcall
rcr
idivl
jb
stc
xchg
clc
daa
adc
mov
ljmp
inc
jbe
adc
cmp
dec
fstl
xorb
cwtl
insl
adc
bound
adc
test
cwtl
mov
mov
rcll
pushf
xor
rcl
adc
lret
mov
shll
mov
push
xlat
es
add
jb
mov
push
insb
mov
lret
ret
push
push
and
sbb
insb
pop
insb
cmp
push
and
scas
and
xchg
lea
or
imulb
insb
push
fimull
jns
pop
ret
push
pop
or
fsubl
ss
xor
mov
jbe
fildll
cmp
mov
jae
call
pushl
mov
loop
cmp
outsb
lahf
cld
adc
sub
js
inc
lret
xchg
push
scas
sbb
data16
or
aad
arpl
ja
aaa
ret
cltd
dec
popf
data16
dec
xchg
out
pop
inc
je
inc
out
fs
add
pop
notb
mov
xor
cmp
repnz
mov
imul
popa
cmp
xlat
push
sub
inc
shrl
xlat
fiadds
fisubs
dec
xorb
cmp
pop
outsb
mov
mov
stc
jp
jbe
lret
cmc
xchg
pop
inc
sbb
out
xchg
and
sbb
fnstcw
adc
pop
cld
pop
cmp
xorb
rol
fldt
inc
mov
hlt
push
neg
xor
xacquire
mov
fisubrs
repz
lahf
pop
jg
push
mov
mov
mov
insb
push
fdivrs
push
outsb
and
pop
arpl
sub
mov
mov
inc
cmp
lods
sbb
dec
xor
je
lcall
test
or
je
popf
bound
lcall
xlat
scas
mov
les
push
nop
sub
fsubrs
push
mov
dec
mov
xor
les
adc
lret
out
scas
and
push
inc
cmp
mov
xchg
roll
mov
dec
mov
and
popf
add
sub
lret
fildll
fsubl
sub
test
sbb
sub
stc
xor
mull
jae
adc
xchg
call
mov
sbb
jne
xchg
pop
jb
repz
dec
movsl
bound
addr16
inc
lods
popa
stos
fnstcw
dec
call
bnd
sbb
fadds
lret
ss
mov
inc
std
rcll
and
xor
mov
loopne
sarl
js
lods
scas
mov
ret
aad
push
push
push
je
daa
jae
lods
cs
pop
add
out
out
mov
cwtl
pop
dec
add
icebp
mov
inc
in
neg
adc
mov
fs
fstps
nop
ret
mulb
aad
in
fnsave
jg
mov
cltd
add
xchg
xchg
fsubrs
into
out
movsb
stc
cmp
in
lret
push
shrl
pop
jae
loopne
cmp
xor
dec
sbb
ljmp
jp
mov
sbb
mov
loope
in
mov
and
cmp
jne
ljmp
adc
mov
in
xchg
pop
dec
xchg
mov
mov
inc
out
addl
or
cmc
ds
out
or
xchg
push
push
dec
repz
arpl
and
jb
js
sbb
out
cmp
cmp
lret
xchg
and
aaa
pop
js
mov
xchg
sbb
cmp
sub
mov
and
insl
or
add
clc
xor
or
outsb
in
popa
adc
out
shr
arpl
fdiv
push
popf
sbb
jmp
lret
or
pushf
or
ret
icebp
bound
or
pop
mov
out
adc
jno
ret
js
shlb
push
lds
cmp
jle
cmp
pushf
sbb
pop
subb
adc
jmp
cmp
or
rcr
std
cmp
or
leave
or
cmc
mov
fstpt
sub
dec
pop
sbb
xchg
mov
mov
mov
inc
rcrb
dec
lcall
sbb
nop
xlat
pop
sbb
sbb
cmc
std
push
ja
aad
jbe
dec
mov
mov
test
push
xor
scas
imull
mov
pop
leave
loope
shrb
lods
fsubl
xchg
loope
leave
lock
mov
imul
in
push
mov
push
or
dec
sbb
nop
es
sbb
lods
xchg
fisubs
out
sti
push
mov
mov
cmp
addb
xorl
add
jbe
add
into
ja
cmc
mov
add
out
mov
cmp
mov
mov
sub
fdivrp
and
and
das
in
stos
fsts
cmp
int3
xchg
cmp
add
repnz
mov
pop
and
aaa
imul
dec
scas
cmp
adc
xor
mov
decb
test
ljmp
adc
cmp
jae
andb
mov
fs
mov
repnz
sbb
lods
add
out
push
icebp
inc
sub
add
jmp
ss
ret
out
sbb
mov
xorb
cmp
jo
mov
decb
xlat
push
xor
dec
or
mov
out
mov
cwtl
lds
jg
pop
mov
jae
and
sbb
cld
jmp
subb
xor
sub
in
pop
aas
cmp
jo
pop
or
push
scas
push
push
nop
sbb
gs
ror
add
shlb
and
mov
je
jo
je,pn
mov
psubb
inc
ja
push
cld
mov
aaa
pop
sbb
lahf
mov
add
clc
or
divb
test
pop
mov
push
mov
lods
adc
or
shlb
lret
dec
gs
leave
fs
pop
xchg
push
jp
loopne
std
pop
jae
popf
inc
mov
or
add
out
pop
out
push
daa
cmp
in
sbb
push
ss
push
push
je
dec
mov
shlb
sub
fwait
cmc
ret
or
ljmp
push
fs
int3
sarl
cmp
push
fstpl
xchg
cmp
cmpl
mov
ret
imul
repz
sti
add
mov
inc
mov
and
test
dec
adc
call
aad
or
jmp
lods
fildll
xchg
lret
xchg
xchg
sbb
sti
and
iret
xor
mov
inc
cmp
pop
mov
adc
mov
movsl
xor
pop
mov
out
lds
push
xchg
or
pop
test
insl
add
mov
pop
lcall
test
lds
neg
xlat
mov
fwait
and
sbb
mov
mov
push
fs
jl
call
movb
mov
inc
xchg
push
loop
in
mov
setl
lcall
push
pop
xchg
sarl
insb
adc
pushf
movsl
sub
cmc
or
push
in
mov
shrl
xor
jle
mov
xchg
add
icebp
shlb
loop
pop
lret
sbb
xchg
stos
aam
xchg
shll
daa
adc
jge
or
add
lods
dec
stos
and
or
sti
std
push
cmp
daa
shl
daa
xlat
and
cmp
push
sahf
repnz
fstpt
push
test
mov
lcall
adc
and
fcomip
add
sbb
ret
adc
mov
fadd
add
gs
mov
scas
or
or
aam
push
es
enter
sbb
rorb
cmpsl
inc
inc
shl
xchg
adc
push
aad
aam
xchg
mov
cmpsl
cltd
xchg
aas
insl
mov
stos
pop
mov
daa
shrb
movl
repz
adcb
jecxz
sahf
push
js
bound
les
pop
push
cmp
in
outsl
ja
bound
cmc
push
sbb
jo
out
js
add
fs
loope
ror
inc
push
push
test
js
mov
mov
inc
lods
pop
jnp
cmp
cmp
add
in
xlat
leave
inc
jmp
xchg
mov
jne
inc
adcb
or
fcmovnb
cli
xor
nop
data16
pop
and
cltd
or
xchg
movsb
push
fdivs
out
push
stos
test
jmp
mov
and
add
call
insl
jg
adc
jns
cmp
leave
mov
cmp
inc
push
xchg
mov
js
pop
testb
fs
movsl
inc
std
inc
jae
test
movsl
out
mov
sub
and
sub
lea
lea
mov
je
clc
push
inc
les
ds
push
mov
jecxz
xchg
lea
cmp
cs
mov
iret
pop
call
adc
inc
xor
pop
mov
loope
xor
xor
or
sub
push
pop
loop
arpl
mov
movsl
mov
cli
lods
sbb
insl
jg
cltd
adc
push
dec
test
fidivs
movsb
and
movsb
stos
fildll
push
inc
daa
and
cmp
pop
adc
sub
jbe
push
xchg
sahf
test
dec
inc
popa
ret
mov
test
add
inc
mov
scas
dec
push
insl
add
xchg
test
push
aaa
xchg
inc
sahf
out
ds
or
insl
sbbl
xchg
pop
xor
scas
push
imul
rcrl
mov
lods
dec
das
xchg
stos
lock
jb
cmp
jle
lods
sbb
in
jle
pop
bound
and
cli
inc
push
adc
adc
call
ficoml
nop
and
pop
xchg
ss
ja
or
inc
stos
inc
mov
js
mov
jbe
cmp
sarb
or
es
cwtl
bound
jg
jno
pop
inc
aas
xor
dec
mov
jae
div
jo
pop
jle
xchg
mov
mov
stos
loop
les
dec
mov
aas
jae
cs
aas
sub
jb
add
mov
cs
int
push
pop
inc
jb
jge
arpl
push
les
xchg
xor
fisubrs
test
sbb
xchg
jmp
fucom
jo
sbb
adc
in
mov
xchg
mov
lea
adc
pop
add
mov
pop
push
jmp
in
jmp
loopne
dec
cmp
cmp
cmpsb
mov
xchg
ret
sub
adc
in
mov
das
xchg
loop
int3
aam
ret
mov
repnz
jg
push
in
cmp
mov
mov
mov
sahf
outsb
jmp
mov
sub
sbb
out
jb
push
cld
call
dec
loopne
push
jmp
int3
test
and
imul
mov
aam
jecxz
cld
adc
cltd
sub
push
nop
xchg
jbe
ficomps
ljmp
fmull
mov
and
es
aam
cmp
pop
jae
jae
lret
inc
jecxz
pop
lret
cmpsb
mov
aas
and
jnp
mov
std
sub
sahf
js
dec
dec
push
test
stos
and
les
arpl
sub
xchg
xchg
ja
adc
and
mov
and
push
pop
cwtl
test
lret
mov
xor
cmpsl
fwait
xchg
subb
mov
sub
mov
and
outsl
jle
push
dec
mov
mov
int
jbe
int
idivb
mov
imul
push
sub
pop
mov
loop
icebp
sub
ss
adcb
shll
rcrl
mull
xchg
inc
aam
sbb
push
test
leave
fs
cmpsb
int
movsl
xchg
mulb
outsb
jge
jne
lret
ss
jg
add
dec
clc
test
mov
mov
push
lret
cwtl
sbb
popa
inc
mov
shlb
aad
pop
lods
repz
dec
int3
and
in
cwtl
cmp
call
mov
and
xor
cmpsb
jbe
hlt
hlt
inc
dec
jo
dec
aas
xchg
out
ljmp
lahf
jnp
mov
fstl
loope
mov
inc
out
cmp
sub
sar
cmpl
and
sub
fnstenv
mov
add
cmp
sbb
aaa
cmc
or
jb
dec
fcomps
lods
mov
push
xor
inc
loop
xor
push
mov
icebp
inc
xor
mov
ss
mov
push
push
jbe
mov
or
cmpsb
xchg
jge
mov
inc
xchg
loope
call
push
adc
ret
fcoml
call
inc
mov
adc
xor
fwait
xor
test
inc
lock
xchg
popa
mov
xchg
rcll
xlat
mov
jl
xchg
insb
sub
lds
mov
mov
mov
mov
insb
in
scas
test
arpl
bound
in
js
mov
push
or
inc
jae
clc
inc
xchg
dec
fdivp
lret
adc
fists
stos
cs
fwait
loop
addl
mov
fstl
lds
push
xlat
sub
pop
loopne
imul
cmpsb
int3
cmpsb
jae
pop
mov
or
add
sbb
sbb
and
test
sti
and
sbb
sub
pop
pop
dec
repz
sbb
out
fimull
jge
xchg
movsb
xchg
jno
mov
inc
and
dec
pop
ficoms
inc
add
jl
in
lahf
pop
scas
movsl
push
inc
xchg
mov
cmp
xor
insb
sbb
iret
int3
and
fmulp
aam
fwait
mov
daa
out
arpl
push
cmp
sbb
xchg
pop
sarl
jns
jns
sti
fdivl
or
call
and
arpl
cmp
lret
clc
cmp
cmp
addb
mov
mov
xlat
loopne
sub
dec
imul
mov
pop
int
xchg
repz
and
test
mov
push
jl
or
dec
enter
cmp
cli
not
fldt
lahf
repnz
pop
repnz
in
and
mov
int3
into
das
mov
mov
cld
and
inc
ret
inc
negl
lahf
iret
lahf
fsubrl
mov
push
lcall
pop
daa
movsb
pop
div
push
xchg
jne
das
lds
jl
inc
adc
cwtl
mov
mov
and
sahf
pop
fidivs
xchg
arpl
in
xchg
pop
loop
xchg
push
adc
ret
pop
and
inc
clc
jmp
fbstp
push
dec
lea
pusha
adc
ficoms
mov
imul
pusha
cmp
inc
push
in
xchg
aam
and
cmp
mov
lret
xchg
pop
add
stos
sbb
inc
and
push
sbb
lret
pop
lret
push
les
and
fwait
sbb
loopne
jno
scas
daa
movsb
ficoms
iret
mov
cmp
push
incl
loope
or
scas
xor
out
lret
fnstcw
pop
adc
out
pop
cmp
inc
jo
adc
mov
mov
popa
es
loope
inc
sub
push
jns
jecxz
ljmp
and
jo
or
mov
lret
jbe
push
js
sub
enter
aaa
push
cli
jge
lcall
dec
adc
hlt
mov
xor
xchg
arpl
push
inc
int3
addb
int
cmp
pop
cmp
adcb
push
clc
jbe
fwait
mul
negl
jmp
test
inc
test
add
adc
mov
lods
mov
mov
fisubrs
js
jae
hlt
mov
mov
orb
insb
outsb
sbb
xlat
cmpsl
mov
mov
push
add
lods
mov
xor
adc
add
mov
rcrl
frstor
and
add
lods
sbb
xor
andl
push
mov
leave
xchg
arpl
mov
call
adc
sub
int3
sbb
insb
xor
enter
xchg
emms
xor
or
mov
and
and
insl
mov
push
mov
push
push
adc
ficompl
lods
xor
xorb
or
pusha
fidivrs
cmc
cld
shl
movsb
pop
lods
into
rolb
sbb
hlt
out
loope
add
lock
adc
test
arpl
out
inc
cmp
push
es
and
notb
movsl
dec
jg
sbb
mov
adc
sub
arpl
jmp
ljmp
cmp
ja
mov
scas
dec
xlat
mov
lds
jge
cmp
lea
fmull
mov
stos
leave
or
inc
jl
dec
mov
fwait
xor
negb
adc
and
jl
mov
int3
test
sub
lahf
add
fimull
push
pusha
scas
or
sub
aam
nop
stos
mov
in
jo
push
sub
shr
arpl
andl
pop
ficoms
fwait
out
fdivrl
out
fwait
jmp
sub
mov
push
stos
xor
jno
jl
mov
mov
or
cmp
js
xchg
jle
sub
add
xor
xchg
ret
shlb
push
jmp
inc
out
or
mov
es
sbb
sbb
ret
jl
fisubrs
int
jl
jecxz
jo
bound
push
addb
insl
sbb
jl
lock
loopne
loope
loope
cmp
icebp
or
pop
xor
jmp
fdivrl
jns
push
in
jnp
sub
or
mov
popa
mov
dec
in
lcall
sub
lock
gs
cmpsb
xor
nop
ljmp
pop
sub
fwait
add
dec
fdivrl
cmp
cmpsb
stos
adc
jae
pop
cmp
out
pop
sub
lds
xchg
into
pop
repnz
jns
cwtl
loopne
fnstenv
pusha
mov
and
adcb
pop
ljmp
fdivrp
aad
jl
mov
dec
inc
ss
xchg
ds
lret
es
xor
inc
cmp
stos
cmp
mov
fistpll
andb
lahf
imul
cmp
sub
dec
rcrl
mov
ljmp
jmp
cwtl
jns
xorl
mov
mov
movsb
adcb
int
mov
jo
arpl
xlat
inc
jbe
push
shrl
sbb
pop
cmp
das
mov
daa
push
or
jmp
push
mov
aad
sbb
out
or
lods
xchg
out
pop
cmpsb
lret
mov
jnp
xor
icebp
decb
aas
daa
aam
hlt
rorb
adcl
js
dec
or
pop
inc
inc
xchg
dec
adc
mov
aaa
fcompl
xchg
lods
rcrb
mov
cld
xor
jge
jne
jnp
sahf
sbb
fistpl
push
add
mov
or
bswap
in
sub
inc
leave
inc
out
add
sarl
cmp
cmp
in
cmpsb
sti
push
loopne
mov
jg
and
and
fidivrs
add
xchg
or
out
lods
jb
mov
sbb
or
mov
add
lea
out
push
inc
add
add
add
and
sbb
inc
rcll
test
xchg
push
mov
fidivl
sbb
adc
loopne
movq
mov
mov
fisttpl
cld
call
or
xchg
and
imul
fiaddl
or
pushf
xlat
insb
inc
xchg
aam
mov
adc
add
lds
pop
dec
adc
cmpsb
adcl
adc
out
and
push
mov
lahf
cmp
insb
leave
aaa
cmp
cmc
jae
test
data16
mov
jae
dec
insb
mov
sub
mov
test
movsb
cmp
ret
xchg
shll
shrb
adc
sbb
inc
ret
imul
xchg
fcmovnu
mov
adc
lahf
cmp
sarl
aas
pop
aas
inc
xchg
call
cmpsb
dec
mov
and
fsubrs
mov
subl
mov
mov
xchg
movsb
mov
in
pop
dec
push
cmc
xor
test
xchg
loope
rol
lret
enter
cmp
cmpsb
sbb
sub
push
pusha
xor
nop
shll
imul
int
cmp
xor
cmp
inc
cwtl
cmp
xchg
cwtl
sbb
lret
repnz
insl
mov
movsb
mov
mov
ror
lds
jae
cmp
stos
mov
push
psrad
inc
mov
fnstenv
push
and
sub
std
lods
popf
mov
movsb
xchg
mov
arpl
cmp
sti
iret
ja
mov
xor
jle
lock
loopne
cltd
mov
popf
loopne
repnz
test
jecxz
inc
cmpsl
clc
sbb
enter
shlb
cmp
sub
lock
mov
push
loope
push
xorl
ss
adc
cmp
imul
aad
dec
cmp
iret
xor
mov
mov
xorb
and
dec
dec
sbb
mov
mov
leave
das
mov
lds
mov
std
xchg
adc
aaa
ds
testl
std
pusha
scas
sbb
cmpsb
mov
fmulp
add
mov
fadds
js
std
mov
lcall
fnstenv
or
adc
xor
pop
dec
dec
rcrl
jmp
cmp
dec
pop
repz
and
popa
repz
add
mov
mov
mov
cmpsb
mov
pop
enter
sbb
cmp
and
or
into
fldl
cltd
or
imul
dec
xor
jl
cmc
xchg
mov
out
and
or
or
mov
mov
dec
icebp
lcall
dec
push
test
and
xchg
mov
in
fdecstp
stc
arpl
insl
pop
jmp
xchg
jo
sbb
or
sub
pop
jecxz
in
sbb
jo
jno
pop
xchg
mov
mov
cmpsb
jg
rol
clc
gs
scas
and
inc
mov
inc
mov
jle
pop
sub
aad
sbb
repz
inc
jmp
out
gs
popf
mov
jae
mov
jl
sub
mov
aas
mov
push
sub
adcl
in
cmp
pop
int
adc
xor
or
jmp
pusha
loop
jg
sbb
sub
jae
hlt
nop
leave
mov
push
cld
xchg
aad
icebp
pushf
push
mov
xor
stos
orl
js
add
jle
or
and
inc
fsubrs
test
sbb
cmpsb
and
fstpt
adc
pop
ret
aad
cld
pop
nop
jb
xchg
fucomi
je
out
dec
pushf
mul
add
lods
std
std
test
fwait
js
test
xor
jge
hlt
pushf
inc
pop
dec
aas
push
lods
rclb
or
fdiv
loopne
icebp
add
nop
mov
dec
arpl
ljmp
jae
or
xor
jnp
test
lcall
pop
xor
ret
es
add
inc
add
xchg
dec
dec
jns
add
sbb
je
sbb
hlt
int
jno
sbb
cmp
xor
or
fstpl
jmp
enter
pop
mov
insb
scas
sbb
ret
leave
mov
ret
stos
jae
addb
push
pop
loope
repz
mov
pusha
popa
dec
mov
in
jp
jecxz
mov
int
jbe
addb
insb
les
jg
leave
push
add
aad
mov
lcall
mov
pop
lcall
imul
mov
jecxz
mov
enter
inc
cwtl
outsb
cli
cltd
gs
repz
enter
jno
jb
add
aam
lods
aaa
jecxz
push
xchg
sbb
loop
inc
mov
inc
movsb
pop
clc
sbb
popa
out
cmpsb
mov
lock
xchg
xchg
cmp
leave
jnp
mov
jg,pt
xchg
dec
leave
popw
inc
leave
inc
pop
cld
xchg
mov
pop
push
mov
inc
movsb
fdivrp
sub
out
sbb
inc
dec
xchg
cmp
out
lahf
stos
mov
pop
out
and
lahf
push
es
fidivrs
mov
jle
sbb
and
sahf
frstor
dec
push
mov
xchg
add
xchg
sub
decl
or
sbb
adc
mov
test
push
push
rcr
adc
aaa
enter
sbb
push
pop
mov
push
and
push
sbb
jmp
scas
pusha
adc
in
cmp
fs
fwait
xor
lds
sbb
fcompp
sbb
cs
jl
mov
mov
lcall
jecxz
lods
xlat
rorb
movsb
fimull
xchg
sahf
mov
into
push
jnp
pop
fsts
mov
cmp
ds
leave
pop
insl
hlt
fisttpl
out
lahf
mov
and
xor
arpl
and
cwtl
add
sbb
or
in
mov
adc
xchg
mov
cmc
or
sub
icebp
cmpsb
aaa
out
xchg
sub
test
cmp
sti
mov
pop
push
sbb
es
or
out
nop
jo
fcmovu
add
in
push
scas
xlat
xchg
sbb
jno
and
sbb
lods
xorw
daa
pusha
fcomps
add
pop
fstpt
mov
ja
sbb
xlat
daa
jnp
ljmp
in
mov
or
dec
mov
xor
vcvtps2pd
ss
pusha
adc
ljmp
sarb
ret
mov
scas
insb
lea
jnp
cmpsl
cld
push
adc
pusha
cmp
js
mov
dec
dec
pop
movsl
adc
cli
lea
lret
pop
arpl
leave
mov
pop
insb
add
push
loope
adc
and
ret
xchg
mov
and
jmp
leave
std
mov
in
faddl
es
sti
lea
xchg
push
das
leave
mov
aam
fdivr
and
mov
jnp
cmp
js
rcrb
sahf
or
mov
leave
loop
lods
xchg
test
pop
mov
xchg
jno
cmp
push
mov
sbb
sbbb
in
mov
mov
pop
and
sub
push
mov
dec
mov
mov
and
pop
dec
jp
iret
bound
ljmp
cld
xor
or
sub
inc
push
movsb
pop
sub
cwtl
add
mov
movsl
clc
pushf
or
or
xor
pop
movsl
out
js
and
rol
and
adc
aam
xchg
mov
add
dec
cli
push
xchg
or
int
stos
and
or
insl
rolb
fcomps
divb
mov
dec
dec
cld
jo
adc
xchg
ret
inc
mov
add
mov
ret
les
push
les
cltd
mov
pop
add
jno
or
push
mulb
inc
mov
out
call
inc
xor
filds
xchg
mov
dec
stc
sub
aas
imul
and
ds
xlat
xor
sub
add
inc
rolb
in
scas
mov
test
cmp
pop
test
pushf
ret
dec
lods
sbb
cltd
lds
clc
adc
mov
sbb
dec
jne
xchg
xor
jmp
daa
jge
fwait
jbe
inc
inc
popf
adc
push
into
ficomps
imul
cmp
pop
mov
nop
push
mov
jns
and
loope
cmpb
or
call
jecxz
push
push
mov
sahf
outsb
adc
cs
lock
jbe
icebp
rorl
add
pushf
xor
inc
aad
sarl
xchg
aaa
xchg
inc
add
out
adc
dec
cmp
cmp
cli
iret
in
out
push
mov
xchg
jmp
arpl
jecxz
out
insl
sub
lret
sbb
in
pusha
jne
xchg
lods
addr16
lea
mov
loopne
or
les
mov
and
wrmsr
adc
cmp
int
mov
cmpsl
push
add
inc
xor
mov
clc
loope
mov
pop
cmpsl
lock
xchg
cld
mov
arpl
pop
sub
cwtl
fistps
bound
xchg
adc
mov
dec
ss
popf
in
out
popf
push
mov
sub
fs
mov
xchg
pop
dec
jae
jns
xchg
icebp
ljmp
mov
movsl
loopne
push
dec
outsl
add
and
mov
jg
filds
sti
cmpsb
cld
dec
ds
pusha
mov
ja
lcall
bound
outsl
mov
add
add
scas
add
test
shrb
stos
push
ret
sar
sti
push
fcmove
stos
bound
loope
daa
push
sbb
lahf
cltd
lret
mov
in
mov
rclb
jl
pop
add
push
fiadds
flds
and
je
xchg
es
test
sbb
insb
test
dec
sbb
js
ljmp
fmull
and
int
stos
push
cs
xchg
xchg
out
add
pop
inc
inc
lods
adc
cmpsl
das
dec
or
mov
push
imul
inc
fcomps
pop
pop
in
decl
jnp
mov
xchg
bound
cmp
cld
adc
int3
out
ds
ret
push
cmc
shr
dec
jbe
sbb
and
jecxz
ret
shr
adc
rolb
js
in
clc
jle
popf
add
fsubr
je
movl
mov
xor
jnp
enter
sbb
rcl
pop
mov
mov
nop
sahf
pop
pop
in
cmp
lret
dec
out
inc
es
mov
out
int
sbb
or
add
adc
bound
mov
sti
popa
cmp
mov
addr16
dec
sbb
test
and
in
xor
cs
mov
or
adc
addr16
dec
xor
push
jecxz
pop
outsl
mov
mov
addr16
bound
rorl
inc
mov
fnstcw
lods
test
mov
mov
jb
mov
dec
mov
jp
cmp
mov
aaa
mov
enter
bound
jne
sbb
mov
sbb
in
add
sub
loopne
push
cld
and
cmp
jecxz
pop
push
push
push
inc
lret
ret
jo
mov
repz
out
insb
imul
mov
cmp
aad
mov
arpl
or
adc
xchg
into
fs
idivb
aaa
rcrb
and
cltd
cmp
aas
outsl
pop
push
popa
lea
adc
sbb
pop
jno
divb
in
jl
gs
push
cli
adc
rolb
pusha
add
push
mov
adc
mov
ljmp
mov
pop
xor
les
outsb
push
ss
adc
xchg
popa
ss
sahf
mov
jl
cmpsb
cli
mov
push
outsb
xchg
add
push
mov
loope
and
inc
cli
scas
in
int3
pop
push
adcl
les
fsubr
out
scas
icebp
jp
xor
adcl
push
mov
mov
jne
sub
lds
xor
jae
hlt
mov
ds
fnstsw
and
xor
xor
or
daa
test
imul
mov
ds
push
std
pop
xchg
mov
enter
xchg
outsl
fsubs
pushf
out
or
mov
dec
inc
scas
cmpsl
pop
dec
pop
sbb
push
fidivrs
cli
mov
pop
cmp
subl
bound
fwait
pop
enter
jbe
add
cmpb
dec
out
roll
dec
sub
sub
jmp
mov
mov
ja
hlt
mov
arpl
jl
sub
lods
cwtl
and
add
mov
jge
addb
mov
lret
or
push
mull
mov
loope
mov
mov
cmp
dec
mulb
es
aaa
icebp
push
aam
test
out
lcall
daa
iret
xchg
xor
and
das
mov
rcl
repz
pop
aam
inc
xor
pusha
sti
aam
sahf
dec
rcl
int
dec
shrl
pop
in
push
sbb
mov
movl
pop
xor
in
aam
test
sbb
subl
push
adc
lea
adc
sbb
pop
or
nop
out
xor
mov
jbe
cmp
decb
lods
or
aad
mov
xor
xor
jae
jle
rorb
int3
dec
push
push
imul
stos
pop
les
popf
cltd
cli
rorl
loopne
mov
push
cmpb
pop
cmpsb
aad
loop
add
test
mov
loope
cmp
loopne
push
ds
loope
or
das
push
cwtl
roll
and
xchg
fistps
out
sbb
insb
cmpl
jnp
xor
fwait
xchg
sbb
hlt
mov
inc
rorb
jns
in
lcall
xor
cli
stos
push
sub
inc
clc
cwtl
int3
jp
mov
xchg
jge
fnstsw
mov
or
std
sbb
xor
or
cmp
mov
in
mov
stos
dec
xor
sub
pop
add
imulb
adc
aas
insl
sti
cmp
adc
or
bnd
adc
pop
jnp
add
test
add
add
stos
daa
add
adc
mov
lock
iret
cli
shll
jmp
mov
push
stos
jl
mov
sahf
jne
push
pop
inc
repnz
xor
push
pop
sub
mov
sti
mov
fcmovnu
out
fiadds
enter
sub
mov
jle
daa
insb
mov
and
cli
xor
ficomps
add
sahf
fisubrl
pop
dec
pop
dec
xlat
adc
mov
loop
push
test
pop
mov
mov
in
fnsave
outsb
xchg
sub
hlt
out
xchg
mov
sbb
mov
dec
cmc
xor
add
inc
addr16
mov
jg
mov
lods
mov
addr16
inc
dec
push
xor
iret
mov
ds
or
dec
push
inc
mov
xor
pop
lods
jbe
add
subps
jns
pushf
ret
addl
test
jae
and
shrb
jge
inc
mov
aam
or
pusha
mov
inc
xor
subl
dec
inc
mov
or
cmp
mov
dec
mov
test
in
iret
mov
mov
psubsb
pusha
cmpsb
or
mov
dec
je
or
aam
push
in
jbe
bound
std
sahf
mov
cmp
fcomps
cmp
xor
fwait
sub
test
mov
daa
pop
dec
cmp
dec
and
test
xchg
sbbl
add
fwait
mov
push
pop
mov
cli
dec
adc
out
pop
jae
pushf
orl
mov
stc
je
or
mov
imul
in
push
inc
cmp
sub
jmp
orl
movsb
pop
inc
pop
add
sub
pop
push
ret
out
mov
leave
cld
std
repnz
dec
jge
sub
fxch
pop
in
mov
addr16
pop
mov
mov
loopne
mov
adc
xchg
sub
pop
ljmp
mov
inc
sub
pop
ja
xchg
fbstp
add
stos
outsb
addr16
ds
mov
into
int
fwait
ljmp
jnp
cmp
mov
roll
aad
jl
popa
mov
adc
aad
inc
ss
in
xchg
ret
arpl
mov
or
jns
sbb
cmp
mov
cmp
insl
es
cli
lret
aad
insl
outsb
scas
push
pop
stos
and
xchg
xchg
cmp
mov
lea
cmp
push
mov
jl
pop
sti
decl
jae
clc
out
mov
mov
in
inc
mov
test
cmp
enter
xchg
cs
pop
aaa
push
arpl
xor
inc
rcrb
int3
xchg
dec
psubusw
and
pop
inc
repz
add
sub
jbe
mov
je
pop
lea
in
push
outsl
pushf
das
push
popl
cmp
push
mov
outsb
jno
mov
daa
rcrl
repz
or
mov
bound
ds
aas
in
push
dec
sub
sub
out
hlt
xor
insl
jmp
xchg
adc
lahf
add
lret
rcrl
xchg
in
mov
push
sub
mov
inc
mov
aam
cs
inc
scas
stos
adc
or
jnp
cmp
sub
lcall
push
into
mov
inc
xor
add
jne
andb
push
inc
out
popa
int3
xlat
movsb
in
in
ret
leave
mov
pop
dec
jl
pop
xchg
imul
mov
cmp
fucom
inc
xchg
lahf
sahf
ja
cmpl
jp
and
js
ret
sub
cltd
lcall
push
sub
jp
fs
pusha
lds
jg
sti
cmp
add
push
cmp
sub
in
inc
lea
orb
jmp
idivl
xor
sarl
test
enter
push
shrl
jae
inc
inc
mov
flds
adc
jb
imulb
mov
push
sbb
arpl
outsb
jbe
mov
dec
push
mulb
add
add
mov
xor
mov
ds
test
sbb
testl
orl
jo
loopne
incl
test
fnsave
pop
dec
sbb
add
push
repz
xor
adc
test
call
xchg
cmp
add
pop
lds
mov
mov
fucomip
mov
ja
inc
fldenv
mov
outsl
in
push
xcrypt-ecb
cmpsl
int
cmp
mov
xchg
bound
cmc
add
fcompl
pop
adc
mov
mov
test
mov
ja
add
inc
adc
xor
fisttps
xchg
cmpl
sahf
fcomp
subl
adc
cmpsb
pop
mov
popa
xor
inc
xchg
jp
and
xor
sub
lods
dec
fimull
push
mov
aaa
movsb
mov
and
sti
adc
or
pop
lahf
inc
icebp
aaa
mov
cli
cmpsl
bound
mov
iret
mov
pusha
in
mov
std
lahf
pop
or
ret
imulb
dec
xchg
dec
stos
dec
xchg
test
mov
int3
inc
adc
lret
sbb
fs
inc
loop
push
adc
mov
scas
in
sub
push
push
out
mov
roll
push
pop
dec
cmp
cld
inc
push
push
push
inc
out
cld
aas
ja
shrl
inc
loopne
into
imul
jge
pop
cmp
orb
test
jae
adc
movl
fcompl
fmuls
inc
cmc
into
jle
jp
dec
inc
call
jb
popf
jg
ret
xor
rcrl
out
or
or
mov
and
cwtl
imul
sbb
jg
arpl
add
dec
add
mov
cwtl
fdivp
cmpsb
mov
pop
xchg
add
mov
jg
pop
fldenv
jecxz
aaa
es
inc
cltd
xor
xor
push
jcxz
jne
dec
in
adc
stos
jl
mov
and
sbb
repnz
add
push
mov
sbb
xchg
outsb
in
pop
scas
into
scas
es
iret
and
repz
daa
into
inc
rclb
mov
cld
push
jnp
jno
dec
pop
cwtl
mov
out
inc
clc
dec
pop
adc
xchg
sbb
imul
add
cmp
mov
mov
in
or
lds
cmp
dec
dec
sahf
jo
sub
lods
mov
fwait
aad
in
mov
cmpsl
mov
mov
scas
dec
sbb
adc
mov
sti
fsubrs
mov
add
and
cmpsb
sbb
roll
rorl
outsb
mov
inc
add
sti
mov
aaa
dec
rcrb
xchg
test
xlat
aad
ljmp
aas
xchg
adc
mov
inc
outsb
push
sbb
dec
sub
add
sub
adc
add
insb
sti
insl
sub
push
inc
sahf
mov
push
std
popl
hlt
adcb
xlat
pushf
push
inc
sbb
enter
jns
mov
xor
cmp
lcall
cmp
fisttps
lcall
dec
pop
dec
jo
ret
inc
loopne
push
pop
lret
xabort
jmp
xchg
add
xchg
xchg
pcmpgtd
loopne
add
xor
jg
clc
aas
mull
inc
or
mov
and
push
divl
jge
in
jecxz
mov
lds
mov
mov
cwtl
pop
clc
popa
loope
insl
fs
inc
push
das
loopne
aad
popf
push
sti
dec
data16
pop
and
lods
cltd
inc
mov
outsl
inc
lock
enter
xor
lea
xchg
mov
and
ja
fdivs
popa
dec
mov
dec
pop
xor
stos
cli
rol
es
fdivr
fadds
jp
in
and
ja
data16
add
ja
adc
push
xor
cltd
shl
fstpl
dec
or
cwtl
pop
pop
jns
sbb
enter
push
inc
into
jmp
jns
shrl
dec
cmp
in
ss
cltd
mul
nop
inc
and
xorb
fsts
mov
pop
test
loop
sub
test
clc
mov
jns
jne
jl
mov
push
mov
and
add
push
popa
sbb
or
pop
jmp
push
sbb
addr16
lcall
pop
xor
jle
mov
aaa
add
push
loopne
mov
out
out
pop
xchg
sbb
lret
dec
mov
es
out
cmc
add
xchg
xchg
and
cmp
xor
pop
call
sub
cmp
pop
xchg
scas
jge
xor
jp
push
adc
jno
mov
mov
cwtl
jnp
add
out
popf
pusha
add
aas
loopne
fdiv
add
out
jne
in
xor
cmc
xchg
pop
or
dec
push
pusha
inc
cmpsl
int3
push
stc
insb
dec
xlat
out
xor
outsb
adc
and
cmp
adc
andb
and
imul
mov
sub
das
rclb
pop
sub
fsubrp
ljmp
jne
dec
sbb
push
das
and
cltd
inc
cmp
enter
fldl
outsb
xchg
loopne
nop
sahf
add
mov
adc
lock
into
or
int3
and
adc
scas
cmp
sub
xchg
and
repz
add
inc
out
decl
add
loopne
lret
jmp
loopne
push
cmp
rolb
dec
lret
fldpi
sub
mov
cmpsb
jno
shrl
and
xchg
and
fcoml
fucom
inc
jae
add
jle
stos
xor
fiaddl
add
ret
pushf
dec
enter
or
pusha
mov
push
loopne
add
xchg
pusha
les
cli
fisubl
popa
adc
inc
fimull
and
adc
or
adc
xor
push
test
fsub
lret
movsb
fisttps
xor
adc
jno
mov
lret
cmp
xchg
lahf
xchg
pushf
mov
ficoml
loop
or
std
dec
arpl
stos
sbb
loope
or
dec
xchg
fistpll
sub
mov
pop
stc
xchg
fsubs
xchg
bound
and
push
push
add
ret
mov
inc
andb
iret
lods
out
push
push
int
in
and
dec
xchg
aam
cwtl
ljmp
mov
out
andb
test
stos
fnstenv
dec
stos
xchg
adc
popf
xor
pop
addr16
shrb
out
dec
pushf
call
sub
mov
pop
pop
imull
rorb
test
cmp
movsl
dec
ss
lods
xchg
xchg
imul
stos
fmull
dec
lods
dec
dec
popa
es
inc
pop
and
test
loope
adc
mov
in
mov
jecxz
inc
js
or
mov
int3
xchg
cmp
lods
cmpsl
xchg
in
push
sub
cmp
and
inc
jmp
jb
mov
aad
sbb
inc
sbb
mov
das
imul
adc
add
cwtl
jo
or
pop
dec
in
sbb
dec
xlat
sbb
and
fwait
iret
stos
sbb
jg
rcrl
xor
xor
pop
dec
and
mov
das
nop
in
jmp
out
imul
add
adc
ficoms
mov
call
mov
mov
and
adc
movsb
jecxz
inc
jle
std
xchg
sbb
sbb
lea
jl
xor
mov
adc
jg
jmp
xchg
pop
cld
dec
add
decb
js
dec
hlt
and
stc
adc
cmp
push
fnstenv
xchg
lds
in
sub
aad
cmpb
xchg
out
mov
inc
hlt
aam
das
mov
push
popa
sub
rclb
push
fs
in
xchg
pop
bound
out
dec
add
push
pop
subl
ljmp
fcomps
js
rcrl
xchg
pop
add
bound
dec
sub
nop
lret
inc
sub
inc
hlt
lret
jb
jne
pop
push
fnsave
int3
jge
cmp
test
or
stc
das
xchg
cmc
pop
xchg
jno
rorb
stos
jb
repz
push
pop
iret
mov
xchg
mov
pop
xor
push
loop
jnp
shlb
repz
xchg
xor
xchg
sbb
inc
sbb
pushf
mov
cmpsl
scas
nop
ss
sbb
sbb
and
mov
ret
in
and
pop
sbb
mulb
imul
adc
mov
xchg
xlat
cs
int
jp
fwait
call
mov
daa
push
jp
mov
movsl
push
xchg
xor
inc
and
pop
adc
xor
or
cld
jae
std
inc
ljmp
push
pop
cs
xchg
pop
xchg
inc
or
lock
enter
sub
pop
mov
add
dec
mov
push
sub
inc
fcoml
jbe
and
ret
pop
add
int3
je
jno
in
shlb
out
insl
out
xchg
dec
aad
adc
add
inc
lods
or
mov
std
mov
xchg
mov
sbb
subl
mov
dec
imul
and
dec
xorb
sub
xor
cmp
int
lea
adc
and
repnz
in
or
ljmp
cmp
xlat
jnp
fsts
subl
push
and
add
xchg
dec
add
mov
and
pop
cmp
movsb
fs
mov
adc
stos
xor
mov
roll
je
decl
in
or
add
das
scas
dec
mov
sti
clc
ja
mov
out
pop
pop
insl
sub
repz
repnz
ret
xchg
cmp
inc
cmp
sbb
out
gs
inc
mov
cmp
sub
or
pusha
test
mov
add
in
enter
call
pop
jl
sahf
call
push
in
and
pusha
cmp
and
mov
pop
aad
dec
push
inc
sti
or
mov
sub
push
xchg
out
mov
pop
js
mov
pop
ljmp
xchg
inc
into
int
xor
inc
mov
js
ljmp
cmc
and
push
cli
xchg
xchg
imul
and
jge
cld
sahf
jg
fldcw
adc
movsb
lret
sahf
into
jns
imul
andw
cmp
sbb
ja
mov
fisttpll
inc
in
xchg
add
pop
repz
mov
xchg
push
enter
hlt
mov
leave
ljmp
xor
pop
pop
jecxz
jne
in
sahf
std
es
out
inc
cli
insl
lret
adc
jbe
repnz
xchg
mov
cmp
iret
jne
lahf
sub
test
xchg
lcall
outsb
fadds
je
lahf
add
test
shl
xor
les
push
mov
enter
daa
int3
mov
xor
sbb
lret
jp
mov
adc
movsl
cmpb
repz
mov
cmp
or
std
repz
dec
mov
ret
mov
es
repz
leave
ret
bound
mov
repnz
mov
lds
mov
and
fisubrl
lcall
push
fs
scas
paddsw
add
stc
sbb
aad
stos
adc
and
int
xor
pop
lret
push
in
sbb
sete
mov
cwtl
les
adc
jbe
mov
push
push
xchg
jb
jno
icebp
mov
ja
mov
dec
outsl
jmp
inc
test
dec
std
mov
inc
insb
sarl
out
ret
arpl
shl
jge
push
shlb
aad
mov
xchg
jge
mov
add
imul
or
fnstcw
repz
dec
out
cmp
and
mov
mov
jne
enter
mov
ja
xchg
lods
mov
xchg
ret
push
into
cmp
stc
push
jge
dec
fabs
ss
icebp
push
mov
sbb
shll
movsb
movb
cmc
cli
gs
loope
test
adc
xchg
ds
push
bswap
ds
push
push
cltd
and
sbb
fs
mov
sub
in
and
pop
movsl
mov
stos
mov
aaa
int3
iret
movaps
movsb
out
add
aas
adc
pop
loopne
mov
mov
sub
cld
shlb
dec
push
jmp
inc
ret
in
dec
lock
test
imul
stc
outsl
xor
xchg
xor
lea
roll
mov
jnp
jnp
pop
dec
aad
testl
push
or
jb
inc
sub
adc
std
sbb
es
add
xor
dec
xor
leave
and
jae
add
pop
je
cwtl
andb
adc
or
ja
cmp
gs
rolb
push
ret
pop
lcall
push
xor
int3
call
shll
pop
xchg
cmpsl
out
or
popf
jge
fiaddl
nop
addl
loop
divb
ja
and
sahf
or
out
add
cmpsl
shl
pusha
inc
mov
push
xlat
pop
rcrl
mov
xchg
test
mov
jecxz
sub
lds
dec
xor
flds
sbb
popa
aam
dec
in
mov
push
cmp
popa
popf
imul
mov
push
subb
fs
sub
aam
xor
add
nop
add
ret
and
and
idivl
addr16
mulb
in
cmp
in
adc
adc
cltd
es
sysexit
add
call
inc
sub
adc
sbb
adc
mov
pop
xlat
shr
pop
lcall
dec
lahf
jae
int3
jne
rcll
dec
mov
pushf
imul
or
outsl
in
stos
sbb
lock
mov
les
gs
das
cmpsb
in
mov
xor
mov
pop
jno
mov
cwtl
jnp
mov
fadds
push
fnstcw
scas
loope
mov
leave
testb
jo
cmp
dec
rol
jno
mov
fistpl
xchg
addr16
xchg
int
lock
fldl
leave
add
inc
fldl2t
ja
pop
or
mov
mov
scas
imul
ja
xchg
push
and
loop
aaa
jae
pop
mov
cmp
aam
fsubrs
mov
xchg
and
notl
arpl
pop
mov
push
jbe
aad
int
ja
sarb
pop
pushl
xor
data16
fbstp
cmp
into
add
or
mov
jle
fsubrl
sahf
mov
ja
xchg
pop
xor
andl
xor
stc
mov
leave
push
jge
push
xchg
and
sahf
or
test
or
inc
rcll
inc
repz
fwait
xchg
dec
lods
bound
jecxz
aaa
add
mov
sub
imul
cmp
adc
std
in
sub
pusha
inc
mov
imul
add
mov
popf
ret
push
cli
test
inc
ret
in
cmp
cmp
loop
dec
pminub
jno
mov
or
stc
cwtl
add
pop
cmp
mov
xor
push
mov
dec
mov
add
loope
ja
sub
dec
or
and
jns
cmpsb
mov
sbb
les
lods
sahf
push
add
mov
aaa
imul
and
jae
lcall
imul
fisttpll
pusha
roll
or
movsl
jge
inc
sbb
inc
mov
ret
sub
push
adc
add
fcmovnu
jnp
jb
jo
lret
pop
aad
pop
xchg
fidivs
xchg
mov
popa
mov
flds
nop
shll
inc
stos
daa
or
mov
stos
sub
mov
ja
rcr
mov
add
dec
adc
ret
or
frstor
bsr
pop
mov
jns
xlat
cltd
adc
pop
sub
ret
das
xchg
pop
add
mov
fnstenv
or
push
in
dec
loopne
sub
xor
jns
das
shrb
sub
push
sbb
xchg
scas
xchg
nop
dec
and
adc
push
mov
or
pop
jae
jb
push
mov
sahf
adc
inc
repz
add
nop
jno
push
xchg
arpl
mov
ss
xor
testb
inc
xchg
ds
in
push
rol
jnp
fstl
enter
pusha
cmpb
lcall
push
mov
pop
mov
nop
inc
sub
notl
into
and
jae
pushf
aad
dec
pop
int
adc
mov
mov
pop
cmpsb
xchg
fdivrl
or
push
push
test
jmp
sahf
sarl
xchg
gs
push
push
cmpl
gs
cs
jb
mov
pusha
arpl
mov
mov
sub
movsl
and
push
rep
mov
pushf
cld
mov
incl
push
mov
jbe
adc
addr16
jl
cmp
inc
add
adc
popf
jecxz
into
xchg
pop
orb
cli
pop
movsl
test
shlb
adc
arpl
xchg
inc
cs
insl
int3
int
pop
jnp
dec
and
loope
sub
adc
pushf
enter
and
jmp
xor
negb
mov
out
mov
mov
add
cmp
dec
fimuls
pushf
inc
addb
cli
idivb
xchg
imul
je
insl
mov
sbb
sarb
mov
je
movsl
lds
andl
sbb
sbb
test
imul
je
mov
lcall
outsb
sbb
mov
in
add
ss
lcall
add
adc
dec
sub
lods
mov
jmp
mov
cltd
mov
mov
xor
daa
ljmp
addl
in
lcall
or
jl
lods
popa
fisubl
mov
pop
push
clc
xchg
push
enter
pop
dec
inc
imul
inc
mov
mov
outsl
fnstsw
iret
outsl
loop
andb
fs
mov
dec
xchg
js
mov
pop
test
sub
test
mov
mov
mov
jg
adc
hlt
ja
pushf
das
inc
movsw
iret
fcmovne
ds
popf
add
inc
mov
stos
xchg
aad
insb
lret
stos
mov
movsb
outsl
gs
and
xchg
jbe
inc
les
cmp
in
push
push
mov
xchg
mov
push
push
push
out
loope
lret
cmp
pop
jns
cltd
cmp
ss
push
rolb
lea
add
inc
add
mov
int3
cmp
repnz
pop
xor
popf
in
xor
cmpsl
das
test
in
xchg
jl
pop
jecxz
and
lds
sub
jecxz
xchg
jae
sti
ljmp
jae
sub
mov
adc
pop
mov
outsl
inc
shrb
fs
std
push
out
fmul
lock
sbb
xchg
cwtl
pusha
data16
pop
mov
jecxz
jecxz
mov
fsubs
jmp
sub
mov
or
out
cmpsl
icebp
loop
xchg
or
scas
pop
pop
lcall
pushf
mov
call
test
jno
data16
mov
repz
mul
push
in
lods
incl
cs
pop
and
mov
xchg
sub
mov
scas
add
jle
inc
outsb
jno
sub
sbb
push
inc
and
ror
mov
pushf
adc
mov
jg
jg
add
jmp
aaa
imul
cmpsl
pop
enter
cli
cmp
scas
pop
fistpll
push
sti
and
xchg
je
pop
add
insl
jge
lds
push
jg
dec
movsl
mov
jecxz
push
je
cmp
ja
jmp
jae
xchg
repz
scas
in
jno
jl
xor
decl
cmpsb
sarl
xchg
cli
out
out
adc
das
lods
xchg
jae
shll
gs
ret
aas
add
or
jb
mov
arpl
lret
shll
repnz
mov
mov
call
in
out
fdivrl
test
dec
xor
xchg
dec
inc
ret
cmpl
adc
nop
nop
addr16
or
stos
fs
inc
cld
cmp
rol
mov
loop
jge
fldt
sahf
outsl
lds
in
adc
sbb
addr16
iret
mov
loopne
xchg
fdivrs
cmp
in
sub
mov
imul
es
sub
fidivl
push
loop
lahf
push
ja
add
in
push
fdivl
pushf
or
fxch
popa
pop
xchg
cs
pusha
mov
cmp
jmp
stc
adc
subl
jg
adc
fcmove
sbb
stc
mov
pusha
sahf
jmp
lods
icebp
lds
dec
xchg
ret
pop
movsl
xchg
adc
adc
lock
jp
lods
lret
movsl
dec
push
add
mov
ret
pop
dec
aas
mov
loope
mov
and
pop
mov
mov
in
add
pop
or
aam
and
pop
dec
mov
test
jae
pop
lret
mov
push
lock
mov
arpl
outsl
sti
in
out
pop
rolb
cmp
stos
xchg
fidivrs
les
pushf
xor
xor
lds
or
push
ljmp
xchg
jmp
pushw
sbb
xchg
mov
inc
and
sbb
bound
cltd
and
add
lea
jle
or
mov
fidivrs
in
sti
mov
fwait
inc
jecxz
in
mov
xlat
js
jmp
or
das
int
lock
addr16
jmp
in
pop
cmp
test
nop
jnp
dec
inc
ljmp
rep
sub
mov
dec
test
push
pusha
fisubrl
add
and
ljmp
mov
call
pop
imul
pop
in
pop
jno
push
and
sbb
push
stos
inc
pop
mov
stos
out
scas
stos
push
fld
pop
movsl
xorl
mov
ja
jae
mov
andl
leave
mov
insb
push
in
fwait
pop
pop
push
sub
push
push
push
in
int3
cmpsl
dec
aam
dec
xchg
mov
pop
xchg
mov
mov
fistpl
movb
cmp
dec
pop
or
popf
sub
mov
cmc
cmpb
inc
adc
adc
dec
inc
lahf
lcall
pop
insl
jns
mov
mov
push
fwait
loope
sbb
dec
data16
mov
aam
xor
mov
push
and
fucomip
dec
push
jmp
push
mov
push
inc
mov
popa
or
mov
rol
xchg
mov
push
sbb
out
jecxz
mov
inc
ret
jnp
fdiv
mov
inc
imul
adc
sarb
inc
mov
jns
sub
push
fadd
push
nop
movsb
mov
push
xchg
aad
out
mov
in
lcall
and
sbb
mov
faddl
in
xchg
rcrb
stc
je
loop
cltd
xchg
sub
repz
adc
xchg
jle
fistps
xchg
or
adc
add
ds
rcrl
sbb
fnsave
shlb
ret
mov
push
jns
pop
insl
xchg
dec
adc
jl
xchg
psubsb
mov
sbb
insb
add
outsl
pop
in
lahf
xchg
mov
or
out
xchg
jnp,pn
pop
adc
jmp
stc
sub
mov
mov
jl
pop
loop
mov
out
dec
sub
outsl
out
decl
mov
stos
and
and
lock
xor
add
xor
add
ret
inc
jge
sti
aam
inc
cli
testl
into
sti
rcr
push
sbb
mov
mov
push
ds
dec
mov
dec
ja
and
inc
lahf
or
add
jp
iret
xor
imul
add
daa
adc
imul
jbe
sbb
loopne
aas
mov
push
adc
in
je
mov
push
mov
adc
mov
mov
jne
jmp
cmp
movsl
sbb
lock
jae
popf
and
dec
mov
adc
test
mov
jbe
std
into
cmp
push
loope
dec
adc
adc
es
and
ret
mov
fbld
sub
ss
insl
sub
jp
int3
fistpll
xchg
mov
sbb
fs
mov
inc
mov
aaa
adc
or
mov
add
add
or
sub
iret
cs
les
fildll
fistl
aam
arpl
or
push
lods
jle
sahf
cwtl
mov
and
dec
in
in
adc
jnp
loop
insl
mov
subl
movsl
rcrl
dec
bound
mov
mov
jno
push
movsl
sbb
or
mov
mov
rcrl
data16
sbb
out
orb
pop
xchg
cmpl
and
inc
std
jbe
je
add
cltd
les
mov
cli
pop
cmp
push
aaa
test
dec
cld
data16
jae
pop
imul
sub
lcall
xor
pop
jo
inc
jmp
sub
sub
dec
and
mov
cli
jmp
sub
rolb
sub
mov
mov
push
or
mov
or
pop
dec
lds
shlb
movsl
test
mov
sbb
int3
hlt
jecxz
lds
inc
cwtl
bound
push
pop
jle
pop
in
mov
xchg
or
jo
cmc
push
xchg
or
mov
jmp
addr16
pop
fisttps
pop
adc
add
and
push
inc
push
pop
add
ja
repnz
mov
push
call
leave
or
repnz
incb
pop
lock
xor
lods
gs
cmpsb
lea
pop
sbb
shll
pop
lret
ds
xor
roll
icebp
fldcw
pop
loope
fisubrs
push
mov
push
push
sbbl
xchg
inc
clc
psubb
cmp
imul
lcall
dec
cld
xlat
sahf
push
call
test
test
jmp
stos
xchg
pop
pop
mov
addr16
sbb
jno
pop
std
ja
pop
call
pop
xchg
mov
sbb
and
lret
mov
ljmp
xor
cwtl
out
mov
jle
movsb
call
stos
negb
mov
daa
xchg
mov
push
rol
aas
adc
pushf
xchg
mov
mov
cmpsb
mov
dec
push
hlt
mov
sbbl
movsl
arpl
lret
jbe
movsb
icebp
mov
mov
sub
das
adc
in
pop
xchg
out
test
mov
jl
bound
push
roll
jo
adc
fadds
ja
insb
fisubrl
pop
popa
pop
fistl
rcrb
dec
imul
fldl
mov
add
lcall
or
jns
push
pop
pop
icebp
xor
xchg
mov
mov
sub
dec
out
sbb
sahf
xchg
cmp
pop
addr16
lods
lahf
jbe
xchg
icebp
ss
or
aas
pushf
loope
in
xlat
pop
aaa
pop
rcrb
pusha
and
ss
int3
das
test
lcall
repz
fmull
lret
xlat
ds
inc
push
adc
hlt
lret
mulb
pop
hlt
filds
sarb
ja
fmull
popf
scas
inc
pop
jge
jne
and
push
outsl
lea
aam
fs
out
es
mov
in
lock
faddp
or
push
in
jle
and
mov
ss
inc
lea
push
mov
scas
repz
fs
stos
icebp
or
mov
pop
sbb
stos
push
iret
adc
dec
aam
inc
dec
insl
xor
sub
xchg
inc
cmp
icebp
imul
mov
add
fdivl
pop
mov
cmpsb
pop
jmp
mov
ret
bound
sbb
movsl
popf
sbb
ds
into
adc
rorl
pusha
or
mov
cwtl
xor
mov
les
lahf
gs
cmpsb
add
adc
push
cltd
xor
nop
sbb
xchg
xchg
and
pop
dec
or
adc
clc
or
add
xor
ret
test
aam
outsl
cmp
scas
and
lahf
xchg
sbb
mov
cmp
stos
jb
jmp
inc
repz
mov
sub
out
xchg
mov
insb
adc
add
mov
repnz
repnz
daa
les
int3
paddsb
mov
cmp
and
movsb
mov
outsl
xor
repz
add
and
imul
jbe
fcmovu
sahf
dec
mov
test
adcl
mov
addr16
dec
ljmp
pop
push
pop
test
inc
enter
les
mov
inc
mov
mov
mov
jbe
cltd
push
jg
jmp
xchg
mov
addr16
lock
xchg
outsl
mov
jo
lods
incl
aas
loop
dec
xlat
push
rcrb
ss
pop
jmp
hlt
rcrl
imul
std
xchg
hlt
adc
and
jnp
xlat
inc
bound
stos
mov
xchg
mov
lahf
inc
jp
jne
xchg
aad
jno
gs
fmull
fldenv
xor
fistps
test
xor
hlt
mov
sbb
mov
fistl
mov
not
sbb
pop
out
cmpsl
jae
mov
xchg
push
std
cmp
icebp
lret
int
orb
addr16
jo
sub
jo
add
scas
in
pushl
outsb
test
fabs
iret
xchg
mov
jno
inc
or
gs
loop
ret
lret
test
lret
pop
pop
inc
lahf
pop
rcl
adc
fisubs
or
jbe
scas
rcl
mov
flds
negb
dec
sahf
ljmp
jne
xor
jmp
push
dec
mov
sbb
hlt
push
and
mov
dec
cwtl
cmpsb
das
jg
fcmove
adcb
std
dec
stc
push
mov
in
mov
jecxz
mov
pop
imul
push
scas
or
mov
push
mov
push
fcomp
sbb
cmpsl
sub
jg
mov
je
and
mov
aaa
lea
xlat
in
shrb
pop
cmp
xchg
pusha
cmp
les
inc
je
mov
sahf
ret
push
cmp
pusha
daa
jp
lret
mov
movsb
xchg
sbb
push
lock
inc
divl
mov
lock
ret
imul
xchg
xchg
xor
imul
inc
fcmovne
push
xchg
pop
sbb
shrb
dec
sub
jecxz
call
xchg
in
sbb
dec
ljmp
movsl
adc
jnp
cld
popa
inc
lahf
fnstsw
rcr
or
or
fs
je
fimuls
jnp
add
out
adc
ficompl
add
lret
lea
cmp
cmp
sarb
mov
ror
lret
xchg
xor
and
push
jle
push
or
ljmp
scas
jp
fs
fisttpl
jbe
xchg
dec
sub
push
ss
mov
out
testb
mov
insl
mov
push
xor
sbb
call
in
test
cwtl
stos
hlt
call
jno
mov
sbb
stc
fs
jno
push
push
insl
xchg
ljmp
daa
fcos
jle
dec
das
aas
add
ja
sub
mov
push
sbb
mov
clc
pop
dec
pop
cmp
fs
inc
loop
lret
adc
adc
add
mov
mov
movsb
insl
adc
cmpsl
mov
in
loope
mov
nop
nop
clc
ss
imul
loope
xchg
adc
int3
xor
jmp
fsubs
mov
xchg
mov
xor
pop
push
sub
push
xchg
push
or
leave
ret
cmp
fmul
cmp
bound
inc
mov
test
es
fisubs
cli
jle
add
outsl
sbb
push
lock
gs
jne
add
inc
repnz
xchg
push
orb
jp
lahf
jne
mov
mov
inc
push
cwtl
cmpsb
jmp
jmp
pop
or
xor
in
bound
in
cs
push
aam
out
faddl
aam
adc
fisubrs
jecxz
mov
sub
mov
xlat
and
lods
in
and
push
js
ficomps
push
adc
adc
and
daa
sbb
out
sbb
xchg
xor
adc
jnp
dec
push
fwait
jecxz
push
mov
push
mov
cmpsb
fidivl
imul
add
loop
pop
jmp
inc
ret
in
cs
cld
xor
xor
jb
lods
not
adc
dec
fisubs
andb
jns
mov
mov
push
dec
push
and
in
ja
mov
movsl
call
inc
sti
xchg
inc
iret
sarl
js
pop
in
xchg
ss
push
sbb
xchg
adc
cmp
xchg
ficompl
ret
inc
mov
andl
or
sti
addr16
nop
or
outsl
pop
add
sbb
nop
fwait
xchg
cmc
bswap
mov
cmp
icebp
mov
or
enter
inc
fadd
sbb
mov
push
or
fnstcw
push
je
gs
in
cmp
into
cs
enter
or
loopne
xchg
repnz
mov
sar
jbe
add
inc
pop
dec
lods
jg
xchg
mov
sbb
ja
adc
and
testl
mov
das
pop
add
xchg
fsts
jle
js
nop
sbb
sbb
and
outsl
adc
and
stos
sbb
das
sub
jl
push
sub
jns
inc
int3
dec
xchg
pop
sbb
mov
loop
int3
addr16
sub
xor
push
mov
addr16
out
in
mov
cld
lea
outsl
jb
and
mov
out
lods
dec
xor
xchg
in
inc
mov
xchg
adc
daa
clc
hlt
add
rorl
scas
imul
fistps
lea
popa
cwtl
outsb
cmp
adc
jmp
jbe
cmp
shr
jg
push
dec
ret
std
int3
add
sub
push
out
lret
mov
out
sub
cmp
loop
adc
mov
mov
mov
outsl
mov
xchg
aas
iret
adc
lods
dec
jns
sarb
inc
jo
lock
ror
repz
shrl
popf
lds
add
jp
or
cmp
bound
jae
pop
inc
rclb
adc
and
sarl
jns
test
cmp
and
test
rclb
mov
imul
jbe
xor
lods
shll
rorl
test
lret
mov
xor
ljmp
testl
sarl
rorb
xlat
mov
xchg
loope
add
pusha
mov
shl
jmp
into
xorl
xchg
adc
sub
lret
dec
pop
push
xchg
cs
fisttps
scas
call
repnz
xlat
fcoms
mov
cmp
jp
dec
inc
adc
stos
mov
icebp
hlt
xchg
adc
cld
jecxz
or
push
test
jb
pop
add
ret
mov
mov
inc
mov
lods
in
adc
and
mov
cld
leave
xor
clc
lret
mov
push
jne
aas
data16
ficompl
ret
ret
or
imul
dec
add
xor
sub
jle
push
xchg
jnp
push
xor
cli
ja
movsl
pop
pusha
sbb
mov
cmp
or
sbb
push
imul
fwait
adc
xchg
insl
andb
push
cmp
dec
push
mov
fsubrs
stc
sub
sahf
nop
jmp
xchg
and
in
sbb
push
adc
pop
push
sbb
inc
jo
sbb
ficompl
mov
push
add
pop
xor
dec
test
xor
mov
aad
jmp
inc
xor
les
leave
lods
adc
push
out
jmp
xchg
jl
shrl
mov
mov
mov
leave
inc
adc
outsb
mov
scas
movsb
jl
add
stc
dec
mov
cmp
cmp
scas
out
insb
andb
stos
jno
inc
push
mov
jg
jmp
mov
adc
test
mov
xchg
sbb
jb
movl
cli
or
xor
xchg
in
adc
cmp
popa
sub
or
add
xor
cs
adc
xchg
pop
iret
mov
enter
mov
mov
shr
jl
mov
leave
and
in
add
call
push
xor
pop
cmp
add
push
aam
in
add
mov
mov
loope
push
pop
enter
or
cmp
inc
mov
xor
cmp
ds
divl
addb
and
push
je
xor
or
lcall
stc
or
idivb
daa
pop
pop
mov
loope
sbb
mov
popl
int
insb
out
ret
push
or
cltd
cs
repz
fs
xor
hlt
adc
jno
and
dec
pop
sbb
daa
jo
pop
pop
xchg
inc
movsb
arpl
bound
addr16
hlt
dec
fs
mov
push
cs
push
popaw
sbb
test
push
gs
pop
mov
es
addr16
pop
jecxz
lahf
fs
in
mov
ja
adc
outsb
in
and
out
adc
push
mov
xchg
fimull
add
jnp
je
pop
and
xor
push
xor
cmp
cwtl
addb
sahf
xor
bound
pop
mov
das
loope
jbe
xor
cmp
fistpl
jns
outsb
lds
fidivrs
fildll
notb
sbb
scas
bound
and
pop
cs
out
or
ret
dec
notb
xchg
sahf
jns
scas
and
pop
pop
lods
or
mov
lock
leave
imul
iret
or
cmp
mov
scas
cmp
lcall
repnz
out
stos
lds
loope
in
xor
stos
jl
test
clc
fildl
jns
clc
lds
xchg
pop
sbb
jb
bound
mov
xchg
cld
les
loope
in
mov
cmp
pop
mov
rcrl
mov
fcoms
cmp
pop
ja
mov
inc
add
repz
je
and
fstps
jmp
inc
sti
xchg
ss
lret
push
leave
mov
cmp
add
popf
pop
xor
data16
push
xor
xor
aad
dec
insl
mov
icebp
or
sbb
jmp
sbb
push
dec
jp
aaa
and
stos
bound
rolb
cmp
call
mov
icebp
mov
test
inc
movzwl
push
repz
incb
mov
xor
pop
ficompl
push
cmpsb
arpl
sbb
xor
pop
sahf
mov
out
fimuls
ljmp
cmpsl
xor
daa
dec
cld
rcrl
mov
and
sub
hlt
lea
and
mov
sub
jbe
mov
add
adc
mov
fisttps
fs
push
sub
jmp
cli
xchg
and
or
ret
mov
adc
daa
daa
lahf
nop
or
pop
test
ret
imul
or
repz
sub
and
rorb
dec
cmp
ret
leave
stos
mov
fnsave
xchg
mov
mov
sahf
inc
lds
pop
jge
mov
mov
inc
lods
ljmp
pop
and
outsb
add
mov
push
out
mull
repnz
aam
mov
push
jmp
test
sub
data16
loopne
pusha
and
push
rcr
std
cmp
dec
push
xchg
jl
ds
jo
xor
adc
imul
enter
movl
stc
sub
lcall
cmp
xchg
cli
lods
inc
sete
loope
jp
stos
or
dec
lahf
fcoml
scas
inc
ljmp
sub
xcrypt-cfb
cmpsl
and
sub
mov
rol
js
push
je
repz
data16
push
mov
jne
out
push
incl
mov
inc
mov
mov
inc
sub
loop
stos
mov
aaa
jb
pushf
or
or
fs
insl
mov
mov
mov
hlt
dec
dec
call
out
pop
pop
clc
nop
out
jg
lcall
pop
add
mov
mov
mov
xchg
stc
jno
jbe
in
int
sbb
adc
ja
xchg
incl
popa
out
cmc
mov
cmpsl
imul
cmp
fsubl
ljmp
daa
or
push
sahf
test
inc
xchg
and
addr16
scas
test
xchg
mov
jecxz
cli
sbb
push
mov
and
mov
jno
inc
cmp
icebp
aad
xor
fidivrl
mov
cmpsl
ficompl
dec
dec
jno
mov
jecxz
xchg
outsl
into
sbb
movsl
push
ja
int
loope
imul
jl
adc
popa
push
ret
outsb
xor
cmpsb
icebp
outsb
ljmp
int
fisttps
or
sbb
or
add
jo
cmp
inc
cmc
and
loopne
setae
mov
inc
in
lds
stos
mov
cmp
mov
xor
jmp
test
xor
mov
mov
push
aas
shrl
loopne
mov
je
insb
cmp
clc
add
popa
icebp
lret
dec
or
sysenter
lcall
and
jo
mov
xor
addb
pop
clc
xlat
nop
inc
mov
mov
rcr
test
shll
push
aad
pop
sub
aas
aam
pop
ljmp
in
adc
bound
adcl
jb
mov
xchg
jecxz
dec
xor
xor
xchg
stc
push
jno
inc
mov
mov
push
xchg
popf
fcoml
nop
pop
mov
out
fidivrl
insb
pop
mov
adc
mov
jne
and
cmc
mov
push
fldcw
push
lods
in
jbe
test
scas
xchg
jge
pop
push
pop
add
insb
add
outsl
insl
loopne
jge
fdivl
daa
stc
call
jb
dec
mov
mov
mov
stos
cmp
fildll
pop
or
sub
jne
orl
std
jmp
fwait
fdivrl
and
pop
push
sarl
mov
cmp
insb
sub
ja
add
mov
sub
inc
pop
sbb
dec
and
in
test
scas
dec
pop
and
jmp
ffreep
lret
repnz
xor
xchg
dec
push
adc
xchg
dec
dec
lock
leave
and
mov
dec
add
loope
dec
pop
push
cmp
das
and
xor
sbb
inc
pop
push
mov
lcall
arpl
icebp
es
jle
cmpsb
jl
int
cmc
add
popa
into
pop
leave
into
pop
data16
in
rcl
sbb
cmc
sarb
mov
sahf
push
icebp
rol
ret
push
dec
jbe
mov
ss
mov
jb
xor
lret
cld
sbb
rcll
push
pop
rcpps
scas
call
cmp
not
in
pushf
cmp
imul
cmp
in
dec
leave
xchg
fmuls
test
mov
icebp
sbb
ret
out
jmp
mov
dec
pop
dec
adcb
outsb
je
in
mov
add
cmp
or
mov
dec
mov
int
jbe
jl
sub
sub
jp
les
adc
xchg
hlt
adc
scas
dec
cwtl
push
pop
into
imul
sbb
divb
add
and
out
sbb
push
lds
and
cli
sahf
leave
orb
or
negb
sub
test
mov
ds
sti
adc
scas
or
test
or
rorl
mov
mov
into
jle
clc
jmp
xchg
push
dec
and
lds
in
loopne
mov
inc
sbb
inc
rolb
sub
roll
or
out
test
imul
mov
mov
outsl
mov
bound
sub
mov
inc
mov
ja
ss
leave
in
pop
out
push
iret
sub
insb
pop
push
push
and
orl
pushl
pushl
sahf
push
pushf
popf
jle
inc
or
and
jnp
mov
cmp
loopne
or
jecxz
clc
push
cmp
test
das
or
cmp
jb
repz
pop
inc
sbb
inc
xor
jae
aaa
push
insl
sbb
jo
sub
lret
rcrb
xchg
scas
xor
pop
test
push
add
mov
adc
mov
pusha
jb
lods
ja
mov
push
mov
fnstcw
fldl
pop
jecxz
jmp
stos
push
mov
and
nop
enter
jno
xchg
je
mov
push
mov
or
jp
xor
enter
lock
fisttpl
mov
es
mov
data16
gs
test
and
push
leave
in
roll
or
push
ficoms
pop
loopne
mov
jp
xor
cs
jns
rorb
stos
mov
hlt
in
mov
in
cmp
jecxz
mov
fisttps
pop
outsb
sub
fidivrl
adc
push
pop
jle
testb
jge
out
aas
inc
shll
xchg
inc
es
inc
ja
sub
and
xchg
lock
inc
mov
xor
cli
faddl
inc
cmpsb
jno
jecxz,pt
ficompl
sti
and
nopl
ss
pop
mov
lods
outsl
push
mov
pop
sahf
sub
mov
and
in
pop
or
addr16
int
repnz
fmuls
sbb
sbb
push
insl
cmp
shll
icebp
ss
je
cmpsb
sbb
enter
push
xchg
sbb
or
mov
iret
mov
dec
frstor
outsb
int3
sahf
ds
aas
jp
call
call
outsb
outsb
enter
test
inc
movsb
xchg
jp
mov
jmp
pcmpeqd
shr
sub
sbb
push
stc
lods
pop
adcb
roll
loopne
mov
repnz
loopne
pop
xor
in
sub
mov
pushf
xchg
or
push
push
jb
adc
gs
rolb
xor
pop
mov
mov
nop
mov
nop
inc
ret
add
in
push
aam
and
jae
fiadds
out
movsb
push
nop
mov
or
mov
jno
xor
clc
xor
jne
fildl
pop
push
dec
js
out
cmp
mov
inc
dec
rolb
mov
std
cmp
jp
aam
pop
mov
xlat
lahf
cli
cmp
incl
pop
lahf
inc
call
aad
sarb
rcrb
popa
push
je
lods
xchg
popa
cmp
fdivrs
neg
jno
pushf
mov
nop
jge
fwait
or
dec
adc
or
add
jl
push
sbb
movsl
dec
jl
add
fwait
xchg
in
fdivrp
pop
add
add
add
xchg
cmpsl
lea
push
cmp
sti
dec
push
fbld
scas
fistps
ss
stos
mov
ficompl
xor
and
and
inc
jbe
xlat
dec
ret
fucomi
fnsave
stos
xchg
in
mov
xchg
aad
and
ror
mov
inc
jnp
testl
loop
movlps
or
sub
icebp
lret
lea
add
rcr
lret
rcrb
push
mov
and
xchg
rcrl
jp
in
xchg
pop
dec
sarb
mov
xchg
imul
int
cmp
pop
in
aad
pop
pop
mov
repz
test
xor
mov
mov
test
scas
dec
xor
lock
adc
data16
xchg
in
jl
mov
jecxz
jg
and
mov
jbe
test
mov
and
or
and
and
daa
push
mov
ja
or
push
push
hlt
lods
mov
aam
in
je
jmp
ret
jmp
jmp
jmp
gs
push
popf
sub
xchg
mov
push
popl
or
pop
push
int3
jo
push
sub
push
loope
or
pop
jno
lods
dec
cs
jne
push
sub
adc
jo
dec
mov
push
lret
cwtl
pop
jg
push
sub
mov
mov
xor
divb
mov
and
mov
fs
xchg
push
jmp
mov
pushl
dec
add
inc
fldenv
xor
cmc
cmp
mov
addb
sbb
icebp
dec
sbb
sub
jl
mov
sub
jb
aad
inc
pushf
mov
push
icebp
xlat
add
mov
fs
dec
fadds
jae
int3
jmp
in
dec
jecxz
mov
shll
lea
movsl
xchg
js
xchg
ljmp
mov
mov
pushf
cmp
inc
mov
nop
mov
sub
imull
popf
push
loop
push
repz
xchg
xlat
fildl
xor
sub
adc
pop
outsb
push
cmpsl
andb
cmc
or
arpl
scas
hlt
or
negb
cmc
lcall
add
push
pop
imul
or
mov
lock
mov
jmp
lret
aaa
sub
mov
mov
loopne
xor
or
jo
push
leave
push
dec
mov
push
inc
inc
bnd
dec
lods
aas
pop
jge
outsb
push
test
jecxz
mov
inc
add
imul
inc
call
das
and
mov
lods
arpl
mov
add
pop
push
or
pop
es
pop
insb
daa
mov
xchg
xor
and
mov
jl
lds
adc
insb
popa
xor
jp
sbbl
adc
adc
jmp
adc
test
push
and
pop
or
xlat
rclb
into
stos
sti
cmp
mov
sarl
jns
test
outsb
rclb
push
mov
subb
dec
cmp
jo
push
daa
rclb
out
push
mov
pop
adc
dec
flds
sbb
fbld
xchg
push
inc
cmpsb
rcrl
and
mov
jle
mov
daa
add
mov
mov
ds
pop
pushl
add
cmc
sub
jmp
lods
dec
inc
xchg
ret
outsl
add
xor
jo
cmc
es
push
js
decb
js
xchg
push
iret
dec
mov
aam
test
sbb
repz
push
mov
cli
mov
or
mov
clc
jae
mov
fnsave
mov
xchg
cmpl
dec
addr16
push
cmp
mov
add
ljmp
push
cmp
mov
jl
inc
sbb
pop
xor
inc
inc
shll
jecxz
repnz
stos
test
outsb
lods
sarb
aaa
adc
dec
loopne
ds
cmpsl
notb
adc
or
or
dec
cmp
adc
xor
xchg
je
add
popa
jge
adc
jo
addr16
pop
mov
jb
mov
push
ss
rcrb
xor
fstpl
pop
jge
inc
jnp
ret
in
xchg
mov
xor
cltd
repz
inc
dec
and
test
in
popf
cwtl
cmpsl
add
dec
adc
push
cli
and
aad
icebp
pop
or
adc
pop
fstps
and
jecxz
mov
inc
mov
inc
hlt
sarb
mov
in
out
jmp
adc
push
repnz
dec
jge
cmc
sub
adc
stos
add
div
jnp
scas
cs
add
or
adc
es
bound
clc
movsb
jge
test
sbb
sbb
push
pop
lret
hlt
and
shrl
out
or
add
xchg
incl
sub
push
cmp
mov
mov
push
jnp
daa
xor
sarl
xor
or
and
orl
pop
stc
adc
jp
mov
inc
xchg
std
jmp
rorb
jbe
mov
ficompl
nop
popa
inc
xor
les
fwait
mov
or
add
cmp
inc
dec
cmpsl
xchg
jae
addr16
popf
repz
or
js
cmpsb
pushf
iret
inc
ret
xchg
xor
rorb
and
and
shll
sub
loop
invd
or
push
inc
cld
or
ja
inc
and
cmp
addb
outsb
in
fbld
inc
ds
add
stos
outsl
sahf
cmp
or
cmpsl
dec
repz
pmullw
jnp
jge
ds
pop
jno
adc
roll
int3
mov
shr
adc
jb
push
jne
arpl
xor
fmuls
push
nop
cwtl
cmp
test
out
xor
jmp
int3
shr
pop
pop
adc
cmp
mov
jmp
sub
jl
inc
xor
xor
mov
push
dec
sbb
jg
icebp
lds
out
and
into
dec
ss
mov
and
stos
mov
in
fldcw
jecxz
sbb
mov
mov
push
mov
dec
mov
roll
sub
fxch
loope
push
in
xor
mov
inc
jl
mov
xchg
pop
loopne
sub
je
mov
mov
inc
lods
ret
fistpll
ljmp
dec
fstl
scas
mov
lods
mov
fldt
mov
inc
cmp
mov
fcmovbe
and
leave
jl
lods
jle
shl
cld
das
or
pushf
and
and
lds
enter
data16
repz
repnz
cmp
out
fs
daa
in
sub
sub
lock
pop
xor
xchg
rcr
div
in
dec
and
push
push
cs
push
mov
and
sub
mov
aam
roll
jg
call
cwtl
test
xor
insl
outsl
push
mov
xchg
ja
nop
jbe
fistpll
pop
xor
andb
xchg
insb
jae
mov
xor
pop
mov
stos
mov
sti
mov
add
call
cmp
leave
push
jbe
and
cmp
mov
add
into
loopne
frstor
cltd
push
mov
pushl
inc
cmp
add
xchg
sbb
pop
mov
mov
cmc
pushf
addb
sbb
ret
popf
ljmp
jo
sub
in
stc
xor
mov
pop
ss
push
pop
jl
mov
cmc
enter
scas
fldt
mov
xor
push
cltd
notl
push
pop
popa
sub
sub
test
mov
fadds
sub
mov
test
or
pop
cltd
int3
test
inc
inc
sbb
jno
leave
xor
xor
jecxz
stos
or
add
xchg
in
xor
or
jns
insl
push
gs
jle
imul
lea
mov
push
jns
gs
sbb
jnp
leave
jmp
mov
adc
add
push
repz
orb
xor
mov
pop
cltd
icebp
dec
idiv
shrb
decl
and
sahf
fisttpll
sub
mov
ss
mov
cmpsl
push
or
xor
out
sub
xor
or
xchg
testb
jo
cmp
inc
into
mov
shr
leave
cmp
mov
xor
sbb
and
leave
jg
cmpsb
les
cltd
es
xor
add
repz
xor
mov
das
or
nop
pop
mov
popa
ss
cmp
fwait
mov
popa
jl
dec
inc
sbb
imul
call
xor
stos
sub
jmp
push
int3
or
add
pop
or
daa
push
and
outsb
pop
imul
jb
pushf
and
inc
inc
popf
pop
dec
nop
fldenv
clc
xor
fsub
jno
mov
mov
call
inc
lods
in
xlat
hlt
push
xchg
mov
bound
adc
out
in
xor
sub
mov
out
xchg
dec
push
pusha
jbe
scas
add
jle
insl
sbb
cmp
lret
dec
push
pushf
inc
cmpsb
cmp
push
dec
xchg
fsubl
lock
out
enter
mov
rolb
pop
loope
inc
pop
lahf
fcmovb
mov
jl
mov
pusha
adc
ja
out
mov
inc
adcb
lret
mov
rcll
stos
mov
adc
test
lods
dec
ljmp
fmuls
mov
lahf
jne
push
adc
lea
and
xor
or
aad
mov
bound
mov
clts
xor
mov
dec
hlt
push
mov
test
dec
cmp
into
adc
mov
jg
sub
popa
inc
setbe
dec
push
xchg
jne
dec
imul
lods
mov
jne
push
adc
jg
and
into
std
push
push
inc
lock
cs
cmp
cmp
iret
pop
dec
dec
ja
add
fstpt
fstps
fiaddl
dec
inc
jmp
arpl
dec
push
sub
cli
je
dec
into
lock
repnz
inc
int3
cmp
jl
rorl
jns
sbb
xor
cmp
dec
mov
addr16
and
or
mov
jge
adc
cmc
ja
xlat
push
sub
loop
shrb
sub
cmp
sbb
mov
int3
hlt
adc
int
scas
mov
push
pusha
mov
lea
popf
inc
xchg
lret
pop
mov
jg
push
in
jecxz
jnp
inc
les
dec
add
lods
insb
dec
cmpb
mov
loope
cmp
sub
sarl
bound
mov
mov
xchg
sbbl
sub
jo
push
movsb
xchg
push
add
sbb
and
sub
push
dec
xlat
mov
push
in
aam
cmp
dec
xchg
daa
fdivrl
jmp
popa
arpl
mov
rorl
addr16
shlb
cmpsb
mov
dec
and
xchg
xor
in
push
add
rsm
adc
je
inc
mov
adc
fimull
jmp
xchg
dec
add
jbe
xchg
aas
lea
jp
jmp
mov
dec
inc
mov
dec
or
pop
mov
mov
push
repnz
cltd
call
push
pop
sub
push
lcall
pop
pop
mov
js
hlt
out
lods
push
testb
pop
out
xchg
mov
test
lahf
je
cmp
push
pop
rolb
call
in
cli
mov
pusha
cmpsb
jo
ds
mov
or
mov
or
lahf
cs
insb
insb
pop
mov
sbb
or
inc
arpl
pop
stos
sub
out
dec
testl
out
movsl
mov
xchg
jns
cmpsl
popa
xor
icebp
push
pop
test
in
xor
dec
pop
imul
scas
xchg
imul
sbb
cmp
mov
jne
sbb
inc
imulb
out
mov
lock
sahf
jle
push
jae
mov
jle
jno
movsl
and
leave
and
push
dec
jns
sti
stos
sbb
push
pop
add
mov
addb
mov
pop
cld
dec
mov
or
adc
rcrl
pop
aam
and
rcll
mov
sbb
push
dec
mov
shrl
sub
repnz
gs
ds
les
inc
mov
and
test
lds
notb
mov
cmpsl
jge
adc
mov
mov
xor
jecxz
and
loop
insl
dec
sub
clc
in
dec
orl
add
lods
mov
xchg
mov
test
enter
or
dec
adc
cwtl
in
movsl
fwait
mov
cmpsl
cmp
enter
out
push
jmp
mov
add
jne
xor
lahf
les
movsb
push
jle
pop
aam
das
addr16
push
sub
add
mov
sub
ljmp
lods
and
jl
ja
enter
aaa
lea
pusha
pop
fsubl
out
cmp
xchg
aas
sahf
dec
xor
sbb
xchg
adc
int3
negb
sti
push
pop
gs
push
shlb
xchg
dec
loop
cmp
stos
or
mov
xchg
jo
dec
jbe
add
aas
inc
loope
in
push
flds
dec
pop
sub
fidivrl
stos
movsl
imul
add
lret
cmp
and
cmpsb
pop
add
sbb
cmp
popf
lret
imul
dec
stc
mov
push
fistpl
pusha
push
mov
cmp
cmp
fs
pop
adc
lahf
push
and
inc
mov
mov
sub
mov
aad
lock
xor
cmp
and
push
sbb
cmpb
or
pop
rcrl
adc
shrl
and
outsb
mov
loope
sbb
push
sub
inc
mov
jmp
call
fildl
cmp
in
xchg
adc
or
mov
and
movsl
adc
incb
orl
sarl
fidivrs
shrl
sub
mov
and
dec
out
and
shll
daa
push
push
popa
cmp
cmp
push
test
aam
inc
test
dec
outsb
inc
adc
mov
pop
ds
sarl
jns
pop
sub
lea
clc
shrl
enter
nop
dec
sub
sub
mov
and
mov
xchg
xor
out
rclb
cld
stos
movb
sbb
xchg
lret
sub
movsl
mov
or
xor
gs
jle
loope
dec
mov
xor
fsubrl
ret
test
add
dec
mov
inc
dec
mov
insl
jmp
ret
mov
rclb
sub
inc
dec
dec
mov
and
cld
mov
xor
sub
jle
push
test
popf
das
mov
cmpl
xchg
cmpsl
cmp
dec
out
mov
mov
mov
insl
lods
sbb
and
aaa
push
pushf
inc
push
loope
and
test
lock
in
sbb
shr
mov
inc
and
mov
adc
or
fsubr
je
cli
jbe
push
jae
jle
adc
add
lret
or
mov
jge
inc
mov
mov
xor
popf
pop
inc
mov
test
add
inc
mov
or
ljmp
dec
jp
stos
fucomp
inc
mov
pop
inc
bound
mull
pop
mov
or
test
xor
mov
mov
aas
dec
ret
mov
les
cmp
or
mov
jno
mov
fnsave
mov
dec
jg
outsb
cmp
inc
clc
jns
or
or
jns
mov
sub
test
add
shl
fists
pop
movsb
push
xchg
push
push
push
mov
outsb
mov
mov
sub
add
loopne
and
xchg
sbb
std
jae
mov
arpl
imul
sbb
dec
in
cld
jle
xchg
sti
pop
les
je
je
xchg
mov
out
in
js
pop
mov
les
cwtl
fs
adc
jo
xchg
nop
movsb
out
fsubrl
inc
lods
stos
imul
add
xchg
pop
xchg
out
push
sbb
push
out
movsl
xor
xor
mov
cmp
lods
fsub
outsl
int
rcrw
lcall
xchg
in
or
addb
movsl
ja
cmpb
or
dec
repz
adc
insb
insb
inc
jns
in
jbe
incl
cmc
aad
xchg
pop
xor
add
adc
push
adc
imul
sti
dec
out
pop
aad
push
push
ret
mov
cmc
adc
add
xchg
xchg
pop
and
inc
xchg
mov
add
aas
cltd
jg
es
andl
mov
sbb
push
sbb
adc
rcrl
out
scas
stos
xchg
or
sarb
iret
ficoms
clc
mov
stos
adc
stos
inc
aaa
or
jne
mov
jl
decb
push
or
sub
aam
xor
xlat
imul
mov
and
xchg
mov
jbe
jb
lea
jle
mov
scas
lods
xchg
jg
test
out
lods
sbb
mov
pop
gs
xchg
test
pop
cmpsb
dec
sub
inc
mov
sarl
popa
cmc
cmc
les
test
mov
test
pop
mov
mov
int
lods
cs
dec
aaa
cmpsb
ja
jb
or
xlat
sub
sbb
rcl
movsl
dec
push
inc
pop
and
loope
lret
stc
xlat
andl
and
pop
int3
mov
pop
fs
push
mov
jge,pn
inc
popa
sarb
insb
and
arpl
iret
fdivr
movb
mov
dec
mov
mov
loopne
ret
imul
ss
cwtl
shrb
mov
sub
cmp
cmp
xchg
mov
std
xor
adc
bound
xchg
ljmp
scas
pop
jecxz
mov
or
mov
stc
mov
sar
sar
lods
das
loope
mov
jecxz
repz
mov
jns
sbb
mov
stos
fcmove
pop
push
lods
cmp
sbb
mov
fwait
lret
jmp
addb
popa
bound
add
cs
mov
dec
xchg
dec
xchg
add
fs
inc
mov
cmpsl
pushf
divl
or
mov
dec
mov
repnz
or
stos
xor
or
push
adcl
out
xor
pop
pop
xchg
xor
inc
inc
xchg
in
xchg
push
movsb
cmc
add
xchg
pop
inc
and
ret
and
mov
pop
mov
cmp
test
int
xchg
in
mov
aaa
jno
out
cmpl
xor
inc
sbb
std
ret
mov
iret
and
push
xchg
hlt
sbb
mov
adc
daa
jo
dec
pop
js
out
fcoms
arpl
push
repz
dec
or
sbb
mov
stos
cmp
and
loopne
xlat
push
jns
int3
nop
dec
nop
lds
mov
push
jl
mov
es
idivb
sub
xchg
daa
jne
xchg
jp
xor
mov
adc
sbb
sarb
jl
mov
in
xor
pop
adc
xchg
xchg
mov
jb
add
fidivrl
mov
mov
sub
gs
pop
scas
in
hlt
aad
sti
aad
test
and
push
fdivs
mov
jl
outsb
shll
jp
mov
decl
cs
neg
dec
rorl
jl
js
es
xchg
xchg
mov
xchg
fnsave
stc
fcompl
pop
pop
addr16
in
push
incb
inc
mov
and
jecxz
je
push
xor
andb
mov
insl
loope
fwait
lods
lea
lea
out
lods
sub
ds
jns
int3
push
xchg
fmuls
out
call
mov
xchg
xchg
pop
sub
adc
jb
mov
sbb
sub
imul
mov
lock
call
inc
bound
adc
pushf
ljmp
insl
cmp
xchg
es
test
mov
cmpsb
pop
pop
inc
jp
jns
and
insl
adc
fnsetpm(287
aaa
cmpsl
repz
xchg
in
fwait
clc
and
xor
push
sti
and
mov
xchg
mov
add
inc
stos
xchg
mov
mov
nop
sub
aaa
add
stos
fs
in
push
pusha
adcb
in
sbb
leave
mov
add
mov
mov
mov
sub
fstpl
fimull
push
mov
pop
pop
add
xchg
xchg
xlat
and
mov
data16
icebp
call
notl
or
sbb
add
insb
addr16
leave
push
xchg
or
sub
enter
and
dec
enter
test
push
push
mov
cltd
movsb
and
stos
cltd
ds
sbb
mov
arpl
cmp
mov
popf
in
adc
push
mov
sub
xchg
wbinvd
lods
test
dec
jle
nop
add
out
dec
push
lea
jle
daa
xor
js
mov
aaa
in
les
aam
fsubrs
push
inc
popf
rcrl
add
rol
orl
insb
test
mov
xor
in
dec
jl
jo
mov
fdivs
and
inc
sbb
adc
mov
add
jmp
jnp
dec
xorl
ds
and
imul
out
adcl
mov
icebp
push
sub
mov
mov
std
mov
fwait
sub
imul
sahf
iret
insw
or
jl
pop
inc
into
sbb
loope
filds
aam
jo
push
test
inc
aam
mov
movsb
cmp
mov
lea
jge
loopne
xor
cs
leave
popf
popa
shll
xor
movsl
xor
lret
or
addl
and
adc
cwtl
mov
lea
repnz
pop
bound
int3
push
test
xchg
mov
and
sub
scas
scas
push
xchg
jl
pop
imul
inc
sub
dec
and
rorl
mov
inc
push
and
stos
loop
jmp
inc
sbb
or
inc
cmp
andl
mov
jb
es
pusha
mov
mov
cmp
je
mov
subb
jne
std
shrb
mov
add
arpl
pop
out
clc
das
ret
scas
mov
imul
adc
scas
cmp
arpl
sbbb
push
jno
mov
push
fsubs
dec
add
inc
movsl
loopne
mov
out
sbb
rcll
out
inc
mov
pmaxsw
mov
mov
pop
int
pop
xor
add
and
popf
xlat
pop
cmp
adc
call
rclb
push
cmp
ja
outsb
push
cmp
or
ds
inc
and
inc
dec
xchg
jmp
loopne
adc
shlb
xlat
sub
test
fisubs
push
mov
ss
mov
push
pop
push
mov
pop
test
test
fadds
insl
dec
shrd
clc
scas
push
mov
sbb
aam
arpl
loopne
lods
insl
xchg
inc
imul
inc
cmp
js
sbb
das
push
loope
adc
pop
outsl
xchg
mov
xchg
lea
push
jl
mov
out
es
xor
mov
sub
cmc
aam
pop
call
mov
ret
ficomps
in
in
bound
dec
pop
and
xchg
mov
lret
int
xchg
mov
dec
jle
loope
ss
xchg
push
mov
gs
popf
mov
mov
inc
push
jae
sbb
fcoms
mov
int
push
dec
xchg
out
insb
and
add
and
mov
push
mov
sub
aas
flds
dec
jg
je
adc
xchg
mov
stos
les
subb
jbe
cmp
pop
mov
std
mov
xchg
xor
inc
pop
mov
fwait
jg
aas
push
fwait
mov
push
mov
cmpsl
push
jns
int
les
dec
mov
jb
mov
ds
jg
iret
fisubrl
cltd
and
incb
add
and
mov
out
push
pop
adcl
imul
fdivrl
call
mov
pop
jg
mov
xor
jnp
call
or
push
jle
jno
xchg
lds
enter
pushf
rcrl
int3
out
xlat
sbb
cmp
data16
add
push
gs
pop
es
jg
mov
sbb
mov
fcmovnbe
cmp
jo
lret
sub
mov
aas
insl
and
sub
movsl
int
popf
push
aad
mov
loopne
call
or
inc
in
ljmp
xchg
push
jo
cld
xor
cmp
jl
aad
adc
les
jno
rol
jle
push
sarb
or
cmp
pop
xchg
test
cmp
xor
cmpsl
push
stos
pop
dec
inc
std
cmp
shl
lods
add
mov
pushf
inc
mov
out
and
popa
inc
jg
pcmpgtw
sub
mov
popa
cmp
push
push
pop
jnp
xchg
gs
fmull
fwait
or
mov
call
add
test
jae
adc
and
cmpsl
cmpsl
mov
xchg
jo
cmpsb
cmp
rorb
aaa
jno
gs
mov
cmpsl
aas
movsb
dec
lahf
arpl
xchg
inc
mov
xlat
cmpsb
stc
push
jnp
lds
orl
pop
fwait
xchg
jns
push
jnp
in
cmpsl
loop
jns
or
pop
and
orl
jl
ja,pn
int3
cmp
adc
fxtract
mov
jle
out
in
mov
xor
sbb
repz
lods
or
lock
xchg
fs
in
xlat
stc
inc
lods
sar
sbb
fsubrl
dec
push
sbb
in
and
repz
fisubrl
jl
in
clc
sbb
push
daa
cltd
outsl
ss
cmp
jbe
cld
inc
mov
rorb
or
inc
pop
dec
scas
add
or
xor
mov
test
out
es
or
mov
cwtl
or
cwtl
js
inc
pop
xchg
jmp
imul
repz
push
sbb
std
clc
sub
leave
clc
imul
ss
lock
xor
pop
int3
dec
dec
xor
std
repnz
test
icebp
mov
movsl
cs
sarb
xchg
xchg
dec
cmp
xchg
inc
mov
enter
hlt
mov
pop
rcll
int3
int
int
cmp
in
pop
pop
pop
je
in
jbe
scas
cmc
sbb
add
dec
pop
sbb
sahf
scas
cmpsl
cmp
or
mov
call
push
pop
mov
es
and
jo
inc
sub
divl
add
xchg
dec
lods
insb
xchg
add
es
fmul
xchg
icebp
ljmp
cmp
mov
mov
add
js
fimuls
pop
aad
fdivr
jo
idivb
lods
int
gs
daa
jmp
push
xor
std
daa
jno
dec
push
sti
sub
cmp
add
cmp
dec
mov
jecxz
arpl
sbb
sti
add
cmp
outsb
mov
jle
movsl
cli
push
and
adc
cmp
mov
inc
or
leave
je
sarl
repz
scas
add
sbb
push
mov
mov
test
movsl
out
or
mov
pop
xchg
xchg
jmp
xor
push
inc
push
sub
ljmp
or
inc
inc
icebp
lahf
push
shlb
sbbb
iret
cwtl
out
loopew
mov
mov
aas
addr16
cmp
mov
arpl
rol
into
fwait
shll
repz
mov
sbbl
imul
jle
and
stc
dec
dec
insb
mov
or
mov
push
or
sbb
rolb
fsub
jmp
inc
lods
jg
or
add
inc
cmpsb
scas
jne
mov
cmp
cmpsl
push
in
mulb
push
sbb
add
mov
in
inc
add
test
ss
fdivl
insl
jmp
fldt
jnp
jbe
jge
dec
sbb
adc
pop
lds
jno
inc
push
sti
clc
pop
movsb
lods
mov
and
and
fsubrs
mov
loop
movsl
ret
push
dec
leave
arpl
outsl
xor
les
test
add
aas
out
das
or
cmp
inc
js
push
aad
bound
and
push
and
call
insl
inc
ljmp
icebp
jg
adc
and
dec
lahf
dec
setle
mov
rcl
xchg
repz
jne
lret
jo
pop
popf
inc
fcompl
jns
les
aad
sbb
loopne
push
cmp
mov
sbb
or
dec
lds
or
rcll
int
cli
sub
adc
fisttpl
or
or
mov
push
sbb
loop
jecxz
nop
xchg
mov
and
imul
hlt
xor
or
or
test
xchg
addr16
addr16
push
or
ret
test
jg
mov
mov
xchg
ret
xlat
stos
test
and
mov
cmpsb
mov
jae
sar
mov
ss
pop
sahf
aas
inc
mov
add
outsl
ljmp
ret
and
mov
sub
inc
mov
stos
xchg
dec
mov
lods
mov
mov
subl
neg
out
mov
and
insl
hlt
aad
jo
pop
daa
inc
frstor
sbb
mov
mov
inc
fwait
mov
push
pop
pusha
outsb
fwait
pop
xchg
adcb
and
and
bnd
or
lock
lods
inc
add
pop
cs
mov
inc
mov
mov
cmpsl
adc
or
xchg
imul
mov
inc
ret
push
xlat
adc
aam
mov
mov
jno
sbb
jge
mov
xchg
imul
jb
cmp
jns
sub
dec
test
or
cli
pop
lret
test
cmp
jns
imul
js
daa
cmpsb
inc
add
aad
dec
daa
inc
popa
mov
jg
clc
mov
push
adc
outsb
inc
ficomps
out
adc
repz
pop
fdivs
inc
pusha
int
movsb
pop
mov
and
cltd
xor
xor
xor
push
enter
rcr
add
data16
sub
xchg
dec
xchg
in
lock
mov
inc
jbe
loop
adc
xchg
enter
add
dec
push
sbb
push
sub
cltd
push
rolb
mov
icebp
adc
jne
push
xlat
cmp
add
inc
in
gs
fdivrs
cwtl
lds
rcrb
lret
testl
xor
lret
ljmp
push
sbb
pushf
jg
and
mov
das
mov
scas
xchg
jnp
mov
fimull
pusha
inc
mov
dec
adc
mov
jg
add
bound
std
mov
call
inc
roll
rcll
push
xchg
xchg
rorl
xor
test
pop
inc
push
cs
jg
push
cltd
mov
or
add
hlt
mov
ljmp
fstps
inc
call
rcll
mov
pop
dec
cmp
jno
out
pop
pusha
push
xor
ja
push
das
jmp
sub
lock
inc
cmp
fcoml
das
jnp
aad
fisubl
adc
or
xlat
idiv
dec
mov
cltd
sbb
aaa
push
mov
shrb
xchg
dec
dec
outsb
test
push
pop
cltd
sub
add
xchg
or
add
cli
mov
fdivs
sub
dec
mov
nop
lea
lock
cld
js
std
outsb
xchg
clc
mov
and
jl
insb
cli
repnz
loope
or
adcl
push
lods
push
sahf
fcoms
push
pop
or
add
leave
and
inc
lods
pop
negb
cli
mov
fists
ret
mov
mov
pop
or
push
bound
out
sahf
mov
jl
jno
jbe
mov
add
pop
mov
or
pop
xchg
fidivs
cwtl
xor
cmp
mov
sbb
loop
or
mov
cld
in
cmp
leave
jbe
cmp
mov
xchg
movsb
jno,pt
pop
loop
mov
subb
cmpl
rclb
fdivs
xor
ds
aam
xor
js
sub
in
fildl
mov
jne
cmpsl
stos
mov
ficompl
pop
mov
cs
inc
inc
imul
sub
pop
popa
mov
xchg
imul
icebp
or
subb
das
lods
repz
jo
mov
adc
adc
std
insb
adc
mov
mov
bnd
mov
mov
rcrb
push
jo
andl
ret
jae
repz
loop
in
std
push
insl
mov
mov
push
mov
outsb
test
fnstenv
cmp
inc
fcmovnbe
pusha
call
xor
jae
test
cmpsl
sbb
outsb
cmp
jmp
or
and
or
jo
dec
inc
pop
push
sbb
mov
jecxz
and
daa
sti
int3
sbb
in
sub
inc
jle
xchg
call
mov
imul
xchg
dec
add
mov
movsl
aad
add
push
lds
add
ret
outsl
sar
mov
sbb
cmc
mov
es
mov
lods
jge
inc
push
ror
lods
movsb
mov
cli
add
insl
dec
jbe
push
repnz
loopne
xor
sub
adcl
adc
int
rep
sbb
pushl
repnz
cmp
div
xchg
repz
jno
cmpsb
mov
mov
test
sbb
popf
in
aas
xchg
xchg
lock
push
cmp
in
pushf
gs
mov
movsb
das
cli
adc
ficomps
ds
adc
sbb
and
push
dec
icebp
loope
imul
sbb
out
fdivp
push
orb
add
or
jnp
dec
mov
xchg
xchg
xchg
jnp
imull
mov
gs
push
mov
dec
cld
enter
in
shrl
add
push
push
add
iret
jl
pop
fsts
mov
add
and
pop
stc
imull
mov
dec
out
pop
push
mov
fcoml
je
cmp
gs
cwtl
push
lods
push
jge
push
stos
dec
lea
jl
jg
sbb
mov
int
mov
rorb
push
push
adc
ret
addr16
cmp
ds
sub
int3
fldcw
andb
xchg
mov
stos
data16
leave
mov
mov
out
test
pop
js
and
outsl
push
jno
andb
cmpsl
xlat
mov
fnstsw
jo
xchg
das
dec
out
push
jl
aaa
movsb
xchg
popf
fsubrl
outsb
mov
add
bound
cmp
dec
jne
mov
jne
jae
add
jmp
adc
fwait
popf
push
jmp
xchg
rclb
std
adc
fisubl
push
and
pop
pop
rol
je
jns
push
scas
rolb
hlt
xor
dec
mov
xor
push
push
daa
loope
mov
sub
push
dec
sub
into
fcoms
aaa
jbe
out
sbb
es
xor
cmp
lret
pop
adc
bswap
dec
xchg
adc
xor
adc
stc
insl
lods
sub
xchg
sub
shr
xor
lds
lcall
incb
pop
adc
rclb
cmc
frstor
shr
adc
daa
loop
in
repz
and
test
ds
dec
fs
mov
mov
sub
mov
imul
sbb
fnstcw
pop
pop
dec
out
fs
inc
mov
aas
xchg
xchg
fistpll
pop
icebp
cmp
pop
jp
outsb
inc
mov
sub
jne
sbb
mov
adc
xchg
jae
fcoms
inc
incl
sub
xor
pop
pop
call
in
push
cmp
mov
cmp
pop
into
push
dec
outsb
outsl
lcall
call
das
xchg
cwtl
nop
arpl
divb
insl
dec
jp
jg
test
cmp
push
aas
cmpsb
jnp
push
dec
es
mov
enter
scas
andl
jge
cmc
cwtl
xchg
cmpb
fistps
sti
pop
push
xlat
scas
clc
mov
add
add
mov
dec
jns
cmc
jle
data16
lods
fadds
js
in
cmp
cmp
shrb
or
xchg
inc
fstp
xchg
arpl
adc
xchg
sbb
mov
pop
ljmp
out
mov
mov
cmc
scas
sbb
sub
jns
adc
sbb
flds
mov
dec
out
and
pop
sub
out
inc
cltd
in
dec
test
into
adc
rclb
out
sub
fdivp
inc
movsl
adc
notb
iret
push
inc
fildl
xchg
repz
push
inc
data16
repnz
in
repz
xor
mov
bound
lretw
scas
cmp
and
scas
mov
add
mov
sub
fidivs
inc
adc
add
mov
sbb
lods
mov
sbb
fwait
jae
add
jo
call
or
sub
push
jne
mov
sahf
pop
shl
xchg
push
jp
cmpl
popf
cld
cmp
and
cwtl
popf
mov
cld
lods
dec
hlt
out
dec
xchg
out
outsb
dec
cmpsb
add
xchg
cmp
out
xchg
pop
jns
lds
xchg
rcr
dec
incb
mov
inc
sbb
add
adc
sbb
fsubrl
xchg
ret
xchg
aas
sbb
xor
mov
scas
add
in
fwait
mov
inc
inc
mov
mov
imull
xchg
dec
inc
mov
sub
lea
test
icebp
pop
nop
dec
pop
aas
mov
std
sbb
pop
loope
outsb
pop
sub
lahf
gs
loope
jno
adcb
cltd
mov
push
mov
out
hlt
push
int
xchg
or
adc
pusha
insl
testl
pop
sub
cltd
out
lcall
mov
pop
dec
sub
pop
mov
pop
movsb
adc
adc
adcl
pop
sbb
mov
mov
stos
xchg
and
scas
cmpsb
cmpsb
push
lds
dec
inc
mov
adc
sti
jb
dec
cmp
dec
jb
dec
mov
cmp
cs
std
cmpsb
mov
mov
repnz
inc
lock
imul
lods
js
push
jle
push
and
cmp
lret
pop
cmpl
loope
jl
pop
mov
mov
inc
xor
aam
sbb
in
adc
jns
pop
push
jae
orl
lock
subb
je
adc
dec
call
jp
aad
in
dec
sbb
mov
mov
jnp
hlt
pop
dec
cmp
ds
push
jge
popa
xor
mov
inc
sti
xchg
push
push
cmpsb
lea
push
fdivl
test
mov
mov
sub
dec
add
dec
and
sbb
ficomps
jne
mov
les
lea
add
xor
in
xor
fs
es
xor
add
sbb
or
test
sub
mov
xchg
pop
sub
dec
add
ljmp
mov
add
jle
scas
test
add
jno
pop
mov
jne
xchg
xor
sub
popf
loope
sbb
shrl
sub
xchg
movsl
push
jge
adc
mov
sahf
daa
cmp
into
mov
sub
xchg
std
or
rorb
dec
inc
jae
fisttpl
push
mov
fmul
xor
shll
test
inc
cmp
flds
sbb
dec
push
std
dec
xor
dec
roll
adc
jns
movb
xchg
mov
inc
jb
cld
test
adc
lahf
mov
xor
or
mov
adc
jmp
mov
fldl
shll
test
loopne
sub
cmp
bswap
sbb
addr16
mov
icebp
jno
mov
repz
mov
popf
icebp
arpl
insb
adc
sbb
mov
js
in
jae
and
mov
ss
inc
dec
adc
adc
cmp
dec
outsb
dec
push
lret
sbb
and
or
int3
bsf
in
mov
iret
paddsb
push
mov
in
add
out
cmp
pop
jbe
fisubrs
jae
rolb
pop
add
ret
jae
out
leave
movsl
mov
sub
adc
mov
pusha
cli
mov
adc
pushl
cli
andb
cmp
xor
and
stc
push
cmp
xchg
std
scas
flds
dec
test
xor
les
loop
adc
stos
cmp
je
dec
fdivrp
inc
mov
mov
popl
lret
pop
enter
cmp
cwtl
loope
jge
adc
negb
pop
das
dec
stos
pop
aam
lcall
lahf
stc
push
or
mov
ret
int3
jle
dec
iret
ret
dec
mov
xor
fdivs
insl
leave
movsb
sbbb
push
pusha
icebp
xlat
xor
cltd
cs
pop
inc
out
sbb
incb
xchg
push
aam
in
push
push
addb
out
mov
insl
stc
in
lods
or
iret
jle
push
shrl
int3
popa
pop
test
test
add
cmp
and
push
sahf
fdivr
mov
xor
push
subb
mov
pop
mov
mov
aaa
insb
fdivl
sar
add
push
loopne
xorl
inc
sbb
push
sub
inc
in
mov
pop
cmp
mov
test
movsb
fdivs
xor
mov
jnp
jl
xchg
push
movsl
sbb
push
outsb
in
sbb
xchg
pop
cmpsb
loop
test
test
mov
outsl
fwait
dec
fbld
aam
or
cs
xor
scas
jnp
repnz
adc
cs
stos
mov
repz
sub
sbb
movsb
in
adc
mov
stos
roll
pushf
arpl
aad
jae
push
and
mov
push
shl
adc
enter
inc
fs
sbb
out
xchg
mov
mov
jnp
xor
dec
push
mov
das
xchg
push
mov
aas
andb
and
or
es
xlat
jge
xchg
insl
jl
imul
daa
push
icebp
dec
jns
mov
inc
mov
inc
shrl
xchg
jae
lahf
cs
mov
dec
sarl
lods
out
stos
popf
ss
bound
push
pop
insl
sti
add
sbb
dec
test
int3
int
lock
mov
xchg
xor
jg
roll
out
notb
and
mov
in
xor
push
add
push
adcb
fldenv
insb
in
imul
stc
mov
jns
mov
inc
das
jne
xchg
data16
bound
and
div
icebp
int3
test
jp
into
out
xchg
and
cmpsl
dec
jo
mov
xor
mov
adc
pop
test
xor
jnp
fisttpll
in
push
shll
add
add
arpl
lret
pusha
pushf
inc
nop
pop
and
mov
jecxz
xchg
sub
ljmp
pop
loope
jmp
push
dec
enter
notl
mov
nop
adc
or
inc
add
cwtl
xchg
in
sub
arpl
es
cwtl
adc
pop
sbbl
lods
push
lret
enter
pop
dec
inc
xor
cmp
mov
sbb
shl
leave
mov
jae
mov
int
and
or
jmp
adc
mov
jbe
test
mov
xchg
movsl
pop
ds
jb
dec
lcall
and
gs
outsl
repz
das
adc
loope
xor
pop
adc
repnz
inc
pop
arpl
mov
jg
mov
fsubrl
in
scas
das
sub
or
insb
aam
add
dec
nop
cmp
enter
incb
repz
rcll
push
xor
inc
scas
int
cmp
xchg
push
cltd
jmp
adc
xor
xchg
shr
outsl
in
fnstcw
ja
dec
push
out
mov
repz
pushf
inc
push
cmp
xor
sbb
fidivs
jp
inc
jp
ja
int3
gs
jg
mov
ja
mov
stc
iret
pop
das
sub
cld
stc
testb
repnz
int3
or
inc
inc
sub
aas
sub
lea
sub
out
jnp
jmp
mov
scas
mov
into
mov
dec
outsl
into
jb
incb
push
add
cltd
lret
loopne
mov
popf
data16
ret
mov
sbb
ret
mov
aaa
ja
fs
pop
cmp
inc
popf
aaa
insb
scas
mov
lock
outsb
fucomp
sub
lds
repnz
ficomps
hlt
xchg
or
add
xchg
cmp
jb
inc
cli
push
das
xchg
sub
jmp
and
add
test
ljmp
mov
enter
ret
mov
insb
out
sbb
sbb
loope
push
call
movsb
cltd
mov
lcallw
xchg
lcall
jno
sbb
insl
pop
push
xor
stc
or
mov
nop
mov
into
xchg
jp
sub
dec
out
push
lcall
fdivp
sti
sti
mov
test
idiv
mov
shrb
pop
sbb
aad
pop
stc
hlt
dec
jns
xor
jnp
iret
pop
cmp
in
cmp
rorl
xchg
push
adc
lods
pop
mov
inc
pusha
rcrl
or
mov
bswap
add
cwtl
js
hlt
insb
jecxz
pop
mov
cmpl
sub
outsb
inc
xor
pop
int3
test
movsl
test
cwtl
sub
push
and
movsb
addr16
jae
fmul
mov
or
test
xor
jp
jmp
or
movsb
js
adc
inc
sbb
sub
adc
subb
stc
jmp
mov
jl
sbb
mov
adc
fxch
icebp
cmp
sbb
fdivl
cmc
jnp
inc
xchg
push
jl
add
insl
popf
pop
xor
jns
je
nop
leave
xchg
iret
jnp
mov
stc
inc
out
push
iret
je
iret
mov
fimull
shl
or
sbb
rcrb
dec
dec
or
pop
pop
imul
lret
ljmp
mov
sbb
add
enter
cltd
sbb
das
xchg
jle
ret
push
jbe
fldt
ret
ljmp
inc
loopne
sbb
je
fs
mov
roll
in
pushf
push
xchg
daa
test
imul
push
sbb
mov
xor
sahf
adc
in
addr16
jle
lods
pop
fwait
sbb
movsb
mull
lcall
insb
xchg
push
ss
dec
cmp
push
sbb
lret
xor
out
xor
mov
lock
inc
dec
mov
pop
sbb
push
pop
jns
mov
jne
or
adc
adc
pop
lret
push
ret
or
test
xor
cld
or
and
icebp
sub
pusha
lock
jle
dec
sbb
rcrb
jnp
pop
cmpsb
jle
mov
negb
mov
jmp
push
das
mov
nop
aas
pusha
mov
pop
mov
mov
into
xchg
filds
push
sbb
insb
fwait
mov
stc
cmp
andb
mov
fnstsw
push
popf
add
jo
mov
fldenv
ds
call
sub
push
mov
cltd
ret
xorl
sub
jb
pop
fisubs
or
jns
in
lcall
data16
bound
or
xchg
cs
dec
push
add
and
mov
or
xchg
cmp
jecxz
inc
roll
daa
fldl
jmp
stos
push
mov
inc
sarl
sbb
or
adc
test
je
push
aaa
std
pushf
jo
pusha
adc
push
loope
pop
or
daa
inc
inc
arpl
ret
pop
bound
and
cmpsl
xchg
xor
adcb
test
stc
xchg
pop
xchg
ret
dec
pop
stc
lret
push
cli
dec
adc
lods
sub
cmc
daa
jmp
dec
mov
into
inc
out
xlat
fs
lods
push
jge
pop
test
leave
sahf
pop
sti
js
enter
sahf
dec
ret
mov
daa
imul
mov
repnz
sub
push
mov
xchg
jae
mov
ja
int
lods
pop
test
or
les
fstpl
sbb
lods
sti
frstor
aam
popf
inc
jno
xor
jb
add
ret
bound
ret
mov
jg
mov
mov
repz
inc
lcall
leave
movsb
cmp
fstpl
repz
jl
mov
bound
mov
gs
sub
xor
mov
rorl
jbe
in
shrl
add
fcomps
fcomp
push
xor
scas
adc
rcl
mov
outsl
repz
jbe
nop
clc
icebp
push
call
inc
ja
std
roll
sbb
xchg
lea
push
push
xor
rcrb
dec
test
push
es
push
dec
into
in
push
cltd
fldl
cmc
leave
frstor
adc
adc
pop
dec
rcl
cmp
mov
adc
jl
sub
cli
cltd
shll
xor
movsl
xor
iret
mov
aam
outsl
lock
in
dec
imul
lahf
sarl
lods
cmp
test
jp
jne
fistpl
mov
add
sbb
xchg
cmp
fiaddl
ja
ja
out
jecxz
jecxz
addb
jecxz
push
aam
push
js
cwtl
icebp
mov
jecxz,pt
enter
loopne
push
repnz
dec
mov
fcompl
xchg
xor
mov
push
cmp
pop
test
mov
test
cwtl
fnstenv
daa
mov
add
dec
leave
or
add
add
jp
adc
fidivs
loopne
test
loop
loopne
aaa
loopew
repz
jge
lds
ds
pop
jb
popa
pop
jns
ljmp
and
inc
xor
inc
jnp
fistl
in
inc
xor
jl
pop
filds
lods
push
dec
inc
aad
jns
leave
addl
add
notl
lds
in
cmc
xchg
jne
sbb
mov
lahf
aas
sahf
aaa
or
pop
out
add
mov
push
mov
sub
sti
mov
mov
adc
cmpsb
sbb
inc
pop
call
mov
bnd
and
push
adc
jo
stos
lea
mov
xorl
and
pop
sbb
fisubrl
dec
xchg
filds
lods
je
aad
hlt
inc
shl
mov
sti
inc
and
aam
and
sub
pop
adc
cmp
inc
push
push
mov
movsb
cmp
jmp
mov
frstor
ret
fcmove
out
fisttps
push
enter
fistps
pop
or
jnp
mov
int3
dec
rcrl
inc
xchg
icebp
cmp
movsb
pop
fldl
add
negl
rcl
jns
jp
fiadds
fisubrl
add
push
rol
mulb
js
jg
in
sub
mov
outsl
les
push
adc
test
mov
inc
lods
inc
push
pop
pop
scas
dec
lods
cli
mov
push
xor
loopne
cmp
lods
pop
mov
inc
mov
shl
adc
push
cmpsl
mov
or
push
popf
repz
add
adc
ss
lcall
jl
or
test
das
mov
sub
stc
cmp
loopne
push
xlat
pusha
in
xor
jb
repz
mov
sbb
cld
sbb
xchg
pop
movsl
sub
inc
mov
out
or
inc
pop
xchg
cmp
adc
sub
outsl
add
out
dec
or
lds
in
nop
jl
mov
in
cli
inc
and
movsb
xor
sbb
pop
aad
push
adc
imul
mov
in
out
and
sbb
sbb
fwait
adc
mov
and
adc
fnsave
jbe
xor
dec
xor
push
sub
mov
out
test
bound
mov
jle
push
aas
notb
xlat
jnp
mov
data16
aas
xor
fs
and
ljmp
ret
jno
imul
push
cmp
movsb
mov
mov
and
mov
cltd
push
mov
jo
push
mov
or
loope
jo
fwait
pop
pinsrw
rcr
lods
fistpl
jne
fbstp
or
ret
popa
test
test
mov
mov
push
cmpsl
fmull
movsb
and
pop
jno
xor
in
cltd
mov
xchg
xor
icebp
sub
out
push
fldcw
mov
mov
fdivp
sbb
ljmp
add
pop
shlb
arpl
flds
jmp
or
aam
jo
js
xor
int3
push
cwtl
sarb
cmp
sbb
cmp
cmp
pushf
arpl
adc
mov
lahf
cs
pop
lods
sbb
repz
gs
mov
dec
sbb
or
mov
jle
fstpl
fst
sub
sub
or
iret
call
adc
pop
cmp
movsl
mov
sti
push
cmp
mov
cmc
cmpsb
sbb
adc
mov
lods
clc
incl
pop
sbb
std
call
mov
sub
fidivrl
xor
clc
inc
fwait
or
xchg
sbb
sub
in
out
mov
nop
and
popf
cmp
cmpsl
mov
push
pop
jg
jg
movsl
jl
push
inc
mov
mov
adc
shlb
loop
xchg
pop
push
pop
jp
clc
inc
inc
movsb
rcrl
inc
dec
xchg
pop
lods
jg
mov
push
sarl
insb
jnp
dec
lds
shll
inc
negb
mov
push
daa
pop
fildl
inc
mov
dec
pop
rorb
push
push
into
xlat
jne
sbb
sbb
xchg
adc
leave
loopw
mov
dec
imul
jbe
xchg
mov
push
inc
out
out
insb
js
scas
rcll
mov
sar
pop
insl
loopne
outsb
sbb
aam
nop
fsubp
jg
jno
aad
sti
mov
mov
aam
je
fsubrl
ret
sub
cmp
in
test
in
push
lock
and
divb
mov
aad
lea
mov
inc
rcr
dec
je
or
cmp
das
pop
push
inc
cmp
add
and
les
lock
and
jne
rol
sub
cmpsl
test
sub
pop
add
xchg
out
dec
push
rolb
jmp
movsb
mov
jo
xchg
jp
mov
adcl
mov
adc
sarl
and
push
push
cli
mov
test
add
push
les
mov
lds
sbb
or
rolb
xchg
pusha
mov
jle
rcl
mov
push
out
lret
xchg
push
push
xor
out
and
in
adc
das
pop
xor
xor
or
push
les
push
inc
pop
dec
test
repz
aad
sub
push
push
ds
xor
pop
sbb
jmp
je
pop
out
sub
imulb
stc
das
les
sbb
clc
push
cmp
cwtl
push
push
mov
loopne
cld
out
xor
in
push
mov
or
xchg
push
movsl
lret
outsb
sub
mov
adc
xchg
test
add
push
pop
push
jno
les
insl
mov
adc
mov
xchg
inc
pop
pop
filds
lcall
lret
lcall
ljmp
mov
vmread
push
push
adc
push
gs
lea
into
mov
xchg
adc
jg
fcomip
jae
add
mov
testb
fwait
imulb
fucompp
push
jbe
fs
add
sbb
or
cli
push
fstpl
sbb
cltd
sahf
add
dec
sub
mov
xchg
inc
and
jbe
idivb
pushf
fcmovbe
mov
mov
insb
cmpsl
push
aaa
xlat
jge
mov
cmp
add
push
negb
mov
jo
popf
jg
aaa
jge
movsb
inc
add
sub
pushf
mov
jne
les
loopne
xchg
push
in
fwait
sub
pop
xorb
or
cmp
lods
outsb
fstpl
xor
and
pop
mov
imul
aad
pop
in
clc
inc
les
aad
jmp
in
std
mov
inc
popf
lods
cmp
int3
cli
sub
lods
enter
and
sub
or
dec
movaps
inc
sub
cmp
jo
lret
in
xchg
mov
out
lods
adc
pop
imul
xchg
mov
xor
fsubl
call
lcall
adc
lds
in
fs
mov
mov
pop
xor
inc
push
rcrb
mov
pop
and
dec
sti
rol
pushf
jmp
movsl
cltd
fdivp
daa
xchg
jmp
mov
test
xchg
adc
add
push
and
shrl
sub
or
outsb
into
xchg
and
mov
pop
jns
fstpl
push
or
movsb
ss
mov
cltd
mov
jns
es
cltd
jg
lods
mov
pushf
add
push
lahf
into
and
stc
mov
mov
jae
std
gs
add
push
xor
dec
mov
xchg
adc
ret
mov
fsubrl
mov
sub
mov
repnz
dec
lea
or
xchg
and
inc
adc
xor
jbe
shlb
ds
add
xchg
xor
rcll
imul
mov
xchg
sbb
push
bound
sahf
je
cltd
loop
cwtl
mov
aam
mov
mov
movsl
ljmp
inc
inc
sahf
in
mov
xchg
fs
adc
stc
cli
mov
adc
mov
cmpl
hlt
jb
push
js
mov
icebp
cmp
xchg
dec
xlat
mov
add
push
in
lret
neg
mov
data16
jle
mov
xchg
ja
or
lock
mov
push
lods
repnz
cmpsb
pop
xchg
scas
notl
dec
jb
fwait
int3
xor
xchg
or
les
lret
adc
inc
sbb
idivb
sbb
xor
dec
inc
dec
ljmp
cld
push
int3
imul
lret
sbbl
sbb
mov
nop
popa
sub
sub
ja
int3
test
cmp
mov
mov
sub
dec
adc
cmp
cmp
incl
js
sub
data16
and
mov
cli
add
popa
push
es
cmp
or
xchg
addl
pop
mov
das
xor
mov
inc
setnp
add
sahf
and
jge
and
xchg
mov
dec
cmp
rorb
jbe
cmp
fistpl
xchg
xchg
icebp
sbb
int3
gs
bound
dec
pop
and
enter
sbb
addb
je
ja
cmp
jmp
xchg
jg
or
test
aas
mov
leave
pop
inc
inc
dec
mov
and
xchg
lds
std
ja
add
imul
test
jge
nop
dec
pop
jecxz
inc
inc
stos
push
fs
jge
dec
cmp
sbb
cmc
out
cmpsb
cwtl
in
cmpl
imul
cmp
cmp
in
es
inc
test
rol
insb
push
adc
mov
dec
pop
xlat
jmp
ret
pop
sarl
sub
sbb
orl
sbb
inc
inc
inc
imul
or
fnstcw
repz
xor
in
cli
mov
mov
jne
xchg
mov
push
pop
cmp
cmc
hlt
dec
les
test
enterw
xchg
sbb
movsl
in
add
cmpsl
addl
incl
addr16
xor
adc
test
and
sub
add
ret
lcall
scas
push
icebp
push
mov
jmp
mov
cld
imul
adc
push
dec
imul
stc
rol
je
push
stos
push
int3
daa
idivl
sub
xchg
pop
pop
sti
int
mov
mov
mov
push
jne
push
adc
out
jo
push
jl
dec
stc
les
sbb
in
mov
and
jnp
rclb
adc
push
inc
xor
shlb
out
call
div
fidivrs
mov
push
sub
shll
mov
xchg
ror
add
xchg
stc
ds
push
adc
dec
addr16
push
ss
orl
cmp
stos
ja
fidivrl
es
cli
iret
dec
mov
sbb
dec
push
push
ja
mov
sbb
push
xchg
inc
loop
sub
scas
inc
push
fistpll
xchg
push
nop
rorl
sub
stos
aam
test
xchg
lods
sub
sarl
pop
ficomps
mov
ret
mov
fnsave
cmp
lock
stos
cwtl
lds
pop
or
push
insb
xor
xor
sub
popf
loope
sbb
hlt
decl
pop
or
fisubl
ss
jno
cmp
ret
fwait
orb
imul
pop
jge
sub
lcall
lds
inc
mov
adc
inc
stos
add
outsl
jae
mov
push
xchg
adc
sub
and
xor
in
push
lock
cmp
sub
mov
adc
loop
ds
jg
in
lods
ljmp
sbb
mov
popf
rcll
pusha
mov
xor
fisttpl
ret
loop
gs
aas
or
movsb
test
fists
sub
or
sub
mov
icebp
push
movsb
jnp
in
cmp
and
inc
jl
mov
pop
mov
pop
cmp
push
call
xchg
push
jle
sbb
loop
mov
icebp
xchg
xchg
ret
push
ds
jmp
sub
xor
scas
push
adc
stos
test
nop
leave
loope
fidivl
xchg
mov
pop
adc
mov
mov
call
fildll
hlt
aaa
xchg
out
bound
pop
pop
xorl
lcall
xor
add
ljmp
jl
out
rorl
pop
into
rcr
mov
mov
sub
or
std
popf
lods
js
pushf
cmpsb
lret
ds
roll
add
idiv
push
outsl
adc
mov
movsl
mov
aas
dec
test
dec
jbe
shr
jl
enter
flds
popa
and
vphaddbd
jmp
xchg
addb
xor
and
subb
mov
enter
mov
add
or
fs
mov
cli
xlat
or
mov
fnclex
cmp
and
xchg
int
push
subl
or
lahf
adc
or
fsubs
or
jle
cmp
mov
sarb
jb
sbb
and
mov
out
jge
push
add
xor
imul
xchg
jnp
xchg
pop
sub
push
mov
cmpsb
cmp
inc
xchg
insl
pop
in
mov
stos
jbe
mov
jge
out
jns
cwtl
aas
cld
stos
sbb
pop
daa
pop
xlat
adc
or
push
or
jns
dec
les
adc
cmp
js
push
fldenv
mov
and
xchg
inc
fadd
sbb
mov
arpl
add
bound
jb
test
leave
sbb
fcmovnbe
roll
sub
mov
mov
jb
fildl
push
int
cmp
push
mov
sbb
cmc
hlt
and
jbe
lahf
scas
jle
add
mov
inc
push
repz
push
mov
ljmp
jmp
and
pop
daa
pop
inc
repz
test
inc
mov
leave
fwait
es
cli
or
paddusw
loop
xchg
add
inc
xchg
in
in
mov
push
sbb
adc
stc
mov
or
movsl
out
ror
shll
insb
lds
add
sbb
or
pushf
push
aaa
add
hlt
inc
xor
bnd
xor
shl
jb
jb
dec
pop
mov
inc
scas
or
gs
cmp
repz
rcr
or
pop
mov
sbb
fildl
inc
call
jo
mov
xchg
ja
icebp
int3
push
xchg
movsb
clc
pop
add
mov
fucomp
ror
or
sbb
mov
xor
fwait
sub
cmp
lods
int3
jle
xor
loopne
and
ja
sbb
rol
sarb
adc
ficoms
movb
mov
cmp
mov
mov
sub
mov
popf
pop
ret
mov
dec
mov
xor
push
add
jl
scas
out
xchg
sub
mov
xor
ljmp
mov
lods
jo
mov
ja
mov
sahf
add
mov
xchg
mov
or
lods
and
aaa
pop
pop
sub
sub
add
outsl
adc
adc
push
inc
and
inc
xor
xchg
push
mov
test
icebp
or
out
jno
subl
dec
daa
shl
push
cmp
jmp
xchg
inc
sub
aam
or
dec
push
scas
jb
xor
pop
es
cmp
outsb
jae
pop
xchg
test
inc
adc
fsubs
inc
int3
and
je
sub
or
sahf
repz
mov
rol
inc
sbb
jbe
out
mov
fnsave
xchg
movsb
insl
push
cmp
or
out
adc
mov
int
and
lret
js
popl
mov
fisttps
orb
mov
inc
xchg
sbb
repnz
xor
sub
sbb
push
dec
divl
test
and
clc
and
call
xor
vcvtpd2dq
and
mov
sahf
in
inc
and
and
adc
pop
mov
jmp
pop
fldcw
hlt
mov
test
rolb
adc
mov
ffree
xlat
jo
data16
push
leave
jp
push
add
and
pop
pop
cmp
jecxz
and
sarb
adc
push
rorl
mov
sub
push
jae
sbb
cli
or
jp
pop
cmpsl
inc
lret
mov
mov
sarl
nop
ret
in
adc
dec
lods
jmp
xor
icebp
xor
lcall
pop
sbb
dec
cmp
aaa
cmp
outsl
cltd
add
dec
mov
push
cmp
loop
mov
setg
add
push
or
inc
stos
insb
jle
pop
leave
xor
cmpsb
lds
mov
fiadds
dec
push
and
rcll
push
pop
inc
int
mov
lret
xchg
xor
ljmp
push
ret
push
and
fcom
rorb
fnstenv
mov
clc
stos
jo
mov
mov
aas
cmp
or
add
xor
and
int
cmp
int3
aad
inc
fs
mov
scas
mov
data16
jge
addb
and
and
pop
cmpsl
repz
call
sub
sub
nop
insb
cmp
into
js
cmpsl
dec
and
push
dec
dec
mov
and
int3
loope
push
sbb
dec
out
cmpsl
inc
sarl
cmp
add
addr16
and
and
movsb
out
push
xorl
inc
sub
sub
dec
lds
call
out
xchg
dec
mov
lods
jae
jns
sub
mov
sub
scas
iret
ret
pusha
add
cmc
or
mov
and
push
mov
adc
mov
or
xchg
inc
jg
pushf
cmp
sbb
sbb
lock
dec
mov
cmpsb
test
aad
sub
aaa
sbb
notb
fmul
repnz
movsl
inc
push
and
xchg
notb
jecxz
adc
or
mov
mov
ficomps
xor
aad
pop
pushl
add
mov
leave
mov
sub
fcomi
mov
mov
push
sbb
mov
stos
aas
xchg
xor
add
fnsave
mov
inc
mov
das
or
repz
addr16
cltd
inc
push
add
pushf
int3
adc
pushf
sub
push
mov
cs
addr16
imul
imull
sbb
icebp
cmp
int3
ret
mov
lds
jp
push
leave
cmp
in
dec
dec
push
add
dec
int
lock
lods
sbb
in
add
insl
lds
stos
xor
xor
sub
mov
aaa
and
fsubl
mov
cs
rolb
adc
cs
js
insb
xchg
pushf
dec
jp
ljmp
cmc
jp
pop
mov
xor
mov
inc
sub
pop
cltd
loope
shrl
lahf
outsb
shl
inc
xorb
pusha
and
movsb
mov
lds
test
cld
sbb
dec
mov
mov
shlb
out
mov
js
loope
iret
hlt
pop
mov
inc
push
icebp
mov
scas
mov
mov
push
push
pushf
test
push
adc
movsb
and
lahf
lds
jo
xchg
sbb
fcom
stc
and
imul
sub
imul
nop
lea
arpl
add
and
sti
xchg
sbb
push
and
ja
stc
sbb
and
xchg
stos
lock
sub
adc
mov
into
xchg
aam
jo
xchg
dec
inc
repz
xor
xor
bound
es
xchg
dec
inc
adc
lahf
mov
push
rcl
jb
scas
and
imul
jo
filds
xchg
dec
out
ret
pop
jne
push
xor
sti
fsubrs
das
xchg
enter
pop
sbb
mov
enter
mov
test
dec
pop
or
push
stos
jbe
jl
dec
fstl
aad
dec
mov
push
jb
cmp
sbb
nop
shll
shrl
mov
xor
loopne
js
push
sub
jecxz
add
sub
orb
push
adc
sub
sbb
lods
jle
dec
push
mov
sub
fimull
cmp
dec
mov
out
cmp
mov
dec
or
jl
leave
gs
sub
movsl
pushf
pop
mov
hlt
adc
sbb
xchg
roll
or
add
arpl
add
dec
repnz
bound
test
sbb
push
stc
mov
lods
and
and
cmp
sahf
clc
outsb
hlt
loope
pop
das
aaa
cmc
push
jno
rorb
stos
fwait
mov
sarb
fimull
clc
cmp
sub
arpl
mov
daa
inc
cmp
adc
add
xor
adc
leave
pop
jmp
insl
int3
jmp
mov
scas
inc
jmp
pop
hlt
mov
mov
adc
mov
xchg
pop
mov
and
enter
dec
dec
outsb
aad
cmpsb
out
aas
pushf
clc
js
imul
ret
aaa
xchg
push
repz
subl
ss
outsl
test
mov
cmp
addl
cmp
aam
push
or
shrb
dec
lds
mov
or
mov
inc
lret
int
dec
inc
cmp
lcall
xchg
les
push
dec
fcompl
repnz
pop
cmp
enter
int3
push
inc
fs
je
push
aam
aam
pop
out
sbb
dec
fmuls
fcompl
ja
out
clc
test
movsl
aad
sub
leave
cwtl
jge
shlb
or
sbb
and
push
xor
push
pop
psraw
or
push
fcoml
lret
and
sbb
mov
fdivl
sub
add
pop
loop
mov
push
mul
jns
jns
push
test
lock
icebp
push
js
daa
imul
cli
mov
rcrb
mov
ja
pop
test
inc
popf
cld
xor
mov
lods
mov
xor
movsl
fidivrs
or
add
sub
xchg
test
popa
cmp
ja
ljmp
comiss
ror
mov
push
test
adc
mov
aaa
add
or
testl
jo
xor
mov
icebp
out
daa
cmpb
cwtl
mov
pop
divb
mov
std
je
xor
xor
shl
testl
adc
mov
jnp
mov
addb
xor
sbb
ljmp
jnp
enter
movsb
ret
fdivl
jp
or
mov
ss
aas
outsl
daa
ret
pop
and
and
in
sbb
pop
add
leave
popa
adc
bound
add
or
mov
xchg
push
icebp
sbb
outsb
das
stos
or
adc
adc
lock
mov
inc
lret
sbb
lret
aaa
pop
test
outsl
cmp
add
lock
mov
mov
mov
enter
icebp
mov
push
push
sub
push
jnp
arpl
fldl
and
lods
lods
into
mov
inc
fcmovnb
in
pop
jmp
mov
gs
out
testl
sbb
push
mov
jbe
das
xchg
adc
jae
pop
jg,pn
lcall
test
adc
mov
out
roll
push
aas
or
and
out
cmp
pushf
stc
jcxz
mov
in
pop
sub
jbe
inc
into
pop
out
or
icebp
push
fmulp
sbb
push
mov
aad
and
jmp
aas
and
popa
in
sbb
jo
dec
in
jmp
lcall
outsl
xor
bound
jp
sub
adc
xchg
inc
or
incb
push
jbe
xor
inc
fcoml
xor
leave
adc
nop
in
mov
fimuls
jecxz
mov
push
scas
fstpt
insb
gs
inc
mov
jno
loop
jle
sbb
inc
push
out
sub
mov
inc
loope
shlb
sbb
lcall
mov
xor
dec
lods
setp
rcl
lahf
add
int
jecxz
jle
test
cmp
fs
test
mov
mov
sti
add
stc
inc
fwait
jae
xor
addr16
fsubp
lret
daa
or
mov
call
push
outsl
jge
hlt
out
fcompl
add
sub
cld
jne
loope
in
insl
mov
test
scas
scas
jbe,pt
fmull
sbb
sbb
and
pushf
ret
lret
aaa
mov
scas
leave
pop
xor
mov
jge
js
popa
push
mov
mov
cwtl
dec
pop
call
stos
mov
in
mov
xor
adc
rol
jmp
dec
push
ficoms
add
pop
and
dec
push
pop
push
fistps
dec
out
pop
adc
lods
stc
mov
lds
dec
jo
addl
lret
xchg
fiaddl
inc
scas
xchg
negb
das
mov
dec
sub
and
xor
fs
jge
jb
mov
clc
js
sub
icebp
cmp
jb
inc
sbb
sbb
pop
adc
mov
int
insl
outsl
shll
add
sbb
sub
jne
adc
into
xor
inc
imul
mov
mov
les
xchg
push
sti
leave
aaa
pop
cmc
mov
push
mov
dec
scas
loop
xchg
mov
adc
arpl
hlt
mov
in
sbb
cmpsl
mov
pop
outsb
aaa
stc
enter
and
push
cmp
out
in
fcomip
sbb
mov
cld
and
mov
scas
ljmp
jo
push
popf
push
sub
mov
call
mov
xor
aas
out
jmp
xor
dec
lods
pop
mov
and
push
hlt
loope
daa
sub
stos
out
xchg
adc
ljmp
jge
aas
out
push
pop
xchg
movsb
mov
jge
mov
insb
and
mov
fcomip
stc
adc
loop
push
inc
sbb
movsl
es
mov
mov
jns
outsl
addb
inc
jne
push
and
push
outsb
pop
ret
push
cmp
mov
cli
idiv
js
jp
mov
std
test
aad
and
mov
mov
push
sub
pop
sahf
shlb
add
jae
int
mov
mov
xchg
mov
pop
mov
rclb
repz
push
int
sub
loop
scas
test
test
sub
rcl
into
and
sbb
push
sarl
aaa
add
xor
imul
fnstcw
daa
cmp
xor
mov
mov
mov
xor
mov
push
andb
pop
int3
add
pop
adc
sub
pop
mov
test
test
sub
push
es
sbb
jp
test
push
cmp
mov
push
shll
pop
jbe
jecxz
jmp
das
int3
cmp
popf
push
je
in
and
push
pop
lock
insl
mov
sbb
mov
dec
out
mov
fs
testb
jmp
into
shr
mov
mov
aaa
divb
add
sbb
scas
ja
cli
int3
pushf
out
pusha
bound
pop
push
movsb
out
mov
ret
out
psrld
pop
jg
jge
inc
mov
mov
cmpsl
lods
into
inc
lds
add
insb
xor
fadds
sbb
mov
pop
mov
mov
iret
popa
add
loopne
dec
inc
aad
push
mov
adc
mov
lds
movsb
ret
sbb
xor
mov
pop
xchg
int
repnz
ja
movsl
adc
call
xor
or
jle
push
pop
arpl
test
cwtl
arpl
push
sub
cli
lcall
bound
pop
test
std
sbb
mov
xor
push
and
add
icebp
inc
movsb
cmpsb
gs
in
pop
dec
pop
jge
mov
adc
xor
std
fcompl
mov
int
xchg
sub
vaddsubpd
xor
mov
xchg
or
lret
push
pop
jp
inc
pop
pop
fistpl
jae
ljmp
fildl
clc
js
mov
dec
pop
cwtl
fwait
imul
sub
lods
cltd
mov
push
les
adc
cmpsb
fisubrs
lods
push
bound
mov
and
dec
jg
sub
pop
push
jb
jge
mov
aas
sbb
in
inc
call
mov
sub
push
pop
daa
cld
jecxz
out
ss
add
insb
loopne
mov
and
std
or
aad
jmp
pop
in
cld
psubw
arpl
int3
mov
dec
cmc
stos
inc
inc
xchg
in
push
scas
push
sbb
dec
icebp
push
jp
icebp
mov
dec
or
jmp
inc
test
adc
push
ljmp
jge
jns
and
shrb
mov
sub
les
mov
mov
aas
cwtl
mov
cli
adc
dec
iret
push
testb
sbb
enter
in
pop
leave
leave
jno
push
cmp
pop
rolb
mov
xor
mov
add
push
lock
xchg
sbb
push
jecxz
outsb
loope
push
ds
jle
stos
inc
jecxz
push
pop
idivl
mov
add
adc
jo
cmp
js
pop
xor
or
fs
cmp
and
xchg
mov
out
dec
and
cmpsb
mov
icebp
imul
inc
inc
sbb
movsl
dec
cmp
gs
sub
xor
mov
lds
imul
aad
pop
std
fcmovnb
ljmp
xchg
xchg
iret
cld
cmpsb
nop
stos
adc
cmp
insb
add
mov
inc
lahf
test
sbbl
cvtpi2ps
sbb
jmp
popa
push
adc
inc
jp
sub
mov
sub
mov
and
ja
inc
xchg
mov
aad
lea
or
aad
or
aad
jmp
jle
fisubrs
stos
pop
icebp
test
inc
ss
imul
xor
pushf
dec
loop
cmp
inc
pop
cmp
jbe
adc
rcr
xchg
dec
xchg
jl
stos
push
and
and
or
sbbl
jge
lods
adc
xchg
shll
lret
push
dec
add
and
movsb
movsl
sub
pop
add
dec
xor
loope
out
xchg
test
rorl
movsl
mov
dec
sub
lahf
mov
pop
test
test
fs
push
mov
pop
faddl
clc
or
leave
out
lods
notb
push
aas
icebp
pop
arpl
mov
aaa
sbb
clc
dec
or
into
mov
std
add
adc
pop
mov
mov
jne
fisubs
in
xchg
pop
popf
lods
scas
xor
aam
xchg
lcall
add
or
arpl
mov
push
sub
jnp
jbe
movsl
sub
inc
enter
inc
and
mov
int
cmp
adc
push
dec
mov
mov
std
je
test
and
jl
mov
mov
ss
xor
pop
and
lahf
cmc
into
or
lods
sub
outsb
cmp
daa
add
enter
xor
push
xlat
cmp
fistpl
xchg
xchg
icebp
cld
clc
xchg
xlat
aam
sbb
popa
es
test
das
mov
in
js
sarb
sti
outsl
cmp
dec
mov
adc
addr16
push
mov
test
movsl
js
jns
pushf
or
mulb
and
hlt
cmc
adc
cltd
jno
sub
aas
jge
lods
fdivrl
pop
rorb
js
ficompl
int
repz
sbb
mov
shl
push
inc
into
popaw
jo
mov
cld
bound
fnstcw
sbb
hlt
in
cmc
push
out
xchg
sbb
jno
push
cmpsb
jle
movsl
in
inc
mov
mov
into
call
mov
jg
inc
push
cwtl
xchg
mov
add
jnp
hlt
xorl
pusha
into
cli
in
xchg
into
iret
sahf
ss
shl
pop
subb
repz
push
sbb
cli
xchg
idivb
sbb
jne
roll
jbe
rorb
jecxz
clc
les
call
gs
cmpsl
add
mov
xor
ret
dec
xor
xor
push
adc
aas
nop
lods
inc
sbb
fidivs
das
sti
imul
or
push
xchg
xor
inc
ljmp
arpl
jns
std
inc
das
fucomi
lahf
es
sbb
pusha
insl
or
xlat
cmc
lods
testb
sbb
iret
outsb
syscall
outsl
mov
mov
pop
cs
sahf
lahf
out
sub
push
jp
cmp
lret
fbld
xchg
push
popa
and
arpl
and
xabort
and
jbe
iret
xchg
sub
cmp
out
ret
inc
xchg
mov
cltd
fsubs
inc
lahf
ret
add
and
insb
aad
dec
ret
inc
std
cmc
mov
add
jecxz
mov
add
xchg
push
dec
inc
jle
imul
mov
xor
cltd
das
ret
cmp
enter
pop
or
cltd
clc
es
lahf
fistpll
cwtl
inc
add
mov
or
pop
hlt
shr
dec
scas
or
dec
pop
sub
stos
or
pop
push
sbb
in
cmp
jl
inc
aad
and
in
and
jb
sub
pop
cmp
ja
sbb
testl
add
push
sbb
cli
pop
or
sub
push
testl
rcl
aam
nop
adc
inc
sbb
jecxz
mov
mov
hlt
dec
push
jg
xor
fs
lea
xchg
ds
jp
std
ljmp
in
mov
xchg
pop
xchg
test
and
or
cmpl
das
jo
xchg
pop
sbb
and
adc
dec
or
sti
mov
mov
in
jnp
aas
rcrl
push
or
mov
push
stos
shrl
jb
adc
insb
add
cwtl
push
sub
jl
sub
adc
cs
mov
nop
jge
or
inc
inc
iret
insb
stos
dec
dec
push
data16
sarl
lods
xchg
das
lahf
cmp
cli
fadds
lods
leave
inc
out
mov
cmpsb
sbb
jle
inc
clc
or
push
sti
xchg
xchg
mov
in
inc
jb
sub
std
cmpsb
imul
jno
pushf
or
mov
mov
imull
mov
pusha
out
inc
pushf
fnstenv
push
dec
inc
es
sub
inc
and
jns
imul
nop
xor
xchg
hlt
or
ljmp
ret
mov
add
ret
push
cltd
xchg
test
cmp
ds
xchg
faddl
jnp
stos
push
sbb
popf
sub
into
in
sti
enter
outsb
aad
sbb
cmpsl
fcoml
movsb
sbb
mov
mov
lret
or
cmp
das
push
add
int
ss
xchg
and
pushw
cwtl
imul
xchg
bnd
repz
movsl
iret
mov
int
sti
adcl
loope
hlt
lea
sbb
or
mov
aad
lock
sbb
jle
mov
fstpl
into
cmp
mov
call
push
sbbl
cmp
xchg
inc
push
lahf
sbb
dec
pop
mov
js
sub
in
jge
das
cmp
jg
mov
and
insl
add
push
sub
fucomp
push
push
aam
xchg
mov
xor
xor
push
out
and
add
or
cmp
cmp
mov
pop
mov
jae
dec
push
lret
sbb
mov
inc
call
or
cmp
andb
pop
shl
ret
mov
aad
dec
ds
dec
shl
dec
stos
je
pop
xchg
std
xchg
mov
add
push
lahf
push
lock
cmp
std
mov
inc
rcrl
ds
push
in
loope
sahf
xorl
lock
addb
xlat
mov
mov
sbb
fisubrs
nop
scas
push
cmpsb
dec
pop
fimull
nop
jp
xor
pop
sbb
xor
orl
loopne
push
jb
mov
mov
jp
insl
test
popf
mov
push
setge
in
push
int3
mov
ret
movsb
outsl
and
movq
inc
stos
ret
out
mov
push
dec
push
push
sbbb
aas
sbb
mov
mov
pop
xor
hlt
dec
xchg
es
inc
cmp
imul
lcall
mov
or
cmp
and
shrb
lcall
pop
xchg
hlt
inc
or
or
sub
aad
out
lret
in
add
pop
fptan
lea
int3
push
out
sti
test
loopne
ret
push
and
inc
pop
add
lcall
ret
cmp
jg
sahf
adc
cld
dec
xchg
cmp
jp
cmp
ja
push
mov
imul
arpl
mov
push
dec
sti
icebp
mov
icebp
loope,pn
adc
cmp
ficoms
xchg
inc
jg
mov
lods
out
xchg
jno
xor
test
jne
sbb
ss
xchg
or
mov
repnz
mov
leave
sbb
sbb
data16
pop
pusha
mov
xacquire
jae
cwtl
aaa
xor
and
jmp
lcall
cmp
sahf
aaa
push
sub
movsl
dec
or
sbb
and
fisttpll
mov
jp
inc
jl
and
jp
ret
lea
jle
mov
out
shl
stc
dec
ret
inc
aas
mov
in
mov
mov
cmp
popf
rcll
loope
xor
inc
xor
lock
add
aas
or
mov
xchg
lds
lods
out
or
add
push
cmp
cmp
xchg
xor
lea
icebp
xor
hlt
adc
fstl
pop
movsb
sbb
lea
adcl
bnd
insl
xchg
mov
stos
test
push
xchg
ss
sbb
add
sarb
pop
cmpsl
scas
mov
ja
sub
fcomi
and
and
aad
mov
mov
ds
adc
aam
movq
lret
dec
stos
out
cli
decl
stos
lahf
fwait
test
lock
pop
leave
push
scas
mov
sbb
cmp
jnp
adc
push
aaa
movups
shll
out
jmp
cld
cmp
hlt
dec
vpor
aad
sar
xor
int
jno
and
and
stos
mov
call
sbb
jo
or
test
mov
sti
jbe
jp
in
cltd
and
mov
jno,pn
push
xchg
jnp
fldenv
rclb
bound
out
xor
sbb
or
out
and
and
pusha
jnp
mov
sarl
loope
pop
mov
test
rorl
inc
sbb
push
popa
ss
ret
test
fs
pop
mov
arpl
lock
stc
xchg
adc
xchg
mov
xlat
jecxz
xor
or
pop
pop
icebp
adc
xchg
xor
push
pop
lea
xor
jbe
and
mov
std
or
or
fcmovne
mov
push
daa
adc
sbb
adc
into
daa
adc
push
and
sbb
jae
adc
push
or
cmp
shll
add
scas
lds
imul
inc
lahf
loop
cltd
in
outsl
cmc
mov
adc
pop
jp
enter
mov
or
jo
jge
imul
xchg
xchg
or
repz
push
rcrb
push
or
sti
xchg
mov
push
stos
jno
fs
xchg
jne
outsb
push
mov
mov
int
repnz
and
add
pop
inc
pop
lret
mov
jb
dec
dec
int
pushf
mov
push
sub
dec
sub
jae
outsl
dec
testb
pop
call
leave
xchg
jno
push
sbb
out
sbb
jg
add
fidivrs
inc
jns
push
xchg
fwait
sbb
in
mov
pop
iret
xchg
mov
bound
sub
lds
adc
mov
mov
aas
das
push
dec
sub
inc
ja
lea
cli
dec
xchg
outsl
inc
sub
outsl
and
add
int3
push
test
adc
popa
add
sub
dec
iret
mov
mov
mov
mov
inc
cmc
outsl
fdivs
xchg
jnp
les
pushw
div
xor
xchg
out
xchg
xor
cmp
jno
fwait
outsl
xor
in
nop
inc
ljmp
pop
insl
xor
fidivrs
push
stos
sub
mov
and
inc
jae
mov
mov
test
xor
aam
jbe
aas
add
inc
shll
sbb
test
xchg
pop
test
and
jb
cmp
cltd
dec
adc
xor
adc
pop
ds
adc
iret
jge
inc
lcall
inc
jge
clc
pop
ljmp
jle
js
mov
cmc
xor
ret
or
xor
adc
sarl
mov
and
mov
or
mov
enter
sar
ret
jnp
cmp
push
mov
add
sub
mov
xor
imul
rcl
mov
add
scas
and
gs
mov
filds
xchg
inc
sub
mov
mov
movsl
or
or
mov
inc
jns
jb
cmp
in
stos
push
inc
in
pop
sub
fcoml
cmp
and
pop
and
leave
adc
mov
xchg
dec
jl
push
ja
ss
nop
stos
fs
icebp
or
cmp
psubsb
pop
stos
mov
lcall
into
adcb
inc
sbb
dec
jo
js
mov
popa
inc
or
jmp
jp
jns
cli
iret
iret
pop
jno
or
mov
insl
dec
cwtl
inc
fs
and
decb
out
test
xchg
or
idivl
mov
rcl
push
int
pop
inc
cs
jp
mov
adc
mov
inc
test
lods
aam
lea
out
repnz
inc
mov
jle
add
addr16
pop
ljmp
mov
ljmp
cmc
sarb
mov
jbe
mov
jno
in
rcrb
mov
lods
outsb
in
out
or
inc
and
mov
inc
lret
lret
dec
adcb
loope
push
mov
mov
push
pop
pop
roll
js
rol
xchg
shlb
test
mov
pop
aad
add
lea
pop
bound
repz
fdivrs
lods
cld
jle
sbb
dec
dec
cli
push
scas
call
or
mov
sbb
jl
mov
sub
sbb
aam
mov
sbb
xlat
sbb
sub
mov
push
fs
push
fisttpll
repz
pushf
and
sub
dec
push
sub
sub
filds
aas
cmp
pop
lahf
inc
lds
cli
xor
dec
pushf
int
push
push
xor
push
sbb
pop
data16
rol
sub
push
incl
imul
add
addb
scas
jecxz
sbb
or
jp
loopne
cld
or
cmp
xchg
addr16
ret
inc
mov
and
sti
test
or
shlb
mov
adcl
xlat
dec
les
sti
dec
in
repnz
jbe
cltd
mov
add
loop
xor
xchg
cmpsb
dec
cmpsl
mov
js
decl
mov
mov
pop
mov
jns
jmp
xor
in
push
lods
mov
push
mov
push
out
mov
test
call
hlt
and
xor
sbb
popf
bound
mov
jl
ret
fsubrl
mov
out
mov
push
gs
xor
xor
mov
or
and
cmpsb
add
fstpl
jo
fdivrs
adc
add
or
mov
mov
mov
scas
fs
pushf
sub
sbb
mov
cmp
fcompl
xor
ret
lock
sub
pop
xchg
mov
pop
insb
lahf
jl
dec
loopne
push
psubq
aam
out
lcall
xlat
mov
les
jno
jno
xor
movl
ds
or
xchg
in
lock
jo
fisttpll
mov
inc
mov
adc
inc
add
aam
popa
es
fsubrl
mov
mov
sub
and
pusha
jmp
or
lret
lahf
mov
ljmp
adc
loop
inc
pusha
fwait
in
push
lret
out
mov
mov
lret
mov
lret
out
xor
fbld
mov
add
sub
dec
sbb
lea
jno
add
jl
loopne
insb
pavgb
adcb
mov
popf
pop
add
test
jge
push
and
jl
push
call
mov
out
sbb
aam
sarl
ds
push
sbb
mov
cmp
pop
ror
adc
icebp
xchg
xor
sahf
xchg
in
sbb
fistps
shl
imul
adc
or
inc
jb
mov
pop
mov
js
sbb
aad
loop
addr16
and
adc
addr16
scas
sahf
xchg
dec
inc
cli
cli
mov
and
push
push
xlat
mov
cs
jnp
cmp
adc
and
mov
mov
test
cmp
in
pop
fcmovne
movsl
mov
mov
mov
adc
sbb
or
pop
ret
inc
fs
push
dec
mov
adc
and
or
rolb
popa
int
dec
sbb
mov
outsl
outsl
adc
inc
cmp
divl
nop
cld
xor
loop
mov
fadd
inc
or
out
push
movsl
roll
rcrb
sti
xchg
test
jmp
or
push
pushf
mov
mov
sub
fcompp
lods
cmp
xchg
imul
je
xchg
inc
and
loope
mov
mov
nop
aas
pop
adc
mov
nop
add
and
cmpsb
xchg
lret
int3
mov
mov
fisubs
push
call
lret
and
lods
mov
lcall
ret
fnstsw
stc
jp
es
dec
push
loop
add
sbb
jmp
loopne
and
outsl
dec
add
leave
push
outsl
loopne
cmpsb
in
jne
loopne
lea
dec
mov
lret
xchg
sub
addr16
enter
pop
mov
stos
je
inc
lock
and
jnp
mov
xchg
cs
ffreep
test
insl
aaa
rolb
inc
xchg
cmp
pop
pop
aaa
adc
adc
ja
lods
std
ret
pop
jnp
shrl
cmp
xchg
mov
pop
lock
and
popa
fwait
mov
gs
outsl
addb
and
fdivl
xor
sbb
data16
inc
xchg
fists
outsl
rcrb
cmp
aaa
xlat
or
subl
hlt
pop
inc
inc
arpl
jge
cmpsl
push
scas
lea
sahf
scas
sahf
lock
in
or
outsl
dec
pop
aaa
sbb
adc
hlt
inc
enter
add
xor
lret
push
imul
mov
popa
push
cmpsb
mov
repz
f2xm1
fstpl
sub
push
push
out
popa
sub
mov
mov
andl
sub
adc
out
sub
add
xchg
mov
xchg
sbb
pop
aaa
jns
adc
jge
and
jmp
roll
int3
insl
and
aas
add
mov
push
jmp
add
lret
jmp
imul
call
in
sub
sbb
mov
add
int3
push
inc
in
outsl
or
enter
inc
cmc
sub
aaa
fnstenv
fstps
xchg
movsl
xlat
sbb
cmp
movsl
mov
adc
fstpt
cmp
mov
inc
push
pop
cltd
shlb
cs
dec
pop
hlt
jecxz
loop
addr16
xor
mov
mov
sahf
and
adc
aam
jns
call
cmpl
jl
jns
stos
call
xchg
cmp
cmpl
aaa
rol
mov
xor
mov
jb
fisubl
leave
xlat
outsb
imull
push
push
jmp
les
fs
rorl
cmc
lods
je
push
aad
stc
add
add
xchg
dec
cld
orb
xor
push
jecxz
je
cmp
push
fistpll
xor
out
frstor
loop
sub
dec
mov
ffree
and
and
push
sbb
fdivr
jp
bound
mov
xor
add
pop
icebp
sbb
sbb
ret
sbb
dec
mov
xchg
test
adc
out
out
inc
jp
popa
xor
es
cld
sbb
or
adc
pop
dec
mov
xor
outsb
push
mov
jecxz
mov
and
repnz
test
pushf
shlb
lret
out
pop
movsl
mov
sub
mov
mov
movsb
push
fs
sarl
movsl
cmp
inc
pusha
and
lret
pop
adc
es
js
mov
inc
add
mov
ret
mov
inc
testb
sub
stos
and
aas
stos
xor
pop
lds
sbb
ja
and
cmp
sbb
int
add
and
mov
fstps
fwait
inc
aad
pop
jp
inc
mov
test
xchg
dec
out
fiaddl
sbb
or
or
shrb
sub
pop
popa
cmp
fidivrl
cwtl
push
add
mov
in
pop
cmp
adc
mov
xor
and
dec
insl
ds
insl
sub
stc
in
jb
in
jnp
mov
jle
ret
in
ret
cmpsl
jnp
and
cmp
sub
data16
out
in
mov
mov
in
sub
scas
jb
ds
mov
gs
jno
sub
adc
adc
cmp
nop
pop
push
stos
cmp
pop
in
fldcw
pop
jmp
lds
iret
mov
jno
ss
cwtl
and
mov
imul
mov
xor
nop
mov
in
cmp
popa
push
jo
jnp
scas
pop
add
and
cmp
cmp
inc
push
xor
jb
jno
jmp
pop
fs
outsl
inc
stc
add
inc
aad
sub
pop
lea
cmp
lret
push
fstpl
push
ret
leave
ds
les
mov
ljmp
jae
inc
add
jl
xchg
adc
in
jg
pop
shrb
leave
fidivrl
inc
pop
jmp
cmp
mov
push
sarb
xlat
psubsw
cmp
in
push
dec
insl
outsb
loope
mov
xchg
iret
out
pop
xor
ret
add
mov
fptan
pop
shlb
cmpsl
ss
dec
and
aaa
adc
inc
cmp
sbb
xchg
cvtps2pi
push
pop
pop
pusha
sub
push
inc
and
je
xchg
fucomip
and
lea
std
xchg
push
jmp
mov
cmp
mov
insl
aad
xchg
and
lods
imul
xchg
cwtl
mov
adc
int
je
mov
fwait
adc
or
push
aam
jge
mov
pop
popf
push
adc
out
mov
repz
into
or
mov
dec
jl
fwait
repnz
xchg
mov
add
or
stos
fdivr
push
cmpsl
mov
sbb
sub
shlb
out
mov
stc
aaa
jbe
pop
scas
xchg
jle
cld
repnz
mov
or
movsl
icebp
jle
sub
movsb
icebp
jnp
mov
mov
cmc
sbb
xchg
dec
loope
jae
and
xor
dec
cmp
mov
dec
scas
shl
push
lods
decl
test
cs
out
out
cli
push
repz
fistpll
repz
shr
lock
push
ret
push
fimull
jl
pop
lahf
push
inc
hlt
add
fstpl
imul
xor
lahf
dec
cmc
xor
cmp
leave
insl
or
clc
add
mov
push
les
ss
daa
xor
js
mov
xor
pop
fnstsw
in
and
in
or
sub
stos
and
push
or
popa
insl
sbb
inc
push
jle
stos
repz
and
out
addr16
mov
add
inc
nop
adc
stos
inc
fldt
cld
cwtl
in
jns
ja
inc
fisubrs
xor
sbb
cwtl
inc
or
inc
lahf
sbb
xor
div
sub
adc
mov
xchg
cmp
stc
mov
aaa
lds
mov
mov
call
lods
inc
jg
pop
outsl
je
cltd
dec
outsb
jecxz
lock
sti
jecxz
jg
push
fiaddl
push
sbb
xchg
and
push
sbb
lret
inc
inc
test
inc
imul
call
ret
jbe
xor
test
movsb
cmc
sbb
push
imul
dec
lods
out
mov
outsl
mov
jo
dec
out
test
call
xlat
or
imul
das
cmpsb
adc
add
mov
xchg
outsl
jle
loop
push
lcall
xor
jle
cmc
inc
dec
mov
popa
repz
jbe
scas
push
mov
jno
dec
sub
inc
outsb
in
mov
mov
rcrb
fmull
pop
or
loope
mov
outsb
lock
mov
add
mov
adcb
out
push
push
xchg
pop
movb
and
int3
in
pop
mov
ja
loope
mov
cmp
dec
insl
test
jns
repz
cmc
gs
repnz
cmc
add
inc
adc
test
cmp
test
cs
push
sahf
mov
dec
test
mov
push
pop
or
push
dec
test
ss
add
in
mov
mov
sbb
push
inc
jl
push
adc
jbe
cwtl
mov
or
inc
sbb
cmp
dec
in
imul
mov
insl
int
pusha
movsb
pop
shr
sti
push
cmpsb
cs
neg
inc
movsl
jp
fildl
sub
xor
dec
in
int
xchg
insb
jb
std
sbb
jle
sub
mov
cltd
xor
mov
and
or
mul
out
pushf
cmp
mov
leave
push
mov
pop
push
rol
xchg
out
mov
push
das
icebp
push
in
jnp
bound
inc
cli
push
sbb
mov
dec
push
outsb
scas
push
xor
loopne
je
dec
pop
push
je
sbb
jp
popfw
insb
push
mov
das
xchg
lret
clc
gs
jnp
or
or
aad
xchg
xor
insb
mov
lahf
rcrl
xor
pop
fwait
inc
or
outsl
sbb
dec
or
shlb
mov
push
std
insl
cs
repnz
xchg
cmp
out
imul
lcall
pop
inc
mov
xchg
int
add
xor
cmp
push
jb
repnz
addb
test
dec
es
add
movsl
imul
icebp
inc
lds
into
in
cmp
add
movsl
push
pushf
incb
inc
and
pop
subb
xchg
aaa
mov
clc
cmc
mov
das
pop
ret
loopne
adc
mov
mov
lret
out
aad
sbb
mov
mov
scas
jg
in
push
cmp
js
sub
mov
xchg
add
leave
mov
rcrb
jp
rcrb
rcrl
mov
add
and
and
dec
jmp
lcall
mov
outsl
subl
fdivs
out
rcl
sub
cmp
cmp
mov
cmp
xor
inc
jecxz
adc
add
sbb
mov
imull
mov
cmpsl
inc
imul
add
add
outsb
cmc
jb
clc
ret
popa
xchg
and
outsb
fwait
and
push
mov
jno
lods
xchg
xor
jbe
push
push
jns
pop
in
stc
call
sbb
test
adc
add
outsb
bound
cmpl
jl
jae
and
mov
lock
and
adc
jns
les
je
push
mov
pop
and
xchg
xchg
adc
test
adc
fdivs
pop
and
xlat
sbb
add
cli
or
jecxz
js
test
push
lret
jmp
add
mov
repz
mov
bound
leave
test
rcl
iret
mov
sub
adc
pop
inc
pusha
cmc
ja
arpl
xchg
cmpsl
andb
lret
fdivs
sub
in
push
mov
cmp
andl
imul
out
pop
shlb
adc
cltd
or
pcmpgtw
xchg
inc
lods
xchg
movsl
filds
popf
sbb
stos
test
leave
movl
gs
data16
jle
or
mov
cmp
xchg
std
sbb
jo
and
adc
push
jl
aas
aas
inc
ret
mov
lret
xchg
inc
push
daa
sti
add
repnz
pop
or
loopne
pop
pop
pop
out
jg
ss
popa
ret
js
sbb
xor
rorb
sub
adc
icebp
cmc
mov
pop
andb
rorb
xchg
cmp
movsb
cld
xchg
cvtdq2ps
addr16
sub
test
inc
iret
dec
aad
mov
add
gs
not
scas
nop
pop
sub
in
mov
mov
xor
out
xchg
dec
jmp
push
push
push
add
and
andb
jge
sub
push
lcall
repnz
lock
push
cmpsl
leave
jmp
push
mov
sbb
xchg
jg
push
mov
mov
js
and
pop
data16
dec
sbb
shll
push
jb
sbb
sar
and
div
inc
mov
jb
adc
jo
mov
inc
shll
lock
add
je
sbb
adc
sarb
icebp
rcrb
dec
sbb
pop
or
pushf
cmc
jo
inc
pop
outsl
ret
xor
or
xorb
push
jl
or
adc
leave
or
xchg
cld
sbb
popf
mov
pop
imul
ss
adc
push
push
mov
subl
add
push
loop
scas
inc
mov
enter
mov
pop
insb
pop
in
test
lret
fdivr
loopne
ss
out
or
inc
inc
in
addl
ja
ret
mov
ljmp
xchg
incb
add
mov
orb
push
mov
rolb
lods
pushf
cmp
mov
inc
pop
xor
mov
mov
std
push
jo
in
mov
js
cmc
roll
stos
sub
popf
std
out
xor
mov
sti
dec
sub
mov
or
adc
sub
sbb
cltd
push
pop
inc
and
adc
pop
out
jl
pop
mov
or
pop
adc
cmp
data16
cs
inc
cmp
nop
adc
addb
adc
mov
int
ret
adc
es
adc
fiadds
jle
mov
icebp
dec
dec
fidivrl
sahf
jle
movsb
out
rcll
and
pushf
je
adc
movsb
out
ds
loope
dec
div
lret
repnz
xor
add
aad
push
out
loopne
lea
rolb
jne
adc
add
mov
inc
or
imull
popa
xchg
aaa
aas
pop
mov
and
stos
jnp
sub
mov
pop
adc
nop
jge
sbb
in
xor
rcrl
cltd
inc
aaa
xor
add
andl
pop
push
push
scas
push
arpl
addr16
lods
nop
push
bound
shrl
iret
add
or
xchg
fadds
fisubrs
into
or
cmp
adcl
push
mov
cltd
mov
mov
sub
mov
arpl
cmp
inc
daa
mov
xchg
mov
inc
imul
enter
icebp
popf
cltd
xor
pusha
rolb
dec
xor
loop
sub
jns
jnp
fstl
js
popl
insl
xor
jge
inc
rorl
mov
push
movsl
mov
adc
jb
add
cltd
lock
mov
xor
sub
test
mov
ficoms
icebp
aaa
adc
shll
mov
insb
das
pop
xor
jge
xor
inc
lahf
fs
lcall
rcrl
test
outsb
jno
scas
fstl
dec
mov
fldt
cmc
dec
aaa
imulb
adc
mov
cmp
repnz
lret
adc
jno
insb
jno
and
iret
push
mov
lods
cltd
clc
test
mov
mov
add
hlt
test
or
push
fisubrl
je
sbb
int3
adc
loope
fistps
dec
xchg
mov
popa
out
lea
pop
and
jl
and
cwtl
pop
in
push
imul
imul
stos
ficoms
xchg
xchg
mov
jg
mov
mov
and
into
inc
jno
es
movsl
aas
push
add
rcrl
addl
test
out
iret
xor
mov
sub
sub
fs
lcall
test
xor
cs
je
orl
in
inc
pushf
pop
sbb
mov
sbb
sub
out
cmc
out
clc
test
mov
push
push
cmpsb
sbb
test
popf
xchg
dec
pop
lock
push
cmp
outsb
lcall
inc
sbb
dec
jo
xlat
pop
inc
in
push
out
les
push
jno
sub
jnp
pop
cmp
in
jne
jbe
mov
dec
jnp
sbb
out
das
xchg
cld
dec
push
push
pusha
data16
shr
pop
mov
gs
outsl
jae
mov
stc
cmpsl
je
outsl
aaa
adcb
adc
pop
frstpm(287
jle
movsl
cwtl
adc
fsubrs
negl
xchg
inc
lret
jae
pushf
fildll
scas
dec
aaa
mov
cmp
mov
push
adc
pop
cwtl
leave
and
adc
mov
push
into
pop
xor
insb
sbb
xor
loopne
cbtw
ficoml
add
lods
sbb
and
in
jge
mov
cmp
repz
jb
orl
shll
xor
mov
add
sbb
and
sbb
hlt
add
jl
mov
fwait
push
insl
les
int
xor
test
mov
xchg
punpckhwd
in
pop
aad
iret
outsb
cwtl
and
arpl
cmc
sbb
clc
mov
push
dec
dec
sub
ja
cwtl
movsb
ds
int
cltd
push
ficoms
insb
mov
push
test
repnz
xchg
ret
int
mov
call
out
lfs
pop
cli
jecxz
idiv
lret
mov
inc
mov
repz
rorb
negb
inc
cmp
hlt
sub
nop
iret
jle
mov
and
cmp
mov
jns
mov
ljmp
loope
aad
daa
pop
int3
mov
and
test
test
mov
lods
push
cmp
pop
rorl
lods
ret
aas
cmp
mov
push
fsubr
iret
mov
xchg
aaa
test
inc
xchg
xchg
movsl
rol
popf
mov
sbb
mov
and
mov
adc
sbb
inc
cld
add
push
cmp
push
gs
jle
mov
jp
data16
jp
cmp
pop
xchg
sbb
and
xor
sbb
add
xchg
mov
mov
int
jp
push
imul
mov
movb
xchg
loop
cmpsb
ret
mov
int
test
sbb
out
insb
jbe
push
mov
repnz
ror
add
dec
imul
jp
dec
jg
mov
or
jmp
xor
dec
mov
mov
xor
insl
push
clc
dec
rorl
fs
jbe
jnp
inc
inc
addr16
push
movsbl
jle
cs
setno
dec
cmp
or
cmc
xor
jnp
pusha
loopne
data16
jne
mov
mov
mov
lock
repnz
clc
ret
ss
mov
xchg
ret
cmp
adc
jb
pop
es
sub
mov
dec
sub
pop
aaa
pop
inc
dec
jbe
and
ljmp
imul
orb
insl
call
cwtl
inc
mov
sbb
dec
dec
mov
push
cmp
or
pop
cli
pop
loope
pop
cmp
scas
sarb
in
ret
cmpsb
add
and
push
ja
flds
cli
loopne
or
cmp
xchg
jae
sahf
loop
mov
add
sbb
jge
adcb
lods
test
fwait
aas
inc
cmp
or
jbe
mov
jne
or
push
pop
adc
jge
std
loope
bound
xor
in
or
clc
insb
mov
jae
lret
mov
jo
imul
jns
call
lock
fidivrl
or
xor
mov
cmp
push
xlat
icebp
mov
fisubrl
sti
jno
dec
xchg
loopne
pusha
in
lcall
repz
add
push
mov
sub
or
jbe
inc
xchg
and
insl
cli
cltd
add
inc
je
adc
aas
xor
test
xor
push
xor
stos
das
lods
mov
add
add
mov
or
sub
mov
insb
cmp
cmp
rorl
sub
cmpl
ret
sub
cmc
repnz
or
adcl
popa
pop
rorl
or
movsb
fimuls
jl
rcrl
add
add
adc
xlat
icebp
mov
mov
cmc
sub
mov
stc
in
cmp
xor
mov
aaa
jno
mulb
adc
mov
lds
daa
push
sub
into
mov
push
andb
les
stos
or
mov
popf
fstl
nop
push
xchg
scas
xor
jle
adc
sbb
mov
inc
adc
fsub
in
jl
dec
cmp
push
out
pusha
popa
ss
dec
fs
mov
stos
cmp
sbb
xchg
cs
mov
mov
dec
add
divb
xchg
and
loope
xor
xchg
in
mov
xorb
out
sub
popf
movsb
inc
inc
fbstp
mov
fstps
inc
nop
int3
dec
pop
jbe
xchg
xorb
jae
mov
inc
mov
mul
data16
in
cmp
mov
push
aas
pop
ret
iret
sbb
mov
out
jge
mov
icebp
mov
lea
adc
fisubrl
inc
shll
jmp
fldt
xor
jne
jnp
xor
cmc
push
inc
arpl
xchg
mov
addb
dec
jl
add
xchg
data16
pop
jb
adc
add
aad
addl
loope
sahf
js
addr16
test
test
and
mov
pop
and
dec
sbb
fsubrl
xor
test
popf
dec
ljmp
js
ja
cmp
mov
xlat
inc
das
xor
mov
movb
in
out
insl
xlat
test
andl
call
push
popf
mov
sbb
insl
ss
push
lea
sar
mov
xchg
fistpll
je
sub
cs
stc
sti
jmp
sar
lret
sahf
mov
cmpsl
cmp
push
push
rorb
jp
cmovbe
inc
gs
fcmovb
inc
negb
in
icebp
or
jb
lahf
jb
push
push
pusha
lcall
bound
pop
and
sbb
cmp
sub
mov
sbb
imul
cmp
scas
jle
xchg
dec
das
inc
insb
cmpsb
dec
daa
insl
xor
insl
cs
mov
or
sti
insb
cmp
imul
cmp
xchg
mov
mov
mov
fs
dec
sub
adc
fisubrl
sbb
adc
and
push
or
dec
hlt
add
in
or
adc
fsubrs
mov
adc
xor
xor
sub
xor
pop
ret
jp
test
push
push
xlat
mov
js
push
xchg
in
out
imul
and
cmpl
ror
repz
jecxz
sets
sbb
rorb
sbb
pop
daa
ss
sbb
movsl
int
and
add
insl
aaa
mov
das
jae
jg
or
out
sub
pop
inc
lock
sub
fwait
rcll
adc
repz
and
clc
fidivl
adc
cmp
loopne
pop
out
cmp
in
lret
inc
mov
cmp
arpl
nop
out
sub
fdivl
movb
jb
fsubl
fsubrl
in
jne
scas
mov
out
idiv
pop
lret
je
adc
inc
push
jns
pop
cmp
push
jne
enter
movsb
out
in
pop
stc
xchg
pop
push
rcr
stos
pop
mov
dec
cmp
int3
mov
sub
in
pop
mov
xor
dec
aam
mov
inc
xchg
cltd
mov
fs
mov
mov
xchg
aaa
stos
cwtl
and
inc
add
add
ret
loop
int3
sbb
xlat
mov
int3
outsl
fisttpl
xchg
aad
out
sahf
int3
jl
dec
xor
aaa
mov
add
pop
adc
loopne
popf
mov
sub
ja
flds
and
test
lcall
std
xor
cmp
dec
movsl
mov
mov
std
jg
popa
mov
push
data16
fisttpll
bound
gs
inc
push
mov
dec
add
add
popf
out
lods
or
add
push
cmp
or
fcmove
and
or
gs
lret
loope
out
inc
loope
and
ret
sub
push
add
mov
sub
lahf
and
push
imul
lock
inc
mov
pop
popa
and
loope
sbb
stos
stos
cwtl
das
xchg
mov
cmc
out
scas
xchg
xchg
mul
mov
loopne
lret
sysenter
cmpsl
mov
push
aaa
jmp
ret
in
test
xor
jno
adcb
xchg
pop
cmp
loopne
xchg
sbb
loopne
mov
ds
mov
int3
test
pop
inc
push
cmpl
and
ljmp
and
lret
cmp
sti
mov
sbb
jae
call
dec
inc
dec
jg
jnp
fisubrl
das
xor
cmc
cmp
sbb
inc
pop
push
sbb
and
cld
icebp
hlt
test
into
insb
bound
cli
push
mov
inc
es
rcll
stos
popa
cmp
mov
daa
jecxz
cltd
into
aaa
pop
lock
jg
test
incb
insl
adc
icebp
push
insl
mov
push
lcall
cmp
popf
push
loop
push
dec
out
sub
mov
jmp
push
lea
xlat
iret
sub
mov
sbb
sbb
movl
jp
popf
out
sbb
in
les
lea
mov
cs
cmp
jno
add
push
aaa
and
int
repnz
imull
pushl
jns
push
pop
movsb
sbb
add
aam
xchg
out
repz
arpl
sbb
dec
dec
rcr
cmp
pop
xchg
inc
push
inc
mov
add
push
in
lods
cmc
jo
cmc
push
dec
imul
ljmp
jo
lock
aas
mov
xor
sub
cmp
sahf
inc
pop
in
jmp
xchg
filds
int3
jb
jg
xorl
push
iret
cld
mov
mov
mov
dec
std
ficoml
jl
adc
sub
xlat
test
das
or
mov
rcrl
shll
or
rorl
das
js
rcrb
out
cmp
cld
cmp
mov
xor
adc
pushl
adc
clc
and
insb
std
aaa
mov
pop
mov
push
sbb
je
shl
xor
pop
aad
pop
jb
dec
into
inc
frstor
imul
mov
jecxz
jp
jecxz
fwait
xor
adcl
push
divb
ljmp
cmp
test
into
push
sub
aas
stos
je
lds
sub
es
adc
inc
jge
jnp
fcmovne
dec
roll
jbe
rcrb
inc
in
adc
fwait
or
xor
popa
fldcw
aaa
push
out
and
cltd
test
rclb
lcall
test
movsl
aaa
fsubrs
sub
adcl
or
dec
sub
jl
jae
sahf
stos
adcl
inc
pop
mov
xlat
lret
mov
cmpsb
or
cmp
dec
or
cmpsb
jmp
pop
and
inc
sub
sbb
sti
incb
push
cmp
add
int3
ret
dec
push
mov
mov
mov
aas
fistpll
jmp
call
popa
inc
bound
xchg
rcrb
pop
and
xor
mov
xchg
add
lock
cmp
jge
jge
addr16
xor
xor
inc
pushl
cs
clc
cmp
in
adc
decb
and
mov
out
xchg
or
mov
sbb
dec
or
dec
dec
imulb
mull
clc
or
add
sub
das
mov
ds
test
lret
lock
scas
lret
fcompl
sub
mov
xor
dec
in
rcrl
xor
pop
mov
inc
stos
dec
sub
adc
mov
loop
cli
dec
and
push
sar
pop
mov
mov
shll
mov
pusha
mov
lds
cld
jo
pop
and
xor
repz
mov
xchg
inc
fidivl
out
outsb
and
sub
test
mov
and
sbb
loopne
imul
rclb
js
outsl
push
xlat
cltd
je
lahf
xchg
xchg
inc
jo
cld
adc
repnz
ss
ret
sub
test
lock
out
jg
adc
ud0
fstps
pop
cmp
push
ds
aas
adc
ret
into
mov
pop
mov
pop
lahf
or
pop
or
cmpsl
pop
pushf
xchg
mov
test
pop
mov
adc
adc
inc
sub
mov
cmp
nop
imul
dec
or
int
xchg
or
and
sbb
dec
cltd
idivb
push
and
sti
ljmp
xchg
imul
jnp
daa
pop
std
dec
adc
icebp
pop
jo
push
addb
sti
test
sbb
ds
jmp
hlt
or
fcom
xchg
ljmp
sub
fcomps
adc
xchg
mov
outsl
sti
pop
jmp
push
aam
outsb
addr16
mov
push
xchg
xchg
out
jo
aad
sbb
jmp
in
and
rolb
cltd
imul
aaa
call
lret
mov
xor
jnp
jp
repnz
pop
es
test
mov
js
lahf
lret
out
pop
in
sub
push
cltd
rclb
stc
cmpsl
inc
lods
xchg
les
sahf
add
jmp
cmc
sti
imul
cld
pushf
aaa
mov
lret
es
pop
out
mov
stc
jg
sarb
sbb
jae
inc
es
decl
movsb
pop
addl
mov
pushf
mov
push
cmpsl
lret
icebp
cmp
add
out
jecxz
add
and
mov
les
inc
in
mov
psubw
andps
pushf
sbb
les
mov
lods
cli
jb
or
shll
adc
test
inc
nop
inc
les
xchg
ja
clc
mov
push
in
or
into
or
scas
scas
mov
pusha
and
xor
imul
push
xchg
adc
inc
popf
imul
lds
cmp
pop
sbb
insl
sbbl
int
flds
lret
lret
inc
and
test
clc
mov
mov
and
flds
scas
pop
in
push
sbb
cmpsb
cmp
cmpsl
sbb
stc
mov
test
or
mov
or
xor
cmpsb
jne
cmovle
sbb
mov
jb
nop
lock
pop
fs
test
mov
stos
imul
test
gs
mov
and
sahf
push
adc
es
fs
fists
sub
sahf
push
push
adc
fldl
jp
inc
dec
fstpl
mov
int3
loopne
push
jle
xor
popf
pop
mov
out
jbe
mov
jl
sub
jg
sub
sbb
movsl
bound
std
stos
add
std
scas
xlat
arpl
fdivl
sarl
movsb
dec
cld
outsl
sbb
icebp
sbb
dec
fs
das
cmp
das
fcomps
gs
jg
stos
orb
int3
xchg
add
stos
leave
lods
data16
lock
adc
mov
inc
push
mov
jno
add
push
pop
out
test
imul
std
in
fstp
dec
in
inc
lea
shl
jg
outsb
mov
cltd
mov
testl
dec
mov
lods
out
or
iret
bound
sbb
xorb
cmpsb
and
add
push
mov
xchg
sub
push
in
xchg
xchg
ret
loope
out
sti
dec
shll
jnp
xchg
bound
in
out
movsb
adc
or
sub
pop
fcmovu
jmp
jp
inc
loopne
lds
call
jb
jo
clc
mov
dec
push
test
cmp
popf
jmp
jns
arpl
inc
xor
aas
filds
ss
mov
into
or
pop
jge
jne
push
leave
std
stos
bound
lods
adc
out
inc
imul
fstp
jb
jmp
push
cmp
sarl
xchg
mov
jo
sarb
mov
pusha
sub
call
dec
sbb
ffreep
pop
mov
or
pop
pop
std
dec
jnp
push
es
pop
adc
add
dec
stos
cmpsb
lahf
cmpsl
mov
xor
lret
jmp
cmpsb
xchg
jecxz
mov
sahf
subl
xchg
stos
sti
fnstenv
scas
adc
lock
addr16
inc
push
cwtl
mov
and
cs
sub
add
inc
test
inc
inc
enter
xor
mov
xchg
jae
mov
adc
cvtps2pi
insl
push
pushf
push
push
stos
cmp
outsb
ja
add
aam
mov
mov
in
and
cltd
jp
jo
fdivl
ficoml
xor
adc
stos
mov
or
inc
ficoms
aaa
pop
adc
sbb
test
xchg
cltd
scas
outsl
xchg
add
pop
or
xor
sahf
and
mov
xor
repnz
mov
sub
xchg
subl
jne
imul
js
js
fdivrl
aad
add
cmpl
orb
and
add
cmpsl
push
mov
xchg
xchg
jne
dec
mov
push
pop
xchg
inc
add
or
mov
stos
insl
call
push
jge
xor
adc
lea
roll
mov
testb
in
arpl
and
test
and
or
jno
pop
xor
test
pop
and
pop
in
fdiv
cmp
lret
inc
rcl
aaa
ret
pop
push
stc
dec
push
imul
loop
test
mov
inc
xor
push
ficomps
lea
fwait
pop
leave
aaa
jb
sub
xor
cmp
mov
lock
popf
ja
and
imul
mov
jp
rcll
sub
sti
pusha
fcoml
inc
je
imul
sti
shlb
lods
stos
mov
lret
dec
adc
and
fisubrs
xor
lods
into
loope
adc
pop
jne
pusha
cmpb
lahf
sbb
fwait
movsb
inc
push
lods
mov
inc
sub
push
sbb
and
mov
aad
imul
mov
sahf
arpl
out
int
les
imul
dec
and
out
pop
and
mov
sub
lock
dec
lret
outsl
addr16
scas
nop
shrl
mov
mov
jbe
push
mov
xlat
rol
sbb
popa
push
pushl
inc
lea
iret
jns
cmp
cmp
movsl
dec
jl
ja
and
dec
cmp
push
push
dec
fidivrs
inc
nop
mov
add
and
mov
call
adc
insl
testw
jno
fsubp
imul
repnz
jnp
sub
sbb
mov
mov
xor
arpl
add
pushf
mov
sub
sbb
mov
lret
int
icebp
mov
mov
cmp
sub
push
int
ss
leave
loop
repz
loope
mov
pop
call
iret
cmpsb
inc
sbb
cwtl
cltd
inc
xorb
jle
mov
addr16
xchg
ret
popf
jno
jp
adc
jo
roll
in
mov
scas
outsb
fidivl
xchg
jg
mov
cmp
loop
and
cld
mov
or
or
cmp
fwait
es
scas
push
and
sub
nop
pop
sbb
push
into
sbb
push
dec
shrl
push
jmp
push
pushf
mov
call
mov
adc
jmp
dec
bnd
jmp
pusha
aaa
icebp
out
sub
dec
add
xchg
dec
dec
movsb
push
int3
cmp
addr16
sub
test
mov
jae
les
jns
decb
xchg
mov
loope
push
jne
push
lcall
add
fdivr
xor
push
aad
sub
inc
js
inc
push
and
loop
xorb
pop
adc
mov
jo
aaa
popa
inc
adc
mov
out
js
add
std
cmpsb
mov
lea
cmp
dec
xchg
mov
lcall
fs
gs
movsb
mov
test
mov
inc
inc
pop
pop
push
cmp
dec
fidivrl
mov
rcr
sti
jnp
hlt
cmpsb
pop
iret
jno
cld
lcall
mov
outsl
test
or
cs
daa
pop
ret
int3
sbb
push
sbb
lods
pop
cmp
out
or
xor
stos
ss
mov
pop
scas
in
jecxz
and
shr
xor
or
push
add
mov
sub
enter
lods
cmpl
xchg
or
xchg
mov
adc
mov
xchg
and
xchg
es
xor
jno
mov
add
into
test
faddl
movsb
and
sub
ret
or
mov
ret
lods
popa
push
ss
and
mov
arpl
push
pop
push
cmp
xor
mov
call
out
insl
pop
scas
mov
fs
insb
xchg
mov
cmp
jle
loopne
mov
je
xchg
push
dec
xorb
dec
jp
inc
xor
push
lock
sbb
adc
pop
pushf
mov
adc
aam
rolb
das
and
sub
inc
fisubl
outsb
sbb
push
and
mov
sahf
jnp
inc
jb
pop
inc
xchg
daa
in
test
jne
and
inc
inc
test
adc
addb
jb
cld
scas
fnstsw
popf
inc
out
xchg
and
cmp
cmp
mov
inc
mov
pcmpeqd
lcall
mov
jg
sub
mov
inc
loope
inc
imul
ss
mul
push
aaa
xchg
add
pop
and
sti
dec
dec
int
or
and
lds
fadds
sbb
mov
jle
test
lcall
jecxz
and
jns
loope
sbb
cmp
sbb
or
outsb
xchg
popf
sbb
push
dec
fcom
mov
jo
sbb
lock
sub
shl
sbb
cmp
bound
jbe
stos
in
pusha
cmp
add
dec
mov
js
es
sub
xchg
cmp
into
pop
mov
or
mov
enter
pushf
mov
outsb
scas
xlat
cld
add
stos
aaa
push
arpl
loope
fisttpll
xorb
cmpsb
enter
push
imul
out
jbe
pop
in
out
pop
jmp
add
mov
sub
add
pop
add
pop
std
mov
jle
push
xchg
jg
decl
sub
sarl
add
imul
les
mov
mov
cmpsl
pop
imul
jno
fwait
insl
cmp
mov
and
mov
cmpl
mov
and
ret
mov
loopne
and
mov
add
sbb
jb
mov
inc
arpl
cmp
inc
lea
hlt
sbb
inc
sbb
or
adc
fstpt
xor
dec
clc
add
mov
fwait
add
mov
inc
in
mov
adc
ss
leave
clc
fistpll
imul
test
mov
iret
and
mov
sbb
and
add
mov
mov
cmp
das
in
sbb
leave
sbb
mov
lret
lock
sbb
and
mov
insb
aas
sbb
mov
std
dec
cs
jmp
pop
cmp
jae
xchg
lret
fcomps
ss
fs
ret
push
sarb
xchg
inc
aam
jecxz
and
xlat
adc
sub
mov
cmpsl
mov
add
mov
data16
mov
mov
push
sub
outsl
lahf
or
add
inc
sbb
cwtl
mov
dec
popf
xor
adc
outsb
lea
xor
das
out
leave
lods
or
pop
xor
daa
sub
mov
mov
mov
dec
sbb
mov
mov
push
addr16
cmovno
jae
cmp
push
clc
sbb
notl
push
mov
lea
mov
sub
pop
out
xchg
push
mov
dec
sub
lret
jl
mov
xchg
sbb
sub
add
stc
lock
jae
dec
frstor
ret
call
hlt
or
mov
jo
and
rolb
push
cs
fsubs
gs
mov
ret
pop
daa
out
sub
popa
mov
xor
lcall
or
mov
jecxz
sub
xor
sub
jle
mov
mov
insb
sub
push
mov
stc
xchg
mov
or
call
lea
fsubrl
fisubrs
xchg
stos
inc
iret
shl
xchg
push
mov
dec
push
out
cmp
iret
or
and
xchg
mov
or
mov
xor
mov
push
test
dec
dec
add
lret
dec
outsb
shrb
mov
cmp
inc
pop
sub
fldenv
clc
pop
mov
jg
adc
and
fistl
mov
and
sub
cmpsl
add
imul
xchg
inc
mov
mov
repnz
fadd
fdivs
or
push
lret
fwait
lods
pop
mov
loop
jns
fstpt
inc
stos
xlat
sbb
adc
test
push
js
out
test
bound
leave
in
mov
cli
adc
push
push
dec
pop
insb
lock
cltd
sub
cmp
lods
in
mov
mov
cmp
push
popf
outsl
xchg
cmc
fldenv
call
add
push
sub
mov
mov
stos
xor
fdivrs
pop
rolb
hlt
call
mov
in
mov
pop
lcall
push
or
mov
fs
mov
mov
xchg
cs
repz
jmp
cmc
cmp
aas
hlt
mov
idivl
push
or
cmpsb
add
in
xor
fistl
andb
gs
jns
cwtl
mov
les
jg
xor
pusha
sub
mov
movsb
push
shll
sbb
sbb
xchg
xlat
cmpsb
inc
or
and
test
adc
bound
out
mov
cmp
fmuls
add
push
mov
icebp
jbe
mov
mov
mov
and
sbb
pop
xor
lret
popf
mov
enter
loope
icebp
in
add
fadd
push
xlat
shrl
push
stc
ljmp
inc
sbb
das
insl
inc
hlt
out
cs
sub
cs
mov
cmp
popf
xor
into
mov
dec
rcrl
sbb
fsubs
or
enter
jnp
sbb
leave
mov
dec
pop
fldl2t
js
mov
and
dec
mov
outsb
pop
pusha
testb
inc
push
in
andps
les
jecxz
cltd
cmp
inc
arpl
popf
aam
mov
sbb
sbb
push
std
cmc
testb
jp
jne
cld
mov
cli
ffree
mov
dec
dec
cli
push
or
scas
imul
faddp
and
lret
pop
stos
mov
rorl
into
mov
shll
and
jno
imul
ret
mov
sub
push
and
shll
mov
cmc
and
mov
cmp
fnstenv
stc
cmp
push
pop
xchg
xchg
adc
dec
iret
adcb
jp
pop
std
cmpsl
push
inc
roll
lock
adc
daa
notl
test
pop
scas
or
shll
sbb
xor
jle
mov
hlt
stc
adc
pop
insb
orl
ss
mov
pop
and
pop
sub
inc
dec
push
dec
movsb
in
lahf
jo
add
jmp
fcomps
out
jmp
jge
leave
fucomp
xchg
pop
jmp
sahf
lret
scas
test
inc
hlt
pop
lret
and
cmpsl
pop
notb
stos
xlat
dec
xor
and
aas
call
mov
popf
fcoml
filds
jl
rolb
adc
clc
lret
push
or
shlb
dec
inc
call
sub
pop
sub
inc
add
adc
punpckhwd
jmp
xchg
add
cmp
mov
daa
aas
push
out
push
mov
cmp
popf
imul
cmp
xchg
lock
cmp
roll
mov
push
aam
jns
xchg
sbb
sar
das
push
adc
ret
fwait
mov
push
in
fnsave
das
mov
scas
call
cmpsb
or
incb
jg
xorl
lods
cltd
cmpl
jne
sbb
lea
repnz
nop
xor
sbb
arpl
inc
stos
stos
in
cmp
test
sbb
rorl
or
fnstcw
sub
cs
popa
ljmp
and
daa
pop
repz
sbb
mov
inc
dec
jmp
enter
inc
outsl
mov
xor
inc
cwtl
push
jbe
pop
mull
cmpsb
pushf
xchg
insb
rol
rcrb
dec
sbb
test
jnp
jo
or
adc
orb
pop
xchg
xor
popa
inc
mov
loopne
inc
insb
xchg
cwtl
leave
xchg
cmp
insl
loope
es
in
out
shrl
mov
pop
movsb
or
push
jae
aad
xor
cmp
sbb
out
imul
out
jmp
and
push
cmp
shlb
mov
jb
lods
rcrb
divb
ret
into
dec
jae
mov
push
fisubs
fwait
dec
outsl
cld
loop
shll
sbb
popa
inc
push
xchg
jae
roll
inc
mov
imull
cmp
push
ljmp
xchg
jecxz
sub
out
jne
push
sbb
js
rcrb
idivb
jnp
cmpsb
mov
pop
call
jge
out
icebp
push
iret
fists
inc
mov
or
into
ljmp
xor
sub
in
inc
repz
jno
jge
sti
orb
xchg
mov
xor
jmp
out
movsl
push
add
std
repnz
jb
mov
clc
jg
xchg
push
push
xchg
cmp
ficompl
mov
ss
pop
fcmovu
pop
sbb
aas
mov
arpl
mov
inc
shlb
jbe
mov
aaa
mov
cmp
into
jmp
mov
add
pop
push
cltd
icebp
cmpsl
sbb
mov
addps
add
dec
lcall
mov
or
test
add
add
and
fisubrs
add
inc
mov
sbb
negb
sar
cmp
adc
cli
icebp
sahf
cmp
jnp
fldl
mov
inc
jp
mov
or
lcall
xchg
cmc
jnp
cmp
ret
sub
mov
addr16
popa
leave
jae
dec
sub
pop
in
in
rcrl
push
push
pop
into
mov
sbb
lahf
adc
mov
out
cmpsl
out
jmp
data16
pop
mov
imul
test
jb
imul
out
loop
xor
orl
out
pop
test
jno
ljmp
xchg
adc
test
mov
in
repz
xchg
jg
ds
or
fcmovnb
sti
sub
inc
cmpsb
cmp
push
outsb
jo
push
push
aaa
icebp
repz
pushf
xor
mov
xchg
pushf
sbb
mov
add
pop
test
adc
adc
mov
nop
xchg
mov
inc
pop
cwtl
xor
jb
addps
cli
adc
and
xor
out
pop
ret
sahf
lret
fildll
mov
or
ljmp
pushf
shlb
jne
call
adc
push
adc
scas
jbe
xor
and
test
sbb
fsub
adc
pop
fucomp
imul
xchg
add
hlt
xor
daa
cmp
inc
xchg
inc
aad
hlt
mov
adc
shll
add
cmp
enter
inc
mov
or
inc
pop
inc
dec
test
es
xchg
mov
lcall
dec
add
cltd
mov
jns
int3
ja
outsb
stc
cmc
pusha
rclb
push
or
adc
mov
add
lock
mov
mov
dec
jne
bnd
add
cs
xchg
pushf
fs
ds
inc
add
jne
addr16
ret
call
sti
or
jbe
jb
shrl
shrl
sbbl
dec
mov
mov
mov
mov
insl
and
push
aaa
daa
push
lea
into
add
cld
callw
les
adc
test
popa
das
sbb
jbe
inc
je
jmp
adc
cwtl
dec
in
dec
xor
mov
hlt
hlt
and
fiaddl
cmp
mov
iret
or
cmp
insl
pop
push
in
das
mov
mov
pop
or
xor
inc
mov
gs
lea
jmp
add
imul
push
cmp
js
in
add
dec
repz
cltd
mov
cld
mov
jmp
das
outsl
push
loopne
push
sub
or
mov
mov
sarl
lcall
adc
shll
fs
je
push
lock
rcll
push
loop
xchg
sbb
lods
cmp
pop
test
fdivrs
sbb
lods
xchg
cmpsl
or
lret
jmp
sbb
sub
push
dec
sub
icebp
mov
mov
rorb
add
and
inc
add
lret
mov
push
xchg
pop
or
inc
pop
and
arpl
xor
xlat
fcomps
std
mov
mov
scas
adc
hlt
push
pop
fwait
mov
mov
mov
xchg
xor
sub
ficompl
insl
fnstsw
push
fcompl
cmp
xor
jge
test
sarb
daa
sub
jns
sub
sarb
aad
cwtl
cmp
xchg
xor
movsb
dec
xchg
jl
adc
xor
test
push
adc
sub
in
fisubs
in
push
mov
xlat
cmp
mov
adc
mov
fmuls
imul
in
or
test
aad
popf
lods
ss
fcmovne
sti
bnd
jb
mov
fsubrs
int3
inc
lret
dec
je
daa
push
sahf
sbb
jns
arpl
xchg
test
xchg
mov
movsb
jae
and
popf
test
stos
jno
or
insl
inc
adc
insl
popf
sti
push
add
bound
lea
scas
iret
loope
jp
inc
dec
fildl
mov
arpl
test
xchg
int3
scas
inc
push
clc
dec
lods
sub
jb
call
cmpsb
cmpsb
push
or
mov
xchg
iret
int3
sub
push
and
mov
inc
mov
mov
sarl
ljmp
or
mov
inc
dec
adc
lret
stc
cvtdq2ps
stos
push
fs
es
sbb
jo
xchg
sbb
and
pop
jmp
loope
outsb
mov
movsb
adcl
adc
ds
ds
push
mov
pusha
lods
mov
dec
jp
leave
mov
push
sub
cmp
inc
loop
cmp
sub
mov
cmp
es
add
ljmp
jnp
in
loop
scas
cmc
das
adc
xor
xor
sbb
cmp
rcll
jmp
mov
sti
cmp
roll
daa
int
and
int
into
jecxz
push
xor
push
cld
in
cs
addl
adc
mov
xlat
adc
adc
add
push
divb
mov
pop
xor
leave
sti
push
ficoml
aam
std
cvtpi2ps
push
mov
call
fdivrs
adc
imul
icebp
cmp
inc
jbe
adc
cli
lods
flds
lahf
or
add
and
cmp
mulb
dec
icebp
push
shrl
xor
cmp
std
in
xchg
push
in
inc
sbb
jp
push
popa
dec
pushf
lret
sti
xchg
pop
shl
cmp
xlat
mov
xchg
adc
lret
sbb
aad
or
mov
adc
cwtl
mov
lret
cmp
xlat
fldl
jae
fidivrs
mov
daa
lods
sbb
mov
inc
fwait
xor
jp
int
adc
sbb
rcrl
mov
subl
push
mov
pop
cld
mov
mov
mov
leave
pop
testl
mov
lret
imul
xchg
fistpl
std
inc
and
mov
cmp
add
sbb
loop,pt
push
xor
outsl
sub
pop
out
ficomps
push
scas
xor
and
inc
sub
lods
mov
rcl
push
std
mov
pop
out
add
les
xor
sbb
inc
pop
mov
and
mov
leave
popf
dec
repnz
sub
fildl
sar
test
mov
dec
sub
test
mov
sbb
add
add
loopne
mov
scas
ljmp
scas
les
scas
mov
insb
cs
call
test
cmp
cwtl
adc
mov
mov
out
cmp
sub
hlt
cmp
cmp
push
sub
adc
adc
incb
mov
or
les
mov
xchg
js
mov
icebp
xor
aas
cld
xlat
or
dec
adc
cmpsl
cmp
insl
xchg
push
push
icebp
sub
addr16
movl
daa
xor
mov
addb
mov
push
aad
push
sub
mov
cmp
insl
jecxz
or
or
dec
out
js
push
mov
test
and
arpl
cwtl
pop
pop
popf
pushf
aad
cmp
repz
cs
lea
xlat
sub
in
pop
fwait
sahf
push
mov
push
cli
out
cltd
clc
stc
popf
insb
jne
cmp
rolb
roll
repz
ss
and
push
jp
jo
daa
pop
adc
fs
cmp
je
mul
push
xchg
int
xor
sub
sbb
je
out
subb
bound
cmp
aas
leave
lcall
jo
sub
sbb
lahf
pop
sbb
pop
push
mov
and
push
aam
mov
les
fisubrs
mov
xlat
mov
cmpsl
out
outsb
cli
or
push
loopne
inc
xor
add
adc
mov
sarl
jne
rcrl
jns
into
cld
xchg
push
cltd
sub
jns
cmc
xchg
push
mov
in
imul
dec
data16
push
mov
hlt
shll
xorb
jae
test
aad
xor
fisubrl
je
mov
inc
cmc
push
fildll
mov
sbb
fstl
std
pop
mov
das
popa
mov
shlb
into
jle
cmp
jp
outsl
mov
mov
jg
push
movsl
pop
or
dec
notl
fs
bound
mov
repz
add
jmp
leave
jns
leave
mov
or
cltd
push
add
cmpsl
test
mov
out
mov
inc
add
mov
jl
mov
push
test
cli
cmp
jo
stos
repnz
stos
mov
or
into
sbb
test
popf
dec
pushf
or
ja
fbld
mov
xchg
addr16
mov
mov
pop
mov
scas
xchg
jae
in
push
xor
fsubp
das
adc
xor
aam
scas
inc
or
add
imul
xor
test
mov
pop
jp
xor
xor
ss
and
cs
dec
outsl
es
and
ror
cmpsb
or
test
and
movsl
movsl
int
jecxz
andl
fwait
mov
add
xlat
add
xor
sarb
inc
xchg
fwait
add
addr16
lds
inc
lret
fistpll
cwtl
imul
add
arpl
nop
faddl
mov
and
shlb
add
rcll
fs
xchg
mov
lcall
jmp
push
addb
clc
push
mov
or
push
aas
or
cmpb
addl
jp
fisttpl
jecxz
push
pop
xchg
faddp
adc
sub
imul
lahf
pop
mov
shlb
out
cmp
js
ficompl
push
outsb
push
lea
mov
cwtl
fucomp
mov
outsb
adc
rep
push
dec
clc
mov
lahf
cli
fucomp
cwtl
dec
mov
fistps
dec
or
mov
inc
or
xchg
cvtps2pi
mov
dec
inc
push
xchg
add
insb
orl
add
in
mov
push
push
frstor
leave
sub
mov
jle
rorl
fcompp
loopne
imull
scas
xor
jno
aad
mov
xchg
cmpsb
pop
or
add
adc
into
stos
cmp
mov
test
xchg
mov
pop
gs
into
mov
orb
mov
test
or
rcll
inc
jb
les
lea
adc
fistps
pop
out
xor
xchg
clc
sahf
mov
cmp
in
sbb
xor
movl
adc
cmp
push
jo
add
xor
sub
sti
out
stc
test
jns
xor
fsubl
add
into
and
ljmp
adc
adcl
roll
test
push
push
movl
mov
lea
stc
inc
pop
stos
dec
xchg
or
dec
fldl
mov
mov
pop
mov
leave
into
aam
sbb
cld
push
mov
adc
sbb
pusha
xchg
mov
cmp
lock
out
daa
addl
fs
loopne
xchg
push
clc
mov
mov
pop
sti
mov
aaa
cli
push
xchg
mov
jle
lods
jo
in
in
js
push
pop
mov
out
data16
stc
scas
dec
cltd
xchg
call
int3
mov
sbb
rol
mov
cmp
mov
lds
jecxz
push
leave
imulb
push
jle
xrstors
sbb
pop
pop
push
sbb
notl
sub
xorb
aad
and
add
cmp
mov
rcrb
xchg
fwait
dec
cmp
js
push
fadd
insl
out
cmp
inc
inc
jae
lds
dec
jge
dec
aad
aas
in
sahf
lahf
dec
adc
arpl
inc
and
fwait
nop
mull
and
add
es
jae
jge
daa
inc
imul
repnz
adc
daa
jp
out
scas
insl
dec
and
cmp
xlat
mov
daa
push
xchg
lods
mov
decl
mov
mov
pop
push
dec
cmpsb
and
jno
insl
outsb
shlb
enter
inc
clc
test
adcb
fstl
mov
movsl
aam
and
iret
or
inc
stc
repz
jae
gs
adc
or
adc
mov
or
jp
clc
mov
xor
sbb
adc
int
sbb
ret
mov
push
add
xchg
mov
shr
cwtl
imul
pushf
cmc
aas
push
pmaxub
mov
push
in
xor
xchg
pop
lahf
sbbb
data16
pop
mov
pusha
stos
push
hlt
adc
inc
jno
sub
cli
mov
arpl
mov
enter
cld
mov
mov
xor
lcall
sub
call
xor
push
push
pop
pop
jb
add
shlb
aas
pop
shl
inc
gs
xchg
repnz
jle
pusha
mov
mov
ljmp
mov
movsb
xor
cmp
lods
cmpsl
xchg
cmp
sti
mov
repz
inc
pop
and
das
jb
jle
xlat
lret
lods
sbb
test
cmp
aaa
jle
mov
cld
jno
ljmp
jbe
xchg
mov
or
icebp
arpl
lods
xchg
cwtl
add
imul
sbb
and
lahf
mov
daa
into
sbb
bound
jge
test
jl
xor
outsb
xchg
and
out
fmul
pop
add
stos
pop
fcomps
cmpsb
mov
ja
lahf
sarb
inc
fs
insl
ficoms
fcomi
dec
cmpsb
rolb
outsb
shlb
and
gs
mov
sbb
sbb
adc
inc
ds
orb
stc
pop
pop
mov
inc
imul
fcmovb
test
jl
inc
cmp
je
lret
inc
in
loop
div
fisubrl
enter
pushf
shl
ficoms
fdivrs
rolb
push
pusha
stos
cmp
shl
mov
aaa
data16
lret
adc
in
mov
xchg
rcrl
or
jg
pop
inc
aaa
cmc
mov
jp
outsb
xchg
lret
test
xor
pushf
js
dec
fnstsw
ds
out
in
pop
adc
sbb
or
imul
leave
add
mov
jl
nop
lds
or
or
gs
jae
loope
int
pushf
push
adc
push
xchg
fildll
inc
xchg
xchg
or
or
ret
lret
loop
push
inc
or
test
rcll
mov
xlat
inc
dec
lret
mov
cs
in
out
outsb
adc
adc
cwtl
cmp
shlb
adc
mov
cmp
mov
pushf
inc
ficoml
ja
jmp
cmp
xor
imul
mov
lds
add
xchg
outsb
shrl
xor
mov
outsb
adc
iret
and
pop
hlt
jbe
add
and
add
sbb
pop
mov
cmp
jl
iret
clc
add
cmpl
xchg
cmp
cmpsl
dec
fdiv
pop
inc
mov
les
pop
lock
mov
xor
test
fistpll
xchg
mov
or
cwtl
cltd
inc
pop
loope
cmpl
imull
int3
mov
sbb
xchg
je
out
jns
jmp
repz
inc
shrb
pushw
add
pusha
xchg
jo
aaa
push
xlat
je
push
push
call
sub
cmp
pcmpeqw
dec
xor
fistl
loop
pop
mov
jge
or
bound
out
vcvtss2sd
push
xorl
ds
es
adc
and
and
push
add
or
dec
jb
xchg
pusha
call
imul
sbb
test
push
out
or
mov
jb
push
pop
pop
ja
inc
or
ret
mov
push
imul
in
ret
std
cltd
and
rolb
adc
push
cmp
out
pop
mov
add
mov
mov
ds
cli
cmpsl
aaa
add
in
jbe
add
xlat
fsubl
push
push
mov
xor
mov
aas
dec
test
sbb
lahf
rorb
dec
std
sub
aaa
and
dec
xchg
inc
leave
adc
aam
dec
daa
hlt
cmpsl
sbb
shrb
jnp
insl
call
lock
push
cmp
mov
or
push
push
int3
sbb
jl
pop
ret
xchg
cs
or
mov
ljmp
les
xchg
xchg
jg
adc
clc
mov
mov
or
add
sub
xchg
cmp
inc
repz
sbb
push
push
sub
sarb
repnz
pop
mov
sbb
push
mov
adc
xchg
jbe
loope
pop
shlb
push
ljmp
xchg
sub
mov
sbb
sub
cmc
mov
sub
jge
sahf
movl
out
int3
dec
adc
ja
test
adc
add
jg
xchg
imul
sub
xchg
adc
clc
xor
iret
sbb
sub
fildll
out
ja
jne
iret
cwtl
call
enter
add
movsl
dec
sub
or
lods
push
sbb
dec
sub
popf
clc
pushf
cs
ljmp
inc
into
in
fildll
sti
mov
and
inc
adc
fnstsw
push
daa
imul
cmpsb
out
dec
repz
ja
cmpsb
sti
pushf
sbb
ds
jbe,pt
xor
in
dec
pusha
jle
test
lods
fcmovne
dec
inc
sbb
dec
mov
dec
push
inc
subb
out
add
mov
and
xor
aad
add
out
sbb
sbb
mov
outsl
into
push
call
mov
adc
cmpsl
repz
inc
cmp
inc
popa
xorl
pop
xor
ret
adcl
unpcklps
mov
pop
mov
loop
clc
jmp
pop
dec
jnp
shlb
mov
fxam
jp
call
in
lock
mov
push
pop
addl
or
les
adc
iret
popa
dec
ljmp
loopne
adc
inc
addb
vpunpckhwd
and
xor
addr16
lock
outsl
xor
inc
push
jge
enter
sub
dec
sti
outsb
popf
and
jmp
xor
xchg
outsb
xchg
dec
insb
pop
sahf
cli
inc
not
sub
jl
xchg
push
icebp
pop
dec
bound
push
xor
dec
es
xchg
ja
frstor
arpl
repz
loope
push
movsb
cmp
addr16
mov
cmpsb
pop
es
insl
movsl
inc
pop
adc
jns
jae
imul
add
enter
jbe
scas
xchg
call
dec
or
push
sub
std
xor
fcomp
lock
aam
mov
sahf
dec
adc
mov
jg
push
cmpsl
mov
cmp
sbb
push
mov
sbb
imul
dec
pop
arpl
fdiv
daa
cmp
and
pop
xor
or
daa
call
jb
ss
mov
cmp
xchg
fistl
testl
stos
cmp
mov
cmpsl
jge
inc
imul
jle
call
sti
or
xchg
es
push
repnz
std
je
sahf
xor
cs
icebp
test
iret
push
dec
inc
inc
ret
cmc
arpl
push
daa
jmp
cmp
sbb
out
sbb
jg
cmp
or
pushf
xchg
pop
rcrb
dec
test
jge
mov
movq
pop
and
loope
cmp
pop
mov
gs
vhaddpd
push
sub
push
jle
stos
push
les
lcall
push
mov
cs
aam
sbb
lods
push
xlat
jnp
jnp
sti
lcall
clc
xchg
and
pop
push
pop
arpl
inc
cmpb
and
push
pop
insl
mov
das
pop
mov
enter
mov
cld
mov
pusha
out
adc
fildl
je
fidivrs
pop
out
imul
cmp
outsl
adc
sti
push
dec
mov
popf
jne
ja
into
pop
cs
test
in
enter
test
pop
std
jmp
out
in
sbbl
mov
mov
jnp
sub
lret
add
mov
xchg
mov
xchg
js
and
xor
cmp
push
push
sbb
add
xchg
sub
push
pop
fiadds
fnstsw
call
adc
add
sbb
repnz
cltd
xchg
mov
pop
dec
out
xchg
sbbl
inc
add
imul
out
xchg
pop
push
mov
jne
outsl
dec
jno
out
mov
pusha
add
cmpl
cwtl
adc
dec
sub
cld
stos
xchg
push
adc
pop
shll
mov
xor
ror
das
das
sub
insl
in
inc
mov
stos
loopne
xchg
jno
mov
aad
push
inc
sub
pop
pushf
dec
ret
mov
es
scas
je
das
std
imul
mov
into
jb
adc
xchg
insb
and
cmp
mov
dec
mov
xor
mov
xor
mov
sub
cmpsb
test
push
or
shll
jle
jno
jno
adc
testb
push
lahf
aad
ja
mov
jns
sub
fnsave
int3
fbld
enter
scas
push
testb
popf
sahf
rcll
dec
xor
jmp
stos
sbb
xor
inc
sar
lock
bound
popa
and
adc
mov
pop
and
test
dec
xchg
scas
daa
pop
sub
aam
push
in
out
cmp
sbb
sbb
jne
mov
ret
adc
js
fwait
inc
cmc
ror
pusha
inc
mov
sarb
cmp
mov
ficomps
and
inc
inc
rol
mov
rcrl
inc
inc
or
cwtl
gs
jo
shll
mov
mov
add
xor
pusha
and
lret
xor
pushf
popa
insl
cmp
sti
arpl
xchg
sub
shrb
mov
mov
sbb
xor
cmp
xor
mov
loop
push
es
insl
out
outsl
std
push
outsb
cmp
fsts
mov
push
pop
mov
mov
fcomp
in
in
sbb
mov
adc
loopne
mov
rorb
inc
pop
loop
daa
push
into
push
adc
and
outsb
inc
xor
cmpsl
int
decl
mov
ds
out
add
xchg
aas
add
inc
int3
icebp
jb
push
aas
addb
test
sub
xor
dec
mov
jg
int
fidivrl
cmp
xchg
xor
xor
aam
and
push
dec
pop
cmp
je
cwtl
in
aaa
subb
subl
jb
push
test
mov
shlb
xchg
ficoms
nop
aam
out
out
and
dec
cmp
xor
idivl
xor
call
xchg
mov
jne
jg
inc
lret
cmp
cmp
or
sbb
stc
insl
lock
lret
mov
pop
lea
in
outsb
or
arpl
dec
ljmp
sahf
pop
mull
adc
cltd
loopne
shl
loope
mov
in
adc
movsl
mov
mov
lock
xor
movsb
xor
push
ret
jae
aam
sub
loop
sahf
std
xor
mov
shlb
pusha
jg
les
inc
jo
or
sub
es
jecxz
mov
loope
out
stc
mull
clc
cmc
sbb
push
mov
test
cli
and
movsb
bound
shr
xchg
aam
ret
pusha
lods
jae
stos
bound
xchg
sbb
add
mov
sar
sti
daa
xchg
jg
add
xchg
mov
sub
movsb
outsb
ss
push
pop
add
xor
aaa
fsubs
dec
sub
lcall
pushf
dec
inc
mov
xchg
call
out
sub
mov
sub
fsub
xor
repnz
shlb
push
cmc
adc
inc
mov
add
or
fadd
rcr
jo
into
aas
sub
and
insl
add
pop
leave
ja
jne
nop
cli
leave
adcl
xchg
xor
lcall
xchg
shrl
inc
into
popf
in
sub
out
cwtl
aam
dec
cmp
out
xchg
popa
aad
jb
xchg
add
popf
mov
jg
cli
ret
arpl
mov
mov
sbb
xlat
jb,pn
jns
mov
cmpsl
sub
dec
push
ds
rcr
aas
sub
mov
adc
and
mov
mov
and
dec
scas
loopne
outsb
sub
xchg
aas
cmp
roll
jnp
xlat
jbe
add
cmc
fs
lods
movswl
xor
stos
pushf
mov
mov
cmpsb
cmp
iret
xor
out
call
int
stos
loope
sub
call
dec
xor
int
push
clc
pop
adc
test
or
stos
mov
or
rcrb
cmp
shll
arpl
mov
mov
mov
ret
mov
push
xor
in
es
and
push
pop
pop
lea
mov
jns
andl
rcrl
mov
and
jmp
mov
lods
stc
xchg
ss
mov
jmp
xor
jbe
out
fs
pushf
pop
loop
push
das
mov
adc
jp
xchg
gs
inc
or
pusha
repnz
lcall
into
xchg
pop
push
pop
adcl
mov
sti
jl
sub
aad
je
push
inc
in
mov
push
daa
int3
movsbl
pop
aam
pop
push
aam
mov
add
mov
mov
cmpsb
add
cmp
inc
add
fs
out
jp
add
jbe
sub
push
pop
in
adc
movsl
jecxz
sbb
cmpb
loop
sub
inc
loop
sbb
rcrl
jb
push
push
mov
and
push
test
pusha
pop
loopne
push
gs
das
dec
adc
jno
xchg
out
test
sub
xchg
push
nop
xchg
xor
push
int
xchg
clc
int3
aaa
popa
insl
jmp
push
loop
mov
rcrl
pusha
in
xchg
dec
daa
mov
stos
ret
dec
call
add
fwait
insb
pop
mov
jl
mov
dec
sub
sbb
jg
pop
xchg
inc
mov
or
jmp
scas
add
das
inc
stos
hlt
out
pop
lahf
pop
icebp
fimuls
lds
clc
mov
sbb
jns
mov
sbb
mov
out
fadds
mov
ss
ret
out
adc
fnstsw
mov
push
out
fcompl
dec
enter
cld
jp
outsb
mov
ja
jns
push
xchg
xor
push
cmp
popf
and
ljmp
in
xor
in
sbb
pop
je
mov
jnp
bound
cwtl
dec
and
cmc
inc
inc
arpl
mov
mov
imul
xor
addb
ljmp
dec
push
cmpsl
mov
sahf
or
push
jp
mov
imul
mov
out
mov
jp
scas
add
sarb
pop
cmpsb
inc
sar
jb
xlat
out
push
jge
mov
mov
rorl
leave
lods
jge
in
xchg
adc
in
dec
and
push
cmp
inc
insl
cwtl
and
sbb
popa
add
and
gs
pop
fldcw
xor
inc
enter
jmp
push
push
mov
icebp
xchg
xor
adc
and
xchg
pop
xchg
lea
cmp
repz
sub
stos
imull
mov
ds
adc
pop
das
mov
out
pusha
lret
cs
mov
popf
insl
int3
bnd
inc
sub
pop
insl
push
pop
divl
aaa
dec
add
aad
xchg
mov
sub
and
mov
jl
and
es
push
sbb
stos
outsl
push
pop
pop
pop
cld
sti
iret
insl
lock
cmpsb
xor
cmpsb
adc
push
loop
jns
mov
shrb
ret
or
jns
out
dec
xor
dec
scas
pop
xchg
hlt
sarl
cmp
ss
fisubl
lret
loopne
inc
jle
ss
xchg
pop
repnz
hlt
or
xor
xchg
int
rolb
mov
push
jmp
cmc
es
sbb
lods
add
mov
sbb
lret
shll
je
jge
inc
or
rolb
dec
xlat
imul
movsb
dec
lods
sbb
leave
xchg
mov
cmp
dec
xchg
xchg
lcall
int
dec
movq
mov
lret
jecxz
pop
fs
sbb
and
pop
sbb
jo
lods
loope
sub
mov
insl
test
jp
int3
test
sbb
adc
sub
scas
addr16
jnp
test
popl
push
xchg
jecxz
mov
test
inc
xlat
ja
dec
lret
push
das
mov
pop
and
stos
in
dec
xchg
xchg
in
sbb
shlb
add
mov
pop
sub
bound
push
test
mov
icebp
negb
jl
rol
mov
push
stc
adc
test
in
sbb
or
add
jo
mov
adc
adcl
add
in
jmp
aas
jp
cmp
mov
sbb
add
fsubrl
mov
jmp
xchg
mov
loop
cmp
stos
testb
xchg
mov
xchg
movsl
repnz
loop
mov
xchg
sub
aad
ljmp
adcb
add
notb
and
xchg
and
add
mov
push
ja
push
daa
ja
test
jbe
out
popa
enter
pop
mov
xchg
add
xchg
aas
push
out
or
xchg
jnp
push
sub
movsl
add
mov
add
call
mov
fstpt
aam
bound
lret
cmp
cmpsl
push
es
fisubrs
mov
jno
xchg
in
fidivrs
sub
lret
lock
pop
push
or
inc
sub
inc
pop
xor
inc
loope
sti
mov
add
addl
push
cmp
mov
lret
mov
leave
cmp
xchg
xchg
out
mov
sub
xchg
stos
lret
mov
add
mov
iret
push
test
mov
loope
sub
das
imul
add
es
adc
cmp
imul
in
repz
outsb
test
popa
jmp
fwait
dec
lret
scas
and
xor
mov
fdiv
loop
mov
lea
dec
in
call
int
rorl
cmp
inc
and
add
pop
mov
shl
sbb
push
pop
popf
movsb
je
adc
clc
movsb
popa
adc
xchg
pminsw
pop
adc
or
xchg
xor
movsl
imul
mov
dec
imul
in
lods
sbb
movsb
lea
sub
pushl
cmpsl
push
fnstcw
mov
or
fnstenv
xor
stos
mov
ljmp
add
dec
adc
mov
sbb
ds
ss
stos
aaa
and
jbe
and
leave
inc
xor
ds
fcmovu
sbb
enter
xor
in
inc
xchg
nop
dec
fdivrl
lea
fdivrs
mov
pop
xchg
and
jecxz
test
xor
ret
stc
fisubrs
pop
shlb
fistpll
je
js
aam
or
adc
fcompl
mov
scas
popa
mov
outsb
sbb
sbb
rclb
inc
std
push
sub
iret
push
cwtl
inc
popf
xchg
add
js
shlb
scas
les
xchg
clc
add
and
fndisi(8087
cmp
stc
lret
test
pop
mov
cmp
mov
pop
iret
popa
xchg
jb
inc
nop
push
test
mov
jnp
cmp
arpl
lods
pop
in
fdivrl
dec
xor
adc
mov
mov
les
add
and
mov
jne
loop
shlb
jg
push
cmp
ficomps
in
int
push
icebp
rcrl
mov
or
cli
jg
jl
insl
and
repnz
cli
sbb
mov
push
hlt
decb
push
int
jge
mov
inc
leave
jne
pop
loope
shll
mov
cmp
push
stos
xchg
xchg
aad
sti
adc
dec
adc
aad
dec
bound
sub
call
test
jp
mov
movb
scas
xor
cltd
call
ss
shll
in
cmp
icebp
call
jp
push
mov
sbbl
push
dec
mov
scas
dec
jae
cmp
adc
iret
or
cmp
push
fwait
das
stos
push
dec
imul
push
jno
xchg
sub
pop
jb
mov
xchg
loope
add
sti
inc
lahf
imul
stos
test
into
int3
add
jmp
aad
cwtl
cs
stos
add
loopne
pop
mov
sti
adc
jmp
sub
mov
mov
das
sub
xlat
cmovg
movsb
int
jnp
jno
push
cmp
pusha
cmp
shll
xchg
push
iret
int
daa
inc
mov
pushf
daa
push
and
cmp
cmpsl
stos
and
add
sarb
push
push
jle
sub
nop
sub
sub
sub
add
and
dec
mov
sbb
out
mov
pop
cmp
dec
xorl
push
adc
add
out
jg
xor
and
test
ljmp
roll
pavgw
cmp
push
jns
xchg
inc
int3
jae
ja
movsb
pop
xor
jle
xor
cmp
mov
repz
fwait
mov
xlat
xor
dec
filds
or
call
clc
and
push
lods
lret
mov
es
aaa
xor
movsb
adcb
add
outsb
mov
fisttps
popf
stos
adc
les
jmp
sti
lea
or
mov
ja
shr
add
jne
nop
dec
jno
ss
popf
adc
fisubrs
mov
dec
fcomps
cmpsb
pop
lahf
lahf
mov
xchg
pop
rorl
pop
sti
es
aam
in
outsb
push
mov
dec
sbb
mov
mov
mov
out
sub
sub
dec
push
dec
sub
gs
outsl
or
cwtl
push
daa
xor
mov
shlb
repnz
divb
pusha
mov
movl
or
pop
and
fsub
mov
cmp
fmull
lods
in
or
xor
mov
xchg
jle
pop
mov
sbbl
leave
or
pop
iret
lcall
push
jmp
iret
mov
mov
in
std
fsubs
push
push
loopne
fcoms
mov
mov
call
sbb
sub
xor
es
cmp
and
in
std
popa
cmpsl
dec
mov
imul
adcb
movsl
cld
dec
cmp
adc
jmp
sahf
fisubrl
fstl
and
jl
xlat
rcrb
sahf
sub
or
insl
loope
gs
addr16
aas
sub
and
xor
adc
adc
or
pop
outsb
mov
push
pop
ds
setge
lret
xor
sub
aas
out
xchg
mov
stos
or
lods
rcl
and
insb
jns
pop
movsb
bndldx
and
pop
int3
add
sub
cmp
or
sbb
xor
call
sbb
jmp
push
cli
push
loope
mov
fidivs
aaa
clc
cmpsl
sbb
push
clc
rorb
int3
lods
mov
lahf
inc
push
mov
clc
jae
repnz
subl
setbe
xor
push
add
in
push
push
or
or
hlt
mov
in
sbb
and
dec
cmpsl
int3
imul
mov
rcll
mov
movsb
cwtl
pop
xchg
subb
xchg
jmp
pop
scas
std
rorl
loopne
fisubrs
decl
rcrl
or
push
cmp
rorb
fisubrl
js
outsb
cmp
dec
mov
inc
ret
mov
lods
cmp
or
jle
jmp
sbb
jae
das
push
mov
cmp
int3
mov
scas
xlat
call
cltd
dec
and
mov
and
aam
or
iret
mov
mov
test
and
dec
pop
inc
clc
je
dec
sub
mov
and
sbb
sub
sub
jl
aaa
mov
lret
aam
and
aaa
jo
jle
loopne
pop
and
cmpsb
pop
stos
and
je
cmp
push
idivb
cmp
xchg
call
adc
jp
stc
xor
add
jmp
jge
jl
int3
xchg
dec
repnz
inc
push
das
pop
pop
gs
aad
jne
dec
popa
outsl
xor
pop
scas
ret
popf
add
or
jo
rcrb
mov
dec
sbb
inc
insl
pop
push
dec
ror
sub
mov
pop
jecxz
push
test
inc
jge
cmpsl
test
dec
mov
leave
mov
rcrb
in
cli
lahf
mov
ds
jmp
rcl
jne
test
lock
ss
jmp
jmp
jle
cwtl
xor
popa
add
mov
push
and
jmp
ret
sti
aas
stc
adc
pusha
out
shrl
dec
mov
lahf
rolb
fsubl
xor
stos
xor
popa
cmc
call
and
cmc
mov
nop
fisubrl
mov
jge
mov
insb
loop
inc
jecxz
and
inc
leave
stc
cltd
mov
mov
loopne
lret
xchg
push
scas
cs
push
add
roll
js
cmc
push
fnstcw
shrb
test
mov
inc
cmpsb
xor
in
add
jae
divl
pop
orb
pop
sub
rorl
arpl
mov
cmp
bound
mov
mov
or
cmp
pop
lcall
loope
jge
cmpsb
jp
fiaddl
and
dec
lods
sub
loope
aaa
mov
in
int3
adc
cmp
pop
xchg
cwtl
ss
and
fidivl
dec
fs
sbb
frstor
add
movsl
mov
hlt
xor
push
xchg
je
mov
cld
pop
xchg
mov
iret
loop
mov
movsb
das
lods
push
clc
mov
or
jno
scas
adc
lods
stos
and
call
inc
ljmp
out
and
test
fisttpl
mov
dec
mov
xchg
push
lea
mov
lea
outsb
hlt
sbb
sub
or
shrl
gs
add
cmc
into
cpuid
and
leave
shll
or
or
rclb
push
mov
or
clc
pop
lcall
ds
ret
sbb
pop
pop
test
xchg
ror
loopne
jbe
xchg
jae
sub
ljmp
xlat
inc
cld
iret
call
les
adc
testl
paddw
mov
mov
push
and
mov
lret
pop
cmp
dec
int3
lcall
pop
js
xchg
xor
inc
enter
xlat
xchg
scas
pop
cmp
adc
sets
int
jno
adc
fldenv
add
gs
dec
xchg
adc
pop
cwtl
push
imul
inc
push
mov
mov
loopne
dec
shll
nop
cmp
mov
mov
mov
add
sub
xor
inc
outsl
inc
fmul
mov
pop
adc
push
cmp
push
sbb
sbb
adc
inc
fdivr
jg
jne
dec
mov
popf
jnp
add
data16
movsl
pop
out
fidivl
inc
sti
rorb
jmp
movsl
dec
sub
sbb
mov
push
push
xorb
adc
imul
cmp
stos
scas
sub
aam
test
je
mov
fdivrl
popf
xor
mov
je
imul
sub
scas
shlb
mov
out
push
xchg
xchg
pop
ror
pop
popa
or
mov
ja
hlt
jnp
xchg
das
and
pop
sub
pop
stos
das
mov
cmp
push
mov
andb
dec
mov
dec
daa
mov
ljmp
jno
sbb
cwtl
adc
in
xor
mov
push
int3
or
lds
dec
daa
in
xor
mov
and
enter
je
cmpsb
push
mov
jg
cld
sahf
mov
mov
andl
add
xor
xor
fnstenv
sub
dec
ja
adc
pushf
dec
push
push
inc
push
xor
loope
pop
in
fstl
cmp
movsb
or
mov
push
mov
inc
pop
jmp
subb
xchg
mov
push
jmp
mov
ficomps
sbb
push
jl
cmp
jo
mov
xchg
out
push
adc
jbe
cmpsb
les
dec
out
nop
jecxz
imul
shrb
cs
insb
push
inc
dec
lock
jbe
imulb
or
mov
lcall
cwtl
std
xchg
lret
js
mov
into
cmp
dec
cwtl
lret
idiv
jb
xlat
enter
loope
stc
shr
push
and
pop
cwtl
pop
jns
insb
push
xchg
out
pop
clc
aaa
jmp
std
pop
lahf
or
arpl
xorl
jae
push
inc
cli
cmp
aaa
gs
mov
sahf
mov
xchg
cmp
das
fcomip
stc
inc
aam
and
daa
scas
movsb
ret
shrb
jmp
cmc
pop
jno
mov
sbb
mov
mov
xchg
scas
pop
insl
mov
dec
ljmp
fcmovne
and
pop
add
mov
aaa
adc
rorb
stc
fsts
adc
clc
cmpb
mov
enter
mov
jbe
fcomps
movsl
out
pop
outsl
inc
lds
add
mov
sub
mov
out
movsb
push
cmp
mov
jns
ret
out
in
adc
sbb
clc
in
mov
les
setl
aam
lds
lahf
std
movsb
adc
dec
mov
addr16
xchg
pop
in
cmp
pop
mulb
adc
pop
xchg
push
sub
add
addl
or
push
arpl
mov
adc
xor
std
sub
cltd
fdivr
rorb
test
idivl
iret
push
and
jl
adc
lods
vmovaps
inc
sbb
inc
xchg
jno
mov
ss
jne
pop
test
xor
dec
xchg
add
lods
xor
cmp
ljmp
sbb
inc
and
je
into
lcall
fimuls
dec
popa
jae
nop
ret
adc
aas
jae
icebp
stos
cmp
outsl
sub
gs
hlt
xor
xlat
sub
or
testb
lret
inc
shrd
adc
das
mov
xchg
testl
ja
lcall
mov
call
cmpsb
mov
and
ret
mov
xor
xorb
idivb
pop
in
data16
lret
fnstenv
bound
ss
sub
adc
imul
cld
xor
mov
mov
js
mov
insl
or
jno
aaa
push
outsl
in
push
ja
adc
jge
out
adc
and
cmpsb
cmpl
xchg
sub
pushf
xchg
cwtl
or
pop
jne
mov
jo
cli
mov
dec
and
push
and
loope
roll
testl
test
mov
insl
push
jo
fcmovne
xchg
addb
push
add
mov
inc
negb
bound
xchg
or
adc
mov
js
jae,pn
xlat
xchg
inc
or
push
int
scas
xor
xchg
push
jle,pt
js
les
stos
pop
sub
mov
mov
sub
mov
adc
mov
rol
mov
and
stc
nop
test
in
sbb
test
int
xor
int3
push
cmpsl
jg
xor
negb
int
in
push
imul
scas
and
aaa
pop
cld
mov
or
aad
mov
cmp
aaa
push
add
insb
and
fdivrl
int
rcrb
or
enter
stc
mov
mov
jno
sahf
lods
hlt
daa
lahf
scas
inc
cmc
dec
insl
dec
jnp
push
lea
inc
xchg
xor
cmpsl
dec
inc
ljmp
clc
sbb
ret
js
inc
or
jle
clc
or
jne
cltd
sbb
int3
and
fimull
push
dec
sub
xor
int3
mov
push
push
jne
mov
jno
aam
adc
imul
fcom
add
movsl
xchg
pushf
mov
or
jge
shl
inc
inc
add
divl
mov
xchg
xor
mov
adc
bound
cs
mov
aam
inc
mov
cmp
push
dec
scas
mov
into
ljmp
loope
lcall
xor
je
sub
adc
lock
aam
cmpsl
mov
cwtl
cmp
sub
cli
adc
mov
ljmp
imul
data16
pop
fisttps
cmp
int3
imul
outsl
or
cmpsb
loope
inc
test
xor
aam
mov
sub
ljmp
sti
mov
je
les
fistpll
push
or
arpl
jae
mov
mov
and
mov
mov
or
sbb
inc
hlt
and
out
pop
imul
sbb
cmp
fstpt
gs
jge
adc
push
mov
rcr
cmp
xchg
adc
push
lret
add
popf
xorl
jl
sbb
out
faddl
ss
stos
out
stos
fcompl
xchg
les
lock
mov
shr
pushl
add
jmp
xor
cli
and
mov
or
add
mov
sub
pop
into
leave
rorl
add
add
jbe
pop
mov
push
scas
outsl
cmpsl
push
dec
out
push
out
adc
lret
lcall
pop
xchg
adc
mov
cwtl
stos
scas
cmp
or
sbb
lret
mov
mov
push
lods
and
jecxz
cli
loopne
mov
xor
push
mov
dec
cmp
cmp
cltd
push
inc
test
jle
inc
mov
fstpt
inc
outsl
sub
push
adc
xchg
rcl
jg
dec
jmp
lahf
repz
inc
dec
test
adc
popa
inc
out
mov
adc
sbb
adc
lcall
ja
insb
sarb
xor
insb
lods
dec
cwtl
test
jne
aad
in
jg
and
popa
xchg
cs
mov
push
test
xchg
inc
xchg
rolb
bound
in
scas
out
pop
test
xor
mov
push
loope
pop
inc
mov
sahf
jge
fiadds
outsb
adc
mov
scas
scas
adcl
pop
lcall
push
mov
xchg
add
sub
int3
inc
das
xchg
xor
je
xor
aaa
mov
xchg
pop
or
je
repnz
das
fstps
lret
fdivl
js
lea
adc
add
in
adc
pop
inc
jo
adc
dec
es
mov
xor
or
push
jb
rorl
and
outsb
loop
cvttps2pi
cli
dec
nop
mov
or
xor
push
mov
jns
repnz
imull
enter
pop
sub
aad
add
test
stc
gs
cld
movsl
shrl
jle
insb
fdivl
pop
ljmp
jb
dec
dec
xor
mov
pop
in
jno
mov
int3
mov
insb
xor
nop
mov
scas
fmull
pop
cwtl
lods
out
outsb
mull
pop
movsl
cmp
icebp
aad
and
mov
push
and
xlat
mov
stos
mulb
fs
test
ficompl
cs
arpl
and
les
inc
mov
fidivrl
xor
rorl
mov
mov
pusha
movsl
mov
add
pop
xor
pop
clc
fimuls
in
iret
clc
push
push
insb
push
imul
jb
daa
sarb
mov
push
push
out
jp
jge
movsb
jle
xchg
ljmp
sbb
lcall
mov
das
lds
sbb
jl
push
fildl
in
in
test
sbb
mov
stc
or
adc
ss
jns
fcompl
fwait
pop
inc
mov
insl
js
add
fldt
ss
repnz
fbld
xchg
and
cmpl
pushf
pop
dec
mov
shrb
inc
mov
cmp
jae
insb
pcmpeqd
in
push
mov
adc
add
and
xor
movsl
out
int
aam
pushf
lret
imul
inc
fistpll
push
mov
js
jl
stos
xchg
movsl
mov
into
pop
gs
inc
int
andl
jo
jg
scas
lret
mov
popf
inc
ljmp
push
or
mov
imul
cmp
jo
inc
cmp
push
fwait
insb
mov
mov
lods
insb
jnp
popa
and
cmp
ficoms
js
add
pop
lods
and
cmp
mov
sub
daa
jmp
add
add
arpl
arpl
iret
and
dec
push
in
inc
or
mov
setns
fimuls
adc
fdivl
test
or
test
loop
mov
mov
lds
adc
je
pop
sbb
jnp
and
and
inc
mov
js
clc
outsl
push
int3
lods
adc
insb
sub
xlat
add
testl
icebp
pop
inc
sbb
loopne
cli
push
jne
js
popf
movsl
and
add
lcall
cmpsb
sbb
mov
push
and
sbb
test
sti
pop
adc
das
xor
leave
cmp
test
fists
shrl
jmp
inc
scas
shlb
sbb
orl
pop
imul
testl
pop
pop
add
mov
jnp
call
imulb
popl
sub
xchg
adc
jno
xchg
xchg
xchg
jg
mov
clc
xchg
std
scas
pop
loope
jl
fcmovu
pop
inc
pop
negb
leave
lds
and
add
lret
fstpl
jge
aas
popa
add
outsb
pop
pusha
push
xchg
ds
test
int
pushf
and
sbb
xchg
orl
rcll
pop
out
fmull
roll
out
fdivr
mov
aas
out
jecxz
addr16
outsl
mov
push
int
pop
pop
pop
mov
cwtl
rol
sbb
xor
out
rcrb
add
sbb
jbe
iret
adc
mov
repnz
inc
lahf
fbstp
add
lock
sbb
fwait
adc
call
fidivl
jmp
inc
mov
and
stos
adc
inc
push
jb
mov
imul
push
mov
sub
xchg
in
pop
es
popa
lods
dec
outsb
sarb
dec
rcll
or
cmp
addr16
push
js
xchg
cs
add
roll
xchg
call
or
stos
sub
out
test
push
es
sub
xchg
cwtl
dec
mov
pop
mov
fs
jmp
pop
lods
jo
lea
mov
mov
aam
loope
push
scas
repnz
jge
rorl
mov
insb
call
stos
outsb
mov
inc
push
xchg
pushf
lods
mov
xor
cmpsl
out
outsl
nop
popl
mov
xor
or
sub
aad
enter
sbb
mov
mov
adc
inc
in
cwtl
xchg
sub
adc
je
add
scas
movsb
jg
and
cltd
dec
vpsrlw
mov
rol
popa
cmpsb
mov
mov
and
mov
add
push
aad
mov
xchg
imul
pop
iret
loop
jmp
dec
pop
hlt
or
jo
lret
call
or
fisttps
or
pop
cmc
call
mov
cmpsb
lods
push
mov
sub
repnz
xor
jle
or
dec
lcall
dec
mov
mov
jle
aaa
mov
inc
jnp
leave
nop
movsl
movsb
fcomps
mov
pop
xchg
pop
inc
xor
mov
cmc
sub
stc
lods
add
dec
dec
outsl
push
mov
and
push
mov
pusha
cld
jmp
cmp
es
xchg
int3
mov
xor
pop
inc
lods
sahf
push
enter
jne
mov
sub
pop
cmp
push
sub
gs
mov
lcall
dec
clc
mov
cmp
and
or
gs
lret
adc
cmpsl
mov
sub
repnz
inc
xor
pusha
test
notl
call
jge
mov
mov
push
sahf
cmp
mov
or
incl
out
or
mov
cmc
fwait
pusha
sbb
pop
outsb
jl
jns
xor
test
push
test
movl
movsb
pop
pop
sbb
aas
pop
push
dec
push
mov
dec
cmp
sbb
dec
stc
sbb
negb
hlt
ss
pushf
inc
sub
mov
gs
adc
jbe
enter
pop
int
push
push
pop
cltd
mov
inc
sub
mov
pop
lds
cli
lds
es
mov
and
sbb
adc
ds
cltd
mov
ds
cwtl
or
into
cmp
xchg
or
aaa
aas
cli
push
and
xchg
pop
inc
add
pop
xor
outsb
xchg
loop
in
leave
jp
dec
cmp
clc
add
mov
fcmovne
inc
xchg
lret
sti
popf
xor
cmp
mov
in
dec
imul
cmc
hlt
xor
push
push
inc
out
scas
fwait
mov
push
lods
outsl
pushl
inc
icebp
cmp
adc
call
jg
or
fcomps
rcl
xor
in
popf
in
jo
push
mov
cli
cmpsb
les
idivb
push
pop
int3
int3
clc
jmp
mov
cmp
add
lods
mov
ret
mov
jl
xor
jae
add
add
stos
xchg
outsl
les
popa
idivl
pushf
push
stc
aaa
icebp
ja
lods
adc
adcl
dec
sahf
ret
rcll
mov
mov
out
fisttps
inc
inc
test
cmpsl
xor
pop
das
jbe
xchg
push
jle
enter
sti
xor
and
mov
cmp
jmp
inc
push
push
dec
push
flds
mov
or
dec
inc
mov
cmpsl
push
imul
mov
dec
test
rorb
mov
movsb
test
cli
and
cmpsl
mov
test
cmc
xchg
inc
mov
push
pop
mov
in
and
push
daa
in
jmp
sbb
lea
cltd
pushl
sbb
jge
std
bound
jp
popa
pop
mov
pop
loope
xchg
fisttpll
dec
decb
outsb
pop
and
aaa
pushf
adc
sbb
in
je
stos
aaa
addr16
sub
mov
ret
xchg
rolb
xor
sbb
loope
faddl
ficoml
xor
cmpsl
xchg
push
mov
enter
lret
sbb
pop
push
cwtl
or
mulb
and
imul
jne
stos
in
je
fcomi
arpl
in
jmp
add
outsl
divb
jp
mov
in
sub
cmc
mov
fs
mov
mov
ret
outsb
pop
xlat
or
xchg
ret
or
cmpsl
loopne
xor
repz
mov
mov
addr16
adc
push
mov
add
mov
ret
jg
push
mov
lock
les
sar
push
dec
xor
xor
jp
dec
mov
mov
out
add
pop
mov
jg
add
repnz
enter
xchg
aas
jbe
test
stos
xchg
test
insl
pop
int3
scas
push
stos
sti
push
pop
push
mov
lods
aaa
test
sbb
xlat
push
daa
inc
lret
cli
aad
xor
lock
sahf
fdiv
int3
hlt
shl
pop
jns
sarw
and
push
mov
adc
hlt
call
xor
inc
sbb
repz
loope
inc
cmp
imul
imul
into
and
xchg
cmc
lock
shll
sti
sbb
jnp
out
cld
inc
add
loop
dec
mov
push
out
inc
loop
xchg
rcr
sti
push
cmp
rorl
pop
aas
js
ret
mov
push
mov
pop
adc
mov
mov
in
jle
les
movsl
or
lcall
call
scas
inc
cltd
jno
test
xlat
xlat
or
cs
movsb
jbe
lods
pop
xchg
mov
jge
icebp
cmp
add
out
jns
fst
cmc
cmpsb
adc
repnz
sbb
cmpsb
stos
xor
movsl
push
and
clc
push
es
test
jae
jl
xchg
pushl
jo
jno
cmp
cmpsl
mov
jle
stc
jnp
and
push
inc
popa
push
mov
popf
iret
pop
les
xor
add
mov
daa
pop
jne
mov
fstpt
mov
stmxcsr
mov
in
cmpl
call
mov
shlb
sub
xchg
imul
pusha
add
sbb
inc
sbb
arpl
cmp
cli
popf
inc
ret
push
jmp
arpl
lock
mov
cmp
push
or
jmp
sbb
shrb
xor
mov
push
mov
pop
movsl
inc
ficomps
push
cmp
clc
jne
es
push
cmc
mov
xchg
sub
jge
sub
jecxz
and
xorl
xchg
flds
lret
push
outsl
lods
dec
mov
jg
lods
xor
jno
ret
leave
ret
sti
jmp
stc
ja
movsl
cwtl
shlb
loopne
dec
cmp
popf
cmc
cmpsl
fsts
jae
idiv
jmp
push
xor
mov
lods
out
loope
mov
push
aam
sbb
inc
and
orl
jne
cmp
in
xor
and
fwait
in
mov
mov
std
in
lea
or
pop
inc
jne
sbb
lods
test
stc
movsb
xorb
or
ss
push
addr16
insb
cmp
pop
add
fsubrl
mov
imul
xchg
cmp
loopne
xchg
push
imul
dec
sub
fisttpll
add
movsb
out
jle
inc
jp
cmp
out
or
repz
rorl
popf
insb
jl
roll
insl
jmp
outsb
testl
fcmovb
aam
xlat
and
jp
dec
jle
push
clc
pop
inc
ja
fnstcw
or
push
ja
lods
fwait
in
test
pop
jno
mov
hlt
xlat
rorb
mov
outsb
cmpb
stos
cmp
push
mov
dec
fildl
jle
dec
les
mov
or
and
cld
xchg
pop
add
and
mov
mov
dec
loop
pop
nop
and
ficomps
cmp
push
dec
loope
push
imul
lods
dec
aam
sbb
push
outsb
mov
pusha
das
flds
push
sbb
loope
mov
jmp
cmpl
mov
loope
in
notl
sbb
lods
lods
push
iret
in
in
popf
sub
cmp
dec
cmc
hlt
or
sub
out
frstor
sahf
insl
int3
test
mov
in
mov
out
out
pop
test
mov
push
push
fistl
mov
gs
hlt
inc
mov
addl
and
sbb
xchg
stos
hlt
pop
andb
cmp
call
pop
test
imul
fldt
in
sub
add
lock
pushf
push
or
decl
out
dec
out
sbb
mov
xor
cmc
xor
adc
sub
jbe
add
fwait
dec
push
lahf
pop
xchg
jge,pn
mov
pop
pop
lods
and
jne
jl
fld
mov
cmp
fs
imulb
test
add
insb
xchg
add
xor
dec
daa
dec
das
sub
lret
fs
sbb
hlt
outsl
jb
test
bnd
or
xor
cmc
out
mov
clc
sbb
mov
xorl
xor
sbb
and
xchg
lahf
mov
test
sbb
lcall
scas
cmp
cmp
lahf
nop
and
mov
shrb
jle
rolb
mov
mov
test
pop
dec
cmp
aad
sbb
mov
push
jge
cmp
inc
cmp
out
inc
pop
sahf
stos
loopne
aam
test
ds
js
les
test
push
mov
les
sbb
xchg
xchg
mov
jo
outsb
push
sbb
push
push
icebp
ss
gs
negl
push
jbe
sbb
mov
or
test
inc
inc
xor
fistl
push
sub
mov
test
and
mov
ss
out
fwait
subl
sbbl
es
adc
xchg
fcompl
pushl
fistl
pop
mov
xorb
inc
popw
mov
jl
push
add
inc
fisttpll
fmuls
stos
dec
dec
sahf
enter
sbb
les
repz
mov
in
iret
repnz
push
mov
add
into
sub
jnp
sub
dec
mov
leave
push
shll
pop
icebp
imul
js
bnd
pop
adcb
mov
lods
xchg
push
adc
lret
orl
adc
das
jns
push
push
cmp
es
mov
movsb
fidivs
loop
cmc
mov
dec
adcb
cwtl
add
or
mov
xor
int
mov
mov
dec
push
cmc
pop
cmp
push
jg
outsl
mov
cld
mov
xchg
jl
or
shr
sub
cmpsb
cmp
sbb
fwait
adc
pusha
pop
iret
lods
aaa
push
and
lcall
sub
xchg
cmp
int3
jmp
or
fcmovu
lret
mov
icebp
sbb
jnp
out
sub
addr16
jle
cwtl
fld1
dec
push
cmp
sbb
mov
mov
repnz
xor
arpl
xor
cld
stos
dec
in
icebp
push
or
enter
dec
fsubr
or
add
add
cli
iret
and
dec
in
outsb
rcrb
jl
rcr
dec
xchg
rcl
and
ror
push
jns
mov
in
push
lret
or
out
add
sbb
std
jg
outsb
push
cmpsl
pop
sub
ficoml
add
das
mov
jecxz
mov
lahf
cmpsb
push
and
stos
loopne
jae,pt
ret
mov
sbb
test
lahf
out
in
mov
push
outsb
movsl
sbb
adc
mov
roll
or
scas
popa
cmp
xchg
and
lcall
rclb
mov
and
nop
cvttps2pi
ret
loopne
dec
adc
xor
inc
call
sahf
jae
ds
mov
push
out
pushf
and
leave
fistps
lahf
or
mov
int
leave
fisubs
mov
out
out
cmp
out
xchg
dec
ds
ret
xor
adc
iret
cmp
pop
repnz
mov
jns
inc
pop
pop
jge
popl
lods
stos
mov
adc
jmp
sbb
dec
add
mov
cmc
or
decl
mov
mov
lret
nop
movsl
and
cmpsb
fldenv
movsl
movsl
xor
cltd
sbb
mov
ja
push
stc
insb
testb
es
inc
push
arpl
sub
and
or
jb
das
or
add
repnz
movsb
sbb
ja
cmpsb
mov
cltd
daa
wbinvd
adc
mov
xchg
fdivrs
es
sub
arpl
outsb
xlat
cmp
push
icebp
das
in
push
add
push
das
in
repnz
dec
add
sti
ljmp
pop
xor
push
mov
jae
popf
in
addr16
ds
or
shll
or
sbb
stc
and
adc
mov
aas
push
decb
fistpl
cmpsl
ret
loopne
xchg
outsl
es
mov
iret
data16
jl
mov
adc
lock
mov
out
ficompl
faddl
sbb
ds
rclb
popa
fwait
adc
mov
out
cld
fs
mov
divl
mov
pushf
xchg
aam
rol
or
inc
out
in
xor
ljmp
sub
mov
movsl
sub
jg
xor
cmp
jmp
mov
shlb
pushf
out
fdivrs
cmc
pusha
in
sahf
fcmovu
jl
gs
adc
cs
mov
fimull
add
mov
test
int
dec
mov
cmp
insl
mov
dec
test
data16
arpl
idiv
clc
jne
in
adc
xor
faddl
cs
push
mov
jnp
ret
mov
fadds
es
sar
adc
mov
int
ljmp
jae
cmp
popf
and
cmpxchg
dec
in
inc
mov
lret
sub
jns
ja
dec
lods
sbb
incb
aad
daa
mov
jno
inc
push
and
dec
js
inc
aam
push
fmull
aam
pop
popf
inc
xor
sbb
jg
rcll
push
add
arpl
scas
lahf
lcall
sbb
loope
ds
fwait
mov
jae
es
enter
dec
jmp
dec
adc
subl
aaa
push
shll
leave
test
imul
imul
add
movb
shl
lds
in
jp
xchg
lods
cmpsb
fadds
arpl
arpl
rcl
in
mov
or
mov
popl
or
xor
mov
xor
mov
and
sbb
lret
das
xchg
push
test
sbb
or
jb
xchg
inc
stc
test
cld
out
daa
mov
pop
push
jmp
lret
mov
mov
popa
clc
test
or
popf
ja
sub
inc
psubusb
leave
push
popfw
pushf
in
or
loop
ljmp
mov
addr16
leave
xlat
stos
mov
or
cmp
or
dec
mov
push
xorl
arpl
cmp
add
jmp
clc
ja
or
xchg
mov
lock
popa
xchg
inc
sbb
jecxz
stc
jae
mov
fptan
loopne
cmp
fnstsw
cmp
pusha
insl
imul
or
mov
add
mov
jno
mov
insl
popa
adc
inc
mov
stos
addr16
daa
ret
push
pop
addl
pop
loope
out
sbb
mov
in
and
std
add
aad
test
fdivrs
pop
dec
sub
loopne
rcl
push
lcall
ret
out
adc
testb
mov
xor
push
dec
call
int3
jo
fisubrl
js
scas
sbb
call
call
or
sti
loope
data16
mov
adc
adcb
rclb
mov
test
or
ret
mov
cmc
dec
orl
pop
aaa
xchg
sbb
xchg
inc
jg
out
pop
scas
push
jo
lock
jne
push
sub
mov
in
movsl
cmp
xchg
mov
xchg
adc
jo
dec
mov
mov
mov
xor
cmpsb
sbb
add
mov
dec
mov
xchg
lock
fs
int3
pop
nop
test
dec
cld
xor
sub
insl
ror
divl
jp
std
iret
out
inc
adc
push
push
loopne
cwtl
outsl
cmp
push
stc
push
addr16
mov
sarl
scas
imul
mov
mov
inc
sub
ljmp
lods
or
sub
aaa
mov
scas
dec
pop
pop
mov
push
sbb
popa
jns
in
mov
xor
inc
mov
mov
comiss
sub
and
arpl
mov
push
and
sbb
sbb
repz
inc
add
inc
mov
fdivs
ds
xor
jne
adc
xor
add
sbb
pop
mov
call
aad
mov
ss
mov
xchg
mov
mov
sub
loopne
or
mov
mov
outsb
pop
xor
mov
stc
xchg
adc
loopne
dec
pop
pop
mov
in
or
jmp
dec
rcr
dec
or
cmpsl
or
mov
jb
jmp
fadds
push
aaa
mov
nop
sti
cli
int
push
pop
sub
rcrl
mov
push
jne
add
jnp
mov
in
mov
das
adc
adc
outsb
rcll
dec
or
sub
pop
das
cld
nop
testl
mov
lds
in
mov
inc
push
jmp
inc
loope
rorb
and
mov
xchg
out
in
ss
sbb
in
int3
cmp
mov
push
testb
push
cmc
push
rol
jge
mov
cmp
mov
outsb
cmc
or
fisttpl
pusha
mov
mov
adcb
inc
mov
lcall
xchg
dec
in
sbb
je
xchg
xchg
cmpsb
jae
aaa
adc
shlb
pop
or
cmc
add
mov
fcomps
cmp
fmull
shrl
xchg
in
or
xchg
fildll
fiaddl
shrb
test
insl
addr16
loopne
in
push
dec
xor
fs
push
sub
xchg
add
lock
xchg
mov
icebp
pushf
aad
cmc
cmp
cmpsb
inc
mov
push
gs
mov
fcomps
inc
icebp
scas
inc
adc
cmp
add
and
adc
cwtl
dec
mov
adc
mov
jbe
fwait
jg
shrb
ret
pop
sbb
mov
or
or
fadds
xchg
dec
shrd
pop
mov
mov
clc
int
cmpsb
sbb
ret
jmp
leave
fidivs
adc
pop
fmul
add
cmp
stc
out
scas
xchg
pop
sbb
idivl
jns
jp
mov
push
sar
mov
inc
std
hlt
push
dec
fistl
in
push
adc
test
pop
mov
ja
mov
fnsave
push
dec
cmp
push
inc
stc
jae
adc
mov
mov
sbb
arpl
push
shll
bnd
sbb
xchg
cmpsl
and
pop
jnp
jne
or
mov
jecxz
lcall
pop
dec
add
stos
aad
or
les
insb
daa
int3
jo
dec
adc
outsl
out
movsb
sub
mov
cmp
lcall
lcall
les
nop
stos
cmp
mov
xchg
imul
and
xor
mov
loop
loopne
jns
xor
dec
fldl
pop
cltd
es
jnp
dec
sbb
sbb
mov
jno
push
xchg
sub
mov
ret
inc
test
lret
aam
orl
mov
lret
xor
nopl
and
push
fmuls
add
inc
add
or
and
adc
jne
jns
jge
xchg
and
or
mov
sbb
fst
pushf
das
inc
jg
stos
pop
xor
stos
sarb
daa
cmp
iret
mov
pusha
xchg
jo
pushf
xlat
lds
sbbb
sbb
lods
and
insb
adc
in
sub
xchg
loopne
fs
xchg
ftst
cmpl
fstpt
cmpsb
imull
cmp
repnz
cld
push
sub
add
je
dec
out
div
decb
test
xchg
into
jp
xchg
lods
dec
icebp
mov
inc
mov
lds
sbb
leave
repnz
or
scas
inc
fnstsw
push
cld
jne
cli
lds
aad
dec
jmp
daa
or
push
xor
cmp
dec
lds
and
add
leave
jecxz
dec
cmpsl
in
sub
sub
or
mov
pushf
lods
fcoml
pushf
lcall
xor
out
int
ds
dec
xor
je
int3
pop
rcl
add
sbb
xor
cmp
fwait
pushf
push
adc
dec
lods
arpl
lahf
dec
jmp
les
jbe
and
mov
data16
mov
lahf
mov
in
int3
mov
negb
pop
mov
imul
inc
arpl
pop
test
sub
cmpsl
push
in
enter
pushf
fwait
jecxz
call
loop
cs
pop
cmp
add
cmp
int3
sub
ja
insl
push
xchg
fldcw
dec
and
loopne
das
cmpsb
rcr
cmp
aaa
sbb
sub
ja
cmpl
icebp
or
mov
or
ljmp
roll
rolb
add
lret
arpl
cmp
fs
lret
jecxz
xor
in
pushf
mov
std
int3
imulb
push
push
sub
bound
shrb
int
mov
add
jno
xlat
aam
lock
idivl
add
clc
or
cmp
sarl
jae
adc
leave
int3
or
mov
scas
shll
cmp
ret
xchg
sub
ja
insl
push
in
push
lods
mov
ret
scas
scas
loop,pn
bound
out
es
pop
idivb
pop
push
mov
mov
sti
ret
cmc
dec
data16
pop
clc
pop
sti
add
or
pusha
inc
pop
lcall
or
ret
sbb
ljmp
lret
ret
lea
pop
dec
push
jne
cli
dec
mov
cmpb
cli
mov
inc
ja
xor
fmull
lret
ljmp
adc
pusha
lret
subps
dec
shlb
stos
mov
sbb
jle
lret
aas
lods
ljmp
xchg
cmp
cwtl
and
mov
sub
mov
add
jbe
mov
iret
mov
fwait
iret
aas
dec
lret
jl
mov
xor
xchg
mov
add
pop
xchg
push
adc
sub
iret
xor
test
fbstp
sub
sarb
gs
jmp
cltd
push
jb
popf
fcmovb
jg
and
fbstp
sti
frndint
adcl
xor
push
sub
lea
fnstsw
adc
imul
jmp
testl
aam
adc
jbe
fimuls
add
test
out
loope
jb
dec
mov
in
jb
xchg
fnsave
ret
aam
sub
fwait
dec
jg
mov
data16
sub
jecxz
xor
hlt
sbb
mov
sub
cltd
or
jae
inc
dec
inc
push
add
dec
insb
or
unpckhps
sbb
mov
and
pminsw
ret
adc
xor
pop
push
fsubrs
call
lahf
mov
cmp
sbb
movsl
sub
mov
lret
mov
sub
mov
dec
fildll
daa
dec
push
mov
stos
mov
add
cld
arpl
pop
aas
mov
jns
aaa
pop
push
adc
lock
loope
arpl
inc
sbb
test
iret
mov
int
mov
out
in
scas
aam
jae
scas
jp
mov
rcl
icebp
insl
push
jg
icebp
pop
mov
pop
push
test
xor
lahf
fdivrl
out
jnp
stos
cmc
loopne
loopne
dec
lret
sub
pusha
xor
out
pop
popa
icebp
gs
pop
xchg
sub
push
repnz
mov
mov
cmc
roll
test
mov
pop
pop
jg
jecxz
or
test
inc
scas
out
inc
sub
insl
repnz
add
in
lock
inc
pushf
lods
movsb
pop
mov
mov
lds
aas
sub
cwtl
fwait
add
fs
sbb
xchg
fdiv
repz
stc
lahf
xchg
adc
xchg
dec
mov
sub
dec
es
sbb
addr16
push
fdivrl
loop
bnd
push
insl
xor
test
arpl
icebp
cmpsb
sarb
aad
push
jge
repnz
and
mov
cwtl
inc
cmpsb
mov
and
mov
cmp
sarl
sub
mov
idivl
mov
int
pop
sub
aas
xchg
push
hlt
in
xchg
bswap
jge
dec
hlt
mov
mov
pop
popf
out
cli
push
shll
sbb
pop
orl
xor
adc
dec
cmp
outsb
outsl
leave
repz
insb
mov
les
call
loope
clc
jb
hlt
data16
nop
mov
push
or
mov
fcomip
lcall
test
sub
das
mov
jecxz
pop
push
lods
fs
pop
add
les
push
cld
mov
xor
jge
inc
jg
es
dec
mov
or
xor
mov
popf
int3
js
gs
inc
fildll
movsl
das
je
gs
xor
and
insl
iret
fcompl
inc
sar
es
vmovq
jne
mov
pushf
mov
mov
pop
cmpsl
ret
lock
loop
fsubl
rcll
and
pushf
jg
and
jmp
aaa
add
pop
cmpsb
push
rcll
dec
fildl
xchg
scas
mov
xchg
ss
inc
add
je
test
sub
int3
add
mov
mov
out
xchg
ror
xchg
and
cld
gs
mov
push
roll
roll
push
aaa
pusha
adc
ret
loopne
cmp
mov
enter
cmp
inc
lods
cmp
push
repnz
pop
add
push
or
mov
pop
or
or
call
popa
insl
jne
inc
scas
push
cmp
pop
fildll
mov
mov
popa
push
aaa
and
sub
push
ss
out
push
cs
cmpb
push
rep
fildll
loopne
and
or
test
push
gs
mov
sbb
mov
scas
push
bound
mov
cmp
call
adc
xchg
cmpsl
in
sahf
jne
cmp
aas
jge
and
jbe
sbb
in
pop
push
mov
rol
std
xor
cld
dec
and
jbe
xchg
mov
out
sub
xchg
pop
enter
cli
scas
lret
mov
add
and
cmp
nop
sub
cmpsb
pop
or
or
mov
pop
lcall
scas
inc
loope
sbb
bound
mov
imulb
icebp
xchg
in
dec
enter
and
bound
or
test
adc
mov
aas
leave
jecxz
xor
cwtl
cmp
dec
push
ficompl
add
loope
daa
mov
stos
movsl
and
xor
jl
cmc
sbb
fwait
jns
pop
js
jmp
aas
push
mov
add
sub
add
dec
push
cmc
fmull
mov
ret
test
arpl
or
jne,pt
je
adc
scas
decl
dec
insl
inc
xchg
fidivs
sbb
pop
es
mov
xchg
cmc
and
dec
mov
inc
jnp
mov
fsub
push
push
and
mov
mov
pop
repz
lahf
sbb
push
scas
jmp
xchg
loopne
mov
mov
aaa
mov
mov
mov
push
xor
in
out
inc
pop
scas
inc
inc
and
sbb
mov
repnz
mov
out
pop
xor
jae
inc
push
insb
pop
mov
push
jecxz
mov
lods
sbb
xchg
lret
aaa
sbb
mov
adc
mov
push
shrb
adcb
addr16
fisttpll
sub
or
push
aad
outsb
or
std
push
jge
mov
outsl
jae
xor
xchg
std
je
es
fstps
xchg
out
inc
pop
fsub
or
stos
pop
xor
cmp
inc
outsl
aam
out
arpl
mov
popa
scas
mov
test
nop
inc
xchg
cld
mov
gs
sub
in
ret
xchg
ds
mov
jne
rcr
pop
xor
addl
ja
pusha
push
push
mov
pusha
adc
inc
sub
inc
mov
adc
dec
xchg
lea
inc
xorb
aaa
inc
in
cmp
orl
test
pop
and
enter
add
outsl
pop
stc
pop
imul
iret
push
rcrl
mov
inc
or
shlb
fwait
adc
fwait
xor
xchg
fdivr
repnz
mov
mov
cltd
mov
dec
sub
dec
mov
add
lods
ret
orl
or
dec
shl
js
addr16
in
aad
xchg
inc
mov
add
xchg
inc
iret
rclb
cld
mov
sub
scas
je
dec
dec
es
pop
in
mov
dec
scas
push
push
dec
stos
pop
adc
jno
fisttpl
aad
mov
fnstenv
and
jae
pop
rolb
cmp
inc
dec
push
mov
daa
call
pop
jp
repnz
daa
jo
pusha
lcall
sti
cwtl
imul
imulb
jo
pop
outsb
cltd
enter
mov
sahf
pop
sti
into
out
mov
mov
cmp
lock
mov
mov
cld
call
das
xor
jle
test
shlb
add
jb
pop
ja
sub
sbb
ficomps
aam
push
shll
xchg
push
add
ret
lods
xor
fdivp
popa
xor
adc
mov
jnp
or
jmp
adc
pop
lahf
loope
or
nop
into
adc
je
pop
cmp
test
kmovw
push
pop
inc
ds
sub
add
push
aad
in
pusha
dec
push
loope
popa
or
in
or
repnz
pushf
sub
insb
ja
cli
daa
pop
xchg
jle
xchg
sbb
test
mov
jnp
pusha
bound
push
jne
mov
into
les
add
rcrb
mov
in
xor
xlat
and
mov
enter
shlb
stos
mov
loope
les
es
imul
sti
and
cmpsb
out
stos
and
out
imul
xor
mov
pusha
outsb
icebp
insb
enter
je
adc
mov
cmc
enter
loope
dec
movsl
fucomp
stos
leave
push
cli
jmp
sbb
in
push
and
push
jecxz
frstor
sub
cmp
jg
test
inc
testb
sbb
and
js
sarl
xor
xchg
sbb
lahf
decl
arpl
dec
in
cmpsl
shll
inc
xchg
lds
sub
and
or
out
jae
hlt
notb
adc
call
sti
stos
ret
dec
cmpsb
mov
xor
fistpll
xlat
test
fcoms
mov
test
and
mov
ljmp
mov
daa
in
cmc
pop
xor
xor
enter
insb
push
int3
mov
cmpb
push
je
mov
int3
loop
insl
sbb
lcall
andl
mov
das
sbb
jo
pop
movsb
test
inc
inc
mov
lret
xchg
mov
push
sbb
movsl
jg
decb
notl
lds
decb
scas
jecxz
into
mov
xchg
ret
shlb
xchg
jb
mov
mov
call
sbb
int3
out
push
jl
xchg
sbb
mov
xchg
rolb
jb
lcall
xor
dec
pop
ljmp
cmpsl
jmp
push
push
mov
insb
add
jbe
clc
lcall
mov
ja
pop
inc
jno
xor
add
pop
pop
outsl
clc
xlat
pop
lahf
mov
mov
xor
or
test
loope
xchg
adc
push
and
xchg
lods
mov
sahf
push
cli
int
fs
jb
jp
mov
adc
mov
pop
out
mov
pop
inc
stc
movsl
notl
ja
add
xchg
mov
or
subl
inc
mov
fs
out
cmpsb
loope
mov
sbb
lahf
xor
sub
outsl
fnstcw
int3
lahf
int3
mov
lods
out
add
insl
pop
xor
pop
push
jo
mov
lahf
pop
or
inc
mov
jge
xor
sbb
sub
ss
push
pop
push
iret
int3
sub
outsl
stc
sbb
mov
test
call
jnp
jecxz
adc
adc
xchg
cmp
jl
lods
pop
cmp
pop
loop
lgs
gs
xchg
pop
jo
mov
push
test
ret
sti
pop
inc
jo
mov
sti
out
lcall
das
cmpsl
xchg
pop
ja
dec
sbb
fcmovne
cmove
lcall
dec
add
jle
ljmp
lods
scas
enter
aas
pop
pop
fnstsw
aad
jno
in
add
xchg
sbb
pop
jb
sbb
popf
dec
fistpl
test
jno
cmp
pop
cmpsl
pop
push
inc
lods
add
xor
xor
mov
sub
xchg
fld
imul
scas
enter
jbe
dec
aad
add
add
out
mov
rol
sti
inc
mov
xchg
inc
pop
mov
jo
repnz
rcrb
cwtl
shll
ljmp
cli
adc
xchg
jns
add
movsb
mov
cmpsl
jnp
xchg
imul
xchg
in
pop
sbb
daa
pop
jmp
pop
or
popf
mov
xchg
cmp
mov
rcrb
pop
dec
pop
xchg
das
nop
and
lret
mov
push
mov
rorb
sbb
in
mov
push
pop
xchg
mov
rcrl
xchg
insl
lea
lret
pop
test
add
fcomp
xchg
pop
icebp
stos
jb
inc
inc
jp
out
jnp
fdivl
or
and
inc
pop
push
push
loopne
push
pop
add
sbb
and
out
les
js
cli
in
push
push
inc
dec
jbe
imul
cltd
jns
xchg
out
enter
xchg
adc
jecxz
popa
sub
cmp
loope
push
jg
js
cltd
outsl
cld
outsb
outsb
xor
dec
adc
inc
sbb
cmc
je
imul
pusha
jno
mov
dec
lods
int
mov
lock
or
repz
sti
into
lret
xchg
mov
push
fisttps
pop
hlt
mov
mov
nop
lock
ret
cmp
daa
push
in
pop
outsb
lret
andb
mov
inc
clc
jne
orl
jo
test
fmuls
out
shr
je
inc
cmp
jae
xchg
pop
dec
sbb
sub
xor
inc
cmp
rcrb
sub
sub
sbb
ss
mov
adc
cmp
bound
push
out
fwait
call
and
sub
aad
pop
lock
cmp
fnsave
xchg
push
and
adc
pop
or
push
jno
dec
loop
ret
adc
pop
das
mov
nop
sub
xchg
dec
std
cmp
jno
fsts
push
dec
lret
int3
xchg
xchg
pop
lret
shrb
push
pop
pop
inc
insl
xchg
mov
add
test
fcmovb
idivl
mov
iret
test
outsb
dec
rcr
push
sub
arpl
adc
ja
adc
lds
xorb
mov
mov
xor
setae
call
mov
imul
std
fidivs
mov
mov
cmp
ud1
nop
inc
ds
pop
sti
xor
fwait
mov
dec
pop
mov
fs
push
lods
pop
mov
cltd
add
cmp
bound
adc
in
push
mov
xor
and
jge
sbbl
dec
bound
int
sub
div
fbld
xchg
sbb
or
fwait
outsl
cmc
jne
cmpb
stc
test
push
xchg
dec
cmpsb
pop
pop
xchg
fs
sbb
int
jg
inc
fisubs
push
fstpt
mov
xlat
fs
lods
rorb
xchg
and
ljmp
xchg
jp
pop
adc
pop
cmp
test
call
fwait
xchg
sti
unpckhps
subl
popa
std
push
std
xchg
stc
stos
clc
rcll
orb
inc
jecxz
and
adc
mov
aad
int3
push
push
sub
gs
and
add
notb
movsb
adc
ror
mov
int
addr16
inc
adc
mov
test
incb
jns
mov
jge
sbb
int3
inc
aad
inc
out
pop
pop
cmp
or
mov
aaa
push
jp
push
cld
out
cs
in
loop
xor
arpl
loopne
xor
push
dec
xchg
mov
dec
repz
jae
mov
cs
aas
mov
es
and
or
in
lods
ss
aaa
cmpsl
mov
js
cmp
inc
mov
lods
imul
xor
popf
mov
jecxz
inc
mov
clc
dec
mov
outsl
call
std
pop
add
push
dec
das
insl
jnp
lcall
shlb
lret
movsl
rcr
cmpsl
test
lahf
or
ds
mov
and
int
loopne
push
in
outsl
bound
testb
insb
cltd
jnp
cmp
in
mov
or
in
mov
pop
movsl
pop
adc
push
xor
dec
push
loop
insb
js
push
shlb
fwait
ljmp
pusha
pop
inc
loopne
cmp
and
push
xchg
xchg
scas
push
cmpsl
clc
pop
jo
xor
ja
push
stos
testl
imul
xor
xor
popf
popw
xchg
mov
dec
xor
repnz
pop
push
jnp
fimuls
push
push
test
hlt
cmpsb
dec
pusha
leave
xchg
fidivl
rdmsr
or
shlb
movsb
adc
push
jmp
inc
aam
mov
addr16
inc
sbb
inc
aad
cs
add
inc
pushf
sti
leave
xor
mov
sahf
fidivl
sub
push
lds
test
ret
mov
push
scas
adcb
cli
add
ss
inc
mov
pop
mov
mov
adc
addb
into
and
ja
mov
mov
fs
mov
jle,pt
std
lcall
or
divl
cs
int
call
mov
xchg
push
mov
insl
cmp
negl
pop
mov
scas
jle
and
repz
cmpsl
sahf
outsb
cmc
loop
jmp
outsl
add
lret
jno
imul
pop
data16
aad
and
ss
nop
cmc
mov
stos
mov
sarw
inc
xlat
loope
and
add
push
in
push
jmp
fs
and
jno
adc
lret
sbb
arpl
mov
mov
jp
int3
cld
pop
roll
filds
hlt
imul
add
pop
or
adc
into
cmc
jno
nop
jnp
or
sbb
cmp
fwait
hlt
add
add
mov
mov
or
mov
pop
std
lret
arpl
call
out
cs
dec
mov
push
stc
pop
mov
pop
test
repz
xchg
cltd
leave
cmp
add
fsts
xchg
jno
push
cmp
xor
enter
sub
fxch
xor
mov
out
aam
aam
pop
push
jno
jl
lds
outsl
sti
test
push
iret
pop
loop
stos
and
mov
mov
popf
mov
cli
jg
add
in
dec
dec
aam
sub
subb
movsl
pop
negb
jae
mov
out
out
sub
std
aad
cmc
mov
int
ret
shrl
mov
lret
pop
sbb
or
das
pop
mull
ret
xchg
pop
lret
jne
or
mov
pop
stc
cmp
push
adcb
and
cmc
scas
xchg
pushf
mov
sub
inc
adc
gs
dec
lea
aas
pop
and
loope
add
or
adc
adc
lret
lds
leave
cmc
adc
ss
sbb
jecxz
adc
insb
clc
mov
mov
lods
sub
hlt
into
fcomi
test
xchg
sbbl
das
push
jl
push
mov
mov
aam
push
lods
dec
adc
mov
sbb
pop
sbb
fisubs
out
das
xchg
fistpll
or
dec
adc
xchg
jecxz
icebp
es
clc
out
fmulp
lret
psllw
into
inc
or
jb
lret
ss
repnz
test
mul
mov
out
out
inc
push
xchg
pop
xchg
adc
adc
xor
lea
fwait
aad
sarl
add
lahf
add
outsl
mov
xchg
loop
out
push
mov
int3
adc
cmp
adc
jecxz
sbbl
lahf
das
movsb
and
bound
in
adcb
pop
scas
nop
and
lds
add
cld
pop
in
xor
gs
mov
movsl
push
mov
stos
cmp
sub
stos
sub
in
jbe
cld
cmp
pop
sub
jg
cmpsb
popa
mov
push
jg
flds
or
push
inc
mov
cmp
mov
fistps
pop
and
push
lods
int
mov
arpl
shl
cmp
outsl
enter
inc
ret
outsl
add
movsl
push
push
pop
xchg
adc
mov
out
lahf
mov
or
fisttpl
xor
andl
sub
mov
daa
ret
dec
adc
lods
test
xor
pusha
cmpsb
jecxz
ja
fs
testb
jl
sub
int
mov
inc
stc
data16
das
xlat
cmp
shll
data16
js
imul
mov
into
and
add
dec
xchg
into
xchg
lds
pop
in
in
fimuls
loop
adc
xchg
lock
and
std
jg
sbb
int
cli
cld
cmpsl
pop
inc
adc
aam
or
xor
pop
popa
push
int
pop
js
mov
sbb
sub
mov
or
test
push
mov
insl
dec
hlt
imul
mov
fdivl
jmp
sub
mov
jge
popa
rclb
gs
jp
sbb
leave
push
das
cmp
mov
xchg
loopne
in
xchg
roll
dec
test
dec
and
mov
jns
inc
jge
addl
data16
scas
dec
dec
aaa
cmc
das
dec
mov
loope
fbstp
sub
mov
adc
and
jnp
imul
addr16
icebp
mov
mov
xor
je
pop
daa
lcall
xchg
mov
xor
lods
lea
jle
add
mov
imul
jmp
xchg
mov
cli
out
mov
jns
xchg
mov
das
dec
pushf
mov
loopne
cmp
js
pop
mov
dec
inc
jecxz
cli
dec
in
lea
push
inc
loopne
ret
cld
mov
out
loope
xor
clc
pop
mov
cmp
in
icebp
mov
push
push
xor
adcb
push
dec
in
adc
cmpsl
fsubl
mov
inc
mov
cwtl
add
nop
call
push
lock
dec
xchg
data16
push
adc
cltd
out
fcoms
lea
xchg
sbbl
adc
aad
add
and
divb
mov
insl
or
rcrl
jno
mov
inc
aam
adc
stc
jo
mov
sbb
popa
xlat
push
loope
mov
push
test
add
mov
ja
lcall
lds
cmc
js
xor
add
xchg
daa
xchg
inc
mov
sub
and
hlt
fnsave
test
es
inc
fldl
pop
cli
xchg
scas
or
pop
mov
cmpsl
lret
jnp
cmp
out
mov
int3
push
fnstcw
daa
pop
sbbl
mov
xchg
xchg
lock
sbb
jl
jge
lret
and
push
mov
test
jns
mov
jb
mov
stos
loopne
or
dec
das
jge
movsl
fistl
pop
and
out
push
add
pop
cmpb
cwtl
aaa
daa
dec
stos
lds
adc
ljmp
std
mov
enter
push
pop
sets
icebp
sti
fmuls
push
xchg
xchg
push
nop
adc
pop
and
sub
mov
mov
xorl
imul
jbe
push
jp
push
into
icebp
daa
call
xlat
outsl
dec
fcmove
dec
mov
nop
xchg
xor
das
sub
lds
xor
add
stc
xchg
sub
cmp
mov
push
mov
mov
cld
mov
je
adc
pop
xchg
add
push
add
movsb
mov
adc
mov
jp
repnz
int3
fwait
inc
dec
lcall
xor
leave
pop
in
lds
inc
dec
in
rcl
pop
add
push
es
mov
push
cmpsl
shr
loop
fldt
sbb
icebp
das
je
shl
mov
dec
lret
adcb
lock
lret
hlt
aam
fcoms
mov
push
rcll
das
cmp
dec
push
jle
inc
lea
scas
nop
inc
inc
ljmp
push
dec
js
pop
mov
xor
xor
movsl
push
fstps
lcall
sub
iret
stc
imul
push
adc
divl
inc
gs
cmp
roll
int3
movsl
cmp
test
adc
arpl
inc
mov
adc
imul
popl
sbb
pop
stos
add
inc
repz
dec
and
aam
xchg
jge
push
outsl
imull
pop
push
add
mov
push
sbb
aas
pop
popa
or
loop
or
dec
hlt
inc
int3
sub
or
lret
dec
push
daa
sbb
jge
sub
push
mov
push
ljmp
iret
sub
ss
jg
mov
shr
inc
jae
xchg
xchg
imul
out
xchg
les
ss
jbe
cli
bnd
fmull
mov
sub
or
adc
jp
mov
cs
insb
xor
scas
and
or
andb
test
pop
int
insb
or
or
das
cwtl
cmpsb
adc
mov
xor
popa
in
out
roll
insb
cli
adc
ror
sub
bound
pop
out
testb
inc
lds
push
mov
jo
arpl
in
daa
aam
xlat
les
dec
xchg
mov
mov
shll
push
push
inc
popf
cmp
push
iret
cmpsb
mov
cmp
sarb
std
loope
sbb
lock
test
xor
cmp
push
push
lea
mov
dec
mov
push
lahf
mov
and
cmp
aaa
loopne
lcall
movsb
jmp
je
in
pop
mov
or
xor
add
push
sub
icebp
add
pop
or
ret
cmc
adc
and
add
lcall
add
movsl
push
sar
mov
cmp
les
loope
sub
data16
in
inc
ret
repz
in
push
aam
sarl
xor
fld
mov
cmp
in
outsb
adcl
and
ss
decl
rcrl
cld
lds
pusha
sub
in
and
gs
xchg
iret
iret
cmpsl
int3
mov
push
iret
shlb
pop
push
out
imul
or
or
leave
cmpb
imul
cmp
adc
insb
nop
in
push
sbb
and
loope
imul
js
dec
cwtl
ljmp
sti
outsl
in
lahf
xchg
fwait
jmp
sbb
mov
xchg
aad
cmpsb
mov
inc
loop
subl
iret
rcrl
cs
dec
insl
clc
lret
jecxz
ret
jbe
adc
cmp
das
inc
mov
inc
cmp
rolb
pop
inc
xor
jle
adcl
call
cmp
cmp
imul
ja
mov
call
les
pop
ss
sub
or
jg
or
addr16
stos
lods
cmpsl
push
in
mov
dec
ret
jmp
adc
pop
into
pop
jge
mov
clc
xlat
ds
dec
dec
aad
cwtd
sub
ds
mov
or
or
jnp
add
nop
pop
in
cltd
test
in
adc
shlb
subl
aad
insb
jne
adcl
pop
int
add
aad
pop
outsb
adc
pushf
mov
mov
aam
jmp
test
cmp
pop
adc
lahf
aam
mov
push
sbb
andl
hlt
les
xchg
cltd
push
fnstenv
xchg
in
lods
cs
mov
mov
rcll
cwtl
sub
cs
jg
and
loop
enter
icebp
dec
fnstsw
inc
mov
sub
adcb
or
sbb
pop
pop
jg
aad
cwtl
loopne
adc
mov
mov
xchg
cli
mov
ljmp
dec
sbb
sbb
adc
jnp
sub
mov
daa
fisubl
sub
pop
lock
lods
adc
bsr
movsl
dec
cmpsb
lods
cs
out
lea
pop
mov
test
xchg
mov
inc
int3
add
jns,pt
pop
aad
ret
xor
and
addl
dec
repnz
sbb
mov
mov
sbb
jne
jl
addr16
dec
popa
inc
jns
push
in
jns
sahf
test
pop
add
sub
test
sbb
jno
mov
cmc
cmpsl
pushl
das
bswap
mov
jp
popa
mov
mov
gs
jg
sub
cs
cld
into
cli
pop
xchg
test
cmp
sub
inc
cmc
pushf
movb
fbld
int
cmp
data16
sub
mov
divl
mov
ds
xlat
repz
adc
add
mov
iret
sbb
or
xlat
leave
stos
ret
mov
stc
movsb
inc
sub
out
repnz
push
mov
push
es
and
add
xor
cmp
jmp
inc
sbb
iret
push
movsb
in
shl
sbb
cmp
mov
lcall
orl
int
sub
mov
xchg
adc
mov
mov
test
pusha
lea
push
decb
inc
cmpsb
xchg
and
jnp
lods
pop
adc
out
outsl
jmp
and
push
clc
or
je
sbb
push
es
mov
movsb
fcomps
push
fists
xor
or
dec
sahf
data16
in
adc
sbb
dec
lcall
repz
jns
popa
or
mov
outsl
lds
cmp
out
rcr
cli
mov
fwait
inc
inc
test
lcall
cmp
rcl
cmp
jbe
imul
sub
pop
dec
shr
mov
shrl
mov
imul
dec
jb
dec
rcrl
sarb
or
sub
lahf
insl
inc
pushf
push
ss
xor
add
mov
pop
xor
mov
inc
xor
test
pop
std
sbb
jg
mov
cmpsb
leave
test
push
cmp
je
repz
mov
imul
mov
mov
ret
and
fdivrl
and
cmp
leave
into
xchg
out
xchg
push
inc
mov
ss
std
pop
push
adc
mov
sahf
xor
cs
mov
fisubrl
xlat
add
outsl
pop
repz
xchg
sub
sub
fsts
mull
jecxz
push
addr16
mov
icebp
or
std
mov
push
cmp
int3
lret
or
cmpsb
das
adcb
lock
call
ds
outsb
jmp
pop
inc
cltd
test
aas
addr16
test
push
sub
push
push
popa
movsl
loop
in
dec
dec
sub
and
scas
pop
jnp
mov
mov
lea
add
or
sti
das
push
es
clc
call
pop
cld
pop
mov
cmpsb
mov
push
adc
roll
cwtl
ss
bound
in
add
data16
icebp
sbb
push
mov
xlat
mov
mov
into
lds
imul
sti
xor
les
push
hlt
xor
xchg
xchg
pop
sub
cmpsl
sub
repz
fsubs
mov
pop
testl
int3
xchg
mov
aad
inc
sub
push
jp
adc
shll
les
icebp
mov
fidivrs
cmp
repnz
xchg
mov
xchg
inc
pop
add
dec
popa
push
stos
sahf
frstor
pop
mov
pop
je
insl
xlat
pop
or
xlat
das
dec
inc
xchg
es
or
aam
cmp
add
std
dec
push
and
mov
cwtl
jo
sbb
cmc
cmp
leave
mov
gs
ret
sub
jecxz
and
lret
lcall
dec
notl
fcmovnbe
add
mov
sub
fdivr
mov
xor
icebp
leave
cld
mov
inc
out
sbb
mov
jle
xor
cmp
adc
mov
mov
pop
dec
sbb
push
xor
fidivrs
jle
sbb
cmp
scas
test
dec
mov
scas
es
or
ljmp
mov
sbb
xchg
jbe
inc
add
fiaddl
rcrb
pusha
ja
push
and
popf
addr16
and
or
lds
sub
mov
mov
fwait
add
nop
sbb
mov
stos
bound
sbb
in
dec
fwait
rclb
mov
scas
cs
out
and
ficoms
ss
pop
xor
stos
data16
or
xchg
sbb
icebp
fisubrs
lret
lods
xchg
lahf
incl
arpl
push
or
lods
int3
je
push
fidivrl
mov
push
xchg
inc
push
fs
lcall
cmpsb
movsl
push
outsb
adc
xchg
dec
stc
repz
es
push
clc
xchg
shll
popa
repnz
mov
jns
enter
push
xchg
frstor
shrb
pop
imul
or
lods
xor
cwtl
mov
outsb
test
add
jecxz
mov
shr
push
mov
in
sarb
or
jo
pop
cmpsl
mov
xor
jb
adc
sub
in
sahf
sub
pop
adc
pop
mov
notb
pusha
jae
xlat
xchg
test
push
mov
fnstcw
cwtl
mov
enter
mov
lcall
repnz
push
add
hlt
repnz
dec
push
repnz
cld
jb
ret
cmp
lret
repz
mov
pop
pop
lods
lods
adc
push
cmpsl
mov
cmp
adc
in
jg
fiadds
and
inc
adc
popf
imul
push
daa
lcall
dec
jae
jb
ret
push
cmp
adc
jae
idivl
inc
xchg
aas
and
insb
pushf
js
push
sub
mov
imul
mov
xchg
ja
sbb
movsl
in
jbe
mov
sbb
movsb
subl
pop
lea
and
inc
xor
dec
mov
roll
dec
mov
adc
adc
or
ja
inc
movsl
sbb
mov
je
aaa
jb
or
test
xor
sahf
jo
sub
pop
lock
je
pop
cmpsl
divb
adc
or
shrb
mov
push
loopne
pop
xor
xchg
jne
jmp
mov
test
pop
into
inc
cmc
stc
scas
or
xor
xor
jno
lea
int3
ja
inc
loope
push
xchg
inc
outsb
stos
xchg
inc
lods
in
or
mov
aad
sbb
add
inc
scas
adc
inc
jo
cs
fildll
insl
lea
fidivrl
addr16
push
das
dec
das
add
ljmp
jecxz
add
cmp
int3
sarb
adc
cmp
notb
mov
push
mov
jp
cltd
lds
fstpl
icebp
mov
adc
inc
mov
jg
andb
mov
out
push
mov
xor
jge
loope
mov
mov
pop
fld
clc
mov
sub
mov
mov
push
jmp
lahf
fisubrs
daa
inc
pop
int
cmpb
cld
cmp
movsb
sahf
push
or
and
jmp
ja
scas
pop
pop
out
lcall
sbb
pushf
enter
mov
dec
scas
cmp
int3
mov
int
or
leave
jns
or
mov
in
sub
ljmp
pop
aas
adc
jns
and
sbb
movsb
stos
stos
ret
xchg
push
fiaddl
adc
xchg
mov
mov
test
popa
cs
cmp
dec
fisttpl
push
imul
xchg
adc
repz
pop
pop
pop
sub
fsubs
clc
in
in
sbb
lods
cmpsb
in
mov
jmp
mov
jl
and
add
sub
in
mov
lods
test
es
xchg
add
cmpsb
jne,pn
dec
dec
fdivp
sarb
add
add
xchg
sub
dec
sti
push
or
cmp
mov
adc
push
sbb
xchg
pushf
xor
ror
bnd
add
jecxz
ja
jb
adc
les
rolb
aas
outsb
jge
jns
aam
mov
jg
loop
pop
dec
add
test
pop
adc
mov
pop
xor
push
fcmovnbe
adc
or
push
insb
inc
enter
loop
sub
pusha
xor
popf
pop
scas
cmpsl
jbe
fisubl
scas
add
andb
jp
scas
cmc
jecxz
mov
cmovb
int3
mov
push
int
adc
lods
js
sub
xchg
nop
test
imul
aaa
inc
sbb
push
sbb
push
dec
iret
add
mov
ds
bound
repnz
fidivs
aad
insl
mov
and
cmp
out
mul
pop
add
movaps
sub
pop
rclb
jmp
les
lods
iret
xor
add
jecxz
push
inc
cmp
cli
out
pop
cmc
sub
ds
sub
jae
lock
cmp
and
jmp
std
ret
cwtl
push
mov
jmp
test
mov
adc
or
enter
sbb
mov
pop
and
imul
inc
sub
test
mov
repz
loopne
fildll
flds
cmp
push
fildll
push
or
jns
iret
jg
and
mov
sub
jg
mov
cmpsl
pop
jae
stos
mov
stos
les
sub
es
pop
cmpsl
lea
out
cltd
test
sub
and
mov
inc
push
mov
and
fstl
test
lret
les
loope
mov
push
ret
sbb
mov
push
mov
je
lcall
inc
cmc
call
inc
das
inc
cli
fcmovb
sub
add
xor
cmp
cmp
sbb
fs
cmp
inc
cmp
inc
lcall
push
call
xchg
cltd
jge
adc
aas
xor
mov
mov
cltd
popa
ret
flds
jecxz
aam
gs
inc
outsl
sub
movsl
popf
mov
aas
mov
unpckhps
sub
jg
nop
dec
mov
das
sub
xor
push
mov
and
add
iret
add
mov
mov
leave
mov
lret
adc
out
xlat
imul
push
fidivrl
test
ds
loop
or
rolb
or
add
lcall
inc
sub
clc
push
xchg
and
push
rol
aad
add
fidivrs
cs
inc
push
lds
mov
lods
roll
sarb
lret
pusha
mov
sbb
fsubr
cmp
adc
adc
or
test
addr16
shlb
sub
xlat
iret
out
add
xlat
push
stc
xor
std
rcrl
mov
jge
adc
push
lds
jl
imul
ds
pop
testb
aad
push
scas
test
adc
pop
mov
movsl
mov
imul
push
sarb
notl
cmp
jo
mov
lock
dec
and
mov
and
adc
add
push
cmp
into
scas
jns
adc
daa
sub
pop
fstpl
test
inc
bound
xchg
mov
inc
in
mov
mov
popa
sbb
mov
sub
sub
inc
ljmpw
xor
stc
loope
mov
out
xor
sbb
ljmp
nop
out
in
sbb
push
sub
xchg
push
sub
jb
cltd
stc
fs
cmc
xchg
mov
aas
jno
andb
and
jmp
shlb
fwait
pushf
xchg
loope
out
jmp
es
xor
inc
adc
jp
sbb
xchg
mov
and
pop
mov
adc
cmp
cmp
mov
pop
jl
mov
push
popa
mov
sbb
arpl
dec
shll
pop
in
xlat
subb
lds
mov
xchg
pop
and
and
lahf
push
std
fsubrs
pshufw
popl
xor
ljmp
mov
stc
sub
jge
push
or
fstp
vmovss
ss
xlat
jge
cmpb
xchg
add
mov
or
bound
scas
mov
cmc
adc
mov
or
push
sub
or
push
ljmp
call
or
mov
insl
mov
into
mov
mov
into
and
aaa
cmp
daa
shll
test
lea
into
insb
inc
push
into
xchg
out
fidivs
movsb
arpl
shll
push
aam
mov
xor
sub
lock
ffree
bound
mov
cltd
adc
lahf
outsb
dec
xor
inc
les
xchg
jbe
jle
fisubl
loop
cmpsl
nop
lods
gs
lret
stos
or
inc
gs
pop
adc
push
inc
lret
loop
add
movsb
sub
add
out
mov
rclb
push
js
imul
jo
cmp
insl
cli
testb
lds
cld
repnz
testl
push
sti
dec
leave
mov
outsl
lret
sbb
mov
adc
sub
pop
test
dec
cs
xchg
push
sahf
mov
and
ss
push
xchg
aas
jae
push
hlt
add
cmp
cmp
or
mov
mov
jge
addb
cmc
imul
test
ret
lods
int3
inc
adc
xorl
stos
add
mov
lret
xor
mov
icebp
lret
push
data16
jle
lods
dec
repz
out
push
stos
lods
scas
jecxz
insl
mov
lock
sbbl
pop
push
or
out
pop
andb
clc
fs
test
jae
ds
fbstp
mov
inc
test
and
cmp
fcomip
cmpsl
je
aaa
xchg
out
sub
stc
roll
mov
adc
cmpsb
shll
push
push
ljmp
mov
imul
cmp
xchg
cmp
inc
insb
xchg
sbb
adc
ret
mov
ja
dec
pop
daa
fstpl
pop
lods
push
test
mov
add
inc
ror
insb
mov
lock
and
mov
pop
mov
insl
cmovne
inc
fwait
push
ljmp
adc
ret
in
enter
adc
neg
je
and
lods
xchg
cli
mov
mov
addr16
out
and
leave
adc
inc
jle
es
mov
cli
xor
int
daa
clc
xor
pop
negl
pusha
popf
dec
xor
rcl
add
out
mov
jp
test
xor
add
jns
enter
push
leave
sub
test
inc
mov
cmpsl
xor
lea
xlat
mov
pop
push
pop
iret
inc
or
lds
stos
fs
xchg
jmp
or
push
imul
or
xor
sub
in
lahf
sbb
cmp
imull
rcr
xor
xor
aad
jmp
jecxz
jnp
mov
inc
lds
dec
sbb
pop
loopne
sbb
mov
mov
pop
ret
jg
icebp
icebp
pop
bnd
adc
jo
or
loopne
push
dec
dec
nop
ss
sbb
nop
imul
adc
lods
xchg
jns
xor
fnsave
inc
insl
and
mov
nop
dec
lock
pop
xchg
movsl
add
mov
inc
gs
in
into
out
rorb
sub
jle
ja
xchg
push
xchg
insb
jmp
repz
adc
mov
dec
xorl
popf
or
inc
into
xchg
pusha
jo
fsub
mov
add
sbb
xchg
xor
hlt
xchg
mov
inc
loopne
push
sbb
mov
mov
jno
or
and
loop
push
mov
and
leave
pop
out
sti
xor
mov
fs
idivb
out
std
movsl
xchg
fldcw
push
fsubrp
into
sbb
out
cmpsb
aad
dec
pop
in
aas
jl
dec
testl
push
iret
rcrl
or
movsb
clc
dec
mov
repz
lods
loopne
cmpsb
mov
lods
sbb
xlat
mov
flds
mov
out
ret
jp
idivl
lods
lret
loop
pop
push
insl
fidivs
insl
dec
sub
pop
mov
aaa
in
popa
mov
sub
popa
int3
and
mov
in
stc
mov
fldl2t
ret
dec
in
adc
adc
mov
mov
ljmp
shrl
add
xor
dec
inc
sub
scas
inc
mov
add
inc
movsb
and
faddl
xchg
dec
add
inc
aam
push
es
jge
push
sub
cmc
mov
mov
jo
cmp
test
and
inc
mov
std
fdivp
and
jmp
clc
push
and
movsl
pop
xor
cmpsb
sbb
sbb
idivb
push
mov
mov
repz
mov
lock
push
mov
insl
jnp
clc
adc
jbe
adc
popa
aas
xchg
and
sbb
sub
and
es
lods
mov
call
sbb
lock
xchg
mov
aam
mov
jb
sbb
mov
add
cmpl
fimull
jbe
sub
js
rcl
pop
pop
lods
data16
call
jmp
xchg
or
fcmovu
xchg
push
neg
cmp
lods
mov
aam
or
enter
adc
pop
pop
mov
mov
out
dec
ljmp
push
push
jp
pop
adc
out
gs
sub
les
lds
xor
add
add
int
mov
loop
sub
rorb
push
pop
xor
not
fwait
jg
cs
pusha
sub
lret
jnp
dec
mov
lods
out
je
stc
add
out
mov
inc
adc
pop
sbb
mov
jmp
push
cmp
bound
inc
movlps
xor
xor
lret
push
ljmp
jecxz
pop
fidivs
popa
pop
mov
stos
xor
ja
xor
sbb
ret
push
xor
ret
ret
jns
pushf
pop
nop
pushf
js
stc
popf
adcb
clc
jl
out
pop
jns
push
pushf
out
iret
mov
add
pop
scas
add
mov
and
stos
xchg
mov
ljmp
add
nop
xchg
les
addl
cmp
inc
jo
xor
mov
es
jecxz
add
lods
mov
jmp
dec
sar
cmp
mov
jle
decb
mov
cmpsl
in
xchg
xor
sub
push
pushf
push
mov
mov
cld
jecxz
mov
adc
mov
lods
mov
arpl
lret
lods
sbb
xor
ret
xchg
stos
mov
hlt
sub
nop
imul
mov
rcll
test
and
jns
iret
add
data16
jge
push
jmp
xchg
xor
cmp
aas
pop
mov
bound
out
imul
jae
lret
mov
jb
pop
sbb
inc
pop
add
jns
push
mov
roll
jg
aaa
mov
sub
out
in
dec
mov
movsl
cli
jbe
and
pusha
push
bound
fstpl
outsb
fstps
mov
jle
pop
aaa
ja
cmpsb
fcmovne
mov
lods
pop
and
inc
add
jae
push
stos
sbb
cmp
cmp
pop
shlb
orb
out
addl
dec
xchg
mov
inc
mov
jns
adc
mov
xchg
outsl
mov
sbb
jne
and
pop
out
aas
mov
mov
js
and
fnstsw
lock
or
in
dec
ljmp
adc
or
cmp
xchg
dec
or
inc
fsubl
cmpsl
adc
lea
stos
ret
shll
xchg
fcmovbe
cmpsl
sub
mov
cmp
mov
outsl
and
mov
les
sti
pop
scas
in
sub
sbb
out
cmp
jl
xlat
mov
mov
push
jecxz
cmpsl
je
sahf
std
test
outsb
cld
fxch
mov
jae
push
xchg
imulb
int
mov
movsb
or
sub
outsl
cmc
frstor
mov
xchg
lcall
gs
nop
push
test
bound
das
call
pop
pop
jge
scas
out
pop
mov
imul
jge
xor
scas
sub
pusha
data16
fwait
lret
or
sbb
test
nop
xchg
lret
clc
out
repnz
jbe
out
outsb
out
push
mov
hlt
stc
mov
arpl
nop
out
xchg
adc
cli
mov
bound
lds
or
repz
dec
popf
in
xlat
int
add
fucomi
outsb
jl
jo
adc
xor
arpl
push
lret
imul
into
pop
xchg
add
lock
sbb
in
mov
jecxz
xor
mov
adc
pusha
pop
imul
dec
pop
lock
dec
inc
cmp
jo
sbb
lds
insl
sub
push
outsl
loope
xchg
xchg
jmp
mov
fnstenv
pop
and
enter
sub
mov
lods
popl
jae
or
aad
ret
and
test
fimull
jae
out
ljmp
mov
sbb
mov
inc
frstor
aad
push
imul
mov
push
ss
and
imul
pushf
pushf
bswap
ret
mov
cld
mov
imul
xchg
add
ds
push
inc
lahf
int3
mov
sbb
scas
mov
mov
push
xor
pop
mulb
mov
hlt
es
hlt
and
sti
std
cli
push
inc
push
pop
cs
aad
out
clc
adc
push
dec
sub
or
jge
fistps
insl
lcall
xchg
mov
loope
icebp
sub
movsb
pop
lods
jmp
dec
mov
lds
dec
pop
ja,pt
es
sbb
and
xor
popf
mov
or
cmp
fwait
sub
inc
mov
popf
add
push
imul
mov
pop
fdivl
loop
xor
fisttpl
roll
lea
push
test
adc
sub
mov
pushf
jbe
stos
iret
mov
out
dec
sbb
inc
adc
sub
ljmp
cld
movsb
out
xchg
icebp
xlat
sbb
jle
sbb
rorb
std
cmpsb
add
ret
mov
cmp
mov
mov
add
out
mov
insl
sarb
sub
jns
xor
test
ds
rcr
leave
fidivs
push
xchg
xchg
push
test
mov
jno
cmp
shrl
mov
xchg
scas
pop
lock
adc
out
adc
and
push
daa
shl
cs
outsl
aam
sub
jmp
lcall
movsb
cmp
pop
movsl
xlat
or
insl
mov
fwait
mov
sti
stos
push
xchg
daa
iret
mov
rclb
xor
cs
cli
roll
hlt
mov
mov
xchg
cmp
test
or
mov
dec
sbb
and
shrb
cmp
out
aas
test
pop
jo
stos
push
movsb
cmp
fs
roll
mov
pushf
jo
jbe
pop
into
popa
pop
mov
or
cwtl
fmull
mov
mov
push
sub
and
pop
nop
jmp
subl
hlt
in
ret
dec
and
or
xchg
lret
movsb
mov
shlb
jb
cli
cmp
sub
mov
ret
cs
outsb
add
adc
sub
mov
jbe
fucom
hlt
ret
popf
mov
mov
mov
mov
sub
cmpsb
push
pusha
inc
in
fucom
loope
mov
jp
dec
cmp
push
lods
fcmove
xor
icebp
sbb
or
loope
inc
fildll
ja
ss
insb
shl
mov
dec
xor
jb
data16
xchg
shl
sub
add
scas
lods
and
mov
xchg
bound
adc
addr16
jnp
jmp
mov
stc
in
loop
mov
and
or
push
push
sbb
pop
inc
sbb
out
popa
pop
insl
mov
int
and
test
xchg
and
icebp
stos
mov
shl
cwtl
or
jle
mov
stos
stc
ror
scas
inc
in
shrl
jnp
jge
movsb
repnz
sbb
js
xor
loop
cmp
out
scas
mov
hlt
je
jge
int3
inc
cmpsb
xchg
outsl
jbe
jbe
bound
jb
push
cmpsl
dec
ret
outsb
ficoms
jae
mov
or
cs
xchg
out
stos
aaa
shrl
adc
scas
xor
jecxz
fdivr
sub
orl
out
xor
outsb
jae
push
push
mov
inc
sti
scas
xchg
cmp
sub
into
lock
iret
ds
test
loopne
jae
push
sub
test
jb
xlat
fwait
mov
sbb
int
sbb
subl
aad
xchg
push
push
push
sbb
cmovns
adc
out
sbb
mov
xlat
les
xor
mov
pop
mov
push
pushf
ret
sbb
jecxz
pop
sbb
test
fisttps
popa
shlb
cli
inc
test
jecxz
inc
pop
sub
ret
ret
jns
mov
addr16
xor
add
roll
outsb
icebp
das
inc
pop
xor
sbb
hlt
loope
dec
pop
pusha
pusha
into
dec
and
jge
mov
xchg
ficomps
add
sbb
pusha
insl
inc
es
out
loopne
das
outsl
push
jmp
iret
dec
inc
or
and
jnp
aam
and
push
orl
call
mov
dec
les
sbb
shll
jecxz
xchg
mov
or
and
lret
push
add
xchg
mov
jp
mov
lret
ljmp
xchg
jp
mov
xchg
les
out
fstpt
and
or
xor
notl
push
push
jae
subl
inc
fdivs
xor
push
lds
adc
sub
lahf
push
inc
fstpl
repnz
inc
xchg
outsb
xchg
add
fnstenv
lahf
lock
loope
sub
xor
movsl
insl
divl
movsb
sbb
jne
and
push
jbe
push
sti
dec
outsb
xchg
pushf
nop
xchg
lods
jb
mov
dec
adc
inc
in
fnsave
lods
dec
xchg
icebp
imul
shr
mov
push
rcrl
aad
ja
sti
pop
jg
xchg
stos
mov
xor
cmpsl
sub
mov
int
push
loop
out
xchg
push
jecxz
sbb
lock
sbb
jae
lea
movsb
ret
test
repnz
test
aas
dec
loope
jp
or
mov
cwtl
lods
cli
call
ds
adc
inc
sbb
xor
lock
mov
ss
and
pop
js
enter
daa
ja
inc
subb
out
imul
addr16
jge
mov
hlt
jge
jmp
or
jns
scas
dec
loop
push
add
mov
and
ds
pop
punpcklbw
xchg
cltd
dec
rcl
daa
push
pushf
push
xchg
cld
mov
outsb
pop
cli
push
dec
repnz
rcrl
repz
inc
pop
push
bnd
xchg
in
inc
pop
add
mov
adc
and
xor
pop
shl
aad
leave
push
push
jne
mov
inc
mov
sub
lahf
adc
mov
int3
and
cli
xor
jae
mov
cmp
lods
into
dec
outsb
sbb
cmp
aas
aad
xor
cmpsl
sub
sub
mov
push
push
lea
ja
mov
pop
flds
inc
dec
and
xsavec
mov
xor
or
mov
jbe
das
cwtl
mov
cli
mov
lahf
push
pop
orl
data16
lock
jne
adc
mov
push
xor
dec
add
and
in
pop
iret
push
xchg
mov
push
mov
out
mov
add
pusha
ljmp
shl
dec
sub
test
fnstenv
pop
push
je
lock
cwtl
fwait
cmp
or
ss
adc
outsl
lock
jno
test
cmovno
int
ja
pop
inc
cmpsl
jge
sti
push
pop
sbb
xchg
out
out
mov
sti
mov
pushf
lock
loope
ds
imul
call
xor
jge
jbe
ret
and
popa
pop
and
into
and
pop
cmp
jne
rcl
sbb
enter
dec
dec
gs
mov
and
mov
cwtl
aas
sbb
mov
out
jge
dec
sub
jnp
test
jle
bnd
fmul
sbb
add
test
idivb
and
push
lock
jmp
daa
fucomip
out
out
jae
pop
call
rcll
mov
mov
and
mov
push
mov
shl
xchg
xchg
imul
movsb
add
add
cmp
loopne
imul
sahf
out
cmp
dec
push
not
test
cltd
xor
fsqrt
and
jmp
iretw
jae
add
mov
fwait
cmpb
stos
cli
sbbl
inc
bound
out
pop
dec
xor
shrl
pop
or
adc
push
js
cmp
fmull
sbb
ss
loopne
bound
jecxz
adc
inc
dec
js
sbb
sub
mov
out
out
ja
cmc
mov
jno
sbb
add
push
mov
rorb
out
add
shlb
cs
stos
jecxz
cld
out
sbbb
out
testl
fwait
xchg
sbb
dec
sbb
inc
lds
xchg
dec
movsl
sub
pop
dec
mov
mov
adc
xor
pop
mov
hlt
clc
pushf
movl
xor
sti
nop
lock
mov
jno
mov
arpl
cli
lods
mov
fdivrp
in
or
pop
sub
or
mov
sbb
pop
incl
ror
ret
sbb
mov
push
xchg
sub
sbb
mov
jecxz
xchg
lret
fs
adc
push
xchg
xchg
js
fwait
shrl
adc
roll
sub
xor
aas
sbb
mov
cmpsl
imul
fs
in
cmp
dec
ja
cmp
inc
inc
pop
pop
test
mov
in
pop
push
lea
int3
add
and
lahf
adc
push
xor
cli
mov
mov
insb
in
mov
xchg
lahf
mov
shl
inc
call
or
pop
add
lret
sahf
lcall
xorl
sub
sbb
cmp
outsl
push
je
jmp
xchg
add
dec
mov
add
jecxz
xchg
mov
mov
paddusw
adc
cmpb
and
mov
pop
fldt
pushf
leave
dec
pop
repz
or
out
gs
cmpb
out
push
push
es
add
xor
jns
jnp
std
dec
cmp
mov
daa
hlt
jno
inc
arpl
xor
test
xlat
xchg
pop
rolb
pop
hlt
pop
ljmp
pop
push
xchg
test
sub
push
shlb
add
int
xchg
push
inc
iret
adc
inc
push
inc
mov
pop
bts
repnz
xor
aam
mov
push
fiadds
sub
push
lret
adc
cmpl
add
xor
repz
add
sbb
leave
mov
test
xchg
jns
cld
pushf
or
xor
shl
jp,pt
sub
pushf
pop
mov
push
pusha
aaa
mov
push
insb
test
lock
inc
pop
inc
sub
xchg
mov
pop
gs
xchg
leave
pop
call
adc
ds
int
xchg
mov
fidivl
mov
lods
int
add
stos
xchg
adc
and
mov
aam
xchg
mov
inc
int
stc
dec
jl
aaa
xorb
xchg
gs
cmp
sub
out
inc
sbb
stos
fildll
sub
lock
xor
push
int
adc
notb
cwtl
stos
adc
cmp
call
pusha
sub
lret
in
imul
fildll
sub
xchg
into
or
inc
out
sub
ret
arpl
push
mov
int3
dec
push
push
scas
jo
enter
aam
xchg
dec
popf
lock
inc
jmp
popa
cmp
cli
and
and
pop
push
sti
sbb
nop
inc
test
jecxz
jae
cli
into
cwtl
cmp
pop
xchg
outsl
roll
xchg
ds
pop
cld
jo
lret
mov
fdiv
in
push
insb
inc
sbb
cmpsl
mov
clc
insl
pop
das
cmc
flds
notl
loop
mov
xchg
repnz
xchg
sbb
test
push
pop
push
imulb
out
shll
lods
daa
jp
out
dec
xchg
pop
sbb
cltd
insl
push
pop
push
add
and
xor
push
cld
mov
addr16
pop
addb
fiaddl
add
jge
sub
lahf
nop
xchg
jecxz
popa
fistpl
inc
das
cmp
lods
and
stos
mov
daa
sbbl
es
fidivrl
add
jnp
subb
out
pop
sub
add
inc
bound
add
dec
pop
lods
daa
std
dec
add
cmp
sub
lods
or
or
insb
cs
hlt
cmp
cmpl
and
sbb
or
jb
inc
ret
call
data16
mov
das
cmc
dec
in
push
and
shlb
jb
inc
les
es
iret
call
or
iret
xor
push
jbe
ljmp
sarl
popa
lock
ss
adc
rorl
mov
popa
mov
pop
or
cmp
faddl
push
es
mov
rcrl
int
push
push
in
imul
call
push
addr16
fstl
xor
cmc
mov
lods
sbb
mov
cmpb
out
int3
sbb
icebp
int3
pop
push
push
lds
lret
push
dec
ss
fwait
or
movsl
jb
fsts
iret
add
mov
mov
ror
outsl
jl
push
dec
and
push
xchg
pop
int3
leave
mov
lcall
bound
popa
push
mov
sbb
pop
mov
clc
dec
stos
lret
mov
push
in
sub
int
test
jg
iret
and
fdiv
inc
add
pop
insl
ficoml
cld
icebp
jmp
push
cld
leave
mov
stos
jmp
and
jge
fsubrs
repnz
arpl
push
mov
mov
out
popf
cmp
sub
jmp
outsb
cmc
lcall
out
rcrl
cmp
iret
aad
add
cli
mov
or
inc
add
test
add
lods
pusha
cmc
into
mov
clc
or
xchg
orb
loop
push
cmp
add
mov
xor
xor
sub
push
insb
jnp
or
push
cwtl
sbb
jmp
push
mov
fs
mov
mov
idivb
insb
stc
ja
push
add
dec
or
sahf
cli
daa
sbb
mov
scas
push
xor
xchg
imul
loopne
push
mov
ss
outsb
in
cmpsb
or
call
mov
jecxz
xchg
fnstenv
push
cmp
test
mov
int
lret
movsl
aam
shr
push
pusha
test
push
aam
bound
push
mov
clc
icebp
and
dec
rcrb
dec
pusha
jg
pop
outsl
mov
inc
push
push
out
sahf
xor
dec
mov
cmp
push
and
xchg
add
fs
xor
aam
adc
nop
movsb
test
dec
data16
aas
nop
sti
or
jnp
loop
jbe
inc
push
dec
jo
mov
ss
leave
mov
xor
add
jnp
push
mov
inc
pop
mov
call
repnz
dec
jp
in
cmp
out
and
mov
jp
shl
cmp
cmp
jmp
inc
ret
push
mov
leave
adc
pop
xor
dec
push
sbb
push
or
mov
sbbl
pop
and
test
nop
sub
dec
icebp
add
jnp
mov
repz
fcoms
call
daa
stos
fmull
push
clc
lock
ss
les
ret
cmp
adc
test
dec
or
cmp
push
out
jge
in
fcmovnbe
push
mov
sbb
ret
pop
fists
fsubrp
and
notl
fistl
mov
jns
sbb
dec
ret
mov
fistl
push
mov
cld
lret
jbe
jo
mov
out
test
vshufpd
xchg
and
rcrb
das
jg
stos
jne
xor
sahf
outsb
pusha
jne,pt
jbe
add
cmc
push
orb
jp
fbld
jbe
pop
ja
adc
dec
lods
or
adc
or
add
jge
scas
adc
call
xor
xor
cmp
imul
ror
sub
add
sbb
push
repnz
pop
adc
xchg
sub
ja
pop
leave
xchg
adc
dec
fisubrs
fs
jmp
out
jg
inc
xchg
test
xchg
jmp
cmp
or
test
lods
jp
sbbb
sub
pop
fnclex
cmp
icebp
sti
sub
pop
and
cs
sub
pop
inc
cmpl
jns
fbstp
mov
xchg
ss
in
pop
std
dec
adc
out
sar
shl
mov
jle
mov
roll
lds
mov
mov
dec
sti
inc
xor
cmp
cmp
xchg
sarl
xchg
mov
inc
jg
mov
push
iret
sar
xchg
adc
mov
or
dec
pop
sbb
fs
js
das
out
sub
sbb
or
mov
popa
test
cmp
bnd
cmpsl
jae
mov
push
stos
sarl
lods
mov
and
push
sbb
cltd
clc
sahf
popf
lods
xlat
mov
inc
out
lcallw
sub
icebp
lock
pop
push
enter
mov
jmp
cmp
stos
inc
inc
movsb
leave
and
sti
out
in
mov
mov
jnp
jle
or
repz
mov
loopne
rolb
sahf
loopne
popl
cmpb
gs
sbb
mov
and
sub
mov
xor
sub
jo
adc
pop
sbb
fidivrl
iret
xchg
loope
push
repz
push
lahf
inc
imul
dec
inc
xor
mov
inc
mov
mov
in
aaa
mov
xchg
cld
movsl
jae
mov
pop
arpl
and
insl
xor
mov
in
arpl
pop
cmp
xchg
cmp
out
out
imul
fidivs
fdivs
in
mov
cmp
pop
ja
inc
adc
fldt
std
cmp
push
jp
and
les
test
push
arpl
push
add
mov
cmpsl
push
test
aaa
xchg
enter
jmp
cmp
cmc
xor
cmp
or
jl
out
icebp
xchg
dec
mov
adc
scas
xorl
pop
jo
ljmp
data16
ja
pusha
in
sub
lret
mov
daa
jno
add
add
int3
xchg
push
rolb
jbe
mov
mov
subl
xor
out
sub
pop
leave
dec
push
jnp
mov
dec
ja
xor
shlb
jg
mov
incl
ficomps
out
pop
roll
cmc
notl
cmp
lock
xor
push
imul
pop
inc
and
dec
icebp
imul
jns
mov
mov
mov
xchg
or
mov
pop
outsb
mov
jle
adc
inc
sbb
ja
jecxz,pn
and
xchg
and
jle
xchg
rcrl
add
pop
test
inc
xchg
push
into
or
xchg
inc
pop
pop
clc
aas
jge
push
fwait
dec
push
push
ret
fcmovnu
insl
sbb
pop
add
xor
jp
rcll
push
xor
push
and
jnp
mov
cltd
lret
mov
xlat
mov
repz
ss
push
jmp
fcomps
adc
sbb
cwtl
cltd
or
pusha
cmpsb
mov
pop
ljmp
push
xor
or
mov
push
fadds
fs
xchg
loop
push
jae
mov
fdivl
pop
sub
icebp
out
push
daa
aam
repz
insl
jns
bound
iret
mov
add
aam
xchg
sub
je
mov
aam
xchg
push
xor
aaa
xorb
lock
jle
mov
fstpt
popa
push
fcmovnu
clc
out
out
mov
rclb
in
sti
fisttpll
mov
loop
mov
ja
mov
lret
push
int
jno
xchg
nop
xchg
jge
cltd
jnp
mov
stc
aam
cltd
lock
js
add
imul
imul
mov
mov
mov
push
push
mov
xchg
cmp
pop
repz
rorl
ljmp
push
cwtl
adc
repnz
shlb
xor
adc
fisubl
int3
xchg
and
dec
rorl
packuswb
push
xor
mov
sub
rorb
incl
cs
dec
mov
inc
dec
xor
dec
bound
mov
mov
push
ja
orb
pop
xor
xlat
cmp
sbb
mov
bound
out
cltd
jo
cmp
mov
jl
mov
fcoml
stc
or
pop
aaa
gs
lret
mov
insb
sub
rcll
mov
inc
loop
int
sbb
sub
loope
fildl
stos
dec
sub
jae
add
adc
inc
and
lds
ja
fcomps
cmpsb
adc
cmpl
push
inc
sub
dec
inc
cmp
call
inc
les
test
lods
lea
sbb
mov
lods
pushf
iret
sub
mov
sub
aad
insb
jp
pop
adc
lahf
jns
fbld
inc
repz
xchg
insb
bound
sub
adc
cmpsb
adc
xchg
add
std
orl
xor
movsl
push
es
add
sub
hlt
xor
aaa
push
pop
lods
insl
enter
xor
inc
cmp
js
adc
imul
jg
stc
jb
das
inc
and
mov
inc
shl
jno
inc
xor
insl
jmp
pop
inc
adc
mov
sbb
dec
int
sub
sbb
pushf
in
arpl
mov
pop
and
or
add
ljmp
stos
sub
push
popf
frstor
xchg
ja
push
in
imul
inc
inc
sub
inc
mov
push
or
iret
xchg
pop
jl
mov
mov
lods
push
rclb
jno
push
insb
aas
cmpl
xor
and
dec
imul
inc
in
mov
in
cwtl
repz
or
pop
fistpll
xchg
fistpl
dec
pop
push
je
repnz
push
jb
fnstsw
push
jns
popf
shll
push
mov
mov
fidivrs
mov
mulb
test
das
lahf
jmp
and
fsubp
mov
lods
fsubr
cmc
fidivs
test
cld
xchg
pop
mov
push
inc
les
iret
push
scas
and
sahf
cmp
in
xor
xchg
shr
out
lods
add
lock
ds
xor
aad
gs
pop
mov
js
xor
cmpsb
mov
sub
mov
push
pop
lcall
cmp
push
xchg
inc
out
jb
adc
dec
lret
in
ja
loopne
push
dec
pop
mov
repnz
notb
leave
pop
cmp
cmpsb
scas
jecxz
jb
rcrl
lds
inc
xor
imul
pop
mov
jle
fadds
subl
loope
mov
aad
dec
stos
dec
mov
aas
jno
dec
lock
add
mov
fcmovb
fiaddl
dec
clc
mov
stos
inc
pop
pusha
push
mov
jmp
decb
out
pop
cmpsb
or
xchg
pop
add
jmp
call
pop
fwait
xchg
cmpsl
jmp
mov
mov
push
mov
enter
pop
jp
or
lret
sbb
or
mov
inc
iret
dec
aad
xchg
jns
push
nop
jns
pop
filds
push
mov
pop
mov
sarl
nop
cmp
data16
mov
xchg
jno
andb
stc
ret
out
mov
cmc
test
add
pusha
or
sbb
cmp
test
addr16
dec
adc
mov
lds
daa
scas
sub
mov
out
call
pop
ret
mul
test
mov
jo
mov
sbbb
adc
fidivrl
ss
out
add
popf
cmpsb
gs
rol
movsl
jne
movsl
mov
cmp
sub
outsb
cli
cli
stos
es
push
pop
pop
shrl
bound
imul
push
jb
jl
xchg
imul
xor
cmpl
jno
jecxz
movsb
adc
loopne
cmp
xchg
jecxz
fistpl
xchg
xchg
je
fs
xor
xchg
sub
xchg
adc
mov
shll
popa
and
dec
xorps
repnz
shrb
mov
out
stos
call
sbb
cmp
outsb
loope
cmp
pop
test
imulb
mov
cltd
jmp
lods
into
fcomp
jns
leave
and
jae
insl
sbb
xor
push
jl
jmp
dec
ljmp
aaa
xchg
or
sub
jg
call
cwtl
xchg
cs
fisubs
out
lea
jb
pop
add
cwtl
lds
jg
mov
inc
sub
sbb
fcoml
arpl
and
mov
orl
repnz
dec
mov
jbe
pop
adc
sub
lcall
mull
dec
push
dec
sub
xchg
aas
adc
and
aam
pop
je
xor
test
mov
pxor
xor
fs
cs
and
mov
hlt
es
or
push
or
mov
stos
incl
mov
int
fstpl
lret
loope
jno
adc
test
std
mov
push
outsb
inc
xchg
int
pop
lahf
adc
es
aas
mov
pop
dec
xchg
mov
inc
clc
mov
jo
aam
out
rolb
pop
jmp
adc
dec
pop
mov
dec
cltd
divb
iret
push
inc
xchg
mov
cmc
scas
xor
adcl
filds
adc
hlt
fldz
mov
les
mov
orl
outsl
scas
or
push
sbb
out
fwait
mov
xlat
pop
and
data16
mov
or
cmp
and
push
scas
std
sub
js
inc
lds
xchg
in
lret
and
cmp
fldenv
xchg
fwait
pop
mov
lock
out
xor
out
xor
cmpsb
mov
jmp
in
stos
shrb
push
pusha
bound
pusha
push
jle
jecxz
shr
sub
mov
lods
orb
pop
fsubrp
lcall
sbb
pop
leave
mov
push
add
mov
and
clc
push
int3
cli
fidivrs
pop
ret
lods
mov
or
shrb
addr16
pop
out
leave
addr16
lods
xor
mov
xchg
adc
pushf
mov
fwait
jle
lahf
out
mov
or
jbe
add
cmp
stos
sbb
cmp
subb
movzbl
dec
cmpl
lods
outsl
push
out
aas
sub
mov
cmpsb
mov
adc
outsl
dec
stos
nop
ja
jl
dec
loopne
dec
pop
aad
xor
xor
out
ja
mov
push
cli
jl
adc
addr16
jg
lcall
lret
mov
pushl
add
push
adc
sub
out
jmp
das
sbbb
leave
enter
xor
or
out
inc
cltd
cmp
sub
mov
push
aam
lods
mov
sub
inc
shr
ss
pop
mov
hlt
bound
aaa
xchg
push
daa
ds
popfw
ret
dec
xchg
mov
add
out
daa
pop
js
std
shl
leave
daa
sub
es
inc
lea
push
inc
clc
icebp
adc
cld
xor
aas
lods
cmp
sti
roll
lock
inc
loope
cmp
negb
mov
xchg
call
dec
pop
sbb
ret
cmp
xorb
in
add
push
mov
insb
xor
sub
push
mov
mov
hlt
and
mov
jp
xor
push
push
andl
out
mull
stos
inc
idiv
jo
xor
jp
sbb
sub
or
std
push
ret
dec
lcall
xlat
sahf
leave
mov
sbb
imul
mov
arpl
pop
xlat
sar
mov
dec
test
dec
jne
enter
push
jne
shlb
inc
mov
shrb
into
nop
sar
push
test
std
inc
outsl
pop
mov
jecxz
ds
mov
int
adcl
rol
into
xchg
mov
pop
or
xor
or
shrb
mov
or
cmp
and
ret
notl
pop
push
nop
cmc
mov
shlb
cmp
jge
push
cwtl
xchg
inc
mov
daa
aad
fsubs
jge
cli
inc
push
xchg
dec
bound
daa
and
xor
lahf
in
cld
aam
cltd
dec
add
xchg
fwait
jmp
call
dec
rcl
adc
cmc
fcoml
sahf
xorl
maxps
fsubr
fistl
mov
sbb
sub
lcall
inc
and
mov
ljmp
insb
lds
inc
aas
push
mov
adc
cmp
mov
nop
cmp
ja
test
sub
add
xor
push
stos
shlb
cli
push
data16
or
and
pop
test
cmp
ljmp
out
in
or
or
lds
out
lcall
xchg
sbb
je
xor
cmp
push
xor
dec
sbb
scas
fiadds
mov
lds
add
outsl
sbb
xchg
pop
dec
jns
jp
loop
mov
xor
jns
cltd
xor
cmp
xorb
dec
dec
loopne
movl
les
outsb
fsubrs
mov
sub
cmc
scas
jnp
js
insl
shlb
push
dec
addb
js
mov
mov
repnz
jae
leave
or
jge
mov
or
mov
inc
cli
push
mov
out
in
sub
imull
lahf
outsb
jp
out
fiaddl
sahf
mov
push
repz
pop
enter
jmp
dec
inc
xchg
clc
xlat
mov
ja
xchg
xchg
jno
mov
fcom
mov
mov
pop
cmp
outsb
std
cmp
aaa
lahf
pop
lret
fcmovnbe
out
mov
hlt
lahf
and
aam
les
repnz
lods
dec
in
fwait
loopne
or
sub
cmpsb
je
mov
loope
push
pusha
pop
fsubp
out
jbe
jge
scas
insl
jb
push
loopne
cmp
shr
test
pop
movsb
stos
dec
push
push
pop
adc
mov
loopne
data16
push
jo
dec
push
loop
mov
cmp
push
rcrl
mov
fisttpl
adc
dec
movsl
push
cmpl
adcl
lods
sbb
fidivs
push
jl
ja
pop
sbb
ss
shrb
inc
pop
rep
shll
insl
inc
jbe
lods
out
and
push
data16
jge
pop
dec
pop
xor
push
or
das
data16
outsl
and
xor
js
xor
xor
mov
es
pop
outsb
iret
mov
insl
outsb
mov
cmp
push
pop
adc
jecxz
sbb
cwtl
jb
xchg
popa
mov
pop
jbe
enter
fadds
shll
test
fcomp
dec
cld
inc
jg
ljmp
dec
xor
bound
nop
mov
push
testl
lods
out
dec
call
add
out
imul
in
sub
aam
jmp
sbb
aas
push
inc
adc
lds
sarl
cs
push
pop
add
sub
pusha
mov
dec
cmp
push
popf
lahf
aam
arpl
rol
mov
jno
nop
or
ret
out
insl
xlat
xor
fmull
fiaddl
sbb
mov
lods
pop
orb
insl
mov
aaa
enter
dec
loop
shll
cmpl
ljmp
mov
pop
push
insl
lods
lcall
add
ds
jecxz
test
mov
out
loop
pusha
dec
jecxz
mov
push
and
mov
xor
push
or
cld
mov
nop
xor
sub
add
mov
sbb
or
cwtl
mov
and
orb
xchg
mov
lods
mov
aam
sub
or
mov
and
std
jg
cmpl
sbb
pushf
mov
jne
les
cld
dec
xor
jbe
mov
mov
add
push
xchg
faddl
pop
fnstcw
mov
out
sbb
scas
shrl
xor
and
jae
pop
into
imul
mov
mov
sub
fistl
out
scas
sbb
mulb
shlb
mov
lock
aad
es
sbb
mov
adc
sahf
in
xchg
jae
xchg
cmpl
or
jnp
jp
cmp
sub
popf
jge
andl
xchg
add
or
leave
loopne
dec
inc
mov
cs
nop
lret
mov
jmp
or
cmc
cmp
dec
pop
pop
sub
icebp
aad
dec
mov
xlat
jae
xlat
add
or
pop
mov
mov
stos
cs
jle
jle
mov
push
xchg
cmp
xlat
mov
bound
and
adc
movb
lahf
test
mov
rcrb
add
je
sbb
arpl
and
shrl
xor
repz
jns
es
mov
sti
repnz
insb
sub
and
or
cmc
shlb
addr16
outsb
or
xchg
ret
or
and
xor
nopl
xlat
jne
xchg
dec
ja
mov
push
aad
xchg
sub
enter
pop
or
inc
push
flds
popf
aas
test
mov
rorb
popf
sar
inc
adc
or
int3
mov
ret
cmp
repnz
aaa
sub
cmpsl
or
fidivl
push
icebp
pop
mov
sub
sti
cli
loop
ljmp
movsl
mov
orb
jmp
xchg
push
ss
scas
test
cwtl
add
fdivrs
es
fs
dec
xor
fwait
mov
jl
sti
ror
shlb
xchg
addr16
insl
fs
jno
ljmp
into
andl
xchg
rcr
cmp
pop
dec
ret
adc
scas
arpl
inc
add
in
das
mov
push
insl
xchg
xchg
mov
adc
mov
ret
jno
loopne
and
adc
sbb
pop
inc
pop
imul
jbe
popf
in
sahf
jecxz
xchg
and
xchg
push
int3
or
xor
or
or
imul
insl
loopne
cwtl
aam
or
xchg
out
loopne
aam
test
pop
mov
xlat
sbb
mov
jle
mov
xor
inc
pushf
xchg
push
aad
cmp
cmpxchg
call
arpl
dec
in
mov
push
insb
mov
jns
sbb
mov
inc
and
inc
pop
dec
fcompl
rorl
repnz
aad
mov
add
push
mov
cwtl
xor
fldenv
cmpsl
xor
nop
mov
hlt
xor
bound
push
std
popf
fidivs
jne
aad
adc
outsl
cmp
cltd
jg
dec
in
int
insl
push
dec
mov
aam
mov
ljmp
push
mov
imul
or
das
mov
pop
sbb
aad
dec
icebp
fimull
add
mov
andl
adc
out
cli
and
add
xlat
repnz
adc
inc
out
bound
and
sub
dec
inc
add
jg
jno
lret
xor
jo
daa
pushf
arpl
and
jle
test
cmp
in
ret
inc
xchg
das
mov
data16
ja
ja
adc
shl
std
cmp
push
inc
int
jge
out
cmpl
sbb
mov
add
jmp
mov
jge
scas
pop
pop
popf
dec
xchg
pmaxsw
ja
xlat
lret
sarl
cmp
push
or
cmp
insb
in
addl
mov
ljmp
out
push
dec
enter
cmp
icebp
push
clc
dec
xor
mov
dec
aaa
add
ljmp
mov
movsb
and
lahf
cmp
sbbl
lods
lahf
jns
mov
cs
push
test
aam
stos
add
cmpsb
int3
xor
inc
ljmp
test
outsb
push
push
inc
pop
or
or
sbb
mov
fstps
pop
imul
pop
cmp
mov
jecxz
add
xchg
mov
js
sub
sub
lcall
imul
ja
adc
movl
sti
iret
hlt
out
xor
mov
sub
sub
mov
mov
lock
pop
xchg
or
add
add
rcrb
add
int3
push
pushf
mov
daa
jae
fldl2t
ret
aam
push
aas
dec
lcall
aas
pop
push
hlt
sbb
repnz
mov
or
fwait
enter
cmpsl
dec
push
adc
fistl
sub
lahf
pop
adc
cli
inc
jne
add
sub
xorb
mov
sbb
ja
jmp
outsb
ror
pop
mov
out
dec
lods
loopne
pop
jle
push
cltd
fsubp
repz
xchg
xlat
cmpsb
add
mov
sbb
mov
andb
xor
imul
lcall
jns
sub
xchg
fdivp
dec
test
shll
sti
mov
cmp
iret
mov
add
push
outsl
jp
adc
in
movsl
mov
int
add
lahf
insl
dec
jae
push
xor
les
loope
in
cs
xchg
mov
das
sbb
in
jge
mov
rorb
mov
inc
inc
ja
or
pop
dec
jle
xor
insb
ljmp
mov
push
or
lcall
pop
mov
ret
push
sbb
cmpsl
pusha
or
ret
dec
mov
fnstcw
and
daa
pop
pop
pop
leave
mov
mov
pushf
mov
xor
push
push
lods
cmpsb
push
int3
fimull
cmpsb
mov
stos
mov
or
icebp
xor
in
les
adc
pop
movsl
mov
lods
pop
sahf
sub
sub
les
dec
cmpsb
cld
jo
bnd
daa
push
addr16
in
movsl
inc
pop
iret
js
lret
xlat
cmpsl
pop
cmp
lret
inc
push
dec
sbb
dec
dec
inc
mov
cmp
fisttps
jne
pop
mov
jmp
or
inc
jmp
add
clc
xor
imul
sti
mov
inc
dec
das
ja
xlat
mov
sahf
pop
add
pop
hlt
push
add
pushf
out
pop
dec
fcompl
loop
dec
jo
ds
push
or
mov
adc
shrb
dec
cmp
fwait
jle
insb
stos
movsl
sub
xor
sub
add
mov
nop
sbb
in
jno
dec
imul
and
inc
inc
or
loop
and
in
addb
idivl
mov
imul
cld
fisttpl
call
divb
inc
inc
test
in
adc
repnz
and
pop
pop
pop
out
adc
je
daa
lea
arpl
cmpsl
and
mov
xchg
mov
ss
pop
cmpsb
cmpsl
in
outsb
nop
or
mov
jns
mov
negb
sbb
sarl
btr
and
lret
push
jnp
and
push
bound
pop
xchg
in
inc
push
out
popl
test
shlb
ljmp
pop
jnp
fwait
insl
test
pop
jns
ljmp
sub
lds
gs
push
aas
mov
mov
or
add
js
nop
sbb
test
mov
push
enter
imul
sbb
sbb
pop
mov
dec
ffreep
inc
aas
and
ds
fstps
jno
jb
hlt
mov
adc
repz
cld
repnz
insl
int3
sub
jno
pop
pop
pop
cmpsb
xchg
sbb
adc
lcall
clc
imul
push
xor
scas
test
xchg
or
cs
dec
mov
push
xchg
outsb
mov
pop
xchg
nop
rcr
cmp
sarl
pop
mov
xor
and
scas
push
inc
ja
add
mov
je
mov
aaa
pop
fwait
out
inc
pop
sahf
adc
push
incb
jl
or
and
xor
inc
mov
dec
jns
das
pushf
inc
sbb
mov
adc
popa
cs
inc
daa
jo
inc
xor
ljmp
mov
sbb
bound
push
mov
iret
lock
adc
fsubrs
je
stos
mov
flds
xlat
mov
and
std
fmull
mov
repz
ret
jmp
inc
and
aad
clc
inc
addl
jb
int3
pop
add
test
sbb
pop
insb
out
dec
mov
add
dec
int3
popa
shrl
mov
dec
in
fistl
inc
pop
inc
push
sbb
inc
lea
stos
mov
xchg
pushf
xchg
mov
test
fsubrp
push
rcrb
into
pushf
daa
stos
jno
xchg
or
sbb
out
fstl
jmp
jnp
call
lds
push
pop
in
popa
ljmp
xor
les
popf
jg
mov
hlt
adc
cmc
clc
adc
mov
jle
sbb
jp
xor
nop
mov
or
xorl
sar
jne
int3
jmp
ret
push
push
and
xlat
xchg
cmp
loope
notb
xchg
jne
add
push
arpl
int
outsb
dec
mov
jae
dec
imul
or
test
sahf
pop
cltd
and
cmp
mov
xchg
aas
mov
cmp
dec
push
push
adc
cmp
jl
inc
sahf
sbb
sbb
pop
loopne
rcl
popa
stc
shll
pusha
push
pop
outsb
cmp
sahf
sub
repz
jnp
and
cli
js
out
lahf
push
jns
popf
fs
lret
jb
int
pop
inc
hlt
movl
icebp
push
inc
ja
pop
push
cmpsb
and
pop
add
fiadds
xchg
fwait
adc
jbe
or
inc
andb
fmul
push
loope
scas
pushl
xchg
scas
jl
in
ja
fcoml
push
cmp
jge
cmpsl
sbb
xor
stc
and
dec
and
xchg
mov
pop
subl
icebp
sub
jbe
rcr
adc
push
rcrl
mov
dec
jnp
shlb
stos
sub
neg
out
jo
repnz
loopne
pop
cmpsl
sbb
sub
or
lahf
fwait
js
sub
dec
es
cmp
cwtl
inc
je
hlt
xor
jns
jno
xor
xchg
or
comiss
test
jo
sbb
cmc
adcb
mov
in
test
sub
fsubl
sarl
je
sar
mov
bound
push
fs
sub
movb
lea
push
cmpb
mov
iret
sysret
aam
sbb
add
jo
jno
ret
scas
je
inc
aam
and
add
out
std
add
js
out
fisttpll
ret
sbb
insl
xchg
test
xchg
mov
or
dec
jbe
push
push
mov
sbb
fdivrl
cwtl
das
add
repnz
and
ja
jb
pushf
push
pop
jl
fnstenv
subb
rcll
cmp
sub
mov
or
xchg
leave
push
or
mov
adc
shl
scas
dec
jb
cmp
sarb
sbb
fldt
fbld
mov
fildl
and
push
mov
test
fstps
jle
in
ja
mov
jp
jmp
mov
and
test
mov
in
mov
into
in
ret
stc
or
push
pop
loope
lds
pop
into
push
outsl
pop
adc
and
sti
shll
in
cmp
cmp
cmpsl
adc
xlat
test
jmp
stos
adc
leave
iret
jae
mov
fimull
daa
rorb
sub
in
je,pt
xor
fisubrs
xchg
popf
cli
mov
enter
mov
pop
ja
sub
lds
sbb
inc
inc
int
scas
add
and
inc
cmovns
push
loope
pop
popl
lcall
sbb
cmp
sub
and
inc
pop
cmp
dec
mov
push
or
aam
iret
scas
mov
or
lcall
in
lret
mov
pop
cmp
fnstenv
inc
dec
leave
and
loope
fstl
fmuls
inc
or
mov
jmp
inc
xor
pop
sti
movb
lods
pusha
in
xor
jae
cmpsl
fnstcw
or
mov
cmp
hlt
push
dec
push
xor
cwtl
inc
pushl
sub
add
and
or
hlt
hlt
mov
and
not
sar
dec
and
cmp
cmp
ss
mov
xor
or
jno
pop
jnp
add
shll
dec
fstpl
sub
mov
xchg
jne
adc
mov
xor
mov
jmp
push
jne
xor
mov
and
cmpsl
nop
push
cmpsl
mov
in
aam
and
xchg
es
int
lock
jb
rorl
pop
xchg
mov
sbb
push
aad
std
push
xchg
js
jne
pop
outsl
push
mov
icebp
int
cmp
ret
mov
fiaddl
mov
push
mov
dec
ja
aam
daa
cltd
in
xor
mov
popa
lcall
mov
push
add
push
cld
gs
addl
sub
stc
mov
push
sub
sbb
add
or
push
fisubrs
lods
sbb
pop
xor
inc
lea
dec
sbb
shrl
pop
idivb
dec
andb
mov
enter
in
les
add
xor
jl
neg
lods
hlt
or
scas
cwtl
pop
dec
scas
push
and
push
and
jnp
mov
ret
pop
jmp
lcall
fs
clc
cmp
mov
je
repnz
lahf
dec
and
scas
inc
js
pop
decb
xchg
or
or
xchg
mov
adc
roll
and
dec
push
mov
dec
jmp
dec
mov
mov
in
nop
stc
mov
ja
mov
xchg
add
adc
fidivrl
jns
pushf
and
sub
mov
mov
xchg
shrb
mov
mull
jge
adc
in
xlat
inc
inc
scas
mov
dec
inc
pusha
outsl
loopne
adcl
stc
jb
jb
dec
ffree
mov
and
pop
in
cmpsl
pop
int3
mov
ljmp
add
test
push
loopne
xchg
inc
adc
bound
or
or
sti
imul
hlt
and
fwait
inc
push
xchg
ja
mov
mov
mov
in
inc
mulb
sub
pop
stos
and
fdivrp
add
insl
add
loopne
ror
fwait
dec
inc
mov
shll
shrb
push
out
mov
test
xchg
aas
push
loop
dec
lods
push
addb
leave
sbb
stos
lods
add
movsb
xlat
mov
sbb
aaa
pushl
add
std
inc
jecxz
cmp
add
mov
jae
xor
pop
mov
dec
dec
adc
outsb
jg
das
mov
adc
ret
add
cltd
mov
fstl
and
ffree
xchg
pop
rcll
xchg
jns
icebp
push
aas
push
lcall
clc
imul
jno
rorl
mov
insl
js
mov
enter
and
ss
repz
xchg
pop
inc
lret
cmpsl
dec
es
ds
scas
dec
orb
sahf
xlat
fwait
xor
lahf
add
outsb
sahf
add
adcb
test
popa
and
inc
adc
insl
mov
inc
adc
xchg
dec
insl
jbe
in
sub
movsl
push
push
sbb
cwtl
std
mov
sbb
inc
pop
push
jb
lock
stos
ficoms
in
leave
fimuls
jb
lods
arpl
jge
aas
js
out
fdivl
xor
ss
adc
aaa
and
pop
sbb
mov
sbb
arpl
pop
iret
pop
pusha
imul
push
lea
mov
stos
nop
xchg
popa
cltd
lods
jno
iret
inc
std
xchg
push
shll
xlat
mov
nop
push
xor
leave
inc
lret
xchg
mov
js
sbb
mov
dec
fstp
dec
repnz
adc
push
sahf
ret
xchg
aam
loope
mov
jnp
or
push
sub
pop
xchg
hlt
jne
push
repz
mov
movsb
notl
in
adc
xor
loope
mov
das
stc
push
jp
or
adc
jecxz
cmp
mov
mov
mov
sbb
pop
sub
or
in
adc
je
or
enter
jge
je
push
out
cmp
mov
jo
adc
mov
stos
lock
out
into
adcb
je
lret
outsl
sahf
daa
mov
mov
pop
dec
les
insl
pop
push
inc
cmp
sbb
pop
cmp
push
mov
and
stos
xchg
pop
in
aas
pop
adc
push
clc
sub
xchg
pop
xchg
push
xor
xchg
leave
frstor
stos
repnz
pop
mov
sbb
and
mov
jne
push
pop
jp
mov
push
aam
xchg
lods
jle
fwait
inc
jo
push
push
bnd
cmp
ds
out
jecxz
ret
xor
cli
lods
aad
pop
xchg
repz
inc
fadds
xor
or
fsubrs
flds
das
xlat
mov
jg
mov
push
and
inc
jbe
pop
inc
xorl
or
and
lods
mov
cmp
sti
sub
test
out
push
mov
in
fisttpl
jb
fimull
xlat
sbb
adc
or
cmp
sub
lahf
xchg
inc
inc
clc
xchg
pop
imul
int
and
pusha
mov
inc
add
mov
push
shl
xor
stos
xor
cmpsb
push
or
lahf
inc
inc
insb
pop
addr16
xchg
imul
pop
or
repz
orl
fwait
or
shrd
or
mov
je
stos
enter
pop
adcl
xchg
xchg
clc
adc
roll
jge
adc
jnp
and
ja
inc
neg
lods
pushf
test
inc
pop
cmpsb
lcall
mov
lea
dec
push
or
ja
stos
or
sti
ds
or
jg
nop
mov
push
mov
mov
jg
ret
or
rorb
idivl
jmp
add
aad
jmp
sbb
stc
add
add
sbb
inc
stos
hlt
adc
mov
and
shrb
inc
rorl
lahf
mov
je
sub
cmpb
add
daa
adc
loop
and
mov
inc
inc
xor
out
mov
pop
data16
data16
mov
sbb
or
mov
jo
incl
cmpsl
xor
shrb
mov
push
jnp
data16
push
mov
insl
out
push
sub
movsl
enter
or
xchg
fnstcw
mov
push
cmp
inc
pop
xchg
and
in
rcrb
imul
push
mov
pop
lods
cmp
insb
cmpsb
sub
pop
or
je
mov
jae
cltd
jmp
mov
adc
adc
sub
push
gs
lcall
mov
dec
xor
nop
adc
cwtl
aad
mov
lods
in
xlat
cld
mov
das
cs
push
repz
cmpsb
mov
xchg
jmp
cmp
jb
or
dec
int3
out
mov
data16
divl
das
icebp
repz
sub
fisubrl
jecxz
mov
mov
test
in
jl
lods
rorl
mov
or
shlb
arpl
jne
mov
daa
shlb
outsb
test
sbb
adc
cmp
cmp
bound
sbb
loop
jnp
dec
sub
inc
jge
pop
test
mov
aad
dec
sbb
fadd
rorl
std
push
add
cmp
je
enter
inc
insb
xchg
cs
je
add
or
sti
mov
push
xchg
fwait
jle
add
imul
pushf
jne
into
sarl
mov
cmp
or
aaa
mov
mov
push
pop
test
fsubl
andl
aas
ljmp
xchg
movsb
adc
scas
cmpsl
dec
fcom
insl
in
loope
lods
es
cmc
xor
out
inc
push
rorl
mov
dec
pop
test
shll
imul
dec
mov
pop
sbb
pop
xchg
cmpb
cmpb
lea
xchg
xor
popa
lods
out
pusha
sub
jecxz
inc
add
rolb
adc
dec
cli
pop
xlat
test
mov
inc
pop
add
mov
sub
ljmp
fwait
das
lods
add
lods
loop
fcompl
leave
sbb
jmp
loopne
scas
sub
sbb
inc
insb
lret
jb
je
jns
inc
fidivs
mov
push
push
lcall
out
mov
adc
fstpt
jno
pusha
arpl
call
pop
jl
jmp
mov
fwait
push
xchg
fwait
test
sbb
hlt
ret
ret
je
cmp
mov
jmp
or
dec
add
loop
xchg
fstp
mov
dec
lahf
push
add
pop
iret
inc
sub
repz
pop
enter
xor
into
jg
js
imull
int3
add
addr16
mov
push
mov
repz
push
pop
scas
insb
enter
adc
js
lods
bound
mov
push
push
push
push
and
daa
lahf
dec
cmp
mov
sti
xchg
adc
and
inc
icebp
mov
shlb
ljmp
ljmp
int3
mov
filds
fiaddl
cmp
or
adc
inc
outsl
sub
add
mov
out
and
xor
test
into
clc
clc
xor
add
inc
jl
sub
int3
clc
iret
inc
test
sbb
add
jb
adc
dec
push
sbb
xchg
inc
ljmp
jge
popa
cld
push
out
adcb
push
gs
jb
lahf
std
ljmp
pusha
dec
dec
rcll
ret
jg
sahf
ja
ret
inc
push
and
xchg
and
les
lea
sub
pop
sahf
loopne
xchg
xchg
enter
ret
std
mov
fs
lcall
dec
lret
sarb
adc
jns
adcb
in
jecxz
mov
scas
or
push
mov
lcall
mov
mov
jo
mov
fisttpl
loope
cmp
fs
inc
and
js
loopne
jge
jmp
pop
xor
push
dec
cmpsb
xor
cmp
es
sti
ja
fs
inc
das
in
sbb
ror
or
icebp
cs
pop
sbb
add
push
sub
sub
sub
mov
ss
push
sub
mov
xor
enter
mov
out
adc
pop
das
push
loop
insb
ret
adc
add
xchg
jbe
and
arpl
pop
out
outsb
in
jg
or
inc
jo
cmp
or
push
sbb
in
adc
in
scas
in
fisubrs
dec
outsb
inc
or
add
enter
lds
add
insb
rcrb
lret
push
and
scas
mov
jne
cmp
cld
rolb
outsl
fisubl
jp
mov
test
movsb
mov
in
into
xchg
stos
jecxz
jmp
pop
pop
adc
lods
scas
add
loop
fldl2t
fistpll
cli
or
mov
pop
ds
pop
cmpsl
inc
dec
aam
xchg
jns
outsb
orb
stos
lahf
les
inc
jno
xor
and
mov
leave
out
movsb
stos
xchg
pusha
jle
shrl
std
lock
mov
pop
out
pop
dec
test
fidivrl
cmpsb
or
add
leave
inc
jmp
mov
push
lea
iret
enter
scas
push
dec
js
add
sbb
mov
insb
cld
ljmp
jb
xlat
pusha
pop
or
ds
rorb
fsub
pop
rol
in
subl
cmp
jmp
fcmovnb
fs
les
jecxz
test
cmp
and
rcl
shlb
movsl
add
xchg
cmc
loope
jecxz
pop
out
cld
lock
ds
push
sbb
jae
in
icebp
fwait
push
pop
inc
fimuls
jb
pop
xlat
sub
test
jne
mov
out
je
insb
fidivrl
push
pop
pushf
jbe
xchg
orb
pop
cmc
aaa
test
cwtl
fidivrl
xchg
xchg
jns
mov
or
add
loop
stc
movsb
aad
clc
push
mov
out
stos
sahf
jns
sub
insl
aas
push
xor
inc
notb
and
adc
mov
fldcw
out
and
outsl
mov
mov
lahf
or
mov
subb
int
jno
mov
insl
mov
jecxz
mov
fcoml
and
or
es
test
fisttpll
in
push
outsl
test
or
insb
xchg
call
cld
movb
pop
add
jp
or
icebp
pushl
pop
adc
movsl
ljmp
xor
cmp
inc
sub
ret
arpl
pop
xchg
es
pop
lds
repz
outsb
cwtl
cmp
outsb
jmp
ljmp
xchg
xlat
ss
pop
rcrl
push
xor
mov
loope
das
and
sub
push
push
cmpb
mov
stos
pop
leave
jns
sub
mov
push
mov
jmp
pcmpeqd
inc
cmp
push
pop
inc
test
and
fsubrl
scas
push
mov
inc
lods
dec
fiaddl
or
mov
mov
push
pop
inc
ficompl
mov
idivb
inc
pop
sub
cmp
pop
add
adc
jnp
jb
mov
pop
mov
adc
call
dec
jb
or
sarl
outsb
cmp
ret
mov
push
aas
cmp
mov
inc
xor
or
push
cmp
int3
bound
subb
sbb
incl
sti
jecxz
out
cmc
push
jne
or
adc
pushf
out
dec
inc
bound
aas
jp
loopne
ret
push
loopne
and
push
lahf
jb
inc
aad
stos
xor
xchg
stos
jg
mov
and
add
stc
ljmp
xchg
loope
push
inc
into
lcall
pop
mov
andl
insl
cmc
cld
stc
adc
int3
jp
test
cmp
lcall
mov
add
lods
cmp
sbb
lods
jbe
sbb
ja
addr16
sbb
lods
inc
outsb
pop
nop
rcrl
shrl
sbb
imul
push
aas
dec
sub
mov
repnz
jns
enter
cmove
test
insb
mov
push
inc
arpl
gs
inc
or
mov
adc
push
test
xchg
adc
jge
test
push
ffree
mov
inc
add
sbb
and
lea
or
mov
inc
ss
sub
push
xchg
rorb
fldt
lea
sbbb
or
xchg
imul
pop
sub
loop
cmp
addr16
adc
jo
pop
cmp
adc
cmp
inc
aas
cmpsb
jle
leave
mov
pop
sbbb
aas
test
cmp
sub
mov
adc
pop
fcoml
inc
daa
adcb
pop
xor
fisubrl
repz
and
pop
mov
ret
or
fisubs
andl
pop
cmpb
es
cmc
test
add
or
out
adc
sbb
test
fs
pop
dec
nop
sbb
mov
and
imul
aam
nop
ret
ljmp
icebp
clc
insl
dec
adc
inc
dec
loop
pop
mov
inc
lret
cmp
mov
clc
push
test
pop
movsl
add
out
les
loop
js
sbb
enter
enter
jp
shrb
xor
mov
loope
outsb
cmp
and
push
mov
or
mov
aas
loope
out
in
in
jp
inc
xlat
xor
icebp
dec
aad
imul
enter
cs
scas
inc
mov
cmpl
xchg
mov
gs
shlb
pop
fdiv
imul
mov
sub
add
pusha
adcb
ljmp
inc
mov
mov
xor
addb
dec
stc
lods
xchg
int
mov
aas
cmpb
cwtl
push
add
cmp
adc
sbb
rcrl
sbb
sahf
and
cld
leave
xlat
and
mov
fstpt
jp
rcll
mov
jno
enter
sub
sbb
ljmp
ja
insb
test
je
lcall
mov
movsl
xor
dec
imul
stos
shrb
inc
pop
fsubs
dec
mov
jbe
lea
pop
sub
mov
dec
and
fnstenv
js
xchg
std
jbe
push
ret
push
fwait
test
fucomi
push
xchg
and
push
pop
jg
sub
loopne
adc
push
nop
xchg
xor
pusha
push
lods
mov
and
and
xor
mov
dec
and
es
xor
sahf
pop
mov
xor
xchg
sub
fldcw
xlat
mov
in
mov
push
xorb
pop
pop
fidivl
xchg
sahf
dec
or
ljmp
sbb
nop
cs
cmp
cmp
sbb
or
cmp
in
fdivrs
pop
addr16
gs
and
jbe
jl
and
es
add
inc
mov
mov
pop
sbb
adc
orl
xor
or
out
mov
test
push
stos
test
int3
and
popf
lds
dec
xor
imul
aaa
rcrl
push
xor
sbb
pop
pop
mov
sub
fbld
pop
mov
xchg
jmp
jecxz
xor
fcomps
mov
clc
dec
fmuls
push
sub
cli
lcall
sbb
insl
cmp
lock
cli
push
mov
pop
lret
mov
mov
adc
or
sbb
pushf
pop
iret
inc
xchg
ja
push
sub
adc
fldt
pminsw
cmc
xchg
or
test
or
ja
imul
mov
repnz
sub
push
adc
fs
fstl
popw
test
pop
scas
dec
push
fwait
xchg
add
sub
cld
repnz
sar
mov
fsubrs
jns
int3
and
sbb
push
sbb
nop
cmp
mov
popf
jne
or
dec
cmpsb
std
popf
lret
push
sbbb
sbb
pop
push
int3
adc
std
jge
pop
enter
jno
sub
pushf
adc
mov
add
xchg
mov
cmpsb
out
subl
mov
fdivs
xchg
fstpt
and
pop
and
or
mov
jecxz
sub
pop
cmp
shl
or
sub
sarl
frstor
fs
adc
enter
int
push
xchg
sbb
and
mov
ja
hlt
push
inc
mov
sahf
inc
stos
fmull
and
int3
in
cmp
mov
imul
jmp
sbb
aas
nop
push
js
lds
aad
sahf
jno
je
idiv
lock
stos
ljmp
out
std
test
sahf
push
fcompl
sub
ljmp
jae
adc
fwait
inc
mov
out
jne
repz
mov
outsl
popa
mov
xchg
cmpsb
int
aas
cmp
or
aas
dec
rcrl
lea
xor
or
jecxz
jno
pop
rcrb
icebp
jbe
loop
sbb
mov
add
mov
ret
lds
cltd
andl
adcl
adc
in
cmc
nop
pop
lret
lds
sarl
pop
enter
pop
mov
dec
pop
mov
scas
stos
dec
lock
mov
sbbl
cmp
lret
cwtl
push
jne
pushl
scas
adc
jmp
cli
call
sub
stc
pop
addr16
xchg
loope
imul
in
jecxz
fnstenv
xchg
jnp
ficoml
test
inc
lods
loope
scas
int3
jle
rcrb
push
ret
jbe
jne
or
fnstsw
mov
ret
adc
and
dec
push
pop
pop
arpl
dec
mov
loop
pop
inc
mov
sbb
jg
push
adc
xchg
sahf
mov
sbb
xor
xor
or
lret
add
mov
or
gs
mov
pop
lods
call
iret
cmp
fsubrs
test
idivl
gs
inc
cld
cmp
mov
or
daa
imul
icebp
lret
std
pop
lret
stos
dec
bound
jne
das
orb
shrl
mov
subb
cmp
loop
sahf
iret
iret
jnp
insl
mov
xchg
lock
in
push
sbb
aam
les
mov
roll
fldt
lcall
cs
add
mov
add
aam
lea
adc
addr16
mov
jae
cmp
repnz
xchg
and
xor
arpl
adc
addr16
mov
movsb
xor
roll
sub
imul
mov
mov
es
dec
fdivrs
add
xchg
mov
das
loope
into
std
lahf
sbbl
and
rolb
dec
outsl
mov
rol
adc
hlt
mov
ret
adc
dec
mov
pop
out
imul
andb
test
cwtl
ja
loop
push
mov
sub
pushf
xor
xchg
cmpsl
and
add
mov
into
and
xchg
pop
mov
dec
jmp
inc
aas
cmp
xchg
pop
add
mov
arpl
popf
mov
xor
cmp
mov
push
jbe
add
cmp
and
xor
sbb
sbb
add
cmp
cmp
insl
fdivrl
out
mov
pop
fst
not
or
mov
cmpsb
fwait
add
fnstsw
push
shll
cmp
mov
das
lds
mov
sub
cmpsb
repz
ja
and
scas
inc
cmp
pop
jl
pop
notl
dec
popa
das
push
dec
cltd
repnz
shl
lcall
pop
and
dec
adc
vphaddbq
je
mov
mov
push
jb
aaa
cmpsl
enter
ficompl
stos
adc
add
pusha
rorl
shrl
aam
mov
stos
sti
stos
sub
mov
sbb
sahf
jle
popf
lret
insl
imul
inc
sbb
xor
lahf
data16
jg
adc
push
add
int3
scas
nop
push
cmp
gs
pushf
jo
js
popa
lahf
inc
xor
xchg
and
mov
xor
mov
push
mov
pop
xor
dec
cmc
push
imul
push
loopne
roll
mov
push
lret
dec
add
mov
jno
xchg
push
jmp
fbstp
loopne
das
push
push
mov
jp
imul
sbb
jecxz
cmpsb
dec
enter
mov
je
test
sbb
cltd
cmp
mov
push
ja
mov
mov
sahf
dec
cmp
sahf
fldlg2
stos
sbb
pop
mov
adc
lret
inc
imul
xor
mov
mov
sahf
inc
movsb
push
test
das
cmp
mov
pop
imul
sub
imulb
or
daa
testb
push
outsl
gs
pop
ss
push
lods
or
jmp
fdivl
push
sub
popa
xor
xchg
inc
addr16
jb
sar
bound
cmp
xlat
das
iret
push
das
sub
sbb
ror
push
imulb
es
stc
jbe
xor
nop
mov
push
adc
jbe,pn
cmp
jb
jae
stos
push
adc
sub
sahf
pop
pop
inc
mov
xor
xor
lret
out
dec
dec
push
jae
xchg
mov
sub
sbb
leave
pop
jb
jmp
adc
xchg
xchg
fdivrl
mov
push
pop
les
cld
pushf
inc
xchg
cmp
and
js
and
or
test
jae
enter
sbb
fwait
stc
cwtl
scas
outsb
ficoml
data16
mov
push
cwtl
xchg
xchg
fildl
mov
and
mov
jo
mov
aaa
adc
cmp
loope
aaa
add
mov
mov
and
pop
cmp
pop
mov
movsl
adc
cmp
cmpsl
push
in
mov
arpl
jmp
and
dec
sub
mov
jge
je
stos
cltd
out
pop
and
mov
xchg
and
inc
jne
or
mov
ret
sbb
rcll
jo
jp
pop
dec
mov
pusha
js
cmp
daa
aad
aad
sub
jg
push
lea
outsl
xchg
push
sub
mov
imulb
fstpl
insl
int3
fstpt
lret
ds
nop
shl
adcb
aam
dec
add
push
pop
mov
mulb
shl
pop
fldcw
inc
xchg
popl
cmp
cmpsb
loopne
popa
insl
mov
or
hlt
sahf
and
cmp
xchg
aas
clc
lahf
jecxz
sbb
mov
lret
xchg
insl
stos
lret
add
lahf
ljmp
nop
lock
adc
mov
pop
dec
fbld
add
lahf
sbb
push
jne
repz
jecxz
xor
stos
dec
fldt
sahf
mov
dec
call
jl
mov
ret
xchg
scas
push
jp
imul
jb
push
lock
add
pusha
repz
push
pop
mov
push
cmp
leave
ret
jo
sbb
vpsadbw
mov
push
pushf
mov
pushf
cmp
push
shll
notb
xchg
shll
sub
adc
ja
adc
push
les
or
or
or
call
test
addr16
mov
adc
clc
lcall
xor
std
pop
add
inc
sub
push
mov
xor
cltd
cli
dec
test
outsb
fistl
sub
movsb
rorb
scas
mov
xor
push
xchg
jecxz
mov
nop
push
xor
ja
movsb
inc
mov
mov
sbb
fsubs
xor
xor
call
dec
jae
xchg
xlat
mov
mov
adc
push
jnp
mov
or
rcll
xchg
movsl
mov
mov
and
daa
aaa
fs
jecxz
sub
cmp
push
inc
fwait
mov
dec
mov
cmp
sbbl
add
mov
fiadds
xor
int3
das
faddl
push
inc
into
dec
xchg
popa
inc
insb
sub
out
jnp
iret
or
lods
outsb
imul
ljmp
and
or
movsl
or
es
outsb
push
xchg
push
and
pop
jmp
leave
add
fisttps
in
sbb
dec
pop
sub
cmp
jbe
jg
call
pop
sar
or
add
divl
inc
jns
test
push
cli
mov
sub
in
add
les
xchg
push
push
jb
pop
xor
and
pop
mov
mov
mov
push
cs
test
jmp
and
adc
sub
out
idivl
aas
in
adc
nop
jbe
incl
pushf
push
cld
cmp
xchg
xor
fadd
push
addr16
dec
addr16
aam
sub
dec
nop
loop
mov
sbb
inc
jle
mov
lods
cmp
xlat
push
test
lahf
push
inc
std
inc
pop
jecxz
test
push
mov
cmpsb
mov
sub
ss
lret
les
call
inc
cltd
aas
lcall
jge
testb
mov
dec
mov
jno
iret
or
add
sbb
aam
push
int3
dec
and
dec
fistps
inc
filds
rcll
jle
out
xchg
imul
cld
mov
cltd
clc
scas
sbb
in
movsl
and
fdiv
jmp
dec
cmp
cmp
jae
fcoms
xor
fimuls
ret
les
xchg
dec
push
pop
js
push
daa
movsb
or
or
es
test
iret
movsb
daa
repz
popa
mov
mov
cmpb
xlat
leave
mov
sub
test
xchg
inc
iret
xor
dec
adc
sub
mov
roll
cli
test
fs
pop
add
lods
cs
cmp
add
pusha
rcl
inc
inc
dec
cmpl
jnp
lahf
rorl
clc
ss
loopne
movsb
lods
aas
ja
mov
xor
xchg
sbbl
jl
rcl
mov
push
push
push
or
leave
adcb
popf
mov
inc
mov
inc
cmp
push
stos
icebp
mov
in
add
cld
adc
lock
or
popa
jmp
push
mov
xor
mov
lahf
mov
popf
and
xor
shl
icebp
popa
sub
add
or
sub
pop
in
flds
mov
nop
pop
mov
int3
out
inc
andb
mov
sbb
mov
dec
sub
js
daa
lock
adc
xor
xchg
cmc
or
mov
sahf
push
clc
mov
inc
fcompl
push
sbb
mov
sahf
ret
aad
inc
xchg
fwait
pop
jne
cmp
push
mov
sbbb
adc
adc
leave
push
stc
jle
jo
out
mov
mov
jmp
iret
adc
fiaddl
mov
addb
push
sbb
mov
es
jae
shll
push
inc
adcl
lret
jno
out
out
mov
mov
mov
mov
mov
shr
add
lds
mov
in
mov
pop
icebp
sub
inc
aaa
outsl
neg
shrb
adc
push
scas
iret
mov
aas
jp
xchg
lret
push
shlb
mov
mov
sub
pop
in
dec
mov
adc
int3
xlat
xor
mov
push
jg
test
mov
adc
mov
ljmp
addr16
stc
faddl
add
mov
outsl
frstor
repz
push
and
mov
fdivr
rcr
jg
inc
lret
cltd
pop
pop
xchg
addr16
cmp
lret
xchg
sub
inc
iret
imul
or
std
lcall
ljmp
jno
cmp
lock
stc
lds
cwtl
dec
cltd
sbb
mov
dec
push
jmp
jns
gs
leave
mov
fwait
mov
pop
shlb
xchg
sahf
push
dec
mov
cwtl
inc
out
in
sbb
dec
mov
push
push
js
cmp
mov
and
in
cltd
scas
subb
inc
dec
fcmovnb
fisubl
aad
int
dec
int3
mov
jmp
sbb
lods
inc
xor
jo
and
sarb
add
in
lret
es
ss
outsb
fsubr
in
adcl
frstor
in
cmp
jne
sub
pop
lret
cmp
in
sbb
push
je
pusha
cmp
add
aas
xchg
in
test
stos
lods
ds
stc
roll
out
dec
cltd
repz
icebp
pop
orb
xorl
mov
mov
mov
je
sbb
cli
xor
addl
xor
inc
and
imul
cmp
nop
add
rcrl
das
xor
in
push
xor
sti
insl
notb
imul
sbb
lahf
cmp
pushf
jge
add
pop
cmp
lock
in
psllw
repnz
mov
shrb
ja
mov
leave
dec
jl
mov
or
push
mov
cmp
mov
jo
sub
xchg
dec
cli
inc
into
clc
outsb
jno
fwait
sub
aas
add
aas
mov
sub
fsts
adc
test
int
and
das
insl
adc
ljmp
fsts
pop
mov
test
lret
mov
pop
add
fs
shr
inc
clc
idivl
sbbb
push
sbb
mov
adc
adc
push
int3
pop
es
mov
fimuls
icebp
mov
iret
sub
lea
adc
fs
aaa
jl
imul
pop
fistpll
cs
sbb
or
shl
push
cmovs
decl
push
cmp
test
adc
out
mov
xchg
push
testb
inc
sub
into
rolb
xchg
jbe
sub
push
pop
pusha
jge
add
out
jg
out
mov
jnp
inc
lahf
inc
sbb
jg
ret
cmp
push
inc
push
mov
data16
sbb
jns
lds
pop
lcall
mov
jle
popf
pop
call
jne
jmp
jge
scas
in
inc
mov
adc
push
cmp
sub
enter
push
xchg
push
sub
jl,pn
gs
mov
bound
fcompl
out
sub
incb
xor
add
in
jo
push
inc
sbb
push
push
jle
je
and
sar
fsubrp
cwtl
dec
jb
repnz
push
mov
xchg
scas
insl
bound
dec
daa
adc
in
test
in
sub
pop
dec
and
mov
mov
cmpsb
inc
idivb
xchg
cmp
cli
and
jne
sbb
inc
pop
repnz
dec
test
sbb
sub
aam
mov
dec
mov
test
nop
jns
mov
bound
fsubl
and
addr16
leave
cmc
jae
push
mov
lahf
xor
mov
inc
add
cmc
cmp
add
mov
mov
mov
enter
in
jmp
jnp
jo
sbb
sahf
loope
fmulp
sub
rcl
out
arpl
dec
jb
sub
dec
aad
insb
xchg
leave
push
mov
pop
mov
mov
fsubl
pop
roll
inc
xor
out
jg
movsb
fsubr
lods
shl
leave
xchg
insb
stos
fldcw
or
js
loopne
js
inc
jo
imul
jo
cs
inc
les
imul
jnp
test
mov
lcall
pop
push
mov
lahf
push
lock
dec
enter
leave
inc
movsb
push
aaa
push
xchg
inc
jne
outsb
movsb
adc
mov
test
fidivrl
adc
or
xchg
push
jp
or
sbb
sub
mov
and
lods
orb
loope
loop
test
stos
or
adc
jno
sti
xchg
cmp
pop
xchg
xorb
into
shrb
cltd
movsb
shlb
push
cmp
mov
daa
push
sub
push
xchg
test
or
mov
cld
push
pushf
mov
in
out
stos
movsb
push
xchg
mov
inc
js
jns
mov
jns
mov
inc
and
dec
sahf
popf
movb
imul
inc
xchg
inc
mov
jge
dec
stos
mov
or
lret
int3
xor
inc
xlat
xlat
aaa
lcall
adc
push
cmpsb
or
sbb
push
fnstenv
icebp
clc
aas
out
mov
adc
icebp
inc
pop
stc
dec
dec
es
inc
int3
test
adc
arpl
push
push
popf
int3
mov
bound
mov
and
in
adc
inc
arpl
fistpll
out
push
jne
mov
test
test
add
sbb
jb
cwtl
sbb
aam
gs
xchg
mov
rol
or
mov
mov
lds
hlt
outsb
mov
pop
ljmp
cwtl
int
sub
inc
fs
xor
cmp
les
inc
repz
pop
push
mov
cmp
test
xchg
cmp
lds
adc
icebp
xchg
xchg
mov
aam
xchg
and
dec
ljmp
mov
jp
sub
lahf
sarb
repz
lret
sti
inc
cmp
stos
aam
fiaddl
outsl
out
jns
sub
icebp
sarb
xor
sub
lock
sti
mov
or
and
add
xchg
jp
adc
in
push
repz
gs
sbb
push
sbb
fs
pop
xchg
dec
outsl
pop
rorb
adc
jb
out
adc
decl
gs
jle
call
push
push
aas
imul
hlt
sub
sub
popf
mov
mov
int
fisubrl
dec
addr16
clc
xchg
jmp
push
into
imul
add
call
xor
mov
xor
mov
jmp
ret
xchg
mov
arpl
roll
int
nop
ficoml
cmp
dec
insl
shlb
test
cmp
pop
fmuls
loopne
xor
push
icebp
arpl
xorl
inc
xor
sahf
jne
fstp
idivl
cltd
sub
iret
into
adc
aad
mov
int
jno
sahf
jl
or
aaa
xlat
push
add
ss
xor
movsb
xor
mov
js
call
fstl
pop
xor
ret
data16
sbb
and
add
jmp
test
and
leave
adc
imul
popf
test
sub
int3
out
test
xor
loope
xor
jno
lds
pop
jnp
int
push
leave
daa
xchg
cmp
shrb
inc
fdivs
in
cmpsb
lret
and
inc
sub
cmp
lds
push
sbb
cmp
cwtl
xor
ret
movsb
cmc
sbb
mov
ds
xor
jge
test
and
fs
sub
dec
fcmovnb
test
lcall
cmp
rclb
cmp
pop
loop
aas
sub
inc
scas
pop
test
and
test
dec
cld
sub
icebp
and
les
jecxz
out
ds
test
loopne
dec
inc
ret
adcb
jmp
lock
scas
mov
or
sub
mov
and
pop
jb
fcomps
inc
loop
mov
sbb
int3
sbb
sub
push
xchg
xor
mov
call
add
inc
jnp
mov
ljmp
pop
bound
mov
sub
and
movsb
mov
or
lods
les
mov
mov
lret
movsl
ja
clc
jge
dec
xor
adc
xlat
cld
pop
push
nop
arpl
cli
cmp
pop
int
into
push
aaa
sub
and
pusha
and
push
sbb
and
icebp
in
sub
bound
jae
jp
dec
hlt
pop
loope
push
mov
cmp
xor
movsl
ret
mov
dec
popa
leave
jp
into
leave
push
les
repnz
rcl
jae
dec
mov
add
pop
orl
imulb
and
inc
cltd
jecxz
andb
inc
out
aad
cmc
add
js
adc
sarb
sub
mov
adc
lcall
je
scas
pusha
and
mov
push
int
lahf
aad
into
rcrl
incb
leave
mov
fisubl
dec
ljmp
push
repnz
xchg
test
shl
jge
xchg
mov
mov
mov
adc
xor
jle
repz
mov
test
ret
test
mov
dec
jno
push
ljmp
loope
xor
stos
push
aad
movsl
cmp
and
dec
inc
cmp
aas
mov
iret
mov
inc
ficoml
adc
xchg
lret
inc
mov
or
xchg
gs
int
or
add
inc
test
cmp
mov
xlat
sbbl
popa
mov
dec
cmp
mov
dec
push
pop
add
mov
pop
jnp
movsb
lock
adc
mov
jl
out
jo
insl
gs
out
ja
dec
dec
mov
insb
pop
push
adc
inc
cli
enter
scas
dec
xchg
mov
gs
call
das
sbb
cmovo
jle
outsb
jmp
adc
shl
leave
inc
or
jle
inc
push
sub
mov
imul
sbbl
sbb
push
movsl
in
inc
ret
mov
mov
scas
mov
repz
je
js
inc
sbb
mov
fists
push
push
mov
jge
push
int
push
or
in
mov
mov
fisttps
cmp
ret
mov
xor
jmp
daa
movsb
in
pop
rcrb
mov
xchg
push
xor
and
insl
test
push
bound
mov
ficoms
repz
adc
int3
dec
push
cmpl
fimull
push
xor
mov
sub
mov
jp
in
mov
cmpsl
sub
daa
lidtl
cmp
push
add
jb
ja
cmp
aas
movsl
pop
lods
xor
mov
xchg
sarb
outsl
mov
fs
test
aam
mov
mov
jae
lds
lods
cli
gs
shl
rcll
iret
outsl
jmp
sarb
clc
push
insl
aam
cltd
adc
and
scas
add
push
aas
or
test
insb
outsl
sub
mov
loop
sub
xchg
inc
mov
jle
gs
fsubs
lds
je
test
cli
andb
jo
lret
icebp
cmpsb
mov
stos
fwait
daa
lods
sahf
push
mov
pushf
push
stos
call
push
lret
ja
jp
mov
cmp
inc
jno
mov
fldl
rolb
pushf
jno
mov
into
in
lods
call
push
jnp
jnp
mov
sbb
mov
mov
sbb
mov
movsl
mov
test
mov
cmp
lcall
popa
or
cmp
out
imul
pop
loope
xor
fdivl
lds
cmp
jecxz
xor
sub
sarl
rcrb
lcall
and
pop
mov
addr16
or
jbe
mov
call
jp
push
push
adc
int3
inc
inc
push
sbb
xchg
test
adc
mov
push
dec
and
cmpsl
call
xchg
add
mov
idivl
cs
in
pop
inc
rol
mov
mov
rcll
loop
pop
into
in
insb
mov
mov
and
cs
jge
push
mov
stos
push
mov
xchg
fsubl
inc
mov
xchg
pop
les
dec
cmpsl
out
fbstp
jp
mov
es
loope
pop
rcr
mov
mov
in
sub
adc
fldt
xchg
adc
mov
jmp
pop
push
xor
cwtl
mov
ficoms
and
jae
cltd
leave
call
imul
cmp
fcoml
sub
jnp
adc
adc
pop
adc
in
movsl
xchg
jno
ret
inc
imul
out
sbb
jge,pn
dec
inc
xchg
fwait
rcll
dec
dec
lret
add
ja
mov
mov
mov
cmc
xor
cmp
cld
jmp
cmpsl
lods
push
jge
ds
int
lea
movsb
scas
popa
leave
mov
lods
enter
cmpsl
into
mov
pop
call
cmp
aaa
lods
lcall
ret
dec
sahf
inc
add
mov
ds
shl
push
and
es
push
adc
jno
popa
ret
cmp
jecxz
pop
out
fisubl
push
mov
mov
lret
dec
fimuls
sahf
sahf
nop
mov
fisubl
in
loope
lea
enter
adc
mov
mov
inc
subl
repz
jge
xchg
mov
test
mov
sbb
gs
xchg
in
repz
pusha
popa
inc
cmpsb
jge
inc
sbb
outsb
mov
push
aad
insl
mov
pop
stos
arpl
cmp
mov
js
insb
rcl
insl
sahf
loope
pop
pop
fldt
add
test
lods
push
push
push
imul
js
popl
adc
cmc
mov
adc
cmpsl
in
sbb
adc
xchg
mov
mov
xor
cwtl
sti
in
in
jecxz
push
fistl
jns
and
int3
movsl
xchg
push
pushf
adcb
idiv
test
and
js
mov
test
push
clc
addr16
xchg
pop
push
mov
or
cmp
pusha
xchg
adc
mov
or
bound
loope
andb
xchg
hlt
dec
inc
xchg
inc
mov
imul
mov
rcr
test
stos
in
test
lea
and
xor
and
imul
sub
inc
int3
push
testb
outsb
pop
push
and
outsl
add
lods
push
inc
mov
decb
rolb
pop
in
outsb
not
sti
sub
sub
adc
pop
xor
in
jle
cmp
cltd
push
arpl
mov
outsb
je
and
add
sbb
xchg
pop
inc
popf
push
out
mov
cmc
aas
mov
jl
xlat
mov
xor
pop
and
mov
xor
cld
dec
sarb
lds
push
and
out
cs
cltd
repnz
dec
inc
aad
fsubr
cli
jne
add
push
out
and
push
iret
inc
inc
mov
add
jo
xchg
test
push
mov
mov
jbe
dec
sahf
lret
cmpsb
xor
fnstsw
pop
scas
addr16
mov
jns
pop
dec
push
xor
mov
sti
mov
bound
icebp
out
push
xchg
lock
adc
icebp
and
mov
clc
mov
loopne
ret
neg
mov
jmp
or
push
fimuls
sbb
test
dec
enter
and
sahf
fstpt
dec
ds
pop
xchg
repz
pusha
or
or
jae
mov
mov
push
popa
mov
nop
push
push
popf
xchg
rorl
mov
call
push
insb
bound
push
test
adc
ret
add
push
lods
push
repz
loopne
inc
inc
inc
ljmp
leave
mov
cmpsb
lods
cwtl
jl
xor
inc
loopne
outsb
push
dec
in
dec
into
jle
mov
cmpsb
ror
shll
xchg
dec
cmpsb
jae
addr16
xchg
xchg
add
xor
add
daa
pop
mov
mov
pop
sbb
into
jbe
xchg
cmc
dec
imul
push
jl
push
mov
test
aas
enter
jns
push
xor
aas
cmpsb
andl
dec
sub
jo
adc
mov
xchg
in
adc
dec
or
or
sub
or
mov
jecxz
add
aas
adc
mov
les
cmp
dec
clc
stc
pop
adc
fimull
ret
inc
sbb
xchg
outsl
xchg
jecxz
inc
subl
mov
xchg
jmp
fwait
call
pop
jecxz
add
cmc
ficompl
jecxz
jno
in
or
int3
in
insb
ds
add
stc
jl
dec
inc
mov
and
jbe
mov
leave
les
and
or
sub
mov
into
or
xor
outsl
push
mov
shrb
dec
add
loop
jge
push
jecxz
cltd
lea
pop
das
sbb
sub
xchg
mov
adc
out
inc
jne
das
push
das
les
arpl
add
sbb
outsb
mov
xchg
or
xor
mov
gs
orl
xchg
ror
add
inc
or
add
inc
in
pop
mov
jo
hlt
xlat
lods
out
inc
cld
int3
push
pop
add
in
loop
shll
cmpsl
cwtl
mov
pop
sbb
ljmp
cmp
cmp
out
inc
mov
lods
jl
dec
addl
add
mov
xchg
jno
scas
rcrl
mov
xor
test
xor
mov
js
cld
insl
mov
jge
ja
js
les
mov
stc
in
std
clc
dec
adc
inc
pop
in
mov
out
add
mov
call
sarl
mov
dec
test
or
dec
mov
pop
mov
les
jmp
ret
in
push
mov
and
xchg
ja
loop
imul
adc
cmpsl
push
shll
or
or
popf
fs
cltd
stos
movsb
insl
dec
adc
mov
lock
sbb
sub
push
pushf
push
test
cmp
das
inc
in
decb
lea
mov
cwtl
sbb
test
jecxz
xorb
push
cmp
adc
jecxz
adc
dec
imul
jge
inc
aas
outsl
fsubrs
cli
mov
les
sub
xchg
and
push
data16
and
sahf
sub
cmp
ret
imul
imul
aaa
shrb
xchg
mov
lcall
fwait
scas
jns
jnp
pop
ficompl
lods
push
fsubs
aas
pop
adc
jbe
xchg
lret
and
test
cwtl
in
or
xor
inc
xlat
movsl
popa
xor
jo
jns
mov
sub
out
jle
inc
or
mov
push
int3
sahf
jmp
mov
xchg
lods
push
xor
push
push
adcl
arpl
xlat
mov
pop
xorb
fwait
push
mov
and
and
ffree
fwait
call
cmc
outsl
imul
dec
add
lods
dec
xchg
lret
fs
fwait
test
cld
jno
jl
add
jno
xor
or
fmull
aam
cmp
sbb
adc
addl
mov
mov
rolb
jp
movsl
hlt
sbb
lods
dec
jns
in
add
out
xchg
fsubp
insb
mov
adc
cltd
clc
leave
pop
jp
mov
out
sub
mov
movsl
jp
orl
push
push
sub
pop
push
lods
cmp
cmp
or
and
out
rclb
in
outsl
mov
jg
test
into
int
or
jmp
stos
shll
xchg
ds
cld
cli
sbb
jnp
out
mov
lock
add
daa
mov
fsts
pop
pushf
mov
outsl
fidivs
mov
mov
xchg
aam
mov
fldenv
or
call
lret
sbb
lea
fnsave
xor
jb
repnz
lds
jae
mov
andb
mov
test
out
bound
jp
out
arpl
and
lahf
out
test
insb
inc
roll
in
shlb
pop
jae,pt
sbb
shrb
xchg
cmp
repz
inc
mov
mov
or
out
pop
sti
in
pop
shrl
js
add
and
cmc
jns
pop
mov
xchg
stos
mov
mov
cltd
dec
mov
xchg
and
jae
fsubrp
int
lahf
outsl
cmp
rcrb
sti
jnp
push
out
repnz
popf
dec
jae
sbb
sahf
nop
cmp
xchg
dec
repnz
cmp
ror
and
jmp
int3
push
data16
ljmp
sbb
mov
inc
es
rorl
into
or
les
stc
ja
sub
gs
mov
push
aas
xlat
jp
shrl
out
out
jnp
xor
lcall
jp,pn
std
jbe
mov
and
sub
adc
out
int
pop
imul
out
add
sarb
jns
mov
dec
jp
mov
xlat
ljmp
add
sbb
stc
pop
lds
out
imul
lds
ret
add
cltd
jge
out
div
or
dec
mov
pop
push
sbb
outsb
sub
outsb
jbe
les
lods
ficomps
int3
xchg
mov
jmp
ss
or
test
jecxz
dec
xchg
sahf
jo
xor
fsubs
adc
jno
pop
out
and
sbb
outsl
sti
sub
stc
or
cwtl
jo
clc
cli
imul
jl
mov
jp
mov
subb
ret
insb
add
cltd
jp
xchg
rcl
fwait
sti
jge
xchg
dec
pop
mov
mov
movsl
icebp
cmp
pop
xor
fwait
mov
sbb
mov
les
add
sub
std
aad
jle
fdivl
lock
lret
mov
in
ror
mov
pop
jp
or
std
out
push
and
push
jg
inc
sbbb
inc
addr16
jns
lods
pop
push
sub
jne
push
nop
mov
lahf
out
xchg
shlb
cmp
fwait
sbb
sub
pop
adc
es
gs
std
rcr
test
xchg
pop
cmp
andl
arpl
repnz
xchg
mov
loopne
inc
push
or
ficompl
lahf
call
mov
sbb
xchg
std
jb
adc
xor
adc
in
cmp
mov
jnp
inc
rcrb
cwtl
sbb
xor
xorb
xor
xor
mov
pop
mov
mov
sbb
pop
ss
into
sbb
lcall
leave
pop
inc
mov
xor
lcall
push
push
xlat
in
dec
pop
cmp
ds
xchg
pushf
jmp
xchg
jl
sub
call
cltd
mov
mov
xlat
lods
sbb
cmc
push
out
xchg
daa
cld
rclb
sbb
mov
inc
mov
add
mov
adc
xlat
aam
cmp
iret
add
mov
sbb
mov
je
sub
test
add
add
lods
pop
inc
movsb
dec
adc
mov
push
cmpsb
mov
enter
xchg
mov
push
cmp
mov
mov
jnp
ret
inc
jl
lock
xchg
sbb
mov
mov
xchg
je
arpl
in
in
mov
xchg
pop
jg
ret
sub
push
cmpsl
jg
inc
imul
mov
push
cmpsl
fs
js
cmpb
mov
dec
jp
cmc
lret
push
jno
xlat
cmpsl
stc
fldcw
out
jne
das
mov
mov
mov
xchg
dec
sbb
inc
cmp
fstpt
adc
jg
mov
leave
jo
cmpl
sbb
movsb
push
fldl
dec
xchg
mov
aam
cmp
adc
je
out
lret
jb
push
lods
js
rol
mov
xchg
daa
add
push
jge
add
pop
adc
test
xchg
mov
pop
xor
add
loop
lcall
jae
imul
and
movsb
inc
pop
popa
jne
cmp
xchg
sbb
fbld
out
shlb
faddl
ljmp
outsb
mov
cmp
dec
jmp
out
rclb
dec
ficomps
sbb
out
mov
dec
or
ret
mov
and
jnp
es
jmp
push
mov
and
test
jl
pop
leave
fwait
in
dec
xchg
aad
lock
inc
jge
out
sub
fwait
or
stos
cmp
pop
jge
add
or
and
leave
fs
push
scas
push
push
loope
xor
mov
jbe
fcoms
into
sub
pop
xchg
movsl
mov
fwait
scas
jg
cltd
xchg
inc
push
inc
inc
jnp
mov
and
test
sarl
sbb
arpl
je
test
or
fdivs
fisubl
lret
xor
dec
repnz
arpl
cli
bound
dec
xor
push
pop
fisubs
push
pop
scas
out
inc
repnz
inc
call
push
outsb
mov
xchg
repnz
sbb
inc
and
test
dec
fbstp
push
gs
xchg
cld
jns
outsb
fildll
cs
cmp
lods
inc
fs
xchg
xor
mov
clc
xchg
icebp
hlt
xor
and
push
or
jmp
xlat
pop
adcl
inc
pop
adc
push
jmp
jo
outsl
mov
fwait
fs
subl
test
xchg
push
mov
mov
mov
adc
in
sub
xor
inc
inc
and
out
mov
jmp
xchg
add
push
cltd
pop
sub
fidivl
in
fs
stos
mov
xlat
cmp
xchg
jmp
cmpb
repnz
add
xchg
push
mov
icebp
fadd
test
aas
push
mov
sub
jno
insb
outsl
das
sub
into
and
jp
inc
cmp
out
enter
andl
insb
lahf
or
dec
pop
mov
add
int
mov
add
out
test
jl
mov
stos
scas
lds
xchg
testl
mov
movsl
das
xchg
mov
cmp
mov
sub
fisubrs
test
push
lods
es
shrb
repz
std
iret
imul
push
aam
mov
sbb
popa
ds
shrb
rorb
add
adc
pop
neg
mov
add
pop
push
and
les
scas
xchg
imul
pop
cmpsl
shlb
push
dec
push
mov
sti
repnz
add
dec
sub
jae
dec
lahf
pushf
cmc
sti
mov
xor
in
sbb
out
nop
imul
mov
repz
or
cmp
fnstenv
jle
pop
insl
js
mov
and
jno
mov
mov
jge
xlat
nop
pusha
negl
xchg
dec
cwtl
dec
clc
sub
call
pop
pop
push
cmp
xlat
mov
mov
ficoms
into
or
les
dec
xor
xchg
xor
bound
push
cmp
cmp
mov
mov
shlb
in
xor
jp
add
push
sbbl
jno
xor
loop
inc
inc
or
inc
fsubrp
mov
sub
rcrb
inc
mov
adc
sbb
push
and
add
sbb
outsb
push
mov
pop
jp
int
cmp
push
push
push
jmp
aam
mov
ss
rclb
loop
cmp
into
xor
mov
scas
loopne
in
in
mov
jne
adc
adc
scas
cmc
imul
fdivs
push
mov
in
je
xchg
sub
test
nop
daa
mov
ljmp
jmp
fidivrs
lds
cmp
cmc
bound
call
test
mov
jo
dec
mov
or
and
xchg
xchg
cmpsb
repz
dec
setne
push
ret
inc
ljmp
mov
dec
push
jne
scas
fistpll
ret
xchg
aam
xchg
dec
stos
jb
ja
adc
lret
scas
mov
and
inc
push
push
mov
xor
cwtl
aam
pop
imul
adc
inc
adc
movsb
shlb
sbb
call
mov
movsb
test
inc
je
xchg
add
cmc
push
mov
ficomps
fsubp
dec
mov
in
aad
out
popa
mov
xchg
dec
sbb
insl
aam
retw
inc
xchg
scas
and
addr16
in
sbbl
xor
stc
xor
sub
sub
jne
pop
int
and
lret
sub
imul
pusha
aaa
loop
ficoml
push
int
push
cltd
insl
pop
imul
mov
jl
mov
pop
ficoms
push
dec
pop
adc
sub
push
or
idivl
in
lret
clc
jb
andl
or
je
pushf
lcall
stc
test
or
xor
and
lcall
jmp
xor
jecxz
sub
insb
dec
xlat
xchg
ja
and
jg
in
jle
rorb
xlat
js
push
dec
push
aaa
cmp
push
jg
jae
jl
jmp
stc
js
loop
repnz
pusha
in
mov
fistl
hlt
push
mov
in
sbb
sbb
add
cmp
out
pushf
xor
dec
popf
sub
mov
movsb
sbb
adc
xchg
cs
push
inc
mov
adc
inc
jae
push
lcall
jle
push
jp
xor
inc
mov
mov
cmp
push
adc
cmc
addr16
lahf
mov
adc
pop
popa
test
imul
adc
xor
sbb
xchg
mov
lahf
add
cvtpi2ps
xor
pop
pushf
jg
pop
mov
bound
mov
aas
sbb
sbb
iret
jnp
or
cmp
jns
sti
mov
imul
out
fnstsw
mov
dec
out
jae
lods
test
cmp
data16
jmp
fisubs
pop
xor
test
int3
pop
test
add
int
pop
cmpsb
and
xchg
sub
cmpsb
push
sahf
adc
fisttpll
push
aas
addb
std
aam
arpl
aam
in
pop
mov
fists
aad
pop
aaa
popf
mov
cmpsb
fisubl
fldcw
jecxz
lods
test
adc
ljmp
sub
pop
jecxz
jno
mov
xor
push
lock
scas
fiadds
ljmp
sbb
lea
jne
and
xor
push
movsl
cmpsl
or
fnstcw
mov
sbb
ficoml
lds
mov
push
movsl
jge
fstpl
pop
hlt
popa
or
popa
inc
inc
or
jns
pop
scas
das
insb
sbb
mov
mov
inc
imul
inc
iret
mov
push
fldenv
nop
shrl
pop
rorl
mov
je
pop
rolb
movsb
jns
mov
pop
xchg
loope
gs
or
sub
xor
xchg
xchg
icebp
inc
inc
in
sbb
cmpsl
lods
mov
out
ja
lds
push
dec
xchg
je
mov
nop
fidivl
or
mov
pushf
xor
test
aam
stos
test
lds
leave
enter
push
pushf
js
push
sbbb
push
cmp
outsl
ds
popa
dec
inc
sbb
lret
call
rcl
jb
adc
sub
rclb
ja
movsl
xchg
mov
dec
call
inc
cmp
test
rolb
mov
negl
add
arpl
bound
lods
iret
in
mov
imul
ljmp
out
adc
and
ss
mov
fisubrl
jmp
lret
add
enter
mov
xchg
mov
mov
or
mov
cmpsb
pushf
pop
les
cmpb
xor
xlat
ret
int3
push
cmc
lcall
sbb
icebp
dec
inc
shrb
sbbb
fisttpl
mov
xor
dec
mov
rcll
mov
mov
lods
xor
mov
leave
or
mov
or
sbb
mov
call
push
sahf
sahf
pop
pop
xchg
out
sti
les
jle
and
test
mov
add
out
shrb
push
in
in
lret
jne
push
add
jmp
dec
push
and
mov
dec
mov
jo
add
push
ds
push
pop
insl
icebp
outsb
loop
sub
into
les
inc
aad
movsb
roll
sub
pop
shll
cmpl
jbe
jl
dec
pop
test
cmp
dec
mov
cmpsb
mov
stos
dec
push
jge
ror
xor
push
push
mov
mov
cmp
data16
andb
jb
pushf
pop
ffree
out
stos
out
outsl
insb
sti
scas
fstl
rorb
mov
imull
dec
aad
jno
bound
inc
xor
in
cli
ret
xchg
in
stos
pop
pop
in
aam
cli
xor
lcall
xchg
adc
ljmp
jecxz
and
xor
xor
lret
push
sub
int
repz
aaa
mov
test
inc
mov
sub
inc
jns
daa
cli
mov
xchg
pop
imul
insb
xchg
cmp
pop
bound
mov
pop
in
xchg
jmp
mov
inc
addr16
xchg
clc
push
loopne
ret
or
jge
cmp
xchg
lods
cltd
dec
jge
lahf
in
xchg
push
add
lea
icebp
movsl
out
dec
sti
inc
cmp
push
cmp
popf
enter
sbb
pop
sarl
push
popf
mov
popa
push
fnstcw
push
jb
fistl
jp
sbb
out
arpl
mov
std
pop
subl
test
dec
pop
or
sbb
testb
rcrb
jae
data16
iret
dec
fs
xorl
dec
aad
leave
repz
push
in
in
mov
lea
enter
je
mov
rcrb
popf
in
push
push
inc
sahf
cmp
imul
jle
mov
test
mov
test
mov
movl
repnz
cmc
incb
dec
cmp
adc
xor
mov
test
push
mov
add
js
xlat
cld
xor
inc
sti
js
and
je
mov
dec
xor
nop
outsl
sub
add
rcl
mov
inc
push
pop
movsl
add
adc
mov
lods
cmp
mov
test
xchg
mov
add
jno
mov
sub
into
jmp
testl
mov
mov
repz
int
mov
and
xchg
dec
mov
leave
push
test
jbe
cmpsb
jg
lea
popf
push
in
addl
mov
sbb
or
jmp
jbe
cmp
in
sbb
shl
iret
outsl
cmp
mov
dec
fiaddl
mov
pop
pop
ljmp
and
mov
dec
adc
or
loope
loop
cmpl
add
adc
push
sbb
xchg
mov
dec
mov
mov
fsubp
push
in
cmc
mov
fldl2e
lods
daa
inc
cwtl
push
mov
test
sbb
out
in
push
arpl
sub
divb
add
clc
lods
jae
fcoml
sbb
push
orb
or
fisttpl
push
les
add
adc
imul
scas
nop
rcrl
fldt
rcrb
pusha
decl
mov
mov
loope
pop
inc
sbb
sbb
add
pop
or
add
mov
xor
in
pop
adc
sbb
repnz
cs
pop
mov
pop
imul
sbb
out
addb
cmp
jp
movsl
adc
into
xchg
or
lret
fistl
sbb
iret
sbb
bound
dec
dec
push
js
clc
lds
pusha
cmp
in
mov
shlb
out
push
pop
stos
adc
fcmovne
jl
jge
mov
mov
cwtl
insb
push
pop
aas
clc
push
pop
out
daa
les
fdivrs
sbb
aam
imul
mov
lock
and
testl
outsl
jnp
inc
in
mov
mov
es
cwtl
dec
sub
sbb
pop
int
arpl
adc
lea
not
shll
dec
mov
rcll
xchg
xchg
aas
dec
js
fists
jae
loopne
cs
fwait
rcll
in
out
scas
pop
push
fs
pusha
and
xor
aas
inc
xchg
ss
sar
shll
jg
test
pop
sbb
scas
les
lock
sbb
out
inc
xlat
fisttps
pusha
sub
scas
mov
sub
divb
rcrl
adc
addr16
mov
sub
cli
test
movsl
push
or
stos
pusha
fsubl
mov
xchg
test
popa
inc
mov
add
add
std
enter
pusha
xchg
mov
orl
mov
push
cmpsb
lcall
xchg
out
sbb
call
ja
sub
lods
mov
mov
mov
push
add
inc
mull
in
jle
sbb
aas
hlt
pop
repnz
adcl
insl
not
mov
cmp
cmc
mov
in
push
shl
inc
adcl
cmc
push
sbb
shr
and
sbb
jecxz
stos
pop
inc
sub
mov
push
test
gs
pop
das
lods
scas
call
xchg
mov
jle
jmp
int
adc
inc
ds
jae
jnp
push
test
adc
insb
icebp
shrb
test
mov
lret
push
es
mov
dec
inc
or
inc
bound
mov
rorl
pop
mov
jmp
inc
movsl
pop
pop
jl
xor
push
mulb
push
mov
sub
hlt
xchg
es
dec
xchg
mov
inc
push
and
ret
dec
pop
aam
jmp
dec
mov
insl
mov
jbe
inc
gs
repz
or
data16
xchg
pop
xor
sbb
fsubs
stos
into
js
movsl
and
adc
mov
loopne
call
jno
adc
ja
dec
cmp
pop
push
jge
mov
or
mov
mov
test
enter
enter
sar
pop
cmc
loope
xchg
fildll
and
jl
mov
rolb
lods
or
mov
stos
xor
xchg
pop
aad
jnp
xchg
and
xchg
shll
xchg
jl
movsb
in
outsb
add
insl
mov
mov
lret
jge
mov
inc
jb
inc
pop
nop
mov
hlt
cli
mov
icebp
pop
lea
push
or
dec
ds
jbe
mov
ja
jle
cld
insb
outsb
jno
in
and
xchg
enter
ljmp
mov
cli
lret
fsubs
inc
add
pop
xchg
inc
jo
mov
std
mov
aam
into
fcoms
repnz
pop
mov
add
jae
subb
mov
push
sub
cmp
out
jb
mov
mov
mov
mov
hlt
pop
push
aas
clc
int
pop
pop
and
scas
ret
jp
xor
mov
sbb
lods
aaa
inc
adc
cmpsl
repnz
pop
js
pop
push
in
jge
aas
les
xchg
movsb
sbb
lret
test
push
std
inc
mov
push
push
add
ret
das
stos
xchg
out
fs
pusha
jo
call
mov
and
mov
inc
addb
call
rolb
das
and
pop
or
and
add
arpl
inc
xlat
mov
xchg
mov
stos
lock
dec
jo
mov
xor
cwtl
jl
push
test
jge
push
shr
aam
xchg
inc
push
and
mov
mov
data16
fs
jns
and
and
adc
cmp
addr16
pop
xchg
rorb
popf
pop
or
mull
std
movsb
repnz
testb
leave
into
push
shrb
pop
dec
add
xor
mov
add
cld
pusha
xchg
cmc
lods
push
insb
scas
fisttps
and
mov
popa
push
ds
sbb
outsl
inc
into
out
mov
int
enter
ret
or
xchg
dec
call
stc
cli
lds
sub
adc
xacquire
outsb
lods
ds
sti
mov
pop
sub
jp
or
jno
jge
push
and
jbe
test
jnp
lcall
mov
lds
daa
out
in
dec
nop
or
out
test
cmpsb
push
std
fwait
addr16
sti
dec
and
iret
xor
cmpsb
fwait
jns
pop
jno
out
gs
shll
cli
and
ror
add
movsl
lahf
pop
rcrb
mov
imul
inc
imulb
pop
rcr
adc
jp
pop
je
mov
bound
pop
cmp
fwait
push
mov
push
jb
outsb
mov
cmp
push
das
pop
mov
jns
or
ss
lock
or
in
or
popf
inc
imulb
inc
lret
mov
mov
pop
xchg
aas
xchg
shll
ss
pop
push
and
inc
in
mull
mov
sti
loop
and
ret
mov
nop
xchg
rcl
enter
mov
std
adc
sti
popf
mov
jp
mov
faddl
lret
test
mov
push
std
clc
daa
bound
movsl
mov
repz
adc
mov
or
ljmp
cmp
ds
and
fmull
pop
ret
scas
push
sub
sbb
cmp
sub
loopne
leave
sub
outsb
and
mov
daa
int3
sbb
in
lock
adc
out
rol
pop
stos
mov
mov
test
cmp
bound
sub
js
xchg
fmuls
jno
ljmp
repnz
mov
xor
push
sbb
stos
fdivrl
insl
popl
mov
aas
jnp
pusha
sbb
mov
lds
mov
xorb
adc
daa
or
lea
mov
pop
and
mov
cwtl
dec
xchg
dec
mov
decb
jns
mov
mov
in
lods
test
add
daa
or
hlt
aaa
jae
jl
adc
ret
in
xor
and
mov
sahf
filds
mov
arpl
mov
movsl
cli
clc
pop
mov
jae
js
mov
inc
leave
das
out
push
rolb
insl
mov
and
cmp
cmp
lcall
pop
movsb
ljmp
es
push
xchg
ret
push
push
mov
pop
in
mov
push
test
inc
ja
mov
lahf
dec
dec
inc
int3
mov
cltd
inc
jmp
shll
shl
test
xchg
mov
pop
cmp
pusha
dec
enter
jne
mov
scas
jo
jmp
xchg
mov
les
sti
dec
mov
xchg
adc
imul
xor
and
fisttpll
in
add
jno
xor
popf
mov
pop
iret
adc
or
or
pop
mov
je
xor
or
mov
adc
lret
or
xchg
jg
dec
mov
or
test
push
adc
add
cld
outsb
push
sti
hlt
adc
cmp
lcall
mov
addr16
leave
xor
loopne
cs
push
insl
mov
fnstcw
mov
mov
in
adc
and
xor
fldcw
insb
outsb
cltd
push
lods
xchg
pop
push
data16
adcl
cmp
push
xlat
clc
insl
xchg
mov
dec
cs
pop
js
frstor
aas
xor
mov
sub
or
sub
sub
lcall
pop
out
xor
sbb
ja
jmp
xchg
adc
in
push
out
xchg
pop
cltd
add
mov
inc
pop
mov
dec
mov
fstpt
mov
jo
sahf
pop
idivb
andb
popf
add
movsl
push
shr
out
data16
movb
mov
sub
lds
sbb
ficoml
cmpsb
lret
sbb
insb
cmc
clc
mov
outsl
jno
pusha
rol
imul
mov
push
loop
cmp
cli
and
add
iret
dec
in
and
fsubl
ljmp
rcl
fstl
and
pop
mov
dec
pop
loop
loop
sbb
or
push
push
jp
testl
dec
mov
aam
sbb
jmp
mov
mov
test
mov
ss
mov
mov
cmpsb
outsl
cmp
lcall
icebp
fnstenv
jecxz
adc
cmp
adc
jae
push
xlat
enter
insb
pop
dec
movsl
jge,pt
popf
mov
loopne
mov
pop
std
dec
xchg
xor
jbe
or
pushf
test
cmp
dec
dec
inc
pop
leave
ror
iret
pop
pop
hlt
fdivp
push
mov
loopnew
mov
nop
aaa
sub
rcr
cmpsb
mov
fsubrl
ret
cwtl
pop
adc
add
push
fdivrl
xchg
es
stos
jns
xchg
sub
xchg
pop
bound
push
xchg
xor
xor
push
xor
and
scas
aaa
mov
and
pushf
lods
sbb
pop
out
xchg
or
xchg
pop
and
stos
stos
cli
cwtl
inc
jp
sahf
pop
pop
ret
les
fs
das
add
inc
jle
into
jb
insb
out
fnstsw
das
mov
int3
mov
sub
movsb
jbe
test
fisttps
jl
rcl
jo
add
add
mov
out
ss
xor
aad
and
enter
and
push
push
cmp
xor
insb
lahf
lret
imul
xor
cltd
mov
xchg
aam
aaa
sub
add
push
jnp
xor
xor
jbe
lahf
cmp
loop
add
xor
cmpl
bound
inc
push
mov
mov
adc
xchg
add
ret
ficoml
test
outsl
xchg
push
popa
pushf
mov
and
push
inc
aam
push
lahf
jl
negb
aaa
stc
pop
insl
jnp
mov
in
lret
rorb
in
test
lock
icebp
pop
add
int
mov
inc
push
stos
cltd
sbb
cli
fwait
test
movsl
xor
xchg
mov
pop
jb
add
outsb
push
dec
pusha
daa
inc
testb
cwtl
jb
pop
imul
cmp
and
pop
gs
ds
mov
xchg
outsl
loopne
sahf
and
pop
jp
and
or
or
les
xchg
out
sub
leave
fld
mov
add
and
mov
bound
or
test
push
or
dec
call
insb
ficoms
or
dec
fs
inc
fwait
ljmp
or
adc
rcrl
ja
pop
ds
sub
aad
add
and
out
adc
mull
push
jp
or
jns
icebp
cmpsb
pop
fbstp
jb
xor
xchg
inc
xor
push
imul
aas
or
movntq
out
inc
push
les
stos
loope
fwait
jmp
jbe
ss
je
mov
ja
jp
orl
lea
loopne
pop
cmpsl
mov
mov
jno
mov
and
mov
adc
mov
adc
fs
ja
or
xchg
add
lea
leave
outsb
xor
jl
xchg
jecxz
ss
dec
inc
bound
lods
gs
pop
stos
mov
sahf
push
arpl
into
sbb
pop
inc
push
mov
mov
shl
imul
jmp
cmpsb
mov
sub
mov
mov
jmp
arpl
fildll
push
clc
jmp
mov
outsl
sbb
dec
fucomip
mov
repz
sbb
fcoml
cmpsb
sti
and
scas
pop
xor
mov
inc
push
mov
subl
lds
adc
aam
add
pop
sbb
aas
aas
lahf
ss
cli
stos
xchg
inc
movsb
mov
jle
mov
sbb
je
test
testl
int3
push
mov
xchg
pop
lock
icebp
enter
mov
gs
xor
or
in
gs
data16
jne
xor
icebp
fldt
in
push
add
mov
mov
pushf
inc
sbb
push
mov
test
mov
adc
inc
ja
ds
cmp
sahf
and
mov
jno
and
mov
lods
sub
mov
jmp
popa
pop
mov
or
scas
push
jmp
xchg
jno
mov
popa
ljmp
jb
push
add
stc
stc
and
xchg
xorb
fldenv
lcall
pop
sti
sbb
mov
je
pushf
inc
sbb
inc
popa
insl
icebp
lds
sub
xchg
loop
push
mov
pop
mov
adc
push
mov
inc
cmp
sub
not
jo
inc
mov
jnp
mov
xchg
cli
add
fcmove
jae
fdivrl
mov
popf
mov
mov
mov
fstp
stos
dec
mov
pushl
or
add
dec
std
ja
std
xchg
test
cs
sub
arpl
mov
lahf
fisubl
xchg
jl
out
jmp
xor
icebp
lds
lods
test
pop
sub
jns
cs
dec
ret
icebp
push
sbb
xor
out
xor
sub
out
popa
mov
and
jns
adc
push
jge
cmp
mov
shll
mov
cmp
mov
ficomps
in
sub
xchg
push
mov
lods
push
push
enter
inc
inc
cmp
or
je
mov
fwait
mov
mov
in
fcmovnb
fmul
mov
popf
sbb
or
xor
fwait
dec
repnz
dec
lret
pushf
mov
stc
mov
imul
clc
fldl
call
jmp
icebp
jns
sub
jl
lea
test
sbb
jno
pop
pusha
scas
sub
out
insl
pushf
test
mov
inc
call
call
in
push
adc
or
and
cmp
cmp
mov
mov
mov
fcmove
cs
xchg
movsb
inc
sahf
jp
xor
inc
int3
or
repnz
outsl
out
nop
adc
jl
jae
jae
sub
xchg
fstpl
mov
repz
dec
sub
mov
mull
loope
mov
mov
icebp
mov
and
fisubrl
or
push
data16
or
push
mov
inc
nop
xchg
lcall
test
mov
push
js
int3
repnz
out
enter
inc
pushf
or
addl
stos
mov
scas
and
xchg
mov
lods
dec
cmp
inc
mov
leave
ljmp
nop
add
mov
imul
mov
enter
sbb
test
inc
repz
jbe
inc
jmp
shr
mov
jge
push
out
pusha
or
jp
jae
or
adc
lret
data16
cs
add
ss
leave
push
xchg
es
ss
sub
pop
stc
xor
or
mov
test
rorl
shrb
push
lods
mov
in
mov
push
adc
les
sub
pop
xor
add
test
aad
dec
in
mov
pop
fimull
sti
push
sbbl
fwait
pusha
std
jp
out
mov
fst
mov
sahf
int
in
loopne
lcall
fwait
sti
shl
nop
mov
mov
iret
dec
xor
inc
cli
inc
cli
filds
add
mov
push
mov
push
fldenv
loop
jnp
cmp
push
jb
inc
enter
rorl
into
inc
lods
sub
mov
je
jg
movsb
push
iret
getsec
push
dec
cmp
lahf
push
mov
mov
test
lods
inc
out
shl
push
xchg
neg
pop
jno
lods
fnsave
mov
mov
insb
repz
dec
sti
jns
adc
mov
ret
cmp
mov
cmp
and
pop
ret
adc
xchg
cmp
mov
sbb
gs
push
fs
daa
cli
adc
push
xor
inc
in
inc
inc
out
dec
mov
mov
sbb
xchg
pop
dec
shll
jl
daa
mov
push
push
leave
rorl
add
pop
shlb
xor
repnz
xor
mov
pcmpgtb
inc
and
mov
fmull
jb
and
inc
cmp
ret
inc
xor
enter
insl
push
push
pop
add
xchg
rorb
or
jb
push
jl,pn
out
movsb
add
fisubrs
dec
stos
popf
adc
fisttps
mov
test
scas
fwait
or
ret
scas
cmpsb
loopne
and
iret
fisubrl
mov
pop
imul
cld
es
xorl
ret
popf
mov
fiadds
pop
aad
outsb
les
dec
daa
mov
fiaddl
nop
repnz
decb
pop
pop
scas
and
adc
ret
imul
xchg
push
mov
pop
and
movsb
test
fistpl
inc
and
lock
lock
not
and
lret
loopne
stos
sbb
sub
sub
imul
scas
sbb
dec
mov
sbb
fcompl
inc
fwait
mov
push
leave
pushf
jo
sub
test
lods
add
adc
fsubs
sbb
sbb
test
lahf
sbb
sbb
out
xchg
pop
daa
mov
addb
pop
das
sti
popf
sbb
jnp
negb
push
ds
arpl
cmp
xor
aad
out
mull
mov
pop
fbld
xchg
sub
mov
aad
inc
lcall
fbld
cmp
or
insb
jbe
lret
or
jb
xchg
xchg
jae
daa
xchg
shll
rcr
mov
or
xor
pop
adc
fstps
jo
loope
sub
sbb
aas
mov
sub
xchg
addr16
sbb
in
sbb
out
mov
test
mov
xchg
lods
arpl
repnz
adc
rorl
push
gs
inc
shll
add
outsb
cmp
mov
out
mov
rcll
dec
fs
mov
imul
add
adc
std
pusha
pop
into
insb
int3
pop
test
js
mov
lods
mov
testb
dec
pop
repnz
daa
xchg
ffreep
pop
int
dec
mov
mov
adc
outsb
adc
adc
jmp
insb
aas
out
push
jo
cmp
xchg
lods
lock
mov
test
sub
lods
mov
in
scas
and
stc
mov
in
inc
cli
mov
mov
loope
mov
lods
or
out
cmp
into
xchg
fsts
jmp
push
inc
faddl
xchg
in
and
cmpsb
push
jge
test
pop
les
mov
je
inc
stos
pop
xchg
dec
subl
mov
test
mov
lock
and
mov
out
sub
jo
imul
repnz
and
and
xor
imul
cmpsl
ljmp
pop
and
or
inc
test
push
inc
push
stos
pop
js
bound
pop
xchg
fs
xor
faddp
mov
aam
pushf
mov
cmp
ja
adc
inc
or
repnz
sti
adc
test
mov
sti
rcrb
jne
mov
pusha
std
sbb
lret
adc
movsl
fwait
ret
mov
dec
xchg
dec
push
fstpt
sub
push
mov
es
adc
cmpl
notl
xchg
adc
mov
and
or
lcall
fdivrl
and
push
es
in
inc
sub
lahf
mov
lods
jg
dec
frstor
jmp
xchg
and
outsl
aad
jnp
rorl
and
mov
cmpsl
gs
rol
pop
ss
outsl
sbb
dec
or
sbb
push
ss
int3
cmp
test
xchg
pop
sbb
push
and
pop
xchg
mov
daa
add
pop
insl
or
aaa
dec
cmpsb
scas
dec
ret
int3
adc
sub
ss
mov
stc
dec
je
pop
popa
xchg
lcall
js
inc
pop
fisttps
sub
scas
stc
sbb
jne
mov
or
ret
scas
xchg
push
inc
pop
lods
or
pop
les
push
or
xor
outsb
add
or
xlat
pop
outsb
xchg
pushf
outsl
push
sbb
out
jge
mov
shrb
fstps
dec
jp
repz
add
push
sbb
cld
pop
jne
scas
pop
stos
int3
loope
popa
aam
addr16
jge
enter
clc
dec
adc
pop
sti
xor
or
call
and
push
sub
xchg
scas
xchg
repnz
jnp
into
mov
icebp
movsl
cmp
loop
jmp
or
jp
xor
adc
or
in
xchg
or
pushf
adc
fld
push
pop
jns
push
daa
in
in
test
pop
xor
lret
sahf
dec
adc
inc
adc
shrl
push
shl
outsb
add
push
divb
cmp
jne
js
js
mov
jecxz
nop
cld
cmc
fists
mov
ret
aam
mov
mov
inc
test
jp
cmp
cmc
adc
pop
inc
sbb
orl
adc
add
push
push
dec
leave
addl
in
xchg
mov
iret
inc
pop
jle
push
cs
or
ljmp
hlt
or
or
dec
push
sbb
sahf
popa
push
push
addl
cmp
jge
sub
inc
cli
xchg
cmpsb
pop
sbb
lock
gs
mov
xchg
cmp
mov
ljmp
push
or
je
adc
int
inc
xor
rcll
mov
rcrb
mov
ror
mov
sub
dec
repnz
loop
pop
movsl
push
xor
leave
int3
loopne
mov
test
xchg
call
mov
add
adc
std
dec
lock
push
mov
or
push
dec
jnp
fimull
aam
add
sarl
sub
gs
stos
push
or
aad
ljmp
neg
ret
mov
and
stos
xchg
cs
xor
int3
pop
mov
mov
fmuls
sbb
xchg
mov
into
mov
or
mov
in
and
sbb
add
push
sub
popf
cmp
mov
mov
sub
jl
lret
leave
mov
shrl
mov
push
dec
popa
bound
fcomps
fmul
stc
pushf
popf
mov
ds
repnz
sub
or
sarl
push
loopne
sbb
pop
mov
movsl
out
dec
and
outsl
and
outsl
mov
pop
cmp
rcrl
std
shl
mov
insb
stc
pop
mov
xchg
repnz
push
rcrb
les
stos
xchg
dec
sub
inc
jmp
pop
mov
fwait
or
dec
imulb
insl
push
movsl
out
bound
jecxz
and
imul
mov
xchg
jl
das
ficoms
out
sti
aad
icebp
mov
mov
mov
test
fldt
or
into
mov
push
and
int3
stos
outsl
mov
push
fwait
xor
jnp
scas
sahf
xor
cmc
outsb
cmpsb
adc
xchg
jns
addr16
aam
inc
push
mov
pop
xchg
in
push
dec
outsb
adc
das
pop
add
scas
or
adc
jnp
mov
arpl
push
and
mov
pop
pop
push
inc
mov
mov
push
cmp
pop
ret
pop
jg
stc
pcmpeqd
repz
rcrl
or
insb
cmpsl
pop
push
mov
add
sbb
loopne
pop
gs
fcomi
pop
scas
test
sbb
mov
ret
xchg
js
adc
sbb
je
mov
jl
dec
adcl
inc
sbb
sbb
in
mov
imulb
xor
mov
xchg
dec
rcrb
int
push
xchg
dec
rcrl
fwait
dec
xchg
aad
lea
xrelease
insb
pop
mov
push
cs
orb
movsb
jnp
mov
dec
mov
in
inc
jp
fdivrl
sub
test
inc
les
dec
je
outsb
add
add
or
out
dec
mov
and
test
inc
lea
mov
fisubs
dec
jo
sahf
push
jae
les
aaa
push
imulb
push
jle
fcoml
dec
jne
pop
cmp
mov
in
popf
inc
ret
jnp
dec
push
push
int3
push
hlt
cld
lahf
pop
sub
mov
push
xor
lret
cltd
push
loope
add
mov
pop
std
push
ret
lret
fwait
bound
add
jl
shrl
out
fisubl
popa
or
mov
mov
ds
pop
mov
jb
mov
mov
loop
incl
imul
and
data16
daa
orl
data16
jmp
call
jb
out
dec
mov
mov
sub
adc
out
repnz
fwait
xchg
lds
inc
std
out
data16
jmp
fwait
in
xor
movsl
adc
xchg
iret
sahf
xchg
sub
xor
pop
das
and
cmpsl
dec
and
out
in
les
lock
cmpsl
cmp
mov
sahf
out
fstpl
or
mov
xchg
cmp
cwtl
mov
add
andb
jae
lcall
jle
jae
loop
mov
aas
lcall
fwait
jle
xchg
push
in
or
pop
jle
mov
arpl
lcallw
inc
mov
inc
test
pop
inc
sbb
mov
enter
and
lret
ja
cmp
jbe
mov
ja
std
pop
inc
enter
and
xchg
dec
cmp
test
lds
and
sub
iret
sub
xchg
shll
repz
add
mov
stc
aas
inc
sub
movsb
pusha
cmpsb
push
jge
fiaddl
push
pop
or
sub
jns
cwtl
in
lods
in
pop
dec
add
mov
rclb
shrl
push
or
mulb
xor
js
sarb
add
enter
push
ss
cmpsl
mov
sub
jne
add
add
sub
leave
inc
imul
mov
jno
inc
pop
sarb
pop
xchg
cmp
and
fimull
mov
inc
push
sub
mov
push
int3
fidivrs
scas
pusha
inc
hlt
cmp
add
scas
hlt
clc
icebp
lods
add
xor
push
les
inc
outsl
lahf
sbb
pushf
adc
push
fs
out
icebp
int
repz
sub
lock
das
and
fiaddl
in
inc
stc
and
out
jb
add
fdivrl
mov
aaa
pushf
outsl
mov
add
loop
hlt
sbb
pop
mov
jnp
leave
inc
add
rorl
loopne
ret
mov
sbb
or
mov
ret
sbb
popa
mov
mov
pop
bound
fdivs
mov
add
ds
outsl
xchg
and
sub
xor
jbe
jmp
push
outsl
jno
xchg
or
subl
inc
add
ret
xor
inc
adc
cltd
icebp
int
or
mov
aam
out
push
in
add
cmp
dec
sbb
es
sub
sbb
jl
jns
sti
mov
shlb
cwtl
dec
into
dec
aas
lret
insl
xor
sbb
inc
and
outsb
divb
jno
adc
xlat
cmpsl
sub
inc
add
fwait
and
decb
add
and
adc
jbe
jne
xor
cmpsb
leave
jle
js
push
xlat
sub
inc
push
je
adcb
gs
xchg
iret
scas
enter
scas
pushf
test
insb
sbb
dec
imulb
mov
jnp
bound
clc
dec
push
bound
mov
lods
das
push
or
jb
mov
sbb
add
negl
push
loop
xchg
xchg
das
pop
pushf
sbb
je
dec
mov
push
xor
clc
sbb
xor
aaa
mov
pusha
fildl
jmp
inc
inc
xor
xchg
cli
mov
insb
adc
aaa
xchg
pop
pop
adc
pusha
in
or
sbbl
inc
push
test
add
cmpsl
sahf
scas
repnz
cmp
inc
xchg
rorl
and
jns
add
add
lret
jmp
stc
popa
mov
jg
lods
sbb
in
pushf
outsl
inc
ljmp
test
sbb
cmp
mov
mov
sbb
aam
addr16
fldenv
ja
cld
rcrb
push
test
push
mov
in
fistpll
lret
addr16
test
add
xor
xchg
mov
xchg
sar
push
lret
mov
sbb
lret
aam
ret
mov
sub
das
lahf
jl
lret
mov
repz
scas
dec
pop
push
sbb
sub
xchg
rcr
sub
adc
mov
movsl
cmpl
mov
mov
mov
and
inc
jmp
and
push
pop
jl
outsl
adc
shll
sub
repnz
jle
sbb
jb
dec
push
push
jno
inc
mov
add
imul
and
ds
cmp
xor
pop
push
pop
inc
scas
dec
xchg
jnp
stos
add
je
sub
dec
mov
repz
mov
xor
sbb
mov
cmpsb
xchg
adc
inc
pushf
stos
repnz
stc
pop
or
and
mov
mov
add
add
insb
sbb
adc
mov
data16
ret
jge
xchg
dec
adcl
inc
stc
aas
add
pop
sub
leave
jmp
jl
sahf
rcrb
insb
test
jae
mov
or
pop
fcmovbe
pop
dec
adc
enter
cld
addl
cli
idiv
fldenv
test
cmpsl
fdivrp
inc
mov
shll
fidivrl
sub
notb
and
push
and
xchg
jecxz
adc
pop
pop
es
inc
jg
scas
js
in
jb
shr
sbb
testl
shll
mov
inc
dec
leave
push
pop
cli
mov
in
or
lcall
test
pop
adc
rorb
rcll
mov
jg
std
or
mov
lea
adc
shrl
rcrb
xchg
insl
or
mov
adc
scas
cmp
or
and
xchg
popf
outsb
lods
or
pop
fsubl
mov
add
or
je
repnz
leave
mov
shlb
mov
jge
and
ror
inc
lods
add
push
cmp
xor
cltd
jge
jns
jmp
mov
push
lea
cld
out
xchg
sbb
outsb
imul
push
xor
jecxz
cmp
fstpt
sub
xchg
dec
cmp
xchg
push
lcall
xor
jle
inc
lods
lock
ljmp
mov
jae
lea
test
xchg
popf
fimuls
enter
lock
push
mov
in
pop
imul
loopne
out
mov
shlb
mov
jmp
out
dec
ret
inc
adc
fcom
inc
mov
mov
fs
loopne
push
nop
xor
xor
or
push
mov
shl
mov
frstor
aad
push
cltd
and
dec
sbb
add
lods
jb
scas
push
xchg
std
mov
mov
sbb
add
insl
and
jg
in
xor
shrl
push
fmull
jo
adc
mov
lret
add
dec
push
xlat
test
movsl
and
mov
test
sub
cmp
xchg
je
and
gs
bound
cli
or
xor
jae
rol
lock
inc
ret
loop
pop
insb
imul
push
xchg
push
lock
imul
mov
push
inc
mov
adc
stos
mov
inc
aad
stc
mov
out
aaa
pop
mov
mov
jge
adc
mov
fstps
cmpsb
vmovlps
or
mov
outsb
cmpsb
leave
ret
sbb
in
test
add
pop
sbb
sbbl
orl
jp
pop
xor
cmp
push
fs
jno
xor
adc
xlat
cmpsb
cmpsb
sub
gs
dec
rorl
out
xor
sbb
dec
ss
jae
jb
push
icebp
mov
cmpsb
or
cmpsb
dec
test
aam
fcoml
push
push
lock
mov
aad
iret
inc
fdivl
rcr
out
call
fmuls
lds
mov
test
cmp
movsl
test
std
xchg
jb
hlt
shlb
subb
dec
and
nop
xor
test
sub
mov
fwait
sub
fiaddl
pop
sub
popf
adc
insb
pop
xchg
xchg
xchg
repz
lcall
pushf
inc
stc
leave
or
sub
outsb
dec
ljmp
orb
cmp
or
pop
fwait
test
mov
inc
add
daa
xor
dec
xchg
and
ret
cmp
fdivrs
or
test
jo,pn
ljmp
sub
add
mov
mov
xchg
lods
add
add
out
cmc
mov
add
clc
lods
out
ss
shl
lods
sub
mov
bound
ret
push
addr16
and
fistl
in
lcall
int
lahf
mov
cmpsl
adc
mov
xlat
adc
loopne
hlt
push
lods
icebp
outsl
aam
cmp
shrl
mov
fcoml
xor
fcoms
bound
pop
lock
jle
mov
sbb
lods
cmp
shrb
push
shl
stos
mov
or
arpl
mov
or
jp
es
cmpsl
scas
aam
adcl
test
mov
into
pusha
pusha
test
mov
popf
in
ret
shll
mov
jg
cmp
gs
sub
loop
jle
test
repz
pop
popf
out
jecxz
movsb
out
lret
xor
imul
or
pop
test
mov
cmp
into
cmc
scas
je
push
or
adcl
inc
xchg
sub
ds
xor
jge
test
int3
adc
add
jno
dec
push
adc
add
into
push
and
jns
imul
mov
inc
fidivrl
mov
outsb
add
int
in
adc
adcl
and
das
push
test
push
cmp
out
adc
sub
repnz
lods
inc
pop
out
add
mov
mov
mov
jns
xchg
out
lcall
cltd
cmp
ds
sub
inc
jmp
xchg
push
inc
cli
inc
stc
pusha
movsl
cltd
mov
clc
icebp
leave
mov
mov
inc
call
arpl
push
push
imulb
cli
out
dec
pop
or
jb
in
mull
stos
cli
std
mov
rcr
imul
mov
xor
roll
repnz
cld
pop
add
mov
les
mov
lahf
jne
stos
dec
push
je
push
fwait
in
jns
pop
inc
cld
fucomp
aam
lods
pop
scas
mov
addr16
out
dec
inc
in
adc
insb
mov
icebp
test
xor
in
inc
ja
repz
cltd
jge
mov
test
mov
sbb
mov
sbb
ja
xchg
rorb
ja
call
sahf
roll
push
shrb
sub
stos
out
loope
dec
iret
xor
jae
xchg
xchg
movsb
sub
negb
es
sub
mov
sub
inc
es
iret
pusha
mov
loopne
xor
pop
mov
das
push
nop
int3
xchg
ljmp
sahf
sub
pop
or
ss
icebp
sti
cmp
shlb
ljmp
jne
jge
out
insb
aam
imul
adc
loope
pop
lcall
mull
les
cmp
xchg
filds
dec
call
push
rorl
sub
mov
pop
pop
fidivrl
jnp
int3
pop
pusha
add
scas
sub
mov
faddl
push
cmp
inc
fwait
loopne
mov
adc
adc
inc
and
bound
adc
iret
pop
and
sub
dec
pop
imul
push
dec
jbe
call
aas
lret
js
das
stos
push
adc
loopne
sub
ljmp
mov
sti
inc
jnp
stos
sbb
cmp
jne
inc
out
push
adc
rcll
sbb
mov
jl
std
lahf
jle
cmp
ljmp
pushf
cld
cmp
shrl
ret
mov
pop
push
testl
cs
lret
xchg
mov
leave
sub
test
push
xchg
lods
hlt
frstor
sbb
cmpsl
jb
outsl
sbb
pop
jmp
shll
in
mov
shlb
jl
adc
pop
jo
adc
lcall
jl
in
add
mov
xor
insl
push
mov
add
out
mov
or
pop
dec
xchg
xor
rcll
jecxz
repz
jecxz
lods
mov
aad
mov
adc
adc
or
repz
ret
inc
xchg
xor
loope
pushf
daa
fwait
sbb
and
aad
cmpsb
into
subb
mov
fldt
xlat
in
cmp
test
sub
push
jbe
pop
je
jb
jae
cmpsl
and
les
cltd
and
aas
xor
adc
addr16
pop
dec
push
sub
dec
sub
jnp
inc
fisttpl
and
cmp
shll
inc
mov
xlat
cmp
push
jnp
fcoms
ret
push
sbb
mov
lret
inc
dec
ljmp
push
iret
pop
xchg
aam
movsb
adc
aam
jp
out
repnz
jle
pop
test
ljmp
mov
cli
push
mov
lea
cltd
and
repnz
xor
subb
dec
lods
in
les
jmp
mov
mov
mov
sub
cmpsl
fcoms
in
mov
pop
orb
ss
sub
and
test
jp
mov
inc
push
in
xorb
push
fisttpl
movsl
mov
and
xor
ret
sbb
cmpsb
std
push
in
pop
out
fsubp
xor
or
clc
dec
fdiv
negb
or
jecxz
or
cmp
mov
dec
stos
and
cld
push
and
sahf
push
lahf
adc
adc
mov
fld
stc
fimull
pop
pop
or
aam
adc
add
loop
flds
test
push
jecxz
add
sub
lds
mov
lret
pop
dec
into
mov
pop
xchg
mov
pcmpgtw
mov
jle
ror
mov
cmp
subl
ret
cmp
and
mov
fdiv
jns
jle
test
dec
addr16
mov
adc
push
inc
aas
push
mov
mov
stos
sarb
push
add
sub
sbb
dec
pop
out
push
popa
mov
xlat
dec
and
gs
mov
jne
cld
int
test
xor
fisubrs
jno
icebp
dec
ds
mov
test
mov
xor
xchg
cmp
jg
int3
shll
std
cmp
jge
or
sti
arpl
out
arpl
mov
test
xlat
in
imul
imul
xchg
add
aam
ret
cs
popf
js
xchg
iret
or
test
push
scas
sub
stos
and
mov
pop
mov
jg
pop
lds
mov
sbb
clc
push
test
xchg
outsl
loopne
jb
jp
add
test
cltd
sbb
mov
fsub
ret
rcll
movsb
out
insb
enter
das
cmp
data16
daa
adc
adc
fstpt
xchg
inc
insl
gs
push
std
es
std
repz
pop
ja
fldl
xchg
sbb
insb
sub
cld
mov
jo
xchg
push
movsb
addl
dec
and
mov
dec
xchg
push
dec
or
call
ja
xor
inc
cmp
aam
dec
divl
scas
sub
or
call
in
mov
dec
cmp
daa
or
decl
fldl
mov
frstor
cmpsl
mov
into
mov
cmpsl
push
sbb
data16
cmp
test
mov
mov
adc
push
fs
xor
mov
sbb
arpl
mov
or
pusha
cmp
add
pop
lods
or
jb
sub
xor
sti
setnp
jmp
xor
mov
sub
dec
pop
inc
sbb
mov
subb
icebp
lock
in
mov
pusha
mov
and
in
mov
and
in
sbb
mov
pop
cltd
int
popa
js
pop
shr
jne
jns
hlt
jno
sbb
jo
jl
push
lods
fimull
mov
jae
mov
ja
test
cmp
stos
xor
mov
cmp
ja
jl
sub
sahf
jbe
lods
rcrb
out
and
and
push
std
mov
insb
enter
loop
mov
in
jns
es
inc
push
add
and
and
sub
dec
testl
push
inc
sbb
sub
add
sub
inc
adc
incl
inc
das
jb
stos
fists
outsl
sbb
mov
pop
arpl
xchg
cld
dec
inc
in
imul
mov
pop
push
sub
les
cmp
in
mov
sahf
les
insb
cli
cs
cmp
sti
gs
lods
imull
iret
pusha
xchg
aad
mov
dec
sbb
mov
leave
lret
mov
cmp
xlat
sahf
je
sbb
push
sbb
jb
and
sub
add
movl
cmp
jae
dec
lock
sbb
push
mov
mov
test
ret
dec
sahf
sub
inc
inc
xor
sbb
push
push
sahf
rcll
fmull
add
sbb
arpl
dec
xor
pop
jno
loopne
inc
mov
stos
rcr
lods
mov
movsl
imul
sub
sbb
std
push
stc
mov
iret
decb
imul
or
add
mov
repnz
cmc
out
jns
sbb
pop
mov
clc
fidivrl
insb
xchg
mov
xor
pushf
movsl
sub
data16
add
pop
fadds
sbb
stos
pop
inc
notb
pop
xor
pop
pushf
lcall
push
push
cld
sub
or
and
aad
push
pop
mov
ffreep
push
outsl
mov
into
enter
jne
and
and
ret
pusha
les
sub
xchg
jecxz
or
mov
ret
inc
shl
add
je
movsb
jg
mov
aad
test
movsb
into
jmp
arpl
imull
mov
pop
sti
dec
stos
jmp
mov
loopne
rolb
jbe
mov
mov
xor
mov
bound
call
daa
mov
adc
mov
lods
ds
mov
out
popl
xchg
inc
jns
addl
aad
xchg
aam
mov
repz
jmp
mov
lea
sub
cmp
pop
xorl
ljmp
and
shll
arpl
xlat
sbb
stos
xchg
dec
dec
push
mov
adc
mov
in
push
sbb
int3
fucomip
or
pop
movsl
fxch
scas
jne
jmp
pop
mov
test
fildll
cmp
add
nop
jb
add
cmovo
push
out
fisttpll
movsl
cmpsb
pop
push
cmp
jnp
ds
stos
jb
jne
in
push
xchg
adc
cld
fs
mov
or
add
jg
into
or
or
mov
pop
xor
out
jne
mov
mov
or
ss
fsubrl
cmovl
call
arpl
add
cmp
aaa
leave
xchg
pop
fisttpll
pop
nop
push
fidivs
dec
test
insl
dec
adc
pusha
sahf
adc
xor
and
inc
dec
dec
jns
jbe
popf
sub
out
arpl
jmp
repnz
inc
cld
xchg
and
push
mov
stc
bound
mov
cs
mov
ss
mov
mov
xchg
loop
stc
ret
inc
mov
filds
pop
sahf
cwtl
lock
mov
mov
es
mov
xorl
ljmp
pop
scas
push
test
inc
sub
xor
and
jmp
rcll
xor
mov
test
movsl
leave
mov
and
popa
xlat
push
or
inc
filds
pop
out
cmp
sub
int
mov
cmp
mov
add
or
loopne
and
fistl
lcall
push
dec
jo
mov
push
inc
jb
inc
push
pushf
popl
inc
stc
or
or
das
popf
mov
rcl
dec
mov
and
insb
fwait
pop
cld
insl
mov
jp
cmp
jmp
cmp
cmp
mov
jb
mov
lds
sar
orb
xor
pop
loop
adc
lcall
or
pop
enter
icebp
in
scas
push
in
jg
and
adc
sub
fwait
rcrb
mov
fldl
or
fwait
call
push
xchg
jp
outsb
pop
push
mov
loope
inc
adc
rolb
ret
fdivrl
not
into
mov
or
sbb
xor
adc
push
lret
cmp
or
cmp
imul
aad
jecxz
cmp
xorb
or
bnd
mov
daa
push
sub
adc
aas
jecxz
ret
and
mov
and
cli
pop
mov
shrb
rcll
pusha
push
pop
aas
cmp
insl
repnz
popa
cli
pop
jo
jmp
jno
add
cmc
inc
mov
mov
addl
aaa
aaa
jg
push
mov
dec
out
add
xchg
stos
xchg
in
mov
inc
fwait
mov
adc
push
popf
sub
jo
out
and
aas
cwtl
cld
mov
pop
jns
adc
inc
jmp
sarl
outsl
enter
fiadds
push
mov
rcll
push
daa
mov
jl
test
test
ja
icebp
mov
dec
orb
mov
push
mov
jno
pushf
dec
adc
cmpsb
ficoml
rcll
out
into
jmp
sub
popf
stc
or
cwtl
mov
add
mov
imul
jns
add
adc
cmp
mov
and
dec
jp
fists
cmp
shufps
mov
jbe
enter
or
imulw
test
and
mov
mov
int3
pop
dec
int
fisttpl
es
daa
cmp
push
mov
mov
add
nop
lahf
push
mov
lock
in
ss
sar
pop
out
jl
repz
and
jnp
stos
dec
adc
lret
in
insb
or
inc
push
out
enter
das
xlat
and
in
hlt
das
jg
cltd
and
and
and
outsl
or
mov
stos
adc
les
xchg
or
mov
fldl
test
add
mov
in
clc
rorb
mov
dec
sub
xchg
dec
loope
popa
daa
sbb
fcmovnbe
lea
xlat
add
pop
dec
mov
pop
inc
fbstp
jns
mov
jae
or
mov
xor
or
adc
push
aas
loopne
sbb
xchg
and
jge
sbb
add
fcmove
push
mov
mov
subl
jl
scas
jl
sub
dec
jg
jle
out
ret
xchg
sahf
inc
cmp
pop
out
mov
sbb
addr16
push
or
cwtl
dec
jmp
add
fisttps
mov
test
jp
mov
into
nop
xor
lahf
jns
pop
aad
into
fsubs
jg
fisubrl
shll
dec
mov
fcomip
xor
pop
das
arpl
and
fcomps
jecxz
mov
lds
add
mov
mov
insb
sub
xlat
pop
insb
enter
fbld
icebp
and
xchg
call
repnz
or
fimuls
insl
fwait
jl
outsb
fimuls
xchg
and
mov
clc
idivb
xor
mov
rcrb
cmpb
out
sbb
out
sarb
js
xchg
sahf
mov
mov
xor
test
scas
jl
insb
pop
cmpsb
add
in
push
or
push
bound
ljmp
pop
inc
orb
arpl
sbb
mov
ret
mov
pop
pop
mov
lods
xlat
xor
dec
mov
add
aaa
nop
int3
rclb
mov
negb
mov
icebp
mov
outsl
xchg
pop
push
jg
adcl
dec
sbb
pop
pop
mov
fwait
movsl
call
mov
cmpb
out
and
testb
lcall
in
mov
add
or
xchg
movsl
push
or
popl
push
loopne
mov
add
mov
fnstenv
out
sub
sti
cltd
dec
bound
or
das
xor
addr16
sti
imulb
cwtl
mov
ret
mov
orl
mov
or
xchg
rcrl
adc
in
rorl
pushf
inc
enter
sbb
jg
jb
push
adcl
jge
pop
mov
lods
lret
and
fistpll
sbb
lea
test
mov
loop
in
es
cltd
add
dec
pop
jne
das
movsb
push
inc
rol
cltd
dec
push
jbe
jmp
pop
sbb
lods
das
add
add
adc
jbe
dec
mov
push
insl
scas
xchg
push
sub
imul
inc
jnp
adcl
inc
je
cmp
test
push
bound
mov
test
aas
out
mov
push
cmpsb
or
mov
sbb
hlt
pusha
sub
mov
int
pop
push
stc
aad
arpl
cmc
sub
mov
pushf
dec
inc
jge
mov
xchg
ljmp
je
in
push
cld
adc
dec
loop
aad
mov
xchg
std
xchg
std
fucom
mov
outsl
cmpsl
mov
push
mov
rcrl
daa
outsb
loopne
jecxz
test
dec
data16
mov
ljmp
xor
in
lahf
out
sub
lcall
pop
mov
dec
pop
lock
inc
fdivs
or
or
add
jmp
test
loope
xchg
imul
cmc
lea
sbb
mov
leave
add
pop
cmp
js
fadds
fnstenv
fisttpl
mov
mulb
jns
jp
xor
lahf
jecxz
ljmp
lods
rcrb
and
xor
aam
loop
sub
cmpsb
subb
fprem
xor
xchg
jl
jbe
push
pusha
cmp
and
inc
stos
mov
jno
sbb
mul
add
mov
inc
arpl
mov
cmp
xlat
sbb
insb
mov
mov
cltd
ss
sbb
or
fwait
push
or
mov
stos
inc
mov
mov
or
adc
std
daa
ss
sub
sti
aam
mov
fs
movsb
xor
and
fidivs
gs
mov
fdivr
lcall
repz
cmp
push
std
arpl
out
sub
sbb
popf
decl
fists
out
push
gs
cmpsl
cltd
loope
and
imul
xchg
dec
dec
push
movsb
pop
icebp
rcrb
jo
mov
cmpsl
movsl
pop
mov
mov
add
iret
and
iret
sbb
and
pusha
hlt
popa
dec
dec
ror
insl
push
cmp
mov
lods
mov
and
mov
clc
mov
inc
in
cmpsb
inc
dec
cwtl
jae
sahf
subl
rcrb
sbbl
xor
das
or
add
mov
fistps
sub
cltd
adc
insb
or
mov
mov
lods
test
pushf
dec
add
push
stos
out
jle
lret
push
aas
das
jns
adc
fadds
js
pop
cwtl
shll
sub
pusha
mov
fsubp
scas
inc
mov
into
jnp
and
test
push
popf
ss
test
pop
sahf
mov
lcall
mov
frstor
fldenv
cmp
int
adc
cmp
in
push
mov
mov
sbb
inc
and
loope
xor
cwtl
dec
int
inc
in
out
std
jno
subl
enter
xchg
out
sub
fs
inc
jp
idiv
jg
in
icebp
stc
adc
pop
add
fistps
fisubl
ret
or
jnp
jp
xor
int
mov
lahf
push
stos
enter
jne
lock
adc
jp
lret
xchg
or
addr16
pop
mov
stos
pushf
mov
std
test
jnp
js
and
adc
int3
add
movsl
cmp
mov
leave
test
mov
inc
mov
jg
push
push
and
push
sarb
xor
pop
push
push
xor
gs
sub
mov
jbe
outsb
lods
repnz
dec
aam
icebp
add
push
mov
outsb
and
add
insl
jno
fadds
lret
sub
mov
sub
into
pop
repz
pop
mov
inc
push
arpl
push
inc
mov
push
sub
scas
stos
mov
mov
push
and
mov
fcoml
push
cmp
stos
add
cmp
cmp
xor
outsb
xchg
xlat
sub
inc
xchg
pusha
sbb
insb
mov
sarb
mov
mov
mov
repnz
xchg
sahf
mov
jnp
rcll
popf
and
dec
add
mov
ss
inc
xor
out
or
fsubrl
fs
jle
cs
out
add
popa
mov
pop
jge
xor
dec
sbb
add
lahf
fcomps
movl
xor
jg
push
ss
aam
add
mov
dec
pushl
sbb
pop
daa
stos
ja
sarl
mov
or
scas
aam
mov
negl
pop
inc
repnz
in
dec
pop
test
sub
and
sub
xchg
arpl
lea
jns
lods
add
insl
shrb
xlat
cli
pop
sbb
fwait
jbe
adc
outsb
popa
mov
subb
add
ret
dec
stos
jl
inc
adc
jmp
dec
jmp
fcoml
loop
imul
mov
push
lods
sti
pop
fldenv
pusha
sub
fsubs
jb
sub
iret
cmp
and
pop
sub
lret
fmull
xchg
fisubrs
xchg
xchg
test
bnd
push
jnp
inc
xchg
cmp
xor
cmpsl
jecxz
repnz
cmc
sub
push
xchg
pop
sub
pop
push
cmp
out
mov
mov
dec
inc
jecxz
or
leave
pop
mov
ret
and
addr16
pop
cmp
fcomps
push
adc
out
lret
inc
je
lret
sub
cld
jb
jmp
dec
rclb
fdivrp
les
pop
inc
dec
xchg
loope
cltd
sbb
push
into
cli
negl
mov
and
or
in
pop
push
aad
mov
push
mov
mov
es
pop
bound
aas
xor
and
mov
adc
sbb
loopne
inc
xor
xor
movsb
orl
add
push
push
fwait
cltd
mov
pop
stos
fidivrl
lahf
mov
mov
fists
movsl
and
shl
testl
jns
pop
cmpsl
push
iret
or
add
arpl
scas
dec
jp
xlat
mov
testl
lret
out
mov
hlt
test
fdivr
repnz
inc
jne
xchg
mov
pushf
std
lahf
mov
and
gs
inc
mov
push
sbb
push
in
sar
sub
loopne
scas
iret
push
inc
popa
push
push
push
adc
ret
lea
ret
int3
ret
sarl
push
mov
outsb
adc
dec
pop
subl
xchg
mov
call
rcll
pop
sub
fmuls
int3
push
lods
jl
adcl
xchg
xor
test
aaa
orb
and
out
hlt
adc
cmp
xor
add
ja
mov
aas
push
sub
rolb
ja
subb
add
cmp
cmp
int
pop
inc
shlb
lds
mov
out
clc
inc
jge
les
and
mov
pushf
fsubrs
out
push
cltd
push
je
cs
xchg
fistl
add
js
shlb
stc
fsubrl
fadds
mov
jnp
mov
test
cmp
jne
imul
stos
inc
mov
iret
dec
enter
in
imul
cli
cmp
lret
xorb
adc
mov
xchg
inc
fsts
push
shrl
pop
inc
push
cmpsb
loop
mov
pop
cmpl
sahf
mov
stc
es
mov
push
lods
and
popf
stos
cmp
je
mov
popa
repz
jo
mov
scas
icebp
test
dec
addr16
leave
leave
mov
dec
test
cmpsl
inc
or
xor
sub
xor
mov
pop
mov
cli
je
mov
push
or
cld
or
inc
loop
dec
cmpb
je
jecxz
scas
or
lods
shl
or
fimuls
xor
pop
xlat
add
jns
packssdw
jo
leave
fwait
leave
stos
cmc
gs
in
or
fwait
xchg
pop
fsub
call
addr16
lret
ss
scas
mov
pop
jl
inc
test
inc
or
jge
jmp
or
mov
sub
cltd
mov
popa
sub
or
push
pop
movsb
imul
loope
sub
mov
or
aaa
testb
mov
push
and
pop
ss
repnz
inc
sbb
mov
adc
mov
push
in
sbb
test
sub
pop
sub
sub
mov
jne
cmp
dec
sbb
rol
or
js
xor
int
sbb
sbb
sub
into
and
in
lret
in
inc
in
push
pushf
aaa
inc
dec
pop
out
lds
in
dec
in
iret
or
sub
sbb
ret
mov
arpl
aaa
push
push
rolb
dec
fcoml
jns
inc
into
mov
jge
sti
fldcw
mov
enter
mov
xor
inc
imul
stos
fwait
orl
popa
cli
mov
jg
ljmp
cmpsb
outsb
adc
push
mov
stos
shrb
dec
clc
lods
dec
sub
call
cwtl
imul
inc
inc
rorb
test
or
add
pop
push
out
inc
ficompl
flds
out
push
mov
sahf
push
js
pop
jg
cmpsb
rep
jg
adc
in
ss
jne
rclb
call
iret
dec
pop
xchg
and
rol
mov
xchg
aas
mulb
enter
or
or
dec
push
inc
mov
mov
andl
out
xchg
sbb
enter
sar
adc
movsl
cmc
mov
jae
adc
popf
enter
xor
dec
int
aad
push
dec
stos
idivl
leave
mov
sub
xor
mov
out
mov
pop
cmp
data16
int3
fiadds
push
fldcw
loope
repz
in
cld
scas
inc
sbb
or
adc
push
fcoms
mov
lea
faddl
inc
repnz
out
dec
loop
inc
stos
jb
cltd
fs
mov
mov
jge
mov
push
xchg
pop
in
cmp
pop
stos
xchg
clc
ss
out
mov
mov
xchg
loope
fistl
addr16
xchg
inc
movsb
xchg
cmp
add
cltd
loop
in
loope
adc
add
push
test
or
cltd
aam
loopne
jns
jl
mov
je
scas
jae
fldcw
inc
mov
pop
fcom
fcmovbe
cwtl
xchg
js
jns
stos
lea
stc
scas
lret
rolb
pop
mov
xor
dec
cmp
in
aad
mov
jp
lods
push
xchg
dec
mov
fidivrl
js
xchg
jbe
sub
push
xorl
mov
icebp
xorb
into
fwait
arpl
ss
das
add
jns
fildl
mov
ficompl
cs
cmp
sub
in
into
push
cmpsl
mov
and
das
cs
adc
pop
lods
mov
mov
adc
xchg
and
sub
xchg
stc
inc
mov
sub
das
pop
inc
mov
clc
pusha
cmpsl
popf
out
push
xchg
clc
mov
inc
popf
jle
mov
and
xchg
or
leave
push
and
lea
mov
dec
mov
fcompl
jecxz
std
xchg
cmp
mov
sub
xor
xor
and
pop
adc
adc
lods
pop
add
movsb
jmp
pop
mov
inc
mov
inc
gs
and
jge
das
mov
xor
pop
hlt
incl
xchg
test
fisubl
xor
lea
dec
fisttpl
scas
jb
out
fiadds
jne
cld
call
ss
or
movsl
lret
jecxz
or
stos
rsqrtps
add
pop
in
push
cs
dec
in
ror
fstl
jmp
jns
mov
xchg
push
shrl
add
faddl
stos
popa
cmp
repnz
enter
mov
xchg
in
loopne
inc
push
les
mov
dec
mov
pop
dec
movsl
daa
mov
out
sbb
sub
inc
lods
dec
lret
out
xchg
sbb
call
push
push
mov
iret
adc
inc
mov
or
mov
dec
xor
mov
mov
cmp
cmc
arpl
lret
roll
push
in
mov
inc
push
mov
mov
ffree
pushl
and
aad
int
sbb
add
bound
imul
fwait
lock
pop
xor
shl
or
pop
mov
pop
les
mov
es
je
sbb
ficoms
pop
inc
aad
dec
imul
inc
icebp
mov
add
jbe
mov
lock
pop
jbe
pop
cmc
cmpsb
or
test
cli
cmp
ds
cmp
xor
rcll
mov
add
mov
inc
lret
dec
dec
mov
lcall
out
dec
push
sbb
popf
and
inc
sahf
cmp
and
lea
inc
push
add
std
arpl
push
xchg
push
mov
repz
add
jne
jp
jnp
popf
cmp
sub
test
pop
lods
in
in
cmp
sub
mov
xor
ds
mov
jnp
xor
leave
fldt
stos
lock
lahf
leave
aad
or
insl
aad
call
test
push
inc
jp
cltd
inc
pop
aas
mov
hlt
out
dec
mov
orl
adc
loope
adc
ret
jp
push
pop
and
mov
adc
mov
imul
push
orl
enter
aad
out
jmp
fwait
jo
mov
mov
fcomps
sarb
sbb
or
adcb
xor
xor
sarl
addl
jg
jmp
inc
scas
aam
call
jge
xlat
xlat
xchg
lods
adc
fsts
hlt
dec
loop
or
inc
sbb
fcoms
jo
and
xor
nop
push
sub
aam
add
mov
push
sub
mov
push
mov
pop
xlat
int3
shl
scas
sti
scas
shl
mov
jnp
and
sbb
dec
xchg
fucomp
jmp
enter
lret
mov
lods
push
xlat
shrl
jns
outsb
test
push
sub
mov
bound
fadd
sub
xorl
icebp
pushf
push
mov
pop
xchg
mov
js
xchg
jae
xor
dec
push
and
and
inc
dec
ja
mov
pop
inc
mov
inc
adc
sar
lret
stos
sub
call
shrb
imul
ret
jmp
pop
fsts
mov
setnp
jb
xor
cld
sbb
xor
fadds
rorl
cmp
sarb
dec
std
cmp
clc
mov
lods
in
and
test
push
sti
mov
mov
jno
jnp
fsubl
out
push
cmp
and
mov
imul
mov
sbb
fisubrs
pop
or
xor
addb
xor
or
pop
stos
or
xor
jbe
cmc
xor
dec
xor
xchg
and
or
cmp
outsb
pop
mov
sbb
clc
fiadds
push
enter
jnp
jge
imul
popl
sti
xchg
push
aas
outsl
jne
mull
into
jp
faddl
iret
pushf
fstl
ret
lret
popf
shlb
mov
jbe
sahf
cmp
in
insl
push
mov
mov
pop
sub
stos
sti
dec
out
xor
pop
xchg
inc
mov
decb
push
push
movsb
sahf
dec
out
sub
clc
jb
pop
cmp
push
test
lods
or
lods
sbb
lret
out
stos
dec
int3
jg
pop
inc
pop
movsl
popa
dec
out
lahf
sahf
push
imul
fwait
call
cmp
aam
out
scas
jns
jp
pop
xchg
stos
adc
hlt
pop
and
sub
pop
push
out
mov
aad
fs
pop
xchg
lods
dec
adc
ljmp
aam
push
pop
jns
clc
pop
imul
pop
stc
dec
sub
push
mov
addr16
mov
in
push
stc
cmp
inc
mov
adc
lock
xchg
jno
fwait
adc
and
imul
test
lcall
popf
lods
js
sahf
ss
push
xor
pushw
adc
imul
js
sbb
fbstp
lret
neg
test
das
aad
arpl
aam
lfs
ja
mov
push
out
sbb
mov
rolb
sbb
mov
inc
and
cmp
in
push
xchg
iret
in
push
jle
mov
inc
mov
rolb
cmpsl
add
out
and
orb
or
cli
cmp
push
test
aaa
outsl
or
xchg
rolb
adc
jb
or
xchg
mov
es
cli
cmp
push
test
xor
and
jle
xor
push
lcall
dec
cmpsl
xor
cs
sub
and
pop
pop
aas
loopne
aad
xor
aas
aad
push
push
ss
pop
push
add
push
mov
lret
xlat
inc
ljmp
jnp
jmp
cld
push
mov
imul
enter
sti
lock
xor
inc
push
add
or
mov
repnz
cli
mov
dec
ret
js
mov
in
xor
sbb
jae
mov
fdivl
das
dec
mov
test
cltd
pushf
jge
adc
xchg
icebp
jo
imul
out
add
ljmp
into
out
jb
daa
loop
add
inc
inc
in
aad
cmpsb
fwait
jg
loope
mov
shll
addr16
xchg
popf
aaa
adc
mov
adc
jae
pop
adc
inc
or
scas
mov
or
fsubs
sbb
push
add
mov
pop
aad
cmpsb
das
and
lahf
or
pop
push
fimuls
push
inc
push
pop
xor
mov
cmc
pop
lds
pop
pop
nop
stos
xchg
xchg
sbb
ja
adc
mov
stos
movsl
add
jp
push
fwait
aaa
push
or
adc
sahf
inc
stc
les
arpl
outsl
mov
popf
inc
pop
add
cli
mov
and
mov
pop
jge
jne
sub
iret
in
xrelease
mov
ret
sbb
or
pusha
or
fidivrl
sbb
cmp
out
sub
aaa
call
lcall
add
dec
xor
hlt
or
nop
xor
add
fucomip
xor
cmc
mov
cmp
ror
gs
pop
push
popf
testb
es
mov
sbb
data16
adc
or
into
fimuls
cmp
nop
add
mov
sahf
xor
inc
popa
test
lret
jge
bnd
sbb
outsl
xchg
push
adc
mov
aas
sub
push
mov
lahf
int
sub
or
insb
insl
add
outsb
xor
popa
inc
daa
jbe
mov
ljmp
outsb
jbe
sbb
imul
jbe
pop
enter
pop
jae
sub
cmc
xor
add
sub
push
testl
rcrb
stos
into
stos
jbe
int
inc
into
dec
mov
imul
mov
or
adc
xor
dec
fildl
dec
inc
and
ror
aad
mov
dec
mov
ds
movsb
icebp
dec
testl
mov
push
mov
pop
push
ret
dec
jle
xor
or
insl
dec
xchg
fstpt
ja
js
inc
les
add
jnp
adc
xchg
mov
mov
aad
sub
xchg
ja
cli
xchg
sar
pop
daa
xor
add
hlt
roll
mov
pop
jecxz
push
lret
cwtl
mov
adc
jp
pushf
xchg
shlb
xchg
cs
fnstenv
adc
jl
or
jle
inc
adc
xor
mov
jo
notl
test
sahf
jmp
cmpsb
ds
xor
js
inc
xchg
mov
jmp
mov
js
cmpl
and
xor
cmp
and
push
mov
sbbl
stos
stos
arpl
push
xchg
mov
inc
pop
adc
lds
push
pop
cmc
stos
xorl
dec
sub
pop
xchg
push
dec
xor
aas
or
repz
popf
dec
adc
mov
xchg
inc
xor
aad
mov
in
mov
pop
je
out
cmp
mov
jo
and
pop
lds
push
ja
call
fcompl
xchg
ss
adc
std
cmc
loope
mov
pop
sub
jo
test
sub
jecxz
mov
jmp
mov
cmp
jnp
andl
mov
outsb
popf
popa
xor
cmp
and
clc
notl
cs
cmp
decb
mov
in
sbb
pop
stc
or
cmp
adc
pusha
bound
and
adc
xchg
jno
push
loop
ss
insl
jl
pop
mov
pop
jg
out
push
repnz
stos
add
test
aaa
mov
xor
adc
and
pop
xor
or
add
sbb
dec
sbb
movd
and
pop
and
adc
mov
imul
xchg
xchg
add
repz
test
mov
fadds
ret
inc
lock
and
pusha
sub
in
jmp
stos
mov
in
inc
ret
mov
shlb
loope
out
push
in
fstpt
leave
test
out
mov
pop
cmp
nop
inc
adcl
adc
dec
inc
sahf
cli
sbb
lods
fdivrs
adc
mov
xchg
lret
fnstenv
jge
mov
sub
add
outsb
inc
and
mov
sbb
je
mov
decb
lods
movsl
mov
jecxz
pop
jmp
adc
in
popa
scas
push
and
inc
sbb
jp
popf
sub
mov
mov
test
cld
cmp
stos
js
ss
xchg
xchg
mov
fwait
mov
jo
mov
inc
pop
dec
push
in
xchg
sbb
xchg
add
ret
lret
jne
sbb
mov
mov
movsl
fimuls
sbb
push
mov
gs
lahf
inc
dec
or
aad
pop
and
mov
fmulp
lock
cmc
iret
loop
adc
dec
pusha
call
incb
loope
addb
sbb
dec
cmp
mov
mov
in
sub
in
fimull
push
dec
and
xchg
div
scas
jns
xchg
mov
jl
imul
jae
mov
aas
push
repz
loop
jmp
sti
dec
das
dec
xlat
add
imul
movsl
ror
enter
pop
sti
sub
pop
mov
xchg
ret
insl
xor
stos
push
xor
ficompl
xor
cmp
pop
mov
jl
adc
mov
and
pushf
inc
mov
sub
ss
xor
push
push
adc
nop
in
outsb
jmp
cmp
jge
xor
fmul
or
mov
add
inc
mov
push
lods
ljmp
outsl
and
inc
xchg
mov
dec
mov
jne
or
adc
push
jle,pn
mov
mov
rcll
dec
cmpsb
adc
dec
or
sbb
or
or
ret
int3
div
sarb
or
adc
mov
lock
push
dec
jne
pop
lahf
popa
mov
sbb
pop
dec
xchg
pushf
mov
push
and
pop
inc
push
mov
adc
jp
leave
mov
pop
fistl
sbb
pop
xor
loopne
push
push
push
fildl
ret
andb
frstor
cmp
cmc
in
push
dec
jne
std
sbb
sub
daa
jne
mov
ja
cwtl
push
push
popa
insl
inc
hlt
pop
push
lock
pop
inc
jae
mov
sub
ftst
mov
int3
outsl
mov
jp
add
inc
sub
mov
mov
push
movb
mov
sahf
outsb
andl
or
dec
je
add
pop
push
stc
rcl
nop
dec
bound
or
inc
sbb
mov
adc
dec
or
xchg
in
add
loopne
in
cmp
dec
cmp
push
push
jb
cmpsl
nop
das
cmp
xchg
into
add
cmp
pop
mov
pop
lret
out
sbb
adcl
sub
or
pusha
push
cmp
pop
and
sbb
dec
xchg
jle
rolb
inc
inc
or
mov
and
mov
lea
das
mov
pop
pop
cld
fcomi
into
jl
movsb
jo
mov
ror
out
popl
sub
add
xor
pop
push
testl
call
sbb
xlat
in
pop
ds
fstpl
outsl
leave
ljmp
sbbl
ja
mov
ret
stos
gs
inc
xchg
mov
inc
sbb
push
jge
jle
mov
ds
sti
std
dec
pop
mov
cmp
cmp
pop
xor
mov
or
or
jnp
in
lcall
dec
sbb
int3
aad
add
xor
sbb
adc
cmp
imul
cmc
repz
jbe
das
jp
aam
in
jne
sbb
lret
pop
and
pushfw
cmc
sub
cwtl
fwait
xor
outsb
xsave
stos
outsl
cmpsb
sub
shr
push
clc
mov
leave
inc
lret
sbb
mov
out
mov
mov
sub
ja
test
pop
ret
push
daa
jne
es
xchg
jmp
lods
test
popa
lret
cmc
pop
dec
in
pop
cmp
movsl
adc
or
insl
xchg
ja
jmp
scas
xchg
sub
mov
cltd
lret
jge
imul
mov
and
push
dec
rolb
adc
subl
cmp
mov
popf
xchg
push
ja
int3
adc
mov
mov
adc
push
xor
bound
cmc
xchg
repz
dec
and
pop
cli
mov
mov
rcr
inc
outsl
mov
cmp
sbb
into
sub
xchg
pop
test
jno
int3
fs
addr16
dec
je
push
mov
dec
in
push
fdivr
pushf
push
sbb
jne
mov
stc
enter
ret
xchg
mov
inc
loop
repnz
inc
dec
or
add
sti
lods
fsubrs
lahf
jbe
das
sar
pop
xor
dec
push
push
push
inc
leave
and
add
cmp
rclb
test
add
jbe
popf
mov
mov
cmc
mov
addb
adcb
mov
adc
nop
test
xchg
fidivl
in
push
divb
imulb
jmp
in
mov
in
xchg
dec
xchg
adc
push
or
in
sub
cli
inc
sbb
or
out
shl
shll
jne
push
mov
test
stos
imul
fcmovu
jmp
roll
dec
nop
dec
stos
pop
adc
outsb
jns
out
xor
iret
in
rolb
cmp
push
enter
data16
sbb
mov
jp
aad
adc
push
xlat
push
cmp
fldenv
jnp
ja
push
or
jo
out
out
mov
cwtl
mov
xor
loop
into
shll
std
xor
je
and
push
inc
mov
not
neg
mov
fsubl
add
in
shl
mov
xchg
in
pushf
sub
mov
in
mov
or
loop
xchg
cmp
nop
outsb
loope
lcall
les
mov
fldt
xor
cmp
fimull
repz
orl
call
xchg
insb
loopne
shll
add
or
push
or
aas
ja
pop
sbb
push
outsl
pop
data16
sti
sbb
leave
jl,pt
jne
pop
cmp
mov
xchg
fldcw
inc
outsb
lret
adc
or
cmpsl
adc
or
sbb
icebp
pushf
lret
fwait
inc
fwait
int3
xchg
and
and
hlt
fdivrs
lods
test
fisttps
pop
mov
enter
sub
xor
mov
push
jmp
shlb
lret
orb
inc
rorb
xchg
add
test
xor
cmc
nopl
sbb
cmp
mov
cmc
xchg
test
scas
hlt
cmp
mov
std
adc
pushf
rolb
test
pop
xor
int3
repz
lock
icebp
add
fisubrs
inc
test
jns
push
xor
jecxz
sbb
jbe
add
cmpl
mov
test
ret
mov
popf
ljmp
xchg
cmp
outsl
dec
repz
fstl
xor
fs
add
push
out
mov
add
dec
xor
les
or
cmp
lcall
iret
xchg
push
leave
pop
dec
xchg
fcmovne
jecxz
mov
adc
dec
dec
cmpsl
das
xor
test
sbb
cmp
xlat
setbe
repz
loopne
jo
bound
nop
in
into
inc
push
push
jbe
sub
or
out
rorb
repz
dec
xorb
ja
int3
mov
mov
adc
scas
dec
leave
sub
push
pop
adc
mov
xorl
lods
or
stc
in
dec
adc
pop
js
pop
xchg
ret
push
mov
sbb
das
push
jnp
testb
popa
pop
inc
jns
ss
pop
mov
aad
sahf
ja
sbb
add
scas
inc
movsl
movsb
repz
jge
cmp
cmp
sbb
cmp
pop
aad
add
jbe
pop
xchg
icebp
fld
test
add
jl
mov
aam
or
cmp
scas
aaa
mov
out
pop
inc
outsb
inc
nop
pop
cltd
xchg
mov
mov
loopne
inc
jg
pop
mov
or
stc
pushl
inc
pop
sbb
cltd
mov
push
popa
jle
mov
cmpsl
iret
call
pop
test
add
rclb
mov
pop
mov
dec
repnz
xchg
int3
inc
cli
pop
or
out
dec
push
out
jmp
ljmp
inc
mov
sub
dec
add
mov
push
loope
out
or
iret
pop
shrl
sub
fdivrl
ds
cmpb
or
aaa
rol
fwait
popl
ljmp
cmp
pop
jne
enter
add
nop
popa
movsb
inc
aad
and
jb
xchg
and
push
aas
xchg
repnz
cld
sbb
xor
jns
movb
iret
jae
cmp
fwait
pop
cmp
jl
xchg
cwtl
xchg
and
or
in
or
call
sub
xchg
pop
and
lock
lods
std
aad
xchg
mov
stos
push
sub
mov
aad
pop
inc
out
jmp
fdivrs
repz
insl
sub
andl
sti
repz
dec
xchg
sbb
jl
movsb
push
enter
test
lods
xchg
jl
int3
jbe
jo
mov
xchg
jo
lret
dec
cmp
inc
outsb
arpl
sub
sbb
addr16
decl
push
pop
psadbw
mov
add
push
pop
push
push
or
loope
repz
js
les
fldl
outsl
ds
mov
add
xor
data16
or
pop
mov
insb
lock
orb
xchg
jns
iret
test
xlat
inc
in
or
fidivrl
aaa
into
sbbb
sub
sbb
cmp
xor
mov
mov
adc
sbb
mov
clc
mov
std
popf
and
jl
dec
ret
iret
mov
mov
or
loope
adc
in
dec
pushf
push
je
stc
lock
cld
sub
mov
jns
je
ret
push
call
xchg
rcrb
lret
jg
add
jne
and
cmp
fsubrs
ficoms
push
ret
pop
clc
adc
in
xor
mov
cli
ljmp
cmc
fcoml
push
lahf
pop
push
cmp
or
pop
ds
aas
lret
inc
add
sub
pop
add
dec
ret
rcrl
sub
mov
inc
out
dec
jle
test
xchg
movsb
mov
sti
push
mov
popf
sti
xchg
jnp
mov
mov
aas
push
inc
rorl
sub
xchg
add
mov
sub
pop
popf
xchg
push
sub
inc
and
cmpsb
pop
jns
and
sub
pushf
pop
dec
mov
mov
cld
xchg
or
fwait
dec
lcall
dec
pop
cmp
pop
popf
in
leave
mov
out
roll
jno
movsb
cmp
int
lahf
dec
or
sti
jle
in
sub
dec
scas
loop
mov
cmp
cmpsl
add
daa
jns
xchg
pop
or
cmp
add
mov
aaa
rcr
mov
sbbb
fisubrs
mov
push
fistpl
push
call
jo
out
xor
iret
in
or
inc
pop
dec
in
fcomps
repz
insl
ds
push
mov
pop
fisttps
insb
sub
pop
out
ds
das
mov
mov
jl
push
cmp
inc
sub
gs
pop
int3
jl
and
scas
and
adc
and
or
imul
test
jno
ljmp
fdivrp
fisttpl
into
xchg
inc
repnz
mov
jmp
lea
mov
mov
pop
repz
jecxz
jo
insb
fucomi
pop
inc
dec
int
mov
mov
sub
xor
mov
int
dec
xchg
push
outsb
outsb
jbe
stos
mov
dec
stos
dec
nopl
sbb
mov
fwait
in
mov
cmpsl
inc
inc
jns
inc
jl
cs
cmp
mov
lahf
ss
inc
int3
iret
inc
imul
fs
shl
cmp
push
fcmovu
push
inc
push
jle
in
xor
ret
jb
or
mov
adc
xchg
adc
mov
adc
cs
sbb
mov
popf
int
ja
into
mov
out
mov
inc
data16
js
imul
adc
scas
mov
lods
dec
repz
add
rorl
fnstsw
es
imul
pop
movb
mov
dec
xchg
xor
sub
aam
sbb
insb
add
or
out
sti
cmp
test
sbb
cmp
sarb
mov
add
pop
adc
adc
inc
lea
inc
inc
mov
jp
pop
sbb
aam
pop
lea
mov
dec
pop
xchg
xor
inc
pusha
jge
ds
lock
mov
int
mov
hlt
mov
fwait
mov
imul
jne
xlat
ds
lods
inc
stc
stc
inc
pusha
sti
mov
cmpb
xlat
cwtl
pop
cwtl
inc
jecxz
and
mov
fadd
sbb
aaa
xchg
je
jnp
mov
xor
cmp
push
mov
mov
adc
sbb
sub
adc
call
and
sub
cmp
dec
ss
dec
fmuls
cmp
cmpl
dec
popf
jns
jmp
roll
jp
mov
mov
xor
movsl
and
or
xchg
addb
mov
scas
inc
push
out
xchg
or
pop
sti
lahf
test
inc
jae
xchg
fcom
lds
mov
add
pop
outsl
xor
mov
jmp
int3
xchg
dec
xlat
gs
adc
adc
inc
test
dec
dec
lret
imul
mov
adc
mov
call
jp
add
add
inc
jge
and
push
sbb
xchg
xchg
in
jl
lcall
dec
mov
int
xchg
shll
shr
or
inc
add
es
aam
pop
arpl
pop
roll
xorl
jae
lock
push
jne
leave
bound
pusha
stc
or
pop
gs
dec
jo
adc
es
ja
add
pop
adc
pop
jmp
cs
test
test
fwait
cmp
sub
lea
add
imul
mov
ss
jbe
jle
fldl
test
sbb
mov
cs
lcall
fs
leave
js
sbb
ss
sbb
test
jle
lret
stc
add
sbb
inc
in
mov
enter
jge
jp
jno
js
filds
test
test
nop
and
xchg
cwtl
lahf
adc
sub
aas
pop
dec
jno
xor
jmp
xchg
cmpb
mov
pop
ficompl
and
out
fists
sti
lods
and
push
fcompl
fidivrl
pop
inc
lods
pop
shlb
sbb
int3
jp
inc
lret
ret
add
push
jnp
mov
jb
loopne
jg
lcall
negb
xor
xor
popa
push
sub
cwtl
outsb
enter
xchg
mov
lods
inc
sub
aam
pop
mov
inc
lret
jle
sbb
aas
add
xchg
inc
sbb
imul
mov
and
jb
xchg
mov
enter
ljmp
push
jle
inc
or
hlt
mov
inc
cmp
insb
sbb
cltd
lock
jmp
ret
cmp
push
out
pop
std
cmp
ret
fnclex
jg
ds
into
bound
dec
out
jle
lcall
sub
out
cmp
in
shrl
loope
push
mov
and
pop
cwtl
jl
push
mov
jnp
daa
into
fldl
cmp
int3
push
cmpsl
jp
ret
jecxz
insl
jmp
mov
xchg
sbb
mov
arpl
dec
imul
mov
jno
lds
shrl
jno
inc
shl
daa
jbe
mov
push
inc
xor
xchg
or
dec
cld
push
sub
int3
push
test
lds
fldl
push
mov
push
push
psubq
add
loop
hlt
mov
stos
in
or
lods
mov
test
or
jge
cmp
adc
inc
mov
dec
inc
and
inc
and
dec
lds
adc
outsb
mov
je
out
aas
sub
inc
jnp
xor
rcrb
adc
loopne
and
sahf
fs
or
mov
mov
roll
mov
ror
sbb
pop
dec
dec
cmc
pushf
and
ljmp
xor
cmp
imul
jg
cmc
popa
cmpsb
pop
mov
lahf
fstpl
pop
push
ficoml
in
aas
inc
ljmp
hlt
jg
sti
pop
xorb
jmp
inc
iret
shl
ds
arpl
push
ficoml
add
xor
push
push
sub
pop
push
dec
cmp
xor
dec
mov
jecxz
movsb
stc
mov
jmp
scas
sub
adc
inc
mov
testb
dec
cmpsl
iret
ret
cs
jle
test
pop
sarl
sub
rorb
into
push
mov
fs
neg
cmc
xchg
lret
adc
lahf
popf
aad
enter
add
cs
test
fs
out
or
je
repnz
mov
pop
add
divb
and
or
push
mov
sub
rcrb
add
xchg
xchg
cmp
out
inc
adc
adc
xchg
mov
ret
add
scas
js
inc
movsl
push
jne
push
nop
loopne
and
call
dec
xchg
enter
shlb
mov
jae
js
testb
es
aaa
pop
out
cmp
xor
xor
arpl
popa
push
mov
jne
cmp
mov
jns
or
push
mov
fsubl
shld
mov
pop
push
lret
int3
jae
or
cli
xor
mov
sub
rclb
pop
insb
sbb
cwtl
ds
mov
shrl
mov
bnd
or
inc
adc
insb
nop
mov
shlb
jnp
into
mov
movsl
push
push
inc
add
adc
mov
loope
in
dec
in
stos
nop
repz
aas
fwait
jmp
fbld
pop
jge
xor
fucomp
shlb
cld
imulb
aas
pop
shl
dec
rclb
dec
ficompl
xchg
or
daa
aaa
xchg
jne
adc
mov
mov
in
jne
call
in
rcl
or
shrl
je
test
and
clc
test
popf
pusha
adc
fs
test
aam
mov
sbb
je
sbb
lahf
cmc
movsb
lcall
pop
stc
popl
arpl
mov
hlt
fadds
jne
push
imul
dec
sbb
arpl
rcrb
imul
lret
ja
cmpsb
ficoms
popf
cmp
js
test
imul
sub
dec
xorl
push
push
int
pop
fucom
pop
mov
xchg
jmp
xchg
push
cmp
out
scas
or
in
repz
add
jg
sahf
cmp
xchg
dec
fdiv
shlb
fdivrs
mov
in
inc
inc
test
sub
sbb
das
enter
inc
push
daa
add
mov
push
jle
rcr
jge
push
mov
push
inc
out
mov
dec
nop
clc
ljmp
add
inc
not
popf
mov
das
movsl
push
mov
inc
scas
xlat
ljmp
stos
test
insb
inc
nop
jbe
lret
dec
add
sbb
in
fwait
dec
andb
dec
mov
dec
lock
jl
pop
and
test
xchg
call
aas
repnz
jae
push
sub
add
mov
fdivl
adc
lds
push
dec
loop
add
loopne
pop
daa
std
xchg
cld
sarb
dec
jp
iret
ret
sahf
push
rorl
in
sub
sbb
iret
pop
cmp
cmpsb
mov
sub
ss
mov
pusha
add
cmpb
rclb
jle
mov
enter
xor
cmpl
jl
test
xchg
cli
lods
aad
and
pushf
cmp
mov
mov
xchg
adc
cld
mov
clc
xchg
sti
scas
cmc
adc
mov
pop
sub
out
add
les
xchg
xor
scas
mov
insl
icebp
je
das
xchg
fidivrl
inc
fmuls
movsl
add
push
sbb
jo
or
daa
fiadds
push
push
mov
cltd
adc
rorl
js
sub
icebp
fs
mov
mov
push
int3
mov
pop
fisttpl
cmpsb
shlb
inc
fwait
shrl
jnp
and
std
inc
pop
add
push
fistpl
out
cwtl
out
jge
addl
cltd
out
inc
jle
stc
mov
jp
stos
mov
pushf
sub
test
xchg
aas
mov
inc
loopne
ja
lret
gs
sub
fucomi
lret
mov
push
or
lea
xor
inc
je
dec
in
adc
fisubs
fcompl
push
dec
xchg
sub
mov
adc
inc
dec
sub
cmp
cmp
test
stos
mov
jmp
ret
jbe
shll
popf
sub
mov
mov
nopl
pop
pushf
mov
movsb
in
cld
popa
fcompl
and
lods
add
int3
push
jmp
pushf
into
test
dec
jl
cli
jb
inc
add
mov
mov
xor
xchg
mov
ror
pop
xor
std
push
scas
imul
or
xchg
fimull
xor
xchg
push
and
clc
lock
and
adc
sbbl
outsb
lds
fsts
test
add
sahf
lahf
ftst
push
pop
xchg
enter
mov
mov
jo
cmpb
cmpb
or
movsb
sub
jmp
dec
adc
xlat
negb
jnp
je
push
sbb
sbb
mov
push
bound
std
cwtl
lea
loope
inc
bound
and
pop
imul
outsl
ficomps
push
mov
arpl
shlb
push
es
aad
divl
and
add
sahf
stos
adc
mov
lock
and
test
cmp
jg
dec
pop
enter
sub
adc
cmp
cmp
int
stos
xchg
stc
mov
mov
inc
imul
adc
push
in
mov
sub
into
pop
mov
test
or
sbb
paddb
mov
popf
sub
mov
pushf
scas
cmp
iret
bts
jg
jp
dec
ss
xor
inc
xlat
movsb
repnz
and
mov
cmp
scas
pop
shll
stc
push
xchg
mov
xor
push
enter
cs
mov
cmpsl
or
mov
cwtl
arpl
cmpsb
cwtl
push
mov
out
jbe
mov
sbb
push
push
repnz
jnp
dec
push
dec
inc
sub
jb
shrb
or
js
sbb
xchg
jo
inc
and
dec
push
loop
jmp
mov
mov
mov
xchg
add
sbb
pop
inc
mov
jne
mov
push
sub
xor
jmp
dec
gs
filds
inc
or
sbb
in
int3
add
enter
outsb
hlt
stos
js
mov
mov
cld
mov
mov
cld
out
dec
je
movsl
adc
xor
dec
into
jno
in
add
inc
mov
jbe
add
sbb
cmpsl
inc
jl
sub
lahf
and
imul
pop
sub
push
int3
test
mov
pop
aaa
cmpsl
pop
xor
popf
out
cmp
int3
sub
jp
outsb
cmp
inc
inc
je
xchg
inc
js
out
sti
cmpsl
add
out
jle
dec
jmp
aaa
lcall
mov
push
bound
loopne
in
dec
sbb
inc
xchg
sahf
shlb
push
jo
xlat
movsl
or
mov
loop
sub
fcompl
adc
mov
insl
les
sub
std
fcomip
movsl
and
sub
sbb
mov
fnstsw
xor
hlt
adc
cmpsl
push
lret
mov
mov
jne
out
sub
adcb
mov
mov
mov
pushf
cmp
movsl
mov
jge
rcrl
out
dec
mov
xor
ret
fisttps
sub
inc
pop
fiaddl
roll
adc
push
mov
mov
cli
or
cmp
fsubrl
push
mov
test
lods
outsb
out
jne
mov
fwait
xchg
xchg
sub
mov
lret
rclb
inc
adc
mov
jp
mov
pushl
mov
fistps
and
aad
add
mov
push
dec
mov
mov
fcmovb
or
add
xchg
cmp
mov
or
clc
icebp
ret
icebp
lea
lods
adc
or
aaa
pushf
adc
add
ret
das
mov
cmp
push
mov
xor
call
and
xchg
aas
lea
mov
pop
xor
cmp
call
popa
or
fstpl
iret
fwait
clc
ljmp
dec
adc
loope
outsb
ret
xorl
in
stc
or
inc
push
or
inc
inc
and
sarl
push
out
pop
xor
xchg
aad
push
adc
and
out
xchg
jno
or
push
or
rcll
or
jo
ds
inc
or
mov
jae
data16
leave
int3
mov
mov
lods
push
enter
cmp
lahf
xchg
xchg
dec
add
dec
mov
sbb
add
mov
jbe
imul
fstpl
inc
lock
stos
cmp
ficompl
push
xor
inc
and
daa
mov
push
ret
repnz
orl
push
xchg
hlt
push
inc
mov
repz
test
loope
push
cwtl
shl
push
mov
lods
fs
aad
pop
test
jne
sarl
stc
and
adc
repz
xor
add
dec
jle
inc
sub
cs
xchg
jns
jbe
je
sub
lds
mov
xlat
mov
jns
lds
sub
push
call
jbe
sti
shl
xchg
call
out
testl
aaa
xor
call
cs
loope
pop
pop
dec
fnstenv
and
jno
lret
xchg
xor
inc
jo
mov
mov
cwtl
mov
push
jg
push
enter
add
in
roll
mov
sbbl
fdivs
inc
hlt
cmp
ja
jnp
ds
cmp
pop
leave
pusha
sbb
sbb
fistpl
lcall
sub
insb
jae
repnz
and
fiaddl
stc
mov
xor
or
xor
dec
add
bound
pop
xchg
jmp
push
hlt
mov
jnp
mov
xor
mov
dec
xchg
jo
pop
sahf
ret
mov
mov
push
out
pop
sub
aad
cmpsb
dec
into
call
xchg
cmpsb
ret
fbstp
mov
fsubrs
scas
inc
fsubr
mull
fistpll
push
test
mov
insb
mov
add
orb
inc
dec
clc
movsb
and
fsub
xchg
sub
pop
pusha
bound
jbe
popa
ja
lret
arpl
shlb
fcompp
pop
ja
ds
sahf
movl
fs
jg
add
sub
movsl
add
and
test
add
js
mov
fisubrs
int
stos
lds
adc
rcr
or
jle
cwtl
cmp
cmp
adc
sub
movsb
iret
hlt
in
mov
push
call
adc
scas
imul
daa
stos
jmp
inc
std
hlt
push
loope
cmp
movsl
cmp
lods
lahf
daa
call
jl
or
xchg
loope
pop
ja
or
mov
or
xor
sub
rorb
popf
or
into
add
dec
insl
dec
shlb
xchg
out
inc
outsb
inc
sbb
mov
cwtl
ja
mov
pop
add
frstor
inc
cmp
int3
sub
nop
test
mov
and
xor
sub
inc
push
aaa
cmp
and
cli
in
xchg
int
lret
mov
inc
stos
scas
mov
jb
outsl
sbb
scas
cmpsl
push
cmp
add
flds
test
aam
lret
in
cmpsb
cli
enter
mov
imull
mov
xlat
inc
xchg
fcompl
shrl
ljmp
xor
jge
cmp
cs
cmpsl
icebp
sti
lcall
out
insl
pop
cli
lock
xchg
sub
and
pop
leave
cmp
lahf
lea
cmp
jne
adc
lods
in
inc
inc
pop
ss
and
sbb
mov
ret
mov
andl
sub
pop
sub
divb
fisttpl
sbb
loope
sub
jmp
xlat
inc
add
adc
add
jns
xchg
mov
or
inc
out
xor
mov
add
xchg
mov
pop
cmp
icebp
jl
mov
lods
mov
inc
pusha
and
clc
adc
std
add
repnz
pop
push
lea
mov
sub
test
add
or
dec
add
inc
outsb
push
sahf
out
or
int3
and
int
dec
adc
push
xchg
push
jns
aad
dec
clc
outsb
push
test
inc
xchg
push
adc
out
mov
jnp
xor
dec
cld
or
rcl
cmp
nop
jbe
scas
fwait
mov
dec
sbb
sub
lcall
adc
out
xor
aaa
adc
jno
sbb
xchg
fisttpl
jbe
rclb
adc
loope
xorl
mov
out
packsswb
pusha
push
pop
xchg
pop
inc
jmp
outsb
adc
enter
sub
push
inc
aas
clc
movsl
mov
mov
jl
inc
dec
mov
lahf
aad
cld
or
jne
test
mov
lcall
cmp
insl
cmc
ss
jmp
pop
adc
and
xor
out
inc
xor
lods
or
cli
cmp
jno
idiv
mov
lret
add
imull
das
add
adc
and
es
movsb
push
cmp
repnz
movsb
scas
cltd
popf
inc
cmp
mov
popa
and
es
jo
jp
call
aad
pop
nop
test
cmp
push
jne
rorl
pushf
cmp
clc
mov
xchg
add
mov
inc
xor
cld
push
cmpsb
lock
mov
pop
loope
mov
leave
les
xchg
push
xor
ficomps
mov
ss
scas
inc
mov
inc
es
das
outsl
add
in
push
lcall
jo
push
inc
pop
je
add
xchg
mov
movl
ret
je
push
xor
push
stos
fisubrl
push
inc
out
es
aas
dec
add
cmpsb
cs
cmp
xchg
jbe
sub
pop
fstl
cmp
fs
xchg
sub
inc
les
fcomip
cmc
push
movsl
hlt
lahf
fbld
pop
ss
or
pop
jae
xchg
scas
pop
fwait
pop
pop
lret
test
pop
out
daa
fs
lcall
inc
in
xor
push
mov
mov
aas
pop
std
loopne
out
mov
gs
rorb
sub
adc
sbb
push
jae
or
push
insb
pop
jo
push
pop
fisubs
push
jb
dec
lret
daa
add
mov
popa
sub
mov
popa
and
mov
comiss
ss
pop
jno
loopne
dec
movsl
sbb
mov
mov
xor
pop
add
inc
fsub
and
gs
dec
arpl
rcrb
jns
pop
xchg
mov
fdiv
jns
mov
pushw
inc
jg
test
scas
test
ljmp
int3
ja
test
add
inc
ds
repnz
movsl
cmp
clc
sub
jbe
shrl
ret
mov
push
or
call
inc
mov
mov
lods
outsb
cmp
int3
inc
sti
sbb
fldlg2
sub
fucomip
add
movsb
sub
shlb
in
and
pushf
movsb
insb
testb
xchg
sti
insl
jp
stos
inc
cwtl
and
jns
imul
bound
xchg
testb
hlt
inc
fxch
push
pusha
or
sub
fdivrl
leave
inc
jmp
lea
ficompl
cli
adc
sub
xchg
sbb
adc
cld
icebp
push
cltd
cmp
dec
iret
ds
xchg
leave
fists
sbb
mov
push
or
and
sbb
add
lock
int
int
frstor
inc
sub
testl
jle
sbb
and
jle
xchg
nop
cld
dec
stc
mov
sbb
test
and
adc
or
data16
int3
cmp
dec
int
punpckhdq
test
test
sub
rolb
fadds
les
cmpsl
ficoml
and
push
shll
push
mov
es
xor
divb
outsl
xchg
jns
lock
adc
movsb
cmp
sbb
arpl
push
shlb
stos
mov
xchg
loop
mov
xor
cltd
sarb
add
mov
fsubrl
fistpl
iret
hlt
in
pop
repz
pop
pop
or
mov
mov
xor
dec
mov
out
mov
or
jle
or
and
push
xchg
insb
dec
dec
clc
xlat
hlt
xchg
xor
ja
jae
inc
xchg
cltd
adc
mov
enter
xchg
ja
pop
scas
push
test
push
scas
inc
lods
gs
popa
sub
cmp
std
xchg
test
push
mov
pop
scas
mov
popf
cwtl
cmp
add
xchg
lahf
cmpsl
xor
xor
iret
inc
and
mov
gs
ss
in
lods
pop
les
lret
and
in
mov
pusha
pop
mov
adc
xchg
insl
fisubl
sarl
and
fs
pop
mov
jg
inc
imul
jp
xor
cld
xorl
xchg
dec
push
lods
in
fadds
dec
aad
pop
sbbl
jbe
sbb
jo
mov
xchg
mov
shr
pop
fcoml
mov
cmc
rcrb
and
ja
dec
pop
mov
int
leave
scas
leave
in
cmpsb
sub
aaa
inc
inc
sbb
xchg
movsl
xor
and
ret
push
out
into
int3
mov
insl
fsub
jg
daa
hlt
push
and
scas
jno
loope
lds
sub
sti
xor
xchg
cltd
mov
jl
aad
xchg
xchg
xchg
cmpl
test
xchg
xchg
sub
daa
mov
mov
gs
in
fsts
xchg
push
inc
int3
popl
ret
pop
sub
inc
pop
clc
sub
fwait
and
xchg
shrb
stos
and
push
mov
pop
repz
ret
dec
adc
mov
in
push
repnz
outsl
sub
push
daa
mov
or
iret
or
test
and
or
int
cmp
test
jne
fldcw
int
adc
adc
push
pop
std
loopne
cmc
cmp
movsb
stos
cmp
jl
mov
clc
xchg
insl
leave
dec
test
dec
fisttpl
adc
sbb
cltd
pop
call
sub
lods
xor
popf
loop
and
xchg
addl
cmp
jecxz
push
out
test
ja
js
cmp
popa
out
add
adc
cmpsb
sarl
ds
ret
insb
push
loope
andb
movsl
jmp
hlt
mov
jge
push
cs
mov
pushf
adc
aam
icebp
ret
adc
in
iret
inc
stc
adc
enter
sahf
xor
lret
stos
lcall
stc
or
addr16
rorb
cmpsb
add
and
lret
mov
repnz
xor
push
out
andb
fdivrs
in
fs
sbb
shlb
in
cmpsb
in
sbb
inc
sub
dec
mov
cs
mov
pop
lds
outsb
or
inc
cmp
and
and
mov
test
cmpsb
int
inc
sbb
inc
cmpsl
aaa
or
add
xchg
mov
test
adc
xchg
outsb
aaa
push
xor
mov
fchs
dec
or
mov
lcall
call
xchg
inc
jl
xchg
jle
jl
nop
and
mov
hlt
test
xchg
inc
ljmp
les
shl
popa
mov
and
lods
in
stos
mov
rcrb
adc
addb
inc
inc
or
push
xchg
inc
cmc
adc
call
mov
xchg
push
imull
test
shl
cmp
fcmove
jle
leave
dec
sti
call
test
dec
and
addr16
gs
add
dec
test
mov
push
mov
push
jecxz
mov
xchg
jnp
js
cmp
dec
addl
ds
pushw
test
cmp
pop
into
mov
rorb
dec
sbb
push
dec
movsb
sub
icebp
dec
stos
cmp
jge
addr16
fcoml
push
mov
mov
and
ss
bound
ja
xchg
dec
mov
cld
dec
cwtl
lahf
fisubs
xchg
cmp
cmpsb
es
mov
sub
mov
notl
xchg
push
jp
sti
xor
imul
push
cwtl
or
add
lcall
inc
dec
cwtl
std
sbb
pop
xlat
dec
cli
inc
xchg
int3
sar
pop
aas
inc
jae
xchg
rclb
push
pop
incb
mov
cli
fdivs
clc
das
dec
aaa
cs
or
sub
into
and
mov
pop
cwtl
adcl
insb
sarb
xor
scas
push
ja
sbb
imul
cmc
loopnew
loope
pop
mov
iret
enter
scas
testb
dec
cmp
cs
lods
xchg
sarl
fs
mov
cs
jmp
jnp
sti
xor
arpl
popf
fimull
jmp
inc
sub
insl
loopne
test
push
lcall
leave
pop
xchg
sub
shrb
test
das
jmp
jnp
dec
jo
enter
daa
pop
or
adc
xor
lock
fistps
pop
xor
jecxz
jmp
ror
subb
outsb
and
pop
das
sub
inc
mov
and
adc
dec
push
xchg
push
mov
pop
out
daa
stc
lods
pop
imul
rcll
mov
push
test
mov
lret
push
sub
in
sub
mov
popf
xchg
cmp
inc
mov
or
dec
mov
add
div
in
ret
cmp
pusha
shlb
or
cwtl
push
shll
pop
mov
stc
jbe
icebp
aaa
sbb
call
mov
sub
in
pop
sbb
or
adc
mov
sub
and
xchg
or
stc
xchg
iret
sti
in
add
add
in
cld
popa
lahf
adc
sub
out
xchg
pop
add
mov
mov
leave
adc
imul
testl
push
jmp
xor
mov
jb
pushf
out
pop
pusha
jb
adc
iret
cltd
push
fisttpll
jbe
in
pushf
ret
pop
in
cmpsb
and
mov
pop
fisubl
imul
fnstsw
push
mov
lret
sbb
jo
pop
aas
leave
hlt
push
mov
pop
ljmp
sub
mov
addr16
mov
sti
cmp
sub
fadd
aad
jg
cli
dec
cs
dec
shlb
jns
and
mov
sti
mov
and
iret
mov
dec
xor
jmp
in
rol
and
pop
lahf
add
push
stc
xlat
loope
mov
push
push
jno
xor
xchg
test
loop
pop
outsl
out
adc
out
adc
mov
dec
push
out
clc
int
loopne
ret
cmp
adc
push
mov
fimull
mov
dec
repz
aam
mov
sbb
fidivl
push
pop
mov
mov
cwtl
sub
fsubl
sub
dec
addr16
in
pushf
rcrl
add
mov
call
scas
lcall
out
push
loopne
call
push
sub
inc
outsb
bound
xchg
repnz
jo
hlt
cltd
ja
js
xlat
subl
push
fldcw
shr
xor
inc
mov
gs
and
mov
jbe
repnz
adc
dec
gs
push
adc
repnz
imul
data16
and
inc
in
pop
loop
ret
cmp
pop
cmp
adc
push
std
daa
jbe
sbb
add
and
add
mov
mov
arpl
ljmp
adc
lds
inc
mov
xor
push
pop
aam
popf
rcll
push
in
pop
jo
xor
out
jge
movsl
out
cmc
nop
sbb
imul
xchg
sarl
ljmp
mov
pop
inc
dec
pop
ds
das
xlat
cwtl
lret
je
fldt
jmp
andl
das
xchg
scas
sbb
xchg
add
adcb
or
js
lret
jbe
test
push
xorl
cmpsb
imul
flds
aam
mov
mov
cmp
sti
sbb
mov
call
pop
inc
push
stc
pusha
lahf
or
leave
daa
ds
les
addr16
dec
popf
sbbl
int
and
in
inc
iret
test
mov
sbb
push
pop
push
pop
hlt
lret
filds
scas
inc
sub
loope
je
mov
sbb
adc
lret
icebp
fstl
lock
mov
push
adc
outsb
jl
fpatan
push
mov
movsb
push
in
push
fbld
sti
pop
inc
xor
repnz
add
or
mov
sbb
mov
fwait
xchg
push
and
fsubrs
mov
mov
aam
cmp
adcl
dec
clc
mov
mov
ret
in
out
push
pop
mov
dec
pop
mov
dec
cmpsb
jnp
cmp
adc
mov
sbb
add
outsl
add
fdivrl
sbb
mov
mov
push
daa
mov
jg
aam
subb
lret
orb
shrl
adcl
subb
jbe
out
add
pop
insl
loope
add
xor
xor
and
daa
add
js
imul
ljmp
pushf
cmp
adc
ja
testb
sahf
and
sti
jecxz
int3
sub
loope
adc
pop
or
inc
fnstenv
xor
loop
mov
je
pop
fisttpll
cli
ds
fstpt
push
adc
rcl
adc
adc
std
and
mov
out
xchg
and
cmp
mov
or
cmp
dec
mov
aam
cmc
jle
xchg
insl
arpl
cmpb
or
int
sub
cmp
lock
xlat
add
lds
clc
mov
or
jg
clc
jmp
xlat
into
sub
cwtl
cmpsb
pop
xchg
and
cli
xchg
arpl
mov
mov
lods
call
dec
outsl
and
rolb
popa
mov
test
or
addl
leave
fisubrl
pop
add
mov
dec
or
aam
cwtl
adc
sbb
pop
mov
insl
movsb
sbbl
add
out
mov
and
and
xchg
inc
aam
mov
loopne
mov
loope
subb
xor
mov
lcall
adc
out
add
sbb
sub
and
iret
fidivrl
adc
inc
pop
das
sahf
xchg
mov
inc
fwait
ljmp
mov
orb
in
sbb
adc
stos
adc
push
bound
mov
or
popa
add
pop
mov
xchg
inc
push
das
not
xchg
mov
pop
pop
cli
rcr
outsl
cli
outsb
shll
pop
dec
dec
add
xchg
mulb
dec
addl
test
hlt
inc
sbb
shrb
xor
movsl
mov
mov
dec
test
or
mov
jle
repz
test
loop
pop
sub
mov
nop
movsb
mov
imul
inc
jb
push
sub
xchg
das
aad
lea
sti
jp
mov
aad
addl
xchg
roll
and
aad
addl
cmp
addr16
dec
xchg
push
jno
rolb
dec
cmp
add
adc
fildll
and
pusha
add
push
imul
push
adc
in
pop
jl,pt
cmp
loope
js
mov
call
pop
rorb
jmp
cmp
clc
mov
mov
pop
adc
mov
xchg
push
adc
xor
push
jns
inc
adc
popf
adc
ja
xchg
iret
lcall
sar
xlat
sub
dec
add
imul
pop
std
fiadds
dec
pop
cmpsl
out
sbb
push
out
xor
dec
rcrb
jnp
xchg
mov
popa
pop
jns
fnstenv
aas
mov
xchg
xchg
inc
mov
ret
xor
in
aaa
shrl
in
pop
insb
imull
pop
rcrb
cmc
jp
or
unpcklps
pop
mov
push
cs
lock
js
pusha
mov
cwtl
je
jno
mov
pop
repnz
jae
jnp
ss
sub
push
insb
jae
inc
sarb
sub
pushw
push
mov
lods
fisttpl
xchg
jge
fsubrl
pop
enter
jne
sub
sbb
pop
inc
xorb
ret
push
iret
lcall
mov
mov
jnp
add
dec
inc
loope
enter
sub
mov
mov
xchg
push
mov
je
gs
adc
mov
push
push
sub
cmp
rcrb
adc
insb
push
lahf
fadd
shrl
dec
mov
and
testb
jb
xor
xchg
cmp
pop
cmp
inc
xchg
pushf
xor
in
hlt
xlat
mov
das
push
push
bnd
sub
jmp
outsb
cmp
jg
or
mov
pushf
lds
mov
ror
mov
gs
mov
push
inc
pop
xor
imul
pop
movb
enter
jl
negl
xchg
movsb
pushf
movb
outsl
lods
addr16
mov
lock
cmp
ret
test
pop
dec
xor
aad
pop
xor
idiv
mov
fwait
xchg
loopne
shl
lds
imul
mov
aas
mov
mov
pop
pop
test
xor
cwtl
gs
cmpl
pusha
in
negb
fisubl
xor
inc
dec
gs
push
pusha
mov
adc
xor
lds
adc
dec
xchg
inc
or
xlat
cmp
and
lds
jno
sahf
lds
inc
lods
dec
or
cmp
xor
mov
inc
les
mov
xor
jmp
add
and
and
dec
daa
test
jmp
mov
mov
jo
sbb
int
insb
add
cld
jle
pushf
fwait
je
and
inc
jle
out
jns
push
imul
jle
and
adc
out
pop
and
outsl
push
jb
sbb
gs
mov
xor
pop
push
xor
decb
and
imul
push
xlat
sub
test
ret
dec
je
into
add
sbb
addl
arpl
outsl
sub
ds
sub
jae
imul
adc
scas
incl
push
mov
ss
cmp
stos
daa
add
cltd
sbb
ret
xlat
fcompl
insb
jae
xchg
shrb
mov
popf
or
pop
xchg
jb
sub
add
dec
push
sti
sub
cs
push
loopne
aad
push
push
inc
inc
jl
daa
sub
dec
loop
sarl
and
pop
cli
mov
mov
ss
dec
test
and
mov
jmp
into
js
or
arpl
enter
xlat
rep
popf
cmpsb
and
push
cmpsb
cmp
push
inc
mov
jge
adc
loope
jnp
add
lods
out
mov
es
test
rcrb
repz
jle
fisttpl
mov
jp
mov
movsl
jecxz
xlat
fcomps
push
adc
ja
mov
fldl
mov
jmp
aaa
add
add
jne
mov
mov
lds
nop
out
push
rolb
lock
mov
idivl
ja
sahf
or
js
cmp
stos
mov
mov
xor
mov
arpl
dec
xchg
inc
or
push
sub
xlat
mov
ficoms
mov
movsl
pop
std
mov
jne
jne
shrl
pop
inc
ja
pop
add
mov
cli
icebp
cmpsl
add
lret
lods
addr16
fmull
xor
outsb
mov
cmp
fwait
xlat
icebp
popf
push
test
cli
or
xchg
in
adc
aam
cld
pop
lods
inc
jecxz
mov
mov
movb
arpl
fidivl
xchg
pop
xchg
frstor
pusha
inc
mov
xor
enter
jne
test
cmp
push
movsb
std
dec
or
push
xor
jle
pop
and
nop
loopne
and
dec
fsub
mov
xchg
dec
or
mov
fbld
cmpsb
jbe
movsb
push
cmp
ljmp
aam
push
mov
push
jno
pop
lock
cmp
int
xchg
mov
xchg
sub
push
icebp
scas
loopne
mov
push
xchg
sbb
dec
sti
sub
gs
dec
inc
xchg
cmp
les
lahf
nop
cmp
add
popa
outsb
mov
xorl
fcomps
push
jae
mov
emms
addb
xlat
dec
mov
scas
cmp
in
stos
out
pop
lahf
or
loopne
je
xorl
cmpsl
lea
or
xchg
lods
and
or
dec
sub
mov
aas
xor
out
jg
dec
test
inc
mov
pop
fisubs
adc
leave
cmpsl
jecxz
and
call
mulb
xor
xchg
mov
dec
jmp
sbb
leave
mov
aaa
clc
pop
mov
xchg
mov
push
clc
dec
rorb
pop
cmc
clc
mov
in
pop
stos
scas
stc
mov
dec
out
xchg
push
dec
lods
stos
aaa
adc
lea
cmp
test
pop
cwtl
or
mov
aam
aam
int
mov
jmp
stos
pop
sub
insl
int
lret
dec
add
push
push
dec
jno
int3
xor
fdivrl
sub
out
repz
inc
sbb
aad
sbb
adc
cmp
int3
xor
enter
sbb
fistpll
mov
mov
sbb
adc
dec
xchg
or
xchg
pop
aam
mov
loope
daa
push
add
lds
adc
shl
lret
ss
sub
xchg
or
lcall
mov
andl
push
push
fisttps
mov
cmp
dec
sbb
aaa
and
negl
out
mov
sahf
mov
dec
insb
jo
cmp
sbbl
xchg
cld
mov
jg
cmp
or
lcall
fiadds
add
sahf
push
dec
mov
fcomps
push
cmpsl
inc
fadd
xor
add
and
ss
shll
cld
das
popf
lret
stos
cmpsb
xchg
mov
sti
dec
xlat
jecxz
ljmp
xor
outsl
das
jbe
push
shrb
mov
push
sti
aad
mull
jae
xlat
mov
stos
ja,pn
sbb
sbb
lods
bound
scas
scas
outsb
sub
dec
cmp
lods
xchg
icebp
es
cmp
jo
in
add
adcl
imul
cltd
scas
subl
or
mov
lret
push
adc
mov
sub
popa
pop
test
jmp
lcall
std
add
out
aas
out
mov
mov
cmp
mov
cmp
test
mov
jbe
mov
cmpsl
push
cwtl
in
fs
xor
out
hlt
mov
gs
or
mov
into
lock
sbb
sti
fisttps
dec
adc
aam
pusha
nop
cli
dec
or
iret
mov
outsb
mov
vunpckhps
pop
pop
cmc
dec
lahf
shrb
cmp
dec
dec
fcmovnb
adcb
push
mov
push
and
ljmp
scas
dec
movsb
das
in
nop
gs
ja
lcall
fwait
push
lods
cli
hlt
mov
xor
dec
push
xor
pop
mov
xchg
jle
add
add
ljmp
jle
jmp
icebp
sbb
js
and
test
test
lods
iret
icebp
popa
bound
dec
dec
xchg
xlat
sbb
ret
mov
xchg
adc
call
movsb
int
pop
jmp
enter
mov
inc
sahf
sti
xor
adc
inc
jp
stc
push
and
insb
push
pop
mov
nop
scas
pop
ss
ljmp
out
jge
or
cmpsl
mov
xorb
pusha
cmp
aas
in
shll
mov
inc
xchg
repz
pop
bts
mov
stc
xchg
stos
pushf
adc
faddl
mov
xchg
xchg
outsl
rcl
movsl
jb
xchg
push
mull
jmp
push
or
negl
pop
jp
xor
xor
repz
push
xor
or
inc
sub
rorb
mov
add
daa
ret
mov
jp
movsl
or
bound
sbb
push
and
iret
sahf
fnstsw
xlat
pop
pop
div
movsl
into
icebp
or
shlb
andl
xchg
mov
cs
fidivrs
mov
push
lods
in
in
roll
scas
into
jmp
push
xchg
fs
ja
mov
je
int
xchg
xor
fistps
sbb
push
xchg
adc
adc
or
sbb
fs
adc
repz
lret
das
or
adc
pop
mov
dec
push
xor
je
subb
pop
pusha
push
int
sub
test
pusha
sub
pop
mov
or
subb
ss
test
out
xor
inc
jg
hlt
or
ret
int
mov
js
movzbl
mov
in
mov
push
dec
jno
movsl
je
xor
ljmp
loope
stos
movsl
adc
in
xchg
push
push
lahf
adc
add
pop
in
les
rcrb
out
mov
divb
imul
push
mov
jnp
imul
adc
out
jbe
xchg
cmpsb
add
inc
rorl
loop
mov
mov
dec
les
test
sbb
cmp
dec
mov
xor
sahf
subl
les
fcoml
push
sub
push
mov
ds
mov
daa
mov
gs
lods
dec
jp
sub
shlb
jl
push
push
sti
jg
adc
pop
cmp
mov
sub
les
in
mov
incb
in
dec
add
pushf
sti
shl
mov
xchg
rcll
or
scas
bound
repz
packuswb
repnz
inc
cmp
add
fucompp
ds
pusha
add
out
mov
add
inc
mov
imul
in
subl
jbe
mov
aaa
int
arpl
or
push
addb
inc
jg
nop
inc
pop
jne
xchg
push
test
xchg
pushf
test
inc
add
std
sub
sub
mov
into
and
jge
mov
xchg
fdiv
jmp
in
sbb
loope
ret
mov
lea
mov
cli
jmp
xchg
mov
out
test
add
lret
into
daa
xor
mov
jnp
cmpsl
sub
cli
aaa
shlb
mov
into
sbb
mov
ret
cwtl
xchg
mov
sub
push
into
cld
in
icebp
addr16
pushf
mov
sub
repnz
sarb
mov
fsubrs
outsb
inc
inc
arpl
mov
or
adc
and
jae
cmp
and
movsl
jl
inc
pop
out
bound
xlat
sbb
xchg
jns
test
sub
cmp
das
or
shll
push
add
pop
push
shr
cli
mov
or
inc
fnsave
ja
cwtl
xchg
add
ja
adc
push
mov
out
xchg
or
dec
push
iret
adc
add
mov
mov
and
push
lahf
int3
lea
cmpsb
jnp
xor
out
pop
mov
mov
xor
mov
xor
push
dec
aad
divl
test
mov
je
sahf
je
mov
daa
gs
lds
xchg
or
inc
mov
or
dec
call
xor
cmp
psllq
mov
shl
popa
fisttpl
cld
fcmovb
mov
xor
enter
adc
push
test
jge
mov
stos
aas
aam
icebp
cld
clc
enter
dec
dec
sbb
sub
shll
out
mov
dec
mov
ret
repnz
mov
or
sahf
jmp
push
or
stos
sub
cltd
hlt
nop
pop
mov
fcomi
sbb
jge
std
pop
xchg
sbb
aam
lahf
mov
mov
xchg
mov
daa
jmp
lcall
das
ret
inc
mov
jmp
xchg
jne
xor
add
fcoms
mov
mov
int3
and
mov
lahf
sbb
jo
or
int3
xchg
cmpsb
push
xor
mov
xor
adc
cli
loopne
lcall
jne
mov
pop
stc
lcall
das
xchg
in
jo
push
add
arpl
add
mov
mulb
sti
jecxz
xor
dec
jg
cmp
adc
push
sub
jmp
push
call
cwtl
mov
je
dec
xchg
movl
outsb
out
push
inc
mov
stos
jg
mov
mov
mov
je
or
inc
jbe
and
or
jno
arpl
xlat
pop
push
arpl
push
sub
mov
fadds
setle
pop
nop
cmp
add
shlb
je
cmp
xor
sbb
bsr
pop
dec
popf
clc
mov
add
and
icebp
shlb
push
sub
fbld
idivb
mov
lds
ret
ftst
adc
rorl
lcall
scas
les
test
dec
jg
fptan
dec
lcall
jne
aad
dec
jecxz
pop
out
mov
sti
fwait
int
or
fsubrs
sub
and
int3
add
jl
sahf
rorl
lret
xlat
insl
add
dec
cmp
lea
jg
mov
pop
out
cmp
in
sbb
jae
and
lcall
mov
cmc
mov
xchg
or
mov
outsb
stos
pop
xchg
lret
xchg
sub
imul
lds
out
mov
inc
cmp
jae
sbb
int
adc
push
sub
xchg
iret
inc
adc
rclb
jmp
sub
push
add
push
ficomps
lea
xchg
jp
or
in
movsb
jo
mov
stc
lds
and
js
fcoml
inc
imul
xor
pop
inc
adc
iret
pop
outsl
andb
dec
lea
push
dec
scas
in
sahf
xor
movsb
jbe
jle
jbe
or
nop
enter
test
lea
push
repnz
mov
pop
fs
scas
cmp
pop
jecxz
adcb
sbb
gs
mov
mov
cmp
sub
nop
ja
pop
mov
xchg
xchg
sub
mov
and
inc
mov
sub
jmp
fldenv
gs
imul
mov
mov
mov
notl
mov
gs
sbb
mov
repnz
lods
xchg
scas
mov
shl
addr16
popa
push
pop
or
enter
sbb
adc
sbb
push
testl
push
out
sbb
inc
push
shrb
pop
inc
push
mov
decb
push
dec
bound
aas
stos
scas
insb
iret
xlat
xchg
ljmp
add
mov
add
out
pop
loope
fcompl
add
mov
dec
das
add
scas
push
icebp
fld
fwait
aaa
das
push
outsl
nop
mov
push
lods
popl
mov
fcoml
pop
adc
rol
idivl
in
pop
mov
jmp
ja
hlt
mov
mov
inc
jp
inc
cmc
cmpsb
daa
add
pmaxub
jmp
loope
xor
xor
outsb
xlat
es
pusha
adc
jns
mov
add
mov
fwait
push
or
ficomps
int
inc
push
push
jecxz
inc
aam
add
adc
xor
xchg
cmp
repnz
test
mov
addb
out
stos
mov
mov
test
test
iret
cmpsl
jge
sbb
ljmp
dec
pop
out
lret
je
lret
adc
addr16
mov
pushl
icebp
stc
leave
or
into
mov
mov
fucomip
pusha
pop
inc
inc
xchg
andl
jne
mov
adc
sbb
test
dec
mov
aad
add
mov
fcomps
int
push
sbb
sub
ret
push
scas
fstpl
and
push
cmc
sub
insb
sbb
popa
fstps
cs
mov
arpl
pusha
xor
adc
dec
lods
and
sbb
mov
into
fwait
std
lcall
daa
push
jbe
jb
jle
xchg
rclb
imul
subl
fisubrl
cmpsb
mov
jbe
cmpsb
fidivrs
addr16
lods
test
inc
fisubs
mov
mov
pop
stc
xor
dec
hlt
jae
test
movsl
out
inc
push
inc
pop
cmp
pop
andl
jnp
mov
adc
js
cwtl
mov
ret
xchg
sar
hlt
push
or
pop
add
add
sbb
inc
sbb
fcmovbe
fwait
push
adc
sub
add
lea
mov
cmpb
xchg
inc
xchg
pop
sub
jne
cld
xchg
pusha
movlps
adc
push
sbb
jp
addr16
mov
sub
lret
shlb
push
bound
into
push
dec
push
or
jno
lret
xchg
inc
or
dec
inc
xor
ljmp
jmp
jg
mov
cmp
std
lret
mov
mov
leave
push
mov
xor
mov
daa
xsha256
cmpsb
aam
cs
pop
call
xchg
and
xchg
xor
add
mov
stos
mov
mov
mov
sbbb
into
dec
leave
stc
in
pop
adc
sbb
sub
cmp
ds
mov
or
lret
rclb
xor
sbb
ret
jo
popf
lods
sbb
ds
pop
data16
lret
or
pop
add
mov
mov
mov
cmpsl
push
sub
shlb
lret
nop
sbb
repnz
or
mov
jne
sbb
and
push
push
dec
jp
adc
adc
imul
mov
into
mov
mov
sbb
roll
addr16
mull
push
push
xor
mov
aad
popa
pop
cmp
mov
cmp
in
cmpsl
add
lcall
sub
and
cltd
push
dec
aam
aam
nop
xchg
ret
lea
icebp
movsl
and
mov
movq
pop
sbb
out
test
fwait
jo
mov
push
lods
push
fwait
sub
or
popf
fidivs
sbb
mov
outsb
imul
inc
lods
jbe
mov
adc
adc
pop
and
sti
or
out
and
sub
inc
add
sbb
push
loope
fs
std
sbb
aam
ret
loope
jl
je
sub
push
xchg
mov
inc
pusha
jae
xchg
pop
push
push
icebp
jo
insl
repz
fisubl
fstpt
xchg
je
mov
pop
loopne
push
mov
fstpt
das
movsl
mov
jecxz
jo
bound
cs
mov
popf
stos
fwait
idivb
xor
push
into
addr16
repz
and
adcb
mov
xor
jns
jl
imul
push
enter
out
and
in
loope
sarl
jo
xchg
aaa
mov
mov
sub
hlt
dec
mov
punpckhwd
out
movsb
in
or
cmpb
ror
repz
pop
and
arpl
mov
faddl
adc
movsb
filds
hlt
shll
adc
cld
into
push
cli
mov
adc
sub
mov
push
pop
push
fistpl
adc
mov
lahf
add
xchg
or
clc
push
jmp
sub
dec
mov
rclb
bound
xlat
insb
and
mov
jmp
inc
cmp
inc
cld
push
push
mov
xor
and
cld
sub
es
cmc
and
in
cmp
cmp
arpl
outsl
mov
xchg
daa
flds
daa
cltd
sub
inc
adc
push
andb
adc
fldl
pop
outsb
mov
aas
cli
lahf
imul
mov
nop
cmp
scas
orl
cmpsb
push
dec
adc
mov
and
mov
lock
sub
and
psubusb
outsb
inc
loope
rcrl
pop
movsb
repz
rorb
inc
sti
int3
mov
add
cmp
sbb
fisttpl
movsl
add
mov
xor
mov
pop
cltd
push
jno
andb
out
jae
imul
movsl
fmull
cmpsl
mov
push
cli
lcall
sbb
add
adc
es
push
or
sarl
stc
push
lcall
lds
scas
mov
mov
sub
in
ds
push
in
inc
dec
mov
and
dec
jl
sub
lds
out
and
inc
loope
ret
lahf
insl
sbb
stos
mov
sub
insb
mov
push
dec
jmp
out
push
imul
sar
js
mov
adc
mov
aaa
xor
rcrl
outsl
xor
push
ja
out
jb
jle
mov
and
neg
clc
and
cmp
xchg
jl
mov
clc
xchg
sbb
mov
ds
jo
xchg
mov
fdivr
out
pop
fiaddl
mov
dec
or
insb
fwait
cmp
cmp
push
push
rep
test
pop
gs
pop
je
pusha
pop
out
add
add
inc
mov
pop
lods
pop
adcl
pop
and
aad
fcmovbe
sub
les
icebp
push
sub
insb
pop
add
imul
icebp
mov
lea
mov
sub
jle
sbb
dec
cmp
out
mov
fisubl
dec
imul
jg
pop
scas
or
pop
mov
push
insb
pop
xor
loopne
mov
js
sti
xor
data16
cli
inc
inc
jmp
xchg
push
push
sbb
in
mov
push
cmp
jp
pop
mov
xchg
adc
adc
outsl
jle
fnsave
std
lds
push
mov
je
inc
repz
add
sbb
sub
adc
repnz
dec
xchg
xchg
xchg
sti
mov
jmp
push
in
xor
jns
jb
mov
int3
rol
repz
icebp
icebp
fwait
xor
xchg
test
mov
incl
push
das
jne
lahf
pop
inc
or
push
sarb
cmp
loope
clc
out
popa
stos
jg
pop
into
stos
or
sbb
stos
imul
mov
sbb
pop
insb
subl
cmp
pmaddwd
loope
adc
aad
leave
mov
sbb
jge
dec
inc
in
mov
into
inc
insb
mov
pop
rorb
scas
mov
push
push
fiadds
jo
add
addr16
leave
adc
pop
xchg
jmp
pop
adc
pop
cmp
insl
jecxz
jo
popa
clc
inc
outsl
and
push
into
ret
dec
add
inc
outsb
mov
lret
mov
lods
pop
addr16
or
add
jecxz
int
push
gs
rol
adc
pop
popa
sbb
mov
push
sub
cs
cmp
ja
dec
addl
testl
inc
mov
mov
jnp
xchg
jne
pushf
sbb
lods
pop
mov
xchg
aad
mov
add
das
mov
inc
push
lret
adcb
adc
mov
cmp
aaa
lds
pop
fwait
mov
dec
and
cmpsl
push
icebp
mov
daa
out
dec
push
pop
mov
in
jae
adc
lds
mov
cmp
or
aaa
mov
jae
lea
out
sub
in
in
push
int
sub
jbe
xor
fstpl
sti
mov
fdivrl
push
dec
ja
shrb
mov
mov
xorb
or
jnp
mov
pop
xor
inc
fsubl
std
loopne
adcl
test
aam
sar
int3
dec
test
jbe
inc
fidivrl
xor
inc
jns
out
ror
lods
scas
jp
adc
fldenv
inc
dec
imul
jge
das
lea
insb
repz
cmp
xchg
add
xor
cmp
mov
push
push
addl
xor
pop
lods
jne
adc
dec
and
and
mov
nop
jb
mov
ret
cli
xor
mov
mov
fwait
out
sti
stos
cmp
shll
xchg
cwtl
js
push
pop
push
dec
jo
lret
daa
cld
dec
repz
cmp
std
adc
loop
pop
addb
push
aas
js
xor
jp
xchg
into
or
popa
push
mov
inc
popa
enter
push
cmp
lock
test
cltd
adc
stos
and
mov
adc
fnsave
cld
scas
insb
imul
inc
xor
test
out
push
pop
mov
mov
push
xchg
dec
jmp
in
leave
scas
iret
cmp
fdivrl
in
sub
push
enter
push
inc
lret
push
dec
mov
pushf
pushf
push
or
push
iret
and
sub
inc
inc
out
sti
aas
sbbl
pop
inc
xchg
mov
nop
ss
sub
cmpsb
movsl
sbb
nop
cmp
scas
xchg
xchg
jns
lods
cmp
fs
outsl
fwait
or
mov
fld
stos
adc
dec
or
jg
gs
jb
pop
jo
sbb
sbb
popf
ret
mov
mov
mov
push
jge
aam
sub
and
xchg
xor
in
jl
movsl
and
pop
dec
out
fsubrl
stc
mov
mov
fucom
sbb
mov
and
adc
xor
cmp
adc
aas
test
int
and
jno
sahf
jl
inc
lret
cli
int
dec
lods
xchg
ljmp
or
lods
cmpsl
mov
adc
stos
push
jns
fistpll
adc
call
fists
xchg
out
xchg
mov
dec
imul
inc
shrl
ret
xor
bound
std
jmp
in
adcl
repnz
push
mov
bound
and
clc
leave
mov
fdivr
cmp
sbb
out
push
xlat
movsl
in
push
inc
jb
shlb
mov
push
add
ficoms
sub
xor
push
test
shl
test
cmp
repz
pop
scas
mov
fwait
inc
lea
cmpsl
xor
test
push
and
mov
out
xchg
dec
jno
gs
popa
cmp
popa
push
xchg
push
in
dec
mov
aad
daa
sti
mov
add
sub
xor
scas
gs
mov
ret
sahf
insb
sub
inc
lcall
std
in
inc
test
add
push
cltd
stos
sub
adc
test
cmp
rorl
popf
adc
mov
hlt
jo
sub
inc
les
int3
xlat
lds
rolb
cmc
test
stos
mov
shll
dec
not
in
mov
pop
ljmp
sarb
mov
add
mov
cmp
lahf
adc
xor
and
int
dec
pop
adcb
rcll
ss
mov
jns
mov
inc
lock
xor
dec
mov
mov
pop
dec
mov
shrb
imul
ficomps
cli
bound
rcl
lea
enter
mov
adc
inc
cltd
mov
enter
or
ret
push
jo
mov
or
jp
mov
adc
iret
jne
mov
cwtl
jle
jmp
sarl
push
pop
mov
out
xchg
cmp
mov
into
sbb
data16
orl
inc
adc
lea
mov
lds
out
lods
push
mov
test
cld
add
aaa
pop
mov
lods
arpl
loope
out
ss
loop
add
cmpsl
jb
pop
push
out
mov
mov
dec
inc
movsb
mov
pop
sbb
jp
in
dec
cmp
les
cmpsb
mov
and
push
stos
fistl
add
ljmp
sub
loope
out
daa
push
daa
push
sbb
mov
stc
xchg
mov
jno
shll
stc
add
mov
outsb
movl
fcompl
pop
mov
push
shll
xlat
mov
insb
scas
and
push
fwait
rcl
xor
out
bound
fs
ja
push
shl
popa
mov
xchg
pop
orl
pop
lret
jmp
movsl
sub
mov
cs
pop
adc
stos
loop
dec
in
xor
fs
sbb
std
rorl
test
in
int
cwtl
or
mov
cwtl
in
push
in
aad
int
mov
mov
add
mov
std
xchg
mov
xor
pop
sti
cmp
mov
jmp
mov
in
sub
dec
mov
inc
ja
mov
lods
mov
out
inc
lock
cmpsl
flds
jo
push
push
int3
test
loop
or
adc
push
dec
test
adc
es
xchg
in
jae
data16
push
call
loop
out
adc
scas
mov
mov
test
mov
dec
call
push
shlb
incb
shl
lds
shrb
mov
fs
inc
scas
inc
stos
movsl
movsl
pop
outsb
push
mov
add
xchg
push
adc
imull
stos
out
jmp
mov
ljmp
ds
sub
out
pop
movsl
adcl
sub
int
bound
test
xchg
fmulp
xchg
sub
jg
xor
sbb
mov
pop
arpl
fsubl
mov
out
dec
int3
xchg
dec
or
pop
repnz
xor
adc
js
mov
jb
loopne
fildll
xchg
pop
mov
cmpsb
jp
testl
pushl
cmp
mov
adc
test
jnp
push
lea
cmp
icebp
sbb
adc
fsubrs
stc
je
out
scas
mov
adc
gs
xor
popa
out
or
and
shrl
or
adc
insl
shl
daa
in
popf
push
repz
lahf
cld
lret
add
fisttpl
inc
push
sahf
jne
pop
xchg
fiaddl
orl
ljmp
ret
fidivrs
cld
mov
enter
cwtl
cmpsl
pusha
and
lcall
test
xchg
sub
xchg
pop
mov
loopne
in
jno
addb
dec
cmp
fdivs
sub
sub
clc
adc
mov
dec
sarl
inc
sahf
sub
lahf
addr16
out
fs
and
lea
push
pop
scas
aaa
icebp
cli
cmpsb
mov
int3
test
cmp
dec
jp
outsl
icebp
ja
mov
ficompl
mov
xchg
cmpsl
roll
andb
adc
or
adc
and
lret
loop
out
cmpsb
mov
cs
hlt
test
mov
movl
jnp
and
mov
jg
pop
mov
pop
fildl
or
fwait
jns
fwait
pop
push
repnz
dec
mov
daa
add
in
sbb
bnd
fsubl
mov
int
gs
sarb
out
popf
leave
jns
and
or
inc
push
xor
rclb
iret
dec
mov
inc
incl
inc
sbb
push
int
jp
adc
pusha
inc
xchg
popf
and
inc
sbb
ret
cmp
scas
lods
mov
dec
dec
jge
test
jmp
daa
sub
sub
push
fst
sbb
pop
xor
pop
insb
sub
sbb
in
push
mov
and
mov
add
or
movsb
jle
xchg
je
sub
outsl
mov
mov
sbb
push
mov
push
movups
cwtl
das
sbb
push
pop
out
cmp
mov
idiv
xchg
sbb
xor
popf
call
data16
js
mov
insl
inc
push
in
imul
inc
movsb
mov
insb
ss
mov
sub
pushf
and
mov
push
or
cmp
push
sub
out
add
push
les
xchg
sbb
mov
in
in
aaa
sbb
or
inc
mov
fwait
xchg
push
outsb
rcrl
sarb
xor
mov
lret
and
mov
mov
xor
or
xchg
xor
adc
mov
sub
and
out
and
movsb
jns
cmpsb
pop
push
push
and
imul
pop
mov
pop
push
icebp
outsb
lea
adc
nop
dec
xchg
enter
xor
fildl
cmp
push
sarl
mov
push
cmpsb
lcall
cmp
dec
fwait
rorb
lea
sub
repnz
push
sub
jae
das
js
std
cli
xchg
test
shrl
loopne
loop
push
ljmp
stos
cmp
ss
jle
and
cli
mov
sub
sbb
cmc
adc
into
dec
rclb
scas
ljmp
mov
mov
sahf
inc
fwait
push
mov
mov
or
stc
jmp
add
pop
ds
sbb
jl
adc
jne
pop
jle
mov
lock
mov
adc
xchg
std
pop
pop
sbb
mov
or
dec
mov
out
test
cs
adc
es
insb
std
dec
mov
loopne
inc
jp
loope
leave
fistl
scas
push
xor
movsb
out
adc
inc
pop
pop
adc
or
sub
xchg
repz
insb
lahf
into
popa
mov
insl
push
xor
push
push
repnz
into
adc
js
fistps
xchg
lret
adc
pop
push
push
cmc
push
cmp
ret
test
mov
outsl
sub
loope
xchg
lods
mov
idivb
inc
outsb
aam
sbb
or
sbb
outsl
jo
sahf
sub
fcos
or
mov
into
sub
pop
aas
insb
pop
pop
faddl
shr
scas
out
hlt
mov
stc
arpl
sbb
push
inc
popf
leave
test
aas
jle
pop
lret
daa
push
rcrb
pop
in
mov
in
negl
fldt
sub
arpl
sub
jno
sahf
pushf
daa
sbb
push
dec
xchg
fsts
mov
pop
aas
sub
std
imul
cmpsb
ficoms
push
jns
mov
out
clc
lods
mov
adc
lcall
add
push
fldt
je
cmp
testl
xchg
lods
fisubrs
scas
pop
out
push
xchg
xlat
outsl
and
adcb
mov
mov
jl
jb
inc
push
add
mov
adc
mov
adc
call
inc
repz
lds
and
fmuls
lea
or
jge
jmp
jmp
sub
xor
dec
mov
enter
push
in
loop
xchg
xchg
mov
test
or
aam
add
mov
xchg
jl
jmp
movsb
sbb
test
imul
sub
mov
ds
shrl
mov
jb
insl
mov
dec
lock
ficompl
fstps
ret
push
outsl
in
pop
aas
mov
jecxz
sbb
and
inc
inc
mov
fs
push
xor
aad
and
int3
lods
inc
in
andl
add
dec
fmuls
ret
pusha
icebp
arpl
xor
jmp
call
daa
and
mov
cld
mov
fincstp
jns
xchg
js
iret
loop
mov
test
es
push
fisubl
mov
xchg
mov
jg
lcall
mov
dec
in
xor
inc
ljmp
jbe
and
bound
xchg
mov
sub
cmp
mov
dec
cmpsl
mov
add
add
pop
xchg
imul
cmc
cmp
out
cmp
int
je
cwtl
popf
mov
and
cmp
sahf
je
ljmp
jne
sub
lock
mov
mov
jmp
xchg
add
jns
inc
addl
icebp
cmc
jp
scas
mov
inc
js
andl
jns
mov
sbb
push
mov
cmp
pop
inc
mov
inc
sub
cmp
pop
ret
leave
mov
xchg
push
ja
cltd
fdiv
mov
rcrl
sbb
shlb
fsubrl
call
add
js
dec
test
leave
fadds
ss
andl
leave
mov
shlb
cmpsl
cmp
cmpsl
or
inc
lods
jl
and
cld
cmp
dec
iret
sub
pop
mov
inc
xorb
into
push
out
das
fs
jno
mov
int
out
mov
xchg
inc
hlt
les
or
test
adc
mov
push
leave
adc
and
and
in
dec
sub
or
lret
mov
sbb
sub
xchg
sub
cmp
out
and
jle
pop
xchg
push
mov
lcall
loop
jae
or
shlb
mov
inc
clc
jg
or
add
insl
aas
pop
add
xlat
xchg
mov
jge
imul
jecxz
fnstcw
ret
sti
rcll
sbb
cs
xchg
add
call
push
or
int3
jo
stos
loope
adc
popa
out
data16
arpl
push
rcr
roll
push
into
mov
mov
xchg
icebp
and
movsb
pusha
test
stc
je
test
jae
cmp
insb
mov
repnz
pop
pusha
lods
fstpl
shlb
test
arpl
sahf
outsb
jnp
mov
cmc
jecxz
iret
xlat
or
divb
fistps
sbb
xchg
repnz
pushf
mov
mov
outsl
stos
iret
aaa
jns
fcmovu
mov
pusha
add
call
out
outsl
lret
shlb
mov
or
repnz
xchg
inc
loopne
pop
jb
fcompl
sbb
fdivl
push
and
clc
mov
push
data16
and
jne
icebp
je
outsb
mov
imul
adc
cmpsb
xor
call
jnp
pop
out
and
jecxz
mov
pusha
in
sbb
insb
push
cwtl
cmp
jecxz
inc
xorl
sahf
cmp
fists
test
inc
mov
cmpb
lods
cmp
std
loop
inc
and
test
aas
add
scas
sub
and
or
inc
test
jno
std
jo
jg
push
mov
stc
cld
mov
xor
repnz
in
lahf
mov
fsubs
mov
mov
mov
ljmp
je
lods
out
dec
out
mov
idivl
cmpsb
mov
jbe
pushf
pop
out
dec
pop
lods
pop
daa
sbb
loop
enter
mov
push
xchg
lock
cmp
dec
xchg
and
outsb
int
or
and
jns
aas
xor
sbb
loope
movsl
inc
mov
test
sbb
shlb
cli
popa
cmp
pop
stos
jge
and
mov
adc
in
in
push
insb
aam
jg
inc
xchg
pop
nop
push
sbb
or
pop
js
dec
pop
ror
push
int3
jnp
fcmovnu
fidivrl
test
lods
mov
pop
icebp
adc
and
fldt
xor
pop
sbb
es
xchg
jne
and
inc
idivb
push
jge
les
push
gs
mov
cld
jb
add
pop
mov
addr16
jge
mov
inc
sahf
push
mov
mov
mov
sub
nop
lea
stos
imul
ret
jle
mull
sub
jae
jo
push
dec
xor
inc
lahf
cmp
pushf
dec
dec
iret
cld
int
mov
xor
and
mov
mov
ds
ret
out
xlat
es
sbb
loopne
mov
mov
das
push
cltd
inc
mov
pop
jnp
leave
ret
mov
shrl
push
xor
aaa
add
lret
shlb
sub
fbstp
add
xor
mov
sti
jl
mov
jecxz
int
shlb
xchg
fisubl
mov
pop
aas
xchg
xchg
leave
add
push
jne
jo
pop
jnp
cmp
ja
fnstsw
ret
lea
mov
pop
add
pop
stc
stos
xchg
xor
cmp
pop
inc
jo
push
js
movsl
cmpsb
mov
roll
jno
sbb
mov
jmp
sbbb
sti
mov
stos
jl
pushf
cmp
out
jno
jb
inc
xchg
pop
out
pop
or
cs
jle
lret
ret
xchg
adc
stos
or
bnd
in
int
cmpsl
inc
js
je
xchg
nop
dec
mov
xor
inc
test
cmp
add
pop
or
sbb
testl
jae
ljmp
addr16
in
mov
jmp
sub
sub
std
sbb
mov
mov
in
cs
mov
test
shrl
iret
push
sbb
mov
inc
jns
adc
jae
or
dec
add
arpl
pop
into
add
jne
in
call
jnp
mov
dec
sbb
push
subl
fwait
cmpsb
lret
jnp
out
stc
les
sub
hlt
dec
xchg
pop
addr16
call
xor
hlt
sbb
addr16
push
mov
insl
adc
push
mov
jb
ds
dec
push
lcall
jns
repz
jg
mov
mov
push
fiaddl
dec
cmp
mov
xchg
iret
popl
ja
mov
lret
xchg
pop
ss
outsl
loope
popa
mov
pop
icebp
add
adc
adc
movsb
daa
cmpsl
add
orl
pop
jle
cmpsl
out
and
sbb
push
mov
jge
shlb
mov
ljmp
mov
loopne
cs
mov
nop
mov
in
cmp
shl
fdivs
stos
testl
xchg
dec
loope
mov
rclb
inc
push
xchg
push
inc
push
or
mov
push
fwait
fwait
and
cmp
movsl
pusha
and
xor
outsl
pusha
out
mov
sub
call
andl
mov
xchg
inc
xor
pop
dec
jno
test
ret
cmp
sbb
xlat
or
cmpsl
rdpmc
cmp
jp
cmp
mov
and
in
push
and
jmp
dec
pop
daa
and
mov
fwait
and
jae
aad
shl
daa
lock
clc
push
fwait
ss
cli
xorb
ljmp
push
and
pop
mov
jp
out
xlat
xchg
cwtl
xchg
out
adc
xor
pop
aam
push
mov
add
mov
icebp
fistl
push
inc
mov
sbb
adc
jle
and
push
push
xchg
xor
pushf
cmp
xchg
push
int
lods
push
int
in
inc
mov
push
addl
mov
loopne
add
out
jle
sub
mov
in
sahf
mov
cli
xchg
stos
xor
push
sbb
pop
sub
cmpsl
pop
test
lods
and
mov
xchg
cltd
js
add
lods
jbe
int3
dec
or
loopne
xor
jne
adc
jb
arpl
enter
lret
and
ret
pop
pmullw
repz
xchg
xchg
int3
cmp
das
call
xor
fimull
dec
inc
push
sub
add
sbb
and
cli
mov
hlt
jbe
popf
movsb
dec
adc
pop
fdivs
test
xchg
mov
xor
test
ljmp
aad
out
test
mov
add
add
sbbl
jne,pn
push
push
push
js
cltd
dec
shrb
pop
mov
sbb
sub
imul
js
mov
mov
and
je
iret
aaa
addr16
mov
in
ja
mov
mov
mov
sub
pop
and
add
icebp
cmc
popa
push
dec
daa
cs
and
imul
push
push
pop
dec
and
mov
pop
insb
pop
mov
cmpsb
jecxz
cmp
push
movsb
xor
test
cs
mov
push
mov
or
mov
pop
xchg
lods
xchg
dec
aam
sub
jo
add
shll
movsb
lods
xor
int3
and
push
sbb
imul
pusha
pop
out
addr16
mov
and
mov
sub
daa
mov
movl
stos
mov
hlt
push
ficoms
pop
imul
push
push
dec
jbe
mov
and
xor
lock
sbb
shl
and
out
jno
jp
adc
pop
in
fsubrs
xchg
test
data16
xchg
inc
lods
adc
ffreep
sub
adc
lods
adc
and
inc
lahf
fcompl
imul
js
sbb
test
xor
out
dec
orb
insb
pop
pavgb
xchg
sub
ret
inc
lret
inc
jg
mov
pop
lcall
pop
push
js
add
jmp
cmpsl
jno
inc
cmp
pop
push
and
and
js
popf
xor
sub
sti
das
dec
pusha
mov
cld
movsl
sbb
sub
add
ja
jne
push
mov
xchg
add
lahf
inc
dec
js
adc
mov
movsl
fwait
push
cmpsb
adc
clc
xchg
ja
rcr
std
dec
insl
push
in
adc
pop
cltd
lcall
add
inc
ds
push
xchg
in
hlt
in
outsb
or
mov
leave
sbb
cld
xchg
xchg
fcomip
jns
inc
mov
xchg
pusha
in
les
cwtl
push
les
mov
je
or
mov
push
jnp
shlb
inc
xor
daa
sbb
cmpsl
stc
xchg
daa
and
scas
add
mov
dec
sbb
inc
lock
add
xchg
push
lea
pop
mov
add
cs
imul
jo
call
les
cmpb
out
fwait
mov
in
testl
dec
lcall
imul
lret
fnsave
mov
fcoms
or
cmpsl
jnp
test
filds
push
shlb
pop
cmpsl
push
xchg
mov
mov
or
out
inc
daa
icebp
mov
adc
add
in
out
push
enter
insl
mov
xchg
or
xor
mov
lahf
enter
xchg
mov
movlps
mov
or
cmp
test
imul
lret
pusha
sub
insl
jae
movsl
test
out
das
cmp
and
and
sbb
repz
xchg
dec
cmc
sub
cs
in
pop
and
test
call
cmp
fwait
jo
and
loope
push
xchg
jae
lds
cmp
cmc
cwtl
xchg
pop
dec
inc
xchg
xchg
cmpsl
mov
push
adc
push
stc
xchg
cmp
lods
and
sti
cmp
mov
adc
cli
jge
fwait
adc
je
xor
ja
mov
and
add
push
inc
jl
cmp
xor
jmp
fsub
popa
push
mov
mov
mov
jecxz
hlt
adc
movb
lea
and
sbb
jnp
stos
out
and
cmpsl
pushf
stos
xchg
add
push
mull
push
sub
pop
push
dec
insl
cwtl
push
pop
mov
sub
mov
push
ficompl
sbb
ss
cmpsl
dec
cmc
pop
flds
mov
scas
push
fdivr
dec
inc
lahf
adc
pop
and
rcrb
out
dec
jo
push
fistl
cli
jne
arpl
mov
scas
cltd
shlb
mov
std
aam
cld
mov
scas
rclb
dec
sub
adc
adc
sub
add
cmp
add
pushf
xchg
jecxz
sbb
inc
cmp
sub
and
iret
and
mov
xor
les
or
mov
int3
fwait
sbbl
andb
shl
shlb
push
lret
andb
mov
add
or
test
stos
push
push
cltd
mov
push
cmp
pop
mov
sahf
or
out
mov
mov
xchg
and
xchg
mov
xor
xchg
push
inc
inc
clc
inc
jo
loope
xor
push
sub
pusha
add
divb
jno
xor
xor
and
lods
add
in
ljmp
pop
sub
cwtl
clc
sbbl
fsub
call
sub
cld
jl
jp
js
push
aaa
fidivrs
insb
int3
xchg
aad
sbb
pop
adc
aad
jne
mov
pop
int
out
out
cli
adc
add
or
aaa
dec
outsl
mov
adc
sysexit
jge
leave
xor
jns
imul
pop
pop
sbb
rcrl
sti
fisttpl
jb
and
sub
xchg
push
in
mov
out
or
jne
in
and
ljmp
mov
push
jg
lret
pushf
rep
dec
cmp
mov
xorl
sarl
mov
jne
adc
lods
mov
add
inc
push
add
xchg
cld
jns
outsb
rolb
sbb
or
push
cmpsl
cmp
out
add
aas
in
ds
int3
fildl
std
popa
mov
or
xlat
into
add
lock
mov
imul
shrl
xor
addr16
push
push
dec
andb
xor
ffree
imul
mov
xor
negb
cmpsb
mull
xor
push
xor
ss
out
fbld
pushf
xchg
add
adc
loope
ret
mov
pop
pop
pop
jno
inc
or
test
lods
stc
es
es
jne
sub
call
popl
in
out
into
scas
mov
lea
subl
lcall
repz
add
mov
push
pusha
icebp
stc
aas
sub
mov
dec
scas
jle
inc
fcmovbe
addr16
push
hlt
mov
or
jbe
fsubs
push
enter
adc
lock
pop
sbb
mov
das
adc
dec
mov
sbb
pop
in
xor
inc
jns
aam
insl
sbbb
les
mov
and
mov
cmp
mov
sub
mov
sub
cmp
popf
ficoms
mov
pop
in
jle
sahf
mov
pop
clc
mov
add
cmp
xor
sub
sub
or
cmpsb
stos
sbb
mov
jl
xor
out
imul
imul
cltd
dec
sbb
mov
mov
out
mov
pushl
and
aaa
stos
popf
dec
mov
lcall
ret
cmp
cmp
mov
adc
adc
outsl
push
jnp
mov
adc
or
fsubl
and
fbstp
fwait
adcb
les
aaa
mov
stos
dec
loopne
jp
aam
nop
pop
mov
stc
fistl
sub
imulb
jle
fwait
adc
test
lea
sub
and
loopne
jg
lods
or
stos
pop
dec
dec
mov
push
dec
lods
mov
mov
rcr
lds
mov
fidivrl
push
pop
sub
pop
mov
sub
inc
mov
daa
popf
pop
jmp
imul
pushf
xchg
stos
cld
dec
pop
popa
in
arpl
in
dec
push
cmc
cltd
cmc
or
addr16
add
fistpll
testl
sbbl
mov
xchg
jb
ds
adc
mov
pop
ljmp
lahf
sahf
addr16
pop
es
jge
enter
sub
call
out
mov
jae
add
push
push
push
icebp
inc
loopne
jecxz
sub
aaa
lcall
nop
je
dec
shl
cmp
scas
test
inc
sub
sti
inc
lret
out
rorl
jge
mov
add
adc
aas
mov
notl
cwtl
add
adc
popa
inc
enter
stos
and
mov
nop
jle
jecxz
je
or
movsb
dec
repz
loope
enter
leave
and
dec
das
and
jl
pop
jo
mov
adc
bound
pop
ja
mov
pop
push
sbb
cld
mov
mov
add
adc
jo
push
push
mov
arpl
gs
bound
aas
pop
sbb
sub
inc
aam
mov
loop
sub
mov
fistpl
mov
mov
int3
sub
es
push
mov
jns
mov
xor
icebp
icebp
mov
or
cmpsl
int3
mov
sub
dec
cmp
in
icebp
into
mull
sub
pop
pop
in
int3
mov
lcall
sub
roll
inc
cld
inc
je
mov
xchg
mov
dec
push
add
or
xlat
pushf
mov
enter
cmp
adc
push
cld
loope
and
pushf
out
push
call
into
dec
insb
add
inc
fcomip
push
inc
cmp
mov
test
fwait
xor
pop
hlt
fs
dec
jns
loope
jnp
add
sub
jg,pt
repz
xor
mov
inc
fidivrs
inc
popa
push
push
gs
daa
or
mov
jmp
add
test
xchg
dec
and
loop
or
dec
mov
daa
sub
mov
adc
pop
xor
loop
int
addr16
scas
mov
jge
mov
mov
add
xor
subl
dec
icebp
and
sub
mov
xchg
lods
outsb
inc
data16
enter
shll
popa
dec
mov
push
mov
or
xlat
stc
test
mov
sbbb
inc
cmpsl
or
fwait
or
mov
cmp
scas
inc
or
test
imul
roll
inc
sbb
in
jmp
xchg
hlt
and
mov
dec
pop
loopne
mov
ret
or
mov
inc
sbb
pop
jnp
mov
dec
mov
imul
ljmp
add
arpl
xchg
push
repz
movsl
loop
cmc
mov
les
popf
shll
sbb
mov
pop
jbe
hlt
loope
push
das
sub
lea
sbb
movsl
cmp
lods
xchg
hlt
xlat
aad
dec
xchg
fsubs
xor
push
sub
fistpll
xlat
xchg
test
xchg
pop
mov
adc
fs
sub
cmp
xor
fs
lret
mov
mov
jbe
sahf
sub
ja
insb
sub
dec
das
sub
mov
arpl
imul
mov
das
xor
sbb
and
ds
iret
adc
cmp
mov
mov
aam
gs
insl
cmpsl
iret
push
int
mov
xorb
jbe
mov
push
aad
stc
dec
iret
lret
shll
push
imulb
lret
dec
mov
fs
out
repz
xchg
stos
xchg
fisttpll
cmpl
sub
popf
xchg
cmp
xorl
data16
sub
xchg
jl
sbb
ljmp
mov
push
jns
mov
adc
cmp
enter
stos
out
dec
mov
nop
daa
sbb
cli
cmpb
imul
push
cmpsb
mov
ja
inc
xor
in
sahf
jb
sbb
cld
or
inc
sbb
clc
sub
mov
pop
mov
les
inc
adc
xor
hlt
sub
xchg
mov
int
push
pop
hlt
jge
insl
jbe
pushf
push
ficompl
loop
lret
adc
add
fwait
lret
push
xchg
cmp
push
or
dec
add
inc
mov
dec
push
and
pop
xchg
movhps
cld
sub
mov
sub
push
cld
xorl
sbb
mov
xchg
inc
stos
inc
daa
pop
xchg
outsb
aad
or
ret
pop
aam
or
pop
aad
push
jge
pop
or
pop
inc
xchg
sub
ret
repz
adc
mov
jmp
ret
sbb
pop
imul
inc
loope
in
dec
es
popf
aam
adc
mov
imul
testl
cld
arpl
adcb
jecxz
xchg
mov
push
pop
lcall
out
lcall
cmp
jb
cmp
mov
lods
stos
xor
out
shr
cmp
mov
or
addr16
hlt
cmp
popl
jecxz
xor
mov
jns
aas
lahf
test
add
lahf
cld
clc
je
push
mov
lcall
push
push
bound
sbb
stos
jg
and
sub
push
in
pop
shrl
jmp
inc
sub
in
jne
inc
adc
fistps
mov
mov
cs
pop
les
pop
arpl
loope
nop
int3
cmc
push
jae
pop
mov
push
es
xchg
aas
icebp
add
ret
mov
jae
insl
lahf
negb
fsubl
test
dec
cmp
out
aam
loope
ficoms
jl
sub
adcl
stos
mov
daa
insl
lahf
mov
xchg
test
sub
pop
pop
lahf
jl
cmp
jle
hlt
insl
ljmp
jne
mov
xchg
vcomisd
insb
jl
stc
push
mov
sbb
test
sbb
movb
jno
push
or
and
dec
clc
or
loope
jnp
adc
inc
adc
inc
cld
insb
adc
pusha
cmp
sbb
jecxz
xor
test
push
popa
adc
fdivr
and
fadds
xor
jns
fldenv
pop
mov
aad
or
lret
xor
repz
or
mov
imul
xchg
jmp
mov
mov
adc
pop
jmp
lods
mov
repnz
popf
mov
sbb
lahf
out
mov
fists
pusha
cs
xchg
fmull
stc
pop
xor
jns
in
add
adc
inc
out
int
cld
lock
test
inc
dec
insl
mov
mov
mov
dec
mov
mov
rcl
and
inc
ret
testl
repnz
cs
roll
push
nop
mov
loope
je
pop
scas
popa
sub
adc
inc
push
scas
jo
and
cmp
stos
jl
jb
jmpw
xchg
lret
das
add
dec
cmp
scas
cmp
or
das
adc
push
push
mov
sub
xchg
nop
adc
xchg
push
push
lock
sub
jecxz
mov
and
pop
dec
ret
push
cmp
push
mov
jmp
dec
jne
or
mov
xchg
je
adc
adc
mov
xchg
outsl
fs
divl
std
adc
adc
push
mov
jge
mov
dec
leave
mov
xchg
lret
jg
adc
push
xchg
mov
xor
int3
and
mov
inc
cwtl
out
jmp
xor
int3
clc
jle
fisttpll
movsl
pop
ret
dec
inc
cld
out
aam
xor
pop
enter
mov
test
push
sahf
mov
push
xchg
ljmp
cmpl
divb
cmpl
adc
sbb
mov
jne
loope
cmpsb
lahf
add
mov
sub
test
sub
call
jo
fidivrs
lcall
push
jg
mov
dec
add
add
ret
imul
loop
imul
cld
push
jb,pn
mov
popf
push
clc
sub
xor
and
call
and
mov
idivb
sahf
das
fnstcw
push
jl
dec
lods
push
xor
xlat
add
stos
gs
fs
loopne
sub
dec
mov
ja
add
mov
add
pop
mov
int
or
stc
pop
ja
subb
xchg
sub
rolb
xchg
cmp
sub
xor
popf
xchg
inc
out
or
lds
xchg
adc
iret
mov
int3
pop
pop
cmpsl
imul
and
inc
xor
int3
outsl
push
mov
testl
mov
das
push
pop
outsb
jmp
cmpsl
insb
adc
add
data16
ret
pusha
sbb
sub
loopne
xchg
in
loop
das
mov
push
dec
push
shrl
and
test
std
in
push
cmp
test
aad
mov
adc
sub
jg
stos
shrl
das
divb
stos
aaa
xchg
adc
sbb
out
ficoms
cmp
rorl
xchg
push
add
scas
out
mov
ficoms
cmp
dec
shl
loope
stc
push
ds
lods
aas
sti
loope
fwait
xchg
jne
dec
push
adc
inc
repz
bound
sub
int3
call
add
inc
xlat
inc
jae
cmp
xor
nop
aad
xor
adc
mov
pop
repnz
sub
push
xorb
pusha
xor
fstpl
lcall
xchg
ficompl
pop
not
shlb
jl
or
fs
xor
enter
sti
dec
outsl
test
dec
std
outsl
lock
push
mov
mov
adc
in
mov
imul
mov
push
fwait
les
out
scas
sub
cmpsb
dec
iret
mov
cmpb
cmp
mov
jae
fneni(8087
sbb
stos
arpl
xchg
jo
dec
call
sarb
mov
out
in
rolb
adc
addr16
cwtl
jnp
push
mov
imulb
adc
cmp
mov
aad
stos
jo
in
xchg
ja
xchg
shll
imul
in
pop
out
shlb
loopne
iret
or
jnp
adc
adc
dec
fisubs
cli
insl
sub
outsl
out
push
cmp
mov
popa
add
mov
xlat
cmpsl
mov
xor
in
call
sbb
into
jne
sbb
test
sti
adc
lret
and
cwtl
pop
cmp
das
pop
in
adc
sarb
mov
mov
mov
imul
xorb
mov
dec
js
rolb
mov
lcall
ja
dec
adc
sahf
add
lds
jne
insb
loope
jp
dec
shl
lods
mov
mov
scas
xchg
clc
inc
js
mov
fimull
mov
idivb
mov
out
lcall
sbb
mov
dec
idivb
sarb
dec
xchg
lock
xchg
sahf
push
fistpll
lahf
cmp
add
ja
fnsave
pushf
inc
or
popa
xchg
push
adc
fwait
movsl
sbb
mov
rclb
xor
out
sub
pop
add
pop
mov
jae
ja
out
add
mov
in
repnz
pop
dec
adc
sbb
xchg
xor
and
mov
cmp
xchg
push
stos
push
lret
add
push
cli
and
add
lea
mov
push
cli
lahf
pop
sub
pop
mov
mov
mov
or
sub
xchg
or
pop
pop
inc
or
gs
mov
mov
inc
inc
push
lahf
movsl
adc
and
mov
aad
mov
es
negl
jbe
aas
dec
addr16
mov
into
js
fsubr
sub
mov
mov
sub
xor
mov
out
out
rorb
xchg
mov
pusha
inc
mov
pop
mov
test
fadds
dec
mov
mov
xchg
adc
nop
sbb
mov
dec
mov
roll
int
js
rorb
jp
push
out
cmpsb
cltd
popa
push
jb
dec
sub
push
test
outsl
gs
roll
or
popf
vaddsd
inc
jp
sub
adc
push
mov
movsb
inc
test
dec
mov
jle
pop
repz
std
cmp
cld
cld
mov
scas
or
jge
psubq
jne
loopne
sub
mov
fiaddl
jns
rcrb
lds
dec
cli
mov
int3
lahf
shll
pop
arpl
inc
add
aam
add
mov
add
pushf
repnz
fsubs
mov
push
pop
outsb
pop
jb
cmpsl
push
stos
add
mov
jns
jge
mov
jae
hlt
ja
cmpsl
adc
adc
in
mov
pop
mov
push
fs
or
push
fwait
pushf
sub
in
shrb
sub
arpl
xor
inc
mov
pusha
cli
pusha
sbb
into
ficomps
pushf
mov
xor
push
fildll
xchg
rcrb
inc
fisubrl
test
push
cld
pop
adcl
ja
sub
subb
jg
or
rcl
mov
nop
in
jo
mov
daa
inc
inc
sub
pop
xchg
test
in
xor
and
cmpb
out
xor
sub
in
sub
shll
jo
mov
cmpsl
push
push
fstp
into
das
out
pop
lea
pop
std
shrl
or
sahf
push
mov
jae
adc
cmp
jg
adc
inc
call
mov
outsl
pop
sbb
cmp
cli
sahf
add
inc
dec
fmull
mov
lock
pop
je
test
xor
fdiv
ja
lcall
pop
arpl
adc
jecxz
imul
sahf
js
mov
mov
push
into
loope
cmp
dec
add
pop
push
xor
lds
mov
hlt
xchg
sub
xor
cmp
ss
enter
cmp
adc
test
in
or
call
fimuls
stos
inc
mov
js
cmp
mov
dec
pop
fidivl
push
xchg
inc
addr16
dec
hlt
sahf
test
jmp
sarb
clc
mov
cmp
fistl
xlat
jne
shrl
push
js
out
je
cmc
lods
popf
pop
out
mov
jle
pusha
arpl
out
jecxz
jae
in
into
jo
mov
pop
fidivrl
lods
repz
pushf
mov
pop
lret
cmp
repz
fisubs
adc
mov
xchg
movsl
mov
shll
in
sub
fnstsw
pop
jle
xchg
out
sub
test
dec
jmp
xchg
movsl
popa
mov
loop
jle
xchg
gs
fisubrl
nop
xchg
scas
sbb
pop
lcall
sbbl
mov
push
pusha
jne
sbb
cld
jl
mov
push
sub
and
int
push
loope
xor
mov
out
pushf
stc
aam
ror
hlt
loopne
addr16
test
mov
and
add
mov
mov
fmull
add
push
dec
xchg
mov
pusha
and
dec
les
cmp
int
pop
test
ljmp
jmp
jl
enter
lods
mov
sub
arpl
aam
cld
jl
mov
push
pusha
mov
pushf
xor
addr16
inc
bound
in
stos
ret
addr16
aad
mov
mul
push
cmp
or
xor
or
test
in
call
push
hlt
mov
addr16
lods
jmp
push
leave
xchg
sbb
cld
mov
dec
and
adc
sub
imul
insb
out
nop
lret
daa
sub
outsb
imul
lea
movsb
and
lea
cmc
mov
stos
mov
xlat
xor
mov
add
pop
xorb
repnz
into
into
sbb
or
adc
jge
stc
inc
inc
into
in
bound
dec
hlt
inc
cli
call
ret
repz
and
mov
xchg
dec
pop
mul
jecxz
xor
xor
lods
stos
xor
pusha
inc
jg
test
adc
mov
outsb
cs
add
pop
pushf
jl
add
je
jnp
out
push
addr16
gs
repnz
pop
add
sbb
xor
dec
loopne
cmp
and
adcl
fcomi
loope
jg
mov
jmp
push
push
and
mov
dec
jno
hlt
in
jne
dec
call
mov
sarl
popa
inc
in
movsl
xchg
movsb
or
jmp
loope
push
xor
add
lds
adc
cmp
cmpsl
sbb
test
adc
fs
inc
cmp
hlt
loopne
lock
mov
and
lods
imul
push
mov
lock
lret
sbb
and
jne
push
xor
aam
inc
xor
out
xor
mov
push
and
pushf
mov
mov
cmp
repz
pushf
jbe
jg
push
add
cs
mov
jmp
sbb
in
mov
imul
mov
lock
jns
xchg
xlat
and
add
jmp
sub
sub
loope
xchg
lret
lcall
jns
dec
pop
into
sbb
push
mov
mov
movsl
push
cwtl
pop
mov
mov
adc
outsb
fwait
ljmp
or
int3
sub
and
sbb
cwtl
mov
enter
and
cmpsb
sub
loope
inc
mov
inc
mov
test
sbb
sarb
and
in
sarl
push
and
jge
jp
mov
rcl
dec
xchg
add
sub
or
scas
fsubl
mov
scas
lahf
stos
leave
inc
lret
int
cli
fwait
sub
jmp
pop
les
movsb
push
xorl
daa
ret
pop
jns
scas
xchg
aad
mov
cmp
int3
adc
sub
pop
mov
dec
sbb
xor
fisubs
dec
in
jns
scas
push
jno
push
sbb
pop
fnsave
pop
popf
inc
add
or
push
out
stos
adc
pop
add
fnstsw
pop
int3
or
fbld
movsl
add
out
xchg
sahf
in
popa
adc
inc
cmp
out
and
xchg
inc
cmp
test
jmp
mov
in
dec
xor
pop
mov
mov
xor
mov
incb
sbb
mov
and
dec
add
popw
pop
sbb
lock
jae
jns
aam
mov
fwait
fwait
xor
ficompl
mov
stos
xchg
mov
jne
out
outsl
mov
push
push
jecxz
push
sub
fistl
daa
add
lods
and
mov
aad
push
into
jno
rcl
lahf
leave
mov
push
pop
mov
cmp
xchg
push
or
jne
pop
movb
hlt
inc
jno
loopne
mov
repnz
repnz
enter
icebp
mov
fsubs
std
test
dec
aaa
mov
addl
adc
stc
adc
and
add
xchg
cmp
fcmovnbe
addr16
je
das
sbb
shrl
out
inc
inc
insb
or
cltd
lahf
jb
loop
clc
out
icebp
adc
fs
cld
xchg
roll
in
test
fildl
mov
cli
jg
sbb
xchg
outsl
jns
daa
push
mov
xchg
and
cmc
mov
cmc
xchg
iret
push
cs
jmp
mov
aam
inc
cli
stos
addb
jp
mov
inc
pop
push
xchg
add
ljmp
inc
dec
push
push
mov
cmp
push
xchg
xchg
add
pop
fstl
movsl
sbb
or
xor
inc
xchg
filds
xor
xchg
cltd
lret
rcll
clc
daa
lods
sbb
fistl
pop
and
in
mov
in
jmp
sar
add
shl
je
mov
mov
mov
mov
rcrl
xor
mov
cmp
xchg
pop
icebp
jns
popa
push
add
repz
push
sub
sbb
mov
movsl
or
in
fldcw
adc
nop
dec
enter
stos
cmp
xrelease
jg
fistpll
jnp
inc
jne
mov
mov
mov
and
add
cmpsb
je
mov
hlt
cli
fmull
incb
scas
imul
jnp
clc
or
jns
stc
in
adc
insl
or
jb
adc
pop
sbb
mov
stc
dec
ret
clc
cwtl
xchg
adc
mov
push
test
jb
lds
push
ficoms
or
dec
lahf
mov
stos
or
mov
inc
das
cmp
add
sbb
push
or
cmp
mov
and
aas
pop
into
cmp
add
push
add
mov
cmp
push
sub
fiaddl
pop
ja
sbbl
iret
sti
jo
notb
adc
xor
shlb
test
adc
push
and
inc
inc
loopne
pop
mov
cmp
dec
rclb
roll
cwtl
xor
cmp
fadds
xchg
cmp
push
pop
movsb
lea
inc
enter
cmpb
sub
rcr
sahf
lea
xchg
push
xchg
mov
movsl
aam
lahf
mov
cwtl
cmp
cmp
mov
xchg
ja
ret
mov
and
cmc
rcl
xchg
arpl
dec
mov
jae
adc
js
lahf
inc
les
xor
sub
lds
leave
pop
cltd
ljmp
mov
adc
add
loop
imul
cmpsb
in
or
in
xchg
lock
pop
or
adc
mov
xor
pusha
cmpl
dec
aaa
or
jmp
cmp
pop
mov
scas
cmp
xchg
lahf
into
pop
push
or
cmp
out
pop
adc
cwtl
adc
mov
sbb
jns
rclb
xor
in
xchg
mov
jb
dec
add
in
ud0
mov
fnstsw
push
push
lahf
and
dec
cmp
pop
mov
dec
add
lret
dec
pop
lock
cmc
inc
mov
repnz
cmp
aaa
aad
fcoml
aam
outsl
lds
lret
sbb
lret
sub
cmp
pop
xor
lahf
pop
and
jne
add
lock
iret
sbb
push
xor
pop
add
cwtl
push
mov
into
add
xlat
lahf
aas
dec
mov
cltd
insl
lds
popa
xor
xchg
lahf
pushf
imul
shlb
push
inc
je
mov
int
pop
popa
int3
mov
bound
xchg
in
mov
cmp
lahf
fs
push
scas
ss
and
inc
gs
and
and
ds
add
bound
js
push
xor
pop
dec
push
xchg
inc
mov
pop
add
call
push
in
pop
int
je
cmp
jns
hlt
mov
xchg
adc
push
into
mov
sub
jmp
pop
xchg
sub
cmp
call
jne
popf
cmp
xchg
addl
dec
and
cli
fdivl
clc
add
mov
sub
out
je
lcall
sti
das
jb
adc
lret
aaa
inc
mov
out
jmp
mov
ds
sti
sub
rcrb
xchg
pop
cmp
xchg
sub
movsl
repnz
mov
cmc
pop
mov
test
sbb
jecxz
mov
jae
or
or
jecxz
xchg
hlt
and
mov
jmp
adc
lcall
int3
pop
push
sub
je
test
es
jne
lret
sbb
push
xorl
fnstsw
dec
and
lea
xchg
ja
inc
scas
nop
xor
push
mov
inc
repnz
lods
mov
fcmovbe
std
adc
icebp
or
and
daa
sbb
jp
ss
or
in
mov
add
sub
cli
jno
inc
adc
mov
jle
mov
test
ret
jae,pn
mov
repnz
fcmovnbe
mov
int
cmpsl
negb
mov
xchg
flds
push
add
lret
mov
cmpsl
fwait
dec
roll
lock
inc
popf
adc
outsb
enter
insb
movsb
insl
xchg
sbb
jns,pt
shr
mov
jge
push
inc
aad
loopne
add
cmpsl
sbb
addl
loope
xchg
xor
bnd
fdecstp
inc
gs
sub
loop
sbb
arpl
push
mov
lret
mov
je
push
test
xchg
xchg
or
lock
shll
push
aas
jb,pt
xorl
insl
add
xor
idivl
inc
mov
mov
push
jg
add
mov
push
ror
cltd
mov
gs
mov
lods
iret
imul
daa
jmp
pop
or
pusha
mov
jmp
dec
enter
cmpsb
nop
mov
adc
std
stos
jmp
fnclex
jecxz
push
dec
pop
push
lcall
sbb
fsubs
mov
jae
push
pop
inc
push
push
fdiv
fs
cmp
jge
je
repz
xor
lret
jbe
insb
sbb
rcr
mov
adc
pusha
mov
jecxz
in
pushl
mov
push
jp
vmwrite
xor
test
add
cli
out
or
xor
int3
xlat
xchg
jbe
dec
add
loope
aam
add
mov
fildll
inc
movd
mov
dec
lock
jl
dec
imul
fisttpl
insb
or
dec
mov
xor
jo
addr16
in
out
icebp
int
dec
lret
ficomps
and
inc
mov
dec
fcoms
dec
mov
pop
das
fnsave
loop
dec
jb
dec
and
push
movsb
scas
xchg
movsl
jno
aas
shll
inc
mov
idivl
mov
mov
test
mov
aas
les
push
inc
cmpsl
xor
stos
out
dec
repnz
push
mov
and
mov
push
out
or
mov
mov
fwait
insl
adcb
popf
imul
cmpsb
push
mov
sub
sahf
lret
out
fdivs
sub
inc
xor
ljmp
xchg
int3
mov
mov
fisubl
add
call
jl
test
jmp
loopne
sbb
sahf
ss
and
and
mov
xchg
jne
popf
mov
sbb
add
mov
fxch
xor
test
push
loop
fldl
jo
mov
push
sbb
and
push
mov
dec
and
cmp
push
dec
bound
popa
dec
xchg
hlt
push
jne
jae
sti
sti
cltd
dec
mov
jp
das
mov
mov
fs
lcall
nop
test
dec
adc
xchg
xchg
or
xchg
push
imul
adc
imul
loope
jmp
sbb
jbe
and
cmp
stos
into
ds
inc
cmc
mov
jle
cmc
mov
xor
fiaddl
mov
daa
imul
fcmovb
cmp
lret
or
add
repnz
das
push
dec
daa
out
or
mov
int
int
inc
in
rol
mov
pop
xchg
jg
mov
flds
in
inc
cld
or
fists
add
xor
into
insb
add
fldl2e
rcr
add
mov
xor
sbb
add
mov
shlb
inc
lahf
pop
mov
sub
fldt
xchg
cmpsl
popf
jae
aas
push
subl
outsl
scas
fxch
out
push
outsl
mov
or
inc
int
in
int3
and
jne
inc
cltd
jns
bound
xchg
add
shrl
push
cmp
test
dec
mov
xlat
or
pop
jmp
loopne
das
and
mov
popw
lret
rcl
icebp
ret
mov
cmpsl
int3
je
ja
sbb
pop
out
cmp
push
repz
aas
movsl
push
xchg
movsb
sti
mov
push
push
jle
adc
ret
rorb
adc
fwait
pop
cmp
out
lods
fwait
lods
hlt
mov
int
ret
or
mov
loopne
leave
and
lea
jne
jp
jns
iret
jg
and
pop
and
sub
add
push
fstpt
cmc
out
outsb
mov
xor
nop
das
out
popf
scas
push
out
xor
sbb
jne
dec
in
adc
jge
cmp
movsb
dec
fidivrs
ret
add
push
jmp
into
adc
mov
push
je
fwait
cli
aad
arpl
xchg
movsb
pop
inc
pop
repnz
sub
dec
nop
sti
cmp
lock
jo
fs
inc
mov
pop
stos
test
cwtl
cli
add
push
mov
lea
mov
mov
pop
jp
inc
fidivl
test
mov
test
mov
lods
cs
push
adc
jp
mov
sub
das
add
pop
push
lds
sub
and
cltd
leave
xchg
into
fiaddl
jno
add
les
stos
push
scas
push
jne
hlt
flds
pop
push
in
inc
in
outsl
lcall
push
mov
hlt
clc
jmp
sbb
sbb
test
jl
jae
or
test
mov
sti
pop
xchg
sub
xor
push
jp
push
sub
xchg
sbb
jle
push
pop
or
xor
jmp
push
loop
stos
imul
cmp
cltd
notb
ret
insb
das
ret
inc
scas
jp
sbb
insb
xor
mov
aas
adc
sbb
pop
movsb
dec
add
pop
ja
xchg
cmp
sub
adc
and
roll
mov
sti
dec
add
divb
adc
scas
fs
cmc
xchg
mov
and
fisubl
sahf
xor
mov
sub
or
ja
mov
and
mov
adc
stos
into
xchg
inc
hlt
test
insb
fldt
push
lret
mov
push
mov
gs
fcompl
dec
push
sbb
out
aam
hlt
cmc
lahf
inc
test
jb
adc
fldcw
arpl
cmp
add
xor
push
outsl
adc
lods
icebp
pop
xlat
xchg
or
mov
ret
adc
jl
movsl
aas
mov
adc
cwtl
dec
or
aad
jle
insb
cmp
cld
iret
addr16
push
dec
in
sbb
cmpsl
adc
xor
sbb
daa
jne
out
enter
mov
push
xor
hlt
dec
or
adc
inc
fcomps
mov
mov
push
mov
and
xor
jecxz
cltd
roll
jb
sar
push
cmp
je
out
loopne
and
stc
add
mov
pop
jae
ret
pop
ds
std
pushf
pop
js
jbe
cmp
dec
insb
pop
cmp
daa
and
or
out
add
in
cli
lret
popa
sbb
mov
bound
xchg
xchg
aad
xchg
das
mov
jecxz
add
lahf
dec
out
xor
lret
int
sub
int3
hlt
sbb
mov
or
xlat
push
adc
fbstp
jmp
dec
push
outsl
adc
sub
les
mov
push
jbe
sub
scas
or
repz
out
lds
dec
mov
outsb
lods
jae
subl
dec
loopne
xchg
in
push
into
pop
xchg
xchg
fistpll
jbe
push
shll
clc
sbb
testb
pop
test
movb
cmp
mov
add
push
enter
movsb
adc
cli
jmp
orl
cmc
xchg
mov
pop
loop
into
sub
pop
add
cmpsl
sub
mov
out
push
ret
loope
cmp
fcomps
mov
or
sub
sub
cmpsl
arpl
fdivrs
adc
rclb
lods
add
mov
ret
mov
dec
mov
jno
ljmp
in
jno
leave
sahf
test
inc
jp
scas
add
sbb
in
xlat
mov
das
mov
cmpb
btr
std
mov
inc
sti
xorb
fs
mov
and
xor
push
inc
int
xor
xchg
stos
imul
ret
push
jae
adc
mov
lea
xor
and
fisubrl
push
jecxz
mov
outsb
aam
mov
push
pop
pop
popa
jge
lds
dec
fwait
das
mov
in
inc
stos
sbb
inc
es
ss
movsb
mov
ljmp
cmp
jne
push
sbb
je
push
cli
lods
sbb
js
ja
mov
inc
sub
add
jnp
daa
es
jl
jl
pop
aas
xchg
test
add
mov
pop
call
adcb
and
or
das
dec
gs
pop
pop
pop
fs
das
xor
jno
cld
xchg
adc
sbb
xorl
jle
aas
je
sub
adc
add
pop
xor
jns
xorb
xchg
push
mov
cmp
dec
rcll
jecxz
dec
dec
loope
sbb
and
movsb
movb
jne,pt
sti
add
jb
pop
hlt
dec
adc
lret
and
jns
out
mov
sbb
mov
cli
stc
and
mov
sar
push
pop
leave
sbb
push
xor
cmpsl
cld
sub
adc
pop
pusha
mov
in
ljmp
jl
pusha
test
lahf
push
leave
test
xlat
fnsave
jnp
leave
adc
adc
push
xchg
rcrb
mov
inc
adc
rolb
and
jo
rorl
mov
pop
es
stc
aaa
jmp
or
cmc
pop
sbb
jbe
scas
repz
aaa
adc
push
or
cltd
repnz
mov
xchg
push
xchg
loopne
mov
sub
or
cmpsb
stos
fimuls
mov
jecxz
add
mov
or
push
mov
pop
pop
or
test
sbb
dec
mov
push
aam
mov
lcall
mov
jmp
lods
sub
sub
inc
stos
lds
xor
add
aam
mov
shll
sub
lods
jnp
push
add
jnp
pop
inc
push
mov
flds
dec
push
jbe
cmp
adc
or
inc
xor
xchg
mov
jne
popa
dec
pop
scas
pop
pop
negl
sub
or
jno
fsub
bound
jg
js
gs
adc
clc
and
cmp
int3
lea
xor
mov
dec
adc
dec
xchg
dec
mov
adc
push
out
lahf
mov
push
aad
pop
ret
aad
aas
repnz
jmp
mov
cmp
out
add
mov
xchg
pusha
fwait
sbbb
notb
push
push
mov
push
push
clc
mov
mov
sub
pusha
lahf
fdivl
nop
xor
out
pushf
addr16
adc
jno
add
pop
xchg
outsl
mov
mov
mov
loopne
cld
andps
jge
push
mov
push
add
mov
ss
out
daa
repz
fs
popf
dec
ret
lods
rolb
xchg
sahf
es
jnp
bound
clc
shll
cmpsl
mov
sub
push
movsl
fcomi
mov
in
jne
add
push
cmp
jno
sbb
xchg
push
adc
push
into
popf
pop
inc
or
add
dec
cmpsl
xchg
test
jp
xchg
push
mov
cmpsl
test
sarl
cltd
xchg
xchg
aad
in
sub
push
mov
sbb
arpl
arpl
xchg
or
lods
push
popa
cmp
and
sbb
iret
sub
data16
xchg
pop
int
sub
xchg
push
and
mov
inc
outsl
mov
lret
adcb
inc
cli
ja
jns
push
mov
aam
inc
in
xchg
mov
rclb
bound
andb
and
addr16
mov
pop
shl
notl
das
roll
jmp
cmp
ss
into
fadds
test
cmp
mov
jae
sti
mov
push
ja
pop
gs
adc
and
jge
pushf
shl
dec
sub
xor
cli
pusha
data16
hlt
scas
movsb
push
stos
out
or
adc
or
lret
cltd
iret
arpl
sarb
insl
sbb
in
or
push
and
fmul
cmc
push
mov
imul
adc
push
aaa
enter
push
out
inc
pusha
mov
out
fistps
outsb
push
pop
setl
or
aas
out
sub
cmpsl
insl
inc
cli
xchg
push
cld
addr16
cld
inc
orl
ret
dec
pop
mov
fcmovb
jl
and
insb
cmp
call
dec
jne
rol
inc
push
das
loopne
dec
pop
shrl
aas
xchg
mov
mov
adc
popa
pushf
jo
lahf
sbbl
dec
xor
pop
notl
ja
jg
lcall
push
ret
mov
je
loopne
pushf
in
push
push
xchg
mov
mov
mov
aad
fbstp
out
add
and
cmp
push
sub
dec
subw
pop
iret
pop
std
adc
mov
int3
rolb
test
mov
mov
mov
xchg
mov
cmp
xchg
into
rolb
mov
stos
je
lahf
inc
mov
sub
xchg
sub
insb
test
push
xchg
loope
movsb
out
or
or
rorl
jo
test
xlat
mov
inc
add
add
sarb
enter
mov
sub
mov
fstl
or
into
or
and
fsubs
jl
clc
push
mov
and
xor
fistps
maskmovq
notl
push
xchg
lods
mov
enter
fwait
mov
sti
add
cs
mov
xchg
mov
into
lds
xor
lock
xchg
xlat
outsb
mov
inc
fs
fldt
lahf
jmp
ds
dec
xor
mov
push
add
mov
mov
xchg
mov
push
and
adc
flds
pop
xchg
cmc
dec
sarl
dec
sub
pop
inc
das
test
into
add
adc
push
iret
and
fnstcw
mov
dec
sub
pushf
sbb
push
dec
out
add
xor
or
push
dec
in
push
jno
loopne
push
jae
mov
lret
cli
mov
lret
aaa
or
dec
or
mov
das
inc
fildll
push
pop
mov
mov
popa
out
pop
scas
inc
std
mov
fistl
mov
adc
es
xchg
xchg
xchg
jno
out
dec
loopne
js
sub
mov
js
xor
or
add
push
mov
xor
xor
mov
add
rcrb
xlat
jns
std
leave
sub
push
jle
scas
je
es
addb
frstor
aaa
push
mov
push
in
pop
pop
stos
movsl
mov
mov
jno
push
push
or
jl
xchg
test
idiv
push
fdivrl
cmp
xchg
int3
and
rcll
xor
in
out
data16
in
fs
sbb
flds
jns
mov
das
push
sarl
loope
pop
in
xor
addr16
push
xchg
cmpsl
pop
pop
pop
dec
arpl
sub
sahf
jb
test
inc
jb
mov
es
les
sbb
stos
push
dec
mov
test
xlat
xchg
test
add
ss
movsl
idiv
stos
adc
push
dec
xor
lods
mov
add
jle
xor
xchg
fcoms
subl
add
aas
pop
aaa
sbb
ja
idivb
rol
add
mov
ret
jne
mov
mov
cmp
call
mov
jge
call
btrl
cmpsl
cwtl
repz
jne
cmp
mov
outsb
dec
push
inc
ret
andb
mov
fsts
lods
cmp
sbb
mov
stos
adc
movsb
and
cmp
lret
stc
rol
xchg
insb
fisttpl
mov
movsbl
jg
aas
mov
and
push
adc
mov
xchg
stos
push
cmpsb
inc
pop
jl
stos
mov
add
pop
cli
mull
ficomps
sahf
inc
ds
fst
fnsave
and
dec
mov
mov
inc
and
xchg
push
xchg
lock
mov
add
into
dec
test
loopne
das
mov
sarl
movsb
cmp
mov
aad
pusha
pop
imul
bound
lods
pop
js
xorl
cs
out
lret
or
jle
fnstcw
je
lock
aad
adc
out
xor
xchg
dec
arpl
shrb
lds
aas
mov
loop
stc
les
cmc
iret
sub
mov
and
movsb
enter
push
or
popa
mov
mov
xor
cmp
enter
out
lods
and
iret
sbb
or
jo
into
push
inc
sarl
mov
and
rcll
mov
push
orl
lds
movsl
xchg
loopne
pusha
ret
lods
mov
sbb
frstor
arpl
xor
popa
aad
add
fwait
inc
shll
pop
inc
sarl
sbb
das
scas
fiaddl
sub
inc
mov
mov
jb
inc
nop
ret
aas
aas
or
pop
mov
je
pop
and
popa
int3
out
inc
loop
rolb
push
jb
mov
add
dec
xchg
inc
jmp
xchg
hlt
and
add
sbb
push
flds
cmc
xchg
arpl
ror
mov
roll
mov
rolb
xor
sbb
outsb
add
lds
mov
fcmovu
mov
in
in
inc
push
xor
mov
insl
add
sub
jecxz
pop
jbe
insb
popa
push
inc
lods
test
add
and
sub
out
fcmovnb
jno
jp
mov
cmpsb
mov
dec
cli
sub
out
loop
rcrl
push
push
xchg
movb
dec
notb
push
lds
insb
cmp
mov
jp
push
mov
cli
jle
clc
jp
add
sbb
ds
add
scas
sbb
mov
cltd
push
fstpl
cmp
jl
or
test
mov
testl
push
adc
xor
nop
movsl
jne
scas
outsl
pop
dec
inc
pop
xor
sbb
mov
in
inc
stos
inc
push
outsb
fcompl
jmp
xor
push
lds
aas
sbb
into
adc
movsb
lret
fs
mov
daa
xor
pop
insl
jns
test
dec
xor
icebp
sbbb
push
iret
inc
xlat
outsb
dec
mov
mov
and
xchg
nop
cld
fldenv
inc
mov
mov
cld
jmp
xchg
lret
jle
inc
in
rolb
dec
mov
mov
les
cwtl
add
je
shrl
in
push
ss
pop
xchg
test
mov
fnstenv
pop
cld
xchg
cmpsb
cmp
popf
shl
fs
cmp
jmp
mov
jne
pusha
mov
data16
and
mov
adc
xor
adc
cmpb
int
cmpsl
mov
xchg
push
cwtl
in
aaa
ljmp
push
lret
ljmp
xor
fidivrl
cmp
aam
dec
fcomip
push
sbb
stc
xor
ret
cmpsb
pop
cli
dec
loopne
lds
lods
imul
dec
sub
sbb
jp
aam
test
out
jge
mov
pop
pop
inc
sub
push
bound
gs
lret
push
cmp
insb
sub
in
and
or
ret
add
and
aad
push
cwtl
sub
sbb
ja
ret
jo
or
push
adc
inc
cwtl
jbe
in
dec
dec
mov
stos
cli
jg
add
ds
dec
cs
fwait
jae
jp
dec
insb
xchg
stos
xor
mov
push
lock
pop
insb
mov
add
mov
lret
je
subl
cltd
notb
inc
sub
mov
xor
xchg
popl
les
lret
arpl
out
xchg
pusha
rclb
movsb
js
cwtl
mov
sbb
xchg
enter
cmp
mov
ffreep
cs
push
fldl
dec
insb
jp
gs
out
fiadds
lahf
pop
fisubrs
je
or
iret
js
and
pop
jp
nop
negb
jbe
mov
mov
mov
mov
lock
mull
andl
cltd
adc
xor
idiv
xchg
cltd
fiaddl
subl
mov
cmp
xchg
ljmp
mov
or
xchg
scas
int
les
mov
int
jbe
pop
popa
xchg
inc
cmp
mov
pop
adc
mov
popl
mov
arpl
dec
lahf
aam
rcll
add
movsl
mov
pop
leave
mov
pusha
sbb
aad
fdivrp
mov
scas
push
xor
test
pop
frstor
rolb
cmp
xchg
cmp
in
inc
xor
negl
lret
subb
sarb
lds
sub
sbb
insl
movsl
pop
add
cwtl
and
adc
dec
cmp
movsb
mov
mov
daa
rolb
pop
jno
incl
xchg
imul
and
push
xchg
fs
pop
sbb
xchg
push
sub
adc
push
mov
imul
inc
add
negl
jb
jecxz
das
or
cmpsb
rcr
cmp
xchg
mov
cmp
adc
in
shrb
popf
xchg
adcb
push
sub
insb
fdivs
pop
rcrb
test
adc
add
pop
ds
call
sar
cltd
inc
lahf
xor
sarb
sub
sarl
scas
je
rol
mov
xor
pop
sbb
mov
out
push
or
in
mov
loop
lea
cmp
or
fcmovnb
call
aaa
setbe
loopne
xchg
adc
sti
or
ds
mov
movhps
sahf
in
les
in
sarb
dec
add
jnp
jmp
mov
clc
call
mov
push
int
cmpsl
and
cmpsl
sub
int
das
cmp
push
ret
jne
dec
jp
lea
adc
loope
imul
mov
xor
mov
out
sbb
repz
in
cwtl
incl
cmp
rcll
jnp
jge
int3
sbb
test
leave
or
std
gs
int3
cmp
ret
inc
mov
xor
jp
out
into
push
aaa
sbb
nop
sub
mov
jmp
stc
inc
scas
xchg
xor
xchg
rcll
stc
data16
jl
xchg
adc
mov
fstl
jne
leave
add
insl
test
das
sub
push
ja
jmp
add
xor
pop
sub
pushf
fs
xchg
dec
xchg
mov
mov
imul
xlat
mov
or
sbb
pop
mov
out
add
sbb
lock
or
negb
or
popa
cwtl
jmp
scas
dec
es
sbb
or
in
dec
sbb
fsubl
jecxz
push
cmp
xchg
notb
mov
lods
cmc
movsb
pushf
push
ret
push
push
popf
ss
fwait
test
fcomps
fdivp
decb
xchg
adcb
xchg
je
mov
cmpb
cmc
xchg
mov
cmp
push
and
mov
andl
mov
std
ljmp
push
fnsave
and
loop
lds
push
xchg
js
mov
sub
outsb
sbb
mov
mov
scas
jmp
pop
mov
ss
jo
push
mov
mov
and
daa
leave
mov
dec
cld
jecxz
cld
jl
dec
fcomip
push
dec
inc
cwtl
inc
test
push
cmp
cmp
pop
repnz
repnz
and
pop
enter
inc
jmp
jp
idivl
jae
mov
bswap
jbe
jns
sbb
lcall
adc
lods
add
scas
nop
outsl
push
jno
push
xlat
pop
cmp
and
xchg
cmp
inc
or
dec
mov
jnp
in
addl
out
pandn
lea
mov
into
xor
push
aaa
cmpsb
mov
imul
cmc
xchg
sbb
out
push
or
gs
pop
sub
dec
inc
data16
fistl
xchg
and
addr16
aad
movsb
xor
mov
negl
mov
out
mov
pushf
mov
pop
gs
push
cmpsb
sub
daa
jmp
fwait
push
dec
mov
xor
das
cmpb
mov
bound
adc
mov
ja
rcl
pop
outsl
cmpsb
test
out
in
mov
test
cli
inc
mov
jnp
mov
mov
or
push
dec
aad
add
shrl
or
xor
sbbl
adc
icebp
shll
sub
push
add
xor
mov
aaa
orb
sub
mov
outsb
and
mov
cmpsl
xor
subb
dec
in
jge
dec
rolb
dec
mov
pusha
aad
mov
or
imul
pop
arpl
adc
dec
jnp
flds
rdpmc
cmpsb
loop
out
loope
movsl
inc
sub
push
movsl
out
cmp
cmp
shrl
xor
jp
cmp
and
in
jg
daa
cltd
pop
xor
sub
mov
gs
or
imul
push
dec
lds
jb
or
aad
cmp
xchg
pop
push
int3
or
jmp
mov
repnz
sub
jg
mov
pop
fidivrs
ret
out
outsl
pop
mov
push
jo
mov
enter
push
xchg
mov
and
push
mov
roll
mov
sti
divb
rcll
outsl
sub
dec
lret
in
mov
adc
repz
iret
or
repnz
out
push
cli
daa
mov
test
shrb
std
xchg
push
arpl
cmpsl
and
push
dec
inc
bound
or
fcoms
xor
cltd
rclb
insb
std
loopne
sub
mov
cld
sahf
or
mov
xchg
or
add
test
mov
jnp
cmpsb
mov
inc
fidivl
mov
jo
push
int
xor
mov
or
push
dec
cli
mov
gs
jl
cmp
sahf
pop
pop
loope
scas
inc
scas
inc
add
sub
adc
enter
adc
mov
fdiv
mov
sbb
cmp
push
das
stos
sbb
or
xor
pop
notb
je
fldl
scas
test
and
push
cmp
fs
clc
mov
mov
xchg
xchg
cmpsl
jns
addl
or
ljmp
cmpsb
dec
je
aam
jbe
mov
cmpsl
adc
js
cmpsb
addr16
mov
sbb
adc
aam
or
adc
fnstcw
subl
je
int
add
mov
sub
mov
mov
pop
cli
mov
jne
xchg
mov
xor
stos
fnstsw
rcrb
scas
lods
rcr
out
out
sahf
subb
mov
inc
xchg
xchg
xchg
sbb
xor
call
inc
int3
jnp
lcall
cwtl
lods
in
mov
jmp
mov
xchg
enter
push
test
mov
daa
add
stos
cmp
jne
lods
cmp
and
mov
pop
mov
inc
ljmp
sti
out
sub
ret
pop
stc
sub
in
push
sbb
push
sarb
jb
clc
dec
xchg
add
psrad
lret
inc
sbb
fsubs
inc
sub
mov
mov
outsl
jbe
add
xor
xor
lahf
mov
leave
popf
ljmp
sbb
mov
cmp
push
je
push
jno
sub
scas
sbbl
out
push
xor
lds
pop
cvtps2pd
aas
jecxz
push
add
movsl
mov
and
gs
lretw
pop
mov
out
push
gs
jnp
jge
pop
loopne,pn
jbe
xchg
or
rcll
push
xor
push
in
loop
sub
mov
mov
xchg
sbb
out
dec
fs
xchg
lret
push
push
add
das
or
xchg
das
idivl
cmp
pop
push
adc
jne
insb
dec
rol
lock
sbb
mov
pop
pushf
test
mov
add
ficompl
daa
push
sub
lahf
push
add
inc
scas
dec
jg
jmp
cs
dec
call
mov
outsl
push
push
xor
dec
adcb
pop
xchg
pop
es
call
sti
and
pmovmskb
push
call
add
sbb
adc
dec
ret
mov
inc
in
inc
int
andb
push
stos
addr16
sbb
lcall
lods
mov
push
or
pop
cmp
or
mov
mov
mov
add
pusha
push
insl
adc
mov
scas
mov
mov
scas
cmp
repz
adc
inc
push
sub
or
call
jo
int3
in
fcoml
xor
lcall
stc
fisubrl
and
aaa
mov
insb
cwtl
jecxz
pop
into
rorb
ss
cltd
mov
je
mov
jp
sub
mov
addr16
dec
shlb
frstor
dec
cld
and
pop
test
adc
sbb
mov
sbb
clc
push
sub
add
mov
stos
and
daa
lds
outsb
filds
push
in
jno
mov
xchg
xchg
sbb
inc
mov
lret
adc
mov
xor
mov
iret
fwait
insl
jnp
je
cmpsb
xchg
cmp
rclb
das
ret
pop
aad
cmpsl
push
xchg
movsl
ja
push
push
sbb
cmp
addr16
ss
cwtl
ljmp
sub
sbb
daa
sti
push
pop
test
int
outsl
in
loop
jecxz
mov
sub
cltd
cmpsb
pop
xor
add
push
jnp
cmp
das
inc
outsb
pop
jb
icebp
adc
inc
loopne
mov
mov
pop
lret
pop
out
mov
repnz
pop
je
xor
push
lret
push
popf
pop
movsl
xchg
dec
and
inc
or
inc
sahf
sti
xor
cmp
mov
iret
jno
imul
sub
jb
insl
jle
lcall
ja
xchg
push
sub
dec
or
sbb
or
aas
pop
sti
test
fwait
jb
mov
push
or
sbb
push
add
or
lds
adc
rsqrtps
movsl
stos
push
push
movsb
dec
test
nop
loop
lea
ja
mov
mov
pop
loop
dec
loopne
das
mov
fidivs
inc
mov
cmpsb
mov
xor
mov
icebp
hlt
lahf
lods
push
fiadds
fwait
xlat
push
fbstp
jbe
hlt
mov
cmp
xlat
leave
nop
pusha
sarb
xlat
int3
fists
xchg
inc
xchg
ss
jne
cmp
jns
or
adc
popf
xchg
xor
ficomps
not
sub
adc
inc
sub
xor
in
xor
mov
push
adc
repz
pop
in
loopne
lds
mov
cmp
insb
shr
dec
addr16
pop
and
lods
mov
aad
or
mov
clc
push
mul
repz
int
sarl
dec
int3
ds
mov
pop
xchg
mov
cwtl
pop
lods
aas
jle
mov
in
add
rol
stos
mov
inc
ret
xchg
bound
in
mov
lcall
sbb
xchg
adc
dec
push
insl
adc
xlat
subb
jp
loop
inc
sbb
dec
or
repz
ljmp
inc
insb
sub
das
pushf
test
cmp
sti
dec
imull
scas
icebp
sub
pusha
ror
xor
or
mov
jecxz
push
push
les
and
sbb
adc
fwait
cmp
clc
leave
and
scas
aaa
dec
mulb
xor
addb
and
sbb
xchg
fisubs
int3
ret
add
lret
jmp
insl
repz
mov
jne
cld
aam
sarl
cmp
inc
loop
cmp
shll
jg
mov
fxsave
mov
cmp
xchg
shlb
push
inc
pop
cltd
jl
pop
jne
imul
mov
popw
es
and
push
stos
mov
jmp
push
rclb
icebp
pop
xchg
and
add
push
pop
mov
push
mov
loopne
mov
test
dec
ficompl
leave
and
jp
adc
pop
push
stos
mov
mov
fmull
jae
out
cmp
xchg
push
lret
pop
cmp
sub
lret
sub
pmaddwd
es
jg
inc
xchg
xchg
inc
add
imulb
mov
inc
lds
and
or
stos
dec
dec
scas
and
jno
out
xor
jo
roll
lds
mov
aad
rorl
cmp
jo
xchg
xor
xlat
and
dec
out
out
xchg
mov
aam
lds
ljmp
push
dec
xchg
ret
out
pop
sbb
jo
lods
imul
dec
push
xor
ret
jecxz
xchg
hlt
xchg
jecxz
and
xchg
or
movsb
daa
faddl
dec
xor
movsl
mov
or
and
pop
cmpsl
ret
jb
add
int
sahf
insl
xlat
mov
cmp
pop
mov
jp
sub
dec
sbb
pop
les
cli
push
sub
ret
mov
sub
movsb
sbb
inc
pushf
jecxz
stc
lock
inc
mov
inc
les
leave
cmc
xlat
mov
enter
arpl
rcrl
popf
sub
push
aaa
sarl
idivl
iret
or
fnsetpm(287
jmp
inc
jp
inc
ret
and
and
std
fldt
leave
pop
fimull
js
push
mov
data16
pop
out
fwait
es
xchg
out
call
sbb
mov
loopne
sahf
out
mov
lahf
lods
lock
shl
cmpsl
push
fwait
sbb
test
scas
dec
push
push
pusha
mov
push
xchg
insb
lcall
adc
int
xchg
ja
notl
adc
repnz
mov
stc
in
pop
out
dec
cld
in
xlat
gs
push
xlat
popa
pusha
xchg
sbb
add
push
out
pop
lods
popa
jne
dec
or
mov
jmp
stos
mov
pop
mov
xchg
into
ud1
sbbl
cltd
cmpsb
sub
int
sbb
cmp
sbb
loop
test
mov
sbb
xor
fisubrs
cmp
loope
mov
pop
in
scas
sbb
imull
mov
rorb
mov
mov
pop
jp
orb
mull
lea
push
popl
inc
pop
xor
and
test
fdivrl
fwait
xchg
add
lcall
imul
mov
stc
out
call
and
sub
pushf
jo
dec
cmp
dec
pop
cltd
push
gs
pop
mov
add
dec
dec
out
xchg
mov
jnp
push
sbb
repnz
jns
insb
loopne
arpl
or
jle
leave
movsl
loop
idiv
cmp
notb
ljmp
mov
pop
mov
cmpsb
push
out
xchg
push
insb
adc
nop
imul
and
pop
mov
xlat
aaa
out
loop
addr16
mov
add
imul
xchg
test
je
sbb
cld
lock
dec
dec
loope
leave
mov
mov
sbb
cmp
cmp
jns
push
les
pop
fidivl
mov
dec
jne
xor
gs
mov
mov
movsb
jg
lds
mov
ljmp
and
loop
out
cmp
jge
xchg
nop
lea
leave
xchg
pop
ret
adc
add
sub
js
popf
int
mov
pusha
add
jne
jp
mov
jns
gs
lahf
pop
out
mov
jle
aad
sub
js
cli
jecxz
jle
or
loope
scas
in
andb
in
or
loop
out
push
pop
scas
imul
sub
sbb
arpl
stc
mov
cmpsl
lock
lds
dec
scas
mov
mov
sarl
jnp
in
or
jo
dec
mov
and
jne
xor
cld
push
rolb
call
xor
push
outsl
sub
add
repz
push
dec
inc
inc
inc
jle
pop
xlat
dec
icebp
rcrb
mov
adc
push
inc
jmp
xor
stos
xor
lds
mov
aam
inc
mov
lret
aad
cmpsl
ds
push
pop
cwtl
adc
xor
cmc
ja
call
movb
repz
out
repz
mov
popf
add
push
fcomps
shlb
cmp
xlat
pop
inc
inc
inc
fwait
mov
pop
sbb
cmp
stos
aad
into
add
mov
je
add
cmc
jae
pop
bound
push
imul
pop
in
adc
ret
gs
les
sti
jge,pt
cmp
push
sub
add
mov
xchg
cmp
mov
push
mov
pop
fbld
push
repnz
add
mov
add
outsb
icebp
add
jne
fs
inc
mov
out
push
jge
xor
dec
adc
stc
jnp
das
and
pop
in
stos
iret
push
dec
adc
test
out
jg
ss
cmpsb
adc
inc
in
mov
sahf
clc
and
aas
push
mov
into
mov
mov
scas
xchg
lea
cmpsl
scas
lret
and
add
stos
and
fstl
ficompl
mulb
idivl
addr16
cld
pop
adc
inc
je
mov
enter
and
sbb
sub
sarb
shll
cmp
les
hlt
xor
into
ret
add
jg
sbb
fstps
push
jbe
lea
not
out
adc
in
push
repnz
or
mov
call
sub
cmp
mov
das
cmp
test
push
xlat
loop
imul
imul
mov
xlat
ds
add
lret
scas
lret
lock
roll
mov
call
adc
sahf
sub
shrb
mov
movsl
cmp
outsl
add
mov
daa
and
sti
cs
pop
cmpsb
ss
xlat
mov
lea
out
push
adc
jp
fbstp
adc
xchg
cmpsl
xchg
mov
mov
lods
adc
cltd
or
mov
mov
add
mov
jnp
into
cmp
outsl
xchg
jp
sbb
or
movsl
xlat
sarl
sbb
jge
inc
pop
pushf
xor
jle
xchg
sahf
inc
addr16
ret
rcr
jns
in
shlb
out
shlb
shlb
ljmp
es
dec
ret
pop
outsb
push
test
cltd
sahf
add
pop
xchg
in
or
out
out
daa
push
cmpsl
xchg
pop
xchg
mov
pusha
dec
jns
or
aas
iret
into
push
daa
sti
sub
jno
jmp
mov
popf
add
pop
popf
add
in
int3
nop
out
int
or
mov
ret
jp
mov
pop
sub
dec
fnstcw
cmp
push
push
adc
mov
dec
push
mov
mov
fcmovb
in
mov
push
loopne
sub
jne
cs
xlat
hlt
in
addb
pop
pop
push
subb
jb
pop
shl
adc
jns
pop
stc
dec
xor
sbb
mov
fdecstp
jmp
cmp
les
test
push
shll
sbb
add
push
lock
test
outsl
push
test
lret
xchg
lcall
dec
stos
xlat
daa
dec
clc
dec
or
cmp
popl
stos
enter
das
jns
addl
out
imul
mov
xor
subl
mov
and
xchg
adc
in
inc
les
lcall
dec
in
repz
movb
out
sbb
test
xchg
test
sbb
dec
sbb
xor
jmp
into
int
popf
or
out
lret
jle
test
sbb
pop
add
bound
sub
popf
mov
aad
out
addb
xor
dec
lock
jl
cmp
pop
inc
sti
and
dec
insw
mov
rcrb
cld
outsb
xchg
pop
pop
cltd
cld
xchg
or
test
xor
inc
or
xor
xor
and
cmc
imull
pop
sbb
mov
adc
ja,pt
cmc
mov
loope
clc
sub
push
adc
test
push
adc
movsb
je
add
mov
push
jns
mov
stc
jnp
sub
pop
pop
jp
or
das
fistpl
test
xchg
xor
out
push
mov
lea
sbb
inc
mov
or
push
cld
add
bound
lods
mov
mul
mov
in
in
in
jnp
imul
lods
jbe
pop
jp
and
pop
dec
jae
jp
pop
push
fwait
and
push
dec
out
mov
xchg
ljmp
mov
sbb
mov
movsb
ds
add
sbb
mov
into
fildll
test
sub
aam
ljmp
pop
mov
andb
pop
adc
into
mov
lock
add
pop
scas
mov
lret
lret
mov
popl
insl
adc
sub
push
dec
or
jb
lret
dec
int3
and
pop
add
leave
cmpsb
jns
xchg
xchg
aas
call
repnz
xor
sbb
push
jp
jne
loopne
xchg
les
divb
lahf
sbb
xchg
dec
jge
xchg
mov
mov
lahf
nop
int
pop
out
xchg
hlt
ja
mov
push
je
ss
in
data16
cld
ds
test
cwtl
xchg
stos
sub
out
ret
rorl
outsb
dec
mov
sbb
pop
mov
ljmp
dec
aaa
sbb
xchg
cmp
add
mov
xor
aaa
jle
mov
push
aad
imul
or
pop
or
data16
adc
shl
push
mov
jg
in
add
pushf
mov
fcoml
mulb
fldenv
in
push
xor
add
or
mov
repnz
lods
sbb
mov
movsb
lods
dec
push
jl
pop
cltd
mov
outsb
cmp
test
negl
xchg
sahf
adc
sub
icebp
jmp
test
testl
sbb
cmp
mov
sub
inc
push
bound
test
cmp
enter
loop
pop
or
add
cmp
dec
sub
mov
insb
movsl
push
push
sahf
imul
jle
in
pop
pusha
lcall
dec
mov
mov
sahf
push
pop
or
push
push
ret
jge
pusha
subb
testb
lcall
out
ss
subb
fidivrs
push
mov
adcl
faddl
stos
bound
push
inc
les
xchg
push
xor
cltd
push
sub
xchg
mov
insb
sti
sub
rol
int3
mov
jmp
dec
mov
xchg
popf
mov
or
sub
mov
mov
mov
or
out
pop
les
dec
dec
fsubrs
mov
aaa
sbb
or
iret
dec
hlt
cmp
cmp
jecxz
xchg
sarb
shrl
stos
fwait
pop
sub
inc
push
test
bound
bound
xor
test
sub
insl
rolb
jns
ds
pop
mov
mov
xchg
adc
call
fcomps
lahf
xor
mov
loope
push
pop
movsb
dec
push
add
mov
jp
aas
cwtl
imull
fsub
stos
test
std
and
mov
pop
adc
mov
ja
jecxz
test
pop
xor
verr
add
fimuls
sub
xor
cmp
aas
clc
cmp
sbb
ret
jg
jno
cmp
or
bound
inc
inc
jne
outsb
sarl
mov
ljmp
mov
inc
js
or
xor
cs
repz
dec
xchg
fisubs
sahf
jne
xor
dec
fcmovne
leave
adc
fwait
push
xchg
and
movsb
ljmp
adc
div
iret
jmp
mov
in
inc
insb
push
mov
iret
xor
adc
scas
push
out
imulb
sbb
cmp
shrb
test
pop
rorl
mov
fucomip
jle
and
adc
imul
imul
scas
push
movsl
mov
aaa
cmp
inc
dec
fwait
or
sbb
sbbl
cmpsl
add
xchg
sub
mov
ljmp
sub
push
cmpsl
hlt
and
mov
pushf
inc
ds
adc
bound
adc
mov
cld
dec
inc
mov
jecxz
int
add
sub
lods
mull
ss
fildl
in
popf
fidivl
adc
outsl
lcall
fldcw
ds
pop
mov
inc
mov
repz
pop
mov
jecxz
and
cmc
stc
out
imul
sbb
xor
sbb
push
lret
iret
cli
repz
sbb
in
push
jne
loope
or
add
rolb
push
push
aam
or
add
mov
mov
add
leave
leave
cltd
das
xlat
xchg
sahf
scas
roll
pop
mov
dec
cmp
xor
pop
les
in
sbb
andl
mov
lret
scas
pop
cs
enter
into
xchg
xor
mov
jl
rorl
jge
mulb
sub
fimuls
out
lret
and
cmp
cmp
lea
or
push
mov
push
aaa
imulb
inc
popf
lock
aad
inc
add
xchg
lea
push
push
scas
add
xor
cs
repnz
sub
add
dec
and
addl
stos
notl
fcomps
mov
push
pop
push
inc
dec
xchg
mov
mov
cmp
pop
push
pusha
push
cmp
push
cltd
popf
ficomps
aad
outsl
in
loop
inc
loop
pop
push
push
mov
and
in
push
leave
hlt
pop
popf
ja
jecxz
inc
jmp
punpckhdq
jb
pop
mov
std
loopne
int
ja
dec
push
or
sbb
mov
pop
insl
daa
add
jg
cmpsl
lods
dec
je
ja
arpl
sbb
pop
cld
or
push
mov
stos
out
push
xchg
jo
insb
cli
sbb
and
inc
inc
lret
mov
jg
stos
cmp
sbb
sub
cmp
cmp
jbe
jecxz
loopne
adc
cmp
loope
xchg
and
nop
insl
xchg
pop
push
mov
or
imul
jl
loop
xchg
sub
inc
jmp
dec
lds
loopne
stc
pop
cmp
jae
push
or
fs
push
jle
dec
bound
ss
mov
pop
mov
pop
jg
jg
add
fistpll
jge
inc
das
dec
push
add
ljmp
shlb
or
fidivrs
imul
mov
ret
xchg
adc
ljmp
leave
popf
fistpll
sbb
push
test
or
or
es
push
insb
lods
push
add
nop
inc
addb
push
rorb
mov
inc
inc
sbb
movsb
pop
imul
push
push
xor
adc
dec
incl
jmp
jmp
dec
xchg
and
roll
sub
adc
es
movsb
lret
fs
fmuls
xor
jbe
lahf
cltd
add
inc
xchg
nop
sbbl
std
inc
call
cld
dec
ret
or
loope
add
inc
into
test
or
fs
mov
out
mov
mov
scas
fs
lcall
sbb
dec
lahf
aam
mov
mov
mov
pop
adc
pop
jge
mov
cmp
pop
cmp
movsb
int
add
clc
ljmp
xchg
jg
cmc
push
xor
mov
adc
mov
pop
dec
push
iret
pop
dec
push
mov
fsubrs
imul
mov
add
adc
testb
cmpsl
sub
fdivl
lock
push
in
addb
xchg
ret
cmpsb
push
out
icebp
lock
rorl
inc
mov
cwtl
popf
adc
outsl
mov
int
jmp
mov
mov
daa
mov
movsl
fists
leave
xchg
test
out
mov
lock
mov
xor
push
addb
mov
ljmp
pusha
out
or
adc
sub
repnz
jmp
pop
scas
fiaddl
shr
push
jns
dec
int
mul
xor
out
into
xorb
cmp
sub
and
push
xchg
rcll
jp
push
xchg
out
loop
xor
jl
aaa
sbb
mov
xor
mov
loopne
call
dec
mov
or
fidivl
scas
scas
and
xor
jbe
and
andl
test
mov
pop
fmuls
iret
mov
dec
jnp
out
outsb
mov
xor
xor
mov
and
fsubrs
popa
mov
loope,pn
mov
in
dec
in
or
xchg
xor
mov
xchg
pop
xor
fdivrs
cmp
cmp
jne
push
aas
int
rcr
pop
cld
add
gs
iret
and
or
fcoml
sbb
dec
outsb
lret
mov
imul
mov
outsl
nop
add
jae
and
cld
or
mov
mov
xor
pop
jle
fmul
mov
jnp
sbb
das
data16
jo
movsl
movsl
pop
icebp
orb
mov
es
in
out
popa
idivb
mov
cs
ds
lahf
test
mov
mov
aas
xchg
addr16
lock
sbb
loope
insb
lcall
sub
adc
lret
jl
gs
out
ficomps
or
in
push
scas
cmp
mov
xchg
sti
pop
fsubs
adc
xchg
dec
jge
pop
ret
adc
dec
out
sub
outsb
mov
sub
mov
loope
pop
sub
ficoml
icebp
cli
lahf
lods
and
push
or
push
cmp
cmp
fmull
popf
xor
pinsrw
sbb
cli
cmp
push
adc
and
int3
pushf
pusha
loope
inc
xor
and
punpckldq
push
movsb
mov
dec
mov
jl
sti
jae
jbe
sti
xchg
pushf
inc
add
push
xchg
and
pop
push
xorl
aaa
mov
inc
movb
daa
pop
icebp
or
push
idivb
or
fwait
movsb
mov
stos
lods
aad
arpl
sbb
mov
and
pause
ror
sub
shr
and
outsl
jbe
xorl
jnp
loopne
iret
cmpsb
repnz
int
es
into
or
push
jp
iret
cli
push
jle
cmp
xor
mov
cmp
popa
fistps
inc
pusha
fcompp
movsl
xchg
popl
mov
jne
cmp
fcoms
xchg
cmp
jge
pop
lahf
cmp
aas
cmc
in
jns
adc
and
dec
repz
lret
aaa
or
xchg
aad
or
inc
cmp
lea
fsub
iret
loope
sbb
add
xor
sbb
ret
mov
dec
xchg
fs
stc
mov
xchg
adc
mov
orl
jle
mulb
or
and
rcrb
mov
ss
mov
lret
push
mov
in
fs
imul
mov
mov
arpl
aas
pop
fucomi
fmul
mov
pusha
and
fcoml
sub
std
clc
out
xlat
jp
push
ljmp
test
xchg
out
in
mov
push
bound
dec
je
sahf
ss
hlt
shll
push
mov
adc
mov
mov
out
jno
cwtl
mov
das
aaa
call
cmp
inc
adc
jae
imul
insl
jns
mov
mov
stc
push
sbb
and
stos
pop
imul
std
cmp
dec
sub
mov
pop
sbb
xchg
pop
lahf
pop
push
or
addl
dec
jns
sbbl
push
in
xchg
push
cmp
xchg
push
gs
ret
lods
pop
dec
rcll
push
cld
add
sub
pop
in
movsl
push
ljmp
mov
xchg
aaa
fstpt
icebp
outsl
adc
in
test
pop
lret
outsl
add
xchg
dec
mov
mov
sahf
in
push
enter
inc
je
out
lret
jo
xor
or
add
ret
loop
nop
mov
incb
lahf
cmpl
push
xchg
cmp
out
pop
adc
sbb
in
dec
test
out
fs
add
shlb
xlat
lock
popf
popf
je
iret
loope
fstps
sahf
sub
mov
or
and
sahf
push
stos
cli
es
mov
cmp
cli
pop
xchg
mov
fsubrs
dec
sub
push
jno
out
sbb
and
into
stos
imul
mov
pop
cmp
xchg
loope
shlb
and
mov
jmp
dec
shl
push
cmp
cmpb
lahf
or
mov
jo
fidivs
push
adc
rol
sub
lahf
xchg
out
mov
mov
shlb
xorl
pop
xlat
xor
add
call
into
mov
movsb
jb
fisttpl
les
sub
hlt
sub
pop
push
pop
lret
cld
cwtl
sub
out
rorl
dec
xchg
repnz
lret
and
mov
pop
cmp
and
addb
in
inc
push
ror
xchg
cmp
test
sbb
leave
stos
ljmp
mov
dec
mov
daa
inc
xchg
mov
cld
daa
jp
cs
inc
or
loopne
push
testl
push
loopne
out
scas
xor
xor
out
sbbl
loope
pop
pop
push
mov
scas
jp
syscall
outsl
pop
mov
jo
cmp
xor
add
mov
shl
pop
sti
daa
shll
scas
pop
push
cwtl
cmp
adc
into
das
sahf
add
aam
mov
punpckldq
lahf
add
mov
cld
inc
scas
adc
sub
mov
xor
sbb
sub
pusha
daa
lods
imul
out
mov
xchg
inc
pop
rorb
sarw
imul
pop
loop
jb
cwtl
jae
lds
and
xor
sbb
lret
ret
jae
fwait
push
mov
rorb
ja
sarb
shr
dec
fistpll
addr16
cmp
lea
cli
cmp
push
sub
popa
mov
jle,pt
pop
pop
mov
push
pop
xlat
fldcw
movsb
mov
js
xor
lds
push
inc
mov
push
mov
inc
subl
xchg
fisubrs
pop
add
scas
xchg
ucomiss
out
es
xchg
jl
add
xchg
fstp
addr16
adc
add
insb
js
mov
pop
cltd
stos
addl
pop
mov
jle
inc
mov
xor
ret
out
scas
mov
push
add
ljmp
mov
xchg
test
loope
fwait
movsl
sbb
sbb
xchg
lock
loopne
mov
lods
testl
xchg
mov
xchg
ja
cmc
adcb
mov
cmp
cwtl
lods
fsts
jmp
or
iret
scas
xchg
sub
adc
lahf
mov
lret
xchg
lds
mov
in
cmp
fmull
mov
jnp
jmp
add
stos
push
rorl
loope
and
mov
test
jo
or
inc
mov
js
dec
pop
xchg
das
cld
out
mov
xchg
movsl
cld
dec
mov
fistpl
insb
cs
jae
xchg
xchg
xchg
insl
scas
movsl
movsb
adc
fs
nop
movsl
out
pop
fld1
xchg
mov
xor
or
pop
fwait
mov
lret
movsb
mov
pop
mov
int
and
int
ret
aad
int
jb
in
frstor
jne
adc
insl
jbe
mov
shll
out
aad
add
cmpsb
outsl
fcomi
fisttps
cmp
adc
testl
push
sti
cmp
or
mov
pusha
xchg
gs
inc
roll
sbb
repnz
jo
nop
call
popf
in
fbstp
sbb
jmp
pop
fdivrp
mov
aad
sbb
outsb
fprem
ret
jmp
add
inc
jecxz
xchg
lret
lods
inc
adc
mov
dec
and
out
push
lds
out
push
clc
out
mov
sahf
push
ret
cmc
subb
stos
xchg
rolb
pop
mov
adc
sbb
inc
mov
lret
sub
sbb
aas
adc
pop
jbe
mov
mov
xchg
scas
cltd
push
movsb
out
repz
mov
push
sbb
add
sub
cmp
jp
xchg
cwtl
dec
mov
fwait
mov
push
add
pushf
sbb
repnz
loop
dec
test
sar
jo
jne
mov
mov
adc
dec
mov
sbb
xor
lds
cltd
xchg
pushf
dec
test
xor
jle
daa
inc
sahf
negl
jg
test
out
shll
mov
xor
push
pop
fdivrs
adc
jne
and
or
testl
xor
hlt
orb
mov
push
and
inc
test
push
inc
mov
fcmovu
fisubrl
cmp
pop
cmp
aad
roll
jle
cmpsl
cmp
xchg
mov
push
je
jae
push
mov
pop
dec
aas
les
adc
xchg
pop
mov
and
outsl
xchg
xchg
movsb
or
icebp
pushf
mov
sbb
movsb
xor
stos
lods
into
sbb
xchg
xor
imul
insl
mov
sbb
dec
neg
push
lret
test
clc
cltd
cmp
addr16
mov
je
in
mov
and
push
push
xlat
daa
xor
mov
cmpsl
repz
push
das
std
ja
xor
out
pop
sbb
gs
cltd
scas
sbb
xor
mov
sub
pop
xchg
stos
in
push
xlat
ss
fnstsw
fildl
cmp
outsl
adc
pop
and
lahf
push
fbld
jnp
loop
or
scas
repnz
outsb
xchg
mov
aas
clc
jmp
sub
repz
insb
adc
push
push
pop
fcmove
and
or
aam
push
xchg
stos
and
xor
scas
xchg
mov
out
mov
mov
pop
stos
adc
neg
cs
cld
in
sbb
and
sub
push
dec
sbb
inc
adcl
push
xor
inc
add
mov
clc
sbb
je
ljmp
mov
movsb
scas
lods
ja
iret
das
frstor
xor
mov
mov
pop
mov
sbb
mov
lods
push
test
mov
fnsave
fs
lcall
dec
clc
add
xchg
aaa
push
jg
int
cltd
xlat
push
lods
stos
xor
loop
dec
xor
mov
push
pop
adc
and
daa
popa
enter
dec
inc
in
dec
push
mov
dec
in
mov
jbe
loop
sahf
xor
ret
sub
imul
je
xorl
cmpsb
scas
xchg
clc
jne
hlt
jmp
sti
shl
pop
or
sbb
xor
mov
jb
int
cmp
popa
sbb
or
mov
jb
lret
mov
movsl
pusha
inc
stos
mov
sbb
outsb
and
cltd
insb
mov
pushf
fs
aaa
add
push
push
inc
xchg
hlt
or
out
push
inc
mov
push
fsubs
dec
arpl
push
and
or
jne
mov
imul
div
rcrl
mov
add
sub
insb
jb
sbb
push
sbb
rorl
xor
imul
nop
icebp
dec
add
jge
push
aas
mov
xchg
xchg
loope
into
in
pop
pop
shr
adc
cmpsb
xchg
test
repz
cli
sub
popa
in
jnp
lahf
add
std
sbb
out
subb
cmp
pusha
popa
jp
lcall
push
sub
movsb
pushf
push
mov
dec
sbb
add
es
fimull
out
jae
mov
fdivs
leave
mov
and
mov
aam
imul
cld
pop
lahf
adc
jbe
push
cld
rcrl
dec
lret
mov
jbe
cmp
pop
test
and
jle
pop
aas
lcall
pop
ds
sbb
adc
aaa
inc
dec
imul
addr16
cmc
pop
or
test
pop
cmp
andb
adc
push
push
fs
push
pop
fwait
xchg
pop
inc
mov
mov
mov
sbb
lods
inc
or
fs
lods
or
sub
lods
enter
fs
xor
mov
mov
adc
jge
testl
jg
test
fcoms
mov
xchg
fwait
int
xchg
cmp
mov
out
sub
cmp
mov
jl
cs
jae
in
dec
lods
pop
dec
mov
int3
add
jo
jp
enter
adc
sbb
or
addr16
cmp
rclb
inc
sbb
std
insb
stc
jbe
cwtl
and
sbb
push
xchg
inc
jp
jmp
inc
and
xchg
test
xchg
adc
aaa
jle
cmp
add
ss
add
cs
ret
and
mov
or
popl
fs
sbb
test
fcoml
mov
imul
inc
test
mov
mov
arpl
into
shll
push
xchg
enter
push
jb
iret
mov
movsb
add
add
and
sbbb
and
icebp
lret
cs
xchg
cmp
lcall
jle
xchg
enter
and
mov
sbb
data16
shll
push
cmpsl
sub
jp
mov
sbb
lcall
mov
fdivrs
lock
mov
inc
loop
cli
lret
ret
out
fld
jns
cli
test
fidivrs
inc
and
rolb
inc
sbb
cmp
lahf
nop
outsb
ret
aas
xchg
push
sahf
jg
inc
adc
jp
inc
pushf
mov
adc
popa
gs
enter
roll
jmp
inc
es
fwait
jnp
outsb
adc
out
push
add
jecxz
out
outsb
lock
iret
adc
fists
sbb
imul
jno
lea
pop
xlat
into
loope
sub
fnstenv
xchg
or
jo
fcmovnbe
mov
inc
rorl
fucom
sub
fs
cmp
push
dec
jp
push
test
sahf
scas
out
rcrb
mov
cld
or
push
xor
hlt
addb
outsb
pop
sbbb
pop
outsb
jg
lret
test
push
adc
cltd
inc
sub
inc
sarb
and
or
pop
pop
imul
shlb
jnp
cmpl
cs
jge
test
or
fisubs
cmp
cmp
scas
lock
cmp
scas
ret
pop
or
inc
add
dec
or
lret
out
lcall
scas
shll
xchg
mov
cmp
adc
and
inc
lock
insl
push
arpl
or
popf
adc
cmpsl
push
pop
addl
fs
les
stos
mov
mov
push
pop
or
imul
mov
fidivrs
mov
imul
mov
popa
shrl
add
push
mov
fldl
add
out
xchg
inc
dec
push
mov
sbb
push
jns
sbb
adc
xchg
mov
rcrb
or
mov
mov
pusha
sbb
das
cmp
jo
insb
cs
out
dec
xchg
std
pop
add
xchg
sbb
mov
sub
sub
dec
sub
lock
decb
fstpt
mov
push
scas
pop
xor
mov
xchg
jnp
cmp
ret
out
pop
pop
adc
in
stc
cmp
push
jo
jl
enter
jl
add
xor
int3
insl
mov
cmpsl
adc
xor
in
test
push
inc
push
in
xchg
daa
cmpb
repnz
in
bound
sbb
lock
mov
pop
adc
jl
inc
test
inc
popa
js
scas
push
or
test
test
or
outsb
subb
mov
imul
pushl
adc
sub
mov
std
outsl
xchg
inc
or
and
test
imul
notb
dec
xchg
sub
push
fcoms
inc
nop
push
mov
aaa
sub
mov
xor
scas
fiaddl
in
and
add
sub
xchg
fstpt
xchg
xchg
and
push
dec
xchg
lret
jge
aas
call
mov
push
adc
inc
dec
mov
repz
adc
inc
pop
loop
sub
rol
ss
and
xchg
dec
inc
in
add
es
xchg
xor
jbe
mov
push
data16
dec
leave
mov
dec
nop
daa
cmp
leave
fstl
xchg
fwait
or
lret
pop
jnp
cmc
push
mov
cmpsl
cwtl
das
in
add
push
rcrl
int
fucomip
or
mov
cli
outsb
lret
fwait
sub
clc
fs
adc
loop
push
jmp
sub
clc
push
por
into
sub
mov
shlb
outsl
das
xor
xchg
cmp
pop
push
mov
fisubl
in
shlb
insl
push
mov
lret
inc
test
test
stos
insl
mov
call
add
jle
xor
inc
out
test
das
pop
nop
sbbl
or
shlb
mov
js
daa
test
cmp
inc
das
dec
mulb
add
loopne
sti
or
inc
dec
in
daa
and
aaa
in
jno
cmp
mov
xlat
pop
arpl
push
add
dec
int
sbb
and
mov
int3
add
dec
in
or
inc
loopne
jge
push
int
out
inc
or
lds
xchg
in
cmp
pusha
ret
loope
sub
lea
hlt
cmp
stos
lods
or
es
js
mov
mov
add
loope
or
out
mov
scas
xchg
push
adc
je
mov
ror
inc
xchg
inc
push
pop
inc
lods
std
movsb
cmovb
jmp
scas
repnz
out
in
mov
movsl
out
jmp
sbb
pop
ja
mov
test
jbe
cmp
pop
fwait
ljmp
pop
ljmp
dec
int
jmp
cmpsl
arpl
jle
rcrb
push
and
sti
popf
in
push
sbb
popa
push
in
mov
mov
mov
lods
ret
inc
in
cld
cwtl
mov
jecxz
pop
bound
xchg
push
add
xchg
jg
daa
rcl
stc
push
sahf
nop
loopne
push
adc
cmp
mov
insb
pusha
test
loop
push
lret
mov
sbb
shrb
in
mov
mov
xchg
lods
adcl
pushf
mov
fimuls
std
stos
mov
or
out
dec
test
daa
sbb
shlb
sbb
insl
pop
imul
popa
dec
mov
dec
loop
addr16
jbe
jno
ret
ljmp
insl
je
sbbb
mov
movsb
sub
ficoms
cmpsl
adc
addl
jg
sbb
sub
cwtl
sub
orl
outsb
ljmp
bound
mov
jle
call
cld
repnz
orl
rcrl
andl
lcall
jmp
and
aad
sub
or
cmpsl
rorl
aad
fisubl
leave
les
inc
mov
ret
add
xchg
add
repnz
clc
pop
xorl
jl
in
mov
inc
lods
aam
jns
jge
add
into
cmp
pop
out
or
xchg
int3
push
push
push
movsb
push
mov
lods
jo
gs
lahf
jp
push
test
faddl
add
pop
mov
sub
lahf
push
in
push
pop
imul
adc
ss
aam
xchg
ja
cli
xchg
shlb
adc
mov
cwtl
sub
push
dec
pop
adc
shlb
fiaddl
add
mov
aad
adc
xchg
insb
xchg
insl
in
movsb
jo
es
mov
repnz
fdivr
cmc
pop
shrb
xchg
mov
xchg
mov
pop
out
js
outsb
imul
sbb
sbb
push
xorl
enter
dec
jbe
fstpl
mov
lods
adc
jg
inc
cmp
jae
aad
je
mov
adc
scas
call
pop
ja
jns
jb
test
hlt
xchg
imul
das
mov
imul
shll
mov
push
xor
cmp
xlat
mov
sbb
inc
mov
std
das
xor
dec
lcall
inc
test
xchg
sti
out
rcrl
jge
jns
cmp
aad
mov
icebp
xchg
pop
or
mov
decl
jo
dec
xchg
imul
and
lea
jns
mov
retw
aas
int
test
scas
jns
sti
sahf
mov
pop
xor
adc
jns
pushl
adc
mov
test
push
sub
xchg
push
push
leave
hlt
pop
ds
test
dec
aas
mov
ret
mov
sarb
push
in
insl
mov
xor
push
mov
mov
adc
mov
pop
push
in
push
test
cmpb
fwait
jb
lock
adc
je
push
xchg
incb
mov
mov
pop
mov
fdivr
cmp
or
jns
int3
pop
push
lds
mov
pusha
inc
jae
jp
xor
cmp
sti
ljmp
cmp
mov
or
or
mov
xor
sbb
divb
pop
mov
mov
cmc
ss
xchg
pop
fdivrl
cld
cltd
cwtl
hlt
fadds
in
adc
mov
hlt
inc
mov
fs
push
mov
push
cmp
xor
push
push
dec
dec
pusha
adc
push
das
lods
push
xchg
roll
pop
in
xor
leave
jae
insl
or
loopne
jnp
push
call
in
mov
pop
rcll
inc
rorb
das
mov
dec
jno
dec
mov
cld
daa
lret
pop
mov
popa
push
test
into
mov
iret
and
cmp
mov
leave
sub
inc
mov
pusha
cmc
cmp
mov
fmulp
or
xchg
dec
icebp
xchg
sub
pop
lcall
loopne
in
pop
cltd
movsb
pushf
mov
jp
cwtl
mov
pop
jmp
repnz
or
cli
mov
and
out
stos
stc
pop
mov
sub
mov
mov
mov
mov
orb
ret
psubd
mov
fcmovne
xchg
mov
cmpsl
mov
repnz
mov
arpl
sbb
jns
mov
inc
xchg
xor
xchg
test
roll
xchg
adc
jl
add
fisttpll
sbb
fidivl
int
lods
and
clc
xchg
jecxz
dec
mov
pop
cmpb
cwtl
mov
fldl
aaa
int
arpl
jo
fwait
lret
aas
bound
out
mov
xor
outsb
cmp
ja
aad
mov
add
movsl
popa
fwait
dec
gs
dec
push
shlb
jb
xchg
dec
iret
in
pop
add
test
dec
xchg
dec
lock
or
mov
fisttps
cmpsl
fcomps
mov
fldl
cmpsl
add
mov
fists
adc
and
cs
fwait
mov
fidivs
xor
dec
lret
icebp
sub
cli
out
scas
mov
stos
fildl
add
sub
sbb
sub
lret
jns
and
jbe
bound
or
mov
pop
mov
aaa
ret
int
or
js
in
mov
adc
jnp
jp
stos
inc
out
in
jb
les
jnp
outsl
movb
pop
or
cmp
mov
inc
dec
cli
pop
cmp
lock
pusha
adc
jp
orl
div
jge
pusha
cmc
sub
xlat
mov
fnsave
sub
aad
test
sarb
fcmovnbe
cmp
jb
fdivs
lret
mov
mov
xchg
fadds
lods
add
arpl
call
ds
add
push
xchg
jle
jnp
imul
push
into
inc
inc
cmp
jno
fisubl
mov
in
jmp
sbb
xchg
scas
ficomps
and
popa
mov
sub
xor
adc
pusha
movsb
cmpsl
xor
push
or
push
and
out
inc
test
push
mov
mov
cmpsl
push
lock
pushf
xor
mov
repnz
cmc
jmp
adc
sbb
add
or
cwtl
pop
ljmp
jge
cmp
jg
adcb
arpl
sub
xor
cltd
mov
xchg
enter
stc
inc
aam
gs
lds
loope
leave
xor
loop
adc
cmc
sbb
inc
in
int3
movsb
xchg
push
int3
or
push
nop
xchg
aad
pop
icebp
pop
xchg
aaa
lods
shl
test
popl
inc
jo
sarw
arpl
jecxz
imul
sbb
mov
outsl
movsb
and
sbb
push
pop
or
sahf
cmp
cmp
or
je
sub
inc
adc
push
lock
mov
sbb
arpl
leave
sbb
daa
incb
out
adc
sbb
fwait
pusha
sub
dec
lahf
dec
lahf
cmpsb
xchg
repnz
fsubrl
sbb
scas
pop
push
xchg
lahf
and
xor
push
push
mov
sarb
loopne
jae
enter
xchg
dec
imul
mov
sbb
stos
mov
iret
push
imul
adc
push
push
pusha
pop
lret
mov
xorb
mov
and
popa
lods
data16
sub
xchg
xlat
mov
daa
dec
sarb
mov
xchg
and
in
inc
mov
scas
sahf
inc
push
mov
push
cmp
jle
loopne
push
bound
jg
ret
dec
enter
ljmp
inc
push
mov
fdivrs
jg
or
pushf
cmp
xor
iret
ficomps
jo
mov
fdivs
push
inc
mov
mov
out
or
jp
les
out
sub
jle
mov
inc
fldt
icebp
cmpsl
fcmovne
mov
lea
aad
test
in
jne
sbb
mov
pop
cmp
xchg
push
jbe
repz
cmp
scas
jmp
and
pop
out
xor
xor
dec
inc
mov
add
insl
sub
xor
jns
sbb
rcrl
or
sarb
enter
movsl
daa
or
push
lcall
mov
cmp
and
xchg
mov
jae
sarb
lret
cmp
decb
inc
inc
cmp
dec
mov
push
mov
push
cld
adc
pop
sbb
lahf
into
leave
out
cmpsl
int
dec
pop
add
cwtl
stc
orl
out
sub
fs
ljmp
sub
cmp
cmp
push
pop
mov
fstp
dec
aas
jae
mov
jmp
dec
push
xor
mov
dec
pop
mov
repnz
hlt
dec
rcrl
mov
imul
inc
jge,pt
pop
lret
sub
mov
mov
jnp
pop
and
mov
fisubrs
push
adc
xchg
jb
and
xchg
dec
jmp
mov
idivb
movsb
or
sub
xor
aaa
test
inc
or
mov
cmp
in
mov
xchg
dec
adc
lock
cmp
call
mov
mov
add
addl
pop
jge
or
rcrl
mov
fcoms
pop
xchg
int3
aam
aam
shl
stos
sarb
dec
stc
inc
or
js
jp
outsl
repnz
cmpsb
jno
andb
rolb
bound
iret
ror
lods
outsl
jnp
inc
pop
sbb
gs
cmp
adc
fs
or
cli
loopne
rorl
push
and
cmpsl
mov
adc
outsl
mov
sbb
push
mov
push
imul
out
loopne
fucomip
test
fsubr
nop
or
loop
mov
xchg
dec
xor
sub
jnp
pop
aaa
push
incl
adc
ret
mov
mov
push
idiv
inc
mov
inc
mov
xor
lahf
sbb
add
orb
adc
test
add
pop
adc
cmp
out
jo
jle
cmpsb
push
pop
in
and
movsl
xor
inc
mov
jo
je
pop
or
fadd
sub
outsl
push
sub
push
xor
jp
xchg
loopne
fdivr
inc
push
sub
push
insl
cmp
dec
roll
ja
loop
lret
ret
aad
loope
lret
hlt
push
mov
loope
movsb
lods
push
std
shrb
sti
inc
mov
insb
inc
hlt
jmp
xchg
pushf
aaa
dec
dec
inc
stos
aaa
inc
repnz
push
mov
out
daa
pop
push
pop
cmp
jp
inc
cwtl
lcall
or
addr16
or
xchg
sti
mov
xor
fwait
push
dec
out
mov
out
jb
dec
sub
insb
dec
and
mov
fsts
sbb
inc
sbb
xadd
mov
pop
mov
dec
mov
dec
mov
subb
cmp
mov
stos
lods
xor
insb
outsb
add
push
je
adcl
je
mov
or
call
inc
and
push
sahf
push
fldenv
cmp
rcrb
adc
repz
sub
bound
bound
insl
nop
test
out
push
fisubrs
dec
and
sub
rcr
push
adc
add
cltd
iret
xchg
mov
dec
test
loop
sub
xor
fsubl
pop
fiaddl
inc
adc
fwait
jl
out
mov
xlat
xlat
add
pop
pop
mov
cmpsb
sbb
add
pop
gs
out
leave
aam
lcall
nop
pop
mov
pop
lahf
add
add
pop
rorb
pop
inc
test
xor
pop
and
sub
mov
movsl
mov
jbe
mov
aam
or
xchg
lea
ds
jbe
nop
jl
dec
lods
test
jns
in
jle
mov
repz
sbb
je
sub
cwtl
push
sar
xor
push
xor
adc
nop
jne
xchg
insl
sarb
in
stos
fisubrs
or
in
aaa
push
adc
xchg
mov
push
cmpsl
adc
push
test
aas
mov
xor
sbb
sub
xchg
pop
sbb
inc
jae
mov
loope
or
enter
loop
jno
in
ret
or
mov
into
lea
icebp
push
jb
lahf
test
lock
and
cmp
insl
xor
mov
cltd
cmp
jns
roll
mov
pop
mov
jmp
push
aad
insb
js
mov
jecxz
repz
cli
loope
or
jno
jl
movsl
aam
adc
leave
and
jmp
shll
daa
lods
sub
aad
dec
mov
sahf
cmpsb
dec
cmpsl
fisttpll
xor
std
shrb
imul
fsubl
jb
iret
pop
imul
sbb
mov
fcomp
cmp
jl
add
lcall
push
std
add
mull
fnstenv
inc
loopne
adc
adc
push
mov
dec
mov
lret
cmpsb
imul
inc
adc
ja
pop
int3
je
sub
and
insb
leave
mov
out
push
mov
cltd
xchg
push
mov
mov
sti
js
outsb
imul
ljmp
push
pop
pusha
xor
enter
bound
xor
push
and
popf
dec
das
mov
jge
push
sbb
xchg
scas
dec
shlb
scas
lds
mov
cld
xchg
testb
mov
mov
pop
out
out
jge
insl
andl
lods
pop
dec
ror
adc
pop
js
pushf
push
clc
sub
and
push
lds
mov
sbb
int
sbb
out
scas
lods
imul
sti
clc
enter
clc
mov
push
mov
inc
dec
sub
xor
cli
scas
ret
loop
mov
out
int3
aad
jbe
sbb
mov
mov
xor
mov
mov
mov
inc
cmp
ret
jo
sbb
jp
cmpsb
or
pop
xor
fiaddl
cmp
mov
sbb
in
aam
adc
fwait
pop
test
ret
mov
scas
jnp
sub
mov
cld
imull
out
push
sbb
bound
popa
sbbb
dec
or
mov
es
mov
popa
add
ja
ljmp
ljmp
jle
mov
imul
push
xor
sbb
and
aas
lahf
dec
in
emms
cmp
mov
loope
cmp
into
jno
gs
jbe
mov
xchg
js
jae
ret
xchg
xor
sbb
mov
ficomps
mov
std
repz
adc
push
and
dec
jns
dec
mov
loope
mov
inc
bound
cltd
loope
daa
mov
sub
stos
xlat
popf
lahf
out
pop
hlt
mov
lcall
mov
mov
cmp
dec
mulb
fidivrs
iret
faddl
cmp
cmp
sbb
sbb
in
loop
test
jb
outsb
aad
ja
xor
cmp
xor
pop
js
mov
cmp
leave
cmp
push
js
imul
push
ja
bsr
aas
jp
cltd
scas
fcmove
jno
movsb
sub
jno
adc
mov
pop
xor
enter
sbb
lea
adc
xor
and
pop
cli
xorb
ljmp
roll
test
add
dec
ret
xor
push
in
or
stos
jmp
or
mov
int
push
int3
and
std
jge
jae
pop
es
arpl
and
insl
hlt
insb
inc
and
and
push
and
or
inc
jle
add
fsts
inc
mov
je
add
pop
lods
iret
jo
mov
pop
pop
sti
lea
push
xor
mov
fs
pop
data16
shlb
sbb
push
xchg
jb
rcr
adc
or
xor
adc
lahf
adc
fiaddl
pop
imul
or
mov
sbb
mov
xor
xchg
xchg
lea
clc
mov
cwtl
xchg
es
push
std
inc
mov
cmpsl
test
fidivrs
mov
lods
pushf
or
mov
xchg
bound
popa
push
lret
fimuls
inc
pop
dec
vphaddwd
xor
mov
ret
cs
repz
sbb
cltd
cli
dec
lea
cmp
movsl
das
test
cwtl
cltd
mov
or
xor
dec
lahf
test
cmp
into
inc
int
out
xchg
dec
and
lcall
sbb
push
inc
mov
les
mov
or
inc
dec
xor
ret
movsl
dec
outsb
mul
rcll
xchg
jne
pop
push
insb
test
pop
pop
iret
push
pop
test
pop
arpl
sahf
pop
mov
or
insl
push
inc
addr16
sahf
jno
cmpl
mov
push
cs
add
cmp
stc
and
sub
jle
mov
xor
in
cwtl
popa
aas
in
fwait
mov
jnp
loope
aad
push
mov
xor
in
sbb
test
ljmp
jo
std
cli
push
jns
sub
jb
xrelease
add
push
inc
mov
sub
sub
ss
cli
push
loopne
stc
inc
fisubs
lods
push
lss
out
pushf
pop
inc
dec
inc
xor
pop
add
loope
and
cmp
ret
mov
xor
xchg
push
gs
loop
adc
cmpsb
push
and
sti
dec
lock
movsb
into
mov
mov
add
jge
ret
sub
stos
and
cmp
rol
xchg
and
sbb
pop
hlt
cmpsb
sub
sub
fxrstor
out
cmp
paddq
jl
add
mov
inc
gs
xchg
adc
fisubl
push
pop
xchg
data16
mov
pop
push
hlt
sti
or
mov
inc
push
push
test
xor
push
mov
and
ficompl
pushf
sub
mov
lds
subl
into
cmc
xor
cld
or
and
leave
sti
hlt
shrl
sub
xor
outsl
or
arpl
cmp
xchg
push
imul
cmpsl
push
stc
cwtl
test
into
clc
mov
mov
rorl
stos
dec
out
adc
push
cltd
gs
mov
das
xor
push
xchg
inc
test
sub
pusha
repnz
adc
push
rcrl
and
adc
jne
inc
pop
add
mov
push
les
leave
xor
sub
sbb
ljmp
popl
sub
bound
xchg
stos
lods
les
out
addr16
stos
out
dec
das
xorb
sub
xor
dec
mov
add
in
jno
mov
and
inc
push
push
leave
mov
daa
aaa
xchg
mov
mov
fs
loopne
mul
repnz
push
push
fldl
mov
or
adc
cld
inc
or
jae
xchg
and
jge
test
xor
lcall
jb
ss
test
xor
mov
fdivrl
out
bound
add
lds
jb
test
stos
nop
pushf
mov
out
xchg
xchg
lahf
sarb
mov
xchg
addr16
add
push
cmp
adc
dec
sahf
mov
push
icebp
fdivl
aaa
inc
inc
aam
ja
sub
add
test
bound
test
rorb
mov
into
aam
and
or
inc
sbb
fwait
adc
lcall
and
mov
outsb
fs
cmp
cmp
adc
div
notl
adc
negb
sub
loope
inc
dec
cmp
mov
lds
mov
mov
xchg
sub
rorl
daa
push
pop
push
sar
add
lea
xchg
mov
icebp
push
decb
mov
inc
faddp
cmpsb
jne
jle
pop
nop
cvtpi2ps
adc
orb
xchg
pop
jmp
sub
es
andl
orl
mov
sbb
push
inc
mov
mov
into
mov
xor
in
es
mov
xlat
push
push
ret
push
pop
mov
fwait
or
fidivl
test
dec
lds
repz
jae
in
pop
dec
stc
jo
cmp
sub
mov
jo
push
lcall
in
dec
and
mov
cmp
jbe
inc
gs
add
pop
push
xor
stos
lahf
outsb
dec
cltd
movsl
cwtl
add
pop
xchg
sub
enter
mov
roll
sbb
jge
aad
xchg
idivl
jmp
adc
mov
add
sub
jmp
push
shr
mov
call
in
xlat
jl
mov
dec
in
adc
jge
mov
cld
rcll
push
pop
jo
lods
jle
push
aaa
adc
cmc
js
cmpsl
jmp
ret
jns
jmp
push
mov
pop
mov
jecxz
xlat
stc
notl
pusha
call
or
cmp
icebp
mov
inc
mov
ljmp
pop
xchg
and
inc
ja
cltd
mov
insb
cmp
push
cmp
pusha
push
push
sub
mov
push
sbb
or
cmp
out
jae
jno
cmp
sub
jbe
add
in
xor
lods
sbb
loopne
rep
popa
sub
movsl
aaa
jg
loop
fdiv
mov
and
paddusw
sub
mov
xlat
cmp
sbb
fwait
cmpl
imul
pop
cmc
adc
aad
clc
imul
lcall
stc
imulb
jp
std
push
pop
aad
pushl
inc
and
aam
dec
add
add
pop
push
adc
xor
std
out
cmp
ljmp
imul
daa
popa
test
clc
xchg
mov
sarb
notb
xor
pop
int3
fistl
aad
dec
test
push
data16
je
xchg
sbbl
loop
xchg
scas
sbb
xlat
aas
xchg
ror
sub
push
sub
lods
popa
push
jle
lret
mov
mov
nop
mov
xor
rolb
adc
xchg
fwait
movsl
add
mov
cmp
add
data16
inc
fstl
inc
cmp
inc
mov
jecxz
fucom
aad
repnz
cwtl
or
push
fisubs
dec
jae
mov
leave
xor
pop
clc
push
iret
out
je
dec
cmp
and
sbb
addl
sbb
and
cmc
inc
shl
dec
stos
pusha
lods
adc
sbb
outsb
jmp
inc
add
mov
add
xor
out
sub
mov
pop
jge
in
mov
and
inc
and
fwait
testb
xchg
dec
out
stos
addr16
lret
add
mov
das
jle
lea
dec
lcall
xor
sbb
int3
cwtl
jb
jbe
jno
mov
push
xchg
inc
inc
call
jmp
mov
ffreep
aas
sub
mov
and
sbb
shrd
lods
inc
push
and
insb
in
inc
xor
loopne
jbe
mov
movb
jb
lret
gs
jg
cmp
xchg
add
mov
daa
jo
fsubrs
addr16
cmp
xorl
mov
aad
pop
ljmp
aam
aam
lods
xchg
push
push
and
in
into
popa
jbe
add
pushf
popf
lea
push
xor
mov
xor
out
jmp
jns
sarb
scas
ljmp
dec
xchg
scas
xchg
cwtl
dec
mov
lcall
push
std
push
call
inc
mov
mov
xor
mov
and
std
adc
test
loopne
push
sub
out
cltd
mov
jno
add
adc
push
push
std
add
stos
xchg
imul
mov
in
into
in
gs
cmp
pop
popa
pop
pop
imul
not
int
cmp
sbb
imul
cmp
rcl
xor
lret
jmp
mov
dec
or
adc
jae
dec
jb
insb
outsb
cmpsb
movsb
divb
popa
push
pop
loop
cmp
sbb
in
jnp
mov
jl
lds
add
push
push
jge
dec
popa
bound
or
add
push
enter
sub
dec
js
jg
sub
cli
cmpb
jne
push
mov
stos
pusha
xchg
repnz
cmp
adc
push
fdiv
daa
movsl
testl
xlat
ss
push
adc
fidivs
cld
js
popa
aam
adc
in
lret
xchg
jmp
dec
call
out
jbe
jbe
pop
sbb
fdivrp
imul
and
push
xchg
imulb
or
cmc
sbb
lods
pop
int
aaa
pop
fdivs
adc
pop
ret
arpl
adc
int3
les
and
enter
jno
jp
js
sbb
icebp
notl
shll
jo
dec
insl
inc
out
je
mov
adc
jg
lock
out
data16
jp
adc
lock
push
rclb
nop
jecxz
mov
imul
pop
jo
and
cmpsl
call
lods
adc
popf
pop
jge
jg
mov
popf
mov
pminsw
add
push
pop
jmp
cwtl
inc
ja
mov
xchg
add
sbb
xchg
or
lcall
sahf
dec
jg
addr16
add
push
xlat
mov
fcmove
mov
adc
jmp
push
mov
dec
mov
mov
or
lahf
jg
outsb
outsb
leave
mov
in
into
pushf
orl
out
out
cmpsb
and
adc
pushf
push
mov
popa
shl
cmp
mov
xor
enter
push
or
mov
popf
jl
dec
xchg
mov
xchg
push
cmpsl
in
adc
jbe
test
push
push
popa
adc
gs
sahf
dec
push
aas
les
sbb
xor
inc
scas
fcmovne
xlat
xchg
dec
cld
xlat
inc
scas
sbb
notl
out
inc
cmp
sub
je
or
lods
movsl
les
fisttpll
mov
adc
in
add
xor
or
and
ds
pushf
mov
mov
cmc
lds
xor
dec
enter
mov
mov
xor
push
fstpl
xchg
sbb
fdivl
dec
xchg
dec
xchg
cwtl
lret
jae
adc
pusha
aad
and
stos
add
aad
popa
xlat
xor
cmp
sub
push
mov
popf
jns
aad
pop
and
sbb
jno
setns
push
sbb
push
jle
pusha
jle
in
push
popf
adc
rolb
ret
xor
push
sbbl
jne
sub
inc
rorb
push
popl
add
inc
ds
test
mov
mov
or
int3
sbb
clc
push
out
cmpsb
and
call
test
jmp
cmpsl
cmp
outsb
rorb
cmpsb
in
cmovo
pop
shl
dec
pop
imul
inc
push
mov
ljmp
mov
scas
lods
jbe
dec
mov
adc
push
adc
lods
push
mov
jnp
dec
cmpsb
fisubrl
inc
jge
call
subl
sub
paddd
mov
sbb
pushf
clc
dec
or
inc
mov
mov
mov
jg
movsl
xchg
pop
push
cmc
push
fstl
dec
rcrb
mov
stos
jl
xor
repz
ds
jle
sarb
fnstsw
pop
mov
jne
lret
cmp
mov
pop
out
sub
not
cmpsl
in
rcpps
adc
or
pusha
movl
push
inc
cmpsl
cmpsl
pop
jb
or
movsb
stos
mov
icebp
je
and
xchg
mov
es
and
stos
sub
mov
in
push
in
cli
aaa
loopne
sbb
aas
inc
int
in
in
push
cld
xchg
sbb
lds
out
bt
mov
push
cld
dec
bound
popa
outsb
push
data16
or
ret
adc
ss
sub
repnz
mov
mov
int3
lods
sbb
mov
adc
xchg
pop
xor
push
xchg
das
insb
lods
cs
out
dec
add
inc
inc
out
je
jae
and
push
cli
js
repnz
jbe
inc
add
enter
or
movsb
fstpt
inc
mov
mov
xchg
addr16
push
xor
es
movsl
fidivs
aas
push
addb
xchg
or
mov
push
sarl
xchg
sub
aaa
test
cmp
mov
loope
jne
push
jbe
mov
cmp
sbb
or
xchg
cmp
pop
rcrb
mov
sbb
dec
xchg
lock
sub
cmp
mov
das
data16
cmp
cmpb
imul
push
fs
stos
loopne
cmp
lahf
jge
jecxz
stos
clc
ret
add
sub
mov
mov
aad
mov
adc
and
outsb
push
dec
inc
cltd
adc
or
cmp
sahf
popf
pushf
xor
lds
sbb
push
cmp
repnz
push
and
mov
ret
stos
repnz
clc
inc
jle
mov
mov
incl
pop
insl
lods
leave
and
jno
repz
loopne
or
add
cwtl
xchg
in
es
xlat
data16
inc
popf
out
inc
or
pop
cmp
xchg
adc
ja
sahf
mov
test
hlt
and
pop
ljmp
cmp
std
mov
stc
jg
mov
movsb
xchg
shlb
js
ljmp
aaa
fimuls
inc
mov
cld
mov
fs
jl,pt
mov
mov
fwait
xor
jl
dec
and
test
ss
iret
dec
sub
imul
cli
lret
movb
cmp
cld
push
cli
adc
pop
pusha
sahf
inc
scas
push
adc
fwait
cmp
test
testl
sub
out
mov
daa
push
cmp
jge
adc
jg
xchg
xor
pop
xor
cmpsl
les
jmp
rorb
pushf
or
pop
mov
mov
mov
fbstp
fldcw
inc
jge
mov
mul
mov
fbstp
jns
and
mov
outsl
test
mov
push
lcall
lret
shl
je
sub
xchg
xchg
cmpsl
iret
push
pop
pop
lahf
addr16
jae
jae
sbb
ret
jge
dec
out
cmpl
cmp
ds
xlat
fcoml
decb
enter
xchg
pusha
or
rcrl
fxch
mov
push
lods
mov
outsl
cmp
outsl
and
data16
mov
pop
ds
es
ds
cmp
xor
scas
lods
inc
pop
mov
aam
and
sbb
enter
les
inc
imul
movsb
add
xchg
pop
scas
pop
stos
movsl
ljmp
mov
jge
push
or
add
lret
mov
rolb
xor
and
imul
dec
mov
lds
lea
insb
fbstp
int
jge
pop
mov
push
insl
sti
xor
mov
cli
lret
or
stc
pop
push
adc
fisttpll
or
mov
mov
shlb
shl
gs
and
mov
in
shrb
and
dec
adc
data16
xchg
gs
shr
sbb
mov
ss
or
inc
push
push
mov
jg
mov
sbb
bnd
xchg
sbb
outsl
cs
cmp
xchg
mov
test
loop
mov
xchg
pusha
xchg
outsb
sub
test
pop
fldcw
dec
int
iret
add
jge
mov
icebp
cwtl
pop
dec
push
add
pusha
jo
pop
mov
shlb
jno
scas
inc
mov
shll
pop
cmp
jo
sbb
fcmovnbe
clc
inc
lea
aas
jmp
cmp
popl
or
inc
in
xlat
arpl
in
fstpt
xchg
outsl
cmovne
mov
add
lcall
js
sub
cmp
hlt
xor
lods
fcoms
fcoml
out
push
stos
movsl
add
in
push
or
andl
push
adc
jge
std
setnp
dec
test
scas
adc
fistpl
xor
fsubrl
push
push
shr
mov
xor
das
cltd
loopne
pop
jb
adc
sbb
ja
shl
add
adc
pusha
cmpb
mov
sub
dec
fs
xor
movsb
arpl
ljmp
dec
out
les
addr16
jnp
pop
pop
inc
inc
int
and
filds
ljmpw
dec
xor
stos
mov
xor
inc
xchg
cmp
inc
in
movsb
fwait
loopne
ja
pop
add
add
test
cmp
enter
in
sub
aas
inc
jge
xchg
addr16
in
idivl
fdivs
lock
xchg
push
popf
pusha
mov
jge
mov
pushf
int
sti
xchg
add
in
or
push
adc
ss
dec
pop
leave
mov
lods
jo
mov
les
test
xor
jmp
dec
ficoms
pusha
jp
cmpb
lret
lock
in
dec
not
bound
push
pop
aaa
push
mov
inc
dec
pushf
pop
cmc
mov
mov
xlat
cld
and
cmp
lret
les
jne
or
push
decb
aaa
fistpll
pushf
jle
cmpsb
add
out
and
ret
cmp
cwtl
add
arpl
mov
push
mov
rcll
mov
lods
mov
mov
mov
cwtl
mov
inc
xchg
popf
leave
iret
and
lret
test
jns
mov
out
cmp
sbb
loope
lock
jge
mov
and
and
mov
psllw
sub
call
inc
jle
or
cmpl
xchg
lock
xchg
inc
popa
pushl
and
inc
jbe
mov
pop
mov
stos
lock
loope
push
loopne
sub
xor
and
sub
xor
cmpsb
fcoml
pop
push
dec
scas
mov
cmp
stos
adc
pop
xchg
pushf
daa
aaa
test
push
jecxz
xor
lds
cmpsb
adc
pop
and
dec
sbb
cmp
fwait
inc
mov
testl
lods
and
scas
xchg
sub
add
mov
jae
mov
push
mov
hlt
adc
lret
in
xchg
movsl
xchg
jmp
inc
mov
sbb
xchg
incl
mov
outsl
aad
xor
out
pop
xor
mov
sbb
cli
stos
cmp
in
sub
jne
bound
popf
xlat
xor
xlat
leave
hlt
ret
mov
add
cmc
push
mov
es
andb
sbb
pop
test
daa
scas
lahf
scas
cmp
cmpsl
adc
pop
xchg
xchg
pop
push
and
add
das
sub
cwtl
cmpsb
xchg
fidivrl
daa
push
sbb
sub
repz
sub
std
push
fdivl
or
add
mov
std
les
rorb
jle
and
addb
in
test
aaa
or
loop
mov
mov
or
decb
repz
xchg
push
adcl
lock
cld
jmp
shrl
dec
push
dec
std
in
mov
loop
in
inc
out
xor
mov
lret
addr16
and
mov
jno
test
arpl
mov
and
enter
shl
jge
xor
push
mov
stos
dec
mov
mov
mov
push
cmp
ja
jo
in
sbb
push
out
pop
add
and
push
leave
push
mov
cs
sahf
mov
xor
xchg
jo
icebp
sbb
cli
push
jge
loopne
push
stc
outsl
add
mov
push
fwait
in
or
mov
push
jno
sbb
mov
daa
jns
jns
decl
scas
dec
mov
icebp
push
out
aaa
data16
fwait
js
rcrl
sti
xchg
es
movsb
add
pop
bound
jne
sub
cmpsl
addr16
je
xchg
jp
insb
sbb
cwtl
sahf
ja
imul
iret
push
repz
shll
cmpsl
push
cmp
xor
outsl
enter
add
sbb
in
aad
push
jb
or
rcrl
lock
lea
sbb
mov
outsl
dec
mov
test
loop
and
lea
sbb
cmp
outsl
iret
repz
or
into
adc
cmc
jno
test
pop
mov
insl
mov
fs
int3
sub
rcrb
pop
popf
adc
hlt
jge
dec
cmp
dec
rolb
add
adc
jmp
cmp
repnz
xchg
sub
push
insl
ret
sahf
cmpsb
mov
movsl
repz
cmp
xchg
sub
hlt
enter
call
scas
aam
cmp
popa
cli
mov
or
and
loope
pop
mov
adc
jge
gs
pushf
xlat
and
cmp
add
call
inc
sbbl
mov
jno
sti
imul
ret
pop
js
push
mov
jns
ficomps
std
mov
rcrb
add
mov
push
rcr
xchg
push
pop
lea
cmp
dec
inc
sbb
lds
pop
rolb
push
push
daa
orl
add
leave
arpl
mov
aaa
popl
mov
loop
pop
xchg
clc
xchg
cld
mov
fsub
mov
enter
xchg
pop
and
popf
aad
loopne
or
hlt
cmp
pop
push
jb
lds
cmc
mov
xor
xchg
and
sbb
jae
das
loope
addb
cltd
add
fmull
push
xor
mov
mov
push
jb
xor
inc
stos
push
je
cs
xor
stc
je
mov
mov
je
stc
pusha
arpl
dec
repz
aaa
xor
or
ret
jle
addb
mov
jp
push
stos
and
mov
xchg
stos
lock
mov
dec
mov
inc
stc
xlat
adc
mov
lods
in
insl
jle
jbe
mov
and
fnstenv
fucomip
pop
fdivp
mov
insl
xor
into
lea
xor
insl
pop
sbb
xchg
inc
xchg
rclb
in
or
push
fnstenv
sbb
outsl
mov
loope
adc
scas
pop
sbb
aad
fcomps
std
shll
cmp
mov
mov
int3
aaa
mov
xchg
push
mov
mov
clc
fidivs
insl
or
or
rol
sbb
cmc
insb
fmul
sqrtps
dec
xor
xchg
push
les
jns
rorl
in
or
dec
push
inc
int3
or
push
pop
cmc
adc
lds
lods
negl
mov
fisubrs
add
inc
push
pop
mov
pop
mov
loop
clc
out
inc
enter
fcmovnu
test
jl
imul
mov
fldenv
sub
or
lods
jle
add
push
popa
sti
ret
ret
mov
dec
out
test
jp
sbb
mov
cmp
inc
push
and
cmpsl
or
ljmp
jno
cmpsl
adc
mov
and
inc
sub
and
cli
adc
mov
addr16
in
jns
jnp
mov
dec
test
jg
and
stos
sub
fistl
frstpm(287
add
cwtl
jmp
ret
cmp
xchg
ljmp
dec
jle
imul
shr
aas
sbb
push
adc
cmpb
pop
and
jle
enter
pop
mov
andl
and
fidivrs
clc
push
add
fadds
ljmp
dec
lea
repz
add
fprem
xchg
xchg
mov
imull
push
add
mov
out
std
add
mov
xchg
insl
and
adc
popl
mov
popa
stc
lcall
push
scas
mov
inc
or
push
cmp
mov
pop
mov
fidivrs
xor
daa
xchg
jnp
out
out
sbbl
jo
xchg
xchg
xor
xor
into
dec
fistl
sub
push
call
ljmp
imul
xchg
popf
adc
push
cmp
mov
pop
popf
mov
das
out
add
in
ret
imul
stc
test
pop
lds
xchg
xchg
out
int3
adc
imul
mov
outsb
add
or
into
mov
or
jb
and
lret
jne
pop
lcall
and
les
out
and
dec
int3
aam
jo
and
rol
adc
jg
mov
add
rcrl
adc
sub
add
cmc
ja
stc
cmp
mov
and
int
and
iret
cmpb
pop
insb
fsubp
sahf
out
mov
cmc
popa
xchg
lea
mov
mov
and
xchg
or
pop
fs
mov
sar
push
pop
in
adc
data16
clc
into
dec
xchg
push
inc
mov
sub
pop
and
adc
addr16
add
jl
cmp
mov
xor
int3
std
loop
cmp
and
inc
ja
sub
push
pop
icebp
ret
jge
fmull
lds
or
push
movsl
push
and
int
js
fsts
push
ljmp
mov
jmp
lock
sbb
out
daa
dec
or
lods
jmp
fstpt
bound
dec
xor
add
cmpsb
jg
ds
adc
pop
xor
sub
or
cli
cmp
xchg
outsb
ds
mov
fldt
scas
in
insl
and
repnz
lds
inc
add
sbb
lret
in
pushf
stos
pop
or
movsb
xchg
push
out
movsb
ljmp
dec
jb
jg
dec
lds
loopne
and
pusha
push
movsb
cmp
sub
inc
js
btr
lcall
and
test
mov
fisttpl
enter
cmpsl
dec
push
xchg
fbld
data16
rorb
ret
mov
jbe
je
fcoms
jecxz
adc
mov
inc
fsubr
sub
enter
sub
jl
test
dec
aad
cmp
fnstsw
sahf
std
inc
mov
fucomp
int3
dec
gs
adc
fisubrs
cmp
mov
adcb
cmp
jmp
push
nop
movsl
outsl
mov
decl
insb
jge
scas
hlt
or
or
sarb
xlat
adc
popa
sub
mov
xor
adc
decl
jmp
dec
ds
lahf
xor
popa
ljmp
imul
ret
or
cwtl
and
mov
jp
xchg
mov
jg
shrl
rcrb
stc
mov
pop
adc
les
notl
mov
data16
dec
fwait
cmc
xchg
clc
pop
xchg
push
cmc
inc
int3
inc
mov
adc
aas
add
push
scas
pop
xor
daa
callw
mov
imul
sub
inc
mov
mov
cli
mov
sbb
xor
pushl
inc
cltd
fists
dec
inc
and
push
addr16
aas
mov
and
test
push
or
inc
mov
pop
dec
loope
js
test
imul
push
imul
lods
test
jp
xchg
roll
xchg
fidivl
lds
jg
mov
mov
push
stos
cmp
sbb
mov
out
fwait
mov
and
adc
ds
push
daa
jge
aaa
push
cmp
xchg
cmp
test
cmp
ja
push
sbb
repz
std
lods
mov
cwtl
xchg
test
loopne
and
out
lods
add
lea
xor
dec
pop
mov
es
test
pop
nop
add
push
pop
xor
out
cs
sub
js
fisubs
cmpb
sbb
gs
adcb
in
call
or
cmp
push
subb
adc
jmp
pop
jae
cmp
imul
xchg
mov
repz
fsts
push
push
pop
dec
test
bound
dec
add
xchg
pop
mov
sub
mov
stc
lock
mov
imul
cmpsb
andb
dec
aaa
mov
loope
cmp
sub
popa
xchg
or
mov
mov
add
and
mov
je
jns
cmp
and
pop
leave
mul
gs
sahf
cli
movsb
push
fdivrs
test
data16
pop
or
dec
adc
dec
pop
inc
movb
push
dec
jl
push
stc
int3
push
jecxz
jno
rcrl
incl
loopne
in
xor
fdivl
test
cli
loop
dec
adc
out
mov
test
or
or
fistl
cwtl
ret
add
add
adc
add
fxch
lahf
mov
and
loop
movsb
popa
fadd
sbb
pop
xchg
in
push
call
scas
adc
push
arpl
push
flds
mov
sbb
es
fs
dec
push
dec
mov
cmp
or
stos
mov
pop
cmp
into
dec
or
out
fcmovnbe
sti
add
sbb
lret
ja
mov
cmpsb
xor
in
pop
fsubs
sbb
aaa
add
frstor
push
sbb
in
fisubrl
daa
jb
xor
pop
nop
insb
cmp
enter
movsl
xchg
lahf
inc
int
out
and
adc
insb
xor
add
sbb
sub
insl
sub
mov
nop
xor
adc
ret
test
push
lcall
das
xor
lea
in
xor
cltd
lcall
iret
call
clc
movsb
inc
jnp
and
aas
jne
loope
mov
pmuludq
ds
data16
mov
xor
sub
pop
shlb
mov
sbb
cwtl
aas
insl
mov
and
inc
mov
call
and
pop
inc
imul
icebp
cmp
mov
inc
pop
mov
xor
mov
xorb
lret
sarb
out
adc
out
movsl
push
mov
outsl
cmp
rep
or
sti
cmpsl
add
in
clc
ret
pop
lret
pop
rcrb
dec
adc
inc
rclb
fucomi
test
push
aam
sbb
cmp
xchg
je
stos
mov
jmp
insb
dec
push
dec
mov
repnz
loop
pop
jecxz
xor
mov
cmp
inc
pop
push
add
fbstp
jnp
cmpsb
arpl
jb
insl
pop
out
push
cmc
jle
fs
or
jl
or
mov
mov
or
mov
push
data16
push
pusha
sahf
cwtl
add
mov
push
das
icebp
fdivrl
or
lock
dec
mov
push
mov
pop
adc
out
push
movsb
cmp
push
shlb
clc
loopne
xchg
or
mov
mov
jae
jne
cmp
inc
andl
sbb
xchg
and
insb
cld
mov
add
mov
insl
mov
inc
xor
dec
testl
xor
cmp
adc
lods
out
in
outsb
push
sbb
out
and
sbb
push
adc
adc
inc
hlt
bound
jo
and
lds
sbb
inc
iret
gs
dec
testl
fstpt
mov
adc
roll
jbe
test
mov
xor
inc
mov
inc
push
ret
fcmovnbe
jmp
dec
inc
aas
aam
jno
shll
loope
xlat
popa
imul
loopne
insl
push
mov
bound
pandn
in
gs
or
mov
push
xchg
sub
mov
xchg
mov
jle
mov
pushf
and
cmpl
out
xchg
rorl
adc
dec
add
mov
xor
ror
or
cli
xchg
outsl
mov
xchg
repz
lret
or
popa
add
ja
and
inc
xorl
xor
lds
mov
sub
repz
push
rclb
cltd
xor
push
push
ficoml
shlb
push
xchg
fadds
ds
mov
cmpsb
and
mov
andb
add
dec
lret
xor
mov
adc
pop
and
imul
mov
cltd
mov
sahf
lcall
pop
in
andl
mov
fdecstp
jb
test
frndint
pop
out
mov
or
cmp
arpl
insb
mov
jnp
int3
push
adc
jne
or
iret
ret
sahf
addr16
mov
adc
dec
bound
lcall
adc
or
lret
mov
ljmp
xchg
fcomps
pop
push
jo
das
mov
mov
repnz
js
mov
mov
pop
xchg
rcl
xor
lea
cld
jae
jne
into
pop
push
or
ret
cmp
inc
nop
push
mov
xchg
push
aaa
in
cmpsb
pusha
xchg
sbb
shlb
mov
pop
push
dec
xor
mov
cs
pop
push
lods
data16
inc
stc
std
mov
cld
adc
rclb
sbb
in
rcl
mov
addr16
pop
insl
and
js
and
popl
pop
inc
xor
jmp
dec
lcall
xchg
xorl
imul
aas
test
roll
imul
sti
jb
loopne
cltd
jmp
xchg
imul
and
outsl
or
shl
mov
mov
mov
jg
in
fstl
loop
jne
or
lock
cmp
sbb
mov
xorb
pop
ret
jno
fnsave
sbb
mov
push
mov
xchg
fdivrl
mov
les
dec
push
xor
inc
cmp
cmp
mov
std
pop
jb
jl
or
lcall
push
jge
inc
insb
int
pop
xor
inc
imul
mov
inc
dec
shrl
test
xor
das
int3
imul
incb
das
aas
scas
jmp
pop
dec
mov
xor
loope
subb
add
sbb
xor
nop
add
adc
xor
xchg
jns
jle
pushf
or
sub
xchg
jno
mov
enter
or
std
sub
sbb
pop
sbb
fidivrs
pushf
popa
insl
add
jmp
imul
int
mov
iret
jle
push
nop
or
jb
iret
lcall
jbe
testb
sbb
push
mulb
cmp
add
dec
add
pop
imul
dec
pop
aam
aad
pop
mov
std
lock
pushf
jo
adc
stos
sbb
ret
xchg
dec
adcb
fldz
push
mov
xchg
xchg
xor
ret
fsub
jae
and
inc
ficoms
into
sbb
pushf
loopne
and
inc
pop
hlt
and
outsb
aad
out
pop
fcomps
sub
ss
jno
xchg
ret
jl
insl
sbb
xor
es
and
fldcw
cmp
inc
xorl
test
xchg
fs
sub
xor
loopne
fimull
add
mov
push
insb
pop
xor
mov
xlat
out
inc
pop
xchg
scas
ljmp
stos
popa
ds
hlt
mov
push
push
mov
or
in
xor
idivl
flds
sbb
push
add
inc
icebp
ss
dec
js,pn
pop
mov
dec
nop
iret
aam
mov
mov
push
mov
cmpsl
sbb
mov
and
sbb
loopne
or
dec
popf
fdivrs
mov
repnz
not
mov
lea
lahf
xchg
fs
data16
popf
sbb
cli
outsl
adc
adc
jnp
or
loope
dec
sbb
jnp
ja
test
sarl
rorb
loope
inc
cmp
repnz
inc
je
xchg
cmp
push
cmp
xor
fcoms
sbb
jbe
lds
xor
mov
add
inc
push
jno
int3
xor
std
sub
push
mov
loop
sub
cld
mov
ja
call
test
mov
out
pusha
fidivrl
das
fisubs
insl
jne
mov
outsb
and
sbb
jb
xchg
test
jle
flds
sti
cwtl
fisttpl
jno,pt
subb
cmpsb
cld
adc
shl
and
nop
bound
pop
mov
pop
scas
lods
cmp
in
mov
jmp
and
cmovns
push
call
mov
lods
dec
ret
pop
stos
mov
or
cmp
mov
fwait
jle
push
ja
mov
popa
xchg
or
ja
loopne
fimuls
js
mov
loop
ja
cs
pop
push
inc
fbstp
outsb
fmulp
std
flds
addr16
pushf
mov
mov
out
sbb
cmp
mov
and
cmpsl
sarb
or
mov
xchg
aaa
pop
jbe
insl
jbe
decb
nop
and
inc
ret
xchg
aas
arpl
lahf
loopne
add
loope
add
xor
je
sbb
mov
insb
push
sahf
inc
dec
push
lcall
adc
inc
xor
mov
xchg
pop
dec
push
icebp
jg
pop
jbe
sbb
sbb
cmp
pop
stc
jb
mov
nop
fcmovbe
add
push
cmp
rorb
mov
imul
mov
pop
mov
insl
aaa
jle
rcr
push
xor
push
es
hlt
fsin
xchg
out
jecxz
ja
rol
mov
stos
sti
push
test
sbb
push
lds
pop
fisubrl
lret
dec
inc
in
inc
or
mov
sbb
es
mov
pop
adc
mov
iret
jp
pop
pushl
test
mov
fcom
cmc
notl
jge
out
sub
pop
cmp
movsl
in
pop
mov
shr
push
xor
cmp
movsl
jge
jecxz
pop
lock
dec
fsubrl
cmc
movsb
mov
pop
xchg
loope
ds
dec
jecxz
out
mov
mov
jmp
dec
and
cmpsb
loop
sbb
jo
pop
sub
push
stos
sub
or
sahf
or
add
pop
mov
or
into
test
cmp
dec
pushf
push
fistpl
stos
inc
push
jns
sti
pop
data16
jns
outsl
adc
xchg
movsb
popf
das
push
lcall
xlat
push
lods
addr16
mov
mov
cmp
sub
cmp
pop
sub
fisttpl
subb
pop
mov
das
mov
insb
insb
or
je
adc
in
test
push
out
out
sub
and
fisubrl
shlb
or
stc
out
cltd
out
cmpsl
lahf
int
insl
int3
xchg
std
mov
jbe
jmp
sbb
xor
cmpl
subl
icebp
fildll
adcl
jns
pop
subl
dec
test
aad
xor
icebp
div
sbb
push
sub
sti
sbbb
movsb
sub
inc
xchg
mov
or
movsb
cwtl
ss
loopne
ret
mov
sbb
add
dec
push
jecxz
test
jmp
std
movsl
push
shlb
push
xchg
lret
jle
das
mov
aad
dec
push
movsl
add
insb
subb
jl
or
cmc
mov
cli
pop
and
xchg
or
mov
stos
jne
je
add
mov
fnstsw
xchg
jl
les
jbe
sbb
fldt
shr
lods
les
mov
xor
xchg
iret
lret
int
mov
ds
test
push
out
les
je
fiaddl
sbb
adc
sub
xor
jge
cmp
dec
mov
sub
addr16
mov
aaa
stos
dec
cld
shrb
cmp
clc
sub
aad
stos
xor
jno
add
jle
sbb
imul
xor
sbb
decb
sbb
push
xor
pop
int
test
fs
mov
push
out
aam
orb
and
pop
mov
ss
cmp
addr16
fidivrs
mov
leavew
loopne
test
enter
mov
mov
in
xor
jnp
test
or
jae
cmp
imul
push
adc
inc
imul
data16
imul
adc
add
dec
adc
imul
les
pop
dec
mov
lods
out
fcmovne
xlat
ja
js
aaa
rcrb
pop
daa
sbb
adcb
sub
jns
adc
pusha
push
imul
push
fbld
lret
pop
inc
xlat
and
out
xor
xor
icebp
dec
push
cmpsb
xor
push
mov
gs
fmuls
sub
call
xor
shl
push
sbb
sub
inc
jo
lahf
js
out
iret
cs
ret
push
lds
cwtl
sbb
jo
dec
lock
hlt
xchg
adc
test
mov
inc
mov
cmc
or
loop
popa
push
adc
xchg
dec
pop
iret
adc
push
sar
inc
rol
fdivr
movsl
insb
or
test
stos
mov
lock
test
sub
pop
inc
pusha
cld
pop
mov
jmp
push
into
jns
mov
jmp
aaa
shrb
xor
push
sahf
sbb
insl
mov
call
in
push
mov
add
inc
stc
int3
fdivrs
ljmp
mov
dec
sahf
shll
add
pop
xchg
jbe
cmp
into
loope
call
and
adc
inc
incl
repz
push
or
dec
scas
mov
sub
jecxz
xor
out
out
addl
arpl
or
mov
out
lock
push
js
or
sub
std
into
lret
dec
cmp
pop
sub
sub
mov
outsl
inc
mov
inc
mov
xchg
inc
cmp
cmp
xor
lods
sub
js
out
cmc
add
pop
mov
jmp
dec
mov
mov
mov
leave
fldln2
imull
adc
pop
inc
jbe
and
and
stos
cs
pop
xchg
jp
dec
ds
insl
popa
sbb
cmp
mov
inc
inc
xor
jae
pop
arpl
and
stc
in
in
fisttpll
adc
or
fmulp
adc
xor
les
mov
jo
ret
clc
stos
outsl
movsl
and
shl
dec
inc
ret
xchg
mov
dec
test
call
cmp
stc
jmp
hlt
test
mov
sub
mov
add
lahf
sbb
ret
repnz
es
in
mov
push
push
and
movsl
xchg
push
push
inc
loope
sarl
cwtl
xor
call
push
mov
lcall
and
jae
out
rep
or
inc
in
or
xlat
lods
clc
xlat
in
mov
cli
adc
add
cld
int
or
mov
movsl
imul
adc
lea
sbb
cmpsb
jg
lods
sub
push
push
pop
pop
mov
in
push
scas
lock
pop
lret
or
push
adc
push
fcompl
cli
push
mov
in
sub
push
pop
jns
ja
aam
pop
mov
in
stos
mov
lahf
stos
rorl
add
into
ljmp
cwtl
repnz
mov
and
push
aaa
rclb
mov
sub
dec
lret
jl
xor
mov
push
and
in
or
popf
aam
fisubrl
sti
mov
rcrb
cld
scas
testb
mov
sbb
int3
hlt
andl
pop
orb
lahf
sbb
xchg
lods
mov
shll
pop
pop
movsl
push
inc
lock
and
or
push
push
jecxz
dec
sarl
mov
cmp
adc
adc
movsl
or
sub
movsl
lret
push
mov
nop
adc
inc
xchg
cmpxchg
or
out
add
in
mov
fs
cmpsb
out
xor
pop
cmpsb
pop
outsl
loope
jp
xor
dec
mov
je
test
dec
pop
fildl
push
jecxz
adc
cmp
jle
js
xor
xchg
pop
out
ljmp
movsb
cmp
xchg
in
js
in
dec
loop
pop
or
mov
pop
push
and
jp
xchg
ret
sarb
lcall
xlat
sbb
jmp
jle
push
add
adc
sub
je
out
sbb
je
idivl
es
shll
int
notb
mov
sub
sbb
xor
inc
xchg
in
cmp
cmp
iret
sub
mov
mov
pop
call
ret
jge
hlt
loope
inc
icebp
loopne
adc
test
imul
xor
outsl
add
fsub
push
aam
test
cmpsb
jb
test
jle
cs
addr16
fnstenv
scas
mov
hlt
pop
or
mov
mov
adc
jne
stos
xlat
addl
ret
loop
lea
rorb
add
or
loope
int
jns
xor
or
and
fwait
jb
es
dec
jle
inc
cmc
xchg
push
mov
xchg
and
imul
loop
mov
adc
jno
out
add
fs
jo
arpl
into
arpl
in
jno
bound
sbb
lds
movsb
xor
add
adc
push
push
mov
lea
push
jmp
nop
inc
or
gs
or
push
rcll
mov
and
pop
std
rcll
shll
bound
xchg
mov
sbb
or
test
and
imul
mov
repnz
dec
mov
mov
mov
mov
cld
int3
dec
testl
xchg
mov
int
test
loop
push
adc
dec
hlt
push
pushf
test
lret
and
ljmp
scas
aas
dec
dec
sub
inc
mov
out
lcall
int
aas
loopne
int3
das
call
sub
push
add
sbb
dec
inc
lahf
lahf
stc
cmp
lcall
mov
inc
out
in
mov
mov
sub
push
push
add
lds
cwtl
add
mov
lds
xor
and
rol
mov
mov
mov
push
loope
push
jno
cs
das
int
rorb
repnz
shrl
imul
lods
mov
mov
xor
lret
jae
insl
inc
adc
cwtd
imul
repnz
pop
jmp
shrb
testb
fmull
sbb
pop
mov
jbe
pop
lret
sbb
mov
pop
dec
imul
mov
fists
xchg
mov
xchg
stos
aad
bswap
pusha
push
gs
mov
ffree
lds
stos
pop
or
test
cmp
pop
dec
jae
xchg
out
scas
clc
pushf
stc
jne
fcomp
push
push
addr16
and
mov
leave
test
mov
push
or
sbb
sbb
jge
jnp
mov
mov
leave
cmp
js
imul
xor
mov
das
inc
xchg
stc
sbb
iret
mov
ljmp
push
stos
add
lcall
sahf
jns
imul
popf
pop
mov
in
cmp
jno
mov
imul
and
push
sbbb
pop
lret
cli
jb
rorb
or
mov
pusha
je
adc
cmc
add
fcompl
pop
push
std
jle
push
lds
bound
inc
testb
lahf
push
imul
cmpsb
or
sahf
iret
lea
jge
jp
ss
cmpb
sub
pop
lods
je
decl
mov
add
mov
jl
and
lods
lret
addr16
loope
mov
bound
adc
les
loopne
sar
test
scas
bound
and
enter
int3
dec
mov
push
pop
cmp
jo
hlt
jmp
nop
lret
cmp
insl
lret
loop
aad
rcll
jmp
mov
xlat
mov
arpl
xlat
mov
or
xchg
pop
or
mov
jbe
add
or
imul
std
roll
add
mov
or
mov
xchg
idiv
call
fs
sar
push
sub
lret
lret
adc
pop
rcrb
xor
push
cmp
outsl
std
xor
leave
test
inc
jle
jl
push
ss
sti
ss
les
cli
push
sahf
popa
jle
adc
cmp
idivl
ret
andb
sti
and
int3
test
push
fwait
dec
test
enter
jmp
rol
jl
mov
std
mov
and
insl
sub
shrl
lcall
sub
sub
push
mov
or
or
pushf
mov
sbb
mov
int
ret
stos
fimuls
dec
inc
in
aaa
dec
and
mov
arpl
cmp
xor
in
enter
es
negb
int
movsb
cs
clc
lock
movsl
out
movsl
mov
mov
add
div
test
inc
mov
adc
shrl
hlt
and
je
fcmovne
aam
xchg
adcb
xchg
adc
mov
lret
sbb
shl
sbb
loop
push
add
xchg
adc
mov
orl
sbb
inc
fstl
mov
lods
rorb
mov
in
push
out
push
fsubrl
stos
pushf
ja
mov
frstor
or
scas
movsb
out
loope
in
lcall
push
jmp
dec
push
out
fadds
fidivs
jp
pop
cmp
clc
out
xchg
pop
sub
in
pop
dec
dec
push
cmp
push
mov
aas
pusha
mov
xor
cmpsb
aas
xchg
cmp
ds
clc
push
jmp
push
lds
sub
test
mov
cmp
mov
lcall
sub
cmp
jg
jecxz
orb
jl
xor
mov
sub
xchg
lds
inc
ret
cmp
pop
mov
imul
ss
test
mov
push
mov
loopne,pt
jo
lea
adc
aas
mov
mov
jo
jecxz
push
or
xchg
pusha
shl
ficomps
mov
adc
sarl
out
pop
and
jno
orb
sub
and
nop
sbb
mov
jne
xor
cmc
je
pushf
mov
dec
rcrb
iret
sbb
imul
jnp
push
adc
and
inc
iret
xchg
mov
jge
push
cld
and
sbb
xor
movsl
stc
push
or
inc
push
add
jmp
pop
pop
in
xchg
mov
pop
sbb
out
lods
jge
sub
xor
ss
lcallw
dec
outsb
xlat
es
outsb
sub
mov
sbb
xor
jmp
xchg
push
fists
lahf
lea
mov
movsl
mov
lods
or
outsl
fisubrl
test
xchg
sbb
jae
push
popf
into
fists
sti
clc
mov
add
xlat
add
sub
cmp
sbb
mov
or
call
push
mov
xchg
and
xchg
aas
subb
cmp
subb
sbb
fs
add
adc
cmp
xchg
ljmp
nop
into
movsl
repz
lods
adc
or
sub
add
cmp
sbb
push
out
mov
adc
pusha
fnstcw
mov
dec
jns
xchg
mov
outsl
aaa
js
out
movsl
adcl
dec
sbb
dec
in
insl
mov
cld
rorl
jo
dec
test
dec
push
pop
test
popa
lea
fsincos
push
xchg
int
adc
add
push
in
lret
and
jnp
xor
xchg
lods
push
sub
jge
lods
mull
mov
leave
and
pusha
insb
out
imul
mov
gs
das
sbb
cmpl
sub
or
push
repnz
ret
xchg
push
sub
pop
push
jno
fisubs
xor
arpl
adc
es
pop
xchg
add
out
adc
dec
cli
cld
ret
mov
mov
jl
xor
dec
sub
enter
mov
jp
arpl
je
pusha
mov
mov
dec
sbb
lcall
xor
imul
movsl
pop
leave
sbb
jne
inc
and
xor
sub
and
jp
push
fadd
notb
sbb
add
and
outsl
sub
fstl
pop
xchg
sbb
cld
pop
out
sbb
test
add
jnp
dec
mov
rcrb
aaa
adc
ret
rolb
fstps
lret
lods
push
cli
add
test
add
mov
jns
cmp
daa
test
push
mov
adc
jo
add
jge
call
mov
movsl
or
jno
ds
in
xchg
sbb
xchg
and
adc
arpl
jo
add
bound
sbb
cltd
rcrb
cmp
sbb
call
or
or
pop
pop
sub
jl
adc
xchg
inc
loop
or
or
sbb
sbb
rclb
rorb
test
mov
xor
sub
and
jg
clc
push
out
sbb
pusha
adc
push
dec
stos
arpl
xchg
loop
inc
movsb
cmpsl
fwait
adc
or
add
cs
jecxz
call
rcrb
pop
inc
push
loopne
fwait
xchg
or
in
push
test
outsl
push
mov
imul
lock
dec
sarb
push
mov
pop
aad
push
cmpsl
xchg
icebp
ror
xchg
cmp
aad
and
pop
sbb
xchg
popf
fstpt
sbb
fistpll
dec
add
or
jle
push
lahf
push
scas
mov
mov
clc
sbb
pop
repz
out
xchg
dec
add
lret
scas
lahf
js
or
push
jl
iret
fmull
aas
mov
xchg
jne
es
mov
adc
fstps
jae
jmp
imul
xchg
push
sub
insl
test
jge
or
lock
pop
test
mov
lcall
push
inc
or
add
mov
pop
and
xor
xchg
jge
divl
sub
mov
enter
ret
xorb
mov
movsl
movsl
inc
jo
mov
cltd
pop
fnstcw
inc
mov
fstpt
xchg
pop
add
rclb
gs
sbb
scas
mov
aaa
xchg
jno
xchg
xchg
mov
adc
fwait
repnz
lods
jae
adc
clc
push
cli
je
inc
aas
adc
jge
cmp
sub
dec
roll
add
cmp
popa
push
out
sti
push
clc
inc
jne
xchg
cwtl
or
lea
inc
mov
or
jg
mov
stos
xor
cs
stos
outsb
push
adc
jo
dec
ret
mov
jnp
int
cli
pushf
xchg
sarb
dec
cld
test
in
imull
iret
arpl
or
push
daa
popf
xchg
dec
shll
and
inc
dec
std
fs
mov
push
push
jp
cwtl
outsb
cmp
aaa
aam
ss
jp
push
mov
addr16
ret
xor
sbb
out
lods
mov
sub
xchg
and
mov
ja
inc
sbb
mov
add
adcb
xchg
inc
clc
out
or
mov
sbb
jb
push
lds
mov
arpl
push
push
push
lret
std
push
notb
cmpsl
sub
rorl
arpl
aaa
gs
push
mov
cli
movsb
sbb
out
xor
fisubs
std
push
mov
in
das
es
shl
leave
push
lret
gs
cmp
adcb
push
xchg
mov
int3
cwtl
mov
leave
sti
cmc
jecxz
clc
dec
xchg
xchg
push
aad
out
mov
cmc
sub
pop
mov
cmp
xor
cltd
inc
mov
subb
and
lock
xchg
aam
cmp
jp
fidivrs
lahf
mov
mov
sahf
into
repz
xor
lods
int3
rolb
pop
xchg
sub
into
jbe
test
aad
and
inc
inc
pop
xchg
out
lret
pop
pop
cmp
nop
sbb
xchg
gs
jno
ds
mov
lret
out
jg
pop
adc
test
scas
rorb
ret
sub
mov
adc
ja
jmp
dec
xor
or
sub
das
mov
out
mov
cmc
std
mov
ljmp
sbb
jp
mov
cmc
and
imul
xor
adc
or
fwait
pop
xchg
leave
dec
fs
mov
lahf
push
test
lcall
and
jge
stc
movsb
dec
mov
pop
adc
pop
gs
es
push
loope
arpl
insb
ret
dec
vpunpckhdq
sbb
out
mov
dec
std
lret
mov
cmp
pop
xor
cmp
ja
jp
pop
jno
loopne
int
fwait
sub
or
stos
add
adc
dec
lods
js
repz
pop
cmp
push
xor
cld
dec
jge
or
xchg
outsl
mov
lods
divl
in
rcrl
stos
mov
inc
nop
stos
jo
in
cwtl
sbb
outsl
lret
pop
adc
jecxz,pn
or
jmp
or
insl
aad
adc
and
int
pop
cld
repz
out
mov
and
enter
fwait
ljmp
or
movsb
test
insl
roll
xchg
lcall
aas
inc
fsubrs
lcall
icebp
rclb
jae
in
jbe
mov
nop
mov
push
jnp
cmp
mov
pop
mov
xchg
leave
int3
addr16
jns
jg
adc
xor
or
lret
leave
add
xchg
jp
sub
pop
fisubrs
mov
or
sub
cmp
dec
pop
mov
adc
lret
and
sub
sub
repz
inc
dec
imul
fdivl
push
int3
mov
pushf
es
jmp
into
das
aad
cli
adc
jle
outsb
jge
mov
imul
in
sub
dec
inc
xlat
lret
insb
adc
leave
int3
pop
mov
fsubl
ja
xchg
std
mov
rcll
jbe
sub
dec
and
in
sub
xor
adc
movsl
lds
js
jge
arpl
int3
inc
mov
je
and
cmpsb
out
int3
ljmp
sbb
ja
sarl
loop
xchg
or
jl
xchg
xor
mov
mov
cmp
and
sahf
sbb
in
sub
adc
and
ret
cwtl
popa
cmpsl
arpl
iret
xchg
loop
mov
idivl
rcl
test
push
stc
outsb
aad
pusha
or
add
inc
daa
pop
rol
jo
push
dec
add
and
and
xchg
add
inc
inc
ja
xchg
loope
cwtl
mov
sbb
insb
and
or
fiadds
fistpl
xchg
xchg
in
cmp
xor
pop
pusha
in
xchg
push
mov
mov
push
pop
sbb
aam
fldcw
fdiv
mov
cld
adc
mov
dec
testb
mov
scas
push
ljmp
inc
je
xor
mov
adc
push
leave
push
sub
mov
sbb
nop
dec
cmp
mov
mov
lret
push
jge
xchg
pop
inc
mov
movsb
es
xor
lret
push
dec
testb
pop
cltd
mov
adc
inc
xchg
test
sub
push
inc
pop
add
mov
sbb
mov
arpl
push
stos
daa
sub
stc
pop
imul
pop
add
push
sbb
decl
and
adc
in
cmp
test
sarl
adc
sub
sbb
mov
enter
bswap
lcall
add
jle
push
jnp
je
pushf
lea
push
mov
adc
push
jbe
mulb
mov
dec
hlt
push
xchg
loope
sahf
add
sub
lock
jge
aam
int3
inc
out
jle
fwait
pop
jb
sub
sub
cwtl
cmp
pop
inc
dec
insb
adc
test
pop
dec
push
cmp
sub
aam
icebp
scas
iret
imul
mov
loope
stos
mov
push
fs
mov
xchg
repnz
inc
and
je
les
mov
mov
mov
out
rcrl
xchg
lret
cmp
je
inc
inc
and
push
mov
std
shl
inc
fnstsw
insl
outsb
cmpl
dec
xor
and
mov
es
aad
pop
fcomp
inc
pop
fcom
inc
dec
inc
add
imul
sbbl
cmp
xchg
mov
push
push
shlb
adc
adc
jmp
xchg
gs
mov
adc
repz
jmp
push
xchg
push
decl
sti
pop
pusha
pop
mov
mov
es
jle
jle
push
shlb
fidivs
cs
adc
or
jecxz
sbbl
mov
mov
stos
outsl
cmovae
add
cmpsb
dec
jge
cmp
pop
cli
pushf
addl
mov
int
daa
push
movsb
and
mov
cmc
arpl
fcomip
pop
sub
push
clc
inc
les
lcall
cmpsl
rol
adcb
adc
sbb
jmp
xor
data16
hlt
lea
fsubs
lret
leave
pop
and
push
jecxz
cmp
mov
adc
inc
outsl
jbe
aas
dec
data16
dec
fstps
sub
or
setle
scas
push
dec
nop
xchg
shll
icebp
cli
or
sbb
sub
insl
leave
xor
sti
add
into
imulb
idiv
mov
add
loop
das
mov
sub
fcomps
lret
out
mov
aam
cli
repz
adc
inc
in
and
inc
les
mov
jg
loope
insl
movsl
lret
jb
shlb
das
push
pusha
data16
cmp
loop
and
fdivr
xchg
into
sub
shll
pushf
xor
lods
out
lods
xchg
cltd
out
ss
sbb
pop
push
xor
xchg
cs
fimuls
nop
test
pop
dec
xor
loope
lds
fsubrs
out
jl
or
fists
mov
dec
jecxz
xchg
mov
xor
dec
into
xor
push
jo
call
mov
and
inc
das
adc
jle
aaa
add
xchg
mov
push
stos
dec
cs
xchg
add
nop
or
mov
test
loop
lods
stc
test
mov
aam
stos
ljmp
imul
sbb
mov
sbb
pop
scas
insl
sti
data16
cmp
movsb
jnp
test
push
les
push
popl
mov
movsl
xor
mov
faddl
idivl
aas
loop
pop
pop
je
outsl
fs
lea
jnp
push
daa
pop
fxch
lret
or
push
pusha
adc
test
test
sbb
aad
inc
int3
xor
cmc
add
cmp
push
cmpsb
inc
mov
fiadds
scas
cmc
xchg
call
inc
dec
aaa
pop
cmpsl
xchg
mov
xchg
adc
cmp
repnz
jmp
xlat
movsb
lock
mov
test
fwait
aas
sbb
sbb
or
adc
cs
imul
rclb
stc
mov
bound
test
xor
loopne
sub
mov
pop
aam
loope
push
shll
jmp
jmp
andl
fmuls
inc
ss
aaa
jno
imulb
mov
sbb
aas
mov
leave
sbb
fstp
lret
daa
jb
pop
xchg
idivl
adcl
aaa
jb
imulb
mov
mov
push
pop
pop
cmp
ror
add
xor
lret
or
inc
jbe
imul
push
push
xor
inc
mov
adc
aaa
jne
mov
ja
mov
icebp
adc
or
clc
push
int3
or
mov
or
push
pop
dec
xlat
pop
test
push
lds
mov
jmp
xchg
xchg
cmpsb
mov
inc
inc
fcoml
and
cmpsb
jmp
inc
lea
enter
xchg
stos
add
jns
xchg
es
pavgb
inc
inc
mov
jmp
add
sbb
decl
jns,pn
xchg
pop
cwtl
fwait
lret
mov
das
xchg
das
jno
lds
add
sbb
fcmovnu
divb
stos
inc
add
repnz
cwtl
repnz
dec
xor
cltd
je
sbb
add
xorl
or
loopne
das
cmp
mov
sub
dec
ficomps
push
sub
inc
push
mov
lret
pusha
hlt
fnstsw
add
sub
jb
mov
add
adc
out
jns
xor
push
cmp
shrb
inc
pop
mov
mov
mov
dec
mov
pop
push
or
and
or
cmp
push
add
pop
cld
push
andl
jne
lcall
add
sub
cmpsl
push
mov
lods
and
ds
or
testl
sarl
decl
xor
adc
jb
pop
aam
inc
sbbb
or
mov
shlb
pop
sbb
outsl
bound
stc
shll
mov
push
mov
in
pop
frstor
inc
test
push
mov
and
dec
ja
cmp
enter
ret
aas
pop
add
cmp
es
fsubr
aam
sub
ror
mov
stos
sub
push
pop
jmp
prefetchw
test
leave
iret
or
mov
mov
call
pop
test
clc
cmpsl
mov
imul
insl
out
xchg
pop
jmp
sti
mov
fs
dec
sbb
inc
mov
mov
cld
add
std
xchg
mov
cli
jp
mov
data16
sub
sbb
sbb
pop
pop
test
out
mov
jecxz
movsb
lcall
mov
mov
dec
xchg
jnp
adc
mov
shrl
js
dec
sub
sbb
mov
sub
dec
mov
mov
pop
daa
in
cmp
adc
icebp
jb
dec
mov
test
push
cmpxchg8b
iret
or
mov
iret
cli
test
call
out
stos
jl
push
mov
jae
dec
adc
and
lahf
sbb
mov
push
es
pop
lock
cmp
out
mov
rcll
or
movsl
loope
jmp
and
add
add
inc
cld
addr16
pop
add
push
lret
dec
mov
xor
loope
mov
add
dec
mov
ret
push
inc
jge
cmp
inc
ljmp
aad
outsb
ds
mov
adcb
fs
mov
jb
push
cmp
lods
and
push
frstors
jp
adc
call
fstps
addr16
icebp
inc
mov
stos
push
daa
pop
mov
fildll
outsl
cmpsl
pusha
mov
jle
pop
mov
flds
lea
dec
add
sbb
cld
mov
ret
jb
imul
adc
jl,pn
inc
jae
pushf
or
push
jp
and
test
sti
push
cltd
add
data16
or
mov
mov
inc
jecxz
pop
or
or
aam
jge
lcall
in
cld
movsl
push
xchg
pop
cmp
aaa
int3
sar
push
cmp
shrl
xchg
ret
inc
and
cmp
inc
ljmp
leave
inc
dec
jp
lods
cmp
enter
push
shl
xor
pushf
inc
jno
jmp
insl
test
and
mov
lret
push
jae
mov
push
lock
push
cmc
aaa
mov
inc
repz
das
sbb
es
es
sbb
adc
mov
xchg
push
adc
xor
inc
inc
pop
and
sahf
test
decl
cltd
mov
sbb
sti
neg
mov
add
rcrb
jnp
lahf
imul
sbb
movsl
scas
push
subb
mov
cmp
dec
xchg
pinsrw
stos
fsts
out
lods
jge
push
popf
cmp
in
loope
jle
ret
push
repnz
inc
inc
bound
repnz
loopne
jecxz
or
addb
xlat
jge
push
sbb
cltd
popa
cmpxchg
lods
cli
insl
dec
rolb
popa
add
pushl
cmp
fiaddl
popf
outsl
mov
xchg
jns
faddl
outsl
and
test
xor
pop
inc
lea
cltd
jae
fadds
pop
pushf
sahf
xchg
push
jl
gs
dec
mov
xchg
fisubs
xor
jp
push
loopne
xor
inc
sbb
jnp
mov
dec
fildl
dec
mov
dec
jg
or
es
add
daa
or
movsb
pushl
adc
dec
inc
sub
loop
mov
jo
jno
xchg
fisttps
pop
dec
cs
and
test
adc
mov
xlat
stos
loopne
stos
rcrl
xchg
shll
out
cltd
stc
rcrl
and
mov
stos
or
mov
inc
sahf
movsl
lldt
imul
inc
sti
andl
pop
rcrl
jb
adc
decb
insb
inc
sub
cltd
fwait
push
lret
mov
scas
and
inc
movsl
pop
rorb
adc
shl
movsb
notb
mov
stos
xor
push
rorb
sbb
cmp
das
xchg
arpl
and
jl
cld
or
cmpsw
hlt
cmp
aad
std
or
test
inc
lods
shlb
in
aas
sti
gs
sbb
push
leave
popf
inc
hlt
in
testl
loope
in
dec
pop
iret
adc
repnz
cmp
gs
xor
adc
stos
into
mov
and
cwtl
sbb
xor
rorl
mov
adc
in
shr
mov
mov
xor
rcrl
or
adc
divb
cmp
pushf
ret
out
sub
stc
out
and
loopne
out
or
sbb
push
mov
xchg
das
inc
sahf
push
cmpsb
fildl
repz
hlt
pusha
outsb
adc
rcrl
filds
push
push
xchg
neg
jae
push
sub
dec
jp
inc
pusha
pop
inc
stos
pop
shlb
mov
test
lds
mov
jle
les
fwait
sbb
mov
shr
add
les
pushf
rol
out
cmp
in
push
sbb
les
pop
movsl
sbb
mov
dec
rcl
cmpsb
in
shrb
insb
lock
lea
sub
mulb
pop
push
lock
popa
repz
jnp
mov
cmpsl
adc
test
pop
notb
sbb
imul
arpl
xchg
pushw
cmp
outsl
and
jge
shrl
xor
in
out
js
ss
push
xchg
lds
add
cmp
mov
and
lds
sub
idivb
or
clc
inc
and
insl
ljmp
adc
push
test
push
mov
iret
icebp
repz
and
inc
scas
cs
ret
ret
push
sub
fidivs
mov
sahf
in
or
adc
adc
add
mov
or
dec
fcmovne
shll
mov
add
test
adc
aam
lret
leave
mov
ret
dec
push
xor
adc
sahf
sahf
jns
sub
cld
xchg
icebp
out
push
int
fldenv
mov
xor
mov
xchg
sbb
popf
popa
mov
add
clc
push
sub
mov
mov
mov
repnz
jns
push
and
pop
cmpsb
sub
mov
insb
sub
push
mov
sbb
mov
stos
xlat
adc
or
mov
mov
dec
dec
loopne
pop
lret
dec
and
inc
aaa
clc
inc
mov
and
dec
and
stos
cmpsl
int
xor
aad
add
mov
bound
or
jl
push
test
adc
xor
enter
clc
jge,pt
and
inc
ds
lock
dec
movsl
shll
mov
popa
cs
mov
pop
push
insl
xor
inc
out
add
mov
or
insb
jle
and
push
jl
fcompl
inc
xor
or
faddp
aad
popf
xor
push
sub
adc
inc
popf
push
and
jb
pop
mov
mov
jne
lods
and
pushf
aad
out
lea
adc
pop
dec
loop
sahf
jp
add
stc
fadds
sbb
push
iret
jle
insb
add
repz
cmp
mov
ljmp
push
xchg
outsl
adc
rcl
pop
cmp
push
stos
cmpsb
adc
dec
mov
mov
add
fsubs
cs
xchg
scas
jo
incl
pusha
mov
dec
fistps
int
cmp
lds
mov
xchg
push
jae
mov
cmpsl
xlat
orl
adc
shrl
or
sub
pushf
aad
aad
and
inc
arpl
mov
jno
sahf
insl
adc
clc
jno
or
push
xor
in
insl
loope
mov
mov
rorb
pop
popa
mov
test
sahf
clc
sar
add
lcall
add
into
xchg
jle
rcr
lret
push
sbb
jno
push
jecxz
dec
gs
or
push
push
mov
mul
daa
loope
repnz
mov
pushf
adc
pushf
inc
fnstsw
push
in
aaa
fsubl
vmovapd
and
loop
xorl
jecxz
arpl
pop
xor
insl
fmuls
mov
pop
push
jae
imulb
movsb
fdivs
push
mov
mull
or
test
ret
jl
jb
rorl
push
mov
fwait
test
orl
push
sub
push
fists
push
inc
fildl
outsl
shll
fstpt
es
xor
sti
inc
data16
subl
fbstp
test
lea
ss
mov
outsl
jmp
fidivl
shlb
into
aas
inc
movsl
mov
repnz
xchg
inc
inc
sbb
ds
sbb
fs
repz
add
xchg
sub
cmp
pop
icebp
cmc
ja
fstpt
xchg
and
cmp
dec
inc
jmp
popa
sub
fadd
adc
xchg
mov
clc
dec
sbb
sbb
iret
add
add
xor
lods
rolb
pop
sub
jae
sbb
or
icebp
in
adc
mov
ss
xorb
sbb
sub
jbe
mov
stos
cwtl
aam
ret
cld
push
outsb
inc
pop
cmp
ror
outsl
or
mov
xchg
inc
push
lret
jns
mov
std
inc
pop
icebp
sbb
jl
push
mov
lea
sub
jnp
int3
ret
pop
pushf
inc
pop
inc
push
and
sub
mov
push
jmp
fisubrl
ds
mov
fstp
dec
js
inc
div
cmpsb
jl
dec
stos
inc
mov
sub
jae
pusha
addr16
lods
cmp
bswap
stos
cmc
pop
dec
mov
mov
xchg
add
xchg
inc
pop
xchg
ret
dec
xchg
movsl
jge
insb
lock
xchg
xchg
xchg
dec
mov
jp
and
pop
out
repz
mov
mov
pop
test
mov
cmpsl
xor
push
jp
dec
outsl
mov
cld
scas
mov
push
rorl
das
in
not
repz
push
jb
mov
bound
fcompl
aad
test
dec
int3
sbb
testl
lds
mov
mov
inc
orl
in
mov
clc
std
and
data16
mov
push
imul
cmp
data16
mov
mov
lahf
out
mov
out
fisubrl
add
mov
cli
outsl
jp
push
push
enter
pop
stos
cmp
jae
jo
push
out
scas
aad
nop
push
test
js
lods
jnp
jno
sbb
test
outsb
sbb
iret
mov
cwtl
sub
jle
jecxz
loope
fldcw
pop
cmp
jle
ficomps
lret
iret
stc
test
pop
or
out
stos
js,pt
dec
pop
and
xchg
mov
fnstenv
add
cltd
add
bound
cmp
sbb
and
jp
imul
movsl
int
xchg
and
aam
xor
mov
dec
mov
pop
xlat
mov
xchg
and
sub
in
fsubrp
sub
inc
adc
cmp
mov
xchg
mov
call
dec
movsl
inc
xchg
movsb
mov
mov
jmp
hlt
pop
push
leave
dec
cmpsl
inc
loop
sbb
fs
mov
lock
je
aam
fwait
cwtl
pop
fst
test
ret
icebp
add
jge
sarb
add
and
xchg
push
mov
dec
arpl
xchg
push
pop
pop
mov
mov
jl
fbstp
sub
xorb
inc
in
rclb
cmp
push
cli
xlat
and
out
ret
push
pop
divb
inc
addb
leave
xchg
leave
test
sub
cmp
add
cmpsl
push
aaa
cli
push
das
mov
outsl
jnp
orb
xor
jle
inc
test
pop
dec
gs
sub
sub
pop
cmpl
cmpb
mov
cltd
inc
ja
data16
mov
add
repz
dec
push
jb
inc
enter
mov
movsb
inc
jl
jl
pop
inc
lds
xor
daa
push
out
das
add
jl
pop
mull
frstor
outsb
out
push
adc
mov
mov
movsb
cmp
and
in
or
adc
es
cwtl
lock
mov
jmp
rolb
fcmovnb
jbe
fwait
adc
jmp
mov
xor
jge
movsl
sub
pop
sahf
ja
arpl
push
mov
dec
sbb
fistpll
jo
sahf
int3
repnz
movsl
add
or
roll
xchg
cmp
insl
les
andb
dec
neg
stos
sub
adc
ss
pop
jle
bound
adc
data16
sub
jne
jl
out
dec
cmp
mov
xchg
js
jmp
mov
out
sub
cs
dec
fimull
xor
in
imul
mov
shlb
push
int
test
push
dec
dec
push
lahf
outsl
xchg
pop
cmc
shll
cwtl
mov
stos
insl
and
xchg
jle
push
mov
lret
add
pop
imul
cmp
mov
adc
jge
aaa
push
xchg
push
jp
hlt
mov
outsl
push
or
mov
mov
dec
lods
mov
mov
in
fildl
sbb
adc
lods
fwait
mov
insl
jmp
jne
or
les
lret
out
sti
or
mov
xchg
xor
add
sahf
sbb
or
inc
cmp
or
fwait
push
imul
xlat
addr16
sub
dec
dec
std
movsb
out
mov
xchg
mov
mov
jo
fucomi
imul
aas
mov
jge
adc
jnp
or
fisttpl
fistps
divb
or
sbb
push
adc
jmp
movsl
mov
inc
cmc
out
fisubl
inc
sub
sub
negb
out
pusha
sahf
jb
lock
and
mov
xor
push
jmp
fdivl
jns
adc
adc
xor
sbb
mov
or
es
les
sub
jecxz
xchg
movsl
les
mov
insl
sahf
into
pop
je
aaa
mov
sub
aam
insl
sysret
cmpsl
shll
xor
and
nop
ljmpw
sub
aad
movsl
psrad
loope
in
pop
std
lea
mov
mov
js
out
and
mov
mov
sbb
adc
sub
stos
xchg
mov
test
inc
dec
lea
iret
jl
mov
adcl
js
adc
add
jne
push
sarl
xor
subl
push
add
mov
repz
jnp
mov
addb
into
add
enter
cmp
push
pop
mov
sub
adc
fsubrl
inc
fists
sub
adc
adcl
push
std
or
xor
divl
fidivrl
mulb
sub
punpckhdq
mov
test
cld
add
out
mov
jg
clc
jmp
jb
ret
push
pop
in
lods
cmovns
add
or
sub
cli
xchg
hlt
aaa
dec
mov
scas
pop
dec
out
push
pop
adc
rcrl
adc
icebp
stos
hlt
roll
inc
enter
adc
add
js
inc
fisubrl
scas
cmpsb
sub
loope
and
dec
fisubs
or
sub
ficoms
insl
mov
xor
xor
fmul
das
push
mov
mov
push
adcb
jae
or
stos
test
movsl
sub
pop
xchg
cld
mov
adc
mov
mov
hlt
gs
out
adc
add
rorl
ret
mov
outsb
arpl
test
popf
ret
push
movsl
xchg
imul
insb
adc
sub
and
pop
mov
mov
outsb
stc
dec
inc
adc
and
cmp
into
sbb
movsl
repz
jae
mov
ret
scas
xor
cwtl
lock
cwtl
cmp
fisubs
and
xchg
xchg
lret
mov
lds
xorl
popf
pop
cltd
mov
sub
xlat
movsb
mov
add
fidivrs
push
insl
pop
dec
rclb
inc
mov
fisttps
sahf
pop
push
neg
pop
mov
push
adc
add
pop
push
fwait
pop
in
inc
clc
sbb
jge
mov
inc
les
mov
sub
adc
repnz
jnp
mov
mov
add
jle
pop
cmpsl
insb
or
adc
jp
xchg
clc
dec
jb
scas
sub
inc
xchg
or
fdivs
pusha
xchg
push
jo
cmp
xchg
pop
dec
mov
cmp
sbbb
icebp
jl
rol
mov
sub
mov
ja
pushf
shll
into
hlt
addr16
out
sbb
outsl
push
inc
cmpb
xchg
mov
xchg
sbb
jecxz
push
fisubl
fstpl
sbb
addb
cmpl
out
movsb
xchg
mov
gs
sbb
jecxz
or
les
sbb
lods
mov
sbb
adc
lret
jle
jne
mov
xchg
icebp
lods
push
rol
push
in
sbb
pop
mov
sub
and
cmc
pop
out
aad
xchg
sub
icebp
dec
xor
or
and
icebp
xor
push
rep
jb
push
out
mov
dec
sub
jge
in
rcrl
adc
mov
fstps
adc
ret
sub
shrb
ds
dec
mov
rolb
test
jae
rorl
cmpsl
mov
sub
cmpsb
loop
in
cmpb
or
mov
adc
iret
jmp
int
scas
cltd
subl
fcmove
ficoml
scas
sbb
add
dec
inc
hlt
fsubrs
sub
lret
cmp
cwtl
cmpsl
or
ret
inc
int
mov
adc
jbe
mov
ficoms
xor
xor
xor
inc
push
cli
sub
or
mov
jge
xlat
sub
adc
xor
cmp
hlt
out
mov
adc
arpl
xchg
dec
sbb
std
xor
adc
gs
dec
faddl
call
cltd
pop
fwait
jnp
jmp
fidivrl
cmp
cmp
or
int
mov
lahf
fbld
fists
shl
push
adc
pop
scas
movsl
mov
add
cmp
sbb
cmp
and
pusha
sub
loop
push
sbb
add
aam
jle
xchg
mov
jecxz
sub
js
push
fldcw
bound
movaps
xor
enter
or
add
jo
or
mov
outsb
and
xor
fidivrs
sub
fld
enter
jnp
sub
in
pop
xchg
pop
into
xchg
insl
lea
scas
mov
fmulp
sbb
add
mov
or
mov
adc
pop
pop
sub
ret
push
push
imul
gs
das
frstor
test
loop
cltd
mulb
test
or
inc
dec
sbb
sahf
add
lock
std
movsb
cmp
mov
inc
mov
test
pop
pop
jo
pop
adc
aad
jmp
pop
xor
outsb
xlat
or
addr16
lret
or
or
shrl
xchg
movsl
mov
mov
and
xor
xor
push
call
adc
mov
cmpsb
pop
daa
incl
insb
aad
out
mov
push
xchg
adc
cmc
push
and
fdivrs
cmp
cwtl
inc
ds
sahf
mov
addr16
mov
dec
jae
call
push
lock
xchg
sti
pop
jle
mov
scas
dec
dec
cmpl
sti
mov
jp
je
pop
pushf
sub
mov
shll
call
and
hlt
and
mov
pop
cwtl
popf
jecxz
push
cs
xchg
cltd
xor
mov
dec
adc
xor
jg
leave
jle
xor
ja
les
int
inc
bound
movsl
mov
clc
and
rclb
lds
ret
mov
fucomp
cmp
push
out
imul
fstpt
filds
lea
xchg
jp
xor
pop
movsb
gs
inc
loope
or
pop
fs
xchg
bound
ret
add
cli
jnp
sub
dec
mov
aad
cmp
lods
push
fs
jbe
pop
or
jb
dec
mov
test
adc
cmp
test
mov
mov
gs
loop
arpl
xor
ljmp
imul
push
loop
stos
inc
xlat
pop
mov
sub
ret
test
pop
add
ret
jne
xchg
mov
inc
jbe
xchg
cmpl
aad
cmp
js
clc
add
xor
scas
xor
dec
daa
ret
adc
dec
inc
jne
mov
xor
repz
adc
daa
xchg
mov
lret
sub
cmc
in
adc
in
test
imul
dec
and
inc
dec
mov
mov
push
sub
mov
jns
ret
jb
dec
pop
fwait
pop
outsb
subb
fcmovb
popa
aad
add
mov
and
inc
jae
fnstenv
pop
movsb
mov
jl
lcall
cld
ljmp
notb
inc
es
sti
flds
sbb
pop
or
mov
jg
cmpsl
sbb
mov
out
jle
xor
xor
adc
sub
frstor
sbb
loope
xchg
mov
jnp
loopne
cmp
arpl
xchg
test
test
jge
sti
dec
sbb
mov
or
inc
jecxz
hlt
test
nop
es
adc
dec
mov
sarb
rolb
sbb
test
iret
and
cmpsb
add
stos
or
test
test
pushf
jmp
cmc
pop
sub
int3
pop
shl
and
rclb
in
xchg
out
xor
adc
mov
add
mov
push
hlt
dec
shr
mov
jmp
sbbb
adc
add
adc
adc
add
scas
xchg
pop
xchg
inc
pop
sub
fmul
mov
scas
fs
imul
push
dec
js
sub
addr16
arpl
jne
daa
aad
cmp
jge
xor
or
nop
dec
mov
mov
or
xchg
inc
flds
int
cmp
add
roll
mov
scas
adc
shll
fimuls
and
aas
xor
push
in
js
testb
sbb
mov
sub
das
shlb
inc
hlt
sbb
js
mov
xor
into
icebp
mov
es
or
pop
or
jmp
in
mov
fists
cmp
add
adcb
rcrl
andb
sub
sub
lahf
inc
lcall
mov
stc
cmp
outsl
and
sub
cmpb
bound
mov
xor
loop
rol
mov
cmp
aam
dec
mov
jecxz
outsb
cmp
fsts
xchg
aad
sub
gs
andl
out
xor
insl
int3
in
dec
std
mov
and
shll
test
fnsave
mov
inc
mov
mov
addr16
movsl
mov
mov
mov
inc
mov
imul
mov
pop
push
nop
icebp
jge
pop
sbb
lds
int3
mov
xchg
sub
inc
and
daa
xchg
push
pop
push
inc
lock
push
xchg
out
mov
lcall
push
push
jge
inc
jnp
xchg
loopne
lds
arpl
sbb
popa
shrl
out
lods
inc
bound
mov
loope
pushf
nop
lock
movsl
push
cmp
orl
mov
dec
mov
sbb
pop
jl
mov
pop
sub
mov
fsubl
push
mov
in
dec
inc
hlt
in
int
loop
into
adc
mov
mov
inc
cmp
jns
fldl
ss
xlat
repnz
lds
je
bound
inc
dec
rolb
arpl
imul
addl
lea
insl
dec
mov
dec
or
aas
push
mov
lea
mov
fldl
jbe
jae
add
and
adc
mov
jle
jecxz
mov
push
retw
xor
loope
int3
pop
dec
cmpsb
mov
sub
loope
push
fucomp
push
inc
lods
jp
jbe
sub
lea
xchg
mov
push
mov
push
adc
pusha
xchg
inc
mov
repz
hlt
imul
mov
test
inc
push
add
bnd
xor
or
je
inc
mov
lret
hlt
inc
ljmp
shlb
pop
jp
or
dec
push
ss
add
test
xchg
jmp
and
sbb
or
mov
sahf
clc
fs
sbb
call
inc
popa
pop
xor
sub
in
pushf
hlt
sti
push
mov
mov
outsb
test
cmp
ss
ret
mov
sbb
insb
dec
out
leave
cs
inc
xchg
lahf
cmp
jno
mov
xor
out
pop
jnp
int3
xchg
sub
push
test
ljmp
test
outsl
roll
inc
ss
mov
jp
imul
sub
insb
xchg
add
in
sbb
fimull
sub
cmc
cmp
mov
or
or
dec
les
insb
and
dec
in
inc
adc
pop
xor
and
sub
add
push
push
cmpsb
ljmp
repz
xor
mov
pop
popa
dec
jnp
rclb
sub
repz
orl
xchg
pushf
and
int3
and
lds
out
mov
xchg
xchg
mov
jp
jnp
inc
add
cltd
jne
xlat
sbb
mov
jge
pushf
pop
add
sbb
adc
xor
jbe
imul
js
or
insl
test
lock
repz
push
pushf
clc
mov
in
int3
and
ret
movsb
sub
jae
out
je
jg
enter
daa
fisttpll
aad
mov
loop
cmc
jae
jle
pop
insb
in
adc
jno
into
fsave
into
insl
subb
lods
std
adc
popf
repnz
fs
jmp
xorl
stos
ja
icebp
xchg
sbb
fldcw
cmp
cltd
add
cmp
xchg
stos
inc
push
xor
decb
cmp
inc
mov
out
pop
insl
and
fisubs
add
push
xor
xchg
hlt
adc
sbb
notl
lods
push
loopne
pop
jnp
xor
mov
cmp
cmpsl
fs
lock
xor
jo
sbb
int
xchg
repz
push
mov
inc
cli
out
dec
push
enter
loop
and
fistl
inc
cwtl
ficomps
jmp
popf
xchg
negl
aas
mov
xchg
mov
add
mov
adc
adc
mov
jbe
ja
xchg
mov
cmp
lahf
push
xchg
and
ja
cwtl
lea
loopne
pop
sbb
add
pop
pop
adc
pminsw
jo
int3
arpl
arpl
data16
pop
adcl
sarl
jb
addr16
mov
push
fs
or
cld
sbb
in
mov
roll
adc
faddl
push
jp
pop
cmpsl
pushf
mov
fcmove
cld
nop
ljmp
loope
push
jmp
add
sub
scas
pshufw
imulb
lds
cmp
mov
aad
imul
sbb
fwait
add
or
icebp
pop
and
push
cmp
xchg
sahf
mov
cmp
pop
out
mov
fisubrl
mov
or
cmp
imul
cmp
out
ljmp
lock
jo
les
xchg
xchg
adc
mov
loope
adc
scas
addr16
cs
jge
dec
xor
outsl
jp,pt
mov
mov
cmp
pop
xor
add
and
mov
cs
mov
in
mov
pop
dec
lods
std
xor
push
sarb
jns
push
xlat
xchg
inc
test
div
cmp
pusha
roll
inc
xor
adc
push
adc
es
fildl
push
cmpsl
cmpsl
mov
push
dec
pop
sub
and
mov
cs
pop
fistpll
jle
repnz
ret
pop
gs
idiv
inc
cmp
repz
out
and
imulb
cwtl
mov
dec
sbb
imul
push
cmp
inc
cmp
jge
aam
sub
cmp
mov
cmp
xor
nop
push
lret
mov
fsub
cmp
cmp
cld
fistpll
push
inc
add
fucomip
das
repnz
ss
cltd
sbb
lahf
jge
add
mov
movl
roll
cwtl
cmc
hlt
shll
add
leave
enter
or
jno
lods
imul
nop
out
xchg
in
rcr
mov
movsl
and
xchg
jne
add
imul
cmc
jl
insl
test
xchg
sahf
sub
stos
mov
dec
int3
push
or
cli
push
pop
stc
je
mov
mov
fcomip
add
and
adc
sub
ss
shl
inc
mov
inc
xor
iret
xor
cmpsb
jns
lret
in
into
xchg
sbb
mov
lock
pop
xor
jb
loope
je
lahf
mov
adc
jmp
pop
bound
mov
xchg
mov
daa
stos
mov
inc
sti
test
dec
adc
int
mov
aad
insb
rcr
mov
jnp
sub
sbbb
or
fidivrs
pop
sbb
lahf
xor
and
das
out
xor
mov
jg
orb
sbb
mov
pop
punpckldq
push
sbbl
ja
int3
and
lcall
dec
sub
inc
ficompl
mov
mov
pop
mov
jge
jecxz
cmpsb
ja
test
cmpsl
je
jns
jmp
shll
movsb
dec
jo
sub
jo
in
mov
push
cmpsb
data16
pushf
jp
xchg
jmp
cmp
sbb
in
jg
addb
pop
adc
mov
std
mov
ss
mov
aad
ffree
inc
mov
adc
sbb
dec
push
outsl
or
or
lahf
pop
push
pusha
rclb
cltd
inc
adc
mov
pop
jns
sub
jns
popf
mov
mov
sarb
xchg
mov
sbb
add
sti
pop
xchg
push
mov
mov
shrb
dec
mov
or
daa
sbb
pop
or
and
mov
and
insl
mov
bound
pop
cmp
push
test
orb
ds
call
test
sub
into
jge
lret
and
test
mov
inc
adc
xchg
sub
sbb
inc
aam
mov
add
inc
cltd
bound
int
xchg
pusha
or
xor
fiadds
push
or
push
jae
xchg
push
push
imul
in
xchg
lock
daa
push
ja
adc
sbb
or
cltd
adc
jo
pushf
ret
sbb
jmp
pop
jmp
dec
mov
dec
xchg
aad
xchg
jb
inc
cwtl
scas
mov
dec
daa
mov
mov
addr16
jo
lods
xchg
push
sub
fildl
inc
dec
mov
dec
mov
mov
imul
inc
cmpb
pop
xor
dec
adc
pushf
je
xchg
add
aaa
push
std
xor
std
call
test
stos
xor
aas
mov
fistpl
jne
push
sti
sbb
insb
pop
insl
and
stos
stc
fsub
ret
mov
pop
lahf
push
jb
lcall
fwait
ja
test
jb
xor
xor
cld
mov
sub
xor
cmp
ds
pop
inc
lds
cltd
mov
jne
pop
enter
xchg
and
popf
outsl
adc
add
mov
xchg
sbb
stc
mov
adc
add
lods
jne
pusha
xchg
stc
popa
lret
cld
push
or
cmpsb
and
sbb
xchg
addl
cmp
arpl
out
push
rcrb
push
add
movsl
sbb
fmulp
inc
fnsave
mov
push
xor
cmp
inc
inc
in
adc
dec
and
or
insb
and
ror
sbb
fisttpl
movsb
clc
iret
inc
cmp
pop
scas
or
dec
andl
imul
sub
test
imul
add
pop
in
lret
sahf
sub
ljmp
scas
xor
jnp
pop
xchg
sar
adc
mov
rorl
mov
mov
leave
imul
insl
ljmp
push
jle
xchg
cmc
xchg
lcall
dec
in
int
cltd
adc
mov
hlt
iret
sub
cmp
sub
sbb
sbb
mov
inc
test
loop
aas
ret
push
mov
fiadds
lcall
jmp
xor
jnp
pop
push
push
cmp
sub
mull
mov
fsubrl
pop
das
int
sar
inc
mov
in
mov
sbb
and
test
push
jmp
int3
ss
test
jns
mov
jbe
lahf
pop
jnp
push
jb
sbb
xchg
aam
mov
add
pop
cld
xorb
stos
inc
adc
and
jecxz
rorl
aas
sub
dec
inc
dec
lahf
stos
hlt
scas
test
push
cltd
xchg
ret
mov
and
lcall
and
pop
mov
inc
and
cmpsb
pop
imul
mov
insl
inc
lret
add
inc
aas
test
sbbb
mov
lahf
insl
int
lock
pushf
or
jmp
mov
pop
jmp
cltd
jmp
mov
out
push
adc
sbb
fisttpl
fwait
mov
insl
sbb
dec
mov
in
cmp
lret
aaa
add
das
iret
shr
test
imul
lret
mov
xor
adc
in
mov
dec
stos
jo
insl
adc
dec
out
out
mov
bound
mov
mov
cmc
int3
dec
push
or
clc
js
inc
jns
ja
jecxz
es
cmpl
outsb
pop
or
dec
jl
jmp
loop
leave
xchg
mov
push
sub
insb
outsb
cltd
sub
sbb
int3
push
ret
adc
sarl
fistpl
xchg
cmp
mov
lret
aaa
out
aas
jmp
jnp
cmp
sbb
xchg
or
jecxz
mov
frstor
imul
push
inc
cmp
sbb
test
lret
mov
and
dec
lret
xorb
adc
rcrl
leave
ss
lret
out
sbb
mov
mov
and
imul
push
or
imul
das
les
xchg
pop
in
out
cmpsl
push
mov
insb
xor
lea
fldcw
jp
repz
imul
lods
xchg
push
push
test
jl
sti
pop
test
filds
mov
stos
daa
inc
ja
adc
movsb
and
push
dec
jo
cmp
insl
jl
add
in
sbb
sbb
push
inc
sub
adc
loope
adc
and
xchg
sbb
out
inc
dec
shrl
mov
xchg
sahf
test
clc
jle
adc
sub
push
iret
inc
add
xchg
sub
mov
movsl
push
jp
xor
xlat
sar
and
sub
sbb
xor
cmp
mov
cmp
push
outsl
pop
sub
enter
int
orb
int3
mov
cwtl
mov
sahf
cmp
pop
ja
pop
push
daa
mov
fwait
mov
inc
lds
sub
jecxz
push
or
pop
loope
xchg
and
pop
mov
pop
lods
rcr
mov
js
shll
ss
hlt
xor
sub
mov
cmpsb
jo
fsubs
cli
or
push
adc
adc
jl
pop
xor
test
fmuls
lcall
push
cmp
iret
push
out
or
xor
daa
rolb
xchg
sbbb
mov
push
mov
cltd
fistpll
lahf
nop
xchg
das
or
adc
mov
lods
xchg
jge
xor
mov
out
test
insb
movsl
mov
and
test
mov
jmp
xor
mov
sbb
jecxz
sbb
adc
push
mov
sub
mov
jmp
inc
jbe
lret
or
jmp
adc
xchg
add
sahf
sbb
jno
adc
out
jl
sbb
inc
arpl
and
or
scas
or
test
cmp
mov
nop
imul
nop
lea
repnz
rcrl
push
pop
xchg
mov
das
cwtl
mov
pop
add
movsb
cmp
mov
add
add
xor
rclb
xchg
ljmp
jge
js
ds
outsl
xchg
aaa
xchg
rcrb
inc
jo
pop
sub
sbb
mov
jle
inc
mov
je
scas
or
clc
jnp
push
pop
pop
jg
mov
sarl
cmp
dec
dec
dec
push
gs
subl
push
mov
aam
adc
mov
jne
lods
outsl
imul
cmp
ss
fwait
adc
cmp
inc
xchg
inc
sub
test
int3
or
push
loopne
sub
mov
cmp
ds
scas
sub
pushf
inc
shl
pop
nop
cli
push
jle
fdivp
jmp
sbb
orl
push
cwtl
sub
out
das
inc
add
jno
jnp
xlat
jne
and
in
push
pop
xorl
scas
or
fcmovb
cmp
sbb
inc
clc
adc
stc
fucomp
xchg
stos
popf
mov
scas
sub
push
cld
xchg
jbe
pop
sbb
cmpsl
int3
cwtl
cli
or
and
mov
inc
pop
jge
aam
into
sbb
sti
or
je
xchg
mov
xor
fldz
dec
xor
test
in
sahf
aad
fisttps
loope
jne
push
test
xor
push
cmp
adc
lret
lcall
ret
int3
test
movsl
int
push
xchg
push
sbb
aad
movb
mov
mov
cmpsl
daa
push
xor
inc
je
aam
je
adc
fsubp
jp
sub
pop
dec
jne
mov
and
mov
pushf
movsl
loope
cmpsb
xor
inc
rcrb
push
fcomps
stos
pop
movsb
loopne
and
mov
xor
std
int
lods
pop
lahf
xchg
and
push
fst
insb
or
inc
fnsave
sub
add
cs
jb
std
sbbl
lods
add
jo
mov
mov
out
adc
out
jmp
mov
and
mov
sub
or
in
xchg
movsb
and
in
ss
daa
mov
push
out
fld
xor
lods
ljmp
push
inc
stos
icebp
xor
dec
out
push
je
mov
cld
mov
and
sub
rcrb
mov
fistps
jno
call
jo
mov
out
lahf
dec
push
enter
mov
div
dec
inc
daa
rcr
cmc
js
or
jle
loop
sub
shrb
dec
cmp
test
shlb
adc
and
adc
push
xchg
push
repz
imul
or
sbb
rolb
adc
lcall
into
add
es
fists
jb
pop
xor
mov
in
leave
movsb
out
mov
test
adc
dec
pushf
jmp
push
fisubl
out
out
or
sub
sqrtps
cmp
add
out
not
mov
call
in
add
adcl
lock
or
push
fcomip
inc
add
inc
mov
and
das
mov
push
pop
stos
call
xchg
cld
shll
enter
sub
xchg
cmp
mov
push
sbb
aad
fcomps
dec
rcrb
lds
decb
pop
out
jp
inc
pop
icebp
gs
stos
mov
cmp
push
adc
icebp
inc
mov
ds
aam
fsubrl
test
jns
jecxz
inc
stos
jmp
sub
mov
jnp
lds
jp,pt
mov
out
jns
sbb
das
shrl
mov
pop
xor
jp
cmp
jmp
imul
enter
addr16
fnstcw
shl
jnp
mov
mov
or
jp
add
aaa
dec
jmpw
ficoms
mov
ret
iret
jne
mov
or
lret
mov
daa
adc
fistpll
imul
out
popf
test
movsb
sbb
pop
xchg
jb
jl
pushf
mov
xor
sub
or
lcall
sub
lcall
insb
push
and
inc
cmpsb
cmp
and
mov
lds
movsl
rcrb
ret
shlb
loope
mov
lock
pop
ja
push
fidivrl
dec
addps
cli
aas
dec
lret
rcr
xchg
stos
inc
mov
dec
iret
or
jl
jmp
aam
rolb
xor
cmp
push
pop
test
xor
mulps
mov
add
xchg
iret
inc
jge
xor
xchg
push
cmp
stos
pop
scas
fwait
mov
inc
in
adc
and
mov
out
lds
or
dec
testb
jecxz
jge
xor
xchg
sub
push
xor
sbbl
hlt
xor
mov
lret
mov
add
dec
jmp
in
fldl
call
cmpsb
jne
xchg
pop
dec
push
scas
jb
adc
push
mov
mov
push
xor
and
xor
cmp
in
insb
push
insb
jno
jo
adc
sub
inc
inc
mov
cltd
cmp
or
jb
scas
sti
ret
inc
xchg
insl
sub
push
lret
mov
xor
mov
dec
fwait
aas
sbb
inc
fisttpll
aaa
inc
cwtl
std
addr16
push
push
sub
cmpsb
mov
rolb
mov
cmpb
cmp
lahf
cmpb
sbb
cmp
testb
icebp
ja
pop
mov
jp
fcmove
imul
lds
or
cmc
jmp
idivl
in
js
insb
lods
neg
mov
jp
mov
aaa
pushl
push
stc
or
push
ljmp
mov
testl
push
and
mov
mov
ficoms
adc
fcoml
inc
and
movsb
loopne
fnstcw
dec
sbb
or
inc
mov
lret
into
or
fbstp
adc
in
fcmovne
pop
pop
out
movsl
jnp
repz
xchg
bound
out
xor
xchg
pop
cmp
jns
and
jae
rclb
aad
inc
sub
into
and
ljmp
push
repnz
inc
aaa
es
std
sbb
testb
adc
lock
dec
aad
push
jo
mov
aad
pop
out
leave
cmp
xlat
pop
add
aam
dec
fildl
faddl
cmp
sub
dec
add
aas
lret
pop
pop
dec
pushf
and
pop
xchg
stc
dec
aaa
xchg
cs
ror
pop
sarl
int3
mov
mov
popa
push
and
pop
cmp
or
push
mov
sbb
cmpsl
push
rep
mov
cmp
mov
jl
test
inc
fnstsw
stos
lret
addr16
fidivrs
cs
mov
jecxz
sbb
pop
or
addr16
push
ss
cmp
mov
pop
test
lret
lds
stc
jo
xlat
gs
test
lds
xchg
mov
mul
test
pop
sub
inc
jp
rolb
mov
test
dec
shlb
imul
ljmp
push
adc
and
jmp
fldt
cmc
fisttps
jl
fwait
test
js
dec
cmp
push
xor
inc
in
jne
adc
sarl
and
fs
jbe
and
adc
mov
out
movsb
ss
or
jl
or
sbb
push
jp
aad
and
idivl
pop
jecxz
jge
shl
cmpb
sbb
in
adc
mov
cmpsl
shlb
addr16
pop
aaa
mov
ljmp
loope
or
mov
xchg
aas
or
into
adc
inc
cltd
fs
rol
mov
mov
lock
sti
add
xor
sub
cmc
push
inc
pop
inc
mov
inc
fistpl
sahf
add
pop
es
mov
sahf
add
mov
outsb
lods
mov
dec
jae
jge
xorb
into
lcall
push
pop
shrb
adc
push
jp
fiaddl
dec
cld
outsl
jnp
scas
fmul
dec
gs
mov
jnp
adc
jg
cwtl
sbb
loop
call
xlat
dec
test
enter
ljmp
dec
or
int3
or
mov
mov
xor
sbb
pushf
fdiv
je
xchg
cmpsl
cld
mov
ss
mov
push
push
pop
mov
int
cmp
adcl
data16
pusha
clc
gs
repz
loopne
push
pusha
cmp
stc
dec
daa
mov
jo
push
mov
xchg
sbb
cmp
or
xorl
add
sti
inc
or
pusha
ret
or
pop
push
mov
sbb
outsb
xchg
sti
sub
repz
into
sti
rcl
adc
or
or
adc
aaa
xor
xor
std
lahf
xchg
jno
push
jnp
fimuls
cmpsl
xchg
aam
movsl
pusha
pusha
dec
fucomi
jl
outsl
mov
pop
test
repnz
aam
inc
pop
mov
cltd
daa
inc
in
stos
and
inc
daa
jp
add
dec
pop
jno
adc
orl
icebp
cmp
cmp
inc
into
outsl
jnp
inc
inc
push
mov
bound
es
jp
mov
add
mov
jae
enter
fimuls
fidivrl
pop
and
test
xlat
mov
ror
mov
sbb
or
xor
push
xchg
xchg
sbb
lcall
cmp
pop
cmpb
repz
aaa
push
mov
xlat
xor
je
jbe
rorb
imul
pop
mov
subl
aaa
sbb
jne
clc
mov
aam
test
jl
dec
ss
dec
dec
dec
call
push
es
out
into
jb
inc
pop
mov
int
mov
jns
mov
lahf
push
cs
rcrl
cmpsl
int
mov
inc
add
sbb
std
xchg
sysexit
jnp
ja
sbb
in
pop
jge
int3
int3
adc
adc
lcall
into
pop
or
fsubrl
fdivr
dec
adc
and
imul
insb
sbb
or
flds
call
inc
mov
jp
cmp
sbb
cld
sbb
pop
clc
scas
sub
loop
daa
mov
mov
test
subl
mov
mov
aam
loope
push
cmp
mov
sahf
or
jo
mov
cmc
lret
cli
xchg
pusha
insb
jb
jae
pop
cld
int3
incb
jae
out
aam
xor
lods
sbb
call
popa
loope
xchg
jns
jge
mov
push
xchg
mov
push
insb
mov
ss
aam
cwtl
xchg
clc
fildl
jb
xlat
push
pop
fidivrl
xchg
cmp
push
addr16
fwait
inc
outsl
add
mov
call
into
imul
pop
inc
shrl
inc
add
or
sti
or
clc
push
call
sbbl
inc
push
cld
lock
inc
outsl
jle
test
sbb
fsubs
cmpsl
sub
insl
lds
sub
sahf
ss
push
insl
sub
jae
call
je
jl
mov
fldlg2
rcl
add
iret
push
xor
outsl
insb
daa
cld
movl
pop
fldenv
inc
inc
xchg
push
xor
push
mov
cltd
sti
xor
add
xchg
or
fs
add
test
push
jmp
jge
punpcklwd
das
insb
and
icebp
push
or
dec
push
adc
aad
jl
push
xor
or
sub
cmp
addl
add
ss
pop
lret
xor
sub
mov
js
inc
les
inc
mov
int
hlt
add
push
stos
push
push
nop
mov
adc
or
push
sub
add
add
sub
lock
sub
dec
out
inc
test
aam
ret
out
pop
outsl
scas
test
call
aam
push
mov
and
punpckhwd
cld
into
and
push
add
pop
addb
loopne
push
jecxz
cmp
xchg
add
lret
push
insl
stos
xor
sbb
mov
xchg
leave
inc
daa
repnz
cli
mov
push
mov
in
or
jecxz
adc
mov
xchg
sub
xor
je
inc
or
aad
pop
adc
fcoms
lock
mov
fwait
mov
inc
jno
mov
sub
adc
rcrb
dec
cmp
add
add
fwait
lds
and
inc
xchg
pop
out
test
out
out
stos
and
xchg
add
and
inc
insb
or
xor
sti
fcoms
cmpsb
add
inc
fdiv
ret
outsb
loop
shrl
fisttpl
xchg
jnp
scas
sub
xchg
cmc
fldcw
sbb
sbb
insb
mov
into
inc
stos
sub
nop
cmp
lcall
sahf
fbld
adc
jp
sbb
fucomp
xchg
jge
xchg
mov
dec
sahf
iret
cmp
xor
jmp
incl
xor
pusha
andl
std
sbb
or
jbe
mov
sbb
into
mov
insl
push
jmp
imul
xchg
xchg
add
std
or
ror
and
sbb
mov
lahf
push
mov
adc
lret
jno
push
and
adc
mov
push
hlt
add
mov
dec
sarl
mov
sub
xchg
or
push
sub
sbb
notl
cwtl
test
insl
and
pop
daa
addr16
jo
dec
ret
xlat
pop
sarb
jae
loope
or
lret
clc
popa
imul
in
mov
into
mov
cmp
pop
lcall
pop
in
sub
cmp
outsl
push
sbb
adc
divl
xchg
cwtl
ficoml
js
push
popa
dec
push
push
cmp
add
in
loope
push
mov
lret
xchg
jecxz
leave
mov
jl
pop
lock
cs
mov
lahf
or
mov
arpl
ja
lods
push
push
push
jg
gs
mov
push
mov
mov
add
or
cmp
xchg
outsl
xchg
and
ds
dec
xor
mov
jmp
xor
pushf
mov
cs
aam
cmpsb
aam
xchg
pop
pop
sbb
jo
dec
shl
xchg
xor
mov
push
repz
ss
loopne
mov
push
popa
fldl
cs
or
fbstp
out
stos
and
inc
sub
add
sub
fwait
pop
cmp
push
inc
add
in
int
xchg
add
jmp
xor
pop
inc
lret
sbb
mov
sub
mov
pop
pop
rorl
hlt
mov
mov
fcoml
sub
insl
inc
dec
adc
add
add
imul
jne
mov
out
lea
jg
lcall
adc
jecxz
push
jge
push
fld
inc
je
xchg
inc
mov
sbb
xor
lea
mov
push
ljmp
iret
inc
sub
pop
cmp
stc
add
jae
mov
lea
mov
loope
fstl
pop
shrb
or
inc
dec
stos
cmp
sarl
out
inc
out
scas
sahf
xlat
out
scas
nop
push
xchg
jno
mov
je
jmp
adc
rcrl
mov
aaa
or
pop
iret
xchg
dec
daa
push
or
adc
push
pusha
test
and
xchg
cmp
sbb
add
stos
mov
ret
movsl
popf
repnz
stc
ret
xchg
dec
xlat
ds
mov
je
inc
dec
cli
int3
out
test
push
arpl
xor
or
sbb
jnp
xchg
cmp
add
clc
or
mov
enter
stc
sub
sub
gs
mov
std
push
rorl
ds
jns
inc
sbb
in
dec
cmp
add
fwait
fwait
mov
in
pop
aas
add
repz
mov
adc
rcrb
jbe
xor
dec
daa
out
imul
adc
sub
push
jmp
popf
jo
rep
out
lods
inc
cs
pop
mov
inc
xor
mov
ds
into
aas
mov
imull
lret
dec
pop
mov
insl
ja
xor
mov
mov
mov
aaa
cmp
iret
jno
fs
adc
push
jmp
mov
fadds
xor
push
lds
jle
fcomip
or
sub
add
inc
ja
pop
aaa
sub
pushl
and
pop
mov
lods
ss
xor
jecxz
or
jne
dec
cmpsl
xorb
cmp
xchg
mov
jmp
cmc
sarb
mov
sbb
mov
inc
push
cmc
sub
xchg
aam
into
rcr
arpl
in
and
xor
pop
cmpsl
xchg
mov
mov
xchg
cli
jne
adc
pop
imulb
scas
into
xchg
pop
pop
rolb
mov
jae
sub
push
add
mov
cmp
dec
pop
push
sahf
sub
push
adc
cmpsl
inc
call
test
movsb
imul
jge
hlt
jmp
dec
dec
outsb
and
dec
outsl
es
loope
xchg
and
loop
cmpsb
xchg
sub
test
subl
xor
mov
imulb
add
fs
sbb
mov
ret
sub
fldt
adcl
sbb
sbb
pop
in
xchg
mov
pusha
or
mov
ds
cld
mov
in
loop
dec
mov
into
push
pop
ror
cmp
mov
jnp
cmp
sub
imul
out
inc
mov
jg
je
sbb
in
pop
mov
ret
mov
cmp
mov
les
push
fwait
mov
push
adc
daa
hlt
cmp
and
mov
hlt
imul
mov
cs
jmp
mov
pushf
mov
xchg
lea
dec
mov
cli
xchg
add
not
outsl
loopne
dec
adc
in
lods
scas
mov
pop
inc
mov
data16
cmpsl
mov
adc
dec
repz
lcall
mov
or
sub
mov
lock
or
lret
stc
sar
adc
add
dec
pushf
lea
les
push
mov
cmp
or
test
push
lea
js
sub
push
cs
pusha
adc
pop
bound
add
lock
in
lret
jp
icebp
lahf
jle
push
sbb
icebp
mov
push
adc
loopne
push
movzwl
mov
fucomi
cmp
scas
sbb
bound
int
mov
xchg
mov
mov
sbb
add
inc
sub
fisubrl
xor
cltd
loopne
push
cmp
fwait
loope
add
mov
sub
and
fisttpl
add
xor
adc
cmpb
roll
sub
fwait
xor
gs
fdivrp
sbbl
mov
sub
pop
push
decl
pop
cli
cmp
sahf
cs
imul
jb
push
adc
xor
ds
es
lds
pop
sub
cmp
cmp
sub
mov
insl
mov
mov
cmp
sarl
rcrl
lcall
jl
push
test
popf
cmp
lods
xor
or
jo
sub
fidivrl
mov
fwait
lods
mov
mov
push
int
fbld
mov
and
fbld
test
or
scas
xchg
pop
cwtl
imul
and
xchg
movsb
outsl
fistpll
sti
lds
push
lcall
int3
sti
rcrl
lahf
cmpb
mov
pop
jb
je
mov
mov
cltd
and
arpl
mov
js
inc
and
jle
xlat
xchg
in
cmpsb
sbb
push
jae
mov
out
pusha
inc
test
adc
and
je
pop
lahf
jg
cwtl
sbb
fbld
cmpb
cmpb
xlat
jns
jae
imul
xchg
push
leave
lds
mov
pop
mov
insb
push
adc
mov
test
and
xor
pop
ds
push
inc
lods
sub
movb
sub
aam
iret
mov
mov
cmp
pop
cmp
jl
or
rcrb
and
adc
cmp
mov
std
adc
cmp
popf
bound
pop
cltd
xchg
and
pop
push
mov
mov
inc
pop
jnp
and
pop
dec
fwait
mov
stc
add
loope
enter
int3
dec
cltd
stos
jp
enter
je
sub
stos
in
mov
jno
aam
mov
mov
add
cmpsl
lods
and
inc
idivl
test
sahf
popa
shlb
ret
out
in
mov
pop
pop
popf
adc
hlt
adc
cmp
cld
stos
ror
popf
dec
pop
popa
jnp
push
adc
or
mov
dec
fwait
rolb
and
push
loopne
sub
mov
out
push
testb
int
lret
out
nop
sbb
imul
loopne
sbb
pop
lock
into
push
or
pop
inc
and
mov
cmpsb
mov
hlt
adc
sub
inc
cmp
or
mov
aas
mov
insb
fwait
lret
hlt
inc
in
cld
sub
mov
ljmp
push
add
cmp
mov
iret
dec
ss
sub
lahf
inc
out
push
insb
fs
mov
cltd
aas
fdiv
push
push
cmp
fwait
jae
sub
rorb
nop
pop
inc
add
xor
jmp
loopne
cmp
cli
inc
bound
testb
xor
jl
cld
or
fcomps
in
cmp
jl
lcall
call
mov
sub
pop
sub
mov
les
sti
int3
xchg
call
call
or
mov
in
aaa
or
call
fdivrl
or
mov
cmpl
fldcw
adc
stc
stos
cmpsl
jge
repz
lret
pop
and
pop
push
pop
cmc
push
movsl
and
roll
cld
nop
mov
jae
and
adc
add
sbb
pop
call
iret
xchg
xchg
inc
fsubs
jg
fiaddl
addr16
push
mov
add
inc
jg
jmp
xlat
xor
mov
jnp
jmp
jbe
pop
inc
movsl
ja
lods
and
mov
xchg
push
sbb
jmp
or
dec
mov
test
push
lods
sub
idivb
insb
or
push
in
cld
stos
loope
jno
stos
stc
rolb
push
push
and
popf
dec
adc
out
sbb
shlb
and
push
xor
repnz
aas
call
ss
in
test
pop
jp
dec
dec
mov
lret
lret
jnp
ja
mov
out
mov
cmp
lahf
add
data16
test
inc
sbb
mov
mov
pop
xchg
loope
cmp
cmc
or
out
xchg
movsl
loope
or
push
int
mov
pop
and
vandnps
mov
int3
leave
lods
add
jge
push
dec
sbb
gs
fs
mov
das
lods
rcl
les
adc
mov
repnz
cmpsb
mov
jmp
xor
mov
inc
lret
adc
clc
and
push
cmc
jl
xor
je
push
and
cli
sub
int3
sbb
je
cltd
movsl
repz
mov
mov
push
decb
cltd
inc
sub
lods
pop
dec
shll
in
push
mov
fdivrp
cmp
sub
mov
cmp
cmp
sti
in
repz
sub
add
ljmp
div
cs
mov
mov
inc
mov
adc
cltd
xchg
test
adc
enter
lds
xor
sbb
push
mov
fmulp
sbb
rclb
jge
in
call
mov
cmpsl
mov
outsl
adc
ds
js
xor
aad
lock
mov
or
in
mov
scas
xorb
add
dec
sarl
pop
mov
jmp
push
std
pop
pop
add
repnz
mov
inc
cmc
jno
push
sbb
sahf
jge
mov
push
outsl
or
inc
jp
insb
add
push
push
fadd
pop
frstor
loop
into
imul
insb
icebp
pop
nop
mov
pushf
pop
in
inc
mov
or
jns
cmp
or
xchg
jno
sbb
xor
xchg
push
aam
xchg
push
fcoms
nop
mov
icebp
mov
fstps
ffree
add
insl
ret
inc
xor
mov
push
mov
and
push
dec
cmpb
mov
loop
mov
call
cltd
decl
jl
pushf
sarl
mov
or
loope
jecxz
call
mov
movb
inc
pushf
xchg
movsb
sub
repz
push
add
hlt
mov
or
paddsb
insl
ss
add
push
sub
xor
and
add
aas
mov
or
fstp
push
rorl
imul
cmpsb
icebp
lds
pop
and
dec
loop
insb
movsl
jae
cmp
jle
or
xchg
aas
pop
pop
mov
xor
outsb
shlb
mov
sti
jmp
sub
and
jle
mov
add
daa
mov
push
xlat
dec
mov
xchg
test
dec
andps
or
sub
data16
xchg
xor
push
jnp
iret
insb
inc
sbb
jo
mov
lahf
in
cmp
in
xchg
xchg
pop
pop
rclb
sub
push
rcr
xchg
push
sub
mov
inc
add
push
mov
sbb
sub
into
aaa
cld
scas
dec
sub
out
test
inc
js
dec
dec
jg
lcall
push
test
add
popa
jae
movsb
mov
jnp
lds
je
addb
js
xor
fisubl
sub
xor
je
test
mov
rclb
sbb
dec
cwtl
cmc
stc
ret
lods
das
sbbb
negl
xchg
jmp
adc
push
or
jns
or
push
lret
daa
or
ljmp
jl
cmp
mov
and
cli
lock
jp
sbb
dec
xor
adcb
inc
xchg
popa
xchg
rcl
flds
or
inc
push
bound
mov
out
fwait
dec
jle
xchg
sub
ds
sbb
xlat
in
cmpsb
xchg
push
push
js
test
mov
pop
movsl
sbb
and
adc
sub
imul
add
roll
sub
stos
adc
fadds
jne
rorb
outsb
add
fdivr
or
rol
pop
xor
inc
fimuls
stc
sbb
pop
add
and
inc
sbb
inc
fcoms
movsl
fsubrl
xor
testl
mov
mov
sbb
mov
sub
pusha
lock
outsl
jecxz
shrl
sbb
subb
mov
lock
test
test
adc
pop
jns
pavgb
mov
mov
xor
mov
mov
test
and
mov
xchg
mov
cltd
adc
je
adcb
fcomp
je
mov
pop
mov
sub
push
inc
fcmovb
xor
add
mov
out
push
test
mov
and
push
in
add
in
mov
roll
inc
push
mov
fisubl
arpl
add
push
cmp
jnp
mov
ret
shlb
inc
xor
pop
ss
in
sub
jmp
cs
cmpb
xchg
ja
faddp
push
aas
cmp
sub
adc
sbb
push
pop
mov
inc
inc
in
mov
loope
pushf
std
pushf
mov
lods
xchg
shrl
mov
cli
sbb
pop
push
mov
adc
or
inc
adc
fs
lods
repz
shll
test
rcl
in
js
add
cmpsl
lods
push
pop
sub
xor
sbb
fucomp
push
sub
std
jo
mov
mov
mov
push
aaa
lret
je
jno
or
pop
mov
mov
aad
or
mov
rep
cmpsl
mov
stos
mov
xor
adc
into
lea
ss
pop
not
mov
iret
clc
repnz
int3
shrl
xor
and
sub
mov
jmp
sub
lods
stos
jb
mov
hlt
and
push
xchg
add
mov
inc
xchg
jo
test
scas
aas
push
popa
or
into
mov
lods
stos
leave
adc
pop
mov
inc
mov
dec
gs
movsb
js
aaa
push
lcall
stos
imulb
rorl
pop
test
adcl
mov
or
out
xchg
cltd
into
leave
repz
sbb
out
jns
mov
jnp
mov
pop
cmpsl
dec
cmp
mov
fwait
dec
pop
pop
lahf
lods
xchg
sub
test
sbb
adc
data16
adc
std
dec
inc
sbb
xchg
movsl
dec
aas
sbb
ljmp
jle
bound
jae
cmp
sbb
idivb
shlb
ljmp
rol
nop
jg
jo
sbb
mov
xor
arpl
gs
pop
jg
iret
add
jne
cmovle
xor
dec
fsubr
sbb
sbb
lahf
loopne
cmp
into
repz
cltd
stos
jns
push
out
cmp
fs
ret
outsw
dec
dec
cmpsb
jae
sub
cmpsl
fidivrl
leave
xchg
mov
fimull
and
mov
sbb
jl
out
test
out
xchg
mov
and
push
jne
cmp
rclb
ret
jae
lret
pusha
jle
popa
xor
fldt
push
cmp
xchg
andb
xchg
mov
bound
nop
stos
hlt
fmull
out
dec
or
lds
scas
test
loope
and
push
hlt
pop
outsl
push
cli
fs
stc
xchg
hlt
push
es
aas
inc
inc
jae
cmp
mov
adcl
daa
jg
mov
scas
mov
adc
pop
jle
push
or
inc
adc
mov
iret
cmp
dec
data16
loopne
pop
fistpl
jmp
dec
add
mov
pop
int
shlb
push
mov
cmp
mov
and
add
jp
xor
sub
cmp
es
int3
clc
movzbl
push
test
fistpll
pusha
mov
dec
xor
popf
addr16
mov
sub
mov
lds
sbb
lods
mov
pop
jnp
push
leave
sbb
loopne
jg
hlt
popa
xor
hlt
xor
pop
adc
or
sahf
mov
jae
repnz
or
lock
push
sub
stos
dec
or
out
dec
iret
mov
fadd
popf
aas
cli
fstps
aad
in
loope
ficoms
rolb
ja
and
daa
mov
out
or
mov
jno
xchg
mov
adc
js
pop
lcall
cmp
mov
push
popf
cwtl
fistl
out
or
icebp
xchg
sbb
or
scas
cld
ret
data16
xchg
shrl
sub
push
jecxz
pop
shll
scas
sbb
xor
inc
cmp
xor
push
dec
fnstcw
inc
jb
xchg
in
test
lds
test
inc
jo
das
mov
mov
xchg
push
mov
mov
add
out
jbe
in
repz
cld
insb
loopne
call
adc
mov
dec
cltd
push
mov
push
addb
das
into
out
push
cltd
jp
inc
movsb
shll
int3
hlt
mov
int
push
ret
sbb
loopne,pn
pop
push
stos
imul
push
mov
xchg
pop
jge
dec
mov
adc
into
sub
sub
aam
in
stos
repnz
out
lret
jae
mov
es
lret
add
mov
xchg
pop
std
lret
dec
pop
fcomi
fiaddl
aas
cmp
xchg
aaa
lret
stos
cli
mov
jg
xchg
daa
xchg
cld
push
shrl
push
jns
jbe
stos
jmp
imul
mov
ljmp
mov
scas
sarb
pop
in
inc
fdivs
decb
xlat
lds
xlat
push
notb
xor
sub
jo
push
jge
hlt
dec
adc
sub
cltd
daa
sahf
sbb
mov
push
pusha
sub
aas
inc
into
cmp
push
int
sarl
aam
mov
mov
sbb
cmpsl
arpl
out
and
clc
pusha
xchg
cmp
notb
sub
and
hlt
enter
sub
stos
xchg
push
pop
xlat
mov
das
push
push
pop
bound
fistpll
and
pop
dec
aaa
jle
push
testb
cs
and
mov
sbb
inc
add
xchg
jmp
xor
fcompl
inc
cs
adc
and
adc
xlat
data16
jmp
jmp
or
leave
cmp
ss
mov
outsl
pop
insb
mov
sti
xorb
push
xchg
and
cmp
add
inc
nop
loop
stos
ja
decb
sub
adc
jae
je
xchg
pop
adc
jecxz
test
or
cli
fwait
lea
in
out
xorb
mov
fistps
aas
cltd
cmp
pop
data16
in
popa
dec
mov
push
or
jg
leave
stos
pop
xchg
movsl
addr16
cmp
cld
and
subl
fistps
std
or
push
mov
pop
push
sub
mov
push
sbb
xor
xor
mov
mov
cwtl
inc
into
inc
fisubl
xchg
add
and
sarl
ror
fiadds
addr16
std
or
xlat
lret
xchg
pop
mov
mov
add
aaa
add
cmp
push
insl
sub
sub
enter
loop
loopne
shlb
pop
nop
mov
or
inc
add
jno
leave
push
cmp
imul
mov
mov
cs
jp
out
mov
xchg
das
jp
mov
in
push
fimull
mov
add
xor
cmp
std
push
mov
inc
repnz
push
fiadds
mov
xchg
loopne
test
dec
arpl
shl
lock
aam
daa
repnz
xchg
bound
push
jae
jmp
lds
cmp
bound
xor
insb
in
sbbb
lods
push
insb
mov
mov
inc
imul
xor
fs
mov
cmc
cs
iret
imul
xor
dec
inc
sub
xchg
pop
outsb
cwtl
sub
cmp
pop
mov
loop
mov
in
cltd
js
test
xlat
sahf
repz
sub
mov
xor
add
xor
ja
jg
aaa
leave
pop
sahf
aam
bound
call
in
repz
andl
je
pop
pop
jecxz
xor
sub
lret
cmp
lea
nop
mov
push
das
push
pop
stc
xchg
adc
sub
adc
js
sub
push
mov
repz
movb
mov
mov
dec
mov
in
mov
dec
movsl
cmp
cmpsl
pushf
xor
jl
pop
jl
push
stc
gs
lods
sbb
hlt
jmp
mov
arpl
fwait
daa
loopne
movsb
shlb
out
into
mov
mov
cld
dec
loope
xor
sti
adc
cmpsb
gs
push
mulb
jbe
and
scas
fdivs
rcll
sti
ss
pop
sti
dec
mov
cmc
cld
iret
mov
outsl
xor
mov
mov
or
jp
aam
loopne
mov
or
inc
xchg
sahf
mov
sti
sahf
cmp
push
dec
add
inc
inc
mov
lds
test
cmp
roll
repz
shll
xor
sub
clc
scas
jno
or
rorl
std
dec
cld
pop
push
and
pop
shrb
mov
fmull
push
ret
jge
jl
push
loop
ja
pusha
out
cmp
outsb
mov
inc
cwtl
stc
lods
push
xlat
or
jns
cmp
mov
jbe
je
pop
adc
cli
lods
into
push
lods
adcl
adc
into
push
and
popf
xchg
enter
leave
imul
mov
xor
cmp
arpl
sti
inc
lea
fistpl
pushf
push
dec
inc
xor
cmp
loope
mov
fsubs
xor
add
mov
sti
mov
lods
inc
aaa
cld
leave
push
lret
mov
ss
pop
add
push
add
out
rcrl
cmpsl
jno
and
ljmp
dec
inc
nop
xor
mov
data16
popf
stos
pop
jg
push
pop
dec
push
enter
mov
xchg
cmp
mov
xchg
icebp
inc
xchg
sarb
inc
lea
jno
adc
and
dec
arpl
adc
dec
mov
daa
out
movsb
call
inc
add
mov
inc
loop
add
and
dec
and
pop
jecxz
jns
les
push
jae
inc
mov
rclb
sbb
sbb
fdivp
ja
insl
into
cmp
aaa
push
inc
cmp
stos
aaa
adc
insl
inc
mov
push
xchg
iret
push
jecxz
loope
sbb
xor
inc
fistl
or
pop
sarl
insb
iret
add
or
fistps
xor
mov
mov
es
cltd
xor
daa
aad
clc
xchg
das
fsts
loope
popf
mov
pop
adc
or
xchg
inc
add
mov
jne
inc
icebp
sbb
dec
pusha
enter
dec
push
or
jmp
popf
roll
dec
pop
pop
pop
notl
outsl
adc
les
mov
movsb
rclb
jg
jne
and
xchg
cmpsb
leave
and
push
xchg
xor
fdivrl
int
notl
push
jnp
movsb
sbb
aas
sti
cmp
and
sahf
sbb
pop
leave
mov
push
and
ror
dec
jnp
sub
cmp
lods
std
out
cmpl
add
pop
int3
lods
or
pusha
and
adc
aas
outsl
fisttps
mov
inc
cmp
dec
jl
iret
cmp
das
dec
or
mov
das
mov
bnd
xlat
mov
ss
js
pop
ss
das
cwtl
pop
pusha
push
push
xor
dec
or
mov
sbb
jecxz
aam
fisttpl
xchg
lret
push
sub
adc
mov
popf
push
cs
fldt
mov
cli
cmp
out
addr16
push
xchg
mov
adc
sbb
jmp
mov
push
pop
stos
mov
or
jl
test
pop
push
mov
lcall
mov
and
jle
insl
sub
mov
add
sub
inc
jmp
dec
and
pushf
fmull
pop
dec
lahf
sbb
add
cmpsb
std
mov
not
ret
fistpl
cmp
cmc
mov
or
fsts
add
shlb
xor
fbstp
cmp
idivl
add
cwtl
add
adc
dec
icebp
loope
inc
mov
aas
fsubs
vmwrite
mov
and
addr16
pushf
sub
fcoml
sbb
xor
xchg
je
xchg
mov
cltd
sahf
and
fs
movsl
fsubl
popa
js
hlt
in
adc
sub
push
pushf
pop
fiaddl
stc
mov
jae
cltd
sub
push
pop
out
dec
cmpsl
adc
in
jl
cmp
ds
push
testl
mov
fld
aaa
push
cmpl
dec
les
add
in
mov
hlt
test
jmp
push
xchg
loop
es
lods
popa
or
push
cmp
insb
jmp
mov
stos
inc
pop
call
jge
push
add
out
sub
push
or
shlb
jmp
pop
cmpsl
push
fcomps
cmp
add
es
xchg
mov
mov
imul
push
iret
add
or
xor
adc
es
imul
jg
in
cld
lds
mov
sbb
jg
out
popf
flds
or
push
sti
jmp
hlt
out
lcall
xor
and
cwtl
fists
sbb
popa
xchg
xor
jbe
mov
outsl
dec
xchg
test
xchg
add
push
and
pop
push
mov
jge
stos
lret
fs
rcl
pop
or
std
or
inc
push
test
pusha
into
add
stos
or
stos
dec
add
jbe
adc
into
sahf
add
xchg
mov
jb
add
cwtl
sbb
pop
dec
aaa
shrl
daa
add
hlt
mov
push
mov
and
loop
mov
mov
es
imul
movsl
xor
or
sub
pop
sub
fdiv
or
rcrl
fs
lds
add
xchg
test
xorl
and
dec
add
daa
xchg
push
ds
jb
push
orb
cmp
jle
and
out
adc
add
add
lret
les
jp
sub
jnp
mov
pop
iret
rorl
gs
pop
add
pop
push
hlt
cpuid
rcll
fnstcw
sub
pop
enter
aas
subb
out
mov
cwtl
test
aam
add
push
rcr
adc
call
adc
cmp
mov
out
jno
rorl
fwait
ret
call
fimull
je
stos
xchg
rcl
or
pop
out
push
mov
or
sahf
std
sbb
mov
out
jns
cmpsl
sub
test
dec
cmp
adc
test
hlt
dec
pop
ljmp
jl
scas
xor
or
lea
xor
out
pop
mov
pushf
je
jne
shrb
rcll
flds
add
cmp
sub
lret
mov
pop
add
cmp
sub
hlt
leave
notl
pop
stc
push
mull
sarb
lock
jo
int3
mov
clc
inc
pop
mov
nop
mov
int
hlt
mov
jae
out
xchg
add
insb
jmp
loope
cmp
sbb
xchg
lcall
das
hlt
out
outsl
add
dec
outsl
sub
xchg
je
lret
out
dec
lds
sub
jp
push
cmp
cmp
rorb
clc
dec
fwait
mov
add
call
leave
jle
gs
mov
iret
mov
or
sbb
loopne
mov
pop
dec
mov
fistps
jnp
sub
shll
rcrb
inc
lds
test
outsl
roll
jge
push
mov
in
cltd
leave
sub
and
fs
in
aad
sti
loopne
pop
add
add
shlb
cmp
dec
add
adc
adcl
fildll
push
stos
and
inc
jnp
inc
xlat
push
inc
icebp
in
shrl
loope
mov
xchg
fucom
pop
insb
inc
test
ds
sub
mov
repz
dec
lret
dec
inc
xchg
pusha
fldenv
pop
pop
into
lock
jnp
int
adc
dec
push
fmull
xor
movsb
push
imul
lds
fs
repz
rorl
push
imul
icebp
fdivrl
sbb
inc
int3
push
add
stc
int3
mov
insl
mov
mov
cmp
and
add
jno
jp
or
mov
mov
push
push
mov
fdivrs
mov
cli
jno
cmp
test
jnp
stos
je
push
push
data16
std
lods
inc
testl
mov
adc
add
insb
pop
jbe
es
test
or
push
pop
stos
mov
cmpsl
jmp
lret
outsl
or
pop
loope
or
movsb
clc
repz
cmp
roll
mov
push
xor
adc
adc
pusha
data16
lock
mov
sbb
rclb
mov
jmp
rorb
add
and
mov
pop
mov
or
rcr
push
inc
fwait
mov
mov
stos
mov
scas
push
ret
push
cmc
push
push
adc
and
cmpsb
jo
jae
icebp
mov
and
mov
mov
dec
mov
mov
mov
push
iret
test
mov
inc
fisttps
movsl
insb
popf
inc
sbb
mov
jno
dec
dec
aaa
xchg
push
int
lds
iret
andl
mov
cli
into
addb
mov
add
sbb
xor
mov
sbb
mov
iret
cmp
lahf
inc
data16
dec
push
ret
imulb
xor
jmp
adc
jle
or
in
dec
push
idiv
jecxz
gs
jg
out
test
repnz
sbb
outsl
lds
fsubl
loopne
divl
subl
xchg
repz
mov
outsb
lods
arpl
sub
mov
push
enter
ljmp
sbb
ja
and
jnp
aad
and
and
mov
push
leave
pop
cld
and
jbe
pop
add
add
lret
aaa
out
arpl
pop
mov
inc
call
gs
push
fistl
ss
mov
mov
mov
add
and
shlb
pop
fcompl
lret
roll
test
xchg
jbe
divl
les
sbb
push
cmp
ret
jnp
sbb
aam
ja
adc
fisttps
pusha
jecxz
pop
insb
insb
out
pop
dec
out
mov
xchg
aam
leave
push
push
sbb
mov
loope
call
fldt
loopne
jl
lcall
cmovle
jmp
xor
loope
flds
incb
movsb
mov
sbb
test
push
idiv
rorl
sub
xchg
out
test
push
sub
dec
mov
add
add
or
outsb
jno
cmp
aam
jne
sub
mov
xchg
pop
in
aas
jg
jp
and
and
aas
add
adc
inc
push
adc
in
fwait
aaa
iret
cwtl
pop
ss
push
loopne
mov
xor
loope
pop
repz
out
or
xchg
rclb
loopne
stos
mov
pop
addl
dec
pop
inc
jbe
add
sub
push
xlat
popf
js
lahf
push
xchg
adc
add
neg
outsb
inc
loopne
je
arpl
loop
cmp
in
shrb
loop
bound
pop
orb
push
sub
sub
popf
loopne
imul
mov
cwtl
adc
adc
stc
inc
inc
out
loop
fdivrp
add
std
sahf
sbb
sub
xchg
sarl
inc
dec
fcomip
dec
push
xchg
jae
in
jl
inc
lods
out
jecxz
loopne
jae
stos
test
aaa
mov
gs
jb
sahf
call
pop
inc
and
icebp
cmp
or
decl
insl
add
or
mov
jae
jl
xor
cmpsb
mov
mov
push
test
aas
std
xchg
xchg
push
mov
sbb
ljmp
rcl
push
hlt
arpl
paddsb
dec
das
addb
mov
xchg
push
test
sbb
lods
lret
fadds
arpl
mov
leave
leave
lcall
or
dec
mov
ret
mov
mov
mov
adc
and
lret
mov
or
jg
aas
cmp
jmp
js
popf
sub
xchg
and
ret
push
jbe
sub
out
rcr
cltd
data16
lret
add
jnp
push
pop
std
push
jmp
xchg
xchg
mov
dec
dec
scas
cs
repnz
leave
mov
out
adc
test
pop
shrl
int3
add
bound
dec
aas
push
test
or
xchg
pop
addb
insb
xchg
mov
cld
mov
mov
sti
mov
cld
sti
sub
rclb
push
pop
mov
mov
rcr
lcall
ja
loop
inc
add
ljmp
inc
push
jb
push
jno
push
pop
xchg
cmpb
out
inc
insl
fsts
lcall
out
cmc
sub
sbb
mov
push
mov
fisttps
sti
pop
cmp
fisubs
dec
call
lcall
jo
xchg
sbb
inc
cmp
cmp
repz
loop
test
lahf
es
cltd
jb
mov
cmp
mov
fldenv
dec
fisttpl
jge
xchg
push
push
pop
out
pop
add
sbb
pusha
push
lret
add
movsb
jge
ret
jae
inc
gs
add
hlt
inc
int
faddl
push
xor
jb
jge
dec
iret
out
jne
mov
mov
ljmp
cmp
sbb
mov
mov
jns
bound
push
inc
sbb
push
sbb
movsl
mov
mov
and
xchg
in
xor
push
add
mov
dec
gs
cli
push
std
lret
std
call
mov
xchg
sbb
fdiv
subb
cmpb
push
push
push
xor
cmc
shrl
rolb
push
imul
pop
add
movsl
inc
ret
loop
daa
xchg
andb
inc
jge
cmp
adc
retw
loopne
adcl
mov
cmp
fstpt
out
sahf
pop
hlt
push
outsl
sbb
xor
push
hlt
adc
insb
and
ficompl
pop
cmp
dec
mov
dec
in
mov
psubusb
xor
push
sbb
push
andl
adc
inc
in
nop
call
mov
add
add
inc
push
jnp
adc
mov
aam
xchg
and
jno
daa
notl
loopne
pop
sub
repz
xor
jecxz
dec
sbb
xchg
lss
loopne
repz
sub
int3
daa
movb
repnz
stos
cmp
loope
adc
xchg
jle
lahf
mov
loope
jmp
or
aaa
sbb
mov
fisttpl
or
notl
cmp
add
pop
dec
stos
scas
hlt
repnz
pop
sub
rcll
add
mov
fcomps
mov
cmp
inc
shlb
sub
inc
stos
iret
test
stc
adc
adc
xchg
aam
cmp
lcallw
leave
fistl
pop
inc
jnp
add
cmp
inc
lds
stc
cmp
adc
add
fs
inc
push
sub
adc
sbb
adc
mov
jnp
mov
pop
rclb
pop
push
in
roll
jnp
mov
and
stos
js
ret
out
pop
adc
pop
shlb
jae
imul
insl
lds
mov
enter
loopne
leave
push
pop
xchg
pop
adc
pop
icebp
subl
jae
jno
ss
aaa
popa
leave
fsubrs
xor
loope
js
add
js
sbb
addr16
or
jmp
mov
div
leave
adc
imul
and
jg
jns
add
fisttps
dec
js
stc
loopne
mov
inc
lahf
inc
push
out
pop
cmp
pop
or
popf
pop
fstpt
push
test
inc
xchg
sub
xlat
cltd
add
xlat
mov
push
stc
pop
push
sbb
test
movsl
dec
mov
adc
repnz
sarb
pushf
push
in
mov
xchg
dec
or
das
xor
xchg
push
mov
mov
bswap
adc
out
sub
or
jle
push
cmp
test
xchg
dec
cwtl
dec
pop
pop
clc
mov
cli
addb
cmpsl
push
loopne
mov
add
cli
sub
adc
mov
rolb
inc
aaa
jb
adc
mov
jp
ss
fldenv
fadds
jl
les
mull
dec
popl
push
movsl
dec
mov
inc
stc
add
cmp
ret
push
ret
fisttpl
daa
xor
test
addr16
and
in
ret
add
lahf
sbb
arpl
cmpsb
mov
jmp
sbb
sub
ds
push
and
popf
and
sub
add
repz
jnp
cmp
inc
daa
inc
sub
jmp
or
push
inc
xlat
stos
xchg
into
pop
dec
inc
ret
push
std
or
enter
push
adc
imul
ftst
dec
pushf
or
add
stos
cmp
push
pusha
out
sub
push
mov
rcrl
xor
xchg
les
jb
inc
and
dec
les
sub
nop
gs
mov
mov
sbb
sbb
sbb
xchg
call
mov
adc
jl
cwtl
mov
ficompl
adc
inc
std
jnp
pop
cli
cwtl
or
rcrl
popa
cmpsb
mov
call
mov
inc
mov
mov
jle
xchg
jo
push
adc
mov
lret
inc
xor
dec
mov
out
call
mov
insb
xor
cmp
pop
sti
sbb
dec
call
cwtl
fdivs
ret
mov
cmp
sub
pop
bnd
xor
push
sub
shrb
lahf
lods
in
xor
test
jp
rclb
jbe
movsl
dec
leave
pop
mov
jle
iret
in
xor
push
and
in
int3
jp
xor
push
pop
lahf
inc
ds
sub
jb
jp
lcall
mov
cld
adc
sub
std
xlat
addr16
xchg
dec
stc
mov
and
cmc
les
test
shl
es
cwtl
push
xor
in
iret
hlt
loope
loope
scas
adc
ja
orb
outsl
xlat
pop
inc
call
pusha
push
push
int
sbb
mov
mov
xchg
push
shrb
adc
out
popf
shl
inc
fldcw
push
movsb
mov
in
or
cli
cltd
mov
mov
aas
mov
ja
aaa
insl
jnp
mov
mov
push
sub
mov
testl
dec
iret
mov
pop
mov
xchg
push
sbb
pusha
sub
sbb
out
pop
mov
xchg
out
fwait
mov
adc
push
sbb
cmpsb
or
inc
pop
out
imul
mov
or
sub
bound
cwtl
mov
test
inc
xchg
adc
cmc
push
xchg
mov
pop
lcall
jno
pop
cmp
mov
daa
adc
lret
cwtl
xor
add
mov
pusha
faddl
mov
call
lods
clc
out
mov
lret
and
pushf
xchg
addr16
adc
push
add
shl
mov
adc
shlb
mov
fistl
fistpl
scas
pop
add
sbb
mov
lret
push
insb
fwait
add
xchg
jecxz
mov
mov
jnp
add
xlat
sub
sahf
loopne
sub
popa
pop
pop
sub
mov
dec
inc
xchg
adc
ds
sbb
or
imul
adc
lahf
pop
jmp
jb
add
jg
push
pop
jbe
dec
dec
sbb
mov
das
repnz
add
imul
jne
jo
test
mov
fwait
and
adc
sbb
out
shll
imulb
jg
hlt
orl
addr16
dec
out
clc
enter
fsubrl
xchg
stos
outsl
fiaddl
sbb
les
lds
cmpsb
mov
mov
jmp
mov
jbe
adcl
adc
push
mov
pop
bnd
test
in
xor
out
mov
scas
dec
mov
pushf
xchg
cltd
fnstenv
adc
mov
xor
adc
push
push
inc
adc
movsl
mov
outsb
mov
mov
mov
mov
testb
lcall
stos
mov
push
mov
push
ljmp
mov
mov
in
push
addr16
push
push
lds
jl
out
rol
mov
filds
cltd
aas
mov
rcll
cmp
mov
sbb
sbb
hlt
pop
lods
fisttpl
fistpll
into
ret
xor
test
fwait
and
cmp
pop
or
and
ja
popa
push
stos
sar
jp
scas
xchg
mov
push
test
imul
dec
test
inc
js
test
push
out
scas
lcall
mov
hlt
and
mov
adcl
enter
jmp
fbld
rol
sbb
nop
das
divl
mull
mov
mov
ret
mov
iret
sub
adc
aaa
call
and
cs
cmp
in
sbb
or
les
je
sbb
or
mov
fcomps
push
lds
pusha
add
push
rcr
fcoms
dec
inc
add
add
les
inc
cli
pushf
mov
push
mov
imul
lret
les
xchg
out
out
push
pushl
int3
mov
push
xor
lods
push
mul
repz
aad
rorb
mov
inc
push
cs
or
fistl
xchg
inc
mov
xchg
mov
pop
gs
imul
insb
xchg
addr16
add
scas
adc
incb
inc
movsb
lret
inc
ret
inc
hlt
imul
enter
std
sbb
sub
pusha
fildll
sbb
imul
daa
cmpsb
push
bound
lods
xchg
push
ret
insl
pop
jo
mov
in
lock
gs
pop
jno
loope
jne
and
xchg
and
imul
clc
orl
into
pop
mov
shl
inc
inc
cmp
jo
or
lcall
jmp
cld
mov
in
adc
outsb
push
mov
push
xchg
mov
jns
bt
lods
les
pushf
int3
mov
pop
mov
jno
imull
stos
add
xchg
sub
jmp
sbb
mov
or
cld
add
xor
mov
cmp
orb
jae
ss
daa
xchg
adcb
test
cmp
fucomi
stos
mov
mov
ret
mov
scas
lds
jl
in
mov
fs
inc
jmp
movsl
add
test
or
pop
mov
mov
pop
stos
jo
dec
adc
xchg
sbb
call
test
fistl
mov
push
shll
jge
gs
and
daa
mov
cwtl
fists
jbe,pn
imul
add
inc
inc
rcll
std
jo
dec
shll
pusha
popf
mov
mov
and
xor
lahf
jp
and
mov
and
aas
jnp
gs
inc
out
mov
mov
mov
pop
shlb
jl
roll
ret
insl
ljmp
adc
add
rcll
or
fdiv
xchg
in
hlt
or
in
adc
lret
jno
adc
jae
or
imul
stc
xor
push
or
push
xchg
mov
in
or
sbb
adc
cmpsb
xchg
sub
pop
xorl
sbb
or
shll
fmulp
call
push
arpl
into
sub
test
mov
inc
sub
add
loopne
pop
stos
out
pop
add
fdivp
mov
repz
arpl
loopne
pop
test
ficomps
repz
cli
and
mov
cmpsl
je
dec
rol
xchg
insl
adc
sub
insb
idivb
pop
adc
bound
jb
jg
mov
and
scas
inc
inc
xlat
iret
dec
arpl
adc
mov
insl
mov
inc
mov
jns,pt
xchg
inc
cltd
pop
out
ds
cmp
imul
ds
out
adc
mov
lcall
sub
pop
sbb
mov
mov
sbb
push
inc
out
roll
data16
lcall
inc
pop
jae
adc
push
dec
lret
push
cld
inc
lahf
cltd
in
out
outsl
out
sub
sbb
movsl
int3
sbb
stos
cmp
hlt
out
xor
mov
sub
xor
out
insb
stos
inc
dec
jp
ds
jno
mov
pop
push
inc
sbb
xor
or
loope
or
pop
push
lahf
lahf
or
addl
mov
cltd
mov
mov
adc
ds
mov
sub
insl
cs
pop
addr16
insl
dec
pop
xlat
mov
mov
mov
lods
pop
inc
adc
icebp
sbb
das
scas
imul
aad
jmp
ret
sub
mov
push
or
jno
and
mov
jno
inc
fdivs
pop
scas
in
sub
dec
pop
pop
inc
cmp
add
ficoms
lds
addr16
jge
pop
add
insl
mov
sti
imul
insb
jge
adc
mov
jbe
adc
mov
xchg
xchg
insl
jl
cld
pop
sahf
adc
push
ret
mov
push
or
dec
or
inc
inc
pop
test
mov
push
mov
adc
mov
test
gs
lcall
lea
aas
pushf
adc
lahf
inc
xlat
xchg
mov
sbb
add
fisttps
mov
adc
ss
pop
sbb
loopne
mov
xor
xchg
shrl
in
inc
push
pusha
dec
cmpsl
jecxz
fimull
lods
cmp
lret
cmp
adc
jge
stos
jae,pn
sub
push
arpl
add
pop
push
incl
adc
rorl
daa
mov
mov
addl
jnp
mov
pop
or
and
cmpb
in
pop
fimuls
into
dec
push
test
adc
bound
push
divl
push
dec
sti
insb
loop
dec
bswap
push
ja
bound
push
insb
jb
std
jle
fisubl
dec
clc
insl
jo
in
out
push
ret
cmp
mov
and
leave
orb
add
sbb
les
iret
subl
rolb
cwtl
fsubl
sub
push
ja
push
loopne
xor
mov
push
jb
xor
fadd
xor
or
push
jge
je
daa
fisttpl
mov
and
push
xchg
adc
mov
mov
lods
aad
daa
pop
mov
sbbb
xchg
jg
outsb
jmp
jne
jnp
repnz
jl
test
mov
xor
mov
and
adc
mov
mov
sbb
daa
scas
pop
addr16
in
lds
repz
sub
idivl
jp
sbb
dec
xor
out
push
cmp
shrl
andb
pop
orl
cld
insb
fidivrs
sub
pop
mov
push
loopne
fldcw
insb
fidivl
jecxz
xchg
dec
arpl
clc
jle
adc
test
or
pushf
rolb
or
movl
jns
lea
mov
mov
mov
fists
and
mov
xor
push
sub
mov
sbb
fsubr
jno
popf
lahf
pop
mov
lock
jge
pop
adc
push
mov
stos
push
fwait
adc
stos
cmp
divb
jnp
jmp
into
sub
push
pop
js
mov
mov
mov
sti
shll
insl
jns
sti
mov
push
ror
inc
or
loopne
xchg
cmp
fcoms
jp
adc
test
pop
jne
fcoml
insb
stos
or
pop
cmpsl
or
test
std
jnp
mov
jecxz
test
fwait
cmp
jmp
xchg
in
mov
mov
in
mov
xor
xor
adc
std
mov
in
fstl
and
out
pusha
aas
inc
or
cmp
push
xlat
mov
insb
inc
sub
pop
insb
orb
shl
dec
mov
jg
js
mov
xchg
add
and
scas
sub
xor
fbld
xlat
jno
pusha
orb
push
pop
shl
jno
pop
jo
xor
mov
std
dec
add
shll
test
mov
rolb
jge
sub
inc
jno
pop
fwait
in
in
cmp
or
xchg
fimuls
xor
jle
mov
mov
testl
jbe
push
sahf
adc
mov
fsubl
cmp
fnstcw
aam
loop
push
cmc
imulb
inc
mov
mov
xchg
push
shrb
lcall
in
idiv
rcrl
xlat
xchg
jo
or
inc
es
cmp
in
test
mov
add
fstpl
lcall
cmp
insl
test
cmp
and
rolb
lods
jecxz
xchg
sub
lods
vpshufhw
jg
or
push
and
stos
aaa
cltd
xchg
out
outsb
mov
cmp
mov
mov
inc
aad
xchg
scas
ret
jg
sbb
push
inc
int3
xlat
adc
dec
arpl
sti
xor
lods
jl
cs
mov
inc
xchg
dec
cltd
sub
inc
sbb
fwait
addr16
add
push
add
lcall
lret
jle
notl
mov
lock
int
and
daa
cmp
xchg
xchg
ret
jp
dec
xor
xor
cmp
cmpsl
hlt
xor
js
movsl
aam
inc
out
adc
mov
jo
dec
cld
fstpt
xor
cmpsl
stos
dec
inc
inc
sbb
movsb
icebp
fldenv
ss
rol
sub
popa
ret
in
push
movsb
xchg
cli
lds
add
out
idivl
add
mov
dec
fnsave
jae
adc
outsl
cltd
adc
adc
jg
jl
aaa
imul
in
mov
mov
mov
call
fisttpl
das
cmp
pop
and
popf
les
jecxz
cmp
xchg
out
jno
mov
mov
mov
add
cwtl
adc
or
ss
lock
xor
cmpsb
add
jns
clc
push
in
dec
cli
add
pop
arpl
out
jo
scas
pop
repz
adc
pop
xor
insl
fmulp
jl
and
jne
call
jbe
repnz
mov
xor
pop
and
daa
aam
pop
pop
lcall
cwtl
fbstp
lahf
loopne
aam
rcr
fisttpll
nop
fs
pop
addr16
sub
sbb
xor
jo
lock
push
jne
mov
data16
lea
ret
dec
xchg
mov
fnstenv
jb
jge
add
cmp
inc
movsb
jnp
in
mov
dec
ret
mov
repnz
sub
ss
pusha
xor
div
clc
shlb
jge
lds
jmp
cmpsb
fcomps
icebp
pushf
fs
jg
fs
xor
push
test
or
xchg
adc
stc
adc
push
jbe
mov
mov
xor
aaa
imul
pop
insl
pop
ret
ds
sbb
mov
out
cmovb
scas
pop
arpl
add
fs
loopne
test
pop
push
inc
popa
addr16
rorl
dec
mov
sti
aad
ret
xor
stmxcsr
or
inc
xor
out
or
xchg
dec
data16
enter
mov
ja
jle
and
or
push
jmp
scas
scas
lret
cmp
mov
cmc
xchg
dec
fisubrs
pop
sbb
cli
xor
add
cmpsl
inc
push
pop
jbe
or
or
mov
ja
adc
lds
aad
ret
sahf
mov
inc
and
loope
mov
dec
out
insl
lea
cmp
pop
gs
cmp
jae
out
sti
out
test
push
js
gs
xchg
insl
inc
fdivs
test
jo
std
test
adc
cmp
les
or
nop
lret
or
test
or
xchg
or
push
mov
xchg
shr
es
test
shlb
inc
daa
lret
mov
imul
into
int
cmpb
mov
cmp
fidivl
sub
jne
fcoml
sbb
sub
lret
in
jae
xchg
mov
nop
xchg
das
mov
xchg
mov
loope
stc
pushf
sbb
inc
sub
mov
pop
sbb
and
sub
loope
lret
push
insl
push
sbb
aad
xchg
daa
add
insl
mov
pop
and
sbb
sub
mov
in
dec
push
sbb
adc
daa
mov
lcall
daa
fdivl
movsl
pop
mov
xlat
aas
arpl
add
ja
pusha
xchg
inc
ds
add
loopne
push
lret
lret
stc
icebp
xor
sbb
in
and
pop
rcll
pop
pop
addb
cld
icebp
sbb
adc
scas
cltd
pushl
loop
jge
fcoml
or
or
cwtl
sub
xor
mov
das
dec
jbe
mov
xor
js
jl
test
push
fs
fmuls
dec
pushf
in
out
cmc
xchg
mov
or
cmp
mov
jg
pop
mov
mov
mov
mov
and
fwait
dec
rcll
loop
insl
push
mov
nop
and
sbb
shrb
push
or
dec
pop
push
insb
jne
add
xlat
clc
dec
sub
lret
jl
push
es
xchg
push
stos
lods
jecxz
int
inc
jne
scas
hlt
outsb
js
or
sti
jl
xchg
jecxz
sub
fcmove
repnz
xor
ja
xchg
mov
out
xchg
sub
ss
add
das
mulb
mov
inc
in
fucomip
ds
aam
rolb
daa
or
cwtl
inc
sub
sbb
popa
ret
inc
push
fs
adc
ds
cmp
lods
lret
mov
in
inc
inc
int
dec
cs
inc
adc
dec
dec
xor
add
sarb
addr16
mov
mov
imul
sub
loop
pop
jecxz
pop
inc
test
jno
sbb
std
loope
mov
push
dec
flds
in
int
mov
cmpsb
mov
jmp
sbb
ret
mov
pushf
xor
xor
mov
jl
das
xchg
in
dec
dec
mov
inc
mov
jns
fnstsw
ss
mov
inc
xor
fnsave
add
sub
ds
inc
pop
loop
xchg
fwait
cmp
in
lds
xor
subb
in
sahf
loopne
out
mov
xchg
mov
push
xor
in
add
test
fildl
or
xor
in
pop
fs
sub
sub
xor
sbb
test
jmp
lahf
jl
in
icebp
sbb
xor
sbb
lea
cmpl
pop
repz
sub
jge
ret
cltd
test
pop
mov
add
aam
mov
and
cmp
imull
mov
mov
fcmovu
cmp
xchg
push
mov
call
das
leave
or
cmp
dec
adc
lret
xchg
les
push
aad
mov
test
jle
mov
je
xor
cmc
fdivs
pop
out
push
xor
ss
outsb
mov
jecxz
scas
and
sub
jge
enter
jmp
xlat
negb
xchg
test
pop
hlt
cmp
sub
add
mov
push
pushf
pusha
mov
rcrb
mov
jae
int
pop
popa
mov
jecxz
jecxz
jmp
pop
mov
aam
rcl
pop
fstps
mov
das
push
xlat
outsb
sbb
inc
outsb
sub
shll
pusha
clc
repz
imul
shr
sub
mov
xchg
test
mov
xchg
mov
loopne
ret
xchg
lret
lahf
sub
in
jb
and
cmp
add
or
ret
les
mov
aaa
int
mov
mov
sbb
addl
mov
lcall
movsl
pop
inc
inc
mov
into
cmp
xchg
test
enter
mov
jnp
insl
out
into
iret
mov
push
dec
sub
jle
pop
or
or
push
loop
dec
pop
or
push
in
dec
jo
imul
mov
test
pop
jns
mov
lock
push
imul
out
cli
cmp
mov
lcallw
sub
xor
pop
cltd
xor
rcll
ss
addr16
cmpsl
ljmp
adc
rcrl
add
pop
clc
push
pop
pop
pop
sub
push
push
dec
cmp
fistps
ret
daa
les
outsb
les
push
jnp
dec
out
aas
lock
inc
iret
test
inc
cmp
sbb
idivb
cmp
lahf
sbb
push
xor
fdivrs
test
dec
out
in
pop
jno
cmpsl
jl
sbb
inc
dec
mov
inc
jge
shr
jae
jecxz
loopne
push
test
lock
out
jae
nop
sub
and
mov
adc
or
leave
sbb
movsb
pop
dec
movsl
es
in
sarl
into
or
cmp
cmpsl
mov
insl
push
xchg
push
jmp
inc
movsl
stos
mov
stos
jle
add
xor
cmpsl
pop
mov
jecxz
cmp
mov
popa
lea
stos
call
xchg
fisubs
test
dec
mov
inc
jge
rclb
pop
pop
push
ljmp
mov
stos
mov
add
xchg
andb
pushl
mov
add
adc
dec
rcrb
ds
loopne
jo
fisubrs
sbb
andl
jle
cmpsl
sub
and
mov
add
cmpsb
xchg
cmp
push
ja
adc
and
adc
xchg
fisttps
imul
cmp
pop
in
push
inc
mov
fwait
fwait
adc
mov
mov
scas
jo
insl
pop
sbb
sbb
jb
mov
shll
mov
sti
dec
mov
data16
cmc
test
mov
mov
pop
sub
lret
or
lret
pop
mov
jns
outsb
mov
test
jns
mov
or
jg
jno
cmc
stos
cltd
cmpsl
sbb
sub
mov
mov
aaa
and
jmp
mov
das
xor
pushf
loopne
icebp
mov
mov
lods
hlt
dec
add
add
or
mov
test
adc
mov
repnz
xor
aas
push
pop
nop
frstor
lcall
adc
mov
ja
push
nop
sbb
pop
mov
cmp
cmpsb
push
cs
sub
add
test
cltd
cmp
inc
mov
arpl
out
loopne
push
test
mov
aad
lahf
add
push
push
cmp
aaa
push
mov
mov
and
dec
xchg
or
stc
xor
xlat
xchg
test
xor
pop
scas
fsubl
push
inc
sti
sbb
jp
insl
pop
xor
jge
push
je
or
cmp
xor
popf
in
sub
add
test
mov
mov
je
jo
pop
imull
aas
sbb
in
jle
push
inc
lock
jg
divb
repnz
jbe
xor
push
je
sbb
add
add
dec
popl
xor
inc
or
nop
xor
pop
ja
lea
mov
mov
xchg
loope
test
in
sbbb
in
jne
pop
lods
fcoml
mov
mov
dec
ljmp
stos
nop
and
minps
push
jno
in
mov
adc
dec
xchg
jecxz
mov
sbb
push
add
mov
add
aam
lcall
cmp
and
enter
or
shll
mov
loope
jb
clc
or
adc
jbe
push
inc
fistl
lods
lods
pop
in
mov
jecxz
cmc
int
cmp
test
push
xor
repz
addr16
inc
mov
xchg
je
out
push
push
aas
dec
mov
and
jnp
mov
test
pop
or
push
pop
es
pop
dec
rolb
out
loop
adcb
sti
insb
inc
xor
jp
inc
xchg
xor
loope
in
and
test
or
outsb
xchg
test
add
push
add
push
and
leave
push
xchg
push
or
push
push
mov
das
ret
inc
jnp
outsb
pop
fldt
call
sarb
loopne
cmpl
aaa
pusha
sahf
xchg
pushf
add
je
or
adc
mov
icebp
insb
xorb
jp
and
xor
sub
push
mov
leave
lcall
in
cmc
jns
pushf
es
leave
fsubs
rorl
jecxz
stc
jecxz
xor
pusha
add
out
ljmp
das
inc
cmc
xor
rorb
jmp
sbb
ficoms
imul
pop
sahf
adc
out
push
and
mov
aaa
outsl
jne
xor
inc
nop
test
in
cmp
pop
ret
pusha
adc
mov
rol
mov
xchg
out
inc
push
mov
repz
cmp
jbe
inc
dec
out
dec
dec
ja
dec
aas
mov
ljmp
mov
cmp
pop
addl
in
sub
inc
cmp
mov
mov
fistpll
add
mov
jge
or
inc
idivl
pop
jne
fadds
mov
sbb
clc
iret
lea
les
jecxz
fstpt
movsl
shlb
xchg
subl
ficompl
jb
leave
jecxz
aas
or
inc
add
xchg
and
push
sub
ja
push
mov
popf
or
mov
jne
add
aad
jb
cmp
xchg
xor
add
out
enter
lods
sub
jg
imul
pop
loope
daa
dec
loop
gs
inc
pop
sbb
mov
fnstcw
adc
push
sub
adc
sbb
test
add
dec
pop
sahf
mov
mov
call
pop
xchg
pop
into
notl
lods
mov
lock
add
stos
cmp
insl
pop
dec
dec
jne
leave
xor
hlt
add
jnp
add
pop
imul
das
rorl
add
push
jge
les
and
test
dec
cltd
inc
imul
add
mov
mov
enter
adc
lret
xlat
lret
cld
jecxz
out
in
and
cmp
jb
mov
pop
lods
sbb
add
loopne
push
lock
sbb
int
and
icebp
inc
add
sbb
inc
mov
xchg
les
lods
clc
fwait
scas
sub
push
xchg
mov
push
cwtl
dec
into
adcb
add
xchg
bswap
mov
dec
loope
sub
push
sti
repnz
ret
inc
fs
xchg
or
jb
or
pop
shlb
mov
mov
dec
gs
and
inc
gs
fsubs
repz
xor
jno
dec
mov
lahf
ja
cmp
mov
std
adc
and
xchg
out
imul
push
loopne
xor
out
mov
push
mov
cld
adc
mov
push
lods
mov
aaa
mov
sub
ds
mov
mov
or
xor
cmc
lock
into
sbb
pop
mov
movsb
mov
inc
push
pop
jb
shlb
std
ds
mov
push
stc
les
xor
hlt
leave
xchg
mov
dec
cltd
cmp
jns
adc
add
daa
pop
and
movsb
mov
in
cld
add
cmpsl
mov
pop
imul
cltd
sbb
push
je
into
insb
pop
in
mov
xchg
xor
mov
je
mov
adc
xchg
and
cmc
jns
jmp
test
sub
dec
jmp
mov
mov
jne
xor
xchg
mov
sbb
cwtl
or
mov
cmp
dec
daa
ret
inc
sbbb
sbb
out
pop
and
lahf
lcall
or
jle
int
sub
in
xchg
mov
xlat
sub
mov
jbe
inc
xor
xchg
push
sub
cs
pop
inc
sbbl
mov
cmpsb
push
arpl
insb
sbb
xor
pushf
test
sahf
fcomip
lds
or
cmc
addr16
aaa
adc
pusha
lcall
push
or
lcall
leave
out
pop
or
movsl
xlat
mov
ret
ljmp
int
test
ret
push
shll
shrl
cli
pop
push
mov
test
scas
mov
std
stos
sbb
out
jbe
popf
sbbl
cmp
iret
dec
dec
xchg
aaa
iret
jg
pop
xorl
pushf
mov
inc
cmc
bound
mov
xorl
iret
mov
daa
xchg
cmp
cs
and
sub
gs
inc
adc
xchg
push
jle
mov
add
mov
outsl
stos
jl
add
pop
cltd
xlat
adc
shll
xor
add
pop
repz
int
push
jbe
xchg
pushf
jnp
push
lea
cmpsl
lds
pushl
jno
sti
sub
mov
cmpsb
pop
xchg
pop
int
jns
in
stc
gs
popa
xor
or
hlt
cmc
cmp
xchg
ret
cmpsl
out
rorl
pop
lret
loopne
sub
fisubrl
std
pusha
inc
push
push
mov
loopne
mov
adc
in
repnz
mov
dec
js
rol
pop
or
sbb
popf
mov
lods
lahf
mov
sub
stos
xchg
cwtl
out
scas
lret
testb
lret
inc
fistps
pushf
adc
imul
dec
outsl
sti
rorl
jl
jns
fisubs
dec
mov
lcall
mov
jl
adc
adc
push
in
pop
outsb
push
cmp
test
push
subb
test
mov
xor
lods
cli
fldt
sbb
imul
adc
pop
pop
ss
lea
push
sbb
xorb
movsb
mov
test
lret
shr
rol
insb
add
cmp
or
sub
enter
sub
cwtl
incl
push
xchg
pushf
xor
sbb
adc
push
mov
mov
call
lcall
dec
add
loop
daa
bound
mov
fs
in
rolb
push
pop
test
pop
lods
mov
scas
cmp
sahf
clc
fcoms
adc
aad
into
clc
imul
jge
push
push
popa
xchg
pusha
repnz
idivl
test
xchg
test
nop
or
dec
push
cmp
cs
xchg
xchg
cmp
add
rorb
int3
pop
pop
sub
push
xchg
cs
jbe
push
lds
mov
jbe
out
mov
sbb
loopne
das
cli
fs
cwtl
push
push
adc
rcrb
pop
cmp
in
fs
jle
push
ljmp
arpl
ja
fs
fldt
pop
jae
in
mov
stc
adc
pop
dec
daa
sub
cmp
inc
and
popf
mov
popf
xor
cmpb
xor
lds
or
out
out
subb
mov
cmpl
sub
pushf
dec
mov
dec
ja
andl
daa
dec
xchg
cli
add
orl
iret
loopne
add
out
xchg
push
stos
inc
jno
sbb
push
push
ss
jecxz
sub
dec
inc
push
repz
jnp
dec
cmp
ret
sub
jecxz,pt
fwait
xchg
ljmp
dec
setb
push
hlt
pop
inc
and
outsb
mov
scas
push
sbb
insl
adc
repz
dec
idiv
cmc
fs
fisttps
xchg
jne
push
adc
dec
dec
jmp
sbb
mov
jge
adc
testl
dec
scas
test
mov
lcall
aas
sub
jae
inc
into
push
test
int3
scas
and
loope,pt
loopne
std
push
xorl
cltd
inc
mov
mov
xchg
movb
xchg
pop
mov
pop
fsubp
pop
sub
stos
fiadds
ret
push
add
mov
mov
sub
out
adc
popf
insl
xor
sub
fnstenv
push
insb
movsl
adc
mov
repz
pop
mov
lods
xor
jo
es
arpl
sbb
test
inc
pop
fsub
cltd
xor
jle
pop
push
push
add
mov
jb
push
ljmp
dec
inc
je
in
cld
mov
outsl
inc
inc
out
and
daa
dec
inc
xor
shll
adcl
stos
outsl
pop
sahf
or
jmp
push
fcoml
cltd
add
aam
stos
cmp
scas
or
and
xchg
das
jno
lock
in
or
xor
gs
ljmp
xor
loopne
pop
repnz
xor
xchg
icebp
pop
lods
fabs
xlat
mov
pop
imul
adc
int3
aam
sbb
test
lea
aam
inc
adc
adc
mov
js
subl
insl
push
xor
lcall
lods
jmp
adc
jecxz
test
lea
jns
xchg
xchg
into
inc
pop
gs
xchg
sub
in
xchg
fldenv
sarb
fucomi
jne
bound
add
ss
rolb
xor
movl
push
mov
sub
fsubrl
fs
fstl
adc
or
mov
ficoml
jge
test
scas
std
loop
jp
stos
or
out
jp
test
sub
call
add
ljmp
add
aaa
arpl
mov
cmp
shl
mov
rcrl
pop
in
ror
sub
rolb
mov
dec
mov
jl
ljmp
sub
lock
mov
enter
add
jmp
sbb
subb
dec
out
jne
add
and
push
rcll
jmp
push
xor
jmp
sbb
push
jne
ds
sbb
ror
int3
insb
scas
lock
in
scas
inc
pop
repnz
lods
insl
test
pop
fcmove
lods
pop
pop
push
notl
dec
rol
mov
xchg
adc
ss
cmovno
inc
and
lods
adc
nop
mov
cli
push
aam
sarb
sub
fs
push
inc
mov
dec
popa
icebp
fcoml
dec
mov
and
sub
mov
inc
jmp
int
push
pop
in
jmp
gs
add
mov
jge
and
or
add
leave
and
dec
in
sub
insb
mov
icebp
mov
jmp
and
cmp
mov
aaa
sbb
add
adc
aaa
jle
add
mulb
loop
repz
xchg
int3
incl
mov
mov
xchg
lea
jno
inc
fldl
rclb
out
jb
daa
hlt
mov
and
push
rorl
sahf
fstl
pop
dec
inc
sub
sbb
sbb
idivl
cmp
pop
aam
scas
cmc
add
fsubrl
insb
std
dec
dec
xchg
rclb
xchg
out
mov
add
pushl
mov
or
push
mov
std
jnp
dec
xchg
fdiv
push
xchg
push
xchg
ljmp
dec
iret
jmp
xchg
fidivs
mov
lahf
shlb
push
xchg
ss
sbb
cmpb
mov
call
push
test
pop
sub
adc
mov
cmp
and
push
xor
jnp
test
sbb
into
adc
pushf
out
lahf
jge
out
enter
jns
mov
push
ret
mov
mov
ret
repz
jle
insl
sub
sub
fbld
xor
rolb
repnz
xor
xchg
mov
lods
test
stos
pop
sbb
es
lods
dec
and
fcomps
pusha
sahf
mov
arpl
cmp
in
jmp
push
or
push
fsubrs
aam
xor
fdivrl
sub
mov
add
inc
nop
hlt
or
mov
addr16
movsb
cs
jae
aad
int
xchg
stc
mov
mov
lcall
xor
push
jnp
fstps
popa
arpl
lret
push
cmp
rcl
dec
ret
mov
mov
call
lret
sbb
cmpsb
jae
icebp
mov
sbb
sahf
cmp
sbb
sbb
pop
stc
or
aam
xlat
lret
adcl
les
fwait
movsb
mov
sbbb
cmp
or
xchg
sub
push
push
sbb
jne
sbb
cmp
ret
mov
fnstcw
jg
inc
mov
push
xchg
xchg
je
sbb
test
jns
push
mov
cmpb
std
sub
and
in
pop
call
mov
adc
sbb
dec
repz
add
pop
and
rcll
sbb
rcll
fs
add
adc
xchg
mov
mov
mov
add
pop
sbb
in
xchg
loope
sub
sbbl
xor
pop
adc
sbb
xchg
cli
dec
aas
in
adc
mov
js
nopl
shll
push
cmp
stc
jg
mov
incl
out
test
popf
mov
inc
xchg
fwait
push
in
lahf
and
adc
xlat
lcall
or
xchg
lds
adc
jg
ja
lcall
jne
dec
mov
jp
and
aas
mov
push
xor
jnp
push
jle
subb
stc
xor
out
nop
jg
mov
dec
mov
jmp
xchg
dec
aaa
test
inc
pop
jp
jo
outsb
pop
ds
rcll
cmp
clc
bound
mov
cmp
ret
rcrb
lods
movsb
adc
movsl
mov
jge
mov
and
pop
outsl
imul
push
loop
fsubrs
les
aam
pop
xor
adc
fdivs
int3
add
rorb
add
xor
flds
movsb
lods
or
add
push
xor
sbb
fstpl
cmp
or
or
icebp
sub
leave
push
lea
in
inc
sbb
rcl
vmovsd
push
fs
je
jns
lods
and
shll
hlt
stos
scas
mov
adc
rol
push
divl
xor
mov
xchg
clc
dec
inc
lock
cmp
rcrl
jne
loop
leave
mov
dec
stos
mov
popf
fisttpll
sti
ret
and
imul
cld
data16
cltd
imul
sub
or
lods
adc
sahf
pushf
pop
out
xchg
cltd
pop
in
stos
pop
xor
call
aam
or
mov
roll
loope
fistl
cmp
flds
cmp
nop
push
daa
loope
cmp
loop
in
aam
or
outsl
or
mov
jg
mov
lcall
xchg
fwait
pop
call
fsubrs
stos
push
cli
dec
cmp
inc
xchg
xlat
xlat
mov
xor
cli
adc
loope
inc
addl
push
fucom
add
xchg
dec
lods
mov
cmp
sbb
sub
xlat
rcr
cmpsl
in
movsl
jbe
jns
aas
jle
xor
faddl
mov
repz
lds
out
xor
jp
lcall
cmp
sbb
sbb
cmpsl
push
popf
adc
xchg
loope
pushf
mov
test
jmp
hlt
xchg
dec
movsl
jnp
xor
fsubl
push
adc
push
mov
stc
addr16
js
movl
mov
mov
dec
cmp
pusha
out
in
xchg
mov
mov
ss
movsb
or
cmp
mov
ret
loop
jnp
sbb
movsl
xor
fwait
gs
cli
push
jbe
pop
sti
add
mov
mov
pop
mov
insb
pushw
nop
xchg
push
add
arpl
ret
cmpsb
pop
dec
xor
pop
sti
mov
jbe
stc
stc
movl
outsb
mov
out
int3
pop
sub
les
test
lahf
pop
mov
imul
dec
ret
xor
loop
dec
jp
inc
cltd
push
pop
sub
out
inc
mov
inc
xor
lds
call
jnp
addb
aaa
movsb
mov
mov
push
lcall
outsl
push
out
inc
jns
sub
clc
in
xlat
imul
mov
aas
bound
ss
pop
faddl
xor
or
std
sub
sbb
mov
das
stos
jge
jno
jmp
push
arpl
je
dec
or
pop
mov
call
sub
mov
xchg
or
xchg
insb
outsb
outsl
shlb
jle
cmp
sub
popf
mov
add
test
xchg
inc
scas
or
and
pop
or
dec
push
mov
push
inc
fldl
mov
gs
inc
cwtl
xchg
push
adc
les
xor
mov
in
sbb
inc
ret
pop
aaa
ss
inc
cmp
sti
fstpl
dec
out
gs
data16
inc
xchg
stos
xchg
mov
in
imul
cmpsl
test
dec
test
sahf
lds
push
ret
mov
mov
stc
pop
popa
lods
leave
loopne
jne
call
pop
push
out
lds
sti
sub
scas
xlat
xor
adc
add
cmpsl
jg
js
inc
hlt
jp
dec
int3
inc
cmpsl
ret
movb
ds
sti
cmp
xor
lcall
adc
xor
sti
mov
jmp
inc
fs
mov
pop
cmp
inc
les
jecxz
out
aad
ret
movb
loope
push
mov
pushf
dec
ss
inc
shrl
push
jns
add
std
fdivr
mov
insb
dec
sub
arpl
jnp
mov
and
adc
int
mov
clc
sbbb
iret
add
inc
mov
arpl
mov
mov
stos
jae
mov
rol
mov
test
clc
jl
cmp
lods
mov
shll
loope
std
mov
xchg
sahf
icebp
mov
cmc
fcompl
rcrb
into
add
jmp
pop
and
sbb
shr
push
sub
pop
xchg
cmc
sbb
repz
je
adc
mov
inc
hlt
jno
notl
fcom
adc
adc
out
jle
push
rcrb
and
cmp
cmp
outsl
xchg
lcall
cmp
pop
inc
sahf
dec
scas
pusha
inc
pop
cmpsl
add
sub
enter
sub
or
scas
push
cmpsl
dec
mov
mov
jle
int3
popa
dec
testb
enter
push
or
aad
fwait
jns
je
jo
out
xchg
sarl
mov
mov
cli
push
or
xchg
mov
arpl
fidivs
shrb
aad
mov
insl
push
pop
sbb
xchg
movsl
movsb
jecxz
call
sub
add
mov
adc
loope
jo
mov
lock
jle
push
outsb
gs
jne
test
lock
push
sbb
pop
jecxz
test
outsb
lods
mov
sbb
jmp
cmp
or
mov
aas
inc
adc
sahf
cld
jns
mov
mov
xor
mov
outsb
inc
cmpsb
ds
stc
sarl
js
inc
xchg
stos
lds
push
add
sbb
jo
pushf
loop
dec
mov
mov
adc
aas
pusha
jb
mov
sahf
mov
nop
cltd
inc
cwtl
outsl
jle
je
xor
mov
lods
jns
add
mov
dec
popl
vsqrtss
hlt
subl
out
shll
xchg
es
xor
pop
pop
js
xor
pusha
dec
mov
jecxz
clc
mov
or
int
icebp
cmp
pop
loop
cmp
cs
enter
stos
imul
cmc
int3
in
ja
jns
and
jmp
dec
and
pop
xchg
sbb
sbb
cmp
movsl
xchg
frstor
mov
outsl
lahf
insb
or
or
ss
test
stc
adc
shlb
lret
mov
adc
lcall
das
addr16
push
or
adc
in
cld
mov
xchg
adc
and
out
nop
inc
lods
repnz
mov
shrb
cmpsl
into
fdivl
mov
adc
xchg
dec
loop
sbb
pop
dec
mov
aad
mov
jno
js
iret
icebp
mov
and
cld
mov
add
push
inc
test
xor
pop
sbb
add
test
out
pop
sbb
jne
loope
sbbl
cwtl
mov
insb
out
nop
test
cli
fld
repnz
ljmp
push
mov
or
pusha
inc
mov
dec
divl
push
push
repz
ror
sbb
iret
cmp
lock
out
adcb
mov
ja
jge
jo
ljmp
pushf
daa
xor
shl
gs
xor
es
inc
sbb
cmp
rclb
arpl
mov
hlt
inc
in
sti
push
dec
pause
dec
mov
jo
imul
cs
push
mov
or
add
or
mov
pop
mul
popa
adc
and
or
mov
in
jae
cs
pop
popf
fxch
push
add
stos
jns
dec
and
xlat
add
pop
add
ja
lods
mov
push
add
aam
adc
fidivs
jo
aam
or
sub
sub
aaa
mov
rcll
mov
push
pop
hlt
mov
imull
clc
push
bound
fisubrl
or
mov
lcall
mov
fwait
mov
pop
fneni(8087
or
adc
mov
jmp
cmpsb
sub
inc
push
mov
pop
lret
pop
and
lret
cmp
loopne
pop
jl
fs
dec
scas
jb
add
imul
push
cmp
hlt
jns
faddl
mov
inc
dec
jmp
in
lea
inc
ficomps
cmp
xchg
movsb
xor
mov
push
or
inc
fstl
es
ds
sbb
mov
xchg
mov
xor
xchg
imul
xchg
pop
sub
repnz
out
lret
pusha
rol
push
xchg
sbb
mov
mov
fwait
and
fwait
repnz
jbe
mov
push
xor
ret
out
mov
andb
jno
jge
insb
sub
mov
mov
sub
sti
sub
rorl
js
mov
sub
fwait
mov
in
push
movsl
adcb
shrb
jl
jo
fs
cmp
push
mov
dec
hlt
push
and
sarl
popf
js
xlat
jmp
and
dec
mov
stc
aad
or
push
nop
or
xor
ja
xchg
dec
inc
inc
or
fnstcw
lea
cmp
arpl
sub
enter
and
sbb
cltd
jecxz
pushf
pop
hlt
rcl
or
mov
inc
ljmp
mov
dec
test
fdivl
test
stos
repz
gs
out
nop
negb
jge
jnp
jbe
mov
dec
outsl
js
test
jns
fcmovne
push
pop
mov
mov
cmpsl
fisubrs
push
sbb
mov
jl
sti
adc
inc
aam
push
insl
std
push
mov
sbb
mov
imull
rorl
cmp
jnp
mov
test
sti
push
fisubrl
cmp
repz
pop
fnsave
pop
xor
rorb
mov
icebp
dec
jmp
repz
stc
pop
mov
inc
sti
xchg
rolb
add
cs
test
xchg
lock
mov
clc
mov
pop
sarb
sar
dec
aam
mov
jecxz
inc
lods
mov
test
and
pop
mov
adc
pop
inc
pop
imul
inc
cld
outsb
out
sti
test
add
ficompl
addr16
pop
addr16
push
test
sub
dec
mov
mov
inc
mov
std
js
jbe
sub
inc
iret
xchg
mov
jno
jnp
aam
outsl
add
std
push
add
faddl
testl
pop
or
fldt
into
pop
and
pop
mov
pusha
pushf
cmp
ret
mov
xchg
inc
xchg
or
stos
mov
xchg
insb
adcl
aam
repz
daa
or
dec
or
std
fs
addr16
fstp
jae
push
movsl
stc
xorb
test
xchg
pop
add
cmpsl
push
fucom
sub
sbb
pusha
popf
cli
aad
xchg
into
arpl
push
jns
and
mov
push
jbe
or
addr16
xlat
xor
inc
pop
sbb
int
and
pop
cs
jl
stc
xchg
gs
movsb
sub
cmc
jnp
and
fwait
cli
imul
inc
inc
jge
cmpb
mov
sub
pop
push
fstps
cltd
and
xchg
rclb
push
pop
jne
push
popa
scas
shlb
and
aam
int3
dec
xchg
mov
add
aam
roll
scas
loop
sub
inc
aas
add
sub
aad
stos
cmpsb
or
jne
cmpsb
dec
imul
ficoml
arpl
pop
cmp
mov
xorl
jle
lcall
ret
addr16
inc
sub
in
incb
shlb
inc
or
pop
xchg
xchg
or
lock
push
js
jg,pt
pop
mov
xchg
outsb
mov
pop
xor
pop
daa
outsl
push
mov
xor
dec
pop
pop
scas
out
sbb
fld
cmp
adc
inc
jb
rcll
mov
mov
pusha
push
sub
xor
pushf
mov
lock
in
xchg
sarl
push
push
inc
js
sub
rorb
mov
popf
std
sub
aad
stc
push
push
dec
negl
and
int3
jp
mov
jno
testb
pushf
ss
lea
mov
jmp
rorb
movsl
cltd
fsubl
in
cld
sbb
dec
in
sbbb
cmpsb
inc
js
js
mov
outsl
in
xchg
aad
mov
mov
lret
cltd
cld
mov
push
jnp
andb
repz
and
es
out
pushf
shll
fdivr
push
outsb
aad
sbb
jp
adc
aam
mov
inc
int
loop
sub
sub
test
mov
push
hlt
loop
and
scas
scas
mov
mov
jae
mov
jae
adc
andb
sbb
jmp
gs
inc
pop
add
jge
mov
int3
add
xchg
daa
mov
and
xor
mov
xor
rcr
cmp
rolb
int3
sbb
leave
add
out
jb
out
cld
fwait
lret
arpl
stos
fadd
scas
test
sbb
cmpsl
popf
cmp
fsubrs
jecxz
rcll
iret
cwtl
dec
icebp
xchg
call
inc
nop
dec
mov
sbb
pusha
lea
push
jb
sub
clc
mov
shlb
je
movsl
and
lods
cmc
je
lds
push
sub
mov
setl
xor
jecxz
xor
pop
movsl
test
popa
or
popa
incb
enter
inc
inc
lret
add
xor
push
daa
push
jae
or
xchg
pop
outsb
push
pop
pushf
mov
repz
rcr
inc
push
sub
cmp
insb
mov
hlt
fs
dec
cltd
insl
rolb
popf
pop
jbe
xchg
sub
jnp
insl
addb
loopne
aam
adc
test
loop
scas
or
lods
rcr
enter
sub
movsl
data16
aas
mov
std
mov
mov
leave
shll
and
cmp
sbb
scas
inc
les
xchg
call
sbb
pop
hlt
pop
inc
dec
adc
mov
pop
stos
pop
xor
jl
sbb
push
test
data16
xor
jo
mov
add
gs
lret
mov
fwait
xchg
sti
sbb
add
mov
mov
inc
xchg
xor
xor
push
sbb
lcall
push
and
lds
sub
fdivs
icebp
das
and
mov
rcl
mov
stc
mov
mov
xor
pop
inc
xchg
jg
xchg
sbb
inc
cmp
cmp
bound
adc
sub
loop
dec
or
mov
std
ret
xor
add
pminub
xchg
adc
sub
lock
xlat
or
inc
rorb
sub
mov
push
pop
into
fisubl
ljmp
sub
fstpl
bound
neg
filds
insb
cmp
dec
xchg
arpl
mov
lods
pop
fucomp
sub
inc
push
sub
inc
dec
sub
lret
adc
rclb
xor
jp
ss
stos
iret
cmp
jnp
mov
fnstsw
fldcw
mov
xor
push
rcl
loope
std
adc
test
fsubrl
add
cmc
jno
push
inc
jb
repnz
cmp
std
mov
cmp
dec
int3
repnz
xchg
sbb
mov
hlt
pop
push
out
mov
les
fidivl
inc
cmp
add
xchg
cmpsl
inc
lods
aam
and
adc
in
out
xchg
mov
rcr
push
popf
enter
lret
data16
and
adc
mov
inc
pop
jo
dec
cltd
inc
ja
xlat
movsb
fidivl
clc
cmc
hlt
in
in
or
frstor
dec
into
aad
je
das
fidivs
jb
add
jp
leave
pop
pop
adc
and
push
push
lahf
cmp
hlt
mov
sbb
cld
in
and
adc
into
in
scas
lcall
inc
loop
push
push
sbb
mov
xorb
out
xchg
sbb
ficoms
dec
xchg
push
lret
fldt
cmp
je
xor
mov
stos
adc
int
mov
outsb
fwait
dec
cmp
inc
xor
jmp
push
inc
imul
decl
aas
iret
and
pop
xor
cs
mov
popa
mov
xchg
and
pop
cmp
gs
dec
dec
call
dec
mov
mov
gs
scas
jbe
pop
cld
fcmovb
in
push
in
xor
imul
lret
loope
insl
mov
push
mov
push
test
mov
and
mov
cmp
push
es
jnp
stc
adc
add
out
xchg
adc
xor
aad
fs
push
icebp
popf
sarb
inc
and
add
pop
push
sbb
ljmp
iret
stos
push
sbb
inc
add
or
dec
loope
stos
add
mov
push
popa
daa
pop
xchg
repz
jae
add
lods
push
cmpsl
stc
js
inc
pop
xor
and
ljmp
or
lret
cmp
add
imul
cmp
dec
out
scas
int3
cld
cvtpi2ps
mov
inc
imul
ds
and
mov
or
push
push
sbb
scas
lock
iret
in
dec
and
lods
jb
shr
popf
or
push
lods
cmpsb
fsubr
and
mov
xlat
sbbl
cli
mov
mov
cmp
addr16
imul
xchg
cmp
and
mov
es
xchg
push
cmpsb
movsl
dec
pop
and
gs
test
inc
dec
pushf
and
fiadds
hlt
inc
mov
sub
inc
jg
xchg
dec
push
popf
outsb
movsl
popf
ds
mov
imul
sbb
cmp
lcall
pop
testb
and
lods
mov
rorb
pop
xor
pop
add
scas
movsl
mov
loopne
jp
pop
fisubl
adc
test
jb
cmp
lret
popf
mov
idiv
xchg
out
roll
jle
movsl
add
lcall
in
fstl
cltd
daa
fcmovu
pop
pop
jne
loop
pop
xor
mov
inc
nop
inc
pushf
adc
push
xor
bound
shl
inc
lret
push
mov
lcall
cmpsl
mov
sub
sbb
sbb
push
mov
push
out
xor
aaa
popf
jnp
gs
mov
aaa
xor
or
adc
jno
divb
or
or
mov
into
and
jle
cmp
dec
sbb
in
mov
adc
xchg
rcrb
lods
jno
xchg
cmpsb
pop
jmp
test
adc
inc
cmpsb
jne
pop
cli
dec
xorl
fnstenv
sbb
js
cld
shl
out
ljmp
push
push
lahf
loopne
imul
mov
dec
xchg
jbe
add
adc
and
cmp
xchg
mov
cli
xor
or
pop
jne
sbb
sahf
jnp
cmp
lods
data16
in
insl
mov
sub
jge
dec
push
imul
pushf
movsl
dec
fwait
mov
scas
in
leave
das
or
pop
add
orb
iret
fcomip
pop
sarl
pusha
cs
dec
adc
push
and
jle
daa
push
jle
stos
outsb
lcall
push
cld
dec
and
pop
and
es
lret
xor
jge
inc
bound
mov
add
jo
mov
push
inc
jbe
out
loopne
arpl
pop
mov
jmp
xor
movsl
inc
dec
scas
add
stos
xchg
add
aam
push
xor
jo
pushf
test
push
xchg
or
sbb
xchg
clc
in
hlt
add
sub
clc
decl
jb
pop
lcall
pop
mov
test
pop
clc
lret
test
mov
insl
mov
mov
rorb
dec
test
test
cmpsl
cwtl
xor
rcrb
ret
jmp
jg
and
inc
sub
movsb
sahf
out
jae
lahf
cmp
andl
outsb
mov
xor
mov
xorl
dec
cmp
cmp
jae
mov
fisubrs
sbb
clc
loop
mov
fs
dec
jp
test
lret
pop
xor
jbe
fincstp
sbb
push
andb
leave
jne
lods
das
testb
inc
jecxz
pop
clc
add
je
fcompl
xor
xor
cld
cmp
ds
in
inc
insb
lods
mov
or
lods
xchg
orl
mov
xchg
fidivrs
xchg
push
push
xchg
leave
jge
add
jmp
outsl
insb
sbb
inc
pop
stos
test
add
gs
stos
out
mov
xchg
and
sbb
cmpsb
push
and
popf
and
test
leave
cmpl
jge
xchg
dec
dec
push
scas
cmp
fwait
lods
lds
stc
jno
sar
or
xchg
lret
and
mov
and
push
outsb
xor
push
dec
rcr
dec
testb
xchg
addr16
mov
mov
in
cmp
push
pop
xchg
call
data16
testl
mov
hlt
js
call
pop
sub
mov
insb
mov
and
stos
imul
scas
imul
addl
arpl
pop
cld
pop
daa
inc
pop
mov
cltd
jb
mov
mov
sub
cmp
mov
add
lea
sahf
push
or
insl
outsb
adc
pop
xchg
test
or
add
call
ja
cmp
mov
test
dec
cltd
cmp
mov
lcall
popa
push
iret
jmp
pop
insb
xchg
or
enter
add
stos
jbe
movsb
mov
cmpsl
int3
scas
ds
movsl
jno
mov
lea
pusha
pop
jb
dec
sub
rol
pop
mov
cli
jne
mov
fstpt
and
push
enter
xor
cmp
dec
fs
cmp
lcall
xor
movsb
test
loopne
inc
xchg
fbld
aaa
xchg
mov
cmp
in
mov
xor
fsubp
adc
mov
jno
into
pop
sti
adc
xchg
xor
idivb
xchg
inc
sub
fcomp
insl
stc
sub
ret
rcrl
push
push
std
leave
xchg
pop
out
insl
pop
rcll
pop
sub
fwait
repnz
and
lods
cmpxchg
sub
ja
xor
adcb
fidivl
dec
repz
jmp
cmpsb
in
xor
jbe
fisttpl
adc
cmp
jmp
mov
inc
and
jl
mov
adc
pop
adc
jbe
push
jle
ja
lods
xchg
mov
or
jns
lods
inc
in
imul
insl
sub
aad
pop
cmc
cmp
or
xorb
cmp
cmp
pop
push
out
dec
jle
add
es
scas
sub
lcall
in
jp
stc
mov
mov
push
stos
mov
and
imul
in
inc
pop
cmp
push
jp
sti
adc
jns
sbb
enter
out
outsl
rcrl
push
push
xlat
fs
add
pop
or
test
sbb
testl
jne
fsqrt
out
ret
pop
push
mov
daa
lea
cmp
movsb
fidivrs
faddl
outsb
dec
rclb
cmp
shll
pop
mov
movsl
incl
mov
push
subl
add
xchg
fmull
mov
adc
into
mov
pop
mov
adc
xchg
pminsw
and
pop
loope
fstp
lods
fdivrl
fildll
mov
test
jbe
stos
xor
inc
add
aaa
mov
and
push
jl
mov
add
imul
cmp
adc
cmp
push
fcoms
popf
icebp
test
adc
xchg
or
sub
lret
adcb
loop
dec
mov
icebp
xchg
out
int
lds
dec
cmpsb
nop
add
sbb
pop
pop
sub
aad
sub
cmp
mov
cmp
pusha
ljmp
pop
adc
push
jmp
call
ret
ret
mov
push
add
fistps
call
xchg
jb
cmc
push
fmuls
push
or
or
mov
lahf
jp
je
cmp
inc
shrb
mov
add
push
notb
cld
subb
cld
dec
aaa
lcall
and
lahf
fisubl
pop
iret
lret
out
subl
xchg
mov
fstps
sahf
scas
cmp
movsb
ret
and
in
fidivrs
repnz
and
push
fwait
sbb
dec
ficomps
cmpsl
int3
push
jmp
mov
pop
inc
cmp
insb
imull
mov
inc
hlt
loopne
ficompl
cmp
jmp
xlat
icebp
pushl
das
xchg
loopne
cwtl
push
sbb
cltd
mov
and
push
jbe
xlat
aad
or
repz
addr16
in
cmpsl
imul
je
jbe
scas
inc
jo
push
faddl
cmpsb
scas
pop
sbb
sub
test
aas
pop
mov
aaa
lret
add
inc
add
fs
iret
popf
scas
push
loop
cs
aam
jne
in
push
or
push
push
xor
inc
mov
xchg
or
jno
test
dec
jo
mov
cmp
sbb
jno
std
movsl
fprem
sub
xchg
mov
mov
outsl
cmc
cmp
cwtl
pop
out
scas
into
adc
in
out
dec
es
inc
cmp
loope
xchg
inc
neg
out
pop
jg
mul
mov
aam
mov
and
sub
fmuls
cmc
mov
adc
pop
adc
mov
aam
movsb
repnz
movaps
subl
lea
adc
add
adc
cmpsb
aam
push
adc
mov
int
fidivrl
jp
add
in
jo
push
dec
mov
int
cwtl
push
lret
movb
gs
cmp
fs
loopne
addr16
xchg
pushf
js
in
pop
aam
pop
mov
mov
lock
mov
loopne
aas
stos
mov
pop
xchg
lahf
ret
pushf
arpl
add
pop
pop
rcll
cs
push
mov
lea
daa
aas
cli
mov
jl
rcll
or
inc
mov
inc
loop
testl
pushf
out
cs
add
mov
pushl
ret
imul
ja
loopne
loope
jmp
mov
aam
push
and
xlat
sbb
xor
xchg
ret
je
sbb
enter
dec
sbb
pop
mov
mov
sub
mov
test
and
fstl
cmpsl
in
xchg
ss
sub
mov
stos
pusha
mov
iret
mov
mov
pusha
ljmp
and
pop
push
ret
test
in
jl
push
mov
and
loope
ds
cwtl
lock
popa
mov
pushf
imul
movsb
loope
shlb
jp
rcrl
fucomip
dec
mov
test
cmpsb
cltd
mov
inc
leave
adc
ret
stos
dec
shr
test
imul
stos
pop
pop
ljmp
or
out
nop
push
cmp
or
test
jmp
es
nop
lret
loopne
hlt
pop
shll
cmpsb
pop
adc
and
loope
fwait
jle
stos
mov
loopne
jge
mov
sub
xor
push
jne
push
ret
orl
lods
cmp
pop
xchg
and
push
cld
out
popa
cmp
and
jp
jno
pop
lahf
and
sbb
fnsave
movsb
into
lret
inc
sub
fistps
out
add
enter
cmc
and
and
sahf
lahf
cli
sub
mov
xchg
outsb
adc
addr16
push
outsl
xchg
int3
fisubrl
jbe
inc
imul
cmpsl
sti
mov
daa
sub
pop
loopne
jo
push
add
pop
insb
lcall
cmp
ljmp
fwait
lock
clc
adc
mov
gs
adc
sbb
negb
in
adc
repz
push
cmp
mov
popa
and
sbb
lods
insl
cwtl
xor
xchg
stos
mov
cltd
adc
aad
and
sbb
jae
dec
sub
mov
out
cmp
mov
pusha
or
lea
fsubl
adc
movsb
adc
sub
ficoms
stos
mov
inc
mov
fucomp
cmc
aas
movsb
pusha
xor
pop
cltd
imul
push
bnd
into
insl
mov
into
out
mov
or
xchg
insl
mov
mov
fsts
pop
in
shr
aad
lret
jnp
incl
fldpi
mov
push
cli
ret
test
pop
cmc
aad
push
push
and
outsl
sub
sbb
xchg
ret
loop
bound
sbb
or
mov
inc
push
mov
jp
sbb
leave
cmp
frstor
jg
mov
inc
out
or
inc
sbb
xor
cmp
push
push
mov
push
xchg
dec
cwtl
xchg
dec
in
lds
stos
pop
or
or
scas
sahf
scas
fdiv
cld
xor
repnz
in
movsb
push
xchg
sub
js
mov
mov
fdivl
and
repz
fisttpl
xor
push
adc
push
push
push
xchg
ss
pop
push
stos
mov
push
sbb
outsl
sub
aaa
inc
push
fnsave
add
pop
mov
mov
mov
mov
icebp
dec
shlb
aas
out
and
xchg
jbe
icebp
addr16
mov
imul
movsl
mov
mov
ret
inc
xchg
sub
mov
hlt
push
mov
lock
lret
pusha
cmp
gs
jae
int3
xor
addb
fs
les
pop
xorb
outsl
jmp
dec
cmp
adc
and
inc
outsb
sbb
adc
dec
xor
sbb
stos
push
adc
adc
xchg
mov
adc
mov
loop
in
lcall
dec
jle
push
lcall
ss
test
sub
into
lret
subb
add
mov
bndldx
nop
in
push
data16
cmp
fisttpl
pop
jle
fidivs
fidivrs
or
fs
sarl
adc
popa
rdtsc
test
xchg
push
ror
arpl
mov
call
fsts
mov
mov
and
out
xor
in
incl
add
sbb
cmc
jge
mov
dec
js
sbb
and
mov
outsb
jmp
jmp
mov
out
push
out
jle
arpl
test
and
clc
adc
int
les
lods
pop
jmp
pop
aas
xchg
insl
cltd
stos
cmc
jmp
sahf
ret
and
in
mov
fdivp
dec
inc
adc
clc
push
das
movsb
call
movsb
leave
lds
pop
out
cmp
outsl
setle
sbb
push
stos
xchg
pop
ret
mov
lods
cmp
mov
aad
mov
scas
adc
ficompl
cmpsl
loope
mov
loop
jl
dec
sbb
cwtl
in
pop
sbb
mov
adc
gs
push
test
loopne
lock
pop
ret
pop
fildll
add
out
fs
mov
add
std
pop
sbb
mov
enter
orb
fucomi
push
add
cltd
test
mov
pushf
lcall
in
outsl
sbb
xchg
sub
subl
rorl
std
dec
js
mov
xor
xchg
mov
sbb
aas
sbb
test
sub
dec
cli
push
mov
cmp
in
sti
dec
andl
cmpsb
in
mov
test
in
push
xchg
fsubrs
ljmp
mov
dec
sub
int
orl
lss
pusha
cmp
inc
ljmp
jae
fcomps
fs
and
aad
mov
test
fnstsw
pop
xchg
inc
aaa
call
mov
jnp
sbb
addr16
mov
add
mov
mov
sahf
add
out
jl
ljmp
or
leave
lret
or
ss
pop
add
mov
push
rclb
jae
dec
mov
jl
jbe
and
sbb
mov
je
out
mov
test
jecxz
ret
std
arpl
sbb
pusha
pop
mov
jle
mov
ljmp
xchg
in
icebp
cld
jbe
jg
fmuls
and
daa
sub
ret
cli
shll
xchg
or
add
movsl
jp
jle
jne
std
add
jge
arpl
mov
push
lahf
mov
inc
pop
sub
xor
add
jg
jb
add
cmp
lret
outsl
mov
ja
outsl
and
push
sub
lcall
aaa
shrb
addr16
pop
mov
xchg
divb
sbb
dec
inc
sarl
dec
xchg
pop
push
ds
call
pop
sub
ret
xchg
in
lods
push
xor
push
sbb
mov
loope
mov
pop
push
mov
add
pop
and
test
and
iret
xchg
push
insb
xchg
jns
je
xor
cmpb
repnz
out
mov
pop
cmp
pushf
in
mov
inc
xchg
inc
test
add
popf
fisubrs
pushf
push
push
jb
inc
push
shlb
sbb
pop
addr16
cmp
mov
mov
push
cltd
aam
jbe
or
adc
iret
adc
sub
adc
push
dec
movsl
or
and
cmpsl
xor
cwtl
add
sti
negb
out
sbb
push
xor
imul
add
jmp
dec
and
xor
shl
lea
cmpsl
sub
sbb
movsb
and
xlat
adc
ds
and
lahf
mov
mov
sarl
adc
and
and
push
jo
lock
jns
cmp
rcr
and
aad
push
out
or
jmp
push
outsl
jae
xchg
sbb
jecxz
push
xor
xchg
ljmp
xor
sbb
nop
mov
js
jbe
inc
push
inc
or
aad
jp
pushf
ljmp
push
cmpsl
pop
dec
xlat
inc
int3
shl
out
adc
dec
shll
cmp
jg
xor
cmpsb
leave
insl
xorb
jae
insb
inc
out
or
lahf
sub
cmp
and
sbb
push
gs
cwtl
lea
enter
sub
inc
push
pop
movsl
add
iret
pop
leave
sbb
push
sub
jg
and
push
and
jo
dec
int
outsl
in
add
ljmp
xor
scas
add
mov
jne
jae
ret
mov
or
nop
insl
fbstp
lock
xor
sti
shlb
pop
xchg
js
fwait
daa
popa
ljmp
adc
pop
mov
sbb
loop
fsts
pop
jae
add
shl
dec
lea
test
jecxz
xor
movsb
rcrb
in
imul
add
in
jmp
cmc
movsl
dec
or
push
mov
aas
jg
or
mov
and
ljmp
loope
sahf
test
ja
sub
test
mov
mov
cmp
push
and
sub
dec
sub
imul
loopne
and
dec
mov
imul
test
dec
mov
push
scas
shrl
enter
stos
sub
fs
cmp
and
push
mov
call
push
sbb
insb
test
leave
stos
push
in
fnsave
ror
add
push
stos
fldcw
arpl
pop
stc
popf
mul
fidivl
sbb
push
pop
sbb
icebp
xor
mov
xor
pop
xchg
jb
mov
and
xchg
sbb
imul
mov
pop
fcmovbe
aam
popf
mov
adc
jg
xor
scas
rorb
inc
push
rol
mov
fiaddl
test
fsubrl
out
in
sarb
sbb
popf
mov
pop
mov
add
out
pop
repnz
or
insl
loope
mov
and
xor
out
lcall
mov
bound
dec
into
ljmp
pop
and
sbb
pop
fbld
jmp
sbb
adc
sbb
int
cmp
imul
cmp
xor
std
in
cs
push
pop
pop
add
mov
divb
inc
repnz
push
incb
xchg
insb
repz
adc
jns,pn
jae
or
in
add
lock
jne
xor
cmp
jb
imul
mov
leave
sub
movzbl
jne
adc
push
pop
daa
push
fisubs
mov
sti
push
cltd
cltd
xor
outsb
ljmp
shrl
pop
mov
ljmp
adc
in
scas
push
bound
or
out
popf
mov
adc
das
pop
stos
push
out
mov
push
add
cmpsb
shr
pop
xor
jecxz
repnz
addr16
insb
and
push
inc
lret
add
xor
mov
shlb
inc
mov
adc
xor
push
fwait
xlat
pop
pop
imul
dec
jle
lods
data16
fstpl
pop
sub
xchg
les
insl
adc
push
lcall
or
out
test
test
jae
ja
lds
mov
inc
fisttpl
mov
insl
ror
fsubs
xchg
mov
js
mov
mov
cmc
ja
push
fisttpl
lahf
bound
mov
sub
push
mov
adcb
lret
dec
ret
int
dec
leave
fdivl
ja
in
int
add
push
out
out
repnz
pop
popf
into
loopne
shl
push
xor
push
jle
sbb
fwait
scas
loop
mov
loope
inc
push
xchg
push
add
in
push
sub
and
sbbl
xchg
xchg
push
jl
xor
popa
add
stos
dec
mov
jmp
sub
mov
in
mov
adcl
or
movsl
push
fisubrl
add
je
sbb
dec
xchg
adc
xchg
sbb
scas
out
cs
repz
jnp
xchg
and
push
in
lds
je
hlt
jne
insb
pop
test
lret
push
cld
or
adc
aaa
push
adc
inc
or
cwtl
jns
je
pop
lods
pop
out
fucom
popa
sbb
mov
pop
mov
push
jae
mov
out
test
dec
int3
pop
pop
or
sub
cmpsb
int3
ficoml
or
jg
iret
sub
fistl
sbb
das
fstpl
push
push
popa
clc
sarb
pop
call
push
scas
fucom
mov
xchg
shrl
xor
xchg
out
xor
jbe
or
sub
popa
mov
testl
or
and
adc
mov
sub
add
dec
push
outsl
cmp
lea
xchg
xlat
mov
dec
call
xlat
sub
xor
mov
jmp
inc
idiv
cmpl
dec
xlat
adc
lret
dec
pop
or
xorl
out
iret
dec
int
cmp
adc
stc
sub
lcall
insb
sbb
mov
cmp
lahf
mov
fbstp
enter
jns
movsl
lcall
sbb
popa
jmp
jmp
loopne
adc
xor
loope
flds
lcall
inc
aad
or
mov
sbb
sarl
sub
mov
xor
cmp
dec
adc
stos
stc
and
dec
mov
mov
loop
pop
sub
xchg
cmc
cwtl
sub
cmp
or
mov
int3
icebp
je
push
out
es
in
jp
mov
push
cmp
sub
popf
push
cmp
cmp
jle
mov
test
ss
mov
push
arpl
rcll
cmp
ret
xor
pop
aaa
cmpsb
sarb
mov
and
sbb
pop
cmp
call
jle
popa
xchg
int
sbb
lcall
pop
movsb
fadds
out
arpl
or
pop
sbb
pop
aam
inc
pop
sbb
int3
inc
inc
in
outsl
push
fldln2
jp
lods
jecxz
cmpsl
adc
pop
pop
xchg
inc
pushl
pop
rorb
mov
imul
imul
dec
je
mov
jmp
fdivrl
inc
gs
lret
cld
sti
pop
leave
sub
lret
and
push
and
movsb
inc
addr16
nop
icebp
add
lock
testb
fcoml
jo
mov
cmpsb
repz
in
pop
add
shl
ret
ret
adc
stc
nop
jl
fidivrl
pusha
mul
mov
lock
fpatan
add
adc
mov
aaa
sub
shlb
and
loopne
lret
jmp
into
jl
inc
das
cmp
fisubrs
jo
fistps
pop
subl
pushf
sub
hlt
sub
mov
xchg
sub
lea
das
fistpl
pop
xchg
sbb
adc
hlt
xchg
mov
add
pop
arpl
xchg
mov
lods
outsb
sub
add
sahf
rorb
dec
addb
rcrl
sub
dec
arpl
inc
dec
add
fiaddl
lods
int
xor
sbb
jle
in
int3
mov
add
jae
mov
inc
nop
jmp
push
popf
jae
nop
xchg
pop
mov
mov
jnp
stc
sub
repnz
mov
inc
test
push
daa
inc
xchg
lea
stos
cmpsb
lcall
inc
add
shld
jg
push
adc
fistps
aad
xchg
leave
fwait
push
leave
enter
sbb
lahf
fisubl
ror
and
jne
or
into
jo
add
mov
adc
in
je
adc
sub
sbb
dec
cld
dec
out
sbb
mov
pop
jae
push
sbb
rcll
push
mov
jno
push
xchg
cmp
mov
jp
jg
fbstp
jg
sbb
jne
push
clc
repnz
inc
add
lret
cli
in
in
and
jecxz
push
pop
sarl
adcl
sub
mov
shlb
jl
fistpl
xchg
dec
popf
adc
lods
mov
sbb
mov
sbb
xchg
stc
lret
push
jmp
push
adcb
cltd
push
stc
lock
cmp
loop
aam
pop
pusha
stc
jnp
out
adc
pop
imul
repz
in
ret
data16
cmp
subb
jae
ret
adc
cs
sub
dec
imul
xor
fsubr
std
push
jl
scas
xor
or
sub
jg
cmc
sbb
test
cmpsb
aad
repz
mov
ss
pop
sub
push
mov
jno
aad
and
jecxz
pop
mov
fsub
not
or
lcall
add
jl
jle
or
mov
sarl
pop
mov
push
xchg
fcmovnb
lock
js
jbe
sahf
or
xchg
mov
bound
add
pusha
dec
scas
dec
arpl
jge
mov
xor
mov
and
jno
or
out
pop
mov
pop
add
pop
xchg
push
int
cmpsl
icebp
cli
add
pop
bound
stos
ficoml
popa
inc
xchg
jge
xchg
scas
xchg
cli
cltd
xchg
jmp
js
xchg
sbb
mov
shl
aad
jbe
cmp
pop
cld
inc
lret
cmc
in
and
cs
xchg
dec
in
es
popa
in
imul
lds
mov
sbb
xlat
adc
jne
mov
mov
insb
arpl
dec
test
lods
xlat
test
ss
cmc
push
jl
sub
jb
inc
jnp
clc
mov
unpckhps
adc
dec
cld
cld
cld
xchg
icebp
pushf
mov
or
jl
sbbl
int
in
lcall
pop
fnstenv
test
jnp
sbb
lea
aas
xchg
or
or
dec
imul
xorl
adc
divl
clc
add
jp
aas
mov
vmptrst
xchg
pop
mov
cmpsb
adc
int3
xchg
mov
and
adc
cmpsb
jp
mov
sbbl
dec
fcomi
lcall
popl
mov
in
jge
fidivrs
arpl
cmp
sbb
mov
jnp
in
mov
mov
mov
filds
lds
jecxz
adc
daa
and
sub
in
jp
lds
bound
sbb
fdivp
adc
rcll
ljmp
mov
pop
push
sub
xchg
stc
xor
xchg
adcb
sub
fs
jb
or
sarl
test
add
and
mov
mov
push
fsubs
push
test
rcll
adc
test
sub
mov
and
es
push
int3
adcl
pushf
repz
int
inc
or
mov
jnp
shrb
sti
nop
ja
xlat
mov
push
inc
sub
fsub
mov
or
pop
add
sub
dec
clc
loop
mov
push
cwtl
rcrb
or
add
xchg
aam
test
fs
shlb
ficomps
push
clc
adc
sub
nop
fisubrs
dec
bound
and
sub
shl
pusha
jno
hlt
adc
imul
mov
xchg
mov
repz
sub
int
adcb
adc
jl
enter
xchg
pop
mov
lea
adc
dec
inc
sub
nop
xchg
bound
push
outsl
fcomps
or
loope
adc
ror
jp
xchg
cmp
bound
scas
imul
dec
pop
or
xchg
push
dec
lahf
rorl
aam
jmp
adc
mov
fwait
sbb
xor
push
notb
mov
jnp
loopne
dec
cmp
fs
push
push
cmp
add
sub
orb
mov
push
jo
jl
pop
cli
jecxz
or
cmp
pusha
in
addr16
ror
inc
cld
cmp
pusha
mov
xorb
out
sarl
inc
mov
add
in
pop
push
mov
fs
pop
daa
xchg
mov
cmpb
popa
insb
push
cmpl
adc
nop
push
bound
jmp
movsb
mov
push
shl
push
push
jno
ja
std
fists
cld
dec
xchg
hlt
cmp
out
lods
pop
outsl
sub
icebp
sub
sahf
push
roll
adc
push
cltd
dec
cmp
insb
jae
fsts
inc
ror
sub
sbb
pop
cmp
cltd
jns
cs
testb
mov
int
gs
inc
xor
das
xorl
jmp
xchg
pop
aad
repz
add
es
add
daa
cli
shrb
gs
out
lods
jecxz
sarb
cmp
xchg
scas
pushf
xor
pop
testl
mov
cs
out
jle
push
and
and
ret
ret
fiadds
jl
imul
shl
mov
mov
sbb
dec
mov
jnp
orl
add
popf
test
inc
andl
sbb
dec
sub
push
fistpll
out
fsubl
dec
in
nop
test
mov
xchg
cld
das
sbb
add
fistl
rclb
je
mov
jne
lret
mov
inc
mov
sbb
jl
arpl
mov
add
mov
inc
or
dec
add
scas
lahf
mov
dec
sbb
sbb
pop
jb
pop
and
faddl
test
xor
adc
cmp
or
mov
mov
jb
test
ret
arpl
pop
inc
loopne
mov
mov
and
inc
pop
xor
out
call
insb
fistpll
mov
adc
lods
jb
pop
jle
cmp
jge
daa
mov
pop
sti
loop
call
ficoms
dec
jle
loopne
sub
inc
mov
inc
mov
cmp
add
pop
movsbl
loope
scas
les
ljmp
xchg
dec
das
je
push
ret
aaa
leave
testl
sbb
xor
icebp
adc
shlb
and
mov
cld
add
leave
into
outsb
add
cmpsl
loope
mov
ljmp
ds
je
sub
scas
rorb
cs
gs
rorb
fldcw
fldt
popf
push
ret
in
aaa
mov
dec
inc
enter
sbb
jle
out
lock
jb
mov
cmp
jmp
aad
out
mov
test
inc
rcrb
mov
and
filds
xchg
cmpsl
daa
pop
cltd
fs
sub
push
and
loope
test
sbbl
lods
dec
cmp
pslld
into
test
not
pop
and
fidivrs
mov
add
pushf
std
adc
stos
divps
cmp
movsl
jmp
inc
mov
insl
into
stc
mov
inc
cld
jecxz
aaa
mov
fnstenv
stos
nopl
add
in
fiadds
mov
or
jl
xchg
repnz
enter
pop
orb
jae
and
dec
sub
out
jge
outsb
das
xor
test
adc
imul
pop
je
pop
mov
mov
mov
dec
sub
cmp
test
inc
leave
in
sub
mov
mov
js
sbb
bound
mov
sbb
xchg
test
add
adc
lcall
dec
and
ds
outsl
cwtl
push
daa
arpl
mov
out
push
int
das
jg
in
rorb
adc
inc
or
lcall
mov
push
faddl
dec
jge
or
decb
add
out
imul
arpl
jle
adc
xchg
sbb
push
cmp
aad
mov
sbb
call
jle
and
mov
add
nop
dec
xlat
jg
fsubr
jnp
dec
mov
repz
or
iret
stos
iret
shlb
xor
sbbl
in
rcrl
lods
int3
ss
ret
inc
fnstsw
push
or
cltd
test
jle
aaa
adc
lret
push
or
add
arpl
leave
inc
adc
inc
dec
xchg
cmp
sub
adc
jg
cwtl
xorl
ljmp
or
outsb
jo
sbb
shrl
add
add
pop
cs
inc
stos
stos
ljmp
and
push
pop
ret
cmp
inc
mov
push
xor
sub
filds
push
iret
dec
xor
arpl
jb
mov
push
or
scas
jns
sub
adc
fmuls
sarb
ficompl
mov
cli
pusha
fistl
sbb
or
faddl
mov
out
push
inc
shl
adc
arpl
mov
jle
xor
fidivl
push
add
xchg
ljmp
in
mov
add
les
push
sub
cmp
cwtl
lds
xchg
in
cld
xor
int3
ficomps
leave
adc
inc
out
mov
mov
cmpsb
jb
loopne
lock
sub
pop
push
xor
pop
loop
dec
pop
push
test
mov
aaa
mov
xchg
andb
sbb
outsb
int3
out
outsl
pop
jns
inc
adc
pop
mov
fcoml
adc
cld
pop
insl
xor
stos
pop
in
lcall
dec
jmp
dec
jg
lret
lea
add
mov
cmp
adc
dec
push
push
mov
jnp
lods
pop
and
cmpsl
fwait
xor
scas
mov
cmp
sti
pop
jnp
into
sbb
pop
pop
pop
ret
iret
jge
adc
xorb
rorl
cmp
mov
mov
test
dec
add
sbb
adc
repz
sub
or
dec
ret
sahf
mov
cwtl
mov
ror
stos
mov
or
xor
aaa
cmp
pop
inc
mov
pop
push
add
aam
jl
push
jns
aas
pusha
jp
mov
xor
xlat
outsb
enter
repz
cmpsb
dec
xchg
or
jae
jne
dec
add
xor
arpl
shlb
call
mov
and
xor
sbb
repz
sbb
push
lret
xchg
outsb
pusha
in
les
sbb
mov
ljmp
lock
sub
and
shrb
dec
sbb
lahf
pop
cld
add
mov
cmp
aaa
sarb
and
mov
inc
add
mov
ja
les
sbb
xchg
insb
lahf
jle
jmp
mov
popf
cmc
ss
or
sahf
dec
cmp
sahf
stc
daa
pop
lods
outsb
clc
stc
push
lods
pop
inc
repz
cltd
or
sbb
aas
add
push
popf
dec
mov
jp
sub
mov
push
inc
rorl
in
pop
adc
adc
fcoms
ds
jbe
dec
cli
shll
push
out
mov
mov
in
test
push
cmp
pop
rorb
stos
or
and
cmp
add
adc
std
xor
bound
subb
ss
mov
scas
or
or
xchg
mov
sub
jmp
shl
call
hlt
sbb
push
cmpsl
iret
push
lcall
sbb
pop
mul
jle
stos
xchg
stos
test
jecxz
sub
aad
mov
push
xchg
movsb
cmpsb
push
jo
pusha
into
sbb
push
mov
xchg
mov
inc
inc
or
loop
out
fists
sub
xor
sbb
push
jmp
sbb
or
leave
jno
lods
movsl
cmp
imul
dec
adcb
push
mov
out
lods
mov
js
mov
xchg
xchg
call
cs
ds
movl
jb
or
pop
sub
lock
js
cmp
cmp
sahf
int
sahf
mov
imul
das
sbb
xchg
addr16
sub
push
loope
in
fisubrl
das
cmp
add
mov
jecxz
gs
out
and
arpl
jmp
lock
aaa
popf
jae
insl
movsl
hlt
sub
xlat
adc
aas
add
cmp
ds
rcr
xor
enter
pop
icebp
or
adc
pop
mov
add
push
mov
and
pop
bound
retw
sub
mov
pop
mov
push
movsl
stos
and
clc
fwait
jbe
sbb
push
lds
jp
je
jae
and
xchg
adc
or
sub
push
jns
xchg
clc
add
aaa
inc
iret
push
repz
xchg
gs
icebp
xorb
push
adc
fcomps
das
mov
fdivl
jmp
push
mov
mov
push
cs
jns
fsubrl
dec
dec
iret
pop
jae
call
pop
rolb
mov
or
push
mov
or
mov
mov
pop
xchg
sub
daa
fwait
ret
cmc
dec
sbb
sti
xor
cmp
cmpsl
push
sub
mov
rolb
outsl
dec
nop
or
jmp
sub
test
aam
mov
mov
es
call
dec
popa
adc
ljmp
stos
add
fptan
inc
daa
mov
dec
insb
add
shll
shrl
test
pusha
mov
out
or
pop
cmp
popf
lds
push
and
mov
jmp
dec
ret
fisubrl
fimuls
sbb
idivb
sub
fistpll
mov
testl
sbb
loope
add
iret
xor
into
push
cli
adc
pop
inc
add
fsubs
outsl
pop
xor
jg
pushf
cmp
xchg
or
mov
lret
mov
cmp
and
mov
dec
pusha
and
and
call
add
mov
outsb
fs
nop
xchg
push
daa
movsl
add
pop
or
lret
xchg
and
not
mov
dec
repz
lea
jno
stc
gs
push
arpl
loopne
add
add
imul
or
push
or
dec
in
or
adc
xlat
dec
bound
sub
push
and
cmp
cmpb
xchg
daa
je
xor
icebp
or
push
lods
dec
mov
xchg
mov
xchg
notl
push
mov
test
arpl
add
arpl
xchg
or
xor
add
and
xor
push
cmpsl
cmp
mov
shll
pop
adc
outsl
cltd
inc
dec
insl
xor
sahf
das
cmp
insl
mov
out
and
dec
lock
jbe
leave
daa
andb
jle
inc
daa
sub
scas
jmp
stos
cmp
push
xchg
imul
xlat
mov
mov
loop
sbb
cmp
shll
cmp
cli
push
xchg
push
movsb
xor
and
dec
mov
xchg
sbb
pop
ljmp
fstpt
mov
adc
jne
leave
mov
pop
daa
adc
dec
and
jo
cs
xchg
jmp
xchg
jne
jne
stc
cmp
mov
repz
les
pop
sbb
dec
xchg
hlt
jle
inc
sub
push
dec
test
and
pop
aaa
and
mov
xor
lods
icebp
jmp
mov
stos
mov
or
mov
inc
scas
mov
push
addr16
sahf
in
adc
jno
popf
mov
pop
mov
xchg
push
pop
mov
repnz
mov
push
filds
icebp
push
icebp
and
sub
cli
pop
popf
mov
add
les
lmsw
adc
test
inc
sub
jl
aaa
adcb
out
lds
sbb
jp
ret
xor
inc
mov
imul
fidivrl
in
adc
add
inc
ret
ds
dec
mov
sarb
iret
shlb
es
iret
imul
test
in
pop
clc
sub
sbb
push
and
aad
fnstsw
lock
mov
or
or
pusha
cmp
lahf
inc
cltd
push
dec
dec
scas
imul
adc
paddsb
xchg
in
out
data16
icebp
pop
sarl
jnp
jecxz
xchg
mov
test
stos
xchg
add
out
rorl
dec
adc
or
pop
jge
fcmovnbe
in
pop
iret
push
loop
data16
popa
fildll
jge
or
push
adc
pop
leave
ficomps
repz
mov
add
mov
mov
pop
cmp
fucomi
and
lds
test
insl
pop
push
out
rclb
aad
cli
inc
mov
out
lret
xor
and
popf
inc
shl
jno
cmp
mov
xor
or
mov
sbb
lret
in
movsl
adc
fisttpll
mov
and
jg
or
in
push
jns
out
inc
mov
adc
into
sub
clc
test
adc
inc
push
in
das
sub
pop
pop
stos
mov
mov
xchg
push
xor
cmpsl
cmp
out
lods
icebp
movzbl
pop
aam
adc
sub
test
xchg
insl
mov
dec
daa
mov
mov
lcall
inc
pop
fdivl
out
add
mov
dec
sti
and
or
insl
mov
pop
xlat
insb
aaa
sbbb
inc
push
sar
js
mov
cmp
inc
imul
in
aad
hlt
mov
adc
lods
shl
iret
dec
fs
das
mov
ret
ss
cmp
daa
movsb
pop
in
jp
es
mov
sbb
cmp
iret
js
pop
push
cwtl
in
jg
pop
pmulhw
mov
or
xchg
into
pusha
sub
popa
sub
fidivs
mov
mov
cmp
push
cmp
decl
mov
jmp
jnp
int3
mov
aad
inc
fisubrs
or
aaa
mov
in
and
xor
shll
jb
push
dec
nop
cltd
aas
inc
add
test
shr
push
inc
xor
arpl
int
cmp
push
sub
and
push
cmpsb
sub
jmp
lret
enter
add
xchg
test
call
mov
movsl
in
mov
add
lret
int
out
aas
jnp
sbbl
shrb
jg
mov
bswap
daa
dec
sbb
cmpsb
in
push
nop
or
dec
inc
inc
in
adc
shr
lea
jbe
and
fisttpl
adc
test
fs
popl
addr16
les
inc
jnp
int3
insl
mov
imul
cs
out
mov
pop
lret
fcoms
dec
or
gs
out
popf
into
sub
cmpb
dec
out
imul
dec
sbbl
mov
clc
jb
sub
xor
and
push
je
xlat
mov
dec
or
xchg
pop
scas
enter
jnp
pop
jbe
push
out
cmp
push
mov
mov
fcmovnb
add
cmp
push
out
adc
idivb
mov
lcall
cltd
or
ja
call
push
cmpsl
ret
setbe
push
sbb
repz
mov
jg
test
mov
xor
jns
ds
nop
cmp
fsubl
mov
add
xchg
xor
iret
jecxz
push
pop
subl
lret
push
sbb
dec
negl
mov
jmp
sbb
sbb
stos
test
sbb
lret
sub
cmp
sbb
out
je
jl
andb
push
add
stos
or
dec
and
inc
cmp
repnz
or
imul
cltd
jg
data16
out
sbb
cmp
icebp
mov
call
enter
mov
xchg
ja
push
enter
adc
sbb
dec
hlt
jl
nop
enter
rcll
int3
push
xor
jns
je
cltd
push
mov
pop
sarb
callw
mov
in
in
cli
dec
arpl
fiaddl
cmp
cmp
ret
ss
nop
stos
adc
int3
xchg
mov
xor
push
das
pop
fisttpl
ljmp
mov
icebp
je
and
add
cld
or
gs
or
shl
xchg
jle
push
or
sub
test
adc
imul
pop
push
js
mov
jp
shrl
or
mov
fwait
and
pushf
jmp
inc
popf
stos
mov
push
mov
cmp
nop
lods
out
push
cmpb
mov
dec
xchg
adcl
add
mov
js
mov
sarb
pusha
push
div
sbb
idivl
clc
xchg
adc
add
lods
and
lahf
ret
std
test
adc
test
xor
xchg
dec
add
xlat
mov
adc
jb
jnp
enter
js
jl
lcall
in
es
in
test
xchg
xor
mov
mov
inc
lret
xchg
aas
jbe
loopne
fistps
push
add
or
and
adc
lret
lcall
push
popa
out
xchg
xchg
jmp
push
sbb
outsl
daa
fs
subl
jp
pop
push
aas
jl
mov
out
mov
fmuls
lret
pop
jp
aas
pop
push
and
pop
hlt
dec
aaa
loop
fldcw
jae
jmp
scas
sarl
mov
fsubrs
pusha
cmp
jno
and
bound
js
popa
add
rorl
mov
movsb
add
jecxz
fwait
subl
js
push
clc
fnstenv
aam
or
xchg
incl
mov
in
adc
inc
fs
ja
out
push
call
sbb
push
and
data16
out
aam
xor
repnz
imul
or
out
xchg
mov
repz
pop
xor
ret
mov
in
push
xor
ret
jae
je
sub
pushf
cwtl
or
js
add
push
sti
lret
dec
and
mov
add
bound
negl
mov
push
adc
outsl
dec
lds
mov
lock
leave
push
dec
orb
lret
mov
lods
push
dec
fsts
jo
jo
push
jl
pop
filds
mov
pop
add
pop
mov
std
subl
mov
dec
fbstp
lahf
xlat
rorb
xchg
dec
int3
out
push
mov
sbb
data16
fsubrs
stos
and
xchg
jnp
push
sbb
nop
xor
push
or
and
int
fistpl
rcr
je
repz
sub
pop
xorb
mov
out
pop
add
shll
pop
cmp
dec
and
movl
je
dec
or
inc
pop
inc
test
popa
clc
adc
ffree
cwtl
js
insl
add
dec
fidivrs
push
and
or
sub
out
push
cli
xor
mov
and
jmp
mov
jge
adc
mov
sub
es
pop
xor
pop
std
fiaddl
test
xchg
mov
jb
decb
adc
jae
call
imul
aaa
ret
jp
mov
dec
sahf
adc
sahf
shll
subl
inc
loope
dec
jl
jg
jmp
cli
insl
mov
cmp
dec
call
and
insb
add
popf
mov
xlat
sbb
sahf
push
pushl
ret
fisubrl
jnp
and
lret
sbb
mov
daa
xor
lds
fwait
mov
and
adc
dec
inc
mov
cmp
rorb
imull
push
subb
scas
or
xor
xchg
clc
enter
bound
push
aas
filds
inc
mov
inc
jg
cltd
fnstenv
cmp
cwtl
cwtl
scas
ficoml
adc
add
sbb
lahf
push
cmp
sarl
inc
pop
jp
pop
in
lock
aas
dec
lahf
mov
rolb
loopne
filds
pop
test
mul
jbe
jb
insl
push
dec
imul
xor
fdivr
xor
inc
pushf
adc
int3
cmp
fs
mov
popa
cmpsl
insl
xchg
and
rcrl
addr16
mov
fdivrl
mov
ss
movsl
lret
fmul
loope
mov
clc
and
sub
in
push
and
push
inc
pop
cld
outsl
lods
sarl
fsubs
add
iret
enter
xlat
push
jo
and
push
dec
adc
pop
cmpb
push
nop
pushf
xchg
push
mov
adc
cmpsb
mov
and
daa
out
sbb
fbld
cmpsl
cld
inc
movsl
push
adc
sub
add
push
fisttpll
popa
insl
repnz
push
inc
stos
repnz
std
sbb
cmpsl
xor
dec
clc
push
or
dec
lret
xor
pusha
es
ficoms
insl
daa
lret
push
adc
lock
cltd
add
jne
out
add
mov
ljmp
cld
in
cmp
lds
out
arpl
fs
jle
push
mov
cwtl
ret
aam
mov
cmpsb
cmp
inc
scas
sub
push
out
bound
test
mov
mov
cmp
xchg
mov
mov
frstor
in
std
pop
addr16
rcrb
mov
sbb
mov
dec
imul
cmpsb
shl
cmpsb
fnstenv
sbb
inc
add
inc
mov
mov
pop
mov
nop
jnp
sarl
xor
int3
movsb
sahf
test
cld
inc
jp
dec
loop
inc
mov
add
or
fsubl
ds
stos
cwtl
mov
cltd
mov
lods
aad
inc
adc
sbbl
shrl
push
mov
pop
or
mov
ljmp
div
sbb
lahf
xor
aas
sti
sub
lret
in
push
mov
mov
mov
push
add
ss
sub
gs
jecxz
mov
mov
pop
ja
mov
nop
test
daa
mov
int
andl
dec
mov
inc
xchg
jg
push
es
inc
sbb
stos
jmp
ffree
push
add
cltd
fsts
pop
sbb
fnstsw
les
outsb
xchg
add
outsb
imul
sub
xchg
xchg
ss
hlt
inc
orb
addl
xchg
cmp
fs
scas
cli
dec
push
lcall
sbb
sub
push
xchg
sub
cltd
sbb
cmp
pop
aaa
jge
je
sub
lahf
cmp
or
outsb
and
ljmp
dec
imul
stos
push
out
clc
push
lods
and
pop
mov
out
add
mov
cmp
out
sub
lods
pop
mov
push
push
fistpl
faddp
sub
pop
adc
dec
cmpl
das
jl
or
pusha
pmaddwd
push
jne
fistpll
pop
push
in
stc
insl
xchg
in
hlt
mov
or
sub
inc
mov
add
jno
ljmp
ret
popa
sbb
adc
popa
fisttps
ja
xchg
and
fsub
ja
std
js
lods
inc
aad
les
pop
pop
push
in
xor
cmc
mov
pushf
mov
inc
rolb
sti
decb
in
cmpsl
pop
cmpb
push
into
lret
mov
add
sub
lock
out
lahf
sti
jp
lock
sbb
xor
and
jb
or
js
ja
jno
cli
ja
push
lods
mov
and
pop
int3
jecxz
jp
out
call
push
cmp
jbe
dec
dec
out
dec
hlt
stc
dec
js
js
je
rcll
loopne
fistps
pop
adc
pop
outsl
lret
cmp
in
or
loop
ljmp
cmpsl
pop
mov
data16
adcl
loopne
jns
mov
pop
test
das
mov
stos
ss
and
adc
dec
push
cmp
sbb
ljmp
lret
fildl
and
test
or
scas
sbb
dec
popf
js
xor
jns
mov
cli
ljmp
mov
xchg
pop
inc
sub
sahf
and
sbb
lods
jne
pop
push
dec
cmp
mov
adc
xor
mov
stos
popa
je
add
roll
rcrl
cmp
push
mov
andb
popa
sbb
fcoms
adc
movsb
jmp
mov
xchg
subl
jle
mov
and
or
dec
mov
testb
and
insb
and
adc
add
push
es
sbb
xor
cmpsl
and
aaa
push
add
cmpsl
mov
jg
pop
cmpsb
adc
xlat
xchg
adc
rcr
cwtl
fcomps
leave
dec
imul
add
sbb
cmp
pop
push
cmp
scas
and
js
shrb
lock
adc
insl
cltd
cmpl
push
cwtl
pop
jg
jl
xor
repz
jecxz
jp
push
incb
jnp
repnz
cmp
sahf
pop
xchg
xor
stos
mov
pop
and
jmp
push
push
or
ljmp
or
push
out
push
loop
in
mov
sahf
adc
jb
je
aaa
popl
movl
pop
sub
dec
fidivl
arpl
fdivrs
xlat
mov
outsl
xchg
xchg
les
inc
xchg
lcall
push
shlb
test
push
sti
xchg
cltd
aaa
scas
mov
inc
popa
pop
or
lods
xchg
sbbb
or
push
cmpsb
fstpt
mov
fwait
fwait
pusha
dec
push
mov
aam
push
sub
daa
pop
shll
inc
js
sbb
imul
sbb
sbb
xor
lcall
xchg
shll
ret
jp
dec
sbb
sub
bound
dec
hlt
lods
std
xor
rcr
popf
pop
sub
cmpl
pop
aaa
xchg
dec
mov
and
aaa
aam
mov
shlb
nop
sbb
cli
das
xchg
cli
mov
icebp
add
out
cmp
leave
mov
mov
mov
aad
mov
iret
add
mov
xchg
bound
ss
cmp
pop
mov
insb
clc
inc
pop
jle
xor
sti
mov
push
data16
dec
push
pop
lock
mov
xchg
lahf
orl
mov
ret
add
jle
pop
push
mov
repz
jmp
jb
xchg
pop
and
or
and
mov
fnstsw
or
lea
cli
jns
sbbb
or
adc
mov
push
cmpsb
shlb
lret
rcrb
jp
hlt
sar
add
cmp
push
push
and
sbbl
loopne,pt
xor
dec
std
ds
mov
ret
jle
js
pop
jl
cs
pop
xchg
dec
shlb
sub
bound
pop
hlt
testl
scas
push
or
cli
cmc
cmp
jl
insl
lret
clc
scas
mov
movb
sub
inc
je
inc
out
dec
dec
mov
mov
in
fisubl
adc
into
pop
mov
pop
mov
int3
mov
inc
loope
pop
push
add
mov
pop
jno
mov
cmp
loope
movsl
fisubrl
jno
sbbb
sub
ret
fsubrl
adc
ja
cmp
mov
mov
inc
fldl
add
inc
rorb
and
push
aam
mov
jbe
jnp
pop
pop
sahf
xchg
repz
dec
fidivrl
insb
mov
jbe
lahf
lds
adc
xor
inc
xchg
icebp
mov
stos
fs
rcll
pop
push
inc
pop
fisttps
push
push
or
push
in
xlat
pop
and
arpl
sbb
mov
jne
popa
sub
dec
icebp
aam
push
leave
mov
mov
pop
pop
shlb
and
into
lea
dec
stos
adc
pop
mulb
std
xor
add
cmp
jns
mov
xor
xor
sub
pusha
imul
mov
and
pop
aas
cltd
mov
nop
mov
sub
pop
outsl
add
jae
pop
pop
sub
ffree
adc
mov
mov
mov
add
push
mov
enter
pop
adc
push
mov
and
xchg
outsl
aas
and
pop
cmp
cmp
or
test
cwtl
fdivp
fwait
test
gs
jns
inc
fwait
xlat
sbb
int
ds
add
cwtl
rcrb
push
push
out
pop
add
lret
dec
cmp
ret
xor
cltd
add
test
aas
out
adc
in
jne
cwtl
or
push
xchg
pop
mov
fnstenv
adc
jno
sub
push
subb
adc
mov
cmp
mov
pop
adc
cmpsb
push
cmpsl
cld
mov
fcmovne
std
sub
sbb
jmp
pushf
ds
loopne
pushf
out
jle
loope
stc
mov
add
jae
xor
mov
outsb
xchg
cmp
lret
adc
dec
mov
adc
xchg
inc
aas
dec
and
mov
cmp
dec
in
fiaddl
aaa
mov
stos
cmp
fidivrs
jno
cmc
pop
outsb
mov
pop
ficomps
jp
into
pushf
mov
lods
or
test
movsl
push
jmp
int
les
mov
push
pushf
jb
add
std
cmpsb
ss
add
jns
jg
sbb
pop
fdivs
shl
and
popa
test
hlt
sub
fwait
test
mov
jge
rorb
cmp
jg
les
fldl
inc
or
cwtl
test
mov
loope
pop
outsb
xchg
cmpl
mov
jo
inc
rorl
inc
hlt
mov
push
or
pop
sub
or
loop
testb
jb
lds
orl
jge
lock
iret
pusha
mulb
mov
xor
ret
push
xchg
test
addr16
sbb
enter
in
jo
int
sbb
sub
push
sub
fwait
xor
mov
fnstsw
jne
je
shll
xchg
xor
jb
fs
sbb
out
jmp
gs
push
add
sahf
dec
pop
imul
mov
inc
sar
cmp
inc
adcl
push
xchg
xor
sub
pop
pop
sbbb
adc
pop
orb
jle
push
jmp
xchg
ljmp
or
mov
push
mov
mov
mov
mov
fsubs
mov
enter
or
test
adc
aam
sti
rcll
pop
rcrl
movb
push
bound
jo
inc
or
imul
mov
dec
inc
adc
lock
pop
fdivr
mov
xor
rorl
pusha
mov
hlt
fisubrs
pop
hlt
nop
out
mov
cmp
sub
push
lds
js
out
or
adc
add
fisubrs
data16
xor
out
cmp
test
or
je
enter
jle
hlt
sbb
popa
sti
adc
std
clc
mov
mov
aaa
push
mov
mov
out
iret
or
xchg
sub
jecxz
and
scas
push
mov
dec
inc
or
idivb
loopne
mov
or
aad
dec
jae
sbb
in
push
pop
xor
faddl
loop
adc
add
test
loopne
jg
in
rolb
sub
dec
lcall
out
outsb
ret
out
xchg
sub
scas
xlat
inc
and
adc
push
and
sbb
jbe
test
adcl
stos
psubq
arpl
lea
test
mov
lahf
pop
ja
insl
dec
icebp
hlt
les
lods
mov
data16
ljmp
sbb
adc
xchg
daa
loop
push
cmpsl
shl
addr16
jmp
mul
xor
popf
icebp
test
jns
inc
push
test
cmpsl
xchg
mov
mov
addr16
jmp
dec
mov
insb
ficomps
adc
lods
ja
sub
xor
mov
scas
ds
lahf
mov
xor
sbb
shr
popa
push
pushf
add
add
sub
mov
sbb
cli
xor
jle
test
insb
and
roll
icebp
lods
or
and
in
cmp
pop
mov
aam
sub
rcll
repnz
mov
add
inc
push
sarb
pop
movsb
cmp
mov
sbb
lods
out
mov
es
jnp
adc
xchg
fildl
in
cmp
scas
orl
lcall
xchg
add
pop
cmp
vpunpcklwd
sub
mov
push
dec
lods
jbe
imul
cltd
out
or
push
adc
add
loopne
loope
xchg
out
mov
cmp
popa
fbstp
fcomps
cmpsl
inc
and
sbb
cmp
xor
dec
cmpsb
fwait
in
cltd
aad
mov
jno
push
cmpsb
pop
cmp
mov
stos
testb
push
push
aam
mov
push
mov
mov
out
nop
std
ss
bound
es
mov
js
stos
and
in
dec
sahf
aaa
movsl
or
gs
pushf
jmp
in
adc
inc
pop
jp
pusha
fdivrs
mov
fucomp
inc
xchg
add
scas
in
jae
aaa
movsl
test
imul
sbb
stos
dec
imul
ljmp
popa
xchg
inc
push
xor
rcll
daa
daa
test
jge
or
popa
notb
not
inc
inc
in
xchg
mov
or
aas
out
loope
iret
lds
mov
dec
mov
jbe
jns
data16
aaa
cmp
fs
xlat
pop
test
inc
adc
add
cmpsl
loope
jmp
jp
shl
out
xchg
xlat
push
scas
mov
pop
or
stc
dec
rclb
outsl
mov
adc
pop
jne
idiv
hlt
mov
call
das
ret
and
movsl
cltd
inc
adc
cli
aaa
pop
adc
and
and
xor
scas
xchg
sub
leave
sub
mov
cltd
mov
ficompl
mov
or
pop
loope
mov
cmovle
or
ds
mov
sub
cmp
ret
mov
enter
inc
sti
sub
ljmp
fsubs
or
mov
stos
in
test
lret
test
stc
sub
and
lds
rol
popf
fnsave
aas
and
enter
or
sub
lock
gs
sbb
inc
ljmp
adc
adc
xor
fisubl
mov
mov
imul
pushf
mov
cmpsb
sub
fwait
call
shll
sbb
inc
jb
jae
arpl
pop
jae
adc
and
pcmpeqb
xlat
xchg
mov
dec
ret
or
cmp
and
shll
mov
push
cwtl
sub
dec
fsub
loope
lds
into
sub
mov
testl
adc
dec
xchg
popf
adc
xchg
mov
lea
das
xchg
inc
movsb
iret
jae
arpl
mov
call
sbb
and
je
adc
xchg
mov
addl
fcomip
adc
cmp
mov
mov
mov
xor
xor
inc
xchg
mov
pop
bound
mov
dec
outsb
xchg
outsb
xlat
lahf
sbb
clc
sub
sti
push
sub
xchg
mov
mov
test
int3
push
add
mov
add
add
loop
sbb
xchg
and
jae
cwtl
nop
je
jmp
subl
ja
pop
das
outsl
or
cld
call
cld
mov
orl
or
mov
jnp
sahf
cmc
filds
inc
inc
push
xchg
sub
add
sbb
rcrl
push
sub
in
dec
inc
xchg
sbb
xchg
je
in
dec
shl
jb
mov
inc
mov
dec
mov
les
ss
std
pop
cmpsl
and
inc
mov
lods
or
cmpsb
repnz
and
pop
jb
add
sub
inc
mov
sbb
add
addb
mov
pop
fwait
mov
insl
out
call
xchg
cmp
xchg
push
imul
xor
pop
cmpsb
js
cmpsb
insl
and
push
dec
pop
xchg
cmpsl
push
pushf
or
out
jle
or
addr16
mov
add
pop
ja
mov
jmp
pcmpeqd
xchg
test
addr16
in
aam
or
in
push
aad
dec
cltd
xchg
and
jp
mov
pop
cmp
ss
xor
and
xor
ret
dec
sub
mov
and
scas
sub
ljmp
add
and
push
mov
into
fwait
dec
repz
jmp
dec
insl
fcmovnb
add
jbe
push
add
adc
mov
cmpl
imul
mov
pop
pop
jg
inc
out
cmp
adc
adc
int
clc
xchg
or
push
jb
stos
inc
icebp
mull
xchg
sub
popf
clc
imul
xchg
cmp
jmp
dec
xor
lret
aam
repz
in
into
jnp
int
lds
cltd
test
leave
pop
jmp
push
stc
popf
scas
int3
ljmp
cmc
xor
sbb
mov
lret
jge
ljmp
daa
popf
push
add
push
out
jbe
push
mov
mov
xor
inc
insl
xchg
test
inc
or
mov
inc
stc
je
xor
jbe
sbb
pop
leave
mov
and
in
cmp
xchg
loope
out
adc
cmp
aad
mov
divb
dec
es
cltd
sub
xchg
push
outsb
xlat
test
int
inc
das
mov
add
xor
stos
out
xchg
popa
int
rcl
sub
lods
mov
inc
insb
dec
sar
loopne
add
sbb
xchg
sub
insb
mov
jg
jecxz
add
js
imul
pop
sahf
and
pop
cmp
mov
jmp
leave
sbb
aad
test
outsl
sub
ljmp
push
jl
push
pusha
mov
aam
adc
sbb
sub
aas
imul
add
stos
ret
mov
roll
ret
and
mov
or
push
jns
loopne
in
into
call
mov
out
pop
and
subb
sti
push
push
xchg
mov
push
andl
jae
fwait
lods
stos
push
mov
mov
cmpsl
jp
cmc
out
cltd
cli
mov
and
fadds
xor
lret
call
pop
add
repz
in
or
adc
fidivrs
pop
push
jnp
popf
insl
add
adc
in
and
outsb
inc
fwait
sar
test
lock
jb
inc
and
mov
xchg
pop
and
xor
xchg
xchg
mov
testl
bound
enter
test
int3
sahf
sbb
lods
xor
dec
out
rcr
dec
inc
or
jae
pop
cmpsl
add
and
fsubl
cmp
bound
adc
sarl
and
sbb
bndldx
adc
aam
jbe
pop
dec
fdecstp
pop
mov
sub
jge
and
and
cmc
out
popf
scas
sub
mov
pop
int3
push
inc
pop
icebp
dec
leave
in
cmp
xor
fsubrl
or
xlat
lds
inc
mov
lahf
mov
shl
subb
mov
clc
xlat
jns
stc
jg
mov
enter
xor
xchg
push
cmp
cmpsl
pop
jb
lret
push
cmpl
mov
fadds
ja
clc
jns
and
xchg
cmp
jno
insl
outsl
cmp
addb
icebp
dec
and
xlat
pop
pop
add
lahf
sti
inc
and
je
xchg
lahf
shrl
pop
dec
pushl
insb
jae
xor
sarb
insl
in
fs
sbb
pushf
mov
add
adc
or
shll
mov
loopne
popa
add
js
inc
cltd
js
jo
fstpl
iret
imul
mov
jbe
lret
push
push
push
lds
pop
cli
inc
es
push
gs
pop
and
jo
fstpl
repz
insb
fistps
xchg
in
mov
pop
pop
arpl
and
push
gs
fisubrs
and
mov
test
movsb
xor
inc
push
stos
or
dec
gs
icebp
cmp
sbb
mov
ja
loope
fldenv
test
push
cmp
loope
mov
sbb
dec
push
push
sub
jae
pusha
das
popa
sub
int3
dec
lods
xchg
push
cmp
shlb
pop
and
divb
sub
xor
jecxz
mov
push
movsb
mov
push
dec
cltd
sub
push
push
xchg
stos
pop
lea
jl
add
push
or
sti
inc
pop
mov
notb
and
clc
mov
cmpsb
xchg
mov
je
pusha
nop
jmp
mov
or
fwait
dec
in
shll
jne
add
lret
jecxz
mov
mov
mov
xchg
loope
mov
sbb
mov
push
mov
pop
fsub
cmp
and
lods
sti
mov
fcmove
rcrl
jns
pop
lods
loopne
shrl
js
or
push
lret
cltd
or
inc
ljmp
xor
xor
lock
mov
adc
mov
push
pop
xchg
pop
insl
dec
mov
test
and
add
int
ss
mov
adc
rorl
mov
mov
rolb
mov
js
jmp
mov
arpl
out
test
mov
mov
jns
das
adc
mov
outsb
fnstcw
in
mov
sub
cmpsl
dec
pop
add
and
jbe
push
cmc
dec
mov
fs
mov
ja
adc
jns
pop
sbbb
imul
inc
inc
or
jp
lods
push
mov
ret
push
xchg
mov
cmp
or
mov
jg
or
add
out
jle
xorl
mov
jns
sub
xchg
sub
xchg
jns
out
nop
and
les
test
sub
arpl
jae
cwtl
aam
cs
jl
add
test
jp
xchg
loop
into
jmp
mov
inc
test
cmc
mov
outsl
dec
pop
mov
lahf
cld
xor
cmp
jmp
sbb
mov
push
inc
mov
jo
push
adc
out
cwtl
aad
sub
pop
je
pop
push
or
imul
mov
loopne
mov
addl
js
shll
push
leave
mov
cld
dec
mov
clc
out
sbb
test
mov
rorl
push
cmp
lock
mov
test
into
scas
loopne
testb
push
sub
mov
hlt
inc
mov
call
mov
push
das
nop
add
loope
jmp
mov
ficoml
into
adc
jo
rcrl
pop
xor
fcoml
inc
jo
cwtl
mov
mov
addl
and
jle
mov
hlt
add
les
mov
inc
lds
sbb
xchg
test
jmp
jns
outsb
cmp
shll
addr16
ds
mov
aas
loopne
jns
push
stos
aad
and
xchg
cltd
xor
push
or
mov
test
test
xor
call
mov
push
rclb
and
xor
cwtl
jo
jl
jecxz
push
inc
sub
and
cmp
cmpsl
icebp
movsb
ret
ljmp
lds
mov
sub
nop
push
or
xor
mov
loopne
xchg
lcall
aad
scas
cmp
or
int3
in
sbb
push
filds
pop
sbb
cmp
or
sbb
xchg
jb
movups
call
pop
and
icebp
or
dec
imul
mov
xor
in
fbld
mov
lea
sub
pop
inc
enter
jb
xchg
mov
out
lahf
or
int3
inc
mov
push
fwait
mov
aad
jno
lret
pop
into
cmc
mov
push
and
lds
ficoml
inc
pop
popa
mov
sub
fisttps
xchg
mov
fmull
add
aam
mov
scas
sub
cmp
pushf
jecxz
mov
cmp
and
mov
shl
inc
push
fsubs
imul
fwait
cmp
adc
jbe
mov
add
jne
push
jb
cmp
imul
mov
pop
add
cmp
xchg
ss
xchg
mov
cmp
mov
out
dec
mov
push
xchg
cld
fldenv
enter
mov
movsb
es
inc
inc
data16
inc
mov
sbb
mov
jne
pusha
test
nop
daa
inc
mov
leave
in
xchg
jbe
dec
jne
ret
arpl
dec
cmp
stc
jmp
fistpl
fwait
inc
cmp
ret
pop
xchg
jmp
dec
push
bound
and
fucomp
mov
xor
lods
shlb
adc
fadds
add
lret
adc
inc
push
jmp
mov
bound
or
lods
and
xchg
fldcw
xor
lcall
cmp
in
xor
cli
add
popa
push
push
fistl
imul
xchg
call
lcall
ljmp
leave
pop
add
add
aam
jle
cs
insl
xlat
inc
scas
lret
mov
stc
mov
pusha
xor
add
lea
mov
into
mov
and
xchg
or
mov
mov
int
sbb
ret
test
mov
sub
push
sub
push
push
add
inc
dec
push
mov
xchg
arpl
mov
xchg
loope
cmp
sbb
stos
pop
das
jbe
or
sub
repz
fdivl
insl
xor
add
mov
jle
sbb
mov
std
in
jecxz
jns
sub
jae
adc
stc
movsl
inc
push
or
addr16
jg
lods
cmp
jl
lcall
nop
inc
cmc
adc
cmp
int3
in
dec
dec
xchg
mov
cld
xchg
pop
pop
push
sbb
movsl
test
fidivs
adc
inc
push
testb
or
cld
jns
push
ret
mov
jb
lods
leave
inc
fidivrs
xchg
push
lcall
or
imul
and
and
dec
mov
int
mov
push
dec
xchg
loope
int3
sub
inc
inc
arpl
shrb
push
daa
mov
inc
out
pusha
cmpsb
es
insl
out
sub
xchg
ljmp
push
ljmp
mov
into
ud0
xchg
mov
aad
mov
xchg
jmp
cli
xchg
scas
xchg
or
sub
pusha
inc
sbb
dec
mov
fcmove
sub
push
dec
mov
ret
imulb
jb
std
and
or
xor
adc
fldenv
call
push
inc
sub
pinsrw
es
mov
rcrl
popf
push
pop
aas
jl
push
xchg
ljmp
xor
sbb
and
mov
aam
xchg
lahf
xchg
testb
lds
mov
cmpl
bound
push
cmp
mov
into
pop
inc
mov
pop
sbb
movsl
int3
pop
fcoms
mov
cltd
sub
dec
jb
into
aad
lcall
dec
sbb
pop
stos
sbb
add
loope
into
or
cld
xlat
push
push
movsl
es
mov
lcall
fstps
rorl
repz
shl
pop
inc
pop
outsl
mov
outsl
addr16
testb
call
ret
jl
xchg
stos
mov
gs
jmp
xor
xor
push
icebp
push
jae
mov
jbe
mov
or
pushf
dec
mov
repnz
aad
xchg
jmp
mov
mov
js
adc
xchg
jp
icebp
mov
dec
cli
xchg
mov
loopne
cmp
mov
bound
cmp
shrl
xlat
ret
sahf
cmp
jge
sub
jge
xor
popf
push
push
jns
cwtl
mov
sbb
xor
rcr
pop
jg
stos
aaa
enter
insl
jne
sti
adc
add
push
pop
mov
sub
lods
xor
shr
lods
fwait
inc
or
outsl
call
jl
das
add
sub
sbb
test
add
inc
cmpsb
push
push
sbb
mov
mov
pop
push
mov
sub
mov
pop
push
add
pop
sub
aaa
dec
adc
ljmp
mov
sub
xchg
out
sbb
and
cmc
xor
sahf
fnsave
popf
popa
push
std
lret
inc
loopne
inc
not
notb
push
and
sbb
dec
inc
mov
xor
inc
xchg
push
lcall
and
xor
rcrl
jecxz
jns
pop
or
addr16
lods
fcomps
add
cltd
xchg
cld
mov
add
call
rcrl
jp
test
movsl
inc
lret
rcl
cmp
fstpt
mov
test
jecxz
add
lcall
call
addr16
inc
dec
cmp
sub
mov
cli
jg
lcall
lret
data16
mov
push
insb
pop
xor
das
sub
mov
loop
scas
xor
sub
lret
aad
ja
mov
rcr
out
cld
sbb
repnz
sti
sub
jp
sti
xchg
xchg
mov
inc
fisubl
and
cmc
jo
lds
mov
and
aam
out
sub
or
lahf
lods
hlt
sub
mov
shlb
add
psubd
js
and
or
pop
in
lahf
mov
mov
inc
mov
push
cmp
cwtl
test
cs
das
jae
incl
mov
cltd
xchg
fwait
in
xchg
sbb
sbb
filds
adc
idivl
insb
inc
jmp
cmp
popa
daa
xor
mov
sub
or
sub
dec
add
jmp
sub
push
icebp
rclb
and
repnz
lods
push
cs
push
cmp
mov
add
not
scas
aam
scas
pop
jb
das
dec
mov
push
sub
arpl
decb
mov
xor
scas
out
xchg
jmp
adc
shll
pop
push
es
jg
sarb
test
jnp
outsb
flds
rcrl
dec
mov
mov
shlb
xchg
je
fs
test
stc
in
dec
rcll
mov
ret
rolb
in
mov
jge
pop
cmpsb
test
jmp
inc
adc
adc
shlb
mov
adc
xchg
mov
jge
dec
xor
jnp
std
shll
adc
mov
xor
mov
movsb
ja
add
sbb
jo
loop
insb
arpl
push
or
xor
shrb
imul
dec
repz
dec
gs
sbb
roll
cmp
and
xor
data16
jp
sbb
shrl
push
sti
into
mov
pop
test
xchg
in
xchg
pusha
and
xor
out
sub
mov
push
call
sub
rcr
idivb
shr
push
out
hlt
mov
pop
fcompl
or
inc
cs
pop
xchg
cli
xor
roll
adc
xlat
sbb
pop
pop
sub
aas
jecxz
clc
popa
inc
ss
icebp
xchg
push
imul
movsl
mov
je,pt
or
push
add
int3
stos
cld
fdivrl
and
daa
dec
mov
in
mov
pop
adc
mov
mov
or
dec
hlt
and
negb
bound
mov
push
pushf
sti
into
popf
fcmovb
int
push
push
jecxz
push
popf
cmp
outsl
sbb
cmp
scas
push
adc
imul
add
js
pop
shlb
pop
push
neg
and
loop
fildl
sahf
dec
filds
push
mov
adcl
adc
xchg
pushf
lods
scas
or
mov
daa
mov
nop
add
push
push
push
call
subl
push
addb
cli
mov
cmp
enter
push
xorl
imul
inc
cmc
aam
mov
sarl
sahf
mov
xor
xor
mov
mov
loopne
sahf
lahf
loope
adc
sub
movsb
incl
sub
mov
outsb
fisttpl
mov
popa
cmp
ljmp
lea
sbb
repnz
ljmp
push
mov
decl
fstl
iret
sub
mov
arpl
dec
xorl
sub
lret
inc
sbb
sub
sti
mov
fwait
mov
iret
psrlq
jb
mov
dec
clc
xor
or
jle
leave
lcall
jge
icebp
pop
test
mov
fdivrp
jae
mov
inc
pusha
pop
push
cmp
fcmovnbe
pop
mov
addr16
add
mov
into
sbb
in
and
mov
rcpps
js
sub
test
mov
xchg
mov
testl
js
cs
rcr
or
or
orb
or
mov
mov
test
cld
sahf
push
dec
inc
mov
and
aam
bound
test
lea
xchg
fmul
sbb
shrb
stos
cmp
outsb
cs
jecxz
adc
and
repz
cwtl
in
push
add
cmpl
mov
lcall
shrl
iret
ljmp
xor
jno
mov
stc
adc
push
out
xlat
pop
jbe
test
sbb
jns
and
lods
in
adc
add
push
sbb
lcall
lcall
cmpsb
fwait
imul
ror
xor
mov
push
rorb
outsl
mov
push
outsb
lret
fwait
loope
adc
jbe
outsb
roll
push
mov
xor
ficomps
aam
xchg
jb
sub
adc
mov
cld
mov
xchg
or
lret
push
sti
add
loop
push
adc
and
rorl
xchg
xchg
lods
cmp
push
or
sub
sbb
jge
rcrl
add
imul
jbe
mov
jb
xchg
xorl
pop
psubq
add
inc
mov
xor
je
xchg
push
jnp
fldenv
icebp
sub
lea
push
add
loopne
into
out
xor
mov
and
sub
push
push
sbb
aad
xor
xor
pop
mov
cmp
sub
loopne
stos
std
pop
xchg
ss
out
jb
fimuls
test
mov
das
or
adc
pop
sub
cmp
jns
xchg
lret
xchg
mov
cmp
aaa
pop
jb
in
push
scas
hlt
add
pop
adc
loop
es
and
mov
lret
js
ret
aad
call
xor
pusha
popf
rclb
sbb
insl
pusha
cwtl
aas
mov
out
fdivrs
push
inc
rep
loop
mov
pushf
pop
sbb
fists
popl
je
adc
clc
adc
fnstenv
lds
push
imul
cmp
adc
mov
or
sub
nop
rcrl
xor
loopne
mov
ljmp
lahf
add
repz
pushf
pop
rorb
mov
rclb
push
lds
outsb
mov
aaa
adc
mov
js
xor
sub
jo
sbb
in
mov
call
push
loope
or
mov
inc
inc
test
out
fs
and
outsl
mov
pop
into
fsub
lods
cmp
pop
inc
dec
in
pop
dec
sbb
fwait
hlt
pop
cmp
xchg
dec
add
mov
sub
cmp
xor
and
mov
pop
push
inc
jae
mov
jae
pop
and
pop
ficoms
f2xm1
sbb
mov
push
sbb
mov
out
sti
hlt
cs
or
dec
push
push
and
cwtl
leave
pop
or
sub
push
sarl
iret
add
inc
sbb
imul
pop
aaa
int3
mov
add
jno
xor
mov
ss
dec
aas
lds
and
movsl
push
push
inc
push
or
dec
icebp
lret
popf
jnp
notb
mov
push
orl
sub
scas
pop
or
pop
push
or
fstp
das
adc
idivb
hlt
mov
push
and
call
nop
cmp
jecxz
dec
jl
fsts
inc
mov
rcl
sbb
or
pop
dec
or
shlb
or
jecxz
mov
test
or
xor
mov
out
jle
cmpsl
mov
rorl
xchg
incb
lock
andb
scas
mov
sub
repnz
xchg
push
sahf
xor
divb
nop
aad
loop
adc
popf
filds
jge
jbe
or
or
jno
add
jmp
pop
ficoms
jb
dec
fsubs
add
repz
push
mov
or
push
mov
fildl
je
mov
dec
enter
pusha
mov
add
mov
stos
adc
mov
mov
add
sub
xor
sbb
jl
or
clc
fisttpll
aas
rolb
repnz
mov
cmp
xchg
cmpsl
jno
into
and
faddl
dec
testb
inc
sbb
repz
adc
stc
dec
sti
push
loope
test
and
mov
fcmovb
mov
leave
and
push
xchg
cmpsb
mov
pop
xchg
in
mov
or
jns
lea
jl
cmovle
dec
cmpl
je
subl
loop
movsl
call
lock
loop
mov
fwait
ss
pop
push
nop
inc
add
leave
add
inc
shll
jp
mov
pushf
jnp
mov
add
xor
jne
mov
xchg
iret
mov
cs
jnp
stos
mov
fdivl
jge
sub
sbb
inc
or
or
mov
or
lods
int
test
shrl
nop
js
leave
fstps
or
pop
jo
insb
bound
mov
aaa
and
cmp
andb
xorb
mov
pusha
into
sbb
pop
ret
dec
mov
and
test
push
lods
int
jmp
lea
dec
in
cmp
fsts
or
and
push
sar
inc
pop
out
in
arpl
nop
or
xor
push
xor
sbb
inc
xchg
push
adc
mov
jne
fsubs
push
test
lods
jne
inc
pop
push
into
pop
in
and
xchg
cmp
or
and
or
data16
sbb
or
into
lock
inc
sbb
pop
and
cs
popl
roll
pop
mov
mov
mov
inc
xor
and
lret
stos
scas
ret
mov
int3
and
int
nop
lret
cmpsl
iret
daa
sub
sub
mov
xchg
mov
dec
jecxz
lods
dec
enter
mov
aaa
cmp
and
lock
hlt
aad
push
int
push
or
lcall
push
pop
test
loopne
enter
xchg
pushf
lea
pusha
pop
xchg
jmp
dec
cltd
xchg
cwtl
hlt
scas
xor
mov
stc
arpl
imul
outsb
les
jo
mov
jmp
js
daa
stc
xchg
jecxz
pop
adc
ficomps
lret
fcoms
lods
dec
outsl
mov
or
push
movsl
lret
push
dec
pop
sbb
stc
ss
xchg
call
push
adc
sarl
subw
mov
jb
push
loope
and
pop
mov
icebp
aad
cld
push
lea
ja
mov
xchg
pop
push
dec
dec
jae
insl
daa
pop
lods
mov
pusha
sbb
adc
int3
fsubs
xor
mov
movsb
fisttpl
cmp
xor
add
lds
leave
jbe
cltd
sti
aas
aad
out
rcrl
add
cmc
or
or
pop
scas
cmp
insl
pop
cltd
andl
push
push
jbe
cmp
loope
mov
push
out
out
push
lea
dec
or
pop
idiv
mov
inc
mov
and
dec
rcrb
add
xchg
stos
aad
jg
ret
adc
push
mov
cmp
outsl
out
xchg
sub
mov
rolb
dec
add
data16
test
sub
repnz
push
dec
pop
add
add
out
cli
or
aaa
mov
lds
xchg
jne
shrl
push
loope
enter
mov
mov
lock
push
fisubl
nop
in
mov
out
push
xchg
enter
jbe
fmul
in
push
fistpl
stos
pop
adc
mov
inc
js
adc
cmp
int3
jns
xor
cmc
mov
xchg
fs
mov
neg
cli
into
nop
cmpsl
add
cli
mov
aaa
les
mov
imul
out
ss
loopne
out
push
and
adc
sub
adc
lcall
xchg
cmp
les
jge
push
add
mov
jmp
dec
jl
scas
sub
icebp
leave
add
out
sub
jns
lods
shlb
or
jle
das
aad
gs
lock
hlt
mov
pop
sarb
xchg
test
xlat
cli
adc
aam
sub
or
fwait
pop
cs
jo
cmp
adc
cmc
push
xchg
daa
pop
pusha
fsubrl
sub
sub
stos
fmul
fwait
rcl
shl
mov
je
out
mov
rcl
rcrl
jle
ljmp
xchg
pop
out
add
lret
sub
jge
mov
or
fldenv
push
mov
or
call
outsb
test
inc
jge
xchg
stc
or
adcl
dec
push
sbb
iret
or
sbb
mov
cld
mov
jge
mov
loope
jge
orb
std
add
ret
lods
fadd
mov
and
pop
lds
shrl
pop
sub
adc
iret
push
sub
je
push
xor
je
push
shlb
pop
and
stos
das
sbb
mov
mov
addr16
pop
jmp
je
push
outsb
cli
mov
mov
xchg
jl
mov
mov
cmpsl
and
mov
or
and
mov
mov
fld
fdivs
gs
aaa
ss
sub
imul
in
les
pop
pop
mov
push
mov
loope
pop
jecxz
mov
lret
pusha
mov
add
mov
out
aaa
and
test
jne
cmp
xor
call
sub
sbb
loopne
or
jae
in
pop
mov
loop
fldenv
sub
mov
xchg
add
lods
pop
cld
out
ja
aaa
jne
arpl
dec
sti
adc
cmp
outsb
mov
aaa
movl
inc
pop
inc
enter
cmc
mov
pop
mov
fildl
cld
cmpsb
inc
or
in
in
shrb
mov
ds
mov
push
push
pop
adc
sub
ret
sti
aaa
cltd
in
dec
mov
sub
sub
pop
cmpsb
xchg
push
dec
add
daa
scas
test
out
mov
xchg
aaa
xor
adc
int
jnp
jns
aaa
mov
mov
xchg
ret
rol
pop
pop
testb
scas
popf
adcl
bound
rolb
xor
mov
test
mov
or
push
mov
or
mov
xor
add
fcomp
in
xlat
stos
rolb
adc
push
pop
and
adc
jmp
adc
div
aad
mov
xchg
call
incl
scas
mov
dec
je
aam
fldenv
push
stos
sbb
fwait
lock
jecxz
pop
cmpsl
sbb
mov
dec
popa
lods
subl
lahf
mov
lds
dec
jmp
out
jne
ja
scas
push
cmp
insl
in
mov
mov
es
jne
hlt
adc
sub
ret
adc
pop
and
cmp
jns
es
xor
lods
or
les
mov
sbbb
and
mov
inc
pusha
adc
mov
xchg
addl
pop
mov
pusha
out
inc
test
xchg
in
ret
fsubl
or
xor
xchg
xor
mov
popa
popa
cmp
pushf
stc
push
and
jno
inc
mov
insb
pop
xor
aas
sbbl
imul
out
mov
sub
dec
add
outsb
push
adc
push
cltd
sub
repz
or
es
frstor
pushf
jge
movsb
pushl
xor
sbb
fdivp
or
mov
pop
xor
add
push
adc
xchg
or
adc
jmp
lret
imul
arpl
push
adc
pop
jmp
leave
xor
inc
push
fs
mov
pop
sub
xorl
jp
push
sbb
test
jle
daa
or
repnz
sub
in
pop
adc
clc
inc
sahf
mov
test
cmp
and
rorl
loope
cmp
jb
popf
mov
sub
jne
jecxz
incl
pop
push
pop
ds
add
push
hlt
mov
ds
xor
arpl
out
fstpt
adc
vcvtpd2psx
push
pop
cmp
and
and
mov
dec
adc
jns
adc
jbe
das
mov
push
mov
in
movsb
fnstenv
and
sbb
bswap
ja
in
push
and
test
pusha
stos
movsl
mov
or
movsl
cli
dec
sub
mov
int
pop
or
mov
xchg
add
mov
lock
cmp
sub
jp
cmp
sub
into
mov
rcr
leave
mov
adc
sti
insb
ja
mov
sub
xchg
movsl
ds
dec
and
xor
hlt
loopne,pn
pop
pushw
jmp
mov
imul
stos
mov
jo
and
add
cmp
mov
mov
xor
movsl
and
out
sti
mov
pop
pop
arpl
jbe,pt
leave
add
fs
mov
mov
fisttpll
mov
imul
or
test
mov
shl
mov
jne
push
and
sbb
mov
adc
test
pop
mov
cmpsl
mov
loope
gs
pop
div
mov
sbbb
in
pop
sbb
cli
subw
insl
xlat
andb
pop
cwtl
jo
mov
outsl
push
inc
in
outsl
dec
lds
je
push
adc
sub
mov
or
lcall
test
fsubs
mov
mov
jns
notb
jne
add
xor
fcoml
push
push
adc
mov
cmp
insl
adc
mov
jns
lret
lock
jmp
cmpsb
lret
decb
push
jl
adc
ja
jae
sbbb
xchg
data16
xchg
leave
jecxz
jnp
sbb
in
clc
out
dec
sbb
dec
ss
cwtl
xchg
xorb
mov
fsubrs
jp
ljmp
aaa
lods
scas
and
jbe
pop
int
sub
dec
push
xchg
sbb
cmpsb
add
out
pusha
lcall
mov
push
rcrb
clc
adc
xchg
mov
or
clc
push
pop
rcr
andb
mov
flds
nop
xchg
fs
jl
loop
je
mov
mov
gs
frstor
mov
jns
pop
aad
into
dec
xchg
aam
add
iret
xor
movl
cmpsb
stos
mov
rorl
mov
adc
mov
mov
push
mov
jbe
fucompp
or
cwtl
and
jb
pop
and
nop
stc
sbb
mov
and
fidivrs
push
cld
leave
xchg
cmc
out
xlat
aad
mov
and
sub
stos
pop
jb
and
setbe
sbb
or
cmp
icebp
push
rorl
push
movl
jl
lret
push
jb
jg
push
pop
lcall
mov
adc
jmp
push
push
pushf
aas
call
in
sbb
add
popa
data16
loop
sub
pop
cld
mov
jmp
cmp
notb
stc
push
xor
and
lahf
test
sub
fistps
dec
dec
ret
sub
iret
ret
test
data16
mov
or
mov
and
das
call
mov
fwait
mov
out
sbb
loop
sar
mov
roll
imul
xor
divl
xchg
sub
popf
mov
pop
not
mov
push
cmp
push
lds
shrb
ja
sahf
jne
popf
push
mov
jbe
movsb
ja
aaa
mov
out
out
aad
jnp
jno
into
mov
loope
mov
xor
pop
cmpsl
fisubs
push
sarb
fdivs
cmpl
popa
cltd
jle
mov
inc
adc
mov
movsb
cmp
pushw
jnp
mov
addr16
loope
and
fadds
jmp
loop
enter
push
xchg
lock
fldt
lods
imul
mov
adc
push
fsubs
push
inc
ja
out
enter
lds
enter
mov
adc
pop
leave
mov
pop
rep
pop
cwtl
int
ss
lea
dec
fdivrl
dec
mov
jae
call
xor
arpl
push
addr16
inc
sarl
loope
rcll
repz
mov
sub
mov
aad
cmpsl
imul
fmuls
aaa
lcall
cmpsl
outsb
dec
adc
stos
popa
sbb
mov
mov
adc
std
or
stos
insb
movsl
jo
mov
hlt
filds
or
stos
push
cwtl
xor
or
aam
and
call
cmpsl
add
dec
mov
stc
je
sbb
imul
fs
cwtl
movsb
mov
pop
cld
jns
loop
xchg
je
sti
xchg
inc
pop
enter
xor
dec
aam
movsl
daa
imul
mov
xchg
mov
les
dec
inc
aas
mov
mov
xchg
mov
lcall
jae
sti
mov
addr16
jae
sub
test
mov
mov
dec
sbb
push
sbbl
xchg
pop
xor
adc
incl
inc
and
xchg
lods
pop
ffree
push
repz
mul
fisubs
cmc
sbb
lds
pop
xor
cli
inc
dec
loop
stos
jg
lahf
push
cltd
inc
and
orb
mov
mov
stos
mov
adc
dec
fimull
lods
inc
repnz
lods
xchg
dec
xchg
add
cmp
enter
dec
mov
aaa
subb
test
sbb
sti
pop
or
xor
inc
cmp
jge
mov
daa
cmp
sub
daa
xor
mov
xchg
out
out
fisubrs
gs
cld
insl
cli
lcall
jno
xchg
xchg
mov
push
xchg
addr16
sbb
sbb
lods
push
icebp
jle
ret
ret
pop
adc
lea
jp
mov
jbe
xor
adc
loopne
xchg
jp
jns
ja
stos
pop
push
int
xor
idivl
or
loope
xor
bound
das
add
test
test
out
aas
mov
test
lret
aam
aad
jne
ljmp
push
fimuls
mov
fcoms
cmp
add
mov
xlat
xchg
out
mov
lret
pop
hlt
push
test
add
add
stos
push
or
test
cmp
outsl
jnp
loopne
pop
repnz
pop
dec
stos
repnz
movsl
xor
sarl
sub
nop
cmp
in
fsts
push
test
outsl
adc
xor
jbe
sti
sarb
pop
aaa
dec
fwait
adc
loop
sbb
jae
xor
pop
loope
inc
inc
and
in
out
and
lret
and
js
mov
loopne
and
push
cmp
in
fbstp
pushl
xchg
dec
dec
add
rep
cs
jo
ds
push
xchg
ret
adc
in
pop
xchg
ret
add
je
cbtw
sub
in
ret
mov
sub
daa
lcall
xchg
sti
or
push
cmp
outsb
jmp
leave
mov
fbstp
popf
push
jbe
inc
pop
mov
pop
ss
clc
pop
pop
out
sahf
outsl
jl
stc
movsl
sbb
scas
mov
add
stos
lcall
mov
lahf
xchg
pop
lods
call
loope
mov
jg
test
xchg
fistl
xchg
xor
test
scas
dec
jecxz
stos
sub
aaa
mov
insb
fstpl
push
mov
es
loope
mov
fwait
mov
and
ja
gs
mov
add
inc
add
lret
adc
jge
fsubs
test
xchg
pop
lods
mov
dec
addl
xchg
out
ds
jnp
add
cmp
sbb
lea
imul
lock
mov
add
stos
sahf
ds
outsl
add
movsb
push
inc
fwait
and
pop
push
test
shll
ret
cltd
js
xchg
cmp
dec
lods
sub
adc
dec
cmp
sbb
imul
dec
dec
add
int
cmc
inc
or
jecxz
sub
sbb
sarl
mov
es
and
adc
push
cs
int3
push
and
test
jne
adc
int3
dec
cltd
or
and
xchg
adc
les
aam
rorb
and
iret
ret
test
xchg
cwtl
sar
add
ret
cwtl
mov
pop
add
mov
and
loop
dec
das
pop
sub
inc
pop
enter
data16
add
cmp
cwtl
add
lods
data16
mov
sarb
imull
cmp
je
into
jae
in
mov
in
push
jl
mov
cmp
inc
insb
pop
adc
data16
scas
cmp
push
out
mov
fdivrl
dec
scas
aad
das
insb
xchg
loop
cmp
fs
insb
pushf
repz
gs
xlat
daa
mov
imul
adc
cli
rorl
cmp
aaa
sub
adc
push
aad
nop
repz
add
mov
in
fidivs
lret
push
nop
repnz
cli
sub
add
repnz
cwtl
mov
add
stos
xor
xor
leave
dec
jb
jmp
and
push
mov
cmpl
outsl
hlt
outsb
xor
jl
adc
xchg
mov
xchg
mov
pop
cmp
mov
test
andl
sahf
jecxz
sbb
xor
mov
pop
inc
adc
test
data16
imul
or
or
and
add
jle
lret
pop
lock
scas
jae
inc
insb
push
mov
pop
pop
aam
or
mov
lcall
pop
sbb
dec
popf
pop
jo
int3
jmp
add
cmp
in
lret
inc
test
dec
push
jo
daa
jno
dec
xor
in
dec
or
mov
sub
fadd
repz
in
jp
push
insb
push
xor
pop
push
repz
inc
ret
cmp
pop
push
gs
mov
aad
insb
fcomp
movsl
push
aad
inc
sbb
pop
sbb
add
pop
xchg
repz
inc
out
mov
test
loop
sbb
push
xor
ss
mov
lods
sti
ficomps
imul
imul
jg
test
shrl
rcr
push
mov
inc
inc
in
movsl
push
loopne
mov
movsl
ficoms
lds
movsb
ret
and
in
and
adc
push
push
aaa
aam
outsb
xor
mov
stos
dec
sub
pushf
pop
mov
pop
mov
cmp
xchg
push
add
push
jno
xor
pop
adc
ds
pop
rcll
cmp
mov
insb
into
dec
shlb
xor
push
gs
pop
repz
imul
test
mov
sbb
pusha
outsb
in
xorb
mov
xchg
aam
movsb
out
repz
or
mov
add
mov
or
lods
fldl
jne
xchg
push
inc
adc
mov
call
dec
cld
dec
mov
jns
pop
mov
push
stos
loope
call
xlat
pop
mov
cmp
testb
icebp
hlt
adc
xchg
ss
and
sti
inc
int
outsl
ret
xchg
out
pop
push
mov
pop
adc
inc
mov
aam
jmp
pop
pop
or
movsb
out
mov
inc
dec
adcl
cmp
mov
mov
fisttps
into
andl
bound
jecxz
mov
add
cwtl
add
scas
sub
ficomps
xchg
pop
rcrl
add
test
add
pop
cmp
popf
cmp
mov
hlt
and
int3
fisubl
scas
lret
xor
xchg
mov
sti
std
sub
hlt
mov
mov
jp
or
les
add
mov
pop
popf
popl
or
lods
fstpt
mov
lret
xchg
pop
and
cmp
adc
push
dec
mov
cmp
cli
icebp
jb
scas
aad
pop
or
sti
and
push
xlat
push
sbb
push
jae
pop
and
jbe
pop
flds
push
imulb
scas
push
das
or
ds
int3
shll
or
repnz
mov
xor
aas
adc
fwait
jp
sti
mov
andl
mov
js
mov
out
cmpsb
push
fwait
sbb
stos
inc
and
pop
inc
mov
test
dec
popf
mov
scas
das
push
and
test
adc
daa
repnz
into
into
outsl
out
xor
sub
lret
add
adc
jl
and
rol
jnp
rcr
std
das
push
sahf
push
nop
rorl
cmp
ret
push
sbb
cmp
jle
mov
insl
or
shl
loopne
icebp
pop
cmpsl
adc
xlat
mov
or
mov
out
xchg
fidivl
add
mov
or
ljmp
mov
mov
popf
movsl
sbb
mov
push
xlat
sub
sub
and
sahf
test
or
loope
fcmovnbe
jns
jae
inc
shll
int3
loope
adc
out
push
pusha
lock
test
fidivrl
jbe
mov
sti
sbb
jecxz
movsb
sbb
add
and
mov
mov
mov
shll
push
ret
cld
lcall
xor
inc
dec
add
repz
imul
or
mov
sti
cmc
sub
jl
movsb
pop
arpl
sub
out
mov
and
or
or
jb
jle
mov
jp
jle
es
push
push
inc
push
pop
pop
repz
mov
mov
mov
movsb
pushf
pop
inc
adc
jge
lret
jmp
jnp
in
lcall
mov
lea
push
dec
cmc
in
shrb
push
push
mov
aaa
out
adc
sbb
cli
jl
xlat
bound
out
cmc
xor
xlat
stos
and
into
jmp
mov
stc
lret
jge
inc
xor
shlb
jns
ljmp
push
mov
ficompl
andb
out
mov
leave
mov
fisttpl
stos
cmp
or
cmp
mov
sub
addl
fisubrs
hlt
xchg
xchg
loop
loope
iret
jp
jb
dec
jns
and
mov
mov
shl
popf
ss
pop
push
mov
jne
cld
adc
mov
imul
mov
adc
lcall
dec
cmovns
mov
xchg
iret
test
enter
mov
xchg
jbe
or
sub
lods
jmp
or
cmpsb
cmp
sub
jge
xchg
fimull
icebp
jge
adc
enter
repz
inc
jnp
push
ret
cmp
xor
and
xor
sbb
fadds
pop
jp
mov
or
nop
movsl
test
ret
xchg
or
cmp
mov
or
jl
dec
les
leave
add
cmpsl
mov
lea
adc
adc
fbstp
pusha
mov
movsb
repz
ficompl
jp
jle
inc
push
mov
stos
cmp
sub
ds
and
aad
jbe
jae
pop
in
movsl
ret
cmp
and
mov
mov
dec
cltd
test
outsl
scas
add
not
insl
mov
iret
cwtl
mov
xchg
xor
mov
and
lock
sbb
jno
mov
and
aas
xor
mov
xor
adc
lds
mov
loopne
fcompl
cmp
out
pop
mov
push
fistps
ds
les
jg
fs
std
add
dec
not
jne
bound
and
mov
push
repnz
sti
pop
pop
lret
ret
aad
jae
sub
and
push
pop
and
xchg
ret
cmp
add
repz
test
push
mov
sbb
mov
mov
jbe
imul
les
mov
in
insl
add
dec
ljmp
ret
cmp
adc
xchg
stos
push
cs
sub
rclb
sub
add
addr16
cld
jecxz
outsb
and
pop
mov
or
cmp
mov
mov
sbb
jg
test
sbbl
jne
xchg
ss
pop
mov
outsb
aaa
mov
sti
ret
cmp
push
std
sbb
and
xor
sub
xor
dec
mov
mov
test
imul
lret
sub
or
jl
push
addps
xchg
jecxz
subb
pop
pop
or
sub
mov
mov
xchg
and
adc
and
sahf
jp
jp
out
aam
jno
mov
xchg
jns
jmp
bound
xlat
cmp
in
imul
add
inc
mov
fildl
lea
in
sbb
cs
fimuls
lcall
dec
stos
notl
push
arpl
push
sbb
sbb
negl
jmp
leave
push
mov
cmpsb
dec
dec
sbb
or
pop
ret
or
loopne
inc
mov
bound
in
pop
xchg
and
cs
mov
mov
data16
icebp
ja
push
hlt
dec
outsb
gs
mov
push
add
push
ktestw
arpl
xor
loop
shrb
in
jbe
fnsave
xor
mov
data16
jmp
cli
jle
xchg
add
inc
lods
and
pop
push
mov
rcll
inc
js
hlt
inc
push
push
mov
push
jl
daa
lock
inc
and
cmp
int
or
les
mov
mov
xor
push
or
dec
fsubl
jmp
adc
dec
pop
mov
stc
mov
pop
aad
xor
or
fdivrl
mov
mov
cmpsb
mov
mov
popa
fwait
lock
in
cmp
imul
icebp
loop
scas
cmp
adc
ficoml
add
jb
sbb
test
dec
jle
mov
in
popa
inc
addb
sub
push
add
ror
pop
cltd
pushf
sub
pop
ficoml
into
sbb
pushf
jp
loope
mov
mov
xor
and
mov
jae
lahf
sub
aaa
add
lods
push
adc
fadd
in
mov
test
mov
ss
in
leave
in
cmp
add
jbe
mov
clc
push
into
out
jne
push
dec
xchg
sbb
sbb
xchg
pop
sub
jle
ljmp
int3
adc
adc
scas
dec
jno
in
mov
mov
mov
xchg
push
in
adc
int3
jb
dec
sahf
pop
and
fisttps
test
xlat
jg
pop
cmpb
push
in
xor
fisttps
sti
sub
push
jle
scas
sbb
cmp
rcrb
cmc
fadd
sbb
repz
rorl
sahf
mov
jbe
mov
idiv
add
idivb
xchg
sti
jo
ficompl
rcl
mov
push
cmp
pop
scas
fisttpll
mov
test
popa
push
lods
scas
inc
fnstcw
loopne
daa
jns
jmp
leave
mov
pop
fbstp
cmp
out
mov
pop
mov
out
jp
out
add
stos
stc
jmp
fidivrl
insl
icebp
xor
or
pop
mov
xchg
or
mov
cs
xchg
fildl
test
imul
neg
lcall
jp
sti
push
cltd
inc
pop
outsb
mov
and
push
cmp
repz
addr16
lcall
lahf
mov
fs
iret
mov
mov
mov
push
ss
xor
sbb
fs
lret
jno
dec
pop
cmp
fistps
jo
cmp
mov
bt
ss
or
sbb
jno
inc
repz
clc
sbb
push
xor
dec
dec
imul
popa
dec
stc
pop
cmp
mov
push
int
jo
mov
push
cmp
and
xor
pusha
add
or
lahf
jo
xor
shlb
xchg
int
leave
push
lcall
shl
ljmp
icebp
shrb
gs
out
sbbb
mov
mov
data16
enter
dec
mov
xor
rcll
enter
mov
push
or
jl
out
or
popf
or
aad
stc
sub
sbb
outsb
les
outsl
mov
jo
cmp
in
aas
xor
jp
add
pop
xchg
inc
lahf
lcall
and
data16
pop
inc
mov
test
jg
int3
and
and
data16
dec
mov
call
dec
orb
out
insb
xchg
imul
imul
test
sub
cld
je
loop
cmpsb
fcomi
xchg
sarb
lods
cmpsl
mov
or
xorl
dec
iret
dec
bound
std
cmp
sarl
cwtl
fld
and
adc
das
jp
repz
cwtl
and
jne
insl
cmpsb
test
mov
xor
adc
popf
push
fisubs
les
adc
dec
jno
push
or
mov
ja
subl
xor
lea
jbe
leave
push
cmp
add
xchg
cld
int3
mov
aas
sbb
in
test
xor
xor
jg
lahf
out
andb
imul
stos
cwtl
cmp
scas
jns
jne
push
or
stos
mov
mov
dec
add
cmp
xchg
add
out
xor
in
xor
jle
xchg
push
sti
outsl
cmp
sahf
idiv
repz
xchg
in
insl
or
xor
testb
call
mov
pop
outsb
sub
sub
fistps
std
push
cmp
and
notb
scas
setbe
cli
paddsb
mov
scas
fnstcw
mov
or
sbb
jb
in
movsl
mov
cli
cld
inc
add
pop
rcll
mov
loop
cmp
lcall
or
xchg
mov
negl
xchg
cmpsb
push
add
jecxz
outsb
ficomps
cs
ret
push
sti
movsl
dec
sub
and
aas
mov
shrb
cld
rcr
sahf
bound
jb
sbb
push
jle
ret
xor
or
cmc
dec
sub
pop
movsl
int
lahf
out
inc
xor
jmp
push
mov
clc
int3
mov
lret
dec
rorl
call
cmp
inc
es
clc
movsb
lds
add
adc
jmp
add
push
push
std
dec
hlt
mov
fwait
push
repz
mov
pop
fnstcw
pop
ret
xchg
addr16
in
adc
jns
call
filds
fs
sub
and
loop
nop
and
iret
lea
dec
jbe
jg
addr16
xchg
xchg
mov
xchg
jno
iret
not
sub
xlat
sahf
mov
aam
mov
loop
fmul
cld
cli
scas
sbb
adc
mov
icebp
or
clc
jo
jbe
inc
inc
ret
pop
fcmovnbe
das
mov
clc
ds
out
mov
mov
andl
and
sub
das
test
out
idivb
push
roll
adc
sub
je
xchg
jne
adc
stc
xorl
inc
stos
mov
ds
in
push
enter
notb
mov
push
stos
shrb
jno
scas
xchg
mov
lock
mov
fistps
push
clc
int
sahf
mov
hlt
mov
subl
xchg
daa
aas
out
cmp
fstps
adc
aam
push
jno
aas
daa
and
lea
mov
xor
popa
mov
and
inc
push
stos
in
and
and
icebp
mov
mov
mov
rorl
ret
lds
mov
inc
dec
dec
xor
jo
pop
cmpsb
lcall
sbb
and
sub
repz
push
js
dec
es
outsb
mov
pop
xor
mov
rcrl
dec
ror
jp
aad
adc
loopne
pop
sbb
cmp
jno
in
or
pusha
faddl
das
mov
sahf
int3
or
add
fldcw
shrl
movsl
int
cmp
fimull
xchg
and
mov
mov
ret
or
inc
and
xlat
into
sbb
inc
movsl
lods
mov
icebp
outsl
int3
lods
ljmp
adc
xor
cs
mov
in
std
inc
inc
stc
pop
insb
fwait
ss
or
movsl
pop
cmpsb
add
aas
adc
in
xchg
dec
test
xchg
pop
sti
xchg
dec
test
sbb
ja
xchg
imul
call
loop
daa
inc
rcrb
jle
mov
loopne
fisubs
fisubl
push
jne
dec
and
push
mov
sbb
xor
xchg
mov
leave
dec
js
scas
gs
push
roll
adc
cvttps2pi
std
rol
outsl
pop
lods
sbb
sbbb
repnz
mov
adc
lock
or
sub
add
or
sub
mov
mov
iret
std
push
cltd
outsl
mov
xchg
ret
jo
outsl
aaa
xor
pop
cmp
clc
pop
mov
shlb
lret
cmpsl
push
lahf
xlat
push
daa
lret
shlb
jecxz
scas
rcll
loope
dec
incl
movsl
sti
or
cmp
pop
mov
es
add
aaa
shlb
pushf
das
js
inc
mov
push
mov
ret
cmc
sbbl
mov
jno
or
bound
int
mov
ja
inc
jno
shrl
mov
mov
lahf
add
out
lcall
clc
and
insl
sub
dec
lods
pop
ja
in
pextrw
xor
nop
cmc
cmp
mov
aaa
sbb
loop
cmp
shll
jae
daa
ss
fstl
testb
xchg
lock
xor
sti
icebp
adc
shl
faddl
test
cmc
movsl
lods
sbb
push
sti
lock
insl
inc
mov
jne
mov
adc
movsl
push
jp
cmp
jb
xor
je
in
shrl
sub
fs
ret
xlat
sub
jle
vpand
jno
pop
das
cmp
jmp
mov
push
jge
hlt
popa
lcall
insb
fwait
push
stc
out
and
mov
sbb
sbb
sysret
shrl
mov
aad
cmp
js
jp
shl
ljmp
mov
dec
inc
cmp
pop
push
cmpsb
jp
lods
lods
lret
jae
xchg
or
cmp
xchg
fcmove
cmpsl
or
fidivrs
repnz
xchg
xchg
int
add
and
movsb
insl
es
mov
cld
fldenv
je
sahf
out
insl
mov
js
je
pushf
hlt
jne
inc
mov
adc
push
cltd
mov
movsb
jp
jge
js
jl
cmpsb
pushf
popf
cs
jecxz
cmp
movsl
ja
sub
pop
out
and
aaa
fadds
pop
or
leave
pop
ljmp
jno
sbb
cmpsl
insl
loopne
mov
cmp
jae
add
jl
sub
push
shrl
adc
mov
mov
sub
fld
or
daa
mov
hlt
mov
xor
fcomps
aam
in
inc
in
pop
jle
in
call
ficoml
xchg
push
es
outsb
lods
pop
or
pop
jg
cld
repz
lods
mov
nop
push
in
test
mov
lcall
mov
cmp
cwtl
adc
popf
pop
in
xchg
divb
es
sub
add
lret
cmp
lock
test
mov
jnp
jne
cs
and
aas
push
inc
clc
arpl
call
inc
pop
jle
mov
in
jmp
mov
in
and
shlb
out
fnstcw
in
xorl
fbstp
rcr
push
pop
das
je
fwait
mov
mov
sbb
mov
in
dec
fwait
and
sbb
xchg
adc
mov
or
jae
rcrl
outsl
es
or
pop
xchg
pop
movb
mov
stos
fadd
mov
test
or
lods
or
in
push
aad
and
adc
xor
jp
cmp
cs
jne
jge
xchg
iret
inc
loope
add
fdivrs
push
jecxz
jnp
xchg
mov
add
cmp
or
xchg
clc
ss
in
and
ds
sub
dec
pop
loopne
subps
jmp
mov
leave
sarl
push
rcl
jge
ret
cmp
fists
cmpsl
sti
int3
or
push
mov
adc
faddl
pop
pop
pop
imul
xlat
push
sbb
jns
sbb
mov
sub
ljmp
xor
jge
add
int3
sub
and
mov
ret
jle
xchg
adc
call
dec
cli
cld
xchg
pop
sahf
mov
dec
add
pop
hlt
jl
adc
outsb
or
out
mov
iret
add
das
lock
fisttps
xchg
pop
outsb
sbb
xchg
pop
jns
lahf
push
mov
ret
pusha
iret
lods
out
mov
ja
pop
pop
loopne
ljmp
adc
mov
jmp
sahf
cmpsl
inc
jo
mov
jmp
call
fists
ss
dec
fsubrs
xor
pop
jnp
mov
outsb
or
adc
cmp
lods
repz
or
and
arpl
stc
imul
pop
lcall
les
jno
fsubrl
add
loopne
movsb
repnz
iret
subb
mov
or
push
in
popa
fstpl
push
pop
pop
bound
js
imul
jecxz
stos
push
add
ljmp
test
into
mov
inc
stos
xor
xchg
mov
mov
or
and
mov
xor
and
das
sti
jns
lea
mov
mov
fwait
xor
das
push
cltd
push
ja
rolb
test
push
fisubrl
mov
add
cmpsl
data16
mov
lret
loop
pop
sbb
or
js
das
push
lods
into
gs
out
mov
push
cltd
cmc
cmp
sbb
xor
sbb
mov
inc
scas
fstpt
sbb
dec
cwtl
sarl
adc
insb
cmp
scas
xchg
mov
sbb
sar
aam
push
jg
mov
pop
stos
pop
xor
insb
js
mov
or
xor
mov
and
ljmp
mov
in
jp
mov
xchg
fistpl
sub
pop
sbb
mov
push
loopne
mov
outsb
pop
push
cmpsb
imul
adc
mov
scas
sbb
pusha
insb
out
sbb
mov
xlat
xchg
sbbl
and
ja
repnz
mov
cld
daa
rcrb
popa
outsl
push
cmp
outsb
push
jnp
pop
es
xchg
out
xchg
sub
or
jmp
xchg
add
je
shlb
loope,pt
xor
inc
and
scas
das
sub
add
outsl
push
adc
or
dec
jns
movsl
roll
push
out
xchg
adc
aaa
jnp
dec
xchg
inc
out
test
jae
out
lahf
cmp
ds
mov
leave
xchg
push
sub
xor
sub
mov
in
nop
sbb
push
shrl
les
sub
loop
sub
add
and
gs
dec
in
mov
sbb
xchg
mov
add
shrl
xchg
incb
lods
push
dec
jns
xchg
addl
xor
gs
test
jb
sbb
sub
lods
push
pop
lcall
jecxz
mov
and
idiv
hlt
arpl
fs
inc
outsl
scas
loope
xchg
divb
mov
xchg
mov
outsb
or
pop
xchg
aaa
jbe
xchg
int3
daa
popf
repz
dec
inc
pop
mov
out
mov
and
or
and
sub
dec
or
gs
lahf
dec
lods
sbb
repnz
mov
lea
sbb
fsts
pushf
rcrl
cld
sbb
gs
sbb
push
lcall
dec
lods
xor
inc
jp
das
fcmovb
into
xor
inc
nop
push
inc
sbb
pop
fisubs
mov
push
and
inc
mov
stos
outsl
cmp
xchg
push
xor
insl
andb
test
movsb
mov
lock
push
and
pop
lock
dec
add
lea
adc
adc
and
mov
mov
jns
cltd
jmp
jecxz
hlt
icebp
bnd
mov
jmp
outsl
icebp
cmpsb
mov
addr16
xchg
fs
int
add
scas
cli
outsl
icebp
cmp
push
xor
mov
and
lods
arpl
pop
daa
jnp
out
xchg
js
mov
mov
gs
std
jge
adc
fisubl
pusha
pop
xchg
mov
sbb
push
pop
and
jmp
xchg
xor
mov
int3
ljmp
pusha
and
add
les
cli
scas
imul
in
jae
dec
mov
adcb
lahf
mov
mov
push
popf
not
ljmp
cli
les
enter
and
mov
and
mov
lret
mov
test
ud1
mov
sub
or
imul
cltd
ss
jp
push
lods
inc
repnz
cmp
aad
call
imul
inc
test
mul
fdivl
mov
aad
int
xor
xor
arpl
nop
jbe
and
loop
nop
stc
aam
add
mov
test
cmpsl
xchg
add
pop
push
aad
ljmp
loope
jle
orb
push
loope
mov
and
xchg
dec
mov
pop
pushf
push
pop
push
mov
in
imul
pop
sub
xor
test
sahf
sbb
pop
out
loopne
mov
pop
adcl
pop
sti
and
sarl
inc
inc
sbb
lds
scas
iret
ret
and
movsb
test
jl
jmp
push
loopne
mov
cmp
jl
pop
dec
fistl
cmp
jge
xchg
in
inc
mov
add
mov
mov
inc
cmpsb
inc
jb
rcl
adc
js
xor
lods
or
mov
xchg
rol
inc
clc
push
leave
rcll
or
lds
dec
push
in
mov
fadds
test
dec
or
adc
into
or
pop
adc
out
sub
clc
test
mov
iret
xchg
xchg
mov
push
pop
aaa
or
sbb
or
inc
dec
loopne
sbb
mov
and
pop
sbbl
movsb
jp
push
sub
imul
test
inc
push
adc
push
mov
sub
es
mov
arpl
jns
loope
imull
popl
pop
frstor
cltd
jne
lret
add
mov
popa
lds
mov
outsb
cmpsl
push
push
adc
out
mov
cld
scas
out
or
jmp
xor
ret
add
adc
sbb
inc
inc
inc
sub
dec
xor
int
mov
cmp
adc
sti
pop
sahf
aas
dec
sub
mov
and
adc
ret
xchg
sub
addl
xor
ss
adc
inc
push
push
xor
xor
movl
push
pop
sub
jnp
mov
push
mov
inc
lcall
outsl
cli
xor
popa
mov
call
adc
test
sbb
jmp
sub
mov
pop
cld
jne
cld
push
inc
int
sub
xor
jp
sub
adc
filds
mov
mov
cmpsb
mov
addr16
stos
clc
inc
jb
or
mov
pop
leave
leave
sbb
pop
or
jno
sub
pop
xchg
movsl
lea
mov
into
scas
movsb
and
inc
mov
inc
jmp
inc
adc
push
xchg
mov
or
sbb
lret
int
dec
lret
mov
in
cmp
jecxz
and
mov
les
lods
jg
sub
add
ret
repz
mov
push
push
xchg
mov
fucom
loopne
mov
decl
sub
jno
mov
push
scas
inc
out
mov
lret
inc
ds
xor
arpl
jmp
push
pop
pop
in
test
pop
bound
mov
shll
das
mov
hlt
movsl
adc
data16
lods
das
imul
loopne
jns
add
stos
clc
fdivrl
dec
xor
and
stos
adc
mov
aas
popf
push
out
popa
sub
mov
jmp
in
sub
and
insl
test
mov
data16
jbe
xor
addr16
fnstcw
push
mov
fimull
sub
loope
sub
ljmp
mov
pop
lods
jns
mov
and
es
dec
dec
incl
push
sub
jns,pt
rolb
jp
mov
sahf
xchg
hlt
mov
outsl
xor
imul
mov
leave
leave
adc
sbb
and
neg
mov
gs
jns
or
notl
pop
mov
enter
jp
int3
inc
xor
lds
add
sar
ffree
xchg
addb
adc
mov
mov
mov
and
ja
stc
arpl
sbbb
or
xchg
scas
cld
out
or
inc
and
fstl
fs
fcompl
aam
mov
lock
inc
imul
and
xchg
shll
jge
mov
outsl
mov
cmpsl
sbb
jno
scas
add
cli
mov
push
inc
hlt
inc
arpl
jo
imul
es
mov
mov
in
and
adc
xchg
scas
and
and
push
or
ljmp
jo
cmp
pop
pushf
add
loope
xchg
test
mov
ja
cmp
lahf
mov
decl
and
inc
nop
mov
cmp
lret
jno
movsb
lock
jmp
xor
out
sub
cmpsb
call
les
nop
call
add
inc
xor
jg
and
xlat
nop
jns
pop
and
or
mov
push
fsubrs
negb
dec
push
mov
add
ret
and
adc
mov
jecxz
dec
cltd
popa
mov
out
scas
sub
push
cli
sub
in
sub
fsubrs
xor
mov
daa
mov
shlb
and
inc
xchg
pushf
sbb
cmpl
lahf
jbe
jns
pop
push
sbb
lods
and
cmpsl
insl
popa
add
jo
roll
dec
xchg
test
mov
loop
push
mov
adc
int3
xor
add
repz
adc
dec
sbb
pusha
mov
push
out
mov
inc
test
push
jg
dec
rcrb
jmp
cltd
xor
fs
inc
jp
adc
lahf
or
jmp
lcall
or
outsb
sbb
sbb
jnp
pop
leave
pop
xor
adc
dec
cld
loope
inc
mov
int
cmpsb
jge
outsb
xchg
or
and
out
push
cmp
repnz
push
mov
lods
xchg
or
xchg
leave
lret
scas
out
cld
stos
out
in
outsl
or
cmp
cmp
imul
mov
icebp
std
lods
movl
repnz
mov
add
inc
and
xor
pop
jae
push
inc
jns
ret
mov
xlat
dec
mov
inc
xorl
je
xchg
leave
push
xchg
movzwl
pop
or
mov
mov
ficoml
lods
fistpll
add
or
les
mov
inc
ficoml
sarb
sub
push
rolb
xor
add
add
nopl
lcall
fld
and
in
cmpsl
test
or
dec
jno
mov
fnstenv
adc
sbb
inc
outsb
adc
add
xchg
pop
cmpl
mov
loope
daa
fiadds
pusha
jnp
call
clc
sub
negl
push
fiadds
mov
nop
mov
outsl
shlb
mov
rcl
push
adc
push
add
dec
pop
outsb
push
xchg
dec
es
xor
pop
inc
pop
ss
xchg
xchg
xchg
lds
cwtl
ljmp
lods
hlt
xor
pop
cmp
icebp
push
scas
div
cmp
sbbl
mov
roll
push
lods
out
rcll
adc
call
dec
arpl
push
mov
stos
movsb
ss
mov
mov
mov
lods
loop
xchg
nop
push
sub
push
jecxz
add
mov
stos
jnp
sbb
and
inc
dec
dec
sbb
out
mov
jne
push
rcrb
dec
push
cs
loope
push
cmpsb
stos
jo
shll
repnz
fs
movsb
xchg
sub
out
fdivr
push
faddl
xchg
out
in
sub
mov
push
dec
popa
in
pop
pop
mov
mov
call
loop
orl
pop
jl
jno
cmpsb
cmc
insl
add
adc
jg
jbe
mov
cwtl
mov
lahf
aaa
jge
cmp
frstor
cltd
in
lcall
adc
lock
jno
sub
les
jne
aad
ja
adc
fnstenv
cmp
out
ljmp
test
push
sub
push
lock
or
adcl
sbbb
adc
gs
std
stos
fiadds
xchg
lahf
cmp
sbb
fwait
jecxz
add
shlb
frstor
jns
mov
xor
in
int3
cmpsl
adc
push
je
cmp
pop
jo
jnp
mov
push
sbb
pop
cld
test
dec
aam
lock
test
inc
fstps
loopne
jb
lock
add
push
sbb
call
repz
ret
and
popa
push
mov
pop
popa
mov
adc
fdivrs
dec
popa
adc
or
insb
mov
mov
sub
pop
dec
mov
icebp
ret
iret
xor
in
jno
mov
mov
mov
es
mov
pop
fldt
sub
gs
outsb
test
pop
scas
jo
xlat
ss
dec
mov
pop
pop
xor
div
xchg
xchg
xchg
outsb
jg
xchg
cmpsb
ffree
jo
cltd
in
xor
fidivl
aad
insb
daa
push
adc
stos
inc
pop
pop
popa
xchg
in
pop
jl
or
repz
lods
sbb
jecxz
scas
rcrb
movsl
in
mov
mov
mov
mov
mov
jbe
push
xchg
sbb
hlt
dec
insb
sub
cwtl
jge
movsl
mov
pop
out
ret
mov
ret
in
cmc
les
jno
jg
aad
mov
cmp
cmp
daa
mov
xchg
add
xor
cmp
aad
rorb
inc
les
neg
dec
or
jmp
leave
stos
sub
xchg
into
xchg
pop
mov
cli
sub
aas
ss
mov
arpl
lahf
and
adcb
push
js
push
rclb
rcr
lea
dec
xchg
mov
mov
jg
rcrb
cmpl
xor
sbb
test
jns
mov
cld
or
cmc
rorl
adc
repnz
scas
imul
popf
mov
in
int3
dec
mov
mov
into
dec
xlat
loop
mov
push
shll
inc
movsl
push
jmp
cli
jg
out
shll
arpl
sbb
sbb
xor
icebp
jno
pinsrw
pop
sub
jp
inc
jae
add
fxch
push
xchg
or
cmp
in
sbb
mov
mov
xor
ja
stc
sar
mov
popf
pop
push
sub
sbb
movsb
jne
scas
xchg
fwait
sbb
into
loop
pushl
inc
dec
xchg
iret
jnp
pop
xchg
in
mov
sub
jae
push
sar
push
mov
or
sbb
mov
mov
movsb
outsb
xchg
test
shl
sbb
cmp
int3
sbb
insb
fldenv
or
loopne
mov
xchg
push
aas
aaa
bound
enter
mov
mulb
subl
fimull
dec
lock
xor
xchg
add
xor
push
in
mov
sub
loop
adc
mov
sub
test
cli
insb
lds
in
enter
shll
loop
jg
lret
stos
popf
movlhps
dec
popa
lods
mov
inc
test
mov
mov
mov
xchg
adc
push
xchg
xchg
mov
int
loope
pop
cli
cmp
and
xor
je
jne
adc
and
neg
xchg
xor
cmpsb
movaps
loope
xchg
add
or
das
inc
sbb
xchg
movsl
push
xor
popf
or
jmp
pop
push
test
ds
repz
jp
mov
ret
mov
mov
repz
mov
ret
push
xchg
lahf
rcrb
arpl
aad
dec
into
fwait
sbb
sbb
cmpsb
sbb
stos
stos
adc
mov
shlb
std
dec
incl
pop
mov
mov
cwtl
push
pop
movsb
stos
rolb
cmp
xor
fs
in
jp
enter
int
mov
mov
repnz
addr16
push
sub
mov
inc
and
fidivs
sub
adc
pushl
stos
mov
pop
stc
ret
add
mov
adc
cli
jecxz
add
or
xchg
xchg
mov
imul
sub
dec
push
fmuls
ret
xchg
fdivs
sahf
call
mov
fdivrp
add
cld
mov
pushf
sub
mov
jo
outsl
inc
sbb
jmp
xchg
xchg
lahf
cmc
insb
push
jg
sub
mov
inc
out
movsl
enter
mov
repz
dec
ss
push
mov
cmpsl
mov
insb
call
int3
ret
xor
pop
cmp
outsb
aad
rorl
idivl
bound
pop
push
inc
pop
sub
or
aas
xor
mov
jmp
jg
mov
faddp
and
push
cmp
mov
pop
inc
scas
jbe
push
scas
les
jo
xor
aas
outsl
jecxz
js
push
adc
xchg
pop
mov
jns
mov
adc
daa
imul
pushf
loope
mov
in
loope
in
jge
sbb
bound
mov
dec
iret
xchg
test
adc
adc
aaa
imul
xor
clc
cmp
pop
ja
mov
lea
test
inc
pop
jnp
jmp
lcall
jo
mov
push
push
push
mov
ja,pn
outsb
add
repz
fwait
arpl
jb
pop
fwait
pop
push
dec
sbb
xor
push
outsl
fwait
cmp
stc
test
ret
daa
xchg
mov
pop
cltd
roll
sbb
inc
mov
sbb
mov
sub
movsb
or
xor
jl
jle
jb
ret
sub
fnstenv
ljmp
clc
insb
push
int3
adc
inc
xor
sbb
dec
xor
cli
fldl
push
popa
xor
xor
dec
lret
insb
cmp
out
sbb
mov
or
jecxz
pop
call
pop
mov
adc
pop
or
out
pop
int
ret
cmpsl
sub
adc
cmc
cmp
inc
mov
popf
pushf
jmp
cmp
jne
add
cld
das
push
push
cwtl
pop
gs
test
sub
leave
or
fidivl
sbb
shll
ja
sub
in
js
xchg
xchg
stc
push
jbe
add
dec
jl
inc
adc
shlb
iret
add
mov
orl
jmp
outsb
push
out
jo
data16
push
int
imul
and
add
lea
fmuls
loopne
mov
outsl
sbb
cmp
sbb
sub
lret
int
cs
jecxz
pop
mov
mov
mov
jle
xlat
or
sub
and
xchg
aas
and
or
les
enter
test
or
and
jecxz
ds
pop
data16
dec
subb
dec
loope
xor
cmp
cmp
jge
leave
imul
cld
and
shrl
xor
mov
xchg
xor
mov
cs
vucomisd
xchg
xchg
sbb
test
adc
jmp
push
int3
jb
loop
enter
mov
add
pop
jno
movsl
lods
or
dec
aas
andl
ret
add
sti
mov
adc
pop
and
and
adc
jle
lds
adc
jns
pop
shlb
dec
inc
loope
outsb
jecxz
mov
hlt
push
add
cltd
xchg
popa
adc
sti
pop
fsub
dec
aas
insb
in
sub
push
adc
mov
sbb
add
out
sbb
mov
mov
push
stos
test
jnp
jmp
movsb
mov
orb
xor
push
xchg
xchg
and
lcall
push
ss
sbb
test
dec
stos
sbb
stos
fisttpll
sub
jmp
xchg
ja
cli
sbb
aaa
push
jmp
inc
sbb
push
lret
les
mov
cmpl
pop
jge
sub
fisubrl
xchg
pop
inc
and
lods
cs
out
out
jmp
mov
sbbb
das
dec
pop
xor
idivb
push
je
inc
test
xchg
std
mov
push
mov
popf
scas
dec
call
pop
adc
mov
aaa
inc
sub
mov
sub
mov
mov
iret
xchg
sbb
loope
scas
ss
out
rcrb
sbb
adc
and
test
dec
jns
push
js
inc
sub
or
mov
push
xorb
pop
adc
incl
push
jb
dec
addr16
sub
or
aas
movsl
sub
xor
push
repnz
mov
cmpsl
lret
mov
xchg
sarl
inc
subb
lock
cmpsb
cmp
push
adcl
adc
push
adc
aad
dec
cmpsb
pop
jge
xchg
inc
push
dec
lods
bound
mov
sbb
in
cmpsb
hlt
sti
sbb
sub
lea
rcrl
iret
add
and
pushf
inc
bt
movsl
xchg
xchg
jl
xor
call
xchg
or
mov
les
call
rorb
inc
cmp
push
pushf
scas
cmpsl
or
jae
outsl
test
xor
sti
push
sub
mov
int
cmp
xor
insl
insl
aad
in
arpl
rol
xchg
jnp
sub
loop
pop
aad
xor
push
sbb
and
fs
lret
pop
repz
bound
cmp
int3
cli
push
jp
push
mov
pop
ljmp
test
push
adc
sub
pop
idiv
xchg
jmp
pop
push
daa
jns
add
mov
dec
mov
lret
subb
inc
test
cli
int
add
int
neg
outsl
mov
push
in
rolb
push
sub
stos
jb
leave
mov
push
bound
pop
hlt
mov
xchg
pop
xchg
aas
push
movsl
mov
iret
xor
ds
mov
cltd
pop
inc
fistl
jne
dec
jge
fs
mov
jge
nop
dec
xchg
mov
mov
cmp
push
push
pop
add
daa
mov
adc
pop
gs
dec
add
aaa
or
mov
xchg
cmpb
jp
movsb
insb
lahf
enter
in
adc
mov
mov
add
fisttps
stc
test
xor
mov
push
scas
stc
pop
fsub
idivl
int3
sub
stc
in
push
adc
fisttpl
inc
jecxz
movsb
mov
mov
out
push
pop
mov
and
dec
add
scas
aaa
cmpsl
or
push
push
mov
imul
push
insl
imul
push
dec
and
arpl
and
push
into
mov
push
dec
lods
dec
sub
bound
mov
pop
rorl
inc
cs
dec
pushf
jg
sbb
mov
fcompl
xchg
xlat
pop
mul
mov
loope
lods
jp
test
scas
mov
mov
jae
ret
sahf
xor
push
adc
testl
sbb
and
cli
xchg
xor
jmp
lcall
mov
sbb
sti
cmpsl
or
push
addr16
jp
inc
in
adc
push
push
or
fnstenv
ja
xchg
jmp
std
push
gs
out
das
cmpsl
in
sub
sub
sub
xchg
push
push
add
dec
dec
icebp
push
cs
testl
adc
mov
sub
test
cld
orl
stc
gs
mov
xchg
push
daa
mov
sub
and
and
xor
mov
sarb
clc
int3
xchg
push
bound
cmp
and
jns
mov
mov
push
ret
leave
sbb
arpl
mov
fcmovu
stc
jns
sahf
xchg
out
dec
mov
mov
pusha
cmp
test
mov
clc
bound
lds
je
pop
sub
outsb
dec
xor
lahf
jg
fs
aas
test
das
mov
cmc
or
movsl
adc
movsb
sbb
xchg
inc
sub
in
repnz
test
xor
push
call
xchg
and
xor
mov
fsubs
into
and
mov
in
push
lock
nop
xor
dec
insl
jp
or
sbb
xor
aam
iret
into
mov
cmp
inc
call
icebp
jmp
add
jo
mov
dec
lret
int3
xchg
mov
mov
cmp
inc
ds
cli
aaa
nop
stc
dec
dec
sub
mov
mov
test
push
cmp
mov
xlat
and
mov
lret
mov
cltd
dec
mov
cmpsl
push
aas
pop
mov
pop
mov
xor
divl
pushf
push
mov
out
outsl
mov
and
xlat
std
xchg
call
mull
push
cmp
int
aam
movsl
push
jecxz
cltd
dec
cltd
xchg
xor
sub
adc
add
mov
mov
mov
xchg
pushf
jl
idivb
cmpsl
jp
inc
lea
add
inc
push
adc
pushf
mov
in
aad
lret
or
xchg
push
pop
push
mov
mov
push
cmp
cmp
std
jnp
outsb
inc
push
sbb
cmp
inc
rorl
inc
clc
push
mov
shll
leave
or
dec
and
mov
iret
dec
pusha
xchg
test
ds
pop
iret
in
lods
fistpll
enter
push
jecxz
mov
rcrl
ljmp
xor
mov
insl
push
aaa
xchg
push
insl
or
outsb
xchg
mov
mov
clc
push
jg
insl
sub
je
imul
inc
inc
flds
pop
outsl
xlat
jbe
rcr
stos
mov
popf
inc
jecxz
gs
sub
pop
cmp
rcrl
xlat
jb
loope
dec
adc
xchg
add
mov
aad
test
jns
sub
sbb
imul
ret
pop
shl
jae
adc
sub
push
dec
mov
repnz
dec
nop
sub
jns
fs
adc
jno
lock
push
pop
and
fldl
test
filds
lods
imul
imul
jae
aam
daa
xor
int3
jp
cmc
inc
pop
and
leave
fisubrl
push
cmpsl
mov
outsl
sarl
adc
repnz
inc
mov
leave
xor
xchg
test
mov
push
jo
outsb
in
lret
lahf
imul
push
fcoml
add
mov
filds
xchg
in
inc
mov
pop
andb
add
sbb
mov
or
int
jge
insb
inc
loop
insb
mov
ds
std
sub
clc
lods
cmp
loope
adc
pop
lods
jp
lret
push
loope
addr16
inc
pushf
repz
lods
cld
int
xchg
fidivrl
and
xchg
inc
rcll
or
push
push
inc
xor
mov
cltd
mov
push
rcr
mov
mov
pushf
add
cmp
push
cmp
enter
in
xor
push
movsl
cmp
sub
pop
cmpsl
in
mov
push
cli
mov
xor
mov
lods
out
push
mov
gs
add
dec
add
pop
and
xchg
fdivrl
test
jbe
push
and
add
int
pusha
mov
inc
inc
mov
dec
cmpsb
adc
jne
testl
jp
inc
add
frstor
pop
jno
stos
mov
rclb
lea
mov
lods
lock
inc
mov
cmpsb
xlat
loope
adc
jle
adc
cld
sub
mov
rep
stos
cli
je
popa
and
mov
sub
movsl
fldenv
push
les
mov
fmul
push
adc
mov
pushf
push
addr16
ret
ja
xor
rcll
mov
icebp
testl
in
mov
push
mov
mov
test
iret
sub
cmc
enter
inc
icebp
inc
and
sbb
adc
imul
adc
into
push
nop
pop
bound
adc
lcall
fiaddl
push
mov
mov
test
or
je
xchg
mov
inc
xlat
popf
mov
jno
push
faddl
pusha
mov
push
out
enter
test
lret
cwtl
fcompl
inc
mov
pop
lret
das
mov
xor
pop
xor
in
jae
xor
pushf
push
clc
les
mov
xlat
xchg
je
xchg
cmp
loopne
mov
xchg
inc
aam
out
dec
push
jl
lods
sahf
push
movsl
and
and
push
cld
and
outsb
push
mov
and
scas
or
sbb
pop
orl
adc
cmpb
scas
pop
jnp
decb
xchg
in
aam
int3
outsl
xchg
sbb
and
xlat
aas
dec
stos
push
push
jecxz
gs
roll
aaa
jge
jbe
jae
fptan
dec
inc
out
ret
inc
fs
iret
stc
push
sbb
xchg
mov
ds
or
daa
es
or
mov
jno
jbe
pop
jge
jl
andl
lds
cmp
mov
sub
leave
fcompl
subb
test
and
cmp
sti
sbb
fsubl
stc
jns
daa
cli
xor
xchg
sbb
jmp
loope
inc
xor
pop
idiv
iret
sbb
imul
repnz
dec
in
repz
xlat
pusha
push
test
cmpsb
xchg
in
enter
sub
inc
fucomi
and
xor
add
pop
cli
movsb
mov
imul
dec
in
int3
cmp
add
daa
xchg
ret
mov
mov
loopne
sbb
xor
jge
ss
xchg
leave
sub
andl
jbe
mov
mov
popf
faddl
lods
pop
arpl
out
mov
and
inc
cltd
fildl
xchg
sbb
add
fldl
xlat
and
out
pushf
insl
pop
lcall
or
popf
pop
dec
dec
and
test
jno
mov
lock
arpl
out
lret
push
in
pushw
lods
sbb
shl
flds
nop
cli
lcall
sbb
rcrl
ds
out
lret
adc
xchg
movsl
ret
ljmp
out
fsts
bound
jp
arpl
mov
cltd
sub
mov
lods
mov
or
push
clc
push
out
sbb
inc
andb
sahf
in
loopne
and
mov
clc
and
les
mov
loope
ss
jle
push
adc
inc
inc
or
sub
iret
sub
mov
mov
int
loopne
cs
lods
jo
mov
sub
mov
lcall
in
jnp
fiaddl
add
mov
push
rorl
jo
lahf
pop
lret
std
leave
call
repnz
mov
sub
dec
dec
int
dec
pusha
mov
push
hlt
adc
ret
push
and
mov
sbb
movsl
lea
cmp
mov
sbb
shrl
pop
xor
mov
scas
inc
sbb
rcl
lods
out
hlt
out
xorb
stc
rcll
js
push
hlt
add
jl
xchg
cmpsl
sbb
imul
mov
adc
dec
jo
sub
or
ror
out
and
add
sub
ja
and
popf
add
test
test
repz
add
inc
sbb
xor
push
jle
mov
xchg
aad
jno
and
fwait
and
dec
icebp
arpl
div
dec
or
div
loopne
xor
mov
packssdw
mov
insb
jp
roll
stos
add
sbb
mov
ds
dec
clc
mov
in
ret
in
fs
xor
testl
pop
out
jns
push
mov
ja
pop
sbb
jecxz
aas
inc
ds
js
mov
shrb
sti
cmpsb
les
push
xor
hlt
xchg
cli
test
pusha
inc
sbb
fidivl
dec
mov
push
sti
scas
jo
scas
dec
mov
pop
sti
dec
lods
xor
aas
fwait
mov
xor
cmpsl
mull
and
mov
dec
scas
andl
pop
xor
ret
lods
movsl
adc
mov
out
adc
push
sti
lds
stos
icebp
cld
or
mov
stc
lods
mov
stos
inc
push
pop
pop
pop
xor
jle
fwait
push
mov
shll
int
test
add
xchg
repnz
in
test
dec
mov
inc
jmp
test
jmp
lods
xchg
aas
sub
flds
loope
loope
dec
out
jg
or
xchg
roll
pop
bound
inc
jns
sub
test
push
sub
in
rcl
push
adc
mov
out
mov
adc
add
ror
xchg
arpl
test
adc
popa
sub
das
add
mov
xchg
testb
dec
flds
xor
push
xorb
add
and
fucomp
jno
cmc
cmp
xor
xchg
lcall
ficompl
inc
popf
mov
mov
cld
inc
mov
add
fsubp
jmp
jns
std
jle,pt
data16
inc
sahf
lds
std
imul
adc
lods
adc
dec
out
dec
inc
or
outsl
std
jle
xchg
push
or
lods
push
mov
pusha
sub
mov
jns
add
mov
pop
pop
mov
mov
push
ret
ret
scas
test
push
popf
add
das
cmp
cld
mov
lds
xor
push
repz
jne
in
lcall
jecxz
popf
dec
mov
repz
outsb
adc
insl
or
addb
push
push
cmp
dec
push
xor
lds
aaa
cwtl
dec
mov
lahf
jmp
sub
add
movsl
or
push
or
insl
dec
fwait
sbb
cmp
mov
xchg
out
gs
nop
lods
xchg
mov
mov
fsubs
mov
lds
fnstsw
pusha
call
jb
fst
push
mov
jl
call
jo
cmp
sub
jg
lret
xor
xchg
adc
mov
push
and
into
cmp
es
pop
push
ret
int3
mov
jl
dec
aaa
test
mov
ret
stos
test
loopne
xor
in
mov
out
jecxz
cmp
or
cmp
push
push
pop
das
enter
mov
xor
movsb
pushf
cwtl
lods
int
pop
add
mov
xchg
es
ja
fstpl
out
mov
sbb
divb
das
mov
push
push
jb
xor
icebp
dec
add
xchg
fwait
lds
data16
cmp
cld
and
push
mov
addr16
mov
dec
adc
sahf
hlt
jmp
dec
into
add
imul
mov
jns,pt
js
cmp
xchg
xchg
rorb
incl
mov
nop
imul
je
mov
je
pop
inc
dec
int3
adc
cmp
jb
push
and
push
lds
cwtl
mov
add
pop
jnp
repnz
insb
mov
xchg
xrelease
movsb
mov
mov
subl
pop
pop
fwait
int3
pushl
fwait
add
inc
es
popf
push
test
cmp
dec
sbb
mov
inc
in
pop
mov
pushf
fidivrs
test
add
ds
add
shrl
xor
push
pop
mov
std
xchg
cmp
mov
mov
sti
pusha
mov
sbb
aaa
mov
repnz
lods
icebp
cmp
or
repnz
mov
leave
subl
push
out
movsl
clc
pop
js
leave
dec
mov
scas
sub
into
jge
jbe
fstpl
pop
mov
pop
jecxz
pop
shrl
addr16
dec
or
mov
leave
mov
jmp
out
mov
decl
xor
mov
js
xchg
test
jnp
sbb
leave
flds
pop
xor
int
div
out
mov
stc
popf
push
cwtl
cmpsb
pop
jecxz
ss
dec
mov
rclb
add
dec
xchg
ret
jge
xor
lahf
fstpt
push
mov
out
roll
pop
outsb
ss
ss
pop
fmulp
sub
movsl
das
and
jae
and
insb
or
lcall
cmp
subb
push
rorl
insb
adc
xor
ret
push
std
inc
jnp
lcall
bswap
adc
aas
insb
push
popa
fucomip
sbb
inc
inc
push
outsl
jmp
xchg
cmc
jmp
movsb
xorb
pop
test
jae
cmp
xor
outsb
loop
lods
enter
jns
repz
ret
sti
sub
ds
popf
dec
push
xor
and
and
mov
fyl2x
daa
test
sbb
fsubs
adc
pop
pop
sbb
and
push
jnp
push
mov
mov
dec
imul
roll
or
mov
sbb
mov
pop
pop
push
mov
sbb
mov
pop
cltd
cltd
push
adc
xchg
in
mov
les
inc
stos
dec
or
xor
addr16
pop
sub
mov
mov
and
adc
push
cmp
mov
in
dec
imul
push
mov
or
call
cmp
cmp
add
enter
popa
iret
enter
sti
stos
lds
loopne
aad
mov
lcall
fwait
cmpl
in
adc
xlat
dec
cmpxchg
mov
xchg
dec
test
stos
ss
in
jo
inc
test
or
mov
or
movsl
mov
scas
fs
jo
adc
movl
repnz
fs
data16
daa
sbb
hlt
into
iret
mov
bswap
iret
push
call
push
enter
das
sahf
aad
mov
jns
lret
dec
mov
stos
jb
adc
or
movsb
fmulp
orb
daa
ds
lock
mov
or
sahf
pusha
addb
cld
adc
out
mov
push
push
jle
mov
outsb
and
adc
and
insl
add
adc
jo
jo
and
jb
inc
sub
cld
jo
mov
dec
ljmp
cmp
imul
decb
pop
push
mov
sti
mov
test
jne
and
outsb
mov
push
leave
or
stc
stos
iret
xchg
ja
fstl
jle
ss
xchg
pushl
sub
pop
inc
jbe
pop
mov
sarl
lret
add
lock
pop
xchg
jb
xchg
sarl
mov
push
sub
push
lock
dec
aam
jae
movsb
outsl
and
test
mov
cmpsl
jmp
imul
imul
rcrb
mov
and
cmp
cmp
cli
lret
xor
pop
mov
scas
adc
sbb
jbe
aad
jb
mov
sub
popa
sbb
fcmovu
test
mov
jge
ret
in
das
sub
bound
and
and
jp
sub
dec
mov
pop
lret
jp
pop
aas
push
or
dec
rcrl
idivb
dec
and
cmp
jl
popw
icebp
sub
xchg
mov
add
lahf
cmp
fstpl
xor
loope
dec
push
push
adc
mov
push
mov
jg
cmpsb
xor
movsl
and
shll
or
testb
out
inc
test
insb
mov
pop
movsl
mov
cmp
je
icebp
arpl
push
pop
iret
aas
jmp
leave
or
xchg
xor
inc
inc
adc
pop
cmp
xchg
xchg
mov
sub
out
fistps
test
popf
cmpsl
sub
out
xchg
das
dec
popf
cmp
mov
jo
cmp
mov
mov
pop
lcall
add
aam
out
sub
fimull
out
pop
popf
jno
pop
jbe
ds
in
or
lahf
push
xchg
dec
xor
test
sub
das
xor
mov
sub
in
out
mov
dec
int
repz
mov
push
in
push
add
aad
adc
and
pop
dec
mov
hlt
jg
mov
cmp
cmpsb
pop
mov
mov
fdivrs
or
mov
lock
test
jne
popa
sub
push
pop
cmp
inc
inc
stos
xor
cs
mov
sarb
push
dec
mov
xor
ljmp
or
inc
fstpl
jne
mov
jno
jp
pushf
ja
push
sbb
cli
rorl
fcoml
cmpsl
lcall
fwait
jo
mov
fnstsw
pop
sti
jl
loop
leave
repnz
push
out
movsl
nop
pushf
pop
in
jp
jne
or
mov
xchg
mull
mov
sbb
pop
push
jae
mov
insl
cmp
xchg
mov
pop
jne
ljmp
fdivl
mov
test
cmpsb
rolb
dec
sub
out
lcall
adc
jl
lods
mov
sbb
shlb
push
in
sub
lods
jge
sub
iret
pop
out
aas
sahf
cmp
jbe
arpl
mov
mov
pop
rcr
mov
xchg
lret
outsb
mov
xlat
ja
pop
sub
test
imul
nop
test
sub
xchg
add
test
pop
xchg
imul
push
roll
push
mov
mov
pop
adc
mov
fsubs
xor
mov
lcall
mov
fmuls
arpl
cmpsl
mov
loope
ss
xorl
lahf
into
hlt
and
mov
mov
adcb
adc
nop
test
jp
aas
adc
jno
imul
jmp
and
fists
je
cld
cld
mov
mov
out
pop
clc
repz
cmpsl
mov
or
xor
cmp
sti
sti
cmp
push
mov
sub
sub
mov
mov
movsb
xchg
lret
jge
or
xchg
or
popf
dec
adc
sbb
sbb
jne
outsl
ret
pop
jle
xor
add
xchg
sahf
ret
jns
out
inc
sti
jo
cmpsb
stos
and
adc
das
mov
mov
push
pop
sbb
std
sub
push
push
sub
sub
repnz
xor
mov
cmp
fsubr
inc
adc
sti
call
js
ret
lret
jecxz
in
sub
js
push
or
ficompl
rcr
ret
mov
popl
mov
sbb
dec
mov
push
mov
aas
jbe
mov
sub
repz
jecxz
push
add
into
arpl
dec
pop
lea
daa
adc
lock
enter
enter
sub
fisubrs
cltd
jmp
jae
int
nop
in
ss
push
fmul
in
pop
or
mov
xor
cmpsb
aam
mov
loop,pn
mov
sub
xchg
mov
testl
div
jns
jbe
inc
and
imul
cmp
ss
mov
and
adc
push
and
pop
mov
mov
fnstsw
add
sbb
sti
jnp
xchg
stos
or
dec
dec
sub
adc
mov
lahf
xchg
sbb
push
inc
cmpsl
mov
fstl
xchg
jne
or
jle
cmpsl
lret
out
lea
jns
scas
test
or
bound
mov
xor
inc
std
ja
and
insb
sub
outsl
cmp
shlb
lods
test
mov
push
test
fs
ss
jecxz
aam
es
fs
or
lods
out
mov
mov
lret
sub
add
xor
pop
pop
pop
leave
loopne
mov
loopne
sti
or
fbstp
cwtl
xlat
clc
lcall
fsubrs
cli
fmuls
add
repz
int3
adc
sub
push
xchg
xor
dec
xor
sbb
adc
and
pusha
ret
mov
and
int
xchg
icebp
pop
mov
inc
lahf
mov
mov
push
push
insb
in
test
scas
sbb
imul
daa
sbb
jecxz
and
or
popf
pop
imul
popf
adc
xchg
push
ret
es
aam
and
and
or
shll
test
pop
mov
inc
fstpt
mov
push
int
adc
sbb
xor
cli
fstpl
or
out
add
cmpsl
leave
push
sub
jl
jmp
jbe
je
cld
dec
divl
xchg
adc
movsl
adc
sti
sub
into
js
das
and
imul
lea
movsl
loopne
dec
aaa
sub
leave
pop
mov
call
divb
cmp
jno
lods
dec
cmpsl
cmp
sti
and
in
xchg
popa
in
push
pop
cwtl
addr16
aad
pop
mov
out
popf
les
sbb
dec
lcall
mov
push
scas
add
cwtl
push
mov
out
push
ss
sub
jno
push
inc
pop
lahf
out
cmp
inc
inc
pop
gs
imul
cmp
lock
cmc
cmp
lcall
add
mov
push
sub
push
dec
mov
std
ret
add
lods
push
loope
lahf
adc
fsts
in
lahf
mov
ret
iret
or
jne
pop
arpl
push
int3
call
decl
mov
and
xor
lea
in
pop
cmp
mov
cmc
push
shlb
push
into
popa
rcr
inc
mov
rep
test
add
loopne
add
es
pop
add
pop
dec
insl
and
out
push
xchg
xchg
add
pushf
xlat
cmp
xchg
std
mov
cli
add
test
push
xor
into
fdivrl
dec
repnz
rcl
mov
scas
cltd
outsl
pop
mov
cmp
loope
add
mov
cmc
push
xor
call
fistps
mov
addr16
insl
jp
mov
icebp
or
lahf
outsl
mov
insl
inc
jp
lret
sub
stos
js
and
push
out
iret
rcrb
fiaddl
incl
pop
add
enter
loopne
stc
inc
mov
cmpb
mov
ret
sub
pop
popa
nop
jne
xlat
push
add
test
sbb
and
dec
out
add
loop
dec
ljmp
scas
aad
lret
xchg
jg
push
outsl
add
xchg
cld
sub
fs
jmp
sub
inc
adc
mov
xchg
jae
orb
sahf
sub
out
loop
mov
add
push
out
out
roll
adc
in
xchg
ss
xchg
pusha
mov
sti
out
aas
xor
neg
inc
popf
addr16
or
fwait
push
adc
in
sub
ficoms
cmp
dec
ret
sbb
call
mov
sub
insl
lods
fdivrs
popa
out
mov
sbb
dec
daa
in
mov
jno
test
and
ds
jns
pop
pusha
pop
pop
mov
sar
inc
mov
add
add
xchg
adc
leave
push
test
sbb
xchg
pop
dec
xchg
andb
jge
cmpsb
lods
fisubrl
xor
or
cmp
mov
aas
push
adcl
mov
in
cld
add
imul
bound
ja
pop
pop
push
out
sub
jmp
push
loope
std
inc
jb
out
mov
lcall
jge
xchg
popf
cld
xchg
test
sbb
or
inc
push
pushf
pop
int
dec
push
mov
xor
test
out
xchg
sbb
adc
xchg
mov
fisubl
xor
sbb
push
icebp
pop
jp
and
std
cmc
inc
mov
adc
or
and
hlt
movsb
test
and
fucomp
clc
sbb
pop
pop
pop
cmp
mov
imul
lds
mov
out
cltd
dec
lret
mov
jnp
nopl
dec
inc
cwtl
sub
pop
das
jne
mov
dec
and
fisttpll
lcall
mov
push
and
fs
arpl
popf
imul
adc
inc
test
sbb
loopne
mov
clc
mov
xchg
call
push
cmp
sbb
mov
adc
repz
cltd
stc
lods
mov
xchg
jmp
add
psrlq
out
sbb
js
mov
or
mov
inc
out
cwtl
push
mov
pop
lock
adc
cwtl
jecxz
push
jne
arpl
cmp
sahf
cmp
mov
xlat
cltd
jl
and
inc
sub
sbb
or
dec
mov
lock
fdivl
popa
push
mov
or
cmp
test
lods
adc
cmp
fxch
sbb
cltd
cli
loopne
xchg
stc
or
das
mov
cltd
adc
jle
test
mov
paddd
sbb
lcall
and
sub
add
jno
es
push
in
sub
dec
and
mov
push
dec
jo
pop
bound
loop
xchg
fistpl
daa
push
ret
icebp
leave
xor
and
shlb
cmp
cmp
jnp
int3
test
hlt
es
orl
imul
shll
daa
cmp
out
dec
ret
sbb
push
roll
sub
ret
xchg
stc
xchg
dec
mov
outsl
lods
or
int3
les
dec
sbb
mov
lds
aaa
mov
popa
rcr
in
rorb
scas
mov
adc
mov
out
popf
les
jp
ret
int
xor
xor
jbe
cmp
sbb
mov
sbb
jae
out
push
mov
push
fs
std
pop
xor
adc
mov
icebp
mov
jl
loope
pusha
jbe
push
aas
adc
imul
push
mov
mov
mov
repnz
push
jmp
addb
cmp
mov
in
jne
ja
das
pusha
ss
xor
aaa
cmpsb
adc
xchg
jns
add
and
cltd
addb
pusha
add
inc
mov
das
dec
cmp
cmp
sub
shl
fildll
test
push
sub
out
push
call
loope
cmp
push
cli
orl
leave
xor
sub
das
and
es
sti
push
sbb
das
out
addr16
nop
dec
sbb
jle
sti
sub
or
gs
fistpll
push
in
lahf
scas
sub
sub
out
shr
inc
lcall
xchg
sub
inc
sub
pop
dec
pop
push
gs
sub
fistpl
in
jl
fmull
adc
xor
jmp
mov
pop
dec
scas
push
lock
cmp
jg
xor
lock
sub
push
loop,pn
movsl
lods
mov
pop
inc
imul
add
xchg
dec
add
test
mov
pop
adc
pop
cmpl
lcall
repnz
call
out
das
push
out
adc
mov
adc
xchg
movsb
cmp
or
test
dec
mov
push
sahf
loopne
outsb
fwait
mov
cmp
or
shl
jo
push
leave
daa
mov
mov
cmp
into
inc
add
or
fistps
add
mov
mov
sbbl
dec
mov
jmp
jg
jae
xlat
fisttpll
pop
cld
les
cld
test
js
xchg
scas
xchg
sbbb
andl
mov
call
add
movsb
mov
mov
sysenter
or
sub
mov
out
in
imul
xor
pop
add
push
jo
inc
mov
xor
pop
push
sbb
loope
add
jle
dec
iret
mov
push
in
jnp
xchg
int3
jle
and
pop
add
inc
mov
daa
xchg
pusha
clc
pop
out
add
or
xor
xor
and
xchg
rorl
dec
fcmovb
inc
push
lock
mov
xchg
mov
enter
jae
popl
stos
in
sbb
jo
fwait
aad
stc
and
cmp
je
inc
inc
hlt
popf
lahf
adc
push
lret
out
scas
sub
cmc
sti
pusha
xor
adc
and
push
out
or
and
push
push
add
test
popf
jno
push
jg
test
mov
ret
inc
out
mov
xchg
jbe
out
loop
add
repnz
pop
push
jo
inc
andl
lea
cmp
cmp
mov
jmp
xlat
lds
jl
mov
xor
pushf
push
and
lods
mov
adc
mov
aad
or
shlb
push
scas
sub
shll
pop
popa
ret
fsubp
outsl
fcompl
pop
insl
shll
add
out
pushf
in
push
xor
insl
addr16
or
jnp
jnp
pop
inc
inc
xor
mov
inc
push
mov
inc
fisubl
shlb
xchg
pop
adc
rcl
mov
dec
popa
loopne
subb
imul
in
das
jp
sbb
int
xchg
fstp
and
sub
arpl
sub
jmp
jle
repnz
pop
xor
loopne
daa
xor
xchg
sbb
xchg
inc
imul
pushf
sbb
add
outsb
rep
gs
movsb
in
ror
jno
cmp
adc
ret
mov
inc
mov
push
xor
mov
jne
xor
mov
adc
adc
pop
dec
inc
xlat
jecxz
aaa
push
enter
jb
push
sbb
scas
jl
mov
sub
push
pop
adc
pop
aaa
in
mov
dec
pushl
sti
arpl
sub
je
loop
out
scas
lds
or
jg
adc
dec
fcoms
fsubrs
cmp
and
icebp
aaa
cmp
push
and
stos
fs
adc
out
popl
repnz
out
push
xchg
jno,pt
lcall
movsl
prefetch
or
or
mov
mov
and
dec
iret
cmpsl
mov
stos
icebp
out
jl
aad
mov
inc
out
push
std
push
movsl
jb
adc
mov
mov
push
repnz
or
int
mov
xor
pop
inc
ljmp
xchg
scas
cmp
ja
test
dec
clc
pop
add
mov
xchg
adc
mov
sbb
rorb
adc
push
arpl
test
push
mul
out
out
pop
rcr
inc
add
sub
pop
shll
in
lret
pusha
add
push
fs
icebp
daa
pop
or
mov
icebp
gs
pop
data16
lret
les
and
push
loop
xchg
ds
push
adc
adc
fldt
sti
and
adc
lea
xor
ja
aas
test
shrl
das
loop
add
mov
or
add
lret
dec
sbb
repnz
insb
cmp
push
add
cmp
add
sub
loop
mov
fmul
popa
jno
or
cmc
icebp
adc
sub
jmp
cmp
sbb
shrl
pushf
jp
mov
arpl
mov
cmp
cmp
cmp
add
and
pop
ljmp
negl
repz
xor
mov
cmpsl
adc
mov
aaa
pop
ds
repz
xor
adc
push
adc
add
mov
in
ret
into
inc
cmpl
sbb
sti
sbb
cmp
or
mov
rol
cmp
int
jb
mov
popa
add
arpl
xchg
adc
xchg
adc
adc
int3
mov
adc
test
iret
mov
jge
push
pop
add
add
dec
stos
scas
adc
xchg
dec
enter
mov
jp
push
mov
xor
loope
add
or
add
cmp
dec
enter
adc
stos
dec
sub
in
jo
push
or
push
lret
push
jb
insb
and
js
mov
std
adc
jae
cwtl
jno
xchg
inc
and
lock
mov
xorb
and
das
fucomi
jno
fildll
in
ljmp
cmc
loope
lea
mov
pop
or
push
xchg
mov
xchg
sub
pop
jmp
sbb
cli
add
outsl
xchg
test
cmpsl
or
xchg
xchg
ffree
insl
adcb
enter
add
sbb
lcall
pop
sub
sbb
cmp
sub
call
dec
sbb
jg
aas
flds
pop
pop
add
pop
repnz
sub
xchg
jnp
jnp
iret
inc
repnz
push
or
pop
mov
or
call
aad
popf
adc
sub
jns
inc
xchg
stos
or
aaa
int
mov
sub
fiaddl
insl
sub
add
clc
mov
rcl
push
add
jns
out
dec
cli
std
cli
test
fstpt
xor
inc
inc
lea
imul
adc
mull
hlt
and
sub
mov
pusha
aad
leave
ret
mov
std
cmpsl
xor
xor
xlat
inc
dec
add
or
mov
jecxz
pushf
lea
add
dec
dec
lcall
test
xor
enter
inc
inc
cmpsb
out
in
stc
sbb
faddp
sub
lahf
nop
xchg
int
xchg
push
adc
cltd
jae
or
sbb
dec
push
outsl
jnp
stos
movsl
cmp
cmpl
cltd
loop
xor
stos
daa
mov
fldt
jecxz
outsl
loopne
ret
sub
push
inc
orl
push
jbe
push
cld
mov
mov
test
test
scas
ret
push
adc
lahf
in
sub
xor
xchg
mov
out
xchg
fdivrl
enter
icebp
push
lret
jp
and
into
jae
inc
pop
dec
push
fstps
adc
sbb
fbstp
cmp
pop
sub
xlat
popa
adc
test
repnz
stos
xor
mov
inc
lea
jmp
mov
jo
imulb
sub
adc
jp
les
sub
test
lock
adc
pop
lret
int
push
fadd
ret
sbb
fcoms
dec
in
cmp
pop
xchg
push
dec
and
push
shrb
shrb
aaa
ja
popa
inc
jnp
mov
pop
push
int3
mov
test
mov
xor
jp
mov
dec
and
pusha
sbb
mov
mov
notb
inc
fimull
pop
out
bound
jle
and
in
xchg
cwtl
js
add
cld
mov
pop
dec
jne
in
mov
ret
fs
test
adc
into
les
fnstcw
dec
out
fs
push
and
mov
inc
dec
gs
popa
jecxz
add
je
cmp
pop
cmp
jl
sub
mov
mov
xchg
fildll
pop
in
cmc
js
call
mov
mov
clc
dec
or
insb
movsl
sahf
jno
and
pop
int
insb
int
jp
fdivr
pop
add
les
mov
cmp
add
mov
outsb
inc
or
repz
dec
in
sbb
test
push
das
ret
xchg
dec
idivb
xchg
loop
daa
sbb
xor
outsl
jp
and
mov
xchg
xchg
arpl
jmp
insl
addb
dec
sub
movsb
negl
mov
ja
imul
cltd
rcr
and
lahf
adc
out
in
push
adc
lods
push
jno
fdivs
in
or
addl
cmp
and
js
adc
sarl
repz
mov
lahf
hlt
dec
adc
add
or
inc
jp
pop
mov
jns
stc
sbb
sbb
mov
jp
push
pop
in
fwait
sub
fildll
xchg
lret
pop
xchg
cmpsb
dec
js
dec
inc
jp
mov
ss
lcall
or
dec
popf
rcr
cmp
clc
inc
orb
enter
mov
mov
jg
int
dec
sub
addl
out
ret
xchg
xlat
hlt
and
push
xlat
xchg
std
outsl
imul
hlt
repz
xchg
or
sub
dec
push
outsl
pop
jg
popa
ret
pop
xchg
fsubl
inc
es
dec
jp
iret
xchg
and
iret
addr16
or
test
cmp
inc
ja
lea
xlat
ds
pushf
data16
lock
mov
aam
lcall
stos
cwtl
and
sbb
movsb
add
jge
sbb
lock
loopne
push
add
std
lds
mov
enter
xor
fwait
jle
int3
jae
cmp
and
fcomip
dec
cwtl
mov
lcall
cmp
outsb
jno
mov
sahf
push
cmpsb
roll
or
mov
pop
in
xlat
out
xchg
pop
add
fmull
out
repz
cmpsb
xor
mov
dec
mov
fwait
pop
adc
or
and
loopne
xchg
mov
mov
popa
inc
push
adc
ss
imul
and
xorb
addr16
cltd
xor
and
xchg
test
daa
xor
leave
outsb
and
aas
mov
fs
sub
or
push
mov
imul
and
xchg
lea
push
xor
mov
mov
mov
jp
stos
mov
sbb
push
cmp
adc
out
shll
int
push
les
je
and
sub
xchg
mov
fisubrl
jne
mov
dec
dec
inc
jbe
jle
push
pushw
xchg
leave
lods
inc
int3
xor
add
push
pop
jle
cmpsb
cmp
mov
push
cmpsb
xchg
sbb
jnp
add
xchg
mov
js
xor
pop
stos
cltd
movsl
movsb
jne
ficomps
jge
clc
inc
inc
mov
or
lock
inc
lret
add
shlb
mov
js
loopne
and
xchg
jge
sub
cmp
inc
xor
jp
inc
iret
ljmp
xchg
jns
cmp
loope
push
mov
mov
dec
enter
adc
popf
mov
sbb
push
faddl
stos
fstp
test
sarb
stos
sbb
xor
cs
sahf
js
xchg
jnp
xor
inc
inc
js
les
les
sbb
adc
int
cltd
stos
adc
mov
fwait
dec
jg
adc
int
test
pop
add
cwtl
fdivs
cmp
add
dec
push
fists
scas
mov
pop
cltd
iret
lcall
ret
push
mov
cmp
into
aaa
insb
js
add
js
or
jb
sbb
xchg
inc
stc
dec
loopne
push
loope
fsubrl
inc
cmp
ljmp
int
push
and
in
push
add
stos
add
loope
mov
shll
clc
sub
popa
pop
or
daa
std
nop
das
adc
mov
pop
pop
xchg
adc
jo
dec
imul
and
or
outsl
shll
fadd
sub
mov
idivb
int3
inc
push
mov
ss
xchg
add
mov
jne
push
ret
jmp
pop
imul
and
gs
testb
mov
loopne
mov
jmp
movsl
insl
fs
jne
test
popa
dec
mov
and
imul
movsl
aas
sub
aad
fistps
aaa
add
mov
jmp
cltd
bound
int3
push
lret
and
inc
cmc
pop
cwtl
mov
das
icebp
add
add
icebp
cmp
mov
shrl
pop
pop
hlt
mov
cwtl
pop
and
push
jb
cmp
push
xor
adc
jg
shr
sbb
xor
jno
lahf
shll
or
cvtpi2ps
ss
js
inc
test
cmpb
cmp
mov
mov
iret
lcall
and
inc
dec
xchg
nop
or
jg
push
sbb
mov
xlat
adc
cmp
xchg
xchg
xor
test
dec
inc
out
rolb
mov
ja
movsb
out
xor
or
dec
pusha
push
sub
xchg
stc
insb
and
fisttps
sbb
sarb
push
mov
fcmovu
pusha
cmp
lret
data16
cmp
popf
fwait
inc
bound
sbb
clc
call
add
push
jl
rcr
or
cltd
xchg
xchg
clc
pushl
jecxz
pusha
cmp
stc
and
in
psubd
mov
subb
in
test
and
stc
inc
cli
dec
inc
dec
xchg
ja
aam
out
notb
fdivrl
mov
call
aas
cltd
mov
nop
mov
sub
rcrl
fs
insl
lahf
sbb
jns
and
pop
xchg
into
pop
mov
ja
pop
call
jno
mov
fcmovnu
push
dec
mov
mov
fcmove
pop
popf
inc
pop
stc
xchg
sub
sub
pop
or
push
scas
and
test
cmp
mov
lcall
inc
loop
jg
aam
cmp
les
add
cmp
mov
xchg
leave
inc
mov
xor
fisubl
arpl
add
xor
dec
test
les
push
push
adc
and
jno
shl
pop
loopne
adc
inc
pop
adc
insl
int
call
add
jecxz
mov
push
lds
roll
cltd
or
aam
mov
add
lods
decb
and
repnz
push
sub
test
out
subb
add
push
sub
rcrb
repnz
push
mov
call
in
xchg
js
shr
ja
cltd
push
dec
loope
int3
jne
ret
adc
aam
sub
xor
adc
cmpsb
xor
cs
push
sahf
xchg
ja
int3
stos
mov
stc
add
xchg
les
jle
lahf
mov
xchg
in
int
dec
cltd
stos
and
sub
push
push
repnz
js
into
pop
sbb
sub
gs
push
movsl
lcall
lcall
scas
or
or
xor
xor
test
or
stc
not
inc
ret
pusha
push
adc
xorl
sbb
repnz
pop
mov
pop
test
movsl
inc
dec
and
pop
rolb
xchg
sbb
and
sbb
loope
loopne
loopne
sub
jecxz
jmp
add
pusha
jmp
and
fcoml
dec
ret
fimull
repnz
sahf
push
push
xor
inc
or
test
ja
adc
sub
mov
mov
cmc
lds
aam
mov
pop
push
lock
push
test
xor
add
mov
sub
jg
sbb
add
mov
lret
repnz
fld
lret
xchg
jno
jge
adc
dec
in
or
outsb
cli
pop
ja
push
stos
fwait
adc
push
sub
mov
mov
lods
and
jle
sarb
xchg
jmp
popf
enter
and
call
sbb
or
pusha
mov
lret
mov
adc
dec
xchg
sti
sub
mov
mov
jnp
fistpl
lret
or
cmpsl
inc
jne
sbb
jp
leave
pusha
push
pop
stos
pop
add
std
and
or
sub
rcrb
aaa
mov
pop
mov
push
jmp
sbb
jnp
inc
xchg
xchg
mov
test
pop
js
std
icebp
lea
flds
loop
pop
and
call
stos
nop
jbe
jge
hlt
mov
dec
mov
mov
pop
in
shrb
mov
dec
xor
andw
cmpsl
pop
das
fistps
pop
jb
les
les
jg
stos
cmp
stc
jl
jg
ret
jae
xor
subb
sarb
imul
sti
jp
mov
lcall
rcrl
enter
stc
stc
repz
inc
and
inc
addb
testl
outsl
cmp
subl
adc
dec
outsb
std
iret
and
inc
mov
mov
cld
cmp
insb
cmp
cmp
mov
test
cmp
popa
sahf
mov
jl
fs
imul
sub
mov
xchg
sub
cmc
jae
mov
test
push
insb
dec
push
xchg
jns
imul
movsl
mov
pop
xor
cmpsb
insl
nop
inc
cmp
add
or
or
push
fnsave
xchg
in
dec
mov
fcomip
int3
aas
rcrl
fdivrl
push
pop
push
ret
int3
insb
inc
inc
aam
pop
xor
xchg
in
out
cmp
das
inc
dec
cmp
dec
add
jle
xor
repz
sbb
sbb
nop
nop
outsb
push
inc
andb
and
jne
mov
mov
sbb
lds
inc
arpl
mov
dec
mov
xor
or
mov
sbb
fisttpl
pushf
fisttpl
pop
movl
sbb
adc
add
xchg
xchg
pop
push
xor
jb
xor
and
dec
test
dec
mov
call
jge
insl
pop
xchg
add
into
sbb
jmp
or
jno
lods
pop
jge
xlat
push
adc
dec
aaa
popf
push
daa
push
aas
pop
movsb
lds
mov
push
je
in
mov
pop
jmp
rcrl
outsl
scas
xlat
pusha
fsubr
lcall
jns
pop
into
inc
out
clc
in
mov
push
cli
pop
loopne
mov
sbb
sub
inc
ljmp
fwait
ds
cmc
jo
sti
xchg
sahf
je
mov
dec
xchg
ret
outsb
idivb
lahf
loope
and
imul
cs
jno
xlat
sbb
xorl
push
jle
lods
sbb
add
adc
in
dec
mov
jle
add
jecxz
cltd
sahf
stc
cs
scas
adc
fldl
outsb
xchg
pushf
stc
lods
cmpsl
jbe
push
add
das
out
xor
mov
fnstsw
imul
push
xor
rorb
loop
add
out
pop
inc
cmc
or
inc
sarb
xor
mov
mov
cmpsb
movsb
sbb
das
xchg
scas
sub
mov
mov
enter
roll
cmp
idivb
testb
ret
pusha
inc
scas
adc
mov
icebp
inc
stos
in
pop
xchg
je
loope
lods
call
and
mov
mov
lcall
mov
sbb
sti
mov
in
mov
dec
mov
test
cs
ret
cld
cs
adc
jl
hlt
and
xchg
inc
stos
jl
int
mov
adc
fcompl
jg
fsubrs
or
jg
or
js
rorl
xor
ss
js
mov
mov
rorl
sbb
nop
mov
jmp
lret
cs
fwait
cmc
loopne
orl
stos
sbb
mov
shrb
cmpl
lods
cmp
sbb
lahf
aad
pop
pop
mov
popf
dec
sbb
lcall
adc
mov
pop
faddl
and
mov
mov
jae
inc
inc
xorl
jmp
or
inc
icebp
xchg
ja
movb
icebp
xchg
sub
xchg
xlat
push
movsb
ja
rolb
add
cmp
inc
pop
inc
fs
test
pop
scas
sub
test
fsubl
dec
pop
mov
iret
cs
lods
es
or
sub
jmp
cltd
xorb
dec
xchg
hlt
and
or
lret
and
xchg
sbb
sub
dec
andl
inc
loopne
outsb
je
push
lahf
adc
mov
cmp
movsb
sbb
adc
sbb
mov
mov
ret
es
cwtl
jle
lods
pushf
idiv
and
pusha
popl
ds
sti
nop
shrb
in
xlat
or
outsb
inc
mov
push
mov
mov
scas
xchg
pop
cmp
inc
outsb
fs
in
cwtl
scas
add
sbb
or
mov
out
cli
fwait
loop
jge
dec
test
pop
scas
push
es
mov
or
fwait
adc
inc
jle
enter
inc
cmp
movsb
xor
fcmovnb
stc
lret
cmp
sbb
decb
loop
push
push
insl
mov
or
imul
je
lcall
ficomps
daa
sti
xor
outsb
call
dec
js
negl
les
jp
xor
lock
stc
jno
scas
pop
sub
add
pop
or
pop
xchg
sbb
xor
out
adc
pop
sbb
jo
mov
out
cmc
mov
loope
in
push
mov
inc
adc
jne
lea
outsl
mov
daa
xchg
pusha
dec
or
xor
jae
daa
dec
or
add
push
xor
inc
nop
lock
sub
daa
add
sbb
jne
dec
and
adc
mov
sbb
cmp
in
adc
or
notl
faddl
jnp
lock
mov
add
mov
cmpsl
repz
fstpt
cmp
jg
inc
lret
push
cmp
mov
icebp
mov
push
push
mov
xchg
dec
mov
add
mov
fwait
lret
pop
nop
adc
jbe
sti
dec
mov
test
je
jne
mov
orl
vminpd
lds
leave
out
and
test
addr16
cmp
js
sub
test
jp
call
mov
push
push
ljmp
test
fldcw
cvtpi2ps
cmp
inc
int3
pop
cmp
imul
dec
fidivrl
icebp
sbb
pop
sbb
fwait
daa
lcall
jmp
mov
imull
xchg
icebp
and
stos
int3
repz
mov
enter
cmp
sahf
cmc
or
jmp
cmp
sub
inc
pop
jne
ds
jbe
mov
sarl
and
cmpsb
xchg
jb
xchg
out
xchg
and
in
dec
pop
or
push
incl
fwait
push
mov
rorl
aad
and
in
lods
fs
data16
lea
fisubs
push
je
and
xchg
cmp
mov
and
pop
jecxz
shll
sbb
sub
faddl
lods
call
xchg
movsb
test
xchg
aad
inc
loopne
in
leave
cmpsw
fidivl
mov
daa
fcomps
inc
cmpsl
mov
out
dec
jns
js
pop
mov
xor
test
or
mov
fxch
xor
sbb
imul
js
sbb
iret
sahf
adc
repz
popf
fiaddl
dec
popf
fildl
repnz
push
inc
lock
xchg
mov
cld
lcall
and
les
cmpsl
or
inc
or
xchg
in
cmp
out
sbb
clc
in
adc
cmp
mull
std
push
pop
adc
inc
cmpsb
fs
dec
inc
and
sbb
adcb
push
ss
loopne
dec
jnp
or
xchg
je
test
mov
aaa
fwait
rol
repnz
sbb
cmp
xchg
clc
ljmp
fstl
rcl
cmpsl
inc
and
cmpl
add
loopne
mov
in
nop
push
cmc
aaa
sbb
sub
dec
mov
push
je
ds
cltd
mov
inc
sub
pusha
pop
cmpsb
and
sti
mov
xor
ljmp
jp
cmp
aas
fisubs
jle
jecxz
into
ret
jmp
mov
mov
fldl
pop
mov
stc
pop
stc
dec
iret
mov
mov
xor
insl
outsl
cmp
push
sub
aas
icebp
outsl
jge
test
daa
adc
pop
mov
rcl
jbe
cmc
jns
pop
bound
jmp
out
std
inc
das
dec
push
add
pmaxub
das
rol
out
xor
loop
and
jae
mov
push
mov
inc
fistpl
punpckhdq
daa
jg
adc
cmp
xor
repnz
mov
mov
hlt
mov
loopne
shlb
pushf
test
jo
mov
mov
arpl
add
clc
std
out
xchg
stc
call
push
orb
jno
xchg
cmp
mov
fmuls
sahf
xchg
sub
loop
js
push
sub
sbb
jno
mov
dec
push
sbb
xchg
leave
jg
xor
or
mov
outsb
pop
mov
xchg
lds
aaa
in
shlb
int3
mov
mov
inc
sbb
jp
and
ja
hlt
test
push
mov
jbe
push
xor
inc
inc
sbb
mov
rorl
xchg
es
outsl
daa
div
icebp
dec
cmpsb
jne
and
mov
xor
repz
xchg
test
lret
ds
out
test
lds
push
es
and
lock
imull
xor
or
mov
fsubrs
mov
dec
movsl
js
in
dec
inc
mov
push
jp
pop
jns
push
inc
cmp
insb
push
or
dec
xor
add
pop
mov
sahf
adc
mov
xchg
pop
jnp
fs
lds
outsb
sub
sbb
fnstenv
cld
std
sbb
test
sbb
and
xchg
mov
scas
adc
fwait
bound
cltd
xlat
push
xchg
or
lods
or
mov
sbb
std
leave
cmp
or
jl
inc
or
es
lods
aas
outsl
pop
dec
out
xchg
mov
xchg
out
jno
add
lret
shll
sbb
push
xlat
dec
mov
jg
push
pop
mov
pop
aam
pop
outsb
sub
jg
and
sbb
sbb
in
nop
jne
and
push
pushf
cmp
cmpsl
out
popa
daa
jle
dec
sbb
push
jb
loope
jae
fimuls
stos
dec
dec
adc
push
loopne
fbld
mov
pushf
dec
aas
cmp
fisubrl
outsb
in
sub
out
jl
push
not
clc
sbb
push
loop
into
flds
mov
pop
fidivrs
cmp
pop
xor
mov
sbb
lock
mov
pop
imul
roll
fadd
mov
cli
stos
mov
or
xor
cmpsl
cmpsb
test
roll
shl
je
xor
inc
hlt
fists
mov
fbld
es
xchg
aas
mov
insl
or
jae
fisttpl
add
pop
jo
pop
and
push
mov
enter
inc
pop
cmp
inc
adc
cmp
pop
xchg
mov
adcl
adc
dec
push
pushf
faddp
sub
bound
sub
movb
cmpsl
xor
int3
gs
loopne
push
jb
sbb
pop
mov
fldt
xor
jge
and
cmc
mov
and
sbb
das
stos
mov
sbb
je
cmp
cmp
fdivl
mov
sar
pop
jge
xchg
pop
je
mov
js
es
push
popa
cmp
aas
sub
adc
iret
push
add
add
adc
lahf
mov
out
and
inc
add
sbb
inc
mov
xchg
test
mov
in
scas
je
xchg
cs
repnz
jbe
dec
pop
mov
xchg
sub
sub
bound
sub
insb
hlt
inc
mov
nop
inc
jno
fstpl
ljmp
cld
jge
push
adc
and
mov
and
fadds
adc
mov
pop
pushf
dec
out
inc
lahf
popa
cmp
mov
sbb
pop
insb
loopne
dec
addl
lcall
insl
xchg
and
adc
add
movsb
mov
pusha
mov
or
lea
mov
jl
sub
inc
cmpsl
mov
inc
sub
mov
mov
js
outsl
sarb
sbb
int
and
das
dec
int3
fistl
adc
sub
aas
jmp
jb
cmp
in
mov
lds
xor
adc
mulb
jnp
fwait
mov
add
add
out
xlat
add
jge
sub
xlat
inc
mov
dec
sub
xchg
mov
lcall
arpl
mov
dec
rorl
mov
sahf
cli
orb
insb
aaa
jp
sbb
aaa
lods
inc
jne
ret
test
xchg
push
fs
pop
xchg
repnz
pop
dec
mov
pusha
or
and
cwtl
and
ret
ss
push
jecxz
add
or
jns
sub
fst
cmpsl
cmp
and
xchg
enter
or
fldl
push
sub
mov
push
lcall
mov
push
cs
and
inc
and
test
adc
mov
adc
mov
add
push
or
stc
sbb
cmpsb
in
mov
inc
xchg
mov
lret
pop
inc
es
or
fwait
out
es
adc
push
or
nop
arpl
xor
outsb
jns
fdivrl
mov
add
xchg
push
dec
or
loopne
imul
repnz
je
cmp
jge
std
mov
mov
sbb
loop
sbb
roll
xchg
pop
out
pop
lock
xchg
das
sub
aas
mov
jne
sbb
fidivrs
fisttpll
add
push
add
and
cmp
push
adc
push
inc
xchg
pusha
xor
insl
leave
cwtl
or
lret
outsb
inc
std
or
push
adc
add
sub
or
xchg
mov
and
adc
pop
shrl
test
xchg
or
mov
pop
in
pop
dec
mov
jmp
ja
xor
cmp
pop
loop
cmp
add
sbb
adc
pusha
and
ret
int
js
jg
out
mov
add
jp
mov
xor
rclb
dec
xchg
sbbb
lret
jns
repnz
xor
push
dec
loop
jle
jecxz
stc
lods
shr
jle
jno
mov
mov
jg
lock
test
iret
and
adc
push
divl
or
movb
xlat
adc
xorl
ret
cmp
sbb
pop
out
cld
jp
pop
ror
jge
jno
pop
cmpsb
push
add
aam
inc
imul
icebp
lock
gs
xchg
psubw
dec
mov
add
repz
adc
fs
scas
mov
cmp
in
add
and
inc
idivb
mov
sarl
jge
lds
or
xchg
add
mov
push
popa
pop
loopnew
and
jecxz
mov
mov
or
jmp
ret
addb
adc
fidivs
stc
inc
ljmp
iret
stos
mov
inc
and
enter
sti
outsl
push
cmp
test
cmp
lret
mov
xlat
test
ficompl
or
out
inc
cmpsl
sbb
jl
test
inc
repz
mov
adcl
add
int3
rol
sbb
pop
stos
imul
movsl
xchg
push
pop
push
add
lea
aam
call
ss
or
mov
sub
or
fsubr
mov
jno
and
aas
test
xchg
jle
movsl
and
jp
in
xchg
aas
in
push
jne
mov
push
xor
mov
popa
daa
sbb
jnp
stos
fildll
sub
mov
arpl
aam
jge
push
and
mov
inc
pop
xlat
cmp
out
orb
xchg
faddl
ss
sahf
cltd
add
neg
and
inc
enter
mov
xchg
jnp
jmp
scas
mov
lock
loopne
rolb
mov
add
in
xchg
ffreep
xchg
int
mov
inc
pop
and
or
xchg
mov
outsl
iret
stos
xor
fcmovnbe
inc
mov
xchg
fscale
pop
push
push
clc
push
xchg
fisubrl
in
jns
cmpsb
dec
test
outsb
cs
pop
lcall
adc
cmp
push
std
je
fmulp
test
leave
mov
test
std
enter
xchg
lods
movsl
mov
daa
loope
sbbl
out
dec
outsl
xchg
or
ljmp
dec
pusha
sbb
inc
imul
bound
into
xchg
sub
lds
inc
cmp
pusha
jnp
mov
ljmp
sub
das
pop
popa
dec
jne
mov
mov
sbb
ja
or
imul
or
and
mov
xchg
mov
cmp
lock
testl
pop
xchg
mov
das
pop
das
call
pop
rclb
jne
insl
sbb
aaa
pop
clc
leave
and
push
mov
and
std
sbb
stos
in
push
pop
stos
leave
popf
movsb
sbb
popa
or
adc
or
mov
ja
lods
add
pop
in
and
jmp
rcr
rcrl
loope
data16
xchg
icebp
and
pop
inc
cmp
dec
jo
lock
mov
stos
jp
mov
insl
or
fs
push
jp
std
stos
xchg
pop
fwait
or
movsb
push
fistl
sbb
jne
arpl
and
adc
cmp
jle
shl
das
iret
add
lret
add
xchg
outsb
cmp
inc
mov
pushl
test
das
pop
mov
dec
inc
add
stos
add
arpl
aaa
fdecstp
mov
ljmp
pop
adc
cmpl
je
mov
std
mov
mov
dec
jp
movsb
inc
stos
stc
adc
rorl
push
xchg
fs
xchg
addr16
es
dec
jne
mov
dec
sahf
cmc
out
and
push
mov
add
mov
xor
fwait
mov
das
cmpsl
test
mov
mov
addb
rorb
cmp
add
jbe
or
ss
mov
cmp
ljmp
mov
sbb
lcall
and
js
or
test
sarb
pop
std
push
repz
sbb
xchg
popa
inc
sub
inc
pop
lock
inc
js
jge
add
cli
sbb
xchg
pop
cmpsl
mov
and
dec
or
inc
xchg
pop
inc
in
das
add
xchg
pusha
pop
imul
jg
xchg
cmp
psllq
shld
or
js
add
mov
and
mov
sarl
xor
jp
scas
push
jne
pop
movsb
jne
out
or
hlt
xorl
and
aam
lret
mov
test
dec
xchg
jns
mov
inc
daa
lods
fdivrp
jns
mov
sub
mov
xchg
lahf
jl
jnp
test
sbb
ror
add
stos
push
fldt
adc
add
sbb
sbb
or
out
sub
enter
add
ja
xchg
sbb
fistl
xlat
xor
repnz
lods
mov
rcrl
clc
jnp
adc
sbbl
cwtl
pop
mull
jbe
jne
pop
cwtl
jbe
push
out
fldcw
scas
adc
addr16
sahf
test
int
aas
insl
sbb
mov
daa
addl
addr16
addr16
rorl
orl
push
mov
xchg
lock
push
cmpsb
aam
sbb
imul
jle
fadds
inc
aad
xor
lret
xlat
ljmp
cli
popf
add
outsb
gs
stc
popf
scas
mov
loop
sahf
push
les
pop
dec
lods
mov
das
sbb
xor
xchg
ret
mov
add
mov
lds
hlt
daa
shrb
test
cld
jno
lods
arpl
jae
pop
jg
and
rcl
fiadds
cmpsl
dec
mov
je
stos
or
push
sub
fadds
out
and
sbb
std
push
cmp
test
daa
adcl
sub
xlat
ljmp
out
cltd
cmp
cmpsl
mov
jns
test
lcall
imul
loope
cmpsl
subb
ffreep
sub
fdivrs
push
dec
call
adc
mov
ret
mov
scas
and
and
mov
insb
and
sub
push
inc
aaa
and
mov
xor
test
hlt
inc
cmp
scas
test
lret
cmpsl
mov
iret
jle
daa
mov
add
pop
into
mov
icebp
cmp
mov
lcall
insl
mov
or
jmp
in
hlt
jae
lcall
in
lods
iret
cwtl
loope
sub
pop
clc
cli
and
mov
cli
rorl
mov
jne
dec
pop
call
call
sbb
in
cmp
mov
jmp
jp
pushl
cmp
pop
bound
pop
mov
leave
mov
sbb
cltd
fs
jno
and
fmulp
fdivl
sub
xor
leave
in
ss
dec
into
lods
add
sub
hlt
pop
xor
cmp
add
aas
incl
jo
andb
imul
aas
and
testl
dec
ljmp
in
cmp
mov
sub
push
rclb
adc
mov
cmp
mov
test
jns
pop
inc
leave
xor
push
dec
xor
push
sbb
enter
mov
aas
mov
xchg
scas
mov
repz
or
and
stos
pop
or
out
jns
push
cmpsl
scas
shll
add
inc
dec
mov
test
arpl
inc
out
dec
stos
shlb
xor
pop
enter
fs
notl
frstor
cli
dec
mov
out
test
or
push
in
jecxz
loopne
test
or
mov
xor
insb
xchg
in
shlb
mov
test
movsl
mov
or
aaa
xchg
aad
mov
sub
jne
iret
les
aam
stos
add
sahf
cs
test
and
popf
insl
sbb
div
lds
dec
mov
pop
outsl
rcll
enter
sbb
cmp
out
loop
cld
insl
clc
push
add
lock
mov
popl
loope
lock
xchg
dec
pop
mov
add
std
and
adc
repnz
fstps
clc
testb
stos
fldenv
test
jae
in
pop
adc
nop
pusha
push
add
cmp
jmp
lods
sbb
fdivp
outsl
out
lods
or
push
in
sbb
pop
lahf
mov
xor
sbb
pusha
mov
inc
cmp
and
mov
loope
cmp
out
sub
sub
pop
maxps
cmc
cmp
jb
daa
mov
cld
and
iret
arpl
sub
jae
cltd
cwtl
or
mov
scas
in
and
lret
pop
pop
jl
int3
xor
xchg
es
stc
mov
jle
loope
push
xchg
sbb
inc
mov
repz
scas
xchg
call
pop
mov
inc
fnstsw
push
jp
movsl
push
call
push
ret
pop
sub
mov
ljmp
mov
frstor
into
jl
xchg
shlb
jecxz
js
add
fdivrs
jnp
rcrl
fsubs
add
sbb
or
pushl
pop
sub
add
push
rorl
lret
cmpsl
cld
xor
add
adc
jno
cli
lahf
test
inc
adc
nop
xchg
push
adc
loop
cld
loop
movsb
mov
stos
inc
movaps
mov
jecxz
lea
adc
add
cmp
xor
fadd
daa
mov
inc
jle
pop
inc
out
mov
std
gs
mov
es
add
pop
push
add
pop
loopne
mov
sbb
jno
mov
out
in
push
inc
stos
sbb
stos
lret
icebp
mov
fists
lods
shl
call
mov
jbe
and
ret
sti
loop
push
mov
hlt
lea
popa
push
fcomip
add
stos
iret
pop
pop
push
fimuls
jb
xchg
ss
mov
pushf
out
out
push
xor
pop
std
jmp
iret
sub
push
push
in
xchg
mov
or
daa
inc
call
imulb
faddl
repnz
addb
bound
jle
pop
sub
xchg
mov
subl
mov
cmpsb
or
add
stc
ljmp
je
cmp
mov
loop
jb
loope
lret
out
stos
jle
lods
scas
jae
call
lcall
repz
mov
push
xchg
mov
iret
je
icebp
mov
gs
in
in
lret
jne
push
cmp
mov
sahf
push
cmp
movsb
cs
add
js
js
or
arpl
sub
mov
ss
cmp
dec
push
dec
xlat
dec
xchg
gs
sbb
in
mov
pop
inc
icebp
ss
xor
call
scas
and
cmp
push
xor
inc
mov
rorl
cmp
fstpt
repnz
xchg
incb
and
jo
xor
fnstcw
out
jle
sahf
push
jns
adc
int3
cmp
mov
outsb
out
imul
into
jnp
out
fbld
or
or
push
jg
xchg
sbb
xor
stos
xchg
lcall
add
pop
lret
movsl
rcll
and
movsb
jne
mov
scas
mov
cwtl
or
inc
loop
inc
dec
push
loopne
or
adc
adc
mov
icebp
cld
outsl
push
loope
push
inc
sub
js
out
mov
rcll
ret
sub
mov
mov
ds
sbb
jge
movsl
dec
inc
pop
aas
sbb
cmc
and
repz
jnp
sbb
xor
pop
inc
or
es
loop
fcomps
lock
mov
cmp
adc
sbb
xchg
mov
xor
or
cs
xor
shll
and
int3
add
push
adc
and
mov
xchg
stos
fisubrl
inc
jns
pop
xchg
cmp
mov
loopne
cld
fidivrs
cmp
loope
idivb
mov
loop
push
out
cmp
xor
mov
adc
lahf
popf
repnz
stos
sub
int3
mov
or
test
cwtl
loopne
int3
or
sub
shrl
les
cmp
mov
xchg
add
out
mov
mov
push
or
xor
icebp
inc
popa
adc
and
push
cmc
sbb
fs
ljmp
insb
ret
xchg
bnd
fdivs
push
test
mov
ficoms
jge
adc
or
adc
add
inc
ret
cltd
lahf
cmp
pushf
sbb
in
in
flds
loope
adc
xor
fmull
nop
lcall
xchg
pop
jne
pop
push
das
jmp
loope
pop
pusha
or
imul
cltd
scas
add
inc
roll
mov
push
sbb
insl
xchg
inc
iret
leave
clc
test
mov
mov
add
stos
dec
lret
icebp
jmp
jbe
movsl
cwtl
retw
pop
add
mov
and
addr16
jb
cmp
or
mov
push
arpl
pop
gs
xor
es
decl
mov
xorb
inc
leave
dec
cmpsl
les
aad
xchg
mov
daa
pusha
fildll
mov
fiadds
mov
push
mov
push
fs
imul
xlat
jb
sbb
inc
andb
dec
ljmp
int
outsl
add
xor
or
lock
jno
rcl
push
inc
push
mov
arpl
pop
adc
mov
test
mov
aad
shll
push
jnp
dec
cmpsl
jge
jns
lret
test
cmpsl
sbb
add
lods
and
aas
rcrl
insb
cltd
xchg
scas
lcall
or
sub
pop
clc
jp
scas
and
test
insb
imul
xchg
pop
out
jp
icebp
sarl
cmp
add
mulb
test
aas
aaa
xor
cmp
dec
and
jae
cmpsl
pop
pop
stos
inc
xchg
into
stos
inc
lods
ret
pusha
xor
mov
lds
out
mov
or
add
jmp
and
add
inc
test
xor
fistl
inc
imul
mov
push
popa
cmp
mov
add
daa
inc
imul
scas
sub
adc
lods
pop
shll
pop
push
pop
mov
cld
ss
dec
add
enter
and
std
aas
cmp
mov
arpl
mov
add
push
pop
push
rolb
sub
push
cmpsl
cwtl
fnsetpm(287
jnp
das
enter
loop
cmc
pop
movsl
mov
fistps
sub
mov
test
pop
pop
icebp
imul
out
fbstp
sub
jae
push
outsb
ret
xlat
imul
inc
popa
cmpsl
inc
dec
cmp
pop
test
lahf
inc
sbb
mov
test
jmp
mov
or
add
pop
pop
repnz
xorb
jne
ss
fdivl
lods
and
add
int3
xor
scas
out
lock
and
xor
sub
pop
int3
arpl
aam
or
pop
jp
ljmp
xor
xchg
es
adc
lret
mov
xor
push
daa
pop
mov
xlat
pop
outsl
xchg
enter
cmp
pop
outsl
mov
or
movsb
ret
inc
int3
sbb
jnp
xor
mov
adc
xchg
mov
ljmp
lret
mov
adc
repnz
mov
in
cmp
out
scas
repnz
sub
rcll
dec
adc
dec
jp
lods
dec
push
mov
or
mov
pop
aam
ja
sub
mov
in
std
inc
add
mov
inc
xorl
mov
mov
dec
std
pop
xchg
xchg
cmp
inc
jl
ljmp
in
add
dec
add
dec
xchg
out
adc
out
dec
ret
pop
dec
xor
mov
int
mov
test
inc
popa
aam
lock
pop
jne
cwtl
loope
xchg
push
jge
sub
xor
xchg
add
insl
push
add
and
lods
adc
pop
cmp
dec
adc
inc
popf
pop
pusha
cmp
mov
frstor
jl
dec
test
mov
orb
das
pusha
ljmp
fwait
pop
jns
imul
out
fbstp
and
outsb
inc
test
push
mov
fldenv
or
jecxz
jb
xchg
sub
rcr
mov
test
xchg
xorb
sub
sub
sub
adc
lcall
fs
mov
mov
clc
loopne
lret
dec
rcll
jno
or
dec
inc
mov
stos
fimull
xchg
sahf
xchg
add
jle
lds
mov
not
dec
lock
pop
jl
push
mov
cmp
or
insl
inc
cwtl
jge
in
mov
mov
pushw
mov
mov
pop
sub
outsl
sbb
enter
lods
andb
jns
aad
cli
pop
mov
pop
lcall
push
insl
cli
addl
inc
jnp
call
test
lret
lds
mov
push
mov
ds
mov
loop
mov
dec
rolb
cmpsl
and
outsl
jmp
lahf
lods
pop
push
decb
pop
inc
cmp
pop
es
testb
push
push
push
lret
inc
enter
jno
xor
pop
fwait
js
fbstp
sahf
add
bound
inc
inc
fwait
in
lock
cld
mov
icebp
xchg
mov
cld
push
jmp
push
movsl
xlat
cltd
mov
movsl
sub
xchg
cmpb
mov
or
dec
leave
outsb
sbb
mov
out
jae
xor
dec
push
and
rcr
cmpsb
fldt
xor
xchg
mov
cli
mov
inc
stos
dec
xlat
sahf
mov
fs
movsl
sti
mov
scas
ss
sahf
or
js
mov
in
dec
std
insl
sahf
lods
dec
jno
dec
xchg
cmpl
mov
dec
je
cmp
sti
cmpsl
add
push
rcrb
lock
lods
xchg
arpl
sub
sbb
lock
pop
pusha
dec
xor
insl
jne
pusha
cmp
fs
xchg
xchg
arpl
or
adc
inc
outsl
mov
cmc
mov
das
inc
leave
adc
or
push
sub
cmp
push
cmpsl
bound
notl
and
jmp
ljmp
add
add
push
inc
ret
pop
lret
das
insl
cld
sbb
nop
adc
popf
cmp
xchg
mov
and
sub
push
adc
or
mov
xchg
je
jb
insb
cwtl
out
daa
lods
or
jnp
ret
int3
xchg
subb
mov
mov
xor
push
sahf
sub
mov
cmp
xor
in
in
push
cmpsl
ljmp
ficomps
add
imul
arpl
pop
lret
add
data16
cltd
fwait
std
push
aaa
and
lds
movsl
imul
cltd
jns
inc
xchg
movaps
and
test
mov
mov
adc
rcl
lea
sub
jmp
lret
xchg
lcall
mov
inc
movsl
lods
dec
cmpl
push
clc
xor
push
mov
and
test
mov
cmp
bound
lea
xlat
std
mov
outsl
dec
cmpxchg
add
cwtl
movsb
push
stc
cmp
dec
and
leave
push
sbb
mov
into
mov
popf
fists
push
push
icebp
fsubs
and
ret
sub
insl
jl
cmp
jge
and
sub
push
jb
lahf
sbb
lock
daa
cs
xchg
std
add
xor
xchg
xor
inc
rclb
xchg
outsl
mov
mov
cwtl
push
add
push
jg
push
or
jmp
cld
ret
lods
fsubs
loopne
or
nop
mov
cmpsl
incb
or
jbe
int
test
adcl
lock
sahf
or
insl
lret
movsl
sub
daa
xchg
mov
add
pop
jmp
cmpsb
adc
fwait
mov
jl,pt
add
shr
cmpsl
mov
lock
mov
pushf
mov
imul
jbe
pop
fs
add
inc
xchg
mov
push
xor
mov
outsb
je
xchg
das
mov
inc
idiv
idiv
ljmp
cmpsb
dec
sub
mov
dec
add
mov
mov
decl
cmovno
xchg
pushf
adc
cwtl
aam
mov
jge
sbbl
dec
and
or
fmull
aaa
pushf
push
cld
jne
jg
jge
cltd
int
inc
lret
jge
leave
xor
pop
mov
sarb
insb
push
mov
push
jle
jns
mov
aam
arpl
dec
cmp
jecxz
mov
mov
mov
icebp
xchg
pusha
les
ror
rcrl
and
cmpsb
mov
ret
add
lds
xchg
inc
ss
dec
cmp
push
mov
add
insb
lahf
add
ret
push
ljmp
dec
nop
xchg
stos
adc
lcall
fsubrl
jmp
lret
adc
js
ret
cli
mov
repz
cmpb
inc
fmull
imul
jmp
mov
cmp
sbb
or
xchg
cmp
dec
movsb
scas
popa
push
call
cld
fbld
mov
pop
cli
or
xchg
add
lea
pop
or
xor
daa
pop
sub
adc
inc
lcall
loope
pop
xchg
sbb
mov
jb
mov
int
pop
and
cmpsl
mov
cld
lahf
pop
fxch
pop
int3
mov
sbb
in
lcall
jmp
ss
insb
fnstcw
mov
iret
or
jne
pop
dec
push
test
flds
mov
test
jne
fmuls
or
in
insl
add
jno
out
add
cmp
adc
lahf
mov
push
add
add
pop
outsl
adc
or
jg
mov
jnp
in
adc
das
imul
add
cmp
and
pop
ja
pop
mov
xor
das
test
pop
mov
dec
lea
inc
jmp
stos
mov
or
fucomp
data16
dec
sub
int3
xor
and
push
cmpsl
xchg
bnd
mov
ljmp
iret
out
inc
out
aas
xchg
xchg
daa
cmp
inc
add
imul
mov
xchg
push
xchg
pop
mov
and
or
rcll
jo
aaa
std
mov
jecxz
iret
daa
xchg
mov
loopne
into
push
push
jge
leave
hlt
pop
cmp
mov
mov
stc
fbstp
lahf
jo
fsubs
aaa
imul
or
ja
cwtl
adc
mov
icebp
mov
adcl
out
xorb
adc
jbe
es
jp
aad
add
ret
push
adc
jmp
fistl
and
jle
ss
sub
test
hlt
repz
pushf
xchg
loope
mov
or
sub
movsb
xor
mov
adc
aaa
aam
cmpsl
lock
call
mul
mov
push
xor
gs
mov
xchg
repnz
sbb
or
xor
outsb
cmpsb
out
or
gs
fcoms
pop
leave
icebp
vunpckhps
or
sbb
arpl
mov
pop
fs
in
lret
jne
mov
cs
leave
mov
jl
pop
cmp
adc
jge
rcrb
sbb
jle
arpl
aas
adc
add
iret
insb
enter
lret
mov
sbb
pop
movb
jecxz
push
aad
inc
xor
es
addl
stc
dec
and
lods
out
shrl
pop
inc
or
test
push
stos
add
insl
out
jecxz
xchg
mov
mov
lahf
pop
mov
in
jb
mov
or
jae
stc
aaa
push
or
pop
mov
xchg
scas
cmc
sbb
add
xchg
jmp
adc
iret
xor
pop
enter
xchg
dec
cmpsl
loopne
mov
mov
lret
nop
jnp
mov
popf
mov
mov
mov
cwtl
movl
in
pushf
repz
mov
es
dec
lahf
adc
or
decl
adc
or
repnz
imul
sti
xchg
or
mov
inc
cwtl
pop
orb
outsl
out
cwtl
dec
icebp
sub
cmpl
repnz
aad
jecxz
mov
leave
pop
mov
cmp
loope
repz
mov
mov
popl
pushf
sbb
pop
adc
test
les
and
repz
pop
cmpsl
addr16
jp
test
pop
push
push
sbb
cmc
push
pop
out
das
shlb
mov
ficomps
mov
push
out
bound
push
xchg
in
pop
ljmp
xchg
sub
mov
push
lret
out
sbb
push
or
in
ljmp
jae
es
xor
pusha
jp
push
lods
nop
pop
pop
ja
cwtl
push
decb
cmp
rcr
push
add
xlat
insb
mov
sbb
aam
pop
sub
inc
sub
jmp
lods
inc
sbb
int
sahf
pop
into
scas
and
in
fwait
movsl
lods
adc
pop
cwtl
adc
sub
int
push
sbb
xchg
inc
stos
fdivl
push
stos
mov
inc
loop
push
sub
out
leave
pop
mov
inc
imul
mov
cmp
inc
xchg
jns
movsl
pop
negl
cltd
out
add
push
sarb
shlb
push
aad
add
dec
jne
icebp
iret
pop
gs
xor
test
xchg
inc
cmp
mov
mov
rcrl
test
sub
sbb
nop
sub
jns
lods
shr
mov
aad
xor
sub
lods
sbb
mov
in
test
xchg
fdivrl
int
nop
scas
movsl
cmpsl
or
into
and
mov
or
cmp
arpl
gs
inc
iret
cld
or
jg
dec
loop
xchg
loopne
xorl
outsl
cmpsb
dec
hlt
mov
and
jp
inc
xchg
sub
insb
or
insl
xlat
pop
arpl
mov
pop
cmp
mov
icebp
out
popa
hlt
pop
mov
insl
lret
inc
mov
xchg
shrb
pop
stos
xchg
xor
pop
mov
mov
xchg
jae
out
fisubrs
test
inc
std
out
aad
shll
je
add
jno
fildl
mov
and
mov
inc
enter
mov
mov
test
out
stos
or
lret
out
sbb
mov
mov
daa
ret
cld
jge
stos
lahf
and
mov
mov
dec
add
push
pop
dec
pop
out
and
mov
fsubl
pop
push
jecxz
movsb
xor
xchg
mov
jg
lret
push
mov
add
ss
push
push
and
out
andb
leave
loope
jno
mov
insb
nop
scas
dec
jbe
mov
inc
cltd
jle
es
jnp
cmp
out
xchg
jb
bound
sti
fisubl
jae
mov
jne
fistpl
dec
sbb
scas
icebp
fisubrs
inc
xchg
int3
push
popa
in
jmp
sbb
addr16
mov
addb
xor
call
xor
push
and
aaa
pop
or
inc
or
mov
fs
cmp
aas
data16
cltd
fcomps
xchg
lods
fdivrl
add
mov
ss
dec
inc
stos
rcl
es
enter
jnp
arpl
jno
or
das
in
mov
or
xlat
cld
mov
clc
jge
fcoml
mov
dec
add
daa
pop
mov
and
xor
stc
jo
in
imul
xor
fwait
in
fsubr
ss
push
dec
add
push
imul
dec
dec
pop
in
es
out
sub
lahf
pop
jg
js
sti
rol
jbe
pop
les
xor
sub
ret
fdiv
pop
fistpl
xor
pop
jmp
cmc
lret
jb
rol
dec
cmpsl
dec
cmp
add
inc
in
pop
iret
adcb
ja
jbe
inc
jle
rcrl
jg
sub
and
mov
rol
dec
dec
pushl
adc
pop
cmp
push
scas
fcomps
bound
clc
fisubrs
js
sub
pop
sub
xchg
rorl
inc
int3
mov
sub
ss
outsl
push
hlt
loop
cltd
cmp
xor
lds
and
mov
mov
mov
stc
int3
xor
outsl
shll
enter
lods
in
pop
call
es
loopne
mov
fists
xor
in
repz
mov
iret
push
ds
cmp
cmpsl
sbb
xchg
stos
xor
mov
je,pn
imul
in
lret
mov
popf
adc
xchg
dec
data16
or
jmp
outsl
and
hlt
jle
mov
cmp
dec
pusha
cmp
xchg
ds
hlt
seto
mov
imul
xchg
out
lcall
into
loope
xor
dec
sbb
xor
push
jmp
loop
dec
jecxz
mov
or
daa
lcall
call
gs
mov
mov
or
mov
mov
fimuls
pop
xor
push
in
sub
add
mov
push
mov
pop
negb
pusha
lret
in
push
xchg
in
pop
popf
pop
cwtl
jecxz
and
stc
and
fidivrs
lods
cmp
mov
movaps
fsubrp
lock
or
outsl
and
mov
outsl
push
mov
cmp
sarb
sub
jno
loope
sub
je
loop
mov
mov
imul
out
sub
cmpsb
arpl
shrb
adc
xor
sysexit
daa
sub
pop
aad
lods
dec
pushf
lea
pop
cwtl
sub
aas
rolb
sbb
sub
inc
int3
stos
lahf
inc
sbbl
mov
lock
loope
xchg
mov
or
ljmp
shlb
cmp
cltd
lahf
rorb
test
fisttpll
xor
out
out
loope
sub
mov
test
cld
outsb
daa
rol
xor
icebp
xchg
stos
negl
xchg
mov
leave
repnz
ror
pop
push
pop
inc
iret
xchg
xor
arpl
push
mov
into
aas
dec
pop
in
cs
movsb
cli
cld
xchg
jns
in
cmpsl
xorb
sub
jo
shl
push
and
in
xor
pause
push
sbb
in
addr16
add
loopne
scas
adc
adc
std
popa
pop
mov
pop
xchg
jecxz
xchg
add
sub
ds
mov
insl
loop
mov
or
fbstp
lods
int3
xor
pop
rcll
loopne
mov
hlt
and
repnz
test
les
fistpll
and
mov
push
xchg
lret
sub
dec
jbe
mov
into
mov
adc
fs
dec
sti
std
pop
clc
test
adc
movsl
cmpsb
mov
push
lods
mov
in
aaa
lret
cs
and
lods
out
out
nop
cli
or
jecxz
dec
out
mov
cmp
mov
rorb
cmpl
add
call
ja
jge
inc
mov
inc
adcl
loope
aas
dec
xor
hlt
aaa
ljmp
fdivl
and
les
jo
sbb
adc
aaa
add
fnstcw
xor
cmpsb
imul
stos
xchg
fwait
mov
or
fnsave
cld
outsb
mov
push
test
in
push
std
jae
xor
add
cwtl
pushf
in
mov
or
xor
jmp
insl
add
popa
lock
mov
test
mov
cmp
gs
sbb
out
pop
mov
xor
test
cmp
adc
bound
xchg
mov
jb
incl
aam
fstl
cmp
outsl
mov
add
xchg
cmp
insl
inc
inc
add
push
inc
cmp
fstl
cld
sarb
lea
data16
sbb
lock
lret
add
mov
push
sbb
mov
clc
sub
sub
inc
fisttpll
jo
dec
rolb
inc
arpl
xor
inc
push
or
fisubrl
pop
orl
xchg
ror
loop
addb
adc
or
imul
inc
sarl
mov
or
cmp
addl
mov
ljmp
dec
fiaddl
xchg
add
dec
lret
sbb
inc
push
adc
inc
add
movl
dec
xor
inc
sub
and
pop
outsl
sub
mov
and
std
adc
outsb
daa
std
jnp
inc
aas
sbb
dec
minps
cmpsl
scas
pop
mov
fwait
jne
fs
add
pop
enter
lcall
dec
push
fldcw
in
int3
test
shr
in
and
in
cmp
call
std
dec
jg
je
xchg
mov
jle
and
pop
jl
pop
adc
cmp
fst
cmpl
fcomps
dec
mov
fnstsw
mov
test
mov
fs
popf
pop
mov
es
fs
sbb
jbe
pop
hlt
js
scas
jp
mov
xchg
xlat
nop
test
inc
pop
test
in
mov
push
cmpsb
icebp
ljmp
sbb
sbb
cmp
push
cmpl
push
pusha
or
push
xor
pop
icebp
mov
out
jmp
mov
xchg
jns
mov
sub
ljmp
lcall
or
cld
in
in
hlt
imul
dec
xorb
and
scas
mov
cmpsb
stos
and
push
sub
jae
cmpsl
push
xchg
or
dec
push
push
xor
out
sbb
setbe
sbb
sti
jns
mov
sarb
dec
mov
popa
mov
inc
adcb
data16
push
aad
repnz
and
xor
repnz
push
add
xchg
movsl
and
lcall
jp
dec
sarl
xchg
sbb
adc
je
rcll
rcll
mov
sub
xchg
mov
sbb
jbe
cmp
or
inc
cltd
sbb
adc
mov
arpl
stos
push
fisttpl
inc
mov
movb
int
jmp
or
neg
jbe
xor
or
sbb
and
ret
shr
rclb
sbb
popf
sub
push
add
push
je
xor
pusha
push
rcll
sbb
dec
ficomps
cmc
and
out
add
inc
cmp
icebp
mov
jbe
idivl
xchg
inc
lret
cmpb
jl
clc
dec
adc
push
xchg
pop
fmulp
test
das
and
cld
mov
cmpsb
sub
pop
fs
dec
inc
test
dec
pop
mov
push
add
aad
enter
adc
push
jnp
shrl
push
fidivrl
jp
out
mov
mov
les
lock
jecxz
outsl
inc
in
lahf
subl
mov
and
pop
cmp
scas
mov
mov
pop
push
mov
inc
ds
sub
sarb
rcr
cld
fwait
jo
jp
lahf
fwait
insb
inc
cmc
ja
add
test
xchg
leave
mov
mov
sub
daa
popa
lock
add
lea
adc
push
mov
aas
fcmovnbe
pop
jb
pop
daa
fcompl
mov
imul
mov
or
mov
subl
movb
loope
testl
mov
jl
cld
push
pop
call
xor
inc
adc
daa
dec
sub
adc
mov
mov
lcall
lret
sbb
pop
aad
xchg
loopne
insb
dec
faddp
cmp
arpl
xor
outsb
adc
jl
dec
leave
cmp
je
jp
push
lret
inc
lret
movsb
push
jl
sub
add
fsubrl
imul
lds
dec
and
ret
xorl
sub
pop
and
mov
inc
cmc
push
out
add
pusha
or
inc
out
jge
and
std
dec
aas
movsl
das
loop
mov
push
jmp
stos
dec
push
push
adc
dec
adc
ds
scas
addr16
outsb
fcoml
jg
popa
lret
or
mov
push
sub
sbbb
cld
fnstsw
sbb
das
dec
sub
push
or
mov
xchg
cmp
mov
imul
popa
mov
test
lock
shlb
icebp
mov
push
lea
or
mov
ret
add
out
test
imul
out
xchg
mov
inc
sbb
jge
enter
mull
divl
mov
dec
hlt
daa
and
cmp
leave
push
out
push
xchg
push
mov
sbb
xchg
cmp
das
pop
cltd
or
mov
cld
sarb
cmpsl
in
repz
js
das
push
idivl
jle
nop
xor
pusha
push
cmpsl
cmp
mov
fwait
pop
push
xor
out
pusha
shlb
push
add
sarl
dec
inc
ss
rcll
loopne
xchg
jnp
stc
popf
sub
dec
sbb
push
pop
mov
or
pushf
xchg
xor
xchg
adc
jo
dec
fcoms
push
outsb
sbb
lea
sbb
int3
shl
pop
mov
fcmovnu
adc
popa
fs
pop
mov
imul
fdivrs
in
mov
test
or
pop
jae
adc
mov
jg
aam
out
mov
mov
jge
in
shlb
mov
jnp
enter
in
je
mov
lret
stc
xchg
lret
add
ljmp
jl
nop
sbb
cmc
push
lret
pushf
dec
outsb
cld
pop
cmp
mov
icebp
mov
adc
aam
xor
push
and
in
movsl
add
mov
push
nop
test
lods
rcll
popf
xchg
dec
xorb
push
clc
and
jp
int3
aad
pop
mov
js
je
movsb
xchg
test
fucom
rol
pop
ja
imul
mov
mov
jp
and
pop
sub
jl
and
adc
jp
neg
data16
mov
sbb
inc
pop
dec
popa
push
jb
test
fwait
adc
jle
jmp
dec
jns
test
insl
jmp
add
js
loopne
rcrl
mov
sub
pop
cli
aaa
enter
pop
or
mov
push
or
cwtl
pop
mov
popf
pop
xor
ds
and
dec
mov
mov
xor
jno
xor
sbb
divl
dec
jne
push
mov
test
ret
popa
decb
adc
jns
shll
daa
repnz
mov
in
adc
int3
inc
ljmp
shlb
fidivrs
xchg
insl
and
push
std
in
sbb
sbb
mov
dec
out
and
cld
les
jecxz
jne
lods
push
pop
call
adc
pop
bnd
ss
loope
sub
subb
shrl
ror
push
pop
push
imul
movsl
mov
jnp
mov
or
mov
cmpsl
push
lret
adc
orb
addl
inc
dec
imul
lret
imul
dec
pop
movsl
pop
xor
rclb
lock
lret
cmp
sbb
iret
and
fidivl
cmp
jnp
call
mov
iret
jns
and
mov
inc
popa
and
cmc
mov
mov
add
cmpsl
push
xorl
hlt
dec
sub
xchg
repnz
sbb
sub
add
fimull
fdivrl
into
out
inc
push
lods
gs
ljmp
std
pop
in
or
adc
dec
cmpsl
gs
xorl
pop
jae
jbe
jae
xchg
aaa
push
push
inc
in
and
jle
adc
mov
mov
sub
cwtl
movsb
test
mov
fs
dec
mulb
out
outsl
ja
mov
cmp
dec
call
enter
iret
call
idivb
lahf
adc
cmc
imul
test
and
or
dec
mov
jbe
pushf
lock
call
mov
ja
inc
ror
fcomps
sbb
jbe
fsubp
xor
or
xor
dec
js
mov
add
lods
cld
movsl
inc
lret
in
sub
push
pop
mov
aam
add
adc
incl
out
sub
leave
sub
xor
jne
inc
dec
fdivs
dec
mov
cwtl
lret
adc
dec
loop
sub
insb
push
dec
dec
fcomps
jo
iret
pusha
fbld
mov
mov
pop
mov
sbb
add
insl
jmp
xchg
orl
xchg
mov
mov
push
xlat
ds
js
inc
rol
xchg
dec
orl
fdivs
shll
push
test
xchg
iret
lds
xchg
pop
cld
mov
sub
daa
pop
rol
dec
dec
add
push
add
fisttpll
sbbl
xchg
outsl
jge
rcl
call
int3
repz
loop
hlt
and
nop
enter
push
cwtl
pop
ficoml
mov
mov
iret
jb
popf
in
xor
cmp
mov
adc
xchg
lahf
cmp
cmp
int3
repz
ds
xchg
adc
mov
mov
fmull
std
push
call
stos
js
push
push
jge
mov
or
jge
lods
addr16
lcall
pop
pop
sbb
leave
sbb
pushf
inc
mov
out
cmpsl
lods
mov
sbb
leave
in
xchg
aam
cmp
or
insl
sarl
mov
outsb
xor
test
pushf
data16
push
xor
scas
mov
jbe
inc
mov
outsl
xchg
fstps
sahf
cwtl
adc
outsb
pop
jp
push
fisttpl
jmp
push
stc
ret
and
dec
pop
and
pop
dec
pop
stc
inc
push
mov
sbb
cmp
xor
mov
push
jbe
xchg
push
pop
mov
shr
popf
out
add
pop
sub
jl
bnd
or
jo
xchg
icebp
xor
out
insl
inc
fs
or
notb
dec
insb
inc
sbb
pusha
jge
test
rcrl
shlb
sbb
and
imul
dec
add
mov
pop
dec
dec
sbb
das
fwait
lea
std
call
jg
xchg
jnp
pop
insb
in
aam
pop
fmul
ss
sub
aaa
push
std
mov
iret
push
cmp
insb
sbb
ljmp
loop
jmp
mov
and
dec
out
icebp
jmp
into
popf
mov
or
cli
adc
sub
mov
out
cwtl
cld
mov
fcmovnbe
sub
xchg
test
adc
mov
andl
mov
cmp
lock
subl
scas
add
jo
aaa
lods
lock
es
mov
pop
sbb
jae
pop
outsb
loop
insb
fisubrl
popa
sbbb
fcomp
or
jnp
mov
pop
dec
xchg
jne
movsb
pop
sub
ret
mov
outsb
pop
fwait
jnp
in
sbb
or
push
out
mov
bound
jae
or
sub
sbb
xchg
wrmsr
adc
bound
xorl
dec
pop
pop
das
xor
int3
lret
jne
mov
les
gs
movsb
or
mov
push
jb
cmp
pop
sub
cmp
popf
test
push
outsb
insl
fdivrl
xchg
mov
int
insb
rolb
dec
test
jbe
stos
adc
stc
fcmovnu
adc
jp
adc
mov
mov
cld
mov
mov
xchg
int
and
jns
loop
dec
mov
insl
jns
push
lds
xchg
stos
lret
ja
in
push
fistps
dec
movsb
fstps
add
stc
xor
xchg
cmp
aad
aad
js
subb
lock
mov
mov
jle
dec
cwtl
mov
xchg
clc
sub
jne
or
pushf
out
iret
cmp
adc
aam
mov
sbb
pop
out
adc
outsl
xor
repz
sub
mov
push
jns
and
push
push
add
mov
jno
and
arpl
pop
mov
or
clc
flds
or
int
ss
das
xor
enter
daa
out
add
icebp
mov
es
loopne
sub
cmpsb
xchg
xchg
xor
lahf
adc
gs
leave
lcall
int
hlt
inc
int3
daa
cmp
mov
daa
fs
into
push
fidivrs
cmc
mov
nop
cwtl
test
jle
lock
and
jmp
shr
push
lock
push
mov
mov
std
add
add
repz
fcomps
pop
int
dec
or
sub
sbb
mov
mov
jns
loop
std
mov
jnp
cmp
push
call
xchg
push
aam
pop
loope
pusha
mov
push
int3
out
lret
cmp
outsb
pop
outsb
inc
xor
sarb
cmp
jns
push
xchg
std
in
clc
mov
jno
sub
cltd
or
scas
es
jl
pop
in
push
sub
inc
adc
sub
jae
fadd
cli
push
adc
sti
adc
add
movsb
pop
sti
and
sbb
les
pop
mov
aam
cmp
or
jp
ret
addb
and
dec
sbb
aas
outsl
pop
dec
jns
lahf
aam
mov
scas
gs
pop
fimull
dec
cmc
pop
adcb
daa
nop
add
sahf
incb
inc
push
shr
pop
js
and
fcmovbe
movsb
addr16
push
mov
sub
dec
add
push
aad
xchg
adc
pop
in
in
mov
mov
mov
mov
mov
mov
adc
adc
mov
out
adc
test
scas
fsubs
pop
push
or
scas
sbb
cmpl
sub
jae
jo
loopne
add
sub
movsl
lds
jl
add
imul
pushf
out
daa
stos
mov
add
loopne
les
icebp
imul
cmc
sub
imul
popf
mov
std
outsl
and
mov
mov
sahf
movsl
xor
xchg
es
cmp
and
pop
icebp
sub
enter
ss
push
iret
jp
int
negb
jg
call
loopne
lahf
ror
xor
sbb
data16
push
cmp
addr16
ficoms
sbb
popf
mov
add
incb
stos
xor
xchg
outsb
loope
fidivrl
mov
lret
push
outsl
inc
ljmp
dec
sub
cs
and
cmpsl
aad
pushl
add
sbb
iret
icebp
mov
jmp
mov
insb
repnz
jge
enter
push
or
test
rorl
bound
pop
clc
or
mov
in
push
insb
lods
and
movl
ljmp
inc
stos
ljmp
adc
mov
cwtl
xchg
mov
xlat
adc
inc
pusha
mov
lea
jae
insl
je
shll
out
xor
rcr
sub
cmc
push
mov
push
xchg
cmc
jae
hlt
fisubl
xchg
rcll
enter
push
or
testb
mov
lock
std
push
and
out
pop
insl
in
lret
and
push
int3
jae
cwtl
pop
neg
subb
stc
pop
dec
imul
sbb
in
mov
scas
mov
mov
outsb
stc
push
test
enter
in
push
into
pop
xchg
sub
add
outsb
hlt
into
xchg
jmp
push
mov
mov
cltd
adc
cwtl
push
sbb
mov
rorl
pop
jmp
cwtl
xchg
and
sahf
rclb
adc
push
aas
movsl
jno
cmp
popf
mov
sbb
cmp
push
in
jne
adc
out
enter
pop
roll
jge
lock
lret
and
xor
stc
adc
inc
jbe
aas
mov
pop
lods
lea
and
idivl
sbb
lret
test
into
mov
mov
popf
adc
add
pop
rcrl
popf
jnp
xor
scas
daa
xor
dec
jns
out
je
sbb
dec
idivl
xchg
push
add
jl
fucom
mov
sti
lcall
add
sub
fstl
sbb
push
jmp
sarb
imull
adc
jle
cmp
sbb
divb
jb
fidivrs
jo
je
pop
mov
mov
xchg
fiadds
push
repnz
out
xor
in
xor
mov
mov
pop
xor
xchg
dec
and
lahf
in
mov
add
into
xchg
test
mov
fwait
adc
xchg
iret
ficoms
in
push
adc
dec
pushf
jne
and
int3
sbb
mov
jg
push
cmp
imul
popl
and
jb
and
cmpsl
mov
xchg
shlb
mov
pusha
popa
stos
jg
jle
jno
mov
jle
stos
imul
pusha
cmp
int
ds
stos
dec
sarl
sbbl
cld
pop
in
mov
repz
mov
mov
dec
rcrb
sti
inc
push
rcrb
sub
cmovge
mov
mov
push
or
pop
pop
leave
ftst
stos
or
push
fs
cmp
mov
dec
out
and
inc
inc
mov
dec
or
out
fisttpll
xor
pandn
lret
jle
jp
repnz
gs
test
jne
push
cmpsl
cmpl
jecxz
xlat
aad
dec
mov
shlb
adc
mov
jb
stos
jmp
xchg
jnp
jno
test
sbb
mov
sub
and
mov
je
mov
pop
adc
sub
and
in
lods
dec
call
dec
andb
jl
out
enter
fidivs
or
leave
ds
push
cwtl
aaa
fsubp
cmp
fadds
movsl
sarb
xchg
nop
cmp
xor
lods
movsb
cmc
pop
jnp
cmc
hlt
loope
aas
data16
push
aad
mov
enter
ds
jge
bndstx
aam
add
inc
gs
cld
dec
or
pop
imul
mov
cmp
ljmp
arpl
ljmp
fsubr
movsl
or
adc
mov
or
repz
fldenv
stos
mov
xchg
insl
mov
lods
test
adc
cs
inc
sbb
inc
mov
mov
sbb
mov
dec
inc
mov
test
jo
jge
outsb
sub
jbe
xlat
mov
inc
loopne
stos
pop
mov
push
cs
xchg
out
mov
cs
outsl
js
inc
cltd
stc
mov
or
pop
pop
pushf
in
scas
xlat
ds
mov
scas
aas
pop
and
push
clc
jb
cmp
fdivrl
pop
mov
scas
aad
dec
jle
stos
fcmovnb
xor
mov
mov
daa
xor
push
adc
xchg
in
add
and
jmp
and
repnz
dec
fidivrs
aad
aaa
xor
stos
xor
mov
or
mov
and
dec
xchg
iret
mov
pop
push
sarb
es
cmp
pop
ds
scas
daa
add
je
mov
jns
sbb
mov
or
xchg
andb
aad
imul
inc
out
mov
call
aaa
fldenv
jge
jne
jns
stc
mov
mov
shrl
in
mov
xorb
test
mov
pop
stos
add
in
lods
sub
sub
inc
jg
les
add
pop
addl
xor
xchg
mov
lea
outsb
out
movsl
iret
push
jns
or
rcrb
dec
inc
mov
fs
mov
fists
dec
movsb
rorl
mov
clc
pushl
mov
aaa
add
mov
ja
pop
xorl
xor
push
inc
cmp
or
xchg
xchg
xor
inc
push
mov
sbb
push
ja
cli
sub
cld
insb
or
cli
les
and
fldt
int
pop
cmpsl
dec
xor
in
fisubrl
cmp
xchg
and
or
xchg
xor
dec
mov
pop
das
mov
dec
rcl
int
jmp
mov
je
pop
lods
cmp
adc
mov
test
push
repz
or
sti
cmpsl
cmc
iret
iret
sarb
jp
cmp
mov
jns
push
xchg
pop
xchg
sub
push
and
loope
fld1
adc
jmp
clc
jb
imul
gs
out
cmpxchg
lods
mov
mov
jb
pop
repnz
mov
lcall
mov
jne
fwait
hlt
add
stos
sbb
pop
xor
pop
pop
inc
jecxz
xchg
cmp
data16
cltd
insb
add
inc
dec
rclb
mov
into
cld
test
push
xchg
adc
xchg
mov
inc
cmp
xor
call
mov
adc
sub
inc
adc
pushf
push
int
aas
mov
dec
testb
sub
jge
add
shl
xor
addl
test
lea
stos
push
psubusb
pop
sub
inc
xor
nop
test
movsb
mov
mov
lods
lidtl
or
adc
in
aas
addb
inc
cltd
push
rcl
push
cmp
aas
jne
sbb
cwtl
mov
arpl
mov
and
int3
xchg
popf
mov
mov
mov
add
mov
xchg
lods
xchg
scas
std
loope
sbb
pop
inc
push
inc
pop
ret
mov
in
lcall
mov
lock
aas
mov
pop
xorb
loope
xor
pop
in
jl
lret
push
enter
inc
inc
add
adc
lret
jmp
cmp
scas
movsb
cli
push
push
lods
push
mov
pop
stos
push
cwtl
xlat
dec
jno
xchg
or
cltd
dec
arpl
dec
arpl
jbe
push
jae
xchg
or
cs
sub
cs
or
jnp
cmpsb
ss
out
adc
ficomps
dec
lods
movsl
fwait
mov
dec
dec
dec
inc
jge
sbbl
cld
filds
enter
rorl
sbb
sbb
sti
imul
stos
cmp
mov
and
arpl
xchg
cltd
bound
movsl
inc
ret
in
jne
daa
dec
sub
sub
mov
hlt
int
xchg
sbb
cltd
roll
xlat
mov
fists
mov
test
testb
cmc
psubq
add
mov
mov
ror
sbb
leave
sub
lea
mov
inc
mov
jecxz
mov
push
call
fdivrl
mov
test
xlat
pop
dec
decl
out
sub
dec
sbb
add
ret
mov
xchg
outsb
mov
fcmovnu
or
dec
aaa
fmull
mov
xlat
mov
jo
je
xlat
cmpsb
pop
sub
outsb
ret
push
xor
into
sub
stos
sbb
cltd
sub
test
lock
adc
cld
out
int3
mov
aas
sub
lea
pop
int3
sub
add
in
xor
and
in
aam
mov
cs
lods
das
mov
inc
popa
cmp
movsb
outsl
and
cmp
cmpsl
lcall
add
bsf
pop
popa
js
popw
mov
inc
dec
xchg
pop
das
mov
jge
pop
test
push
movsl
jge
inc
mov
pop
inc
std
mov
enter
imul
lret
push
mov
xor
push
adc
push
and
adc
loopne
mov
adc
mov
cmp
add
xor
movsl
lods
add
std
or
push
sbb
call
testb
pop
push
lds
lods
mov
aaa
pop
jmp
xor
call
sub
scas
imul
mov
push
or
dec
dec
aad
mov
std
xor
pop
and
xor
mov
addb
mov
fwait
mov
mov
mov
mov
hlt
add
push
sti
dec
cs
and
shrb
push
mov
dec
jbe
cmp
jg
es
jbe
or
sbb
out
sbb
aaa
cli
push
lret
ffreep
rcrl
cmp
xor
lds
lcall
repz
roll
adc
pop
sbb
lods
pop
mov
cmp
or
in
push
rcrb
adc
in
stos
xchg
adc
xchg
pop
sub
testb
mov
mov
outsb
icebp
je
pop
test
pop
lahf
test
adc
nop
dec
test
mov
out
insl
gs
enter
hlt
imul
cmp
dec
or
sbbb
mov
stos
mov
stc
pushf
std
push
add
insb
pop
scas
repnz
dec
rclb
mov
jg
sbb
cmpsl
scas
add
mov
notb
dec
arpl
or
jae
loope
in
xor
ss
shlb
xor
out
test
out
sub
hlt
mov
inc
inc
push
jno
ror
mov
dec
repz
fwait
push
pop
and
push
and
inc
ret
jmp
xchg
xchg
jo
in
cmp
loopne
and
test
cld
popa
sahf
cltd
scas
call
xchg
lret
cltd
xor
pop
std
adc
mov
mov
xor
push
fidivs
jl
leave
jl
or
data16
mov
mov
fwait
jae
idivl
les
or
sub
in
dec
push
pop
mov
ljmp
pop
and
push
xchg
mov
jge
ficomps
js
lret
cmc
add
in
jmp
dec
or
xchg
mov
gs
inc
and
insb
jmp
xchg
stc
sbb
adc
mov
mov
sahf
sub
push
cmp
push
adc
dec
into
push
stos
mov
sub
mov
insb
jp
ljmp
pop
icebp
stos
mov
addb
popf
sub
xor
inc
adcl
nop
cld
dec
dec
jmp
add
sub
dec
xchg
lcall
ret
ficomps
jns
movsl
adc
push
jb
or
sub
cld
imul
inc
push
fcmovnu
mov
ret
push
pusha
stos
fsubrs
out
inc
adcl
aam
pop
imul
fs
stos
dec
fnstsw
hlt
sub
dec
cmp
aam
ja
icebp
outsb
repz
push
fwait
and
xor
push
add
test
nop
imul
cmc
aas
in
add
out
cmp
jnp
xlat
sub
js
jo
int
insl
mov
inc
sub
dec
push
out
out
pop
push
mov
fsubs
pop
fistpl
outsl
dec
pop
cltd
fcoml
dec
imul
fs
mov
dec
movsb
sahf
sub
lea
and
cltd
stos
stos
outsb
mov
inc
mov
add
mov
or
scas
fs
loope
dec
pusha
pushf
call
pop
dec
rol
std
push
jbe
jne
in
xorb
cmp
jb
ret
out
and
fistl
shll
lds
or
outsb
dec
hlt
xchg
xlat
pop
testb
nop
mov
in
sbb
cs
lcall
dec
push
filds
push
out
repz
push
add
out
push
mov
data16
loope
add
pop
xorl
ret
loop
dec
add
out
aad
xchg
sub
fistpll
xchg
cmp
stos
fstps
sahf
loope
jg
sub
leave
dec
insl
xchg
inc
fldt
mov
mov
aas
inc
daa
int
fs
adc
cmp
jg
ds
imul
jns
jmp
bound
cld
pop
jmp
and
lods
sbb
call
mov
jle
fucomp
scas
push
inc
cmp
mov
adc
pop
aaa
icebp
cmp
inc
dec
out
sub
mov
jle
jecxz
adc
jecxz
into
in
test
mov
bound
jo
and
xor
dec
push
or
pop
sahf
repz
ds
pop
shrb
push
xor
push
ret
mov
ret
dec
dec
mov
pop
sub
mov
sbb
jo
sti
xor
popf
idiv
imull
jmp
inc
cmc
mov
bound
pusha
sbb
daa
cmc
rolb
add
decl
push
call
mov
pop
out
aaa
dec
inc
cmp
push
add
test
jb
mulb
sbb
stos
pop
sub
shrd
push
pop
nop
cmp
mov
or
lcall
adc
mov
mov
lret
add
cltd
and
mov
cwtl
adc
lock
movsl
inc
push
xchg
jmp
loop
mov
mov
sbb
sbb
mov
lock
fdivs
mov
xor
pusha
sbbl
inc
mov
and
dec
aas
jno
es
adc
xor
add
cli
cmp
lcall
jle
repnz
in
push
xchg
xchg
cmp
sub
sbb
mov
add
sbb
repz
jecxz
sbb
ret
mov
dec
popf
mov
xchg
bound
out
mov
pop
insb
sub
dec
add
mov
sbb
test
push
jl
fcmovne
add
cmpsl
inc
sarl
ja
mov
in
dec
clc
dec
jl
mov
out
push
jae
jo
mov
push
adc
pop
pop
jp
jmp
out
popf
shlb
loope
je
push
jg
add
xchg
fildl
enter
mov
mov
or
xchg
sub
enter
popa
jecxz
push
stc
and
pop
test
nop
repz
push
mov
cmpsb
test
mov
push
sbb
xchg
mov
fildll
mov
fnsave
push
dec
rcrb
jl
add
bound
inc
pop
stc
pop
test
dec
xorb
test
and
fwait
cmp
outsb
outsb
add
sub
clc
jnp
addr16
cmp
dec
sbb
lcall
mov
pop
push
enter
jmp
test
pusha
loopne
adc
cmp
lahf
nop
lret
jae
mov
sbb
sbb
jmp
insl
scas
cmp
mov
clc
xor
push
arpl
jecxz
in
aad
cmpsb
push
ja
mov
ja
mov
inc
dec
push
pop
xor
out
inc
xchg
sub
aas
repnz
cld
xchg
add
cmp
mov
mov
lahf
rol
data16
fiadds
mov
out
mov
xlat
mov
adc
stos
nop
test
xchg
cld
push
mov
pop
insl
or
stos
mov
sbb
mov
rorl
pop
es
jle
sbb
aaa
mov
jp
dec
ret
adcb
test
xchg
cli
sbb
dec
mov
fdivrl
and
imul
pop
jne
mov
and
ljmp
mov
sub
sbb
xchg
ret
iret
inc
mov
inc
add
jbe
xor
or
cmp
stos
into
insl
jmp
ret
sub
fidivrs
cwtl
cs
inc
stos
pop
leave
fimull
sbb
jns
push
mov
addb
cmp
lahf
jmp
jp
sbb
push
daa
mov
jo
aas
push
std
mov
mov
or
jecxz
into
jns
cmp
or
test
sbb
or
scas
lret
aaa
jmp
shll
div
push
push
xor
dec
adc
add
hlt
rcl
dec
mov
out
into
out
inc
inc
dec
jle
or
sti
xchg
and
mov
test
xor
jns
mov
mov
push
mov
aaa
add
lds
sbb
or
iret
arpl
cmp
ljmp
mov
push
mov
mov
mov
in
pop
mov
pop
mov
aad
test
test
movsl
inc
fnstenv
hlt
push
mov
dec
mov
mov
mov
rcll
mov
ret
out
lea
jb
and
dec
imul
aaa
aaa
mov
ss
rcll
fimuls
scas
bound
sub
sub
lods
jno
sub
and
pop
ret
cmp
or
push
into
mov
ds
lea
sbb
sub
andl
push
sbb
pop
mov
mov
pop
data16
loopne
outsl
arpl
pushf
xor
dec
aad
int3
jo
sub
pop
nop
leave
dec
xor
notl
fdiv
in
arpl
mov
xor
inc
jp
lret
pop
xchg
daa
cwtl
mov
and
mov
xchg
int
fucomi
out
push
adc
xor
fisubrs
nop
test
out
dec
and
pop
inc
xor
pop
xor
mov
lds
sbb
jne
je
jns
sbb
xor
ljmp
push
xchg
icebp
loop
adc
incb
mov
aaa
dec
aam
mov
call
jl
xor
add
movsb
mov
push
cmp
outsl
lock
fidivs
mov
jno
lcall
insl
in
lahf
in
adc
pushf
pop
adc
imul
jp
or
repnz
insb
ret
cmp
imul
aad
test
add
inc
xchg
testb
shl
mov
aaa
lea
repnz
imulb
jp
adc
enter
popa
add
add
pushf
sbb
and
dec
sub
fildll
test
pushf
movsb
xchg
in
mov
and
aad
or
sub
out
and
push
lods
sbb
jo
cltd
mov
stc
repz
xchg
push
ret
add
push
sti
test
push
fistpl
mov
cmp
pushf
adc
rol
inc
jo
add
jns
lret
sbb
gs
push
pop
or
adc
loope
jo
imul
aas
scas
adc
push
adc
test
xchg
xchg
sbb
xchg
jne
push
daa
fdivr
int
test
mov
adc
icebp
sub
adc
inc
mov
cs
dec
push
fimull
insb
pusha
sub
out
aam
fwait
shlb
dec
pop
jp
lods
lcall
test
mov
iret
lret
aas
xor
ret
jle
push
mov
mov
addr16
cmc
jns
sub
test
add
add
mov
shll
adc
in
scas
dec
leave
xor
data16
pop
stos
inc
mov
fsub
inc
push
rcll
mov
test
in
out
mov
aad
push
pop
movsb
mov
sub
and
mov
jge
int
ljmp
dec
adc
cwtl
jne
sub
inc
sub
aas
sub
mov
out
shlb
pop
mov
test
mov
lcall
sbb
ja
add
xor
sbb
xchg
mov
or
adc
and
xor
jne
cli
xor
push
sub
shll
add
out
ds
mov
sbb
mov
push
fcompl
pop
xchg
enter
or
jne
test
loope
fsts
iret
xchg
adc
pop
xchg
sub
fs
xor
mov
lret
adc
jp
xchg
mov
dec
push
pop
shrl
int3
mov
fcomps
mov
xchg
pop
cwtl
push
xchg
cli
fcompl
sub
idivb
mov
xchg
sti
mov
icebp
mov
cmp
xchg
subb
jae
mov
adc
mov
inc
cmp
repnz
iret
sahf
leave
push
loopne
xchg
adc
out
jg
push
dec
jo
ljmp
lock
sub
lret
or
bound
cltd
xor
and
aam
out
dec
outsb
loope
or
push
pop
mov
mov
fimuls
hlt
mov
mov
cmpb
push
popf
cli
mov
sbb
lcall
les
fimuls
xor
pop
adc
pusha
mov
and
xchg
rcl
jo
jne
xor
mov
ja
and
dec
popa
stc
sub
sbb
call
sub
xor
shlb
imull
add
inc
and
daa
mov
dec
mov
mov
push
push
dec
jo
je
mov
or
inc
xor
addr16
cmp
jo
dec
lret
std
and
fbstp
jnp
pushf
fisubl
iret
mov
sub
mov
jno
or
das
jbe
adc
into
xor
fsubrl
add
xlat
inc
mov
xor
inc
add
js
imul
cmc
mov
gs
mov
aas
fildll
jbe
or
adc
inc
or
pop
or
fwait
mov
aas
push
sahf
lods
cmpsb
aam
pop
lret
fisttps
and
loopne
pop
push
jnp
cmp
jge
mov
out
and
cs
mov
jp
dec
out
rcrb
dec
sub
mov
lods
or
sahf
adc
sbbb
jmp
add
dec
inc
jne
fdivp
mov
test
lea
push
ljmp
sub
lahf
lods
ss
pop
gs
cwtl
pop
movsb
sub
loop
add
sub
sub
jmp
jmp
sub
jecxz
jl
cltd
fwait
pop
jbe
mov
dec
sub
idivl
mov
inc
fstps
insb
adcl
mov
sbb
lret
mov
xorb
mov
and
movsl
push
fstpl
test
push
jnp
repz
sti
xchg
adc
or
out
stc
aaa
imul
sbb
mov
dec
pop
mov
shll
pushf
lods
cmc
jmp
aaa
xchg
lret
mov
inc
std
fcmovne
int3
xor
push
xchg
fdivr
push
lock
or
inc
adcb
cltd
dec
cmp
and
stc
or
jg
dec
movsb
das
cmp
and
leave
jp
inc
subl
and
nop
add
mov
mov
mov
fnstenv
cmpsl
insb
adc
movsb
mov
add
je
sub
dec
sbb
jmp
sub
popf
cmpsb
inc
daa
loop
daa
mov
lea
sub
lods
xchg
mov
inc
movsl
add
push
je
mov
adc
cmp
mov
lcall
imul
pusha
dec
xor
aad
jp
lock
ja
pop
ficomps
insb
je
lods
dec
jno
or
lret
adc
mov
in
xchg
or
or
lcall
test
sarl
xchg
xchg
xlat
sub
adc
push
add
arpl
inc
lea
out
cld
imul
into
pop
cld
enter
imul
dec
cmp
cmpsb
push
push
ds
jbe
sub
and
cli
xlat
loope
xchg
out
jmp
roll
mov
dec
add
inc
fisttps
insl
pop
inc
mov
out
sub
pop
or
jnp
hlt
sub
lahf
add
add
inc
fidivrl
sub
ja
jecxz
sbb
or
sub
outsb
inc
imul
scas
adc
sub
ds
test
cmp
jmp
stos
shr
addr16
cld
bound
ret
repnz
in
test
sahf
stc
pusha
dec
rcrb
ds
and
mov
xor
mov
xor
jne
dec
cmpsl
outsb
aaa
xor
rcrl
push
pop
mov
cs
mov
jle
insb
push
or
jle
roll
testl
mov
mov
cmp
jns
jbe
mov
push
push
ret
in
data16
sub
xchg
data16
lcall
fcom
jae
out
jecxz
mov
push
jecxz
mov
rcrb
ljmp
jl
loope
addl
in
out
shr
xchg
repnz
mov
div
pushaw
dec
hlt
jg
sub
mov
cld
aas
testb
xchg
imul
jne
hlt
loopne
mov
cs
add
sbb
cld
mov
iret
jmp
cltd
test
add
jns
aam
data16
jbe
sub
idivl
adc
pop
or
adcb
inc
add
push
outsb
or
es
mov
pop
outsl
adc
pop
pop
or
subl
insl
push
aad
jg
push
pushf
sbb
xor
xchg
das
fs
gs
adc
test
or
adc
sub
and
cmp
adc
stos
mov
iret
push
or
in
jne
scas
or
xlat
or
in
and
jbe
mov
clc
lock
mov
mov
aaa
cmpsb
scas
pop
inc
movsl
ljmp
jg
add
ret
jge
fimull
cmp
out
cmp
test
scas
push
xorb
call
repz
flds
out
ja
sbb
mov
adc
stos
pop
pop
sub
push
cmp
dec
xor
loop
add
repnz
in
test
xor
adc
and
rorl
and
cmp
push
adc
jmp
fistpll
jo
push
inc
jg
jl
dec
data16
test
popf
jecxz
inc
pop
or
gs
hlt
into
mov
js
lods
jle
xor
pop
lret
gs
mov
shrl
sbb
hlt
test
lods
pop
push
orb
or
sub
xor
into
stos
jecxz
mov
adc
sti
sub
xchg
in
xor
movsl
in
arpl
mov
dec
jge
xor
xlat
call
add
out
jmp
imul
push
mov
pusha
xchg
loope
ds
jecxz
xchg
and
icebp
or
or
fdivs
lret
xchg
cmpsb
push
xor
adc
cld
jno
adc
inc
cmpl
fiadds
cmp
je
adc
movsb
sbb
xchg
pop
xchg
xchg
mov
push
sti
xchg
mov
xchg
rcrl
scas
sbb
dec
iret
scas
pop
adc
jmp
pop
js
ljmp
or
jae
add
push
cmc
decl
loop
pop
cmp
mov
insb
push
sbb
jge
sbb
arpl
jnp
mov
je
jb
stos
pop
dec
popf
xor
imul
sbb
inc
lock
cmp
inc
incl
or
insb
jmp
inc
adc
jl
mov
jmp
aaa
mov
insb
lea
mov
je
push
lret
push
aas
cmp
inc
mov
inc
pop
icebp
xor
fsubrp
ljmp
sti
dec
jo
in
clc
push
and
mov
ds
push
jo
clc
adc
sbbb
jb
inc
mov
push
or
push
jle
sub
xchg
pop
stos
scas
cmp
push
dec
test
int
mov
mov
dec
xor
out
sub
stc
xor
rcrb
mov
pop
das
mov
jge
loopne
inc
lea
imul
mov
jnp
xor
les
push
adc
jne
adc
pop
imul
sub
add
pop
dec
sub
push
insb
cmp
imul
aad
mov
xchg
ret
mov
jbe
and
call
ljmp
xlat
cs
lds
add
mulb
ds
mov
jl
push
test
jmp
ret
aas
fdiv
inc
jae
ja
stc
or
dec
jne
add
and
test
popf
add
jnp
mov
and
mov
std
pop
dec
pop
push
cwtl
les
lcall
mov
pop
mov
lret
fldl
sbb
mov
dec
push
clc
pop
mov
push
pextrw
inc
dec
mov
scas
filds
repnz
repnz
inc
inc
cltd
test
iret
inc
cwtl
pushf
in
jl
aas
std
loope
outsl
mov
pop
imul
je
in
in
arpl
xchg
cmpl
je
or
mov
mov
cmp
cmpsb
mov
xchg
adc
rol
or
pop
hlt
sbbl
mov
push
pop
imul
xor
push
addr16
stos
fsubrs
enter
or
shrb
inc
repnz
cli
movsb
push
push
pop
and
stos
loopne
sbb
rclb
push
test
xchg
jle
int3
ret
lea
jl
xchg
movl
dec
ja
and
mov
mov
rcr
inc
in
out
fisttpll
xor
inc
dec
std
xchg
mov
pop
pushl
jae
push
fiadds
icebp
jmp
popf
fsubs
xor
out
movsb
xchg
push
lock
cmp
pop
cmp
insl
mov
mov
cmpsl
mov
xor
jmp
jle
scas
das
lret
popa
lcall
int3
mov
cmpsl
sbb
mov
rorb
int
jecxz
or
andl
test
dec
jg
mov
inc
mov
divb
pushf
xlat
push
and
aas
fmuls
mov
cmpsl
shlb
dec
ficompl
push
lods
xchg
push
shr
sub
push
push
mov
xchg
cli
fsts
pop
rolb
push
leave
sbb
or
fmull
inc
outsl
mov
dec
andb
lahf
or
popa
addr16
xchg
outsb
pop
dec
xor
or
pop
sbb
mov
jb
ror
mov
push
jg
int3
dec
dec
and
enter
sbb
sub
test
or
mov
and
pop
cli
fldl
sub
nop
dec
ret
fdivl
divb
dec
cmp
rcll
dec
cli
sbb
cmc
stc
pop
dec
sbb
xchg
push
outsb
cs
lret
lds
shll
pusha
mov
sbb
xor
test
mov
ss
rcr
out
int3
enter
ss
sub
scas
addr16
cmp
rcll
sbb
out
imul
idivl
xor
in
das
mov
movsl
xlat
addr16
imul
data16
ds
shll
sahf
jae
jne
adc
sbb
ja
mov
adc
popf
repz
js
js
jbe
movsb
mov
cmp
and
lds
add
imul
jnp
cltd
les
xor
jns
in
movsb
sti
scas
sbb
xor
je
repz
mov
stos
xchg
jmp
inc
inc
jb
pop
sbb
pop
pop
push
in
shll
mov
add
ss
data16
shrb
or
das
pushf
mov
mov
pop
cs
pop
mov
pop
and
xor
outsb
mov
xor
das
testb
aas
aam
mov
insb
adc
lods
xchg
lods
add
add
inc
pop
or
fcompl
mov
xor
icebp
testl
clc
adc
stc
gs
cmc
sbb
mov
pop
add
jo
push
push
lahf
fucomp
pop
pop
xchg
sub
xor
inc
test
mov
add
hlt
addr16
inc
inc
cli
xchg
scas
std
mov
xorl
mov
mov
out
or
cmpsb
adc
outsl
fdivs
pop
inc
sbb
sahf
xchg
jle
push
in
xchg
cmpsb
push
xor
add
pop
dec
fs
leave
mov
push
dec
xor
sbb
int
mov
cs
shlb
mov
dec
and
dec
aaa
pop
push
and
lahf
cs
mov
cld
aas
push
cmp
jmp
pushf
xor
xor
dec
or
je
arpl
int
pop
imul
orl
xor
adc
jmp
lret
sub
mov
clc
bound
dec
cmp
mov
leave
movq
xchg
test
js
add
insb
js
out
pushf
rclb
pop
ja
sbb
js
testl
dec
in
test
in
and
mov
jl
sbb
sbb
jno
call
sub
sti
push
adc
daa
adcl
jno
xchg
lcall
push
in
lods
lods
cs
outsl
mov
pusha
pop
rorl
fwait
pop
loopne
xchg
lret
fistps
and
mov
xor
or
jg
lret
jno
shlb
add
pop
adc
or
fistps
cs
mov
dec
add
stos
xor
push
fwait
pop
xchg
iret
adc
pop
rcl
data16
into
jmp
enter
test
dec
xchg
adc
add
iret
cmp
mov
int
scas
dec
xchg
les
pop
fs
jp
mov
js
sub
or
daa
out
fcompl
pand
push
push
mov
mov
jmp
sbb
jecxz
cld
mov
jno
mov
dec
scas
mov
loop
mov
hlt
test
stos
dec
pop
fst
jno
cmp
add
mov
cmpsb
aas
push
imull
fstl
adc
jg
enter
mov
mov
movsb
cmp
mov
scas
push
mov
lahf
mov
xchg
or
jmp
push
hlt
or
fwait
leave
cmp
push
sti
jne
scas
sbb
fcomp
adc
xchg
push
inc
inc
out
enter
icebp
stc
into
cmp
and
das
jl
call
sub
fistps
mov
sti
cmp
out
add
xor
pusha
jbe
mov
jno
dec
or
mov
cmp
inc
sub
push
xchg
arpl
dec
mov
call
add
lahf
cmp
jmp
js
mov
lock
stc
and
or
mov
inc
push
mov
out
mulb
out
rcrb
fldl
mov
cmpsb
or
jns
inc
cmp
mov
mov
loop
xchg
out
inc
daa
pop
out
insl
pop
orl
mov
jmp
push
sub
inc
xchg
inc
xor
add
mov
inc
fsubrs
add
movsl
jb
arpl
mov
xor
out
test
shll
outsb
and
mov
cmc
xchg
in
aaa
jb
pop
loope
jb
xchg
jmp
stos
fisttpll
std
adc
sbb
or
adc
add
mov
cmp
inc
mov
jbe
lea
fbld
leave
push
shll
popf
xor
pop
dec
rorb
mov
inc
sub
ret
icebp
dec
add
inc
adc
sub
cmp
cmp
sub
imul
jo
mov
hlt
mov
xor
mov
movsl
pop
in
pop
cs
sub
xrelease
out
add
and
mov
cwtl
mov
xchg
xchg
adc
pop
ret
xor
mov
mov
push
test
in
addb
test
push
movsl
jae
sbb
ret
inc
mov
adcb
out
sub
cltd
inc
shrl
in
test
cli
iret
fildl
push
xchg
pop
jno
inc
jb
clc
xchg
sysexit
daa
test
mov
and
adc
sub
aad
jp
add
jb,pn
cmp
divb
adc
jle
sbb
push
lock
mov
lds
sbb
pusha
popa
cli
dec
and
lcall
inc
push
in
repz
mov
add
mov
clc
out
xor
outsl
in
mov
pop
arpl
insl
dec
repz
nop
dec
inc
jmp
in
dec
int
inc
jmp
sub
stos
int3
jo
test
nop
mov
aam
or
mov
push
repz
mov
aas
adc
jg
sub
mov
mov
icebp
mov
imul
pop
fstps
pop
or
and
add
mov
mov
sub
insb
push
daa
js
push
lcall
mov
loopne
ffree
aad
lock
mov
lret
push
shrl
xor
imul
mov
mov
pop
movsb
mov
push
jle
or
pop
mov
mov
xchg
ret
or
subb
mov
call
cli
sti
push
push
pusha
fsubs
mov
xor
fdivr
adc
stos
pop
nop
shlb
xchg
cmp
sbb
and
test
loope
xchg
fwait
sbb
pop
cli
xor
jecxz
cmp
call
pop
data16
stos
adc
pop
fprem1
and
add
xor
sub
pushl
mov
in
test
add
and
mov
cmp
jge
sub
ss
mov
mov
mov
inc
fdivl
sbb
mov
adc
cmc
adc
orl
out
jmp
adc
lods
and
outsb
clc
aad
inc
js
in
not
push
adc
pop
jmp
or
lods
in
jl
lret
aam
pusha
push
ret
push
fiadds
sbb
jecxz
mov
cmp
frstor
jns
jo
or
inc
inc
testb
icebp
push
cmpsl
add
push
idivb
xchg
xchg
mov
jp
pop
pop
dec
hlt
data16
test
cmp
cmp
test
xchg
imul
ljmp
out
mov
adc
and
lock
gs
xor
xchg
fstpt
inc
mov
pop
lret
out
sarl
add
adc
shr
int
into
cli
jmp
mov
adc
mov
pop
dec
fdivr
cmp
cmp
inc
dec
pushf
mov
pop
clc
jg
aas
sbb
and
cmp
outsb
xchg
movsl
push
cmp
shll
test
lret
fcomps
adc
addr16
and
in
jo
sub
std
aas
and
imul
sbb
add
pop
or
fdivrs
je
inc
add
lret
sbb
jmp
or
sahf
sub
js
dec
push
outsl
and
scas
dec
ret
add
aas
sbb
dec
and
xchg
xor
or
adc
cmpsl
shlb
pop
xchg
shl
mov
xor
adc
sahf
sub
sahf
pushl
aad
data16
push
bound
fisubl
jae
xchg
loope
insb
sahf
dec
jns
rcrb
repz
out
in
imul
mov
movsl
mov
xchg
mov
mov
add
bound
mov
movsl
xor
leave
cltd
mov
dec
add
out
ds
cmp
addr16
add
imul
fildl
xor
outsb
inc
mov
pop
rcr
sub
loopne
jle
xor
js
push
and
test
adc
push
mov
or
sub
adc
pop
xor
mov
pop
jb
inc
xchg
and
push
fstps
fdivrs
cmp
push
push
add
jg
and
jl
and
cmc
mov
daa
sub
mov
jp
xchg
rcll
cs
cli
scas
sub
mov
scas
or
pop
lret
cmpsl
or
movsb
cwtl
arpl
xchg
inc
or
adc
jl
pushf
in
aaa
nop
out
fs
test
xchg
ds
lcall
sbb
or
pop
mov
lret
jp
in
es
test
cmpsl
inc
push
sti
xchg
enter
and
lahf
lds
mov
mov
jge
lahf
das
cmc
ficomps
repnz
fwait
inc
shr
pop
and
xor
fwait
and
adc
leave
mov
mov
ss
cmpsb
push
xor
mov
fwait
out
inc
xlat
sbb
aas
andl
mov
dec
es
out
pop
mov
add
mov
jns
adc
pushf
rcrl
cwtl
pop
jp
pop
outsl
sahf
aaa
imul
dec
pusha
lds
push
std
inc
pop
or
jp
fiaddl
and
cmp
jb
insb
xchg
repz
xor
js
roll
sti
sub
adc
js
mov
add
mov
test
dec
in
inc
test
dec
sub
lret
ds
dec
dec
mov
inc
cmpsl
jne
aas
enter
mov
mov
enter
mov
mov
dec
inc
rcll
push
mov
cmc
sub
fldpi
shl
jb
popf
ljmp
lea
xor
mov
pop
lods
and
inc
mov
lret
gs
add
inc
das
jo
rcrl
sub
aad
pcmpgtw
and
mov
xor
fs
sub
or
das
addb
cld
xor
ja
inc
out
bound
fsubs
int3
xor
ja
or
adc
mov
sbbl
jnp
sub
or
lahf
push
inc
sub
xor
popf
leave
cmpsl
fwait
pop
cs
cmp
push
aam
jno
loope
scas
cmpsl
aad
ljmp
cmp
and
in
sub
sbb
cmc
mov
add
repz
out
ja
imul
push
cmp
sbb
xchg
xchg
adc
into
out
xchg
xlat
stos
push
hlt
aas
jno
movsb
pusha
je
push
inc
js
arpl
sbb
xor
xor
stos
xor
pop
inc
xchg
inc
ret
jae
jmp
insl
clc
sbb
bound
popa
into
in
mov
jno
xchg
movb
leave
fisttpll
test
out
inc
andl
iret
xchg
aaa
out
daa
sub
ffree
mov
adc
xor
or
jle
xor
imul
cmp
into
and
std
xorb
int
cltd
jo
cwtl
stos
aaa
sbb
shll
insb
iret
repnz
push
out
push
loope
dec
mov
or
test
into
jg
and
pop
or
pshufw
mov
js
jg
testl
mul
faddp
or
pushf
push
loop
dec
mov
std
mov
adc
pushf
ds
loopne
adcb
ds
sub
icebp
mov
jbe
inc
mov
dec
negb
push
jmp
ret
inc
sbb
or
mov
inc
lods
jg
mov
ja
dec
pop
imul
loop
adc
inc
sub
adc
push
adc
xchg
aam
scas
push
jb
insb
jmp
mov
es
ret
out
test
aaa
loope
add
push
jge
cwtl
push
lret
fstpt
mov
pop
outsb
or
xor
call
mov
mov
and
ret
jp
repz
pop
cmp
nop
shll
cmp
jb
sub
mov
leave
call
cwtl
popa
lahf
adc
sbb
stc
or
jno
jno
cmpsb
or
loopne
pop
inc
adcl
rclb
sbbl
xchg
xchg
or
push
jb
sbb
sahf
fnstenv
sub
xchg
sti
or
arpl
pop
repnz
adc
cmpsb
xchg
mov
stos
and
or
mov
jbe
pop
ss
fnsave
xchg
sbb
call
or
int3
call
out
xorl
jbe
js
sub
push
lock
cmp
or
jo
das
pushf
nop
insl
push
and
jns
test
mov
bnd
and
jp
popf
mov
mov
jnp
xchg
mov
insl
add
daa
shrl
std
loop
and
add
pop
jbe
jg
cmp
xor
xchg
xor
mov
lds
jl
pop
xchg
scas
jp
out
push
scas
mov
push
ret
xor
les
aas
or
arpl
pop
dec
in
mov
cmpsb
scas
adc
mov
mov
mov
jp
push
mov
adc
ret
mov
rorl
scas
cmp
test
pop
pop
mov
jae
mov
fcmovbe
rcrb
arpl
ja
inc
ret
and
lahf
ret
cmc
cwtl
mov
dec
iret
loope
pop
push
mov
and
sbb
push
sbbb
add
xchg
shlb
bound
sub
scas
test
movsl
xlat
adc
mov
repz
and
xchg
jmp
pop
push
fnstcw
mov
jle
lret
sub
loope
popw
pop
popa
ret
mov
mov
dec
sbb
cld
pop
pop
pop
mov
or
dec
jae
js
sar
xor
cmpsb
js
lret
lock
imul
lahf
jns
sarl
mov
loopne
pusha
ficomps
lock
xorb
aaa
mov
or
push
fisubs
and
ficompl
or
shlb
add
inc
outsl
cld
rcrb
jl
push
ss
lahf
cmpsb
lret
popa
dec
pop
ds
fisttpl
enter
dec
dec
aam
adc
xchg
jle
cmp
out
mov
aas
test
dec
test
in
inc
sub
in
rol
jp
iret
rcr
les
jae
sbb
push
and
loop
rorl
mov
mov
dec
insb
hlt
cwtl
ss
jae
mov
push
mov
sub
inc
add
jo
pop
cld
stos
hlt
jnp
or
mov
jge
xchg
xchg
hlt
movsb
fcomp
jp
mov
cltd
mov
jb
pop
imul
and
inc
or
iret
adc
fldl
pusha
push
orb
push
mov
cwtl
and
cmpsb
inc
fwait
daa
ljmp
cmpsl
sti
arpl
xor
dec
adc
in
xor
mov
test
jae
fisttpl
mov
dec
call
clc
xchg
mov
pop
mov
addb
sti
jno
enter
adc
fsubl
insb
cmp
cmp
pop
pop
aam
movsb
loopne
gs
cmpl
adc
and
hlt
bound
lock
sbb
xor
dec
enter
in
dec
pushf
mov
movb
push
mov
xor
push
in
lods
lret
sarl
scas
jnp
cmp
mov
pop
pop
push
repz
dec
xchg
mov
mov
idivl
push
mov
divl
not
xchg
imul
cs
inc
popa
sbb
mov
popa
cli
inc
addb
add
cmp
inc
adc
sahf
fsts
add
mov
add
or
das
push
int
jnp
dec
jo
push
adc
cmp
out
std
test
addr16
sbb
shl
jmp
push
dec
push
lea
lret
mov
sub
mov
aas
cmp
cmp
mov
pop
out
pop
popa
popf
sub
ret
and
mov
or
dec
mov
pop
es
sbb
cmp
or
les
js
shll
add
js
dec
xchg
jb
push
pop
call
dec
aaa
lods
lods
sbb
shr
stc
cmp
push
add
daa
jo
mov
paddw
scas
jns
jg
decl
stos
idivb
mov
fsubs
add
hlt
pop
les
pop
xlat
fwait
pop
popa
es
mov
ljmp
dec
out
sub
xor
fbstp
xchg
cwtl
mov
jp
cmpsl
je
stc
cltd
popf
cli
fidivs
and
cmpsl
and
jnp
push
hlt
or
adc
in
stc
test
adc
or
pop
fists
jmp
loope
xor
cmp
dec
orl
mov
push
push
adc
cli
iret
fstp
jnp
push
pop
ja
xchg
fisttps
int
stos
in
loop
lods
notb
or
push
push
lcall
aas
repz
inc
or
sub
adc
fldt
push
lock
ja
adc
ds
add
popa
jp
repz
int3
pop
mov
fstps
dec
or
pushf
rclb
popa
xchg
jo
inc
call
movb
repz
jb
jmp
inc
and
bound
sahf
lret
fnstsw
loop
stc
ret
lret
mov
jns
inc
jbe
pop
in
xchg
xor
in
sti
mov
mov
aad
cmp
testb
sbb
mov
sub
hlt
xor
adc
test
mov
and
xchg
inc
je
mov
mov
addb
std
fmuls
lock
and
jmp
jmp
icebp
pop
aas
lods
pusha
sub
test
stc
pop
std
in
arpl
jmp
in
mov
sub
jne
iret
xor
out
lock
mov
stos
fcompl
es
in
sbb
outsl
out
bound
sbb
bound
and
xchg
leave
dec
sub
xlat
cld
movsl
outsb
xchg
add
sub
shl
xchg
cmpsb
mov
sbb
jmp
and
js
xor
mov
addr16
jo
add
inc
lcall
mov
sahf
dec
xchg
or
ret
lret
pusha
cmp
scas
or
mov
test
mulb
inc
xchg
dec
sub
test
sub
in
cmpb
xchg
ss
lods
lcall
pop
mov
ja
adc
shll
aad
icebp
fnstenv
xor
xlat
or
push
jmp
popa
xchg
fmul
xor
mov
cmp
in
scas
mov
idivl
out
outsb
xchg
cmpsb
adc
xchg
mov
xor
jne
testb
xor
adc
inc
cld
mov
or
lock
fwait
loop
testb
inc
imul
pop
dec
sbb
lret
jg
dec
jbe
insl
lods
mov
cmp
and
arpl
in
enter
xor
sti
mov
out
or
jecxz
out
loopne
cmc
dec
adc
shlb
leave
xlat
dec
out
cmpsl
popa
mov
cmp
xchg
lcall
xchg
push
imulb
pop
gs
cld
aas
adc
jl
fcoml
push
lret
sub
jns
adcb
sub
mov
pop
sub
push
dec
or
leave
iret
pop
sbb
jnp
aaa
add
adc
pop
push
sbb
call
dec
aas
dec
push
sbb
scas
adc
enter
test
and
jp
and
jae
jb
les
mov
jp
push
scas
xchg
mov
inc
push
jg
add
mov
arpl
and
xchg
in
aaa
in
xor
pusha
mov
sub
mov
push
push
bound
into
xchg
adc
xchg
cmc
cmp
push
jp
fsubr
and
sub
roll
lock
lock
ret
leave
mov
lcall
pop
xchg
cmpsb
jecxz
pop
dec
lds
dec
out
nop
mov
sub
xor
push
inc
mov
test
and
mov
stos
cld
jns
es
mov
pop
xlat
sub
ljmp
repz
pop
fstps
test
push
in
shll
cs
pop
fs
jo
cli
xchg
out
dec
cli
inc
rcr
orl
aad
fsubrs
imul
js
or
scas
dec
cmc
fcmovnu
clc
xchg
les
mov
clc
orl
cmc
leave
and
jp
stos
daa
outsl
or
and
dec
jg
xchg
ret
cli
loopne
movsl
ret
loop
mov
call
or
mov
jl
xchg
mov
aam
loop
push
mov
adc
hlt
jo
dec
pushf
mov
cmp
popf
sarl
pushf
ret
push
or
fiadds
aas
lret
push
ja
rcll
in
adc
mov
xlat
mov
js
and
scas
or
xor
in
push
mov
mov
scas
or
insl
in
fwait
aad
test
push
push
mov
push
fstl
aas
pushf
pop
mov
add
movsb
outsl
add
xchg
push
subb
rorb
pop
jecxz
and
xor
adc
inc
into
sbb
jle
mov
pusha
roll
push
push
enter
jno
sub
dec
push
cmpl
mov
cwtl
daa
ret
inc
rorb
loopne
imul
mov
mov
mov
xchg
xor
aas
push
out
dec
pop
xlat
sahf
ss
ss
sbb
dec
lcall
jg
cmovs
popa
or
xchg
mov
in
xor
push
icebp
fyl2x
into
push
push
mov
loop
mov
push
outsl
inc
and
or
fs
dec
cmp
dec
notl
mov
cmp
filds
in
rcrl
std
inc
mov
xor
daa
mov
add
pop
xlat
cmp
es
or
mov
jmp
or
lret
testl
push
inc
movb
dec
add
arpl
mov
icebp
stc
das
jb
lret
lret
in
jnp
jne
xchg
mov
lods
outsb
testl
mov
or
xorb
cltd
adc
mov
inc
mov
push
enter
lods
scas
mov
jp
jg
cwtl
inc
sub
lods
jle
cmp
lds
les
imul
mov
fnstcw
xchg
loop
dec
imul
maskmovq
testl
hlt
cmp
movl
lea
cmp
jmp
xor
xchg
pop
lods
or
dec
xlat
shrl
ljmp
mov
sub
inc
and
loope
cmp
pop
bound
dec
sbb
fdivrs
loope
call
leave
push
mov
jo
xchg
cmp
push
mov
outsb
adcl
orb
or
add
in
cmp
mov
movsb
xchg
pop
pmullw
test
push
or
mov
sbb
nop
sub
cmp
sub
cli
jo
and
mov
add
in
scas
mov
or
mov
push
cmc
fistl
ljmp
jno
scas
jns
jnp
mov
ret
push
dec
push
into
popa
pop
xchg
fiadds
push
arpl
mov
mov
aam
leave
in
nop
add
orb
sbb
dec
xor
inc
ljmp
js
pop
push
out
lea
ret
jl
cmp
mov
out
ljmp
jb
mov
sub
cltd
call
repz
dec
test
daa
shrb
arpl
test
pop
dec
mov
sbbl
mov
aam
mov
hlt
jp
sbb
mov
dec
int3
ror
dec
inc
cld
push
add
and
repz
fisttps
lods
add
mov
add
divb
lea
sub
add
cli
pop
bound
outsb
mov
cmp
xlat
mov
sbb
jns
adc
push
inc
ljmp
add
sub
xor
xor
and
sti
lret
adcl
jno
data16
subb
sub
sbb
std
xchg
popa
adcb
adc
mov
shlb
mov
test
daa
mov
das
or
ljmp
pop
jl
push
ret
mov
push
subl
loopne
popa
stc
adc
mov
xor
push
test
xor
sub
imulb
movsl
cmpsl
cmp
mov
cmp
jge
clc
pop
outsl
sti
pop
int3
sub
adc
es
jne
popf
mov
pushf
loop
inc
pop
out
xor
jg
cs
sub
sahf
imul
pop
dec
dec
jmp
gs
in
imul
push
pop
ljmp
mov
loopne
push
lret
mov
sti
cmc
mov
ret
icebp
add
add
ds
in
fmull
das
add
nop
cmp
ja
shl
aas
cmp
push
int
fdivrp
sbb
imul
pop
adc
cltd
sub
inc
push
or
inc
imul
ljmp
das
dec
icebp
jnp
arpl
stc
push
sarb
scas
loope
xor
push
lods
or
inc
loope
jg
or
hlt
lahf
ror
sub
hlt
cmp
stos
aaa
adc
lock
sbb
mov
pop
mov
pop
lock
orps
mov
adc
push
loopne
ss
stc
iret
jno
call
sub
mov
vmwrite
shll
jns
xchg
sbb
mov
icebp
into
in
sbb
pop
in
out
cltd
mov
dec
mov
aas
lret
push
negb
clc
mov
mov
xor
push
sbb
cld
push
pushf
cmp
movsl
mov
sbb
jg
outsl
sbb
inc
mov
and
ss
adcb
fsubrl
xor
int3
gs
rolb
sub
call
mov
aas
das
shll
dec
cltd
insl
cmpsl
frstor
mov
lahf
mov
hlt
out
inc
push
jecxz
or
std
adc
aas
cld
jne
jge
xchg
movsl
cmp
push
orb
popa
sub
outsb
mov
pushf
cmc
and
lock
jp
fisubrl
cli
fimull
mov
ss
aad
enter
hlt
xchg
sub
out
sbb
and
popf
gs
jecxz
fwait
push
pop
push
mov
shlb
lods
lret
daa
hlt
pop
xor
ret
popa
loope
adc
xchg
inc
pop
rorb
inc
out
adc
xchg
jnp
xchg
xchg
scas
popa
or
stc
jge
pop
aad
inc
dec
sbb
loopne
lods
mov
jle
mov
adc
frstor
inc
repz
popl
sbb
ds
mov
pop
add
adc
adcb
pusha
loope
xchg
xor
ss
movsb
push
inc
cs
movsb
mov
lcall
xchg
enter
cmp
aas
mov
sub
les
push
test
and
repz
push
jmp
mov
lret
push
imul
add
pop
inc
xor
push
xorb
adc
jmp
lods
call
je
sub
push
fsubl
je
xor
and
mov
jo
sti
jg
stos
ja
xlat
inc
adc
inc
std
cmp
mov
add
jmp
jmp
and
mov
es
loope
adc
inc
jno
hlt
jl
add
inc
mov
int
xor
in
mov
mov
stc
cmp
mov
add
rorl
fistpl
pop
test
jb
mov
dec
or
cs
xor
dec
and
cmp
out
mov
sub
sub
dec
pop
loope
inc
mov
testl
or
adc
lea
neg
imul
movsb
and
sbb
fisubrl
inc
adc
adc
into
mov
fbstp
jne
clc
jae
add
add
in
jb
sarb
iret
nop
incl
and
inc
es
aas
mov
jnp
ficoms
cmpl
push
je
aad
mov
cmc
inc
pop
adc
sub
mov
push
adc
jmp
mov
mov
mov
ljmp
insl
sbb
lahf
jp
rolb
sbb
xor
xor
mov
out
jnp
je
out
sti
push
sub
scas
or
jle
mov
nop
add
cs
xchg
mov
outsb
push
imul
cmpsb
mov
xchg
stos
xor
xchg
imulb
ret
in
mov
lds
nop
push
ret
sbb
lds
mov
out
cmp
testb
xor
ret
sti
jp
in
mov
mov
cmp
xchg
push
cs
cmp
loope
dec
and
and
add
and
inc
mov
push
cmpsb
and
sbbb
out
das
or
pop
jb
xchg
in
mov
cmp
mov
lret
imulb
aam
cltd
xor
stos
adc
mov
leave
pop
andb
and
bound
mov
fwait
iret
mov
push
dec
pop
xchg
scas
jmp
lods
call
in
pop
inc
pop
dec
mov
out
and
pop
push
xchg
js
enter
ret
pop
sbb
mov
int3
mov
cmpsb
jae
and
stos
fists
nop
loope
jno
ja
cmp
lds
mov
rorl
push
or
cmp
cmp
ljmp
cwtl
sbb
cs
js
add
shll
movsl
push
dec
movsl
divb
aas
lret
cmc
push
es
sbb
push
sbb
sub
mov
and
inc
cs
cltd
inc
inc
cwtl
test
pop
gs
repz
pushf
add
and
inc
fistpll
out
js
pop
pop
orl
xadd
cmpsb
ror
sub
xor
insl
popf
in
fst
and
push
movl
fwait
dec
aam
test
mov
cmpsb
loope
dec
cmpsb
mov
pop
mov
gs
test
cld
out
loop
xchg
testl
stos
jb
cmp
out
mov
in
sub
mov
and
and
out
xchg
and
add
inc
cmc
mov
push
idivb
cmp
shr
mov
insl
rcl
loop
addr16
xchg
adc
jns
das
fcoms
imul
aas
cmp
cmp
jns
fidivrl
in
mov
pusha
pushl
xlat
pop
andl
lea
daa
in
jbe
incb
xchg
pop
aas
test
repz
push
daa
lret
dec
jmp
ds
rcrl
shll
jo
jno
dec
push
cmp
dec
in
bnd
mov
cmpsl
popa
cmp
mov
test
jnp
dec
mov
mov
loopne
sbb
mov
arpl
test
inc
push
mov
mov
dec
arpl
aaa
lods
mov
push
mov
pop
mov
test
leave
jmp
into
mov
outsl
add
and
pop
cwtl
iret
or
shrb
shrb
sbb
les
cmp
fnstsw
pop
inc
pop
in
addr16
push
lret
into
and
jae
mov
sbb
mov
xor
invd
pop
gs
jl
lods
sti
or
insl
outsb
das
vpsrlq
insb
neg
adc
jno
and
xor
insb
mov
shll
test
mov
jle
iret
push
add
xchg
imull
push
jecxz
ret
rolb
xchg
sbbb
dec
fstps
and
mov
insl
ret
xchg
fsubp
rep
dec
lods
dec
xchg
clc
dec
lods
aam
pop
or
push
ss
sbb
leave
mov
aaa
dec
dec
call
xlat
loopne
mov
into
push
mov
and
cltd
mov
xchg
adc
jp
sbb
aas
aaa
jecxz
filds
mov
sbb
adcl
popl
mov
loope
adc
inc
inc
mov
je
push
add
xlat
push
mov
xchg
add
jb
testb
jne
adc
ljmp
lahf
cmpsl
sbb
inc
mov
jle
xchg
pop
pop
sbb
ret
iret
int
jge
push
into
inc
xchg
test
jle
mov
movsb
in
jbe
and
repz
ds
sub
loop
mov
dec
push
in
push
sbb
daa
movsl
in
scas
jge
sbb
fisttpll
dec
push
incb
cs
lods
mov
push
lds
cltd
out
mov
push
lock
repz
test
sarb
data16
lds
rcll
xor
sub
pop
fiadds
test
xchg
xchg
dec
or
std
jp
sub
sahf
data16
and
clc
xor
loop
add
fcom
rorl
pop
or
mov
mov
pop
mov
cmpb
pop
sub
std
cld
sbb
lds
mov
aaa
sub
inc
stc
sbb
insl
mov
push
push
and
add
cmp
dec
add
scas
xor
fisubrs
mov
scas
jle
lock
leave
int
and
lds
or
jg
cltd
pushf
sbb
shll
mov
xchg
dec
or
jl
jmp
mov
or
jmp
lahf
pop
or
push
add
or
mov
iret
jb
loope
enter
dec
test
inc
cmp
js
into
mov
je
or
mov
push
bound
add
lret
stos
mov
mov
lods
cmp
mov
roll
lods
cmp
pop
cli
inc
loope
push
lret
or
inc
icebp
or
mov
lea
fistps
fidivl
xlat
fldcw
data16
roll
repz
and
rcr
push
mov
and
cld
repnz
mov
mov
shr
movsb
or
sub
pop
inc
mov
mov
mov
fisubrs
mov
pushf
push
jmp
adc
test
sbb
pop
cmp
cmc
stos
testb
rcr
call
inc
aad
dec
adc
das
jle
out
ret
pop
aaa
aas
sub
jne
mov
and
pop
cs
adc
insb
mov
inc
xchg
and
imul
push
stos
sbb
xor
jno
add
and
sbb
cmp
inc
sub
pop
xor
push
imul
push
test
and
add
repz
and
mov
hlt
inc
rorl
mov
pusha
lods
in
fwait
bound
push
sbb
mov
mov
push
rcll
stc
mov
mov
idiv
jp
add
popa
hlt
or
lret
lods
pop
addr16
pop
or
lock
loopne
xor
push
pop
mov
jmp
ret
inc
shrb
sbb
mov
push
loope
jnp
push
mov
xchg
out
inc
sub
sahf
sub
xchg
xor
imul
out
sbb
add
mov
pusha
out
mov
out
shrb
insl
pushf
pop
add
xchg
jae
into
cmp
stc
jp
jnp
arpl
push
mov
add
out
add
lock
fsubl
jmp
push
pop
fucomi
xor
add
lahf
dec
cmpsb
test
pop
xchg
lret
cmp
mov
dec
daa
xchg
or
loopne
or
sbb
push
xor
jnp
xchg
repz
mov
push
test
adc
pop
pop
xchg
gs
xchg
inc
mov
lods
cmp
les
adc
enter
test
imull
jo
je
lock
add
pop
sbb
mov
test
xchg
clc
jg
jae
fisubrl
sub
sarb
mov
ljmp
mov
sub
adc
inc
fisttpll
pop
inc
adc
out
xor
in
pop
aad
adc
test
clc
jmp
xchg
mov
inc
inc
xchg
flds
xchg
jno
sbb
repz
adc
dec
mov
repz
es
pop
fwait
or
loop
fcoml
jp
pop
insl
and
ds
negb
add
jg
icebp
ret
ljmp
mov
or
out
sbb
adc
push
push
cmc
or
or
rcl
mov
call
or
insb
fdivl
add
mov
xchg
jae
jnp
sbb
lea
cs
mov
mov
push
test
sbb
rcrl
icebp
pushf
addb
enter
test
dec
push
mov
fcomps
popa
imul
fwait
inc
iret
xchg
push
fwait
push
mov
out
inc
lahf
out
cmp
xchg
in
int
cltd
push
outsl
jb
int3
lds
add
call
repnz
mov
xchg
mov
ret
lds
outsb
and
pop
sub
ret
push
cltd
xchg
lcall
in
mov
in
mov
gs
aam
xor
mov
sbb
adc
gs
jb
xor
inc
mov
fiaddl
lods
imul
jne
push
mov
ret
cwtl
aaa
inc
mov
inc
ficompl
inc
mov
movsl
repnz
jmp
or
mov
xchg
pop
xchg
cmp
xchg
mov
popa
scas
dec
cltd
push
push
lcall
mov
nop
lcall
fbstp
lods
mov
ret
dec
popf
xor
xchg
push
cmpsl
cmp
inc
shll
test
push
jns
in
cmp
aam
mov
or
jbe
in
loop
mov
loop
sbb
push
push
push
jo
ffreep
std
sbb
mov
mov
fdivs
sub
mov
icebp
adc
push
iret
sbbl
or
mov
xchg
mov
jo
leave
scas
jmp
ja
mov
and
ret
fnsave
xchg
or
iret
push
jge
paddusb
mov
dec
pop
dec
bound
lahf
push
arpl
sub
cwtl
xor
pop
jno
fadds
push
sub
dec
sbb
hlt
xlat
mov
lock
sub
mov
cmpsb
and
jb,pn
adc
pop
lock
inc
mov
pop
xchg
test
or
movsb
cli
lock
mov
xlat
jns
jg
jb
aam
push
ficomps
insl
pop
inc
mov
cmp
popa
fldt
xchg
test
pop
xor
stos
push
mov
xchg
stc
leavew
stos
dec
push
cmp
test
mov
outsb
repz
mov
or
xchg
pop
pop
shr
xchg
add
fildl
test
jg
xchg
inc
imul
push
fwait
in
mov
leave
push
xor
dec
leave
fdivl
mov
mov
or
scas
pop
test
jns
ja
cltd
int
and
adc
xchg
loopne
rcll
pop
xchg
stos
jecxz
inc
sbb
inc
sbb
scas
push
mov
mov
pop
inc
addl
inc
fwait
aas
movsl
jecxz
xor
call
lds
rclb
push
add
shlb
dec
jae
ficompl
jb
xchg
or
mov
jp
outsl
add
pushf
push
fwait
cmpsb
xor
push
dec
gs
xor
xchg
popa
xor
adc
fdivrs
or
xor
pop
jl
iret
cs
or
jp
cmp
cmpsb
sub
sbb
mov
push
pusha
push
or
xor
sahf
xchg
inc
cmp
jno
std
int
mov
adc
orb
sbb
mov
sub
jle
jmp
cmpsb
add
scas
cld
fstpl
in
inc
mov
std
or
mov
int
outsb
enter
dec
xor
sbb
adc
ja
and
loop
jge
aas
and
mov
dec
pop
jecxz
call
std
cmpsb
frstor
pop
and
push
push
xchg
or
sahf
or
or
int3
lret
jnp
mov
jne
fsubs
pushf
mov
stos
jmp
cmpl
test
adc
jp
lret
cmp
lock
mov
lret
fdiv
adc
push
outsl
cmpsb
adc
add
mov
xchg
or
psraw
pushf
mov
dec
in
xchg
in
notb
loopne
adc
movhps
in
push
mov
sub
inc
mov
dec
jmp
adc
mov
enter
jp
scas
ja
mov
push
subb
lret
inc
mov
xor
orb
push
jecxz
xchg
jp
test
test
mov
scas
push
leave
scas
xchg
inc
ss
outsb
out
xchg
fldl
sub
push
jno
push
faddl
mov
sub
dec
rorb
jne
in
pop
lahf
insb
xchg
lret
cltd
pop
popa
mov
or
pusha
mov
incl
adc
pop
sbb
dec
jne
inc
mov
add
mov
mov
mov
cmp
aad
cmp
mov
in
push
rcrb
adc
addr16
mov
movb
xor
inc
ret
lret
sub
mov
adc
sarb
sub
ja
fwait
jp
adc
aad
push
es
loope
add
shll
gs
mov
imul
lods
cmp
std
push
sub
pop
xor
fiadds
cmp
mov
cmpsl
cs
outsl
rclb
scas
sar
test
pop
or
lret
jb
rclb
stos
test
test
lret
insl
movsb
mov
inc
jb
in
sub
test
fimull
pusha
addl
xor
loopne
xor
or
cmp
scas
mov
test
push
add
ljmp
ds
jno
loop
movsb
mov
in
mov
adc
inc
cltd
lahf
mov
shrb
xchg
xchg
xchg
pusha
fwait
rolb
nop
dec
fisubrl
and
mov
test
xor
mov
pop
mov
xchg
mov
xchg
jl
dec
inc
int3
pop
das
sub
push
in
jns
nop
mov
inc
sbbb
imul
cltd
movsl
adc
subb
aaa
push
je
xlat
mov
shrb
fldcw
mov
mov
adc
popa
push
aas
inc
lock
nop
add
fists
std
add
mov
jo
gs
jns
mov
xchg
aaa
lea
sti
fs
xor
jge
xorl
inc
insl
std
xchg
xor
pop
cmp
dec
jle
pop
cmp
insl
js
ljmp
movsl
cmp
out
and
repz
add
mov
pushf
jo
arpl
orl
sub
adc
loope
mov
dec
mov
out
mov
xchg
lahf
xchg
mov
inc
ja
lea
xchg
and
add
or
out
rcl
sub
cmc
xor
in
jb
addl
xchg
sub
lahf
sub
xchg
lds
mov
enter
or
inc
mov
out
ljmp
and
outsb
fsts
pop
in
mov
inc
in
mov
jbe
fadd
add
ss
lods
sub
orl
dec
lea
rorl
inc
adc
xor
lods
les
xchg
jl
lock
sub
mov
xchg
cs
sub
add
push
nop
rcl
xor
bnd
mov
rsm
nop
lods
sarl
pop
add
or
jp
shrl
andb
dec
mov
xchg
sub
jne
and
xchg
jecxz
and
scas
test
fs
mov
std
xchg
fdivl
fisubl
pop
bnd
data16
scas
cld
or
mov
or
pop
rcll
iret
fisubl
outsb
out
jne
in
fiaddl
imul
cmpsl
fxch
jnp
mov
dec
xor
pop
bound
inc
mov
add
stos
sub
mov
push
push
dec
mov
adc
enter
cmp
jae
and
xor
mulps
sahf
imul
shrb
adc
dec
in
pop
jmp
or
sti
sbb
stc
popf
cld
add
cmc
adc
test
loop
popf
fwait
xor
mov
test
movsl
call
daa
ficoms
adc
jae
and
xor
adc
jg
push
fisubrl
push
iret
or
jmp
sub
es
mov
in
sub
lret
aam
pushf
stos
in
adc
fnstenv
jns
mov
xor
fs
je
cmp
outsl
push
mov
lcall
pop
pop
gs
jo
aam
lret
loop
add
adc
nop
jo
fwait
dec
xchg
pop
int3
sbb
jne
repz
and
mov
add
xor
or
push
stc
rorl
in
push
leave
mov
or
inc
ljmp
pop
ss
popa
test
dec
imul
js
cmp
mov
jns
push
rclb
sbb
xchg
pop
dec
dec
or
or
mov
roll
mov
cmp
ds
rorl
out
fsubs
stc
push
push
iret
sub
and
push
int
jl
and
or
inc
sbb
inc
sahf
mov
dec
inc
mov
sbb
push
imul
xor
xchg
lock
xor
xchg
call
mov
movsb
mov
lods
sub
hlt
arpl
xchg
lret
rclb
enter
fdiv
push
pop
push
jg
loop
hlt
sub
mov
cmp
xor
adc
and
orb
and
mov
push
int
or
push
ljmp
adc
dec
sbb
sub
jp
popa
xor
cmpsb
xor
push
out
les
aad
sub
pop
gs
push
inc
fcoms
in
scas
fbstp
nop
je
ret
bound
dec
push
fld
and
inc
lods
xchg
ret
jmp
cmp
imul
xlat
cmp
xlat
mov
jmp
clc
sbb
or
add
cmp
push
scas
lret
adc
xchg
repz
add
jge
jge
jns
stos
out
mov
jp
jle
pop
add
ljmp
cmc
dec
push
pop
inc
mov
cli
lea
lahf
in
ret
xchg
add
pop
ret
fdivl
adc
das
mov
test
xor
shll
xlat
sub
push
inc
jle
out
pop
inc
xchg
js
push
sub
aam
and
clc
repz
pushf
repz
add
aas
inc
insl
jmp
fildl
aaa
scas
mov
and
cmp
pop
scas
jae,pn
in
ss
bound
dec
test
test
add
cmc
push
out
dec
mov
movl
cmpsl
xchg
xor
iret
xchg
movsb
xlat
test
out
les
add
and
jbe
pop
inc
mov
das
inc
sub
scas
xchg
cmpsl
or
lcall
dec
les
jne
hlt
ror
stos
add
mov
sahf
dec
inc
daa
mov
add
mov
inc
adc
inc
sbb
lods
jecxz
cmp
add
jp
sub
daa
pop
add
mov
adc
dec
fsubs
fists
aaa
rolb
mov
loopne
cli
stos
arpl
pop
adc
cmpsb
out
jge
or
xchg
loop
pop
out
jl
or
add
fisttpll
mov
mov
int
jb
rcll
mov
xchg
and
dec
and
cmp
dec
js
test
cmp
jmp
sbb
ror
and
bound
cltd
ss
mov
sub
fisttpl
xchg
sbb
movsl
fmul
icebp
cld
fwait
out
jne
mov
or
movsl
int3
clc
sub
add
gs
push
sub
push
sub
movsb
lahf
sub
pop
push
and
mov
mov
cmp
pop
mov
repz
push
jns
ds
dec
xor
jmp
ja
pop
sub
adc
movsl
lret
test
scas
aas
push
dec
pop
mov
out
ljmp
cmp
mov
xchg
jb
mov
enter
das
and
fstpt
shlb
jge
pop
pusha
je
pause
jmp
in
test
adc
fcmovu
xchg
rcll
imul
mov
lods
mov
shl
or
ja
push
pusha
loopne
mov
cmpsl
sub
pop
cmpsb
stos
div
adc
dec
pop
push
jl
mov
mov
push
dec
xchg
push
loop
cmpsl
jg
testl
clc
dec
call
mov
gs
push
xor
in
sbb
ss
add
mov
fadd
jne
cmp
mov
jle
enter
push
xchg
pop
in
xorl
sbb
xor
test
fstl
mov
mov
popf
enter
inc
xchg
cmpsl
jp
xchg
push
add
mov
in
ror
xor
mov
test
jo
mov
mov
mov
lcall
push
xchg
loope
xchg
cwtl
call
mov
pop
rolb
add
cmovns
pop
cs
mov
adc
jae
mov
jns
cmp
and
cmp
rcll
inc
in
stos
jg
xchg
pusha
and
in
inc
mov
lock
push
das
and
lods
inc
test
flds
leave
sbb
dec
xchg
adc
fcoml
jg
sbb
lret
fs
xorl
adc
fdivrs
fabs
out
call
xor
dec
ja
lods
fbld
sub
nop
shrl
dec
xchg
rclb
aas
dec
mov
loope
jnp
in
mov
fisubs
shrl
cli
mov
call
xchg
ret
xor
cmp
cmp
outsl
inc
inc
pop
inc
fbld
fs
mov
push
dec
jne
jnp
jle
call
xor
fbld
ret
sbb
adc
and
and
xlat
jl
cmp
rolb
arpl
rorl
pushf
gs
aam
imul
insl
and
test
mov
sbb
mov
js
sub
fs
out
xchg
scas
inc
sbb
pop
inc
std
mov
jecxz
jne
imul
icebp
addb
or
mov
xchg
adcb
xchg
mov
shr
fdivrs
mov
outsl
push
fidivrl
jne
fs
fstpt
in
cmp
lods
and
fisttps
ret
fwait
push
insl
xchg
pop
push
lock
cmp
and
das
mov
inc
loope
mov
jmp
push
mov
mov
and
clc
push
je
fwait
mov
ret
out
cmp
icebp
scas
fdivr
pop
jp
mov
popf
lret
int
xchg
mov
in
jg
mov
je
cltd
notb
dec
arpl
lds
cmpsl
js
adc
cmpsb
mov
call
std
pop
fwait
inc
lock
psrld
arpl
jl
shl
out
mov
es
les
fucom
pop
ja
scas
jo
xchg
rcl
jmp
adc
rcl
or
clc
imulb
das
popa
mov
inc
jl
lcall
insb
xchg
cs
mov
pushf
xor
sbb
or
mov
inc
xchg
mov
add
sbb
dec
ljmp
mov
xlat
xchg
ljmp
xor
aaa
add
outsb
add
mov
xchg
lahf
add
jbe
add
adc
push
pop
in
cwtl
out
in
xchg
jbe
pop
lcall
stos
push
mov
mov
mov
jecxz
xchg
jae
inc
aas
fisttpll
mov
loop
jmp
lret
adc
into
push
push
jne
jmp
in
loopne
stc
jae
popa
xor
mov
faddl
xchg
out
push
xchg
push
inc
out
insl
or
lret
mov
xchg
dec
adc
popf
adc
xor
rol
stos
and
in
adc
inc
cmp
dec
mov
sar
movsl
aaa
mov
mov
xor
dec
sarl
add
scas
ret
out
sbb
sub
imul
stos
mov
stos
loop
inc
mov
loopne
xchg
sub
enter
mov
shlb
outsl
movsl
cmp
mov
mov
push
add
adc
push
subl
pop
xchg
and
fs
mov
xor
xchg
rcr
lahf
inc
pop
jp
xchg
les
stos
outsl
jno
lcall
mov
pop
add
push
xor
movsb
in
stc
sbb
xchg
out
les
stos
loope
dec
sbb
and
mov
fidivl
stos
ja
shr
jno
cltd
aad
dec
mov
or
lret
inc
pop
sbb
cli
sbb
aad
popa
mov
push
add
repz
and
mov
sbb
xchg
and
out
and
notl
int
ret
loope
es
mov
mov
sbb
aam
test
dec
aam
ror
xor
pop
scas
add
loop
std
jb
out
cltd
outsb
push
aam
fnsave
push
jne
jecxz
jae
addr16
xlat
xor
pop
inc
insb
sbb
vmovdqu
pop
mov
cmpsl
cltd
mov
xor
js
loop
cwtl
or
mov
cwtl
and
sbb
sub
lea
jl
add
push
sbb
lahf
decb
cmp
mov
cmpsl
xchg
in
jns
sahf
divb
aam
scas
xchg
cmc
cmpsl
andl
sbb
push
in
xlat
mov
into
jl
fbstp
dec
dec
sahf
mov
jne
aaa
scas
dec
push
repnz
rorb
and
xor
jecxz
stos
dec
mov
xchg
add
mov
call
daa
push
sbb
je
inc
or
test
or
adc
pop
jae
pop
fs
sbb
inc
int3
push
jns
call
cli
add
push
jo
adcb
adc
int
in
push
inc
sbb
int
movsb
fst
sbb
aas
adc
shll
ljmp
lock
push
mov
push
xor
inc
mov
popa
jne
fcmovne
cmp
jae
sub
insb
jnp
data16
ret
jo
loopne
and
jg
lods
sbb
dec
xor
sub
xor
mov
dec
jnp
sub
cld
dec
mov
mov
cltd
xor
shrl
inc
gs
xlat
fsubrs
lds
mov
test
add
rcrl
lahf
out
ja
jae
lds
cmpsl
ja
cld
or
shll
add
pop
aam
das
mov
insl
test
push
lcall
xchg
add
dec
sub
mov
repnz
imul
xchg
push
subl
icebp
fists
pop
sbb
fdivr
push
dec
xor
dec
fbstp
jmp
mov
test
dec
cmp
add
dec
mov
jns
add
mov
push
leave
iret
add
js
mov
add
insb
mov
add
enter
jecxz
jge
or
dec
cwtl
outsl
mov
push
mov
dec
and
mov
shll
insl
pop
cmp
mov
sbb
icebp
std
das
outsb
jbe
dec
cmp
subl
ret
inc
inc
mov
ljmp
mov
add
inc
into
pop
mov
cmp
push
into
imul
mov
xor
jns
int3
dec
lcall
out
out
adc
and
fcoms
test
inc
push
int3
jge
mov
imul
lcall
es
testb
push
add
loope
jle
sbb
cmp
dec
jmp
icebp
mov
pop
adc
rclb
outsl
aad
test
enter
cs
test
pop
sbb
test
push
fs
lock
jg
repnz
lds
rol
push
sbb
out
lods
fidivl
nop
dec
aas
and
and
pop
dec
test
mov
xchg
add
loopne
test
int
jno
xchg
sbb
sub
sub
hlt
xor
loopne
or
fwait
in
dec
outsb
inc
cltd
jp
ds
shll
mov
jle
dec
push
lcall
dec
mov
mov
or
dec
xchg
hlt
roll
into
pop
mov
push
idivb
or
or
sti
and
push
les
sub
dec
imul
lea
mov
jns
mov
and
bound
cmpsb
xchg
push
data16
push
push
or
cld
inc
in
push
sub
in
sbbb
mov
or
or
xchg
sub
loopne
push
cmpsb
popf
mov
loope
mov
sub
aaa
sbb
filds
hlt
imul
xor
sub
cmpsl
or
into
sub
scas
sbb
pop
out
xchg
and
mov
push
push
insb
sbb
add
std
xchg
daa
nop
out
repz
mov
pusha
fst
or
fucomip
imul
jp
jo
cltd
adc
cmp
jb
scas
xchg
sub
cmp
pop
inc
cmp
cmp
add
and
out
or
push
jbe
popa
mov
loope
pop
cli
cmp
jp
cltd
loop
xor
jb
lahf
cmpsb
repz
aad
push
roll
test
dec
jmp
lods
movsb
movb
sub
push
jmp
test
add
cmp
repnz
loop
movsl
outsb
push
xchg
std
stos
pop
seta
cli
mov
negl
outsb
inc
inc
mov
adc
dec
jno
mov
int3
popf
push
popa
cwtl
adc
into
or
inc
lods
xchg
insl
sbbb
jp
pop
jne
andl
xchg
lock
mov
inc
xchg
pop
inc
and
shr
sub
mov
subl
lcall
pop
lock
mov
imul
or
cmp
push
sahf
jae
mov
testb
fnstcw
adc
mov
pop
mov
jne
imul
rcrb
add
xchg
push
add
repnz
sbb
or
lods
add
fdivl
imul
fs
xchg
xchg
popa
pop
mov
out
aam
enter
pop
ret
rol
pop
add
loopne
pop
xchg
mov
or
fstpt
mov
test
adc
and
and
scas
adc
imul
sub
jmp
mov
cmp
jg
xor
imul
into
mov
daa
loop
fcomps
sar
movsl
pop
dec
xor
and
pop
push
mov
mov
dec
imul
or
fwait
cmp
shlb
icebp
cli
push
inc
cmc
lcall
xor
adc
cmp
stc
loopne
pop
cmp
cmpsb
or
inc
ret
xchg
lcall
fs
push
icebp
out
aaa
cmp
cs
cmp
adc
pop
outsl
int
xchg
mov
mov
cmp
imul
shll
push
mov
push
imul
and
sbb
dec
mov
sbb
mov
pushf
addb
mov
out
jb
inc
aas
push
icebp
movsb
fisubs
cmp
out
data16
cmp
popf
and
out
int3
mov
aas
inc
ret
ja
xchg
pusha
int
cmp
adc
or
lea
leave
or
scas
cli
repnz
sub
test
or
mov
faddl
rcrl
cli
out
xchg
sbb
fcmovnb
int3
inc
xchg
fwait
icebp
cs
pop
in
sbb
js
and
pop
inc
dec
xchg
fsubr
mov
aas
dec
test
outsb
lcall
adc
icebp
mov
jl
jmp
dec
adc
jnp
add
and
cmp
loop
sub
mov
inc
je
je
lcall
rorb
shll
or
xchg
daa
jmp
loope
mov
daa
lods
xchg
imul
divb
jbe
push
jmp
jne
fwait
jmp
push
pusha
repnz
aam
sbb
adc
dec
popf
mov
adc
test
sub
pop
fidivs
push
pop
push
sbb
dec
inc
inc
ret
or
sbb
ffreep
inc
stos
fmull
testb
daa
jo
xchg
push
xchg
mov
add
aam
pushf
add
push
pop
icebp
push
mov
mov
test
pop
mov
into
dec
adc
xchg
sub
push
int
xlat
lret
xor
adc
repnz
mov
sbb
jge
mov
fistps
out
inc
dec
inc
lahf
loop
lret
cmp
jnp
push
repnz
pop
xchg
sbb
and
fwait
jae
jmp
mov
cmpsl
sub
push
xchg
outsb
ljmp
outsl
popa
cmp
gs
into
je
jne
jmp
mov
cltd
sahf
add
inc
fdivs
dec
int
test
leave
mov
cmp
out
lret
enter
fsubrp
lods
xor
mov
mov
ja
push
outsl
orps
inc
inc
lahf
std
pop
push
ficompl
push
add
adc
xor
lods
pop
sub
bound
lea
sub
test
mov
push
pop
pushf
or
push
sti
inc
and
add
lods
xor
cltd
scas
pop
jl
add
push
inc
imul
ret
in
and
test
outsb
lea
pop
xor
inc
pushf
cltd
pop
xor
rcrl
xor
xchg
inc
mov
and
insl
lcall
xlat
add
roll
test
das
xchg
dec
addr16
lret
clc
jp
and
fdivrs
mov
xchg
arpl
dec
mov
mov
subl
push
inc
loopne
cwtl
outsl
std
adc
scas
lret
pop
inc
fmulp
cmpsb
dec
xor
rcrl
jge
pop
paddb
pop
shrb
adc
stos
add
dec
ss
add
pop
pop
cmpsl
dec
add
rclb
stc
loopne
push
fldt
push
scas
adc
xor
and
add
xlat
sub
push
iret
mov
cltd
mov
xchg
xlat
add
mov
mov
jno
sub
xchg
push
popa
leave
push
daa
stos
int
fadds
jo
mov
addr16
adc
jnp
loopne
and
mov
jns
in
imul
sub
into
lods
xchg
xchg
push
ret
xlat
mov
add
cmpsl
sarl
jne,pt
jp
xchg
rcr
add
xor
mov
shrb
add
jne
mov
adc
js
xchg
call
inc
repnz
les
jns
lret
cld
mov
push
mov
imul
push
cmp
ljmp
push
sbb
pop
fsubr
and
in
scas
jae
cmp
ja
lock
bound
inc
mov
add
das
lea
mov
sub
pop
std
adc
test
mov
out
in
roll
or
adc
jge
fwait
lcall
push
addr16
mov
hlt
or
pop
mov
std
sbb
rcpps
or
mov
fldcw
sbb
mov
push
add
dec
stos
stc
push
mov
mov
adc
inc
sub
pop
les
aaa
jmp
aad
imul
dec
dec
loope
xchg
push
mov
fstps
and
imul
push
mov
js
and
fildll
popa
mov
and
mov
rol
gs
les
mov
dec
cs
sub
mov
adc
lcall
shrw
into
or
dec
ret
push
je
out
push
dec
cmp
out
loope
and
sbb
xchg
fwait
pop
ljmp
dec
or
lret
push
xor
jecxz
in
sahf
pop
clc
push
push
fidivl
sti
pusha
xchg
insl
arpl
add
push
add
les
pop
es
ror
fbstp
add
jbe
in
lcall
jg
mov
jnp
cld
mov
xor
and
or
or
aam
notl
aas
dec
pop
mov
fnstenv
dec
test
loopne
mov
push
add
je
cmp
push
mov
sub
sub
das
pusha
or
or
add
imul
out
mov
or
cld
mov
cwtl
xor
dec
xchg
out
cmp
add
add
aam
xchg
sarl
sahf
rclb
jbe
mov
push
scas
adc
mov
mov
int3
mov
lea
push
jne
lret
out
vpinsrw
loopne
or
imul
dec
movsb
mov
outsl
dec
out
inc
add
in
hlt
insl
call
ret
in
sub
dec
ret
out
nop
and
rorb
fisubs
aam
add
or
mov
pushf
mov
xor
mov
lods
cmp
int
lret
jp
adc
pop
stos
mov
insb
incl
das
add
xchg
push
jmp
mov
dec
sbb
dec
sbbb
jg
mov
pushl
cmpsl
inc
fdivrs
into
rorb
out
test
loope
rclb
xlat
cwtl
decb
ds
xorl
stos
lods
and
lods
shlb
dec
jl
or
lcall
or
mov
xor
test
fidivl
and
out
negb
stos
dec
movsl
pop
mov
sbb
adc
xlat
in
dec
xor
xor
pop
jnp
sbb
cmp
mov
sub
les
leave
dec
jge
inc
xor
dec
mov
cmp
repnz
repz
adcl
fdivs
scas
int
mov
inc
mov
mov
fisubs
mov
popf
jnp
idiv
es
add
stc
mov
mov
cltd
push
outsl
into
rol
cmp
inc
ret
addr16
sbb
aas
es
inc
outsl
mov
mov
iret
hlt
cmp
cmpsl
dec
cwtl
in
into
sbb
push
call
mov
push
ficomps
repnz
das
ret
add
mov
aas
jge
jge
xchg
test
ret
iret
fldenv
lcall
dec
push
rcrl
lret
xchg
popf
mov
repnz
notb
xor
rcr
xor
mov
mov
xchg
push
xor
in
jae,pn
sub
dec
sub
std
xchg
aaa
insb
xchg
enter
dec
jp
dec
es
outsl
repnz
das
mov
and
jbe
dec
jae
xchg
in
fstl
popf
mov
das
js
addl
cmc
inc
xchg
jl
outsb
imul
add
test
xchg
dec
lods
ljmp
popf
mov
push
das
fbstp
inc
cmp
cmp
adc
je
rclb
andl
adc
jge
js
lock
rcll
and
or
test
pop
mov
mov
ljmp
xchg
ficomps
out
jb
add
ret
cs
imul
dec
or
pop
xor
pop
push
push
mov
and
nop
xlat
shl
or
sbb
pop
stos
les
out
fcompl
lret
pop
inc
in
rcrb
mov
push
mov
mov
jne
or
mov
mov
sysret
jg
mov
movsb
adc
movsb
inc
push
add
fisttpll
int3
outsb
les
ret
mov
adc
fnstenv
jle
mov
xchg
lea
xchg
inc
jnp
int3
addl
gs
sahf
add
rcll
xchg
mov
jl
scas
and
shll
nop
or
fbld
sahf
add
jbe
cs
rolb
fistpll
push
je
pop
inc
leave
pop
mul
jbe
push
aam
xorb
mov
xchg
ss
add
push
ret
jno
inc
iret
or
push
jecxz
arpl
push
mov
pop
cmp
icebp
shll
sub
loop
jne
mov
mov
push
cmp
lret
sub
and
sbb
cld
ret
test
cmc
lds
xchg
into
shrl
adc
mov
call
rcll
mov
jg
adc
lret
dec
movsb
loop
push
sahf
into
daa
and
je
cmp
sbb
mov
sub
inc
js
xlat
movsb
fs
scas
movl
hlt
sub
and
mov
lds
xor
adc
pushf
ret
push
rorb
pop
fwait
nop
and
xchg
mov
push
xor
add
es
mov
adc
add
jae
cmp
sub
dec
adcb
movsb
push
ss
sub
sub
into
shrb
inc
enter
or
push
cmc
mov
push
popa
inc
aaa
xchg
push
call
scas
cmp
leave
scas
and
mov
test
xchg
pop
add
push
push
popa
outsb
dec
fwait
pushl
mov
nop
lea
movsl
stos
add
xchg
push
lock
clc
jecxz
gs
sub
fstpl
dec
aad
int3
subb
or
cli
int3
scas
lahf
inc
bound
add
pusha
popa
movsl
xchg
enter
xlat
sub
fdivs
lods
sub
call
sbb
shll
data16
loop
lret
in
call
out
and
jne
je
or
cs
push
into
cmp
test
imul
xchg
enter
mov
test
adc
adc
into
sbb
xchg
jne
push
pop
fisubs
in
mov
lahf
mov
or
rcll
hlt
jae
xor
mov
add
add
test
test
mov
dec
add
loop
cmp
insb
call
xchg
lock
out
and
push
popf
mov
sub
into
and
push
sbb
xor
cltd
cltd
xchg
popa
push
adc
in
sub
push
mov
adc
push
sub
inc
mov
pushl
cmc
shrb
mov
repz
cli
aaa
jbe
imul
rcll
in
js
mov
pop
iret
dec
jo
mov
jb
stos
ljmp
jle
orb
outsb
jbe
sbb
dec
xor
and
or
xchg
in
push
fldcw
cmp
jae
lcall
or
sbb
inc
jle
sub
repnz
test
imul
cmpsl
jp
nop
push
jecxz
test
mov
movsb
and
xor
faddl
fnsave
cwtl
aas
add
jle
xorb
and
stos
out
jb
add
ror
inc
addl
mov
bound
dec
mov
mov
mov
clc
sub
pop
mov
rol
mul
in
les
out
fmuls
dec
xlat
cmp
mov
lds
adc
push
movsb
xchg
inc
mov
dec
mov
dec
mov
mov
xor
aaa
sbb
test
jae
xor
sbb
inc
imull
xchg
mov
sub
mov
mov
sub
mov
stos
xor
rorl
js,pt
out
les
and
dec
or
pop
aad
xlat
dec
sarb
inc
or
in
jo
dec
out
outsb
or
pop
enter
jge
mov
popf
pop
sbb
xchg
jne
lret
and
iret
adc
int
sub
push
and
lock
push
jle
dec
rolb
lahf
ja
mov
inc
adcl
adc
or
mov
push
jbe
lods
mov
mov
mov
cmpsb
push
int3
sbb
jns
call
pop
or
cs
mov
mov
sub
es
sbb
mov
pop
mov
hlt
ljmp
fwait
push
jl
cmp
cmc
lods
mov
flds
add
cmpsl
jb,pn
addr16
sahf
cli
stos
dec
push
insl
lds
push
enter
lock
add
push
in
pop
repz
jmp
aam
jmp
push
cmp
es
push
movsb
inc
pop
clc
jge
aad
out
out
js
dec
jecxz
data16
mov
pop
pop
gs
pop
rcll
movsl
mov
sub
movsb
mov
sahf
ret
add
jle
cmp
out
inc
xor
jnp
repz
loope
js
dec
js
cmp
jns
test
dec
imul
mov
call
sbb
imul
cwtl
pop
mov
ret
xchg
sbb
insl
mov
inc
imul
rcrl
jns
inc
mov
sbb
push
imul
cmovno
mov
outsl
xchg
ds
dec
cli
mov
fisttpll
lcall
gs
or
push
xchg
outsl
mov
xlat
jle
out
les
or
leave
aam
repz
je
cli
mov
jl
dec
pop
ret
xor
pop
pushf
testb
add
pop
cmp
pop
repz
dec
loope
mov
and
sub
adc
call
insb
mov
lods
fdivs
mov
inc
or
and
aas
push
mov
inc
stos
out
mov
push
daa
add
mov
mov
mov
inc
dec
test
nop
jg
jle,pt
flds
test
cs
out
sbb
jl
imul
sub
and
mov
shrl
jp
xor
push
pop
or
aad
nop
les
adc
popa
mov
in
notb
sub
popa
es
les
adc
js
pop
lock
lods
icebp
fistpl
or
fdivp
mov
push
xor
xchg
mov
fistpl
push
mov
cmp
ljmp
add
inc
repz
out
add
fs
int
sbb
mov
mov
pop
stos
imul
mov
mov
adc
push
scas
cld
adcl
das
data16
adc
roll
inc
adc
mov
leave
fdivr
or
mov
jbe
les
mov
mov
data16
xchg
adcb
mov
andl
fadds
or
clc
fstpl
sbb
ret
inc
and
iret
aam
orb
push
mov
and
lds
pop
push
out
data16
cmpsb
popf
lods
std
push
xchg
retw
adc
cmp
sub
jmp
hlt
testl
fmull
mov
push
add
ljmp
cli
inc
or
cmp
test
pop
imul
or
aas
pop
ret
and
lcall
jmp
sahf
ja
out
int3
pop
stc
daa
xchg
sub
sub
cmp
data16
xchg
jo
cmc
fimuls
lcall
lds
pusha
imul
jle
pop
test
pop
out
push
pushf
pop
orb
adc
xor
std
inc
mov
push
shl
jae
xchg
daa
mov
sub
in
adc
sub
mov
ja
cmp
push
popw
and
mov
jge
inc
push
fcomps
daa
cmc
lret
stc
das
dec
adcb
jmp
xor
xor
cmpsb
dec
add
in
xchg
mov
push
cmp
in
sbb
cmp
sahf
inc
out
fstps
outsl
cmp
adc
cwtl
daa
les
out
pop
cmp
lret
ror
pop
add
lret
xchg
loop
ljmp
xor
inc
and
or
scas
js
cmp
pop
push
out
sub
lcall
ja
or
pop
cli
scas
dec
add
pop
xor
inc
outsl
fildl
jmp
inc
mov
jle
fisubrs
adc
mov
setle
jge
pop
cmp
jne
push
bound
movsl
xchg
inc
xchg
stc
sbb
cmp
xchg
add
sub
stc
sahf
shr
mov
adc
mov
mov
adcl
xchg
movsb
mov
add
test
mov
aam
pop
out
movsl
hlt
cli
mov
jnp
sbb
pop
out
bound
hlt
lcall
dec
loopne
jecxz
push
sub
popa
sahf
push
adc
jae
mov
xchg
mov
dec
mov
ret
call
call
dec
sti
mov
ret
popa
into
add
push
mov
cli
and
dec
or
adc
pop
enter
outsb
das
fwait
cmpsl
invd
faddp
outsl
lret
and
push
jp
dec
xchg
popf
fldt
inc
inc
inc
inc
scas
dec
cwtl
adc
jmp
lret
insb
jne
movsl
pushf
daa
mov
mov
xchg
sarb
out
enter
xchg
movsb
daa
mov
gs
mov
ficomps
xor
inc
shr
jg
movsb
mov
ljmp
pop
jmp
pop
xchg
xor
or
push
loopne
dec
dec
lret
fstps
ljmp
add
xchg
lcall
sti
fs
adc
cmp
es
fcmovne
push
lea
sbb
mov
dec
pop
test
enter
stos
mov
aad
lea
ljmp
aas
fldcw
jp
xor
push
jl
xchg
sti
adc
aas
xchg
and
xchg
shlb
mov
dec
jns
fcmovbe
xor
pop
push
or
je
enter
mov
rcrl
add
mov
mov
sbb
sub
mov
and
mov
xor
jbe
inc
inc
stos
das
lcall
or
setg
jg
xchg
incb
mov
fisttpl
inc
xchg
sbb
xchg
fwait
ds
dec
pop
push
int3
cwtl
mov
outsb
mov
dec
les
fiadds
xchg
pop
lahf
hlt
int
stos
jae
dec
insb
fcomps
xor
nop
xchg
out
pop
xchg
jecxz
addb
sbb
sub
loope
and
bound
sbb
push
sub
stos
pminsw
push
int3
push
push
sub
loop
es
jge
adc
xor
or
jb
mov
xor
push
mov
mov
cs
rol
adc
rcl
xchg
enter
dec
inc
fcomps
es
mov
inc
loope
enter
cld
lcall
pop
aaa
xor
mov
sub
nop
daa
test
mov
inc
fistl
cmpl
call
mov
cmp
xchg
insl
push
jnp
mov
popf
iret
push
jnp
cli
ror
dec
lods
pop
mov
pop
add
sub
jno
dec
cmp
test
xchg
inc
outsl
sub
cld
push
sbb
push
or
sahf
push
addr16
xchg
inc
mov
adc
xchg
push
xor
add
mov
cmp
jb
or
hlt
in
push
mov
int
cwtl
cmpsl
into
sarb
and
jle
mov
xor
mov
xchg
test
push
test
fwait
push
ja
ljmp
xchg
roll
adc
das
mov
in
repnz
cmp
mov
mov
add
aad
test
dec
and
mov
ficomps
imul
aas
leave
xor
push
std
dec
push
addr16
leave
repnz
fiadds
add
xchg
rorl
out
dec
pop
out
cltd
sbb
mov
mov
jnp
pop
pop
rcrl
pop
jle
pop
cmpl
adc
xchg
sarl
flds
mov
repnz
dec
mov
lds
pop
repnz
pop
or
xor
or
or
mov
inc
pop
call
fs
mov
inc
je
test
push
push
ljmp
stc
and
xor
repnz
xchg
push
push
arpl
sbb
xor
xchg
cmp
cmp
jmp
xchg
outsb
dec
push
adc
cltd
cltd
pushf
xor
or
and
arpl
enter
arpl
fstpt
mov
filds
push
setge
xchg
mov
idivl
cs
cs
in
ss
aas
fdivs
and
sbb
scas
int
push
mov
scas
outsb
add
or
xor
adc
test
pop
sub
mov
aam
jo
xchg
xchg
or
xchg
inc
cltd
mov
push
mov
incb
mov
sub
push
out
scas
leave
and
push
mov
jae
mov
hlt
mov
jmp
jl
inc
push
xchg
and
sbb
inc
add
shlb
or
xchg
push
xchg
mov
or
xchg
sub
inc
scas
shrb
push
and
push
jmp
mov
sbb
sub
dec
jb
pop
cmp
xor
sbb
ja
sbb
test
fadds
sub
mov
push
and
fildl
and
movsl
jns
pop
sbb
jmp
sub
orl
jge
mov
lahf
popa
and
xor
push
insl
cmp
push
popf
dec
xchg
or
mov
push
rcrl
lret
mov
fwait
loop
insb
cltd
or
mov
push
mov
or
test
push
and
hlt
xor
xchg
sbb
sbb
call
cwtl
mov
inc
cmpl
sti
adc
cmp
cwtl
mov
ja
push
sub
mov
shll
push
stos
xor
lgs
lods
mov
cmp
ret
popf
ret
fcmovb
and
inc
sbb
xchg
push
aas
push
or
testl
cmp
ss
adc
lcall
test
jl
bound
push
jb
in
call
hlt
pop
xchg
leave
test
mov
insl
lods
sti
imul
es
mov
inc
movsb
jmp
push
mov
push
push
out
sbb
cld
xchg
ret
cltd
or
lret
dec
out
jo
ret
pop
mov
mov
fstps
aam
mov
testb
or
roll
pop
add
push
sarb
dec
dec
pop
push
xchg
ret
xchg
in
jle
jns
adc
outsb
mov
mov
mov
cmp
aad
push
lods
push
sbb
xchg
sbb
out
movsl
adc
sbb
lds
inc
add
xchg
mov
push
rcrl
cmc
add
lea
lret
mov
fs
aad
inc
mov
cs
mov
fld
popf
cmp
cmpsl
lea
stos
dec
jge
sti
loop
pop
xor
or
leave
mov
mov
les
xchg
ljmp
pop
test
hlt
push
imul
in
fisubrl
ret
push
inc
popa
insb
add
fsubrs
or
les
shrl
mov
stos
sbb
incl
mov
jns
test
cmc
imul
jge
iret
push
mov
inc
fimull
adc
stos
jp
cmpsl
es
arpl
and
jecxz
cmp
clc
add
lds
pop
mov
test
inc
pop
fisttpll
lahf
dec
adc
jge
daa
jmp
insl
xchg
movsb
mov
and
fcmovne
dec
ja
inc
ljmp
loopne
mov
jnp
aaa
push
cmp
lea
sbb
sbb
leave
push
push
xor
neg
mov
inc
xlat
pop
fwait
pop
add
int3
iret
fidivs
enter
sub
test
ret
jle
jo
cli
mov
in
cmp
adc
xor
cmpb
lods
das
fmull
xchg
pop
out
xchg
insb
lods
enter
sbb
cltd
rolb
out
jo
push
mov
mov
sub
jo
out
insl
imul
int3
push
cmp
jle
mov
loope
push
adc
out
outsl
fstpl
push
dec
popf
ds
mov
aam
or
jb
aad
or
hlt
mov
inc
inc
je
fs
arpl
jne
mov
xchg
xlat
popf
add
stos
dec
pushf
jno
push
mov
dec
es
jmp
cvtps2pd
lock
mov
mov
and
rorb
inc
dec
lea
sbb
adc
cmp
bound
flds
pushf
xor
fidivrl
and
lahf
sub
mov
jle
iret
negb
cmp
xchg
in
fcompl
mov
je
aaa
push
mov
icebp
outsb
add
stos
es
popf
fs
insb
sub
mov
cwtl
fsubrl
cmp
scas
xor
clc
mov
push
into
jmp
fwait
popf
sbb
insb
les
xchg
aaa
call
hlt
inc
insb
add
jbe
add
mov
cld
in
ret
push
pushf
cmp
mov
stos
jmp
mov
adc
sbb
adc
or
and
or
inc
mov
sahf
test
jecxz
cmp
iret
int
lock
cmp
fxch
sahf
dec
out
dec
xchg
jnp
icebp
adc
shlb
or
sbb
out
adcb
sbb
lcall
lock
xor
jns
pop
jne
cmp
mov
in
and
adc
xchg
xor
daa
ljmp
mov
adc
jp
pop
loop
sbb
or
pop
enter
inc
in
shrb
jb
jmp
xor
jecxz
push
mov
call
mov
inc
xor
xor
sbb
shrl
aas
jo
lcall
jno
sub
add
test
cmpsl
push
aam
mov
test
cmp
mov
lcall
push
aam
icebp
jge
std
nop
daa
jae
xchg
sahf
andb
scas
test
into
int
mov
inc
cmp
movsb
gs
mov
sbb
push
inc
mov
frstor
test
ja
movsb
dec
ds
jb
mov
pop
lea
stc
jnp
dec
test
pop
dec
mov
loop
mull
mov
push
jg
pop
adc
push
inc
jge
mov
lea
mov
in
xchg
int3
xor
jnp
jl
or
xor
sbbb
mov
call
std
je
inc
jns
ds
inc
pop
sub
jmp
movsl
cmp
or
hlt
push
pop
jo
aaa
fldcw
lret
mov
mov
fs
adcb
jg
mov
sahf
dec
test
stc
stos
xchg
scas
mov
lret
fcomi
arpl
lods
inc
out
dec
adcb
xchg
inc
in
pop
loopne
push
scas
or
es
sbb
loope
jno
inc
clc
mov
iret
mov
sbb
dec
inc
add
xchg
arpl
jno
pushf
addl
mov
stos
andb
mov
clc
scas
clc
inc
or
and
les
mov
lock
pop
mov
dec
inc
dec
and
aad
sbb
pop
shrb
js
mov
ss
addr16
dec
inc
xchg
and
out
outsl
dec
addr16
inc
mov
jp
ss
out
or
lods
ret
stc
or
sub
sarb
pop
icebp
fistl
jp
popa
out
add
outsb
aas
loop
sub
cmp
rol
js
lahf
push
xchg
call
ljmp
add
jle
roll
sbb
aad
dec
sbb
fistps
cmp
repnz
andl
icebp
sub
mov
mov
inc
xchg
iret
loope
sub
jne
dec
cmpsl
ljmp
pop
push
je
subb
xchg
addr16
inc
inc
sbb
and
xchg
lret
roll
stos
add
pusha
add
dec
mov
push
fwait
xchg
sbb
hlt
pop
insl
rcrl
shlb
add
repz
andl
dec
ret
out
pop
xor
jge
jbe
xor
mov
push
mov
lret
xchg
pusha
sarb
idivl
lods
cltd
xchg
or
jne
loope
pop
push
or
or
dec
jns
out
gs
mov
xor
leave
push
hlt
das
repz
int
aaa
push
xchg
xchg
or
push
es
mov
out
pop
pop
and
xchg
jecxz
stos
das
loopne
and
inc
jae
mov
dec
sahf
icebp
xor
mov
ss
cs
cmp
push
ss
stos
adc
dec
xlat
aad
imul
dec
jge
mov
or
lahf
dec
sub
or
aad
in
xor
xchg
or
mov
into
jp
mov
push
popa
jmp
push
mov
test
sbb
fisttpl
out
and
mov
sbb
fnsave
out
and
in
scas
adc
cltd
xorl
and
es
movsl
push
rol
loop
pop
sbb
pop
divb
leave
push
andb
inc
inc
movsl
or
dec
dec
mov
push
mov
js
mov
mov
fxch
xchg
mov
dec
xchg
aaa
sub
adc
or
or
or
inc
push
cltd
adc
repnz
sub
aas
xor
ljmp
rclb
sbb
mov
fidivrs
arpl
push
shlb
daa
push
sti
in
scas
clc
out
cwtl
mov
fcompl
test
negl
adc
push
lock
fcomps
in
cmpsl
popf
ffree
in
adc
jg
ret
loopew
scas
aas
dec
out
push
dec
loope
push
mov
aad
iret
mov
sbb
out
dec
and
loopne
jns
in
and
fldl
sub
cmp
add
inc
mov
xchg
jecxz
addb
hlt
js
inc
leave
xchg
mov
lods
sbb
mov
mov
insb
fstpl
popa
lds
cli
out
mov
gs
int3
roll
or
sub
xor
mov
push
jne
je
outsb
paddsw
lahf
rcl
sbb
js
and
jno
mov
push
cmpl
and
fbstp
int3
or
xchg
or
push
pusha
dec
push
cwtl
pushf
cmp
in
push
sarb
cmpsl
pop
mov
fistl
dec
adc
mov
pop
xor
mov
xor
inc
or
sbb
imul
lahf
jecxz
xor
fildll
xor
mov
mov
rolb
sbb
insl
iret
cmc
int
cmc
push
aad
cmpsl
add
cmpsb
push
xlat
addr16
cltd
xchg
cltd
lret
data16
mov
or
mov
out
mov
icebp
jbe
iret
mov
add
out
jns
cs
imul
jo
bound
imul
outsl
mov
and
ljmp
and
or
push
inc
addr16
jne
mov
mov
out
jno
scas
imul
inc
push
jns
insb
pop
loop
push
xchg
scas
adcb
cmp
mov
fisubrl
sbb
push
out
shll
sub
insl
cmp
sahf
lods
push
push
movsl
mov
aaa
loop
cmpsb
pop
scas
adc
and
push
mov
or
mov
pop
cmpsb
rolb
mov
inc
lcall
dec
push
addr16
lret
fcompl
mov
cltd
and
pop
repnz
into
mov
push
aaa
mov
stos
shlb
shll
icebp
movsb
idivb
sub
push
jmp
mov
push
push
add
dec
push
xor
xor
sub
test
test
nop
xchg
push
fidivrl
imul
cld
call
setnp
in
or
jbe
sub
sbb
add
das
push
lret
sbb
addr16
or
call
roll
push
mov
push
fnstenv
ljmp
jb
aas
cmpl
out
inc
sub
adcl
roll
hlt
push
and
push
push
mov
rol
push
jo
lods
repz
dec
stos
data16
out
adc
rorl
mov
xchg
cs
adc
es
or
and
or
fists
mov
xor
dec
es
mov
push
lcall
dec
movl
cmp
jne
repz
and
inc
es
pop
xchg
cmc
sub
jmp
sbb
add
call
inc
shlb
lcall
xchg
push
sbb
add
pop
lock
and
fsubl
sti
and
xchg
dec
cmpsl
test
out
or
inc
cwtl
mov
movsl
stos
and
jo
jo
mov
clc
repz
mov
dec
stc
stc
fwait
xchg
test
jne
scas
adc
enter
int
gs
adc
aad
outsl
sub
sahf
sti
scas
mov
cwtl
out
scas
loopne
push
cmp
adc
mov
jmp
shlb
stos
je
cltd
jo
sbb
push
jg
mov
aam
pop
mov
and
lods
mov
in
out
push
xor
sbb
push
jmp
lock
sub
mov
pop
sub
add
adc
rclb
inc
int3
sbb
sub
sub
jg
ljmp
cli
ret
mov
xchg
and
cmp
mov
push
stc
mov
dec
dec
pop
std
subb
iret
xor
mov
push
push
mov
cmp
add
xor
clc
pop
push
leave
lea
push
add
int3
pop
loop
aas
push
or
movl
ja
jno
sub
pop
or
add
fimuls
sti
inc
inc
mov
or
xor
xchg
dec
shrb
sti
mov
out
mov
pop
lods
jg
jmp
lret
push
push
pop
or
mov
ds
in
mov
xchg
jbe
outsb
and
data16
sbb
xchg
mov
fnstsw
inc
pushl
rcll
sahf
out
sar
shlb
xchg
outsb
fstpt
stos
mov
nop
popf
jp
lock
mov
and
in
imul
pushf
xchg
adc
lcall
rdmsr
sub
pop
mov
pop
adc
mov
mov
les
rcr
and
shll
mov
adc
sbb
notb
js
shll
fiaddl
pushf
popa
mov
imull
adc
enter
mov
out
hlt
mov
jg
jns
push
jno
sbb
mov
hlt
in
int
popa
adc
enter
lret
adc
mov
push
fs
or
sub
xchg
jg
lock
iret
je
cmp
ja
iret
xchg
mov
cmp
sti
jg
xchg
cmp
test
sub
push
pop
pushf
rolb
sub
lahf
lods
out
mov
aaa
xor
dec
out
loopne
or
inc
negb
xor
jmp
outsl
mov
repz
xchg
in
cmp
lahf
int
pop
insb
mov
mov
test
xchg
sbbl
dec
inc
dec
fcoml
xchg
rcrl
jle
sub
out
mov
dec
cwtl
mov
push
fldl
fiadds
push
es
push
lea
icebp
insl
test
js
sbb
out
mov
lcall
cmpsb
pusha
cmpsl
rolb
stos
popf
jae
sbb
sub
dec
xor
xor
or
sub
adc
fsubp
xchg
jnp
in
stc
dec
sub
addl
loopne
mov
das
or
mov
lret
push
in
dec
sarb
ljmp
sarl
dec
mov
dec
xchg
xor
push
in
sub
mov
das
jbe
or
std
ret
lea
mov
cltd
push
imul
lods
cmp
in
xlat
push
testl
movsl
mov
fwait
push
aad
jle
sub
bound
mov
outsb
rolb
jl
pop
mov
push
or
test
push
jecxz
hlt
lods
sub
mov
mov
ja
add
cmp
mov
sti
add
mov
stos
inc
aad
lea
and
dec
or
adc
sbb
inc
mov
jnp
out
aam
arpl
subl
adc
cmp
inc
loope
into
fmulp
ret
mov
mov
sub
sub
mov
mov
mov
cli
test
into
xchg
int3
pop
ret
test
test
aad
sarb
fs
fmull
enter
into
scas
xchg
inc
stos
adc
std
test
jbe
pusha
bound
stc
add
es
dec
repz
les
jle
pop
fnstcw
aam
sub
out
jle
leave
stos
xor
inc
stos
int
cmp
jmp
jo
arpl
idivl
rorb
loopne
shll
inc
jg
ds
int3
mov
mov
scas
sub
add
pcmpgtw
arpl
pusha
sbb
mov
push
and
jns
sub
jnp
xorb
divl
dec
sbb
jae
out
and
rcll
ss
jae
and
sub
dec
fimull
sub
das
xchg
outsl
sub
int
xchg
imul
sub
mov
pop
mov
xchg
lods
jmp
sub
jne
test
lret
shll
arpl
idivb
sub
mov
adc
adc
js
je
movsb
adc
add
rolb
mov
clc
pop
data16
js
xchg
imul
mov
sbb
out
xlat
mov
jmp
mov
arpl
xor
orb
mov
insb
sub
in
sub
sub
xchg
mov
adc
dec
mov
push
nop
test
mov
std
jb
sub
fbld
test
lret
pop
push
lcall
outsl
data16
mov
int3
mov
push
pop
sbb
cmpsb
xor
jno
sub
sti
insl
dec
cli
fsincos
mov
pop
cmp
js
and
clc
jnp
je,pn
pop
daa
ror
lock
loop
nop
fldenv
sahf
bnd
inc
scas
test
xchg
inc
bound
movsb
hlt
je
mov
xor
dec
jae
leave
nop
inc
movsl
ret
pop
in
ret
cmp
cltd
or
je
je
ffree
out
scas
jb
ljmp
mov
popa
mov
or
fwait
and
jmp
rcrb
xchg
fmuls
mov
xor
inc
mov
fsubl
xchg
popa
mov
sub
jnp
push
std
push
xchg
xchg
pop
lods
jge
in
sbb
add
lods
push
jecxz
sub
pop
int
loopne
dec
fmull
div
in
jae
add
cltd
inc
call
dec
pop
loope
pop
imulb
xor
outsl
mov
mov
sbb
jne
cmp
cmpsl
push
jmp
into
fistpll
scas
imul
pop
das
jb
mulb
or
stos
dec
loope
sahf
push
loop
push
imulb
pop
dec
xorl
test
xchg
movswl
push
jne
sar
xor
mov
inc
insl
cmpl
adc
mov
popf
pop
adc
stc
in
push
lds
mov
sub
xor
insl
in
push
jo
dec
pushw
popa
add
jge
lahf
xchg
cltd
lods
adc
ret
loopne
out
xor
stos
popf
jp
jecxz
or
gs
movsb
or
mov
jl
mov
add
lods
push
inc
mov
cmpsl
push
out
es
pop
xchg
das
add
testb
push
push
dec
mov
pop
inc
mov
mov
mov
push
aam
xor
scas
pop
arpl
mov
jle
stos
int
or
pushf
xchg
in
jg
lahf
inc
movl
adc
lods
pop
adc
push
xor
outsb
cmc
cli
and
scas
insb
xor
mov
jge
xchg
mov
cs
mov
or
cmp
sbb
pop
out
into
dec
push
fwait
cli
mov
aas
xchg
sub
cmp
clc
repnz
mov
xor
shrl
sbb
push
stc
xchg
data16
inc
xor
cli
cmp
xchg
xchg
push
xchg
mov
mov
jno
adc
cld
xor
sahf
cmpsb
mov
cmp
clc
sub
xor
into
gs
out
std
leave
sbb
mov
movsb
test
mov
jnp
mov
mov
sub
loopne
adc
or
jmp
out
fwait
dec
js
in
test
xor
pop
lods
aas
lods
pop
jecxz
dec
test
repz
push
dec
add
add
inc
mov
iret
mov
jns
dec
stc
popf
daa
and
jl
xor
or
xor
and
rorl
xor
je
push
xchg
xlat
or
ret
test
inc
xlat
inc
dec
stc
mov
nop
int
out
icebp
mov
stc
push
jae
cmp
jmp
bound
add
inc
insl
lahf
push
add
jmp
iret
ja
sti
test
and
add
leave
jecxz
dec
xchg
les
xor
lcall
nop
popf
adc
jecxz
xchg
scas
jmp
clc
into
iret
push
jb
push
sbbl
cmp
adc
pop
es
jns
daa
in
add
pop
pop
arpl
int3
lret
xlat
inc
hlt
mov
cmpsb
add
sub
jo
or
jmp
lahf
dec
jns
and
push
gs
sub
push
cmp
out
sti
lock
mov
pop
rcrl
pop
xchg
movsb
test
cmp
andl
xor
leave
and
cli
nop
loop
test
xor
cmp
lcall
xorl
cmpsb
loop
pop
fldl
pop
mov
idivb
mov
fdivs
jne
sub
int
push
cwtl
mov
leave
xchg
fdivl
push
dec
sub
mov
jb
loope
or
xchg
xchg
or
xor
shlb
imul
mov
fdivs
pushw
pop
mov
push
inc
jae
mov
inc
aam
jle
fiaddl
or
push
push
stos
fidivs
sbb
cmpsl
lea
mov
imul
push
mov
inc
insl
dec
data16
sahf
lcall
lock
repnz
lcall
pop
add
ror
shr
inc
cmpsl
in
mov
mov
shrl
fisubrs
pop
add
aad
push
inc
jae
les
paddw
xor
cmc
in
mov
add
scas
push
pop
xchg
jno
stos
popf
and
dec
sub
ss
pusha
cmpsb
pop
cmpsb
out
ret
jns
xchg
out
mov
mov
xor
out
orb
iret
xchg
dec
mov
shr
jno
insb
and
fistps
leave
fnstcw
fadds
dec
mov
nop
mov
fdiv
aam
sbb
movb
dec
jle
out
leave
mov
lahf
fisubrl
stc
xor
in
stc
jbe
cmp
ret
xor
pop
aam
inc
push
lea
xchg
jmp
icebp
mov
or
mov
and
pop
or
xchg
cli
or
dec
or
fcoms
mov
push
xchg
insl
jecxz
fwait
push
xor
into
int
lahf
xchg
addl
cmp
jne
jns
cwtl
and
test
int3
cmp
repz
push
and
sbb
mov
jb
xchg
out
dec
ljmp
imulb
adc
and
cmp
mov
xor
mov
mov
push
rorb
inc
aam
dec
sti
sti
pusha
sub
inc
add
push
loope
das
popf
pop
xchg
or
in
test
sub
scas
mov
test
mov
push
xor
xor
es
jl
jbe
sbb
jbe
xor
and
jp
mov
repnz
sbb
loope
jge
push
lock
filds
iret
jnp
inc
cmpsl
divb
cld
cmc
mov
pop
clc
outsl
test
jecxz
iret
mov
sahf
sti
mov
xorb
out
and
nop
bound
pushl
lea
stos
xor
xor
cmpsb
xor
or
adc
xor
xor
daa
test
fdivs
inc
out
jno
or
shrl
pop
in
sbb
sbb
lods
fadd
mov
iret
jecxz
or
adc
add
push
jb
pop
scas
sub
stc
repnz
sbb
roll
lods
jbe
xchg
out
es
or
imul
mov
push
push
shlb
or
jae
scas
popf
xchg
lcall
ljmp
imul
mov
dec
movsl
mov
push
mov
push
push
stc
insb
aas
loope
rcrb
mov
mov
negb
lret
daa
jle
loop
jb
mov
call
xchg
mov
xchg
insl
xchg
popa
sbb
jae
add
jbe
shrb
addr16
int
test
cmpl
and
jns
jmp
sub
das
pop
popf
jo
jb
leave
adc
xchg
repz
cltd
xchg
loopne
sbb
dec
faddp
or
cmp
repnz
push
push
cmp
lds
mov
iret
add
das
stc
shll
fisubrs
cmp
loop
or
fadds
push
pop
repnz
movsb
cmp
xchg
lret
aas
arpl
pop
jecxz
mov
les
es
lds
mov
ds
xor
jp
inc
pop
test
pushf
sbb
dec
cwtl
ficomps
int
daa
mov
or
lcall
mov
dec
ret
mov
and
enter
push
push
icebp
push
add
filds
dec
in
push
ret
xor
aam
jb
sbb
dec
pop
pop
jp
test
mov
scas
daa
and
cli
popa
roll
mov
cmp
mov
mov
mov
pop
lret
push
push
adc
xor
and
test
out
dec
imul
cwtl
inc
and
and
in
call
call
sbb
inc
stos
adc
mov
adcl
cwtl
jo
cwtl
pop
rorl
add
scas
mov
sub
sbb
inc
fs
lods
lods
mov
add
pop
loopne
jno
xorl
push
jge
xchg
int
push
test
jbe
aaa
stc
jbe
imul
fldt
lret
xchg
in
push
jnp
inc
adc
xchg
add
leave
dec
adc
pop
mov
pop
or
cli
lret
or
aaa
loopne
xor
jmp
xor
xchg
lods
mov
cmp
sahf
xchg
daa
lock
sbb
out
mov
xchg
shlb
pop
imulb
lret
sarb
add
loopne
clc
inc
cwtl
call
sub
stos
mov
sub
lret
xor
lods
addl
sar
es
repz
ret
xor
lock
or
ja
out
sbb
xchg
dec
xchg
addb
andl
xor
inc
or
test
mov
mov
mov
iret
or
ja
cmpsl
dec
mov
jne
inc
xchg
in
or
xchg
out
fs
cld
jb
call
inc
movsl
cld
dec
inc
cmp
dec
mov
sub
es
ds
jne
repz
push
and
pop
sub
leave
push
xchg
rorb
outsb
imul
xchg
pop
add
movsl
jbe
repz
test
jb
aad
popf
cmp
int3
aad
loope
pop
push
xlat
arpl
fstpt
dec
movsl
xchg
and
push
push
inc
lret
push
inc
pop
dec
lahf
rorb
pop
inc
or
orl
ja
mov
mov
in
popf
addb
and
sbb
test
cmp
punpcklwd
or
pop
test
xor
xchg
movsb
or
aam
jg
jae
dec
hlt
adc
sub
mov
mov
mov
stc
push
push
mov
inc
cmp
stos
fldcw
dec
sbb
mov
or
jnp
or
and
aam
sbb
test
arpl
xchg
jmp
xchg
push
dec
inc
call
push
sub
lods
add
loope
lea
push
in
insl
adc
addb
inc
fildll
gs
sbb
add
int
xchg
dec
push
andl
mov
out
outsl
pop
mov
out
movsl
add
mov
fisubrs
fmulp
push
add
mov
enter
aad
out
icebp
cwtl
jae
imul
fildll
imul
push
int3
int3
ret
push
lods
push
test
mov
adc
inc
mov
inc
shr
mov
cmp
and
mov
inc
mov
cmp
lds
mov
and
jge
or
enter
inc
push
or
mov
int
scas
push
stc
sbb
out
lock
jb
push
cmpsb
iret
xchg
into
sarl
mov
and
push
dec
xlat
ja
mov
mov
dec
sarb
xchg
pop
cmp
dec
dec
jg
icebp
push
inc
inc
lcall
nop
hlt
test
push
hlt
test
out
push
add
repnz
add
cmpsl
sbb
cwtl
push
cli
inc
push
gs
inc
es
aaa
dec
es
fs
add
pop
sub
inc
aam
jmp
mov
movsl
inc
addr16
clc
push
push
pushf
jecxz
cmp
int
xor
jb
add
jne
dec
shlb
testb
and
fs
jl
lahf
out
mov
mov
xorl
push
int
out
and
fmull
mov
push
lret
or
push
xchg
mulb
mov
lea
outsb
dec
in
rorb
inc
ja
das
xlat
repz
xchg
arpl
out
mov
push
loop
inc
out
and
iret
lock
call
xor
lods
xor
sub
sbb
xchg
adc
mov
mov
jle
fwait
and
leave
sbb
adc
ja
sub
aaa
xchg
fdivrs
leave
sub
lahf
jle
xchg
jmp
pop
pop
sbb
pop
pop
aaa
jne
push
and
fidivrs
mov
inc
cmp
std
push
fdivrs
push
in
cli
lock
into
mov
push
mov
adc
xor
fnstsw
mov
in
push
mov
cmp
lret
inc
out
inc
pushf
inc
les
out
or
dec
push
mov
push
cli
sbb
aam
mov
flds
pop
test
jb
push
in
iret
add
ret
lds
xchg
push
mov
clc
or
adc
cltd
mov
les
std
lcall
out
mov
int3
jg
aad
mov
inc
and
sub
sbb
fucomi
jno
aas
inc
js
xchg
push
push
hlt
inc
jecxz
and
in
arpl
jno
aaa
adc
xchg
xlat
add
loope
fmuls
lret
imul
mov
inc
test
jg
sub
aad
inc
mov
push
aam
dec
fldenv
jb
jmp
xlat
aam
sti
in
push
test
stc
jg
mov
mov
mov
cs
sub
clc
jge
stos
dec
inc
rolb
ds
test
pop
in
popl
sub
push
ds
cmpsb
pusha
stos
jbe
leave
inc
xor
dec
enter
mov
inc
push
mov
insb
movsl
mov
xor
in
sbb
cmp
data16
adc
imul
push
mov
scas
xor
add
mov
dec
lahf
jno
lods
loopne
outsb
ret
lcall
xchg
aad
or
jne
push
or
xchg
in
push
aad
jg
cmpsb
loope
je
dec
shrb
mov
jle
loop
jge
out
aaa
sarl
insb
dec
ds
and
xor
inc
or
mov
data16
in
test
popa
push
push
gs
ret
inc
jae
lds
jns
mov
clc
imul
push
aam
fiadds
cmp
mov
jae
bound
add
and
cmp
and
popf
dec
repnz
jne
gs
paddusb
push
pop
push
mov
add
sarb
imul
scas
pop
pop
cwtl
add
and
push
mov
dec
icebp
std
int3
mov
mov
or
movsb
loop
movsl
jne
jp
pop
mov
js
jne
leave
repnz
jo
mov
cmpsb
or
push
sahf
sub
in
add
pushf
adc
xor
and
xchg
popf
jne
sti
imul
call
fcompl
ror
je
inc
jmp
xchg
mov
sub
dec
sbb
lcall
adcl
add
dec
mov
xchg
xor
pop
xchg
jo
adc
dec
xor
rcll
cmp
cmpsl
sub
pushl
xchg
xor
fs
dec
fbld
sub
enter
test
scas
out
into
mov
mov
mov
mov
add
push
shlb
fwait
loope
sub
fmuls
enter
push
loope
mov
popf
int3
fld
and
cwtl
push
add
mov
jecxz
mov
cmp
gs
jg
mov
hlt
xor
ja
jb
xchg
ret
aam
pop
mov
adcl
jb
xchg
fucom
cmp
imul
add
repnz
lret
xchg
mov
push
lock
lods
xchg
movsb
rcl
and
jno
dec
insl
dec
ss
mov
xchg
jecxz
test
out
mov
dec
xchg
push
sub
cmpsb
scas
jns
out
fimull
in
out
std
and
or
lret
icebp
in
loopne
cmc
call
or
push
mov
rorb
or
clc
inc
loope
jmp
jae
adc
pushl
cld
lea
ror
dec
jle
adc
or
jmp
rolb
push
lcall
sub
in
jne
add
ss
mov
inc
sbb
jmp
movsl
cmc
inc
addr16
lahf
add
and
cwtl
xchg
jne
movsl
push
push
loope
lods
cmp
lcall
sub
xchg
xchg
ljmp
stos
insl
mov
loopne
inc
add
jge
mov
mov
mov
jecxz
sar
mov
clc
cmp
stos
cltd
sarl
fcmovnu
icebp
sub
ljmp
sbb
ret
add
outsb
mov
jge
cmp
push
xchg
stc
insl
cltd
sbb
gs
push
adc
pop
dec
cwtl
outsl
out
mov
mov
into
ds
inc
in
mov
push
fldenv
imul
adc
add
icebp
imul
shlb
sbb
xchg
lahf
scas
in
mov
push
out
pop
rcr
cmp
enter
mov
push
mov
or
mov
mov
sub
aaa
pop
leave
inc
xchg
mov
cmp
xor
cmp
movsl
and
push
into
repz
push
mov
in
jecxz
jp
mov
std
jp
sbbb
mov
push
xchg
pusha
jo
arpl
fsts
loopne
fs
insb
jb
dec
insl
mov
sub
mov
sti
adc
rolb
xor
dec
push
les
jp
adc
stc
mov
leave
nop
jne
adc
mov
in
int
dec
cwtl
call
or
bound
inc
ss
dec
fcmovb
mov
outsb
iret
mov
repnz
jle
mov
bound
sbb
mov
sahf
nop
push
mov
adc
mov
out
jl
jle
jmp
sub
hlt
icebp
in
loop
sub
stos
ja
mov
jno
fistpll
rorb
fs
push
xlat
cli
cmp
push
push
mov
inc
xchg
inc
popf
pusha
dec
sahf
xchg
jbe
xor
arpl
push
mov
or
bound
movsb
in
inc
stc
loop
test
xchg
int
mov
cmpsb
jb
hlt
in
add
loop
repz
mov
mov
push
fs
into
sbbl
cmp
sub
js
insl
adc
pop
enter
stc
pop
movsb
cmp
insl
bound
push
stos
xor
mov
shlb
inc
push
fcoml
xor
dec
push
jae
lret
movhps
lcall
dec
fcompl
ret
jp
pop
out
xor
dec
add
cmpsl
inc
stc
jp
mov
dec
push
out
cltd
jg
out
adc
sbb
jb
mov
pop
mov
xchg
pop
and
mov
dec
push
inc
iret
mov
mov
sti
fcmovnu
adc
fwait
mov
movsl
icebp
ja
ja
mov
push
js
mov
imul
and
daa
daa
shll
shlb
popa
gs
dec
jns
push
leave
lods
push
into
and
cmp
stc
mov
jl
test
rcrb
jne
xchg
scas
jo
imul
cwtl
data16
fistps
push
xor
setae
ficomps
sub
loop
mov
mov
sub
daa
adc
pop
aad
nop
xor
and
xor
out
sbb
add
adc
decb
sbb
xor
dec
fwait
movsb
loop
add
nop
arpl
push
xchg
movb
pop
xchg
lret
xchg
inc
xchg
aad
out
inc
add
adc
insb
out
xor
pop
jbe
test
cmp
xor
add
push
inc
mov
dec
push
sbb
scas
cwtl
dec
out
and
loop
out
add
in
push
mov
clc
stos
pop
or
cmp
pop
lods
popa
push
mov
inc
push
xor
inc
xchg
cmp
daa
xchg
or
mov
cwtl
ds
rcll
push
push
rolb
popf
jb
adc
adc
scas
sub
sarl
inc
push
addb
js
movsl
stos
movsl
mov
lret
pop
lds
test
popa
aad
jg
gs
push
mov
lahf
dec
es
repnz
out
repnz
jle
lods
nop
leave
or
xchg
nop
cmc
and
insl
push
lods
cmp
mov
shll
mov
cmp
rol
les
jo
sub
insb
nop
adc
pusha
and
movsl
jne
lret
iret
test
inc
sbb
fidivl
inc
mov
stc
lcall
mov
mov
lcall
mov
das
inc
fwait
bswap
movsb
cmc
into
test
je
imul
cmc
jp
loopne
mov
outsl
shlb
jp
iret
pop
inc
adc
xchg
xchg
adc
fdivrl
sbb
icebp
and
push
dec
test
in
loop
xchg
inc
fistl
adc
prefetcht0
lcall
jl
scas
clc
xchg
in
pop
lods
lods
sub
mov
jno
pop
cmc
sub
dec
inc
loop
arpl
fbld
scas
sub
pop
lret
lcall
data16
mov
stc
in
mov
push
jbe
cmp
inc
cmp
and
in
cmp
pop
iret
mov
push
pop
rclb
mov
sbb
mov
add
in
repz
stc
and
mov
clc
and
mov
sbb
mov
and
aas
or
out
inc
cs
dec
insl
imul
enter
dec
lods
add
dec
repnz
or
fidivs
mov
stc
sarl
xor
pushf
sub
subl
pop
push
jle
daa
sar
dec
xor
nop
ret
pop
mov
sbb
add
cmc
adcb
adc
xchg
push
pop
outsl
inc
lret
std
cld
out
call
jecxz
cmc
mov
lret
aaa
jmp
int3
xor
and
sub
pop
pop
lea
sarb
and
rolb
loopne
pop
int3
lods
repnz
jo
fldt
inc
hlt
inc
stos
jae
mov
sti
ror
xchg
pusha
insb
mov
push
pop
jnp
mov
pop
dec
sbb
loop
mov
jbe
pop
mov
pushf
loope
dec
and
cld
ffree
mov
repz
push
mov
xor
push
sub
fistps
mov
sub
addl
popa
js
int3
in
fiaddl
mov
push
xor
add
mov
sahf
test
aaa
mov
lods
movb
aad
negl
movsb
scas
sbb
orb
cmp
cmp
xchg
sbb
dec
fistps
lea
or
shlb
lahf
outsl
nop
jae
lea
inc
or
add
mov
cmp
dec
push
xchg
fldl
cld
push
int3
in
cmp
jb
push
aas
jp
mov
pop
stos
adc
jb
mov
cmp
mov
std
rcrb
loopne
xchg
out
push
movnti
mov
sub
out
in
push
and
movsl
out
cwtl
inc
ds
test
jnp
out
push
insl
out
in
xor
pop
pop
dec
icebp
shlb
cmp
popf
sbb
aam
lock
xchg
ss
inc
pop
leave
pop
shlb
in
xor
push
lret
psubq
aas
xchg
sbb
cltd
in
pushf
pop
fsubs
fsubp
jge
hlt
fcomp
sub
int3
mov
inc
pusha
hlt
mov
sub
inc
test
xchg
jb
mov
push
cmp
les
imull
pushf
and
mov
lar
stos
das
cmc
test
push
mov
out
dec
add
sahf
ret
sbb
jbe
les
cmp
iret
jno
jb
sbb
and
ret
js
xchg
sub
nop
std
mov
xchg
pop
xchg
xchg
aas
and
or
jnp
or
xor
data16
push
sahf
sti
mov
adc
repnz
bound
clc
lahf
add
mov
nop
stc
imul
addl
sbb
int
sbbl
shll
dec
mov
push
cltd
inc
js
outsb
lcall
pop
test
pop
xchg
inc
sub
lcall
or
mov
leave
inc
add
adc
js
pop
popa
lcall
adc
mov
push
sbb
or
xor
xor
pop
mov
sbb
mov
cli
incb
push
pusha
sub
hlt
sbb
jb
or
push
out
dec
stos
pop
cwtl
stc
mov
adc
fisubrl
push
or
inc
push
jns
xlat
cli
mov
fldcw
mov
in
test
iret
cwtl
jle
sub
sub
in
jp
daa
add
xchg
lcall
sub
or
ffreep
lock
cwtl
and
inc
mov
sub
arpl
cmc
pop
mov
psubusb
out
dec
scas
pop
pop
ss
cwtl
fisubs
and
and
fnstcw
nop
inc
movsb
or
push
ror
mov
push
cmp
icebp
rcr
loopne
outsl
jp
mov
push
push
repz
leave
repnz
cwtl
arpl
pushf
xor
leave
cmpl
inc
and
push
aas
sub
jmp
add
push
mov
test
mov
test
jl
inc
push
fimull
out
push
stc
push
sbb
inc
add
adc
sub
fs
in
dec
push
in
xlat
add
outsl
xor
pop
adc
mov
sbb
jmp
adc
pop
xor
lahf
fcoml
jmp
stc
pop
lahf
pop
cmp
pop
and
or
and
adc
notb
mov
sub
stc
push
jb
mov
les
mov
es
movsb
aas
mov
lea
add
jecxz
mov
xchg
add
test
sbb
sbb
inc
adc
out
aad
divb
add
rorb
mov
adc
jge
adc
arpl
stos
ljmp
aam
push
xor
mov
mov
mov
and
and
inc
lahf
repz
insl
leave
or
rorb
pop
orb
insl
jmp
mov
mov
cli
push
rcl
fdivrp
imul
push
out
lcall
pop
xorl
mov
cltd
adc
hlt
sbb
dec
shlb
shll
aas
xlat
iret
pop
ss
or
push
fld
pop
mov
mov
ljmp
pusha
mov
xor
xchg
ss
test
jo
inc
mov
or
fcoml
mov
int
icebp
dec
pop
mov
push
add
out
mov
cmpsl
dec
movsl
fldt
cmp
outsl
cld
mov
sbb
rcr
xor
sub
mov
orb
jge
add
loop
dec
pop
insb
dec
and
in
pop
maskmovq
divl
aaa
fdivs
addb
test
inc
or
aad
cmp
lea
xchg
out
jne
ret
pop
inc
mov
adc
sti
into
adc
jmp
inc
jg
mov
and
mov
mov
in
jno
mov
inc
mov
test
sub
mov
fists
scas
push
test
xorb
dec
cwtl
adc
push
cmp
lcall
sub
push
add
pop
dec
test
hlt
dec
ret
in
pop
jnp
jecxz
shll
loop
dec
mov
out
arpl
out
lret
pusha
jmp
repz
dec
inc
mov
mov
mov
cltd
mov
nop
rcrl
test
dec
dec
imulb
popl
jne
mov
dec
pop
mov
mov
rcrl
scas
lods
xchg
add
mov
int
insb
filds
add
js
sub
int
push
lahf
mov
xor
mov
fwait
lods
aaa
xchg
mov
xlat
mov
xchg
cmp
js
repz
pushf
movsb
cmp
inc
sub
add
stos
js
mov
or
sub
fwait
lods
sbb
in
jo
mov
insl
cmpsb
jae
rol
mov
lock
ss
daa
jno
roll
push
sub
das
cmp
roll
mov
ljmp
jl
lock
int3
mov
lcall
jns
or
pushf
inc
pextrw
jne
xor
pop
mov
pushf
jnp
mov
xchg
mov
cmc
jno
dec
push
mov
push
push
cmp
enter
test
imul
es
mov
call
fs
pop
mov
and
mov
sbbb
rcrl
push
dec
pop
fs
and
inc
jmp
dec
stos
lock
ja
paddusb
rol
shll
insl
test
jns
ss
mov
divl
push
adc
mov
iret
jge
dec
dec
add
mov
or
pop
dec
ret
mov
cld
test
xchg
or
sub
outsl
ja
jb
adc
hlt
fidivrl
js
loopne
jns
int
or
sahf
xchg
xor
iret
cmc
stos
pop
jge
xorl
and
stos
mov
xor
and
push
fidivs
sti
insb
out
cmp
dec
repnz
outsb
loopne
fisubrl
and
fcmovu
ficompl
pop
sbbb
dec
inc
jno
inc
adc
xchg
mov
jg
push
sub
pop
jns
aaa
sahf
sti
or
add
ds
mov
daa
int
fs
push
lcall
sbb
jns
xchg
adc
or
pop
mov
mov
xor
dec
clc
jg
lds
inc
mov
xchg
mov
sbb
lods
jo
xor
mov
or
aad
push
out
pop
inc
or
aas
dec
test
and
test
dec
push
fadds
mov
psadbw
pop
pop
cwtl
cli
inc
push
inc
and
in
xor
loop
mov
movsl
jns
call
shl
pop
rolb
pop
adc
out
movsb
pop
js
jl
jo
sbb
lods
sahf
inc
fcmove
aas
shrl
mov
pushf
cmpl
testb
xchg
pop
mov
mov
hlt
mov
sarb
shr
lock
pop
xchg
adc
mov
and
pop
mov
push
out
sbb
sahf
sbbb
ja
aam
jge
cmpsl
sub
xchg
jecxz
inc
push
pop
jecxz
mov
mov
popf
inc
lods
fdivrl
pusha
int3
idivb
xorb
test
pushf
fwait
in
mov
cmp
mov
jo
xlat
or
test
mov
sub
pop
lds
push
lcall
cld
ljmp
jl
pop
in
jae
adc
mov
lods
sbb
push
std
mov
mov
cld
test
jnp
xor
mov
or
outsl
dec
icebp
mov
clc
xlat
push
adc
test
movups
imul
pop
test
xlat
int3
cmp
cmpb
mov
insb
rolb
mov
pop
or
ljmp
mov
dec
stos
jnp
inc
cltd
sahf
push
mulb
lret
add
in
cmp
lock
xchg
lock
pop
and
test
jecxz
movsb
add
imul
mov
xor
jge
stos
mov
daa
dec
push
fsub
shl
sbb
pop
sub
test
jp
jmp
leave
push
xchg
inc
mov
push
in
inc
je
or
and
test
int
rolb
mov
js
lods
addr16
or
jb
xor
jg
jge
adc
mov
sbb
pop
iret
add
movsb
cwtl
xchg
insb
in
sbbl
lods
fdivs
imul
shrb
cmp
sbb
pop
popf
popa
les
pop
mov
das
xchg
cld
in
jb
inc
push
mov
and
enter
or
xor
push
gs
xchg
mov
sub
pusha
fcompl
adc
push
add
push
jge
es
and
xchg
xchg
xor
pop
ret
xchg
cmp
les
add
cmp
mov
repnz
jo
jmp
xchg
ss
mov
mov
sbb
icebp
das
inc
mov
insl
mov
push
xor
mov
xor
lcall
shlb
scas
in
jl
xchg
test
xor
ds
adc
cld
test
and
jecxz
into
and
dec
and
cld
out
add
xchg
test
cmp
mov
xor
sub
aam
or
fstpl
jns
loope
inc
ss
dec
insb
pop
scas
div
inc
xchg
pop
andl
rcrb
mov
test
or
push
fninit
pop
mov
push
xchg
add
lret
add
sbb
jns
rorl
jno
je
cmp
jmp
insb
mov
cmp
mov
and
and
out
cmpsb
gs
popa
nop
jmp
xchg
fisubs
adc
rcrl
fcomi
mov
sub
outsb
dec
sbb
inc
lret
jb
loop
cli
xlat
push
addr16
jbe
stos
sbb
adc
mov
lret
or
push
cld
fidivrs
pop
push
lock
dec
or
push
stos
or
or
mov
movsl
mov
adc
mov
inc
testl
mov
jb
lret
and
ret
mov
test
push
inc
out
bound
sub
sub
lret
add
mov
dec
or
dec
cmpb
int
pusha
lcall
push
dec
dec
jo
dec
sbb
push
xor
lahf
enter
lods
add
stc
mov
push
dec
lahf
popa
insb
es
and
std
inc
mov
and
pop
push
push
xchg
mov
stos
adc
aad
fwait
cmpl
fists
xor
mov
iret
gs
ficoml
xor
pusha
dec
push
mov
fiaddl
fsubrs
jbe
xchg
jmp
pop
push
sub
inc
pop
popa
fs
leave
jo
les
jg
into
ds
pop
jae
lods
out
int3
outsl
dec
sahf
mov
jmp
pop
sub
jno
aaa
dec
jle
ja,pt
jo
sbb
es
push
bound
es
pop
imul
test
scas
add
or
adcl
cld
cmpl
dec
sub
movsl
ja
mov
pusha
or
out
nop
fcompl
gs
cwtl
lret
push
lret
pop
jb
aaa
jae
push
mov
test
addr16
sub
or
and
imul
sub
sbb
ret
mov
daa
out
push
and
leave
fidivs
and
int3
das
xchg
ss
lret
aam
loopne
and
gs
lahf
push
push
stos
sbb
shll
aam
dec
clc
jbe
inc
xchg
iret
mov
shl
jno
dec
pop
stc
jg
sub
jb
dec
xchg
push
cs
data16
jge
es
scas
adc
rcll
jbe
adc
xchg
mov
cli
scas
sub
data16
lods
cmpsb
pushf
jecxz
pop
mov
cmp
lahf
xor
cmp
fmull
pop
sbb
aad
mov
and
cmc
in
add
or
insb
aaa
in
rorl
xor
out
adc
jne
lcall
push
add
enter
mov
aaa
cld
insb
mov
xchg
xchg
add
movsb
add
lods
in
dec
pop
add
cmc
test
scas
adc
adc
subl
lcall
xor
clc
sub
jge
pop
mov
fsubl
adc
mov
xor
test
imull
jo
jle
push
xchg
push
in
adc
xchg
cmpsl
pushf
notl
sbb
out
enter
pop
in
stos
clc
subb
jae
pop
adc
or
cmp
mov
xchg
xor
lods
cmp
cmp
push
dec
aas
cli
lods
sbb
lock
popa
adc
fsubrl
test
or
subb
popf
xchg
xor
repz
pop
sar
xchg
xchg
clc
pop
xor
fs
popa
sahf
cld
add
movsb
enter
cmp
sti
or
aas
pop
xchg
cmp
xor
stos
add
pop
jecxz
cli
and
lods
loop
ror
mov
enter
mov
sub
pop
lds
movsl
aas
xor
ss
jbe
sti
dec
dec
aas
rorb
adc
cli
sub
inc
mov
insb
outsb
ja
sub
mov
test
pop
jp
cmp
out
aas
rcrb
mov
imul
and
adc
sbb
mov
lret
lret
insb
cmc
and
mov
cmp
xchg
dec
in
pusha
push
arpl
adc
jnp
and
fnstsw
cli
sub
shll
adc
sub
mov
fwait
out
push
scas
add
add
fsts
dec
repnz
jecxz
aas
arpl
aaa
scas
xchg
and
sahf
lahf
cmp
lods
ds
negb
lret
test
aam
jno
dec
rcrb
sahf
les
imul
mov
jp
jno
mov
aaa
mov
dec
insb
out
ljmp
xor
jl
pop
add
cmp
and
adc
dec
or
xor
jmp
pop
sahf
sarb
fidivrl
pop
and
pop
mov
mov
hlt
into
lock
push
adc
fnclex
add
pop
sti
cmp
cmc
and
insl
pushf
inc
lea
jno
and
pop
and
repz
and
mov
sub
xchg
stos
outsb
sbb
scas
roll
fmuls
call
or
sub
add
cmp
cmp
inc
add
cmp
dec
shl
aad
mov
cmp
xchg
xchg
aas
sti
sub
mov
push
fbld
lcall
shl
xor
add
inc
pop
cmp
imul
sub
and
ljmp
jg
lds
outsb
pop
test
mov
int
mov
outsb
pop
xor
adc
xchg
dec
adc
inc
lcall
mov
xrelease
rorl
pop
cmp
jo
inc
pusha
loope
and
into
jo
fwait
lds
jle
out
mull
pop
imull
inc
mov
mov
mov
xchg
lcall
je
dec
adc
jno
sbb
pop
push
mov
ljmp
scas
ret
aaa
cmc
pusha
mov
mov
or
inc
jp
sbb
xchg
jl
mov
or
movb
mov
frstor
inc
cwtl
mov
ja
inc
mov
pop
adc
push
push
pop
and
xor
orb
cli
ja
xor
cmp
push
es
cmp
pop
movsl
sbb
mov
ss
ljmp
mov
pop
sbb
icebp
lea
in
clc
fstpt
mov
call
ljmp
push
adc
push
adc
cmpb
push
add
daa
fwait
jne
jne
icebp
mov
testl
adc
movsb
pop
push
pop
scas
pop
mov
ss
movsl
add
dec
mov
int
mov
sbb
enter
dec
movsb
imul
adc
mov
xor
sbb
and
cmp
and
sub
cwtl
xorb
adc
faddl
add
insb
ja
mov
mov
js
jp
mov
add
shrl
jb
adc
sbb
fbstp
nop
pop
add
xchg
cs
sbbb
arpl
ja
rol
addr16
push
or
jno
imul
iret
mov
nop
or
push
lretw
xor
pop
bound
cmp
xlat
mov
stos
daa
pop
stos
jecxz
push
out
fcomps
sub
mov
dec
fidivl
push
filds
add
iret
xchg
dec
adc
jecxz
loop
flds
pop
jbe
xorl
clc
mov
gs
xor
movsb
add
mov
nop
mov
mov
adc
stc
fmul
inc
inc
stc
fimull
lret
movsl
jmp
dec
add
rclb
push
mov
adc
iret
cli
adc
das
sbb
fistl
aad
xlat
xor
movsl
cltd
pop
sub
js
xor
mov
mov
fildll
insb
ret
lcall
cmp
adc
xor
mov
fsubrs
in
dec
push
shl
mov
insb
mov
xchg
jp
push
or
mov
hlt
inc
das
mov
fistl
js
aam
sar
pop
mov
fwait
and
adcl
outsb
inc
pop
loop
mov
shr
rorb
lea
mov
mov
out
loope
xor
cwtl
add
aas
addr16
xor
shll
fistpll
ljmp
test
lods
mov
pop
mov
ljmp
stos
mov
mov
mov
and
and
push
ds
push
and
inc
sbb
mov
or
cmp
jne
es
iret
pop
ss
and
lds
lds
sbb
pop
je
nop
fiaddl
iret
outsb
roll
pop
mov
fildl
mov
or
sub
es
adc
sub
xor
nop
repnz
scas
mov
sub
das
xchg
test
or
mulb
jnp
push
xchg
adc
daa
lea
int
repnz
xor
mov
testl
les
mov
lea
mov
mov
sbb
fnstsw
adc
jno
fldcw
or
inc
std
incl
jns
inc
push
cmc
loopne
rcll
push
push
jl
popf
aam
out
js
clc
sbb
cli
loopne
dec
cmp
fnstsw
gs
push
std
scas
push
ljmp
ds
or
xchg
scas
inc
lods
adc
enter
sar
push
fisttpll
fisttps
and
fists
sbbl
adc
imul
and
and
lcall
sbb
fs
cmp
mov
inc
inc
or
arpl
fwait
jno
xchg
mov
jp
fldt
pop
inc
or
cli
dec
iret
ss
or
cmp
push
pusha
dec
fwait
divb
daa
in
xchg
sbb
or
jns
sbb
jb
inc
clc
clc
pop
icebp
aas
add
sub
in
fistl
pop
pop
mov
dec
lahf
cwtl
decb
mov
outsb
and
xor
subl
jecxz
jne
mov
xchg
test
rclb
xchg
xor
jb
push
ret
out
fsubr
mov
jg
sub
nop
lret
xor
in
inc
push
aad
inc
sbb
add
jne
mov
jb
pop
pop
test
out
clc
cmpsb
notl
push
inc
jb
adc
clc
stc
out
push
cmp
lahf
pop
mov
iret
sub
sbb
jg
jb
mov
xor
pop
ds
pusha
xchg
negb
gs
mov
mov
xor
das
pop
adc
int
dec
out
stc
pop
int3
or
mov
jns
out
fisubl
lock
jae
gs
iret
add
mov
sbb
dec
cmp
test
dec
xor
int
xor
shrl
divb
inc
lock
testl
mov
sub
sub
jl
jne
sub
jl
jmp
mov
add
adc
and
insb
imul
pop
sti
orb
adc
mov
adc
gs
cmpsl
stos
lds
popf
mov
out
mov
jnp
aam
jno
pop
je
pusha
adc
call
sub
adc
adc
mov
jp
lods
andl
or
loop
mov
push
ja
mov
imul
inc
or
scas
sbb
ret
sahf
movsb
iret
mov
subl
movsl
testl
lock
push
jg
jo
inc
mov
scas
addr16
insl
mov
add
cli
add
enter
jl
ljmp
out
mov
adc
int3
push
jmp
std
xchg
jp
or
pop
inc
cwtl
aas
fcmovbe
lahf
sbb
or
push
stos
jns
ficoml
aad
cli
in
push
pop
mov
cld
adc
mov
cltd
jmp
bound
fists
pop
cmp
jne
cli
cmc
out
pusha
dec
das
inc
test
shll
lds
dec
in
or
std
stos
fbld
aam
out
sub
add
aad
lahf
jo
cli
sbb
loop
pop
add
in
dec
ljmp
xchg
mov
in
addl
test
popa
mov
or
scas
or
adc
aaa
sub
sub
or
pop
inc
add
stos
cmc
lea
pop
and
add
ret
xchg
dec
pop
adc
sbb
push
ja
lret
or
scas
movsl
push
cltd
mov
adc
push
and
cmp
push
inc
add
mov
push
insl
gs
pavgw
sub
rorb
cltd
xlat
in
nop
mov
imull
lret
or
dec
cld
daa
mov
lahf
inc
adc
aam
loop
and
and
loope
test
xchg
adc
mov
adc
mov
push
call
ret
sub
fnstcw
imul
xchg
hlt
mov
call
mov
popf
out
adc
sti
into
push
push
mov
and
aad
and
adcl
js
push
movb
dec
add
sbb
pop
aam
scas
add
jno
dec
sarl
sbb
out
rcll
mov
sbb
outsb
dec
inc
shlb
and
xchg
icebp
and
aaa
lret
add
or
and
pop
mov
lods
add
xor
lea
fists
add
fs
rorb
sub
out
or
rolb
mov
pusha
roll
aam
testb
xchg
sub
xor
mov
add
fwait
sbb
add
dec
iret
sbb
adc
xchg
shrb
rolb
test
pop
xor
std
gs
jns
fwait
inc
popa
mov
rorl
sarl
das
inc
push
fsts
aaa
ja
add
add
f2xm1
lods
ljmp
stos
mov
loope
or
test
mov
mov
ret
jno
jp
and
lds
push
mov
jae
lret
ljmp
inc
clc
dec
scas
inc
shlb
test
pusha
xor
xchg
inc
jnp
insb
fs
mov
scas
mov
push
mov
subl
test
push
out
mov
into
add
aaa
jle
shl
stos
pop
ja
stos
in
fdivrl
sub
test
push
pop
hlt
pusha
adc
dec
mov
sub
dec
push
mov
shl
js
int
pushaw
pop
dec
xchg
and
fmull
inc
dec
jno
push
jnp
outsb
sbb
out
or
mov
and
xchg
jnp
jp
inc
and
xchg
scas
stos
xor
test
sbb
jp
xchg
andl
jae
flds
push
mov
aam
xchg
fbld
clc
lahf
scas
insb
fs
push
gs
xor
xchg
sub
inc
pop
jnp
pop
rcl
dec
jp
sub
int3
dec
std
popf
mov
bound
pop
mov
js
inc
js
push
and
add
test
adc
pusha
out
adc
fsubs
movsl
hlt
enter
fadd
mov
repz
arpl
cmp
sbb
ja
adc
aad
fidivrs
dec
and
aas
fadds
insl
out
xchg
mov
cltd
pop
xchg
jle
mov
push
xchg
push
cmp
std
js
inc
rcrl
jbe
cmp
movsb
popf
sti
add
fistpl
clc
pop
in
out
xor
or
test
sti
nop
sub
sbb
xor
shll
add
xchg
cmp
inc
lret
xchg
in
lcall
dec
jge
rolb
sub
inc
cs
addb
sbb
mov
push
mov
fisubrl
push
dec
xchg
stos
gs
fistpl
scas
js
pop
mov
sbb
push
push
mov
xchg
mov
sbb
negl
mov
cmp
stc
scas
add
push
iret
mov
mov
repnz
pop
enter
adc
mov
out
test
mov
mov
enter
aas
ret
and
orl
add
cmp
mov
clc
jp
outsb
ljmp
ds
jbe
repnz
sbb
cltd
xor
shl
dec
js
ss
mov
add
call
xorl
es
icebp
xor
stos
in
dec
dec
dec
or
mov
mov
xor
shl
mov
nop
mov
les
ds
inc
inc
sub
push
add
sti
mov
push
pop
inc
pop
lods
lret
shl
test
mov
jnp
outsb
pusha
adc
mov
stos
xchg
mov
sub
lahf
shr
ds
imul
mov
fbstp
push
jp
cmpsl
cli
dec
jno
push
xor
dec
test
aam
push
adc
and
inc
mov
or
cmp
rorl
sbb
gs
and
lahf
lahf
add
aas
lcall
and
mov
or
inc
or
in
daa
sbb
mov
fs
pop
out
fstl
xchg
and
xor
jno
mov
insb
mov
or
sub
sub
aas
cmp
cwtl
mov
fsts
daa
or
mov
test
dec
arpl
outsl
cmc
out
push
mov
or
sbbb
mov
and
jmp
push
jl
xchg
adc
cmp
je
and
insb
aad
fdivrl
mov
shll
xchg
xorb
sbbl
dec
sbb
adcl
into
jg
cmp
je
xor
lods
in
sti
jnp
jge
push
mov
mov
mov
cmp
mov
inc
sbb
xchg
int3
dec
sub
fimuls
push
imul
add
js
pop
pusha
mov
stos
movsb
roll
xchg
push
inc
cmp
shll
orps
jmp
shlb
popa
xchg
cmp
dec
push
ljmp
shll
mov
cltd
movsl
inc
fsubs
scas
xchg
or
push
ret
cmp
sbbl
mov
mov
lahf
mov
enter
dec
in
pop
aas
addr16
ror
dec
aam
pop
hlt
cs
mov
lret
jecxz
hlt
int3
je
xchg
rclb
fidivl
loopne
addl
mov
mov
and
inc
jno
stc
mov
popa
lds
mov
loope
out
pop
pop
es
pop
pushf
ret
je
repz
and
iret
xor
xor
push
arpl
cmp
or
aas
insl
jmp
loop
sub
in
stos
adc
nop
inc
das
push
mov
mov
adc
stc
bound
leave
nop
daa
orl
mov
pop
xor
into
mov
push
and
push
lds
movsl
jmp
mov
lods
push
int
stos
dec
addr16
shlb
lods
adc
sbb
lock
jo
ss
jp
stos
out
xor
mov
and
sbb
stos
scas
enter
test
pop
and
lahf
mov
sbb
push
push
push
jle
fnstsw
sbb
es
inc
nop
insb
in
push
imul
or
fwait
repz
cmpl
pop
repnz
inc
pop
icebp
jge
adc
xor
pop
adc
adc
out
jne,pt
sarb
and
jo
push
out
lahf
mov
inc
arpl
addr16
cmpb
pop
mov
enter
jl
mov
push
test
mov
cmpsb
out
ljmp
mov
inc
mov
adc
add
xchg
xor
or
orb
inc
dec
mov
aad
fiadds
icebp
fists
lock
ja
jp
mov
and
sbb
jl
jmp
xlat
arpl
adc
push
sbb
aad
sarb
jge
push
jne
es
sub
mov
xchg
xlat
popa
cld
inc
sub
cli
mov
sub
movsl
ds
call
and
daa
fwait
pop
sub
iret
mov
ss
inc
lea
ret
icebp
in
movsl
sbbb
add
fadds
add
jno
mov
xchg
movsl
sub
push
pop
inc
into
insl
in
push
scas
and
xchg
pusha
and
je
ja
fadds
ret
repz
in
xor
std
xor
adc
out
xchg
jo
pop
xchg
sbb
xchg
les
xchg
cltd
jne
sahf
call
int
aad
sahf
pop
pop
call
jle
enter
ja
in
mov
ja
stos
clc
pop
xchg
inc
sti
mov
xchg
mov
cmp
movsb
and
pop
push
and
out
mov
push
push
addb
sbb
inc
jle
inc
or
mov
xor
push
out
dec
lods
mov
inc
jmp
jbe
test
int
test
and
pusha
pop
fwait
xchg
test
repz
fs
push
pushf
bound
or
inc
cli
mull
push
test
shl
arpl
xor
test
xchg
leave
mov
je
inc
out
dec
fucomp
mov
and
xor
insl
adc
xor
xchg
or
call
lock
jp
xchg
mov
xor
xchg
xchg
pop
xchg
cli
jne
pop
or
int3
je
lods
fdivrs
ret
int3
sub
xchg
inc
dec
inc
into
inc
push
fbld
cmpsb
push
dec
inc
inc
pop
cmp
out
cmp
jnp
jmp
add
int
pop
sub
push
cmp
mov
int3
pusha
inc
push
xor
mov
es
mov
insl
cltd
ret
pop
mov
add
loopne
cs
or
je
or
push
dec
js
and
xchg
out
inc
sub
repnz
andb
out
call
mov
pop
mov
inc
inc
fdivrs
sbb
push
sub
push
cmp
sarb
xchg
cmpsl
loope
out
pop
cmpsl
out
dec
inc
inc
fwait
pusha
clc
test
cmc
mov
in
test
mov
push
stos
gs
or
sub
and
mov
pop
sub
lret
cwtl
jp
pop
xor
roll
in
lcall
dec
insb
icebp
push
cmp
sbb
es
aad
cmp
shll
mov
xchg
mov
push
push
popf
outsb
push
scas
pop
cmc
pop
push
cmp
adc
mov
shl
sub
cwtl
cmc
sar
pop
jecxz
out
std
cli
jge
adc
arpl
test
arpl
mov
mov
pop
addl
cmp
and
movsb
aaa
adc
cltd
dec
cli
jmp
and
push
or
cmpsl
cmc
add
daa
in
and
jo
imul
lret
push
sbb
aaa
cmp
loop
stc
clc
int3
sbb
xchg
cltd
mov
sbb
adc
jbe
fucomi
pop
popf
jo
movsb
aam
ds
xchg
push
mov
nop
dec
mov
or
pop
mov
xor
and
cmp
jnp
int3
dec
and
sbb
std
lea
push
lcall
jne
and
pusha
fidivs
cmp
andl
push
xor
pop
movsb
mov
adc
pop
jno
mov
call
mov
inc
or
mov
jecxz
jge
incb
add
repz
and
and
and
repz
mov
inc
pop
sbb
pop
jo
rorl
pop
stos
mov
stc
add
mov
fs
and
aas
mov
xchg
insb
shrb
scas
mov
inc
jno
aaa
mov
lret
cmpsl
push
dec
dec
js
mov
in
sub
sbb
and
adc
lret
imul
dec
sbb
lods
push
mov
dec
jge
outsl
aad
and
pop
adc
popa
fsubl
xchg
and
sbbb
sbb
bound
std
jl
mov
test
dec
jge
jp
cmpl
in
jb
and
lock
jno
mov
test
cmp
gs
cmp
pop
dec
xchg
jp
sub
mov
loopne
sbb
cmp
leave
lcall
mov
das
dec
mov
insb
aam
adc
lods
ror
ret
mov
xchg
aas
push
mov
push
movups
out
jbe
jecxz
test
test
mov
pop
cmpsl
jb
and
shrl
cmpsb
xor
xor
imul
out
cmp
sub
add
inc
dec
movsl
adc
jnp
shlb
adc
scas
push
mov
loop
mov
call
sarb
mov
cmp
bound
xchg
push
push
dec
inc
rcr
inc
mov
xchg
xchg
sbb
incl
ret
pop
xor
negb
cltd
dec
mov
fisubs
addb
and
jo
rclb
mov
mov
dec
and
inc
push
xchg
leave
jge
rcrl
cs
out
push
lea
fmuls
out
inc
mov
xchg
mov
hlt
fisubs
inc
jbe
xor
mov
ret
cmp
in
ss
pop
push
decl
scas
or
mov
lds
inc
push
rorb
repnz
add
sub
jns
sar
or
inc
pop
jno
bound
or
jp
dec
bound
jmp
fnstenv
xor
dec
mov
jno
cmpsb
add
jecxz
fildll
pushf
lcall
sarb
add
in
pusha
outsl
xchg
test
cli
je
mov
mov
xor
pop
pop
xor
popf
mov
dec
cmp
jle
test
cmp
lods
lret
pop
xlat
andb
jns
loop
mov
cmp
insl
repz
xor
jle
mov
aaa
test
aaa
lret
scas
ret
ds
mov
aad
in
sbb
mov
insb
or
cmp
test
mov
shll
push
outsb
push
jns
push
test
jno
out
sub
adc
insl
insl
pop
inc
popf
ljmp
inc
fistpll
push
js
adc
out
and
fnstenv
movsl
subb
enter
xchg
push
lret
lods
jge
dec
fnstsw
mov
mov
xlat
pusha
inc
insb
push
testl
xor
lret
mov
cmp
popa
xchg
push
add
cmp
insb
divl
cmp
repnz
movsb
in
cwtl
jecxz
push
cmpsl
and
sbb
jecxz
je
xchg
in
xchg
add
les
aas
or
pop
leave
sub
xchg
lahf
sub
js
mov
setno
mov
inc
and
mov
rol
fisubrs
add
arpl
pop
sbb
pop
pusha
jno
lret
jbe
mov
pop
lods
cmp
cmp
sbb
sahf
adc
aas
sbb
mov
xchg
aam
sbb
pop
mov
scas
popf
jmp
or
rcrl
fcoms
pop
outsb
mov
dec
push
rorb
ljmp
mov
xchg
cmp
jbe
and
push
cmp
mov
inc
push
lock
sbb
mov
sub
push
ret
addb
xchg
sub
push
cmp
les
xor
cmpsb
inc
jp
sbb
je
icebp
push
movsl
xchg
daa
push
fisttpl
shr
pop
insb
in
xor
add
in
fbstp
add
test
sbb
and
nop
mov
jae
add
add
xor
pusha
jno
fld
pushf
sarl
sahf
fildll
pop
push
mov
push
add
and
jle
aad
and
adc
mov
pop
mov
xchg
xchg
addr16
or
add
mov
or
dec
xchg
mov
sbb
fcompl
scas
std
mov
inc
cmp
cmp
xchg
sub
and
cmp
ljmp
pop
cmc
rorb
xor
call
adc
enter
mov
shl
aam
aas
sbb
ret
fstpt
xchg
dec
add
jae
ret
and
jb
add
imul
aas
or
jmp
in
adc
test
lods
shrl
ss
lahf
sarb
addl
inc
addb
shlb
pop
and
inc
in
hlt
push
pop
clc
xchg
je
xor
lret
or
lock
dec
mov
in
ja
and
push
xchg
clc
adcb
subb
and
xchg
jb
jns
or
add
mov
sub
pop
aam
andb
aaa
xor
add
jnp
adc
enter
cmp
pop
xorl
loope
movsl
jb
mov
jl
hlt
xchg
in
sub
cmp
pop
inc
cmp
outsb
adc
or
jnp
lret
popa
mov
lea
sbb
xchg
ret
iret
in
pusha
jns
js
les
shl
clc
cmp
mov
xchg
push
xor
jle
addr16
pop
or
mov
mov
in
add
mov
lods
out
sub
loop
lret
or
shlb
push
dec
sarl
pop
mov
cli
loope
pop
or
outsb
rclb
add
inc
xchg
inc
push
xor
xchg
jge
cld
adc
insb
dec
js
sahf
xlat
cs
lahf
shr
add
jnp
negl
fisubrl
mov
inc
dec
jno
push
push
rolb
jl
sbb
daa
xchg
xor
dec
sahf
pop
imul
shll
scas
test
into
pop
nop
dec
or
adcl
adc
es
mov
pop
xchg
xor
xchg
mov
loopne
test
xchg
jmp
or
jl
adc
clc
mov
mov
push
mov
loop
insl
sbb
sub
outsb
les
das
div
stos
mov
lret
add
inc
inc
out
in
mov
cwtl
enter
or
push
jg,pn
jmp
test
sahf
mov
imul
in
or
bound
fldenv
adc
stos
jg
pushf
lahf
inc
fdivr
mov
mov
fsubs
mov
imul
mov
int
clc
xchg
lds
lock
imul
and
or
mov
gs
fistps
mov
sub
out
xor
popf
insb
push
in
or
in
ljmp
push
jne
pop
ds
fadd
movsl
addr16
jecxz
cmpsb
nop
movsb
popf
add
xor
push
lret
pushf
clc
xor
js
lret
mov
popa
js
es
push
jbe
dec
sbb
ja
sbb
aas
shrb
cmp
movsb
and
sbb
testl
add
jae
mov
fdivrl
mov
jns
fdivrl
or
push
lahf
insl
xchg
pop
cli
add
dec
add
clc
outsb
fxam
or
cs
cmpsl
dec
mov
pop
xchg
adc
data16
mov
push
push
jl
fisttpll
bound
lret
cmp
mov
push
pop
in
shll
push
dec
and
lods
jmp
lret
xor
xchg
sub
test
xor
dec
xor
rclb
dec
loope
inc
popa
outsl
push
dec
cli
pop
sbb
xlat
rorb
mov
lret
add
dec
add
fcmovnbe
insb
sub
jecxz
mov
lahf
cltd
sub
dec
push
mov
mov
xchg
popf
addl
jb
addr16
testb
push
ja
sbb
cltd
in
xchg
inc
pushf
fisubl
sub
xlat
sub
adc
hlt
daa
fwait
iret
shrb
adc
call
ja
jno
cmp
jmp
inc
sbb
ds
mov
mov
inc
sub
mov
pop
inc
pop
rcr
mov
push
loopne
enter
push
fildll
test
push
imul
cwtl
jne
leave
adc
push
add
lahf
jmp
cmpsl
push
mov
leave
into
push
xchg
sbb
test
cmpsl
push
sbb
push
sahf
sbb
lock
enter
xchg
loop
popa
push
add
or
gs
xchg
push
mov
and
ds
clc
out
pop
lds
pop
aad
movsl
xchg
jp
movsb
xor
sbb
push
mov
mov
or
jg
aad
push
shrl
les
or
cmpsb
mov
adc
push
and
aas
es
ja
cmp
test
cmp
test
rcr
fstpt
pop
jp
fs
stos
push
cmp
push
push
clc
mov
adc
adc
out
xchg
call
pop
js
lds
push
sub
out
and
and
xor
push
lahf
mov
cli
and
add
imul
xchg
inc
je
xor
add
mov
push
sub
loope
fisubl
fcomps
jns
imul
jno
mov
sbb
pop
pop
adc
icebp
xchg
jp
sbb
arpl
lods
jmp
add
cmc
notb
cmpsb
movsb
add
pop
shll
jg
sub
icebp
or
push
or
ret
inc
repnz
outsl
je
cmp
aas
test
in
imul
lcall
push
or
inc
pop
inc
test
add
das
adc
popf
jge
push
adc
lods
std
out
les
orb
dec
insl
dec
mov
add
outsl
cld
pop
pushf
lret
into
loop
bsr
xor
push
inc
sbb
fwait
ds
mov
cmpsb
in
sub
cmpsl
pop
pop
jle
das
push
scas
and
cmpsb
repz
popf
mov
push
inc
fs
lods
dec
sub
push
imul
xchg
pushf
hlt
stc
in
xchg
dec
mov
sbb
fwait
xchg
in
fsubrs
push
jg
mov
leave
jp
out
imul
push
jmp
call
lcall
addr16
jp
cmp
xchg
jg
pop
or
xor
cmp
out
jbe
mov
sub
scas
subl
test
cmp
sbbl
sub
add
js
rcrb
mov
test
hlt
loope
mov
or
inc
dec
cmp
dec
dec
xchg
test
cmp
pop
or
push
xor
lds
ds
mov
cmp
das
sub
and
leave
dec
sub
inc
dec
bound
outsb
out
push
sbb
xorb
fistl
ja
or
repnz
xor
xchg
jbe
call
inc
aam
pop
xor
int3
pop
fs
jo
and
movb
dec
inc
jle
dec
iret
addr16
jg
cli
pop
xlat
imul
add
pusha
lret
lahf
adc
out
push
push
ljmp
fiadds
int3
in
in
in
and
lret
push
pcmpeqb
ret
leave
cwtl
xchg
stos
jl
jmp
out
cld
dec
repz
roll
dec
mov
or
xchg
cltd
inc
mov
xlat
push
xchg
dec
stos
pop
or
add
aaa
mov
xor
cmpsb
dec
mov
mov
fucomi
mov
add
hlt
and
adc
cld
jnp
in
mov
sbb
or
xchg
out
notb
xchg
sarb
stc
push
imul
jle
popf
adc
vmovups
scas
sub
loop
sub
outsb
dec
xchg
adc
mov
jge
sub
sub
repnz
push
xor
paddusw
sub
pop
cs
sbb
test
nop
outsb
pop
jo
xlat
daa
add
mov
cmp
mov
pminsw
insl
test
adc
push
lahf
inc
mov
add
cmp
add
mov
cmc
andb
sbb
daa
mov
dec
mov
jno
cwtl
lea
imul
mov
stos
push
adc
repz
adc
pop
adc
clc
fmull
fnsave
icebp
addl
ljmp
xor
and
leave
mov
or
int3
mov
pushf
mov
aad
daa
leave
jne
xor
lret
cwtl
add
shrb
das
divb
xor
in
jae
shl
lods
add
lock
aad
mov
out
imull
dec
mov
mov
outsb
fists
jb
inc
pop
inc
lock
inc
mov
cmpsl
cmp
bound
mov
dec
add
add
movsl
outsb
cmp
or
or
mov
cmp
jl
push
mov
es
sbb
xchg
xchg
std
pop
fcomps
fstl
mov
push
xchg
lahf
add
push
push
xor
mov
lea
add
bound
scas
stos
mov
xchg
and
inc
popf
cmpl
xchg
mov
jl
icebp
sbb
notl
popa
push
cmp
push
in
lods
imul
lea
dec
pusha
sbb
repnz
movsl
cmovle
inc
xchg
jns
jp
setl
mov
nop
shl
inc
adc
imul
int
jmp
les
hlt
jbe
mov
lock
or
xchg
testb
mov
lret
cs
lods
sub
stos
push
mov
aam
push
add
out
hlt
cmp
call
cmp
or
loope
inc
das
jne
aad
pop
movsl
enter
sub
dec
cli
sbb
or
mov
in
pop
gs
enter
xchg
out
leave
nop
pusha
sbb
pop
out
repz
clc
fcoms
jg
sti
push
dec
push
outsb
cmc
mov
sbb
daa
push
shlb
or
pop
into
ret
and
das
test
cmp
aam
push
sbb
arpl
pusha
sub
or
mov
test
mov
out
nop
xchg
loopne
adc
fisttps
dec
push
mov
and
ret
xor
mov
jl
add
xchg
sub
mov
jle
xlat
jp
rol
ret
dec
inc
fs
cmc
pop
mov
or
stos
test
push
lret
adc
xchg
rcr
cltd
push
add
hlt
pusha
mov
out
notb
testl
push
mov
inc
xchg
sub
inc
mov
pusha
xor
sbb
mov
fildll
dec
clc
jbe
xchg
jl
cmp
xchg
fwait
popa
inc
inc
push
push
aam
mov
nop
inc
sbb
jle
icebp
iret
hlt
loope
sbb
test
mov
mov
es
xor
imul
ja
fiadds
scas
and
test
dec
loopne
xchg
nop
adc
movsb
aad
sub
or
ljmp
fcoml
jle
shrb
mov
les
xchg
sahf
jae
jo
xor
mov
popa
aam
dec
mov
scas
dec
xchg
rcrb
or
sbbl
es
xchg
outsl
inc
mov
pop
push
sti
jns
mov
jae
pop
and
cwtl
mov
loope
repnz
cmp
dec
and
adc
xorb
push
jp
notl
adcb
rcrb
sub
das
clc
sub
les
jne
jp
push
gs
pushf
mov
jle
sbb
mov
mov
cmp
add
shr
add
repnz
js
pop
xchg
cld
cmp
andl
shlb
mov
and
sbb
pop
push
imul
xchg
imul
imul
icebp
xor
mov
or
xchg
mov
push
fstpl
add
mov
or
mov
fcoms
inc
jl
sarl
outsb
add
jp
push
test
fbld
test
sbb
dec
ret
je
in
cmp
cmc
xor
adc
lds
mov
xor
lods
data16
or
popa
push
cmp
loopne
in
ss
pop
aaa
xorl
lahf
cmp
sbb
popa
jp
mov
pop
mov
sub
adc
out
inc
ds
popa
les
in
pushw
mov
fidivs
jmp
pop
orl
jne
lcall
xchg
jns
pop
aaa
xor
std
cwtl
cmp
push
xchg
mov
xlat
sbb
sub
sbb
xchg
xchg
xor
repz
cwtl
out
nop
adc
outsl
outsl
out
daa
cmpsl
in
push
pop
lret
dec
push
mov
jb
jge
lcall
mov
add
aad
insl
lret
lret
sub
or
stos
mov
jns
jmp
scas
inc
pop
mov
push
test
add
aas
ljmp
jg
pushf
cmp
gs
mov
popa
mov
sub
sub
repnz
cwtl
pop
addr16
mov
cmpsb
aad
adc
cmp
xchg
pop
pop
cld
cld
jge
xor
mov
out
inc
pop
xor
jnp
decl
mov
cmpsl
pop
iret
sub
mov
inc
add
jl
jo
cmp
push
pop
iret
adc
fsubrs
or
mov
bound
xchg
outsl
fadds
jmp
dec
testl
mov
mov
frstor
inc
or
jae
mov
int
pop
pop
inc
xorb
call
pop
inc
cmp
xlat
adc
pop
push
pop
cmp
adc
fs
add
ja
xor
sbb
inc
pop
push
sbb
ljmp
adc
jns
or
mov
movsl
jmp
xchg
push
and
inc
xor
pop
push
cmp
add
mov
out
cmp
xchg
add
rcrl
outsl
insl
add
mov
xchg
ja
inc
cs
xchg
sub
adc
push
cmpsl
aaa
lods
popaw
xchg
clc
pop
pushf
iret
sbb
add
push
sub
jbe
and
stos
cltd
pop
js
push
out
rcll
lret
and
fstpt
lret
pop
sub
sub
lahf
das
ds
xchg
call
pop
dec
or
push
sbb
mov
mov
outsb
sbb
cmp
mov
add
dec
xor
aam
inc
mov
lahf
push
fdivrl
cmp
movsl
jl
push
sbb
test
loop
dec
test
push
cmp
mov
pop
mov
cmp
movlps
pop
mov
jecxz
in
mov
and
inc
jno
sub
and
or
repz
cmovo
cmp
shlb
addb
adc
jmp
arpl
sahf
mov
push
jb
dec
mov
sub
int
mov
jg
sti
adcl
or
out
sbb
xchg
loope
or
pop
int3
inc
sbb
xor
adcb
xchg
pop
or
mov
pop
push
cli
fsts
das
xchg
repnz
mov
rcl
jg
dec
movsl
insb
out
ret
jo
cmp
or
aad
dec
mov
add
jle
jb
lock
cld
fistpl
inc
fistl
mov
add
pusha
cmpsl
out
push
push
pop
roll
inc
hlt
mov
jg
add
out
mov
cmc
stos
sub
fs
test
push
pop
fsubrp
mov
mov
call
push
sbb
dec
push
bound
jge
push
jg
push
xchg
mov
pop
mov
aam
jmp
rclb
gs
addr16
addr16
add
pop
mov
dec
mulb
mov
mov
lock
scas
test
mov
xchg
push
iret
shr
sub
pop
gs
imul
push
jle
mov
cmp
jne
nop
xchg
push
push
push
mov
clc
outsl
movsb
or
in
std
sub
test
out
repnz
push
stos
dec
aam
add
inc
xlat
dec
loop
sahf
je
fwait
or
xor
add
idiv
mov
xchg
loopne
cmpsl
dec
cmp
insl
ret
aad
xor
dec
movb
in
in
push
lahf
test
subl
inc
movsl
cld
pop
imul
mov
pop
or
cmp
xor
lods
mov
test
dec
add
pop
jecxz
out
in
leave
fsubr
dec
pop
repnz
arpl
mov
jl
aaa
pushf
xor
sub
mov
xor
imul
ret
and
mov
jns
mulb
fcmovne
jmp
sbb
xor
in
enter
dec
cmp
sbb
hlt
sub
sub
mov
adc
add
fadds
xchg
out
iret
sbb
cld
popa
jne
cmp
xchg
push
mov
jecxz
mov
dec
sub
and
inc
testl
jmp
int3
cmpsl
or
scas
repz
adc
push
dec
pop
scas
mov
sbb
bnd
add
fcmove
mov
adcb
mov
jge
cmpsb
fisttps
sbb
inc
lods
sub
sarb
adc
and
lret
add
and
sub
ljmp
xchg
adc
add
xor
test
xor
fstpl
es
jl
cmc
inc
xor
and
and
mov
cmc
mov
jle
insb
inc
push
xchg
pop
xchg
sahf
xchg
insb
or
add
lcall
xor
and
or
cmp
sub
sahf
les
mov
insl
std
jmp
test
xchg
out
or
xor
xchg
popf
push
xchg
xor
pop
gs
mov
aaa
push
xor
pop
or
shrb
or
mov
sub
notl
bnd
js
cmpsl
lock
pushf
inc
mov
dec
out
ss
and
repnz
cmpsb
cwtl
movsb
xor
push
call
out
xchg
sub
mov
add
cmp
lock
xor
mov
and
cmp
fstl
xchg
sahf
sbb
mov
out
fucom
movsb
pop
add
mov
jno
fimull
repnz
jns
aas
inc
flds
cli
push
lret
add
jl
clc
pop
add
jge
std
into
ss
mov
sti
test
and
dec
or
xchg
mov
inc
shl
fwait
inc
sbb
loope
out
inc
xor
enter
addr16
push
push
and
out
test
stos
imul
add
inc
loop
jno
inc
in
jae
aas
mov
xchg
xchg
xchg
test
ss
xchg
in
es
leave
pop
nop
test
xlat
hlt
inc
mov
pop
subb
aad
xchg
mov
mov
aas
mov
idivl
cli
xchg
cmp
popa
lock
jae
arpl
cmp
testl
adc
in
add
and
lods
out
sbbl
leave
test
add
xchg
jb
bound
inc
repz
inc
insb
mov
add
decb
and
add
les
bound
push
pop
in
movsb
and
repz
cli
cmp
xlat
sbb
inc
icebp
out
dec
add
int
inc
dec
push
es
andb
pmulhuw
xchg
pop
aas
and
out
dec
or
jg
int3
mov
lahf
jecxz
and
shlb
push
fildl
cmpsl
imull
lods
and
fnstenv
and
js
push
sbb
mov
mov
inc
dec
lods
insl
mov
push
xchg
sub
je
mov
jo
adc
xchg
or
pop
dec
add
jecxz
push
sbb
push
jp
adc
jl
adc
clc
adc
fsts
cmp
in
out
jecxz
lods
sub
push
out
push
dec
sarb
jmp
push
push
dec
cmp
jns
aad
sub
faddl
xlat
dec
sbb
mov
movsl
sub
cmpsl
push
xchg
adc
or
sbb
xchg
ds
add
sbb
dec
not
loopne
xor
ss
mov
sahf
in
aaa
cmp
dec
or
or
push
push
or
sbb
inc
iret
xlat
rorb
dec
or
jge
ja
xor
addl
xchg
adc
xchg
mov
mov
inc
je
xor
mov
mov
fstl
icebp
inc
add
clc
push
icebp
lret
pop
sub
mov
push
out
adc
call
test
dec
cs
pusha
test
rcrb
dec
cmc
imul
fcompl
xchg
arpl
xchg
subl
je
sti
fnstsw
xchg
aad
add
add
push
or
daa
fnstenv
repnz
stc
repz
sbb
xchg
add
adc
cmp
fdivrp
add
pop
add
hlt
mov
mov
mull
cmp
orl
jns
sbb
xchg
jo
sub
clc
sbb
jno
jge
push
lods
fildl
inc
les
mov
outsb
sub
outsl
cwtl
mov
fstl
xchg
dec
jns
push
sub
testb
js
rcrb
test
pop
push
lret
cltd
mov
adcl
ds
or
push
dec
dec
scas
add
add
jno
lea
das
sbb
lock
clc
and
addr16
mov
cli
insb
lret
mov
aaa
mov
xor
testl
popf
push
xchg
sbb
xlat
pusha
rol
pusha
cmp
dec
push
cmp
inc
pop
pop
pop
mov
lcall
jmp
add
or
push
and
sbb
cmp
sbb
pop
or
xchg
movsb
jns
rcr
mov
mov
sbb
loopne
sbb
out
frstor
pop
mov
lea
jecxz
stos
movsb
xchg
mov
push
addr16
pop
xchg
nop
sub
mov
repz
sub
sahf
inc
inc
iret
xchg
inc
mov
nop
jle
jmp
ret
inc
hlt
mov
jne
xchg
and
subb
sarb
cwtl
xor
les
cld
sbb
aaa
hlt
arpl
sbb
fdivr
cs
into
stc
mov
sbb
aaa
jno
inc
scas
mov
outsb
push
addr16
push
test
in
and
mov
mov
inc
ja
das
cmp
fwait
jecxz
sub
cld
xchg
cwtl
ja
sahf
sbb
negl
lcall
ljmp
mov
out
inc
cmp
sarl
jnp
fcmovnb
and
or
pop
cmp
test
adcb
enter
jb
jo
cmpsb
dec
aam
pop
push
cltd
incb
jbe
sbb
data16
xor
push
cmp
movsb
subb
daa
pusha
pop
nop
pop
es
mov
inc
sub
lcall
fs
movsb
jne
decb
xor
mov
popa
sub
insb
in
popf
stc
stc
stc
ja
or
repnz
mov
cli
sub
push
and
testb
fs
das
or
ret
xorl
int3
mov
decb
jl
mov
xchg
sahf
xchg
in
mov
mov
ljmp
test
clc
inc
push
pop
adc
movl
mov
inc
xchg
and
xchg
fldl
pop
fildl
xchg
imul
or
repz
popf
xor
or
fistl
scas
mov
das
cmp
xchg
jo
pop
ljmp
xor
push
cmpsb
sbb
int
or
and
call
mov
call
push
or
xchg
cmp
inc
pop
test
out
rcrb
stos
jl
mov
cli
jle
pop
pop
lds
arpl
pusha
lcall
out
pop
leave
stc
lahf
pop
mov
and
std
and
mov
push
push
hlt
and
jo
xor
nop
add
jmp
mov
xchg
inc
inc
pop
mov
fidivrl
mov
arpl
jg
cld
xchg
sti
adc
pop
lret
sub
lds
pop
mov
enter
int3
xor
cld
outsb
movsb
xor
popa
shll
or
aam
pop
aas
lahf
clc
imul
mull
aam
aaa
push
testb
jbe
lahf
andl
mov
fidivl
push
loopne
xor
xchg
sub
aaa
jecxz
or
add
imul
cmp
or
in
ja
sbb
add
mov
mov
std
cmp
pushf
loop
and
mov
inc
mov
adc
jl
movsb
sub
arpl
fwait
xor
xor
mov
sub
test
sbb
icebp
fmull
dec
xchg
fstps
aaa
xor
cmp
sti
dec
push
dec
jle
subl
cmp
pusha
ret
push
inc
ja
jle
push
in
sub
jg
xor
mov
imul
xor
test
dec
lret
stc
mov
xor
std
aam
dec
ret
pushf
mov
dec
das
or
mov
dec
dec
in
xchg
mov
dec
jge
shlb
mov
sbb
mov
mov
fnstenv
push
movsl
imul
or
das
jg
loop
sbb
and
lea
das
adc
cmc
add
push
mov
mov
jecxz
into
inc
jle
rorl
xchg
insl
iret
inc
sarl
mov
shrl
mov
dec
adcl
jge
test
mov
jle
adc
cmp
mov
out
enter
and
xor
dec
addl
mov
das
ret
fisubl
add
sub
jmp
sbb
sbb
mov
adc
fistps
or
out
mov
xchg
xchg
sbb
jne
sti
dec
hlt
mov
jl
lret
jns
mov
sub
or
cmpsl
es
sub
jne
inc
test
repnz
in
cmp
ret
push
push
dec
push
mov
fmuls
mov
ret
jo
push
cs
bound
fnstsw
cmp
xor
fimull
jno
adc
cmp
jle
push
in
test
sbb
scas
add
cmc
push
div
fs
xor
and
push
dec
pop
mov
xor
fisubs
jmp
into
cli
jle
inc
stc
sub
enter
stos
sub
push
jg
iret
xor
cld
xchg
adc
push
cmp
jge
push
clc
hlt
stos
popa
jle
xorl
fsubr
pusha
xor
add
loope
xchg
incl
cmp
cwtl
mov
sahf
sti
pop
sbb
mov
push
xor
pop
mov
mov
rclb
lcall
aaa
inc
repnz
inc
test
aad
repnz
inc
repnz
mov
inc
mul
gs
cwtl
aam
sbb
pop
xorl
data16
pushf
fidivs
dec
stos
pop
inc
enter
xchg
lret
fs
ss
dec
lahf
sahf
mov
shrb
std
shl
mov
lahf
lock
roll
lods
cmp
push
or
and
hlt
fnstsw
data16
xor
cmp
mov
adc
mov
aas
into
imul
divb
fs
popa
pop
xor
pop
push
jb
andb
inc
xor
push
lock
repz
jae
fucomip
adc
notb
push
addb
sar
push
scas
push
push
gs
pop
and
push
or
int3
xchg
mov
out
int
insb
mov
enter
dec
inc
inc
mov
pop
pop
adc
and
scas
mov
jnp
roll
out
out
push
inc
jecxz
sub
push
jnp
fistps
and
inc
lock
aas
xor
mov
mov
xchg
das
push
dec
xor
sahf
fildll
nop
mov
hlt
das
mov
rcll
ljmp
mov
jnp
mov
adc
add
test
movsl
mov
insb
stc
xor
loope
xchg
pushf
jp
cs
out
cli
push
mov
ja
mov
adc
lds
xor
dec
adc
les
flds
and
lods
out
fstps
mov
mov
xlat
sti
pushl
fs
jg
add
push
sub
repnz
push
pop
and
in
lcall
repnz
mov
adc
cmp
pusha
arpl
lcallw
outsb
mov
sbb
jmp
insb
out
inc
in
clc
mov
mov
stc
mov
lea
push
repz
in
mov
or
and
pop
jnp
ret
fiaddl
pusha
dec
hlt
mov
lret
test
and
adc
pushf
xor
sahf
mov
in
test
dec
sbb
mov
mov
ret
popa
movsb
mov
call
test
jae
scas
push
xchg
into
or
cltd
lods
mov
ret
add
bound
xchg
sub
sbb
cwtl
jge
sbb
int
stos
and
fstl
cmp
xlat
cmpsl
xchg
stos
mov
push
psubb
pop
scas
sbbb
lcall
lcall
arpl
and
jecxz
xor
into
jmp
jmp
in
loope
cs
cmpsb
inc
stc
sbb
iret
mov
out
fcomi
in
adc
cmp
dec
mov
sub
pop
test
pop
test
dec
xor
aad
sub
mov
lds
dec
sub
sahf
loope
cltd
outsl
aam
movsl
adcb
ss
adc
pushf
nop
in
inc
cmp
ret
xor
inc
aas
adc
ss
xor
pop
adc
shlb
xor
pop
jmp
inc
sbb
xlat
testb
push
mov
add
jle
sbb
add
cmpsl
mov
data16
outsb
adc
push
lock
sbb
call
cmp
jp
and
adc
dec
xorb
call
pop
int
push
jb
add
pop
rcl
sub
push
sub
and
lret
in
inc
jo
push
aad
stc
fdivl
mov
mov
cmp
xorl
inc
push
xor
inc
or
rcrl
out
daa
out
pop
fldcw
scas
jae
xlat
cmp
jnp
push
jl
add
ss
jle
lret
popa
jo
cmp
mov
sahf
jl
insl
cltd
addl
sbb
insb
dec
mov
push
movsl
cli
divb
outsl
mov
sub
add
pop
jne
inc
stc
mov
mov
nop
pop
push
ljmp
xchg
add
cli
mov
lret
cmp
push
in
and
shr
dec
dec
xchg
sub
xor
push
repz
cmp
cmp
adc
push
inc
fwait
inc
mov
push
and
xlat
jle
insb
mov
out
test
jmp
mov
jecxz
adc
and
lock
insb
pusha
sub
mov
ds
and
test
arpl
fsubrl
movsl
out
repz
imul
and
and
ret
jb
cltd
fimuls
imul
pop
lods
push
iret
cwtl
pop
jl
sbb
cmp
repz
fisubs
push
iret
hlt
push
jg
cmp
aaa
scas
and
test
enter
mov
mov
mov
jne
push
mov
sub
lock
outsb
arpl
mov
or
adc
push
stos
sbb
gs
mov
mov
mov
inc
in
ljmp
xor
dec
push
mov
push
or
xchg
arpl
bound
fstp
fldt
add
cmc
ret
popf
arpl
testb
jb
outsb
mov
mov
add
aad
aam
cmp
dec
pop
data16
cmp
mov
in
stos
ds
dec
stos
lods
addr16
jbe
std
push
in
push
jecxz
mov
test
push
push
push
dec
cmpl
addl
das
cmp
or
addb
adc
mov
stc
push
or
pop
pop
dec
out
sbb
arpl
bound
pop
fsubrl
sbb
mov
cmp
push
add
mov
mov
jmp
insb
ljmp
andb
lret
fists
mov
insb
cli
jp
shl
and
mov
rclb
push
lods
cs
test
pop
arpl
dec
cmp
mov
sub
jmp
add
fmul
pushf
mov
or
sbb
dec
div
mov
dec
repz
std
inc
dec
xlat
stc
scas
into
inc
or
ljmp
inc
jmp
jne
int3
call
xchg
rcll
mov
jmp
dec
jne
dec
fs
and
lahf
xor
call
jecxz
pop
rcll
fimull
mov
in
push
jnp
cmp
out
imul
rcrb
daa
or
in
int3
jns
std
jl
nop
sub
dec
insl
xchg
subl
stos
sub
gs
mov
mov
fcoms
inc
lea
pop
or
ja
stos
popa
daa
and
out
inc
aam
mov
and
adc
sti
pop
out
pop
jne
jg
nop
arpl
and
push
dec
hlt
sbb
pop
in
lea
push
loop
insb
clc
sbb
pop
ljmp
mov
mov
adc
mov
shlb
and
and
xor
pop
add
inc
fcompl
cs
mov
sarl
fdivs
jmp
imul
imul
fdivrs
and
stos
movsb
sbb
sbb
mov
iret
mov
push
es
jg
inc
xchg
aam
pop
mov
aaa
ret
and
call
cld
pusha
lods
imul
adc
es
xor
push
imul
and
std
inc
push
pop
scas
sbb
ds
loop
add
sub
cltd
mov
setne
insl
push
cmp
push
mov
pop
inc
push
pusha
mov
xchg
pop
das
add
inc
push
jbe
popa
lods
or
ds
dec
loop
or
std
xchg
roll
xchg
push
flds
adc
adc
mov
pushw
sbb
mov
sub
popa
and
jo
cmp
movsl
push
clc
outsb
cmpsl
cmp
loopne
aam
jl
pop
jge
or
lahf
test
cs
push
mov
outsb
mov
mov
push
mov
lret
lea
mov
decl
adc
push
sarl
mov
sbb
movsl
jecxz
cmp
jns
adc
subl
imul
out
scas
jae
xchg
scas
or
push
rcr
mov
push
lods
and
push
mov
adc
and
ficomps
jl
arpl
std
repnz
sarb
dec
mov
xchg
out
jb
dec
shrb
push
lds
pop
lret
push
mov
ja
push
sti
nop
add
fstl
xor
popa
je
mov
cmp
out
cli
pop
pop
movsb
and
das
mov
inc
movsb
aad
cmpsb
stos
ss
imul
mov
lock
int
das
aas
xor
mov
lret
jge
mov
push
sahf
xchg
add
fcmovnb
sahf
iret
push
xchg
pop
cltd
pop
aad
mov
in
sbb
call
mov
cmp
les
sti
or
mov
xor
xchg
xor
fidivrs
xchg
repnz
cs
add
xor
mov
insl
and
mov
jns
jns
jbe
dec
es
jnp
mov
imul
bound
mov
and
jl
or
sub
inc
nop
sub
out
add
mov
sbb
jge
loope
es
enter
out
pop
mov
adc
mov
loopne
xchg
dec
cwtl
jbe
in
int
sbb
outsb
sub
xchg
push
movsb
ss
xor
xor
inc
lret
fnstcw
lods
jno
ror
mov
sub
hlt
pop
fcomps
das
arpl
mov
out
repz
in
ficoms
out
ret
inc
js
push
cmp
arpl
aas
fnstenv
xchg
push
push
gs
repz
inc
push
mov
add
add
aaa
pop
sti
aaa
jae
push
sbb
cmp
dec
mov
gs
sahf
mov
mov
loope
or
popf
sarb
cmc
clc
sub
push
test
add
jg
imul
jmp
mov
sarl
add
popa
cmp
sub
inc
mov
xchg
jmp
leave
sti
xchg
sub
inc
pop
lods
pop
add
ficomps
std
outsb
push
xor
mov
inc
mov
xor
sar
std
push
push
mov
fcoml
dec
lret
cmp
sbb
dec
pushl
dec
mov
xchg
imul
xchg
add
data16
lcall
pop
jb
cmc
mov
dec
mov
and
and
inc
lret
push
test
sbb
sarb
mov
cs
ss
or
push
adc
jl
loop
pushf
pop
icebp
fdivrs
inc
adc
jno
lock
insb
sub
rorl
stos
leave
lahf
outsl
sahf
repz
inc
ja
add
or
pop
sub
dec
rcr
paddq
push
mov
decb
leave
xor
pop
sbb
out
dec
adc
rorb
jl
shrb
inc
adc
hlt
push
or
push
mov
fistpl
in
das
mov
pop
enter
stos
rorb
xchg
or
push
aas
loopne
sub
push
or
mov
fisttpll
mov
and
mov
rorl
adc
out
pop
inc
and
push
loope
scas
loop
inc
addl
loopne
lahf
cmp
test
imulb
mov
pop
movsb
adc
icebp
xor
mov
push
jp
and
push
jl
frstor
insb
mov
rorl
popf
push
mov
std
lcall
jne
lods
data16
push
cld
lea
cmp
ds
gs
mov
test
int
xchg
movl
out
call
aaa
aas
mov
adc
mov
dec
dec
pop
faddl
adc
sbb
cmpsb
adc
stos
lock
ret
mov
jnp
popf
dec
lcall
jmp
pop
subl
int
or
cli
gs
add
imul
mov
test
or
sbb
movsl
dec
and
pop
and
pop
ljmp
es
cmp
shlb
dec
push
xchg
mov
dec
leave
adc
stos
mov
push
cld
lea
je
add
jns
rcrl
stos
es
fsubrp
push
adc
pop
out
push
mov
mov
filds
jo
mov
mov
adc
iret
jbe
ds
xor
inc
inc
cmpsb
mov
int
lods
pop
mov
xor
insl
addr16
sarl
mov
mov
jge
or
stos
xor
outsb
repz
mov
out
imul
pop
cs
or
std
lret
arpl
inc
test
aas
mov
add
jo
dec
mov
rolb
xorb
push
mov
andl
jb
dec
sbb
jb
das
fcomip
mov
mov
aam
xor
test
dec
and
xorb
popl
pop
leave
daa
in
and
popf
mov
shlb
out
sbb
cmpsl
or
sti
push
fs
in
ds
mov
addr16
outsb
and
jecxz
mov
fwait
inc
mov
xchg
bound
femms
cwtl
xor
and
shll
aas
xor
jg
dec
sbb
pop
cltd
sti
leave
pop
jmp
push
push
push
adc
subl
leave
and
sbb
test
idivb
push
jl
pop
sti
xchg
xor
or
and
hlt
out
sub
sbb
lea
in
pop
loopne
push
int
aaa
cmpb
cwtl
lret
stos
push
gs
inc
test
imull
outsl
popa
jne
stc
push
mov
hlt
test
inc
out
aad
xor
dec
leave
ret
xchg
push
jl
jg
sub
loopne
jbe
leave
push
xor
fstl
cld
lock
aas
xor
sahf
inc
adc
aaa
out
repnz
add
xchg
aad
sbb
adc
inc
and
mov
lahf
mov
sub
rcll
int3
xor
adc
dec
mov
add
mov
push
and
cld
sbb
push
repnz
cmpsb
mov
test
int
cmp
pop
dec
mov
out
fmull
sub
adc
xchg
jmp
sti
mov
popf
dec
in
sti
ret
jb
jp
cmp
sub
jae
cmp
cmpsl
mov
neg
pop
inc
iret
mov
std
or
fmul
mov
mov
fistps
sub
jne
loope
aaa
dec
mov
vmovhps
aad
pop
push
sarl
pop
andb
xor
mov
cmp
test
outsb
adc
test
cmp
jbe
repz
scas
pop
mov
lret
mov
stos
sbb
daa
mov
and
aas
sbb
lcall
push
cmp
or
push
inc
add
sub
fld
in
jnp
sar
pop
pop
ret
mov
sub
sub
int3
scas
clc
pop
lock
packsswb
fmull
call
rcll
push
cwtl
sbb
adc
pusha
out
sub
mov
in
fistpl
pop
xchg
add
xchg
je
andl
test
jmp
sbb
sub
dec
sbb
cmp
movsb
push
cmp
test
push
dec
xor
pop
dec
loope
mov
insb
add
or
movsl
or
movsb
call
pusha
pop
dec
push
popa
scas
mov
fisubrs
cs
jecxz
test
push
aad
out
in
shr
cld
mov
arpl
js,pt
lds
xchg
lock
adc
rcr
xchg
int3
andb
in
mov
lock
testb
addr16
and
or
mov
or
jg
andl
pop
sub
xchg
xchg
adc
pop
fcoms
mov
cmp
mov
and
les
fsts
mov
into
stos
scas
insb
dec
pop
adc
xchg
mov
cmp
or
mov
push
pop
cltd
cmp
mov
pop
vpminub
sbb
mov
pop
cmp
mov
lock
dec
inc
xlat
add
push
lea
xchg
xlat
xlat
dec
mov
pop
ja
cmp
or
scas
push
xchg
or
out
es
mov
cmp
and
mov
sarl
cmpsb
cmp
inc
jo
xchg
lock
movsb
ja
outsb
push
xchg
mov
mov
cltd
lcall
scas
enter
inc
mov
add
jg
repz
pop
sbb
xlat
data16
cmp
cmp
ss
adc
and
aad
or
push
sub
inc
fisubs
jns
dec
fwait
call
mov
mov
adc
xchg
cmp
xchg
stos
xchg
mov
pop
lea
ljmp
xor
cmp
in
icebp
testb
or
sub
fisubrs
push
in
outsl
testl
or
push
mov
inc
cmp
nop
inc
mov
repnz
leave
mov
pop
inc
xchg
loope
hlt
shrb
push
cld
mov
icebp
push
pop
or
cmpsb
xor
and
xor
jge
out
out
jle
into
xchg
fstps
jg
insl
test
cld
lds
and
popf
imul
pop
jnp
mov
mov
aad
lods
into
add
jne
loope
inc
add
sbbl
adc
fiaddl
adc
aam
jnp
out
pop
je
stos
mov
inc
push
or
jnp
ja
mov
xchg
pop
mov
add
movsl
daa
add
out
addr16
mov
fidivrs
and
aas
int
xchg
push
xchg
pop
lahf
and
and
dec
out
adcl
mov
jp
cs
dec
push
jne
out
in
push
call
mov
push
aaa
aaa
repz
pop
das
sub
inc
lock
xchg
dec
xchg
mov
cmp
shll
inc
data16
sbb
dec
add
push
lock
add
sbb
std
out
cmp
add
jns
mov
out
dec
jle
dec
jnp
pextrw
dec
lods
stos
sbb
subb
mov
das
push
outsb
mov
jg
push
xor
sbb
xchg
adc
test
add
sbb
jl
inc
jb
popa
xor
icebp
inc
out
lods
push
scas
push
fsubl
addr16
daa
sub
fiaddl
cmp
int
mov
popf
bound
jp
pushf
mov
flds
sti
jg
xor
mov
movsl
xchg
in
andl
mov
out
jl
mov
repnz
repz
stc
push
adc
sbb
in
add
imul
xchg
sbb
shrl
roll
loopne
xor
cmc
jae
jnp
loopne
addr16
imul
lods
mov
pop
lock
pop
out
iret
cmpsl
mov
mov
jb
dec
mov
nop
popf
mov
cmp
jl
pop
mov
mov
mul
addb
jb
mov
cld
dec
mov
push
push
scas
lret
movntq
out
out
sub
mov
iret
inc
sbb
sbb
cmpsb
inc
aaa
repz
sarl
subl
in
mov
shrb
sub
xchg
dec
cmpl
cmp
inc
push
or
pop
lea
push
test
dec
push
cwtl
shrl
fcomp
dec
push
stos
cmpsl
inc
outsl
jecxz
push
roll
movsb
out
icebp
xlat
and
cmp
cmp
je
add
mov
xchg
inc
jg
pop
scas
pop
aas
das
jg
sub
ret
sbb
inc
and
jo
inc
aad
mov
mov
push
dec
cwtl
cmpsl
jbe
lods
sti
mov
lea
loopne
sub
and
mulb
arpl
pop
push
das
scas
ror
bound
stos
xchg
adc
divl
sbb
movsb
jmp
xchg
mov
cld
lea
and
jbe
aaa
and
movsb
fwait
pop
adc
dec
cwtl
sub
cmc
jl
and
adc
xchg
mov
mov
int3
idiv
sub
repz
push
ljmp
ljmp
jp
add
shrl
mov
sub
sbb
mov
js
in
mov
xor
and
int3
loopne
test
add
mov
add
das
movsl
and
push
ret
jg
iret
cltd
and
imul
cmp
test
pusha
adc
mov
sbb
mov
es
xchg
jmp
je
das
jnp
cmp
stc
push
outsb
push
test
outsb
inc
fwait
sbb
fmull
sbb
add
ja
mov
out
es
sbb
push
ljmp
adc
mov
movsb
das
out
sub
or
shll
ss
xor
xlat
dec
cmp
jmp
mov
mov
popa
xchg
dec
xchg
nop
and
pusha
imul
or
sub
sub
mov
xor
loopne
jae
fwait
xor
movl
dec
pushf
loopne
test
cwtl
mov
movsb
mov
add
push
mov
add
fists
lahf
or
push
dec
inc
push
mov
sbb
jbe
out
adc
es
bound
or
sbb
inc
stos
lret
push
fistpl
insl
ficoml
push
add
movsb
out
dec
cmp
pop
sub
loopne
adc
add
adc
das
xchg
cmc
imul
lret
xor
lds
inc
dec
or
mov
lahf
popf
arpl
cwtl
pop
ja
in
and
mov
lret
xchg
inc
cmc
mov
mov
enter
cmpsl
dec
mov
push
sbb
xchg
repz
push
push
sbb
mov
ret
cmpsl
sahf
sarb
push
lahf
or
dec
jmp
mov
jecxz
jb
xchg
or
adc
sub
ret
pop
loope
adc
scas
inc
mov
cltd
sbb
sub
lsl
jecxz
gs
cli
repnz
popa
std
sbb
sub
xchg
imulb
arpl
rorl
and
or
cmpsl
lret
sbb
lods
jmp
faddl
fsub
xor
mov
push
pop
push
data16
in
scas
popa
add
lcall
add
sub
xchg
pop
dec
inc
inc
cmp
inc
xchg
sbb
jbe
enter
mov
out
mov
sub
pop
adc
jbe
ja
sub
cs
scas
or
jg
inc
or
fwait
dec
stos
frstor
dec
je
test
jl
pushf
daa
stos
cmp
outsl
xlat
cli
pop
push
mov
cmpsl
jae
js
popf
popa
cmpsb
jno
aad
out
cmp
or
fxch
les
xor
ret
xor
sbb
ficompl
inc
jo
pop
addr16
fwait
mov
jno
adc
dec
fistl
adc
or
sbb
out
hlt
mov
xchg
jmp
lods
mov
lods
adc
inc
cli
xor
sub
test
jmp
mov
loop
fdivrs
mov
fistl
bound
pop
dec
insb
outsb
mov
clc
adc
bound
inc
add
insb
fistps
test
inc
pop
cmp
xchg
call
cmp
mov
cmp
xor
xor
xchg
or
and
cs
or
xchg
clc
pop
sbb
jne
or
pop
fisttpl
jge
cmp
and
xlat
gs
test
dec
mov
jne
and
fnstenv
adc
push
shrb
scas
jg
xor
rclb
test
xchg
and
xchg
push
inc
mov
or
ror
imul
jns
repnz
lea
arpl
imul
fcoml
fldt
fmul
mov
mov
ret
insb
scas
adcl
sub
xor
aaa
sub
pop
pop
mov
clc
jnp
add
sub
and
push
and
mov
or
xor
adc
lcall
out
test
mov
or
cmp
mov
fnsave
dec
test
xor
imul
addr16
mov
xchg
lock
sbb
addr16
ljmp
pop
imul
mov
and
icebp
stos
bound
jnp
insl
push
lret
and
fistpll
dec
pop
add
xorb
inc
fsts
lret
sbb
orl
xor
sarb
daa
inc
jle
cwtl
ja
mov
pop
inc
mov
cltd
mov
out
test
fcmovb
xor
das
xchg
popf
outsb
lds
lret
pop
mov
fildll
jno
xchg
in
jns
test
push
push
ljmp
lods
jl
movsl
inc
or
insb
out
sbb
stos
adc
xchg
out
push
jb
dec
sbb
inc
adc
pushf
mov
and
aad
lret
outsb
adc
insb
sub
adc
int3
pop
push
addr16
mull
adc
sub
pop
inc
shll
mov
outsl
mov
fadds
xchg
mov
mov
scas
inc
or
add
ljmp
inc
mov
bound
into
add
sub
mov
into
push
inc
mov
mov
mov
mov
xchg
lea
imul
arpl
mov
subl
mov
popa
jl
xchg
out
ja
and
mov
sub
icebp
pop
jge
dec
add
jg
sub
aam
mov
push
pop
fcom
fwait
and
push
inc
loope
mov
outsl
or
mov
insb
sti
mov
mov
pop
adc
or
jl
int3
mov
sbb
jp
push
mov
push
mov
cmp
xchg
fstps
mov
ja
cli
movsb
jnp
in
leave
cmpsl
xchg
adc
add
pop
sbbl
mov
xchg
jns
in
jp
mov
jb
mov
dec
dec
xchg
push
outsb
popf
adc
lock
mov
mov
mov
repz
cld
cwtl
jg,pt
outsb
rorb
js
std
imul
test
or
daa
lahf
testb
push
cmpsl
mov
push
sti
push
sub
arpl
call
inc
cmp
loop
cmp
shr
inc
mov
fs
add
sahf
aas
xor
inc
incl
mov
das
lret
sub
sbb
sbb
cld
ret
das
cltd
and
adc
sub
mov
subb
xchg
imul
out
cmpsl
adc
or
out
sbb
mov
call
sbb
pop
add
mov
pop
pop
sbb
jb
pop
inc
into
mov
sub
push
jns
inc
sahf
sub
jg
fprem
and
adc
stos
xlat
jmp
icebp
push
and
std
sbb
test
scas
mov
in
scas
rol
cs
test
mov
mov
mov
lret
pop
lret
js
insl
ret
mov
lcall
aad
sub
push
mov
jno
mov
out
adc
hlt
xchg
xor
fstps
jmp
push
jecxz
and
push
stos
push
orb
ficompl
or
dec
xor
ret
inc
pop
dec
addb
mov
call
jnp
mov
mov
addr16
sub
stos
push
lods
sub
inc
xchg
daa
lcall
jmp
or
shrb
xor
pop
clc
test
aaa
leave
jns
mov
andl
jp
cli
fcmovbe
decb
cmc
ja
aaa
out
imul
inc
imul
lret
aad
dec
jecxz
test
fmuls
sub
cmp
sub
pushf
fs
push
aaa
jb
in
scas
pop
leave
dec
and
xchg
push
mov
shlb
lret
bound
mov
fildll
mov
mov
sahf
cmp
loope
sub
decb
xchg
jbe
and
gs
pop
roll
cltd
add
pop
sbb
jmp
int3
js
movsl
movsl
jge
call
xor
testb
xor
xchg
and
push
dec
mov
xchg
cwtl
jl
mov
in
inc
pop
sub
cmpb
rorl
sbb
mov
pop
adc
pop
cmp
or
add
xorb
fildl
pop
lcall
in
sbb
sub
xor
rcl
xor
mov
jne
xor
or
or
jb
je
fldt
and
sarb
mov
mov
adcb
adc
and
dec
sbb
nop
outsl
and
mov
addr16
sub
scas
call
into
fisttpl
out
or
sbb
dec
sub
xchg
sub
in
lahf
into
fwait
cmp
adc
outsl
test
add
js
add
pop
sub
ss
add
insb
repz
mov
pop
dec
or
add
pop
movsl
push
add
cmp
xchg
mov
xchg
aam
call
hlt
jbe
push
inc
rcrl
lods
clc
mov
loop
mov
and
mov
out
jns
xlat
loop
inc
enter
and
je
jle
ret
ja
add
or
test
jmp
clc
fstl
mov
daa
insb
in
aad
or
add
adc
jle
sbb
fldt
arpl
out
and
pop
loop
les
aaa
ss
inc
xchg
mov
popf
or
cmp
pop
jle
mov
outsb
iret
lret
mov
ss
lock
or
inc
mov
scas
push
inc
sahf
jns
bound
dec
hlt
les
pop
jns
pop
adc
jo
in
or
push
insl
ret
lods
aas
jmp
daa
sub
xchg
imul
fmul
jb
push
jl
insb
xchg
loop
inc
lret
push
imull
test
mov
sub
lret
mov
pop
mov
getsec
popf
fninit
mov
das
lds
sub
jns
jns
loope
int3
push
aaa
push
cmpsb
mov
lea
xchg
out
clc
loopne
jne
cld
test
jb
jae
pop
out
xor
pop
add
pop
add
les
hlt
icebp
sbbb
or
jle
push
out
sbb
imul
fimuls
daa
mov
mov
add
rol
add
ss
ss
test
outsb
insl
and
inc
sub
mov
call
xchg
loop
mov
jae
sub
sub
xchg
mov
push
add
addr16
dec
xor
push
jg
test
adc
pop
push
xorb
mov
jnp
fdivl
loope
push
and
push
pushf
ss
adc
popf
or
push
mov
outsl
fsub
cld
xlat
sub
mov
or
jecxz
js
mov
mov
fs
into
aaa
mull
jns
xchg
pop
push
pop
inc
pop
cs
pushf
inc
adc
dec
sahf
test
adc
cltd
inc
aam
jo
call
mov
and
cmc
fcmovnb
jmp
dec
jp
or
out
xchg
dec
sub
repnz
cs
pop
lea
scas
dec
mov
aad
aad
fildl
stos
mov
push
mov
out
ret
cmp
adc
pop
fistps
sub
gs
addb
shlb
or
ret
repnz
jns
and
xlat
jmp
and
in
mov
cmp
add
and
and
call
mov
arpl
or
iret
in
xchg
imulb
cwtl
stc
inc
leave
in
aaa
pop
pop
adc
push
icebp
sbb
xchg
jge
pop
jmp
cmp
mov
stc
mov
hlt
jne
fs
jne
cmp
enter
ss
inc
daa
xor
sbb
adc
shl
into
test
pop
dec
pop
out
lcall
js
and
xor
nop
lahf
push
in
jg
add
inc
outsb
pop
fists
in
arpl
nop
add
jo
aas
pushf
mov
imul
inc
push
repz
xchg
fs
pop
dec
js
inc
in
mov
cmp
dec
dec
xchg
mov
push
xchg
test
cmp
outsl
stos
lods
jecxz
push
fldt
hlt
xlat
iret
cmpsl
stos
mov
nop
aas
add
add
rcl
xchg
out
insb
ja
push
cmpl
pushf
gs
mov
pop
mov
popa
push
xor
adc
mov
adc
or
outsb
xchg
aas
adc
hlt
dec
pop
movsb
iret
push
mov
out
stc
jbe
daa
or
je
dec
pop
in
mov
mov
push
cmp
mov
outsb
test
add
xorb
in
mov
ror
popa
push
mov
mov
ret
xchg
icebp
push
in
ljmp
sbb
adc
fildl
push
gs
inc
scas
pop
pushf
icebp
scas
sti
lret
xchg
push
fidivs
enter
or
mov
das
push
movsb
popf
ljmp
mov
pop
jae
push
mov
ret
pop
cli
jmp
pusha
or
ljmp
and
gs
loope
imul
and
test
out
push
insb
fs
cli
addl
sub
sub
loop
ljmp
push
xchg
mov
and
cmc
jbe
mov
dec
mov
shrl
in
adc
push
dec
and
xor
sbb
mov
loope
or
std
aad
or
lret
inc
ja
xchg
add
fsubr
cli
je
pop
outsl
pop
sbb
rcr
pop
cmc
add
iret
stos
mov
pop
cmpsl
sub
inc
in
in
out
mov
repz
mov
push
sbb
or
movsl
scas
xor
adc
cmp
jnp
jae
rep
js
sbb
insb
insl
add
mov
xor
sbb
shlb
shlb
xchg
mov
mov
shrb
inc
xlat
imul
inc
xchg
insl
sub
add
shlb
ficompl
repz
add
mov
aam
add
cmpsb
xchg
add
repz
loope
stos
jmp
cmp
cmp
add
stos
sub
les
sub
leave
cmp
mov
testb
mov
pop
icebp
int3
sahf
inc
aad
test
xchg
test
inc
shl
in
add
dec
add
fimull
popf
xchg
pop
dec
sbb
mov
ficompl
sbb
movsb
fdivrl
in
into
sbb
sbb
popf
out
bound
scas
out
add
outsb
sahf
and
shlb
lods
xchg
jno
imul
jne
lcall
dec
push
and
lods
inc
nop
rorl
daa
int3
outsb
sbb
je
mov
sbb
jge
lods
aas
add
mov
repnz
xorl
cwtl
fidivrl
mov
dec
xor
out
lret
sbbb
dec
leave
movb
ljmp
mov
sub
sbb
jbe
into
in
das
mov
mov
aaa
add
cmp
sarb
jb
jns
jmp
insb
rorl
fwait
jp
scas
leave
clc
insl
imul
popa
mov
aas
jae
stos
nop
mov
mov
scas
rorb
popa
pop
lds
mov
inc
dec
lea
sahf
mov
loope
lcall
and
mov
clc
lret
ss
enter
repnz
cs
cmp
jmp
mov
enter
lea
xor
mov
mov
push
adc
in
xchg
lds
sub
inc
idivl
incb
and
stc
out
add
cmp
jg
xor
sbb
pushf
pop
dec
imul
imul
lea
scas
jae
mov
mov
divl
xchg
dec
jne
sub
adc
sbb
dec
arpl
add
dec
dec
mov
pop
in
xchg
stc
push
push
mov
inc
jmp
test
mov
sti
rorb
xchg
or
xchg
cwtl
imul
test
div
loop
sbb
mov
cmp
sbb
in
repz
pusha
mov
lds
dec
repnz
sbb
repnz
add
inc
xchg
xor
lcall
fs
jae
sub
mov
dec
sbb
fbld
dec
sahf
inc
mov
out
mov
movl
xor
push
and
fwait
popf
paddq
jb
xor
and
orb
shll
mov
outsl
dec
pop
fldcw
dec
cmp
clc
or
or
nop
mov
mov
mov
aaa
cmp
mov
and
in
sbb
cmp
sbb
cmp
xchg
push
push
mov
addr16
cmp
outsb
aad
fisubl
stos
add
mov
mov
andl
jecxz
pop
xchg
inc
and
popa
cld
aas
loop
loope
adc
fldt
call
add
fs
std
xchg
xchg
push
ret
pop
add
mov
or
in
ja
bound
xor
arpl
icebp
mov
mov
loopne
xchg
dec
mov
test
push
mov
stos
pop
fdivl
scas
sub
dec
jmp
pop
ja
cmp
movsl
push
mov
mov
push
inc
cs
jnp
mov
xchg
in
shr
stos
adc
xchg
subl
pop
out
lds
sub
pop
popa
fstp
xor
data16
jne
insl
mov
ret
sbb
push
mov
xchg
lret
daa
mov
pop
int
mov
xchg
inc
xor
inc
dec
es
dec
jnp
pop
idivb
mov
lds
mov
and
inc
push
out
dec
test
lds
dec
js
lock
andb
inc
leave
push
add
and
sbb
inc
insb
fs
cli
out
dec
icebp
or
out
stc
sub
ds
imul
lea
pushf
jmp
jmp
fmull
adc
fs
pop
xchg
aas
insl
leave
xor
mov
push
adc
int
insl
in
xor
sub
push
pop
push
mov
cmp
or
gs
push
sub
testb
cmp
jmp
mov
pop
notl
test
dec
mov
or
mov
add
std
dec
repz
movsl
mov
std
ror
hlt
and
nop
arpl
je
cmp
loope
pop
mov
addr16
rcl
icebp
shrl
xor
cmp
enter
mov
dec
pop
sub
loop
push
icebp
pop
sbb
loop
fsub
lds
mov
dec
mov
ljmp
push
scas
into
aad
sub
sbb
subl
mov
cmpsb
sub
push
lea
mov
pop
fdivs
icebp
clc
push
push
jmp
cmp
and
or
push
inc
and
lods
mov
mov
test
cwtl
xchg
ja
orb
mov
mov
mov
stos
mov
sub
push
call
fsin
jmp
fsubr
cli
lea
jecxz
jo
stos
jl
mov
mov
imul
popa
push
add
ds
cmp
sub
lea
cmp
clc
loop
mov
test
jno
mov
pop
mov
popa
ss
xor
jecxz
out
jecxz
ret
xor
pop
fs
inc
aas
scas
pop
cld
xchg
fldt
enter
and
outsb
xor
repz
out
out
movsl
and
xor
icebp
push
shr
std
mov
fpatan
insl
cli
loop
arpl
dec
xchg
fdivs
inc
jmp
repz
orl
loope
clc
cmc
iret
outsl
xor
sub
push
push
call
int3
push
lds
sub
out
inc
mov
dec
dec
ret
jmp
nop
fwait
rcr
pop
mov
cmp
ret
cld
xchg
mov
pop
aam
aas
cwtl
push
cltd
push
or
aad
xor
cmc
mov
jbe
lcall
js
inc
loopne
hlt
cmpsb
lock
sahf
divl
andb
pop
test
xchg
adc
xchg
hlt
jnp
inc
ss
lret
jo
add
aam
jp
mov
mov
adc
inc
pusha
cld
and
lods
pop
fstl
xor
cmp
pop
js
pop
jo
or
dec
jge
push
das
cmp
cmp
push
mov
cmp
clc
adc
or
mov
mov
outsb
adc
shll
inc
lret
add
sub
hlt
in
aad
add
lret
inc
xor
outsl
push
mov
inc
mov
in
in
aas
out
push
ljmp
test
cwtl
add
inc
xor
cwtl
mov
cld
xor
push
or
lds
add
insb
cltd
cmp
int3
sarl
add
ljmp
sub
pop
orl
aas
imulb
xchg
cmp
shrl
vscalefpd
xor
mov
cmp
movsl
xchg
mov
sub
insl
int3
fs
pop
pop
sbb
mov
mov
xchg
push
add
orl
or
bound
repz
test
pop
fwait
and
fisubrl
or
je
xchg
out
cmp
cmpsl
loopne
xchg
lret
movb
push
jmp
mov
lahf
pop
jb
xor
lahf
mov
pop
fildll
sbb
sarb
in
test
in
dec
and
mov
and
inc
mov
fdivl
fnsave
and
and
cmpsb
in
fcoml
xchg
cmp
xor
pop
sub
xchg
add
incb
fists
sti
aad
lcall
ss
dec
pop
push
iret
mov
leave
ds
lock
add
dec
jo
add
cmp
or
pminsw
jno
xor
pop
cs
std
je
out
cli
mov
pop
cmc
bound
xchg
mov
xor
les
add
into
jb
mov
loopne
dec
je
fs
bound
cmp
fs
or
in
add
dec
shrb
mov
xor
mov
push
xchg
sub
out
xchg
jo
testb
xor
dec
aas
xor
or
out
jp
jbe
mov
aad
pop
mov
out
outsb
out
inc
test
cmp
leave
add
cmp
jnp
stc
mov
fcmove
popa
in
sbb
dec
icebp
xchg
pop
sti
inc
in
mov
jae
jle
jl
imul
movsl
lds
repz
adc
sti
aaa
dec
jl
loop
out
inc
sub
dec
popf
cmp
movsb
inc
scas
jmp
pop
pushf
pop
outsb
push
jbe
xchg
mov
movsl
outsb
mov
xchg
pushf
test
das
fcomi
pop
or
ret
imul
mov
mov
sar
dec
adc
push
sbb
mov
and
rcrb
ds
push
dec
mov
dec
inc
sbb
pop
adc
jae
test
mov
adc
lcall
jbe
out
dec
int3
add
push
lret
fisubrs
inc
and
pop
or
stc
sarb
push
scas
and
dec
sbb
rcrb
mov
and
mov
pusha
push
dec
inc
jge
imul
notb
add
stos
mov
and
inc
adc
add
fisttpl
mov
into
mov
sbb
lahf
mov
xchg
mov
mov
fildl
push
clc
inc
xlat
ja
xor
xor
jns
shlb
cmpsl
repz
movsb
ret
inc
lods
dec
sbb
std
js
in
mov
sbb
mov
mov
xchg
add
sbb
lret
fwait
push
pop
sub
or
insl
cmc
or
aam
jecxz
push
out
mov
into
mov
int3
out
cmc
sub
hlt
jecxz
sbb
mov
sbb
push
sub
in
movsb
push
xchg
inc
or
icebp
lret
pop
or
xor
fisubl
lods
mov
mov
jp
dec
mov
stos
push
mov
sub
add
jp
xor
and
mov
int
cs
push
lea
xor
int
jle
xchg
loope
xchg
stc
ret
scas
jns
aad
fisttpl
adc
inc
adc
cmc
std
sbb
mov
jne
add
sbb
bound
xor
call
adcb
dec
dec
lret
lretw
mov
mov
jnp
xlat
adc
outsb
stc
dec
into
popf
js
or
inc
nop
pusha
ljmp
pop
incb
into
jmp
jnp
hlt
dec
mov
cmp
je
mov
out
mov
repz
cmp
mov
or
dec
mov
xor
push
mov
dec
dec
mov
dec
xchg
rorl
adc
mov
push
mov
shlb
stc
jl
xlat
pusha
sbb
adc
imul
jae
mov
sub
data16
nop
push
sbb
push
scas
mov
ficoms
je
adc
mov
pop
das
push
and
gs
adcb
add
popa
push
and
sbb
xchg
shlb
mov
leave
or
out
out
hlt
push
gs
stos
insl
jge
push
pop
and
cwtl
mov
mov
loope
movsl
int3
add
sbb
sahf
loopne
xchg
cmp
pop
push
rorb
mov
test
ss
pop
aam
mov
mov
in
adc
xor
mov
or
jmp
pusha
sub
and
in
cmp
mov
inc
and
xchg
dec
sub
out
dec
out
stos
pop
push
xchg
scas
mov
adc
fbld
aas
bound
aam
mov
movsl
dec
lret
imul
mov
dec
fwait
movsl
cmc
cs
mov
xor
push
fidivs
push
xchg
out
loope
sub
pushf
xchg
cmp
mov
and
adc
fldcw
mov
adc
mov
movsl
cmp
xchg
stos
and
repnz
into
daa
pop
add
xlat
push
mov
sbb
lock
mov
int3
nop
outsb
push
inc
sbb
xchg
cmp
test
mov
jae
sub
adc
cmc
pop
sbb
lret
push
rcl
sub
loope
add
int3
and
sahf
inc
fdivr
inc
dec
inc
fcomps
cmp
sbb
xchg
pusha
mov
adc
loope
jecxz
mov
aas
jb
xchg
aad
imul
pop
inc
repnz
icebp
adc
mov
cmp
and
xor
push
inc
dec
repz
cld
enter
pop
sub
jne
jnp
in
xchg
pop
sub
jno
xor
sbb
adc
dec
daa
fbstp
rcll
repnz
add
arpl
xchg
lods
add
jo
and
js
inc
mov
xor
inc
es
cwtl
mov
cltd
hlt
pusha
pop
cmpb
ja
or
xchg
popa
out
ja
cmp
arpl
adc
in
aas
or
mov
xchg
stos
pop
dec
dec
aam
xor
addr16
cltd
mov
lret
addr16
cmp
pop
cmc
out
push
pop
int3
outsb
pop
jno
push
jecxz
xchg
popa
cmpl
iret
sub
inc
jno
orb
push
data16
stos
iret
stos
popf
inc
rcrl
mov
orb
ss
scas
xchg
incb
cmp
push
lcall
sti
outsl
push
repz
mov
clc
add
test
pop
pop
push
sbb
out
cmp
jne
aaa
ret
into
fildll
mov
in
mov
mov
fisubs
stc
push
addb
cmp
push
cmpsb
cmp
and
out
outsl
scas
push
sub
lds
sbb
jno
push
rcrl
test
and
test
lret
push
push
jp
popa
jo
in
aad
iret
mov
fldl2t
or
inc
pusha
xor
nop
fisubl
scas
stc
rcr
imull
xor
fidivl
adc
or
divl
mov
dec
insb
jg
loopne
mov
int3
and
inc
cmpsb
hlt
sbb
fs
sbbb
push
xchg
push
push
dec
shl
adcb
pusha
in
bound
sbb
outsb
in
mov
lret
sbb
dec
push
imul
mov
mov
jnp
out
shrb
add
push
sbb
sti
cltd
leave
fstpt
or
push
ljmp
sahf
mov
mov
fucom
outsl
pop
pop
les
ficoms
imul
jmp
jbe
push
lahf
incl
sbb
jno
xchg
loop
scas
jae
inc
stos
fs
mov
dec
decl
xchg
jbe
push
or
mov
mov
jae
cmp
xchg
sahf
aaa
fs
lahf
stc
inc
pop
cli
cwtl
rcrb
sbb
pop
test
sub
callw
mov
inc
lods
mov
jge
pop
fwait
insl
rorl
xor
cmc
push
pop
lret
movsb
adc
adc
cmp
lahf
push
push
lds
fwait
jns
in
or
out
imul
packsswb
sti
jo
test
push
xchg
add
jae
es
mov
aas
push
rolb
xchg
add
repnz
das
sti
cltd
sbb
mov
gs
std
pop
lret
push
dec
adc
jns
sti
mov
add
jecxz
cmp
adc
in
mov
mov
lods
std
mov
das
mov
loopne
pop
sub
mov
add
mov
repz
lcall
mov
inc
loop
fldt
clc
xchg
nop
mov
mov
inc
in
or
ficoms
cld
dec
outsb
lock
xor
insl
add
data16
cmp
mov
out
pop
cli
scas
loope
stos
pop
jecxz
mov
lahf
cld
mov
in
cmp
jmp
xor
pop
jne
cmp
iret
or
loop
jns
xor
in
aaa
fmull
and
pop
sub
adc
inc
sbb
push
jmp
mov
pop
aad
out
inc
dec
js
in
rep
sbbl
sub
rolb
adc
or
push
jmp
pop
outsl
pop
push
or
out
inc
scas
push
cmp
hlt
mov
pop
fcomps
int
clc
mov
stos
cmpsb
dec
jp
insl
ds
repnz
push
nop
jle
jle
push
into
lahf
push
xchg
in
mov
or
enter
repnz
mov
or
insl
sbb
pusha
std
cmpsb
xchg
cli
iret
xchg
arpl
loopne
or
ret
or
iret
rcrl
and
out
jne
mov
inc
int3
out
mov
mov
imul
ljmp
sub
aam
cmovo
stos
mov
test
jno
xchg
repz
fstpl
pushf
xchg
jo
rorl
inc
jmp
xor
add
and
dec
ret
fldt
rclb
push
cli
cmpsl
rol
movl
fisttps
cli
loopne
mov
xchg
jl
adc
jle
rolb
out
mov
jno
mov
dec
xor
sub
testl
mov
clc
pusha
mov
rcll
mov
pop
push
movsl
sub
adc
sbb
push
push
test
adcb
fwait
adc
in
pop
inc
pop
fcompl
loope
add
dec
cmpl
push
sub
mov
lahf
scas
int
addl
cmovp
in
push
ds
fadds
cmp
and
jo
sub
sub
sbb
loope
les
call
cld
ss
das
and
adc
cli
imul
push
sbb
sbb
or
jno
sar
xchg
mov
xchg
aam
push
stc
or
dec
mov
push
lock
ret
mov
fcomps
ds
cmp
xor
sbb
clc
clc
nop
push
addr16
outsl
idivb
insl
clc
shrl
xor
push
mov
lods
push
pop
nop
fisttps
mov
xchg
mov
adc
insb
cmpb
pop
daa
mov
mov
dec
sbb
inc
pop
inc
in
mov
int
xor
and
pop
jecxz
scas
or
rolb
mov
je
jmp
mull
mov
inc
or
mov
jp
shl
loop
push
push
cmp
lahf
sbb
xorb
roll
push
call
cmpsl
fdivl
or
fs
fstpt
stos
addr16
cmp
push
push
pop
mov
inc
sbb
and
or
jle
xchg
sbb
stos
mov
nop
sbb
or
cli
cmp
sahf
adc
push
scas
in
add
cltd
test
fs
into
push
in
mov
lret
lret
test
mov
int
or
psubusw
mov
xchg
fildll
sbb
and
dec
fwait
out
mov
iret
dec
std
fwait
xchg
cmp
xchg
fwait
pop
pop
xor
xlat
or
outsb
js
test
or
mov
mov
jne
clc
pop
adc
pop
sbb
dec
mov
cmp
insb
ljmp
mov
or
insb
std
push
inc
xchg
inc
cltd
inc
mov
pop
loope
and
mov
hlt
leave
jg
aas
xchg
shl
and
dec
ds
lret
xor
orb
out
fcmovu
imul
mov
imul
ss
in
push
jecxz
loope
xchg
sbb
add
jge
fwait
sbb
andb
fld
cmp
scas
and
lcall
xchg
and
sub
adc
testl
mov
jnp
lret
xor
push
jg
pop
mov
push
popf
mov
adc
and
push
movsb
mull
sub
and
nop
aas
test
xor
dec
mov
rolb
outsl
xor
cmp
ds
lds
pushf
das
mov
lcall
jae
sub
xchg
mov
adc
and
push
push
aam
jb
and
int
or
stos
arpl
ret
int
stc
inc
mov
mov
enter
in
fs
enter
mov
xchg
mov
test
mov
xchg
mov
int
dec
push
pop
lods
add
xchg
in
arpl
cld
xor
jp
xor
mov
divb
jb
stos
xor
mov
jmp
cmp
in
dec
mov
cmp
sub
cmpsb
pop
in
mov
les
pop
push
cltd
add
mov
xchg
cmc
adc
or
add
ret
or
lret
mov
sbb
out
jbe
aas
add
cmp
xchg
roll
sbb
mov
je
sti
inc
out
mov
shll
or
js
xchg
jmp
xor
insb
sarb
mov
gs
adc
loopne
inc
inc
dec
out
addr16
xchg
mov
xor
fptan
xor
xchg
cld
pop
or
lods
mov
jmp
inc
sti
xchg
fistpl
mov
outsb
or
lcall
imul
arpl
sbbb
ret
adc
dec
mov
data16
push
jbe
cmc
movsb
jle
stc
pop
jmp
js
lret
mov
adc
pop
mov
and
dec
inc
cmp
xchg
scas
push
add
jmp
and
mov
pshufw
dec
adc
jns
ja
inc
cmc
dec
sti
testb
jmp
fchs
pop
pop
xor
xchg
ss
sahf
test
push
xorl
and
subb
mov
in
mov
lods
dec
adc
dec
adc
jno
dec
jne
ljmp
dec
outsl
call
pop
imul
mov
jl
shl
ret
rol
push
sub
ja
inc
and
leave
or
fs
popf
in
call
ss
pushf
mov
lock
das
dec
mov
lock
aam
popa
outsl
sbb
outsb
fistpll
sub
lods
testb
jp
add
and
sub
shll
mov
adc
std
mov
insl
xchg
push
imul
fldl
mov
sahf
fdivl
mov
pusha
cmpsb
push
jmp
js
cltd
ds
cmp
cmp
jmp
sbb
xchg
sub
jns
arpl
idiv
rcr
mov
xchg
add
xchg
mov
xor
stc
sbb
jns
push
dec
inc
jmp
xchg
fs
mov
add
adc
push
push
mov
mov
ret
xor
lcall
sbb
and
bsf
repz
iret
decb
xchg
dec
pushl
sbb
stos
cmp
ret
lret
popa
mov
xor
dec
repz
test
xor
mov
push
dec
shrb
aaa
jne
push
mov
leave
xchg
sbb
hlt
or
out
dec
lods
incl
mov
mov
in
and
and
xchg
sti
imul
mov
gs
xchg
mov
js
cwtl
cmp
repz
lret
pop
frstor
push
jns
les
ss
repz
shl
addr16
mov
and
pop
add
jno
add
loope
xor
push
std
mov
mov
cmpsl
xor
nop
cmp
enter
aam
or
mov
fdivrs
xor
push
sbb
scas
insb
incl
mov
xor
or
and
pop
xchg
mov
in
ret
mov
dec
mov
into
testl
ret
sub
sti
mov
pop
jo
or
push
push
mov
adc
pusha
xchg
dec
int
clc
dec
pushf
andb
or
sbb
mov
int3
cmpsl
mov
sub
mov
lods
cmpl
lds
daa
das
cltd
les
loop
popa
dec
pop
cmp
push
adc
scas
add
cmpsb
push
movsb
in
cmpsl
loope
and
jmp
jne
mov
loop
arpl
dec
pop
hlt
pop
cmp
jo
hlt
cmc
mov
xchg
mov
xchg
lcall
and
jecxz
and
xchg
insb
xor
ret
mov
in
mov
lcall
out
fiaddl
adc
call
push
fmul
xchg
xchg
out
sbb
notb
mov
cltd
cmpsl
mov
jmp
hlt
jp
pop
scas
adc
dec
adc
mov
insb
call
push
ror
ficomps
cmp
loope
ss
sbb
lret
jl
cs
jne
add
adc
shr
add
aad
or
into
and
fs
lea
and
loop
leave
mov
das
pop
aad
test
fdivr
xchg
lret
pop
xor
pop
addr16
jle
mov
mov
push
xlat
ret
sbb
or
adc
cli
adc
dec
cmp
rcrb
add
testl
pop
movsl
push
and
cli
jae
mov
out
cmp
fldcw
ss
dec
adc
data16
dec
sub
adc
cmp
mov
lahf
test
xchg
xor
lods
inc
stos
push
cs
jb
dec
and
push
xlat
shr
int
sub
in
js
cmp
icebp
insb
fadds
stc
icebp
cmp
ret
inc
adc
push
pushf
inc
insl
rclb
jo
push
sbb
adc
cmp
bnd
fdivrs
sub
int3
sbb
out
adc
repz
lret
pop
cmp
sub
inc
sbb
inc
popl
inc
pushf
lods
xchg
mov
dec
dec
insl
xor
inc
scas
xchg
aam
adc
inc
push
cmc
ss
mov
mov
pop
pop
dec
mov
cmpsb
and
cmpb
fidivrs
push
scas
mov
jp
mov
or
push
jle
hlt
rcll
test
loope
popf
adc
bound
xchg
lret
dec
movsl
jle
scas
push
cmp
sbb
xchg
ja
xchg
scas
fidivrs
rcrb
dec
lret
dec
mov
jle
push
outsl
xchg
sub
mov
clc
mov
test
xchg
aad
popf
test
fstpt
xor
xor
sbb
ss
lock
ret
mov
push
rolb
inc
mov
popa
roll
jl
ja
sahf
mov
aas
jb
push
js
add
movsl
jp
mov
mov
dec
xorb
push
rcr
pop
jl
rorb
dec
push
das
xchg
dec
mov
les
fisubrl
rcrb
sbb
mov
call
or
aas
mov
repnz
jp
addl
push
cmp
mov
imul
leave
or
xchg
xor
pop
popa
push
and
out
sbb
lods
imul
lcall
push
mov
mov
and
loope
mov
or
js
cmp
push
scas
ficomps
test
out
loope
push
sahf
mov
or
mov
jg
clc
je
ljmp
je
add
sahf
push
dec
pop
xor
in
sub
insl
clc
gs
cmp
mov
ljmp
out
adc
xor
movsl
mov
mov
add
stos
movsl
out
push
out
sbb
and
pop
pop
pop
cmc
sub
adc
es
jne
iret
iret
cltd
xchg
jno
addr16
xchg
push
repnz
xorb
imul
inc
je
nop
jb
sahf
aam
mov
loopne
pop
xor
in
adc
lahf
sub
mov
cmpl
add
push
adc
xor
sbb
xor
out
and
push
neg
fistl
jmp
sbb
xchg
and
adc
inc
add
xchg
bound
repnz
clc
loopne
jb
push
mov
add
xor
cmp
pop
sahf
dec
inc
rclb
adcb
cmp
sbb
bound
adc
sarb
fimuls
and
fsubr
pop
pop
cmpsb
dec
add
inc
cmc
pop
mov
and
xor
ss
mov
js
fwait
iret
es
jp
leave
adc
mov
mov
fldenv
je
xchg
mov
pop
xchg
push
cs
mov
cmc
pop
lods
jge
shll
inc
imul
cmp
outsl
inc
push
add
xchg
orb
and
jg
push
loope
pop
fbstp
adcb
push
pusha
xchg
xor
mov
bswap
lock
dec
and
pop
leave
or
jl
daa
sub
mov
testl
int3
rorl
cmp
xor
pushf
inc
lret
add
xchg
dec
cs
mov
push
dec
mov
fs
cwtl
dec
into
test
das
icebp
inc
push
inc
lds
inc
in
pop
cs
xchg
stos
into
cwtl
icebp
sub
test
xor
inc
dec
leave
stc
in
jmp
inc
push
int
pop
pop
cmp
adcl
stos
lret
add
call
pop
add
cmp
fcomp
outsl
pop
mov
push
jns
hlt
addr16
movsbl
jns
ror
idiv
or
outsl
jp
jg
and
andb
gs
mov
mov
pop
inc
mov
shlb
mov
mov
push
test
mov
jge
ds
faddl
push
dec
scas
in
mov
loope
mov
arpl
fnstsw
xor
adc
mov
xchg
sub
std
imul
pop
into
push
enterw
sti
lret
push
mov
sahf
push
sbb
add
or
mov
mov
sbb
inc
lret
xchg
sub
das
inc
cs
push
pop
rorl
add
pop
les
xor
push
mov
mov
cmp
xchg
in
adc
rolb
jbe
in
sub
cmp
adcl
sub
fiaddl
mov
aad
out
pop
jl
shrl
adc
mov
lcall
inc
loope
jle
push
test
add
pop
xchg
or
inc
push
pop
loop
push
test
and
int3
inc
jne
push
jecxz
loope
push
pop
and
in
sub
aas
je
into
mov
dec
jecxz
cmp
test
xchg
dec
sbb
mov
push
iret
push
ss
mov
gs
insb
adcb
sbb
ss
ror
mov
mov
sahf
push
jle
ss
sahf
sub
adc
scas
cltd
jge
decl
aam
das
iret
inc
loopne
call
popf
cmpl
inc
sahf
sub
sub
outsl
add
das
std
in
scas
pop
lods
sub
loopne
mov
cmp
lahf
test
mov
insl
or
inc
loope
jb
push
mov
jb
outsb
cmp
dec
in
push
sarl
push
add
out
inc
inc
into
dec
dec
pop
push
cmpsb
stos
mov
jge
lret
hlt
jo
sbb
jmp
xchg
mov
cmpsb
add
jl
jae
xchg
sub
iret
jecxz
mov
aad
pop
push
cli
mov
mov
or
flds
stos
sub
cmpl
and
fwait
adc
aaa
in
loope
shr
mov
inc
sbb
lret
dec
sub
popf
shl
repnz
mov
sub
mov
pop
shll
inc
rol
ljmp
loope
jne
ficoml
cmp
test
dec
pop
bound
inc
insb
pop
mov
mov
mov
cmp
push
xchg
push
lods
xchg
jnp
sahf
out
lcall
jle
pop
es
add
inc
in
das
xor
inc
adc
outsl
fwait
cmc
lret
xchg
xor
pop
jb
inc
shr
mov
jecxz
and
push
push
les
or
sbb
out
fwait
mov
xchg
sub
adc
mov
dec
jecxz
ja
adc
rclb
dec
out
out
cwtl
das
jo
scas
and
and
arpl
loopne
gs
test
cmp
xor
jno
icebp
ja
ret
add
aas
push
jo
jle
mov
rorl
fdivp
cmpsb
mov
je
arpl
push
xchg
mov
rolb
mov
leave
inc
int
mul
mov
imul
lods
inc
lcall
add
fidivrs
es
test
roll
andb
mov
shrl
dec
cmp
inc
outsb
incl
repz
sar
jnp
popf
xchg
xor
fidivl
push
push
ret
add
test
cld
xor
mov
xchg
mov
mov
hlt
cmp
inc
js
aas
sub
sbb
loope
fsubrp
scas
aas
test
loop
sub
lret
and
or
scas
dec
mov
test
and
mov
and
iret
cltd
stc
cld
jbe
sub
pop
cltd
out
push
add
idivl
cltd
lea
jl
sbb
lods
cmp
incb
xor
lar
dec
adc
rorb
pop
adcl
insb
imul
pop
jp
add
jge
ss
out
fcoml
scas
dec
aam
mov
push
pop
sbb
out
fistpll
sbb
jb
arpl
sub
test
stc
jbe
mov
or
xor
mov
fsubrp
dec
sub
adc
inc
loope
xor
mov
or
scas
nop
outsl
pop
cs
mov
adc
ds
mov
jl
lock
xchg
lret
jmp
fmulp
fdivl
push
inc
aas
mov
push
mov
add
mov
pop
push
ds
popa
js
fsubrs
icebp
xor
jg
sahf
sbb
or
or
cmp
mov
aas
sbb
jnp
insb
mov
arpl
das
or
nop
sub
jae
push
jbe
repz
sbb
jg
and
stos
and
adc
repnz
repnz
jbe
add
aaa
ret
mov
ds
sub
push
stc
scas
ret
push
shl
cli
xchg
lods
bound
jl
xchg
jbe
xor
add
push
push
rcll
rorb
repz
fistpl
rcll
test
addr16
xchg
adc
mov
mov
cmc
ja
scas
addr16
dec
cmp
cmp
jmp
test
mov
cmpsb
jne
inc
mov
dec
dec
dec
cmpb
js
push
orb
loope
add
lea
fisttpl
mov
sbb
ret
and
sub
repz
stc
test
lret
out
arpl
jne
cmp
push
ficomps
mov
outsb
and
sarb
loop
stc
nop
sbb
xchg
add
imul
bound
sub
popf
aaa
jp
xchg
jle
movsl
mov
xchg
out
fisttps
mov
and
push
pop
cmp
pop
pop
sub
jg
xor
cmp
or
popf
out
ret
jl
xor
movsb
sarl
sti
jmp
in
sbb
in
andb
repz
lret
pop
adc
mov
mov
jge
mov
sub
shll
stos
cmp
addl
cmp
gs
push
xchg
jp
mov
mov
mov
mov
dec
dec
adc
loope
or
xchg
mov
mov
stos
xchg
inc
sbb
iret
leave
mov
outsl
cmp
sarl
not
mov
sub
pop
fstps
push
movsb
adc
push
pusha
in
inc
or
add
repnz
pop
dec
jge
je
or
aaa
inc
xor
mov
sbb
iretw
cld
ja
cmp
aad
jns
adc
jnp
dec
fwait
xchg
cld
pop
gs
gs
int3
stos
push
cmp
cmpsb
cmc
mov
and
out
pushf
lods
popa
std
repz
jnp
inc
loop
jmp
mov
iret
push
xor
mov
leave
sub
mov
lods
out
xlat
mov
icebp
xor
cmp
aam
aam
inc
into
daa
add
mov
inc
push
lock
fmuls
push
add
mov
leave
add
mov
dec
or
lahf
mov
or
ret
push
in
xor
fdivrl
mov
xchg
mov
enter
mov
hlt
jbe
bound
jno
or
sub
enter
dec
adc
cld
and
push
mov
fwait
enter
xchg
cs
subl
dec
repnz
and
bound
stos
test
mov
lock
jle
mov
testb
lret
add
cmpsl
popf
lret
xchg
xchg
in
sbb
push
mov
mov
out
and
enter
push
or
xchg
imul
mov
jg
or
loopne
xchg
call
repnz
inc
test
je
subb
jno
lahf
inc
add
repz
pop
xchg
and
lcall
sbb
rcrl
out
lret
scas
xchg
nop
mov
leave
sbb
decb
push
lahf
jmp
insb
xor
dec
cli
imul
ljmp
inc
rorl
cmp
adc
int
or
jge
in
lods
mov
pop
pop
je
test
jb
outsl
cwtl
jae
jne
push
mov
or
mov
jg
in
cmc
fcomps
adc
push
and
adc
dec
mov
inc
daa
cmc
xor
cld
in
mov
and
test
stos
test
cmp
mov
jecxz
jle
hlt
xchg
scas
pop
jecxz
jno
ljmp
xchg
push
xchg
andl
jae
cmpsb
mov
inc
dec
rol
jmp
mov
loop
cld
repz
mov
out
dec
push
sbb
test
cwtl
sbb
pop
push
fisttps
imul
repz
test
out
icebp
imul
cmpsl
push
icebp
stos
mov
movsb
sbb
or
stos
test
xchg
lret
dec
stos
jl
lahf
mov
sti
pop
dec
mov
mov
inc
or
or
adc
and
pop
sbb
and
jo
insb
add
jae
jmp
nop
enter
mov
or
lret
rcll
jns
lea
inc
mov
adc
fidivs
add
mov
mov
inc
add
sti
ljmp
or
je
push
adc
movsb
rol
cmp
sbbb
push
loopne
ret
aas
jb
sub
jae
lods
lods
cmp
mov
pop
xchg
sub
inc
and
jae
add
adc
sub
stos
cli
lahf
shr
push
outsl
je
es
and
adc
jecxz
nop
out
pop
std
loop
out
fcompl
cmc
mov
push
out
sti
mov
sub
cld
pusha
pop
cwtl
loopne
imul
inc
jb
call
sti
mov
jmp
subb
pop
cmp
and
sbb
push
and
inc
lcall
adc
pushf
or
and
or
bnd
in
leave
adc
pop
cmp
int
pop
inc
jge
aaa
cmpsl
push
sbb
pop
mov
adc
fbstp
pop
cmp
jecxz
or
jl
out
rcrb
add
push
and
mov
cli
xchg
shld
push
mov
dec
mov
icebp
cmp
jle
lods
cmp
mov
push
xchg
mov
sub
mov
or
dec
pmaxsw
in
inc
push
outsb
mov
enter
test
jge
mov
fidivs
not
sub
jo
shrb
fisubl
mov
dec
stos
or
mov
loope
imul
push
mov
cld
sbb
cwtl
cmc
cmpsl
pop
adc
jl
mov
ja
dec
sahf
mov
push
hlt
call
xchg
divl
aas
or
push
aaa
aaa
mov
xchg
dec
and
lods
mov
lret
pusha
jne
mov
mov
lods
jl
push
push
jns
repnz
lret
aam
mov
pop
idiv
mov
mov
test
andl
frstor
or
repz
mov
jl
into
ljmp
or
mov
mov
pop
test
addr16
jbe
and
popa
mov
cmp
push
shll
mov
out
rcrl
sbb
cmp
add
jbe
sbb
ds
push
jmp
movsb
ss
push
dec
outsl
hlt
jnp
xchg
push
hlt
addr16
mov
mov
pop
out
jne
arpl
cltd
push
sub
and
mov
xlat
dec
js
mov
into
mov
hlt
and
mov
fimull
aam
mov
pushf
jecxz
add
adc
mov
out
int
inc
push
sti
sub
push
lahf
cmp
adc
cmp
ss
cmpsb
xor
xor
leave
lds
xor
xor
mov
cmpl
mov
aas
int3
insb
jb
add
xorb
loope
pop
jmp
notl
sbb
repnz
dec
mov
std
push
push
pop
out
jbe
insb
lods
out
sti
jp
lret
pop
insl
clc
sbb
les
jne
sub
jle
test
iret
mov
mov
xor
pop
pop
jp
or
aaa
add
imul
pusha
mov
xor
cmp
sahf
out
inc
mov
or
push
nop
test
sbb
inc
imul
sub
pop
lods
and
stos
lcall
fwait
pop
fbstp
push
stos
je
and
add
hlt
outsl
pop
sbb
pusha
dec
push
insl
in
je
rcrb
test
je
popf
lea
add
aad
jae
xor
clc
or
push
inc
pop
or
ss
sub
xchg
push
dec
add
jnp
sahf
sub
and
cmc
push
xor
jge
jge
push
jge
nop
scas
cltd
mov
push
pop
pop
xchg
pusha
lret
mov
push
adc
cs
jne
shll
push
cmp
ret
cmc
movsl
rcrb
cmp
pushf
inc
jecxz
cmp
adc
imul
cmp
mov
dec
cmp
sub
mov
scas
out
leave
fidivs
pop
and
fwait
or
jae
dec
jl
or
fwait
lods
rclb
jmp
push
shlb
out
mov
inc
iret
rcrl
sbb
lahf
ds
xlat
push
addr16
mov
push
iret
icebp
mov
in
sub
push
cmp
pop
shl
leave
jl
aam
outsb
roll
out
jb
fwait
sub
inc
mov
jno
sbbb
movsl
pop
les
mov
xchg
les
inc
cmp
mov
pop
xor
mov
ficoml
loopne
push
insl
cltd
test
ja
and
dec
xor
fstps
repnz
test
xchg
inc
lret
mov
adc
push
mov
cltd
lret
lret
and
xor
inc
sbb
xchg
sar
aad
outsb
aad
xor
mov
scas
add
adc
test
mov
add
jo
fcmovne
bound
mov
clc
adc
fsubrs
pop
mov
mov
or
inc
adc
invd
lds
jbe
sub
or
scas
arpl
test
stc
shrw
pop
add
sub
fcmovnbe
inc
mov
lods
mov
out
in
pop
fistl
or
imul
outsl
xor
mov
stos
mov
xchg
fistpll
sbb
hlt
es
repz
sub
and
or
add
mov
js
test
sbb
mov
icebp
cmpl
xlat
jae
sbb
sub
jo
mov
into
ja
inc
bnd
pop
out
enter
lret
dec
xchg
ljmp
cli
cwtl
sub
push
scas
adc
mov
orb
push
filds
push
lcall
push
pop
mov
shlb
push
xor
pop
aaa
aas
mov
fldt
inc
out
adc
lret
orb
sbb
jb
rorb
xlat
imul
out
cwtl
inc
and
dec
mov
mov
daa
scas
inc
pop
mov
mov
pop
and
jae
popa
popf
daa
cld
jb
fildl
add
sarb
sbb
int3
xchg
xor
dec
int
dec
adc
test
cwtl
es
test
cld
getsec
mov
iret
fwait
or
or
mov
fs
push
and
cmp
sbb
imul
mov
mov
adc
add
dec
or
push
fmul
cmp
ret
push
dec
insl
lods
insl
icebp
add
pop
in
scas
clc
mov
jmp
xor
or
sub
pop
cwtl
jnp
mov
and
cmp
jae
mov
insb
jb
cli
into
fwait
pop
mov
mov
jmp
movsb
fisubl
jb
loop
sub
dec
in
xchg
xchg
add
xchg
push
rcl
dec
lea
xorl
lcall
adc
and
xor
sbb
dec
or
and
fstl
jne
jl
arpl
push
inc
lods
es
loope
ss
je
in
adc
jecxz
addb
pop
in
xlat
aam
xchg
scas
inc
test
sbb
dec
in
mov
inc
add
push
cmp
out
sub
cmp
xchg
pop
fsubrp
out
outsb
test
xor
xchg
cmp
gs
adc
jp
cmpsl
out
push
lret
mov
cmc
push
or
negl
cmp
sbb
push
dec
pop
fwait
lea
hlt
cltd
xor
lahf
int
arpl
inc
stos
repnz
insb
subl
mov
sbb
lret
jle
mov
bswap
mov
sbb
sbb
cmp
in
pop
loopne
loop
das
xchg
cmp
cmp
inc
push
les
inc
xchg
cmp
leave
insb
adc
in
ret
jns
pop
dec
dec
xor
int3
out
mov
int3
xchg
popa
dec
std
sub
add
inc
push
leave
cmp
xor
mov
jne
xchg
push
fcoms
out
lods
lret
cmp
jae
mov
scas
add
outsb
push
mov
cwtl
inc
fldcw
sbb
xchg
sub
icebp
xor
sbbb
aas
mov
icebp
daa
dec
iret
int3
jmp
cmpsb
sub
xor
pushl
popa
pop
xchg
in
adc
sbb
icebp
sub
clc
loopne
xchg
sub
js
out
gs
push
mov
xor
mov
dec
loop
ja
mov
and
gs
push
jge
leave
mov
loop
inc
out
aam
mov
bound
pop
push
lods
inc
xchg
adc
and
in
pop
in
dec
inc
and
jnp
add
mov
mov
lods
aaa
rcl
jo
or
push
inc
and
out
lret
loopew
cwtl
push
xlat
pop
cvtdq2ps
cmp
mov
call
dec
ss
xchg
arpl
push
xor
fidivrl
pop
fwait
push
es
gs
fucomp
cmpps
sti
jecxz
xor
sbb
fldenv
xchg
and
sub
repnz
leave
sub
add
push
lcall
jecxz
fists
in
xchg
mov
iret
test
in
mov
adc
jecxz
mov
push
dec
cmpl
and
dec
push
popf
jl
inc
inc
mov
cmp
mov
or
push
lods
jge
mov
push
jnp
das
cmpsl
jp
pushf
clc
lcall
adc
cmp
popa
xchg
sub
pop
lret
popa
mov
pop
fsts
dec
iret
add
dec
js
jne
mov
adc
std
outsl
pop
cmp
frstor
out
stc
out
dec
into
sbb
xchg
loopne
jge
int
push
jb
push
inc
jmp
lahf
test
jnp
ret
sub
notb
ret
jo
lcall
fbstp
inc
mov
mull
popa
ret
popf
shrl
add
mov
and
and
adc
outsb
dec
mov
icebp
pop
addl
push
mov
xor
inc
outsl
mov
mov
popf
cmp
or
mov
or
bound
sbb
hlt
xchg
mov
mov
inc
mov
sbb
imul
in
mov
popf
ret
mov
inc
push
cmp
and
mov
and
adc
mov
xlat
addl
mov
and
push
mov
mov
mov
test
stos
out
jno
das
mov
sbb
outsb
or
push
pusha
mov
jno
mov
jnp
adc
and
sbb
inc
sbb
sbbl
mov
ljmp
mov
pop
mov
in
sub
jb
sbb
mov
test
pop
xchg
cmpsb
xor
inc
xor
mov
xor
cmpsb
cmc
fidivs
sbb
push
mov
xor
negb
mov
shrb
fstl
mov
test
popa
push
or
loop
outsb
sbb
mov
hlt
cmp
incl
jl
xchg
addr16
and
fidivl
jmp
pop
jb
ret
sbb
jo
js
add
adc
mov
rcll
pop
fsts
addr16
std
inc
sbb
push
dec
fisttpll
adc
nop
lcall
fisubrl
fmul
sub
sub
loope
cmp
add
test
cmp
and
pop
mov
xchg
pop
mov
call
xor
mov
sbb
scas
jno
jbe
pop
stos
jns
lahf
test
stc
inc
orl
cmp
and
movsb
mov
lods
fmuls
test
inc
cli
mov
jns
stos
jb
jp
and
cmp
push
pop
and
cmpsl
popa
dec
mov
dec
add
lds
aad
in
pop
and
inc
sbb
sbb
fisubrs
and
testl
cmp
in
mov
mov
int3
pop
inc
add
movsl
push
insb
mov
call
stos
push
negb
mov
in
and
inc
nop
pop
inc
fsubr
shrl
das
and
mov
iret
int
adc
cmp
pop
mov
js
pusha
adc
stos
repnz
jl
push
jbe
out
jg
xchg
sahf
nop
call
dec
or
mov
adc
adc
jp
sub
lret
mov
cmpsl
or
xor
loopne
aad
repnz
lods
push
cmp
cmove
mov
or
cwtl
mov
add
ret
pop
cmp
jle
adc
pop
push
ficoms
les
gs
idiv
adc
and
ret
xchg
sbb
fs
fwait
add
mov
and
movsb
dec
ja
sbb
lea
loopne
cmp
mov
icebp
or
and
ds
into
push
insl
adc
push
and
dec
leave
out
mov
daa
or
mov
xor
adc
les
xchg
sub
mov
dec
cmpsl
test
mov
fwait
sbb
and
sbb
pop
xchg
jb
test
mov
and
nop
lock
jae
test
pop
xor
hlt
xorb
stos
in
pop
xchg
stc
adc
imul
dec
mov
dec
jecxz
jg
cmp
insl
or
call
adc
lahf
ror
or
dec
lret
lcall
loopne
loopne
pushf
es
dec
mov
inc
xchg
or
sbb
push
popf
int
in
loope
and
xchg
adc
sti
mov
ret
es
sbb
sbb
xchg
imul
sarl
cmp
std
sbb
and
inc
lds
push
sub
fidivrl
dec
pop
negb
cmp
stos
shrb
and
das
in
ficoml
js
insl
mov
sbb
fildl
ret
lea
loope
mov
dec
pop
sahf
nop
sbb
xor
pusha
outsl
push
cld
jno
in
out
ds
mov
mov
lods
xor
xor
mov
mov
inc
mov
repz
jge
and
fstl
sub
pushl
gs
sbb
jnp
sbb
mov
cmp
ret
sub
or
cli
xchg
int
xor
cmc
ss
ds
shll
repnz
push
xor
repnz
xor
xchg
imul
and
cmp
cmp
outsb
sub
repz
xchg
imul
sahf
mov
divb
xchg
push
xchg
cmp
pop
lret
decb
cltd
test
mov
aaa
cmp
mov
jmp
jl
dec
xchg
ljmp
loopne
mov
fmull
sbb
add
jbe
out
sub
loope
push
dec
sub
and
fwait
push
pop
mov
pop
lret
add
pop
out
mov
sarb
and
push
or
mov
push
movsl
pop
mov
mov
xchg
jmp
stos
test
repz
inc
xchg
push
inc
stos
ljmp
xor
lods
dec
push
jg
adc
inc
fdivr
test
xchg
dec
popa
cmp
mov
in
mov
bound
lods
inc
or
out
inc
or
sub
jnp
test
or
and
icebp
gs
stc
shll
and
jnp
mov
call
pushf
insl
jo
pusha
xor
fs
insb
jmp
push
mov
pusha
pop
mov
nop
cmpsb
cwtl
dec
sarb
leave
dec
mov
vmread
adc
xchg
mov
mov
pop
lods
jcxz
inc
jne
in
into
inc
add
sbb
jg
fwait
insb
mov
add
mov
movsb
adc
dec
nop
inc
mov
and
xchg
or
push
dec
std
pop
pop
or
lea
mov
sub
dec
mov
test
adc
xor
iret
jge
test
cmp
out
cli
mov
jb
imul
pop
lock
jle
mov
dec
cmpsb
jl
push
sbb
lds
in
mov
cmpsb
leave
subb
aad
jmp
xchg
xchg
add
add
lock
leave
mov
cmpsl
sub
mov
mov
rcll
pop
mov
in
mov
repnz
sahf
sub
xchg
popf
fnstenv
mov
sbb
sub
jnp
xchg
enter
cwtl
dec
mov
popf
sub
cwtl
or
inc
aas
sbbl
dec
je
sbb
xchg
sarb
lcall
push
cmp
jecxz
mov
mov
lret
mov
aas
lods
pop
push
in
scas
in
fdivrs
and
add
sbb
imul
mov
fnsave
push
call
clc
out
jb
pop
stc
fbld
mov
rcll
mov
push
cmp
dec
out
icebp
xor
push
scas
sub
xchg
xor
mov
dec
addb
push
in
out
fcoml
test
mov
cmp
and
rcrb
and
or
ja
mov
ljmp
xor
mov
shll
pop
jge
rolb
sub
into
dec
cmp
in
sub
jae
push
dec
jmp
push
les
inc
sbb
sarl
cli
pop
data16
in
mov
inc
jne
inc
push
lods
movsb
jge
sbb
subl
cmp
sub
lods
out
dec
ret
inc
cmp
fnstsw
jbe
cs
aaa
xchg
leave
pop
fdivrl
add
les
xor
jp
mov
dec
fldt
nop
mov
test
cmp
ljmp
inc
push
sub
or
lahf
push
inc
push
daa
mov
cmp
or
test
xchg
inc
stos
mov
je
enter
sbb
cwtl
fcom
cmc
mov
pop
mov
int3
in
sub
ret
sbb
xchg
sbb
mov
jl
jp
lret
push
sbb
icebp
arpl
add
fcmovnbe
cli
mov
les
mov
mov
dec
subl
xor
adc
mov
stc
adc
lds
mov
mov
sub
and
nop
hlt
stos
jno
in
sbb
dec
jge
jge
lods
daa
popa
jp
inc
xchg
inc
adc
and
mov
add
and
jp
lods
cmc
ss
push
sub
xchg
sti
ret
leave
xchg
sub
ficoms
mov
fwait
push
out
jl
fnstcw
lret
xchg
and
mov
addr16
and
psubd
leave
sti
mov
jo
subl
aaa
andl
mov
sub
mov
jns
mov
pop
inc
inc
push
mov
xchg
and
add
pop
movaps
inc
insl
std
repz
or
add
pop
adc
aad
add
inc
rorl
bound
push
outsb
jbe
dec
into
inc
enter
mov
lret
scas
lret
popf
cwtl
dec
xchg
xchg
and
and
cld
cmc
into
or
sub
aad
mov
pop
and
cld
pop
loopne
jecxz
lcall
lcall
rolb
pop
popa
sbb
mov
ret
imul
jbe
add
ret
mov
mov
and
negl
mov
and
cmp
enter
ja
add
out
ret
sbb
shll
scas
lcall
shll
mov
push
repnz
inc
mov
sbb
cwtl
or
and
sub
ret
mov
fnsetpm(287
fists
inc
shr
pop
cmp
int3
mov
sbb
fwait
icebp
leave
mov
iret
jb
xchg
stc
pop
lock
dec
xchg
jg
cmpsb
or
cmp
dec
testl
xchg
stc
fcoml
jle
into
sub
sub
push
lret
enter
shr
sarb
fcomi
flds
pop
push
jge
and
xor
or
jp
je
iret
xor
dec
fnstsw
push
scas
js
sub
inc
sub
dec
outsl
dec
ret
fucom
sub
nop
hlt
out
das
mov
ret
dec
sbb
jle
scas
loopne
addr16
or
push
divl
repz
in
push
add
lods
lret
jg
sub
in
ja
negb
sub
aas
lahf
add
jecxz
cmp
mov
div
xchg
fld
lret
pushf
out
std
dec
int
outsl
mov
sub
nop
mov
and
outsl
in
cmp
jl
pusha
neg
cmc
fdivs
dec
mov
cwtl
sub
test
mov
xchg
xchg
xlat
lret
enter
xchg
pop
arpl
shrb
sub
clc
imul
subl
sub
rorb
sbb
add
cmp
inc
mov
add
adc
mov
outsl
sub
stos
lea
sbb
sbb
cli
adc
add
sbb
ret
and
ja
mov
int3
stos
test
lahf
push
aas
aam
inc
pushf
stos
cmp
xor
adc
lds
xchg
mov
lods
mull
dec
jecxz
xchg
scas
push
data16
xchg
cwtl
jmp
inc
out
sahf
dec
xor
into
mov
adc
rolb
jns
in
add
xchg
loop
pop
repz
push
sub
dec
adc
dec
inc
clc
sbb
popa
idiv
aaa
sub
adcb
push
outsb
mov
das
das
les
stos
and
sbb
je
mov
int3
into
mov
nop
addr16
sbb
shr
jge
cli
mov
mov
xchg
jecxz
enter
fsubs
pop
xor
aaa
in
in
sbb
mov
leave
mov
imul
mov
jge
add
jg
mov
pop
rol
add
inc
into
sarb
inc
xchg
fsubs
mov
adc
std
pop
sub
in
xlat
push
movsb
lock
push
mov
mov
and
add
mov
or
leave
and
jp
dec
scas
aaa
push
adc
outsl
push
lahf
imul
xchg
repz
cmp
loope
xchg
and
test
pop
jg
inc
mov
scas
nop
adc
in
inc
push
xlat
sbb
and
adc
hlt
aad
or
ret
clc
pop
xchg
cli
cmovae
mov
movsl
mov
je
and
push
stc
pop
mov
in
mov
pusha
or
mov
cmpsb
and
mov
pop
ret
lock
sub
lock
xchg
es
fcoml
or
push
adc
popa
pop
adc
mov
mov
idivb
sub
sarb
and
xchg
or
sbb
int3
mov
sbb
daa
movsb
jp
nop
icebp
xor
mov
test
pop
push
mov
shlb
push
and
push
popa
or
fcoms
sti
push
enter
mov
jo
cmc
rorl
ljmp
scas
pop
lock
decb
mov
inc
mov
arpl
or
inc
mov
jecxz
jg
mov
mov
fdivrs
aad
add
mov
dec
or
in
jge
test
test
imul
rorb
dec
je
mov
adc
cmp
and
or
push
add
jp
cmp
stos
lret
mov
sub
aaa
stos
fs
loop
sbb
dec
enter
mov
xchg
jnp
ja
pop
jp
cmc
xchg
divb
sbb
cmp
inc
icebp
adc
xor
les
in
out
cltd
movsl
xor
sahf
xchg
nop
fwait
xor
lret
fsubr
mul
and
add
aam
stc
ss
lret
xor
lret
mov
inc
and
push
ljmp
mov
int
gs
loopne
add
cmp
fwait
push
and
pop
adc
xchg
rorl
xchg
cmp
out
mov
mov
xchg
adc
and
enter
mov
fistpll
iret
pop
mov
fstpt
jl
mov
nop
jmp
popl
pop
mov
xchg
sub
cli
adc
fidivrl
xlat
sbb
jno
lret
dec
inc
inc
adc
dec
mov
ror
mov
jnp
mov
fs
int
mov
rcrl
ljmp
lea
imul
push
adc
or
jbe
pop
or
mov
mov
js
mov
fimuls
out
pop
or
popf
rclb
je
mov
push
mov
outsl
adc
repz
push
mov
jg
push
inc
dec
xchg
add
inc
imull
jb
ret
sarl
cmp
cli
orl
sti
dec
mov
mov
cmp
mov
jl
xchg
mov
scas
rorl
pushf
sub
mov
scas
cmp
mov
xor
test
out
call
ret
mov
mov
sbbl
pop
movsl
das
mov
add
rcl
pop
lock
mov
movsl
inc
loopne
outsl
imul
sar
stos
sahf
mov
ja
cwtl
dec
adc
addr16
mov
outsl
fdivl
adc
jae
mov
mov
lea
push
xchg
rol
ds
fnstenv
mov
movsb
inc
sub
jl
out
cmpsl
xchg
push
subb
or
loope
push
lret
loop
aam
cld
lahf
lea
push
mov
cltd
int
lods
imul
jl
and
sub
sbb
push
pusha
ljmp
divl
adc
push
xchg
or
jle
ds
xor
lret
jbe
insb
mov
mov
and
xor
fisubs
rcl
or
aas
jb
lahf
jns
dec
mov
cmp
xchg
rcrl
dec
in
mov
lds
jecxz
and
ja
adc
ljmp
fsubl
dec
hlt
mov
pop
and
pop
loopne
outsb
icebp
psubsb
sar
xchg
ja
mov
pushf
std
mov
lret
jbe
stos
jbe
shlb
gs
cmpsl
xchg
pop
xchg
fstpt
sub
xor
add
sahf
jge
adc
sbb
lahf
push
push
push
pop
add
or
pand
imul
sub
xchg
adc
clc
loop
mov
mov
ds
jmp
add
jns
pop
cmc
test
jg
mov
clc
xchg
jnp
mov
loope
lea
jne
lea
iret
and
or
lock
lock
imul
es
jl
pop
cli
mov
lock
mov
and
movsl
pop
jnp
mov
jmp
daa
sub
test
push
cmp
rorl
repz
jo
or
aam
int3
icebp
jg
test
hlt
mov
popf
or
cmp
pop
sbb
lcall
shlb
push
stos
sub
loope
sub
ljmp
cmp
inc
enter
and
dec
das
inc
xor
sarl
mov
das
adc
neg
sbb
cpuid
and
data16
scas
cmp
mov
jp
jle
test
dec
ja
mov
sar
frstor
xchg
push
mov
mov
popl
aad
jb
stos
pop
mov
nop
ss
cmc
lahf
and
jno
je
pop
push
push
xchg
ljmp
movsl
pop
sahf
xchg
xchg
leave
jns
jns
pop
adc
jg
cmpsb
cmpb
pop
jmp
inc
std
ja
dec
adc
cs
inc
in
jg
out
dec
xchg
cmpl
cmc
jp
and
mov
cmp
dec
sub
push
xor
jle
test
arpl
test
ds
mov
dec
dec
js
and
in
into
adc
adc
aas
jp
nop
xor
test
jno
cwtl
xchg
cmp
cmp
mov
and
addb
imul
mov
int
push
cmp
xchg
pop
out
je
push
mov
aaa
loope
jne
sbb
xor
in
mov
push
addr16
xor
sahf
lret
adc
jno
mov
imul
push
int3
push
adcl
daa
enter
cmpsb
popl
test
shr
sbb
adc
arpl
cmp
movsl
and
cmp
or
push
cmp
xchg
incl
mov
lret
movsl
cmc
popa
out
cmp
mov
cltd
adc
inc
cmpsb
cli
das
mov
in
xor
sahf
mov
adc
ds
inc
fcoml
outsb
xchg
movsl
popf
pop
fwait
ret
xchg
das
push
pandn
ljmp
pop
add
xchg
add
dec
enter
lret
pop
push
mov
lea
jae
mov
rorl
mov
pusha
pop
pop
and
aam
ljmp
jae
mov
cmc
lea
adc
pop
insl
stos
jnp
mov
adc
add
daa
sahf
and
leave
dec
shll
movsl
xor
arpl
and
xor
lcall
in
push
pop
sbb
jg
adc
mov
stos
inc
cwtl
mov
sbb
mov
or
sarl
and
inc
nop
inc
jg
lahf
rorl
xchg
in
lcall
and
and
add
popf
repnz
inc
es
or
xchg
pop
xor
sub
movsb
roll
dec
mov
int
adc
sbb
cmc
movsb
ss
ret
lret
or
cmc
dec
xchg
lock
sahf
movsl
pusha
insb
std
cmp
dec
out
jl
push
cwtl
lods
sbbl
mov
ja
add
fadd
shl
xchg
dec
xchg
sbb
subb
pop
sub
mov
mov
mov
sub
sub
fcompp
das
in
iret
addl
das
pop
frstor
dec
test
out
clc
sbb
pushf
scas
test
mov
ljmp
pop
and
shlb
fnstcw
into
fwait
cmp
fbld
ret
orb
xor
ds
stc
pop
inc
mov
lcall
jg
loop
out
insl
xchg
fisubs
xchg
or
dec
cltd
add
cmp
pop
jno
push
test
or
sub
fnstenv
xchg
mov
sub
xor
jmp
add
rcr
dec
scas
in
or
lahf
aaa
pop
repz
push
mov
outsl
test
adc
push
add
loop
inc
popf
hlt
into
lods
mov
or
imul
push
jb
stc
stos
shrb
movd
dec
ja
jle
push
enter
pushf
cmp
cmpsl
push
xchg
scas
mov
xor
test
pop
dec
push
mov
andl
mov
cmpsl
lods
mov
mov
jle
jle
xchg
rcrl
rcl
sti
dec
add
ss
cs
push
push
xchg
lcall
sub
lahf
and
cld
popf
lea
cwtl
xchg
cmp
xor
pop
std
mov
push
cmp
jne
pop
out
push
aaa
scas
mov
xor
mov
int3
out
sub
push
nop
aam
sbb
add
or
das
xchg
adc
jae
in
add
test
pop
mov
mov
push
jno
or
mov
mov
ljmp
stos
jo
or
cmpsl
repnz
cmpsb
jl
pop
ss
push
jle
outsl
sahf
push
sub
stc
pop
pmullw
jmp
push
ss
sub
pop
js
sbb
rcrl
or
leave
xchg
and
addr16
xchg
xchg
or
sti
out
lret
ljmp
mov
outsb
loopne
clc
push
sbb
ds
fxch
mov
mov
enter
cmp
push
cmp
mov
cld
adc
shl
lahf
int3
rorl
loopne
cmp
mov
jb
aaa
push
fmuls
push
jmp
mov
xchg
cmpsb
sub
cmp
nop
std
lock
sub
mov
mov
movsb
pop
mov
das
pop
sbb
lret
lret
lea
bound
push
cmpsb
push
in
add
pop
in
push
popf
and
daa
fdivrs
or
add
insl
test
rcrb
lcall
inc
cmp
push
in
aaa
jnp
mov
mov
out
rorb
rcll
data16
fs
xchg
dec
sbb
stos
push
outsb
pop
push
test
out
mov
repz
stos
icebp
adc
pop
push
stos
dec
data16
test
pop
out
fnsave
push
jno
out
dec
jnp
adc
out
fcmovbe
fs
pop
repz
cmpb
std
dec
add
sti
in
cmp
pop
sub
sbb
js
jb
xchg
jmp
cmp
fwait
dec
jae
push
in
pcmpeqd
pushf
dec
daa
ret
jl
jne
popf
dec
dec
dec
lret
sbb
filds
mov
mov
cmpsl
repnz
and
addl
jg
stos
adc
std
imul
leave
pop
sti
nop
mov
pop
std
mov
fs
jecxz
int3
nop
sub
outsl
pushf
xchg
fwait
and
lret
stos
lock
sti
mov
sub
sub
jle
inc
sbb
out
sub
lret
cmp
cmovo
xchg
pop
mov
adc
leave
nop
adc
mov
sbb
mov
inc
sbbb
out
shlb
sbb
sub
mov
pmulhuw
pop
or
orl
rcrb
inc
lret
or
fdiv
sub
sbb
leave
xchg
push
test
sbb
test
sbb
or
mov
pop
fs
sbb
ljmp
aas
push
hlt
movsb
mov
repz
jl
cs
and
xor
mov
andl
arpl
enter
or
je
lock
xchg
iret
jne
loop
push
fidivs
sub
inc
and
movsl
test
dec
cmpsb
leave
inc
fwait
cmpsb
int3
fistl
xor
sub
jmp
mov
jle
cltd
cwtl
repnz
mov
add
cmpsb
sti
mov
aad
cmc
fs
ja
scas
out
pop
xor
sbb
pop
lret
xchg
loopne
imulb
loope
in
pop
mov
incl
fs
inc
xor
add
imul
add
push
mov
popf
dec
sarb
hlt
push
out
cmpsb
jne
mov
or
fdiv
xchg
inc
or
dec
sub
sub
inc
mov
fisubs
pop
pusha
test
pop
dec
shll
pop
xor
push
mov
xor
push
mov
js
rdtsc
sub
inc
in
enter
leave
decl
cmp
shrb
out
pushf
cmp
imul
xor
lods
arpl
test
xor
adc
fnstsw
cmp
jbe
inc
lds
call
pop
push
push
mov
xchg
adc
mov
jnp
lret
scas
jae
mov
dec
cmp
mov
inc
pop
mov
lds
mov
repz
push
scas
sub
pop
pop
add
sbb
ss
and
sub
ret
sti
out
cli
mov
mov
push
push
ret
popa
mov
loopne
int
fisubl
jne
push
mov
es
cmpsb
popa
shlb
pop
or
or
lds
insl
jle
xor
or
jne
dec
mov
imul
daa
or
cli
std
test
jns
dec
lods
or
xor
mov
loope
adc
int3
inc
jg
les
sbb
shlb
push
lods
sub
insl
imull
or
push
test
aas
or
dec
das
jl
enter
adc
es
push
icebp
std
xor
mov
push
jo
ficompl
imul
mov
sbb
nop
fdivl
mov
sbb
and
and
mov
dec
inc
in
sbb
inc
sbb
arpl
sbb
cltd
pop
fsubrs
iret
jecxz
pop
mov
hlt
mov
jle
mov
mov
push
mov
push
rorl
sbb
cld
test
push
ret
loopne
adc
lock
sti
add
mov
inc
push
xchg
call
pop
std
dec
sub
push
jns
cmp
test
dec
dec
mov
out
adc
and
push
pop
dec
stc
cmc
mov
sti
cs
movsl
movsl
test
movsb
mov
icebp
mov
fsubl
push
test
pop
setns
dec
push
test
adc
pop
adc
shll
lahf
mov
std
or
out
cs
push
andb
jno
fwait
fwait
sbb
test
popa
dec
sahf
inc
xor
pusha
int
hlt
jl
es
jae
inc
aad
ret
or
jmp
pop
dec
stc
fmulp
push
popa
inc
jge
cmp
loope
pop
cmp
pop
addb
jns
jnp
mov
in
mov
pop
or
mov
repnz
movsb
xor
pop
fbld
imul
scas
jns
mov
pop
dec
loopne
dec
push
or
or
js
int3
orl
adc
cli
les
imul
pusha
add
test
jns
fs
cmp
sbb
lret
mov
stos
out
mov
push
ret
leave
cmp
mov
sbb
xor
inc
add
cmp
inc
jae
sbb
jmp
dec
das
adc
add
clc
add
mov
fdivrs
das
insb
aad
int3
inc
or
mov
add
dec
jl
sub
push
sbb
movsb
xlat
mov
outsb
jge
pop
aaa
mov
pop
int3
mov
aas
add
add
xor
and
push
fnsave
les
mov
sbb
push
mov
or
lods
fwait
pop
xchg
cs
loop
aas
add
or
int3
xor
lahf
subl
sahf
je
dec
xchg
adc
sub
lret
inc
orl
inc
mov
jo
sbb
mov
lret
lahf
pop
mov
add
or
aam
mov
aaa
les
or
pop
jle
jae
xor
mov
movsl
fstpl
mov
jl
cmp
dec
xchg
das
fimull
mov
xor
mov
hlt
mov
sbb
arpl
pushf
in
aad
scas
imul
in
dec
jo
std
seta
data16
cmp
push
jno
stos
int3
mov
aad
add
inc
lock
movsb
repnz
int
icebp
adc
and
xchg
test
inc
icebp
cmpsl
mov
in
pop
popf
lds
or
mov
rcr
jmp
es
inc
xorl
xchg
mov
mov
fmul
out
push
addr16
cmp
arpl
mov
enter
cltd
jmp
inc
sub
push
fwait
aam
popa
movsb
sbb
cmp
sbb
stos
xchg
mov
pushf
and
dec
cmp
rcrl
mov
jge
xchg
pop
mov
cli
and
movsb
das
cs
arpl
fildll
and
incl
lock
xor
mov
mov
fwait
in
lahf
sub
cmp
xchg
pop
sbb
jmp
adc
cmp
call
pop
imul
sti
popa
pop
xchg
sbb
jl
xchg
cmc
mov
jg
std
and
ficoms
inc
ss
repz
adc
adcb
push
stos
xor
and
cwtl
shr
ja
ret
adc
dec
shll
sbb
hlt
aaa
push
icebp
sbb
xor
cmpl
mov
sub
mov
and
push
jns
mov
push
daa
mov
dec
xor
lods
jo
popa
popa
fld
lea
stc
mov
adc
jp
int
pop
add
inc
out
dec
cwtl
mov
into
int3
adc
mov
insl
sub
mov
out
gs
test
stos
repz
mov
add
out
imul
add
inc
inc
mov
dec
fsub
mov
fstps
mov
lret
cmpb
repnz
xchg
mov
mov
mov
sub
aam
inc
shll
lret
imulb
lret
stc
sub
mov
mov
and
cmp
sbb
lcall
andl
aam
fidivs
mov
or
mov
xchg
scas
int
cmp
lret
fwait
sbb
adc
mov
or
in
jg
scas
pop
inc
out
fcoml
jge
fnsave
in
hlt
ficoml
push
sub
xchg
add
sarl
xchg
ja
call
cmp
pop
aas
mov
fchs
mov
into
or
add
lods
jnp
sahf
pop
je
pop
imul
push
lahf
push
sub
in
sub
in
aas
jbe
mov
aam
cld
ljmp
xor
imul
pushf
mov
jmp
mov
movsl
inc
lcall
int3
sarl
outsb
rol
mov
rorb
jmp
jecxz
pop
mov
add
xor
sub
sbb
js
adcl
fwait
clc
push
scas
inc
int
pop
mov
lods
je
cmp
hlt
mov
pop
mov
adc
pushw
dec
ss
mov
fistpll
scas
cmp
ljmp
sarb
jnp
test
cli
lock
lret
mov
popf
js
push
xor
mov
sub
mov
inc
mov
mov
jne
addr16
sbb
in
bnd
dec
outsl
mov
add
gs
add
sbb
sbb
repz
mov
pushf
ja
mov
pop
arpl
jne
push
xchg
pop
sub
add
jle
stos
stos
inc
mov
xchg
leave
sbb
mov
inc
xchg
xor
out
xchg
adc
mov
inc
clc
jl
mov
push
cmp
jbe
mov
movsl
and
dec
pop
jge
les
adc
mov
fcoms
test
lret
xlat
mov
jbe
imul
and
test
mov
sub
aas
sbb
imul
xor
xchg
decl
fs
push
xor
sub
mov
pop
and
xor
lret
repnz
rcr
fwait
pop
push
clc
add
mov
ret
daa
loope
sub
push
pop
or
clc
pop
dec
xchg
mov
subl
mov
xchg
stc
inc
dec
or
mov
mov
out
sbb
and
jb
repnz
leave
or
dec
jp
lret
push
lods
pop
sbb
jle
or
mov
in
xchg
das
inc
adc
mov
rcr
and
in
jns
xchg
mov
adc
aam
push
adc
or
loope
outsl
push
sbb
push
ret
xchg
cltd
xor
cmpsl
adc
enterw
sub
mov
jo
cli
stos
lods
jo
insl
cmp
sub
repz
add
ret
gs
sub
xchg
push
aas
fwait
pop
ds
add
push
rcrb
sub
pop
int3
popf
bound
adc
xlat
xlat
mov
push
js
xchg
ja
mov
dec
aaa
xchg
jnp
mov
push
xor
arpl
sbb
fs
push
outsl
lahf
dec
cmp
cmp
popa
push
mov
lret
and
mov
inc
xchg
nop
fs
lods
xor
repnz
dec
shll
cmp
mov
or
or
out
pop
push
push
mov
jne
fcomps
ljmp
pusha
mov
arpl
sbb
sub
adc
in
pop
jp
add
out
xchg
adc
test
cmpsb
idivl
aas
int
mov
scas
les
sarb
roll
xchg
sub
dec
pop
jnp
xchg
adc
lds
push
inc
sahf
in
not
push
adc
fldt
jae
mov
cmp
cmp
adcl
jae
pop
enter
test
scas
call
and
sarb
lea
ljmp
fistpl
jmp
mov
inc
imul
jae
sbb
iret
bnd
or
in
movsl
inc
sub
addr16
outsb
test
shlb
cltd
or
into
xor
sbb
jge
dec
jecxz
push
pop
outsb
shrb
inc
push
inc
js
movsb
je
fstp
lods
mov
xchg
jnp
aam
idivl
push
rcrb
arpl
out
jb
or
xchg
icebp
call
sbb
sub
jp
bound
and
fnop
mov
mov
popa
ds
imul
testb
add
lods
jg
sub
test
std
cmpsl
lahf
in
loopne
adc
test
jg
push
xchg
stos
int3
cli
fists
and
mov
jecxz
stos
popf
inc
adc
ss
inc
pop
or
mov
imul
ucomiss
push
lods
lods
inc
fcoml
push
jno
cli
jns
call
jns
data16
aas
add
fwait
xchg
ljmp
sarl
test
daa
jl
mov
push
outsb
cmp
lahf
pop
in
jne
xchg
mov
inc
out
xchg
mov
jmp
in
adc
call
test
xor
xchg
sbb
push
in
fiadds
xorl
idivl
pop
call
jbe
dec
test
sti
or
push
jno
shrl
cmc
jg
cli
lcall
adc
sti
pushf
lock
outsl
or
mov
push
test
ret
decb
pushf
push
or
xchg
rclb
paddsw
mov
mov
push
cmp
mul
jg
jae
pop
lods
jmp
mov
leave
addr16
cmp
mov
outsb
inc
add
xchg
sti
clc
clc
inc
dec
pop
ret
shll
hlt
or
xchg
call
test
add
mov
out
clc
and
test
xor
push
and
sub
repz
arpl
cmc
fmuls
xor
mov
add
xor
xor
push
nop
rclb
lcall
loope
test
jmp
pop
xor
dec
aaa
mov
pop
outsb
mov
ret
pushf
sub
ds
cs
xchg
xchg
test
aam
adc
popa
ror
leave
lds
mov
push
jp
incb
into
push
sbb
xchg
mov
out
inc
adc
inc
je
jae
imul
xor
dec
push
push
pop
loopne
inc
xchg
repnz
adc
dec
sahf
test
sarl
and
mov
inc
daa
sti
jg
sbb
iret
popf
and
mov
xlat
test
push
fdivl
add
loopne
cmp
aam
inc
push
mov
fs
scas
scas
xchg
mov
jo
out
icebp
mov
dec
shll
adc
fs
ss
mov
dec
std
sbb
pushf
lods
ss
sar
lock
fwait
loop
jne
outsl
jno
adc
aad
mov
punpckhwd
je
sti
mov
xor
xchg
movsb
arpl
aas
xchg
mov
mov
mov
iret
movsl
sub
add
inc
shll
cmp
ret
cmp
xor
in
cmpsb
loop
inc
dec
fidivl
and
out
and
int3
mov
out
ret
aas
inc
and
xchg
into
pop
mov
imul
push
mov
js
fsubp
cli
adc
cmp
push
dec
jecxz
dec
and
push
cmp
pop
ficomps
cwtl
vmwrite
subb
jo
xlat
adc
push
cs
icebp
scas
sub
dec
mov
mov
push
in
ret
fisttpl
daa
mov
or
sub
loop
out
xchg
imul
lods
insl
js
outsb
or
adc
and
xor
xchg
mulb
or
xor
lret
xor
jmp
scas
jle
sbb
jb
pushf
in
push
pop
fsubp
fucom
jbe
and
dec
push
adc
js
outsl
jge
repz
test
rorb
call
in
and
les
repz
sbb
std
mov
mov
push
mov
xor
pop
jo
out
lock
int
lret
sbb
cmp
shrb
outsb
cmp
inc
and
fstl
test
pop
add
sbb
test
mov
jne
lods
push
pushf
and
jns
ja
adc
loope
jl
push
push
cmpsl
cmc
push
int
push
sbb
aad
adc
cli
in
sti
adc
mov
int3
dec
mov
mov
stos
ja
push
pop
mov
or
xchg
cmpsl
pop
aaa
loop
sbb
sbb
int3
sbb
or
push
sub
xor
mov
xchg
mov
sbb
adc
les
out
call
dec
sub
mov
xchg
adc
xchg
jle
popa
outsl
out
ret
repz
mov
sbb
mov
mov
sub
push
and
sbb
xchg
sub
mov
and
not
test
ret
lret
push
movsl
xchg
stos
movsb
push
ret
inc
add
pushf
adc
gs
sub
mov
outsl
clc
lock
push
xchg
in
dec
add
cmc
mov
mov
cltd
sbb
fcmovne
dec
mov
and
xor
ja
xchg
leave
leave
out
daa
leave
sbb
test
cmpsb
dec
sub
mov
dec
lock
and
and
inc
push
jno
inc
cmc
dec
pushl
pusha
jge
outsb
stc
adc
inc
in
sbb
shl
lret
push
mov
mov
shrb
lea
addr16
enter
jae
movsb
out
sbb
inc
push
xor
outsb
xor
call
ret
insb
sbbl
ret
fs
sarb
add
adc
mov
dec
pop
imul
mov
in
icebp
lods
sbb
mov
idivb
xor
sahf
mov
add
cli
inc
xchg
dec
mov
mov
mov
dec
int3
in
push
inc
cld
inc
cltd
movl
and
gs
lret
into
test
sbbl
add
adc
jb
cmp
pusha
fnstenv
mov
pop
dec
fisubrl
xor
sub
cltd
and
test
push
lahf
jb
lock
jp
mov
int3
test
mov
dec
fsubl
les
repnz
inc
inc
inc
jge,pt
or
repnz
fdivl
push
or
aam
arpl
sbb
aaa
rcrl
sahf
push
sub
fisttpl
gs
pusha
inc
addr16
leave
inc
fs
jecxz
mov
sbb
xor
aad
decl
cmc
mov
mov
repnz
neg
out
inc
mov
jle
push
add
mov
aam
arpl
jg
push
cmp
jb
rcll
rclb
nop
jae
shrl
stos
stos
mov
sbb
in
daa
stos
in
mov
fwait
push
fsubs
jge
divl
into
hlt
dec
mov
dec
mov
enter
dec
repz
dec
jecxz
pop
ljmp
out
test
and
out
insb
inc
pop
sti
jp
push
aad
shlb
andb
movb
mov
ds
sbb
in
pop
aas
int
out
nop
cmp
xchg
mov
lds
repz
pop
xchg
rcll
adc
or
sub
ss
pop
pop
lcall
xlat
mov
push
mov
xor
xchg
icebp
mov
add
or
push
loop
int
pop
push
push
mov
testl
shlb
into
xchg
xchg
cmc
sbb
dec
add
icebp
jbe
cs
out
jb
leave
insl
ja
inc
into
sti
test
pop
cmpxchg
rolb
mov
lret
cmp
xchg
cli
jp,pn
bound
jns
sub
movsb
test
into
ja
inc
scas
and
scas
js
sbb
pop
pop
mov
xchg
sbb
pop
aaa
cmpsb
mov
dec
stos
je
mov
lods
xor
add
dec
vucomisd
mov
cltd
incb
jge
iret
les
cmpsl
xchg
push
sahf
idivb
test
or
inc
add
mov
sub
push
inc
mov
cmpsb
mov
push
and
loop,pn
jne
jp
ja
add
and
adc
push
adc
adc
out
pop
lahf
insb
cmp
in
fists
xchg
sbb
jo
pop
stc
add
or
cmp
std
decl
test
iret
shlb
sarl
mov
ljmp
shr
adc
call
popa
arpl
and
and
imul
pop
leave
xchg
lods
mov
and
cmpl
rorb
dec
dec
cmpsb
out
mov
fwait
jb
lahf
cmp
mov
adc
arpl
jne
xor
lahf
cwtl
dec
or
mov
mov
movb
sub
ljmp
xchg
lcall
fnstcw
gs
int3
mov
mov
mov
popf
jns
ret
cmp
fcmovnu
sbb
push
jle
and
lea
mov
imul
cmpsl
add
loopne
pop
test
roll
push
push
mov
cmpb
lods
loope
add
mov
movb
out
or
adc
mov
aaa
orl
aad
cmp
and
mov
nop
xchg
and
int
lret
repnz
and
xor
nop
jg
jbe
mov
ret
mov
mov
mov
adc
dec
jp
aam
mov
sahf
add
push
add
mov
outsb
adc
movsl
jns
imul
xlat
aam
lods
inc
cmp
cmp
xchg
js
push
daa
jae
lcall
lret
repnz
fsubl
inc
outsl
in
cmp
in
and
jns
nop
mov
jl
in
shlb
orl
int3
jo
fsts
and
push
scas
or
nop
xor
jg
sbb
push
sub
gs
mov
orl
cld
dec
push
jecxz
jge
lods
add
adc
cli
popa
int3
pop
xchg
clc
cli
popa
mov
pusha
add
test
xchg
fistpl
iret
xor
push
mov
jnp
repz
xor
mov
mov
adc
pop
fstps
test
mov
jl
js
and
leave
adc
inc
in
add
jl
inc
icebp
jecxz
mov
mov
stos
ret
mov
jns
gs
cmp
mov
push
or
xor
jecxz
add
sbb
xor
sub
dec
mov
and
mov
add
cmp
push
lcall
std
into
icebp
iret
pop
xor
xor
aad
cmpsl
fwait
sbb
push
and
outsl
fildll
les
xor
pop
jne
out
cmpsb
sub
add
out
fmull
mov
dec
sub
sbb
jecxz
lcall
xor
idiv
push
mov
js
lahf
arpl
int
int
pop
or
dec
rolb
fwait
mov
sub
aaa
clc
push
ffree
vpaddd
ret
fsubr
and
and
mov
jg
repz
and
jge
xchg
popa
outsb
roll
jp
cmp
cmpsl
int3
stos
pusha
loop
rcl
out
mov
sub
addr16
leave
mov
jmp
add
cmp
cmp
push
ret
jne
and
sbb
in
into
xor
insl
popf
out
mov
imul
jg
cmp
pop
adc
mov
cmp
sub
adc
cli
pop
push
aam
cs
dec
cli
cmpsb
popl
fwait
dec
dec
push
push
cmp
dec
xlat
push
xchg
pop
sub
add
jo
lahf
mov
cld
xchg
xor
fcoml
addr16
cmp
sub
inc
ret
jo
adc
imul
jp
pop
or
ss
rcr
fisubl
add
and
into
repz
adc
out
leave
les
and
mov
push
push
pop
jo
jne
int3
mov
scas
jbe
imul
test
lcall
cmpsb
jmp
sub
popa
add
cmp
lods
inc
jae
dec
fistpl
lods
jno
pop
sub
inc
pop
test
jnp
jnp
xor
jne
xchg
aaa
stc
addr16
mov
push
out
lds
popf
lret
mov
inc
pop
lahf
iret
out
jl
repnz
jl
dec
push
enter
outsb
jae
and
out
cmp
inc
insb
inc
cld
xchg
add
stos
fmull
dec
push
mov
cmp
cld
jl
mov
pop
loop
fildl
jp
dec
daa
mov
stc
jno
cmp
in
sub
hlt
jg
push
cmp
rorb
imul
outsb
mov
popl
mov
out
sbb
push
gs
and
loope
cmpsb
pop
add
loope
loopne
leave
in
jno
mov
in
adc
xchg
cmp
mov
mov
xchg
mov
es
les
pop
inc
f2xm1
push
mov
mov
sub
in
aas
mov
pop
outsw
cli
jge
outsl
js
jle
lock
cwtl
cwtl
out
inc
in
iret
clc
xchg
inc
pop
bound
add
andb
outsl
cld
int3
jbe
loope
loopne
es
mov
dec
divb
gs
and
out
sub
ret
push
je
insb
lods
ss
xchg
inc
add
icebp
mov
mov
test
inc
adc
or
push
in
cmpsl
int3
andb
xor
pop
pop
push
mov
mov
aas
add
pusha
xchg
sbb
loope
icebp
cltd
sub
je
add
inc
sub
ss
xchg
push
fistpll
adc
or
pushf
lahf
adc
sub
fisubs
fadds
cmp
pop
mov
std
mov
mov
fs
inc
movl
inc
adc
jl
sbb
movsl
aas
sbbl
lock
inc
inc
jp
dec
decb
mov
fdecstp
sub
push
sbb
or
sub
mov
lea
ret
aad
outsl
xchg
mov
imul
add
int3
subl
outsl
xor
cld
popa
mov
adc
xlat
icebp
xor
sbb
jo
mov
mov
add
cmp
mov
push
xchg
lea
loopne
repnz
sbb
imul
test
enter
das
sbb
cmp
sub
inc
insb
mov
ret
sti
inc
inc
add
sub
cmp
xchg
push
push
stos
inc
sub
stos
les
push
inc
leave
notl
or
or
movb
mov
in
lods
inc
mov
fnsave
fnstsw
cmpsl
jl
subb
jl
xor
xor
enter
test
and
nop
mov
nop
fbstp
into
stc
adc
lock
push
cmpsb
mov
stc
pop
add
lods
mov
sub
or
das
fdivrs
dec
sbb
out
push
and
nop
sti
sbb
mov
or
jbe
and
sub
and
std
adc
ret
cld
inc
fistpl
mov
adc
mov
test
pusha
jo
dec
fcoml
xor
test
je
ret
xor
sub
xor
adc
push
test
mov
mov
mov
es
and
insl
in
andl
cwtl
pusha
cmp
jne
add
xchg
stc
fsubrl
jo
xor
aad
lods
cmp
out
dec
out
push
in
rcrb
mov
cltd
push
imul
jb
xchg
mov
iret
lock
dec
mov
shll
leave
mov
fsubs
repz
mov
icebp
ljmp
rorl
mov
cmpsb
vunpckhps
dec
les
repz
fcoms
jno
fisttpl
out
andb
mov
mov
pop
stos
int3
dec
addr16
mov
fildll
ljmp
data16
ret
data16
xchg
xor
dec
push
fistl
dec
dec
incb
or
pushf
mov
xor
push
dec
cli
mov
adc
aaa
jae
outsb
inc
aas
ret
adc
fistpl
and
jp
daa
popa
sarl
push
aas
dec
out
mov
test
cmpsb
addr16
push
dec
mov
mov
xorb
pop
xchg
test
pop
test
gs
aas
aam
mov
cmp
push
mov
push
mov
xchg
cwtl
or
lahf
ss
mov
or
pop
lcall
jmp
movsl
lods
pop
xlat
mov
jecxz
or
push
add
lods
pop
into
sbbl
aam
jp
call
hlt
cld
or
sarl
cmp
in
or
insl
shrb
dec
imul
xchg
mov
push
in
pop
pop
loop
jmp
jb
mov
xchg
lock
movsb
pop
jmp
mov
and
sub
ret
movsb
movsb
sbb
push
bound
mov
mov
fisubs
sahf
cmp
add
subb
les
adc
mov
and
push
fstpl
stc
cmp
mov
pop
add
jecxz
adc
or
add
mov
popf
enter
push
adcl
pop
push
and
inc
mov
rcrl
call
cs
mov
mov
push
lds
neg
adc
push
js
push
iret
pop
cmp
data16
je
push
out
jnp
popf
xorb
outsl
insb
xchg
popf
cmpsb
fimuls
cs
inc
pop
lods
stos
add
xchg
mov
mov
pop
push
push
pop
xorl
adc
dec
mov
inc
sbbl
push
xor
push
push
sbb
das
loope
sarl
sub
add
mov
inc
xor
jg
cmp
xchg
movsl
cld
and
adc
outsl
push
mov
sub
dec
std
lods
in
push
mov
pop
mov
mov
cmp
and
test
sbb
call
notb
sbb
dec
out
mov
xor
adc
pop
cltd
xor
outsl
test
daa
pop
fmulp
pop
cwtl
mov
jle
xlat
es
and
not
pop
inc
insb
mov
jp
mov
jg
imul
adc
lock
leave
pop
inc
ja
sbb
mov
mov
bound
loop
test
xchg
cmpl
je
mov
adc
push
and
aad
clc
mov
popa
xor
aad
rorb
push
nop
addb
std
div
orb
aam
addb
hlt
push
push
xchg
test
int3
mov
and
shlb
mov
loopne
mov
mov
addb
cwtl
cmp
mov
popa
es
jno
pop
sbb
out
xchg
mov
add
mov
clc
nop
test
divb
push
in
and
mov
mov
add
cli
out
cltd
add
inc
or
sbb
popa
sbb
scas
add
push
dec
std
insl
stc
adc
xor
cltd
add
inc
pushf
add
into
push
out
addb
pop
jbe
dec
test
orl
hlt
mov
mov
dec
out
inc
aas
sub
je
sbb
adc
xchg
pusha
and
xor
and
lret
adc
sub
insl
fwait
insb
and
pushf
stos
scas
out
mov
mov
int3
mov
enter
inc
pop
mov
adc
fwait
sub
and
pop
push
repz
xchg
mov
lahf
shlb
outsl
pop
lret
rcr
pop
xor
and
add
movsl
pop
ss
adc
movsl
cmpsl
and
push
push
sbb
and
inc
insb
rorb
movsl
pop
pop
inc
outsb
cmpsl
push
test
xchg
add
pop
fsubrl
sbb
int
mov
out
dec
xchg
popf
pop
push
bound
jge
notl
inc
or
pop
and
fisubs
mov
rorl
ss
scas
adc
adc
pop
cmp
icebp
addr16
inc
cmp
bound
out
cmp
or
scas
xchg
in
sub
repz
mov
imul
mov
cmp
negl
mov
push
imul
int3
adc
icebp
sbb
loop
sbb
inc
and
sti
adc
pop
xor
xor
addr16
fcmove
lock
or
xor
into
xchg
sub
pop
aaa
dec
add
mov
xor
pop
jbe
push
mov
push
xchg
in
jl
push
xor
sbbb
mov
outsl
cmp
mov
mov
or
push
and
fdivs
cmpsb
cmp
push
mov
popa
imul
cmpsb
and
addr16
icebp
std
call
lret
movsb
jecxz
sbb
mov
push
lds
jp
rcl
outsl
je
je
and
faddl
push
jp
xchg
les
cwtl
xor
xorl
jecxz
cmc
mov
dec
jecxz
addb
fcompl
jae
sbb
mov
push
shlb
hlt
cmp
mov
call
jne
jle
push
jmp
icebp
call
js
sub
inc
dec
fbld
fistl
int3
pop
push
lock
insl
xchg
cmp
testl
dec
adc
js
xlat
pusha
dec
and
testl
mov
cmc
rolb
pop
sbb
mov
imul
push
mov
jg
or
lea
cmpb
inc
xchg
inc
push
sarl
les
mov
push
jo
and
pop
and
dec
jae
cmpsb
mov
mov
cli
mov
sahf
adc
cmp
inc
scas
iret
push
out
orb
mov
mov
stos
adc
jp
inc
adc
js
roll
xchg
sub
movsl
enter
sahf
mov
jg
or
shr
scas
dec
rcll
mov
mov
out
adc
rol
and
sub
dec
mov
or
es
negl
push
jle
je
in
adc
cmp
push
and
outsl
mov
xor
jge
adc
sbbl
mov
inc
xor
add
adc
ja
push
int3
inc
iret
inc
jg
das
ficomps
push
inc
adc
fldl
mov
push
dec
fs
in
pop
or
xor
shll
dec
add
call
out
jecxz
fnstcw
mov
test
jl
pusha
sbb
in
adc
test
jg
out
mov
rcr
pop
jnp
push
sbb
popf
mov
inc
mov
movsb
mov
pop
mov
sbb
jl
ljmp
aad
pop
inc
movsb
xchg
jno
adc
jge
rolb
xchg
ret
dec
cmp
and
add
shlb
insl
dec
xor
pop
fdivrl
bound
xchg
pop
cmpl
iret
pusha
call
fiadds
into
xchg
movsb
xchg
imul
cli
dec
test
sbb
aaa
or
or
mov
sub
movsb
push
and
insl
pusha
lds
mov
jne
xchg
test
jmp
inc
xor
addl
arpl
sbb
fs
fwait
jmp
mov
outsl
mov
xchg
cmpsl
pusha
loop
test
bound
pop
and
mov
xlat
std
popaw
out
xor
xor
flds
mov
cli
add
push
jmp
das
mov
xlat
inc
movsb
call
pop
cmc
sarb
das
aam
mov
jb
lret
sti
add
fdivp
popa
aam
clc
inc
subl
int
je
loop
and
adc
add
jo
or
movsb
addr16
call
stos
fwait
xchg
imul
or
sub
or
add
pushf
mov
push
movsb
push
addr16
outsl
sti
jb
mov
mov
jmp
lock
mov
mov
sub
cwtl
rol
lds
popf
mov
pop
aas
mov
push
and
pop
mov
lods
jo
sahf
pop
xchg
cmp
xor
faddp
pop
mov
mov
mov
sti
addr16
sub
add
stos
into
jbe
push
icebp
mov
sub
mov
hlt
xchg
lcall
inc
rclb
sub
addr16
inc
push
sbbl
xor
jp
push
pop
xchg
jne
mov
cmpsb
cmp
ror
rcll
pop
cmp
shlb
jge
mov
cmp
add
cmc
mov
xchg
jmp
cltd
mov
push
enter
cmp
orb
add
pop
jo
adc
adc
repnz
mov
or
push
fadd
mov
mov
jge
pushf
xchg
mov
mov
jbe
outsl
outsb
sub
pop
out
push
movsb
inc
lods
gs
in
mov
fisubrs
jno
insb
xor
xchg
loop
sub
ljmp
jbe
sti
inc
adc
sahf
adcb
mov
jbe
xor
and
dec
aad
lods
cwtl
in
xchg
sbb
push
sub
jae
add
daa
jbe
sub
es
gs
cs
or
add
and
pop
aam
mov
adc
jp
imul
mov
or
add
mov
jno
loope
sti
stos
sbb
imul
jmp
mov
inc
sub
inc
mov
dec
push
sub
nop
inc
icebp
lret
popa
shlb
inc
pop
sti
lds
inc
jb
push
mov
cmp
addb
adc
sub
mov
imul
shll
xor
add
das
call
cmp
jp
inc
stos
movsl
popa
pop
and
test
dec
shll
pop
adc
ds
jecxz
mov
xchg
jae,pn
in
xor
enter
stos
iret
add
jno
sub
adc
je
jne
cli
xchg
popf
cmc
add
mov
ds
pop
push
mov
data16
xor
call
or
jno
repz
push
popa
fistps
sti
fstpt
icebp
arpl
push
imul
dec
inc
test
add
fcoml
jle
add
inc
xlat
movsl
inc
pop
lds
jecxz
dec
mov
push
xchg
cmp
out
outsb
pop
sub
sub
or
daa
xchg
incl
cli
xor
mov
ljmp
das
mov
push
dec
jae
mov
mov
lods
add
scas
cmp
daa
in
fwait
add
ror
inc
sbbb
andb
cmp
jl
push
fwait
jecxz
pop
xchg
mov
mov
xchg
rcr
mov
dec
sbb
dec
ss
ret
mov
dec
dec
mov
addr16
pop
push
sub
outsl
push
push
inc
ja
inc
movsb
push
sub
dec
dec
xor
addr16
or
mov
movsb
inc
in
cmc
aad
arpl
ret
nop
xchg
in
in
iret
jmp
jbe
mov
pop
xor
cs
push
enter
xchg
or
jb
lret
sbb
or
sub
lret
movsl
shlb
mov
adc
or
data16
mov
lcall
jne
mov
xor
mov
and
lods
mov
addr16
mov
or
push
adc
out
popf
iret
roll
pop
shr
dec
adc
lret
mov
rcrl
incb
loopne
pop
clc
clc
test
ds
mov
sbb
xrstor
mov
sbb
cmp
mov
mov
add
pop
rcr
sub
xor
nop
ss
fldl
adc
jne
pop
repz
sbb
je
stc
cmp
or
in
mov
jl
jns
sbb
inc
fwait
mov
ljmp
xchg
rcrl
stc
addb
pop
jnp
pop
inc
jl
in
in
ror
ret
push
js
jae
and
test
mov
push
mov
mov
jle
in
jmp
add
ja
lahf
iret
fnstenv
repz
push
mov
mov
inc
cmp
mov
push
ss
rcll
lret
xor
adc
or
lret
fmul
xor
ret
lea
xor
cltd
mov
mov
or
push
push
pusha
fistps
pop
mov
dec
or
mov
stos
dec
xor
push
fdivrs
mov
lock
pop
out
mov
sub
push
lds
xor
inc
xchg
pop
fxch
sti
fcompl
dec
ss
pop
cmp
mov
push
xlat
loop
mov
int3
sahf
rolb
loopne
fisubs
fisttps
cld
mov
loop
inc
pop
cmp
lods
sbb
push
pop
es
insl
sbb
cmc
sub
cwtl
pop
add
je
imul
cwtl
jl
inc
inc
push
and
push
adc
ret
icebp
adc
lds
pop
lods
loope
adc
push
sti
jnp
cwtl
mov
sti
mov
roll
repz
fcoml
xchg
ljmp
mov
push
pop
bound
ret
hlt
adc
mov
jae
in
int
bound
dec
mov
lods
je
ja
and
cmp
call
add
dec
insl
add
fmull
dec
xchg
ljmp
push
in
stos
add
inc
sub
test
pop
mov
xchg
outsl
push
mov
sub
cmp
insl
sbb
in
cltd
mov
fadds
mov
add
mov
dec
loopne
aaa
inc
mov
out
jl
jg,pn
push
add
cmp
xchg
push
loop
sbb
dec
fiadds
cmp
movsb
ljmp
xchg
movb
push
shl
sti
sbb
mov
sti
repnz
jl
mov
add
incb
mov
dec
icebp
or
aam
xor
jae
movsb
adc
xchg
inc
dec
arpl
arpl
lods
pop
xorl
and
call
mov
xor
inc
fwait
lods
icebp
push
mov
ljmp
iret
sub
inc
jo
mov
icebp
repz
cmc
push
dec
insb
cmc
faddl
cltd
not
jecxz
add
adc
sub
gs
mov
popa
shlb
daa
and
add
adc
xor
nop
clc
or
test
jg
movl
rclb
pop
in
lds
mov
lret
sub
and
dec
imul
inc
insb
sbb
jne
fistl
push
and
cmp
in
hlt
andnps
lea
xchg
sbb
add
or
subl
loop
jle
aaa
negb
push
cmc
mov
sub
inc
mov
insl
imul
lcall
nop
jmp
scas
jle
mov
jp
and
xor
fldt
sub
jle
mov
mov
scas
data16
fiadds
pusha
cli
ficoms
pusha
and
dec
std
das
xchg
in
in
jle
pop
mov
xor
sbb
in
adc
sarb
inc
mov
jnp
mov
dec
sub
jp
jg
cmp
dec
out
std
cmc
adc
add
add
lret
imul
or
jl
push
into
ss
fst
les
inc
test
lret
int3
jp
pop
into
in
jb
stos
xchg
jno
add
clc
push
sbb
xor
cwtl
push
ffree
sbb
nop
loop
aaa
idivb
lods
inc
out
sbb
dec
sti
fdivs
addb
icebp
mov
and
test
fsubs
out
ret
inc
inc
mov
adc
push
and
and
fistpl
aad
inc
out
adc
cmpsb
jmp
scas
add
es
into
popf
cmc
mov
outsb
into
cmp
repz
xor
in
xchg
xor
pop
jecxz
icebp
mov
add
xchg
jp
test
rol
jg
jne
popa
push
mov
std
cli
inc
cmp
mov
shlb
sub
das
inc
fs
inc
inc
lods
loop
add
call
and
inc
push
add
xor
pop
jge
insb
dec
xchg
and
aaa
cmp
mov
push
scas
fisttpll
shr
push
arpl
pop
add
xor
popa
rorb
out
loop
sbb
mov
push
lret
mov
test
jno
jo
dec
inc
or
inc
mov
leave
popf
pushl
fwait
mov
sti
sbb
push
jmp
and
std
dec
push
inc
jge
jae
xor
mov
xor
popa
xchg
sbb
test
cmpsb
mov
insb
cmc
push
xor
ja
xchg
les
arpl
insl
inc
popa
xchg
cmp
sbbl
cld
cmc
nop
xchg
cmp
mov
imul
lret
pop
outsb
cmp
ret
xor
mov
mov
mov
mov
repnz
cmp
push
push
gs
insl
dec
divl
or
in
push
mov
hlt
lcall
adc
das
daa
cs
push
xchg
jb
sub
sub
pop
insl
or
adc
or
mov
cmp
ficompl
dec
imul
xorl
jbe
cmp
sbb
xchg
lret
pushf
popa
in
sub
adcb
or
mov
add
test
lock
push
push
aaa
aaa
out
iret
xchg
imul
push
or
or
inc
add
dec
in
cmp
icebp
mov
pop
outsl
sub
andb
nop
call
bound
pop
daa
mov
popl
imul
dec
mov
es
out
sbb
push
shl
jle
fcomi
out
mov
fdivrl
pop
js
and
lret
out
adc
jo
cmpsl
cli
ja
aam
addr16
fsubrl
jg
inc
nop
js
fidivrl
jno
mov
dec
fs
push
scas
repnz
aad
rolb
pushf
mov
jmp
mov
xor
inc
mov
inc
and
fucom
jmp
jo
jle
inc
fsubp
sar
jnp
popa
pop
int3
add
out
insl
std
inc
push
into
jbe
stos
test
lock
push
lds
sub
jecxz
sub
add
sub
pop
outsb
push
mov
sarl
aas
test
mov
mov
lea
xor
in
aas
pop
ret
sbb
out
je
push
push
loopne
imul
or
push
div
adc
push
add
roll
adc
movsb
lret
sbb
pop
leave
je
xchg
call
jbe
xor
or
pop
lret
dec
into
sbb
daa
xchg
mov
lret
push
jg
pop
in
xor
add
jbe
pop
stos
jg
shll
push
cmp
pop
inc
cs
ds
mov
loope
std
testb
mov
fcomps
cmp
mov
and
ds
mov
cs
aaa
jp
mov
xchg
repz
cmp
add
jns
movsl
cmp
shl
ljmp
or
xchg
out
lea
pop
mov
sub
push
mov
dec
mov
jbe
imul
les
adc
fcmovb
inc
incb
pop
call
sti
cmp
dec
pop
mov
das
mov
sub
lds
mov
adc
jl
xchg
jns
lahf
cltd
cs
jmp
and
jmp
fsubl
cmp
and
add
iret
xor
mov
or
cmc
xor
pop
jmp
cli
adc
fucomip
cmp
mov
enter
data16
push
jle
popf
test
mov
jg
cli
jmp
xlat
out
push
insl
adc
mov
mov
jle
addr16
insb
pop
shrl
pop
or
jae
fcomps
fxch
icebp
mov
and
aad
fcoml
fstl
jb
xlat
mov
xor
dec
fs
jbe
inc
dec
and
testb
add
sub
mov
out
fwait
test
xor
fisubs
dec
pop
cli
jno
xchg
mov
aaa
addb
loop
cli
clc
jge
rcr
nop
in
jnp
mull
lret
mov
mov
jl
pop
je
xor
mov
and
test
in
cwtl
js
cmp
jo
notl
adc
push
out
insl
cmp
push
ds
dec
sbb
cli
stos
or
sub
add
js
mov
test
lahf
lahf
popf
jno
push
mov
imul
jb
add
adc
cmp
inc
cmp
mov
push
adc
aaa
push
jg
insb
cmp
xchg
jmp
or
or
cmpsb
and
xor
cmp
xor
jmp
or
pop
ret
mov
pop
mov
xchg
or
fmuls
xchg
lods
std
sbb
enter
push
add
cwtl
aad
jns
cmp
pop
leave
mov
cmc
movsb
xor
or
mov
in
push
test
fcompl
fwait
cltd
and
es
and
mov
jnp
push
xchg
push
adc
xchg
jecxz
in
push
mov
loopne
sub
call
addr16
xchg
andb
pop
add
decl
inc
cltd
push
sub
stos
mov
fisttps
cmpsl
repz
lcall
shr
pop
repnz
cmp
sub
lea
adc
scas
flds
mov
inc
cmp
push
cmp
pop
mov
por
inc
adc
lcall
lods
xchg
cmp
clc
lods
xor
xor
push
dec
in
sbb
push
or
lret
in
rcll
cmp
mov
pop
cmp
push
outsb
adc
ret
push
pop
mov
mov
test
jmp
aad
ret
jno
es
or
inc
stc
xchg
lds
in
ja
mov
sub
mov
lret
dec
punpckldq
adc
sbb
ss
or
xor
lods
mov
push
scas
jae
adc
pop
or
je
ljmp
pop
cmp
push
in
call
lahf
push
hlt
test
pop
jae
cmp
in
adc
cmpsl
sub
pop
add
mov
mov
xchg
xor
loope,pn
mov
and
jg
xchg
leave
cmpsl
dec
mov
lock
lock
jns
andb
mov
sysret
cmp
cltd
mov
cmp
and
cmp
xor
jne
pop
mov
dec
and
and
shrl
inc
dec
mov
cli
xchg
or
mov
cltd
loop
les
inc
inc
mov
inc
fcoml
mov
int3
lds
es
js
push
jg
and
xchg
insb
test
xchg
jb
pop
ljmp
fiadds
xchg
lret
aas
sub
inc
cmpsb
jmp
imul
fwait
add
fucomip
mov
or
lods
push
mov
adcb
dec
mulps
pusha
mov
int3
aas
mov
mov
int3
addb
add
sub
xchg
call
fcoms
ds
push
popf
sbb
hlt
les
pushf
add
test
jne
add
push
xchg
jecxz
inc
daa
jbe
les
ja
push
mov
mov
xchg
icebp
jno
scas
test
call
sti
aam
jle
sahf
push
adc
popf
jmp
sub
inc
negl
daa
cmpsl
data16
sub
cltd
sar
aas
mov
xor
sarl
cmpsl
mov
out
fdivs
mov
sahf
and
rorl
pushf
xor
adc
dec
je
aas
jg
cwtl
add
rol
addb
sar
ds
push
loope
insb
xchg
xchg
mov
lods
or
fcoms
xor
test
xor
out
jb
xor
repz
mov
xor
sbb
inc
jg
lods
pop
xchg
cmp
jae
lods
cltd
mov
push
sbb
inc
test
cmpsb
sub
lods
into
push
aad
ret
imul
mov
icebp
in
loope
in
jne
jle
sbb
cltd
int3
xchg
mov
dec
jmp
or
mov
lods
jae
repz
arpl
mov
mov
das
js
shrl
loope
mov
mov
loopne
into
scas
push
ja
cwtl
dec
movsl
mov
lcall
xchg
mov
xchg
adc
pop
call
movsb
add
xchg
cltd
jp
cli
shlb
mov
popa
xchg
aaa
dec
sub
outsb
pop
adc
inc
js
mov
xor
movsl
jne
push
in
mov
ds
sahf
mov
adc
rcr
lahf
inc
sti
in
gs
clc
into
mov
jns
test
addl
je
mov
adc
aad
inc
or
lods
mov
sub
movl
mov
push
adc
sub
fstpt
sar
lea
pop
das
dec
insb
rorl
adc
addr16
pop
notl
xchg
cmp
pusha
shrl
orb
int
cmp
stos
and
stc
mov
sbb
sbb
rcrl
pop
mov
pop
cmp
mov
inc
aam
pop
pop
lret
jecxz
inc
pop
imul
push
test
imul
mov
btr
sti
sahf
add
mov
adc
cmp
dec
xor
push
ds
lahf
mov
sub
inc
dec
notb
pop
test
pop
push
mov
imul
test
jbe
cs
cltd
xchg
pop
adc
nop
addr16
sub
loopne
jb
into
adc
leave
sub
scas
hlt
inc
xchg
sub
mov
dec
mov
cmpsb
and
stos
push
xor
and
cmp
les
lret
call
sub
lcall
jne
les
sti
test
push
arpl
mov
jns
frstor
pop
mov
adc
ret
pop
icebp
push
imul
nop
push
fsubs
mov
sub
xlat
jns
xchg
mov
js
jns
and
xchg
in
fisubl
cmc
inc
xor
fs
mov
lret
movsb
shll
cmc
fiadds
filds
mov
inc
push
pop
dec
sub
fsubl
roll
mov
cmpl
iret
push
pop
push
or
push
loop
aaa
xlat
xchg
ss
scas
push
mov
gs
inc
adc
in
movsl
xor
or
sbb
jmp
fsubl
inc
je
sahf
cmp
inc
popf
xchg
cwtl
mov
jp
cwtd
scas
jno
enter
fistl
sbb
jg
les
push
nop
jg
scas
cmp
ret
scas
fistpl
mov
lods
loop
mov
push
mov
cmpsl
cmpb
fistl
test
jmp
inc
lahf
lcall
je
mov
fsubr
aaa
nop
pop
cmp
pop
add
sbbb
push
mov
mov
rep
ljmp
cmp
cmp
cmpsl
and
call
loopne
std
add
jecxz
ja
cs
fmull
imulb
fldenv
aad
fstps
jge
sahf
inc
pop
mov
nop
xchg
in
inc
sub
pop
gs
cwtl
adc
aad
dec
sbb
push
sub
cmp
jge
in
lock
push
insl
lods
inc
bound
sbb
adc
cmp
bnd
loopne
popf
and
out
ss
pusha
lods
popa
adc
nop
and
hlt
push
or
dec
std
jne
loop
push
movsb
and
frstor
jae
cmpsb
call
adcl
add
stos
stc
push
imul
int3
pop
fmulp
jg
pop
push
jae
test
or
xchg
xor
and
icebp
or
fmul
or
inc
mov
enter
push
divb
jno
rol
mov
mov
pusha
mov
pop
pop
mov
sbb
and
jb
mov
xchg
inc
push
xchg
pusha
test
cmpsb
push
jp
mov
mov
cmp
cmpsb
push
or
mov
insb
aad
mov
push
or
and
mov
sub
leave
shlb
mov
push
jns
pop
xchg
outsl
xorl
pop
mov
xchg
sti
jno
les
aad
inc
shrb
mov
mov
aam
shll
sub
aas
and
adc
popa
das
clc
mov
inc
outsb
mov
aad
ss
push
lock
call
push
adc
out
repz
mov
enter
push
fstps
push
jg
mov
lods
dec
aaa
mov
or
xchg
xchg
stc
leave
add
dec
sbb
les
lahf
fmull
test
fdivrs
pop
leave
out
sti
mov
mov
cmp
jnp
fnstsw
xlat
pop
add
fsub
jp
mov
sbb
mov
jle
mov
sti
mov
push
mov
es
js
sub
mov
rorl
lret
mov
mov
mov
jns
pop
or
xor
mov
pushf
xchg
cmp
sub
mov
and
xchg
push
ret
jb
in
add
pusha
pop
fistpll
dec
sub
cltd
push
jnp
jae
icebp
fidivrl
out
sbb
push
sub
repz
lock
pop
xor
fisubl
dec
fs
je
rolb
repnz
rorb
cmc
addr16
outsl
dec
cmc
outsb
in
mov
bound
or
cmpsl
push
mov
sub
pop
nop
inc
mov
or
loope
jg
aaa
je
in
or
imul
sub
cmpsl
mov
mov
test
loope
scas
das
mov
mov
sbb
int3
or
arpl
repz
mov
ss
sbb
sub
outsl
dec
xor
jno
pop
mov
repnz
and
jbe
xchg
pop
lock
ret
out
rorl
xchg
mov
mov
loop
fs
loop
push
and
xor
enter
dec
mov
jle
stos
loop
push
mov
jne
cwtl
mov
push
fistpl
lret
sarl
pushf
push
push
push
xchg
push
rorb
mov
mov
xor
outsb
scas
mov
and
repnz
cltd
inc
xchg
mov
jo
test
pop
call
jb
insb
mov
or
sbb
pop
mov
mov
mov
sbb
xor
add
pushf
pushf
sbb
inc
imul
mov
sbb
mov
addb
jg
adc
insb
inc
mov
in
addr16
fstpl
push
aaa
notb
shrl
sbb
mov
push
mov
add
repnz
subb
dec
dec
and
popl
mov
aas
and
cmpsb
out
repnz
mov
repz
sub
push
es
mov
std
mov
movb
or
pop
shll
fbld
loop
mov
add
inc
lock
xchg
jmp
cmp
sub
jecxz
insl
jno
xchg
rol
inc
rolb
xchg
cmp
pop
xor
xor
je
mov
inc
insl
bound
inc
mov
xchg
mov
adc
adc
adc
cmp
fs
jae
pop
inc
les
cmp
push
sarb
mov
outsl
ss
sub
push
xchg
xchg
cmp
test
scas
cmp
pop
out
int3
sub
xchg
mov
push
mov
dec
sti
xchg
xor
andb
std
xchg
cmpsb
test
cmc
addr16
pusha
out
pusha
andb
jb
mov
adc
movsb
mov
xchg
and
jae
pop
shl
repnz
xchg
insl
push
repz
out
std
push
mov
jb
mov
inc
mov
ss
loop
pop
inc
clc
xor
or
adc
movsb
add
loopne
pop
pop
pop
lahf
data16
js
xchg
mov
loop
xchg
ja
cmpb
fs
add
jne
notl
dec
loop
mov
jb
fwait
jne
inc
fadds
movntps
sbb
xor
inc
pop
movsb
or
stos
mov
mov
dec
leave
cmpsl
movsb
add
mov
adc
fstl
out
call
repnz
in
dec
inc
ss
push
inc
xchg
lcall
psadbw
jbe
incl
push
ljmp
mov
jp
xor
aaa
sub
cmpsb
jae
jecxz
jns
cmp
in
mov
pop
daa
mov
or
inc
ret
cs
fiadds
sbb
scas
xchg
imul
lret
ss
lahf
xlat
lahf
pop
xchg
add
sarb
pop
dec
movsb
lcall
nop
call
js
xchg
xchg
sub
xor
jns
xchg
out
mov
jb
adc
rorb
stos
inc
dec
sub
ljmp
dec
aas
xor
sub
and
sbb
fstpl
loope
sub
cmp
outsl
dec
dec
aam
std
adc
into
push
pushf
inc
jmp
jmp
push
fsubrs
cmp
adc
int
adc
repz
sub
mov
mov
test
pop
mov
outsb
test
or
ret
scas
pusha
lds
mov
rcrl
rcll
or
repz
add
sub
push
mov
cmp
sub
orb
jnp
inc
mov
ret
in
dec
dec
scas
sub
and
pop
or
xchg
and
popa
and
scas
ljmp
movsl
ret
inc
lock
xor
test
adc
cmpsb
inc
lahf
and
sub
xchg
int
out
push
mov
adc
repz
call
inc
xor
jg
bnd
adc
mov
aas
enter
bound
mov
out
sub
sti
mov
insl
mov
fcompl
into
call
lret
icebp
xchg
scas
dec
fildl
ljmp
arpl
ror
push
cmpsl
adc
outsb
sbb
jns
xchg
test
sbb
sub
sub
test
add
sti
mov
rcrl
cli
or
loop
gs
scas
sub
mov
push
jno
out
test
mov
dec
aad
mov
pop
jo
int
test
lods
fldlg2
jae
mov
jecxz
sbb
out
getsec
push
pusha
push
dec
ret
cli
inc
ret
push
dec
inc
mov
in
arpl
outsb
test
imul
xchg
dec
sbb
sub
pop
enter
mov
add
stos
push
add
jle
test
adc
adc
push
inc
jae
mov
sub
and
sbbl
cmc
sub
int
adc
out
shll
xor
out
fdivrl
movsl
aaa
push
mov
cmp
mov
ficoms
sub
out
xor
lock
sub
mov
or
js
or
xlat
sbb
nop
jl
xor
cwtd
sbb
jnp
or
or
daa
jns
fistpl
pop
shrb
push
cmpsl
adc
sub
xor
jp
or
jnp
mov
dec
ffree
andl
fcmovnb
cmp
incb
push
clc
in
out
mov
mov
mov
cmp
push
mov
adc
cmp
mov
testb
je
dec
or
cmp
mov
aad
loop
xor
in
jbe
sbb
pop
mov
mov
in
xchg
and
sbb
fildll
sub
es
ret
data16
sar
push
dec
mov
xchg
stos
or
xchg
test
inc
enter
divb
fcomp
fs
xchg
mov
push
rol
into
outsl
adc
ret
cmpsb
lea
cwtl
lcall
mov
aam
in
push
cmp
pop
daa
sbb
xor
mov
iret
pop
loope
mov
inc
clc
sbb
orb
push
fbld
xlat
jne
nop
dec
loopne
sbb
pop
mov
mov
stos
scas
not
leave
jb
xor
cmpsl
jge
and
add
rcll
adc
ss
pusha
pop
jg
pop
xchg
jne
shr
jmp
fcomp
out
jno
xlat
pop
push
fwait
imul
mov
cmc
and
fsubrp
pop
mov
mov
or
rorl
test
push
push
add
flds
aad
push
out
adc
cmpb
shl
outsl
sbb
cld
fs
test
inc
mov
jb
xor
inc
and
leave
and
test
sub
dec
mov
or
js
cld
test
imul
test
fidivl
imul
push
hlt
ljmp
add
sub
inc
and
test
ret
lods
addr16
or
jg
inc
into
fstl
mov
enter
out
je
or
push
cli
sub
adc
data16
sti
popf
push
testb
ret
jb
popf
mov
xchg
mov
and
mov
jcxz
jecxz
xor
scas
adc
popa
arpl
xlat
inc
arpl
lock
into
mov
in
adc
inc
or
aad
loope
insl
xor
jg
out
imul
aad
subb
mov
xorb
aad
lret
sarb
rorb
lods
adc
add
sbb
dec
jg
lods
push
sbbl
pushl
sub
push
inc
scas
mov
pop
loope
mov
xchg
push
mov
jns
dec
ja
pop
ljmp
fstpl
mov
mov
cmpsl
out
lret
es
pop
pop
sbb
mov
mov
bound
sub
inc
sbb
rcll
loop
add
test
enter
ss
pop
mov
sub
jno
repnz
lahf
sub
lahf
ret
dec
sbb
enter
jmp
or
mov
or
lcall
xor
push
lea
cmp
push
cwtl
and
mov
sbb
cmp
es
lock
mov
stc
push
adc
cli
mov
or
scas
jmp
dec
push
mov
push
int3
mov
or
rolb
sub
xchg
cwtl
jle
je
or
jecxz
pop
jne
sbb
rol
xchg
cs
jns
xchg
xabort
push
mov
add
fwait
mov
pusha
stos
pop
inc
push
clc
ds
mov
or
xchg
xor
cld
cmc
scas
sub
sbb
push
rol
sbb
daa
and
sbb
das
cmp
push
fsts
adc
popf
popa
push
mov
and
lcall
filds
xor
fs
leave
pop
pop
sbb
out
mov
les
fdivrl
mov
lock
rolb
scas
test
ret
cwtl
pop
out
enter
sbb
push
loope
sub
mov
call
cmpl
mov
adc
pminsw
ret
add
loop
ret
sahf
mov
pushf
mov
cmpb
mov
dec
ret
pushf
jge
mov
push
adc
cmpsl
test
adc
sbb
adc
das
int3
int3
and
mov
add
lea
cli
mov
and
data16
xchg
lret
mov
lock
mov
mov
or
jno
fiaddl
stc
cmpsb
xchg
and
fwait
jo
adc
pop
push
out
cmc
and
movb
xchg
xor
setne
inc
add
fdecstp
subb
movups
test
mov
out
push
fdiv
inc
stos
popf
sub
fs
loop
push
sub
mov
hlt
mov
std
divl
mov
sti
sahf
outsl
or
fucomp
xor
lods
cltd
fsubl
inc
push
shll
jecxz
dec
outsl
xchg
inc
shl
pop
loop
nop
mov
inc
jmp
push
test
or
pop
lock
fildl
push
mov
lea
test
mov
lods
pop
enter
mov
fadds
notl
inc
subl
cmp
adc
add
loope
xchg
enter
scas
ret
sbb
fistpl
adc
dec
loopne
dec
test
rclb
sbbb
pop
sub
xor
add
mov
addr16
lods
cmpsb
mov
std
push
pop
mov
repnz
push
mov
cmpsl
ret
and
or
xchg
lahf
nop
pop
stos
push
sbb
jb
test
sbb
lods
inc
mov
jge
or
mov
add
push
repz
loopne
pop
rclb
fwait
hlt
or
jle
lcall
and
test
and
sbb
roll
faddl
cmp
xchg
rcrb
xor
mov
mov
dec
mov
xchg
xor
loopne
inc
xlat
repz
jno
imul
sahf
cmpsb
pop
mov
scas
push
sub
pop
leave
insb
dec
mov
jmp
dec
lret
push
mov
wrmsr
cmpl
stos
jne
shlb
sub
adc
sub
testl
insl
cs
inc
sahf
or
lea
cs
inc
xchg
mov
adc
sub
std
push
shll
push
icebp
aaa
daa
mull
aaa
lcall
mov
pop
sbb
ret
jb
call
xor
nop
mov
fnsave
fwait
imulb
or
inc
mov
fwait
mov
jg
pop
int3
outsl
or
pop
mov
and
addr16
rcl
lret
jns
int3
jne
repz
dec
aam
mov
sub
stc
lock
mov
xlat
mov
shr
or
mov
popa
mov
sbb
icebp
lret
add
in
orl
aad
mov
dec
out
ret
xor
sub
jb
push
testb
lea
cmp
sub
ja
mov
insb
icebp
jns
sbb
and
adc
push
int
cwtl
stc
and
nop
pop
fsubs
xchg
jle
jle
sub
xor
repz
fsubrs
imul
pop
sahf
jnp
cltd
js
sub
lock
leave
fwait
sbb
pushl
cmp
push
jecxz
cmp
pop
lahf
popa
jge
mov
mulb
shl
andb
sub
jb
xor
xchg
mov
cltd
inc
mov
xor
inc
loopne
push
mov
adc
in
cmpsb
or
push
into
dec
lds
mov
push
mov
jg
jmp
mov
popf
fsubrp
arpl
imull
maskmovq
divl
xor
cmp
mov
fnstenv
adc
pushl
xchg
fldcw
xchg
sti
shr
jnp
xchg
adc
aas
dec
lcall
push
in
sbbl
stos
test
je
fildll
inc
adc
shrl
mov
jae
outsl
inc
in
ret
sub
pop
lock
imul
in
lea
mov
loopne
mov
and
jbe
pop
jl
xchg
and
cmp
popa
push
push
mov
inc
outsb
push
pusha
push
std
xor
cmp
aam
shlb
sbb
cli
mov
dec
pop
and
jns
add
dec
jmp
ja
cmpsl
mov
and
and
push
outsb
into
test
filds
filds
add
in
fwait
push
jne
lods
notb
sti
pop
push
movsl
ret
jmp
dec
xlat
je
xchg
xlat
adc
xchg
or
and
data16
mulb
lods
cltd
in
scas
cs
or
mov
and
dec
aaa
xchg
pop
cmpsb
leave
mov
xor
mov
mov
fstpl
adc
cmp
or
jno
add
jmp
insl
mov
and
das
lahf
mov
in
sbb
dec
pop
ljmp
lea
cli
call
xchg
jno
add
int3
cmp
test
movsl
fists
enter
inc
and
andb
xor
push
ficoml
and
add
sbb
popf
movb
imul
ss
pop
dec
xor
fistl
push
sub
dec
jne
sbb
fdivrl
xor
clc
sahf
loopne
inc
jle
call
cld
stos
inc
movsl
out
adc
imul
fistps
inc
mov
mov
add
push
ds
daa
mov
loopne
xor
xor
inc
lods
xchg
sar
cmc
mov
iret
shll
mov
nop
sahf
aaa
inc
imul
inc
xchg
in
lea
cld
sbb
xchg
mov
mov
jns
std
adc
lret
xchg
ret
mov
lods
dec
stc
push
xor
add
addb
mov
psllq
xchg
jecxz
call
mov
rorb
push
subl
fstpl
lret
add
test
xor
sub
jbe
sub
mov
xor
xchg
mov
sub
in
push
mov
cmc
inc
ss
fidivs
mov
mov
dec
inc
addr16
cmpsl
and
mov
lods
iret
mov
sub
sbb
push
test
sub
jno
out
sub
and
add
cld
sbb
jmp
ljmp
mov
scas
and
mov
stc
ja
clc
scas
sbb
scas
testl
popf
jne
cmpsl
shrl
mov
dec
inc
mov
imul
shlb
dec
cmpsb
out
mov
arpl
cmp
add
rolb
jge
adc
add
mov
xorb
daa
clc
cmpl
fcoms
loop
xchg
decb
out
out
pop
and
test
xor
mov
jp
jae
sbbl
dec
shll
fisttpll
adc
lret
mov
xchg
popf
pusha
fsubr
cwtl
or
movsb
cmp
test
popa
mov
mov
pop
adc
mov
jle
add
repz
pusha
call
pushw
inc
xchg
mov
or
daa
and
rep
loop
or
mov
push
pop
sbb
sub
mov
mov
imul
es
aam
sbb
adc
xchg
and
movsb
adc
and
push
bnd
jmp
aam
lock
xchg
jle
push
sub
repz
je
cmp
pop
test
fmuls
test
movsl
je
out
inc
xchg
movl
or
mov
add
ficompl
dec
lods
push
fistl
and
sbb
into
repz
mov
pop
mov
and
std
test
les
push
add
adcb
jge
sahf
pusha
inc
test
icebp
cmpb
out
add
dec
scas
ret
sbb
aas
aad
cmpsb
mov
out
xchg
fstpl
loop
mov
dec
movsl
xchg
mov
jo
into
push
adcl
push
pusha
aaa
rclb
pusha
jns
loopne
into
mov
scas
push
arpl
outsl
pop
mov
fs
stos
jnp
xchg
lret
xchg
into
std
les
daa
je
mov
or
mov
jae
mov
add
cmp
push
xor
loop
dec
aas
sahf
dec
xor
nop
cmpsb
sbb
mov
in
sahf
adc
dec
dec
and
out
jo
rorw
out
test
cmp
arpl
out
pop
jno
imul
mov
les
scas
fisttps
int3
mov
loope
jne
int3
daa
jbe
imul
adc
push
imul
aam
push
push
fimull
xchg
fidivrs
sub
and
fldcw
xchg
jmp
aaa
idivb
test
dec
add
push
lret
cmp
cld
pop
lock
pusha
xchg
out
popf
cmp
jbe
sub
les
arpl
fstpt
pop
and
xchg
in
jnp
mov
jae
mov
jbe
pop
cmp
aas
mov
sub
enter
fdivl
mov
mov
aaa
out
pop
mov
sbbl
out
mov
in
xchg
gs
add
leave
sub
xor
sbb
pop
aad
inc
scas
pop
add
cmc
hlt
push
cs
mov
dec
bound
mov
jae
popa
nop
pop
bnd
jb
nop
je
imul
movsl
jae,pt
jp
pusha
jae
repz
ljmp
aam
xor
mov
cli
inc
ja
loop
sub
fstp
sbb
jns
mov
push
gs
mov
inc
mov
cmpsl
fsubs
or
xor
ficoms
adc
sbb
pushf
mov
aas
loope
das
dec
mov
test
test
in
adc
and
fs
mov
shr
mov
adc
fistps
js
add
cmp
pop
and
sbb
fsubrs
inc
fcompl
dec
inc
test
cmp
inc
ja
xor
jecxz
dec
push
inc
aad
mov
outsl
cmc
les
pop
pop
sarl
push
mov
lock
mov
fcomps
push
push
and
jns
cmpsl
and
fwait
sbb
xchg
pop
lock
in
add
mov
lea
dec
sarl
mov
roll
xor
lret
fs
cmc
movsl
and
push
sbb
aas
xchg
rolb
dec
adc
repnz
jne
mov
ljmp
daa
in
cmp
cmpb
xlat
jbe
fdiv
push
fldenv
cmpsl
aad
pop
stos
fwait
ret
pop
sbb
daa
nop
aas
fwait
mov
sbb
or
cltd
dec
in
jle
pop
fldl2t
mov
inc
sub
jnp
or
or
shll
mov
lahf
scas
cmp
and
pop
lods
movsl
add
pop
or
xchg
sub
sub
aaa
imul
xchg
test
ds
pushf
adc
std
jle
dec
jne
add
pop
xchg
mov
daa
lods
pop
into
imul
pop
out
movsb
into
repz
jp
addb
or
fists
mov
ss
adc
mov
mov
cmpsl
shlb
js
jns
jl
push
push
movsb
add
dec
lock
out
aas
loop
adc
mov
inc
adc
mov
pop
push
xorb
push
aas
imul
mov
pop
xchg
lds
decb
cs
fucomi
mov
mov
aaa
arpl
mov
push
xor
push
dec
push
and
pop
cmp
stos
sbbl
loopne
popf
test
sahf
fstp
jecxz
sub
push
lret
clc
inc
sti
insb
xchg
lock
call
bound
fistpll
dec
arpl
jne
dec
int
call
cmp
push
push
mov
enter
lcall
pop
and
movsl
fnsave
pop
inc
out
ficoms
mov
jp
mov
adc
clc
cmp
mov
cmpsb
cld
popf
mov
enter
stos
sarb
outsb
pop
ret
mov
call
push
sbbl
dec
pop
jge
inc
pop
inc
xor
mov
and
call
sbb
fidivl
lahf
sub
sbb
mov
call
pop
imulb
adc
cli
movsb
pop
or
jae
in
sub
loopne
pop
xchg
push
and
ficomps
jl
mov
data16
add
movsl
sbb
iret
ds
push
xchg
in
pop
cmp
add
nop
push
mov
hlt
mov
pusha
sub
xchg
loop
jl
cmpsb
mov
repz
rorb
call
cmp
int
mov
outsb
dec
jl
out
adc
cmp
or
fstpt
sbb
adc
cmp
push
outsl
bound
arpl
repz
push
shr
adc
xchg
and
adc
lea
adc
add
dec
arpl
adc
add
insl
shll
and
mov
mov
bound
inc
mov
gs
push
add
shlb
and
clc
aam
stos
js
lods
ja
rolb
fisubrs
fbld
nop
sub
cmpb
xchg
push
leave
shll
mov
jmp
fldcw
mov
or
jmp
xor
mov
dec
mov
jo
sub
sahf
pop
push
in
inc
inc
add
int3
inc
jg
outsb
xchg
fistpll
xor
ljmp
shrb
cmpl
push
shlb
sub
xchg
mov
inc
movsb
pop
inc
push
xchg
decl
pop
adc
test
call
xchg
push
inc
js
cmpsb
aaa
stos
xchg
inc
cwtl
decb
stos
jmp
mov
mov
push
push
dec
or
scas
rcrb
sub
jmp
ret
mov
mov
or
das
inc
insl
mov
sti
mov
and
pop
cmc
adc
and
pusha
pop
or
cmp
mov
repnz
push
bound
cmp
cmp
arpl
mov
jbe
dec
int3
notb
inc
popa
loop
xor
jo
push
cmp
adc
inc
push
mov
lea
mov
push
out
push
xchg
loope
adc
sbbl
dec
push
mov
dec
addr16
mov
jne
cmp
aad
push
cmp
sbb
shl
daa
or
std
push
jae
cs
jnp
jb
sbb
jge
sbb
mulb
dec
lcall
loope
sub
sbb
arpl
push
cwtl
cs
adc
dec
mov
lods
fnstsw
xor
xchg
pop
loope
or
lret
or
pop
inc
sbb
cmpsb
pop
inc
stc
sub
int3
popf
std
ljmp
mov
rcrl
imul
xor
cmc
sbb
rclb
inc
jl
inc
or
mov
pop
jg
sti
subb
dec
lahf
cld
lock
and
push
jbe
lea
push
daa
and
cwtl
int
push
pop
lahf
movsl
daa
adc
insl
dec
xor
jns
movb
pop
insb
fs
stos
mov
lods
push
inc
dec
pop
and
imul
pop
jecxz
pop
test
mov
cmc
repz
addb
dec
pop
lods
pop
cld
outsl
out
mov
lds
pusha
xchg
mov
sbb
fstpt
xchg
lds
enter
and
dec
adc
leave
cmp
sbb
loop
and
js
add
push
add
inc
push
jno
ljmp
xor
sbb
les
ljmp
push
roll
rorl
repz
jns
xlat
fsubs
sub
push
cmp
adc
xor
cmp
jne
or
or
roll
jnp,pt
or
xchg
or
sbb
dec
test
mov
subl
mov
add
sbb
das
mov
jl
out
rcll
cmc
dec
or
sti
iret
pop
lahf
sub
mov
loop
xchg
mov
fnsave
shlb
jl
out
pusha
mov
xchg
mov
shrb
dec
jp
aad
mov
inc
popa
pop
rcrl
pop
jecxz
jnp
repnz
mov
jg
or
icebp
add
in
jno
inc
sbb
movsb
xchg
lahf
inc
add
out
xchg
test
outsb
cs
rol
cld
cli
pop
aaa
jmp
mov
jbe
loopne
test
or
jb
jae
pop
or
sbb
out
and
jno
push
and
jmp
adc
jle
les
pop
icebp
push
push
fisttpll
xchg
push
adc
data16
sub
dec
rcr
aad
mov
subb
sarb
or
aad
das
sti
in
mov
test
push
sahf
or
mov
mov
into
xor
adcb
jl
aaa
popa
pushf
mov
cmpl
dec
insb
jge
push
add
divb
fst
xor
push
inc
dec
mov
pop
es
fldl
sbb
mov
adc
roll
pop
push
inc
ss
xchg
xchg
mov
and
pop
lds
inc
jecxz
adc
xchg
out
clc
xchg
xlat
inc
cmc
or
xorb
push
lahf
add
out
jbe
faddl
push
mov
inc
pop
es
cmp
cmp
cwtl
fld
jns
dec
sub
xchg
lcall
sti
dec
imul
sub
imul
or
sub
lods
loop
cwtl
and
jae
loop
inc
adc
xchg
inc
ret
test
jb
call
mov
test
sarb
aaa
fbstp
stos
mov
mov
and
je
mov
idivb
sti
cmp
xor
xchg
aas
and
ljmp
mov
ret
pop
les
cwtl
daa
push
add
out
imul
pop
xor
mov
xchg
repz
add
xchg
jl
or
sbb
inc
pop
push
mov
ret
shrl
xchg
jno
in
jle
xor
add
in
add
loope
leave
jo
jmp
jmp
adc
cmp
ret
inc
and
mov
repz
and
into
push
lock
push
rcrb
inc
loop
inc
mov
call
fsubrl
ljmp
sub
mov
push
or
or
data16
test
hlt
out
adc
pop
xorl
aam
out
jge
stc
cld
js
pop
jns
pop
mov
ret
cltd
lcall
out
cmp
sub
or
ret
mov
pop
pusha
mov
xchg
adc
loopne
push
push
lahf
scas
xchg
cli
loop,pt
push
pop
add
popa
mov
fidivrs
xchg
cmp
push
nop
arpl
adc
addb
clc
fistpl
ret
mov
stos
dec
cmp
mov
mov
cmova
adc
sub
into
inc
dec
das
popf
mov
add
rcrl
call
push
mov
movsb
popf
pop
sub
sbb
jno
adc
fdivr
push
or
stc
sbb
aam
jnp
sti
mov
xchg
sub
inc
enter
jnp
jno
loope
mov
mov
insl
cmp
sub
rcr
adc
popf
test
test
pop
jno
movsb
xor
lods
inc
push
or
test
jle
pop
inc
xchg
lods
into
sbb
xchg
add
int
pop
stos
mov
inc
xchg
adc
rep
push
xor
sub
cmp
nop
add
icebp
in
leave
sbbl
jecxz
xchg
and
aad
aam
popf
das
pop
insl
jecxz
lods
cld
lahf
bound
ret
popf
xor
and
pop
xchg
pop
mov
push
inc
bound
or
push
mov
push
imull
fidivl
push
adc
dec
cmp
rcl
or
jne
ljmp
lock
mov
adc
loop
call
adc
jbe
aad
fcomip
lock
xchg
das
cmp
insl
sti
adc
loopne
pusha
xchg
aaa
mov
push
adc
in
xchg
cmp
adc
cmp
and
outsb
lods
adc
test
mov
sbb
cmp
jp
fdivs
popa
add
ss
clc
sahf
push
outsb
mov
push
dec
movsl
xor
rcll
dec
dec
adc
pop
mov
add
jmp
dec
jnp
stos
lahf
inc
lcall
shll
lds
adc
js
ss
cmc
enter
fistpl
cmp
hlt
scas
pop
mov
pop
out
mov
cmp
lcall
es
aaa
dec
jp
xor
fcmovne
fdivrl
jno
pop
jecxz
cmp
bswap
xor
xor
and
std
fxch
sbb
mov
sub
mov
test
stos
dec
test
dec
xchg
iret
ret
xchg
add
mov
inc
out
push
out
sbb
cli
jbe
jo
or
mov
fstenv
inc
aas
clc
xor
add
cltd
popf
pop
repnz
mov
sar
loop
std
fdivrp
daa
jecxz
loopne
dec
inc
mov
inc
push
mov
jae
or
shlb
or
or
mov
pop
sub
fnsave
jns
cld
dec
andl
jl
movsl
xorl
jmp
sbb
lock
inc
fisubs
inc
mov
mov
mov
push
lcall
subb
inc
push
xor
loop
repz
in
push
xchg
add
es
in
addr16
lds
outsl
repnz
aas
mov
lret
cli
out
or
xor
movsl
cmpsb
call
nop
and
les
imul
cmp
pusha
mov
adc
out
test
adc
insb
and
xchg
add
fwait
cmp
jg
stos
loope
fldenv
into
mov
mov
int3
sahf
jne
cs
shrl
shrl
push
aad
xlat
aaa
cwtl
test
push
mov
fistl
cmp
jae
sub
pause
sbb
mov
cmp
bound
mov
out
fimull
dec
cmp
xor
push
in
jmp
sbb
cld
lcall
pop
mov
mov
mov
and
jbe
shrb
out
je
enter
mov
lods
outsl
jecxz
pop
arpl
jo
repz
sbb
xor
pop
push
out
mov
xchg
xor
fildl
mov
outsb
cmp
pop
push
lods
sbb
sbb
pop
into
mov
ret
or
push
jns
sub
aaa
movsb
es
mov
mov
sbb
or
mov
clc
push
inc
popa
aad
pop
sbb
jmp
shlb
shll
sub
lods
rclb
xchg
sbbb
fdiv
pop
inc
shr
aaa
jnp
mov
rcrl
dec
adc
pop
sub
sbb
cld
js
cmpsb
je
or
fidivrs
rcrb
sub
lss
ret
dec
jecxz
dec
add
or
sbb
push
add
add
enter
ss
pusha
dec
fisubrl
daa
iret
negl
cmp
ljmp
dec
idivb
push
cmc
cmc
pop
sub
lret
sbb
sbb
mov
lds
loop
addr16
mov
pop
lds
push
jl
cmp
into
pop
jl
mov
push
jae
fcoml
jmp
imull
sbbl
decl
das
lret
jg
pop
dec
mov
shlb
xor
add
jg
fists
fisubrl
push
jno
mov
sbb
cmp
xor
push
shr
sbb
mov
push
mov
push
cmpsl
and
dec
imul
jbe
cmp
pop
out
aam
aad
pop
push
mov
mov
loop
inc
xchg
or
adc
lret
push
dec
mov
cmp
cmpsb
or
jno
sbb
cmp
jp
push
push
test
lcall
add
sbb
mov
es
dec
loope
pushf
sub
xor
add
movsb
adc
out
nop
lcall
movsl
cmp
xlat
mov
cmp
loope
mov
push
jnp
and
or
call
nop
fdivs
push
arpl
xchg
mov
mov
cld
icebp
aaa
loop
nop
adc
stos
push
jb
lahf
cld
fdivr
mov
idivl
mov
xchg
ja
fidivrs
push
xor
push
xchg
cmp
mov
cmp
loop
aam
or
xlat
dec
cld
movlps
xor
clc
es
das
andb
cwtl
ljmp
pop
outsl
lea
repz
jno
fmuls
push
add
jnp
mov
addb
mov
fstps
cmp
mov
orb
mov
test
cmp
enter
add
shl
sbbb
xchg
push
inc
sbb
push
jns
pop
mov
jns
leave
lods
icebp
outsb
fidivrl
imulb
aas
ja
push
fidivrl
inc
lret
lods
pusha
and
push
push
lods
loope
loop
fistpll
push
test
testb
jge
lretw
popf
pop
push
lock
test
ljmp
ss
pusha
pop
hlt
cmp
jecxz
ljmp
leave
pusha
jae
outsl
movsb
lds
xor
push
imul
clc
pop
mov
xchg
imul
inc
push
cli
or
int
lahf
inc
mov
mov
fists
push
mov
les
dec
cmp
cmp
pop
and
sub
aam
pop
sar
orl
and
or
shll
call
mov
dec
push
jne
mov
pop
test
gs
cmpsb
ss
repz
pop
imul
jecxz
bnd
push
xor
lods
lea
lods
push
movsb
fadds
lcall
addb
fldcw
fdivs
jl
pushl
fs
sub
into
xlat
and
or
inc
shlb
push
mov
sub
inc
fwait
cs
mov
sbb
xchg
ret
hlt
pop
loopne
ret
jbe
aam
fwait
xchg
pop
push
mov
rol
xor
in
fcmovbe
adc
push
or
cld
dec
aad
add
jo
mov
fistl
or
cmp
mov
enter
push
decb
clc
aas
push
lret
pop
inc
stc
movsb
xchg
add
out
in
out
xor
loopne
int3
cmp
jb
enter
mov
or
mov
xor
aas
or
ja
sbb
push
test
mov
jmp
ret
nop
rclb
mov
jne
xor
pop
mov
add
into
xor
shrl
sub
fists
xchg
pop
out
mov
dec
push
cwtl
push
shr
inc
cmp
cmp
dec
pop
xchg
lret
pushf
outsl
push
and
adc
mov
mov
mov
mov
iret
ss
in
jne
lret
and
xor
ret
out
ss
call
jno
inc
jo
xchg
out
sahf
lods
sbb
repnz
adc
mov
xlat
in
sahf
ret
or
fcoms
stc
push
fsubrl
and
mov
and
jbe
mov
stos
decb
dec
pushw
lahf
mov
gs
sub
pop
fcompl
mov
loope
loope
shll
push
subb
push
jecxz
mov
mov
mov
sbb
enter
jns
arpl
mov
insl
sahf
cmpsl
stos
in
mov
mov
dec
and
jecxz
test
dec
push
enter
sub
adc
leave
test
mov
outsl
cmpsb
jne
rcll
shr
aam
jnp
es
lahf
sub
pop
cmp
shl
mov
jg
mov
in
out
insb
mov
sub
inc
pop
iret
mov
inc
subb
mov
push
mov
in
loope
or
stos
push
cmp
xchg
hlt
push
sti
scas
rclb
ret
sbb
jbe
pusha
jno
mov
jmp
push
cmp
cmp
mov
ljmp
lds
fldcw
or
mov
dec
sbb
mov
rorl
cwtl
ret
xor
test
push
jge
sti
cmp
xor
out
cmp
inc
inc
outsb
fistpll
out
mov
int
inc
jbe
std
xor
xor
mov
xchg
dec
xor
das
mov
rolb
xchg
outsb
push
sub
xchg
out
mov
adc
mov
push
adc
pop
ljmp
mov
test
fcoms
movsl
pop
jo
sbb
xchg
jecxz
leave
mov
mov
and
out
lods
mov
xor
aam
xchg
xor
int3
cld
dec
addl
inc
lods
push
pop
xor
divb
test
cld
adc
sahf
push
or
mov
push
and
popa
insb
jmp
lcall
xor
enter
mov
jl
clc
dec
iret
xchg
in
pop
sbb
fcmovnbe
sub
or
inc
ret
sti
aaa
ljmpw
xchg
sbb
push
cmp
jge
repnz
mov
cld
pop
clc
pop
pop
fucomi
loop
pop
pop
cmp
adc
cmp
mov
cli
jg
inc
sahf
repnz
andb
fdivrs
push
push
insb
dec
addr16
mov
or
pop
mov
jno
fwait
movl
jbe
fucomi
popf
or
sbb
push
mov
hlt
in
mov
mov
push
xor
xlat
cmp
inc
int3
shlb
jo
jb
dec
push
cmpsl
inc
stos
or
jno
cli
inc
out
xchg
in
pop
jnp
jno
jns
cli
mov
fildl
and
repnz
movsb
imul
mov
cmpsl
roll
ljmp
mov
test
neg
lods
ljmp
xchg
or
scas
mov
jno
jnp
psubq
sbb
fistl
jecxz
aas
inc
pop
dec
movsb
push
push
dec
rcrb
lcall
stos
call
mov
adc
cmc
or
lods
mov
into
pusha
cmc
iret
cltd
lret
xchg
jno
inc
sbb
and
pop
cwtl
out
adc
push
pusha
xor
mov
sbb
jg
adc
xor
dec
mov
inc
stc
xor
inc
cmp
invd
add
xor
cwtl
in
xchg
es
pop
pusha
std
push
pop
ja
push
lret
sbb
xchg
fldl
add
xchg
cld
inc
xor
icebp
rorl
jns
inc
pop
xorl
mov
adc
xchg
dec
sub
dec
leave
fwait
and
je
popw
mov
movsb
fcompl
push
sbb
mov
std
call
addl
fisubrl
cmp
sub
nop
add
push
pop
dec
pop
and
jecxz
in
xchg
enter
pop
popf
insb
add
and
xchg
popa
hlt
cmp
mov
jno
movsl
js
mov
lods
pop
pop
mov
ret
jmp
cld
xchg
loope
dec
pop
mov
mov
out
dec
outsl
scas
mov
add
jo
and
dec
mov
push
mov
push
adc
fstpl
jns
xor
mov
fisttpll
dec
mov
cld
or
int
and
les
add
shll
cmp
xchg
push
pushf
fistpll
mov
jno
sub
xor
jl
dec
in
inc
mov
lcall
ret
shlb
push
rolb
enter
xlat
mov
sbb
js
dec
inc
sbb
dec
dec
test
cmp
dec
and
jcxz
aas
lods
dec
xor
sub
loop
pop
mov
push
jle
jmp
jl
das
cltd
popl
fimull
mov
mov
mov
leave
xchg
shll
pop
fdivrs
out
jae
lcall
test
jp
aas
fistps
hlt
cltd
mov
push
dec
insb
in
xchg
mov
add
iret
loop
sub
and
sub
cmpsl
xlat
jb
add
and
cld
cmp
mov
pop
hlt
fdivrs
mov
sub
mov
mov
jg
test
mov
mov
je
pop
lret
push
and
inc
pushf
sbb
jmp
int3
fsubl
pop
inc
fcoml
mov
mov
pusha
roll
mov
sbbl
and
jg
mov
jbe
pop
inc
call
fs
sbb
outsb
repnz
enter
mov
xchg
inc
push
daa
inc
aaa
xchg
sbb
lock
push
ficoms
push
movsb
std
mov
mov
clc
int
adcb
in
jecxz
gs
aad
xchg
and
mov
cli
pop
lods
fstps
ds
adc
fistl
aad
xor
xchg
popa
arpl
mov
dec
jg
pop
add
sar
inc
push
xor
mov
push
and
jl
cwtl
stc
push
andl
lahf
jecxz
adc
std
popf
test
fldenv
pop
jns
call
sub
es
xchg
pop
dec
adc
gs
adc
cld
lret
push
sbb
pop
pop
cmp
aaa
xor
out
fsts
enter
inc
cmp
mov
xchg
fwait
aaa
std
inc
sub
rolb
test
fdivl
inc
jl
sbb
and
lods
cmpsl
inc
mov
mov
mov
stos
sahf
fnstsw
js,pn
cmc
frstor
decl
adc
add
aas
incb
negl
sbb
jecxz
fwait
or
xchg
push
insb
decl
pop
add
pop
lods
int
shl
loope
enter
pop
addr16
xchg
outsl
jge
add
mov
add
fcmove
jl
or
movsb
sbb
mov
fwait
jo
xchg
int3
outsl
fildl
jb
pusha
xor
fucom
add
pop
mov
xchg
fdiv
xchg
aaa
adc
xor
and
rcrl
test
js
mov
in
cltd
jbe
andl
sbb
pop
dec
scas
push
and
es
dec
loopne
mov
jp
sbb
dec
cmp
sbb
mov
lds
sub
inc
jl,pt
sub
popa
xchg
fcomps
stc
inc
dec
ret
inc
jns
std
fcomi
inc
pop
adc
shrb
cmp
sti
cmp
cltd
testb
push
test
jns
adc
jle
cmp
loope
mov
fcomps
les
imul
cmp
xchg
xlat
fisubrs
cld
or
stos
sbbb
je
bound
lcall
mov
outsb
ret
in
push
inc
or
dec
pop
jl
xchg
jmp
pop
pop
xchg
stos
xor
lds
into
mov
ret
push
lods
dec
and
push
test
loopne
push
incl
push
or
xchg
shrl
mov
lods
shll
lcall
stos
xchg
fisubl
icebp
and
mov
pop
mov
addr16
xor
sahf
sbb
sub
aad
bound
imul
and
pop
and
sub
jg
push
xorl
inc
movsl
cmpsl
arpl
pop
inc
movsl
in
sahf
jbe
inc
lret
stos
xor
mov
mov
xchg
ljmp
xor
sub
push
es
pushf
pop
dec
mov
popa
aam
daa
jl
lea
shl
dec
mov
dec
push
sub
insb
pop
jle
out
jmp
repnz
add
jmp
and
cmc
xlat
repnz
and
imul
mov
ljmp
mov
sub
push
arpl
in
mov
ds
push
xor
sub
loope
ret
xlat
xor
mov
mov
test
cmp
cmpsl
xchg
jg
xchg
decb
dec
inc
add
jle
lret
cmp
dec
pop
cmc
xor
add
cmp
or
dec
sbb
sub
adc
imul
sub
mov
mov
push
test
adcl
dec
dec
xchg
jge
not
nop
popf
or
cmpsb
inc
arpl
clc
or
jnp
and
xor
out
iret
outsb
pop
into
daa
mov
cmp
stos
xchg
roll
push
je
xor
mov
and
add
call
mov
push
jle
test
xchg
test
dec
jmp
adc
lret
rcl
ss
jnp
leave
ljmp
cmp
push
mov
xchg
jne
push
sub
xchg
mov
ret
lods
dec
ror
sub
int
xorl
imulb
divb
cmc
jg
lahf
xlat
aas
cltd
popf
cmp
dec
cmp
mov
inc
iret
lahf
xchg
pop
popa
out
je
sahf
mov
insb
out
sbb
sub
cmp
ret
sub
mov
insb
push
imul
int3
rcl
mov
ljmp
or
jae
add
clc
imul
mul
mov
push
cmp
int3
xor
lcall
pop
push
push
jg
loopne
popf
xor
out
int
cmp
jo
test
lock
iret
mov
out
push
sbb
dec
js
sub
sbb
pop
xchg
divl
push
sbb
loop
loop
xor
lods
pushl
in
enter
bound
inc
stc
mov
out
adc
sub
hlt
lret
and
dec
pop
stc
push
xchg
cmc
cmpsb
pushf
xchg
lret
cmpsb
cmpsl
xchg
fadd
inc
js
push
int3
dec
mov
pop
adcl
xor
inc
test
int
scas
ret
jne
dec
pusha
and
mov
repz
jmp
sahf
repz
loop
mov
and
jno
jmp
in
insl
add
or
fwait
sbb
aad
cmp
icebp
cmpb
pop
xchg
jns
int3
mov
add
pop
sbb
or
inc
pusha
jle
xchg
push
or
mov
pusha
xor
js
mov
sahf
pushf
mov
jp
sbb
jl
ret
fisubs
sbb
repz
adc
push
fadds
push
fbstp
hlt
mov
in
addl
xchg
inc
jge
popa
scas
xchg
rcrb
das
in
jb
les
or
lods
lds
movsb
into
mov
loop
adc
rcll
dec
jnp
les
test
sub
pop
xor
push
push
mov
jae
ds
xchg
dec
mov
pusha
mov
test
shll
xchg
std
cmp
xor
scas
dec
mov
adc
pop
and
xchg
dec
int3
mov
or
lock
xchg
or
sub
ljmp
clc
or
mov
xchg
jge
pop
push
data16
push
mov
sarl
mov
mov
popa
divl
cltd
cmp
daa
addr16
test
div
lcall
dec
cltd
dec
scas
adcb
push
push
pop
xchg
sti
lds
icebp
push
add
push
jns
pusha
mov
sbb
jno
out
jnp
movsb
mov
std
mov
add
popa
mov
fs
mov
into
cmp
inc
or
add
inc
hlt
out
pop
mov
es
jp
sbb
data16
dec
mov
xchg
jecxz
inc
stc
rclb
cmp
in
cld
pop
fdivl
jns
out
or
pop
xchg
sub
scas
cld
in
push
xor
sbb
test
xor
and
out
sbb
or
mov
inc
pop
adc
push
mov
sub
sbb
dec
inc
es
inc
repnz
mov
or
inc
or
xchg
xor
mov
mov
dec
push
lods
or
push
out
subl
sub
in
fisubrs
pop
cmp
shl
sbb
test
fisttps
imul
mov
jo
decb
sub
stos
jae
js
cli
xor
out
jae
and
imul
add
fisubrs
rorl
ja
xchg
cmp
pop
paddusw
cmp
add
cmpsl
mov
stc
push
inc
loopne
out
dec
push
fisubrl
subw
mov
ja
adc
daa
mov
sbb
or
leave
cmpsl
aam
outsl
xor
testb
bound
xchg
push
and
mov
jge
aaa
mov
fs
pop
arpl
cwtl
repz
scas
inc
mov
add
sub
es
ja
cld
inc
bound
dec
fstpt
leave
or
jg
das
mov
lret
inc
sahf
adc
xchg
cmp
xorl
xchg
cmp
pop
add
out
imull
pushf
pop
loopne
push
lcall
hlt
jbe
adc
popa
push
xchg
rcr
fwait
and
inc
mov
jge
cli
adc
dec
xor
imul
pop
mov
inc
push
out
ljmp
cli
cmpsl
repz
mov
popf
push
shl
test
add
in
in
jbe
test
call
cld
dec
jle
xorb
cmpl
aas
ds
scas
icebp
jmp
sub
cltd
lds
and
dec
jmp
ficomps
mov
fwait
xor
mov
pop
xchg
jnp
cli
cwtl
and
pop
adc
testb
push
lds
mov
or
mov
lock
jmp
sbb
mov
sub
inc
das
shrb
ror
jg
lret
sbb
sbb
addl
das
cwtl
xor
es
xchg
pop
adc
insb
add
imul
mov
cmp
pop
cmc
rorl
shll
mov
mov
xlat
rorl
movsb
enter
inc
scas
aam
je
das
jmp
lea
imul
add
fstps
xor
sahf
das
xchg
mul
mov
push
jl
out
cmp
sbb
adc
jo
je
sahf
in
int3
pop
mov
inc
mov
mov
iret
push
mov
xorl
dec
shl
pop
mov
dec
sbb
int
pop
addr16
xor
xchg
clc
test
lahf
in
add
loop
mov
fdivs
push
cld
or
dec
out
fwait
adc
inc
xchg
aam
jno
out
adc
scas
xorl
xchg
movlps
push
shrl
push
sub
xchg
shlb
sub
inc
sbb
in
pop
push
sbb
xor
jmp
in
push
jnp
js
jbe
inc
scas
iret
dec
ret
mov
mov
adc
dec
or
mov
hlt
dec
jmp
xchg
inc
mov
fistpll
aam
in
pop
sti
inc
inc
xchg
jmp
jp
inc
xor
jl
dec
pop
rcrb
std
mov
ficompl
aaa
icebp
movsl
mov
ljmp
sbb
lods
xchg
aam
cmp
add
inc
xor
lea
mov
enter
add
sti
add
inc
xchg
push
and
jp
sbb
jmp
iret
cwtl
rorl
sbb
movsb
and
popa
test
xor
pop
cmp
lret
lods
jl
push
sbb
mov
mov
aam
dec
add
adc
push
mov
fbstp
or
xorb
pushf
repz
fwait
mov
mov
mov
mov
jecxz
jnp
mov
jmp
sbb
mov
rorl
sub
ficoml
or
xor
popf
mov
insl
leave
ja
pop
psubsb
jge
sbb
aaa
or
push
or
xchg
fsts
ds
inc
add
test
aas
add
and
mov
int
push
push
inc
lea
dec
sarb
popa
push
pop
pop
lahf
loope
cmp
nop
and
mov
pop
jb
fcomps
sbb
mov
sbbb
aaa
sub
int
mov
lock
cmp
mov
xor
nop
push
and
sahf
jo
jge
sub
mov
out
hlt
cld
icebp
pop
cli
mov
jmp
push
in
fsubl
stos
jne
aas
test
lods
test
popf
dec
sti
ret
add
sarb
mov
mov
std
dec
mov
pop
dec
jecxz
cmp
pop
lea
pop
fcmovb
out
je
fcompl
sarl
icebp
dec
cltd
inc
decl
and
or
inc
cmpsl
loop
mov
jne
push
lds
in
mov
push
mov
xor
in
pop
daa
iret
fimull
pusha
lahf
mov
xchg
jo
mov
xchg
push
or
xor
push
push
lods
jns
mov
pop
add
pop
cli
push
jmp
mov
cltd
mov
mov
sub
inc
stos
mov
mov
leave
add
call
lock
push
les
add
jns
ljmp
es
lds
mov
sub
inc
out
fbld
xor
add
jno
and
data16
xchg
dec
dec
adc
in
jge
xchg
mov
mov
imul
les
lret
jle
int
outsl
lods
lahf
cld
or
and
push
mov
dec
mov
adc
push
shrb
nop
loop
mov
sbb
dec
faddl
mov
mov
aam
repnz
dec
cwtl
out
pop
dec
jl
mov
xor
and
jnp
sub
shrb
lret
outsb
sub
das
js
mov
add
jle
sarb
bound
shl
insl
daa
sub
fisubl
stos
mov
test
mov
mov
add
adc
notl
das
push
push
mov
xor
clc
aaa
or
ljmp
jae
mov
fwait
mov
jmp
xchg
fisubrl
jle
inc
pop
mov
lret
lcall
push
or
mov
sub
pop
scas
inc
push
xor
jp
mov
add
mov
fisubs
outsl
and
iret
lea
lods
push
ds
jle
mov
hlt
mov
xor
call
and
fsubrs
js
xchg
aad
xchg
mov
adc
lds
pop
sub
and
lea
push
std
push
xor
sbb
mov
cmp
subb
lods
mov
pop
mov
ljmp
lds
adcl
aad
lret
add
mov
xchg
cmp
mov
jnp
add
iret
push
mov
cmp
loopne
pop
loope
adc
lret
jns
negb
popf
clc
lret
test
into
aad
lock
cli
or
bound
or
xor
mov
popl
pop
push
sub
test
test
nopl
sub
sbb
mov
pop
das
into
shlb
rorl
fmuls
fsubs
es
cmp
pushf
mov
push
adc
enter
push
jle
jbe
or
push
jae
xor
xchg
les
mov
sti
cmp
add
icebp
pop
mov
xchg
int3
xchg
mov
mov
mov
inc
and
inc
loop
adc
dec
push
or
scas
repz
in
sbb
pop
jmp
enter
mov
cmp
inc
xchg
ret
mov
jle
lret
popf
pop
and
mov
rcrb
push
mov
subb
insb
xor
mov
aas
sti
repnz
outsl
mov
pop
aam
push
insb
mov
test
push
pop
dec
jge
mov
add
xor
inc
pop
jae
nop
sti
push
ftst
dec
in
mov
stos
sub
xchg
sbb
das
aaa
lock
cmpsb
inc
sbbl
or
insl
mov
test
inc
lahf
adc
js
stos
lods
jl
sbb
jmp
insb
out
sbb
adc
and
adc
sbb
dec
mov
dec
inc
xchg
inc
xchg
std
lock
lock
jo
xorb
xlat
data16
insb
outsb
mov
jnp
sbb
or
jno
xlat
in
jae
adc
sub
xlat
dec
pop
imul
pop
adc
popf
inc
ja
inc
sahf
push
ss
lods
mov
sbb
fidivl
jno
add
push
push
mov
mov
loopne
sbb
mov
and
lcall
test
or
scas
cs
je
adc
mov
and
push
movsb
ja
cmp
pop
xchg
ficoms
mov
jge
push
cmp
mov
cmp
cltd
or
imul
stc
popf
sbb
xor
sub
mov
jl
jg
lea
xchg
lods
jb
dec
and
test
cmpsl
sub
pop
into
rorb
push
push
xor
mov
push
xchg
jecxz
loopne
iret
and
push
dec
into
pop
test
mov
sub
fsubrs
orl
xchg
fisttpll
dec
int3
sbb
and
dec
mov
xchg
jmp
sub
lds
mov
mov
cltd
push
inc
lock
or
xor
fisttpll
fdiv
add
mov
inc
insb
xchg
data16
add
dec
movswl
or
mov
add
push
pop
pop
pusha
fxch
jmp
imul
cltd
mov
xor
mov
add
fldenv
dec
hlt
mov
je
inc
dec
jne
sub
sub
adc
cmc
pushf
push
or
dec
push
stc
and
sti
push
push
ja
adc
stos
add
lcall
in
mov
adc
jg
mov
xor
repnz
inc
cmp
jle
jmp
xor
mov
add
push
push
pop
pop
pop
test
inc
xor
adc
jo
dec
dec
mull
test
inc
inc
sub
sbb
jns
out
push
lret
inc
adcb
icebp
sub
cmp
cmp
pop
pop
xchg
frstor
pop
jo
cmp
rclb
insb
js
or
xor
pop
push
jle
leave
mov
fs
adc
xchg
xor
inc
shrb
push
push
fimull
fwait
gs
test
mov
sahf
ja
cmpsl
mov
loop
mov
pop
push
add
clc
test
xorb
cmp
je
cld
aam
push
pusha
test
rcl
dec
mov
pushf
fxch
in
jmp
jmp
out
test
xor
int3
mov
and
pop
movsb
cmp
dec
push
dec
xor
xchg
xor
popf
rclb
cmp
xchg
fwait
mov
mov
lods
rcll
xchg
or
fistpll
mov
inc
cld
adc
ret
xchg
sbb
outsl
sarl
je
jbe
dec
or
adc
and
xchg
and
loope
mov
sbb
gs
jp
sbb
outsb
aam
sbb
fwait
or
pop
nop
je
or
pop
scas
xchg
jmp
es
int3
mov
adc
loopne
jo
mov
jne
inc
jbe
cs
or
add
push
es
fiadds
push
jl
pop
test
xchg
lahf
dec
xchg
xor
jnp
and
dec
push
jl
mov
lret
in
push
sub
xchg
outsl
jmp
ret
jae
mov
es
sub
sub
xchg
ljmp
or
pop
pop
pop
fldl
push
xchg
pusha
lock
fcoml
sub
jmp
mov
pop
push
mov
rclb
dec
push
and
mov
sahf
enter
pop
aam
push
xor
into
mov
xchg
mov
inc
dec
test
addr16
insl
lahf
xchg
add
call
push
push
dec
mov
lds
sbb
push
lods
mov
out
iret
lahf
xchg
xor
outsb
dec
jl
xor
push
add
test
mov
popf
xchg
ja
cmp
shlb
sbb
jb
jmp
in
mov
insl
test
pop
fstp
mov
fisubrs
push
rol
jns
cmp
mov
ffree
fistps
das
mov
jecxz
jmp
push
or
push
cmp
mov
sbb
and
fdivp
cmc
inc
mov
jg
lods
loopne
notb
push
out
jp
mov
in
pop
inc
add
push
mov
iret
jb
jmp
aad
jne
and
jp
call
mov
ret
jmp
mov
cmp
fidivrs
inc
fmull
pop
mov
mov
ja
stc
ja
movsl
outsb
mov
mov
mov
addl
mov
repz
jae
cmp
cmp
in
mov
movsb
jp
mov
or
or
add
inc
inc
jl
inc
popa
insb
jbe
mov
out
in
pusha
je
pop
fadds
mov
push
int3
jle
add
popa
ffreep
jnp
jge
dec
pop
cwtl
jno
inc
in
sbb
cs
push
ficompl
es
mov
push
adc
xor
cltd
std
pop
mov
aad
aad
push
int
sbb
xchg
inc
nop
lock
cld
std
push
pop
push
or
cmp
pop
pushf
cwtl
int3
pop
rorl
ror
cmp
and
ret
mov
xchg
lahf
out
mov
xchg
inc
rcrl
scas
dec
or
filds
testb
or
lcall
sahf
cwtl
sarb
hlt
into
in
sub
fadd
popa
shl
jle
sub
push
cmp
pop
shl
add
jb
mov
std
repz
or
and
sbb
pushf
jp
idivl
inc
push
jl
push
dec
into
sti
call
pop
cmp
mov
adc
sub
jp
popf
dec
dec
mov
push
mov
cltd
sub
mov
dec
mov
inc
mov
nop
cmp
cmpsb
aaa
notb
pop
jo
jmp
jnp
pop
dec
popf
mov
clc
lcall
test
dec
dec
aas
scas
add
dec
inc
add
fsubrp
dec
dec
jl
add
jne
pop
rcll
fldt
sub
jnp
out
in
loopne
outsb
mov
jnp
ret
sub
faddl
push
add
mov
adc
and
loope
ja
lahf
imul
in
cmp
xor
cmp
sbb
loope
dec
lock
out
imul
pop
pushl
repnz
push
test
out
adc
xor
pop
pop
push
mov
test
jp
js,pt
outsb
cli
pop
fstp
push
outsl
test
add
mov
pop
cmp
jg
mov
fcoms
or
ds
xchg
push
inc
loope
xor
je
out
xor
pop
sbb
add
push
sub
or
mov
mov
sahf
cmc
push
das
call
insb
lods
dec
jl
in
mov
arpl
pop
enter
or
jg
or
lods
test
hlt
pop
sub
mov
in
sbb
cmpb
sti
mov
xchg
mov
out
movsl
jg
outsl
sahf
call
inc
xor
jg
mov
cmp
mov
adc
test
imul
push
cmp
out
dec
mov
and
mov
or
shl
cli
mov
imul
fs
cli
shll
iret
rcll
push
das
notb
mov
pushf
sub
cmc
sub
cli
leave
lock
and
mov
rolw
imulb
sbb
cwtl
push
in
in
adc
push
rcrl
and
push
subb
cmpsb
or
and
push
lock
loope
stos
xorl
or
xor
out
adc
das
insl
xchg
js
cli
aas
daa
mov
dec
xchg
pusha
outsl
fsubrl
inc
and
jns
cmp
xchg
aaa
pop
mov
insl
and
push
sbb
dec
xchg
insb
roll
scas
mov
jp
push
or
xchg
sbbb
xor
cmp
add
subl
lcall
aas
daa
cmp
push
cmp
shll
pop
cmpb
cmpsl
addr16
sbb
aaa
cmp
mov
and
pop
out
insl
in
in
lcall
cmp
push
cmp
sub
lret
gs
push
bound
loope
inc
cmpsl
cmp
and
xchg
jl
outsb
push
aas
into
nop
je
adc
sub
push
xchg
inc
out
and
inc
mov
mov
insl
or
iret
out
mov
call
cmpsb
mov
aas
adc
push
ficoml
or
and
test
mov
and
mov
sbb
das
push
push
adc
shll
sbb
xchg
cs
or
xor
inc
mov
andl
test
mov
iret
jns
fimull
inc
test
mov
test
arpl
dec
out
pop
stc
push
xor
sub
inc
daa
xchg
pop
fsts
xchg
shl
int3
pop
jnp
dec
in
fisttpll
hlt
xchg
and
sbb
jnp
loope
sbb
sub
hlt
in
jns
adc
pop
out
push
arpl
xchg
xorl
stc
lods
or
jae
stos
push
test
jmp
jns
sahf
lcall
push
sbb
fcoml
mov
mov
fwait
xor
movsb
imull
xchg
sbb
mov
push
xor
mov
dec
dec
pop
pop
out
in
lret
scas
les
cmpsl
outsb
add
sbb
push
ffreep
jp
push
xor
xchg
inc
sbb
mov
aaa
dec
adc
mov
enter
jmp
jb
push
sarb
xchg
mov
cmp
or
cmp
les
sti
mov
test
arpl
test
outsl
aaa
jge
cmp
popa
paddusw
sub
sub
pop
fdivs
pop
push
pop
add
mov
push
outsb
in
pop
test
xor
cmp
adc
pop
jp
pop
or
adc
xchg
fwait
cs
daa
out
mov
cwtl
out
mov
lcall
push
std
mov
enter
lcall
xchg
push
dec
cmp
xor
add
mov
data16
test
sub
jnp
sub
adc
mov
icebp
dec
dec
jb
mov
cwtl
jg
mov
xchg
mov
ret
mov
push
ret
iret
inc
test
ds
mov
pusha
mov
adc
mov
bound
add
test
icebp
fstps
inc
scas
cmp
push
mov
in
inc
jl
pop
mov
add
mov
jg
imul
lret
push
fildll
push
jo
push
subl
orb
dec
sub
bound
lcall
add
xor
mov
adc
lahf
outsl
test
jmp
sub
mov
jmp
push
adcb
adc
dec
sbb
inc
aam
js
nop
jnp
push
lret
ret
pop
jno
clc
mov
sub
aad
push
xchg
fstpl
xchg
pop
aas
sub
lahf
mov
sub
jne
stos
pop
dec
push
mov
ja
outsb
mov
divb
sub
push
sbb
sbb
fs
adc
pusha
pop
cmc
pop
sbb
out
jmp
or
jge
mov
divb
add
push
stc
inc
mov
push
in
mov
stc
mov
shrb
push
ficoms
jne
pushf
adc
jns
mov
and
push
add
addr16
add
mov
xchg
jl
arpl
shll
sbb
sub
ret
out
aaa
cmpb
cmp
xchg
sti
jne
add
jno
lods
insb
mov
scas
mov
push
shrb
push
or
or
cwtl
push
scas
sbb
cmpsl
hlt
imul
cwtl
movsb
jg
jp
std
andl
push
ret
lret
mov
pop
imul
mov
ret
or
lea
xor
roll
sbb
inc
ljmp
pop
mov
js
inc
mov
ficompl
sarl
xchg
sbb
mov
ss
sbb
fildl
shll
out
cmc
pushf
mov
sti
mov
ret
xor
mov
mov
fldenv
mov
fbstp
mov
xchg
or
test
shl
xchg
repz
stos
mov
push
outsb
xorl
out
call
sbb
mov
xchg
test
inc
in
adc
int
push
sbb
movsb
les
cmp
pop
adc
or
push
fs
and
push
mov
daa
bound
es
pop
adc
push
mov
lcall
pop
sub
pop
mov
ret
or
int
mov
sbbb
negb
lahf
ja
push
in
ss
and
cmpsb
xchg
loope
jge
loopne
pusha
dec
inc
jmp
mov
dec
cs
inc
xor
push
sub
jle
and
push
push
test
mov
int3
or
lds
sub
or
pop
in
jle
xchg
ret
jmp
sub
pop
stos
jp
cmp
scas
ss
mov
and
mov
hlt
movsl
xor
push
das
cmp
int3
add
lcall
rorl
repz
into
and
mov
mov
adc
into
mov
adc
or
cli
pop
xchg
mov
test
adc
stc
stos
sub
insb
mov
arpl
sub
sub
pushf
jmp
adc
add
das
xorb
mov
push
fwait
push
sarb
jg
push
sub
cltd
mov
arpl
int
push
inc
mov
frstor
pop
jns
je
aas
movsl
orl
add
ret
je
sub
mov
jle
mov
or
ret
cmp
test
push
lcall
mov
mov
adc
pop
mov
and
add
stos
and
xchg
repnz
cmpsl
dec
inc
fisttps
repz
shrl
test
jbe
pop
cmp
pop
mov
sarb
out
mov
mov
stc
sti
test
dec
mov
lea
ja
and
jns
fwait
sbb
jb
arpl
mov
adc
xchg
pop
push
dec
pop
jbe
aaa
add
hlt
pushf
mov
lahf
fwait
dec
mov
mov
outsl
sbb
inc
or
mov
test
lret
rcrb
jg
cmpsl
shrl
push
int
mov
out
xor
cmp
xchg
scas
stc
mov
or
mov
cmpsb
cmc
and
inc
gs
cmpsl
stos
hlt
mov
cmp
into
sub
dec
fsubl
jmp
ja
popa
sti
xchg
add
in
add
in
fisubs
les
inc
or
das
call
in
jns
mov
sub
pop
outsl
jnp
in
ret
mov
dec
cmp
ljmp
mov
pop
lods
enter
xchg
mov
cwtl
movsb
mov
push
jne
popa
push
negb
cmpsb
outsl
lahf
pop
push
insl
dec
inc
dec
out
mov
ffreep
sub
roll
shrb
or
inc
mov
outsl
aam
cmp
js
push
mov
enter
jb
lret
mov
pop
lods
adc
ja
lods
jl
movsl
pushf
sahf
jmp
leave
cmp
fnsave
xor
or
pop
push
out
dec
mov
rorl
sub
imul
cmp
sbb
pop
mov
int
inc
subb
outsb
jmp
cmp
lahf
addr16
mov
ret
and
sub
push
aad
xchg
scas
xchg
or
in
rol
or
pusha
scas
push
jbe
fs
sbb
out
out
mov
fimuls
js
dec
mov
dec
test
sub
mov
les
fstl
pusha
fwait
hlt
pop
ljmp
test
pop
sbb
xor
test
add
push
mov
and
inc
cmc
aad
sub
mov
orb
or
xor
out
jne
ds
scas
pushf
cs
pop
dec
mov
aad
mov
popf
sbb
shl
inc
cmp
insl
xchg
test
or
inc
inc
inc
pop
jmp
mov
mov
mov
stos
xchg
enter
mov
push
cmp
mov
sub
in
dec
push
pop
popa
mov
out
aam
xchg
or
cmovno
aaa
mov
inc
bound
int3
outsb
or
jno
fisttps
push
fwait
push
sub
push
and
adc
sbbb
mov
adc
cmp
cli
shr
in
jns
mov
inc
add
xor
pop
push
shll
cli
popa
mov
push
pop
push
sti
cld
jnp
sub
sub
mov
jmp
addr16
ret
ljmp
xchg
lea
sub
sub
movsl
rorl
cmpl
cltd
hlt
loopne
out
fistl
mov
shrl
pop
lock
cmp
stos
pop
out
push
fisttpl
aaa
aad
scas
adc
jae
dec
adc
shlb
rcrl
cmp
aaa
adc
sbb
adc
std
and
mov
fimull
or
fdivl
cmp
sub
les
sbb
xlat
inc
mov
scas
popa
jg
ret
inc
push
jle
adc
jl
inc
sbb
mov
in
sahf
out
add
push
popl
xor
out
jae
in
es
pop
repnz
lahf
sbb
ljmp
pavgw
jp
mov
xchg
push
mov
test
xor
popf
push
stos
dec
packuswb
cld
test
fwait
jecxz
mov
dec
mov
roll
mov
pop
pusha
sbb
loopne
inc
jb
es
cli
and
cltd
add
inc
dec
cmp
push
icebp
ret
add
sub
mov
ficoms
rcr
cli
inc
outsb
les
cld
xchg
out
arpl
cmp
jl
xor
xchg
and
xchg
xor
out
pop
jnp
add
imul
jmp
pusha
mov
push
xor
jns
ljmp
fsubrl
cld
xor
cld
movsl
xchg
into
adc
mov
inc
inc
push
cmc
add
pushf
or
cmc
inc
ja
inc
cmp
sub
fmul
mov
icebp
stos
into
sub
ss
sbb
enter
pop
test
jle
cli
add
test
adc
or
aaa
cwtl
mov
fs
orl
out
xchg
insb
das
pop
pop
jle
insl
dec
mov
leave
mov
cmc
and
das
pop
sbb
stc
cs
sarl
adc
rcr
dec
inc
mov
mov
sahf
dec
testl
jl
push
ds
insl
jnp
and
test
jbe
xor
sub
mov
add
ret
out
pop
sub
ror
addr16
pop
jnp
fimuls
nop
inc
cli
fsubp
test
arpl
xchg
pop
aas
popf
sub
in
xor
push
jg
andl
std
iret
mov
adc
dec
inc
jnp
add
faddl
pop
lcall
push
dec
add
xor
push
push
add
loopne
arpl
jl
xchg
xor
in
mov
ficompl
rolb
dec
jle
das
jbe
in
mov
inc
sti
sbb
mov
and
outsb
fiadds
jmp
mov
or
xor
mov
repz
notb
lcall
ds
out
sahf
sub
leave
addr16
xor
stos
xchg
outsb
sub
arpl
dec
push
mov
push
aad
subl
sbb
outsl
stos
push
mov
and
mov
push
lods
sub
push
sub
clc
pop
pusha
xor
aaa
push
dec
outsl
pop
sahf
lret
xchg
push
repnz
mov
sbb
xchg
cmpb
push
lock
aaa
sbb
xchg
pop
daa
ljmp
cmp
sub
and
jle
sbbl
mov
divl
push
cmc
rclb
out
call
and
lock
or
dec
insl
pop
inc
push
push
cmp
gs
xchg
cld
imul
and
jo
loope
test
addr16
je
enter
push
daa
aam
xor
or
ljmp
sub
pop
push
insb
in
fidivs
push
mov
dec
aam
test
adc
lret
push
adc
add
test
or
cmp
adc
or
fpatan
scas
jle
dec
in
sbb
cli
out
jno
pop
pop
hlt
mov
loop
inc
adc
mov
sub
insl
in
js
xchg
div
mov
jmp
and
pop
pop
dec
lds
daa
xchg
mov
hlt
shlb
lods
add
scas
and
aad
cli
xor
ss
ja
cmp
dec
cli
push
jmp
jno
in
mov
push
outsb
push
bound
fistps
imul
jp
push
mov
mov
imul
inc
xor
push
add
mov
fmul
push
cmpl
div
movsl
mov
fs
add
out
iret
push
ret
vandps
pusha
mov
mov
aam
push
out
aad
fwait
xlat
jns
inc
xor
or
push
iret
inc
sbb
shll
and
clc
fs
icebp
shlb
or
cmp
movsl
fdiv
test
cwtl
jge
lcall
or
pop
ds
mov
ret
sahf
lret
sbb
js
or
xchg
jp
dec
mov
pop
sub
add
push
in
mov
ja
aad
lea
mov
inc
xor
mov
enter
insl
and
dec
add
es
subb
in
stos
lds
xchg
and
xchg
sub
leave
test
mov
and
sub
das
sarl
pop
lds
nop
mov
incl
adc
mov
ja
jmp
fistpl
mov
ljmp
jb
bound
mov
cs
jge
mov
je
int3
pushf
mov
and
push
fdivrs
cs
lcall
in
lahf
push
loopne
sbb
out
aaa
loopne
in
inc
in
ss
sbb
inc
les
les
pushf
fs
add
pop
pop
fmull
xlat
lret
aam
je
jno
aad
mov
imul
outsl
test
sbb
cmp
push
fstpl
in
gs
orb
cld
and
jle
adc
fstpl
pop
enter
inc
popa
rorb
addr16
pop
push
ds
pop
mov
fldt
lods
loope
mov
cs
mov
sti
outsb
leave
testb
mov
and
scas
movsl
int
icebp
cmpsb
or
or
mov
sub
xor
cmp
sbb
or
push
mov
mov
xor
jno
jo
sbbb
inc
iret
js
popf
push
shll
pop
data16
xchg
cmp
loopne
out
ss
addr16
shl
in
and
shlb
sub
inc
fisubrl
lahf
loopne
mov
lods
jg
xchg
into
ljmp
mov
pushf
shll
ja
push
js
xchg
mov
lret
adc
fwait
jle
dec
mov
mov
fsubs
ret
ljmp
loope
adc
popf
lock
xchg
cmc
lods
je
ds
mov
fprem
sti
and
mov
fmuls
xchg
imull
mov
xorb
in
pop
in
sub
push
ror
imul
cmpsl
insl
jg
adc
cmp
rorl
push
and
cld
cmp
dec
fst
jne
test
inc
jge
mov
jbe
and
das
cmp
mov
push
inc
xchg
dec
int
dec
mov
pop
nop
pop
mov
stc
xchg
repnz
sub
add
add
loopne
push
mov
in
ret
xor
ljmp
push
push
xchg
and
and
cwtl
clc
sub
je
lret
jge
add
mov
add
jns
or
addr16
mov
xor
mov
sahf
xchg
roll
xchg
xor
das
rcrl
jnp
lret
fldl
pop
adc
inc
popa
xor
jo
enter
add
mov
mov
jb
or
xchg
dec
and
mov
xchg
mov
push
fcmovnu
icebp
cmpsl
test
movb
or
adc
int
out
icebp
mov
stos
mov
daa
and
inc
mov
inc
pushf
sbb
mov
movsb
push
sbb
add
xchg
scas
mov
mov
sub
ja
jb
mov
aad
adc
or
pop
fidivl
mov
jns
xchg
mov
or
adc
mov
mov
fsubrs
aam
idivl
loop
data16
mov
mov
or
xor
int3
repnz
ffreep
push
stos
push
mov
les
out
pop
int3
xchg
ljmp
sub
push
sub
popl
adc
fsubl
and
mov
and
loop
push
jne
mov
sub
in
jb
cmp
or
mov
fsubs
sahf
ljmp
outsb
popf
adc
pop
outsb
mov
adc
or
pop
sub
pop
std
sar
jp
jl
add
mov
fistps
nop
and
dec
nop
pop
test
ss
push
loopne
mov
jo
push
xchg
mov
and
mov
sbb
sbb
mov
into
mov
loopne
pop
jbe
pop
cli
jns
mov
les
rcll
inc
cmpsl
xchg
jmp
test
pop
popf
daa
outsb
jae
xchg
cmp
xor
mov
pop
pop
loop
std
sub
add
adc
mov
aad
dec
lahf
mov
jns
or
xlat
cmp
insb
loopne
cmp
data16
push
dec
xchg
imul
sbb
scas
popf
jbe,pn
lret
inc
shrl
sbb
pop
loop
lret
popf
mov
leave
jo
lock
push
repnz
sub
iret
push
rclb
add
and
or
xor
push
mov
xchg
aaa
lret
adc
ljmp
adc
jb
xor
fisubrl
xorl
lcall
call
std
loopne
int
fwait
xchg
cld
add
lahf
pop
push
push
inc
int
dec
pop
mov
fldenv
pop
cmc
sbb
aas
aaa
push
daa
enter
in
adc
pushf
push
ficompl
call
mov
or
and
ret
sbb
or
inc
push
fs
or
je
and
cld
popa
in
xchg
and
sbbb
sub
shrb
ret
fildll
ss
mov
cmp
adc
insl
dec
sub
add
jecxz
inc
aas
xchg
inc
or
fadd
subl
pop
jae
or
push
lcall
pop
aaa
inc
fnstsw
xchg
adc
test
shll
lret
js
imul
std
mov
mov
push
push
inc
adc
popf
cs
test
stc
sbb
outsb
cmp
xor
dec
leave
sub
aas
je
enter
push
or
pop
mov
jns
jnp
dec
lret
pop
in
sbb
jnp
jne
shll
and
push
lods
lret
xchg
jmp
sub
sbb
cmp
cmp
cmpsb
icebp
dec
xchg
mov
pushfw
mov
pop
jb
sbb
ret
out
dec
and
pop
mov
leave
jmp
pop
mov
and
pop
popf
pop
out
mov
decl
adc
inc
in
jo
cmpsb
repnz
mov
mov
add
icebp
mov
jb
xchg
int
sbb
insl
or
mov
add
adc
popf
add
mov
jg
mov
into
fidivrs
jbe
push
push
ret
sub
xchg
sub
test
ds
call
ja
add
xchg
fmuls
imul
notb
adc
mov
and
insb
and
outsl
adc
mov
xchg
xchg
ja
sbb
sub
popf
and
nop
inc
pop
pop
and
inc
out
inc
xchg
pop
sub
clc
mov
shlb
rorl
xchg
cmc
sbb
inc
jnp
fs
cmp
fildll
test
popf
icebp
mov
cmp
nop
mov
sahf
stc
add
adc
adc
xor
movsb
lds
pop
fildll
xor
adc
enter
push
rcrb
movntps
cltd
push
fdivrs
mov
imul
mov
pusha
andb
adc
xchg
and
popf
jge
xchg
inc
add
adc
jb
lcall
or
andb
ss
add
scas
in
mov
lret
stos
cmpsl
pusha
int3
sahf
dec
icebp
sarb
mov
aas
icebp
jg
xchg
das
and
test
mov
inc
fldt
ja
push
movsl
push
fcmovu
sbb
dec
lret
jne
fsubs
js
shrb
inc
sahf
lcall
push
jmp
cmp
out
cmp
push
cli
inc
mov
mov
jns
cmpsb
daa
mov
aas
push
pushf
mov
pop
pop
fidivrl
lock
push
fcmovnu
add
rol
dec
das
insl
mov
or
or
stc
push
mov
push
sbb
ficoms
dec
pop
xchg
sub
lahf
nop
xor
mov
stos
enter
inc
aam
or
fisubrl
dec
rcrb
loopne
iret
cmp
mov
add
enter
cmc
mov
mov
xchg
aas
outsl
lods
lahf
inc
inc
loop
jb
aad
jne
and
sub
sub
adc
fistps
cmc
call
jmp
inc
adc
sarb
dec
movsl
dec
pop
pop
ret
std
jecxz
mov
fisttpll
fsubrp
push
ljmp
test
sub
mov
xchg
sti
mov
movsl
pop
nop
mov
int3
push
pop
aam
ljmp
xchg
add
cmpsl
jg
pop
cmp
fistpll
in
jl
pusha
cli
shrl
movsb
mov
mov
or
mov
xor
out
aam
push
icebp
jl
jo
lods
push
cmp
inc
adc
aas
mov
jge
cli
push
adc
mov
push
ret
push
xchg
scas
stc
pop
mov
or
mov
ret
xchg
mov
data16
clc
out
push
leave
mov
add
fcoms
stos
js
loope
add
jl
pop
mov
jbe
dec
sbbb
mov
lret
rcl
push
mov
mov
push
jno
pop
dec
mov
dec
push
or
cli
xchg
out
push
dec
mov
push
cmc
pushf
mov
pop
sti
inc
bound
pop
and
and
mov
cld
lds
add
bound
mov
push
jb
fmulp
vmovapd
dec
xor
mov
and
mov
jno
inc
movsl
xor
jl
xchg
or
jae
jo
mov
mov
adc
cs
and
cmp
sarb
lods
arpl
clc
and
lahf
add
popf
cwtl
xor
jg
xchg
rcrb
sub
out
xchg
mov
repnz
ret
add
mov
or
adc
aad
lret
inc
arpl
test
cmp
adcb
xor
int
mov
xor
and
cltd
shl
dec
jo
lret
ret
cs
ljmp
daa
cmp
push
sub
xchg
jbe
xor
mov
jno
es
xchg
aad
in
sahf
xlat
out
cmp
push
sbb
test
outsl
sbbl
pop
and
cld
fisttpl
pusha
int
push
pop
and
add
mov
sbb
push
lock
sbb
sub
sub
mov
mov
cld
test
dec
or
rclb
sbb
or
rol
in
jle
rcrb
fldl
inc
mov
mov
notb
jecxz
fists
ja
loope
sysenter
out
fcmovnbe
movsb
jg
subb
dec
jae
adc
lahf
mov
imul
stos
inc
jge
add
adc
or
lds
ss
pop
addr16
inc
jnp
mov
ss
in
pop
mov
int3
shl
xor
xor
fistpl
push
insb
pop
lcall
popf
clc
fcmovnbe
pushf
imul
arpl
jnp
ret
fdivrs
in
xorb
push
popa
movsb
scas
aad
adc
cltd
xchg
hlt
movsb
icebp
rcll
fstl
outsl
lods
scas
in
jmp
cltd
mov
add
call
sub
js
lods
ret
nop
sub
sbb
mov
lret
sbbb
cmp
movsb
pushf
dec
fwait
fs
movsb
and
out
and
jl
xchg
mov
dec
xorb
icebp
hlt
es
push
mov
xor
pop
les
ljmp
js
or
int3
stos
sub
xchg
repz
bnd
add
inc
mov
sub
fsubl
push
pushf
mov
mov
inc
imul
pop
and
push
inc
pop
mov
rcpps
fcmove
call
mov
or
adc
add
mov
pop
xor
or
iret
jmp
sub
int3
in
or
sub
dec
dec
inc
popf
mov
decl
jns
repnz
sti
add
and
ds
and
sub
ljmp
jg
cmpsl
jp
sub
pop
addr16
mov
call
and
sub
in
addr16
xor
shl
add
cmpsl
movsb
xchg
imull
mov
xor
das
and
mov
pop
shll
cmp
lahf
repz
cmpps
jmp
xor
adc
jmp
mov
inc
aad
jno
out
negl
xchg
test
push
mov
inc
test
xor
lahf
jno
pop
jle
mov
cmp
cmp
pop
jbe
cmp
ficoms
test
stc
arpl
repz
mov
pop
gs
sti
sbb
xor
cld
push
cmpsb
fcomip
and
xlat
imul
shl
inc
mov
jle
sub
ja
imul
inc
imul
cmp
fistl
outsl
inc
xor
xchg
divb
mov
fistpll
cmp
sub
pop
pop
mov
jecxz
add
add
inc
stc
mov
xor
scas
in
ret
dec
fmull
dec
jae
push
mov
xchg
dec
xlat
std
repz
lock
fistl
or
ret
les
ljmp
cmp
leave
out
mov
sbb
mov
jnp
add
or
mov
xchg
stc
add
jmp
push
pop
cmp
test
xchg
sbb
and
shrl
imul
xchg
insl
inc
dec
push
enter
sub
inc
xchg
out
jg
adc
mov
push
daa
fisubs
test
cmp
lods
lds
push
and
lahf
fildll
out
pop
sarb
xchg
mov
sub
mov
leave
dec
jb
fs
and
add
psubsb
insl
std
xlat
cmp
outsb
aad
rcl
ret
aas
fimuls
or
mov
mov
or
test
fldl
inc
fildll
or
push
lret
or
and
cmp
sbb
inc
jmp
mov
shll
jge
mov
push
cmp
dec
lock
out
mov
adc
mov
and
pop
xor
call
sbb
or
sahf
dec
jl
jl
mov
mov
mov
test
cmpsl
jecxz
fisttpl
arpl
test
inc
xlat
add
mov
sub
daa
lds
lods
aas
add
mov
int
sti
dec
adc
mov
pusha
in
xchg
sbb
cmpsl
cmpsl
shrb
roll
xchg
rcrl
lret
in
shrb
out
and
out
iret
shrl
cmp
jmp
dec
mov
les
stos
xlat
add
sbb
pop
aad
cmp
pushl
ret
sti
or
push
mov
dec
sbb
mov
cmp
xlat
xchg
xor
or
xchg
pop
cs
cwtl
push
sbb
push
dec
nop
das
stos
repz
outsl
pop
imul
sbb
xor
adcb
popa
inc
inc
or
insl
dec
dec
xchg
stos
adc
lea
inc
or
push
dec
sub
lret
xchg
orl
cmpsb
mov
data16
lock
das
add
test
cltd
negl
dec
jb
or
mov
sub
inc
test
dec
adc
jns
call
repnz
fcmovne
cmpsb
xchg
add
pop
int
mov
setne
xchg
addb
xchg
addr16
aam
loop
pop
scas
or
sub
mov
push
cmpsb
mov
lret
jle
jp
pop
pop
js
push
cmp
push
pusha
inc
xor
pop
int3
adc
mov
inc
inc
adc
icebp
cmp
push
or
out
test
das
and
fwait
cmp
xor
lods
push
loope,pt
out
int
mov
popf
jl
faddp
ds
jae
mulb
add
into
scas
add
and
sahf
or
jle
inc
and
xchg
aaa
xchg
xchg
cmpb
rclb
imul
push
cmp
lcall
pop
or
cld
push
mov
aam
push
iret
push
pop
and
xor
xor
test
mov
and
add
or
mov
neg
lods
rcrb
sarb
and
xor
dec
out
jmp
pop
dec
cmpsb
mov
arpl
enter
addl
mov
cmp
frstor
dec
sahf
imul
or
xor
popa
ffree
mov
mov
mov
mov
or
cld
jnp
ds
push
xabort
push
out
scas
adc
stos
jb
xchg
pop
in
jns
mov
pop
ja
rcr
xchg
xchg
mov
mov
repnz
ret
mov
cmp
mov
push
stos
mov
fnstcw
lods
cmpsl
repz
cld
adc
adc
loopne
dec
pushf
inc
inc
mov
push
pop
mov
xchg
daa
and
ljmp
jae
xor
adc
inc
addr16
push
shl
inc
pushw
pop
call
inc
ds
dec
lret
or
ljmp
pop
jecxz
outsb
mov
pop
dec
dec
mov
idivl
push
cmp
out
andl
pushf
jo
sub
xchg
pushf
and
lret
mov
cmp
scas
idivb
popf
je
addb
pop
jle
dec
jbe
daa
push
and
lea
popfw
adc
fisttpl
or
out
mov
scas
mov
inc
hlt
and
mov
das
lods
cmc
out
adc
movsl
lahf
daa
jnp
imul
mov
push
add
test
daa
addr16
jp
fwait
ds
cmpsb
cmpsl
push
scas
push
push
jmp
hlt
mov
sbb
rolb
adc
push
adc
mov
in
pop
xchg
insb
push
lahf
xlat
sbb
aas
mov
lods
les
pop
in
mov
in
mov
jo
idivl
stos
int
push
or
sbbl
xor
mov
push
or
popa
imul
repz
mov
sbb
mov
inc
jp
pop
lock
dec
imul
jmp
pop
lret
add
stos
adc
test
mov
sub
dec
jg
lods
cmp
dec
popa
fs
push
ret
int
jl
cld
scas
sbb
jle
mov
mov
jbe
pop
mov
into
add
jo
insb
insl
cmc
dec
sbb
mov
sub
sbb
push
shll
inc
xor
insl
fldenv
inc
mov
test
adc
sbbb
icebp
jle
pop
xchg
push
sbb
gs
lds
fmull
cmp
test
push
push
or
sbb
mov
dec
dec
outsl
insl
sti
xor
aam
daa
sbb
mov
push
repz
jecxz
jbe
out
cmp
xor
fwait
sbb
dec
xor
lret
out
shlb
adc
mov
orl
mov
push
loopne
hlt
xor
jmp
test
mov
dec
sbb
inc
sbb
jl
or
repnz
pop
fisttps
loopne
lods
adc
std
push
stos
sub
pop
push
dec
addr16
fiadds
scas
jge
ret
push
repz
cld
mov
aam
test
jne
or
out
out
sub
mov
sub
int
adc
outsb
xchg
mov
and
es
pushf
cmp
or
add
jp
inc
sub
sub
outsl
dec
xchg
arpl
mov
dec
inc
add
or
es
xor
fisttpl
mov
xor
aad
stos
xchg
aad
je
fidivl
sub
pop
dec
arpl
test
or
lea
std
dec
or
scas
push
imul
fwait
sbb
in
in
int
xchg
gs
dec
pop
pop
jno
lock
mov
pop
ds
in
pop
add
xchg
mov
xor
rcrb
fmul
filds
push
hlt
ja
and
enter
outsl
adc
rol
mov
dec
out
aam
jl
xchg
imul
ret
sbb
and
add
mov
cld
ss
jbe
jmp
push
pop
xor
not
loopne
jmp
jne
loop
cmp
push
into
adc
adc
mov
stos
jae
fmuls
fisttpl
xchg
xlat
cmp
cmpsl
sbb
mov
cmc
fidivrl
jp
xor
adc
out
cli
sub
subl
imul
out
rol
mov
fistpll
out
jle
fmull
push
outsl
test
cmp
and
es
addr16
lock
std
icebp
add
mov
add
jecxz
movl
jle
arpl
push
pop
js
lods
inc
push
xchg
std
ljmp
insb
sub
pop
or
adc
push
imul
decl
popa
fstpl
or
addr16
idivb
je
outsl
mov
loop
js
fldt
push
xchg
jb
mov
lods
pop
leave
mov
andb
pop
cmpsb
push
test
fstps
mov
cltd
clc
pop
fistpl
mov
mov
insb
mov
mov
adc
sub
or
pop
jge
cld
pop
mov
insb
fbstp
in
add
push
mov
push
test
out
outsb
arpl
sarl
pop
jns
cmp
xchg
repz
mov
mov
push
adc
fwait
mov
mov
xor
lcall
xor
pop
insl
popa
mov
jno
stos
lret
dec
test
stos
idivl
mov
jae
loopne
cmp
push
xchg
pop
adc
adc
test
in
ret
push
js
in
mov
dec
scas
decl
inc
inc
popf
shlb
ret
cmp
fisubrs
xchg
lret
insb
in
sub
pop
cld
arpl
adc
lret
loope
pop
jne
jge
or
jbe
xchg
bound
cwtl
out
sub
imul
cmp
mov
cmp
cmpsb
mulb
sub
dec
fstpl
inc
hlt
pop
mov
popl
and
or
inc
repz
adcl
xor
mov
cwtl
cwtl
inc
jb
jno
sarl
cmp
mov
popa
pop
imul
cwtl
repz
popf
repz
sub
jecxz
jno
sub
out
adcl
insl
stos
jne
xor
mov
mov
xchg
push
aas
es
clc
cld
ss
xchg
outsl
push
sbb
div
dec
push
cmp
test
jmp
mov
lods
test
arpl
cmp
aas
pop
or
fidivl
pop
je
sbb
pop
mov
fildl
es
cmp
mov
push
test
stc
xchg
dec
or
cmp
jle
shlb
xor
es
xor
in
fbstp
leave
mov
cmp
inc
movsl
rolb
mov
jl
push
mov
adc
jl
xchg
dec
lods
and
adc
pop
out
push
imul
inc
jle
cli
push
jno
cmpsl
div
loope
inc
call
inc
jb
add
pop
mov
push
xchg
or
and
xchg
frstor
aaa
push
push
aam
xor
mov
mov
dec
jmp
jne
jns
insb
inc
inc
pop
xor
push
aad
push
fisttps
dec
jae
fistl
jbe
aaa
bound
test
sbb
mov
add
outsl
repnz
lods
pop
jge
pop
add
mov
fimuls
pop
cmp
lahf
lcall
inc
test
aaa
push
dec
push
call
cmp
sbb
mov
mov
aaa
xchg
cmpsl
test
jmp
idivl
and
xchg
test
and
adc
mov
out
aad
inc
pop
and
stc
sbb
push
test
push
xor
out
subl
mov
add
testl
sbb
xchg
sbb
das
divb
decl
jecxz
cld
andb
je
inc
jo
sub
mov
xchg
or
sub
mov
sbb
dec
std
xchg
les
les
scas
lock
insb
insb
iret
js
out
popa
inc
push
sbb
sti
ret
das
shr
pop
imul
js
xor
ljmp
fdivrs
enter
negl
aaa
aas
lret
aaa
inc
add
jne
inc
fisubrl
or
sub
cli
outsw
popa
out
lock
es
roll
and
test
adc
mov
mov
hlt
sub
pushf
jnp
fmul
mov
fnsave
push
arpl
in
jl
dec
mov
lcall
in
int
das
adc
push
outsb
jbe
push
iret
push
sub
stos
out
sub
std
into
adc
cs
mov
arpl
mov
dec
and
or
bound
fmuls
jbe
insb
cmp
mov
icebp
out
stos
inc
push
ljmp
fldcw
lret
xor
jo
mov
mov
and
jmp
jp
adc
push
or
mov
out
leave
sub
cs
dec
fisubl
dec
pop
stos
iret
sbb
or
pop
test
leave
roll
fists
or
into
pop
or
idivb
lock
mov
popa
std
stc
add
popa
vpaddb
cmpsb
pop
je
out
js
int3
jp
jb
dec
jl
or
or
xchg
push
call
mov
xchg
sub
mov
movsl
mov
cli
mov
test
xchg
sub
out
cmp
cmp
dec
adc
push
shrl
xor
insl
add
mov
jae
mov
dec
sbbb
jo
std
mov
mov
pop
cmp
mov
shlb
push
mov
or
fdivrs
ljmp
fistps
cmp
popa
push
loope
icebp
adc
fstps
add
in
or
push
fucomi
jne
push
dec
test
inc
cmpsb
pop
int3
jo
or
nop
xor
pop
sbb
pop
shl
jle
jg
inc
mov
mov
cli
imul
push
pop
scas
lret
pop
jecxz
dec
inc
push
mov
cltd
sarl
addr16
addb
push
sti
push
cmovg
data16
and
xor
dec
fs
sar
lret
fs
mov
rcrl
pop
nop
xrelease
std
inc
adc
inc
push
xor
push
sub
push
sbb
sub
inc
imul
inc
xor
mov
or
jmp
std
pop
lret
cmp
push
mov
push
cmpsl
addr16
lret
jecxz
jb
lcall
push
shl
pop
cmp
pop
dec
or
cmp
lahf
shll
add
dec
mov
clc
scas
imul
in
pop
es
xor
imul
mov
scas
xchg
sbb
sti
jnp
mov
xor
sub
in
or
cmp
imul
and
push
adc
pushf
push
rcrb
psubsw
fimuls
rcrb
repz
xor
cmc
sahf
inc
test
adc
xor
out
sbb
jecxz
sbb
xchg
and
pop
inc
imulb
and
add
or
jo
mov
in
ret
int3
fcoml
negl
cmp
out
fcompl
mov
push
sbb
push
mov
push
sarl
pop
or
in
mov
jnp
adcb
jp
mov
into
xchg
fdivr
and
dec
inc
mov
int
mov
inc
xor
mov
dec
rol
mov
mov
mull
sbb
push
fwait
sbb
mov
lret
sbb
cmp
add
lods
xchg
lods
or
cmp
jo
push
lahf
inc
fcomi
mov
and
inc
lods
lret
iret
mov
in
fbld
gs
xchg
lret
jne
xchg
leave
frstor
jne
pop
jmp
pop
aam
insb
cmp
arpl
cmc
call
push
arpl
pop
or
faddl
or
mov
mov
pop
push
fistpl
in
js
dec
push
mull
lcall
imul
stos
fsts
dec
imul
dec
loopne
sub
test
repnz
cwtl
push
dec
dec
inc
imul
sbb
lds
stc
add
out
mov
and
cs
ret
inc
icebp
sti
pop
adc
shl
pop
leave
out
mov
inc
fstps
pop
fildl
inc
gs
add
push
scas
nop
inc
js
and
cmpl
clc
jb
addb
insl
dec
hlt
out
das
dec
or
negb
imul
xor
std
pop
sbbb
jge
or
je
shrl
pop
jecxz
scas
fistps
inc
cmp
in
pop
insb
push
andb
adc
add
lock
das
loope
popf
fisubrs
into
or
lds
enter
cmp
data16
sbb
ret
xchg
insl
jno
xor
fnsave
mov
jb
in
popa
xlat
sarl
jne
aad
lahf
add
leave
popa
fisubrs
mov
aad
outsl
cmp
ljmp
aam
add
dec
sarl
mov
loope
push
lcall
mov
inc
sahf
movsb
inc
lret
cmp
push
dec
xchg
fchs
fnstcw
das
fbld
pop
pop
jns
hlt
mov
adc
jg
subb
pop
gs
jp
inc
xchg
sbb
loop
je
push
add
xchg
and
jl
lcall
out
adcl
mov
cs
lahf
mov
sbb
repz
jbe
lock
push
rcrb
roll
nop
ror
xchg
gs
popf
pop
mov
imul
daa
xor
test
addb
test
xchg
dec
lock
cmpsl
jl
dec
and
jg
and
ja
xor
ret
mov
fdivrs
cmp
cmpsb
cld
push
int
adc
jne
mov
dec
enter
add
mov
pop
or
or
ror
je
roll
dec
inc
dec
sub
lods
push
es
mov
out
xor
mov
jge
mov
popf
fwait
add
scas
mov
std
mov
cwtl
js
mov
fst
sbb
jae
fcoml
fisttpll
sbbl
jno
mulb
and
outsb
shll
stos
loopne
leave
cmpsl
cvtpi2ps
fsubrl
hlt
or
cmp
std
lret
icebp
insb
cmp
sbb
jge
adc
jbe
inc
inc
jae
mov
cwtl
jae
sub
inc
pusha
sub
adc
int3
aam
jmp
scas
mov
repnz
adc
pop
xchg
jl
or
sti
mov
jns
fidivrs
sub
push
packssdw
bound
ret
in
mov
lock
scas
repnz
push
into
rcll
push
xchg
push
or
jne
xor
and
push
jl
outsl
push
or
test
mov
shrb
mov
stos
jnp
inc
or
sbb
pop
in
push
adc
jbe
outsl
xlat
add
in
cmp
int3
es
mov
iret
shll
adc
mov
push
out
jg
cltd
xor
jmp
lock
sub
jmp
jno
ret
js
dec
in
mov
sarl
jo
pop
add
inc
rcrl
sub
and
es
rcl
add
pop
jge
rcrl
mov
mov
xchg
imul
std
pop
jl
mov
sbb
out
xchg
loopne
and
adc
xchg
mov
mov
test
mov
data16
dec
inc
mov
mov
into
xchg
lods
dec
and
out
mov
ret
mov
mov
das
sub
jbe
hlt
repz
adc
xchg
push
int
movsb
test
mov
xor
aaa
xor
xor
std
xor
push
and
cltd
test
cmp
hlt
mov
sbb
fs
outsb
call
jg
fsubr
std
push
push
and
stc
adc
negl
jbe
adc
push
pushf
or
cmp
in
lds
ret
gs
sahf
adc
aaa
sti
push
jns
mov
fdivrl
cmp
mov
push
pusha
jl
xor
inc
cli
test
xor
xor
mov
push
cmp
sub
mov
add
cli
add
sti
xchg
inc
jno
add
insb
std
insl
xchg
std
bound
out
xlat
aam
ja
inc
aam
push
popa
and
loope
xor
lea
pop
fildll
jl
daa
mov
adcl
adc
scas
iret
push
xlat
lods
add
in
inc
and
or
and
pop
mov
inc
loope
rcr
outsb
adc
cmp
pop
add
arpl
or
cmp
neg
and
fidivs
aam
xor
rorl
mov
lret
xor
into
pushf
fstl
sbb
and
dec
ret
jb
out
cmc
or
je
inc
mov
enter
imul
subl
cmp
out
cmc
ret
addr16
and
dec
dec
or
mov
ficomps
mov
imul
insl
and
bound
test
push
es
insb
add
mov
mov
push
lret
xchg
push
pop
cs
scas
stos
adc
jge
es
push
adc
in
ficompl
lahf
test
es
sbb
jne
push
inc
sub
or
js
lods
inc
inc
and
push
or
test
jl,pn
or
xchg
sub
xor
out
lret
mov
add
lds
mov
loopne
mov
or
cmpxchg
jg
jecxz
xchg
pop
add
xor
das
ret
leave
sarl
jge
dec
push
ds
mov
in
adc
inc
xchg
add
mov
repnz
fmul
cwtl
inc
mov
ljmp
movsb
lods
int
xor
sbb
sti
mov
ds
inc
pop
add
jns
xor
push
jmp
dec
daa
push
xchg
sbb
clc
out
stos
pop
inc
jnp
pop
sub
mov
adc
jl
arpl
xor
inc
cltd
in
cs
hlt
sub
add
dec
mov
bound
insl
pop
stc
push
jbe
in
sub
movsb
repz
mov
enter
cmp
pop
lods
push
push
iret
dec
nop
mov
and
push
push
int
jmp
jnp
repz
repz
sub
or
xor
pop
cmp
push
inc
pop
daa
mov
outsl
pop
mov
sbb
cmpsl
xchg
sbbb
pop
ror
cmp
fstps
leave
ret
rcll
inc
add
cmpsl
cltd
jmp
xchg
lock
fnsave
xor
dec
mov
pop
xlat
movhps
adcl
out
pop
cli
stc
imul
sahf
pop
push
lcall
add
sbb
mov
mov
fimuls
jmp
adc
xor
adc
ds
mov
xchg
xchg
xor
mov
cwtl
enter
jno
mov
inc
xchg
lahf
adc
push
push
sarb
out
jmp
mov
add
xchg
push
push
or
int
adc
shl
nop
jno
xchg
cmpsl
or
enter
or
mov
shll
mov
in
imul
rclb
mov
xor
dec
jecxz
and
lds
adcb
mov
je
ror
mov
fsubr
popf
adc
aad
jo
mov
outsl
ret
in
repz
mov
jnp
add
jl
xchg
fdivrs
js
arpl
mov
ffree
es
pushw
shlb
bound
pop
xchg
xorb
es
inc
adc
dec
push
push
mov
loope
inc
mov
jo
into
cwtl
push
jl
mov
loopne
xchg
push
mov
lret
xor
jl
or
sbb
adc
mov
loope
shlb
jbe
or
mov
lret
fistpl
lsl
add
inc
dec
cmp
outsl
xchg
dec
inc
je
push
push
cmp
addr16
sub
sarb
or
push
or
xor
das
xchg
out
or
sbb
mov
push
gs
aad
adc
or
and
jae
cltd
xchg
jo
aas
cmp
jb
out
cltd
inc
jge
insb
push
mov
mov
test
shlb
out
dec
arpl
mov
push
jmp
xchg
jecxz
std
xchg
fldenv
test
cli
or
xchg
or
inc
mov
jecxz
imul
andl
les
insl
je
in
xor
lods
dec
dec
lea
or
push
movsb
add
or
clc
mov
push
or
adc
pushf
adc
int3
inc
mov
inc
gs
out
data16
icebp
mov
cmp
call
pop
push
ficoms
scas
shrb
xchg
jo
into
jmp
out
jge
rcrl
cmp
or
jo
adc
sahf
in
mov
mov
mov
sbb
push
sbb
scas
cmp
mov
mov
xor
movzwl
mov
rcrl
jge
jbe
cmp
test
sub
push
push
xchg
or
out
iret
ja
sub
mov
mov
adc
dec
sub
adc
cmp
pop
push
cmpsb
inc
shl
jne
fbld
mov
cmp
jl
sub
in
mov
mov
xor
les
leave
adc
sub
repz
dec
push
rcr
enter
jge
movsb
mov
jl
std
xchg
mov
push
lcall
inc
push
mov
mov
sub
or
lods
jp
jg
adc
fildll
imul
mov
out
stos
js
test
ret
push
stos
je
seta
dec
pop
hlt
dec
push
cltd
test
mov
inc
or
xor
clc
insb
cmp
adc
and
xor
in
sub
sub
pause
mov
adc
push
pop
xchg
mov
in
mov
fcmovbe
adc
push
jo
aam
cli
pop
or
into
das
cld
push
rep
cmpsb
jo
dec
rcrb
dec
js
dec
jns
imul
jnp
pushl
imul
inc
mov
lret
jbe
clc
inc
pop
adc
dec
add
dec
xchg
sahf
xor
xchg
and
call
imul
and
stos
pop
loop
mov
ds
data16
test
in
call
add
xchg
lods
inc
popf
filds
mov
push
repz
clc
loope
stos
jbe
sub
das
je
mov
jecxz
inc
test
sbb
imul
rol
pop
inc
clc
pop
dec
pop
inc
jae
mov
sti
ljmp
jb
fnsave
mov
pushf
testb
popa
cmp
sub
lret
movl
lock
fidivrs
add
ud1
popf
repz
ljmp
rorb
loopne
outsl
hlt
insb
inc
mov
xor
mov
xchg
or
cli
enter
sbb
daa
jmp
jno
lcall
pop
sti
mov
xchg
in
mov
push
das
imul
add
sti
adc
js
cli
xchg
push
sub
jns
dec
ret
aaa
fwait
dec
inc
inc
loope
sbb
xor
mov
pushf
fxch
test
mov
fwait
jae
and
jae
dec
jle
sub
test
mov
fldcw
pop
imul
sbb
jo
popa
aad
jo
sbb
xor
lea
add
fwait
pusha
outsb
fmull
das
nop
xchg
test
xor
fwait
and
mov
push
pop
pop
xchg
push
bound
popf
in
push
mov
mov
inc
dec
inc
cmp
mov
jo
dec
jb
xor
push
sbb
dec
and
pop
bndstx
push
movsb
and
das
push
aas
pop
in
or
fnstcw
fs
mov
aaa
daa
add
inc
dec
push
push
lcall
push
outsb
pop
inc
lahf
std
xchg
push
cmp
mov
fists
push
test
and
inc
popa
cmp
mov
xchg
fstl
cld
es
jbe
cmp
xchg
imul
adc
and
sahf
mov
sub
jmp
or
or
pusha
sbb
fnsave
xchg
push
in
bound
repz
fs
jnp
das
imul
sbb
ret
mov
or
push
fwait
add
lret
sub
dec
and
sub
loop
and
aam
jno
test
lret
pop
pushf
xchg
add
mov
ljmp
loop
imul
mov
sbb
jne
xchg
jnp
sbb
aas
pop
das
jo
sbb
mov
in
pop
and
pop
mov
fisttpll
jmp
sub
cs
push
test
sarl
adc
and
and
mov
cwtl
pop
jmp
adcb
ds
xchg
loopne
leave
outsl
cld
mov
iret
notb
cs
out
and
jnp
shrb
jge
adc
fsubrl
inc
cwtl
pop
inc
pushaw
xchg
xchg
pusha
push
mov
bswap
jo
mov
ficoml
in
cmpsl
fildll
js
mov
imul
popf
cld
aaa
test
sub
popf
gs
sti
xchg
add
ret
push
xlat
roll
das
xlat
xor
dec
ret
adc
push
jmp
in
dec
push
mov
lea
sti
sbb
inc
jp
or
xchg
adc
push
out
mov
rcrl
lahf
push
outsl
cmpsl
rolb
dec
fstps
lds
sub
in
xchg
test
js
jle,pt
lret
outsb
adc
fistl
adc
inc
ja
nop
sbbb
adc
fadds
inc
gs
repz
popf
push
cmpsl
scas
scas
jae
jb
and
jle
daa
mov
sbb
mov
lahf
test
mov
mov
leave
xchg
lods
add
xchg
imulb
in
xchg
fldl
scas
push
stc
mov
lods
mov
das
mul
mov
adc
sub
dec
ljmp
das
mov
xchg
fcmovu
nop
pop
sub
add
fcmovbe
aad
sub
mov
push
mov
push
enter
testl
nop
fwait
jne
out
jno
fmuls
outsb
out
xor
add
jg
daa
les
adc
test
or
push
cmc
mov
call
cwtl
push
jl
mov
mov
fcmovbe
cs
out
push
in
cmpl
adc
test
pop
pop
popf
fs
xchg
mov
je
cmp
jge
in
mov
sub
enter
dec
lods
pop
xlat
mov
mov
rcll
lret
cmp
and
shll
aas
mov
mov
sub
jae
movsl
clc
or
mov
jge
in
stos
xor
push
push
movsb
mov
jb
movsl
push
push
ret
and
xor
xchg
xor
sbb
mov
inc
sbb
dec
mov
sub
sbb
test
js
xchg
ds
testb
mov
and
dec
cmp
push
stos
cmp
add
leave
xchg
je
in
es
jmp
sti
rorl
mov
inc
iret
mov
and
lea
int3
sbb
sahf
hlt
add
sahf
inc
out
insb
clc
jae
pop
adc
popa
stos
jae
jb
and
pop
jg
mov
xorl
int3
ret
out
mov
push
aam
cmp
daa
bound
sub
pop
popa
push
mov
out
sahf
pop
and
add
testb
addb
xchg
pop
cmc
test
mov
push
sub
sub
fcmovne
dec
popl
pop
mov
xor
jp
paddusw
jno
bound
push
imul
adc
push
ds
clc
fbld
jecxz
and
lock
stos
xchg
insl
or
pop
pop
adc
in
ret
mov
cmpsw
repz
jecxz
mov
push
inc
mov
or
out
loopne
inc
jg
inc
xchg
shrl
imul
mov
jg
iret
enter
das
inc
lret
js
inc
mov
outsb
jmp
mov
inc
in
cmpsl
fs
xchg
sub
cmp
js
xchg
dec
adc
mov
insl
push
xchg
xchg
xor
fdivr
adc
pop
adc
pop
inc
shrb
adc
lahf
iret
and
sub
testb
and
lds
inc
mov
jo
dec
lods
or
fidivrl
xchg
shll
jge
sub
pop
mov
jb
outsb
data16
pushf
clc
pop
rorb
enter
inc
or
mov
jmp
mov
push
dec
ret
xchg
push
jne
cmp
push
flds
pop
cmp
and
adc
mov
cmp
lods
jecxz
xor
dec
push
dec
mov
push
jnp
loopne
xchg
sub
cmpsl
cmpsb
cltd
jne
jne
rol
cmc
sarb
lock
sbb
push
out
jecxz
push
in
cli
mov
inc
mov
adc
cmpsl
inc
cmc
jo
or
cli
or
in
filds
sarb
mov
cmp
sti
push
cmpsb
idivb
add
in
loope
outsb
stos
stos
pop
cmp
jge
sub
mov
cmpsb
fldenv
sbb
call
xchg
std
je
sti
jbe
pop
mov
mov
shrl
cltd
popf
xor
imulb
pusha
lods
std
ret
xchg
xchg
int
int3
loope
ljmp
jnp
mov
ljmp
in
add
or
je
leave
or
jnp
loope
jo
mov
cli
cwtl
jecxz
add
loop
xchg
mov
cmp
fs
test
mov
fstps
bnd
imul
mov
orl
inc
mov
adcl
mov
inc
dec
and
inc
adc
lret
pop
push
mov
xor
call
mov
push
hlt
and
or
jne
iret
leave
imul
sub
sub
mov
aas
lods
jl
shld
popf
adc
pop
add
pop
add
lcall
jmp
add
xchg
push
test
popa
enter
mov
cmpsl
inc
inc
or
lods
pop
cmp
mov
lret
dec
or
mov
test
xorl
scas
xorl
mov
mov
popa
mov
pslld
push
push
repz
push
dec
mov
add
pop
rcll
push
mov
out
inc
or
jno
mov
mov
imul
cs
adc
gs
rclb
pop
ljmp
fstpl
cmpsl
cmc
out
sub
mov
daa
hlt
cmp
ja
jg
inc
test
and
or
stos
and
les
movsl
lcall
fwait
mov
jle
pop
jnp
in
jo
jno
dec
cmp
in
sub
icebp
inc
mov
iret
sbb
jg
dec
jno
sub
dec
ret
cmpsl
imul
mov
mov
jmp
test
lock
mov
ja
jmp
lea
inc
test
mov
fiaddl
stos
sahf
dec
jno
xor
es
jbe
add
jmp
loope
frstor
nop
jo
inc
scas
jae
jne
xchg
mov
mov
mov
jl
rorl
add
or
test
rcrb
jo
iret
mov
imull
ret
sub
shlb
push
jne
testl
mov
xchg
dec
sub
adc
dec
push
stos
inc
ss
mov
jae
bnd
sbb
cmp
sti
movsl
stos
aas
loopne
mov
sti
fnstcw
mov
or
pop
imul
int
imul
or
into
jo
mov
adc
ret
in
mov
mov
movb
call
test
jb
inc
add
in
js
fstl
adc
pusha
ret
hlt
xchg
adc
inc
pop
push
test
push
es
jae
jne
adc
lock
loope
sbb
es
out
fcoms
mov
push
in
iret
jns
les
adc
mov
in
pop
jp
prefetchwt1
sbb
arpl
mov
repnz
cmp
mov
daa
or
das
sub
into
mov
mov
sbb
and
push
shlb
in
xor
mov
cli
repz
insl
sbbl
mov
mov
iret
adc
xchg
gs
movsl
cltd
fcmovne
dec
fldcw
or
out
jo
mov
mov
pushf
fs
icebp
cmp
decl
das
int3
in
xchg
lcall
lahf
cmp
mov
fimuls
push
adc
push
lods
fdivrp
call
and
sbb
insl
leave
jl
mov
pop
xor
jb
add
es
std
pop
mull
loope
push
xor
scas
adc
push
movl
repz
pop
clc
std
jecxz
and
std
roll
test
cltd
jmp
pop
popa
ror
in
cld
js
mov
mov
cmp
or
pop
xchg
add
dec
sub
ja
dec
pop
loope
testl
imul
dec
adc
jmp
jl
mov
sarl
adc
mov
pop
lods
jp
das
lret
ret
dec
imull
ja
xchg
addl
or
jmp
jns
dec
std
fcoms
inc
clc
aas
ljmp
mov
fidivrl
sbb
jl
notb
movsl
in
or
or
push
es
fs
jle
pop
icebp
pop
fcmovb
adc
repz
xchg
jbe
cmp
sub
adc
loope
cs
xchg
xor
jae
les
outsl
scas
aas
and
cmp
das
out
aad
mov
or
pop
add
add
pop
aad
ret
adc
insb
sbb
pop
stos
mov
testb
outsb
xlat
or
andb
dec
movsl
lcall
dec
xchg
out
cs
mov
adc
cwtl
and
ret
cmpsb
xchg
mov
and
pop
pusha
adc
push
mov
push
jge
sahf
int3
mov
inc
or
mov
add
sti
and
push
mov
shrl
add
sub
adc
cs
jb
adc
mov
sbb
pop
xchg
pop
dec
scas
out
mov
mov
sub
insb
mov
leave
lret
dec
mov
xchg
je
mov
push
jns
push
mov
jne
enter
loop
pop
pop
movsl
mov
stc
aas
lods
add
imul
cmp
jo
sbb
in
adc
pop
push
movsb
gs
cmp
mulb
pop
cmp
enter
add
pushf
mov
ja
sbb
mov
mov
dec
pop
or
pop
xor
push
mov
dec
aad
lods
loopne
mov
repnz
inc
rcll
dec
int
test
dec
mov
mov
fistpl
cmp
cmpsl
or
pop
add
inc
push
jge
dec
or
sub
repnz
insb
pop
pop
sub
neg
mov
mov
pusha
mov
scas
mov
bound
pop
repnz
into
fistl
jmp
popf
lods
fiaddl
dec
std
dec
out
adc
pop
jbe
or
sbb
mulb
cmp
mov
pop
lock
pop
mov
sub
lds
repz
je
cmc
lock
clc
dec
sbb
cmp
mov
mov
nop
and
push
jns
xchg
test
aaa
xchg
mov
out
arpl
sub
aam
add
in
sub
out
data16
pop
cmp
sub
insl
jns
scas
jne
inc
bound
mov
out
jno
pop
popa
jno
fimuls
sbb
xlat
ficompl
mov
mov
cmpsl
or
add
imul
push
faddp
pop
sub
mov
or
inc
pop
push
movsl
cmc
dec
xorb
pop
sbb
out
push
dec
test
pusha
fwait
dec
pop
fidivs
into
jo
mov
out
sbb
test
mov
jge
xchg
mov
dec
into
stc
jg
mov
shlb
fstpt
adc
arpl
and
adc
ja
mov
pushf
sbb
and
sbb
lret
adc
addl
je
ljmp
sub
test
das
xor
pop
cwtl
insb
jl
rorb
ret
mov
sbb
bound
inc
adc
mov
mov
rcr
fcmovu
mov
push
mov
in
mov
mov
mov
rclb
pop
jle
dec
sub
dec
stc
insb
cltd
adc
mov
fiaddl
psadbw
push
xchg
cmp
popa
sub
iret
sbb
in
add
pop
cld
int
sti
mov
and
add
jmp
mov
movsl
aas
aaa
lret
sbb
enter
iret
mov
ret
faddp
es
xchg
cmp
push
cld
outsl
dec
cwtl
cmp
or
adc
les
imul
pop
inc
xor
mov
icebp
xchg
push
xchg
inc
adc
je
push
jno
test
loopne
mov
pop
lret
cmc
movsl
and
and
dec
cmpsb
xor
add
and
mov
jb
dec
cs
test
in
shr
mov
mov
cwtl
pop
pop
sbb
leave
jle
sub
xor
jb
ja
mov
sbb
and
shrl
xchg
xchg
sub
xchg
xchg
fcompl
insb
push
cltd
xchg
sbb
addl
adc
mov
add
mov
and
jb
cmp
mov
test
mov
push
mov
or
jns
cmpsb
fwait
cli
fisttpl
mov
push
sarb
inc
aas
mov
in
mov
mov
in
cmpsb
in
fldcw
push
jno
jmp
cmp
cmpb
shrl
insb
xchg
xchg
xchg
out
mov
xchg
push
mov
bt
jge
cmpsl
out
repnz
test
movsl
fwait
mov
adc
adcb
xchg
into
dec
dec
mov
hlt
and
xchg
icebp
andl
dec
mov
testb
and
mov
mov
ss
or
imul
sti
and
mov
outsl
mov
jns
iret
push
xor
cmp
lock
push
lock
outsl
repz
or
fwait
lea
mov
mov
test
test
lahf
mov
lret
dec
iret
fsubl
or
icebp
push
enter
jno
shl
mov
ja
mov
pop
cmpl
pusha
push
xchg
mov
mov
cmp
mov
adc
sbb
mov
test
inc
inc
sub
lds
cmp
mov
mov
popa
rcrl
mov
sbb
mov
in
pusha
add
mov
cmp
cld
push
pop
mov
jmp
movsb
shll
inc
jne
inc
inc
sbb
movsb
pop
shr
in
loopne
sbb
add
mov
aaa
daa
fcmovnbe
addr16
mov
xor
pop
inc
fldt
adc
cmp
faddl
lahf
movsl
jmp
fs
pop
clc
xor
test
imulb
lods
pop
adc
mov
fwait
dec
dec
push
xlat
cmp
xchg
lcall
mov
adc
enter
test
arpl
xchg
fcmove
repnz
enter
xor
pusha
add
pop
mov
movsb
cmp
fmulp
addr16
out
push
pop
push
test
pop
cwtl
pop
es
or
stos
cmp
xor
rcll
iret
push
jmp
movsb
ss
mov
jne,pt
test
add
data16
sub
outsl
ljmp
insb
stos
fs
mov
xor
jnp
push
mov
lcall
fisubl
push
ret
inc
jecxz
inc
pushf
adc
sbb
shrl
pop
out
dec
les
add
and
shlb
leave
sbb
je
mov
lds
add
int3
cs
cmp
aad
mov
push
cmpsb
pop
pop
push
out
push
iret
ljmp
ret
cmp
das
add
jge
adc
cmp
adc
pop
push
lret
stos
icebp
pushf
lods
dec
mov
xchg
inc
add
xchg
jae
aam
dec
pop
pushl
lret
lret
inc
xor
pusha
sbb
cmpsb
ret
shl
movsb
adc
mov
sbb
jmp
cmc
ja
lret
sub
mov
sub
add
inc
pop
dec
loope
push
add
andps
push
iret
inc
push
ffreep
mov
mov
call
cltd
mov
adc
cmp
out
jno
cmp
or
loop
xor
sub
xchg
mov
int3
xlat
lahf
test
std
sbb
imul
shrb
idivl
pop
rol
subb
daa
das
push
mov
daa
and
inc
lret
inc
sarl
roll
mov
test
jo
jmp
or
popl
in
outsb
out
mov
xchg
mov
cli
add
les
cmpsl
sbb
mov
mov
add
push
mov
lahf
inc
fldl
pop
imul
lret
lods
add
test
and
cmp
fistpl
xor
mov
or
ss
cwtl
icebp
dec
nop
mov
cmpsl
cwtl
jmp
cmp
test
out
mov
repnz
in
call
out
push
xor
adc
jo
cmp
or
lock
fistpll
shrl
sub
xor
or
jnp
cmp
sbb
sbb
lods
jo
push
out
cmpsb
inc
stos
jmp
orl
push
in
push
dec
cwtl
add
out
push
arpl
and
sub
sub
ret
ds
or
push
adc
jo
jle
push
jl
xchg
lods
fwait
mov
cwtl
or
mov
fdiv
in
xlat
rcrl
nop
lret
leave
in
adc
insl
movsl
sub
es
push
adc
inc
test
dec
inc
cli
push
dec
cmp
int3
das
leave
leave
mov
or
dec
mov
add
and
cmpsl
mov
cmpb
stos
fwait
lock
push
inc
mov
pop
push
pop
jno
and
cltd
lods
lods
fimuls
mov
push
call
cmp
orl
mov
cmp
lods
jns
add
pop
push
sti
insl
xchg
mov
pop
bound
fldt
jge
xor
jge
aam
fnsave
xor
pop
out
xchg
adc
adc
sbb
dec
pop
push
or
xor
mov
sti
and
jl
xor
in
call
gs
shrl
pop
push
cmp
xor
rolb
hlt
movsl
repnz
in
pop
dec
and
js
scas
push
adc
gs
cmp
pop
adc
add
outsl
and
cmp
cmpsb
adcb
dec
mov
pop
inc
mov
mov
cmp
mov
mov
sar
cmp
sti
add
push
dec
out
adc
notl
test
es
mov
jno
movsl
xor
les
flds
dec
nop
mov
lea
cs
fstpt
xor
and
pop
pop
inc
data16
or
ds
leave
jge
mov
sub
js
mov
adc
sahf
movb
movsb
push
sti
mov
test
sbbl
ds
cmp
cmp
in
and
shrb
xor
rol
shll
outsl
push
gs
mov
hlt
movsb
jl
inc
stos
pop
mov
pusha
jns
xchg
or
cs
adcb
addl
cmc
mov
ja
cmp
cmp
pop
push
pop
aas
dec
flds
rorl
sti
outsl
fwait
add
mov
mov
push
nop
mov
pop
ret
test
dec
js
dec
xchg
add
push
clc
jbe
mov
popf
mov
insb
adc
sahf
push
mov
mov
in
add
pop
lea
imul
mov
push
popf
add
mov
xlat
adc
jae
lret
popa
sub
push
cli
dec
shl
loope
adc
scas
xor
jg
fdivrl
js
dec
dec
pop
push
dec
pop
stos
lods
int3
or
pop
dec
in
call
sbb
or
cmp
xorl
or
cmp
rcrb
sub
ds
fists
push
push
stc
lahf
or
insb
mov
sub
dec
cld
movb
mov
push
xor
xor
and
lahf
mov
in
sub
xor
xchg
or
fsubl
scas
stos
test
add
js
test
cmpsl
lcall
pop
cmp
icebp
mov
mov
cmpsb
or
pop
ljmp
loope
pushf
std
mov
test
jae
stos
subl
push
push
int3
adc
shrl
mov
fcmovnb
out
push
pop
in
lahf
scas
and
inc
xchg
mov
int3
push
cmpsb
jb
sub
dec
lret
xchg
popf
xchg
push
jnp
jg
mov
cmp
mov
pop
pop
inc
xchg
repnz
add
push
add
adc
lret
xor
imul
add
lock
cmc
adc
into
scas
push
cwtl
sub
out
lea
cs
pop
mov
push
jge
fcmovnb
jle
movsb
add
addr16
or
std
push
mov
xchg
stos
fcomps
out
lods
mov
cmpsb
int
mov
mov
jl
imul
xchg
shll
mov
add
adc
lock
sarb
addr16
cmc
fnstsw
cltd
pop
sbb
and
cmpsb
into
arpl
int3
daa
mov
sbb
nop
fiaddl
jle
xor
sahf
dec
jl
cmc
xchg
sti
test
add
xor
test
sbb
pop
xor
fdivrl
pop
xchg
mov
jp
std
jmp
mov
test
mov
sub
fidivl
jge
mov
and
aam
insl
xchg
mov
js
pop
repz
pop
stos
jns
jbe
popa
out
mov
dec
cmp
inc
mov
xor
or
dec
pop
sti
insb
mov
adc
imul
sti
leave
or
out
or
imul
filds
ds
inc
xor
std
xor
scas
adc
mov
jp
adc
inc
cmp
ss
sarl
loop
lar
shl
push
dec
aaa
jg
mov
dec
lret
mov
xlat
shll
sub
fsts
mov
or
jns
das
rcrb
sti
add
jne
rcrl
loopne
pop
mov
in
sub
arpl
dec
cmpsl
add
jns
pop
outsb
call
jmp
lods
dec
cmpsb
or
popa
frstor
inc
inc
leave
cmp
jecxz
and
in
jmp
pop
sub
add
daa
push
sbb
mov
pop
jo
sub
enter
daa
mov
and
int
aam
cli
dec
iret
repz
mov
mov
adc
push
inc
pop
and
xor
lcall
ret
xchg
daa
call
in
push
inc
ja
cli
mov
rclb
mov
push
push
cld
sbb
push
pop
sbbb
sub
pop
inc
dec
xchg
pop
loopne
pop
and
mov
enter
arpl
fsubp
test
or
mov
mov
imul
mov
mov
xor
xchg
loop
roll
mov
mov
imul
dec
in
aas
add
inc
dec
or
mov
scas
mov
jnp
mov
das
jne
int3
jmp
out
inc
jp
clc
ljmp
hlt
xchg
pop
pop
rolb
mov
add
push
ret
adc
mov
xchg
into
or
int
lock
dec
xor
pop
jnp
dec
adc
fsub
addr16
add
inc
sbb
pop
mov
hlt
push
std
pop
mov
test
mov
loope
xchg
xchg
cmp
mov
cmp
sub
movsl
loopne
mov
dec
adc
mov
add
push
stc
xor
into
in
lea
cmc
mov
sbb
xor
pop
fists
dec
pop
xor
es
mov
mov
jae
es
fcmovbe
sbb
in
aam
pop
icebp
je
and
xor
test
mov
cmc
xor
mov
jmp
mov
rcrl
ljmp
inc
int
cli
aam
popa
mov
adc
pop
cmc
pop
and
xor
mov
cmpb
iret
sub
test
push
icebp
stos
push
cltd
jbe
xor
sahf
mov
cmc
popa
mov
loopne
out
test
enter
fcmovnu
cmp
sbb
cmpsb
aam
jb
xchg
cmp
push
popf
outsl
test
fstpt
xor
sub
call
aas
ret
out
inc
mov
xchg
stc
push
call
mov
inc
mov
push
dec
mov
and
cmp
shrb
jb
leave
push
inc
in
sti
aaa
xchg
cmpsl
test
add
jo
out
xchg
jge
dec
mov
in
cmp
fwait
xchg
cltd
sbb
jp
sbbl
out
clc
jns
jmp
sahf
mov
and
rorl
add
call
int
divb
inc
jmp
fsts
pop
jnp
in
xlat
mov
mov
mov
repnz
jle
mov
mov
js
cmp
sub
lahf
mov
mov
xchg
jg
call
push
cmp
cmp
and
lds
stos
aam
push
push
mov
and
inc
shr
xor
dec
ret
scas
int
push
and
sahf
mov
mov
cli
mov
shlb
mov
or
add
jg
xorb
add
mov
rcrl
dec
pop
icebp
std
mov
adc
popf
outsb
lahf
mov
movsb
mov
or
addr16
push
cld
lret
or
ret
insb
xor
jmp
es
mov
jbe
mov
adc
xor
stc
sbb
cltd
mov
arpl
xchg
mov
lea
jmp
leave
daa
arpl
rolb
lds
loopne
jle
mov
loop
cltd
sbb
lahf
sub
lea
pop
jle
jo
cmp
mov
cmp
lret
jle
test
icebp
adcl
addl
xor
loop
mov
sub
dec
ljmp
cld
xor
xchg
mov
pop
inc
jne
add
mov
loope
cmpsl
ret
hlt
jno
mov
cmc
sub
xchg
adc
xchg
arpl
nop
int3
sub
ss
cli
pop
or
movsb
pop
xchg
push
cs
movsl
cmp
shll
pushf
lods
hlt
in
fnstsw
mov
cmp
fcoml
dec
ret
or
insl
inc
rcrl
xchg
addr16
in
mov
pop
popf
lret
test
testl
or
adc
jge
arpl
or
pop
call
lods
mov
xorl
pop
movl
aam
mov
insb
lahf
cmc
stos
push
xor
sub
pop
stos
lods
jg
mov
xlat
fwait
add
sub
test
repz
adc
inc
inc
loope
jmp
jbe
test
jb
jbe
mov
imul
out
inc
loopne
push
push
pop
das
in
pushf
sub
push
sbb
cmp
in
sbb
jg
mov
mov
add
fidivrs
pop
mov
fisttpll
call
scas
dec
addr16
dec
lea
push
dec
push
push
mov
or
fldl
fcmovne
out
pop
push
jmp
xlat
add
add
repz
fadds
lea
xlat
push
fisubrs
pop
jne
sbb
jl
and
fwait
sbb
shll
sbb
jge
xor
in
jb
cmp
add
insl
and
rcr
jg
hlt
aam
decb
orl
jmp
xor
cmp
pop
cmp
push
mov
adc
in
mov
jbe
clc
or
xlat
sahf
test
add
sbb
xchg
jb
xorl
jl
or
add
test
push
fnstsw
in
sbb
add
pusha
leave
ret
jle
sar
lods
movsl
cli
pop
jb
xchg
xor
mov
daa
inc
sbb
and
fs
ret
cltd
push
sub
mov
mov
je
and
mov
dec
cmpsb
nop
scas
ds
pop
cltd
xorb
mov
lds
dec
jecxz
dec
movsl
rorl
push
lahf
inc
pushf
addl
daa
mov
or
jb
and
test
xchg
lahf
stc
cld
ret
cli
xchg
push
je
repz
add
divb
mov
pusha
inc
bound
inc
aas
enter
dec
in
dec
cmp
add
jnp
testb
sbb
in
add
aas
lret
cpuid
int3
lea
cld
imul
inc
mov
mov
das
repnz
jo
int3
pop
jne
xchg
cmpl
movnti
xor
rcrl
pop
out
push
mov
mov
lret
lock
out
adc
iret
inc
cmc
dec
adc
sub
xchg
and
inc
dec
xchg
insl
pop
cmp
flds
inc
popa
repz
or
loop
sub
lea
scas
stos
push
imul
and
rorb
sbb
sbb
loopne
add
jns
fistpll
adc
dec
push
fidivl
jnp
pop
aaa
test
into
outsl
push
test
xlat
out
hlt
jg
mov
divl
cmpsb
add
leave
inc
movsl
lock
fcomi
xchg
stos
push
fcoml
fnstenv
inc
add
push
xchg
sti
add
test
jo
fldl
mov
jnp
popa
sbb
sbb
adc
sti
or
ret
mov
sub
dec
sub
out
aaa
xor
sub
jl
nop
push
xor
lds
push
fnsave
push
mov
icebp
mov
ljmp
push
cwtd
adc
popf
fst
add
fldcw
add
sti
jbe
push
test
loopne
test
inc
mov
xlat
or
add
ljmp
mov
fstpt
in
iret
add
ret
hlt
int3
xchg
lret
inc
and
jae
pop
mov
daa
insb
jmp
xchg
mov
add
lcall
nop
arpl
push
cli
jge
int3
push
lods
pop
fadds
pusha
addr16
stos
xor
jp
lahf
adc
filds
mov
jns
xchg
sub
push
mov
mov
dec
sub
int
adc
xsaves
inc
xchg
push
std
sbb
push
insl
xorb
jbe
pop
push
dec
push
fwait
sub
add
mov
shll
push
inc
jge
mov
stos
pop
mov
jge
push
imul
dec
lret
jne
je
out
sub
test
aam
std
sub
jo
lock
cmp
sarl
stc
pop
and
pop
out
adc
leave
data16
adc
aaa
add
mov
jo
jecxz
cltd
hlt
xchg
inc
inc
enter
mov
cmp
mov
lret
shll
into
sub
andb
sub
je
insl
lock
push
mov
jle
repz
dec
sub
das
mov
stos
adc
or
das
mov
push
or
mov
mov
mov
or
cmp
ret
pop
call
out
in
aaa
sti
push
jnp
push
inc
sbb
xchg
aad
sbb
pusha
or
dec
imul
outsl
movsl
push
cmp
gs
shrl
inc
or
icebp
jns
cmp
dec
lods
and
sbb
fsin
aaa
cmpsl
add
sbb
adc
mov
jae
add
test
fwait
shl
pop
pop
dec
push
and
lock
mov
dec
push
mov
dec
hlt
test
adcl
or
lods
leave
loope
pop
lods
adcb
inc
addl
outsl
cmpsb
jno
xchg
sub
or
mov
es
aas
and
negl
in
mov
xor
ret
out
inc
push
addr16
bound
sbb
mov
es
leave
ret
hlt
clc
pop
cli
or
negb
xor
jmp
orl
inc
sbb
es
int
mov
fucomip
clc
frstor
fistpl
inc
jns
je
movsb
xchg
add
mov
cld
fstps
mov
lcall
lret
mov
lods
ss
loope
adc
push
scas
mov
ret
fsubrl
pop
es
add
in
cmp
test
pop
shrb
add
orb
mov
clc
pop
lsl
lret
test
and
test
addr16
adc
fisttpll
cmpsb
fcmovu
inc
mov
pop
fisubl
or
push
mov
mov
inc
std
jge
cmp
dec
sbb
sub
pop
xor
mov
enter
outsb
pusha
lods
mov
xor
add
adc
inc
or
xchg
mov
pop
lock
mov
in
sti
fcomi
outsb
stc
adc
scas
outsl
int3
mov
movsb
mov
add
dec
fstps
push
jns
xchg
push
cmp
cld
add
sti
leave
daa
clc
fldt
insb
jne
adc
insl
sbb
lea
das
nop
jecxz
dec
addr16
test
loop
sbb
nop
adc
arpl
and
mov
out
xchg
jb
pop
lea
jb
es
in
and
scas
ficompl
inc
gs
sub
and
xor
xchg
add
cmp
lods
mov
clc
adc
fcom
orb
loope
jmp
and
and
mov
mov
arpl
out
mov
add
std
mov
shlb
das
inc
adc
jg
sbb
pushf
xchg
mov
push
mov
dec
rorl
and
in
hlt
push
out
xchg
mov
cmp
mov
cwtl
adc
addl
inc
cmp
std
jge
popa
mov
jp
xchg
scas
loop
xchg
insb
pop
xor
dec
mov
cmp
xchg
jecxz
shrb
loopne
cwtl
sbb
mov
rcrb
cmp
rcrl
inc
sub
pop
imul
and
std
sarl
cmc
inc
icebp
pop
pushf
push
pop
inc
daa
into
inc
add
popa
dec
fwait
push
push
add
ficompl
adc
loope
icebp
mov
ret
mov
sbb
jb
scas
or
in
inc
push
pop
push
mov
mov
rcrl
cmc
inc
mov
subb
pop
mov
sub
or
mov
pop
leave
push
jns
add
xchg
stc
call
dec
loop
push
dec
push
jno
mov
inc
sub
sbb
pop
pusha
dec
dec
push
loope
and
xor
xchg
repnz
scas
lods
mov
stos
xchg
stc
imul
out
xor
cltd
icebp
fcmove
add
mov
dec
aam
jne
add
sbb
or
movsb
jb
test
ret
jb
pop
mov
jle
js
addr16
cltd
test
pop
xchg
test
ret
into
cld
sub
gs
stos
sbbl
ja
rcll
pop
jle
dec
sub
pop
push
mov
loope
ljmp
and
jb
lea
sbb
lea
mov
lcall
jbe
pop
pop
lods
xchg
push
js,pt
out
ret
ja
sahf
mov
insl
jp
push
mov
sub
sbb
in
das
xchg
mov
push
mov
inc
push
inc
push
push
repz
xorl
dec
push
sbb
push
sbb
pop
rclb
je
in
push
fwait
jmp
lret
or
cmpsl
in
jo
jmp
jo
add
les
daa
mov
jo
cmp
xchg
scas
pop
enter
mov
lock
fwait
push
ja
xchg
leave
stos
pop
adc
int3
addr16
add
push
sub
ret
cmpb
iret
push
adc
inc
fmulp
outsb
adc
daa
fs
jmp
pop
fsubrs
fisubs
imul
testl
idiv
xor
or
clc
shll
jg
iret
sbbb
jno
frstor
xor
xor
inc
xorb
stos
mov
in
ret
repz
jbe
rcll
ds
daa
iret
push
sbbl
cmp
adc
pop
and
jo
xorl
jmp
dec
and
mov
push
out
cld
jl
ret
loop
add
cmpb
inc
ds
cmc
push
mov
sbb
fisubrl
xor
mov
add
inc
stc
xchg
test
dec
lds
cwtl
fiadds
gs
test
jmp
inc
repz
adc
orl
jp
clc
negb
xor
pop
cmp
insb
jl
pop
and
loopne
add
xorl
pop
cmpl
or
and
fldenv
in
cmp
rcrb
pop
adcl
sbbl
inc
test
mov
lret
pop
and
mov
mov
leave
push
xchg
pushf
push
mov
cli
insl
pushf
cld
scas
dec
cmp
movsb
nop
test
fsubl
jg
daa
sbb
stc
mull
ficomps
inc
movsb
push
or
push
ret
dec
clc
jl
cmp
and
xor
cmp
shll
add
fiadds
aad
pop
subb
cltd
faddl
ljmp
jne
or
mov
jp
in
ds
lods
push
and
icebp
insl
out
or
in
jb
leave
xor
mov
lods
dec
mov
xor
mov
nop
jo
jae
daa
cmp
jmp
filds
sbb
jb
rcrl
sub
mov
xchg
jae
pop
pushf
test
mov
sti
pop
mov
ljmp
inc
and
pusha
popf
negb
jp
dec
mov
pop
ficomps
xchg
fldcw
daa
and
mov
pusha
ret
push
adc
shll
cmpsb
loopne
xchg
test
cld
jg
pusha
inc
iret
or
add
ss
pop
mov
sub
aam
das
pop
lds
mov
jne
das
sbb
xor
fisubs
std
inc
loop
jnp
mov
scas
cmp
int3
pop
sbb
push
stos
out
xchg
stc
das
out
jae,pn
sub
mov
lds
out
push
or
aad
pop
aas
cltd
jmp
and
test
lahf
lret
into
dec
or
add
cmpsl
adc
xor
lret
inc
fdivrp
cmp
mov
pop
push
xor
pop
nopl
or
push
push
cmp
cmp
dec
dec
fs
ljmp
daa
dec
hlt
in
xor
lds
and
mov
fsubr
repnz
mov
outsl
add
hlt
scas
out
mov
mov
cltd
mov
movsl
adc
call
cmp
fstps
cltd
sub
inc
mov
mov
shrb
pop
or
out
in
push
push
and
out
push
mov
mov
dec
rcll
test
cmp
inc
je
cltd
fldl
add
sti
cld
dec
inc
fiaddl
ja
mov
xor
jp
es
into
push
sub
ljmp
and
fcmove
pop
sub
ret
shll
lahf
jbe
dec
dec
enter
jp
mov
int
jnp
dec
and
in
jge
cli
jmp
int3
cmp
adcb
xchg
jno
dec
dec
iret
lock
stos
inc
pop
in
cmp
pop
mov
nop
cmp
mov
or
cs
pushf
ret
shl
pause
loope
adc
push
mov
into
mov
jns
xor
mov
rcll
mov
inc
mov
pop
pushf
xor
std
xchg
cmp
xchg
sbb
mov
push
jno
stos
out
inc
push
nop
out
loop
add
mov
or
xchg
leave
push
mov
mov
xchg
leave
push
xchg
inc
shlb
addb
jbe
push
and
xor
in
pop
push
idivl
inc
and
mov
call
sbb
iret
cmp
sbb
gs
rcrb
mov
cmpsl
out
mov
addb
inc
filds
into
jo
ja
mov
mov
popf
mov
inc
lods
test
rcl
add
mov
in
mov
sbb
xchg
ja
lods
jo
xchg
xor
sbbb
xor
sbb
mov
pop
sbb
add
lret
pop
sub
fs
push
jmp
or
sbb
in
push
and
mov
push
and
add
nop
or
inc
xchg
test
pushf
jbe
jle
xchg
push
in
add
mov
lret
mov
dec
fwait
iret
mov
pop
fldl
aaa
xor
fidivl
mov
data16
and
sub
push
jl
xor
adc
push
or
xchg
dec
divb
js
lret
add
cmp
push
enter
mov
arpl
loope
mov
or
in
insl
or
sbbl
or
cmp
pop
int
ss
rorb
pop
out
and
shl
adc
dec
mov
repnz
mov
jns
mov
push
push
jo
jge
dec
jno
loopne
fstpt
iret
pop
dec
xchg
into
test
pop
cld
fists
and
mov
adcl
sub
push
nop
pop
xor
inc
sub
sbb
pop
pop
pushf
lcall
dec
jae
pop
mov
cwtl
inc
popa
aas
jmp
jne
jne
or
push
cmc
repz
mov
cmpb
lret
adc
inc
mov
jb
inc
or
movsl
xchg
mov
mov
jp
pop
inc
mov
or
cmovo
pop
leave
jp
push
popa
ja
cmp
dec
xor
push
cmp
sahf
xchg
add
lcall
cmpsl
in
push
daa
and
fbld
mov
sbb
cmp
dec
int
nop
sbb
scas
add
cmpsb
mov
jmp
cmpsb
xchg
push
sarb
inc
leave
loop
push
testb
outsb
adc
mov
scas
jno
and
shlb
push
imul
dec
fdivl
jp
leave
arpl
sub
xchg
bound
test
or
ret
mov
cli
sbb
arpl
or
sbb
in
and
mov
jb
shrb
loop
push
setb
lea
push
cld
movsb
pop
sarb
or
in
negb
push
cli
sbb
cmc
mov
out
gs
and
aad
leave
xchg
imul
psrld
in
pop
jnp
movsl
lock
call
add
lods
lods
mov
test
pop
sub
cmp
test
and
nop
neg
repnz
aam
ret
pop
fcmovu
and
mov
call
int3
inc
inc
ds
fisttpl
push
cwtl
cltd
test
push
iret
add
pmullw
rolb
mov
hlt
dec
clc
or
xor
push
dec
les
pop
addr16
fmull
and
adc
insb
popa
testl
fs
mov
test
or
aaa
sbb
dec
outsl
int3
in
mov
adc
or
addl
pop
popf
adc
adc
mov
xchg
push
hlt
mov
mov
mov
bound
daa
sbb
addr16
pop
inc
or
in
cmc
adcl
jle
mov
fstpt
inc
es
lods
ljmp
vdivpd
pusha
mov
push
push
push
push
cmp
bound
pop
ljmp
sti
dec
adc
movsb
mov
scas
rcr
push
sub
arpl
fstl
lods
push
push
mov
ret
mov
cmp
out
xchg
pop
jno
xor
jl
adc
es
cwtl
push
loop
mov
cmc
mov
inc
mov
cmp
test
sub
cmp
cmpb
mov
shl
int3
outsb
test
fs
mov
sub
push
bound
jno
inc
mov
pop
gs
lcall
push
cmp
add
xor
add
andl
seta
repnz
cmp
sub
fnstenv
add
mov
fnstsw
xchg
jnp
test
jbe
xor
mov
loopne
into
cmp
lret
jo
add
mov
push
insl
xor
sar
adc
popf
cli
loopne
or
daa
xor
into
fisttpll
scas
scas
std
aam
pop
xor
aas
lcall
lahf
int3
inc
jle
ja
dec
jg
push
push
or
or
and
push
ret
lahf
pop
cmc
or
das
sub
xchg
outsl
rorl
push
xchg
orb
mov
scas
adc
int
xchg
iret
mov
mov
hlt
frstor
cmp
movsl
and
test
inc
or
mov
int3
aam
pop
xchg
or
jo
lret
adc
mov
sub
mov
lahf
cmpsb
jne
mov
pop
pop
sahf
jl
loop
dec
aas
addb
es
fistps
dec
jp
ffreep
loopne
pop
jge
dec
pushf
cld
jb
lock
insl
mov
lock
adc
mov
cmp
mov
movb
mov
push
in
pusha
adc
cmc
cmp
test
mov
push
lcallw
xchg
inc
daa
xor
and
mov
inc
lods
leave
mov
or
cmp
scas
inc
in
int
cs
mov
or
ret
fiaddl
mov
jb
loop
into
xchg
push
and
dec
pop
insl
decb
outsb
mov
lea
xor
adc
pop
push
mov
mov
les
popa
clc
adc
bnd
pushf
jnp
sbb
push
mov
or
lea
xchg
pop
dec
xchg
mov
fwait
cmp
negb
sub
pop
xchg
and
roll
sbb
jp
into
pop
movl
mov
push
push
sub
lods
les
les
repnz
and
in
inc
lret
loopne
mov
mov
jl
and
stos
and
and
and
out
sti
ja
mov
pop
lahf
jg
push
jo
mov
repz
or
scas
fwait
inc
lret
fucomip
or
sarl
sub
mov
shlb
mov
or
lahf
lods
imul
sbb
ljmp
fadds
pop
ret
fistl
cmc
inc
xchg
jl
sub
dec
jle
xor
std
clc
and
sub
ret
mov
xchg
jno
stos
ljmp
je
adc
add
jae
mov
iret
outsl
in
pusha
jecxz
mov
fisttps
lahf
pop
scas
mov
mov
andl
test
in
cmp
or
mov
jp
shll
lds
popf
mov
outsb
jns
cvtdq2ps
cmpsl
xchg
cs
xlat
inc
gs
adc
add
fwait
add
ss
imul
adc
test
mov
add
cmp
or
and
int3
cmp
jp
add
jl
sahf
adc
mov
mov
push
pushf
in
or
push
scas
pop
inc
lcall
xor
or
xchg
inc
jns
mov
lods
cltd
jge
outsb
and
cmp
test
adc
mov
xlat
add
xchg
divb
sti
xor
mov
pop
idivl
xchg
mov
mov
dec
pop
inc
pushl
add
or
icebp
jmp
mov
jp
fidivrs
lock
das
cmp
clc
cli
or
jne
test
mov
mov
sbb
cmp
jecxz
cmp
or
push
ficoms
jae
stos
test
cli
aad
out
lcall
cli
dec
xchg
hlt
stc
add
xor
add
aas
pusha
pusha
cli
xlat
jb
sub
xor
rorb
test
pushf
push
iret
cmpsb
test
jbe
jle
test
mov
jge
imul
cmpsl
data16
data16
push
and
mov
loop
pop
jno
imul
mov
mov
add
fwait
enter
lods
aam
jns
mov
repnz
adcl
pop
es
out
sahf
inc
bound
fdivrl
cmpl
or
adc
jnp
mov
jo
test
adc
aas
sbb
inc
push
pop
inc
fldl
ret
cmc
inc
imul
dec
out
jmp
xor
and
shll
sub
mov
xchg
movsb
add
jl
ljmp
ja
add
push
inc
fwait
pop
xorl
jnp
into
rcrl
dec
lcall
test
test
test
int
mov
rol
andb
stos
cmpsb
cmp
fs
subl
or
leave
xor
xchg
daa
mov
int
xchg
shrl
inc
inc
pop
lcall
je
mov
jb
stos
push
fwait
dec
mov
xchg
jo
test
mov
xchg
adc
shll
xchg
fcomps
pop
mov
popa
clc
fwait
mov
dec
mov
jmp
mov
cwtl
mov
add
jno
jmp
cmp
dec
bound
rolb
iret
pop
jp,pt
cmp
jb
add
lock
jno
lods
outsb
lds
sub
or
mov
and
fwait
cmc
xor
int3
imul
ljmp
sbb
lods
in
dec
cmp
add
mov
fsubrs
cltd
xlat
outsl
inc
stc
aas
add
mov
xlat
mov
xor
mov
sahf
test
test
xor
lods
in
into
sarl
ficomps
std
and
push
jecxz
mov
jo
push
aad
pop
push
mov
cs
jno
ret
adc
xchg
push
in
pop
fidivrs
jns
jbe
inc
xor
out
xchg
enter
test
pushf
outsl
ss
pop
je
xor
cmpsb
cmp
inc
pop
cwtl
xor
mov
jmpw
test
in
mov
push
gs
insl
add
add
mov
and
or
sbb
out
jmp
xor
in
lea
fsts
gs
call
pop
xchg
push
pop
pop
arpl
repnz
mov
sub
enter
jno
sahf
imull
repnz
push
cmp
jbe
test
ret
sti
and
dec
mov
repnz
jg
mov
add
sbb
bound
repz
loop
and
in
xchg
mov
je
in
pop
pop
out
loope
rcrb
jge
fiaddl
or
cmp
fcmovnb
inc
dec
sub
int
sbb
aam
iret
loope
test
mov
xchg
xor
lds
mov
or
mov
cmpl
pop
pop
aad
pop
push
divb
vpsrlq
or
dec
inc
clc
and
subl
fcoms
mov
jl
pop
leave
jp
divw
test
or
adc
xor
jnp
out
jecxz
mov
imul
les
cli
pop
shll
jne
fwait
push
les
mov
mov
mov
scas
and
sbb
push
fldl
add
stos
inc
pusha
push
add
ftst
es
pop
fxch
mov
xor
xchg
jbe
bound
inc
xchg
mov
or
sarl
add
shrl
js
add
daa
in
sbb
cmc
popa
sub
xor
fwait
inc
xchg
loope
inc
inc
jg
push
repz
jp
nop
ds
cmp
addr16
popl
mov
lcall
adc
push
loop
push
jne
push
or
sub
inc
mov
add
mov
lock
in
dec
iret
inc
cld
sub
jne
mov
cltd
xchg
jp
mulb
dec
addb
ret
lock
scas
sahf
sub
into
cmp
mov
sahf
push
aas
xchg
mov
cltd
mov
cld
pop
mov
leave
lds
xchg
cmp
adc
sub
push
or
xlat
popa
pushf
subl
sub
lahf
idivb
dec
xor
push
inc
push
push
rolb
jge
pop
arpl
ljmp
pop
out
sbb
and
pop
pop
mov
and
push
lret
fsubs
push
sub
shlb
pop
cmpsb
loopne
test
add
cmp
in
aaa
and
stc
or
jg
movsb
nop
outsb
cmp
and
or
out
xchg
push
jl
dec
in
and
mov
pop
push
cmp
xor
mov
mov
mov
stos
lds
mov
nop
movl
adc
jmp
lods
std
sbb
fsubrl
mov
mov
jge
and
sahf
sbb
stos
test
mov
test
and
in
pop
ja
sbb
add
popf
xor
fisubrs
xor
mov
sub
addr16
mov
cs
xchg
pop
test
mov
jne
mov
cmp
call
jmp
jno
jecxz
mov
shlb
xor
daa
dec
pop
std
imul
pop
pop
test
cmpsl
fwait
dec
push
sbb
faddl
imul
xor
in
pop
push
int
jns
call
cmp
xor
mov
adc
sub
into
xlat
sub
sub
pop
mov
call
arpl
popf
dec
mov
std
nop
pop
aam
jl
hlt
lret
fwait
into
push
idivb
and
push
dec
inc
jle
das
sub
je
xchg
lret
sub
xor
test
mov
je
fidivl
sub
sbb
lods
shrb
mov
nop
dec
mov
sbb
mov
jge
test
sbb
addb
mov
dec
fisubrl
pop
inc
cmpsl
mov
xorb
cli
add
and
xor
fidivs
mov
ljmp
imulb
xorb
pop
in
mov
movsl
and
pushf
mov
lcall
sarl
sub
xchg
fiaddl
int
pop
jbe
xor
cmp
out
dec
mov
mov
sbb
jmp
data16
ret
lcall
jne
icebp
call
or
jae
ss
jg
adc
mov
mov
ljmp
pop
jne
mov
sbb
inc
mov
pop
test
clc
jg
and
mov
fstp
daa
fwait
or
imul
jmp
jmp
push
fsub
sub
push
inc
inc
hlt
ljmp
adc
ret
fsubrl
nop
fldcw
data16
xchg
cwtl
dec
aas
pushf
inc
in
shl
aad
mov
subb
test
adc
cld
cmc
iret
jle
aas
out
adc
fcoml
jmp
popf
mov
rol
ds
cld
and
push
adc
inc
cmpsb
pop
shrl
ds
aam
jno
add
lahf
and
jg
loope
dec
cmp
sbb
fidivrl
jnp
pop
out
sub
inc
mov
sahf
out
rcll
xlat
movsl
mov
pop
adc
jp
xor
and
mov
xchg
cmp
push
daa
mov
add
sub
pop
addr16
xor
push
xchg
int
mov
loope
fdivrs
dec
lea
and
insb
fistpl
imul
lods
arpl
shlb
das
fimuls
movsl
paddusw
lret
mov
jl
div
cld
jg
rclb
push
sbb
scas
xor
jbe
popa
dec
repz
ret
jle
pop
lret
popf
mov
stos
sbb
daa
inc
mov
fsts
gs
lahf
cmpsb
and
movsl
int3
cmp
jl
insb
les
and
inc
jno
nop
sbb
enter
sbb
adcl
push
std
cltd
jo
cmp
cmc
push
ffree
mov
xchg
and
aaa
jmp
jge
stc
xchg
iret
cli
aad
mov
stos
lret
sub
and
xor
cmp
out
test
mov
sbb
aas
faddp
sub
and
flds
adc
leave
ja
scas
pusha
cmpsl
psubb
pop
nop
dec
push
adc
jmp
out
shlb
shlb
jge
das
or
daa
mov
imul
pop
inc
jg
data16
lods
or
ret
or
jg
push
movsb
rcll
fistl
inc
mov
add
aam
lcall
jns,pt
adc
inc
sbb
push
fsubrs
push
pop
cmp
testl
and
fiaddl
pop
stc
fistps
cld
jno
stos
push
xor
add
gs
push
aam
divb
pop
push
in
cmp
cmp
std
in
cmp
cs
adc
imull
push
pop
jmp
cmp
fdiv
imul
xchg
addr16
ds
loop
jp
lock
leave
cld
ror
sarl
sbb
out
sahf
fwait
test
fidivs
mov
cli
jg
and
mov
enter
xchg
nop
sub
push
lock
sbb
mov
ja
mov
mov
repz
jae
ljmp
jo
xchg
sbb
add
fcoms
mov
jae
xchg
dec
shll
test
imul
negb
aas
fs
add
push
push
sbb
shl
shll
enter
mov
push
mov
mov
pop
or
sub
incl
mov
aam
add
js
ret
insb
or
int
in
inc
adc
mov
and
mov
fstpt
or
xlat
aas
mov
pop
xlat
sub
dec
cmpsb
xor
outsl
inc
ret
pop
fiadds
roll
pop
jecxz
inc
adc
outsb
and
mov
mov
rcrl
dec
sbb
adc
jne
mov
popa
lahf
xor
cwtl
aad
mov
push
adc
xor
ret
in
mov
mov
sbb
xor
lea
popf
ja
mov
adc
adc
cmp
mov
adc
stos
in
adc
scas
movsl
xor
lea
pop
mov
push
fcomps
cmpsb
or
enter
lods
enter
xchg
js
xchg
je
in
das
sbb
fcompl
lcall
and
sahf
hlt
pop
xor
mov
data16
xor
loop
lea
hlt
mov
dec
cli
out
jl
xchg
jbe
movsl
hlt
xor
push
pop
out
jecxz
pop
pop
aam
mov
dec
adc
push
sahf
cmc
mov
mov
pop
call
in
sbb
push
mov
and
aad
leave
paddb
mov
rcrb
cwtl
adc
and
fs
aaa
cvtdq2ps
jbe
cmpsl
add
sub
sbb
mov
dec
mov
out
xchg
sbb
sbb
push
bound
sahf
fs
shr
xchg
pop
ficomps
adc
jb
mov
mov
pop
push
sub
pop
arpl
cmpsl
push
mov
popf
inc
pop
leave
dec
cltd
and
cmpl
mov
subb
and
int3
pop
leave
mov
jae
daa
ret
pop
pop
mov
in
movsb
xor
rclb
sbb
jo
sbb
stos
gs
scas
pop
sbb
lret
ret
mov
outsl
lret
stos
lret
dec
fcmovb
lahf
cli
cmpl
dec
jno
dec
push
out
or
loop
sahf
sbb
or
sub
es
fstps
cmpl
imul
and
xchg
mov
xor
push
inc
push
arpl
xorl
jbe
sub
sub
cmp
lods
cmp
add
pushf
and
mov
push
sub
std
sub
cwtl
jge
dec
aaa
pop
cmp
mov
add
in
imul
sti
sbb
andps
mov
testb
cmpsl
mov
std
jp
jbe
push
push
pop
mulb
xor
jp
dec
and
ret
in
fisubrs
mov
jl
in
mov
mov
sbb
push
lods
xchg
testb
xchg
das
mov
fldcw
cli
add
sbb
shlb
push
clc
sti
cs
outsb
mov
gs
sbb
outsl
pop
ret
dec
movd
bound
or
sbb
out
in
mov
hlt
xchg
mov
cwtl
ja
dec
jae
pop
sbb
lahf
mov
jae
push
push
fmuls
test
xor
push
lret
popf
outsb
shll
aam
mov
cmp
fstps
sti
repz
loopne
mov
xor
mov
lds
aaa
imul
lock
xchg
mov
cld
icebp
sub
xlat
push
and
in
inc
das
gs
pusha
xchg
push
jmp
lret
inc
sbb
daa
mov
aaa
xchg
inc
or
orb
imul
mov
add
icebp
rclb
xor
divb
mov
les
push
mov
addb
int3
lahf
cmpl
stos
mov
out
repz
jge
dec
pop
xorb
sahf
mov
push
push
rorl
lods
outsb
jecxz
adc
sbb
or
or
jg
scas
pop
or
pop
and
popf
push
in
sub
push
add
dec
jne
push
xor
es
adc
loopne
pushl
sbb
or
push
lahf
add
sub
je
add
and
stos
lahf
dec
dec
mov
mov
and
pop
mov
pop
add
outsl
out
test
int3
jnp
faddp
daa
or
or
mov
xor
loop
push
xor
mov
clc
sar
jnp
or
orb
std
xchg
sub
stc
and
icebp
or
imul
sbb
loop
add
dec
andl
fisubrs
jb
cmp
xchg
push
test
pop
adc
xchg
pop
push
ret
out
xchg
and
ljmp
sbb
sti
push
test
roll
sbb
les
movsl
add
movsb
js
jp
test
loop
pcmpeqd
mov
mov
comiss
mov
adc
pop
aad
dec
adcl
fidivrs
je
aad
lock
lea
lret
js
lahf
sub
test
loope
in
gs
mov
mov
mov
mov
in
das
fucomp
mov
pop
add
mov
add
sti
cltd
std
jnp
adcb
iret
fwait
and
xor
mov
push
push
push
ret
in
push
mov
dec
add
sub
ret
jecxz
dec
dec
rorl
pop
dec
es
fldenv
push
bound
fsts
lock
fistpl
jp
push
mov
pop
fimull
insb
jecxz
cs
dec
lock
das
popf
fiadds
lcall
xchg
mov
push
pop
out
int
cwtl
int
sub
dec
jle
ffreep
xchg
dec
mov
enter
fninit
mov
leave
loope
xchg
in
mov
xchg
mov
sbb
int3
pop
clc
loopne
push
movb
mov
imull
mov
xor
mov
mov
pop
xchg
aaa
mov
inc
push
mov
xchg
sub
lea
push
cltd
cmp
negb
je
mov
xlat
push
hlt
mov
cltd
lock
mov
jp
xlat
xchg
fistps
adc
addl
cmpsl
push
into
xchg
mov
sub
jb
or
jmp
out
dec
pop
orb
mov
sahf
fiadds
out
test
mov
and
js
jo
xlat
push
pop
xor
push
add
call
sbb
or
icebp
jmp
cwtl
xchg
les
mov
test
jle
mov
cmp
cli
push
scas
sub
jae
popf
ret
pusha
or
mov
aaa
mov
decb
cs
scas
cs
lds
mov
jge
lret
mov
sbb
enter
adc
fisttpl
mov
add
les
dec
hlt
popa
push
test
addr16
inc
pop
adc
cmc
ret
nop
add
inc
cs
or
mov
rcll
lahf
test
or
pop
subb
loopne
mov
pushf
rcll
inc
or
mov
mov
dec
mov
cmpsb
pop
inc
jmp
xchg
jecxz
cmp
or
scas
sbb
decb
fwait
and
xchg
adc
rorb
mov
sub
or
cwtl
jle
fsubrl
mov
cli
sub
pop
outsb
pusha
jae
imul
je
push
rcr
mov
popf
xchg
mov
sbb
iret
mov
and
mov
dec
adc
daa
add
or
add
push
add
out
xchg
mov
movsl
adc
sub
pushl
in
repnz
pop
sub
test
xchg
addr16
inc
push
and
inc
in
and
xchg
add
ljmp
sub
fwait
push
psubsw
ss
mov
movhps
mov
mov
cmpl
pop
ret
push
adc
push
or
mov
add
dec
sbb
inc
sbb
mov
out
in
les
sub
sbb
push
aas
movsb
aaa
add
aas
nop
repz
jae
bound
in
pop
add
pop
subl
or
andl
pop
cwtl
fcoml
cmp
jnp
aas
push
in
mov
xchg
xor
mov
mov
sbb
frstor
rcrl
adc
push
je
mov
push
fucomi
call
cmp
xor
xchg
bound
lret
orl
dec
or
cmp
jmp
cmc
cmc
sub
insb
push
loope
xor
push
add
jae
rcll
out
or
push
sub
iret
daa
scas
ret
cmpsb
jmp
mov
iret
fistpl
inc
aad
jp
insl
mov
aaa
imul
jl
add
xchg
notb
je
aaa
inc
mov
and
adc
sahf
sbb
imul
loopne
ret
aaa
add
stos
je
cmpsb
dec
es
aam
push
sub
repnz
sub
shrb
insb
aas
int
test
push
ss
adc
lods
aaa
fadd
push
insl
mov
jp
xchg
inc
mov
lahf
pop
or
outsb
mov
sub
sbb
sahf
xor
mov
clc
gs
adc
iret
rcl
push
into
out
and
sbb
adc
mov
jp
fwait
sbb
jecxz
stc
loop
fwait
imul
sub
jb
aas
sub
ja
aam
sahf
inc
dec
fsubs
fwait
daa
push
jmp
ret
pop
pop
adc
or
push
push
testl
lahf
insl
cwtl
into
repz
out
push
push
mov
test
dec
jmp
push
imul
cmp
sub
push
inc
adc
xor
push
test
mov
add
inc
scas
adcl
test
and
loope
mov
pop
cmc
and
jno
mov
sbb
mov
pop
je
icebp
mov
dec
adc
ljmp
outsb
cmp
mov
stos
mov
pusha
cmp
inc
jl
and
test
pop
rcrb
jnp
push
mov
sbb
leave
daa
outsb
ds
cli
daa
pushl
in
mov
jns
aas
push
ja
push
dec
outsl
int
and
xchg
fsubs
ret
inc
loope,pn
imul
fbld
outsb
dec
mov
cmp
push
pusha
js
jg
arpl
popa
xchg
loope
pusha
call
mov
jbe
repz
push
sub
in
sahf
adcl
inc
push
mov
cwtl
inc
xor
or
sbb
xchg
lds
or
out
lock
push
lcall
adc
or
arpl
inc
out
cld
dec
push
lcall
test
cmp
dec
push
pop
push
lods
push
out
xor
movsl
push
mov
ss
aas
imul
pop
push
decl
mov
in
movsb
and
cwtl
rolb
dec
dec
adc
fsubrs
lea
sub
sub
jp
ss
inc
fwait
dec
push
and
insb
inc
loopne,pt
xchg
cmp
imul
adc
xlat
ljmp
not
pop
popf
sbb
clc
scas
jbe
testb
sbb
pop
push
xor
sbb
std
aad
jl
int3
cs
xor
cmpsl
out
arpl
shlb
movsb
xchg
mov
mov
or
adc
or
sbb
sub
jge
ds
add
shl
repnz
add
out
ljmp
fiaddl
aas
dec
fisttps
sbb
cwtl
sub
faddl
dec
sub
dec
add
or
mov
rcrl
jl
jns
lret
test
adc
sbb
mov
cwtl
sub
xchg
jle
lcall
xchg
arpl
xchg
jle
das
aaa
sub
fnstsw
adc
push
cli
xchg
icebp
cltd
sbb
das
dec
adc
jb
fnstsw
xor
add
insl
sub
and
push
sbb
jns
xchg
dec
xor
push
stos
icebp
jg
pop
shl
adc
lea
xorb
enter
cmpsb
inc
lcall
jo
or
jbe
int
into
mov
sbb
lcall
jbe
shll
xchg
inc
dec
mov
stc
add
addr16
add
ds
mov
jnp
push
mov
lods
ret
xor
pop
decl
adc
cmpsl
lcall
loop
loopne
popa
sbb
pop
or
and
adc
loop
and
mov
mov
cmp
jge
fs
sbb
insb
addb
fstl
cmp
push
push
daa
push
inc
bound
mov
adc
shrl
adc
push
mov
adc
adc
inc
repz
pop
inc
inc
cmp
icebp
pop
add
sub
and
or
fs
sbb
cmp
mov
pop
inc
lahf
int
pusha
sub
fcomp
pop
pop
xchg
mov
or
adc
bound
incb
iret
fwait
or
stos
mov
je
aaa
push
sbb
inc
sub
add
add
movsl
fcoml
insb
inc
das
fwait
xchg
mov
loopne
and
mov
filds
mov
lret
hlt
fistpl
sarb
push
sbb
rorl
jae
inc
pop
sbb
pop
into
cltd
das
fstp
insb
out
dec
and
xor
or
mov
jne
fwait
push
mov
sbb
stc
adc
dec
loopne
push
add
or
sbb
or
jl
mov
outsl
jbe
pop
xchg
clc
push
mov
int3
inc
movsb
outsb
mov
ror
cmp
xor
inc
adc
sub
xchg
pop
mov
inc
into
int
inc
imul
or
nop
arpl
and
cmp
adc
ror
push
or
dec
movsb
arpl
adc
into
movb
mov
mov
inc
cmp
xchg
aaa
pop
xchg
xchg
xor
shr
sub
enter
andl
cmp
test
dec
xor
cmpsb
push
mov
push
aaa
xchg
iret
fwait
jle
jae
mov
push
lcall
adc
fstpt
sar
shrb
cld
pop
int
movsb
and
fisubs
lahf
xlat
sub
mov
dec
shll
add
mov
mov
nop
in
fimuls
cmpsl
cmp
popf
xor
shl
jecxz
shl
push
nop
hlt
scas
xlat
mov
jns
shl
sbb
cltd
add
push
jg
arpl
lret
in
inc
cmp
iret
pusha
cmp
cld
frstor
addl
scas
testl
jns
insl
mov
shrb
dec
xchg
lea
xlat
pop
cmpsb
jmp
adc
call
inc
jg
xor
push
or
add
insl
push
xchg
stos
rcpps
adc
push
nop
pop
xchg
sbb
mov
jl
jne
sub
aas
fimuls
ljmp
inc
ds
push
sub
out
scas
jnp
jns
clc
inc
lds
fdivs
push
cmc
pop
jmp
fisubs
push
imul
arpl
shlb
cs
imul
mov
jae
push
daa
dec
xor
sti
mov
rcll
or
or
lea
adc
repz
ret
jnp
lea
data16
pop
dec
paddd
das
outsb
fistl
movsb
clc
sub
sbb
push
jmp
in
dec
stos
adc
sub
mov
or
fiadds
adc
xchg
push
outsb
and
pop
mov
jne
mov
jle
push
ljmp
xor
lds
mov
push
addb
mov
mov
and
imul
sub
inc
sarb
rcl
jecxz
xchg
in
je
enter
gs
jl
cli
popa
cmc
jl
es
jecxz
cmc
pop
and
outsb
mov
cmc
loop
pop
and
aas
pop
xchg
adc
out
push
fstpl
mov
das
fwait
pusha
pushw
adc
shll
jbe
inc
and
mov
insl
add
dec
jl
mov
and
adc
pop
leave
stc
push
popf
dec
jae
in
outsb
add
addb
jmp
pusha
dec
mov
in
pop
push
mov
cld
cwtl
jge
push
rorl
pop
xchg
mov
icebp
add
shlb
lds
dec
wrmsr
push
gs
jmp
jp
mov
pop
adc
mov
push
loopne
push
push
add
test
loop
lret
sahf
das
add
pop
mov
or
sub
in
inc
mov
push
pop
loop
ss
outsb
negb
and
lea
divb
dec
addr16
and
adc
cmpsl
and
call
adc
push
pushf
pushf
dec
jb
xchg
mov
push
insb
hlt
jp
hlt
rcrb
fisubrl
mov
cmp
in
shl
add
sahf
lahf
cmpsl
gs
call
jne
pop
sbb
mov
addl
mov
jno
mov
lds
cmc
bound
pop
loope
aaa
cmp
xor
test
stos
in
inc
pop
ret
jbe
dec
pop
arpl
loope
rcr
dec
jl
mov
inc
cmp
jmp
jmp
xchg
ja
mov
jb
push
sbb
jl
pop
lret
mov
dec
mov
ja
dec
mov
ja
push
mov
fsts
mov
fmul
mov
iret
dec
xchg
mov
movsl
ficomps
dec
and
jmp
iret
out
scas
or
jae
and
xchg
mulb
orb
jl
mov
fucom
es
sbb
inc
xchg
es
in
ljmp
push
cmp
dec
dec
imul
and
pop
aaa
insb
cmc
push
repnz
fidivrl
in
adc
mov
inc
mov
mov
mov
push
pop
enter
mov
stos
pop
sbb
ret
lret
add
out
sbbl
inc
mov
dec
sahf
mov
xchg
jno
push
test
jns
mov
pusha
lea
inc
xor
das
or
fwait
adc
adc
pop
hlt
xor
lods
fwait
insl
imul
cmp
in
lods
fiadds
lods
mov
rorl
das
pop
mov
fstp
and
lret
jns
subl
imul
mov
mov
sbb
loopne
test
dec
sar
push
xchg
pop
int3
andl
sahf
testb
cmc
mov
mov
cli
icebp
loope
in
lds
inc
xlat
jne
roll
cld
arpl
pop
sbb
jbe
jb
mov
int
ret
jle
mov
fsubrl
mov
clc
push
xchg
fcoms
and
mov
stos
mov
push
in
sub
into
xchg
mov
je
pop
or
mov
cmp
mov
push
fistl
jns
rclb
sbbl
inc
pop
and
or
xchg
add
add
repz
push
add
rcrb
pop
addb
and
test
push
out
cmpsb
inc
call
imul
sub
and
or
arpl
sbb
loope
loope
scas
orl
sysenter
adc
inc
mov
stos
mov
sbb
push
jecxz
ficompl
je
cmp
loopne
and
ret
xor
aad
lcall
mov
push
cmpsb
loopne
aaa
sub
lret
aad
pop
cmpsb
popa
jnp
xchg
inc
out
cli
mov
inc
or
inc
mov
loope
dec
stc
jp
andb
cltd
daa
push
sbb
jbe
mov
idiv
push
lock
rorb
xchg
loopne
xchg
mov
repnz
xchg
or
dec
dec
into
lret
mov
sub
mov
testl
pop
jmp
inc
mov
and
lcall
movsb
cmpsb
imul
pushf
mov
inc
dec
jo
sub
push
out
daa
in
xor
inc
outsb
push
or
lods
stos
add
ljmp
mov
call
mov
lahf
mov
sarb
call
out
jecxz
inc
sbb
pop
sub
xchg
xlat
mov
sbb
inc
repnz
pop
je
ret
xchg
jns
add
xchg
ret
add
int3
adc
cvtps2pd
xchg
psubsw
sbb
mov
psllq
adc
and
add
push
inc
add
jae
inc
rep
and
mov
stos
stos
movsb
pop
scas
pop
outsl
nop
mov
pop
xor
inc
loope
aaa
subl
adc
popa
dec
inc
mov
and
cmp
scas
push
ret
mov
or
popf
adc
sbb
imul
cmc
lods
jmp
or
push
and
cmp
pop
adc
mov
pop
shl
lret
mov
sub
inc
or
les
dec
sbb
pusha
fdivl
test
sub
test
ret
sub
sti
push
clc
and
icebp
std
inc
dec
cli
iret
cs
sbb
dec
sbb
pop
insl
loope
lea
sbb
inc
sti
xchg
jge
xchg
dec
push
or
adc
mov
xor
pushf
mov
es
push
mov
add
sbb
sbb
mov
jnp
and
stc
aam
stc
inc
mov
jl
stc
dec
sti
decb
scas
inc
aas
pop
add
out
inc
sbb
popf
cwtl
add
jmp
testl
dec
jmp
xor
lcall
pop
dec
pcmpgtb
jae
dec
je
repz
lcall
sbb
or
jg
mov
mov
inc
scas
adcl
in
lret
adc
mov
jns
call
clc
std
repnz
orb
roll
mov
ret
mov
fcompl
push
mov
into
es
pop
and
out
sbb
aad
int3
sbb
lock
add
or
rcrb
sti
dec
xchg
xlat
fidivl
out
adc
ljmp
jle
inc
and
jno
rolb
adc
loop
aaa
and
add
add
cmpsl
mov
cs
dec
push
add
stc
xchg
pop
sbb
xor
call
adc
popa
cmp
in
pushf
enter
cs
push
or
fistpll
dec
imul
mov
push
mov
mov
je
dec
fs
adc
ss
pop
rclb
jae
and
add
mov
lods
cwtl
out
stc
sub
xchg
add
lcall
inc
lods
or
mov
inc
cmp
pop
sub
shrb
cmpsl
inc
xlat
mov
xchg
sub
add
stos
add
shrb
xchg
mov
push
xor
pop
inc
push
mov
movsb
pop
sbb
test
int
in
jb
add
mov
fcomps
lock
xlat
pop
scas
pop
sub
std
out
fldenv
mov
lds
cmp
int
sti
cs
bound
fs
jno
call
xlat
sub
stos
sti
fldcw
add
and
out
jno
ret
pop
add
jbe
lret
add
inc
leave
les
js
inc
dec
cmpsl
jns
push
mov
and
mov
loope
cld
imul
pusha
fimuls
mov
add
or
std
iret
movb
mov
mov
icebp
icebp
mov
ja
push
xor
xchg
inc
pop
in
inc
call
addr16
stos
mov
sti
cmp
pop
or
out
pop
pop
adc
and
fstl
inc
in
sub
pop
daa
cmpsl
adc
cli
push
mov
fbld
cmp
inc
mov
mov
cmpsb
clc
dec
loopne
test
push
jo
pop
xchg
xor
cli
mov
sbb
outsl
xor
ljmp
sub
in
int
testb
adc
stc
test
in
and
insl
in
gs
js
dec
lea
mov
dec
dec
cs
push
push
xlat
push
ja,pn
ja
lods
out
inc
imul
cltd
pusha
filds
lcall
scas
call
lock
stos
fnstcw
sub
xor
cmpsb
inc
leave
jae
xchg
enter
add
cmp
mov
xlat
mov
dec
test
in
adc
dec
xor
into
dec
add
popf
aam
aad
sub
popa
aas
jg
cmpsl
fwait
popf
jo
cmc
add
fimull
fldcw
rcll
mov
add
cmp
mov
add
dec
push
ds
rol
out
in
mov
pop
movsl
xchg
push
jmp
repnz
lock
mov
dec
mov
repnz
loope
xchg
lds
jmp
add
jne
xchg
std
push
jbe
and
mov
rclb
mov
jno
and
push
and
subb
mov
push
aam
into
stos
ja
xor
adc
jbe
imul
jns
pop
rcr
push
xlat
fisttpl
loope
push
and
shrb
mov
pusha
mov
lret
filds
jecxz
lds
imul
push
xor
sti
dec
jb
push
pusha
mov
cs
dec
dec
push
xchg
jg
cmpb
ljmp
or
iret
insl
into
mov
test
fiaddl
adc
shrb
adc
mov
pop
cld
mov
fildll
mov
hlt
add
jne
inc
out
repnz
xchg
cld
call
mov
fwait
cs
sub
dec
das
cli
jae
arpl
push
repnz
arpl
push
jbe
lods
cmc
leave
popa
incl
mov
xor
ret
fscale
roll
pop
mov
in
fidivrl
pushf
out
cmp
mov
outsb
xlat
scas
adcl
cmp
lahf
pop
inc
arpl
ficompl
push
fdivs
scas
clc
pop
add
push
mov
and
test
and
push
movsb
mov
outsb
adc
mov
sub
mov
dec
std
xchg
inc
push
aaa
and
fcoml
mov
out
in
cmp
test
pop
pop
cmpsl
loop
jecxz
add
xchg
sub
sub
lcall
push
push
push
pop
js
push
sub
lds
sub
cmpsl
je
sbb
xor
jbe
sbb
cmpsb
call
dec
sbb
mov
or
shll
sbb
pop
mov
xchg
pop
mov
mov
ja
adc
push
hlt
mov
inc
or
push
out
dec
sub
rcrl
shrb
ja
inc
test
sti
idivw
mov
push
inc
inc
push
popf
and
rorb
or
sbb
and
xor
or
pop
les
jl
sahf
lea
loop
inc
jmp
pop
sub
imul
into
repnz
aad
in
insl
jecxz
push
mov
leave
aas
mov
js
pop
loopne
outsb
ljmp
fs
mov
roll
cmpsb
cltd
wrmsr
xchg
sub
sbb
and
jnp
mov
pop
sub
jle
in
cmp
sti
mov
pop
push
pop
dec
andb
movsb
mov
dec
rcr
add
pop
cs
xchg
jnp
cmp
jnp
sbb
jae
pop
leave
cmp
pop
mov
outsl
fnstsw
lods
jg
js
adc
adc
imul
pop
adcl
xchg
outsl
fdivrs
in
movsb
xchg
in
xor
int3
pop
mov
cmp
xchg
rorl
mov
fnstcw
or
mov
mov
aaa
nop
push
aas
inc
pop
add
fs
lods
cwtl
fsub
mov
cwtl
dec
mov
bound
inc
icebp
cmpsb
cmp
mov
inc
jns
lcall
mov
shlb
pop
fildl
aaa
clc
stc
pop
outsl
dec
push
mov
xlat
pop
aaa
mov
push
fsubs
je
cmc
shlb
dec
test
sbbl
scas
scas
ss
push
stc
fidivl
or
and
cltd
inc
outsb
sub
rcrl
and
mov
pop
adc
cli
xchg
stos
sbb
xor
andl
nop
rcrl
imul
mov
es
mov
imul
pop
sbb
xchg
cmpsb
out
call
dec
icebp
pop
pop
ficoms
ds
test
notl
cmp
pop
mov
push
aam
shlb
jno
dec
sbb
into
dec
int3
insb
push
ss
xchg
xchg
xchg
xchg
mov
in
test
mov
in
scas
les
xor
dec
mov
out
je
pop
jge
mov
sub
stos
ds
xor
or
mov
push
sahf
pop
jno
shll
push
repnz
jno
push
pushf
mov
lock
es
jne
out
in
add
test
aad
or
shlb
xor
inc
subb
in
dec
pop
cmc
ljmp
xchg
je
nop
adc
pusha
lret
xchg
leave
or
fldenv
into
add
jb
xor
sbb
sahf
inc
fucom
fnstenv
movsb
xor
jl
test
push
outsb
fwait
int3
pop
test
jae
lcall
imul
shl
sub
pop
cld
pop
and
cmp
xchg
sti
jnp
dec
iret
test
imull
scas
mov
pop
fucomp
frstor
pushl
add
dec
mov
cmp
jno
lock
xor
pop
mov
leave
call
test
addr16
sbb
aas
aam
sti
inc
imul
fidivrs
mov
jae
push
fsubl
cmpsl
rcrl
add
dec
push
cmp
push
sbb
shr
or
les
jmp
xor
add
neg
lods
das
sbb
pusha
mov
inc
xor
mov
stos
xor
sbb
test
pop
inc
lret
and
bound
sahf
loop
leave
and
mov
insl
cmpsb
and
inc
data16
lcall
icebp
xchg
roll
inc
pop
std
lods
sbb
cs
pop
sti
insb
cmp
ljmp
imul
fldcw
mov
lock
dec
xorb
mov
repnz
fstp
xor
xlat
pop
out
movsl
adc
stos
imul
mov
arpl
cmp
arpl
ljmp
jecxz
nop
dec
dec
cmp
xchg
push
jl
inc
lcall
pop
mov
fdivr
and
push
in
fstl
shl
add
mov
pushl
inc
in
repnz
ds
lret
fsubp
adc
inc
xchg
cmp
push
mov
inc
jne
inc
cmp
jnp
push
in
cmp
je
and
inc
daa
ret
rcll
mov
jns
pop
lret
inc
inc
push
pop
inc
jnp
mov
sub
dec
jmp
adc
or
sub
lahf
pop
mov
pop
pop
mov
popa
pop
test
mov
test
rcr
lahf
push
and
and
inc
popf
loopne
adc
cmpl
mov
in
xor
cmp
xlat
jb
sub
or
inc
js
and
in
xchg
dec
stos
ds
stc
pusha
into
movsl
jge
add
xor
inc
mov
adc
data16
cmp
push
movsl
aad
jnp
sahf
into
cmp
or
sbb
cmp
push
lret
pop
mov
ret
daa
cmc
xlat
out
jp
fisttps
push
pop
add
jmp
imul
mov
fsqrt
inc
mov
cwtl
inc
pop
push
movsl
pop
lret
sub
or
pop
loop
mov
mov
sbb
xchg
in
adc
insl
dec
dec
mov
mov
sub
inc
pop
inc
sub
xchg
pop
scas
subl
adc
push
loop
into
inc
push
add
ret
sub
fst
in
out
in
mov
std
scas
sbb
mov
dec
test
roll
mov
bnd
dec
aam
xchg
sbb
popa
repnz
inc
xchg
mov
popa
mov
sbb
jb
cwtl
lods
sarl
cmp
sub
cmp
sbb
out
sub
bound
roll
cmp
dec
push
jge
mov
das
dec
adc
cmove
cld
ss
inc
mov
cmp
les
movsl
lock
mov
icebp
leave
shr
daa
mov
push
jns
sub
add
orl
dec
lods
test
pop
jno
sub
sub
add
test
pop
outsb
or
fmul
hlt
cmc
cmp
addr16
out
mov
sub
dec
jno
cwtl
mov
jg
rcll
out
out
mov
dec
imul
dec
shl
or
scas
xor
and
xchg
sti
pop
fidivl
xchg
into
cmp
div
cmp
jns
fdivrs
lods
jecxz
lds
sub
mov
in
jmp
sub
mov
test
mov
fiadds
mov
push
dec
rcrb
push
js
cmp
negl
cld
xchg
sbb
pop
push
sbb
ret
jae
aaa
in
leave
sub
mov
das
repz
and
arpl
mov
mov
sub
scas
nopl
or
test
dec
pop
in
jns
sbb
sub
stos
push
icebp
push
in
and
lods
xchg
and
into
jge
xchg
leave
and
dec
xchg
xchg
lcall
test
mov
or
mov
arpl
cwtl
or
ret
mov
pop
cld
jg
clc
mov
mov
push
mov
stos
in
cmpsl
lods
leave
adc
and
ret
push
call
push
fstpt
or
mov
jmp
bound
xchg
negl
and
in
mov
pop
and
jmp
lret
sbb
and
add
xchg
ret
repz
in
rcrl
icebp
es
outsb
bound
inc
loop
inc
inc
inc
dec
jg
daa
mov
push
dec
out
les
mov
jecxz
stos
jecxz
loop
shlb
or
sub
adc
mov
cwtl
jb
push
mov
mov
xor
push
fcmovb
repz
bound
inc
fwait
insl
fcom
pop
cmp
enter
bnd
push
add
adc
cmpsl
adc
dec
mov
xor
dec
xchg
sbb
sbb
adc
dec
inc
mov
enter
insl
jns
fimull
pop
jbe
sbb
xor
lret
out
push
xlat
pop
roll
sub
adc
sub
mov
add
xlat
mov
pusha
inc
add
shrb
out
cli
loopne
fildll
pop
mov
cmp
mov
enter
cltd
nop
arpl
dec
pop
xor
data16
sub
arpl
sbb
outsl
pop
fs
fiaddl
orb
or
hlt
sahf
xchg
inc
out
xor
sub
lock
add
das
mov
xchg
pop
jp
ss
cmp
adc
push
aaa
pushf
mov
mov
lods
push
xchg
sub
sbb
mov
mov
or
clc
mov
movsb
and
pop
ja
subl
orb
add
sbb
in
rorb
mov
dec
iret
dec
loop
stc
mov
dec
push
lods
lods
dec
cmpsl
mov
sbb
sub
pop
popa
jge
es
lcall
sub
push
mov
daa
sub
mov
mov
adc
sub
stos
sti
add
lds
xchg
mov
gs
jo
xchg
pop
pusha
frstor
sbb
jae
mov
mov
xchg
and
jno
or
xchg
data16
xchg
and
jbe
dec
call
and
insl
pop
mov
lea
xchg
icebp
fimull
rcrl
mov
icebp
ds
push
adc
push
stos
mov
mov
call
in
stc
mov
jo
mov
jne
ja
les
xchg
jne
out
ja
dec
addr16
divl
int
dec
jecxz
outsl
inc
xchg
pop
imull
pop
mov
movsb
add
loop
or
push
pop
jnp
cmp
sub
incb
fdivl
push
addr16
inc
pop
pop
arpl
mov
rcrl
jmp
xchg
out
loope
loop
pop
pop
fildl
dec
pop
dec
fcmovnu
xlat
pop
sahf
xchg
leave
mov
and
sub
insb
loopne
orl
out
or
cmp
rcl
pushf
fnstsw
ret
mov
js
movsl
mov
jbe
cmp
cld
add
mov
not
or
xchg
jge
insb
jg
push
and
xchg
dec
push
pop
nop
xchg
mov
in
adc
ret
fsubrs
in
sbb
jp
daa
add
inc
repz
or
mov
ljmp
cld
xchg
lods
and
mov
lahf
mov
sbb
pop
pop
aam
xchg
enter
outsb
inc
cmp
imul
andb
push
ss
les
cmc
lods
in
pop
es
into
sbbl
in
add
push
iret
jl
fildll
or
pop
sahf
stos
psrld
repz
sub
ds
fbld
stos
aas
push
je
mov
sbb
fwait
clc
pop
mov
sbb
jo
mov
xor
jnp
push
and
jp
add
fnstsw
ret
mov
lods
bound
iret
mov
adc
xor
sbb
jge
inc
or
xchg
das
cmp
mov
shll
jbe
das
pop
lods
mov
xlat
push
adc
sub
in
mov
arpl
dec
cmp
adc
roll
arpl
xor
adc
loopne
or
jne
mov
dec
in
push
jecxz
inc
out
test
ljmp
lds
push
out
push
xor
ss
push
push
cld
push
dec
lahf
pop
shrb
jbe
imulb
or
sbb
fucomp
adc
mov
add
pop
outsl
adc
dec
nop
sub
pop
xchg
ljmp
jmp
xor
adc
pop
and
lea
cli
mov
jmp
in
add
cmp
pop
loopne
mov
lahf
add
std
sub
add
push
inc
adc
xchg
testb
cmc
test
dec
sbb
add
sbbl
add
popa
cld
ljmp
add
insl
xor
out
mov
movsl
sbb
leave
sarl
jge
sbb
movsl
xchg
pop
adc
out
ficompl
adc
cwtl
or
fidivs
xor
push
fbstp
xor
mov
lahf
fadds
cmc
sbb
or
and
gs
mov
or
dec
push
xchg
xor
jle
cltd
cmp
and
lock
mov
pop
stos
iret
sub
add
insl
cmp
jg
cmp
jle
gs
lock
sub
loop
add
push
lret
shlb
dec
push
pop
mov
aad
outsl
lock
gs
push
leave
xor
mov
xor
dec
ss
cs
mov
ss
es
jne
xchg
mov
push
push
js
xor
inc
js
dec
xchg
xchg
idivl
shll
jno
cs
mov
lret
call
loopne
pop
push
push
out
in
sbb
push
push
adc
mov
mov
mov
inc
roll
xor
push
ffreep
into
nop
cltd
mov
mov
adc
cmp
mov
jge
in
jb
lods
push
push
xor
outsl
jmp
lea
lcall
lret
call
or
cmp
or
sbb
je
push
push
sbb
popa
xor
mov
push
inc
mov
repnz
addr16
and
push
jnp
sahf
and
test
ljmp
fbld
icebp
jae
jge
popf
fiaddl
call
movsl
xchg
je
daa
inc
jno,pt
mov
fwait
and
lcall
cltd
hlt
xlat
jbe
test
fisubrl
xor
dec
sarl
testl
mov
decb
lea
sub
or
stos
inc
sub
jge
rcll
or
pop
dec
gs
cltd
cmc
hlt
pop
shl
or
sub
fisubrl
es
ds
mov
cwtl
add
push
jo
test
mov
cmp
inc
lret
mov
mov
push
mov
repz
mov
mov
dec
popf
xchg
inc
ljmp
mov
adc
outsb
mov
stos
mov
lcall
adc
xchg
stc
insb
loope
sti
mov
mov
mov
nop
out
out
sub
xchg
loope
sahf
cltd
leave
in
rclb
xor
jne
imull
cli
pop
lods
cld
push
or
mov
mov
popl
add
daa
xchg
dec
stc
imul
call
pushf
outsb
lret
adc
lods
int3
movsl
sub
mov
loopne
imul
addr16
xorb
popf
and
sbb
shll
shll
pusha
and
faddl
leave
jb
lea
in
aas
hlt
arpl
jbe
add
and
lods
pop
js
test
mov
dec
inc
and
xchg
insb
hlt
pop
sub
sub
aas
mov
in
xor
stc
cli
push
jnp
in
aas
or
inc
push
movsl
lods
test
cmp
in
out
xchg
aad
mov
xchg
fucom
lea
inc
add
cwtl
or
inc
fs
or
pop
inc
adc
adc
aas
add
aam
loop
stos
jg
in
adc
xor
jno
out
jecxz
jl
sbb
cmpsb
inc
jb
jnp
sub
xchg
in
bswap
cmpsb
es
aas
add
iret
mov
sbb
stos
jl
mov
js
push
repnz
adc
ss
mov
and
push
fmull
cmpsb
push
push
mov
fwait
inc
lods
sub
cli
sub
push
in
aas
aaa
les
shll
std
mov
pop
push
dec
clc
scas
sbb
xorl
mov
sub
fldl
inc
jae
mov
ss
into
xchg
mov
mov
lahf
cmpsl
call
push
sub
stos
pop
enter
push
sbb
movsl
push
imul
rolb
jb
out
test
es
bound
add
inc
add
push
hlt
push
and
mov
pop
mov
add
dec
test
mov
mov
cli
jnp
dec
mov
sbb
adc
or
sub
call
xchg
push
xor
cmpsb
add
mov
pop
push
shl
icebp
rcll
dec
sbb
push
iret
pop
adc
sti
outsl
dec
movsl
xor
add
fbstp
fwait
test
push
rcll
int3
xchg
add
sbb
lods
lea
rcrb
push
movsb
add
xor
lret
fidivrl
dec
dec
mov
mov
push
xor
push
mov
mov
icebp
pushf
xchg
int3
repnz
add
mov
jne
pop
stos
or
les
push
ss
icebp
pop
push
rol
jo
or
cmp
out
mov
add
push
stos
out
cmc
xchg
sbb
cmp
test
pop
sub
xchg
sti
cs
jecxz
and
and
adc
aam
mov
sti
dec
push
js
sahf
cwtl
outsb
mov
push
xlat
decl
mov
inc
pop
cs
cld
jl
ret
je
loope
ljmp
insl
xchg
leave
scas
nop
dec
push
jno
sub
int
xchg
call
loop
stc
mov
cmp
testb
xchg
jp
dec
mov
js
push
jbe
jb
sub
pop
bound
sbb
iret
sarl
mov
xchg
sub
inc
add
hlt
data16
push
jne
push
outsb
imul
and
insb
mov
and
movsl
fildl
cmp
add
jg
sbb
aaa
ficoms
jg
pop
inc
ret
mov
cs
sbbl
sbb
cltd
jnp
push
loop
je
dec
mov
ja
js
cmpsb
xchg
pop
jne
leave
xchg
bswap
fcoms
or
xor
jmp
xlat
in
cwtl
or
add
out
mov
jbe
inc
xor
adc
out
cld
ja
add
jge
mov
xchg
mov
clc
movsb
xchg
and
mov
sub
in
mov
test
mov
push
ds
mov
divb
fwait
popf
ss
inc
xchg
adc
or
jnp
test
mov
int
es
ljmp
sahf
jmp
xorb
mov
jmp
dec
jle
lods
mov
push
aaa
adc
push
lahf
clc
out
das
push
fiaddl
mov
sbb
xchg
push
mov
fidivrl
or
mov
push
lret
xlat
sbbb
jnp
cmp
xchg
or
outsb
cmp
cld
mov
fs
mov
in
sub
arpl
sbb
fidivs
lret
mov
rorb
sbb
and
lahf
add
mov
pop
jl
mov
in
scas
icebp
xor
cs
pop
loop
popa
cwtl
sbb
test
test
movsb
roll
sarl
fiaddl
and
and
sbb
scas
in
pusha
xor
xchg
mov
add
xchg
jne
jnp
mov
dec
gs
or
xchg
jg
cmpsb
jbe
or
pop
movsb
outsl
and
stc
cltd
pop
cmp
lcall
jbe
xchg
xchg
xor
and
ja
sbb
mov
xchg
loop
dec
faddl
push
dec
movsl
pop
rorl
es
adc
push
and
sbb
fisubrl
adc
in
or
mov
adc
dec
test
dec
sub
scas
jne
mov
mov
loop
int
in
jbe
imul
movsl
rep
push
loopne
jl
or
repnz
push
cmpsl
cwtl
mov
arpl
jl
or
mov
add
gs
addr16
adc
fadds
sub
lea
daa
sub
xchg
push
insb
jecxz
inc
cmp
inc
push
sbb
rclb
and
stc
out
and
and
cmc
fxam
es
out
sub
xchg
xor
test
pop
rcrb
cli
incb
push
std
fsub
dec
int3
lods
ficoms
hlt
neg
mov
jp
xchg
pop
adc
push
rcrb
in
or
and
push
xor
movsb
js
scas
push
jmp
in
pop
mov
inc
jmp
mov
test
cmc
jbe
cmp
sub
test
cwtl
iret
or
jb
ret
fmull
cmp
arpl
sbb
imul
jns
pop
bound
mov
out
xchg
repz
adc
into
popa
mov
jge
out
sub
je
lcall
mov
lea
cmpsl
pop
mov
mov
ja
inc
adc
jge
lcall
or
cli
out
adc
addr16
pop
daa
jbe
mov
push
cmpsb
mov
push
out
fdivrs
jl
dec
pop
cmp
int
addr16
jnp
mov
mov
xchg
dec
sub
push
jmp
mov
adc
sub
stos
add
mov
je
xchg
cld
mov
mov
rsqrtps
jb
clc
out
int3
xchg
ds
es
pop
lret
ds
and
imul
xchg
iret
mov
aas
cmp
adc
fs
or
jbe
push
test
cmc
lods
push
mov
add
or
loopne
push
ss
ja
mov
fisubrs
mov
in
test
push
aas
cmc
mov
mov
insl
xchg
clc
fbstp
mov
push
iret
es
in
xchg
jg
add
fwait
mov
push
push
lods
movsl
and
sub
scas
rolb
push
sahf
mov
xchg
mov
xchg
dec
sbb
dec
and
sbb
aaa
leave
sbb
lds
add
mov
cli
outsb
cmpsl
push
or
je
int
out
pop
cmpsl
pop
jp
int
pop
imul
lret
mov
js
inc
int3
cmp
sub
adc
in
lahf
pop
push
mov
adc
cmpsb
or
gs
dec
xchg
pusha
push
pop
je
imul
lea
ficomps
mov
and
leave
xchg
mov
mov
insl
scas
cs
xchg
xor
adc
jge
xchg
mov
inc
outsl
loop
push
xlat
xor
pop
cmpsb
pop
inc
fimuls
xchg
pop
xlat
pushf
inc
sub
std
mov
xor
out
incb
out
sbb
dec
mov
das
mov
sub
sub
cmpsb
pop
add
or
insb
xchg
jne
push
cli
push
xchg
jecxz
jne
inc
shlb
sti
xchg
dec
std
stos
mov
loopne
popa
hlt
popa
test
lods
dec
stos
mov
push
cltd
fwait
cmp
inc
push
sub
jo
push
cltd
mov
mov
xlat
mov
jbe
loop
imul
jmp
sub
mov
mov
cmp
outsb
aas
clc
pop
pop
inc
inc
mov
scas
sbb
outsb
test
int3
inc
ds
imul
mov
add
cmp
rolb
decl
mov
lds
xchg
dec
rolb
jb
dec
iret
adc
dec
lds
push
sub
add
loopne
add
jle
pop
shr
inc
xor
lret
inc
rol
mov
test
lret
sbb
fisubrs
mov
sub
push
inc
punpckhbw
xor
push
pop
fildll
add
sahf
ja
jno
lock
out
jle,pt
fs
mov
out
ja
aaa
xor
add
out
fsubrs
dec
ds
sbb
mov
push
push
adc
lret
and
cmpsl
jmp
sub
jecxz
fsub
shl
xor
insl
sub
mov
mov
mov
dec
jle
sbb
pop
stc
ror
adc
decb
push
sub
push
cmp
or
dec
std
std
mov
xorl
adc
cmc
push
cmc
add
aad
push
xor
sahf
fists
stos
xor
sub
fimull
jnp
and
rolb
cmp
cwtl
pop
mov
inc
pop
nop
je
dec
push
insb
stos
cld
push
mov
mov
fwait
mov
call
call
popf
pop
shll
orb
mov
and
popa
or
sub
in
lods
mov
xor
pop
cmp
outsl
pushf
cmp
push
jecxz
shll
push
sarb
aad
cltd
and
ret
xchg
pop
mov
xchg
divb
and
push
das
xor
xchg
pop
cmp
sahf
aaa
mov
sbb
add
andb
cmp
fcomp
xchg
cmp
stos
popf
in
lcall
jle
dec
xchg
cmpsb
xor
out
inc
lret
pop
popf
test
and
push
sub
add
push
inc
cmpsl
fists
scas
jmp
cmpsl
stos
push
sbb
aam
sub
adc
out
iret
rcl
mov
clc
aaa
cld
jl
dec
cmp
sub
ret
fwait
shl
mov
jnp
add
jbe
in
ret
je
cmp
pop
stos
popa
stos
js
loopne
addr16
jne
push
xor
mov
sub
es
sbb
fsubl
xchg
xor
iret
add
inc
inc
push
data16
jge
push
ret
lret
and
cli
call
dec
mov
inc
dec
sub
jnp
fistpl
aas
pusha
sti
enter
jnp
lods
or
push
bnd
mov
add
jge
mov
cmp
fldcw
mov
cmp
and
mov
mov
scas
outsb
rcrl
and
sahf
cmp
outsl
jl
xor
mov
insb
ret
add
fs
and
cld
sbb
in
adc
dec
leave
pop
and
shrb
arpl
mov
int
lock
push
adc
lods
sub
push
xor
mov
shll
pop
add
in
fldcw
mov
pop
stos
xor
je
push
mov
call
popf
rcrl
sbb
imul
sbb
fimuls
cmp
xor
mov
rcll
jmp
outsb
dec
pusha
cs
push
cwtl
sbb
or
mov
out
sub
rolb
sub
jp
stos
repz
xchg
mov
dec
imul
inc
dec
dec
pop
inc
inc
outsb
lds
stos
das
in
pop
popf
dec
jae
lret
out
inc
or
cwtl
mov
enter
bound
jmp
mov
mov
add
jae
or
cmp
jecxz
mov
out
loop
icebp
stos
lds
je
xor
pop
rcrl
outsl
aam
cmp
movsb
fstpt
dec
mov
rorl
js
dec
dec
fnstcw
and
and
inc
enter
pop
sbb
inc
sbb
xlat
sti
mov
aas
pop
xor
shll
pop
enter
pop
lea
xor
sbb
push
ret
adc
ss
adc
pop
dec
adc
jns
xor
cmp
shl
adc
sbb
rcrl
imul
pop
js
add
adc
dec
cmovae
sub
sbb
mov
enter
xor
mov
mov
jl
jmp
shll
icebp
jp
xchg
out
push
enter
xchg
mov
loope
push
nop
push
iret
leave
enter
mov
test
cmc
cli
push
sub
jmp
dec
in
pushf
orb
add
add
sub
push
adc
sbb
jo
pop
popa
xchg
mov
ror
scas
inc
pushf
add
iret
cwtl
int
aad
add
pop
loope
mov
dec
and
div
xor
mov
ficompl
cmp
sbb
cmp
and
xor
out
popf
xchg
cmp
jae
test
fdivs
xor
mov
pop
mov
int3
push
push
inc
rorl
mov
xchg
ficoms
in
and
dec
pop
mov
lcall
cwtl
jno
std
dec
mov
push
and
jle
or
dec
jb
sub
adc
ds
mov
mov
dec
mov
jge
add
movsl
xor
add
rcll
jge
insl
inc
xchg
push
insl
lret
stos
add
rcll
loop
orb
push
pop
out
cltd
outsl
cmpsb
add
cmpl
ljmp
or
jge
ret
sub
les
je
cmp
inc
mov
in
push
inc
mov
les
push
sbb
pop
rcrl
shll
sbb
push
cmp
jb
sub
xor
cmp
dec
push
mov
leave
mov
jbe
sub
call
sub
mov
adc
arpl
xor
or
paddusb
adc
sti
mov
pop
addr16
fsubrl
stos
xlat
or
xchg
xor
imul
pop
lock
mov
movsl
or
mov
loopne
xor
ljmp
std
into
aaa
loop
loopne
jno
mov
adc
jnp
fnstcw
mov
jbe
or
imul
sahf
dec
jno
inc
inc
push
repz
das
fcmovnu
sahf
dec
and
and
ret
js
into
mov
out
push
push
and
jl
push
adc
push
aam
sbb
jne
cmp
cld
incl
or
inc
mov
scas
sub
loope
pop
repnz
fs
jmp
push
nop
dec
sbb
pop
push
jbe
sub
push
call
inc
pop
mov
push
into
or
stc
sbb
rcl
rcll
cmpsl
and
add
pop
pop
sbb
wrmsr
push
mov
inc
aaa
test
cmp
movsb
popa
cwtl
ljmp
jno
push
add
frstor
or
mov
xlat
orl
add
push
int3
jae
and
mov
push
sarb
and
push
jle
cmp
jg
dec
lcall
faddl
dec
or
fs
loope
fcoms
cmpsl
out
or
lcall
inc
lret
mov
sbb
push
fdivl
fwait
js
lret
mov
pop
mov
test
cmp
movsb
js
adc
adc
fs
mov
push
pop
add
aas
loopne
rorl
sub
fldenv
push
jmp
loop
repnz
adc
push
push
mov
cmc
mov
hlt
negb
insb
gs
arpl
mov
cmp
xor
je
shrb
pop
shrl
stc
dec
sbb
pushf
sbb
sub
fldcw
into
ja
inc
xchg
jg
or
in
mov
mov
rcll
scas
and
xchg
scas
cmpsb
inc
pop
es
sub
fwait
sbb
add
adc
mov
stc
cmp
jnp
xchg
inc
adc
es
in
jmp
dec
scas
xchg
xor
out
mov
nop
pop
xor
fsubrl
out
xor
lahf
adc
test
jae
pusha
rcrb
mov
lcall
xor
adcb
scas
jl
pop
cmpsl
mov
inc
mov
cmp
cwtl
or
fwait
mov
xor
enter
add
testb
popf
cwtl
mov
sbb
daa
cmp
pop
sbb
in
sti
mov
mov
xadd
pop
or
stos
mov
sub
mov
mov
aaa
mov
insl
int
mov
xchg
mov
and
jge
ljmp
aad
mov
pop
push
jg
rcrl
cwtl
cmpsl
push
dec
adc
sbb
adc
pop
xchg
mov
cmp
adc
cmpsl
rolb
nop
lcall
sbb
inc
sub
repz
push
inc
pop
and
out
movsl
mov
cld
add
cwtl
push
and
outsl
mov
and
jecxz
jl
and
cmpsl
xor
int
xchg
sub
and
repz
adc
inc
fldl
stc
push
fs
fdivl
ds
xchg
mov
pop
adc
cmp
out
mov
cmp
aaa
pmaddwd
jmp
aaa
in
pusha
add
popa
sub
pusha
enter
fucomi
pcmpgtw
add
push
ja
mov
xor
xlat
cmpsl
or
jmp
jl
add
and
cwtl
int3
decl
pop
jge
andb
in
mov
adc
mov
in
out
insl
or
mov
lcall
mov
fdivr
inc
jae
leave
pop
rcrb
insb
xchg
ds
outsl
xor
dec
mov
xchg
pop
pop
loopne
shll
cmpb
sar
ljmp
ja
lods
sahf
adc
mov
repz
out
mov
sub
pop
outsl
and
add
js
xor
xor
hlt
push
dec
imul
test
sbbb
lahf
stos
subb
dec
mov
push
popa
lret
inc
or
test
test
sbb
sbb
pop
adc
fiaddl
add
sbb
jne
sbb
enter
dec
jo
push
fcoms
icebp
mov
mov
xor
rep
mov
jmp
adc
sbb
out
dec
xchg
xchg
cwtl
mov
cmp
jnp
dec
jbe
fmuls
dec
loopne
cmp
lods
andl
cmp
jno
inc
in
pop
insl
outsb
pop
inc
inc
mov
fsubr
cmp
cmp
fistpl
arpl
jnp
jno
inc
mov
repnz
jae
pop
ret
fs
loopne
pop
mov
rcrb
push
in
cmpsl
in
sub
iret
daa
and
sub
fs
pop
aas
mov
mov
mov
lahf
push
jnp
xlat
inc
stc
sbb
push
xchg
mov
icebp
xchg
mov
dec
lcall
add
fcmovnu
cli
jl
sbb
jge
mov
xchg
adc
into
aam
stos
cmp
lret
lret
mov
xor
addr16
push
shrl
mov
inc
cmp
lcall
std
aad
pop
mov
bndstx
mov
mov
leave
cmp
mov
mov
and
rorb
xchg
mov
ret
popf
dec
dec
je
pushf
mov
mov
cmp
dec
adcl
pusha
mov
lds
push
inc
pop
and
and
lret
arpl
pushf
lret
mov
mov
xchg
test
jmp
imull
and
enter
fwait
pusha
sub
jnp
mov
mov
fwait
mov
sub
bound
ljmp
inc
fcoms
mov
inc
adc
mov
mov
stc
loope
or
pop
sub
dec
imul
cmc
lods
sub
and
and
jp
mov
sbb
push
shll
out
in
push
popa
dec
jns
dec
outsl
pop
fisttpl
icebp
cmp
imul
push
cmp
xor
mov
sub
sub
pop
mov
jge
ja
inc
fdivs
sub
stos
mov
sti
mov
icebp
sbb
stos
icebp
pop
ja
cmp
jb
nop
fwait
ja
aad
dec
mov
dec
push
fsub
dec
jge
or
ss
jb
jmp
popa
fnstcw
or
mov
repz
shrl
lret
lods
xor
mov
lds
sub
cli
fsubp
add
and
out
dec
les
cmp
pusha
mov
scas
pop
inc
mov
or
lret
pusha
mov
fnstenv
cmp
movsb
push
jnp
adcl
mov
push
mov
add
xor
adc
or
rcrl
ffree
jl
sub
lods
push
cli
movsb
xchg
mov
test
adcl
cwtl
cmp
lcall
shll
icebp
push
push
repnz
cmp
mov
sub
mov
mov
test
and
cld
xor
inc
jb
ret
fs
push
fsubl
push
out
pop
ds
adc
loopne
fisubrl
jne
and
fstps
xchg
adc
xchg
jle
ret
ljmp
in
inc
sti
lret
scas
mov
fwait
pop
int
and
inc
sti
imull
popf
scas
iret
pop
out
in
jae
or
push
mov
loopne
pop
ds
jno
add
push
cltd
adc
lock
aas
sub
loop
add
jne
sbb
cmp
nop
cltd
and
rcrl
mov
inc
and
sbb
cmpsb
test
insb
jb
out
sti
jge
shrl
in
andl
inc
icebp
cld
movsb
cmp
xchg
inc
aas
xor
jg
mov
adc
out
pop
and
fidivrs
sbb
dec
add
call
js
decl
jns
mov
fstps
dec
lock
mov
xorb
mov
enter
mov
jo
xor
mov
fldcw
data16
jg
cmp
dec
stos
imul
movsb
cmpsb
push
adc
xchg
lret
mov
jmp
lcall
cmc
shrb
jae
adc
inc
lock
cmp
adc
fdivrs
icebp
cmpsb
bsf
jbe
pop
xor
mov
sti
test
xchg
sbb
dec
ja
adc
maxps
jg
hlt
jmp
clc
lds
cmp
ret
sub
xchg
cmp
mov
stos
add
jge
stos
adc
xchg
sub
rolb
incl
test
sub
test
mov
loope
add
pop
iret
inc
je
movsb
movsb
jmp
pop
adc
andl
and
pop
gs
into
mov
aaa
decl
xchg
ds
rcrb
and
idiv
jmp
sub
rcrl
call
ror
mov
loopne
ret
lds
mov
clc
aad
sub
adc
adc
or
sub
pop
movsl
loope
mov
push
int3
addl
loope
adc
and
mov
adc
xchg
mov
cmpsb
scas
inc
xchg
lahf
sar
pop
push
call
repz
fs
and
repnz
xor
mov
sbb
inc
jb
aas
jp
xor
movb
xchg
cli
movsl
jnp
test
lret
jo
sbb
mov
pop
sti
dec
cmp
xor
aas
and
incb
lahf
scas
sbb
push
rclb
insl
in
xchg
lret
sarl
push
xchg
movsb
pop
sub
std
pop
mov
pop
out
jl
pop
lcall
dec
andl
iret
fldcw
lock
jnp
inc
lea
inc
dec
shlb
jae
out
jg
cld
mov
mov
and
jl
xchg
mov
sarb
lahf
sub
das
mov
xchg
addl
repnz
stos
outsb
test
xorl
adc
popa
sti
insl
pop
or
sub
push
xchg
outsb
ds
push
movsl
inc
sbb
inc
dec
add
pop
nop
pop
stc
add
cmp
xchg
xlat
jns
dec
mov
mov
adc
insb
and
or
pop
push
push
movsl
insl
dec
sbb
out
pop
push
pop
les
and
and
dec
adc
rcrb
mov
fists
sahf
es
sbb
adc
shrd
xor
adc
imul
and
cmp
notb
inc
out
cmp
cmp
sub
adc
cmc
mov
dec
stos
inc
in
fnstsw
xor
cwtl
mov
pop
dec
inc
push
sub
dec
loop
and
int3
push
pop
xor
add
mov
pop
lret
xchg
jmp
mov
mov
das
push
rcll
fnsave
xlat
fs
xor
jl
cmp
pusha
popf
movsl
loop
pop
push
std
inc
enter
add
sbb
pop
push
dec
int
orl
mov
repnz
cltd
out
sub
in
xor
popf
cs
xchg
sti
int3
pushf
sub
pop
xchg
pop
lret
jl
or
int3
sub
sbb
mov
out
jl
mov
ss
jo
adc
jb
add
rol
test
in
push
sub
imul
push
cmpsl
fadd
xor
nop
lods
ljmp
jecxz
push
pop
cld
cmp
inc
ret
mov
pop
and
inc
ljmp
lret
dec
push
dec
dec
sub
hlt
inc
jbe
push
mov
dec
jne
in
sti
addr16
movsb
stos
fsubl
test
and
xor
mov
iret
or
xor
sub
jg
cmc
cmpsl
jns
test
cmpl
jnp
clc
ljmp
adc
mov
repnz
in
push
mov
aas
push
lds
cmp
sbb
add
insl
add
pop
dec
dec
out
mov
outsl
sub
mov
push
ja
clc
out
mov
and
adc
repnz
dec
daa
mov
xchg
or
andb
out
cmp
xchg
inc
xchg
aas
iret
dec
insl
mov
and
iret
push
sub
ret
or
cld
pop
je
xlat
mov
mov
mov
pop
dec
stc
lods
in
jge
xchg
repz
mov
sub
sub
adc
mov
lock
ljmp
data16
dec
insb
mov
xchg
mov
push
scas
out
add
pushf
data16
in
in
xchg
mov
mov
cs
add
jo
inc
pushf
and
stos
mov
push
mov
mov
cmpsb
out
into
aas
jl
push
movsl
adc
lods
push
jno
adc
ret
ja
popa
mov
cli
not
in
jo
sbb
shlb
xor
pop
cmp
or
and
xor
in
pop
movsb
mov
sbb
push
fwait
sarl
jge
dec
shll
in
bound
fld
jbe
mov
mov
xchg
fs
sub
sub
push
pop
scas
push
mov
inc
scas
sbb
mov
cmp
sbb
push
cmp
js
rcr
adc
jne
pushf
lret
lret
adc
adc
and
aas
mov
jmp
jb
mov
cwtl
testl
aas
sub
add
sbb
add
push
sub
cmpl
out
pushf
dec
packssdw
xchg
fidivl
lret
dec
adc
cmp
dec
mov
mov
dec
fstpt
aas
push
test
rclb
push
popa
jge
lret
into
push
mov
xor
cltd
stc
mov
iret
call
lea
mov
sub
arpl
mov
mov
mov
outsb
lret
and
adcl
xchg
add
jecxz
mov
mov
adcb
inc
cltd
xchg
push
add
mov
movsl
in
and
repz
jbe
cmp
mov
mov
fcmovne
xchg
daa
out
inc
mov
jnp
mov
xchg
pop
sbb
and
rol
jno
push
or
ljmp
lret
loopne
dec
push
mov
mov
inc
insb
sarb
xchg
sahf
pop
out
add
dec
or
sub
or
adc
movsb
loopne
fstps
jmp
imul
pop
sarb
fisttps
or
into
adc
aad
pop
sbb
push
mov
insl
push
push
or
jmp
cld
push
dec
sbb
or
sbb
add
inc
or
dec
jle
das
sub
roll
test
mov
inc
inc
xchg
das
addl
xchg
ret
out
test
notl
stc
cmp
lret
lcall
insb
insb
add
movsb
repz
cmp
shrb
sbb
out
pop
jnp
push
ret
adc
scas
push
or
daa
jb
fisubrl
jecxz
mov
jl
aas
mov
loop
mov
lods
in
out
mov
inc
out
insl
out
mov
ret
ja
sti
inc
fildll
sbb
jb
pop
mov
or
rolb
jnp
clc
ret
mov
sub
push
sbb
and
push
mov
loopne
addr16
mov
pusha
in
cli
and
xor
adc
sahf
jp
push
andl
push
pop
sub
testb
or
lcall
sub
lahf
mov
mov
pop
xrelease
inc
shl
in
outsb
xchg
std
sub
mov
divl
sarl
leave
fpatan
mov
xchg
cmp
xchg
xchg
and
rolb
xor
mov
pop
daa
add
fdivr
sub
inc
out
stc
ds
and
cwtl
cwtl
inc
movsl
shrb
in
aaa
shrb
in
add
jnp
cmp
movsb
xchg
xlat
in
stos
jb
jl
test
nopl
repnz
imul
dec
cmpsl
pop
sbb
jne
outsl
adc
fadds
mov
mov
jge
xchg
sbb
pushf
imul
pop
int3
adc
test
fwait
cmp
hlt
mov
sbb
and
pop
lcall
aam
or
arpl
std
add
ljmp
popa
pop
int
stos
test
std
fbld
pop
pop
ja
sbb
inc
adcl
push
mov
lret
daa
pop
prefetch
cwtl
dec
mov
mov
mov
icebp
push
rcrb
in
inc
cwtl
sbb
add
xor
dec
or
insl
push
pop
mov
imul
sub
mov
adc
jbe
xchg
testb
pop
xor
loop
push
shr
push
fcmovne
scas
fmuls
pop
cld
xor
fwait
mov
inc
lock
sbb
jno
inc
aad
dec
sbb
push
lods
or
dec
adc
jnp
push
xchg
fs
mov
cld
sub
dec
out
rcr
xor
lcall
shll
push
jge
mov
lahf
jmp
dec
fdivs
jno
add
shr
fisttpll
mov
fdivrl
mov
ja
imul
mov
push
xlat
inc
dec
lret
test
and
pop
jmp
mov
shl
fdivr
mov
mov
xchg
sbb
jle
jge
into
push
xchg
cmp
push
add
fildll
cmpsl
lcall
jnp
enter
add
pusha
call
test
sub
push
aam
out
push
leave
inc
adc
xchg
xor
push
clc
mov
pop
xchg
lret
xchg
insb
in
cld
cmpsl
jmp
les
mov
sti
movsl
add
xchg
push
out
das
ret
sbb
inc
lock
add
mov
and
push
jg
mov
ret
fildl
push
lcall
inc
mov
fwait
and
pop
xor
pop
insl
mov
dec
mov
cmpsb
out
cmp
mov
test
xor
addl
fistpll
adc
lock
mov
fwait
add
cmp
repnz
fdivl
cwtl
and
add
mov
je
cwtl
add
fsub
insb
sbb
sub
mov
stos
pop
inc
leave
adc
iret
data16
inc
inc
les
mov
adc
icebp
mov
add
jg
adc
popa
mov
sahf
mov
aaa
data16
mov
lea
out
lods
jp
add
popa
jo
enter
cmp
xor
adc
dec
std
push
data16
push
sub
pop
push
adc
xor
stos
pushf
sub
js
out
jbe
add
add
ud2
and
and
ja
cmp
nop
ret
sbb
sub
inc
lods
cmc
or
sub
in
adc
out
ds
negl
sbb
xor
mov
jae
and
stc
lea
xchg
xor
mov
cmc
in
imul
jbe
aam
xchg
push
pop
jmp
mov
test
dec
lret
inc
xor
cmc
push
jl
std
xchg
mov
xchg
sub
mov
fcmovu
outsl
test
pop
pop
popf
mov
fnsave
std
popf
mov
or
movsl
add
adc
ja
push
call
insb
xchg
dec
and
repnz
aas
xchg
dec
mov
fldl
push
sub
mov
push
sbb
dec
out
fadd
gs
xchg
stc
dec
mov
in
repz
or
popf
iret
jp
int
repz
jge
xor
fbstp
sbb
mov
jecxz
in
mov
icebp
or
rcl
scas
push
push
ds
inc
push
and
dec
inc
out
nop
fbld
insl
xlat
shl
mov
push
xor
sub
hlt
sub
pop
xchg
adc
pop
push
push
sub
xchg
shrb
jb
add
mov
lret
lcall
clc
scas
cmp
dec
in
cmp
mov
cmp
pop
pop
mov
xchg
dec
mov
ja
popa
adc
test
sbb
mov
jg
fcompl
pop
pop
ja
out
hlt
fdivs
lock
jno
cs
push
xchg
js
pop
iret
xchg
fiadds
sarb
jns
mov
push
push
sub
mov
push
dec
out
arpl
nop
ret
push
and
inc
jmp
dec
ficoms
pop
out
out
inc
sbb
push
scas
mov
jno
in
xor
and
out
jmp
cmc
push
pop
mov
fildll
imul
fsts
xlat
or
xchg
test
push
pop
cmp
adc
xor
dec
out
gs
push
ja
gs
imul
call
push
loop
popf
dec
les
add
aaa
sbb
repnz
push
test
mov
cmp
mov
pop
out
add
fldt
in
and
jb
cli
or
outsb
hlt
adc
sub
bound
xlat
adc
xor
pop
pop
test
sbb
xchg
das
mov
or
scas
dec
xor
loope
es
cmc
and
cs
sbb
test
mov
movsb
aam
dec
mov
push
out
cwtl
movsl
lahf
test
leave
mov
shl
out
fsubr
adc
mov
roll
pop
jle
fldt
add
in
js
test
lds
das
aam
push
insb
pop
loop
inc
jmp
pop
imul
out
rcl
int
add
inc
enter
mov
mov
fisttps
stc
lea
ror
xchg
adc
lahf
lds
pop
and
push
cmp
std
sar
xchg
lods
cs
xor
sub
mov
push
inc
fwait
ljmp
add
pop
pop
shlb
sti
stc
jbe
xchg
int
or
sub
stc
jno
cmp
or
xchg
mov
push
xchg
inc
cmp
cmp
ljmp
out
rcll
cmp
xchg
aas
add
jno
add
roll
lcall
cmp
repnz
inc
movsb
mov
push
mov
sbb
jle
and
or
mov
inc
imul
mov
push
adc
xchg
loopne
out
outsb
adc
mov
sti
js
jmp
push
lret
mov
pop
mul
or
loopne
or
loopne
clc
in
js
and
int3
addb
mov
ljmp
sub
mov
fs
rclb
push
icebp
and
shr
lret
jle
push
adc
fiaddl
cmp
int
dec
fmul
es
fimuls
arpl
movsb
les
xchg
push
mov
jge
test
outsl
fisttpll
daa
push
addl
add
dec
lods
out
or
mov
cld
and
fiadds
es
js
xor
sub
sti
mov
je
sub
add
les
adc
xorl
add
outsb
cltd
std
inc
or
push
mov
push
xlat
push
push
loope
imul
push
rcrb
out
shll
push
insl
push
add
nop
sub
mov
cmp
xchg
test
mov
jnp
int
mov
icebp
dec
frstor
push
pop
std
jmp
jp
pop
scas
popa
xchg
mov
xlat
into
mov
addl
cwtl
xchg
repnz
xor
jae
or
mov
adc
cmp
adc
adc
adc
fs
das
mov
lret
ja
xchg
add
into
in
mov
inc
pop
cmc
push
mov
sbb
jbe
test
push
divb
pop
cltd
fiadds
adc
sub
das
push
xchg
xchg
dec
lods
inc
add
loop
inc
sahf
or
xlat
xchg
data16
push
bound
insl
mov
test
xchg
in
jge
xchg
movsl
add
shrb
mov
sar
xor
mov
inc
push
push
xor
fsubs
pusha
sar
sub
mov
inc
insl
xor
aas
push
insl
pop
pop
xor
leave
imul
xchg
scas
ds
mov
pop
adc
adc
inc
xlat
sub
and
cwtl
andl
dec
outsb
jecxz
sbb
aad
adc
cmc
lret
cmp
push
in
lods
lahf
mov
iret
mov
push
push
xlat
and
adc
gs
nop
icebp
mov
xor
pop
sub
xchg
jl
mov
mov
jp
shl
loop
int
pop
cld
cmc
cwtl
out
lcall
cmp
mov
pusha
scas
imulb
sbb
cmp
in
test
push
jecxz
jo
ret
adc
in
lods
sbb
cmc
xor
xchg
mov
fildll
pop
push
mov
cltd
push
inc
pop
push
mov
ja
das
rcrl
cmpb
ds
gs
mov
mov
dec
cmpsl
mov
mov
or
cli
and
jge
pop
xchg
mov
push
or
mov
xlat
push
add
adc
xchg
test
fimuls
sbb
push
clc
idivl
lahf
cmpsb
mov
push
subb
jg
sbb
sub
cmp
push
and
in
jle
adc
insb
cltd
cltd
and
dec
jns
lret
jecxz
mov
mov
shr
xor
mov
inc
pop
jp
xchg
lret
sub
cltd
mov
adc
imul
inc
stos
xchg
aaa
push
cmpsb
insb
movsl
orb
push
pushf
mov
stos
stos
outsb
ret
daa
push
mov
or
cmp
pop
xchg
addr16
lahf
int3
aas
fwait
push
or
ficoml
movsl
rorb
ret
add
fidivl
jo
fidivs
jae
ret
les
loop
xchg
sbbb
stc
orl
popf
xor
dec
incl
cmpsl
mov
mov
loop
dec
jne
ljmp
xchg
sub
in
stos
in
push
fs
sti
jne
jmp
xchg
push
dec
lcall
in
cld
outsl
mov
outsl
jp
ret
push
sbb
sahf
or
lock
adc
dec
not
lods
sub
or
mov
pop
and
mov
mov
pushf
enter
adc
and
pushf
adc
test
cmp
sub
mov
adc
pushf
push
lcall
jne
fs
adc
out
clc
cmp
lods
addr16
sahf
cwtl
or
aam
mov
in
inc
stos
bound
decb
lds
jle
add
or
mov
adc
jae
and
clc
mov
clc
pushf
jns
in
mov
adc
or
xlat
pop
sub
mov
lahf
in
jb
leave
xchg
xlat
add
adc
jnp
sub
in
pop
inc
adc
cs
mov
lcall
lea
dec
out
lods
ficoml
mov
xor
pop
jne
cmp
sub
cmpsb
cmpsb
xchg
stc
mov
sub
dec
cmpsw
mov
mov
dec
cmp
sub
ja
mov
add
ss
loopne
inc
rcl
pop
lods
inc
sbbl
xchg
push
add
mov
jl,pt
sbb
jbe
pushf
sub
int3
jle
pusha
jge
daa
out
cld
jmp
xor
cmp
mov
inc
fwait
ds
shl
inc
xor
push
pop
fistl
sahf
mov
push
mov
in
ljmp
add
inc
cmp
pop
leave
lahf
sbb
test
jp
rcrl
loop
test
jge
dec
sbb
fisttpll
inc
and
in
lret
cld
cwtl
loop
xchg
in
subb
repz
or
jnp
mov
sub
cmp
xchg
aam
mov
sahf
ffree
test
sbb
inc
mov
push
or
imul
insb
push
sub
fwait
mov
lahf
pop
popf
insl
fwait
mov
xchg
mov
iret
gs
sarl
repnz
ficomps
stc
xchg
lret
shll
add
or
sub
ss
andl
inc
js
pop
sub
aad
cld
jl
cwtl
xor
cwtl
adc
sub
dec
xor
or
adc
push
push
mov
insl
dec
inc
xchg
push
shll
xor
aaa
jae
jns
and
xor
and
mov
mov
fsubrs
push
push
mov
orl
int3
pop
jb
sbb
in
ss
xor
or
jge
iret
scas
sahf
adcb
test
mov
xchg
jnp
jmp
pop
pop
push
xor
sti
and
mov
pusha
jae
mov
cmpsl
or
push
sbb
adc
daa
iret
pop
fchs
cmpsl
imul
jge
out
test
mov
outsl
loop
mov
mov
mov
cmpsb
dec
xor
pop
mov
add
mov
adc
xchg
leave
mov
fstl
sbb
aaa
mov
mov
pop
rclb
mov
jno
jno
and
push
mov
lods
les
push
and
xchg
adc
insl
pop
sahf
gs
stc
faddp
or
js
lcall
scas
push
or
xchg
bnd
sub
cmp
mov
jae
adc
pop
fisubrs
inc
jnp
add
or
adc
out
or
shrb
inc
rcrl
clc
outsl
xchg
sbb
dec
cli
scas
gs
sbb
es
or
inc
push
ja
inc
ret
cli
push
xchg
sahf
add
popa
add
mov
sbb
cmc
xor
jne
cltd
xchg
adc
jle
or
dec
shrb
adc
outsl
hlt
pop
daa
sub
dec
shrl
push
and
enter
xchg
mov
push
push
sbb
das
insb
inc
scas
pushf
mov
loop
jns
xchg
and
xchg
dec
jle
aas
dec
push
sbb
fcoms
cwtl
loope
rcll
xlat
test
test
push
inc
pushf
add
jns
cmp
xchg
mov
hlt
call
mov
les
and
jbe
out
jne
fimuls
add
pusha
sub
fcmovb
lods
repnz
mov
fdivl
dec
sbb
xchg
jge
mov
imul
and
add
adc
bound
ljmp
std
sbb
bound
aam
sub
inc
jecxz
pop
pop
sub
and
pusha
test
pop
cmc
pop
mov
lcall
pop
jecxz
or
fisubrs
enter
pop
out
adc
call
push
inc
lock
pushl
fdivs
aaa
mov
movsl
adc
jle
in
sbb
inc
xchg
shll
inc
pushf
xchg
jbe
lret
push
ret
jne
jbe
jmp
pop
into
cmp
jle
fs
bound
enter
stc
sub
mov
push
cmp
or
cmp
jg
stc
mov
mov
and
push
lds
stc
or
dec
fcomip
xchg
scas
enter
test
addr16
out
jns
mov
or
push
popf
jg
cmp
and
repnz
push
push
dec
or
mov
test
adc
push
aas
jmp
cltd
aas
dec
push
mov
mov
js
test
decl
jge
mov
mov
lods
out
scas
aad
dec
dec
stc
add
xor
cld
mov
lods
xor
leave
cmp
mov
cmp
jnp
adc
test
push
push
hlt
test
sub
int
inc
push
sbb
outsl
loope
xor
xor
fbld
dec
add
pop
adc
pop
popa
mov
jle
es
xchg
xchg
mov
mov
add
in
stos
cs
mov
mov
lea
scas
mov
mov
push
stc
or
test
mov
movsl
cmp
cmp
mov
pop
sbb
push
popa
subb
ror
test
fisttpl
sub
sbb
cmp
xchg
fcmovb
pop
rcrb
and
inc
decb
sub
mov
dec
cmpsl
xchg
ja
aaa
call
icebp
push
sbb
aam
dec
inc
aaa
lcall
addl
leave
sub
sbb
cmc
jne
mov
js
dec
bound
push
shrl
subl
call
add
sbb
test
stc
test
sub
xchg
arpl
xchg
push
push
or
push
cwtl
or
sti
fidivs
leave
iret
stc
cmc
movsl
add
jae
pop
ds
es
mov
fs
sti
aam
add
test
add
cmpl
cwtl
ds
jb
shrb
rep
jl
pop
push
js
in
dec
mov
mov
ret
lahf
shrb
cmpl
lret
cmpsl
jne
cmpsb
gs
jbe
cmpsl
cmp
into
mulb
les
popa
dec
sub
pop
outsl
in
scas
shl
mov
pushf
xchg
sub
inc
xor
pop
iret
insl
into
movsb
cmpsl
push
jge
add
pop
cmp
cmp
inc
mov
jmp
imul
xchg
fucomp
hlt
sbb
jmp
cmc
sbb
aas
or
cwtl
sbb
jge
js
mov
sub
fistps
gs
sbb
fisttpll
add
dec
jmp
or
stos
imul
pop
rorl
inc
in
insl
les
cltd
push
push
sti
loope
iret
es
sbb
cmpsb
sarl
xlat
mov
rorl
hlt
inc
sbb
in
cli
push
lods
outsb
add
pop
cs
cwtl
ret
lret
imul
sub
dec
xchg
test
and
adc
push
add
ss
mov
dec
push
ljmp
testl
arpl
or
fisttpl
repz
repnz
push
xchg
sbb
mov
mov
dec
and
add
sub
add
mov
adc
int
cwtl
lods
test
test
cld
daa
jp
sub
adc
mov
pop
or
ja
outsl
push
sub
ss
std
xchg
cmc
or
repz
cli
fcoml
cmp
xor
outsb
xchg
jmp
cmpsb
pop
sbb
test
pop
push
add
mov
pop
cli
push
dec
and
sbb
pop
mov
adc
pop
fstps
pop
shrb
aaa
inc
and
imul
sub
sub
out
cmp
sub
sub
sub
pop
mov
mov
mov
cmp
sub
jl
fmul
xchg
mov
shll
add
movb
pop
daa
push
sub
push
hlt
lret
xor
shlb
arpl
and
jbe
push
mov
sahf
push
lret
pushl
xchg
test
xor
fisttpl
aas
bound
jge
dec
mov
jl
dec
or
mov
push
dec
push
std
cld
push
mov
pop
pusha
add
adc
sbb
push
push
xor
or
jbe
push
add
sbb
adc
cld
inc
gs
imul
pop
xchg
imul
xchg
out
mov
cmpsb
or
in
rcr
jb
push
lods
fiaddl
mov
stos
std
cltd
lcall
mov
js
xor
dec
and
lret
xchg
imul
jae
fadds
call
add
fnsave
push
mov
scas
mov
in
push
les
mov
dec
stos
mov
and
jl
or
xor
push
and
mov
jbe
mov
dec
lods
push
sbb
in
xchg
cltd
and
lock
sbb
xchg
jno
jne
in
or
mov
out
iret
mov
push
insl
jo
push
test
cmp
dec
repz
hlt
and
imul
xchg
test
out
ret
and
stc
mov
pop
ss
jns
mov
ret
inc
test
xor
mov
mov
ret
mov
mov
dec
int3
jl
popf
bound
je
iret
aaa
movsb
loope
pushf
pop
or
push
mov
jae
insl
mov
loop
push
push
cmc
sbb
sbb
iret
adc
cmc
dec
xchg
jbe
pop
mov
jo
pop
cwtl
mov
push
mov
sti
mov
mov
push
mov
pop
cli
out
js
push
jle
rcll
sbb
fsts
add
fsubr
jns
jb
inc
shll
inc
xchg
inc
shlb
cmp
lcall
pop
xor
gs
fcmovne
mov
fs
xlat
cmpb
push
inc
ja
insb
sub
cld
repz
and
dec
lahf
pop
mov
or
mov
lcall
jp,pn
decb
mov
xor
mov
ffree
and
sub
inc
arpl
sbb
mov
inc
cmp
in
or
hlt
pop
sti
cmpsb
mov
in
sub
pop
adc
outsb
push
inc
mov
fimuls
mov
int
std
nop
in
lods
mov
pop
jge
notb
jmp
xlat
ds
sarl
enter
xchg
movsl
cmp
mov
fcmovu
push
add
xchg
ret
mov
stc
sub
scas
mov
mov
sub
inc
cmpsb
into
mov
imul
xchg
fcmove
lret
mov
push
xchg
jo
aad
mov
lcall
outsl
inc
xor
jne
ss
cmp
jbe
imul
jg
mov
adc
and
and
push
mov
test
aas
inc
stc
xor
push
hlt
add
dec
push
ja
jns
movb
aam
cmp
sahf
pushf
orb
ss
adc
in
add
movb
inc
cld
fstp
and
hlt
mov
fdivrl
and
pop
lcall
xorl
imul
andl
aad
daa
adc
mov
or
es
mov
je
mov
movsbl
rcrb
cltd
out
inc
lcall
mov
repz
mov
cli
inc
leave
das
push
testl
jb
push
sub
lret
and
jno
in
xchg
and
push
push
ficoms
dec
popa
jmp
inc
inc
inc
fmull
movsl
movsb
leave
cmp
sbb
je
test
jl
scas
aaa
jle
xchg
out
mov
lcall
adc
adc
cmp
or
or
popa
rorb
dec
mov
mov
sbbl
js
pushl
outsl
mov
pop
xor
fldenv
xchg
imul
mov
xchg
xchg
adc
push
mov
push
frstor
daa
adc
mov
and
cmc
and
sub
cmp
adc
rcrl
pushf
push
aam
xor
cli
clc
xlat
mov
mov
repnz
jb
sbb
ret
inc
dec
dec
cwtl
cmp
icebp
cmpsb
sub
call
sti
or
imul
sbb
pop
out
xchg
mov
mov
inc
in
ffree
rcrb
in
pop
xchg
jmp
daa
out
push
lods
mov
jae
outsb
push
test
repnz
inc
or
cmp
pop
sahf
addr16
imul
std
sbb
ds
ret
imul
fistl
cmp
in
pop
andb
sbb
xchg
adc
xchg
les
rcrb
negl
hlt
cli
inc
fsubrs
cmpxchg
sbb
int3
je
or
push
call
mov
xchg
pop
xchg
jp
js
imul
pop
test
adc
xchg
add
or
and
push
xchg
xchg
xchg
enter
xchg
jecxz
mov
jg
iret
mov
pop
pop
ret
pop
enter
sub
pop
inc
jo
out
rorl
bound
xlat
add
ja
sub
adc
push
inc
in
or
cmp
imul
xchg
dec
repz
lcall
mov
stc
je
ret
lea
mov
clc
adcl
dec
push
insl
mov
or
jge
jne
mov
mov
adc
pop
clc
packssdw
dec
stc
push
and
icebp
gs
dec
fsincos
mov
addl
fisttpll
les
pushf
dec
mov
inc
xor
xor
xchg
stos
push
imul
mov
dec
in
call
pop
cli
arpl
add
add
loopne
test
shl
icebp
aam
das
loop
cld
rcrb
adc
fisttps
ja
jge
pushf
arpl
pop
mov
xor
repnz
loopne
xor
bound
jns
dec
inc
pop
icebp
pop
jge
js
sub
lret
insl
xchg
fimull
lods
adc
fcmovu
fiadds
pop
push
scas
in
rorl
sub
dec
mov
dec
cmc
andb
pop
cmc
push
and
dec
push
jp
test
mov
sub
lcall
and
inc
sub
mov
fwait
fwait
and
or
mov
mov
sbb
inc
xchg
popa
stc
mov
sub
pop
or
cmp
cmpsb
repz
repz
sub
aas
or
sub
test
inc
jl
lods
notl
negb
mov
xchg
inc
adc
jmp
mov
into
push
jmp
stos
xor
movsl
mov
das
out
mov
mov
lods
imul
jno
dec
adc
in
pop
lock
scas
loop
cmpsb
and
lahf
pop
ljmp
fnstcw
sub
test
nop
fstp
push
inc
lahf
cmp
cmpsb
das
dec
lock
xchg
dec
and
xor
insb
jmp
std
sub
inc
jbe
js
movsl
data16
ja
movsl
insl
pop
xor
icebp
insl
sahf
mov
mov
loopne
test
and
lcall
add
in
dec
jbe
mov
pop
addb
fdiv
push
dec
and
ja
sahf
push
push
and
int3
orl
mov
cmp
icebp
jae
push
mov
les
adc
push
mov
xchg
out
aam
pop
fimull
icebp
popa
outsb
mov
pop
js
push
mov
fwait
jp
xchg
cmp
sub
xor
daa
add
or
test
xchg
mov
pop
ficomps
les
ja
jl
xchg
or
fisubl
pop
pop
shlb
mov
mov
inc
xor
or
out
mov
add
cmpsb
adc
xlat
inc
mov
or
in
js
addr16
in
push
and
filds
jp
push
adc
and
or
sti
and
arpl
loopne
push
lahf
pop
repz
or
dec
or
xor
mov
or
sub
cmc
lret
divb
sbb
push
movsl
inc
xchg
fcomi
mov
ds
cmc
inc
lods
mov
pop
jns
mov
scas
sbbb
xlat
sub
push
popa
cli
xchg
and
loopne
scas
push
pop
cmc
cli
jne
push
pop
sbb
cmpl
xor
inc
add
loopne
clc
push
or
cmp
insb
jnp
stos
cmp
mov
fmul
scas
stos
xlat
jmp
loope
pop
push
mov
test
ja
outsl
jecxz
jo
cmpsl
or
xor
xchg
sbb
cmpsl
xchg
push
outsb
add
xchg
or
mov
sbb
sahf
mov
pop
sub
test
or
out
mov
cmp
sti
inc
cmp
pop
lock
push
cwtl
fimuls
aam
mov
hlt
arpl
jecxz
scas
inc
scas
scas
decl
leave
movsb
je
sbb
sub
cmp
push
lock
repz
cmp
xchg
loop
cmpsb
xlat
xchg
psubq
test
icebp
gs
imul
pop
fld
adc
daa
cmc
jl
ds
aam
ja
mov
pusha
in
loop
fs
cmpsl
jbe
and
pop
jne
sbb
fs
shrb
es
inc
dec
and
mov
loope
insb
incb
in
push
xchg
push
mov
push
repz
and
adc
pop
enter
or
cmp
cmp
jae
pop
loop
jp
push
fildll
insl
or
push
outsl
enter
rcrl
loopne
mov
mov
sbb
xor
mov
jecxz
adcb
nop
stos
mov
mov
andb
imul
js
pop
push
jb
jecxz
out
jae
mov
int
xlat
test
fisttpl
mov
ja
movsl
push
inc
fucom
mov
push
ror
les
imul
jg
inc
pop
xor
sub
fistps
dec
sub
aas
jg
lds
idivl
jp
and
xchg
movsl
inc
jne
mov
add
cmpsb
scas
out
xor
jno
add
jnp
sbb
inc
fucomip
mov
push
jmp
imul
les
mov
jmp
cmp
rclb
imulb
in
and
out
cmpb
sub
stos
and
pop
add
sti
cli
mov
jb
mov
sbb
push
jbe
dec
outsl
xorl
orb
mov
bound
mov
sub
dec
test
jno
sahf
xchg
adc
jg
out
mov
ffreep
cmp
das
gs
adc
cmp
mov
stos
bnd
add
pushf
pop
cmp
fisubs
sub
lds
jp
inc
daa
xor
sbb
xlat
xor
and
pushf
pop
mov
cmp
push
push
pop
sub
inc
aam
negl
pop
std
sbb
rcrb
jl
ret
jecxz
test
mov
jle
dec
pop
in
fcmovnbe
sti
lret
and
ret
insb
jae
push
ja
jp
sbb
dec
sub
imul
cmp
xor
test
repz
movsl
imul
hlt
into
sti
inc
in
orl
jg
xchg
pop
dec
movsl
mov
aas
mov
scas
mov
pop
imul
sub
inc
pop
shll
sbb
mov
cmpsb
lret
push
mov
mov
sbb
jecxz
call
sbb
mov
xchg
out
insb
je
rclb
cmc
and
hlt
daa
jecxz
adc
push
mov
mov
fistpl
sarb
mov
shrl
dec
lods
add
and
fwait
outsl
scas
xchg
jo
loope
adc
int
cltd
bswap
cmp
sti
add
fs
push
dec
and
push
lcall
movsl
push
push
sub
movsl
push
push
sbb
out
cmp
lods
test
adc
jbe
cmpsb
xor
js
call
mov
dec
leave
add
repnz
pushf
xchg
or
test
sarb
inc
andb
or
lds
pop
adc
out
pop
pop
aas
mov
jno
lods
dec
mov
xchg
xchg
jp
push
inc
fistpll
leave
insl
push
fucomp
cmp
cmp
out
nop
push
jbe
repnz
mov
in
dec
pop
add
xlat
shlb
push
jae
mov
into
clc
or
bound
ljmp
dec
inc
ficomps
jg
and
lcall
lea
rcrl
and
cwtl
xor
push
sub
jge
jae
imul
psubsb
push
stos
pop
lcall
out
push
mov
jne
jne
sbb
xchg
dec
push
lahf
push
stos
xlat
xchg
xor
jp
das
mov
in
inc
xchg
push
inc
aaa
ss
lahf
jecxz
in
test
loop
mov
sbb
lods
dec
jne
cmp
int3
lret
or
xor
add
or
daa
push
cmp
adc
cmpsl
sahf
cmp
jg
dec
js
or
sub
ljmp
mov
inc
pop
push
cmp
data16
fmuls
push
fsubrl
inc
fiadds
mov
mov
xor
lods
cmp
push
enter
mov
or
fmull
xchg
mov
fscale
ret
pop
imul
bound
mov
leave
xlat
cmpl
pop
sub
add
inc
bound
dec
jl
pop
xchg
dec
and
and
lea
xchg
jge
push
popa
rolb
in
xchg
pop
pop
pop
dec
mov
ret
movsb
in
in
xor
testl
jecxz
push
rcrl
pop
adc
cmp
fdivr
dec
pop
jmp
movsb
daa
or
cmpsl
bnd
or
scas
or
mov
repz
mov
push
sar
stc
es
les
sub
push
cltd
lret
out
scas
pop
fs
int
cmp
fcomps
push
xor
jns
sbb
insb
fsubs
ja
mov
push
lret
lret
jle
lea
pop
pop
frstpm(287
mov
jbe
sahf
lods
mov
test
jge
mov
pop
lods
outsl
out
fimull
mov
push
push
fldlg2
cwtl
pop
mov
hlt
test
xor
xchg
mov
pop
fbld
cmpsl
fnstenv
popf
mul
out
loope
pusha
int3
and
ret
and
push
cmp
out
xor
test
adc
xchg
ss
stos
outsl
pop
cmpsl
or
imul
jb
shlb
jge
push
lcall
dec
mov
iret
push
outsl
adc
fdiv
mov
mov
mov
cmpsb
icebp
or
and
lds
mov
adc
inc
jl
jno
shlb
je
sub
into
cmp
mov
dec
cltd
fsubr
hlt
xchg
push
inc
stc
sub
adc
and
sbb
mov
push
les
jecxz
xor
int
popa
sub
addr16
xor
and
imul
push
popf
inc
lahf
sbb
mov
xchg
cmp
mov
int3
inc
repz
push
pop
rcr
push
mov
int3
dec
arpl
inc
lods
cld
movsl
fcoms
inc
enter
rcl
daa
aaa
aad
sti
scas
addr16
or
pop
jne
adc
mov
out
jno
and
push
fnsave
sub
jb
rolb
dec
and
jnp
rcrl
add
shrd
jg
or
pop
sbb
ss
xor
mov
test
mov
stc
jecxz
sbb
add
in
mov
insb
mov
psrlw
cltd
js
aad
enter
les
cmp
push
in
not
scas
popf
mov
cmp
fwait
out
dec
mov
int
flds
mov
adc
jno
imul
dec
sub
add
sub
pushf
out
push
aaa
inc
mov
and
mov
mov
cmp
fsts
adc
sbb
xor
dec
icebp
les
fcompl
jns
xor
lahf
sub
cmp
ljmp
out
pop
cmp
pop
ss
test
imull
cmp
xchg
setle
and
addl
pusha
adc
jno
cmp
icebp
mov
out
sbb
or
jle
dec
sbb
test
cmp
cwtl
lock
mov
sbb
jbe
xchg
imul
cmp
idivb
aam
adc
imul
dec
sbb
and
sub
push
ds
and
xchg
mov
shr
dec
mov
xchg
mov
mov
mov
xor
inc
cmpsl
mov
xchg
testl
xchg
jecxz
jmp
ffreep
stos
push
xor
mov
lcall
ds
pop
loope
cwtl
cmp
ret
mov
cmp
xchg
out
movb
xchg
insb
mov
sbb
mov
ret
jmp
sbbl
sbbb
push
insl
and
or
cmpsb
lahf
in
adc
loop
pop
jg
inc
xchg
fmull
mov
test
lcall
jg
lret
sbbl
mov
cwtl
xor
and
adc
rorl
je
mov
mov
loopne
or
or
fisubl
int
push
jge
xchg
push
cmc
shll
push
les
add
xlat
popa
push
cli
or
sbb
push
repnz
add
loop
lods
jo
jae
cmp
mov
insb
lcall
insb
pop
or
xchg
rol
loope
mov
mov
mov
outsl
loope
mov
shlb
in
in
out
lock
ficompl
sbb
pop
jb
int3
cmpsl
shlb
xor
jnp
iret
mov
or
or
mov
jg
stos
das
sbb
inc
mov
or
pusha
sbb
xchg
daa
out
push
or
outsb
leave
mov
pop
out
mov
int
add
fstl
xor
leave
inc
add
inc
movsb
push
scas
das
aas
test
ss
iret
xor
jnp
je
dec
jmp
shlb
in
mov
or
stos
es
ret
sbb
push
cmpsl
xchg
sbbb
xchg
or
das
and
sub
fildll
lds
out
cmp
adc
data16
inc
cmc
es
sub
scas
cmp
fists
mov
push
mov
add
adc
xor
cmc
in
xchg
pushf
xor
lret
inc
push
lahf
jge
mov
mov
xor
pop
dec
adc
pop
jns
imul
jns
or
decl
test
and
jo
into
insl
pushf
insl
lcallw
xchg
js
or
imul
nop
loopne
and
xor
inc
in
mov
in
xchg
adc
lea
mov
sub
lret
mov
lret
or
repnz
mov
lret
or
aas
pop
sbb
sbb
sbb
xchg
test
in
jl
xor
jge
loopne
je
xchg
mov
dec
cmp
mov
movsl
out
into
dec
mov
pop
enter
int3
adc
and
lea
repnz
outsb
leave
js
negb
dec
sub
ja
pop
int
xlat
rcrl
ljmp
jbe
cwtl
test
in
cs
inc
jmp
mov
aam
dec
stc
push
push
cmpb
xchg
orl
imul
test
cmpsl
mov
test
std
cs
jmp
and
jae
in
jb
and
cmp
fisttps
or
sarb
cmp
in
ss
xor
jo
xchg
stos
mov
mov
add
adc
or
and
pop
jno
jno
aad
mov
nop
sub
mov
fidivrs
repnz
mov
sbb
ljmp
push
sbb
mov
ljmp
aam
add
sbb
stos
xchg
jp
rorb
xor
in
dec
lods
inc
scas
mov
movsl
aad
add
mov
mov
inc
pop
data16
and
lea
stc
sbbb
mov
add
mov
dec
mov
not
out
inc
inc
sarb
cs
mov
add
sbb
dec
out
pop
xor
shlb
ds
mov
arpl
pop
loopne
ljmp
and
mov
xchg
rolb
push
outsb
and
dec
adc
pop
sti
or
sub
xlat
jp
mov
rcrl
shlb
jmp
and
inc
idivl
mov
push
mov
stc
jnp
xchg
test
cmp
iret
imul
sbb
imul
gs
xchg
bound
xchg
dec
and
ret
push
cwtl
mov
cmp
lret
scas
jae
fs
push
sub
add
sub
mov
das
jge
out
test
xor
fildl
mov
pop
movsb
in
scas
loope
pop
fsubrl
insb
fnstcw
jo
mov
xor
insl
mov
scas
outsl
dec
xor
cmpsb
or
push
push
sbb
lahf
push
lahf
cli
mov
stos
jnp
sbb
add
repz
shlb
and
aaa
sbb
pusha
add
dec
sub
pop
push
jge
test
inc
sub
dec
imul
mov
dec
fbld
stos
movsl
mov
push
jo
add
jmp
mov
jg
push
dec
mov
dec
ds
icebp
jno
pop
pop
ja
mov
mov
jle
outsb
loopne
xor
bound
push
sbb
xchg
ja
test
enter
cmp
ret
sahf
push
pop
sub
pop
lock
push
ficomps
pop
add
push
stos
testb
and
decl
mov
mov
sbb
xor
sub
nop
shlb
jae
lret
xor
xchg
xor
xlat
ret
sub
or
rcrl
fmull
popf
dec
cmp
enter
add
fstpl
popf
cmpsl
into
ja
xor
mov
pop
pop
mov
cmp
rcrl
xor
je
call
dec
jmp
push
sbbb
add
imul
std
fnstsw
mov
imul
in
movsb
fmul
stos
lahf
jae
out
aas
fstpt
and
in
ljmp
pop
out
jno
test
icebp
repnz
push
andl
and
xchg
xchg
or
mov
mov
loope
sbb
les
adc
lock
xor
xor
sahf
xor
pop
aam
inc
pop
data16
xchg
mov
out
dec
xchg
dec
xchg
lar
mov
lock
pusha
sub
bound
mov
arpl
mov
test
lret
add
outsb
add
addl
xor
jae
subb
testb
mov
out
inc
add
daa
mov
nop
jp
push
sbb
push
fists
add
das
stc
arpl
xchg
repz
fs
inc
int
ficomps
push
xchg
jne
or
bound
test
loop
in
cmp
hlt
shl
test
and
lods
cmc
dec
es
aam
lea
arpl
and
mov
pop
sbb
stos
nop
cmp
pusha
pop
arpl
lock
clc
mov
mov
push
mov
lods
movsb
sub
into
test
pop
aaa
icebp
mov
stos
dec
mov
cmc
inc
xchg
cmp
ret
mov
cltd
pop
arpl
mov
mov
push
ja
icebp
insb
aam
and
xchg
sbb
lahf
jnp
scas
xchg
push
and
jg
rcrb
imul
movsl
in
cmp
inc
jns
jne
xchg
lret
mov
xchg
lock
dec
sub
push
mov
jmp
cmc
xorl
fwait
outsb
mov
leave
rolb
int3
inc
mov
mov
sbb
shrb
scas
xor
jp
in
hlt
add
cli
stc
int
pop
xor
cmp
out
jae
jns
inc
lret
mov
jg
adc
pop
jp
stos
inc
jg
les
cmc
inc
jge
out
inc
dec
loopne
mov
sar
jo
lock
rcll
adcb
push
xchg
pop
mov
clc
inc
rclb
inc
mov
enter
fdivrs
lret
push
clc
das
xor
inc
push
scas
xchg
pushf
shll
pop
iret
xor
fs
frstor
sbb
or
dec
push
sar
aam
popf
cld
inc
lods
loop
xchg
outsb
mov
scas
sub
lods
test
repz
inc
inc
sbb
sub
push
hlt
fldz
outsb
pop
push
stos
sbb
ss
es
jo
ds
data16
xlat
shll
cmc
scas
adc
xchg
testl
int3
jb
les
scas
push
shrb
cmc
aaa
stos
mov
subb
popw
cmpsb
mov
lahf
leave
sti
xlat
fstps
lcall
jg
inc
dec
int
jle
inc
jns
xchg
push
and
and
notb
add
fwait
pop
dec
or
test
in
cltd
push
cltd
cmpsl
je
jne
mov
mov
jno
cli
sarl
bound
xchg
jbe
roll
xchg
push
jp
cltd
sub
loope
sub
adc
and
repz
outsb
ja
sahf
pusha
and
nop
lock
jle
sbb
fcomp
mov
ljmp
and
test
add
negl
mulps
or
aas
shll
mov
pop
ret
sbb
pushf
into
sbb
lea
mov
ret
add
loop
cmpsl
jne
and
push
imul
pop
inc
in
push
pop
cmp
and
leave
imul
cmp
push
and
mov
add
and
jnp
insb
mov
push
data16
jae
sub
pop
ds
aad
ret
pinsrw
fcoml
pushf
test
fs
push
and
aaa
adc
stc
push
jns
pop
pop
dec
mov
idivl
jg
xchg
cmovge
leave
orb
out
pop
psllq
test
arpl
push
cltd
dec
stc
in
sahf
mov
adc
stos
dec
dec
clc
mov
imul
lds
cli
dec
stos
insl
dec
sarl
mov
mov
aad
mov
cld
lods
and
sub
movsb
mov
ja
fstpt
cmp
pop
jle
inc
int3
shll
out
push
mov
jge
inc
paddd
or
push
xchg
push
jno
push
jp
sbb
sub
jl
push
pop
pop
add
push
pop
pop
std
xor
sbb
dec
mov
fsubs
repz
ds
xchg
out
xchg
gs
stc
inc
das
mov
fs
scas
ss
cli
movsb
ret
pop
jmp
dec
xorb
mov
insl
icebp
js
test
insb
fisttpl
and
or
mov
movsl
sbbl
lcall
mov
loop
inc
jg
int
pop
push
mov
push
mov
mov
pop
hlt
cs
cmp
movsl
pop
sbbb
jle
add
sub
push
jno
popa
jmp
sub
dec
mov
mov
rep
test
xchg
fadd
mov
sub
fwait
popf
mov
inc
dec
adc
iret
add
or
cmp
test
cmp
jle
push
es
xchg
stos
and
fmuls
xor
lcall
jb
fcoms
dec
jle
ficompl
shl
mov
mov
and
add
fisubrl
inc
inc
je
enter
push
add
mov
in
add
xrelease
nop
fisubl
loopne
mov
dec
arpl
xor
std
rorb
pop
sub
loope
sahf
lods
repz
and
pop
sbb
xchg
jb
sub
jbe
push
or
insb
cmp
in
andb
xlat
rep
in
sbb
xchg
lea
xchg
mov
adc
lcall
mov
hlt
mov
int3
and
subl
inc
xchg
imul
popa
dec
test
cs
dec
subl
lds
inc
cmp
jmp
pop
xchg
lock
ret
and
stos
lahf
mull
scas
adc
enter
or
ret
test
popf
xor
cmpsl
and
insb
mov
imul
jnp
stos
lods
cmp
addr16
int
mov
jnp
pop
xchg
pop
dec
mov
pop
in
mov
inc
or
pop
push
punpckhdq
popf
pusha
pop
movsb
bound
adc
sub
mov
cmpsl
dec
mov
cmc
popf
push
shrb
lock
mov
mov
rorl
pop
imul
mov
das
outsb
rorb
fstps
add
movsb
push
movsl
sbb
and
outsl
mov
hlt
jno
mov
aaa
roll
sub
xchg
lods
or
add
jno
sub
jo
outsb
lock
mov
mov
insb
ret
fyl2x
pop
add
xchg
dec
push
mov
jle
fwait
xchg
lret
cltd
inc
jp
adc
loope
mov
mov
pop
mov
lods
mov
push
pop
push
int
int3
out
and
mov
mulb
xchg
test
aad
daa
clc
insb
std
pop
mov
pop
shr
pop
xchg
ret
bound
rcll
xor
jae
lock
pop
pop
aaa
add
mov
and
nop
mov
out
imul
xor
sti
inc
inc
xor
fnstcw
mov
inc
cmpsb
push
cmp
mull
mov
iret
arpl
sbb
sahf
hlt
jnp
stc
neg
test
in
orb
cmp
mov
xchg
or
stos
inc
lods
ljmp
out
lods
imul
std
adc
sub
mov
cltd
clc
push
fsub
sub
inc
into
aad
stos
ficoml
pop
push
xchg
xchg
xlat
fidivl
loope
adcb
loope
arpl
sub
xlat
jo
pop
jnp
std
aas
push
inc
icebp
decb
mov
push
adc
js
adc
xor
fdivrs
jb
adc
inc
mov
jge
cs
push
je
and
in
xchg
dec
jbe
mov
ret
insb
xchg
inc
je
imul
scas
popf
mov
data16
jge
lahf
sub
lods
adc
and
jmp
sar
mov
cmp
sete
mov
jns
sahf
std
pop
dec
jl
pusha
pop
cwtl
or
arpl
jmp
push
push
sbb
stc
mov
inc
xor
jno
mov
lahf
fst
das
mov
pop
sbb
ljmp
mov
jno
sub
xchg
std
rcrl
mov
or
iret
test
fbstp
movsl
aad
and
or
jge
mov
pop
sbb
lds
sbb
scas
out
sbb
sub
enter
push
idivl
mov
sub
cmpb
dec
or
outsb
std
push
sub
mov
mov
xchg
aaa
rcr
inc
cmp
jp
ret
and
enter
xchg
push
shrl
jg
popa
or
inc
xchg
pop
insl
out
stos
pushf
cmc
sub
adc
inc
ret
sub
ja
mov
sbb
jnp
movsb
testl
cmp
mov
inc
xchg
or
test
xor
in
mov
push
ja
imul
sti
cmp
adc
cltd
fists
repz
fcomps
or
pusha
sub
sub
bound
push
fmul
pop
daa
jmp
ljmp
mov
lds
inc
and
mov
daa
std
pop
or
xor
xor
add
rcrl
jmp
aam
inc
movsb
jne
lods
cmp
or
mov
sahf
mov
inc
mov
cli
fists
out
cmpsb
jb
cmc
inc
dec
pop
or
std
push
sbbl
jb
shrb
imul
mov
repz
les
lret
rorb
push
add
add
sbb
in
and
dec
cwtl
sbb
imul
aad
mov
loop
sbbl
lret
cltd
pop
inc
mov
jb
sub
mov
inc
cmovle
pop
pop
popa
into
jne
add
xor
pop
jbe
scas
sub
mov
mov
insb
xor
xchg
push
jge
mov
push
loopne
mov
push
mov
pop
repnz
jle
cld
lds
gs
mov
sbb
mov
pop
imul
sbb
int
mov
lods
cmp
mov
inc
mov
inc
xchg
add
push
mov
push
adc
mov
adc
xlat
xchg
lret
rcl
jne
jno
pushf
or
mov
lds
sub
push
fwait
or
mov
cmp
or
xchg
mov
adc
push
fidivs
aam
scas
adc
out
jg
cld
lds
inc
push
icebp
mov
xchg
jp
pusha
loopne
fidivrs
xlat
ds
insl
push
pop
sbb
or
dec
insl
pop
adc
out
cs
scas
mov
pop
fs
xchg
mov
xchg
sti
cld
cs
sbb
pop
loopne
jno
arpl
push
mov
mov
cs
or
adc
imul
clc
cmp
femms
incb
pop
insb
adc
cs
pop
jmp
sub
insb
fiaddl
in
mov
inc
lods
stos
sbb
jb
jmp
out
cmpsb
add
and
mov
hlt
inc
inc
xor
mov
jge
cmovae
dec
int
sub
mov
adc
lret
sbb
icebp
mov
lea
outsl
sbb
xlat
push
push
mov
int3
es
push
ljmp
mov
nop
cmp
sub
repz
and
jb
iret
ljmp
push
push
aas
fdiv
mov
test
mov
jns
mov
pop
loop
cmp
jo
stos
jge
add
int3
and
mov
dec
mov
aam
mov
push
push
inc
adc
mov
and
cmpsb
xor
sahf
mov
adc
dec
jno
ret
adc
sub
call
cwtl
ljmp
push
add
outsb
cmp
mov
icebp
mov
jp
fidivs
data16
xchg
mov
repnz
mov
lds
fnstsw
mov
aam
push
in
test
xchg
stos
js
xchg
aaa
sar
loope
sub
sarb
mov
test
into
xor
cmpl
stos
inc
loope
test
xchg
push
lcall
sbb
xchg
add
push
pop
xor
dec
cmp
sub
xchg
sub
imul
cli
fsubrp
fbstp
sub
adc
rolb
mov
popf
ds
scas
push
ret
mov
scas
sub
adc
cltd
rorl
shll
or
sub
jne
imul
fcom
push
xor
ljmp
stos
flds
subb
outsb
push
push
cmp
xchg
notl
mov
imulb
rcll
movsl
xor
mov
mov
mov
or
in
and
cmp
sbb
lahf
mov
mov
sbb
mov
push
repnz
push
pop
negb
gs
cmpsb
sbb
mov
out
insb
cld
loop
jg
mov
jnp
shrb
jmp
add
stos
iret
and
inc
pop
jbe
inc
add
mov
addl
test
les
pop
sub
push
jb
mov
dec
jmp
mov
adc
insl
adc
jg
xor
arpl
js
mov
fldenv
jge
rorb
aaa
enter
add
inc
or
jnp
lds
or
or
mov
or
cwtl
movsl
rcll
or
inc
aam
outsb
pusha
fiaddl
jns
stos
in
and
stos
call
into
stos
inc
pop
dec
shlb
pop
jle
fcmovne
fidivrl
pusha
loope
dec
into
into
xor
push
dec
dec
sbb
dec
mov
shlb
push
xchg
shll
sti
sub
add
jb
jl
and
sub
xchg
into
mov
shrb
push
pop
sbb
jns
imul
push
inc
push
icebp
and
mov
xchg
push
inc
incl
cld
pop
jl
insl
in
jg
inc
dec
in
fdivrl
or
mov
lahf
shll
insl
push
lahf
sub
test
adc
jb
sbb
add
ljmp
cmp
xchg
mov
sub
ljmp
fndisi(8087
mov
pop
les
jno
dec
mov
mov
clc
jno
subl
dec
jmp
loopne
lret
jne
cmp
insb
cmc
imul
insl
arpl
add
add
push
pop
adc
call
lods
inc
scas
insl
dec
ficompl
xor
jg
sub
mov
ficoml
inc
std
xor
sbb
movsl
test
test
mov
push
and
pop
jne
pop
dec
int3
rclb
xor
push
jno
fists
sahf
sub
mov
popl
jg
jns
jge
stc
ret
cmp
cmc
rcrb
mov
hlt
pop
adc
in
movsl
pop
xchg
mov
mov
fnstcw
cmpsl
inc
dec
out
adc
repnz
pusha
xchg
pop
jmp
jns
and
ja
repnz
sbb
adc
mov
rorl
cmp
in
out
clc
sbb
lods
shrb
adc
xchg
enter
fcomps
lods
and
int
cmp
adc
sbb
xor
inc
movsl
gs
mov
fists
push
mov
fucomp
push
cmp
pop
xchg
jle
ror
push
outsl
or
out
negb
xor
test
addl
add
mov
int3
pushf
xor
dec
mull
jmp
outsl
push
in
outsb
push
jle
inc
cmpsb
push
push
sub
and
in
cli
sbb
mov
sub
mov
push
or
loop
dec
jae
iretw
add
pop
adc
sbb
sbb
cmp
fistps
ds
sbb
inc
push
mov
test
das
jno
lds
lahf
arpl
shr
mov
push
lock
sub
mov
jns
xchg
jnp
mov
jl
jnp
adc
cmpsb
jg
iret
jmp
lcall
fildll
adc
sub
cmp
iret
inc
push
in
test
scas
cmp
xor
insl
or
or
cld
mov
push
aaa
inc
sub
push
mov
addr16
iret
xchg
inc
int3
rcl
and
jbe
push
repnz
into
xlat
mov
stos
sbb
mov
int3
jne
mov
ret
repz
dec
enter
dec
inc
bound
std
and
test
call
jnp
push
movsb
mov
xchg
adc
ret
mov
inc
sbb
loopne
cmpsb
cmp
lcall
adc
enter
pop
xchg
and
cli
bound
dec
loope
jecxz
add
call
adc
jg
lret
cmp
test
add
mov
fnstsw
lods
lret
repz
adc
jmp
hlt
dec
out
clc
inc
orb
nop
add
fneni(8087
rclb
lcall
out
inc
lods
mov
cmp
pop
push
mov
das
adc
sbb
out
cwtl
js
inc
fistl
jmp
cmp
int
xchg
fcmovb
loopne
sub
ja
std
pop
inc
bswap
push
adc
pop
jb
xor
popf
icebp
das
mov
cmp
cwtl
outsb
fdivr
pop
call
mov
ds
popa
mov
iret
leave
jno
aad
mov
test
aas
jle
jne
test
imul
iret
mov
lahf
xchg
cmp
push
test
adc
fcomip
xor
adc
ret
or
test
mov
cmpsl
sbb
jl
push
mov
jmp
ret
ljmp
xor
add
xchg
add
push
movsb
xchg
mov
mov
in
mov
sub
adc
jge
shl
ss
mov
sti
xchg
cmpsb
lcall
js
lret
bound
test
mov
in
sub
pop
add
sub
mov
out
sbb
push
sbb
jb
cmpsl
fdivl
aaa
inc
stos
js
fldl
mov
cltd
jg
ret
rolb
les
xchg
jo
movsl
mov
dec
inc
rcr
mov
inc
mov
add
out
ret
xchg
cmpsl
stos
das
addl
loopne
adc
fcoms
mov
imul
cltd
inc
inc
icebp
sbb
xchg
adc
jp
xchg
pop
cmp
jo
xchg
push
test
push
call
xor
loop
jb
pop
ja
mov
jno
cmp
mov
idiv
std
sub
jbe
cld
push
stc
lea
dec
push
call
orb
dec
cld
popa
test
lcall
sub
out
repnz
shlb
fdivr
push
xor
gs
in
cmp
inc
lds
repz
inc
dec
gs
addb
out
push
sub
xchg
mov
cli
push
ret
inc
and
sbb
adc
sarb
fwait
and
stos
and
or
pushf
mov
fsubrl
pop
sub
lret
addb
pop
pop
mov
pop
jo
inc
aad
mov
test
movsb
mov
cmp
mov
sbb
mov
int
es
mov
xchg
mov
xor
sbb
dec
jns
ljmp
cmc
cld
sbb
mov
arpl
fcoms
adc
iret
push
int
test
mov
cmpsl
mov
lock
xchg
or
jns
sahf
lock
int3
fldl
clc
cmp
je
and
jmp
pushf
rorb
js
data16
push
adc
pushf
test
insb
idivb
mov
xchg
mov
xchg
int
fs
clc
jbe
sbb
in
push
pop
repnz
mov
and
mov
in
das
sbb
pmullw
cmp
pop
mov
adc
or
jno
sub
inc
push
mov
jne
mov
inc
nop
mov
push
xlat
test
div
push
mov
clc
fisubl
jecxz
pop
iret
and
inc
std
test
pinsrw
xchg
jb
mov
loopne
sbb
outsl
xchg
mov
inc
push
dec
inc
test
inc
movsb
xlat
fisubrs
mov
leave
out
fnstsw
jnp
mov
movsb
rclb
iret
fsubp
xchg
pop
xor
scas
iret
mov
in
sarb
stos
sub
push
mov
lods
add
js
stos
pop
push
xchg
push
out
bnd
getsec
adc
movsb
adc
xchg
iret
push
adc
and
imul
push
jl
ja
in
xchg
jbe
mov
mov
jnp
arpl
xor
adc
jb
inc
mov
gs
loope
pop
clc
scas
jp
xchg
bound
mov
adc
fldcw
scas
pop
push
mov
add
add
shr
adc
loopne
outsb
pop
dec
lahf
push
mov
mov
pushf
sbb
lods
es
rclb
stc
mov
xlat
enter
ljmp
mov
stos
cmp
sbb
outsl
pop
adc
sbbl
xor
inc
mov
add
and
iret
and
cld
push
or
jno
test
cmp
mov
mov
push
and
ret
popf
xchg
mov
movsl
inc
call
test
lahf
jp
shlb
fwait
aam
adc
lret
faddl
inc
ds
xor
dec
leave
daa
xor
pop
dec
and
xchg
enter
mov
lock
jno
daa
mov
cmp
xor
jns
pop
shrl
push
xchg
loope
mov
push
dec
jno
sub
std
out
dec
mov
rorl
push
inc
mov
bound
and
pop
xchg
insb
and
mov
repnz
dec
es
jbe
xchg
add
scas
sub
mov
fiaddl
loopne
inc
mov
stos
mov
push
dec
xor
jge
movsl
ja
xor
or
rcl
sub
adc
pop
push
mov
scas
jno
mull
push
out
mov
xchg
jg
scas
js
imul
sub
xchg
jbe
and
sbb
mov
and
rcll
dec
shll
push
lods
cmp
xchg
cli
pop
stos
rcr
in
dec
dec
jp
fs
rcll
popa
xchg
test
cld
adc
enter
and
and
clc
adc
roll
shll
xchg
sub
jge
xchg
push
push
jo
adc
hlt
jle
push
mov
out
jle
mov
imul
adc
shr
imul
test
add
loopne
cmp
out
push
fsts
sub
iret
scas
flds
outsl
aaa
mov
or
nop
dec
or
test
jnp
jmp
adc
pop
sub
popa
inc
or
dec
pop
pusha
push
jmp
xor
jo
mov
imul
movsb
scas
sahf
dec
xchg
cli
add
or
jecxz
cwtl
addr16
loope
into
dec
mov
shlb
mov
aas
cmp
xor
cmpsl
push
fmull
jecxz
pop
and
adc
pusha
xchg
mov
mov
inc
and
movsb
int3
in
mov
inc
xchg
push
sbb
jne
sahf
int
les
mov
aas
jae
or
inc
or
ret
cmp
jb
rclb
push
adc
popa
push
jge
in
mov
rol
jecxz
rol
adc
pop
push
mov
ja
add
repz
mov
scas
mov
pop
lcall
push
sahf
ja
std
dec
movsl
cld
stos
movsb
xlat
rep
push
sub
pop
xor
cmc
add
jge
xchg
jne
and
ret
xor
mov
sarb
lret
dec
mov
jo
push
adc
lahf
cwtl
pop
loope
cmp
test
or
mov
cmpsb
xor
inc
inc
inc
les
push
and
loopne
test
dec
imul
add
mov
cmpsl
jp
das
rcll
dec
fcompl
lret
test
jo
aam
std
in
loopne
repz
repnz
test
add
or
mov
sub
push
sti
lods
push
movb
push
aas
mov
arpl
add
outsl
jbe
lds
and
xor
out
aam
xchg
lcall
in
das
mov
jle
xchg
nop
sub
xchg
pop
dec
xchg
fldcw
push
sbb
cmp
int
xchg
ss
cli
lcall
mov
int
or
dec
push
dec
sub
pop
push
popf
mov
mov
test
or
add
add
pop
pop
out
das
inc
sbb
cmpsl
cmpsl
dec
pop
ficompl
pop
inc
imul
mov
rclb
pop
adc
ficoms
xchg
ljmp
enter
fcmovbe
mov
repz
dec
mov
xchg
xchg
pop
xor
adc
repz
cli
clc
mov
or
stc
jnp
fs
popf
lods
xor
push
call
inc
push
or
sub
mov
push
enter
shll
fdivr
inc
loop
mov
clc
repnz
sbbl
xchg
iret
sub
rcr
call
ja
push
push
sbb
sub
xchg
jp
es
push
mov
xor
in
and
cwtl
sbb
mov
sbb
jno
cltd
xor
adc
sbb
add
cmp
rcrb
xor
imul
mov
mov
pop
negb
pushw
stos
push
pop
mov
mov
pop
or
into
pop
daa
lahf
jg
hlt
ret
mov
mov
loop
lock
dec
stc
lock
cmp
sub
addl
adc
xchg
mov
xchg
lods
dec
mov
int3
mov
pop
push
lea
cmp
push
cltd
aas
dec
rol
sbb
cmc
push
testb
movsb
sar
pop
loope
xchg
inc
test
xor
leave
shll
sbb
cmp
dec
add
pop
int
outsl
hlt
jae
ss
lahf
aam
jb
lret
xchg
pop
ret
and
movsb
out
pop
xchg
xor
sbb
test
idivb
mov
movsl
mov
cmp
test
and
jbe
xor
inc
sub
and
out
dec
inc
shrb
cld
adc
loopne
inc
push
mov
or
test
fisubs
not
ljmp
push
inc
std
pop
or
aaa
inc
jbe
insb
jl
loope
jbe
out
int
stos
ficoms
adc
ss
fdivrl
loop
arpl
mov
enter
pushf
mov
inc
or
and
pop
cmc
sbb
int
dec
dec
orl
xchg
sahf
mov
out
fmull
xchg
fiaddl
push
or
add
xlat
xchg
jb
inc
mov
jno
loope
xchg
dec
dec
lock
dec
lds
pusha
jge
inc
dec
lock
xor
sbb
call
adc
imul
mov
imul
push
jge
stc
inc
fmulp
xchg
adcl
xchg
scas
mov
xorb
dec
add
ret
mov
push
and
stos
in
push
push
adc
mov
push
pop
aas
arpl
adc
test
pop
and
push
scas
sbb
lahf
rclb
push
push
add
xchg
xchg
sub
inc
rcll
pop
popf
push
push
pushf
test
xchg
pop
adc
push
jmp
push
sub
into
pop
inc
push
aas
push
sub
mov
cmp
and
sbb
nop
add
cmp
aam
sbb
mov
fs
jno
sbb
or
call
shlb
fisttpll
inc
xchg
mov
sub
sbb
popf
jp
cwtl
pop
xchg
mov
xchg
aaa
fidivrs
sarb
in
ficoms
loop
shl
cmp
mov
test
mov
or
mov
data16
popf
lcall
addb
das
repnz
ror
mov
andl
or
call
mov
mov
xchg
std
sub
in
in
mov
popa
and
ret
fwait
cmp
pushf
pop
arpl
lret
js
shll
adc
jne
decl
mov
mov
push
sbb
jmp
add
decl
sbb
fsubl
dec
adc
or
sbb
cmp
or
shll
mov
inc
cwtl
std
mov
scas
mov
lahf
push
xchg
outsl
das
or
jp
cmc
sub
jmp
jnp
inc
in
or
mov
cmpsl
and
xor
hlt
mov
and
mov
dec
rorl
inc
mov
in
mov
or
mov
or
pop
sub
std
pop
xchg
test
adc
pop
cmp
sarl
cmp
stc
jmp
push
repnz
mov
jo
sbb
adc
rorb
lret
pop
fdivs
lcall
xchg
mov
outsl
push
xor
adc
and
inc
nop
and
pop
add
jno
inc
imulb
mov
pop
shrb
cmp
insb
lds
dec
inc
hlt
in
aad
in
jmp
shrl
cmp
pop
sbbl
bound
push
sahf
fdiv
mov
jo
fdivrl
cmp
mov
add
jno
imul
cmp
fbstp
xlat
iret
push
rorl
jae
adcl
xchg
ror
mov
orl
xor
lock
sti
dec
mov
xor
push
hlt
dec
push
or
push
ds
jle
sbb
adc
aaa
pop
inc
lret
push
sbb
sub
or
xor
lret
add
mov
sbb
les
pop
mov
into
pop
in
add
daa
loopne
sbb
and
scas
adc
pop
ss
je
sub
add
adc
pop
in
fisttpll
sbb
shl
int3
push
pop
jp
jbe
ds
jnp
push
xchg
mov
add
popa
and
add
mov
in
cwtl
arpl
lods
fldcw
and
lahf
scas
cld
pop
pop
repz
clc
push
sub
fmuls
pop
cltd
dec
stos
or
push
out
leave
data16
cmpsb
int3
leave
sub
popf
call
in
fisttps
sbb
dec
into
fsubs
mov
and
ds
pop
cmpsb
pop
jmp
fyl2xp1
popa
xchg
xor
and
ljmp
jecxz
xchg
movb
sub
and
rorb
mov
mov
pop
in
repnz
int
packsswb
xchg
outsl
nop
inc
xchg
out
pop
std
in
pop
push
arpl
in
cltd
xchg
sahf
jno
sbb
rcr
scas
outsb
or
sbb
insl
sbb
jecxz
cmp
pop
xchg
mov
out
sarb
cmp
jbe
js
adc
jg
jae
ss
addb
pushf
out
or
push
call
int3
add
inc
jne
cmp
cmp
jmp
jmp
xor
arpl
or
sub
adc
std
movsb
push
inc
addl
aas
outsb
in
sar
fisubrs
jo
dec
fucom
xor
mov
enter
push
inc
xchg
nop
cmpsl
rcl
cmp
mov
pop
outsl
out
aam
and
mov
int3
bound
aad
pop
sub
pop
popf
lcall
pop
popf
stc
inc
mov
cmp
sub
pop
rorl
les
mov
fdivrl
fs
add
sbb
pop
xchg
pop
jbe
int
cli
lcall
cmp
jns
mov
sti
lods
out
mov
pushf
and
dec
mov
inc
pusha
cmp
inc
loop
add
pushw
lcall
bound
fidivs
je
jb
sti
clc
aad
cld
outsb
cmp
sub
cld
sbb
pop
fcoml
lods
or
cmp
aam
pushf
rcrl
iret
cmpsb
or
fnstsw
das
rorl
pop
and
stc
and
lds
inc
pop
into
push
adc
nop
adc
sti
out
xchg
cmpsl
mov
pop
mov
notl
int3
push
adc
cmp
popf
mov
and
inc
je
sub
je
pop
ret
pop
sbb
add
dec
jecxz
push
xchg
out
aad
inc
sahf
test
pushf
das
mov
or
cmp
lret
mov
and
ror
xchg
jno
test
mov
dec
sbb
adc
pushf
xor
xor
cmp
scas
sbb
sbb
es
sub
push
xchg
sti
cmp
roll
pop
adc
into
shlb
bound
jns
lret
add
std
dec
mov
mov
je
adc
sbb
cmp
ljmp
inc
not
mov
sbb
data16
neg
adc
dec
loope
inc
enterw
adc
cmc
xchg
inc
mov
in
cli
fidivrl
push
cmp
rcrb
adc
dec
xor
add
lahf
arpl
mov
pop
xchg
dec
or
clc
iret
fsts
push
cmp
push
cwtl
aaa
xor
fldl
and
inc
mov
fxtract
pop
jmp
sub
mov
mov
fisubl
cwtl
int3
std
divps
fdivrs
bound
push
loope
bound
sbb
mov
jns
wrmsr
insl
pop
push
jno
and
push
loop
cmp
test
sub
pop
mov
pushf
mov
out
add
cli
xchg
outsb
inc
sub
cmp
icebp
fwait
mov
jge
mov
jo
push
sub
mov
std
cwtl
add
xchg
mov
sub
in
aas
mov
and
cmp
adc
push
ds
hlt
loopne
mov
ja
aam
or
add
in
ja
inc
ljmp
jmp
int3
dec
scas
pop
dec
xor
push
jle,pt
pushf
dec
pop
push
je
pop
mov
mov
sub
cmp
lock
shl
mov
inc
shrl
jnp
out
adc
and
jle
or
and
jns
jns
cmp
mov
sub
js
popf
jmp
sub
popf
mov
insl
xchg
add
ljmp
iret
fidivrs
notb
movsl
jnp,pn
cmpsl
mov
ret
mov
or
pop
jae
and
divb
xor
and
stos
testl
xchg
mov
cmp
jp
and
mov
stc
mov
cs
hlt
xor
sub
xchg
mov
sub
mov
in
and
sbb
js
stos
jg
jmp
xor
xor
test
sub
cli
in
sbb
pop
add
int
call
mov
hlt
dec
push
push
sub
or
fsubp
call
xchg
daa
imul
xchg
je
cmpxchg
fcompl
sbb
arpl
movd
aas
pop
dec
push
fwait
es
inc
sub
jb
les
jp
fwait
cmp
and
daa
sahf
jnp
cltd
clc
insb
or
cmp
int3
hlt
test
mov
out
add
sbb
pop
dec
cmc
inc
jge
push
hlt
cmp
std
iret
std
cvtps2pd
js
andb
xor
jle
arpl
pop
ret
mov
insb
adc
mov
je
int3
push
inc
mov
test
push
out
sub
aad
shll
jbe
adcb
enter
sub
mov
imul
inc
push
imul
popa
xor
xor
in
movsb
sbbb
xlat
mov
push
lahf
arpl
mov
mov
mov
xor
inc
pop
jmp
jns
fiaddl
mov
jle
xchg
xchg
sub
scas
adc
mov
dec
sahf
pop
and
addr16
lds
out
leave
pop
xchg
and
jecxz
push
ficoml
fwait
jbe
xchg
loope
mov
shlb
fnsave
cmp
jecxz
jb
jb
imul
sub
sbbb
cmp
lret
pop
cmp
or
xor
or
fadds
ret
out
out
arpl
fisubl
fwait
iret
cmp
and
les
add
jp
daa
mov
frstor
dec
jbe
mov
frstor
js
lahf
aam
jb
aas
cld
cwtl
sarl
pop
pop
out
inc
pop
mov
mov
loopne
sbb
stos
pusha
out
mov
fwait
ret
dec
add
loopne
pop
imulb
pop
inc
and
pushf
fnstenv
mov
jecxz
mov
push
sub
jmp
mov
xchg
pop
iret
pop
push
dec
or
jl
std
push
and
sub
sbb
repz
fnstcw
sub
out
sbb
mov
pop
cmp
int
pop
mov
cli
add
sub
mov
xchg
outsb
sub
out
pusha
mov
scas
mov
stos
sub
mov
movb
and
sub
repz
adc
xor
add
pop
and
pop
xlat
jmp
adc
test
je
push
or
xor
sbb
int
pop
and
dec
ljmp
sbb
mov
clc
mov
adc
ljmp
jp
lods
sbb
mov
or
or
ror
sahf
jmp
aad
daa
pop
lods
in
imul
cmp
mov
stc
mov
fwait
adc
cmp
fs
mov
mov
mov
mov
inc
mov
imul
mov
insl
pop
jb
pop
mov
jbe
push
and
idivb
inc
scas
stos
inc
aas
outsl
int
ds
adc
cmp
sbb
mov
mov
call
ror
popf
or
pop
push
dec
push
int3
loope
push
jo
lods
es
fisttpll
mov
jmp
sbb
iret
push
test
cmp
sub
mov
sbb
mov
aam
push
pusha
cmp
push
rcll
loop
popf
negb
xchg
fdivp
fwait
into
push
out
in
xchg
mov
jo
push
mov
adc
fsubrp
out
jae
out
pop
gs
sbb
jnp
push
clc
subl
fimull
gs
cmp
push
add
add
out
xor
cmp
icebp
sbb
in
into
sbb
inc
push
int3
dec
das
or
adc
pop
hlt
jmp
xchg
fidivrl
or
movsb
mov
in
pop
lea
sahf
pushf
insb
sahf
js
fiaddl
cmp
and
pop
aaa
incb
dec
repnz
enter
xor
xchg
jo
testb
dec
pop
stos
inc
jp
push
test
adc
jns
popa
outsb
push
lods
mov
cli
lcall
mov
cmp
push
jge
push
test
mov
xchg
cmpsb
jecxz
mov
lret
das
jg
pop
push
lret
push
mov
sub
add
repnz
sub
int
add
add
add
cmc
aad
rcrb
outsb
mov
outsl
mov
jge
fs
pop
sbb
mov
scas
das
mov
adc
jle
std
arpl
out
out
xchg
stos
sbb
popa
mov
lret
test
ds
lahf
dec
mov
jbe
fimull
insl
mov
nop
mov
sub
xchg
mov
test
jb
aad
sub
or
sbb
adc
sub
lods
xor
mov
dec
mov
clc
mov
sub
cmp
push
jmp
test
nop
dec
std
std
dec
push
jp
pop
xchg
in
sbb
mov
repz
js
ficompl
in
fstpt
rcr
mov
and
std
data16
push
or
daa
loope
shrb
mov
push
pusha
xchg
pop
mov
xchg
fcmovb
fnstcw
sbbl
adc
rorb
add
arpl
in
mov
das
add
push
mov
sbb
mov
xor
push
xchg
insl
mov
mov
rolb
scas
mov
mov
sub
sub
filds
dec
and
sbb
fbld
adc
jmp
or
ret
jns
mov
and
dec
mov
xlat
add
cmc
or
fstpt
mov
repz
clc
fst
jb
push
add
mov
xor
movsb
and
adc
xchg
lock
pop
out
xor
in
dec
jo
pop
and
test
xor
jno
arpl
fdivl
dec
mov
lcall
sbb
stc
punpckhdq
lea
ret
dec
dec
rcrl
cmc
sahf
jnp
inc
mov
pop
sbb
sbb
aas
in
popa
jnp
adc
xchg
mov
jno
sub
jmp
lods
sti
clc
popa
jecxz
sub
add
adc
popa
or
frstor
lods
stc
sub
inc
sub
or
out
mov
out
jmp
pop
ficomps
mov
cmpsl
cmp
adc
imul
add
push
sbb
sahf
test
push
insl
add
push
addr16
lcall
push
inc
icebp
jbe
daa
mov
fdivs
out
daa
mov
mov
xchg
lcall
sub
jecxz
lock
out
out
out
xorb
fsubs
mov
and
cmp
cltd
jg
push
roll
pushf
inc
mov
jae
pushf
stc
adc
cld
pop
xor
pop
orb
cmc
clc
push
out
add
adc
fdivs
sbb
lret
mov
lea
add
pop
je
cmp
jle
jnp
dec
mov
aad
push
mov
mov
enter
je
dec
push
cmc
jmp
mov
xchg
fdivrs
cld
js
es
lods
movsb
adc
jmp
sbb
xor
cmp
xlat
push
and
arpl
xor
fdivrl
sub
mov
stos
mov
stc
mov
rolb
movsl
xchg
xlat
roll
aas
or
in
cltd
cmc
mov
mov
add
sbb
arpl
js
or
pushf
enter
inc
sbb
jge
mov
dec
mov
aaa
ljmp
pop
mov
lea
dec
sahf
dec
xor
jecxz
push
inc
adc
mov
xor
int3
xlat
dec
data16
jge
inc
cs
fstl
outsl
jns
mov
das
fadds
in
dec
sbb
test
fs
rorl
mov
add
dec
rcrl
adc
loop
add
jp
lods
jp
xchg
mov
mov
repnz
in
iret
mov
push
in
jb
mov
fdivl
les
mov
or
sub
aam
cs
fdivp
sub
mov
jmp
push
cmpsl
icebp
scas
shrb
mov
fs
inc
sub
jb
adc
sub
sbbb
sti
or
loop
popf
mov
cmp
out
int3
lahf
lcall
mov
je
mov
dec
jmp
inc
and
pusha
in
lret
fwait
rep
movsb
ja
pushf
pop
adc
sbb
mov
mov
in
xor
sahf
outsl
sub
xor
bound
out
dec
pop
add
add
shll
cmp
jno
pop
inc
dec
mov
in
or
mov
push
inc
adc
push
test
arpl
insw
jge
in
sub
adc
jg
testb
in
incl
dec
aaa
jg
adc
push
mov
in
sub
push
xor
dec
add
fildll
lods
mov
cmp
mov
sti
mov
push
fcomps
or
jno
in
int
int3
aas
aas
or
out
lods
add
cld
inc
and
push
movsl
dec
bound
xchg
mov
divb
cltd
adc
imul
inc
mov
xchg
mov
repnz
or
lcall
rolb
add
add
dec
shrb
int3
pop
popl
jne
repz
out
cltd
adc
mov
mov
scas
lods
pop
lret
lds
mov
and
ja
mov
addb
jl
push
imul
mov
dec
add
mov
clc
lret
jge
imul
int3
pushf
loope
aad
xorl
mov
adc
mov
repnz
sbb
add
or
test
fildll
scas
sub
icebp
mov
decl
dec
jb
orl
add
rep
jle
inc
mov
sub
push
loop
ret
ss
leave
add
addr16
pusha
int3
fstps
and
push
add
mov
adc
dec
ja
fildll
mov
ja
lea
flds
jns
pop
xchg
loope
fldl2e
push
push
and
mov
mov
movsb
xchg
cmpsl
dec
test
test
mov
dec
fadd
andl
push
and
dec
sub
xchg
xor
sbb
andl
cltd
nop
movsl
loope
idivl
or
outsl
test
push
in
jmp
lea
cwtl
lret
loope
and
leave
lret
movsb
sarl
and
cmpsb
in
popf
dec
mov
mov
lret
push
bound
dec
pop
pop
call
sbb
mov
push
or
jbe
xchg
jmp
xor
inc
lret
inc
das
test
out
loopne
stc
jnp
sub
sbbb
jbe
stc
repnz
das
inc
jb
fstps
adc
adc
or
add
xchg
cmpsl
pop
popl
lret
popa
sarl
and
or
cs
mov
lods
stc
les
jg
jno
sti
pop
dec
cmp
push
dec
call
mov
sbb
lea
inc
xor
fmull
int
adc
mov
sti
mov
adc
aaa
fwait
push
fucomi
das
icebp
out
rcrl
stos
fcomps
sbb
sahf
fs
push
in
stc
rol
mov
icebp
jle
idivl
push
push
inc
cmove
orl
test
and
pop
jle
push
aaa
inc
stos
cmpsb
out
daa
ret
pop
iret
and
test
iret
mov
push
lret
cmpl
push
pop
shll
fbstp
push
jbe
push
inc
push
mov
and
pusha
in
ds
cmpsl
jb
loope
push
or
ds
aas
movsb
dec
rcll
jg
int
jmp
pop
in
pop
push
pop
jg
jno
fs
jmp
pop
pop
fstp
or
jp
adc
dec
out
mov
cmpsb
addr16
sti
pop
xchg
jbe
arpl
fs
xchg
push
xchg
mov
lods
lahf
es
mov
dec
mov
jp
xchg
xor
cmp
xchg
mov
push
mov
fwait
jmp
lea
dec
push
divl
or
adcl
sbb
sub
repz
jbe
push
in
test
jb
or
mov
jmp
outsb
cmp
test
daa
js
ja
inc
push
idiv
outsl
test
inc
insl
mov
sbb
pop
pop
in
out
jle
pop
xchg
aaa
lret
clc
jmp
aaa
aam
pusha
popf
enter
bound
inc
mov
adc
xchg
mov
mov
adc
stos
cmp
inc
movsb
int3
lods
xlat
in
cltd
inc
rcr
stc
into
das
jecxz
jae
mov
test
or
ja
fwait
xchg
adc
jmp
sbb
jmp
mov
mov
notb
out
xchg
test
inc
or
or
fs
inc
sbb
and
fnstcw
jb
ja
andl
sub
xchg
cld
push
mov
mov
mov
xchg
add
mov
test
mov
adc
scas
roll
in
xchg
xchg
mov
push
cs
jno
fnstsw
lcall
ja
ja
bound
mov
fimuls
sbb
stos
hlt
mov
pop
xchg
push
bound
pop
pop
insb
fwait
ja
inc
imul
add
and
xchg
cs
movsl
das
mov
xor
aad
loopne
stos
bound
mov
dec
loope
inc
sbb
mov
xor
loope
push
lods
or
jne
cmp
sub
inc
stos
add
repz
ss
jge
sub
xor
rcll
cmp
fiaddl
inc
scas
cmp
pop
pushf
and
ss
jne
out
jbe
jno
adc
inc
push
mov
xchg
xor
sbb
lahf
int3
xor
and
adc
xchg
test
sub
push
imul
sbbb
push
adc
mov
inc
ja
cmp
push
fistps
test
xchg
adcb
aad
jl
cmpsb
imul
jbe
cli
clc
idivb
xchg
enter
add
aas
and
cmp
dec
sbb
push
jnp
jbe
lret
orl
fucomi
lods
fbstp
sub
fdivs
cmp
pop
mov
lahf
mov
into
decb
sbb
jns
add
xchg
stos
sub
lahf
xchg
inc
or
sbb
pop
arpl
std
push
repnz
cmpsb
lcall
cmc
cmp
adc
add
popf
aaa
mov
jae
fiaddl
rolb
sub
testl
std
mov
jae
dec
xlat
fldenv
cmp
je
xor
jp
shlb
mov
sub
mov
movsb
jo
test
mov
mov
stos
nop
mov
imul
sub
test
mov
push
in
int
jecxz
mov
xchg
cmpsb
mov
xchg
cmp
pop
pop
xor
int3
rorl
cli
lcall
iret
scas
pop
xchg
iret
mov
pop
fnstsw
xor
test
les
cmp
xor
sbb
sti
mov
pop
out
mov
or
cmpsb
aaa
push
ret
imul
cs
jmp
adc
pop
push
inc
jmp
fs
xor
test
popa
cmp
inc
inc
pop
adc
shrb
adc
pusha
cs
pop
lods
cmp
addr16
gs
fistl
mulb
sub
cmpl
push
stos
repz
push
jo,pn
fwait
mov
sbb
mov
or
bound
and
jo
inc
add
add
or
xchg
and
movsb
mov
cld
data16
jle
cwtl
fidivrl
orb
and
loop
xchg
xchg
and
jbe
jge
or
std
sub
lods
imul
out
sub
mov
out
push
adc
arpl
jl
sbb
mov
sbb
lds
xlat
imul
pop
jnp
adc
push
or
enter
jmp
das
cmp
and
fcompl
jl
daa
xor
sti
ljmp
sbb
sbb
ds
in
sahf
in
and
jae
lods
xchg
jg
in
adc
or
aam
ds
dec
lods
mov
pusha
lds
cltd
adc
or
xchg
movsb
mov
bound
adc
into
mov
cmp
dec
mov
push
add
out
test
mov
or
daa
repz
mov
adc
sbb
xor
push
xor
sub
faddl
xchg
jmp
xchg
jns
adc
jno
xor
lods
xor
cmp
mov
leave
decl
lods
push
pushf
lds
aaa
push
inc
iret
dec
icebp
dec
sbb
inc
xacquire
mov
cmpb
jb
inc
daa
popa
dec
std
loope
and
xchg
pop
inc
mov
cmp
leave
lds
stos
aaa
repz
js
mov
repnz
dec
mov
jno
push
sti
in
mov
dec
jb
ds
push
std
add
in
les
popa
mov
js
inc
dec
jmp
fmuls
adc
icebp
inc
es
pop
pop
iret
in
cmp
inc
dec
cld
leave
cmp
outsl
rcll
sub
les
xchg
out
popa
loopne
cmp
push
dec
add
insl
sbb
test
xchg
mov
push
push
aam
push
cmp
popa
out
cmp
mov
xorl
repnz
xchg
pop
shrl
xchg
out
fmuls
rolb
sbbb
xor
and
jne
rcll
call
decl
lret
xor
or
js
inc
insb
push
inc
xchg
dec
jl
pop
shll
pop
pop
popf
lahf
pop
inc
test
push
cmp
mov
adc
fistl
mov
xchg
jne
movl
push
scas
scas
sbb
and
lahf
push
xor
data16
jae
and
fists
int
or
loopne
dec
mov
jne
rol
scas
mov
jae
stc
mov
xor
fbld
lods
mov
scas
inc
push
pop
fs
repz
shrb
imul
push
gs
clc
loopne
popf
or
ds
cmpsb
aas
mov
out
jbe
or
notl
inc
push
je
sub
lods
sbb
dec
insl
nop
pop
out
inc
cltd
int3
cmp
cli
pop
inc
jno
je
push
movsl
mov
jle
cmp
pop
xchg
hlt
pushf
cmp
std
or
stos
mov
enter
fadds
fwait
dec
shl
pop
int3
fimuls
jmp
insl
fimuls
xchg
or
lahf
or
lods
in
lret
iret
inc
xchg
ds
mov
jbe
mov
xchg
ds
xorl
icebp
push
iret
sti
jecxz
mov
fcompl
cmc
jg
and
cmp
mov
xlat
push
addl
mov
xor
imull
push
lock
ror
inc
push
cmp
insl
pop
push
insb
sub
fldcw
mov
sbb
xor
add
dec
jmp
sbb
outsb
mov
fistpl
in
insb
loope
in
or
lret
test
mov
fdivrs
jge
xchg
subb
ja
out
sti
pushf
xchg
push
sbb
xor
sbbl
arpl
test
leave
and
outsl
lock
xchg
loop
out
pop
cmp
xor
in
or
mov
lods
inc
sbbl
testb
dec
std
xchg
mov
xchg
pop
pop
ds
mov
push
add
sarl
dec
ds
cmc
mov
xchg
fwait
sbb
jns
dec
movsb
int3
sub
aad
lock
mov
sub
stos
shlb
or
sub
jns
dec
jl
pop
xor
mov
or
xchg
or
push
pop
adc
rcrl
push
jl
outsb
adc
cltd
xchg
outsb
sub
xchg
daa
or
lods
lret
pop
mov
adc
das
mov
pop
dec
inc
dec
fcompl
cmp
out
and
push
jle
push
jg
mov
roll
inc
test
pop
in
xor
adc
clc
xchg
dec
add
mov
enter
mov
aam
dec
add
jbe
sbb
push
in
hlt
xchg
jecxz
push
out
jmp
fisttpll
dec
dec
lods
or
cltd
mov
or
bound
sbb
inc
cld
rcrl
jno,pt
jae
push
jnp
inc
out
stos
sub
push
xchg
mov
outsl
cltd
gs
pop
lods
sahf
xchg
andb
psllw
inc
int
pop
dec
push
cld
mov
push
inc
and
icebp
sbb
xchg
mov
mov
mov
adc
movsl
ret
pop
cs
sarl
and
sub
mov
and
flds
push
aam
les
mov
push
and
out
lahf
fmulp
mov
or
push
outsb
lds
adc
lods
push
jge
dec
scas
push
jnp
pop
pushf
xor
sbb
stos
pushf
push
mov
ja
pop
call
aam
jp
pop
xchg
cmp
out
pushf
or
jo
sar
shll
jmp
lods
ret
and
cltd
push
mov
repz
push
popa
flds
std
fildll
xchg
adc
ret
mov
or
call
inc
andb
dec
std
pushf
push
test
cwtl
stos
pop
mov
xchg
pop
pop
mov
and
xchg
fwait
into
nop
sbb
js
ja
xor
popa
je
push
pop
jl
incl
cmp
adc
or
insb
gs
jb
jnp
sbb
int3
out
dec
movsl
push
jmp
lods
and
int3
addb
in
mov
adc
fldpi
out
lcall
and
pushf
mov
rolb
pop
adc
adc
jb
shr
mov
aaa
pop
mov
and
fimuls
and
mov
and
and
sahf
inc
rorb
dec
sub
or
popf
cmp
xchg
out
sub
mov
mov
dec
mov
repnz
call
cmc
fcomp
inc
cmp
ss
outsb
cmp
aas
mov
mul
sbb
and
popf
adc
and
and
je
inc
and
mov
adc
xchg
lods
pop
and
pop
or
pop
lea
cltd
ljmp
ret
jg
bound
mov
adc
int
fdivl
stc
add
sub
addb
xchg
mov
xchg
push
push
imul
das
loop
pop
mov
sub
and
jg
insb
mov
aam
adc
xchg
mov
fisubrl
mov
in
out
add
jge
dec
jnp
rclb
adc
ret
scas
mov
xchg
and
mov
adc
gs
pop
or
imul
adc
mov
out
pop
repnz
fcompl
inc
sbb
xlat
mov
mov
xchg
ja
sub
jl
xor
mov
cli
lods
jmp
data16
xor
rcll
fistps
cmp
rclb
scas
mov
add
pop
and
dec
incl
sub
push
adc
imull
push
sbb
out
cs
loop
std
lds
fists
add
dec
adc
or
mov
out
lret
or
inc
lods
fidivl
mov
sbb
punpckhwd
enter
cmc
dec
dec
mov
pop
xor
mov
xchg
insb
mov
jae
push
push
xchg
je
cmp
sub
sti
js
adcb
push
cmpsl
inc
dec
fnstcw
pop
mov
cmp
xlat
je
push
repz
adc
shll
in
leave
fstps
test
xchg
adc
inc
test
into
shl
cltd
aaa
testl
enter
dec
ds
in
aam
ficompl
jae
cs
call
mov
stos
mov
nop
cmp
arpl
int3
int
sti
mov
push
jp
jb
mov
xchg
push
popf
jl
pop
stc
xlat
lock
add
adc
aam
ljmp
inc
out
and
xor
or
test
fldl
lahf
lods
push
daa
flds
divl
mov
push
inc
dec
pushf
jae
test
stos
push
aam
cmp
dec
cli
sub
leave
ja
nop
outsl
xor
push
xor
sbb
mov
lock
cs
sub
faddl
imul
and
mov
ficomps
xor
fildll
pop
iret
lcall
addb
inc
sahf
jge
add
push
cmp
aad
insb
jae
add
mov
fcmovu
or
and
mov
pop
sbb
cmp
add
xchg
or
lods
pop
pop
not
xor
nop
xchg
inc
and
shll
cwtl
adcl
adc
mov
imull
jl
adc
jmp
pop
add
jno
lret
insl
out
jno
std
hlt
xchg
jb
enter
out
repz
out
ds
loop
int3
or
out
xchg
mov
or
push
jmp
adc
hlt
test
mov
add
rcl
stos
loopne
sbb
mov
bound
ret
xchg
jp
in
lcall
ljmp
cmp
lret
cld
fnstcw
and
cmpb
loop
movsb
jns
mov
movsl
jle
stos
jl
mov
and
in
out
les
and
sub
pop
mov
test
add
fisubrl
pop
inc
adc
cmp
nop
out
cmpsl
iret
insl
sti
jne
arpl
js
and
sahf
or
es
jp
and
xlat
mov
subl
mov
ss
popf
in
stc
hlt
mov
lcall
xlat
xchg
dec
ret
or
es
into
jp
leave
adc
mov
test
fstps
jg
mov
mov
sti
mov
push
fildl
fsub
int3
adc
mov
mov
jnp
fildll
jle
fistl
pop
and
cmpsb
jne
jo
fistl
packsswb
xchg
js
int3
push
popa
lock
xchg
loop
mov
push
cltd
fdivl
or
sahf
xor
fistps
pop
inc
iret
lods
xor
or
das
adcl
xchg
jno
sbb
sarl
and
js
test
enter
mov
rolb
push
icebp
mov
mov
ret
push
add
adc
into
xor
jnp
mov
cmpsl
jb
fld
aaa
popf
pop
mov
hlt
movsl
sub
xchg
push
mov
lcall
push
jmp
and
into
jno
mov
aas
pusha
mov
movsb
cwtl
or
sub
and
lock
mov
test
add
fdivrl
aas
mov
push
push
ret
sbb
pop
in
jne
add
movlhps
movsl
or
iret
cmp
stos
jmp
pop
and
or
stc
xchg
push
hlt
test
jmp
mov
mov
lret
ja
test
sbb
sbb
mov
outsb
pop
jne
outsb
mov
test
jbe
fimuls
pop
xor
shrb
test
and
cli
add
pop
dec
and
sbb
sbb
pop
cmpsl
fmulp
inc
add
mov
mov
ja
cmp
jnp
or
scas
push
pushf
js
mov
pop
lods
rorl
inc
les
mov
mov
pop
pushf
call
push
dec
sbb
cmp
jl
fidivl
cmp
mov
test
mov
sti
push
inc
repz
inc
or
add
popa
stos
repnz
mov
sub
dec
repz
xor
shll
out
mov
das
fisubl
int3
mov
mov
std
push
cmp
in
jne
and
in
lods
pop
pusha
sub
mov
push
xchg
ss
jg
mov
stos
cmpb
outsl
fcmovnb
fistpll
rcrl
sub
loope
mov
lret
popa
add
int
loope
pop
pop
lcall
outsl
loop
out
mov
repz
inc
push
inc
inc
add
fnstcw
inc
fldl
dec
mov
je
push
adc
stos
int
mov
mov
xor
jecxz
cmc
imul
adc
pop
packuswb
imul
in
xchg
addr16
iret
icebp
pop
jmp
push
pop
ret
cmp
test
xchg
addr16
adc
icebp
rorb
test
add
adc
faddl
rcrl
jge
leave
cwtl
mov
xchg
filds
push
sbb
into
push
out
mov
movb
insb
inc
andb
enter
fcoms
jmp
insl
cmp
add
je
stos
sahf
mov
xor
out
aas
mov
cmc
pop
dec
shrb
sub
movsb
stc
ss
dec
mul
cmc
pop
inc
mov
inc
jmp
adc
rorl
add
sbb
push
std
lcall
mov
inc
add
bound
les
inc
pop
out
cmp
push
adc
jbe
push
xchg
adc
xchg
mov
pop
fdivrl
test
inc
loopne
xchg
idivb
mov
add
mov
jl
cld
nop
jno
popf
dec
add
inc
push
pop
sbb
mov
cmp
mov
stc
cmpsb
lret
push
jbe
jmp
push
stos
adc
and
scas
dec
mov
and
mov
out
out
push
popa
scas
jbe
lcall
dec
xchg
shrl
arpl
cmpsl
inc
push
cltd
dec
cmp
or
jae
fdiv
pop
add
movsl
or
adc
dec
test
sarb
and
jae
or
pop
push
sbb
cmp
incb
lahf
mov
nop
daa
adc
lret
adc
and
dec
lods
not
dec
std
scas
push
xor
sub
jg
mov
jno
dec
ret
ficoml
addr16
movzwl
shl
pop
add
hlt
addr16
inc
insb
test
xchg
sbb
mov
sub
jnp
pop
jnp
jge
xchg
cmc
pop
push
enterw
iret
sub
push
fisubl
loop
add
jge
mov
pop
outsl
fdivr
push
out
jnp
mov
mov
data16
hlt
enter
scas
xor
fldcw
lods
dec
mov
pusha
pop
nop
push
cmp
mov
mov
cld
jmp
jbe
mov
add
xor
cmp
repz
mov
xor
inc
add
in
mov
mov
imul
dec
fnstcw
iret
repz
xchg
mov
xor
flds
and
scas
loope
jecxz
xor
mov
daa
pop
pop
into
ds
jl
cmpsb
movsb
out
dec
addr16
jp
mov
repnz
imul
dec
jle
test
ja
xchg
in
mov
call
jp
sbb
ret
jnp
pop
inc
mov
inc
aad
das
mov
test
repz
popf
test
xchg
dec
pusha
push
psllw
scas
pop
mov
mov
in
xchg
jbe
rcrl
pusha
cs
mov
xor
sub
rorb
divb
lcall
xor
adc
push
testl
and
pop
fdivrs
xchg
xchg
or
push
fimuls
inc
mov
mov
and
pushf
pop
rol
pop
xor
js
cmpsb
jg
int3
or
push
push
out
cmpsl
out
xor
pop
push
inc
mov
cmpsl
xchg
lret
loope
rclb
jge
jge
test
ljmp
push
sbb
inc
inc
mov
mov
out
and
nop
out
add
and
cli
imul
inc
mov
mov
hlt
andl
jg
sub
js
xlat
push
mov
test
mov
pushf
icebp
bound
scas
call
lock
jl
loope
in
jae
dec
xchg
ror
ret
pusha
xchg
push
scas
iret
lret
push
insb
ret
sub
sbb
je
aad
push
shll
mov
jnp
clc
into
je
adc
inc
das
idivl
test
clc
xlat
cmp
inc
frstor
sub
add
mov
jns
add
cwtl
xchg
mov
int3
jb
dec
xlat
xor
popf
fildl
repnz
fcoms
lock
bound
sbb
dec
cs
cmp
xchg
or
jg
js
sbb
arpl
mov
inc
ja
js
gs
fsubp
jp
mov
push
xchg
pop
mov
mov
cwtl
clc
cmpsb
xchg
pop
hlt
pop
imul
xor
les
push
std
dec
xchg
push
aad
cmp
cmc
fisttps
adc
sti
lods
lcall
outsb
mov
adc
in
sub
mov
sbb
push
pop
jns
or
je
out
jl
or
add
jg
add
ss
dec
fst
push
mov
lret
dec
add
lcall
dec
dec
addr16
push
cwtl
mov
mov
adc
mov
push
jne
call
cli
push
shl
int3
lahf
shll
ljmp
dec
mov
lahf
jae
lock
lock
lret
pop
xchg
sub
xchg
mov
xlat
mov
in
xchg
add
out
push
or
push
xor
jne
adc
scas
jmp
fucom
mov
add
cmpsb
arpl
icebp
ja
add
push
cmp
jmp
mov
push
out
ret
and
inc
hlt
andl
jg
andb
ss
or
les
repz
lret
sahf
sub
and
testl
ror
mov
loope
dec
shll
fstl
or
or
out
scas
or
mov
jno
mov
rcrb
insb
iret
call
sbb
dec
xchg
ret
dec
roll
mov
out
mov
ffreep
adc
enter
nop
push
or
or
fstpt
mov
push
mov
aam
push
into
es
scas
popf
jns
mov
in
addr16
pop
cmp
rcr
sbb
pusha
loopne
orl
jbe
inc
sahf
gs
cs
data16
or
das
and
lods
mov
imul
xor
leave
jbe
jle
mov
jge
or
mov
and
mov
adc
fmull
and
dec
jle
sub
outsb
pop
cmp
mov
push
jnp
loop
adc
jae
lahf
mov
jg
enter
xor
sti
sbb
enter
sub
insb
lret
mov
out
cmc
push
inc
mov
jge
test
mov
lods
inc
xor
sbb
aam
mov
pop
pop
aaa
dec
out
mov
orl
or
ret
ret
xor
movsb
std
rol
hlt
shrl
cli
xor
inc
xlat
or
sub
sub
scas
lahf
fstp
inc
je
push
xorl
imul
imul
jle
sub
shll
push
pop
lods
outsl
nop
sahf
lea
dec
cmp
daa
sar
xor
ss
cli
mov
mov
dec
shll
in
cmp
push
lock
add
sbb
orl
xlat
adc
out
jge
adc
dec
shll
or
jne
stos
fistpll
cmpsb
filds
clc
jo
inc
filds
inc
in
rorb
inc
and
adc
ljmp
cmp
fmuls
jmp
dec
and
rcrl
leave
ds
hlt
add
dec
inc
in
jmp
mov
inc
or
clc
sub
inc
push
jne
mov
push
fbld
stos
mov
inc
lds
jp
andl
jle
in
decb
push
daa
movsl
sbb
mov
in
or
shll
cltd
cwtl
popf
sbb
dec
sbb
inc
sub
rol
sbb
push
cmpl
sbb
fcmovb
cmp
aaa
jns
enter
inc
dec
mov
into
jmp
jns
hlt
pop
outsl
inc
scas
push
sbb
jb
test
cmc
add
xorb
cmp
pop
dec
lock
mov
and
cmp
stos
jle
fbld
loopne
xlat
rcll
cmp
or
in
jl
mov
outsl
cld
iret
into
jne
and
repz
or
fcmovnbe
push
mov
cmpb
adc
and
jo
cmpsb
icebp
inc
rolb
ljmp
mov
jl
or
mov
dec
ds
dec
sahf
xchg
rcrb
cmpsb
outsb
lods
lret
adc
xchg
hlt
negb
push
xchg
add
arpl
dec
sub
cwtl
sub
imul
aas
adc
or
mov
xor
je
sbb
mov
sub
inc
sub
push
xchg
jae
rorb
in
ds
in
sub
xchg
cmpsl
xchg
mov
push
mov
mov
inc
or
and
xor
mov
cs
cmc
jne
or
add
adcl
sbb
shrl
arpl
sar
inc
arpl
mov
shll
cmp
repz
lods
and
jmp
aad
xchg
lcall
xor
cmp
movb
dec
adc
pop
inc
add
call
ret
adc
push
lds
nop
ret
mov
mov
push
and
xchg
mov
push
sbb
loopne
out
fwait
or
and
dec
and
jg
loopne
iret
stos
lock
cwtl
and
add
addr16
or
mov
pop
adc
jle
adc
xor
lret
xchg
push
test
lods
out
je
xorl
scas
ja
aas
popa
popf
xchg
scas
cmp
dec
fstpt
test
push
fucomp
iret
and
cmp
fs
mov
arpl
xor
mov
lods
push
fsts
outsb
cmpsl
mov
idivb
shr
sub
pop
insl
jg
and
push
or
push
cmc
add
inc
mov
sti
sti
pop
mov
cmp
sti
jecxz
mov
rcrl
inc
sarl
mov
push
mov
aam
mov
pop
and
dec
or
std
inc
cmc
ja
jecxz
cli
lret
sub
test
mov
mov
jle
lcall
sarl
xor
push
cmc
call
jbe
inc
aad
xchg
outsb
cmc
sub
xor
push
pop
mov
sbb
aad
pop
mov
inc
and
dec
in
cmpl
rep
cs
sbb
bound
js
repz
inc
jmp
push
xchg
or
inc
adc
push
pop
fbld
push
mov
loop
icebp
scas
xchg
lahf
mov
xchg
movsb
sub
jmp
adc
mov
xchg
push
leave
cld
adc
cli
out
movsl
and
shlb
scas
js
sub
mov
das
xlat
loop
lret
das
cmp
mov
lahf
adc
jp
dec
faddp
sub
pushf
jb
leave
pop
insl
or
nop
sub
fbld
lcall
lds
fcomps
out
mov
push
cmp
push
xor
enter
sub
inc
mov
xorl
fdivrl
mov
mov
push
iret
and
pop
jle
std
sbb
jecxz
jno
jp
stc
cmc
jns
lret
andl
out
pop
xchg
and
mov
outsl
push
hlt
xchg
shll
ficompl
sub
je
dec
loopne
mov
xchg
push
pextrw
insb
mov
stc
mov
insb
les
cmp
loop
repnz
fldcw
es
out
adc
and
scas
xchg
aaa
fcoml
cmp
and
lock
mov
sbb
add
ret
add
mov
mov
add
xchg
lods
fistpll
push
andl
aas
aad
sahf
pop
or
imul
fcoms
add
mov
cmp
mov
mov
dec
xchg
pop
cmc
pop
sarb
fwait
pop
sub
jo
stc
ss
mov
jo
jle
out
rcrl
ds
push
out
add
or
cmp
das
sbb
or
adc
jno
jne
and
adc
sub
push
dec
out
cmp
push
push
pop
daa
ficoms
add
xchg
push
adc
movsl
push
shrl
fwait
ret
push
ficoms
sub
sbb
fisttps
movsb
mov
iret
loopne
in
push
ja
push
icebp
loope
jbe
add
lret
mov
test
mull
lcall
push
and
cltd
inc
and
xchg
popf
pushf
mov
ja
pusha
push
aam
pop
negb
jb
pop
push
xchg
aas
ja
add
neg
test
push
xor
stc
jbe
mov
arpl
mov
dec
or
js
or
ret
push
push
mov
lds
sbb
sbb
push
mov
xor
mov
mov
xlat
lods
xor
sahf
pushf
lret
sub
stc
xchg
ds
mov
sar
mov
jno
scas
xchg
loop
mov
sarl
adc
push
call
dec
sarl
js
repz
push
int3
repz
popf
or
out
movsb
cmpsl
jge
enter
scas
mov
sub
daa
cmp
xchg
sbb
jbe
mov
mov
rolb
or
mov
xor
shrb
dec
pop
in
adc
mov
push
rolb
or
aaa
push
sub
xor
ja
mov
sub
dec
sarl
or
rcll
or
lahf
sbb
std
ds
pop
jno
nop
mov
mov
dec
clc
mov
lahf
cs
aas
cwtl
pusha
push
push
out
xchg
xchg
cli
and
jno
into
mov
push
stos
push
sub
js
adc
jmp
jmp
or
add
jl
mov
cmp
nop
es
pop
mov
mov
or
vdivss
pushl
sub
pop
inc
das
mov
push
mov
repnz
cmp
push
cmp
sub
inc
iret
in
gs
pop
cs
dec
jns
or
insl
arpl
xchg
mulb
mov
stc
mov
mov
dec
push
dec
aaa
xor
int3
loop
shr
lret
dec
and
or
mov
mov
fistps
sarb
and
sub
in
lcall
ja
repz
cltd
jg
mov
mov
dec
cmpsb
scas
aas
mov
inc
dec
inc
push
mov
xor
push
lret
popa
add
hlt
enter
gs
add
xchg
les
mov
aad
push
cmpsb
ljmp
push
sbb
out
test
lret
imul
sbb
icebp
pop
add
loope
dec
mov
andnps
push
push
sarl
mov
fisubrs
loope
aas
push
mov
xor
mov
cmp
lods
and
mov
cmpsl
add
negb
sub
ja
imul
pop
fwait
mov
jl
popa
pop
cmp
mov
add
movq
pop
out
lods
xchg
lret
fisttpl
push
imul
dec
jle
and
xchg
scas
xchg
stos
in
dec
push
scas
xchg
pop
subb
jge
stc
sub
aad
xor
jno
pop
xchg
mov
test
mov
inc
sub
ret
cld
imul
cmpsl
xor
sbb
xlat
call
mov
or
inc
xor
push
add
fidivrl
cmpsb
ret
incb
bound
sar
mov
or
pop
insb
mov
pop
rcrl
add
stos
in
test
sbbl
jo
xor
rep
jno
insb
cs
dec
mov
add
sbb
pushf
or
mov
xor
push
movsl
pop
pop
repz
lock
and
or
fistps
or
or
xor
jnp
cmpsl
popl
xchg
in
clc
stos
or
fisttpll
movsb
fstpt
adc
cld
and
mov
test
cli
enter
inc
dec
mov
arpl
sub
dec
dec
mov
int
cmp
push
cmp
add
fsubr
mov
cmp
int3
jp
sub
bndldx
popa
jno
sbb
xor
shlb
ret
ja
cmp
sbb
test
jae
add
jae
rcrl
push
popf
mov
shrl
scas
loope
out
push
dec
std
ja
xor
lds
adc
cmp
xor
cli
mov
pop
lgs
and
jecxz
and
fcom
add
xor
jl
jb
xor
fisttpl
cli
jo
mov
lahf
lds
add
add
push
push
inc
jne
jb
addl
daa
sarl
sbb
rolb
mov
xchg
xchg
mov
lods
movups
jnp
xor
stos
subb
loopne
in
leave
outsb
mov
inc
cld
scas
mov
stc
mov
outsl
sbb
fisttpl
shl
push
or
fadd
pop
testb
scas
xchg
xchg
sarb
jo
xchg
cmp
xor
scas
aad
dec
inc
xchg
xchg
sub
push
mov
push
push
shlb
xchg
add
ret
addl
aam
xchg
pop
sbb
lea
cwtl
lret
or
int3
sarl
mov
dec
shll
icebp
add
push
inc
loopne
adc
inc
test
je
jecxz
push
mov
xchg
stos
cmpsl
mov
xor
cmp
bound
push
inc
mov
jns
hlt
xchg
adc
mov
inc
movsl
cs
movsl
mov
popf
push
lods
dec
lahf
push
and
xchg
cltd
int
pusha
lcall
lret
mov
or
adc
je
jo
sbb
movsl
cwtl
jl
xchg
jmp
sub
in
popa
lods
sbb
stos
test
push
inc
sbb
push
int3
dec
or
adc
xchg
popa
stos
pop
or
addr16
movsl
imul
pushw
jecxz
aaa
push
in
aad
imull
cltd
cmp
daa
les
and
sbb
jnp
jge
mov
jmp
xchg
inc
mov
pop
fists
in
sub
or
sbb
leave
les
inc
ret
sub
popf
into
test
jle
mov
mov
xor
cwtl
in
fildll
cltd
add
jns
test
es
in
mov
inc
jecxz
xchg
pop
enter
test
fsts
mov
cmp
cmp
sbb
cs
repnz
pop
inc
lahf
sub
ret
push
out
stc
fcoml
notb
mov
addb
mov
adc
or
loop
push
and
rolw
movsl
adc
std
xchg
out
ror
dec
or
or
ja
andb
adc
pop
sti
inc
pusha
jp
push
pushf
insl
addr16
push
lods
jl
xchg
shll
mov
sub
push
ficoms
jb
lea
add
add
aad
jl
jb
xor
xor
out
inc
mov
pop
rorl
pop
sbb
popf
or
xlat
push
pop
adc
ret
lcallw
fcomip
out
jle
jmp
push
jno
jb
mov
call
jns
test
push
ror
dec
in
jnp
sahf
jmp
in
and
xchg
xor
test
lods
push
in
dec
bswap
pmaxsw
sarl
sub
pop
push
xchg
cmp
mov
shrb
jbe
sub
xor
lods
popa
push
and
cmp
dec
nop
subl
fsts
int
dec
xchg
cmp
gs
jge
jg
idiv
fwait
sub
scas
push
std
jp
jmp
loope
jb
mov
out
ret
rcrb
xor
add
in
les
cli
arpl
or
scas
jge
mov
xor
jmp
mov
fidivs
lods
ret
mov
or
cmp
test
scas
in
inc
cwtl
arpl
imul
sbb
mov
in
jbe
or
cmpsb
clc
mov
sti
dec
test
pop
or
or
outsb
cmp
les
cmpb
sbb
xchg
enter
inc
fmul
xchg
shlb
xor
jp
xchg
roll
leave
fstl
flds
sbb
scas
xchg
mov
mov
mov
cmp
shll
push
pushf
js
sbb
xor
insl
loopne
cmpsb
inc
mov
push
or
jmp
pop
mov
cmp
in
push
jno
jle
sbb
dec
and
iret
inc
xchg
dec
inc
sub
pop
fsubrs
adc
loop
aad
and
push
out
mov
mov
ret
lret
fimull
jmp
push
mov
mov
push
leave
fsubl
lea
daa
xchg
jbe
xchg
dec
pop
insb
daa
add
out
jno
sub
xchg
pop
inc
sahf
gs
jb
or
dec
jns
rol
pop
jo
idivl
out
aam
xchg
or
jp
xchg
stc
and
pushf
pusha
mov
sub
jecxz
xor
xor
shrl
xchg
test
mov
add
push
dec
cmp
inc
rorb
mov
inc
push
lret
mov
test
lret
aaa
icebp
jmp
daa
push
pop
add
scas
push
in
or
aaa
xor
out
std
bound
in
adc
mov
arpl
out
cld
call
jl
fs
mov
dec
dec
outsb
dec
jns
movsb
jbe
sbb
fists
clc
inc
sbb
xchg
insb
jmp
xchg
hlt
jg
int
xchg
ljmp
inc
mov
scas
call
ljmp
mov
inc
xchg
aas
mov
xor
and
inc
shl
scas
sub
sbb
adc
inc
call
imul
xchg
es
test
push
test
icebp
jl
gs
loope
xchg
repnz
movsb
xchg
mov
mov
pusha
inc
sub
pusha
ja
cli
dec
mov
and
add
mov
cmc
lea
sub
dec
mov
or
jne
cmc
push
shlb
mov
and
or
xchg
xchg
xchg
arpl
loope
ljmp
jb
sti
test
iret
les
ds
pop
loopne
test
push
mov
xchg
aad
stc
push
sub
xlat
fdivrp
xchg
mov
jnp
movsl
xchg
pop
nop
cli
popa
xor
sub
jmp
in
push
incb
dec
inc
rorb
rcr
fnstsw
xchg
repz
xchg
ds
test
addr16
cmp
divl
mov
add
cld
jno
dec
in
mov
add
push
mov
lahf
mov
mov
jb
pop
push
jp
mov
push
and
dec
sti
repnz
out
mov
xlat
out
pop
pop
jmp
jp
xchg
stos
sbb
xor
les
fs
cmpsl
jecxz
adcb
mov
movsb
mov
fwait
pop
inc
xchg
adc
frstor
je
mov
ffree
lods
xchg
jb
popa
push
cmp
cmp
es
int
sub
cmpb
rorb
int
sub
jns
push
movsl
sub
hlt
shrl
pushf
xor
mov
push
jmp
shll
int
and
fwait
cmp
lahf
insb
dec
in
stos
test
repz
xor
in
lods
mov
jg
fisubl
movsb
sub
minps
subl
pop
mov
jb
and
fsubl
fdivr
out
insl
aas
mov
hlt
cwtl
jns
cld
ret
nop
ds
int
sub
movsl
mov
or
mov
ret
cs
ficompl
cmc
mov
jns
test
mov
cmp
cli
aad
jge
mov
idivl
dec
jae
mov
bound
mov
mov
mov
pop
enter
test
jo
pusha
int3
aaa
icebp
mov
fsubrl
sbb
mulb
adc
jge
inc
pop
cmp
or
lret
inc
outsl
dec
out
cmp
cmp
or
cmp
mov
shll
sub
xchg
sbb
or
int
dec
fdivrs
dec
stos
mov
adc
cwtl
push
cmc
add
and
sub
cld
inc
imul
inc
cltd
jl
fnstsw
mov
mov
enter
in
in
sbb
out
test
jge
adc
out
jae
imul
xchg
inc
mov
pop
mov
xor
mov
sbb
add
setbe
in
outsb
sahf
jle
stos
in
iret
adc
fwait
cmp
mov
pushf
sbb
adc
sbb
push
adc
bound
mov
fs
mov
pop
pop
or
push
sub
in
xor
pop
cmp
pop
pop
enter
andl
movsb
mov
stos
sti
push
ljmp
mov
xor
pop
popa
rcrl
orb
xchg
mov
das
jge
ljmp
xchg
loope
adc
push
mov
dec
and
adc
in
fwait
out
pusha
mov
xchg
fsubl
popf
popf
lea
xchg
aas
imul
addl
ds
xor
fnsave
inc
pop
rcrb
dec
mov
cmp
mov
cs
jae
xor
xor
dec
jg
je
lret
arpl
add
add
pop
push
subb
push
cli
xchg
out
pop
ror
rol
adc
cmp
fadd
icebp
pop
roll
out
movsb
push
pop
leave
add
js
mov
lods
sarb
out
movl
mov
outsl
xchg
sarl
add
sbb
jmp
loop
ret
cmp
cmp
lea
xchg
outsl
lahf
stos
lcall
lods
lods
pop
ficompl
inc
adc
sbb
icebp
adc
enter
xchg
pop
aas
lea
and
sub
out
aam
subl
dec
adc
jge
sarb
std
sarb
sar
cmp
sbb
pop
mov
das
dec
jge
cmp
lods
mov
and
inc
mov
sub
jb
add
sub
jae
jnp
dec
mov
rolb
sbb
pusha
dec
daa
pop
dec
dec
mov
divb
std
xor
mov
pusha
shl
pop
add
mov
xchg
pusha
inc
dec
inc
popf
xor
mov
aam
add
push
shll
pop
call
aaa
dec
sub
cmpl
add
jbe
aam
fsts
xlat
mov
int3
fdivrl
aam
jmp
mov
arpl
xchg
cltd
ljmp
mov
faddl
andl
rclb
test
mov
jle
fdivrp
filds
push
aad
neg
lea
cmp
mov
xor
shlb
and
mov
pop
pop
bound
add
mov
mov
js
fwait
pusha
fbstp
xor
push
hlt
add
es
call
mov
sub
cmc
or
test
icebp
push
mov
mov
aaa
shr
push
cmc
push
cmpsl
outsl
fistpll
roll
add
ja
movsl
sbb
lea
loop
mov
int3
jp
mov
lods
dec
mov
pop
sub
and
or
daa
ja
mov
sub
fdivl
stos
push
dec
cs
dec
in
inc
inc
pushf
lret
dec
pop
pop
mov
mov
xor
push
pop
push
mov
xor
hlt
out
jo
cmc
cmpsb
cmp
out
ja
imul
push
outsb
xchg
int
inc
xor
push
mov
mov
xor
cltd
loopne
clc
inc
pop
in
imull
jne
dec
es
push
sbb
push
ds
jge
sbb
xchg
addl
xchg
insb
mov
xor
jl
clc
aam
fdivrl
shrl
inc
pushf
fidivrl
jne
fsubr
cmp
pop
shlb
lods
cmp
ror
data16
fsubr
jno
adc
cmp
mov
arpl
in
mov
pop
xchg
pusha
ss
orl
loopne
xchg
sub
jmp
push
mov
sub
xchg
dec
add
ret
es
insb
jb
jl
xor
data16
movsl
dec
popf
or
lock
or
adc
out
xor
mov
mov
jmp
and
adc
adcb
xor
scas
mov
inc
mov
push
mov
aas
popf
push
fbstp
in
rcrb
popa
add
hlt
fbld
shrl
fwait
jnp
pop
gs
insl
inc
out
inc
outsl
data16
roll
mov
xchg
fisubs
rorl
mov
sbbb
in
add
pop
sbb
dec
and
pop
cwtl
xor
andb
xchg
jecxz,pn
pop
and
sub
sub
popf
in
mov
pop
inc
inc
out
dec
push
add
push
cwtl
jl
in
xchg
pop
int
cmp
and
fisttpll
int3
xchg
out
adc
push
nop
hlt
popa
push
rol
mov
enter
aas
popa
fadds
cltd
mov
loop
nop
mov
lahf
jecxz
lret
and
mov
xlat
adc
imull
sub
outsb
adc
pop
test
sbb
jp
jae
adc
ljmp
sbb
xchg
jp
mov
cmc
fstps
add
fwait
jae
jge
adc
and
fistpll
js
mulb
sahf
inc
rcr
and
push
push
xchg
lret
or
add
je
dec
in
push
repz
arpl
imul
out
scas
mov
movsl
sub
inc
cmp
mov
push
movsb
leave
ret
lods
in
cwtl
mov
mov
sub
roll
cmp
jnp
add
add
fs
jmp
inc
xchg
outsb
scas
fs
stos
pop
mov
out
je
push
and
jb
and
sub
mov
dec
cmp
xor
and
ja
std
cmp
les
ljmp
daa
xchg
fs
pop
repz
cmc
je
dec
stc
adcb
xchg
fbld
test
cltd
leave
mov
pop
pop
jge
jns
or
clc
fdivp
push
adc
mov
stos
mov
fnstenv
mov
xchg
dec
mov
arpl
fdivl
imul
lea
ficompl
push
ja
faddp
daa
js
xchg
jle
mov
adc
insb
in
jo
mov
outsb
lea
pop
enter
aaa
shll
les
xlat
mov
lods
movsb
push
cltd
repz
pop
inc
shld
in
fsubrs
cmp
ja
mov
adc
mov
dec
or
sub
movsb
inc
mov
pop
rorl
aam
pop
bound
arpl
jbe
cmp
xchg
adc
aam
jp
xchg
adcl
in
pusha
pop
cmp
ret
cmp
or
mov
mov
js
imul
jnp
data16
cmp
ret
or
xor
fnstsw
add
scas
mov
jbe
hlt
jns
es
ss
idiv
add
push
cmp
adc
addr16
sbb
adc
pushw
enter
cmp
int
cmp
sub
dec
cmc
loopne
ss
orb
and
pop
into
fisubs
mov
bts
adc
mov
cmp
insl
and
fisttpll
and
scas
push
jo
scas
push
or
xchg
in
mov
sbb
ficompl
lret
cmp
inc
icebp
repz
aas
arpl
xchg
xor
lahf
cmc
lock
arpl
cmp
adc
jl
adc
popa
pushf
xchg
imul
sub
lcall
loopne
bound
inc
mov
shlb
sub
shll
scas
shl
imul
jmp
or
xchg
sbb
sub
lock
dec
dec
pop
or
sbb
out
outsb
nop
adc
lret
aam
sub
add
loopne
std
sbb
sub
in
adc
mov
cli
jae
or
int
dec
sbb
xchg
inc
pop
lods
xchg
aaa
dec
js
dec
xchg
shll
cmp
mov
dec
sub
push
sti
lds
mov
sub
sub
dec
xchg
fsubrs
imul
adc
jle
test
cltd
sbb
rclb
sbb
ficoml
enter
sarb
es
adc
and
scas
add
jno
jge
dec
mov
mov
xorl
pop
push
imul
mov
adc
jg
mov
into
adc
jecxz
fwait
jne
jo
arpl
mov
mov
in
sbb
iret
out
sub
cmpsl
xchg
out
idiv
test
stos
jp
int
sti
cs
xor
mov
rolb
je
lock
inc
adc
std
adc
loope
mov
aas
ficomps
out
inc
jecxz
pop
pop
and
mov
add
out
out
pop
inc
or
cmc
jg
xor
jo
dec
insl
lods
jbe
push
ret
enter
xor
jge
out
sub
ja
xchg
jmp
test
fldl
xchg
fwait
ljmp
jecxz
fldcw
sti
out
dec
mov
jl
loope
stos
outsb
xchg
mov
adc
subl
adcl
jae
shrl
hlt
pop
fisttpll
aad
pusha
push
scas
pusha
ret
fbstp
xchg
in
loope
int3
in
aas
lret
popa
inc
scas
inc
cld
mov
dec
dec
aad
repz
insb
ret
nop
test
enter
outsb
jl
adc
jmp
push
xorb
inc
push
cmp
pushf
aaa
movswl
jo
dec
ja
sub
push
dec
cmp
add
jne
xchg
adc
lods
icebp
roll
and
sub
lret
sbb
xchg
rorb
push
mov
cmovle
ret
cmc
sub
push
mov
int
scas
sbb
ret
mov
cmpsb
add
pop
push
lods
inc
inc
mov
xor
dec
mov
dec
fst
adc
add
stos
ss
push
push
mov
dec
mov
sub
out
push
mov
jns
fistpl
add
sub
lock
inc
or
mov
aas
clc
pop
sub
repnz
sbb
popf
pop
iret
xchg
xchg
sbb
in
add
aas
xchg
cmp
mov
dec
cltd
push
cmp
mov
mov
xchg
lods
mov
mov
xor
ds
and
dec
mov
adc
mov
jno
cmpsb
inc
xchg
mov
push
push
mov
adc
mull
andb
jae
aad
and
push
mov
lret
je
mov
pop
sbb
push
mov
and
pop
fwait
jg
std
add
enter
into
rcrb
dec
je
adc
cs
add
inc
mov
dec
addl
daa
into
stos
insb
push
mov
pop
les
mov
xchg
add
insb
xor
mov
jno
adc
orb
mov
jecxz
mov
icebp
pop
jmp
pop
jbe
jb
push
cmc
sub
xchg
sub
dec
mov
mov
dec
push
xor
inc
test
sbb
inc
and
add
clc
cmpsl
jmp
mov
mov
int
adc
fsubs
sub
pop
bound
outsb
pop
movsl
popa
jp
mov
out
inc
cli
mov
imull
jmp
ja
lret
stc
add
pushf
iret
add
loope
cmp
lret
pop
inc
inc
cld
cmp
ljmp
sub
push
aaa
push
hlt
xchg
and
dec
lds
stos
cltd
enter
mov
xor
push
or
lods
pop
out
das
or
pop
imul
mov
ficoms
scas
or
push
pop
cli
cmp
fimull
mov
xor
push
data16
sbb
les
pop
ds
adc
lds
je
xchg
inc
mov
cli
fimuls
sbb
cmp
addr16
mov
rdtsc
out
hlt
pop
ss
repnz
add
and
inc
and
cmpsl
lds
mov
xor
lret
jns
push
cmpl
jno
or
fwait
push
and
incb
in
mov
movsb
imul
or
js
or
out
fldcw
loope
and
js
mov
and
idivb
jb
fimuls
jns
shll
test
ja
neg
ja
fsubrs
mov
or
popf
or
sbb
test
addr16
int3
xchg
dec
cmp
mov
pop
push
hlt
scas
push
or
mov
xchg
ucomiss
lahf
shlb
pushf
roll
adc
xchg
sub
lcall
mov
repnz
mov
sub
test
jb
add
outsb
xchg
mov
dec
pop
nop
mov
jne
or
cmp
ljmp
push
mov
cmp
les
push
dec
jge
or
pushaw
pop
inc
or
icebp
push
xor
rclb
mov
stos
push
aaa
mov
push
add
push
outsb
fildll
dec
insb
addr16
inc
lret
sub
adc
ret
cmpl
mov
inc
out
ret
mov
push
shrb
cmp
loope
nop
jns
mov
xlat
adc
mov
inc
dec
outsb
rol
or
cmp
imul
movsb
xchg
push
stc
and
les
into
fdivrs
sarb
xchg
sarl
mov
push
rolb
push
js
enter
fucom
inc
lcall
sahf
jge
jnp
out
aaa
pop
sbb
or
adcl
cmp
pop
add
aaa
fnsave
rorb
lods
xor
fwait
imul
clc
dec
fsubrl
add
adc
mov
cli
push
jmp
insl
dec
out
ljmp
hlt
adc
and
shlb
adc
in
mov
mov
and
lret
mov
imul
cmpsl
sahf
and
mov
pop
or
mov
mov
fs
inc
sub
call
lods
insb
bnd
ret
inc
stc
pop
or
sbb
ret
cmp
push
outsl
mov
mov
push
jae
ret
inc
mov
pop
xor
setbe
loop
div
or
scas
mov
lock
pop
mov
mov
mov
add
cmp
dec
cld
inc
cmp
stc
into
push
pushl
repnz
dec
mov
or
jns
mov
inc
mov
xchg
hlt
shrb
add
xlat
add
in
jnp
insl
or
pushf
idivl
push
mov
xlat
std
out
jge
adc
outsl
popf
movsl
icebp
add
bound
adc
jle
dec
jns
imul
pop
add
out
aaa
lods
mov
xor
cmp
push
cmp
mov
and
movsb
stos
ret
push
xor
sbb
mov
and
cmpsl
ljmp
inc
mov
mov
sti
fidivrl
jnp
push
mov
add
push
aas
push
add
xchg
add
pusha
mov
lcall
jo
dec
out
push
mov
xchg
mov
xor
add
jne
scas
andl
or
inc
push
sub
inc
xchg
in
data16
pop
aam
pop
pop
fidivs
cmpsb
or
mov
lods
imulb
mov
jmp
xor
inc
repnz
cltd
cltd
jmp
fmull
and
hlt
jle
mov
pop
lret
dec
adc
shrl
rorl
and
in
clc
lcall
jb
add
pop
mov
lods
scas
insb
sub
imulb
in
gs
mov
or
aad
sub
push
or
cmpsb
push
xcrypt-ecb
cmpsl
unpckhps
or
jge
add
ja
dec
mov
cmpsl
les
inc
aam
push
repz
movsb
data16
subb
in
add
push
pop
lock
daa
movsb
dec
fidivrl
pop
pop
sub
mov
in
int3
push
push
pop
push
out
xchg
jge
movsb
pop
cwtl
pop
sti
cmpsl
arpl
mov
hlt
cmpsl
push
or
adc
mov
mov
mov
bound
pop
push
dec
enter
dec
cwtl
push
daa
push
insb
ja
jge
cmp
xchg
ljmp
add
mov
dec
movsl
pop
into
jb
jp
fs
pop
lea
nop
push
stc
fwait
out
outsl
jbe
in
mov
lods
pop
mov
push
push
cmc
jno
std
dec
jne
test
loopne
adc
and
sub
imul
mov
insb
push
out
push
and
repz
fiaddl
xchg
std
sub
dec
setbe
sahf
or
int
adc
lret
sub
cwtl
mov
lahf
sbb
data16
gs
les
or
sub
lea
addl
jo
mov
inc
mov
cmp
mov
outsl
mov
inc
into
mov
and
dec
add
pop
fistpl
out
and
sbb
jmp
dec
int3
and
xor
mov
cs
adc
push
call
cmc
jae
push
dec
addr16
cltd
pop
jae
ret
xchg
sub
cmp
mov
clc
gs
inc
xchg
repnz
xchg
adc
mov
mov
adc
leave
repz
arpl
cld
rcr
loope
and
add
push
or
js
outsb
and
mov
insb
mov
fs
or
and
dec
loopne,pn
ss
mov
test
pop
pop
xor
cld
add
ret
lahf
add
or
adc
adc
dec
xor
scas
lret
fnstcw
jae
jp
popfw
stos
add
neg
jne
adc
push
cmp
mov
loopne
or
roll
jae
push
out
xor
lods
stc
mov
push
test
xchg
mov
sbb
repnz
js
cli
jb
iret
jb
in
mov
mov
push
pop
enter
lds
push
dec
mov
and
mov
outsl
or
out
imul
mov
shll
xchg
xchg
dec
sbb
xchg
jle
test
outsl
push
jae
out
mov
into
xchg
cltd
es
jb
mov
sti
arpl
fdivrl
cmp
ret
fldcw
aas
push
fs
lret
jp
sbb
cs
xchg
test
stos
add
repz
rcl
out
push
push
addr16
xchg
call
push
repnz
in
mov
rcrl
loopne
outsb
mov
xor
mov
aaa
sbb
mov
mov
mov
dec
add
jl
rclb
loop
mov
xchg
push
push
into
adc
pusha
xchg
xchg
loopne
mov
daa
ret
inc
adc
sub
insl
xchg
pusha
mov
fcomps
mov
xor
add
loop
inc
lods
sbb
mov
add
insb
jp
loop
movsl
xor
xor
add
push
fcmovne
xlat
xchg
sub
lret
pop
cmp
cmp
inc
ret
popa
out
xor
mov
in
and
je
fwait
cmc
aas
test
fs
dec
subl
push
mov
sbb
pop
gs
out
inc
adc
out
js
or
dec
gs
mov
sahf
cmp
jae
xor
add
adc
add
scas
cmc
cwtl
xchg
add
sub
sbb
jle
gs
mov
dec
pop
push
outsl
notl
adc
ds
js
dec
pop
out
pop
pop
mov
rcll
push
push
and
insl
loopne
inc
test
xlat
cwtl
or
sub
jg
int
jg
lret
stc
test
xchg
insl
sbb
shl
aaa
cmpsb
push
dec
in
mov
mov
mov
cld
icebp
mov
mov
aaa
mov
imul
add
xor
fwait
outsb
test
int3
fs
pop
dec
addr16
sub
push
xchg
mov
mov
mov
stc
je
movsb
scas
xchg
or
jns
sbb
loope
out
xchg
not
fstpl
test
push
cmp
dec
lods
adc
xor
shrb
sub
jp
sarl
aad
int3
scas
out
mov
push
push
cmovbe
ljmp
test
or
je
in
cmpsl
and
repnz
mov
sub
mov
cmpl
push
cmpb
xchg
lods
dec
fdivl
mov
dec
xor
pop
mov
leavew
mov
sub
out
and
jne
pusha
mov
bound
cmc
xor
sub
jno
imul
dec
xor
jno
mov
add
out
jb
push
add
repnz
cmpsb
out
mov
cwtl
dec
mov
xor
shrb
outsb
pop
mov
into
imul
sahf
nop
inc
pop
inc
arpl
jns
fcmovne
lea
mov
push
or
test
push
cmp
pop
lods
rcl
sahf
aad
out
pusha
scas
movsb
lods
popf
inc
push
mov
dec
sbb
movl
cmp
adc
or
xor
imul
sbbl
lcall
loop
or
int3
xor
dec
push
ret
dec
cmpsb
fsubrl
mov
das
in
xchg
sbb
std
sbbl
out
ja
call
xchg
pop
arpl
add
mov
mov
cmp
mov
and
push
fdivp
cmp
sub
mov
mov
jb
ljmp
xchg
iret
pop
addr16
pop
roll
mov
cmpsb
shlb
dec
lahf
insb
dec
in
xchg
fisubrs
cmc
mov
mov
sub
push
mulb
add
adc
sbb
scas
clc
aam
push
xor
push
add
jb
les
addb
jne
gs
mov
fildll
push
pop
cltd
iret
lret
hlt
mov
dec
adc
push
jl
jmp
jl
movsb
mov
sbb
add
test
mov
pop
cmp
mov
xor
mov
cmpl
cli
nop
push
mov
or
aaa
out
sbb
xchg
dec
fcmovbe
xor
push
adc
push
stos
push
jbe
xor
xor
mov
pop
je
jmp
icebp
pusha
mov
mov
inc
inc
mov
and
jb
xor
dec
lcall
push
shr
dec
pop
mov
lea
dec
dec
sbb
add
test
xorb
jg
rorb
dec
adc
xchg
mov
push
test
xchg
xchg
es
clc
fs
mov
lret
lret
shrl
sub
test
lea
or
push
in
add
mov
adc
push
in
adc
stos
imul
mov
fistps
push
pop
jge
cmpsb
inc
adc
pop
sbb
mul
push
push
or
jo
flds
jo
cmp
out
rcrl
cmp
add
xor
outsl
inc
in
divl
jp
pop
adc
add
mov
enter
mov
int3
jb
inc
push
mov
sbb
sub
outsb
adc
das
jnp
loopne
cmp
ret
jmp
out
cltd
xchg
enter
lods
mov
sub
cld
jbe
in
pop
enter
nop
inc
dec
loop,pt
jae
test
popa
adc
xlat
sub
test
lahf
cs
adc
sbb
ss
push
adc
and
inc
sbb
xor
and
mov
adcb
cmpsl
pusha
lcall
cwtl
mov
addl
push
inc
xor
cli
xlat
repnz
xchg
shrb
movsb
or
test
es
fs
and
inc
lcall
jnp
nop
cmpsb
pop
rorb
shrb
sbb
ss
popf
cs
fwait
and
inc
cmp
test
outsb
shrb
rorl
push
les
lds
in
loopne
outsb
inc
addb
lods
push
add
std
xor
inc
fildl
cmp
lods
xor
fdivrs
lahf
std
mov
adc
cmp
out
out
loopne
dec
mov
in
addr16
imul
lahf
or
or
fisttpl
pop
mull
push
sub
and
and
pop
xchg
xor
or
out
fistpll
mov
cli
xchg
xchg
adc
pop
sub
mov
lea
incl
das
lret
add
pop
mov
sub
fsubl
jns
jo
jg
inc
stos
clc
scas
popf
adc
leave
mov
jb
add
or
push
add
mov
insb
ret
cmp
push
dec
in
mov
movsl
lcall
arpl
jns
insb
les
pop
test
mov
jb
fstp
arpl
jp
arpl
fs
decb
shl
cmpsl
sahf
rcll
xchg
shrd
dec
inc
fwait
jns
push
or
and
mov
cld
push
and
call
xchg
repnz
test
cld
xor
inc
xchg
xchg
pushf
mov
es
xor
outsl
pop
lods
daa
test
push
and
jl
xor
inc
test
cmc
in
out
mov
divb
pop
lods
or
dec
cwtl
clc
pop
push
xchg
sbb
cmp
push
repnz
inc
leave
jnp
dec
ljmp
sbb
and
fldl
mov
or
xchg
xchg
cmpsl
dec
test
push
repnz
and
out
pop
outsb
mov
fstps
ljmp
jge
sbb
ljmp
sahf
pop
lods
ret
std
jmp
or
xchg
push
adc
mov
cmpsb
mov
mov
rorb
cs
orl
adc
outsl
jle
inc
icebp
pop
leave
xchg
mov
cwtl
stos
xor
adc
movl
ret
xor
adc
fnstenv
scas
cmp
ret
and
jmp
stos
sub
pop
sub
dec
cwtl
jae
in
push
push
or
jae
js
cmp
or
scas
stos
das
stos
inc
ja
call
or
pop
cmpb
pop
adc
push
jmp
gs
adc
jl
and
dec
das
inc
clc
and
jo
sbb
push
xor
nop
in
scas
movsl
enter
inc
pop
add
into
add
fmuls
lock
je
pushf
cli
stc
jno,pt
imul
jne
loopne
cld
std
loop
pop
fstpt
mov
mov
sahf
pop
dec
mov
out
ret
dec
pop
stos
lret
add
inc
nop
sbbl
pop
incl
addl
aaa
cmp
out
dec
xor
out
dec
in
pmulhuw
leave
std
loopne
mov
jecxz
xor
lret
popf
push
mov
cmc
jbe
and
rclb
xchg
fbstp
adc
dec
cld
rcrb
ficomps
scas
lock
fiaddl
xchg
xor
int3
sub
dec
popf
into
out
scas
jmp
or
or
in
jae
push
mov
jl
add
movsl
movsb
pop
add
mov
rorb
jnp
push
cmp
bound
movsw
mov
imul
mov
adc
xchg
jl
imull
stos
inc
test
xor
or
push
add
dec
mov
arpl
aad
test
mov
adc
push
in
push
and
cmp
inc
jp
jae
mov
add
arpl
mov
mov
xor
xor
daa
test
aas
iret
xor
or
push
mov
movsb
pop
pop
sbb
test
div
jns
push
and
pop
mov
jle
mov
xor
push
test
movsl
mov
int
xor
mov
ror
sbb
pusha
nop
fidivrl
popa
js
jecxz
sbbl
jle
or
add
jb
inc
testb
xor
lret
pop
mov
push
dec
push
imul
fld
aas
scas
je
ret
dec
orb
jo
dec
mov
pop
stos
mov
int
pushf
sysret
iret
dec
lahf
xchg
out
fs
shl
and
inc
or
xorl
leave
popf
cmp
mov
imul
jb
pop
mov
lret
in
sbb
jns
adc
cmp
mov
out
rcrb
xchg
clc
mov
pop
repnz
jmp
jg
mov
ret
mov
das
mov
sub
les
popf
xor
nop
push
mov
inc
das
cmp
xor
call
dec
daa
fwait
sbb
cmp
jecxz
arpl
sub
adc
xor
je
inc
pop
mov
add
ror
repz
dec
push
cmp
in
nop
sub
mov
add
mov
loop
and
gs
pop
mov
dec
adc
repnz
clc
popf
outsb
stos
ss
cs
mov
mov
adc
push
cmpsl
push
jo
inc
shrl
pop
mov
jb
imul
fwait
adc
fistpll
outsl
in
fimull
scas
inc
int3
mov
push
aam
imul
rcrb
pop
adc
adc
in
cli
loope
pop
lock
push
lahf
orl
addb
push
cld
push
sbb
push
xor
ss
dec
fnstsw
and
and
sbb
xchg
into
inc
aad
xchg
push
loop
std
aas
push
mov
stos
mov
mov
insb
rcrl
and
xchg
mov
lret
dec
out
popf
clc
outsl
pop
fstpl
aam
orl
stc
sub
sbb
rcrl
cmc
pusha
ret
out
lods
arpl
out
fsubl
outsb
inc
add
lcall
xchg
into
out
stos
lret
outsb
mov
ret
cld
lret
stos
pop
cmp
lret
push
add
inc
js
sbb
push
popa
push
rcrb
lods
fistl
add
rorl
decb
ljmp
cmp
add
lcall
mov
mov
cmp
push
cmpsb
push
or
mov
movb
popa
ret
sub
neg
imul
xor
xchg
test
pop
or
rolb
mov
lods
sbb
repnz
scas
mov
sub
arpl
mov
in
push
sub
fsts
rclb
out
adc
lock
xchg
sarl
and
sub
sub
and
mov
adc
idivl
dec
dec
repz
push
aad
xchg
jg
pop
frstpm(287
inc
adc
mov
popf
out
movsb
loop
mov
ds
mov
out
push
loope
out
arpl
dec
pusha
adc
dec
dec
rorb
adc
addr16
pop
mov
push
aam
sub
dec
hlt
push
mov
outsl
mov
lods
stc
jl
rol
jecxz
jl
lahf
imull
icebp
mov
sar
fdiv
addb
jnp
outsb
lods
in
loopne
test
inc
mov
inc
push
or
adc
push
idiv
dec
pop
test
mov
jle,pn
aas
pop
ss
jne
add
mov
dec
and
insb
lret
xchg
sbb
scas
cmp
cs
pusha
stc
pop
push
cmp
insb
jbe
xlat
mov
test
sar
sahf
and
aaa
and
sub
iret
add
sub
push
movsb
ja
int3
roll
fmuls
fstpl
rorb
aam
jo
adc
adc
push
xchg
inc
pushf
and
pop
lret
movsl
mov
jp
mov
push
jbe
repz
stos
pop
scas
cmpsb
dec
out
jnp
pop
lcall
add
xchg
adc
popa
lcall
ror
cmc
rol
das
into
pop
imul
int3
jle
push
lret
adc
sub
push
dec
xor
xchg
loopne
shll
cmp
fnop
in
stos
or
insl
cmpsb
dec
ss
repz
sarb
cwtl
movsb
iret
mov
loop
push
jb
cmp
sbb
adcb
imul
pop
mov
stc
pop
sahf
mov
cmp
bound
imul
mov
or
adcb
xor
in
hlt
mov
pop
xor
bound
cmpsl
roll
or
inc
ja
icebp
imul
inc
imul
fwait
pop
mov
inc
stos
jno
inc
mov
imul
insb
and
sub
popf
xchg
xchg
xor
sbb
scas
xchg
mov
add
fs
inc
stc
insb
push
out
inc
mov
fisubrl
test
add
xorl
mov
out
push
clc
out
add
aas
mov
add
fsubp
and
loope
repz
daa
mov
mov
data16
cmpsl
ljmp
add
jle
push
pop
sbb
cli
pop
sbb
and
pop
sub
mov
popf
rcrb
and
in
mov
cltd
sub
mov
sti
mov
outsl
pushf
fidivs
push
and
inc
pop
dec
icebp
xchg
movl
mov
sbb
add
sub
shrl
inc
aad
filds
pop
mov
movsl
dec
leave
popf
jno
push
xor
dec
jg
jns
jmp
sub
in
push
jne
stos
out
cmc
and
insl
ss
leave
pop
out
or
adc
ds
rcrl
lods
dec
add
push
movsl
inc
sbb
push
lock
xchg
mov
int3
pop
sub
dec
and
cli
cmp
test
lods
stc
test
les
sub
into
xlat
mov
mov
es
fs
xor
push
sarl
clc
mov
mov
or
shlb
xor
xor
mov
mov
inc
fs
leave
sbb
lret
xchg
xorb
data16
or
or
adc
int
xor
pop
push
out
in
xchg
mov
hlt
ja
iret
xchg
sub
cmc
sub
std
or
add
negb
sub
mov
mov
rorl
mov
and
dec
pop
mov
jbe
cmc
cs
or
aam
xchg
mov
imul
jl
ss
xor
sbb
iret
add
pop
test
adc
lods
fidivrl
sub
gs
cmc
push
adc
in
mov
cld
cs
stc
adc
or
scas
in
rorl
push
fcomps
mov
adc
repz
dec
enter
not
mov
repnz
arpl
sbb
jns
pop
and
ret
push
xchg
mov
shlb
ret
dec
sub
cmc
mov
push
push
movsl
lods
inc
std
pusha
mov
aas
push
xlat
nop
cltd
mov
sbbl
bound
jbe
scas
mov
or
cmp
push
xor
dec
shlb
int
add
sub
jl
mov
mov
sbb
push
and
loop
loope
test
das
iret
push
xchg
push
mov
ret
lea
or
orl
dec
dec
jb
mov
imul
xlat
cmp
dec
outsb
stos
imulb
and
mov
mov
sub
sar
sbb
mov
cmpsl
addr16
sub
pop
shlb
inc
or
dec
movsb
xlat
pop
jp
in
fisubs
or
das
xchg
mov
orl
add
jl
xchg
add
dec
pop
test
sbb
imul
mov
sbb
jae
pop
sbb
jg
ljmp
int3
dec
jne
fstp
push
sahf
popf
cmp
adc
aas
lds
push
imul
rcrl
je
in
sbb
int3
jbe
gs
mov
mov
add
pop
pop
lretw
jmp
ljmp
jns
jp
lods
ret
mov
mov
mov
insb
lea
pop
lods
movsl
insb
sub
insl
out
iret
movsb
test
mov
xor
xor
orl
xchg
rcll
xor
mov
sub
fistl
xchg
push
xor
pop
test
enter
ja
in
sbb
scas
shlb
shrl
sbb
dec
ret
dec
cmp
adc
pushf
dec
popa
pcmpgtw
ss
push
jmp
push
rcl
add
push
test
std
add
fwait
sbb
ljmp
popf
icebp
add
sub
sti
pop
mov
loop
mov
lock
movswl
mov
ret
popf
into
and
adc
xchg
fcomps
mov
or
dec
sbb
xor
push
or
mov
loopne
cmp
inc
loopne
in
adc
stos
push
and
inc
sti
sub
stc
les
adc
mov
adc
flds
test
mov
sub
jge
pop
inc
cli
sbb
std
cwtl
push
cmp
das
inc
popa
cmp
lahf
push
out
test
xor
dec
in
cltd
lahf
add
xor
orl
cli
movsl
xchg
adc
pop
mov
cltd
mov
jbe
insb
ret
pop
int
fildl
ret
daa
inc
cmpl
add
mov
mov
ret
push
ja
inc
pop
ja
push
test
push
rorl
mov
into
mov
insb
inc
xor
es
js
add
lods
mov
mov
sahf
push
ljmp
ficoml
mov
repz
out
jbe
jb
sub
cltd
in
pop
add
imul
fistpl
adc
out
jl
insl
or
mov
aam
adc
add
cmpsl
leave
rolb
pop
pusha
push
pop
sub
scas
ja
loop
xchg
xchg
and
pop
mov
mov
lcall
push
add
arpl
mov
dec
mov
jecxz
mov
dec
mov
lahf
xchg
push
loopne
in
into
cltd
push
jg
shlb
cmp
dec
pop
idivl
push
sbb
pop
pop
out
lds
push
xor
ds
rcrb
jge
dec
sub
int3
adc
aaa
outsb
std
test
test
jns
and
jl
mov
adc
notl
outsl
sbb
jb
xor
inc
imul
jecxz
inc
push
jb
pop
fstpt
stos
mov
xor
cmp
xor
je
xchg
xchg
push
push
adc
leave
xchg
or
les
fsub
ljmp
xor
out
out
dec
stc
lods
cmp
les
push
popa
push
addr16
adc
push
adc
ret
mov
cmc
sub
enter
jl
push
push
jmp
xor
bswap
push
lods
cwtl
sbb
aas
mov
jns
pop
lea
pusha
pop
jl
fbstp
xchg
and
cmp
testl
xchg
jge
nop
add
fs
cmp
xor
cmc
or
les
jns
jmp
fcoms
pop
mov
gs
je
fiadds
jmp
mov
jo
jmp
lret
add
mov
add
adc
mov
mov
and
pop
lcall
jne
cmpsl
mov
dec
fimuls
mov
int3
lods
mov
adc
in
out
jle
into
rcl
hlt
imull
lods
dec
cmpsl
mov
je
xchg
cld
pop
sbb
sub
xor
xchg
mov
xchg
push
xor
push
xchg
xchg
xchg
int
xor
es
inc
fisubl
mov
dec
mov
sbb
xchg
in
push
jno
das
int
out
mov
sub
pop
sti
stos
mov
inc
xor
cltd
lock
mov
sub
and
cmp
fstl
xlat
rcrb
les
adc
lret
xor
bound
lods
call
mov
arpl
xor
pop
insl
dec
pop
pusha
mov
ja
imul
add
stc
bound
lcall
das
stos
sub
pop
xchg
stos
inc
arpl
pop
pop
mov
enter
jo
sub
mov
cwtl
pop
jo
jae
jl
mov
mov
pop
jb
into
jp
idivl
sahf
outsl
sbb
cmp
jns
ds
mov
dec
ret
sahf
fisubrl
lret
or
frstor
fsubp
pop
addl
xchg
xchg
test
jp
mov
xor
aas
insb
xchg
pop
fstpt
fsubr
cmp
leave
call
xchg
ljmp
aaa
cmp
mov
sbb
push
adc
sbb
popf
subl
sti
jbe
add
or
mov
dec
mov
out
cmpsl
fcoml
in
fwait
sub
fsubl
data16
pop
jl
imul
push
cmp
xor
push
sub
sbb
jle
ret
stos
leave
cmpsb
rcll
adc
fmul
xor
adc
stos
cli
dec
pop
or
addl
sbb
dec
or
dec
jne
xor
push
fwait
jbe
xor
jp
roll
ret
jno
notl
int3
sbb
fcmovb
dec
sbb
sub
xor
out
ss
div
pop
push
clc
loopne
sbb
mov
aas
out
je
xor
dec
cmpsl
sub
sbb
push
hlt
sbb
xor
arpl
push
jns
dec
pop
gs
cs
fwait
sub
jb
into
push
repnz
fldenv
mov
push
cld
pop
xor
xchg
insl
clc
xchg
mov
mov
les
cmc
or
dec
pop
sub
addl
mov
stc
push
jmp
imul
add
and
mov
stos
cmp
jae
cmp
pusha
jb
cmp
je
lods
or
outsb
pop
movsb
pop
inc
fiaddl
out
dec
popf
subl
jmp
dec
test
mov
adc
das
sahf
out
sub
and
aad
sub
mov
xchg
and
stc
sahf
loope
push
jno
mov
jle
call
xor
subl
out
push
xchg
or
in
aad
hlt
push
or
lahf
les
mov
into
jmp
loop
pop
cmp
and
xlat
jo
clc
and
in
lret
push
repz
cmp
cwtl
into
out
stos
daa
lret
push
and
lods
pop
xor
mov
sti
cmp
hlt
push
in
int3
xchg
cli
xor
jns
mov
push
xchg
mov
xor
adc
push
and
rcr
call
stos
sub
sbb
push
mov
xchg
sti
mov
popa
in
pop
repnz
nop
or
test
jge
mov
movsb
xchg
cmpsb
les
fbstp
out
mov
in
fsts
xchg
inc
pop
add
push
push
inc
add
movsb
cmp
loope
pop
and
inc
pop
add
add
divl
clc
pop
repz
xchg
test
xor
cld
jge
mov
and
ljmp
fwait
xchg
sub
lret
shlb
inc
popl
jp
push
fistpll
lret
mov
push
push
outsb
add
lods
mov
jns
cmp
test
std
jbe
int
cld
pop
call
ret
fndisi(8087
inc
insb
lea
repz
sub
movsl
popf
inc
cmpsl
cmpsl
mov
orb
fsubrs
pusha
push
xchg
mov
xchg
xchg
andl
mov
sub
stc
xchg
or
pop
jl
pop
mov
int3
fbld
call
aas
xchg
mov
adc
stos
mov
mov
movsl
push
dec
push
push
in
test
pop
je
jno
add
neg
aas
incl
sarl
gs
jne
mov
mov
lcall
outsb
cwtl
push
xchg
push
fldt
out
aaa
pop
or
and
push
loope
movsb
add
and
addr16
mov
cmp
pop
test
jns
pop
cmpsl
movsl
loope
lcall
dec
mov
lock
pop
xchg
repnz
ljmp
das
xor
lret
pop
cmp
push
adc
jmp
lods
mov
mov
mov
jg
dec
pop
mov
sub
push
xor
push
mov
fcomps
stos
push
shlb
push
enter
pop
sbb
dec
or
sbb
dec
lret
idivl
pop
lret
xor
mov
mov
adc
ret
imul
mov
jmp
lret
bound
push
stos
xchg
iret
stos
inc
adc
jp
shll
lahf
stc
repnz
cmp
xor
test
pop
jmp
repz
dec
inc
sub
mov
pop
mov
xchg
and
xor
jo
and
fs
test
jl
push
add
rcr
push
dec
xchg
aam
mov
adc
mov
fcomi
mov
icebp
nop
dec
dec
cmp
xchg
fnsave
and
dec
pop
popf
out
sbbl
scas
sub
jp
xchg
in
cltd
stos
filds
jb
sbb
hlt
xor
pop
xlat
ficompl
and
push
add
sbb
bswap
mov
ja
push
cmp
shrl
adc
xor
es
clc
adc
adc
pop
daa
xchg
ret
outsb
and
sbb
lcall
mov
sbb
in
pushf
xchg
ret
leave
cmp
nop
cmp
call
ja
push
in
inc
clc
stos
imul
adc
and
push
andb
ja
cwtl
ret
fwait
shlb
lock
hlt
jg
mov
cmpsl
cmpsb
aam
movsb
fwait
dec
scas
sbb
mov
in
mov
orb
js
fstl
pushf
adc
ret
mov
and
mov
imul
jne
or
outsb
adc
arpl
mov
jne
in
std
add
push
cmpsl
repz
add
iret
dec
into
lods
andb
mul
push
sbb
int3
lods
sbb
mov
test
cmp
fwait
mov
jae
movl
mov
sar
adc
add
aad
int3
mov
outsb
push
mov
pop
scas
dec
xchg
bound
xchg
xor
jo
mov
mov
rcrl
dec
xorb
daa
add
inc
je
add
xchg
sbb
out
inc
in
or
cmpsl
inc
push
in
orb
addl
imul
shl
dec
fadd
enter
cmp
data16
fcmovnu
jo
jne
xor
or
adc
and
jne
test
mov
mov
mov
ret
xchg
mov
jecxz
popf
sbb
loope
bound
cwtl
and
arpl
insl
not
es
dec
cmp
aad
adc
outsb
call
ss
nop
pop
adc
lret
andb
inc
sbb
mov
or
xchg
adc
push
sub
and
leave
adc
sub
and
sahf
or
stos
movsb
js
rol
aam
loop
dec
fsubs
stos
add
push
scas
jns
mov
cli
in
and
iret
mov
shll
mov
cli
arpl
mov
imul
fcomip
jmp
stc
pop
rclb
es
movsb
and
sbb
lret
lock
cmp
inc
xor
push
jb
mov
mov
clc
push
nop
mov
ret
and
rcll
mov
icebp
hlt
gs
mov
jae
les
mov
jle
jg
cmp
lcall
mov
sbb
iret
dec
outsl
or
cmp
mov
jnp
out
xchg
cltd
inc
mov
jae
divl
sub
enter
mov
jmp
lahf
insb
mov
cmp
stos
cwtl
sahf
mov
jb
dec
lds
and
mov
or
push
leave
pop
test
mov
inc
js
cmp
or
movsb
ficoms
fwait
cmp
sbbb
or
mov
enter
cs
or
mov
add
mov
test
inc
scas
adc
inc
or
popa
sbb
mov
insl
or
fs
push
cltd
ret
xlat
xor
and
mov
in
aaa
test
mov
xchg
rorl
sbbb
loop
ret
clc
and
in
pop
popa
ret
inc
adc
orb
jb
sahf
push
xlat
jne
xorb
xchg
push
popf
mov
push
cltd
sbb
cmp
lea
aaa
flds
test
xchg
es
data16
shlb
jl
imul
push
xor
call
pop
inc
imul
mov
les
push
repz
xchg
enter
push
mov
lock
and
bound
fldl
scas
cmpsl
and
mov
outsb
push
pop
fs
arpl
xor
jns
scas
in
into
in
popa
sub
int3
push
cmp
pop
test
inc
cltd
int3
repnz
loope
and
and
leave
mov
leave
pusha
movsl
lods
outsb
push
inc
mov
shl
xchg
mov
jb
pop
mov
and
jge
ss
jp
hlt
movsl
push
cmp
add
sti
popf
aaa
imul
xor
test
and
lods
nop
fs
fdiv
push
xchg
mov
pushf
repz
jbe
add
loop
je
mov
cmp
out
adc
jo
add
dec
push
xchg
negb
xor
inc
xchg
je
cmp
push
popa
loope
pop
ret
cmp
jp
aas
fimuls
xchg
xor
push
xchg
sar
mov
push
or
jns
lock
mov
dec
cld
sti
xchg
xchg
cmp
outsb
or
mov
mov
or
push
jg
lcall
adc
xor
sahf
mov
cmc
fstp
mov
idivb
cmpsb
push
or
jle
cli
ds
add
ds
sbb
fstps
lds
lret
subb
daa
jae
xchg
aas
out
cmp
cmp
out
es
jo
pusha
std
xchg
cmp
xlat
lea
stos
cmp
mov
test
mov
xor
test
cmpsb
sub
push
bsr
aam
aam
sahf
cmp
mov
xchg
mov
sti
das
test
xor
xlat
push
fisttps
out
push
outsl
lods
add
add
push
inc
sbb
ret
jg
lods
rcl
xchg
pop
jmp
cmc
push
jl
inc
pop
sbb
cmp
cmp
popa
cltd
add
rsqrtps
jg
cltd
pushl
jns
cld
fidivrl
mov
je
mov
add
mov
aam
in
mov
sub
aam
sbb
push
and
faddl
aam
mov
mov
aaa
mov
sbb
cli
or
mov
xchg
in
dec
out
lret
inc
lock
test
xchg
pop
je
mov
shlb
movsl
inc
lcall
fldz
bound
lds
nop
xor
cwtl
mov
notb
repz
inc
push
fs
jae
into
mov
imull
mov
lret
pop
mul
mov
dec
movsl
xchg
sbb
xchg
jmp
rclb
sbb
fists
pop
outsl
ljmp
cli
mov
jecxz
out
subb
sti
shll
imul
popl
repnz
or
stos
sub
stc
or
pop
fmull
js
cs
lods
push
or
outsb
push
dec
movsl
cltd
push
out
add
pusha
jns
test
int3
xchg
rcrl
fbld
xchg
clc
mov
pop
push
lahf
sub
test
mov
adc
into
cmpsl
jp
arpl
lret
jnp
mov
insb
inc
cmp
sar
sti
mov
or
push
jns
mov
mov
and
mov
jge
das
push
lret
xor
dec
xor
mov
addr16
outsl
sahf
and
out
ret
xchg
xor
dec
adc
xor
fldcw
scas
push
in
lock
aas
cmp
das
add
lcall
out
pop
hlt
jae
adc
minps
cmp
dec
jno
or
push
sub
adc
cltd
adc
fidivs
adc
out
push
adc
je
movsb
addb
jecxz
pusha
lret
and
mov
cmp
in
dec
mov
and
xchg
scas
movl
ret
pop
mov
inc
cli
pop
in
mov
and
cmp
mov
int3
xchg
test
mov
test
pop
imul
cwtl
js
call
mov
dec
iret
adc
mov
pop
les
xchg
xchg
mov
and
in
jbe
adc
pop
lock
mov
adc
imul
or
mov
lods
pop
adc
sbb
jmp
in
jle
mov
mov
je
rcll
cmc
fdivs
cmp
sbb
jo
addl
cs
mov
bound
aas
test
jns
clc
in
je
lds
fs
into
mov
xorl
and
arpl
push
adc
pop
push
test
loope
hlt
and
sub
and
jno
sub
sub
fdivrl
test
pop
aas
sbb
je
mov
push
inc
ret
rep
pop
push
mov
adc
lods
mov
setns
xchg
cwtl
stos
jae
dec
fs
nop
divl
loope
jnp
pop
in
lahf
jge
mov
and
add
push
jmp
ljmp
daa
mov
sub
or
xchg
rorl
movsb
popa
cs
or
rclb
mov
xor
and
inc
cmp
or
mov
adc
and
xchg
lret
fcompl
stos
gs
aad
popa
std
stc
sbb
out
jbe
ljmp
pop
pusha
and
add
out
pop
jge
lret
std
push
int
jne
test
cmp
ja
dec
push
out
sub
push
sbb
les
dec
push
mov
clc
cs
inc
pop
inc
ret
cmp
sbb
loopne
cli
mov
adc
xor
icebp
in
mov
fiadds
jge
jnp
or
loope
push
aad
jno
pop
leave
dec
push
mov
shll
adc
inc
mov
addr16
pop
inc
pop
push
mov
mov
or
cmp
jo
add
sub
adc
pop
pop
and
inc
xchg
shll
or
adc
outsb
lahf
ds
xor
shll
addr16
mov
xlat
enter
mov
ds
aad
sub
mov
shl
hlt
test
adc
rclb
das
jmp
hlt
xchg
hlt
popf
add
cmp
pop
mov
dec
ja
std
out
shll
lahf
push
inc
adc
std
xchg
inc
lds
mov
cmp
into
adc
mov
or
in
mov
or
out
or
stos
ljmp
cmp
das
subl
push
jecxz
push
data16
inc
push
aaa
cli
out
std
enter
mov
and
jmp
imul
jmp
jge
dec
push
lahf
sbb
dec
sbb
sbbb
sub
dec
icebp
imul
push
dec
xor
mov
popf
sbb
addr16
fld
int
jnp
mov
mov
ja
movsl
cli
out
popf
sbb
cmc
std
sub
inc
push
jecxz
push
jmp
pushf
xor
mov
out
call
rcr
xchg
in
push
sbb
loopne
mov
jge
iret
scas
les
icebp
or
cmp
arpl
jmp
paddsb
stc
test
adc
sbb
fdivr
mov
pop
ljmp
push
xchg
push
mov
sbb
fwait
inc
inc
mov
xchg
loope
lret
scas
test
jae
push
icebp
mov
sahf
into
or
pop
inc
imul
add
push
popf
outsb
movsb
aas
push
jnp
push
ucomiss
or
jl
orb
orb
xor
mov
imul
insl
popa
in
nop
or
or
setae
sub
pusha
fnstcw
sarl
xor
inc
add
int
cmpl
add
xchg
leave
loop
jbe
lcall
std
xchg
adc
xor
pop
fldenv
push
sti
gs
dec
loopne
adc
push
mov
jge
mov
xor
pop
imul
ds
ror
inc
test
cmp
dec
aad
cmp
push
pushf
cwtl
rcl
xchg
or
jmp
xor
push
fnstcw
bound
sub
mov
loop
cltd
add
mov
nop
hlt
add
lock
xchg
inc
les
outsl
lcall
cmpb
aam
aam
popf
dec
adc
orl
mov
out
xchg
in
ret
shlb
mov
imul
rorl
adc
popa
jecxz
inc
mov
sahf
nop
in
icebp
pop
jle
mov
xchg
outsb
int3
fidivl
mov
mov
sbb
inc
pop
ret
sbb
fdivrs
mov
test
fcmovb
mov
push
ficomps
sti
sete
xchg
xor
iret
mov
adc
dec
sub
inc
push
push
xchg
js
mov
sub
jno
in
and
xchg
sbb
inc
mov
push
test
repnz
sub
movsb
mov
aas
nop
fsubrs
hlt
pop
iret
div
mov
push
dec
mov
lods
dec
dec
mov
push
ds
ja
jb
into
or
push
fs
sbb
cmp
loop
dec
ficoml
repz
lods
loopne
pushf
dec
add
lea
jb
mov
jge
push
faddl
sbb
jne
insb
iret
lret
pop
and
test
mov
jl
das
mov
adc
cwtl
mov
nop
push
mov
iret
pop
pop
xchg
insl
cli
sbb
notb
inc
shl
leave
sub
xlat
push
adc
out
mov
call
call
adc
lahf
add
fsubs
xlat
pop
adc
adc
out
xor
insl
lds
in
cmp
cli
jge
jge
push
pop
das
clc
out
dec
imul
mov
repnz
pop
outsl
and
mov
and
sub
mov
xor
jne
xor
adc
or
rcrb
or
mov
les
rol
incl
jno
mov
mov
push
xchg
cmpsb
nop
sbb
fnstsw
push
jne
imul
pushf
cmp
pusha
movsb
fildll
test
sub
dec
or
sub
xchg
mov
popa
das
fcomip
call
in
gs
mov
and
jle
xchg
sbb
scas
push
mov
mov
jnp
and
adc
outsl
es
lret
and
scas
out
shlb
outsl
popf
xor
adc
push
int3
fldenv
sbb
xchg
mov
adc
movsb
pusha
in
sahf
cmpsb
data16
push
dec
into
test
leave
lahf
sbb
inc
or
inc
mov
es
cli
inc
cmp
hlt
iret
jno
cmp
shll
iret
push
xchg
outsb
in
enter
jmp
sbb
mov
add
cld
scas
hlt
jle
sbb
sub
hlt
sbb
lret
mov
imul
movsb
sbb
xor
rcrb
mov
mov
ja
sbb
push
push
ret
out
push
cs
daa
test
popa
mov
jb
adc
out
mov
sub
gs
xchg
jecxz
pop
pop
dec
popa
daa
mov
stos
push
outsb
xor
ds
mov
xchg
out
mov
movsl
pop
fsubl
dec
pmaxsw
xor
sbb
push
xlat
imul
in
popf
cmpl
mov
ficoms
jmp
aaa
pop
and
fldl
inc
outsl
mov
cs
mov
pushf
pop
mov
les
repz
aaa
xorl
das
push
sub
jl
decl
loop
sarl
jge
push
push
mov
aas
cmp
add
ret
jle
dec
push
adc
push
iret
out
adc
lahf
pop
adc
pop
jno
mov
dec
xlat
stos
fsubs
and
cmp
mov
adc
adcb
inc
inc
fidivs
sub
lcall
scas
dec
jg
inc
out
idivb
lret
mov
pop
mov
jae
mov
xchg
andb
push
int3
cmp
shl
mov
inc
jnp
sbb
cwtl
sbb
fisubrl
mov
push
push
test
lret
jg
cmp
push
xchg
xor
pop
aaa
popl
add
or
jp
jmp
rol
ret
lods
sub
js
jb
sbb
sbb
fs
mov
rcrl
and
imul
jg
or
enter
jecxz
sub
in
mov
sbb
mov
push
xchg
shrd
xchg
sbb
xor
in
xor
fs
jae
sbb
enter
loopne
mov
jns
pop
test
ds
imul
dec
xor
fidivrl
cmp
push
rcrl
imul
or
mov
es
lock
sahf
bound
test
sahf
add
mov
push
call
mov
or
ljmp
jmp
mov
adc
insb
jne
and
push
in
sub
sbb
cmp
cmp
shrl
dec
or
sbb
and
inc
push
sub
rcrb
inc
jns
fildl
in
mov
push
mov
lahf
and
testb
cmp
and
pushf
mov
out
cli
ret
xchg
cltd
scas
repz
mov
adc
pop
loope
add
movsl
iret
pop
sbb
inc
mov
or
fldenv
pop
rcrl
mov
xchg
mov
add
jnp
in
mov
dec
jp
idivl
push
inc
push
add
xor
dec
and
test
inc
dec
jge
cmp
gs
stos
fdivs
jge
mov
lock
in
add
fcomip
ficoms
cmp
sbb
pop
into
inc
fnstenv
inc
stos
test
js
xorps
jns
add
rolb
data16
sub
adc
and
jns
mov
adc
adc
loope
dec
push
mov
cmpsb
dec
nop
es
push
mov
pop
mov
lret
aam
push
dec
stos
int3
and
aaa
cmpb
test
jp
dec
subb
in
test
out
roll
and
icebp
shr
enter
jle
rorl
xchg
icebp
rcr
sahf
dec
int
xor
testb
mov
mov
incb
mov
fwait
das
adc
push
xchg
aaa
adc
mov
ret
addr16
sub
mov
cmp
adc
add
adc
inc
jp
jmp
lret
inc
add
add
out
lods
lcall
inc
hlt
jl
cmp
andb
sbbb
or
out
nop
mov
push
cmpsl
cmp
idivl
add
pop
push
push
pop
pop
imul
cld
pusha
imul
hlt
cltd
push
inc
pop
cmp
sub
arpl
dec
loope
adc
popa
ret
pop
xchg
gs
adc
dec
sti
lds
loopne
jne
jmp
inc
mov
or
and
shll
divl
iret
lahf
xchg
insb
xchg
rclb
in
jge
cmp
outsb
inc
cltd
ja
or
lock
imul
data16
mov
cli
stc
add
cld
push
dec
sbb
pushf
mov
das
into
dec
xchg
test
mov
or
inc
daa
ret
addb
loop
js
mov
stos
sbb
fcompl
fdivr
addr16
lods
or
xorl
stos
in
and
mov
mov
pop
add
sbb
dec
sbb
adc
dec
clc
popf
test
add
add
ficoms
lret
adc
scas
mov
cmp
ljmp
out
jns
fadd
comiss
jl
movsb
outsl
or
call
mov
into
lret
jp
pop
sub
ja
js
shll
inc
sti
insb
lods
arpl
push
jo
inc
push
das
xor
or
rcrl
add
pop
adc
mov
movsl
cmp
or
push
movb
adc
sbb
mov
pop
pop
or
aam
xchg
pop
fnstsw
fcmovnu
iret
xchg
mov
xchg
les
dec
jg
sbb
shl
outsb
cwtl
idivl
mov
insb
pop
cld
xchg
call
pop
ret
adc
scas
test
jb
pop
insb
sub
push
adc
lock
insl
jno
das
int3
out
sbb
and
dec
test
push
divb
lods
push
mov
mov
mov
push
fdivrs
mov
jae
xchg
mov
jge
outsb
mov
popa
addl
sar
jg
nop
pop
xchg
movsb
sbb
mov
sbb
mov
fdivrl
push
cmpsb
test
and
push
outsb
xchg
xor
into
test
std
jb
repz
xchg
rclb
fnsave
cs
jl
mov
mov
fucomi
loope
dec
hlt
push
sbb
aas
mov
ret
and
lahf
add
popa
mov
add
inc
outsl
inc
and
lret
out
in
das
aaa
mov
sbb
cmp
mov
daa
popa
fldcw
sub
fimuls
lock
fldenv
pushf
dec
stos
sub
sarl
xchg
sysenter
jbe
test
cmp
mov
outsl
mov
test
pop
jnp
movsl
orl
test
mov
add
mov
push
mov
pop
clc
jmp
sti
xor
sbbl
inc
in
mov
hlt
fwait
mov
adc
inc
sarl
in
sbb
and
incl
push
fcmovnb
sbb
sbb
mov
int
pop
mov
int
hlt
mov
xchg
outsl
jp
xlat
adc
jmp
in
jge
js
push
push
shlb
rcrl
popf
dec
pushf
ljmp
add
dec
sbb
jp
mov
add
and
sub
dec
in
adc
arpl
ficompl
hlt
mov
dec
pop
hlt
add
ljmp
out
inc
push
pop
test
sbb
sahf
popa
cmp
xor
pop
xchg
inc
int
popf
mov
mov
arpl
cmp
or
mov
push
pop
mov
add
or
nop
jnp
inc
or
jno
loop
jbe
push
sub
sub
lcall
scas
cmp
lods
scas
xchg
dec
inc
push
repnz
int3
ret
dec
stos
lods
jecxz
sahf
pop
stos
ss
in
fbld
fistl
cwtl
lcall
dec
push
jae
mov
sbb
push
push
ja
xchg
lret
movsb
stc
pop
jae
daa
loop
mov
in
shl
js
cwtl
loope
cmp
sub
imul
movsl
cli
xor
pop
std
mov
pushf
out
add
adc
nopl
pop
out
call
lcall
push
mov
push
mov
xchg
stos
jne
aad
push
lea
js
adc
mov
cmp
jg
lock
into
adcl
push
cmp
subl
pop
cmp
sub
sbb
sbbl
test
push
movlps
inc
ds
dec
dec
inc
mov
xchg
movsb
mov
lcall
out
sub
xchg
rep
faddl
pop
test
clc
insl
xlat
inc
aam
cmp
push
sbb
in
push
inc
lret
inc
arpl
cld
pop
cmpsb
popf
jle
nop
out
or
dec
int3
outsl
adcl
insb
divl
mov
fistpl
pop
or
or
mov
mov
mov
xchg
fcompl
inc
sbb
movsl
push
aad
dec
inc
mov
int3
xchg
mov
arpl
xchg
dec
push
sub
mov
inc
dec
mov
jg
gs
rcrl
das
out
mov
lcall
popf
fcomps
lret
mov
loope
or
jnp
cmp
outsl
pop
mov
mov
int3
jnp
les
in
dec
iret
jmp
add
idivb
xor
sbb
ja
mov
jg
mov
movsl
insl
dec
fildl
sbb
pop
xchg
sbb
mov
cwtl
notb
jne
fdivrs
lds
inc
mov
dec
lahf
xlat
ja
ds
jmp
mov
lods
in
das
pop
push
mov
mov
mov
dec
fdiv
fsubrl
out
shlb
adc
mov
dec
sbb
test
mov
sub
mov
arpl
test
add
adc
mov
mov
mov
xor
jl
adc
adc
std
dec
jnp
pop
repnz
leave
scas
jecxz
mov
por
je
out
or
outsl
mov
xchg
pop
xchg
js
or
outsl
jmp
mov
outsb
adc
test
sbb
ljmp
in
enter
lock
or
or
fsts
adc
leave
cmp
icebp
mull
fsubrp
xor
rcll
roll
out
or
mov
mov
sub
out
or
repnz
inc
mov
cwtl
insb
xchg
movsb
add
les
fistl
mov
nop
and
and
jbe
sbb
loopne
fwait
inc
pop
push
inc
stos
out
push
xor
pop
mov
loop
cmpsb
pop
icebp
sub
movsb
das
ja
in
scas
xor
cmc
fmul
sbb
or
jae
hlt
in
xchg
sbb
mov
hlt
push
jmp
popf
aad
icebp
int3
cmp
testb
xchg
dec
mov
push
xchg
lcall
cmp
mov
adc
loope
adc
loopne
jo
cmpsl
cmp
mov
mov
orb
pushl
leave
sub
mov
mov
out
mov
cmp
xchg
add
adc
ds
test
out
jb
in
in
call
in
mov
jecxz
or
mov
mov
adc
bound
xchg
lcall
xchg
xchg
lods
testl
scas
xchg
adc
jecxz
call
pop
mov
std
clc
cmpsb
sbb
xchg
add
pop
mov
mov
je
mov
addr16
inc
imul
clc
lock
hlt
mov
mov
movsl
or
rcrb
sahf
push
ljmp
inc
in
dec
cmp
xor
mov
or
fisttps
into
shl
sbb
sbb
adc
add
sbbl
push
xor
repz
add
push
loopne
into
shll
and
mov
lock
lods
add
sub
pop
sub
dec
popa
int3
sbb
dec
lret
frstor
testl
xor
or
dec
push
or
aad
out
cwtl
inc
stos
mov
adc
mov
jns
pop
jne
scas
push
or
lret
orl
jo
mov
jo
push
fdivrp
test
mov
cmp
or
or
mov
mov
pop
das
das
ficomps
fdivl
int
jno
iret
push
arpl
adc
lcall
ja
dec
xchg
fidivs
and
inc
xor
pop
add
iret
push
sub
ds
mov
es
pusha
clc
jns
mov
flds
mov
pusha
out
xchg
popf
or
cmp
pop
cmp
jnp
mov
mov
dec
rcl
adc
and
jns,pt
andl
jno
roll
lcall
loope
pop
jp
clc
sbbl
pop
cmp
and
jne
mov
adc
mov
pop
mov
out
push
outsb
xlat
cmpsl
pushf
adcb
push
pop
int3
loopne
or
lret
test
loopne
les
das
rorb
fsubrl
mov
sahf
cmp
lret
loopne
sbb
push
jns
loop
cwtl
push
add
push
and
push
and
pop
push
adc
push
movsl
sub
test
insb
out
iret
mov
out
out
stos
sbb
in
dec
jb
xlat
pushw
push
inc
mov
mov
clc
add
jne
scas
pop
fimuls
test
xchg
adc
jecxz
sbb
stos
xor
loope
dec
or
rcl
dec
pop
mov
lock
push
mulb
push
lds
xor
xor
jnp
out
pusha
dec
and
or
mov
add
lea
cwtl
add
addr16
lock
test
ja
jbe
ja
sahf
pop
js
push
das
sbb
in
fnstcw
add
mov
mov
sub
mull
jo
mov
cmp
sbb
das
or
add
jecxz
pusha
pushf
sub
cmp
dec
outsl
or
cmp
test
push
inc
ret
xchg
imul
mov
jb
inc
add
mov
cltd
sti
cmp
adc
or
push
cmpsb
dec
in
out
cmpsl
aaa
out
and
and
cmc
ss
stc
or
test
pushf
cltd
dec
movsl
in
adc
sub
pop
js
call
mov
out
xor
mov
mov
sti
sub
jb
mov
shlb
sbb
mov
lea
sahf
cld
fwait
xchg
mov
or
fidivs
in
jmp
push
pop
push
xor
inc
mov
or
inc
fdivp
sti
or
sahf
jb
shlb
mov
cmpb
cs
loop
scas
inc
imul
adc
loope
insb
cs
dec
adc
out
inc
push
outsb
test
adc
sub
ljmp
lcall
rorb
insl
pusha
cmp
and
push
clc
daa
arpl
mov
jle
insb
in
lods
dec
jo
add
adc
fsubrp
inc
sbb
pop
push
jbe
ja
divps
insl
orb
xchg
repnz
sbb
jo
cmp
dec
out
add
xor
mov
push
das
ret
adc
rcll
shlb
mov
adc
mov
pop
fdivl
mov
xor
test
ret
xor
insl
xor
pop
mov
mov
sub
mov
sub
pop
jge
cmp
dec
pop
roll
pusha
mov
loope
cs
push
scas
dec
or
push
lahf
mov
cmp
push
inc
pusha
addr16
loop
rorb
and
push
gs
sub
adc
mov
jle
imul
cmpsb
sbbb
sub
cmpsl
loope
and
add
aam
popa
adc
mov
testb
jno
mov
add
shr
pop
mov
scas
adcb
push
mov
clc
mov
mov
xor
shll
scas
pop
popf
dec
loop
ljmp
or
push
in
mov
mov
aaa
mov
mov
xor
pop
dec
xor
jp
or
daa
mov
sbb
lods
enter
dec
jbe,pn
out
xor
inc
jbe
in
lsl
jns
ja,pn
lods
gs
lret
call
xchg
sbb
aad
mov
jmp
jns
bound
cmp
jns
cmp
ret
inc
lcall
xchg
push
xchg
mov
or
pushf
fstpl
add
addr16
in
pop
movsb
fwait
int3
xchg
jbe
inc
lock
in
cmp
sub
mov
push
push
push
mov
fldenv
jmp
inc
lret
sbb
stos
pop
scas
repz
fisubrl
and
inc
push
sub
aaa
int
inc
popl
mov
into
cltd
imul
jb
enter
mov
test
xchg
sti
push
inc
cmpsb
push
icebp
jno
mov
sahf
scas
stc
ret
xlat
pop
in
xor
and
mov
ja
add
loopne
adc
in
dec
mov
into
mov
mov
lcall
cmc
mov
inc
ret
cmpsb
stc
mov
into
pop
lret
out
adc
sbb
movsb
sub
ss
or
xchg
sub
jle
mov
xor
movsb
mov
and
lods
push
rcl
inc
xchg
popa
rcr
adc
xchg
push
mov
inc
repz
dec
addr16
pop
cmc
aas
inc
arpl
mov
mov
jp
incl
jmp
push
cmp
rcrl
call
cmp
pop
test
push
cld
mov
cmp
sbb
fmull
jmp
fisttps
int3
push
xchg
mov
mov
mov
loope
into
scas
sbb
add
xor
and
cmp
in
xor
jnp
adc
out
pop
cmp
jnp
cmp
loop
hlt
loope
adc
and
jmp
gs
mov
cmc
addr16
outsl
imul
addr16
lea
mov
pop
imul
jl
inc
sub
push
mov
inc
push
cmpsb
popl
fisubrs
xchg
xor
xor
inc
fstl
negl
mov
mov
test
addr16
add
pusha
sub
or
seta
idivb
movsb
cmp
je
lock
push
iret
cli
jl
jne
jp
mov
push
jns
loope
add
and
adcb
pop
pop
push
out
jae
mov
adc
and
lea
sub
push
cmp
lock
mov
mov
loope
sbb
push
psllq
xchg
stos
aaa
cli
push
and
pop
cmp
add
jecxz
push
dec
loopne
xchg
adc
mov
adc
movsb
push
fmull
sbb
ficomps
xor
inc
cmpsb
xchg
mov
addr16
cmp
lods
mov
xor
pushf
pusha
mov
xor
cmpb
fldenv
lahf
xlat
stos
inc
movl
jne
inc
mov
or
outsb
xchg
lea
add
scas
gs
in
data16
xchg
add
push
scas
loope
rcrb
data16
leave
pop
adc
sub
adc
ror
and
sbb
dec
mov
push
cmp
gs
das
dec
cmc
jnp,pt
mov
mov
pop
movsl
stc
psubusb
es
aas
psrlw
sarb
les
in
xor
fidivrl
bound
test
lock
clc
jnp,pt
sub
sahf
je
add
add
xor
in
and
out
inc
adc
mulb
std
pop
in
push
mov
hlt
imul
imul
mov
cmp
in
push
cmp
cs
sub
mov
inc
dec
mov
jecxz
xchg
sbb
xchg
adc
into
pop
pushf
sub
leave
ja
xchg
ljmp
mov
add
fildl
imul
call
nop
test
lock
mov
inc
mov
cmp
stos
dec
pop
jg
out
or
pop
ficomps
popa
ret
inc
mov
in
and
sub
out
cs
mov
xchg
into
or
leave
and
lods
shll
inc
inc
inc
fucomip
pop
dec
pusha
xchg
aad
jb
dec
das
push
jae
dec
dec
and
add
andb
add
add
dec
in
mov
or
push
dec
push
lret
nop
pop
mov
or
into
xor
jp
shll
lea
mov
mov
mov
xchg
ret
flds
sbb
insb
add
mov
jg
insb
es
into
mov
mov
movsb
xchg
jg
inc
cs
push
mov
mov
xor
inc
adc
movsb
pop
imul
cmp
mov
adc
stos
shll
or
mov
cli
cmp
sub
and
mov
push
mov
dec
jp
lcall
xchg
dec
pop
rcr
hlt
push
add
inc
and
lods
cli
pop
rcrl
aam
xor
scas
pop
sub
push
mov
pop
add
jg
mov
adc
xor
jp
cmc
push
in
insl
outsl
rclb
and
cmovge
repnz
shl
test
xchg
sub
jno
test
mov
test
cld
movsb
popf
dec
push
sbb
mov
stos
sbb
or
ds
movsb
cmc
adc
inc
test
dec
pop
mov
and
sub
adc
aaa
and
mov
js
out
pop
mov
dec
lcall
push
jle
aas
scas
mov
cmpsb
lods
or
fidivrl
sbb
xchg
ret
mov
push
sub
jge
bound
test
sti
insl
dec
inc
sub
xor
mov
mov
imul
cmpsb
int
js
xlat
mov
mov
cmp
ljmp
push
mov
xchg
push
popa
or
shl
out
sahf
aaa
adc
je
into
jecxz
add
mov
sbbb
cmpb
js
movsl
jnp
movl
push
mov
mov
mov
inc
mov
ficompl
bound
pusha
inc
lds
mov
imul
jp
xchg
dec
lods
test
sbb
cwtl
lds
sub
mov
jmp
mov
sub
push
movsl
sub
loopne
add
push
aam
and
and
pusha
fistpll
pop
popf
fildl
mov
loope
or
jo
cltd
mov
fisttpll
aaa
hlt
lret
in
aad
loope
popf
pop
adcb
fdecstp
icebp
and
or
cmpsb
stos
jnp
or
push
push
push
lahf
outsb
sub
pop
mov
hlt
xor
test
rcrl
ret
jp,pn
mov
push
ror
leave
daa
testb
mov
or
fidivs
repz
mov
sbb
mov
leave
or
dec
pop
imul
pop
or
xor
pop
andb
dec
mov
adc
sahf
mov
push
ret
fs
adc
cmpsl
jo
and
lods
rcl
shl
xchg
call
sub
adc
dec
bound
xchg
test
in
bnd
sbb
mov
ret
adc
push
repz
aaa
mov
jns
das
les
cmp
cwtl
popa
sti
roll
loop
xchg
pop
pusha
cli
dec
jge
fistpll
inc
movsb
jg
mov
lds
clc
sub
in
sub
xor
xchg
and
jb
in
jne
or
out
fs
gs
add
mov
sbb
imul
aaa
out
pop
arpl
jp
sar
pop
jbe
push
and
adc
bound
add
daa
test
arpl
cmpsl
nop
jl
test
mov
push
sbb
scas
xor
xor
movsl
mov
test
cwtl
iret
andl
addr16
cld
dec
in
test
mov
mov
adc
psrld
cli
sbb
bnd
bound
and
scas
xor
movsl
mov
push
cmpb
je
neg
push
int3
test
out
dec
dec
jae
mov
inc
mov
call
imul
lds
cli
ja
ret
shrb
aam
int3
fisubrs
adc
jbe
outsb
fistpll
stos
in
rcl
inc
je
mov
arpl
mov
mov
popa
test
cmp
xchg
aad
and
jl
mov
rcr
jne
iret
mov
pop
scas
sbb
and
cmp
out
fs
movl
xor
adc
or
or
punpckldq
mov
aaa
adc
and
pop
cmp
fnsave
call
loope
mov
xchg
incl
sti
out
test
jae
sbb
mov
mov
lcall
ljmp
push
insl
push
cld
out
and
cmp
jnp
test
repz
and
leave
mov
and
repnz
sbb
xchg
cmc
and
divl
push
lahf
neg
dec
dec
xchg
xchg
dec
outsb
pusha
push
insb
sub
inc
insb
push
dec
outsl
repz
mov
mov
dec
mov
sbb
xlat
inc
je
out
fnclex
mov
popf
sub
outsb
aam
adc
push
xchg
cmp
and
xchg
mov
test
and
ljmp
jno
test
testb
mul
rcl
cmpsl
addr16
pop
js
sbb
inc
adc
or
and
fcompl
mov
and
inc
pop
xlat
outsl
loopne
data16
jmp
bound
fdiv
or
sti
sub
jbe
cmpsb
jne
mov
imul
mov
pop
daa
in
jbe
rorl
mov
mov
leave
out
and
and
das
outsl
cmp
mov
jl
pushf
aam
mov
ljmp
dec
into
dec
sub
fs
push
or
sub
inc
mov
mov
test
cwtl
inc
xorl
mov
addr16
cmp
add
movsb
stos
adc
orb
dec
and
sub
push
add
mov
add
sbb
not
xlat
lcall
cltd
sbb
in
mov
mov
push
mov
sbb
cmp
jns
jbe
outsl
loop
pop
cmp
clc
mov
add
in
outsl
in
pop
sub
bound
or
mov
mov
int3
sarb
sbb
sbb
xor
call
adc
jbe
pop
or
scas
push
int
push
mov
in
in
stos
add
lret
cs
push
push
push
xchg
jmp
lea
dec
inc
pop
push
les
mov
pop
or
add
sub
xchg
clc
mov
xlat
out
mov
mov
loopne
js
jg
adc
dec
jle
sbb
and
pusha
adc
inc
fists
jo
cmp
or
jno
inc
sbb
int
cs
aas
clc
mov
out
loop
push
pop
add
fdivs
xchg
stc
lods
adc
mov
cmp
mov
pusha
ficoml
mov
mov
mov
loop
aaa
and
adc
and
sbb
imul
lods
dec
mov
xor
xor
inc
daa
jbe
pusha
sarl
ret
out
sbb
mov
lock
lock
mov
jl
fnstcw
push
cmpsl
aaa
jo
mov
dec
jp
xchg
lahf
loop
vpaddsb
lock
jb
mov
xorb
mov
inc
mov
das
hlt
fimull
js
mov
and
imul
sbb
icebp
dec
pop
arpl
cmp
mov
repz
dec
add
push
int
adc
pop
jmp
sub
jnp
repz
lret
add
xchg
lds
and
bnd
test
adc
cli
mov
shll
pop
add
fwait
nop
inc
add
xor
repz
inc
xorl
mov
mov
push
jmp
mov
scas
mov
ljmp
sbb
dec
fs
scas
call
push
sbb
lock
inc
xor
loopne
fidivs
cmp
movsl
dec
sahf
repz
mov
sti
cmpsl
or
inc
jo
sarb
popf
xchg
push
add
sub
sub
adc
jbe
push
xchg
popa
mov
test
mov
loopnew
add
inc
pop
push
mov
mov
arpl
adc
mov
mov
movl
sti
jecxz
clc
or
into
push
in
sbb
sbbb
cmp
pop
cmpl
addr16
dec
jl
cld
jg
mov
lods
xchg
add
lods
mov
nopl
arpl
mov
in
sbb
out
cs
lods
mov
in
movsl
and
cwtl
xor
mov
mov
repnz
mov
mov
movsb
dec
daa
push
adc
cmp
ret
mov
test
ret
test
adc
rclb
sub
outsl
aaa
push
jmp
jne
repz
movsl
xchg
outsl
stos
add
mov
sbb
aas
or
mov
mov
push
sub
dec
add
stc
std
pushl
cmp
xor
mov
dec
fdiv
xchg
add
inc
cmpsb
repz
movsl
sub
insb
xchg
sub
push
outsb
pop
dec
es
xchg
or
pop
decl
into
pop
ja
pop
in
push
jns
stos
nop
mov
stos
fldenv
sahf
clc
in
mov
pop
adcl
or
dec
inc
mov
jmp
nop
fisttps
dec
test
std
repz
mov
std
scas
testb
iret
or
fwait
dec
scas
xor
push
xchg
mov
push
adc
jo
lcall
fdivl
sbb
or
mov
sarl
test
cmp
outsb
xchg
incl
repz
sub
xchg
xchg
push
data16
push
jns
pop
xor
leave
or
loopne
arpl
int
fisubs
out
jle
cmp
fadds
pop
fwait
lcall
or
xchg
inc
push
add
cmpsb
xchg
lahf
inc
mov
xlat
push
xor
cmpsl
sbb
mov
scas
inc
pop
adc
sub
sti
cltd
imul
subb
mov
shlb
dec
sbb
testl
hlt
jmp
loopne
dec
cmp
or
inc
add
cmp
loop
jge
xchg
jecxz
fcmovnbe
add
mov
rorb
pop
xlat
repnz
xchg
sub
aaa
mov
mov
and
jge
mov
popa
xchg
jl
lret
fcomip
xor
cmc
jp
nop
es
lods
rol
inc
outsl
sub
push
into
push
jno
or
aas
cmp
lods
testb
xchg
sub
lret
adc
xor
cmp
insb
rclb
lret
add
mov
cmp
movsl
xor
mov
add
mov
icebp
jb
or
xchg
jecxz
cmp
scas
inc
push
ljmp
push
bound
imul
inc
lods
je
cmp
add
mov
inc
inc
lcall
adc
add
lods
lahf
jo
push
cmp
jo
les
dec
les
dec
sahf
cmpsb
cmc
jp
jns
test
out
jnp
data16
loop
ficompl
ror
add
repz
and
xchg
sbb
outsl
ljmp
shll
sbb
mov
jae
fnstsw
xlat
push
inc
jb
push
loop
out
repz
popf
das
fsts
jmp
lea
out
jmp
in
xor
imul
and
add
cmp
xorb
sub
push
push
dec
and
push
sbb
call
inc
jb
shrb
or
mov
cmp
in
je
xchg
je
cmpsl
mov
lock
mov
jg
idivl
lock
xor
and
xchg
mov
pop
mov
xor
xchg
daa
mov
xchg
pushf
lods
in
mov
stos
jno
popf
xchg
gs
jbe
test
adc
rcrl
pusha
pop
es
sbb
xchg
outsb
scas
xchg
sbb
scas
loop
dec
fisttps
dec
xlat
and
ja
lds
pop
stos
lret
or
mov
cmp
xlat
out
push
or
aam
andl
insb
mov
push
push
jno
dec
lret
pop
frstor
push
xor
movsb
jb
inc
in
sub
and
mov
adc
repnz
int3
int
loop
mov
add
adc
mov
dec
movsb
nop
push
sub
mov
push
mov
stos
cmp
sbb
xchg
mov
jl
or
pusha
mov
sti
leave
fsubp
dec
push
pop
or
fisubs
icebp
out
ret
subb
sbb
fmul
inc
jl
mov
and
adc
sub
and
push
into
leave
repz
outsl
flds
insl
insb
push
push
int
mov
lret
inc
neg
dec
sbb
add
sbb
and
outsb
scas
dec
call
jne
lahf
or
mov
shll
mov
jle
cli
inc
push
inc
arpl
aas
insl
call
inc
jbe,pt
xchg
ds
jnp
mov
and
ret
xor
loope
dec
mov
xchg
dec
outsb
mov
pusha
jne
pop
out
jle
faddl
mov
sbb
mov
pop
sub
orl
mov
imul
lea
popa
aam
stos
sbb
fisubrl
in
pop
push
out
dec
push
mov
leave
mov
xor
mov
aas
sub
stos
pop
int3
pop
loope
add
popa
mov
dec
cmp
or
xor
jno
mov
xchg
or
dec
adc
inc
stos
fcmovb
xchg
out
clc
push
or
xchg
sarl
fcomp
mov
inc
pop
mov
cmp
mov
adc
adc
inc
pop
sbb
sarb
rcl
mov
repz
int3
fcompl
js
imul
jle
adc
inc
mov
cld
testb
std
rcrb
pop
dec
rorb
sar
pop
or
jg
bnd
int
clc
pop
nop
pop
xchg
sahf
fcoml
leave
pop
movsl
outsl
sahf
xor
xor
insb
je
push
jb
pop
push
or
mov
add
shr
ljmp
loope
je
insb
js
sbb
xchg
mov
pop
xor
bound
inc
jae
fadd
or
mov
fmul
hlt
inc
rcll
fisubrl
sbb
rclb
dec
adc
imul
loope
sbb
cmp
jg
dec
adc
les
setns
insl
or
rclb
idivb
adc
push
pop
cwtl
in
dec
inc
faddl
adc
sarl
mov
xchg
push
adc
mov
das
and
sub
std
adc
popa
jo
jge
pop
sbb
shl
push
inc
andb
in
jecxz
std
jnp
enter
loopne
push
rcll
outsb
lods
mov
or
int3
jae
nop
xor
popf
pop
push
pusha
adc
cmp
popf
pop
push
mov
and
push
clc
stos
lret
fsts
jo
stc
push
jl
mov
and
fcmove
add
cs
aam
out
sbb
stos
mov
jo
aaa
jmp
in
aam
scas
xor
imul
mov
shlb
jns
inc
or
mov
lahf
mov
in
push
and
sbb
pop
pop
mov
and
add
stc
mov
out
dec
sub
movsb
inc
int
jmp
mov
push
xorb
mov
int
cmp
enter
pop
inc
inc
jnp
pop
xchg
mov
sbb
scas
sbb
jnp
ss
bound
mov
leave
ret
or
cs
lcall
roll
imul
in
adc
aad
ret
hlt
dec
xchg
xchg
and
and
insb
sub
cmp
push
xlat
jg
in
cmp
aaa
std
pop
cli
fcomps
xor
cs
sbb
push
out
in
xchg
pop
out
fstp
mov
cmpsb
in
shll
jbe
int
nop
insl
call
push
lahf
push
jecxz
sahf
sti
sub
cli
data16
loopne
data16
les
or
cmp
out
sbb
nop
inc
mov
outsl
mov
and
neg
mov
or
and
cmovp
movsb
aad
test
add
shr
je
jge
in
ja
mov
sbb
mov
cli
xor
jns
sbb
in
lods
mov
lods
sbb
adc
sbb
stos
clc
add
gs
xor
leave
add
mov
stos
push
push
adc
dec
cmp
and
or
and
inc
pop
fs
ja
daa
in
ret
ss
xchg
scas
dec
pusha
test
xlat
loop
mov
dec
loopne
mov
xchg
cmp
push
ret
xchg
or
loope
out
inc
arpl
ret
xchg
pop
push
clc
mov
nop
popf
push
cmc
das
rclb
clc
ret
inc
outsb
sti
icebp
aad
xor
out
cmp
outsb
sti
sub
lcall
adc
mov
insb
xchg
mov
fldcw
pop
out
lock
lea
lret
cmp
inc
fsubl
push
sub
dec
scas
and
movsl
adc
lock
sarl
push
jns
sub
aas
xor
or
mov
sub
dec
jo
paddd
inc
scas
xchg
decb
xor
aaa
das
inc
and
cmpsb
sbb
mulb
out
xor
inc
sub
jae
add
aas
insl
jb
ss
movsl
inc
fstpl
push
jbe
ret
dec
dec
sbb
in
jne
xchg
test
cmp
pop
movsl
dec
mov
push
xor
or
test
mov
shr
pop
repnz
test
mov
cmpsl
jecxz
cmp
pop
hlt
rorl
test
cltd
mov
jnp
dec
adc
jae
pop
insb
loop
sub
push
pop
mov
scas
or
inc
int3
sbb
mov
push
pop
inc
inc
inc
and
lcall
icebp
adc
pop
sub
addr16
mov
xor
mov
fisttps
scas
xlat
or
push
in
dec
aam
frstor
call
sbb
fadds
fstl
adc
cltd
adc
push
loop
in
xchg
cmpsl
testb
pushf
dec
xor
andb
or
pop
mov
jle
inc
mov
imul
pop
mov
mov
test
int
lods
inc
aad
enter
cltd
mov
pop
cs
push
std
fcomp
xor
cmp
enter
das
insl
cmp
fs
fdivs
xchg
mov
sti
out
loope
jo
add
leave
mov
jmp
push
das
xor
dec
xchg
mov
icebp
push
jle
sbb
xor
sub
jge
adc
dec
outsl
dec
mov
out
xchg
adc
sub
pop
or
shl
cmp
fcoms
fdivr
xor
ja
ror
jb
pushf
js
repz
xchg
imul
xlat
dec
xchg
dec
adcl
push
call
lea
inc
das
dec
sub
cmp
mov
pop
loopne
dec
jecxz
cmp
imul
stc
lahf
imul
add
in
stc
and
data16
xor
xchg
dec
imull
in
pusha
ret
cmp
nop
sub
xchg
ret
sbb
outsb
jle
ds
add
clc
ljmp
sahf
xor
clc
call
bound
mov
mov
scas
loopne
scas
pop
mov
outsl
sbb
push
sub
mov
fwait
pop
loopne
mull
fidivl
lret
xchg
popf
ss
dec
fldcw
mov
inc
mov
idivb
cmp
out
ljmp
mov
cmp
add
add
dec
loope
jmp
push
mov
or
dec
pop
imul
xlat
call
pop
lods
bound
cmc
and
mov
or
cmpsb
test
aaa
addr16
mov
out
xchg
mov
fimuls
test
and
test
mov
sub
mov
sbb
mov
lds
sahf
fdivs
arpl
mov
bound
add
push
call
rcl
das
mov
lea
in
gs
loopne
or
ret
pop
mov
push
push
mov
imul
pushf
or
push
lret
add
arpl
daa
imul
xchg
lcall
mov
fcomip
pushf
loop
fwait
mov
mov
cmp
and
pop
bound
jns
ret
popa
inc
aas
fwait
shr
daa
mov
cmp
mov
jg
xchg
or
je
gs
iret
int3
pop
dec
stos
sbb
push
int3
cmpb
mov
icebp
add
mov
sub
in
test
rcrl
jmp
outsb
lcall
out
fldcw
cmpsl
fisubrs
mov
push
out
pusha
les
xchg
adc
lahf
push
xor
adc
outsb
sbb
pop
dec
pop
loopne
jno
push
in
mov
sbb
movsb
xchg
out
out
icebp
mov
incl
xchg
add
lret
loope
ficomps
sub
lcall
mov
loope
enter
and
push
jne
cs
dec
mov
add
pop
jl
arpl
aad
mov
and
cltd
ret
lea
pop
mov
sti
inc
scas
mov
js
clc
mov
repz
ja
pop
push
pcmpeqd
test
push
outsl
cmp
cld
pop
stos
cmpsl
scas
movsb
mov
inc
lods
push
dec
pop
lock
cmp
les
sub
in
ret
icebp
nop
mov
orb
das
sub
xchg
or
loop
push
mov
cmp
imul
push
mov
cli
mov
adc
push
ja
test
sbb
mov
push
push
fisttps
dec
pop
mov
lds
sti
pop
push
xor
dec
fwait
mov
test
outsb
mov
jne
popa
popf
test
adc
inc
adc
pavgw
fisubrl
addl
stos
ret
imull
pslld
data16
lret
jecxz
sar
dec
pop
add
push
pushf
sbb
data16
leave
cmp
in
ret
dec
fmul
das
fstpt
dec
dec
dec
addr16
adc
xor
and
stc
fiaddl
outsl
mov
mov
jne
push
mov
mov
inc
mov
and
sbb
adc
insb
icebp
mov
outsl
xlat
lods
xchg
and
insb
sub
push
ret
cmp
jb
mov
adc
mov
divl
mov
mov
jbe
ljmp
insb
or
jmp
mov
lret
pop
add
dec
push
in
aad
icebp
mov
push
or
push
dec
aad
stos
push
clc
daa
or
in
dec
mov
mov
mov
pop
jmp
and
sbb
loope
xchg
adc
xchg
mov
les
out
jmp
adc
sub
push
aad
lcall
fcomps
loope
mov
push
cltd
fadds
pop
cmc
pop
cmp
sub
sub
sbb
hlt
inc
jno
icebp
pop
ja
push
fidivrs
sar
dec
lods
out
cmpsl
das
std
popf
sar
and
mov
or
sbb
adc
xchg
pop
jmp
xchg
jb
mov
mov
pop
js
insl
inc
xchg
lcall
xor
or
rcrl
and
and
cmpsb
ljmp
int
fs
arpl
pop
lahf
xchg
mov
jae
test
jns
jb
stc
frstor
notl
cltd
pop
hlt
xor
mov
and
aas
adc
imul
pop
adc
mov
neg
shlb
jnp,pn
shll
and
pop
cmp
adc
xchg
add
push
pop
ljmp
adc
jmp
addr16
fbld
lds
cmpsb
xor
into
or
icebp
adc
mov
mov
outsl
mov
mov
sbb
sbb
mov
jne
adc
in
cmpb
mov
call
getsec
adc
les
pop
imul
rcll
daa
add
push
iret
pop
sahf
das
data16
aam
leave
int
push
inc
loope
dec
cmpsl
xor
sti
fcomps
lds
fildl
lods
ljmp
adc
in
sbb
repz
icebp
daa
jmp
mov
ret
movsl
in
scas
pusha
je
rclb
jg
test
inc
inc
adc
mov
add
out
lcall
pop
or
push
mov
jns
mov
cmc
jle
jmp
out
adcl
sbb
cmpsb
jo
and
addr16
cs
cmp
negl
insb
inc
adc
bound
idivl
rolb
aad
fistpll
hlt
addr16
add
addl
mov
ss
fs
jne
out
xor
data16
mov
xor
stos
or
into
sbb
fst
imul
dec
jp
movsb
add
test
sub
mov
pop
inc
xor
scas
ljmp
mov
or
lret
shrb
cs
jecxz
iret
das
pop
dec
and
adc
movsl
xchg
cmp
cmp
pop
icebp
or
clc
out
lahf
xchg
sbbl
sbb
push
sub
dec
outsl
dec
dec
jmp
add
cmp
test
mov
inc
cmp
addl
or
testb
push
mov
lods
or
icebp
int
cmpsl
pop
add
jge
in
imul
xchg
push
xor
jmp
xor
or
sub
fisttpl
sti
adc
data16
shrb
test
mov
fucom
repz
rorl
push
jno
call
out
lret
xchg
and
test
cltd
call
cmp
mov
xor
stos
or
cmpsl
adc
aas
cwtl
out
push
jae
adc
inc
push
or
fistps
sub
adc
insl
cmp
jecxz
and
je
sahf
cmp
xor
adc
dec
sbb
push
xchg
out
push
dec
pushf
mov
mov
jecxz
cld
add
mov
push
div
arpl
cmp
daa
lcall
xchg
or
insl
sub
repz
or
or
sub
inc
divb
push
cwtl
add
cld
xchg
mov
inc
dec
jo
mov
nop
int3
push
iret
mov
fisubl
dec
dec
xchg
add
andl
dec
sbb
xor
adc
dec
cmpsb
mov
dec
fstpl
sbbb
jmp
xchg
push
jg
pop
cmc
icebp
adc
mov
or
jmp
orl
imul
js
sar
rolb
and
xchg
hlt
and
data16
mov
fwait
jg
subb
movsl
xor
pushf
sub
hlt
sub
inc
jno
dec
push
bswap
add
or
rcll
pop
andl
cmp
faddp
mov
cwtl
aad
popf
add
rclb
mov
push
fs
mov
dec
data16
pop
push
aam
push
sub
mov
test
jecxz
mov
enter
mov
fldcw
stos
into
mov
rolb
xor
add
mov
pop
movsl
scas
xchg
mov
pop
rcll
pusha
fisubl
dec
shl
mov
sbb
jle
loope
int3
adc
std
or
jecxz
cmpl
mov
cmpsb
fildl
sbb
mov
in
iret
mov
aad
mov
in
jge
fbstp
mov
dec
xchg
dec
push
inc
pop
out
das
jg
lgs
repnz
mov
lods
push
out
dec
bnd
lods
pop
lods
cwtl
jg
xchg
jne
mov
outsb
rorb
pop
dec
scas
test
in
push
jecxz
fs
sahf
out
jbe
pushf
enter
and
mov
gs
lahf
loopne
adc
push
jae
xchg
mov
xor
dec
adc
mov
xchg
mov
mov
repnz
das
repz
inc
mov
push
xchg
out
push
xchg
mov
cmp
sub
inc
jns
popa
push
xor
movsb
sbb
mov
sbb
adc
sbb
xor
push
add
cli
dec
push
cmp
inc
sbb
mov
shlb
mov
lea
rorl
jne
push
fsubr
aaa
xchg
inc
add
in
stc
inc
sbb
sbb
rorl
sbb
sbb
stos
out
xchg
sub
inc
incl
lret
pop
iret
cmp
inc
cmp
stos
mov
bnd
mov
mov
mov
sub
into
lret
add
jp
xchg
xor
sub
inc
aad
xorb
push
iret
imul
jnp
cmp
push
and
and
jmp
xor
sub
inc
mov
hlt
in
mov
notl
xchg
fcoms
inc
mov
and
std
jno
cwtl
mov
imul
adc
in
push
add
aam
pop
out
dec
stos
test
push
push
loop
test
cmp
dec
sbb
xor
movsb
lock
mov
repz
icebp
lret
lahf
lods
jb
jge
push
testl
xchg
int3
adc
mov
repnz
push
jmp
mov
mov
mov
cwtl
xor
loope
icebp
cli
lahf
inc
lods
lock
add
out
xchg
sbb
movsl
xor
push
jle
jge
mov
mov
dec
cwtl
push
fmuls
lds
repnz
push
jg
idivb
xchg
cmpsl
mov
in
ljmp
add
gs
shlb
aad
aad
push
sub
imul
xlat
ds
cmp
xchg
popf
rolb
pop
dec
mov
jo
xchg
call
cmc
mov
negb
push
add
adcb
push
mov
sbb
and
cmp
pop
mov
jle
cs
and
in
mov
push
movdqa
ja
cmpsb
outsb
lods
flds
cmpsl
es
and
xchg
cmp
lods
fwait
repz
daa
lea
dec
inc
inc
or
jl
sbb
pop
push
mov
enter
in
jns
cmp
inc
sbb
jo
sarl
push
leave
popa
or
scas
cmp
addb
rcll
pop
out
daa
and
cmp
pop
pop
fistpll
xchg
sbb
xor
mov
sub
jg
inc
fucom
lods
jg
shrl
mov
mov
xchg
ja
std
dec
dec
sub
out
push
jae
or
sub
sbb
mov
adc
test
cmp
inc
mov
lock
jo
scas
mov
incb
or
mov
idivl
fadd
mov
enter
sub
jae
fmull
mov
sbb
scas
cmp
inc
leave
jmp
ret
fiadds
and
push
mov
scas
ss
fsubs
ret
jae
mov
call
add
lret
pop
add
jb
mov
cmpl
mov
xor
and
mov
inc
and
adc
sbb
mov
jo
out
stos
mov
ss
or
clc
arpl
test
lret
add
movsb
sub
dec
xchg
fldt
fsubr
jp
sbbl
gs
xchg
inc
xchg
mov
sub
xor
add
je
or
inc
sarb
xchg
push
into
fdivrl
pop
js
adc
stos
mov
js
mov
mov
adc
pop
cltd
mov
mov
push
lds
loop
test
add
repnz
mov
inc
adc
add
cmp
fsubrp
xchg
fs
xor
mov
stos
or
je
popf
or
std
scas
xlat
and
xor
pop
outsb
pop
mov
mov
out
pop
idiv
mov
inc
push
mov
cwtl
push
sbb
lcall
cwtl
dec
inc
mov
out
jne
shl
jge
stos
ret
notb
stos
pop
push
pop
add
popf
pop
sbb
imul
mov
movsb
movsl
or
dec
notl
outsl
inc
bound
adc
or
cltd
mov
jns
adc
sbbb
out
dec
jge
cs
jnp
loop
cmpsl
clc
mov
fistps
cltd
pop
xor
inc
ror
push
and
imul
pop
movsb
xchg
push
arpl
xchg
insl
inc
or
cwtl
mov
xor
sub
xchg
ja
mov
or
mov
fdivl
cmp
lea
sub
lret
jns
dec
rclb
divb
pop
lods
xorb
mov
shl
test
adc
jnp
int
loope
fst
aad
test
pop
shlb
into
xor
shlb
lcall
inc
in
lods
sbb
or
dec
sub
xor
xor
or
fwait
inc
add
or
movsb
jg
mov
into
or
into
pop
mov
ljmp
rclb
cli
leave
cmp
shlb
addr16
inc
popf
fimuls
push
clc
cmp
sti
jmp
sbb
out
inc
mov
stos
daa
mov
jo
incb
push
daa
aam
xor
pop
aaa
pop
push
xchg
sub
std
mov
cmpsb
add
outsb
call
jne
xchg
or
stos
inc
adc
pop
add
add
arpl
mov
mov
out
sub
vpmaxub
mov
hlt
sbb
fidivrl
dec
fistpll
push
and
mov
mov
cld
xchg
rcl
jno
sbb
push
cmc
cmpsb
pop
xchg
adc
fxtract
orb
bound
fldcw
dec
fcmovnb
rcrl
mov
push
subl
ret
push
cmp
lock
sub
sahf
or
mov
adc
in
in
out
inc
jns
andl
add
mov
sub
mov
cld
insb
fistpl
add
rcr
inc
call
adc
or
fstpl
int3
xchg
out
cmp
pop
out
cmpl
std
hlt
xchg
cmpsb
lret
xchg
stos
xchg
add
enter
and
sub
adcl
imulb
pop
cmpsl
icebp
mov
add
jp
pushf
or
stos
add
cmpsl
mov
subb
sbb
pop
sti
dec
pop
cmp
andl
xchg
shll
mov
and
repnz
jns
cli
dec
xor
fiadds
jae
loop
sub
enter
pop
jne
cmp
inc
inc
xor
xchg
mov
js
xor
popa
mov
je
andl
das
lret
push
leave
cmp
movsb
jge
jne
decl
inc
fiaddl
push
push
out
lcall
aam
and
test
out
rcll
inc
rcll
pop
mov
mov
xchg
fs
sar
xor
lea
inc
xchg
stc
sbb
adc
mov
ret
xchg
ret
ficomps
pop
lret
loopne
negb
push
gs
cwtl
mov
movsb
test
pop
mov
in
je
arpl
pop
scas
cmp
outsb
jg
ljmp
sbb
mov
aad
scas
punpckldq
pop
lahf
xlat
xchg
adc
divl
mov
cmp
ret
ret
dec
inc
or
dec
ss
xchg
pop
les
mov
push
loope
xor
xchg
mov
mov
enter
cmp
sbb
push
adc
stos
int3
cmp
hlt
xor
es
inc
add
dec
cs
xor
mov
ret
adc
xchg
call
mov
movsl
bound
ljmp
das
and
push
in
cmp
adc
sbb
lret
add
mov
sbb
dec
jb
or
jne
adc
cmp
outsl
mov
add
mov
push
mov
out
inc
push
outsl
jbe
jo
cmp
and
lahf
dec
jns
loopne
jl
cmpsb
mov
push
mov
aam
jns
test
sbb
jbe
jecxz
xchg
jae
rcl
inc
sahf
stc
inc
adc
inc
rorl
movsb
xor
aaa
xchg
sbb
xchg
jns
mov
sbb
push
lea
jb
add
pop
push
jmp
rcll
dec
stc
fwait
mov
mov
imul
cld
mov
int3
xor
jl
pop
mov
rcr
into
mov
in
cmp
sub
cmp
neg
jge
cmp
enter
and
incb
xor
iret
pop
aaa
mov
push
popf
and
cmp
or
fcoml
into
and
cmp
stos
int
int3
sub
pop
neg
aam
mov
lods
dec
jmp
jo,pn
lods
push
sub
add
mov
std
pop
in
sti
pushf
divl
movsb
mov
xor
sub
push
icebp
mov
xchg
test
js
or
and
cmp
push
xchg
jmp
jge
and
shlb
and
mov
push
xchg
mov
cmpsl
add
cmp
xor
inc
or
mov
mov
test
mov
les
cmp
shlb
mov
notb
bound
fists
adc
in
jg
mov
gs
cs
sbb
or
clc
aas
cld
bound
add
rcrl
mov
mov
fnstcw
xchg
push
mov
mov
sbb
cmp
mov
inc
test
xor
mov
scas
and
enter
mov
outsl
adc
fidivs
sub
fldl
call
mov
push
cmp
cwtl
sbb
inc
adc
dec
ficomps
push
divb
inc
es
sbb
hlt
test
pushf
clc
sahf
sbb
pop
xchg
in
xor
cwtl
mov
inc
mov
stos
sub
into
mov
adc
adc
scas
scas
jp
imul
pop
inc
add
or
sahf
movsb
out
inc
in
das
jnp
xchg
out
lcall
xor
or
push
jecxz
aad
adc
cmc
int
insl
pop
sub
rcrb
popf
aam
bound
jno
out
nop
mov
sbb
lds
dec
popf
scas
xor
ret
mov
adc
test
xor
and
push
lahf
and
ret
inc
int3
cmp
mov
xchg
loopne
lcall
jge
push
idiv
fadd
jg
daa
xchg
jmp
js
lods
cmp
mov
or
sbb
mov
leave
aam
mov
or
xlat
dec
push
pop
aad
and
or
mov
cmp
mov
xlat
push
cmc
inc
sti
sub
leave
outsb
iret
cmp
fsubrs
movsl
or
fdivrl
mov
popa
inc
fcoml
xchg
fadd
in
xchg
pushf
ficompl
out
stos
sub
mov
lret
inc
div
jge
cs
push
cltd
mov
std
mov
dec
or
stos
movsl
and
cmp
dec
rcl
test
in
inc
inc
std
mov
mov
cmpsl
shrb
in
rcl
addr16
aaa
adc
shll
add
int
scas
movsl
imul
jo
enter
mov
add
lahf
pop
inc
xor
mov
cmpsl
test
out
adc
jecxz
and
movsl
cmp
fstpt
fwait
iret
cmpl
lret
int
xor
mov
jmp
and
xor
jle
popa
and
jecxz
jbe
mov
or
mov
mov
iret
mov
aaa
push
in
test
mov
ror
js
inc
adc
dec
pop
popa
jecxz
popf
mov
nop
flds
ljmp
sub
mov
pop
clc
sti
hlt
xor
or
mov
call
inc
fwait
rcll
hlt
push
je
xor
ret
jno
js
sub
pop
fisttps
jg
mov
mov
add
rol
ret
add
packsswb
add
cmp
fisttpll
xchg
sti
mov
add
sbb
sahf
das
cmp
push
divl
jb
mov
ja
sub
sbb
daa
inc
mov
xchg
mov
fsubr
mov
bound
ret
pop
add
push
add
in
xchg
inc
cmpl
sub
les
lret
add
data16
or
cmpsb
in
mov
insl
inc
jne
pop
sbb
out
ret
mov
pop
les
repnz
sbb
lods
clc
inc
popa
arpl
dec
add
addr16
cmpl
cltd
mov
xor
cmpsb
and
push
in
adcb
ds
pop
lahf
fisubrl
jge
sbb
ja
adc
pop
jecxz
pop
mov
xor
lcall
outsl
or
imul
cmp
pop
inc
sub
adc
pop
fcoms
or
mov
cmp
pop
sbb
sub
out
jge
test
mov
mov
push
and
xchg
add
inc
fisubrs
dec
dec
ds
data16
call
fs
pop
mov
out
mov
aad
adc
pop
mov
shlb
push
push
xlat
aad
adc
or
lods
out
push
mov
ret
add
mov
sahf
mov
jnp
stc
imul
mov
data16
hlt
inc
js
andb
lret
addr16
fisttps
vhsubps
mov
push
fs
packsswb
push
mov
stos
dec
or
jae
cmpsb
mov
cmpsb
xchg
mov
mov
push
adc
lret
pop
mov
mov
loopne
rolb
outsb
mov
clc
insl
sbb
jns
mov
mov
inc
ret
imulb
xorl
lcall
ljmp
dec
jns
jb
xchg
push
out
mov
sub
push
xor
push
push
sub
jo
jne
or
dec
xor
ret
cmp
clc
dec
cld
and
mov
mov
test
dec
bound
std
sub
pop
or
movsl
lcall
dec
loop
xchg
lds
iret
bound
insb
fsub
in
mov
mov
sbb
xor
jp
fimuls
setg
jp
or
adc
test
fildl
xchg
sti
test
lods
rcrl
hlt
mov
gs
or
xor
cmpsb
clc
imul
and
pop
lea
sub
cmc
movsl
pusha
out
popf
xlat
dec
testb
mov
jne
sub
push
mov
inc
fcoms
pop
lea
ficomps
call
xor
pop
mov
jo
std
pop
scas
cmp
aaa
push
icebp
jle
dec
imul
lods
pop
push
fmull
leave
push
mov
test
negb
jo
cmp
cmc
and
mull
sbb
cmpsl
mov
sbb
mov
mov
scas
loope
or
xchg
mov
push
adc
adc
cmp
stos
jb
adc
sub
rorl
jo
aaa
fs
lret
sbb
xchg
je
rcrl
lahf
aas
dec
cwtl
mov
mov
leave
fldl
cmp
aaa
push
mov
cld
into
ret
and
dec
notl
std
std
mov
scas
cmp
mov
push
loopne
mov
adc
repz
mov
dec
les
mulb
sbb
cmp
in
and
adc
inc
lcall
mov
add
stos
jnp
shrl
lcall
jb
rcrl
jae
mov
dec
in
inc
sbb
jge
ds
sub
daa
ds
into
adc
ljmp
lcall
pusha
push
or
xchg
pop
pop
push
push
ficoms
xor
or
jecxz
mov
push
dec
xchg
arpl
push
dec
lret
stos
dec
pop
mov
inc
push
adc
int3
cld
out
add
fwait
xlat
lcall
fwait
cmpsb
cs
cli
and
call
les
test
ret
icebp
aad
cmpsl
or
cmp
pop
dec
cs
bound
test
ja
xlat
gs
adc
mov
dec
jle
popf
mov
sbb
lods
lds
mov
xchg
shll
cmp
sub
inc
fisubs
pop
cmc
es
div
aas
sub
jl
test
cmp
aad
cmp
je
int3
lock
out
jbe
nop
lahf
add
bnd
sub
insb
in
push
pusha
aam
daa
add
push
mov
pop
cs
mov
pop
mov
push
mov
push
popf
lods
inc
push
mov
sarb
in
jp
lods
sbb
xchg
andl
inc
dec
enter
xor
call
jbe
inc
dec
and
mov
mov
add
aas
clc
mov
repnz
lret
pop
jnp
mov
test
add
inc
push
cs
mov
mov
int
in
stc
add
dec
sbb
xchg
repz
lock
fildl
mov
push
mov
xor
rorb
pop
scas
ds
mov
insl
pushf
repz
stos
aas
inc
sbb
sbb
rcl
imul
aaa
or
xor
pop
cmp
scas
cmpsl
fsubl
je
jns
loop
jle
cltd
mov
out
xor
xor
or
mov
int
scas
insb
mov
dec
clc
mov
in
daa
sub
movsl
mov
in
lods
xlat
shl
xor
sbb
mov
fisttpl
fst
adc
pop
adc
les
cmp
loop
push
in
and
adc
xchg
fimuls
orl
mov
sbb
sbb
mov
push
mov
sarb
dec
mov
cli
inc
lret
aaa
cmp
mov
sub
nop
xlat
mov
fnstenv
push
stc
movsl
imulb
stos
insb
mov
in
pop
std
cmpsl
inc
sub
pop
jl
into
out
insl
jle
adc
push
lods
xchg
incb
test
or
push
or
and
mov
out
mov
pusha
mov
outsl
cmp
lcall
rcl
sti
xor
sbb
mov
sub
xchg
cld
dec
or
ret
orb
xchg
or
leave
sub
mov
sub
in
ret
popf
cmc
cmp
cmp
and
imul
loop
aad
jecxz
xlat
outsb
decl
xor
mov
and
in
jmp
std
push
orb
aas
lea
pop
outsl
add
mov
jg
scas
and
test
push
out
or
dec
movsl
mov
xchg
jb
dec
mov
sti
pop
jle
addr16
in
push
hlt
cmp
add
fimull
sub
xchg
stc
fsubl
jecxz
push
lahf
das
push
dec
pop
pop
int3
fwait
fwait
mov
sbb
not
lods
int3
sbb
cltd
dec
mov
xchg
mov
movsb
xchg
loop
push
cmp
dec
mov
xchg
dec
jp
xchg
adc
push
sbb
xor
test
jae
cmc
adc
std
cltd
fstpl
je
scas
add
shrb
mov
shlb
pop
clc
mov
call
pop
xor
or
test
jmp
fs
xchg
push
iret
out
inc
imul
inc
out
push
mov
loop
jae
outsb
adc
inc
pop
jmp
or
mov
stos
js
adc
jmp
arpl
sti
cld
push
xchg
mov
cmp
mov
leave
out
jo
jb
xchg
cmp
sbb
std
fdivs
push
jo
inc
es
shlb
sub
mov
stos
nop
mov
out
adc
cmp
sub
mov
pop
aam
jle
dec
movsl
rorl
jns
insb
jp
inc
and
ds
mov
add
movsl
int3
bound
fwait
adc
and
stc
sbb
push
and
push
cmp
mov
dec
lods
mov
cld
xchg
outsb
daa
mov
mov
mov
or
ret
mov
addl
dec
pusha
daa
adc
mov
outsl
mov
leave
or
push
inc
inc
cmp
dec
lcall
pop
sub
stos
and
lahf
jns
pop
inc
ficomps
inc
outsb
movsl
lods
stos
in
xchg
bound
enter
int
repz
cwtl
mov
sbb
sub
or
pop
je
or
cli
sbb
lea
pop
xchg
roll
int
xor
add
out
lret
int
ret
dec
into
mov
jae
or
lret
push
or
adc
inc
rcll
pushf
xor
sub
mov
jge
andb
in
popa
jne
mov
call
push
xchg
inc
pop
sub
and
jmp
push
les
jmp
fmuls
out
call
sahf
jno
mov
cmp
sbb
push
ret
cs
push
cmpsb
movsb
mov
jb
sbb
mov
xchg
dec
dec
mov
nop
mov
fildll
ss
loop
mov
jl
adc
mov
xchg
ja
pop
dec
call
inc
jnp
lcall
stc
inc
fnstcw
je
movsl
mov
xchg
std
jnp
add
test
cmp
jns
call
lahf
ja
loope
xchg
mov
jo
pop
lret
cmpsb
push
jecxz
pusha
insl
push
test
cmp
cmpsl
lods
stos
fwait
xor
dec
mov
sub
cli
fbld
insb
lods
sbb
rcll
add
mov
inc
jmp
stc
call
jmp
mov
ficomps
push
jle
push
push
dec
pop
push
xchg
and
mov
mov
jmp
inc
mov
test
lock
jp
lods
xor
push
add
push
pop
add
loope
mov
dec
sahf
imul
cmc
lea
pop
dec
xchg
iret
mov
or
sbb
cld
shrb
pop
add
scas
xlat
imul
xchg
not
xchg
add
in
add
xchg
mov
or
inc
cs
shlb
cmp
popa
or
push
xchg
stc
sahf
sbb
push
cmc
push
jle
cld
roll
movsl
aad
mov
fcomps
scas
popa
sbb
jns
ret
sbb
out
dec
in
adc
pop
test
and
push
adc
xchg
mov
mov
outsb
pop
ljmp
lock
leave
out
inc
bound
or
inc
gs
sahf
xchg
add
hlt
mov
mov
lret
popl
or
cwtl
stos
scas
js
repz
lcall
fadd
sub
jbe
jge
mov
loope
fwait
sbbb
insb
pop
sub
stos
mov
loope
icebp
fwait
sarl
mov
add
pop
adc
pop
mov
loope
mov
movsl
sbb
mov
std
adc
movsl
push
lahf
mov
nop
cmp
clc
adc
subb
or
mov
nopl
sbb
sbb
and
cmp
mov
scas
sub
faddl
ss
stos
push
fidivs
inc
cmp
mov
lods
lret
loope
xchg
push
stc
add
sub
xchg
jno
in
movsb
or
xor
loop
adc
out
sbb
shlb
mov
adc
leave
nop
pop
inc
dec
lahf
hlt
push
imul
inc
mov
clc
jge
cmp
call
fiadds
adc
mov
es
inc
outsb
clc
incl
sbb
mov
xor
add
jge
push
clc
adc
sbb
enter
aad
out
addr16
push
addl
adc
js
loop
lcall
fmuls
out
in
enter
lods
ja
xchg
pop
nop
mov
aas
adc
cmpsl
or
in
cmpsb
test
sbb
xchg
xor
adc
mov
cmp
mov
shrl
imul
sub
test
lea
cs
das
jo
lock
mov
adc
movsb
pop
insl
aam
mov
xlat
add
mov
pushf
loope
cmpsb
pop
mov
hlt
mull
sub
addr16
fsubrl
jmp
orb
push
xor
lods
sbb
mov
hlt
mov
mov
mov
xlat
insl
cmp
add
in
push
adc
std
mov
mov
add
outsb
sub
mov
xor
mov
xchg
clc
movsl
fisubrl
mov
enter
push
in
das
sub
inc
leave
cmp
faddl
ret
xor
mov
push
or
adc
cmpsb
arpl
jno
loop
je
or
aaa
clc
insb
in
mov
adc
int3
adcb
and
push
dec
pop
lds
imull
hlt
push
loopne
es
repz
insb
flds
negb
imul
xchg
lods
push
repnz
dec
jecxz
xlat
mov
leave
pop
xchg
or
jns
insl
sbbb
sahf
aam
and
dec
shlb
mov
fwait
scas
push
cmovbe
out
scas
mov
mov
aaa
lahf
dec
pop
fmul
xchg
jbe
ljmp
xchg
mov
mov
das
jmp
gs
push
jno
sub
add
inc
adc
and
jecxz
jno
loop
out
xor
adc
sti
cmp
sbb
jae
stos
push
jbe
and
add
mov
ss
sub
into
es
add
jle
cld
mov
subb
test
sub
jno
mov
out
sub
sbb
mov
nop
and
pop
dec
adc
call
loop
sbb
cmc
ljmp
inc
xor
popa
add
in
xor
fists
jo
jp
mov
sti
lock
sbb
ja
mov
popf
cli
aam
inc
clc
cmp
xor
jmp
gs
hlt
sub
fcomps
out
in
fdivrl
daa
and
in
in
ds
cmc
das
fucomi
sub
jge
push
or
cmp
nop
test
push
test
add
dec
push
and
mov
add
inc
jge
inc
mov
gs
mov
inc
test
loope
popf
mov
sub
notb
out
leave
sbb
inc
pop
or
mov
pushf
sbb
out
cmp
push
insl
icebp
jge
out
push
cmp
andb
inc
xchg
jno
into
sbb
fwait
loop
cmp
call
pop
mov
jnp
xlat
push
mov
jge
xor
mov
xor
in
and
in
das
aas
or
in
mov
pop
stos
jo
push
mov
cltd
mov
sbb
jp
sbb
inc
inc
icebp
push
lods
sti
cmp
fwait
sbb
push
fsubrl
fistpl
mov
adc
sub
push
adc
in
shlb
and
addr16
mov
pusha
push
push
cmpsl
ds
adc
sbb
div
das
fists
scas
sti
cmp
stos
aam
mov
je
or
data16
jns
pop
sbb
adcl
pop
and
in
or
shrb
jno
popf
xchg
push
mov
lods
pop
dec
aam
add
sbb
jle
test
std
sbb
lea
cwtl
std
push
sub
mov
pusha
dec
out
pop
xchg
mov
dec
jo
sbb
push
ljmp
mov
shlb
mov
sbb
pop
scas
popa
cli
add
xchg
adc
rclb
pop
inc
mov
jbe
add
cmp
hlt
xchg
cwtl
sub
ja
jle
add
insl
arpl
lea
push
or
outsb
mov
addr16
jmp
in
rclb
add
out
pop
and
jecxz
ljmp
imul
mov
lock
or
sub
int3
in
pop
dec
xlat
lea
or
in
cmpsb
inc
inc
cwtl
adc
and
ds
aas
idiv
sub
add
sub
adc
out
shlb
xor
xchg
mov
adc
popa
dec
lret
daa
rorb
fists
cltd
dec
push
out
mov
lret
pop
outsl
addr16
add
mov
scas
mov
or
out
jg
push
lret
into
cmpsb
mul
mov
mov
adc
gs
bound
loope
addr16
lcall
push
inc
xlat
in
bound
stos
push
cmpsl
and
sub
enter
push
push
in
outsl
pop
or
gs
sahf
stos
data16
gs
xor
cmp
stc
sub
add
je
adc
shr
adc
ror
and
mov
enter
andl
popa
pop
insl
mov
out
xor
ds
aad
cmp
vpaddusw
xor
xor
xor
pop
jle
sbb
inc
sbb
stos
xchg
ret
test
xor
sub
cmp
pushf
jp
cmp
push
cmp
sub
inc
pop
sahf
testl
push
rcpps
cmc
inc
or
in
lea
sub
fstps
jp
mov
xlat
lock
xor
mov
mov
xlat
repnz
cmpsl
xlat
aam
mov
mov
shll
jbe
and
sti
daa
or
xchg
ret
xchg
les
lahf
pop
adc
sub
sub
add
into
xor
push
pop
fildll
mov
push
add
push
or
dec
mov
xchg
sbb
adc
insl
xor
xchg
cmp
add
ret
mov
pop
stos
jnp
dec
or
jp
in
inc
add
dec
xchg
mov
push
push
in
clc
xor
lret
fs
enter
mov
xorl
mov
aad
jmp
jnp
push
xor
mov
fnstsw
ficoms
mov
cmc
lret
lret
or
mov
cmc
ja
inc
xor
mov
jmp
mov
adc
xchg
mov
outsl
mov
dec
pop
popa
add
push
mov
data16
jae
stos
sbb
xor
mov
xor
adc
out
push
cmpb
add
cwtl
pop
pop
xor
popf
cmp
repz
sub
dec
mov
sti
sbb
jo
jnp
add
sbb
inc
les
sbb
or
sbb
fldt
aad
fisubs
test
bound
cld
cwtl
push
push
out
pop
into
lcall
movsl
dec
test
lret
sti
std
ja
sub
pop
push
das
fwait
mov
dec
iret
dec
out
fwait
add
mov
push
push
mov
mov
lds
sbb
ljmp
stos
fcoms
pop
js
mov
jo
sub
loope
jbe
jmp
mov
push
test
and
lret
ja
sub
pop
ret
int3
in
dec
or
fsubrl
stos
xor
add
outsl
dec
hlt
fdivrs
aad
pop
pushf
mov
push
pop
adc
test
lret
jge
jle
and
mov
mov
scas
adc
cmp
mov
stos
mov
popf
rolb
pushf
movsl
jmp
xor
add
pop
test
xchg
sub
call
xchg
js
jmp
push
pop
jl
jg
pusha
fisttps
aaa
lock
jmp
xchg
mov
dec
mov
outsl
icebp
cmp
subb
fadds
cmp
das
mov
arpl
sub
or
sbb
mov
inc
push
stos
jmp
sub
cli
mov
sbb
scas
popf
out
dec
jns
xor
add
pop
cltd
xor
shrb
jl
jmp
fwait
cmc
jno
sbb
sbb
sbb
pop
mov
sbb
jl
out
insb
inc
sbb
jo
push
xchg
add
inc
or
pop
mov
mov
rcr
fs
outsb
mov
orl
dec
sbb
mov
inc
cli
loopne
cmc
loopne
aas
jns
xchg
and
sbb
add
mov
jmp
int3
leave
aam
loopne
and
data16
scas
add
popa
sub
mov
xor
xor
mov
add
mov
call
dec
fdivrs
xor
pop
test
pop
or
mov
cmp
out
das
les
sarl
cli
add
sbbl
mov
adc
inc
jnp
pop
gs
push
shrb
scas
mov
pop
pusha
mov
xor
push
sbb
cld
mov
test
and
cmc
sahf
jecxz
outsl
repz
jge
jbe
adc
mov
popfw
les
in
outsb
call
or
sub
fcompl
loop
insl
adc
fmulp
mov
push
xlat
or
imulb
cli
test
cli
in
mov
push
imul
pop
lods
adc
xchg
je
push
imul
and
jae
scas
pop
ss
mov
nop
add
shll
hlt
fisttpll
dec
jne
mov
cmp
repnz
xor
adcl
cmp
arpl
pop
dec
bound
cmp
push
pop
xchg
test
sub
add
nop
rol
shrl
mov
add
jmp
xor
aam
int
imul
cmc
push
xchg
mov
lcall
dec
pusha
shrl
jge
inc
sub
repnz
fldt
mov
dec
jae
mov
jge
mov
mov
mov
xchg
jae
shll
jmp
mov
and
leave
mov
dec
pop
and
mov
js
rclb
iret
int
dec
insb
mov
push
loopne
cltd
mov
push
mov
jge
pop
loope
ret
fmuls
fsubrs
sbb
aas
loope
js
sbb
mov
xchg
mov
daa
sub
mov
mov
loopne
mov
cld
shll
adc
or
mov
js
cmp
leave
add
cmp
mov
fldt
mov
lahf
lock
jae
in
je
lds
cmp
mov
inc
daa
or
inc
setae
sbb
cmc
ror
stos
sub
fcomip
adc
or
shrb
int3
push
pop
lods
movsl
aaa
inc
mov
dec
ret
mov
les
lcall
mov
into
xchg
test
leave
fdivs
mov
dec
scas
test
lret
sbb
incb
add
and
ja
rol
mov
aad
sub
adc
scas
icebp
iret
xchg
icebp
cmc
cmp
test
adc
push
lea
ret
mov
sub
dec
or
pop
push
adc
pop
or
shll
lret
push
jmp
repnz
out
cmc
or
int3
stc
xor
mov
int
subb
push
mov
dec
pop
pop
fwait
push
ret
and
add
cld
inc
aaa
mov
lcall
mov
sub
mov
fisubrs
mov
and
push
push
pushf
jmp
mov
and
daa
jno
fs
int3
jno
jbe
pop
mov
add
dec
test
lock
cli
mov
push
es
pusha
xor
jl
outsl
xchg
push
xlat
or
fadd
xchg
ja
jns
pop
adc
in
aas
out
xchg
addb
sbb
pushf
dec
mov
fcmovnb
insb
cld
loope
test
movsb
rcrl
mov
in
inc
cmp
out
inc
loopne
movsb
xchg
pop
xchg
xor
loope
dec
cmpsb
push
adc
sbb
cmp
xchg
xchg
test
sub
jb
dec
push
add
pop
into
and
dec
jne
adc
add
jmp
and
pop
sbb
pop
mov
int
ret
imul
addr16
push
xor
outsb
xchg
cmpl
leave
das
in
jno
or
dec
lret
in
mov
lods
or
imul
jmp
mov
adc
cmc
push
repz
mov
lea
es
cmp
movsl
xchg
call
and
sarb
insb
and
jne
hlt
push
shll
data16
lret
or
push
repz
adc
fmull
jle
push
popa
jmp
ja
fists
xor
stc
imul
sub
insb
add
fmuls
addl
mov
shr
fdivl
out
jle
mov
setno
dec
add
shlb
jecxz
cmpsl
loopne
sub
mov
ja
mov
into
aas
in
jb
in
push
pop
iret
lret
and
jns
xor
aaa
loope
push
sarl
jl
jno
mov
or
jne
push
pop
cli
repnz
sbb
lods
cmpsl
sbb
movsb
ss
int3
bound
fmull
std
cmp
or
mov
fs
js
inc
loop
scas
mov
movsb
push
lcall
xchg
scas
aad
jb
push
adc
int3
push
stos
cmp
rol
mov
push
xchg
xor
cmp
xchg
fcom
imull
push
push
or
inc
mov
push
in
and
xor
insl
adc
adc
incb
jb
mov
push
and
sub
jns
dec
data16
jbe
dec
jnp
cmp
cwtl
and
push
les
jecxz
sub
jle
and
pop
push
mov
dec
sar
clc
fisttps
data16
andl
in
pop
jo
cmp
jae
mov
lods
lret
xchg
inc
push
push
test
sti
push
clc
pmaxub
pop
mov
mov
cmp
mov
stos
inc
and
lods
jle
cs
sbb
sbb
or
jg
push
das
jns
cmp
imul
mov
sahf
imul
xor
mov
pusha
ja
int3
dec
cli
sub
jmp
outsl
in
lret
or
into
mov
xor
cmc
ja
pop
xor
lds
sbb
mov
aad
out
and
imulb
push
addr16
cwtl
imul
mov
dec
jl
push
pop
call
ficoms
int3
mov
loopne
xchg
and
push
cmpsl
sbbl
xor
and
xor
ja
mov
push
mov
xchg
cmp
xchg
lcall
sbb
bound
inc
mov
xlat
mov
sbb
push
std
sbb
dec
add
out
or
push
lea
les
adc
pop
dec
lods
repz
aad
inc
bound
xor
jae
fcmovnb
push
out
fldenv
pop
out
fcmove
rorl
rorb
cmp
adcb
sub
cmp
loope
cli
inc
fistpll
and
mov
xchg
mov
fisubrs
cmp
adc
fnstsw
shr
adc
mov
lahf
rorl
stos
push
push
xor
xchg
and
pop
xchg
aam
dec
lret
push
mov
push
add
lret
sub
movsl
dec
iret
and
add
xchg
cmpsb
xchg
mov
sub
cmp
fwait
add
sbb
add
sub
push
mov
call
insb
les
jns
mov
jb
decl
fdiv
sub
mov
and
mov
or
std
dec
xorl
dec
add
adc
jo
pushf
dec
push
jle
sub
idiv
fdivs
and
imul
pop
inc
push
icebp
lds
repz
lds
std
mov
sub
mov
adc
aad
sub
fstpt
mov
pop
xor
out
fsubrs
jne
mov
pop
dec
pop
xor
or
scas
and
sbb
mov
mov
pand
scas
jl
aam
add
xlat
dec
sti
jmp
jle
out
shlb
push
out
and
ret
mov
cwtl
mov
in
sub
pop
and
imul
popa
cmpsb
adc
mov
adc
shlb
sbb
push
js
xor
mov
out
sub
mov
mov
pushw
inc
fadd
leave
push
cmpl
test
sub
mov
mov
mov
out
sar
jb
mov
sahf
push
or
xchg
jb
jne
inc
xor
test
pop
jp
mov
rol
inc
in
push
cmp
cmc
and
mov
aaa
inc
into
pop
and
mov
sub
inc
cwtl
xor
xchg
andb
fadds
or
cmp
sub
jne
daa
les
aas
cmp
dec
cmpsl
outsb
or
mov
es
dec
sub
or
data16
xor
scas
push
inc
pop
popf
sti
cli
jp
mov
sub
test
clc
dec
repz
out
hlt
inc
xchg
andl
sub
push
xor
sbb
sbb
in
stos
adc
lret
pop
loop
clc
aaa
inc
push
insb
adc
mov
rcrl
movsl
jo
hlt
inc
out
insb
mov
or
mov
in
scas
aam
jno
mov
ret
pop
into
adc
stc
push
stos
pop
dec
es
das
imul
popf
orb
mov
fldl2e
jb
mov
sbb
fsubrs
shlb
inc
or
pop
ljmp
adc
imul
mov
inc
cltd
movsb
call
pop
and
cmc
mov
xchg
icebp
or
das
sbb
dec
sub
aad
addb
pop
loopew
mov
push
push
call
outsl
out
sbb
pop
fs
and
pop
xbegin
sbbl
in
add
dec
aad
int3
je
leave
lods
xchg
mov
adc
repnz
mov
push
or
cli
stos
jge
in
mov
adc
dec
pop
test
daa
push
out
mov
clc
aad
cmpsl
lret
shll
xchg
aad
xchg
pop
sub
add
jge
xchg
jo
lret
and
jnp
in
mov
xor
xchg
adc
adc
mov
adc
into
mov
cld
gs
into
ljmp
rcrl
int
repnz
mov
xchg
jnp
xchg
scas
outsb
push
push
xor
in
mov
jno
adc
or
lahf
aas
mov
stos
int
les
xchg
or
mov
repnz
dec
dec
add
mov
mov
jo
lods
lods
push
dec
inc
push
xchg
pusha
or
aad
ljmp
inc
out
enter
lahf
sub
inc
xchg
add
outsl
pop
inc
in
in
sub
push
loop
fdivrs
pop
xchg
jnp
xchg
addr16
enter
aam
inc
stc
adc
push
fdivrs
mov
leave
movsl
rclb
mov
aaa
mov
sub
aas
iret
in
push
shll
push
push
inc
lods
imul
pushf
insl
outsl
mov
dec
insb
int3
jb
daa
iret
dec
stos
nop
mov
orl
sbb
stos
nop
mov
inc
jbe
outsl
pop
clc
mov
dec
push
add
cmp
int
lods
cli
sbb
out
mov
fs
rcl
push
pop
xor
stos
sbb
push
jae
xchg
fnstsw
jb
mov
je
vpaddw
lods
sub
jg
add
call
xor
push
insb
jl
ljmp
fdivrs
pop
in
cmp
sbb
out
sub
out
in
dec
xor
popa
and
fstpt
and
add
cmp
mov
mov
cmp
subb
insl
mov
fadds
push
outsb
imul
imul
test
out
jnp
pop
pusha
fistl
add
cltd
adc
dec
out
mov
push
sub
stc
ss
dec
cmp
aaa
xor
int3
push
cmp
add
mov
int
push
retw
sbb
data16
ret
pop
xor
mov
les
lock
pop
in
sub
in
das
adc
sub
adc
inc
ds
pusha
dec
xlat
icebp
sti
jl
cmpsb
mov
jl
inc
sub
sbb
data16
xor
cmpb
in
add
test
jb
or
add
xor
pushf
hlt
stc
dec
push
and
push
push
push
notl
std
add
mov
fwait
fwait
inc
xor
test
jns
aam
or
mov
popf
scas
pop
leave
filds
push
cmp
jle
repz
adc
mov
in
jg
sar
in
adc
adc
shl
inc
jae
add
inc
sub
js
mov
pop
mov
dec
fldcw
jg
ret
sbb
cmpsl
stos
lret
jmp
lds
add
ror
inc
mov
mov
out
pmaxsw
cmp
in
dec
push
ss
jo
es
movsl
dec
data16
cmpl
shlb
out
jbe
clc
cmp
repnz
fildl
lret
lret
xor
jo
xor
pop
mov
mov
sub
scas
fdivrl
lods
mov
jae
cmpsl
lods
xor
jp
pushf
aaa
lods
mov
mov
adc
mov
or
enter
in
popf
or
sahf
sarb
or
push
lods
mov
popf
les
repz
js
mov
out
lahf
je
scas
testb
lods
dec
and
push
rolb
and
push
lock
push
pop
jge
pop
mov
push
test
xchg
loope
xlat
data16
out
pop
aam
stos
adc
mov
dec
jmpw
fadds
jle
jecxz
jo
ficoms
inc
jbe
cli
ret
push
movsb
and
cmp
xchg
push
mov
dec
push
test
int3
sahf
push
mov
xchg
out
inc
imul
mov
ds
ret
mov
xchg
mov
sub
pop
jno
rorl
out
dec
lods
clc
ljmp
ret
stos
out
push
mov
push
mov
xchg
mov
xchg
es
es
sbb
add
int3
mov
inc
out
movsl
cmp
leave
cs
or
xor
push
add
mov
dec
mov
lods
mov
xchg
andl
inc
addl
cmp
cmp
mov
pusha
das
adc
push
sub
mov
mov
lods
push
insb
sub
enter
rol
das
lcall
xchg
pop
mov
icebp
jle
mov
or
jae
popa
xchg
pop
inc
cmp
int3
adc
int
inc
shlb
lods
mov
mov
xchg
xchg
adc
movsl
test
or
mov
adcl
lahf
adc
adc
aad
pop
mov
mov
xlat
popa
jle
je
repz
and
xchg
jb
int3
pop
mov
mov
fiadds
testb
mov
or
cwtl
mov
add
inc
sub
mov
ret
arpl
loop
xor
mov
cmp
rcll
mov
sub
sar
scas
inc
xor
dec
add
inc
cltd
sysenter
out
lock
pop
add
ljmp
inc
cmpl
cmp
mov
mov
gs
cld
xchg
outsb
ret
mov
jl
adc
or
int3
inc
pop
cld
inc
lahf
push
int3
cmp
push
subb
in
add
pop
and
rorl
mov
and
push
jo
mov
outsb
jb
mov
pop
cmpsl
out
cwtl
out
pop
call
cwtl
xchg
dec
cmp
dec
rol
cmp
xchg
nop
mov
or
jae
xchg
cld
mov
arpl
or
dec
xorb
inc
ds
or
jno
ret
lret
aad
imul
test
jns
lcall
test
sub
sbb
xor
sub
js
add
dec
bound
int3
cmpb
or
sahf
bound
outsb
jae
pop
mov
lahf
mov
cli
push
cmp
lods
cmpsl
add
data16
ret
pop
pushf
inc
xchg
jl
inc
ret
jmp
cmc
sbb
enterw
jns
mov
or
add
add
outsl
jp
pop
pop
pop
enter
mov
adc
cmp
or
mov
jp
lret
push
popf
inc
xchg
fsubr
loopne
enter
and
cli
addb
push
xor
lods
xor
adc
push
mov
lock
lcall
or
sbb
add
icebp
push
or
cmp
test
cmp
mov
sti
std
and
cli
iret
adc
pshufw
scas
js
xchg
mov
test
data16
insb
movsb
sbb
rolb
push
mov
adc
cwtl
not
ret
mov
arpl
repz
xchg
pop
popf
stos
aad
int
add
xor
jecxz
and
jmp
cmp
jmp
fidivrs
xchg
xchg
jmp
imul
cs
insb
inc
mov
inc
jmp
cmp
movsl
ret
adc
aaa
out
mov
fs
mov
adc
aaa
ficoml
jle
ja
dec
js
inc
xchg
test
shl
movsb
lret
push
daa
mov
xchg
hlt
arpl
cmp
pop
sahf
pop
out
in
sub
roll
lods
les
outsl
cmp
int
shll
push
negb
cmc
test
and
sub
loope
cld
pop
jb
jmp
repnz
js
mov
push
mov
pop
cltd
cmc
sub
cmpsb
fcomps
mov
sarb
push
push
mov
mov
mov
push
insl
jl
aas
add
ds
xlat
mov
scas
pop
jae
stos
add
dec
sub
scas
dec
mov
shl
push
push
mov
push
mov
cmp
repz
xor
addr16
sbbl
xor
cmp
es
or
call
rclb
cmp
ljmp
fstpt
mov
adc
push
movsl
cmp
outsl
sbb
mov
clc
cs
ja
scas
std
sbb
dec
push
fwait
cmp
outsb
lods
mov
pop
add
hlt
push
jecxz
inc
pop
adc
xor
and
add
divl
fwait
dec
dec
ret
roll
in
or
inc
loopnew
sbb
in
fbld
xor
push
mov
filds
pop
test
or
scas
cmp
adc
adc
lds
out
jecxz
xor
and
mov
addl
dec
cmp
subb
inc
repz
mov
dec
ljmp
mov
mov
sub
mov
push
je
jmp
xchg
or
fnstsw
lea
les
inc
mov
xchg
stos
and
mov
xor
inc
sbb
inc
dec
xchg
mov
loope
adc
std
xor
cmp
mov
shll
lret
rclb
pop
xchg
gs
enter
jmp
sbb
mov
push
cld
adc
mov
push
loop
in
fisubl
aaa
pushf
xchg
mov
cmp
rolb
test
sbb
dec
inc
dec
mov
ds
or
aas
loopne
add
jmp
jno
fstpl
xchg
es
std
jge
sbb
jge
cmp
out
dec
call
lock
scas
clc
scas
inc
pop
jno
cmp
dec
rcrb
in
into
bound
stc
imulb
rorl
push
aas
cmp
out
mov
or
and
inc
dec
arpl
pop
data16
clc
aam
sbb
push
sub
aad
mov
popf
outsb
fs
imul
call
fstps
movsl
imul
dec
and
pop
testb
scas
rolb
movsl
adc
sub
bound
les
pop
scas
xor
mov
xor
aas
and
sbb
push
mov
and
daa
xlat
add
adc
mov
orl
cmp
xchg
sub
mov
pop
pop
test
inc
iret
sti
aad
ror
in
cltd
adc
stos
jne
jl
mov
popa
ljmp
dec
test
sahf
add
push
push
les
mov
rcrl
aaa
test
cmp
test
xorb
jg
popf
dec
inc
lret
pop
mov
testb
pop
jns
into
lods
xor
outsb
movsb
jo
out
out
xor
hlt
mov
cwtl
push
lcall
orl
sti
leave
popf
adc
inc
or
pushf
dec
mov
adc
arpl
sub
gs
out
mov
inc
lock
and
and
insl
adc
out
arpl
pushf
jae
das
inc
jno
ljmp
cmp
and
aaa
xor
jl
lret
ljmp
xor
les
jl
sub
push
lret
push
jp
mov
xchg
imul
jns
pop
shrb
movsl
pop
out
fidivl
xchg
scas
int
cmp
popf
cmc
mov
fdivl
xchg
pop
js
mov
or
mov
daa
das
jle
pop
movsl
pop
and
cwtl
in
into
push
mov
push
aad
mov
jo
je
mov
push
mulb
sbb
push
outsl
dec
mov
jge
jl
popf
xorl
jmp
add
push
sbb
in
mov
outsb
inc
sbb
inc
sub
leave
pop
aas
out
ret
or
xchg
and
sub
sub
push
int3
jg
in
loop
sbb
or
dec
mov
add
jge
xor
in
movl
aad
das
cmp
das
mov
ljmp
dec
pop
add
cmpsl
add
mov
inc
les
rolb
out
jnp
mov
call
lods
repnz
shrb
mov
cwtl
pop
push
je
mov
test
mov
mov
cmp
shll
mov
add
cmpsl
fistpl
push
and
aad
and
aas
pushf
mov
fsts
cmp
fld
jmp
pop
out
dec
fimuls
testl
pop
fnsave
leave
add
mov
popa
and
pop
lods
ss
in
cmp
ja
lods
ss
imul
mov
push
aam
js
sub
mov
xor
mov
ss
adc
and
js
fistpl
fwait
dec
sub
sbb
push
mov
lcall
cwtl
pop
mov
push
repz
and
cld
or
sbb
shll
dec
mov
inc
lsl
mov
hlt
jae
stos
mov
fidivrs
sbb
push
testb
shrl
in
clc
std
push
add
cld
lret
ffreep
dec
inc
sti
imulb
mov
mov
push
pop
jge
inc
int3
add
pusha
out
ja
cmp
sub
mov
mov
pop
stc
rolb
mov
pop
cmp
cs
xchg
mov
inc
xchg
pop
sub
push
xor
jl
arpl
pop
cli
scas
das
adc
notb
pusha
inc
lret
bound
loopne
lds
xor
popf
clc
jmp
push
inc
pop
xchg
xchg
cld
jp
les
shlb
jecxz
cmc
in
in
ds
outsl
loop
adc
sub
stc
push
mov
xchg
inc
aam
cmpsl
cmpsl
imul
mov
mov
in
sbb
inc
out
xlat
fisubrs
jnp
fsubrs
jbe
cli
cmp
xchg
insl
ljmp
insl
mov
outsl
sbb
adc
cmc
cmp
addr16
bound
rdmsr
lret
mov
jg
adc
outsl
push
cmp
or
daa
rcr
in
mov
adc
lcall
sbb
or
sub
es
hlt
ret
push
add
adc
into
imul
sub
pop
mov
mov
aam
mov
xchg
sbb
into
mulb
sti
jecxz
xchg
and
or
mov
out
add
add
clc
lsl
movsl
sbb
adc
pop
lcall
adc
es
jae
stc
jno
pop
cwtl
data16
cmp
mov
frstor
fstps
jne
aam
lahf
mov
cmp
ficompl
ja
adc
test
mov
iret
jp
daa
in
and
ffree
ja
test
roll
js
push
adc
dec
insl
sti
sub
cltd
pop
adc
push
inc
in
sti
ud1
cld
mov
and
sbb
inc
push
jns
inc
sahf
clc
cmpsl
sbb
stos
jp
mov
sub
sarb
mov
enter
push
fdivl
push
mov
sahf
inc
ds
daa
sub
cmp
mov
lods
leave
lahf
sbb
lcall
pop
icebp
lea
pop
aam
gs
xchg
jno
pop
mov
cmp
test
and
cmp
push
ds
xor
int
loopne
icebp
adc
dec
rorl
xchg
xchg
loopne
push
jae
push
sbb
lock
rsm
sbbl
mov
addb
push
xchg
movsb
pop
fwait
negl
aam
js
sbb
pop
xchg
ret
adc
pop
pop
aad
ret
inc
pop
loopne
inc
pop
jmp
les
ds
inc
push
stc
mov
jp
pop
imul
test
mov
je
hlt
jecxz
add
dec
lea
mov
mov
xchg
lock
xchg
push
movsbl
stc
sub
cmpsb
jnp
in
and
push
lock
rolb
ret
cmpsb
aas
push
xchg
pop
das
insl
rcrb
imul
xor
mov
out
xor
scas
sub
add
mov
hlt
cmp
lret
adc
popf
aas
sub
push
xchg
jb
sub
hlt
aaa
mov
lds
jmp
xchg
cmp
lods
je
repz
inc
xchg
push
dec
mov
xchg
pushw
inc
or
sub
pop
subb
pop
push
es
int
mov
and
sti
sbbb
jl
mov
lcall
push
lds
and
vmovlps
mov
mov
lods
xlat
jp
add
mov
and
xchg
and
mov
leave
pushl
ss
imul
sub
cwtl
dec
push
leave
fnsave
push
fildl
dec
leave
mov
lret
jne
decl
push
ljmp
call
or
xor
lcall
mov
arpl
in
cmpsb
out
lcall
imul
movsl
push
sub
fstpl
mov
movsb
icebp
roll
pop
mov
out
lods
or
mov
andl
adc
fildll
push
bound
mov
push
adc
pusha
xor
inc
lret
ret
inc
mov
xchg
pop
push
stos
or
xor
mov
xor
test
test
roll
insl
add
aas
xlat
mov
mov
cmp
adc
xor
pop
sub
jl
sar
test
sub
inc
pushf
pop
mov
dec
pop
neg
es
out
dec
or
int
out
xor
xchg
mov
sub
insl
repnz
stos
and
mov
sbb
jg
popf
xchg
and
sub
aad
push
std
pop
ret
mov
xlat
adc
lock
push
clc
jg
push
mov
clc
mov
fldcw
inc
mov
xchg
lds
in
xor
cwtl
or
mov
lret
mov
cmpsl
aas
jmp
inc
sub
ja
lcall
jbe
xchg
pusha
test
fbld
movsl
bound
sbb
data16
inc
clc
or
pop
mov
pop
mov
daa
inc
xchg
notb
loopne
adc
cld
jg
sub
mov
pop
xchg
repnz
xchg
out
pop
pop
jl
and
xlat
lret
cltd
mov
jb
adc
std
jecxz
fdivl
mov
and
out
inc
cli
sub
iret
sahf
mov
xchg
cltd
mov
mov
fstps
icebp
jp
sub
cs
mov
dec
fwait
in
jnp
xchg
push
sub
test
dec
test
scas
scas
xchg
inc
push
call
dec
pusha
out
pop
adc
call
enter
or
arpl
dec
sahf
xchg
arpl
lds
insb
subl
jmp
ljmp
lcall
jge
sbb
sbb
cmp
inc
or
mov
push
shrb
push
popa
mov
pop
mov
jo
push
or
test
mov
addb
pop
test
rorl
ficoms
bound
loop
push
sub
push
or
sti
push
cs
test
dec
mov
cmp
pop
js
or
mov
jg
lds
push
mov
cwtl
dec
cltd
xor
out
inc
into
movsb
loope
je
movsb
add
or
cmpsl
jb
push
sub
scas
lods
mov
pop
or
sub
mov
cli
cltd
pushf
add
or
in
cli
pop
insl
sbb
loope
ret
arpl
cmp
dec
jecxz
loop
mov
and
lahf
mov
dec
sbb
insb
mov
pop
inc
push
pushf
int3
sbb
pop
lcall
cmpsl
insl
or
cs
push
lret
mov
out
add
pushf
sti
adcb
adc
mov
push
inc
push
arpl
jp
scas
inc
add
sbb
lods
push
mov
out
or
dec
add
stos
aas
ljmp
jl
pop
lock
cwtl
pop
xchg
leave
aas
ja
jl
add
mov
mov
cs
mov
sbb
rorb
pop
aam
sub
and
sub
mov
adc
dec
mov
out
insl
dec
jne
inc
les
popf
jmp
adc
jno
xchg
rcrb
arpl
movb
mov
pop
lods
pop
mov
push
dec
rol
jae
repnz
xchg
push
popw
mov
inc
cli
mov
xchg
sahf
lahf
leave
rolb
jmp
inc
cltd
inc
cli
loopne
mov
push
insl
fisubs
xor
scas
stos
lods
lahf
or
movsl
inc
fisubrl
aam
push
lea
and
je
lods
push
imulb
jo
test
les
sahf
sbb
cmpb
rorl
or
subl
bound
js
int
inc
cmp
push
sbb
shrb
fs
lea
xchg
popa
roll
inc
inc
dec
cld
mov
fsts
dec
mov
push
pop
ja
and
fwait
test
dec
pusha
xchg
into
or
jne
jne
add
mov
push
imul
push
or
movsb
mov
fcoml
imul
dec
adc
cmp
in
xlat
sti
pop
dec
fmull
ret
inc
and
jmp
xchg
sub
mov
loop
pusha
mov
nop
loope
stc
sbb
mov
dec
dec
push
pusha
sahf
jp
add
ret
mov
mov
pop
repnz
adc
mov
pop
es
pushf
loope
inc
push
jg
ret
fnstcw
xor
push
rcl
cmp
sbb
ret
cmp
lock
jo
inc
jmp
fdiv
nop
scas
jp
in
sbb
push
xor
jnp
push
shll
jbe
push
dec
cmpsb
sub
imul
std
xchg
fmul
and
xor
outsl
in
mov
xchg
lret
xchg
adc
xchg
icebp
outsb
mov
repz
jns
sbb
jmp
mov
dec
pusha
mov
push
push
rol
adc
ret
repz
les
xor
dec
int3
rclb
xor
aad
cmpsl
fistps
push
cmp
pushl
pushf
cmp
js
sbb
insb
cmpb
clc
lods
xchg
pusha
dec
dec
jb
lock
icebp
inc
popf
aas
repz
rcrb
mov
popa
jl
stc
xor
movb
fistl
shl
adc
jbe
sub
popf
push
es
fmul
inc
into
pop
gs
imul
in
mov
dec
push
xorl
push
xchg
cwtl
repnz
and
mov
imul
dec
icebp
iret
and
fdivl
push
lds
scas
subb
lcall
jns
shr
or
aad
push
mov
jns
mov
stos
in
addb
int3
and
xchg
push
mov
bound
loopne
lahf
or
push
jmp
orl
test
lock
bound
loope
rorb
int3
jnp
daa
cli
cmpb
ss
inc
cli
add
and
adc
fidivrs
divl
ljmp
push
lods
xor
loopne
dec
mov
add
call
aad
cmp
or
inc
out
insl
aas
pop
xchg
leave
fsubrl
sbb
ds
fdivrs
scas
and
stc
push
jle
sahf
mov
lock
push
fists
ret
loopne
aam
inc
not
jo
inc
mov
icebp
cltd
cmp
mov
leave
xchg
int3
adc
cs
lock
pop
mov
cmc
xlat
and
push
sahf
mov
daa
int3
push
mov
fcoml
pop
int
bound
cmp
imul
sub
incl
ret
xor
add
in
imul
out
fists
popa
pop
movsl
xor
and
fsubs
adc
mov
pushf
xchg
in
lret
call
scas
popa
pusha
dec
pop
adc
dec
mov
pop
push
mov
shll
sbb
rcrb
pushl
sbb
fs
pusha
push
sub
mov
arpl
xor
jl
icebp
jg
cmc
notl
cmp
jne
and
cmp
fcoml
lcall
mov
push
inc
sub
ja
dec
aam
fdivrl
push
or
push
pop
nop
repnz
pop
out
pop
xor
js
mov
lds
mov
mov
add
int3
dec
push
xchg
push
push
ror
xchg
stos
cmp
push
xchg
and
into
jnp
rclb
jp
or
push
xor
mov
mov
inc
cmc
push
mov
bound
cli
dec
and
jae
sub
add
repz
mov
push
insl
adc
repnz
out
jns
in
sbb
sub
xor
mov
out
popf
pop
xor
insl
pop
sbb
mov
popf
addr16
rolb
xor
ljmp
push
sbb
add
xchg
insb
mov
movsl
add
push
lods
pop
testl
nop
adc
pop
insb
dec
outsb
push
pop
pop
cld
mov
scas
xor
sahf
test
pop
inc
lods
jne
int3
cmp
enter
and
push
loop
or
lods
push
push
inc
add
cmpsl
fildl
or
push
push
inc
insl
les
push
ss
shlb
addr16
out
cmp
sub
mov
pop
push
inc
sub
pop
lds
pop
mov
decl
dec
xchg
sub
loope
in
test
adc
sbb
pop
popa
cmc
adc
mov
loop
mov
add
test
mov
mov
nop
lods
add
call
xchg
stos
inc
sub
into
jmp
add
rcrb
pop
jo
idivb
cmp
sbb
shll
insl
fwait
push
or
fwait
push
sbb
popa
mov
test
mov
fucom
lret
mov
lods
xor
cmp
js
imul
sub
test
rolb
lret
mov
std
or
out
lahf
adc
xor
hlt
jp
int3
and
cmp
mov
cmp
push
or
ds
cmp
mov
mov
jmp
shll
lock
xor
and
rcrb
mov
cmp
in
xor
loope
cmp
and
int3
fs
adc
andb
scas
and
lret
addr16
shlb
fsubrs
lods
ret
out
mov
xchg
dec
cmp
sub
mov
sbb
and
shl
xchg
xchg
cmc
sub
pop
mov
std
lcall
jae
enter
add
push
mov
add
sub
fcmovnbe
dec
xchg
fdivrl
jb
in
sub
mov
push
mov
aaa
or
and
fcomps
enter
add
pop
test
js
lret
xor
jmp
dec
cltd
mov
push
mov
xchg
jns
lahf
in
sbb
mov
jns
mov
rcr
adc
push
adc
push
js
insl
sub
out
xchg
leave
sub
nop
popl
lret
inc
inc
cmp
int
stos
in
dec
inc
inc
inc
gs
insl
xchg
sub
mov
in
xor
jno
adc
jecxz
xchg
push
xchg
int3
lods
call
and
push
daa
xor
sub
adc
fwait
xchg
add
and
pop
push
dec
jne
adc
movsl
fwait
pop
lcall
xor
mov
repz
popa
push
jecxz
lret
mov
inc
push
pop
mov
xlat
inc
out
xor
mov
pop
pop
dec
xor
int
fisttpll
pop
cwtl
mov
push
mov
ljmp
cmpb
aas
sbb
push
mov
test
or
movsl
movsb
repz
jle
push
add
jmp
aas
testl
jecxz
or
dec
lret
std
insb
xorb
push
xor
icebp
iret
popa
clc
jns
dec
mov
les
xchg
int
pop
jg
jno
in
mov
and
xlat
or
pop
xor
adc
test
popa
hlt
and
adc
mov
mov
loopne
enter
sub
adc
sub
inc
xor
push
add
xor
pusha
lcall
or
mov
outsb
jl,pt
lea
out
mov
scas
jae
daa
xchg
cmp
mov
mov
mov
jae
cld
push
outsb
rcl
and
adc
pop
testb
push
sbb
xchg
js
bound
adc
xchg
daa
ljmp
add
shlb
outsb
adc
inc
or
xchg
cmp
insl
mov
ja
jno
stos
out
fsub
das
popf
or
and
and
fwait
int
push
jle
aaa
jecxz
fdivl
repz
lds
out
fisttpl
xchg
cmp
xchg
inc
adc
sbb
sbb
mov
lret
mov
mov
adc
or
mov
xorb
cmp
cwtl
jle
test
mov
mov
sub
loop
jmp
push
mov
movsb
nop
jno
and
ret
pop
push
ja
sub
je
int
cmc
mov
iret
out
in
arpl
loop
subb
mov
sbb
leave
popf
nop
cltd
sbb
sbb
mov
adc
cmp
jp
inc
in
popf
xchg
push
les
test
xor
orl
loopne
popf
xchg
mov
push
in
rclb
movsl
pop
sbb
iret
xchg
and
mov
outsb
mov
jg
insl
sbb
stc
sbb
fmul
dec
push
cltd
mov
add
jne
mov
pushl
ja
nop
in
iret
dec
outsl
je
xchg
add
pop
dec
push
mov
mov
mov
das
mov
jmp
sarl
fstps
sbb
mov
in
or
rcll
or
ja
inc
sub
push
mov
out
add
dec
cmp
and
sub
mov
adcb
cmpsb
add
cld
int
fsubl
les
aaa
aas
and
or
adc
mov
fmuls
mov
popl
rcrl
stc
mov
and
push
mov
lret
les
jnp
test
add
icebp
pop
push
xor
jno
mov
fld
and
mov
mov
pop
ljmp
adc
xchg
or
rcll
pop
out
jp
das
mov
ret
sub
xor
addr16
adc
push
add
aaa
sti
sbb
fst
loopne
cmp
int3
sbb
sbb
sarl
mov
add
mov
ja
and
cltd
pop
out
je
mov
inc
push
push
dec
dec
in
dec
push
lret
fstpt
pop
out
out
leave
ficompl
sub
imul
xchg
mov
add
in
in
dec
aad
mov
and
sbb
out
mov
in
adc
jnp
sarl
int3
pop
jp
sub
out
jp
jne
sbb
dec
inc
in
dec
int
adc
cmp
push
lcall
inc
xor
sub
mov
jge
xchg
cmpsb
std
or
cld
push
lds
jb
sub
mov
inc
fistps
push
push
pop
ficomps
cli
ljmp
sbbl
sbb
jmp
inc
push
popf
cmpsb
subb
xchg
outsl
add
xchg
ss
dec
rclb
mov
pop
nop
nop
lahf
inc
sub
leave
fcompl
fs
outsb
popa
stos
ljmp
data16
push
adc
lret
dec
push
das
inc
sbb
ds
dec
inc
inc
in
ret
push
mov
adc
add
pop
xchg
jge
sbb
subb
mov
xchg
add
mov
xchg
in
inc
push
scas
inc
into
mov
inc
cmp
pop
jle
jo
imul
lods
xchg
iret
jne
push
mov
cs
and
xchg
ds
sti
enter
push
inc
mov
mov
test
arpl
shlb
inc
xchg
sbb
push
jl
test
out
outsb
mov
mov
ret
jmp
outsl
fs
or
inc
mov
gs
faddl
test
loop
lret
cmp
mov
lret
sarl
js
xchg
cmp
adc
mov
jae
cmp
in
fistps
insl
mov
mov
insb
and
push
popl
add
ror
outsl
jp
xchg
and
push
inc
fcmovbe
cltd
gs
fisttps
outsl
jge
pop
lods
sub
fists
stos
cmpl
mov
push
test
jne
add
cli
xchg
outsl
inc
sub
push
lcall
and
mov
out
or
pop
incl
cmp
pop
inc
xchg
sub
sahf
es
pop
inc
les
and
inc
dec
test
stos
xchg
mov
in
in
dec
adc
push
add
ljmp
test
dec
jnp
xchg
pop
xchg
push
cmp
popa
or
ss
push
std
or
sahf
sbb
jne
jle
or
pop
sub
mov
ficompl
mov
mov
xor
pop
dec
inc
dec
inc
jbe
and
pop
xor
js
out
jne
lgs
js
ljmp
aam
pop
or
xchg
xor
sub
lcall
in
fs
lcall
sub
jae
sub
mov
sub
lcall
movsl
and
xor
mov
loope
xchg
mov
and
or
andl
xchg
or
inc
loop
ds
sbb
lods
mov
push
sbb
jo
adc
jbe
clc
add
push
das
fwait
sbb
scas
mov
repz
andl
nop
pop
outsb
adc
cs
dec
mov
scas
mov
or
push
jne
or
flds
mov
test
cltd
out
sub
leave
aam
add
cmp
andnps
imul
test
call
cmp
rclb
jmp
iret
test
jle
mov
mov
aam
test
pop
or
cmpsl
test
xor
xchg
mov
push
ja
mov
fcompl
sub
es
sbbl
pop
sbbb
and
inc
into
xor
pop
mov
and
sub
push
and
jns
mov
mov
jg
push
aaa
mov
shl
jmp
inc
pop
daa
adc
bound
xchg
cmp
jno
jns
jg
mov
cmp
cs
mov
mov
and
popf
sbb
addl
xchg
test
int
mov
sub
movsl
xchg
ret
pushl
push
mov
push
inc
sbb
testl
into
push
xor
pop
adc
mov
aad
cli
das
sti
inc
movsb
mov
ret
nop
ja
mov
pop
sbb
iret
jb
pusha
sub
inc
testb
and
add
jne
inc
in
xchg
inc
loope
mov
enter
outsb
movsl
add
cmp
into
lea
inc
dec
pop
loopne
jbe
mov
xchg
rolb
insl
fistpll
imul
push
movsb
and
data16
sub
shrb
ja
ljmp
inc
ret
push
dec
inc
dec
lea
cs
data16
cmp
push
adc
dec
lret
daa
add
sbb
or
out
test
pop
cmc
shl
xorb
lods
xor
xchg
xchg
pop
or
inc
jno
leave
std
mov
xor
lods
cs
test
jp
mov
adc
jecxz
sbb
cmpb
push
push
pop
fsubrl
in
ds
pop
outsb
mov
add
pop
ficompl
sub
es
sbb
les
xchg
mov
inc
push
addb
in
sti
mov
push
jp
bnd
jl
mov
sub
adc
repnz
popa
pop
scas
pop
arpl
push
lcall
inc
je
pop
xchg
out
mov
push
mov
xchg
into
testb
jecxz
cmp
rorb
aaa
test
push
icebp
into
outsl
xchg
in
mov
test
outsb
imul
add
mov
and
pop
cmp
adc
xor
jmp
or
xor
mov
dec
in
int3
lods
jle
movsl
outsb
in
pop
xchg
sub
outsl
subb
cmp
movsl
lahf
mov
es
pushf
rcr
mov
sub
xchg
je
jb
dec
ret
fldenv
imul
pusha
mov
sub
outsl
ss
ljmp
cld
outsl
test
iret
push
ret
xchg
sub
fstp
mov
push
sbb
xchg
jae
push
mov
xchg
fsubrs
mov
lea
or
aam
aam
fildl
push
scas
push
lock
pop
lods
es
outsb
fwait
sti
add
dec
or
scas
push
cs
sbb
std
in
scas
xchg
adc
shl
lods
cli
scas
leave
jp
fldenv
or
int
out
cs
jl
dec
outsb
out
sbb
add
popf
xor
jo
lcall
inc
test
pop
push
pop
cmp
rclb
ljmp
push
cmp
dec
aaa
ret
cs
das
scas
xchg
jo
mov
inc
mov
push
and
jle
cmp
hlt
mov
je
call
jmp
jo
lock
gs
jno
pop
sahf
jno
gs
add
das
jecxz
arpl
or
push
jl
xchg
sbb
in
jp
dec
pop
out
stos
addl
or
xchg
scas
inc
aam
mov
adc
decb
inc
adc
mov
xchg
hlt
push
outsb
pop
add
lahf
cli
mov
test
insl
sbb
out
loopne
hlt
xor
aas
lock
mov
insl
aam
mov
xchg
testb
call
sbb
lahf
mov
pusha
test
pop
out
add
cmpsl
push
ja
push
shl
cmp
sub
loope
cmp
addb
xorb
mov
xor
sub
xor
bound
and
orb
stc
das
out
cmp
int3
imul
sub
movsb
fnsave
mov
idivb
cli
sub
pop
mov
jp
stc
jno
dec
xor
and
jns
sbb
ja
pop
call
insl
mulb
and
clc
inc
push
cwtl
sti
cmpsb
test
lock
cli
shr
scas
xchg
and
sbb
and
cmpsl
outsl
inc
shlb
sbb
ss
inc
out
pop
pop
int
push
iret
rolb
push
out
outsl
push
movsb
test
aad
arpl
mov
aas
xchg
stc
test
popf
outsb
sub
or
jnp
jne
rcl
rcll
leave
adc
mov
add
out
xchg
hlt
ffree
or
push
hlt
fadds
imul
xchg
out
xchg
mov
aas
enter
add
cmc
cli
cs
stc
push
xchg
out
aas
push
and
in
aad
xorb
xchg
or
test
int3
fsubrs
dec
inc
test
call
test
and
test
jnp
loope
mov
test
subl
iret
lods
xor
insb
dec
sub
jmp
repnz
test
jae
jle
pop
pop
cltd
call
add
jbe
dec
data16
add
fs
sub
sub
mov
inc
sbb
sbb
popf
sub
mov
inc
dec
call
test
inc
push
add
pop
divb
jno
dec
ret
adc
sbb
adc
out
cli
push
sub
jno
fidivl
mov
cmp
test
sub
jg
outsl
bound
into
cmp
sub
pop
stos
push
cmpsb
mov
push
cmp
and
and
repz
sbb
notb
subb
xor
mov
mov
and
sub
je
inc
cli
jo
aas
jmp
pop
cmp
mov
movsl
decl
mov
pop
aaa
push
jmp
in
es
mov
pop
mov
insb
mov
sub
xor
or
sti
sbb
sbb
sub
xchg
int3
push
rcl
sub
mov
xchg
and
push
fs
mov
jp
adc
les
adc
xchg
out
int
arpl
and
adc
shrl
popa
sahf
arpl
test
rcll
rcll
pop
stc
push
mov
add
shrl
aad
mov
out
int
int
xor
pushf
inc
and
push
pop
mov
fidivs
out
jle
out
dec
sub
test
push
lret
bound
mov
jp
test
sub
xor
mov
and
gs
sbbl
fsubr
repz
mov
ljmp
fnstsw
jne
adc
lahf
lods
in
adc
cmp
push
fimuls
imul
rcll
mov
xchg
jp
mov
mov
int
test
sbbl
push
inc
add
out
jecxz
sti
in
push
aas
inc
insl
addr16
bnd
loope
sarl
addr16
mov
xchg
mov
scas
setae
pushf
jbe
jno
jnp
mov
push
lods
pop
sub
push
mov
outsb
pop
mov
test
mov
into
pop
mov
jmp
lock
test
orb
mov
jae
mov
jns
dec
sbb
jg
mov
sub
mov
imul
popf
pop
cltd
outsb
xlat
lods
test
popa
push
jp
outsl
movsl
aad
mov
jb
mov
xchg
pop
mov
mov
xchg
jno
arpl
rcr
inc
pop
je
mov
incb
cmp
xchg
mov
pop
mov
insb
xchg
or
sbb
int3
push
fcoms
push
pop
or
fisubrs
inc
aam
ret
sti
mov
mov
push
cmp
fildl
cmp
and
push
pusha
mov
jmp
stos
iret
sub
push
adcl
insl
jae
js
xchg
xlat
sarl
jno
pop
stc
mov
lahf
outsl
movsl
andl
ficoms
adc
sbb
xchg
sub
lods
out
sub
jmp
pop
mov
sub
test
pop
mov
loopne
lods
dec
jae
fidivs
imul
lcall
mov
xor
out
or
xor
cmpsl
cmpsl
std
sbb
mov
or
mov
xor
enter
pop
sub
loopne
mov
xor
pop
pop
cs
mov
jns
fildll
xlat
icebp
adc
sbb
xorl
mov
mov
in
adc
sub
mov
lods
sbb
aas
xor
adc
pushf
sub
push
mov
outsl
push
xchg
in
inc
in
push
xchg
inc
xor
fstl
repz
aad
repz
inc
subl
push
lea
cmpsb
push
das
ret
xor
and
in
cmp
outsb
int
es
dec
jg
cmp
shl
dec
dec
fnstcw
mov
jecxz
jns
and
jnp
addr16
fiaddl
mov
test
cmp
inc
xchg
aam
stos
jg
lahf
idivb
icebp
mov
jle
in
sbb
fcmovnu
jno
pop
pop
and
and
jp
cmpsb
cmpsl
xchg
nop
inc
cmp
cs
jmp
ss
sti
andb
dec
jnp
sub
imul
mov
pop
push
or
in
push
adc
not
ret
incl
sbb
lret
pop
leave
test
cmpsb
mov
mov
dec
sbb
idivb
jl
xor
dec
mov
mov
and
mov
mov
sub
pop
hlt
addb
sub
sahf
and
xlat
mov
int
xchg
scas
mov
cmc
scas
adc
rcl
push
xlat
imul
arpl
mov
lods
cwtl
dec
jl
aas
and
dec
add
mov
pop
gs
int
jmp
mov
mov
sbb
pop
xor
mov
loopne
dec
push
mov
fnstcw
add
jb
xchg
push
cmpsl
fdivr
mov
fbld
scas
mov
loop
mov
and
cs
leave
xchg
push
jg
cs
adc
xor
cmpsb
jns
fisubrs
mov
pop
xchg
cmpl
sti
je
add
fdivrl
std
popf
xor
lret
or
fcoml
ret
loopne
and
arpl
push
stos
nop
fists
fsubrl
subl
shlb
out
mov
shr
aaa
xchg
inc
int
nop
lock
add
ret
ja
jge
sub
xchg
imul
dec
push
cmp
push
cmpb
aam
pushf
int
fiaddl
xchg
xor
test
das
push
push
lret
push
adc
lds
mov
repnz
fcompl
dec
hlt
loope
xchg
test
jo
test
add
mov
xor
outsb
jne
mov
sub
sub
addr16
xchg
mov
adc
sub
mov
cmpsb
cltd
fsubp
std
inc
aas
je
cmp
xor
jle
or
or
cld
cmp
sahf
out
add
repnz
mov
adc
jg
hlt
lods
mov
and
call
addl
sbb
push
std
xor
aas
sbb
test
adc
stc
mov
outsl
mov
push
cltd
insb
fistps
sub
sarl
imul
addr16
fisttpl
in
orb
out
rorb
loope
or
sub
xchg
nop
pop
cmp
inc
pusha
push
xchg
dec
mov
rol
clc
lcall
sub
and
sub
aas
stos
int3
sysenter
sub
aad
out
adc
sub
lea
mov
cmpl
dec
push
mov
outsl
aas
mov
nop
cmpsb
fwait
out
into
xor
and
push
mov
mov
pop
loopne
inc
xrelease
jae
dec
fdivrp
sub
mull
push
mov
mov
data16
test
mov
push
negl
and
fstl
mov
sub
sub
icebp
aad
dec
push
sub
jmp
sub
imul
movsb
lea
mov
loop
cmpl
stc
dec
cmpsl
das
out
mov
out
fmulp
add
sbb
in
mov
cltd
pop
loopne
enter
or
adc
insl
loope
aam
cmpsb
jp
sbb
and
add
xchg
cs
inc
adcb
bound
jns
hlt
inc
and
cwtl
cmpl
adc
clc
mov
inc
mov
test
cwtl
mov
nop
aas
mov
stos
mov
ret
movsb
mov
mov
jno
adc
les
cmc
inc
push
bound
inc
jmp
rorb
push
cmp
mov
or
dec
insb
pop
cmp
and
xchg
inc
mov
divb
incb
sbbb
adc
push
jno
ret
jmp
prefetch
mov
add
and
into
ljmp
jge
int3
pop
sub
insb
aad
imul
mov
jg
inc
jmp
rol
jns
sbb
frndint
gs
add
das
inc
sbb
pop
addr16
cmc
popl
stos
ret
fwait
push
std
mov
addr16
jb
pop
out
pop
aaa
es
mov
les
mov
mov
je
mov
inc
xchg
fbstp
fdiv
pop
ss
in
jp
adcl
vrsqrtps
xor
xor
jns
adcl
jecxz
adc
sbb
mov
cwtl
dec
sbb
imul
sub
mov
mov
mov
mov
push
sub
inc
lds
in
js
jl
mov
in
inc
pop
imulb
dec
shrl
push
data16
hlt
sbb
int3
jbe
cmp
cmc
pushf
push
sbb
lods
jae
aas
inc
sahf
mov
inc
mov
fwait
pop
xchg
andb
out
orl
int
lret
jne
in
ret
loopne
pop
cmpsb
and
add
jae
or
mov
push
mov
add
sti
jmp
stos
cld
pop
call
cmpsb
push
xchg
adc
movb
clc
or
and
xchg
rclb
mov
testb
ret
xchg
push
leave
jns
sbb
int3
lock
push
lahf
sbb
ja
lcall
pop
arpl
jae
inc
inc
mov
fwait
mov
xchg
les
cmp
push
xor
daa
imul
adc
repnz
dec
fiaddl
or
test
daa
inc
sbb
enter
imul
adc
lret
inc
xchg
jae
jo
sar
arpl
mov
cmpsb
pop
out
rcr
xor
adc
push
jnp
sbb
out
and
push
inc
fldcw
lea
cmpsb
call
mov
ret
xchg
je
dec
or
mov
movl
out
xor
and
cli
xor
push
subb
iret
movsb
fcomps
les
or
cli
imul
dec
xlat
lret
inc
xchg
inc
repz
in
rcr
or
pop
fcos
pop
xor
orb
sub
push
cmp
arpl
lcall
ja
adc
and
ret
adc
push
sub
push
inc
sbb
add
and
xchg
jb
ret
pop
lods
cmpsl
mov
lods
adc
xchg
into
fiadds
sbb
in
daa
loop
jns
xor
pop
sbb
jle
stos
push
lahf
scas
in
cmp
adc
jnp
pop
addb
mov
scas
mov
aam
or
addr16
xor
mov
add
jnp
mov
sbb
pushl
sarb
mov
out
cmp
jnp
mov
dec
cld
gs
add
jmp
sbb
mov
test
popa
addr16
mov
jmp
notl
mov
inc
loope
aas
cmp
lcall
insb
das
pop
pop
or
mov
jae
xchg
push
fsubrs
shlb
in
push
xlat
rorl
leave
shll
dec
sbb
les
gs
mov
lcall
mov
iret
dec
call
mov
out
sub
ds
jnp
xchg
mov
sbb
cmp
rol
pop
mov
dec
enter
pop
sub
dec
adc
cwtl
adc
les
lea
arpl
cltd
push
adc
popa
shrb
push
mov
push
push
roll
in
cmp
lods
cltd
xor
inc
fmuls
pop
inc
xchg
notb
add
mov
inc
mov
push
icebp
add
daa
stc
stos
dec
and
repnz
push
fwait
push
jbe
mov
sub
cmp
aad
sbb
pop
dec
loop
pop
imul
out
jmp
cmp
mov
shl
push
mov
nop
xchg
mov
aas
test
xlat
shrl
fldt
pop
mov
add
loopne
pop
rclb
test
mov
je
arpl
mov
fimull
jo
mov
pop
sti
mov
icebp
lret
sub
mov
mov
cmp
jno
xchg
push
fidivrl
je
jno
sub
sarl
pop
ljmp
push
loop
cmpsl
sbb
test
xor
jb
mov
sbb
sahf
lahf
cmpb
outsb
mov
xor
ja
mov
push
aaa
cmp
addb
push
pop
push
or
sahf
inc
outsl
pushf
filds
lret
imul
xchg
cmpsb
bound
mov
cs
jmp
cmp
in
xor
mov
xor
jg
sub
or
push
push
mov
jl
add
ss
fists
fistps
mov
js
out
mov
jne
out
jg
test
scas
sbb
stos
sbb
sahf
fistps
push
or
repnz
cmp
xlat
ret
xchg
movsl
mov
lds
sbb
sub
insb
pop
fdivs
rcrl
jbe
or
fstpl
jecxz
aas
out
fldenv
mov
insl
sbb
sarb
sub
jne
mov
dec
hlt
cltd
int
mov
outsb
xor
shll
cmp
xchg
repz
adc
shlb
ss
aam
addr16
sarl
cld
lcall
out
mov
fldt
in
sbb
imull
mov
mov
xor
jo
out
pop
es
icebp
mov
pop
push
fs
das
not
xchg
rclb
in
pusha
sbb
sbb
cmc
xchg
sbb
cwtl
std
sub
jmp
cmp
dec
add
xchg
test
shll
cmp
push
pop
push
adc
sub
adcl
mov
adc
bound
jmp
ret
shl
mov
or
outsl
mov
xchg
inc
adc
mov
int
movsb
lahf
push
push
jp
mov
dec
cwtl
popl
lea
sti
sub
and
mov
ret
lods
pop
shl
mov
mov
stc
cmpsb
lret
jnp
cmp
shl
mov
sub
dec
scas
outsl
inc
ss
inc
cmpsb
out
ret
testb
lcall
jl
dec
mov
push
cmpsb
inc
movsl
push
pop
fstps
bound
xorl
jp
cmpsb
fcompl
mov
pop
push
mov
fndisi(8087
imul
pop
xchg
cli
push
push
insb
out
sbb
enter
mov
testl
fwait
xchg
ficompl
stos
push
mov
lret
push
cmp
lods
ficomps
mov
lods
stos
add
xchg
loop,pt
or
cmpb
je
cltd
pop
dec
xor
pop
inc
adc
dec
shll
repnz
mov
or
jno
sarl
jp
push
jns
enter
icebp
fildll
sahf
cmp
push
or
fldcw
cmpsb
out
inc
cwtl
inc
gs
cmp
mov
js
rcrl
jae
outsb
adc
cli
dec
adc
call
add
mov
out
inc
iret
xchg
xchg
and
ds
push
incb
not
jb
jmp
in
jecxz
xlat
cmp
jp
mov
cmc
jl
jmp
jno
fistpll
repnz
test
xor
js
jmp
inc
sub
call
popa
test
imul
sbb
aad
sahf
jb
bound
jb
xchg
loop
and
jne
mov
sbb
ret
daa
cld
pmaddwd
ds
es
sbb
sahf
mov
mov
mov
out
dec
mov
call
enter
jge
stc
xor
xchg
dec
outsb
add
mov
out
out
and
out
test
mov
fcomi
outsb
add
mov
rclb
dec
in
jne
testb
sbb
mov
jge,pt
sahf
push
das
pop
addl
gs
xor
xchg
jmp
jle
xchg
insb
sarb
lods
mov
sub
inc
dec
push
test
shll
outsb
xor
pop
mov
out
jae
jecxz
insl
mov
mov
jp
push
push
incl
inc
dec
mov
or
cmpsl
mov
push
mov
iret
dec
fistl
out
std
push
sbb
or
pop
push
fisubrs
repz
cmpsl
fimuls
pop
inc
fwait
xchg
test
sbb
cmp
push
movb
push
jnp
pop
jno
mov
jb
inc
push
mov
jb
sbbl
outsb
mov
dec
mov
sbb
cld
in
ret
lds
push
movsb
fldt
mov
in
xor
jmp
lods
out
stos
adc
jae
subb
aaa
cli
mov
lods
xor
lcall
ljmp
sbb
add
mov
pop
dec
sarl
outsl
or
out
and
pop
or
js
pop
xchg
filds
sbb
call
lock
push
lret
push
popa
aad
lahf
insb
rorl
sub
int3
mov
aas
inc
ss
cmp
and
mov
enter
ret
push
movb
ds
dec
out
mov
fidivrs
jl
mov
aad
or
dec
jg
mov
xchg
in
repz
inc
loop
xchg
test
mov
xor
fdivl
sub
pop
movsb
subb
mov
aas
shll
dec
inc
cmp
test
aam
fs
mov
ss
pop
mov
cmp
or
cmp
ds
loope
cmp
xchg
mov
js
cmpsb
lds
out
inc
out
push
in
mov
ret
or
ret
mov
addr16
jns
add
cmpsb
pop
je
cmp
mov
mov
adc
je
ret
sbb
pusha
mov
add
scas
and
arpl
lods
mov
test
sbb
jo
lods
gs
lea
xor
jno
adc
movsl
out
jbe
and
je
mov
gs
mov
sub
sbb
icebp
xchg
sbb
jp
mov
lret
and
lcall
push
cld
push
aam
lahf
sbb
push
push
hlt
sbb
lds
out
fldcw
jmp
add
in
test
outsb
cmp
fistpll
jp
pop
shr
pusha
mov
xlat
into
or
idivl
cli
xchg
insl
aam
add
add
inc
aaa
das
or
pop
jbe
xchg
mov
xorl
icebp
inc
cs
mov
arpl
inc
push
ds
je
mov
pusha
add
imul
stc
push
cmp
pslld
mov
shrl
das
idiv
and
jnp
mov
jnp
jp
stos
addb
jg
inc
xchg
lods
ja
cltd
mov
jmp
jae
stos
xor
mov
dec
pop
dec
rep
cmp
imul
movsb
xor
mov
cmpsb
xorl
in
xor
mov
cld
lea
jl
jo
rorl
jb
repnz
scas
andb
jge,pn
sahf
pop
jno
mov
xlat
das
sub
add
ss
xor
gs
mov
jo
sub
inc
repnz
das
jno
xchg
fmuls
enter
fs
int
in
adc
jle
fcmovnbe
add
push
imul
daa
jp
test
cmpsb
jg
xchg
sbb
add
mov
push
xchg
mov
push
mov
out
pop
pop
pop
xor
into
cs
lcall
adc
jmp
inc
mov
fistps
aas
and
aaa
mov
push
imul
testb
xchg
fdivrs
lcall
mov
jge
lahf
push
push
stos
pop
ret
jbe
push
inc
xchg
rolb
es
cmpsl
jp
xchg
les
mov
pop
push
adc
add
jne
les
pop
decb
orl
push
dec
jbe
lret
pop
mov
inc
js
stos
push
leave
jg
pop
das
dec
repnz
xor
gs
mov
adcb
adc
rorb
js
bound
ja
outsb
bound
and
lods
xchg
test
xchg
popa
in
js
adc
sbb
dec
add
out
inc
stos
scas
adc
dec
mov
loop
jl
movsb
dec
mov
sbbb
rolb
adc
ret
movsb
xlat
fidivrs
inc
xchg
xchg
shll
leave
js
dec
fstl
pop
mov
pop
mov
decb
cmc
push
loope
outsb
mov
int3
add
loop
pop
call
and
stos
add
addr16
xlat
adc
sub
je
or
lret
xor
mov
gs
add
loope
cmpsb
inc
cmpsl
sti
loopne
sub
cwtl
inc
cwtl
inc
dec
or
sahf
cmp
sbb
add
and
fildl
jmp
mov
movsb
cmp
jbe
mov
cmp
mov
jns
sti
out
out
js
stos
ja
ja
cs
lods
inc
sbb
lds
sub
shrb
push
ljmp
pop
pusha
roll
mov
xchg
jo
aas
scas
jmp
ret
imul
add
inc
lret
adc
inc
mov
or
sbb
aas
sbb
incb
aad
ret
out
adc
mov
xchg
mov
xlat
ss
repz
sub
mov
and
fisttpll
xchg
mov
and
add
pop
outsl
fisttps
mov
fs
sarb
lods
cmp
adc
outsb
hlt
and
sub
data16
cmp
and
sti
or
jns
xchg
mov
imul
mov
adc
dec
mov
popa
mov
xchg
push
mov
test
cltd
jbe,pt
jns
adc
fsts
sbb
loopne
imul
cmp
pop
and
repz
shrb
or
cmp
fsubs
push
mov
mov
test
cmc
les
out
jne
fmuls
mov
inc
pop
ret
push
aas
jno
mov
and
dec
imulb
popf
and
ljmp
testl
xor
mov
xor
and
shl
addr16
int3
stos
xchg
sbb
in
ror
xor
xlat
pop
imul
test
push
or
in
pop
enter
shll
fsubl
bound
pop
cmovge
stos
into
rol
int3
cmp
xchg
inc
cld
mov
xor
sub
imul
mov
pop
testb
jp
addr16
sub
addr16
ljmp
adc
je
adc
cmp
dec
xor
inc
xchg
dec
call
stc
nop
punpckhwd
loopne
ljmp
cli
sbb
fistl
out
lock
loop
outsb
aam
imul
pop
sub
cmp
fisttpll
loop
cmpsl
fmull
pop
and
sub
std
and
aam
cltd
aam
ds
jns
xchg
dec
loopne
push
sub
xor
iret
fdiv
dec
sub
xchg
stos
pusha
ds
jl
mov
dec
jmp
add
stc
xor
push
fcmove
cmp
loop
jbe
lods
push
mov
pop
adc
inc
fnstenv
pop
js
mov
push
sub
mov
movsl
fs
test
call
les
dec
cli
sahf
sub
shll
mov
push
push
popa
hlt
jmp
jno
popf
stos
fdivp
sahf
pop
daa
pop
push
cmp
or
fcompp
in
aad
add
mov
inc
adc
dec
dec
ficoms
int
mov
or
xorb
or
lock
mov
sahf
add
test
xor
mov
insl
iret
xor
adc
cmp
popf
push
mov
stos
mov
jae
push
iret
and
or
rep
push
or
gs
aaa
pop
mulb
pop
scas
pop
jae
lods
inc
leave
pop
sub
inc
xor
mov
insb
inc
and
fwait
mov
jmp
dec
ds
dec
or
mov
inc
sbb
and
loopew
cmpsb
pop
fmul
in
fldenv
dec
add
repz
pop
and
push
rcrl
xlat
or
cli
scas
mov
test
lds
dec
rol
xor
mov
sbb
or
xor
loope
mov
xchg
mov
lret
jo
sbb
jl
icebp
rorl
ljmp
push
add
frstor
dec
test
aaa
sbb
mov
clc
fwait
shrl
jmp
mov
jns
inc
xor
mov
and
lods
je
or
inc
or
mov
lahf
daa
aad
in
out
add
hlt
mov
shll
aad
add
xchg
jecxz
outsb
hlt
push
adc
jbe
popf
adc
or
fistpll
or
sub
in
int
pop
fisttps
cmpsl
xchg
xlat
adc
xor
sbb
jae
imul
xchg
inc
iret
mov
pop
stos
pop
std
repnz
arpl
and
dec
cwtl
cmpsb
les
popa
push
notl
push
insl
push
sub
inc
cs
aad
pop
lds
xchg
sbb
scas
lahf
inc
xchg
pop
shll
je
adc
mov
nop
xchg
sub
inc
adc
popa
aad
cmp
mov
scas
lods
inc
sub
pop
cmp
dec
adcl
jo
orb
test
xchg
aam
dec
push
in
sbb
lea
into
stos
fidivrs
lods
adc
sub
insl
popa
aaa
mov
js
adc
mov
push
sub
idiv
pop
sahf
cld
jnp
push
and
sbb
dec
cwtl
fidivrl
decb
xchg
jo
aaa
sbbb
cld
rcrl
stos
outsb
lahf
lret
je
add
icebp
ficomps
mov
outsl
and
dec
in
inc
push
adc
adc
dec
or
xor
nop
xchg
je
dec
mov
pop
mov
cmp
jno
pop
loopne
mov
push
add
push
jle
add
jmp
mov
mov
or
data16
pop
push
fwait
pop
push
sbb
or
stos
imul
xchg
mov
xchg
sti
lahf
es
sti
into
sub
jg
push
aad
lea
lds
mov
push
clc
pop
mov
sub
jge
mov
push
pop
adc
mov
aaa
ljmp
push
push
push
outsb
daa
push
pusha
cmpsl
mov
mov
dec
imul
jnp
ss
mov
repnz
jl
jl
repnz
push
add
enter
std
xor
mov
adc
pushf
jge
fcomip
mov
divb
rorb
cmp
daa
sbb
mov
cmp
test
mov
inc
adc
pop
push
inc
xchg
push
push
aas
dec
popf
push
mov
add
lret
xchg
and
repnz
js
cmp
add
push
in
idivl
ja
cmp
sahf
push
icebp
cmp
adc
scas
clc
outsl
rcl
lcall
sbb
daa
enter
roll
and
mov
push
aas
loopne,pt
push
movsb
pusha
inc
sbb
pop
ja
packsswb
add
sbb
jl
ficoms
or
icebp
push
fldenv
jne,pt
xchg
lret
adc
push
jb
mov
aad
push
mov
out
lcall
in
movsl
aaa
in
add
sub
add
pushf
stos
pop
mov
xor
ss
int
sahf
mov
jo
inc
and
icebp
repnz
pop
fsubl
add
out
mov
lret
imul
shll
sbb
mov
push
out
fstl
rorb
in
andb
push
icebp
cltd
lcall
decb
imul
adc
js
int
or
adc
ret
sbb
inc
inc
push
stos
stos
loope
cmpsb
insl
cmpsb
add
or
mov
inc
push
push
popf
and
test
call
or
push
pop
dec
or
xor
mov
insl
lds
je
adc
push
mov
ljmp
insl
cbtw
hlt
nop
sti
mov
das
icebp
bound
jns
sbb
add
mov
in
dec
out
shlb
sub
dec
stos
push
mov
jg
rclb
ret
sub
pop
shlb
mov
xchg
sub
fists
and
or
cmp
mov
jmp
cli
dec
sti
pop
adc
fwait
mov
iret
mov
enter
sbb
mov
and
adc
and
push
andl
push
mov
rcr
mov
cmp
es
mov
dec
and
lods
je
mov
fdivr
movb
or
gs
push
mov
bound
out
addr16
shll
ja
lahf
sbb
test
add
jg
stos
adc
push
fidivrs
inc
jo
push
xchg
popa
pop
and
ficompl
and
cli
cld
xor
inc
mov
add
mov
shll
dec
jno
fsubr
fadds
jo
or
rorb
xchg
out
pop
fucomip
lods
and
stos
mov
loopne
pop
lds
gs
xchg
add
fdivl
rcll
cmp
movsb
or
dec
repnz
and
rcl
fadds
jae
shrl
fnstcw
add
lret
cmpsb
test
enter
mov
mov
loop
cs
in
dec
lods
xchg
je
test
into
repz
adc
sbb
mov
cmp
jae
sub
cmp
mov
jecxz
popa
push
ret
cs
pop
jl
push
or
shrl
movsb
sahf
sbb
inc
and
mov
shll
fs
jge
sti
pop
incb
orb
mov
cmp
pop
inc
add
mov
push
xlat
sub
xchg
ss
dec
add
out
pop
sub
shl
sarl
push
sub
dec
pusha
mov
test
and
fs
lcall
cld
and
mov
negb
sbb
js
fimuls
sti
gs
xor
pop
andb
call
sbb
adc
and
ja
xor
cld
jp
popa
sbb
adc
dec
sbb
sub
gs
sbb
push
jmp
ret
sahf
jp
mov
mov
es
pop
mov
jle
lock
adcb
in
pop
hlt
insl
jb
outsl
mov
icebp
clc
popa
mov
inc
js
xor
and
imul
or
jmp
int3
add
hlt
jae
xchg
inc
jbe
sub
push
jno
pop
add
fdivrl
xchg
aad
cmc
cmp
push
push
fwait
lret
aam
adc
pushf
mov
lret
adc
pop
ror
sbb
push
and
inc
xor
xlat
ss
cmc
daa
mov
or
jmp
call
sbb
out
and
aam
inc
mov
pop
jbe
mov
add
jb
mov
pop
pop
add
pop
mov
rcll
add
and
jbe
stos
xchg
sbb
shl
pop
loope
add
pop
ret
cmp
loopne
orb
test
mov
aas
lea
icebp
xchg
dec
sub
in
mov
push
add
and
xchg
sub
jge
push
dec
ret
and
stc
lcall
jmp
pop
popa
cmpsb
jno
inc
arpl
xchg
das
add
adc
lcall
jge
xchg
orb
sub
ljmp
xor
mov
pop
inc
inc
mov
xor
push
lock
imul
xlat
adcb
std
gs
xchg
and
cmp
imul
mov
aaa
enter
clc
andb
adc
mov
or
dec
shlb
xchg
jnp
arpl
in
cli
and
cmp
jge
int
jp
gs
mov
ret
pop
fwait
mov
adc
mov
dec
pop
cmc
dec
movl
push
nop
inc
cltd
jp
shl
insl
fsubrl
xor
les
jno
icebp
xchg
xor
pop
roll
stos
andl
cli
test
idivl
jecxz
sbb
cs
in
pop
aaa
lahf
mov
cmp
sti
dec
imul
aaa
jb
sub
adc
lret
ucomiss
insl
dec
xchg
jp
dec
es
daa
add
pop
jg
pushf
xor
sub
add
inc
arpl
ja
mov
add
orl
pop
ds
ds
sbbb
mov
inc
faddl
xor
push
pop
out
mov
mov
push
sbb
jg
jl
sbb
jge
out
push
jle
inc
insb
jle
jno
pop
and
adc
int3
test
cs
bound
adcb
loope
add
pop
mov
icebp
jo
mov
test
repz
lahf
ret
cltd
sub
cld
ljmp
mov
loopne
xlat
pop
test
adc
jl
arpl
inc
bound
insl
jmp
in
mov
inc
sbb
cmp
jbe
frstor
inc
lods
test
sub
stos
add
ficomps
sub
sbb
pushf
inc
xchg
mov
inc
dec
movsl
mov
rol
repz
stos
xchg
ret
adc
xchg
mov
cmpsl
mov
clc
add
negb
jb
mov
push
repnz
sbb
mov
in
es
mov
adc
push
int
movl
std
mov
cmpsl
cmp
mov
xchg
cld
fldl
ret
jp
imul
pop
dec
jns
jl
mov
scas
ss
lcall
loop
out
xchg
inc
enter
adc
movd
adc
inc
rolb
fs
sub
aaa
lea
popa
aas
cmpsl
push
jnp
mov
addl
cmp
push
pop
sahf
cmp
mov
rcrl
or
xchg
testl
sbb
loop
ss
jle
or
inc
rcll
dec
sbb
in
sub
inc
pop
outsb
pop
sub
inc
jmp
add
pop
fwait
mov
or
addr16
roll
dec
jb
or
adc
int3
in
or
sub
jp
iret
xor
dec
jmp
adc
arpl
lret
cli
sbb
out
dec
mov
cmp
xchg
mov
jo
push
lds
jecxz
fs
and
cmc
and
inc
mov
push
dec
sub
xlat
sbb
xchg
aam
cli
insl
inc
repz
inc
jnp
or
dec
ss
pop
xor
pop
push
lcall
mov
scas
decl
out
mov
xchg
mov
dec
fwait
xor
jp
jae
je
ss
stos
pop
add
shr
and
cli
jnp
and
jg
lods
lahf
mov
xor
insl
xchg
icebp
fisubrl
xchg
sub
add
js
out
jno
repz
test
xor
mov
xchg
xchg
dec
xchg
movsl
xor
push
add
jno
fcom
xor
push
and
dec
xchg
les
lcall
cmp
mov
fisubrl
inc
xor
stc
sbb
xor
add
int3
mov
lds
les
xchg
call
mov
adc
mov
fisttpll
mov
mov
sbb
iret
fdivl
xchg
in
js
mov
mov
fwait
dec
and
movsl
mov
or
cltd
shrl
adc
pop
shl
inc
and
or
pop
pop
mov
mov
test
mov
leave
test
or
lds
pop
dec
xchg
mov
inc
jle
jmp
das
js
arpl
aaa
cli
mov
adc
inc
insb
test
gs
out
addr16
into
cmp
int3
mov
inc
jle
das
pushf
lods
mov
movsl
insl
mov
sub
ja
out
je
adc
mov
sti
bswap
cmp
jecxz
sti
loop
pop
inc
clc
push
decl
push
es
add
pop
jp
mov
mul
jl
or
xor
lock
xor
movsl
mov
adc
test
sti
test
jb
js
and
stc
stos
mov
xchg
enter
arpl
fdivs
mov
insb
jae
lods
out
jo
loope
out
notb
xor
nop
test
loop
aam
xor
cmp
out
test
fdivp
ds
and
mov
inc
pop
repz
push
jle
push
add
ret
sbb
add
loopne
push
dec
cmpsl
cltd
jmp
out
inc
jg
call
outsl
mov
mov
mov
mov
or
lds
clc
mov
jnp
and
mov
iret
sar
add
sub
xor
mov
inc
xor
mov
and
dec
sub
jb
jle
sub
ja
andl
fnstenv
jae
or
xchg
cli
sub
jl
sub
pop
call
push
dec
int
insl
mov
mov
xor
dec
mov
mov
xchg
push
pop
xchg
pop
inc
sbb
aas
ja
mov
xor
lods
jmp
push
cmpsl
ljmp
dec
jne
cmp
push
mov
sbb
test
and
aas
jg
xchg
fistpl
sub
push
push
add
mov
clc
mov
mov
or
add
jo
and
out
push
mov
cmc
aaa
data16
mov
les
test
pcmpgtw
scas
movsl
push
xlat
jge
inc
mov
and
jae
incb
outsb
xchg
out
or
cltd
lods
fwait
xchg
cmp
cmp
fists
add
scas
push
arpl
pop
leave
sub
in
out
divl
rclb
fsubrs
int3
ss
insb
lret
das
mov
out
inc
jmp
inc
sub
fisubs
or
or
scas
xor
inc
xchg
pop
ffree
jg
dec
xchg
por
jbe
pusha
mov
outsb
das
add
mov
add
stos
out
testl
pop
mov
hlt
andl
lock
xchg
std
daa
inc
andps
out
mov
add
ss
out
lcall
adc
movsl
fcomi
out
push
mov
je
push
mov
ss
jo
pop
test
mov
cs
daa
stos
mov
loopne
mov
out
mov
jb
fnsetpm(287
mov
sub
mov
add
icebp
sbb
fisttpl
jb
push
insb
xchg
repnz
mov
out
cmp
jo
mov
insb
out
lods
xor
pushf
xor
xor
xchg
aam
insl
aaa
repz
mov
pop
insl
inc
mov
mov
or
bound
fmull
and
imul
in
pop
movsl
mov
insl
popf
cmp
sbb
jae
clc
push
mov
pop
test
and
fs
pushw
push
mov
add
or
pop
inc
addr16
push
or
mov
push
loop
test
pop
adc
shll
mov
mov
jno
cmp
lcall
pop
ja
aas
xchg
lods
sbb
lods
in
call
imul
xor
and
mov
mov
ret
or
cli
adc
ljmp
mov
movsl
orl
iret
subb
les
xchg
out
jge
mov
sub
adc
sbb
mov
and
sub
xchg
cmpsb
push
mov
movsl
inc
bswap
add
dec
xor
stos
pop
lret
or
push
cld
jecxz
sub
push
test
hlt
fistpll
xchg
popf
mov
mov
xor
icebp
aas
xor
jl
sahf
daa
xor
xor
ret
xchg
add
dec
out
and
inc
jl
pop
jl
add
xor
fs
adc
adc
dec
daa
pop
cmp
test
mov
inc
int
into
or
dec
scas
inc
lods
jae
mov
mov
pop
mov
mov
mov
jbe
xor
cwtl
xor
cmp
dec
adc
sub
lea
and
adc
fldenv
push
or
not
cmp
pushf
xor
sub
movsb
out
mov
push
in
dec
mov
paddusw
vcmppd
xor
xor
sub
push
mov
test
jae
mov
repz
sahf
or
fiaddl
jg
cmp
or
xchg
and
inc
pusha
pushf
das
jnp
cmp
cmp
repz
mov
mov
jo
xchg
cmp
dec
jg
lods
iret
xchg
jl
ljmp
and
sub
add
jo
sbb
outsb
mov
and
std
sbb
jne
inc
mov
repz
ret
dec
leave
add
cmpsb
xor
rorb
xchg
lock
fs
cmpsb
insl
dec
mov
aaa
and
sbb
test
xchg
adc
inc
aaa
je
je
outsb
inc
repnz
adc
push
sbb
sbb
mov
add
stos
test
stos
pop
in
test
adc
scas
fistpl
and
out
pop
and
aaa
lods
addl
xor
adc
fdivl
mov
cmc
aam
leave
leave
sub
xor
add
inc
cmp
xor
cmp
fldl
adc
pop
outsl
nop
js
push
test
repnz
push
mov
xor
mov
out
inc
sub
stos
imul
addr16
inc
jbe
adc
fmulp
mov
cs
lods
xchg
vunpcklps
cmp
mov
jp
addr16
js
ss
jge
out
ja
pop
mov
addr16
jge
cmpsb
pusha
push
xor
cmp
mov
popf
in
mov
aaa
pop
xchg
inc
adc
in
stos
rorb
inc
mov
push
outsb
and
shrb
out
jns
ljmp
push
ret
test
std
xor
jl
dec
pop
aad
loopne
int3
mov
lret
cmp
iret
xchg
rorb
notl
cmpsl
std
aad
adc
mov
mov
dec
sbb
mov
or
dec
push
dec
and
inc
cmpsl
jbe
test
or
and
sub
adc
xor
test
mov
adc
stos
rcll
mov
fidivl
xor
cmp
xor
ss
movsb
fimull
jecxz
fldcw
cmp
jae
mov
or
ja
lds
sbb
adc
lods
leave
sahf
cmp
and
mov
push
gs
jmp
jle
imul
shrl
push
sub
sub
sbbl
or
ret
add
aam
pop
mov
pop
jmp
cmp
push
xor
shll
adc
mov
push
rolb
push
xchg
cmp
cltd
mov
icebp
mov
icebp
xor
dec
xor
outsl
push
sub
ds
cmp
inc
jne
das
adc
outsb
jl
in
std
xor
popf
or
mov
mov
addr16
push
xchg
xchg
pop
stc
pop
js
pop
mov
mov
fsts
push
mov
xor
xor
push
cmpsl
adc
sti
ljmp
adc
add
sbbl
and
mov
loope
xor
mov
mov
movl
sub
jmp
inc
or
and
and
mov
rcl
test
mov
xor
add
dec
dec
sub
xchg
xor
cld
fisubrs
ret
insb
pandn
xor
lds
fcomi
cwtl
sti
mov
test
lods
sti
icebp
mov
frstor
sub
fidivl
adc
fistpl
xchg
shlb
shr
xor
cmp
dec
jno
mov
mov
imull
lock
enter
xor
stc
jb
dec
pop
pop
xchg
fwait
or
test
repz
xchg
imul
fstpl
fildl
sarl
mov
pop
popaw
pop
loop
push
mov
dec
mov
test
jmp
mov
jae
mov
daa
push
call
cmpsl
adc
loop
sbb
sbb
mov
pop
in
int3
mov
push
xor
stos
dec
aam
inc
ucomiss
and
lods
dec
je
mov
push
aas
inc
rcl
xchg
dec
std
loopne
iret
push
lret
and
sub
fidivrl
mov
js
jo
xor
and
push
push
ret
sti
adc
cli
scas
and
aad
les
jl
sbb
dec
jns
jmp
call
lahf
sub
mov
test
xor
push
pop
pop
clc
test
dec
sub
inc
push
jne
cmp
sub
pop
cmp
in
mul
aam
pop
insb
pop
lret
ljmp
loop
adc
scas
fcoml
add
mov
outsb
mov
in
jbe
loopne
mov
jecxz
mulb
out
mov
jno
push
aas
int3
lods
leave
or
sub
xchg
mov
jns
hlt
xchg
cmp
mov
lods
or
jecxz
mov
out
sub
push
cmp
fldcw
cmp
xor
mov
lds
insb
lods
xor
aad
stos
adc
leave
subb
adc
mov
inc
xchg
mov
push
aaa
into
inc
lcall
adc
xchg
sbb
cmp
mov
add
and
mov
aad
in
xor
sbb
mov
inc
mov
loop
mov
bound
addr16
lret
call
pop
xor
sbb
pop
jge
xchg
lds
push
pusha
repnz
gs
push
mov
mov
mov
aad
bnd
stos
mov
mov
cld
and
inc
mov
pextrw
sbb
xor
add
mov
push
or
ret
into
or
push
stc
pop
xchg
mov
or
mov
int3
jb
pop
notb
cltd
jg
inc
add
data16
pop
fcomps
lock
lea
sub
cmp
jns
pop
mov
loop
lahf
xchg
dec
jmp
lods
xchg
add
sbb
shlb
and
divb
idiv
ss
js
mov
xor
ret
test
dec
repnz
fdivr
xchg
mov
push
enter
adc
push
outsl
idiv
cmpb
arpl
mov
cli
push
dec
cmp
out
dec
out
lock
cmp
push
mov
jo
cltd
sbb
jmp
or
rcrl
ljmp
xchg
shlb
xor
cld
mov
push
mov
cli
xor
xchg
mov
dec
push
mov
sbb
sbb
fld
cmpsl
push
je
shl
stc
add
dec
sub
push
orb
xchg
jmp
sub
shrl
daa
add
popa
lods
pusha
mov
test
out
imul
cs
cld
mov
and
mov
lock
scas
pop
movsb
cltd
inc
bound
add
adc
adc
mov
mov
jle
mov
xor
stos
mov
inc
movsb
mov
mov
insl
pop
adc
adc
dec
jnp
sti
ja
push
fadds
lahf
fsubrp
aaa
mov
dec
cmp
lahf
ret
and
cmp
loop
xchg
icebp
xor
aas
pusha
subl
ja
and
jne
fsubr
push
pop
dec
roll
ds
mov
lcall
pop
fcmovnu
sbb
mov
into
mov
mov
dec
out
pop
idiv
pop
add
out
or
fbld
and
xchg
pop
sub
or
xor
dec
mov
mov
xlat
sub
sbb
mov
pushf
push
add
subb
repnz
icebp
jae
xor
jmp
push
mov
xlat
scas
jl
psrlw
loop
mov
mov
push
xchg
push
or
sbb
cwtl
jnp
or
cmp
xchg
or
ret
jg
imul
int3
stos
movsb
aaa
and
dec
add
mov
jnp
push
and
xchg
addl
jno
js
sub
add
jno
loop
lods
sub
mov
or
pop
sbb
add
add
push
xor
stos
icebp
jecxz
mov
xchg
nop
loop
adc
popa
mov
mov
jbe
mov
test
jle
xchg
fists
jae
push
adc
fdivr
xor
test
push
stos
je
inc
or
fdivp
xchg
cmp
sub
pop
mov
xor
notl
stos
jne
jge
mov
inc
out
sub
daa
mov
inc
cs
ljmp
xchg
push
lock
pop
lahf
push
pop
xchg
rcrb
jns
add
imul
mov
sbb
cmp
sbb
aas
jo
aad
add
pop
xor
fidivrs
sub
jmp
mov
divl
xchg
push
jg
pushl
frstors
rcll
into
ret
push
dec
in
nop
out
pop
sub
sbb
stos
loope,pt
addr16
daa
fisubs
popf
sub
stc
push
push
lods
push
mov
out
push
sub
imul
outsl
aam
pop
cltd
mov
in
push
std
add
push
fists
popf
pop
in
out
sahf
sarb
rcrl
mov
es
inc
popf
sbb
mov
lret
cmp
push
xchg
mov
bound
dec
stos
cs
cmp
inc
adc
test
lds
clc
fs
sub
scas
add
mul
jbe
fiadds
push
and
pushf
jbe
mov
popa
rorl
das
fisttpll
mov
inc
adc
pop
or
aad
lcall
adc
inc
es
cmp
lahf
inc
lahf
es
sahf
int3
cmp
cmp
idivb
fstps
or
ljmp
add
shlb
sub
sub
and
into
out
mov
sub
scas
enter
xor
cli
fcompl
lret
sub
cmp
or
repz
stc
adc
outsb
pop
movsl
ljmp
lea
rcrb
popf
lahf
push
unpckhps
leave
lahf
adc
loopne
aad
ja
int
xor
add
cmp
aad
and
and
mov
cmp
fadd
pop
enter
iret
sbb
or
jp
fs
js
in
icebp
inc
insl
jmp
jle
mov
dec
lods
jmp
mov
rcrl
push
xor
pop
stos
filds
fsubs
jmp
mov
push
scas
iret
lea
cmc
ljmp
shrd
enter
sbb
sbb
mov
and
dec
addb
shll
sbb
movsl
outsb
aas
push
mov
mov
add
jecxz
sahf
lds
pop
or
inc
mov
fdivs
mov
cmp
in
cmc
xchg
add
std
js
jbe,pt
movsl
pop
sbb
int3
stc
dec
fs
stc
and
push
jae
repnz
pop
ficoml
mov
mov
dec
sbb
mov
mov
jo
jmp
in
test
shr
ss
xchg
scas
dec
addr16
lahf
xchg
pusha
adc
push
fwait
xchg
xchg
or
mov
outsl
xor
fiaddl
jle
js
pop
mov
jno
pop
dec
shll
sahf
jae
outsl
int3
and
sub
push
xlat
cmovo
gs
repz
pop
rorl
push
pop
rcrl
sahf
bnd
movsb
mov
shl
lcall
jno
enter
std
inc
jb
daa
mov
out
mov
cmp
mov
ret
outsb
jns
adcl
mov
lea
les
lea
pop
sbb
imul
popf
mov
cmpsb
fimull
scas
cwtl
das
cmp
pop
push
jle
pop
pusha
pushf
mov
ret
jnp
xor
incb
aas
and
or
lret
jle
push
sbb
loopne
mov
and
enter
inc
aam
in
lds
leave
stc
jp
xchg
xchg
fildll
in
xorl
int
mov
dec
sbb
jle
add
ror
scas
lret
clc
ja
imul
mov
leave
mov
mov
lahf
test
es
lahf
xchg
rcrb
out
adc
mov
test
popf
dec
push
dec
or
sub
xor
xchg
xchg
jp
ror
adc
in
mov
test
iret
push
ret
pusha
rclb
sbb
adc
inc
shrl
sub
test
and
cmc
insl
pusha
aam
in
je
ljmp
test
jnp
shll
sbb
rcrb
call
jns
loopne
sbb
pop
inc
push
push
addl
out
dec
xor
insl
lahf
pop
lods
ja
in
mov
lods
cwtl
mov
mov
dec
jmp
pop
mov
mov
jne
insl
out
rcl
loop
cmp
repz
imulw
scas
hlt
cmpsb
lret
movb
outsl
or
rclb
adc
rolb
insl
push
and
or
or
add
in
mov
push
pop
lret
mov
sub
test
rclb
sub
pop
fcoms
lods
mov
sub
ret
cmp
push
add
into
sti
or
ficompl
psubd
mov
pop
cmp
bnd
popa
mov
xchg
ret
lea
add
xor
fadds
xor
xchg
sub
repnz
and
test
jp
out
sbb
push
das
sub
pop
xchg
xchg
mov
pop
xor
lea
dec
popf
mov
xor
test
push
mov
je
inc
mov
inc
cmpb
das
jg
jns
sbb
out
mov
fwait
sbb
bound
pop
push
int
pop
pop
stos
inc
fiaddl
fs
inc
mov
mov
and
cmp
adc
cmp
sti
pusha
pop
mov
sub
shll
aad
lds
sbb
inc
cmpsb
es
sub
das
add
test
mov
cmp
lret
adc
jae
loopne
shlb
inc
ds
lds
sahf
stc
cld
fucomi
fists
cltd
push
sub
pop
mov
mov
sbb
js
cmc
pop
jae
mov
adc
jge
mov
leave
mov
cmp
lret
pop
repz
inc
push
in
ret
lcall
push
push
stos
ficoml
mov
test
sahf
test
push
loop
rcll
lods
cltd
fldl
pop
jmp
repz
xlat
in
cld
inc
dec
data16
call
push
ljmp
push
mov
push
xchg
cs
div
bound
push
sbb
lcall
inc
aas
js
stc
test
jg
in
jp
xchg
push
out
push
cmp
in
pop
lea
adc
or
and
lea
jmp
shr
mov
test
or
ljmp
jecxz
and
in
jmp
or
imul
movsl
mov
ret
out
sub
les
dec
das
in
xchg
jae
add
leave
jb
pop
pop
pop
ret
and
add
mov
push
cmp
sub
xor
dec
inc
je
xor
dec
aam
cmp
js
fisttpll
fcmovu
loop
repnz
or
out
mov
imul
addl
sub
ja
call
add
outsl
push
bound
inc
in
xchg
mov
mov
ja
sysexit
in
cltd
push
jno
in
jecxz
jl
mov
test
dec
push
lret
inc
push
cmp
mov
pop
xchg
sbb
pop
ret
lahf
fimull
adc
inc
xor
cmp
cli
mov
ret
dec
fcmovbe
add
push
daa
dec
scas
and
add
insl
ret
icebp
daa
test
shlb
sahf
dec
and
xchg
inc
ficomps
mov
divl
test
inc
mov
mov
ljmp
or
faddl
mov
xchg
ds
xchg
fs
cmp
add
jne
int
xor
repnz
mulb
scas
movsl
es
int3
jp
cmp
fmul
outsb
and
or
mov
sbb
xchg
dec
fidivs
cmp
outsl
stc
test
push
test
xchg
cmp
mov
lock
cmp
test
ja
ds
mov
push
sar
adc
xor
dec
jl
sbb
adc
and
idivb
or
pop
dec
cmp
in
aas
inc
mov
roll
mov
or
inc
shlb
mov
mov
add
or
pop
insb
arpl
cmp
cmp
cwtl
or
loopne
push
push
rolb
test
fsubr
movsb
mov
std
sub
scas
mov
sahf
pop
fldt
jo
push
jg
fwait
int3
out
or
cld
lock
loope
out
mov
in
mov
hlt
push
mov
in
fcomi
dec
cmp
fadds
xchg
sbb
lea
faddl
cltd
cmpsb
dec
jne
fs
loope
pusha
pop
aad
adc
dec
nop
sbb
aaa
sub
lahf
ds
pop
inc
mov
sbb
push
dec
cli
push
mov
dec
push
lods
dec
jmp
add
push
push
xchg
imul
fimuls
loop
in
xor
xchg
sti
and
mov
mull
jp
push
and
fadds
ret
cmp
mov
sarl
and
fwait
enter
lods
lods
add
mov
enter
sbb
ss
testl
mov
sete
clc
dec
das
out
rcll
push
movsl
daa
cmp
xchg
test
in
out
xlat
lods
ret
dec
jns
bound
iret
jmp
xor
pop
in
ret
fidivl
lds
jns
repz
mov
or
adc
jg
cmpsl
ja
inc
mov
and
sub
mov
pushl
pusha
bound
sbb
mov
dec
subl
pop
int
das
out
jnp
ljmp
popa
repz
xor
or
jl
push
adc
mov
js
mov
add
jno
lret
push
and
movsb
adc
test
cmp
scas
and
pop
cld
dec
pop
adc
jp
pop
sbbl
xchg
js
call
pop
bound
push
xchg
cmpsl
ds
or
loop
adc
insl
test
push
rcl
jns
call
push
in
fbld
nop
xor
push
rorb
testb
and
sub
std
cli
stos
fwait
movsl
jle
push
loop
jg
push
cli
mov
pusha
sbb
push
int
flds
insl
dec
sub
aas
adc
jb
jnp
test
lcall
das
les
sbbb
setno
adc
shlb
mov
lahf
cmp
adc
xor
xor
add
sarb
pop
jae
out
add
push
and
pop
and
dec
push
pop
mov
push
imul
test
and
pusha
dec
cmpb
cmpsb
mov
popf
xchg
js
mov
lahf
jbe
ss
xchg
pushl
add
and
fldl2e
push
movsl
stos
les
enter
mov
adc
in
enter
mov
adc
jns
pop
mov
pushf
push
rcll
dec
mov
xchg
stos
int3
push
inc
sbbl
xchg
cltd
mov
stos
cmp
mov
mov
push
pop
hlt
jae
aaa
jmp
insl
out
out
lcall
sbb
push
loope
dec
into
mov
sbb
jbe
pop
mov
mov
fldl
cmpsl
lods
loop
mov
adc
adcb
cmpsb
cltd
mov
int
push
and
std
push
cltd
clc
popa
cltd
daa
jge
and
pop
outsb
push
jae
dec
cmp
and
inc
push
imul
mov
pop
cmp
adc
mov
repz
mov
mov
mov
dec
cmp
lret
pop
incl
sub
push
inc
repz
xor
mov
fdiv
stos
negb
out
jo
adc
hlt
mov
aad
icebp
mov
fbstp
dec
add
cmpsb
add
lds
inc
lahf
jle
sahf
cwtl
dec
mov
insb
sbb
bound
ss
hlt
mov
xor
mov
in
fisttpl
loope
sub
push
loope
outsb
insb
movsb
cmc
xchg
or
inc
and
pop
out
xor
pop
pop
sbb
sarb
mov
divl
lods
neg
push
add
fwait
and
es
scas
pop
cmp
pop
xchg
das
xorl
and
test
imul
push
adcb
cltd
imul
adc
sub
bound
mov
test
jno
sbb
add
cmp
shl
addl
jae
inc
push
cmc
push
push
cwtl
test
call
out
sub
test
stc
pop
movsb
mov
inc
xchg
loope
cld
fdiv
and
and
movsb
daa
push
aaa
lret
mov
sarb
mov
dec
jg
mov
push
pop
call
fwait
xchg
fucomp
push
sar
dec
inc
les
xchg
or
xchg
mov
psrad
stos
aas
aaa
xor
adc
pop
popf
or
movsl
movsl
insb
nop
sarl
adc
out
faddl
repz
mov
pop
jae
sub
xor
test
lahf
jl
sub
vmwrite
xor
jmp
pop
rcpps
aad
or
cli
movsl
xchg
sbb
jmp
out
scas
lods
aas
dec
push
pop
stos
fidivrl
adc
jmp
cmp
repnz
outsl
mov
jmp
rcl
outsl
sarl
cmp
xchg
lods
mov
sbb
shl
mov
sbb
mov
add
arpl
jo
stc
cmp
pop
lods
sbb
mov
test
in
jb
or
mov
mov
pop
iret
jae
sahf
sahf
mov
mov
mov
das
or
dec
lcall
in
push
sub
cmp
xchg
jmp
mov
and
int
aas
loopne
jmp
cld
dec
mov
jle
xchg
cmp
or
pop
aam
dec
fwait
jb
lds
dec
test
in
lock
sub
mov
pop
xor
frstor
mov
push
push
xor
rcll
insl
shrd
jp
xrelease
mov
mov
or
leave
mov
mov
loopne
add
adc
mov
out
cmp
xor
ret
lods
movl
xor
mov
add
jno
xchg
lahf
ret
mov
mov
inc
iret
pop
or
xchg
ret
sub
es
dec
jne
cmp
pop
rorl
nop
loope
bound
xchg
insl
xchg
gs
cli
xchg
mov
jl
mov
imul
jg
lock
pop
in
inc
push
movb
xchg
add
mov
aas
or
pusha
lret
mov
xchg
dec
add
pusha
add
insl
aam
pop
sbb
mov
imul
ret
xchg
xor
xchg
enter
loopne
scas
mov
test
hlt
inc
cli
stc
lds
imul
cwtl
push
add
inc
mov
or
movaps
shlb
xchg
fsubp
and
inc
test
xchg
mov
les
insb
jl
lea
clc
mov
cmp
pop
mov
jae
and
hlt
lcall
dec
push
push
lea
loop
ss
out
lahf
xor
and
std
fadds
push
imull
ja
outsl
test
sbb
adc
inc
cmpb
push
ljmp
loope
sbb
inc
out
or
xor
pop
xchg
in
push
mov
and
sar
and
int3
sbb
mov
or
adc
push
lds
cs
stc
cmc
fidivl
lret
dec
fstl
push
bound
ds
scas
in
rorb
je
leave
xlat
adc
inc
push
in
lcall
xchg
cmp
mov
xor
mov
bound
add
popa
into
add
fdivrs
dec
inc
ja
add
mov
hlt
xor
cmc
incl
ja
push
out
sahf
js
cmp
and
in
push
cmp
fwait
out
imul
xchg
rclb
mov
sbb
ljmp
cmp
loopne
cmpsb
add
hlt
movsl
cmp
std
js
scas
mov
xor
jno
xchg
and
adc
push
pop
add
sbb
fwait
push
ficoml
mov
and
aas
cmp
sub
ret
mov
outsb
lea
lcall
fistps
adc
cltd
nop
xor
iret
rcll
insl
dec
movsl
xchg
dec
imul
test
cmp
fidivl
dec
mov
lcall
repz
xchg
xor
sbb
mov
cld
lret
adc
push
fistl
aam
jb
pop
ret
lcall
xchg
stos
add
test
lret
out
gs
xorps
loop
rcl
dec
and
mov
pop
jecxz
lahf
cs
add
in
cmp
int3
subl
negb
mov
mov
in
imul
xor
ret
insl
popf
sahf
fwait
shrl
incl
imull
sub
imul
jb
ret
shl
fcmovb
jl
push
sub
icebp
loope
dec
incb
push
mov
pop
jecxz
call
jle
dec
adc
fstps
pop
jae
fwait
xor
scas
sub
pop
jo
mov
push
dec
adc
shlb
or
add
mov
inc
inc
out
sub
movsb
cmp
in
scas
sub
mov
adc
fsts
ficoms
push
mov
inc
iret
repz
ror
push
mov
mov
mov
pop
xlat
hlt
lods
ret
fwait
cmpxchg
inc
cmp
push
lahf
in
sub
mov
cmp
cmp
outsl
jnp
sbb
bound
or
jg
push
add
fdivl
les
push
fidivs
push
inc
and
nop
adc
fistpl
out
push
pop
or
arpl
cmp
stos
fwait
pop
mov
pop
push
xchg
ss
xor
jo
fs
inc
jne
sub
shll
rcrb
mov
or
sub
shlb
mov
adc
hlt
pop
adc
and
jle
fcoml
sub
mov
inc
test
sbb
nop
xlat
nop
rcr
shr
pushf
movups
adc
inc
les
push
or
cmp
cli
sub
pop
sub
push
add
pushf
sbb
pop
fcoms
lock
dec
aam
sti
mov
addr16
arpl
or
loop
dec
inc
xchg
and
movsb
test
jne
andl
push
clc
out
int3
les
enter
rorb
aaa
pusha
cmp
sbb
mov
add
int3
push
outsl
aad
adc
fidivs
inc
push
imul
es
push
add
test
out
mov
xor
jg
xor
test
sahf
ljmp
jle
outsl
mov
int3
sbb
jl
xchg
inc
push
push
sub
js
lock
jecxz
sbb
gs
in
inc
adc
jp
pop
sub
or
and
cmc
cli
ret
pop
cwtl
push
js
mulb
test
mov
das
jge
call
stos
out
xchg
outsb
cmp
shlb
xchg
xor
sbb
add
cmp
add
mov
jbe
push
cltd
cwtl
inc
pusha
in
jne
fucomi
into
sar
repz
push
test
mov
jnp
dec
les
pop
pop
push
jg
jne
dec
or
hlt
xor
outsl
pop
idivl
inc
add
std
gs
push
mov
enter
aas
insb
sub
in
xchg
sub
out
loop
inc
sbb
out
mov
add
xor
mov
push
dec
es
es
dec
jg
scas
adc
push
adc
pushf
inc
mov
das
aas
rol
aas
iret
out
push
stos
test
mov
lods
pop
and
push
mov
inc
fwait
push
sbb
in
xchg
sbb
adc
mov
xlat
mov
sub
xchg
fisubs
lock
je
dec
sahf
mov
fdivs
push
jp
sbb
in
in
jae
in
xchg
loopne
push
in
repnz
or
xchg
push
jmp
js
xchg
mov
inc
lahf
inc
and
pop
jge
xor
pop
cmp
pop
mov
mov
xchg
lock
jae
testl
xchg
add
scas
sti
mov
loope
push
scas
pop
insl
cmpsl
aam
out
xchg
ds
and
pop
sub
fistpll
leave
lret
out
es
mov
mov
jnp
mov
repnz
or
ja
mov
not
imul
jmp
cld
mov
xchg
lods
aaa
les
lea
stos
sub
repz
aam
add
or
out
dec
icebp
rol
std
cmc
aas
mov
lret
in
jecxz
cmc
sub
int
sbb
jnp
cld
push
gs
jns
lods
jb
jecxz
xor
pop
mov
jnp
movsl
xchg
fsts
cmp
ds
mov
inc
cwtl
xchg
cmpsb
lods
push
imul
xor
jecxz
call
fimuls
add
and
push
pop
scas
das
xchg
push
inc
dec
xchg
fldl
cmpsb
sbb
inc
dec
jge
mov
cmpsl
mov
dec
aam
jle
loope
pop
cmp
scas
fs
insb
outsb
add
lods
cmp
scas
sub
ret
lcall
popa
inc
lret
icebp
xor
cmpsb
or
fsubrl
mov
xchg
sbb
xchg
ljmp
fldl
xchg
pop
setl
lock
push
mov
inc
push
mov
add
push
or
mov
pop
or
daa
pop
int
lea
inc
push
cmp
mov
daa
bound
shl
dec
push
icebp
adc
loop
mov
xor
pushf
es
xor
ret
out
push
inc
xor
sub
push
pushf
scas
push
mov
out
cld
nop
or
push
pop
inc
test
aam
ljmp
xchg
cwtl
mov
js
jae
test
lods
xor
jl
bnd
movd
ss
fstpt
stos
cmp
sahf
sub
dec
xchg
pusha
add
pop
jae
cmp
mov
cld
and
rolb
pop
push
mov
out
pop
rcrb
dec
test
cmp
jne
jp
movsb
mov
scas
fs
imul
hlt
inc
test
inc
fcomp
inc
imul
mov
repz
add
and
jbe
aaa
mov
or
icebp
jecxz
scas
int
push
jg
mov
or
fiadds
cmp
jae
sarl
xchg
loopne
fbld
push
add
int
push
test
push
int3
mov
sub
push
lret
or
scas
sbb
aas
push
adc
xchg
repz
sti
lahf
and
shr
lds
inc
sub
movsl
test
mov
or
or
ljmp
inc
repz
stos
stc
sbb
fwait
jno
rolb
mov
xor
popf
aas
jmp
bound
lods
jbe
repnz
add
inc
mov
imulb
push
mov
clc
mov
sbb
mov
dec
mov
int
xchg
frstor
aad
add
test
loop
lods
or
aaa
mov
lds
fistpl
inc
xor
pop
cld
mov
jbe
adc
mov
ss
add
frstor
add
push
xchg
stos
fs
push
out
jl
frstor
mov
outsl
faddl
movsb
cs
push
xchg
xor
adc
and
icebp
and
jp
mov
cmp
jg
sub
prefetchnta
cmp
jae
and
std
clc
das
mov
mov
xchg
lods
inc
jno
imul
cltd
roll
lret
das
inc
inc
test
ret
mov
mov
sbb
add
aaa
loop
jmp
mov
mov
push
xlat
inc
mov
push
fistpl
push
xor
cmp
outsb
pop
fimull
dec
adc
or
xchg
mov
mov
cmp
and
mov
lcall
sub
xchg
xchg
or
mov
mul
iret
sbb
out
hlt
lret
xchg
and
js
mov
std
mov
leave
daa
fmuls
jno
xchg
lods
ss
test
push
cmp
add
dec
or
dec
cmp
pushf
pop
lea
test
das
rorl
hlt
ds
mov
pop
sub
arpl
xchg
popa
std
jmp
inc
decb
jg
arpl
popa
clc
jo
dec
decb
pop
ror
push
enter
cmc
shl
cld
mov
mov
outsb
out
jae
loopne
jle
ror
mov
mov
or
cld
dec
je
xchg
xchg
enter
loop
push
or
out
les
pushf
ror
inc
cmpsb
fildll
std
push
sub
lods
push
aam
pop
jns
xorl
xor
je
pop
movl
push
cmp
jno
xchg
xor
cmp
pop
sub
xor
adc
ret
enter
pandn
call
mov
jbe
mov
jle
out
xchg
sbb
js
push
je,pt
arpl
ret
aad
cmp
outsl
outsl
lea
mov
sub
and
jl
int
lds
pop
dec
inc
setl
cmp
repz
push
test
xor
test
inc
pushf
outsl
adc
imul
xchg
dec
es
adc
fadds
mov
or
js
sbbb
xchg
repnz
cmp
out
mov
dec
add
fbld
sti
test
mov
es
dec
popa
mov
cmpsl
push
inc
test
push
cmp
mov
dec
cmp
sub
or
jae
sbb
push
push
mov
cmp
fsubs
pop
in
lahf
mov
call
mov
jg
in
les
dec
pop
sti
sbb
fwait
pop
xchg
mov
or
ds
div
pop
pop
mov
movsb
pop
or
cld
push
repz
inc
aam
enter
pop
or
aas
xchg
aaa
jge
or
cmp
or
push
fs
outsl
out
pop
fisubs
jae
dec
pop
adc
and
jno
or
and
stos
jne
pop
std
mov
push
jns
lods
fwait
stos
jno
xchg
pop
rcrb
pushf
scas
lret
data16
aas
jb
scas
pop
enter
ss
out
cmp
fcoms
sub
in
loope
stos
xchg
test
adc
mov
insl
sbb
adc
cmp
pop
mov
or
in
movsb
xor
jg
scas
repz
out
les
and
out
jae
sbb
imul
insb
jecxz
mov
imul
sbb
jge
xor
mov
pop
adc
orb
scas
js
out
je
leave
cwtl
divb
sub
inc
mov
adc
jmp
cmp
xor
jle
mov
mov
pusha
fdivs
mov
in
ror
jge
mov
bound
push
xbegin
mov
sbb
fwait
aaa
cld
jge
test
mov
jle
aad
fmuls
mov
lods
sbb
sub
xor
mov
fsubrs
inc
add
fsubrl
lret
imul
adc
ss
push
inc
inc
sbb
xor
aaa
inc
push
cwtl
mov
loope
mov
xchg
repnz
mov
outsl
sub
pop
gs
cmpxchg
mov
mov
xchg
jle
arpl
xor
mov
pop
or
and
cli
out
int3
out
out
inc
and
call
xchg
xchg
fst
sbb
dec
leave
xor
fcomip
push
loop
push
or
jb
mov
in
push
inc
cmpsb
scas
or
sub
pusha
mov
ret
addb
arpl
popf
sub
loop
jns
mov
mov
lods
ss
sbb
repnz
mov
cmp
les
cmp
inc
lods
or
int3
jns
scas
jae
push
mov
sub
pmullw
xchg
adc
mov
fsubr
pop
mov
mov
mov
frstor
or
test
xchg
sbb
in
jo
add
push
movsl
xchg
mul
jae
sub
repz
jmp
orl
cwtl
in
inc
push
fdivp
les
rcrb
mov
xlat
imul
xor
call
sbb
in
xor
icebp
out
test
jno
mov
jg
and
sbb
xchg
out
icebp
sub
xchg
cld
or
fwait
lea
jmp
lahf
icebp
push
sub
sub
inc
jnp
ljmp
push
roll
shlb
xchg
mov
dec
and
hlt
mov
and
or
hlt
push
sub
shl
jecxz
inc
xor
push
jae,pt
insb
outsl
and
adc
dec
mov
popa
dec
addr16
stos
jo
sbb
mov
pop
or
jle
pop
imul
repz
stos
pop
filds
mov
movsb
xchg
sbb
stc
fistpll
jp
or
in
cmp
xor
inc
ja
and
add
out
clc
shrb
idivl
add
test
in
shl
xchg
xchg
mov
mov
mov
inc
pop
cmpsb
jnp
fstps
std
inc
sbb
je
and
mov
mov
mov
jl
dec
push
sbb
mov
aas
repnz
xor
xchg
push
pop
lret
sub
inc
bnd
xchg
lods
movsb
inc
ds
gs
mov
sbb
movsb
icebp
mov
test
jo
jl
push
xor
movsl
mov
and
mov
cmp
mov
out
push
xor
jbe
in
mov
xor
mov
push
pop
into
out
push
shrb
std
pusha
addr16
xchg
lds
mov
lea
sar
or
outsl
clc
arpl
outsb
lahf
pop
js
dec
les
mov
xchg
mov
dec
jecxz
ljmp
loop
cld
mov
inc
loop
out
xor
inc
test
mov
pop
cmpsl
pushf
cmpsb
ss
jp
xchg
mov
sbb
ljmp
jl
jl
mov
std
cmp
mov
mov
imul
xor
sbb
enter
xchg
or
cltd
popf
push
or
mov
cmpsb
inc
sbb
push
mov
cmpsb
ss
mov
loope
adc
lock
scas
movsb
jns
clc
ret
jnp
ds
repnz
ja
dec
pushf
xchg
imul
sti
dec
or
cmp
divb
js
inc
fidivl
icebp
dec
fprem1
lahf
int
and
mov
push
sbb
inc
mov
imull
or
cmp
pop
push
push
mov
test
dec
xchg
mov
das
sbb
push
mov
inc
lds
fwait
sbb
std
mov
xor
dec
inc
jbe
cmp
not
fs
cmp
hlt
jno
xlat
popa
bound
inc
cmp
mov
adc
out
scas
fwait
jle
inc
mov
pop
sub
aad
or
scas
frstor
jmp
ret
lds
sarl
sub
shl
lret
dec
push
xor
cmp
jo
sub
adc
movsb
shrl
movsl
outsl
fnstenv
insb
adc
dec
pop
incl
xor
stc
inc
inc
sbb
ja
push
sub
mov
cmp
ja
mov
dec
xchg
jo
add
scas
cwtl
push
or
in
test
test
gs
cld
popa
outsb
outsb
mov
mov
outsl
and
sbb
jecxz
or
pop
hlt
push
xor
dec
jmp
scas
jmp
xchg
dec
push
mov
fidivs
lahf
loope
iret
push
sub
cs
xor
movsb
xchg
cmp
rolb
ljmp
aas
jns
lret
pop
movsb
pop
sbb
stos
test
lds
adc
in
clc
push
xlat
pop
lcall
popf
cmpsb
shl
push
jmp
push
pop
and
imul
shrb
jns
mov
push
les
push
in
sarl
cmp
stc
out
push
push
mov
and
aam
scas
xchg
and
mov
cwtl
mov
sti
fldcw
xchg
fisubrl
test
push
dec
fs
inc
sbb
push
xlat
cmp
add
xchg
xor
mov
xchg
adc
add
scas
jmp
clc
outsb
mov
enter
das
insb
std
scas
in
frstor
rcr
push
bound
xor
mov
fisubrl
jmp
cmp
xchg
xchg
hlt
in
and
fidivs
cmp
lahf
icebp
psubsw
dec
xor
fs
push
cmp
icebp
mov
jl
and
aam
incl
jno
jns
dec
cmp
jl
jmp
int
ljmp
xchg
sub
mov
mov
sti
sub
inc
jne
xchg
pushf
add
lods
scas
add
pop
das
or
in
aad
push
mov
pop
adc
shrb
mov
cwtl
mov
and
call
lret
inc
sar
or
fists
outsl
js
or
pop
movsl
or
popa
xor
fsubs
cmp
cs
jge
pop
mov
mov
ljmp
stos
or
sbb
and
xchg
lock
cltd
sub
and
int3
es
xchg
sbb
into
in
out
mov
lds
fadd
jno
add
repz
and
loope
mov
mov
inc
inc
mov
lods
insl
xorb
push
mov
dec
add
addr16
push
fwait
xchg
leave
mov
ss
scas
pop
test
aaa
inc
push
mov
xchg
or
xor
and
mov
cli
push
mull
xchg
lods
push
push
and
sarb
je
ss
lahf
dec
cmp
adc
sub
add
sub
lret
lea
insb
inc
mov
add
xor
add
into
sahf
mov
pop
pop
lahf
popa
sbb
adc
pop
xchg
pop
jmp
lds
subl
mov
setno
jb
mov
jle
jl
push
push
dec
mov
sub
lret
push
or
dec
mov
xchg
xchg
mov
push
pop
or
cmpsl
imul
stc
or
sub
xor
aas
inc
data16
pop
cmc
imul
loop
data16
mov
and
and
cli
adc
xor
cmc
lret
inc
mov
pop
jg
adc
js
cwtl
insb
aad
fiaddl
pop
cmp
fistpll
testl
fidivl
xchg
pop
loope
out
xchg
and
inc
shlb
les
imul
xor
pop
ds
xchg
ret
or
add
test
mov
imul
dec
xor
fildll
xor
cmp
out
push
fsubrp
pop
call
outsb
cli
xchg
decl
enter
xlat
jno
fcomi
lcall
dec
push
mov
push
ss
std
test
xor
jo
lods
jp
mov
cwtl
cld
cmp
call
fsubrs
push
pop
into
enter
add
in
sar
les
or
push
xor
dec
dec
xchg
loop
cld
xchg
loope
rolb
leave
ds
jnp
insl
cmp
or
add
or
jnp
xlat
sub
test
push
jl
push
mov
jl
and
xchg
adc
xorl
push
add
xchg
imul
lcall
cmp
std
inc
xchg
mov
leave
sbb
test
out
jb
cli
inc
mov
test
add
imul
mov
mov
mov
int
adc
pop
cmpsb
lock
xchg
fiaddl
aas
in
idivb
int
std
xor
jns
or
or
mov
mov
push
andl
push
shlb
sti
fwait
pop
shr
mov
pop
pop
lods
or
mov
dec
addr16
js
ss
rol
shll
in
repz
sbb
iret
or
jnp
scas
cmpsb
outsb
hlt
dec
lret
and
mov
sbb
jecxz
imul
pop
sbb
push
and
int3
adc
push
popa
jge
jno
inc
push
and
jne
cmp
push
addr16
add
push
lds
dec
cwtl
jns
cmp
sti
test
xchg
mov
pusha
outsb
call
xchg
push
push
pop
pop
stc
rolb
mov
mov
aas
mov
imul
or
aas
cs
pop
xlat
cmp
mov
sub
arpl
mov
add
loopne
icebp
and
mov
sub
push
sahf
or
data16
xchg
and
fnstsw
shl
movsl
test
fistl
and
shrl
xor
push
int3
jae
out
lods
adc
test
sbb
add
cmpsb
in
xchg
push
movntq
xchg
lcall
icebp
jmp
mov
nop
xor
or
ds
push
push
xor
lret
pop
sbb
les
xchg
stos
lods
xchg
push
cmpsl
jg
mov
push
cmc
out
imul
inc
jb
sbb
mov
pop
dec
pop
popf
das
dec
out
lock
xor
scas
out
lret
xchg
xor
xchg
push
mov
jl
stc
push
mov
xchg
pusha
cwtl
lock
daa
dec
arpl
ja
out
into
jo
xchg
mov
js
sub
jne
popf
sahf
pop
fisubs
pop
imul
cmp
jno
xchg
sti
cs
xlat
int3
xor
roll
adcb
popa
movsl
arpl
push
sbb
mov
int3
mov
std
into
cltd
dec
xor
and
jns
fidivrs
xchg
dec
test
call
mov
pop
xchg
mov
add
enter
dec
mov
pop
xor
jns
imul
mov
dec
push
cmpsb
pop
push
jb
sbb
xor
fistps
loop
shrb
xor
repnz
xchg
sbb
jo
leave
sub
adc
lds
xorb
sbb
push
js
scas
inc
or
sbb
in
inc
jne
jmp
jl
pop
inc
int3
mov
lock
push
imul
dec
popa
rcrl
shlb
mov
cmp
or
iret
adc
lock
dec
data16
in
out
dec
lret
shl
sahf
mov
add
cmp
jecxz
cmp
push
in
dec
or
pop
jle
test
push
mov
je
inc
xchg
mov
sbb
leave
push
es
je
xchg
rcrb
mov
int3
fcomp
lods
negb
in
cwtl
je
dec
ret
rorl
repnz
lods
mov
aam
xchg
or
out
push
push
mov
push
xchg
fs
xor
add
sub
inc
inc
outsl
xor
enter
ficoml
cmpsl
fisubl
dec
enter
lock
mov
pop
cmpsl
cmp
mov
xchg
ret
xor
stos
sub
aaa
es
xchg
sti
mov
mov
mov
inc
std
int
push
scas
hlt
xchg
sbb
mov
loopne
roll
icebp
add
repz
mov
and
and
xor
sbb
sbb
inc
xor
stos
jae
push
outsb
push
pop
ljmp
pop
push
stc
iret
dec
sahf
sbb
pop
pop
sbb
sahf
cmp
mov
fsubl
addr16
adc
push
xchg
sub
test
push
ret
fsubr
add
scas
into
aas
fsubl
shlb
jp
add
in
sub
aad
inc
mov
push
fcomps
jl
pushf
push
dec
sub
cltd
xlat
add
inc
shll
mov
sub
sbb
aaa
jns
jbe
popa
pop
xchg
jo
orb
mov
fmuls
mull
ja
or
jl
std
push
xor
int3
sub
cmpsb
mov
or
in
sub
add
nop
cmc
inc
jns
jg
and
jo
mov
ljmp
int
mov
jns
add
outsb
mov
int3
dec
xor
js
daa
add
cltd
lock
aaa
jae
adc
es
push
test
dec
xchg
adc
cmp
cwtl
cld
int
inc
rclb
fildll
in
pop
sbb
mov
xor
and
xchg
lret
fwait
or
add
daa
in
stc
xor
call
test
pop
and
push
outsb
sahf
adc
adc
add
inc
pop
loop
push
stos
push
nop
mov
enter
sub
cld
sbb
cli
xor
shr
jl
xchg
xchg
jl
xchg
insb
xor
daa
aad
cmp
dec
xor
dec
insl
shrl
mov
inc
repnz
adc
fld
add
js
cwtl
mov
push
aam
jp
std
mov
pop
mov
cmp
int3
dec
daa
std
scas
fsub
mov
sbb
xchg
fucomip
push
cs
dec
inc
sub
mov
push
mov
js
aas
addr16
lods
pop
je
xchg
push
pop
push
jp
out
jbe
xchg
inc
ficomps
aas
insb
scas
and
adc
xchg
sbb
inc
mov
push
sbb
std
xchg
pop
adc
repnz
ljmp
jge
xor
xchg
mov
and
fucomp
push
jmp
xorb
fisttpll
std
int
cltd
dec
mov
leave
or
sbbb
adc
rolb
push
mov
xor
add
rclb
imul
sub
aaa
push
dec
add
or
xchg
xchg
adc
imul
push
sbb
leave
scas
cltd
nop
rolb
sub
jecxz
test
roll
sub
cmp
push
inc
mov
add
add
inc
stos
insb
scas
ljmp
dec
mov
scas
leave
inc
fsubrl
mov
xor
inc
mov
aad
je
in
and
pop
jnp
sahf
sbb
stos
jge
or
mov
mov
mov
scas
add
sbb
testl
add
int
mov
and
lret
out
jne
or
cmp
jp
int
es
sbbb
rcl
cmc
bound
dec
jecxz
xchg
pushl
xchg
lock
fisttpl
push
push
inc
pop
inc
push
sbb
loopne
imul
pop
stos
loopne
mov
test
or
mov
jne
in
repz
out
aaa
loope
test
xor
out
sbb
stc
movsb
xchg
pop
xor
sub
stc
mov
push
add
jmp
dec
mov
mov
or
mov
out
xchg
in
lds
push
icebp
sti
push
movsl
push
adc
out
test
lock
dec
out
xor
js
adc
icebp
mov
rcrb
mov
add
adc
cli
sbb
ficomps
adc
push
xchg
orl
cltd
and
fidivl
int3
xor
aam
pop
std
mov
dec
add
fst
jno
adc
inc
sarl
jle
sar
scas
orl
test
lret
xrelease
rcll
jg
or
test
mov
adc
add
out
jnp
jmp
jae
aad
fildll
stos
xor
pusha
and
addb
xchg
xor
pop
sub
or
adc
pop
incl
fdivs
pop
sub
xchg
insb
xor
inc
stc
mov
jno
and
sahf
cmp
dec
mov
in
mov
adc
or
cs
mov
mov
mov
lret
mov
push
mov
ss
fwait
movsl
loope
sbb
cs
inc
dec
clc
mov
mov
mov
inc
push
lcall
pop
test
jmp
hlt
mov
mov
out
sbbb
data16
out
inc
sub
xor
and
in
addl
inc
aad
je
in
lea
cs
in
scas
dec
push
popa
mov
iret
mov
pop
mov
mov
inc
es
xor
subl
repz
and
and
loopne
mov
and
movb
cli
mov
adc
jp
jp
and
ds
fistps
adc
mov
out
or
xorb
sub
outsl
outsl
les
test
idivb
fmuls
push
xchg
fadd
jmp
data16
mov
gs
hlt
pusha
push
shll
jo
jmp
test
lea
jmp
xchg
mov
out
sub
adc
pop
xor
adc
jo
push
cmp
in
mov
sahf
iret
xor
adc
imul
cmp
xchg
cmp
cmp
por
mov
shlb
pop
int
jecxz
xchg
pop
cmpsb
fstps
mov
mov
subb
xor
mov
dec
xlat
jmp
and
call
fmuls
clc
add
jbe
rclb
mov
leave
lret
pop
lock
xchg
int3
jmp
push
push
bound
repnz
mov
enter
fs
in
push
xchg
xchg
hlt
aam
xor
mov
and
iret
aad
cmpsl
jae
dec
pusha
dec
loope
pop
imul
fldcw
lds
aad
jbe
xchg
fldcw
repz
mov
cmpb
sbbl
addr16
pusha
cmpsb
mov
repz
mov
push
insl
dec
gs
icebp
fstps
and
popa
dec
dec
jl
inc
jmp
mov
test
in
push
mov
dec
inc
push
mov
outsl
add
imul
inc
pop
repnz
loope
mov
jae
xchg
popa
add
mov
rcll
sub
test
icebp
cmp
pavgw
inc
or
push
push
xorb
popf
notb
and
xor
sbbl
jmp
js
stos
leave
cmp
pop
cld
jle
addl
addr16
xchg
sub
lods
jecxz
mov
pop
push
ret
sbb
jb
jecxz
xlat
ljmp
ds
sbb
inc
popf
repz
rcrl
adc
loop
dec
inc
pop
push
fisubrl
rol
lods
dec
in
stc
cld
mov
jns
lahf
cmp
in
fisubl
mov
orb
fistpll
stos
call
pop
cli
pop
call
dec
mov
xor
mov
and
nop
mov
lret
repz
mov
dec
inc
mov
out
cmp
jb
mov
pusha
xor
pop
xchg
decb
mov
pop
jge
dec
clc
adc
cmpsl
test
xchg
dec
push
jb
mov
sbb
push
or
mov
mov
nop
dec
xchg
jle
and
daa
fcmovnb
cli
jno
mov
jmp
outsl
test
test
dec
xor
sub
pop
mov
inc
or
je
ss
test
outsb
rcr
pop
sahf
aad
movsb
repz
jle
inc
rcrl
in
or
dec
mov
xchg
dec
test
in
shlb
out
push
dec
jb
pusha
pop
icebp
ss
lret
push
bound
out
push
scas
xor
nop
int
mov
test
arpl
xchg
and
into
pop
or
push
lcall
mov
test
stos
add
push
fcoml
jb
add
mov
or
loopne
in
ljmp
inc
mov
dec
das
insl
jbe
adc
dec
inc
insl
or
enter
sbbl
mov
fisttpll
sarl
cltd
sub
fsubl
fnstsw
repnz
popf
shll
aaa
movsb
out
xor
into
or
cmpsl
mov
ret
mov
sbbb
mov
std
dec
cmpsl
sub
cld
add
xchg
data16
stos
or
add
nop
decl
sarl
fwait
repz
or
aaa
push
flds
push
sub
fsub
mov
push
loopne
or
stos
lods
jg
mov
shrb
out
imul
loope
push
xor
cmp
inc
imul
out
jo
xor
adc
mov
cmp
ja
dec
cld
test
jle
arpl
fs
or
push
cmpsb
out
add
lds
sub
push
inc
add
pop
push
arpl
xor
std
ja
imul
jnp
sub
push
push
lods
inc
movsb
push
inc
cld
cmp
ljmp
dec
or
emms
pop
pop
lret
rcr
push
jne
xchg
xor
cmpsb
jmp
jp
mov
arpl
jns
add
loopne
mov
dec
and
gs
cmp
test
xchg
push
stos
out
push
test
push
sub
push
cmpsl
inc
cmp
addl
in
or
lods
or
cs
jns
cld
xor
lods
test
fiadds
xorb
or
xchg
mov
cmp
jae
add
pushf
movsl
jo
or
ret
jle
sahf
jge
out
mov
and
adc
pop
outsl
mov
xorl
enter
push
push
mov
adc
dec
or
sbb
add
mov
xchg
add
jne
sub
mov
rcll
jle
mov
ja
cmp
jno
rolb
iret
movsb
sbb
lahf
jmp
insl
add
test
ret
pop
inc
leave
lds
fiaddl
xchg
dec
jl
cs
lret
es
ds
std
sbb
mov
imul
enter
out
jbe
insl
sbb
dec
cmpsl
stos
ss
nop
aas
stc
sub
add
add
jl
aaa
add
leave
std
push
mov
cltd
cwtl
pop
jnp
inc
sbbl
mov
sti
add
push
adc
rcll
mov
popl
gs
adc
dec
pushl
adc
rep
aaa
fdivrs
xchg
outsl
mov
decb
jo
dec
cwtl
enter
pop
test
sbb
in
loope
fisttps
jb
out
gs
imul
popf
or
cmp
mov
lahf
dec
add
insb
dec
retw
hlt
inc
loope
mov
jmp
cli
pop
add
iret
fsubl
mov
ss
shlb
jge
repz
sub
mov
mov
pop
ja
insb
push
adcb
push
ljmp
pusha
adc
imul
fiadds
mov
adc
xchg
sub
dec
push
scas
rcl
dec
pushl
sub
sub
mov
cmpsb
adc
enter
push
fistl
sbb
sbb
dec
in
sti
lods
sbb
inc
pop
adc
xchg
or
inc
mov
fsubs
shll
orl
aaa
xor
and
add
in
add
rcrb
stos
test
push
add
lods
popa
adc
xor
cmpsl
mov
push
test
outsl
adc
sub
out
je
cmp
lock
xchg
or
fildll
outsl
filds
xor
ret
push
jle
inc
sbb
out
mov
cwtl
sbb
sbb
stos
add
mov
xlat
pusha
rorb
mov
sbb
leave
dec
xchg
pop
mov
or
jecxz
pop
or
mov
scas
sbb
mov
jg
hlt
sub
mov
xor
pop
jmp
pop
and
jle
jp
mov
aaa
mov
repz
and
sbb
add
pop
sbb
push
inc
aaa
cmc
and
fwait
adc
shlb
test
xor
xor
push
popa
jl
or
and
out
pushf
pop
out
xor
out
sti
sbb
sbb
out
mov
jo
xchg
aas
mov
pushf
lock
insl
or
xchg
push
movsb
loopne
xchg
add
fists
in
nop
lock
jle
enter
inc
into
mov
push
scas
inc
mov
stos
or
dec
push
lods
mov
pushf
push
lds
andl
adc
push
jmp
bnd
mov
jbe
inc
adc
push
jl
adc
jecxz
aam
int
add
adc
lds
mov
sbb
sub
cli
inc
fimull
xor
pop
pop
test
inc
pop
jnp
mov
lea
lods
ret
sbb
and
pop
andl
mov
inc
addr16
mov
push
sub
pop
push
sub
or
jnp
mov
inc
inc
push
test
jbe
or
cmp
or
pop
aam
and
rcrb
decb
rcrb
or
mov
sbbb
mov
divl
icebp
sbb
aam
or
sub
dec
jnp
mov
mov
ds
adc
pop
mov
push
jmp
imull
lcall
push
inc
push
sbb
lods
mov
jnp
hlt
pop
cmp
adc
dec
test
xchg
shlb
mov
outsb
sbb
dec
sub
loopne
mov
rolb
dec
mov
mov
xchg
mov
inc
sbb
mov
out
stc
dec
popa
and
scas
mov
shrb
inc
mov
dec
or
subl
cwtl
xor
pop
xor
je
into
loop
or
dec
pop
jle
push
pop
xchg
ja
pop
mov
mov
mov
adc
pop
push
clc
fst
and
test
iretw
mov
xchg
pop
fwait
ret
hlt
pushf
repnz
mov
xor
fisttps
out
xlat
mov
test
mov
movsb
mov
sbb
sti
loope
gs
shll
int
jno
mov
push
jmp
push
test
inc
aaa
cltd
xor
mov
xor
pop
adcl
sbb
out
cs
sarb
xchg
mov
in
push
lcall
mov
fbld
cmp
pop
lods
and
cmp
stc
fidivl
and
int3
push
xor
out
addr16
es
mov
dec
mov
jp
pop
and
jns
clc
push
sahf
out
js
clc
clc
or
sub
cmc
xor
dec
mov
addr16
cmc
or
cltd
mov
inc
test
jae
jg
bswap
jnp
das
inc
fimull
mov
or
insl
cmp
bound
pop
rclb
test
dec
addr16
jle
add
lret
fcoms
cmp
sbb
out
fbld
popa
bswap
fimull
fldenv
add
mov
xchg
jecxz
orb
aaa
sarl
adc
repz
outsb
shl
jnp
dec
jmp
mov
imul
aaa
sbb
mov
jge
mov
out
push
inc
push
es
test
push
xor
dec
xchg
hlt
lods
rorb
pop
mov
pop
push
cmp
jne
dec
sbb
call
xlat
je
and
test
aad
iret
aad
inc
stos
add
lret
dec
pop
xlat
mov
sbb
dec
fiadds
pop
cwtl
scas
flds
push
push
push
test
orl
mov
or
pop
sbbl
jnp
cmpsl
and
sub
fstl
mov
adc
stos
and
inc
pushf
inc
pusha
inc
in
xor
pop
sbb
ljmp
or
cmp
es
dec
cwtl
imul
cltd
cmp
ja
and
mov
ss
imul
push
into
and
inc
push
push
in
test
mov
dec
pushf
fwait
mov
cli
clc
cmpsl
out
stos
out
sbb
mov
inc
xor
rcll
cmpsb
fistps
push
shll
jp
stos
ror
cmpl
aam
roll
add
arpl
arpl
pop
xor
cmp
pusha
adc
fwait
icebp
lret
push
movsl
push
aas
and
mov
lcall
mov
inc
mov
data16
push
cli
push
mov
cmp
shlb
mov
out
push
mov
push
fisttpl
pop
popf
pusha
ja
xor
xchg
adc
mov
ljmp
lods
ja
jmp
jae
popa
pop
leave
mov
pusha
int3
fstpl
xchg
mov
dec
push
js
and
inc
aam
adc
add
or
jl
adc
and
ja
xor
inc
cmp
or
inc
ficomps
inc
lret
dec
outsb
cmpsl
sub
cmpsb
shrb
movsb
sbb
xchg
aas
test
xchg
int3
lret
push
cmp
leave
pop
lcall
insb
sbb
inc
jp
jmp
aad
stos
insl
adc
sub
and
push
mov
loope
inc
es
pop
mov
cs
add
scas
adc
ja
mov
and
fldenv
dec
das
jecxz
push
push
fidivrl
jno
pop
adc
pop
xchg
aam
push
sahf
push
orl
inc
dec
mov
scas
xor
sahf
mov
bound
jge
adc
mov
fildll
div
out
out
and
ror
sbb
or
jne
xchg
fs
cmp
xor
mov
adc
inc
or
jmp
popf
jo
cli
mov
mov
pop
xchg
adc
shlb
gs
inc
imul
xor
sti
pop
sub
sub
lea
idivl
cld
sarb
push
mov
in
add
xchg
pop
stos
aad
divl
push
xor
xorb
mov
add
add
inc
int3
imul
inc
mov
aas
divb
cmpsb
mov
dec
mov
dec
cwtl
iret
test
in
push
cmp
jne
flds
adc
fcomps
cli
push
lret
sub
test
add
pushf
mov
pop
jg
push
out
fcoms
test
pop
adc
mov
mov
pop
jl
inc
aaa
imul
das
inc
subb
lcall
insl
mov
or
push
nop
idivb
out
xchg
jg
nop
add
mov
cmp
jbe
cmpsb
pop
jne
rorb
leave
xchg
int
push
jecxz
das
pop
jle
fnstcw
bound
cmp
andb
jp
mov
ljmp
inc
lcall
pop
xchg
int
xacquire
rolb
int3
or
scas
movsb
adc
pushl
dec
cmp
lea
hlt
test
in
xchg
cmp
nop
repnz
test
jg
rcrb
fcompl
inc
jl
inc
insb
lret
mov
mov
fidivrs
les
add
leave
mov
lahf
xchg
mov
es
or
mov
shrl
push
or
push
pop
ja
cld
js
jne
dec
fadds
inc
push
inc
fwait
rcll
and
jbe
jae
ja
mov
pop
pop
xchg
shrb
mov
and
lret
fcoms
jl
fisubl
xor
imul
clc
cmpsb
aaa
jg
clc
and
mov
push
xor
fwait
out
lea
popa
sbb
mov
out
shlb
mov
sti
lret
jp
rclb
lret
lock
repnz
outsl
nop
inc
jl
les
jb
cmp
or
gs
mov
ss
into
sbb
in
scas
addr16
cltd
test
sbb
and
movsl
fnstcw
test
pop
xor
pop
shr
in
sub
icebp
aam
dec
ret
or
adc
imul
mov
dec
mov
shlb
cli
xlat
sti
in
mov
sbbb
dec
dec
das
aad
dec
sbb
fldenv
pop
push
inc
mov
and
push
loopne
movlps
in
fs
lcall
in
das
js
jb
ljmp
xorb
mov
je
lcall
rdmsr
test
pop
push
aas
filds
dec
jb
mov
sti
jne
mov
xor
push
iret
dec
sbb
dec
mov
repz
mov
jae
add
sbb
push
jp
xchg
ret
dec
cwtl
pop
adc
mov
insl
imul
push
push
add
inc
mov
push
xchg
mov
mov
push
jnp
mov
mov
sub
stos
mov
sbb
xchg
clc
scas
pop
cmpsb
and
xchg
cmp
xor
in
adcb
cld
mov
into
adc
cmp
push
mov
cmpsl
adc
jp
insb
mov
xlat
ja
test
sub
scas
xor
push
add
aaa
mov
lcall
jl
in
and
iret
clc
push
xlat
js
ret
lcall
imul
rcrb
lcall
test
cmp
loopne
or
add
popa
jecxz
inc
inc
add
loope
cmp
inc
nop
inc
mov
cwtl
sbb
lcall
arpl
mov
mov
mov
sbb
out
ds
hlt
iret
insb
in
stos
push
sbb
mov
adc
sub
and
lock
stc
lods
dec
sub
movsb
mov
xchg
dec
fcmovbe
fsubl
mov
adc
cmpb
inc
inc
iret
push
add
fisttpll
in
lock
inc
addb
adc
clc
sbb
js
dec
rorl
xor
fsubp
add
cli
sub
jmp
fs
mov
add
push
dec
cmp
call
mov
dec
jp
pop
mov
xchg
mov
or
mov
repz
pop
lods
mov
out
sub
lret
cmp
dec
das
imul
pusha
pop
jle
xchg
cmp
xchg
mov
or
fdivp
fistl
insl
sbb
ds
out
cmpsb
pushf
inc
addr16
jno
xor
push
mov
sub
addr16
data16
xor
push
inc
shrl
push
loop
aam
jne
add
icebp
mov
outsb
push
xor
scas
or
mov
rclb
and
arpl
mov
fst
es
out
push
add
repnz
jns
ret
xor
and
fyl2xp1
decl
and
jbe
sub
lds
lds
icebp
or
mov
les
pop
leave
and
rolb
and
jmp
push
and
stos
out
lods
cmp
cmp
stos
ret
jo
subl
loopne
mov
stos
add
mov
xor
or
repnz
mov
clc
mov
mov
cwtl
push
sbbl
mov
sbb
or
icebp
inc
mov
add
faddl
loopne
fcomps
xchg
or
into
dec
in
add
leave
mov
add
fbstp
js
jnp
dec
sub
fsub
jno
mov
pop
mov
add
jb
je
push
pushf
push
adc
nop
fimuls
xchg
push
inc
jne
daa
jp
jnp
negl
mov
sbb
inc
aaa
iret
push
sti
imul
sbb
xor
push
cmpb
lods
mov
mov
push
fistps
enter
gs
mov
adc
fstps
sub
push
ljmp
jb
adc
adc
mov
dec
ret
sub
pop
and
shlb
dec
out
sbb
rcr
enter
xchg
scas
int3
lret
insl
in
add
test
mov
test
test
aam
push
mov
int
pop
pop
fwait
inc
out
out
pusha
xchg
or
push
add
hlt
xorl
push
add
iret
xor
test
jle
xchg
fcoml
test
sub
adcb
jbe
ret
jge
jp
sbb
sbb
sub
push
mov
mov
sub
jl
lock
push
or
push
lret
jg
out
je
add
and
mov
clc
lret
inc
cmp
adc
mov
fnsave
pop
xorb
cmp
out
mov
insb
hlt
sub
cmp
inc
pop
mov
xchg
lods
pop
mov
jo
jl
sar
push
sub
sbb
test
inc
sbb
insb
jl
mov
std
xor
arpl
add
mov
mov
pop
xchg
jge
imul
outsl
jl
out
mov
jbe
sbb
test
outsb
push
insb
daa
add
test
dec
sbb
nop
mov
imul
pop
add
and
jbe
std
mov
negb
lret
or
adc
add
sub
jge
into
xchg
movsl
pop
std
mov
je
test
and
or
mov
xchg
adc
cmp
xor
stos
mov
es
mov
roll
push
adc
nop
je
aas
cmpsl
cmp
pop
cmpsb
ljmp
sub
cmp
push
jne
jg
daa
lods
test
mov
cmp
in
mov
aad
out
push
mov
aas
and
adc
inc
imul
push
cmp
mov
inc
lahf
and
jle
retw
fisubrs
imul
push
fprem
mov
or
loop
cmp
adc
leave
mov
or
mov
repnz
mov
adc
push
or
test
outsb
ds
push
cmp
les
out
roll
enter
add
adc
mov
lock
fs
sub
icebp
insl
hlt
push
imul
or
jmp
inc
jge
enter
ds
pop
aam
xor
mov
mov
mov
ljmp
js
call
gs
in
bound
push
jnp
mov
int3
fdivl
fs
inc
daa
icebp
or
ret
xchg
fstpt
push
data16
fs
int
add
pop
in
push
int3
je
xlat
sbb
push
push
cs
popf
xchg
aam
dec
fwait
repz
lods
or
outsb
pushf
cmp
orl
mov
pop
cmpsb
sbb
dec
addr16
test
clc
push
in
scas
or
sbb
decl
mov
mov
pop
cmpb
adc
dec
inc
xchg
jo
ficompl
jns
and
mov
dec
push
pop
fidivrs
stos
cmpsl
add
rol
jle
test
shrb
call
lock
pop
daa
subb
sbb
testl
inc
mov
mov
inc
cltd
sub
fs
ds
fdivrs
push
jge
call
sbb
add
mov
mov
jp
mov
jl
add
pop
sub
popf
movsb
pop
ret
mov
xchg
repnz
mov
jp
jno
icebp
pop
adc
icebp
mov
dec
sar
adc
clc
sbb
test
cmpsl
jl
or
ljmp
dec
sub
mov
cli
mov
fucomip
fsts
mov
mov
pop
sub
cmp
test
fmul
stos
push
or
push
stc
pop
fs
mov
sub
push
shlb
or
mov
sub
mov
dec
jmp
and
inc
aad
xor
lods
adc
xchg
sbb
jne
sarl
mull
mov
xchg
pop
daa
popa
mov
in
sbb
dec
ds
dec
cwtl
pushf
lret
push
xchg
jg
sbb
repz
nop
stos
loope
fucomi
insl
rcr
push
sbb
scas
fidivl
or
push
icebp
movsb
stos
jge
out
pop
mov
push
fwait
insb
sub
jnp
mov
xor
sti
adc
lcall
mov
movsl
fstps
mov
pop
or
enter
das
outsl
frstor
fstl
cld
int3
sub
xlat
push
fcoml
jbe
inc
push
sbb
add
repz
or
xchg
popf
cmp
jbe
in
jl
int
sbb
add
mov
add
js
push
mov
and
sub
enter
jmp
ret
jl
ss
cltd
daa
out
mov
ret
sub
ret
jg
inc
pusha
jl
cs
add
ss
dec
jecxz
ror
push
lock
stos
daa
sbb
fs
fldl
mov
mov
test
mov
lods
sbb
outsb
dec
popa
mov
xchg
pop
pushf
mov
mov
sub
test
jmp
or
cmpsb
push
scas
xchg
ficomps
jb
add
mov
adc
mov
pop
cmp
jp
rorl
jbe
outsb
mov
mov
sub
call
test
pop
adc
cmp
pusha
mov
cmp
mov
fdivl
cs
lods
mov
push
xchg
cmpsb
repnz
mov
jae
mov
pop
add
cli
insl
xchg
or
adc
jle
mov
cmpsl
sbb
dec
rclb
mov
xchg
loope
mov
sbb
popa
pop
test
call
pop
in
jne
mov
sbb
out
test
cld
xchg
ret
ret
fwait
movsl
push
inc
inc
aad
mov
inc
xchg
xchg
pop
push
fstcw
outsl
icebp
cwtl
dec
lret
aam
sahf
ret
push
dec
repnz
mov
xchg
cltd
dec
int3
sub
sub
mov
xchg
sbb
mov
jnp
dec
out
shlb
daa
nop
add
jae
sub
movsl
mov
xchg
adc
sti
add
push
mov
or
out
lret
mov
pop
out
sbb
jge
sub
fbld
cmc
fs
jmp
insb
inc
or
pop
sarb
scas
mov
push
mov
mov
add
sar
out
call
and
je
gs
mov
and
mov
fists
imul
mov
sbb
aas
seto
testl
movsl
sbb
fisttpl
mov
or
jg
js
ffree
sub
sub
loopne
and
sub
mov
or
jb
je
dec
fdivr
mov
add
add
jle
cmp
pop
dec
inc
xchg
xor
rol
es
mov
cmpsb
xchg
pop
call
jp
xchg
inc
sub
add
in
inc
and
aam
cmp
mov
repnz
sub
mov
in
sbb
add
add
mov
fdivp
add
sti
lahf
cld
add
inc
jae
inc
add
push
xchg
iret
ret
mov
movsb
pop
add
test
inc
pop
lahf
cmp
repz
and
shll
inc
cmc
in
mov
mov
in
test
or
lock
add
mov
test
inc
inc
dec
arpl
icebp
xchg
clc
lret
aam
inc
cmp
sub
lods
loop
mov
inc
ss
and
pop
add
mov
aam
andnps
jg
jb
or
and
ror
dec
loope
jl
mov
adc
mov
inc
loopne
pop
mov
sub
inc
mov
pop
shl
mov
das
xor
mov
dec
push
push
cwtl
or
insl
jle
mov
pop
push
adc
and
and
adcl
stos
nop
js
xchg
xchg
int3
jne
rclb
das
pop
lea
sbb
xchg
cmp
mov
adc
cwtl
into
push
or
pop
jmp
adc
aam
cld
mov
inc
pop
dec
dec
cwtl
jmp
xchg
dec
into
popa
sub
xchg
jbe
movsl
enter
or
in
aam
cmp
fs
ret
lods
hlt
lods
cli
bswap
mov
cmp
shlb
xor
sarb
adc
in
adcl
lret
mov
les
cltd
insl
or
push
leave
push
mov
or
imul
cmp
aad
mov
xor
xor
push
or
iret
dec
ret
loop
mov
or
out
or
flds
cmp
test
lret
add
in
insl
inc
pop
fidivs
adc
jb
lock
fdivr
fidivrl
cmp
mov
scas
sahf
xchg
dec
hlt
cmpsl
out
int
mov
mov
icebp
mov
ficomps
sbb
es
outsl
pusha
and
cmpsb
adc
mov
lcall
push
roll
ljmp
and
lcall
jge
fistl
insb
das
outsl
and
or
lret
out
jle
iret
mov
cmc
mov
sub
das
push
push
out
xchg
or
in
sub
pop
sbb
rolb
xlat
pop
sub
ret
and
push
notl
ret
int
jno
pop
mov
stos
sbbb
cmp
cmc
mov
dec
lea
repnz
sar
dec
push
adc
push
mov
and
shrl
adc
sbb
cmp
into
cmp
inc
faddp
lret
xchg
inc
cmc
daa
push
mov
lods
cli
jae
loope
and
or
pusha
inc
push
lret
xchg
js
mov
push
sbb
pop
fidivrl
ret
and
popf
inc
xchg
fimull
cmpl
imul
insb
xor
xor
or
xchg
sbb
xchg
jge
lods
xchg
ss
stc
mov
sub
mov
and
out
adc
jb
pushf
incb
mov
pop
mov
testl
fcmovnb
aad
push
aas
imul
mov
mov
test
rcl
dec
aad
neg
or
dec
popf
add
rcll
or
push
inc
cs
out
div
sbb
push
fistl
loop
pop
xor
push
add
xor
push
mov
sub
ret
ds
insl
lea
pop
sbb
lea
stc
aad
pop
cmp
xor
movsl
divb
gs
mov
insb
pop
mov
dec
mov
rcll
adc
push
or
lret
pop
mulb
lods
sub
fcmovbe
mov
mov
pop
xor
cmp
push
cmp
enter
jnp
nop
or
shlb
lret
xor
mov
push
lcall
xchg
xchg
je
mov
pushf
rcr
lods
jno
out
dec
dec
mov
das
mov
dec
jle
cmpsb
popl
stos
sub
std
mul
pop
mov
xchg
sbb
xchg
shll
jnp
fisttpll
aas
out
xchg
icebp
stos
push
lods
test
mov
fld
mov
push
jp
mov
pop
lahf
dec
int
scas
test
xchg
stos
sahf
ss
fcom
inc
add
popf
mov
push
xchg
pop
lahf
mov
mov
js
icebp
push
sbb
dec
fisubs
and
ljmp
xlat
iret
pop
xor
roll
frstor
sbb
sbb
push
pop
repnz
mov
cmp
leave
int3
or
fs
xor
or
dec
orl
bswap
lcall
lea
rorl
mov
mov
xchg
in
dec
xchg
enter
loopne
or
cmp
push
jbe
xchg
dec
movsl
cli
xchg
dec
es
sbb
and
pop
jl
repnz
cmp
mov
or
dec
jg
adc
jne
enter
inc
mov
sbbl
enter
xor
into
mov
mov
movsb
icebp
outsb
and
xor
inc
dec
mov
test
adc
cmp
cwtl
repnz
mov
testb
cwtl
sbb
pop
aad
push
fcmovnu
jno
es
sub
std
or
js
dec
imul
fadds
mov
mov
outsb
mov
adc
xchg
push
push
mov
jnp
cmpsb
xchg
cwtl
dec
lock
clc
jae
lods
outsb
jmp
mov
xor
das
or
mov
sti
mov
and
pop
dec
add
jns
das
mov
and
in
push
out
or
push
arpl
insb
xorb
sub
pop
in
daa
leave
fldl
inc
sti
rorb
cmp
mov
mov
cmpsl
dec
and
lret
rclb
and
mov
ja
in
cmp
fmuls
sbb
xchg
in
push
mov
mov
pop
test
xchg
sbb
mov
sbb
pop
pop
lret
lock
cmp
in
or
adc
aad
mov
dec
pop
adc
mov
int3
mov
pop
stc
push
fs
arpl
dec
inc
add
fidivs
adc
clc
lret
ror
sbb
sub
push
stc
and
cmp
outsb
cmp
inc
jp
and
sbb
xchg
stos
and
push
mov
xchg
mov
jg
js
lea
pushf
mov
imul
add
inc
mov
push
test
push
lret
lds
mov
pop
pop
xchg
mov
mov
dec
xchg
sub
shlb
mov
add
dec
pop
loopne
sbb
push
inc
test
or
jmp
call
aad
adc
add
out
or
push
out
or
dec
sbb
jg
mov
ds
pop
rcl
jmp
or
sbb
in
jo
xor
xor
push
jo
mov
adc
hlt
orl
mov
mov
mov
push
out
xor
ja
cwtl
aas
xchg
cli
push
xchg
fidivs
sbb
mov
ss
loop
popl
mov
div
insb
sbbb
ffreep
in
adc
out
dec
repz
clc
xor
adc
nop
shrb
insl
push
lret
lods
cmc
cwtl
in
jge
sbb
dec
rcrl
cmp
mov
dec
push
das
insl
ss
aam
sahf
inc
cmp
push
sahf
sbb
rolb
iret
js
aaa
jne
or
in
xchg
cmp
pop
mov
out
int3
adc
mov
jp
imulb
pop
xlat
mov
in
arpl
and
mov
dec
addl
aaa
enter
ror
xchg
cli
mov
push
and
xchg
push
xor
add
sahf
mov
rcr
das
fwait
inc
xor
and
push
adc
mov
jnp
aaa
mov
addr16
add
mov
andl
dec
repnz
pop
out
popa
inc
out
cs
aaa
dec
sbb
xchg
cmpsb
mov
push
fsubrp
inc
call
hlt
lret
xchg
lock
int
sub
pop
shl
ret
add
aam
repnz
cmc
and
sub
mov
test
jecxz
and
mov
sbb
fld
mov
roll
aam
push
cmp
imul
andb
add
cmp
push
mov
insb
xor
dec
jge
ss
mov
stos
loope
les
movsb
repz
orb
mov
bound
mov
jne
xor
xchg
gs
mov
test
addl
sub
xchg
push
or
scas
nop
cwtl
pop
jge
push
jnp
mov
mov
push
scas
int
mov
lods
dec
cli
add
aas
xchg
int
fstpl
mov
jmp
mov
movsb
xchg
pusha
aas
xchg
fs
xchg
iret
mov
popf
mov
and
push
test
push
imul
ret
push
repz
jp
push
insl
pop
inc
outsb
add
adcb
clc
xlat
xchg
adc
mov
stos
xchg
xchg
out
mov
jo
pop
jb
bswap
push
lea
nop
pop
jmp
mov
dec
push
shll
and
sti
pushw
daa
xor
out
mov
pop
sub
jl
jmp
jb
xchg
fisubl
loope
popa
dec
ret
dec
lret
call
stos
xor
js
mov
dec
push
jmp
ret
jo
aad
jns
cmp
bound
jp
or
leave
jl
repnz
repz
mov
cmpl
sbb
cld
add
push
fimull
push
xor
addr16
rorl
pop
dec
sub
mov
mov
mov
std
inc
insb
jmpw
fldl
mov
cmc
cmp
and
shlb
adc
pop
dec
mov
adc
mov
xchg
and
cs
or
test
lods
xchg
cmpsl
enter
fiaddl
int
inc
fisttps
stc
insb
jp
idivl
jb
xor
das
outsb
mov
jne
sub
stos
xchg
gs
test
fisubrl
mov
enter
lock
or
lret
es
call
lahf
stos
insl
loope
and
push
jecxz
loop
mov
push
popl
jnp
xor
addb
fsubs
xchg
jns
push
scas
mov
adc
scas
insl
cmpsl
mov
pop
or
ret
cmp
sbb
adc
sub
lahf
mov
mov
rorl
adc
inc
dec
add
xor
jne
test
push
mov
lds
add
mov
out
fmul
push
xor
out
out
lods
mov
lds
movsb
add
call
or
pop
cmp
mov
clc
jge
xchg
xchg
testl
xchg
adc
xor
mov
xorb
xchg
sbb
movsb
xchg
xchg
fmulp
xlat
cli
xor
leave
cmpl
call
and
rcl
arpl
push
cltd
jno
xchg
cmp
jae
inc
data16
subb
mov
pusha
sub
fs
push
imul
or
pop
add
dec
out
daa
jl
sub
sbb
or
loope
or
mov
pop
cltd
jecxz
and
pop
mov
xor
fisubrs
aas
push
call
popa
notl
jno
sub
inc
inc
ficoml
mov
sbb
sbb
jno
pop
fistpll
mov
dec
xchg
pushf
push
jnp
in
ficoms
xor
faddl
sub
call
cmp
ss
pop
mov
and
add
mov
testb
ja
adc
in
dec
stc
out
mov
shl
pop
sub
push
jmp
out
push
subl
jo
and
popa
pushf
lock
fs
add
rorl
movsl
pusha
sbb
shlb
lret
xlat
js
fimuls
pop
mov
psrad
sbb
jmp
in
aas
out
int3
mov
sahf
cmp
sub
movsl
dec
pop
fimull
shl
call
dec
sub
mov
sbb
push
inc
icebp
negb
jmp
cmc
sbb
pop
notl
push
repz
jns
push
fisubrs
jns
fstpt
add
sub
loope
mov
xor
loopne
add
pminsw
pop
and
test
jbe
xchg
in
xchg
fwait
mov
test
mov
xorb
cmp
push
xor
roll
xchg
jnp
das
push
into
lcall
icebp
fsubrp
jae
out
mov
rcr
lods
dec
aas
idiv
test
mov
jp
dec
fisttpll
cltd
inc
xchg
mov
int
add
sbb
and
jge
mov
bound
fcoms
jl
fldenv
je
int
cmp
orl
stc
jmp
scas
cmp
jge
rorb
and
ljmp
lods
adc
arpl
xor
cmp
add
mov
nop
xorw
jns
pop
test
aam
sub
pop
dec
mov
dec
cmp
js
xchg
inc
es
rcl
jno
xchg
jne
push
movsb
and
sub
ficoml
decl
push
mov
fsubrl
add
fiaddl
rcrl
push
sbb
xor
jp
sub
mov
es
popa
xlat
jmp
and
mov
jo
push
imull
xor
lock
or
xchg
mov
loope
cmp
add
pop
dec
add
add
cmp
movsb
jge
stos
and
rcrl
xor
in
pop
enter
inc
movsl
push
sub
pop
xor
and
xor
cmp
mov
jmp
add
cmpsl
lods
cmp
jg
sbb
xchg
lret
inc
inc
shr
mov
out
mov
push
cmp
inc
ds
and
fwait
xor
add
xchg
cmp
cwtl
stos
adc
ficoms
iret
and
daa
jae
movsb
aas
pop
lret
lods
or
mov
pop
cmp
and
popl
repnz
aam
js
or
mov
loopne
inc
es
xor
add
mov
and
gs
outsb
in
add
incb
or
sbb
xor
mulb
fistpl
imull
cmpsl
mov
fldenv
add
aas
xchg
test
bound
cmpsl
stos
sub
xchg
jle
std
xor
pusha
jo
cwtl
inc
pop
jb
out
push
xchg
ret
cmp
sub
dec
ljmp
int3
xchg
xchg
add
dec
adc
ror
sbb
pop
jns
sbb
jae
lea
inc
rcrb
jg
out
push
lock
loopne
dec
pop
or
sub
add
pop
xor
inc
inc
incb
jne
mov
or
out
xor
rcll
rcrl
ret
mov
shl
ss
faddp
xchg
mov
repz
add
lods
push
pop
insl
mov
stc
lahf
out
dec
in
mov
mov
add
fildl
adc
cli
add
out
push
pop
ss
imul
stos
shrb
or
fsubp
sub
pop
add
in
xchg
hlt
cmc
mov
mov
cmp
push
xor
add
or
sar
pop
jne
sahf
sarb
xlat
xchg
shrb
rorl
jnp
mov
pop
ficompl
repz
leave
ds
in
mov
nop
loopne
pop
sbb
jo
mov
loopne
shll
rclb
inc
lods
das
jo
and
push
hlt
mov
das
mov
stos
inc
pop
dec
push
fwait
movsl
cmp
dec
test
xchg
ret
nopl
lahf
sub
loope
mov
pushf
mov
mov
or
jecxz
out
inc
push
stos
aad
push
xchg
push
sti
fistpl
xchg
loopne
adc
ds
dec
ss
inc
test
dec
pop
xchg
jns
cmp
mov
dec
addr16
jge
popf
imul
mov
int3
push
xchg
sub
pop
or
sarl
adc
push
or
and
xlat
pop
xchg
xor
mov
xchg
fcoml
out
shr
cmp
adc
movsb
push
sbbb
pop
arpl
jp
in
pop
lret
fnstenv
sbb
jp
into
pop
jl
std
das
mov
jb
stc
pop
or
xchg
inc
mov
inc
push
sbb
inc
add
iret
mov
sub
daa
and
fwait
scas
xchg
insb
call
ficomps
arpl
repz
ret
imul
sti
aaa
cmp
xchg
push
fs
test
pop
sbb
jecxz
scas
sub
std
test
lret
fs
scas
adc
lock
cmpsl
shll
pop
outsl
rcrl
push
cmp
or
inc
xchg
loop
pop
cmp
xor
cmpsl
cs
addb
inc
rolb
sbb
inc
dec
rclb
xor
xor
stos
sbb
mov
aad
mov
sub
pop
aas
mov
int3
and
cmp
mov
pop
mov
jl
cmp
and
movsl
cltd
lea
lods
mov
or
loop
push
fcomps
jmp
imul
in
rcl
pop
pop
and
adc
and
jl
loop
arpl
inc
aad
jae
mov
adc
popa
bound
jge
out
or
jecxz
nop
dec
into
out
and
insl
cs
push
mov
and
xchg
sub
lea
xchg
dec
mov
jge
pop
xchg
jg
xchg
xchg
and
pop
rorb
jl
mov
movsb
mov
leave
jmp
in
out
mov
sub
adc
sbb
movsl
inc
jno
push
mov
mov
js
out
adc
cmpsb
jecxz
lahf
adc
jg
mov
out
sbb
adc
or
or
pop
jle
sub
pusha
dec
sub
adc
mov
leave
cmp
dec
pop
and
inc
aad
push
scas
pop
sbb
test
jno
or
adc
dec
fbld
adc
push
sbb
fdiv
outsb
or
call
cli
lods
dec
fwait
cmpsl
loopne
push
hlt
jno
sarb
inc
cs
scas
xchg
mov
loop
iret
push
insl
das
orb
fiaddl
popf
xchg
popfw
jnp
aas
fsubrs
in
add
jo
insl
xor
les
add
loope
sarb
inc
cs
inc
movsl
and
mov
dec
or
xor
cmpsb
push
cltd
mov
gs
js
test
jmp
fisubl
incl
into
xor
lods
adc
jae
adcb
in
sbb
popa
push
shll
lods
insb
cli
add
and
adc
jb
lea
daa
stos
pop
shlb
ljmp
orb
out
cltd
xchg
xchg
and
adc
std
cmp
enter
jmp
cld
xchg
in
jge
xor
nop
lds
inc
jecxz
dec
jecxz
mov
subb
cld
mov
push
aaa
scas
add
rcrb
inc
push
sahf
and
lods
and
adc
movsb
fistpll
je
mov
std
inc
mov
pop
and
fs
push
stos
xchg
loop
imul
jbe
ja
pop
pop
in
mov
xchg
fsubrs
scas
loop
test
jle
test
cmp
into
xor
sbb
ds
xor
or
and
popa
cmpl
add
jle
subb
cs
cmp
xor
insl
sbb
int
xchg
lods
adc
insl
ficomps
loop
pushf
and
jae
sbb
pop
mov
and
shlb
adc
daa
loope
stos
aad
fsubr
adc
mov
adc
or
xchg
and
or
inc
lret
dec
call
aas
mov
lret
cmp
mov
repz
stos
pop
sub
ljmp
cmp
das
mov
fidivrl
jl
or
ret
push
jge
mov
mov
jbe
ret
testb
push
fwait
in
fldl
push
out
in
jge
out
push
dec
repnz
xor
xor
pop
andl
shrl
and
mov
loope
pop
movsl
fimuls
sub
push
int
xor
push
mov
adc
cld
rcrb
add
inc
das
inc
pop
fwait
add
stos
push
dec
ret
cmp
mov
sti
cmp
add
subl
les
mov
test
push
std
jo
sub
loop
pop
sbb
xchg
not
das
mov
xchg
xchg
inc
dec
push
out
adc
xchg
mov
cmp
repz
out
xchg
ljmp
aam
test
xor
push
les
call
mov
rcrb
inc
ret
cld
adc
xor
aaa
rclb
in
rol
pop
pop
bound
rcll
adc
rol
xchg
fiaddl
sub
cs
cmp
mov
mov
sub
pop
adc
dec
and
insl
int
sub
lcall
push
out
loopne
or
cmc
fistpl
push
shlb
cmp
mov
xchg
dec
push
repnz
loop
into
icebp
pop
push
out
dec
je
ficomps
rcll
xchg
adc
stc
cld
cmp
sub
pop
test
icebp
cmp
jae
or
movsl
mov
hlt
push
add
in
popf
arpl
mov
xor
lods
sub
pop
push
jo
jb
outsl
push
fidivs
dec
icebp
lahf
push
shr
push
or
mov
repz
popf
loopne
mov
mov
adc
ljmp
outsl
pop
aad
add
ss
sub
mov
add
inc
andb
lods
pusha
test
loope
dec
insb
pop
or
jne
andl
mov
mov
push
adc
cmp
lods
jb,pt
push
jnp
adc
xchg
xchg
sbb
fisttpl
jns
cmp
leave
jg
sub
repz
mov
int3
dec
cmp
push
cmp
aas
add
outsb
int3
pop
daa
andb
out
and
jns
adc
push
push
leave
dec
testb
push
nop
xlat
ss
adc
dec
pop
mov
inc
pop
iret
dec
xchg
mov
ja
push
mov
test
mov
fxch
inc
sbb
lcall
sub
jo
mov
leave
fldl
dec
add
jg
mov
out
lcall
jge
rolb
out
sti
push
jmp
std
addr16
outsb
jnp
sti
insl
push
cld
aas
jae
and
or
or
test
cmc
cmp
lock
inc
imul
icebp
shlb
sub
push
rorl
pop
pop
jg
sub
dec
mov
xchg
movsb
notb
fildl
leave
nop
addr16
out
int3
gs
or
loope
mov
jnp
cmc
fwait
pop
pop
pop
mov
adc
fs
mov
xor
fucomi
into
pop
lds
ret
dec
push
push
cmpsb
stc
and
sub
push
sarl
pop
jnp
mov
lahf
aas
add
into
xchg
and
lods
cwtl
pop
cmp
out
scas
icebp
aad
js
mov
dec
pusha
or
sub
xchg
inc
pop
jp
bound
add
outsl
cli
aaa
push
into
dec
push
insb
xor
dec
and
dec
aad
inc
sarl
pop
dec
repz
push
cli
xor
jb
mov
cmp
lods
add
orl
js
inc
inc
jecxz
insb
jle
sbb
enter
ret
xchg
mov
cmc
dec
test
mov
or
xor
mov
std
pop
stc
dec
cmpsb
and
movsl
adc
call
mov
mov
or
sub
addr16
fcomps
cwtl
xchg
mov
ds
pop
lds
stos
and
in
addr16
aam
lret
repnz
pop
insb
sub
cmpb
out
add
mov
jl
mov
or
xor
add
roll
jbe
xor
negb
lock
xchg
dec
cli
rorl
jne
push
push
sbb
push
imul
out
dec
push
icebp
out
add
aas
pop
aas
mov
inc
in
out
ds
mov
sbb
sbb
push
mov
fcmovnb
rol
inc
aad
xchg
dec
add
and
pop
and
add
jno
xchg
incl
mov
not
mov
test
shr
add
xchg
pop
scas
ret
loopne
rcrb
xor
cmp
or
test
call
fs
mov
or
ljmp
std
daa
mov
shlb
push
dec
es
cmp
jae
pusha
sub
std
imul
cs
js
mov
data16
cmp
adc
push
loop
mov
xlat
loopne
call
dec
je
mov
cmpsb
push
jecxz
jb
cld
gs
jbe
rorl
ljmp
rcrb
popl
fldl
jno
sbb
jecxz
gs
push
pusha
cmc
enter
sbb
fcmovnbe
push
rcll
lea
jo
add
test
inc
leave
ret
mov
in
xchg
hlt
mull
mov
or
jbe
push
push
jb
popf
cld
cmp
repz
stos
push
aaa
shll
cltd
outsb
add
push
inc
fisttps
pop
in
out
sti
bound
push
add
cmp
int3
fstpt
test
fimuls
jo
sbb
jno
stos
inc
jbe
mov
ret
dec
adcb
adc
scas
push
ss
inc
adc
dec
lods
add
mov
sar
mov
fnstcw
cmp
lret
sbb
xor
dec
and
or
leave
inc
daa
out
pushf
push
jg
sub
js
adc
xor
ret
push
inc
mov
jns
xor
push
lea
fcomi
push
mov
orl
push
mov
dec
inc
or
daa
dec
loopne
imul
pop
sub
pop
lret
aad
pop
lret
sbbb
pop
jl
pop
dec
sbbb
rcrb
loope
cmp
fisubrs
out
push
loopne
lods
adc
repnz
cmp
sbb
or
sub
test
out
xor
sbb
jl
outsl
mov
adcb
clc
push
fildl
out
sub
jno
aam
repnz
movsb
mov
jnp
and
adc
sahf
add
ret
cli
test
and
imul
aam
jecxz
mov
mov
mov
push
mov
cmc
pushf
pop
inc
or
outsb
rol
stos
addb
mov
mov
xchg
fistps
test
data16
out
inc
and
shlb
add
add
mov
out
mov
lret
pop
mov
adc
push
or
mov
fwait
mul
stos
ret
sbb
rcr
movsl
gs
lret
sbb
jp
dec
lock
or
fstl
cld
cld
mov
out
out
or
in
xchg
ljmp
popf
js
out
push
add
mov
mov
sbb
adc
out
popf
cltd
into
sbbl
cwtl
sub
sub
stc
icebp
push
xchg
inc
inc
mov
push
push
out
bound
icebp
cmc
test
je
xchg
test
sbb
aas
in
insl
jae
jno
adc
in
jns
and
fisubrl
push
push
mov
out
or
push
iret
xor
fistpll
dec
cmp
mov
stos
fiaddl
scas
pop
mov
xchg
mov
push
mov
cmpsb
aam
add
pushf
das
xor
loopne
in
cmp
ds
add
fidivrl
sarl
scas
shrl
mov
and
add
lock
sbb
add
sub
cltd
pushf
sub
enter
push
add
ljmp
dec
call
mov
xchg
or
gs
xchg
sbb
insl
jmp
or
push
xchg
dec
fdivrs
pop
addr16
mov
int
jecxz
and
imul
pop
xchg
and
nop
push
lds
xchg
or
mov
rclb
bound
jbe
push
push
cmp
int3
lds
movl
and
test
mov
imul
jbe
pop
lret
inc
sub
jnp
das
es
je
fnsave
imul
or
fdivp
enter
jmp
xchg
les
lods
xchg
ss
imul
fadds
in
pop
bound
insl
repz
pop
or
sbb
pusha
adc
shll
incl
mov
mov
es
inc
pop
mov
into
lods
xchg
push
pop
dec
in
test
xor
jne
jg
mov
hlt
repz
js
xor
jmp
adc
dec
inc
nop
mov
das
inc
clc
cmpsl
adc
js
icebp
stos
stos
jb
loop
xor
pusha
sti
out
mov
mov
jge
test
or
out
xchg
mov
dec
loopne
imul
movsb
add
xor
out
stos
movsl
or
or
xor
int3
cwtl
andl
movsl
test
sbb
pop
out
mov
scas
out
lock
push
loopne
aad
out
nop
pop
add
jg
ja
mov
movsb
mov
mov
movsl
adc
push
sbb
adc
dec
les
xchg
sbb
cmpsb
adc
sbb
int3
shll
testb
fwait
adc
sbb
shlb
enter
inc
hlt
sti
sbbl
mov
jp
lods
jb
sahf
sbb
in
inc
das
and
push
aas
add
dec
lds
ss
daa
push
cwtl
sahf
test
xor
mov
mov
pop
gs
in
push
out
insb
aam
nop
into
sbb
iret
fistps
jecxz
mov
xor
xchg
loop
and
imul
sub
inc
xchg
and
mov
add
xchg
ljmp
xor
cmp
rorb
test
dec
loop
insl
dec
fidivl
jae
leave
pop
shrl
jle
pop
xchg
lahf
add
mov
mov
sbb
or
lods
mov
mov
fidivl
xchg
lods
add
js
test
pop
xchg
les
push
xchg
sub
mov
out
jmp
xchg
hlt
stos
push
sub
scas
jo
dec
out
ret
cld
push
jbe
add
adc
in
lret
mov
daa
xchg
mov
js
ret
adc
xchg
mov
add
es
imul
loopne
stos
jno
sub
pop
scas
xor
lods
jo
gs
inc
orl
repnz
mov
jge
cmp
pop
jg
xor
out
xor
mov
test
jecxz
adc
daa
scas
xchg
sub
ja
mov
and
test
out
pop
or
out
push
mov
lea
cmp
in
icebp
jecxz
sub
jl
decb
and
cmpsb
cmpsb
push
out
repnz
outsl
lods
jbe
inc
out
xor
jecxz
or
or
ficoml
pop
mov
xor
in
mov
mov
jl
or
jno
inc
div
jne
push
imul
test
pop
sub
mov
enter
movsl
aad
add
jno
xor
test
push
in
add
or
mov
int
ret
andb
movsb
dec
aaa
cmpsb
push
sbb
mov
cmpsb
sub
jno
xor
push
lcall
imul
sbb
pop
and
xor
cli
rclb
sbb
push
outsl
subb
lret
add
andb
iret
nop
cmp
cmp
jbe
jecxz
dec
xchg
stc
pop
sbb
clc
inc
lea
sarl
inc
jle
hlt
pop
adc
stos
sbbl
add
sbb
jl
jns
shr
fcoms
dec
xor
jne
dec
loop
scas
orl
cmp
and
int
adc
sub
lock
mul
adc
mov
add
mov
in
mov
divb
sub
dec
bnd
lods
xor
dec
jae
mov
repz
jmp
stos
dec
arpl
adc
push
pop
push
push
mov
mov
movsb
mov
arpl
roll
shr
xchg
stos
mov
mov
pop
and
sbbb
xor
cld
test
or
and
je
inc
call
add
mov
adc
mov
dec
test
pop
push
sub
sub
xor
clc
inc
and
aaa
scas
outsb
fisttps
ss
fcmovb
daa
xchg
push
js
inc
ror
ss
es
mov
xchg
lds
movb
xor
push
leave
add
pop
jne
mov
int3
icebp
cmp
cltd
fs
and
and
sbb
mov
mov
insb
adc
ficoml
je
stc
adc
pop
scas
mov
cs
fisttpl
sub
test
test
andb
mov
clc
sbb
bound
addr16
outsl
sti
dec
lahf
mov
mull
adc
cmpb
jmp
pop
sub
insl
les
loop
stos
xchg
sbb
jnp
pushf
push
pusha
negb
xchg
xchg
jno
or
dec
shll
outsb
jnp
icebp
pop
repnz
cmp
sub
insb
adc
jo
and
sahf
mov
mov
pop
and
pop
pop
idivb
inc
int
sub
popf
xchg
jnp
push
je
repnz
pop
popa
fisttps
xchg
lock
aaa
xor
mov
mov
outsl
sub
mov
push
xchg
int
adc
cmp
shrl
enter
scas
sub
das
jns
cltd
pusha
pop
mov
cmc
jno
mov
int
sahf
stos
xchg
daa
fs
stc
jl
jle
mov
test
pop
mov
test
push
jl
jo
ljmp
int
lahf
add
aas
std
mov
pop
xor
pop
enter
jbe
ss
sbb
aas
aaa
rcr
cwtl
ret
dec
dec
cmp
mov
mov
std
lea
and
and
pop
inc
cmpsb
jle
fnstenv
js
pop
push
fidivrl
or
fcompl
sbb
jp
mov
add
xor
imulb
nopl
mov
inc
test
je
imul
rclb
cmp
int3
repz
pop
and
and
cmp
cmp
xchg
fcomps
and
push
out
cmpsl
pop
jp
rcrl
jle
test
jns
xor
add
xchg
cwtl
sti
sbb
mov
aam
inc
subl
dec
ljmp
mov
cli
push
or
dec
pusha
push
test
mov
mov
cltd
mov
lods
dec
push
mov
movsb
or
jb
test
ja
xlat
jmp
subb
pop
xor
adc
das
sbb
mov
xchg
cmp
sub
cmp
sar
pop
aad
mov
call
jle
ss
or
fldcw
sbb
int
pop
popa
mov
jne
sub
enter
cmpsb
pop
inc
insl
push
popf
rol
idivl
inc
push
negb
cmc
and
imul
sub
adc
arpl
out
sti
popf
or
js
pusha
pop
repnz
int
inc
gs
adc
and
in
ljmp
mov
and
repz
add
fistpl
test
lcall
imul
inc
mov
scas
push
pop
jl
adc
insl
fdivrl
jns
out
pop
sub
pop
sub
sahf
dec
test
stos
push
xor
mov
lea
cmc
es
rcll
jae
mov
inc
sbb
dec
stos
adc
dec
adc
or
rclb
inc
push
jb
sub
or
in
aad
aad
cmp
ret
ja
scas
out
or
push
inc
xchg
testl
icebp
sbb
je
pop
mov
iret
inc
jge
je
xor
out
xchg
xchg
fisubs
xchg
inc
out
cmp
sbbl
in
xlat
es
enter
arpl
cwtl
push
fsubl
jecxz
mov
jnp
xorl
jmp
imul
push
loope
adcb
adc
or
xchg
imul
pop
cld
mov
xchg
out
shll
testl
push
mov
fadd
sbb
xor
mov
push
sahf
mov
dec
cltd
stc
icebp
push
shl
addr16
or
pop
jmp
jl
popa
pop
mov
dec
pop
push
sarb
repnz
and
xor
cli
adc
cltd
lds
in
xchg
push
pop
notl
data16
int
jmp
cmpsl
idivb
daa
inc
icebp
push
int3
movsl
cltd
dec
jecxz
cmpsb
or
pop
outsl
jne
addr16
js
cwtl
mov
ljmp
add
push
fisttpl
negb
mov
dec
lock
popf
loope
pop
aad
adc
imul
ret
sbb
cmp
xchg
cmp
stos
jecxz
adc
sbb
mov
jmp
cli
xorl
adc
shrb
into
mov
jae
pop
pop
aam
sbb
jne
push
or
stos
inc
in
xchg
mov
ljmp
mov
loope
sti
mov
lods
out
fdivl
xor
cmp
sub
fidivs
hlt
xchg
test
loopne
in
push
shl
dec
mov
mov
scas
fisttps
div
inc
and
roll
popf
and
xchg
loope
test
add
aas
dec
jecxz
sbb
lret
mov
pop
inc
fwait
int
jnp
or
fistpll
sbb
rorl
lods
mov
dec
or
mov
jns
loopne
inc
cwtl
outsl
jge
add
into
push
pminub
mov
pop
xor
insl
in
add
push
push
cmp
imul
xchg
fdiv
cld
mov
jle
in
cmpsb
cli
ret
repz
stos
adc
in
in
sbb
imul
fisttpll
scas
adc
mov
mov
out
xlat
sahf
into
std
lods
je
mov
mov
rolb
cmc
outsl
lret
loopne
push
int
sbb
mov
adc
adc
xchg
aam
sub
mov
cltd
mov
ds
mov
lds
push
add
pop
add
icebp
add
sub
adc
cli
lret
push
pushf
int
cmp
add
loop
daa
ret
push
push
sbb
inc
or
inc
dec
add
jae
jmp
cmpsl
sbb
fistl
add
or
fdivrl
pop
mov
adc
sbb
xchg
mov
and
leave
das
xchg
or
and
lcall
mov
std
cli
sbb
sahf
sbb
es
repnz
mov
sahf
test
push
std
arpl
imul
sub
bound
cmp
pop
cmpb
mov
sbb
jae
inc
pop
fdivl
ret
popf
and
push
mov
movsb
or
fcmovu
push
pop
jae
ljmp
and
cmp
lock
ss
dec
mov
adc
addb
and
sbb
std
mov
and
mov
push
sti
out
jne
xchg
scas
call
mov
repz
aad
mov
mov
lods
lods
dec
pop
xchg
movsb
nop
inc
pop
icebp
shrb
inc
fadds
call
adc
adc
push
sbb
xchg
ret
add
roll
push
rcrl
fistps
or
jbe
testl
test
add
cs
sbb
int
aas
repnz
arpl
cld
push
arpl
mov
adc
xlat
jle
mov
bound
out
add
js
hlt
faddp
mov
xor
cmp
clc
in
cmp
shlb
mov
mov
mov
or
sbb
clc
cmp
bound
cmp
push
and
xlat
inc
mov
fimull
jnp
sti
clc
cmp
or
xchg
mov
inc
jmp
sbb
subl
andl
xor
xor
and
imul
push
test
inc
adc
xor
je,pn
das
xchg
imul
rclb
nop
shrl
jecxz
cmpsb
cs
pop
stc
and
add
out
in
jmp
push
add
rclb
leave
sbb
xor
cmpsl
dec
inc
idivl
lret
popa
mov
loopne
pusha
xlat
adc
xchg
xchg
inc
jmp
xchg
repz
fistpl
test
cltd
mov
pcmpeqb
sti
pop
leave
adc
sub
jae
test
push
or
pop
jmp
jmp
adc
gs
jge
mov
enter
in
cmp
mov
gs
dec
sub
push
rclb
sub
mov
or
fiadds
decl
xor
repnz
sbb
imul
icebp
rcll
ret
mov
iret
aad
dec
xchg
sbb
or
inc
loopne
push
bound
lcall
mov
sbb
movsb
sbb
lock
push
and
inc
push
mov
cli
adc
cli
je
xchg
push
add
outsl
outsb
xchg
dec
xchg
jp
shl
xchg
cmp
add
or
pop
data16
xchg
adc
push
sti
and
insl
fcoml
pop
dec
cmpb
js
pop
pop
aad
fwait
xchg
sbb
incl
bound
cmp
mov
lret
cmp
rcrb
jno
das
jne
ret
outsl
shlb
subb
xor
add
aam
addr16
xchg
mov
fisttpll
inc
mov
or
pop
pop
mov
movsl
xchg
cmp
out
gs
inc
mov
or
push
xchg
filds
cmp
mov
jno
push
ja
pop
mov
push
cmpsl
repnz
sbb
pop
xchg
pushf
icebp
mov
inc
mov
cmovnp
sub
test
lds
pop
out
pshufw
fcoms
xchg
jns
mov
aad
sbbb
jno
xchg
es
push
mov
inc
imul
or
in
clc
pop
push
dec
xchg
in
lcall
idiv
dec
mov
add
jmp
sbb
or
dec
mov
mov
push
mov
es
outsb
mov
mov
mov
ss
ljmp
popf
stos
or
mov
bound
mov
mov
mov
mov
jne
mov
popa
test
mov
xor
mov
popa
scas
jae
mov
les
push
xchg
add
jp
fwait
mov
mov
cli
mov
jbe
mov
mov
inc
ret
and
shlb
outsl
push
ljmp
push
and
fldlg2
dec
mov
adc
adc
xchg
fistps
pop
inc
repnz
push
jecxz
and
mov
lahf
xchg
pusha
sahf
pop
arpl
mov
and
inc
push
fisubl
or
jmp
mov
push
pushf
xchg
dec
popaw
mov
adc
mov
in
mov
jge
aas
arpl
mov
cmp
and
ljmp
sub
ret
jle
dec
stos
cmpsb
lret
xchg
sub
lods
xchg
adcb
ja
add
push
mov
loope
mov
add
cmp
adc
inc
jp
aam
mov
and
pop
lcall
push
fmull
in
mov
mov
pop
mov
push
loopne
pop
mov
and
fwait
xor
jbe
or
int3
mov
sarb
sbb
daa
xor
xlat
stos
cmp
sub
pushf
stos
cmpsb
mov
mov
xor
dec
sbb
and
xlat
inc
lahf
jnp
pop
popf
data16
cmp
mov
int
xchg
xor
cmpsl
cmp
mov
pushf
cmpsl
mov
leave
pusha
mov
push
inc
sub
enter
daa
pop
jg
sti
xor
mov
xlat
dec
aam
xor
fcomps
pop
dec
sbb
cmpsl
in
sub
mov
push
push
mov
inc
mov
pop
enter
push
sub
or
and
fmull
cltd
mov
testl
inc
sbb
sub
rclb
outsb
call
nop
and
fwait
sub
ss
jns
sbb
out
add
in
in
or
push
lahf
fbld
pop
add
cmpsb
into
js
add
jns
testb
scas
cld
call
and
adc
xor
xorb
aaa
rcrl
mov
fs
jns
jae
jae
cmp
cli
xchg
xchg
fs
cmc
bound
adc
pop
or
jne,pn
cltd
dec
hlt
mov
adcb
mov
fdivr
pop
cmp
pushf
push
pusha
inc
dec
pop
dec
inc
push
dec
mov
aam
shl
pop
in
jns
mov
lods
xchg
mov
jno
mov
dec
pop
mov
pop
adc
lret
lcall
mov
inc
daa
imul
pushf
add
cmp
dec
or
push
adc
ret
push
push
sbb
lods
stos
mov
int
add
cltd
in
insb
sub
xor
fidivrs
js
sbb
or
xchg
scas
mov
push
sub
dec
sti
stc
mov
clc
xchg
mov
jl
push
inc
insb
sbb
cli
and
cld
sub
ret
cld
stc
jmp
dec
or
mov
jne
xor
testl
add
hlt
mov
adc
int3
pop
roll
mov
mov
jp
jae
ds
jp,pn
push
stos
push
in
jae
into
mov
xchg
mov
pop
adc
xchg
dec
xchg
pop
stos
gs
insb
push
mov
nop
cs
lea
int
repnz
gs
loop
dec
dec
jg
mov
cmc
push
call
cli
pop
fstpl
adc
mov
lds
jg
mov
and
sbb
pop
mov
aaa
cld
test
push
sahf
sbb
jno
jle
mov
std
fsub
aad
out
inc
adc
sub
cmp
jle
jg
gs
add
push
pusha
sbb
jns
jl
mov
push
test
sub
and
pcmpgtw
divl
pop
pop
inc
outsl
lahf
call
xor
pushf
pop
lods
loope
dec
xorb
dec
es
shrb
arpl
add
or
outsl
pop
and
ljmp
jbe
mov
lds
das
out
push
scas
ljmp
inc
aad
sahf
repz
rcll
sbb
jl
out
ds
and
ret
pop
push
push
pop
and
sbb
and
repnz
je
or
mov
aad
sti
out
mov
bound
cmp
ficomps
add
lret
pop
js
int3
lods
fmuls
out
pop
adc
test
push
leave
cltd
lods
mov
mov
fwait
cli
xor
dec
bound
lahf
fnstenv
scas
sahf
int
mov
sbb
add
shl
and
xchg
adc
mov
je
mov
and
or
fldcw
in
mov
les
outsl
aas
xchg
mov
sbb
in
pushf
cmp
repnz
lret
repz
leave
push
xchg
out
and
aas
and
jne
or
mov
out
outsl
lock
inc
pusha
iret
jnp
sub
enter
sub
movl
call
inc
xchg
mov
loope
iret
mov
mov
hlt
xchg
scas
test
inc
mov
push
and
sub
add
or
repz
pop
push
sbb
aam
dec
leave
int3
lret
or
cwtl
xchg
dec
fcoms
sub
bswap
mov
mov
and
and
lcall
jbe
and
int3
inc
sub
cmp
inc
or
shrl
jo
es
jnp
jg
in
enter
push
cmc
push
aaa
out
xchg
sbb
add
adc
sarb
shr
je
nop
add
xor
lret
xlat
xlat
inc
dec
dec
pop
lea
mov
ja
xlat
out
int3
mov
imul
mov
sti
dec
inc
mov
imul
add
push
out
outsb
pop
mov
mov
out
loopne
inc
pop
sahf
jle
imul
aaa
jnp
inc
mov
popf
in
jns
jle
bsr
sub
jnp
fucom
repz
dec
subb
out
popa
add
inc
loopne
ret
ss
std
dec
loop
sub
xchg
mov
sbb
jecxz
hlt
pop
xor
loop
cli
adc
mov
loope
fimuls
cmpsl
loopne
xchg
inc
ja
sti
fwait
pop
sub
cmp
sub
mov
mov
loopne
cmp
les
out
fwait
dec
dec
sub
adc
in
ret
xchg
aas
test
int
mov
bound
push
call
rol
mov
mov
add
cmc
adc
add
mov
mov
sbb
pop
or
dec
jne
push
repz
leave
inc
cmp
jg
inc
sahf
faddl
popa
or
and
add
aad
nop
test
stc
lods
mov
mov
sbb
mov
xor
lahf
and
fcmovnb
sbb
cltd
or
inc
inc
sub
cmp
lret
xor
fists
std
pop
adcl
bndldx
mov
inc
imul
loope
iret
cmpsl
push
jbe
out
ficoms
aam
out
xor
rorl
push
test
mul
or
xor
leave
lods
jp
sub
adc
aaa
out
mulb
push
outsl
xchg
push
stos
cs
adc
jo
cmp
cld
xlat
or
dec
jne
sub
xor
push
add
mov
or
xchg
pop
inc
ljmp
cmp
add
test
inc
lds
movsl
movb
stos
jbe
jmp
ret
inc
push
cmp
pusha
fcoml
adc
adc
insl
mov
negb
mov
xchg
inc
jb
dec
dec
addb
insl
sbb
repz
mov
push
and
mov
cli
mov
mov
scas
rorb
pop
jbe
mov
xor
cmp
pusha
cmp
xor
add
xor
loope
test
xchg
daa
das
ret
nop
int
pop
sub
jb
inc
std
add
lcall
repnz
push
orb
cmp
push
xor
xor
xor
xor
lods
mov
mov
cli
data16
adc
iret
mov
fcoml
stc
aas
pop
jle
dec
cmpsl
loopne
inc
rcl
imul
mov
inc
test
sub
sub
cmp
inc
mov
inc
das
add
adc
jb
out
daa
mov
mov
mov
cmpsb
jo
mov
xlat
data16
or
call
jo
and
dec
loop
test
ror
push
mov
adc
lcall
ds
xlat
add
push
or
rcll
xor
cmp
cmc
cmp
and
jmp
jmp
movsl
xor
sub
adc
sarl
lret
push
fmull
ret
in
mov
clc
push
test
pop
fs
scas
mov
out
imul
or
out
jle
add
std
jge
jbe
jb
or
hlt
out
hlt
cmpsb
out
xor
cmp
cmp
sbb
adc
sbb
fbld
push
xchg
ret
mov
mov
xor
imull
jl
mov
mov
mov
push
xlat
das
mov
mov
and
mov
sub
ss
cmpsl
lret
popf
xchg
es
mov
out
pop
hlt
cmp
dec
add
cltd
nop
adc
repnz
subl
or
and
or
and
push
outsb
and
or
mov
cmpb
xor
sub
jp
jb
lahf
das
jo
lea
cmp
push
mov
dec
lret
pop
aad
pop
sti
gs
test
inc
bound
pop
sahf
mov
pop
and
or
out
push
arpl
enter
push
xor
jmp
adc
std
leave
add
outsb
inc
adc
loope
dec
das
add
push
mov
mov
xor
jnp
add
pop
arpl
dec
clc
or
psrlw
xchg
sbb
push
add
xor
dec
pop
insl
adc
fs
jo
push
fcmovne
or
mov
dec
ljmp
pop
jne
std
into
adc
clc
dec
popf
lcall
gs
cwtl
dec
shrb
scas
inc
push
push
dec
mov
mov
call
sbb
add
add
icebp
aam
sbb
rorl
fs
faddl
pop
mov
jbe
mov
mov
sbb
sahf
jbe
sub
fldenv
das
lahf
mov
outsl
mov
iret
icebp
in
loope
mov
xchg
gs
clc
rorb
cmpsl
inc
dec
jne
inc
pop
cmp
movsl
into
and
mov
inc
insl
adc
jne
lods
iret
cmpsl
xchg
into
nop
and
sahf
or
mov
ret
daa
sbb
cmpsb
mov
aad
fistpll
adc
cmpsl
mov
add
add
imull
ja
xchg
stc
jge
fidivrl
dec
sbb
mov
or
lock
add
pop
pop
lods
fldl
mov
adc
pop
cmpsb
scas
jnp
xor
lret
test
fld
shl
mov
fwait
xchg
mov
xchg
repnz
cmp
gs
int3
dec
cmp
je
outsl
lock
pop
pop
and
xchg
add
mov
loopne
mov
sarb
mov
mov
cltd
std
loop
or
cmp
xlat
jp
lcall
or
hlt
cmp
or
pop
jle
in
repz
sub
sub
dec
mov
insl
aas
in
and
ljmp
or
sbb
lods
scas
subps
arpl
ret
pop
pop
xchg
enter
je
clc
xor
add
mov
into
repz
cli
sarb
jge
pop
sub
adc
test
dec
add
pop
lods
sbb
or
add
in
rolb
sbb
cmp
push
sub
cltd
push
lods
mov
adc
insl
jbe
pop
fstps
and
xchg
sbb
xor
push
faddl
mov
sub
imul
mov
push
xor
xor
jne
stos
push
fmull
xor
mov
mov
jne
push
sbb
hlt
or
mov
mov
jae
jbe
sub
leave
inc
pop
arpl
cli
cld
subl
jg
lock
or
cltd
arpl
test
in
xchg
cltd
mov
inc
jp
aas
adc
js
adc
pop
ret
inc
imul
mov
hlt
and
mov
std
ret
cmp
dec
fsts
inc
cmpsb
in
ffree
pop
rorb
lcall
int
add
lret
xor
push
pop
iret
dec
dec
fs
daa
pop
and
out
into
cltd
outsb
aad
aad
cmp
push
je
je
jmp
or
cmp
sti
arpl
rcrl
push
dec
mov
shr
sub
scas
dec
lcall
sbb
movsb
enter
lods
movsl
jae
cmpsb
or
mov
aam
test
push
out
inc
xchg
das
pop
ret
push
push
or
scas
sbb
xchg
imul
dec
sarb
fistl
fs
inc
and
mov
inc
in
lsl
mov
sarl
mov
dec
inc
xchg
jge
and
fwait
push
jp
into
mov
sbb
adc
fstl
xchg
or
mov
push
shrb
js
and
inc
das
xor
daa
cmp
mov
add
cwtl
adc
cmp
int3
add
or
push
enter
xor
cmp
repnz
push
jg
fistpll
mov
jmp
jge
in
dec
cmp
aas
pop
out
imul
and
lcall
shll
sub
out
orl
ret
inc
inc
mov
repnz
sbb
into
xchg
push
xlat
mov
mov
inc
pop
mov
pop
popa
fwait
loopne
inc
dec
inc
lret
outsl
ret
or
lock
shrb
clc
les
sub
popa
mov
xor
xchg
push
and
cld
inc
movsl
mov
movsb
xor
jp
clc
jae
loop
xor
pop
mov
xlat
mov
pop
outsl
pop
pop
in
cmp
jp
xor
cmp
cmpsb
test
in
frstor
mov
cli
ficompl
cwtl
xor
inc
js
in
pop
or
mov
testb
ljmp
lds
mov
data16
rolb
cmp
lcall
sbb
out
lret
add
dec
subl
scas
mov
dec
dec
sub
or
adc
pop
push
scas
jg
ss
mov
out
inc
retw
xor
adc
clc
and
xor
or
jecxz
pop
daa
pop
fidivrl
sbb
sub
cmp
mov
or
push
jl
mul
inc
ljmp
push
outsb
xor
sub
and
popf
pop
or
out
call
sbb
ja
dec
mov
iret
pop
push
mov
clc
bndstx
push
sub
add
add
xor
rolb
icebp
jge
pushf
mov
or
push
shl
jp
fldcw
pusha
sub
and
cld
ljmp
addr16
add
sahf
lcall
data16
xchg
sub
stc
mov
inc
adc
dec
call
jnp
and
push
push
mov
push
stc
jmp
push
stc
popf
syscall
into
add
mov
add
inc
shrb
js
add
scas
xor
jg
fmuls
add
and
inc
ret
into
testb
jae
pop
rcrl
xchg
rcr
jecxz
and
arpl
xlat
pop
cmc
aam
and
cmp
dec
inc
cmp
or
lret
xor
pop
mov
ljmp
push
jo
sub
in
mov
leave
jae
push
arpl
sbb
inc
fcomip
adc
fstpt
sub
outsb
sbb
push
xor
call
inc
mov
ds
push
fsubs
cwtl
das
lods
mov
and
adc
imul
aas
lahf
das
xchg
mov
ds
push
aad
pop
or
lret
cwtl
cltd
fsub
jp
mov
mov
mov
decl
inc
pop
loope
dec
mov
sarl
adc
cmc
mov
stos
popf
imul
imul
clc
push
cmp
fwait
push
mulb
xchg
sub
cmp
mov
test
fwait
ror
lret
mov
adc
testl
sub
test
lahf
test
lods
ss
loopne
dec
dec
xchg
pop
push
xchg
pop
fsubl
xor
popa
sub
fiadds
add
stos
mov
jno
stos
int
mov
add
jl
sub
mov
ret
aam
idiv
xchg
xchg
js
andb
cltd
aam
in
and
jnp
daa
mov
mov
inc
fdivs
push
inc
shll
scas
idiv
push
or
bound
in
mov
mov
addl
mov
xchg
xchg
pop
pusha
popf
pushf
cmp
jmp
sbb
xchg
mov
push
cli
in
pop
ret
sbb
mov
mov
adc
cltd
lret
subl
xchg
dec
fucomip
aam
dec
or
push
mov
adc
popf
xor
and
sbb
xchg
cltd
in
in
xchg
insl
pop
gs
pop
es
mov
mov
notb
cmp
pop
lea
jge
ja
jmp
inc
xchg
loopne
mov
lret
or
and
sbb
jns
sub
out
push
push
fdivl
les
mov
icebp
or
in
jno
mov
and
cltd
pop
push
sbb
and
cmpsb
push
xchg
imul
adc
shlb
cmp
pop
jmp
and
bound
es
ds
rcrb
mov
inc
add
in
test
cmp
jecxz
ja
sub
pusha
mov
subl
xor
test
icebp
fsts
loop
adc
jmp
lret
inc
xchg
mov
or
je
leave
sub
leave
mov
mov
and
or
int3
aad
ds
dec
mov
std
test
or
lods
xor
mov
std
cmp
xchg
cvtps2pd
sbb
dec
sbb
cmpsb
test
mov
lods
and
xchg
xchg
mov
js
int3
sub
sub
outsl
shl
lods
push
add
mov
frstor
sbb
push
push
pop
xchg
pop
int3
lods
bound
sti
add
cmc
jp
or
in
mov
sub
xchg
out
lahf
fidivs
loope
jge
movswl
in
stos
cli
loop
pop
pop
mov
ds
push
fmuls
mov
stos
jp
in
stc
adc
lock
mov
sbb
xchg
jmp
data16
vmovapd
xor
add
insl
mov
xchg
dec
inc
and
subl
fprem1
gs
int
ret
adc
xor
rol
inc
push
outsl
add
mov
add
lcall
adc
xlat
and
rol
mov
testb
popf
stos
push
in
insl
xor
xchg
mov
mov
adc
out
pusha
mov
inc
dec
mov
stos
leave
fs
lret
sub
or
nop
sub
ss
movb
incb
in
xor
pop
je
push
fwait
mov
push
add
test
dec
jl
push
mov
mov
jnp
shlb
ds
and
sbb
sub
mov
in
push
and
rorb
xchg
push
inc
xchg
into
inc
test
leave
cltd
hlt
or
xor
lods
xor
sub
xchg
rorl
jl
stos
add
push
mov
jmp
mov
cmpsb
inc
repz
lahf
push
scas
xor
jle
push
or
jnp
jnp
inc
hlt
stc
inc
movsb
adc
jne
mov
xor
xchg
cs
cmpsl
rcl
jbe
push
dec
jne
and
test
sbb
inc
mov
addr16
mov
mov
cmc
or
stos
ficoms
mov
mov
movsl
adc
rolb
xchg
fdivs
popa
jb
lret
push
sbb
imul
add
mov
mov
leave
pop
mov
push
adc
push
sub
pop
fwait
adc
pop
inc
adc
push
loope
jl
les
flds
pop
xlat
add
test
insb
loopne
cld
bound
data16
xchg
stos
sarb
cmp
ljmp
movsb
jle
jb
sbb
addb
cmpsb
data16
cmpsb
add
scas
add
pushw
or
popa
pop
or
daa
arpl
push
pushf
fucom
icebp
mov
adc
cld
cwtd
popf
adc
or
fldenv
and
mov
and
or
repnz
cld
pop
mov
jp
repnz
push
mov
dec
sbb
shlb
sub
sbb
sbb
mov
jl
xchg
mov
insb
pushf
and
inc
and
test
or
mov
test
jnp
into
int
cs
jb
rolb
mov
mov
jle
mov
fdiv
pop
mov
mov
mov
movsb
test
or
dec
cli
push
into
nop
inc
sbb
fstl
adc
mov
adc
inc
pusha
push
add
jp
vsqrtps
pop
xchg
jl
mov
pop
and
lret
jp
scas
mov
mov
dec
add
adc
sbb
call
aam
shl
bound
adc
pusha
aad
shll
jae
inc
push
fwait
daa
mov
xorl
arpl
mov
mov
mov
insl
add
decl
inc
fisubrs
jnp
jle
mov
mov
sbb
shll
lret
jl
mov
loope
mov
je
push
test
inc
sbb
je
xchg
add
jno
test
aas
xchg
test
dec
test
jno
outsl
fcomps
gs
shrb
sbb
cmp
jg
add
sti
mov
movsl
enter
int
mov
scas
lods
in
push
cmp
iret
push
sub
push
nop
jl
lods
sub
fs
int
push
push
ss
call
stc
pop
and
add
lods
jae
mov
js
dec
jl
shlb
ret
adc
inc
fmuls
xor
xchg
jle
int
jb
pusha
push
push
or
pop
jbe
rorb
dec
mov
rclb
dec
lea
pop
shrb
in
frstor
call
stos
iret
mov
ljmp
popf
mov
pop
rclb
test
add
pop
mov
push
push
fiaddl
test
cmp
pusha
mov
fwait
fs
setne
add
das
pop
aaa
shr
adc
dec
and
mov
andl
jo
sbb
cwtl
cwtl
xchg
adc
add
or
filds
push
lahf
lahf
mov
pop
push
sub
cmpb
inc
mov
scas
dec
inc
out
xchg
jnp
jo
push
inc
fldt
cli
aam
int3
inc
push
subl
mov
fadd
and
ret
mov
cwtl
enter
fiadds
push
xlat
jp
test
jp
loope
mov
out
push
mov
sbb
mov
xlat
gs
cmp
mov
clc
popf
add
ret
in
icebp
jbe
cltd
mov
insl
shrl
jo
ret
stos
cltd
scas
ret
dec
cmp
out
sub
in
lods
lods
aaa
pop
ds
cmp
mov
data16
sti
sar
jmp
and
rcrl
ficoms
xchg
xchg
pop
and
iret
jecxz
test
ljmp
jb
pop
lcall
pop
adc
rcll
and
lock
divb
aas
cmp
ja
sbb
lcall
test
gs
sahf
hlt
aad
es
xchg
cmp
loope
jo
mov
js
std
mov
inc
dec
xor
jle
out
dec
nop
mov
lahf
insb
mov
andb
imul
mov
inc
xlat
fs
push
movsl
push
aaa
xchg
mov
aam
pusha
test
inc
xor
dec
push
cmp
loopne
ret
jns
sbb
aaa
cld
cmp
imul
mov
mov
adc
adc
mov
mov
test
push
adc
insl
arpl
inc
loop
sbb
sbb
xchg
add
inc
dec
pop
mov
pop
nop
or
fucom
insl
push
arpl
mov
cmp
popa
ljmp
insl
arpl
jo
leave
or
pop
xchg
mov
pop
xor
inc
xchg
sti
mov
fnstcw
cmp
mov
ficompl
xlat
jnp
lea
dec
ljmp
pop
pop
es
popa
lret
push
xchg
rcrl
shrl
rolb
cmp
push
sub
and
ds
inc
pop
dec
ret
sbb
je
xlat
push
inc
pop
stc
movsl
arpl
push
pop
pop
cwtl
dec
into
cltd
sub
pop
test
push
out
jle
iretw
out
test
cmp
xor
jge
mov
bound
ja
add
stc
shlb
outsb
cmpsl
jbe
adc
in
adc
cmp
add
cld
xchg
in
jg
js
jle
mov
xor
mov
xlat
push
xor
imul
imul
insl
adcl
mov
push
or
cwtl
or
icebp
rol
daa
lea
clc
pop
mov
jno
out
jle
lods
jne
xchg
addb
and
lret
cmc
imull
fisubrs
rclb
pop
addl
adc
cmp
or
std
repnz
mov
add
pop
ror
shrb
cmp
rorl
arpl
lret
or
rcll
push
add
rcll
pusha
pop
push
add
insb
stc
pop
jb
adc
rcl
dec
inc
das
jae
push
ja
ret
lahf
cmc
push
pop
es
cmc
loop
lods
sar
dec
mov
fnstenv
movsb
aas
add
xor
in
es
jmp
rol
jl
hlt
or
mov
aad
lret
in
js
daa
test
or
aaa
dec
icebp
adc
rclb
inc
rcrl
lock
mov
les
xchg
lods
xor
xlat
shrl
scas
lock
sbb
cmp
cmp
in
fld
adc
icebp
cmp
shlb
sbb
push
int
aad
xor
lds
lods
or
dec
repz
xchg
aam
adc
push
jno
and
mov
int3
fldt
test
jnp
out
xor
mov
stos
stos
cmp
add
pushf
and
in
jg
outsl
xchg
add
sub
dec
jp
add
jge
pushf
sti
cmpsb
dec
jp
movsb
xor
inc
gs
dec
xchg
ds
pop
add
adc
imul
pop
push
xor
fisubs
mov
add
jnp
and
add
adc
push
mov
orb
jl
mov
icebp
adcb
mov
dec
jb
xor
adc
jmp
sub
lea
pop
fsubrp
jnp
into
out
call
inc
cli
or
js
pop
mov
push
xchg
mov
loop
push
nop
push
xor
movsb
bound
pop
ljmp
stos
fimuls
pop
aad
mov
lahf
adc
daa
fisttpl
lret
sub
mov
ret
fs
pop
mov
cmp
inc
stos
xchg
ja
neg
mov
aam
xor
loope
and
cmc
xor
xchg
inc
out
push
mov
and
pop
enter
sbb
push
fwait
jb
int
mov
jne
push
cmp
jp
insl
mov
xchg
xor
or
dec
addl
sti
mov
scas
mov
mov
cmp
cwtl
cli
jge
in
jae
fimull
fs
cmp
repz
cmp
pop
rcl
xor
xchg
dec
adc
cmpsb
gs
pop
push
ret
dec
fnstenv
add
jne
cmp
mov
sub
ds
subb
jmp
pop
sbb
inc
sub
sub
push
lea
push
lret
mov
jno
mov
sbb
dec
jns
xchg
adc
jmp
xor
insl
jp
and
rcll
sbbl
lcall
pop
push
je
roll
pop
stos
movsb
fidivrl
xor
mov
mov
leave
and
inc
stos
dec
mov
rolb
or
or
cmpsl
mov
loop
sbb
into
inc
test
xor
jmp
add
inc
add
and
mov
lahf
cmc
xchg
mov
stos
xor
mov
add
je
rorl
imul
mov
sbb
mov
std
shll
jnp
addb
and
jg
test
es
jg
dec
shll
loope
inc
mov
pop
inc
dec
dec
jns
cli
inc
in
sub
push
fs
xor
aas
xchg
fisubs
movsl
and
mov
fstl
pop
shl
jg
in
lock
push
je
cmpsb
xor
ret
jo
mov
adc
mov
aaa
in
lret
aaa
mov
testl
push
testb
sahf
jb
shll
repnz
xchg
push
lret
push
jns
out
pop
push
jecxz
std
dec
lret
aas
pop
push
stc
pusha
movsl
xchg
pop
and
pushf
inc
inc
call
popa
xor
into
sbb
ds
int
mov
sbb
sbb
mov
cmc
mov
rorb
xchg
cmpsb
mov
repz
hlt
pop
and
bound
push
xchg
gs
adc
mov
pop
xor
and
xchg
and
outsb
rclb
int3
pushf
test
lret
mov
jne
sti
ficomps
out
aas
jl
adc
mov
outsl
pusha
cmp
sbb
push
out
lea
clc
imul
scas
cmc
fcomp
pop
and
outsl
push
test
movsb
test
push
int
movsl
adc
or
out
jle
jp
sub
aas
push
mov
loope
jmp
mov
add
stc
mov
xor
out
lret
add
ficomps
mov
add
insb
sub
pusha
popa
fsin
xor
fdivrl
adc
test
loope
mov
icebp
popa
jg
ret
lods
dec
and
outsl
push
push
in
sub
mov
int
mov
xor
sbb
mov
les
cmpsb
sub
xor
movsl
jb
insl
mov
push
and
lods
pop
push
add
clc
pop
and
mul
sub
mov
pushf
ret
xor
and
mov
ret
and
call
sub
mov
ror
mov
inc
xchg
mov
and
push
inc
xchg
outsl
orb
fdiv
aaa
sbb
aam
adc
add
xchg
mov
roll
out
jae
or
aam
sub
inc
out
jmp
inc
add
leave
notl
clc
repz
stc
sbb
jae
sbb
jne
add
push
pop
rcrl
inc
in
aas
cmp
push
jge
cmp
xorl
arpl
push
mov
fcomip
in
popa
and
aad
pop
cmc
lods
sahf
in
bound
sbb
fsubrp
hlt
xchg
adc
int
inc
hlt
xlat
ss
mov
shll
sbb
negb
ret
and
adc
add
add
cli
cld
push
icebp
mov
into
jmp
pandn
repz
shl
jbe
negl
add
mov
movsb
int
cmp
iret
rclb
jne
int
push
inc
mov
scas
mov
adc
pop
sbb
xchg
mov
fwait
dec
inc
nop
scas
inc
push
xor
adc
imul
test
test
pop
dec
xorb
js
fwait
inc
add
sub
frstor
mov
subb
jl
pop
mov
add
push
fstl
hlt
push
xchg
push
rcll
xchg
repz
inc
sbb
mov
fdiv
sub
jbe
in
jbe
stos
mov
mov
xor
pusha
pop
orb
out
add
cmpsl
cmp
dec
xchg
dec
xchg
icebp
adcl
lods
pop
add
cli
pop
adc
repz
pop
cmpsb
xchg
arpl
cmpsl
dec
insb
std
out
loopne
xorb
lods
in
fiadds
addl
fnstenv
ret
adc
outsw
adc
inc
pop
jle
shlb
jo
adc
sub
fldt
out
test
push
popf
pushf
ja
repnz
mov
leave
sbb
mov
shrl
insl
inc
xchg
sti
mov
out
dec
int
inc
xchg
divl
enter
mov
xchg
js
js
int3
out
in
outsb
xchg
stc
lahf
in
jle
cmp
inc
lret
sbb
jmp
add
bnd
add
xchg
rorb
test
das
insl
in
cmp
cld
pop
insl
hlt
fwait
push
push
aaa
ret
leave
adc
dec
inc
hlt
rcrl
fisttps
aam
aad
fimull
aam
lret
aaa
add
aam
add
or
pop
mov
or
jecxz
mov
mov
inc
push
adc
xor
gs
pop
adc
lock
push
mov
push
pop
inc
mov
mov
in
dec
and
mov
rcrb
push
adc
push
mov
cwtl
fs
test
and
dec
push
xlat
adc
dec
popa
mov
mov
sbb
jns
test
push
pop
inc
shlb
push
mov
jno
call
inc
rdmsr
inc
enter
mov
out
adc
movsl
cmpsb
mov
push
test
cmc
insb
push
adc
pop
inc
cmp
adc
sbb
mov
popa
stos
push
adc
mov
and
mov
shl
sbb
pusha
cltd
mov
arpl
pushf
cmpsl
sub
xchg
dec
ret
js
inc
mov
sub
stos
insl
mov
mov
cs
lds
pop
lcall
sub
ja
add
sub
sbb
fstps
decl
mov
mov
or
scas
cmp
scas
pop
aam
pop
aaa
adc
jmp
scas
jge
in
shrl
mov
dec
xchg
in
or
lcall
fcoms
mov
add
sub
hlt
push
test
sbb
xchg
mov
jo
imul
out
inc
fwait
xchg
push
pop
xor
neg
cmp
pop
icebp
push
in
jl
sub
pop
and
adc
xor
sbb
rcrl
jo
aas
jns
adc
jns
pop
fsubl
inc
xor
cmp
cli
mov
adc
mov
mov
fwait
pop
mov
fisubl
orl
or
enter
jecxz
xor
and
cmp
arpl
jmp
fcomps
enter
jae
in
movsb
xchg
add
sahf
push
sbb
ds
jns
add
pop
cltd
je
fmuls
jl
jmp
cmp
test
loopne
xchg
mov
aam
mov
jp
loopne
xor
repnz
fdiv
es
and
mov
popa
xchg
push
push
lret
addl
mov
fcom
dec
dec
inc
cmc
decl
fcmovb
xor
xchg
inc
sub
fwait
enter
std
divl
push
mov
popf
mov
push
in
movsb
jle
jge
pop
push
mov
movsl
sub
push
mov
jnp
sbb
adc
xlat
xor
bound
repz
xchg
insb
push
sub
fdivl
lods
les
bound
stos
lret
inc
lret
fnsave
and
adc
inc
out
movsl
or
loop
cmpsl
cmpsb
adc
jo
icebp
leave
sbb
jne
mov
dec
add
leave
lods
sahf
pop
adc
out
fsubp
inc
stc
or
in
popf
inc
stos
and
stos
dec
js
xor
jmp
subl
test
mov
bound
aad
xor
in
inc
jbe
ja
sub
sub
dec
nop
pop
cmp
enter
ss
lds
pushf
lods
js
mov
cmpsb
insb
popf
sbb
sarb
mov
iret
inc
pop
adc
data16
push
mov
jne
xor
fcomps
incb
lods
lds
inc
cmp
xlat
add
push
mov
arpl
and
inc
mov
inc
cmpsl
lds
test
jne
mov
push
ja
jle
pop
jns
orl
mov
adc
xchg
scas
or
jg
push
add
xchg
pop
int3
into
mov
insb
pop
or
fs
pusha
sbb
dec
push
cmp
mov
pop
mov
in
mov
lds
mov
xor
fcomip
dec
or
mov
xlat
dec
push
sub
sub
dec
pop
push
xchg
dec
or
jmp
das
es
movl
les
inc
lret
mov
test
jmp
dec
fnstcw
mov
fmull
loope
cmpsl
pop
or
pop
and
lahf
mov
nop
icebp
push
xchg
add
fcmovu
arpl
ljmp
cmovg
xor
outsl
xchg
dec
sti
iret
mov
and
add
inc
or
stc
sbb
sbb
jl
xchg
inc
loop
popa
ficoms
xor
aas
pop
pop
adc
and
addr16
and
pop
stc
jge
inc
adc
adc
call
sub
sub
loope
or
cmp
insl
inc
ret
popa
inc
sub
enter
xor
shlb
dec
ret
pop
xchg
rcrl
mov
add
cmpsb
add
into
nop
leave
movsl
testb
or
sub
nop
xchg
mov
xchg
jg
cmp
scas
xor
push
pop
pop
sahf
or
adc
or
xlat
and
pop
daa
ljmp
jo
stos
cmpsb
scas
sarl
jg
ret
inc
in
cld
add
adc
les
mov
or
aas
movsb
and
xchg
test
or
push
cli
mov
xchg
cmovb
sbb
xor
jae
mulb
test
mov
out
adcb
cmc
mov
xlat
inc
sbb
nop
mov
add
or
pop
hlt
and
out
fsubrp
mov
push
jmp
xlat
or
movq
in
mov
xchg
mov
xchg
mov
test
inc
fidivrl
or
pop
leave
add
sub
pushf
xchg
jnp
fistpl
mov
pop
add
orb
mov
out
pop
xor
lcall
pop
clc
mov
out
mov
jecxz
pop
mov
inc
popf
arpl
pushf
cmp
sub
dec
out
repnz
add
add
out
mov
imul
fidivrs
in
xor
pushf
push
dec
imul
sbb
ds
lods
mov
shll
adc
cmp
in
or
sti
out
mov
pusha
scas
loope
fisubs
icebp
fs
sub
fidivrs
repz
mov
mov
lea
mov
arpl
gs
out
cwtl
out
lahf
nop
loop
in
adc
hlt
mov
inc
lret
iret
push
insb
jmp
rcrl
inc
or
movsb
xchg
jb
adc
xchg
inc
repnz
jg
mov
clc
bound
sub
add
jnp
fcmovnbe
sub
loop
cmp
dec
add
repz
cs
mov
sbb
adc
mov
cmpsb
jnp
aad
mov
xchg
subb
xor
addb
sbb
call
cli
int3
icebp
lock
cmpl
add
dec
popa
sbbb
sub
out
lret
addr16
int
mov
xchg
adc
call
lods
xchg
pop
mov
mov
mov
stos
dec
sbb
jecxz
jbe
test
outsb
loope
xor
cmp
dec
push
add
ja
or
lock
mov
cmpsb
mov
add
gs
fisttpl
push
lea
cmp
jne
pop
pop
push
inc
daa
les
vorps
push
movsb
repz
insb
jne
xchg
clc
jns
cmpps
pop
xor
rorb
mov
loope
xchg
test
stc
sti
adcb
mov
aas
inc
out
and
movsb
xor
mov
fsubrs
test
mov
leave
dec
mov
xor
out
out
inc
adc
mov
lds
ljmp
fisttpll
add
mov
hlt
movsl
lds
jo
xor
and
shrl
popa
fwait
xchg
mov
iret
cmp
or
mov
aad
cmpsl
add
sub
dec
xchg
jnp
mov
xor
dec
lahf
inc
cli
xchg
mov
dec
mov
push
mov
pop
dec
sahf
out
int
hlt
or
loop
xchg
jbe
std
scas
rcrb
adc
mov
das
ret
insl
icebp
shrl
mov
aad
test
lret
lods
push
lock
push
dec
fdivs
xchg
fisubrs
lock
cmp
rcrl
pop
cld
repnz
les
mov
pop
je
pop
int3
outsb
rcr
lret
or
insl
gs
mov
pop
dec
sbb
ficompl
and
insb
xchg
dec
jo
incb
pop
add
xor
fsubrl
fisttpll
lahf
les
enter
test
inc
mov
lock
lods
mov
cmp
in
mov
mov
sti
loope
shrb
lods
fdivr
pop
dec
mov
mov
mov
jmp
or
jp
sub
js
adc
mov
or
mov
sarb
aaa
dec
movsl
or
ss
xor
inc
into
xchg
inc
andl
pop
xchg
into
pop
lret
pop
sbb
imul
scas
mov
xor
and
roll
imul
add
test
jl
cs
shlb
out
cmc
add
pop
add
xor
loop
cmp
lods
cwtl
push
ficompl
add
ror
test
movsl
and
cmc
test
mov
lahf
lret
out
popa
out
jne
ds
into
outsl
and
cltd
push
imul
mov
cld
inc
mov
sti
cmc
imul
mov
push
pusha
cmp
dec
cltd
jg
or
scas
jmp
push
mov
lock
adc
out
pusha
fsubp
cwtl
xchg
mov
test
out
rclb
shrl
mov
or
js
test
mov
sub
mov
mov
enter
cltd
int3
aaa
xchg
push
inc
loope
lock
mov
in
push
jns
sti
ficoml
call
pop
adc
mov
imul
mov
stos
icebp
in
and
lret
stc
std
sahf
mov
push
or
pop
arpl
addr16
add
push
ja
lods
add
fidivl
pop
ss
mov
adcb
jnp
cmp
pop
sbb
call
mov
jl
lret
cmpsl
stos
fsubrl
mov
jl
xor
inc
fildl
aad
test
imul
aas
repnz
mov
bound
adc
xor
inc
outsl
xor
test
mov
mov
arpl
and
ja
sub
adc
fs
inc
xor
mov
mov
sbb
mov
push
lea
jmp
or
inc
adc
mov
sti
imul
sub
stc
mov
out
fisubs
rcl
adc
add
add
cmpsl
mov
and
mov
push
push
add
repz
inc
shr
aas
jl
mov
ljmp
fstps
jne
jmp
adc
cld
aad
pop
mov
jg
add
sub
xchg
add
and
mov
inc
les
jge
lods
and
pop
pop
jp
fstl
mov
popaw
inc
gs
div
or
adc
push
push
rorb
ret
test
rcrl
inc
dec
jo
loopne
sbb
enter
lods
dec
iret
loop
sahf
push
push
mov
or
xchg
cmp
cmp
hlt
es
int
push
xor
cs
sub
jno
addr16
dec
lcall
nop
pusha
hlt
jbe
sub
mov
pop
xlat
icebp
out
xchg
xchg
jo
out
push
dec
xchg
pushf
les
mov
loop
cltd
add
ret
in
push
ja
push
aad
clc
call
mov
jae
pop
in
aas
shr
sbb
sbb
out
ja
out
xor
shl
cmp
inc
xor
xchg
push
push
lahf
xchg
pusha
jno
ret
jno
fildl
lea
jle
cmp
stos
lahf
cli
xchg
sbb
jp
push
js
nop
sbb
loop
mov
pop
lcall
push
rcrl
dec
cmp
dec
pop
jg
add
push
adc
daa
cltd
sub
sbb
sbb
loopne
xchg
imul
icebp
mov
dec
shrl
adc
jl
adc
pop
arpl
jo
push
xor
std
movsb
popl
icebp
fiaddl
in
dec
ljmp
jecxz
xchg
xor
jmp
out
pop
rorb
vpsubd
stos
adcb
jmp
or
jo
pop
and
pop
ja
sbb
mov
aam
mov
jb
add
or
in
mov
rclb
pop
mov
cmp
cmp
pushf
adc
or
mov
fdivrl
push
repz
fmuls
arpl
xor
bound
mov
mov
fstpt
sbb
push
ja
dec
mov
pop
pushf
out
enter
xchg
dec
jo
cld
imul
scas
pop
ficompl
bound
pop
cmpsb
cmp
and
lcall
jge
add
cli
mov
cmpsb
adc
xor
mov
adc
lcall
ds
cmp
and
insb
inc
lahf
loop
jo
icebp
inc
lcall
jp
pop
mov
int
mov
js
nop
in
xor
scas
call
and
std
loop
jle
push
jmp
sbb
cmpsl
shll
stc
mov
push
pop
xlat
les
adc
movsl
add
mov
rolb
push
jb
std
add
push
sbb
iret
sbb
int3
mov
je
loope
inc
insl
fwait
pop
into
stos
xchg
cmpsb
pop
icebp
jecxz
call
popa
dec
mov
sub
iret
dec
fs
popa
jnp
int
cmp
cmp
pop
jmp
dec
add
ficompl
jmp
add
lahf
pop
cmp
sbb
xchg
add
je
lock
ds
pop
dec
std
push
mov
xchg
clc
sbb
shll
mov
mov
fnstcw
imul
push
pop
sahf
adc
sbb
mov
mov
out
mov
movsb
jbe
adc
mov
lds
pop
lds
sbb
aas
pop
xor
cmpb
cmpsl
pop
sub
aad
inc
dec
pop
scas
lea
imul
mov
jbe
jno
jp
and
lret
clc
jb
scas
aaa
addb
loopne
jns
push
gs
inc
mov
xchg
mov
sub
and
popa
sbb
testl
outsl
push
bound
sbb
mov
dec
imul
and
sbb
push
pop
sub
sub
pop
cmp
sub
and
outsl
pop
addr16
dec
xchg
pusha
pop
je
push
insb
jb
add
aad
movl
pop
cli
stc
sbb
lahf
jnp
mov
shl
push
mov
inc
or
mov
js
push
test
sbb
cmpsb
mov
cmpsb
js
popf
mov
pop
or
pop
cmp
mov
pop
aad
pop
jne
mov
nop
jl
push
inc
aas
outsb
and
xchg
clc
push
loope
gs
cmp
adc
scas
sub
mov
insl
mov
inc
pop
mov
sti
push
popa
rol
test
jno
mov
push
mov
shlb
add
leave
and
mov
stos
add
inc
cmpsb
pop
cmp
dec
mov
pop
int
pop
popf
xchg
cmp
es
jg
test
data16
repnz
sbb
cwtl
push
mov
enter
cmc
jo
mov
cwtl
lods
xlat
das
stos
jmp
push
nop
mov
scas
add
jns
scas
sahf
scas
xchg
xor
mov
jnp
pop
mov
pop
test
popa
and
hlt
sbb
loope
vrcpps
lret
sbb
mov
jg
push
pop
inc
sub
ja
sub
stos
push
enter
mov
mov
sub
xor
cmp
shl
loopne
nop
xchg
out
sbbl
jbe
int3
mov
push
lds
mov
fcmovb
cltd
cmpb
sub
sbb
pop
xor
sbb
mov
sbbb
out
in
imul
sbb
clc
cmp
mov
out
add
cld
push
push
insl
subb
loop
push
inc
test
fs
repnz
mov
lret
push
jns
xor
sbb
sti
icebp
cmp
sub
xchg
das
imul
fnstenv
sub
imul
pop
cld
popf
pusha
xchg
mov
or
and
dec
in
xchg
ja
jb
lcall
mov
push
fstl
js
insb
pop
push
cli
arpl
test
sbb
fisubrs
or
fcmovbe
push
push
lret
stos
or
sub
sarl
dec
and
sahf
jmp
mov
cmc
mov
mov
cmpl
std
shrb
jbe
sub
dec
fstpl
jecxz
cwtl
jl
add
mov
fnstenv
and
jmp
clc
pop
sbb
jbe
lods
mov
jp
xor
cmp
andl
mov
xchg
jl
inc
jno
mov
xor
test
stos
xor
add
push
push
inc
push
btr
cwtl
cmpsb
insb
pop
sbb
cltd
add
adcb
jb
and
dec
mov
cli
shrl
sub
cltd
testl
cmp
fdivr
cmp
mov
mov
lahf
xchg
jno
jnp
pop
adc
int
cmp
jns
adc
jg
dec
mov
add
inc
loopne
sub
ds
stos
imul
and
pop
outsb
adcl
mov
and
loopne
sarl
mov
mov
push
mov
mov
test
fadds
dec
jnp
jbe
arpl
sbb
pop
sub
sarb
lea
sbb
lret
sbb
dec
xor
leave
or
sbb
add
xchg
sbb
inc
xchg
bound
stc
adc
adc
cmp
inc
loope
lahf
aad
pop
or
adc
imul
out
xlat
pop
mov
test
pusha
int
ror
lock
ss
pop
loope
push
in
push
lret
fmull
gs
mov
cld
and
dec
mov
add
mov
es
mov
imul
repnz
pushl
xor
aam
jb
sbbl
push
sbb
enter
in
out
test
into
and
lret
lods
xor
ljmp
std
repz
aas
pop
pusha
arpl
sbb
shll
daa
push
mov
inc
push
xchg
dec
inc
jl
push
mov
cmp
mov
xchg
stos
notb
pop
cmp
inc
pop
call
pop
fdivrl
fmuls
add
test
xchg
lcall
pop
mov
pop
lret
push
jbe
icebp
int3
add
andb
jge
fwait
test
call
loopne
rclb
out
call
ss
push
push
sub
lods
enter
sbb
repnz
jae
leave
scas
pop
mov
mov
inc
dec
cmpsl
dec
cli
sbb
call
pop
call
mov
jg
sbb
pop
mov
data16
or
out
icebp
repnz
fsubl
gs
call
xchg
add
fdivrs
scas
jecxz
adcb
jmp
mov
rolb
xor
rol
decl
adc
popa
and
jne
adc
popf
mov
imul
pfsub
push
cld
fistl
mov
mov
dec
adc
dec
shl
sti
sbb
out
add
sbb
movsl
fistps
jp
je
data16
push
adc
lret
hlt
push
repz
in
inc
bound
adcb
pushf
addb
in
mov
mov
xchg
push
sbb
sarl
pop
or
cmp
das
xor
inc
negl
sub
sti
pop
rorl
dec
aaa
movsl
outsl
and
jnp
sbb
dec
arpl
mov
cmpsb
pushf
and
xchg
lahf
stc
aad
in
insb
jge
idivb
leave
sbb
mov
pop
cmc
jmp
call
xchg
test
mov
jp
adc
imulb
lods
cli
or
and
jno
mov
fwait
lahf
inc
mov
sahf
loopne
jl
sbb
in
shrl
push
ja
cmp
les
insl
fsub
rcl
add
add
out
pop
lods
jg
pop
popa
mov
cmp
hlt
pop
cltd
shrl
push
inc
clc
inc
test
repnz
in
je
mov
les
iret
sub
lds
push
imul
push
orl
jge
adc
mov
xor
test
xchg
rclb
out
add
and
daa
mov
xor
push
jae
mov
or
mov
dec
xor
pusha
cmpsb
dec
sbb
fcoms
icebp
xlat
add
inc
outsl
xor
xchg
fadds
xor
xchg
shlb
loopne
ja
push
ss
dec
cli
enter
ss
cmp
andb
mov
outsb
xor
xor
xor
sahf
icebp
mov
not
out
lods
sub
cmp
push
cwtl
test
divb
test
lods
fwait
cmp
stc
jl
dec
pop
pop
mov
testb
add
sub
test
clc
or
mov
fcmovb
outsl
scas
mov
push
pop
sub
icebp
lret
jne
adc
mov
cwtl
pop
and
ret
adc
pop
xchg
pop
sbb
inc
inc
jne
ds
pop
xchg
sub
push
sub
lahf
negl
mov
pop
add
fs
xor
or
loope
pop
add
pop
pop
out
mov
in
push
loop
fwait
sub
adc
and
and
pushf
fldcw
ds
mov
aam
push
cmp
or
jne
repnz
adc
lds
pop
push
or
sbb
pusha
std
stc
dec
fadd
jecxz
pop
dec
shll
repnz
idivl
loope
lea
nop
mov
mov
aam
inc
cmpb
mov
mov
jb
daa
enter
in
outsb
jg
xchg
sub
push
mov
jnp
iret
xchg
roll
shrl
jns
fsubs
jg
sahf
xchg
or
xchg
maskmovq
testl
push
cmp
jmp
push
pop
leave
stos
aas
sbb
xchg
je
in
mov
scas
adc
push
cwtl
and
fwait
adc
psignb
mov
mov
mov
push
fisubl
inc
sub
shl
push
mov
aad
xor
cmp
inc
subl
das
mov
cmp
xchg
cli
cwtl
or
xor
repnz
mov
enter
mov
int3
xchg
mov
mov
jne
aas
mov
lods
dec
bound
pop
mov
ficompl
inc
add
pop
xor
ja
nop
lahf
aas
andb
dec
fcompl
jmp
push
out
cld
push
mov
insb
push
test
push
xor
in
push
or
inc
ds
mov
inc
mov
xor
mov
jo
daa
imul
xchg
mov
ja
mov
and
mov
xchg
clc
lock
push
imul
mov
pop
jbe
or
sub
mov
repnz
jg
test
sub
sub
inc
jl
arpl
dec
call
add
shlb
popa
addb
cmp
in
incb
outsl
cmp
fbld
xor
jecxz
pop
ret
push
ret
xor
mov
adc
jge
pop
subl
mov
lcall
mov
sarl
imul
push
inc
xchg
int
mov
mov
cmp
cmp
cltd
mov
mov
cmp
mov
cmp
sbb
mov
xlat
cltd
cmp
test
popa
xor
or
bound
jecxz
adc
pop
movsb
pop
je
dec
ret
jp
adc
dec
push
mov
jge
loop
xchg
ret
outsl
dec
push
mov
sub
rcl
addl
outsl
rol
jb
pop
sbb
jp
cwtl
mov
sub
es
push
aad
lahf
dec
dec
aad
mov
xchg
aas
imul
mov
insl
push
xchg
and
jbe
or
jle
mov
lock
inc
mov
inc
xor
scas
aaa
mov
cli
aam
lret
out
xchg
pushf
inc
push
scas
or
mov
inc
cmpsb
fs
in
test
cmp
fnstenv
fcomps
pop
repz
push
mov
sub
pop
mov
cmp
push
mov
mov
cmp
mov
je
imul
push
mov
ficoml
xchg
and
repz
sbb
adc
in
aaa
ret
or
push
push
push
nop
lock
cld
insb
or
xchg
scas
pop
test
ret
mov
pop
cmpb
and
cs
insl
hlt
lcall
push
sti
push
and
cltd
pop
pop
xor
cmpsl
sbb
xor
push
cmp
cmpsl
inc
mov
cmp
mov
sbb
clc
andl
jo
add
int3
inc
xchg
loopne
xor
mov
bound
pusha
pop
lock
mov
add
ja
fld1
pop
data16
pop
adc
insl
or
add
out
out
push
popa
sub
or
loope
or
cli
stos
and
pop
pop
icebp
jecxz
dec
fidivs
inc
sbb
lahf
sahf
ret
aam
lods
sbb
cltd
popa
cmpsb
addr16
dec
pop
lods
sub
icebp
push
test
test
imul
ja
inc
push
mov
and
xchg
adc
mov
insl
bound
test
dec
jle
subb
pop
je
sub
lret
push
sub
cmp
and
push
xchg
stos
jmp
outsb
pop
out
or
xchg
fisubl
das
mov
ja
fldcw
sarb
fbstp
push
xchg
stc
rcr
sbb
and
mov
jecxz
push
ljmp
xchg
dec
fisubl
insl
fstpl
mov
mov
cmp
jae
mov
shll
daa
cli
pop
std
dec
into
loope
mov
repnz
ret
sbb
push
ficompl
rol
cmp
or
mov
jge
aas
nop
dec
xchg
jne
call
outsl
in
dec
enter
fisttpll
and
push
lods
imull
fdivs
pop
and
inc
xor
mov
mov
loopne
xor
mov
bswap
mov
popa
sarl
fisttps
ja
or
lock
vaddss
push
cmp
mov
hlt
cmp
jmp
jbe
mov
add
ds
test
sub
pop
popf
scas
fcom
mov
jbe
xor
inc
cmpsl
lods
nop
sub
insb
inc
push
push
mov
test
or
mov
mov
cmpsb
pop
add
adc
pop
cmp
popa
rcrl
mov
ret
fnstenv
ficompl
movsl
enter
pop
std
int
leave
hlt
cmpsb
cmp
iret
leave
sbb
hlt
rcr
ljmp
dec
jo
sbbl
push
mov
xorl
rcll
lret
jle
add
mov
fwait
imul
lods
je
icebp
cmp
lds
and
mov
cmp
cmp
push
lods
lods
mov
dec
pop
pushl
adc
rcl
mov
xor
repnz
mov
imull
jmp
jbe
inc
xor
cmpsb
popf
mov
sub
fdivrl
adcb
pop
iret
mov
mov
push
lret
jle
dec
add
js
push
pop
and
sbb
pop
push
sbb
or
call
jmp
mov
packsswb
pop
or
push
adc
in
inc
daa
jno
jp
ret
aas
xor
jmp
pushf
fsubrl
popa
xor
xchg
inc
inc
sarl
inc
mov
imulb
pop
inc
lret
shll
and
iret
stc
jmp
adc
ret
lods
xor
add
jnp
adc
and
xor
ljmp
inc
add
xor
pop
mov
push
xor
push
sub
pop
rcrl
and
dec
xchg
adcb
jns
scas
movsb
cmpsl
add
insl
mov
ja
leave
data16
pop
push
adc
push
sub
xchg
fs
or
jb
xorl
dec
mov
dec
decb
std
aas
scas
stos
add
stos
and
mov
movsb
int3
jl
mov
mov
dec
mov
into
imul
gs
outsb
mov
test
cmp
sub
pop
add
test
jmp
in
inc
pop
pushf
mov
sub
movsb
push
fwait
in
pop
cmp
sbb
sbb
adc
fidivrl
push
rclb
cld
les
loopne
dec
cmp
leave
mov
movl
mov
fs
test
leave
adcb
pslld
adc
mov
fisttps
jo
in
in
shll
push
mov
scas
and
cs
scas
out
into
or
insl
xchg
or
lods
arpl
aas
push
add
xchg
mov
cld
rorb
jecxz
jl
mov
mov
subb
mov
push
inc
les
cli
pop
int3
or
mov
mov
inc
ss
jmp
mov
fstps
jmp
add
xchg
insl
sub
sti
movsl
sahf
hlt
mov
mov
aaa
aaa
stc
ss
data16
or
out
mov
sbb
mov
fcomip
jge
bnd
sbb
filds
cmpsb
ljmp
mov
jg
jno
aad
movsb
fcoml
cmp
xchg
or
mov
sbbb
adc
push
sub
push
pop
fistl
mov
inc
in
notl
inc
mov
lods
sub
jae
mov
mov
jb
cmovae
inc
shl
inc
clc
lret
in
push
xlat
pushf
sub
std
mov
xchg
in
pop
jp
pop
aaa
mov
dec
sub
scas
ss
push
sbb
aaa
mov
mov
in
mov
adc
sbb
inc
test
call
sbb
mov
pop
lcall
mov
imul
mov
std
test
repz
lock
outsl
fwait
jge
sub
out
rcrl
rclb
cmp
jl
mov
pop
lock
fs
jp
dec
lahf
dec
ds
push
pop
aaa
cmp
stc
or
mov
and
and
lods
mov
std
shlb
mov
mov
cmpsb
sub
inc
mov
push
pop
xchg
pop
aad
ds
aad
dec
scas
push
mov
cs
xor
xor
es
push
inc
jae
mov
push
daa
jmp
ljmp
xor
push
pop
mov
xchg
mov
xchg
stos
xor
sub
les
jmp
pop
hlt
addl
out
adc
adc
stos
cmp
xchg
add
mov
sahf
fdivs
gs
or
das
jmp
sub
inc
enter
mov
xchg
test
push
ss
sarb
fldt
mov
mov
sbb
out
ret
or
scas
iret
cmc
clc
sahf
pop
shl
inc
movsb
clc
mov
xor
mov
in
or
call
mov
in
jo
add
iret
in
out
pop
push
ja
shlb
xchg
adc
pop
pop
addr16
shrl
xor
mov
fcomps
dec
scas
lds
roll
mov
in
or
pop
or
sbb
inc
or
ficoms
clc
add
inc
addr16
xchg
lea
cmp
lcall
mov
cmp
jne
add
rol
cmp
pop
je
das
shll
fnstsw
movsb
lcall
addl
mov
xlat
shr
lock
popf
jno
xchg
pop
js
cwtl
stos
xchg
add
mov
jmp
push
pop
mov
cli
imul
jno
cli
fsubl
divl
insb
div
pop
mov
push
daa
fwait
repnz
lock
and
jl
xor
jo
test
jl
cmp
and
sbb
sbb
sbb
pop
movsl
push
int3
mov
sub
imul
icebp
shr
sti
aaa
xor
jno
or
repnz
pop
out
decb
imul
add
adc
in
mov
dec
in
push
fidivs
add
xchg
fdivl
mov
adc
sti
lock
cmpsb
adc
mov
popa
inc
inc
pop
dec
insl
imull
fwait
test
add
ret
std
into
xorl
jl
pop
inc
test
loop
cmp
ljmp
adc
mov
xchg
lds
dec
dec
mov
test
out
leave
lret
ljmp
and
mov
subl
jne
cmp
xchg
mov
sbb
insb
cs
insb
aad
pop
add
cmpsb
mov
hlt
and
xchg
movsb
pop
inc
adc
dec
mov
std
xchg
lods
bound
jge
push
cmp
or
jae
mov
int
adc
xchg
mov
sub
outsl
xchg
sub
shll
faddl
cmp
cmp
movsl
inc
loop
adc
lds
add
outsl
fdivs
adc
pop
addb
dec
int
dec
mov
clc
out
or
ljmp
pop
sbb
push
pop
pop
data16
push
cld
push
sub
outsl
lcall
mov
movsb
cld
add
adc
popf
fdivrs
lret
mov
sahf
mov
stos
inc
pushf
xchg
cwtl
lret
lea
and
addr16
es
lods
roll
idivb
mov
icebp
mov
xchg
fstpl
inc
xchg
inc
jb
xchg
jne
hlt
orl
cs
xor
push
xor
ds
add
fcmovnu
rcrb
push
xor
arpl
fstpl
test
mov
stos
icebp
imul
call
rcrb
jle
adc
and
popa
mov
xor
divl
sub
sub
sbbl
sbb
push
aad
add
leave
nop
mov
xor
sti
xchg
mov
cmp
and
adc
pop
adc
adc
jb
cmp
mov
insb
xchg
je
sub
test
and
mov
mov
adc
ret
add
cltd
cmc
pop
dec
push
cli
pop
cltd
pop
pop
pop
cmp
xor
rcll
sti
push
xor
add
mov
outsl
dec
fistpll
xlat
imul
jnp
push
pop
je
and
adc
repnz
sbb
fisubl
nop
xor
xor
and
mov
in
popf
fiaddl
mov
cmc
js
aad
cmp
insb
addb
outsb
push
stos
ror
inc
cmc
out
lds
pop
cli
pop
xlat
mov
imul
inc
negl
inc
cmpsb
mov
mov
movsl
push
test
scas
jae
cld
mov
or
cs
jp
mov
xchg
xchg
fs
loopne
sub
pop
inc
imul
aas
into
out
icebp
jnp
lock
cli
jge
aad
xor
pop
lods
mov
mov
aad
mov
movsb
jbe
gs
imul
lods
andb
test
fadds
js
icebp
and
les
mov
jge
adc
jae
fwait
daa
xchg
std
stos
add
mov
outsl
stos
pop
rcll
jae
push
add
xor
add
or
cltd
push
lahf
cmpsb
jl
inc
std
cwtl
add
cmp
outsb
xchg
mov
notl
mov
or
pop
lds
ljmp
jge
sbbl
mov
insl
sbb
rolb
mov
push
lcall
test
aad
popa
scas
jne
push
or
ds
into
dec
movsl
inc
jle
lea
lea
aam
fwait
das
data16
xchg
jbe
movsb
shll
fucom
push
mov
inc
lret
adc
xchg
call
stos
add
ss
or
and
sbb
pushf
mov
shl
adc
pop
test
bound
cli
into
int3
mov
jge
sub
mov
pop
in
rcl
push
sbb
mov
lock
cmp
aaa
cld
mov
lret
loopne
dec
insl
mov
mov
jb
adc
shlb
negl
mov
or
and
dec
clc
faddl
xchg
push
imul
cmp
fwait
aas
pop
push
dec
lds
aaa
ficomps
sbb
inc
movsl
sbb
test
dec
stos
add
cmpsb
lahf
fimuls
das
or
out
das
xchg
les
int
cmp
pusha
sahf
rcl
arpl
cs
pop
cltd
or
jle
lahf
mov
out
bound
aaa
ret
icebp
fstps
xchg
sbb
test
outsl
sbb
jo
lods
cld
sub
adc
mov
push
cmp
inc
pushf
cmpb
repz
int3
outsl
int3
dec
in
iret
dec
cmpl
sbb
inc
push
jno
es
jmp
in
adc
outsl
leave
or
ljmp
cli
ds
int3
mov
cmpsl
mov
xchg
inc
xchg
push
stos
nop
cli
xor
dec
je
sub
push
inc
jno
push
jmp
fdivl
cli
fbstp
push
fstp
iret
icebp
jge
xor
mov
ret
push
adcb
nop
sub
or
lret
xchg
xchg
int3
clc
clc
add
push
pop
jmp
sbb
sub
loop
add
jmp
sub
inc
lcall
bound
cltd
ret
std
addr16
xchg
mov
cmp
mov
cltd
outsb
jb
add
or
es
paddusb
sub
or
stos
ljmp
imul
cmpsl
inc
push
push
cld
push
jbe
cwtl
je
and
int3
sbb
adc
cmpsb
out
push
fcoms
xchg
ljmp
loopne
int3
xor
lcall
outsl
loope
push
mov
aam
mov
notl
push
mov
mov
add
xor
mov
and
mov
jae
shll
daa
add
dec
leave
ret
mov
mov
loope
mov
iret
mov
call
pop
ret
lcall
inc
xchg
fwait
ljmp
es
sub
es
xchg
sbb
mov
cmp
adc
sbb
lahf
sbb
dec
cwtl
hlt
or
dec
adc
pop
aad
jno
prefetchwt1
fstps
jae
xchg
mov
lock
sarb
rorb
mov
inc
loope
pusha
js
pop
gs
popf
add
lahf
push
mov
dec
lcall
test
bswap
popf
rcrl
xchg
push
dec
fcmovnu
jp
mov
dec
inc
jl
jns
gs
lds
sbb
cmp
repnz
add
cmp
lock
daa
fstl
out
loop
xchg
jle
aam
std
add
push
lret
cmc
xor
cltd
sub
pop
cli
jmp
sbb
jnp
jo
and
int3
movsl
jbe
aas
cmp
mov
int
or
pushw
xor
jnp
lcall
cltd
dec
xor
rol
fcmovnb
shll
jmp
mov
pop
test
shll
and
std
lds
cmpsb
mov
push
jnp
in
stos
add
adc
in
jns
inc
add
popf
imul
lret
int3
jge
push
xor
lahf
push
popf
mov
insl
cmc
sbb
test
enter
push
arpl
test
jp
xchg
loopne
aam
mov
inc
lods
stos
ds
push
jp
inc
inc
enter
nop
inc
sbb
cld
call
mov
sub
testl
jae
mov
daa
and
xchg
push
cmpsb
mov
cwtl
js
call
xor
test
ja
mov
sub
add
push
pop
cmp
cmp
orl
insl
mov
mov
mov
jae
out
ret
dec
ds
inc
shlb
xor
jb
dec
fwait
into
aam
adc
xor
inc
and
mov
jg
dec
or
iret
sbb
loope
and
dec
or
jmp
push
xor
push
cwtl
test
iret
push
insl
xchg
dec
dec
mov
push
rcrb
daa
clc
cmp
aad
jae
fcmovnu
pop
push
cmpsl
sahf
inc
mov
aad
cmpsl
clc
cmp
inc
adc
jo
es
mov
in
mov
pop
std
out
dec
xchg
or
pusha
test
mov
adcb
jecxz
mov
mov
iret
adc
in
push
test
call
aaa
pop
xchg
sahf
fucom
stos
rcr
les
dec
lea
mov
sbb
jge
int
sub
mov
sarl
pop
in
push
leave
lret
or
hlt
in
mov
inc
sub
rcl
and
push
adcl
add
iret
mov
cmp
out
cwtl
sbb
xor
sti
lods
mov
pop
test
sub
les
pop
pusha
mov
pop
pusha
leave
push
pop
pushf
in
ds
mov
push
addr16
pusha
aaa
jecxz
ret
ds
mov
xor
mov
dec
test
add
js
orb
cltd
jne
test
or
sbbl
push
insb
in
cmpb
call
or
pop
test
jbe
mov
in
mov
xor
add
add
push
mov
data16
push
cmc
lods
cwtl
insb
adc
iret
add
dec
imulb
cmp
mov
mov
insl
ret
ret
push
sbb
mov
pop
mov
rcll
push
and
jecxz,pn
mov
push
jne
mov
aam
lret
mov
loop
leave
lock
mov
data16
mov
daa
ljmp
fs
cmc
arpl
xchg
popa
mov
and
sbb
push
cltd
sbb
insl
mov
cmp
mov
mov
test
jo
xchg
sub
push
push
test
xor
mov
idivl
lahf
mov
iret
rolb
enter
ud2
adc
mov
out
jecxz
or
sub
dec
in
in
icebp
xor
cmp
sahf
in
push
ljmp
adc
mov
jl
cmp
in
sub
mov
xor
pop
lahf
loope
sub
inc
xchg
shl
adc
les
test
and
loop
mov
jmp
adc
inc
jmp
push
test
dec
sbb
cwtl
mov
int3
sbb
in
out
fbstp
mov
imul
loopne
pop
lock
aas
neg
sbb
inc
inc
inc
jbe
ret
jnp
out
daa
dec
js
add
ret
sti
out
xor
out
idivl
std
dec
adc
push
jge
je
outsl
sti
lret
mov
fwait
jl
mov
jg
popf
mov
dec
sub
loopne
xor
add
jne
and
mov
sarb
pop
push
adc
insl
fldenv
call
out
lea
jle
fucomip
add
fstpt
or
pop
push
addr16
rorb
aad
mov
movsl
daa
shr
inc
or
xor
popf
push
add
lods
insb
ja
adc
cmp
jne
std
addl
lcall
jmp
sub
xchg
out
pop
loopne
inc
shrb
idiv
cmp
cmp
adc
jmp
or
inc
outsl
flds
mov
cld
aas
insb
ljmp
rclb
int
xchg
or
mov
cmp
lock
cmpsb
inc
and
outsb
pushw
cmp
lahf
sub
jl
rcr
jl
push
es
xor
mov
xor
mov
stos
and
pop
hlt
inc
test
aas
into
test
jnp
aaa
pop
and
aas
sbbl
push
pushw
push
out
xchg
mov
es
cmp
cwtl
push
repnz
enter
cs
sti
fwait
js
ret
loope
mov
inc
adc
int
out
cmpsb
jl
das
sub
daa
pop
push
add
jle
mov
add
xchg
xchg
fsts
mov
jbe
shll
push
dec
mov
or
insl
push
imul
fwait
out
inc
lds
cvtdq2ps
int3
pusha
xchg
add
enter
mov
xchg
dec
jns
xchg
cmpsl
mov
dec
or
int3
test
dec
popa
int3
lcall
sbb
cld
inc
imul
dec
js
xchg
xchg
and
push
filds
mov
enter
insl
lea
dec
pushf
in
aad
pop
daa
lods
stc
les
int3
aad
jmp
sbb
sub
out
and
aaa
mov
cltd
xchg
aas
or
push
mov
jo
ds
xor
dec
stos
pop
mov
jmp
adc
dec
stc
mov
or
mov
addb
inc
movl
notl
jmp
jecxz
jecxz
insb
and
add
jge
and
popf
cld
adc
sbb
int
orl
inc
dec
icebp
stc
pop
fisubl
push
push
adc
aas
jp
scas
test
lcall
dec
cmp
fs
inc
outsl
ja
dec
push
leave
fcom
and
and
arpl
jno
gs
enter
jp
add
imul
adc
jl
cmc
push
pop
add
sbb
pop
ja
cli
jno
imul
inc
and
mov
add
adc
test
push
jne
stc
jle
imul
push
mov
add
xchg
cwtl
movsb
iret
pusha
jb
loop
cmp
hlt
jbe
cmpsb
bound
lret
je
icebp
pop
cs
enter
cmp
in
scas
lods
pushf
mov
xor
call
cltd
or
cs
iret
add
cld
push
push
sub
mov
and
stos
push
jge
arpl
adc
or
pop
push
leave
sub
sbb
add
rcrb
repz
jae
mov
pop
add
les
cmpsb
xchg
lret
mov
xchg
test
jle
mov
dec
mov
xor
mov
outsl
insb
popf
jmp
inc
ss
mov
les
out
push
fcoms
lcall
imul
xchg
sub
inc
es
scas
popa
adc
aam
add
cmpsb
xchg
push
or
inc
mov
sub
lret
divb
fildll
push
pop
mov
fildl
stos
enter
shl
in
mov
clc
test
sbb
cmp
pop
dec
jb
sbb
ret
iret
roll
push
insb
sbb
jns
lcall
xor
push
push
inc
in
jge
adc
sysret
dec
mov
mov
mov
xchg
xor
loopne
jne
fucomp
js
jne
jo
mov
jne
ljmp
scas
pop
xor
pop
jecxz
js
insb
push
xor
loope
clc
push
adcb
iret
pop
cmp
orl
lods
jl
into
inc
mov
adc
scas
fsubrs
xchg
pop
push
or
negb
xchg
xchg
pushf
testb
fnsave
cmpsb
lea
int
leave
xchg
cmp
std
sub
or
sti
push
xor
imul
inc
fstpl
and
lahf
pop
std
add
dec
xor
lret
loopne
daa
or
and
cltd
mov
cmp
ljmp
mov
movsb
jl
loope
jo
add
sub
sub
and
