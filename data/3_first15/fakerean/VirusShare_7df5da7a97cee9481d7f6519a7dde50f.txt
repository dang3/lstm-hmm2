add
mov
mov
mov
push
mov
call
mov
lea
push
pushl
lea
mov
mov
mov
push
mov
mov
movl
mov
call
lea
lea
call
test
je
lea
push
pushl
lea
mov
mov
mov
movl
mov
mov
mov
push
mov
call
lea
push
mov
call
test
je
push
mov
lea
call
mov
call
lea
call
mov
cmp
je
mov
cmp
mov
je
mov
push
call
mov
push
push
lea
push
push
lea
push
push
push
mov
call
add
lea
call
lea
call
lea
call
pushl
pushl
call
pushl
pushl
call
pushl
pushl
call
add
incl
mov
cmp
jae
jmp
push
mov
sub
push
push
mov
push
lea
xor
cmp
je
cmp
jne
mov
lea
push
mov
call
pushl
lea
call
cmp
je
mov
xor
cmp
je
lea
push
push
mov
mov
push
call
mov
cmp
mov
je
mov
push
push
pushl
push
call
lea
call
mov
mov
call
cmp
je
lea
xor
call
lea
xor
movb
call
mov
xor
call
push
lea
call
cmpb
je
mov
and
and
push
lea
lea
movl
mov
call
mov
test
je
mov
lea
push
push
call
mov
mov
lea
call
xor
mov
push
mov
lea
mov
call
mov
lea
mov
call
pop
pop
pop
leave
ret
mov
push
mov
call
test
jne
push
xor
cmp
jne
push
mov
push
mov
call
test
jne
pop
pop
ret
mov
mov
push
mov
call
test
je
pushl
mov
mov
call
inc
jmp
pushl
push
call
pop
pop
pop
ret
sub
mov
xor
mov
mov
test
je
mov
mov
cmp
push
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
pop
mov
xor
call
add
ret
lea
mov
mov
lea
push
mov
mov
mov
movl
movl
movl
movw
mov
mov
push
push
call
cmpl
jne
mov
test
jne
test
je
jmp
mov
mov
add
call
xor
ret
push
push
mov
call
mov
push
push
call
pushl
mov
call
pop
ret
mov
call
cmp
jne
mov
call
test
jne
xor
inc
ret
mov
call
cmp
je
mov
call
test
jne
xor
ret
int3
int3
push
mov
and
sub
push
push
push
push
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
call
mov
mov
mov
test
jne
mov
push
push
call
mov
mov
mov
call
test
jne
lea
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
lea
push
lea
call
mov
call
cmp
je
call
test
je
mov
movl
mov
call
test
jne
add
cmpl
jne
movzbl
add
push
lea
call
call
test
je
movzbl
add
push
lea
call
mov
call
cmp
je
call
test
je
cmpl
jne
mov
pop
pop
pop
pop
mov
pop
ret
mov
test
je
mov
jmp
mov
test
je
jmp
mov
movl
jmp
mov
mov
and
xor
or
jne
pop
xor
pop
pop
pop
mov
pop
ret
xor
jmp
mov
add
call
ret
push
mov
sub
mov
push
lea
push
push
xor
push
mov
call
mov
cmp
je
add
lea
push
mov
mov
push
call
test
js
mov
push
mov
mov
call
mov
mov
and
mov
mov
call
mov
lea
call
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
mov
xor
mov
mov
mov
push
push
mov
push
mov
xor
mov
mov
movl
mov
call
push
push
push
push
push
push
push
push
lea
push
mov
mov
mov
mov
mov
mov
movl
call
cmp
je
lea
call
mov
push
push
lea
call
test
je
mov
mov
mov
push
mov
push
call
add
cmp
je
lea
mov
mov
mov
mov
call
mov
cmp
mov
mov
mov
mov
je
mov
lea
mov
mov
mov
push
push
push
lea
push
push
lea
push
movl
mov
call
add
cmp
mov
je
mov
cmp
je
push
call
add
cmp
je
mov
movl
mov
mov
mov
mov
lea
mov
cmp
lea
je
push
mov
mov
call
mov
mov
add
mov
mov
cmp
mov
je
mov
cmp
mov
je
push
call
add
mov
mov
cmp
mov
mov
je
mov
push
mov
call
mov
cmp
mov
je
add
lea
cmp
jne
mov
mov
mov
lea
call
lea
call
lea
call
xor
mov
pop
pop
pop
xor
call
mov
pop
ret
lea
movl
movl
call
lea
call
lea
call
lea
call
lea
call
lea
jmp
mov
mov
movzbl
mov
and
mov
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
push
push
xor
call
add
cmp
je
push
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
call
cmpb
je
push
push
lea
lea
mov
call
mov
cmp
je
add
mov
mov
push
mov
call
mov
cmp
je
mov
lea
push
push
push
mov
call
test
js
mov
push
call
mov
mov
mov
mov
mov
mov
mov
push
mov
call
mov
lea
push
call
mov
add
test
je
mov
push
push
push
call
add
movb
test
mov
je
mov
mov
push
call
add
xor
lea
call
cmp
pop
je
pop
mov
pop
pop
add
ret
pushl
mov
mov
pushl
mov
push
call
ret
mov
mov
push
mov
add
push
call
pop
ret
int3
int3
test
je
mov
test
push
je
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
test
je
mov
mov
push
call
mov
xor
pop
ret
cmp
je
cmp
je
cmp
je
xor
mov
mov
pop
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
cmpl
je
mov
add
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
push
movl
call
mov
add
test
mov
je
push
push
push
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
push
mov
call
add
test
je
push
mov
push
push
call
add
mov
xor
pop
pop
pop
pop
ret
mov
sub
cmp
ja
push
call
add
test
je
add
ret
mov
mov
push
call
ret
pushl
call
mov
call
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
push
movzwl
cmp
jle
lea
mov
mov
lea
push
movl
mov
push
push
mov
call
cmpl
jne
sub
add
cmp
jg
cmp
je
pop
pop
xor
pop
ret
pop
pop
mov
pop
ret
push
mov
push
cmpl
push
pop
lea
je
push
mov
cmp
je
push
pop
mov
push
push
push
pushl
lea
push
xor
call
mov
mov
mov
add
xor
push
inc
call
test
pop
je
mov
push
call
pop
leave
ret
mov
cmp
jne
mov
cmp
jne
mov
cmp
je
jmp
lea
jmp
int3
mov
cmpl
push
mov
push
jge
mov
push
mov
push
call
mov
add
test
je
mov
mov
push
call
push
call
add
test
mov
pop
je
mov
mov
mov
push
push
push
call
cmp
je
mov
lea
call
mov
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
push
xor
cmp
mov
jne
mov
cmp
jne
mov
mov
cmp
jne
mov
pop
pop
ret
cmp
jne
mov
pop
pop
ret
cmp
je
push
lea
call
mov
add
pop
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
push
push
push
mov
push
mov
mov
xor
mov
mov
mov
cmp
je
push
movl
mov
mov
push
push
call
mov
movl
mov
mov
push
mov
call
test
je
push
mov
call
mov
test
je
xor
mov
cmp
mov
jne
call
mov
test
je
mov
mov
push
call
test
je
mov
test
jne
mov
mov
pop
pop
mov
pop
pop
pop
ret
lea
addl
mov
jmp
call
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmpl
je
push
push
mov
mov
mov
lea
push
add
push
push
call
test
je
mov
mov
lea
add
lea
cmp
push
je
push
lea
test
je
mov
test
mov
je
addl
add
add
cmp
jne
pop
mov
addl
mov
add
je
mov
test
mov
mov
je
mov
push
push
call
test
je
test
je
mov
mov
push
call
pop
pop
pop
xor
ret
xor
jmp
int3
int3
push
push
push
mov
mov
mov
test
lea
push
push
jbe
lea
xor
mov
lea
mov
mov
cmp
jne
mov
pop
pop
pop
pop
pop
ret
push
call
xor
add
cmp
je
mov
mov
movl
mov
lea
mov
call
lea
mov
push
mov
mov
call
mov
mov
mov
call
mov
push
push
call
pop
mov
pop
pop
pop
pop
ret
int3
int3
int3
int3
int3
int3
mov
mov
xor
test
je
lea
movsbl
rol
add
xor
mov
test
jne
ret
mov
cmp
je
push
pushl
call
mov
ret
mov
mov
mov
mov
mov
jmp
push
mov
push
pushl
mov
pushl
pushl
push
call
test
js
test
je
mov
test
je
test
jne
xor
pop
pop
ret
mov
jmp
int3
sub
push
push
mov
xor
push
mov
push
mov
cmp
mov
mov
mov
mov
mov
mov
je
push
call
add
movl
mov
add
cmp
jne
mov
cmp
jne
mov
cmp
mov
je
add
add
mov
test
lea
jne
cmpb
jne
test
je
cmpl
je
push
call
add
lea
call
pop
pop
pop
pop
add
ret
testb
jne
mov
lea
call
mov
lea
call
xor
mov
call
movl
jmp
mov
mov
cmp
jg
sub
mov
mov
imul
cmp
jb
jmp
push
mov
push
push
push
xor
cmp
je
push
mov
movw
cmp
je
pushl
mov
lea
mov
call
mov
cmp
mov
mov
je
mov
mov
mov
push
lea
call
mov
push
lea
call
mov
lea
push
push
call
mov
cmp
pop
jne
lea
call
lea
call
lea
call
xor
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
mov
test
je
test
movl
je
push
push
lea
mov
movl
call
mov
lea
lea
push
push
mov
call
test
js
mov
test
je
add
lea
cmp
jne
lea
mov
mov
lea
mov
movl
movl
movl
movb
call
test
js
cmpl
je
lea
push
lea
mov
call
cmpl
jne
cmpl
movl
jne
mov
test
jne
test
jne
lea
call
xor
pop
mov
pop
pop
pop
xor
call
add
ret
lea
call
jmp
push
mov
sub
push
push
push
mov
xor
mov
mov
push
lea
lea
movl
mov
mov
mov
call
cmp
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
mov
and
mov
jne
cmp
jne
pushl
lea
call
cmp
jne
lea
push
pushl
call
test
pop
pop
jne
cmp
mov
mov
je
mov
cmp
mov
je
lea
push
push
push
add
push
call
mov
mov
and
jne
cmp
jne
pushl
lea
call
cmp
jne
pushl
mov
pushl
mov
push
call
test
jne
mov
lea
push
pushl
push
call
cmp
je
push
lea
mov
mov
call
mov
lea
push
push
call
pushl
lea
pushl
call
mov
cmp
pop
pop
mov
mov
mov
je
mov
lea
call
mov
lea
call
cmp
mov
je
cmp
je
mov
cmp
je
mov
lea
push
pushl
push
call
cmp
mov
je
lea
call
push
mov
lea
call
mov
cmp
je
mov
push
call
mov
cmp
je
mov
push
call
lea
call
mov
cmp
je
mov
push
call
lea
call
mov
mov
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
pushl
mov
push
call
mov
cmp
je
mov
mov
push
push
call
mov
mov
mov
lea
mov
call
cmp
je
mov
push
call
lea
call
lea
call
lea
call
pop
pop
mov
pop
leave
ret
cmpl
je
decl
jne
add
mov
call
ret
mov
test
jg
cmpl
je
test
lea
mov
jne
add
mov
call
ret
mov
cmp
jae
inc
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
mov
push
mov
lea
cmp
push
jne
mov
test
jne
xor
pop
pop
pop
ret
push
push
push
lea
call
push
push
push
call
pop
pop
pop
ret
push
mov
push
mov
push
push
pushl
call
cmp
je
mov
call
test
jne
pushl
mov
push
call
lea
mov
push
call
test
je
mov
call
test
jne
mov
push
pushl
push
call
xor
pop
pop
ret
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
mov
mov
cmpl
jge
push
mov
xor
push
mov
call
mov
add
lea
call
cmp
jne
mov
mov
mov
push
call
mov
add
test
pop
je
mov
mov
push
push
push
push
push
add
push
push
mov
call
lea
call
pop
pop
pop
add
ret
cmp
je
mov
jmp
mov
mov
mov
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
push
mov
push
xor
mov
push
lea
lea
mov
movl
movl
mov
mov
mov
call
cmp
je
mov
push
mov
lea
lea
mov
lea
push
lea
push
movl
movl
movl
mov
mov
mov
movl
movl
mov
mov
call
mov
test
jne
test
jne
mov
mov
push
push
lea
push
push
push
push
mov
call
test
js
mov
mov
mov
push
push
push
call
mov
mov
test
jne
test
jne
lea
call
mov
pop
mov
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
mov
cmpb
jne
cmpl
mov
jne
cmpb
je
cmpl
jne
mov
cmp
jne
mov
cmpl
mov
movl
jne
mov
call
test
jne
test
jne
mov
cmp
je
cmp
je
cmp
je
cmpb
je
mov
mov
mov
call
test
je
test
je
test
je
mov
mov
mov
mov
lea
mov
test
je
mov
test
je
push
call
add
test
jne
mov
mov
mov
call
test
je
cmp
jne
mov
cmp
jne
push
push
call
add
test
jne
cmpl
jne
push
lea
push
push
call
add
cmpb
jne
movzbl
mov
sub
mov
mov
mov
push
push
mov
call
add
test
je
mov
mov
test
jne
cmpb
jne
mov
mov
mov
mov
cmpl
jne
mov
mov
mov
test
mov
mov
jne
mov
add
cmp
je
mov
lea
call
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
push
push
mov
call
lea
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
cmp
je
xor
jmp
mov
mov
mov
mov
push
push
push
add
call
lea
mov
call
mov
pop
pop
pop
mov
pop
ret
test
movl
je
mov
push
add
push
mov
call
mov
call
test
jne
mov
mov
call
test
je
mov
mov
push
push
push
push
call
mov
mov
call
lea
call
mov
pop
pop
pop
mov
pop
ret
mov
cmpl
je
pushl
call
pop
ret
mov
test
je
jmp
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
test
je
mov
push
xor
push
mov
mov
push
mov
xor
push
lea
lea
mov
movl
mov
mov
call
mov
cmp
je
push
lea
mov
call
mov
mov
lea
push
push
push
call
mov
test
js
mov
cmp
je
mov
lea
push
push
mov
call
test
js
cmp
jne
push
call
add
cmp
je
movl
movl
movl
movl
mov
mov
mov
push
mov
mov
call
mov
push
mov
lea
mov
call
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
mov
push
mov
call
mov
mov
mov
push
call
test
je
mov
push
lea
mov
call
mov
mov
lea
push
push
call
mov
test
js
mov
cmp
je
push
mov
lea
mov
call
mov
mov
lea
push
push
mov
call
cmp
jne
push
call
add
cmp
je
call
cmp
je
mov
mov
mov
push
call
mov
mov
lea
push
mov
push
push
mov
push
call
mov
mov
mov
push
push
call
mov
mov
push
call
mov
lea
call
lea
call
mov
mov
mov
push
call
jmp
lea
call
lea
call
test
js
mov
xor
lea
call
lea
call
cmp
jne
mov
pop
pop
pop
pop
add
ret
int3
int3
int3
int3
int3
int3
push
push
call
xor
add
cmp
je
push
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
ret
xor
pop
ret
push
mov
and
mov
sub
cmp
push
push
push
jne
pop
pop
pop
mov
pop
ret
lea
call
mov
jmp
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
movl
push
xor
mov
mov
push
lea
add
movl
mov
mov
movl
mov
mov
mov
cmp
jbe
mov
push
push
push
call
add
cmp
je
sub
mov
mov
cmp
jae
cmp
mov
mov
mov
mov
jb
lea
mov
mov
mov
lea
push
call
mov
mov
mov
sub
sub
add
je
cmp
mov
ja
mov
sub
add
cmp
mov
mov
jb
lea
mov
mov
movl
lea
push
call
mov
or
call
test
je
mov
add
cmp
je
mov
mov
sub
cmp
jbe
add
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
jmp
xor
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
push
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
push
push
call
movl
mov
mov
lea
add
lea
lea
add
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
lea
call
cmpl
lea
je
push
call
add
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
mov
test
je
mov
call
test
je
push
call
add
mov
mov
lea
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
mov
push
push
lea
push
push
call
mov
cmp
jne
mov
mov
lea
add
lea
lea
cmp
jne
push
push
push
push
mov
call
mov
cmp
jne
mov
call
mov
pop
pop
pop
pop
xor
call
add
ret
mov
push
call
add
jmp
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
push
mov
mov
test
push
lea
movl
movl
movl
movl
movl
je
mov
lea
push
mov
call
mov
test
push
lea
push
jne
lea
call
lea
lea
push
lea
mov
movl
movl
call
call
push
push
push
call
mov
test
je
testl
jne
mov
test
jne
mov
test
pop
pop
je
mov
push
mov
call
mov
test
je
addl
je
lea
call
lea
call
lea
call
lea
call
mov
call
mov
xor
cmp
movl
je
mov
mov
mov
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
mov
xor
mov
mov
push
mov
push
mov
push
push
mov
push
mov
call
add
test
je
mov
mov
call
test
je
add
test
mov
je
mov
mov
push
call
cmpl
je
lea
lea
push
mov
mov
movl
movl
movl
mov
movb
call
add
test
jne
mov
mov
mov
push
push
push
push
push
push
call
test
js
mov
mov
mov
push
push
push
mov
call
mov
mov
test
jne
test
jne
lea
call
mov
mov
pop
pop
pop
pop
xor
call
add
ret
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
push
mov
mov
mov
mov
push
xor
push
mov
mov
mov
call
push
lea
mov
mov
call
mov
mov
lea
lea
push
push
call
testl
jne
cmp
jne
push
lea
lea
movl
movl
mov
mov
call
cmp
je
mov
cmp
mov
mov
mov
mov
jne
mov
cmp
mov
mov
je
push
mov
lea
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
push
mov
lea
mov
call
mov
cmp
je
push
mov
lea
mov
call
mov
cmp
je
push
lea
call
mov
mov
lea
push
push
call
mov
push
lea
call
mov
mov
lea
push
push
call
mov
call
lea
mov
call
push
lea
call
mov
mov
lea
push
push
call
lea
call
testb
mov
mov
mov
mov
je
movzbl
mov
push
mov
mov
push
mov
push
push
lea
push
push
mov
xor
push
push
push
push
push
call
mov
mov
mov
mov
push
push
call
cmp
jne
mov
cmp
je
lea
mov
mov
push
push
mov
call
call
push
push
push
push
call
cmp
jbe
lea
cmp
jne
cmp
je
cmpl
je
testl
mov
mov
lea
jne
push
mov
call
cmp
je
mov
mov
lea
push
push
mov
call
mov
mov
mov
push
mov
push
push
mov
call
mov
mov
mov
mov
add
push
push
call
lea
call
mov
cmp
mov
je
test
mov
js
mov
mov
mov
mov
push
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
pop
add
ret
push
lea
call
push
lea
call
mov
xor
test
je
jmp
push
mov
push
mov
test
je
mov
mov
andl
push
mov
lea
call
mov
mov
mov
lea
mov
call
xor
pop
pop
ret
cmpl
mov
mov
je
orl
xor
ret
push
mov
sub
push
xor
cmp
je
push
push
lea
mov
mov
call
lea
push
lea
lea
mov
push
push
movl
movl
movl
call
testb
jne
testb
jne
pushl
mov
lea
mov
call
pushl
mov
lea
mov
call
cmp
je
pushl
mov
mov
push
push
pushl
push
call
test
js
mov
mov
push
push
call
mov
mov
add
push
push
call
push
push
pushl
push
pushl
call
add
lea
call
lea
call
lea
call
pop
pop
leave
ret
int3
int3
sub
mov
xor
mov
push
mov
push
mov
push
mov
movl
mov
test
push
mov
mov
jbe
mov
mov
mov
mov
lea
cmpw
je
sub
add
test
jne
mov
cmpl
movl
je
mov
mov
call
test
je
mov
mov
lea
lea
sub
mov
xor
sar
cmp
lea
mov
movl
movl
mov
mov
je
push
lea
call
test
je
mov
or
lea
call
test
je
mov
test
jbe
mov
mov
sub
movzwl
cmp
jae
movzwl
movzbw
movzwl
mov
add
sub
jne
mov
lea
push
call
mov
mov
add
test
jne
test
jne
cmpl
je
xor
mov
pop
pop
pop
pop
xor
call
add
ret
push
call
mov
add
jmp
sub
sar
test
jle
mov
push
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
sub
sub
push
add
push
push
lea
movl
movl
movl
call
push
call
mov
mov
mov
add
test
jne
test
jne
cmpl
je
mov
mov
mov
mov
mov
push
push
call
jmp
push
mov
lea
call
lea
call
lea
call
testb
movl
je
push
call
pop
mov
pop
ret
push
mov
sub
push
mov
test
je
testw
jne
pop
leave
ret
cmpl
je
cmpl
je
mov
mov
mov
orl
orl
push
push
mov
mov
mov
mov
call
test
mov
ja
mov
mov
lea
push
call
mov
test
mov
je
andl
push
mov
lea
call
mov
test
je
lea
or
push
mov
mov
mov
push
call
mov
mov
lea
push
push
call
xor
cmp
jge
cmp
jge
cmp
jge
cmpl
jne
cmp
jge
lea
call
lea
call
pop
pop
jmp
pushl
mov
call
test
jne
pushl
mov
call
test
jne
cmpl
je
cmpl
je
jmp
push
mov
sub
push
mov
test
je
andl
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
jne
and
push
mov
lea
call
mov
test
je
mov
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
test
je
cmpb
je
mov
mov
lea
call
lea
call
mov
test
je
mov
test
jne
mov
mov
lea
call
mov
pop
leave
ret
xor
jmp
xor
jmp
int3
int3
int3
int3
int3
sub
push
mov
mov
mov
push
mov
call
test
je
push
push
push
xor
push
lea
mov
mov
mov
mov
mov
call
push
lea
call
push
lea
call
mov
mov
lea
push
lea
push
lea
push
lea
push
mov
call
test
js
mov
mov
mov
call
cmp
mov
je
mov
mov
mov
push
call
mov
mov
push
mov
call
mov
call
mov
mov
push
push
lea
push
call
mov
mov
mov
push
mov
lea
push
mov
push
push
mov
push
mov
push
push
call
test
mov
js
cmpl
jne
cmp
je
test
je
mov
call
push
call
mov
mov
andb
test
movb
movl
mov
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
mov
pop
pop
pop
pop
add
ret
mov
mov
push
mov
call
push
mov
call
mov
andb
mov
mov
test
movb
movl
mov
je
mov
mov
push
call
lea
call
lea
call
mov
test
je
mov
mov
push
call
mov
test
je
mov
mov
push
call
lea
call
pop
mov
pop
pop
pop
add
ret
int3
int3
push
mov
push
mov
call
test
jne
mov
lea
push
lea
push
push
push
push
mov
movl
call
add
xor
test
pop
js
mov
mov
push
mov
push
mov
push
mov
push
mov
push
push
push
call
mov
add
test
js
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
mov
push
push
push
mov
test
je
mov
cmp
je
call
mov
test
mov
mov
jne
and
testb
je
mov
cmp
je
test
mov
je
mov
test
je
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
mov
mov
mov
mov
push
push
push
call
test
mov
mov
mov
js
test
je
mov
mov
mov
mov
mov
mov
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
test
je
mov
mov
mov
mov
mov
movl
xor
mov
test
jne
cmp
je
mov
pop
pop
pop
pop
add
ret
mov
test
je
mov
mov
test
mov
mov
je
mov
cmp
je
test
mov
je
mov
mov
test
je
mov
mov
lea
cmp
je
mov
add
test
jne
jmp
mov
cmp
jne
mov
cmp
jne
mov
cmp
jne
mov
sub
mov
add
mov
mov
mov
mov
mov
mov
movl
xor
test
js
mov
test
jne
pop
pop
pop
pop
add
ret
mov
mov
lea
push
push
push
mov
call
mov
jmp
test
js
mov
mov
call
jmp
mov
call
pop
pop
pop
xor
pop
add
ret
int3
sub
push
push
push
mov
xor
push
mov
xor
mov
mov
call
test
mov
jne
lea
push
lea
push
push
push
push
mov
mov
call
add
xor
test
mov
js
push
push
lea
push
mov
lea
push
mov
push
push
push
call
mov
mov
add
test
js
mov
lea
movl
mov
movl
mov
mov
push
push
call
test
js
mov
test
jne
lea
push
lea
push
push
call
add
cmp
je
cmp
mov
mov
mov
je
test
je
mov
movl
mov
mov
mov
test
jne
test
jne
cmp
jne
mov
pop
pop
pop
pop
add
ret
mov
movl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
and
sub
push
mov
push
push
lea
mov
mov
push
push
mov
call
mov
mov
lea
lea
push
rep
call
mov
add
push
call
mov
add
cmp
jne
cmpb
je
mov
test
jne
mov
push
call
add
mov
push
call
add
mov
lea
push
lea
push
mov
lea
push
lea
push
push
call
fldl
fstl
add
fldl
lea
fstl
fldl
fsubp
fxch
fstpl
fsubrl
fstpl
call
fldl
call
fldl
mov
call
mov
push
mov
lea
push
push
mov
lea
push
add
call
fldl
mov
fchs
fldl
mov
sub
fchs
fstpl
fstpl
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
lea
push
push
call
mov
add
test
mov
je
mov
call
mov
mov
lea
push
push
call
add
pop
pop
mov
pop
mov
pop
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
push
mov
cmpb
je
mov
push
push
call
mov
push
mov
call
add
lea
pop
pop
ret
int3
int3
int3
int3
int3
push
mov
and
push
push
push
mov
push
lea
push
lea
mov
call
cmpl
je
flds
flds
flds
flds
mov
fxch
fstpl
fxch
fstpl
fstpl
fstpl
mov
pop
pop
pop
mov
pop
ret
sub
push
mov
cmp
push
push
push
je
mov
mov
mov
push
mov
call
test
jne
mov
test
jne
push
mov
call
mov
mov
mov
mov
call
cmp
je
cmp
je
cmp
je
cmp
je
movl
mov
mov
cmp
jne
mov
mov
push
mov
call
test
jne
mov
and
or
jne
xor
pop
pop
pop
pop
add
ret
mov
and
or
jne
cmp
je
jmp
mov
mov
jmp
mov
call
test
jne
jmp
int3
int3
int3
mov
mov
mov
mov
mov
mov
mov
mov
sub
lea
movl
movl
mov
push
push
mov
call
mov
mov
mov
add
add
sub
sub
js
mov
sub
mov
sub
js
test
mov
jl
xor
test
jl
add
ret
xor
jmp
xor
jmp
push
mov
lea
mov
or
lock
dec
je
pop
ret
mov
movl
call
push
call
pop
xor
jmp
push
mov
push
push
push
mov
push
xor
cmp
jne
push
lea
mov
call
mov
lea
push
push
call
cmp
je
pushl
mov
lea
mov
call
mov
mov
push
call
lea
call
push
lea
mov
call
mov
lea
push
push
call
mov
cmp
je
push
mov
cmp
mov
je
mov
push
call
mov
mov
call
lea
mov
call
lea
call
pop
lea
call
lea
call
incl
pop
xor
pop
leave
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
sub
push
push
mov
push
mov
add
mov
xor
call
test
je
mov
mov
mov
push
push
lea
push
mov
call
mov
mov
test
mov
mov
je
and
mov
mov
test
je
mov
mov
cmp
jne
mov
test
je
mov
test
je
lea
cmp
jne
add
test
je
mov
cmp
je
add
mov
mov
call
mov
call
cmpb
jne
mov
lea
call
mov
pop
pop
pop
add
ret
mov
test
jne
jmp
push
push
mov
call
lea
mov
call
mov
pop
pop
pop
add
ret
pop
pop
mov
pop
add
ret
int3
int3
int3
int3
int3
push
mov
and
sub
push
push
push
push
xor
lea
mov
push
push
mov
call
mov
mov
add
cmp
je
cmp
mov
jne
cmp
je
cmp
jne
cmp
jne
mov
mov
cmp
je
mov
cmp
je
mov
mov
and
xor
or
jne
mov
and
xor
or
jne
mov
and
xor
or
mov
mov
mov
jne
mov
xor
and
or
mov
mov
mov
mov
je
mov
cmp
je
lea
call
mov
mov
cmp
je
mov
cmp
jne
mov
lea
call
mov
add
mov
push
call
add
mov
lea
call
mov
mov
add
call
mov
mov
and
or
mov
jne
mov
and
cmp
mov
mov
je
or
jne
mov
mov
cmp
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
xor
nop
mov
cmp
jne
add
cmp
jl
lea
mov
lea
mov
cmp
jne
add
lea
cmp
jae
cmp
jne
add
lea
cmp
jb
cmp
mov
jne
cmp
jne
cmp
jne
cmp
jne
cmp
jne
lea
call
lea
call
lea
call
lea
call
lea
call
lea
call
mov
pop
pop
pop
mov
pop
ret
cmp
mov
mov
jne
cmp
je
mov
mov
lea
call
mov
cmp
je
mov
mov
push
call
sub
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
movl
mov
mov
mov
mov
push
push
call
add
cmp
jne
mov
mov
mov
push
call
mov
cmp
jne
lea
cmp
jb
lea
call
lea
call
jmp
or
cmp
mov
mov
je
jmp
mov
mov
add
call
jmp
int3
int3
int3
sub
mov
xor
mov
mov
mov
push
xor
cmp
push
push
je
mov
cmp
mov
je
mov
mov
push
call
mov
lea
mov
mov
lea
push
mov
mov
movl
mov
mov
mov
mov
push
push
mov
call
lea
lea
push
lea
push
mov
mov
movl
mov
mov
mov
call
add
cmp
je
push
call
add
cmp
je
mov
call
xor
cmp
mov
je
xor
cmp
lea
sete
mov
push
mov
push
push
push
call
mov
test
js
mov
mov
push
push
lea
call
test
js
cmpb
je
mov
mov
mov
push
push
push
mov
call
mov
test
jne
test
jne
mov
test
je
mov
add
push
call
add
test
jne
push
call
add
lea
call
mov
mov
pop
pop
pop
xor
call
add
ret
mov
mov
movb
mov
jmp
push
mov
push
push
xor
cmp
push
je
cmp
je
mov
mov
mov
push
mov
call
mov
push
push
call
test
js
mov
push
mov
lea
mov
call
cmp
je
cmp
jne
mov
pushl
mov
push
call
mov
mov
lea
mov
mov
call
mov
mov
push
pushl
pushl
push
call
test
jne
lea
call
xor
pop
pop
leave
ret
mov
lea
push
call
mov
lea
push
push
call
test
js
xor
jmp
push
mov
push
mov
cmpb
push
jbe
mov
mov
mov
mov
xor
inc
call
test
je
mov
mov
pop
pop
pop
ret
push
mov
push
mov
test
je
lea
push
pushl
add
pushl
push
call
and
jne
test
jne
pushl
mov
call
pop
pop
ret
andl
jmp
andl
jmp
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
mov
push
mov
test
je
mov
and
cmp
jne
mov
mov
add
mov
mov
xor
pop
ret
mov
test
push
push
je
mov
push
call
add
mov
call
push
mov
call
add
test
pop
pop
jne
jmp
int3
int3
int3
sub
mov
mov
push
push
mov
push
push
mov
mov
test
mov
jne
mov
mov
lea
push
push
push
push
push
mov
mov
call
xor
mov
mov
mov
mov
mov
mov
lea
push
lea
push
call
add
lea
lea
lea
call
test
je
mov
mov
mov
push
push
push
push
push
call
mov
cmp
jne
mov
mov
mov
mov
mov
pop
pop
pop
pop
add
ret
mov
test
jne
mov
mov
test
lea
je
andl
mov
mov
push
mov
call
test
jne
mov
mov
push
mov
call
test
jne
mov
lea
mov
and
mov
je
mov
test
jne
mov
test
mov
mov
je
test
jne
mov
mov
push
push
mov
push
push
push
push
push
lea
push
push
call
cmpl
mov
mov
jne
xor
mov
push
push
push
mov
push
mov
mov
push
push
push
push
push
mov
call
lea
call
cmpl
jne
mov
mov
mov
jmp
cmpl
je
andl
jmp
mov
push
push
lea
push
call
jmp
lea
jmp
mov
jmp
mov
jmp
add
andl
jmp
mov
mov
mov
add
or
mov
ret
push
mov
mov
push
push
xor
mov
mov
mov
mov
cmp
mov
je
mov
lea
push
push
push
call
test
js
pushl
lea
call
mov
cmp
je
push
lea
mov
call
mov
lea
push
push
call
mov
mov
mov
lea
mov
call
lea
call
mov
pop
pop
pop
ret
mov
mov
push
pushl
push
call
ret
int3
int3
sub
push
mov
mov
mov
mov
mov
push
mov
push
push
push
mov
call
test
jne
xor
mov
test
mov
mov
je
mov
mov
mov
mov
mov
push
push
push
push
call
lea
mov
mov
test
jne
test
je
mov
cmpl
je
mov
mov
add
mov
xor
lea
mov
mov
mov
lea
mov
cmp
jae
mov
add
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
jmp
mov
mov
mov
mov
and
mov
jne
pop
pop
pop
pop
add
ret
int3
int3
mov
mov
test
je
mov
ret
xor
ret
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
int3
cmp
push
mov
movl
je
push
mov
push
mov
push
mov
test
jne
mov
movzbl
movzbl
cmp
jne
xor
add
cmp
jne
xor
pop
pop
pop
pop
ret
cmp
je
sub
cmp
ja
jmp
test
je
pop
pop
pop
mov
pop
ret
mov
test
je
test
jne
cmp
jne
lea
cmp
je
mov
mov
jmp
pop
pop
pop
mov
pop
ret
lea
shlb
mov
or
mov
or
mov
or
mov
or
mov
or
repz
adc
int3
int3
int3
int3
int3
int3
int3
mov
mov
mov
lea
push
mov
push
lea
push
call
mov
mov
add
test
mov
jne
ret
mov
mov
push
call
mov
mov
call
fldl
fdivl
push
push
fstpl
call
pop
pop
call
cmp
jl
ret
xor
inc
ret
int3
int3
int3
int3
int3
int3
sub
push
mov
push
mov
mov
mov
mov
push
push
add
push
xor
mov
movl
movl
call
mov
or
cmp
je
cmp
je
mov
mov
mov
mov
pop
pop
pop
mov
pop
add
ret
mov
mov
mov
push
mov
call
test
jne
push
lea
push
mov
call
mov
mov
pop
mov
mov
pop
mov
pop
mov
mov
pop
add
ret
xor
cmp
jne
push
mov
cmp
jne
push
mov
cmp
jne
pop
mov
pop
ret
push
mov
push
mov
push
mov
push
pushl
pushl
push
call
mov
mov
mov
call
push
mov
mov
push
call
mov
push
push
call
mov
add
mov
mov
cmp
jne
mov
mov
mov
and
xor
or
jne
mov
pop
pop
pop
ret
push
mov
mov
mov
push
add
push
push
call
test
je
mov
mov
imul
test
lea
ja
mov
add
pop
ret
mov
mov
test
je
andl
add
dec
jne
jmp
xor
pop
ret
push
mov
mov
andl
test
jne
lea
call
lea
pop
jmp
push
mov
andl
call
test
mov
jne
pop
jmp
int3
int3
fldl
fcoml
fnstsw
test
jnp
fcoml
fnstsw
test
jnp
fldl
fcoml
fnstsw
test
je
fcoml
fnstsw
test
je
fstp
fldl
faddl
fcomp
fnstsw
test
je
enter
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
call
and
push
push
mov
push
jne
test
jne
mov
lea
xor
push
mov
mov
call
testb
jne
mov
cmp
je
mov
mov
lea
push
push
call
lea
call
mov
mov
push
push
lea
call
test
je
mov
push
push
call
add
test
push
call
mov
fs
mov
add
repnz
int
xchg
ficompl
mov
add
jp
lahf
xchg
add
into
pushf
add
add
call
in
add
push
push
push
push
push
push
call
mov
movsb
arpl
add
mov
add
mov
mov
xchg
lds
add
add
into
mov
jle
add
add
add
rolb
add
add
jge
add
push
bound
cmc
sub
pop
popl
push
lea
push
push
push
push
push
call
jne
add
pop
jns
mov
mov
mov
scas
mov
imul
pushf
lods
lret
add
mov
add
add
je
call
add
add
add
lcall
push
push
push
push
push
push
push
lea
push
push
push
lea
push
call
add
mov
mov
add
jb
add
add
jne
pusha
in
in
add
mov
mov
add
jecxz
add
add
mov
add
in
fcomps
push
push
lea
push
lea
push
lea
push
push
push
lea
push
call
xor
add
add
jns
insb
ret
outsl
add
add
add
add
add
jae
add
push
lea
push
push
push
push
push
push
push
lea
push
call
add
jnp
imul
jns
jmp
scas
mov
cld
push
repnz
mov
jmp
out
jbe
mov
add
call
jp
add
add
xor
add
push
push
push
push
lea
push
push
call
jmp
xchg
add
xchg
add
push
aad
imul
xchg
add
add
add
addr16
mov
cmpsl
ja
add
out
aad
lret
xchg
add
add
out
stos
add
add
icebp
lods
imulb
clc
mov
add
mov
lret
fstp
ljmp
in
lcall
xchg
push
add
push
push
push
lea
push
push
lea
push
call
add
add
add
incb
add
cwtl
mov
add
stos
ret
add
add
ret
add
add
mov
add
add
add
cwtl
add
jmp
push
push
push
push
push
push
push
push
lea
push
call
push
mov
roll
clc
in
add
add
mov
xchg
add
xchg
out
push
add
push
add
imul
add
pop
add
add
mov
add
add
push
push
push
push
lea
push
push
push
call
add
add
add
mov
xlat
pop
push
add
add
add
add
imul
ljmp
add
inc
hlt
push
push
lea
push
lea
push
push
push
lea
push
call
add
add
push
mov
bound
rclb
pop
add
js
iret
add
xlat
add
add
clc
test
sub
pop
mov
push
push
push
push
lea
push
push
push
lea
push
call
scas
mov
movsl
mov
add
testb
add
mov
add
shl
mov
ljmp
jnp
jns
hlt
add
pusha
popl
test
add
arpl
fldl
mov
loopne
push
push
lret
arpl
lcall
pop
in
add
push
lea
push
push
push
call
leave
rcl
gs
add
add
push
mov
add
pop
add
add
xchg
jle
add
add
lods
xchg
int3
rolb
add
jne
add
add
add
lret
outsl
std
sti
xlat
cli
vmulpd
mov
fiadds
into
rolb
add
pop
jecxz
xchg
add
jmp
jo
mov
jmp
add
mov
xor
push
push
xor
push
sub
add
dec
add
sub
lea
ror
pop
add
pop
push
push
push
push
call
lods
pop
mov
rorl
pop
add
jle
add
xlat
lds
add
scas
fs
scas
pusha
repnz
add
int
movb
fisubrl
bound
int
in
lock
pushl
push
push
push
lea
push
push
push
lea
push
push
lea
push
call
outsl
ljmp
add
cli
add
pushf
insb
loop
add
cwtl
stc
mov
loope
call
add
js
add
int
clc
add
add
add
js
add
lret
cmpl
addr16
add
faddl
add
icebp
sub
pop
call
push
lea
push
push
lea
push
push
push
push
call
add
in
fiadds
loop
mov
add
call
fs
add
mov
pop
fiadds
lock
add
add
testb
movsl
xchg
mov
add
jp
add
jo
add
add
test
cmc
add
xchg
mov
mov
add
inc
lock
push
push
push
call
fdivrl
add
add
pusha
add
in
cmpsb
mov
sti
imul
lcall
shrb
add
mov
jmp
mov
out
fcmovb
int
addb
add
in
hlt
pop
lea
push
lea
push
push
push
push
lea
push
push
call
lahf
fcoms
add
add
pusha
test
xlat
in
add
rolb
add
xchg
mov
out
add
adc
jo
call
loop
add
cwtl
add
fistps
push
push
push
lea
push
call
call
push
out
add
add
mov
popa
add
pop
push
hlt
add
aad
add
pop
add
xlat
push
xchg
inc
add
add
add
add
jbe
mov
add
mov
add
bound
add
add
jae
add
int3
cmpsb
push
iret
add
lcall
jne
push
lea
push
push
push
push
lea
push
push
push
call
std
mov
lret
xchg
xchg
mov
mov
fldl
leave
add
jmp
jecxz
pop
into
mov
aad
ja
cmpsb
insb
sarl
add
test
jmp
add
add
outsl
add
fidivl
add
mov
add
add
sarb
add
add
aam
xchg
out
lock
stos
jae
add
sub
pop
pushl
push
lea
push
call
lret
add
cli
xchg
jp
add
movl
add
imul
jmp
pop
add
int
in
add
pushf
mov
add
jge
cli
cmc
add
push
mov
add
in
clc
pop
call
push
push
lea
push
call
xchg
add
jl
mov
add
add
js
jns
add
xchg
nop
out
add
xchg
mov
add
add
cmpsl
add
add
pop
pushl
push
push
push
push
push
push
lea
push
call
add
scas
out
jge
in
xchg
add
insb
add
testb
stos
mov
add
add
iret
cmpsb
add
add
in
mov
cmc
sub
pop
pushl
push
push
push
push
push
call
mov
lods
add
add
in
add
xchg
xchg
pop
add
flds
mov
imul
add
mov
call
push
push
push
and
add
lea
shr
shr
sub
ror
not
rol
pop
xor
sub
pop
push
push
push
push
push
push
lea
push
call
add
jge
cld
stos
xchg
add
lahf
mov
add
add
scas
mov
add
lds
add
add
mov
movsb
push
pop
add
addl
pop
add
push
lea
push
lea
push
push
lea
push
push
call
add
mov
ja
add
push
add
loop
jno
add
pusha
add
icebp
imul
add
ja
jnp
jmp
in
call
push
push
push
rol
dec
add
not
push
xor
add
add
add
add
sub
shl
add
pop
sub
ror
xor
pop
push
push
lea
push
push
push
push
push
call
bound
jge
out
sahf
addb
add
jbe
fisubs
push
js
push
lods
in
add
add
test
movsl
rorb
push
push
je
fsubrl
in
in
lcall
push
push
call
clc
add
add
add
jecxz
push
fadds
mov
push
add
js
rclb
rolb
add
mov
xlat
add
add
sub
pop
push
call
push
push
push
push
push
call
mov
enter
mov
repnz
addb
mov
jge
test
lods
add
stc
add
add
addr16
fnstenv
push
add
add
fisubs
add
jle
roll
test
out
cmc
add
enter
sub
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
call
add
mov
jmp
jle
add
cmpsb
mov
add
add
movsl
push
mov
in
add
add
jo
add
lock
add
gs
out
add
test
push
add
icebp
add
out
add
pop
jle
add
add
insb
int
add
add
sub
pop
push
push
lea
push
push
lea
push
push
push
push
push
call
add
add
add
jle
pop
je
add
sti
sti
js
push
clc
jb
add
jne
js
fsts
pushf
loopne
add
sahf
rolb
add
in
xor
js
add
add
sub
pop
push
mov
push
push
lea
push
call
jmp
add
stos
add
scas
fldpi
lea
std
mov
lret
add
mov
fadds
mov
test
mov
add
fwait
add
out
pop
shlb
in
xchg
aam
xchg
add
cli
call
icebp
xchg
add
pop
in
add
push
lea
push
lea
push
push
push
push
push
push
push
call
mov
push
hlt
xchg
add
jne
add
mov
mov
sbb
add
jo
add
mov
add
add
add
add
imul
mov
push
push
add
clc
add
add
in
fdivr
lcall
ret
xor
add
push
push
push
call
mov
add
std
nop
stos
push
add
jmp
gs
jne
xorl
rolb
testl
add
lea
test
out
push
jns
cltd
xchg
mov
add
add
add
icebp
addr16
mov
sub
pop
mov
xor
push
push
push
push
push
push
push
push
push
call
add
pop
push
add
mov
jno
lahf
add
not
lods
imul
add
rcrl
mov
jno
add
cmpsl
jmp
movl
lcall
jne
push
push
push
push
push
push
lea
push
lea
push
push
push
call
push
test
jae
add
add
cli
add
fiaddl
add
add
xchg
add
not
mov
add
push
mov
in
push
add
add
add
xchg
add
lret
outsl
add
sub
pop
mov
xor
push
push
lea
push
push
lea
push
push
push
call
rolb
loopne
lock
add
cmpsl
ljmp
popf
addl
addr16
add
repnz
addl
fsubr
test
add
mov
lcall
lock
push
call
add
test
push
add
push
scas
addl
add
outsl
jb
add
repnz
add
out
add
add
add
jne
add
mov
fdivrl
add
mov
fildl
mov
lds
arpl
jno
pop
enter
lcall
push
push
push
push
push
push
push
call
add
add
push
cld
mov
add
in
fsubr
aam
add
add
mov
cli
mov
xchg
fldl
mov
sub
pop
mov
push
push
lea
push
push
push
lea
push
push
push
push
push
call
test
pop
mov
add
add
in
insb
movsl
add
addr16
movsl
add
sahf
ret
xchg
stos
jnp
add
andb
add
add
xchg
addb
add
add
add
fcompl
add
mov
mov
add
sub
pop
xor
push
push
call
add
pusha
mov
add
movsb
add
add
add
add
gs
fsubl
pop
xchg
out
sub
pop
add
push
push
call
fcmovb
add
xor
add
add
loopne
insb
jle
add
mov
cmc
loope
scas
enter
cmpsb
lea
mov
push
std
movsl
add
fwait
add
rolb
add
add
lcall
push
push
push
push
lea
push
push
push
push
push
push
call
add
rcl
jp
jno
lock
popf
add
add
add
cltd
hlt
out
int3
aam
scas
aam
imul
add
clc
out
mov
repnz
aam
out
add
sub
pop
mov
xor
push
lea
push
push
push
lea
push
push
push
push
call
lods
add
loop
imul
jecxz
les
lret
add
lahf
add
cmpsb
add
jns
jae
mov
lahf
add
sahf
add
lea
clc
jmp
add
lea
enter
cld
cs
sub
add
add
arpl
fiadds
add
mov
push
pop
add
add
testb
js
add
mov
jmp
mov
sti
add
clc
pop
rep
pop
push
push
lea
push
push
push
push
push
call
mov
rol
add
sbb
jecxz
ja
movsl
sbbl
fcompl
add
add
xchg
scas
add
cld
add
xchg
lcall
add
add
scas
call
mov
sub
pop
mov
add
push
lea
push
push
push
lea
push
lea
push
push
push
push
push
call
add
ja
add
and
add
jge
add
mov
jne
jae
rorl
iret
std
mov
add
add
clc
add
add
sti
not
add
jns
shl
add
stc
push
lret
push
jne
xchg
lds
push
add
add
ret
add
add
push
push
push
push
push
push
push
push
lea
push
call
add
lcall
add
add
jmp
mov
icebp
scas
xchg
add
fld
test
add
ret
xor
add
push
lea
push
push
push
push
lea
push
call
in
add
mov
jne
add
add
iret
lret
mov
addl
insb
push
add
stos
std
push
xchg
lcall
inc
and
mov
push
lea
push
call
add
popf
add
rolb
addb
lret
imul
add
add
jecxz
sub
pop
mov
push
push
lea
push
push
push
push
lea
push
call
cmc
add
pop
lock
mov
add
add
add
lods
int
add
cmpsb
add
ljmp
add
test
subl
add
pop
add
jmp
lret
jae
jb
add
add
cmpsl
add
mov
add
add
rcrl
add
adc
push
lea
push
push
push
lea
push
push
call
scas
add
add
push
add
popa
add
lahf
out
out
lods
push
add
test
lret
ret
mov
add
xchg
jge
cld
xchg
push
stos
scas
mov
add
ret
add
sub
pop
add
push
lea
push
call
add
add
mov
push
lods
add
data16
test
outsl
jns
fwait
mov
imul
add
mov
xchg
add
in
cltd
sub
pop
mov
xor
push
lea
push
push
lea
push
push
lea
push
push
push
call
int
addr16
mov
data16
mov
add
add
fs
lret
push
add
sub
pop
add
push
push
call
pop
je
xchg
xchg
push
add
add
add
push
hlt
add
add
xchg
lods
push
add
cli
in
std
add
lcall
mov
outsl
add
add
in
clc
pop
add
mov
push
push
sub
lea
push
sub
add
rol
shl
lea
shr
sub
xor
dec
pop
sub
rol
pop
push
xor
rol
pop
pushl
push
shr
pop
call
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
iret
lret
xchg
push
shlb
add
add
mov
lahf
stos
add
add
add
add
xchg
in
mov
add
movl
add
add
add
add
gs
add
add
into
sub
add
les
testb
lea
sub
sub
sub
sub
sub
not
pop
lea
add
pop
push
add
pop
push
push
lea
push
lea
push
lea
push
push
push
push
call
scas
mov
push
call
test
add
add
jb
lock
int3
test
imul
repnz
shll
lods
loopne
pop
arpl
lret
jbe
add
add
add
je
push
xchg
jne
add
mov
add
xchg
add
jle
add
jnp
lds
imul
pop
push
push
add
shr
pop
call
mov
push
not
sub
pop
push
push
push
push
call
add
mov
add
add
rclb
popl
out
add
cmpsb
movsb
stos
test
mov
xchg
mov
add
pop
movsb
mov
fadds
mov
add
add
rclb
hlt
pop
push
mov
push
not
not
inc
xor
pop
add
push
rol
sub
rol
pop
add
add
push
rol
sub
pop
mov
push
push
push
push
push
lea
push
call
popa
pop
push
add
add
add
add
add
jp
cli
xlat
cmc
add
cltd
add
add
data16
std
mov
add
repnz
add
int3
testl
out
pop
add
xchg
pop
roll
test
in
lcall
xor
push
push
push
push
push
push
push
push
push
call
jnp
lds
xchg
sbbl
pop
into
jbe
arpl
pushf
ror
add
pushf
in
push
cld
add
mov
add
mov
pop
addb
cli
jne
pop
add
in
fdivr
lcall
les
add
push
add
add
xor
pop
add
push
lea
push
lea
push
call
jecxz
mov
add
add
add
clc
in
jbe
ret
add
popf
add
lcall
movsb
add
add
sbbb
add
movsl
rcll
add
add
orb
add
mov
xor
push
push
call
add
add
add
push
add
je
add
add
cwtl
test
add
cmc
add
add
imul
add
lret
mov
add
add
into
add
cmpsb
movsl
aam
jns
imul
xlat
arpl
mov
add
scas
add
xchg
add
lods
sub
pop
add
pop
push
shl
dec
pop
mov
xor
push
push
push
push
push
call
add
add
add
add
cltd
jnp
mov
movsb
ja
add
fimuls
push
add
xlat
jne
pop
mov
ljmp
jmp
add
loope
add
add
out
add
xlat
mov
popf
rcl
scas
in
imul
add
add
je
in
in
pop
rep
push
push
push
push
lea
push
push
lea
push
push
push
call
add
mov
out
roll
jp
je
into
lretw
pop
mov
add
xchg
sbbl
mov
mov
push
push
push
lea
push
lea
push
call
popl
jecxz
andb
arpl
test
add
add
add
add
mov
lret
les
add
lock
cmpb
jb
add
jecxz
add
jno
jne
push
add
testb
add
or
push
push
push
call
mov
fidivrl
into
int3
xchg
jae
roll
mov
shll
add
jmp
sti
test
testl
mov
add
out
stos
call
std
push
add
push
stos
add
add
add
out
add
add
iret
jo
jp
in
hlt
lcall
les
add
push
not
pop
or
je
push
push
lea
push
push
push
lea
push
push
push
push
push
call
xchg
xchg
mov
add
xchg
aam
add
movsb
flds
lret
add
add
add
mov
in
add
fistpll
call
lcall
incb
lahf
mov
imul
lret
push
add
imul
movsb
push
mov
add
add
xchg
sarl
jle
lcall
xor
mov
push
call
jno
mov
movsl
pop
arpl
lds
mov
push
add
pusha
lds
scas
mov
add
lock
add
add
shll
add
add
adcb
ja
push
add
add
push
add
lods
add
lcall
push
sbb
or
xchg
push
push
lea
push
push
push
push
push
push
push
call
loopne
add
cli
add
pop
add
jecxz
clc
fisubl
push
add
mov
out
add
jp
add
ret
add
add
pop
xor
push
push
push
push
push
lea
push
lea
push
push
push
lea
push
call
add
xlat
mov
jbe
les
add
in
rcrl
test
add
out
add
loopne
rolb
addr16
jb
cltd
add
add
add
add
lcall
les
add
push
sub
not
rol
pop
add
push
inc
ror
pop
add
push
push
inc
pop
mov
xor
push
add
shl
pop
add
push
lea
push
lea
push
push
push
lea
push
call
xorl
lret
cltd
add
in
imul
ljmp
int3
repnz
push
add
andb
flds
out
add
jp
mov
jno
cmpsb
pushf
mov
js
out
testb
cli
add
call
rep
mov
xor
push
lea
push
push
push
push
push
call
testb
add
jl
jae
mov
add
add
mov
pop
add
add
mov
add
add
fsubs
gs
js
push
movsl
hlt
add
repnz
sub
pop
or
je
push
push
call
add
std
clc
loop
add
xlat
lret
add
add
lret
cltd
xchg
lret
mov
add
rcrl
lcall
repz
not
rol
pop
add
push
shr
lea
pop
add
push
push
lea
push
push
push
push
call
leave
add
fucomp
aad
add
je
add
add
add
add
pop
add
add
add
fdivl
les
add
add
mov
add
add
mov
mov
sub
pop
rep
pop
push
push
xor
shr
shr
push
or
not
add
dec
sub
shr
shl
xor
pop
shl
ror
add
add
pop
push
push
push
push
push
push
lea
push
push
call
mov
add
movsl
idiv
add
add
pop
movsb
mov
jle
add
fiadds
add
add
xchg
push
cltd
add
sarb
add
add
add
xchg
mov
out
push
add
add
addr16
loopne
pop
push
push
lea
push
lea
push
push
push
push
call
pop
jbe
fdivrl
in
addr16
add
mov
pop
xlat
pop
scas
add
add
add
out
mov
popa
add
in
mov
je
fcoml
rcrl
mov
arpl
add
int
add
ljmp
lcall
jne
push
pop
mov
push
inc
pop
mov
jmp
push
push
push
push
lea
push
push
push
push
call
add
add
jecxz
lock
enter
add
xchg
add
movl
add
call
xchg
jne
cld
lret
add
shll
add
bound
push
hlt
lahf
add
clc
scas
sub
pop
push
push
push
push
call
add
add
add
xchg
arpl
xchg
add
test
add
add
xchg
test
add
out
add
sti
add
mov
stos
jl
xchg
add
add
into
add
add
in
add
push
add
add
pop
push
push
push
call
enter
fldl
stc
cmpl
xchg
add
fbld
outsl
add
pop
push
mov
clc
pop
push
push
sub
pop
push
push
sub
inc
not
pop
push
push
sub
lea
pop
mov
push
ror
lea
lea
shl
pop
pop
pop
push
xor
shl
sub
pop
pop
push
ror
pop
pop
leave
push
dec
pop
ret
push
push
push
push
call
incb
ret
popa
arpl
add
lods
jns
pusha
fadds
lds
add
jge
mov
push
lahf
std
lahf
add
add
adcl
push
lds
add
aam
pusha
faddl
add
add
add
loopne
add
add
iret
shl
mov
mov
in
hlt
lcall
in
push
push
lea
push
push
push
push
call
xchg
scas
mov
add
mov
mov
enter
add
add
jge
xchg
add
add
add
ljmp
in
mov
add
out
add
mov
fwait
pop
xchg
call
push
push
push
lea
push
push
lea
push
push
push
push
lea
push
call
bound
push
add
mov
add
add
out
imul
add
in
fcomps
push
add
add
add
rol
pop
push
push
push
call
scas
sub
add
jle
add
add
fists
add
lcall
add
xchg
imul
mov
jmp
xchg
rolb
mov
add
push
push
push
push
push
lea
push
push
lea
push
call
push
xchg
out
into
push
add
cli
mov
sti
add
jmp
popf
test
cld
test
test
subb
add
add
aam
in
push
add
add
mov
in
loopne
lcall
movl
push
shr
pop
addl
push
push
lea
push
push
push
lea
push
lea
push
call
addr16
lahf
add
cmpb
push
mov
gs
add
notb
leave
out
jl
add
xchg
add
xchg
xchg
cwtl
add
popa
add
rclb
cld
jae
in
leave
mov
int3
add
repnz
xchg
add
xchg
jl
add
in
sub
pop
test
je
mov
push
inc
pop
pop
pop
push
sub
rol
pop
pop
push
inc
pop
pop
push
push
push
push
lea
push
push
push
push
call
add
xchg
in
imul
add
mull
lret
roll
add
jmp
lea
stos
test
mov
add
add
add
faddl
add
out
xchg
mov
add
push
add
mov
jge
xchg
add
xchg
ret
outsl
sub
pop
leave
push
sub
pop
ret
push
push
push
lea
push
push
push
call
add
gs
imul
pop
cli
lret
jge
nop
xchg
rcrl
data16
pusha
jae
mov
clc
scas
aad
sbbb
sar
add
jo
cwtl
cltd
add
imul
in
push
inc
rol
not
pop
add
push
push
push
push
push
push
push
call
rcll
cltd
pusha
mov
add
cmpsb
in
jno
add
add
cld
add
pusha
add
je
add
movsl
pop
jae
mov
in
call
leave
popa
shl
pop
push
push
lea
rol
pop
push
testl
push
pop
addl
push
push
push
lea
push
call
xchg
mov
addb
insb
push
jo
outsl
int3
jecxz
lahf
insb
add
add
mov
add
into
add
add
xchg
jo
add
add
add
add
out
sub
pop
call
push
sub
add
dec
pop
mov
pushl
push
push
push
push
push
push
call
add
mov
add
addr16
add
pop
add
outsl
push
add
jge
movl
add
fcomip
add
cmc
mov
jnp
add
scas
pusha
add
mov
add
pop
idiv
int
rorl
mov
xchg
add
add
pop
add
jecxz
cmpsl
push
lods
js
divb
mov
jne
imul
in
call
push
push
push
push
call
in
testb
movsb
add
fildl
lods
lret
aad
fadds
out
mov
mov
add
mov
add
popf
add
lret
mov
add
add
lcall
add
mov
cmc
add
test
jbe
jge
mov
add
aad
add
add
in
in
pop
push
push
rol
add
add
inc
pop
call
cmpl
jne
push
push
call
test
lods
mov
xchg
pop
mov
add
add
mov
push
add
add
add
add
push
jl
movb
push
add
clc
mov
lock
pop
pop
push
not
not
rol
sub
pop
pop
pop
push
push
call
xchg
js
gs
pop
push
jle
int
add
ror
jns
fwait
add
imul
add
mov
addr16
add
jae
les
iret
mov
mov
fs
add
add
xlat
cltd
xchg
lock
cmpsl
sub
pop
pop
push
lea
push
lea
push
lea
push
push
push
push
push
push
call
fcoml
add
xchg
add
add
add
jno
rcr
add
in
fldl
push
mov
stc
aad
mov
jp
add
pop
mov
mov
pop
leave
push
push
push
call
faddl
repnz
push
into
rcl
add
add
cmc
icebp
pop
add
pushf
add
test
icebp
xchg
fldl
fs
pusha
mov
in
hlt
lcall
add
push
lea
push
push
push
lea
push
push
push
push
call
add
pop
mov
cmpsb
add
ficompl
push
add
flds
addl
les
fistpl
mov
xchg
fbstp
filds
cwtl
sti
jns
jno
idivb
ja
mov
rcrl
add
iret
add
add
lcall
push
lea
xor
rol
pop
mov
push
shl
sub
pop
add
push
push
push
call
xchg
add
add
add
mov
ljmp
add
test
add
iret
add
add
xchg
popa
lods
add
rorl
ja
xlat
add
lret
pop
add
ja
pushf
scas
enter
jne
pushf
movl
ret
pop
push
push
push
call
add
imulb
add
add
push
add
mov
xchg
iret
xorl
add
add
sub
pop
push
push
push
add
inc
sub
xor
pop
push
push
push
push
push
lea
push
push
push
call
lock
movsb
jmp
iret
add
lods
insb
add
stos
or
fwait
leave
fwait
stos
jno
add
add
mov
sti
hlt
mov
aad
lret
add
lret
mov
scas
add
push
ljmp
in
lcall
inc
cld
or
add
push
push
lea
push
push
lea
push
lea
push
call
fildl
addl
add
ficoml
lret
jne
add
mov
add
or
xchg
add
xlat
push
mov
xchg
js
lcall
add
add
popa
xchg
fiaddl
lcall
xor
call
pop
push
push
inc
not
pop
call
push
shl
add
sub
pop
subl
push
pop
cmpl
jne
pop
push
lea
push
push
lea
push
push
push
push
push
push
push
call
lahf
add
mov
jecxz
ror
mov
movb
fiadds
jb
push
mov
imul
into
xchg
add
add
lods
mov
add
sub
pop
pop
push
push
lea
push
push
push
push
lea
push
push
call
repnz
rcr
in
add
pushf
xchg
jae
mov
stos
cmpsb
add
loope
mov
mov
add
add
in
add
shl
add
push
jbe
add
ja
outsl
shr
push
adcl
test
lcall
push
push
lea
push
push
lea
push
push
call
add
lret
add
xchg
mov
jb
add
mov
push
int3
add
add
add
add
add
sub
pop
pop
push
lea
push
push
push
push
lea
push
push
lea
push
lea
push
lea
push
call
add
add
push
addb
in
mov
jb
mov
add
cmpsb
aam
pushf
divb
in
add
pusha
add
repnz
jae
xchg
add
into
pop
add
roll
add
add
shl
lds
lcall
push
lea
push
push
push
lea
push
push
push
push
call
fs
movsl
add
add
leave
jne
popa
out
popa
mov
add
xorb
add
fldln2
jge
xchg
add
jnp
lods
mov
xchg
pop
pop
shl
mov
sub
pop
ret
push
push
lea
push
push
lea
push
push
push
call
add
add
in
incb
add
stos
jns
add
mov
movb
add
ja
jge
push
add
jns
add
fadds
fwait
cmpsl
add
fadds
add
push
movb
roll
loop
mov
in
call
lea
pop
add
push
shr
pop
push
push
not
sub
pop
push
push
push
push
push
push
push
lea
push
call
add
add
add
mov
pop
add
add
pop
outsl
add
mov
not
add
add
bound
add
cmpsb
push
ljmp
lahf
pushf
add
cmpsl
lock
iret
jl
add
movsb
cmpsb
fadds
in
mov
add
mov
call
push
mov
push
shl
lea
pop
lea
sub
push
add
sub
pop
mov
push
push
push
push
lea
push
lea
push
push
call
jo
push
jecxz
add
imul
add
in
jne
lods
loopne
cld
lcall
cwtl
jmp
mov
add
xchg
mov
pop
shr
push
push
push
push
push
push
lea
push
push
lea
push
lea
push
call
pop
stos
fstpt
jnp
leave
add
push
add
clc
add
jnp
add
enter
add
lcall
stc
add
mov
aam
addl
lret
cmpsl
add
pop
add
push
lea
push
push
push
lea
push
call
bound
cmpsb
add
out
aam
add
add
add
push
movsb
mov
repnz
add
hlt
cltd
add
into
add
add
in
lock
xchg
ret
add
fadd
cmpsb
add
mov
sub
pop
mov
push
lea
push
push
push
push
call
add
add
add
lods
mov
add
add
add
jecxz
add
fwait
je
add
mov
add
pushf
mov
lds
jo
mov
mov
push
lea
push
push
push
push
call
add
push
add
push
add
out
mov
bnd
add
add
add
or
add
cmpsb
test
push
loopne
mov
add
sti
fsubp
add
lods
add
cld
test
add
mov
add
add
cltd
xchg
icebp
sub
pop
add
push
sub
pop
add
push
dec
pop
mov
mov
push
sub
xor
pop
cmp
jne
cmp
jne
push
inc
pop
mov
push
shl
pop
movl
push
push
push
push
push
push
push
push
push
call
iret
fiadds
mov
loopne
pusha
add
mov
pushf
add
cmpsb
xchg
add
jmp
push
test
scas
add
jl
int
rcl
lret
add
fs
push
lcall
adc
add
push
push
call
imul
scas
add
repnz
ret
cltd
cmc
loope
stc
jle
ljmp
add
add
jne
mov
add
add
enter
fcmovne
je
mov
jns
arpl
add
lcall
inc
cld
mov
push
push
push
call
enter
mov
add
add
jno
aam
add
jbe
cld
fwait
stos
lcall
in
data16
sti
add
rcl
iret
enter
add
add
add
hlt
sub
pop
sub
jne
push
add
sub
pop
mov
push
xor
pop
movl
push
push
push
push
push
call
fiaddl
jb
add
pop
jge
in
jb
add
rcrl
fiadds
mov
arpl
fdivs
test
mov
add
lea
push
fdivrs
add
push
flds
arpl
pop
clc
jl
ficomps
mov
add
mov
in
in
pop
jmp
mov
push
push
lea
push
call
add
push
mov
clc
add
icebp
mov
mov
je
cld
add
out
add
test
add
data16
mov
mov
pushf
ljmp
lcall
nop
mov
add
push
lea
push
push
push
push
push
push
call
out
lcall
add
mov
sti
out
lret
add
xchg
data16
ja
pop
add
add
add
xchg
sub
pop
cmp
jne
push
push
push
push
push
push
lea
push
call
add
leave
add
add
clc
push
fs
add
push
pop
imull
push
add
add
add
add
mov
add
add
add
add
test
mov
movl
push
lea
push
call
xchg
add
iret
mov
int3
sti
cmc
add
add
shlb
adcb
test
add
add
add
add
sbbl
mov
scas
add
jmp
push
addl
add
scas
test
mov
in
clc
pop
jmp
push
not
add
add
pop
mov
cmpw
jne
push
push
push
lea
push
push
lea
push
lea
push
push
call
add
fiaddl
addl
add
lds
rcll
mov
insb
jp
lea
cltd
call
pushf
mov
lods
addl
loopne
mov
movl
push
push
push
lea
push
push
lea
push
lea
push
push
push
call
mov
fwait
mov
sarl
loope
mov
sub
fistps
test
std
fstl
mov
fldl
insb
mov
jno
fildl
mov
pusha
fwait
jb
sub
clc
fidivl
cwtl
add
pop
mov
imul
add
push
xchg
add
mov
in
fdivr
lcall
or
add
rolb
xlat
rol
shr
pop
pushl
push
push
push
push
push
push
lea
push
push
call
add
jns
lea
jne
pop
cmpsb
add
add
add
add
lcall
jge
testl
add
add
sar
mov
lcall
mov
push
sub
pop
mov
push
shr
add
shr
pop
mov
push
push
inc
not
shl
push
or
not
add
xor
rol
shr
sub
shr
add
inc
pop
ror
ror
not
dec
pop
push
sub
lea
pop
push
call
push
shr
rol
sub
xor
pop
cmpl
je
push
push
not
add
shr
ror
push
or
not
add
dec
sub
not
rol
pop
pop
push
dec
lea
rol
pop
push
call
push
ror
pop
cmpl
je
push
push
shr
push
sub
add
rol
sub
sub
sub
sub
pop
lea
pop
push
push
lea
push
lea
push
push
lea
push
call
loope
andb
lahf
add
std
pushf
ret
push
pop
add
lock
pusha
push
pop
out
pop
add
add
notl
fcmove
addl
rolb
xchg
pop
mov
je
pop
add
ljmp
roll
add
lcall
push
sub
ror
pop
call
cmpl
je
push
push
sub
dec
xor
push
push
pop
add
dec
inc
dec
inc
sub
rol
shl
pop
not
dec
lea
add
pop
push
push
lea
push
push
lea
push
lea
push
call
jmp
mov
add
lock
add
popa
add
xchg
lods
ljmp
xchg
add
out
add
add
add
add
les
add
add
loope
aad
add
add
sub
pop
push
push
push
push
push
call
add
aad
add
add
xchg
jl
fcmovne
lock
add
add
add
add
test
xchg
add
loopne
lods
add
in
int3
addl
cwtl
pop
add
add
lahf
push
loopne
mov
call
cmpl
je
push
push
lea
add
shl
push
xor
add
lea
rol
dec
sub
add
pop
dec
shr
sub
pop
push
push
lea
push
push
push
push
push
push
call
jb
jne
ret
mov
shr
add
push
pop
add
add
add
test
push
add
sti
xchg
jecxz
add
and
icebp
add
jo
add
add
pop
testb
push
add
in
loopne
push
push
push
push
push
push
push
call
add
push
js
data16
add
add
mov
add
add
add
xchg
jp
loop
push
int
xchg
pop
push
fildl
mov
mov
add
add
add
addb
jle
nop
add
add
notb
add
add
pop
lods
add
add
popa
lret
sub
pop
call
cmpl
je
push
push
xor
sub
push
push
pop
add
shr
sub
sub
inc
not
shl
pop
inc
not
not
sub
pop
push
lea
push
push
call
sti
add
add
scas
lahf
pop
add
fisttpll
mov
push
idivb
cli
add
cmpsl
fbstp
call
test
insb
lret
out
add
enter
add
add
add
movsb
mov
test
add
mov
add
add
push
lea
push
push
call
sarb
add
lea
lock
sahf
add
add
stc
add
add
add
add
push
pop
call
negl
add
iret
into
add
aad
add
add
xchg
flds
lcall
ss
call
jb
add
jmp
std
add
pusha
jo
rcr
xchg
call
add
add
mov
push
add
push
divl
jb
sub
pop
cmpl
je
push
push
sub
shl
push
or
inc
add
rol
sub
xor
inc
pop
lea
dec
sub
pop
push
push
call
movsb
pop
add
add
add
add
add
add
mov
lds
add
add
int3
popl
clc
add
not
fs
add
lcall
call
push
lea
push
push
push
push
push
call
add
mov
test
mov
mov
push
flds
imul
add
add
int
add
lds
popa
xchg
add
add
add
add
add
add
popa
add
iret
cmpsb
add
lcall
cmp
or
int3
je
push
push
shl
push
sub
add
rol
shl
shr
sub
shr
xor
add
sub
pop
add
inc
ror
pop
push
push
push
push
push
lea
push
push
lea
push
call
mov
stc
pop
call
mov
cltd
push
fstpt
movsb
push
jle
xchg
push
leave
push
ja
add
add
push
call
push
add
add
inc
pop
cmpl
je
push
push
dec
add
push
xor
add
not
sub
sub
sub
pop
add
inc
lea
pop
push
push
call
aad
iret
mov
add
fcom
mov
jae
lret
add
add
add
mov
add
add
add
push
fucomip
insb
mov
sbbl
clc
pop
push
push
push
push
push
call
add
add
add
add
xchg
add
add
clc
into
les
mov
add
add
jecxz
sbbl
bound
cmp
les
add
out
std
mov
add
js
test
add
negl
stos
push
add
add
subb
add
addb
pop
call
cmpl
je
push
push
shr
shr
push
sub
add
add
sub
add
pop
rol
pop
push
not
pop
push
call
push
sub
shl
ror
not
pop
cmpl
je
push
push
rol
push
xor
add
add
sub
sub
sub
pop
rol
sub
dec
pop
push
sub
pop
push
push
push
push
push
push
push
call
ret
add
pop
add
xor
shll
add
fwait
jecxz
jbe
std
mov
sti
add
jmp
add
in
jo
add
xchg
add
lcall
add
add
fiaddl
in
add
sub
pop
call
push
push
push
call
mov
lods
add
add
mov
in
mov
xchg
jmp
imul
push
lcall
fs
add
mov
repnz
add
les
sub
pop
cmpl
je
push
push
dec
xor
push
xor
add
xor
sub
sub
lea
pop
add
pop
push
add
not
pop
push
call
push
add
shl
pop
cmpl
je
push
push
ror
shl
push
sub
add
rol
sub
sub
sub
sub
inc
sub
pop
add
pop
push
push
push
push
push
push
push
call
xor
add
fnsave
add
shlb
add
pop
cld
pop
cltd
add
jle
fildl
pop
lcall
stc
popl
in
lcall
push
lea
sub
pop
call
cmpl
jne
push
not
rol
ror
pop
mov
push
lea
push
push
push
push
push
call
pop
outsl
outsl
pop
mov
stos
cli
jle
add
stc
pop
insb
mov
add
pop
out
in
push
hlt
les
add
push
add
add
jle
xchg
shlb
mov
lcall
add
add
add
cltd
cmp
je
push
lea
push
lea
push
push
push
call
add
add
add
add
add
mov
add
loopne
lahf
mov
lret
add
std
sti
mov
add
fsts
mov
lcall
mov
lea
push
push
lea
push
push
call
add
out
fiadds
add
mov
add
add
lcall
add
mov
fldl
jns
push
in
mov
jne
lahf
sti
add
add
pop
add
movsb
push
mov
stos
mov
mov
sub
pop
xor
push
push
lea
push
push
push
push
push
push
call
push
fldl
popa
int
pop
lods
call
filds
add
add
mov
test
aam
lahf
in
ret
add
fwait
xchg
add
add
add
loopne
lcall
pop
push
xor
rol
xor
pop
pop
push
lea
push
push
push
lea
push
lea
push
push
push
lea
push
push
call
xchg
jl
outsl
mov
mov
add
into
lahf
mov
xlat
pusha
add
movsb
add
sahf
add
enter
mov
jmp
pop
mov
fadds
add
mov
jle
add
xlat
add
in
orb
in
fdivr
lcall
leave
push
pop
ret
push
xor
dec
pop
push
push
dec
pop
mov
add
push
rol
add
add
pop
cmpl
jne
push
push
inc
sub
rol
dec
push
sub
add
ror
sub
sub
sub
pop
shr
pop
push
push
push
push
push
push
push
lea
push
push
call
add
add
push
iret
add
pop
mov
call
add
aad
add
mov
add
add
outsl
add
add
jle
add
add
add
mov
pop
add
add
jne
add
repnz
ficompl
pop
in
add
rolb
push
sub
pop
pushl
push
add
pop
call
push
push
add
rol
lea
pop
call
push
push
push
push
lea
push
push
call
cwtl
mov
add
nop
add
add
cmc
jge
pop
add
add
pop
lods
stos
add
nop
in
data16
add
ja
xchg
push
fadds
add
lea
sub
pop
jmp
push
rol
inc
pop
cmpl
je
cmpl
jne
push
push
push
call
cmpsl
add
fstp
mov
add
mov
outsl
roll
leave
jl
jmp
add
mov
cmpb
rcl
push
xchg
add
add
in
movb
add
imul
add
mov
in
hlt
lcall
inc
or
call
sub
pop
ret
push
shr
pop
jmp
push
shl
lea
pop
cmpl
jne
push
push
shl
dec
sub
push
or
inc
add
inc
dec
add
sub
not
rol
shl
ror
pop
lea
pop
push
pop
pushl
call
push
add
pop
push
push
lea
push
push
lea
push
lea
push
push
call
add
divb
std
jmp
xchg
mov
add
add
jle
lahf
xchg
mov
imul
js
add
nop
xchg
pop
mov
add
add
jle
sub
pop
call
push
sub
dec
ror
pop
jmp
push
inc
lea
xor
pop
cmpl
jne
push
add
sub
sub
pop
mov
mov
push
push
lea
push
call
add
add
sarb
add
add
shrb
incb
add
add
outsl
lret
push
out
add
add
push
test
mov
add
add
shrl
add
add
mov
lock
mov
add
lcall
push
push
push
sub
add
not
sub
add
rol
rol
pop
lea
inc
pop
push
lea
push
lea
push
push
push
lea
push
push
call
rorl
mov
addr16
out
add
add
out
bnd
add
call
mov
add
jmp
lret
add
addl
pushf
mull
add
add
add
mov
add
mov
popa
lahf
cmpl
in
lcall
jne
push
push
push
push
push
push
push
call
pop
aad
add
mov
mov
ja
icebp
rcrl
mov
add
add
mov
addl
jbe
jbe
add
mov
add
add
cltd
add
leave
add
sub
pop
call
push
lea
push
push
push
push
lea
push
push
push
push
push
call
test
add
mov
pop
add
add
add
add
add
mov
lcall
fdivrl
mov
jmp
mov
add
arpl
add
add
add
in
add
add
jne
jb
roll
add
lcall
shrb
inc
into
cmp
shrb
testb
xor
sub
sub
rol
shr
pop
lea
pop
push
inc
shr
sub
pop
pushl
push
push
push
lea
push
push
push
push
lea
push
call
std
xchg
add
in
add
cwtl
add
mov
add
div
add
fmulp
add
add
add
pusha
add
add
add
push
add
add
lcall
out
add
add
pop
rcrb
add
loopne
call
push
push
push
push
push
push
call
lods
add
lods
mov
add
cmpsl
add
add
add
add
subl
jbe
fwait
mov
jge
add
fwait
add
data16
add
lods
into
into
mov
push
fcomps
add
mov
aad
cli
sub
pop
call
push
push
rol
lea
push
and
add
add
sub
lea
sub
ror
pop
shl
add
not
pop
push
inc
sub
xor
add
pop
pushl
push
not
pop
call
call
push
push
sub
push
and
add
dec
ror
dec
sub
rol
add
pop
add
rol
sub
pop
push
lea
push
push
lea
push
lea
push
lea
push
push
push
push
call
flds
movsb
add
jno
lret
add
add
test
xchg
cmc
mov
fwait
lret
gs
in
add
xlat
arpl
loop
js
pop
add
add
jne
movsl
add
add
add
add
add
mov
add
add
pop
lods
add
add
jne
push
push
push
lea
push
push
push
push
push
lea
push
call
push
jns
push
add
jne
add
jmp
icebp
add
andb
filds
add
add
testl
jle
push
add
sahf
add
mov
jo
add
add
mov
nop
add
mov
mov
loope
mov
lahf
loope
add
add
jecxz
sub
pop
call
push
lea
push
push
push
push
call
movsl
push
xchg
mov
add
add
add
add
nop
add
cli
sahf
add
add
mov
add
movsl
add
shrb
mov
sub
push
and
add
inc
sub
ror
inc
add
pop
shr
shl
pop
push
dec
not
pop
pushl
push
push
push
push
lea
push
lea
push
push
call
test
push
popf
fmull
mov
add
fildl
add
in
add
shl
add
add
in
pop
add
add
add
jecxz
add
stos
stc
gs
shlb
imul
in
call
call
push
push
ror
add
ror
push
push
pop
add
sub
sub
ror
ror
pop
xor
pop
push
lea
push
push
push
call
add
rolb
add
lret
ljmp
testl
addr16
jno
pop
add
add
add
add
xchg
rolb
scas
add
add
add
mov
lds
mov
jne
push
push
push
push
push
call
test
jl
rolb
add
add
add
cld
rolb
add
aam
add
out
neg
mov
fldl
loopne
add
hlt
xchg
add
jmp
sub
pop
call
push
push
push
call
add
nop
pop
add
add
stos
subl
sahf
mov
add
mov
xchg
js
test
add
fs
jle
add
add
add
scas
fldl
lcall
shrb
fnsave
push
sub
push
sub
add
ror
dec
sub
lea
xor
pop
sub
rol
pop
push
push
push
call
mov
add
add
add
jnp
sbbl
add
movsb
in
js
mov
int3
mov
imul
test
jns
xchg
scas
add
jae
add
add
in
add
add
jl
mov
add
jne
push
sub
pop
call
call
push
push
add
push
or
inc
add
dec
sub
inc
xor
dec
pop
xor
pop
push
shl
sub
pop
pushl
push
push
push
push
push
push
push
call
push
ret
add
leave
add
push
shll
add
clc
fadds
mov
ljmp
rolb
add
add
add
add
aam
jb
add
add
add
lahf
add
xchg
notl
add
outsl
ja
sub
pop
call
push
add
pop
call
push
push
inc
sub
ror
push
sub
add
shl
inc
xor
sub
lea
pop
pop
push
sub
shl
add
shl
pop
pushl
push
shl
add
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
push
push
call
out
push
add
mov
add
divb
add
add
scas
cmc
push
push
jb
int
add
sbbl
pop
mov
add
fwait
jbe
add
lret
fdivr
lcall
shrb
hlt
es
dec
sub
push
or
inc
add
add
xor
ror
sub
not
not
sub
shr
pop
ror
pop
push
sub
xor
shr
xor
pop
pushl
push
push
push
push
call
push
pop
add
add
xchg
add
add
add
je
loopne
xchg
js
shr
fidivs
rcl
scas
push
aam
push
mov
jno
leave
iret
add
ret
sub
pop
call
push
push
lea
push
push
push
push
push
lea
push
call
addl
mov
mov
leave
mov
add
mov
movsl
arpl
add
jns
gs
lahf
add
popf
mov
popa
add
add
mov
cltd
pop
add
xor
pop
roll
lcall
pushf
and
call
xor
cmp
push
call
and
lods
add
add
ja
cmpsl
lahf
mov
add
mov
add
mov
mov
add
sub
pop
push
push
rol
shl
shl
sub
pop
call
push
push
sub
xor
lea
push
push
pop
add
ror
sub
add
inc
pop
pop
push
xor
sub
inc
pop
pushl
push
push
lea
push
push
push
push
lea
push
push
lea
push
call
in
pop
mov
cld
js
shll
add
ljmp
add
nop
lcall
adcl
loop
in
fisubs
add
cli
imul
in
fdivr
lcall
add
add
push
dec
sub
sub
pop
call
push
push
shl
push
push
pop
add
ror
sub
dec
rol
lea
not
pop
ror
xor
shl
pop
push
push
lea
push
lea
push
push
push
push
push
call
repnz
add
fiadds
insb
mov
add
add
data16
pushf
adcl
push
loopne
jae
add
add
jp
pop
jmp
imul
add
js
add
add
je
push
jbe
jp
fldl
xchg
add
stc
add
pop
jl
sub
pop
pushl
call
push
pop
call
push
push
xor
inc
dec
push
or
not
add
xor
sub
lea
pop
not
pop
push
push
call
lcall
lods
loopne
add
mov
lock
jbe
mov
cli
test
test
lret
pop
mov
fiadds
pop
push
push
add
pop
add
lcall
jne
push
push
push
lea
push
push
lea
push
push
push
push
push
call
add
out
push
add
cmpsl
aad
add
push
add
mov
xchg
add
pop
add
pop
add
mov
lcall
jns
add
push
push
push
call
jbe
movb
mov
sar
add
add
int
lea
jae
adcb
testl
add
mov
jmp
add
add
test
add
lcall
shrb
jnp
pop
push
sub
push
sub
add
shr
not
sub
add
add
xor
pop
shl
pop
push
rol
ror
pop
pushl
push
xor
inc
add
pop
call
push
push
lea
rol
push
or
not
add
inc
sub
lea
shr
not
pop
shl
pop
push
push
add
add
push
and
add
sub
shl
xor
dec
pop
dec
not
pop
push
sub
dec
dec
pop
call
push
push
push
push
push
push
push
lea
push
lea
push
call
bound
xchg
add
fildl
cmpsb
add
add
push
jge
add
jle
jbe
add
cmpsb
add
add
sarb
pushf
pop
add
ja
push
addl
data16
sub
pop
pop
dec
jne
push
rol
pop
call
push
push
push
push
call
push
add
xchg
insb
add
outsl
mov
jmp
mov
jp
xor
mov
mov
mov
out
jmp
add
pop
fidivs
push
iret
mov
div
pop
test
xchg
in
ficoml
imul
pop
mov
int
push
xor
sub
pop
lea
push
push
inc
rol
dec
add
push
or
not
add
lea
add
sub
sub
lea
pop
xor
ror
pop
push
xor
pop
pushl
call
push
dec
sub
sub
not
pop
push
push
push
call
shr
xchg
cli
mov
add
popf
iret
add
xchg
add
movsl
mov
jne
clc
addr16
add
test
add
add
cmp
add
add
add
clc
pop
call
push
push
shr
push
or
inc
add
sub
sub
shl
shl
inc
pop
xor
inc
pop
push
dec
dec
not
rol
pop
pushl
push
lea
push
call
scas
sarb
add
lret
add
jns
cwtl
gs
rolb
imul
xlat
add
ret
ja
pop
add
add
xchg
mov
shlb
pop
jmp
sub
pop
call
push
push
lea
push
lea
push
push
push
lea
push
call
mov
mov
add
mov
lods
push
orb
mov
xchg
repnz
rolb
jl
add
sti
add
push
sahf
push
add
nop
pusha
add
lds
add
sti
lods
add
repnz
test
rclb
iret
popa
dec
inc
pop
mov
push
xor
add
rol
not
pop
lea
push
push
ror
push
or
inc
add
sub
sub
lea
add
pop
sub
shr
sub
pop
push
shl
not
sub
dec
pop
pushl
call
push
add
add
pop
lea
push
push
push
push
lea
push
call
cmpsl
push
add
add
push
cmp
add
add
jmp
popf
push
add
aam
int
xchg
add
in
loop
jmp
add
pop
out
fwait
scas
add
add
push
add
shlb
add
add
lret
in
in
lcall
push
push
push
lea
push
lea
push
push
push
lea
push
lea
push
call
fiadds
mov
pop
pop
shl
add
add
cmc
add
rcll
add
orl
add
add
loope
add
add
insb
lds
add
push
pushl
push
push
not
push
or
not
add
ror
sub
pop
lea
rol
pop
push
sub
xor
pop
push
push
push
push
push
push
push
lea
push
lea
push
push
call
loope
add
movb
bound
add
filds
out
in
xchg
xchg
xchg
popf
add
add
xchg
stos
sub
pop
call
push
push
lea
inc
shr
sub
push
or
not
add
shl
sub
lea
sub
shr
pop
shl
xor
pop
push
push
push
push
push
call
out
add
add
add
add
add
add
je
add
add
add
stc
jb
xchg
std
arpl
add
arpl
add
add
add
add
add
mov
jno
mov
sub
fmulp
add
sub
pop
pushl
push
push
push
push
call
imul
ljmp
mov
add
movsl
add
jnp
addl
push
xchg
add
add
fiadds
mov
jne
lock
gs
std
sub
pop
call
push
push
lea
push
call
fstpt
mov
lcall
mov
mov
mov
imul
mov
add
mov
ja
add
add
jl
call
loope
mov
add
scas
cltd
iret
popa
add
add
jae
push
sub
pop
push
push
xor
pop
call
push
push
rol
inc
sub
push
sub
add
xor
sub
ror
pop
shl
add
xor
pop
push
dec
not
sub
rol
pop
pushl
push
push
lea
push
push
push
push
push
push
call
add
add
add
addl
add
add
jb
fsubr
lods
imul
cli
add
push
add
add
out
add
add
add
add
add
faddl
imul
in
loopne
lcall
jo
add
call
push
push
push
lea
push
lea
push
push
push
lea
push
call
xchg
jbe
imul
roll
add
jge
clc
add
add
add
cwtl
add
add
add
add
add
add
add
test
jmp
add
add
add
sarb
xlat
flds
add
add
add
lcall
pushl
push
not
lea
pop
mov
push
push
lea
push
push
push
push
call
hlt
fadds
add
jne
add
fs
add
add
push
add
fiadds
mov
add
jecxz
repnz
fdivl
mov
add
mov
cwtl
add
movsl
add
add
clc
jb
push
mov
sub
pop
jmp
push
push
lea
push
sub
add
lea
rol
ror
sub
lea
pop
add
inc
add
pop
push
lea
push
push
push
lea
push
push
call
jns
add
testl
les
stos
hlt
xchg
test
mov
add
add
imul
lcall
rolb
jne
pusha
loope
mov
mov
pop
jge
lahf
add
test
je
mov
add
jne
push
not
rol
lea
sub
pop
call
push
sub
dec
pop
push
call
push
push
sub
dec
push
or
inc
add
sub
dec
shl
pop
sub
pop
push
push
push
push
lea
push
push
push
call
ffreep
in
add
jno
mov
rolb
cmpsl
add
add
jp
add
orb
cmc
rcrl
add
mov
mov
lahf
cltd
mov
in
in
lcall
jne
push
inc
pop
call
push
inc
add
shl
pop
push
call
push
push
call
lret
into
pop
test
add
add
add
cwtl
pop
movsl
test
add
add
movsl
add
pusha
pop
fwait
shl
fldl
popa
jle
sahf
add
bound
add
popa
push
movsb
add
mov
add
add
add
insb
add
add
jp
jle
arpl
in
in
clc
pop
leave
add
push
push
push
push
push
push
push
lea
push
push
call
add
add
jecxz
mov
push
add
aam
fwait
add
add
add
pusha
add
lods
add
add
push
add
add
in
pusha
notl
jnp
add
lcall
push
lea
pop
pop
pop
push
push
lea
push
push
push
push
call
mov
add
add
in
lods
add
scas
lods
pop
add
add
push
add
cld
pop
add
mov
lock
cltd
popa
add
pop
fcompp
mov
add
add
add
add
xchg
rclb
pop
inc
push
dec
pop
ret
leave
push
lea
push
call
xchg
rolb
mov
add
pop
add
jmp
add
rolb
add
cmpl
lcall
fsubr
add
sub
pop
ret
push
push
lea
push
push
push
lea
push
push
lea
push
push
lea
push
lea
push
call
push
test
add
bound
out
add
add
jns
scas
add
mov
add
in
mov
out
pop
add
fs
add
push
add
xlat
add
add
add
mov
jmp
add
add
jnp
add
add
movsb
lea
add
add
rolb
pusha
jo
add
in
cmpl
jne
push
rol
shl
pop
mov
push
push
push
call
mov
roll
nop
add
stos
add
data16
add
add
popl
imul
jmp
add
movsb
lods
mov
add
mov
mov
movsl
jnp
faddl
scas
sub
pop
jmp
push
inc
ror
pop
mov
push
shr
not
xor
pop
and
push
lea
push
lea
push
push
call
fisttpl
fldl
add
loop
jbe
jae
jns
xor
pop
sbbb
add
popf
add
in
fprem1
jmp
lods
add
add
clc
loope
push
lods
mov
mov
test
cwtl
mov
mov
in
lock
lcall
leave
xor
push
shl
shl
pop
add
push
not
lea
add
pop
xor
push
add
not
sub
xor
pop
dec
sub
push
xor
pop
jmp
push
push
push
push
call
rorl
lds
add
jbe
fs
add
aad
add
mov
sti
jno
add
add
popf
scas
sub
pop
sub
push
not
shr
pop
pushl
pop
push
push
push
push
call
add
jo
add
mov
addb
mov
mov
jbe
cmpsl
add
xchg
fldl
aam
push
mov
shl
add
xchg
add
lock
lcall
jmp
push
push
call
mov
add
mov
xchg
in
je
imul
push
add
xchg
ljmp
mov
mov
add
mov
push
add
add
addl
fstpt
mov
push
mov
add
add
nop
shl
add
aam
sub
pop
cmp
jne
push
not
pop
mov
lea
push
lea
push
push
push
push
push
lea
push
push
lea
push
call
aam
add
add
add
pop
mov
mov
add
add
int
add
add
ja
add
push
add
stos
add
fldl
xchg
movsb
jle
add
std
test
pop
pop
xorl
fdivr
lcall
jmp
not
pop
shr
push
lea
push
lea
push
push
push
lea
push
call
add
js
mov
push
data16
add
push
stos
add
aad
fildl
add
fmull
add
add
add
scas
bound
cmc
scas
sub
pop
add
push
push
push
push
lea
push
push
call
add
mov
xchg
sti
jmp
out
jecxz
mov
leave
in
lods
nop
add
add
loopne
add
fiadds
push
loop
add
mov
jle
xchg
neg
aam
stos
mov
int
imul
addb
loopw
stos
xchg
add
lret
add
add
add
xchg
popf
sub
pop
sub
pushl
push
sub
pop
pop
shr
push
sub
pop
and
sub
push
lea
push
push
lea
push
lea
push
push
push
call
gs
rorb
add
out
loop
cld
lret
add
add
add
mov
add
mov
pop
xchg
loope
xchg
add
gs
add
add
add
push
data16
mov
movsl
xchg
jae
in
sub
pop
cmp
jne
push
ror
shl
pop
leave
push
push
push
push
lea
push
call
add
icebp
add
insb
testl
addb
jecxz
out
push
add
add
xchg
mov
scas
mov
pop
mov
push
jmp
lcall
sahf
add
mov
pop
fnclex
in
push
jmp
add
push
scas
mov
repnz
add
clc
add
out
sub
pop
ret
push
push
push
push
push
push
push
push
push
push
call
lds
xchg
add
mov
test
add
add
pushf
filds
aam
ja
push
pop
aam
pop
call
add
in
xchg
add
add
add
add
add
addr16
push
mov
in
call
add
ja
add
roll
add
mov
aad
add
sti
mov
lcall
push
push
push
call
stc
enter
fdivrl
add
bound
add
add
add
mov
add
ja
add
add
cmpsb
xchg
add
data16
add
out
add
fiadds
mov
add
hlt
popa
xchg
add
addl
add
hlt
pop
mov
push
push
push
lea
push
push
push
call
add
add
add
add
rolb
mov
add
add
aad
push
mov
clc
jmp
out
add
mov
add
lcall
cld
push
push
call
pop
mov
add
mov
lods
mov
in
mov
je
jge
jne
jp
push
ret
add
add
lock
add
push
add
pusha
add
cld
in
fwait
imul
mov
clc
pop
push
push
push
push
push
push
push
push
push
push
call
rolb
add
fwait
cld
add
loop
pop
add
mov
icebp
add
stc
add
popa
pop
push
add
add
leave
pop
add
add
fcompl
push
push
xor
dec
shr
pop
push
push
push
lea
push
push
push
push
lea
push
lea
push
call
add
xchg
outsl
hlt
add
add
add
add
roll
add
jno
add
add
mov
push
mov
sahf
mov
addl
cld
cmpl
push
add
cld
add
xchg
lcall
pop
or
dec
xchg
mov
push
call
fdivl
cmpsb
bound
subl
in
fwait
mov
arpl
mov
mov
data16
jne
mov
jns
sub
pop
sub
mov
push
lea
pop
shr
add
push
rol
pop
mov
push
push
push
call
insb
add
push
stc
xchg
movb
outsl
addl
shll
jo
ja
add
out
add
jne
shll
aam
fiadds
add
loopne
repnz
add
add
pop
or
lret
rcrb
jnp
add
push
lea
push
push
push
push
call
lea
mov
test
add
enter
jge
add
xchg
add
add
mov
test
pop
add
insb
mov
fwait
mov
add
add
sti
testl
rorb
add
sub
pop
xor
push
lea
xor
not
shr
pop
mov
push
xor
pop
and
push
rol
pop
rol
push
push
push
push
push
lea
push
push
push
push
push
call
jae
sti
fadds
lret
arpl
aad
add
pop
pop
flds
jnp
add
fadds
add
add
add
sub
pop
rol
push
push
call
mov
add
jl
add
jnp
call
xlat
xchg
lods
jmp
add
add
mov
imul
addr16
repnz
add
add
sub
pop
xor
push
add
shl
pop
inc
push
add
rol
pop
cmpb
jne
add
push
inc
add
pop
cmp
je
push
add
shr
pop
add
cmpl
jne
push
push
lea
push
push
push
call
ret
add
add
mov
add
leave
std
add
add
xchg
add
jb
add
fucomi
add
add
mov
fcmovne
add
fwait
in
rclb
add
add
add
mov
sub
pop
xor
push
add
not
inc
dec
pop
pop
pop
push
push
lea
push
push
push
push
push
call
add
jecxz
loop
add
movsl
add
sahf
out
jns
lods
jb
mov
je
mov
add
add
add
jno
lock
test
cmpsb
in
jmp
add
add
shlb
scas
popf
xchg
add
pusha
fwait
in
call
lea
in
lcall
pop
push
push
push
lea
push
push
lea
push
lea
push
lea
push
push
call
in
add
cwtl
imul
jb
add
shll
pop
ja
pop
jp
push
add
pop
sub
pop
pop
push
add
shr
shl
pop
leave
ret
push
shr
pop
mov
add
push
sub
sub
pop
mov
push
push
add
ror
pop
mulb
push
rol
rol
pop
pop
call
push
push
push
push
lea
push
push
push
push
call
in
in
hlt
add
push
xchg
in
js
roll
xchg
mov
mov
add
push
mov
add
add
cmp
add
mov
add
add
add
push
push
lea
push
push
push
push
push
push
lea
push
push
call
cmpsl
add
lret
add
mov
add
xchg
arpl
add
add
add
cmc
pusha
add
xchg
bound
rclb
add
mov
add
pop
add
add
mov
dec
hlt
jmp
rclb
pop
push
dec
add
pop
pop
pop
push
pop
pop
pop
push
push
push
push
push
push
push
call
scas
add
xchg
ficompl
mov
loopne
pop
add
mov
add
popa
popa
mov
stos
movb
into
mov
add
jne
add
push
add
pop
add
xchg
xlat
iret
add
add
add
test
add
lret
sub
pop
leave
push
push
push
lea
push
push
push
lea
push
push
call
add
add
jns
add
lea
add
add
add
xchg
lret
lock
mov
pop
add
pushf
jb
lahf
jmp
add
insb
ljmp
addl
add
shl
rol
lret
pop
push
mov
push
inc
shl
ror
pop
add
push
rol
pop
push
push
push
push
push
push
push
push
push
push
push
push
call
scas
add
push
jo
push
jb
test
add
add
mov
mov
mov
nop
add
stos
add
out
data16
jne
jb
mov
add
mov
in
fdivr
lcall
push
push
lea
pop
mov
push
shr
shl
pop
push
push
pop
pop
push
push
push
push
push
push
lea
push
lea
push
call
fucom
jb
add
ljmp
add
add
cmc
xchg
aad
fcompl
xchg
add
add
cld
shl
mov
add
lock
lock
add
add
sahf
push
int
add
add
mov
add
xchg
into
add
add
ficomps
lea
sub
push
not
pop
mov
push
push
lea
push
lea
push
call
cltd
out
add
add
in
add
mov
out
add
mov
lahf
stos
jns
stos
subb
xchg
add
test
mov
mov
add
leave
into
roll
add
sub
pop
shr
add
push
ror
pop
mov
push
push
call
mov
add
shr
add
faddl
mov
out
add
rclb
add
ja
std
shlb
add
fadd
in
push
movsb
add
add
jb
jp
add
pop
xchg
in
rcrl
out
mov
fmulp
movb
pop
add
pushl
push
push
lea
push
push
push
push
call
in
les
add
add
pusha
xchg
ljmp
mov
mov
add
iret
sbbb
add
test
add
add
data16
add
rcll
add
lcall
inc
clc
mov
push
push
call
add
add
cli
cmpsb
int
push
arpl
add
fadds
add
call
add
mov
mov
cmpsb
pop
add
lea
add
add
mov
add
xchg
out
add
int3
loopne
bound
lcall
stc
push
push
call
add
mov
test
out
mov
cld
add
add
movsl
scas
fsubrs
repnz
add
push
add
jbe
pusha
jnp
add
lcall
testb
mov
out
hlt
ficomps
call
jmp
mov
data16
cli
add
add
add
stos
xchg
pop
orb
cmpsl
jbe
sti
mov
xchg
add
add
rolb
add
popf
mov
add
add
add
add
add
push
pushf
stc
push
jmp
add
add
ret
hlt
pop
mov
push
push
lea
push
call
mov
test
add
jb
jno
in
mov
movsl
out
add
lods
lea
std
stos
add
testb
pusha
add
data16
push
sar
add
push
add
add
add
mov
jge
iret
add
popa
stos
sub
pop
add
push
shr
shr
pop
xor
push
add
lea
pop
rol
push
push
push
push
call
add
add
rcl
out
add
lock
mov
fs
jae
add
mov
mov
add
mov
pop
add
add
add
lcall
push
lea
push
push
push
push
push
push
push
call
jle
pop
out
jae
aad
add
clc
mov
rcl
add
testl
add
xchg
in
add
mov
add
add
sub
pop
nop
push
dec
pop
xor
push
push
push
push
call
test
ja
adcb
pop
xchg
mov
test
add
mov
loop
add
je
add
add
jge
in
jge
int
pop
xchg
xchg
add
mov
add
lock
lods
add
rcl
add
jecxz
push
in
in
lock
lcall
push
rol
pop
nop
push
rol
not
xor
pop
inc
push
push
push
push
push
push
call
je
jle
add
add
stos
add
mov
add
push
int
add
movl
add
add
add
add
mov
add
aam
jle
test
out
add
mov
in
call
nop
push
push
push
call
add
lret
mov
add
jnp
add
fstpt
push
popf
add
add
push
mov
add
pop
add
js
add
add
outsl
arpl
add
add
add
in
mov
add
add
add
add
pop
nop
cmpb
jne
push
add
sub
rol
pop
add
push
inc
shl
pop
nop
nop
push
shl
sub
add
pop
cmp
je
nop
push
lea
push
push
push
push
push
push
lea
push
lea
push
push
call
fs
add
add
imul
mov
add
addb
add
add
add
add
cwtl
add
aam
push
add
jmp
pushf
test
add
xchg
cld
leave
int
add
test
add
add
pop
jns
add
add
add
add
fdivr
lcall
push
push
push
lea
push
push
push
push
push
call
add
add
add
aam
enter
imul
add
xchg
loope
add
add
bound
loope
add
test
shrb
mov
add
mov
add
push
xchg
outsl
add
add
sub
pop
inc
push
push
lea
push
push
push
push
push
lea
push
push
push
call
cmpl
add
data16
add
ja
push
jns
out
pop
fnstsw
add
fiadds
add
add
add
add
add
add
lahf
add
sub
pop
nop
push
push
push
lea
push
push
lea
push
push
push
push
call
add
mov
add
add
mov
jmp
add
add
add
jno
cli
add
out
pop
add
add
mov
ret
flds
pop
arpl
add
test
loope
add
lods
add
mov
add
lret
std
push
sub
pop
nop
push
push
push
push
push
push
call
add
into
pop
mov
aad
test
add
test
add
xchg
jle
roll
lock
xchg
mov
sahf
add
jne
jb
xor
push
push
call
ret
roll
add
add
add
cltd
jb
mov
in
mov
add
jbe
mov
out
test
add
add
movsl
jne
ret
int3
cld
sahf
add
add
sub
pop
jmp
mov
push
sub
not
pop
add
push
dec
pop
movzwl
push
lea
add
pop
mov
push
push
push
lea
push
push
push
lea
push
lea
push
push
push
call
pop
jnp
addl
fwait
add
add
add
mov
xchg
add
cmpsl
add
popf
outsl
mov
jo
aam
add
add
fcmovbe
les
gs
lcall
add
jo
enter
add
add
add
rcll
push
push
push
push
push
lea
push
push
call
add
pop
add
movsb
in
enter
add
rolb
sahf
data16
jnp
pop
add
add
mov
push
add
push
ret
add
jns
in
add
fxtract
out
sub
pop
mov
push
push
push
push
push
lea
push
push
call
push
add
mov
xchg
aam
add
add
mov
faddl
add
arpl
in
mov
in
mov
std
rorl
cli
icebp
in
hlt
mov
lret
ja
in
in
xor
push
rol
pop
xor
push
lea
push
lea
push
push
push
push
push
push
push
call
xchg
add
pop
add
movsl
pop
out
add
call
add
push
add
add
stos
fadds
hlt
add
xchg
mov
mov
add
add
push
add
mov
add
stos
jp
sti
pusha
add
mov
add
sub
pop
shl
push
pop
xor
push
rol
shr
shl
pop
shl
xor
push
add
sub
pop
shl
xor
push
push
lea
push
push
push
push
push
push
push
lea
push
call
add
pop
aad
xor
add
mov
push
add
pop
sti
add
mov
mov
sti
add
imul
push
lea
xor
sub
pop
add
push
push
lea
push
push
push
call
or
popa
jns
into
add
add
lea
xchg
rcl
pop
add
not
add
add
add
mov
pop
ljmp
lcall
push
push
call
add
test
add
push
add
mov
add
cltd
cmpsl
fiaddl
add
add
mov
add
hlt
call
add
add
mov
mov
add
call
mov
fs
fiadds
mov
add
lcall
pop
push
dec
add
pop
pop
leave
push
xor
pop
ret
push
push
lea
push
lea
push
call
add
add
cltd
call
add
mov
mov
shll
data16
add
add
in
hlt
lcall
in
push
push
lea
push
lea
push
lea
push
push
push
push
lea
push
call
add
lock
add
leave
add
orl
imul
add
xchg
push
in
add
jecxz
roll
sti
roll
pop
push
push
push
push
lea
push
lea
push
lea
push
push
push
push
call
add
out
imul
add
roll
mov
add
scas
fisubl
add
add
add
out
add
mov
jae
add
pop
in
add
cli
stc
imul
add
add
std
add
add
add
scas
add
fiadds
popf
add
fcompl
push
push
lea
push
push
push
push
push
push
push
call
add
push
push
lods
add
add
cltd
add
pop
in
insb
jl
add
mov
repnz
pop
flds
push
shlb
arpl
jae
in
fcompl
push
sub
shr
shl
pop
push
push
push
push
push
push
push
push
lea
push
lea
push
lea
push
call
xchg
mov
jecxz
add
add
add
loopne
repnz
add
cwtl
push
popa
pop
add
icebp
pop
pop
rclb
add
je
fstpt
mov
js
in
fcomps
dec
or
add
sub
pop
mov
push
shl
rol
rol
pop
mov
push
xor
sub
pop
test
je
push
lea
push
push
lea
push
push
push
push
lea
push
push
push
call
jp
add
add
add
in
add
into
add
call
xchg
jbe
add
fildl
int
pop
std
push
xchg
xchg
mov
pop
add
add
filds
add
rolb
test
loope
add
in
fcomps
jno
push
lea
push
push
lea
push
lea
push
call
add
leave
add
add
add
jne
add
addr16
push
add
jne
add
xchg
sahf
loopne
add
pop
add
clc
push
aam
into
sbbl
add
mov
into
pop
leave
add
mov
xchg
add
stos
mov
add
add
roll
push
loope
xlat
popa
ficomps
in
lcall
testb
push
push
add
push
push
lea
push
push
push
lea
push
push
lea
push
lea
push
call
add
add
cli
add
fldl
mov
add
popa
add
movsb
in
add
xlat
into
faddl
enter
cmc
add
mov
add
add
pop
jno
add
in
leave
loopne
jbe
add
add
sub
pop
mov
push
sub
xor
pop
mov
mov
push
push
push
lea
push
push
push
lea
push
push
call
push
push
add
add
scas
add
jns
testb
mov
gs
push
add
out
imul
enter
test
mov
sub
pop
inc
push
push
push
lea
push
lea
push
push
push
call
add
add
push
add
push
xchg
rolb
push
scas
pop
pop
add
cmpsb
les
insb
add
add
add
add
xchg
add
scas
xlat
imulb
pop
add
add
aad
add
add
rorb
test
add
push
lea
push
push
push
push
push
lea
push
call
popa
push
add
loope
jecxz
lret
add
xchg
je
icebp
jmp
add
add
push
mov
fs
mov
aam
jns
xchg
push
jo
add
jae
cmc
je
add
add
sub
pop
test
je
push
push
push
push
lea
push
call
add
call
nop
mov
xchg
scas
gs
mov
push
push
clc
ljmp
int
cltd
loope
mov
pop
jmp
add
add
outsl
add
lcall
push
push
lea
not
pop
inc
cmp
je
push
lea
push
push
push
call
add
test
add
add
in
fstpl
cwtl
add
cltd
leave
add
rcrb
faddl
movsl
mov
mov
scas
add
sub
pop
test
jne
push
push
call
mov
push
jb
out
add
add
add
add
ljmp
jle
iret
push
add
sbb
add
jbe
testl
push
cli
mov
add
addb
add
sub
pop
xor
push
push
lea
push
push
push
lea
push
push
call
add
add
add
add
mov
in
add
cmpsl
add
in
lea
jp
insb
push
add
add
add
add
into
add
add
lcall
push
rol
lea
lea
pop
pop
pop
push
inc
not
pop
pop
push
dec
pop
leave
push
push
push
lea
push
push
lea
push
call
ficompl
add
mov
incb
ret
xchg
mov
push
add
leave
mov
stos
add
mov
add
add
mov
add
std
add
add
mov
repnz
sub
pop
ret
push
inc
pop
mov
inc
push
push
push
push
lea
push
call
or
mov
add
add
xchg
lret
add
out
add
add
add
aam
fistpll
push
faddl
cld
outsl
jns
icebp
sub
pop
cmp
jne
push
push
push
lea
push
push
push
push
call
add
add
add
add
add
add
ror
fistpll
add
add
add
add
add
add
mov
bound
fmul
call
add
mov
mov
push
add
stc
mov
add
roll
pop
lea
mov
push
shr
inc
shr
shr
pop
test
je
mov
push
inc
not
pop
add
cmp
jne
push
push
push
push
lea
push
lea
push
lea
push
lea
push
push
call
add
je
jge
ljmp
jecxz
fwait
add
aam
add
add
rclb
rorb
imul
jb
rol
repnz
mov
add
add
test
mov
add
int
in
fcompl
inc
add
rorl
pop
test
je
push
push
lea
push
lea
push
lea
push
lea
push
call
stos
add
iret
fldt
loopne
scas
mov
mov
addb
add
add
add
mov
add
popf
jp
pop
add
push
add
repnz
jle
add
hlt
cwtl
add
cltd
add
add
mov
lcall
callw
xchg
ror
std
push
dec
sub
lea
pop
add
push
push
lea
push
call
add
add
mov
fists
lods
pop
jmp
hlt
jno
mov
mov
mov
pop
rorb
jp
add
add
lcall
loopne
test
call
mov
xor
push
push
push
push
push
push
call
cmpsl
popa
add
sti
add
rcr
add
mov
cmc
xchg
add
in
add
ja
add
jne
add
sub
pop
jmp
xor
push
push
push
push
call
xchg
add
xchg
add
mov
xchg
mov
flds
add
add
mov
cwtl
lahf
rorl
cmc
xchg
ficoms
push
addl
fdivrs
fildl
addb
pop
pop
pop
push
push
push
lea
push
push
push
push
push
push
push
call
faddl
cltd
divb
out
add
add
add
add
pop
add
add
mov
add
shlb
add
add
add
in
fdivr
lcall
push
sub
pop
pop
leave
push
lea
push
call
add
mov
in
mov
and
push
pop
add
jns
aam
push
cmpsb
add
ljmp
jns
cwtl
add
xchg
pop
add
add
pushf
mov
add
jge
add
stos
fcoml
add
add
xchg
add
sub
pop
ret
push
lea
push
push
push
lea
push
push
lea
push
call
lret
add
push
add
stos
add
mov
add
push
movl
add
insb
jbe
add
add
add
mul
add
mov
arpl
pushf
mov
lret
cmc
rclb
add
sub
pop
lea
push
inc
add
ror
pop
pop
pop
push
push
call
imul
add
xchg
add
roll
stos
lcall
add
add
add
popa
push
fiaddl
add
push
add
enter
lcall
push
push
call
add
test
stos
xchg
add
mov
mov
mov
mov
outsl
add
sub
jae
loope
add
std
imulb
cld
int
add
lds
add
add
add
mov
push
clc
lcall
leave
push
lea
add
pop
ret
mov
push
push
lea
push
push
push
push
push
push
lea
push
push
call
test
cli
xchg
mov
xchg
test
int
jns
fcmovb
add
add
imul
js
add
add
xchg
add
jns
jb
fildl
xchg
add
add
cli
add
rclb
fdivr
lcall
pop
push
add
inc
pop
pop
push
rol
inc
sub
pop
pop
push
pop
leave
push
inc
pop
ret
cmp
mov
xor
mov
mov
into
mov
ror
mov
mov
mov
in
lret
std
lret
xchg
lret
or
xchg
dec
enter
add
dec
repz
ss
inc
push
aas
leave
inc
int
xor
sub
lret
xor
or
enter
dec
cmp
fs
scas
repnz
xor
or
aam
leave
dec
es
sti
adc
push
daa
fmul
cld
inc
mov
push
push
mov
into
js
ja
int
js
mov
vfnmsub132ss
imul
pop
dec
pop
adc
mov
bound
cmp
pop
cld
cli
adc
fsubrl
aas
loope
pop
xchg
movsl
xchg
les
jb
and
in
inc
test
mov
adc
jo
mov
test
sub
cmc
dec
lret
insl
sar
rcll
sahf
mov
ret
sbb
call
pop
addr16
xchg
mov
bound
push
mov
adc
fucomip
ss
mov
xchg
out
cmovle
sbb
push
scas
pop
in
std
int3
cmpb
push
or
outsl
cld
repnz
dec
fsubrs
rorl
cmpsl
and
or
inc
pop
insb
insb
lock
or
cmp
mov
push
lahf
cmp
fwait
lret
test
dec
and
nop
or
jns
dec
sub
adc
test
loope
test
hlt
mov
int
or
mov
arpl
xor
add
or
push
xchg
stos
mov
xor
and
xchg
fidivrs
or
es
add
xchg
or
fs
nop
and
mov
das
sbb
pop
push
cmpsb
cmpb
mov
popl
mov
das
pop
std
cmp
dec
divl
inc
aaa
out
cmp
movsl
pop
sar
mov
fstl
sbb
shlb
pop
adc
dec
imul
sbb
and
mov
ret
outsb
popf
std
dec
and
push
jae
sub
push
arpl
mov
movsl
je
sub
in
push
dec
fwait
clc
jp
sahf
jle
shlb
lds
mov
iret
scas
xor
out
or
jecxz
out
mov
out
sar
cmp
call
inc
sti
sbb
in
xlat
pop
rol
aad
add
jge
lea
imul
cltd
in
push
jp
jo
mov
jb
idivl
mov
cmp
push
inc
cmpsb
inc
in
xor
insl
fildl
push
and
outsl
sub
andb
mov
fs
jb
sbb
mov
mov
jo
jp
inc
imul
dec
cmp
push
lcall
fwait
cmp
test
push
enter
shrb
push
fcoml
jl
rep
dec
or
or
or
fistl
mov
lods
dec
or
data16
fcomip
jne
test
push
xchg
cli
xchg
arpl
pop
test
negb
cmpsb
jno
repz
or
jp
mov
and
ljmp
lcall
push
out
push
mov
mov
adc
sbb
sub
mov
rcrb
scas
rcrb
adc
pop
inc
cltd
aas
sbb
push
in
sub
into
push
lea
in
sbb
movswl
ljmp
push
xchg
push
jl
inc
add
std
adc
fldt
in
pop
cmpb
cli
jecxz
test
pop
cmovp
or
loop
xor
or
or
mov
cmp
push
inc
pop
in
jae
and
loopne
adc
rcrb
inc
out
pusha
pop
inc
in
push
sub
mov
inc
sbbl
out
cmpsb
adc
add
dec
jb
sbb
and
cmpsb
or
sar
push
cmp
jp
mov
pop
pop
pop
xchg
mov
cli
add
xchg
repnz
push
mov
mov
adc
jp
es
icebp
pop
aam
rcrb
and
mov
icebp
loop
arpl
in
pop
subl
int3
mov
and
aam
rol
les
imul
or
repnz
stc
push
mov
pusha
icebp
lods
or
dec
aam
and
das
jno
or
push
cmpsl
inc
lret
test
xchg
mov
add
pop
adc
imul
mov
inc
pop
faddl
loopne
mov
xor
aad
insl
or
add
mov
sub
into
dec
aam
mov
sbb
outsl
pop
mov
jno
rorb
and
dec
sbb
cli
mov
sub
pop
popa
jno
sbb
pushf
mov
lret
adc
outsb
insl
xor
iret
je
xor
push
and
icebp
lea
sbb
pusha
jne
dec
idivl
sarl
adc
pop
jp
mov
in
xor
rcrl
je
xchg
aad
inc
mov
mov
addr16
pop
shl
pop
dec
add
insl
jecxz
mov
add
mov
inc
test
cwtl
aad
push
mov
gs
mov
inc
sbb
cmp
xor
or
ljmp
es
pop
ljmp
mov
ljmp
sub
in
lret
push
mov
ret
xorb
cmp
push
nop
nop
sub
push
icebp
pop
cmpsb
xchg
sbb
jbe
lcall
iret
xor
sarb
mov
cmp
outsb
cmpsl
nop
aaa
adc
xchg
pop
mov
ret
popf
sahf
pop
push
mov
sub
mov
mov
out
test
pushf
shl
mov
jb
jb
lock
cld
dec
jecxz
in
xchg
pop
scas
xor
bnd
mov
jno
int3
das
and
scas
cmp
sbbl
sub
dec
scas
icebp
mov
pop
push
stos
fiaddl
xor
clc
jnp
cmp
adc
dec
das
and
and
pushf
js
lods
test
pop
aam
push
or
pop
out
dec
mov
cltd
dec
mov
xchg
mov
outsl
push
nop
sbb
loop
xchg
rcrb
adc
jnp
rcrl
test
adc
xchg
or
mov
push
sahf
imul
xchg
fistl
sub
adc
sub
imulb
add
enter
dec
loopne
adcb
adc
decl
push
xchg
xchg
dec
add
mov
addr16
mov
jbe
inc
dec
mov
cmpsl
outsb
cmp
and
or
ss
cli
jnp
sub
dec
jb
fsubrp
cs
push
test
lods
jnp
call
and
xlat
sbb
out
add
fdivrl
jp
mov
fstl
jno
ja
cltd
fsubrs
js
into
inc
mov
fsubrp
mov
xlat
repz
sbb
sbb
outsb
pushf
shlb
clc
mov
or
fisubrs
popf
pop
cmp
and
dec
xlat
incl
jl
jns
dec
xor
pop
inc
cmp
movlps
movsl
cld
sbb
std
push
push
lods
jl
into
out
lcall
jp
inc
jge
mov
rolb
cmpsl
cmpsb
das
add
mov
jle
mov
lea
sti
sbb
push
mov
lock
xor
mov
jae
pop
mov
xor
adc
jo
iret
mov
pop
imul
inc
push
and
jl
fsubr
aas
sub
loop
push
jb
adc
test
xchg
cmp
dec
xor
scas
xchg
sbb
outsb
add
test
lock
stos
adc
sbb
or
int
push
test
xor
inc
jo
add
mov
mov
cmpsb
xor
fwait
xor
or
cmpl
stos
mov
aaa
hlt
mov
pop
jne
xchg
rolb
mov
xor
dec
xchg
xor
adc
int3
pop
sbb
movsl
adc
inc
sub
cmp
hlt
into
aas
xor
inc
mov
jae
outsb
ss
imul
sub
pop
inc
cli
std
sub
test
cmp
call
aad
add
or
ljmp
push
ja
pop
cmp
push
push
in
test
repz
xchg
cmpsl
adc
adc
dec
mov
lods
into
mov
sbb
clc
inc
repnz
ficomps
xchg
push
jp
sbb
je
mov
inc
testl
dec
mov
pop
mov
pop
xor
mov
out
push
bound
jl
aas
mulb
jge
pushf
pushl
mov
add
push
xorl
call
adc
aad
test
test
xchg
test
mov
pop
fists
fdiv
outsl
or
jno
test
scas
push
daa
lods
pushf
jne
loope
test
sahf
mov
shlb
push
sub
movsl
sbb
in
rcll
loope
push
sbb
popl
add
popf
mov
into
cmp
fadd
gs
mov
cld
imul
pop
sub
shlb
pop
push
ss
add
or
push
ljmp
int
out
cmc
in
add
mov
add
inc
sub
fucomi
jg
and
ds
mov
push
ficomps
fmull
out
lock
xchg
arpl
sahf
pop
mov
cmc
mov
inc
in
dec
fcomps
aas
jo
mov
xchg
loop
cltd
popa
test
push
jp
addl
push
xchg
jp
out
enter
jns
lcall
xchg
or
idivb
imull
ret
jnp
sbb
pop
push
add
xchg
inc
xlat
test
pop
out
mov
add
inc
aad
xchg
fdivl
dec
xchg
aam
lods
push
stc
jb
lahf
or
fistpl
loopne
fmul
xor
orl
xor
jnp
sti
sti
addl
or
andl
xchg
push
pop
das
xchg
ja
add
sbb
rcrb
into
xchg
out
sub
rorl
sbb
mov
aad
push
in
inc
bound
mov
insl
xchg
pop
hlt
test
scas
mov
sub
sti
sub
dec
mov
or
mov
notb
jg
stc
dec
ret
pop
outsb
mov
dec
out
mov
sbb
in
add
cwtl
add
mov
mov
test
cmc
xchg
mov
xor
sbb
imul
and
push
push
mov
jg
out
dec
inc
or
push
cmp
pop
or
adc
out
jecxz
mov
or
sbb
jecxz
mov
call
cmpsb
adc
or
push
leave
xchg
les
xlat
rcrl
xchg
mov
enter
imul
xchg
mov
sbb
dec
decl
int3
clc
mov
mov
sbb
add
mov
movsb
mov
adc
sbb
mov
popa
in
sub
add
js
jl
mov
or
cmp
es
and
and
mov
xlat
ret
xchg
fxam
inc
lea
clc
inc
daa
movsl
adc
aad
je
dec
jae
sub
outsb
dec
mov
adcb
stos
mov
in
mov
cmp
popf
xchg
pop
cmpsb
jg
sbb
lds
lret
cwtl
jne
add
cld
or
xchg
pop
int3
cltd
mov
outsl
jmp
mov
push
ds
adc
mov
enter
lret
jae
loopne
mov
sahf
sbb
xor
cmp
sub
mov
push
int
addr16
insb
repz
lods
pop
movsl
imul
int3
push
mull
fstpl
dec
sarb
je
in
jge
mov
push
stc
repz
mov
shl
lock
int3
iret
xchg
test
or
or
push
cmc
sbb
and
dec
add
pop
adc
fnstenv
inc
mov
pop
jb
lea
mov
sahf
inc
push
fdivrs
cmpsb
mov
xchg
stos
leave
dec
shlb
xor
sbb
into
int
lods
sbb
cld
push
xchg
test
push
mov
ljmp
mov
cmp
add
cltd
insb
inc
xchg
flds
mov
jg
dec
sarb
lds
aam
mov
xor
repnz
jbe
sub
or
inc
push
notl
movsl
jge
push
hlt
mov
sub
cmp
daa
adc
fcoms
sub
imul
rolb
push
sbb
push
imul
out
xor
sbb
and
lds
dec
fidivrl
pop
cltd
daa
jp
mov
jb
adc
sub
cmpsl
xchg
hlt
insb
scas
inc
jns
insl
jbe
and
dec
jno
stos
lret
arpl
mov
nop
dec
mov
sub
popa
dec
and
jle
fnstsw
stos
es
iret
pop
cmpsb
push
xor
dec
pop
rolb
mov
cmp
call
xchg
sbb
loope
cs
cmpsb
sahf
int3
mov
cmc
or
mov
aas
xchg
sbb
das
pop
mov
xor
adc
push
ljmp
mov
mov
out
hlt
sub
cmpsb
or
scas
jno
push
sbb
pop
pop
mov
pop
repnz
pop
cmp
add
push
push
and
cmp
in
push
filds
test
push
loopne
adc
sub
push
test
sbb
pop
aad
les
movsb
lret
mov
pop
lea
int3
xchg
jge
repnz
pop
jle
add
popf
cmp
div
mov
mull
orb
icebp
sti
rorl
and
rcll
data16
addb
pop
call
xor
testb
mov
adc
sbb
pop
lds
scas
mov
push
sub
add
push
in
xchg
jae
fmull
mov
mov
sarb
notb
cmp
dec
sbb
es
push
inc
shl
cwtl
push
aaa
push
mov
push
jle
stos
cmp
loopne
pusha
popa
mov
popfw
lds
cld
sahf
pusha
loope
adc
sti
lock
int3
sbb
incl
inc
cmp
adc
mov
cmp
mov
pop
push
pop
push
push
std
fsubs
test
and
inc
mov
pop
jmp
and
or
dec
mov
push
adc
outsl
bnd
cmp
adcl
bound
xchg
inc
lcall
add
dec
cmp
mov
inc
mov
ss
xor
cmp
pop
xor
jb
ret
nop
lcall
in
aaa
mov
icebp
xor
mov
mov
lods
xchg
or
inc
and
add
dec
pop
dec
pop
mov
xchg
xchg
sub
aam
cmp
nop
and
in
stos
aam
xor
cltd
push
ja
mov
lds
inc
pop
sbb
lahf
leave
sti
xchg
pusha
fyl2x
addr16
mov
sahf
cs
xchg
aaa
in
xchg
add
mov
test
pop
fsubr
adc
push
fstpt
in
dec
bound
xchg
rclb
xlat
mov
pop
jecxz
jnp
cld
inc
iret
jmp
push
iret
out
xchg
inc
lock
rcrb
or
push
push
sahf
jbe
xchg
add
and
movb
call
xor
negl
idiv
mov
jae
push
adcl
mov
bound
add
or
or
lea
pop
or
sbb
xor
jmp
cmp
stos
xor
movb
neg
mov
repnz
dec
pop
sbb
jae
mov
cld
inc
jecxz
les
adc
pop
add
hlt
test
or
push
addr16
xchg
nop
loop
pop
arpl
dec
pop
sbb
jns,pn
lret
and
cwtl
popf
ffree
mov
mov
in
jle
fs
js
mull
jle
out
fldt
std
add
adcl
icebp
xchg
sbb
xchg
nop
dec
imul
pop
int3
lea
mov
imul
lcall
pop
pop
jg
lahf
mov
or
clc
xchg
push
hlt
push
push
mov
aad
and
shl
jns
and
add
pop
inc
addr16
mov
call
scas
pop
rcl
ljmp
xchg
cmp
lds
adc
cmp
cwtl
int
jno
mov
pop
into
bound
lret
jge
cmpsl
add
mov
mov
add
subb
faddp
fwait
icebp
adc
rcl
fwait
inc
decl
popa
fcmovnb
fcompl
inc
inc
shr
popa
pop
in
pop
jns
and
mov
dec
scas
icebp
pushl
int3
mov
sbb
or
sub
icebp
lcall
negl
repz
xchg
ds
or
or
inc
inc
pop
out
mov
mov
mov
xor
aaa
pop
jne
das
pshufw
xchg
cs
sbb
sub
nop
cwtl
rorb
jo
fwait
insb
test
lea
movsb
xor
xor
inc
stos
loopne
and
push
lret
push
sub
pop
cmp
pop
mov
and
out
pop
add
loopne
jg
stc
imul
sarb
push
test
cmp
out
mov
notb
sub
push
int3
xor
loop
lds
or
xchg
in
adcb
dec
xchg
xlat
int
lods
lock
or
int3
loope
cmp
ds
pop
rorb
jb
in
xchg
xor
inc
cmp
leave
jns
mov
aad
mov
fimull
sub
mov
js
push
aad
fstps
mov
mov
pop
dec
jbe
cmp
sarb
sarl
dec
lret
ja
arpl
adc
in
movsl
adc
je
pushf
or
cmp
fwait
mov
push
mov
jmp
orl
mov
mov
mov
cmc
jnp
pop
arpl
sti
cmp
push
jg
sub
pop
mov
sbb
hlt
inc
sub
int
mov
cmp
fwait
or
pop
sub
mov
mov
sbb
orl
pop
out
insb
sub
ljmp
test
pop
mov
adc
stos
dec
mov
test
test
add
push
cmp
stc
pop
sbb
push
mov
pop
addl
ret
xor
jno
orl
fsubrs
push
lock
and
cld
jp
sub
adc
hlt
aas
push
adc
js
enter
mov
loope
rcll
push
xor
and
cmp
xor
fidivrl
pop
xchg
bound
push
subb
fst
fdivs
adc
sbb
jns
cwtl
mov
je
data16
not
sub
sbb
sarb
jl
mov
and
mov
xor
shrl
pop
mov
mov
stos
mov
mov
imul
repnz
iret
popf
data16
xchg
add
jg
std
andl
cmp
ret
push
stc
dec
xor
idivb
lret
std
cmp
mov
into
pop
stc
scas
mov
push
and
je
jp
inc
adc
jmp
push
cmp
cmpsl
and
sti
sub
gs
or
repnz
cmp
add
negl
and
stc
fs
loope
mov
stos
adc
in
ljmp
clc
push
dec
mov
mov
jbe
pop
dec
mov
jge
ja
es
dec
lock
xor
aaa
mov
aad
inc
lahf
pusha
mov
cmp
cs
in
lods
mov
dec
jns
mov
into
mov
cli
mov
add
push
mov
add
sbb
mov
adc
or
xlat
pop
mov
sbb
insl
jmp
into
mov
shr
jae
insb
inc
pop
and
lret
cmpsl
orb
cltd
jmp
ds
mov
std
jl
ljmp
mov
xor
xor
cmp
or
popf
inc
cltd
adc
cmp
xchg
mov
pop
les
xchg
aas
insb
mov
inc
and
cs
sbb
adc
stos
xchg
pop
lahf
stos
call
loop
xlat
leave
nop
fldl
mov
scas
shr
push
mov
je
mov
pop
xor
in
mov
ret
dec
xlat
shll
dec
test
sahf
popf
pop
fsts
test
sbb
test
push
jns
push
mov
test
dec
push
sub
dec
fimull
sub
popf
sbb
test
rclb
out
les
dec
cltd
push
pop
clc
mov
mov
jno
mov
das
sub
in
movsb
pop
and
mov
movsl
pop
sti
xorl
cmp
scas
fs
xor
xchg
adc
mov
lods
testb
xchg
xchg
or
adc
dec
adc
xchg
rorb
cmp
daa
mov
adc
cmp
xor
push
cmp
jbe
inc
mov
or
es
mov
enter
out
addr16
inc
fwait
lods
dec
pop
jle
ret
or
neg
xor
inc
xchg
repnz
es
adc
hlt
pop
mov
ret
add
in
adc
loope
pop
inc
cmp
mov
pop
repnz
mov
and
insb
xchg
dec
scas
push
jnp
push
int
std
pop
pop
cmpsb
pusha
and
stc
lahf
jle
add
fsubs
lods
ret
mov
push
add
push
lret
add
adc
cld
bound
dec
in
xor
mov
rorb
pop
imul
nop
sbb
xchg
mov
add
fstps
arpl
test
scas
sbb
das
sahf
sbbb
out
aam
inc
cld
xchg
inc
imul
sbb
xor
sti
scas
sbb
adc
ret
mov
mov
pushf
sub
xchg
sub
lahf
add
test
sub
mov
outsb
test
in
out
lret
adc
out
movsl
addr16
pop
lahf
sub
xchg
lock
inc
lret
ret
lret
push
lret
cli
dec
jl
cmpsl
xchg
xchg
xlat
jg
add
aad
sub
imul
mov
inc
mov
add
int3
xchg
ret
call
pop
js
mov
dec
xchg
movsb
dec
xor
cmc
adc
and
pop
cmp
aaa
and
das
sbb
sbb
or
jnp
add
int3
jns
and
inc
cmpsl
push
jl
mov
jmp
insb
add
push
ficoml
or
testb
pop
jmp
cs
mov
mov
push
and
jae
jne
dec
or
mov
incb
mov
push
je,pt
jp
sbb
jo
addr16
sub
mov
cs
and
dec
push
mov
jo
call
mov
sbb
js
enter
jbe
push
adc
imul
push
adc
pushl
lahf
bound
mov
inc
push
mov
xor
data16
sub
faddp
push
jae
push
mov
paddw
pop
mov
adc
int3
dec
sbb
ljmp
dec
jmp
das
and
shrl
push
imul
inc
cltd
jne
pusha
lds
mov
shrb
cli
pop
jo
adc
adc
and
test
lds
in
mov
testb
pop
inc
cld
movsl
je
jg
mov
in
dec
lea
dec
dec
jmp
push
pop
adc
or
scas
mov
stos
cmc
leave
pop
fwait
or
sbb
dec
xchg
sbb
in
lods
mov
scas
out
push
faddl
mov
pop
push
sbb
cwtl
test
arpl
aam
dec
sbb
push
arpl
fldenv
or
mov
dec
jb
js
pop
je
push
fwait
lock
out
inc
pop
stc
mov
push
xchg
and
sbb
loope
test
xchg
gs
xchg
sub
enter
xchg
movsb
or
add
fisubrs
push
push
xchg
push
in
popa
dec
repnz
je
pop
cmp
lods
or
ja
push
inc
jae
pop
int
and
xchg
push
outsl
arpl
jg
test
cmpsb
pushf
outsb
mov
sub
xchg
jae
pop
in
data16
adc
leave
lods
mul
dec
cmp
xchg
push
jb
mov
mov
hlt
cmp
adc
push
cmp
ds
inc
insb
ss
xchg
scas
hlt
xchg
pop
xchg
xor
or
mov
mov
test
xor
inc
cmpsb
add
in
push
jo
push
repnz
cmp
jbe
and
lds
pop
fs
je
fwait
adc
iret
inc
adc
popa
xor
jl
and
add
adc
in
sbb
mov
xor
mov
add
test
xchg
fnstsw
mov
push
sub
out
jmp
mov
cltd
cmp
adc
cwtl
or
es
jmp
adc
sar
jnp
push
and
inc
fs
push
and
sbb
cltd
xchg
xchg
ret
mov
push
mov
add
mov
bound
icebp
mov
and
sti
mov
fimuls
adc
jae
pop
sti
or
dec
jl
fidivl
insb
pop
fidivrl
or
fiadds
mov
adc
pop
mov
add
adc
mov
mov
arpl
mov
insl
and
outsb
pop
or
jns
insl
jmp
push
movsl
mov
aad
imul
or
sub
jl
cmp
jecxz
xor
jb
daa
dec
pop
fisubs
jae
arpl
add
add
fsts
addr16
and
cltd
push
ret
lcall
jbe
xchg
imul
insl
fwait
jl
andl
pusha
pop
mov
mov
nopl
mov
push
xor
pop
add
loopne
js
notl
loopne
popf
inc
jne
pushf
test
gs
es
arpl
test
mov
sbb
sbb
xor
add
cltd
lret
test
push
sbb
js
lods
jp
js
sub
int3
inc
mov
mov
stc
or
or
jp
inc
shlb
pop
sbb
inc
xlat
in
leave
outsl
push
je
adc
cmpsb
and
repnz
jnp
jne
rolb
in
adc
stc
ss
dec
loope
sbb
cmp
sbbl
and
inc
popl
ds
or
repnz
jmp
pop
mov
dec
fs
lret
scas
and
enter
paddsb
xchg
xor
insl
inc
jne
jbe
push
fs
lcall
xchg
mov
loopne
dec
test
xchg
pop
inc
mov
adc
push
adc
xor
aas
sarb
cmpb
out
and
lods
jb
cli
outsb
imul
inc
es
jmp
mov
repnz
gs
paddb
mull
ror
ljmp
pop
push
arpl
cmpsb
ror
jecxz
dec
xor
jno
sahf
pop
data16
ret
nop
imul
outsl
insb
xchg
adc
jno
add
push
lods
and
jge
add
pop
rcrb
sub
sar
js
and
dec
outsb
dec
aas
shlb
negl
push
cmp
push
jg
insl
add
and
xor
mov
push
and
push
xchg
ja
fstl
add
sub
stos
int3
cmp
mov
lahf
test
push
test
sbb
jge
sbb
add
sbb
dec
jecxz
or
pop
inc
fcomip
aas
scas
repz
mov
cmp
insl
mov
push
andb
and
ljmp
fistpl
mov
and
pop
push
cmpsl
neg
fs
xor
sub
or
push
mov
sub
insl
dec
ss
dec
cmc
incl
in
fstps
mov
jb
or
xchg
repnz
fnsave
movsl
mov
ret
pop
js
or
mov
add
ficoml
pop
cs
aad
xor
cmpsb
sub
in
xor
sub
xchg
ret
dec
mov
cmpsb
ret
cli
lahf
inc
fiaddl
mov
stos
int
iret
add
cli
les
cltd
push
mov
xor
lock
push
inc
testb
dec
cmp
or
imull
hlt
pop
in
jg
es
mov
aaa
mov
and
mov
jmp
xlat
sahf
fcoms
sub
jecxz
push
or
jge
lahf
jl
xchg
fwait
mov
rorl
push
pop
iret
adc
xchg
xchg
sti
cwtl
mov
and
lods
pop
aad
pop
pushf
out
jns
cmp
sbb
sti
movsb
ss
fwait
scas
push
or
pop
lods
pop
or
lcall
out
pop
dec
add
mov
pop
fstl
mov
pop
jl
adc
sahf
adc
mov
popf
xlat
cmpsb
adc
mov
xor
mov
cs
sahf
popf
sub
mov
fidivs
push
aam
cmp
mov
sub
mov
push
push
shrb
pop
jmp
mov
mov
fcoml
cmpsb
cltd
roll
cs
mov
enter
or
jnp
cmp
popl
sub
scas
inc
push
in
pusha
insb
out
inc
sarl
mov
loopne
and
icebp
ljmp
mov
sub
in
popf
scas
mov
inc
rorl
sub
test
idivb
push
lahf
ror
inc
mov
and
sbb
sti
inc
ret
loope
mov
adc
sysret
lods
int
aas
inc
jns
sub
push
cltd
call
je
aad
push
frstor
and
push
filds
sub
outsb
lods
int3
mov
mov
je
out
rcll
adc
sbb
enter
cld
cmpsl
stos
push
mov
xchg
imul
aaa
pop
adc
adc
cmp
adc
stos
adcl
sti
fwait
push
fistpll
push
push
jp
ja
pushf
sarl
sub
dec
mov
mov
loop
in
push
xchg
cmpsl
cli
aas
mov
sbb
inc
test
mov
mov
sbb
call
repnz
sbb
cmp
pop
push
mov
mov
cmp
xor
imul
inc
ss
shrl
loop
aaa
ret
int3
mov
das
and
in
xor
push
lcall
repnz
pushf
mov
xor
inc
push
and
push
jo
jo
push
lret
int
and
sub
mov
sbb
pop
inc
mov
push
add
insb
dec
sbbl
ffreep
ret
push
push
cs
pop
mov
xchg
out
sub
addr16
sarb
mov
mov
cmc
mov
lcall
std
decb
stos
loop
mov
sbb
fs
sbb
mov
nop
gs
adc
cmpsl
les
fadd
pmuludq
minps
std
adc
sbbb
or
sbb
cmpsb
add
int3
add
mov
adc
jmp
adc
mov
push
cmp
mov
push
iret
push
cmpsb
movsl
gs
stos
inc
lret
fstpl
jge
ljmp
into
lahf
arpl
in
test
lret
and
xor
ret
mov
ja
sub
cmp
lock
cmp
mov
mov
out
aad
rorl
inc
stc
dec
push
xchg
pusha
jb
testb
mov
mov
jp
push
or
ds
add
cltd
nop
push
mov
cmp
jnp
and
loope
imul
pop
lods
leave
mov
pop
sub
data16
and
or
jl
icebp
mov
xchg
cmp
jge
cmpsb
ret
dec
imul
jae
pop
fsubs
popf
jg
shrb
mov
in
fcomi
mov
lods
push
and
mov
push
ljmp
pop
inc
shrb
daa
sub
xor
cmp
adc
lods
call
add
sahf
idiv
mov
add
std
out
mov
jne
insb
es
stos
dec
lcall
dec
add
and
jbe
dec
dec
xor
mov
rorl
cmp
dec
sbb
push
push
sahf
lahf
lods
mov
adc
cli
xlat
dec
das
imul
xchg
loope
pushf
and
fwait
stos
ljmp
int3
test
xchg
cmp
mov
jae
ds
mov
mov
into
add
or
adc
pop
into
cld
iret
js
inc
repnz
jns
test
popf
cwtl
adc
pusha
cmp
dec
rorl
lea
rcrb
pop
inc
mov
aad
addr16
imulb
push
aad
fmuls
pop
ret
icebp
cmp
mov
cli
adc
mov
in
loopne
jmp
enter
ret
fbstp
sbb
mov
and
sub
lock
fcompl
xchg
push
lcall
outsl
add
xchg
pushf
inc
cmp
mov
mov
fidivrs
xor
or
push
bswap
repz
dec
adcb
or
and
or
mov
mov
mov
leavew
sub
add
mov
into
icebp
cmp
stos
dec
adcl
sbb
fcmovnb
fs
scas
or
or
adc
aam
notb
adc
fildl
mov
iret
mov
mov
dec
je
fdivs
and
adc
out
jnp
sub
ja
sbb
push
jne
xchg
mov
sub
mov
aaa
imulb
lret
push
in
aam
jns
ss
push
mov
dec
rorl
cmpl
outsl
out
push
mov
dec
lea
mov
dec
cltd
cltd
movsl
mov
rcrl
xchg
xor
pop
cmpsl
imul
push
xchg
push
je
insl
adc
lcall
aam
out
dec
lods
push
mov
data16
mov
cmp
add
sub
lods
dec
jne
stos
cmpsb
imul
lods
mov
pop
insl
scas
push
aam
push
dec
cmp
testb
ja
xchg
mov
mov
les
fnstenv
sbb
mov
fistpl
js
pop
xchg
fs
add
jle
pop
xor
scas
movsl
aam
push
mov
sahf
test
sbb
es
mov
jle
rcll
dec
rclb
fcoml
mov
dec
dec
xor
movsl
out
scas
adc
cmp
or
in
jge
adc
fwait
mov
inc
mov
cmp
mov
lahf
popa
outsb
add
aam
pop
inc
sub
pop
mov
push
bound
pop
repz
inc
pushf
sahf
fnstsw
movsb
stos
sub
das
sbb
add
fimull
mov
ja
cltd
repz
xchg
outsb
rcl
sti
pop
shll
call
cld
mov
cld
jo
leave
xor
jg
lods
push
fmul
lcall
xor
sub
push
or
xlat
adc
aam
insl
jo
mov
jl
xor
push
cld
sbb
add
int3
movsb
flds
xchg
cmp
xor
jae
shlb
dec
sahf
cli
sub
xor
lds
aam
cmp
mov
test
or
pop
ficoml
popf
adc
ret
loope,pt
shl
push
cmpsb
int3
cmp
or
mov
cmc
adc
lds
mov
add
aad
inc
push
lds
xorl
inc
cmp
adc
icebp
in
add
mov
mov
pop
jmp
mov
ds
cmp
dec
inc
jns
mov
sub
inc
add
push
movsl
leave
mov
std
adc
or
fs
pop
mov
in
xchg
mov
mov
ss
jg
lods
jp
jo
xor
inc
push
movsb
push
mov
xchg
rcrb
hlt
out
fwait
add
sbb
sub
shll
aaa
and
mov
gs
mov
insl
adc
dec
ja
xchg
dec
int
adc
mov
inc
mov
das
test
dec
ror
aas
fisttpl
sahf
sub
and
out
in
bound
ret
out
cli
ficomps
xor
stc
in
loopne
test
xchg
mov
lea
mov
test
out
mov
stos
mov
les
daa
fs
aaa
jecxz
cmpsl
je
inc
or
add
fnstcw
or
mov
mov
dec
cwtl
push
rcr
mov
sbb
imul
add
mov
xchg
cmp
cmp
xchg
adc
clc
das
stc
in
js
decl
sbb
push
shl
sti
cmp
cmp
fsubrp
cltd
xchg
fs
movl
and
popf
add
insl
iret
pop
mov
loopne
lahf
sahf
imul
ds
push
and
jo
stos
adc
mov
and
jl
lcall
xchg
and
jmp
scas
into
scas
sub
rorl
jp
les
jmp
lret
fbstp
mov
lret
aad
sbb
stc
inc
out
ret
lcall
mov
sbb
in
enter
leave
cwtl
jne
iret
cmp
imul
push
push
lods
and
rcll
xchg
xchg
pop
in
enter
jo
daa
int
pop
sti
inc
xchg
idivl
arpl
xor
pop
data16
pop
out
into
mov
std
movsl
mov
jmp
aam
jge
js
lods
sbb
mov
adc
mov
push
rcll
int3
dec
loope
sub
or
cmp
stos
lahf
mov
adc
add
pop
mov
push
xor
dec
pop
insl
pop
pop
mov
push
push
push
daa
dec
imull
pop
add
scas
or
mov
int
inc
test
or
add
movsl
dec
repnz
test
cmc
and
jmp
sbb
xchg
das
sbb
mov
outsb
test
andb
fstps
xor
mov
lods
xchg
daa
sbb
jns
stos
mov
out
cld
sbb
dec
sbb
pusha
je
cli
lock
push
sub
cmp
push
ds
push
into
fwait
daa
push
lea
and
movsl
pop
popa
xor
ljmp
dec
test
nop
jae
or
out
pop
jl
dec
ret
out
or
dec
mov
mov
stc
adc
mov
mov
jns
mov
das
int
cltd
jle
leave
push
cmpb
sbb
jl
mov
dec
je
sbb
test
adc
sbb
mov
push
cmp
sub
mov
clc
jge
test
and
mov
fs
push
fcomps
rcll
pop
gs
ds
fwait
dec
and
jecxz
dec
idivb
push
jnp
jg
mov
sub
push
in
enter
mov
add
lods
xor
fcoml
xchg
aas
jne
loopne,pt
add
ret
jle
daa
out
icebp
pusha
mov
sub
mov
and
movsb
loope
sbb
push
and
cmp
lods
mov
mov
add
arpl
mov
cmpsb
push
sub
cmp
xchg
clc
in
enter
mov
push
dec
sub
cmc
fistpll
mov
scas
xchg
xor
inc
sub
add
and
xchg
adc
cld
pop
push
std
ret
lahf
xchg
fs
ficoml
inc
ficompl
mov
mov
fistps
addb
sbb
jne
fiaddl
mov
push
int3
inc
sbb
ljmp
push
arpl
std
dec
cs
sbb
xor
xor
inc
push
cmp
mov
les
stos
and
mov
jb
scas
xchg
leavew
dec
fistps
ret
inc
out
xchg
sbb
fisubl
loopne
movl
xchg
jae
sub
sti
pop
push
jecxz
cmpl
pop
sub
sbb
loope
addr16
ja
xor
js,pt
or
scas
adc
mov
aas
pop
push
cmp
int3
cmp
out
mov
ja
mov
cmp
push
addr16
mov
arpl
fmull
adc
pushf
or
data16
push
sbb
mov
sbb
or
pusha
mov
mov
lds
loop
dec
mov
fwait
mov
lret
cmp
mov
das
test
pop
adc
les
imul
xchg
repnz
mov
dec
aas
pop
mov
stc
cmp
test
aam
test
mov
dec
movsb
in
es
cs
ret
test
stos
stos
mov
xchg
mov
push
and
fs
mov
pop
sbb
pop
sbb
xor
push
lods
ds
bound
es
imul
sbb
mov
xchg
insl
push
stos
inc
scas
jecxz
lea
frstor
adc
andl
xchg
push
pusha
xor
cmpsl
push
xchg
jl
bound
popf
cmpb
sarl
jl
scas
decb
dec
or
jb
nop
fildll
mov
outsb
mov
inc
add
xlat
cltd
adc
adc
push
aaa
mov
cmp
shrb
imul
cmpsb
js
dec
test
mov
sbb
xchg
adc
dec
ss
push
in
add
or
mov
fs
inc
and
notb
lock
cltd
iret
adc
xchg
mov
movsb
in
or
mov
and
in
imul
sub
pop
pop
andb
lret
je
cmp
xchg
push
rclb
push
jne
mulb
movsl
inc
sub
scas
mov
aad
nop
cmp
stos
pop
sbb
int
iret
imulb
scas
shll
adc
cmp
outsl
xor
xchg
push
xchg
call
pop
xchg
push
inc
cmp
mov
ret
mov
xchg
push
mov
push
fistpll
mov
fdivs
aas
sub
sub
mov
mov
mov
lock
popf
cmp
repnz
ss
mov
and
imul
pop
xchg
les
xor
push
shlb
adc
inc
lods
das
fs
dec
aam
fs
mov
imul
add
and
sub
push
push
cwtl
lods
pop
jg
or
subb
or
loop
out
jl
mov
dec
xchg
inc
adc
inc
adcb
mov
fadd
rcrl
cmpsl
ret
dec
push
roll
pop
lahf
leave
in
lea
into
popf
nop
enter
push
rorb
and
xor
jl
dec
out
iret
pop
or
inc
jp
lds
mov
xchg
repnz
lret
push
loop
in
or
fldenv
push
jl
les
aas
mov
dec
cli
jb
inc
clc
adc
std
xor
cmc
cmpsb
cmp
bound
or
mov
pop
in
and
dec
jge
and
jb
sbb
xor
and
push
cmp
in
lret
rcrb
cmpsb
sti
mov
int
loopne
shrb
adc
cmpsl
dec
pop
jg
jbe
inc
pop
loopne
pop
jge
lret
add
lock
jnp
cmc
and
push
and
adc
sub
out
adc
pushf
add
cmpsl
out
pop
daa
call
loope
sti
mov
jge
or
mov
repnz
outsl
mov
shl
leave
insb
mov
cmp
shl
mov
push
das
jnp
lock
sub
popa
jmp
in
mov
cltd
test
mov
or
add
and
pop
adc
sbb
jb
test
xchg
add
nop
fs
push
icebp
xchg
sbb
nop
outsb
or
mov
fdivrp
jb
and
gs
or
ljmp
xor
push
jns
sub
dec
sti
pop
cmp
fistps
sar
inc
cmp
and
shlb
jp
in
jbe
rorl
or
fldcw
out
sbb
sub
push
cmpsl
mov
cli
aam
pushf
push
jmp
pop
adc
sub
push
sub
jno
jns
push
sub
xchg
test
mov
lcall
adc
dec
add
pop
xchg
pop
in
and
cmpsl
dec
scas
sbb
mov
mov
popf
fnstenv
cmp
push
test
inc
scas
pop
lcall
mov
push
incl
dec
cmp
sub
ret
dec
or
movl
mov
mov
movsl
dec
jne
js
test
push
inc
aaa
or
pusha
push
cmp
cmp
in
add
imul
jae
in
inc
addb
sub
and
xchg
dec
xor
sbb
push
pop
push
cld
loopne
js
outsl
imul
fwait
and
or
enter
mov
clc
dec
aad
and
jge
xchg
mov
push
sbb
pop
ret
and
ds
loopne
jne
lods
dec
add
xchg
leave
std
mov
aad
cmc
imul
sarb
test
cvtps2pi
and
test
mov
sub
sbb
xchg
stos
cmp
dec
incb
inc
aad
xchg
mov
inc
shlb
mov
pushf
inc
jbe
cld
popa
mov
lods
popa
mov
int
std
sub
mov
jae
clc
cmp
andl
push
shll
sub
jae
pop
dec
pop
cmp
mov
call
add
fildll
rcrl
fisttps
fisubl
sbb
mov
loope
pop
pop
cld
dec
ds
pop
shll
push
in
or
fs
fcoms
scas
add
insl
xchg
sub
dec
adc
fcomps
int
aaa
xchg
dec
fcmovne
movsl
push
cli
inc
push
xor
adc
out
sub
inc
cs
fucomi
sarl
push
push
pop
sbb
jge
xchg
inc
or
sub
jp
adc
pop
pop
jbe
push
and
call
xor
lods
jp
adc
add
xchg
popf
add
lods
hlt
mov
mov
add
jge
aad
sbb
jb
rcrb
mov
mov
sbb
mov
sbb
inc
cmp
sbb
loop
decb
movsb
sub
lcall
les
inc
pop
sarl
imul
jmp
arpl
js
jge
dec
mov
mov
shlb
or
gs
out
ljmp
mov
add
adc
cmp
lods
adc
ret
int
fdiv
loop
repnz
mov
sub
rcrb
lret
mov
movsl
inc
pop
mov
mov
mov
ljmp
pop
add
test
addl
popf
popa
xchg
cli
icebp
dec
es
jl
mov
or
mov
test
jno
popf
xchg
aaa
inc
mov
xor
out
add
or
mov
inc
jnp
gs
adc
jae
sarl
je
mov
push
xor
aaa
ret
test
movsl
xchg
pushf
add
sbb
inc
popf
sbb
xchg
out
or
cltd
out
cli
mov
xor
les
sub
add
and
xchg
mov
jge
scas
fwait
inc
mov
leave
cmp
mov
daa
cmp
out
cmp
push
cli
and
pop
pop
pop
sbb
mov
movsl
lock
adc
push
inc
iret
jmp
not
inc
lods
and
jbe
pop
jmp
dec
xor
mov
jns
imul
inc
iret
lcall
popf
scas
fcmovne
sbb
mov
mov
or
out
push
mov
repnz
jo
push
je
dec
ss
insl
push
dec
pop
mov
xchg
pop
sbb
push
adc
xor
mov
mov
ret
scas
push
outsl
sbb
inc
test
leave
out
int
insb
add
mov
and
jmp
inc
ss
scas
jae
push
inc
mov
les
push
add
cmp
mov
or
cld
push
in
std
aam
and
mov
ss
imul
dec
in
cwtl
jae
int
sbb
mov
xchg
push
je
xchg
loop
sbb
or
add
dec
dec
mov
sub
pop
cs
stos
pop
dec
sub
pop
lock
cmp
mov
aaa
or
scas
mov
shll
stos
bound
es
cmc
es
pop
outsl
scas
jle
imul
sti
cs
dec
sub
and
sahf
out
and
cmpsl
pop
test
leave
cmp
and
pop
test
add
insb
into
bnd
pop
lock
scas
push
xchg
stos
dec
pop
rolb
or
int3
or
orl
cmovns
leave
inc
cmpsb
dec
ret
mov
ss
cmp
and
mov
or
sbb
pop
sub
pop
in
out
add
lcall
dec
out
adc
ljmp
xchg
fwait
push
int
es
lret
les
add
jo
pmuludq
icebp
stos
fmull
pshufw
sahf
cwtl
add
push
and
sbb
cs
adc
std
jp
pusha
dec
movsl
and
pop
arpl
and
popf
lds
cmpsl
jp
xor
pusha
pushf
jle
add
in
push
leave
aad
jmp
jo
add
aas
sub
std
xor
out
and
icebp
jns
jo
es
data16
mov
push
push
sub
out
pop
pop
nop
and
xchg
aaa
push
test
pop
pop
or
mov
or
sbb
stc
fdivrp
cmp
sub
aaa
dec
imul
fildl
inc
lea
cli
test
mov
jb
push
mov
fistpl
pop
xchg
int3
test
popf
sub
imulb
enter
jg
xchg
shl
push
push
push
cmp
xor
inc
push
test
push
jb
cmp
gs
and
jmp
dec
enter
xchg
cmp
mov
mov
push
fists
inc
adc
xchg
sbb
mov
add
in
sbb
sub
mov
std
clc
pop
xor
or
mov
add
push
or
xchg
inc
lea
test
lcall
shr
xor
xchg
xchg
adc
inc
pusha
and
ret
out
mov
push
stos
push
loop
jp
adc
cmp
test
xor
sbb
sahf
jns
xor
adc
sub
xor
popf
mov
sub
push
mov
negb
jnp
or
inc
or
mov
cwtl
pop
jo
xchg
fisubs
cmp
test
ror
and
ds
mov
enter
cmp
inc
fs
push
mov
out
aad
and
pushf
roll
data16
jg
mov
test
push
nop
and
icebp
in
shrl
test
fwait
test
inc
or
cmpsb
in
scas
mov
xchg
and
jmp
lds
pop
and
in
int3
aaa
mov
or
or
lcall
subb
lcall
popf
add
in
or
xor
cmp
arpl
popf
rol
mov
mov
test
out
stc
inc
xor
xchg
cs
pop
or
mov
test
inc
scas
jno
arpl
or
outsl
nop
daa
jno
addr16
pop
ret
mov
inc
cmp
sub
stc
push
adc
fiaddl
pop
xchg
lods
andb
rol
jecxz
test
icebp
jle
push
cmp
aad
push
add
mov
pop
jmp
test
test
shll
insb
dec
aam
dec
aad
fsub
pop
inc
push
into
or
sbb
lock
or
push
mov
mov
adc
push
lahf
js
addr16
fcomip
xor
push
and
in
movsb
mov
ret
fs
mov
outsl
pop
les
bound
push
dec
mov
xchg
in
dec
or
and
or
pop
mov
pop
cmp
sti
sbb
scas
insl
loope
and
and
mov
xor
outsb
fsubs
pop
cli
aas
fs
mov
jb
fildl
adc
aas
stc
cld
ret
lods
or
mov
push
jmp
scas
inc
and
imull
xor
add
dec
push
push
aad
int
leave
out
jp
dec
sbbb
adc
mov
sub
repz
sub
sub
lods
add
cld
out
adc
and
movsb
dec
pop
pusha
mov
stos
xor
dec
inc
mov
inc
test
sub
jmp
pop
jnp
cmpsl
in
cmp
daa
pushf
decb
out
rclb
lahf
in
test
ds
cmp
and
add
out
xchg
and
lods
fsubs
mov
std
test
into
stos
jle
cmp
cmc
jmp
cwtl
outsb
test
aad
xor
aaa
or
repnz
hlt
loop
lods
icebp
xchg
mov
push
insl
mov
jns
js
inc
push
cmpsb
push
ja
fcoms
pop
mov
repnz
mov
shll
sti
add
xor
enter
ljmp
mov
sub
popf
lcall
push
push
sahf
sahf
inc
mov
das
xchg
mov
ja
or
lock
adc
xlat
push
mov
mov
in
scas
loopne
sub
add
into
dec
pop
cmp
movsl
add
xor
mov
fs
mov
sub
arpl
repz
dec
negb
fidivs
lods
movsb
leave
insb
sbb
repnz
mov
icebp
es
mov
cs
inc
test
cli
jbe
rcrl
sbb
rcl
cmpsb
ljmp
jbe
fldt
cmpsb
mov
cmp
shrl
test
sahf
notl
xor
outsl
lahf
stos
pop
pushf
fistl
mov
inc
cmp
aaa
scas
adc
icebp
sub
shll
jg
stc
call
ljmp
insb
js
fs
mov
js
push
les
pushf
add
sub
std
mov
sub
pushf
pop
xor
es
pop
xchg
jnp
mov
xchg
ficoms
pop
xor
sbb
or
mov
cld
dec
adc
fimuls
call
outsb
and
fwait
mov
call
and
fidivl
pop
lds
and
and
sbb
push
imul
inc
gs
fwait
inc
lea
leave
cmp
xlat
or
les
leave
cltd
pop
mov
and
data16
xchg
sub
xchg
hlt
mov
inc
mov
mov
xor
jb
dec
push
stc
jmp
and
subb
mov
fidivrl
fisubl
sbb
xorb
adc
inc
mov
mov
dec
mov
mov
mov
pop
push
xor
jmp
shll
ret
roll
insl
lea
mov
popf
jge
and
lcall
fwait
and
adc
jmp
es
push
pop
push
add
push
xor
sbb
mov
push
leave
add
lds
jecxz
ficomps
pop
icebp
dec
push
sub
jnp
xchg
add
movsl
mov
mov
scas
xor
xor
hlt
mov
sub
sarl
mov
orl
add
xchg
pop
movsb
xlat
cmp
pop
shlb
int3
andb
add
lock
xchg
mov
adc
mov
push
jp
xchg
popf
push
enter
imulb
lock
add
popf
xchg
pop
call
jbe
mov
ret
test
pop
enter
or
adc
outsl
xor
aas
xchg
call
mov
call
sub
nop
xor
pop
imul
jno
mov
sbb
pop
je
shrl
dec
sbb
fs
out
pop
dec
lods
dec
dec
add
mov
insl
cmp
dec
fdivp
push
push
scas
mov
inc
or
pop
sub
hlt
outsl
imul
shlb
out
and
xor
gs
cmp
dec
jmp
lcall
pand
fwait
xchg
mov
pop
sahf
sbb
clc
addr16
mov
mov
fstps
mov
ljmp
push
das
adc
dec
adc
fimull
faddl
sub
sbb
es
jne
test
imul
rorl
sub
push
scas
add
outsb
daa
leave
xor
jne
lret
jp
sti
sbb
movsl
add
fimull
push
pushf
cmpsb
xchg
xchg
add
push
lea
mov
push
leave
or
ja
mov
or
movsb
mov
cmp
jbe
xchg
enter
pop
stos
out
dec
cmp
push
pop
push
stc
inc
jne
dec
add
lret
movsl
sbb
jnp
fnstsw
js
push
fwait
mov
cwtl
movsl
std
sbb
dec
aas
and
insb
dec
stc
cmpl
xor
popf
lock
mov
es
out
leave
fadds
push
arpl
outsb
mov
scas
sbb
push
adc
sbb
shr
mov
push
insl
push
aaa
adc
jge
into
mov
dec
sub
or
test
dec
call
aad
jb
mov
sbb
mov
mov
test
xchg
pop
outsb
pop
sti
lret
adc
xor
push
dec
mov
les
lds
imul
gs
mov
daa
pop
jp
scas
lods
lds
and
xor
stos
cmp
cmpsl
mov
cmp
push
cmp
push
dec
cmpb
insb
mov
pop
add
adc
inc
ficompl
mov
inc
sbb
lret
ja
outsb
jbe
cltd
fmull
dec
sub
jo
ds
pop
les
inc
sub
shr
shlb
repz
pop
pop
adc
sbb
scas
icebp
push
mov
or
pop
popa
imul
or
iret
and
setg
fldcw
int
sub
sbb
sbb
mov
mov
pusha
sti
cmpsb
pop
dec
fldl
cmp
ljmp
fs
outsl
aam
mov
xlat
adc
push
lcall
mov
or
add
loop
cmpsb
add
or
repnz
push
add
clc
stos
dec
test
mov
inc
gs
sar
pop
dec
jo
inc
adc
int
adc
leave
sbb
xchg
cs
jp
xchg
jle
xor
addr16
add
rcr
inc
in
arpl
in
psubusw
lods
mov
testl
stos
ja
imul
sahf
cmc
or
repz
jbe
in
cmp
or
out
and
pop
pop
sbb
leave
lea
mov
pop
add
mov
test
lahf
adc
dec
pusha
jno,pt
cwtl
sub
ja
jp
repnz
pop
jbe
je
dec
push
cmpsb
jns
cmpsb
lds
cmp
adc
pop
jb
push
jne
add
imul
decl
mov
imul
mov
das
add
xor
mov
outsb
movsl
sbb
sub
jbe
add
fcomip
push
cmp
add
jge
jno
sub
aad
mov
mov
adc
and
mov
movsl
push
scas
jecxz
sub
xor
xorb
outsb
xchg
mov
fisubrs
mov
pop
lahf
push
xor
xor
or
pusha
insb
push
pop
lret
pop
mov
dec
cs
call
es
stos
jge
lea
sub
adc
sbb
mov
dec
cmp
mov
cs
push
fst
in
cmp
pop
adc
cltd
scas
and
out
mov
adc
sub
adc
arpl
push
mov
std
inc
and
dec
test
mov
mov
jne
xor
mov
imul
scas
or
dec
rcrl
or
inc
iret
mov
cs
or
or
scas
adc
pop
dec
jmp
sahf
xchg
or
inc
mov
aas
jge
jp
xchg
in
mov
mov
gs
cmpsl
or
shl
cmp
outsb
leave
inc
push
ret
out
cli
adc
inc
mov
xchg
jo
test
int3
sbb
inc
dec
xchg
push
xchg
xor
push
add
mov
sub
mov
es
inc
inc
push
test
mov
or
jmp
dec
aaa
dec
iret
std
inc
jle
inc
mov
xchg
xchg
lret
or
loope
mov
or
scas
repz
negb
xorl
inc
push
mov
push
jno
cltd
xor
in
test
sub
outsb
jle
mov
sahf
inc
es
sbb
mov
jp
lahf
ret
sub
nop
hlt
ljmp
imul
daa
mov
jge
push
push
push
mov
push
es
cmp
push
sub
dec
cmp
mov
pop
repnz
add
mov
or
xor
cmp
out
or
insl
push
lods
filds
iret
push
sub
test
pop
out
mov
jo
jne
out
scas
or
arpl
pop
jle
and
aad
div
movsb
and
pop
jg
fildl
test
mov
sub
inc
ret
call
pop
jnp
mov
int3
cmpb
inc
jbe
shrb
jo
ss
cmp
sub
int
mov
test
loop
jno
pop
inc
push
jns
bound
in
push
lret
mov
lahf
ja
fwait
cmp
sqrtps
repz
repz
pop
xorb
out
or
xor
mov
sbb
mov
xor
xchg
and
rcrb
dec
mov
jle
inc
jb
pop
lcall
pop
push
pop
mov
push
and
stos
fldenv
repnz
sub
add
fsubs
cmp
sbb
inc
and
and
adc
cmp
mov
or
daa
sahf
mov
stos
sahf
stos
mov
add
add
cmp
cmc
insl
rolb
push
or
js
and
and
add
inc
push
fwait
add
ljmp
adc
in
fs
mov
push
adc
ficoml
pop
mov
or
sbbb
mov
cld
jno
shlb
jo
mov
mov
xchg
pop
sahf
inc
xchg
imul
sub
dec
into
mov
mov
mov
scas
ss
mov
or
mov
lret
mov
aaa
cmpsb
xor
clc
lods
jae
jp
andb
add
and
insl
stos
imul
aas
add
outsl
mov
andb
sti
xchg
add
pop
or
les
out
dec
dec
aam
jmp
arpl
stos
xor
std
sub
pusha
add
cltd
add
inc
fnstsw
or
push
push
std
pop
icebp
inc
dec
pop
data16
fisubl
jnp
mov
cmp
dec
jbe
loopne
mov
pop
jle
rclb
pop
in
inc
jg
out
or
dec
pop
mov
xchg
jg
cmp
inc
aas
js
mov
lock
xchg
mov
jne
stos
adc
xchg
and
inc
or
bound
arpl
loopne
dec
fwait
cmc
test
pop
mov
push
jb
xchg
jno
dec
iret
mov
xchg
xchg
mov
std
clc
shll
jo
dec
xor
add
push
inc
into
and
out
adc
push
mov
lret
add
movsl
andb
jmp
in
pusha
sarl
and
or
stos
jmp
ret
add
xor
mov
daa
mov
sub
je
adc
mov
call
fiadds
pop
and
ss
cs
dec
mov
lock
aad
add
xor
jecxz
adc
aad
xchg
repnz
aam
mov
fmulp
push
gs
adc
popl
jb
ret
sbb
adc
loopne
sbb
aaa
std
imul
loope
nop
inc
mov
movsl
mov
push
test
hlt
in
inc
xor
xlat
scas
loope
lods
pop
adc
stos
add
xlat
pop
mov
cmpsl
adc
scas
outsl
sbb
ret
push
xchg
jmp
outsl
adc
pop
fwait
pop
pop
nop
xchg
leave
jmp
xchg
adc
inc
fs
sar
adc
push
cmpsl
mov
adc
popf
or
pop
gs
outsb
fbstp
add
mov
mov
jbe
add
push
adc
cmp
mov
cmpsl
mov
stos
mov
shrb
insl
and
or
inc
inc
lahf
enter
mov
outsb
jno
sub
data16
in
daa
inc
sub
mov
aaa
test
stos
sub
mov
insl
pop
mov
in
out
out
cmp
push
mov
fists
adc
sbb
inc
scas
xchg
daa
push
fsts
mov
outsl
push
outsl
xor
xlat
pushf
sbb
sub
jl
test
outsl
xorb
fidivl
or
inc
repz
cli
mov
in
push
sarb
ds
adc
test
inc
xor
push
xor
int3
popa
adc
gs
cmpsl
fbld
faddl
push
andb
cld
push
arpl
dec
stc
out
dec
shlb
push
cltd
mov
and
test
dec
and
aaa
add
add
imull
fildl
pop
fdiv
mov
rclb
repz
mov
inc
mov
push
push
add
mov
ja
sub
adc
adc
mov
jns
push
jne
fsubrl
jae
lcall
mov
into
cmp
mov
jmp
add
test
jb
push
cmpsb
sbbl
ret
addr16
jb
fmul
push
iret
inc
inc
outsb
stos
or
mov
or
pop
repz
lock
adc
aad
mov
fcom
or
les
mov
inc
cmpsb
ret
pop
mov
sbbb
xchg
xchg
add
negb
popa
mov
js
rorl
inc
int
push
jbe
cwtl
xor
stc
pop
insl
push
sub
cmp
inc
cltd
popa
jb
fwait
sarl
test
xlat
push
inc
and
add
jb
in
dec
jmp
mov
push
gs
add
jnp
pop
sbbb
mov
xlat
xchg
push
mov
mov
and
mov
push
sbb
cmp
in
mov
repnz
push
cmp
ja
shlb
mov
jo
dec
push
xorl
xor
mov
xlat
arpl
dec
or
bound
mov
mov
adc
jo
divl
pop
xchg
insb
push
mov
insl
jg
push
insb
fists
xchg
repnz
lds
cmp
pop
mov
bound
push
adc
ds
sub
push
and
xor
inc
sti
leave
dec
ror
out
cs
xchg
mov
xchg
jns
inc
and
divl
xchg
leave
push
scas
int3
jno
ret
sahf
inc
leave
adc
xchg
add
sub
cmpsb
sbbb
dec
push
mov
je,pn
pop
mov
mov
add
xor
add
mov
dec
js
inc
es
mov
sub
int3
lret
dec
xchg
inc
dec
movsb
scas
adc
ficomps
or
lods
mov
inc
jecxz
dec
test
xchg
cmpsb
mov
repnz
outsl
test
push
sbb
inc
loope
or
add
xor
stos
cs
ret
mov
jo
jo
or
jbe
scas
lock
jmp
adc
or
into
jns
sti
xor
pop
pop
cmpb
lds
stos
pop
and
sbb
mov
ss
and
inc
rorl
pop
mov
xchg
xchg
inc
inc
cmc
faddl
cmp
xchg
leave
lods
mov
or
sahf
cmpsl
fdivs
test
shrl
fs
daa
ds
jo
loop
cld
mov
jl
mov
push
sub
and
sbb
xor
leave
inc
in
dec
dec
das
xchg
ret
mov
push
xchg
loope
sub
pop
les
jmp
push
dec
pop
cli
pop
notb
xor
pushf
pop
xchg
loope
sub
fcomps
lods
fdivrl
dec
add
push
and
out
adc
jmp
and
in
lock
jecxz
ja
inc
hlt
shll
shr
dec
test
stc
adc
fdivs
jmp
mov
lret
sub
insl
jl
push
aaa
cwtl
cwtl
and
cmp
cmpsb
xorl
lcall
lea
xchg
mov
cs
jl
push
and
push
ds
lcall
inc
es
push
das
ds
or
les
cmc
jns
adc
arpl
fs
xor
adc
das
rclb
je
pushl
insl
or
xchg
lret
jmp
fwait
jg
iret
loop
mov
sbb
lods
cmpsb
movsb
xchg
lods
out
adc
fmuls
cltd
fisubl
daa
sub
sub
add
test
gs
or
ja
mul
loope
jmp
dec
pop
enter
lods
and
add
cltd
pop
aaa
scas
cmpsl
xor
inc
add
pop
inc
xchg
les
mov
mov
or
incl
loopne
push
push
adc
gs
popf
and
or
sbb
out
xor
inc
imul
add
or
adc
incl
es
mov
test
jbe
bound
pop
shr
lods
adc
inc
stc
push
sbb
push
lahf
popa
mov
jae
adc
icebp
mov
mov
scas
xor
dec
jecxz
adcl
xlat
xlat
cli
call
dec
mov
adc
std
add
das
test
mov
movsb
xchg
dec
add
imul
sar
dec
jnp
lret
das
das
mov
sbb
pop
mov
lret
sbb
fdivs
push
es
inc
cmp
push
out
aam
push
and
subb
test
mov
jmp
jecxz
das
jnp
inc
jnp
push
divb
adcb
movsb
je
xchg
shlb
mov
ret
pop
mov
and
out
mov
xchg
mov
cs
clc
fistps
testb
mov
sub
pop
sbb
repz
xchg
bound
or
inc
push
mov
mov
repz
popa
xchg
std
lds
sub
jp
faddl
lret
repz
test
mov
ret
sarl
and
fs
lret
sub
nop
fcmovne
test
jp
jne
dec
in
or
bnd
sbbb
outsl
cmp
aaa
call
decl
pop
fstpl
mov
xor
js
test
adc
data16
pop
jno
jl
ret
xchg
inc
jo
stc
dec
mov
xchg
imulb
mov
adc
mov
mov
or
adc
in
stc
sahf
add
mov
inc
scas
cmp
scas
es
ljmp
mov
pop
out
jae
popa
les
pop
shlb
mov
jo
hlt
std
jl
jb
test
das
pusha
pop
scas
jnp
pmulhuw
ret
and
xchg
pop
pop
mov
jnp
jp
mov
push
mov
dec
push
add
xor
in
mov
adcl
insb
xor
pop
mov
cmp
cltd
mov
insl
xchg
stos
pop
add
daa
sub
cli
ja
mov
or
inc
xchg
call
mov
xchg
add
mov
movsb
fisubs
arpl
loop
int
mov
cmp
pop
movsl
lods
rorl
mov
cmpsl
pop
adc
ret
popa
lds
inc
mov
nop
xor
push
dec
popa
push
push
xchg
imul
sub
dec
lcall
stos
inc
sub
push
mov
pop
adc
cltd
data16
loop
into
in
jno
mov
sub
nop
xchg
out
popa
sbb
xchg
sub
fisubrl
jmp
loopne
pop
outsl
orb
sti
fistl
shlb
push
adc
outsl
adc
shr
dec
test
stos
sbb
add
jb
inc
outsl
add
jp
out
jp
adc
aas
popa
jg
or
adc
mov
cli
xchg
out
push
mov
ret
filds
cwtl
lods
sbb
mov
movsl
push
push
cltd
addl
sbbl
xchg
sbb
jns
or
stos
jae
lret
xorb
push
dec
inc
out
jae
sarb
call
outsb
iret
mov
cmp
and
dec
cmp
push
and
jo
push
cwtl
dec
popf
lock
cmp
xchg
test
xor
sahf
mov
out
pop
jbe
addr16
lret
das
pop
adc
mov
cld
or
xor
push
mov
jp
mov
repnz
xchg
cmp
sbb
dec
xchg
or
ja
cmp
dec
jge
cmp
dec
mov
test
xchg
movsb
xlat
mov
mov
mov
push
orb
fmull
xor
xor
inc
adc
add
nopl
cld
mov
sahf
dec
shrb
pop
test
sub
test
or
inc
aam
jl
sbb
xchg
enter
loop
push
xor
rcrl
out
mov
icebp
cmovnp
movsl
data16
dec
lahf
loopne
xchg
or
sbb
jp
sbb
fildl
stos
jno
lods
arpl
dec
ret
iret
pop
add
scas
cmc
mull
fs
outsl
jle
leave
and
xchg
data16
rolb
xchg
cmpsb
pop
sbb
jno
ret
jmp
cltd
xor
scas
fnstenv
inc
mov
or
cmc
popf
xor
iret
lahf
jne
stos
es
ret
xchg
ljmp
pusha
movsl
out
das
pop
xorb
dec
xchg
cmc
cmc
xchg
faddl
sub
push
xlat
and
das
es
adc
movsb
lock
in
cmp
jns
cmpsl
add
enter
leave
dec
cltd
subl
add
and
adc
cmp
loope
mov
xchg
fwait
iret
rcrl
sub
aas
mov
sbb
cmpsl
dec
push
std
sub
push
mov
jmp
mov
add
sarl
imul
xchg
push
mov
adc
cwtl
cmc
sbb
jmp
outsl
push
jmp
into
ljmp
xchg
xlat
popf
fildl
sbb
ret
aam
test
mov
mov
loopne
repz
xchg
dec
das
pusha
mov
jl
iret
ss
test
fisttpl
jl
gs
enter
mov
popa
test
loopne
movnti
push
xchg
push
lcall
jp
out
pop
sub
cmp
sub
xor
adc
xor
xchg
jbe
pop
sub
mov
js
or
xorb
cmpsl
and
aaa
pop
xchg
add
shrl
cmp
xor
xchg
sub
out
loop
aas
and
mov
and
xchg
je
add
outsb
push
inc
push
insb
jge
ret
xchg
test
mov
sub
nop
outsl
lret
dec
sbb
cmp
jg
cs
push
cmc
pop
dec
xchg
aam
sahf
mov
mov
repnz
mov
daa
mov
push
push
mov
out
lcall
pop
sbb
fwait
jp
mov
dec
icebp
lods
sub
aad
mov
les
pushl
stos
inc
xchg
pop
jb
xor
mov
dec
fwait
orl
sahf
adc
push
xchg
xor
dec
loope
das
js
ret
add
ljmp
scas
stos
cmp
pop
notb
testl
inc
lock
xor
mov
cmp
xchg
arpl
fs
sbb
sti
fldenv
cmp
sub
inc
in
scas
dec
pop
jecxz
les
cmp
or
add
cmpsb
mov
into
ljmp
sbb
cwtl
inc
test
sbb
orb
fdivl
lock
and
ret
adc
mov
out
mov
test
popf
aad
movsl
mov
addl
je
call
mov
push
insb
cmpsb
pop
sub
xlat
push
aad
sub
add
std
mov
in
imul
sub
mov
dec
dec
mov
jge
in
sub
pop
jae
add
push
add
mov
sub
rcrl
mov
and
xor
popa
sbb
mov
cmc
es
outsb
leave
ljmp
xchg
scas
pop
inc
sub
pop
mov
scas
sbb
dec
xchg
sub
jmp
xchg
dec
or
push
and
pop
aaa
imul
nop
or
imul
adc
je
xchg
cmp
dec
jle
push
addr16
lahf
cmp
in
push
sub
adc
bound
jle
and
xor
mov
insb
or
sub
pushf
lods
rol
stos
mov
dec
mov
pop
cmp
add
cmp
mov
and
mov
pop
jg
add
sbb
cs
subb
cmc
cli
movsl
outsl
mov
xor
or
lock
in
cmp
stc
xchg
lret
xchg
mov
xchg
lods
call
fdivrs
xchg
scas
jbe
pop
lods
test
add
repz
sub
lock
jge
adc
add
shrb
ja
in
incl
xchg
pusha
out
ret
push
cmp
pop
cmpsl
mov
fs
inc
cmpsb
addl
fwait
xlat
sub
or
xlat
movl
std
fwait
add
sti
dec
les
out
jae
in
xchg
add
inc
andl
pop
dec
es
leave
out
jge
mov
cwtl
stos
bound
xchg
jge
inc
lods
negb
jbe
inc
into
pop
mov
xor
idivl
les
mov
repnz
mov
das
push
adc
daa
push
loop
xor
test
mov
testb
lods
pop
cwtl
jnp
push
mov
enter
push
mov
pop
mov
inc
loopne
jns
pusha
add
shll
cs
push
fidivrs
dec
push
dec
lret
arpl
mov
sub
test
and
mov
or
ja
ljmp
sub
mov
outsb
negb
fmull
add
mov
pushl
add
ret
arpl
add
sti
sbb
push
pop
cmpsb
imul
push
sub
inc
pop
and
mov
iret
lcall
insl
push
add
pop
dec
add
pop
and
fistpll
pushf
daa
xlat
mov
lcall
loope
les
mov
mov
sub
push
popa
push
adc
add
mov
sub
sarl
mov
jno
cmp
adc
dec
dec
iret
jle
shll
xchg
mov
inc
data16
sti
sbb
sub
cmc
stos
stc
jbe
test
mov
adc
divb
cltd
jne
add
push
jp
xchg
pop
mov
mov
outsb
test
fstps
cmp
lods
cmp
lret
sub
mov
or
and
stos
cmpb
repnz
ss
sti
and
cs
push
mov
or
iret
addr16
aas
out
pop
push
jb
insb
fs
xor
enter
or
cmpsb
pushf
mov
mov
mov
orb
mov
mov
push
pop
jbe
push
pop
or
insl
inc
popa
push
pop
dec
or
out
loop
mov
mov
add
pop
mov
mov
leave
jp
js
cltd
lock
xchg
addr16
pop
lds
cli
cmp
fnstsw
dec
leave
loop
mov
lock
nop
imul
dec
movsl
out
cwtl
cmpl
mov
out
enter
push
mov
ret
ja
mov
jo
mov
mov
fwait
or
aad
repnz
pop
push
mov
jbe
in
add
cmp
ret
sbb
lret
test
xor
inc
cmpsl
mov
scas
outsb
cmpsb
mov
mov
fdivl
sub
hlt
xor
push
sahf
scas
shl
inc
ljmp
mov
adc
jle
mov
cmp
push
fildl
imul
xchg
lock
jg
cmp
orb
sti
test
mov
cltd
fnstcw
scas
cmpsb
inc
xor
in
xchg
push
pop
mov
fnstcw
dec
les
mov
lods
or
inc
arpl
cmpsl
mov
loop
or
mov
inc
adc
pusha
jecxz
sbb
insb
or
sbb
sub
xor
mov
sub
mov
loop
addr16
gs
call
jmp
movsb
out
xchg
push
icebp
adc
mov
jp
xor
pop
push
in
pushf
cmp
repnz
add
xchg
jae
push
das
adc
jbe
xor
in
sbb
and
lods
rcr
mull
sti
cmp
cmp
mov
pop
jle
cmp
pop
sub
mov
lock
cmpsl
push
out
sbb
jae
mov
outsb
rorl
std
cltd
or
push
xor
adc
sub
or
add
shlb
mov
rcl
xchg
mov
push
in
push
inc
mov
push
sub
int3
popa
hlt
icebp
sbb
adc
adc
ljmp
hlt
dec
xor
sahf
mov
xchg
lods
scas
xchg
insb
outsl
dec
push
inc
xlat
int
push
ret
ss
popa
mov
mov
shrb
pop
xor
cmp
and
lock
mov
ret
jle
in
popa
fwait
std
in
sbb
cwtl
sub
ss
sub
dec
cs
xchg
out
pop
fs
xor
js
js
cmpsl
pavgb
fsubrp
movsb
mov
sub
and
pop
test
sbb
mov
sbb
cld
cld
test
imul
dec
js
xor
add
repnz
mov
lods
push
push
lea
fnsave
jns
and
lea
lods
sbb
insl
movsb
push
cmovo
shrb
push
and
mov
jb
mov
aaa
mov
sub
sbb
shlb
pop
cmp
mov
das
idivl
push
nop
repnz
fs
insl
mov
and
xchg
enter
push
xlat
or
pop
sbb
mov
dec
inc
mov
adc
xorb
lret
sti
je
stos
gs
aas
inc
mov
jne
aas
xchg
inc
dec
mov
in
lds
call
push
push
lret
ss
insl
aas
dec
and
dec
lret
inc
sub
stc
ret
sub
pop
stos
nop
or
stos
lds
imul
push
lock
push
out
scas
sbb
clc
push
in
lds
test
xor
cmp
mov
jo
add
and
and
dec
or
adc
or
xor
sbb
xor
xorl
outsl
imul
push
sbb
sub
mov
adc
ja
jo
sub
lea
ds
andb
jnp
sub
int
in
arpl
inc
pusha
out
sbb
lahf
pop
and
ficoms
cli
and
mov
vaddpd
dec
sti
push
lea
ror
in
fisttpll
xor
sbb
push
insl
adc
sub
add
adc
repz
jno
inc
ljmp
add
sub
mov
xchg
std
xor
ds
arpl
mov
push
inc
adc
rcrl
xchg
sahf
repz
sti
mov
cmp
ficomps
jo
pusha
cmpb
push
cmpsb
sub
imul
push
aad
xchg
xor
lods
les
push
rclb
xor
dec
lahf
aad
push
or
and
cwtl
adc
in
push
xor
sbb
mov
mov
movb
mov
imul
rorb
adc
mov
dec
sbb
adc
mov
add
and
mov
test
xor
jecxz
lahf
xchg
lahf
mov
data16
out
ret
push
cwtl
or
scas
sub
in
aas
fnsave
pop
inc
lock
mov
popf
mov
pushf
jle
jbe
mov
fldenv
aam
bound
jecxz
lahf
mov
aaa
xchg
fnstcw
mov
mov
mov
pop
mov
sub
push
inc
sti
lods
sbb
xchg
fcmovbe
add
or
cmp
inc
mov
nop
or
mov
pop
imul
stos
stos
xor
lea
lea
mov
push
repnz
outsb
jge
sbb
xor
leave
stos
mov
fildl
mov
push
adc
and
aam
push
jno
mov
cmc
sbb
xchg
test
pop
cs
dec
jle
in
popf
dec
jae
pop
sbb
pop
sahf
outsl
cli
jne
dec
inc
jg
outsl
rclb
out
repz
cmp
insl
cmp
sbb
scas
push
lahf
xor
adc
pxor
lods
ja
push
add
mov
outsb
int3
push
movsb
cmp
sbb
pushf
outsl
dec
inc
cmp
dec
dec
ret
loopne
and
pop
inc
scas
arpl
xchg
sub
dec
mov
iret
ja
or
mov
mov
call
bound
mov
lret
push
sbb
push
dec
push
pop
mov
jl
xchg
scas
jmp
xor
pop
adcl
jb
jo
fimuls
ds
and
insb
call
mov
sbb
data16
inc
es
fnstenv
movl
mov
aaa
movb
mov
mov
mov
mov
outsb
cld
mov
xchg
popa
hlt
lds
stos
xchg
mov
test
into
insb
xchg
aaa
fcmovne
imul
aad
bound
push
and
adc
fidivrl
daa
scas
pop
ljmp
sbb
xor
ljmp
pop
mov
xchg
xchg
std
xchg
xor
sbb
ror
das
or
push
hlt
jbe
jmp
aad
fs
lcall
hlt
out
std
mov
in
cmp
pop
mov
cltd
mov
repz
into
jns
xchg
xor
les
ja
xchg
pop
mov
lea
iret
cmpsb
mov
push
or
lods
pop
fnstenv
mov
cmc
in
and
push
test
cli
shrl
repz
push
aas
mov
dec
pop
jg
in
hlt
arpl
mov
adc
xchg
dec
and
imul
ds
imul
dec
pop
sbb
filds
imul
pop
jle
insb
add
maxps
inc
mov
xchg
pop
push
dec
push
shrb
repnz
add
push
rolb
lea
xchg
and
das
dec
fdiv
cmp
push
add
sbb
mov
adc
lret
pop
test
movsl
ja
nop
aam
shrl
pop
sti
imul
cwtl
out
mov
seta
jno
ss
js
icebp
lds
shrl
sti
xchg
mov
and
jg
je
stc
pop
movsl
loop
js
xor
pop
lret
icebp
shll
xchg
jbe
push
or
hlt
mov
mov
jae
icebp
in
xor
mov
mov
cmpsl
jle
ja
fsubs
cmp
test
je
sarb
and
sbb
ljmp
dec
adc
add
mov
jle
nop
lret
pushf
jecxz
jl
xchg
add
inc
call
fisubl
sahf
loope
mov
push
lret
xor
fwait
nop
pop
add
stc
push
add
or
mov
jno
or
mov
pop
addr16
pop
sub
int3
ret
pusha
and
jae
shr
cmp
hlt
jmp
cmc
pop
pusha
cmpsb
dec
popa
js
adc
add
mull
cmpb
insl
popa
xchg
push
incb
pop
push
sahf
inc
das
xor
add
xchg
or
out
xor
movsb
inc
shl
fdivr
repnz
mov
or
push
notb
add
scas
in
pop
in
pop
xchg
cmp
adc
in
sub
test
shll
push
seta
addr16
inc
in
out
jl
add
sub
push
lock
push
out
xchg
and
addr16
adc
push
insl
ds
fdivs
push
dec
cmc
push
inc
int
push
aaa
jge
inc
rcrb
outsb
xor
add
daa
insb
sub
push
fcmovbe
in
inc
je,pt
push
les
aas
mov
rolb
jp
popa
stos
into
and
out
shrl
int
mov
jno
enter
idivl
xlat
sbb
push
mov
adc
push
inc
mov
clc
clc
cmp
testl
dec
mov
ret
mov
cmp
push
sbb
jmp
mov
and
test
data16
push
pop
aaa
test
and
pusha
fidivrl
mov
mov
shrb
ret
xor
lods
dec
xchg
sbb
mov
jmp
fisttpl
xor
mov
sarb
imul
cwtl
xlat
push
cs
dec
cmpsb
aam
fists
mov
jecxz
popa
ret
cmp
sbb
cmp
sub
addr16
or
dec
xchg
mov
out
in
sub
clc
ss
push
cmp
mov
insl
or
mov
mov
inc
xchg
jecxz
shl
lea
cwtl
roll
xchg
in
and
jp
into
sub
pusha
cmp
xor
add
lcall
aas
mov
xchg
mov
ret
outsb
xlat
fucomip
push
pop
xchg
inc
inc
scas
lods
rclb
cmpsl
es
mov
jae
in
mov
rorl
mov
adc
repnz
incb
jl
push
mov
fs
out
jmp
outsl
mov
xor
lahf
dec
cmp
inc
clc
dec
inc
rcrb
ret
push
or
data16
pop
mov
in
sbb
orb
mov
dec
shrb
popa
dec
shr
xchg
cmpsb
loope
idivb
jge
and
xor
or
bound
mov
sub
ljmp
orl
aas
pop
shlb
pusha
mov
push
in
nop
lret
subb
add
or
into
into
xlat
lock
or
mov
into
test
adc
mov
jmp
rclb
cmpsb
popf
std
or
xchg
sbb
adc
inc
pop
js
xchg
ds
shlb
ret
sub
iret
std
inc
in
pop
test
mov
push
adc
cwtl
jb
pop
sub
mov
sub
shl
push
xor
mov
xchg
jnp
push
pop
outsl
test
mov
outsl
mov
test
int
lods
rcll
dec
push
and
js
loop
fstpt
dec
push
or
push
adc
rcr
cmp
or
movsb
rcl
jns
dec
test
or
and
mov
ss
pushf
cltd
add
imul
add
in
testl
xchg
sub
test
dec
fnsave
adc
xor
and
xchg
xchg
pop
jl
dec
jp
filds
push
loope
arpl
scas
subl
lods
daa
sarb
lahf
xlat
add
bound
ret
cld
push
add
jg
lret
jl,pn
add
mov
iret
mov
mull
push
cmp
push
jbe
test
xorl
jbe
fiaddl
sbb
mov
scas
fs
pop
ret
mov
dec
push
xchg
daa
aaa
xchg
mov
and
push
jbe
sahf
push
pop
imul
inc
das
fsubrs
sub
adc
push
iret
imul
or
in
shr
cld
dec
xchg
jge
jecxz
inc
imul
xor
adc
push
dec
ja
fdivr
lcall
lods
inc
call
shl
xor
and
test
pop
and
mov
mov
pop
repnz
repnz
mov
movl
add
cmp
sahf
sub
sub
mov
ss
push
cmpsl
push
mov
clc
call
inc
jle
add
dec
cmp
and
jnp
push
mov
adcb
sti
cmp
rcll
fdivs
cmp
std
cmp
jae
push
push
xor
sub
jo
or
lcall
sub
lods
mov
xchg
aad
and
pop
fistpl
sbb
int3
pop
add
call
ja
popf
fists
loope
nopl
subl
adc
adc
inc
rorb
rclb
add
sbb
mov
dec
and
cmp
jg
out
cmpsb
fiaddl
not
insb
mov
es
cmp
xchg
sahf
rclb
sub
ret
sbb
dec
add
arpl
pusha
ljmp
dec
adc
pop
cmp
fdivs
inc
and
xchg
dec
push
jecxz
test
pop
fistl
mov
mov
push
add
push
out
popa
xchg
ja
or
inc
cmp
mov
clc
xor
sti
imul
js
ljmp
sub
insl
and
es
ret
sub
call
out
jo
and
and
test
pop
sbb
xchg
adc
mov
jmp
int
je
and
out
mov
mov
lret
js
push
xchg
mov
pop
jle
xchg
dec
jne
jb
push
call
xor
fwait
xchg
ret
sub
lahf
adc
cwtl
in
in
or
incl
shll
movsb
mov
add
outsb
dec
lods
push
in
sub
mov
sub
pop
mov
xchg
stos
data16
aas
xchg
fwait
aad
fists
insb
loopne
imul
ljmp
cmp
adc
and
mov
outsl
das
jmp
dec
mov
sbb
mov
xchg
lods
jge
popl
xchg
inc
cmc
movsl
adc
and
aam
cs
jns
mov
lods
adc
dec
ljmp
cli
mov
adc
push
mov
ret
mov
inc
xchg
xor
mov
jmp
fiaddl
es
push
pop
push
pop
outsb
mov
mov
fcomip
jo
das
xor
inc
adc
repnz
push
mov
or
rcll
clc
imul
pop
mull
jp
sbb
mov
test
jle
sub
xchg
in
sub
adc
pop
xchg
ljmp
out
aas
pop
cltd
or
std
jo
xor
xor
add
dec
mov
or
and
scas
xlat
lret
cmp
add
aam
lcall
into
clc
cmpsb
cld
cmp
fmuls
test
and
xor
pop
je
push
fsts
or
js
mov
fsubrs
pop
cmp
xor
test
clc
adc
and
push
dec
imul
inc
jmp
js
sbb
cltd
push
fcomps
pop
push
fisttpl
testl
mov
insl
jae
out
and
xchg
dec
outsl
or
in
or
call
dec
cwtl
mov
cmp
cmp
fs
pop
cmc
or
jns
cmc
sbbb
iret
sbb
movsl
hlt
test
ficompl
hlt
rorb
adc
subb
mov
xchg
insl
and
push
scas
inc
sub
inc
sbb
call
ret
jno
imul
mov
stos
mov
test
dec
daa
dec
cs
int3
push
jno
xchg
das
pop
mov
adc
jb
pop
push
test
in
sub
sub
inc
ret
lock
cwtl
xchg
lcall
test
cmpsl
cmpsl
cld
pop
mov
xor
rcl
popf
inc
sbb
je
dec
push
push
cmpsb
popf
call
mov
loope
shll
ret
scas
sbb
pop
jns
stos
shrl
repz
loop
sub
push
jae
inc
mov
lods
icebp
pop
inc
mov
jno
clc
popf
pop
cltd
daa
jo
xor
mov
jge
mov
in
sub
fistpll
out
sub
gs
andb
ficompl
jp
push
xchg
xor
bound
iret
aas
and
aaa
cmpl
dec
loopne
cmp
out
push
test
movsb
ret
sbb
outsb
stos
xchg
subb
test
push
cmp
call
push
aaa
or
mov
mov
pop
xor
out
mov
mov
aad
and
es
rcrb
sti
stos
pop
icebp
xchg
and
imul
push
pop
sub
pusha
cli
ret
mov
scas
and
adc
xchg
xchg
xchg
cs
fadds
cltd
andb
rcrb
cltd
mov
fsubs
mov
dec
in
add
sub
movsl
add
cmpsb
mov
push
add
dec
repz
mov
mov
sbb
in
pop
fisttpl
in
jae
sub
xchg
adc
es
aad
mov
push
push
jle
mov
mov
jle
xor
outsb
and
lods
loope
stos
movsb
lret
pop
sbb
insl
out
ljmp
sbb
mov
push
cmp
push
repz
jle
mov
xor
mov
call
cli
in
jnp
nop
sub
xchg
sub
icebp
mov
xor
dec
lret
cmp
xchg
sbb
fiadds
dec
lcall
sub
jbe
fs
and
loop
add
add
mov
push
cld
lret
fiaddl
into
or
push
cli
enter
inc
inc
sbb
loope
sahf
leave
sbb
pushl
xchg
mov
sub
fs
shlb
dec
mov
adc
jp
adc
rcrb
mov
push
vmovaps
cmp
popf
lret
insb
scas
leave
or
ljmp
lods
mov
add
lcall
movsw
xor
and
mov
xchg
sbb
xchg
aad
outsl
xchg
leave
lcall
testb
cmpsl
pop
inc
sbb
mov
mov
pop
inc
in
push
ja
mov
int
jg
jmp
lods
inc
or
aaa
xor
stos
ret
movsb
lret
test
or
fs
das
sti
mov
fxch
mov
mov
loop
mov
outsb
push
pop
aaa
roll
mov
cli
mov
ret
scas
push
lea
and
pop
leave
adc
jb
dec
push
mov
js
jo
mov
and
adc
xor
sub
cmpsl
rcl
jo
mov
jbe
push
dec
ja
add
shr
mov
dec
xchg
mov
ja
jnp
xchg
fisubs
xchg
je
in
sbb
add
inc
pop
pop
daa
lcall
adc
gs
add
xor
pop
cmp
pslld
mov
and
daa
or
lahf
pop
popf
mov
push
adcb
push
or
in
add
pop
ja
jp
xchg
or
ja
mov
mov
and
cmp
loope
adc
pop
sbb
sbb
sbb
pop
lahf
cmp
mov
mov
push
les
cmp
nop
dec
stos
fildl
jns
pop
or
inc
ds
mov
lahf
loope
sarw
dec
pusha
leave
or
fldl2e
rorb
cmp
xor
mov
mov
add
dec
xor
push
into
push
stos
add
sbb
lock
dec
or
xor
add
xrelease
stc
cs
inc
cmp
ret
sarl
mov
sbb
and
inc
inc
dec
pop
fcmovne
ror
cmp
sbb
ja
rclb
xor
stos
push
adc
xchg
out
cltd
lods
nop
movsb
repnz
ficompl
xchg
pop
mov
cmpsl
movsl
pop
movl
cmp
lods
jbe
mov
mov
xchg
mov
lds
pop
mov
xor
adc
or
imul
lds
dec
mov
test
mov
lret
or
fidivs
pop
stc
pusha
pop
inc
lods
and
jnp
xchg
lret
xor
jmp
jo
ret
xchg
sbbb
cmp
pop
xchg
rcr
or
xor
inc
or
in
mov
in
xchg
push
jmp
sbb
jnp
aaa
data16
inc
dec
aad
pop
adc
add
insb
adc
incb
mov
and
push
push
dec
std
adc
or
add
sbb
inc
jbe
sub
cli
idivb
and
das
gs
mov
les
inc
jae
add
roll
ja
sbb
sahf
mov
and
sti
cmp
aam
xchg
pushf
pshufw
pop
in
out
or
fsubrl
pop
stos
add
insl
arpl
xchg
add
or
movsl
icebp
das
mov
xchg
inc
cmpsb
bound
insb
leave
jmp
push
mov
jns
inc
push
push
add
movsb
jne
test
mov
shl
adc
int
loopne
lea
sbb
mov
push
mov
pop
test
aam
xchg
sahf
or
sub
inc
out
lods
pop
adc
cmp
mov
repz
frstor
in
xchg
mov
mov
in
cmp
pop
xor
imul
jl
cmp
stos
push
xchg
dec
jmp
adc
emms
push
sbb
push
adc
pop
popa
dec
dec
mov
pop
pop
test
js
fbld
jnp
mov
mov
dec
ret
cwtl
fistpll
adc
icebp
add
insl
mov
and
lret
jmp
inc
mov
fbstp
into
roll
mov
dec
mov
and
aam
shlb
repz
pop
cld
mov
lods
cmc
cmpsb
jmp
loop
add
std
pop
repnz
dec
mov
into
fiaddl
inc
lea
mov
fucomp
pop
iret
repz
js
sarl
cmp
inc
fsub
inc
xor
je
mov
dec
jne
int3
fs
fiaddl
rolb
arpl
mov
mov
pusha
sahf
xor
cmp
mov
sub
adc
cltd
pop
es
xor
mov
lods
lds
inc
lods
inc
les
sbb
and
mov
or
iret
or
xor
sub
or
inc
lcall
mov
xor
stos
mov
xorb
insb
cs
dec
jno
icebp
mov
leave
repnz
xchg
xor
int
cwtl
push
sub
sub
adc
dec
or
into
pop
int
inc
lock
movsl
add
cltd
stos
movsb
or
icebp
inc
orb
jecxz
scas
aad
adc
sbb
adc
jno
popf
pop
and
jge
imul
mov
add
xor
nop
js
ds
outsb
xchg
in
pop
nop
pop
mov
movsl
aaa
cmc
cli
and
jmp
pop
cmp
pushf
aad
fs
mov
mov
negb
and
pop
cmpsb
fmull
es
mov
sbb
mov
rol
imul
sbb
jp
jbe
pusha
dec
jae
sbb
out
cmp
in
adc
test
out
std
adc
xchg
pop
mov
jbe
mov
stc
inc
jge
sbb
pop
icebp
pop
xchg
cmp
xchg
cwtl
andb
xor
aad
ss
sbb
mov
out
in
jo
fisttpl
pusha
xlat
pop
sbb
imul
xchg
inc
movb
mov
mov
lahf
jmp
cwtl
fadds
test
enter
sub
jae
xchg
fwait
xor
push
jae
or
or
and
push
lds
mov
cld
je
dec
cld
ljmp
nop
mov
enter
cmp
loopne
xchg
jb
loope
pop
push
clc
adcb
iret
lahf
and
cmp
mov
jecxz
outsl
aaa
add
sub
jg
mov
aam
mov
popa
mov
aam
mov
xchg
movsl
stos
out
out
scas
popa
inc
push
mov
lds
fimuls
pop
andl
or
dec
rcrl
mov
lock
aad
aas
pop
cmp
rcr
repz
or
sbb
mov
hlt
adcb
addr16
fldt
inc
mov
dec
sbb
lock
inc
js
in
subl
and
dec
xor
cmpsl
sbb
aas
mov
arpl
aaa
lods
dec
cmp
mov
xchg
shlb
inc
jns
lahf
cmp
push
sub
dec
push
mov
es
mov
xchg
dec
push
ror
mov
cli
ds
imul
push
cmc
jge
and
insl
push
mov
push
popa
dec
ret
stc
xchg
add
sbb
lcall
jl
add
sub
and
pop
sti
inc
test
fs
imul
sbb
cmp
xchg
jbe
jmp
xchg
outsb
in
sub
xor
xchg
sbbl
gs
mov
ljmp
dec
mov
lret
fldl
mov
and
dec
inc
cmpsb
scas
sbb
dec
adc
add
or
scas
testl
jle
xchg
lcall
in
xchg
scas
ret
cmp
sub
in
add
dec
jns
pop
mov
shr
jbe
fdivl
das
and
je
rorl
sbb
loopne
movsl
out
out
imul
mov
int
inc
push
inc
sbb
pop
shll
xchg
fmuls
add
xchg
mov
lret
push
or
inc
jnp
push
or
cmpsl
out
dec
mov
arpl
call
and
mov
stos
adc
or
pop
jp
jnp
in
jge
nop
dec
rclb
or
push
fstps
cwtl
push
rcrl
js
inc
sub
and
push
repnz
dec
aad
or
jle
mov
push
andl
repnz
or
jmp
iret
jno
icebp
setne
lods
repnz
mov
mov
outsb
push
cmp
gs
or
popl
pop
fsubp
mov
je
mov
int3
jne
aad
xor
in
jge
xorb
in
dec
outsl
repnz
test
dec
add
jns
sbb
fildll
push
dec
add
into
mov
mov
push
rolb
push
insb
inc
je
pop
pop
lea
leave
mov
std
int
mov
jo
lods
push
add
mov
or
fsubl
cmp
cmp
push
lret
mov
shrb
cmp
dec
out
xchg
xor
loope
in
sbb
dec
mov
cmp
sahf
pushf
xchg
mov
dec
push
pop
pop
je
test
hlt
mov
inc
mov
push
cmpsl
jle
add
sahf
pop
push
shl
xor
mov
xchg
xchg
push
ljmp
lock
mov
push
cmovle
testl
cld
sarb
pop
push
pop
mov
mov
jae
das
dec
xor
scas
test
pusha
fldenv
in
jmp
fsubrs
hlt
push
data16
jns
cltd
and
add
dec
or
out
fiadds
sarb
jl
push
add
jmp
cs
dec
movsb
mov
fcmove
lock
cmp
pop
fadds
or
dec
xchg
adc
push
ret
push
cmp
push
rorl
bound
std
mov
pop
ja
push
inc
mov
dec
insl
fistpl
ss
push
arpl
out
push
pop
or
cmp
lds
in
hlt
cld
xchg
xchg
movsb
jp
cmp
scas
pop
push
pop
rcrb
inc
mov
fidivs
inc
idiv
push
es
jge
mov
sub
popf
out
mov
pop
xor
pushf
sub
lahf
pop
inc
ds
pop
or
cmp
sub
push
adc
mov
cmp
scas
fs
ljmp
pop
fwait
push
sti
jge
fldz
xchg
mov
push
cmp
lcall
and
xchg
das
rorb
fnsave
fs
pop
pop
shlb
js
idivl
push
and
shlb
lds
xor
xor
sti
jp
and
fadd
sbb
cmpsl
mov
pop
xchg
adc
je
cld
in
leave
xchg
lods
jmp
out
nop
push
hlt
cmp
lods
push
shl
data16
mov
int
movsb
dec
pop
or
xor
add
mov
out
sub
adc
xchg
lret
push
jmp
inc
mull
lret
ret
scas
push
or
or
pop
out
pop
pop
outsb
hlt
adc
inc
mov
push
xchg
mov
stos
mov
clc
loope
inc
shll
mov
inc
mov
xchg
negb
jae
repz
xor
inc
lods
sub
sahf
jge
loope
mov
sbb
addr16
pop
cmp
iret
sbb
orb
cwtl
test
jne
ret
test
sub
mov
mov
in
insb
mov
adc
mov
pop
mov
aas
cmpsl
and
lock
loope
lods
aaa
int3
mov
addb
arpl
in
mov
mov
std
gs
scas
daa
jl
dec
push
dec
cltd
mov
xchg
xor
out
movsb
push
sub
gs
cmp
or
mov
fcompl
mov
out
xlat
js
xchg
mov
push
push
test
or
sub
cmp
stc
mov
mov
cmp
rcll
inc
shr
cmpsl
dec
nop
cmp
int3
sbb
sub
lds
and
mov
adcb
lea
outsb
mov
push
in
inc
addr16
or
push
iret
mov
add
mov
out
cmp
jb
cmc
lea
mov
xchg
mov
enter
inc
scas
rorb
loopne
enter
mov
pop
push
fwait
das
mov
adc
pop
jmp
addr16
pop
ror
call
frstor
and
mov
mov
pop
mov
pop
pushf
out
clc
cmpsl
add
jg
jno
xorb
scas
imul
pop
inc
jmp
into
jbe
push
mov
sbb
push
scas
stc
sbb
mov
mov
scas
rcrb
sbb
mov
stc
sub
fmul
sub
lret
xchg
je
movsb
dec
pop
mov
jae
pop
adc
inc
dec
scas
sbb
sti
adc
cmp
ds
sbb
mov
mov
test
out
pusha
fmuls
cmp
adc
cmp
movsb
mov
jle
cmp
js
in
mov
roll
sub
sbb
xor
inc
jp
add
add
int3
inc
outsb
std
xor
xchg
repz
ficoml
lret
dec
lret
add
mov
mov
call
ret
fists
mov
add
sbb
sti
sub
and
sbb
lret
lcall
cld
inc
jb
xorl
push
cmp
cmc
lahf
sbb
adc
shll
pop
repnz
add
sbb
or
sub
jns
out
push
ret
and
popa
mov
jb
data16
lock
sbb
mov
ret
sub
and
jmp
sub
rcl
loopne
push
inc
xor
xchg
mov
push
cli
mov
scas
jne
inc
adc
cltd
jnp
stc
fldenv
jle
ret
jb
test
and
icebp
mov
popf
jae
aam
in
dec
js
mov
pop
scas
cmp
inc
test
test
pop
lcall
xchg
fwait
push
filds
adc
xchg
push
ret
inc
cmpsl
outsb
stos
and
xor
pusha
push
or
or
cmp
xchg
push
mov
lds
mov
fcmovne
jb,pn
xchg
test
hlt
mov
inc
jecxz
dec
xor
ret
out
jnp
jp
les
dec
mov
cltd
mov
shlb
inc
mov
leave
sbb
cmp
add
icebp
js
aam
sub
dec
sbb
aad
xor
sbb
and
xchg
into
jb
dec
mov
out
out
cmpsb
dec
in
adc
mov
je
pop
fisttpll
mov
xchg
jle
aaa
movsb
add
into
xchg
push
movsb
lret
jne
stos
sar
out
fldz
insl
sbb
mov
push
cmp
xchg
and
mov
xor
pop
gs
jecxz
cli
fistps
sbb
pusha
mov
xor
adc
and
cmp
jle
push
xchg
ja
cmpsb
int3
mov
int
adc
out
mov
and
jge
mov
adc
cmp
sub
adc
call
js
call
push
mov
lods
subb
add
mov
xchg
dec
repz
sub
and
jmp
outsb
aad
addps
mov
adc
arpl
dec
test
aaa
lods
mov
flds
std
jae
sub
out
repz
jmp
or
xlat
cmpb
push
xor
xchg
stos
cmpsb
out
inc
add
xchg
ret
cmc
jle
add
mov
cmp
in
fldl
enter
lea
and
dec
jb
addr16
js
aaa
xor
add
ret
inc
mov
lcall
dec
pop
arpl
push
sub
jge
jl
inc
test
inc
loopew
and
inc
pop
jno
mov
push
scas
aaa
stos
add
shlb
mov
leave
lea
ljmp
mov
dec
inc
add
fdivrl
mov
shll
les
xchg
rorl
hlt
pop
or
jl
or
mov
mov
inc
mov
inc
mov
call
mov
clc
pop
xchg
imul
push
imul
lcall
leave
jmp
sbb
sbb
xor
adc
sub
out
xchg
xor
xchg
push
fdivr
jnp
bound
loope
insl
cmp
fs
jmp
out
cmp
fsub
cmp
jmp
in
and
dec
adc
shrl
movsl
in
mov
stos
push
test
ds
sbb
cmp
ret
repnz
dec
add
cmpsl
jbe
loope
call
xor
not
hlt
jg
bound
cmp
movsl
inc
iret
inc
push
mov
add
push
xchg
insl
xchg
xor
jne
add
sub
ret
std
and
or
mov
cmp
insl
add
jno
fs
std
iret
jae
sub
dec
dec
adcl
push
sbb
in
lahf
xor
dec
cmpsb
lret
push
inc
pushf
subb
xchg
mov
cmp
push
cmp
push
cmpsb
pop
insl
jb
sahf
sbb
inc
mov
arpl
xchg
cli
pminub
xor
push
dec
and
nop
xchg
cmp
mov
and
and
das
or
jo
ret
jmp
scas
or
and
push
rcrl
dec
mov
lea
mov
mov
pop
sbb
mov
add
stos
xchg
shll
fisttpll
arpl
lea
fldl
pusha
imul
or
mov
adc
aaa
aas
insl
rep
aam
cmpsb
testl
fildll
or
lret
jno
dec
pop
mov
data16
imul
jno
mov
jp
inc
add
insb
cwtl
std
pop
movsl
mov
lock
cmpsl
in
jbe
insb
cwtl
add
aas
mov
jo
or
dec
lods
sub
int
push
sub
add
dec
mov
pop
pushf
hlt
push
push
push
out
xchg
xor
adc
outsl
fistpll
add
es
push
repz
xchg
push
cmp
mov
mov
loopne
pop
push
cmp
stos
icebp
mov
iret
mov
fcmovu
outsl
and
fwait
enter
xchg
arpl
cmp
adc
mov
test
loopne
cmp
push
jnp
push
push
inc
loopne
sbb
push
push
andb
xchg
in
jg
ret
add
lcall
lea
out
xlat
loop
ja
fcmovnu
mov
lcall
ret
push
adc
or
mov
out
sub
jnp
or
lret
ja
outsb
xchg
sub
cs
inc
ret
jbe
pop
leave
test
and
jecxz
and
imul
neg
xor
stos
push
stos
mov
push
lock
cli
out
xchg
fidivs
dec
fmull
xchg
pop
push
sbb
dec
lcall
pop
add
aaa
inc
icebp
faddp
outsl
sbb
sbb
and
dec
adc
pop
out
aas
imul
or
popf
leave
pop
lods
subb
test
jle
or
aaa
and
xlat
xchg
xor
gs
push
leave
sbb
mov
adc
outsb
sbb
cld
into
stc
sbb
and
mov
mov
out
aaa
dec
pop
push
out
subl
xchg
jl
out
ds
ficomps
jmp
lret
jo
inc
push
mov
mov
dec
mov
cmp
fwait
push
dec
nop
mov
loopne,pt
sahf
sahf
lret
mov
fnstenv
jns
cmp
jmp
dec
and
loope
mov
xor
xor
jb
notl
lret
add
push
cmp
aad
nop
push
pop
in
mov
jns
imul
and
outsl
ret
mov
das
push
bound
and
jg
lret
mov
sub
mov
push
enter
roll
push
cs
mov
shll
xchg
push
imul
ret
cmp
xchg
mov
mov
cli
xchg
push
das
sub
mov
cwtl
out
ret
add
jl
bound
int3
scas
pop
pop
or
jecxz
sbb
pop
xchg
loopne
imul
sbb
aaa
or
je
stos
mov
data16
jmp
xor
push
or
jnp
cld
adc
sub
je
jne
fisttpl
lahf
das
or
add
sti
das
arpl
xchg
bound
inc
xchg
daa
pop
popf
mov
xlat
sub
jmp
scas
add
mov
sub
arpl
add
cli
or
outsl
clc
movsl
adc
xor
pop
pop
xor
sarl
loopne
stos
adc
xchg
and
push
ljmp
jp
dec
add
outsb
mov
xchg
fsubrs
lret
add
jecxz
inc
cmc
jo
mov
insb
data16
sbb
lods
or
mov
pop
fisubs
subb
xor
mov
rcrl
push
push
pop
aaa
divb
jno
lds
sbbl
mov
push
push
adc
inc
xchg
psllw
test
and
addb
push
push
cli
inc
inc
or
call
movsb
add
sbb
or
jae
mov
ss
pop
shlb
addr16
pushf
lods
imul
popf
sahf
xor
mov
push
movsl
stos
cmp
xor
lods
pop
rclb
sub
roll
addl
sub
call
jne
lods
out
inc
sti
out
mov
rep
or
daa
push
or
gs
push
or
aaa
mov
or
jns
hlt
mov
mov
cld
dec
pop
insb
push
jbe
add
mov
mov
or
sti
mov
out
pop
pop
and
mov
inc
jmp
cmpsl
jo
inc
cmp
push
lret
and
or
idiv
cmp
cld
hlt
jl
pop
add
mov
adcb
pop
jecxz
aad
and
mov
add
mov
pop
fcoml
int
sbb
push
sbb
pop
push
inc
jbe
ret
stos
dec
push
mov
adc
ret
fsubs
cmp
aam
lret
pushf
lret
cs
sbb
dec
lock
shll
mov
leave
mov
out
xor
sti
or
popf
xchg
pop
call
pop
mov
xchg
add
sti
or
rol
jbe
mov
adc
mov
stos
mov
fiaddl
fiadds
inc
add
xor
cltd
or
jp
xchg
test
and
cmpsl
mov
add
aad
pop
mov
cmpsl
sbb
and
ret
in
add
pop
adc
sub
outsb
call
call
inc
aas
orb
xchg
add
pop
mov
lea
lcall
fsts
repnz
add
aas
cmp
pusha
mov
leave
pop
hlt
popf
fs
adc
xor
test
add
inc
out
repnz
in
jo
loope
in
and
cld
sbb
push
fstl
xchg
test
xor
test
ljmp
xor
mov
mov
loopne
xor
push
jl
ffreep
fs
sub
cwtl
dec
aas
xchg
jmp
add
push
inc
in
shlb
ror
aam
push
inc
imul
ljmp
jno
xchg
dec
mov
iret
pop
imul
pop
add
xor
xchg
add
xor
adc
int
popa
or
mov
notl
and
mov
test
fldenv
inc
pop
jnp
fninit
jle
mov
mov
loop
testl
cmp
lret
dec
neg
xor
ret
repnz
outsb
xchg
dec
dec
mov
sub
sub
sub
ror
loopne
rcll
test
push
aam
jo
dec
imul
jge
mov
js
pop
repnz
jp
cwtl
jno
sub
xchg
adc
sub
jge
sub
cmp
fdivrs
scas
icebp
mov
repz
cli
idivb
mull
test
adc
insl
or
inc
aad
sub
mov
mov
jmp
andb
aam
add
sahf
scas
mov
sbb
rol
fdivs
dec
lds
ret
outsl
sbb
fwait
and
pop
dec
fcom
clc
mov
and
or
icebp
xlat
movsb
sbbl
jae
repz
xor
jbe
and
fcoms
sub
jnp
repz
mov
pop
push
rclb
add
adc
adc
cld
jne
pop
sub
sti
dec
aaa
sub
fnstenv
push
icebp
lods
cmp
pop
js
movsb
or
mov
dec
test
sbb
sbb
lods
es
push
or
adc
cs
and
mov
adc
ja
pop
sbb
mov
cmp
sbb
or
cld
les
jne
test
or
aas
mov
mov
or
stos
xchg
gs
push
add
jl
inc
inc
jno
add
sahf
fists
mov
jg
addb
adc
rcrb
mov
mov
cld
sahf
pop
into
adc
cli
push
push
cwtl
mov
and
lds
loopne
jo
xchg
je
cmp
jle
movsl
push
repnz
sbb
inc
movsl
imull
mov
or
repz
les
pop
mov
call
lea
dec
xchg
idivl
std
sahf
xor
imul
idivl
divb
test
pop
or
mov
pop
fldcw
pop
push
or
sub
std
or
push
out
aad
pop
mov
xor
adc
pop
ss
pop
fsubl
in
stos
pop
fildl
xchg
and
mov
cmp
mov
mov
mov
cmpsb
adc
xchg
inc
hlt
add
out
inc
lods
frstor
adc
ficoms
fbld
pop
mov
hlt
ret
add
test
loope
sbb
test
or
sbb
jecxz
mov
stos
imul
pusha
jecxz
xchg
adc
rclb
mov
jae
sub
mov
fdivs
inc
jp
jnp
jp
jecxz
xchg
jnp
ret
pop
mov
mov
testb
stc
sbb
mov
pop
adc
enter
adc
push
imul
adcb
inc
es
adc
dec
mov
sbb
gs
cmpb
xor
data16
xchg
outsb
or
push
dec
das
add
cmp
push
test
loop
mov
in
je
fcompl
sub
test
into
sub
sbb
clc
arpl
pusha
in
data16
out
dec
fisubrl
mov
test
lret
ja
and
cmp
or
jb
aam
cmp
nop
dec
out
cmp
popa
insl
fildl
lods
es
into
lods
scas
push
daa
out
adc
cmpsl
jno
mov
push
mov
in
push
or
out
sbb
pop
add
jge
mov
adc
jae
addl
aam
gs
jmp
out
dec
std
add
hlt
lods
mov
push
fcomps
dec
pop
shll
int3
xor
and
out
sti
movsl
adc
jbe
jp
add
xor
push
mov
icebp
xchg
fidivl
jge
lds
movsb
jp
in
sarb
mov
movsl
push
and
mov
in
call
push
fucom
adc
pop
jge
xchg
into
mov
ds
jno
jnp
loopne
ror
jp
cmc
lea
and
sbb
adc
aaa
clc
xor
arpl
mov
inc
jg
emms
cli
sub
outsl
cwtl
into
in
jmp
fisttpl
mov
mov
lods
test
jg
call
lds
mov
inc
jno
push
cmp
lods
push
lock
rolb
scas
scas
pop
scas
pop
cmp
das
or
or
xchg
push
xor
fwait
jecxz
lock
xchg
xchg
dec
loope
cmc
int3
je
sarb
fidivs
int3
out
cmp
push
add
ret
xor
cmp
andb
sbb
pop
cmpsl
sti
jno
or
cmp
sbb
aaa
cmp
xchg
mov
adc
pop
les
cli
sbb
sbb
ja
adc
sti
rclb
idiv
icebp
popa
and
inc
xchg
js
sub
push
adc
repz
xlat
mov
mov
scas
stos
cli
pop
mov
xchg
adc
lea
in
repnz
sub
loope
ljmp
xor
enter
int3
add
mov
adc
call
insb
xchg
push
ss
xorl
inc
mov
insl
and
mov
mov
enter
pop
adc
and
push
pop
or
lret
popf
mov
out
xchg
icebp
aad
push
pop
push
mov
test
xchg
sarb
mov
inc
pusha
push
mov
jg
adc
adcl
lahf
je
mov
inc
jl
jnp
add
add
test
fmuls
push
and
add
cmpb
dec
cli
push
sbb
add
dec
nop
mov
inc
ljmp
out
push
dec
add
sub
or
push
mov
in
orl
test
sub
adc
fildl
cmp
js
jb
jmp
aad
cmpsb
cwtl
push
and
insl
cmp
out
adc
push
xchg
mov
out
inc
std
cld
fsubs
cmp
enter
pop
scas
movb
jae
and
call
mov
push
push
jae
sub
movsb
jne
ret
ljmp
dec
iret
or
je
popf
ja
cmp
adc
stc
jno
xchg
out
jle
dec
leave
jns
repnz
and
je
pop
mov
jg
aam
or
mov
mov
cmpb
stos
dec
push
xor
sbbb
or
adc
lret
insl
test
xor
test
or
ficoml
cltd
mov
push
xor
cmpsl
jnp
repz
stos
inc
mov
aaa
sub
test
lcall
leave
mov
xor
lock
aam
mov
mov
in
mov
push
or
inc
gs
push
xchg
push
push
popa
test
adcb
pop
in
arpl
gs
lea
scas
loope
rorb
pushf
pushf
xor
das
ror
jb
lock
mov
mov
out
adc
aaa
pushf
std
jg
cmp
jle
or
bound
dec
mulb
ficompl
or
push
push
repnz
pop
inc
call
add
bound
sub
or
repnz
jbe
pop
sub
and
xchg
jge
and
fadds
lock
mov
in
sbb
test
lods
dec
adc
mov
loop
xchg
jp
pop
cmp
pop
fmulp
scas
stc
xchg
cld
fimull
mov
pop
xchg
pop
divb
jge
lahf
in
rolb
lret
jb
push
test
int3
add
sub
mull
add
mov
adc
test
pop
cmpsb
ret
adc
lods
in
dec
sbb
sub
vmovmskps
lea
lods
cltd
or
loope
icebp
mov
inc
add
aam
aas
xor
push
or
sub
shrb
add
cmpsl
pop
std
fsubr
hlt
cmpsl
and
mov
dec
decb
cs
loope
jge
inc
test
lods
push
mov
cwtl
sub
adc
popf
sbb
or
xchg
and
jb
aas
and
mov
ret
mov
dec
popf
outsl
mov
push
mov
sub
ja
ret
push
shrb
jl
push
xchg
hlt
cmp
mulb
test
cmp
xchg
out
nop
mov
out
hlt
outsb
cli
pusha
inc
testb
enter
sbb
cmc
gs
jecxz
pushl
xor
cmp
insl
scas
adc
aam
std
ds
iret
jns
hlt
pop
inc
mov
inc
mov
pusha
pop
scas
aam
cmpsl
inc
in
inc
mov
jmp
enter
xor
mov
mov
repz
cli
lcall
rclb
add
es
xlat
das
push
jno
sub
aad
xlat
or
adc
rcrb
jmp
cmp
or
inc
cltd
adc
jge
cwtl
inc
shll
or
or
mov
dec
jb
add
ret
and
or
mov
negl
sub
test
add
cltd
adc
sub
scas
cmpsl
pop
les
cmp
jno
test
cmpsb
loop
and
mov
inc
inc
pop
test
inc
mov
and
add
sarb
daa
cli
out
xchg
xchg
sbb
ss
push
nop
sbb
sub
enter
pop
mov
aam
mov
fdivl
jle
push
cmp
les
je
xor
fmul
out
cmp
dec
sub
push
mov
les
lds
push
stc
add
xchg
add
lahf
jae
push
cmpb
pop
and
jmp
mov
idiv
leave
gs
stc
scas
or
mov
in
fisttps
iret
mov
pop
cmp
push
mov
aad
ffree
pop
add
dec
mov
adc
inc
or
and
in
test
pop
xor
sbb
cltd
add
in
mov
xlat
xor
les
xchg
and
icebp
js
in
fcmove
aas
jae
fs
jecxz
mov
and
jnp
push
ret
out
fimull
pop
cli
cmp
or
insb
mov
test
jo
out
mov
dec
jae
inc
aad
aad
imull
inc
cs
push
aaa
cmp
roll
inc
adc
or
jecxz
jl
call
pop
pop
adc
sbb
xchg
dec
jae
sarb
lret
rorl
fsub
pop
mov
ds
iret
ret
push
cmc
int
es
mov
mov
sub
mov
lods
mov
ss
out
stos
mov
jle
mov
add
add
xchg
leave
std
push
sbb
jmp
xor
xchg
mov
xchg
cmp
sarl
aaa
shll
dec
lods
lods
int
je
lods
fwait
decl
jl
je
mov
push
jo
shrb
pop
shr
cmp
sub
fcmovnb
sub
stos
pop
jp
cltd
cwtl
sub
hlt
push
add
pop
in
or
or
rorl
xor
mov
dec
push
dec
mov
loop
add
adc
inc
pop
jge
push
fs
push
stos
sbb
ja
mov
push
and
pop
jo
xor
and
stos
mov
test
pushf
cwtl
inc
mov
and
push
dec
scas
pop
out
repz
divb
push
sti
mov
std
rcrb
setp
je
inc
shl
lret
mov
std
es
daa
push
inc
in
enter
test
rcl
xchg
xchg
pop
ljmp
xchg
mov
in
nop
mov
push
sbb
cmpsb
imul
mov
pop
mov
mov
and
daa
add
out
xchg
aas
pop
dec
xchg
dec
sbb
fdivrl
sbb
and
jecxz
lcall
adc
scas
mov
push
lea
in
loope
or
dec
aad
jne
cmp
aam
es
xor
dec
stc
mov
out
fnstcw
adc
lcall
stos
adc
mov
es
pushf
sbb
xor
adc
dec
cli
into
jo
inc
and
rcll
xchg
addr16
push
inc
ljmp
aas
pop
sti
xor
js
push
push
sub
push
inc
xor
in
sbbl
rcll
cs
push
loopne
sbb
mov
popf
repz
mov
pop
mov
mov
pop
sahf
cmp
movsl
lods
or
push
insl
insb
mov
mov
cs
xchg
push
movb
adc
push
cmp
push
cmp
adc
xor
pop
loopne
ret
mov
stc
lcall
and
lret
dec
dec
dec
xchg
xchg
std
pop
ret
cmpsl
add
pop
sbb
les
dec
mov
pop
push
xchg
push
vmwrite
xchg
mov
mov
sub
sub
sbb
dec
add
insb
mov
sbb
mov
test
and
movsb
stos
cwtl
xchg
in
mov
call
dec
dec
jmp
jo
and
mov
loope
fs
mov
xchg
js
push
divl
inc
sub
rorb
mov
and
mov
sbb
add
add
mov
hlt
js
scas
and
lahf
jl
arpl
adc
dec
jo
xchg
std
inc
bound
sar
out
mov
or
lds
fsubrp
out
xor
lds
add
imul
push
adc
jl
es
std
inc
push
jae
mov
xchg
dec
sbb
mov
fcmovnu
or
mov
insb
out
cmpb
in
int3
je
pop
inc
dec
pop
push
sub
nop
mov
mov
mov
ja
popl
into
in
addr16
lret
mov
jecxz
xlat
loope
fsub
mov
mov
out
sub
sbbl
cmp
pop
cmpl
xchg
pop
stos
push
mov
lods
movl
jnp,pn
pop
or
movsb
mov
jecxz
test
inc
push
xchg
bound
mov
sbb
push
popf
pop
fwait
push
or
mov
xchg
xchg
mov
popa
jno
cs
stos
out
adc
push
lods
jg
leave
mov
dec
jb,pn
xchg
imul
push
sahf
jnp
cmc
inc
movsb
lods
jmp
xchg
testl
or
loop
push
mov
in
adc
cmp
push
push
and
push
dec
call
mov
negl
stos
insl
mov
dec
daa
out
mov
cs
xor
xchg
lea
hlt
pop
xchg
mov
aam
dec
mov
mov
cmpsb
jp
out
aas
lods
push
mov
nop
or
and
push
adc
pop
push
cmp
push
push
inc
and
testb
mov
jg
shrl
movsb
mov
cmpsb
insl
pop
rclb
xchg
sbb
mov
jp
and
test
sbb
xchg
xchg
mov
cmp
mov
lcall
loopne
es
test
repz
ja
cmp
sub
inc
scas
jge
stc
je
hlt
adc
mov
xchg
xor
out
sahf
cltd
dec
popf
popf
pop
xor
lcall
aas
jnp
jbe
fbld
push
clc
sub
sbb
dec
inc
lret
cmc
out
dec
fst
testb
js
insb
rorl
sti
int
shlb
int3
arpl
out
lods
push
mov
pop
adc
scas
jmp
int3
test
add
imul
sub
fcoms
fcmove
push
dec
push
dec
or
out
adc
outsb
inc
aaa
xlat
adc
orl
rolb
cmp
movsl
push
insb
and
pusha
xlat
mull
outsl
xchg
outsb
loopne
or
dec
repz
fidivrs
addr16
or
ds
dec
and
dec
lahf
push
inc
pop
xor
cmp
fsubrl
aam
pushf
xchg
push
and
cmp
jns
cmpsl
dec
mov
adc
mov
inc
out
rcrl
in
xor
push
insl
or
lods
xor
cltd
cli
xchg
cmc
call
xchg
push
js
shlb
jbe
decl
xor
stos
daa
iret
sbb
pushf
pop
pop
jb
cmp
adcl
mov
and
lahf
jno
out
stc
jo
mov
in
mov
das
enter
test
fnsave
inc
imul
lea
call
aas
lret
mov
mov
add
adc
out
fstpt
dec
lock
test
test
cmp
negb
sbb
cmp
pop
mov
pop
iret
jg
test
xor
xor
out
mov
call
jmp
bswap
sub
pop
fiadds
movsb
js
mov
xor
call
pop
mov
sub
and
xchg
enter
cmpb
push
xchg
adc
fwait
cli
jle
cs
testl
jmp
das
daa
outsl
mov
mov
jo
mov
inc
sbb
fstp
les
mov
into
xor
rol
aas
cltd
fistpl
insb
movsb
les
push
and
out
subl
into
lock
lock
sbb
inc
or
push
test
out
inc
andb
mov
popf
popa
bound
insl
push
cwtl
repz
scas
mov
out
enter
pop
or
push
inc
sbb
mov
mov
std
cmpsb
add
jp
addr16
negb
mov
and
jnp
iret
fwait
dec
cmp
imulb
mov
cmc
lahf
and
mov
mov
push
fsubrs
mov
jb
xor
cmpsb
add
mov
lds
jmp
push
stos
jbe
sbb
leave
and
or
dec
mov
adc
ret
push
jg
pushf
aas
cld
fwait
sbb
adc
les
clc
mov
pop
pop
jmp
fidivrl
ret
shll
test
fimull
or
js
pop
mov
pop
pop
ss
and
clc
pop
shrl
inc
lcall
aas
stos
aam
cs
add
addr16
test
or
xchg
cmpsl
mov
ljmp
xchg
movsb
mov
push
sub
lds
popa
xor
sbb
dec
test
mov
sbb
bound
xlat
cmpsb
stos
insl
push
gs
repnz
inc
punpckhbw
hlt
aaa
mov
xchg
repnz
add
icebp
js
add
test
mov
int3
das
testb
xchg
daa
sbb
pop
out
out
icebp
decb
pop
jg
lahf
adc
mul
into
mov
xchg
fidivs
idivl
dec
cmc
out
xchg
mov
notb
loopne
testb
cmp
adc
mov
ficompl
cmp
pop
es
add
jo
dec
jge
gs
mov
fisubrs
cs
clc
andl
push
dec
jne
cmc
and
pop
out
sbb
pop
das
cmpsl
scas
mov
dec
jp
insl
cwtl
leave
push
jne
or
out
mov
or
inc
fld
loope
fwait
add
rol
pop
push
into
jns
dec
sahf
mov
xchg
or
int
inc
lret
sarb
mov
add
lahf
or
mov
push
cltd
adc
jle
mov
mov
add
lcall
cmp
out
add
sbb
cmp
xor
mov
mov
push
arpl
jbe
mov
xor
push
mov
jg
clc
mov
jge
cmp
jp
int3
and
cmp
gs
jb
add
daa
jl
lock
pop
jecxz
jl
mov
lret
clc
xchg
fcoml
cmp
mov
out
call
jae
leave
xchg
movsl
mov
out
mov
jns
and
mov
adc
cwtl
mov
xor
in
hlt
cmp
or
in
cmp
in
dec
mov
add
insb
mov
aas
mov
inc
adc
out
push
adc
sarl
fdivl
orb
fisttpl
rcr
xlat
xchg
int3
mov
and
mov
lcall
add
jge
pushl
sub
out
fnstcw
iretw
enter
imul
pop
aam
dec
iret
mov
js
xchg
inc
mov
mov
pop
in
xor
xor
jbe
fwait
lods
lret
fcmovne
rclb
fs
hlt
fbstp
and
and
jo
lahf
and
aam
dec
out
lods
test
aaa
bound
arpl
pop
mov
and
data16
jae
cltd
and
pushf
std
lea
jge
mul
sbb
or
cwtl
push
sbb
scas
dec
ret
aad
sub
enter
adc
popl
aam
mov
push
dec
daa
mov
lds
test
les
cmpsb
leave
cwtl
cmpsb
leave
inc
cmp
fwait
sbb
push
mov
cwtl
orb
cmp
xchg
xchg
cs
and
sub
sub
inc
nop
ret
jmp
addl
xlat
shl
popa
push
sbb
dec
xorl
and
jo
xor
mov
std
xor
fsubs
and
push
shlb
lret
std
cmpsb
or
jno
iret
leave
xchg
mov
addr16
jle
rcrl
stos
ror
sahf
repnz
sbb
sbb
mov
push
or
mov
mov
cmpsl
imul
dec
jo
je
outsl
add
dec
inc
sub
pop
lcall
jns
mov
and
pop
cmpsl
ds
mov
cmp
aaa
push
lea
mov
push
jg
sbbl
sbb
or
push
add
addr16
mov
aas
lcall
xchg
mov
int
or
test
scas
inc
stc
das
push
push
aad
cmp
enter
fcompl
pop
mov
lret
sbb
adcl
sbb
clc
cmp
decb
test
cmp
cld
xchg
js
mov
out
and
xchg
sbb
std
lret
or
bound
popf
shlb
test
sbb
enter
push
dec
jnp
adc
sub
repz
inc
lahf
les
sbb
insl
add
mov
xchg
xchg
fbld
mov
cmpsb
out
mov
inc
and
test
imul
arpl
or
jg
shrl
jno
or
push
call
out
sti
hlt
push
mov
andb
mov
fwait
push
add
add
pop
jmp
push
sub
sbb
sbbl
outsb
adc
push
dec
mov
inc
out
sti
repnz
pop
idiv
ja
mov
mov
loope
popa
icebp
in
mov
mov
outsl
call
jno
shlb
pusha
stos
mov
rcrb
mov
stc
pop
mov
jmp
mov
inc
cmc
pop
jge
out
imul
mov
test
loope
pop
mov
scas
mov
lock
pop
aaa
jge
jae
inc
and
sub
xchg
jle
adc
mov
sti
xchg
xchg
cwtl
jne
add
mov
psubd
add
ret
mov
daa
sarl
inc
xor
lcall
inc
jno
xchg
hlt
cmpl
push
repz
push
clc
jne
sub
mov
int3
out
cmp
rorb
pop
stos
test
sbb
in
lcall
insb
mov
mov
xor
xor
jge
icebp
loope
sub
ljmp
in
ljmp
add
cmp
mov
test
ret
rcl
inc
mov
pop
pop
clc
in
push
fistpll
inc
xchg
rcrl
in
pop
inc
mov
mov
ds
bnd
ja
imulb
loop
loopne
cmpsl
in
push
mov
adc
bound
mov
mov
sahf
pop
xor
and
ficoms
xor
sbb
out
xchg
push
xchg
pop
call
stos
xor
testb
mov
mov
pusha
jbe
xchg
adc
and
xchg
and
jo
mov
push
pop
popa
sub
dec
push
movsl
inc
hlt
add
inc
mov
call
jb
push
mov
mov
dec
popa
out
imul
mov
fstpl
out
fildll
or
fcomp
nop
fbld
or
adc
test
in
add
jge
jmp
in
pop
dec
jp
add
ds
lds
jns
mov
inc
fistpl
mov
rolb
sbb
push
xor
jo
pop
jne
sub
pop
lock
adc
mov
pop
cmp
inc
cmp
xchg
in
roll
popa
lret
stc
lock
adc
push
xchg
push
lret
in
sub
sbb
pushf
mov
adc
ds
add
xor
sbb
ljmp
popf
mov
fstl
ret
dec
pop
lea
fistps
filds
scas
hlt
cmp
jp
movsl
cld
addb
inc
pushf
je
enter
mov
sbb
xor
jns
adc
outsb
iret
ss
and
nop
fnstsw
int3
sar
scas
xchg
aam
fildl
push
and
cmc
iret
std
xor
sarl
or
fsubrl
pop
lods
jnp
and
repnz
add
cmc
out
adc
jge
pop
out
stos
stos
cmp
cwtl
neg
mov
fucomip
mov
mov
testb
repz
adc
mov
xor
xchg
jb
les
test
push
push
aam
repz
insb
sub
inc
push
enter
push
xor
xor
in
mov
lcall
mov
xchg
sub
mov
xor
and
sarl
cwtl
xchg
test
dec
add
jge
dec
push
cs
dec
add
popf
in
add
test
mov
pushf
jmp
xor
cmp
movsb
xlat
push
dec
sti
ror
pop
in
fdivl
ffree
daa
mov
pop
cmp
popf
imul
mov
jle
or
sbb
sbb
sub
xchg
adc
movsb
out
adc
leave
or
push
aam
xchg
push
xchg
xor
call
call
in
daa
push
add
dec
fdivl
mov
and
sub
pop
inc
fidivs
push
out
adc
xorl
aad
jae
mov
mov
enter
pop
fldenv
add
jecxz
popa
push
fstp
xchg
adc
movsl
cmp
jbe
sub
scas
test
std
xor
cmpsl
es
and
xorb
ljmp
cmp
insl
jno
mov
cmp
clc
sub
call
xchg
or
int
rorl
add
xor
js
sbb
les
adc
dec
insb
add
cmpsb
out
mov
inc
pop
adc
lods
inc
in
rcpps
cmp
mov
jne
movsb
jns
out
mov
adc
pop
int
jo
sub
dec
rcrl
add
popa
mov
add
lods
outsl
cs
dec
xor
jg
mov
mov
push
hlt
mov
mov
loop
cmp
cmc
mov
cmp
mov
mov
pop
xchg
add
aad
insb
push
add
stos
jne,pn
outsl
lods
mov
inc
dec
not
insl
stc
mov
sub
jmp
xor
gs
ret
push
test
jge
xor
decb
les
lock
jae
jmp
mov
pop
dec
xor
push
sarl
lret
lcall
pop
inc
cmp
sbb
aas
xor
mov
mov
rcll
mov
insl
pop
cmc
stos
xchg
inc
pop
jae
popa
idivl
xchg
insl
and
out
mov
enter
mov
push
leave
in
cmp
jl
cmc
mov
call
loop
pop
inc
cmp
inc
jp
mov
cmp
addr16
pop
stos
faddl
aas
dec
and
pop
sub
div
push
loope
jge
adcl
ret
in
xchg
popf
scas
add
mov
mov
ffree
mov
xchg
and
xchg
or
sub
je
jg
pop
call
out
jmpw
cmp
mov
fwait
ljmp
jbe
sbb
push
fwait
dec
xor
jae
sub
mov
aas
insb
mov
out
into
mov
jb
xor
push
addl
jb
pop
push
and
dec
pop
ss
mov
mov
out
pop
xor
popl
lds
fldenv
jp
fnsave
hlt
mov
imul
add
insb
in
shlb
loope
dec
leave
push
or
jne
out
aam
or
xchg
mov
dec
into
pop
mov
cmp
adc
orb
subb
and
dec
cmp
xchg
sub
mov
xchg
xor
dec
jmp
jbe
jle
loop
mov
int
xlat
addr16
ss
add
incl
addl
mov
inc
loop
lahf
les
imul
stos
and
jae
imul
push
mov
inc
xchg
lock
or
sub
imul
shrl
pushf
jp
cmp
push
sub
pop
add
inc
add
dec
push
pop
cli
mov
push
xchg
sub
fiadds
aaa
dec
and
scas
push
cmp
loopne
mov
sub
pop
mov
leave
adc
push
ret
lcall
test
xlat
adc
scas
fsubl
cwtl
out
or
mov
lea
sbb
jns
fnstcw
das
into
jae
jp
add
in
subl
push
lods
or
std
mov
fisubrs
fwait
mov
int3
fdivrp
sbb
xor
cmpsl
cwtl
cmpsl
lahf
mov
subl
rcll
pop
pusha
xor
dec
into
cmp
lahf
mov
out
lods
push
in
mov
adc
fs
sarb
mov
sbb
push
or
leave
hlt
add
or
mov
and
add
push
imul
out
cmp
lods
movsl
iret
jmp
fs
xchg
dec
jg
ss
xlat
loopne
ficompl
iret
cmpsb
fistpll
add
mov
out
push
scas
adc
scas
lcall
mov
sub
scas
add
div
xchg
sub
fmull
mov
dec
js
inc
adc
pop
addr16
jg
repz
movsb
pusha
jmp
inc
decl
sti
sbb
je
push
inc
dec
jns
pop
add
fcomps
pop
roll
dec
das
jg
jnp
popf
and
arpl
pop
inc
jno
popa
rcl
sbb
out
out
outsb
shll
cmpsb
ds
shrb
test
pusha
imul
xor
bound
cmp
cmp
push
mov
lds
sti
jb
mov
cmc
lea
popf
mov
jg
test
addr16
mov
mov
mov
sbb
add
sarb
sbb
into
out
jae
dec
pop
lret
in
add
mov
mov
dec
sub
mov
mov
imul
sbb
ljmp
mov
rclb
test
mov
nop
shrl
aaa
push
ss
fisttpl
jne
xchg
aas
testb
adc
mov
ret
or
adc
jp
out
movsb
sub
push
aaa
leave
add
mov
mov
xor
leave
jmp
lods
mov
push
aam
inc
push
adc
mov
mov
subb
cmc
insb
outsb
test
cmp
xchg
pop
mov
mov
lods
add
fistps
xorl
or
aaa
dec
sbb
lahf
cmp
push
nop
sub
add
int
sub
pushf
mov
and
lret
call
lea
or
jno
mov
cmp
jo
push
test
mov
das
aas
scas
cmp
inc
cld
or
xor
das
fs
cwtl
ret
sarl
cmc
pushf
mov
push
push
or
jnp
outsb
xor
cmc
push
lahf
pop
scas
sbb
loope
sub
or
inc
je
adc
adc
or
shl
roll
dec
xor
and
dec
mov
jecxz
icebp
fisubs
cmp
sub
call
inc
xchg
sub
fincstp
in
xchg
dec
push
adcl
jae
ljmp
repz
fwait
test
notl
aas
hlt
aas
sarl
pusha
adc
cmp
int3
sub
cmpl
in
xor
xor
bound
pop
data16
mov
stc
add
inc
mov
sbb
dec
sar
iret
roll
mov
add
popf
fstps
pop
sbb
adc
sbb
sbb
cs
jae
test
adc
stos
mov
cli
xchg
popa
add
sbb
sbb
bound
pop
lock
cmp
test
lcall
pop
cmc
icebp
pop
mov
mov
rorb
repnz
mov
xchg
imul
mov
xchg
movsl
mov
ror
mov
lret
jle
loopne
negl
add
outsb
fwait
cmpsb
dec
or
add
add
or
cmp
cmp
movsl
sub
sar
mov
mov
loope
mov
loope
jne
add
shrb
mov
pusha
cld
jge
jo
mov
out
jb
inc
rcrb
ljmp
adc
jle
xchg
aaa
sub
mov
mov
test
push
dec
mov
mov
pop
add
pop
add
lods
cmc
sbb
sbb
mov
xchg
mov
out
clc
mov
lea
daa
pop
popa
aaa
inc
push
dec
push
mov
adcb
fdivrl
nop
imul
cmp
adc
repnz
sbb
mov
xchg
les
inc
aam
lds
enter
movsl
mov
pop
xor
and
loop
mov
jae
and
xchg
repz
incl
xor
pop
repnz
in
incb
mov
push
push
lret
das
imul
xor
xor
adc
pop
dec
sbb
cmp
push
dec
ret
xchg
xorl
cs
pop
cmp
popf
ret
mov
xchg
leave
mov
sub
sbb
cmp
pusha
adc
lret
jg
jbe
xor
sbb
fcmovnb
inc
add
mull
sub
in
aaa
xchg
xchg
arpl
push
xchg
xor
jbe
jae
and
pop
cmpsb
sti
je
push
and
or
sbb
test
mov
mov
popf
pop
in
inc
jecxz
sbb
hlt
int3
mov
in
sti
add
subl
dec
pop
pop
lret
dec
int3
cld
testb
jl
push
mov
push
mov
int
fmull
fidivs
scas
sbb
jbe
xor
jae
cmp
mov
rcll
add
add
sbb
pop
jo
les
mov
or
sub
mov
inc
int
pop
loopne
mov
and
scas
mov
je
sub
out
in
stc
rolb
pop
ja
repnz
repnz
xchg
cld
jo
movsb
lods
mov
out
out
xor
loopne
push
shrl
mov
push
pushf
xor
sub
pop
hlt
sub
cmp
xchg
mov
mov
cs
je
imul
dec
pop
fwait
xor
sbb
xor
addr16
scas
pop
ss
sbb
push
cmp
inc
in
jae
and
jns
jb
dec
mov
es
jle
std
inc
pushf
subl
cmp
cmp
sub
inc
xchg
or
mov
inc
sub
into
mov
cmp
dec
test
mov
movsb
nop
sbb
cmpb
xchg
cld
bound
aas
cmp
les
mov
js
lods
lcall
cld
outsb
test
movsl
xor
mov
xor
sbb
adc
add
inc
cmc
aas
dec
test
push
js
adc
aam
mov
mov
imul
mov
fisubrl
adc
mov
mov
mov
inc
xor
gs
add
cmp
jns
dec
clc
adc
inc
ror
aad
aam
sbb
mov
cmp
aaa
es
frstor
out
and
pop
push
sub
cmp
pop
js
push
pop
xchg
and
ljmp
push
inc
jecxz
mov
push
dec
test
jmp
sub
shl
xlat
pop
test
and
push
add
sbb
inc
cmp
dec
sbb
mov
pushf
cmp
int
int3
dec
xor
out
aas
mov
es
cmpsb
pop
jmp
mov
sbb
xchg
scas
ret
fwait
test
int3
mov
sarl
add
push
or
xor
dec
aaa
lods
push
jecxz
mov
lods
push
stos
or
mov
scas
cmpsb
sahf
sub
push
cltd
pop
push
mov
or
or
inc
out
adc
shlb
int
lret
xor
xor
aam
ljmp
pop
mov
jo
fwait
movsb
fistpl
test
pop
outsb
xor
mov
xchg
enter
ror
test
jle
pop
pop
xor
mov
jle
jg
jno
shll
pop
mov
outsb
data16
jg
roll
mov
pushf
stos
sbb
out
fs
push
sbb
mov
ds
sub
loope
popf
fidivs
lock
inc
lock
mov
pop
scas
lea
push
inc
in
dec
shl
ret
aas
add
or
insb
mov
add
dec
outsl
jge
xor
inc
stc
popf
fadds
mov
push
xchg
or
sahf
add
inc
enter
decb
mov
xchg
rclb
push
fisttpl
jno
push
push
mov
or
sub
sti
mov
out
xchg
insl
pop
fwait
gs
push
push
jmp
dec
fstpl
popa
push
pop
jecxz
in
dec
cltd
lcall
fs
push
and
sbb
jge
xor
js
out
dec
push
in
dec
xchg
mov
jno
adc
les
add
cld
insb
flds
inc
and
mov
sarb
repz
loop
cltd
jmp
aam
pushf
test
daa
mov
cmp
cld
lret
fstp
shrl
jb
fidivs
xchg
xor
push
mov
and
sbb
sub
out
pop
add
jle
ret
push
int
out
stos
add
ficompl
pop
xor
fiaddl
xor
ror
iret
mov
test
mov
and
jmp
int3
jnp
fidivs
xor
fbld
icebp
ss
stos
insb
inc
test
add
leave
repnz
test
shrb
iret
loop
push
inc
popf
mov
sbb
sbb
jl
movl
cmp
inc
push
loope
mov
mov
or
mov
mov
int3
and
adc
loop
push
stos
in
sub
in
ja
aam
scas
clc
jle
shrb
inc
sti
pop
inc
movsb
test
cli
ficomps
dec
iret
out
inc
mov
loop
fs
lcall
pop
notl
das
cmp
idivb
and
notb
imul
mov
negb
xor
mov
sub
pop
sub
mov
xchg
inc
inc
cs
mull
and
dec
cmp
xchg
dec
cltd
inc
mov
cmpsb
add
mov
dec
roll
inc
fists
pusha
les
insb
int3
xlat
pop
and
and
popf
stos
int3
repz
mov
push
imul
mov
sbb
sti
pop
jmp
sarl
pop
enter
test
sbb
into
add
mov
fists
mov
mov
out
arpl
jg
dec
mov
xchg
dec
std
out
adc
push
and
push
push
mov
in
push
pushl
lock
mov
sub
fimull
aas
loopne
gs
cmpsl
xchg
pop
sahf
jns
add
push
pop
enter
test
in
push
scas
cmp
mov
stc
inc
mov
daa
bnd
mov
xchg
pop
sbb
jns
fwait
sahf
out
xchg
mov
cld
lret
cmp
xor
sbb
inc
push
ljmp
jecxz
xchg
or
jge
and
shrb
xor
mov
cmp
jmp
mov
stos
es
pop
jge
daa
in
adc
xchg
cmp
mov
dec
mov
jb
repnz
wrmsr
cwtl
inc
aam
insb
mov
mov
jge
xlat
sbb
fwait
mov
icebp
sarl
lds
es
mov
xchg
xor
test
xchg
icebp
hlt
jbe
pop
or
das
jl
or
sub
push
cmp
icebp
std
fwait
pop
mov
cltd
ja
add
adc
jo
bswap
hlt
or
pop
dec
out
and
mov
adc
xchg
leave
cmp
mov
jp
pop
push
out
arpl
or
mov
push
fcmovu
cwtl
inc
push
dec
loopne
sub
adc
mov
pusha
in
dec
jnp
cli
sahf
xchg
enter
mov
xor
cmp
dec
mov
ds
jae
shrd
cmc
leave
loopne
mov
sahf
adc
xchg
xor
and
adcb
sub
mov
scas
shrb
rorb
je
jmp
pop
xorl
fisttpll
mov
sti
jg
inc
dec
aam
mov
add
adc
jbe
cli
mov
nop
and
imulb
sbb
pop
loopne
xor
fwait
rcrl
aas
sbbb
int
aaa
movsb
addr16
push
xor
jo
call
test
inc
inc
int
pop
and
xor
push
orl
and
imul
fidivl
ds
stc
fsubs
sahf
xchg
call
mov
mov
mov
pusha
sbb
testl
arpl
cltd
insl
outsb
stos
cs
rcll
inc
push
cmpsl
mov
dec
push
adc
test
or
je
in
or
and
and
sub
fwait
push
jp
ljmp
mov
mov
push
sbb
insb
lret
aam
or
sahf
push
mov
mov
mov
inc
mov
das
mov
fldl
fucomp
mov
fdivrl
cmp
js
or
inc
clc
add
xor
add
xchg
data16
pop
or
int
lods
cs
loop
notl
mov
ds
fisubrl
mov
lea
repnz
push
mov
ss
in
mov
mov
mov
dec
lret
int3
xor
jbe
and
pop
push
les
shl
lcall
loope
pop
cmpsb
or
mov
loope
lret
cmpb
sub
xorb
cmp
push
push
cltd
cmpsb
mov
jnp
and
insl
xchg
insl
sub
add
lods
xchg
sub
sub
cmp
bound
push
je
cli
push
stos
cli
mov
sbb
loopne
outsl
adcl
pop
outsl
push
bound
xor
sbb
or
inc
mov
das
xchg
cld
ljmp
jmp
pusha
inc
inc
in
push
popa
lahf
push
repz
mov
jge
fmuls
icebp
or
mov
mov
inc
jnp
jmp
lcall
add
pushf
jno
mov
or
imul
rorb
adc
loope
test
cld
mov
or
mov
mov
cmpsb
test
cltd
or
scas
lahf
add
xchg
sahf
test
pusha
add
pop
aaa
outsb
mov
inc
sbb
cs
adc
xchg
cli
cmpb
pop
int
pop
adc
loopne
insb
scas
adc
and
sbb
pop
xchg
cld
pop
jg
pop
outsb
mov
inc
mov
and
xchg
je
xchg
cmp
cmp
fstl
imul
or
call
roll
in
adc
clc
add
mov
xchg
mov
sub
and
addr16
add
lock
inc
dec
out
jmp
jl
ret
and
out
inc
push
xlat
mov
ja
add
sbbb
popf
aaa
push
pop
add
daa
jle
imul
popf
mov
aas
mov
cmpsl
mov
mov
inc
xchg
jne
cmp
jb
pop
mov
decl
jo
test
ret
or
cmpsb
and
dec
out
out
ret
movsb
mov
bound
filds
pop
xor
in
or
fistps
cltd
ret
scas
in
stc
inc
decl
fmuls
flds
test
jge
inc
cmp
cmp
lea
mov
std
xor
test
es
iret
dec
jns
out
je
fsubr
call
inc
cmp
pop
insl
add
and
xchg
cmp
xchg
pop
clc
cmpsl
mov
push
push
or
bound
jb
push
sbb
int3
dec
outsl
ja
ss
cmp
mov
nop
and
fs
pop
sbb
push
cmp
jp
scas
in
scas
dec
jge
cwtl
shlb
je
roll
in
sbb
test
repz
xchg
loopne
arpl
loop
fucom
dec
lea
add
or
mov
mov
or
mov
lret
outsl
jnp
in
sahf
mov
in
mov
add
mov
add
xchg
clc
test
ficoms
cmpsl
and
jg
sub
jno
pushf
rcr
and
mov
sbb
push
xor
xchg
test
mov
ja
fcmovnbe
popa
ret
in
jb
xor
sahf
mov
xor
es
rorl
xlat
dec
jmp
dec
andl
inc
push
andl
jmp
jl
ret
push
mov
hlt
lock
cmp
les
sbb
push
mov
xor
lock
in
cmp
push
add
rcll
push
aam
mov
fdivrs
xchg
push
test
lds
pop
mov
sbb
insl
in
lret
popf
add
jnp
cwtl
sub
out
int
pusha
int3
stc
jae
lock
cmpsb
imul
mov
push
shlb
pop
les
jmp
cs
mov
mov
or
xchg
sti
jecxz
fnstenv
jg
or
push
cs
adc
mov
lods
cmp
push
fwait
mov
out
cmp
xor
adc
scas
or
cmp
cwtl
jmp
cmc
pop
lock
inc
adcb
test
add
inc
mov
lret
cltd
pop
loop
jae
mov
aam
call
movb
lret
push
aaa
int
dec
sbb
and
call
stc
outsb
mov
mov
and
ficoml
es
lea
adc
mov
jecxz
scas
int3
js
pop
mov
xor
sahf
jmp
add
or
fwait
mov
mov
mov
jg
stos
jg
aad
rclb
sbb
push
fistpl
push
sti
shrb
rorb
jecxz
add
sbb
or
out
mov
outsb
ss
in
jge
aam
scas
fdivrs
std
incl
mov
fsubl
add
inc
push
cmpsb
pop
and
lock
inc
sti
cltd
sub
rcl
mov
cmp
shll
out
add
sbb
pop
lds
cmpsb
jo
sbb
push
or
push
rorb
fldenv
cmp
js
subb
popf
xchg
repz
nop
lcall
aam
jno
and
pop
not
fcompl
jmp
dec
mov
or
mov
in
or
and
pop
mov
movsb
outsb
push
loopne
inc
or
ljmp
out
scas
popa
push
sub
xlat
xor
gs
cmovl
dec
insb
mov
sub
jae
gs
inc
in
sbb
adc
xchg
xor
mov
cs
inc
ds
ret
rclb
mov
mov
xor
sub
mov
mov
xchg
clc
inc
or
lock
mov
sahf
xor
ljmp
sub
jle
push
and
inc
stos
jecxz
imul
lods
jae
mov
xor
pop
out
ss
cli
insl
arpl
imul
push
outsb
pop
jno
inc
and
popf
pop
and
rcl
xlat
mov
cs
hlt
ss
divb
inc
jae
sbb
cwtl
ljmp
rcrb
call
sbb
repz
mov
sbb
add
jbe
repz
out
pop
les
lret
iret
iret
test
outsb
fisttpll
sbb
cmc
cwtl
dec
and
mov
out
jae
aas
or
out
dec
rcr
fnstcw
notb
inc
jecxz
std
sti
mov
ja
lods
out
jns
decb
or
adcb
mov
scas
cmp
jle
stos
mov
xchg
data16
or
fidivrs
popf
cltd
subl
add
lds
in
repz
mov
pop
mov
mov
xor
dec
add
dec
push
sub
fs
push
cmp
push
daa
std
sbb
and
push
repnz
and
xchg
ljmp
pop
push
sarb
ret
jecxz
mull
mov
cli
xchg
and
xchg
cmp
mov
sbb
fsqrt
push
fstps
and
aaa
sbb
into
xor
out
add
xchg
mov
les
add
cmc
jns
int
jno
mov
jbe
push
mov
cmc
push
adc
ret
ja
enter
addl
rclb
shrb
push
sbb
or
dec
js
sbb
sti
jnp
imul
rcll
mov
cs
sub
in
mov
xor
pusha
inc
inc
leave
pop
lea
notb
lahf
outsl
mov
and
les
mov
add
cmp
mov
or
sbb
mov
push
jbe
and
xchg
fisttpll
enter
negb
jne
mov
andb
or
scas
lock
sbb
or
lds
je
imul
movsl
aam
mov
push
xchg
mov
movl
mov
iret
jb
xorb
mov
sbbl
adc
je
push
or
gs
sbb
test
inc
cmc
xchg
cld
mov
cwtl
insb
mov
sbb
into
pop
shll
mov
or
push
xor
das
pop
je
addl
lahf
sbb
sub
std
jae
xchg
test
ret
dec
cmp
repnz
push
inc
sbb
fs
lret
xchg
imul
mov
xchg
xchg
clc
fs
scas
pop
mov
mov
sbb
sub
mov
cmp
ja
adc
dec
das
or
pop
sahf
jbe
cld
jae
add
nop
jg
mov
daa
xchg
add
mov
or
repz
xor
mov
je
cmpb
mov
scas
cmpsl
sub
cmpsl
sti
in
in
jecxz
mov
inc
cmp
xor
sbb
loopne
dec
or
and
xor
jno
push
repnz
cmc
or
pop
xor
leave
mov
add
cld
lds
dec
js
ds
cmp
ret
mov
push
push
jo
xchg
sub
popl
aam
sbb
lds
shll
fdivl
in
xor
cmc
and
loopne
lahf
dec
push
fstpt
jle
mov
cmp
imul
mov
in
cli
fadds
pop
xor
add
add
leave
repz
dec
mov
rorl
jno
clc
aam
outsl
gs
mov
in
sub
imul
arpl
xchg
out
jo
loop
in
lcall
and
cmp
add
sbbb
xor
ljmp
dec
xchg
mov
ja
sahf
sub
loop
daa
sbb
cmp
dec
inc
pushf
cmpl
fstl
sub
sbb
lret
mov
inc
jne
or
or
cmp
push
mov
dec
mov
loopne
or
xchg
sbb
fnsave
mov
fisubl
mov
iret
cwtl
int
pop
inc
mov
into
rcrb
sahf
mov
adc
mov
xchg
or
fnstsw
mov
mov
dec
mov
sbb
sub
mov
imul
sbb
and
mov
call
je
add
imul
mov
xor
ja
aaa
cmp
pop
add
jno
arpl
inc
repz
jne
scas
pop
call
aad
jle
testb
cmp
and
cmp
mov
lods
fwait
out
lret
iret
icebp
xorl
xchg
dec
movsl
outsl
ds
mov
repnz
xchg
mov
sub
mov
mov
xor
mov
push
push
or
cs
push
ds
and
sbb
shrl
mov
inc
or
xchg
jmp
xlat
call
cltd
or
pop
lea
clc
das
imul
or
sbb
jp
pusha
mov
not
lahf
cs
orl
mov
decl
repnz
or
insl
jecxz
testl
sub
dec
xor
and
add
pop
inc
jns
cmc
xchg
or
inc
push
jge
push
insl
imul
mov
inc
xor
push
insl
mov
mov
int3
movsl
andb
mov
lret
outsl
mov
xor
push
cmp
push
xor
xchg
add
push
mov
loop
sub
pop
push
inc
push
sub
outsl
fwait
sub
ficoml
ret
ss
into
sub
lds
pop
andl
stos
jmp
push
lods
es
mov
cmp
aad
or
pop
add
outsb
mov
push
lret
in
lods
xor
popf
insb
loopne
push
pop
xchg
das
fcompl
mov
lret
cmp
push
jmp
test
push
scas
and
cltd
jmp
sahf
cld
lea
popa
push
jbe
and
pop
outsb
fstpl
lds
mov
pop
hlt
outsb
mov
cmp
jb
dec
cmpsb
mov
inc
inc
sub
lods
mov
dec
jge
popf
xor
cmp
adc
fcmovnbe
xor
push
mov
adc
mov
sbb
insb
popa
sbb
jp
js
testb
popa
fldl
fwait
lcall
cwtl
out
mov
adc
adc
push
subl
jbe
cltd
out
repz
add
jl
neg
xor
mov
repz
cli
lods
and
negl
scas
enter
sbb
jns
popf
xor
sbb
aaa
push
mov
pop
test
push
pop
dec
adc
sub
xchg
ror
repz
jmp
in
rorl
xchg
xchg
je
dec
cmp
adc
inc
mov
mov
push
jmp
scas
stc
xor
and
mov
pop
sbb
mov
mov
cmpsl
add
jae
jns
jno
movb
xor
out
loop
mov
jg
sbb
dec
ss
pusha
xchg
clc
inc
cwtl
mov
aas
or
mov
imul
fcomip
addl
pop
jmp
test
stos
inc
cltd
add
lcall
sub
mov
fxch
mov
sub
es
and
xor
cmp
in
mov
es
gs
mov
add
imul
addw
cmp
clc
mov
adc
imul
xchg
jo
aaa
sbb
fistl
movsl
cmp
xor
test
lock
popa
adc
mov
repnz
lods
adcb
cmc
fcoms
mov
cmpsl
leave
xor
xchg
add
loop
inc
push
insb
jo
fst
rclb
rclb
stos
adc
xchg
mov
jmp
push
or
addr16
fldt
call
and
in
xor
stc
cmpl
mov
cmp
jl
sub
inc
pop
stos
aad
pop
ret
and
sub
mov
add
nop
jnp
cmp
out
cmpsb
lods
pop
test
add
rcll
lret
lret
mov
outsb
stos
xor
dec
pop
push
add
pop
jmp
daa
adc
clc
cld
sbb
popa
lods
shll
adc
outsl
push
dec
jnp
mov
out
pop
push
loopne
lea
xlat
call
rol
lods
jns
cmp
sub
inc
in
test
jle
xchg
cwtl
outsl
push
mov
mov
mov
inc
mov
pop
notb
push
pop
cld
mov
test
jle
test
stos
or
leave
push
ja
sub
mov
popf
lret
mov
es
sub
cmp
push
xchg
imul
inc
jp
sub
lret
jecxz
sbb
cmpsb
jp
add
sbb
psrad
push
add
push
or
sub
sub
outsl
xchg
pushf
dec
daa
je
ja
fiaddl
mov
fs
loop
sub
xchg
mov
dec
fidivl
sub
jnp
xor
pop
insb
ret
xor
mov
pusha
jmp
push
cmp
mov
adcl
loope,pn
aad
movsl
push
xor
in
sbb
repz
test
pop
lds
push
mov
cltd
test
xchg
mov
mov
jae
lods
jno
sbb
xchg
jo
fisubrl
jg,pt
notb
or
fnstsw
in
cwtl
cmp
mov
lods
aaa
push
jp
dec
sbb
sbb
dec
mov
je
dec
xor
subl
pop
mov
out
jbe
jb
and
mov
push
sti
test
or
cwtl
dec
sahf
imul
nop
fdivs
sub
mov
int
into
push
add
loop
mov
iret
xchg
test
out
inc
pop
cmc
punpcklwd
jecxz
mov
outsl
sbb
js
or
jb
fstl
inc
xchg
test
mov
fisubrl
ficompl
clc
repnz
mov
adc
add
shlb
subl
mov
sahf
sub
leave
push
out
push
jmp
lds
add
clc
fnstcw
add
dec
adc
mov
aaa
mov
stos
es
mov
ljmp
lea
pop
ficompl
das
add
sbb
cmpsb
xlat
js
lea
and
push
xchg
mov
push
and
xchg
pushf
lock
pop
les
inc
les
jle
int
ret
jecxz
leave
addr16
pop
mov
push
push
fidivrs
loope
ds
mov
jnp
cmpsb
xchg
add
lret
aas
jle
and
sub
pop
gs
jmp
stos
mov
pop
icebp
sarb
or
push
rclb
add
adc
push
leave
sub
jecxz
popl
cmp
and
jns
dec
mov
fdivrl
push
pop
call
je
xchg
pop
in
jmp
sub
lcall
aad
adc
in
or
clc
popf
cmp
jne
mov
leave
sbb
jb
movsb
jmp
leave
cmp
enter
out
popf
icebp
das
flds
stc
in
sub
and
add
push
jo
sbb
push
int3
aas
pop
push
lret
mov
pop
dec
sahf
aaa
jg
mov
sbb
push
orb
jp
xor
in
mov
or
jmp
jbe
mov
xchg
xchg
out
jo
or
std
jg
xchg
push
ja
dec
bnd
aam
test
fmul
push
out
mov
loopne
mov
arpl
fisubrl
push
fsubrs
gs
mov
mov
lret
cs
fs
sub
fwait
jecxz
jp
roll
mov
fimull
pop
adc
sbb
adc
push
lret
add
aam
xchg
gs
les
push
lret
xchg
subl
out
xchg
out
pop
jg
stos
test
xor
lods
jge
jmp
pop
mov
add
add
outsb
mov
pushf
push
xor
es
push
jbe
nop
popf
lds
fldt
iret
add
mov
and
mov
mov
cmp
mov
fsts
and
and
xor
pop
add
enter
mov
movsb
adc
mov
inc
in
inc
imul
mov
test
pop
and
or
sub
testl
fcmovu
outsl
loopne
cmp
popa
mov
xor
hlt
pop
repnz
jbe
repz
adc
push
xor
xchg
xor
lcall
and
add
cmpsl
pop
sbb
xchg
cmp
fstpt
jae
scas
aas
inc
mov
sbb
lcall
into
fldcw
insl
mov
cli
pushf
pop
mov
rolb
push
cmc
lods
xchg
adc
jne
push
call
adc
jp,pn
and
jno
xchg
dec
mov
pop
push
rolb
sub
nop
add
xor
xor
add
rcrl
mov
or
dec
push
rcrb
test
pop
add
add
jb
push
add
out
xchg
movsl
pop
inc
mov
jp
xor
sub
mov
inc
or
sbb
in
lock
aam
stos
fldenv
dec
pushf
mov
pusha
push
sub
mov
test
or
loope
dec
addr16
test
loopne
lahf
loop
cmpb
repz
popa
push
adc
aam
arpl
cmpsb
mov
inc
das
lock
mov
mov
pop
pop
dec
mov
dec
fists
xchg
jne
clc
adc
clc
mov
fst
sarl
pop
imul
jne
test
outsb
cmpsl
mov
je
fdivrl
in
xor
jno
xor
adc
nop
pop
cmp
mov
or
pop
dec
or
jmp
push
testb
int
xor
nop
mov
jp
fisubrl
fisttpl
xchg
sbb
or
ficoms
lods
dec
mov
bound
test
xchg
shrl
xor
jmp
mov
mov
xorb
repz
clc
mov
lahf
out
enter
testb
inc
jle
rorl
repz
jo
mov
jnp
les
mov
out
and
push
fldl
or
sub
loope
jae
pop
lcall
daa
scas
and
scas
pop
xchg
sbbl
aas
inc
push
and
popa
aad
adcb
ret
sub
adc
enter
jne
rol
fcoms
mov
push
enter
outsb
adc
fdivrp
rcrb
outsl
scas
sbb
and
jo
pusha
mov
pop
dec
cmc
jg
int3
shl
adc
or
aam
jmp
outsl
pop
hlt
int
fistpl
sub
pop
sarl
hlt
and
pop
je
out
test
jmp
cmp
inc
jb
or
daa
mov
mov
adc
sub
pop
adcl
repz
popa
aaa
add
cmpsb
mov
adc
clc
push
xor
fnstsw
or
mov
repnz
adc
xchg
fmul
aam
inc
jge
mov
jb
cmpsl
adc
or
push
fucom
fstl
and
rclb
rolb
pop
test
leave
sub
mov
mov
dec
dec
sbb
fldenv
sbb
sub
ret
in
lods
mov
push
pushf
pop
arpl
cmp
shr
jge
test
stos
mov
sbb
les
scas
out
subb
fisubrs
in
rcrl
fsubrp
fcmovb
cmc
xchg
icebp
iret
adc
lock
xlat
xor
dec
stc
dec
cmp
add
mov
jge
add
mov
xor
pop
mov
dec
clc
push
or
fisttpl
jns
inc
dec
fnstcw
ja
hlt
scas
in
xor
popf
nop
call
adc
dec
xchg
cld
rorl
inc
mov
dec
out
adc
fwait
adc
jl
sti
xor
pop
adc
push
and
jb
cmp
mov
cmpsb
mov
or
testb
cmpl
push
push
imul
mov
stos
xchg
push
arpl
jp
adc
cmp
add
roll
push
inc
xchg
ret
lret
rorl
inc
adc
add
push
cld
or
xor
call
or
adc
pop
aad
sbb
jbe
shll
cmp
out
pop
cmp
mov
scas
adc
loopne
mov
or
and
out
jne
cmc
xchg
pop
push
test
dec
in
cs
push
out
jmp
mov
add
popf
cmp
and
rcr
int
pop
mov
pop
popa
xchg
xor
jne
jae
lret
dec
cmp
clc
add
sbb
stos
cmp
or
fisttpl
test
pop
inc
out
cmp
inc
aam
xlat
jbe
jecxz
add
xchg
ljmp
mov
or
dec
cli
jb
add
pop
pusha
popa
out
cmpsl
dec
adc
arpl
iret
dec
negb
sbb
mov
daa
ss
outsl
add
pop
dec
xor
cmp
lods
cmp
or
es
or
dec
jecxz
jno
dec
mov
popa
cmp
icebp
jge,pt
rcr
aam
adc
sub
hlt
in
mov
mull
filds
int3
sub
mov
pop
mov
int
mov
xor
into
loopne,pn
lds
push
xchg
sti
stos
or
imul
test
scas
mov
sub
push
fimuls
mov
test
mov
in
pushf
pop
or
push
mov
cmpsb
xchg
jecxz
sbb
mov
mov
nop
shll
ret
push
or
mov
or
imul
out
scas
mov
call
roll
cmp
mov
push
jnp
push
pop
ja
mov
jno
sbb
xor
test
lcall
lahf
mov
lret
push
lret
xchg
xor
movsl
cmp
test
dec
xchg
clc
outsb
adcb
and
add
inc
pop
add
push
ljmp
xchg
rcrl
xor
jne
sahf
lock
arpl
mov
dec
std
push
pop
adc
mov
adc
rcrb
or
add
out
das
loop
pop
xchg
leave
aas
iret
add
in
fs
in
push
pop
arpl
fisubs
adc
adc
std
ds
fimull
in
imul
mov
adc
pop
add
pop
das
bnd
dec
je
mov
mov
sub
adc
movsb
call
jnp
inc
cmc
lods
mov
loope
xor
add
out
inc
repz
enter
mov
jb
push
int3
aaa
ret
sahf
je
bound
outsb
jb
gs
mov
leave
mov
mov
ret
ror
mov
mov
addl
pop
fbstp
jle
imul
nop
jne
outsb
inc
sbb
adc
lahf
test
cmp
jns
inc
les
jns
pop
rcl
icebp
jns
js
add
xchg
push
decl
enter
push
addr16
jg
adc
aam
pop
mov
fcmovne
dec
in
lea
outsb
inc
and
lods
cmp
loopne
mov
pop
lea
jbe
or
mov
mull
mov
mov
adc
nop
jecxz
cs
push
nop
add
mov
loope
outsl
jae
fs
and
lahf
mov
ljmp
lret
sbb
push
les
sub
scas
fistl
dec
popf
call
jns
push
xchg
mov
add
outsl
or
subb
leave
int3
mov
call
mov
test
push
or
add
dec
pop
fnsave
adc
sub
imul
inc
pop
lret
push
lret
sub
fisubs
adc
jne
lds
les
mov
push
jle
push
in
pop
jl
leave
scas
gs
and
mov
sbb
test
xor
dec
dec
push
mov
ljmp
gs
inc
outsl
popa
inc
in
orb
mov
cmpsl
je
xor
mov
shlb
sub
xor
je
sbb
jnp
xor
sub
mov
cmpsl
sub
es
mov
es
mov
stos
adcb
lret
mov
jns
sub
shld
push
jbe
movsl
mulb
push
sub
in
pop
loop
mov
dec
cmc
inc
fdivs
mov
in
push
inc
cmpsb
inc
std
cmpsl
xor
mov
add
inc
dec
xchg
test
lcall
das
mov
pop
xchg
and
fcompl
sub
inc
test
into
push
xorl
mov
mov
psubsb
dec
cmc
pop
xor
dec
shrb
xchg
xor
scas
icebp
lock
fwait
in
adc
push
fwait
pop
xchg
cltd
je
add
cltd
mov
fsubl
inc
cmp
pop
popf
sbb
aas
xor
hlt
sbb
ret
cmp
pop
test
cltd
das
dec
fsts
mov
push
aaa
mov
vmovlps
inc
adc
int
xchg
loope
add
aaa
fnstenv
push
mov
es
cmp
push
mov
pop
cld
or
fwait
iret
gs
mov
push
lods
mov
gs
loopne
movsb
loopne
mov
mov
lea
sbb
pop
test
xchg
mov
arpl
push
cmp
hlt
les
sub
shrb
icebp
ret
dec
jno
mov
in
data16
mov
and
sbb
popf
and
push
lds
mov
lret
out
cmp
fimuls
push
pop
adc
push
unpcklps
xchg
and
aad
jl
ficomps
lahf
icebp
xor
mov
dec
imul
dec
xchg
sbb
xchg
xchg
in
mov
cli
daa
clc
or
jp
dec
adc
pusha
incl
cs
cmpsb
shr
cmp
xlat
int3
mov
outsb
bound
mov
ficompl
addr16
into
or
inc
push
xor
sub
push
insl
jmp
lock
mov
cwtl
stc
inc
push
cld
out
xchg
push
adc
adc
jg
fsubs
xchg
mov
xorl
sbb
mov
mov
cltd
in
pushf
sbb
pop
inc
push
fcmovnbe
add
sbb
pop
mov
fistpll
std
add
fsubrl
push
push
and
les
bound
adc
push
inc
mov
movsl
mov
xor
inc
rorb
repz
popf
cmp
sbb
lahf
pop
loope
push
jmp
add
add
sbb
jg
stos
push
dec
aad
out
out
lods
stc
mov
lea
pop
rcrl
in
cmc
js
jbe
push
cmp
jl
pop
or
cs
cmp
sbb
dec
loopne
xor
and
dec
jo
jge
int
pop
sub
xchg
mov
or
mov
jmp
add
adc
stos
sub
imull
cmpsl
shl
subl
xor
and
or
push
jl
jp
adc
daa
push
js
ret
lock
fs
aam
add
dec
popa
mov
push
pop
mov
dec
jns
add
repnz
mov
dec
xchg
lahf
sbb
sahf
addr16
pop
lret
mov
add
je
test
xchg
mov
cmp
cs
imul
andb
packuswb
jne
push
push
addr16
jecxz
jp
rclb
sti
inc
and
inc
mov
xchg
xor
mov
jnp
mov
stos
xsha1
cmpsb
dec
cmp
dec
loopne
stos
add
sub
or
aad
xor
enter
xchg
sbb
inc
sub
inc
js
push
xchg
mov
adc
jl
jns
pop
xor
lcall
call
pusha
xchg
test
js
sti
sti
sbb
inc
fidivrs
cmp
mov
inc
test
sub
loopne
sti
lock
gs
imul
sub
add
ret
pop
enter
dec
ljmp
jbe
fldcw
rol
adc
aad
dec
decb
cmp
scas
ss
sbb
test
inc
lock
iret
repnz
rclb
sub
mov
xor
xchg
jmp
lcall
push
xchg
jecxz
cmp
dec
push
aad
cmp
push
xchg
xchg
lods
arpl
lcall
les
fadd
sub
mov
lock
sbbb
aad
dec
ds
sbb
ljmp
je
adc
lret
test
dec
incl
or
sub
adc
stos
sbb
inc
mov
lods
out
add
sarl
xchg
stc
sbb
add
lods
dec
sbb
lcall
in
in
xor
sti
adc
push
idivb
mov
repz
outsl
cmc
sahf
cs
and
sub
movsb
cmc
xor
lods
pop
push
lock
stos
cwtl
imul
mov
adc
add
push
or
mov
fld
bnd
cld
and
stos
mov
jecxz
gs
bound
enter
push
mov
in
gs
sbb
adc
cmp
call
cmp
mov
jmp
push
mov
dec
xchg
push
int
or
xor
inc
pop
loopne
inc
xchg
mov
nop
data16
aaa
test
xor
push
fimuls
sub
icebp
loopne
mov
pop
cmp
mov
or
mov
mov
xchg
xchg
push
int3
and
mov
filds
mov
push
cli
popa
daa
mov
push
push
sahf
das
add
out
cmc
arpl
and
popa
pop
stos
popa
sub
lock
push
push
inc
cwtl
cltd
push
into
inc
cmp
mov
int3
daa
loopne
lahf
outsb
mov
popa
mov
in
lcall
xor
outsl
mov
daa
mov
in
xor
loopne
pop
fmull
mov
out
sub
mov
jl
aaa
and
lods
xor
fcompl
sub
mov
push
push
xor
enter
pop
push
scas
inc
add
test
and
mov
or
sti
sarl
sbb
pop
idivl
sbb
jbe
dec
stos
add
nop
lock
repnz
je
inc
pop
jo
sbbb
sbb
pop
pop
pop
nop
jbe
jg
lret
add
in
out
call
pop
xchg
lahf
sbb
push
sub
imul
pop
es
push
lret
clc
mov
nop
aam
or
mov
fs
sahf
sub
dec
cmp
cwtl
push
pop
mov
and
pop
lock
cld
mov
push
in
xchg
ret
push
sbb
aaa
div
xchg
pop
movsl
test
lahf
push
ljmp
mov
and
dec
cwtl
xor
into
rcrl
sbb
dec
test
adc
mov
mov
in
sarb
mov
shlb
pop
and
in
pushf
fnstenv
or
pop
mov
push
ret
pop
jecxz
fimull
movsb
cmp
and
mov
cmp
xchg
aaa
pushf
lods
ficomps
inc
arpl
or
imul
popa
xor
pop
add
clc
push
adc
andl
push
or
sub
push
push
adc
dec
loop
dec
test
cmp
insb
cltd
in
or
push
or
or
stc
rclb
out
test
sbb
pushf
mov
mov
mov
sub
shrb
call
sbbl
test
jae
out
sub
ljmp
push
in
repz
jl
xchg
aas
aam
lret
adc
sub
clc
aam
sbb
inc
fdivrl
icebp
mov
mov
ljmp
ret
clc
fs
shll
pop
mov
arpl
sti
repnz
sub
lcall
fiaddl
push
jp
in
mov
pop
xor
mov
mov
inc
loopne
add
andb
pop
cli
int
int
inc
lret
popa
in
lea
add
mov
stos
lcall
lds
das
orl
xor
adc
insb
aad
mov
aas
lret
pop
das
fbld
mov
pop
test
pop
cmp
mov
shll
add
and
sub
or
adc
adc
shll
xor
pop
push
sbb
std
mov
jmp
roll
xchg
push
push
into
or
jle
push
lcall
inc
inc
jno
aas
dec
pop
xchg
cmp
shll
sbbl
inc
movsl
hlt
sub
sub
push
dec
fcoms
dec
in
and
sbb
inc
sub
dec
stos
sbb
jae
jo
stos
xor
mov
xchg
addr16
mov
mov
mov
or
adcl
decb
jecxz
aaa
sahf
decl
mov
mov
int
insb
mov
pop
test
lods
rclb
or
test
push
adc
pop
cmp
push
lea
pusha
mov
out
scas
sub
add
adc
lods
cmp
lret
cmpb
pop
ljmp
je
and
mov
icebp
insl
ret
pop
push
popf
pusha
jnp
push
aaa
jg
aam
xor
sbb
in
xor
pop
sub
and
add
cmpsb
and
icebp
incb
call
je
fists
sbb
sbb
leave
pop
filds
andl
lods
add
and
xchg
js
shlb
shll
mov
lret
mov
js
dec
aaa
xchg
scas
xchg
mov
jp
xor
lock
cmp
mov
movsb
jg
mov
rolb
in
add
cmp
cltd
jbe
dec
mov
or
add
sbb
mov
mov
pusha
inc
fistps
sub
icebp
ja
mov
idivl
xchg
or
push
cmp
dec
dec
sbb
dec
pop
mov
in
lret
out
cmpsl
lahf
arpl
pop
add
popf
into
out
sub
cmp
sub
repnz
lods
je
fmul
sbb
cmp
leave
js
xchg
test
xchg
xor
loop
loope
orb
cli
mov
call
inc
dec
mov
xchg
mov
sub
mov
jae
sbb
sarb
ja
inc
sbb
push
push
cmp
dec
shrl
fdivrs
arpl
mov
rclb
jb
push
sub
rcrb
jb
stc
out
or
ret
jnp
out
or
inc
fwait
lahf
movsl
sahf
pusha
das
fs
cmp
jo
inc
mov
out
cmp
push
pop
inc
mov
adc
test
in
add
fs
les
sub
stos
movsb
fcoms
sub
adc
pop
jl
xor
lret
ret
or
dec
scas
les
arpl
inc
cmpsl
and
mov
in
xchg
dec
push
in
adc
lret
push
ror
push
mov
je
and
push
dec
movsb
pop
mov
mov
int3
pop
cmp
adc
or
pusha
outsb
pop
popa
fldl
xchg
scas
fwait
or
push
mov
ds
mov
jbe
aas
data16
pop
sub
scas
int3
sub
mov
fstpt
mov
mov
pop
push
hlt
scas
test
sub
out
push
std
out
insb
call
add
mov
dec
cmc
adc
scas
jb
cmpsb
push
or
sbb
les
lret
aam
sub
cmp
add
inc
shrl
xchg
aad
rcrl
jnp
push
test
xchg
push
adc
cmpsl
idiv
mov
out
ljmp
int3
cmp
test
cmp
enter
mov
pop
fsubs
fadds
dec
and
movsl
jle
loop
inc
mov
or
jle,pn
or
cltd
cmp
cmp
je
jp
leave
mov
sub
pop
cmp
idivb
or
adc
hlt
jne
sti
test
fwait
aad
pusha
lea
sbb
mov
mov
dec
mov
jmp
lcall
push
mov
pushf
fiaddl
loopne
sub
ja
adc
jbe
lahf
add
mov
adc
nop
cld
push
pop
jmp
cmpsl
loope
sbb
or
or
loopne
fwait
pop
push
cmp
pop
fwait
xchg
das
adc
push
sarb
mov
and
mov
jecxz
stos
fisubl
sub
sbb
pop
daa
mov
decb
mov
sbb
sti
push
sub
repnz
stos
dec
loop
push
call
mov
jo
push
maskmovq
notl
mov
mov
or
push
out
aas
lods
pop
rcrl
and
repnz
fwait
jecxz
or
pop
and
pop
icebp
cld
stos
sub
clc
stos
mov
cs
cmp
insl
mov
testl
xor
xchg
frstor
leave
stos
xchg
test
loop
idivb
push
sahf
pop
inc
pop
es
repz
jo
fwait
repz
mov
pushl
jnp
dec
lret
imul
cmpsl
mov
sub
mov
mov
sub
nop
inc
cmp
hlt
mov
in
je
notl
addb
or
dec
xchg
jp
call
dec
add
cmp
mov
frstor
add
and
mov
xchg
inc
loop
pop
sub
fimuls
lret
test
mov
lock
mov
xchg
fs
mov
and
xchg
movsl
or
test
mov
fucomp
xor
dec
adc
mov
adc
incl
push
xor
adc
push
jo
mov
mov
mov
in
ret
enter
inc
sub
lcall
mov
inc
je
inc
push
addr16
addr16
mov
push
negb
fdivs
mov
adcb
or
add
aad
fmuls
ss
mov
aam
test
jns
xor
sub
sbb
cmp
test
add
test
cli
std
iret
into
jne
adc
xor
jnp
ss
loope
xor
scas
int3
in
add
push
das
xor
inc
mov
and
leave
add
adc
dec
clc
sti
jbe
mov
cmpsb
jne
sub
clc
jae
div
jecxz
lods
mov
xchg
and
xchg
jp
sahf
pop
rorl
sub
xchg
pusha
xchg
pause
push
xor
sub
movsl
leave
test
cmpsl
xchg
inc
jbe
repz
adc
inc
jbe
movsb
xor
icebp
fwait
je
addr16
out
or
insb
adc
mov
ret
daa
jnp
mov
roll
push
out
aas
jge
scas
sub
sti
pop
xchg
xor
push
mov
pop
mov
add
jg
test
repnz
hlt
ret
in
cwtl
xor
mov
insb
mull
pop
cmp
js
cmpsl
mov
das
in
and
flds
sub
xor
jp
aam
mov
pop
or
cmp
sbb
dec
leave
push
lret
scas
sub
hlt
outsl
fwait
jle
inc
inc
xor
adc
jbe
cmp
clc
pop
sbb
ror
sti
mov
dec
arpl
mov
scas
jg
das
mov
imul
inc
in
push
ljmp
xchg
push
lret
cmpsl
cld
mov
adc
xor
cmc
jmp
sub
cs
loope
nop
xchg
cmp
shl
xchg
stos
adc
bound
push
xchg
movsb
mov
mov
push
int3
enter
xlat
xor
test
cwtl
pop
jno
inc
push
mov
cmc
xor
lock
rclb
cmpsl
mov
pop
fidivrs
cmp
push
mov
jge
hlt
pop
adc
adc
mov
add
mov
shl
push
dec
inc
jbe
movsl
xlat
push
fwait
incb
cs
adc
xchg
out
mov
xchg
sub
mov
jne
cmp
fisttps
mov
cmp
enter
out
xchg
add
push
cmp
push
jno
mulb
fldenv
jge
jnp
testb
inc
test
push
mov
jns
sub
ds
in
inc
imul
mov
xor
xchg
imul
dec
ljmp
add
mov
adc
cmp
sub
push
imull
mov
subb
jecxz
xlat
xchg
loope
mov
xor
add
mov
jp
lret
orb
jno
dec
inc
jns
mov
popa
js
stos
lret
clc
fiaddl
cld
adc
jl
or
adc
sbb
adc
adc
addr16
sub
test
test
lock
cmp
fcomp
dec
push
les
cmp
das
movsl
mov
mov
push
mov
adc
jecxz
jnp
popa
lret
in
or
mov
test
dec
pop
sbb
sub
inc
adcb
sarl
shl
sub
leave
xchg
mov
je
xchg
mov
push
add
mov
insl
jge
mov
and
pop
pop
and
jo
sbb
stos
movsl
pop
nop
imul
lods
pop
pusha
xchg
in
cmc
and
mov
push
gs
repz
in
or
or
mov
jmp
mov
mov
testl
testl
and
cmp
lret
enter
movsb
movsl
dec
lds
and
xor
cmp
add
mov
sub
loop
sbb
adc
pop
pop
mov
mov
xchg
pop
movsb
xchg
aaa
xor
and
into
dec
inc
jge
cs
fs
js
jae
int3
cmp
fsts
push
or
jmp
addb
test
fdivs
xor
and
dec
cmpsb
repz
xchg
or
call
add
inc
stos
loop
dec
mov
xchg
je
or
add
adc
pop
inc
sarl
add
lret
pop
dec
jmp
add
ds
mov
add
or
adc
xor
mov
insl
cmc
movsl
push
jnp
iret
adc
push
movsl
jl
cmp
out
frstor
test
dec
jecxz
jne
loopne
std
or
data16
outsl
jl
adc
sets
xchg
xor
repnz
mov
inc
cvtdq2ps
pop
jle
test
arpl
ds
popf
dec
outsb
int3
pusha
jecxz
cmp
pop
daa
ss
sbb
int
jae
cltd
mov
xchg
mov
jno
nop
test
add
outsl
insl
ret
jb
arpl
xlat
or
pop
sub
cmpsl
cmpsl
aam
arpl
or
xchg
in
scas
xchg
mov
arpl
cmp
rcrb
daa
jmp
sbb
enter
jecxz
xchg
popf
or
jo
lcall
push
cmp
sub
aam
lea
mov
jmp
scas
call
pushf
push
addr16
xor
adc
and
mov
or
stos
mov
lock
jg
ds
push
clc
gs
test
inc
mov
ljmp
dec
xchg
add
xchg
and
ret
pop
sbb
jno
xchg
ja
add
fildll
imul
leave
mov
aaa
repz
sub
pop
js
testb
les
icebp
rolb
push
mov
push
sbb
inc
movsb
out
sub
stos
cmc
mov
movl
lods
inc
pop
inc
lods
cmp
xor
jae
adc
push
mov
adc
movd
js
out
sbb
mov
cmc
sbb
js
cs
pop
add
in
sub
pop
mov
jmp
pop
sub
cmp
xchg
jae
add
cld
jp
lods
sub
inc
test
inc
pop
mov
or
pop
add
or
cwtl
and
or
movsb
jo
jle
xor
xchg
lea
insb
and
push
decl
sahf
pop
out
mov
or
mov
leave
stos
mov
or
dec
mov
cmc
lret
loope
cmc
outsb
mov
and
pop
or
or
xor
jno
or
cmp
jo
rclb
or
pop
mov
adc
mov
inc
nop
mov
dec
std
jle
mov
mov
pop
lahf
jp
xchg
xor
subl
push
in
or
aas
int3
xor
int
xchg
pop
inc
daa
out
in
inc
xor
xchg
mov
sub
sahf
jmp
pop
aad
mov
xchg
inc
xor
les
pop
loop
xchg
sbbl
xchg
jg
ja
fisttpl
add
insb
mov
and
inc
jb
sub
movsb
lods
push
notl
mov
jle
aam
sub
iret
adc
dec
xchg
and
lea
psraw
mov
shrb
adc
insb
stc
enter
rol
test
xchg
pop
mov
add
test
stos
and
movsb
aas
fwait
inc
in
dec
xchg
xor
dec
ja
cwtl
daa
sbbb
dec
int
movb
inc
stos
adc
movsl
and
out
bound
mov
cli
dec
pop
aaa
sub
xor
lock
mov
mov
aam
loop
jl
vpackssdw
sbb
stc
ficoml
mov
sbb
xchg
push
sahf
jae
xor
sbb
adc
mov
sarl
mov
stos
int
push
decl
lock
push
jo
dec
testb
xchg
iret
cmpsb
es
icebp
mov
xor
fstpl
xor
add
loope
aam
js
xor
lods
inc
mov
frstor
std
mov
add
push
ja
sub
ror
pop
push
scas
lea
dec
sbb
jl
pop
out
sub
into
push
sarb
sbb
inc
sahf
test
push
sbb
dec
sub
out
jb
aas
sub
pop
out
push
daa
lea
call
sub
pop
pusha
pusha
dec
loop
push
cmp
sbb
and
in
aas
xchg
leave
out
cmp
xor
test
push
fisubrl
jecxz
cmp
and
ljmp
fistpll
pop
loopne
js
adc
mov
xchg
inc
mov
ror
retw
fs
inc
mov
cmpsb
pop
lcall
mov
push
pop
add
pop
adc
out
insb
mov
hlt
dec
in
push
push
ficoms
fwait
jp
jl
or
lcall
ret
jo
mov
mov
addr16
lcall
cmp
and
cmp
mov
xor
xor
das
xchg
into
inc
jo
mov
sbb
cmp
ljmp
mov
cmp
mov
mov
jle
xchg
pop
imul
ja
mov
repz
leave
push
push
fs
es
xchg
loop
imul
pop
leave
pushf
out
inc
clc
ffree
fucomi
es
pop
lcall
cmpsb
shll
imul
popa
ret
and
cmpl
mov
imul
aad
leave
xor
xchg
cmp
add
dec
sbb
and
xchg
mov
cwtl
cwtl
movsl
jmp
mov
arpl
inc
stos
push
out
shlb
scas
mov
nop
outsb
cwtl
std
pop
outsl
mov
movsb
cli
cmp
xor
in
xchg
lock
sub
aaa
pop
leave
fldt
sbb
adc
sbb
xchg
out
in
push
dec
or
sbb
lfs
int
inc
cmp
pop
mov
and
fisubrs
add
incl
and
hlt
cmp
jge
mov
sbb
adcb
mov
xchg
dec
inc
ja
rcrl
in
lods
inc
std
jne
frstor
pop
push
pop
mov
pop
jnp
arpl
lds
sub
xchg
xchg
sbb
adcb
rcrl
mov
enter
cmpsb
std
add
xor
fstpt
fnsave
jg
adc
shlb
lods
dec
mov
scas
orb
lret
xchg
xchg
into
lahf
outsl
dec
pop
cmp
stc
cmpsl
dec
filds
orl
cwtl
xor
es
sub
pop
int3
nop
inc
out
xchg
add
jp
xchg
rol
dec
mov
dec
outsb
xchg
mov
in
test
in
jo
push
sbb
dec
nop
jle
push
fnstenv
jl
popf
pop
mov
mov
push
cvttps2pi
jle
imul
mov
out
mov
pusha
cld
mov
rcrb
pop
jbe
xor
jl
xor
rol
xchg
mov
lret
cli
shl
hlt
mov
rclb
jecxz
outsb
jns
mov
in
mov
insl
cld
mov
xor
or
cmc
pop
repz
loopne
and
mov
icebp
xchg
add
xor
mov
in
ret
push
dec
insb
fildll
sbb
jb
scas
push
outsl
dec
scas
test
add
add
pop
lret
lahf
das
fwait
sub
jl
dec
mov
in
push
mov
imul
int
push
sbbb
cmpsb
test
cmp
sahf
notl
sbb
lods
xchg
loope
mov
lcall
lret
add
insl
fcomps
cs
push
fidivrl
cli
jge
lcall
or
mov
imul
xchg
push
divl
cmc
dec
inc
cmp
mov
push
inc
test
rorl
fsub
add
cli
adc
inc
mul
shll
and
or
fcomp
add
ret
imul
cmp
jge
out
movsb
dec
add
arpl
aad
arpl
cmp
pushl
cs
enter
call
xchg
call
mov
icebp
sbb
xor
into
inc
clc
push
mov
mov
fucom
test
mov
push
je
sub
dec
imul
xchg
xadd
mov
pop
std
lods
cmc
pop
push
fistps
xchg
xchg
clc
xor
mov
add
adc
add
sbb
std
stos
addr16
add
sub
sub
les
mov
pop
fwait
mov
jp
lcall
fisubl
clc
test
ret
lcall
sahf
jl
mov
not
push
and
sub
xchg
popf
mov
jmp
push
mul
cmp
jge
xor
sbbb
adc
outsl
cmp
inc
test
adc
cmp
dec
inc
icebp
inc
test
ficoms
divl
mov
popf
loope
add
push
push
push
int
cld
or
mov
ds
cmc
hlt
popf
dec
pop
pushf
inc
sbb
call
sbb
cmp
mov
push
iret
mov
dec
clc
xchg
jne
out
nop
icebp
scas
repz
xor
mov
sarl
popa
dec
cmpl
and
mov
sbb
xchg
cmp
mov
sahf
mov
add
lods
dec
adc
cmc
out
mov
fstl
sbb
shl
sahf
adc
inc
push
divb
dec
shrb
sub
pop
aam
adc
fildl
sub
pop
add
xor
movzwl
cli
popa
stos
sbb
mov
lret
movl
sbb
xchg
xchg
push
sahf
pop
xor
dec
movsl
adc
xor
mov
jp
js
sbb
stc
push
adc
ljmp
pop
outsb
imul
adc
arpl
and
pop
inc
scas
lods
add
gs
pop
cmp
shll
into
je
pop
subl
filds
addr16
scas
xlat
sti
mov
fisubrl
inc
js
push
inc
cmp
fsubrl
and
test
mov
jecxz
scas
das
clc
or
xor
popf
js
jne
mov
jno
mov
or
lret
ja
arpl
add
push
sahf
shlb
or
xchg
or
and
imul
leave
sbb
inc
mov
and
lods
fidivrs
mov
adc
xchg
addr16
mov
int
xchg
dec
lret
push
call
sub
ja
repnz
stc
mov
je
pop
add
stos
push
mov
cmp
fistps
roll
leave
stc
adc
fisubrl
les
push
mov
sbb
dec
cmp
pop
push
and
je
jo
push
lret
mov
adc
or
stc
rclb
pushf
stos
negb
iret
mov
xchg
xor
adc
mov
adc
sbb
je
inc
lahf
popa
or
test
les
or
movsb
or
fsubr
jg
cwtl
pusha
hlt
jp
inc
int
in
or
xchg
mov
sbb
sbb
xchg
lcall
je
inc
dec
mov
inc
vunpcklpd
inc
lret
jl
push
and
push
xor
shll
adc
mov
stos
add
dec
int3
lds
adc
orb
scas
mov
movsb
cmp
xor
sbb
sbb
out
mov
or
pop
jnp
loopne
imul
pushf
and
roll
dec
inc
xor
sub
inc
sbb
xchg
std
mov
test
dec
cmp
hlt
in
xchg
mov
int
iret
clc
lahf
mov
add
sub
ss
add
push
jns
out
adc
push
mov
enter
cmpsb
ds
mov
sbb
call
in
ss
stos
sbbb
fmuls
adc
mov
cmp
pop
lret
fs
shlb
in
in
ljmp
push
addr16
xchg
fwait
sub
cli
and
jge
pop
scas
mov
cmp
dec
jb,pn
stc
sub
cmp
mov
je
jl
sub
mov
outsb
mov
mov
xchg
es
repz
add
xchg
imul
mov
les
fidivrl
les
ja
jmp
xor
jnp
cmp
repz
cwtl
mov
fisttps
inc
ffreep
fwait
and
les
mov
mov
test
imul
daa
adc
test
dec
shlb
xor
push
inc
cmp
add
sub
pop
add
cwtl
lea
jb
and
mov
in
mov
jge
movb
sarl
pop
psubsw
rsm
fnstcw
bound
sahf
inc
mov
and
enter
and
xchg
into
les
mov
std
or
push
lods
pop
ljmp
out
add
xchg
fucomi
and
push
repz
adc
pop
mov
in
fcmovnu
fstpl
push
lea
xor
cmp
aad
sbb
mov
sti
sub
adc
pushf
fwait
pop
sub
or
sarb
imul
nop
push
insb
xchg
inc
negb
mov
sbbl
inc
push
stos
inc
pop
es
xchg
pushf
or
cmp
movsb
lds
pop
insb
pusha
cmpl
pop
mov
lret
push
inc
mov
clc
sbbl
fdivrs
loop
mov
out
push
and
enter
stos
jmp
adc
dec
mov
xlat
dec
push
imul
scas
jno
cmc
adc
popf
loope
test
loope
or
or
dec
scas
jnp
push
push
push
loop
push
and
xchg
mov
daa
dec
adc
push
inc
or
sti
push
fidivrl
test
or
cmpsb
jp
inc
mov
sbb
scas
popa
adc
cmpsb
jl
ds
and
arpl
jle
mov
call
xor
rclb
pop
xor
aas
adc
fildl
add
pop
push
lods
int
xchg
in
xchg
mov
jne
fwait
test
xchg
cmp
sub
lods
jno
mov
xchg
push
mov
popf
or
jmp
andb
adc
mov
jp
cmp
xchg
sbb
insb
or
clc
ret
mov
pop
daa
pop
sbb
push
pop
shrl
push
ret
out
lods
cld
mov
cs
popf
loop
lcall
sti
add
repz
push
inc
adc
adc
xchg
xor
xchg
aam
insb
in
rcll
sub
test
adc
push
add
addb
in
pop
inc
lock
out
hlt
jno
push
sbb
lock
mov
adc
inc
push
xor
imul
sub
shlb
push
ja
incb
movsl
stos
sahf
sahf
inc
and
movsl
xchg
dec
adc
push
xchg
xor
out
imul
das
std
enter
icebp
mov
scas
cwtl
out
cmp
repz
out
push
add
xlat
into
inc
pusha
and
sub
aaa
jl
filds
hlt
mov
scas
push
mov
popf
mov
cmp
inc
repnz
jecxz
sahf
pop
in
in
mov
lds
xor
or
xchg
sahf
jp
cwtl
mov
push
xchg
les
add
add
adc
imul
lret
or
imull
aad
lock
mov
pop
mov
rclb
rolb
into
sbb
and
daa
lea
and
mov
sub
mov
sti
stc
imul
lock
jmp
shrb
sar
enter
adc
movsl
bnd
adc
and
mov
lods
fisttpl
lahf
mov
push
mov
sbb
dec
inc
pop
push
shll
mov
fists
pop
pushf
push
push
hlt
jnp
pop
xchg
sbb
jo
sbb
mov
imulb
imul
mov
or
lods
notrack
xchg
cltd
rolb
cmpsb
jbe
push
stos
into
sbb
pop
bnd
sbb
inc
cmp
xor
lahf
popf
jl
out
mov
or
sub
xor
test
pop
mov
stos
fldt
sbb
mov
xor
jne
out
out
pop
sti
cs
mov
sub
and
pop
mov
and
hlt
imul
xchg
nop
pop
fdivl
push
push
push
xorb
push
push
push
mov
jo
pop
sbb
add
add
aaa
mov
push
cmp
sub
push
lahf
xchg
scas
and
pop
call
pop
insb
shl
stc
pop
sbb
pop
js
mov
lea
or
add
bound
sbb
push
out
repz
or
cmpsb
in
mov
sahf
in
jb
xchg
dec
or
ss
unpckhps
stos
lods
sbb
inc
jo
dec
out
sbbb
in
pop
jmp
mov
out
jecxz
xor
push
push
daa
and
adc
shrl
mov
xchg
dec
dec
inc
pop
sysret
fnstenv
ja
and
arpl
lea
xor
sbb
roll
mov
fistpl
test
aad
shlb
mov
lcall
dec
pop
and
sub
jl
jmp
inc
and
test
lahf
mov
outsb
sahf
lahf
pushf
test
lcall
aaa
jmp
aas
shlb
mov
fmull
mov
scas
pop
jle
and
pop
fdiv
out
or
adc
push
inc
mov
inc
cltd
cs
pusha
inc
push
scas
mov
enter
push
movsb
mov
es
gs
sahf
ficompl
ss
shll
inc
pop
jmp
lea
out
stos
or
sbb
and
xlat
mov
cltd
outsb
fwait
add
sarl
loop
mov
popf
inc
hlt
shl
xchg
into
imul
push
popf
int3
stc
call
pop
pop
mov
xlat
fisubrl
sti
loopne
cmp
lahf
jmp
dec
loopne
jbe
andl
lds
pop
fs
movsl
add
mov
stos
jb
ja
mov
pop
test
cli
mov
push
es
iret
aaa
aam
jecxz
icebp
fiaddl
lds
mov
rcrb
out
pop
mov
dec
cmp
sub
out
in
lcall
cmp
dec
mov
push
mov
jo
push
aad
addb
inc
or
jbe
cltd
roll
aas
dec
bound
inc
push
pop
and
mov
cs
outsl
jb
cmp
cmp
mov
xlat
add
mov
mov
in
mov
sbb
and
cli
push
les
cltd
in
mov
sub
adc
rclb
ja
mov
mov
dec
inc
dec
sbb
sbb
clc
lret
push
sub
add
insb
orb
mov
xchg
push
and
mov
adc
outsb
fisttps
pusha
fisttpll
pusha
adcl
cmp
cvtpi2ps
fucomi
jo
pop
xchg
jb
mov
mov
mov
addr16
mov
mov
nop
fists
sub
insl
sub
lock
xor
rclb
push
jle
and
pop
cmpsb
xchg
mov
dec
out
inc
pop
push
cmc
sub
cmp
movsb
rorb
lretw
cmc
movsb
push
mov
sbb
outsb
dec
jne
push
xlat
mov
cmp
inc
xchg
jle
rorb
lea
adc
mov
fs
or
loopne
mov
jl
stos
or
push
and
lock
dec
das
out
andb
test
stos
mov
ret
out
dec
lcall
sbb
mov
sbb
adc
mov
gs
ret
lret
mov
data16
sub
in
adc
mov
cmpsl
cmp
dec
test
add
cmp
push
imul
scas
mov
push
jns
inc
fs
testb
mov
dec
sbb
daa
mov
mov
setnp
sub
add
dec
insl
mov
mov
shrb
sbb
pop
bound
jnp
and
push
mov
bound
dec
test
add
xchg
incb
jmp
or
jmp
inc
sbb
mov
jle
xor
push
mov
sub
test
jns
int3
lahf
inc
mov
in
clc
dec
inc
pop
insl
mov
xor
mov
cli
outsb
negb
testb
xchg
aam
into
inc
les
inc
sub
insb
pushf
cmp
push
lods
mov
int
imul
lret
mulb
dec
mov
or
repz
lea
rorl
es
repnz
or
sbb
icebp
repnz
into
xchg
inc
push
mov
stos
push
sbb
outsb
pop
lret
in
xor
shll
dec
ret
jb
out
dec
jle
or
hlt
pop
cs
outsl
iret
or
stos
imul
xchg
jg
mov
xchg
mov
arpl
jae
addl
lock
rcrb
cmp
int
xchg
enter
adc
xchg
scas
jle
jbe
push
in
movsb
mov
pop
mov
das
xor
and
cli
rorl
inc
icebp
pushf
or
xor
inc
push
fisttps
push
das
add
lea
movsl
xlat
push
xor
add
loop
cmp
dec
movsl
xchg
pop
cmp
mov
mov
or
dec
inc
shr
sbb
and
sbb
aam
mov
xchg
mov
pop
addr16
nop
sbb
cmpsb
divb
sbb
xchg
jl
jno
pop
inc
mov
mov
xor
and
mov
cmp
hlt
arpl
add
add
shlb
testb
dec
lds
jnp
jo
add
push
jmp
dec
and
insb
adc
cltd
js
jmp
mov
fcomi
or
jle
arpl
mov
in
mov
rol
jno
push
fwait
push
pop
rcr
imul
adc
lods
sbb
inc
ljmp
mov
leave
scas
mov
jmp
mov
cmp
push
aaa
mov
call
xchg
stos
cmp
lret
sbb
mov
sbb
sub
outsl
hlt
clc
dec
pushf
cmpsb
insl
cmp
mov
ret
push
movsl
fisttpl
aaa
pop
sahf
pop
lret
lock
clc
dec
mov
mov
jns
or
popf
mov
aad
shll
das
xor
sbb
test
inc
mov
jge
scas
push
and
push
inc
pmuludq
orb
push
dec
adc
add
jl
inc
mov
sbb
sub
jns
mov
lock
push
jmp
add
add
dec
xor
or
in
rol
xchg
mov
movsb
sbbl
decl
lea
lods
pop
xchg
mov
mov
stos
fsub
inc
add
xor
mov
daa
cmp
dec
mov
mov
add
sbb
sub
movsb
inc
out
jo
jecxz
push
sub
lahf
or
pop
jmp
or
adc
imul
push
sub
fcomps
enter
mov
mov
in
pop
push
cmp
aad
iret
inc
mov
leave
das
dec
push
mov
out
push
movsb
shlb
xchg
pop
jno
js
scas
popa
push
pop
push
add
adc
push
ret
jae
pop
add
push
adc
cltd
out
ljmp
fdivrl
imul
cmp
insl
cltd
scas
hlt
out
xor
dec
ja
pop
out
mov
dec
push
sbb
repz
roll
mov
push
lcall
jo
mov
lea
cmp
xchg
sub
push
xor
mov
movsl
call
out
incb
ja
sub
loop
lods
mov
cmp
push
xlat
cmp
iret
inc
sti
push
movsb
js
cltd
shl
dec
cmpb
sbb
jne
inc
jnp
push
dec
int
andl
gs
cli
and
repnz
sbb
jp
push
ja
push
push
test
lcall
adc
mov
xchg
orl
pushf
pop
cmp
ljmp
aas
aad
aas
fisubl
leave
inc
movsb
inc
sbb
sub
hlt
aad
mov
jnp
es
xor
mul
jl
xchg
mov
xor
add
mov
pop
enter
fisubrs
nop
repz
push
mov
inc
mov
jbe
loopne
push
mov
stc
sbb
arpl
sti
or
aad
cmc
jae
scas
mov
pop
xchg
sub
in
scas
xchg
mov
lea
in
pop
inc
into
out
inc
jo
int
mov
lods
mov
mov
ja
push
lods
jnp
and
mov
ljmp
movsb
mov
xor
shr
sbb
sub
adc
mov
stos
lea
adc
jle
xor
dec
jns
ljmp
push
stc
mov
or
and
sub
es
outsl
push
jmp
jmp
aam
ret
adc
subb
or
fsubrl
adc
fdivs
add
ss
test
call
sub
lods
mov
cmp
add
sub
stc
pop
sti
inc
lahf
jno
mov
sub
push
xchg
push
sbb
std
outsl
and
xchg
js
pop
in
std
insl
int3
iret
and
mov
hlt
xchg
and
lret
inc
push
mov
icebp
cmp
std
fidivl
gs
iret
cmp
insb
out
iret
mov
xor
imul
subb
push
lcall
stos
add
repz
mov
and
imul
dec
iret
jo
inc
and
sbb
sub
jge,pt
test
mov
mov
fisubrl
mov
les
or
cmp
icebp
addr16
lock
jg
shl
sahf
int
push
data16
cmpl
arpl
loope
push
add
aas
aam
clc
repnz
jp
push
push
lds
jns
push
popa
or
mov
push
push
cld
sbb
or
jno
adc
subb
mov
rol
jl
cmp
mov
xchg
inc
push
push
insb
push
clc
inc
in
jl
scas
mov
scas
pop
movb
dec
push
push
fcmovu
lea
std
pop
cmp
jle
insl
stos
mov
jp
ds
and
xor
fldenv
movsl
fcmovu
and
es
mov
cmpsl
xchg
in
ror
push
or
bound
jne
ja
bnd
dec
inc
insl
in
in
aas
pop
mov
in
jb
cmp
in
das
lcall
cltd
push
ret
je
pushl
cmpsb
and
push
shr
sbb
push
movsl
xchg
fcomp
cmc
divl
dec
cli
xor
mov
jle
rolb
mov
dec
fistpll
imul
outsb
fwait
adc
hlt
lods
out
sbb
fs
scas
cmpsb
loopne
or
inc
xchg
stos
xor
cltd
adc
pop
repz
push
enter
sbb
push
pusha
fisttpll
pop
and
shlb
js
xor
add
and
xchg
sub
sub
mov
jae
shrl
iret
xchg
sarl
mov
and
adc
push
in
xchg
mov
lea
fisubrs
lds
test
inc
scas
xor
jne
cwtl
mov
mov
and
out
rorb
jb
jl
mov
lret
inc
sub
mov
and
xor
cwtl
popa
rorb
mov
cmp
adc
fcmovbe
jns
inc
shlb
lret
sub
or
popf
test
dec
fcompl
lock
sub
decb
fsubl
cmpl
mov
scas
fadds
fs
push
jne
insl
stos
andl
test
out
shrb
pop
sub
pop
shrb
loopne
test
push
cmp
pop
xor
scas
sbb
inc
or
loope
xchg
mov
iret
imul
sahf
iret
movb
inc
cli
je
test
jnp
jae
dec
xchg
gs
push
xlat
xchg
popf
dec
push
movsl
mov
testb
jmp
fxch
pop
push
sub
xchg
inc
or
lret
das
xor
cltd
adc
iret
pop
and
fcomip
sahf
pop
xchg
push
cmp
idivl
lret
and
popa
xor
add
clc
sbb
cmpsl
lock
xor
aaa
mov
push
scas
xchg
hlt
sub
sub
adc
imul
and
into
mov
cltd
mov
jmp
mov
cmp
clc
loopne
pop
mov
hlt
lcall
lock
xor
jg
fwait
dec
gs
and
mov
negl
mov
inc
jg
out
mov
in
dec
xor
push
or
call
or
jo
fisubrs
roll
es
sbb
jno
imul
dec
cmp
dec
mov
push
xor
notb
sbb
add
popf
dec
mov
call
xchg
xlat
xchg
sbbl
pushf
addl
test
xlat
lea
insl
movsb
and
test
adc
and
fbld
jmp
sbb
jbe
pop
daa
or
dec
mov
xor
repz
inc
aad
rcrl
or
push
je
lock
popl
lahf
xor
std
mov
out
xchg
popa
and
jb
leave
xorl
add
jmp
cli
xlat
mov
int3
sahf
xchg
out
cmp
push
pop
mov
and
xor
lret
add
mov
fwait
push
inc
mov
xchg
push
or
insl
out
push
imul
xor
cltd
adc
pop
sahf
mov
stc
daa
ja
notl
xchg
cmp
fwait
and
xchg
sub
cmp
mov
pop
xabort
jbe
paddq
push
loope
mov
inc
mov
clc
jmp
pop
push
xchg
cs
push
pop
jg
rorb
cli
fisubs
icebp
or
loopne
mov
movsl
js
loop
cmp
xchg
fsubr
xchg
mov
adc
popa
adc
inc
sbb
inc
sub
ret
jae
xchg
dec
test
ret
dec
xchg
das
ja
and
fwait
ja
push
dec
sbb
aaa
test
sbb
inc
jbe
jae
jp,pn
cs
lret
xchg
cmpsl
fstpt
cmp
cmc
xchg
or
push
sbb
shl
add
and
addr16
icebp
add
sbb
aam
adc
insl
mov
jo
test
add
cmp
adcl
sbb
stc
movsb
aas
dec
inc
mov
cltd
dec
sbb
xchg
jle
inc
shlb
test
aaa
adc
inc
ds
shr
sub
outsb
xchg
mov
bound
insb
cmp
ss
pop
ds
jns
mov
imul
add
call
ret
sub
int3
jb
hlt
xchg
sarl
stos
and
fiaddl
mov
push
xchg
mov
jl
xchg
xor
xchg
adc
adc
xchg
repz
mov
sbb
jmp
insb
jb
mov
mov
daa
insb
sub
pop
stc
pminub
nop
mov
add
insl
leave
scas
popa
ss
testb
add
inc
outsl
gs
lret
or
test
xor
lahf
dec
push
push
leave
enter
data16
dec
inc
add
or
insl
fptan
les
push
push
xchg
xchg
inc
imul
test
cmc
fiadds
test
mov
jns
and
pusha
sbb
lret
push
adc
dec
jo
jnp
std
rcll
mov
pop
fnsave
pushf
stc
adc
call
cwtl
and
ret
inc
sub
sti
xchg
ret
cli
out
or
std
sahf
dec
cmp
enter
mov
sbb
xchg
adc
call
cli
push
call
mov
xchg
scas
dec
out
mov
mov
pop
insb
mov
stc
mov
in
push
mov
push
pop
fbstp
pusha
push
xor
xchg
jp
sbb
mov
decb
fistpll
stos
inc
pop
hlt
and
xor
push
movsl
jb
push
fstps
ljmp
bound
push
nopl
cmp
das
pop
loopne
loope
add
int
pop
add
xchg
jnp
mov
int
or
xchg
mov
mov
out
xlat
jg
pop
xchg
fisubl
or
push
and
imul
int3
cs
ficoml
push
stc
push
add
add
lahf
mov
adc
xchg
mov
adc
push
mov
out
push
faddl
call
and
jp
mov
mov
jo
pop
nop
push
andl
aam
and
inc
inc
add
popa
mov
test
xchg
popa
and
sbb
cs
iret
ds
clc
mov
lds
xor
xor
pop
hlt
repnz
sbb
mov
mov
pusha
and
ret
adc
hlt
xchg
int3
cmc
xchg
pop
test
std
sbb
mov
dec
aaa
jnp
push
out
ds
adc
mov
loopne
xor
sti
xor
insl
push
neg
mov
sbb
and
sbb
jle
mov
inc
push
std
rol
fadd
or
dec
mov
cwtl
and
out
aam
pop
cmp
pop
arpl
or
sub
aad
xor
popl
mov
adc
xchg
adc
adc
ret
or
mov
popa
push
jbe
add
pushf
loop
loop
lret
pop
and
add
mov
or
dec
ljmp
ds
outsb
or
cmp
in
sbb
ret
jno
ss
lret
sbb
sub
ret
cmc
imul
cs
jno
push
lock
lds
push
into
lods
aaa
shrl
xchg
cwtl
scas
ret
inc
mov
mov
pop
fnstcw
paddusw
push
add
jle
xchg
aas
dec
pop
out
or
push
mov
xchg
rolb
and
inc
pushf
pop
orb
adc
repz
leave
xchg
ss
mov
jle
inc
ljmp
inc
xchg
fisubrl
add
fdivp
mov
mov
movsb
xchg
into
movsb
push
shl
jg
jecxz
sbb
mov
or
rolb
xchg
testb
cld
daa
xchg
xchg
dec
mov
jb
dec
xchg
sahf
rcll
mov
stc
outsb
push
outsl
and
mov
mov
add
loop
sub
scas
pop
cmp
leave
popl
push
inc
loope
imul
fcompl
inc
xchg
sarb
mov
inc
outsb
sbb
lods
ret
negl
adc
and
scas
mov
add
loope
les
jne
lods
js
pop
pop
cmpsl
cwtl
mov
scas
cmp
inc
mov
dec
mov
rorl
nop
cmp
xchg
sbb
std
or
inc
jle
iret
xor
pop
dec
mov
adcl
imul
scas
pusha
fldenv
pop
cmc
jmp
push
bound
mov
rcll
inc
cmp
repnz
out
inc
aas
mov
mov
cld
or
sub
out
inc
lahf
cmc
lahf
jae
jbe
pop
lret
jle
add
mov
fimuls
dec
dec
ljmp
and
repnz
xchg
xchg
psubsw
std
pop
aam
data16
out
test
jb
test
or
in
fnstcw
mov
xchg
push
sbb
inc
and
pop
jbe
shrb
sub
rcl
mov
enter
inc
imul
adc
rolb
push
out
lods
sbb
xor
cmpl
mov
jge
or
xchg
adc
xchg
leave
lret
sbb
lds
sbb
xchg
inc
or
sbbb
push
jae
sub
push
mov
cld
push
jecxz
mov
xchg
testl
or
or
pop
lods
sub
nop
inc
jne
xor
mov
cmp
cmpsl
repz
xor
lea
in
cmp
mov
xchg
xchg
jne
lods
test
pop
out
mov
dec
and
ljmp
rclb
xchg
nop
imul
inc
in
add
ret
pop
dec
push
aas
or
pop
cld
aad
xchg
lds
lret
arpl
pop
mov
jns
push
rorl
pop
imul
test
sbb
in
sbb
jno
aaa
jg
clc
push
mov
mov
xor
push
and
pop
push
dec
mov
test
fld
bound
mov
fsubrl
mov
cmp
cwtl
stos
syscall
ss
lods
test
adc
xchg
push
mov
mov
cmp
jns
xlat
jo
dec
aam
add
cmc
jge
rolb
jge
inc
mov
inc
in
jmp
mov
mov
iret
mov
outsl
cmpsl
sarl
jl
nop
repz
xlat
ret
fldcw
mov
sbbl
test
test
cmp
ss
sub
mov
lcall
and
ds
jmp
fcompl
bound
cmp
cltd
mov
mov
scas
cmp
push
fstl
mov
mov
cld
lea
xor
sbb
add
lahf
in
cmc
mov
or
repz
jp
adc
popf
jg,pt
and
jge
push
fstl
sub
mov
leave
pop
mov
movsl
cmp
daa
mov
test
xor
pop
sbb
xor
popa
sub
pushf
xchg
cs
iret
mov
xchg
mov
pushf
scas
mull
jp
outsb
insl
add
lret
fisttpl
pushf
xor
repnz
mov
jne
sarb
cltd
jge
jmp
inc
scas
das
adc
push
lahf
sarl
mov
loopne
ja
push
push
and
mov
adc
daa
outsl
push
out
dec
add
dec
mov
aas
fstpt
sub
enter
cmpsl
mov
push
push
ja
rclb
jbe
fcomps
cs
fadd
inc
popl
repnz
sub
dec
into
and
jno
jb
lds
mov
int3
pop
dec
sbb
stos
stos
dec
and
lock
cmpsb
shlb
jecxz
xchg
pop
xor
inc
add
aam
mov
out
jns
fildl
mov
stos
push
lea
cmp
mov
or
jb
push
outsl
testb
sbb
daa
movsl
frstor
inc
sub
out
mov
mov
mov
xlat
mov
movsl
bound
push
ret
cmpsl
sbb
xor
adc
mov
xor
mov
ja
movsb
scas
xor
stc
sub
xor
sbb
icebp
mov
mov
mov
lret
sbb
out
jno
movsl
jae
inc
aam
outsb
jne
imul
test
lock
push
cmp
mov
jle
fidivrs
adc
xchg
fidivrl
sub
fistl
js
or
test
cli
dec
push
cmp
aam
stos
add
addr16
pop
or
scas
das
mov
pop
xor
xor
and
mov
or
mov
imul
push
cmp
in
mov
pop
push
pop
mov
lods
into
pop
jo
adc
or
test
fdivs
or
hlt
cmp
cmp
xchg
icebp
popf
inc
dec
orb
shlb
pushf
mov
enter
ret
mov
ljmp
jne
stos
and
inc
mov
in
mov
fwait
test
xchg
mov
sub
sbb
hlt
lea
inc
add
push
mov
fists
jmp
push
fsub
daa
dec
mov
cmp
daa
insb
push
sti
dec
fdivs
fwait
je
aaa
or
repnz
or
filds
mov
jge
out
cmpsl
es
lock
ljmp
notl
sub
mov
and
sub
cmp
repz
fstps
or
mov
cli
or
cmp
arpl
push
aaa
test
cmp
push
insl
aam
mov
inc
and
clc
xchg
jne
es
jl
shrl
mov
push
unpcklps
push
pop
and
mov
jl
roll
xchg
sub
dec
jg
iret
adc
lock
jns
fucomip
pop
es
jg
add
xor
mov
cmp
dec
push
sarl
inc
sub
mov
test
pop
mov
push
cmpsl
mov
push
lods
add
lods
cmp
lcall
push
aas
sarl
out
jnp
xchg
scas
data16
jns
cmp
fstpl
inc
fwait
ret
repz
pop
repnz
inc
cld
lock
sahf
jp
stos
testb
testl
leave
dec
in
mov
adc
xchg
call
cwtl
inc
cld
pop
and
dec
cmc
fistps
push
andb
dec
mov
pop
sbb
rcrb
cltd
sahf
cs
add
adc
dec
inc
int
adc
jg
fwait
pop
or
push
aaa
jge
sub
mov
std
rorl
sub
aad
mov
pop
std
jle
cltd
enter
adc
jle
add
xor
sbb
inc
add
scas
mov
mov
xchg
cmp
fidivrl
pop
sahf
cmp
xchg
pusha
lret
mov
lret
rolw
pop
loope
in
aam
mov
push
outsl
mov
rcll
test
xor
jle
jl
push
xchg
icebp
add
inc
lret
xor
push
pusha
inc
scas
enter
in
sbb
push
ljmp
lds
arpl
clc
mov
cmp
clc
push
test
mov
cmp
mov
and
rcrl
pop
xchg
push
mov
cmp
push
and
in
adc
in
loop
push
lret
inc
gs
pop
ja
add
mov
out
cwtl
and
int3
mov
enter
ljmp
push
movsb
shll
enter
stos
shld
daa
mov
mov
sub
jb
jge
mov
jl
mov
lcall
dec
in
sti
ret
mov
xchg
mov
test
addb
inc
out
mov
push
xor
push
xchg
jno
jp
insb
or
jae
xchg
repz
lods
rorl
sbb
jle
bound
inc
fcomp
xchg
push
sbb
stc
sarb
mov
add
mov
into
pop
or
push
dec
inc
out
jns
mov
leave
mov
adc
jbe
xchg
xor
pop
inc
pop
xor
fsubr
fcomps
cmpsl
imul
pop
outsb
mov
dec
repnz
add
adc
fimuls
cli
mov
jno
sbb
sub
sbb
mov
and
adc
enter
push
pop
shrb
mov
popf
ljmp
inc
xchg
loope
mov
das
pop
adc
es
repnz
test
lods
dec
cwtl
xchg
sub
add
cmp
fildl
rcr
cmc
loopne
sbb
and
inc
inc
out
rolb
fildl
pop
lock
cmp
sbb
je
push
je
aas
adc
lret
clc
bound
jno
lret
inc
in
and
mov
mov
mov
gs
dec
dec
jecxz
scas
xchg
xor
js
inc
cs
dec
push
and
cmpsl
dec
mov
and
fwait
pop
in
rorb
xor
jg
mov
mov
lcall
lods
loop
nop
aam
xor
popa
lock
ror
mov
aas
repz
mov
dec
sub
cwtl
repnz
mov
mov
cmp
push
shll
jo
xchg
cmp
or
xorps
cmp
test
cmc
jnp
aas
sbb
int3
int3
inc
js
movzbl
pop
jae
cmp
pop
mov
push
mov
scas
fsts
nop
fimuls
lret
mov
outsl
outsb
cmp
shl
fcoml
and
xor
test
mov
mov
jb
dec
jle
push
repz
jne
cli
shrl
stos
dec
mov
or
out
icebp
and
loop
add
pop
mov
push
rcrl
xchg
stos
mov
rorb
mov
aad
out
mov
inc
ljmp
loopne
pushfw
ret
lret
xchg
cmp
push
jg
ret
iret
imull
or
dec
out
in
push
add
jg
repz
std
mov
mov
cmp
in
jmp
push
xchg
jp
int3
or
pop
cwtl
xchg
pop
mov
lods
and
ds
jae
popa
scas
add
pop
andb
xchg
int3
into
sub
pop
push
imul
ljmp
lahf
in
push
xchg
js
iret
les
sub
loopne
mov
test
add
pop
js
ds
jl
addb
std
xchg
and
negb
sbb
push
or
xchg
loopne
xchg
int3
scas
sub
adc
pop
add
mov
push
xchg
filds
testb
das
inc
daa
mov
push
scas
stos
test
mov
inc
fidivs
testl
jmp
add
imul
incl
movsb
in
test
cmp
cmp
int
mov
mulb
loope
cltd
xor
ja
orl
in
add
cltd
fucom
jge
mov
dec
icebp
jle
push
imul
push
stos
push
out
sub
mov
add
jp
adcb
loop
lock
sbb
movb
mov
data16
imul
leave
popf
mull
mov
and
sub
xor
movsl
jp
mov
and
jae
aad
leave
mov
adc
or
test
test
out
adc
call
pop
fadds
cmc
mov
cli
dec
mov
sub
xchg
and
dec
dec
mov
sub
fwait
into
sbbb
inc
cmp
call
loop
mov
mov
pop
dec
cmp
dec
push
cwtl
push
es
int
mov
clc
cmp
divb
repnz
mov
pusha
pop
pop
mov
push
fistpll
or
inc
mov
sbb
jl
js
pusha
mov
add
cwtl
or
movsl
jo
rorb
jmp
rcll
popf
lret
loop
mov
mov
test
daa
in
xorb
ret
sub
lahf
imul
jnp
mov
xchg
jae
and
repnz
repz
arpl
or
addl
sub
adc
scas
add
test
call
mov
in
sarl
pop
js
lcall
add
jl
mov
sub
lret
js
das
lods
and
icebp
and
nop
aaa
cmp
ljmp
dec
push
push
call
orl
loope
cmp
in
and
jle
orl
aam
cmp
aaa
mov
dec
xor
add
xor
jg
jl
mov
inc
jno
loope
pop
rcr
cmp
lods
mov
xor
sbb
ljmp
lret
jecxz
aam
das
movsb
lahf
gs
and
loope
popa
bound
lret
pusha
or
jmp
jae
mov
jne
cmpsb
sub
into
push
test
adc
int3
xor
jnp
shlw
lret
cmpsl
xlat
xchg
lods
xor
xchg
xchg
scas
push
cmp
in
pop
adc
leave
mov
in
cmc
test
mov
pop
shlb
push
mov
hlt
andl
or
pop
cmpsb
pushf
in
aaa
mov
sbb
cmp
addr16
pushf
push
sub
out
pushf
pop
sub
xchg
add
clc
int
and
scas
movsl
dec
pop
cltd
add
mov
push
das
push
aad
push
lock
jmp
mov
inc
add
mov
mov
pop
decb
movsb
sti
out
dec
mov
int
in
fcomps
rcrl
fidivrs
fsts
jo
lock
cmp
sbb
push
fsubs
outsb
sub
cmp
lea
mov
mov
sub
cmp
shll
clc
movntq
and
jl
pushf
lods
test
xor
and
insl
idiv
test
popa
xor
or
mov
mov
addl
aas
push
scas
sti
jl
ss
shlb
insl
push
out
xchg
adc
dec
xchg
imul
xchg
mov
stc
xchg
in
jno
icebp
push
cmp
ds
xchg
or
xorb
jnp
ss
jo
and
cli
fwait
push
adc
fcomps
push
fwait
xor
lods
adc
inc
lcall
mov
decb
loopne
sti
or
push
nop
sub
push
ret
lods
pop
pop
outsl
mov
lret
ret
iret
int
xchg
enter
pop
sbb
lock
mov
mov
mov
sbb
hlt
mov
lods
push
lret
nop
ret
ret
jl
sbb
cs
cs
arpl
mov
cmp
add
out
mov
sub
inc
push
mov
out
xchg
fcoms
cli
jnp
repnz
xchg
int3
mov
inc
mov
add
rclb
addr16
mov
push
lea
scas
cwtl
leave
cmp
pop
jle
clc
mov
and
gs
adc
adc
mov
fbld
call
cwtl
adc
in
lds
pop
push
or
xor
fs
fcos
mov
pop
adc
mov
mov
fwait
data16
jnp
movsb
xchg
fnstsw
mov
mov
adc
pop
sarb
mov
fists
sti
xchg
test
mov
popf
out
adc
pop
xor
cld
call
jnp
xchg
ds
pusha
ljmp
and
push
mov
notb
and
and
test
pop
xor
dec
test
das
aaa
or
jae
xchg
xchg
jns
popf
sbb
rorl
nop
outsb
cltd
aas
xor
int3
pop
out
inc
dec
and
xchg
dec
repz
add
stos
pop
cmp
sbb
outsl
in
add
jnp
lret
xor
and
inc
mov
std
mov
mov
outsl
add
sub
pop
pop
push
inc
aam
add
test
sbb
arpl
xchg
out
mov
aad
dec
dec
lock
testl
and
dec
or
fwait
and
fsubs
sahf
add
nop
aad
jp
pusha
addr16
imulb
gs
xor
sbb
sub
push
outsb
je
mov
test
xor
outsb
sbb
aas
roll
mov
mov
sub
in
pop
mov
push
mov
lods
adc
jl
pushf
sarl
cwtl
ret
pop
lds
cmp
lds
cs
inc
test
test
out
loopne
adc
arpl
mov
push
xor
lds
sti
lock
mov
leave
cmp
cmp
stc
adcl
mov
add
into
out
scas
sub
ficompl
repnz
sbb
xor
xchg
push
pop
inc
jge
dec
scas
jb
xor
int
mov
mov
inc
add
call
dec
and
daa
sbb
or
mov
cmp
inc
pop
aad
xchg
inc
scas
add
ret
add
ret
jl
out
aas
repnz
sahf
dec
adc
insl
fwait
imul
fiaddl
stos
or
cmpsl
pusha
xor
in
orb
cmp
push
mov
push
xlat
loopne
inc
dec
push
sahf
mov
aaa
mov
fwait
inc
add
or
shlb
pushw
adc
xor
pop
outsl
ret
outsb
pusha
mov
in
orl
aam
outsb
cmpsb
or
inc
lahf
pop
add
out
inc
out
dec
mov
in
xlat
leave
loope
pop
inc
cmp
aam
inc
scas
mov
mov
push
imul
mov
dec
mov
mov
push
xchg
pop
dec
xchg
mov
stos
in
add
imul
cmpsb
adc
fdivs
jmp
test
pop
aad
outsb
std
cmp
jae
push
pop
nop
into
aas
je
xor
outsl
push
in
leave
jo
xchg
sahf
inc
enter
out
push
sbb
adc
adc
daa
pop
pop
popf
lea
pop
aas
jp
pop
mov
mov
mov
nop
addr16
xor
cmp
fdivl
movsb
adc
addr16
imul
arpl
decb
mov
test
xor
pop
pop
mov
xor
mov
cmc
adc
idiv
dec
cmpsl
inc
shlb
sub
mov
data16
pop
lock
dec
das
xchg
jo
push
xlat
adc
jno
sarl
adc
push
jnp
pop
lahf
push
movsb
jmp
mov
in
and
push
scas
hlt
adc
mov
fldenv
and
addr16
out
in
nop
and
sarl
insb
loopne
sub
pop
scas
aam
and
aaa
sub
ljmp
sbb
pop
cmp
xor
repz
inc
out
and
adc
testb
push
lods
xchg
popf
js
sarb
clc
imul
push
mov
mov
pop
int3
mov
mull
stos
test
jp
pop
xchg
pop
rol
xchg
mov
test
add
adc
daa
mov
sti
or
decb
and
cs
pop
fsubrl
mov
popa
pop
jle
adc
push
out
xchg
out
pop
jmp
cmp
shl
test
jo
arpl
mov
mov
pop
cmovno
clc
lods
fwait
out
jge
fdivr
in
cs
mov
mov
test
mov
leave
testl
shrl
adc
dec
xor
mov
rcrb
dec
outsb
mov
stos
int
push
xchg
dec
push
mov
jnp
scas
bound
lock
imul
rorb
mov
ret
push
mov
test
sarl
cs
or
cmc
mov
adc
push
fs
aaa
xchg
outsl
add
mov
loope
push
mov
lods
cmp
sub
testl
stos
xlat
les
in
or
mov
jg
ss
lcall
inc
imul
sbb
ret
loope
push
jno
xchg
in
fiadds
pop
jo
push
popa
mov
outsb
bound
cmpl
xchg
movsb
pop
out
rorb
push
cli
hlt
xchg
sbbl
mov
lds
push
inc
in
or
mov
cmpsb
int3
mov
stos
aas
fiaddl
pushf
dec
dec
sub
call
jle
fisttpl
lahf
sbbb
mov
filds
imul
out
sbb
outsb
or
lods
insl
pushf
sub
push
lcall
fistl
insb
jp
leave
dec
std
inc
mov
add
inc
mov
rorb
loope
fnstenv
pop
sbb
lock
repnz
xchg
mov
sbb
into
sarb
sub
notl
into
jg
xor
rolb
rorb
xabort
enter
inc
add
pop
or
sub
bound
rcrl
add
rcr
cmp
lds
jnp
jle
mov
mov
add
or
push
xchg
std
xchg
scas
rol
rorl
add
pop
gs
bound
and
aas
adcb
into
mov
mov
test
jle
outsb
arpl
and
aad
xchg
sbb
cmovne
dec
fnstsw
cmp
out
mov
xor
push
out
sub
jbe
les
ss
mov
out
xor
dec
leave
pop
outsl
push
mov
xchg
xor
mov
loope
pusha
repnz
daa
in
pop
or
test
or
and
mov
cmp
push
and
add
pop
mov
pop
out
leave
sbb
jp
in
jbe
int3
insb
xchg
leave
testl
adc
xchg
gs
sahf
cmc
xchg
push
jns
adc
adcl
pushf
xchg
lock
adcl
xlat
jmp
fstpt
pop
mov
mov
add
sahf
push
sbb
mov
cmp
stos
addb
pop
push
fs
dec
add
sbb
add
scas
sub
pop
jbe
lahf
test
inc
adc
push
in
mov
cmpsb
and
sub
lret
seta
xor
xchg
inc
cmpsb
cmp
xchg
cmpsb
sbb
sbb
in
dec
fistpl
call
mov
jno
fs
in
xchg
popa
mov
ret
je
idivl
mov
sbb
push
out
cltd
test
stos
or
push
sub
bound
lds
fdivrl
mov
add
cmp
mov
lods
outsb
lcall
sub
fs
js
cmpsl
sub
jecxz
sbb
jbe
sbb
pop
cmc
mov
fs
ror
sub
sub
push
cmp
test
dec
out
xor
pop
mov
clc
jl
test
movsl
loope
pop
mov
or
es
into
js
addb
dec
lea
lret
inc
xor
rol
orb
cltd
pop
xchg
inc
imul
push
mov
add
inc
daa
fdivs
dec
negl
xor
xchg
in
cmpsb
stos
jae
pop
mov
cltd
xor
ret
xchg
aaa
pop
mov
pop
ja
adc
pop
rorb
in
pop
mov
out
dec
jne
add
ret
xchg
pop
xchg
lret
sbb
or
inc
cmp
push
loope
int
mov
jecxz
jns
xchg
enter
push
xor
inc
jne
sbb
shll
push
mov
pop
xchg
ret
dec
lret
sti
aad
cmp
or
js
loop
adc
iret
xchg
or
jb
testb
push
jl
sub
xchg
push
outsl
pop
jmp
mov
incb
mov
pop
jmp
std
jp
jae
repnz
icebp
shrb
xchg
xor
negl
dec
jp
outsb
mov
div
in
pop
dec
jno
imul
mov
push
icebp
dec
lods
cwtl
hlt
inc
xor
out
mov
xchg
scas
call
xor
lods
push
pop
mov
lea
pop
mov
arpl
lds
push
pop
xchg
shrl
in
ret
int
lds
xor
clc
xor
sub
fldt
cld
fldenv
cli
leave
enter
dec
imul
adc
scas
dec
hlt
test
xchg
dec
data16
inc
fs
xchg
adcb
push
inc
enter
das
mov
cld
sub
loopne
push
pop
in
push
shlb
lea
gs
clc
xchg
dec
ret
xor
ds
add
or
or
call
fimull
adcl
and
or
mov
arpl
mov
popa
stos
fnstenv
stc
fists
sub
mov
lea
ror
outsb
decb
xlat
mov
test
cs
das
mov
mov
inc
outsl
imul
ret
sub
push
pusha
mov
test
push
or
mov
leave
ret
mov
inc
adc
mov
inc
push
and
pop
sbb
cs
xor
sub
je
inc
lds
loop
call
lcall
push
push
mov
push
test
cwtl
fstpt
jbe
movsb
adc
movsb
mov
xor
xor
enter
int3
push
ds
test
cmp
pushf
scas
push
arpl
loope
or
sti
lret
add
inc
mov
cmp
push
cmp
jge
jne
inc
imul
test
movsl
cmp
in
test
cmpsb
outsb
cli
push
rcrl
cmpsl
into
leave
outsl
inc
jge
jb
outsb
mov
je
xchg
jl
mov
jb
or
dec
pusha
jmp
jbe
popf
xor
cmp
daa
cmp
sub
repnz
fwait
sub
jp
adc
ljmp
arpl
ljmp
pop
or
repnz
push
sub
xor
pop
sub
dec
aam
xor
inc
mov
scas
xchg
xor
iret
outsb
pop
mov
fistpll
cwtl
jae
add
jp
mov
movsb
sub
mov
arpl
aam
imul
faddl
stos
mov
xchg
enter
test
adc
and
cmc
fbstp
lds
adc
inc
sub
icebp
xchg
jnp
adc
stos
or
inc
ret
stos
and
or
bound
inc
fiadds
aad
push
pop
cmp
cs
mov
ret
lods
in
push
roll
mov
mov
shll
sbb
fidivrs
push
adc
pop
pop
mov
in
fwait
cmp
push
add
xor
xchg
ret
loope
es
stos
inc
cmp
fsubrs
pop
data16
add
sahf
sti
mov
lds
add
cmp
repz
outsl
xor
pop
int3
pop
pop
jle
out
xor
jg
push
push
pop
xor
jge
xchg
scas
out
fimull
data16
jne
push
jns
out
std
ds
imul
cmc
adc
gs
inc
or
insl
adc
cmp
add
mov
daa
jbe
pop
fldl
xor
cwtl
xor
orb
push
hlt
data16
lret
gs
xor
sub
aas
push
pop
sbb
mov
jmp
jmp
lds
push
mov
inc
imul
insb
mov
mov
mov
xchg
mov
xlat
jae
ds
add
mov
fstpt
or
jno
mov
jg
cmp
rclb
jnp
or
push
pushf
mov
mov
xchg
pusha
loope
mov
sbb
jg
loop
out
loope
scas
mov
pop
mov
std
out
cmp
or
cli
jecxz
mov
cld
jp
popf
insl
push
add
jb
sub
out
adc
dec
fs
mov
sbb
xchg
mov
mov
das
cld
mov
lahf
ja
hlt
rol
pop
insb
loopne
aam
adc
sub
jg
in
mov
fcomi
push
jecxz
mov
xor
mov
aad
ss
and
scas
icebp
add
mov
gs
or
scas
subw
in
sub
mov
mov
jae
fwait
lock
pop
sbb
cmpsl
sbb
cli
mov
lods
ljmp
test
cmpl
or
dec
daa
add
push
int3
out
pop
mov
loop
add
mov
sbb
dec
push
jne
sti
iret
sbb
in
adc
jno
dec
jbe
in
mov
les
dec
sarb
movb
add
test
fsubs
aas
inc
movsl
loopne
mov
call
inc
movsb
push
mov
cmp
jo
ret
fs
xor
mov
addr16
clc
xchg
pop
or
lods
add
mov
sub
mov
es
sbb
inc
fcomi
pop
inc
jmp
neg
scas
xchg
dec
scas
dec
testl
outsl
adc
mov
arpl
pop
mov
or
lcall
or
mov
pop
jne
stos
and
and
mov
add
lret
into
jmp
mov
stc
inc
jb
ljmp
adc
cmp
les
loopne
xor
aaa
shrl
xchg
inc
mov
xor
xor
fcoml
cmp
fmul
leave
dec
es
dec
and
pslld
int
xchg
jne
pop
into
test
dec
mov
and
or
pop
mov
lods
test
test
fs
arpl
into
adcb
mov
cli
xlat
insb
and
ret
add
inc
jbe
cli
cmc
jns
sub
cmp
dec
jo
mov
xchg
sti
adcb
push
dec
in
ret
inc
les
xor
adc
jne
js
pop
sahf
inc
enter
cmp
jg
sub
push
hlt
clts
or
inc
jge
les
xchg
outsb
mov
xchg
repz
xchg
sbb
mov
lods
xchg
lcall
in
mov
arpl
test
mov
outsl
sub
mov
daa
or
stos
sbb
cs
pop
jl
popf
mov
dec
adc
mov
adc
adc
daa
loope
xchg
shlb
shlb
aas
inc
adc
lds
cmp
test
cmp
sub
fwait
in
mov
mov
dec
repnz
fimull
mul
sbb
aam
push
adcl
cmp
lahf
stc
dec
push
pop
cmp
xchg
scas
xchg
insl
sbb
mov
and
sub
and
xchg
inc
fsubr
popf
sti
add
cmp
xor
lea
stos
mov
inc
insl
addr16
mov
mov
roll
lea
xchg
jns
fs
movsl
sub
or
mov
cmc
jp
stos
leave
notb
mov
imul
and
loop
dec
pop
dec
movsb
and
xchg
out
lock
adc
xchg
sbb
push
ret
cli
ror
ret
or
call
ret
lods
data16
fnstenv
mov
xor
sub
sahf
fisubrs
data16
ret
inc
call
bound
aas
imul
and
and
xchg
push
mov
in
into
mov
lock
push
add
push
lods
lods
popa
fsub
or
jnp
out
out
cltd
fbstp
orb
and
fs
xchg
push
jbe
movsb
sbb
leave
negb
push
and
cltd
adc
xor
mov
and
mov
xchg
add
addr16
int
movsl
repz
outsl
sub
nop
add
aad
pop
pop
out
xlat
clc
mov
add
inc
cmp
std
cmp
xlat
psubusb
fisubrs
xchg
push
sub
jns
add
push
inc
std
cltd
xor
xor
daa
andl
js
cmp
mov
orb
lock
mov
mov
call
xchg
adc
call
das
lret
pusha
call
outsl
int3
loope
xchg
jg
popl
push
dec
pushf
pop
jns
jno
xchg
push
sub
mov
adc
add
pop
and
cmpsl
sbb
push
popf
pusha
push
pop
or
lcall
xor
pop
cwtl
adc
xchg
mov
in
cmp
dec
bnd
imul
xchg
das
mov
stc
and
xchg
add
mov
arpl
mov
xor
call
jb
nop
dec
shll
and
xchg
imull
add
jno
xchg
sub
enter
cmc
ljmp
add
in
lods
push
push
in
mov
cmp
inc
or
and
lret
lahf
mov
adc
ret
idiv
mov
cmp
stc
mov
hlt
or
ds
dec
dec
jne
sub
sub
js
out
lcall
int
xchg
sub
sbb
mov
sahf
mov
fsubs
fisttpll
test
lods
call
hlt
out
loop
nop
adc
std
ds
inc
ficoms
push
add
outsb
cmp
push
or
and
push
imul
ret
pop
push
xchg
mov
sbb
xchg
das
enter
sub
test
inc
scas
icebp
mov
stos
jle
std
lret
je
mov
pop
repz
mov
clc
div
sahf
pop
rorb
sti
pop
out
push
mov
add
sbb
xchg
mov
cwtl
sbb
push
mov
sbb
nop
mov
add
test
adc
std
movsb
xchg
movsb
sbb
clc
mov
xchg
in
sbb
sti
das
mov
ret
loope
mov
sub
inc
call
mov
mov
xchg
cld
jge
adcb
sbbb
push
sbb
flds
mov
mov
xchg
rorl
xor
and
jns
inc
pop
pushf
mov
cmp
xchg
cmp
mov
pop
popl
sarb
shll
and
xchg
loopne
xor
push
mov
ret
mov
in
andb
pop
jbe
xor
sahf
pop
jns
popf
ret
xor
stos
jnp
lcall
xor
fwait
adc
or
xchg
dec
loop
xchg
cmpb
and
push
xor
out
fs
pop
dec
dec
sub
inc
mov
ret
stc
xorl
dec
xlat
jbe
ja
adc
adc
sti
mov
and
fst
stos
pop
push
and
jnp
add
pop
mov
dec
mov
divb
sub
xchg
add
mov
xchg
jge
pop
test
inc
ds
sub
jb
loop
fldl
mov
push
mov
mov
cmp
pop
sti
pop
arpl
push
fcoml
mov
mov
fcomp
push
lock
add
cwtl
xchg
bound
insb
lock
add
and
pop
sub
ffree
xor
popa
imul
lock
test
pop
fsubr
mov
jge
mov
jne
std
fcomps
xchg
lea
out
je
fidivl
xchg
mov
andl
adc
pop
pop
mov
mov
or
fbld
add
jmp
mov
jmp
adc
fsts
orb
mov
mov
mov
dec
cld
ljmp
add
mov
jge
stos
enter
iret
push
and
in
in
jmp
xor
lea
mov
popa
mov
mov
pusha
ret
adc
or
stos
jno
aaa
xchg
xor
jge
in
data16
out
or
mov
xchg
or
movsb
mov
push
mov
pop
rol
adc
dec
std
call
push
add
dec
rcrl
xchg
xchg
dec
mov
add
xchg
pop
mov
jnp
scas
sub
push
imul
push
nop
jbe
cmp
shl
sbb
std
les
test
mov
orb
inc
mov
incl
pop
push
sub
lods
subl
idiv
inc
lods
sti
push
negl
in
push
int
or
repnz
imul
push
jae
leave
mov
xor
mov
xchg
or
xchg
mov
dec
mov
ss
idiv
dec
adc
stos
stos
xor
jg
mov
pusha
and
movsb
inc
iret
jb
dec
push
fistpll
adc
jb
in
shlb
adc
pop
mov
push
andl
xor
leave
push
frstor
jo
loop
outsl
cltd
aad
aam
cld
inc
dec
stc
mov
dec
in
and
jmp
addr16
add
je
mov
pop
push
xchg
push
xchg
sbb
sub
sbb
stc
inc
sbb
fidivs
fwait
into
dec
dec
xor
push
pop
cltd
mov
divb
inc
ljmp
mov
cli
out
mov
popa
lcall
call
repz
xchg
popa
jo
and
out
push
mov
or
movsb
hlt
leave
nop
xor
jae
icebp
dec
dec
in
mov
sbb
mov
ret
ljmp
adc
lret
jp
shrb
repz
adc
stos
cmpsl
push
jmp
mov
or
jle
push
push
jle
sbb
flds
and
mov
insb
test
data16
push
cmpsb
vmovapd
mov
sub
in
xor
xchg
and
sbb
dec
flds
jno
push
xchg
sarl
divss
sahf
add
add
push
inc
push
std
stos
mov
mov
jmp
push
cmpsl
hlt
xlat
fistps
inc
cli
push
sub
test
xchg
iret
push
jo
int
push
mov
dec
pop
cld
test
add
adc
lea
mov
xchg
bound
mov
xchg
mov
pop
jno
and
and
fcomps
rcl
in
lods
int3
enter
fdivp
shlb
test
shrb
leave
xchg
addl
cmpsl
mov
lret
dec
cmpsb
mov
push
dec
andb
jno
xor
jno
nop
in
mov
jge
xchg
les
sbb
lock
sbb
loop
sahf
jg
hlt
outsb
dec
or
incb
out
mov
aad
cmpsb
clc
out
push
ja
rcrl
sub
hlt
cmp
dec
add
cwtl
mov
mov
and
mov
dec
and
jle
mov
lock
xchg
jle
loopne
inc
loop
mov
cmp
shll
popf
jb
and
jg
imul
inc
dec
in
insb
mov
or
mov
leave
repnz
mov
leave
jecxz
dec
push
clc
lcall
mov
mov
mov
test
data16
mov
stos
in
pop
in
or
insl
imul
mov
xor
adc
mov
push
or
xchg
lods
sub
or
xchg
push
and
sbb
inc
nop
fistps
mov
jmp
jmp
jns
adc
fmulp
out
sub
and
and
testb
ljmp
shrl
mov
xchg
cmc
sarb
push
ss
hlt
push
mov
mov
and
dec
sub
loopne
lds
xor
push
test
je
jno
cmp
adc
enter
outsb
add
lods
xor
in
fdivrl
in
lret
scas
jno
pop
xchg
pusha
fsubr
jg
stos
jb
and
aam
xor
add
mov
mov
dec
pop
pop
pushf
dec
sahf
mov
iret
or
push
inc
enter
lret
dec
cs
inc
and
push
cmpsl
add
enter
inc
sub
inc
call
sbb
mov
push
push
fwait
pop
sarl
idivb
icebp
jle
lea
push
add
leave
adc
fxam
pop
out
and
sub
imul
int
repnz
outsb
das
lret
push
in
and
xchg
gs
sbb
xorb
icebp
jmp
imul
popf
sarw
loope
add
inc
xchg
adc
punpcklbw
popf
sub
call
jecxz
aas
cwtl
add
xchg
adc
rcrb
push
movsb
xor
loope
push
or
mov
lahf
es
xor
pop
jno
paddusb
xor
pop
insb
xchg
popa
cmp
inc
hlt
out
mov
addl
jge
pop
imul
out
stos
xchg
cld
xlat
mov
insl
push
dec
psllw
fs
cltd
nop
add
ds
sbbl
adc
dec
cs
cmc
adc
push
mov
xor
jno
mov
cmpsl
xchg
into
mov
cwtl
mov
mov
rcr
and
int
jns
lods
lds
cwtl
inc
xchg
mov
add
fimuls
dec
out
in
popl
add
push
pop
mov
push
bound
lock
out
xchg
pop
js
push
scas
js
mov
inc
jo
inc
and
cwtl
test
xchg
dec
pushf
imul
jg
lcall
leave
lret
jbe
movb
mov
pop
arpl
shr
push
mov
pop
mov
repnz
dec
pop
mov
popa
lret
aam
push
ss
ds
jle
leave
xchg
in
dec
sbb
xlat
dec
int3
push
mov
rorb
outsl
cwtl
pop
cs
mov
xchg
jmp
stc
pop
in
daa
lret
arpl
xchg
sbb
xor
out
into
sarl
push
push
imul
cmp
rcll
lret
push
pop
jecxz
sarl
lahf
jae
ret
je
notl
jo
xchg
into
cmovns
pushf
mov
or
and
xor
icebp
xchg
mov
inc
shl
in
add
pop
mov
aaa
jge
int
ret
fwait
mov
mov
cs
dec
push
or
sbb
push
mov
mov
jg
mov
sub
xchg
popf
xor
dec
inc
rcll
dec
push
cmp
idivb
out
insb
push
test
sbb
inc
ror
xor
mov
enter
icebp
pop
pop
push
jg
out
cmp
xor
cmp
in
fsubrs
pop
or
dec
sbb
add
lods
in
sbb
or
cld
pop
sbb
adc
inc
jnp
jp
pushf
gs
sbb
jp
out
gs
jno
mov
lea
je
jno
push
or
mov
jo
scas
aad
scas
inc
fldl
mov
push
pop
dec
dec
inc
sbb
pop
cltd
xor
or
jno
mov
fistpl
or
inc
icebp
pop
xchg
sbb
mov
and
jne
dec
es
dec
mov
and
mov
jl
mov
mov
andl
addb
test
xorb
and
mov
mov
cmpsb
pop
jp
mov
xor
and
lahf
xor
sbb
sub
movsb
sarl
or
aam
pop
sti
mov
push
out
hlt
jmp
xlat
adc
mov
xor
jle
jnp
ffreep
inc
cmpsb
mov
std
xor
sub
inc
clc
pop
popa
cmp
daa
cltd
mov
stos
orl
sbb
leave
out
mov
and
sub
out
call
adc
mov
sub
mov
xchg
popa
gs
mov
inc
call
jp
mov
test
sbb
mov
and
sub
leave
negl
mov
sahf
adc
mov
cli
aas
inc
adc
movsl
or
and
lods
hlt
pusha
xor
std
sti
push
scas
hlt
adc
push
push
xchg
push
dec
hlt
add
add
push
lds
cmp
divb
imul
repz
add
data16
adc
lahf
loope
mov
aaa
shll
daa
xchg
int
clc
insb
adc
or
push
leave
cmpsb
sub
test
mov
inc
sbb
addr16
test
push
cmpsb
fucomp
mov
cmp
mov
jge
pushf
movsl
sbb
sub
mov
add
fstl
pop
mov
cmp
daa
mov
jnp
aas
inc
dec
push
stos
inc
mov
dec
inc
add
dec
adc
rcl
jl
stos
ja
fistl
stos
adc
jnp
insb
mov
ljmp
push
addr16
insl
icebp
outsb
xchg
dec
pop
pop
inc
sub
xchg
push
ljmp
sbb
cs
enter
sbb
push
mov
cmpsb
mov
xchg
cmpsl
xchg
cmp
inc
cmc
xchg
add
shrb
mov
mov
xchg
or
xor
mov
sbb
dec
scas
ret
inc
jae
inc
sahf
cmp
or
dec
mov
imul
and
shlb
sub
out
jbe
push
pop
adc
cwtl
addr16
movsb
pop
imul
lret
inc
cmp
xchg
cmpsb
inc
xchg
mov
inc
daa
call
cmp
cld
cmpsb
xchg
in
test
inc
bound
mov
movsl
push
mov
lahf
jl
inc
out
xor
lods
xchg
and
pop
outsl
fsubrs
xlat
cmp
insb
sbb
jbe
add
pop
push
mov
cmp
jle
ljmp
mov
gs
xlat
ljmp
inc
fidivs
xlat
iret
jle
in
stc
pop
jnp
sbb
aaa
xor
push
pop
fcomps
ret
into
fbstp
shll
sbb
popf
mov
jb
rclb
jmp
movsb
cmp
mov
popa
xlat
out
sub
jae
inc
ret
add
dec
xor
icebp
or
add
push
push
mov
mov
nop
fs
in
push
movsb
xchg
push
fdivrs
idivb
addr16
mov
into
in
sub
add
mov
hlt
outsl
sbb
xchg
adc
fnstenv
jmp
sbb
or
out
mov
push
out
jle
push
in
insl
inc
or
jae
mov
push
std
loop
dec
inc
cmpsl
test
jmp
mov
ret
sbbl
push
and
ficoms
adc
dec
fnstenv
mov
inc
fists
add
ja
pop
jno
cmp
inc
dec
enter
mov
xorb
lods
test
cmpsb
out
jb
sub
pusha
mov
hlt
test
push
push
stos
test
std
fstpt
jae
sub
adc
daa
out
fadd
inc
lret
push
lahf
ja
xchg
jmp
push
cmc
push
jns
outsl
jbe
mov
xor
fisttps
sarb
cmc
xor
je
cmc
pop
mov
into
add
cmp
cltd
and
mov
outsb
fwait
sbb
les
push
adc
inc
mov
jbe
arpl
sbbl
cld
xchg
add
inc
pop
push
ret
push
outsl
add
sahf
xchg
cld
iret
jns
test
xchg
or
or
les
xchg
dec
lock
mov
push
cmp
sbb
and
and
imul
mov
outsl
cmp
scas
and
jl
dec
int3
adc
push
push
add
adc
popf
imul
sbb
clc
aaa
call
mov
sbb
enter
fistpl
push
mov
add
loopne
jmp
dec
mov
xor
ret
andb
ds
jmp
icebp
xchg
outsl
mov
jp
les
insl
in
push
push
aaa
and
les
mov
out
cs
pop
ljmp
mov
or
loope
hlt
xor
lods
movl
mov
cltd
int
push
sbb
add
adc
lret
fdivp
arpl
call
scas
cmpsl
hlt
call
movl
sahf
cmpsl
lahf
adc
push
push
scas
loopne
les
inc
add
ja
mov
pop
push
and
xchg
xor
aaa
shll
adc
push
sbb
stos
fwait
mov
add
mov
mov
je
enter
lods
shlb
xchg
iret
xor
mov
adc
sub
mov
sbb
bound
ds
mov
fs
or
push
test
pop
cmp
jg
and
adc
inc
jnp
pop
into
ss
and
lcall
or
mov
shr
inc
test
into
repnz
jg
ljmp
imul
mov
repnz
dec
fwait
int3
and
mov
loop
mov
sub
push
ficoml
addr16
ret
xchg
xor
jo
sbb
add
and
push
ficoml
push
mov
or
enter
je
int
repnz
mov
jle
push
push
adc
jp
lods
mov
pop
inc
pop
arpl
cmp
inc
loop
or
xor
adc
shlb
mov
sti
fwait
push
xlat
mov
adc
adc
mov
imul
cli
cmp
sub
jl
inc
cmc
sahf
out
cmp
mov
das
jp
xor
inc
in
jle
mov
sahf
add
mov
std
es
or
push
dec
out
or
dec
mov
loopne
push
cmp
outsb
nop
outsl
mov
lret
shrb
data16
inc
andb
movsb
xchg
mov
lods
sub
ljmp
add
stc
sub
jne
loope
leave
push
or
xor
filds
imul
movsl
adc
add
pop
ds
sub
pop
js
xor
mov
clc
xchg
inc
mov
sbb
repnz
mov
push
scas
xor
inc
xchg
fimuls
inc
out
and
cmpsl
xchg
pop
xchg
sbb
xchg
test
cmpsl
pop
sbb
mov
cmc
addl
orl
rclb
ja
cmp
add
out
dec
sbbl
adc
scas
push
xchg
out
or
sub
sbb
jl
loopne
jmp
add
cli
bound
push
add
dec
inc
lret
fnsave
xor
or
scas
mov
or
ss
ja
loopne
mov
jne
lahf
xchg
pop
xchg
cli
mov
mov
fstpl
mov
cmp
js
pusha
inc
or
lods
add
cltd
stos
aaa
out
mov
dec
and
fs
push
inc
sub
cmp
or
cmp
inc
xlat
bound
adc
xchg
fistps
je
fisubrl
in
adc
mov
lods
mov
cltd
push
inc
movsl
add
in
dec
adc
dec
sar
xchg
lods
jmp
mov
and
shlb
fcmovnu
push
sub
or
adc
cmp
and
loope
inc
jp
cmpsb
lea
push
pop
es
inc
push
aaa
pop
mov
jg
addr16
add
mov
push
ss
loop
imul
js
ja
fcompl
frstor
pop
or
jns
push
in
xor
sarl
xlat
xor
ljmp
lahf
add
pop
mov
out
xor
dec
sub
leave
inc
in
leave
ja
xchg
into
mov
mov
cmc
loopne
test
cmp
and
lds
cmp
push
in
cmpsl
push
pop
adc
mov
add
or
or
mov
inc
pop
jae
out
pop
cmp
mov
addr16
mov
movsb
xchg
lods
and
xor
cmp
data16
jecxz
mov
and
lret
or
sub
and
adc
xorb
push
sarb
xchg
pop
fwait
sub
jecxz
dec
roll
xlat
sti
scas
push
addr16
daa
jmp
rcl
std
add
pop
sarb
xchg
sti
bound
pushf
push
rorb
mov
mov
mov
lods
pop
cmp
inc
fsts
pop
sub
xchg
xor
mov
ljmp
lods
mov
adcb
jnp
cmc
dec
das
leave
or
test
xor
add
mov
cmpsl
lds
call
ret
pop
outsl
pop
outsl
rcrb
icebp
iret
cs
aaa
push
popf
cmpl
sub
ret
cwtl
mov
sub
cld
movsb
leave
dec
or
lds
dec
push
pop
repnz
sbb
fwait
ds
mov
out
test
bound
adc
xchg
push
testb
adc
push
mov
mov
adc
loopne
ss
adc
jbe
scas
aad
sbb
xchg
sub
cmp
repz
in
sub
inc
dec
pop
jl
addl
aam
std
fistps
add
test
and
xchg
test
sbb
addb
icebp
add
mov
sub
adc
sbb
fimuls
sbb
sbb
mov
add
jg
mov
cmpsl
cmp
shrl
pop
inc
and
and
nop
pop
pushf
dec
inc
fbstp
test
out
js
or
sbbl
xchg
popa
lea
xor
adc
movsl
xor
stos
je
mov
out
mov
es
cltd
movsl
out
sbb
movsb
lea
cmpsl
aaa
mov
addl
dec
adc
icebp
push
jae
jns
adc
fcomi
es
mov
adc
and
das
aas
gs
lahf
mov
cmpsb
jae
push
add
cmp
mov
leave
ljmp
xor
adc
fs
mov
imul
cld
lods
jnp
pop
push
jne
outsl
les
xchg
in
ret
and
jb
pop
fimull
popa
jg
pop
mov
xchg
imul
mov
xchg
adc
inc
mov
fistps
fisttpll
sub
rcll
sbb
cmp
scas
shrb
or
inc
adc
add
lock
arpl
inc
cmp
mov
mov
lods
push
repnz
sbb
pusha
int
shl
xchg
pop
std
sub
xchg
sub
in
mov
adc
iret
mov
popf
mov
inc
das
sar
leave
aas
int3
and
push
mov
sar
pop
or
hlt
jbe
cmp
mov
dec
adc
jge
mov
cmp
rep
ss
lret
in
lock
loop
inc
std
xchg
pop
std
mov
ror
mov
stos
sub
pop
jo
inc
icebp
in
xor
or
jp
mov
lods
sti
sub
mov
sub
idivl
incb
mov
popf
mov
push
sbb
jmp
push
mov
loopne
sbb
getsec
mov
fisubl
push
loope
mov
cmp
push
mov
imul
into
andb
jge
mov
and
sub
outsl
out
adc
add
test
das
jmp
mov
push
pop
sub
mov
cmc
and
lock
xor
mov
repz
fmull
scas
mov
inc
int
inc
mov
mov
dec
imull
xor
cmp
add
cmp
xor
cmpsb
repnz
mov
enter
sbb
loopne
testb
adc
pop
sub
sbb
xor
mov
out
int
aad
adc
mov
in
loope
repz
or
data16
xor
lcall
mov
mov
inc
into
pushf
leave
or
adc
lds
jns
push
fldt
add
or
es
mov
jno
mov
sub
jg
pop
hlt
aad
and
std
mov
pop
push
lret
popw
mov
pop
call
ss
pop
repnz
add
rcrl
aad
outsl
lds
ds
xor
xchg
mov
and
aas
inc
fcmove
cli
adc
cmp
and
paddw
test
and
gs
and
inc
scas
lret
or
sbb
pop
outsl
fnstcw
xor
aas
sbb
cmpsl
sbb
test
mov
xchg
xlat
lahf
mov
ljmp
movsl
cmp
dec
dec
cmpsl
inc
cmpsl
sbb
dec
dec
stos
adc
cli
inc
lock
mov
int
nop
sarl
lcall
aaa
push
and
and
mov
mov
dec
mov
imul
shll
fs
pop
imul
cld
int
rolb
jle
and
dec
xor
addr16
dec
xchg
fldenv
test
or
mov
sub
xchg
xor
cwtl
lods
or
mov
lret
adc
xchg
add
lret
cld
push
xorb
jmp
outsb
hlt
push
sub
and
adc
sbb
roll
push
push
out
ret
insb
ret
pop
or
lds
sbb
push
jb
test
daa
jo
popa
js
or
inc
repnz
jp
test
adc
sub
xchg
jnp
aam
adc
repz
adc
pop
cli
cmpl
cmp
mov
xchg
scas
mov
cwtl
cmc
sub
imul
loop
or
and
inc
adc
mov
push
fldt
push
mov
adc
aas
add
sub
out
inc
sub
fisubl
xchg
pop
out
and
xchg
in
jne
pop
lods
cmp
rep
pop
sub
std
out
xlat
inc
out
jb
rorb
gs
in
add
push
movsb
subl
popf
fcompl
inc
ret
mov
lods
out
xor
loopne
inc
gs
pop
or
into
loop
mov
lods
xor
das
es
arpl
xchg
xchg
mov
insl
mov
cld
cmc
test
pushf
pop
stos
lret
pop
jns
and
je
sbb
inc
add
adc
out
cltd
test
test
push
push
in
out
arpl
jno
hlt
add
or
and
pop
and
add
stc
fisttpll
dec
inc
int3
adc
sahf
adc
xchg
push
adc
xor
mov
jns
pushf
loopne
pop
adc
movsb
and
test
mov
rol
loope
shlb
ret
loop
pop
xlat
push
je
mov
and
popl
inc
push
das
push
pop
scas
push
jne
insb
sub
shr
fwait
pushf
sbb
xor
adc
xlat
dec
scas
jl
subl
and
shlb
sub
push
in
mov
shrl
hlt
and
aas
jp
mov
add
add
sub
cmp
mov
push
stos
mov
and
ret
sub
xchg
in
mov
jge
lods
loope
inc
mov
mov
mov
push
jge
push
fimuls
fsubr
dec
in
lret
push
inc
mov
push
sbb
pusha
arpl
push
ss
fildll
mov
or
add
and
inc
mov
fmull
rorl
push
das
mov
lfs
jge
mov
mov
dec
mov
leave
fisttpll
pop
stos
dec
incb
dec
sbb
mov
bound
sub
leave
lods
loope
mov
movsb
pop
mov
sarb
loopne
notb
or
mov
cmpsl
xchg
jne
sub
push
mov
ja
outsb
mov
loope
ret
lods
mov
ret
enter
fsubl
push
sbb
into
adc
push
lahf
xor
dec
cmp
shrb
and
test
add
shl
enter
sub
mov
in
daa
and
push
sbb
mov
dec
adc
xchg
les
imul
jl
ss
inc
cmp
ja
sub
pop
decb
xchg
pop
jg
dec
push
pop
movq
pop
fidivrl
fsubrl
or
test
jecxz
frstor
mov
cs
fs
and
rolb
sarb
popa
lock
inc
test
int
xchg
shll
pusha
and
mov
cmp
stc
sbb
das
jnp
insl
ret
push
add
inc
movsl
pop
mov
mov
div
mov
cmp
pop
pop
fsubp
cmp
int
daa
mov
in
sub
out
js
sub
push
sbb
movsl
popa
icebp
xchg
aaa
push
add
pop
mov
outsl
mov
push
inc
mov
andb
arpl
or
mov
add
mov
mov
aam
into
push
lea
xchg
jg
add
mov
leave
inc
arpl
lcall
stos
enter
lods
mov
repz
adcb
or
enter
loopne
mov
mov
sub
xchg
imul
repz
add
iret
lea
add
lret
pop
inc
mov
imul
adc
mov
lods
fmuls
adc
sbb
mov
push
mov
push
sbbl
fiadds
mov
cmpsb
xchg
stos
into
and
push
dec
clc
cmp
jp
movl
jne
sbb
inc
cmpsl
pop
push
xor
les
push
xchg
movsl
fnstsw
rorl
lea
cmpsl
ffree
scas
pop
inc
lahf
dec
jno
jae
cmc
out
cmp
mov
mov
mov
mov
or
jo
xor
mov
roll
fsts
pop
sbb
in
adc
std
and
pushf
adcl
je
cmp
or
xor
fwait
jmp
dec
push
scas
pop
rcr
fs
notl
inc
adc
mov
and
or
adc
test
lds
inc
mov
jae
cmp
jne
cli
cs
aas
push
or
cmp
dec
and
jb
in
adc
mov
jmp
mov
sti
pusha
incl
cwtl
ljmp
mov
add
shlb
jmp
mov
adc
xchg
jmp
mov
jmp
xor
adc
inc
pusha
imul
jo
lods
stos
inc
jb
or
xchg
sbb
popf
lcall
movsb
inc
mov
aas
pop
mov
xor
fidivrl
scas
and
stc
ret
lret
mov
int3
xor
or
mov
fistpll
bound
orb
jl
and
push
out
ror
add
neg
iret
fldl2e
cwtd
mov
je
mov
mov
sahf
movsl
shlb
mov
daa
ljmp
add
mov
mov
arpl
les
push
hlt
xor
pop
pop
or
cwtl
outsl
pop
or
mov
push
cmp
scas
mov
sarl
jae
and
std
les
mov
lahf
clc
push
lahf
jns
jnp
mov
sti
int3
xchg
and
ret
pop
jp
jmp
je
psadbw
jp
int3
in
js
icebp
aas
std
inc
fs
insb
std
inc
pusha
jp
xchg
arpl
cmp
xor
sub
jb
lds
les
mov
cmp
xchg
shll
xor
fistpll
jae
sub
cmp
fs
sbb
push
outsb
jae
aas
mov
mov
xor
aas
scas
addb
dec
cmp
out
sahf
jb
pop
fstl
hlt
jle
sub
or
mov
ror
push
push
push
or
gs
mov
dec
faddl
pop
incl
mov
mov
push
push
and
rclb
or
jb
sahf
sbb
or
inc
inc
movsb
cld
sbb
push
aam
scas
jnp
into
in
faddl
filds
lods
addb
jmp
mov
or
roll
pop
dec
aaa
sbb
pusha
lock
pop
sub
cmc
js
mov
push
into
pop
xchg
ds
cmc
repnz
push
movd
cmpsl
jb
mov
in
sub
in
aaa
push
jo
lcall
xchg
lds
sbb
enter
or
mov
outsl
lds
cmp
inc
pop
stos
pop
xor
and
inc
xchg
lock
outsl
ds
cmp
cs
or
movsl
jl
test
or
js
pushf
fwait
pusha
inc
adc
push
or
movsb
or
cmp
and
sub
int
and
sbb
pop
or
xor
mov
and
xor
jno
and
jecxz
clc
xchg
mov
aam
mov
sub
xchg
mov
pop
out
mov
jle
or
sub
es
push
arpl
repnz
pop
jmp
or
fnstcw
pshufw
insb
mov
inc
xor
adc
fistps
mov
aaa
neg
mov
push
sub
xor
xchg
ret
fs
icebp
das
repz
mov
pop
mov
mov
pop
in
enter
pop
fwait
repz
sbb
cli
xchg
add
fidivs
pop
icebp
or
sbb
cmp
cli
dec
je
out
lahf
in
scas
fdivp
add
pop
xor
jns
add
adc
fistpl
mov
repnz
insl
and
mov
je
ss
bound
sub
aam
sbb
sub
cmp
cltd
xchg
sahf
inc
xchg
cmp
push
std
or
stos
jnp
cmpl
shrl
xchg
mov
call
jbe
mov
scas
jns,pn
push
outsb
nopl
inc
rcrb
add
sbb
mov
aad
pop
testb
ds
or
pushf
mov
in
xchg
adc
fistpl
and
call
icebp
inc
add
mov
cmp
movsb
popa
push
nop
xchg
test
xchg
push
jae
popa
sahf
mov
xchg
fidivl
mov
rclb
add
dec
jae
add
and
adcl
pop
jl
cmp
add
popa
or
js
in
cmpsl
int
xchg
mov
mov
inc
ja
dec
nop
aas
scas
xchg
pusha
iret
pop
fidivs
jl
je
orl
push
and
nop
std
rcrb
pop
shll
jb
aam
jo
lods
inc
inc
std
repnz
add
inc
andb
iret
incl
sub
dec
jecxz
es
inc
or
xlat
push
mov
inc
and
add
stc
sbb
pop
test
sub
lods
repz
mov
nop
xchg
orb
jle
push
xchg
roll
inc
pushf
sub
fcomi
bound
mov
test
dec
aad
das
andb
movsl
xchg
int
mov
leave
aaa
jg
jge
xor
dec
jb
jo
test
into
mov
cmpb
outsl
sbb
popf
fwait
jb
jae
fcoml
xor
lahf
lds
out
sahf
movsl
jnp
mov
je
pop
arpl
outsb
sbb
sti
xchg
cltd
push
das
dec
mov
frstor
loop
clc
xchg
mov
sahf
sbb
add
push
fbld
jl
fmuls
xchg
shrl
stos
mov
inc
add
pop
rorb
test
cli
lret
adcb
stos
ret
pop
xor
or
lock
pop
adc
mov
cmp
jbe
adc
jmp
xor
cmc
xchg
add
je
scas
notb
shl
int
cmp
jae
pop
shrb
dec
inc
and
add
in
xchg
push
mov
outsl
les
repz
icebp
jg
divl
repz
fildl
das
xchg
cwtl
xchg
jg
xor
sub
out
and
fimull
xlat
pusha
push
fdivrl
jno
testb
gs
and
push
fnsave
cwtl
sbb
cmpsb
out
jmp
push
popf
dec
repz
dec
cld
jne
add
push
es
lcall
cmp
fwait
lock
ficomps
dec
sub
xor
icebp
call
incl
inc
sahf
stc
mov
jne
das
daa
imul
in
rcl
cwtl
es
xor
xor
fcmovne
popa
popa
sbb
add
pop
loop
push
scas
jg
adc
sti
sarb
fdivl
js
or
dec
imul
mov
xlat
xchg
add
js
mov
fnstenv
test
lock
add
incl
fucomp
or
into
out
dec
jo
cmp
inc
mov
call
inc
std
jg
stos
mov
adc
add
loop
aad
mov
cmp
jmp
dec
inc
loopw
rcr
enter
sbb
movsb
aam
adc
loope
sbb
jge
shll
or
lods
lock
test
add
stc
sbb
jo
push
push
adc
pop
pushf
pop
mov
shll
arpl
faddl
mov
sub
insb
in
jl
fdivp
add
rolb
pop
xchg
push
out
jge
cs
dec
mov
xchg
jns
out
lcall
add
icebp
xor
stos
dec
sub
jnp
sahf
xchg
xor
jl
adc
orb
addr16
cmpb
inc
or
repnz
mov
stos
out
push
jbe
insb
stc
dec
popa
add
mov
xchg
pop
testb
jge
push
pop
jp
adc
sbb
jmp
mov
rcrb
xor
mov
repnz
ljmp
mov
xchg
mov
sub
push
cmp
adcl
popf
jmp
in
mov
movq
cmpsl
filds
mov
jg
sub
scas
add
stc
xor
inc
cmp
pop
lock
orb
cli
les
jne
fnstsw
dec
sbbl
or
repnz
cmc
mov
sub
sbb
movhps
cld
sarl
push
pop
mov
and
sti
push
ss
dec
xchg
xchg
aas
mov
dec
js
repz
pop
repz
and
dec
clc
ljmp
mov
mov
mov
in
inc
scas
arpl
fists
mov
add
clc
mov
cmp
ret
push
aas
inc
nop
insl
mov
pop
clc
mov
mov
pop
dec
mov
push
iret
scas
psllq
hlt
adc
mov
cmp
mov
mov
or
dec
xor
sub
mov
orl
pop
cmc
cmp
cmpsb
imull
pop
hlt
fst
dec
adc
cmp
jl
cltd
pop
mov
movsl
dec
and
outsl
adc
out
out
inc
out
mov
test
and
dec
cmp
jle
in
repz
mov
cltd
sub
pop
lcall
scas
bound
jge
mov
std
loope
dec
xor
das
lock
les
cmpsl
cmp
ret
xchg
adc
shr
push
shll
mov
push
sub
js
mov
mov
dec
xchg
in
ret
ret
fstl
pop
sbb
xchg
pop
adc
pop
lret
stc
ss
inc
push
shrl
pop
je
call
xor
xor
mov
or
dec
in
inc
push
mov
xchg
fs
inc
dec
in
mov
out
int
mov
fisubrs
sbb
xorl
pop
xchg
cmpsb
cmp
orb
pop
pop
or
add
adc
dec
lret
push
mov
push
push
popa
mov
or
mov
mov
aam
sub
xchg
and
das
es
sbb
fadds
push
sub
out
or
and
cmpsl
add
inc
push
lds
fs
out
cmpsl
cmp
cmp
xlat
das
popa
mov
out
jl
popa
jge
cs
xor
inc
insl
pop
icebp
sub
pop
push
repnz
push
cwtl
push
push
cwtl
push
popa
loopne
ds
js
jp
cmp
mov
adc
and
enter
adc
in
mov
mov
xchg
fisubrl
xchg
jo
fisttps
xor
jmp
pop
xor
bound
sbb
outsb
lcall
mov
xor
add
adc
xor
jne
lahf
das
mov
fcompl
xlat
fdivr
pop
pop
outsl
sbb
arpl
stc
mov
inc
jle
lcall
xchg
lea
sub
inc
xor
scas
pop
pop
aas
xorb
pop
adc
ds
dec
lea
leave
push
pusha
pop
cmp
mov
into
adc
sub
add
lods
sbb
adc
jns
pop
ja
lock
mov
pop
pop
mov
inc
push
ds
or
mov
pop
std
out
test
push
insb
or
scas
std
xchg
in
mov
cmp
xor
in
lods
inc
pusha
ret
sti
mov
xchg
cmc
push
loope
negb
jle
in
and
push
mov
stos
aad
add
adc
xor
rcrl
mov
sbb
jg
xchg
into
addl
imul
movb
xchg
sub
pop
jl
xchg
into
sti
mov
dec
insl
xchg
inc
dec
test
test
insb
rclb
ret
jb
cmpsl
arpl
xor
sarb
cmp
pusha
push
sbb
inc
pop
repz
shll
push
test
ja
mov
fdivs
aas
mov
mov
cmp
pop
pop
mov
and
inc
dec
sbb
or
pop
mov
and
inc
cmpsb
fs
fimull
test
cmp
mov
dec
pop
call
lock
add
inc
pop
lods
push
rdpmc
pop
in
shlb
pop
rorb
or
ja
sbb
adc
push
inc
sub
pandn
xor
test
cwtl
xchg
xchg
mov
jmp
scas
aad
repnz
cltd
rcl
xchg
fidivrs
xor
stos
data16
fdivl
lret
mov
xchg
jecxz
loop
and
adc
jg
lods
mov
fwait
pop
xchg
pop
popf
push
pop
cltd
outsl
xor
in
cmc
insl
push
inc
jne
into
mov
loop
jo
mov
pop
pop
sub
adc
mov
cmp
iret
adc
push
dec
imul
xchg
out
je
pop
ss
xchg
fwait
stos
cmp
popa
shl
jnp
adc
xchg
addb
sbb
shlb
pop
popf
movb
scas
jp
or
push
cs
in
fwait
mov
sarb
jg
loop
adc
ret
mov
test
not
mov
lods
xor
pop
decb
addw
fstps
les
mov
movsb
xor
pop
fldcw
mov
pop
and
sarl
cli
xlat
js
inc
adc
in
fsubl
shrb
inc
push
fdivrs
inc
ret
pop
adcl
cmp
push
fsubl
xchg
xlat
ja
jle
iret
push
sti
push
xchg
inc
and
mov
pusha
inc
mov
loope
rcrl
faddl
mov
pop
mov
cmp
cli
or
xchg
cmpsb
ds
loop
push
ds
stc
filds
insb
int3
xchg
xchg
add
cmpsb
xor
dec
push
mov
adc
mov
add
in
dec
out
sbb
mov
cmp
sub
xchg
aas
les
add
sbb
dec
push
int3
adc
into
adc
push
xor
fsub
xchg
mov
push
out
jo
je
loopne
push
sub
ret
jns
sub
outsl
movsl
mov
mov
out
cmp
loopne
xchg
fiadds
jb
dec
dec
inc
inc
aam
stos
xor
push
loope
xchg
jno
lret
lods
cmpsb
daa
icebp
dec
arpl
mov
mov
mov
add
mov
aad
sbb
xor
pop
movsl
xor
dec
or
dec
sub
xchg
cld
pop
test
jl
xchg
jne
fistps
outsb
push
shlb
test
outsl
jno
sbb
dec
and
xchg
adc
and
xor
xlat
mov
test
add
pop
push
mov
dec
std
mov
adc
inc
push
ret
push
mov
in
fwait
push
pushf
sbb
add
or
sarb
jmp
rol
movsb
shrb
inc
rcll
repz
or
xchg
xchg
sbb
pop
sahf
and
jae
or
ljmp
iret
cmc
add
pop
das
and
mov
repz
aad
fdivr
jle
mov
jno
out
pop
xchg
jecxz
pop
cmp
sub
cs
sub
ds
test
inc
sbb
aad
lretw
mov
fwait
sub
dec
les
addr16
or
aam
data16
lods
inc
xor
ja
out
and
lods
dec
push
sub
ss
in
push
data16
cmp
pop
sbb
sbb
sub
mov
or
mov
jbe
add
pop
and
jno
int3
iret
mov
xchg
js
xchg
dec
add
int3
cmp
push
gs
mov
fidivrs
popf
cmp
roll
ret
out
mov
mov
and
mov
rol
pop
push
shrb
int3
add
sub
and
fwait
lock
into
sub
jmp
and
out
add
inc
push
and
lea
inc
das
outsl
xchg
push
fsubl
or
push
xchg
dec
test
jp
push
mov
sub
jbe
pop
mov
loopne
inc
pop
xlat
pop
and
arpl
sbb
add
cmp
hlt
scas
xor
mov
pop
mov
push
in
inc
pop
sti
in
loope
imul
repnz
jns
enter
xor
push
orl
imul
add
push
xchg
jmp
scas
or
pop
inc
mov
xchg
inc
in
mov
xchg
mov
pop
inc
and
cli
in
mov
dec
out
jns
sbb
adc
sub
mov
mov
or
scas
push
ffree
out
xorb
test
das
cmpsl
dec
sbb
fidivs
pop
jecxz
mov
or
out
pop
inc
cmp
pop
icebp
std
sahf
enter
movsb
bound
sub
stos
loop
in
insl
mov
lds
pusha
rolb
add
popf
cld
in
je
ret
or
and
or
dec
vpsubd
jmp
cmp
enter
sub
in
je
out
jb
mov
cld
movsl
hlt
pop
xchg
imul
popa
int
cld
cld
or
jecxz
push
pop
xor
sarb
pop
out
cltd
test
sbb
sbbb
inc
mov
sub
aaa
jae
pop
lock
mov
jb
xor
xor
loop
andb
in
repnz
adc
inc
fwait
dec
sar
dec
push
push
jo
into
insl
jae
leave
cmp
or
cmp
xchg
dec
test
cld
cmp
pop
rolb
push
jmp
aas
pop
inc
in
ljmp
cmp
call
mov
pop
push
loope
add
int
rclb
cmp
incb
aad
loopne
call
enter
stos
and
cmpsb
mov
inc
dec
xor
sbb
add
or
mov
xchg
inc
scas
cmp
and
outsb
mov
mov
jo
sti
js
or
xchg
xchg
inc
leave
mov
stos
insl
loopne
mov
into
out
xchg
pop
pop
lret
inc
scas
xor
lret
enter
inc
xchg
je
imul
subl
sub
or
cmp
mov
mov
in
mov
jns
call
cmp
mov
jbe
imul
stos
jo
jbe
mov
in
mov
add
or
push
jb
flds
xor
mov
mov
out
jb
mov
iret
mov
push
mov
lods
mov
cmpb
adc
inc
adc
fists
call
pop
sbbl
pop
mov
and
sahf
fstps
mov
cmc
fists
scas
push
dec
and
mov
add
incb
sbb
xchg
cs
fs
lahf
xor
arpl
insb
add
test
sbb
fucomi
and
mov
fsubrl
rcrl
sub
inc
repz
jmp
xor
in
xchg
inc
test
int
adc
adcb
aad
sub
cli
inc
mov
or
or
mov
xchg
mov
add
js
cwtl
cmp
sbb
xor
cmp
dec
mov
add
xorl
jne
test
fwait
daa
jl
dec
mov
rcrl
fmull
lret
in
jecxz
aam
hlt
addr16
les
dec
mov
mov
or
pop
fistl
arpl
frstor
aas
xchg
sub
push
dec
lahf
repnz
mov
mov
xor
or
push
ret
test
stc
in
fs
test
rclb
adc
push
cltd
loope
push
rcrb
arpl
jns
or
rclb
imulb
call
xor
mov
pop
sbb
pop
add
lcall
inc
fwait
in
add
pop
movl
mov
cmp
cmpsb
jno
mov
mov
out
cmp
inc
mov
push
js
out
pop
test
ja
and
adc
xchg
or
mov
in
and
fsubs
loopne
std
push
and
sub
cwtl
xor
test
inc
xchg
pop
scas
jne
or
and
dec
jmp
negb
sahf
mov
xchg
xor
push
daa
bound
cmc
inc
outsb
insl
push
and
or
and
clc
inc
mov
jns
add
out
out
pop
imulb
mov
cmpsb
fimull
inc
adc
push
inc
mov
call
push
in
mov
ds
test
dec
dec
dec
push
in
xchg
clc
icebp
xchg
subl
push
xor
outsl
adc
ss
inc
mov
loop
mov
xor
mov
rcl
jnp
sub
repz
and
push
int
xchg
cmp
push
shlb
aad
cmp
rcl
push
sbb
mull
jo
or
sub
jecxz
rclb
lea
xor
in
iret
mov
ljmp
movsb
push
lea
out
mov
mov
cmp
in
cmp
into
and
push
pop
mov
loopne
aaa
mov
cmp
mov
adc
jg
xchg
dec
cmpsl
push
sub
push
dec
sahf
ljmp
loop
shlb
orl
fs
xchg
jae
cmp
xchg
jbe
jb,pt
cmp
out
add
inc
sti
shll
dec
bound
or
out
loop
mov
cmp
icebp
ljmp
mov
test
lret
sti
mov
pop
out
jge
xchg
loopne
pop
mov
mov
out
add
call
negb
mov
mov
enter
scas
xchg
or
addb
xlat
inc
sub
dec
fildl
mov
xor
jg
dec
shlb
js
push
lods
jo
repz
imul
mov
add
movsl
push
repnz
cmpsb
in
pop
or
push
cmpsb
adc
shr
lret
icebp
mov
test
repz
push
dec
mulb
adc
dec
jo
mov
sub
push
loope
sahf
stc
push
pop
adc
adc
xlat
movsb
int3
cmpsl
mov
in
ret
lcall
icebp
or
scas
push
mov
inc
addb
fdivl
cld
js
mov
cltd
xor
insb
mov
in
stos
cmp
idiv
inc
mov
cmp
in
decl
mov
cwtl
inc
xchg
shrl
bound
das
call
mov
xchg
int
lret
add
jmp
sub
mov
adc
mov
xlat
mov
mov
insb
in
xchg
add
mov
push
lahf
int3
pop
jae
xchg
add
add
mov
or
or
loopne
arpl
cltd
fists
dec
jmp
repnz
mov
es
jne
movsb
lret
jne
repz
or
orb
push
cmp
dec
nop
jge
lcall
js
mov
xchg
stos
xor
xchg
addl
jle
sbb
iret
sub
gs
sbb
int
leave
mov
mov
arpl
add
mov
pop
xor
and
fisubrl
and
cli
push
sti
enter
insb
or
jne
lods
repz
aas
ds
loopne
mov
clc
ret
pop
nop
jnp
aam
imul
sub
pop
push
add
lods
pop
push
outsl
adc
xor
mov
test
call
shlb
fistl
int
cmp
sbb
sub
ror
aad
movsl
pop
and
xchg
jecxz
mov
pop
mov
ljmp
lcall
insb
inc
dec
stc
mov
sub
sub
jg
add
ret
add
mov
iret
stos
sbb
aas
jl
fistl
nop
cmp
mov
pop
pop
test
daa
xchg
push
xchg
sahf
sub
add
push
mov
arpl
cld
and
push
mov
or
in
dec
add
rorb
xor
xor
xchg
rclb
jne
cmp
outsb
stos
pop
in
pop
and
fstp
dec
mov
cwtl
js
xchg
out
sub
adc
scas
push
jns
push
imul
les
lret
add
dec
clc
fidivs
mov
ds
movsl
cmp
jge
lret
xor
and
jmp
or
and
in
sbb
adc
or
je
test
mov
fisttpl
inc
xchg
and
mov
cmp
mov
fbld
push
sarl
sbb
xchg
outsl
shl
insb
mov
les
fcompl
xchg
mov
inc
repnz
lret
xchg
mov
xlat
das
mov
mov
loop
mov
ds
jmp
enter
mov
test
push
loopne
lcall
imul
cmp
adc
test
fmul
sahf
fcmovnbe
sahf
andb
xchg
mov
or
add
or
addr16
cld
sub
sub
sub
sbb
pop
push
xor
rcrl
sbb
or
fisubs
mov
lods
stos
in
daa
and
insb
cmpsb
sub
mov
dec
cmp
shrb
push
adc
jne
jns
fs
dec
into
cmp
cld
sub
jl
and
outsb
rol
subb
loope
shll
pop
sahf
xchg
xor
mov
adc
mov
aad
push
xchg
sbb
loop
mov
pop
mov
sbb
dec
add
mov
sbb
das
test
push
add
or
mov
sti
je
outsb
jnp
outsl
mov
loopne
add
xlat
adc
dec
out
add
mov
mov
mov
mov
add
jae
rcrl
les
jns
aas
and
imul
xor
nop
clc
in
sub
test
dec
mov
xchg
push
pushf
sub
add
sub
in
mov
push
fs
sub
mov
adc
ljmp
mov
jle
sbb
dec
xor
push
in
loopne
fldenv
dec
jo
ret
ss
mov
fs
dec
jle
rcll
adc
pop
shlb
call
cmpsl
test
jp
aas
ja
popl
ret
dec
outsb
xor
mov
cmpsb
jmp
sbb
mov
outsl
adc
icebp
mov
out
pop
inc
daa
je
or
mov
imul
scas
xchg
mov
sbb
punpckldq
lds
and
movsl
popl
lds
sub
cmp
jno
inc
pop
call
jmp
imul
daa
fs
xchg
addr16
into
push
inc
push
rolb
mov
movsl
lds
test
or
dec
lods
mov
jmp
fucomp
dec
xchg
dec
lahf
and
inc
dec
jns
push
sbb
fnstcw
gs
clc
or
mov
add
cmp
push
push
sbb
jecxz
scas
les
jl
mov
mov
mov
sub
xor
cmp
push
xchg
mov
dec
cwtl
lods
stc
outsb
sbb
jg
sti
mov
xor
clc
adc
imul
popa
ja
pop
repnz
outsl
les
fmul
out
loop
fldcw
scas
or
sub
hlt
sub
sub
inc
stos
xor
cmp
loope
fsubl
cmpsl
adc
mov
xchg
xchg
test
lahf
push
scas
dec
push
out
or
xorb
adc
cld
in
out
xchg
movsl
xor
push
cs
mov
data16
mov
imul
stc
dec
in
adc
inc
int3
push
cmp
or
int3
in
orb
and
sub
ds
out
mov
push
or
in
jmp
adc
dec
inc
xor
mov
or
cmp
repnz
cmc
jg
jns
xchg
test
clc
rclb
insb
and
pushf
lahf
hlt
lret
negb
mov
lret
test
mov
lahf
jo
adc
movsb
jbe
xchg
sbb
std
cmpsl
mov
xchg
adc
in
mov
lds
out
xchg
xor
pop
daa
dec
push
add
push
push
lcall
test
cs
lods
addl
inc
push
bound
xor
shlb
imul
mov
popf
jns
rorl
jl
jge
je
outsb
push
jmp
push
cmc
cld
out
adcl
out
jge
iret
xor
movzbl
std
jb
fisttpll
cmpsl
popa
lahf
pop
fsubs
dec
sub
mov
lahf
jbe
xor
fxch
cld
pop
insb
sbb
repz
in
sahf
lcall
dec
xchg
push
roll
adc
adc
cmp
mov
pop
jmp
dec
or
inc
or
jl
in
sbb
xchg
scas
fildl
mov
inc
imul
fbld
pop
cmp
inc
dec
dec
lahf
and
jle
xor
mov
movsl
push
cmp
pop
div
and
mov
cs
jp
xchg
xchg
lret
adc
movsl
dec
inc
out
sub
push
xor
inc
xlat
shll
mov
popf
or
pop
push
fcoms
mov
sub
jmp
mov
jns
add
ljmp
mov
and
cmp
and
lahf
push
int3
call
bswap
aas
push
push
mov
dec
mov
xchg
mov
je
in
int
repnz
jno
dec
mov
mov
pop
push
lea
and
mov
fsts
lahf
inc
mov
inc
nop
xor
xor
xor
add
pop
adc
jp
test
sbb
fsubl
cwtl
aam
jns
mov
xchg
or
sbb
sub
mov
adc
dec
nop
xchg
dec
mov
pop
xchg
inc
out
rcrb
lret
push
das
xor
push
dec
jno
fnstenv
xor
ljmp
jmp
add
sbb
movsl
ret
mov
push
push
mov
mov
mov
cmp
mov
std
mov
dec
and
xor
in
adc
mov
cmp
testl
xlat
inc
mov
lea
push
inc
into
xchg
adcl
sub
cmp
hlt
push
out
rolb
add
nop
mov
jle
push
repz
and
mov
mov
pushl
movsl
cmp
or
ss
jmp
jns
ret
cmp
mov
shlb
test
dec
xchg
aas
push
jecxz
aam
pop
outsb
inc
mov
cmpsl
decb
mov
xorb
aam
scas
mulb
cmp
xchg
iret
and
das
mov
je
outsl
mov
cs
movsl
mov
sub
loop
mov
cltd
mov
sub
iret
inc
push
shl
call
cs
xchg
adc
lock
aas
sub
pushl
or
fs
repz
neg
sbb
xchg
mov
and
mov
mov
shll
movsl
call
cmovbe
mov
jae
push
xchg
movsb
push
mov
sbb
dec
adc
mov
rorb
test
xor
imul
mov
dec
lahf
mov
pusha
jl
arpl
pop
adc
movsl
rcll
mov
fistpl
lods
add
xlat
popf
and
lcall
jae
les
pusha
mov
push
push
dec
xor
mov
xchg
push
mov
dec
xor
sub
fadds
int3
nop
jl
loope
xor
test
mov
loopne
loopne
sbb
mov
adc
out
xchg
arpl
ret
test
mov
sbb
daa
decl
sub
es
sahf
sqrtps
mov
xchg
and
jne
ds
aaa
je
mov
outsl
daa
aas
xchg
lock
addl
movsl
xchg
loope
cmp
mov
push
test
das
jns
pop
inc
jg
sbbl
shrl
jo
lds
ds
lds
add
jb
in
push
add
sahf
test
jb
mov
stc
push
test
imul
sbb
mov
into
ret
jne
pop
mov
push
or
cmp
mov
cmp
and
push
pop
dec
or
prefetch
or
das
js
sub
xchg
pop
js
pop
pop
outsb
push
aam
mov
in
push
add
fstpl
stos
xchg
mov
xor
gs
pop
rol
jmp
ret
frstor
xchg
dec
push
or
orl
cwtl
loop
popf
jno
stos
enter
sbb
dec
pop
cmpb
inc
pop
mov
push
out
mov
mov
outsl
inc
push
push
or
cmp
and
mov
leave
andb
pop
call
adc
cmp
sbb
insl
enter
cs
std
jg
xor
push
push
dec
bound
cltd
fdivrl
sahf
push
and
sarl
cmp
xor
sbb
cltd
xor
mov
xor
push
pushf
int
loope
mov
lods
sub
cmc
addl
sahf
test
orl
push
imul
mov
pop
mov
enter
adc
mov
push
or
add
jnp
mov
xchg
jp
shlb
dec
js
sbb
int
jecxz
fdivr
mov
add
fnstcw
movsl
lahf
ja
iret
cmp
jmp
mov
add
push
out
cltd
dec
dec
mov
movsb
into
push
in
std
jnp
pop
aam
shlb
cmp
mov
xchg
jp
in
adc
add
mov
jmp
cs
jo
lds
or
sbbl
out
and
leave
ret
testb
and
adc
sbb
add
daa
sub
xchg
cmp
push
aaa
int
mov
int3
xor
push
test
lahf
adc
leave
setb
stc
pop
loop
lahf
jbe
mov
iret
popf
shrl
hlt
jae
in
das
enter
and
negl
inc
lret
test
out
pop
jmp
push
cmc
jl
push
mov
mov
jbe
pop
insl
aam
jne
mov
scas
mov
jne
dec
inc
jno
fadds
fdivr
adc
xchg
test
cld
mov
xor
mov
pop
int3
pushf
aad
or
push
mov
xchg
mov
repz
rclb
sub
mov
scas
mov
or
nop
nop
jp
xchg
insl
mov
or
fidivs
sbb
pop
jp
mov
std
and
push
sbbb
dec
cltd
push
stos
pop
or
ja
loop
dec
jae
pusha
data16
adc
push
loope
inc
sub
or
in
xchg
pop
insb
faddp
sub
push
pop
imul
scas
xchg
scas
cld
sbb
jns
ret
test
dec
ljmp
pop
in
hlt
lahf
jecxz,pn
xchg
mov
and
xor
jmp
cmpsl
and
scas
add
adc
jge
div
idivl
jle
add
sbb
in
out
rclb
fistps
xor
sub
or
xchg
lods
das
ret
leave
jns
leave
clc
push
mov
xor
movsl
pop
cmpsb
outsl
xchg
lret
xor
mov
jle
lret
ret
add
insb
xor
sbb
movntq
push
push
jecxz
es
jge
xchg
xchg
iret
and
popa
mov
sbb
mov
jmp
mov
xchg
call
xchg
sub
outsb
sbbl
test
fcmove
ljmp
xchg
nop
or
adc
pop
mov
scas
ja
psraw
movsl
sub
pop
adc
cmp
lods
push
and
hlt
cld
inc
add
mov
dec
arpl
add
push
fsubrs
and
lods
push
lds
xorl
frstor
add
pop
add
movsb
jne
sbb
xor
xchg
mov
push
xchg
cltd
cmp
imul
xchg
aad
jno
dec
inc
inc
push
popa
ret
adc
sub
adc
inc
jl
lret
jecxz
add
jnp
hlt
xor
sbb
xor
xchg
repz
or
xor
fcoms
jecxz
cld
inc
fs
cmp
jl
add
mov
sti
leave
cmc
adc
mov
sbb
push
push
xor
mov
xor
pop
fwait
movsl
push
shll
mov
jnp
sbbl
lds
jno
dec
ja
repnz
add
mov
in
popf
bnd
adc
mov
roll
adc
push
popa
adc
mov
in
pop
imul
push
imul
inc
mov
aad
cmp
jbe
add
stc
dec
jo
notl
sub
inc
test
idivb
xchg
cmpsl
movsl
push
mov
in
lcall
ret
cltd
test
add
mov
sub
and
sbb
or
out
jnp
inc
repz
outsl
in
push
shll
int3
sahf
jns
clc
pop
imul
subl
mull
pop
mov
dec
pushf
and
enter
and
xchg
dec
xchg
xchg
pop
loop
insb
out
pop
cwtl
xchg
push
mov
push
mov
cs
pop
lds
cli
mov
push
mov
jecxz
inc
or
stos
iret
scas
insb
xchg
mov
add
out
cli
fistl
jmp
xor
fs
mov
leave
sbb
pop
mov
and
aas
pop
lds
xor
cmp
and
sub
scas
sub
jo
or
addr16
and
push
je
rorb
ficoml
outsl
iret
daa
push
insl
ds
fwait
cmp
je
xlat
mov
cmp
popa
xorb
movsb
fnstcw
jmp
hlt
xchg
xor
lret
and
daa
xchg
test
cmp
imul
cld
mov
dec
mov
scas
cwtl
repz
outsl
inc
inc
mov
push
xchg
icebp
lods
out
jnp
aam
lcall
fbld
mov
cmp
jp
sbb
lods
sub
sub
loope
int
or
inc
and
icebp
test
cmp
sbb
jo
cmp
or
loop
aam
add
iret
dec
inc
addl
out
and
pusha
btc
lret
sub
sub
into
pop
in
shrl
mov
pop
stc
bound
pop
inc
shll
out
icebp
fsubrp
in
dec
ds
in
xor
push
xchg
cmp
cmp
or
pusha
test
xorl
cmc
cmpsl
mov
nop
fdivrs
rolb
xor
shl
jle
cmp
mov
das
lret
cmpsb
jns
addb
dec
mov
aaa
nop
and
or
cli
or
shl
arpl
push
rcrl
sbb
shl
lahf
xchg
decb
push
cmp
xchg
xchg
add
movsl
sub
lods
mov
push
cmp
fs
test
fiadds
mov
cltd
sbbb
data16
lods
jle
lods
iret
mov
add
lock
lahf
call
push
sbb
std
fisubrl
or
scas
mov
push
jne
jg
mov
sarl
sub
or
lock
push
out
test
jle
scas
mov
cmpsl
lds
ss
or
mov
out
cld
push
outsl
jg
out
pop
and
mov
mov
sub
filds
push
push
dec
clc
mov
daa
call
imul
dec
xchg
in
mov
ret
mov
ficompl
lock
scas
lret
nop
leave
pop
add
sub
sub
loope
imul
and
in
iret
xor
aam
add
mov
jnp
pop
je
incb
testb
fists
mov
insl
mov
out
dec
push
add
pop
repz
xchg
enter
push
jb
fadd
pushf
test
fsubrp
gs
adc
pop
je
dec
sbb
and
dec
jg
fdivs
test
dec
scas
jg
fsubrl
popf
push
pop
or
hlt
insb
xchg
add
outsl
imul
in
mov
pop
in
xchg
in
inc
mov
push
pop
cltd
test
lret
mov
add
pop
enter
les
shl
and
sti
loope
mov
adc
add
mov
jns
cld
sbb
pop
pusha
pushf
inc
dec
mov
ret
lods
push
cmp
int3
sub
aam
and
rorl
sbb
decl
fldl
mov
xchg
adc
divl
add
shrb
xchg
mov
ljmp
jo
pop
push
rorl
in
nop
mov
dec
and
loope
dec
out
mov
in
jbe
fcoml
cmp
repnz
mov
pusha
ds
repz
shll
ret
sbb
dec
call
sub
add
int
lretw
sub
das
jl
and
dec
lods
enter
pop
mov
clc
mov
pop
xchg
shrl
aas
sub
stos
xor
roll
lcall
or
clc
inc
xchg
aaa
les
leave
ljmp
cmpsb
mov
in
gs
and
out
cmp
sahf
into
adc
sbb
daa
xchg
sub
imul
or
push
aas
lods
daa
mov
sub
imul
and
mov
and
stos
scas
out
jb
fisubs
out
shr
cmp
sub
frstor
loop
cmp
sahf
into
dec
adc
lods
in
imul
adc
pop
mov
ljmp
in
add
bound
push
cmp
js
ret
sahf
mov
push
repz
adc
sub
stc
lret
push
or
fneni(8087
dec
adcl
and
inc
add
adc
jecxz
mov
lock
stc
lahf
ffreep
movsb
movsl
fsts
cltd
jle
cmp
jecxz
and
mov
push
mov
bound
stos
mov
fnstsw
js
add
icebp
jge
shrb
push
pop
sub
cmpsb
shr
mov
std
das
cmp
pop
iret
jl
mov
test
jno
fdivs
mov
jnp
push
loop
cmpsb
push
testl
aaa
fbld
xor
ret
dec
lcall
cmp
ss
dec
mov
and
int
cmp
notl
aas
pop
jno
repnz
in
or
pop
mov
adc
lret
aad
dec
cmp
aas
test
mov
data16
xor
jo
jb
into
mov
mov
fsubl
mov
lret
mov
or
dec
xor
ja
mov
test
dec
or
lahf
mov
xchg
dec
cld
cltd
out
mov
ret
adc
stos
pop
jns
daa
xlat
pop
sbb
add
das
stos
mov
aas
xchg
js
pop
mov
push
pop
iret
jmp
pop
insb
leave
ja
sub
cld
popa
es
pop
cmc
jmp
xor
cmc
pusha
jnp
lahf
leave
sub
test
mov
xor
and
pusha
add
cmp
movsb
pop
xchg
dec
daa
xor
imul
sbb
movsb
lods
jmp
and
cmp
outsl
int3
pop
data16
sbb
cmpsl
sbb
lock
xchg
or
or
ret
lret
mov
scas
sub
cli
push
or
xchg
adc
pop
mov
cmp
mov
loopne
mov
test
sub
in
push
inc
repz
fs
and
sbb
daa
loopne
jle
addr16
push
insl
inc
stc
mov
movzbl
inc
lock
shl
xor
sbb
inc
int3
mov
jg
out
stc
cmp
push
pop
std
pop
dec
fcoms
mov
sbb
push
xor
pop
adc
mov
xchg
dec
ds
lahf
push
sub
test
es
imul
jmp
inc
xchg
inc
mov
cmp
cltd
aad
sbb
inc
scas
jecxz
jnp
rorl
in
mov
aad
loope
sbb
adc
call
fwait
scas
setne
inc
scas
xor
leave
lret
insl
stos
aam
sarb
subl
pop
jle
jp
jle
mov
sub
clc
jnp
mov
fsubp
arpl
mov
mov
sbb
adc
adc
cmp
out
add
mov
and
and
and
aaa
fs
rorb
adc
mov
and
mov
scas
pop
icebp
cmp
or
or
mov
filds
pop
or
push
scas
xchg
mov
ror
adcl
ret
push
adc
lret
sahf
test
repnz
dec
fwait
adcl
mov
xchg
jnp
jmp
or
ret
jl
push
testl
pop
lock
dec
pop
mov
pop
push
fistpl
dec
sub
iret
movl
adc
nop
sub
jmp
aam
or
or
inc
mov
lods
add
call
addr16
in
mov
sub
fimuls
sbb
fdivr
xchg
or
xchg
out
mov
dec
mov
in
lret
mov
dec
jmp
mov
and
pushf
mov
popf
aas
pop
mov
sub
push
cmp
sub
pusha
cwtl
js
pop
xor
sahf
arpl
in
sbb
das
repz
testl
mov
add
fcmovne
push
popa
jo
and
aam
fsts
addr16
pushf
and
popa
pop
stos
and
popa
ss
push
pop
cld
mov
cltd
sub
mul
loop
test
push
jns
jno
push
mov
cmp
jns
push
cmpb
mov
mov
pop
inc
push
inc
inc
fstpt
pop
test
out
or
in
les
xchg
xchg
add
fisttpll
sub
jne
mov
mov
or
cmp
daa
les
mov
lods
dec
sub
dec
mov
shl
bound
inc
das
mov
fadds
cmpb
jp
push
pushf
jno,pn
xchg
inc
xchg
add
add
fdivs
shlb
movsb
addb
imul
or
mov
pop
jmp
and
or
mov
out
or
dec
aas
inc
inc
push
mov
cmp
fsubs
fnsave
imulb
lock
movsl
stc
test
lret
push
int3
mov
xchg
xor
popf
cmp
flds
rcrb
sub
xchg
rcr
loope
hlt
add
add
adc
cmp
sub
and
pushf
pop
push
mov
adc
enter
insb
or
sahf
dec
jo
dec
xor
push
dec
insl
mov
adc
mov
jge
dec
enter
shll
sub
cltd
icebp
leave
in
add
xchg
jbe
jno
icebp
fucomi
xchg
sti
inc
ret
sti
xchg
sti
mov
pop
out
mov
leave
adc
fistps
cmp
add
or
push
shrl
sbb
or
jnp
or
sbb
mov
and
outsl
rorl
insb
pusha
add
jg
scas
pop
rol
push
push
xor
test
ficomps
sti
es
test
inc
dec
imul
add
push
addb
sub
jnp
push
test
test
test
inc
cmpsb
inc
fistps
or
xor
push
push
mov
test
das
xlat
pop
dec
pushf
loop
stos
inc
or
mov
fwait
jmp
pop
les
mov
addr16
cmpsb
int
imul
dec
sub
and
std
pop
jg
lahf
add
shr
icebp
pop
push
cli
out
mov
inc
loope
xchg
dec
out
fs
lret
cli
clc
mov
xchg
inc
mov
or
adc
xchg
or
arpl
adc
cmp
aas
ficoms
insb
out
dec
cs
or
pop
sarl
adc
dec
pushf
daa
lret
dec
mov
hlt
xlat
out
loopne
cmp
cmc
int
lds
or
adc
popl
fistpll
rorl
cmp
mov
add
xor
mov
inc
ret
jle
sti
out
cli
sub
adc
mov
dec
mov
stc
ljmp
cmc
rcrb
push
xchg
xor
arpl
imul
and
rcll
je
xor
dec
xor
dec
and
mov
fsubrp
dec
scas
pop
pop
and
lret
enter
or
xor
sub
push
push
sti
fmull
es
ss
xchg
xor
repz
xchg
aam
in
sti
je
out
jno
out
mov
jo
jmp
pop
aad
out
lock
inc
jbe
mov
loope
out
movsb
add
sbb
jl
push
aas
adc
ret
jecxz
js
dec
nop
push
icebp
sbb
ds
mov
sub
sub
lods
adcb
jp
xchg
push
sub
pusha
daa
cmp
pop
pop
cmp
pop
sub
fstpl
add
or
out
adc
fwait
push
cmc
and
loop
dec
jmp
pop
pushf
insb
jp
xor
lds
daa
xchg
test
inc
inc
mov
popf
inc
pop
dec
fs
scas
mov
add
xchg
das
test
mov
mov
hlt
cmp
push
sbbl
movsb
mov
das
je
jmp
test
dec
lahf
pop
xlat
add
adcb
daa
scas
push
cld
lods
xchg
sar
pop
in
mov
in
lods
dec
repnz
push
sti
sub
hlt
and
gs
orb
lea
jge
mov
fldcw
xorb
jae
ret
cld
data16
push
xor
testb
enter
pop
mov
jae
shl
out
inc
fiadds
stos
mov
test
cmp
fcomi
cmc
xor
repz
pop
xor
clc
mov
lods
out
rcl
and
aad
sbb
xor
inc
in
adc
or
sub
mov
mov
push
cmpsb
lret
pop
sub
pop
lret
stc
stc
sub
arpl
in
pop
push
sbb
pop
mov
aam
repz
jle
mov
xchg
addr16
cmp
jmp
mov
dec
push
loope
lea
mov
and
rcl
inc
mov
mov
pop
pop
loopne
adc
or
push
mov
dec
repnz
pusha
xor
inc
scas
mul
pop
movsb
add
sub
mov
imul
mov
mov
push
or
mov
popf
icebp
pop
arpl
jl
add
adc
popl
inc
and
inc
sbb
push
xchg
imul
ss
jle
push
data16
cmp
pop
lds
stc
inc
lcall
ljmp
or
xchg
add
add
imul
push
rcpps
lock
cmp
leave
bound
subb
jl
pop
pop
sarb
adc
adc
xor
lods
push
notl
sbb
cmp
sub
and
lahf
mov
xor
dec
mov
xchg
fs
cltd
sbb
pop
loop
ljmp
fcoms
es
pop
enter
mov
xchg
adc
mov
stos
jno
adcl
or
mov
aas
mov
lods
in
add
inc
test
push
and
push
ljmp
push
orl
std
push
aas
mov
test
filds
add
pop
int3
jle
mov
sub
cli
cmp
ja
pop
or
adc
push
ret
pop
std
mov
cmpsb
pop
pop
out
sbb
cmp
popa
scas
push
stc
and
out
jno
test
dec
sub
sub
mov
clc
sub
sahf
xor
xor
shl
insl
mov
js
inc
lahf
ret
imul
lods
push
dec
cmpsl
jo
iret
pop
adcl
cmpb
mov
pop
mov
je
adc
inc
lods
sbb
ja
bound
push
std
test
inc
mov
mov
ror
mov
vzeroall
into
sub
adc
xlat
or
mov
pop
jns
dec
dec
call
mov
imul
or
cmp
pop
es
cmp
loopne
xchg
mov
mov
in
push
out
lcall
add
dec
cmc
and
stos
add
xor
add
push
lea
xchg
mov
jg
sub
int3
xchg
movsl
cltd
adc
xor
add
out
pusha
insb
and
cmp
fs
popa
xor
sbb
adc
fwait
push
adc
xchg
repz
imul
out
and
int3
adc
shlb
rolb
out
lret
mov
xor
jae
ja
xchg
lea
frstpm(287
sbb
jbe
or
lcall
lcall
scas
jbe
ss
adc
and
int
mov
adc
or
cmpsb
aad
fstps
sbb
fwait
rclb
lcall
out
cmp
xor
jno
inc
cmp
cmpsl
sti
mov
sbb
lods
sub
xchg
pop
xor
out
mov
xchg
adc
or
xlat
lods
inc
push
xchg
je
jl
scas
jp
scas
enter
fimull
jp
scas
scas
pusha
push
icebp
jmp
stos
mov
jnp
popa
xchg
push
inc
dec
jmp
lods
jl
mov
out
jns
pop
sub
and
pop
stos
in
cwtl
sahf
or
cmpsb
sbb
sub
lret
aam
sbb
cmp
push
mov
adc
push
das
xor
popa
fs
dec
aad
sbb
add
jno
add
mov
iret
fcomps
and
lods
dec
int3
jg
icebp
std
jl
int
and
jg
fldt
fbld
jno
mov
mov
xchg
jno
bound
mov
sbb
or
je
mov
cmp
cld
jl
test
push
daa
add
mov
cld
jle
repz
mov
sbb
in
sub
out
xchg
lret
scas
push
and
dec
movsl
fcoml
lcall
push
dec
push
dec
mov
in
mov
rcrb
and
cltd
xchg
mov
sbb
and
push
or
lret
xchg
dec
adc
outsb
cmp
or
mov
add
mov
xor
jbe
cld
shl
test
jg
rolb
pop
cmp
cmp
aam
inc
in
or
pop
mov
clc
es
mov
xchg
jo
insb
sub
out
imul
push
jns
push
imul
xchg
repz
xor
ja
xor
pmullw
icebp
adc
out
cmpsb
xchg
push
lahf
push
mov
mov
mov
sbb
sub
pushl
fists
pop
add
das
cmp
outsb
mov
loop
shll
pop
sarl
inc
shrb
outsl
in
mov
jmp
rolb
xchg
std
mov
sbb
ret
int
fs
stc
inc
mov
or
fnstcw
imul
xor
mov
mov
sub
or
push
test
je
sbb
dec
in
movsb
divb
sbb
sarl
inc
sub
add
xorl
std
xlat
mov
sbb
mov
cmp
jle
push
cmp
jnp,pn
loope
mov
cmp
lods
out
jle
mov
xchg
stos
cmpsb
jle
jle
repz
mov
fisubrs
xlat
adc
push
outsb
pop
add
das
pop
mov
cmp
sub
jb
push
pop
sbb
shrl
pop
jnp
ret
push
fmull
adc
pushf
icebp
xchg
mov
pop
push
mov
out
in
xor
lock
mov
int
andb
adc
fs
adc
mov
lahf
shll
mov
mov
sbb
imul
add
cld
add
test
shll
sub
cmp
int3
test
mov
lahf
adc
test
or
adc
jecxz
xchg
lcall
cmp
cmc
xchg
ffree
mov
cmp
in
jno
enter
dec
dec
mov
fcoms
mov
jo
push
lea
lods
stos
jne
insb
test
sub
rorb
pop
nop
out
jmp
mov
inc
mov
pop
pop
sbb
shlb
cs
xchg
sub
and
xor
les
sbb
cltd
xor
lret
pop
insl
mov
jecxz
dec
xchg
add
hlt
xchg
sahf
pop
xchg
dec
cmp
iret
fmull
or
add
push
jns
sub
lods
dec
lea
ss
scas
pushf
js
in
lea
daa
pop
fsubs
adc
add
jne
pop
je
xor
in
roll
shll
test
sbb
imul
add
cmp
lock
dec
popa
dec
inc
scas
fiadds
xlat
pop
inc
pusha
scas
xor
xchg
orb
out
gs
subb
or
or
pop
xchg
sub
aad
sub
jnp
push
jmp
mov
and
pop
aaa
or
outsl
lods
xchg
push
cmp
out
aam
stos
jns
loopne
cwtl
push
sahf
icebp
ret
cs
dec
mov
in
outsl
lds
icebp
push
xor
push
xchg
mov
pushf
pop
xor
cmpl
rclb
cs
and
dec
std
push
out
and
or
mov
daa
mov
push
into
sub
pop
inc
push
cmp
shl
push
push
pop
in
cmpsl
mov
mov
loop
xlat
mov
mov
ret
and
imul
sbb
fstps
ljmp
inc
inc
imul
fs
repz
pushl
jae
in
loope
jno
out
xchg
fstpl
enter
add
cmp
or
sbb
aas
pop
push
in
lret
popa
cmp
jecxz
enter
stos
sub
jb
jo
fimuls
ficomps
mov
insl
or
out
js
idivb
pushf
test
out
ds
jae
ljmp
rcrb
jae
sbb
dec
pop
cltd
out
insb
dec
add
mov
pusha
fwait
arpl
adc
test
inc
adc
jae
cmp
rclb
xchg
mov
pop
test
push
add
adc
setle
int3
sub
push
mov
sbb
inc
popf
jne
mov
adc
jg
outsb
arpl
dec
mov
jo
inc
adc
xor
ds
nop
jle
or
sysenter
out
movsl
pop
sbb
loope
test
mov
divb
or
sbb
dec
icebp
jge
push
cmp
ret
mov
push
cli
adc
mov
mov
ja
or
add
rcll
pop
xor
xlat
gs
in
add
push
adc
and
jmp
clc
or
leave
adc
sub
mov
cmp
inc
std
cltd
ficomps
jge
and
mov
and
xchg
adc
call
xor
mov
outsb
call
or
mov
or
aas
movsb
mov
or
mov
cld
add
fs
imull
xor
ja
cwtl
cmpsb
mov
movsb
sahf
out
sbb
jns
jbe
sub
mov
jmp
lock
inc
hlt
xchg
jp
mov
xor
push
dec
aas
jg
push
out
popa
lret
std
xchg
jbe
out
out
and
dec
cmp
mov
xor
sar
jle
pop
pop
inc
inc
push
cmp
push
cmp
pop
jl,pt
add
xchg
pop
stos
adc
bound
push
cwtl
fidivrl
repnz
pop
mov
jge
lds
ficomps
jecxz
outsb
sub
jo
repnz
sahf
sub
xchg
cs
xor
pop
cmp
movsl
add
lods
xchg
xchg
les
daa
iret
or
xor
imul
arpl
sbb
test
lret
xor
mov
fcmovnb
jo
movsl
lds
push
ljmp
mov
shll
mov
cmp
cmp
daa
iret
outsl
adc
scas
xor
sub
add
outsb
popa
test
roll
sbb
cltd
add
jecxz
movsb
in
pop
jg
jb
gs
xchg
inc
sub
or
push
or
arpl
fsubrp
sub
mov
or
mov
sub
jmp
hlt
cmp
xchg
repz
jl
int3
fildl
test
cwtl
mov
xchg
fsubl
ljmp
loope
sarl
andl
pop
cmc
mov
add
xor
shll
push
clc
vmulpd
sub
jle
ret
push
arpl
test
push
imul
into
enter
jle
ret
mov
adc
cwtl
test
add
sbb
les
aaa
jecxz
mov
outsl
xchg
adc
jmp
lds
mov
cmp
push
jns
loope
test
adc
sbb
subb
lods
sub
mov
ret
lods
in
js
jo
adc
andb
pop
das
std
jns
jge
inc
sub
js
jle
dec
mov
in
inc
loopne
dec
mov
xor
mov
push
xor
mov
dec
adc
and
cmpsl
mov
lds
cmp
mov
jl
call
loope
push
cmp
push
hlt
mov
add
addl
cmp
push
cmp
sbb
and
iret
test
and
in
addb
pop
shrb
ljmp
jecxz
into
inc
xchg
jg
mov
jp
inc
into
cmp
xlat
mov
push
pop
inc
clc
enter
cmp
fnop
add
aad
lods
mov
adc
fld
stc
jle
shll
push
in
sbb
repnz
addr16
add
in
and
daa
xor
adc
dec
iret
adc
push
cmpsb
loope
jno
rol
lock
cld
push
int
inc
jae
sbb
js
shrb
push
sub
por
cmpsl
ss
jle
rcl
imul
dec
cmp
rol
int3
and
movsl
inc
popa
cld
popf
xlat
cmp
mov
mov
jmp
mov
cltd
xor
add
push
ljmp
nop
mov
clc
lods
shll
fwait
jge
fisubrs
inc
jne
fs
sbb
cwtl
repz
cmp
and
xchg
out
and
cwtl
rorb
popa
sub
or
out
sub
sbb
gs
fbld
mov
test
test
cmpsl
and
inc
adc
mov
mov
cli
add
daa
mov
xor
xchg
mov
cmpl
jle
xor
ficoms
stos
imul
pop
lods
mov
inc
cmc
mov
fsub
add
rcrl
or
xor
adc
jle
inc
cli
nop
cwtl
std
or
sbb
out
push
mov
sbb
sub
call
sub
add
cmpsb
jnp
jae
push
cmp
jmp
cmc
dec
pop
cmc
repz
xor
sub
pop
push
jp
mov
lea
rorl
sahf
push
push
and
stc
fsubp
sub
into
pop
add
or
and
hlt
out
push
ljmp
mov
sbb
mov
jl
push
jp
sbb
repz
mov
repnz
jmp
movsl
imul
mov
sbb
in
das
in
lcall
fs
push
lods
test
inc
xor
sub
sbbb
and
lods
mov
out
cltd
nop
adc
ss
mov
call
dec
xor
mov
ret
mov
adc
jmp
inc
xchg
push
out
sub
dec
pop
xchg
das
pop
loope
aad
jnp
fidivs
cmp
sbb
test
icebp
push
mov
mov
aam
pop
or
cmc
shll
cmp
jl
aas
punpcklwd
out
mov
aaa
xchg
mov
jns
cmp
hlt
jg
shll
add
lock
jb
fs
push
push
call
cmp
add
daa
scas
dec
add
lea
xchg
inc
mov
lods
xchg
fldcw
mov
fcmovnbe
shlb
cmc
mov
scas
dec
jns
scas
or
outsl
ja
bound
dec
fs
pop
sbb
push
pop
int
imul
push
and
stc
mov
lods
mov
mov
add
cmp
adc
and
or
icebp
add
sub
in
xchg
roll
xchg
jmp
push
sub
das
pushf
mov
stos
ja
movsb
mov
mov
pusha
inc
aas
lea
cmpsb
outsl
add
push
test
popf
adc
sti
mov
daa
iret
pop
scas
lea
iret
dec
shll
cs
sbb
enter
cmpsl
push
or
sub
add
loop
arpl
icebp
mov
pop
mov
dec
mov
pop
faddl
arpl
push
sbb
pop
dec
push
movsb
stos
ds
add
scas
in
lret
decl
cmp
aaa
mov
pop
lods
add
jp
sbb
xor
and
pop
fs
lock
xor
stos
mov
imul
ret
push
adc
mov
inc
in
loop
mov
dec
mov
and
mov
les
mov
cmc
rcll
adc
lods
add
mov
pop
ss
setg
popa
inc
add
clc
fcmovbe
push
fdivl
insb
ret
hlt
shrl
fs
or
loope,pn
loope
xchg
fcomps
xor
push
popa
aaa
cmp
push
xchg
pop
scas
xchg
pusha
mov
data16
ljmp
cmp
push
pop
push
shr
icebp
inc
mov
lock
xor
popf
outsl
mov
test
and
xchg
movsl
cmc
or
or
rep
into
ret
and
xchg
cmpsl
sub
data16
pushf
gs
fidivl
mov
jb
fists
or
test
jo
fsubl
add
push
mov
add
fwait
mov
aaa
adc
pop
inc
jbe
jg
arpl
leave
xor
bound
pop
inc
mov
insb
or
cmc
cwtl
hlt
into
xor
push
cmp
xlat
jmp
fmul
mov
push
sbb
lods
sbb
aam
adc
cwtl
lcall
aad
std
inc
fldenv
jp
call
scas
mov
lods
pop
in
and
sahf
or
pop
rclb
sbb
adc
iret
add
insb
int3
mov
ljmp
mov
movsl
icebp
stc
sub
add
mov
ds
or
or
pop
add
mov
xchg
stc
subb
outsb
jne
xchg
movsb
inc
jecxz
repnz
sub
push
cs
daa
orb
fs
pop
fdivrs
out
pop
out
arpl
inc
hlt
clc
stos
pushf
mov
lds
mov
inc
test
test
mov
fisubs
mov
jle
ja
pop
dec
notl
cmp
push
ja
jmp
jne
and
sub
bswap
cltd
sub
scas
mov
and
xchg
loopne
cld
int3
outsl
das
call
dec
inc
outsb
adc
mov
ficoms
xorl
xor
insb
leave
jbe
test
lods
adc
call
test
rcrb
lods
mov
xor
rcr
and
test
pop
movsb
mov
out
push
mov
sbb
fwait
xor
adc
test
push
mov
mov
lods
mov
push
insb
sub
hlt
or
adc
mov
das
xchg
int
xchg
ja
adc
notb
outsb
test
repnz
fimull
jns
sub
mov
movsb
jle
mov
sbb
and
add
mov
and
mov
pop
mov
mov
xor
dec
or
xor
in
pop
mov
mov
sbb
jns
mov
jnp
cld
hlt
jbe
mov
shr
jecxz
mov
xor
push
mov
je
loop
and
jp
jnp
push
cmp
sub
stos
mov
in
cmpsb
aam
clc
loope
mov
inc
cmpsb
mov
xchg
aas
push
jp
inc
mov
mov
repz
push
push
dec
adc
in
and
lret
pop
jp
popf
or
and
adc
mov
push
jmp
in
push
jne
je
stc
cmp
push
and
push
dec
sahf
mov
push
sub
in
lea
xchg
lds
aam
and
cltd
push
mov
lcall
push
sar
negl
inc
ret
sub
mov
mov
pushf
lcall
xchg
add
cmp
dec
das
fs
filds
xor
cmp
dec
stc
push
jecxz
fisttps
and
aaa
dec
inc
stc
jns
mov
dec
ret
dec
int3
xchg
sbb
dec
jle
dec
push
insb
jne
ficoml
mov
add
pushf
mov
outsb
cmp
pop
fdivs
xchg
jmp
shrl
inc
or
aam
push
mov
add
shll
mov
cmp
sbb
std
sub
pop
loopne
aaa
jge
lods
push
scas
push
out
sub
int
sub
aaa
fildll
or
mov
fucomp
mov
popa
scas
dec
xor
inc
in
loopne
lea
mov
test
mov
jne
push
cmp
fnstsw
mov
insl
jnp
mov
cwtl
into
cmc
mov
or
dec
cmp
ret
and
jbe
jns
sub
lret
ja
pushf
arpl
movsl
and
das
dec
fisubrs
data16
sbb
mov
sbbb
mov
das
push
ljmp
pop
aam
push
popf
xchg
mov
jns
fiaddl
int3
test
or
cmc
shr
cmp
outsl
mov
std
imul
enter
pushf
outsb
jno
mov
jo
imul
push
leave
and
mov
arpl
cmc
out
and
movsl
add
adc
or
jmp
mov
cld
xor
shll
jge
lret
lds
data16
mov
jb
or
push
mov
jl
dec
jmp
pusha
pop
imul
jecxz
mov
pusha
xor
and
or
mov
lock
inc
and
loopne
lock
pusha
enter
add
xchg
sub
subl
lret
sahf
lcall
je
mov
outsl
rcll
std
inc
pop
adc
pop
add
add
mov
sbb
call
adc
adcl
outsb
out
in
adc
adc
scas
gs
mov
jmp
lret
fwait
insl
xchg
pop
aas
inc
clc
aas
icebp
rclb
or
or
mov
adc
cmp
mov
sbb
fscale
sahf
arpl
daa
out
mov
stc
push
sub
cs
jg
lahf
add
mull
jle
inc
in
dec
fsubrp
in
dec
xor
xchg
insl
cmpsb
push
pop
in
mov
addb
or
in
fcompl
je
or
popa
pusha
out
cmp
jle
add
push
xchg
das
fs
gs
mov
xor
jo
push
xor
mov
xchg
and
pop
xchg
mov
mov
call
push
mov
iret
enter
loop
loopne
int3
add
addb
add
adc
xchg
jge
push
je
dec
dec
add
lods
ja
pop
cmp
xchg
outsb
mov
mov
mov
jno
inc
and
push
ret
fists
cmp
mov
pop
test
mov
jne
mov
aad
shr
mov
rcr
cmp
pop
dec
dec
pusha
xchg
mov
push
push
cmpsb
xchg
iret
movsl
std
ss
in
mov
pop
scas
cmp
sub
insl
sub
das
sub
fisubrs
mov
iret
xchg
inc
es
ret
nop
push
mov
xchg
mov
push
loop
loop
and
loopne
sbb
add
aas
xchg
jp
pop
xor
ret
loope
xchg
in
xchg
out
pusha
push
sub
mov
les
fwait
in
xor
push
int
sar
loopne
in
int
out
mov
dec
ficoml
in
dec
loope
xor
add
mov
inc
cmpsb
mov
js,pn
gs
out
add
mov
outsb
scas
jnp
call
inc
pop
add
adc
jnp
mov
call
add
inc
and
xchg
fwait
xor
sbb
pop
icebp
mov
sub
adc
jne
popf
cmp
push
dec
lock
mov
sbb
xchg
xor
sbb
sub
cmpsl
aad
ficompl
loopne
test
xor
iret
test
into
mov
sti
or
sbb
lret
test
adc
outsb
fs
adc
sbbb
and
out
xchg
xchg
sub
or
jg
xchg
jbe
fwait
test
fildll
cmpsl
jns
xchg
inc
cltd
sbb
enter
outsb
fdivrs
pop
xchg
mov
int3
pop
adc
int3
fisttpl
xchg
aad
das
or
mov
icebp
mov
fs
lea
test
leave
mov
sub
scas
in
iret
test
mov
addps
xchg
sub
fsubrs
int3
mov
mov
popa
xor
fs
leave
outsb
movsb
push
lret
fmull
out
sbb
adcl
out
mov
enter
pop
pop
scas
and
cmp
mov
or
int
push
adc
xchg
out
popa
in
mov
addb
fiadds
push
jne
gs
mov
ror
lea
cmp
sbb
cmp
mov
mov
xchg
add
mov
out
shrl
lea
data16
mov
cmovg
in
pop
mov
insb
inc
adc
ss
inc
test
jae
sub
and
out
pop
outsl
gs
sub
xor
je
aas
addb
mov
and
hlt
repz
jle
mov
jecxz
adc
outsl
enter
add
sbb
out
mov
mov
out
popf
sub
icebp
sbb
sahf
xchg
fisttpl
popa
loopne
pop
pop
sub
popa
pop
iret
lahf
add
rclb
pop
and
cltd
andb
and
out
cmp
movsl
pop
mov
inc
shr
std
mov
and
imul
test
mov
addr16
ret
xorl
and
xchg
pop
in
and
testl
cmpsl
sbb
fldenv
aaa
mov
daa
add
jae
mov
mov
popa
lcall
loopne
cmp
mov
aaa
popf
sti
push
mov
add
mov
iret
cmp
mov
mov
lret
loope
sti
xchg
xor
add
adc
pushf
rcrb
std
adc
jle
inc
pop
push
ds
bound
fwait
push
dec
sbb
sub
out
xchg
ss
inc
in
rolb
sbb
daa
fwait
in
sub
lcall
mov
xor
or
sti
push
and
mov
out
cmp
cli
adc
or
aam
jmp
pop
mov
jae
cmp
fs
xchg
movsb
pop
repnz
orb
fimull
sbb
cld
pop
xor
cmpsl
nop
dec
loop
push
push
sahf
cmp
and
dec
mov
push
in
cmc
test
test
lods
aaa
adc
in
mov
aas
divps
test
scas
fwait
dec
scas
pop
push
pop
push
mov
cwtl
insb
rolb
nop
push
mov
repnz
icebp
jne
pop
sar
and
repnz
daa
mov
mov
push
sahf
dec
repz
push
int3
mov
vfrczsd
fimull
add
sahf
mov
ss
out
adc
fistpll
cmpsl
inc
mov
push
movsb
mov
data16
cmpsl
cmp
fbstp
push
pop
cs
leave
jle
out
push
mov
push
shl
iret
sub
jne
inc
fsubrl
outsb
mov
fcoms
jge
mov
inc
test
mov
sbb
std
mov
dec
fbstp
jnp
xchg
mov
mov
adc
mov
cmpsb
shl
jne
shrl
or
inc
inc
mov
jg
cli
jbe
iret
popf
adc
xor
out
jb
adc
insb
jno
insb
push
icebp
rcl
pop
sbb
or
push
mov
xor
pop
inc
cwtl
lea
jecxz
enter
xor
sahf
or
mov
int3
pop
mov
or
arpl
imul
mov
movsb
xchg
clc
ret
cwtl
push
andb
out
bound
pop
jne
cmp
rorb
int
mov
jno
sbb
andb
push
dec
insl
in
and
pop
push
jmp
movd
adc
pop
adcb
pop
sbb
lahf
jl
imul
push
insb
push
subl
pop
jbe
test
dec
ljmp
mov
push
leave
fucomp
push
adc
jbe
sti
negb
clc
lret
mov
adc
and
and
sub
cmpsl
gs
mov
outsb
dec
sahf
les
sbb
sbbb
sbb
or
cli
arpl
aad
test
aas
push
stos
lds
push
movsb
or
or
jo
pop
jnp
cs
dec
fs
out
xchg
in
inc
dec
pop
call
lods
call
add
jo
push
cmp
scas
lea
push
lea
add
jmp
xor
jns
jbe
pop
int
sbb
pop
cwtl
je
or
jg
call
mov
out
test
or
jnp
add
daa
stos
push
xor
sahf
add
adc
pop
xchg
out
out
add
outsl
repz
pop
gs
sarb
arpl
push
inc
mov
dec
push
adc
daa
xchg
cmp
pop
pop
cmpsb
cld
push
mov
cmpsb
subl
dec
test
cltd
xchg
xor
mov
mov
cmp
shll
jmp
mov
cs
sub
dec
push
outsb
and
loop
mov
jecxz
cmpsl
add
std
mov
inc
xchg
lahf
mov
xchg
mov
mov
iret
add
icebp
jnp
pop
sbb
xor
repnz
mov
fldl
and
das
imul
outsl
gs
xchg
repz
cs
adc
in
add
cmpl
stc
lods
jmp
and
inc
imul
xchg
or
and
stos
pusha
dec
cli
push
cmp
push
mov
or
jl
pop
std
push
andl
iret
fs
push
dec
adc
pop
cmp
packsswb
bound
xchg
mov
cmpsb
or
sub
lods
and
movsl
loope
dec
cmpsb
pop
push
mov
sbb
js
orl
test
iret
sarl
pusha
div
sub
xchg
int
sbb
pusha
or
rolb
sub
mov
cmc
test
push
je
mov
sub
and
mov
out
sbb
push
fcmovnbe
pop
mov
pop
dec
aam
mov
int
xchg
test
imul
and
mov
mov
inc
jb
add
sub
ret
adc
xor
js
ja
mov
leave
in
fisubrs
push
cs
push
push
or
cmpsb
pop
lods
daa
xchg
popf
push
pop
mov
jb
daa
jl
clc
sbb
jg
or
or
ds
cmp
shr
pop
inc
lret
xor
push
jmp
xorl
addr16
clc
xchg
sub
stc
cmp
inc
add
dec
push
jnp
mov
jp
adc
fs
mov
mov
cmpsb
rorb
out
pop
in
inc
mov
cmpsb
inc
adc
ja
js
and
sub
or
lahf
mov
pop
push
jl
mov
fsubr
or
xor
or
incl
test
roll
jb
jmp
lods
stos
sbb
pop
or
adc
adcb
jns
xchg
pop
aas
mov
jecxz
fwait
mov
daa
dec
sub
aas
stos
inc
out
inc
sbb
pop
lods
mov
inc
das
xchg
sahf
ret
mov
call
jmp
hlt
insb
dec
xor
xchg
pushf
pusha
jae
hlt
out
mov
dec
leave
sbb
mov
out
test
xor
mov
inc
ret
jbe
sbb
dec
jp
or
dec
out
push
push
pop
inc
repz
mov
adc
or
mov
pop
int3
rclb
jmp
pop
pop
cmp
out
push
imul
dec
sti
pop
cmc
cmpsl
sbb
stc
negl
sub
pop
outsl
mov
jbe
icebp
mov
and
loopne
ds
inc
push
pop
rclb
js
jae
xchg
jo
repnz
mov
lret
push
outsb
ds
shr
push
adc
das
sahf
scas
jge
pushf
ss
inc
mull
xchg
pop
movsb
and
inc
xor
mov
jecxz
mov
pop
js
mov
adc
pop
outsl
imul
mov
inc
inc
outsb
stos
mov
aad
in
inc
dec
sub
inc
mov
in
loopne
cli
sub
mov
adc
jmp
sbb
cmpsb
in
xor
adc
push
lods
dec
mov
popf
jo
push
and
repz
sub
jmp
imul
dec
outsl
lcall
mov
sti
xchg
fldt
mov
mov
push
ljmp
mov
aad
ret
outsl
aad
pop
xlat
lret
mov
stc
pop
cmpsb
fucomp
mov
jnp
pop
adc
add
jp
cltd
xchg
adc
cmpb
mov
les
popf
fsub
jae
add
cld
lcall
push
inc
pop
or
inc
pusha
xchg
test
sbb
or
mov
cmc
push
lahf
fidivl
aas
pop
cltd
sarl
cmp
aad
or
sub
scas
ds
jle
pop
pop
pushf
jb
gs
stos
psubq
ss
adc
dec
jmp
sbb
sbb
data16
nop
pushf
ficoml
aaa
pop
aaa
pop
push
aam
dec
mov
ja
fildll
cmp
pop
fwait
pop
lret
in
jmp
repnz
jb
dec
outsb
inc
fcompl
nop
inc
in
dec
push
icebp
xor
fbld
scas
xchg
pop
dec
stc
push
dec
insb
inc
test
mov
inc
adc
cli
ficoms
es
dec
orl
pop
xchg
orl
mov
dec
fwait
jmp
lahf
shrl
imul
je
mov
addr16
std
lcall
fucomp
push
add
and
imul
xchg
or
pop
xchg
dec
push
mov
fs
je
pop
xchg
sub
push
mov
shll
mov
sub
adc
lds
aad
mov
sbb
fisttpll
out
pop
add
fisttpll
jp
sbb
mov
icebp
mov
rcrb
insl
test
mov
pop
loopne
andl
pop
mov
sbb
loop
jno
jbe
pop
sti
pop
inc
mov
jg
mov
and
ljmp
aad
dec
les
lods
add
fidivrl
pop
stos
dec
add
inc
js
push
sub
push
bound
xchg
adc
sub
movsl
int
xor
dec
stos
fmull
cltd
test
inc
xchg
in
xchg
xor
mov
ret
add
mov
push
pop
into
cltd
pop
cmpsb
aam
aad
pop
push
sti
inc
loop
fcom
vcvtsd2ss
mov
adc
sub
out
ja
add
fcomi
js
sbb
cmp
mov
or
xlat
out
pop
out
in
pop
mov
cmp
movsb
cmp
sbb
mov
gs
add
push
testb
xor
jne
pop
inc
aas
das
mov
and
dec
leave
test
fdivs
xor
imul
leave
dec
mulps
cmp
mov
imul
dec
js
sarb
insb
testl
inc
adc
adc
insb
inc
xchg
adc
out
mov
ret
adc
sbb
int
jge
sbb
xchg
mov
test
jmp
xor
jo
sub
sub
arpl
lahf
push
sbb
mov
aas
xchg
dec
imul
pop
aaa
cmp
mov
add
lods
test
jne
cmp
dec
xchg
lds
inc
mov
pop
xorb
lods
gs
mov
iret
lds
out
int
jge
addb
ja
lcall
rorb
push
int
dec
es
ljmp
shlb
sbb
aam
imul
into
sub
es
xchg
out
xchg
xor
push
mov
pop
xchg
inc
dec
add
jp
iret
stos
cwtl
add
cwtl
adc
mov
outsb
jmp
xchg
dec
sub
insl
cli
xchg
nop
daa
pushf
jae
repnz
add
movsl
int
or
pop
push
pushf
add
mov
sub
loop
shrl
mov
inc
adc
jmp
xor
or
in
stos
adc
std
divl
icebp
jp
mov
pop
inc
imul
jae
int
push
pop
dec
jge
divl
xchg
pop
and
inc
push
xchg
sbb
push
pusha
push
aad
sub
mov
cmp
ror
jnp
in
jo
xchg
scas
jl
loopne
mov
sarl
xor
and
popf
jmp
popf
xchg
mov
sbb
xchg
lret
int
mov
lea
or
sub
mov
cwtl
xor
mov
mov
sbb
lcall
mov
call
sub
lea
jne
std
in
outsl
inc
mov
xchg
adc
cmp
or
fwait
imul
cltd
pop
sub
bound
in
pop
aas
cmp
pushf
or
in
sub
mov
lds
jp
jo
or
popa
dec
and
data16
cmc
cmp
inc
gs
shll
arpl
pusha
cs
ret
inc
gs
inc
push
inc
repnz
sub
gs
in
mov
add
or
enter
add
lock
or
push
dec
fistl
add
arpl
pop
cmp
cmp
sti
clc
dec
jne
jnp,pt
push
push
fsub
ljmp
pop
sbb
push
dec
mov
xchg
mov
adc
cwtl
cmp
cmp
and
fs
subb
arpl
jb
mov
into
pop
fwait
jns
xchg
and
pop
cmp
xor
cmp
xchg
fists
jae
test
jecxz
lcall
call
sbb
jecxz
inc
iret
test
imul
mov
pop
fsub
std
add
mov
ficoml
jae
xchg
in
add
mov
dec
jae
fistps
lods
stos
inc
in
gs
sar
outsl
mov
cmp
add
and
inc
jl
inc
and
jo
sub
jae
fistpl
jle
xchg
call
push
push
jnp
and
js
leave
jae,pn
xor
xchg
int
dec
xchg
ljmp
outsl
fidivrs
ss
xchg
mov
adc
fwait
imul
mov
inc
sbb
pop
cmp
mov
sub
cltd
add
ljmp
daa
sbb
cld
test
inc
dec
xorb
push
sbb
mulb
test
jge
cmp
into
lahf
xor
xor
call
cmp
jecxz
push
daa
sbb
outsb
mov
dec
dec
xor
dec
xor
js
sbb
sbb
mov
arpl
scas
add
popf
fisubrs
ljmp
push
mov
ret
xor
wbinvd
dec
gs
push
nop
pop
xor
dec
cmp
dec
cmp
adc
hlt
pop
test
sub
test
jns,pt
mov
je
or
lcall
mov
les
jmp
xor
ret
enter
push
and
cmp
mov
cmp
adc
xor
shr
or
pop
cmpsb
clc
sbb
add
movsl
ret
xchg
inc
add
ja
in
xchg
jno
sub
jnp
dec
fs
xchg
push
and
mov
mov
push
sub
imul
jae
jns
fldcw
lcall
dec
mov
push
cld
cmp
jbe
dec
lret
test
movsb
fnstsw
inc
imul
xchg
mov
mov
mov
adc
in
leave
cmp
cmp
nop
nop
pop
repz
popf
or
jbe
dec
jmp
testb
sbb
push
pop
mov
dec
in
or
adc
xchg
xor
cwtl
push
inc
dec
psrld
add
pop
mov
aad
movsl
sub
stc
add
cmc
xchg
ficompl
xchg
int3
pop
mov
mov
xchg
jg
mov
sbb
loopne
shrb
into
call
sub
dec
in
int
dec
leave
or
pusha
push
xor
cli
sarl
in
shll
repz
xchg
push
fmull
sub
insb
sbb
pop
int
push
aam
or
pop
and
xor
negb
mov
leave
xorl
cltd
mov
fldcw
loope
dec
pop
in
clc
sbb
fwait
sbb
xchg
push
adc
xor
fwait
cld
inc
pop
lds
loopne
je
or
sti
pop
out
cld
mov
out
sbb
sub
loope
xor
fldl
ja
mov
int3
mov
daa
push
jae
out
popa
adc
push
mov
ret
xchg
mov
dec
aam
test
jmp
inc
stos
pop
mov
fistpll
mov
jo
jnp
push
jg
jmp
imul
or
and
aad
lods
scas
or
xchg
fists
enter
pop
jae
das
or
mov
push
mov
lahf
cmp
xor
dec
xchg
out
mov
movsb
push
fildl
cmp
dec
jne
adc
neg
cmpl
popa
sti
xchg
cwtl
daa
xchg
cs
or
dec
in
fs
lcall
fidivl
xlat
fdivrs
rolb
lret
sar
pop
cmc
jne
mov
jg
loop
add
xor
dec
shll
mov
xor
dec
call
xchg
mov
cmpsb
stos
xchg
pop
cmc
jne
loop
push
dec
mov
push
or
movsl
sbb
sbb
cltd
in
jg
divb
jmp
adc
rorl
dec
xchg
adc
aam
mov
leave
pusha
xchg
jp
fstl
mov
pusha
test
imul
pop
lds
fs
test
clc
das
or
mov
pop
es
shlb
aam
or
cmp
pop
mov
fwait
pop
mov
xchg
ret
divb
and
jo
jbe
sbb
inc
mov
insb
data16
pop
test
sub
sarb
lret
pop
ss
pusha
fisubrs
outsb
xor
or
leave
pop
sbb
popf
xchg
xrelease
dec
mov
adc
pop
popf
stc
faddl
sti
pop
jb
mov
notb
and
jne
addr16
mov
nop
cli
cltd
cmp
adcl
rdmsr
sub
adcl
xchg
out
jns
jl
mov
lea
sar
adc
aaa
loopne
test
xchg
bnd
daa
lods
pop
hlt
and
xor
add
mov
xchg
ja
pop
inc
popf
jecxz
movsb
lock
rclb
pop
lahf
ss
popf
out
imul
lea
fnstcw
jnp
mov
adc
aaa
pop
pop
and
lods
jno
dec
repnz
cwtl
gs
and
jne
mov
mov
imul
xchg
pop
in
rolb
sbb
jno
es
xor
or
jmp
inc
mov
mov
mov
cmp
mov
push
insl
scas
clc
stos
es
int
push
dec
jmp
mov
cmp
mov
mov
mov
aam
mov
push
test
adc
sahf
jge
movsb
leave
jecxz
pusha
adcb
icebp
nop
jo
int3
inc
mov
into
xlat
pusha
stos
insb
cmpsb
filds
mov
pop
mov
fstpl
push
mov
push
ja
lret
movsl
dec
aaa
cmpsl
aaa
es
leave
shlb
outsl
mov
scas
mov
push
ljmp
mov
cmp
fdivrs
shl
pop
rcr
add
jbe
leave
mov
xchg
rolb
mov
call
scas
or
xchg
pop
loopne
cmp
push
xlat
pushf
mov
mov
sti
clc
es
adc
and
push
or
pop
adc
dec
pusha
aam
mov
add
inc
xchg
push
insb
arpl
aaa
inc
or
sub
aam
push
out
rorb
sbb
cmp
and
mov
dec
nop
mov
mov
inc
pop
loopne
inc
jp
int
stc
sub
ds
pop
or
add
imul
fdivp
sbb
push
add
mov
stc
push
sbb
xchg
sub
pop
jae
outsb
out
pop
aaa
pop
lcall
xchg
mov
gs
or
inc
ljmp
call
inc
xchg
loop
insb
aaa
xchg
int
mov
cmp
shl
mov
mov
or
mov
cmp
movsb
test
ret
add
repnz
adc
push
fwait
jnp
outsb
je
pop
repnz
sub
mov
data16
xchg
insl
mov
xchg
jge
adc
repz
xor
les
leave
push
xchg
popa
aas
test
push
pop
imul
mov
imul
dec
push
mov
jecxz
icebp
push
xchg
push
lret
xor
add
jmp
faddl
cmp
mov
pushf
xchg
movb
mov
popf
aam
jg
popa
lea
ficoms
mov
mov
push
loopne
outsb
push
sub
call
punpckhwd
push
sahf
mov
in
in
lret
push
dec
pop
lret
pop
xchg
lods
or
xchg
xchg
cltd
dec
adc
mov
xchg
xchg
and
movsl
mov
insl
push
repnz
lcall
nop
fwait
mov
push
ljmp
xchg
nop
js
popa
cli
xchg
fstl
cmp
int3
lret
jo
and
loope
test
mov
xchg
fwait
jg
and
mov
imul
jne
cld
aam
mov
or
dec
test
push
mov
inc
add
dec
xchg
mov
roll
dec
jns
pop
iret
mov
adc
cmpl
mov
pop
cwtl
inc
ja
fdivrs
fstps
aad
jno
cmp
sbb
iret
sti
xchg
fs
cmp
cmp
popa
sbb
or
mov
mul
ret
push
sbb
enter
es
lret
jns
mov
dec
in
cmp
xor
inc
fwait
daa
mov
or
ficompl
inc
movsb
popa
dec
pop
pop
movsb
popf
cld
mov
mov
xor
iret
fiadds
lretw
mov
cli
jno
add
mov
jnp
frstor
sub
mov
lea
push
sbb
jl
int3
jnp
sub
lcall
fs
out
jns
outsl
xor
fs
cmp
sbb
xchg
fcoms
test
lea
movsl
dec
stc
xor
inc
xchg
push
pop
into
pop
add
dec
testl
push
sub
into
push
sbb
sbb
adc
lcall
stos
sbb
iret
xor
data16
mov
sub
sub
mov
lret
or
jnp
pop
or
sbb
jo
jne
jmp
fldt
lcall
xor
in
mov
mov
pop
test
jbe
pop
imul
cmpsb
inc
daa
call
sbb
cmp
out
xchg
int
push
js
and
loopne
push
mov
mov
sub
je
int
rorl
dec
scas
jle,pn
cmp
pop
mov
jnp
inc
wrmsr
adc
ds
shll
mov
test
inc
sbb
out
push
mov
shll
dec
bnd
fbstp
inc
in
xchg
sti
dec
add
rclb
push
inc
lea
sub
je
add
iret
xbegin
pop
mov
pop
arpl
jge
pop
leave
out
and
lcall
out
push
sahf
xorb
lods
in
dec
xor
push
xchg
addl
scas
xor
cmpl
cs
mov
aaa
sarb
jmp
xchg
jp
lret
das
stos
aas
or
int
scas
call
fildll
outsl
push
or
cld
in
or
pop
fwait
mov
and
dec
xor
negl
and
xor
mov
jl
fldenv
push
cmp
xor
add
sbb
sbb
scas
add
pushf
sub
xor
loopne
mov
lods
adc
push
push
test
mov
dec
pushf
hlt
sahf
loopne
lock
es
pop
jg
and
adc
jns
leave
lea
inc
dec
or
xchg
loopne
int3
rorl
inc
sub
cs
and
into
loope
mov
fisttpll
jne
push
push
mov
incb
and
add
jb
pushf
cmpsb
das
add
push
mov
jbe
pushf
std
cltd
mov
pop
pop
hlt
pop
mov
xchg
testl
push
out
ss
lock
jp
fsubs
xchg
push
mov
mov
lods
rcrl
push
mov
push
into
sbb
mov
ljmp
mov
add
inc
daa
data16
mov
test
in
sahf
pop
clc
lds
xorl
loop
mov
rorl
sbb
or
mov
clc
scas
gs
pop
aas
xchg
ja
push
fs
inc
jno
mov
fisubs
scas
mov
cs
rcll
fisubrl
and
js
mov
aad
xchg
mov
push
add
in
lods
imul
in
je
leave
gs
adcb
sbb
adc
lcall
jecxz
arpl
add
in
ds
xor
and
xchg
dec
and
es
cltd
out
mov
pushf
dec
idivw
lret
pop
dec
or
clc
das
mov
and
push
dec
or
cltd
ds
into
and
insl
rcll
inc
popa
dec
js
push
adcl
dec
mov
xchg
loop
movsb
aam
scas
insb
adc
dec
inc
stos
push
xchg
push
js
int
xchg
std
and
leave
dec
push
inc
push
ret
mov
inc
je
jne
dec
inc
lock
ret
leave
lods
jbe
sub
pop
cmpsb
loopne
jmp
lods
pop
add
and
insb
punpckhbw
add
sbb
mov
xchg
hlt
add
adcb
out
push
mov
andb
xchg
jecxz
gs
push
adc
xor
add
ljmp
lea
lea
push
jno
mov
negb
jge
movsl
enter
leave
xor
and
inc
dec
fnstsw
jns
aam
xchg
out
roll
add
mov
nop
incl
ja
adc
jo,pt
xor
lret
jecxz
mov
cmp
push
cltd
test
ss
xchg
fdivl
sbb
or
shlb
inc
push
adc
test
lea
addr16
cmp
sub
gs
sahf
test
stc
push
jge
cmp
mov
pop
das
jl
sbb
adc
jns
cmc
fiaddl
cmpsb
or
xchg
add
lods
jae
pop
rcr
jecxz
sbb
lret
dec
xchg
xor
pop
cmp
ja
dec
rcll
rcll
lds
loop
fcmove
push
insb
insl
mov
xor
sub
mov
xor
and
adc
bnd
cmp
pop
int3
out
out
jp
dec
push
incb
test
loopne
cli
fcom
les
jmp
sbb
movsl
fisttpll
push
and
test
faddl
lret
fbstp
test
and
roll
pop
aam
cli
pop
loop
sbb
and
ss
ja
fcompl
xchg
movsl
pop
xor
lret
xor
sub
dec
shll
mov
rcl
fsubrp
testl
sub
sbb
inc
jp
cmp
cli
popa
stos
xchg
shrl
pop
jecxz
jmp
mov
cmp
jno
push
mov
or
jbe
mov
adc
cmp
icebp
sbb
cmc
ljmp
in
pop
cmp
dec
xor
lods
and
repnz
test
aad
add
or
xchg
out
pop
push
push
testl
test
es
enter
adc
jae
mov
sub
sub
mov
adc
popa
mov
xchg
fmuls
call
aaa
mov
cltd
xor
dec
stos
cmp
push
addb
loop
cmpsl
pop
test
lds
mov
add
imul
pop
gs
mov
mov
push
pop
add
stos
lcall
mov
data16
testl
test
add
xor
rorb
aad
jg
mov
push
out
js
nop
loopne
jge
xor
mov
cltd
not
jp
adc
faddl
test
mov
lds
mov
jmp
push
dec
lock
inc
repnz
mov
sub
pop
adc
imul
outsl
cmp
shrl
es
fisubrl
lret
cltd
outsl
lock
push
cmpb
jns
and
imul
dec
jae
out
xchg
mov
ds
rcrl
insb
divl
into
sub
xchg
dec
sub
incb
mov
cmpsb
lcall
adc
jnp
cmp
inc
and
dec
cmp
out
dec
fisubrl
add
cmp
data16
out
mov
lods
inc
xchg
repnz
inc
push
scas
out
enter
and
js
or
dec
fmuls
or
fwait
mov
or
pop
mov
push
stos
stc
cmp
mov
mov
out
xchg
cli
xchg
ret
mov
addr16
outsb
mov
repz
mov
sub
push
fisttpll
pop
cmpl
push
aad
mov
dec
cmp
pop
arpl
add
loopne
add
xchg
push
mov
scas
mov
push
xor
mov
and
sub
fxch
xchg
fstpl
adc
lahf
xchg
mov
pop
push
int
cmp
jne
rcrl
popf
fcomip
lea
cmp
sub
ret
mov
or
xor
cmp
out
pop
adc
xor
out
adc
pop
sbb
lea
stos
xchg
push
xor
add
fstpt
mov
and
cld
cmp
in
mov
sub
insb
add
sub
repz
sbb
jle
adc
sbb
mov
mov
add
into
cwtl
add
rcrb
add
add
jns
cmc
enter
xchg
in
cmp
mov
adc
jbe
xchg
push
fisttpll
test
mov
loope
add
add
push
push
pop
push
sbb
cmpsb
lock
sbb
xor
aad
aas
sub
dec
dec
test
and
mov
mov
add
inc
ficomps
sub
jp
stos
out
and
inc
xchg
and
jge
mov
nop
pop
sbb
sub
push
lret
add
lahf
adc
add
xchg
mov
into
ret
call
jae
push
shrl
cmp
or
movsb
in
push
data16
mov
xor
push
xor
loop
sahf
mov
jmp
cmp
je
jno
fwait
mov
xor
inc
loop
in
jp
cli
or
jae
repnz
out
cld
adcl
cmpsl
imul
je
sbb
pop
mov
and
xchg
mov
push
mov
fistpl
adc
int3
pop
or
or
les
in
jae
xchg
stos
xchg
push
js
repnz
pop
fs
pop
sbb
hlt
flds
mov
push
inc
cmc
jle
mov
sti
mov
jns
int
jae
cmpb
mov
and
icebp
loopne
sbb
loope
jbe
pop
mov
xor
imul
cmp
arpl
jnp
and
sahf
cmpsl
fs
fisubrs
jmp
jns
mov
xor
lcall
mov
mov
in
push
mov
mov
push
dec
mov
jp
push
xlat
mov
sub
mov
xchg
mov
xchg
iret
stc
movsl
cmpsb
adc
add
xchg
and
outsb
scas
paddusw
dec
or
mov
and
push
movq
push
xor
ja
push
movsb
dec
ja
cmc
mov
outsb
in
xor
mov
sub
push
sub
mov
push
push
fwait
mov
push
pop
mov
lods
inc
nop
nop
js
lcall
popw
and
sahf
dec
std
movsl
jp
xchg
jae
cmp
push
jl
sbb
add
fwait
int3
fnstenv
cmc
dec
loopne
fcoms
xchg
jg
xchg
paddq
xor
cmp
dec
out
xchg
inc
fwait
and
dec
in
mov
in
xor
fwait
cli
jnp
push
cmp
pop
out
mov
int3
fs
jo
ret
xor
dec
fstpt
pop
out
cmp
int
or
sub
cld
jb
or
insl
jns
inc
cli
lds
dec
ret
testb
cwtl
lods
stc
jle
or
in
rol
jmp
lods
stos
sbb
push
dec
inc
je
xchg
push
jb
inc
add
and
js
iret
rol
js
sbb
and
push
sub
ficompl
popa
inc
in
test
clc
hlt
mov
out
jne
orb
icebp
xor
lret
or
dec
and
mov
adc
and
popf
and
jno
push
pop
cmp
mov
jb
scas
mov
lret
jno
insl
xchg
fs
mov
push
popf
rcrl
repnz
mov
mov
fwait
dec
fadd
loop
lds
fimuls
sbb
pushf
and
add
jns
stc
ret
xchg
push
sahf
dec
jge
add
or
loope
ret
and
inc
pop
push
repz
out
or
xor
out
add
jns
movsb
shll
movsl
xchg
and
jnp
das
xlat
andl
mov
es
fldcw
mov
jno
clc
push
push
xor
adc
outsb
jbe
dec
push
mov
push
mov
inc
mov
xchg
dec
jb
mov
push
repnz
jae
call
fwait
rorb
jge
ja,pn
cmp
lock
xor
stos
mov
and
adc
push
dec
stos
aaa
psubsw
es
fistpl
sub
fimull
jae
sub
mov
dec
jo
clc
loopne,pt
xchg
and
out
push
push
lods
jnp
dec
pop
ret
jmp
nop
es
add
sub
rorb
push
inc
inc
out
sbbb
mov
movsb
imul
mov
or
mov
and
adc
jbe
jne
and
insb
enter
hlt
cmpsb
imul
mov
lods
stos
jo
dec
inc
sub
nop
fstl
push
in
dec
and
push
iret
jno
test
xchg
lret
rcll
mov
movsb
insb
lock
mov
sbb
dec
sbb
xlat
add
push
test
mov
push
mov
mov
je
popf
push
out
iret
insb
xchg
cli
jecxz
sub
add
jle
xchg
jns
sbb
push
lret
cmp
mov
lods
loope
lock
icebp
movsl
sub
jle
inc
sub
lea
inc
jno
xchg
or
xchg
test
cmp
outsb
sbbb
repnz
jae
rcll
stc
jns
test
pop
cmpsb
and
or
inc
fdivrs
je
mov
std
divps
mov
repz
call
jecxz
xor
fnstenv
push
popf
movsl
mov
inc
jne
xchg
test
pusha
mov
nop
mov
jo
das
icebp
bound
lds
scas
push
and
or
mov
add
leave
data16
testb
add
repnz
add
stc
push
rcr
cmpl
xorb
aad
js
mov
arpl
add
mov
dec
js
in
inc
xchg
idiv
cmp
mov
mov
mov
lret
xor
inc
mov
cmc
mov
xchg
push
sbb
iret
mov
mov
xchg
adc
insb
fcoml
shr
dec
enter
std
inc
mov
mov
enter
or
es
push
cwtl
inc
lret
mov
adcb
dec
ljmp
jp
or
and
in
mov
jge
shlb
outsb
cld
out
movsl
bnd
mov
leave
mov
shrb
movb
pop
shrb
push
mov
stos
js
jns
pop
idivb
aas
or
mov
ja
std
bswap
lahf
jle
mov
outsb
add
cmc
mov
std
pusha
das
movl
add
sub
or
andl
outsb
mov
push
std
sbb
inc
fcompl
jne
add
lret
lahf
xlat
lock
lret
sbb
loopne
fsubrp
jle
aad
or
mov
gs
insl
ja
pop
dec
push
scas
pop
imul
jnp
inc
sbb
inc
mov
cltd
insl
fdivr
dec
push
ds
test
insb
mov
jns
pop
lock
push
jecxz
mov
and
js
dec
inc
push
fstps
lcall
add
aam
shrb
leave
push
gs
rorb
enter
push
lds
add
or
sub
int
sbb
je
fs
repnz
pop
push
pop
fwait
addr16
inc
dec
push
sbb
mov
out
lcall
fwait
cli
jb
mov
shll
mov
loopne
mov
xlat
fdiv
and
mov
repnz
out
pop
adc
cs
pop
mov
ja
sbb
into
movsl
cmp
push
xchg
ss
pop
mov
mov
test
das
nop
xchg
mov
sub
cmp
and
fnstsw
jg
pop
addr16
mov
int3
in
subb
ret
push
mov
outsb
xchg
aaa
sub
cmpsl
das
movsl
pop
cmp
das
les
cltd
mov
fiaddl
xchg
test
mul
lcall
cmp
shll
ss
dec
insl
jg
popa
and
mov
test
or
add
test
lcall
insb
mov
das
sub
xor
inc
icebp
out
mov
lret
gs
jmp
xlat
xor
pop
aaa
sub
outsb
call
adc
mov
inc
mov
push
inc
pushf
xchg
mov
cmp
mov
sub
pop
nop
jno
ljmp
jb
aam
sbb
dec
insl
xor
cltd
sub
rcr
mov
push
push
aaa
push
lret
xchg
push
aam
lahf
stos
push
jno
jnp
into
push
or
es
fistpll
and
rclb
imulb
test
sub
inc
adc
lret
mov
clc
push
cmp
out
mov
fs
cwtl
sub
cmp
int3
pushf
ret
adc
dec
stos
jmp
jno
stos
xchg
sbb
or
xchg
mov
jnp
add
dec
push
loopne
xchg
pop
jb
mov
sub
and
mov
pop
jno
cmp
jae
mov
mov
call
mov
ss
pop
enter
in
aaa
inc
cld
push
not
pop
lret
cwtl
pusha
xor
pop
sub
sbb
xchg
inc
sarl
mov
outsb
xchg
adc
pop
roll
in
fs
dec
push
shlb
pop
lss
cli
mov
mov
mov
je
jnp
jo
dec
xchg
inc
pop
in
jl
mov
inc
add
dec
jb
ret
add
adc
aad
mov
fildl
ud1
xor
sub
pop
cld
lock
xchg
imul
fldln2
inc
xchg
xor
cmp
jecxz
mov
lods
sbb
inc
incb
push
inc
dec
int3
dec
jbe
shlb
outsl
imul
jecxz
adc
jmp
xchg
adc
out
xchg
jge
jns
das
mov
jbe
test
push
mov
push
shl
cltd
xchg
mov
loope
mov
rolb
mov
sti
mov
scas
lahf
out
addr16
arpl
jmp
mov
jg
jb
xor
cld
mov
push
sub
jne
pop
pop
mov
cmc
std
imul
cmpsl
add
mov
push
pop
cmpsl
pop
xor
fstps
test
xchg
in
test
push
lods
adc
lds
movsb
ss
pop
cmp
and
scas
divb
popf
sub
ds
adc
jno
fcomps
add
push
xchg
push
mov
lcall
xor
push
cmp
jae
adc
mov
hlt
cmp
movsl
fs
cmp
test
xor
lret
adc
negl
pusha
sub
lcall
and
icebp
sahf
loop
mov
cmp
mov
pop
aas
add
aas
call
jmp
push
add
cmpsb
adc
les
aad
sub
mov
imul
popa
add
sti
rcr
add
negb
sub
lea
scas
loop
andl
pushf
icebp
pop
xor
pushf
mov
aad
xchg
sbbl
insb
jmp
mov
inc
xchg
loope
lret
cwtl
repz
lods
out
pusha
mov
fidivs
cmp
dec
jb
test
dec
and
push
iret
xor
daa
je
leave
dec
pop
xor
push
add
into
lods
xlat
out
outsb
ja
pushf
fld
pop
or
jle
mov
ja
rcr
negb
mov
jmp
mov
jecxz
mov
movsl
idivb
leave
fs
push
stos
pop
ret
xlat
mov
les
sbb
jle
push
sbb
mov
or
popf
scas
xchg
inc
jae
xchg
adc
push
push
push
add
dec
sbbl
cmp
mov
add
mov
jge
mov
incb
inc
push
aam
hlt
aad
pop
cmp
cmp
test
xor
and
cmp
mov
into
movsl
mov
pusha
orb
jmp
ja
jmp
in
mov
dec
les
jne
adc
aaa
inc
push
hlt
jae
das
push
flds
lods
lds
imul
add
int
out
imul
jne
ret
inc
inc
addr16
mov
gs
push
cmpb
in
and
sbb
ljmp
enter
lret
inc
into
fisttpll
adc
sbb
adcb
pop
add
loopne
mov
cmpsb
jne
leave
jmp
and
mov
pop
push
pushf
out
in
sti
cmpsb
fcmovne
pop
movsl
daa
jle
sub
cmp
aam
sar
pop
sbb
cmovne
cwtl
test
call
and
push
pop
pop
fwait
add
fs
scas
leave
xor
and
imul
mov
bound
outsb
cmp
fldenv
and
jns
cmpsl
adc
add
fwait
in
and
cmp
xchg
sahf
sbb
jne
mov
jo
xor
xor
inc
xchg
jbe
testl
test
cltd
inc
in
jns
lods
fstps
pop
popa
xchg
push
sub
fwait
inc
cld
int3
lahf
popa
enter
subb
lods
loop
xchg
push
mov
mov
sub
pop
mov
xor
decl
inc
mov
iret
pop
xor
lock
or
fs
cmpsl
push
mov
or
adc
pop
ja
xchg
jg
push
stos
loopne
jmp
push
inc
jp
rorb
jae
add
shll
stos
xlat
or
fadds
loop
clc
cltd
jae
fildll
pop
aas
outsb
data16
sub
jns
mov
sbb
stos
fcomip
std
pop
inc
sahf
jb
sub
mov
jg
lcall
cmp
in
lock
loope
xchg
push
out
jo
test
mov
push
pop
push
adc
xchg
mov
repz
into
scas
and
in
dec
xor
shlb
xchg
std
mov
or
fwait
stos
sub
lods
scas
iret
lcall
cmp
jne,pn
adcl
cmp
mov
insb
sti
sbb
jg
sub
test
call
mov
push
iret
add
push
pop
add
cmc
dec
ret
mov
cwtl
jge
outsl
ret
int
jl
test
add
mov
pop
mov
inc
mov
popa
fmulp
imul
and
jns
ret
push
or
lock
bound
sbb
lds
push
aas
cmpsl
movsl
pop
lahf
jns
andl
clc
ja
push
jne
dec
les
lret
pushf
and
jmp
jne
xchg
addr16
lcall
clc
mov
xchg
push
dec
pop
notb
jecxz
repnz
xorb
mov
add
push
cmp
push
sbb
push
aad
dec
in
popf
mov
inc
add
int
gs
adc
dec
jbe
xchg
mov
fwait
lret
xchg
xchg
lea
cwtl
cmp
and
push
aam
ret
cmc
mov
stos
push
sub
push
test
mov
cmp
dec
les
fs
pop
or
imul
mov
inc
adc
jle
sbb
inc
xor
adc
xor
icebp
mov
pop
adc
lcall
mov
push
mov
pop
test
lahf
or
sbb
and
orl
lods
push
movsb
push
add
aas
xor
cld
xlat
push
testb
ljmp
fisttpll
sarl
out
push
lret
jge
loop
repnz
dec
push
jge
cltd
dec
cmp
enter
add
inc
lock
xor
mov
mov
sahf
push
xchg
mov
ja
or
mov
xchg
icebp
rolb
mov
inc
sub
xchg
pushf
sub
shrl
lods
into
and
test
ja
jmp
lods
sarb
add
loope
jns
ljmp
cwtl
push
jmp
jns
pop
ljmp
shrl
repz
inc
lret
filds
or
sarb
cmpsl
ret
and
cltd
es
and
mov
data16
and
imul
lahf
push
fiaddl
sub
adc
cs
xor
push
fwait
xchg
push
iret
lods
jge
push
inc
dec
test
jns
leave
test
call
and
ss
mov
jb
add
push
cmp
inc
test
mov
sti
testl
push
lods
jecxz
pop
mov
and
cld
mov
jl
inc
pop
pop
mov
dec
loopne
cld
test
push
mov
aas
in
jo
mov
cwtl
iret
adc
jb
push
inc
add
add
sti
add
cmp
add
test
push
filds
push
fsubs
push
mov
je
push
mov
inc
fidivs
icebp
mov
jns
sub
mov
addl
movsl
arpl
dec
sub
icebp
sahf
stos
daa
push
sub
jns
rcrl
pop
inc
sbb
pop
sub
mov
popa
cmp
xor
pop
les
mov
scas
pop
les
int3
orb
cmp
inc
xchg
add
and
and
call
inc
sbb
xor
aas
loopne
jo
das
das
inc
sbb
outsb
in
sub
clc
lea
inc
clc
or
jp
arpl
scas
out
xchg
outsb
mov
pop
or
stos
xchg
xchg
jmp
push
dec
mov
mov
and
cmp
popa
out
adc
enter
pop
mov
in
push
xor
inc
xchg
cmp
das
popf
into
sti
pop
mov
mov
mov
xchg
je
pop
sti
test
seto
repnz
xchg
test
mov
jae
ljmp
nop
push
cld
xchg
ljmp
dec
xchg
sbb
cmp
lea
jp
decl
lret
cmp
mov
orl
mov
pop
fsubl
ja
addb
sub
lcall
ja
or
jne
bound
adc
lods
mov
je
xchg
cmp
pop
or
pop
jecxz
sub
mov
inc
push
push
mov
fistps
icebp
lea
mov
sbb
sbb
xor
cld
xor
cmpsl
and
inc
inc
je
pushf
into
enter
sbb
mov
mov
mov
fdivrp
ds
add
stos
inc
pop
xchg
rorb
dec
and
popa
mov
mov
in
mov
or
lcall
ficoms
aad
call
jge
mov
pushl
repnz
or
subb
sub
std
loop
mov
add
add
scas
inc
mov
jo
jno
or
mov
jl
add
jae
sbb
andb
in
dec
jb
or
dec
inc
imul
dec
je
mov
pop
je
rcll
jmp
or
push
negb
jnp
inc
jg
mov
jmp
jl
inc
pop
sbb
adc
dec
shr
loop
inc
xor
lods
sub
cld
inc
stos
ror
dec
ljmp
out
mov
jno
pop
pop
jb
lock
pop
aad
push
lock
dec
jae
or
cmp
insl
adc
insl
ss
mov
jecxz
push
xor
fnstenv
lods
jne
imul
jge
popa
in
sub
imul
in
dec
pop
das
add
xchg
ret
add
xchg
fdivl
mov
jns
push
dec
enter
je
dec
mov
mov
negl
sbb
push
xorl
ja
add
adc
mov
shrb
arpl
aad
jmp
subl
out
std
mov
or
sub
enter
add
and
sbb
lock
cmpsb
shll
sbb
jecxz
fwait
lods
addl
ljmp
repnz
outsl
sti
jnp
imul
ja
jmp
rolb
xor
push
push
test
inc
push
rcrl
xchg
add
mov
lock
popa
mov
aaa
fwait
in
inc
mov
into
mov
inc
push
xchg
add
sbb
mov
scas
jecxz
inc
jecxz
sbbb
mov
jg
int
mov
jge
stos
and
mov
ljmp
mov
inc
sub
xchg
jnp
and
mov
data16
insb
imul
adc
sahf
sub
cmpsb
cld
push
pop
dec
das
sti
dec
cmp
cmp
mov
dec
pop
mov
pop
mov
and
mov
dec
jg
sub
insl
and
inc
pop
pop
xor
mov
xchg
sub
sub
mov
cmp
jg
jmp
xor
sarl
cltd
loope
insb
push
mov
aas
rol
jno
imull
les
xor
das
add
lds
in
sbb
cmp
cli
movsl
fnstsw
fdivrs
outsl
les
add
mov
and
mov
sub
aaa
xchg
add
addl
stos
mov
enter
add
dec
adc
icebp
xchg
test
pop
fiadds
movsl
popa
test
incl
sbb
xlat
mov
out
mov
dec
in
pushf
and
outsl
xchg
push
aaa
out
hlt
sub
sub
or
out
idiv
imul
dec
jg
add
mov
cmc
pushf
sbb
lahf
rcrb
mov
les
std
les
gs
ja
mov
repnz
in
adc
iret
dec
fiaddl
add
or
daa
xor
mov
mov
faddp
mov
mov
js
mov
stos
fsubrl
xor
imul
sti
out
jne
popa
cwtl
mov
inc
adc
faddl
jbe
mov
jle
jae
js
xchg
shlb
out
aam
add
enter
xchg
push
add
movsb
das
or
nop
les
ja
scas
jb
cli
pop
inc
ja
xchg
xchg
sbb
fldcw
out
sbb
sbb
xchg
vpcmov
mov
cld
fcmove
imul
ret
jl
xchg
jne
mov
jnp
sbb
dec
jle
jb
pop
jmp
in
inc
sbb
ret
pop
push
je
cltd
mov
int3
pop
loop
mov
cmp
movsb
inc
andb
jb
adc
mov
and
inc
dec
dec
or
or
push
test
inc
push
mov
add
jg
notb
std
cwtl
repz
dec
pushf
dec
dec
mov
sahf
fdivl
arpl
in
fidivs
xchg
popa
lock
hlt
sub
or
inc
xchg
cmp
dec
out
add
sbb
loop
sbb
push
jns
sahf
sahf
in
clc
es
adc
sub
lret
push
xchg
ja
xor
mov
pop
orb
arpl
jne
lcall
sbb
inc
mov
pop
stc
sub
ret
insl
in
push
test
adc
lods
mov
push
or
add
imul
mov
js
adc
and
pushl
enter
add
sarb
pop
push
add
in
xchg
scas
cmp
bound
mov
bound
jle
jle
mov
inc
arpl
inc
and
fnstsw
dec
cmp
push
sub
insl
stc
mov
ds
mov
sarl
bound
scas
mov
repnz
xchg
adc
jge
cltd
mov
inc
and
mov
and
push
and
pop
out
aad
inc
subl
jg
inc
cmp
mov
sahf
js
mov
mov
sub
stos
pop
mov
mov
mov
incb
movsb
shl
fwait
lock
mov
addr16
ret
jns
inc
int
jo
dec
sub
and
imul
mov
pop
mov
loopne
sarb
loopne
pop
and
stos
push
cs
in
add
jmp
lods
adc
std
pop
out
and
ja
mov
add
pop
es
pop
cmp
stc
cmpsb
outsb
inc
inc
jge
sub
ljmp
push
add
xlat
inc
cmpsb
fidivl
mov
shrb
adc
out
inc
sbb
scas
loope
call
sbb
cmp
mov
in
push
mov
inc
pop
push
xchg
repz
test
mull
cli
sbb
in
jnp
data16
mov
mov
xchg
int
js
mov
cmpsl
sbb
aaa
jns
outsl
lret
loope
out
dec
movsb
pop
insb
mov
cmp
mov
into
adc
cmc
sub
and
sub
fistps
mov
jge
xor
mov
leave
repz
mov
js
sarb
rol
fisubl
mov
cld
xor
push
adc
push
insb
loope
cmc
cld
or
and
cltd
sub
push
add
and
or
sub
sti
fsubrl
add
mov
fstpt
mov
mov
jno
and
adc
pop
pop
fadds
adc
push
sbb
inc
add
fildll
in
sub
out
hlt
jle
call
pop
ds
jecxz
fistpl
fidivl
pusha
dec
scas
inc
std
sub
pop
mov
movsb
cs
shrl
mov
mov
ja
es
cld
insb
gs
xor
fs
jge
dec
shlb
hlt
ja
fldl
push
nop
punpcklbw
dec
mov
adc
call
adc
pop
inc
stos
lds
jbe
mov
and
adc
rclb
adc
and
xor
dec
test
mov
loope
mov
or
insl
clc
aas
push
mov
fnstcw
and
jg,pn
sbb
add
aas
adc
pop
sahf
aad
mov
popa
aad
add
push
xchg
scas
push
inc
cld
sbb
mov
aam
fbld
push
mov
cmpsb
in
dec
mov
xchg
lahf
pop
repz
stc
out
push
mov
rclw
or
jg
and
mov
nop
or
adc
mov
scas
dec
ss
addr16
dec
dec
repnz
jl
push
mov
and
test
incl
push
sub
movsb
xor
test
adc
xchg
xchg
pop
pop
push
jp
jp
xchg
jae
repnz
imul
cmp
or
mov
pop
scas
fmuls
cmpb
inc
cmp
ret
xor
btc
xchg
pop
sbb
mov
jl
arpl
enter
mov
ret
lret
div
xchg
pop
inc
sub
fldenv
inc
mov
and
fstps
or
addr16
cmc
icebp
dec
push
popf
lock
int3
inc
pop
or
lret
mov
adc
lret
inc
shll
pop
ds
mov
adc
in
dec
scas
xchg
fiaddl
lods
dec
les
pop
cli
leave
ljmp
cmpsl
sbb
cmp
mov
xchg
imul
mov
dec
fwait
push
outsl
sbbb
lods
mov
inc
pop
jl
push
das
das
loope
or
cmp
clc
sbb
shlb
arpl
or
out
mov
test
mov
or
js
or
mov
xchg
test
xchg
mov
imul
incl
and
jb
add
sub
dec
jge
imul
out
pop
outsb
xor
inc
xor
jp
enter
mov
das
pop
clc
arpl
mov
rcr
fstl
add
daa
out
cmpb
mov
sahf
testb
mov
mulb
dec
mov
dec
out
jg
xchg
push
leave
cmc
adc
dec
iret
mov
ficoms
dec
push
sub
les
aas
fs
jmp
push
mov
adc
in
rcl
test
dec
jnp
js
test
sub
mov
push
jl
mov
push
int3
jmp
sti
and
mov
lahf
xor
push
arpl
data16
inc
xchg
cmpsl
push
add
ret
xlat
aaa
jo
arpl
jnp
push
popa
je
leave
addr16
insl
pop
rcrl
xor
jae
or
and
fdivrl
mov
stos
xchg
mov
jl
or
mov
daa
ljmp
jae
adc
sbb
stos
loop
cmpb
out
mov
mov
shll
lret
in
pop
lock
pop
ret
loope
sbb
stos
insb
cmp
lds
xchg
pop
fldt
cltd
xchg
add
adc
cmpsb
shll
adc
adc
iret
lret
ja
aas
push
lret
adc
mov
jl
xor
addl
dec
ss
enter
decb
xlat
aaa
inc
mov
orl
fldl
xor
push
jno
push
add
imul
fdivs
shrb
imul
int
jge
add
ja
xor
lret
insl
xchg
fmulp
push
pop
mov
pop
cli
lea
lahf
ss
int
xchg
test
adc
push
clc
cli
or
ret
enter
pop
pop
xchg
insl
adc
loop
push
addl
push
inc
push
or
mov
mov
cli
dec
aaa
mov
mov
cmp
test
fwait
xor
in
xchg
out
imul
std
inc
lods
ss
aam
mov
cmp
sti
jge
dec
mov
and
das
jb
mov
xchg
or
orps
pop
lahf
xchg
and
leave
lds
scas
loopne
sub
push
dec
and
inc
lret
or
movsb
mov
dec
push
jge
inc
cmp
cmpsb
ss
mov
mov
daa
mov
jle
lcall
add
add
lcall
test
sbb
stos
fcompl
add
and
ds
adc
jl
jo
dec
lods
ficomps
daa
arpl
scas
push
jp
adc
inc
fsubr
sub
into
and
add
test
out
inc
mov
fstl
mov
inc
push
hlt
jo
cli
or
int3
clc
ret
jbe
js
adc
outsl
ja
ja
push
lcall
xor
sub
fldcw
jge
enter
jo
cld
enter
push
xor
dec
mov
mov
mov
mov
in
adc
inc
cmp
xchg
and
push
sbb
cwtl
fldenv
mov
adc
sbb
ficoms
hlt
int
mov
in
insl
sbb
jmp
and
dec
jg
add
iret
psrld
pushf
repz
mov
pop
sbb
xchg
mov
clc
adc
cmp
adc
popl
ljmp
repnz
cmp
adc
jmp
inc
fsub
call
dec
loope
cmp
out
push
leave
xor
ficompl
or
inc
jbe
sub
xor
cmp
pop
repnz
aaa
in
jno
cmp
aad
xchg
sub
adc
or
cmp
xchg
push
mov
ja
aas
cmp
dec
repz
imul
mov
popf
xlat
sbb
stos
cli
xor
jae
pop
lcall
cmp
lock
popa
out
clc
das
shlb
add
xor
inc
lret
dec
adcb
pop
call
mov
outsb
push
inc
xbegin
arpl
stc
jmp
adc
out
lahf
mov
push
js
push
lret
adc
xchg
fcmovbe
arpl
cmp
ret
mov
cmp
daa
ljmp
stos
push
mov
mov
jmp
call
inc
push
and
sahf
aaa
pop
dec
xchg
sub
aad
xchg
in
xchg
in
add
push
outsb
xchg
in
mov
dec
pop
push
xchg
and
or
outsl
adc
divb
sbb
das
hlt
sub
aaa
push
loop
adc
test
js
ficompl
xchg
fisubrs
popa
test
out
lahf
dec
push
mov
jns
rorb
cmp
jmp
cld
mov
hlt
or
incl
fcmovnb
stc
popa
in
stc
sub
fnsave
out
adc
push
fimull
mov
lahf
push
arpl
lret
insl
in
push
dec
or
out
push
loope
mov
cld
xchg
inc
leave
adc
jne
sbb
outsb
mov
push
mov
xchg
fdivrs
movsb
mov
dec
in
je
test
add
mov
testl
sar
mov
addr16
stc
cmpsb
xor
sub
jecxz
jae
dec
cmp
jae
insl
push
cmc
orl
xchg
or
hlt
test
ss
xchg
xchg
in
inc
sub
loopne
std
outsl
dec
ds
ds
mov
dec
sti
adcl
test
lods
ret
and
and
mov
fidivl
sub
or
loop
cs
mov
jmp
mov
ljmp
sbb
xchg
out
xchg
movsl
inc
sti
cmp
sti
ds
dec
adc
addr16
rcrl
sbb
pop
mov
in
fidivl
mov
jl
cmpl
ss
jecxz
pusha
ss
push
popa
lahf
imul
lea
and
adc
cwtl
lods
faddp
jno
imull
jb
shll
xor
vmread
rorb
fwait
cmp
gs
xchg
sbb
sub
fwait
dec
mov
into
jb
scas
loope
ja
mov
mov
jns
je
mov
sub
iret
rorb
inc
dec
insb
and
push
movsl
push
sysexit
push
or
dec
inc
push
addr16
nop
mov
push
mov
sbb
aas
and
jmp
cltd
scas
xchg
and
xchg
sbb
adc
cld
adc
pop
and
push
add
inc
jbe
shrb
subb
fnstenv
mov
push
mov
mov
lds
ja
pop
jbe
add
sub
pusha
pop
push
pop
mov
jns
xchg
mov
lret
fsubl
enter
fs
cmp
dec
jo
jno
bound
pop
repz
cmp
sti
aad
jmp
call
xor
mov
mov
lahf
jno
fsubrl
dec
enter
mov
hlt
jmp
xor
pop
addb
jne
sub
scas
mov
pop
push
into
dec
nop
addb
fs
mov
mov
mov
inc
in
jp
jns
outsl
push
call
loop
nop
cmp
icebp
mov
imul
gs
mov
push
leave
pushf
pusha
mov
into
out
inc
xor
in
je
pop
xor
call
inc
sbb
mov
popf
adc
or
aas
and
in
bound
ret
mov
push
dec
sub
lahf
sarl
pop
in
dec
out
or
dec
fstp
inc
pop
pop
pop
cmc
xchg
jno
in
cmp
pop
imul
lcall
fdivs
imul
pop
jbe
andb
rclb
push
mov
fucomi
js
fs
adc
mov
mov
mov
sbb
and
mov
mov
movsb
or
jbe
pop
pushf
jae
jle,pt
fs
pusha
out
movsb
or
scas
and
repz
jecxz
outsl
pop
mov
jbe
cmp
xor
lahf
repz
mov
and
jle
lds
sub
rol
mov
pop
movsl
pusha
flds
scas
orl
add
ds
stos
sub
sahf
dec
xor
test
fcomip
add
cltd
adc
sbb
incl
popa
push
mov
xor
jge
pop
out
fwait
mov
pop
lar
jne
fnsave
and
xor
dec
mov
jo
fsubrs
adc
rcl
mov
cmp
dec
arpl
xchg
sbb
lret
test
adc
lcall
jbe
push
mov
inc
enter
cmc
mov
loopne
push
dec
jl
xchg
bound
add
sbb
je
cmp
mov
and
ret
dec
mov
xchg
dec
sbb
outsl
add
stc
mov
mov
add
xor
add
subb
and
in
aad
lock
mov
lret
mov
push
movsb
cmpb
sarb
jg
lock
scas
xor
pusha
outsl
adcb
insb
test
adc
aas
jb
ja
fldenv
shrl
and
ljmp
cmp
cmc
orb
stc
sbb
jge
jmp
adcb
movsb
xchg
addr16
mov
lds
xchg
es
test
aam
xchg
xchg
insl
je
xor
aaa
sbb
xchg
scas
test
pop
push
jl
pop
lds
adc
and
fs
xor
push
mov
int
xchg
push
pop
mov
das
mov
cmp
cmpsl
loopne
and
pop
insb
or
or
repnz
cmpb
sbb
jmp
jl
hlt
jl
mov
push
pop
stos
cmp
lret
and
lea
arpl
ret
dec
data16
jmp
jl
jns
fs
or
add
test
mov
fldt
mov
clc
inc
scas
push
lcall
dec
decb
mov
roll
lcall
rorb
adc
mov
inc
sub
pushf
subb
das
orb
inc
pushf
jae
sbb
push
mov
sarl
adc
cmp
sub
stc
data16
push
aad
icebp
dec
stos
sub
popf
jmp
popf
pop
xor
stc
rcrl
jp
and
push
jae
push
jl
push
lods
cmc
popa
xor
mov
ljmp
mov
jmp
mov
cwtl
loopne
cmp
and
push
ljmp
movsb
xor
adc
fwait
scas
xlat
ret
fbstp
and
icebp
repz
jne
outsb
aam
ds
ss
jp
ret
push
xchg
xor
loop
nop
jge
out
sbbb
imul
mov
call
outsl
dec
lcall
sub
lcall
sbb
in
push
rcpps
dec
mov
mov
sub
xlat
jge
test
push
cmpsb
das
test
les
cwtl
mov
mov
mov
adc
orb
adc
je
push
and
pop
orb
popf
dec
call
pusha
cld
cmpb
mov
lods
push
mov
scas
dec
xor
enter
leave
mov
pop
daa
pop
sbb
test
push
push
aaa
push
inc
imull
ja
push
mov
cmp
mov
fs
mov
sbb
out
xor
iret
pop
call
lret
in
sub
cmpsb
push
mov
imul
inc
adc
cmp
imul
or
sub
jecxz
stos
inc
sti
rcll
jge,pt
in
sub
push
xchg
adc
ljmp
push
out
pop
xor
or
and
dec
mov
and
je
and
jno
enter
and
shll
xorl
loope
stc
test
cmpsb
pop
mov
rcrl
add
jb
cwtl
in
scas
scas
inc
push
mov
ret
xchg
in
push
out
dec
vunpcklps
lods
cs
inc
jb
shrb
jb
cltd
mov
inc
gs
imul
mov
jne
add
fisttps
mov
mov
add
aad
mov
mov
call
or
cmp
lds
cli
aaa
jb
or
jmp
adc
movsb
cmp
cs
sbb
test
clc
or
js
xor
fisubrs
jb
jno
jmp
push
ds
cmpsl
sbb
stos
xchg
dec
faddp
or
push
sbbl
fcoms
ja
mov
pop
int
push
subl
dec
pop
es
incb
fnstcw
mov
adc
mov
pop
push
out
mov
cmp
movl
cmpb
dec
stc
repz
jns
mov
popa
jne
imul
aam
mov
clc
jo
test
add
cmp
mov
cmp
fstps
rcrb
idivl
sbb
adc
daa
insl
mov
jg
lock
rcrb
pop
lcall
jmp
adc
cmc
jnp
shll
fidivs
push
pop
stc
movsl
dec
roll
out
cmp
push
push
xor
pushl
call
int3
aad
aad
xor
dec
aam
or
sbb
mov
sub
fists
mov
xchg
into
cmp
ljmp
jb
sub
flds
popf
mov
lods
or
je
ss
push
mov
pop
inc
dec
push
jno
into
das
out
xor
shll
test
inc
lock
push
in
jb
arpl
int
stos
jmp
adc
iret
test
popa
js
cmp
fdivrl
popf
outsb
pop
pop
not
jne
adc
sbb
dec
add
je
mov
sahf
xor
xchg
repnz
xchg
push
fs
adc
jl
fdivs
inc
push
xchg
jmp
sbb
arpl
dec
xor
mov
or
add
stos
push
out
push
dec
insb
out
adc
in
addr16
out
fcompl
mov
stos
pop
sub
mov
mov
test
mov
cmp
mov
gs
popa
mov
icebp
jecxz
dec
cwtl
loope
and
jns
ficompl
cmp
jl
bound
fidivrl
mov
ficompl
pop
push
movsb
xchg
sub
jecxz
push
pop
mov
shl
inc
pushf
inc
into
inc
pop
jl
pushf
rolb
jl
leave
sub
sti
out
dec
sub
js
test
jb
aaa
hlt
pop
fimuls
popa
dec
mov
test
out
push
pop
test
jbe
cmp
cmc
ljmp
mov
pop
xchg
jns
xchg
mov
push
and
jmp
and
xchg
dec
dec
lock
scas
stos
mov
and
pop
xchg
mov
insl
cmp
mov
stos
push
scas
mov
addb
push
rorb
sbb
int3
lea
rorl
lea
fidivrl
rorl
xor
mov
add
push
push
jp
mov
and
and
or
loop
mov
in
scas
daa
mov
xorb
hlt
sbb
testl
mov
shrl
sub
xor
iret
dec
fldl
adc
and
jbe
adc
pop
lea
ss
sub
inc
mov
mov
cmpsb
cli
rcll
scas
dec
dec
ret
fwait
mov
xchg
ror
dec
adc
xor
mov
mov
mov
push
xchg
sub
mov
or
add
lahf
cwtl
jmp
mov
ret
jge
mov
or
ret
cmp
outsl
jp
ljmp
jne
mov
scas
daa
aad
fstps
das
dec
inc
fs
add
ret
ffreep
ret
sub
cmpsl
dec
xor
cli
imul
insl
jne
cmp
mov
out
mov
or
and
fmull
fwait
jno
push
mov
movzbl
test
dec
je
or
cmp
sub
fbld
dec
popf
jecxz
mov
add
shlb
mov
mov
mov
fnstcw
sbb
in
cmp
jmp
sbb
adc
sub
and
or
cltd
push
ficoml
or
add
xchg
cli
scas
nop
sbb
and
push
xchg
xor
push
xchg
imull
inc
cmc
or
stos
dec
lods
xchg
xchg
fiaddl
stos
das
loopne
sti
lods
jge
fisubs
xchg
push
sarl
dec
dec
mov
dec
jmp
mov
fdiv
xor
rcrl
cltd
pop
xchg
mov
xchg
fildll
das
jp
jg
decl
insb
int
xor
lds
sbb
mov
je
pop
fisttpl
call
mov
pop
fists
push
sbbl
inc
inc
fnstenv
push
jp
fwait
into
cmp
sti
scas
inc
pop
stc
sti
push
xor
sub
xchg
sub
sahf
jnp
ja
sub
xor
mov
pusha
out
xchg
pop
outsb
pop
insb
pop
mov
sti
add
das
sti
mov
rorb
and
add
adc
dec
out
scas
cld
or
test
loope
mov
adc
pop
and
xchg
xchg
and
lcall
sbb
mov
inc
push
insl
xchg
repz
add
adc
push
lahf
or
inc
xchg
or
jle
adc
xchg
push
fstpl
inc
popa
in
imul
push
add
mov
pusha
inc
mov
scas
aas
outsl
push
lds
add
mov
xchg
xchg
mov
xor
cmpb
repz
mov
mov
test
ficoms
int
jb
stos
cmp
xchg
or
sbb
jle
cld
jmp
or
shr
inc
sub
icebp
or
jecxz
dec
lods
jno
test
dec
cmp
push
mov
test
sub
rep
mov
sarl
fwait
out
or
pop
add
in
into
add
scas
push
adc
xor
movsl
fisubrs
pop
push
fimull
ljmp
mov
pop
mov
jp
cmc
pop
fdivrs
or
lds
dec
cmc
cmc
aad
xor
jmp
inc
rcrl
push
lea
mov
ds
mov
mov
add
dec
outsb
push
repnz
loope
xchg
inc
xor
adc
outsb
mov
xchg
divl
cmp
adc
loope
inc
test
mov
sti
in
iret
stos
outsb
or
arpl
inc
dec
fs
test
pop
incl
xchg
cmp
shrl
repnz
push
cwtl
rcll
fucomp
out
cmc
xchg
push
stc
jns
shll
or
andl
mov
mov
imul
hlt
fimuls
pusha
lret
subl
decl
sub
add
push
das
jne
popf
psubusw
imul
push
push
stos
push
insl
test
shll
movsb
mov
mov
cli
push
adc
adc
add
and
lock
push
inc
xchg
dec
jns
jns
jne
push
jecxz
inc
outsb
pop
adc
in
out
sub
mov
push
xor
test
repz
jge
adc
ret
and
jl
in
push
dec
mull
push
push
pop
aaa
mov
cmp
insl
sti
jno
mov
mov
mov
cld
xor
test
push
in
sbb
cmp
popf
outsl
dec
rcll
adc
test
cmp
or
push
js
mov
push
add
andl
push
iret
and
outsl
dec
xchg
pop
andl
imul
sti
inc
ret
test
mov
fimull
fmuls
cld
mov
test
testb
cmp
fwait
cltd
in
jmp
xchg
cmp
repz
pop
xor
fwait
mov
lret
mov
lcall
push
mov
or
das
sub
pop
push
cmp
inc
mov
push
lahf
popa
or
loop
cmpl
scas
or
pop
mov
repnz
push
test
and
jp
fsubr
daa
cltd
sti
iret
in
ret
lods
sbb
cmp
scas
add
jmp
sub
outsb
xchg
adc
mov
test
pop
test
xor
mov
mov
mov
test
rcrl
jno
pop
push
push
sub
jmp
sbb
fdiv
dec
scas
daa
pop
mov
mov
sub
pop
push
jp
adc
adc
or
vpinsrw
cmp
into
inc
test
cmp
lods
fstpt
or
aas
dec
std
aam
jne
sti
xor
testb
sahf
int3
test
inc
and
test
adc
test
icebp
cs
and
andb
jae
outsl
jg
cmp
sbb
mov
xchg
push
aas
aam
mov
sbb
imul
xor
xchg
scas
cli
adc
ret
sbb
xchg
inc
sub
mov
sub
sub
mov
ljmp
inc
rcrl
xchg
fdivrl
roll
test
repz
mov
mov
shll
leave
xor
or
xor
mov
in
mov
jno
adc
sub
repnz
dec
or
push
or
in
fisubl
or
stos
sub
mov
pop
push
inc
cmp
pop
xor
rcrl
sub
and
rorl
dec
idivb
cltd
add
cmp
addr16
roll
xor
testl
mov
or
inc
xchg
loope
jmp
mov
inc
test
idivl
dec
stos
std
pusha
fwait
pop
add
and
sbb
mov
and
negl
push
fwait
movsl
cld
xchg
sbb
leave
mov
jns
or
flds
jge
cmp
and
aas
incl
push
movb
or
lcall
sub
das
test
jbe
cmp
inc
mov
pop
in
xchg
fs
pop
ds
outsb
loopne
adc
rorb
arpl
and
hlt
cld
sbb
daa
mov
inc
out
push
sbb
xchg
sbb
xchg
cmpl
add
stos
jo
fsubs
faddl
sbb
mov
sahf
inc
dec
mov
mov
pop
xchg
mov
mov
pop
fbstp
dec
add
jmp
or
jae
nop
mov
jl
aam
xor
or
cmc
icebp
cmp
jb
xchg
dec
ss
cwtl
mov
xchg
lret
fldln2
aas
jbe
mov
mov
jl
jae
pop
scas
fcmove
adc
push
rclb
or
xor
cmpsl
or
ret
nop
repz
cmp
clts
fwait
sahf
inc
fldt
jbe
lret
push
xlat
mov
jne
insb
outsl
cmpsb
repnz
adc
dec
ret
add
stos
cmp
sbb
sbb
adc
xlat
mov
cmp
out
pusha
mov
xor
aad
ljmp
ret
fs
imul
pop
mov
pop
fiaddl
inc
mov
cli
adc
jo
cmp
jg
es
push
push
push
adc
mov
les
cmpsb
sub
mov
in
addr16
rcrb
xor
mov
xchg
push
rcrl
in
xchg
or
xchg
addr16
sub
ja
stos
nop
int3
mov
dec
or
ret
dec
addb
dec
cwtl
jecxz
mov
inc
or
out
adc
stos
mov
xchg
test
ja
pop
xorl
push
repz
mov
or
cmp
test
sub
push
mov
mov
leave
xchg
push
movsl
or
fsubl
shll
inc
mov
sbb
into
cltd
jle
add
xor
repnz
cmp
pushf
jns
data16
dec
fiaddl
insb
aam
xor
outsl
push
lea
das
mov
aam
mov
fimuls
scas
cs
add
ljmp
out
inc
bound
jns
in
or
sarb
fcmovnbe
xor
into
add
jo
sub
fsubp
mov
dec
es
mov
add
push
test
lret
inc
mov
clc
enter
lret
cli
pop
xor
fwait
mov
faddl
xor
insl
push
mov
and
or
fdivrp
add
enter
popf
xchg
push
push
jae
xchg
flds
fimuls
in
and
or
xchg
and
cmp
popf
sarl
xchg
push
imul
or
test
lods
dec
inc
push
and
outsl
test
mov
mov
pop
jmp
movsl
or
sahf
sbb
sbb
movsb
insb
xchg
jb
cmp
mov
xlat
xlat
cli
xchg
pop
xchg
sti
or
clc
pop
mov
or
nop
lahf
fstsw
adc
jns
xor
xor
adc
movsb
add
popa
call
push
addl
and
or
mov
js
cmp
imul
dec
inc
std
js
sahf
aaa
mov
out
xchg
cmp
sub
fxch
mov
fs
stos
or
sbb
aas
sub
mov
and
cld
push
orl
mov
adc
sbb
in
jl
xorl
pushf
adc
rcrb
jmp
and
ljmp
aam
mov
popf
fdivrs
mov
xchg
push
into
dec
xor
ss
out
and
or
dec
adc
mov
adc
ret
xor
div
inc
cs
push
inc
ss
jle
sub
mov
arpl
jmp
std
movsb
xor
repz
mov
aaa
xchg
sub
xor
cmc
adc
aam
or
add
cltd
push
push
fwait
dec
decl
enter
call
dec
fmul
out
aaa
xchg
mov
cmp
xchg
in
add
jg
xor
js
pop
mov
xrelease
shr
cmp
movsl
dec
loop
lods
in
or
push
mov
jnp
movsb
popl
jecxz
shlb
add
jle
inc
imul
scas
add
xor
iret
loope
fstpt
lret
pop
sbb
and
xchg
mov
addr16
cld
add
xchg
dec
xor
pop
mov
sbb
jo
andb
mov
add
add
ret
jns
ret
mov
movsl
clc
cmp
scas
in
dec
add
adc
add
lahf
lcall
xor
add
in
push
mov
cmp
mov
xor
xor
jle
les
pushf
mov
xor
push
pop
jp
mov
rclb
add
mov
out
ret
sub
jecxz
cli
dec
leave
jb
jge
sbb
push
scas
lcall
pop
imull
test
fnstenv
pop
lds
xor
cmpsb
insl
sahf
pop
mov
and
mov
std
dec
push
lret
push
je
out
mov
jbe
xor
jns
mov
inc
sub
push
pop
test
lahf
jmp
xchg
push
outsl
cmp
mov
sub
xchg
insb
mov
cmpsb
negl
mov
decb
jmp
imul
es
mov
xchg
sbb
or
sub
pusha
stos
mov
xchg
or
mov
dec
pop
push
dec
add
test
movsl
push
out
xchg
aam
sbb
inc
repnz
or
arpl
les
jmp
mov
ret
add
mov
movsb
mov
mov
add
mov
mov
icebp
add
jp
jb
sub
pop
aam
loope
adc
aas
aam
xchg
xchg
pop
jmp
sub
inc
fmul
mov
jp
sub
bound
and
mov
xor
test
imul
dec
les
pop
gs
push
push
stos
mov
divl
out
adc
mov
dec
push
shl
mov
aam
and
mov
mov
flds
xor
imul
test
jmp
xor
subb
add
push
jmp
mov
mov
iret
xchg
ljmp
pusha
adc
and
orl
lods
adc
adc
daa
push
mov
in
out
inc
xor
mov
jno
mov
mov
sbb
gs
jo
bound
xchg
cmpb
lods
ficoms
out
mov
xchg
sbb
test
push
scas
pop
xchg
inc
in
incl
xlat
sti
mov
mov
adc
int
loopne
subb
adc
stc
movsb
fcmovnu
outsb
jge
sub
and
daa
add
iret
ja
incl
cmp
sahf
call
rorb
jno
sub
xchg
adc
jnp
xchg
popa
into
xchg
jo
sub
jmp
ret
inc
daa
mov
es
xlat
inc
push
icebp
arpl
sbb
outsl
push
addr16
xchg
testl
loopne
cwtl
dec
mov
cltd
repnz
and
cmc
mov
jge
sub
sub
and
jmp
cmp
push
cmp
lcall
inc
or
pop
adc
jg
testl
shl
mov
push
xor
sti
add
dec
dec
pop
push
pop
loopne
rclb
into
int3
outsb
jnp
push
pusha
inc
or
cmp
imul
outsb
pop
push
fsubs
jl
and
insl
cmc
sbb
movsl
fsubrs
les
test
movsb
jp
push
sub
sbb
push
nop
mov
pop
xchg
insb
shrl
jne
xchg
fwait
loopne
js
mov
js
jge
inc
pop
sti
js
pop
sti
hlt
aad
outsb
adc
stos
push
test
mov
dec
sbb
xchg
sbbb
imul
loop
sbb
fstps
jecxz
into
imul
in
jae
arpl
dec
jno
push
int
sti
jae
lds
xor
mov
cli
ds
xor
or
sbb
les
fistpll
add
dec
int
arpl
scas
mov
js
lods
ds
int3
insl
lods
or
add
jmp
scas
mov
ficoml
or
js
cmp
decl
jnp
mov
aas
dec
cmp
mov
test
call
sahf
jns
insb
lods
cmp
add
mov
jnp,pt
add
mov
xchg
mov
mov
adc
inc
data16
dec
xchg
push
add
pop
cmpsl
push
sub
icebp
sti
notl
mov
xchg
fistl
xchg
sbb
lea
out
mov
inc
inc
sub
xchg
jge
in
data16
movsl
add
pop
pushf
or
imul
mov
addr16
lcall
and
inc
aad
out
loop
dec
fucomip
divb
ds
mov
bound
pop
je
mov
mov
mov
mov
stc
sub
inc
or
movsl
mov
inc
clc
inc
ret
pop
pop
out
cld
cmp
test
loope
push
xchg
gs
negb
inc
pop
pop
enter
jns
imul
sbbb
lahf
fbstp
dec
mov
xchg
pop
popa
sbb
movl
test
loope
xor
pop
sub
stc
ds
push
dec
icebp
cmp
cltd
inc
clc
es
push
repnz
pop
xor
dec
dec
insb
cmp
fidivrs
mov
outsl
jno
add
inc
xor
adc
sbb
fcoms
mov
clc
xor
adc
adc
push
xchg
sbb
xorb
jo
movsl
add
scas
test
mov
jg
dec
clc
addr16
jnp
movsl
sub
loop
or
es
fs
jecxz
add
mov
lods
push
or
lahf
push
fldl
sub
cmp
cmp
in
adc
adc
push
xchg
std
ret
pop
inc
mov
call
pop
rcr
cmc
mov
jecxz
adc
int3
mov
sbb
popf
lret
inc
adc
ss
imul
sub
data16
lret
jmp
add
les
in
dec
push
mov
aad
jle
test
sbb
adc
xor
lcall
cld
jecxz
xchg
xchg
jg
icebp
je
mov
je
inc
pop
push
data16
roll
sub
cli
or
outsl
imul
fsubl
into
adc
push
pop
pop
outsb
mov
sbb
mov
imul
lods
stos
fildl
loopne
push
cltd
sbb
jecxz
stc
js
or
fnstsw
movsl
fcomi
jno
fnstsw
movsl
imul
dec
xchg
lret
lcall
sbb
pop
mov
aas
stc
or
fldcw
ficoml
movsb
shll
imul
out
dec
out
in
stc
jb
fstp
rclb
xchg
stc
mov
pop
pop
arpl
dec
sbb
inc
sub
lods
sbb
cmpl
mov
inc
shlb
or
jno
sub
pop
sbbb
push
dec
mov
push
cmp
and
add
xor
mov
loop
jnp
stc
lcall
jo
iret
imulb
xchg
js
lds
js
xchg
inc
dec
rcrl
and
shrl
movsl
std
stos
leave
and
cmp
pop
add
pop
add
std
mov
aaa
testl
inc
mov
mov
int3
jmp
push
push
jae
mov
push
notb
fwait
mov
sahf
pop
mov
jp
jne
add
cld
add
js
out
cmp
stos
pop
pop
ret
push
mov
sub
xchg
mov
adc
outsb
fimull
mov
inc
push
or
cmp
fmull
push
push
dec
pop
mul
mov
mov
pop
int3
jnp
out
push
fdivrs
pop
or
shlb
shrl
roll
jge
add
lock
push
imull
or
sub
or
mov
leave
inc
enter
mov
push
iret
cmp
int3
push
push
out
cmpsl
repnz
leave
and
xchg
outsb
lret
notb
cmp
sbb
xorb
push
test
and
dec
inc
pop
popf
mov
push
cmpsb
loopne
sbb
cmc
dec
es
and
shlb
aas
cs
into
cmp
mov
mov
in
jp
scas
mov
call
xlat
sbb
add
jae
push
adc
and
xchg
push
jae
pop
cld
dec
ss
jp
sbb
dec
stos
jg
sub
fnsave
insb
loope
add
mov
insb
adc
cld
jmp
mov
lods
fisttpl
pop
mov
mov
mov
mov
add
add
lea
outsb
cli
js
cltd
sbb
sub
and
adc
jne
adc
lret
popf
add
mov
cwtl
loope
rolb
ljmp
je
dec
mov
xchg
rclb
add
jecxz
dec
mov
dec
lcall
inc
pusha
and
dec
adc
imul
push
or
xchg
data16
cs
testl
xor
mov
fsqrt
fsubrs
loopne
imul
cmp
mov
pushaw
lds
dec
mov
aam
nop
mov
sub
jns
mov
pop
xchg
cs
adc
add
gs
scas
test
push
sub
pop
add
mov
cmp
loopne
xor
xor
fdivrl
in
fs
repnz
cmp
lret
sar
push
push
push
and
ret
dec
sti
or
mov
mov
mov
test
cltd
in
push
popa
mov
lock
xchg
dec
dec
dec
add
mov
rorl
jecxz
pop
dec
inc
push
out
in
cmpsb
fcomps
inc
scas
sub
cmp
lock
and
adc
leave
out
sub
mov
test
inc
inc
cmp
lock
pusha
out
fisubrl
push
mov
or
das
pop
cmp
jmp
daa
into
decb
xor
sbb
xor
pusha
dec
rcrl
sahf
sbb
mov
in
ret
ror
int3
dec
cltd
les
dec
out
lret
mov
sahf
add
push
pop
pop
mov
add
xchg
or
movsb
add
repz
outsb
out
jo
and
sbb
test
mov
fisttpl
test
sbb
jecxz
xchg
mov
mov
push
lods
mov
dec
ret
lods
out
fldl
sbb
dec
sub
mov
add
sub
pop
mov
lcall
jmp
rclb
out
mov
test
xor
cli
sbb
sbb
and
or
cltd
push
sub
mov
dec
xlat
pcmpgtw
adc
shll
std
xchg
je
xchg
stos
scas
add
rorl
cltd
scas
cmp
cmpsb
jnp
jns
shl
sti
mov
int
js
push
out
and
repz
out
out
sbb
cli
jbe
int3
xorl
push
pop
lcall
insl
lds
lret
fistps
mov
inc
test
mov
inc
dec
es
nop
stc
loopne,pt
mov
cmp
and
and
push
mov
jmp
and
dec
loopne
sub
mov
outsb
cmpb
cwtl
outsl
in
push
jl
cmp
mov
pop
push
mov
mov
sti
sbb
pop
lea
cmp
xchg
scas
cmp
sub
insl
xor
cmp
popf
or
mov
loopne
xor
loopne
scas
test
jle
push
in
aaa
and
iret
adc
cmp
add
cmp
xchg
pop
shlb
mov
cmpl
inc
pop
mov
push
cmp
in
outsl
out
adc
sahf
insb
jo
fwait
xor
adc
mov
sub
jne
mov
insl
insb
aas
add
dec
push
popa
adc
sbb
adc
rorl
pop
jno
fisttpll
xchg
leave
daa
xor
in
jne
ds
mov
mov
or
or
rcll
mov
xchg
pop
out
gs
ret
loope
iret
inc
or
cmc
aam
sbb
js
mov
adc
popa
iret
mov
pop
xchg
cmpsb
notb
ficomps
xlat
mov
popf
inc
negl
push
and
jo
ret
jnp
aaa
inc
push
xor
icebp
adc
cmpsb
xor
xor
pop
pop
fs
cmpsl
sub
icebp
pop
lods
enter
cli
and
iret
add
xlat
jge
add
xchg
jo
adc
xorb
std
fdivr
lods
push
imul
sbb
mov
popl
loope
jmp
add
adc
icebp
cmp
enter
notl
pop
call
idivb
pop
repz
sbb
cmpl
pop
xor
push
cmp
inc
cmpsl
xor
aas
push
sub
adc
adc
push
dec
pop
cmp
push
mov
pop
inc
mov
pop
or
jle
cmp
shll
mov
lods
push
into
xor
xor
fisubl
sub
mov
jns
jb
rclb
into
cmp
subl
push
in
or
rclb
int
jnp
inc
push
out
iret
iret
fwait
xchg
adc
in
fidivrs
push
push
mov
dec
pop
and
outsl
pop
cmp
outsb
mov
test
imul
jge
popa
mov
rorl
iret
cmp
stc
loop
inc
aam
mov
sub
jb
mov
mov
jmp
enter
push
mov
mov
stc
sub
lock
call
mov
shll
mov
jmp
xor
mov
mov
repz
mov
mov
cmc
lods
jnp
cwtl
ret
adc
and
and
imul
dec
dec
dec
popa
fnstcw
pop
sahf
rorl
cld
shld
imul
aaa
sbb
stos
stc
xchg
scas
dec
xchg
jb
aaa
sub
fsubl
call
xchg
roll
es
dec
popa
cli
arpl
js
xor
jnp
das
mov
in
jno
hlt
or
lods
les
inc
cmp
xchg
subl
sbbb
jge
into
push
int3
mov
bound
scas
or
std
sbb
push
cmp
rol
pop
out
lea
mov
mov
loope
es
dec
mov
adc
notb
sbb
fdivl
add
cltd
mov
add
cmp
push
test
push
dec
fs
repnz
mov
and
pop
dec
loope
scas
inc
dec
lds
hlt
xchg
push
or
das
stc
je
and
and
xchg
in
pop
xchg
stc
add
es
xor
stc
fwait
mov
adc
or
fs
movsb
pop
ffreep
test
sbb
pop
shrl
sub
mov
fwait
data16
pop
cli
dec
xchg
imul
ficoml
rcrl
or
sub
cli
popf
and
jnp
fsubrp
xor
jg
mov
mov
cmp
jno
loope
xchg
ljmp
sub
in
sbb
mov
xor
js
out
push
div
push
jae
adc
xchg
and
out
imul
xor
pop
mov
cs
cmp
push
lods
jmp
xchg
pop
addr16
sbb
xor
jp
in
sti
push
jb
push
mov
clc
scas
out
xchg
xor
pop
test
dec
inc
xchg
fdivl
inc
add
jo
mov
xor
xor
sbbb
jb
adc
cmp
jl
xor
sbb
in
int
or
cmc
jbe
jae
sbb
xor
adc
stos
push
add
and
cmp
mov
loope
pop
pop
cwtl
cwtl
test
stos
fsub
pop
jmp
xchg
add
pop
loopne
cli
pop
out
inc
loopne
push
shll
outsl
cmp
pop
jo
inc
les
sub
mov
ret
add
test
ljmp
mov
ds
adc
cld
cmp
sbb
inc
xchg
dec
pushf
xlat
clc
sub
push
mov
lds
sbb
jmp
lcall
in
clc
nop
test
mov
mov
lock
lea
in
mov
inc
rol
mov
inc
pop
scas
pushf
dec
xor
mov
xchg
mov
inc
test
cltd
loopne
sub
je
ret
cmpsl
scas
ficoms
jo
fimull
mov
lret
dec
cmpsl
jmp
ljmp
dec
sub
test
arpl
sti
push
mov
dec
ficoml
addr16
jnp
fidivs
mov
jmp
pop
in
xor
les
or
leave
or
or
sar
xchg
cmp
clc
je
popf
popa
shll
adc
jns
jnp
push
or
cli
mov
sub
in
lock
popf
mov
pushf
imul
push
sbb
sub
and
dec
testb
mov
xchg
push
lea
paddsb
add
nop
add
lods
imul
aad
jns
in
test
xchg
imul
jmp
inc
pusha
sbb
insl
mov
call
dec
cmpsl
int
push
lahf
in
ret
cli
out
jmp
sbb
pusha
sub
add
mov
jp
mov
push
xchg
in
cmp
jnp
and
sarl
mov
das
roll
in
and
pop
enter
stos
fsubp
dec
aam
mov
jo
xor
pop
inc
stos
jnp
dec
jne
rcrb
iret
mov
dec
stos
mov
push
sub
fbstp
cmc
xchg
pop
inc
mov
int3
dec
and
shr
xchg
lea
sub
jns
fidivl
nop
lock
cs
push
add
mov
push
jne
popf
push
fldenv
xor
or
imul
mov
repnz
push
repz
xor
out
mov
add
adc
notb
aam
ret
je
push
sbb
mov
dec
add
push
movsb
out
and
call
fimuls
ret
add
minps
push
lahf
xchg
lret
out
cwtl
fcomi
es
cltd
ja
jns
or
aas
jmp
mov
dec
xchg
xchg
cwtl
jle
mov
insb
cli
push
pop
hlt
jg
push
sti
aaa
mov
sub
shlb
and
aad
inc
pop
decb
sbb
sub
and
adc
mov
add
lcall
and
or
in
xchg
ret
jl
fs
jae
sti
js
popf
mov
ja
jns
inc
mov
mov
dec
adcl
jns
push
fisttpll
int3
test
push
or
xorb
ss
lret
push
dec
test
pop
ja
jbe
orb
pusha
stc
scas
stc
aad
mov
or
mov
into
stos
leave
repnz
lcall
mov
dec
lods
adc
mov
rcl
ja
stos
dec
mov
and
repz
ret
mov
out
sub
sub
xchg
rclb
scas
pop
add
xor
pop
sub
lret
push
aad
sahf
xor
sbb
sbb
ret
les
aad
lcall
fldenv
inc
hlt
test
pushf
test
clc
andl
and
pop
sub
pop
push
jg
adc
decl
aas
or
and
ret
lds
mov
sub
in
shlb
xchg
dec
cmp
push
mov
std
or
pop
jbe
mov
or
lods
jp
test
or
dec
push
psrld
sti
sub
in
js
sub
rol
sbb
dec
lahf
mov
pop
mov
xchg
movsb
inc
mov
push
fsubrs
enter
stos
pushf
mov
iret
arpl
aas
push
or
xchg
ss
stc
test
mov
in
inc
imul
and
or
xor
pop
icebp
sbb
orl
mov
mov
in
enter
addl
or
imul
mov
lahf
xor
aam
jo
pop
cmp
lods
loope
mov
mov
mov
imull
jp
sbb
fstps
lea
mov
add
aaa
nop
jne
iret
inc
push
dec
push
pop
and
xchg
shl
lcall
lods
gs
cmp
loopne
jno
rcrl
jnp
xor
sub
sti
xor
sbb
sub
scas
int
sbb
cmpsb
adc
push
mov
mov
sub
fnstcw
jmp
add
rcll
jo
jle
pop
in
push
or
cmp
pop
cmp
inc
jae
imul
scas
insl
iret
addr16
mov
push
loopne
xchg
std
rcrb
xor
stc
rorl
frstor
push
inc
sbb
pushf
test
movsb
repnz
iret
and
xchg
push
dec
xchg
in
jecxz
push
iret
jae
add
bound
lret
sub
mov
sub
or
pop
enter
popf
jmp
fcoml
sub
mov
fldt
imul
in
push
dec
loopnew
mov
cmp
xor
pushf
inc
imul
or
push
fwait
push
lea
pop
xlat
fwait
pop
sbb
sub
bound
and
or
fists
inc
das
jge
or
sbb
adcl
pop
lods
ret
ds
outsb
sbb
sub
cwtl
push
adc
mov
add
xchg
lcall
jge
imull
sub
pop
push
or
pusha
xor
lret
aam
jnp
sbb
cmc
mov
orb
mov
inc
outsb
xchg
mov
dec
aam
fcomip
pop
xchg
pop
out
xor
aaa
pop
inc
imul
repz
jmp
xchg
jle
mov
cmp
adc
dec
lds
icebp
cmp
hlt
pop
and
jno
dec
fcoml
ljmp
fnstenv
icebp
jge
push
imul
test
push
jns
adc
bnd
jae
and
cmp
mov
lcall
hlt
icebp
es
sbb
lcall
hlt
xchg
push
mov
jg
lds
jge
dec
repnz
jno
mov
ret
jmp
cli
out
push
add
mov
adc
mov
mov
fildll
cs
adc
pop
fsts
xor
sbb
mov
stc
pop
mov
mov
lods
test
sbb
adcb
stos
ljmp
dec
push
add
xchg
int3
bound
hlt
mov
fadds
jbe
jbe
push
mov
scas
ret
mov
in
repz
jg
jne
test
jp
sti
xor
stos
push
and
jge
cmp
inc
xor
into
cmpsb
push
lahf
mov
cmp
add
pushl
shrb
xchg
or
test
insl
leave
pop
cmp
int
hlt
pop
fs
iret
sbb
rcll
imul
pop
addl
xor
scas
and
xor
fisubs
push
xlat
pop
jmp
and
mov
xorb
add
ret
jne
mulb
data16
xor
lcall
frstor
jge
inc
xorb
add
sbb
mov
addr16
sbb
pop
pop
or
pushl
mov
push
out
xor
xchg
and
inc
inc
lret
and
mov
pop
push
in
test
aad
data16
mov
sub
lret
sub
sbb
xchg
mov
mov
scas
movsl
sti
add
mov
or
and
dec
loop
pusha
mov
ret
dec
cmpsb
pusha
dec
push
sub
push
sbb
dec
jne
lcall
mov
mov
outsl
loope
push
and
arpl
sub
lock
pop
sbb
cmpsb
mov
cli
aas
xchg
movsb
shll
add
std
pop
dec
int3
add
push
cli
test
mov
adc
mov
sbb
push
filds
jae
mov
ja
dec
sbb
rorb
xlat
nop
ja
inc
xchg
pop
xchg
pop
das
xor
test
movsb
dec
out
leave
xchg
lret
das
push
in
inc
jp
cld
push
pop
pop
cmp
pop
into
fs
jl
sbb
mov
inc
addr16
arpl
xchg
shrl
adc
ret
fbld
dec
je
jl
push
pop
imul
sarl
sar
mov
sub
in
jb
or
lock
bound
in
xor
fimull
mov
xlat
push
out
cltd
or
sub
or
push
dec
inc
pushf
or
mov
jle
insl
dec
insb
add
pop
fisttps
mov
cmc
and
sbb
addb
xor
mov
repnz
sbb
dec
cmpsb
push
and
aaa
addr16
mov
push
inc
mov
stos
pop
dec
sbb
jae
dec
imul
adc
je
dec
movsb
jne
mov
ljmp
inc
mov
or
mov
cmp
stc
out
and
push
cmc
clc
push
lret
filds
imul
pushf
js
data16
jo
xchg
jl
sbb
pop
mov
xchg
pop
cwtl
in
ja
scas
outsb
lahf
push
lock
sub
outsb
and
in
jge
add
and
dec
mov
lahf
jno
and
jg
test
mov
movq
cmc
sub
nop
sub
sbb
add
add
mov
inc
pop
add
push
insb
aaa
xchg
push
negb
std
adc
and
or
pop
jecxz
dec
jle
cld
in
jmp
mov
xor
and
and
repnz
jp
imull
idiv
push
jns
ret
inc
xor
scas
sub
test
push
scas
nop
jne
push
shrb
push
push
movsl
neg
es
pop
lcall
pop
push
dec
incl
ret
mov
xlat
insl
sub
cmc
mov
das
cmp
sbb
mov
andb
shrl
popf
adc
addr16
sub
xchg
sub
pop
mov
les
icebp
xorb
sahf
jns
int3
sub
test
add
ficompl
push
lock
xchg
add
stos
jno
cwtd
js
jmp
adc
cltd
popf
add
push
cmpl
sbb
mov
xchg
lods
lahf
adc
sub
js
in
mul
int3
pushw
push
adc
in
lds
inc
outsl
repnz
daa
aad
and
mov
repnz
aaa
in
push
push
cmc
xchg
std
hlt
dec
jge
fdivr
ss
add
adc
fcmovnu
inc
pop
cltd
fs
pop
xchg
sub
sbbb
inc
xorb
divl
cld
jae
shll
fwait
mov
jp
call
xchg
cmpsl
push
add
lret
xor
pop
sti
xor
add
and
pop
das
aas
pop
cmp
inc
mov
inc
stos
ss
and
sldt
lds
lahf
adc
and
jne
sub
and
fnstcw
divb
inc
push
mov
rorb
repz
out
scas
js
jge
nop
call
mov
mov
sbb
ja
sbb
enter
popa
fmul
in
sub
sbb
sub
push
cli
ret
ds
mov
mov
mov
bound
jbe
pop
or
sarb
out
cmp
shll
aam
jo
fistl
shll
outsb
add
movd
xchg
dec
push
mov
lret
es
test
push
hlt
icebp
outsb
push
scas
movq
call
and
push
and
jecxz
int3
xchg
cwtl
push
in
mov
imul
lret
cmp
mov
sti
pop
imul
dec
inc
lods
rol
cmp
cmp
lret
push
jp
jae
xor
rorb
lret
fisttps
xchg
rcrb
fdivl
jge
jmp
cmp
push
adc
jmp
jnp
jb
ret
std
push
das
jle
push
jne
popa
adc
lods
inc
in
pop
mov
mov
or
lods
pop
pop
loop
mov
lock
and
outsl
lods
std
mov
rcr
iret
mov
fildll
xor
xorl
mov
mov
out
es
push
inc
xchg
nop
sub
push
sub
mov
insl
loop
dec
mov
sub
xchg
mov
jno
push
adc
sbb
pop
repz
outsb
push
or
lods
fdivrs
in
adc
mov
push
sti
outsb
jg
jl
nop
fcmovnb
jecxz
mov
jp
hlt
loopne
dec
lds
in
sbbl
cld
adc
popa
popf
loop
aaa
mov
sub
sti
mov
xchg
pop
xor
pop
leave
into
xor
sub
jnp
cld
xor
add
inc
in
or
sbb
push
ljmp
cmp
xor
pop
pop
pusha
pop
les
mov
out
mov
fnsave
shl
jb
bound
cmp
xchg
and
cwtl
lds
xor
sub
and
lock
movsb
lahf
or
push
adc
out
mov
xchg
cli
test
cmp
lods
jmp
or
xor
cmpsl
xorl
push
xor
test
xchg
xor
js
push
push
int
lock
adc
xchg
jo
jl
faddl
sub
inc
repnz
movsl
mov
ljmp
imul
cmp
hlt
and
bound
fdivrl
mov
cmpl
add
inc
subb
pop
dec
cmc
mov
jnp
shll
testl
mov
and
pop
movb
inc
pop
movsb
aad
lds
mov
xor
push
sar
fidivrs
cmp
xchg
orl
gs
mov
popf
add
jmp
ja
push
in
mov
leave
pushf
cmp
mul
cs
xchg
cld
movsl
xlat
call
pop
push
popa
fildll
adc
jl
mov
and
nop
cwtl
mov
mov
lods
mov
rcrl
sahf
iret
je
mov
imul
add
or
fsubrp
mov
ret
ss
mov
aam
addr16
pop
xor
jbe
adc
jle
rclb
out
pop
cmp
mov
or
aam
add
fs
loop
jae
cmp
add
dec
sbb
and
int
cmp
and
lret
test
pop
add
push
inc
sbb
loop
cmp
test
pop
scas
repnz
sub
mov
or
xchg
sub
sub
dec
add
loope
leave
push
and
movsl
ljmp
jp
mov
fwait
inc
icebp
pusha
das
cmpsb
pop
dec
push
mov
push
gs
mov
sbb
out
lds
fsts
hlt
sbb
push
stc
and
cmc
adc
aad
inc
int
push
push
rolb
adc
xchg
shll
scas
mov
shl
mov
popf
mov
sbb
jmp
sti
or
jns
pop
scas
data16
pop
iret
add
outsb
jge
mov
fiaddl
add
xor
hlt
test
imulb
xor
stc
cmp
pop
mov
jbe
outsb
lahf
dec
jns
out
pop
and
bnd
xchg
mov
inc
imul
sti
mov
mov
stos
mov
out
xor
or
fcomp
push
mov
and
xor
push
xor
arpl
adc
cmp
mov
dec
fs
xchg
popa
xchg
mov
mov
push
mov
subb
pop
xor
sub
sub
ret
movsb
adc
fiaddl
mov
cmp
in
mov
int
ror
mov
adc
in
pop
push
jecxz
aad
xor
ret
push
aaa
frstor
mov
cmp
xor
cmpsb
mov
aam
stos
or
mov
mov
insb
xlat
adc
insb
mov
das
lods
mov
inc
jle
inc
or
jbe
stos
aad
adc
jb
cmp
rcr
ret
adc
pop
popf
popa
cmp
dec
movsb
movsl
fistl
cld
or
bnd
rcr
repz
iret
in
insl
xchg
push
dec
mov
xor
idiv
inc
add
mov
cmp
mov
add
outsl
pop
mull
cltd
movsb
push
push
loop
add
in
fs
pop
test
faddp
negb
mov
mov
addb
lahf
jnp
imul
xchg
fsubrs
and
push
clc
pusha
mov
das
dec
or
adc
and
mov
jmp
pop
cmp
ficoms
rep
aaa
clc
aas
cltd
movsb
adc
sbb
ljmp
cmpb
mov
mov
imulb
sbb
cmp
insb
test
inc
push
mov
int
jp
ss
aas
in
sbb
pop
testl
lahf
push
xlat
dec
dec
rep
daa
rcrb
or
call
jle
loop
pop
lret
dec
cmp
fistpll
ret
rcll
int
test
mov
andps
std
sbb
in
lods
out
mov
scas
cmp
andb
xor
ret
cmp
jns
rclb
orl
scas
jmp
cmp
ret
inc
repnz
sub
icebp
and
sub
xorl
add
mov
cwtl
addr16
in
add
imul
cmp
cld
out
aam
push
insb
leave
and
xor
lock
inc
in
arpl
outsl
out
xchg
add
lock
repnz
and
jae
scas
loop
int
movsb
cmpsl
or
pop
shlb
movsl
inc
mov
mov
sti
movsb
in
loope
das
lods
mov
movsb
pop
test
pop
es
in
cmp
pop
and
hlt
push
dec
jmp
test
lret
fwait
mov
push
fldt
out
inc
inc
pushl
and
mov
sbbl
fwait
lcall
shrb
cmpsb
das
cmc
or
cmp
int3
mov
mov
pushl
xor
add
nop
lcall
les
xlat
repnz
fldenv
xchg
int
gs
std
js
sub
xchg
jno
xor
cwtl
clc
aas
repnz
and
ret
fsubrs
adc
loopne
or
movsb
xor
add
inc
into
outsl
adc
ljmp
jno
add
cmpsl
loopne
add
xchg
push
ret
repz
or
mov
push
jge
and
fwait
xchg
loope
and
pushf
jecxz
jmp
xor
movsl
pop
and
lahf
pop
aad
inc
bound
jb
adc
pop
adcb
dec
jle
xchg
and
mov
daa
out
sbb
daa
iret
add
jo
bndstx
dec
fnsave
clc
addr16
mov
adc
or
sti
sbb
inc
movd
inc
repnz
sbb
int3
enter
and
insl
sub
mov
in
ret
pop
in
or
mov
jg
add
outsl
push
sbb
lcall
js
jne
mov
jbe
lahf
shrb
sbb
sti
jl
push
loope
pop
jge,pt
and
ret
pop
xchg
fistpll
fldcw
hlt
ds
xor
cmp
jne
mov
gs
addr16
lret
stc
add
xchg
lea
mov
mov
dec
fstpl
das
push
adc
xchg
out
xor
jbe
adc
sub
addb
mov
aaa
ret
push
stos
out
pop
addr16
sub
sbbb
lcall
push
dec
cmp
push
or
xor
ds
lret
pop
in
push
mov
frstor
sbb
xchg
pop
call
lock
fidivrs
dec
test
mov
sub
xor
push
jns
pop
cmp
stos
cmp
js
repnz
sbb
push
stos
sub
push
out
sbb
jg
jns
inc
out
faddp
ljmp
test
lods
iret
jge
sbb
cmpsl
cwtl
xchg
mov
popa
jecxz
popa
or
std
std
sti
pop
inc
idivl
inc
fsts
mov
jns
popl
mov
cli
icebp
sbbb
or
adcb
sbb
mov
arpl
dec
rcr
mov
sub
xlat
ror
xor
fbld
xchg
test
pop
scas
mov
and
repz
shll
sbb
inc
sub
jge
imul
cmc
je
or
sbb
push
jnp
imul
inc
arpl
lods
je
xchg
adc
and
jbe
add
in
mov
pop
lods
scas
ret
dec
repz
xchg
std
enter
mov
mov
dec
shrl
push
repz
mov
aas
test
nop
xor
push
test
pop
mov
mov
repnz
mov
cli
in
xor
mov
or
testl
ljmp
addl
cs
in
aaa
bound
pop
repnz
pop
dec
mov
fstpt
mov
pop
push
loope
sub
mov
inc
adc
push
jae
fmuls
push
repz
out
test
gs
or
dec
inc
sub
push
push
cmp
int3
dec
adc
jns
jle
ja
inc
movsb
outsb
call
mov
pop
or
icebp
cmpsl
lock
shrb
es
and
jle
jbe
sub
push
mov
jmp
cmp
sahf
jb
idiv
add
mov
lods
incl
jecxz
call
mov
int
jns
dec
out
xor
push
push
dec
cmp
mov
cs
pop
lods
xchg
pop
inc
sbb
rclb
rorl
sub
push
test
sub
dec
xchg
inc
pop
hlt
xchg
pusha
jno
xchg
push
aas
jge
mov
jmp
mov
or
in
sub
jg
jbe
pop
les
imul
pop
or
call
xchg
push
bound
daa
xor
jmp
pop
imul
mov
je
push
add
push
pop
icebp
mov
and
jmp
cmp
xor
jecxz
sahf
add
bound
mov
adc
dec
xchg
iret
adc
mulb
add
lret
fld
push
jg
push
dec
cmp
adc
popa
in
ret
sbb
dec
shlb
push
push
add
aas
cli
out
pop
xchg
or
icebp
popa
jae
out
arpl
cmp
sub
imull
add
dec
lcall
dec
or
cmp
imulb
sub
addl
repz
xchg
add
pop
bound
or
shlb
inc
fst
or
sub
sub
loope
pop
lods
dec
call
sub
mov
sbb
mov
push
mov
mov
mov
jnp
adc
gs
push
push
repz
out
push
adc
bound
aaa
fs
popa
insl
and
shll
jecxz
adc
pop
mov
scas
xor
inc
fidivrl
repz
test
inc
pop
mov
xchg
sub
aas
arpl
arpl
lret
mov
jo
or
and
sti
push
out
mov
mov
mov
cmp
lods
xlat
add
cmpsb
call
ljmp
loopne
icebp
mov
into
iret
stc
cs
jg
clc
in
push
jae
push
cltd
push
in
int
adcb
lock
mull
jg
jecxz
in
lret
push
mov
pop
es
push
inc
sbb
xchg
jb
and
stos
push
sbb
jb
imul
adc
bound
inc
xchg
std
cs
push
push
add
movsl
ret
adc
leave
insl
add
mov
sahf
inc
xchg
push
and
sbb
inc
out
mov
pop
push
or
jno
pop
and
jnp
and
loopne
mov
rorb
mov
js
mov
or
mov
xlat
push
xchg
xor
push
in
fstp
pop
repz
sbb
dec
mov
cmpsl
icebp
sarl
js
cmpsl
mov
stc
mov
xchg
enter
cmpsl
in
cwtl
popa
pushf
in
dec
dec
addr16
mov
std
xchg
mov
iret
jne
in
addl
repnz
ja
pop
push
pop
fnsave
ljmp
pop
cmc
or
pushf
test
and
das
mov
incl
lods
inc
lods
shl
arpl
mov
mov
popa
hlt
imul
ss
fcmovnbe
out
out
or
pop
dec
push
fdivp
negl
aad
jbe
fsubrl
int
addr16
sti
bound
icebp
mov
adc
add
jmp
data16
pcmpgtw
mov
popa
push
xchg
mov
dec
mov
lret
pop
add
popf
xchg
or
fnsetpm(287
jbe
jns
mov
pop
push
test
icebp
je
xor
subl
xor
dec
adcl
inc
int
push
lcall
mov
mov
adc
jecxz
fcoml
sub
hlt
jno
dec
or
loopne
add
pop
jl
or
inc
jns
ret
lahf
lds
cmpsb
cld
arpl
nop
nop
movl
sub
aam
into
fs
inc
test
inc
popf
mov
bound
jns
push
or
cli
mov
sub
aaa
sub
test
and
dec
sbb
sbb
cld
xor
or
inc
push
mov
iret
cmpsb
xchg
pop
sub
jl
xchg
add
push
arpl
idivb
mov
decb
lahf
mov
es
sub
in
xor
or
scas
lcall
pushf
jmp
loope
mov
mov
adc
fnstsw
clc
sbbl
test
mov
shll
cli
outsb
and
sub
cmp
cmp
rclb
jecxz
sub
call
andl
jl
mov
inc
push
sbb
cmp
cmp
sub
xor
sarl
into
adc
pop
mov
pop
sbb
push
lahf
add
fcoml
outsl
es
ret
and
hlt
in
fisubrs
and
in
inc
ret
mov
mov
mov
in
enter
subl
lret
mov
icebp
inc
cmp
arpl
inc
incl
aas
ds
xchg
fwait
xor
lock
in
mov
push
pop
cwtl
jg
inc
lods
push
adc
jl
dec
cmp
mov
idivl
test
lret
push
cmp
into
sbb
lods
mov
sub
loop
shll
push
sarl
je
nop
xchg
or
imul
fbstp
dec
jno
and
dec
mov
sub
adc
xchg
scas
aaa
icebp
cmp
xor
enter
pop
mov
ficompl
xchg
icebp
int
mov
daa
mov
push
cmp
sbb
sbb
adc
lods
vpmaxub
ja
pop
cmpb
ror
cs
xlat
ret
and
ja
push
sbb
xlat
mov
add
mov
repnz
xor
sub
bound
sbb
pusha
mov
test
push
mov
mov
and
xor
jge
fildl
adc
cltd
ljmp
mov
pop
cltd
cmp
mov
sbb
pop
sub
xchg
add
aaa
les
push
pop
out
xor
inc
or
mov
pusha
add
inc
or
jnp
faddl
sahf
aas
xchg
iret
sbb
cmp
mov
jge
loop
sub
rcll
es
repz
test
and
push
sti
insb
outsb
jmp
push
movsl
or
sub
jp
adc
int3
aas
sbb
and
iret
lods
dec
jo
hlt
idivl
cmp
xor
inc
imul
movsb
inc
pusha
dec
cmp
repnz
push
jb
cmp
lret
cmpsl
mov
push
hlt
push
cli
sbb
jp
nop
mov
test
jno
xchg
inc
rcrb
mov
bound
andl
pushf
dec
dec
and
adc
pop
xchg
xor
push
and
xchg
push
cmp
xor
adc
popa
push
mov
or
mov
xor
or
mov
sbb
adcl
inc
into
shll
mov
fnstsw
outsl
ljmp
or
jo
addl
fwait
xor
sub
pusha
sarb
pushf
mov
fidivl
test
jg
pop
sub
inc
mov
adc
xchg
push
adc
xorl
jmp
hlt
adc
out
mov
ja
inc
xchg
inc
loop
adc
test
test
bound
idiv
mov
cwtl
test
loop
sbb
sti
pop
sbb
mov
scas
ficomps
stc
mov
ljmp
xchg
shl
daa
mov
xor
dec
pop
clc
ss
jne
in
push
mov
out
and
xlat
inc
xorl
dec
nop
cmp
lret
incl
mov
lds
scas
inc
fsts
outsb
xlat
xchg
mov
mov
ret
test
gs
ja
push
sbb
cmp
vunpckhps
ljmp
push
inc
aad
pop
or
sub
enter
imulb
mov
jno
call
scas
sbb
xor
jns
mov
imul
lds
scas
cmp
cmp
cmp
scas
lret
scas
sub
xchg
ret
aaa
xchg
outsb
adc
icebp
fildll
cmpsl
adc
imul
insl
hlt
outsb
xchg
cmp
imull
cli
sti
jle
pop
xchg
xchg
mov
jge
mov
mov
into
and
je
sub
cmc
or
jb
mov
cwtl
cld
scas
lahf
dec
push
arpl
pop
add
or
xor
add
pushf
cmc
subl
fbld
mov
push
cmp
add
add
outsb
add
xor
notb
xor
jl
xlat
lret
jg
or
xchg
int3
dec
ljmp
add
movsl
icebp
mov
mov
adc
rolb
mov
lods
in
sarl
test
mov
mov
fdivrl
or
dec
dec
mov
sbb
enter
iret
xchg
adc
or
mov
add
add
arpl
and
lcall
orb
js
jbe
inc
xchg
mov
push
mov
cmp
sbb
push
pusha
rol
fwait
imul
incl
fisubrs
divb
test
scas
push
div
sbb
mov
sub
stos
push
cli
cmpsl
les
int
or
sbb
push
lds
mov
lock
shrl
add
into
inc
cmp
xchg
mov
sub
mov
xchg
cmp
adc
call
or
sub
inc
mov
mov
add
ds
out
pop
jge
pop
outsb
mov
in
outsb
lea
mov
fisubrl
sub
or
pop
xchg
pop
push
les
call
pop
ret
test
jno
ds
xchg
repz
sbb
push
jle
fucom
sbb
or
cmp
sub
push
sub
fstpt
sbb
xchg
and
jecxz
call
fcos
jg
adc
sbb
outsl
dec
and
xor
or
hlt
stos
cwtl
fwait
lods
xor
and
pop
and
pop
jno
mov
loopne
add
into
push
aas
inc
push
sahf
fwait
jle
int
filds
jge
jno
or
ljmp
sub
adc
sub
repz
and
mov
xor
and
lahf
fsub
adc
fcmovu
pop
pop
fwait
or
out
mov
and
sub
ljmp
mov
push
insl
leave
iret
arpl
mov
lret
fdivr
jg
repnz
cmp
lock
movsl
pop
push
jb
test
incb
test
and
scas
dec
flds
loop
jmp
inc
dec
das
cs
pop
and
out
sahf
push
push
stos
pop
cs
mov
cld
pop
sub
add
mov
jecxz
dec
xor
jns
jne
push
sbb
fstpl
mov
inc
movsl
inc
inc
and
mov
shll
mov
roll
stos
test
imul
popf
fcmovne
rcr
push
pop
dec
pop
xor
movsl
adc
mov
mov
sbb
mov
outsl
mov
lret
sti
jl
mov
xchg
and
out
mov
mov
adc
push
jmp
sbb
ret
loop
xchg
mov
inc
stc
push
xchg
imul
add
popf
andl
je
jne
or
iret
lcall
int3
cmp
jno
popa
addr16
fwait
or
imul
dec
mov
mov
pusha
cmp
mov
test
bound
push
xor
lods
inc
pushf
xchg
lock
loope
rorb
inc
xchg
and
sub
dec
fcmovb
sub
enter
mov
fimull
cwtl
push
in
div
movsl
pop
sbbb
pop
les
aam
cli
cs
rcr
lcall
push
cmpsb
sub
stc
or
jne
popf
dec
es
xor
cld
push
push
mov
dec
adc
iret
jmp
mov
jecxz
sbb
jecxz
cmp
sti
insl
insb
add
cmpl
add
ja
sub
jge
pop
or
cmp
cmp
jge
roll
inc
les
add
xor
stc
jno
jns
in
mov
push
imul
inc
push
cmpsl
dec
jg
shll
test
stc
cmp
jle
mov
insb
scas
dec
loope
xor
push
mov
js
movsb
popf
mov
add
push
fwait
test
and
ljmp
xor
js
mov
sbb
popf
cmp
xor
jp
xor
mov
adc
ds
sbb
insb
outsl
cmp
je
das
jecxz
or
pushf
mov
adc
sbb
push
cwtl
mov
dec
xchg
mov
add
ret
popl
std
xchg
inc
cwtl
pop
push
jmp
xchg
adc
push
mov
stos
cmp
or
sub
cmpl
test
lds
sub
sahf
mov
popa
adc
jb
out
shlb
mov
cmp
push
arpl
ljmp
loop
xchg
pop
or
dec
les
fmull
sbbb
test
bound
flds
rorb
pop
shll
push
cmpb
add
in
aad
sti
xor
ds
lock
cmpsb
bnd
sub
rorl
adc
popf
sbb
lock
pop
jmp
inc
shlb
cmpsb
loopne
and
xor
out
xchg
and
in
rcll
mov
sbb
ret
addr16
dec
xchg
gs
sub
and
push
mov
loope
out
ja
and
lock
mov
rcrl
repz
sahf
and
fadds
bound
sub
jg
xchg
mov
adc
outsl
cld
inc
into
shl
pop
sub
add
inc
repnz
adc
cmp
das
cs
jae
xchg
mov
movsb
sbb
js
xchg
fcomps
int
test
jae
cmpsb
adcb
ret
lcall
test
nop
inc
out
jl
aam
fdivl
out
lea
dec
jo
sbbb
pop
mov
lcall
shr
mov
arpl
push
fmul
or
outsb
mov
dec
mov
mov
xor
out
mov
in
into
xor
fsubl
out
or
add
fidivrs
mov
mov
push
lcall
repz
fucomp
call
cmp
jbe
lret
enter
stos
sub
leave
shl
adc
xor
lret
popa
lods
pushf
outsb
push
and
testl
jmp
xchg
scas
lods
flds
rcll
insl
mov
fstpl
adc
notb
rcrb
aaa
push
push
iret
push
std
mov
inc
xor
xor
mov
xor
test
cmpsl
xorb
mov
push
mov
mov
mov
jae
mov
jmp
inc
scas
int3
in
in
and
mov
lret
push
mov
loop
fsubrl
pop
mov
ret
fdivrp
jge
xchg
dec
push
movsl
mov
lock
dec
pop
sahf
mov
out
ret
icebp
jne
add
nop
scas
sub
mov
mov
clc
mov
sub
push
jmp
shlb
xor
hlt
ja
lahf
mov
or
lods
jg
push
addr16
sbb
inc
lahf
movsl
lds
cwtl
xor
test
and
adc
movsl
xor
int3
cli
jg
pop
outsl
xor
push
rol
pushf
xchg
sub
sub
xor
repnz
cmp
sbb
and
imul
data16
pop
into
enter
ret
ret
insb
cmpsb
arpl
adc
popf
xor
in
sbb
pop
test
mov
loopne
pop
or
sahf
cld
xor
dec
mov
cmpl
fwait
sub
dec
cwtl
mov
jmp
push
dec
xlat
inc
jae
js
cmp
pop
jl
mov
cmpsl
xchg
pusha
ja
xor
dec
and
sbb
jne
pop
mov
mulb
mov
sti
and
loop
aad
test
insl
pop
mov
mov
cmp
mov
dec
mov
mov
loop
loop
ss
imul
cmpsb
sbb
mov
cmp
pop
call
mov
or
popa
fisttps
enter
loopne
inc
and
sub
pop
shlb
lret
mov
sbb
fistpl
clc
mov
jmp
in
rcrb
cmp
fs
fisttpl
mov
sti
adc
xor
cmp
jo
xchg
mov
cmp
das
xchg
subb
add
roll
lds
mov
pop
loop
cmp
cmp
icebp
pushf
push
inc
dec
rcrl
xchg
pop
xchg
out
add
nop
mov
sbb
cmp
cmpsb
mov
sbb
test
loop
cmc
lds
cmpsb
fmul
jecxz
outsb
out
cmpsl
inc
adc
orb
xchg
aam
int
jl
and
call
arpl
int3
mov
loope
dec
sub
xchg
out
push
sbb
mov
movsb
sbb
iret
jns
mov
aas
outsb
dec
lea
nop
mov
aam
mov
pop
xadd
mov
movsl
and
dec
not
sbb
jp
int3
xchg
jle
mov
jne
inc
push
inc
mov
pushf
inc
leave
xor
adc
fistpl
dec
mov
push
xor
aad
cmp
mov
jns
aad
cmc
mov
push
clc
adc
arpl
in
les
and
lret
aad
les
sbb
int3
orb
nop
mov
popf
call
dec
loope
cwtl
imul
or
mov
dec
mov
jmp
cld
loopne
cld
push
push
sub
lahf
fidivrs
and
pop
jbe
push
stc
lea
mov
mov
iret
cmpb
xchg
test
test
cmp
pop
clc
fnstsw
pop
addl
or
sub
outsb
mov
cmc
xchg
dec
add
mov
js
out
call
add
jge
inc
dec
dec
or
pop
sub
inc
nop
mov
push
das
xchg
fcoml
jp
shrb
and
lods
and
sub
fwait
jp
std
adc
dec
pop
xchg
movb
dec
inc
outsl
pop
adc
cld
es
sbb
jo
pusha
shl
mov
jae
pop
sub
cmp
nop
out
hlt
dec
ficoms
test
inc
cmp
sbb
pushf
jmp
xchg
outsl
xor
repnz
mov
xor
lods
adc
stc
and
push
xchg
sub
cs
adc
adc
lods
inc
gs
gs
roll
loope
xor
sub
xor
fcmovnbe
cmpsl
cli
dec
out
js
jecxz
jno,pt
orb
add
ja
arpl
or
test
out
jecxz
mov
dec
bound
pushf
push
xor
inc
rcll
push
adc
mov
pop
subb
sbb
push
addr16
aam
mov
jne
cmp
xlat
nop
iret
jecxz
loopne
repnz
lcall
mov
and
push
std
scas
cmp
xchg
push
add
xor
addr16
iret
lock
shlb
inc
or
cmc
mov
and
dec
loopne
mov
sbbb
popf
in
push
jb
imul
mov
mov
and
adcb
sbb
js
mov
js
jecxz
jle
lea
fistpll
xchg
adcl
mov
fxch
mov
push
push
mov
xchg
ss
xchg
shlb
mov
mov
and
sub
aas
fistl
jns
mov
fldcw
cmovne
lods
aad
cwtl
jns
pop
insl
xor
in
xor
test
int3
mov
jno
clc
mov
sub
push
xor
aam
fwait
es
add
adc
lret
mov
fisubs
aam
sub
cs
cmp
lods
vpmacssdqh
ret
pop
push
lret
aas
mov
repnz
push
pop
jb
rcr
in
xchg
jle
jmp
sub
push
movsb
in
orb
lea
cs
inc
fnstcw
mov
cmpsb
adc
sahf
sub
jle
dec
pusha
push
xchg
iret
imul
popw
sub
mov
lock
pop
mov
inc
push
pop
mov
xchg
adc
push
xbegin
dec
dec
xchg
icebp
or
loope
cmp
mov
push
push
jnp
inc
lcall
jne
ret
mov
rcll
jb
lods
shlb
adc
decl
xchg
or
xchg
fsubrl
mov
aad
push
xchg
fildll
add
push
into
mov
mov
stc
inc
movsb
test
cmp
stc
cs
cli
mov
icebp
mov
push
stc
ret
ret
add
lock
neg
jmp
gs
aam
lea
cmp
push
pushf
inc
sub
mov
nop
pushf
lcall
sbb
pop
jo
xor
jmp
add
inc
xchg
leave
inc
jne
fiaddl
sub
fdivs
pop
jo
js
int3
inc
cmp
js
aaa
add
cmp
aam
loop
std
mov
sbb
vmovdqu
jecxz
dec
push
sub
leave
popf
lea
xor
fsubrp
loope
outsl
mov
inc
and
mov
jle
mov
sbb
pop
dec
adc
or
out
xchg
ret
out
cmp
flds
sbb
fldl
xchg
mov
rol
out
clc
dec
cmp
pusha
mov
cmp
aaa
mov
xor
cld
inc
fidivl
jae
xorb
xor
push
mov
inc
daa
mov
js
xchg
mov
or
cmc
lock
xor
repz
aad
std
roll
push
pusha
daa
mov
sbb
popf
enter
mov
or
lods
dec
xchg
iret
xor
adc
in
xchg
push
stos
mov
call
in
cmp
mov
repnz
mov
and
rcll
cmpsl
pop
daa
sub
loopne
nop
adc
ds
adc
sahf
add
adc
jns
inc
les
jmp
fsubr
push
pop
stos
cmp
cmp
and
rcrl
je
lds
push
xchg
xor
push
inc
fmull
jg
jge
xchg
or
mov
adc
fistpll
rcrl
adc
cmp
jmp
push
outsl
push
ljmp
lock
mov
adc
shll
inc
jge
clc
outsb
inc
addr16
jmp
sahf
adc
jl
rorb
or
inc
test
cmp
or
pop
mov
and
adc
ss
or
out
les
scas
pop
ljmp
sbb
test
out
pop
loop
jno
lret
push
push
inc
popa
pop
sbb
add
xor
imul
repz
lret
popf
add
sub
das
pop
add
aad
jp
shl
or
xchg
mov
cmpsl
mov
mov
in
and
testb
adc
add
into
ds
call
iret
lock
jo
in
cld
jne
shl
repnz
jns
pop
loop
iret
mov
xchg
mov
repz
mov
loope
push
bound
arpl
xor
sub
xchg
jno
fldl2e
sahf
add
addr16
lahf
mov
xor
sbb
push
push
jae
loop
adc
gs
sbb
std
dec
jb
and
dec
stc
aad
jle
jmp
mov
leave
in
lret
jmp
stos
fs
xchg
adc
mov
and
and
add
mov
sub
mov
repnz
addr16
je
or
mov
ja
jno
jne
aad
xchg
arpl
adc
aaa
movsl
push
aam
shrb
adc
lods
jg
test
loopne
inc
lods
xchg
and
mov
adc
popa
rcrl
ret
sarl
ja
fisttpl
mov
mov
rorl
xchg
sarb
cmpsb
cltd
mov
insb
ja
ret
mov
call
lcall
pop
add
adc
int3
in
arpl
repnz
dec
jg
adc
movsl
push
ja
jo
std
gs
inc
push
lock
jne
mov
jae
jo
mov
adc
outsl
cmpl
sub
outsb
push
push
cmp
stos
movsl
mov
stos
mov
pop
mov
push
fstpt
mov
mov
cmp
pop
jb
cltd
or
cmpb
scas
in
cmp
mov
clc
and
ret
or
add
cld
pusha
jecxz
scas
jg
outsb
out
movsb
ljmp
shll
aas
inc
xlat
mov
add
sbb
int
dec
into
jge
or
shlb
push
add
pop
cwtl
jbe
movsl
pop
push
stos
int3
insb
out
and
outsl
cmc
dec
fnstcw
lea
fcomps
jnp
imul
ret
pop
xchg
movsl
and
fisubs
adcl
mov
sub
in
push
and
mov
mov
xor
push
sub
mov
movsb
stos
jb
sub
lcall
icebp
dec
mov
or
xchg
ds
lock
jecxz
jle
add
repz
mov
push
cmp
sti
pop
ret
cmc
sub
dec
lds
das
mov
inc
sarb
sub
sub
xor
jns
in
inc
movsl
sub
minps
out
or
rcr
andl
js
cmp
dec
push
nop
sub
sbb
mov
stos
sbb
je
test
sahf
outsl
or
add
xor
cmp
fcoms
sar
push
lds
test
xchg
pop
fistpl
mov
sarl
or
test
ret
test
mov
inc
xor
out
enter
xchg
in
mov
jne
lock
movsl
sub
xorb
dec
mov
adc
push
int
repnz
lret
sub
je
xorb
dec
jmp
sti
rcll
imul
test
dec
cltd
sub
std
das
test
adc
pop
jle
sub
inc
data16
sbb
mov
jo
jmp
xchg
xchg
sub
mov
pop
test
incl
loop
mov
inc
cmp
out
adc
mov
mov
jb
addr16
adc
push
lahf
inc
cmpsb
hlt
outsb
fwait
or
fiaddl
je
ret
pop
inc
fucompp
add
push
xchg
cmpsl
ja
in
pop
inc
push
push
shrb
das
mov
adc
test
mov
xor
fs
test
mov
sbb
mov
shll
xchg
lods
adc
into
cmc
loopne
shl
add
mov
rol
repz
imul
aam
rcrb
jg
test
pushl
add
fbstp
mov
out
jne
std
and
mov
jne
std
pop
testb
sbb
or
mov
sub
aas
and
xchg
test
lahf
push
jmp
int
cwtl
je
das
fisubrl
aam
adc
les
fwait
lcall
dec
test
lock
call
jbe
jp
scas
pop
jle
add
sbb
cld
daa
lcall
stc
fmul
shl
rcll
xor
cld
popf
mov
outsb
xchg
jo
imul
xchg
pushf
rcrb
or
mov
dec
inc
dec
cmp
lods
mov
dec
push
jp
sbb
scas
out
cmc
lret
or
mov
pop
les
cmp
ret
dec
sub
pop
adc
jae
mov
push
imul
or
aaa
hlt
push
insb
popa
outsb
dec
orb
shll
loope
mov
fisubrs
and
dec
push
loop
js
xor
mov
mov
inc
jmp
sbbl
dec
cltd
jp
adc
sub
sbb
lods
fnstcw
jmp
cmp
xchg
int
jmp
pop
sahf
mov
sahf
test
cltd
arpl
jp
in
sahf
fsubrs
jae
iret
xchg
sbb
fbld
jno
out
add
and
cmp
sbb
mov
add
push
mov
test
dec
cld
int3
cmp
test
mov
aam
out
mov
mov
rorb
addr16
jno
add
and
mov
add
inc
sbb
movsb
sub
scas
xlat
pushf
sub
notb
test
push
out
shrb
jae
or
cwtl
ss
ljmp
lock
jecxz
mov
pop
pop
cmp
adc
mov
jmp
pop
mov
xchg
pop
mov
aad
sbb
cltd
ljmp
pop
repnz
mov
jne
push
pushf
jecxz
call
mov
dec
hlt
hlt
mov
jp
lret
cmp
outsb
es
lds
jl
sarl
xchg
adc
add
imul
and
es
stos
pop
pop
dec
jbe
cmpsl
pop
fstpl
sbb
jno
lds
lea
pop
mov
or
outsb
test
xchg
pusha
push
in
jbe
push
jecxz
shrb
aaa
inc
popa
or
into
jae
jecxz
cmpsl
stos
or
mov
out
push
insl
incb
leave
cmp
jge
cld
popf
hlt
scas
sub
sarl
sub
aas
out
outsb
jle
xchg
cmp
jle
fcoml
dec
adc
sbb
or
mov
dec
fnsave
xchg
and
lret
xchg
daa
jp
arpl
push
cwtl
icebp
mov
int
pop
testl
nop
test
push
mov
cmp
jmp
jnp
xchg
jg
outsb
push
cmp
pop
dec
adc
sbb
shlb
sbb
out
or
out
mov
mov
imul
je
cmp
xchg
push
dec
pusha
sub
adc
xor
pop
fcomps
leave
dec
in
loop
lret
jb
addr16
mov
sbb
push
sahf
loop
pop
dec
xchg
popf
sbb
dec
and
das
jmp
call
sub
shlb
cwtl
loopne
rcrl
adc
jns
mov
int
out
pop
lret
sub
sbb
sbb
jae
addb
jne
push
lcall
sbb
clc
add
mov
andb
lods
test
bound
movzbl
add
mov
push
std
ljmp
and
movsl
nop
addr16
sub
pop
imul
xor
mov
negl
jmp
or
xchg
inc
dec
or
mov
ficomps
and
inc
cmp
adc
mov
shrl
outsl
or
mov
sub
mov
stos
sub
aam
lods
or
jmp
in
xchg
ds
jmp
xchg
das
mov
movsb
loop
xchg
jl
mov
lock
cmp
les
mov
cli
jg
imul
inc
cmpsb
mov
lret
add
test
sub
test
pop
push
outsl
cmp
cmp
rcr
into
movsl
bound
adc
add
add
mov
test
rorl
jbe
pandn
ds
and
and
inc
lods
mov
rolb
xrstors
nop
pushf
enter
or
sub
enter
jbe
daa
pop
cmp
stos
fistl
stos
icebp
and
fdivrl
cs
sub
cld
lahf
sbb
je
xchg
lds
jg
sbb
lret
sbb
inc
or
sub
pushl
fdiv
add
andb
les
and
adc
pop
sbb
enter
mov
pop
lret
add
xor
loop
inc
sti
rcll
dec
out
and
mov
xor
push
add
adc
mov
mov
inc
lock
jae
aam
mov
mov
sahf
sub
mov
cmpsl
data16
cmp
movsb
sbb
jp
dec
and
ds
xlat
scas
out
sub
sub
mov
adc
mov
fcmovu
sub
pop
mov
sub
rol
fidivl
xchg
iret
mov
fcoml
inc
ss
cmp
mov
push
xchg
push
sti
pushf
jl
mul
outsl
push
mov
mov
cltd
add
lea
test
xor
mov
or
xlat
sbb
adc
cmp
cmpl
mov
xor
test
pop
pushl
pop
xor
jle
xchg
in
fnsave
push
and
test
loop
sbbl
addr16
dec
scas
jno
cmp
push
cmp
or
inc
jmp
ret
xchg
pop
mov
pop
pushf
notl
pusha
sub
stc
adc
sub
dec
push
mov
lahf
mov
push
out
cmpsl
jbe
and
adc
cmp
sti
push
or
dec
xor
test
int
ret
fadds
add
and
jb
mov
push
dec
stos
dec
in
out
xchg
inc
in
mov
mov
dec
clc
sbb
push
lahf
jns
inc
inc
test
mov
sahf
adc
xor
push
pop
or
push
int
adc
jo
insl
sbb
gs
stos
push
dec
fdivp
xorb
jg
rorb
fidivrl
sbb
lret
mov
sbb
testl
mov
loopne
dec
cld
mov
fwait
lcall
cmp
in
pushf
xchg
or
mov
enter
out
cli
push
ds
nop
jmp
sbb
nop
int
ljmp
into
decl
sbb
je
pop
gs
bound
push
jne
int3
lds
and
gs
movsl
orb
enter
cltd
pop
lds
pusha
stc
les
cmp
xchg
cmp
fwait
mov
xchg
imul
mov
pop
jg
mov
inc
lea
pusha
shll
jae
xor
ret
sub
inc
xchg
add
daa
add
in
mov
mov
scas
sub
xor
inc
add
aam
mov
xchg
dec
cmp
pop
addr16
test
arpl
cli
scas
inc
xchg
out
test
push
stc
fistpl
mov
int
jle
mov
loop
test
adc
jnp
mov
scas
xor
add
adc
ret
mov
mov
in
ds
pop
int
xchg
mov
orb
sub
stos
popf
mov
pop
mov
push
inc
sbb
push
mov
jmp
xor
pushf
xchg
das
arpl
negl
jae
loope
sub
mov
dec
or
xchg
dec
cmp
push
mov
aaa
and
pop
xor
and
sbb
mov
jns
pop
lahf
inc
inc
test
cwtl
and
dec
loopne
inc
cwtl
jp
popa
scas
mov
aad
dec
rclb
nop
mov
add
shlb
in
push
fimull
mov
iret
in
into
aas
lea
stos
sahf
insl
sahf
sbb
mov
sahf
jmp
daa
enter
adc
jp
movsl
out
repz
cltd
push
jo
or
xchg
cmp
mov
popa
cmpsb
sbbb
lds
lahf
repnz
sub
lret
mov
je
and
adc
fs
sub
or
xchg
insb
outsl
out
int3
mov
xor
ret
fsubrl
dec
in
lret
and
mov
cmp
orl
sbb
mov
adc
es
push
fs
jl
out
bound
or
push
cmpsb
push
pusha
push
cmp
pop
fstps
pop
sbb
imul
or
xlat
sub
aaa
push
pop
or
dec
cmp
in
pop
cmp
xlat
or
je
repz
mov
fisttpll
xlat
xor
popa
jg
loop
inc
pop
jo
jb
lods
and
pop
dec
inc
cmp
stos
xchg
jo
dec
cmp
movsl
fs
in
cmp
out
mov
pop
or
xchg
mov
jnp
xor
jle
jle
push
aas
sub
mov
mov
bound
sti
icebp
stc
mov
sub
mov
ss
xchg
lahf
jbe
or
sbb
sub
xchg
cmp
loopne
mov
aas
xor
jne
add
stos
pop
xchg
insb
jne
mov
es
out
add
jo
fdivl
insl
scas
cli
ja
cmp
xchg
dec
cltd
les
sub
mov
mov
sbb
or
cmpsl
push
jb
imul
xor
shll
add
lods
test
jae
negb
loopne
lret
fldt
sub
into
popa
ds
inc
pusha
fsubp
pop
mov
dec
aam
mov
sbb
popf
test
or
add
adc
pop
fsubrl
mov
mov
push
test
dec
das
lock
push
test
jae
movb
ret
jl
cmp
lds
pushl
pop
xlat
sbb
std
mov
xchg
xchg
into
popa
call
in
jle
mov
ret
sub
test
imul
pop
push
inc
adc
pop
testl
movb
ss
push
ficompl
test
out
out
or
push
les
sub
xlat
mov
fcmovu
mov
and
jg
sbb
or
icebp
jae
and
sbbl
push
jnp
jbe
and
push
jmp
or
inc
sbb
cmp
push
roll
in
cld
mov
sbb
or
imul
push
push
add
hlt
into
cmp
cwtl
data16
rclb
sub
mov
in
into
fstpl
std
into
aaa
adc
ret
pop
push
xchg
inc
arpl
sarb
aas
jno
dec
scas
xchg
mov
cli
sahf
mov
xlat
enter
aad
rolb
pop
sub
add
sub
cltd
scas
insl
je
enter
xchg
dec
cmc
or
cld
cs
lock
test
ljmp
add
fstpt
mov
mov
fs
jne
mov
jge
sbb
lcall
rorb
mov
xchg
shll
in
jge
or
in
sbb
add
xor
movb
loope
fcoml
jo
push
mov
hlt
add
fisubrs
rclb
or
aad
cmp
mov
ds
in
sarl
xchg
gs
inc
mov
pop
dec
dec
push
cmc
push
das
gs
stos
das
cmc
loop
ja
vmulpd
in
jmp
jle
cmc
adc
pop
or
ja
and
pop
ret
in
mov
popf
mov
adc
push
sub
stos
insl
in
scas
cmpsb
in
rorb
scas
mov
dec
test
push
pop
data16
and
xchg
fsubrl
aam
jae
out
ds
cld
out
adc
mov
mov
inc
cmp
inc
clc
push
fnstsw
jne
or
sbb
pop
cmovo
stos
cltd
cmp
pop
lret
dec
xchg
fisttps
ss
ljmp
pop
push
xchg
lret
jo
insb
mov
dec
loop
adc
dec
pop
jae
mov
call
pxor
sti
movsb
roll
sbb
and
xchg
cld
shlb
mov
mov
adc
fnstcw
arpl
sbb
pop
inc
jo
sub
scas
shrb
in
ret
push
cli
movsb
dec
mov
setl
gs
lret
or
sti
icebp
xchg
or
int3
mov
icebp
pop
mov
mov
xor
push
cmpsb
push
and
add
scas
scas
pusha
frstor
stos
push
out
jno
faddl
iret
inc
andl
insl
bound
add
mov
jecxz
sub
andl
push
lret
add
jge
mov
insl
inc
out
adc
je
push
test
xor
lock
pop
or
fwait
out
push
movb
or
jg
lea
xchg
dec
dec
hlt
xor
inc
xor
je
mov
ret
xchg
into
adc
adc
scas
mov
and
xlat
sub
mov
lea
pop
in
mov
jge
scas
repz
imul
mov
roll
pop
mov
pop
loop
xchg
js
jmp
and
pushf
add
fadds
mov
cli
insb
orb
lock
and
xor
pushf
cs
hlt
ret
inc
push
pop
dec
iret
arpl
xor
jge
lahf
push
shll
cmp
out
in
mov
loope
popa
sbb
enter
clc
mov
inc
mov
add
adcb
aaa
sub
push
loope
stc
push
xchg
jge
addr16
dec
das
jb
mov
cwtl
add
push
sub
xor
stos
sbb
pusha
and
in
lods
aas
int
adc
repz
aam
in
mov
pushf
stos
or
xchg
lock
clc
sti
adc
loop
jns
fsubrs
leave
mov
mov
sbb
ret
push
enter
xchg
adc
icebp
sub
rcll
mov
cmc
xchg
ret
sbb
lret
or
hlt
jmp
sub
jmp
fs
addb
jl
rorl
add
mov
cmc
jl
loop
fidivrs
and
imul
mov
pop
xor
cmpsl
adc
imul
out
daa
outsl
jbe
bound
mov
mov
push
incl
pmulhuw
ds
xchg
push
sbb
xlat
and
sub
divb
sub
pop
add
es
or
in
adc
xchg
mov
sub
mov
and
test
mov
pusha
pop
jp
mov
pop
pop
in
fdivs
xor
dec
dec
push
std
lea
fistl
shl
inc
sbb
xchg
or
orl
mov
push
dec
gs
outsb
mov
mov
dec
scas
and
dec
stc
cmp
xchg
aad
fidivrs
mov
rcll
push
sbb
or
jae
sbb
dec
or
xlat
stos
je
mov
ja
fidivl
aaa
out
arpl
push
pop
ljmp
pop
pop
lahf
and
aad
daa
push
sub
adc
outsb
outsl
je
std
stos
jne
fs
mov
cld
leave
inc
arpl
cmp
and
imul
int3
sub
aam
xor
xor
adc
insl
cmp
push
pop
test
cs
mov
sbb
cli
mov
lret
mov
inc
int
pop
xor
push
mov
cmp
push
and
test
in
adc
sbbb
xor
xor
sub
jnp
fcmovbe
mov
mov
mov
aas
fsubrl
test
inc
sbb
dec
out
lods
es
mov
dec
jne
shlb
pop
ror
sub
dec
add
in
lds
sbb
push
inc
roll
movsl
mov
std
inc
call
jmp
cmpsl
sti
jb
dec
aad
cmp
push
insb
imul
scas
fwait
inc
aas
dec
les
xor
iret
nop
inc
ja
jl
adc
mov
lcall
dec
mov
scas
add
cmp
jo
mov
daa
inc
out
scas
fucomi
sbb
sub
xchg
and
lods
cmpb
sbb
mov
mov
inc
sbb
icebp
xchg
repz
rep
push
pop
aam
mov
mov
adc
ljmp
mov
inc
in
xor
jge
sub
jmp
jnp
cmp
and
dec
inc
jae
mov
push
repnz
push
xlat
xchg
ret
mov
sbb
pop
sbb
inc
fldenv
das
push
aad
jo
mov
adc
dec
jl
adc
cwtl
les
pushw
mov
mov
jle
add
ljmp
fdivrl
mov
shlb
dec
aaa
sub
insb
in
cmp
adc
inc
mov
or
lahf
lcall
adc
inc
enter
movsl
fs
mov
inc
and
mov
sahf
push
jp
adc
int
xchg
jb
jg
jge
pop
mov
jo
fdivl
mov
pusha
cmp
enter
test
decb
jns
int3
test
in
nop
pop
shll
in
fsubrl
aam
leave
cmpsl
imull
in
cwtl
cmp
cmc
notb
data16
jo
pusha
mov
jmp
xchg
repz
mov
mov
dec
in
insl
aas
jecxz
mov
jbe
in
clc
sbb
out
sbb
sbb
inc
int
aas
mov
ds
fwait
roll
jge
scas
call
adc
int3
mov
push
mov
mov
cmpsl
pop
sub
add
sbb
xchg
ret
sub
jne
cli
fwait
jmp
gs
sbb
rcrb
cmp
aam
aad
sbb
leave
arpl
dec
jae
jg
lahf
fldt
push
mov
mov
push
or
sub
sub
push
popa
or
or
fcompl
into
jns
loop
popf
xchg
int
xchg
mov
fs
clc
aaa
mov
pop
pop
daa
xchg
fdivrs
scas
test
push
push
jae
lea
mov
xor
loopne
mov
fnsave
push
adc
push
mov
and
dec
stos
lock
add
mov
mov
and
outsb
jmp
lea
adc
jbe
xchg
les
xchg
sbb
add
add
push
jl
mov
cmp
fdivrs
push
mov
dec
pop
xchg
aam
sub
pop
aas
test
sub
fsts
test
stos
call
push
cmp
sub
push
push
out
xor
outsb
shll
adc
call
sub
stc
push
mov
inc
mov
jle
cmpsb
cmp
js
sbb
xlat
dec
out
push
mov
push
push
rep
cmp
add
leave
xchg
sbb
fsubrs
enter
lret
std
mov
inc
xor
daa
push
testl
sub
pop
cmp
dec
aas
cmpsb
addl
in
adcb
in
mov
insb
ret
rorb
outsl
out
push
pusha
push
sub
in
xor
add
insb
mov
jb
in
dec
mov
ja
mov
adc
shl
sub
inc
test
mov
pop
mov
lcall
dec
xchg
cmpsb
jno
int
mov
aam
mov
xchg
out
cmc
data16
mov
dec
sub
ljmp
ror
mov
movsl
ss
idiv
lcall
loopne
incl
and
mov
std
jp
dec
mov
outsl
sarl
xor
mov
add
mov
andl
xor
jp
dec
mov
cli
int3
cmp
orb
test
adc
mov
and
xchg
add
cmc
and
divl
or
pushf
adc
dec
sub
daa
scas
xor
mov
mov
in
push
mov
fstpl
imul
jge
out
insb
and
outsb
mov
xchg
and
push
incl
les
xor
mov
sti
out
es
push
pop
jb
test
push
aad
mov
mov
jnp
std
cmp
flds
push
mov
inc
push
cmp
mov
pop
adcl
adc
pop
bnd
mov
xchg
enter
mov
outsb
iret
xchg
lods
add
lds
cmp
imul
pop
cmp
and
adc
les
imul
pop
lds
test
in
mov
jge
ret
xchg
rolb
js
jae
jge
jle
pop
dec
mov
or
xlat
imul
jecxz
orl
scas
sarl
icebp
mov
pop
jb
popf
inc
mov
dec
pop
push
jmp
nop
xchg
push
xchg
xorl
and
sbb
pop
shlb
out
decb
dec
call
mov
xchg
inc
mov
xlat
add
into
fldenv
push
jecxz
pop
fistpll
xor
pop
xlat
jns
outsl
and
jns
mov
sbb
add
dec
ja
or
jne
mov
inc
jnp
aam
xor
hlt
cmp
js
inc
inc
lret
sub
loopne
push
mov
add
push
filds
icebp
mov
movsl
push
inc
icebp
gs
cmp
sub
dec
add
add
or
sub
loope
stc
rcrb
jb
cmpsb
jae
dec
loop
adc
notl
push
mov
pushf
ljmp
int3
xchg
test
jns
pop
jne
add
cmp
pop
in
sbb
movsb
out
std
sti
fxam
lahf
dec
out
gs
fisubl
out
icebp
push
test
std
mov
sbb
je
ja
sub
xchg
aas
repz
dec
and
cmp
in
jecxz
pop
popa
push
mov
fidivl
dec
mov
sub
inc
push
inc
pushf
push
cs
or
outsl
icebp
cwtl
mov
jge
in
or
sbb
and
mov
fdivrs
add
xchg
xchg
jae
lock
and
push
dec
outsb
mov
clc
les
add
or
aaa
cmpsb
xchg
icebp
iret
data16
cmc
pop
loope
push
pushf
test
xchg
loope
shl
daa
mov
pushf
mov
xchg
addr16
cmpl
loop
push
dec
in
mov
cmpsb
test
jmp
add
scas
in
jno
das
xchg
inc
mov
out
mov
movsl
ret
test
inc
sub
lret
pop
insl
pop
mov
fbstp
xlat
cwtl
pop
int3
aaa
jo
inc
mov
dec
jl
pop
cmp
popa
lret
es
sub
cmp
cwtl
cmp
and
mov
gs
pop
xor
popf
sbb
jns
inc
mov
xor
rcrb
mov
repz
or
outsb
xor
cltd
cli
pop
pop
movb
pop
jle
enter
xor
cmovle
cmp
dec
fcmovnb
addl
xchg
nop
mov
fildll
jmp
mov
sbb
out
cltd
lods
inc
dec
shlb
push
sbb
loopne
push
and
fimull
lcall
push
sbb
insb
nop
fs
cmpsl
scas
loopne
test
sub
shll
adc
out
out
js
jge
jg
pop
cli
aam
nop
neg
addr16
xor
push
test
push
pop
pop
mov
dec
xchg
add
adc
das
or
cmp
imul
xor
loope
loop
mov
ret
cmp
lea
xchg
add
inc
pop
push
mov
pop
loope
adc
aaa
or
mov
insl
fmul
push
gs
imulb
into
mov
mov
mov
in
pusha
loopne
cmp
fistpl
mov
inc
sbb
movsb
sarl
iretw
adc
add
repnz
inc
mov
ret
xchg
das
nop
cmp
pop
xor
xchg
lea
xor
mov
ret
nop
mov
xchg
cmp
lret
leave
in
pop
xor
dec
cmp
scas
push
mov
dec
add
cmpb
cwtl
shll
stc
or
inc
mov
push
aaa
add
js
pop
push
daa
int
xchg
sbbl
je
inc
neg
mov
and
lds
adc
aad
mov
adc
jp
jmp
mov
rcrl
or
mov
pop
out
in
and
fldcw
sbb
decb
nop
movsl
fwait
mov
sarl
ljmp
lret
push
scas
push
sbb
outsl
jo
stos
xor
cmp
dec
and
hlt
test
jo
repnz
sub
xlat
sub
mov
test
pop
outsb
int
cltd
sub
and
inc
mov
in
mov
mov
fs
sti
add
xor
mov
jecxz
test
xor
lret
js
mov
cld
jo
shr
mov
inc
cmp
xchg
fwait
pusha
nop
ffreep
xchg
add
cmc
ds
adc
and
popf
mov
adcl
mov
popf
mov
pusha
stos
iret
mov
or
pop
stos
movsl
push
push
mov
es
jb
lahf
inc
lret
inc
sub
dec
mov
xchg
rcrb
test
push
jge
popf
sarb
and
xchg
sbb
enter
inc
push
lret
inc
fsubr
jg
cs
cmp
mov
xchg
mov
mov
mov
lock
inc
pop
lret
push
or
lret
repz
sbb
push
fwait
hlt
repnz
mov
xor
cmp
arpl
push
lock
ljmp
push
scas
mov
pop
mov
xchg
mov
in
fimuls
cwtl
xor
adc
or
add
mov
pop
test
out
fdivrs
daa
mov
mov
enter
mov
sbb
dec
aad
mul
setbe
mov
mov
and
pop
ret
rcll
push
jbe
inc
add
inc
xchg
insb
xor
fbld
mov
rcll
in
pushf
pop
repnz
and
or
cld
fldt
push
pop
sub
inc
xchg
lret
inc
adc
das
pop
imul
push
cmp
adc
add
fisttpll
pop
xor
xor
pop
notl
scas
jle
add
shr
push
and
loop
push
push
jb
inc
xor
in
or
stc
cltd
pop
and
add
jp
rorl
dec
pop
std
imul
cmp
push
pop
adc
mov
lock
pop
pushf
cmpsl
and
lock
nop
lcall
sbb
sbb
ds
lahf
aam
subb
clc
gs
mov
pop
xchg
inc
movsb
xchg
js
push
xchg
or
loop
and
adc
rcrb
ret
dec
loopne
cmp
dec
ss
and
outsb
add
mov
xor
push
jne
inc
xor
pop
sbb
lahf
mov
das
jbe
lahf
loop
mov
shrb
jne
lret
imul
or
out
sti
sbb
cmp
pop
rcrb
test
dec
mov
add
lea
into
inc
jne
mov
test
add
stos
lahf
mov
inc
push
add
adc
popf
jecxz
cmpb
inc
scas
daa
dec
ret
fsubs
push
adc
or
shrb
push
call
shrl
mov
adc
sub
es
fcmovne
add
lods
jge
adc
aas
stos
push
xor
xchg
xchg
addr16
adc
in
js
cwtl
ja
lea
push
test
bound
fimull
xchg
sbb
in
shll
cmpsb
dec
repnz
imul
fisubrl
idivl
and
loop
mov
enter
ds
into
clc
add
dec
xor
inc
push
lret
int3
fdivrl
hlt
stos
mov
sbb
lcall
pop
mov
jp
push
out
sbb
ret
cmp
pop
adc
mov
jg
dec
ljmp
ficoml
inc
adc
stos
int3
insl
hlt
and
in
xor
sbb
into
pop
mov
insb
and
dec
test
negb
subb
repnz
mov
pop
xor
jmp
jbe
cwtl
mov
das
in
inc
jmp
cmc
addl
jge
ja
aam
cmpsb
xor
jno
testl
mov
cs
push
clc
clc
pop
and
sub
in
inc
mov
out
sar
clc
xor
push
stos
fcomip
sbb
mov
jbe
outsl
inc
imul
pop
inc
gs
xorb
mov
not
mov
or
dec
pop
pop
test
out
mov
jns
lcall
push
mov
mov
jne
daa
shr
int3
xor
std
add
and
mov
add
and
push
and
xchg
push
dec
test
cmp
lods
aaa
xchg
mov
mov
nop
mov
mov
pop
bound
ror
lahf
push
sub
mov
add
dec
in
sbb
push
out
jns
iret
adc
cmc
push
push
push
in
stc
mov
push
add
and
jb
insl
cmp
fwait
and
push
mov
std
xchg
in
pop
aad
cmp
pop
pop
cmp
pop
xchg
cmp
insb
jnp
aas
pusha
add
cmp
cmp
mov
iret
mov
dec
stc
sub
mov
push
sti
add
xchg
mov
pop
test
insb
rcl
mov
aam
pop
in
xor
pop
fmul
repnz
test
sub
dec
inc
or
push
mov
add
add
jbe
mov
and
add
push
inc
xchg
dec
movsl
jmp
jl
add
mov
outsb
cmp
hlt
adc
mov
roll
push
mov
icebp
outsb
xchg
popa
inc
add
add
push
ljmp
pop
pop
hlt
fstpl
mov
xchg
cmp
pandn
fldcw
dec
or
bound
mov
pop
pushf
imul
or
jno
loope
cmpsb
orb
xchg
jns
aam
push
jge
mov
push
pop
js
insb
in
hlt
or
je
rcrb
adc
jmp
push
sub
in
lahf
shll
sbb
push
sub
loopne
cli
cmp
les
nop
loopne,pn
inc
mov
inc
mov
aas
pop
mov
mov
mov
in
testb
testl
mov
movsl
pushf
and
jl
ret
sub
js
sub
push
cmp
sub
ret
pusha
mov
jno
in
mov
inc
lds
mov
ja
movsl
je
dec
push
pop
add
pop
cmp
xor
popf
jb
sbbl
insl
ds
popf
xor
sbb
inc
mov
mov
cmp
xchg
sub
clc
lds
pusha
out
xchg
cwtl
dec
insl
sti
xor
jbe
lods
cld
je
rcll
stc
push
cmc
mov
mov
dec
cmc
fwait
pusha
xor
dec
xchg
or
dec
jbe
scas
and
xor
mov
inc
stos
mov
cmp
xor
inc
mov
or
xor
popf
dec
jp
aam
rcrl
test
lret
adc
mov
hlt
mov
mov
enter
dec
subl
xchg
push
fcoml
mov
test
sub
dec
pop
mov
lock
shl
mov
ljmp
dec
lahf
or
std
push
lret
mov
leave
loope
data16
aam
mov
repz
sbb
inc
push
sbb
inc
scas
mov
xor
push
add
data16
rcrb
xchg
stc
sub
test
add
fsubs
push
add
mov
rclb
ficoms
dec
rorb
sub
out
pop
test
in
inc
mov
repz
sbb
aas
cwtl
imul
sbb
add
mov
sbb
fisubrs
test
mov
mulb
test
xchg
adc
out
jmp
mov
sub
dec
sub
add
cmc
jb
data16
rcl
bound
movsl
int3
es
les
scas
mov
mov
push
ret
mov
cltd
das
stos
xchg
iret
popf
or
addr16
mov
inc
xchg
mov
jge
nop
lcall
lret
cmp
jg
push
mov
shll
and
mov
dec
ja,pn
mov
popf
gs
cltd
push
mov
std
lea
push
xor
int
xchg
xchg
push
push
lret
stc
or
lods
mov
in
leave
push
jge
xchg
jg
or
dec
inc
movsb
or
cwtl
inc
fucom
enter
roll
jp
push
xchg
or
stc
push
sbb
sbb
pop
adc
out
shl
push
fwait
cmp
fisttpl
fldl
pop
pop
jg
xchg
inc
loop
mov
sub
fnstsw
clc
push
pop
lods
jg
xchg
std
ss
scas
sti
fwait
push
mov
jmp
enter
popa
lahf
jp
enter
mov
pushf
push
xor
mov
mov
gs
cwtl
inc
lods
lods
mov
sbb
out
out
nop
ror
cmp
insl
xor
xor
mov
and
add
ds
in
mov
push
cltd
out
aas
jbe
fidivs
cmp
sub
mov
fdivrs
mov
orb
xchg
or
stos
inc
movsb
in
mov
xchg
and
xchg
mov
scas
pop
pop
jns
lret
mov
imul
adc
rcrl
pop
sbb
cli
jo
enter
jns
outsl
stos
cmp
sub
mov
adc
enter
mov
mov
pushf
jno
jbe
ret
inc
out
push
mov
inc
push
insb
loopne
pop
das
pop
popl
notb
out
pop
sub
fstpt
sub
xor
div
dec
mov
jl
out
xor
test
in
add
out
in
dec
ret
in
sbbb
in
push
sbb
das
and
call
sub
mov
xor
or
mov
mov
lds
push
push
adc
jae
pop
fistps
sbb
fnstsw
pop
jmp
sbb
pop
rorl
stos
dec
es
cmp
mov
push
push
sbb
in
dec
dec
popa
push
pop
cli
ljmp
dec
out
xor
jp
stc
popl
mov
cmc
mov
fwait
aaa
jp
fadds
dec
xchg
rcr
and
adc
cwtl
dec
fwait
int
cli
jmp
andb
add
adc
inc
fdivs
jl
dec
pop
lock
jle
lahf
xlat
sti
shll
int
cmp
ret
ficomps
je
cmc
aas
dec
andb
jmp
icebp
data16
ds
adc
and
mov
cmp
dec
lock
xchg
push
sbb
cmc
mov
pop
push
je
lahf
pop
dec
orl
and
std
mov
and
pop
or
sarl
mov
adc
sub
cmp
outsl
inc
outsl
jnp
sub
cmpsl
and
mov
daa
sbb
fld
fcomi
pop
pop
dec
cwtl
loopne
fidivrs
mov
inc
sbb
inc
pusha
lcall
icebp
in
inc
push
lods
stos
pop
sub
pop
iret
dec
aad
cltd
dec
test
rolb
fsubrl
inc
add
xor
and
insl
mov
sbb
add
push
fdivs
xchg
cmpsb
call
ljmp
subb
jl
and
dec
adc
loope
adc
jp
xor
and
cmc
andl
xlat
rclb
loope
cmpsl
popf
pop
data16
push
lods
pushf
ds
sbb
adc
fnstenv
dec
daa
ficomps
icebp
jo
jmp
ret
sub
out
inc
dec
pop
jecxz
or
pop
xchg
imul
das
xlat
cld
repz
jnp
adc
shr
repz
scas
fsin
jge
stc
movb
push
imul
stos
fsts
bswap
adc
mov
imul
aaa
xchg
lea
cmpsl
js
jo
push
lods
inc
mov
push
aaa
push
ret
jae
fmul
sub
or
pop
xor
lret
test
cmp
rorb
gs
dec
and
lock
mov
push
or
push
jl
xchg
and
mov
fisubl
fdivrs
pop
or
ljmp
mov
or
cmp
popf
rcrb
dec
mov
es
popf
mov
sub
push
jbe
sbb
pop
cmp
mov
insl
inc
cmp
inc
clc
test
es
fsqrt
popa
outsb
or
mov
jp
adc
cmp
lock
je
push
daa
inc
xchg
mov
dec
enter
lods
fnclex
push
mov
clc
cmp
xchg
cmp
insb
mov
aad
jno
rorb
neg
mov
fwait
cltd
std
leave
and
cld
or
stos
sub
sti
cmp
std
pop
cvtps2pi
loop
gs
and
pusha
imul
repz
cli
adc
xchg
scas
inc
int
inc
and
pop
xchg
dec
mov
push
fdivrp
cs
negb
mov
pop
jae
sbb
and
sbb
xchg
xchg
mov
js
or
loop
movsl
gs
int
lds
jle
scas
or
pop
lret
xor
cmp
cs
out
xchg
addr16
push
inc
lods
lock
inc
jbe
dec
inc
push
mov
adc
pop
sbb
mov
sti
push
inc
mov
push
inc
fstpt
mov
lods
jge
gs
popf
clc
cmp
loopne
jg
addb
iret
adc
gs
cwtl
adc
mov
dec
push
xor
pop
js
inc
xchg
lahf
xchg
js
das
std
cmp
das
fwait
repnz
insl
fadds
push
add
sub
push
mov
cld
or
popa
and
sti
jl
out
fsubrl
pop
push
es
ficoms
aas
cmp
push
stc
dec
mov
sbb
mov
subb
jmp
add
jecxz
les
cmc
inc
popf
xchg
aam
icebp
repnz
xchg
mov
test
sbb
xchg
scas
inc
loopne
imul
or
scas
pop
shlb
pushf
shll
add
adcb
and
es
inc
stos
dec
cmp
imul
or
adc
dec
out
movsl
mov
pop
data16
cmp
push
cltd
jb
sar
repz
pop
jbe
push
je
and
cmpsl
fmul
call
jge
sub
jle
xor
lods
pop
sbb
pop
jno
scas
mov
mov
stos
and
pop
push
and
aad
test
add
dec
xchg
loop
inc
aaa
inc
cmpsb
mov
lret
sbb
push
outsb
test
ret
out
xor
stc
arpl
fstl
add
sbb
fdivrs
repz
xor
shlb
cld
dec
mov
aas
push
mov
test
or
xor
cmp
das
into
daa
mov
mov
ficoms
out
or
ds
dec
xor
jns
mov
cmpsl
push
fmuls
xor
inc
bswap
inc
fldl
push
or
in
lods
int3
mov
mov
ret
mov
lods
xchg
mov
or
cli
insl
fidivrs
mov
insb
push
jg
sub
pushf
pop
mov
mov
jge
jno
icebp
enter
lret
sub
ror
mov
fdivrp
jne
push
into
repz
xchg
loopne
mov
fisubrs
push
xchg
push
add
pusha
in
ficoml
xchg
cmp
icebp
push
sbb
dec
fcomps
mov
in
push
sbb
insb
sub
add
jno
push
inc
mov
cmp
in
pop
repz
stos
daa
hlt
lods
xchg
xchg
adc
adcl
outsl
inc
xchg
xorl
xor
lods
fistpl
aas
lods
add
loop
xchg
dec
and
into
insl
loopne
imul
aam
cmp
mov
jne
adcb
stos
inc
jl
mov
sbb
mov
pop
jb
imul
inc
dec
or
mov
mov
xor
cltd
lods
cmp
add
mov
subl
and
xchg
out
repz
adc
cmp
icebp
aaa
int3
insl
mov
movsl
xchg
movsbl
mov
adc
cmp
inc
ljmp
cmp
cld
sbb
ret
jns
int
in
cmpsb
fisubrl
mov
xchg
sbb
sahf
cmp
push
outsb
shrl
mov
sahf
jl
add
jp
sbb
xor
pusha
inc
mov
stos
mov
dec
mov
test
out
fstpl
icebp
test
inc
mov
lret
mov
call
popf
outsb
out
inc
aaa
mov
mov
cmc
enter
mov
add
and
call
or
pushf
insl
adc
mov
shrb
stc
mov
jbe
and
xchg
clc
jno
sub
xchg
test
hlt
pop
cmp
xchg
andl
clc
xchg
ret
rclb
inc
ss
es
mov
ljmp
lods
and
add
int3
or
jmp
data16
cld
xor
fsubl
insl
mov
neg
lret
cmp
add
inc
dec
shrb
loope
stc
adc
out
mov
jb
jmp
jmp
jp
fcoml
push
icebp
lea
loop
sbb
in
cltd
out
das
jo
xchg
lods
push
mov
lahf
sbb
xchg
ret
xchg
adcb
mov
pop
dec
int
stos
xchg
xchg
sbb
xor
ror
push
pop
cmpsb
jecxz
push
shrl
addr16
xor
shlb
rcll
mov
adc
push
daa
lods
push
sahf
movsb
fldenv
cmp
or
mov
nop
inc
pop
adc
int3
adc
cmc
and
stos
cmp
out
jb
outsb
pusha
fnsave
mov
jmp
out
push
add
out
arpl
push
or
test
add
jg
inc
sub
ds
mov
aas
xchg
pusha
fcomip
nop
push
inc
dec
insb
add
loopne
fsub
in
je
or
add
dec
mov
mov
pusha
push
rorl
test
inc
mov
push
jecxz
dec
xchg
pop
and
jmp
ds
addr16
push
aam
fs
arpl
xor
fisubrs
fmull
jge
pop
bound
and
jge
in
lcall
aaa
testb
adc
out
push
mov
loopne
cs
js
or
fidivs
inc
push
inc
mov
sbb
push
adc
push
jecxz
push
add
jb
bound
mov
xor
loopne
aam
or
sahf
je
pop
ds
sahf
or
push
dec
inc
in
js
stos
xchg
stos
push
aaa
cmp
sub
mov
faddp
fsub
out
loope
mov
stos
lcall
cli
fsts
or
inc
pop
test
mov
lret
push
adc
sbb
rorl
xchg
sub
adc
test
cmp
or
dec
leave
les
mov
adc
sub
xor
push
sbb
cmpl
test
pop
sub
push
cmp
xor
push
adc
cld
loopne
mov
popl
xchg
insl
jecxz
or
xchg
ljmp
mov
cmp
pop
aaa
sub
out
popa
cli
cmp
test
fimuls
mov
pushf
mov
movsb
push
cmp
dec
insb
fnsave
idivb
push
jl
pusha
xor
inc
ret
lock
cmp
subl
fwait
jno
out
mov
int3
mov
paddsb
sub
out
ds
inc
stos
fcom
jno
jge
test
test
fisubrl
push
add
pop
ret
fisubrl
adc
push
lds
loope
mov
arpl
std
ret
cld
lret
outsl
stos
xor
xorb
xor
xchg
pop
fidivrs
mov
mov
sbb
mov
test
push
xchg
dec
xchg
sahf
cld
sub
sbb
enter
xchg
repnz
dec
pop
in
xor
inc
push
mov
outsb
add
aam
cld
adcl
pop
shrb
imul
lahf
in
lods
or
xlat
mov
add
loop
pushf
dec
lock
lahf
push
mov
into
int
mov
popa
pop
stc
lock
mov
notl
loope
stos
and
sarb
jmp
into
daa
cmp
fiaddl
test
pop
mov
inc
ljmp
enter
das
jl
or
sbb
push
adc
xchg
xor
div
popa
fimuls
imul
ret
cmp
lahf
jnp
cmp
xchg
pop
jbe
sub
movsl
push
repnz
or
mov
cmpsb
cmp
lahf
cmp
xchg
xchg
mov
jge
or
fwait
dec
out
mov
sub
or
mov
jae
les
lock
push
adc
push
insl
leave
inc
inc
jmp
push
dec
mov
ljmp
jne
pop
xor
lret
loop
jo
or
gs
add
test
dec
adc
insb
shll
xchg
sti
sbb
mov
pop
pop
dec
in
aaa
sbb
jno
jne
dec
mov
and
mov
rcrl
mov
aaa
jnp,pn
js
mov
mov
sub
lea
cmp
in
sub
cmpb
jbe
sti
das
shrd
adc
loopne
mov
mov
pusha
or
mov
push
pop
stos
dec
xchg
mov
and
adc
ljmp
mov
daa
scas
out
fnstenv
mov
pop
sub
fistl
hlt
cmpsl
jmp
dec
add
jns
scas
sub
add
or
xchg
stos
or
xor
pusha
sub
mov
dec
popf
adc
fistpll
lcall
jb
gs
fimull
push
push
jp
sbb
sti
mov
pop
jecxz
jne
push
shrb
sub
fwait
add
es
mov
xor
cmovae
adc
roll
mov
xlat
dec
push
pop
inc
gs
and
nop
pop
sbb
mov
shlb
out
add
sbb
mov
cs
push
test
rorb
and
mov
mov
ret
rclb
shlb
sbb
push
stc
jae
adc
xor
sbb
xchg
lret
jbe
test
mov
mov
inc
push
mov
lret
or
pop
push
add
push
push
clc
in
pop
in
push
adcl
xchg
xor
pop
sub
add
lods
jnp
ret
sub
out
add
popa
or
mov
push
lret
insl
ss
fs
clc
in
imul
testl
pop
sbb
pop
sub
ds
imul
lea
cmp
jle
mov
jnp
cmp
in
xchg
data16
pop
mov
cmc
inc
daa
inc
and
xor
loop
arpl
mov
insb
jns
loop
add
enter
pop
sarl
pop
fmull
and
adc
test
rcrl
cmpsl
ja
gs
push
insl
ss
nop
out
repnz
add
push
mov
enter
push
dec
int
pop
insb
dec
sbb
sbb
adc
jge
out
fcompl
lret
aam
push
aaa
xchg
scas
repz
es
inc
xor
std
sahf
mov
xlat
xchg
ljmp
or
mov
mov
cld
push
jo
lods
fisttpl
nop
inc
out
shll
mov
mov
sarb
dec
sbb
orb
in
pop
mov
daa
pusha
dec
fs
push
mov
xor
icebp
push
ret
popa
mov
jnp
adc
push
pop
mov
bound
push
jecxz
lcall
and
dec
mov
xchg
mov
lret
pop
loope
dec
lods
push
adc
mov
lcall
sub
int
mov
xor
xchg
nop
fs
sub
fxch
pop
adc
inc
addr16
sbb
fstps
mov
mov
mov
xorl
fcmovnb
pop
push
cmc
adc
nop
push
dec
dec
mov
fdivs
roll
dec
loop
in
and
jg
insb
push
fwait
adc
stos
stc
add
xor
dec
lock
mov
mov
inc
add
push
out
pop
and
inc
xor
into
sub
lea
push
dec
mov
out
into
mov
aad
pop
flds
sub
push
jns
pop
ljmp
jle
scas
push
ss
add
addb
and
inc
xchg
test
inc
mov
das
testl
loop
xor
ljmp
fists
jge
js
test
cmp
mov
repnz
xchg
sahf
add
xchg
lret
jo
xor
fs
insl
inc
or
push
ss
jno
fdivrl
ret
push
jo
ja
neg
sub
rcrb
sbb
lret
std
mov
and
int3
in
ljmp
int
popf
popf
es
repnz
test
lds
movsb
mov
mov
fidivrl
jae
or
push
pop
add
pop
mov
xor
dec
fadd
jb
and
movsb
dec
xchg
mov
pushf
mov
dec
insl
lock
push
jb
ret
mov
lret
cmpsb
xor
push
mov
pop
scas
push
mov
and
or
jle
test
aad
adc
ret
xor
cld
in
add
dec
and
and
and
dec
cmp
pop
pop
mov
stos
inc
adc
cs
add
push
lds
ret
loop
inc
pushf
jle
shrb
mov
pop
enter
adc
aam
dec
scas
pop
mov
or
cmc
ret
xor
cld
cmp
sub
push
test
test
add
mov
inc
jo
fs
movsl
dec
aam
loope
push
dec
add
movsl
pusha
pusha
add
es
dec
in
mov
mov
fldt
cmp
std
ret
pop
cmp
es
xor
js
negb
inc
out
push
mov
aam
mov
mov
ss
imul
push
mov
push
xor
and
adc
divl
andb
sub
mov
fsubr
ficoml
stos
ds
aam
lahf
mov
fwait
cld
sub
xchg
imul
repnz
aam
push
daa
repz
adc
dec
lods
outsl
and
pop
fisttps
mov
scas
addr16
leave
lock
xchg
push
sub
rcrl
cmpsl
enter
adc
ret
and
aas
push
xor
cmp
and
and
enter
mov
jbe
movq
loop
shlb
jecxz
aad
jecxz
sbb
mov
dec
pop
popa
jno
add
das
dec
fbld
loopne
xchg
lcall
pushf
aam
jmp
cmc
add
push
or
into
in
push
jmp
lea
adc
push
jne
push
in
and
xor
adc
or
cmc
xchg
sbb
xchg
jbe
push
mov
cmpsl
nop
test
mov
daa
adcl
dec
lods
cmp
mov
shrb
cmpsb
jge
cmp
mov
pop
ljmp
aad
jns
push
pop
movsl
adc
cmpl
xorl
pop
mov
gs
push
int3
pop
int
pop
popf
lds
leave
into
dec
cmc
jmp
pop
sbb
jp
push
inc
push
jno
fnstcw
or
mov
aad
imul
pop
dec
out
jmp
pop
push
jne
mov
sbb
jmp
fsubs
adc
insb
or
je
cmpsb
lods
cli
faddp
daa
inc
mov
add
fcomps
insb
mov
lahf
fcoml
cs
fsts
dec
jnp
iret
mov
dec
shl
pop
repnz
imulb
lock
fisttpl
jns
in
xor
mov
xor
es
div
or
sub
cmp
push
and
aam
outsb
les
lret
lret
lea
shl
xchg
je
dec
aam
ss
gs
lods
leave
mov
lret
xor
xchg
jnp
add
testl
out
mov
iret
daa
sub
sarb
mov
pop
pop
mov
nop
add
mov
inc
push
clc
adc
mov
pop
adc
nop
pop
adc
mov
push
jno
loop
pop
mov
push
push
cmc
movsl
and
push
jbe
outsb
hlt
out
xor
je
mov
mov
inc
fwait
add
and
mov
imul
ss
xor
addr16
push
xlat
push
bound
jns
into
fists
loop
mov
daa
adc
push
pop
clc
sbb
dec
and
incl
clc
es
es
sbb
push
add
rcl
pushf
rcl
out
and
pop
push
inc
cwtl
or
enter
daa
push
xlat
push
lds
cmpsl
gs
jp
cs
aam
in
mov
out
fisubrl
sbb
rolb
mov
inc
pop
sbb
adc
cltd
es
and
sub
loopne
mov
push
pop
fwait
pop
es
mov
inc
andb
mov
inc
fnsave
xor
out
repnz
mov
sbb
fucompp
sbb
dec
std
pusha
lret
popa
cmp
push
fldt
xchg
out
sbb
xor
enter
and
inc
sar
into
inc
jo
or
dec
imul
mov
mov
cmp
and
sahf
jno
imul
ret
mov
loopne
adc
cld
out
loop
jb
nop
mov
fwait
jo
dec
push
sbb
push
jmp
sbb
repz
mov
arpl
mov
fwait
dec
cmp
dec
xlat
shlb
jbe
insb
stos
cs
sub
xchg
movb
adc
rcrl
inc
insb
xor
inc
int3
ds
roll
jecxz
pop
add
sbb
sti
cltd
fsubl
dec
xor
ss
dec
mov
outsb
or
adc
shll
les
xchg
sahf
add
pop
clc
add
pop
sub
cmp
loop
add
dec
add
leave
mov
sub
test
or
hlt
repz
mul
push
iret
insl
popf
stos
push
aas
mov
subb
jg
jb
movsb
mov
push
pusha
xchg
jnp
or
push
adc
stos
punpckhdq
dec
or
lods
lea
das
loopne
pop
mov
aaa
movsb
fnstsw
stos
inc
mov
scas
adc
mov
pop
adc
es
int
gs
jne
leave
sbb
lds
adc
inc
test
sub
push
repz
and
test
push
out
loopne
xor
pop
jp
dec
jmp
or
add
in
fcoms
lahf
popf
inc
cmp
dec
mov
loop
mov
push
sub
add
test
inc
sub
orb
ret
add
jne
adc
inc
xchg
test
ljmp
or
pop
dec
mov
pop
out
movsl
pop
loopne
mov
imul
mov
add
jmp
popa
cli
xchg
inc
ss
adc
arpl
push
inc
sbb
push
dec
jbe
xchg
jg
push
pusha
cli
and
mov
xor
mov
push
jno
imul
mov
iret
das
repnz
mov
jo
cmpsl
pushf
and
sbb
sub
dec
xlat
mov
cwtl
inc
les
fsubs
fucomip
inc
xor
stos
dec
insb
mov
jge
scas
mov
ds
xchg
mov
and
stos
cmp
lahf
xchg
iret
pop
std
xor
mov
sbb
push
aaa
dec
lahf
mov
divb
cmp
xor
stc
add
or
aas
ret
dec
mov
xchg
pop
jg
outsb
adc
xor
or
or
sbb
cmp
jmp
mov
mov
jns
fs
lret
xor
stos
sub
sahf
mov
lcall
xlat
mov
mov
push
sbb
jno
and
or
cmpsb
push
add
cmpsl
adc
sub
nop
nop
xlat
pop
mov
in
xchg
js
jno
stc
shll
ss
xchg
cmp
cmp
stc
fadds
into
daa
arpl
ljmp
cmpsl
push
mov
pop
dec
sub
jne
adc
xor
mov
sti
and
pop
loop
mov
xchg
int
mov
scas
inc
mov
mov
repz
mov
inc
call
xor
test
aaa
mov
mov
and
add
sbb
push
decb
cmpsl
pop
in
imul
sbb
cmpb
adc
sbb
adcl
pop
or
dec
stos
jg
inc
xor
push
cwtl
inc
out
nop
mov
fsubp
loopne
aas
fstl
outsl
cmp
in
aaa
fcomps
pusha
divl
cmp
scas
sti
ds
test
sub
scas
inc
jmp
stos
add
in
cmpsb
mov
add
jecxz
inc
inc
sbb
sti
and
xor
fnstenv
push
cmovp
inc
xor
data16
pop
testl
in
xchg
fcmovb
cmpsl
jge
xor
and
fbstp
movsl
mov
in
mov
jp
sbb
sti
jbe
add
push
sub
lods
lds
cmp
pop
loopne
mov
je
push
and
or
sub
bound
inc
movsb
inc
outsl
sub
out
and
or
mov
dec
jnp
dec
into
adc
jle
popf
sub
ror
je
pop
aas
xor
cmp
add
test
or
in
cmp
fbstp
fiadds
ja
fs
andb
cmpsb
mov
aad
testb
jno
test
adc
mov
test
sti
arpl
scas
jae
mov
push
loopne
movsl
sub
aaa
das
ja
push
inc
sbb
in
mov
enter
ss
push
fs
iret
sbb
sub
stos
mov
pop
push
push
adc
into
pushf
inc
leave
in
mov
imul
lea
jg
mov
adc
adc
enter
mov
pop
push
xor
lds
mov
out
clc
adc
lds
xor
rolb
imul
adc
sbb
cmp
jae
adc
xor
mov
aam
sbbl
cli
leave
adc
stos
sahf
imul
xchg
js
jp
mov
mov
or
or
push
lret
rolb
mov
frstor
jbe
inc
adc
xchg
jle
add
push
push
adc
arpl
mov
xor
xor
push
out
inc
or
adc
mov
mov
cld
jmp
jecxz
mov
mov
lods
pop
ljmp
adc
hlt
push
adc
hlt
imul
movsl
int
repz
sub
imul
mov
cmpsb
scas
pop
or
sub
lock
mov
push
and
cld
and
add
xor
sub
push
sub
outsb
fisttps
or
outsl
in
xchg
pop
jae
xorb
xchg
or
lods
and
enter
loope
sbb
and
pop
mov
in
pop
mov
lcall
cmp
das
add
lret
inc
cmp
push
or
cmpl
fldl
hlt
dec
leave
test
dec
inc
inc
jmp
push
stc
rorl
movsb
lret
leave
imul
in
das
out
fisubs
addb
scas
hlt
cmp
icebp
pop
repz
and
test
cmp
adc
repnz
mov
adc
movsb
dec
stos
loop
xchg
lea
hlt
xchg
sub
jns
sub
cmp
adc
dec
rcl
fs
fisttps
sbb
xor
lea
aaa
mov
jne
out
cmp
js
es
data16
sbb
clc
sti
sub
xlat
ret
int
fnsave
ljmp
into
push
ficoml
jo
inc
aas
rcrb
ret
repnz
repnz
sahf
fildl
in
lahf
scas
and
pop
inc
pop
sbb
mov
push
or
lret
out
clc
adc
out
mov
adc
inc
cmc
xor
jmp
pop
push
inc
and
xchg
stos
imul
rorb
cmpsl
push
cmpsb
das
mov
push
pop
pushf
or
jae
hlt
call
xchg
push
int3
test
cwtl
adc
adc
pusha
call
xor
js
fldcw
hlt
les
cli
inc
mov
push
dec
pop
pop
jmp
sbb
mov
sahf
add
dec
sub
sbb
lds
or
stos
sti
push
test
add
inc
dec
mov
inc
mov
rorb
mov
jnp
jbe
add
or
test
push
dec
repz
pushf
sbb
inc
ret
rcrl
dec
sbb
lds
dec
daa
inc
loope
aas
jnp
inc
sbb
mov
out
movb
lret
ljmp
pop
push
subb
and
fstpl
fimuls
mov
lret
bnd
test
xchg
lahf
push
fs
or
adc
dec
add
pop
pop
dec
ret
pop
jge
and
dec
loop
sbb
sbb
pushf
mov
or
roll
adc
aam
cli
push
ljmp
push
aam
pop
das
pop
jg
mov
in
lock
inc
add
and
mov
and
add
mov
mov
fisttps
fdivs
pop
ljmp
mov
jae
pop
icebp
push
adc
adc
add
pop
insl
cmpsb
leave
cmp
push
jle
in
push
dec
jl
icebp
mov
nop
cmp
push
ja
xchg
mov
call
ljmp
clc
lahf
dec
fwait
test
cs
loop
push
jg
lock
outsl
pop
test
push
inc
adc
sbb
leave
pop
adc
out
add
inc
scas
add
aad
add
dec
cs
xchg
shrl
imul
mov
ret
sarl
clc
into
add
push
or
in
clc
fdivp
mov
loopne
push
faddl
in
movsl
inc
jne
jne
outsb
cmpsb
aaa
test
mov
loopne
adc
inc
mov
sbb
push
cwtl
dec
loop
addr16
jg
rolb
mov
pop
leave
adc
addb
add
les
xchg
mov
lock
and
outsb
out
cmp
add
and
gs
pop
sbb
jno
jp
xor
inc
sbb
lahf
insb
loop
mov
inc
adc
sbb
xor
imul
pop
xchg
jno
mov
xchg
mov
ds
sbb
popf
test
call
xchg
add
aas
sub
enter
fadd
mov
mov
loope
gs
lret
hlt
pop
inc
mov
clc
dec
sbb
fistpl
jo
hlt
or
popf
les
sub
pop
jo
mov
jne
jne
loop
sub
xchg
sub
pushf
add
jne
mov
xchg
jg
dec
call
outsb
push
les
pop
xchg
mov
int3
jle
push
push
out
or
jecxz
out
or
cmp
mov
js
push
or
ret
push
movsl
aas
xlat
cmpb
cmp
push
dec
inc
cmp
out
jl
test
imul
push
xchg
jb
subb
push
clc
xor
dec
shlb
push
aam
shrl
adc
sbb
adc
rolb
push
outsb
sbb
ret
cwtl
xchg
pop
xor
xchg
xchg
andb
lds
xor
add
outsl
int
pop
or
add
fstl
mov
jle
fwait
push
add
fcmovnbe
loopne
daa
into
pop
cmp
jp
sarb
mov
pusha
xlat
ss
cmp
in
mulb
aaa
in
fdivrs
inc
mov
dec
sbb
scas
sbb
push
fs
jnp
jge
cmpsl
aam
andl
mov
pop
adc
adc
pop
xchg
add
xor
adc
int3
jno
lahf
loop
cmp
lahf
push
push
out
lock
fistl
jle
mov
pushf
pop
sbb
mov
inc
push
cmpb
dec
loopne
out
mov
popa
sub
cmp
sub
fwait
mov
push
add
sub
rcll
call
mov
adc
sub
xor
dec
adc
add
jge
mov
or
cli
test
test
cs
es
mov
fsubr
shr
inc
mov
daa
mov
in
loopne
pop
mov
push
xor
scas
mov
mov
push
sub
inc
call
stc
out
mov
dec
adc
sbb
mov
push
mov
test
mov
dec
scas
push
cmpb
loop
std
das
pop
adc
pop
aam
call
and
gs
cmp
jno
ret
and
lahf
inc
dec
jnp
stos
dec
les
dec
mov
ljmp
lods
gs
xor
adc
das
call
pop
dec
fiaddl
lods
push
and
adc
dec
fnsave
push
cwtl
leave
out
lahf
sbb
jne
int
mov
dec
adc
in
push
xchg
fstl
xchg
mov
and
mov
sub
std
ficoml
pop
jno
cli
shll
add
mov
add
sbb
enter
cmp
mov
popf
loop
scas
outsl
sub
jo
aad
in
sub
push
jne
fcmovne
pop
mov
sbb
mov
sub
loop
pop
je
sbb
in
or
loope
sbbl
in
into
adc
and
dec
andl
xor
out
incb
push
xor
daa
mov
or
shlb
test
into
mov
rorb
mov
bound
lds
adc
push
ss
call
fisubrl
and
pushl
call
mov
xchg
into
xchg
push
jae
pop
insb
mov
xor
pop
mov
sti
rorb
dec
insb
push
dec
jno
adc
loop
mov
nop
cmc
aaa
shrl
mov
lds
mov
and
cli
les
xor
int3
test
mov
jmp
jecxz
je
jne
out
sbb
or
lock
adc
pop
xlat
fbld
arpl
push
mov
shl
pop
shlb
dec
cmpsb
jno
cmpsb
je
pusha
pop
arpl
clc
js
jp
mov
imul
pop
rclb
daa
xor
cmpsb
test
push
and
dec
push
loop
int
dec
ret
out
and
cmp
sub
lea
cmpb
fisubs
xchg
mov
pop
xor
xor
shlb
pop
iret
dec
sub
jecxz
pop
push
aam
xchg
add
scas
pop
loope
das
lcall
das
inc
call
lret
shlb
pop
into
push
movsl
daa
mov
ja
dec
ret
sbb
and
dec
das
jmp
idivl
cmp
and
push
lea
cvtpi2ps
cwtl
or
fcomps
cwtl
inc
faddl
notb
push
push
jae
dec
xor
stc
cmpsb
dec
mov
xor
cltd
sbb
lods
mov
sub
imul
incl
and
jp
mov
aas
add
jne
shll
ret
fidivs
xchg
scas
pop
inc
jmp
pop
in
sarl
lret
shrb
pop
xchg
dec
fnstsw
outsb
pop
mov
push
cwtl
jne
movsl
aam
xchg
dec
xchg
push
test
fld
popa
aam
ds
dec
call
js
inc
ja
imul
cmp
sbb
idiv
scas
xlat
ljmp
pop
ret
push
xor
daa
int
jne
mov
mov
cltd
adc
or
inc
jge
xor
cmpsl
test
call
xor
fcompl
dec
out
and
ss
xchg
jnp
and
sub
call
mov
cmp
pop
loopne,pt
cwtl
lahf
pop
cmc
sti
test
xor
lock
push
fistpl
movsb
orb
or
pop
xchg
test
or
mov
inc
fwait
pop
jbe
into
std
fwait
mov
fisttpll
inc
mov
fimull
dec
test
xchg
pop
jl
xor
pop
into
repnz
inc
stc
stc
jbe
fcoms
push
push
mov
out
mov
out
cmp
or
sahf
in
lahf
sub
xchg
ss
cmp
dec
mov
mov
push
lret
fiaddl
xchg
push
xchg
mov
not
mov
ret
movsb
push
mov
subl
mov
ss
aaa
std
mov
xor
jne
sub
fisttpl
dec
pop
sub
call
inc
arpl
mov
jle
mul
call
push
in
jbe
fcoms
sbb
cmp
adcl
es
or
dec
sbb
xor
pop
les
or
cmpb
and
or
add
enter
insb
clc
inc
out
mov
fdivs
push
jnp
pop
outsl
adc
jb
movsl
inc
aad
jl
pop
movsb
imul
mov
cs
mov
sahf
in
jae
in
stos
stos
xchg
cs
mov
das
jbe
mov
jo
jecxz
enter
adc
aam
push
xor
sub
cs
mov
and
mov
lret
call
inc
cmp
je
sbbl
add
xchg
push
iret
fistpll
cmpsb
push
sub
lods
js
push
xor
push
mov
lods
pop
lahf
jmp
add
fldcw
sahf
push
push
cmp
xor
cmp
iret
clc
lret
cmp
inc
jmp
pop
fsts
xchg
cmp
push
notl
not
leave
fmuls
std
pop
or
pcmpeqd
test
dec
and
push
sarl
mov
sti
xor
movsb
mov
push
sbb
insl
loope
jae
insl
xor
sahf
xchg
mov
sbb
stos
push
imul
adc
scas
in
sbb
call
loope
mov
ss
psubsb
lret
xor
cltd
arpl
dec
jbe
rcl
push
ja
fnstcw
loopne
mov
push
icebp
or
jb
popf
cmc
ja
jg
lret
pop
xorl
lea
pop
cmc
gs
push
popa
inc
cmp
xchg
xchg
jns
sub
paddusw
jne
push
hlt
out
cwtl
cld
xchg
call
inc
ret
xor
bound
dec
ret
fidivs
in
popa
add
rcll
and
jg
sbb
xchg
loopne
mov
pminsw
repz
imul
pop
mov
cwtl
bound
sub
push
leave
test
mov
sub
call
push
cld
enter
add
aas
subb
xchg
add
ret
ljmp
cmp
xlat
stc
ss
lock
mov
loop
pop
mov
xchg
pop
nop
pop
inc
cli
sarl
jae
jnp
in
test
mov
shlb
push
stc
in
inc
inc
dec
xor
aas
fs
leave
or
and
rcll
xchg
hlt
push
js
into
lcall
pop
fidivrl
aam
and
lock
test
mov
fs
mov
jne
lea
insl
call
adc
inc
cmpsb
repz
fwait
mov
test
sub
dec
sub
or
mov
fcoms
mov
out
iret
call
out
iret
clc
adc
leave
mov
daa
jne
in
clc
addr16
movsl
jle
cwtl
das
cmp
imul
ljmp
lods
mov
jecxz
hlt
mov
arpl
test
stc
std
daa
fcomi
adc
push
push
mov
lret
repnz
fcoml
sbb
and
cmp
rcrl
roll
cwtl
mov
cmp
dec
jmp
hlt
scas
push
loop
pop
sbb
icebp
jne
int
subl
mov
dec
stos
call
pop
cmp
inc
push
mov
xorl
jno
jno
push
xchg
negl
stos
pusha
aam
push
cmpsl
push
clc
call
xor
pushf
mov
add
rcll
in
ror
jge
les
lods
push
inc
dec
dec
jl,pt
aam
mov
xchg
stc
adc
addl
fwait
icebp
mov
js
cmp
pop
mov
fnsave
jl
push
adc
cli
xor
int
xchg
lret
dec
pop
lods
lods
popa
and
cli
mov
and
jo
sti
test
xorl
add
dec
sbb
mov
jg
stc
dec
pop
pop
out
sub
lock
pop
cwtl
add
dec
loope
xor
pop
fisubl
dec
dec
out
into
cmp
orb
dec
scas
nop
jle
mov
xchg
mov
fsubs
jnp
inc
divb
test
xchg
scas
mov
sbb
xchg
add
sub
and
call
adc
jo
xchg
mov
add
not
jne
mov
sub
mov
add
push
or
sbb
pop
pop
nop
iret
xor
arpl
outsb
adc
ss
push
sub
xchg
jmp
pop
or
sbb
and
pop
or
repnz
jp
mov
cmp
cmp
pop
test
insb
push
pop
and
and
fiadds
push
push
dec
sbb
push
xor
mov
jno
adc
sub
sub
dec
jns
mov
lahf
arpl
sbb
mov
pop
fsubr
sbb
stos
xor
out
mov
add
movsl
sub
xor
sbb
xchg
jne
orb
mov
enter
add
in
xchg
loop
jb
addb
dec
pop
or
mov
xor
dec
and
jle
into
sub
imul
pop
inc
pop
and
mov
inc
inc
into
stos
xorb
lock
insb
lahf
negb
mov
std
adc
arpl
mov
jo
push
scas
dec
loop
mov
dec
push
call
sbb
xchg
dec
out
xor
fnstenv
test
xchg
pop
jo
neg
xor
scas
mov
pop
adc
cmp
fistpll
fsubl
inc
and
adcl
mov
enter
insb
into
and
stos
aad
jnp
or
mov
xor
lock
repz
adc
mov
adc
insb
xor
daa
mov
pop
mov
loope
fimull
cmp
push
lods
fs
pop
sbb
add
sbb
inc
cmp
sbb
and
daa
pusha
imul
clc
push
out
dec
das
sub
imul
add
adc
rorl
in
jne
xor
loop
cmp
push
or
push
paddusb
mov
movsb
insb
ret
sub
sub
push
aaa
loopne
push
xor
and
es
mov
shlb
pop
repz
fs
jp
lods
jb
popa
aad
jl
sahf
sbb
in
fisubrs
ret
mov
mov
mov
ss
inc
sbb
fcompl
adc
add
push
cltd
out
cwtl
jmp
cmpsl
sub
stc
xor
decl
sbb
scas
gs
movsl
sbb
mov
stos
pop
mov
inc
jno
dec
rclb
negb
pop
test
xchg
das
idivl
and
jno
lock
and
cmp
scas
sbb
cltd
rolb
daa
sbb
push
dec
mov
movsl
pop
mov
and
adc
jns
adc
inc
jl
pop
lods
outsl
push
mulb
iret
into
jbe
inc
cmp
or
outsb
mov
push
mov
std
push
fnstcw
pop
int
or
xchg
pop
ret
lods
das
stos
and
mov
into
loopne
mov
mov
ljmp
cwtl
test
repnz
sub
out
lahf
jnp
mov
lret
dec
add
jno
ljmp
mov
cmpsl
mov
inc
lods
xor
pop
or
mov
mov
loopne
popf
call
lahf
call
xchg
dec
bound
add
loope
loope
repz
cmp
mov
and
mov
orl
cmpsb
data16
mov
imul
push
and
adc
mov
repz
out
dec
mov
cli
jecxz
and
repz
mov
xor
das
pushf
cmp
sbb
ret
outsl
or
in
sti
push
jmp
add
lret
push
dec
pusha
pop
cwtl
outsl
stc
xchg
gs
sub
jo
inc
mov
pop
leave
mov
mov
ds
cmpsl
aas
sbb
xor
sbb
hlt
lret
jmp
incb
mov
filds
and
jl
jle
sbb
imul
xchg
xchg
add
jb
sub
adc
insb
mov
add
jecxz
pusha
fcmovb
pop
cmp
mov
pop
xchg
enter
out
pusha
in
dec
in
sbbb
lods
adc
pop
rclb
sub
sbb
pop
imul
xchg
sbbb
push
and
mov
add
and
mov
cmp
cltd
push
push
sub
jbe
movsb
or
in
iret
loop
push
aas
inc
sbb
pop
dec
movsb
repnz
mov
mov
pushf
push
jl
in
pop
adc
xchg
loop
adc
push
sub
stos
adc
mov
inc
mov
inc
sbb
ret
scas
pop
aas
in
mov
xor
mov
repz
cmc
xor
xchg
mov
sbbb
mov
pop
pop
sub
xchg
cmpsb
inc
xchg
scas
dec
adcb
or
push
dec
int
shl
loope
sbb
jne
xlat
test
rep
insb
divb
add
addr16
aam
cmp
dec
int
std
push
adc
mov
out
subl
fwait
xlat
repnz
add
and
dec
lock
iret
aam
imul
pop
sahf
push
rcrl
sti
repnz
pop
or
push
out
or
pop
aam
xchg
jns
in
xor
inc
inc
scas
mov
cmp
push
std
out
jmp
movsl
push
jmp
cmp
xchg
bound
mull
fcom
loopne
mov
inc
ret
lea
popf
and
fwait
push
outsb
push
sub
inc
scas
mov
in
aas
mov
in
jae
inc
popa
lret
sbb
and
add
ret
in
mov
mov
test
or
testl
js
dec
test
popa
pop
repz
cs
and
xor
or
ss
stos
xchg
push
add
push
fisttpl
dec
push
jp
imul
cmp
jge
sbb
push
in
test
lods
cmp
mul
hlt
pusha
aas
int3
scas
fstps
inc
xor
jmp
out
ret
mov
jle
sbb
cltd
leave
mov
mov
mov
imul
insb
xor
cmc
cmp
fwait
push
sub
fwait
pop
dec
ljmp
shl
ss
add
pop
mov
push
mov
jecxz
jne
data16
in
add
cwtl
pop
pop
sub
scas
dec
xor
inc
pushf
xor
dec
mov
mov
cli
je
movsl
pop
push
icebp
insl
mov
jae
out
imul
aam
imul
jl
mov
or
aas
imul
arpl
stos
sbb
sbb
mov
lret
xchg
out
push
stos
sbb
test
xchg
movsl
sub
jno
jl
inc
fisttpl
mov
nop
test
int
lahf
in
xor
mov
repz
jmp
in
insl
xchg
jl
repnz
sbb
mov
sub
shrb
or
in
popl
mov
jns
jmp
lods
les
jnp
mov
dec
rcll
shlb
dec
or
cli
push
push
fsubs
cmp
sarl
sbb
incl
mov
mov
or
lret
popl
sbb
div
dec
xchg
add
mov
sti
add
dec
cltd
sbb
sti
xor
leave
out
dec
nop
mov
add
ss
dec
jmp
clc
push
or
push
popa
or
jg
jae
shlb
stc
push
bnd
out
scas
nop
sbb
fldenv
leave
hlt
fdivl
adc
aam
fwait
loopne
xchg
mov
les
dec
adc
sbb
fstps
xchg
fwait
pop
xor
lock
ljmp
mov
andb
dec
inc
lods
pop
popf
push
aaa
pop
cmpb
mov
sti
adc
or
xchg
pop
cmovnp
xchg
das
ds
movsl
das
vmaxss
push
ja
jg
push
inc
ficompl
cmc
jnp
lret
sub
call
addr16
cmp
push
insl
adc
adc
push
xchg
aaa
imul
cmp
cmp
addb
mov
popf
cmp
xor
out
pop
out
lods
int
test
mov
mov
popa
cltd
mov
testb
outsl
mov
xchg
sti
and
daa
dec
sahf
imul
push
test
out
cmp
repz
adc
mov
dec
xor
adc
test
inc
or
in
ret
ljmp
pop
and
and
or
cs
out
lds
ljmp
ja
lods
mov
pop
jb
cmp
dec
fdivs
xor
cmc
and
inc
jno
mov
inc
xlat
mov
add
psrlw
push
das
ss
add
mov
loope
ds
add
loop
xor
movl
xor
out
loop
add
cmp
add
push
mov
sbb
shll
lds
sub
mov
scas
xor
fidivrs
inc
and
lock
inc
xor
das
pop
adc
pop
mov
sub
jbe
pop
hlt
pop
mov
push
shlb
outsb
pop
pop
sub
jnp
repnz
and
xchg
sahf
dec
mov
js
fimull
lret
gs
sbb
jp
stos
icebp
fsts
mov
mov
rol
out
cmp
mov
cmc
shll
lret
mov
sub
cmp
add
cmp
lret
rcrl
jge
dec
jne
pushf
mov
fmuls
cmpsb
cmpsl
push
out
jno
inc
and
sub
les
flds
mov
out
jbe
sbb
cltd
pop
push
das
in
fnstcw
faddl
jne
pop
mov
test
inc
fisubrl
pushf
nop
sbb
aad
dec
sahf
inc
dec
testl
xchg
xor
mov
sbb
imul
xor
dec
add
mov
or
call
or
lret
dec
stos
cli
imul
mov
and
pop
aaa
dec
in
mov
sbb
pop
sbb
mov
sbb
ret
mov
mov
out
sbb
mov
fs
jp,pn
pusha
jno
pop
adcl
sarb
push
ret
jmp
aas
mov
orb
add
sbb
lret
imul
repnz
or
cmpsl
orb
add
ljmp
jnp
inc
sahf
fdivrl
repz
stos
jp
test
inc
cs
inc
or
stc
pop
jg
pop
dec
and
xchg
lods
test
mov
aam
insb
xlat
and
inc
mov
pusha
or
loopne
sahf
and
and
sbb
sbb
mov
bound
aaa
popf
push
jp
fucomip
scas
cmp
sbb
arpl
mov
mov
outsb
fldt
enter
xchg
popf
jns
xor
mov
enter
repnz
notl
push
cmpl
cli
cmp
mov
pop
dec
mov
test
pop
rolb
mov
adc
jnp
and
jl
loop
cmc
mov
jle
xlat
sbb
shl
xor
jno
xchg
js
mov
insb
and
cmpsl
fcomps
cmp
in
xor
lea
aad
sbbb
xor
daa
test
cmpb
or
or
xchg
je
outsb
sub
add
insb
or
dec
jmp
ja
gs
ds
and
adcb
scas
xchg
popa
or
ss
daa
push
loop
pop
push
xor
not
mov
mov
fdivs
pusha
adc
mov
scas
dec
or
das
push
std
xor
jmp
inc
jl
jge
in
push
fisttps
add
cmpl
sub
xchg
dec
sbb
popa
lcall
push
fwait
test
iret
inc
stos
insb
xor
jmp
sbb
hlt
mov
cwtl
pushf
fcomp
out
mov
jge
pop
or
cmpsl
and
mov
cmpsb
andb
pop
mov
outsb
lret
pop
enter
scas
andl
cwtl
jo
fs
jae
pop
add
jno
addl
dec
push
adc
sarl
mov
outsl
xor
clc
pop
std
into
sub
lods
aas
sub
clc
mov
xchg
xor
cli
lods
andb
repz
sub
scas
cmpb
test
push
pop
jns
inc
pop
popf
outsb
mov
mov
mov
adc
nop
mov
adc
xlat
std
or
cmp
sub
mov
testl
and
lret
add
shl
insb
fcoms
pushf
shlb
std
mov
sub
dec
mov
incb
jno
shlb
or
call
xchg
dec
roll
jle
test
sub
adc
inc
std
test
mov
in
add
pop
mov
dec
insb
cli
je
or
xchg
insb
hlt
rol
or
add
dec
mov
movsb
push
in
shll
and
push
cmp
jns
stc
pop
xchg
sub
sbb
cmp
mov
lock
pop
fildll
jo
add
andb
into
ljmp
ret
in
enter
out
lea
add
repnz
inc
lahf
je
aam
mov
getsec
bound
pop
test
insb
pop
inc
imulb
pop
jge
xor
movsb
rcr
pop
xor
and
insl
sbb
push
lds
pop
repnz
pop
push
or
mov
mov
sbb
test
icebp
pop
out
or
js
push
daa
inc
int3
or
ret
loope
inc
js
jne
frstor
mov
push
imul
xchg
xchg
xchg
out
filds
arpl
sahf
pop
aam
lea
out
mov
mov
pop
test
inc
mov
clc
mov
lods
sub
sbb
imul
mov
movsb
or
mov
test
sub
sbb
cs
cmpsl
pop
enter
imul
andl
outsb
mov
or
and
packssdw
sahf
or
sub
push
add
jb
sarb
dec
add
test
aaa
sub
cmc
je
mov
out
lods
subl
int
or
adc
fistl
mov
mov
ds
pop
js
out
jmp
ret
pop
xchg
mov
jae
mov
xchg
loop
movsl
pusha
hlt
xor
xor
bound
and
dec
mov
movsb
mov
dec
rclb
sbb
pop
mov
aam
pop
xchg
aas
or
pop
in
cmp
popf
aaa
mov
or
test
fdivr
pop
iret
ss
push
scas
mov
cmp
pop
mov
sbb
lret
and
aam
push
dec
xchg
pop
insb
loop
dec
out
pop
pop
aaa
lds
aad
jb
es
inc
cmpsb
adc
cld
daa
pop
inc
bswap
in
push
aam
sbb
add
or
rcrb
mov
pop
cmp
inc
nop
jge
dec
push
sbb
xchg
jo
pmullw
fnstcw
lods
fdivrl
add
lds
mov
lock
rolb
add
or
repz
movsl
or
adc
or
rolb
sbbb
test
gs
or
jae
shrl
push
pop
or
fnsave
mov
sbb
mov
xchg
push
loopne
les
mov
sub
movsb
push
andb
ss
push
mov
popf
test
jecxz
insb
in
imull
cmp
push
jecxz
mov
mov
ljmp
sub
pop
ljmp
clc
pop
jno
pushf
mov
loope
xor
push
mov
dec
add
repz
dec
sbb
or
xor
gs
fcompl
insb
dec
adc
inc
pop
xchg
mov
sbb
out
dec
nop
popa
push
cmp
push
push
or
outsl
fimull
in
fistl
push
cmp
imul
data16
dec
lds
cld
add
jb
cmc
fistl
fcoml
dec
and
hlt
scas
jmp
in
push
fdivs
scas
sub
xchg
int3
aaa
adc
sahf
iret
cwtl
fldl
mov
mov
adc
and
inc
sub
clc
rcrl
mov
and
add
leave
cmp
add
sbb
push
mov
arpl
sbb
add
fcoml
jp
mov
inc
stc
and
cmc
jg
sub
pop
and
mov
add
mov
stos
rcrb
push
push
insb
sub
gs
rolb
enter
adc
pop
insl
loop
ja
mov
lret
xor
cmp
bound
push
inc
mov
adc
mov
dec
cmp
pushf
in
jno
in
add
or
add
jae
sti
adc
and
cld
in
xchg
loope
pop
pop
ret
jns
or
sbb
cli
add
dec
sbb
adc
jno
or
loope
xchg
mov
repnz
stos
fs
add
cmpb
imul
pop
xor
pextrw
cmp
cmp
scas
repz
loop
xor
mov
stc
inc
pop
mov
daa
mov
fisttpll
and
mov
jmp
inc
jno
popa
arpl
mov
xlat
in
out
adcb
data16
and
mov
loopne
lahf
ljmp
pop
mov
das
cmpsl
mov
jmp
add
int
pop
adcb
sbb
or
xchg
rorb
jmp
sub
cmp
push
in
pop
pop
clc
cmp
les
insl
jge
mov
xor
out
cmp
leave
pop
jae
and
sub
decl
sbb
adc
fstps
mov
mov
mov
dec
push
lret
ret
jno
ja
daa
pop
sbb
inc
pop
movl
mov
sub
rorl
gs
mov
movb
xchg
stos
xchg
xor
xchg
jo
inc
mov
pop
scas
fmull
mov
dec
loop
fildll
mov
jbe
subl
out
insb
mov
inc
test
and
out
insl
push
ss
jo
icebp
std
cmp
enter
mov
cld
cmp
ja
pop
lds
pop
iret
adc
lods
mov
jmp
or
add
and
xchg
repnz
jmp
int
sub
mov
cmp
or
xor
dec
outsl
aad
fmul
mul
and
das
add
inc
and
pop
jo,pt
push
lret
daa
jge
out
dec
test
cltd
movsl
sarl
jmp
jne
pop
xor
sub
call
in
fidivs
negb
cld
dec
mov
ret
xor
test
rcll
mov
nop
xlat
push
pop
in
pop
test
lret
and
lea
out
ljmp
mov
mov
ss
icebp
xchg
mov
cmp
cmp
fs
div
jnp
and
outsb
inc
cli
mov
call
pusha
mov
inc
je
je
mov
shld
test
lea
pop
out
fildll
addb
movq
pop
jmp
sbb
mov
stos
xchg
sbb
sub
rcrl
loop
mov
data16
test
xchg
dec
push
test
sub
jmp
sub
stos
out
vmwrite
js
sti
push
dec
or
cmp
sub
or
add
stc
sbb
jo
dec
imul
stos
xchg
mov
clc
fnstsw
add
iret
icebp
cmp
pop
sub
sbb
lret
mov
xor
cmpsb
gs
add
jae
divl
lods
cli
loop
and
mov
jmp
inc
imul
mov
xchg
mov
xor
ret
push
xchg
fwait
dec
jnp
das
jno
mov
addl
cmp
test
ja
xor
out
lea
adc
cwtl
ret
mov
xorl
lahf
dec
insb
cmp
push
loope
xchg
gs
scas
xchg
dec
int3
push
mov
and
ret
push
mov
lock
jmp
call
dec
test
mov
xor
fisubrl
cld
les
mov
mov
jge
pop
mov
sahf
andl
sti
insb
push
into
sub
xor
mov
imul
scas
mov
push
lea
lret
dec
out
dec
cmc
ljmp
mov
mov
xchg
mov
nop
mov
xchg
mov
pop
add
lret
pop
movsb
test
es
lcall
jae
mov
xor
xor
jmp
gs
adc
mov
arpl
test
push
sbb
nop
ret
ss
sahf
cld
push
decb
out
xorb
xor
test
mov
mov
add
inc
mov
outsl
mov
insb
das
clc
push
pop
xchg
add
and
sbb
mov
pushf
rorl
data16
pop
adc
or
xor
push
sbb
outsb
and
test
shr
cltd
pop
mov
xchg
mov
cmp
fdivrs
and
push
inc
js
cmp
xorl
fldl
scas
mov
out
ficoms
cli
daa
leave
arpl
or
xchg
dec
lds
mov
std
jb
inc
std
loop
mov
imul
sahf
adc
xchg
fimull
push
cmp
fidivrs
test
mov
cmc
or
fldl
or
push
lds
jmp
sbb
or
jmp
jmp
push
jg
loop
mov
mov
movsl
push
adc
or
push
pushf
aad
sub
rolb
jae,pt
lds
in
stos
inc
xchg
cmp
and
mov
lcall
addr16
jnp
ss
mov
bound
sub
mov
js
jo
xchg
or
enter
int3
out
stos
mov
std
arpl
lret
push
xchg
mov
jb
mov
sahf
iret
jns
sti
jbe
popf
jno
cld
jge
xor
movsb
ffree
dec
pop
sub
inc
stos
sub
mov
adc
xor
xorl
adc
shlb
adc
jb
cmp
gs
mov
sbb
fdivs
lahf
movsb
jbe
and
aaa
sti
hlt
mov
adc
adc
and
pop
or
popa
cmp
sbb
in
jp
cmpsl
jbe
movsl
push
mov
dec
test
cltd
sub
mov
jo
dec
loop
xchg
xchg
pop
lret
ret
in
dec
jge
add
dec
add
out
lds
ja
out
sbb
mov
add
xor
leave
fdivrp
iret
cld
decl
xchg
sub
and
inc
inc
mov
push
cmp
icebp
notl
add
pop
enter
int
jb
scas
lock
dec
cmp
and
ficompl
notb
lret
bound
imul
sbb
addr16
cli
lock
shrl
xor
jg
scas
push
xor
mov
sub
fidivrs
mov
std
insb
mov
add
jmp
inc
mov
ljmp
jnp
idiv
mov
addr16
clc
mov
arpl
dec
cltd
inc
jb
nop
imul
sbb
add
dec
pop
loopne
or
jnp
iret
jg
dec
stos
xchg
cld
xor
std
mov
imul
push
xor
jmp
andl
gs
inc
popa
ja
lds
adc
push
jmp
xchg
mov
cmpsl
adc
out
adc
xor
mov
push
xchg
stc
push
xor
xchg
fldcw
mov
enter
jle
cmpsb
fbstp
scas
mov
arpl
jg
push
adc
les
gs
fsubrp
mov
orl
sti
push
xor
ficoms
stos
fiadds
mov
test
lods
lds
jl
popf
push
test
sub
outsb
and
lea
sbb
lret
sbb
xor
decb
sahf
in
sub
dec
cmp
pop
arpl
aas
xchg
add
ret
jp
jnp
je
jb
divl
js
jae
mov
adc
stos
ds
nop
inc
push
inc
add
add
sbb
test
out
dec
mov
in
jmp
inc
repz
icebp
dec
cltd
jle
stos
test
in
scas
sahf
pusha
dec
push
hlt
sahf
jnp
rorb
cmp
mov
cmpsl
fstps
and
jnp
arpl
inc
add
loope
mov
mov
das
adc
ss
sbb
pop
xchg
jl
mov
je
cmp
jnp
loopne
out
mov
cmp
hlt
and
adc
xchg
cmp
shlb
repz
lock
cmp
jb
jne
inc
cltd
inc
fldl
push
pop
fistps
xchg
aaa
and
rol
xchg
fldt
mov
dec
xor
add
out
call
shll
addr16
add
popa
call
or
les
mov
jae
mov
les
test
mov
icebp
fstl
in
pxor
xchg
xrelease
int
or
clc
mov
test
adc
ja
fs
test
call
jne
stos
xchg
test
sub
and
push
cli
dec
stos
ficomps
push
stos
xchg
sbb
fdivp
lods
jae
fiadds
jecxz
cmpsl
data16
and
pop
mov
pusha
cwtl
push
lds
xor
pusha
in
mov
mov
push
pop
or
pop
mov
popf
jle
pop
jp
dec
sarb
aad
bound
movsb
push
sub
dec
and
ret
push
std
stc
daa
mov
es
pop
fimull
ljmp
and
divb
inc
mov
mov
roll
cmpsl
inc
or
js
inc
mov
dec
cltd
pop
mov
xchg
cmp
push
push
mov
mov
scas
or
mov
sub
push
clc
mov
and
mov
jb
adc
jns
cmp
inc
jo
lds
test
sti
sahf
sub
push
stc
jmp
loopne
outsb
clc
outsb
rol
stos
sub
dec
repnz
das
add
jns
add
push
in
repz
or
add
adc
and
cmp
xorl
push
cmp
outsl
push
popa
cmovae
aad
cmp
arpl
cmp
mov
cmp
lods
gs
je
xlat
jmp
das
xchg
les
push
adc
mov
icebp
push
pop
add
loopne
xor
mov
push
xchg
addr16
data16
push
adc
nop
pop
aaa
cmp
or
fcomps
add
adc
daa
mov
jp
jecxz
stc
mov
rolb
fimuls
push
or
adcb
scas
imul
inc
add
aad
dec
sbb
int
ljmp
rclb
cltd
xchg
xor
sub
dec
shl
cmp
and
sub
adc
lret
dec
dec
rcll
fwait
mov
inc
out
out
adc
popf
mov
mov
test
xchg
int3
mov
xor
jg
cltd
and
jmp
sar
jge
hlt
mov
push
or
rol
cmp
fcmovnbe
rol
xor
inc
sbb
mov
int
mov
test
push
cld
mov
pop
fstpt
dec
pop
xchg
movsb
sbb
adc
mov
and
fists
or
mov
jecxz
cmp
inc
test
add
or
pop
add
out
mov
mov
fiaddl
xor
hlt
pop
test
and
pop
fdecstp
mov
ljmp
fidivrl
jno
jmp
pop
orl
inc
into
xchg
shll
cmpsl
push
loop
imulb
clc
std
sub
ss
xchg
and
jmp
aam
jbe
scas
imul
test
pop
orb
inc
xor
xchg
data16
or
push
push
lahf
pop
sbb
sti
mov
sti
dec
add
lahf
xchg
lds
push
xchg
sbb
cmpl
xlat
push
fcoms
cmpsb
adc
lock
scas
inc
inc
mov
lods
ret
adc
add
pop
mov
clc
dec
cmc
fsts
lret
or
pop
xchg
nop
rolb
stc
dec
mov
adc
daa
addb
pop
pushf
mov
sub
int
stos
je
out
and
loope
movsl
mov
push
incl
jle,pn
lock
mov
sbb
pop
loop
in
loope
sti
inc
aaa
sub
aas
sub
repz
iret
dec
sub
sub
pop
xor
js
push
cmp
arpl
ja
dec
cli
out
jb
testb
or
xor
test
aas
pop
mov
fidivs
xor
nop
inc
cmp
mov
rcrb
lods
gs
daa
inc
ja
xorb
bound
mov
xchg
mov
push
pop
outsl
ret
and
adc
sub
or
fs
sbb
nop
cmp
add
dec
mov
xchg
inc
mov
xor
add
pop
mov
mov
ret
dec
imul
xor
jmp
xor
add
xchg
xlat
repz
fdivl
xor
push
jo
ss
push
and
mov
pop
jnp
jne
jbe
pop
mov
iret
in
push
jbe
and
cmp
add
sub
and
mov
clc
mov
dec
pop
cmp
cmp
pop
test
mov
lods
jnp
outsb
icebp
pusha
nop
push
adc
ret
push
pop
jp
shlb
loope
mov
xor
adc
ret
dec
mov
and
mov
addr16
jb
jae
sbb
stc
add
inc
dec
sub
movsb
push
mov
pop
fwait
sub
std
jo
xorb
cmp
inc
adc
enter
sub
test
cmp
and
test
insl
mov
std
mov
mov
mov
inc
cmpsb
sub
or
pop
mov
push
xchg
mov
cmp
xor
outsb
and
push
lock
push
das
fs
jae
and
ljmp
mov
enter
andnps
jne
out
jns
cmp
sarl
iret
out
std
push
and
lods
push
daa
adc
mov
call
xlat
or
lock
jne
jnp
xchg
aas
mov
in
xchg
js
mov
xor
lock
mov
cmp
outsb
xor
xlat
and
cmpsl
pop
jne
repnz
jbe
jmp
dec
jbe
or
adc
hlt
mov
clc
call
test
xchg
call
mov
or
popf
mov
push
inc
cld
lods
xor
dec
movsl
outsb
out
in
cld
and
shlb
lods
jecxz
fbstp
xchg
adc
aad
shll
movsl
call
xor
inc
ret
jg
sbb
xchg
mov
mov
rcrb
icebp
je
push
scas
xchg
out
loop
push
sarl
jp
arpl
pop
jle
insb
in
jmp
mov
loopne
mov
out
inc
arpl
push
xlat
jp
and
daa
xor
sub
daa
and
xorl
dec
dec
inc
xor
push
call
xchg
js
imulb
movsl
pop
pop
daa
repnz
icebp
int3
push
movsb
inc
jl
adc
icebp
ror
lods
movb
and
jns
jbe
lea
shlb
adc
shll
mov
inc
mov
dec
fnstenv
xchg
jbe
sbb
mov
mov
lcall
cmp
shlb
dec
lods
scas
pop
pop
enter
lcall
mov
enter
popa
cltd
xlat
sbb
pushf
lock
sub
test
fstpl
xchg
mov
push
stc
orb
and
cmp
fisttps
pop
popa
fcmovb
repnz
stc
add
sub
aas
stos
ficompl
adc
addr16
jecxz
and
jl
cmp
das
fistpl
inc
adc
outsb
mov
adc
mov
add
add
hlt
jo
mov
cmp
bound
out
pop
sbb
nop
out
dec
fdivs
xor
and
jb
pop
cmpsb
inc
orl
push
pop
and
mov
gs
lea
inc
mov
jecxz
lret
jp
or
test
and
insl
sub
mov
sahf
cltd
xor
jbe
fstpt
pop
mov
jbe
adc
sub
std
xchg
sbb
adc
jns
lock
mov
sub
mov
cli
and
test
