sbb
add
mov
sbb
push
rcr
cmp
add
lods
aad
push
cmpl
push
jg
mov
cmp
add
addr16
out
iret
push
int
lock
sti
cmc
es
push
ds
imul
aaa
in
add
int
loop
andl
dec
and
pushf
stc
mov
xchg
pop
lods
add
scas
stos
xor
dec
dec
addr16
sbb
jbe
in
test
scas
sarl
inc
rolb
decl
cmp
in
ret
pusha
xchg
mov
mov
sub
mov
mov
fcoml
pop
loop
popf
je
lahf
and
adcb
out
clc
mov
imul
xor
jecxz
mov
cmp
neg
clc
push
lock
out
mov
ss
int
or
or
mov
sub
pop
inc
sub
fsub
add
mov
out
lea
fs
adcb
jae
repz
push
mov
mov
sub
cmc
pop
dec
cmp
lahf
mov
push
push
movb
xor
fildll
lock
mov
or
push
clc
jb
cmc
test
and
arpl
cltd
addr16
popa
call
jle
mov
lcall
push
cmp
sub
mov
inc
cmp
xchg
bound
gs
pop
js
iret
rorl
add
push
jne
sbb
adc
cmpsl
mov
fimuls
inc
aaa
mov
flds
fs
inc
mov
out
mov
cmp
pushf
lock
nop
mov
in
cmpsb
sti
adc
cmp
clc
testb
adc
jno
cwtl
stos
lea
in
test
mov
cmpl
cltd
shl
xor
jae
inc
lea
inc
xor
jmp
fistl
pop
insl
mov
test
es
imul
out
xchg
mov
shl
xchg
pop
loope
jno
fwait
sbb
scas
xchg
in
aam
ds
jg
incl
jbe
mov
roll
scas
mov
push
mov
cmp
jno
xchg
sbb
inc
ret
xchg
pop
cmpsb
shl
xor
pop
pop
fldt
sbb
rclb
rcrb
jo
adc
int
push
scas
cmp
mov
cmp
adc
in
cwtl
stos
jbe
in
lods
repz
jbe
push
cmc
ss
sti
outsb
cltd
mov
xor
push
push
fsts
mov
shrl
je
push
xor
and
and
or
xchg
add
adc
in
in
mov
movsl
xor
and
cmp
jge
dec
sub
ss
add
jne
mov
nop
pop
jne
popa
jmp
sub
jg
mov
fdivl
loop
add
add
jmp
dec
push
cmc
push
push
mov
imul
fistl
sub
mov
stos
mov
xor
iret
out
clc
cli
pusha
fdivl
xor
mov
imull
call
lahf
cld
inc
inc
mov
mov
loop
mov
dec
cmpsl
in
jp
xchg
nop
sub
ja
iret
subb
or
mov
mov
cmp
pop
mov
add
add
out
dec
adc
and
test
or
movsb
ja
jmp
dec
and
sub
mov
xchg
fcmovnb
mov
rolb
imul
pop
dec
push
rclb
cmc
jno
cmp
lods
fld
dec
jnp
dec
push
scas
lahf
jle
adc
jle
push
push
pop
fiadds
inc
xchg
pop
pop
lods
mov
push
rcll
dec
dec
pop
mov
mov
repz
shlb
push
out
scas
ret
xchg
ja
ror
pushf
addr16
pop
and
jo
cmp
jecxz
xorl
dec
dec
xor
and
xlat
push
mov
mov
mov
mov
mov
dec
ds
cwtl
mov
inc
push
outsl
push
jne
cld
jge
or
xchg
mov
cmc
les
movb
pop
stc
pop
mov
pop
aad
notb
sub
push
pop
arpl
jbe
jecxz
or
enter
and
fcomip
stos
xchg
mov
xchg
dec
in
std
xchg
adc
in
pop
sub
sub
inc
push
xor
sub
pop
pop
xlat
sbb
lods
push
mov
xor
pop
or
les
mov
dec
mov
rorl
add
sbbb
scas
out
jae
test
dec
outsb
fstp
xchg
loop
push
push
push
in
push
sub
pushf
ret
xchg
jno
xor
test
daa
push
repz
dec
andb
jno
loopne
add
lret
mov
stc
in
xchg
jns
xor
aad
sbb
in
mov
add
cld
pop
push
out
pop
jne
lret
or
rorl
mov
jno
fstpt
jecxz
lods
adcb
mov
mov
xchg
lods
mov
test
shl
pop
mov
pop
cmp
loope
out
mov
loop
cmp
xchg
inc
sbb
jnp
add
push
mov
push
bnd
or
adc
mov
nop
or
loop
pop
xorl
jl
adc
push
pop
movsb
pop
fadds
adc
mov
mov
inc
or
test
mov
mov
adc
repz
adcl
ja
icebp
std
out
pushf
and
mov
push
sbb
cltd
leave
fisttpll
mov
fnstsw
sbb
ret
cmp
mov
cmc
test
dec
push
std
mov
dec
cmp
mov
cmc
mov
fs
mov
rcll
and
stc
lods
dec
push
and
dec
add
jne
dec
xor
push
jbe
cmpsl
jo
sbb
repnz
jno
xor
xchg
adc
subb
jl
mov
aad
xlat
pop
jne
fwait
xor
pop
lret
fdivs
xorl
sbb
iret
movsl
je
mov
popaw
xchg
mulb
push
int3
fmuls
sti
inc
in
mov
je
clc
pop
xlat
pushf
push
dec
lcall
sub
xor
mov
mov
ds
inc
clc
enter
leave
in
inc
mov
fwait
movsl
sbb
cmp
scas
pop
inc
andl
xchg
aaa
or
sub
lret
scas
aad
push
mov
pop
pop
mov
push
and
cmp
cmpl
addr16
dec
dec
or
mov
add
push
and
xor
add
mov
xor
push
push
rsm
mov
mov
jecxz
push
fcompl
mov
stos
xchg
dec
xchg
outsl
cmpsl
orl
pop
jge
scas
mov
mov
cltd
jl
gs
adc
insl
rcll
fmul
push
es
aaa
shr
addb
aas
pushf
sarl
xor
call
mov
mov
dec
mov
daa
mov
and
in
test
fwait
inc
inc
cld
xchg
out
lcall
adc
in
hlt
mov
lds
mov
push
or
fnstsw
jno
dec
fnsaves
sub
jp
aam
ret
std
fistl
xor
ja
mov
push
jns
gs
sbb
gs
pop
or
pop
jb
pusha
xchg
mov
pushf
mov
jecxz
movsb
jmp
ret
inc
test
mov
popf
sub
inc
mov
imul
dec
mov
outsb
ds
inc
push
push
stos
sahf
inc
add
pop
cmp
das
xor
bound
sbb
icebp
xor
or
mov
pop
rcl
or
and
push
pop
mov
dec
mov
imul
jbe
push
add
jl
std
jle
popfw
call
sti
dec
sbb
into
mov
into
mov
out
xchg
adc
and
jb
loop
pop
lock
js
sahf
jle
leave
stos
popa
or
sbb
mov
cwtl
popa
add
fstp
mov
cmp
outsl
dec
and
push
xchg
shlb
and
inc
ljmp
ret
jo
sub
xchg
cld
mov
shr
pop
xor
icebp
out
push
dec
jb
loopne
push
js
rorb
bnd
add
or
fucomi
loopne
cmp
lahf
pop
lcall
jnp
and
jo
jp
loope
xchg
xchg
movsl
ret
mulb
push
and
dec
xchg
push
in
push
xchg
mov
push
stc
shl
jae
popa
nop
stos
jnp
inc
notl
xchg
jne
hlt
adc
inc
out
sbb
mov
insl
jg
test
mov
dec
push
dec
std
lret
loopne
xchg
xor
rcrb
data16
in
sub
inc
pop
jmp
xchg
xchg
and
scas
push
inc
out
pmaxub
and
fucomp
sbbb
xchg
je
jecxz
push
adc
loopne
xchg
mov
lahf
sbb
cmp
aas
push
cltd
pop
cmpsl
call
das
push
fistpl
aas
lds
xchg
push
push
mov
test
sub
mov
dec
push
dec
bound
fs
ret
cmp
cli
stos
pusha
sbb
fsubr
inc
xlat
xchg
das
bound
cmpl
pop
rclb
adc
pop
lcall
es
cmp
fwait
sbb
xchg
pop
loope
sbb
mov
stos
in
jp
jg
lock
cmpsl
dec
cltd
sbb
add
ljmp
mov
mov
push
sub
pusha
cltd
inc
imul
dec
shlb
es
adc
mov
cmp
mov
sbb
add
cli
cld
je
pop
mov
cltd
xor
mov
mov
xchg
mov
inc
sub
lret
inc
loopne
sti
mov
pop
jl
jmp
mov
push
je
mov
mov
pusha
adc
push
sbb
popf
or
inc
adcb
loop
aad
mov
in
mov
dec
or
dec
dec
lcall
pop
push
inc
sti
sti
lret
pop
push
xor
mov
mov
cmp
xor
movsb
repz
xor
cld
test
jmp
xor
xor
sbb
movsb
cmpsl
fisubs
or
lahf
dec
inc
mov
aam
stos
or
stos
add
mov
inc
push
xchg
fsubl
sti
aad
out
movsl
mov
in
cli
xchg
jns
cmp
loope
lret
or
push
mov
imul
xor
sub
insl
sbb
cmp
movsb
mov
loope
inc
lret
sub
push
push
sbb
movsb
adc
fsub
jmp
popf
js
xchg
dec
in
add
movsb
push
test
inc
jmp
jns
out
out
cltd
or
repz
ja
inc
aaa
xchg
pop
repz
push
mov
and
or
lods
jl
jecxz
popf
push
sbb
xchg
enter
fdivs
pop
lret
outsb
pushl
or
mov
mov
fistl
test
xlat
push
out
cltd
ljmp
fists
ficoms
push
push
ja
pop
orl
jge
pusha
jl
in
lret
pusha
xchg
in
out
jecxz
pop
call
lods
jl
outsl
aaa
add
cmp
sbb
enter
insb
outsl
rorb
mov
enter
sbb
test
push
shr
push
cmp
jae
sub
or
pop
ss
sahf
test
popf
mov
je
xchg
dec
test
cmpsb
mov
in
pop
insl
mov
rcrb
mov
xchg
jge
pop
and
hlt
inc
das
cmp
push
xor
popa
mov
push
pop
je
mov
xchg
add
sarb
stos
pusha
cmpsb
push
cwtl
adc
xchg
testb
mov
gs
lods
cmpsb
test
push
loop
push
sub
push
arpl
in
push
xchg
cmp
ret
sbb
cmp
ficompl
pop
or
mov
inc
stos
std
cwtl
xor
loopne
daa
dec
sub
popf
mov
inc
lods
lcall
xchg
and
es
jbe
mov
sub
and
mov
push
aad
sub
and
mov
stos
pop
imul
sbb
mov
xor
push
mov
shlb
inc
fwait
movsb
mov
ljmp
adc
cmp
popf
jmp
mov
nop
cmp
lcall
fucomip
clc
ja
fisttps
mov
aam
xchg
cli
xor
jno
mov
loope
outsl
loop
jle
jnp
arpl
jb
insl
sbb
xor
mov
sbb
dec
les
push
test
jae
rcrb
or
pop
mov
pop
loope
xchg
xchg
test
imul
mov
pop
fisubrl
cwtl
cld
subl
and
imul
add
dec
in
mov
lahf
cs
in
add
mov
mov
lret
xchg
jns
dec
in
je
dec
dec
and
int
or
addr16
cld
xor
sbb
mov
inc
fisttpll
sub
xor
sub
push
inc
pop
mov
mov
mov
in
mov
sub
inc
iret
mov
cmp
frndint
enter
jecxz
enter
pusha
in
out
xlat
sub
cld
cli
in
push
xor
sbb
sub
push
into
ds
pop
arpl
cmpsl
cwtl
mov
sub
jae
outsb
scas
adc
pop
dec
or
into
aas
or
mov
stos
and
jmp
xchg
test
mov
aam
jo
push
shlb
mov
pop
ds
mov
push
or
dec
cmp
ds
mov
xchg
shrb
mov
xchg
lret
lahf
call
pop
and
mov
fs
sub
mov
repz
pop
pop
pop
pop
cmc
icebp
mov
cmp
xchg
out
and
push
lret
sub
fnstsw
in
test
push
call
call
dec
dec
frstor
lods
push
push
push
and
pop
jg
lahf
adc
and
mov
pop
or
inc
cmp
ret
int3
ja
and
movsb
rcrl
mov
sahf
add
add
inc
rcrb
mov
mov
xorl
adc
lods
jo
inc
daa
ljmp
inc
mov
push
cmp
repz
mov
jne
jl
xchg
cmp
in
inc
stos
cmp
leave
andb
imul
mov
push
lcall
adc
cmpsb
sbb
in
cmp
hlt
lret
cwtl
dec
adc
jb
xor
test
xchg
inc
mov
jg
and
dec
pop
dec
popl
add
xor
fldln2
cmp
add
dec
mov
nop
sti
cmp
and
in
bound
lcall
add
rcl
add
repnz
fcomip
roll
cmpsl
push
push
dec
cmp
push
mov
test
mov
addl
iret
outsb
leave
sbb
cs
movsb
xchg
iret
inc
sub
push
enter
ljmp
inc
and
jl
mov
gs
es
mov
xchg
mov
rolb
inc
js
or
mov
ficompl
adc
dec
pop
pop
cmp
xor
push
push
ss
mov
dec
dec
cmpsb
leave
pop
and
mov
sti
cmp
sarb
or
mov
sarb
fwait
call
mov
adc
ljmp
jl
in
nop
js
mov
jo
movsl
cli
add
xchg
cmpsb
arpl
rorl
sbb
mov
je
jb
mov
cs
ljmp
lock
cmp
lret
out
and
sarl
cmpsl
mov
cmp
in
fisttpll
hlt
dec
lds
out
fcoms
xchg
sub
or
je
nop
rcrb
jp
push
mov
fiaddl
pushw
add
pop
leave
push
inc
add
cmp
in
mov
arpl
into
insb
and
std
dec
filds
mov
mov
xchg
popa
scas
mov
push
dec
test
mov
or
jae
ret
mov
inc
sbb
clc
leave
jl
adc
mov
repz
addr16
pop
and
xor
xchg
pop
xchg
mov
pusha
jmp
imull
jo
mov
lahf
imul
stos
cmp
add
or
mov
int3
orl
dec
in
xchg
daa
out
arpl
jl
rcrb
inc
adc
add
jns
dec
ds
rolb
fwait
dec
fsts
or
jl
pop
mov
mov
fcom
jbe
add
lcall
push
jl
cmp
adc
dec
daa
jae
pusha
lahf
dec
dec
cmp
fistpl
in
mov
in
fs
icebp
mov
xchg
dec
lret
insb
sbb
gs
cld
pop
enter
cmpsl
adc
adc
and
pop
mov
push
mov
daa
or
dec
insb
out
mov
jmp
imul
fsincos
dec
mov
in
mov
enter
repnz
pushf
jl
lahf
sbb
insl
mov
je
leave
sbb
sub
repnz
or
mov
push
mov
cltd
in
cmpb
jmp
ss
cmp
cmpsb
test
mov
enter
ja
mov
stc
int
dec
int
sub
xor
cli
cs
cmc
lock
rorl
inc
stc
sbb
jb
lret
mov
sub
das
sub
xor
rorl
arpl
fst
mov
mov
mov
jnp
push
dec
xorb
adc
adc
je
ret
rolb
cmp
inc
mov
sbb
jl
in
push
rclb
int
lods
cli
ret
pop
mov
mov
cmp
mov
out
sbb
orl
lret
ds
andb
adc
rorl
out
or
jne
scas
loop
stc
ftst
mov
and
mov
insl
fs
sbb
stos
jne
pusha
lock
cmp
xchg
dec
adc
and
stc
addr16
cwtl
mov
aad
daa
out
imul
jmp
mov
cmp
jp
adc
mov
jmp
push
in
mov
push
add
data16
iret
adc
mov
dec
les
fwait
clc
push
test
fcomps
push
and
clc
insl
mov
add
sbb
sub
xlat
jl
xor
dec
pop
inc
jo
cs
xchg
push
jle
jae
add
jne
pop
add
xchg
push
lds
iret
pop
cmp
dec
lea
mov
fwait
and
mov
leave
les
leave
dec
and
and
mov
inc
cmp
inc
cmc
cmp
call
push
insl
mov
and
hlt
loopne
sub
test
mov
pushf
jg
xor
xor
lds
inc
pop
pop
push
incb
or
pop
push
loope
lret
dec
mov
lods
and
lret
ds
pop
test
in
loop
jno
mov
in
call
adc
subb
popf
sbb
sahf
dec
cltd
jle
inc
and
xchg
sahf
jo
nop
test
xchg
je
jmp
into
loop
pop
ljmp
push
mulb
pop
sub
xlat
adc
js
pop
and
jno
jmp
jns
outsl
lahf
les
push
xchg
dec
mov
inc
xlat
scas
imul
pusha
rol
adc
hlt
std
xchg
loop
arpl
out
xor
incl
inc
mov
xchg
lret
sbb
fs
aad
scas
mov
sbb
fidivrs
inc
cmp
cmpsl
stos
je
jl
ret
pop
inc
jmp
das
mov
lock
je
and
mov
sbb
cmp
dec
hlt
cmp
movsb
aad
mov
ss
xor
add
test
je
shlb
rcrl
and
les
mov
xchg
jle
mov
iret
lods
stos
ljmp
push
rcr
pop
emms
rcl
add
sti
sbb
push
xchg
dec
pop
pushf
stc
or
sbb
iret
mov
fwait
loope
call
scas
inc
jmp
pusha
cltd
jecxz
testl
jnp
inc
pop
test
subl
or
fcomps
and
lods
fiadds
repz
dec
imul
adc
dec
out
xchg
data16
pop
enter
data16
xchg
jl
or
sub
dec
enter
lods
int
cli
add
ficompl
add
push
test
and
mov
or
xchg
cli
ret
pushf
aaa
nop
or
jg
in
out
push
push
add
pop
push
rcll
out
push
fldt
mov
ds
jo
xor
add
mov
cli
push
test
stos
dec
out
jo
lds
in
sub
push
and
pop
rcll
or
mov
mov
jecxz
sub
mov
hlt
shll
movsl
pusha
dec
mov
ds
sub
sub
lret
mov
push
movsb
enter
and
cli
in
mov
jne
shlb
sub
sub
es
in
and
pop
adc
dec
jl
je
loopne
jmp
test
inc
cld
or
lahf
andb
sub
lahf
mull
aam
and
ljmp
mov
xchg
lret
cmp
inc
cmpsl
out
sub
inc
daa
sub
mov
int3
ficoms
add
outsb
mov
sar
addr16
shl
cwtl
push
lcall
sbb
js
cwtl
inc
int3
cmp
test
mov
cmpl
ret
adc
mov
jb
jb
movsl
negb
jno
or
sub
mov
into
enter
out
mov
loope
fisttps
cltd
push
into
push
sub
insl
hlt
stc
sbb
lock
pushf
pop
xchg
test
rclb
aas
jmp
push
pop
jecxz
jae
jl
shr
push
hlt
lret
andl
mov
sub
mov
inc
movsb
ss
xchg
insb
or
mov
xchg
sar
testb
xor
scas
pop
je
lds
or
inc
movsl
pop
xchg
test
push
shlb
mov
pop
mov
ret
lcall
lea
pushf
mov
fldl
jo
outsb
or
cmpsl
mov
adc
mov
xchg
imul
mov
mov
xchg
ret
adc
inc
idiv
cmp
mov
or
shr
mov
xchg
push
xchg
stos
enter
mov
movsb
dec
test
add
mov
fldt
pop
mov
mov
sbb
mov
ja
je
and
xchg
aam
pop
sbb
shrb
xchg
inc
rclb
sbbb
cmp
in
enter
push
mov
das
adc
xchg
jle
adc
popa
ljmp
jns
inc
mov
jnp
faddl
stos
nop
sti
stc
xchg
dec
or
adc
aad
and
sub
lea
clc
and
dec
xlat
xor
add
mov
repnz
adc
mov
jnp
in
push
out
mov
add
sub
dec
mov
sahf
adc
rolb
in
lret
jecxz
xchg
stos
mov
push
movaps
push
sbb
loope
xchg
ss
ljmp
pop
xchg
jae
lds
leave
fildll
ret
push
mov
ret
dec
fdivp
sbb
cmpsb
mov
sub
jle
sbb
or
scas
pop
into
sub
fdivrs
jle
pop
pop
lret
dec
imull
jecxz
or
xchg
adc
or
cmpb
js
cmpl
mov
rcrl
mov
mov
into
or
lahf
xor
lret
repz
sahf
int
out
sahf
mov
aad
xor
inc
sbb
ja
sub
jnp
mov
mov
xchg
pop
xchg
pop
pop
sbb
xchg
jne
jne
je
lahf
xchg
push
dec
lock
adc
pop
iret
outsb
cli
fcmovbe
je
loop
push
lcall
cld
cmp
inc
shrb
scas
aaa
sbb
and
mov
dec
or
addr16
iret
outsl
stos
jns
in
shrb
cltd
js
sahf
shr
jmp
pusha
mov
xor
jo
in
mov
push
clc
ret
mov
sahf
pop
fldenv
adc
xor
jp
mov
mov
pop
insb
xchg
pop
sbb
mov
add
roll
lret
sub
cmp
jmp
mov
ffree
and
cmp
xchg
cmp
mov
movsb
mov
mov
fistpl
icebp
sarb
icebp
xchg
mov
mov
sub
push
jl
push
xorb
jns
call
pusha
iret
push
jmp
cwtl
jp
push
dec
jle
test
dec
add
clc
sbb
lods
lret
aad
mov
inc
dec
jbe
cli
out
push
inc
dec
push
sub
push
dec
adc
or
add
xor
std
dec
inc
adc
outsb
adc
fwait
int3
inc
enter
pop
add
roll
test
xchg
jl
adc
mov
xchg
ror
xchg
jbe
add
addr16
sbb
mov
cld
xor
mov
add
push
in
jae
mov
mov
int
xchg
jae
adc
jno
add
out
jmp
loopne
xor
aad
mov
loopne
xchg
mov
movsb
test
cld
ljmp
inc
and
les
adc
add
inc
rcrl
ret
dec
cmpsl
push
mov
imul
sub
and
and
jb
mov
hlt
sbb
movsb
mov
add
scas
push
orl
jmp
xor
jge
aas
mov
stos
mov
inc
cmp
jge
or
pop
pop
inc
sbb
fistps
add
hlt
in
aaa
and
pop
mov
imul
dec
xchg
sbb
xchg
xor
push
scas
movsb
or
mov
cli
arpl
mov
and
cmp
lea
and
xchg
mov
loop
nop
mov
notb
in
or
inc
sbb
push
or
xchg
mov
xor
vpshufhw
pop
rcrl
jg
ss
pop
das
xor
dec
movsl
mov
cmp
scas
fistpl
xor
cmpsl
add
cli
lods
rcr
popa
cmc
adc
add
mov
ret
out
cmp
rolb
mov
pop
pop
mov
dec
push
cltd
add
rol
sub
push
lret
test
xchg
sbb
std
mov
pop
sub
sub
push
lods
push
pop
mov
idivb
mov
or
mov
pop
inc
movsl
adc
or
xchg
xchg
mov
stc
or
test
dec
pop
or
pop
pop
daa
add
and
or
dec
dec
push
push
je
dec
cmpsl
or
mov
jg
je
push
mov
leave
arpl
sbb
xchg
int
sub
in
cmp
loopne
mov
leave
mov
cmp
out
sub
mov
inc
jno
scas
cltd
and
sub
mov
cmpsl
ds
andb
add
mov
push
jns
pop
and
xchg
das
xlat
mov
add
xchg
jbe
or
add
stos
mov
add
and
sub
pushl
push
ret
loopne
ss
imul
inc
xor
cmp
test
nop
adc
sbb
push
ret
sub
push
mov
pushf
dec
pop
das
inc
dec
out
mov
icebp
pop
outsl
mov
and
das
xlat
push
loopne
call
mov
gs
xchg
in
sar
cmp
mov
xor
cld
in
inc
xchg
imul
push
xor
mov
lods
sti
test
filds
mov
pop
jo
adc
xchg
lret
in
popa
repz
lods
push
dec
loop
push
pop
test
cld
bound
xor
mov
push
push
out
cmpl
mov
outsb
imul
fs
dec
data16
jae
add
jnp
aaa
push
dec
push
jmp
fwait
int
add
cmp
clc
sbb
xchg
or
sbb
dec
mov
or
mov
lahf
add
out
cmp
arpl
nop
les
jo
stos
je
pop
adc
xor
out
push
sbb
add
jns
jbe
sbb
jmp
out
enter
icebp
int3
loope
movsb
out
loop
and
xor
scas
sub
inc
pop
je
xchg
gs
or
push
in
mov
call
xchg
adc
dec
leave
add
xor
sub
mov
pushf
adc
xor
dec
mov
into
shlb
sub
dec
ficoml
pop
cmp
sbb
adc
sub
dec
in
mov
mov
addr16
pop
into
into
pop
adc
xor
and
leave
scas
xor
lods
mov
int
mov
push
pmaddwd
xor
or
jb
mov
in
dec
mov
add
inc
mov
or
in
sbb
mov
add
es
repz
cmp
cmp
or
pusha
aad
lods
clc
mov
rorl
ret
dec
sbb
in
mov
fs
and
ljmp
mov
push
jl
inc
pop
cs
cmp
les
cltd
adcb
ss
imull
jge
loopne
push
adc
out
shl
arpl
inc
jecxz
cli
sub
fnsave
pop
sbb
mov
mov
dec
pop
mov
loope
jnp
mov
dec
pop
lds
push
xchg
enter
fidivrl
inc
leave
pop
jo
test
inc
push
insb
dec
mov
adc
cld
inc
cmp
push
rcrl
xchg
mov
add
cmp
shrl
cmp
and
pop
sbb
inc
ds
stc
mov
xchg
cmc
aaa
inc
xchg
mov
xchg
jmp
es
daa
push
xchg
std
push
pop
rorb
outsb
push
add
sahf
dec
jmp
jmp
jns
ret
cmp
jnp
jns
inc
arpl
leave
mov
xor
mov
sub
sarl
dec
xor
hlt
xchg
xor
xchg
cmp
sub
and
xorl
adcl
lods
cs
add
inc
push
dec
sbb
js
jb
insb
sbb
lds
in
xchg
lock
push
lahf
add
inc
imul
popf
mov
lods
push
fildll
jecxz
cld
in
or
aas
cld
jp
lahf
out
or
lret
push
repz
push
loope
pop
in
adc
fdivl
mov
add
int
push
xor
inc
test
rcll
movsb
icebp
and
mov
test
lret
xor
sbb
bound
push
push
roll
jecxz
pop
insl
inc
sub
push
pop
les
cmp
xorb
mov
sub
into
xor
adcl
mov
mov
inc
xchg
cmp
or
lret
pushf
sbb
mov
inc
dec
cmp
push
lock
sbb
rcl
sbb
inc
outsb
xchg
xchg
push
out
or
or
or
mov
mov
das
mov
jns
addr16
out
mov
fidivs
pushl
loop
xor
out
std
gs
das
fists
add
inc
jno
shll
push
push
loop
mov
xchg
mov
shl
mov
mov
fistpll
outsl
fsts
pop
push
in
ret
jnp
mov
mov
cmp
test
jmp
pushf
scas
insl
mov
adc
mov
cmp
test
push
xchg
inc
arpl
cmpsb
pop
push
inc
cmp
test
cmp
popl
rol
dec
dec
jp
cs
aas
loop
ret
pushl
js
aad
clc
popf
lods
mov
cltd
jno
inc
inc
insb
xor
lret
mov
and
add
sbb
xorl
sbb
out
cmp
addr16
cmc
pop
fnstenv
lods
jnp
rcl
jecxz
rcll
ss
imulb
out
aam
loope
push
dec
vshufps
lods
sbb
inc
cmp
sub
pop
jne
xor
mov
popf
scas
pop
outsl
out
fistps
xor
ret
jl
jle
adc
xor
std
mov
adc
adc
lods
lahf
mov
adc
adcb
adc
nop
int3
pop
scas
std
push
sub
jo
cltd
jb,pn
lret
sbb
xchg
pop
mov
pop
cs
jne
lcall
adc
xor
stos
in
loope
dec
lret
push
movsb
xor
or
add
loopne
insb
sbb
popf
int3
pop
xchg
inc
mov
repz
in
out
bound
in
enter
in
test
add
adc
jne
mov
test
pop
repz
xlat
es
arpl
call
or
pop
xchg
adc
movq
dec
pop
pop
add
inc
inc
mov
xor
adc
or
mov
mov
leave
das
jg
es
dec
sbb
mov
addr16
pop
test
xchg
dec
sub
insb
insl
test
outsl
imul
dec
adc
xchg
inc
call
out
sti
push
push
or
pop
out
aaa
in
outsl
push
jg
lods
mov
pop
ds
cmp
stos
mov
pop
jecxz
rorl
shrl
fsubrs
fists
jns
dec
mov
dec
push
fdivrp
cwtl
test
icebp
sub
xchg
in
fcmove
loopne
hlt
incb
pop
movsb
adc
mov
sub
sbb
dec
repnz
pop
test
adcb
jmp
popa
sbb
and
mov
icebp
xchg
adc
adc
mov
sbb
pop
and
xor
mov
xor
mov
push
add
nop
and
jge
dec
shll
add
cmp
out
cmpb
dec
jecxz
fmuls
pusha
jge
jge
sarb
adc
cmp
rorl
mov
xchg
repnz
push
mov
data16
push
mov
inc
cmc
cli
shrb
or
xchg
pop
jb
mov
sub
shll
js
pop
sub
or
daa
sbb
cmpl
aam
and
aaa
xchg
add
sub
cmpsb
cmpsb
fdivrs
cmpsl
lods
dec
xchg
push
sub
insb
push
popf
aas
lock
or
repz
xchg
addr16
cs
dec
nop
aaa
lods
gs
pop
shlb
daa
clc
add
arpl
jmp
jg
or
cmc
and
cltd
pop
mov
adc
xor
call
sarl
cmp
frstor
inc
es
dec
cmpsl
shlb
xor
orl
jecxz
icebp
in
add
jp
adc
repz
flds
icebp
test
jmp
sbb
andl
int3
mov
jp
cmp
insl
adc
cmp
dec
mov
fwait
xlat
add
sahf
mov
rcrb
mov
lods
pop
movsl
stos
or
in
pop
add
lret
cmpsl
fldl
push
mov
addr16
dec
cmpsb
inc
dec
adcl
push
fwait
jae
imulb
ffreep
cmp
arpl
cli
mov
push
mov
fwait
xor
cld
pop
mov
sbb
sbb
cmc
out
pop
out
xchg
lcall
jge
mov
idivb
insb
hlt
stc
lret
pusha
aas
jecxz
cli
jae
sbb
shrb
ret
inc
into
inc
out
adc
test
xchg
fwait
mov
repnz
es
xor
in
sbb
mov
dec
push
add
dec
int
imul
stc
lret
mov
dec
cmp
xchg
pop
pop
push
push
xchg
repz
xchg
add
cmpl
popa
icebp
fcomi
push
pop
mov
mov
or
push
mov
out
loop
and
push
pop
gs
mov
inc
add
jo
adc
cld
dec
and
call
sbb
call
mov
dec
mov
add
cli
movsb
jge
loop
mov
adc
sbb
push
sbb
dec
pop
ss
cwtl
inc
lret
lcall
sub
mov
mov
test
lahf
sarb
mov
daa
mov
xor
loop
cmp
in
cs
push
add
xor
mov
push
adc
push
test
ret
fcoms
ljmp
jb
inc
cmp
and
sbb
rcrb
lret
sub
daa
pop
pop
lahf
outsl
cmp
repnz
rclb
xchg
fisubs
pop
cli
lock
xor
faddp
in
mov
xlat
fldl
add
int3
jecxz
fwait
cmpsb
add
test
cmp
and
out
pusha
jl
cmpsl
clc
test
dec
inc
shll
cmp
pusha
fstpt
popf
das
fdivs
jbe
jae
push
lods
pop
inc
cmp
and
mov
inc
daa
and
shll
xor
pop
jno
in
xchg
or
daa
imul
cmp
std
push
inc
leave
mov
notl
cmp
jecxz
xor
sbb
mov
dec
mov
push
inc
stos
pop
cmpsb
inc
subb
rcrl
or
cmpl
ds
push
leave
add
arpl
fwait
or
add
jmp
std
in
xchg
jmp
mov
sahf
jle
mov
repz
fistl
sbb
imul
repnz
std
adc
mov
aas
mov
mov
jae
jl
mov
xor
movsb
dec
or
stc
sbb
dec
pop
xchg
cmp
sub
and
out
mov
add
mov
mov
inc
iret
scas
cltd
cli
adc
mulb
cmp
pop
negb
push
mov
jnp
dec
dec
lods
test
out
cld
xor
add
pop
imul
xor
push
mov
cmpsb
mov
cmpsl
mov
xchg
sbbb
push
sti
sarb
test
cltd
xchg
adc
lods
fistpl
dec
sub
outsl
push
xchg
push
mov
and
lods
inc
push
lds
dec
jmp
push
aas
jbe
cmc
pop
jo
inc
cli
lock
xchg
cmpsl
xchg
jp
inc
or
pop
inc
add
mov
mov
inc
sub
rorb
jo
inc
jb
sub
aad
add
and
cmp
mov
sbb
in
push
xchg
jo
cmpsl
cmp
lea
mov
sub
inc
xchg
mov
in
and
pop
lcall
sub
inc
mov
ret
pop
mov
xlat
cmp
mov
leave
push
add
dec
rcll
iret
ret
repz
fidivl
sbb
push
xlat
test
cmc
pusha
lds
mov
mov
scas
pop
sub
sub
fsubrl
mov
cmpb
test
or
push
jns
mov
sarb
gs
adc
out
mov
mov
pop
mov
repz
mov
push
dec
in
xchg
mov
shr
gs
push
xchg
and
lods
int
fwait
or
sub
inc
ds
xor
pop
mov
mov
nop
data16
outsb
fldcw
xchg
aam
push
mov
adc
rcrl
push
icebp
in
or
dec
pusha
lahf
in
mov
inc
pop
cwtl
cmpsl
jns
movsb
and
add
lea
sti
test
pop
jg
cmp
mov
rclb
clc
pop
cltd
js
ljmp
lock
sbb
fsubrs
repnz
stc
lahf
adc
pop
test
pop
dec
lret
pop
sub
lret
call
mov
inc
call
mov
jne
lret
push
jge
or
das
call
inc
push
jo
repnz
int
popf
add
repz
lret
imul
pop
mov
jnp
push
or
es
rorl
pop
arpl
xchg
pop
outsb
sbb
mov
and
push
decl
stos
lcall
xchg
or
in
inc
scas
sub
xor
cs
sub
inc
mov
adc
in
outsb
adcl
cmp
add
or
mov
mov
mov
mov
cmp
add
xchg
jmp
jge
dec
int3
add
sub
aad
sub
gs
rcll
clc
lock
enter
xchg
inc
mov
rcr
and
dec
dec
pop
mov
sti
inc
clc
add
enter
pop
inc
popa
jp
mov
jb
int
loope
xlat
in
fistpll
fstps
fcomi
inc
lea
rclb
ds
mov
dec
adc
and
jns
sbb
pop
dec
add
xor
cltd
cmc
ffree
mov
pushf
out
sbb
add
dec
bound
mov
adc
fisubs
pop
loope
out
mov
dec
pop
push
dec
faddp
cmpb
incb
dec
scas
or
dec
ljmp
jl
mov
out
mov
and
mov
adc
data16
push
adc
lret
movsl
out
pop
dec
test
jg
outsl
add
cwtl
fcomip
or
pop
jb
icebp
lods
sti
test
fimull
pop
scas
xchg
mov
pop
fisubs
pop
jno
mov
add
mov
das
push
dec
mov
fs
lret
and
xor
xor
add
push
jle
scas
pop
aad
shrb
adc
push
push
jae
sbb
cmc
pop
ja
orb
repz
hlt
xor
mov
jp
rcll
jl
and
insb
scas
xchg
pop
sub
xchg
mov
jle
xor
iret
test
adc
or
sub
mov
pop
clc
and
add
dec
push
lahf
fldl
jbe
sahf
pusha
fmul
and
pop
cmp
xchg
sbb
jl
pop
xor
incl
mov
push
sub
mov
fsubs
push
mov
fstl
push
jmp
lock
push
push
enter
loopne
pop
decl
mov
loopne
cmp
popf
in
rolb
sub
xchg
cmpsl
dec
cmpsb
aam
sub
pop
jb
fistpll
cld
fcompl
mov
adc
cltd
pop
nop
icebp
cmp
inc
xor
inc
movsb
or
add
sub
xchg
push
and
bound
cmp
hlt
lea
mov
cmc
pushf
adc
pop
sbb
lds
push
and
jmp
js
and
xchg
fisttpll
shrl
lahf
out
mov
cmpsl
int
int3
popf
subps
ds
push
lret
xchg
cld
cmp
movsb
loopne
pop
adc
pop
cmc
out
cltd
ds
xchg
cmp
pop
popa
mov
movsl
fadds
mov
mov
jno
stc
mov
ljmp
in
and
test
icebp
mov
lods
and
or
inc
in
lret
xor
sub
mov
scas
cld
cmpsb
js
jl
mov
stos
cmpsl
jns
clc
dec
dec
pop
sub
pop
xor
lock
dec
xchg
test
push
daa
sti
adc
loopne
cmp
aaa
lahf
in
mov
mov
lods
hlt
aas
xchg
push
lds
and
dec
or
push
push
mov
shlb
sub
pop
mov
mov
pop
bound
out
sub
mov
jp
stos
inc
inc
aad
pop
sti
lods
addr16
je
pushf
xchg
dec
jle
adc
sub
cs
pop
ss
dec
xor
mov
jno
sub
daa
pushf
inc
scas
mov
push
outsl
xchg
jl
inc
movsb
imul
imul
push
mov
nop
imul
in
data16
das
es
push
inc
mov
mov
pop
sbb
or
out
jg
xchg
and
adc
dec
pop
lret
inc
and
dec
shlb
jl
push
test
push
push
inc
jle
jge
sahf
mov
and
push
aaa
or
daa
ljmp
les
fdivrp
dec
sub
insb
jae
jb
jecxz
repz
js
jbe
push
push
push
xchg
es
mov
sub
mov
repnz
notl
push
imul
popa
stos
adc
pop
divb
les
jmp
fisttpl
fidivs
movsl
mov
cmpsl
and
pop
jns
subb
out
addl
xchg
xchg
ficoms
cmp
sub
jecxz
jl
push
adc
mov
negl
push
mov
gs
inc
sahf
inc
push
jge
sub
mov
insl
lds
movsl
fists
mov
push
add
jb
daa
testb
inc
push
pop
adc
aad
cmp
loop
push
pop
insl
and
jg
mov
xor
int3
aam
ficompl
jp
mov
lea
movsb
xor
sub
pop
adc
std
loopne
aas
in
fisubl
mov
sub
in
cmc
push
sub
ljmp
cmp
inc
out
jl
repnz
es
leave
xor
jle
movl
fidivrs
leave
dec
jo
inc
push
cs
frstpm(287
mov
mov
ja
fdivl
mov
add
popa
sbb
dec
or
mov
loope
or
int
add
jnp
jge
jl
sti
inc
and
inc
push
cmp
test
std
pop
fadd
add
pop
xchg
lahf
cld
sub
or
pop
mov
out
inc
push
mov
xor
push
movsl
jno
mov
dec
mov
popf
cmp
push
push
add
test
mov
int
sbb
jg
pop
cltd
loop
mov
call
pop
aaa
push
inc
sub
lea
fimull
sti
addr16
hlt
sub
sbb
sub
addb
cmp
mov
imulb
xor
sbb
rcll
or
or
add
jns
adc
inc
das
xchg
outsl
dec
lcall
sub
mov
sti
inc
and
ss
or
mov
pop
inc
mov
mov
scas
mov
add
fninit
and
mulb
loop
test
pop
push
mov
mov
mov
and
cmpsl
icebp
jae
lods
xor
addb
add
sbb
mov
cmpsb
cmpsl
fldcw
or
lret
jnp
popf
mov
subl
ror
scas
inc
mov
push
push
inc
mov
fmul
out
sub
rclb
insb
add
pop
and
mov
xlat
or
xor
fisubl
and
out
js
dec
loopne
or
popf
push
xor
dec
pop
xchg
cli
push
movsb
sub
inc
insb
lret
imul
testl
or
inc
mov
cli
in
test
cmpsb
dec
adc
shl
subl
adc
imul
call
and
fs
xor
in
cmp
dec
sub
sahf
inc
shlb
imul
fwait
add
adc
mov
ljmp
scas
iret
adc
mov
inc
jno
xchg
mov
and
rorb
xor
repnz
mov
xchg
lret
pop
mov
dec
arpl
jnp
mov
mov
insl
lret
cmpl
mov
adc
xlat
jp
movsb
in
cmpb
pushf
jg
and
jne
cmp
jp
sbb
push
in
jl
into
add
or
lcall
mov
in
cmpsb
mov
push
jl
push
jg
mov
inc
pop
pop
and
add
xchg
cmp
cli
cmc
jnp
sbb
cli
enter
fidivl
jmp
fisubrl
add
test
mov
adc
adc
cld
int
jle
mov
addr16
push
pushf
out
cmp
ficompl
nop
sbb
push
in
lods
push
sub
addr16
mov
sti
jns
arpl
ja
aad
lock
into
hlt
js
pusha
and
test
jle
out
outsb
movsb
adc
lock
jbe
jp
or
int
rcrl
out
sub
mov
xchg
sbb
and
mov
outsb
call
es
mov
cmp
push
je
nop
sub
pop
xchg
jp
popa
imulb
std
fldenv
lcall
add
imul
jb
pusha
fwait
test
pusha
rorl
mov
xchg
movl
movsl
cltd
leave
sbb
mov
into
out
lock
orb
jge
daa
and
add
jge
cmp
inc
les
popa
add
ret
xor
inc
call
subl
mov
cmp
cltd
pop
lock
push
es
inc
and
mov
rcrb
movsl
js
rcl
icebp
loope
jnp
hlt
inc
in
mov
adcb
out
sarb
popa
jmp
daa
hlt
loopw
lahf
mov
sub
pop
and
xchg
shll
dec
inc
inc
jns
mov
fldl
mov
fsubrl
pop
fisttps
mov
sbb
pop
ret
pop
mov
out
sub
cli
push
sbb
pop
pop
fstl
cmp
lahf
inc
and
push
test
data16
pop
mov
mov
jmp
ljmp
cmp
mov
push
sarl
sub
dec
pushf
cmp
sbb
mov
jne
sbb
popa
notl
xor
mov
mov
repnz
stos
sbb
leave
insb
add
sbb
pop
ret
ret
in
xor
push
xor
dec
negl
lret
test
lcall
adc
xlat
insl
pusha
jns
out
aaa
push
insl
rcl
pushf
push
in
mov
push
fldl
pusha
push
mov
jmp
xchg
push
sub
inc
mov
xor
xor
mov
nop
shll
add
sbb
fwait
sahf
js
cwtl
into
sub
in
gs
sub
call
xchg
lcall
sbb
movsl
xchg
outsl
fildll
mov
fistl
andb
rclb
aaa
pop
mov
push
jo
into
mov
xchg
xchg
enter
pop
enter
fnsave
fistpl
xchg
adc
out
insl
push
out
add
sub
scas
sbbl
out
cwtl
and
adc
dec
mov
aas
cld
clc
xchg
test
jge
mov
sbb
sub
movsb
sbb
sbb
dec
aad
int
lods
jl
push
pop
int3
in
movb
inc
and
inc
or
adc
insb
cmpsb
xchg
push
aaa
ja
ja
in
mov
xchg
pop
imul
cmp
pop
ret
dec
in
repnz
or
and
cli
mov
sarb
mov
push
lock
mov
jg
or
pusha
push
repnz
pushf
aaa
out
pop
pop
pushl
or
mov
xchg
cmp
imul
ss
jns
arpl
push
dec
push
lds
xor
add
fstpt
push
cltd
mov
jb
in
sub
pop
push
lahf
inc
or
ret
dec
mov
inc
jg
push
dec
xchg
hlt
fwait
inc
pusha
push
dec
rcll
ret
dec
mov
push
inc
mov
scas
cltd
popa
aaa
lret
movsl
aam
sbb
pushf
loope
loope
je
xchg
bnd
sarb
test
push
cmpsl
orl
ret
jae
or
cmpsl
aas
sbbb
mov
addr16
out
test
mov
pop
decb
jo
lds
dec
fstpt
addb
les
pop
pop
filds
sub
push
mov
or
jmp
add
scas
mov
push
adcb
push
push
xor
or
cwtl
push
push
adc
sub
adc
jno
pop
cld
aad
cmp
leave
lahf
pusha
add
adc
mull
xchg
rsm
fst
fidivrl
insl
pop
pop
js
sub
imul
and
dec
inc
dec
xor
add
jge
pushf
sbb
jne
fcoms
es
enter
int
cmp
xor
inc
push
or
sub
jge
cmp
outsb
test
lock
fwait
push
es
xlat
jl
sub
repnz
mov
jle
popf
aam
lret
in
dec
rorl
insl
in
aaa
mov
outsl
test
hlt
sbb
cltd
ss
icebp
cltd
je
add
sbb
pop
cmpsb
sub
push
mov
and
adc
cmpsb
pushf
clc
stos
inc
add
andb
cmpb
and
sub
je
adc
jl
imul
mov
pop
sbb
mov
pop
dec
xor
aas
mov
mov
lret
adc
sbb
out
and
sub
pop
cmpsl
xchg
adc
cwtl
jl
inc
mov
lds
test
xlat
andnps
adc
push
sbb
iret
pusha
cwtl
fiadds
lret
in
in
adc
sub
push
mov
mov
and
or
dec
jne
stc
lock
push
fs
insl
mov
repnz
pop
mov
outsb
loope
adc
jle
das
push
cltd
push
xchg
jae
test
xor
icebp
je
push
or
testl
outsb
into
push
and
ss
into
mov
or
jl
outsb
or
add
push
imul
xchg
sbb
test
jecxz
call
mov
push
aad
call
and
inc
push
pusha
call
push
in
lods
imul
push
mov
jecxz
xor
sbb
jge
mov
cmp
add
loope
pop
push
cltd
and
mov
pop
sbb
xchg
cmp
push
mov
push
imul
push
jbe
pop
push
fisubl
push
add
xchg
sbb
add
mov
sub
mov
into
stos
divb
push
inc
scas
mov
push
pop
in
ss
xchg
lods
addl
cmc
cmp
rclb
mov
cmp
pop
push
cs
and
imulb
push
xor
loope
hlt
jbe
mov
push
mov
cmp
sbb
cli
shll
add
lret
xor
loopne
or
mov
pop
and
andl
int3
popa
mull
push
dec
bound
sbb
stc
mov
sub
jmp
cmc
mov
mov
mov
mov
sahf
cmpsb
or
push
mov
and
adc
dec
leave
mov
push
jo
xor
pop
cmpsl
cmpl
fimull
das
xor
mov
inc
test
sub
clc
jae
mov
movsb
adc
out
pop
push
mov
movsl
pop
scas
iret
dec
add
or
into
or
roll
call
sbb
push
inc
push
fisttps
ds
mov
pop
adc
mov
decb
insl
or
jl
in
lahf
cwtl
idiv
pop
cs
fisttps
cmpsl
nop
or
movsb
push
ja
out
cmpsb
jp
nop
cmp
lock
xlat
sti
cmp
mov
je
and
into
and
mov
mov
iret
jno
or
icebp
pop
adc
cmp
fildll
xchg
push
mov
mov
cmp
dec
je
cli
in
bound
stos
adc
mov
and
sbb
pushf
mov
std
add
mov
lds
inc
test
mov
xchg
adc
inc
aas
sti
movsl
in
lret
pop
mov
iret
push
xor
or
jg
mov
aad
in
ds
or
iret
and
clc
aas
dec
push
in
clc
mov
mov
mov
pusha
das
cmp
int3
lcall
cmpsb
pop
push
jle
add
sbb
adc
sub
rcll
xchg
jecxz
mov
jmp
ljmp
xor
adc
lahf
out
jl
sbb
js
stc
movsb
nop
data16
imul
lea
xchg
mov
mov
lea
push
dec
lods
mov
lods
cmp
jmp
and
push
jg
aad
pop
bound
mov
mov
lahf
push
int3
imul
ret
jno
fimull
stos
mov
and
aas
lea
pop
lret
mov
adc
into
dec
mov
pop
fcoms
repz
and
roll
add
mov
addr16
outsb
cmpsl
pop
mov
push
rcl
lret
ljmp
cmp
lods
out
dec
cmp
insb
shrl
pop
jle
lret
mov
push
xchg
int
jmp
jmp
cli
popa
sahf
and
dec
popf
loop
cmp
insl
sbb
dec
jnp
mov
and
pop
xor
push
sub
bound
xor
mov
test
push
divb
mov
aaa
imul
test
mov
sbb
xchg
mov
data16
pop
in
xor
imul
neg
cwtl
xor
cltd
cmc
cmp
adc
pop
pop
les
aad
movsl
pop
stos
jg
mov
jp
jae
addb
mov
out
int
outsl
mov
pusha
in
jne
in
and
in
cmp
or
or
pop
pop
fisttpll
sub
aas
inc
push
aaa
loope
mov
mov
push
dec
xchg
aaa
les
stc
cmp
mov
add
out
ss
jecxz
sub
loop
mov
dec
loopne
mov
sub
xor
aas
pop
addr16
pop
rcl
ret
sub
add
cmc
pusha
or
ja
add
push
push
cmp
iret
pushf
xlat
in
mov
adc
out
push
fs
data16
pop
mov
pop
xchg
outsl
in
sub
fbld
orl
jb
movsb
movsb
cmp
nop
sbb
rorb
scas
push
inc
enter
sub
adc
pop
arpl
ror
es
pop
mov
dec
loopne
leave
or
sub
insb
inc
adc
test
stc
inc
sub
sub
cpuid
rol
movsl
sbb
inc
test
or
les
pop
and
xchg
jecxz
out
lea
mov
jp
add
mov
ret
fldt
xchg
push
xchg
xor
pusha
add
jp
mov
lahf
dec
push
sbb
mov
in
mov
insb
fnstsw
dec
xor
sbb
insb
inc
loope
push
sub
aas
lds
and
cmpsl
js
xor
cld
lods
neg
aad
cli
xor
sub
popf
dec
xchg
dec
xlat
xchg
mov
fucomp
cmp
fcmovbe
mov
clc
jbe
pop
lock
or
insb
xor
rep
xor
or
inc
mov
add
jbe
icebp
iret
ljmp
je
pop
mov
push
mov
int3
adc
loope
shrl
sub
add
adc
lods
fdivrs
ljmp
sbb
jbe
in
icebp
cs
cwtl
addr16
add
push
jne
out
mov
jo
and
inc
sub
dec
ja
xor
jg
ret
dec
mov
xor
test
and
xorb
mov
sub
lock
aas
or
xchg
adc
aam
dec
hlt
popa
dec
mov
pop
xor
add
add
orb
into
fwait
mov
xchg
jge
push
call
fucompp
dec
jno
insl
sbb
movsl
mov
shlb
cmp
mov
iret
and
lea
adc
cld
or
or
push
xchg
inc
cmc
mov
fs
push
add
les
fstpt
pop
sub
lods
mov
test
or
pop
pop
push
lea
mov
jno
lds
pusha
cwtl
cld
push
and
rcll
insb
movsl
roll
cmpb
lods
movsb
inc
int3
pop
sub
adc
adc
fistpl
aaa
and
and
repz
je
mov
mov
jecxz
pop
pop
movsl
shlb
mov
xchg
cmp
inc
leave
jmp
add
xor
imul
hlt
and
aad
mov
inc
jp
push
mov
jns
stos
cmp
pusha
mov
cmp
push
jp
push
into
jb
adc
mov
fnstcw
js
arpl
push
shlb
xor
cmp
mov
push
insb
xor
pop
out
inc
add
mov
lock
js
jp
pop
lret
cld
add
cli
xor
pop
in
arpl
pop
and
push
xor
push
loopne
in
addl
jge
jp
lds
mov
sti
jl
repnz
fwait
ja
mov
pop
add
cli
cmpsb
test
dec
fidivrs
xor
gs
adc
mov
cs
stc
testl
dec
sbb
scas
cltd
aam
clc
int
fsubs
notl
insb
mov
loopne
hlt
add
in
inc
test
rcr
outsl
test
das
push
or
mov
mov
outsl
push
icebp
dec
adc
cmpb
fs
mov
cwtl
popf
jne
pop
xor
xor
sti
xchg
pop
cmp
shlb
fsubrs
add
pop
std
jne
out
pop
insl
cld
dec
pop
outsb
hlt
test
jb
outsl
repnz
shll
test
cli
dec
test
dec
sub
inc
push
jg
push
aas
cmpsb
jge
jnp
inc
and
xor
mov
sub
test
jecxz
dec
push
mov
loop
or
sub
push
sub
xor
stos
pop
add
push
dec
testb
inc
mov
inc
push
push
in
into
push
rcrl
mov
mov
inc
andb
rorl
clc
into
mov
add
sub
shll
lock
ret
adc
enter
mov
pop
adc
in
push
mov
sbb
lcall
sub
jbe
fisttpll
push
xor
fwait
aas
ds
movsl
cmp
lret
inc
nop
xchg
adc
mov
inc
push
cmc
in
mov
sbb
fidivl
or
adc
popf
lcall
mov
ret
es
out
leave
adc
mov
fwait
int3
dec
cmp
out
loope
inc
pop
pop
push
mov
xchg
cmpsb
pushf
int
mov
cmp
xor
xchg
es
movsl
gs
and
cmp
call
loopne
test
adc
test
xchg
sbb
shlb
ja
roll
xchg
call
mov
mov
sbb
mov
rcll
cmp
les
dec
sub
sub
and
js
mov
dec
out
mov
stc
adc
jnp
mov
bound
adc
mov
sbb
ret
sub
cwtl
aad
xchg
pusha
push
push
sbb
insb
sbb
cmpl
dec
add
js
sbb
enter
imul
sub
cmp
dec
push
ret
cs
pop
dec
fimuls
pop
repz
push
jmp
cmp
mov
xchg
hlt
mov
out
xor
mov
xchg
scas
push
mov
mov
pop
cmp
icebp
cmp
push
je
push
loope
pop
sbb
pushl
std
push
or
push
push
aad
mov
ret
into
xor
rcrb
lock
movsl
xor
cmp
inc
jmp
movsb
pushf
jmp
push
and
jmp
or
xor
cmc
jl
clc
pop
sub
dec
cmp
pusha
or
add
push
inc
xor
pop
pop
add
lea
xorb
dec
push
outsl
pop
add
nop
je
or
mov
fdiv
icebp
lds
xor
rol
repz
aas
inc
lahf
cmp
pop
nop
fidivrs
push
insl
mov
jo
cmc
sub
push
into
xchg
add
leave
addb
sbb
xchg
and
xorb
and
xor
test
lods
xchg
jnp
and
fstpl
xor
iret
push
mov
sahf
test
fwait
dec
cmp
add
outsb
mov
sub
inc
lock
leave
sub
insb
mov
sbb
jns
jmp
shll
mov
rclb
leave
rcrl
cmp
sbb
fldl2t
xchg
sahf
mov
pop
in
xlat
and
xor
out
mov
or
mov
sbb
mov
les
push
daa
dec
cmove
loope
or
pop
ret
xor
xchg
insl
mov
inc
js
insl
into
in
loop
pop
jp
jmp
insl
or
int
mov
lods
adc
sub
and
xor
push
retw
scas
add
pop
sbb
pop
es
and
adc
dec
out
sarb
push
jmp
sub
add
lods
call
or
es
loop
pop
mov
call
lods
ret
test
mov
fxch
or
clc
and
popa
cmpsb
xor
mov
dec
in
mov
xor
pop
jns
cltd
add
ja
lea
bound
sahf
jnp
mov
xchg
or
mov
cld
push
cmc
fstp
hlt
call
mov
scas
rorl
adc
adc
lahf
in
jg,pt
jno
leave
inc
xchg
adc
jl
sub
cmpsb
gs
mov
xchg
or
stos
rolb
mov
cli
stos
inc
test
lds
sti
push
insl
lea
inc
cli
stc
imul
arpl
adc
mov
push
push
add
std
add
xor
xchg
xor
dec
mov
pop
pop
dec
sbb
adc
mov
not
seta
popf
in
shld
xchg
add
iret
push
in
and
pop
jb
sbb
mov
sub
xorl
inc
adc
inc
mov
mov
addr16
sbb
out
lods
pop
mov
out
leave
push
rcl
adc
and
outsl
lret
adc
pop
pop
fsubr
bound
inc
int
ret
push
pop
xlat
inc
add
push
jmp
cli
dec
dec
mov
ficoml
sbbl
dec
jge
cli
xor
and
mov
and
xlat
push
push
mov
cmp
aad
push
sbb
fnstcw
insb
pop
lahf
jmp
out
ds
test
fwait
ds
adc
les
fs
ret
add
imul
or
out
sarl
push
mov
dec
aaa
or
test
jns
add
jno
pop
icebp
pop
test
stos
and
int3
jb
aas
mov
andb
push
mov
pop
mov
sub
sbb
mov
mov
ja
insl
loop
pop
xchg
leave
push
jb
pop
sbb
int
mov
sbb
dec
loop
mov
lods
fisttps
fidivrl
icebp
push
xchg
out
popf
dec
and
mov
test
arpl
sbb
sub
add
push
jbe
jnp
lret
das
xor
cwtl
mov
data16
and
in
pop
insl
adc
loopne
aam
les
push
out
hlt
mov
push
xchg
lret
adc
and
fs
int
and
ja
or
mov
push
sbb
mov
dec
inc
pop
pop
and
mov
stc
xor
pop
mov
inc
dec
scas
daa
cs
jns
inc
sbb
stc
xchg
adc
clc
and
jmp
dec
es
in
loope
popf
bound
adc
inc
add
sub
in
inc
stos
jge
lea
loopne
fwait
out
leave
sub
repz
jnp
scas
daa
mov
push
mov
push
and
shr
and
insb
or
inc
xchg
jl
pop
cmp
cwtl
test
cmp
shrb
ficoml
pop
test
mov
push
jne
jae
xchg
lods
xlat
test
stos
clc
mov
movsb
fadds
out
sarb
xchg
filds
jp
ljmp
xchg
sbb
dec
mull
push
pop
mov
sub
or
aad
push
clc
cmpsb
insl
or
adc
add
mov
cmp
in
xchg
mov
fs
jbe
jecxz
dec
mov
roll
icebp
outsl
xor
sbb
in
stc
test
in
out
mov
sub
in
mov
inc
mov
aad
sahf
movsl
imul
mov
adc
in
mov
roll
scas
in
push
lret
dec
sub
decb
iret
sub
loope
fiadds
xrelease
mov
sbb
fsubrs
xchg
orl
xor
fnsave
xchg
int3
xchg
jno
add
pop
adc
sahf
mov
cmpsl
ja
adc
lods
dec
push
add
mov
leave
sbb
mov
push
push
insl
imul
mov
sub
aas
out
lahf
pop
adcl
or
push
cmp
or
in
jnp
ss
or
jp
jae
imul
mov
scas
pop
int3
and
mov
adc
movsl
outsb
or
jmp
idivl
jae
scas
jecxz
mov
lock
scas
mov
mov
rdtsc
jb
scas
lahf
in
xlat
dec
xchg
inc
push
mov
sub
loop
push
fisubl
mov
mov
xchg
arpl
sub
into
outsl
fldcw
sub
pushf
xchg
aam
mov
xchg
in
xchg
lret
int
cli
scas
imul
movsl
mov
mov
or
add
lret
repnz
jo
lret
ret
inc
xchg
sbb
repnz
aam
push
pop
cmp
test
xor
test
mov
aad
and
or
dec
cmpsl
fstps
idiv
sbb
inc
inc
mov
jbe
lods
mov
imulb
pop
js
stc
pop
aas
lcall
push
mov
jmp
sub
xor
int3
pusha
sub
into
leave
adcl
cmpxchg
ljmp
cmp
je
pop
insb
aas
je
cmp
into
mov
jp
fidivrl
add
inc
repnz
mov
or
push
std
mov
inc
stos
adc
and
cmp
xchg
and
nop
push
mov
aad
or
push
add
cmc
and
sub
andb
loopne
dec
and
movq
xor
cli
sbb
mov
push
jae
jmp
int3
cmpsb
lea
and
inc
add
cmc
push
lods
shl
xor
and
or
xchg
pop
fadds
aad
call
sbb
mov
mov
dec
aaa
add
hlt
dec
fsubl
out
imul
and
fucompp
fistpl
inc
sbb
dec
cmc
mov
outsl
or
or
sahf
pusha
inc
movsl
imulb
cmp
lods
ja
lds
xorl
imul
xchg
xor
jg
cmp
adc
inc
or
xor
mov
cmpsl
orl
xor
dec
lds
xor
adc
and
out
adc
fcomps
stc
stos
test
add
jbe
stc
dec
fnstenv
xchg
xorl
jo
popf
adc
sub
loope
lret
popa
imul
sbb
or
and
call
xchg
jecxz
insl
dec
push
dec
adc
lods
push
xchg
pop
mov
adc
and
sub
lcall
xor
setge
fs
cmpsb
adc
xor
dec
repnz
and
dec
iret
xchg
hlt
xchg
mov
stos
jp
faddl
aaa
jg
int3
dec
dec
xor
popf
dec
loop
and
stos
cmc
adc
push
mov
mov
sub
stos
clc
jg
dec
sahf
adc
sarl
pusha
ret
cmp
gs
dec
pop
push
xrelease
sbb
movsl
lock
dec
mov
fistpll
dec
xlat
lret
adc
mov
mov
adc
jae
sbb
hlt
call
rcl
enter
mov
add
pop
les
lahf
sbb
sti
or
xchg
rclb
cli
or
add
aaa
push
mov
hlt
cmp
std
ficompl
imul
lahf
mov
in
sti
ficoms
cmp
push
push
push
adc
out
call
push
out
addr16
sub
mov
lea
mov
push
pop
mov
sub
dec
movzbl
mov
xchg
sbb
stos
int3
dec
cltd
lahf
cmp
adc
dec
xor
ficomps
or
pop
stos
cmp
sub
sarl
push
aam
mov
and
mov
daa
inc
cmc
jb
aaa
xor
sbbb
mov
clc
push
dec
push
and
fwait
insb
xchg
or
pop
adc
mov
fstl
imul
idivl
test
mov
movnti
int
lea
pop
xchg
push
xchg
jo
push
out
mov
and
sbb
lret
or
cltd
es
or
add
jecxz
sbb
jmp
adc
dec
addr16
xor
xor
incl
sbb
loopne
pop
dec
push
add
mov
out
sub
sahf
mov
iret
popa
jae
add
cmp
push
add
nop
popf
arpl
out
mov
cmp
jnp
lods
mov
jecxz
adc
inc
js
movsl
xor
rcll
pop
and
not
nop
andl
mov
into
push
ret
lcall
fwait
gs
add
mov
pusha
mov
mov
cld
jge
xor
inc
shll
imul
daa
ss
loopne
pop
popa
mov
jmp
xor
adc
mov
aas
mov
pushl
ja
dec
ja
dec
mov
loope
in
xchg
in
jb
or
xchg
sub
insb
add
dec
aaa
push
pop
cmp
orl
adc
jmp
xchg
jmp
add
cwtl
dec
mov
sar
or
push
into
int3
pop
add
jno
subb
inc
gs
xchg
sti
out
and
rolb
lock
dec
movsl
mov
push
fsubrl
push
fdivl
push
or
aaa
rcl
das
adc
test
int
idivb
jle
mov
push
not
fstl
int3
or
leave
jbe
mov
lock
call
jp
lret
loop
cmp
sbb
subb
fsubr
cmp
pop
xor
pop
dec
and
cmp
jp
cld
test
movsb
push
stc
mov
and
mov
aad
loope
mov
and
xor
xor
jb
addb
sahf
mov
pmulhw
and
iret
adc
lret
add
test
ja
mov
ds
lea
sar
adc
mov
pop
aam
ljmp
and
inc
ds
fdivrl
pop
movsl
neg
jp
lret
push
mov
adc
pusha
inc
mov
lahf
push
das
jbe
in
dec
insl
aad
mov
mov
inc
push
jbe
movsb
fwait
lret
arpl
pop
inc
je
syscall
loopne
out
mov
mov
enter
dec
sbb
xor
fiaddl
and
cltd
ret
xor
and
sub
cli
jl
cwtl
insl
xchg
fnstcw
xchg
js
ss
int3
pop
sbbl
fstl
in
sbb
xchg
inc
jl
adc
mov
push
add
jle
inc
iret
jne
sbb
xchg
pop
nop
pop
mov
xchg
sbb
mov
rcrl
xchg
adc
sti
xor
sub
push
cltd
loop
nop
fnstenv
adc
pop
loopne
mov
loop
outsb
pop
loope
cmp
sbb
xchg
xor
add
repz
ljmp
lcall
or
pop
insb
cmp
jno
xchg
add
cmp
sbb
cmpsb
jae
call
xor
adc
dec
das
popa
aam
in
shrl
out
movsl
pop
fldt
add
je
and
jecxz
ds
jb
push
xor
fidivs
inc
push
and
dec
test
push
adc
mov
sahf
adc
call
sub
push
xchg
insb
ret
push
cld
push
mov
rcll
insl
push
test
jge
int
mov
insb
adc
xor
push
imul
lahf
jbe
jns
je
aam
dec
dec
scas
bound
pop
jo
js
loop
mov
sub
jmp
test
xor
push
inc
sbb
inc
lret
in
jp
ljmp
sahf
out
fistps
std
mov
popf
jne
pop
flds
test
sbb
mov
mov
je
sahf
push
test
cmp
adc
mov
cmpsb
push
dec
sbb
ljmp
pop
xchg
mov
push
stos
insl
movb
shlb
adc
or
xor
es
test
addr16
repnz
lock
sbb
pop
sahf
test
call
movsl
roll
iret
push
jne
stos
out
and
adc
out
shrl
ret
hlt
pop
test
movsl
push
cmpsb
push
out
add
aas
mov
mov
lds
ja
add
rclb
inc
add
fldl
adc
mov
xor
and
sbb
and
cmp
je
pop
mov
mov
inc
fldcw
clc
popf
jne
daa
xchg
mov
xlat
sub
jecxz
sahf
mov
sbb
repz
sub
mov
pop
pop
dec
into
jmp
cmpsb
push
scas
ja
add
lahf
adc
cmpb
mov
pop
sub
enter
jmp
and
pop
add
lret
int
xchg
mov
dec
pop
push
cs
ret
adc
mov
ja
pop
loopne
test
sub
popa
cld
push
lret
mov
ja
cli
adc
and
dec
insl
mov
sbb
jecxz
cmp
xor
les
push
add
push
sti
xchg
dec
lods
ja
push
xchg
pop
adc
or
scas
xor
ljmp
jbe
cmc
dec
jmp
ret
mov
xor
mov
add
scas
push
lea
gs
add
inc
test
xor
adc
addr16
add
xor
leave
test
js
xchg
insb
sbb
cmpsl
cmp
push
sub
pop
lcall
fcmove
xor
shll
mov
xchg
test
pop
shl
rorl
daa
es
lret
jg
mov
inc
add
inc
arpl
bsf
arpl
sub
in
mov
mov
ljmp
push
decl
cs
jmp
in
fs
pusha
or
xor
add
lret
jp
jmp
std
rcrb
sbb
add
mov
gs
popf
jno
jmp
pop
jbe
sbb
and
das
xchg
popf
pop
push
gs
dec
mov
add
cmc
mov
leave
adc
mov
leave
lock
adc
xchg
std
lret
pop
aad
dec
push
test
push
enter
add
cmp
push
push
jnp
xor
mov
imulb
xchg
sub
scas
notb
sbb
rcll
jg
mov
jnp
pushl
push
cmp
mov
call
test
fidivrl
push
adc
add
add
jl
pop
add
cli
add
cmpsl
mov
addb
dec
xchg
sbb
inc
aam
push
mov
cltd
in
jp
jbe
pop
push
push
out
pop
mov
or
idiv
mov
add
or
test
dec
shll
sbb
xchg
jne
je
adc
mov
lret
pop
adc
pop
pop
add
push
cmpb
sbb
cld
xchg
sub
pop
outsl
ret
xchg
leave
jle
cmp
mov
xchg
subb
arpl
xchg
lea
and
xchg
sub
lahf
mov
xor
gs
xchg
addr16
rcr
cmc
pop
mov
jae
pushf
movsb
hlt
inc
push
jp
stos
or
mov
add
pop
pop
xor
xor
mov
pop
insb
insl
sub
adc
test
mov
mov
fbstp
mov
mov
fcompl
rol
rorb
sti
enter
push
adc
ret
jle
mov
inc
jo
scas
xor
or
push
dec
dec
insb
mov
or
test
fisubl
pop
shll
mov
insb
cmpsb
xchg
adc
shrb
inc
leave
call
imul
sbb
fwait
aas
test
jge
fwait
inc
repz
out
cmp
mov
aad
xchg
mov
and
mov
divb
fbld
outsl
adc
icebp
pop
mov
decl
les
loop
jo,pn
daa
or
xlat
adc
cwtl
mov
roll
mov
clc
jmp
mov
lret
cmpb
bound
mov
bound
mov
pop
inc
mov
cld
mov
aas
out
dec
jp
jg
shl
dec
int3
jg
jmp
pop
out
daa
mov
cmc
mov
andl
cmc
rcrb
push
outsb
mov
loopne
xor
lret
fs
stc
cmp
dec
mov
and
xchg
jnp
adc
push
mov
in
fwait
sbb
lods
pop
inc
add
fsubl
iret
aad
addl
stos
sub
lret
repz
lret
mov
fsub
das
out
push
notl
movsb
xchg
xorb
push
sbb
xchg
insl
push
into
mov
mov
sub
xchg
sub
pop
xor
xor
leave
xchg
rorl
test
sahf
jae
arpl
negb
mov
cmp
dec
push
mov
ret
cmpsb
loopne
enter
cs
int
icebp
cwtl
sub
jnp
xchg
mov
pusha
cmpsb
into
mov
popa
push
inc
dec
sahf
or
je
mov
mov
cld
arpl
dec
lcall
aad
pop
repz
push
jecxz
or
cmp
cmp
imul
jae
andb
dec
or
mov
cld
jns
inc
xchg
leave
adc
mov
xor
jg
mov
lock
push
pop
or
jge
les
sbb
div
adc
push
enter
sbb
cmp
ljmp
push
dec
add
adc
fs
cli
push
mov
push
dec
and
cwtl
fwait
dec
test
shlb
mov
ss
jae
pop
pop
cmp
cmc
nopl
pop
xchg
pop
cld
pop
enter
pop
adc
mov
aam
andl
lock
push
jmp
incb
lock
push
xchg
or
jbe
inc
add
mov
mov
pop
add
notb
jne
cwtl
test
rorb
cld
lcall
push
shll
sub
mov
imul
push
xor
mov
insb
icebp
xor
div
enter
fwait
dec
jae
cmp
and
mov
jg
mov
mov
or
xlat
and
ror
and
sub
sar
jge
jmp
inc
xor
add
jb
xchg
mov
shrb
inc
mov
bnd
mov
mov
pop
inc
push
jbe
in
inc
sbb
stc
sbb
mov
mov
jmp
mov
ds
je
test
push
push
push
and
aaa
add
pop
addr16
hlt
dec
push
push
push
test
sbb
cmp
sbb
sub
mov
xchg
icebp
dec
inc
scas
int3
out
or
xchg
jmp
inc
mov
jmp
addr16
js
popf
jmp
mov
gs
xor
lcall
jno
or
pusha
cmp
aam
pop
mov
mov
adc
push
mov
ret
je
int3
add
jg
pusha
arpl
jecxz
leave
cmp
mov
lods
out
ljmp
push
inc
clc
jle
test
jg
shlb
jecxz
aam
bound
sbb
imul
lods
gs
insb
lds
in
mov
dec
sahf
push
movsb
xor
inc
and
out
jmp
push
mov
mov
mov
lods
je
loop
and
fnstcw
or
sti
mov
idivb
mov
sub
lcall
xlat
inc
lods
stos
fstpt
repnz
xor
mov
ficomps
aad
aaa
add
inc
dec
sbb
jle
mov
and
hlt
and
mov
jl
nop
xchg
adc
mov
test
add
sub
test
popa
or
inc
adc
mov
mov
in
cmp
jnp
subb
cmp
popf
or
adc
and
add
and
fxch
cwtl
add
xor
lds
js
push
out
sub
mov
mov
dec
and
loopne
popf
pusha
subb
pop
stos
insl
mov
or
negl
daa
and
scas
push
or
nop
loopne,pn
jne
inc
cmp
xlat
hlt
jnp
pop
pop
leave
int3
imull
movsb
or
pop
mov
pushf
fsub
rcrb
arpl
or
jo
repnz
push
jg
roll
xchg
sbb
jb
lods
pop
xor
adc
dec
inc
push
inc
lods
cli
in
or
sbb
repz
loop
clc
push
dec
outsb
jnp
arpl
mov
sub
jbe
fwait
gs
mov
ss
inc
push
sbb
in
je
rcr
push
test
fcompl
inc
std
and
stos
mov
push
add
sub
push
pop
outsb
and
aaa
inc
pushf
push
test
push
fsubs
outsb
sbb
dec
jno
adc
outsl
sub
jne
xor
adc
xchg
sbb
adc
add
jmp
add
mov
mov
pop
cs
imul
into
and
push
cmpsb
dec
aas
push
sub
popf
mov
sub
out
inc
lds
orb
inc
mov
xor
cmp
jnp
and
rorl
call
fists
leave
sub
cmpsb
cmpsl
call
mov
sbb
adc
popf
and
out
out
and
cmp
ljmp
and
arpl
testb
push
sar
shr
cmpsb
sbb
pop
xchg
cmp
out
sbb
pop
sub
mov
xchg
shrb
sbb
hlt
inc
push
test
inc
sub
fmuls
ja
xor
jne
pop
jmp
push
pop
imul
jg
push
and
xchg
or
rorb
mov
clc
adc
shll
sbb
xor
mov
jg
push
stos
fidivl
mov
push
int3
jae
and
bound
pop
outsb
pop
fs
filds
mov
and
mov
push
fidivs
ss
inc
outsb
lods
out
leave
pop
dec
imul
out
vmwrite
leave
sbb
and
dec
je
sbb
es
pop
loop
leave
dec
aas
call
iret
mov
movsb
cld
mov
inc
repz
scas
mov
popf
jge
xchg
insl
push
int3
xchg
das
pop
insb
cmp
roll
mov
jg
pop
sub
or
mov
test
cmp
repz
in
ret
or
mov
pusha
push
int
mov
scas
push
sbb
insl
lahf
aad
or
mov
mov
test
mov
hlt
add
inc
jnp
cmp
adc
push
cltd
aad
stos
pop
adc
imul
popl
push
or
push
out
cmpl
mov
adc
pop
cld
rolb
cmpsl
and
mov
inc
jo
loop
sti
inc
adc
repnz
sub
stos
fistps
mov
test
cwtl
in
bnd
fnstenv
dec
or
mov
xlat
push
mov
xor
pop
push
dec
pusha
out
push
pusha
push
jne
xchg
in
inc
adc
lahf
fldenv
test
fildll
scas
insb
popa
es
test
popa
fnsave
movsl
jae,pt
in
xchg
mov
push
sbb
jno
incl
push
or
aaa
mov
push
outsl
lock
sub
data16
sbb
mov
xchg
loopne
mov
gs
xchg
leave
cltd
and
mov
faddl
test
cmpsl
sub
push
mov
sbb
mov
push
icebp
rcrl
je
push
fistpl
mov
pop
fistl
movsb
and
mov
xchg
push
pop
enter
insb
es
leave
std
call
cld
push
and
pop
xlat
pusha
push
js
fisttpl
int
movsb
mov
pusha
mov
cltd
mov
ret
xchg
push
sbb
mov
push
dec
xchg
fildl
sub
test
pusha
adc
xor
repnz
mov
test
add
test
mov
mov
add
rcl
addr16
or
xor
and
or
fcoml
dec
xor
ficomps
cmp
pop
mov
ret
rorb
js
addr16
sbb
addr16
flds
inc
fiadds
lcall
jnp
nop
into
push
cbtw
iret
add
push
xlat
mov
adc
call
inc
ss
jle,pt
jp
mov
xchg
mov
sti
mov
pop
inc
fsubrs
sbb
inc
and
xor
je
mov
scas
add
xor
sub
and
orl
xchg
stos
dec
adc
fs
jg
sbbb
mov
pop
arpl
sbb
cmc
pop
pop
je
mov
and
in
das
inc
cmp
pop
xchg
pushf
mov
stc
repnz
mov
gs
test
cmpb
mov
sahf
sub
and
mov
xchg
call
loope
dec
out
repnz
imul
adc
imul
or
je
jb
push
lret
sahf
inc
mov
pop
xchg
and
cmc
in
sbb
daa
lahf
sub
and
adc
sti
sub
xlat
test
cmp
jp
gs
pop
inc
sbb
jno
and
adc
dec
and
pushf
ss
mov
popa
into
mov
add
iret
cltd
lret
adc
ss
pop
movsl
dec
imul
jno
int
pop
push
in
jbe
xor
fistpll
jle
shl
sub
pusha
dec
lret
insl
aas
cltd
xchg
loop
call
inc
mov
das
mov
jb
iret
xor
in
fcoml
test
daa
jl
mov
mov
lods
ret
pop
xchg
push
push
pushf
add
jp
in
jns
mov
fs
sbb
lret
xor
fdivrs
jl
jl
lret
leave
xchg
pop
movsl
and
ds
xchg
fucomi
ljmp
mov
inc
inc
mov
mov
push
mov
aad
or
xchg
int
aad
xor
aad
notl
mov
sbb
cmpsl
leave
repnz
addl
mov
add
imul
inc
rcr
shlb
in
ljmp
mov
popf
push
insl
dec
jg
call
bound
jno
mov
lods
es
xor
in
adc
adc
arpl
mov
stc
popf
lret
cmp
sarl
stos
inc
rorl
push
push
stos
inc
mov
pop
loop
test
ja
pop
add
scas
cmc
mov
sar
and
fcoms
sarb
mov
pop
lds
sub
mov
dec
or
mov
idivl
xor
cmp
movsl
ja
out
push
lret
cwtl
lret
cmp
pop
dec
loopne
adc
mov
sub
jae
out
adc
int
iret
pop
mov
push
arpl
pop
pop
fisttpll
mov
fsts
cmpsb
inc
mov
shlb
leave
outsb
adc
and
movsl
mov
int
cmp
loopne
or
cmp
mov
movsb
in
or
and
lret
adc
dec
frstor
jo
stos
mov
in
fwait
adc
dec
out
sub
stos
je
pop
mov
sbb
rorb
inc
jge
test
cmp
test
cltd
push
cmp
pusha
xchg
icebp
gs
ret
maxps
lcall
cmp
mov
and
popf
xchg
mov
popa
jnp
xchg
mov
into
ficoml
leave
xchg
mov
mov
mov
ds
pop
aaa
mov
repnz
scas
jp
add
loope
clc
push
cmp
in
outsb
repz
stos
push
mov
leave
popf
adc
dec
xlat
ljmp
ss
xlat
test
sahf
push
cmp
add
xchg
popa
fs
and
in
sarb
sub
sbb
mov
mov
cmpsl
push
arpl
std
test
dec
push
xchg
cltd
and
fildl
mov
and
inc
arpl
xchg
mov
imul
insb
in
add
mov
hlt
lcall
incb
inc
inc
add
mov
in
cs
or
xor
sbb
xor
push
popa
repnz
js
sub
mov
mov
adc
insl
hlt
inc
sub
dec
push
es
js
pop
mov
lods
scas
push
push
xchg
xchg
jbe
cmp
jnp
ds
inc
loope
sahf
inc
rcrb
mov
sub
jae
sub
push
sub
and
nop
xchg
out
stc
rcl
popa
push
dec
subl
ret
jne
cmpsl
mov
inc
push
cmp
leave
add
inc
imul
rorl
cmpsb
sbbl
nop
ficompl
mov
xchg
mov
push
jne
sarl
fimull
add
ret
jmp
std
sbb
nop
das
pop
sbb
mov
mov
test
mov
pop
inc
add
mov
aam
mov
cmpsl
pop
call
in
int
jne
mov
aas
push
in
pushf
mov
arpl
stos
fisttpl
je
in
mov
mov
in
inc
mov
test
push
stc
hlt
cmpsb
cmp
out
xchg
xor
pushf
mov
shl
rclb
orb
gs
adc
aad
pop
dec
xchg
leave
out
cmp
mov
stc
xor
dec
jo
lcall
mov
pushf
aam
adc
sarb
and
into
nop
popa
or
mov
pushf
adc
dec
sub
in
enter
mov
mov
jle
pop
stc
adcb
mov
insl
aad
mov
jle
addl
dec
mov
sbb
inc
notb
push
js
pop
mov
mov
and
xchg
pop
testl
sarb
insl
ret
push
sbb
repnz
xchg
or
jp
add
lea
out
pop
repnz
xchg
aam
cmc
fnstsw
dec
sbb
lods
pusha
loope
shlb
cmc
push
jae
jnp
push
popa
xor
add
push
pop
cmpsl
or
cwtl
lock
cmc
inc
notb
fwait
icebp
xor
xor
aaa
ret
dec
idivb
fsts
loop
add
andb
push
sbb
in
fwait
cmp
dec
pop
inc
sbb
repnz
push
jne
addr16
jmp
arpl
mov
cltd
hlt
push
insb
popa
xchg
nop
lock
aam
in
cmpsl
jne
fisttps
or
into
inc
pop
push
dec
sbb
jne
outsb
push
push
dec
dec
mulb
test
sbb
divl
adc
aas
push
sbb
mov
push
shr
dec
mov
push
mov
add
ljmp
fwait
mov
cmp
rorl
out
cld
out
mov
fwait
push
int3
jno
rol
xor
add
xchg
cmc
shll
imul
mov
cmp
lods
jne
xchg
add
dec
mov
dec
jo
or
add
addr16
outsl
orb
mov
mull
repz
stc
add
dec
imul
lds
cmp
ret
ss
mov
add
bound
aas
pop
lock
cmp
xor
lret
push
rolb
add
sub
in
pop
lods
in
pushf
iret
mov
pop
std
les
jno
mov
aas
mov
dec
nop
lahf
cli
test
sbb
mov
aam
pushf
sub
mov
lret
inc
stc
adc
out
ds
repnz
sti
enter
pop
add
js
and
rcll
mov
xchg
pusha
les
in
xorb
xor
inc
sarb
cwtl
lods
xor
and
or
pop
in
dec
movsl
movsl
jno
stos
sahf
mov
lret
test
mov
sbb
sub
fnstcw
push
lods
bound
sbb
sbb
ret
add
leave
mov
adc
test
call
lcall
xchg
mov
int
jnp
sbb
sar
or
ja
das
xor
nop
sbb
std
push
add
sub
bound
stos
xor
push
repz
loope
inc
or
dec
xchg
les
sbb
mov
jge
lahf
push
out
rcrb
mov
pop
jmp
fimuls
pop
test
push
imul
mov
sbb
stos
adc
pop
popl
cmc
xor
imul
jne
repz
arpl
rclb
je
jp
inc
lret
xchg
adcl
mov
aas
add
popa
imull
sub
out
test
xchg
mov
inc
dec
and
std
daa
out
pop
test
mov
ljmp
pop
rol
and
outsl
stos
gs
test
cld
mov
inc
push
outsb
jbe
adc
jbe
in
pop
xor
inc
call
or
dec
sub
cld
std
sbb
imul
in
aaa
adc
imul
xchg
scas
sahf
cmp
cmp
imull
mov
pop
mov
mov
jns
test
add
mov
mov
mov
inc
or
data16
sub
ficomps
dec
cmp
push
mov
leave
jp
mov
mov
jg
lds
dec
pop
pop
cmp
mov
loopne
into
ret
mov
loopne
jle
sbb
out
pushf
arpl
push
adc
and
or
mov
xchg
mov
mov
mov
push
dec
or
inc
pushf
scas
aas
sbb
xchg
lea
xchg
adc
xchg
inc
jns
push
xor
in
ret
dec
sub
je
test
pop
out
pop
andb
sbb
cmp
adc
xchg
punpckldq
add
test
outsl
mov
cmp
pusha
push
mov
push
and
fcmovu
adc
rolb
cmc
or
or
mov
rol
cli
icebp
add
mov
in
stos
xchg
lds
stos
hlt
ds
repnz
data16
shrb
inc
add
iret
aad
es
jp
mov
xor
std
out
cmp
mov
push
arpl
pop
jb,pt
pop
repz
shrl
movsb
cmp
movsb
fisttps
shrb
ja
jp
xor
testb
vpminsd
add
adc
iret
mov
fstpt
cmp
or
lods
push
and
dec
sarl
popf
pop
imul
cmp
xor
test
pop
xor
lods
and
sub
clc
in
jo
push
cltd
repnz
mov
gs
iret
fsts
pop
pop
cli
adc
fcmovnb
sahf
fistpl
outsl
je
cmp
shrl
lret
add
dec
inc
push
in
xor
out
pop
out
mov
or
push
or
xchg
push
push
popa
loop
and
jle
push
cwtl
xor
push
jmp
add
into
dec
test
movsl
popf
and
mov
fwait
inc
sbb
insb
js
fstpt
dec
push
ljmp
jmp
dec
fsubl
pop
fwait
push
scas
movsl
mulb
add
jp
jno
cmp
rcl
fisubl
mov
or
adcb
mov
mov
push
sbb
inc
aad
orl
popa
adc
adc
push
push
sub
xor
sub
outsl
fsub
xchg
jecxz
sub
mov
data16
fld
or
inc
adc
xor
scas
sbb
mov
jae
out
sti
ja
add
xchg
cmc
test
imul
popl
xchg
pop
adc
aas
sbb
sub
add
sub
repnz
inc
test
dec
sub
mov
add
mov
ss
ja
push
dec
jae
scas
xor
mov
mov
gs
aam
push
stos
sub
sbb
sub
cmp
push
adc
ja
cmp
mov
cld
xchg
and
jg
adc
and
add
sbb
jle
mov
aad
cmpsb
movsb
mov
loopne
fcomps
mov
and
add
inc
sbb
or
ret
mov
mov
das
stos
xor
sbb
lahf
jg
add
sub
ret
ret
inc
mov
push
jnp
jns
and
cltd
jp
lock
sub
in
push
les
pop
cmp
ja
sbb
sub
ja
lea
fisttpll
cli
sahf
add
inc
adc
adc
mov
movsb
and
jmp
inc
adc
lods
inc
mov
sbbb
xor
jg
pop
jns
pop
sub
loop
dec
loopne
nop
insb
test
or
popf
clc
push
sbb
shrl
fisubrs
fadds
mov
leave
aad
jl
pop
pop
add
dec
and
or
add
sub
sahf
dec
xor
rcll
cmp
lret
fcoms
pop
sbb
or
sub
lahf
pop
lret
xor
dec
mov
fildl
sub
jl
xchg
movsl
mov
stos
mov
jb
daa
mov
in
xchg
inc
popf
ss
ds
ljmp
in
dec
lret
nop
xchg
add
push
mov
popa
add
lcall
cli
fsub
in
adc
jne
sbb
nop
jo
xchg
inc
add
fwait
push
scas
pop
insb
xchg
aad
dec
mov
add
cmp
inc
jecxz
inc
scas
dec
or
sbb
xorb
subb
in
nop
scas
inc
lcall
pop
jecxz
mov
cld
and
adc
into
arpl
dec
jne
call
call
sub
test
jbe
mov
mov
push
scas
xchg
xchg
cltd
xor
in
sub
or
scas
dec
rcr
mov
push
pop
mov
sub
or
mov
cmpsb
fwait
movb
test
fidivrs
int
xchg
repz
imul
dec
cmp
jmp
fwait
loope
lods
sub
inc
mov
push
push
das
and
addr16
ds
push
loop
test
fldl
and
out
sub
addr16
pop
cmpb
sub
stos
test
bound
pushf
stos
arpl
mov
xchg
mov
xchg
mov
dec
loop
mov
int3
add
scas
divl
add
sbb
dec
fwait
dec
addb
sbb
sbb
ja
mov
rorl
mov
loopne
add
data16
xchg
ret
lahf
xchg
lret
aad
mov
cli
fistpl
scas
jg
and
popa
hlt
mov
mov
dec
mov
adc
ficoms
xchg
in
cli
push
inc
lods
pushf
imul
das
push
cmp
fmull
not
sbb
inc
adc
or
pusha
scas
sahf
ja
popf
shlb
aas
call
popf
cs
cmc
lods
mov
ret
xchg
or
fistps
rcll
rcrl
inc
cld
push
movsl
mov
jne
and
aas
aad
idivl
leave
movsb
ret
and
adc
mov
mov
jmp
add
loopne
cmpl
adc
push
add
sbb
jg
cwtl
ret
adc
jmp
mov
cmp
dec
daa
insl
xchg
stos
xchg
sub
outsb
insb
clc
bound
sti
push
out
adc
daa
sbb
inc
jb
jmp
cmp
or
sbb
mov
push
roll
bound
or
sarl
pop
pop
test
add
aam
mov
out
xchg
cmp
leave
ja
pop
sbb
call
popa
dec
jle
push
insl
cmpsl
or
jmp
in
or
into
clc
and
es
lods
add
jbe
add
movsl
mov
mov
mov
mov
jnp
xchg
imul
push
sub
add
bound
out
add
and
sub
outsb
fists
and
inc
imul
outsl
cmp
xor
ss
stos
sub
idiv
push
mov
jle
pop
or
xor
add
jae
sbb
lods
or
mov
in
push
clc
push
inc
mov
inc
inc
xchg
pop
js
es
dec
cli
popf
fstpt
lock
pusha
sahf
stos
imulb
fisubrs
in
jle
xor
flds
mov
sbb
inc
nop
repnz
out
jne
test
xorl
addr16
loope
cmp
std
lods
das
gs
orb
outsl
sbb
mov
stos
divl
jg
in
aas
mov
daa
and
popf
sbbl
je
movsl
jb
in
xor
jecxz
into
inc
jge
cwtl
jne
mov
stos
icebp
xor
shll
aad
out
data16
data16
loop
out
sbb
and
iret
fdivr
cmp
xchg
imul
and
bound
cli
iret
outsb
gs
mov
dec
push
rolb
stos
out
or
xor
dec
es
adc
scas
jb
pop
out
addr16
int3
das
xchg
lods
enter
mov
pushf
mov
shlb
xor
lcall
adc
or
mov
mov
or
into
aam
mov
dec
test
sub
dec
xchg
mov
std
adc
ss
jae
xchg
mov
xor
add
dec
dec
push
push
daa
js
add
das
les
inc
xchg
pop
inc
in
addr16
and
jg
or
xlat
outsb
push
jns
inc
mov
cmp
fldenv
lret
cmp
mov
mov
jecxz
nop
ss
popa
arpl
cmpps
sbb
sbb
lea
cltd
pushf
fcoml
out
popf
sub
out
cld
addr16
sahf
insl
adc
loop
ss
in
push
cmc
iret
cmpsl
div
sub
add
sub
push
inc
fdivp
dec
mov
into
sub
dec
fsubrl
ja
cmpsb
gs
insb
mov
mull
out
lods
cmp
push
pushf
sub
sbb
in
xchg
repnz
popf
jno
inc
aas
fidivl
lods
je
lods
out
mov
cltd
aad
test
fimull
or
pushw
cmp
repnz
fisttps
xchg
mov
js
mov
jecxz
push
lret
pushf
adc
mov
push
aam
leave
xchg
mov
loop
scas
pop
and
mov
jle
add
pop
notb
sbb
mov
jae
push
loopne
pushf
add
and
cmpsl
lock
pop
out
int3
leave
mov
mov
or
cld
or
cld
pop
negl
movsb
gs
daa
fs
and
adc
aad
sbb
add
movsl
sbb
call
into
ss
jge
mov
xor
add
loop
stos
shlb
inc
outsl
fildll
mov
inc
push
aam
xchg
sub
lock
dec
mov
mov
bound
mov
or
push
push
stos
dec
in
push
insb
xlat
mov
pop
mov
pushf
scas
jp
repz
pop
imul
add
jmp
adc
sbb
in
lret
add
mov
rorb
hlt
mov
add
mov
inc
or
outsb
xchg
sub
je
aas
inc
ds
inc
push
fs
outsb
xor
cmpsl
je
mov
adc
inc
and
add
repz
repnz
xchg
and
mov
cmp
test
pushw
jo
xchg
repz
mov
push
out
push
call
lret
mov
gs
lods
cmp
inc
pop
test
xchg
repnz
pushf
popf
push
adc
loop
movsb
sti
jg
and
mov
shr
repz
add
sti
mov
fldl
popa
mov
xchg
pop
scas
adc
fcomps
pmuludq
xchg
sub
push
inc
jnp
push
stc
int3
or
lret
push
iret
sub
loope
dec
mov
cmp
movsl
fwait
adc
add
dec
add
ret
orb
sub
stc
pop
cmp
iret
pop
pop
xchg
rol
mov
dec
mov
push
scas
test
hlt
pop
sbb
outsl
or
inc
dec
es
popa
sbb
push
adc
sbb
xor
out
push
inc
add
xor
lds
in
imul
iret
mov
mov
xchg
xchg
mov
fldt
fistpll
push
mov
and
in
pop
inc
enter
mov
hlt
in
mov
xor
push
adc
popf
inc
pop
mov
sbb
add
add
xor
repnz
cmp
inc
stc
test
adc
orl
pushf
mov
fsubrs
pop
cmp
push
nop
xchg
jno
mov
or
fs
pop
sarl
mov
push
outsl
jb
xchg
add
outsl
xor
outsl
jno
cltd
stos
adc
or
push
pop
ljmp
mov
sbb
mov
inc
mov
shr
test
xchg
pop
inc
popa
push
stos
jle
dec
xchg
pop
loope
pop
aad
rcl
push
inc
mov
jne
mov
aad
iret
xchg
inc
insl
mov
dec
xchg
push
mulb
clc
jp
mov
mov
lds
clc
jmp
imul
ljmp
or
xchg
mov
test
mov
ds
popa
push
loopne
sub
popf
filds
in
imul
popf
push
xchg
jo
or
add
adc
test
jmp
jp
flds
nop
xchg
mov
xchg
imul
das
aam
and
xor
mov
add
xchg
rcr
sbb
add
or
add
add
and
jp
fidivrl
push
xor
mov
hlt
aam
inc
shlb
mov
movsl
push
or
push
dec
cmc
mov
pop
call
mov
fwait
es
pop
sahf
popf
inc
fdivrs
ret
xor
push
push
mulb
lea
in
fnstenv
jl
iret
mov
push
out
adc
popa
add
lds
jle
fistpl
adc
xor
jle
cmpsb
gs
ja
mov
or
std
dec
in
repz
mov
adc
fildll
ss
ret
cmp
bound
mov
inc
pop
inc
push
imul
pop
mov
lods
sub
jnp
out
lahf
ret
xor
fstpt
pop
sbb
das
jmp
mov
sub
inc
outsb
call
sub
xor
push
arpl
cmp
imul
hlt
shll
cmp
out
xchg
mov
and
fstpl
movsb
shll
gs
frstor
cmp
fcmovnu
scas
pop
lret
int
jbe
pusha
jl
xchg
cmc
fnstcw
fcmovb
stos
aam
cmp
sbbl
add
mov
sbb
push
enter
fs
pop
and
aas
or
jb
mov
std
daa
dec
addb
lcall
mov
imul
movsl
sub
cmp
pusha
nop
push
loopne
rcll
push
mov
xor
xor
je
cmpb
mov
es
mov
pop
shll
fldenv
sbbl
dec
stos
repz
repnz
push
xorl
fstps
push
or
mov
sub
mov
das
mov
mov
lcall
movsl
test
addr16
scas
and
clc
jl
inc
mov
and
lret
rorb
rcll
pop
jo
lahf
pushl
rcl
mov
out
out
push
enter
std
dec
xchg
sub
cmp
mov
jge
ret
dec
movsl
leave
movsw
arpl
sub
iret
popf
xchg
dec
mov
inc
jmp
lcall
cmp
out
xchg
xor
in
mov
mov
jp
lock
xor
push
mov
and
int
inc
leave
cmc
xchg
ret
es
inc
ja
jno
xlat
jb
insb
and
jge
dec
xchg
jmp
std
movq
mov
fwait
loopne
jns
cmpl
dec
sub
cmp
fwait
jnp
cmp
das
repnz
in
test
xchg
mov
inc
aas
or
add
flds
sbb
jne
mov
mov
loopne
push
sub
rorb
lret
push
sub
mov
mov
sub
xchg
repz
pop
inc
sarb
ret
cld
rcrl
divl
jae
inc
inc
fstpt
cmp
stos
out
sar
in
fists
cmpsl
or
pop
fcompl
lods
sar
jmp
and
outsb
insb
out
sub
ror
or
jnp
loop
adc
push
stos
loop
adcl
mov
scas
sub
sub
mov
dec
inc
dec
shll
sbb
xchg
je
xor
in
lds
stos
lods
test
sub
jl
arpl
mov
jno
jg
bound
cmp
sub
sub
mov
addb
daa
dec
mov
test
in
jne
mov
sub
add
push
pop
sub
xchg
leave
and
out
rsm
xor
nop
mov
lret
push
and
test
sarl
ljmp
or
add
out
repz
pop
xchg
loop
fmull
daa
and
leave
and
push
test
mov
jge
xchg
adc
inc
shlb
adc
mov
jge
or
or
push
xchg
cmp
lret
ds
push
movsb
push
daa
mov
push
sub
push
mov
cltd
adc
pushf
in
push
test
mov
aad
xchg
adc
addr16
hlt
push
and
adc
mov
sub
mov
arpl
test
rolb
jne
xchg
rcrl
mov
mov
jmp
negl
cmc
or
shll
lcall
cltd
ljmp
mov
arpl
ret
fmuls
scas
lcall
repz
jecxz
xchg
sbb
add
sbb
sub
pusha
jmp
add
fidivrs
xor
xchg
aas
movsl
sbb
fsubr
lret
xor
push
cmp
sahf
sub
ja
sub
xor
daa
mov
inc
ret
sbb
push
adc
jge
pop
enter
scas
andb
pushf
cmp
pop
pop
call
iret
lods
popa
push
and
ret
stos
dec
jg
inc
filds
xorl
add
js
sbbb
or
adc
push
xchg
idivb
jne
stos
mov
lea
cltd
imul
sbb
aas
dec
sbb
dec
sbb
pop
push
inc
ret
sub
lods
sub
andl
outsb
inc
lea
sbb
scas
xchg
imul
roll
adc
nop
insb
das
jge
in
scas
aas
lock
push
out
pusha
sub
aam
jno
xchg
fadd
test
xor
add
mov
mov
add
loope
jae
mov
jecxz
aas
sbb
xchg
aas
cmc
fs
cmpsl
js
push
and
mov
push
sbb
rcrl
mov
lds
ds
xor
repz
fnstcw
fnsave
mov
push
jne
add
jbe
xor
insb
addr16
outsl
and
pop
mov
xor
pop
add
cmp
jo,pn
fsub
and
mov
pop
push
movsl
mov
mov
add
mov
sbb
push
fdivl
cwtl
stc
and
aas
cmpsl
ret
mov
movsb
pop
mov
les
jmp
ja
xor
ja
imul
cmp
imul
clc
testb
popf
cmp
fwait
xor
mov
sub
cmp
scas
xor
mov
add
clc
stc
aas
insl
mov
ret
mov
mov
mov
xchg
dec
jae
lcall
and
stos
or
into
pop
leave
add
xor
push
iret
pushl
mov
push
and
push
jno
daa
push
add
push
jecxz
cmpsl
cli
mov
lcall
subb
xor
pusha
adc
push
pop
or
inc
push
aas
ds
nop
push
orb
mov
push
lret
rep
aam
and
fs
mov
icebp
cmp
out
cwtl
adc
shlb
jb
dec
mov
lret
fcmovnbe
ret
inc
cmp
enter
inc
movsb
mov
mov
jno
dec
xchg
mov
sub
lret
mov
fidivrs
out
jnp
push
sbb
mov
in
xor
cmpsl
sub
or
or
mov
xor
int3
aam
mov
iret
movsb
cmpsl
push
inc
es
negl
mov
andb
jmp
xchg
mov
mov
or
mov
mov
repnz
add
je
pushf
add
mov
iret
iret
xlat
mov
subb
fldl
pop
jge
jae
cmp
sbb
pop
cmp
aam
xchg
cmp
out
sahf
push
arpl
mov
aas
or
rclb
gs
gs
dec
in
out
lea
insb
pop
testb
nop
ret
push
outsl
pushl
jbe
cld
push
lret
mov
movsb
push
and
lods
nop
les
mov
rclb
mov
in
inc
lods
bnd
and
mov
decb
aam
push
je
ja
pushf
shl
xchg
pop
pop
sub
iret
jmp
das
int3
ja,pt
shlb
stos
mov
imul
subb
aad
std
lret
mov
sbbl
and
pop
lret
fwait
cmp
iret
push
fistpl
sbb
lcall
mov
leave
and
mov
adc
push
pop
scas
adc
adc
and
out
sub
push
rcl
mov
loope
imul
sub
fists
mov
adc
jmp
subl
push
das
sub
pushf
pop
ret
in
popa
xor
hlt
mov
xor
ret
je
test
and
push
dec
mov
shll
cli
mov
movsb
mov
lods
mov
mov
adc
popa
sub
adc
hlt
sbb
cmp
jbe
adc
stos
adc
pop
pop
mov
fstl
out
int
mov
cmp
inc
fistps
xchg
subl
adcb
lret
dec
xor
and
data16
jle
mov
js
xchg
mov
out
flds
sbb
mov
mov
cmp
dec
arpl
jp
dec
scas
inc
out
inc
xor
xchg
addr16
lods
sub
pop
push
push
xor
dec
jbe
out
loop
fldt
mov
add
cmp
xchg
lods
push
std
xchg
sub
inc
arpl
dec
adc
add
movsb
test
adc
cmp
in
mov
sbb
ds
loopne
jecxz
and
es
stos
adc
fst
std
jns
int
jns
jns
stc
cld
mov
aam
jae
vsqrtsd
mov
in
imul
sub
out
xor
cmpsl
push
loopne
aad
fstps
sbb
pusha
or
fwait
es
xor
push
outsl
xor
dec
jb
add
incl
insl
shlb
jno
jmp
fldpi
cmp
pop
pop
fdivrl
std
test
lahf
jecxz
push
js
in
jnp
leave
dec
and
cmp
and
add
sbb
hlt
fdivl
mov
ret
pop
test
or
or
nopl
iret
sub
decb
jecxz
jno
lret
mov
dec
jns
movsl
add
cmpl
hlt
mov
arpl
pop
push
ficoml
frstor
popf
into
out
pop
pop
mov
int3
lods
push
shl
insb
ret
dec
mov
mov
mov
mov
or
inc
lret
jle
stos
xlat
pop
and
subl
mov
mov
cmp
jae
outsl
ljmp
inc
pop
leave
ljmp
insl
mov
lds
rcl
and
jnp
fcoml
push
or
push
insl
loopne
cs
xlat
pop
push
xchg
pop
xchg
stos
push
js
ljmp
push
inc
stos
xchg
mov
or
sub
and
loopne
fwait
std
rolb
mov
cld
xchg
pop
mov
arpl
fimull
ret
mov
lret
xor
sti
test
lea
bnd
mov
cli
add
sahf
imul
int3
cmp
cld
xchg
inc
orl
lea
lds
dec
mov
call
repz
jo
add
xor
mov
inc
lods
loop
dec
dec
mov
jge
sub
xor
mov
push
xor
int3
in
jecxz
out
fwait
jge
ja
out
cmp
ret
mov
cli
jmp
jb
ds
inc
lea
test
mov
dec
iret
xchg
mov
pop
jge
repz
pop
pop
lea
seta
push
inc
pop
sub
roll
cs
sbb
push
xchg
test
fcomps
in
xor
jne
jbe
sub
xor
xor
lcall
pop
int
and
jecxz
dec
adc
cs
and
mov
stc
mov
and
xchg
mov
cmpsb
lret
rcrl
lods
pop
fstl
scas
adc
push
pop
dec
add
jbe
push
add
add
into
mov
fdivrp
inc
repnz
pop
xchg
mov
cmp
push
popa
push
fbld
xor
mov
aam
sub
push
sbb
sbb
push
cmp
inc
lea
outsl
popf
push
mov
std
cltd
xchg
test
insl
notl
dec
cmpsb
cli
inc
sub
scas
xchg
fiaddl
mov
scas
push
add
add
add
movsb
insb
add
shll
aaa
movsb
ds
ljmp
les
sbb
scas
xlat
cli
xorl
jbe
inc
sub
outsb
stos
stos
jle
cwtl
fnsave
jle
test
fisttps
je
mov
das
scas
repz
adc
cwtl
sbb
lea
nop
into
aaa
pop
lock
adc
sti
dec
xchg
mov
sbb
mov
mov
data16
jl
fs
lods
adc
jo
inc
inc
sub
mov
push
mov
jo
mov
inc
in
jno
pop
cmp
icebp
fistps
enter
add
fisttpll
xlat
ja
std
dec
lcall
jmp
ret
adc
cmp
andl
lcall
jmp
cmp
and
daa
rclb
icebp
negb
mov
add
pop
cmpsb
dec
cmpsl
adcl
jbe
ret
pop
xchg
push
iret
rcl
les
sbb
xchg
mov
inc
inc
mov
rorb
lock
mov
popf
dec
out
dec
lds
add
mov
or
cltd
mov
push
test
enter
add
or
cmc
roll
xchg
or
out
icebp
xlat
mov
mov
add
add
cmp
leave
and
lahf
mov
leave
fstps
push
jnp
adc
insb
imul
sbb
popf
lock
dec
cmp
pop
adc
sbb
dec
and
xchg
movsl
sub
jge
aas
xor
out
enter
call
pop
or
xlat
les
mov
cli
xor
pop
movsl
fcoml
jmp
out
sub
lock
rclb
lock
orl
popa
mov
sub
mov
fs
rorl
insl
sarb
jo
test
push
add
loop
fimull
inc
stos
testl
es
lret
sbb
and
xor
xchg
cmc
jae
xor
cmpsl
daa
mov
fisubs
out
pushf
add
mov
xchg
inc
out
outsb
orl
and
insb
sub
inc
fsubr
xchg
test
xor
push
jno
add
loopne
andb
jo
xlat
add
mov
xchg
jg
mov
cmp
cmpsb
and
lret
jno
movsb
jp
imul
jp
ja
mov
xor
fsts
mov
scas
imul
into
popa
addl
mov
push
xor
push
ficompl
daa
repz
pushf
dec
out
mov
aad
cmpsl
or
xlat
xchg
pop
push
mov
or
mov
in
pushf
adc
inc
mov
cmp
lret
add
lods
cmp
jmp
arpl
add
mov
or
fwait
lcall
xlat
filds
dec
jle
dec
loop
aas
mov
sbb
push
sbb
movsl
insb
xor
scas
addr16
pop
mov
arpl
and
mov
or
ror
lret
jmp
adc
xlat
daa
or
xchg
mov
sub
stos
adc
push
repnz
lods
lret
ds
ret
js
add
imul
idivb
mov
inc
cmc
xchg
daa
lret
stc
les
int
mov
cmpsb
and
dec
in
mov
jle
add
mov
inc
sbb
cwtl
mov
js
sub
inc
imull
xchg
mov
pop
enter
push
or
mov
mov
out
sub
mov
dec
repz
fwait
cli
sub
cmpsb
mov
rcrb
cs
jp
xlat
xor
ret
inc
pop
iret
pop
cltd
mov
jbe
daa
scas
cmpsb
mov
outsl
rorl
in
adc
add
mov
and
jg
or
jg
push
jns
lock
inc
fdivr
xor
sub
xor
lods
inc
mov
rcl
data16
scas
sub
pop
cmp
es
roll
fwait
loop
mov
add
sub
inc
mov
outsb
mov
inc
pop
mov
dec
sub
inc
aas
and
jmp
leave
insl
mov
cmp
and
xor
add
mov
ljmp
ret
sbb
or
pop
mov
ds
inc
sub
push
add
lds
jns
cmp
jns
adc
outsl
cmp
popa
enter
popa
add
mov
dec
lods
xchg
xchg
mov
jno
push
adc
rcrb
sbbl
push
lods
das
dec
mov
cmpsl
mov
mov
jmp
pop
cwtl
data16
pop
mov
and
and
adcb
mov
lea
push
rolb
fsubl
imul
pop
dec
addr16
idivb
mov
dec
filds
push
cli
add
mov
shl
xchg
pop
ret
xchg
stos
inc
scas
outsl
pop
pop
addr16
outsl
inc
pop
ljmp
in
xchg
or
xchg
hlt
jns
ljmp
dec
ret
lods
add
repz
push
xor
cmp
push
push
dec
lcall
push
pop
mov
repnz
mov
and
and
inc
jo
cmc
andl
ss
jle
pop
testb
imul
scas
mov
sub
fstpl
and
pusha
iret
cld
lods
pop
mov
ret
or
test
xor
xchg
xor
jecxz
test
or
sbb
xchg
pop
ja
aaa
inc
sbb
cwtl
mov
xlat
inc
mov
mov
dec
and
sar
push
inc
pop
in
xchg
pop
test
cli
jge
jmp
pop
insl
shr
xchg
cli
jae
jnp
sub
and
loopne
jg
icebp
sub
repz
loopew
pop
leave
daa
ret
push
xor
mulb
sbb
dec
fcoms
ljmp
and
jmp
int
inc
push
test
in
xchg
mov
mov
sub
pop
xor
jns
sbb
lock
lret
inc
lret
loope
xchg
cmpsb
cltd
aaa
xor
nop
sbb
mov
rcrl
iret
loope
ljmp
mov
dec
loopne
inc
push
out
cli
shl
es
fists
andb
jbe
xchg
xchg
xlat
ret
es
jnp
dec
cmp
mov
jno,pn
xchg
cmp
jb
push
adc
aam
add
add
mov
ror
gs
or
adc
sbb
xchg
jo
shlb
and
mov
jne
push
push
jae
fsubr
push
and
movl
stc
into
push
inc
sbb
xchg
jle
mov
mov
out
inc
mov
ret
mov
in
sbb
pop
mov
stos
stc
cmp
shlb
sbb
sbb
or
xchg
inc
inc
mov
lea
incb
insb
push
in
sub
or
pop
cltd
stos
in
or
ffreep
and
or
das
adc
dec
loopne
jo
test
mov
sub
mov
cmp
dec
push
out
jno
fidivrs
sbb
mov
sbb
mov
repz
scas
lods
pop
fisubs
dec
add
adcl
jb
jo
dec
mull
inc
dec
mov
xor
mov
jb
movsl
pop
push
jo
add
mov
mov
loop
mov
hlt
dec
push
and
push
mov
pusha
inc
ret
sub
cmp
scas
adc
push
jae
stos
jae
add
out
jp
and
aam
mov
inc
mov
add
sub
and
scas
jp
stc
or
rol
mov
xchg
sbb
enter
adcb
adc
jecxz
loope
or
dec
rcr
std
xlat
jmp
xchg
testb
xor
fists
push
negl
leave
lret
fs
ds
sbb
pop
cmp
push
je
movsb
lea
mov
xchg
scas
push
stc
lret
jmp
push
jg
xor
in
fimull
mov
jmp
jns
mov
sub
pop
adc
mov
fisttpll
mov
int3
and
test
in
cwtl
movsl
out
jl
lcall
jecxz
sub
imul
mov
ss
int3
nop
ljmp
push
dec
lea
test
filds
mov
or
insl
shll
outsl
les
mov
sti
rcl
pop
mov
outsb
je
push
lock
xor
in
xchg
ljmp
xchg
fmuls
or
adc
jno
aas
pop
add
xchg
imul
adc
xor
mov
cmp
sbb
mov
inc
cmp
sub
jp
or
in
insl
cwtl
xor
push
inc
mov
es
cmp
in
pop
ret
fucomp
dec
dec
out
xchg
push
int
sub
stos
pop
push
sbb
fwait
inc
xlat
divl
std
cmp
int3
jo
int3
fidivrl
add
stos
xchg
ss
test
sub
fists
sub
cmpsb
icebp
dec
jge
cld
insl
or
inc
inc
mov
jnp
out
in
out
inc
rorl
in
mov
xchg
xor
ret
loop
cmpsl
jmp
inc
pop
sub
inc
and
popf
lret
mov
jae
push
clc
sub
bound
ja
dec
notl
xchg
or
test
mov
divl
dec
stos
sub
test
daa
std
jl
sbb
test
mov
jnp
fldt
outsl
mov
imul
dec
xor
test
outsl
pusha
dec
fimull
xchg
sub
sbb
mov
cmc
push
pop
jns
clc
jge
test
jae
stos
aam
negl
movsb
shll
sahf
jg
or
push
int
add
push
and
xor
sbb
jbe
jle
xorl
mov
insl
outsb
mov
pop
gs
cmc
jno
or
dec
jp
pop
mov
les
xor
push
mov
push
jno
push
add
jg
repz
lds
mov
sarb
lock
dec
stc
sbb
icebp
adc
das
ja
shlb
sbb
jno
push
mov
xchg
jno
ret
jmp
dec
insl
pop
fldlg2
and
push
xor
mov
cld
xor
jb
mull
push
cmp
sub
insb
push
pop
jnp
movsb
icebp
stc
adc
pusha
arpl
sar
push
aad
xchg
iret
in
xor
dec
and
fwait
outsb
hlt
dec
jb
mov
mov
and
dec
pop
stos
push
jae
rolb
gs
push
add
arpl
pop
pop
gs
xchg
add
cmp
pop
xchg
and
ret
mov
xor
inc
xor
xor
je
leave
leave
pop
adc
fldt
adc
or
fldcw
nop
int
lcall
cmp
xchg
popa
mov
xlat
jne
sbb
cltd
shll
sub
xchg
test
mov
xchg
das
dec
outsb
popa
loop
add
lock
dec
sub
lea
adc
mov
stc
or
push
adc
add
test
ja
pop
loopne
test
sub
mov
sbb
dec
addl
adc
lods
push
sub
fnstenv
arpl
shlb
add
aad
pop
out
int3
xor
adc
daa
push
cwtl
adc
cmp
push
enter
or
fwait
mov
or
shl
insl
mov
sti
sub
xor
andl
clc
stc
push
push
sbb
je
fpatan
inc
cld
mov
add
pop
mov
adc
mov
dec
lea
jo
add
clc
lock
dec
pop
sbbl
sub
jmp
adc
add
add
gs
xor
adc
gs
pop
test
cmpsb
pop
nop
inc
mov
filds
subl
inc
pop
je
hlt
add
out
ret
lret
adc
sub
fidivl
mov
je
loope
sub
dec
jae
cmp
mov
loope
stos
jae
jmp
jmp
jnp
push
nopl
out
and
leave
mov
bound
arpl
cmp
sbb
sbb
cmc
out
loop
shlb
aas
addr16
sub
out
int
push
int
and
cvtpi2ps
int
adc
sbb
daa
divb
push
or
xchg
sub
cmp
loopne
push
dec
les
xor
jb
fadds
xor
push
in
js
inc
mov
cmc
sbb
subb
lock
mov
xor
mov
rcrb
idivl
dec
or
sub
rcrb
mov
jbe
cmp
mov
inc
test
add
out
test
arpl
xor
cmp
jg
testl
js
movl
es
pop
sti
mov
js
rcll
repz
aam
mov
inc
jecxz
pop
or
cmp
movsl
push
mov
pusha
test
outsb
leave
jo
jne
insl
ss
test
mov
mov
xor
and
or
cld
std
cli
sbb
push
push
jae
xor
ret
pop
orb
adc
sbb
sbb
jnp
xchg
and
test
loop
inc
fcmovu
and
loopne
testb
insl
xchg
popa
ror
es
stos
in
in
rcrb
dec
jnp
sahf
fs
lret
lods
adc
imul
xor
pop
sub
iret
imul
sub
lcall
shr
adc
mov
movb
jmp
add
loope
and
popf
sub
cmc
out
mov
gs
std
repz
fsubl
xchg
mov
push
ja
out
lret
lds
clc
pop
lods
les
add
jbe
cmp
add
idivl
jb
pop
pop
push
cmpsl
fcompl
repnz
xor
ret
push
dec
addb
in
data16
cmp
aaa
mov
sbb
gs
cmp
xor
out
cmp
cmc
mulb
incb
dec
fcomip
gs
cli
popf
lock
cmp
cmp
jno
js
add
aaa
mov
mov
int
mov
popa
in
push
and
repz
repz
dec
or
lods
jmp
data16
cmpsb
pop
nop
xor
les
adc
rclb
out
mov
xor
and
xchg
mov
test
cld
adc
adc
orb
push
out
ret
loop
ss
ja
dec
mov
std
in
xor
out
je
cmp
outsl
jecxz
nop
adc
decb
movsl
dec
push
mov
jb
mov
dec
loop
lret
mov
ljmp
sub
aad
divb
ret
dec
xlat
xchg
lock
jl
shll
mov
ds
jle
loope
add
cmp
xor
cmp
dec
mov
and
std
inc
lods
arpl
mov
scas
testl
and
shll
loopne
mov
js
cmpsl
shlb
jp
cmp
popa
loopne
hlt
jp
sbb
ficompl
mov
arpl
pop
call
inc
ds
sbb
adc
pop
dec
mov
test
or
cmc
imul
fildl
mov
sbb
in
sti
cmpsb
jns
jo
lcall
push
lret
inc
push
xor
pop
and
push
xor
ljmp
in
jp
movsl
pop
push
ret
out
mov
cwtl
movsl
push
adc
xchg
mov
add
fwait
or
mov
dec
popa
fs
jp
jmp
dec
adc
je
mov
xchg
cmp
cld
jns
or
jno
push
jno
mov
xchg
dec
shl
ljmp
and
addr16
mov
adc
in
jno
dec
je
test
sarb
sub
mov
aad
push
insb
add
jae
sti
in
mov
add
cmpb
inc
push
pop
jge
mov
sbb
add
add
xor
push
dec
jae
mov
rol
pushf
jg
jne
leave
adc
lods
push
push
cmp
push
xlat
hlt
or
mov
hlt
jnp
xor
ds
pop
sub
push
push
push
mov
pop
cmp
shlb
add
xor
cmp
inc
adc
mov
xchg
test
int
mov
xchg
into
mov
cld
pop
shlb
mov
xchg
stc
push
stos
jle
xor
sbb
push
loop
jb
xor
xchg
push
pop
cmp
adc
icebp
gs
or
stos
lcall
jo,pn
pop
sub
sbb
jmp
fidivl
test
pop
jl
mov
lret
push
adc
pushl
in
out
inc
add
ret
cmp
push
jo
test
cmp
cli
lea
fnstenv
mov
fbld
test
stc
mov
or
in
push
shlb
pop
dec
add
cmp
mov
jecxz
add
pushf
jp
push
test
mov
fldcw
mov
popa
jp
lods
clc
cmc
out
lea
adc
mov
insb
call
lock
ljmp
xchg
sahf
dec
sbb
add
sbb
push
mov
pop
testb
sub
lret
mov
lahf
lret
subb
jp
add
or
sub
lcall
sbb
add
mov
or
fldt
push
loope
pop
js
and
mov
jb
xor
lds
jo
xchg
add
and
xor
inc
dec
fcmovbe
xor
aam
in
lret
lahf
lret
in
out
mov
sahf
sub
push
xchg
adc
das
xchg
rclb
loop
add
aaa
sahf
adc
xchg
push
or
xchg
loope
cli
pop
gs
dec
sub
movsb
mov
lods
jne
subl
add
cld
xor
mov
fwait
mov
mov
jb
outsb
sbb
scas
ja
addb
pop
and
movsl
hlt
inc
add
test
pop
dec
leave
push
pop
fs
fldl
push
icebp
xchg
jg
or
jle
add
nop
inc
in
mov
mov
test
sbb
orb
and
das
push
jne
add
rcrb
push
pop
mov
fdivl
inc
out
mov
pop
and
fsubl
lahf
stos
outsb
movsb
out
sub
in
nop
push
iret
cmp
mov
adc
dec
mov
std
xor
sahf
jmp
push
cmpsb
cmp
fdiv
sub
push
outsb
mov
xchg
clc
jl
adc
ret
push
mov
outsb
movsb
sbb
pop
push
inc
rclb
or
jb,pt
xchg
sahf
sub
mov
adc
fmulp
icebp
lds
in
mov
add
add
imul
lea
xchg
push
fdivrs
pushf
xor
stos
inc
int3
push
out
dec
sub
cmp
ret
cmp
mov
dec
lret
jl
pop
mov
sbb
testl
sete
dec
stos
push
ljmp
pop
out
les
mov
or
adc
xor
insl
mull
xchg
dec
fwait
cli
push
push
fwait
in
scas
sub
test
imul
xchg
sbb
insl
aam
inc
stos
ja
jno
mov
imul
fcompl
into
repz
push
adc
call
inc
lcall
aas
lock
cld
sub
aam
outsb
pop
popa
daa
ljmp
enter
outsb
sbb
fwait
sub
repnz
inc
push
ficoms
push
jl
pop
dec
jp
fmull
cmpsb
int3
and
mov
mov
mov
cmp
fisubl
imul
sbb
mov
sub
fimuls
nop
mov
scas
jne
mov
lods
and
aas
jo
xchg
mov
mov
push
cmp
flds
cmp
jp
insl
test
or
cld
pop
sar
adc
movsl
ret
sbbl
in
mov
lods
das
add
jmp
cwtl
push
outsl
les
rcr
pop
inc
movsb
mov
into
inc
test
imull
jle
xlat
push
and
mov
incb
ljmp
mov
filds
lret
lds
es
andb
jp
add
dec
xor
mov
jecxz
bound
jle
insb
mov
pop
arpl
movsb
adc
in
aad
mov
pushf
mov
and
cmp
adc
pop
push
aad
mov
sar
notl
push
sbb
mov
mov
xor
mov
cmpl
pop
add
rcll
xchg
stos
andb
jle
mov
xor
lcall
lods
add
ds
aam
push
xchg
jae
lods
dec
adc
xchg
fcmovne
das
and
xchg
lahf
int
negl
jb
rclb
and
cltd
sub
aaa
inc
push
cmp
out
rcrl
popf
movsl
cmpsb
mov
loop
push
and
aad
outsl
push
daa
jbe
rcl
or
pop
push
xor
test
js
sub
jp
cs
push
pop
sub
xor
inc
in
push
mov
pop
mov
xchg
lea
or
daa
fildll
les
mov
push
xchg
scas
pop
adc
aad
notb
sbb
outsl
push
movsb
jg
lahf
test
jg
mov
sbb
in
jnp
in
cs
sbb
pop
lea
jecxz
inc
mov
xchg
sbb
aaa
mov
mov
and
call
bound
scas
add
and
test
iret
arpl
faddl
jp
and
xchg
js
cmp
mov
jp
stos
es
cli
xchg
or
cmpsl
jmp
fsubs
push
mov
adc
fmul
iret
inc
out
enter
das
nop
cmp
imul
loopne
mov
sti
loopne
pop
add
lret
lcall
cmpsb
cmp
ja
loope
addr16
les
or
jp
aas
cmp
pop
fisubrs
or
xor
cli
add
loope
inc
in
adc
bound
ret
push
rclb
jno
mov
jnp
mov
ret
in
test
popf
sub
cmp
loop
rorl
jmp
sub
cmp
and
ss
push
int
and
dec
sbb
cltd
xor
lea
xrelease
pop
push
jg
push
into
jecxz
shrl
sahf
cmp
add
xchg
mov
aas
loope
cmp
adcb
rcr
add
movsl
inc
xchg
pusha
mov
jb
jl
or
xor
mov
mov
data16
mov
stos
ret
mov
push
imul
and
ret
mov
xchg
dec
fs
sub
aad
shrb
mov
mov
mov
pop
cmpb
or
lods
test
outsb
out
xchg
jl
pop
adc
adc
inc
movsl
pop
sarb
jge
mov
int3
aas
add
pop
lahf
xchg
out
arpl
xchg
lret
idivb
std
sbb
cltd
repz
sub
xchg
dec
or
ret
cmpsb
je
sbb
negl
sbb
addb
mov
xchg
pop
or
mov
mov
dec
jbe
xchg
or
test
dec
inc
enter
add
adc
in
call
out
add
enter
addb
nop
or
int3
adc
cwtl
mov
and
sbb
mov
fsubrp
stc
cli
insl
sbbb
mov
cmp
dec
clc
dec
mov
punpckldq
cld
dec
and
push
ds
imull
mov
repz
sti
mov
popa
mov
mov
xor
mov
sub
stc
fcoml
jnp
sbb
test
mov
pop
or
xor
mov
xchg
inc
aas
gs
sti
adc
cmp
sub
dec
mov
push
into
or
xor
cmp
fs
dec
dec
pop
fcmovb
sbb
push
xlat
in
jp
add
rorb
imul
jmp
jbe
xchg
das
cmpsb
adc
iret
jnp
xor
jae
add
cmc
adcb
mov
cld
imul
into
xchg
gs
shll
addr16
hlt
push
rcrl
jae
out
mov
ret
mov
push
mov
repz
fbld
in
sub
cmp
dec
push
mov
mov
sbb
test
test
iret
and
or
pusha
xchg
cmp
enter
push
pop
jp
jb
mov
movl
push
lret
call
mov
push
inc
out
and
pop
movsl
xchg
mov
inc
push
aas
push
dec
sbb
and
add
mov
xor
inc
fadd
xchg
mov
stc
fs
pop
cmp
sbb
or
in
sub
lea
out
test
pop
jecxz
lret
shr
cmc
pop
pushf
in
dec
outsb
ficoml
leave
dec
mov
repnz
pop
into
sbb
mov
test
pop
imul
pushf
scas
dec
mov
mov
cmp
lahf
rolb
lock
add
mov
mov
xor
add
leave
adc
push
pop
push
testl
push
sbb
and
pop
jns
jnp
lock
js
mov
insb
xlat
mov
dec
inc
xor
in
xor
loop
icebp
inc
cltd
mov
cli
xor
pop
divb
icebp
sti
imul
fildll
les
lret
hlt
xchg
jp
rcl
divb
faddl
movsb
sub
mov
inc
pop
fdivrs
cmc
addb
es
cmp
push
dec
pop
and
jge
dec
test
jns
ret
mov
xchg
inc
sbb
loop
mov
loope
imul
out
cmc
mov
xor
idiv
xchg
push
loop
fldt
jmp
lods
dec
les
aaa
lret
sub
inc
cwtl
movsb
mov
out
pop
outsb
dec
inc
push
dec
push
jmp
clc
fs
add
dec
jecxz
xchg
js
push
xchg
sbb
push
sti
and
stc
jnp
sub
push
inc
mov
not
mov
inc
mov
lret
and
push
into
xchg
out
stc
mov
fwait
xor
int3
lcall
idivb
adc
mov
orb
lret
push
pop
das
nop
push
scas
add
add
dec
dec
add
adc
mov
mov
test
mull
pop
adc
fnsetpm(287
std
mov
leave
mov
mov
inc
cli
sbb
inc
mov
jne
or
aaa
sub
movsb
ja
out
std
adc
cli
fs
inc
inc
adc
or
icebp
mull
outsl
mov
add
js
sahf
add
rcl
icebp
add
lods
in
out
jmp
pusha
sbb
pop
jge
mov
ret
rolb
stos
stc
ret
aad
adc
cltd
mov
mov
mov
mov
sub
push
inc
iret
ja
adc
fcoms
cmc
neg
or
les
cmp
pop
push
hlt
ss
insl
shrw
mov
imul
mov
mov
iret
hlt
int3
sub
loop
scas
sbb
xlat
sbb
enter
mulb
dec
movsl
insl
lcall
cmp
mov
ret
mov
mov
packuswb
inc
sub
sbb
ljmp
inc
push
popf
sti
insl
cwtl
mov
sub
das
push
pop
lret
dec
cs
insl
rclb
mov
or
lods
fdivp
jo
cmp
mov
hlt
mov
cmp
outsl
lcall
call
push
andl
fcom
les
hlt
repnz
pop
repz
lret
jg
sbb
mov
bound
loop
test
mov
lds
push
inc
jp
push
into
dec
push
std
cmpsb
popf
jo
shll
cmp
arpl
scas
mov
and
sbb
mov
and
adc
jmp
inc
adc
xchg
fbstp
mov
lcall
mov
stos
in
in
daa
adc
popa
xchg
and
scas
add
pop
mov
mov
lcall
sbb
dec
pop
xchg
jge
rep
xchg
popa
push
imul
add
nop
sahf
fs
aas
adc
fisttps
cmc
push
fdivl
mov
push
cmpsl
add
pop
xchg
cwtl
adc
jmp
jbe
mov
xchg
xchg
xchg
fcoml
push
pop
jmp
mov
popf
push
push
cmp
leave
inc
cmp
scas
push
ljmp
mov
jb
jp
mov
xchg
sbbl
fmulp
pop
or
test
clc
adc
es
or
xchg
fdivrs
and
mov
icebp
imull
test
and
mov
xchg
and
pop
sub
sbb
mov
xchg
push
lods
push
ljmp
push
dec
mov
sbb
mov
out
mov
fnstcw
xchg
shll
mov
lea
pop
jnp
int3
loop
mov
sbb
mov
btc
in
call
or
add
imul
in
test
addr16
sbb
pop
or
cmp
aas
out
cmc
xchg
idivb
daa
lea
mov
adc
and
addr16
mov
divb
flds
outsb
fdivs
mov
cmp
shrl
xor
xchg
lods
and
cmp
pop
fcmovbe
mov
pop
imulb
pop
pushf
scas
fnstenv
adc
or
les
cmp
jecxz
mov
fadds
xlat
xchg
mov
popf
dec
inc
adc
in
jp
loopne
pop
imul
movsb
or
lea
inc
js
aas
cwtl
js
mov
pop
cltd
lahf
cwtl
repnz
mov
loopne
icebp
jmp
pop
mov
mov
scas
pop
and
cld
xchg
fbstp
mov
xchg
enter
ffree
in
stc
loop
movsl
lret
jl
movsl
mov
ret
and
jo
and
add
clc
lods
aas
jecxz
mov
and
dec
inc
outsb
enter
lcall
lcall
leave
mov
ja
mov
pushf
in
add
mov
or
cmp
cli
jb
sbb
pop
ret
mov
es
mov
call
push
pop
mov
push
bound
std
imulb
xchg
mov
orl
ds
adc
cmp
shl
xchg
lods
cmc
inc
push
and
repz
fst
data16
or
adc
jnp
cs
adc
cli
inc
iret
testb
imul
push
sahf
xchg
and
or
dec
aam
sub
aaa
imul
mov
adc
pop
leave
mov
int
testl
bound
cmp
scas
call
mov
test
jecxz
cwtl
lcall
call
test
sbb
mov
imul
mov
hlt
cmpsb
pop
ret
icebp
xchg
test
jns
test
rolb
test
ja
imul
add
out
adc
aas
sbb
sbb
fisubrs
ficomps
popa
jne
mov
xchg
inc
xor
nop
mov
and
jo
nop
pushf
icebp
mov
js
xor
pop
cmc
imul
mov
dec
cmpb
ret
loopne
int
orb
xor
adc
mov
mov
pop
sbb
ljmp
outsl
mov
push
push
pop
lods
scas
and
pop
adc
loopne
jmp
leave
clc
idivb
xor
xchg
ljmp
add
pop
sbb
inc
clc
mov
mov
mov
and
rcr
dec
jp
stc
xchg
pop
push
adc
in
mov
jmp
outsb
mov
imul
ret
mov
out
jp
outsb
xchg
jecxz
daa
add
adc
cld
outsl
mov
push
iret
add
icebp
push
push
imul
scas
scas
jo
pop
idivb
mov
dec
mov
les
jg
add
jae
add
pop
js
mov
cli
mov
mov
data16
lsl
ljmp
add
pushf
sub
adc
cmp
paddsw
push
test
loop
bound
and
scas
addr16
xor
mov
mov
call
jecxz
or
out
inc
mov
sbb
in
or
dec
leave
dec
scas
iret
jo
int
sahf
mov
movsl
dec
movsb
cmp
mov
sub
das
jge
push
icebp
push
push
fldt
push
scas
xchg
hlt
into
lock
out
dec
or
inc
jmp
mov
roll
dec
in
or
enter
cld
jne
or
pop
mov
xchg
adc
lods
addr16
addl
orb
out
lods
stos
fmull
fsubrs
loope
inc
cmp
sbbl
mov
mov
loope
add
das
in
pop
int3
mov
mov
popf
push
stos
xor
mov
jle
ljmp
dec
mov
gs
mov
jne
incb
bound
inc
fists
ljmp
ss
jecxz
jmp
sarb
and
out
lods
test
xor
mov
pop
jae
js
in
and
dec
orl
cld
icebp
mov
andl
add
dec
add
mov
into
xchg
cld
das
les
cmc
rclb
out
push
leave
sub
mov
push
mov
sbb
out
add
insl
push
aam
not
into
sub
adc
cli
jae
loope
push
dec
cmp
stos
repnz
je
clc
or
add
add
aas
popa
cltd
fwait
pop
inc
jecxz
scas
adc
mov
cmp
fidivs
cmpsl
in
or
add
sti
iret
pop
mov
pop
pop
xor
dec
fcmovu
mov
xor
jmp
mov
jmp
shrb
cmpsl
movsl
aad
mov
movsb
pop
jmp
inc
and
bnd
mov
ret
add
push
xlat
cmp
push
lcall
sub
shlb
and
push
stos
das
inc
shl
subb
dec
dec
mov
fincstp
mov
xor
cld
test
insl
stc
dec
inc
xlat
sti
inc
dec
xchg
adc
xor
xor
add
adc
cltd
add
add
shll
jle
mov
or
jbe
xor
ja
xor
inc
cmc
dec
pop
lret
adc
imul
jnp
loopne
imul
push
pop
idiv
xchg
mov
mov
push
inc
outsl
sbb
jbe
pushf
mov
jns
sub
cwtl
push
bound
cmp
cmp
adc
jbe
popl
push
cmp
xchg
and
movl
jo
repz
sbb
sub
lcall
mov
inc
inc
gs
pusha
jb
inc
in
push
push
ret
push
sub
pop
enter
xor
inc
sahf
mov
xor
shrl
sahf
pop
adcb
add
out
ret
pop
xor
add
ja
mov
js
clc
imul
jmp
fwait
jmp
pop
iret
and
aam
or
mov
inc
idiv
loopne
imul
adc
sar
pop
push
fs
inc
adc
mov
ret
lods
mov
inc
lea
sub
das
or
stos
add
jle
aas
addl
es
adc
mov
pop
cmp
and
lods
les
jne
movsl
aad
jo
and
dec
jnp
inc
cld
xor
mov
iret
xchg
pop
js
mov
fldcw
std
lahf
ljmp
mov
cmp
in
lret
lret
push
mov
or
inc
stos
mov
dec
nop
bound
sub
pusha
pop
in
mov
pusha
insb
clc
sbb
cs
pop
and
sbb
lret
xor
stos
or
mov
fstps
dec
inc
or
arpl
mov
test
cmp
inc
xor
push
cld
aaa
idivb
dec
not
fisubl
push
jb
adc
movmskps
out
add
push
xchg
jnp
jg
movsl
aas
scas
enter
aad
leave
mov
popf
int
jecxz
sbb
pop
xchg
mov
push
adcb
lods
jns
xchg
popa
push
push
pusha
out
imul
pop
sar
mov
pushf
sahf
stc
adc
out
sub
xchg
pop
lcall
sub
mov
test
std
jmp
testb
xor
loopne
push
dec
ja
frstor
jne
xlat
push
xchg
pop
std
js
imul
cmp
mov
cmp
mov
leave
xchg
jo
inc
es
push
xchg
jge
xchg
add
sbb
add
mov
imul
dec
xchg
fiaddl
ja
scas
cmp
xor
sbb
lahf
xchg
aad
jp
cmp
xchg
lods
sub
dec
adc
cmpsl
in
icebp
clc
mov
lea
jle
lahf
push
sbb
sahf
xor
mov
mov
mov
xchg
stc
xchg
push
adc
cld
cmp
jge
add
and
push
jns
pop
pop
cmp
and
or
sahf
xchg
call
into
mov
fs
add
shlb
ret
andb
push
xchg
jmp
xchg
icebp
scas
imul
mov
pop
pop
xchg
ljmp
inc
test
outsl
add
mov
and
mov
not
lock
lock
test
jmp
cmp
jb
push
or
cli
lcall
es
sbb
mov
pop
sti
ror
mov
and
jl
cmp
repnz
imul
inc
out
inc
sbb
xchg
mov
lods
sub
fdivrp
mov
mov
jae
cmp
and
or
push
insl
rcrb
cmp
or
scas
cmp
hlt
leave
push
test
lods
lret
rcr
dec
add
leave
ljmp
lret
sub
sbb
sub
bnd
addl
mov
mov
ret
adc
ret
dec
inc
mov
scas
aad
inc
sti
stc
pop
and
mov
or
inc
push
mov
inc
stc
sub
pop
stc
jne
mov
push
inc
imul
xorl
insl
cmp
mov
cmp
ds
out
mov
push
hlt
sub
fwait
dec
es
or
xor
scas
out
pusha
push
insl
mov
add
js
or
rolb
call
scas
jmp
inc
jge
push
pop
cwtl
scas
add
mov
cmp
lods
sbb
inc
sub
mov
andb
push
pop
xchg
orb
xchg
les
jmp
sbb
std
insb
icebp
sti
cltd
push
repnz
outsl
push
cmc
jo
cmp
mov
scas
stos
adcl
mov
arpl
dec
mov
sar
lock
dec
div
push
dec
pushf
jb
lcall
push
in
pop
fbld
and
pop
jle
sbb
je
mov
xchg
jbe
gs
push
daa
cld
push
pop
sub
pop
push
cmp
lahf
stos
cld
stos
nopl
loopne
jb
repz
push
pusha
sti
ret
stc
call
mull
and
pop
jl
jl
mov
cli
das
lret
mov
aad
or
adc
into
cmp
sbb
add
test
clc
sarl
mov
inc
scas
pop
inc
add
jecxz
add
scas
jne
sahf
sbb
inc
outsl
pop
sub
adc
nop
cmp
fidivs
pop
mov
enter
rorl
jbe
jmp
stos
pop
faddl
xlat
loope
mov
and
push
out
les
or
dec
sub
insl
and
aas
xchg
stos
imul
push
lret
add
mov
lahf
aam
push
loop
loop
lock
xlat
jecxz
push
jle
ret
push
cli
mul
orl
mov
call
inc
mov
cmp
imul
mov
adcb
mov
push
in
xchg
inc
pop
les
in
push
imull
cmc
in
push
fwait
pop
sbb
dec
ljmp
int
int
clc
fs
pop
jns
int
lret
inc
loopne
push
call
dec
out
xor
dec
rcrb
shrb
sbbb
pop
push
inc
imul
ss
push
pop
sub
data16
jg
sub
xchg
push
fcomps
pop
outsl
push
rcrb
mov
repz
shlb
cltd
leave
push
jmp
fstl
jnp
idiv
inc
pop
clc
jbe
test
xorb
push
daa
jne
or
xor
and
sbb
je
dec
cmpsb
sbb
jg
stos
gs
push
lahf
rolb
sub
outsb
hlt
mov
cld
xchg
loope
in
xchg
push
out
in
sarl
jmp
add
push
mov
mov
or
pop
mov
lods
scas
mov
loop
mov
icebp
sbb
call
loope
mov
adc
pop
sbb
add
stos
movsb
popl
or
pop
jnp
jbe
jl
xchg
test
jg
xchg
sahf
dec
inc
pusha
adc
jg
jo
popl
outsb
dec
clc
xor
rcrb
out
cmp
test
adc
xchg
push
and
add
cmp
test
xor
ret
push
rcr
daa
sbb
enter
lds
hlt
mov
jecxz
push
add
adc
add
int3
dec
or
jecxz
dec
jmp
xor
push
enter
jg
es
xor
xor
mov
ja
dec
gs
test
gs
add
pop
mov
add
sub
cmp
adcl
int
push
dec
test
ret
inc
mov
loop
js
lods
ret
jmp
ret
pop
mov
lea
push
out
shll
cmpsl
cs
mov
inc
aam
jo
cld
test
lock
xchg
movsb
cmpsb
cmp
cli
aas
dec
aam
lea
js
call
inc
add
inc
xchg
xor
imul
test
push
push
cmp
push
cmp
xlat
pop
and
inc
sbb
lea
mov
out
out
shlb
lods
pusha
idivb
mov
jmp
add
fsts
scas
sub
adc
sti
test
pop
jge
rcrl
sti
cmp
and
es
jle
mov
or
les
rcrb
adc
jne
jge
stos
jno
jb
xor
leave
inc
xor
ja
jo
pop
inc
pop
cmpsl
mov
pop
pop
mov
shll
pop
push
pop
add
fnstenv
ret
test
cli
xor
in
out
xchg
aas
or
add
xchg
mov
jo
scas
std
pop
adc
xor
push
bound
ret
add
pusha
or
in
mov
adc
fpatan
push
mov
push
shlb
adc
sub
fistps
cmp
mov
cmpsl
popa
inc
push
test
xchg
jae
in
dec
lods
xchg
cmp
fisubrs
push
pop
stos
fucomi
add
movb
xchg
daa
into
fldcw
push
sub
lds
js
daa
xchg
dec
xchg
in
outsb
xchg
sub
out
notb
shrb
add
mov
inc
jno
mov
pop
push
outsl
jmp
jmp
into
add
push
jo
mov
pop
das
mov
dec
push
push
pop
dec
mov
inc
in
aam
jmp
stos
and
lds
and
pop
or
push
push
das
lea
lret
pusha
and
lods
shll
and
xchg
pushf
adc
mov
lods
mov
xchg
test
mov
lods
dec
mov
lea
cld
cmp
and
xor
loop
scas
ja
mov
aaa
fimull
xchg
adc
test
pop
fld
jge
cli
enter
push
repnz
out
jge
add
xor
xor
push
jno
mov
dec
xchg
jns
push
hlt
xlat
inc
adc
popf
out
lcall
jp
or
xchg
adc
xchg
mov
nop
into
scas
jns
rolb
or
int3
lods
into
add
xor
icebp
lock
or
inc
fdivrp
jp
lods
pop
ljmp
inc
or
push
popa
in
mov
push
or
pop
rclb
cmp
imul
or
mov
idivb
rcr
mov
into
in
add
lret
mov
jge
mov
xchg
push
push
sbb
enter
mov
jnp
in
add
adc
mov
lret
inc
data16
dec
scas
xchg
mov
xchg
mulb
scas
sub
stc
inc
xchg
jns
cli
inc
nop
gs
push
fsubrl
in
jo
or
sahf
iret
xor
mov
push
jo
out
mov
aam
and
loope
sbb
push
add
xor
or
in
and
cmp
mov
jo
movsb
nop
loope
cltd
mov
pop
dec
cmpsl
pop
fistl
hlt
mov
jp
sbb
leave
jge
push
cli
and
imul
push
or
and
mov
fmulp
mov
dec
out
hlt
push
or
jl
mov
or
mov
mov
fdiv
jbe
scas
hlt
jns
lret
adc
fcomps
loopne
xor
add
icebp
imul
js
push
inc
inc
cld
jae
sbbb
push
sub
ja
pop
push
pop
lods
imul
push
lcall
shl
popf
ret
and
sbb
sbb
out
repz
pop
nop
lds
bound
pop
xchg
arpl
sbb
push
mov
mov
dec
add
jb
mov
lcall
pop
bound
outsl
insb
notl
insb
mov
jl
mov
fs
push
dec
idivb
cli
mov
mov
inc
sub
outsl
aam
add
adc
cmp
pusha
aaa
js
loop
ror
push
pop
dec
xchg
bnd
inc
je
hlt
inc
lock
push
cmp
insb
leave
mov
in
scas
add
adc
push
fldt
mov
sahf
mov
movsl
mov
mov
fidivrs
popa
outsb
jle
mov
jne
sub
test
int3
inc
divl
mov
stos
loop
rcll
inc
rorl
bnd
sub
arpl
inc
inc
pop
cmpsl
dec
jle
fprem1
cmp
cmc
in
push
test
sahf
stos
lcall
push
in
mov
or
push
stos
inc
das
in
rorb
pop
shl
mov
sbb
inc
and
stc
lods
ljmp
jl
jnp
stos
mov
add
inc
sub
jo
pop
out
inc
sub
test
insl
pop
mov
pushf
testl
test
or
mov
outsb
sysexit
cmp
push
mov
sub
sbb
inc
jo
fwait
out
lds
mov
add
mov
jmp
idiv
sbb
cmp
inc
orb
mov
inc
xor
or
mov
lds
jl
shll
lret
dec
data16
test
imul
and
fadds
add
mov
out
call
in
mov
sbb
mov
stos
popa
mov
shlb
cli
scas
icebp
jb
push
mov
int3
rcrl
clc
fcomps
mov
and
loopne,pt
fs
mov
sub
test
mov
xor
xchg
add
fsubrs
bound
pop
test
aas
add
into
mov
mov
push
dec
jne
sub
sbb
add
outsb
mov
dec
rcrb
ljmp
fistl
jns
fadds
enter
pushf
mov
xor
movsb
jle
dec
jae
shr
lret
lea
jge
stos
pop
int
stos
arpl
jb
fsts
mov
dec
aas
jg
inc
or
mov
mov
popf
test
popf
clc
dec
or
icebp
mov
outsb
pop
dec
outsb
pop
sbb
rcr
rorl
mov
fbstp
enter
and
lods
jnp
jp
lcall
ret
movsb
int
dec
xor
mov
ljmp
movl
repnz
and
mov
popa
inc
jl
jl
test
push
aas
xchg
lea
nop
xor
adc
or
sti
pop
pop
mov
dec
jae
mov
loop
jl
loope
dec
cmp
in
adc
arpl
mov
loopne,pn
lds
add
daa
ret
into
adc
or
movsl
int
ss
push
sbb
inc
rol
xchg
jmp
adc
outsb
lods
or
jo
inc
aas
je
push
ficoms
inc
das
jns
scas
stos
out
inc
imul
cs
or
in
fsubrs
mov
es
dec
mov
insb
lds
push
lret
mov
jecxz
out
and
aas
iret
xor
xchg
xchg
ret
sub
in
scas
or
mov
repnz
pop
jmp
imulb
jge
push
dec
shl
call
cmp
dec
insl
xchg
mov
add
push
shrb
in
loopne
inc
mov
ss
xor
pop
rcll
out
rcrb
cmc
hlt
fadd
test
dec
mov
les
stc
and
xchg
shrb
cmp
lcall
mov
jnp
lahf
jnp
lret
inc
stos
loopne
adc
in
inc
movsb
dec
imul
je
mov
jmp
cmp
lods
or
pop
stos
enter
dec
ret
ljmp
push
cmpsl
out
and
pusha
pop
inc
mov
sbb
mov
std
add
movsl
mov
nop
bound
mov
ljmp
xor
data16
fcoml
rorb
in
sarl
nop
jp
xor
add
sbb
int3
mov
dec
cwtl
mov
ffreep
out
lret
loop
adc
sbb
sbb
loopne
inc
inc
das
and
adc
hlt
ret
shrb
xchg
inc
jbe
aaa
movsb
and
mov
fisttpll
out
xor
gs
push
gs
orl
ds
inc
cld
pop
mov
loope
push
or
pop
xchg
mov
sbb
push
pop
inc
sbb
arpl
les
mov
scas
ret
xchg
jno
mov
scas
addr16
call
hlt
aaa
decb
in
out
mov
stc
loopne
mov
hlt
lret
notl
dec
and
adc
xchg
adc
popf
mov
jns
push
xor
ret
add
push
mov
ror
push
dec
mov
sbb
xchg
js
mov
cmp
pop
push
inc
fildll
push
inc
std
loop
icebp
jl
sarl
nop
cmp
jno
popl
fstps
sub
in
das
jb
cli
mov
inc
test
xor
xchg
push
test
aad
fwait
dec
xchg
imul
jmp
fimuls
xchg
or
xchg
aad
pop
adc
fnstenv
aaa
mov
mov
lcall
cs
xor
mov
mov
xor
push
in
add
test
pop
adc
arpl
stos
aaa
sbb
pop
lcall
lret
test
dec
xchg
inc
pop
int3
jo
inc
out
out
fcoms
jle
movsl
imul
inc
fs
arpl
mov
adc
sbb
aas
movsl
pushf
shr
mov
mov
adc
mov
xchg
rorb
sub
inc
mov
xchg
cmpb
insl
jno
xchg
adc
sbb
add
lods
fwait
jae
stos
xchg
into
jnp,pt
iret
sub
cmpl
iret
icebp
sub
das
movl
mov
xchg
push
cld
dec
pop
gs
pop
xor
adc
sub
idivl
add
xchg
hlt
and
shll
mov
ret
xor
sub
xchg
scas
cmp
push
jmp
movsb
or
pop
mov
test
cmp
adc
hlt
pop
add
pop
push
js
dec
aaa
pop
inc
or
add
cltd
cmc
movsl
mov
pop
or
inc
cmpsl
xor
repz
idivl
fcomps
sub
push
and
aas
push
cmpsl
add
jmp
pop
mov
pusha
jo
cmp
adc
sbb
and
mov
stc
xchg
jg
jge
dec
fidivrs
mov
push
pushf
cwtl
fld
pusha
dec
mov
repnz
cltd
jge
outsb
aaa
sbb
cld
mov
push
inc
mov
fadd
cltd
insb
and
push
xor
pop
sub
sti
xchg
inc
cld
dec
lahf
dec
bnd
push
pop
lret
or
pop
cmp
push
out
or
sub
pusha
push
popf
push
and
hlt
xchg
dec
adc
xorps
subl
stc
sub
jg
or
cmpsb
sbb
cmc
sahf
jne
sarb
cwtl
rcl
mov
xchg
or
lea
andb
in
and
and
int
leave
gs
dec
jno
mov
mov
sub
outsb
sub
cmp
xchg
int
roll
push
mov
shll
pushf
push
or
clc
cli
or
pop
mov
nop
mov
stc
jb
movsb
xchg
sub
test
lret
les
add
das
cmc
icebp
mov
lcall
or
ss
mov
stc
sti
sarb
sub
or
test
mov
out
sarl
xchg
pop
out
lret
inc
sbb
xchg
xchg
fisttpll
test
xor
cli
xchg
sub
push
mov
enter
js
xchg
repz
ja
jp
jae
mov
push
push
out
cs
imul
and
jns
sub
rclb
mov
pop
jp
cld
fsubs
mov
push
dec
or
lods
xchg
push
cmpl
and
fidivrs
mov
mov
iret
jl
fdivl
sub
mov
fistpll
outsl
ds
xchg
in
or
popf
mov
xchg
push
xchg
mov
andl
popl
jmp
fbstp
or
movsb
push
mov
fwait
dec
hlt
jg
pop
adc
rorb
addb
adc
mov
sub
mov
and
fimuls
pop
dec
mov
fdivrl
jo
rorb
cs
pop
mov
jno
insl
fstp
adc
xchg
lahf
push
fdivl
pop
mov
cltd
cltd
xor
fldl
jno
cltd
push
pminsw
daa
adc
cmp
repz
lock
and
jne
jo
daa
cmpsb
push
in
addb
mov
mov
js
aad
pop
mov
push
imulb
push
dec
jmp
xchg
bound
mov
aaa
sub
adc
outsl
dec
cld
icebp
cwtl
test
cli
fdiv
mov
adc
shr
movsl
jnp
imul
add
xchg
loope
in
push
arpl
out
pop
enter
pop
ja
mov
pop
xor
jo
in
ds
rclb
frstor
sarl
fistpll
push
or
lods
addr16
fsubrs
xchg
sub
adc
std
mov
jmp
ss
cmp
loope
fsub
lret
jbe
jmp
sub
lds
add
lods
push
scas
xchg
jmp
push
fistpll
push
aas
ljmp
ss
xchg
aad
dec
dec
pushf
lahf
cmpb
pop
ljmp
jb
out
orb
inc
mov
cmp
inc
js
push
fwait
mov
adc
and
imul
add
loopne
and
push
iret
dec
lahf
mov
or
ja
cltd
mov
loopne
loope
test
lods
jecxz
int
and
or
cmp
jne
mov
or
imul
sub
js
in
xchg
dec
jns
mov
stos
mov
mov
or
mov
addr16
ds
lcall
mov
xor
jbe
cmp
repnz
mov
adc
rcrl
mov
mov
mov
xor
pop
mov
jne
repz
mov
inc
xchg
or
insb
ret
cli
pop
insb
lea
sbb
push
mov
mov
iret
sub
mov
std
loopne
imul
out
daa
out
mov
mov
ds
sarl
mov
mov
fmull
jge
mov
je
cmpsb
push
xchg
adc
test
cli
stc
call
fdivr
fbld
lods
movsl
add
or
ret
addr16
in
sti
gs
shlb
push
mov
sub
nop
aam
dec
sbbb
pop
cld
dec
jle
out
iret
ja
fucomi
jnp
inc
mov
lods
insl
xor
cmp
add
je
xor
mov
jnp
cmpl
pop
push
stc
mov
test
adc
movsl
clc
sarb
sbb
pop
jle
push
jb
in
lahf
add
nop
and
jo
mov
out
jge
test
shrl
cltd
mov
jno
push
push
fstpl
inc
cmpsb
mov
mov
cli
jbe
wrmsr
pop
cmc
jno
inc
pop
push
in
inc
dec
sbb
out
mov
mov
add
lcall
lahf
sub
shlb
js
loop
ja
ret
sbb
sub
test
ret
push
push
js
lcall
cmp
nop
mov
bnd
andb
adc
adc
xchg
ss
mov
lods
ret
cmp
iret
cmp
dec
outsl
xorb
mov
mov
jns
ficoml
xchg
or
stos
ret
pushf
mov
fmuls
loope
sub
cmpsb
movsl
xor
pushl
fnsave
and
fists
hlt
nop
movsl
jmp
lds
popf
int3
test
hlt
or
ss
xor
adc
jne
cmp
inc
push
xor
sbb
xchg
inc
in
push
inc
test
sub
pushf
inc
test
lahf
jmp
inc
dec
lock
xchg
ja
popf
insl
lret
and
loope
mov
dec
pop
ja
xlat
mov
add
and
jg
push
pop
push
arpl
mov
mov
ljmp
and
stos
inc
inc
cmp
cmp
iret
movsb
neg
adc
je
out
popf
add
incb
clc
adc
vmovsldup
imul
dec
sbb
adc
xchg
andb
mov
push
test
das
mov
dec
dec
call
outsl
sub
out
lea
adcb
jl
leave
fiaddl
mov
lock
xor
inc
mov
cmpsb
shll
xlat
dec
pop
xor
and
inc
les
xchg
and
adc
outsl
and
and
add
dec
sub
lods
push
mov
mov
mov
cmc
sub
test
loop
add
ret
out
dec
pop
das
pop
cmp
mov
cmp
test
pop
jmp
fs
inc
xor
xchg
test
and
pushf
fimuls
repz
dec
insl
sub
and
ljmp
imul
shlb
jmp
mov
cmpsb
hlt
leave
fcoml
sub
dec
xor
push
sub
fldl
test
mov
ret
test
jge
inc
xor
test
shlb
insb
add
jb
aaa
mov
cmpsl
jmp
jl
xorb
cmp
fistps
pop
xorl
sbb
iret
xchg
lret
cmp
lods
lahf
jns
nop
pop
test
adc
mov
sbb
xchg
xchg
popa
movsb
cmpsb
xchg
xor
jne
xchg
xor
shlb
jmp
xor
xchg
sbb
adc
cld
cmp
icebp
sbb
adc
jbe
out
loop
push
out
cs
shlb
mov
lret
ret
shll
adc
cmp
mov
cltd
push
add
aad
cmp
inc
cmp
push
pop
xchg
xor
mov
cs
mov
mov
movsb
inc
lret
mov
sbb
jbe
arpl
or
xchg
mov
sbb
mov
std
push
repnz
enter
cmp
adc
stos
gs
loopne
mov
push
and
lret
add
loop
ret
sbb
mov
cmp
push
mov
or
and
outsl
in
inc
mov
montmul
cmpsb
test
or
mov
mov
sub
xor
mov
mov
in
pop
jae
and
push
jmp
and
add
jge
test
fldenv
fidivrs
jns
dec
cmp
mov
or
scas
push
sbb
aad
and
icebp
mov
out
mov
psllw
lea
cli
mov
lods
mov
int3
nop
xor
repz
lret
insb
pop
jae
dec
lahf
jnp
and
jns
sbb
fisubrl
sbb
notl
push
andl
pop
pop
and
adc
sub
andb
xchg
mov
stc
jmp
push
mov
add
sbb
es
out
xor
xlat
sbb
lcall
and
add
lea
scas
xor
pop
and
cmpsl
fwait
lret
push
inc
adc
into
shll
mov
xor
jg
mov
sub
inc
fimuls
inc
ljmp
push
xor
and
aaa
add
pop
popa
imul
cmpsb
mov
cmc
mov
gs
jmp
mov
xor
mov
xchg
lea
sub
mov
push
insb
call
jmp
icebp
dec
cmp
adc
push
js
push
cmp
in
xchg
jcxz
cltd
xchg
fcompl
push
cwtl
ret
outsb
fwait
imul
jl
mov
inc
cmp
inc
sub
mov
popf
js
movl
jnp
nop
xor
loope
sarb
ja
sarb
cmp
in
cmc
jge
cld
push
mov
and
sub
test
sub
lcall
mov
xchg
int
or
sub
sbb
jp
pop
and
fisttpll
push
cltd
jno
ss
jnp
subb
push
setle
jg
adc
loope
xorb
idivl
inc
sbb
mov
subb
dec
inc
inc
js
mov
loope
stos
sbb
or
and
jb
fwait
xor
icebp
test
cltd
push
jbe
mov
enter
in
push
cmp
ljmp
shll
dec
mov
std
adc
fists
mov
popa
or
aas
xchg
pop
mov
xlat
fdivl
repnz
movsb
sub
or
sbb
imul
cmp
dec
ds
push
sti
push
lds
ret
ja
dec
mov
fsubrl
in
int
dec
cli
sub
xchg
mov
xchg
fs
pushf
int3
adc
or
pop
add
sub
mov
cmpsb
mov
and
arpl
pusha
or
gs
aad
push
adc
cmp
clc
and
jo
bound
pop
rorb
testl
int
jne
or
pop
jecxz
push
out
dec
lret
imul
adc
pop
push
jmp
mov
dec
inc
pop
sub
inc
mov
lcall
fwait
sub
std
je
push
jecxz
mov
into
test
clc
xchg
cs
inc
movsl
je
in
lock
lock
rolb
leave
std
mov
ljmp
sub
test
test
adc
dec
pop
outsb
test
stos
fmul
cli
psrld
cld
sti
and
rcl
hlt
cmp
dec
out
push
ds
mov
adc
jne
jl
leave
push
cmp
scas
cmp
into
add
jecxz
mov
fstl
shrl
mov
mov
mov
push
lods
xor
inc
je
xor
jmp
mov
out
and
cmp
enter
inc
xor
ret
data16
loopne,pn
cltd
pop
clc
mov
sub
and
jb
mov
sbb
jge
mov
jne
mov
sub
jl
xchg
dec
iret
push
mov
fnsave
call
sbb
xor
cwtl
out
repz
or
push
sbb
mov
mov
mov
in
mov
or
sbb
arpl
inc
add
mov
and
xchg
sub
pop
xchg
and
fnstsw
mov
mov
clc
test
adc
outsl
sbb
inc
dec
xchg
adc
inc
dec
dec
insb
ret
sbbb
xor
sbb
fs
dec
icebp
dec
out
shr
leave
das
mov
test
out
std
gs
in
fsubrl
xor
push
mov
pop
popf
xchg
cmp
stos
shll
test
cmp
pop
out
sub
push
popf
rcr
loopne
lds
test
shrb
ds
outsl
cmp
inc
aad
lods
into
stos
ds
and
sbb
jge
test
int
fdivrl
fisttpll
mov
repnz
sar
nop
inc
or
pop
je
adc
lods
call
pop
mov
xchg
fwait
rorb
mov
call
xor
imul
jno
push
inc
xchg
bound
mov
sti
not
jnp
inc
imul
inc
pop
mov
aam
adc
push
sahf
jl
pop
jns
add
cmp
stc
addr16
pop
dec
mov
and
mov
int3
pusha
push
inc
pop
xchg
xchg
mov
push
sbb
ret
out
mov
xor
ljmp
dec
clc
cmp
jne
nop
repnz
push
dec
adc
fs
mov
adc
pop
rcll
stos
lds
stc
mov
adcl
aas
jno
xor
mov
sub
sub
sbb
xor
bswap
pop
repnz
ret
test
or
jmp
jae
fidivl
pop
add
or
in
and
jnp
int3
jae
loopne
sub
and
xchg
out
cmpsl
cltd
dec
bound
scas
push
and
mov
imul
xchg
jb
jle
divl
movsl
sub
je
cmp
rclb
sahf
into
jle
lcall
and
stos
jb
cmpl
push
pop
xor
stc
adc
stos
das
aad
add
sbb
inc
in
mov
out
sub
imul
fwait
jns
cltd
arpl
sbb
lcall
push
aas
popf
xchg
xchg
cmp
insb
fs
jp
mov
xchg
sub
pop
stos
push
mov
sbb
inc
fwait
sub
dec
test
dec
mov
popf
ds
mov
popa
adc
fs
pop
fstpl
xlat
dec
out
xchg
jo
movsb
lods
fnstenv
add
test
cmc
mov
and
popl
inc
adc
stos
push
xchg
in
out
cmp
rcrl
pop
in
jecxz
adc
divl
popa
bound
ljmp
sub
cmp
in
mov
idivb
loope
add
pop
push
fisttps
fwait
mov
aas
cs
rcl
adc
data16
mov
inc
je
xchg
mov
and
movl
popa
rol
in
in
cs
push
adc
and
fistl
icebp
shl
jae
imul
push
bound
fadds
inc
xlat
and
or
inc
adc
jle
cmp
pop
insl
xor
push
jge
add
cld
pop
mov
push
sub
jno
imul
xchg
pop
inc
das
push
sub
icebp
scas
push
iret
xor
xor
dec
movsb
inc
stos
nop
loopne
mov
ja
repz
add
lret
jmp
push
xor
mov
test
pusha
pop
xchg
std
sbb
xor
xchg
out
xchg
cltd
sbb
pop
scas
pusha
cmp
cmp
sbb
int3
mov
mov
jmp
shrb
xor
pslld
aam
stc
dec
xlat
or
push
inc
ljmp
call
inc
shrb
mov
lret
es
stos
inc
in
fsubr
sub
cmp
imul
pop
mov
mov
lcall
xchg
push
out
pop
fs
mov
mov
or
jb
ret
push
dec
mov
adc
test
mov
jl
jmp
bound
pop
in
xor
jecxz
xchg
icebp
add
loopne
punpckldq
popa
xchg
cmp
sbb
or
nop
or
add
fiadds
rcrl
add
in
jns
xchg
push
xchg
fldt
ss
mov
test
lods
xchg
fsub
orb
push
aam
mov
lods
adc
lret
aas
cmp
push
jl
cmp
fwait
jne
jp
jge
or
popa
mov
js
xchg
and
hlt
test
push
sbb
es
jmp
repz
mov
call
imul
daa
stos
outsb
outsl
movsb
mov
xchg
cs
movsb
sub
or
jo
stos
pop
mov
call
sbb
lret
stos
push
push
inc
es
dec
add
mov
in
je
insb
fistl
fstpl
icebp
aas
pop
fisubrl
inc
add
scas
xchg
inc
je
pushl
rclb
fsubrs
fnstcw
ficompl
outsb
pop
ret
push
sub
flds
inc
mov
xchg
mov
lds
add
mov
fdivrp
adc
pop
addb
in
mov
in
xchg
xor
loopne
xchg
aad
idiv
add
xor
sbb
leave
mov
adc
and
js
cmpb
dec
jle
sbb
and
pop
mov
rcll
jl
iret
and
imul
sbb
popa
sarb
push
aad
add
test
cli
and
adc
notl
pop
out
push
pop
shll
dec
sub
xor
out
push
sub
dec
add
mov
and
jne
mov
inc
xor
jns
adcb
or
hlt
inc
sub
inc
sbb
push
and
cld
in
mov
or
mov
xchg
dec
out
pop
movsl
das
repnz
popf
xlat
adc
xchg
mov
lcall
jge
mov
jmp
loop
enter
sub
inc
add
rolb
and
mov
add
shr
sub
fcom
mov
jb
sbb
push
in
loopne
je
cmp
add
xchg
sub
push
dec
in
and
jo
push
std
xchg
andb
loope
adc
sbb
push
sub
sbb
mov
dec
lods
mov
sub
sub
ret
lods
mov
xchg
sub
mov
mov
paddq
rclb
lret
sub
jnp
inc
adc
adc
add
in
inc
push
aad
movsl
bnd
pop
jmp
sub
jb
fwait
scas
ljmp
inc
test
sbb
fs
insl
jns
daa
loop
shl
xchg
mov
fwait
jmp
pop
mov
dec
mov
pop
stos
dec
push
imul
mov
fisttpll
jmp
rorb
mov
aad
les
or
lret
mov
jnp
les
inc
pop
push
je
outsl
outsl
adc
gs
jae
push
pop
sahf
xchg
xchg
jl
cmp
aaa
push
sbb
pop
or
jmp
mov
xchg
sub
cmp
mov
int
sti
mov
test
cmp
xchg
jle
lahf
xchg
pop
lret
fdivl
jno
add
pop
pop
xor
pop
sub
leave
dec
ss
fistps
out
testb
mov
pop
dec
mov
insl
cmc
push
fcomi
movsb
dec
dec
mov
mov
lret
xor
lds
pop
clc
aad
fadd
xchg
xchg
inc
sarl
test
push
xor
lahf
or
pop
cmc
dec
in
dec
jae
push
cmp
fs
outsl
into
je
mov
or
adc
jge
push
mov
and
lret
mov
cld
icebp
lock
outsb
mov
pop
pop
and
std
sub
inc
fsts
stos
jb
pop
hlt
ret
fidivs
mov
mov
fadds
outsb
pop
push
mov
nop
xor
sbb
ret
scas
mov
push
sub
ret
xchg
stc
fwait
rcl
cmpsb
js
lret
cmpsl
xchg
or
arpl
lods
aam
push
cmp
leave
cmp
sahf
andb
and
jbe
arpl
jge
sarb
loope
popf
push
jbe
negl
adc
xchg
in
in
inc
jne
cld
cli
lea
stos
push
loope
xor
pop
sbbb
sbb
outsl
pusha
pop
jbe
or
mov
imul
scas
dec
dec
dec
mov
sar
mov
and
filds
gs
push
lock
mov
stos
or
add
js
sti
inc
pop
out
adc
xchg
mov
cltd
mov
pop
and
movsl
fisubrl
push
shlb
test
xor
sbbl
add
jne
mov
stos
test
test
inc
out
and
push
adc
stos
imul
imul
add
shlb
add
fwait
jbe
jle
or
int3
mov
jp
subl
orl
pop
shlb
pushf
pop
insl
das
pop
lcall
sub
xchg
mov
arpl
addb
and
sbb
jo
pushf
cmp
mov
xchg
cmpsl
in
cmp
das
jge
xor
in
lahf
push
mov
mov
fidivl
mov
lret
sub
imull
jnp
mov
mov
sub
pusha
inc
bound
lods
push
ss
es
sub
roll
sbb
test
std
cs
cmpsl
out
mov
push
je
adc
push
jno
mov
and
jge
lret
mov
in
loopne
pop
jmp
iret
mov
xchg
mov
stos
mov
es
add
add
ficompl
in
orl
popa
jmp
inc
mov
dec
adc
and
xchg
sbb
jp
xlat
xchg
les
subb
insl
lcall
outsl
sub
je
adc
cmpsb
pop
ds
rcrb
xor
addr16
dec
iret
and
movsb
xchg
notb
xor
adcl
lods
lcall
pop
pop
push
jle
push
les
cmp
mul
aad
gs
gs
push
ss
or
imul
and
pop
hlt
insl
cwtl
lds
cmc
inc
insb
test
xor
leave
inc
repz
nop
je
sahf
push
fnstenv
cmp
mov
sbb
hlt
mov
das
loope
add
xchg
les
std
pop
mov
adc
test
inc
inc
aad
pop
aas
sbbb
mov
fnsave
sub
faddp
sbb
test
stos
mov
loope
pop
test
adc
test
fsub
xor
fstpl
inc
add
jmp
bound
cmc
jnp
dec
rcrb
sbb
cs
sbb
sahf
frstor
or
xor
jns
fisttpl
into
adc
jge
mov
jge
pop
sub
jge
push
push
int3
es
mov
inc
jl
hlt
arpl
xor
int3
stos
fbstp
insb
push
dec
shr
mov
inc
cli
xchg
shrb
sbbb
push
mov
push
mov
mov
jecxz
cmpsb
flds
push
shl
mov
cld
loopne
icebp
and
mov
aad
stc
lock
push
pushf
out
sub
pop
scas
bound
mov
negb
in
xchg
mov
jecxz
jnp
rol
sbb
stos
out
adc
outsb
inc
jmp
gs
imul
jno
pop
dec
xchg
rcrb
pop
imull
pop
inc
call
and
sarb
mov
cmpsb
fwait
jle
lret
pop
cmpsb
pop
popa
cmp
inc
cmp
sub
cld
dec
in
arpl
jne
cmp
movsl
jns
cld
ret
in
fwait
jo
and
adc
pop
jo,pt
sub
pusha
mov
out
push
dec
cmp
sub
pushf
jl
cmpsb
mov
sbb
imul
cwtl
stos
les
icebp
push
xchg
mov
sbb
repz
scas
mov
aad
fstps
js
add
adc
push
fdivs
mov
adc
add
push
xor
adc
mov
lds
in
andb
les
jbe
jl
push
pop
xchg
push
mov
mov
pop
or
jne
cltd
cmpsb
dec
push
mov
sbb
inc
mov
push
imul
and
nop
pop
mov
ss
pop
jno
cwtl
cld
jmp
inc
scas
jns
or
cmp
push
xor
xorl
xchg
aas
fdivs
aad
andl
sbb
jle
fs
je
ret
jl
scas
daa
test
and
cwtl
cmp
aad
inc
jle
cwtl
rcl
inc
sub
pop
sub
movsl
ret
push
push
testl
daa
push
dec
fs
xchg
cmpsl
xchg
adc
lods
sar
movsl
dec
sub
sbb
mov
scas
and
mov
adc
out
scas
gs
sub
pop
or
pop
mov
push
adc
mov
test
cmpsb
pop
xchg
adc
or
insb
fistl
mov
loopne
jl
ja
pop
add
or
pop
mov
dec
sub
fildll
cld
xor
cmp
push
fmuls
jle
jecxz
or
mov
test
dec
add
ficomps
pushf
add
mov
cmp
jb
pop
jmp
jle
repz
int
in
pop
pushl
aam
and
aam
sahf
in
popf
imul
fcmovnbe
pop
and
and
push
mov
push
ja
mov
fsubl
lret
push
push
adc
ret
aad
das
xor
cmpsb
sarb
xchg
out
push
jns
xchg
pop
mov
jl
or
fisubs
inc
fsubs
ds
xor
push
push
ss
in
adc
push
adc
push
fisttpl
jae
ja
xchg
add
mov
or
mov
jae
mov
jmp
adc
push
cltd
mov
ret
loope
adc
fs
xor
pop
in
cmc
xchg
mov
sub
push
inc
push
dec
pop
fstps
xor
push
dec
lods
xchg
push
jns
mov
inc
movsb
inc
sahf
repz
xchg
mov
sahf
stos
push
mov
or
cltd
lea
xor
mov
xchg
lock
cmpsb
repz
xlat
jl
cmc
in
arpl
in
xchg
push
and
mov
mov
aam
push
jnp
xchg
xor
inc
into
xchg
testb
ds
dec
cli
push
and
sbb
cmp
adc
mov
jmp
aad
mov
fmull
test
repnz
xchg
mov
nop
or
sti
adc
push
mov
rcll
cmp
adc
xor
in
or
push
int
aas
les
gs
xor
xchg
jmp
push
jecxz
pop
mov
push
and
mov
cltd
dec
inc
leave
inc
ret
pop
sbb
mov
adc
into
add
pop
mov
inc
jo
jns
xor
inc
sbb
cmp
sbb
sbb
sbb
lcall
or
stc
push
pop
jnp
sbb
lds
lds
or
cs
lret
mov
das
jbe
or
add
xchg
sbb
jo
ret
addr16
aaa
std
enter
and
sub
dec
ss
lods
cmp
int3
pop
movsb
pusha
scas
pop
add
mov
xchg
mov
mov
shrl
xchg
push
mov
stos
adc
sbb
leave
test
icebp
insl
fwait
in
dec
test
jbe
movsl
icebp
mov
insl
pushf
cmpsw
lcall
xor
mov
pop
jns
fcmovnb
imul
mov
mov
mov
inc
adc
fsubl
cld
add
pop
insb
shrl
or
xor
mov
das
fwait
enter
xlat
out
xorl
mov
sahf
or
loopne
icebp
xchg
mov
or
leave
aam
cltd
ljmp
pop
inc
cmpb
call
jge
gs
cmp
hlt
mov
sbb
je
fs
ret
add
mov
fisubrl
cmpsl
in
mov
inc
lret
dec
cmp
or
hlt
and
les
xchg
sbb
push
xlat
push
mov
andl
adc
pop
cwtl
mov
lcall
pop
adc
pushf
popf
mov
adc
movsl
popa
rcl
dec
ficoms
out
lods
lcall
and
imul
fisubl
dec
and
dec
add
into
movsb
and
repnz
filds
ja
xchg
xlat
data16
push
add
or
inc
cmpsl
sub
pop
jmp
jno
test
cmp
sbb
cmp
jp
sub
mov
sahf
pop
or
loop
sbb
clc
stos
imul
sub
cld
adc
je
add
cmpsl
cmc
pop
jb
inc
push
dec
into
xor
popa
ja
leave
into
roll
xor
je
mov
aaa
popl
test
es
fs
movb
mov
daa
dec
outsl
xlat
dec
push
stos
cmp
jg
in
add
mov
xchg
je
cmpsl
cmpsl
jns,pt
ss
jb
mov
dec
mov
data16
xchg
leave
in
aaa
sub
gs
into
es
call
sbb
out
fmuls
imul
pop
xchg
pop
iret
xor
inc
pop
inc
shlb
add
ds
xchg
add
xchg
ds
inc
push
push
stos
mov
lcall
test
or
out
leave
add
xor
movsb
testl
add
lds
movsl
arpl
outsl
into
mov
cmp
leave
dec
dec
fisttpl
test
xor
lret
sub
ret
inc
sub
out
in
add
lret
outsl
mov
sub
inc
fdivs
bound
scas
cmp
xchg
add
xor
arpl
pop
cmp
inc
and
mov
mov
rcll
cmp
sbb
xchg
cmp
add
rdtsc
fdivrs
push
push
and
jno
mov
jmp
ffreep
stos
mov
sahf
arpl
inc
arpl
mov
rcll
pop
gs
and
sub
ja
je
iret
in
xor
add
mov
jnp
nop
in
or
jmp
mov
mov
cltd
into
outsl
lahf
mov
xchg
loope
clc
inc
addr16
mov
add
mov
push
and
inc
pop
iret
mov
cmp
xchg
push
and
out
mov
jae
push
dec
cld
jbe
imul
aam
sbb
sbb
aam
sbb
fdivl
cmp
aaa
jbe
test
push
sub
jmp
or
mov
aad
and
inc
sbb
fstpl
std
js
jl
idiv
sub
inc
cmpsl
das
mov
ret
loope
inc
adc
shlb
in
xchg
and
cmp
or
xor
mov
push
rorl
cmp
pop
je
jge
pop
mov
mov
inc
fs
push
cmp
js
or
mov
cmp
adc
or
mov
sbb
pop
inc
movsb
fidivs
ss
inc
xchg
ds
xchg
add
and
nop
inc
cli
mov
add
sub
cmp
icebp
out
pop
bound
xchg
push
or
sub
or
xor
xor
push
out
ljmp
mov
ret
mov
inc
dec
jg
shl
adc
add
mov
xor
push
cmp
xchg
push
xor
sbb
inc
orb
pop
xor
fcmovne
sub
sbb
imul
pop
xor
push
push
cmp
pop
sbb
leave
push
pop
scas
inc
sub
adc
mov
ja
stos
add
aam
nop
lcall
in
inc
pop
xor
les
jg
xchg
int
fsubrs
pop
pusha
outsl
mov
sbb
xor
sbb
pop
push
mov
cwtl
test
das
pop
xchg
fldcw
adc
pop
sbb
adc
adc
test
push
jmp
ret
addb
loop
ret
fdivs
jg
jae
lods
sbb
out
imul
mov
jecxz
test
lret
or
pop
xor
rcrb
mov
mov
sbb
test
outsb
std
in
clc
add
scas
cmp
add
inc
pop
fiadds
cltd
pop
dec
outsb
mov
lcall
and
cltd
mov
sbb
sub
pop
dec
inc
or
xchg
in
pop
xchg
inc
jns
cmp
inc
pusha
in
add
push
xchg
jae
push
push
shlb
inc
mov
inc
fwait
sahf
in
lret
out
add
adc
repz
test
xchg
mov
push
lret
fildll
sbb
int3
popa
shr
lods
jbe
jnp
adc
clc
clc
xchg
aad
mov
xchg
push
mov
inc
nop
jns
in
jnp
mov
add
pop
push
xchg
fdivl
cli
mov
pop
pop
jae
loop
stc
cmp
dec
or
lds
fucomi
push
cs
lret
mov
std
pop
aaa
mov
add
cld
rcll
sub
pusha
pop
push
cli
cwtl
sbb
aas
or
and
gs
xchg
cmpsb
push
inc
inc
xor
sahf
imul
cld
pusha
pop
addr16
pop
hlt
gs
test
nop
lods
sub
add
out
scas
ljmp
xchg
call
lock
cltd
cmpsl
rcrb
faddl
shlb
sbb
mov
mov
xor
insb
cmp
cmpsb
iret
shll
adc
outsl
iret
mov
mov
pop
hlt
shll
push
lds
mov
xchg
dec
cld
call
icebp
add
in
rclb
neg
adc
mov
lahf
cmp
mov
pop
inc
outsl
sbb
mov
dec
rorb
add
lahf
daa
xor
je
scas
aas
cmp
jp
add
add
cmp
mov
push
pop
jl
or
xor
or
sbb
pop
jbe
inc
iret
mov
mov
xchg
jne
mov
in
andl
sarb
mov
add
push
cmp
aad
mov
setb
or
add
cmp
outsb
mov
dec
pop
mov
imull
out
pop
test
movsl
pop
fcoml
repnz
ss
adc
pop
test
and
lret
pop
mov
int
mov
daa
pop
sbb
inc
sub
push
inc
and
and
cmp
xchg
lret
loopne
andb
pop
xchg
call
fiaddl
popf
aam
pop
out
mov
cli
das
out
xor
cli
xchg
int
add
inc
pop
jmp
ja
push
mov
cmp
jl
lods
lcall
mov
lock
mov
mov
in
push
insl
mov
mov
inc
add
inc
das
in
adc
push
fsubrs
bound
push
inc
xchg
xlat
or
cmc
in
sbb
ret
or
lock
in
flds
dec
adcl
insl
ret
data16
add
mov
push
mov
ss
jo
push
or
out
sahf
jge
cmp
sub
popf
orl
xor
jg
call
mov
xor
or
rorb
out
rcll
sbb
dec
inc
stc
les
inc
adc
inc
pop
test
jp
push
movsb
int3
cltd
in
xchg
insl
clc
inc
mov
ret
dec
cmpl
aas
lret
lahf
orl
mov
mov
dec
incl
ljmp
movntps
xor
popa
pop
dec
roll
and
je
pop
mov
in
push
test
shrl
xor
xlat
sbb
je
sbb
ja
pop
sti
or
push
add
es
mov
test
or
bound
sub
loope
rcr
shr
cmpl
imul
call
fisubrs
mov
rcrl
mov
arpl
cmp
decl
xchg
mov
cmp
inc
pop
mov
sarl
fdivrs
in
jge
arpl
imul
int
es
add
imul
lds
insb
fsubs
pop
clc
xor
jmp
test
lock
inc
cmpxchg
rorb
xchg
inc
push
rcl
pop
jae
shl
sti
push
pop
add
mov
repz
dec
cmp
sbb
xorb
sub
inc
lods
cmp
jg
stos
andb
push
adc
pop
std
in
xchg
inc
add
mov
aad
in
sbb
daa
cmp
lea
cli
jge
insb
add
mov
pop
movsl
mov
addb
pop
gs
fldcw
dec
in
mov
outsb
and
jb
xchg
fldl
loope
std
mov
pop
repz
inc
lds
fs
jle
push
push
into
cmp
push
ljmp
dec
push
leave
cmp
lret
andb
adc
xchg
negl
test
popa
mov
jnp
hlt
mov
outsl
ds
inc
scas
jge
shl
insl
mov
mov
sub
jbe
lds
sahf
sub
scas
lzcnt
and
and
xchg
js
cwtl
ret
pop
out
in
mov
push
adc
sbb
add
fcoms
sarb
mov
fsubrs
das
push
mov
or
addb
test
push
jmp
out
push
repnz
or
mov
jns
lcall
xchg
jl
push
pop
dec
cmp
gs
push
pusha
dec
pop
cld
test
pop
pusha
xor
cmc
ds
push
mov
mov
shl
cmc
fsubr
test
nop
decl
lods
jo
fucomp
add
mov
add
out
add
mov
xchg
cmp
pavgw
imul
xchg
je
jns
adc
mov
inc
test
addr16
shrl
pop
jb
mov
inc
jbe
movsl
js
int3
dec
xchg
jns
mov
push
mov
xchg
push
mov
lret
ds
cwtl
inc
or
cltd
ret
inc
pop
sbb
sbb
xor
outsb
push
jnp
sub
je
mov
push
cld
daa
lds
outsb
mov
sbb
inc
jns
jp
lahf
cs
std
cltd
jno
add
ret
xor
inc
stos
mov
lret
pop
jle
mov
ja
shll
add
lods
jecxz
mov
dec
cmp
jle
sub
ficoml
add
in
cmp
ljmp
xor
sahf
mov
inc
in
dec
call
inc
clc
out
jne
jl
pop
enter
mov
push
bswap
push
dec
es
mov
popf
jno
fwait
outsb
add
aaa
and
outsl
and
mov
gs
push
mov
dec
in
or
jno
mov
add
push
and
xchg
jge
fnsave
push
in
inc
or
sbb
add
ljmp
imulb
cmp
pop
cs
mov
ljmp
add
aaa
jl
out
cmp
sarl
das
cmp
jb
inc
or
pop
jle
push
add
movsb
aaa
xchg
adc
inc
jg
adcl
icebp
mov
js
pop
jbe
bound
fsubrl
mov
push
addr16
and
cmp
xchg
xor
cmp
dec
cmpsl
mov
in
idiv
adc
inc
sub
xchg
in
into
mov
mov
xchg
sahf
xor
cld
push
out
adc
cmpsb
sub
cmp
test
inc
jne
adc
xchg
hlt
mov
pop
mulb
xor
sub
int3
ss
outsb
jmp
mov
out
fdivl
clc
jge
daa
cmp
adc
clc
mov
popa
lods
pushf
add
add
repnz
sub
dec
test
jle
pushf
push
add
dec
push
pop
js
push
push
pop
insb
mov
xchg
or
inc
and
or
push
or
pushf
cmc
jnp
aam
xchg
dec
addr16
flds
icebp
dec
mov
mov
dec
jmp
int
xchg
fwait
test
adc
cmp
sub
xor
repz
mov
jl
pop
pop
jbe
arpl
xor
xlat
iret
push
jle
pop
out
call
and
and
cmp
push
lods
jne,pn
rcr
sahf
mov
sbb
addl
inc
mov
frstor
and
cmp
jnp
out
and
idiv
ret
inc
xor
pop
xor
ja
xlat
shlb
xor
sub
push
ljmp
sti
hlt
or
aam
mov
in
loop
arpl
pop
clc
adc
scas
out
add
dec
gs
rorl
rolb
pop
add
pop
push
mov
das
hlt
aad
mov
xor
pop
inc
lret
aam
rorb
int
lock
aam
test
repnz
scas
pushf
fnsave
adc
movsb
xor
xchg
add
inc
mov
adc
mov
or
lret
mov
add
jle
push
push
fidivrl
pop
lock
mov
popf
mov
push
mov
dec
jb
in
fwait
pop
mov
push
push
push
shl
push
mov
ret
rolb
ret
inc
sub
fsubrs
jl
cld
xchg
adc
das
cmp
clc
ss
mov
ds
add
mov
es
pop
jne
int3
xor
mov
jmp
rcrb
gs
int
movsl
add
inc
push
addr16
sbb
sub
dec
je
stc
sbb
les
jno
ret
mov
dec
xor
cltd
js
mov
sub
lea
loope
pop
mov
mov
xlat
enter
fildll
mov
das
jmp
pop
sbb
stos
ret
inc
jae
pop
js
or
dec
xchg
sub
aas
add
mov
mov
out
sub
sbb
iret
std
outsl
ds
aad
mov
loopne
icebp
dec
add
push
js
push
shll
rep
lock
rorl
js
pop
sub
fsubrl
retw
xor
push
insl
push
xor
mov
mov
mov
scas
inc
jge
insl
outsb
and
lock
xor
mov
ret
sbb
test
pop
sub
mov
in
or
adc
add
outsb
or
xor
inc
enterw
jg,pt
dec
out
xor
jno
cltd
dec
push
push
rolb
stos
pop
sti
pop
xchg
jg
outsl
addr16
inc
xor
sub
inc
jno
rol
pusha
add
xor
push
lods
pusha
pop
push
movl
sub
test
ljmp
sub
std
or
mov
mov
adcl
cs
lret
push
lcall
mov
lock
cmp
push
xchg
daa
cs
lcall
add
sbb
in
gs
inc
ficomps
cld
outsb
ss
lods
mov
jb
pop
andl
sub
sub
push
shlb
mov
lock
lcall
mov
call
stos
movsl
mov
les
jl
testl
pop
jg
fisubl
sbb
pop
adc
bnd
mov
ret
xchg
push
cwtl
mov
xchg
insl
popf
sub
jl
cmp
and
mov
rcrl
push
std
pop
adc
xor
inc
adc
lcall
push
addr16
dec
imul
les
nop
lcall
ljmp
rorl
mov
and
pop
mov
popa
mov
mov
arpl
popa
jnp
sti
xchg
mov
aaa
js
addb
push
and
js
push
add
data16
xchg
jge
add
sbb
call
repnz
pop
adc
out
scas
inc
mov
scas
stc
jno
cmpsb
inc
jecxz
movsb
adc
dec
xchg
call
jae
pusha
ljmp
lahf
icebp
xchg
les
lret
add
into
xchg
call
loop
adc
insl
aad
into
stos
fsubl
dec
sbb
inc
ffreep
or
cltd
push
andl
sbb
and
in
rolb
mov
xchg
out
sub
dec
fisttpll
adc
test
test
push
out
pushf
xchg
enter
mov
icebp
sti
in
lret
jmp
mov
dec
mov
push
sub
cmp
or
out
inc
adc
sti
mov
sub
and
out
ret
loop
loop
clc
mov
in
stos
roll
inc
xor
pop
or
out
sub
mov
hlt
or
fwait
cmp
jecxz
mov
mov
inc
pushf
push
jns
xchg
popf
lahf
add
stos
jno
mov
sti
loop
or
dec
shrb
out
adc
or
data16
out
int
inc
movsb
fwait
repz
adc
lahf
mov
mov
out
xchg
cmp
shll
mov
outsl
sbb
or
dec
cld
fisttps
jns
sub
rclb
wbinvd
cmp
pop
sbb
cmp
adc
cmp
jmp
jne
jecxz
sbb
sti
push
cmp
adc
bound
popl
imul
clc
pop
lahf
xchg
add
movsb
bound
bound
jae
ret
cmc
sbb
cltd
cmc
adc
mov
mov
or
adc
in
mov
ja
jns
rol
cmp
and
lea
lds
lret
mov
push
pop
popf
jae
dec
or
xor
fsubp
insb
cli
dec
orb
popa
fistpll
insl
test
cmp
mov
pop
adc
jns
pop
out
add
stos
mov
out
repnz
ljmp
jg
pop
lcall
js
shlb
in
and
shr
lds
jmp
scas
lahf
sbb
cwtl
cmp
rorl
sbb
add
scas
xchg
repz
sub
dec
daa
inc
fidivl
sar
das
sub
cwtl
adc
mov
sbb
cltd
mov
add
xor
mov
popf
add
add
lahf
xchg
inc
insl
inc
mov
and
in
and
inc
subl
movsb
mov
in
lock
mov
dec
fistpll
mov
ror
std
push
cmp
in
aad
mov
outsb
fstp
fistps
test
add
enter
fcmovb
inc
mov
and
daa
lds
push
loop
ret
mov
push
movsl
cmp
mov
ds
xor
aas
cld
cs
xor
mov
xchg
push
fistpll
fstl
fmuls
js
xchg
out
out
add
xlat
push
stos
mov
int3
test
and
lahf
xchg
push
pop
lods
xor
ss
xchg
dec
and
ret
clc
mov
lock
and
or
test
popa
cmpsb
pop
int3
push
into
cs
iret
xor
out
fimuls
lea
jbe
clc
outsb
test
add
adc
fs
adc
out
fcoml
cmp
push
hlt
fsts
cmc
push
fsts
sub
loopne
xchg
sub
les
pop
cmp
hlt
inc
test
cmc
ds
adc
xchg
lahf
ss
jae
mov
nop
icebp
je
nop
mov
sti
jecxz
fistpll
xlat
xor
mov
jb
xor
push
enter
xchg
lods
sub
lcall
push
jae
mov
lcall
fidivs
movl
inc
ret
mov
lahf
xlat
shl
fnstsw
js
adc
cmp
sbb
mov
or
adc
inc
sbb
xchg
inc
in
lea
jl
or
adc
xchg
insl
cmp
dec
int3
inc
js
loop
adc
sbb
xchg
or
xchg
repnz
dec
adc
dec
push
scas
das
push
adcl
sub
inc
pop
jb
jecxz
sub
data16
mov
cmpsl
add
add
push
jmp
out
mov
and
jne
add
stc
sub
mov
pusha
add
cmp
loop
cs
mov
out
and
roll
push
lcall
aas
push
ds
repnz
push
stc
xor
outsl
ss
mov
stos
jge
cmpl
lods
mov
cmp
pop
pusha
test
push
sub
lods
mov
mov
scas
or
jne
push
cmp
sub
jo
movsl
or
outsb
movsl
sbb
lret
sahf
std
stos
push
mov
std
rcr
jae
iret
or
test
sub
add
fisubs
shlb
daa
cld
inc
adc
mov
daa
push
cmpsb
xchg
mov
cli
scas
dec
jl
lcall
aaa
int3
scas
jp
pop
cmpsl
out
dec
pop
repnz
pop
add
cs
mov
loopne
cmpsl
xchg
mov
push
popa
pop
ljmp
xor
shll
filds
stc
pop
call
pop
into
mov
std
inc
sahf
xchg
pop
add
fxch
lea
add
outsl
cmp
in
icebp
fucomi
in
push
popa
loope
rorb
sbb
jo
das
add
jmp
ret
dec
dec
jp
movsb
js
imul
cltd
outsl
cmp
push
imul
sbb
push
sarb
add
insb
ja
lcall
dec
test
ret
ror
shrb
popa
xchg
push
push
jg
call
mov
faddl
test
mov
inc
enter
push
ret
sub
aam
addl
ret
arpl
push
jns
push
dec
ret
test
inc
sub
dec
jl
int
jp
mov
sbb
dec
ret
js
add
adc
shll
jns
sbb
lds
mov
mov
sbb
addl
jb
test
ja
dec
sbb
mov
ss
push
jl
xchg
leave
mov
push
and
cmp
dec
mov
mov
imul
mov
lcall
pusha
sbb
pop
ljmp
jg
push
push
out
push
xor
sbb
xchg
add
mov
sub
shlb
jns
xor
pop
sbbb
inc
push
mov
mov
push
add
xchg
lret
push
insl
add
fnstsw
xchg
gs
jp
lcall
and
inc
lahf
scas
add
cmpsl
push
xchg
test
inc
xchg
mov
or
adc
rorb
cmp
stos
dec
jg
out
jae
add
jge
fwait
psllw
int3
sub
jmp
sbb
xor
repz
jmp
mov
sub
xor
cmc
mov
xchg
sbb
icebp
xor
pop
mov
iret
outsb
xchg
jnp
add
push
mov
call
aam
or
jb
mov
xchg
mov
xor
popa
inc
jns
cmp
and
pop
xchg
les
ficoml
mov
inc
loopne
xchg
imul
aad
in
pop
xchg
xor
push
pop
or
and
jecxz
outsl
inc
or
and
fst
pop
pop
pushf
cmp
jbe
les
fisttpll
rcrb
cli
sub
shll
dec
cmp
mov
lods
adc
jmp
pop
imul
xchg
xor
js
int3
pop
mov
insb
in
clc
push
and
inc
or
lods
and
xchg
test
js
dec
rclb
sahf
mov
cmc
fimull
adc
out
lock
shrl
inc
xchg
fistpll
int
jmp
rcl
aas
call
pop
sbb
pop
jno
into
adc
fdivs
or
cmp
das
aad
lret
test
divb
imul
mov
push
cmpsb
jbe
int3
sar
lods
mov
dec
and
test
xor
xchg
jge
dec
bound
loope
cmpl
pop
ficompl
addr16
loop
rcl
cmpsb
adc
and
pop
out
getsec
shlb
and
lds
call
add
jge
jle
test
add
jle
loopne
mov
ret
repz
add
outsb
imul
sub
and
cmpsb
cli
movsl
xchg
mov
or
sbb
or
push
sbb
test
push
leave
lods
mov
call
rcrl
std
cli
outsb
add
jle
xor
dec
pop
sub
jo
sub
mov
rcrb
pop
addr16
bound
adc
andl
cmp
push
xlat
aaa
mov
cltd
inc
mov
int
inc
mov
mov
loope
xor
jl
mov
or
and
jge
cltd
mov
out
aaa
loope
jl
mov
push
lods
sahf
add
and
enter
xchg
mov
stc
or
test
loop
or
fucomi
fdivs
jns
sbb
cmpsl
fisubs
mov
push
iret
pop
stos
lds
aaa
inc
and
xor
cmp
les
add
jle
mov
into
inc
call
js
pop
push
jnp
pop
je
jmp
dec
jb
sbb
outsl
jo
test
sub
repnz
inc
lcall
add
mov
pop
popa
shl
add
jb
stos
leave
adc
xchg
fs
sbb
out
test
orl
xchg
push
cmpsl
adc
ds
xchg
xor
xchg
cmpsb
mov
xor
out
add
dec
test
lods
jp
xor
mov
xor
int3
mov
ss
xlat
add
push
sbb
rclb
xchg
sbb
mov
or
sbb
adc
lret
mov
dec
dec
mov
push
mov
nop
jae
iret
cmpsb
push
push
nop
cli
lret
dec
fidivrs
fs
mov
dec
fimuls
sub
inc
clc
inc
loop
frstor
adc
daa
insb
pop
hlt
cmp
rclb
dec
leave
je
gs
fbld
xor
mov
mov
hlt
mov
popa
jl
mov
inc
jl
inc
ljmp
inc
mov
notl
mov
sub
testl
adc
popf
test
mov
mov
scas
add
pusha
adc
aas
ljmp
mov
mov
cli
xchg
push
iret
pop
add
lahf
xor
stos
dec
jge
jecxz
cld
std
and
loope
dec
in
jne
mov
push
mov
out
test
jmp
and
sub
pop
cltd
outsb
sti
aas
push
sub
jle
xor
addr16
inc
out
fadds
addr16
stc
add
cltd
add
mov
push
jl
fcomps
fisttpll
push
mov
out
out
or
ds
jle
xchg
jle
lea
fdivp
push
dec
jg
das
popf
lcall
les
lods
movsl
test
mov
arpl
fcomip
jbe
gs
shlb
jg
dec
mov
in
sub
lret
adc
inc
sub
fwait
xchg
pusha
xor
fldenv
testb
mov
ror
lcall
push
in
clc
mov
jnp
push
cs
iret
push
jecxz
mov
dec
mov
and
jbe
xor
hlt
xchg
mov
cmpl
cwtl
clc
hlt
adc
xchg
andb
cli
xor
or
xor
fldl
adc
je
jecxz
in
inc
and
jmp
sub
out
in
iret
jmp
outsl
insb
hlt
mov
add
mov
bnd
insl
xchg
sarb
pop
and
lcall
sub
pop
lea
roll
adc
out
dec
stos
adc
mov
movsb
fistl
aad
push
das
addr16
jo
test
pop
mov
push
mov
loopne
jbe
bound
data16
xchg
jnp
mov
fdivl
shlb
adc
adc
scas
xchg
pop
xor
sbb
adc
cs
push
mov
mov
xchg
add
sbb
test
mov
lret
add
test
iret
push
ret
sub
imul
and
pop
imul
push
icebp
das
ds
sub
ficompl
out
mov
ret
inc
dec
push
push
aaa
stc
dec
bound
adc
mov
xchg
push
or
addr16
cwtl
xor
sbb
aad
insb
push
cmp
lret
pop
bound
js
push
mov
daa
jg
xor
hlt
xchg
inc
les
xchg
sbb
push
mov
jle
out
sub
xchg
cmpsb
das
push
ja
jne
add
fwait
and
stos
mov
std
pop
lods
pushw
popa
pop
mov
gs
dec
aas
out
mov
std
push
and
scas
cwtl
cmp
iret
push
cmp
mov
mov
add
outsb
push
rorl
cld
xchg
xchg
and
add
mov
loope
xchg
mov
in
mov
repnz
xor
leave
sbb
pop
and
adc
push
stos
ljmp
mov
hlt
into
jnp
xchg
push
xor
add
fiadds
mov
xorb
pop
cltd
icebp
mov
fnsave
iret
cltd
orl
push
xor
outsb
int3
loope
push
mov
jl
xchg
inc
mov
inc
and
ds
in
adc
jbe
push
repz
fistl
add
aam
jp
popa
aas
jns
sbb
mov
outsb
adc
mov
int
lcall
sub
push
jnp
test
xchg
lods
les
sub
sub
mov
cld
push
mov
out
test
inc
imul
jge
pop
test
fsubr
adc
push
dec
mov
mov
int3
xchg
cmpsl
adcl
aam
xchg
test
sahf
insl
mov
in
nop
pop
pop
inc
pop
cwtl
sbb
aam
in
push
sarl
mov
xchg
mov
sub
inc
decb
js
and
pop
aam
push
pop
xchg
outsb
mov
imul
leave
mov
lret
pop
cmc
out
xchg
out
xchg
ljmp
imul
or
or
inc
inc
addl
loop
sub
fdiv
xor
mov
xchg
or
xchg
mov
lcall
sub
sbb
into
and
pop
xchg
and
mov
push
clc
or
and
push
cwtl
xchg
scas
scas
movsl
idivb
imul
and
insl
sub
xchg
clc
or
loop
and
dec
mov
fwait
popa
mov
cmp
aaa
jle
jne
push
daa
sbb
xor
inc
push
cmp
add
adc
inc
fbld
mov
mov
int3
fldt
mov
inc
mov
cld
inc
xchg
adc
cwtl
dec
sahf
cmp
in
out
pop
icebp
inc
sbb
subps
xchg
fnstcw
and
or
ja
pop
stos
aad
les
sti
add
push
push
mov
test
lds
call
sbb
add
add
clc
push
loop
push
ret
mov
sub
mov
push
aam
xlat
add
sbb
fdivs
lock
insb
inc
popa
cmpl
adc
xchg
xchg
cmc
mov
pop
mov
push
dec
sbbb
fucomp
stc
or
repz
sar
or
loop
mov
sbb
add
jle
aam
xlat
adc
dec
aad
dec
loope
movsb
cmc
and
jne
or
cmpsl
push
jecxz
popa
sub
pop
dec
ds
pop
push
cmp
sar
fnstsw
sbb
scas
into
pop
or
lret
jo
jge
jb,pn
test
xchg
sar
outsl
mov
mov
int3
lret
push
out
cwtl
cld
imul
jb
pusha
dec
pushf
xor
sbb
iret
pop
mov
lods
int3
inc
push
mov
mov
xlat
and
dec
sar
lea
enter
fldl2t
dec
inc
stos
daa
test
icebp
into
lret
xchg
pop
roll
xor
cmpsl
lahf
or
sbb
and
add
inc
notb
jmp
push
into
mov
or
adc
pop
sbb
or
adc
pop
scas
mov
push
push
lahf
aaa
xlat
sub
lret
and
dec
je
ds
or
mov
mov
jmp
lods
int3
jecxz
cld
fwait
dec
popl
fcomp
movb
fidivrl
mov
cltd
ret
ss
into
daa
loope
and
inc
nop
test
adc
sbb
scas
xlat
call
mov
mov
sub
push
cmp
mov
pop
daa
mov
add
adc
sahf
sub
mov
movsb
push
cmp
inc
xor
mov
dec
pop
ljmp
aam
imul
aas
mov
loopne
sbb
popa
call
sub
loopne
aad
jp
mov
cli
sbb
xor
xchg
cmp
dec
or
int
daa
dec
mov
sub
push
cld
xlat
pusha
xchg
jg
les
add
mov
dec
inc
mov
add
imul
jecxz
jno
arpl
test
add
xchg
push
inc
xchg
dec
mov
push
stc
jae
lcall
fidivl
enter
into
jno
pushf
mov
ret
out
push
sub
push
das
xlat
out
mov
sti
or
jmp
in
xchg
pavgw
fmull
cmp
sbb
mov
sbb
sub
mov
dec
inc
shlb
add
shrl
cmp
outsb
pop
mov
pop
xor
andb
shl
je
rcrb
inc
sub
stos
add
shlb
mov
inc
cmc
subl
shlb
pop
inc
jmp
mov
add
notl
decb
push
insb
pop
testb
push
cmpsb
inc
shrl
push
into
clc
inc
dec
and
notl
fildl
fmuls
mov
xlat
pop
pop
or
out
pop
in
out
jg
dec
sub
test
ja
push
xchg
jle
adc
push
shrl
sahf
cli
or
cmp
mov
xor
movsl
movb
inc
mov
sarl
add
adcb
mov
fsub
adc
ret
push
jae
popa
inc
pop
test
jl
dec
dec
int3
imul
ret
mov
sub
xchg
sub
mov
mov
pusha
dec
xchg
pop
add
sbb
add
lods
mov
icebp
dec
mov
iret
fsubrl
mov
sub
cwtl
pop
cmp
test
jmp
data16
ljmp
mov
jns
or
clc
inc
outsb
addr16
cmp
test
push
inc
pop
add
mov
cmp
loopne
fisubrs
sbb
mov
sbb
jge
mov
out
cmp
fstpt
xor
lock
jno
stc
cmp
inc
cmp
cmp
lcall
sbb
xchg
stos
jo
incb
mov
std
shrb
ljmp
or
cmp
je
pop
xor
add
dec
push
jo
orb
xchg
into
out
sbb
pushf
enter
outsl
pop
dec
add
mul
add
adc
pop
mov
jl
hlt
test
outsb
adcl
out
inc
sbb
xchg
bound
dec
mov
add
jne
or
lret
mov
add
ficomps
cmpsl
sbb
and
add
test
mov
out
test
xchg
mov
lods
movsl
xor
leave
rdmsr
mov
frstor
xchg
rorl
and
cmp
xchg
and
mov
xchg
lods
repz
loop
xor
add
inc
imul
pushaw
arpl
insb
xchg
adc
mov
push
rcrl
cltd
movsb
mov
sahf
cmc
aam
jmp
lods
fdivs
xor
mov
test
imul
lret
sbb
xchg
mov
mov
div
rorl
push
and
loope
xchg
mov
enter
add
in
xlat
mov
frstor
mov
fimull
jg
test
lcall
fs
out
inc
pop
stos
dec
scas
test
and
stc
bound
xor
sbb
stos
or
divl
cmpsl
es
fs
dec
test
inc
pop
cmp
outsl
mov
leave
loopne
sub
push
push
iret
sbb
mov
cmp
in
pop
test
adc
mov
xchg
sub
and
mov
cmp
or
les
dec
mov
xor
push
add
arpl
adc
mov
push
arpl
aam
out
mov
xchg
pop
cmp
and
pop
insl
pop
push
int
lcall
xor
mov
pop
xor
js
xor
push
and
cmpsb
pop
cmp
add
sub
je
pop
mov
ds
mov
push
js
mov
dec
push
add
out
sbb
nop
ljmp
inc
push
test
scas
jns
lret
push
aas
int
push
hlt
cwtl
test
and
shl
and
inc
cmpsb
cli
xchg
ja
ljmp
lahf
push
je
mov
pusha
lods
enter
pusha
cmpsl
add
pop
xor
adc
inc
xchg
cmpsl
adc
push
cs
or
cmpsb
popa
adc
aad
ja
pop
lds
lods
mov
movsb
and
push
aas
or
icebp
push
in
inc
in
push
mov
xchg
scas
push
scas
sub
cmp
fmuls
inc
mov
jo
and
js
and
xchg
test
pop
push
dec
pop
cwtl
sub
hlt
mov
sbb
dec
jb
popf
into
add
add
out
cmp
inc
cmp
movsl
cwtl
mov
mov
inc
movsb
xchg
adc
dec
push
adc
aam
mov
jns
mov
clc
jecxz
pop
adc
mulb
sub
jl
mov
push
fnstsw
sub
stos
lcall
pusha
mov
aad
mov
fsubl
xorl
adc
lds
mov
sub
sub
rcll
out
mov
aad
pop
fidivs
mull
jo
add
cltd
sub
xor
insl
mov
mull
pusha
aaa
sbb
fs
aas
or
aas
adc
clc
hlt
mov
jns
push
mov
push
sub
stos
pop
stos
fists
xchg
push
push
ja
or
mov
push
inc
sbb
sti
pop
outsb
inc
fildll
out
pop
ss
or
push
fstpl
sbb
dec
cmp
pop
dec
fucom
dec
jns
dec
shlb
pop
cwtl
or
dec
pusha
test
fbstp
sbb
add
push
addb
ret
push
sub
push
adc
gs
jmp
sub
cmp
nop
dec
pusha
mov
pushf
jge
xchg
stc
push
js
push
sbb
cmp
movsl
andl
das
aad
xchg
std
jae
sbb
push
mov
addr16
push
jbe
test
xchg
in
aad
pop
or
icebp
ds
and
pop
jl
test
xorl
movsb
add
and
or
rorl
pop
addl
clc
inc
jmp
loop
test
decl
mov
addr16
fldl2e
and
cmp
call
sub
jnp
sub
mov
dec
aam
inc
cmc
cmp
push
inc
cmpsl
inc
enter
mov
pop
push
jge
dec
and
ds
xor
in
push
jg
cmc
ret
sbb
aaa
adc
pusha
mov
mov
jbe
jmp
or
test
cmp
sbbl
je
js
mov
lods
or
cmpsb
mov
dec
inc
adc
push
ss
jbe
sub
pushf
jl
cltd
ror
mov
scas
lret
cld
lods
lods
das
xor
fmul
or
ja
mov
push
shlb
and
mov
dec
sbb
push
aad
call
jo
sbb
add
dec
addr16
arpl
pop
data16
and
lock
mulb
jns
psllq
mov
les
xorb
pop
jl
jmp
cmp
repnz
adc
sub
xor
add
push
aaa
xchg
add
lcall
cmpsb
xlat
xor
dec
pop
dec
add
dec
or
enter
rolb
xchg
repz
rorl
out
sub
dec
leave
cli
fidivrs
adcl
shll
and
loopne
loopne
mov
cmp
int
add
imul
loopne
dec
cmp
fsub
sbb
mov
sub
add
std
xchg
add
rorl
popa
pop
imul
mov
sahf
fwait
jp
aaa
outsl
dec
push
sbb
fdivrs
pushf
dec
shrb
mov
jae
and
jg
scas
add
mov
mov
popf
sbb
sbb
pop
fbstp
xchg
std
je
daa
sti
cltd
in
lods
push
and
xchg
sti
cmp
sbb
loopne
adc
and
and
mov
push
adc
popa
daa
subps
and
pop
pusha
out
xchg
cmp
pop
test
pop
sbb
enter
sbb
xchg
inc
adc
xchg
call
gs
push
and
xlat
mov
inc
inc
fnstcw
insb
das
fsubs
pusha
fistps
movsb
in
mov
jecxz
cltd
test
xchg
in
mov
jne
pop
out
mov
inc
adc
pushf
mov
test
cmp
gs
push
cltd
mov
mov
fcomps
and
xor
sub
add
jbe
xlat
jge
mov
adcl
ljmp
xchg
out
cld
loop
or
outsl
ss
fdivl
pop
pop
sub
stos
sbb
test
arpl
mov
adc
test
shl
fisubrs
mov
jmp
xor
push
adc
lea
test
dec
xchg
inc
into
mov
fisttpll
lret
jle
iret
sub
xchg
rol
jp
xor
inc
mov
movsb
dec
scas
xor
adc
inc
mov
out
ljmp
lret
ficomps
addr16
fstpl
jo
test
or
ret
imul
stc
test
popa
or
rclb
xlat
mov
fisubs
outsl
push
add
and
pop
xchg
cmp
andl
fadds
sub
sub
or
mov
stos
jbe
push
ret
mov
xlat
cmp
mov
xlat
pop
stos
cli
jg
xchg
aaa
scas
stos
testb
mov
movsl
sbb
lods
mov
andb
mov
outsl
cmp
sar
jb
clc
xor
loopne
fsubl
lds
push
mov
test
sub
lods
xchg
outsl
xor
cmpb
mov
add
sti
fwait
mov
jecxz
xchg
sub
jecxz
outsb
add
xchg
and
or
xor
xlat
add
mov
stc
popa
jae
pop
lock
test
shlb
sub
push
ret
out
pushf
mov
sbb
ja
mov
rclb
fmuls
adc
arpl
adc
cmpsb
repnz
mov
in
adc
adc
inc
icebp
mulb
popa
jae
int
in
sbb
aam
loop
sbb
xlat
ss
imull
or
fwait
pop
pop
sbb
ret
ss
xchg
push
mov
inc
test
jle
insw
xchg
cmp
mov
push
and
xchg
inc
or
push
clc
les
mov
js
sbb
lods
dec
jmp
test
push
out
cmp
shrl
mov
imul
sbb
rorb
sbb
es
les
mov
sbb
lcall
fwait
mov
xlat
add
jl
movsl
jge
jns
cmp
xor
mov
jle
aad
mov
icebp
test
lahf
call
push
sub
jnp
int3
outsl
fadds
add
scas
or
adc
es
aaa
mov
inc
or
sbb
movsb
lods
pop
pop
xor
add
xchg
std
rcr
out
or
xchg
jb
das
jo
dec
xchg
insb
push
faddl
lahf
subb
cltd
sarb
imul
or
sbb
insb
push
push
mov
push
int
pop
sbb
pusha
sti
mov
jl
jl
pusha
jl
push
iret
int3
imul
dec
sub
int
mov
dec
dec
mov
mov
push
push
jecxz
push
sbb
adc
and
add
push
push
dec
xlat
add
or
mov
or
movsl
rol
insb
cmp
push
dec
out
arpl
je
cwtl
ds
cld
mov
and
pop
mov
inc
jae
mov
dec
or
dec
mov
xchg
out
inc
xorb
fistps
in
mov
cmp
ds
sub
dec
dec
dec
xlat
sub
mov
imul
mov
cld
mov
sub
sbb
cmp
and
push
jne
jno
fwait
add
xchg
jp
mov
fs
divb
mov
fdivrp
push
out
sub
repz
call
shll
fwait
inc
insb
push
loopne
cwtl
jmp
stc
adc
ret
arpl
imul
sub
push
inc
mov
cmp
sbb
lcall
sbb
insl
adc
xor
jbe
pop
js
cli
jne
outsl
addr16
in
cwtl
mov
pop
sahf
mov
test
popf
cs
mov
cmc
sbb
std
in
int
sub
in
ss
xchg
iret
xchg
lret
mov
cmpsb
mov
aaa
xchg
jbe
mov
loopne
daa
push
mov
push
push
mov
or
jl
mov
jnp
adc
and
insl
push
cmpsb
inc
dec
jle
stos
popf
aas
fistl
mov
xchg
mov
lcall
popf
sbb
shlb
rorb
pop
outsl
xchg
loope
push
ret
mov
jecxz
jnp
mov
clc
push
or
xchg
pop
cld
xchg
rcrl
mov
sti
add
dec
jns
inc
pop
jp
sbb
add
aam
push
outsb
das
and
ret
movsb
cs
inc
imul
mov
cwtl
shlb
mov
popa
stos
pushf
les
popa
rclb
sar
lret
cld
pop
in
dec
fisttpll
mov
flds
jl
push
xchg
ss
mov
jns
inc
ljmp
push
cltd
and
mov
push
fwait
bound
into
test
mov
push
pushl
dec
mov
add
sub
adc
xchg
js
loope
adc
xchg
filds
repnz
inc
test
cmp
mov
aad
add
sbb
int3
and
cmp
lock
ljmp
mov
sti
fstl
dec
push
arpl
dec
out
into
sbb
orl
adcb
es
js
mov
jbe
dec
pop
jmp
imul
adc
sbb
lcall
rcrb
clc
fwait
cli
popa
dec
jbe
fidivl
mov
mov
xchg
pop
mov
ljmp
in
loope
test
fsubrs
mov
pop
shll
mov
push
lock
shrl
xchg
jg
je
icebp
fsts
loopne
and
dec
adc
repz
call
jbe
or
inc
mov
adc
mov
sub
push
pop
testb
mov
sub
mov
pushf
push
adc
cmc
push
cmp
out
cmpl
jb
sbb
sbbb
jnp
repz
fdivs
cmp
adc
mov
pop
jge
stos
cs
sub
sar
sub
pop
into
lds
in
aas
pusha
lods
sub
frstor
xor
scas
mov
aam
movsl
cmpsb
hlt
dec
jb
xchg
pop
pusha
pop
decl
incb
fdivr
lods
dec
cs
add
mov
xchg
cmp
xchg
mov
inc
mov
data16
mov
dec
ficoml
inc
cs
pop
mov
pop
and
xor
loope
adc
shll
mov
lahf
f2xm1
in
pop
or
inc
je
jp
aam
hlt
ret
push
das
data16
sub
fwait
mov
jae
cmc
pushf
rcrl
pop
repz
jmp
stc
and
mov
inc
sbb
push
outsl
mov
mov
push
push
and
jo
pop
jg
add
and
out
cld
cmc
mov
push
inc
mov
pop
and
mov
dec
fucomip
xchg
pop
xchg
inc
je
jns
dec
adc
pop
adc
mov
jl
and
sub
and
rcll
jae
push
mov
scas
add
int
lahf
jno
lock
push
sbb
sti
call
pop
xchg
sub
add
shr
mov
out
aam
lods
push
fucomp
add
out
cs
test
insl
dec
lahf
fsubrs
faddl
pop
add
iret
ficompl
sbb
add
jl
mov
push
movsl
cmp
mov
rolb
xor
jbe
and
cmpb
and
in
fdiv
inc
inc
add
out
xchg
sarl
mov
xchg
inc
insb
cmp
xchg
pusha
fistl
inc
cmp
mov
xorb
push
add
dec
jb
dec
out
xor
sti
add
mov
outsb
ds
jmp
mov
sub
dec
lret
clc
or
jp
sub
xor
jbe
push
dec
bound
imul
dec
adc
ds
dec
inc
mov
add
adc
sub
imull
and
mov
cmp
aam
pusha
aas
outsb
push
icebp
sbb
cmp
adc
push
dec
decb
scas
mov
push
mov
loopne
or
add
cmc
pop
rcll
insb
and
int
subl
lods
xchg
arpl
in
sub
push
inc
fstl
pop
gs
loop
jno
lret
lcall
jg
ljmp
adc
loop
inc
xchg
outsb
jnp
and
xchg
mov
xchg
out
into
push
mov
mov
movb
leave
cmpsl
out
dec
es
dec
lea
add
lahf
bound
aam
outsb
leave
xchg
sub
repz
xor
push
xrelease
insl
or
dec
inc
pop
push
shrl
jae
sbb
mov
rorl
jecxz
or
outsl
fwait
sahf
cmp
sbb
das
jnp
in
add
mov
fildl
imul
daa
or
loop
sar
pop
div
lret
fildl
fstps
push
push
push
cld
xchg
sbb
cmpsb
sbb
out
jl
mov
icebp
inc
dec
cmp
adc
inc
sub
ret
inc
inc
sbb
cltd
push
jecxz
push
jmp
inc
js
enter
jns
les
mov
jbe
imulb
push
mov
mov
hlt
insb
mov
jne
sbb
dec
cmpxchg
sub
hlt
mov
ret
sub
int
jns
les
dec
add
pop
aas
push
dec
in
jg
or
out
aas
cmp
xchg
sbb
lods
mov
jge
js
mov
inc
xchg
jae
fildl
daa
add
lods
in
mov
rcl
mov
jb
aas
fdivp
jbe
sub
jns
int
outsl
neg
andb
pop
jg
loop
sbb
insb
jns
scas
xchg
mov
jnp
js
dec
mov
add
dec
pushf
ret
xor
mov
cmp
shrb
mov
xor
push
mov
aaa
or
xor
outsl
scas
dec
mov
loopne
cltd
ret
into
ficomps
sti
testb
add
pushf
pop
jb
fmuls
dec
sti
or
push
movsb
push
int
pop
subb
loopne
xor
add
sbb
jmp
shl
in
scas
lret
fsubs
cmc
xor
mov
or
push
loopne,pn
out
xchg
rorl
and
fildl
and
sbb
fstp
mov
loope
pop
or
repnz
cmp
shlb
xor
add
mov
mov
cmp
xchg
loopne
sbb
jmp
cmpsb
adcl
mov
pop
js
aaa
popf
out
sti
xchg
repnz
rol
nop
push
mov
pop
sbb
outsl
rol
xor
and
jns
mov
jno
setg
mov
dec
cmpsl
mov
fnstcw
shrb
movsl
insb
repnz
cmpsl
jg
sub
xor
movsl
int3
ljmp
push
xchg
adc
jno
jle
gs
insl
dec
inc
cmpsb
scas
int3
fildl
es
outsl
sub
or
lret
or
dec
xchg
mov
es
ret
xorl
cmc
scas
ss
pop
inc
rol
inc
pop
sub
scas
adc
out
pop
lcall
js
dec
xchg
outsb
imul
lods
aam
push
jmp
pop
test
int
xchg
rcl
inc
ret
pushf
push
outsl
inc
cmc
mov
dec
enter
sbb
insb
imul
cmp
inc
xchg
fisttps
cwtl
punpckhwd
scas
lock
enter
out
js
xlat
add
dec
mov
rcrl
push
push
xchg
jns
or
repnz
or
jecxz
arpl
in
pop
mov
push
test
std
int
aaa
sbb
push
stos
lock
mov
loope
cmpsl
xchg
into
add
aam
fcmovne
pcmpeqb
daa
sbb
loopne
dec
fildl
xchg
int
inc
ds
loopne
xchg
xchg
push
mov
push
daa
les
push
fcmovnu
add
out
shlb
xor
mov
sub
lret
cmp
xchg
push
sub
lahf
mov
mov
add
adc
add
or
inc
dec
cmp
inc
pop
in
pushf
pop
jne
jg
adc
aaa
shrb
insb
inc
rcrl
inc
aad
sarl
pop
or
cmp
sbb
lret
add
adc
push
jns
lods
pop
les
jg
cmp
test
cmp
xchg
ficoml
lahf
adc
loopne
lea
dec
in
fs
ds
in
mov
dec
pusha
mov
pushf
mov
out
fwait
mov
shll
xchg
xchg
aas
mov
pop
lods
push
repnz
aam
jo
jno
adc
push
icebp
sub
mov
lahf
pop
daa
rcrl
sbb
adcb
mov
cmp
dec
mov
dec
push
xchg
xor
stos
lods
arpl
cld
imul
and
sarl
inc
inc
mov
dec
dec
mov
sbb
popa
dec
mov
out
int
adc
mov
and
in
lcall
push
mov
lock
mov
pop
fcoml
xor
fsts
push
ds
stos
lods
xchg
add
cmp
icebp
loope
dec
pop
enter
mov
sbb
in
xor
cwtl
lds
jo
lea
rcrl
add
out
enter
adc
pop
dec
in
rclb
dec
out
xchg
fwait
mov
xchg
pop
repnz
sahf
mov
xchg
adc
xchg
push
add
dec
mov
push
shl
je
rcrl
sub
mov
lahf
mov
das
subl
add
push
mov
pusha
lahf
sbb
or
imul
sub
xchg
push
pop
loopne
repz
outsl
xchg
sbb
xor
push
jg
das
sbbl
and
add
mov
fstpl
data16
push
out
rcll
push
rorl
jns
push
into
out
lock
int3
pop
inc
dec
mov
rcrb
mov
mov
mov
subl
mov
xorl
int3
idivl
jge
adc
bound
mov
lcall
cmp
daa
clc
xchg
cmp
dec
lock
sub
lret
adc
std
inc
or
sub
mov
idivl
loope
mov
out
push
imul
cmc
mov
call
mov
out
adc
sub
negb
inc
and
mov
int3
sub
mov
loopnew
out
jg
mov
lds
mov
int3
pop
jne
push
andl
xchg
dec
pop
cmpsl
add
cmp
xor
popf
in
pusha
push
mov
out
mov
add
clc
insb
pop
inc
mov
and
sub
pushf
push
insb
fs
cmp
stos
les
lret
jp
add
mov
cltd
mov
pop
mov
loopne
jnp
pop
shlb
jae
popa
icebp
ror
adc
push
inc
and
pop
out
sarl
jbe
push
and
cld
jb
mov
inc
imul
sahf
mov
jno
lock
adc
pop
loopne
mov
push
dec
negb
add
mov
jge
adc
mov
push
xchg
jae
cmpsb
inc
mov
xor
in
cmp
and
xchg
jp
cmp
ljmp
pusha
lods
sysenter
mov
std
cmova
hlt
std
add
jno
and
jae
cmp
push
cmp
jge
pop
sahf
loopne
push
or
mov
ja
push
repz
xor
in
rolb
mov
dec
push
adc
lock
cmp
jo
mov
scas
jns
mov
ljmp
push
cmpsl
sahf
rcl
call
subl
repnz
adc
push
scas
push
cmp
arpl
mov
jecxz
insb
sub
ja
push
dec
pusha
and
pusha
scas
cs
xor
push
aaa
fimull
adc
xor
in
rorl
xchg
or
inc
in
jo
lret
in
fldenv
test
xor
push
push
fwait
rorl
pop
inc
cltd
push
inc
jbe
addr16
lock
testb
pop
jno
fildl
ss
mov
aam
je
jne
outsb
mov
xor
inc
cmpb
ror
jne
xchg
sbb
shll
fidivrs
ljmp
xchg
shrw
es
lods
push
xlat
inc
push
pop
ja
jb
insb
fnsave
xor
insl
aas
repnz
adc
call
lods
xlat
mov
testl
cmovne
ret
mov
lcall
adc
cmpsl
in
fnstsw
test
sahf
adc
xor
push
jg
outsl
push
cmp
cmc
jnp
mov
cltd
scas
sub
mov
fldcw
test
sub
imul
push
sub
mov
cmp
movsb
mov
jmp
inc
out
rcrb
jbe
out
mov
int3
cs
popl
int3
sub
in
rorb
inc
add
mov
add
in
jmp
imul
out
jno
js
jns
or
int3
cmp
lret
inc
aam
lahf
mov
inc
push
rcll
call
jb
jmp
addr16
jmp
and
call
or
adc
rclb
push
mov
movsl
dec
sahf
scas
jae
stos
push
mov
pop
adc
mov
cli
scas
dec
and
inc
dec
xor
xchg
insb
sub
push
aas
sbb
jae
add
sbb
xchg
jge
repnz
ret
cltd
pop
hlt
jbe
cs
jle
xor
dec
int
push
movsl
jae
push
add
dec
test
mov
scas
es
cvtps2pi
pop
stos
rcll
dec
shll
jo
add
popf
gs
xchg
repz
lcall
vminsd
das
mov
mov
and
inc
jg
push
jae
mov
mov
enter
pop
pop
iret
xchg
mov
dec
ds
and
or
lea
jo
sub
int3
push
mov
add
cli
cwtl
xchg
std
in
lcall
icebp
hlt
adc
xchg
leave
neg
shlb
rcl
es
sahf
mov
add
jecxz
ss
cld
mov
adc
inc
and
repnz
xchg
mov
xchg
faddl
jno
in
js
mov
add
lret
call
into
lret
mov
sbb
lret
inc
inc
lret
add
into
addb
or
xchg
mov
add
outsb
cmp
pop
pop
pop
movsl
push
push
into
adc
lcall
ds
and
call
dec
outsl
pop
sub
gs
cmc
mov
aas
xor
sbb
pop
mov
mov
inc
sbb
sub
sbb
jp
inc
xchg
fidivrs
push
xor
test
adc
push
adc
jbe
or
lods
and
in
jb
cld
repnz
bound
or
lea
fdivrl
xchg
addr16
insl
std
mov
pusha
sbb
mull
mov
xor
cmpsl
xor
sbb
fwait
js
and
icebp
loope
call
cmp
in
xorl
jecxz
lret
push
mov
or
cmp
shrl
adc
bnd
lock
jp
cmp
or
dec
std
fs
xchg
sbb
int
cld
and
adc
xchg
repz
pop
incl
fwait
cmp
push
push
clc
lock
in
test
into
or
jp
jns
jbe
adc
gs
out
jne
mov
and
in
dec
pop
xchg
dec
loop
dec
test
xor
xchg
adc
scas
xor
adc
inc
ljmp
pop
push
fldcw
and
out
ljmp
jg,pt
cli
push
push
hlt
dec
das
subl
mov
es
push
shll
filds
out
pop
fs
and
push
sbb
mov
sub
stos
push
mov
dec
rcrb
xchg
pop
out
adc
push
int3
mov
int3
in
mov
ljmp
aam
add
dec
lock
dec
dec
mov
xchg
push
bound
cmp
and
js
fidivl
mov
leave
mov
xchg
jp
gs
jno
mov
sub
js
mov
enter
or
repnz
std
add
lret
filds
inc
push
xlat
or
mov
mov
mov
xchg
pop
or
cmp
jo
jb
sbb
movsl
in
inc
cld
mov
push
loopne
sar
cltd
push
std
addl
in
addr16
cli
dec
mov
nop
pop
xchg
mov
leave
adc
outsl
jmp
hlt
sti
loopne
adc
mull
dec
inc
inc
jo
adc
jne
pop
sbb
pusha
nop
and
pop
or
adc
adc
aam
addr16
jge
jbe
push
mov
mov
out
jae
or
scas
dec
fstpl
mov
inc
ficomps
xor
sub
xor
mov
and
inc
push
std
inc
loopne
call
test
mov
push
in
pop
mov
cmc
xor
movsl
jae
mov
inc
fimuls
inc
movsb
cmp
adc
add
imul
add
ficoml
xchg
in
cmp
lcall
xor
lods
faddp
jge
divb
pop
xlat
adc
int
pop
rcr
popa
inc
pop
stos
dec
mov
jb
jnp
popf
insl
cmp
jo
call
insl
mov
push
mov
xchg
pop
push
pop
lret
cwtl
jge
aam
xchg
data16
mov
data16
cmp
mov
rorb
mov
xchg
mov
and
lret
mov
or
push
cld
fs
cmp
int
cmp
pop
mov
outsl
push
into
ret
sub
mov
jp
inc
pop
inc
es
push
test
lret
mov
enter
jmp
inc
outsb
mov
cmp
mov
inc
xchg
lods
sarb
insl
jge
gs
std
cs
sbb
mov
scas
rclb
mov
xor
cwtl
sub
add
dec
pop
adc
sbb
sub
iret
and
add
push
pop
cmp
int
sbb
jmp
mov
gs
xchg
xlat
sub
or
out
mov
test
out
loope
xor
mov
icebp
gs
icebp
lret
ljmp
shll
dec
cmp
fistl
int3
jge
jb
push
sub
mov
popa
lahf
loopne
push
xchg
push
or
outsl
jecxz
mov
daa
stos
mov
into
xorl
and
imul
dec
sahf
aaa
outsb
cmp
outsb
mov
jp
and
lea
inc
fimull
sub
test
call
fists
dec
jmp
push
dec
inc
push
enter
inc
fldt
stos
jo
mov
adc
repz
jecxz
xchg
pop
mov
dec
jns
mov
mov
imul
add
or
das
mov
shlb
mov
add
or
mov
call
jno
mov
pop
mov
sbb
add
mov
int
daa
pushf
sbb
xlat
push
xchg
mov
mov
test
xor
dec
fists
jno
xchg
adc
je
mov
pop
or
mov
into
push
push
cmpsb
jb
add
daa
jo
stos
or
rcrb
inc
orb
arpl
mov
call
and
push
out
add
repnz
add
inc
cwtl
mov
cld
rol
and
sub
pop
xchg
push
xor
repnz
sbb
dec
xchg
out
fs
stos
lret
sbb
ds
pop
adc
xor
cld
push
mov
cmp
pop
dec
sbb
in
or
cld
pop
out
fsubrl
pop
and
inc
cltd
xchg
xor
cmp
xor
xor
pop
sbb
inc
outsb
shll
push
push
leave
jle
imul
out
shl
mov
pushf
popf
add
test
xor
mov
mov
mov
pop
int
lret
addr16
into
mov
inc
xchg
ds
xchg
dec
mov
pop
sub
adc
jmp
push
repz
push
mov
and
dec
mov
push
xchg
mov
insl
out
push
adc
lods
adc
mov
and
sbb
fistps
fcomip
mov
xchg
mov
pop
inc
xor
mov
in
in
lcall
addl
std
dec
add
xor
pop
sarb
and
or
jae
imul
push
push
mov
push
hlt
fdivrl
fildll
add
sbb
or
lret
and
add
or
jmp
push
std
mov
popa
push
push
dec
mov
mov
in
lea
inc
xchg
lcall
mov
mov
jnp
sub
mov
leave
ret
dec
push
jne
mov
cs
out
lea
outsl
std
divb
dec
mov
orl
lcall
fdivl
and
dec
in
push
lcall
test
sbb
or
aas
aam
mov
pop
insb
jge
mov
sub
sarl
imul
pop
fnstcw
das
sbb
nop
dec
xor
inc
adc
arpl
lea
adc
arpl
xchg
jbe
loope
push
jae
nop
xchg
or
lret
mov
or
loop
sub
dec
add
popf
adc
ret
adc
rcr
outsl
pop
mov
loopne
sbb
cmp
in
sbb
aas
insl
and
pusha
xor
bound
push
or
js
and
cltd
xchg
inc
movsl
pop
xchg
and
xchg
mov
dec
fsts
in
and
jl
jae
dec
or
sub
jo
mov
nop
sbb
mov
add
cli
pusha
and
lret
jmp
adc
data16
dec
jae
push
inc
std
adc
dec
out
cs
cmp
mov
sbb
loop
sub
or
mov
lods
xchg
push
fnstenv
mov
in
jge
xor
sbb
test
pop
outsb
dec
inc
les
je
imul
add
sbb
adc
pop
cld
sbb
jae
push
daa
arpl
pop
mov
sub
add
add
sbb
xor
push
pop
or
outsl
jecxz
mov
mov
mov
mov
pop
add
testb
sub
or
xor
push
push
outsl
mov
xchg
lcall
adc
push
xor
add
jecxz
xor
rorb
cmc
jp
push
sub
cmp
cmp
xlat
xchg
cmp
inc
stc
ljmp
pushf
stos
xchg
sub
int3
leave
push
imul
push
daa
pop
pop
cmpl
incl
shlb
jmp
adc
sbbl
mov
xor
in
or
mov
mov
neg
sbb
sbb
shll
jmp
and
xchg
push
inc
adc
xchg
jno
std
add
fcmovb
mov
sub
in
or
sbb
sub
push
mov
leave
jbe
dec
and
popa
fcomps
pop
adc
shll
ret
and
dec
jo
faddl
orl
jno
or
fidivrl
pop
or
lods
into
ret
adc
lods
in
test
test
icebp
xor
stos
adc
dec
stc
ds
add
divb
jge
lods
addr16
and
inc
cmp
cmpsl
xchg
daa
and
cli
das
ss
xchg
jge
xchg
loopne
cmp
sub
mov
add
imul
pop
inc
add
xorl
shr
push
aam
mov
or
shlb
cwtl
dec
jne
or
sub
xchg
dec
shlb
sbb
frstor
cwtl
xor
out
imul
mov
jg
std
xchg
mov
inc
mov
lcall
dec
ds
testl
pop
jl
jle
mov
push
dec
jecxz
and
rcl
fidivrs
and
adc
mov
add
popf
sbb
push
stos
mov
arpl
cmp
in
popf
xor
arpl
sbb
icebp
add
mov
lahf
mov
scas
cmpsl
mov
mov
inc
sbb
xor
fistps
es
push
jl
mov
cld
ror
ret
xchg
aas
sbb
sub
sub
jo
outsl
nop
flds
movsb
out
addr16
cli
ss
aam
rclb
daa
mov
adc
cmp
incl
fld
int3
insl
cltd
xchg
jg
mov
jle
lock
mov
sub
mov
add
loope
lea
dec
inc
shr
pop
cmp
push
insl
xchg
adc
add
out
aas
cmc
fisubs
out
cmpb
movsl
fimull
in
pushf
int3
hlt
lahf
cltd
mov
jmp
loop
inc
das
fcoms
sbb
mov
hlt
lods
mov
insb
pop
mov
fcomps
dec
out
movsl
push
aas
mul
int3
mov
aam
and
xor
out
imul
daa
addb
sbb
mov
in
add
sub
or
sahf
push
shrb
pop
leave
xor
xchg
cmpb
dec
and
inc
push
push
mov
pushf
adc
fiaddl
fiadds
dec
mov
mov
pop
or
xor
in
loop
cmpsb
jmp
mov
imul
xchg
mov
adc
sub
xor
push
stc
lods
test
mov
in
movsl
mov
js
sahf
jo
xor
shll
int3
sahf
hlt
mov
ror
int3
mov
mov
daa
xchg
data16
cmp
mulb
xchg
and
push
sub
fldcw
out
mov
jb
jmp
int3
pop
push
std
push
insb
push
insb
dec
mov
jp
jae
cmp
cmpsl
lea
cli
jecxz
test
push
dec
lods
mov
fisttpll
fistpl
mov
lret
mov
mov
cmp
xchg
pop
lods
loope
mov
jnp
ret
stc
xchg
pop
pop
sbb
pop
jmp
push
jne
out
jbe
outsb
lret
lahf
xchg
dec
mov
xor
pop
jbe
in
mov
fisttpll
scas
nop
sub
fs
xchg
jge
stc
fcmovnu
lcall
mov
iret
rcll
inc
pop
gs
dec
es
fs
jns
push
xchg
jnp
test
sub
sub
mov
xchg
jecxz
sub
jmp
mov
xchg
cmpsl
lods
push
adc
mov
in
out
test
icebp
scas
dec
int3
push
out
dec
mov
xor
xchg
ljmp
xchg
mov
ret
in
aas
scas
jne
lods
vpaddd
fsubr
jnp
push
in
fsubs
sarb
fstpt
ljmp
xlat
xchg
lods
mov
mov
push
mov
ror
jbe
fstps
iret
pop
inc
outsb
sub
xchg
fmull
das
pop
mov
mov
jecxz
into
decl
ret
pop
fiadds
push
sub
xor
and
es
pop
push
clc
inc
mov
movl
dec
xchg
test
xchg
mov
test
enter
cmp
fs
xor
mov
inc
and
pop
xor
xlat
mov
pop
rclb
mov
adc
sti
mov
add
jo
jno
pop
loop
and
mov
lret
sub
sub
rcll
inc
notb
je
mov
sub
mov
stos
mov
rolb
repz
dec
sub
test
inc
aam
xchg
ljmp
cmp
mov
mov
testl
jmp
cwtl
push
sti
cmpsb
or
int
fdivs
call
or
addr16
jg
jb
add
scas
shll
loopne
xchg
cs
cld
dec
adc
in
pop
dec
cmp
lcall
iret
pushf
and
imul
loop
mov
and
subb
cmc
and
and
xor
inc
xchg
jle
enter
jbe
push
xchg
mov
sub
mov
ret
es
stos
add
jmp
rorl
mov
scas
inc
xchg
mov
xor
push
mov
shrl
adc
dec
mov
xchg
inc
fisubrs
cmp
int3
xchg
sub
xor
pop
push
dec
rolb
addr16
mov
ss
xor
xchg
lea
inc
xor
push
jo
movsb
sbb
rolb
call
adc
std
shl
icebp
test
in
sti
adc
sub
mov
xor
xor
in
das
fisubrs
xor
scas
jle
push
dec
out
mov
testl
push
ret
push
push
push
js
movsl
fs
push
jns
fiaddl
lcall
mov
cmpsb
pushf
cli
fs
push
add
bound
mov
lods
mov
jnp
in
jne
adc
std
imul
sbb
data16
insl
test
icebp
push
sahf
lock
lcall
mov
mov
ret
push
test
mov
xchg
adc
inc
pop
and
lret
mov
sahf
jns
sbb
fs
ss
jl
mov
push
test
push
adc
mov
jo
mov
fwait
mov
pusha
jns
fidivs
jg
lods
pop
pop
divb
scas
jno
lret
ss
xor
out
sbb
inc
in
adc
mov
cld
sbb
jmp
xchg
push
mov
fs
cmpb
add
das
mov
imul
mov
sbb
xor
xlat
cs
or
movsb
sarl
xlat
aam
sbb
outsb
test
testl
cmp
lret
mov
sbb
sbb
xchg
dec
xchg
lret
or
add
hlt
addr16
mov
mov
rcrb
mov
imul
mov
or
pop
adc
pop
push
fsubrs
push
arpl
outsl
mov
into
sbb
cmp
cltd
inc
sbb
mov
pop
jne
add
jge
add
arpl
push
sub
testb
adc
adc
cmp
pop
imul
iret
mov
loopne
fbld
mov
or
jno
in
cmp
or
dec
xchg
jecxz
lods
add
xor
imul
ljmp
mov
fwait
divl
cmp
cmp
leave
fdiv
testl
imul
mov
cmp
xchg
fistps
ss
dec
jbe
mov
loope
or
mov
lcall
or
and
fsubl
sbb
loope
adcl
inc
rorb
adc
cli
jg
stos
test
mov
scas
sub
ljmp
jecxz
dec
mov
add
or
not
mov
insl
int3
scas
stos
rcl
sub
iret
pop
or
dec
shlb
stos
roll
inc
je
aam
mov
mov
jg
sbb
div
cmpsb
sbbb
mov
test
leave
sti
aaa
sti
mov
mov
sarl
in
inc
cmpsb
cmp
push
xor
stos
out
xchg
xchg
out
enter
inc
mov
or
jb
add
fdiv
sbb
inc
xor
jmp
out
enter
data16
inc
cmp
cld
lea
insl
jae
fs
popf
mov
mov
mov
adc
sbbl
sub
cs
dec
adc
ret
jno
test
testl
pop
inc
lret
push
push
aad
jno
and
jmp
dec
mov
shrb
xchg
shlb
or
daa
int
cmp
xchg
add
mov
cmp
or
ss
adc
lret
adc
ss
je
xchg
lods
sub
mov
mov
mov
movsl
adc
popf
lods
daa
dec
mov
jle
and
mov
inc
push
scas
adc
sbb
aaa
push
cwtl
aam
dec
iret
mov
push
idivl
push
int3
ret
jl
imul
inc
sbb
cs
loopne
outsl
cwtl
mov
xchg
imul
push
jno
insb
dec
inc
jmp
jae
xorb
shll
mov
pop
ss
sub
mov
stos
lret
int
push
rcll
add
mov
dec
mov
dec
imul
cmc
add
pop
out
into
lcall
cmpsb
sub
outsl
test
sub
outsl
in
adcb
std
repz
jl
mov
arpl
cmp
imul
mov
popf
imul
out
in
int3
add
and
cmp
or
xchg
cmc
push
jmp
push
roll
adc
testb
mov
inc
jns
arpl
fisubrl
lret
imul
shlb
push
scas
jl
push
pushf
xor
xchg
out
scas
and
hlt
ret
clc
mov
stos
lret
adc
jbe
push
gs
mov
push
lret
adcb
xchg
loopne
fildl
arpl
mov
das
pop
inc
bound
inc
cltd
mov
xlat
xor
js
fcom
xorb
jbe
insl
or
outsb
scas
xor
fsubrl
nop
xor
lret
lahf
pusha
into
mov
insl
fidivs
in
mov
es
dec
sub
loope
shr
inc
sub
dec
repnz
insl
and
push
jle
pop
sbb
movsb
mov
mov
dec
adc
inc
xchg
xchg
mov
out
pop
mov
cmp
inc
out
jb
dec
add
aaa
leave
ja
inc
out
and
add
push
aam
test
push
outsl
loopne
fldenv
lods
scas
push
mul
int
adc
mov
push
cs
negb
sub
sub
push
jg
test
test
mov
out
testb
sbb
sub
inc
imul
sbb
and
pop
and
push
subl
sbb
mov
cmp
mov
dec
ljmp
and
adc
sbb
lret
and
mov
ja
leave
mov
mov
jmp
jp
popf
mov
sarb
or
and
mov
pop
in
fwait
jns
std
repnz
xorl
dec
pop
icebp
mov
movsl
inc
out
sub
jo
mov
push
scas
gs
cmp
incl
pop
sbb
push
aad
shrb
mov
inc
jno
mov
test
std
out
jecxz
bound
push
xor
mov
sbb
mov
mov
mov
and
add
push
dec
xchg
mov
stos
lret
pop
fs
test
jp
mov
inc
pop
inc
sahf
std
sub
sub
xor
mov
mov
cmp
adc
aas
cmp
mov
add
mov
in
mov
pusha
xor
push
imul
adc
mov
in
stos
sbb
xrelease
jnp
or
aad
sbb
into
scas
movsb
cmpb
ret
or
cmpsl
std
mov
pop
cmp
adcb
cwtl
add
push
dec
dec
push
ret
add
mov
addr16
push
mov
dec
pop
repnz
stos
enter
lahf
mov
or
fiaddl
push
std
adc
pushl
xlat
repz
mov
mov
aaa
gs
sbb
orl
and
inc
lret
daa
dec
shl
jmp
ljmp
cltd
mov
mov
dec
pop
mov
ret
int
sbb
push
and
dec
repz
shl
lea
fisubs
mov
iret
mov
push
lods
add
pop
cmp
sub
stc
sbb
cmp
gs
xorb
rcrb
ret
xchg
das
icebp
or
cmpsl
xorb
iret
sahf
mov
xlat
xchg
pop
sbb
addr16
xor
inc
sarl
sub
mov
jge
loope
cli
sub
aas
or
andl
push
mov
sub
lock
stos
mov
mov
push
mov
jo
call
and
jp
or
enter
or
cmp
jge
fbld
iret
int3
pop
push
and
cmp
mov
jns
iret
cmc
mov
push
js
insb
pushf
orl
cmp
ja
dec
shlb
mov
cli
addl
add
ds
or
aam
pop
icebp
sti
mov
mov
test
stos
jge
popf
popf
jle
and
bound
lods
pop
or
lds
pop
iret
cltd
int
jb
lret
std
addr16
sbb
cmp
test
not
mov
pushf
xorl
out
fmuls
lock
mov
sbb
in
or
testb
repz
movsb
fsubrs
call
lds
mov
jp
les
enter
sbb
lret
pop
jo
sbb
enter
pop
jno
mov
or
jne
xchg
pop
xor
jae
mov
xor
enter
andnps
jne
mov
jecxz
repnz
aad
ds
rorb
and
pusha
je
sbb
loope
jl
cs
pop
movsb
or
sbb
and
push
mov
shrl
in
jg
mov
inc
pop
repnz
sub
cmp
mov
dec
in
loope
cwtl
sbb
es
int3
xchg
jl
rolb
xchg
into
push
and
les
lods
push
js
in
add
aas
lds
mov
xor
std
xor
pop
ds
xchg
push
xchg
jb
mov
shr
mov
xchg
bound
fnstenv
push
mov
and
mov
pop
outsl
push
aad
mov
je
inc
xchg
jae
xchg
sub
push
cmp
popl
dec
cmp
mov
jae
fisubl
insl
mov
scas
and
xor
mov
mov
or
loop
aam
pushf
or
pop
mov
int3
xor
movsl
mov
leave
or
jo
adc
xor
adc
mov
lods
andb
test
or
add
or
push
iret
insb
cmpsl
iret
clc
es
add
leave
ret
xchg
addb
jmp
adc
fisttpl
int3
stc
cltd
push
andb
leave
and
or
daa
mov
in
inc
cs
aam
lahf
inc
or
pop
add
adcl
xchg
push
xor
jecxz
mov
add
fsubrs
sub
xchg
int
mov
rcl
insl
lret
mov
es
ss
mov
stc
mov
lds
dec
cmpsb
gs
push
clc
xchg
sbb
addr16
xor
fstps
popa
mov
lahf
and
dec
add
outsl
cmp
inc
out
in
jmp
js
mov
mov
dec
push
jo
inc
insl
iret
mov
dec
popa
icebp
sub
mov
xchg
push
dec
aas
clc
adc
arpl
clc
adc
xchg
xor
sub
arpl
repz
mov
insb
loop
test
test
mov
mov
dec
std
stos
pop
pop
mov
pop
stc
jb
adc
aas
xlat
mov
inc
psraw
xchg
sub
call
ja
jae
lods
inc
dec
insb
push
adc
jae
popf
adc
jno
mov
clc
sub
into
push
ds
sbb
push
mov
mov
jns
rorl
push
arpl
mov
je
xor
xchg
cli
add
xor
xor
add
inc
xchg
inc
cmpsl
push
push
fisttps
xchg
mov
xchg
pop
rclw
xchg
mov
leave
add
sub
hlt
arpl
jno
jecxz
sbbb
adc
js
push
pop
jo
ja
ss
inc
fstl
adcb
cmp
cwtl
sbb
mov
push
inc
sti
push
push
mov
gs
lds
push
mov
loopne
cmp
subb
mov
mov
sub
xchg
jo
loope
push
sbb
or
dec
push
sbb
push
sbb
sbb
stc
sbb
dec
xlat
aas
orl
ret
mov
pop
mov
test
enter
rcrl
xchg
push
lcall
lcall
inc
cltd
pop
mov
mov
loop
sub
ret
pop
push
rol
outsb
cmp
addr16
sbb
jne
mov
inc
in
xchg
dec
inc
les
dec
enter
les
jmp
sbb
xchg
dec
add
scas
add
out
repz
insb
js
cli
mov
iret
sbb
xchg
outsb
cli
inc
and
aad
pop
out
mov
sbbb
inc
xor
sub
test
mov
leave
scas
test
arpl
sbb
popf
mov
out
shlb
pushf
sbb
scas
add
jle
inc
adc
loope
sbb
xchg
push
in
int
xor
std
or
jge
in
lcall
xor
leave
push
aam
lret
js
inc
and
xchg
mov
mov
pop
mov
arpl
fsts
and
adc
jg
sbb
into
lock
xlat
imul
inc
push
sti
cmp
rol
mov
pop
cmp
pop
arpl
adc
mov
lea
and
scas
cmp
xchg
or
fisttps
push
dec
lahf
mov
div
test
pop
call
les
jno
aaa
push
scas
fcmovb
add
fcompl
sbbb
or
cmp
ret
movsb
xchg
movsb
insb
mov
mov
ja
adc
mov
es
push
enter
jmp
arpl
jecxz
das
enter
dec
sbb
xchg
jnp
pop
ds
inc
xchg
lods
xor
or
ret
cmp
aas
aaa
repnz
cwtl
sub
loopne
and
flds
adc
sub
or
in
shll
ss
lret
addl
mov
loope
push
out
stos
cwtl
mov
jne
in
push
pop
inc
inc
imul
mov
adc
nop
in
and
jl
cmpsb
ja
fnstsw
shll
mov
rolb
data16
mov
pusha
dec
jbe
sar
cltd
xor
pop
sbb
add
jne
inc
lods
in
xor
pop
xor
pop
adc
in
jae
das
lret
sub
imul
int
js
aas
lock
jno
mov
push
xchg
sbb
xor
pusha
mov
dec
mov
and
xor
test
xchg
pusha
int3
adc
pop
jns
sub
and
mov
lcall
enter
out
push
jnp
and
inc
xchg
sbb
data16
out
mov
gs
and
push
sbb
fnsave
sbb
and
jbe
int3
mov
pop
or
movsl
lret
pminsw
pop
sbb
shlb
nop
cmp
movsl
mov
and
test
adc
mov
jl
ret
fistpl
xchg
inc
pop
jp
cmpsl
mov
inc
cli
mov
inc
or
into
ljmp
mov
iret
and
lret
push
sbb
inc
pminsw
jo
jmp
mov
dec
repnz
mov
cmc
out
in
mov
inc
jne
roll
xor
lcall
mov
add
jno
add
fidivrl
inc
adc
or
mov
adc
imul
dec
pop
cmp
cmc
lret
sub
or
push
fsubs
aaa
push
dec
shll
mov
mov
popa
pop
dec
pop
xchg
jg
cmp
addr16
sub
pop
push
insl
xor
lret
test
ss
and
or
je
addr16
mov
xlat
pop
out
sbb
out
push
icebp
mov
mov
pop
neg
jmp
pop
mov
cmp
push
or
push
fimull
repz
pop
pop
push
jmp
pushw
imul
jne
push
movsb
je
fistl
inc
jmp
mov
sbb
in
pop
sub
in
jl
stc
pandn
or
and
add
gs
ljmp
inc
pushl
aaa
enter
mov
and
daa
push
out
push
sub
test
roll
ljmp
jle
xchg
fwait
sbb
mov
mov
mov
pop
icebp
mov
cmpsb
cmp
cmp
nop
cmpl
ror
fistl
jmp
aas
les
clc
loope
xchg
pop
sahf
xchg
cmp
movsb
adc
shll
xchg
mov
clc
mov
lcall
xchg
jp
clc
or
cmpsb
sbb
movsl
sbb
call
push
cmpsl
pop
movsl
mov
mov
dec
jp
lcall
jbe
outsl
icebp
mov
cmpsb
sbb
jne
scas
stos
shrb
adc
repz
leave
repz
pop
sbb
or
les
pushf
jns
jae
xor
test
jecxz
dec
push
ja
loopne
mov
imul
insb
xchg
sbb
fcmovnb
sub
xor
fmull
sbb
adc
push
mov
xchg
lret
inc
mov
inc
mov
and
cltd
pop
enter
ret
rorb
and
inc
out
insb
xor
imul
shll
add
inc
fstps
pop
lret
add
mov
sbb
jle
bound
cmp
out
repz
or
movsl
dec
clc
aas
or
aas
xchg
sbb
gs
loopne
xor
and
pop
xor
add
inc
mov
cwtl
pop
xor
int3
enter
hlt
popa
jbe
or
es
dec
loope
jl
or
stos
jae
add
xorl
or
inc
add
cmp
scas
loop
clc
in
or
ret
xchg
test
adc
cmpsb
insb
add
wbinvd
pop
and
or
jbe
in
cmp
in
or
push
imul
fildl
int
lock
push
lea
xor
in
jbe
lcall
test
dec
dec
and
push
jbe
stos
sub
leave
repz
and
test
aas
mov
pusha
jne
pop
xchg
inc
and
jo
jg
es
push
insb
xchg
clc
repnz
pop
push
and
fs
data16
aas
cmp
stos
adc
neg
xor
add
pop
xlat
add
mull
or
lcall
cld
mov
or
mov
jmp
es
mov
lods
add
int
add
inc
xchg
sub
mov
and
dec
xor
cmpsl
loop
mov
sbb
cld
inc
dec
push
or
rolb
mov
xor
adc
xor
fisttpl
hlt
lcall
sbb
xchg
daa
push
mov
out
push
xchg
push
neg
pop
cmp
js
cs
xor
or
jl
ds
ja
mov
push
mov
lahf
icebp
xchg
rcr
mov
adc
push
pop
ret
cmp
rcrl
mov
dec
jge
in
mov
jl
adc
sarl
jnp
inc
push
in
arpl
fldt
jl
in
sbb
add
or
daa
sbb
dec
int3
adc
adc
out
xchg
ss
xor
mov
push
inc
lods
add
dec
sarl
test
mov
push
mov
scas
outsb
lcall
dec
clc
cmp
lock
outsl
mov
adc
sub
leave
adc
les
sbb
stos
mov
aam
jl
or
jo
mov
push
jns
fcompl
mov
div
pop
dec
jns
test
int3
cmp
fwait
mov
adc
xchg
arpl
hlt
enter
push
fiaddl
mov
cmp
xor
ret
leave
cmpsl
push
fwait
mov
nop
jns
and
dec
insl
dec
lret
sub
push
pushl
sub
fidivl
dec
adc
mov
pop
xchg
out
jle
inc
imul
in
leave
lahf
loopne
dec
mov
push
or
push
add
jns
lods
je
loopne
cmp
jmp
cmp
movsl
inc
mov
ja
push
ljmp
cmp
mov
or
aad
ja
lods
xlat
cmp
filds
lahf
cwtl
mov
adc
jl
push
into
mov
dec
daa
jecxz
inc
adc
mov
mov
xchg
mov
lcall
mov
jge
mov
jg
cmpsl
daa
pop
add
adc
jns
andl
dec
pop
outsl
adc
out
mov
mov
fistps
sub
out
ljmp
in
pusha
push
mov
mov
stc
les
jo
sub
cmpb
das
mov
rol
stc
sbb
test
pop
mov
sahf
ret
cmp
fidivrl
les
aad
inc
imul
xchg
jne
hlt
mov
popf
repnz
lds
inc
cltd
add
push
lods
sbb
enter
out
pop
pop
shrl
pushf
jl
popa
mov
sub
shl
mov
test
pusha
push
cltd
mul
mov
and
scas
xor
and
fldt
inc
movsl
or
insl
cmp
mov
pop
push
mov
cltd
pop
and
inc
loop
lcall
xchg
sub
lods
dec
subl
adc
lds
add
adc
ret
insl
cltd
and
rcrb
repz
jl
xchg
addr16
repz
xchg
ffree
inc
add
dec
pop
cmp
or
push
out
mov
imul
sbb
nop
aam
ret
mov
mov
inc
insl
rcrl
popf
pushf
loopne
fildll
jecxz
mov
movsl
sub
xor
xor
dec
mov
jp
enter
mov
dec
mov
cmp
dec
popa
orl
cmpb
sub
push
mov
mov
jle
addb
insl
pop
lcall
dec
movsl
cwtl
adc
lcall
setle
add
out
mov
xchg
aad
mov
push
loop
aam
add
int3
ja
cli
add
data16
cs
dec
jo
mov
pop
lret
imul
mov
xchg
pop
andl
mov
lock
mov
negl
cmp
mov
stc
cmp
jbe
int3
cld
and
rep
insb
test
fucom
test
aad
cs
call
push
cmp
push
xchg
ficoms
popf
jns
cmp
int3
ja
pop
add
aam
ret
inc
mov
into
jo
fisubrl
adc
sbb
sbb
scas
cs
mov
and
daa
mov
pusha
gs
rcl
jg
mov
adc
into
sub
sbb
sub
sub
mov
ret
cwtl
xchg
ljmp
dec
cli
inc
sbb
xor
xor
xchg
fs
je
push
xchg
leave
xor
aaa
mov
dec
jecxz
lods
scas
adc
lods
dec
lds
mov
jge
pop
in
xor
xchg
fsubs
arpl
mov
jg
sub
and
aaa
mov
scas
pop
mov
dec
mov
jo
sbb
cmp
push
or
adc
mov
emms
mov
push
std
sbb
loop
dec
jp
cmpsl
push
xor
lcall
sub
jmp
inc
xor
call
sar
mov
mov
push
sbb
pop
aad
mov
cs
loopne
pop
mov
push
cmp
cmp
push
sahf
push
pushf
mov
shlb
js
mov
xor
mov
add
int3
lods
arpl
jb
fnstsw
sbb
outsb
push
stc
push
cmp
ljmp
cmp
adc
xchg
adc
xchg
ret
adc
xchg
jle
shl
out
jb
xor
test
lret
insb
inc
mov
pop
mov
adc
das
es
sub
or
push
out
sub
fwait
or
cmp
sub
out
xchg
xchg
je
adc
test
cmp
xor
adc
dec
dec
inc
fdivrl
les
cmp
mov
and
fisttpll
test
xor
dec
stc
dec
mov
add
int3
push
pop
shl
add
xor
jne
sbb
lods
adc
jb
es
jl
mov
mov
adc
inc
ds
ret
pop
ljmp
adc
mov
inc
add
ficompl
cmpsb
lret
das
pop
ds
sahf
cmpsb
mov
rorb
test
xor
jno
dec
aam
test
in
hlt
leave
dec
clc
push
shrl
shlb
les
dec
gs
sahf
decb
ffreep
sahf
addr16
mov
rclb
mov
testl
aas
insb
pop
pop
sub
sti
jae
push
cwtl
or
mov
jbe
push
jns
rolb
dec
jmp
dec
iret
loope
lret
push
mov
cmp
data16
adc
xchg
mov
sub
sar
sbb
std
test
fcmovb
jp,pn
stos
push
mov
or
add
into
jl
xor
dec
add
sub
les
scas
inc
leave
sub
pop
cmc
sahf
jg
outsb
mov
cmp
clc
in
xor
sub
aam
add
dec
fwait
cmpsb
mov
adc
jg
adc
jb
jae
mov
pop
mov
xor
adc
cmpsb
cmpsb
ud0
xor
sbb
and
hlt
xor
xor
push
xchg
pop
sahf
cli
push
ffree
sub
int
mov
or
lahf
or
xchg
das
xor
repnz
inc
lds
push
pop
popf
jnp
cmp
xor
mov
scas
inc
hlt
pop
adc
cmp
mov
push
mov
sahf
bound
rcl
std
das
icebp
jcxz
lret
repnz
mov
mov
aaa
dec
stos
sub
adc
mov
cs
sbb
rclb
adc
jae
dec
push
mov
not
movsb
mov
inc
inc
dec
push
scas
lret
in
out
mov
in
dec
ret
cmc
jge
sub
mov
mov
jge
jp
addl
sbb
hlt
roll
clc
xor
jne
push
mov
cmp
push
add
pop
mov
pop
jecxz
call
or
in
pop
fcoml
jbe
adc
sbb
inc
jb
adc
arpl
and
vpmadcsswd
lods
dec
addr16
pop
sti
inc
das
dec
pop
mov
pop
sbb
push
push
popa
jp
and
mov
inc
outsl
test
sbbb
cmpl
pop
rcll
int
mov
pop
addr16
xlat
ljmp
scas
xchg
imul
mov
mov
fs
lods
mov
fildll
std
mov
aad
jno
pop
call
fmuls
mov
jmp
lret
dec
cs
les
add
jae
or
jno
inc
add
jnp
insl
and
push
xchg
out
mov
push
dec
test
add
jo
inc
mov
out
call
mov
cli
outsb
cmpsb
movsl
and
imul
jno
dec
es
push
push
mov
push
mov
stos
fisttps
fbld
sub
cmp
negl
mov
mov
je
lock
adc
int3
sbb
cs
mov
or
adc
ljmp
popf
fwait
into
push
push
scas
push
and
jo
les
sbb
xor
jns
scas
sub
sub
inc
jecxz
dec
pop
cs
call
stos
out
and
mov
mov
fsubl
cmp
ljmp
or
loope
mov
jb
movsl
int
cs
push
outsb
adcb
and
clc
stos
icebp
daa
gs
into
pop
xor
and
ljmp
push
in
adcb
mov
dec
sarl
daa
pop
test
test
pop
lahf
sahf
sub
je
dec
mov
inc
push
cmp
sub
add
or
pop
and
push
negb
mov
scas
sub
ret
lcall
rorb
mov
shll
cmpsl
loope
in
in
push
mov
lods
mov
dec
roll
mov
aas
mov
pop
test
cmp
mov
shr
repnz
push
mov
cmp
inc
imul
xchg
sub
lds
imul
loopne
jns
in
pusha
jecxz
push
stos
sbb
dec
gs
mov
adc
pop
cltd
sarb
sti
xchg
pop
in
lods
data16
sbb
mov
dec
and
aad
inc
mov
shll
mov
into
fldl
adc
xor
push
cmpsl
fdivs
lea
lods
fsqrt
outsb
scas
cs
add
cmpsb
repz
or
cmp
lds
sub
aas
loope
sub
inc
add
mov
fiadds
test
test
imul
push
mov
lret
adc
xchg
imul
std
mov
js
out
pop
in
dec
mov
in
sbb
outsl
or
loop
adc
push
sbbl
repz
jb
mov
push
dec
ret
xor
and
cmp
mov
mov
pushf
mov
in
xchg
rcr
xchg
mov
or
jle
cmp
leave
clc
fsubrl
jno
adc
adc
cmc
or
rorb
int
and
xchg
and
push
dec
call
mov
or
in
mov
xor
xor
testb
lock
dec
hlt
cwtl
shlb
enter
inc
jp
xor
mov
mov
cmpsl
sbb
adc
dec
lods
jbe
adc
and
adc
mov
cmp
pop
aaa
in
sub
outsl
add
push
scas
movsb
popa
cmc
lock
and
arpl
scas
fadd
std
xor
cmp
in
data16
sbb
push
adc
inc
push
jo
inc
outsl
sbbb
or
push
jl
dec
cmp
xor
leave
sbb
je
sahf
mov
xchg
or
push
arpl
in
dec
test
iret
aam
outsl
xchg
xchg
scas
and
shrb
jecxz
jge
sarl
xor
test
and
fwait
mov
sbb
pop
fstl
or
jmp
mov
sbb
mov
sbb
lds
scas
dec
pusha
leave
ret
int
das
push
lahf
fwait
sbb
into
rclb
xor
stos
sbb
and
xor
push
lea
cmp
jnp
imul
jns
mov
sub
jne
mov
mov
sahf
sahf
push
xor
or
dec
push
daa
mov
mov
dec
inc
je
fstps
les
jno
insl
inc
xchg
lods
pushf
mov
mov
pop
xchg
out
pusha
insl
cld
push
and
dec
push
sbb
xchg
divb
hlt
xchg
fidivrl
mov
push
ret
stc
or
in
and
out
mov
add
loopne
leave
sub
scas
mov
sbb
jns
or
or
xchg
sbb
add
add
pop
rcrl
insb
mov
xchg
out
loope
mov
or
fimull
negb
aam
pop
jb
call
mov
fsubrl
pop
popf
movsl
xchg
jg
push
jbe
and
push
push
pushf
rcl
cwtl
leave
xchg
pop
ret
repnz
and
xchg
daa
cmp
popa
and
xchg
les
lahf
mov
loop
xor
inc
insl
loope
pause
mov
pop
and
xor
stc
add
push
and
xor
or
data16
imul
data16
test
loope
push
xchg
xlat
in
jecxz
lcall
scas
sbb
push
rcl
push
ja
test
cmp
in
leave
hlt
jns
jo
mov
inc
mov
fnsave
int
lret
mov
push
call
in
jg
or
mov
push
pop
inc
jp
dec
xlat
test
push
shrb
jo
push
out
int
into
jmp
popl
enter
sub
adc
push
movsl
dec
dec
insl
mov
xor
or
push
js
popf
pop
mov
mov
stc
inc
lods
pop
mov
icebp
int
jg
mov
xlat
inc
pop
xor
mov
pop
and
out
mov
cmp
mov
loop
pop
jmp
cmp
ret
jecxz
and
lea
pop
mov
cwtl
xor
jo
push
fucomip
and
shl
nop
mov
sbb
mov
xchg
mov
pusha
bnd
push
test
lock
mov
ss
adc
jmp
mov
enter
push
sarb
inc
lock
int3
fidivs
shl
movups
xchg
dec
out
fdivs
out
leave
add
mov
ljmp
roll
mov
stos
sbb
xor
mov
cmpsb
jo
mov
push
mov
ret
loop
dec
or
pop
mov
xchg
cltd
inc
inc
inc
repnz
add
lea
or
and
cmpl
je
and
in
ror
push
mov
cmp
cmp
xchg
fbld
push
mov
mov
mov
lock
cmpsb
cltd
add
pop
add
addr16
add
js
xchg
cmp
ljmp
je
mov
test
or
mov
arpl
sar
push
test
outsl
inc
daa
repnz
call
mov
insl
in
gs
push
mov
lahf
adc
outsb
and
cmpsb
sbb
gs
ss
or
push
lahf
les
fisubrl
iret
shll
sbb
sub
repnz
pop
loop
lock
dec
int
add
mov
fistpl
adc
inc
pop
mov
inc
adc
repz
push
mov
and
pop
cli
nop
mov
add
add
retw
push
cli
pop
lods
iret
xchg
jl
les
cltd
mov
ret
xor
cs
test
stc
xor
rcll
sub
mov
and
mov
jmp
repnz
and
and
pop
fwait
jg
sub
lods
xor
add
mov
shll
out
push
mov
aaa
adc
add
ljmp
les
into
pop
push
lea
sbb
sbbl
xor
shll
dec
sub
xchg
sarl
popf
int3
dec
jo
cmp
shlb
mull
lds
mov
pop
fnstenv
xlat
xchg
pusha
push
stos
or
push
lods
jle
cli
ljmp
fidivl
pop
mov
xchg
ret
pop
nop
jns
aas
mov
pop
ja
stc
shlb
ljmp
into
jecxz
pushf
mov
int
mov
mov
ffreep
fsubrp
push
mov
fnstcw
xchg
fisttpll
mov
mov
aad
inc
jmp
data16
cmp
xchg
jle
push
jle
dec
xchg
repnz
pop
pop
mov
jl
jnp
add
adc
adc
jmp
bswap
loopne
sub
repnz
mov
cwtl
out
hlt
roll
mov
cmpsb
adc
pop
mov
pop
lods
stos
xor
pop
adc
cmp
pushf
lds
or
push
add
loopne
out
push
es
jns
pop
rolb
cmp
pop
jnp
cmp
nop
jne
push
mov
les
xor
dec
sub
push
enter
inc
test
xchg
add
arpl
add
add
sti
mov
and
addb
jp
push
and
mov
sbb
test
jmp
push
call
add
mov
ret
fisubrs
bound
mov
xchg
pop
popf
sbb
xor
cmp
sbb
hlt
jo
inc
inc
insl
imul
out
push
jecxz
inc
mov
leave
aas
push
sahf
roll
cmc
sbb
pop
ljmp
cmpsb
or
cs
aaa
js
mov
pop
pop
sub
add
add
xchg
add
lcall
inc
or
lds
stos
dec
dec
inc
ret
sar
pop
mov
ret
xchg
sahf
push
out
fldt
insb
xor
pop
and
jecxz
fwait
xchg
jmp
add
enter
dec
clc
test
repz
out
cs
adc
das
cmpsl
cmpsl
adc
in
inc
jmp
jp
push
imul
mov
aam
inc
es
adc
iret
mov
testl
push
push
cli
popa
mov
shlb
sarl
pop
outsb
ja
push
mov
sub
arpl
mulb
sub
jp
dec
push
jne
jge
loop
cmp
or
or
jae
mov
sub
imul
xchg
lock
ret
mov
rcrl
push
cltd
jle
test
or
or
sub
pop
fsubrl
pop
push
push
xchg
popa
adc
aam
add
imul
shl
xchg
add
xchg
xor
adc
aam
xchg
adc
sbb
inc
stos
in
notl
ja
pop
jo
jo
mov
loope
lock
mov
test
push
fsubrs
subl
dec
mov
repnz
stc
add
lret
sahf
xor
nop
or
pop
xchg
cli
mov
xchg
test
cs
and
out
adc
in
addl
mov
add
cmpb
push
xchg
adc
enter
leave
pusha
lds
leave
fidivl
xchg
cmp
stos
pop
mov
jbe
dec
jle
sbb
dec
test
in
movsl
outsl
mov
jg
jp
xchg
aam
dec
popf
mov
movsl
dec
jo
movsl
daa
push
scas
dec
out
loope
add
lods
mov
sbb
mov
sub
cld
daa
or
and
pop
mov
std
shlb
adc
push
fidivl
push
mov
insl
sub
fistl
xchg
and
in
lods
pusha
mov
cmp
test
scas
es
mov
int
or
inc
add
rcll
jg
call
imul
mov
repz
in
pop
rorl
stos
push
aam
jecxz
or
sbb
ljmp
aam
jns
mov
add
push
mov
mov
xor
not
in
call
clc
lahf
aam
cwtl
sbb
mov
fisttpl
shrb
mov
xchg
mov
jae
ja
jl
push
pop
cmp
jg
adc
scas
loope
jl
and
fiaddl
or
repnz
arpl
cli
pop
xchg
jge
cmp
test
lock
aas
arpl
push
mov
mov
aaa
mov
fadds
dec
ret
movsl
lret
mov
std
and
sub
pusha
mov
faddl
adc
out
cmp
xchg
cmpsb
jo
aas
push
inc
shl
pop
cwtl
movsb
in
mov
addb
cmp
pop
mov
lret
negb
shl
scas
inc
popa
fiaddl
rcrl
sbb
mov
mov
jecxz
add
popf
and
lret
jne
cmp
clc
jp
repnz
test
xor
pop
cltd
jmp
push
jp
cmc
popf
fs
sahf
xor
jp
fdivl
mov
jnp
loop
adc
jb
jne
sub
jne
lock
push
adc
mov
js
movsl
push
jle
aam
ja
mov
xorb
mov
ret
xlat
hlt
test
and
inc
pop
mov
push
fldcw
cmpsb
iret
sub
iret
or
xchg
fwait
aad
jno
aas
mov
cmc
sarl
imul
add
jno
sbb
mov
dec
mov
sbb
aas
repnz
xor
mov
xor
sub
jle
jg
idivb
jnp,pt
out
cli
jmp
or
lret
bound
test
add
sub
mov
cmpsb
ja
cmc
xchg
xchg
fbld
xchg
mov
arpl
push
cs
lds
push
movsl
jp
into
stos
pop
leave
adc
popf
lea
and
fisubrs
xor
push
jns
addr16
mov
out
lret
pushf
pushf
mov
adcb
ficomps
mov
lds
and
cld
mov
daa
fsubl
mov
lahf
fcomps
es
in
and
lods
adc
mov
dec
stos
lods
mov
fimuls
lds
mov
mov
xchg
cmc
mov
sti
push
or
cli
lret
pop
jb
stos
test
mov
push
roll
add
scas
sub
jle
mov
pop
jmp
lock
push
ss
addb
and
pop
in
icebp
insl
pop
mov
pop
outsl
push
icebp
mov
movsb
pop
fwait
andb
lods
sbb
jp
jmp
mov
mov
cli
scas
rorl
das
pop
pusha
cmp
out
addr16
js
pop
dec
pop
dec
dec
mov
insb
xchg
fwait
std
mov
test
in
and
xor
and
cwtl
sbb
stc
dec
pop
xchg
xchg
jle
ds
movsl
repnz
fidivs
sbb
out
fdivp
enter
cmp
dec
fdivl
mov
or
or
mov
cmp
push
adc
imul
iret
leave
imul
push
mov
sbb
sub
xchg
sub
fildll
fistpl
bound
lret
jp
inc
cmp
xor
xchg
adcl
leave
sub
mov
pop
shll
daa
bound
and
mov
inc
jp
clc
clc
inc
jecxz
pop
out
jae
lock
add
lods
lahf
and
mov
pushf
outsl
push
pop
mov
push
adc
adc
adc
lock
lret
adc
aad
shr
dec
gs
or
jle
out
cmp
mov
mov
sarb
push
or
mov
mov
inc
add
stc
subl
cltd
lea
pop
push
mov
and
jno
jbe
cs
pop
icebp
inc
int
push
scas
sarb
pop
jge
andb
sbb
add
ret
cmp
pop
xchg
inc
mov
pop
js
sub
sbb
stos
loope
in
inc
int3
xchg
ret
and
loope
cmp
sub
test
out
jno
jne
xchg
mov
mov
and
clc
dec
cmp
subb
out
lret
xchg
rorl
sbb
mov
xor
mov
jae
pop
sub
ljmp
mov
dec
in
les
lods
push
lds
xor
es
xchg
sahf
cmc
arpl
cld
inc
notb
dec
stos
lret
adc
repnz
subb
inc
push
adc
add
adcl
mov
inc
call
and
iret
adc
mov
push
out
jb
mov
enter
popa
test
pop
dec
push
xor
fwait
popw
bound
int3
push
scas
lret
rol
adc
inc
rcll
jmp
adc
repnz
sbb
xor
stos
mov
idivl
inc
subl
sar
scas
sbb
movsl
jecxz
mov
dec
inc
mov
ss
pop
std
insl
js
les
pop
jmp
js
jle
popa
repz
adc
sbb
pop
inc
sarl
ljmp
push
pop
dec
gs
insl
ss
addb
cmpsl
jne
pslld
in
and
filds
pop
inc
pop
jle
outsb
dec
xchg
sbb
neg
test
adc
and
dec
push
dec
lret
dec
stos
cmc
adc
inc
add
sahf
sbb
arpl
in
lea
jae
and
mov
lcall
mov
push
pop
jge
fstpl
rclb
adc
mov
sarb
adc
gs
jne
add
data16
mov
xor
and
shrb
sarb
or
lret
je
mov
xchg
ficomps
cs
cltd
pop
ror
xor
hlt
lahf
dec
and
or
scas
dec
cvtps2pi
sbb
in
xchg
scas
jmp
add
pop
repnz
jmp
vphaddubq
pusha
ja
mov
out
sbbl
enter
outsl
xor
repz
cmp
jnp
dec
dec
jo
pushf
sub
sbb
scas
dec
add
out
cmp
inc
sub
enter
leave
inc
rclb
push
xchg
arpl
inc
push
xor
pop
cmp
adc
les
out
daa
adc
in
test
aad
imul
fsubs
mov
mov
clc
xor
dec
mov
je
clc
mov
dec
push
stc
jmp
movsl
push
sahf
or
in
add
xor
lret
fwait
call
adc
xchg
scas
inc
xchg
add
xlat
xchg
outsb
scas
ljmp
mov
adc
test
dec
fstpt
xchg
daa
scas
insb
or
push
ljmp
pop
push
xor
mov
in
sbb
push
push
cmc
ret
mov
mov
xor
inc
in
push
dec
adc
and
es
addr16
adc
or
das
sbb
pop
div
jne
lahf
jl
adc
sub
adc
cmp
lahf
rcll
dec
dec
lods
fnstenv
into
jl
add
dec
dec
les
scas
lret
gs
and
cwtl
data16
sahf
adc
mov
shlb
loop
stos
and
xchg
and
xor
loopne
lods
cmc
pop
cmp
sub
ja
and
mov
push
adc
mov
bound
jg
sub
xor
inc
repz
call
jns
mov
dec
repnz
cmp
adc
or
fimull
cmpl
add
or
xchg
lds
insb
and
rcrl
cmc
xor
sub
jg
repnz
movsb
add
andb
inc
cmpsb
and
adc
popf
in
test
lods
mov
sub
or
add
popa
popl
jge
mov
cli
mov
repz
inc
dec
add
xchg
pop
std
pop
gs
and
xchg
push
xor
iret
cmp
in
inc
mov
pop
push
mov
std
mov
rcrl
ss
pop
inc
leave
and
ja
jbe
mov
jecxz
sar
pop
pusha
push
mov
cmpl
pushf
pop
ds
lret
jmp
fnstenv
xchg
scas
out
jl
pop
shll
movsb
mov
mov
add
push
fildl
add
push
ja
jns
add
mov
add
sub
inc
sbb
jp
jae
mov
push
inc
imul
mov
pop
xchg
iret
pop
call
or
sub
sub
pop
inc
mov
and
hlt
repnz
jmp
sbb
in
pop
adc
jp
hlt
movsl
push
cmc
and
sbb
insb
scas
es
movl
add
or
stos
or
lods
lret
jbe
mov
sub
jns
aas
and
dec
add
test
jge
jg
shll
push
jg
adc
push
setge
pop
add
mov
and
imull
cmp
ss
fdiv
loope
push
sti
nop
xor
mov
mov
js
push
lcall
dec
push
or
test
stc
or
pop
xor
jns
xchg
dec
mov
popa
hlt
mov
test
and
jle
mov
sbb
shrb
out
fwait
pop
fbstp
or
lds
dec
insl
cmc
cmc
std
sti
ljmp
and
jnp
xor
or
jge
lret
mov
mov
scas
xor
addr16
lret
sti
jge
sbb
jb
jecxz
mov
cmp
dec
insb
jecxz
nop
fnstenv
aas
into
pop
mov
test
ja
pop
fidivrl
test
add
pop
cld
les
jno
or
mov
loope
jo
in
xchg
cs
sarb
push
sbb
mov
jno
fcmovnb
mov
jge
repz
cmpsb
lcall
mov
push
fwait
pusha
dec
xchg
pop
mov
mov
sti
push
ja
cmp
push
or
pop
xchg
mov
push
xchg
sbb
fildl
mov
push
push
push
xor
mov
movsb
sti
aam
mov
jnp
jno
jmp
cmp
dec
inc
icebp
stos
stos
xchg
out
int3
std
push
repz
ljmp
push
lret
xlat
mov
leave
inc
mov
xchg
xchg
mov
add
xor
aas
and
jae
push
fadd
sub
out
pop
add
scas
fnsave
jmp
lock
fdivs
pop
ret
cmp
dec
jb
adc
jae
inc
fwait
icebp
and
cmpsl
das
fst
jl
xor
inc
int3
je
pop
pop
addr16
push
pop
outsl
out
jp
sub
outsb
lock
push
mov
mov
nopl
out
sbb
add
popa
sbb
es
adc
lods
gs
mov
pushf
pop
jle
jnp
xor
jle
sbb
jae
adc
mov
jl
js
in
or
int3
cmp
inc
loopne
les
cs
repnz
pusha
les
mull
mov
xlat
inc
push
cmc
bound
sbb
xchg
insb
ret
iret
mov
and
sbb
xor
andl
inc
push
push
fstps
and
push
scas
xchg
xchg
cmc
inc
mov
hlt
aas
movb
and
add
mov
sbb
outsb
lea
adc
comiss
jb
mov
iret
mov
adc
jnp
mov
add
or
scas
mov
jle
loope
mov
aam
sbb
pop
lds
push
lods
push
pop
or
sub
insl
out
movsb
loope
cmc
xchg
mov
outsl
and
dec
add
divl
sahf
add
out
scas
mov
mov
lods
add
inc
repnz
loop
push
cmp
sbb
addb
movsl
js
mov
movsl
arpl
jp
mov
inc
outsl
bound
push
mov
pop
imul
test
arpl
xchg
xlat
test
cmpl
fsubr
push
jl
orl
sub
add
inc
test
pop
in
and
or
aam
and
cs
fsts
dec
je
or
inc
mov
sub
pcmpeqd
push
or
xchg
mull
sbb
xor
test
pop
inc
sbb
xchg
aam
mov
outsb
popf
push
jne
rep
loop
leave
pop
sub
cli
xchg
mov
mov
out
xor
mov
push
sbb
psubsw
sbb
into
pop
cmp
mov
fs
add
loope
jbe
sbb
inc
sbb
dec
sub
lea
cmp
les
jo
ret
sub
inc
sbb
jp
ficoml
mov
movsb
push
scas
in
repnz
sahf
movsl
dec
in
dec
outsb
and
dec
test
sbb
pop
push
pop
adcl
cmp
popf
mov
lcall
fwait
fsubrp
jge
aaa
fiaddl
and
cmp
sbb
mov
mov
cmp
xchg
push
add
or
cli
cwtl
mov
and
jno
dec
mov
cli
fcomp
jb
mov
xchg
aaa
and
pop
xchg
loop
loop
push
fdivs
cmpsb
adc
sub
subb
dec
sbb
xchg
lock
nop
test
and
mov
jl
jo
arpl
mov
repnz
add
xchg
adc
bound
jo
mov
dec
fsubrl
f2xm1
repnz
sbb
xchg
sub
fs
aas
testb
add
sbb
or
and
add
and
call
scas
jmp
addr16
into
dec
ds
push
pop
add
or
xlat
push
out
sar
leave
scas
jge
ffree
ja
je
mov
jg
mov
repnz
cmpsl
lret
testl
cmp
outsl
icebp
gs
mov
int
lahf
pop
clc
sub
ja
scas
pop
and
or
mov
fsubl
mov
cmovp
mov
mov
push
sbb
test
xchg
sbb
bound
sbb
dec
adc
push
xchg
jno
mov
or
dec
push
jmp
clc
arpl
mov
push
dec
or
xchg
cmp
sbb
scas
add
test
jecxz
mov
jo
scas
mov
jae
loop
cmp
std
mov
mov
fdivrs
pop
mov
dec
jno
push
push
repz
mov
inc
or
pop
lds
and
sbb
xchg
dec
xor
pusha
out
jno
sub
mov
out
stos
adc
or
xchg
jb
test
arpl
and
inc
jb
push
jle,pt
add
push
jnp
adc
mov
inc
mov
xor
aad
shll
sub
xor
loop
dec
mov
stos
insb
aas
test
pop
xchg
pop
pop
jo
jns
js
stos
popf
rcrl
shll
or
test
lret
adcb
aaa
fs
lds
mov
sbb
rclb
hlt
push
outsl
aam
sahf
aam
movsb
sub
fs
jns
test
mov
xchg
test
hlt
add
cmp
rclb
data16
pusha
es
push
lahf
fnstenv
add
push
mov
push
push
jb
scas
jns
or
add
stos
cltd
ja
fildl
jnp
or
stos
mov
arpl
roll
sbb
imul
iret
call
sub
cmp
bound
int3
arpl
sbbb
inc
xor
push
mulb
lahf
test
mov
adc
sub
mov
ja
movsb
cmpsl
xchg
mov
inc
xlat
mov
fldt
xor
inc
scas
testb
cmp
add
bswap
push
mov
inc
push
pop
mov
jns
xor
fbld
jmp
lahf
adc
iret
and
xor
fs
rcrb
cmp
lret
inc
int
cmp
in
and
lahf
mov
push
sub
pop
and
and
inc
decb
movsl
loopne
push
test
xchg
js
or
notb
andl
add
hlt
ret
repnz
and
in
pop
gs
cli
mov
enter
idivl
dec
stos
pusha
clc
js
adc
sub
in
movsb
cmc
ss
mov
test
push
clc
lcall
mov
idiv
sbbl
fwait
mov
dec
jns
pop
jnp
outsb
mov
popa
in
inc
fsubp
movsb
jle
inc
or
iret
jmp
mov
mov
jmp
or
xor
movsb
mov
sub
mov
imul
pushf
arpl
mov
in
mov
lret
jo
pop
out
adc
push
push
adc
popl
jmp
jo
cmp
adc
sbb
dec
ret
and
and
aad
jo
mov
cltd
js
lcall
lods
push
pop
cmp
and
jg
xchg
stos
in
daa
jg
jae
jle
les
or
push
fwait
sbb
sar
push
push
test
push
cmp
into
inc
or
in
sbb
pop
ds
repz
pushl
cld
sub
arpl
mov
dec
aad
lret
and
cld
insb
lea
push
and
sub
aas
jge
arpl
lods
cmp
fnstenv
fsubs
nop
js
call
sub
cmp
sarb
push
scas
outsb
int3
adc
cltd
out
xchg
inc
mov
out
xlat
xor
pop
addr16
xor
pop
sahf
xchg
hlt
and
adc
lock
es
sub
test
sahf
stc
jp
mov
aam
ljmp
inc
rol
movsl
je
call
inc
inc
jne
jg
out
into
hlt
mov
addl
xchg
jp
cwtl
xchg
lret
scas
jle
imul
dec
cmpsb
push
push
ret
push
mov
les
sbb
jmp
sti
mov
incb
cwtl
call
inc
sbb
in
cmc
out
dec
movsl
cmp
mov
movsl
sbb
sub
aaa
popf
pop
xchg
xor
lods
hlt
in
fiadds
stos
loop
cld
mov
push
mov
pushf
sbb
lret
fidivl
xor
in
incb
pop
divl
movsl
arpl
pushf
adc
mov
daa
adc
int
je
xchg
shlb
cmp
in
and
dec
out
jle
ret
sbb
cmp
mov
dec
xor
adc
push
sti
stc
xchg
lea
nop
push
fidivl
xchg
sti
je
jmp
dec
fwait
inc
insl
int
insl
dec
stos
gs
mov
ja
xlat
popl
push
stc
sbb
inc
mov
mov
add
push
xor
sbb
jp
sub
mov
fstl
stos
cmpsb
sti
inc
sarb
push
mov
mov
pop
mov
test
inc
in
sub
scas
add
and
sbb
sub
mov
or
stc
lret
js
in
test
in
mov
or
ret
or
sub
insb
adc
mov
clc
lahf
jecxz
aam
xchg
push
cmp
adc
xor
testb
in
clc
out
daa
mov
inc
jno
inc
or
cmp
mov
lds
cmp
loop
xor
sub
fsqrt
es
add
dec
add
xchg
adc
insb
dec
add
lods
imul
pop
mov
cld
imul
cmp
bound
ljmp
mov
jb
jmp
push
cmpsb
mov
add
and
imul
adc
inc
fcmovnb
cltd
xchg
pop
xchg
imul
test
icebp
inc
dec
or
iret
push
push
mov
push
int3
pop
xor
loope
fldl
mov
adc
xor
sbb
fsubp
inc
lock
xor
pop
cmpsl
cmpsl
stc
scas
je
pop
jg
push
xor
cld
push
icebp
movb
add
gs
mov
loopne
adc
into
xchg
hlt
add
or
repz
or
and
cmc
daa
lods
outsl
es
imul
pop
lods
xchg
jl
add
dec
sahf
mov
loope
lret
xchg
cmpsl
sub
mov
mov
testb
outsl
jb
or
xor
pop
cmp
sbb
cs
shll
jnp
dec
addr16
divb
daa
les
fcomip
cwtl
adc
stos
pop
leave
sbb
cmc
mov
inc
scas
inc
mov
push
dec
add
ficompl
enter
sub
push
gs
and
pop
lcall
repnz
sub
mov
mov
cmpsb
cmp
push
pop
fmul
push
aaa
aad
push
daa
mov
mov
in
arpl
lea
bound
inc
lcall
pop
pop
shl
adc
loop
test
loope
popf
cmp
mov
inc
dec
ds
lds
mov
add
mov
mov
lret
bound
mov
pop
mov
insl
lret
sub
inc
sbb
in
fidivrl
lret
sbb
xor
movsb
push
adc
nop
dec
jno
jecxz
mov
repz
push
adc
lds
scas
dec
in
push
pop
or
sub
xchg
loop
int3
repz
lds
xchg
xor
and
into
into
xorl
and
or
addr16
cmp
hlt
push
sbb
push
hlt
imul
inc
mov
loop
jbe
adc
add
xor
test
push
in
xchg
mov
and
cmp
test
jb
loope
stos
loopne
clc
cmp
pop
sub
jl
mov
add
in
sbb
dec
jo
pushl
iret
lret
add
mov
lret
movsb
loopne
in
out
adc
mov
outsl
lods
popf
outsl
lcall
aaa
push
mov
je
mov
sub
or
push
orl
inc
mov
xor
add
outsl
mov
pop
lea
mov
push
mov
gs
pop
push
sub
jns
test
lcall
sub
adc
pop
jns
inc
mov
in
adc
inc
cmpsb
add
lods
add
sub
xchg
jg
xchg
in
push
xchg
enter
lret
stos
dec
sub
gs
mov
jmp
pop
scas
es
sbb
scas
loopne
push
mov
lods
xchg
mov
or
gs
jp
jnp
jae
dec
cmp
ss
int3
fsub
mov
iret
or
jmp
xor
jecxz
dec
movsl
cmp
sti
mov
aam
adcl
inc
push
sbbb
fdivrp
cmc
push
pop
xor
testl
imul
pop
push
or
cltd
push
cmp
rep
dec
cmp
mov
xchg
add
in
lcall
xchg
cmp
push
jge
fsts
leave
int
sti
imul
fwait
inc
pop
jl
dec
lahf
imul
addb
inc
mov
idivl
fcmovb
fcoms
in
xor
dec
cli
xchg
cli
fdivl
dec
das
cmp
xchg
cmpsl
addb
leave
sub
inc
fadds
mov
pop
add
insb
cmp
jne
jbe
jno
faddl
outsb
popa
je
pop
cmp
das
inc
aas
stos
mov
mov
sbb
mov
push
add
aad
sbb
jne
and
dec
sub
xchg
sbb
lods
scas
enter
icebp
or
in
jno
mov
add
xor
jo
sub
inc
mov
cmp
dec
jo
dec
sbb
imul
sub
leave
xor
dec
into
bound
xchg
push
fwait
mov
fdivrl
push
sub
enter
test
fcoms
jl
mov
ret
cs
in
xchg
insb
dec
mov
cmpsb
jo
out
jno
xor
xor
clc
imul
movsb
sbb
adc
pusha
dec
mov
inc
mov
shll
adc
jb
mov
ljmp
out
push
call
leave
mov
cmp
fisubs
inc
sbb
pusha
test
xor
loope
int
mov
mov
sbb
push
cmp
cmp
push
imul
lds
in
insl
jecxz
iret
push
ror
aaa
sahf
std
loop
inc
icebp
imul
pop
popa
lahf
dec
ss
mov
testb
cld
jne
rorl
ds
xor
stos
mov
scas
xor
adc
loopne
into
jecxz
orl
cmp
jmp
jp
jmp
jne
jle
es
or
xchg
pop
test
adc
pop
ret
lods
das
loope
pusha
cmp
aad
inc
test
mov
push
cld
shrb
ret
dec
sbbb
cmpsb
jne
sti
add
cmpsb
cmpsb
outsb
fst
adc
std
fists
mull
mov
nop
inc
enter
or
outsl
sub
test
sbb
mov
push
idivb
in
rol
inc
mov
das
rcll
cmp
insl
out
cmp
push
cld
repz
xchg
mov
out
mov
sbbl
sub
mov
lods
fwait
xchg
jbe
clc
sbb
and
iret
inc
add
out
lods
mov
mov
mov
ret
pushf
pop
pop
jle
dec
aas
and
enter
insb
jmp
pop
out
in
adc
into
mov
xor
cmp
pop
iret
call
scas
xor
pushf
sub
ds
nop
mov
ret
aam
cld
push
aad
pop
xor
or
mov
loopne
inc
arpl
mulb
jbe
popf
xchg
jmp
sbb
cmp
push
push
ljmp
daa
mov
mov
jns
adc
lea
loope
inc
mov
mov
ss
mov
aas
pop
scas
push
in
and
lods
std
popa
cs
mov
adc
jo
daa
jp
insl
enter
jle
sub
xor
in
cmc
and
mov
cwtl
jb
test
jge
jl
push
xchg
add
mov
push
sbb
imul
and
add
xor
mov
dec
ljmp
popa
icebp
cmp
aad
or
xor
sahf
ffreep
movsb
lcall
sub
loop
cwtl
fbstp
clc
mov
add
cli
xor
jg
insb
int3
inc
add
nop
mov
cmp
add
xor
arpl
adc
lret
js
adc
xor
xchg
mov
lock
mov
js
jg
mov
cmp
out
and
cmp
cltd
inc
inc
dec
xor
jbe
out
add
aad
shl
icebp
popa
mov
nop
rcll
dec
jge
in
and
sub
imul
arpl
xor
movsl
pop
mov
add
jge
leave
hlt
cmp
jno
mov
fisubrs
insb
aam
mov
nop
xchg
bound
jp
inc
fadd
xor
ret
repz
in
inc
pop
aas
mov
and
jo
mov
stc
out
mov
mov
push
lds
js
push
fwait
pushf
mov
jl
mov
sbb
dec
addr16
arpl
xchg
mov
sbb
das
cltd
xor
iret
in
adc
dec
mov
push
mov
inc
inc
xchg
add
enter
dec
and
or
lods
push
cmp
inc
inc
mov
mov
leave
dec
rorb
ds
pushf
push
sbb
sub
std
xchg
fs
cmp
mov
iret
iret
ret
dec
scas
inc
push
cmpsl
mov
in
lea
popl
cmpsl
imul
out
add
mov
je
out
xor
inc
add
mov
fsubs
mov
pop
imul
in
loope
aaa
mov
dec
lcall
sar
sbb
push
les
js
mov
aad
cmp
cmc
fidivrs
dec
push
mov
pop
cmp
insl
aam
repnz
pop
xor
dec
dec
mov
in
addl
jge
cmp
adc
xor
popf
test
pop
jmp
mov
cltd
push
sbb
pop
xchg
aas
lods
or
mov
jnp,pn
xor
xor
or
pop
in
mov
insl
mov
push
pop
inc
loope
and
in
mov
xchg
addr16
repnz
inc
lods
sub
push
imul
icebp
ljmp
mov
cltd
dec
fnstenv
ficomps
in
cs
fidivrl
adc
or
mov
test
ja
sarl
dec
mov
imul
sbb
xchg
imul
or
sbb
jb
repnz
mov
les
cld
jno
dec
popa
mov
mov
mov
sub
push
push
mov
push
push
shll
cli
cmp
gs
daa
sahf
sub
xchg
cmp
in
dec
cltd
or
add
sub
fstpt
cs
jecxz
mov
mov
pusha
jae
mov
enter
xchg
lds
loope
push
ret
insl
pop
imul
jae
ret
shll
push
mov
pop
test
pop
sub
js
andl
xor
xchg
push
jne
inc
mov
jnp
jmp
or
cmp
sub
mov
popa
add
data16
lds
les
cmpps
adc
insb
in
and
sbb
mov
mov
std
pushf
adc
xchg
jnp
mov
xorl
push
test
push
and
cli
stos
and
fwait
test
or
push
inc
fstpl
pop
pop
out
xchg
pusha
orb
shlb
fyl2x
jle
add
lcall
fildl
clc
push
add
sbb
call
adc
jecxz
xchg
dec
push
mov
inc
cmpsl
add
or
in
add
cld
popa
push
mov
sarl
fisttpll
mov
inc
cmp
mov
sbb
repnz
xchg
mov
dec
adc
rcrb
dec
sbb
pusha
sub
or
and
xchg
add
test
pop
inc
pop
cmp
jmp
dec
in
sbb
cld
xor
jge
cmp
sub
sbb
xchg
arpl
dec
xchg
popf
adc
push
stos
stos
adc
addr16
loop
je
xchg
cmp
adc
jo
movsl
in
fdivl
push
sbb
and
cld
or
ja
and
mov
test
imul
push
push
repnz
jp
std
add
lahf
out
popa
ja
add
fwait
das
daa
or
mov
mov
orl
inc
data16
sub
xchg
pop
cmp
ret
adc
cmc
mov
cmp
add
push
int3
jns
out
push
es
fsubl
divl
aaa
xchg
inc
lea
movsl
movsb
hlt
fcompl
je
aad
in
jae
insb
shl
aam
cmp
cmp
jmp
pop
daa
jno
lock
dec
xchg
inc
and
or
cmpb
or
scas
adc
add
fcmovnb
mov
push
xchg
ret
imulb
lds
push
pop
notb
dec
movsb
negl
cltd
clc
aam
js
and
enter
sub
aas
mov
add
mov
outsl
imul
fldt
inc
aad
push
adc
inc
jnp
mov
enter
cmc
repz
jl
cmpl
out
or
cld
jne
sub
dec
inc
adc
or
ljmp
mov
out
vmulsd
lcall
pop
fs
cs
cli
pop
outsl
cmp
or
push
cmpsb
push
push
roll
xor
loopne
ljmp
jno
dec
inc
imul
sti
dec
add
mov
mov
or
cmp
dec
pop
xor
lret
cmc
mov
jg
mov
mov
lret
call
imul
sbb
call
mov
cmp
dec
and
jmp
mov
jp
mov
lret
push
add
data16
mov
into
enter
addr16
fucomi
inc
jge
push
mov
inc
adc
adc
jnp
jle
dec
adc
out
push
in
std
mov
out
icebp
mov
mov
jns
call
iret
je
stos
inc
mov
arpl
loope
lea
dec
cmp
add
stos
sbb
leave
adc
lahf
pop
mov
or
in
push
mov
loope
pusha
fs
add
fs
pop
stos
cmp
insl
vcmpsd
pop
inc
pushf
fs
pop
mov
in
push
adc
mov
adc
push
aas
insl
add
or
dec
mov
test
or
mov
aam
inc
in
mov
push
adc
jne
dec
cmp
mov
adc
out
jne
adc
repz
jnp
roll
mov
das
popa
pop
mov
push
in
sub
sbb
mov
mov
jl
ds
clts
fnsave
lds
cmp
and
fcmovne
jmp
aaa
call
nop
cmp
xchg
sbb
insl
or
jno
cmp
sub
icebp
or
dec
xchg
out
subl
xor
test
jecxz
inc
cltd
lods
mov
adc
push
loope
cmp
and
stos
bound
pop
add
sahf
or
cs
mov
push
test
or
xor
add
adc
jae
pusha
lods
pop
test
xchg
sbb
pop
jp
adc
popa
loop
push
repz
push
dec
lods
pop
fldt
test
imulb
and
adc
mov
sub
das
pop
or
aaa
mov
movsl
sub
cmpsb
add
std
mov
mov
push
jnp
push
mov
add
mov
pop
and
mov
sarb
out
fnstsw
jecxz
icebp
je
dec
jle
fiaddl
cmp
out
shlb
jmp
ds
call
xchg
repnz
rcrl
sub
adc
pop
push
lds
roll
jp
push
sub
bound
xchg
scas
aad
fwait
mov
addr16
nop
pop
lret
adc
jne
cmpsl
sahf
insl
push
sbb
lods
lods
cwtl
sbb
hlt
leave
cmp
ret
mov
xchg
mov
add
jae
sti
jbe
inc
adc
add
pop
inc
add
push
pop
pusha
test
sub
sub
xchg
scas
cld
fimuls
sub
xchg
pop
sbb
or
mov
aam
scas
mov
add
orl
jmp
aam
addr16
fmuls
pop
lods
in
sbb
mov
cmpsb
rorb
inc
add
arpl
jmp
dec
jne
cmc
pushf
lods
jge
cmp
cmp
ljmp
fwait
push
imul
lock
mov
inc
cltd
pop
gs
sti
popf
cmp
ret
cmpsb
jg
movsl
dec
rolb
add
cwtl
fsubs
add
cwtl
cmpsb
pushf
dec
stos
jno
daa
pushf
inc
lret
repz
stc
jp
lock
pop
or
adc
push
xor
cmpsl
int
sti
xor
and
add
sbb
push
loope
inc
pop
push
lea
pushf
add
sahf
inc
rolb
jmp
xor
jb
adc
je
or
fisubs
scas
fucomp
out
movsl
ret
les
addr16
and
leave
pop
cwtl
lret
imul
mov
popa
cmp
push
ljmp
cwtl
jnp
inc
cmp
test
push
sub
js
inc
xchg
xor
clc
dec
mov
aad
fldenv
pop
cwtl
clc
mov
ret
pop
aas
sbb
dec
mov
xchg
cmpsl
push
fdivrs
loope
mov
fwait
jp
out
and
ret
test
sub
cwtl
loope
pop
dec
cli
xchg
xchg
imull
mulb
push
and
push
and
mov
ja
aam
rorl
ret
lods
xor
add
xchg
aas
out
mov
sbb
fs
fdivl
outsl
jne
rclb
inc
push
rcrl
les
sub
ret
cmp
test
out
push
mov
lea
xchg
cmp
inc
es
enter
xchg
call
mov
mov
adc
push
stc
or
das
loopne
or
xchg
inc
cmp
pop
fists
sub
gs
imull
pop
js
xchg
fistpl
bound
dec
mov
jl
sahf
and
mov
inc
mov
xchg
lret
arpl
pop
push
adc
sbb
ret
ss
xor
ret
pop
aas
or
sbb
or
and
ja
pop
popf
fistps
test
out
lds
jbe
mov
imul
in
lret
inc
and
cmpsl
dec
or
nop
sub
fs
mov
inc
bound
sbb
movsl
jns
add
mov
inc
push
push
sbb
call
inc
pop
int
enter
enter
and
xchg
add
mov
movsb
cmp
iret
mov
mov
mov
lods
sbb
je
cmpsl
ja
stos
add
cwtl
test
xchg
inc
cmp
in
repz
rcl
lods
popa
xchg
lods
out
repnz
and
inc
push
inc
pusha
xchg
sub
insb
test
jecxz
mov
cmovae
ljmp
mov
outsl
ret
fiadds
dec
inc
cmp
push
ds
pop
clc
dec
leave
cltd
jno
adc
lahf
mov
jae,pt
ljmp
sbb
cltd
popf
imul
cld
daa
les
dec
rorb
jb
add
and
mov
popf
pop
sub
stos
vphsubwd
inc
rcrl
js
mov
xor
dec
jo
jge
adc
mov
cmp
sub
adc
inc
xor
dec
dec
jno
mov
inc
ds
loop
mov
jae
xor
repnz
cltd
adc
dec
pop
popf
and
push
inc
mov
mov
xchg
xchg
mov
pop
cmc
jl
pop
dec
fcompl
dec
fsubs
dec
fnstsw
jo
pop
out
loope
push
lods
sub
daa
bound
and
aaa
pushf
bnd
lds
or
loope
jne
xor
outsl
sbb
pop
mov
adc
pop
sbb
test
scas
mov
dec
in
mov
leave
lock
cwtl
aam
in
test
mov
cmc
jle
shrb
fwait
jbe
xor
mov
scas
inc
and
and
xchg
clc
push
lret
cs
fistl
rcrb
inc
inc
outsb
shrb
lods
inc
fs
lcall
mov
sbb
jecxz
jg
aaa
sbb
mov
add
into
fisubrs
stos
sbb
mov
inc
comiss
pushf
lds
cmp
mov
lcall
or
out
ss
push
mov
mov
scas
pop
xor
or
mov
shrl
push
inc
js
out
push
and
xchg
dec
xlat
in
mov
stos
repz
repnz
adc
in
xlat
arpl
sub
xchg
lds
enter
scas
sub
out
cmp
jbe
repnz
mov
sub
shrl
xchg
addr16
les
out
xchg
cmpsl
fucomi
sbb
mov
std
push
jb
sti
nop
cmpsl
adc
movsl
pushf
int
mov
jge
fnstsw
dec
fnstsw
jp
leave
and
xor
cld
call
movsb
subb
clc
test
out
mov
push
lea
add
lds
cld
shrl
jb
cmp
sub
lods
stos
sub
pop
adc
std
and
jge
sbb
push
cmp
int3
sarb
std
and
inc
neg
insl
sub
test
adc
lret
movsl
sbb
and
mov
sub
cmpsb
clc
ljmp
test
sbb
mov
les
xor
in
push
pop
add
cwtl
xorl
and
jmp
ret
lret
mov
mov
push
ljmp
inc
sti
xchg
pushf
add
sti
shr
imul
inc
lahf
inc
jae
fwait
cwtl
or
outsl
in
adc
loop
aaa
jp
push
push
fwait
jp
arpl
jge
mov
outsl
test
sahf
inc
mov
push
adc
inc
add
mov
xchg
pop
fldt
nop
adc
lock
orl
pmaddwd
add
ja
jp
or
cwtl
arpl
mov
adc
adcb
movsl
xchg
nop
lcall
pop
or
repnz
out
sti
cld
jle
ret
xor
cmc
lea
inc
ret
xor
shrl
jns
fidivrs
inc
pop
push
add
or
les
push
cmp
fisubs
push
int3
cmp
out
icebp
xchg
insl
or
loope
das
jecxz
mov
mov
insl
mov
cmp
push
pop
gs
push
mov
fwait
cmp
jbe
hlt
cwtl
in
inc
pop
jbe
inc
adc
out
rorb
dec
call
pop
jo
ffree
or
cli
lcall
and
dec
dec
and
mov
sahf
push
fisubrl
jle
cmpsl
pop
push
mov
xchg
pop
cmc
aam
jbe
jecxz
adc
es
adc
lods
lret
jnp
inc
jns
adc
mov
jle
test
xchg
das
ror
and
movsl
and
arpl
cmp
jmp
popa
scas
subl
jbe
lcall
sbb
dec
push
or
add
push
ljmp
xor
test
push
js
cltd
roll
je
lret
cmp
loope
jne
movsl
mov
mov
sbb
jnp
into
nop
adc
mov
iret
jne
data16
xchg
loopne
mov
cmp
out
es
in
add
push
cmp
rcll
outsl
xchg
cli
aas
jo
adc
dec
in
add
adc
mov
in
das
sbb
aaa
mov
stos
repnz
mov
popf
xor
loopne
or
js
xor
subps
jns
mov
bound
in
pcmpgtd
clc
sbb
dec
movsb
dec
mov
jb
fdivrp
adc
daa
in
mov
pop
gs
jmp
jecxz
dec
or
xlat
insl
xchg
rsqrtps
shl
std
fs
jbe
andb
xchg
pusha
add
repz
mov
jb
or
jb
cmpsl
pop
jecxz
jl
pop
sub
addr16
out
mov
dec
pop
mov
aam
pop
insb
movsb
stc
jmp
mov
pusha
jo
fmull
loope
adc
outsb
std
movsl
push
and
test
daa
mov
rcrb
pop
and
mov
add
mov
pusha
outsb
inc
cltd
pop
mov
add
ja
fucom
pop
inc
cwtl
push
sub
push
and
cs
adc
mov
pushf
cli
xchg
or
scas
inc
pop
adc
test
pop
mov
into
xchg
jno
js
aad
xor
cwtl
cmpsb
orb
lock
push
js
popf
jmp
cmp
xchg
gs
inc
sub
bound
dec
add
sti
jbe
lcall
loope
mov
daa
mov
cmp
push
pop
xor
cmp
fdivs
jle
popf
testb
stc
pop
jo
sbb
ja
dec
mov
add
jge
add
inc
test
adc
sub
insb
test
xchg
and
xor
mov
shlb
fsubrs
ja
pop
cmp
jbe
cmp
xor
jb
dec
and
ret
inc
dec
cmp
jecxz
aaa
leave
imul
scas
out
pop
inc
gs
fsubrl
pop
push
sbb
cmp
push
ss
mov
add
jbe
or
or
push
divb
fsubrl
dec
imul
imul
sbb
and
scas
xor
or
jmp
sub
sbb
mov
pop
fsubs
not
aaa
mov
mov
cmc
push
add
popa
mov
push
sti
mov
push
loop
push
imul
jle
push
pop
popf
rcll
lds
and
sahf
pop
dec
cmp
stos
pop
pusha
mov
mov
lahf
dec
mov
adc
mov
jns
and
push
jne
push
xchg
inc
repz
dec
cmp
mov
or
je
mov
rclb
fwait
std
scas
mov
or
mov
lods
mov
ficoml
xchg
ret
pop
lea
mov
test
shll
decl
arpl
int3
fdivl
sbb
pop
pop
mov
fisttpl
xchg
into
and
movzwl
xchg
mov
dec
mov
div
ffreep
fscale
pop
cmp
sub
dec
xor
stos
sti
sub
mov
lcall
fldenv
xchg
and
jecxz
pop
mov
inc
stos
add
jns
inc
sub
cli
jmp
adcb
push
andl
rol
sub
sub
in
or
jg
mov
das
sub
jno
pop
add
into
imul
push
mov
nop
mov
dec
pop
stos
rcll
or
in
aad
fwait
mov
repnz
sub
and
xor
push
popf
ljmp
je
fsubp
pop
dec
inc
adcl
or
push
lods
jae
pop
insl
test
xchg
fbld
test
in
jecxz
aaa
std
fists
insb
cmp
pop
es
adc
push
lds
cmpb
sub
inc
leave
popa
pop
pop
push
cmp
cmp
cmp
fisttps
push
dec
sbb
inc
pop
sub
sbb
push
jle
ret
pop
dec
inc
mov
jecxz
lock
inc
daa
sbb
movsb
dec
xor
nop
push
int3
adc
into
jmp
fistl
dec
sti
or
daa
sub
mov
xor
push
mov
push
lods
inc
imul
push
cwtl
into
jo
aam
popl
gs
xchg
ljmp
mov
repz
sub
repnz
mov
adc
popa
sub
xor
mov
sbb
inc
jecxz
adc
and
ret
icebp
hlt
sbb
or
in
and
mov
mov
mov
mov
scas
xor
rol
in
adc
iret
repz
mov
popf
push
imulb
cltd
popf
andl
mov
cmp
add
dec
xchg
and
add
jle
pop
pop
inc
neg
xor
cli
or
push
in
mov
and
cmpsl
bound
icebp
insb
lcall
dec
xor
popa
push
mov
dec
jle
lods
push
mov
sbb
xchg
push
jne
push
mov
fdivrl
ljmp
imul
stc
xor
xor
jbe
or
fxam
sti
mov
jge
cmp
sbb
pop
sub
lock
mov
push
pop
mov
daa
dec
jl
add
stos
outsb
push
cmp
addr16
lock
insb
pmaxsw
bound
loopne
das
xchg
stc
aad
repnz
mov
fmuls
mov
pushl
inc
pusha
xchg
call
jmp
insb
push
ljmp
stos
aas
cmpb
js
inc
movb
das
in
xor
fstpt
mov
pop
pop
cmpsb
movl
pop
out
test
lcall
loop
jae
repz
xor
fsubl
push
imul
mov
mov
xchg
insb
clc
push
mov
and
ffreep
xchg
fdivrl
pop
aam
xor
mov
out
pop
mov
out
mov
jge
xchg
and
sahf
das
xor
out
jne
out
scas
lcall
xor
and
xlat
sbb
mov
lock
pop
cmc
das
int3
insb
stos
lahf
pusha
and
cs
jae
xchg
fst
lds
pusha
xchg
test
ret
mov
sbb
insl
movsl
cmp
sti
mov
jg
outsb
mov
test
dec
loope
stos
cmp
aaa
sbb
fsubrs
movsb
les
pop
adc
ds
push
jmp
fcompl
xchg
fldt
xor
mov
dec
sbb
aaa
cs
or
push
cmp
nop
lea
mov
addb
iret
maskmovq
idivl
idivb
out
imul
in
sub
sbb
cltd
out
aas
into
ja
dec
sbb
ds
dec
xchg
adc
outsb
xchg
xchg
pop
movsl
ljmp
adc
scas
sub
push
dec
pop
xchg
std
popa
or
mov
or
xchg
dec
xchg
mov
addl
mov
dec
repz
daa
dec
fwait
inc
cmp
fucom
test
bound
pop
movsb
jg
mov
stos
sbb
push
push
fwait
fwait
or
xchg
bound
sbb
pushf
jmp
pop
cli
xor
adc
lret
xor
insb
mov
dec
mov
out
loopne
scas
add
rcrl
std
icebp
xchg
inc
mov
in
cld
scas
in
stc
pop
mov
xor
dec
movsb
mov
mov
or
cmp
xchg
repnz
inc
or
and
cmp
ret
icebp
lds
addr16
stc
jb
int
sbb
jns
mov
bound
stos
sbb
cmp
pop
scas
sbb
mov
imul
adc
adc
push
ret
push
mov
std
sbb
ja
push
cmpsl
cmp
sbb
pop
hlt
pop
nop
or
in
cltd
nop
jg
aad
aad
out
and
adc
and
decb
int3
cmp
ja
xchg
imul
scas
int3
mov
push
xchg
fwait
sbb
or
pop
pop
sbb
add
mov
int
cmpsb
in
cmc
pop
test
mov
adc
test
scas
ds
shrl
xchg
arpl
jnp
ss
shlb
add
loopne
add
popf
push
shr
ja
push
loope
imul
add
or
pop
adc
out
pop
xchg
ljmp
cmp
in
aas
jb
aaa
bound
add
mov
ds
mov
xchg
mov
dec
jbe
mov
je
xchg
inc
and
ret
adc
or
stos
push
mov
add
test
aas
dec
push
call
in
dec
or
jo
movsl
std
jnp
xchg
push
not
sahf
aam
xor
aam
push
and
incb
lods
sub
push
push
scas
add
les
sub
or
je
jle
lret
aaa
adcl
mov
lcall
xchg
xchg
popf
andb
enter
push
xor
pop
fs
push
pop
mov
rol
xor
pop
dec
in
jle
call
loop
jmp
push
adc
jo
sub
loop
cltd
in
and
iret
out
ret
leave
inc
loop
sub
loop
loope
pop
and
sbb
imul
jecxz
dec
adc
sub
cltd
fisubs
xchg
mov
fiadds
inc
movl
lahf
dec
xor
andl
xor
hlt
ds
cltd
insb
dec
add
dec
cmp
add
xchg
in
je
add
mov
ljmp
mov
ficoml
mov
sub
jae
in
or
mov
cwtl
fs
fwait
inc
or
mov
movl
hlt
dec
rolb
pop
xor
adc
mov
das
cmpsl
inc
fldcw
shl
int3
cmp
bound
in
push
mov
repz
push
xchg
mov
jb
mov
daa
mov
scas
mov
pop
jg
cmpsl
jnp
add
test
pop
cmpsb
sub
fcmovu
jecxz
aas
out
test
cs
sbbb
mov
pop
mov
jbe
aam
xor
mov
pop
ja
jge
idivb
mov
es
push
loopne
pusha
fldl
push
test
std
sub
add
imul
imul
insb
lahf
add
xchg
xchg
inc
push
cmpsl
stos
testl
call
pop
mov
mov
sbb
sbb
gs
xorb
lods
popf
sub
sbbb
daa
imul
dec
and
popa
insb
add
mov
jns
ljmp
push
push
clc
jl
daa
dec
xchg
int3
jmp
jmp
push
dec
inc
outsl
std
gs
incb
in
sahf
xchg
sarl
or
imul
scas
loop
test
mov
into
xor
xchg
add
pop
mov
hlt
push
cmp
icebp
sbb
jb
cmp
lret
add
add
push
xorl
incb
mov
ja
xor
fists
and
scas
cli
and
ja
mov
lcall
aam
inc
push
and
xor
nop
xor
cmp
pop
lds
lods
jge
into
shrl
call
sub
cmp
mov
mov
cli
popa
cmpsb
ljmp
mov
int
cmp
fnsave
push
ret
jae
fcmovnb
jnp
rorb
test
pop
xor
js
mov
sti
jmp
js
mov
cmp
loope
add
adc
mov
daa
das
mov
jno
mov
xchg
mov
ret
sbb
fwait
xor
jnp
jmp
push
and
les
daa
jb
push
sub
enter
in
pusha
and
pop
push
sbb
int3
int3
enter
inc
lret
nop
pop
push
mov
lods
loopne
add
xchg
and
jl
ss
roll
cs
pop
incl
scas
lret
xchg
sbb
and
and
or
in
dec
fldt
xor
add
notb
push
jecxz
out
test
pop
fisttps
gs
dec
cmpsb
push
sbb
out
xchg
push
cli
popa
inc
jl
adc
push
scas
push
pop
and
jecxz
mov
cs
rorb
addb
rorb
or
inc
mov
pop
sbb
shlb
scas
jne
push
xchg
jmp
setae
std
push
xchg
dec
scas
push
das
dec
and
mov
jbe
js
aam
mov
sub
arpl
dec
bound
ja
repnz
mov
loopne
aam
incb
movsl
xor
mov
daa
pop
dec
dec
adc
dec
xchg
push
dec
jp
and
mov
cmp
mov
jmp
jecxz
cltd
dec
cmp
stc
arpl
ja
add
inc
decb
leave
iret
stc
pusha
mov
and
dec
mov
jno
or
jo
mov
pop
ss
ret
and
nop
adc
cmp
sbb
iret
les
imull
jp
mov
iret
mov
mov
and
aam
ss
xor
dec
jmp
xor
cltd
rclb
imul
mov
sub
jecxz
cmp
dec
scas
clc
or
icebp
in
add
aam
mov
out
dec
mov
cli
mov
sub
adc
dec
es
lret
lods
cmpsb
icebp
out
mov
ja
push
adc
das
call
xor
add
and
lret
pop
imul
push
fadds
xor
xchg
inc
and
imul
dec
nop
or
cmp
insb
repz
sub
iret
mov
add
repnz
outsb
test
mov
rclb
push
shrb
cmp
push
test
jbe
jbe
mov
paddusb
add
and
ret
push
xor
incb
orb
mov
mov
test
dec
add
hlt
jmp
and
add
out
ret
pop
adc
fwait
jo
inc
iret
js
enter
inc
add
dec
xchg
adc
add
leave
popa
loopne
adc
fdivr
repz
jle
imul
lcall
lods
ret
jle
pop
call
xchg
sahf
xchg
dec
and
or
loopne
pop
xchg
shll
push
shl
xchg
cmp
push
jle
and
xchg
outsl
mov
mov
pop
outsl
cmp
or
adc
mov
cmp
js
jbe
pop
push
cmp
add
mov
mov
roll
add
push
in
dec
adcb
adc
add
lahf
frstor
ss
xlat
push
push
sub
mov
dec
shl
inc
inc
repnz
mov
repnz
ret
dec
cmp
jne
movsl
add
mov
xor
add
xor
pop
xchg
je
inc
push
pop
pop
or
add
ficomps
popf
wrmsr
out
mov
sub
pop
and
push
cmp
lea
shrl
pop
mov
adc
adc
cmp
push
mov
mov
mov
push
popa
mov
ja
sti
sbbl
jns
aam
pusha
mov
dec
fwait
sbb
lahf
into
jno
mov
lods
pop
cmp
or
stc
and
sub
pop
cmp
pushf
orb
cld
int3
adc
and
frstor
sbb
sub
std
mov
test
mov
ss
in
lock
jmp
js
xor
test
out
xchg
pop
ret
aas
mov
lods
dec
in
adc
idivl
dec
imul
les
mov
jne
stos
aaa
cwtl
cmp
insb
push
mov
hlt
lahf
ret
jge
push
movsb
cwtl
lock
lcall
dec
lock
outsl
fidivs
or
inc
enter
mov
fst
call
subb
push
add
nop
leave
inc
sbb
jns
loop
lock
xor
movaps
jle
push
push
mov
out
jnp
je
xchg
xchg
and
int
mov
sbb
pop
outsb
jg
imul
cmp
sub
pusha
scas
cwtl
mulb
xchg
xlat
jns
mov
and
push
sub
ror
pop
cltd
add
test
in
test
push
cmp
loop
into
jne
movsl
in
icebp
mov
nop
xor
clc
add
xchg
les
int3
enter
jl
jbe
es
add
sub
jno
push
inc
sahf
je
mov
ret
inc
mov
fstps
jge
mov
cmp
push
mov
and
mov
loop
aad
int
pop
loopne
sbb
jb
ret
fs
add
dec
notl
cmp
jge
stc
cltd
movhps
xor
add
mov
jle
push
push
mov
jg
or
pusha
add
sub
sarb
out
inc
fistpl
xlat
int
test
aad
ds
pop
or
cmp
cmc
insb
fs
sarb
sti
add
das
push
cmp
add
xor
divl
adc
divb
les
clc
mov
mov
ret
aad
sub
rcrl
or
or
fisubrs
cmpsl
roll
xor
enter
sbb
lock
fwait
inc
sub
adcb
jl
mov
aad
outsb
movsb
sbb
movsb
dec
loope
xor
icebp
push
rcrl
mov
inc
les
jbe
pop
notb
movl
popf
cmc
xor
out
aam
mov
cmp
sbbb
outsl
data16
cld
xorl
xlat
lods
xchg
fcompl
sub
mov
scas
hlt
xor
jg
repnz
nop
das
mov
sub
in
mov
cmp
jno
xchg
aas
pop
jge
sbb
inc
dec
hlt
sti
nop
adc
mov
sbbl
mov
dec
sub
jb
xchg
lods
or
cmp
sahf
in
push
and
dec
in
push
xor
imulb
mov
je
negb
call
in
inc
sbb
lock
adc
imul
xlat
adc
clc
dec
adc
and
dec
into
jecxz
dec
add
inc
mov
rcrb
icebp
or
ror
push
stc
aas
loopne
mov
inc
movsl
cwtl
movsl
clc
and
imul
xchg
pusha
jbe
sub
test
and
imul
arpl
sub
pop
mov
adc
cwtl
fisttps
loopne
ds
adc
nop
dec
cli
negb
rolb
add
ss
sbb
out
jbe
push
dec
cmpsb
xchg
std
mov
dec
mov
sbb
inc
sarb
push
movsb
xor
jge
pusha
jg
hlt
xor
popa
mov
dec
pop
push
inc
stos
cmp
sahf
jle
incl
cmp
frstor
xchg
outsl
inc
ret
sbb
sub
mov
xor
add
in
xor
adc
xchg
push
mov
in
lcall
mov
popf
cmp
xor
sbb
inc
add
popa
inc
adc
mov
loop
test
xchg
cmp
cmp
mov
and
xchg
fisubl
lret
inc
mov
sbb
es
dec
push
int
mov
xchg
nop
loop
dec
dec
mov
pop
lods
cmpb
imul
cld
movsb
xchg
pop
cli
jle
jae
mov
cmp
push
out
inc
mov
xor
les
jo
aas
sbb
mov
cmp
sbb
adc
sub
test
lcall
call
leave
sahf
xor
jo
jae
mov
arpl
data16
popf
dec
testl
in
fdivr
xor
mov
push
mov
out
cli
rcr
xchg
add
or
jp,pn
out
imulb
out
lret
dec
push
mov
xor
and
lahf
mov
loope
repz
xor
mov
adc
in
xchg
repnz
popa
mov
cmp
std
ret
xor
test
mov
sbb
lcall
mov
hlt
ret
sub
push
rclb
cmc
push
lret
xor
cmpsb
xlat
push
cmovo
int3
xor
imul
daa
lcall
insl
jmp
icebp
test
div
sub
clc
mov
sub
shrl
pop
adc
inc
cmp
repz
sub
add
mov
pop
xchg
lcall
mov
sub
xchg
and
mov
in
push
cmp
addl
mov
pop
test
les
insb
jne
and
cltd
int
fprem
mov
lods
int3
rolb
cmp
repz
xchg
and
stos
std
iret
sub
pop
or
out
or
pop
in
dec
rcrl
arpl
leave
xchg
push
lcall
mov
sbb
and
pushf
and
out
sub
xor
jmp
stos
mov
dec
iret
testl
mulb
movsb
or
lods
cs
in
test
cmp
cmp
out
imul
popa
or
dec
call
out
mov
adc
sub
and
mov
jbe
stc
ss
adcl
stos
jae
dec
lcall
shr
ret
cltd
lea
jne
xlat
iret
push
in
mov
dec
add
sub
inc
pop
pop
repnz
mov
scas
clc
push
mov
cwtl
das
sti
adc
jl
pop
inc
mov
call
xor
mov
test
mov
push
jbe
xchg
mov
es
and
xchg
add
jae
xchg
push
pop
cmp
das
pop
mov
push
sub
outsl
jl,pn
xchg
scas
jge
dec
scas
lcall
lds
addr16
mov
js
xchg
jns
push
sti
mov
jo
cmp
stc
jnp
in
rcrl
mov
adc
push
cli
or
pop
inc
enter
cltd
push
lock
jp
es
cltd
int3
cmp
add
decb
cmpsl
push
cmp
loopne
jbe
pop
cld
adcl
adc
sub
ljmp
mov
ja
rolb
push
mov
push
cmpsl
popa
pop
decb
jb
adc
cmp
cmpsb
push
mov
adc
and
xlat
mov
aam
je
inc
mov
addr16
xchg
inc
add
cli
mov
sbb
ror
jnp
mov
pop
shlb
insb
sub
insb
mov
stc
arpl
mov
insl
popa
lret
out
mov
mov
lods
ret
test
jle
test
mov
mov
xchg
scas
mov
insb
ret
mov
addr16
subb
ficoml
adc
stc
sub
hlt
cmp
cmp
add
divb
pop
xchg
push
mov
pushf
mov
pop
std
sub
repz
jmp
js
or
xchg
test
in
sysret
xchg
ljmp
inc
imul
xor
xor
fisubl
int3
push
xor
mov
xchg
mov
sbb
test
push
jmp
adc
push
mov
nop
inc
lock
cs
ljmp
fistl
test
push
out
sbbb
int3
xchg
dec
add
fs
and
call
xchg
in
cmp
aaa
pushf
cmp
test
and
dec
push
xchg
dec
ds
jns
andb
or
mov
fstpt
lea
mov
adc
fistpll
jb
inc
xor
push
mov
sbbl
mov
inc
outsb
sub
cltd
hlt
les
rolb
add
rolb
jmp
in
mov
shll
push
sbb
in
cmp
test
fadds
shlb
xor
adc
mov
jns
jle
das
mov
fsub
stos
adc
xchg
dec
inc
push
cltd
pop
ret
push
inc
lret
push
ljmp
pushf
or
inc
leave
jecxz
xchg
stos
sub
mov
jns
jmp
push
insb
xlat
jmp
jge
ret
xchg
cmp
push
ss
push
push
loope
xchg
cli
xor
mov
adc
push
fwait
incl
mov
mov
jnp
or
jmp
xchg
mov
icebp
jns
ret
aam
xchg
adc
mov
call
xchg
das
iret
imul
addl
imul
mov
jno
fsubl
hlt
popa
jge
sbb
repnz
push
mov
jp
dec
add
test
xchg
loopne
clc
jle
lret
sbb
orb
or
jae
ret
mov
jecxz
jnp
popw
mov
cmp
xorl
outsl
cs
rcr
mov
out
stos
cmc
push
push
adc
dec
push
xor
icebp
dec
lods
dec
xchg
jns
leave
ljmp
jns
push
push
jl
pop
pop
lahf
mov
test
pusha
adc
aam
cmp
iret
jg
imul
and
push
jo
push
ss
jg
sarb
mov
fptan
ss
and
stos
mov
enter
stc
inc
mov
or
es
cld
adc
test
imul
test
out
dec
sbb
imul
popa
push
xchg
add
pop
aad
cltd
ja
es
call
xor
mov
ret
push
out
ljmp
mov
push
cli
movq
xorl
incl
and
jl
jae
push
sub
sbb
repz
cmp
pop
push
shrb
sbb
inc
xchg
test
adc
insl
sub
cs
jne
and
jecxz
lods
stc
es
mov
mov
mov
pop
sbb
cmc
and
pop
pop
test
add
jle
mov
pop
les
sbb
push
iret
jns
jge
sub
ficoms
and
daa
add
fs
popa
test
mov
push
mov
mov
xchg
in
push
mov
insl
movsl
icebp
add
cmp
mov
push
mov
cmc
xchg
fdivrs
out
scas
scas
add
cmpsb
fnsave
mov
sbb
sbb
push
xor
and
scas
popf
sbb
sub
not
je
sti
jmp
jge
inc
mov
cmc
addr16
jb
rorb
sbb
mov
inc
lds
pop
push
mov
in
gs
sub
pop
rcll
push
int3
adc
mov
and
aas
pop
pop
xchg
sbb
jl
sbb
push
lret
xchg
inc
lea
xor
scas
push
loop
stc
push
sti
loop
sbb
mov
stos
test
jle
fsubs
mov
inc
push
xor
sub
or
faddl
inc
negl
lret
cltd
sbb
popf
sbb
cmp
xchg
sub
dec
xor
sahf
hlt
xchg
push
lret
test
sti
push
xorl
icebp
fsubrp
popa
pusha
lods
out
and
iret
pusha
lcall
decb
dec
pop
outsl
jnp
inc
dec
iret
inc
mov
test
xor
and
in
mov
stc
loopne
leave
stos
insb
mulb
lods
inc
and
int
inc
fldt
and
mov
cltd
repnz
and
jmp
sub
aaa
mov
sti
xor
xchg
paddusb
cmp
mov
cmpsl
ds
sbb
icebp
xchg
ret
cmp
pop
scas
inc
sbb
xchg
and
push
mov
imul
aaa
cwtl
lods
outsb
xor
dec
mov
int3
mov
sahf
sub
insb
jae
jg
xchg
dec
loopne
pop
add
sahf
mull
out
add
or
and
sub
jl
ret
fsubrs
mov
lea
mov
mov
pop
xchg
mov
repnz
out
data16
cmp
cmp
notb
add
prefetchw
xchg
add
mov
pop
jno
lcall
sub
xchg
fists
int
mov
shr
adcl
cltd
xchg
iret
cld
sbb
sub
out
iret
lcall
push
push
mov
sbb
in
add
ret
cmp
test
sti
dec
xchg
pushf
xchg
sbb
xlat
push
lcall
push
dec
sbb
mov
xchg
cmp
int3
xor
xor
jle
sti
push
in
xor
jp
pop
out
in
sub
lahf
repnz
xor
imul
loop
popa
cmp
rep
inc
dec
mov
inc
and
ss
outsl
popa
cltd
lea
fs
das
shlb
sub
add
pop
mov
add
bound
adc
lret
mov
pop
jo
mov
fdivl
cmp
mov
lcall
popf
sub
je
cli
lea
xchg
sub
inc
call
mov
and
insl
dec
testl
aam
psubw
popf
insb
dec
jecxz
push
add
sub
scas
lcall
ror
in
jbe
iret
stos
mov
mov
pop
sbb
push
push
test
xchg
loopne
push
sub
push
adc
jg
nop
leave
ret
sub
hlt
inc
lcall
or
jb
scas
lahf
pop
fs
jb
add
sahf
dec
mov
bound
pushf
pusha
imul
xchg
push
mov
fldenv
or
pop
scas
sti
lock
popf
xchg
fdiv
mov
insl
jle
push
idivb
scas
cmp
push
mulb
jbe
or
sarl
aam
xlat
push
rcrb
add
sbb
jbe
lock
push
mov
cmp
push
mov
loop
sub
jl
nop
int
aam
dec
iret
xor
mov
out
mov
and
or
js
mov
hlt
shl
aas
sti
dec
pop
push
sbb
shr
jae
ret
mov
xchg
cmpsl
mov
test
fcoms
scas
dec
or
mov
mov
xchg
scas
lock
cmp
ret
into
mov
fld
lahf
cmc
xchg
mov
adc
mov
fsubrl
mov
dec
daa
dec
jnp
insl
push
mov
fbstp
mov
es
jge
push
out
or
pop
out
ret
fiadds
dec
xchg
adc
fwait
push
sbbb
or
idivl
inc
add
xor
cmp
enter
pop
fiadds
jp
sub
xor
orl
mov
decb
pop
jmp
xlat
ss
cmp
mov
xor
es
adc
into
xchg
repz
jno
pop
and
mov
jb
jp
dec
fucomi
sub
or
fistps
and
ret
ret
push
or
mov
add
mov
cmp
ds
add
je
add
mov
sbb
lds
repnz
sub
out
mov
cmc
insb
outsb
hlt
jg
in
mov
nop
sub
std
repz
ljmp
outsl
enter
ficoml
pop
push
repnz
xor
out
cmp
pop
sub
js
std
mov
imul
mov
lret
and
inc
fadds
mov
pop
clc
or
pushf
stos
push
and
lea
push
sub
andb
call
imull
mov
andl
xor
popa
lcall
sbb
and
jle
push
testb
mov
xchg
outsl
movb
cmp
inc
xchg
jb
in
ljmp
imul
lret
mov
sub
jno
mov
push
sbb
lcall
dec
stos
sbb
aam
sahf
iret
loop
pop
push
mov
stc
dec
dec
out
and
xchg
enter
daa
aas
cmc
sbb
outsb
xchg
ljmp
push
lock
cltd
xor
mov
cltd
fstpl
out
xchg
fisubrl
lods
ffree
fisubs
sbb
out
and
fildll
or
dec
loopne
mov
std
lea
scas
jns
movsb
xor
mov
adc
mov
or
mov
imul
inc
inc
ret
dec
xor
adc
adc
lods
int
loopne
cmpsl
inc
sub
lods
pop
leave
sub
insl
push
add
sti
iret
push
cld
clc
xorl
add
fsubs
test
push
out
sub
aaa
test
mov
and
pop
mov
jmp
cmp
push
subb
fsubp
or
push
int
pop
daa
cltd
inc
mov
pop
popf
sbb
xchg
in
xchg
mov
repz
push
test
test
and
push
jbe
pop
in
sub
orl
xor
imul
pop
sub
jo
out
fstpt
jae
aas
outsl
or
jg
inc
jnp
aas
test
mov
cmpl
pop
rorl
lea
sbb
cmp
ja
outsl
push
mov
jnp
cld
fldl
insb
push
jne
imul
push
cs
mov
mov
mov
sbb
push
jne
or
test
mov
add
test
fildll
int
pop
iret
inc
lock
subl
test
dec
pop
flds
clc
and
in
mov
mov
mov
out
adc
clc
dec
andl
js
aaa
xchg
and
inc
iret
sub
jmp
aam
inc
insl
loope
out
test
cmc
sub
xchg
push
xchg
aaa
inc
out
pop
sub
jae
push
cmp
pop
enter
cmc
loope,pt
jmp
xor
aaa
and
in
stc
mov
test
inc
adc
jae
icebp
adc
lods
mov
and
mov
mov
xchg
mov
fnstsw
xchg
add
xchg
pop
inc
adc
mov
cltd
shlb
push
or
xchg
dec
xchg
push
enter
jl
jge
jno
mov
int
mov
lods
cmp
out
repz
rcrl
jns
pop
cmpsb
pop
lds
jbe
or
cltd
xor
lahf
jae
jg
fldt
insb
fisubs
jo
push
icebp
scas
js
jno
mov
filds
pop
pop
sarb
adc
mov
les
sbb
out
lea
iret
in
push
ds
clc
out
rclb
mov
mov
les
scas
adc
push
mov
ds
and
inc
lods
repnz
pop
cmpsl
dec
es
fwait
mov
fdivrl
cmc
jg
and
sbb
loopne
mov
in
adc
xor
addr16
ljmp
ret
popf
cmp
sub
lock
lods
lea
cmp
addr16
insl
jg
nop
push
aad
sub
faddl
test
adc
rol
push
adc
sub
sbb
mov
inc
int
push
ficomps
inc
subb
xor
enter
mov
adc
xchg
pop
pusha
push
outsb
in
out
sbb
lret
sub
lcall
push
mov
stos
adc
inc
xor
ret
xorb
cmp
decl
sbb
movsb
cmp
or
lret
push
les
push
movsb
xchg
adc
xor
cs
xchg
fmuls
imul
sub
sbb
cwtl
test
add
imul
mov
pop
pop
test
out
stc
in
cmp
add
aas
push
sub
xchg
dec
sarb
decl
pop
into
aad
rorb
and
mov
stos
sar
and
xor
popf
jle
stc
cmp
faddl
in
lock
dec
sbb
out
popa
adc
sub
sbb
outsb
pop
sbb
xor
pop
shlb
xor
pop
pop
mov
int
in
inc
fisubs
jle
arpl
loopne
pop
fwait
stc
fstpt
jp
adc
dec
lods
out
stc
repz
sbb
daa
mov
mov
inc
insl
fsubs
pushf
mov
push
pop
into
cltd
bound
mov
xchg
jbe
jl
mov
scas
movsb
inc
test
imul
arpl
sub
gs
hlt
sbb
jle
shlb
inc
out
fwait
push
mov
mov
cld
dec
cmpsb
xchg
pop
xor
xor
jb
sub
xchg
test
adc
sbb
insb
mov
repnz
enter
pop
sbb
int
mov
xchg
adc
in
inc
cwtl
loope
lds
jns
fstpt
fistpll
pusha
mov
push
sbb
sub
sub
cmpl
mov
call
push
or
mov
daa
sub
jge
je
stos
adc
lahf
std
inc
dec
in
add
nop
jmp
cmp
dec
or
lods
push
sbb
into
in
xor
fstpl
adc
fcomp
subb
mov
mov
and
add
mov
or
mov
cmp
adc
cmpsl
popa
cmp
mov
adc
fdivr
nop
push
aad
daa
push
stos
test
push
addr16
rcl
outsb
je
lahf
push
pushl
adc
or
aaa
xchg
mov
fs
in
mov
add
aad
jae
push
icebp
push
xor
insl
xchg
popa
or
sbbl
push
pop
mov
jbe
fsubl
push
adc
and
dec
sbb
or
dec
add
test
insl
cmp
mov
or
and
insb
dec
sbb
fucomi
lock
rolb
jmp
das
ds
mov
mov
outsl
sub
inc
xor
adc
and
or
aam
test
and
loopne
push
js
jb
inc
jle
xchg
or
push
xor
les
mov
xor
outsl
jge
cmp
or
jecxz
jo
push
pop
nop
fsubrs
popf
xchg
cmp
ret
sbb
iret
mov
outsl
into
jb
add
inc
inc
mov
adc
xor
inc
sbb
dec
xchg
and
es
mov
pop
enter
sub
xchg
add
sbb
int
pop
mov
mov
mov
into
ficoms
cmpsb
jl
lea
xchg
pop
daa
sarl
adc
xchg
pop
or
fadds
stc
push
mov
mov
imul
icebp
fdivs
xchg
or
jmp
sub
and
push
push
fs
bound
out
xorl
les
rcll
add
xor
push
lcall
add
popa
add
pop
pop
pop
fistl
mov
inc
xor
lock
es
adcl
lea
pop
xchg
jae
jl
jns
add
inc
or
pop
adc
sub
test
cli
mov
incl
out
jp
pusha
mov
jns
dec
push
dec
in
dec
xorb
pop
jb
mov
sub
cmpsb
sbb
jge
lcall
push
push
xor
and
loopne
jmp
xchg
fucomp
in
mov
outsl
xor
scas
dec
mov
push
and
mov
xchg
add
jae
js
std
push
pop
mov
or
loop
stos
out
ds
inc
jae
xor
repz
and
pop
or
mov
jecxz
jge
push
fstps
jge
pop
mov
outsl
bound
imul
stos
cs
inc
js
fcmovb
decl
scas
popf
ret
and
test
movsl
push
test
sub
ret
xlat
pop
jns
aas
mov
imul
cltd
adcb
mov
sub
or
dec
xchg
jae
inc
mov
sub
and
push
or
inc
loope
stc
or
andl
cmp
pop
sub
add
pop
mov
push
dec
or
je
std
jo
call
pop
or
imul
imul
dec
adc
lret
insb
lcall
cmpsl
mov
ja
cmp
mov
push
test
or
cmp
icebp
fstl
clc
adc
sub
shlb
xchg
out
fcmove
cld
daa
mov
ret
lahf
insl
movsl
add
int3
mov
das
pushf
test
jmp
rcr
lcall
int3
cltd
jl
ja
sub
cwtl
jle
pop
dec
mov
sbb
sbb
or
in
cld
fsubr
push
jae
iret
sbb
jno
dec
ljmp
push
outsb
xchg
xchg
or
mov
mov
xor
xchg
enter
outsb
int
rolb
mov
rcr
popa
mov
push
or
adc
fld
push
push
testb
cmp
es
cmp
cmp
jno
inc
jmp
outsb
popf
mov
adc
jg
cmpsl
inc
push
ret
sub
pop
out
daa
daa
xchg
sub
push
dec
in
stos
negb
pushf
shr
subb
popf
xor
push
lcall
jno
fistps
mov
addr16
mov
mov
ret
dec
fistpl
mov
pop
in
inc
jb
fmull
lea
imul
rcrb
movsb
cmp
sub
shr
and
daa
inc
cmp
rorb
inc
cmp
push
sbb
incl
inc
cmp
in
es
push
jmp
xor
ljmp
pop
xor
jo
xchg
enter
lahf
aaa
shrl
sarl
cmc
or
cmp
and
xchg
movsb
xchg
mov
pop
and
sbb
mov
push
jecxz
xchg
pop
lret
aam
dec
notb
int
sahf
jg
dec
aam
mov
cld
jbe
call
aad
rolb
dec
ret
sub
fs
pop
iret
mov
cmp
mov
fs
mov
hlt
cmpsl
inc
jmp
lret
inc
dec
mov
push
push
in
std
divl
fisttpll
gs
lds
mov
cmpsl
pushf
mov
push
popa
jbe
jo
jp
sbb
lret
mov
add
test
cli
add
call
lcall
lds
call
push
xor
push
insb
ret
stos
out
das
out
push
xchg
nop
push
xchg
inc
out
jnp
in
js
andb
in
xor
add
sub
mov
cmp
call
iret
pusha
push
mov
push
lcall
leave
add
fisttps
addl
xor
mov
adc
aad
clc
dec
lahf
int3
sbb
pop
adc
cmp
stos
bound
xchg
dec
jmp
add
aas
xchg
mov
and
adc
pop
rcl
adc
and
jne
jg
jmp
ljmp
jmp
in
adc
mov
push
sahf
cltd
inc
repnz
cmpsl
fildl
lret
ljmp
shrl
xchg
pushf
ljmp
and
out
push
sti
jbe
cmp
push
push
pop
dec
sarb
rolb
push
mov
dec
pop
ret
adc
xchg
shrb
mov
popf
mov
repz
or
push
mov
aad
cmp
test
dec
shrb
loop
push
repnz
out
dec
push
mov
arpl
lods
insl
bt
lret
gs
bound
sar
mov
test
inc
int
ds
shlb
out
mov
sti
adc
pusha
rcrb
addl
cmpsb
push
in
push
xor
scas
outsb
outsb
and
hlt
mov
pop
adc
aam
jp
inc
push
xchg
sub
and
cmpsb
push
test
push
idivb
loopne
sub
popa
lods
mov
je
outsb
sbb
loop
mov
js
mov
int
push
inc
enter
pop
mov
dec
mov
mov
divb
jo
movsb
pop
mov
mov
jo
in
out
sub
shrl
fnstenv
adc
int
dec
sbb
pop
xchg
jnp
ss
ds
xlat
add
push
mov
rcll
in
jmp
dec
sbb
sbb
fldl
pcmpgtb
push
push
jbe
mov
out
inc
lds
and
adc
push
push
insl
ror
inc
cmpsl
jp
adc
add
mov
popf
divb
jbe
pop
sub
fidivs
fadd
push
add
stos
ret
fcomps
fcomps
mov
lret
test
add
cmpsb
cmc
dec
jmp
mov
or
jnp
inc
stos
or
sbb
mov
jmp
into
cmpsb
scas
jo
lock
push
rorb
pop
ret
int
loop
adcl
adc
and
push
inc
lds
sub
mov
cltd
mov
ficompl
inc
inc
xchg
mov
stc
mov
dec
les
cmp
movsb
push
jmp
xor
imull
jmp
cmp
pop
or
js
rclb
popa
pop
lahf
mov
cld
scas
cwtl
pop
pop
inc
out
jne
xlat
mov
out
sti
ljmp
push
icebp
and
mov
dec
rorb
test
push
out
cmp
pop
lds
cltd
imul
sbb
mov
js
insl
loope
adc
icebp
sub
mov
adc
mov
out
out
decl
pop
push
xor
sbb
cmp
mov
scas
in
ja
cmp
inc
sbb
stos
lret
push
sub
xor
jg
or
pop
fisubrl
mov
ds
pop
in
adc
xchg
add
aam
add
testl
mov
scas
lods
push
xor
cmp
adc
adc
stos
stc
mov
mov
inc
hlt
pushf
mov
add
lcall
loope
mov
daa
outsl
test
std
aam
cmpsl
loopne
loopne
cltd
out
mov
mov
cmp
xchg
arpl
sub
pop
daa
xor
mov
cld
cmp
xor
jmp
jge
cmp
cmpsl
pop
rorb
cmp
push
add
pop
out
ret
inc
sbb
pop
jmp
xor
sarb
aaa
pop
sbb
mov
je
push
sub
mov
lea
movsl
and
in
mov
push
dec
insb
cld
dec
stc
mov
mov
sbb
dec
call
pop
and
mov
dec
stos
push
stos
inc
arpl
ja
and
dec
jg
pop
addr16
push
mov
mov
into
push
jmp
enter
and
pushf
inc
fdivs
pusha
fldl
xor
inc
stos
ret
dec
jno
dec
xor
lock
fmuls
dec
mov
test
repz
jns
sub
adc
andb
sbb
rcr
pop
mov
jns
test
sub
out
cltd
mov
push
movsl
cwtd
xchg
mov
add
ret
jno
xchg
imul
push
sub
sub
fwait
mov
rclb
shrl
and
sub
sub
sbb
xor
bound
int
and
shr
test
cld
dec
sti
neg
out
cmpsl
sbb
push
fs
xor
imul
or
lahf
push
loopne
add
jmp
icebp
dec
dec
or
popf
or
mov
cmp
pop
out
test
loope
inc
lock
xchg
jp
fcmove
out
in
out
cmpsb
mov
adc
repz
sbb
in
in
lea
pop
aad
rcrb
cmc
jle
les
mov
mov
add
bound
add
mov
dec
cmp
add
push
loop
icebp
cli
dec
jle
icebp
sbb
mov
rcll
mov
ja
adc
cmp
xchg
pusha
xor
hlt
fs
mov
jne
scas
push
cli
in
xchg
cwtl
xchg
xchg
repz
push
fstps
sti
lods
xorl
add
add
xor
movsl
jno
push
movzwl
sarb
inc
mul
pop
dec
mov
inc
push
pop
jmp
push
pop
out
inc
xchg
out
clc
leave
loopne
scas
or
push
pop
cltd
lods
ss
push
mov
mov
inc
jge,pt
sbb
push
xor
shll
cmpsl
rcr
pcmpgtw
mov
out
mov
outsl
jne
sub
movsl
out
dec
mov
and
dec
xchg
rcl
push
pop
or
and
int
pop
ret
scas
shll
push
mov
rorb
dec
sub
adc
lahf
insl
xchg
in
inc
pop
mov
dec
pop
sub
jmp
div
lea
mov
dec
adc
cwtl
push
xor
clc
push
mov
nop
je
sbb
jle
bound
inc
adc
sub
dec
jmp
inc
je
stos
mov
mov
dec
ljmp
adc
pop
fisttps
jae
xchg
cmc
mov
xor
mov
filds
cmc
mov
add
int3
jp
dec
test
insb
mov
dec
and
ljmp
es
cmp
fidivl
in
or
mov
cmc
pop
ror
adc
push
add
subl
loope
sub
mov
andb
mov
fs
in
outsl
mov
out
mov
mov
mov
pop
adcl
and
or
mov
in
jge
push
adc
pop
test
jp
mov
call
jg
std
loope
dec
mov
mov
sahf
lea
mov
pcmpgtb
dec
popa
lret
jge
stc
bndstx
cmpsl
or
in
movsl
jns
xchg
aas
pop
popf
jecxz
fsubl
shrb
scas
pop
ss
fs
lret
push
movsb
ja
mov
stos
loope
xor
sbb
ds
out
and
pushf
push
add
int
insl
dec
xor
cmp
push
jbe
adc
xor
stos
lds
pop
and
aaa
nop
mov
jp
inc
test
push
sbb
add
fimuls
test
pop
in
inc
fadds
jnp
aaa
movsb
aaa
shll
mov
or
lahf
mov
scas
xchg
cmpsl
jge
push
push
cmpsl
sub
dec
in
shll
pop
or
rcll
outsb
leave
stos
pop
cmpsl
out
push
insb
or
inc
inc
pop
mov
dec
dec
push
les
lcall
dec
mov
cmpsb
js
sub
shlb
pusha
shl
lea
sbb
icebp
lret
sub
cmp
mulb
test
mov
cld
mov
out
test
mov
jge
cmpsb
push
push
repz
sub
or
or
mov
xor
imul
or
loop
xor
mov
sbb
outsl
cmpb
sbb
adc
sti
scas
out
test
adc
popa
xorb
lcall
mov
or
repz
test
adc
jnp
inc
mov
inc
sti
xchg
outsl
mov
push
enter
lcall
mov
lret
cmp
mov
xlat
add
xchg
adc
push
cld
mov
jo,pn
xor
repz
addr16
imul
sbb
fistps
xchg
mov
push
fistpl
sub
mov
sbb
sub
add
aad
and
adc
mov
daa
enter
sbb
push
mov
mov
mov
mov
loope
push
repnz
arpl
push
inc
or
push
std
arpl
push
xchg
dec
nop
jo
lret
push
es
or
pushf
les
mov
popa
ljmp
and
push
test
pop
jae
sahf
aas
inc
or
lret
out
call
mulb
es
cwtl
mov
insl
xchg
or
popa
xchg
mov
sbb
shll
add
loopne
aad
aad
mov
xorl
addr16
iret
or
ja
or
loop
pop
dec
icebp
jns
dec
mov
sub
cmp
or
outsb
push
or
cmp
cs
push
xor
xchg
lods
mov
fs
sbb
popa
pop
mov
subb
adc
jbe
fsubl
stos
jmp
lcall
xchg
mov
sbb
push
cmp
mov
jns
cmpsb
out
rcrb
adc
in
icebp
xchg
jmp
add
jp
insl
out
out
push
add
xor
adc
xor
add
test
cmpsl
lods
jl
cmp
in
inc
mov
loope
inc
imul
popf
xchg
into
and
in
inc
aam
daa
lock
loop
movsb
or
cltd
pop
mov
xor
pop
data16
add
adc
rorl
aam
sub
inc
sbbb
pop
icebp
mov
mov
lock
push
lahf
inc
mov
xor
es
xor
push
ss
jmp
inc
rol
test
mov
or
icebp
stos
test
cmp
pop
pop
add
fildll
xchg
cli
nop
and
dec
loop
aam
js
mov
loop
jp
push
das
std
popa
mov
inc
push
jmp
sub
add
sbb
adcb
setne
xchg
mov
divb
movsl
sub
rcrb
push
psubq
cmp
lret
mov
inc
scas
cmpsb
pop
mov
jp
adc
jb
rcl
dec
mov
sti
int3
mov
lds
sub
mov
or
loope
inc
call
adc
shrd
in
lea
cmp
pop
arpl
insl
cltd
pop
sbbl
jge
stos
int3
add
mov
int
aaa
addb
adcl
push
mov
and
jbe
push
ja
out
bnd
mov
push
pop
dec
jg
imul
or
xchg
lahf
stos
lock
sti
push
orb
xchg
sbb
push
xor
push
icebp
out
les
daa
and
mov
cmp
fists
sbb
add
inc
fnstcw
and
xchg
xchg
and
icebp
and
stos
rorb
gs
ljmp
xlat
pushl
xor
jecxz
push
out
rorl
stos
lcall
inc
pop
mov
jmp
dec
pop
out
push
sub
rcrb
sbb
mov
loope
pop
jnp
inc
cmp
xor
sbb
into
lods
and
enter
inc
jg
push
xor
jge
pop
sub
adc
sbb
inc
iret
cld
mov
test
std
and
mov
inc
xor
cmp
xor
shlb
fsubs
fldenv
leave
test
in
sbb
xrelease
lock
cmc
jns
mov
movsb
add
lret
or
mov
cmpsb
and
xchg
adc
loope
mov
icebp
sbb
or
cmpl
aaa
mov
notb
pusha
xor
es
das
aas
lret
loop
mov
adc
pushf
in
and
xor
pop
repz
int
adc
es
jbe
ljmp
das
fucomi
sbb
push
adc
sbb
cmp
sub
push
outsl
mov
sahf
dec
iret
mov
push
fildl
sub
ds
fmulp
je
sbb
clc
cs
or
stc
shll
test
or
xor
xchg
mov
sarl
jo
push
sahf
pop
or
enter
pextrw
xor
xchg
stc
cmp
pop
gs
jmp
dec
add
inc
ss
push
push
xor
loopne
or
jno
in
push
mov
daa
arpl
fisubl
std
lcall
pop
inc
adc
jo
jmp
mov
xchg
outsl
xchg
insb
cmp
push
cli
bound
mov
movsb
jge
pop
xchg
and
out
dec
iret
ljmp
pusha
sub
mov
shll
inc
sti
cmp
mov
add
aad
xchg
push
fsubr
lret
mov
cli
dec
xchg
inc
data16
mov
ds
pop
cmp
mov
gs
scas
iret
xorb
cmp
mov
nop
test
hlt
push
psubusw
add
lret
add
mov
lret
fsubrl
repz
cmpsl
xchg
mov
adc
push
inc
push
pop
and
add
adc
mov
inc
in
add
xchg
push
aaa
lcall
sbb
xchg
adc
fbld
stos
sub
movsb
sub
sub
stc
je
out
pop
ret
gs
movsl
lods
imul
out
inc
or
cmp
mov
adc
pop
shrl
icebp
or
xor
cmp
mov
xchg
mov
repnz
addr16
inc
call
pop
push
push
mov
ss
in
or
xorb
in
pop
stos
popa
lret
fs
ret
sti
inc
sub
andb
sbb
inc
lret
jecxz
call
pop
in
popa
mov
das
ret
or
mov
push
fadds
cmp
hlt
int3
cmp
popf
pop
inc
jle
int3
sub
sahf
jae
lds
in
mov
pop
std
adc
pop
sub
sbb
lahf
dec
cltd
jge
xchg
sbb
mov
add
mov
in
push
mov
iret
call
push
in
or
scas
xchg
jae
inc
xor
jecxz
mov
push
adc
repnz
lret
inc
lret
or
rcrb
push
adc
xchg
inc
or
xchg
mov
cmp
lahf
or
dec
pop
push
push
mov
in
loope
fdivs
mov
cwtl
xor
push
add
sbb
jns
add
and
lea
mov
jecxz
add
inc
dec
push
pop
loopne
incl
repz
std
add
ja
rcll
fildl
dec
sub
scas
movsl
in
xor
mov
dec
data16
nop
aas
xchg
lds
sti
pop
mov
xchg
fmulp
leave
test
pushf
movsl
or
fcompl
test
lods
hlt
sbb
sbb
cld
loopne
fwait
les
cmc
outsl
fidivl
xchg
icebp
ffreep
lock
imul
out
jge
cmp
jp
xor
je
hlt
xor
daa
add
loope
jge
imul
jno
rcll
and
sarb
adc
dec
iret
xlat
jge
imul
adc
lcallw
loopne
xchg
cmpsl
mov
cmpsb
call
xchg
aam
add
aad
adc
fnstcw
dec
stos
lcall
dec
ljmp
aas
mov
sahf
mov
test
daa
lahf
mov
leave
push
int
inc
sub
fmulp
xchg
ficoms
cli
shll
push
and
jge
sub
and
dec
jge
push
int
push
int3
or
dec
mov
dec
jmp
fbld
in
cli
pop
cmc
dec
mov
inc
cmp
mov
sbb
and
pop
inc
lret
and
jmp
jle
push
scas
cld
or
pop
add
xchg
sti
mov
cld
in
mov
xorl
lock
or
lods
fists
and
cwtl
outsl
jg
or
inc
adc
push
jo
jo
jns
pop
and
xor
repz
jb
xchg
mov
andb
fcmovne
inc
xchg
clc
xor
jp
sbb
adcl
pop
int
insl
outsb
dec
xor
add
cld
fsts
dec
cwtl
sub
adc
sub
popf
cltd
ja
adcl
xchg
lcall
mov
rorl
and
sub
nop
pop
sarl
add
por
mov
mov
mov
test
jp
push
outsl
fisttpl
mov
out
hlt
sahf
sub
push
mov
mov
or
xchg
xor
fisttpll
push
mov
jge
adc
cwtl
psadbw
in
or
push
mov
jp
ss
cmp
in
mov
call
xor
scas
mov
sbb
fdiv
mov
stos
lcall
testb
imul
bound
insb
loop
ret
jb
int
or
fs
rcll
xchg
scas
in
mov
pop
dec
fcomi
cmp
pop
mov
dec
pushf
scas
mov
jle
ds
pop
push
xchg
dec
pop
add
inc
push
push
adcl
sbb
decb
mov
aaa
xchg
les
mov
imul
xchg
leave
ss
push
aad
add
sahf
mov
cld
movsb
fwait
popf
xchg
jbe
sbb
pop
xchg
sub
mov
inc
xor
lods
test
fxch
sbb
mov
fcom
jg
aaa
mov
cmp
sbb
fnstcw
mov
stos
mov
mov
mov
dec
inc
cmpsl
mov
sub
and
inc
dec
dec
test
or
sub
mov
mov
rol
repnz
movsb
and
add
push
ja
push
inc
mov
cmp
jnp
loope
pop
fdivrs
xor
mov
into
sbb
cld
gs
jle
aaa
push
mov
inc
add
xor
hlt
and
and
lods
jecxz
cmpsb
inc
mov
insl
cmp
leave
ja
lahf
scas
repz
leave
mov
xor
insl
dec
dec
scas
ja
and
sub
repnz
lods
cmp
movsl
pop
repz
xor
cmp
mov
xchg
addr16
pop
mov
adc
iret
dec
sbb
push
push
mov
add
aas
inc
mov
dec
xor
es
inc
lcall
rcl
sub
jmp
or
xchg
or
jmp
jmp
or
sbb
lret
lock
lods
mov
and
dec
add
dec
mov
cmp
fcompl
xchg
xchg
xchg
jg
out
in
gs
add
or
jl
and
sub
repnz
popa
call
mov
add
xchg
dec
adc
int3
std
dec
insb
xlat
or
ljmp
push
gs
data16
jbe
dec
fisubs
cmp
lea
test
outsl
loopne
sub
mov
in
jae
mov
hlt
sbb
rolb
dec
xchg
lret
fs
pop
ss
mov
ficoms
mov
leave
push
and
cmp
mov
inc
push
cmc
inc
push
sbb
xchg
mov
imul
je
jns
push
mov
fisubl
lods
cmp
mov
xchg
mov
not
nop
test
fstp
das
and
mov
fisubrs
dec
pop
mov
fstpl
andl
mov
or
sbb
aam
jmp
xor
inc
fldcw
adc
mov
movsb
ds
idivl
pop
outsl
push
jle
inc
or
dec
dec
dec
push
add
mov
inc
scas
xor
mov
dec
ds
js
imul
daa
repz
cld
inc
sbb
mov
push
inc
xchg
mov
inc
xor
leave
push
out
xorl
mov
jne
scas
lock
mov
push
shufps
dec
mov
stos
and
cmc
jno
arpl
lcall
xchg
imul
loope
xor
mov
movsb
cs
roll
jecxz
fadds
repz
jle
push
sbb
xor
cmpsl
dec
mov
add
jbe
sarl
icebp
mov
je
mov
stos
mov
je
mov
xlat
sahf
addb
enter
sti
das
sbb
ret
inc
cmpsl
in
adc
inc
cmp
mov
int
inc
arpl
dec
add
mov
cmp
adc
enter
mov
sub
outsl
push
inc
add
std
lods
or
imul
pushf
sub
popa
dec
add
repnz
mov
xorb
dec
fidivs
mov
push
jnp
mov
mov
pop
sbb
xchg
jae
jbe
repnz
pop
je
pusha
cs
push
dec
cmpsb
pushf
lods
outsl
jecxz
mov
mov
add
scas
inc
stos
adc
xor
jbe
jb
subb
clc
hlt
jl
jnp
lods
imul
push
cmpl
jns
and
cld
and
inc
aas
push
test
cs
or
outsb
adc
int
add
fisttpl
sbb
wrmsr
std
int
cltd
sub
shrb
movsb
jmp
mov
xor
xor
popa
gs
fs
and
lret
or
data16
in
mov
fnsave
ja
inc
cmp
mov
divl
jg
inc
mov
cmp
leave
cltd
or
rolb
or
shrb
mov
outsb
ds
or
mov
bound
ret
and
inc
nop
pmaxub
push
push
inc
std
nop
arpl
jl
ret
dec
mov
in
aas
fmull
adc
outsb
inc
mov
icebp
dec
into
enter
popf
loope
inc
shr
push
rorl
testb
jecxz
inc
jecxz
push
aad
not
das
or
push
pop
push
loop
dec
testb
cltd
xlat
iret
mov
xchg
dec
sbb
and
cmp
push
dec
pusha
fwait
daa
mov
stc
jns
xchg
js
mov
daa
mov
xchg
and
mov
cmp
mov
js
sarb
call
mov
jle
xchg
xchg
in
ds
in
mov
xor
xor
jl
mov
and
mov
dec
jle
test
cmpsb
in
aas
shll
and
mov
fimuls
fidivrs
aam
jno
cmp
cmp
lret
adc
popf
sbb
adc
stos
jb
push
mov
mov
leave
dec
loop
jecxz
cmp
mov
sbb
sub
fiaddl
push
cmp
mov
lcall
jmp
test
sarl
pop
fcmovne
decl
aam
cs
jbe
out
outsb
imul
sti
out
sahf
inc
outsb
jae
ja
subl
pop
cmp
cmpl
push
cmp
adc
dec
mov
pop
addr16
loope
imul
xor
sub
loope
in
push
dec
arpl
push
arpl
lret
jle
icebp
jecxz
dec
pusha
dec
jns
mov
rol
fimull
jns
in
mov
push
jecxz
jge
in
sbb
insb
aaa
jmp
mov
mov
int
push
mov
sbb
stos
sbb
lret
inc
movsb
xlat
clc
int
les
rcrb
adc
stos
sub
stos
mov
xor
push
jle
incb
sbb
xchg
inc
mov
subl
test
lahf
pop
cmpsb
xor
xchg
out
xor
or
jne
xchg
pop
mov
out
pop
fistpl
std
push
push
and
push
in
inc
sbb
loopne
mov
movsb
or
mov
cmc
pop
es
or
insb
femms
out
insl
testb
mov
cmp
xchg
xor
jae
dec
insb
outsl
inc
sub
pop
icebp
xchg
pop
lret
jae
aas
mov
sbb
loope
insl
adc
mov
jbe,pn
push
or
imul
rorl
pop
jmp
mov
fmul
or
sub
aam
ja
inc
cmp
les
mov
pop
mov
push
mov
xchg
aas
xor
jb
pushf
pop
mov
std
lock
xor
mov
cmpsb
pushf
mov
jns
ljmp
cmpsb
lds
pushf
ret
or
movsl
add
mov
jno
fwait
mov
inc
lahf
cmp
clc
lea
and
xor
test
sub
inc
cmp
sub
aas
cmpsl
pop
inc
hlt
in
shlb
sahf
repz
mov
xchg
call
pop
repz
and
mov
mov
icebp
pop
inc
lds
or
notrack
add
imul
pop
xor
inc
sub
push
fisttps
lock
int
addb
jne
xchg
mov
scas
push
mov
pop
ds
or
sbb
dec
mov
fdivrp
cld
inc
and
push
mov
mov
inc
dec
into
popa
lock
mov
dec
in
inc
or
sub
xchg
ret
inc
movsl
rorl
dec
fcomps
mov
or
adc
aas
mov
push
jo
ret
sbb
pop
jg
lcall
arpl
je
jle
jle
inc
lea
push
aam
sahf
and
sbb
aas
push
cli
insl
adc
loope
mov
fcompl
jbe
in
push
sbb
fwait
ljmp
aaa
jns
jecxz
loope
cmp
imul
cmc
lds
sahf
jae
xorb
xchg
mov
push
inc
mov
imul
sub
sub
jbe
fucomp
in
sbb
xchg
clc
out
loop
std
mov
sub
cmp
add
push
mov
cmc
rol
add
xchg
fnstenv
and
mov
xchg
jp
in
jns
sbbb
pop
gs
or
mov
pop
xchg
movsl
out
lods
mov
inc
sahf
dec
pop
pop
sub
popa
pop
jmp
js
inc
inc
push
cmp
dec
adc
mov
test
dec
fucomi
xchg
inc
inc
aaa
dec
sub
add
in
fsubrs
je
push
lret
inc
mov
test
pop
jp
push
sbb
adc
outsl
xor
out
inc
loop
ja
mov
mov
mov
pop
cs
sub
and
in
int3
push
xor
and
mov
scas
das
push
sarb
fsub
ret
mov
loop
and
js
lea
or
inc
pop
insb
xor
push
ja
mov
mov
lea
loopne
mov
icebp
push
add
fbstp
je
or
add
xchg
push
fsqrt
jp
dec
fiadds
sbb
pop
out
jge
sbb
push
mov
in
sbb
fsubrs
jg
xchg
outsl
shlb
fldl
cmp
fsub
xchg
sub
je
popa
int3
mov
out
ja
pop
rclb
lret
outsl
leave
inc
ljmp
cmp
sub
sbb
sub
or
inc
mov
sub
or
test
push
pop
ds
mov
imul
inc
roll
inc
sub
int
inc
xor
pop
adcb
inc
cmp
inc
jp
data16
popa
out
cmp
loopne
and
clc
roll
sbb
rcrb
mov
push
mov
dec
xor
ds
insb
ficomps
popf
lds
pop
imul
leave
push
in
mov
push
fcomp
in
mov
or
stos
cld
or
cmpsb
and
push
push
jecxz
mov
pop
daa
or
adc
xor
cltd
icebp
adc
push
mov
inc
test
xlat
std
cs
jbe
mov
ret
dec
adc
jp
test
rep
mov
cltd
mov
inc
fwait
xor
mov
gs
mov
int3
jae
and
cltd
nop
popa
inc
call
sub
in
mov
xor
nop
rorl
or
addr16
or
rcrl
aas
inc
add
cmpsl
push
dec
sbb
fwait
sahf
popf
and
push
mov
insl
xor
and
xor
or
dec
xlat
mov
jl
pop
aas
or
and
push
inc
mov
popa
push
push
jne
mov
sub
sbb
out
leave
jecxz
mov
mov
movsb
dec
daa
fmull
cmp
sbb
xchg
xchg
jmp
dec
jge
movsl
jle
xor
ret
inc
adc
cmp
stos
std
clc
das
arpl
xor
cld
xor
les
adc
pop
fcoms
jb
ja
out
ja
xlat
mov
jbe
xor
sti
jmp
sbb
jns
xor
mov
popa
bound
cmp
or
cmp
add
or
push
mov
rorb
inc
push
sbb
jnp
sub
fidivl
jo
lock
mov
clc
roll
adc
sbb
xchg
rorl
fdivl
roll
test
pop
addr16
insb
and
mov
jno
ljmp
pop
stos
pop
and
dec
inc
test
les
add
orb
call
popa
jo
scas
mov
out
add
mov
sub
sbb
sub
lahf
xchg
sarb
shll
sbb
inc
enter
cld
ja
stos
cmp
clc
std
je
loopne
fs
mov
jnp
pop
in
mov
fcmove
cld
aas
cmp
addr16
and
xor
orb
popf
shrb
mov
xor
inc
stos
es
sub
push
mov
lret
aas
inc
pop
pop
xchg
lods
jo
rorb
push
clc
cmp
sbb
sbb
xchg
mov
jne
cli
jmp
ss
fldt
mov
andl
cmp
aad
fnstcw
shrl
or
test
pop
pop
xchg
push
mov
xchg
call
sub
shl
pop
cltd
sbb
push
push
test
mov
and
fldcw
dec
adc
shll
repnz
mov
lods
rcr
mov
sbb
in
dec
sahf
mov
or
mov
xor
fwait
pop
mov
sbb
pop
nop
mov
pop
call
ret
dec
in
pop
inc
outsl
adc
outsb
cltd
faddp
rorb
sarl
sbb
popf
sarb
aam
adc
add
push
mov
lods
movsl
arpl
push
popl
jo
lret
push
or
cmc
xor
ds
dec
pop
outsl
jmp
jmp
out
mov
inc
adc
xchg
push
xchg
pop
mov
push
ljmp
add
adc
fdivrs
sub
mov
ljmp
and
jge
push
add
push
or
add
add
loopne
fisttpll
mov
xchg
jo
mov
scas
lock
push
hlt
out
xorl
and
hlt
pop
ret
pop
shlb
and
fsts
inc
sub
mov
push
and
lret
mov
push
sti
arpl
in
out
mov
das
repz
loope
jns
ret
fisttpl
xchg
sbb
imul
bound
xor
adc
push
insb
fs
imul
inc
js
jp
push
jg
sbb
lods
xchg
xchg
push
les
push
push
cmp
pop
lea
ret
int
test
icebp
and
fs
fcom
fs
mov
push
dec
fs
mov
fsin
pop
cmp
dec
lcall
cmp
and
mov
mov
cltd
pop
cmp
jb
inc
push
loopne
lcall
repz
rclb
cmpl
or
push
and
es
push
xchg
jbe
cli
jnp
out
fcomps
aam
inc
fcom
jo
and
sub
jbe
clc
data16
inc
rcrl
mov
test
imulb
pop
pop
xchg
sub
push
int
dec
mov
shlb
mov
xchg
pop
inc
rcrb
les
loop
jge
dec
repz
sbbl
xor
or
addr16
aad
xor
mov
lret
std
fsubs
adc
jb
xor
xchg
mov
jbe
sub
add
mov
cmp
dec
mov
pop
pop
push
bound
test
stos
daa
lahf
inc
bound
push
sbb
neg
cli
dec
daa
mulb
push
pop
adcb
xor
mov
fwait
xchg
js
add
mov
jg
xlat
iret
cmp
cmp
call
in
push
outsb
fsub
xor
jmp
clc
movb
notl
sahf
sbb
popl
xor
test
in
push
addr16
leave
or
push
hlt
mov
sbb
out
jno
and
das
sbb
jp
scas
loope
aam
sbb
and
inc
pop
mov
push
pop
mov
pusha
pop
add
sub
mov
lods
jg
int3
gs
fisubrs
pop
dec
cmc
pop
xlat
jecxz,pn
dec
and
or
aam
pop
out
es
mov
jns
push
push
lcall
push
jb
jno
out
xor
push
inc
cmp
push
mov
arpl
and
cli
xchg
jb
mov
inc
xor
rolb
pop
cli
negl
sahf
stos
xor
cld
add
outsb
loop
xchg
aad
pushf
jne
xlat
mov
xor
pop
leave
push
clc
dec
testb
and
icebp
jmp
rcr
jne
out
jl
pop
andl
test
pop
scas
xor
xlat
add
cmp
ret
aad
pop
sub
pop
in
mov
push
movsb
and
fmuls
jl
xor
ficoms
sub
xor
adc
into
inc
out
sub
fwait
scas
jbe
out
cmp
cwtl
in
push
test
mov
test
pop
outsb
jge
adc
int3
dec
cs
xchg
adc
pop
or
pop
pop
mov
or
test
arpl
lds
dec
sbb
in
cmp
mov
movsb
ljmp
pop
mov
inc
xchg
jecxz
xchg
pop
xchg
ret
icebp
sarb
outsl
mov
sub
jecxz
je
add
pop
inc
bound
orl
lods
sbb
mov
lods
test
iret
and
jno
xchg
ss
xchg
cmp
xor
mov
cmp
xlat
scas
jo
repnz
aad
mov
fmuls
pop
dec
pop
dec
mov
cli
sbb
enter
in
jl
data16
cmc
js
stc
jno
pop
inc
cmp
movsl
xorl
mov
mov
sbb
xor
stc
mov
mov
sti
pop
sub
lret
shlb
mov
sbb
mov
xorl
and
push
cmp
rcl
bound
xor
nop
sbb
js
mov
lcall
add
sub
pop
orb
loop
out
popf
push
inc
cmc
mov
addr16
jg
outsl
xchg
xchg
subb
jg
cmpsb
mov
cmp
add
jle
xchg
jg
je
lret
jb
mov
cmpsb
cmp
aaa
inc
mov
sbb
lds
jo
jbe
xor
xchg
pop
pop
stos
shlb
mov
push
adc
test
jns
stos
mov
pop
pop
mov
push
inc
xor
mov
data16
jbe
out
negb
fists
dec
cs
out
fadds
push
mov
mov
cltd
inc
gs
sti
mov
scas
es
sbb
loop
adc
js
inc
add
lcall
imul
das
mov
pop
push
sbb
cld
dec
pop
sub
mov
sub
arpl
push
or
xchg
pop
pop
mov
push
sub
into
lock
mov
icebp
add
mov
popf
outsb
inc
stc
xor
sbbb
mov
leave
sub
mov
fs
out
mov
nop
popl
out
test
iret
ljmp
push
fldl
ret
nop
insl
iret
sub
clc
enter
pop
ret
add
mov
out
jo
lods
lahf
xchg
mov
js
mov
pop
outsl
sub
std
in
imul
push
and
add
pop
addr16
xor
xor
mov
lods
adc
pop
jbe
pop
insb
cld
hlt
insb
js
lods
jb
addr16
mov
cli
mov
push
outsb
jp
sub
push
push
sbb
xchg
in
cmp
or
or
push
jnp
push
mov
jl
xchg
out
xchg
adc
enter
mov
mov
or
dec
out
test
arpl
mov
pushf
pop
and
aas
add
xchg
or
jne
js
lret
xchg
xchg
ss
add
pusha
push
adc
gs
jo
nop
movzwl
mov
std
std
sub
ret
jle
mov
aad
inc
cmc
sub
jb,pn
dec
adc
cli
out
inc
shlb
mov
insl
push
mov
ds
add
lcall
ror
push
pushl
xchg
mov
jl
cmpsb
pop
or
fcmovu
inc
ds
push
fcomi
test
jne
pop
in
mov
arpl
jle
mov
push
gs
xchg
and
xchg
das
repz
inc
add
fistpl
ret
popa
dec
sarl
lret
or
push
dec
pop
imul
test
add
add
enter
iret
dec
mov
outsl
and
and
cwtl
daa
mov
cmp
xchg
inc
ljmp
mov
pop
gs
int3
test
jle
mov
out
jg
jp
jp
xor
xchg
lret
shlb
call
dec
pop
mov
dec
jmp
push
nop
lret
imul
cld
sarb
testb
pop
or
jle
pop
call
imul
cmova
dec
cmp
xorb
lea
mov
scas
comiss
scas
push
ret
inc
lret
int3
xchg
lock
xchg
pushf
add
ds
incb
mov
jb
and
pop
leave
int3
adc
leave
das
insl
mov
and
daa
jmp
mov
bound
xchg
test
sub
dec
jle
jno
jg
dec
inc
lock
es
shrb
add
jae
loope
orb
cmpsl
cli
pushf
push
out
lods
fs
fimuls
bound
mov
imul
leave
dec
sub
out
adc
mov
push
scas
sub
clc
sub
es
mov
mov
popw
js
mov
xchg
xchg
mov
in
outsb
xor
rclb
imul
xchg
push
add
in
faddl
in
leave
addr16
insl
pop
subl
cmp
lcall
cmp
cmpsb
cmp
fwait
mulb
mov
sbb
outsb
in
out
mov
addr16
in
sbb
sbb
movsb
dec
scas
xchg
adc
aam
sbb
push
std
push
int
into
cmp
rcrb
lret
outsl
fildl
lods
lea
repnz
mov
in
addl
push
jnp
xchg
and
mov
pop
sbb
mov
fstpt
adcb
insb
movsl
add
inc
les
xchg
cmc
xchg
push
mov
or
mov
push
inc
pop
jmp
push
hlt
push
leave
push
movsl
filds
ret
cwtl
insb
xchg
add
mov
cmp
push
push
loop
les
or
pop
mov
rorb
adc
adc
xchg
cli
push
add
ds
jbe
or
push
lcall
arpl
jp,pn
lahf
jbe
lods
rol
and
adc
les
leave
popf
jecxz
sub
lret
jne
call
sub
scas
dec
dec
push
cltd
inc
jo
lock
push
fs
in
out
push
cmc
pop
sbb
sub
int
ljmp
aad
insb
cltd
das
ljmp
test
cmp
lods
fisubrs
mov
xchg
hlt
jl
xor
repz
dec
xchg
mov
push
mov
jp
lea
loop
jb
jp
repnz
mov
inc
inc
orl
out
lcall
add
pop
test
sub
mov
jae
scas
push
nop
subb
mov
inc
rcll
ss
sbb
and
jno
pop
push
arpl
mov
xchg
pop
cltd
in
dec
lds
mov
add
cltd
mov
inc
int
add
mov
out
mov
aas
mov
pop
jns
jbe
mov
mov
test
xchg
lret
adc
cwtl
push
mov
cmpsb
sti
push
rorl
fcoms
in
sub
xor
fidivrs
shl
ret
and
xchg
adc
and
dec
jmp
mov
and
mov
pop
repz
cwtl
push
out
sbb
mov
inc
sub
jecxz
push
and
jb
push
push
mov
mov
in
sub
test
adc
dec
jmp
pop
and
fsubrp
dec
lea
mov
push
cmp
arpl
fndisi(8087
mov
aas
add
stc
dec
mov
outsl
xor
fwait
ds
orl
out
adc
jg
adc
ror
arpl
jb
add
sub
cmc
add
into
aas
or
xor
push
xor
adc
adc
dec
lds
rclb
mov
xchg
adc
dec
add
pop
dec
or
jle
popf
jmp
cmpsb
je
pop
jle
jge
adc
jnp
xchg
repz
outsl
mov
xor
and
lcall
xchg
xor
fsubs
in
dec
in
dec
mov
and
cmp
fisttps
jbe
pop
sahf
jg
sub
or
adc
pop
mov
and
jg
sbb
push
mov
sub
js
push
sbb
ja
or
pop
ljmp
ja
ret
add
mov
or
push
ss
das
pop
sub
aaa
or
or
in
les
push
in
in
mov
cmpsb
enter
inc
mov
mov
sbb
jecxz
clc
mov
out
out
push
dec
std
movsb
dec
push
lahf
jle
insb
xor
test
mov
icebp
pop
std
xor
dec
ret
sbb
int
popf
cmp
xorl
jb
xor
mov
inc
jmp
out
dec
filds
add
jno
ss
mov
jg
sbb
rolb
cmp
in
jle
xor
cmp
lds
in
test
or
push
rclb
enter
int
icebp
imul
push
loope
cwtl
xchg
out
cmp
push
repz
pop
test
jl
lret
dec
fsubp
in
int
adc
add
ficomps
xchg
imul
dec
mov
cld
add
push
pop
mov
cli
jo
in
scas
sub
fistpll
test
les
mov
jmp
inc
dec
pop
lret
or
cmp
stos
out
shrb
xchg
sub
fnstenv
sbb
jns
mov
cmp
jnp
popa
inc
add
sarl
repz
lahf
mov
lret
or
pop
ja
jb
xlat
lods
jmp
data16
xor
or
xchg
or
clc
popf
rcrb
inc
popa
js
pop
jbe
cmp
ret
jl
insl
je
add
shr
pusha
mov
out
gs
sti
mov
or
cld
nop
ret
das
and
push
inc
pop
jno
cwtl
idivl
cmp
xchg
mov
orb
jno
jae
jbe
je
hlt
pop
add
add
daa
neg
popa
cmp
ret
mov
jle
mov
dec
push
jmp
mov
fisubrl
sub
arpl
push
js
jge
mov
orl
sub
sahf
jb
and
add
dec
inc
sub
cmc
sarl
pop
push
arpl
sbb
push
mov
dec
jno
repz
das
push
das
je
dec
and
xchg
xor
add
fldenv
hlt
fld1
or
mov
jge
dec
sub
lcall
popf
cmp
jne
loopne
icebp
sub
or
pop
mov
movsl
mov
ljmp
sahf
aas
xor
lret
jp
push
add
int
add
add
sbbb
cs
sbb
adcb
adc
push
mul
ds
add
cmp
dec
add
addl
mov
scas
aad
repnz
in
pop
push
imul
jne
mov
fildll
aad
das
rcl
add
jle
loopne
pop
cmp
gs
imul
push
or
adc
aam
int3
adc
testb
add
pop
sti
push
mov
mov
mov
jle
fistpl
push
daa
sti
and
sbb
cmp
jecxz
setns
xor
mov
pop
sbb
testl
dec
stos
inc
or
pop
sub
fisubrs
lea
xchg
cli
orl
add
ds
xlat
call
jg
lds
divl
icebp
sti
mov
mov
shll
lret
out
rcll
leave
mov
les
mov
test
dec
out
pop
cld
aaa
pop
push
arpl
or
stc
jp
cmp
jmp
push
div
adc
adc
cmp
mov
push
fucomp
aad
orl
in
dec
out
dec
cmc
inc
cmpsl
or
shrb
es
adc
or
and
mov
les
iret
mov
mov
std
sbb
loope
push
iret
aam
mov
bts
pop
cmp
cmpsb
cmp
test
fsubrs
fwait
dec
push
in
sbb
cmc
les
and
add
cmpsl
pop
scas
lcall
sub
mov
push
jne
orb
out
pop
push
jns
dec
mov
push
enter
iret
cmpsl
fistl
jmp
fmul
jecxz
pop
das
dec
push
loope
sub
push
push
xchg
xchg
sub
data16
icebp
xchg
mov
aam
xchg
dec
into
icebp
mov
push
or
dec
mov
std
xor
xchg
dec
loopne
push
les
mov
dec
or
fwait
push
jae
jnp
pop
cmpsl
es
cmp
mov
testb
std
orb
or
cltd
aad
mov
lods
sub
cmpsb
push
fiaddl
stos
cltd
push
inc
add
xor
call
or
stc
pop
fstpt
add
push
mov
jne
and
inc
push
mov
xchg
mov
dec
fildll
xor
fdiv
test
jno
sbb
mov
push
add
ja
call
or
and
mov
ljmp
add
mov
pusha
xlat
rorl
lahf
jmp
mov
mov
push
pushf
and
mov
aam
mov
pop
adc
sbb
rclb
icebp
dec
gs
jmp
dec
mov
rcrb
shll
pop
into
add
addr16
lret
das
add
dec
jno
movsl
roll
jnp
dec
sbb
scas
es
push
push
jb
scas
addr16
movsb
fnsave
das
cmc
adc
cmpsb
or
out
lods
sbb
sub
xchg
push
imul
xchg
arpl
cmpsb
aas
lock
pushf
jecxz
mov
mov
mov
aaa
ljmp
push
lea
orl
mov
les
mov
mov
cmp
cmc
ret
jmp
and
mulb
fdivr
stos
shll
add
push
jge
cltd
test
push
js
bound
les
outsl
fs
lods
popa
push
and
stos
outsl
movsl
jg
mulb
in
cmc
cmp
xchg
sub
dec
or
xor
mov
xchg
and
leave
decb
xor
lea
js
gs
mov
cmp
or
loope
xor
js
sub
cmp
dec
cltd
hlt
lahf
lcall
mov
nop
data16
cmpsb
in
mov
filds
fcoml
and
push
push
xor
es
xor
or
lahf
fmul
icebp
cmp
add
adc
inc
sbbl
fs
xchg
and
and
cmpsl
das
xor
xchg
das
sub
decl
arpl
jg
xchg
inc
iret
sahf
mov
nop
adc
pop
mov
decb
cltd
xor
insl
inc
leave
xor
xchg
xchg
andl
fmull
push
test
arpl
jp
movb
lock
mov
je
sbb
push
push
adc
repz
xor
cli
mov
stos
int
sbb
add
cmp
inc
add
push
loopne
xchg
outsl
xchg
mov
xchg
ds
mov
xor
and
jo
cmpsb
pop
fs
ja
push
cmp
imul
insl
incb
ljmp
push
cs
mov
add
pushl
adc
stos
mov
repz
inc
jbe
insb
out
sub
and
scas
icebp
mov
ds
sbb
lcall
mov
pop
sub
push
rolb
add
ja
notb
mov
mov
lret
stos
push
jle
loopne
mov
aad
lock
xchg
push
or
mov
out
or
jge
in
sbb
push
iret
mov
aaa
mov
popa
daa
sbb
push
jae
arpl
mov
push
subb
popf
sub
or
fiaddl
iret
cmp
pop
push
jbe
test
jae
sahf
ret
js
fisttpl
pop
shrb
jp
pop
xchg
aad
cli
rcll
jmp
jecxz
push
cmp
mov
sub
adc
adc
pop
int
cmp
insl
test
mov
mov
fwait
sub
jl
filds
and
lods
incl
sbb
xor
jbe
movsl
xchg
dec
inc
inc
loop
jecxz
dec
xchg
add
push
dec
push
test
cmp
xchg
dec
sti
popf
addr16
push
ljmp
dec
in
aaa
fmul
dec
fisttpl
dec
cmp
adc
fdivs
inc
fwait
ljmp
pop
mov
fisttps
inc
cltd
push
xchg
addr16
adc
adc
fiaddl
or
dec
mov
call
orl
shll
leave
or
fisubrs
aaa
stos
cmpsl
adc
ss
cmpsl
sub
pop
pop
push
testb
sub
cli
jns
rolb
cmp
outsb
not
mov
stos
jb
adc
xor
sub
cmp
bound
xchg
jecxz
mov
dec
cmp
xorl
and
dec
pop
std
out
stc
and
dec
pushfw
inc
gs
out
jno
and
and
mov
scas
fiadds
test
ret
xchg
and
out
aam
push
pop
mov
out
in
or
incl
lods
cwtl
test
rcll
sbb
jb
adc
cmp
ljmp
fmul
cmc
inc
pop
ds
mov
popf
or
in
push
jae
cmp
sbb
cmp
mov
sbb
repnz
loopne
pop
cwtl
or
xorb
xlat
mov
stos
outsl
notl
or
fs
fcom
sysenter
imul
loopne
mov
mov
test
mov
ret
xchg
notl
pop
aas
idivl
mov
or
ljmp
fldcw
inc
adc
outsl
xchg
shrl
cmp
and
jp
outsb
dec
jge
fisubs
or
or
call
sub
insl
xor
jne
out
fcomps
mov
mov
sub
fidivrl
imul
outsl
shlb
or
push
lcall
daa
xor
ja
iret
cwtl
pusha
repnz
insb
in
push
mov
push
cmp
in
mov
out
stos
jnp
xor
sti
sbb
adc
mov
ret
push
addl
inc
out
lods
dec
xchg
dec
adc
pop
out
dec
fmulp
idivl
pop
dec
notl
or
loope
pop
pop
shll
fdivl
mov
push
mov
std
pop
in
mov
imul
int3
sbb
sbb
add
fstpl
mov
imul
adc
xchg
clc
sub
mov
pop
or
dec
jmp
test
adc
cmp
movsb
lds
aas
cmpsl
mov
xor
cltd
or
adc
jmp
out
popa
cmpsb
jg
mov
adc
sbb
push
imul
mov
jl
mov
ja
add
dec
fisubl
pop
or
adc
repnz
push
or
mov
iret
push
jle
rcll
jl
in
jno
iret
push
mov
mov
lods
repnz
loop
enter
jo
jp
jecxz
jle
xor
scas
int
mov
jecxz
dec
lds
sub
js
pop
lods
cmpsl
arpl
aad
and
mov
inc
push
or
rcrl
ficompl
sbb
push
out
jl
das
mov
movsl
jbe
je
cmp
insb
and
xor
push
adc
outsb
fbld
fs
push
enter
jp
dec
cmp
out
push
lock
dec
jae
adc
sti
cmp
push
mov
or
add
sbb
push
int3
push
push
fwait
mov
adc
jnp
in
in
adc
push
repnz
sub
lret
cmp
insb
xor
pop
dec
jae
iret
sub
sarb
mov
lret
test
sub
roll
faddl
nop
mov
cmpsl
test
lahf
sbb
fwait
mov
in
add
push
mov
repnz
into
mov
lret
inc
or
ret
mov
les
push
mov
mov
sahf
call
mov
mov
aaa
dec
loop
lods
pop
push
fldcw
pop
ljmp
xchg
cwtl
les
in
sbb
fwait
mov
aad
cmp
push
test
xorb
int
scas
lea
aaa
mov
dec
push
lahf
cmpsb
push
jge
adc
cmpl
sbb
dec
out
orl
daa
jl
xchg
lods
xlat
lcall
int3
and
push
sub
mov
sub
or
dec
daa
and
dec
fisubrs
mov
sti
dec
jb
shll
xchg
inc
pop
pop
repnz
test
ds
pop
jne
inc
lock
push
xchg
dec
dec
dec
stos
imul
loop
push
je
lock
sbb
cwtl
push
lcall
inc
inc
push
rolb
mov
aas
jmp
add
push
and
gs
dec
outsl
inc
mov
fwait
jmp
mov
das
das
xlat
sbb
mov
adc
repz
xchg
mov
jo
lods
fwait
xchg
or
loop
loope
mov
push
in
fst
jns
pusha
sbb
cs
loopne
scas
xchg
sub
roll
push
inc
inc
lods
int3
lea
cmp
adc
xor
clc
ds
int
lret
mov
cmc
or
jmp
int3
sub
dec
add
popa
or
sbb
xchg
xchg
in
pop
dec
jl
jmp
stos
jp
adc
sbb
jb
or
cmp
shlb
jo
or
dec
pop
push
cmpsl
and
out
pop
xchg
mov
mov
push
loop
xor
pop
dec
pop
xor
add
push
fdivrl
dec
cmc
call
push
scas
jmp
jg
mov
sar
test
xor
sub
test
ret
iret
xor
in
fwait
js
insb
lahf
pusha
and
cmp
pop
repz
and
mov
in
adc
es
adc
xor
loopne
adc
xchg
fabs
ljmp
call
aas
dec
jle
xchg
js
mov
addr16
insl
aaa
arpl
mov
or
xor
mov
gs
adcl
out
sbb
sub
sub
dec
add
push
push
clc
mov
mov
in
mov
pop
cld
in
add
stos
xchg
and
leave
cmp
pop
jecxz
jb
mov
and
add
cmp
push
jle
xchg
jle
roll
jo
popa
aam
push
add
dec
pushf
push
jmp
add
pop
inc
fmul
pop
cli
mov
jmp
iret
fnstcw
jbe
out
or
fisubrl
shlb
mov
lds
jge
sub
sub
insb
out
movsb
inc
in
adc
std
dec
int3
push
and
into
or
jmp
test
adc
cmpsl
jp
xlat
inc
sti
fildll
jle
jnp
jb
movsl
insl
or
inc
push
jecxz
jno
cld
repz
lods
out
cltd
pop
xlat
testb
mov
or
cmp
and
add
xchg
pop
sbb
sahf
ret
jbe
movsl
or
imulb
pop
mov
inc
or
add
adc
inc
xlat
mov
lahf
xchg
mov
inc
loopne
mov
mov
sub
sub
stc
cmpsb
addl
into
add
mov
clc
jns
loopne
and
mov
and
dec
cmp
sbb
loop
mov
jmp
sbb
inc
push
imul
mov
addb
cs
loop
pop
bound
xlat
mov
jb
xchg
sbb
pusha
ds
cmp
mov
sub
fnsave
das
xchg
or
xchg
fdivs
xchg
sub
je
adc
ss
mov
ds
xchg
insb
xchg
out
cmpsl
xor
mov
jge
pop
je
ljmp
orl
test
sbb
jae
mov
icebp
mov
pop
xchg
jmp
push
xchg
or
and
out
push
fisttpll
cs
jns
in
sbb
bound
aaa
leave
sub
rclb
mov
push
mov
mov
jne
aas
mov
xor
jle
lret
xchg
jo
push
xchg
inc
push
xlat
add
roll
push
mov
repz
stc
or
push
out
mov
icebp
push
aad
sahf
inc
scas
mov
xor
mov
push
cmpsl
inc
push
and
sub
mov
pusha
roll
out
jp
gs
push
ret
ljmp
mov
add
fs
std
test
sbb
mov
or
jp
hlt
lods
add
in
inc
ftst
and
xor
cs
mov
stos
cmp
or
or
push
sbb
cmp
mov
sbb
mov
stos
adc
jge
in
push
mov
cmpsl
js
lock
repnz
fsubl
mov
or
add
sbb
add
dec
js
wrmsr
pop
jnp
mov
add
cltd
lds
add
lods
imul
sbb
pop
mov
lea
inc
mov
push
lds
dec
mov
jno
cli
mov
rorl
stos
movsl
out
bound
push
sbb
js
pop
xchg
sbb
stos
cmpl
jne
inc
mov
dec
or
addr16
xchg
je
ret
test
and
jmp
shrl
adc
inc
push
push
cld
idivl
xchg
cld
xchg
mov
adc
je
jnp
je
js
fists
xor
jmp
mov
push
xchg
ror
add
cmp
pop
adc
ret
pop
out
cmp
pop
push
jno
inc
insl
push
shr
bound
inc
mov
adcl
add
enter
inc
fwait
popa
aam
mov
lcall
gs
addr16
adc
lods
jb
inc
and
shll
test
adc
fstps
mov
mov
fcoml
arpl
in
test
jge
inc
fidivrs
rcr
push
dec
cmpsb
or
inc
les
pop
pop
scas
sbbl
repnz
and
sbbb
jne
call
jne
hlt
jno
dec
andl
push
add
out
push
in
push
sbb
es
out
gs
or
mov
add
jns
mov
clc
aaa
jbe
add
aaa
jbe
loop
cmpsb
shll
iretw
movsb
mov
ss
or
push
adc
xor
adc
lds
aam
sbbl
outsl
or
jmp
addr16
dec
stos
data16
xor
sahf
into
mov
add
jo
mov
mov
cmc
jmp
push
aam
dec
jl
int
jg
add
dec
mov
jle
xchg
xchg
stc
aad
sub
stc
jmp
gs
push
and
jnp
dec
int
jmp
sahf
das
mov
mov
rolb
cmp
mov
sbb
lock
cmpsl
pop
inc
icebp
xor
neg
es
testl
jb
cmpsb
jmp
imul
mov
jno
sub
cmp
jmp
mov
xchg
xchg
arpl
add
lea
mov
in
mov
mov
pop
and
enter
mov
mov
fisubrl
fdivrl
je
inc
jmp
ds
pop
add
pop
movsl
sub
in
out
jmp
inc
cmpsb
jecxz
repnz
loop
mov
and
dec
sbbb
sbbb
bound
ficompl
shrl
lret
adcl
iret
xchg
loopne
mov
add
popa
inc
adc
sub
dec
inc
lods
out
xor
pop
shlb
daa
adc
fwait
popa
lock
imul
inc
repz
mov
xor
push
mov
jns
fwait
out
jmp
adc
or
subl
andl
sbb
xchg
adc
enter
outsl
jns
orl
sub
push
pop
cmpsb
sub
inc
out
jb
enter
push
dec
inc
push
xorb
mov
sub
adc
and
jecxz
lea
aad
jns
enter
jp
out
and
daa
cmpsb
inc
inc
in
mov
or
push
pop
imul
cwtl
sub
pop
dec
ss
test
and
mov
sahf
or
cli
gs
dec
ja
flds
out
loope
dec
cmp
xor
out
mov
rorb
out
xor
arpl
xor
pop
jae
sub
rclb
fstps
out
cmp
mov
cmp
mov
mov
sbb
xchg
out
mov
cltd
add
xorl
jge
dec
ds
packuswb
loop
loop
adc
inc
inc
imul
ja
andl
dec
loope
aad
xchg
loop
mov
xchg
push
jge
dec
and
icebp
sbb
mov
mov
inc
pop
push
les
pop
inc
or
jns
mov
cmp
bound
or
divl
cmc
push
sahf
ret
andl
jns
leave
setl
cltd
cmp
jo
sarl
fwait
mov
xor
mov
clc
ficoms
jle
mov
into
adc
dec
dec
out
xor
out
outsl
inc
outsl
mov
notl
outsl
pop
subl
popa
andb
shlb
outsb
dec
jp
add
fcompl
jb
stos
loop
jns
in
xor
adc
mov
cli
cmp
mov
jg
sbb
insb
insb
popa
or
mov
xor
rclb
xor
int
and
into
adc
xor
cmp
jmp
xchg
mov
and
in
in
cmp
dec
pusha
shll
jmp
fwait
pushf
cmp
cwtl
es
insl
jmp
sbb
ret
mov
push
scas
jns
scas
incl
out
dec
sbb
js
mov
jl
dec
ret
insb
jge
imul
fs
dec
push
sbb
cmp
jge
or
jae
int
bound
xor
sbb
xchg
mov
andl
cmp
pusha
mov
add
mov
jne
push
nop
sbbb
cmp
cs
xor
movsl
jbe
stc
xor
cmp
dec
ljmp
pop
push
mov
sahf
push
cmpsb
xor
aam
sub
call
fstps
mov
hlt
scas
sbb
pop
cmpb
daa
icebp
es
jge
push
xchg
dec
sub
pushf
outsb
pop
rcrb
sub
loope
pop
sahf
popa
subb
push
cmp
bound
push
pop
sub
mov
movsl
mov
test
clc
xchg
ds
push
sub
es
aam
dec
cmp
sub
daa
jl
inc
or
pop
es
add
or
fwait
jnp
jle
hlt
test
jle
adc
jg
cmp
cld
pop
push
sub
aam
mov
xor
nop
and
enter
add
adc
lods
lahf
dec
insb
adc
xor
xchg
cld
andl
xor
hlt
inc
pop
sbb
es
add
ficoml
bound
popa
mov
or
and
inc
xor
addr16
ds
cmp
push
push
inc
xchg
push
pop
lods
xor
lret
ljmp
xchg
push
inc
std
xchg
gs
push
scas
data16
push
leave
int
inc
fcomip
fs
mov
sti
imul
in
mov
in
mov
mov
jne
add
jbe
sbb
loop
xchg
xchg
mov
imul
push
cmpb
adc
mov
xor
xor
ljmp
add
les
mov
mov
cmpsl
mov
out
sti
xchg
xchg
dec
dec
mov
sbb
mov
int3
lahf
pop
and
jl
mov
nop
std
dec
loope
mov
xlat
out
jecxz
dec
add
es
mov
jns
and
daa
pop
rolb
je
jle
mov
pop
push
dec
pop
scas
jb
xor
push
add
fdiv
cmpsb
xlat
aas
cmpsl
jbe
popf
push
movsl
mov
mov
int3
ficoml
sub
add
mov
mov
push
popa
das
inc
sub
xchg
out
and
scas
cwtl
xor
cmp
aaa
add
repz
xchg
leave
and
mov
inc
xchg
mov
int3
pusha
mov
cli
fdivrs
je
jge
pusha
inc
mov
mov
dec
loop
mov
xchg
cmp
test
pop
inc
and
sub
jne
repz
aas
out
mov
fisubrs
imul
and
jae
mov
jo
call
enter
add
call
pushf
fsubs
movl
inc
in
out
cmpsb
enter
les
sub
jns
je
xor
adc
ficoml
ret
test
xchg
mulb
and
sub
mov
xor
dec
add
push
pop
jge
insb
xchg
cmp
aad
les
adc
shlb
imul
add
movsb
in
cs
mov
repz
cli
xchg
pop
incl
adc
mov
loope
xchg
jno
xchg
push
xchg
inc
pop
push
adc
push
pop
in
aaa
sbb
loop
repnz
sti
cmp
or
stc
lcall
loope
push
jmp
pop
dec
inc
mov
icebp
popa
daa
pop
fs
fnstsw
mov
fdivrp
scas
mov
test
insb
inc
and
orl
or
stos
mov
fs
rorl
mov
mov
mov
push
fnstenv
ds
jb
mov
or
cmp
inc
push
int3
pop
into
cltd
ret
repnz
dec
insb
lods
mov
jp
push
lds
sbb
jb
outsb
pushf
test
xor
icebp
pop
pop
jle
arpl
cmc
sbb
mov
fbld
test
out
add
inc
icebp
mov
pusha
hlt
pop
xchg
jbe
xchg
mov
and
cmpsb
cli
dec
push
xchg
or
rclb
lods
dec
js
repz
mov
xor
pop
sbb
push
fsubrs
or
cltd
iret
hlt
mov
aad
shll
lahf
xor
mov
sti
push
daa
cltd
add
mov
aas
push
outsb
scas
js
sar
outsl
cwtl
stos
add
dec
mov
fs
push
inc
mov
push
mov
cmp
push
xchg
mov
jbe
jnp
rclb
ret
mov
shr
mov
mov
xchg
sub
push
aas
roll
inc
test
and
shll
popa
imul
adc
nop
les
cmp
in
mov
clc
lock
pop
sbb
add
popf
xor
xchg
jl
xchg
lret
movsb
fs
inc
pop
sahf
call
add
test
xor
shll
ret
mov
or
in
rcl
sbb
js
inc
inc
mov
inc
pop
cmc
and
sbb
into
fstl
pop
jnp
cwtl
dec
and
pop
cld
lods
or
pop
ljmp
mov
push
in
into
mov
cmp
adc
cmpsl
push
push
out
ffreep
jo
js
sbb
cwtl
and
lret
dec
mov
sub
shlb
xor
add
test
xor
stos
sub
outsb
pop
aad
push
stos
dec
pop
ds
cld
sub
mov
lods
xchg
push
jl
push
fcoms
js
pop
loopne
inc
lahf
mov
lock
inc
bound
jmp
imul
aam
leave
xchg
lret
popa
mov
push
adc
sti
jge
cmp
sbb
adc
push
sub
pop
fisubs
jnp
in
loopne
jae
add
test
xchg
ret
das
cmp
dec
sbb
xchg
ss
pop
mov
mov
loop
cmp
mov
out
add
xchg
fcomps
and
pop
sub
int3
dec
sbb
pop
sub
stc
in
mov
cwtl
fldcw
test
mov
mov
fcoml
sub
dec
sub
lds
add
imul
push
add
inc
fisttpll
stos
sahf
outsb
lret
add
into
sub
scas
std
pop
out
ljmp
sar
push
hlt
adc
push
leave
mov
xorl
ljmp
jecxz
decb
les
hlt
xor
aas
mov
push
ljmp
iret
and
add
mov
fldln2
sub
out
xchg
or
dec
adc
ja
das
test
add
movsb
sbb
sbb
push
rclb
mov
loopne
dec
movsb
fimull
popa
iret
mov
pop
adc
mov
jo
jecxz
stos
and
push
pop
push
push
loope
and
push
sbb
lds
pop
fdivs
popf
jno
pop
xgetbv
pop
scas
mov
pusha
aam
xchg
dec
popa
and
jg
scas
sbb
and
popa
sub
push
cmp
pop
jnp
popf
push
mov
fdivr
lea
hlt
test
pop
xchg
xchg
dec
fld
in
int
mov
dec
es
cmp
into
and
les
fdivrs
dec
int3
lods
mov
insb
stc
or
pop
inc
push
xchg
scas
mov
loope
rclb
mov
les
mov
cmp
fisttpll
lds
fisubrl
lea
test
popa
mov
jbe
mov
cmpsb
adc
movb
mov
in
jle
inc
mov
adc
pop
test
or
and
xchg
pop
int
mov
stos
dec
popf
add
clc
test
int
mov
push
data16
pop
nop
sub
sbb
outsl
pop
ljmp
fmuls
pushf
cmp
and
fwait
mov
ds
inc
and
jnp
out
enter
fildl
add
sbb
or
push
js
in
out
jae
adc
add
rclb
loope
push
icebp
xlat
lds
mov
and
pop
mov
mov
cs
loopne
mov
jb
mov
add
popf
movsb
jnp
cmp
hlt
pop
mov
lahf
xchg
or
cmp
xor
or
dec
das
mov
sub
and
sub
mov
rcr
sti
aam
xchg
push
jl
sbb
in
jmp
in
loope
insb
xor
in
mov
mov
mov
ficoml
adcb
push
jne
pop
cmp
pop
outsl
call
test
out
mov
mov
add
pop
pop
scas
jb
les
scas
clc
inc
sub
xchg
cmp
pop
dec
fbld
sti
inc
sub
sub
aas
jae
mov
mov
xor
jne
jge
mov
outsl
insl
sbb
filds
std
fisubrs
mov
dec
outsl
cmc
das
daa
mov
mov
sub
cld
popa
jl
add
js
lcall
lods
sbb
jne
cmc
int
cmc
cmpsb
add
testl
sbb
push
stos
cmpsl
lret
sub
xor
dec
mov
ljmp
cmp
sbb
repz
cli
add
int
addr16
std
mov
out
push
pop
enter
popf
dec
test
ljmp
xor
test
mov
push
add
add
cmp
fs
sbb
cmp
xchg
xor
jmp
je
je
popa
int
shlb
in
pop
mov
popw
adc
cltd
psubsb
sbb
pushf
push
outsl
imul
inc
lods
ljmp
mov
in
mov
out
clc
mov
adc
mull
mov
cli
pushf
adc
pusha
scas
inc
cmp
imul
and
movsl
cld
lret
cmpsl
fsts
add
ljmp
scas
and
inc
mov
pop
iret
aam
pushf
arpl
es
xchg
or
pop
push
sti
or
push
cltd
jmp
divl
xor
loope
adc
or
lret
aaa
jbe
cmpsb
sbb
pop
lret
pop
fimull
dec
int3
jle
jle
xchg
rolb
xor
ret
ficomps
jmp
scas
xor
ret
mov
negb
sub
shlb
xlat
push
iret
adc
out
lea
cmp
adc
jmp
and
xor
add
lret
adc
mov
les
fldl
cld
repz
push
xchg
push
mov
xor
add
cld
fistps
in
jns
mov
ss
adc
iret
sub
icebp
rdmsr
xor
jecxz
shrb
lahf
or
arpl
or
and
push
lret
lock
add
ret
ss
shll
subb
notb
dec
lods
fdivrs
mov
xrelease
sarb
stos
and
inc
rclb
stc
push
push
and
add
sbb
xchg
xor
sbb
pop
sarb
adc
mov
xor
push
xchg
outsb
inc
test
xlat
adc
sub
mov
inc
mov
inc
out
xchg
aas
pop
xchg
test
int
repz
add
ja
pop
jle
loopne
es
rcrl
xchg
jle
icebp
nop
leave
dec
sbb
dec
mov
cmpsb
push
and
frstor
aas
mov
std
add
dec
jge
jp
dec
mov
or
mov
fistpl
fistl
repz
sbb
imul
es
sbb
rcl
adc
pop
lret
mov
mov
loope
jb
push
int3
pop
rolb
stos
ret
mov
test
dec
test
orl
adc
push
jge
lods
jnp
xchg
mov
fucomp
cld
xchg
xchg
lds
pop
daa
push
cmp
xchg
jno
mov
cmpsl
insl
into
out
in
push
xor
insb
mov
ljmp
std
mov
lds
arpl
int3
xor
or
loop
push
push
mov
sub
xlat
out
sbbb
nop
mov
pop
pop
aad
sbb
in
xor
push
aad
ljmp
pop
dec
sub
xchg
cmp
and
inc
jo
pop
cltd
jno
jecxz
int3
mov
lahf
testb
aam
xchg
push
cmc
inc
pop
or
pop
lods
arpl
jb
mov
rol
lcall
stos
outsl
cli
cmp
in
test
mov
cmpsl
cmc
mov
out
add
jecxz
and
aad
sbb
enter
inc
push
ret
mov
sahf
xchg
cmp
mov
adc
adc
lret
outsl
data16
jo
push
gs
inc
mov
pop
ss
push
xor
lret
xchg
adc
arpl
xor
cs
cli
mov
sbb
cmp
enter
vmovhps
add
xlat
mov
cmp
rclb
dec
sub
enter
add
rcr
ds
fsubrl
jns
shlb
mov
cmpsb
stos
mov
fisttpll
stos
cmp
cmc
pop
adc
fistpl
loope
loope
inc
daa
arpl
lcall
sti
pusha
jno
in
jns
ja
mov
enter
push
loope
sbb
pop
das
adc
es
test
shrb
xchg
ficoml
stc
and
addr16
xchg
sub
in
pop
ret
aam
sub
xor
mov
addr16
into
mov
pop
jo
fmull
sbb
mov
lds
cmpb
aaa
or
dec
sub
rorb
dec
dec
sub
loope
mov
aaa
and
mov
fdivrp
mov
scas
or
mov
aaa
xor
inc
inc
push
mov
or
xlat
jl
add
shlb
outsb
mov
sub
leave
nop
test
sub
stos
add
pop
popa
nop
rclb
push
insb
sarb
fimuls
push
lods
xchg
lds
xchg
lahf
sbb
xor
pushf
loope
xor
repz
cmp
je
lret
xabort
loopne
pop
cwtl
add
jb
xchg
pop
fwait
pop
add
xor
sub
xchg
loope
or
lods
pop
cmp
adc
in
dec
mov
and
das
mov
rolb
mov
popa
pop
jle
push
jno
mov
push
fistl
pushf
rcrb
pop
or
xor
scas
xchg
repz
dec
sbb
pop
out
jbe
cmpsb
subl
push
sahf
ret
repz
bound
or
scas
arpl
cmp
pop
cltd
mov
inc
sbb
xor
jnp
out
xlat
movsb
fs
jp
xor
dec
pop
jne
lahf
xchg
and
fisttps
or
movsb
inc
and
adc
fcomip
xchg
fdivrl
loop
mov
and
imul
mov
es
pop
and
xchg
sbb
fdivrs
jp
or
ret
dec
lret
test
out
adc
sub
adc
imul
push
mov
jnp
cmp
push
lea
out
mov
pop
mov
adc
lret
pushf
dec
cli
sbb
xchg
mov
clc
mov
cli
add
loop
sbb
push
push
cmc
aaa
add
mov
dec
aas
add
and
sub
add
imul
clc
jle
aad
test
mov
loope
cmpsl
cmp
xlat
test
fnsave
pop
cmc
leave
jns
clc
hlt
jecxz
jmp
lock
xchg
push
jo
mov
insb
popa
mov
jb
jmp
dec
shll
fs
in
mov
out
orl
in
cmp
test
sub
sub
jb
mov
call
test
outsl
dec
xchg
lds
fnsave
daa
push
xor
lcall
sub
test
out
subb
pop
sbb
xchg
xchg
mov
orl
sub
or
loopne
add
ds
loopne
xchg
pop
add
mov
jge
repnz
jae
push
add
outsl
fmul
aaa
xchg
fdivr
repz
mov
mov
cmp
out
andb
pop
jg
xchg
sub
cmp
and
jns
mov
or
roll
mov
jl
mov
jnp
roll
iret
jnp
mov
mov
mov
loopne
xchg
sbb
dec
jnp
stc
and
dec
mov
pop
and
repnz
js
sbb
enter
jo
in
jns
sar
in
lcall
into
mov
pop
hlt
stos
add
out
inc
adc
pop
stos
ljmp
pushf
pop
push
sbb
out
cs
out
ljmp
je
shrb
xchg
call
loope
cmpsl
or
roll
das
lods
fisubrl
out
mov
fwait
inc
sub
cld
stc
fildll
push
enter
fucomi
mov
div
stos
cli
sbb
cmp
dec
aaa
mov
out
mov
push
repnz
enter
subl
iret
cwtl
loopne
dec
out
sbb
mov
aaa
lds
and
daa
lods
adc
aaa
pop
push
and
push
jp
and
or
xchg
in
pop
xchg
leave
clc
mov
mov
dec
dec
loopne
shlb
out
filds
jo
lea
mov
push
pop
lods
xchg
cwtl
inc
xchg
test
xor
cmp
mov
jge
mov
push
icebp
cmp
jb
bound
aad
gs
push
sbb
or
popa
and
ud2
das
or
fldl
das
dec
popa
test
in
repz
inc
sbbl
adcl
jg
in
sbb
push
xor
pop
sub
lods
iret
mov
shlb
aad
mov
std
loop
repnz
les
xlat
aaa
xchg
pop
push
pop
mov
push
dec
jmp
sbb
dec
mov
adc
call
pop
add
adc
pop
fmuls
mov
mov
jecxz
in
pop
loopne
jnp
jnp
mov
jmp
mov
es
pop
mov
mov
cmp
sub
inc
pop
stos
pop
popf
add
sub
jmp
mov
mov
les
dec
cmp
cmp
add
shrb
sti
pop
les
fnstcw
aaa
dec
push
cmpsb
bound
jle
enter
push
add
icebp
sbb
popa
dec
jno
es
repz
xchg
fstl
movsl
jmp
daa
out
and
and
pop
xchg
jb
or
in
loope
sub
jns
cmp
sbb
jl
jmp
jb
scas
loop
add
lea
pop
sub
and
rcl
xor
sub
call
xor
push
outsb
int
mov
cmpsb
mov
mov
mov
sbb
shll
push
int
lea
aad
pop
rorl
adc
mov
fs
mov
push
mov
sarb
mov
dec
fistpll
lea
jecxz
sbb
sbb
outsl
add
sbb
test
cmc
cmovnp
je
gs
pop
dec
test
movsl
andb
xchg
sbb
lret
dec
sbb
shll
xor
imul
subl
and
shlb
addr16
push
inc
ret
ret
dec
loope
xor
push
sub
aad
and
int3
mov
fists
mov
mov
fcoml
xchg
adc
and
cs
inc
or
xor
gs
out
dec
or
dec
testb
push
xchg
push
dec
or
test
pop
ror
movlps
int3
and
and
add
pusha
pop
cmp
fmul
cmc
mov
sbb
mov
add
mov
enter
dec
cli
shl
lock
add
push
lods
repnz
fsubrs
jno
or
and
ja
jge
aas
push
cmp
jb
sbbl
test
outsb
adc
push
add
popa
push
ret
enter
ret
jnp
sub
jp
mov
xchg
push
divl
cmp
movsl
pushf
cmpsb
pmulhuw
cs
jo
mov
sub
or
cli
repz
and
int3
lock
mov
out
in
push
in
pop
test
xlat
dec
xchg
insl
scas
add
repnz
in
pop
fsubrs
icebp
jo
dec
stos
fsubl
loopne
or
pop
fs
sub
imul
mov
clc
arpl
or
mov
xchg
es
mov
push
or
push
sbb
xchg
xor
lea
inc
pop
ds
es
or
ja
aad
push
adc
jp
std
xchg
xchg
xchg
jp
test
dec
loopne
in
test
jno
or
push
mov
inc
orb
test
adc
lcall
ror
add
gs
ret
sbb
cmp
scas
dec
mov
add
dec
rclb
add
mov
inc
inc
loopne
imul
test
cmp
ss
into
data16
cld
xchg
push
jb
call
sbb
outsb
bound
dec
pop
iret
pop
push
sbb
mov
lock
pop
outsl
mov
push
jae
rcrl
int3
popa
bound
cwtl
mov
scas
jmp
xchg
in
fcoms
push
cmp
mov
mov
test
mov
cwtl
push
pushw
sbb
pop
and
adc
mov
or
xchg
jp
call
das
mov
jmp
pop
sbb
xchg
popf
dec
mov
xchg
xchg
mov
loopne
mov
sub
jge
movsl
fisubrs
nop
sub
test
or
mov
shlw
sti
cmc
or
test
pop
adc
in
in
mov
mov
ja
mov
and
mov
push
xor
insb
and
rolb
lods
out
lcall
fldt
sub
mov
mov
inc
cmp
and
mov
nop
jbe
mov
pop
mov
mov
out
cmc
cmpsb
std
sbb
mov
movsb
fs
xchg
mov
inc
xchg
call
sub
repnz
inc
repnz
pusha
mov
scas
stos
push
lea
scas
xor
adc
std
mov
shll
xchg
xchg
dec
jns
add
add
out
addb
mov
xor
bound
sub
mov
pop
loopne
mov
in
cwtl
mov
sbb
sahf
mov
mov
out
xchg
pop
push
pop
in
or
xchg
cmp
or
out
pop
xchg
inc
mov
andl
mov
jl
pop
insb
mov
inc
mov
ds
add
inc
in
in
push
add
or
ljmp
pop
dec
aad
mov
rcr
xchg
mov
int3
push
dec
cwtl
sahf
enter
cmpsl
pop
aas
lahf
fcomip
bound
mov
imul
std
mov
movsl
push
dec
pop
rorb
push
rcrl
sbb
cmp
sub
push
lcall
sub
fildll
dec
cli
out
addr16
pop
xchg
and
push
mov
pop
inc
aaa
fnstenv
lcall
imul
mov
or
and
fmull
pop
jae
or
sti
and
xor
stos
mov
popa
xor
ret
or
insb
lcall
je
dec
push
mov
xorl
gs
xor
int
sbb
sarl
add
lods
into
in
mov
xchg
cmp
push
pop
mov
in
cmpsb
inc
mov
int
add
dec
into
push
dec
add
jge
lret
pop
punpcklwd
shll
scas
mov
addl
inc
dec
in
pushf
aaa
or
sub
cmpsb
adc
test
mov
xor
xchg
clc
add
repnz
inc
lods
sahf
insl
mov
mov
fimull
fldl
mov
push
pop
in
les
add
aam
mov
mov
mov
xlat
xchg
andl
sti
into
cld
aad
jle
pop
rcrl
mov
mov
mov
cld
aas
xor
fcomps
fimull
adc
mov
sbb
stos
mov
mov
mov
and
scas
mov
mov
pop
adc
arpl
jge
lahf
outsl
sbb
mov
repnz
es
xor
jle
xor
push
mov
jb
jmp
mov
pop
popf
vmread
sub
das
in
jne
int
mov
jge
lret
push
mov
sbb
mov
adc
aaa
or
call
sub
mov
rcl
stos
push
fdivl
aam
lret
jg
pop
push
or
push
cmp
xor
inc
dec
jecxz
daa
dec
xor
movsb
mov
cmpsb
repnz
movsb
inc
dec
fidivs
adc
insl
lea
pusha
cmp
sub
add
pop
or
cmc
pop
or
ficoms
lods
push
jmp
mov
xor
int3
and
mov
mov
das
ret
clc
add
mov
sbb
mov
push
add
das
mov
int3
cld
mov
in
std
jbe
xchg
push
sub
scas
add
dec
outsl
jp
sub
dec
push
jmp
out
jge
leave
ret
arpl
in
rcrb
mov
test
pop
pop
test
arpl
or
or
loopne
rcrb
push
inc
or
pop
jnp
add
mov
testb
out
mov
add
adc
mov
and
ljmp
xchg
mov
loopne
jg
shl
lret
in
inc
push
sub
imul
push
sarb
xor
or
pushf
paddusb
mov
sub
mov
xor
mov
fcom
and
xlat
rcrl
fildl
das
cli
jg
pop
ja
addr16
inc
jmp
scas
loope
cs
xchg
xchg
js
xor
pop
or
cwtl
jb
in
incl
ret
cmp
cmc
sub
pop
test
cmp
and
push
outsb
jbe
sub
sbb
pop
fists
xor
pop
push
mov
sub
jg
dec
test
pop
lea
shlb
inc
push
and
pop
test
xchg
std
sub
lock
adcb
inc
mov
sbb
movsl
fcompl
jmp
jl
xlat
add
push
enter
fwait
pop
pushf
daa
cwtl
jne
lcall
and
loopne
movsb
inc
pop
lahf
inc
adc
jae
bound
mov
jno
inc
mov
jp
out
pop
stos
scas
xchg
adcl
and
mov
push
mov
and
push
xchg
pushf
push
dec
fmulp
fcoml
mov
xlat
cmpsb
mov
loope
cli
mov
fbstp
daa
popf
mov
xor
stos
or
pop
push
push
push
inc
mov
and
pop
xchg
data16
adc
push
cld
test
lock
jns
pop
aas
ja
push
push
int3
mov
lahf
mov
jecxz
shlb
lahf
jo
pop
jnp
loopne
sti
cltd
mov
fmuls
in
popa
test
nop
xor
jnp
xor
dec
loop
or
pop
sub
jns
pop
sbbb
adc
mov
iret
mov
pusha
mov
jmp
aad
inc
pushf
addl
cmc
lahf
push
mov
jl
pusha
push
xor
pop
jb
sbbl
hlt
or
shlb
stc
sbbl
js
mov
mov
mov
cmp
popa
or
test
cwtl
cmp
or
mov
xor
cmp
inc
sbb
negl
or
or
addr16
clc
jp
push
out
andl
push
es
lcall
data16
aaa
and
dec
testl
pusha
iret
sbb
test
mov
push
jb
arpl
stos
inc
pop
xchg
add
test
out
lret
jb
mov
jo
fisttpll
icebp
jne
cmp
cltd
gs
pop
push
dec
notb
or
sub
xchg
ret
stos
or
inc
jecxz
fistpll
enter
sbbb
push
push
push
jl
inc
int
and
xor
out
and
add
or
sub
fildll
fwait
mov
enter
cmp
sbb
hlt
push
dec
sbb
lds
add
pusha
dec
push
fistpl
sahf
gs
aas
les
ja
add
mov
xorb
sbb
jmp
movsl
pushf
ja
cmpsl
shrl
xchg
enter
xor
mov
leave
xor
lods
add
repnz
mov
mov
inc
xchg
inc
xchg
jp
sub
movsb
add
daa
nop
nop
push
cmp
bound
bound
jo
cmp
or
stc
call
loope
inc
sbb
add
pop
outsb
sub
fisubs
mov
push
add
mov
ja
sbbl
and
pop
js
shll
insl
aam
push
mov
out
lods
dec
or
pop
adc
ds
mov
imul
inc
pop
mov
mov
xchg
les
or
in
dec
js
inc
bound
or
out
scas
mov
push
mov
jbe
outsl
and
clc
dec
test
pop
inc
cwtl
inc
cmc
jmp
sbb
ret
xchg
fwait
out
jns
mov
dec
mov
cmpsl
pusha
sub
xor
adc
inc
jns
outsl
ret
dec
in
rol
sub
loop
addr16
mov
fcoml
add
lods
rorl
cmp
sub
or
shll
int
or
stc
call
leave
xchg
xlat
adc
sbb
sub
pusha
adc
lds
cli
ret
sub
stc
fcomps
pop
add
add
mov
add
pop
pop
addb
xor
popf
out
inc
sub
test
jl
sbb
mov
or
inc
jbe
scas
loop
into
push
orb
out
cmpsb
jecxz
fisubl
out
cld
loope
es
in
jle
pop
out
add
lea
out
add
or
pop
ljmp
test
cmp
iret
jno
add
in
jg
insb
pusha
mov
sbb
push
ret
mov
jp
icebp
insl
push
jne
sbb
mov
fsubr
scas
fisttpll
push
sahf
in
das
rcrb
sub
dec
push
lret
mov
out
imul
lods
push
daa
test
and
repnz
lods
loope
mov
in
inc
mov
jno
movsl
sar
scas
aam
jb
stos
cmp
in
sar
mov
sarl
push
mov
subl
inc
aas
ret
sti
jns,pn
outsb
xor
jge
mov
push
in
fadds
add
and
fistpl
sbb
cmc
xchg
xchg
xor
sbb
inc
mov
in
push
inc
xor
xchg
xchg
xchg
jo
jmp
in
push
mov
sahf
andb
sub
xor
loope
add
xor
and
aam
dec
add
inc
xor
cmp
fdivrs
mov
xor
jns
hlt
or
and
sahf
jp
clc
ss
mov
shrl
hlt
mov
das
sub
imul
fwait
test
or
fsubrs
bound
jns
mov
push
mov
jecxz
inc
stos
fs
mov
pusha
sub
cmpsb
sahf
jbe
pushf
pushf
xor
or
aas
adc
adc
jbe
and
mov
movl
mov
sahf
mov
mov
sub
fwait
adc
mull
mov
pop
mov
or
dec
rol
mov
stos
push
clc
xchg
jl
fmuls
mov
sub
repnz
repz
inc
lods
mov
enter
xor
mov
sub
insb
mov
inc
in
and
mov
pop
cmp
adc
lds
jne
sti
mov
xor
mov
rcrb
or
mov
xchg
cmp
ucomiss
xor
dec
movsl
sbb
sbb
mov
divl
ffreep
fs
mov
rcll
mov
in
dec
or
fnsave
cmp
pop
pmulhw
dec
adc
adc
mov
mov
sbb
movsl
lcall
and
cmp
and
push
mov
xor
sub
jbe
dec
xchg
and
mov
enter
cwtl
sub
nop
pop
xor
push
push
adc
cmpsb
xchg
pop
test
lea
call
mov
cld
negb
aad
movsl
pop
push
xchg
cmpsl
push
pop
jle
jl
and
aas
sub
mov
add
cli
push
test
push
roll
sbb
mov
pop
cmpsl
sbb
lahf
mov
cmp
lret
lcall
clc
imul
jb
adc
push
lock
jecxz
or
add
or
cmpsl
xchg
cmc
dec
jecxz
fcmovbe
xchg
xchg
lcall
sbb
or
and
mov
repz
imul
jns
bound
out
add
and
pushf
fbld
pop
shrb
insb
adc
sbb
orb
test
add
icebp
sub
adc
xorl
test
test
xor
inc
push
stos
dec
aam
loopne
pop
loopne
mov
pop
inc
sbb
icebp
cmp
ret
inc
cmp
jno
add
jo
jp
inc
adc
int
jb
imul
hlt
es
pop
jno,pt
insl
inc
xchg
dec
rcrb
aam
repz
out
shr
push
jns
jae
xchg
mov
pop
mov
fs
xor
push
mov
mov
fistpll
dec
mov
push
daa
cmp
movsb
add
shr
sub
jecxz
in
popa
int
jae
gs
and
into
push
and
jo
add
cmc
pop
and
outsb
mov
clc
cmc
fcom
xchg
dec
push
pop
int
adc
lods
movsl
shr
arpl
sbb
cmc
rolb
clc
ret
arpl
or
xchg
or
fmuls
ja
jg
data16
mov
sub
xchg
mov
cs
or
jno
out
sbb
mull
pop
cmp
push
idivl
int
in
push
lods
sbb
push
adc
xchg
xchg
daa
mov
push
movl
push
pop
nop
dec
lea
fdiv
cmp
fmull
add
mov
leave
or
xchg
xlat
cmpsl
insl
ds
fcompl
les
fcomps
lods
sbb
add
add
cmp
or
out
daa
in
jecxz
les
shlb
ficompl
out
mov
mov
xchg
dec
stc
inc
add
push
cmpb
xor
xor
sbb
pop
std
push
popf
dec
and
pop
les
sub
xor
mov
mov
mov
inc
add
jg
mov
scas
aam
and
jp
mov
scas
jmp
mov
lds
insb
pop
jmp
adc
inc
xchg
daa
out
add
iret
jo
inc
stc
jo
push
dec
adc
dec
mov
adc
pop
cld
sbb
scas
mov
test
add
out
pop
xor
jb
pop
repz
testb
sbb
movb
sub
andb
mov
outsb
and
mov
mov
xor
pop
lock
popa
movsb
dec
lds
ret
pop
xchg
insb
ret
pop
mov
add
je
xor
mov
add
movsl
cld
dec
pushf
aam
xor
mov
add
dec
and
xchg
cmc
test
mov
lahf
mov
out
mov
into
jecxz
sti
aas
mov
icebp
push
addr16
stos
loop
icebp
in
imul
cmpsl
mov
ljmp
inc
jns
add
or
dec
xchg
or
add
sbb
int3
stc
sbb
lods
adc
or
sub
xor
sbb
push
mov
adc
xor
xor
or
mov
aad
daa
cmpsb
clc
lcall
pusha
pop
jnp
dec
shrl
es
mov
push
lods
mov
stos
hlt
mov
addr16
out
fmuls
ss
and
aaa
add
mov
cmp
insb
out
adc
pusha
mov
mov
xchg
rol
dec
sbb
xor
jg
roll
movsl
shlb
lret
das
in
arpl
movsb
cltd
jae
adcl
bound
aaa
mov
adc
repz
add
adc
insl
push
xchg
iret
test
rol
into
push
sub
pop
in
jo
clc
push
pop
pop
fstl
aam
rol
cmp
and
mov
and
xchg
xchg
cmp
mov
les
cmp
dec
scas
shrl
adc
in
sti
pushf
subb
sub
mov
sbb
cmc
and
pop
dec
xor
jle
xchg
or
outsl
jle
pushf
test
and
jae
mov
cmp
lods
js
rcrb
out
fstpl
xor
mov
dec
mov
mov
ja
mov
and
jmp
movsb
or
jle
popa
add
cmpsb
adc
loop
cmp
ljmp
outsl
lret
pop
sbb
lods
inc
test
jae
ja
mov
sub
cmpl
pop
into
add
je
dec
cmc
loop
cli
test
nop
mov
out
fistl
ljmp
pop
inc
push
daa
sbb
add
inc
cwtl
dec
and
push
mov
adc
imul
aas
shll
cmp
movb
mov
push
pop
addr16
jb
movsl
fucomip
stos
xor
jecxz
sbb
stos
rorl
fmuls
int
mov
mov
adc
aad
test
rcr
add
sbb
xor
push
or
cmpsb
out
mov
mov
pop
and
cmp
lock
sbb
sar
xchg
sbb
jl
sub
jge
imul
inc
bound
dec
jno
mov
popa
into
fisubrs
and
rcrl
gs
cmpsb
test
adc
test
push
xlat
jb
pusha
imul
xor
enter
fimuls
lcall
popf
fimull
dec
dec
out
sbbb
in
test
pop
lahf
popf
dec
sbb
mov
fnstenv
shll
dec
cmp
popf
or
mov
xchg
push
fistl
push
ret
push
and
or
push
adc
jb
cmp
mov
sahf
push
fiadds
fistl
aad
decb
mov
mov
enter
cltd
mov
fidivrl
dec
or
imul
fistps
fs
jl
es
out
ss
or
sub
arpl
stos
sub
sbb
inc
mov
stos
jne
inc
stos
mov
xchg
jno
jmp
or
cmpsl
js
lea
mov
arpl
jo
pop
sub
inc
sub
jge
leave
stc
dec
xchg
push
addr16
pop
pusha
and
loop
jle
pop
pop
pop
sub
repnz
xor
pushf
xchg
inc
push
adc
es
cmp
pusha
add
jne
daa
pop
fld
imulb
xchg
mov
inc
xor
fdivrl
lods
shr
and
and
lds
and
in
in
mov
loope
mov
pushf
in
xorl
es
mov
pop
bound
cmp
scas
pop
or
ret
push
and
mov
mov
mov
fs
subb
jno
call
sbb
subb
aam
imul
dec
or
sub
mov
or
xchg
and
cwtl
push
pop
push
sti
fistl
dec
pop
scas
inc
dec
mov
adc
fisubrs
mov
cmc
sub
data16
mov
sub
inc
clc
aad
mov
sarb
inc
mov
or
mov
imul
jl
dec
popa
pop
fbstp
and
adc
nop
lret
arpl
repnz
add
mov
jge
scas
lods
xor
shlb
scas
iret
xchg
movsl
out
loop
mov
rcr
in
jo
andb
sub
fs
jns
stos
jne
js
or
lods
in
jmp
mov
loopne
sbb
aad
inc
add
fst
push
outsl
cld
aas
ret
push
aam
pop
clc
mov
cmp
insl
int3
jp
fcompl
mov
adc
xor
mov
repnz
fwait
mov
gs
int3
in
pushf
ja
cltd
jnp
push
mov
mov
movsb
mov
cmpsl
jle
add
inc
cmpl
fldcw
bound
test
pushf
test
fisttpl
lret
nop
ss
cmp
imul
mov
test
pop
push
inc
dec
mov
jb
hlt
movsl
cmp
xor
lret
outsb
inc
mov
int3
outsb
xchg
mov
loope
popf
mov
dec
xchg
fs
inc
fidivrl
lock
imul
sarb
mov
push
push
push
pop
adc
xchg
out
in
push
xor
es
pop
push
inc
inc
aas
adc
jl
fbld
cmp
stos
xchg
ljmp
iret
cld
insw
ljmp
jmp
add
cmp
mov
jl
cmp
xchg
js
inc
ja
mov
or
adc
rol
jnp
adc
and
cmp
pushf
fimull
lcall
mov
aas
mov
sub
mov
mov
xchg
cli
jne
mov
push
or
mov
ds
movsl
cmp
push
inc
test
int3
mov
fidivrs
mov
adc
xchg
jecxz
in
mov
loope
xor
outsb
mov
mov
mov
loop
push
leave
daa
in
inc
pop
das
fiadds
adc
repnz
gs
xchg
adc
jns
es
push
xor
stc
movsb
movsl
fwait
mov
sbb
ds
popa
sbb
cmp
dec
rclb
rcll
xchg
mov
push
sub
sub
adc
scas
sbb
shlb
lea
cli
imul
cmp
jbe
lcall
push
fildll
jp
mov
hlt
int
lret
fs
sarb
mov
cs
sub
loope
fcompl
add
int3
mov
jo
push
cmp
lds
mov
js
stos
loop
or
in
std
je
fsubrs
fidivs
scas
mov
sbb
lret
lods
cmpb
mov
leave
mov
xlat
pop
mov
mov
imul
sbb
lret
clc
sub
pop
ffree
sbb
js
jmp
dec
movsb
xor
mov
es
sarl
cld
cmp
inc
pop
rcll
cmc
rorb
nop
fwait
sbb
daa
rorb
mov
dec
sub
pop
add
mov
push
pop
lods
pop
sti
decb
push
scas
pop
faddl
loopne
and
or
hlt
sub
lret
pop
int3
andl
pop
aaa
out
push
cs
test
filds
leave
push
inc
sbb
mov
sub
jle,pt
shlb
jmp
fisttpl
mov
jmp
sbb
pop
sub
std
push
je
adc
je
dec
insb
movsl
fdivp
dec
jmp
mov
push
sub
mov
outsl
fwait
dec
popf
push
in
and
mov
test
ret
iret
mov
ljmp
test
mov
lcall
jbe
mov
and
mov
int3
loope
xchg
repnz
pop
movsl
xor
rolb
sbb
mov
xor
push
popa
and
jge
psubq
idiv
push
xchg
out
or
outsb
popa
jae
sbb
lahf
add
mov
sbb
in
dec
scas
sbb
mov
hlt
and
les
push
repnz
sub
lods
jae
std
imul
cmpsl
push
int3
fwait
lea
mov
jne
lock
sbb
stc
pop
loope
adc
push
add
push
sub
cltd
fiadds
shlb
push
into
lds
pop
fdivrl
lahf
cmpsb
pop
lds
mov
repz
insb
jle
insb
cmp
pusha
mov
loope
jno
xor
pop
incb
xchg
or
mov
jno
mov
lcall
xor
fldcw
cmp
sahf
shl
inc
lahf
fiadds
push
cmp
push
xor
sub
dec
ja
cmp
sub
xor
ret
fldl2e
enter
cwtl
xor
jge
hlt
sbb
in
xchg
inc
sub
fldt
scas
mov
clc
push
push
sbb
mov
fnstenv
pop
lcall
lds
test
mov
aam
mov
mov
daa
add
ret
push
xchg
lret
jae
addr16
das
movsl
shl
mov
loop
xchg
cld
pusha
cmp
xchg
fstps
jbe
test
push
push
cwtl
enter
clc
xchg
lret
mov
testb
out
cli
daa
out
or
in
stos
adc
jno
sub
arpl
inc
cld
fmull
mov
sub
testb
adc
ss
push
or
notb
pop
insb
xlat
cmpb
stos
lds
arpl
inc
mov
fwait
rcll
mov
mov
and
jb
rcl
cmp
stc
pand
dec
je
push
call
or
cmp
xlat
test
jo
test
mov
sbb
sbb
mull
mov
pop
cltd
les
pop
repnz
shrb
xchg
cmp
sbb
out
jl
sbb
movsb
rolb
push
sub
xor
xchg
sub
push
inc
aad
pop
aam
sub
insl
sti
inc
enter
scas
scas
and
lret
or
pop
jl
cmp
xchg
lret
push
xchg
jno
mov
xor
dec
sub
add
pop
int3
push
mov
mov
and
insb
mov
mov
xchg
insl
jmp
ljmp
dec
jno
insb
imul
cmpsb
sub
filds
push
pop
out
jne
mov
rorb
mov
cmp
add
aam
sub
sub
mov
sbb
fistl
leave
jnp
push
jae
jo
push
cmp
cmp
icebp
pusha
imul
loop
cltd
test
aas
push
inc
icebp
dec
stc
jno
aad
cmpsb
mov
jecxz
jne
adc
insl
xlat
and
icebp
repz
inc
cli
push
mov
mov
rsqrtps
xchg
sbb
scas
add
jg
jne
clc
jnp
dec
outsl
sahf
loopne
testl
cmp
into
push
mov
sub
pop
xchg
fwait
out
les
fisubrl
gs
cld
loopne
sub
add
jne
mov
adc
mov
fsubp
adc
and
jbe
push
dec
inc
sbb
add
inc
nop
sbb
ljmp
cmp
and
or
stos
lods
cwtd
adc
inc
xchg
gs
movb
in
dec
shr
sarl
mov
and
and
arpl
pop
imul
mov
hlt
mov
sbb
das
loopne
es
scas
mov
sub
mov
cmp
loop
mov
das
push
push
sbb
ffree
rorb
sub
loope
xor
loop
push
adc
cli
mov
or
xchg
mov
outsb
leave
cli
push
repz
test
push
xor
outsl
fcoms
std
jbe
sbb
ret
add
ficoms
inc
xchg
push
pop
dec
aad
dec
lret
sbb
loopne
mov
pop
sbb
pop
das
test
ror
mov
sub
mov
into
mov
push
adc
add
mov
cmpsb
push
pop
ja
mov
xor
mov
lods
lret
into
jo
jb
cli
jbe
cmp
or
pop
sbb
sbbb
enter
and
sahf
call
push
subb
repnz
push
dec
or
loop
push
push
popa
mov
jne
shr
fmuls
outsb
push
clc
jnp
and
ja
add
test
push
cwtl
repz
jmp
rorl
push
shrb
push
pushf
dec
or
arpl
mov
paddusb
cmp
or
pop
dec
inc
lahf
fs
test
or
test
cmp
push
repz
outsl
arpl
scas
int
mov
popa
jp
in
jae
pop
dec
fidivl
dec
aam
pop
pop
aad
dec
andb
jle
daa
arpl
inc
pop
push
jl
lcall
xor
cmc
cmp
ror
xchg
add
xchg
add
add
inc
ljmp
das
cmp
test
loope
dec
mov
fsubr
mov
cwtl
sbb
add
mov
jge
jo,pt
arpl
sarl
cmp
or
mov
fildl
xor
clc
mov
sti
pop
push
mov
mov
pop
mov
movsl
xlat
pop
cmp
push
jp
mov
sub
dec
lcall
and
jl
add
test
imul
sub
mov
and
mov
mov
int
sub
xchg
mov
stos
inc
movsb
push
scas
cltd
test
add
cmp
mov
pop
scas
int
cmc
int3
mov
sub
sbbb
rcrb
or
mov
ror
mov
cs
iret
pop
or
pushl
jns
xor
cli
insl
mov
testl
in
pop
push
cwtl
je
jns
push
and
push
push
test
xor
ss
arpl
sub
insl
sbb
test
es
or
sub
sbb
test
add
and
push
hlt
adc
stos
jne
pop
insb
clc
in
stc
js
and
cmp
sahf
and
fdivrs
leave
mov
inc
or
test
sub
xchg
out
mov
call
mov
cwtl
dec
cmp
mov
add
je
cmp
mov
cmp
icebp
xchg
fbld
sub
cwtl
movsb
inc
in
add
cwtl
sub
adc
das
data16
push
sbb
sarb
fs
lods
aas
popa
addr16
shll
cmp
sbb
and
pop
push
into
cmpsl
cmp
cmpsl
in
loope
inc
mov
inc
fisubs
push
testl
add
rclb
dec
cmp
mov
fldcw
mov
push
cmp
rcrb
ficoms
add
mov
mov
xor
push
aaa
mov
push
data16
adc
out
scas
push
and
cld
inc
cmpsl
rolb
jle
pushf
push
jecxz
out
stos
push
sahf
pop
sti
in
pop
or
movsb
jge
add
xor
sub
imul
xchg
jmp
cs
mov
jl
adc
ret
rolb
aam
pop
in
sbb
cwtl
lock
movsl
mov
lahf
xchg
or
dec
cmp
std
or
push
or
push
repz
push
cltd
movsl
mov
mov
outsl
pop
cmp
leave
or
mov
xor
addr16
dec
or
mov
sub
test
sbb
sub
js
loope
add
out
mov
cmp
pop
lcall
out
int
lret
aam
jg
scas
loop
sbb
mov
cmpsb
adc
stos
mov
adc
aad
mov
pop
cs
inc
mov
ds
jne
inc
ret
and
mov
js
add
sbb
xlat
or
daa
test
xlat
std
aad
pushl
popa
inc
push
ja
and
mov
and
jmp
push
pusha
jle
lret
xor
add
in
xchg
sbb
sub
test
xchg
sbb
bound
dec
lods
jmp
and
mov
enter
push
sbb
ret
cmp
jp
xor
rorb
popf
out
scas
mov
sbb
jne
out
or
in
adc
dec
mov
movsb
outsb
bound
sbb
jmp
lea
aaa
mov
or
mov
sbb
mov
push
mov
xchg
pop
sarb
xor
icebp
mov
or
aad
xchg
jne
ds
sub
bndstx
ja
inc
sub
pusha
sbb
mov
scas
cmc
in
andl
insl
lcall
adc
lret
add
sub
rcr
fs
das
mov
jmp
inc
stos
ret
incb
fstl
loop
gs
ret
mov
or
dec
xor
fisttpll
das
jecxz
jp
add
sub
mov
rolb
dec
sti
cmpsl
fcmovnb
sahf
insb
fisubl
jl
repz
mov
sub
lock
nop
into
aaa
icebp
adc
add
nop
fisubs
inc
pop
or
sub
jmp
lcall
cmp
subb
cmpsl
or
leave
add
adcl
xchg
mov
cs
mov
adc
aaa
pop
inc
aas
push
mov
cmp
pop
fwait
add
add
cli
shll
xor
loopne
and
add
nop
push
mov
sub
daa
mov
push
outsl
or
adc
jns
xor
daa
sbb
sbb
xchg
push
adc
xor
aad
aaa
adc
shlb
mov
in
insb
add
ret
pop
and
rcrb
xor
jo
inc
xor
aad
inc
cmp
es
sbb
cmp
enter
xchg
outsl
insl
inc
ljmp
cmpsb
dec
sub
jp
test
mov
ds
sbbb
sbb
sahf
inc
pop
in
mov
or
mov
mov
xor
out
lcall
les
lock
std
adc
or
aam
scas
sub
and
gs
pop
cmpsb
ret
push
int3
cmc
fs
pop
add
push
mov
mov
lods
mov
mov
jne
bound
mov
and
push
pop
dec
xorl
xchg
push
loopne
cmp
jge
and
fbstp
gs
test
push
mov
cmp
mov
repnz
enter
and
dec
add
ret
icebp
fwait
fs
push
xchg
popa
cmp
cmp
inc
sbb
ret
pusha
ja
cs
adc
mov
xor
mov
push
addr16
cmc
pop
pusha
cmp
add
fldenv
cvtdq2ps
neg
push
in
mov
add
filds
mov
cmp
sbb
xchg
stos
hlt
sub
mov
sbb
and
ffree
pop
xchg
in
lods
mov
jnp
mov
in
outsb
out
add
testl
dec
repnz
ret
dec
ret
sahf
aad
aas
repnz
push
ss
pop
sub
cs
xchg
iret
stmxcsr
js
shl
xlat
lret
jmp
lods
cmp
andl
js
lahf
pop
jecxz
shlb
iret
xchg
das
jns
push
ret
inc
negl
add
mov
movsb
icebp
mov
arpl
add
cwtl
insb
push
mov
push
sub
mov
ljmp
and
imul
add
adc
js
cmp
out
jns
nop
imul
cmp
into
inc
inc
xor
sbb
mov
mov
add
inc
jp
jns
lret
les
xor
lock
out
or
cs
insl
add
and
lods
sarl
and
push
mov
movsb
and
cmp
out
loop
repnz
cmp
sbb
sbb
adc
imul
fsubr
xchg
mov
cli
cmc
jne
add
addb
je
aas
ss
ljmp
jne
stos
jne
mov
dec
in
add
mov
pop
or
mov
adc
sub
mov
add
pop
dec
or
push
and
out
xchg
adc
inc
ficompl
pop
nop
push
cmpsb
dec
gs
xchg
inc
stos
je
mov
add
dec
outsb
cwtl
pop
mov
cli
ds
mov
adc
lahf
leave
ret
fs
jo
push
mov
add
xorb
fldcw
dec
movsb
mov
aad
adc
and
insb
je
cld
gs
cld
outsb
divb
ljmp
xchg
jns
cld
fmul
mov
jp
arpl
inc
add
and
scas
sub
out
outsb
ds
or
fdivrp
pop
bound
in
adc
inc
rorb
jp
push
inc
mov
cmpsb
in
in
sub
aad
mov
or
xchg
dec
sbb
push
inc
lds
les
loope
cmp
ja
add
imul
adc
mov
out
mov
sub
insb
or
jo
es
and
ja
popa
jecxz
call
mov
pop
stos
clc
xor
gs
sahf
mov
scas
movsl
fmull
sub
xchg
outsb
push
jne
adc
lret
pop
add
insl
cmpsl
sbb
and
xor
shlb
xchg
mov
mov
xchg
sahf
xchg
mov
in
jns
add
aad
jge
neg
push
inc
mov
lret
jg
outsb
fadds
adc
mov
push
add
xchg
xchg
xchg
gs
and
lock
sub
lret
pop
push
mov
jb
or
outsb
fisubs
pusha
gs
and
push
cmp
sub
ret
sahf
push
testb
add
add
lds
test
std
and
jp
rcr
cmp
fwait
cmc
out
ja
mov
cltd
shl
cmp
cmp
sub
pop
add
in
hlt
bound
sub
jbe
add
insl
inc
fisttps
mov
add
add
sub
adc
mov
test
push
mov
xchg
jl
ljmp
pop
mov
xchg
aas
mov
push
jo
xor
mov
add
fimull
das
sub
loopne
stos
and
out
pop
lock
push
or
jl
fsub
jg
roll
bound
nop
icebp
std
xor
cmpl
iret
mov
jmp
testl
jo
or
jbe
mov
xchg
adc
cli
and
mov
cmp
mov
push
and
mov
xor
xor
movsb
xchg
mov
ret
test
fidivrs
fdivrs
andb
add
adc
add
sub
ret
fwait
js
repnz
mov
enter
movsb
pop
ret
and
test
mov
jle
jnp
add
adc
add
or
icebp
adc
inc
mov
mov
ds
mov
dec
push
push
mov
add
rclb
frstor
inc
repz
fnstsw
loop
je
jb
sahf
cmp
jecxz
xor
adc
adc
loop
test
sahf
xor
out
jbe
ds
aam
loop
insl
cmpsl
jne
xor
inc
es
loopne
adc
jecxz
and
inc
jno
jp
mov
sub
jmp
ja
fldcw
add
dec
es
dec
lock
sub
sahf
pop
repnz
aaa
jbe
adc
ljmp
pop
hlt
cmp
mov
out
adc
in
sbb
jecxz
fcmovu
sbb
les
mov
sub
out
daa
call
pop
sub
sub
ror
ret
leave
dec
fcomps
insb
out
xor
mov
jge
mov
cmp
mov
mov
adc
inc
idivb
pop
pmullw
mov
cltd
push
cli
pop
stos
call
ja
es
aas
clc
in
in
cmp
adc
test
pop
fwait
testb
test
jp
or
mov
xor
pop
stc
ljmp
mov
aas
adc
fbld
and
mov
nop
cmpsb
imul
dec
xor
cltd
and
insl
and
popa
sub
jnp
mov
out
mov
mov
ja
out
push
shr
cmp
mov
rorl
ss
sub
outsb
xchg
cmp
fwait
pop
xchg
cli
icebp
xchg
hlt
movsb
mov
cmpsb
mov
cli
arpl
inc
pop
in
lds
fistl
in
cmpsb
push
frstor
fwait
aam
push
mov
push
loop
sub
jne
sti
mov
js
mov
ret
cltd
ficoml
test
push
nop
mov
adc
rclb
jbe
pop
sub
movsl
cltd
cmp
scas
xor
or
mov
mov
orl
mov
cmp
cmp
in
xlat
repnz
outsb
push
imul
xor
dec
repz
sub
adc
xchg
jae
xchg
adc
in
lock
leave
test
int
clc
sub
jmp
mov
pop
popf
push
mov
int
mov
add
sahf
lods
adc
ret
test
sbb
out
pushl
xor
test
jecxz
faddl
sbb
xor
jo
fdivp
jnp
nop
shrb
ret
or
nop
cld
dec
or
cmp
inc
jle
dec
push
sub
xchg
xor
fdivrs
sub
xlat
sbb
divb
out
pop
sahf
push
pop
cltd
add
stc
adc
stos
cli
jg
push
scas
fldcw
xchg
repnz
divl
adc
push
push
test
imul
adc
cmp
fsubl
or
mov
aad
sbb
sub
popf
loop
sbb
xor
mov
mov
xchg
mov
xor
aas
mov
jmp
out
cmp
adc
cmp
mov
xchg
in
xor
ret
sbbb
popf
rclb
sahf
jmp
lcall
std
xor
in
adc
stos
out
mov
adc
aad
mov
push
aas
adc
push
mov
xor
incl
xor
mov
inc
sub
pop
push
and
push
pop
push
mov
pop
rorl
ja
adc
pop
int
das
fildl
inc
lret
sbb
sbb
frstor
popf
pop
lcall
xor
test
xchg
icebp
dec
cli
mov
cwtl
xchg
in
and
add
jo
ljmp
and
xchg
xor
push
stos
fdivrl
andb
stc
mov
mov
sub
mov
fsubs
pop
clc
cld
mov
jb
in
xor
imulb
jmp
mov
xor
fimull
stos
rcrb
and
mov
push
lods
mov
sarb
mov
mov
push
mov
push
push
test
cmovs
push
aad
jecxz
fucomi
push
lret
dec
sub
fiaddl
out
js
mov
das
and
pop
fisubrs
sbb
push
push
xchg
jmp
or
adc
fsts
jl
enter
jne
xchg
lds
cmc
mov
inc
inc
arpl
mov
aaa
add
jmp
mov
jno
sub
xchg
bswap
cmpl
test
rcrl
xchg
jnp
sahf
in
and
sbb
dec
push
and
push
lds
xor
mov
mov
pop
dec
inc
jl
std
cwtl
jae
outsb
loope
int
inc
fcoms
dec
push
imul
xor
jge
mov
mov
pop
out
je
testl
pop
outsl
into
push
in
jle
sbb
pop
and
test
or
pop
sub
outsb
xchg
inc
cmp
mov
addr16
and
lret
push
mov
push
cmp
ljmp
adc
cs
je
sbb
es
lret
movsl
test
xor
xchg
sahf
mov
cwtl
mov
gs
jge
cltd
cmp
lcall
mov
push
sub
es
out
sbb
roll
and
shll
jno
add
ret
jae
sub
push
sahf
in
pop
sti
mov
in
push
sbb
aaa
and
xor
xchg
insl
std
adc
sbb
mov
insl
int
mov
enter
lods
mov
mov
cmp
frndint
add
ss
fisttps
adc
mov
and
push
dec
sub
xchg
fnstenv
add
push
test
lods
xchg
xor
push
mov
subb
or
cmp
test
test
call
pop
mov
insb
out
dec
in
inc
jne
cs
xor
inc
push
and
cmp
cld
repz
jae
sbbb
lret
popa
dec
gs
xor
push
xchg
ja
sbbl
ljmp
push
xlat
icebp
inc
push
xchg
or
repnz
adc
sahf
and
call
jmp
xor
out
sbb
out
in
cmp
dec
push
icebp
push
sti
aad
in
mov
inc
adcl
sbb
xchg
cmp
inc
loop
xchg
xchg
fdivrs
xchg
or
inc
dec
lods
add
pusha
clc
push
rcrl
inc
lret
xor
mov
roll
mov
and
shrb
xlat
mov
adc
cmp
mov
mov
mov
cltd
mov
stc
mov
inc
adc
iret
imul
and
addl
ljmp
jns
xchg
ss
mov
lock
mov
cmp
pushf
xchg
jae
movsl
pop
xor
xor
mov
xchg
mov
xchg
gs
or
xchg
mov
movsb
outsb
mov
sbb
insl
lret
fsubs
orl
lds
mov
cmp
add
jo
mov
test
mov
jg
push
mov
xchg
sub
jne
pop
cli
pusha
fimuls
push
int3
mov
xchg
mov
data16
mov
mov
aad
loopne
lock
cmp
dec
jae
and
in
mov
clc
ljmp
ret
test
imul
dec
push
loope
and
pop
pop
and
aam
test
out
jbe
movsl
sbb
mov
aad
nop
decb
xor
popf
leave
lahf
sub
idiv
int3
jne
cld
pop
scas
sahf
inc
nop
loopne
shr
cmc
loopne
mov
pop
mov
mov
cmp
movl
mov
test
fwait
jge
adc
dec
sarl
scas
nop
or
aaa
jmp
sub
in
jbe
test
adc
stos
mov
add
cwtd
and
mov
adcl
cmp
sub
shll
js
or
dec
negl
test
in
enter
flds
out
push
push
cltd
push
cmc
mov
adc
inc
lods
lcall
test
out
movsl
fidivrl
movsb
sub
mov
dec
mov
jbe
sub
das
sbb
inc
or
mov
xor
int
mov
fsubs
jge
lods
out
add
jp,pn
sub
or
mov
add
jnp
std
out
int3
rcl
cmp
or
test
loopne
outsb
lds
rorl
fisubl
and
mov
and
int3
addr16
ret
mov
inc
stc
pop
xchg
cmp
jbe
or
in
out
sbb
cmp
rcl
mov
or
inc
lcall
pop
jg
xor
and
sbb
pushf
cmp
push
dec
adc
fisubs
jns
mov
push
mov
adc
mov
xor
inc
out
pusha
lcall
mov
mov
mov
add
xchg
inc
repnz
mov
enter
or
cld
cmp
jno
xchg
or
cwtl
outsb
xor
jge
cltd
call
mov
cli
cmp
lahf
inc
ror
mov
cmp
lret
jmp
popf
sahf
push
pop
movsl
pop
outsl
sbb
repnz
push
push
cmpsb
ficomps
fdivl
mov
inc
cltd
arpl
mov
adc
adc
cmpsb
clc
cmp
add
inc
mov
scas
popf
mov
inc
inc
push
ret
int
lcall
pushf
sbb
xchg
fstp
jle
daa
mov
xchg
int
xchg
icebp
push
mov
ret
mov
cmp
rolb
xchg
xchg
and
push
ret
mov
mov
push
xchg
insb
xor
iret
scas
mov
sbb
mov
xchg
gs
addl
jnp
pop
jecxz
xor
cmpsb
pop
fdivrs
add
mov
outsl
jns
lahf
adc
inc
mov
xchg
adc
jne
cmp
push
mov
xchg
or
in
mov
xchg
push
cmp
pop
fbstp
push
push
les
xor
or
pop
cmpsb
mov
popa
mov
int3
ss
mov
inc
sbb
or
call
sub
in
call
mov
out
lahf
jp
jns
out
or
pushf
push
mov
adcl
adc
loop
pop
jno
cmp
daa
pop
fstl
out
push
enter
iret
movsl
repz
sub
pop
movsl
xor
cwtl
enter
scas
push
push
inc
mov
xor
outsb
dec
call
pop
jne
or
inc
mov
jne
imul
pop
sub
pop
fstps
outsl
add
xor
xor
or
lds
pusha
xchg
cmp
rorb
pop
jp
addl
pusha
ljmp
stc
mov
ret
repz
ljmp
repnz
inc
push
ljmp
dec
and
xlat
and
dec
push
stos
sbb
test
adc
aam
rolb
les
gs
xchg
push
das
add
stos
shrd
push
xchg
out
cmp
jnp
mov
xor
xchg
in
mov
and
and
pushf
mov
push
push
insb
jl
mov
xchg
ret
jp
movsb
fidivs
jmp
pop
fcomi
inc
rorl
inc
loope
test
jmp
out
jmp
cmp
mov
push
outsb
int3
sti
ljmp
sbb
dec
inc
imulb
cmc
ja
mov
xchg
into
aaa
rcrb
or
scas
and
inc
lea
mov
push
das
icebp
add
rcrl
cmc
movl
arpl
mov
dec
daa
orb
cltd
fnstenv
lret
out
nop
dec
xchg
lahf
lock
or
mov
jle
pop
out
xlat
jno
pop
cmpsl
hlt
cmpl
dec
jo
jp
call
push
imul
jno
sti
mov
adc
out
mov
and
mov
cmp
pop
es
test
jne
ja
sub
outsb
mov
shrb
stc
repz
cmp
push
lock
xchg
test
or
aam
xchg
add
xor
inc
sub
xchg
inc
adc
mov
jbe
pusha
sbb
xchg
push
cmc
lahf
add
pop
cli
inc
in
inc
bound
cltd
scas
fnstsw
int3
mov
imul
pop
test
test
jo
adc
pop
popf
mov
outsb
js
and
dec
dec
jp
cli
shll
test
mov
xchg
cmpsb
bound
bound
lret
mov
jno
cltd
lock
push
push
or
or
sbb
orb
test
and
sbb
dec
xchg
bound
cltd
frstor
inc
cmp
and
mulb
nop
cltd
iret
cmp
cmp
lods
add
add
sarb
imul
gs
fstpl
repz
subb
test
xlat
inc
cmp
mov
ljmp
push
push
lret
pop
mov
dec
xor
inc
and
ja
pop
scas
sbb
ret
add
jbe
or
mov
ss
fs
inc
inc
push
dec
sbb
fs
fidivrl
and
and
jmp
dec
adc
popa
or
sbb
lods
xchg
nop
jo
fbstp
xchg
mov
pop
and
sub
bswap
jmp
fprem
pop
cs
push
pop
enter
lods
push
sbb
popf
sbb
std
cltd
jnp
add
inc
ret
stos
push
fstl
iret
and
add
mov
sub
ret
in
push
jl
jb
adc
and
or
adc
arpl
xchg
loop
repnz
add
movsl
test
mov
xchg
xchg
and
cmpsb
xchg
rorl
add
mov
rclb
out
lods
lods
std
ds
fisttpl
aaa
xchg
push
repnz
ss
or
in
add
loop
test
sub
aaa
xchg
insb
mov
xor
or
sub
test
cmp
pop
aas
jmp
orb
push
or
xor
loop
icebp
in
call
sub
lahf
mov
pop
push
cmp
adc
cmp
mov
dec
push
push
or
pop
pop
inc
or
adc
pop
rcl
sub
xchg
inc
push
jle
jnp
sahf
scas
fstp
mov
mov
into
jne
sbb
shll
pop
mov
jo
xor
sbb
daa
scas
cltd
xchg
xor
loop
int
or
sub
repnz
loopne
scas
rcrl
ss
shrb
jle
sub
ljmp
jne
dec
repnz
add
mov
xchg
sahf
dec
dec
pop
mov
inc
stos
and
pushf
mov
popf
jl
loope
cmp
shrb
sub
sub
cmp
in
add
add
outsl
repnz
adc
cmpxchg
fiadds
int3
mov
and
pop
jge
xchg
loopne
pop
sub
push
mov
jno
xchg
clc
cmpsl
jne
lcall
add
adc
test
push
divb
mov
hlt
push
add
into
mov
int
dec
in
ljmp
aam
jmp
iret
fldenv
add
stos
cltd
mov
shll
adc
mov
andb
nop
mov
add
bound
dec
fstl
sbb
ret
jge
pop
mov
cmp
mov
add
dec
add
addr16
pop
or
inc
aad
jno
add
mov
es
clc
sti
insb
icebp
add
xlat
fstpl
rclb
icebp
xchg
inc
mov
sbbb
lods
xor
mov
imul
xchg
xor
jb
nop
push
les
push
mov
push
xchg
xor
les
mov
in
pop
into
xor
test
out
pop
pop
sub
arpl
and
mov
test
push
bound
add
and
nop
sbb
les
imul
icebp
fcoms
mov
adc
enter
outsl
add
loopne
or
orl
dec
xchg
inc
push
xor
mov
cmp
lea
addl
and
lcall
lods
jl
xor
jl
jmp
adc
mov
sub
add
adc
popl
cmp
xchg
pop
pop
add
fistpl
adcb
inc
jbe
sahf
outsl
aas
rcl
inc
pop
adc
loop
bnd
cmp
cmp
cld
mov
cmc
cmc
fstps
std
imul
dec
sar
inc
jne
faddl
mov
add
daa
ljmp
jecxz
nop
xor
test
shll
lods
test
sbb
mov
jb
repnz
sbb
xlat
lret
pop
jecxz
or
out
dec
ret
or
dec
bound
inc
dec
jge
or
stc
out
rorl
scas
mov
mov
xchg
mov
fnstcw
pop
mov
fisubrs
inc
jmp
add
xchg
jne
insb
or
in
xor
xor
push
movsl
out
mov
pop
mov
movsl
inc
adc
jg
jp
pop
shll
outsb
nop
outsb
adc
fucomip
out
sbb
arpl
cld
fcmovb
jge
cmp
js
cs
movsb
arpl
jb
jo
lcall
mov
inc
test
inc
xor
test
shrb
inc
mov
dec
push
push
adcl
adc
xchg
jl
addb
adc
lret
rorb
ljmp
jecxz
mov
lret
jne
mov
cmp
fiaddl
int3
rolb
idivb
adc
out
cld
jge
push
mov
fimuls
dec
jp
mov
mov
inc
addr16
mov
cmpsl
loop
push
out
stos
es
test
mov
pop
mov
orl
testl
enter
pop
bound
call
mov
fidivl
mov
sbb
in
popa
xlat
jle
push
fimuls
loop
addl
mov
fcmovbe
addl
xchg
and
pop
or
aad
inc
mov
cmpl
fs
jb
icebp
fwait
pop
mov
inc
outsb
pop
cmp
lods
lds
mov
jle
rcll
xchg
pop
rol
jne
mov
lret
outsb
cmp
or
addl
icebp
js
cwtl
mov
iret
mov
rcll
repnz
and
scas
lods
and
mov
lds
jge
push
cmp
aad
mov
testl
fwait
scas
push
lods
cmp
mov
sub
pop
push
dec
mov
pushf
mov
stos
aad
xor
cwtl
mov
stc
fs
sub
out
push
imul
divb
cmp
scas
xor
lahf
jg
stos
das
negl
inc
push
cmp
hlt
std
xchg
je
call
in
jmp
mov
push
pop
or
push
icebp
jg
in
movsb
repnz
xchg
pop
sub
xchg
jecxz
js
mov
sbb
mov
sub
adc
dec
rolb
popa
adc
sbb
sbb
aaa
pop
xor
push
lcall
push
les
pop
out
out
xor
jl
mov
dec
fidivs
pop
mov
sbb
test
cmp
popa
jb
push
push
loope
inc
add
push
insb
in
popa
push
fmull
and
in
negl
mov
or
fs
sahf
mov
bound
jge
dec
je
mov
stos
sarb
nop
jno
or
pop
pop
adc
pop
test
pop
jb
pop
inc
jmp
arpl
inc
shll
inc
hlt
inc
nop
ljmp
sahf
mov
pop
jmp
rorb
cmc
lahf
lahf
inc
push
mov
mov
pop
add
scas
mov
iret
dec
or
lret
int3
jbe
lret
mov
xlat
stos
inc
lahf
inc
lock
mov
scas
and
out
cli
leave
sub
mov
sub
push
xchg
cwtl
cmp
and
pop
add
inc
arpl
pop
add
push
ss
inc
mov
mov
movsl
lahf
jge
and
sbb
or
push
imul
faddp
dec
cmp
xor
push
push
mov
cs
mov
sub
insb
push
dec
pop
cs
imulb
xor
cmpsb
filds
xor
or
ret
jg
out
jne
mov
rcl
sbb
pop
pushf
fstps
leave
mov
push
insl
loope
dec
stos
cmp
out
jno
roll
rorb
add
arpl
and
xlat
lahf
cltd
cmp
push
cltd
cmp
call
adc
or
loopne
int3
das
sbb
and
adc
outsl
les
shrb
mov
pushf
bound
sahf
out
iret
cmp
and
push
rorl
mov
push
out
scas
clc
mov
dec
gs
push
xor
popf
repnz
mov
inc
adc
mov
sub
adc
sti
push
and
subl
or
mov
cld
loop
dec
jne
xchg
push
jg
into
ret
mov
sub
out
pop
push
pop
addb
jl
mov
adc
xchg
push
xchg
mov
incb
add
mov
mov
cmp
lret
cmp
and
push
add
in
xor
ss
or
sahf
je
push
mov
push
jle
testb
test
movsl
iret
pop
iret
sti
jge
xchg
mov
mov
adc
clc
pop
or
add
enter
pop
adc
inc
and
insb
push
sub
aaa
pop
mov
cld
in
popa
inc
jae
and
into
dec
pusha
dec
in
mov
xchg
movsb
mov
fmull
nop
repnz
out
enter
lock
daa
xor
cmp
cmpsb
enter
pop
out
aam
jmp
loopne
subb
pop
dec
loopne
mov
inc
icebp
ret
scas
je
ret
inc
jbe
shrl
jecxz
mov
pop
sub
test
shr
lret
sbb
lock
jmp
cmp
aaa
jne
mov
sub
mov
cmp
xchg
scas
inc
add
ret
pop
adc
lcall
mull
cwtl
shrb
lahf
pop
rcl
loop
lcall
push
ljmp
jnp
int
mov
mov
cltd
xor
add
push
xchg
push
cmp
jecxz
push
out
xchg
push
and
psubsb
lcall
adc
lahf
sbb
test
xchg
in
rclb
jp
hlt
mov
fwait
js
mov
and
ret
cmp
scas
jmp
inc
aad
dec
inc
dec
out
push
cmp
add
lods
in
jb
sbb
cli
push
sub
sub
push
cmp
or
mov
mov
xchg
jp
roll
pop
negb
mov
pop
push
jnp
loopne
mov
leave
stos
ss
sbbb
mov
or
pop
and
out
mov
jecxz
mov
sbb
xchg
fidivrs
push
mov
xchg
bound
push
cmc
push
xor
mov
sbb
popa
mov
cltd
cmc
hlt
mov
es
jae
test
scas
add
xor
mov
xor
in
mov
in
xor
bound
arpl
outsl
inc
popf
sbb
push
clc
out
stos
inc
daa
loope
scas
adc
push
insl
popl
sbb
fistpl
and
shl
std
push
movl
je
push
out
sub
xor
or
in
movsb
push
push
popf
push
fdivrl
mov
divl
or
xchg
sbb
stc
cmpsl
lahf
push
jle
xchg
mov
loope
adc
test
ret
xchg
lock
sbb
and
mov
fstps
inc
inc
mov
loope
xchg
daa
call
cmp
adc
xchg
insb
insb
lret
or
jg
das
lock
or
nop
jno
jb
pop
lcall
in
sbbl
add
xchg
call
cli
gs
mov
pushf
push
insb
add
or
je
clc
adc
mov
loopne
or
inc
cmp
pusha
xchg
jmp
aas
movsl
jns
ss
call
test
arpl
inc
jns
cmpsb
pop
ss
rorb
mov
xlat
jp
sub
es
fdivrp
and
in
or
stc
mov
xor
push
jb
inc
cli
mov
push
and
jl
andb
inc
add
dec
jae
fcomi
mov
push
lret
daa
inc
adc
adc
dec
je
pop
fisubl
add
mov
sub
ljmp
lret
data16
je
dec
pop
pop
pop
xchg
inc
arpl
add
sbb
add
xchg
pminub
mov
insb
xor
ds
cld
or
add
pop
mov
sub
pop
jge
cld
adcb
mov
inc
bound
mov
sbb
popf
sbb
jno
fstps
ret
xchg
pop
mov
shll
xchg
adc
mov
mov
xchg
outsb
pusha
cmc
or
push
in
pop
popf
push
or
je
cmpsb
dec
xor
clc
inc
stc
ds
inc
or
xchg
xor
inc
inc
fsubrs
ret
inc
push
xchg
mov
push
bound
lret
pop
test
jecxz
push
insb
and
ja
daa
pop
and
jecxz
cwtl
add
cmc
test
outsb
or
xchg
jbe
sub
sub
adc
mov
mov
inc
push
add
dec
push
cmovle
cmc
lretw
cmp
mov
add
jecxz
adc
xchg
daa
test
push
or
lods
inc
xor
sbb
xor
sub
push
inc
dec
sbb
lret
mov
or
push
sbb
or
ss
xor
loop
mov
mov
jle
xchg
into
pop
jl
xchg
ret
mov
jnp
js
pop
pop
jecxz
fisubrl
sti
pop
mov
push
xchg
lcall
ret
pop
push
cli
and
pop
popf
outsl
xor
cmp
cmc
xchg
cmp
or
lock
shlb
fcomi
xchg
cmp
or
jae
jns
xchg
sub
movsb
lds
aaa
fcmovbe
out
insl
cmc
or
mov
pop
adc
mov
out
stos
jnp
inc
loop
ljmp
andb
inc
push
lret
cmpsb
mov
mov
cmp
test
test
mov
icebp
cmc
lahf
shlb
xchg
cmp
loope
sbb
ret
or
or
cmp
sub
adc
adc
and
pop
daa
cld
sub
add
adc
lods
mov
dec
push
jge
cli
and
mov
repz
es
fucom
popf
dec
filds
std
lock
fs
xchg
ja
sahf
loopne
cmp
or
mov
loopne
jl
pop
shl
adc
mov
daa
negb
iret
popf
ljmp
inc
sbb
out
in
dec
jb
std
shll
jae
jno
scas
mov
push
mov
or
arpl
mov
dec
roll
aas
stos
or
jae
mov
push
adc
jp
adc
mov
sub
lds
rep
subb
jb
jae
stos
cmc
popf
sbb
cmp
mov
jmp
jge
insb
jg
arpl
push
lods
jbe
push
mov
or
jo
imul
rcrb
test
sbb
xor
mov
orb
pop
popf
push
push
push
enter
jbe
ljmp
cmpsl
outsb
bound
test
xor
adc
out
pop
jp
scas
xor
loopne
push
in
mov
jg
adc
add
cmp
and
and
push
mov
stc
addr16
rcrb
jae
add
movsl
icebp
sbb
cmp
xor
mov
xor
shlb
imul
mov
or
pop
jno
jge
xchg
fwait
daa
out
xchg
add
mov
xchg
jno
jge
jge
out
push
mov
jp
lret
and
xor
cmpsb
jno
neg
lret
sbb
add
jmp
and
in
out
ret
imul
mov
xlat
mov
imul
xchg
sbb
out
or
addl
mov
ds
and
jle
jmp
sub
cmp
cmp
sbb
add
cwtl
pop
lret
mov
inc
push
mov
push
jo
fistps
sub
inc
loop
gs
les
mov
pop
adc
jno
mov
testb
sbb
push
nop
push
imul
ds
dec
insl
outsb
mov
xor
jp
popa
jb
mov
xor
push
das
stos
jns
fwait
xor
leave
sbbb
mov
push
xor
dec
cmp
in
add
push
pop
mov
movsl
int
scas
sub
aaa
sub
mov
jg
into
lret
add
mov
into
nop
push
ds
sahf
icebp
pop
xlat
sbb
movsb
scas
in
mov
or
int
jns
jo
and
mov
mov
out
sub
cmp
sbb
push
push
cmp
dec
pop
push
jmp
lret
xchg
out
sub
mov
push
ja
cltd
push
lcall
adc
pop
fstps
in
sub
sub
mov
jp
or
stos
jecxz
icebp
add
daa
mov
inc
cld
iret
enter
sub
jno
js
cmp
xchg
inc
adc
out
inc
outsl
cmp
sub
cltd
mov
jne
arpl
xchg
push
fcmovne
and
push
nop
cmp
test
pop
mov
jno
out
sub
pop
arpl
mov
je
clc
jne
push
push
mov
ficoml
mull
shlb
mov
mov
shll
leave
enter
iret
pop
mov
jbe
aad
dec
cmpb
bound
add
or
mov
xlat
in
mov
ljmp
daa
dec
lock
xchg
mov
popf
frndint
add
jg
push
jae
inc
dec
mov
mov
pushf
or
scas
mov
ja
inc
mov
fcompl
inc
pop
das
mov
rcll
ret
and
out
xor
mov
frstor
int3
fdivs
jne
pop
jp
pop
lods
icebp
iret
mov
pop
in
notb
sbb
roll
cmp
cltd
jno
inc
fimull
jge
mov
daa
or
jns
stc
testb
int3
and
ffreep
fisubl
add
push
testl
fadds
int3
dec
stos
xor
ret
xor
mov
push
sub
cmp
filds
jge
insb
in
inc
movsb
jne
cmc
nop
cwtl
mov
add
fstl
lock
dec
jge
mov
mov
frstor
gs
xor
jl
aam
jb
pop
push
dec
xchg
shrb
sub
or
clc
pusha
jns
shrb
shlb
jno
mov
pop
sbbl
rorl
aaa
mov
pop
ficompl
pop
or
mov
jl
in
arpl
or
dec
xchg
cmpsb
pop
mov
mov
jo
cmpsl
aam
stos
add
inc
mov
mov
pop
call
xor
out
mov
cmp
lret
dec
inc
sbb
inc
out
scas
push
popa
inc
sti
pop
or
mov
and
pop
push
stos
adc
mov
shlb
pop
enter
sbb
lods
push
xor
adc
jbe
mov
mull
out
sbbb
inc
pop
and
movsb
test
mov
jp
cmp
jae
out
jns
adc
add
or
mov
ja
cmp
testl
cli
inc
pop
rcll
out
call
inc
dec
call
fwait
xchg
pop
and
sub
mov
mov
decl
das
dec
stos
fsubl
mov
push
inc
rcr
cmp
iret
inc
adc
sub
andl
mov
mov
xor
mov
imulb
fs
clc
fadd
outsl
dec
jg
mov
push
xlat
and
push
jp
fimull
mov
sbb
imul
push
mov
xor
cmp
cmp
pop
lods
push
cltd
adc
mov
jae
ja
adcl
mov
jb
push
xchg
pop
pop
xchg
cmp
fbld
add
mov
mov
xor
out
fwait
xchg
jo
mov
or
aad
jg
jnp
xchg
pop
call
pop
faddl
pop
inc
stc
cmpsb
mov
loopne
adc
cmpl
mov
xchg
adc
sbb
sbb
cmpsl
insl
xor
push
fwait
ja
and
ds
sub
push
repnz
stos
enter
insb
pop
push
or
std
aam
shlb
adc
gs
xchg
xchg
sbb
pop
mov
sub
les
push
or
push
xchg
cmp
push
push
dec
rclb
cmp
add
mov
mov
push
mov
add
out
inc
fildll
lret
dec
jno
or
out
mov
mov
sub
jge
test
add
test
mov
mov
jne
pop
jmp
in
popa
cmp
mov
pop
repz
cli
int3
imulb
jae
int
jb
aad
pop
mov
fwait
cmp
jp
inc
stc
shlb
into
ljmp
jp
jle
imul
push
lods
aas
jno
push
mov
cmp
cmp
test
pop
adc
jge
xor
sahf
push
mov
push
sbb
inc
imul
mov
lock
rclb
mov
ljmp
add
sbb
lret
repnz
mov
cs
xor
mov
xor
into
mov
xchg
sbb
sub
xor
mov
mov
and
iret
push
into
rorb
or
xor
dec
cld
adc
ja
and
add
sahf
pop
cwtl
adc
xlat
popa
int
mov
mov
aas
into
aam
mov
mov
sub
push
sub
enter
xchg
loop
fsubrl
pushf
mov
rdtsc
scas
mov
dec
dec
cmp
iret
test
xor
dec
stc
jno
push
or
movsl
push
data16
pop
jne
inc
push
cmp
into
pusha
cmp
ss
cli
add
fidivrs
lea
adcl
mul
mov
pop
arpl
fldl
add
xor
outsl
and
roll
cmp
sbb
mov
adc
xor
inc
xor
cmp
cmpsl
repz
adc
int
fcomps
dec
cmp
push
push
test
out
jns
imul
test
sub
xorb
std
stos
push
test
sbbl
pop
fwait
stos
daa
pushw
pop
or
adc
cmpsl
dec
adc
pop
or
ret
lock
pusha
xchg
inc
xorl
enter
sbb
out
inc
push
lret
adc
int3
mov
out
inc
pop
addr16
arpl
fimuls
jbe
pop
cltd
dec
adc
jp
aad
out
adc
int3
sti
push
or
outsl
jge
inc
jns
jno
fcmovb
pusha
cmp
or
fs
sub
mov
mov
int
dec
repz
lahf
icebp
fwait
sub
test
pop
nop
fsubs
push
dec
lods
fstps
fists
out
mov
mov
xchg
lea
inc
push
insl
es
pop
adc
xchg
fiaddl
add
sbb
cmpl
sub
cli
ret
test
inc
sub
inc
fiadds
cmpsb
test
jnp
enter
pop
sub
aam
imul
xchg
jmp
sti
cmpsl
adc
xor
mov
insl
sbbl
out
ss
sub
mov
sbb
call
loope
inc
iret
fildll
push
xor
push
xor
sbb
js
mov
xor
aad
mov
adcb
mov
mov
les
xor
xchg
sub
pop
bound
call
cmpsb
xchg
lds
ss
iret
popa
imul
or
aas
jns
and
xcrypt-ofb
cmpsl
sub
iret
xchg
pop
fdivrs
scas
ret
jl
inc
push
movsl
mov
jecxz
mov
cmp
iret
sbb
cmpsl
xor
sub
add
push
add
dec
divb
dec
add
xchg
jmp
lods
jns
mov
les
insl
in
sar
sbb
mov
in
jecxz
pop
jno
lds
scas
mov
enter
jno
popf
jbe
shr
in
les
outsb
adc
cli
ret
add
fcmovnb
adc
std
imul
adc
xor
mov
jmp
or
fdivl
out
add
mov
in
pop
js
jbe
mov
mov
scas
jp
popa
jl
stc
sbb
aaa
add
dec
stos
ja
sub
cmp
dec
fsubs
fwait
aaa
mov
jno
lret
mov
mov
mov
inc
ror
xor
data16
adc
jecxz
mov
aaa
inc
sbb
test
pop
cwtl
addb
je
inc
xchg
push
mov
mov
imul
mov
or
movsb
testl
popl
shrl
cld
and
sahf
push
sar
out
pop
mov
stos
add
aaa
and
ja
mov
test
mov
and
xor
push
test
and
jno
jns
or
dec
mov
push
add
jecxz
pushf
mov
shrl
adc
iret
pop
add
loop
xchg
in
movsl
add
push
push
adc
stos
mov
add
jmp
xchg
dec
mov
jno
add
lock
sub
stos
cmp
sbb
pop
dec
dec
pop
gs
jmp
data16
out
dec
xchg
iret
inc
add
test
mov
xor
push
dec
xchg
jnp
pop
or
das
std
cmp
test
push
or
or
call
jecxz
jp
sarl
dec
pop
dec
sbbb
add
in
pusha
stos
nop
add
or
aam
mov
je
jae,pn
js
inc
js
add
ret
cltd
mov
cmpsb
push
push
add
or
inc
cld
jg
mov
aaa
adc
xchg
fildl
pop
jnp
pushf
inc
sub
stos
into
mov
mov
mov
daa
jmp
test
bound
xor
call
fstpl
fs
insl
cli
adc
or
int
pop
push
push
jle
jge
sbb
inc
cli
fisttpl
mov
in
sahf
hlt
outsb
xchg
cmp
cmp
cltd
cli
push
fcmove
shl
ljmp
scas
mov
sbb
aas
shlb
dec
pop
push
pop
popf
mov
cmp
jbe
imul
cmp
adc
fistpll
scas
shrb
fistps
mov
adc
sub
sbb
pop
push
cmp
push
or
je
xchg
mov
push
movsl
inc
mov
mov
sbb
iret
data16
dec
pop
push
xchg
stos
fucomi
xor
xchg
and
out
sub
push
xchg
and
add
mov
cmp
test
xchg
call
fisubrl
rolb
pusha
in
addr16
inc
mov
sub
mov
addr16
and
loope
int3
add
and
push
xor
xor
fyl2xp1
mov
ret
sub
nop
jbe
pop
gs
jge
or
jne
imulb
xor
es
lds
imul
sbb
imul
dec
ret
cmpsl
adcl
mov
push
lret
pop
inc
fsub
sti
sti
jae
pop
add
xor
sub
xor
imul
and
inc
pop
mov
cmp
pop
loope
push
es
enter
inc
lds
les
mov
iret
push
insb
fmull
iret
les
cld
outsb
mov
and
mov
push
leave
out
mov
adc
outsl
push
adc
inc
mov
call
mov
in
fstl
jns
add
daa
adcl
rolb
orb
aad
push
into
pop
jge
mov
push
cmpsl
movl
ret
push
je
test
cli
fistps
push
cld
push
jecxz
cmpsl
dec
test
push
imul
pop
loope
sub
clc
push
loope
int3
dec
aam
mov
pop
push
or
jecxz
mov
sbb
fdivrl
adc
cmp
push
cmp
lahf
repnz
push
jo
popf
aaa
rcll
inc
mov
push
add
ja
in
js
jno
stc
cmpsl
pop
jno
xor
jmp
clc
pop
pop
xchg
adc
sbb
cmp
repnz
decb
int3
stos
pusha
mov
pop
popf
les
leave
fcompl
or
mov
mov
arpl
sub
lret
pop
pop
add
push
sbb
fadd
bound
xlat
cld
mov
adc
lahf
xchg
popf
and
or
jno
or
xorl
or
insl
jo
cli
sbb
or
scas
loopne
pop
pop
call
sub
push
dec
mov
xchg
shl
cmc
jmp
aaa
xchg
nop
add
imul
xlat
push
xor
int
sub
jecxz
inc
adc
jge
pop
mov
lcall
xchg
lcall
push
scas
xchg
and
xor
sub
lods
nop
inc
into
xor
fstps
jge
push
dec
pop
add
inc
es
xchg
push
xor
jmp
jge
push
sub
aas
xor
ret
dec
arpl
push
mov
hlt
lods
sti
test
shrl
shrb
cmp
gs
negb
push
lds
or
adc
mov
sbb
repnz
jmp
loop
fcomps
scas
fsts
mov
dec
int3
cmpsl
cwtl
jb
mov
adc
scas
and
mov
dec
into
jge
jnp
nop
rclb
jmp
push
adc
lods
pop
pop
test
add
jp
pop
ljmp
mov
bound
cmp
sbb
xor
mov
out
stc
imul
jl
mov
out
or
in
pcmpeqw
mov
test
add
sbb
stos
leave
or
jge
sbb
bound
xchg
xchg
xchg
daa
cli
fstpt
fbstp
lcall
out
adc
lcall
mov
dec
sub
imul
int3
fmulp
and
xchg
jns
int
test
pop
inc
mov
insl
sub
addr16
push
pop
sarl
xchg
add
jecxz
sarb
push
cmp
mov
hlt
lret
ret
bound
xor
dec
fwait
sub
stos
push
test
push
rcll
mov
pop
repnz
subb
lds
dec
and
scas
cmp
pusha
jns
push
jmp
and
xchg
pop
scas
dec
push
mov
xchg
and
dec
add
dec
stos
xchg
cmc
pop
rcll
push
sahf
clc
divb
pop
xchg
sbb
test
inc
sub
mov
xchg
mov
pop
lahf
mov
fwait
outsb
and
out
jg
rcrl
adc
push
dec
std
adc
lock
and
push
lea
and
insb
repnz
repnz
mov
pop
sbb
cli
movsb
fcmovnbe
pop
lods
xor
mov
mov
mov
mov
push
imul
or
mov
mov
sub
inc
dec
call
mov
icebp
and
cmp
xor
mov
xor
mov
cmp
xchg
jle
mov
repz
fstp
out
jle
imul
push
insb
out
gs
mov
mov
push
pop
cmp
mov
cli
cwtl
jl
cli
add
inc
jl
imulb
mov
xchg
shl
cmpsb
xchg
dec
aad
pop
stc
sub
pop
out
repnz
jno
pop
lret
sub
popa
add
aas
add
nop
dec
sbb
hlt
mov
xchg
inc
psubusw
icebp
sbb
mov
mov
pop
mov
jno
and
mov
mov
repnz
mov
xchg
pusha
adc
or
adc
jge
pop
pop
jmp
mov
dec
fildl
das
jae
cmp
out
dec
js
int
insl
int3
sub
add
in
push
cli
loopne
jmp
cmp
xor
in
fs
pop
inc
in
clc
popa
or
ds
data16
push
test
jg
pusha
mov
iret
jae
rolb
xchg
add
pop
fsubrs
pusha
push
xor
imul
pop
rcr
sub
lock
mov
dec
pop
fnsave
and
mov
out
jmp
push
xchg
lds
jmp
mov
mov
test
test
imul
or
fsubrs
sbb
or
js
pushf
insb
sbb
rcrl
mov
daa
mov
and
insb
movsb
les
lods
add
test
jns
cli
dec
ljmp
test
add
rolb
rolb
add
neg
popa
or
in
sub
cld
or
dec
ret
mov
lcall
sub
test
outsl
rol
sahf
lods
xchg
sub
popa
je
cmp
hlt
lret
stc
std
fcompl
push
rcrb
imul
in
push
xchg
cmpb
sti
out
push
iret
cmp
xchg
stc
mov
xor
push
ret
dec
stc
add
jl
jmp
scas
loop
mov
adc
js
and
xor
leave
lcall
add
jno
add
inc
xor
dec
pop
adc
mov
scas
mov
pop
popa
lcall
mov
test
aad
pop
testl
mov
paddb
sbb
and
dec
lods
imul
sbb
inc
or
xorb
or
mov
lods
movsl
jge
fldt
push
adc
stos
cmp
add
push
dec
and
stc
stc
popa
lods
mov
adc
dec
jmp
insl
pop
adc
mov
into
push
mov
test
cmpsb
mov
ffree
mov
outsb
push
sbb
dec
push
jmp
mov
push
lret
sbb
mov
ljmp
ds
imul
clc
lahf
int3
or
push
jmp
aaa
pop
daa
dec
push
dec
lahf
xchg
addr16
loopne
cmpb
mov
das
cwtl
call
sub
jo
dec
pop
xchg
scas
mov
inc
cwtl
xchg
test
mov
mov
lock
push
xchg
cmp
push
or
pop
negb
or
in
push
xchg
pusha
sahf
mov
or
icebp
adc
leave
xor
mov
je
pop
ds
mov
cmp
insl
mov
aam
loopne
cli
adc
stc
cmp
xchg
nop
push
lret
lds
and
or
lods
aaa
jbe
jb
push
cmp
icebp
mov
push
push
add
pop
add
call
pop
mov
jg
add
shl
mov
out
lds
inc
adc
jbe
stc
lret
in
outsb
inc
cli
cs
subb
push
inc
jns
faddl
shr
ja
inc
xchg
enter
sbb
sub
aaa
dec
add
in
rol
mov
mov
ja
ja
mov
mov
and
scas
repz
imul
imul
movsl
ficomps
pop
adc
push
fildll
or
push
fadds
cwtl
sub
push
dec
xor
mov
subb
out
push
mov
daa
cmpsb
movsb
mov
sbb
xor
dec
ja
fs
dec
filds
mov
in
mov
es
imul
pop
sti
jp
bound
add
fsubrl
pop
inc
dec
enter
aaa
outsl
sbb
outsl
inc
lods
adc
pop
insl
xor
or
fidivl
mov
add
xchg
mov
sti
hlt
test
jecxz
xor
cmpb
loop
stos
jg
scas
stc
mov
loope
fildl
cld
jnp
test
xchg
outsl
enter
dec
fsubrp
jge
jb
sbb
mov
xor
add
popa
in
mov
pop
mov
fisttpll
popf
out
cld
pop
inc
test
and
fcomps
cmp
nop
jnp
jg
loope
xchg
or
mov
inc
popa
out
mov
int
loopne
out
inc
sbb
push
flds
sbb
js
adc
pop
shlb
mov
shrb
sti
mov
sbb
imul
cld
xchg
pop
dec
jo
sub
push
pop
jbe
iret
fldt
sub
movlhps
mov
mov
icebp
cmp
push
cs
and
cmp
int3
and
std
mov
dec
cltd
mov
sti
cwtl
bound
fists
push
mov
popa
jbe
leave
scas
lret
and
inc
and
cld
lcall
sbb
sbb
and
stc
out
dec
outsb
adc
and
subl
sub
push
jge
mov
or
xor
or
popl
pop
and
adc
cli
testb
shlb
pop
sbb
imul
frndint
testl
fst
cmp
pusha
cmp
dec
sbb
loopne
adc
cmc
jecxz
loope
jae
inc
lahf
push
idiv
jno
pop
js
pop
inc
pop
xchg
icebp
popf
inc
popf
scas
mov
xor
sub
mov
adc
and
aas
xor
add
dec
fs
mov
data16
in
shrl
out
mov
push
fwait
mov
lock
in
rcr
out
jb
xor
out
mov
xor
sbb
mov
popf
loope
and
dec
in
lock
mov
arpl
notl
test
cli
icebp
jne
mov
push
jmp
jns
xor
jae
jnp
aam
pop
sbb
mov
mov
in
rcrl
lock
stos
test
shlb
in
divb
pop
jnp
mov
call
nop
bound
sub
lea
je
arpl
and
popa
adc
sbb
pop
mov
mov
inc
dec
cmp
xchg
lcall
pop
mov
clc
xchg
in
mov
fs
xchg
sahf
jl
mov
scas
jo
fistps
cltd
outsl
pusha
xchg
jg
je
cmp
sub
outsb
incb
add
ret
fiadds
mov
jl
inc
jae
sbb
inc
jo
push
push
adc
fisttpl
aas
mov
xor
inc
insl
jnp
call
mov
repnz
jle
je
std
mov
sahf
cmp
addb
push
cld
jecxz
push
jle
push
mov
repz
dec
scas
inc
cmp
cs
sub
lock
jnp
lret
sub
loopne
mov
data16
adc
push
jmp
fidivl
stos
jmp
lock
inc
mov
out
popf
sbb
mov
xor
repz
dec
cmpsb
movsb
dec
cli
subl
dec
in
push
inc
jnp
xor
test
loopne
cltd
sub
jbe
sbb
mov
adc
in
xchg
nop
sbb
out
push
aam
push
add
popa
xchg
add
xor
lret
mov
cs
lret
jns
mov
pusha
scas
sub
mov
rcll
aas
add
or
xor
imul
xor
xlat
xchg
aaa
fs
bound
mov
mov
inc
and
test
inc
mov
pop
popl
mov
xor
pop
and
jb
fisubrl
add
push
and
cmpsl
rcr
adc
jns
inc
jno
sbb
inc
push
stos
mov
jbe
xor
xchg
cmpsl
int3
sti
mov
lock
and
jg
nop
and
and
pop
mov
mov
sti
xchg
xchg
jne
movsl
lds
pop
xchg
mov
out
repnz
mov
repnz
xchg
movsl
aam
data16
xlat
imul
mov
xor
push
push
insl
sahf
cmpsl
mov
sahf
in
mov
adc
mov
cmc
lods
lods
sbb
inc
test
mov
push
add
aas
cmpsl
add
test
fmull
inc
popf
andl
lds
sub
add
and
push
cs
dec
test
inc
in
inc
xchg
sbb
lea
ljmp
cmp
lret
inc
xor
xchg
out
push
sbb
out
mov
jmp
in
sbb
or
xor
dec
mov
cmp
addb
ss
popa
push
add
in
in
mov
sbb
mov
adc
adc
in
outsl
push
dec
ficoml
aas
mov
mov
adc
dec
test
xor
push
or
sahf
mov
dec
leave
mov
jne
hlt
pop
inc
imul
fnstenv
cmpsb
inc
xchg
andl
call
shll
and
ret
fsubs
inc
in
xor
mov
xor
stc
out
movsb
sbbl
test
mov
add
dec
and
lret
dec
cmpsb
xor
mov
iret
sbb
push
test
cmp
in
add
xor
cmp
pop
pop
cmpsl
pop
mov
sub
cmp
mov
in
nop
inc
pop
icebp
fdivrl
cmp
dec
sub
out
jnp
mov
xchg
test
test
in
cs
iret
adc
adc
sbb
ret
xor
mov
jne
mov
xchg
leave
call
cwtl
add
jbe
fwait
add
xchg
out
maskmovq
notl
fisttps
cmpsl
pop
adc
mov
xlat
test
push
iret
pop
and
sub
arpl
es
jb
mov
and
jo
shr
sub
push
outsb
xor
fldcw
es
jmp
dec
pop
hlt
mov
xor
ss
mov
cmpsl
insb
mov
mov
into
lea
mov
negb
push
arpl
push
xchg
push
popf
jecxz
dec
xor
int3
adc
nop
xor
aam
cmp
sbbl
stos
enter
jge
xchg
inc
pop
jbe
jl
xor
insl
xor
inc
shrl
es
popa
test
test
rdtsc
dec
sub
xor
out
inc
sub
mov
ljmp
mov
or
movsl
and
jno
imul
aas
or
fs
pop
jns
aaa
jb
aam
cmpl
cld
aaa
repnz
xchg
mov
sbb
int3
je
aas
jno
sti
xorl
push
lods
push
fcomps
clc
jl
movsl
in
inc
hlt
daa
adc
jecxz
mov
scas
aad
rcll
test
add
ss
mov
push
push
mov
sarb
int
inc
dec
sbb
pop
push
jno
jns
mov
fstpl
ja
stos
out
or
mov
dec
std
jge
movsb
ret
inc
into
movsb
jmp
add
push
daa
jb
pop
cltd
out
iret
stc
xor
dec
dec
add
fmull
cltd
push
outsl
call
and
sbb
sbb
dec
jmp
xchg
mov
and
sbb
lods
push
test
addr16
push
into
je
jne
popa
cmp
or
jbe
cs
aas
shrl
sub
sub
inc
mov
gs
repnz
mov
sub
test
pop
add
icebp
mov
repnz
stos
jne
cmp
jae
subb
xchg
repz
fists
jecxz
ds
pop
ds
mov
repnz
mov
mov
add
scas
jae
ljmp
jns
dec
push
lret
push
outsl
cmp
xchg
imul
mov
push
add
dec
mov
push
sahf
xor
loop
pop
mov
hlt
mov
sbb
add
subl
and
mov
push
out
movl
jg
clc
incb
es
push
into
mov
mov
flds
inc
pusha
pop
stos
scas
adc
rcl
or
inc
mov
jns
push
xchg
leave
jns
mov
aad
ret
movsl
mov
cmc
mov
push
fidivrs
or
xchg
dec
jl
or
pop
int
inc
push
outsb
out
mov
mov
enter
icebp
mov
or
stos
ljmp
std
fiadds
repnz
push
in
jno
loopne
xor
mov
inc
mov
movsl
fidivs
pusha
lea
ja
orb
in
jo
rorb
lods
fidivrl
out
sahf
sbb
in
or
pop
int3
inc
cltd
lret
or
leave
nop
cltd
ss
and
dec
cmp
pop
outsb
test
gs
pop
add
int
or
mov
or
mov
cwtl
mov
sub
sti
cmpb
xorl
lods
repz
push
adc
sti
mov
notl
mov
insl
movsb
and
fists
or
int
std
fdivrp
dec
shlb
cmp
insb
pop
faddl
lcall
insl
outsl
push
popf
fisttpl
dec
lret
repnz
mov
pop
es
pop
jno
test
xchg
call
dec
loop
in
or
iret
jl
cmp
inc
inc
xchg
xor
jecxz
push
pop
mov
or
sub
add
pop
sbb
dec
mov
out
je
push
movsl
repnz
jno
cmp
sub
cli
push
scas
stos
push
call
and
clc
jmp
mov
pushw
les
outsb
mov
adc
mov
inc
or
pop
loopne
dec
sbb
icebp
cmp
call
add
imul
out
push
loope
add
stc
in
cwtl
push
xchg
fisttpll
nop
movsl
shll
mov
lods
sub
out
ret
xchg
push
dec
ret
jb
sbb
addl
sbb
inc
pusha
sbb
aaa
pop
mov
push
or
jo
cmp
pop
pop
cmp
sub
lods
or
dec
cmovge
mov
inc
jne
mov
add
insl
test
imul
sub
loopne
pop
inc
lock
jmp
xchg
mov
and
lret
dec
into
inc
fwait
ret
das
stos
inc
les
gs
mov
clc
mov
xchg
mov
adc
jno
stos
rorl
repz
out
dec
fs
jno
call
xor
xor
or
cmovge
pop
xchg
test
mov
add
pop
pop
clc
mov
fwait
or
adc
add
aaa
pop
mov
xchg
lret
shr
and
lock
outsb
xchg
add
push
addr16
repz
enter
daa
stc
addr16
sbb
mov
jecxz
lods
lock
sub
decb
fwait
jo
in
adc
mov
dec
jmp
xchg
sub
add
subb
inc
pop
ret
out
sbb
ret
mov
inc
mov
push
aam
aaa
imul
lea
push
cmp
roll
mov
xor
push
jns
push
and
cmovns
sar
in
aam
dec
or
pop
fsubl
xchg
add
jmp
mov
pop
jle
adc
ss
dec
xor
pop
cmp
jmp
fwait
out
cs
lock
xlat
iret
js
mov
push
mov
add
xchg
cs
or
ljmp
scas
push
in
stos
dec
mov
mov
fs
std
or
test
mov
mov
dec
out
popa
adc
add
jmp
mov
ret
jbe
mov
shlb
push
es
ss
les
sbb
rclb
insb
push
dec
sub
inc
hlt
mov
pop
and
xchg
push
or
sti
cld
xor
xrelease
ret
jp
sub
xchg
repz
xchg
mov
pop
jne
and
adc
sbb
mov
mov
fwait
pop
sar
or
inc
dec
fnstenv
repnz
test
mov
dec
xor
sbb
outsl
aad
aas
daa
or
xor
add
int3
xchg
stos
in
mov
out
or
dec
shll
inc
fstpt
dec
mov
rolb
hlt
bound
cmpsl
lahf
stc
push
sub
clc
inc
outsl
loope
mov
xor
push
push
mov
mov
pop
mov
lret
mov
outsl
mov
emms
test
dec
shr
test
lods
jle
loop
cmp
jns
ret
cmp
jl
into
cmp
loope
add
jp
inc
mov
inc
imul
push
dec
pop
mov
pushf
sub
bound
test
ret
loopne
ss
and
and
pusha
addr16
jb
push
fsubs
sub
js
pop
imul
cmpsl
sub
mov
lods
add
icebp
jecxz
shlb
push
ljmp
sub
pop
pop
lea
mov
bound
lahf
in
fidivs
ds
and
sbb
out
cli
lds
jg
jno
mov
mov
fisttpl
rorl
cmp
imul
dec
imul
mov
push
xchg
mov
dec
xor
mov
mov
dec
jg
jnp
cltd
mov
mov
push
movsb
jns
pop
insl
lcall
bound
inc
mov
sbb
and
sbb
test
gs
xchg
xchg
push
test
cld
pop
inc
sub
sbb
mov
xchg
cmpsl
inc
mov
hlt
or
lods
cmp
jb
pop
jmp
xorl
cli
jp
pop
sbb
cld
adc
lret
leave
cli
dec
pop
out
cmpsb
in
bound
jecxz
pop
bound
popf
lds
mov
sub
call
mov
cwtl
out
ds
mov
test
pop
push
push
scas
stos
mov
sbb
mov
movsl
mov
cmp
ret
inc
sbb
xchg
or
test
or
bound
mov
dec
mov
mov
jge
in
insb
popa
mov
mov
aaa
insl
dec
or
adc
out
mov
xchg
push
xchg
dec
and
dec
aaa
inc
ror
mov
xor
xor
cmp
add
sub
cmp
sub
loop
mov
out
adc
sbb
sub
rol
sbb
arpl
xchg
inc
idivl
mov
roll
test
lahf
or
rcrb
mov
cmp
imul
cli
fnstcw
xor
into
inc
cs
call
sbb
out
mov
pop
push
cld
or
ret
pop
jno
xchg
jo
xchg
cmp
add
enter
shll
enter
fldt
pop
pop
inc
inc
jmp
cmpsl
jecxz
and
push
or
enter
bound
ljmp
inc
rcrb
movsl
je
xor
mov
je
ficomps
sbb
mov
adc
sbb
pop
popf
jecxz
jecxz
lea
or
test
xchg
jno
not
cltd
sbb
push
mov
movsl
push
sahf
addr16
or
inc
outsl
xor
es
ret
cmp
or
inc
hlt
das
dec
or
pop
rolb
test
cltd
xchg
es
fs
sbb
jl
outsw
repnz
adc
ljmp
mov
cld
xchg
lahf
mov
inc
cmpl
xor
mov
xchg
jp
mov
int
adc
fnstsw
add
in
rorl
mov
outsb
and
ret
fs
shr
jmp
cld
push
pop
scas
fsubl
fnstsw
push
sub
cmp
xchg
lea
lds
and
sub
clc
pop
xor
nop
mov
cmpl
dec
mov
adc
jne
pop
sub
jmp
jne
fdivs
rcr
movsb
insl
out
pop
mov
add
sbb
pop
incb
faddp
movsb
fsubl
mov
data16
repz
sbb
imul
adc
adc
nop
sub
js
insl
push
ja
cmc
inc
pop
pop
imul
in
push
ret
arpl
fsubs
adc
xchg
pop
dec
sbb
add
in
je
dec
dec
xchg
sub
cmp
shr
int3
cmp
ret
jno
push
sub
inc
ret
out
test
lds
aas
fistpll
mov
or
xchg
mov
mov
xor
test
xlat
leave
ss
mov
std
call
in
movsb
pop
fs
and
rcr
inc
sbb
cli
inc
lods
mov
movsb
push
outsl
xchg
pushf
jecxz
aad
out
repnz
subb
or
xchg
xchg
xor
mulb
pop
pop
std
lds
ja
mov
or
ds
mov
aaa
lods
and
dec
fninit
inc
pop
mov
mov
das
arpl
icebp
xlat
mov
adc
pop
ds
lock
mov
dec
hlt
and
test
jge
mov
xor
xchg
xor
or
std
fiaddl
gs
mov
jmp
mov
outsb
add
sbb
jp
out
xchg
leave
arpl
popf
movsl
xor
test
imul
fucompp
mov
lret
dec
mov
inc
call
rolb
neg
pop
ret
and
cmc
mov
or
mov
lock
gs
fldl2t
jl
nop
dec
es
adc
in
les
cmp
js
sbb
pushl
loopne
push
imulb
jae
mov
es
cmc
xor
mov
cs
cwtl
add
or
ja
cmp
dec
cld
jp
cs
and
jmp
fisttpl
sbb
fiadds
fildl
adc
jg,pt
pop
mov
jp
je
mov
sbb
mov
pop
jge
cmp
cmp
popl
and
jo
roll
and
adc
cmpsl
aas
mov
shll
out
fs
push
sbb
sbb
sahf
enter
jmp
pushf
int
inc
lea
nop
or
mov
mov
clc
pop
mov
sbb
wrmsr
sub
pop
inc
mov
icebp
mov
aad
pop
cli
jl
sbb
push
mul
cmp
xor
push
jb
sbb
pop
xor
or
arpl
int3
mov
bnd
shll
xlat
or
mov
sbb
fisubs
das
cmovl
inc
push
test
lret
jle
sar
sbb
sub
mov
jae
inc
cmpb
pop
out
cmp
jge
cmc
add
sbbl
and
in
outsl
cld
not
mov
insl
lret
imul
clc
add
shlb
in
mov
cmp
sbb
cmpb
mov
stc
in
cmp
repz
lock
lock
dec
fwait
cmp
movsb
ljmp
int3
push
js
xlat
in
aam
jne
sbb
add
xchg
inc
loopne
hlt
xchg
dec
imul
ds
fwait
sbb
jne
mov
mov
sbb
rep
push
cmpsl
popa
fnstsw
and
mov
push
jo
pushf
dec
mov
jmp
out
in
lahf
xor
adc
mov
pushf
insl
ljmp
pusha
hlt
daa
ljmp
dec
push
add
dec
jae
aaa
fnsave
pop
nop
xlat
in
insl
test
jne
mov
pop
mov
pushf
sub
fnstsw
jle
cmp
inc
ljmp
cmpsl
jg
mov
pop
adc
xchg
cld
jg
in
daa
sub
mov
int3
push
and
fsubr
add
cld
xchg
pusha
imul
mov
sbb
cltd
gs
dec
ja
add
arpl
sbb
add
outsb
and
out
push
shr
dec
push
das
jl
pop
bound
adc
sbb
mov
loopne
or
xchg
int
xchg
xor
lret
dec
mov
push
dec
mov
add
jp
mov
mov
mov
mov
lock
aas
arpl
cs
adc
sahf
add
mov
lea
stos
insl
dec
sbb
movsb
sub
icebp
cmova
insb
cmpsb
in
popa
test
pushf
and
dec
mov
mov
and
fiadds
daa
mov
std
inc
gs
mov
jnp
and
cmp
push
adc
div
xchg
ds
gs
fisubs
pop
fimuls
push
push
inc
movsb
or
lcall
incb
mov
adc
es
out
mov
or
lods
in
aas
arpl
popf
popf
cltd
push
xor
fdivrs
pop
lret
jnp
cmpsl
or
mov
das
add
inc
mov
inc
xchg
mov
clc
xchg
inc
fdivl
out
push
cmpsl
push
jno
pop
add
lcall
mov
mov
pop
adc
jne
add
push
sahf
fidivl
scas
dec
mov
mov
fwait
xor
and
push
outsb
ja
addl
xchg
xchg
sti
bound
jo
daa
pop
pop
nop
mov
mov
fildl
cmpsb
mov
xchg
out
jl
add
scas
out
outsb
mov
fistpl
out
call
cld
lret
shll
dec
inc
xorb
jno
mov
or
adc
adc
int3
cmpsl
inc
or
sub
aam
xor
js
push
xor
frstor
fldcw
mov
jno
bound
call
stos
jo
xchg
dec
jmp
fs
mov
dec
aad
ss
lea
sub
cmc
inc
add
fistps
add
pop
xchg
divl
in
ss
jae
push
sub
xchg
mov
jb
push
and
mov
mov
test
or
adc
test
sub
gs
mov
insb
mov
push
mov
mov
xor
sub
push
mov
push
lea
adc
push
pop
pop
or
mov
ljmp
jbe
repnz
or
adc
pop
imul
out
loopne
or
imul
cwtl
pop
mov
sbb
adc
xor
mov
push
jmp
icebp
cmp
adc
lods
pop
xor
ljmp
ds
ret
mov
stos
or
shl
leave
rcr
ret
bound
hlt
lods
xor
stc
adc
xchg
pop
push
xchg
scas
jecxz
lods
push
mov
je
jecxz
rcrl
adc
pop
push
push
push
dec
dec
xchg
adc
push
jo
arpl
push
insb
stc
jmp
xchg
xchg
cmpsl
mov
push
mov
jae
sbb
jmp
leave
mov
xchg
sarl
adc
jg
inc
xchg
and
fstps
subl
lret
dec
lds
lahf
outsb
dec
leave
fwait
sbb
sbb
fs
ss
sbb
std
in
xor
ret
enter
inc
pop
test
xchg
inc
test
test
mov
les
int3
cld
mov
sti
pop
jnp
cmp
mov
inc
repz
sti
pop
jae
sbb
fwait
ret
aad
fiaddl
cmp
lods
xchg
sub
ljmp
pop
or
pop
adc
sub
lret
dec
pop
rcrl
divb
pop
mov
xor
cmp
iret
xor
lret
nop
xchg
pop
jo
xchg
jle
shll
shrb
dec
lock
sbb
gs
int3
ds
scas
sub
fisttpl
jnp
jne
cli
inc
jne
pop
lret
jbe
pop
jle
fdivrs
stc
cmpsl
iret
add
sbb
sub
cmpsb
or
xchg
cmp
movsl
fidivs
sub
mov
adc
loop
dec
xlat
dec
jcxz
cmp
mov
adc
in
push
inc
iret
repnz
enter
jge
cwtl
cmp
clc
push
pusha
cmp
aas
int3
sbb
xor
dec
adc
scas
nop
int3
insl
or
inc
jp
pushf
mov
addr16
jmp
push
pop
or
pop
int3
push
mov
clc
fcmovbe
outsl
mov
dec
filds
cmpsl
enter
pop
adc
addl
fimull
mov
int
lock
and
les
xor
mov
mov
inc
test
imul
sub
in
movsl
lods
addb
mov
jnp
sbbl
add
leave
jae
mov
dec
andb
sbb
push
xchg
arpl
or
add
bnd
pop
addl
js
rorl
xlat
sub
cmpsb
add
or
push
js
lds
aas
je
dec
mov
cmp
add
outsb
adc
dec
sarb
mov
pop
push
xor
test
pop
add
mov
mov
int3
pop
lock
xchg
decl
push
in
inc
add
bound
lcall
iret
adc
xchg
nop
sbb
xlat
movaps
fdivl
cmp
dec
pop
push
inc
mov
mov
cmpsl
jle
xor
mov
jecxz
pop
cmpl
imul
dec
xor
jg
js
adc
fstpt
push
lods
xor
dec
fbld
xchg
dec
mov
cmp
test
loop
sti
push
imul
leave
or
outsb
xchg
cmp
pop
xchg
arpl
push
mov
xor
mov
mov
movsl
arpl
or
es
rorl
idivb
repz
sbb
mov
inc
pusha
aaa
and
pop
or
xchg
xlat
pop
push
xchg
ret
insl
lds
mov
insl
push
aas
jb
or
and
fwait
int
add
push
ret
xor
rorl
mov
clc
xor
mov
filds
out
or
lds
jmp
xchg
add
fiaddl
pop
xchg
jne
aam
call
push
sbb
test
or
mov
mov
mov
std
adc
movsb
loop
in
aaa
jb
pop
jae
cwtl
imul
in
mov
es
jb
mov
lods
adc
and
cmp
mov
sub
das
addr16
xor
cmp
xlat
mov
and
mov
pop
ds
je
mov
sbb
fwait
and
add
push
mov
xor
mov
cmpsb
js
jmp
push
dec
xor
repz
push
clc
out
jge
test
movsb
std
add
orb
sti
jb
test
out
inc
or
pop
fldt
sbb
arpl
fucomi
add
mov
outsl
outsb
in
je
lds
push
sarb
and
in
lcall
adc
xchg
mov
inc
repnz
outsl
mov
loop
bound
lds
add
rcrb
mov
or
jp
nop
rcr
dec
sbb
push
shrb
into
gs
int
sahf
push
aaa
rorl
xor
mov
inc
int3
jle
push
mulb
sar
test
xor
add
notb
cmp
and
mov
push
xchg
mov
cmp
out
dec
mov
sar
repz
dec
cmp
lods
stc
sti
xor
repz
std
outsl
jl
jp
xchg
mov
dec
push
stos
cmp
mulb
daa
test
xor
in
xchg
orb
jp
call
xchg
cld
cmp
mov
fldt
mov
mov
lea
xchg
roll
mov
jecxz
popf
scas
int3
adc
sti
stos
sbb
mov
and
int
sbb
lret
scas
push
in
dec
or
stos
movsl
push
rolb
xor
and
scas
cld
xchg
insl
sbb
dec
adc
outsb
fcmovne
aam
pop
dec
fiaddl
jbe
data16
pushf
subb
push
add
mov
lret
dec
and
mov
adc
dec
leave
xchg
inc
out
stc
adc
fcomps
insb
rorb
mov
dec
outsl
cmc
int
in
movsb
inc
jge
sub
xchg
sti
cmc
int
add
dec
movsb
jg
xor
pusha
sbb
in
cli
testb
scas
sbb
cmp
or
add
sbb
loope
adcb
test
dec
pop
aad
push
ret
addr16
mov
mov
sbb
mov
dec
fdivrs
sahf
outsl
jp
mov
jno
xor
seto
jp
imul
or
inc
mov
push
ljmp
scas
cmc
push
mov
shll
adc
push
push
cmp
mov
push
dec
and
inc
or
sub
xchg
adc
aad
sub
mov
cmp
mov
insl
out
xchg
pop
jg
or
xchg
gs
fistl
mov
add
and
and
pop
inc
mov
pop
imul
cltd
popa
inc
in
lods
imul
mov
push
cmp
inc
sbb
lret
insl
inc
mov
pop
mov
jb
mov
pop
outsb
shll
xchg
es
mov
jge
shlb
sbb
pushf
mov
cmp
daa
mov
mov
pop
lods
sbb
pop
pushf
jbe
notb
ret
stos
jmp
js
cltd
loopne
mov
mov
es
daa
pusha
pop
xor
inc
rcl
xlat
enter
testb
jl
ja
sub
or
subb
stos
cld
pop
test
fldcw
icebp
inc
mov
dec
cmpsb
jbe
inc
aad
push
xchg
shlb
mov
push
insb
es
daa
xadd
shr
outsb
pop
xchg
dec
lahf
mull
lahf
push
xor
and
daa
fisubrs
outsl
nop
ret
xor
sbb
sbb
sbb
push
jle
push
mov
adc
js
enter
dec
clc
dec
xchg
out
iret
dec
fsts
out
or
jecxz
inc
stc
cmp
xor
mov
xchg
rorl
dec
daa
outsb
repnz
fdivs
inc
push
mov
push
mov
cmp
aas
sbb
repz
adc
xchg
dec
jbe
cmpsl
pop
test
adc
repz
data16
xor
mov
jae
repz
cmp
nop
aad
push
fsubl
inc
dec
xchg
lret
repz
jnp
or
pop
xlat
mov
dec
xor
pop
in
adc
xchg
jmp
outsl
lcall
pop
and
movsb
ljmp
cld
das
or
int
adc
outsb
int3
add
xchg
movsb
mov
in
inc
jle
add
in
push
fwait
pop
pop
loop
cmp
and
in
add
lods
push
pop
dec
jecxz
pop
jns
or
or
mov
mov
jecxz
adcl
sbb
pop
mov
mov
jg
xchg
xchg
pop
imulb
mov
jmp
xchg
cmova
fldl
pusha
iret
dec
movsb
les
lock
mov
push
ret
ljmp
rolb
push
xor
fwait
xorb
into
jb
mov
fs
out
or
xor
and
lea
adc
aad
cmp
mov
jecxz
adc
fistl
sbb
rol
lcall
add
xchg
inc
aaa
cmc
clc
and
dec
sti
fs
xor
xchg
xor
and
mov
arpl
xlat
and
sbb
mov
sub
outsb
and
pop
or
push
lods
mov
stos
or
lods
inc
jl
push
aas
lods
sub
pusha
int3
daa
insl
addr16
scas
adc
rorb
dec
repnz
pop
ljmp
insl
test
mov
das
icebp
in
aam
or
shlb
cmp
xor
iret
and
and
mov
fimull
data16
mov
movsl
dec
cwtl
ret
jne
cmp
iret
and
out
mov
outsl
into
hlt
lcall
jle
add
in
xchg
pushf
out
mov
fbld
cmp
popa
cmpl
mov
daa
mov
loope
cld
test
je
stos
dec
dec
push
js
fsubrs
insl
ds
in
bound
xorb
pop
mov
inc
push
push
ds
mov
out
jge
adc
or
xchg
adc
hlt
adc
mov
popf
xchg
and
aaa
pop
cmp
sbb
sub
lea
jmp
mov
cmp
add
aad
cmp
pop
es
pop
sub
mov
ljmp
mov
inc
bound
or
push
shrl
sub
inc
fiaddl
sub
in
test
add
jno
lods
sahf
jns
in
imul
lods
or
pusha
imul
andb
cmpb
xchg
mov
daa
enter
and
mov
std
mov
aam
in
ss
cmp
push
movsb
dec
jecxz
inc
push
cmpsl
cmp
lds
inc
imul
insl
out
loop
add
fdivl
add
jge
pop
loope
in
in
fcmovne
or
or
scas
mov
jmp
inc
jmp
mov
inc
sub
int3
xchg
pop
xlat
xor
pop
ret
push
push
ss
leave
adc
xchg
jle
jmp
adc
mov
ret
and
jge
xchg
xchg
les
in
jl
jne
outsl
shl
jo
out
popa
adc
sbb
dec
iret
ja
les
add
sbb
out
popa
bswap
dec
enter
incl
ret
jl
enter
mov
sahf
fimull
xor
mov
aam
fldenv
jo
mov
pop
pop
das
add
test
lret
out
loopne
pushf
sub
mov
xor
outsl
lret
push
call
mov
pop
daa
sahf
adc
std
mov
mov
and
add
mov
add
mov
insl
xor
and
ja
int
fstl
pop
lahf
push
mov
sbb
mov
imul
mov
xor
pop
in
bound
ljmp
ja
lods
subb
fsubrp
jge
lret
cmp
sbb
hlt
aad
lock
xchg
add
cmpsb
test
fsts
sbb
loopne
add
addr16
cmp
mov
and
push
mov
es
inc
xchg
pop
nop
stos
xchg
jbe
iret
or
jl
aaa
or
inc
or
adc
mov
inc
cmpb
sbb
mov
rcr
dec
pushf
pop
push
scas
inc
or
lcall
fwait
out
mov
cmp
sub
and
mov
adc
add
ror
sub
cmp
cmp
jae
and
pop
cmpl
jecxz
cmpsb
adc
dec
insl
in
mov
sub
imulb
sti
dec
stos
xchg
push
ret
mov
pop
adc
pop
int
xor
push
popf
sbb
pop
lods
jecxz
pushf
mov
int3
repz
xchg
popf
out
add
scas
xor
cmp
pop
push
push
fcmovb
hlt
adc
dec
xlat
jl
hlt
imul
mov
cmpsb
push
aas
jns
jae
adc
out
pop
xor
arpl
sbb
dec
jge
pop
inc
lret
adc
pop
adc
jge
iret
jp
sbb
add
and
add
mov
adcl
out
ljmp
mov
push
js
mov
out
push
xor
mov
xor
jl
xchg
pop
sbb
andl
mov
cmp
pusha
orl
sti
test
daa
or
sub
and
or
pusha
and
mov
andl
xor
int
add
inc
jp
pop
mov
icebp
loope
mov
fs
fwait
pop
xor
and
cmpb
inc
subb
int
cwtl
inc
dec
cmc
ficoml
jge
out
or
push
adc
ret
in
decb
jne
cs
jle
cli
shlb
cmp
sbb
add
push
lock
push
mov
stc
insl
outsl
jae
push
mov
scas
pop
icebp
popf
push
fisttpll
popf
cmpsb
xorl
add
aaa
mov
pop
insl
fs
adc
out
or
in
pop
mov
pop
pop
push
mov
mov
fadds
and
ret
add
adc
out
movsb
push
mov
outsb
adc
xchg
mov
adc
fiaddl
loop
xor
mov
lods
pop
push
outsb
and
test
pop
mov
adc
xchg
push
xchg
adc
dec
jg
mov
paddq
push
cmp
inc
outsb
xchg
out
and
ds
in
je
cmpsb
pop
jle
mov
cmpsb
adc
mov
jb
xor
movsb
inc
nop
dec
test
push
cmp
lcall
imul
jecxz
sbb
mov
scas
jnp
std
mov
aas
and
sub
mov
push
test
dec
adc
ret
adc
test
scas
jns
pop
push
stos
shlb
xchg
xchg
outsb
xor
add
xchg
repnz
mov
adc
sti
cmp
pop
das
leave
mov
hlt
lcall
inc
jnp
addr16
xchg
bound
or
or
ret
inc
cli
aaa
arpl
clc
addr16
ljmp
cld
dec
pop
fwait
mov
jnp
mov
adc
popa
movsl
push
adc
and
lods
xorl
push
int3
je
mov
pop
aaa
mov
in
pop
mov
jecxz
stc
add
ret
aas
or
ss
fcmovu
mov
stos
push
pusha
adc
fistpll
mov
movsb
lahf
jmp
popf
lods
or
sbb
out
inc
iret
push
lret
xchg
or
dec
shll
rcrb
mov
insb
pop
mov
test
hlt
lret
push
dec
popa
xchg
repz
cmp
xchg
lret
mov
push
inc
popa
push
jne
or
fcoml
scas
mov
mov
mov
pop
popf
push
sub
int3
cmp
mov
fsubl
loopne
adc
out
mov
loop
imul
jno
cmpsb
loope
pop
cmp
jne
or
xchg
xchg
jne
lock
sbb
sub
enter
lods
mov
pop
cwtl
mov
mov
pop
or
add
add
dec
scas
jno
std
subl
je
pop
xchg
aad
xchg
repnz
lock
fildl
pop
in
mov
js
inc
les
xchg
pop
push
push
and
iret
mov
imul
je
inc
ret
mov
mov
out
and
add
dec
ljmp
sbb
out
sbb
add
cmp
mov
sub
movsl
jns
mov
out
mov
shll
add
push
sub
sub
scas
xchg
cli
add
jmp
jg
int3
push
mov
and
jae
repz
sub
bound
mov
push
push
xchg
xchg
int
sti
dec
or
repz
sti
or
sub
pop
mov
ret
ss
push
loope
dec
psubw
out
jns
cmp
pusha
jle
dec
lret
dec
fdivs
test
popa
push
or
movsb
inc
push
sub
gs
sbb
pop
jae
push
icebp
sbb
cmp
push
xlat
dec
pushf
cmp
and
xor
mov
mov
dec
adcb
and
lcall
mov
xchg
imul
xor
jno
pop
mov
push
pop
inc
aas
inc
negl
test
pushf
cmc
push
adc
pop
push
mov
xor
daa
xor
adc
aad
test
add
jge
mov
mov
xchg
inc
sbb
lods
dec
jmp
sbb
sbbl
mov
js
loop
or
sar
xor
inc
inc
popa
movb
test
daa
push
and
in
test
push
or
repnz
insb
pop
daa
aaa
adc
orl
sti
and
adc
cmpsb
insb
xlat
pop
xor
jge
xor
cmp
fisubs
int
imul
movsb
repz
pop
dec
shrl
test
jno
mov
subl
and
add
jmp
sub
clc
into
sub
or
daa
pop
movsb
cmp
mov
mov
dec
bound
into
lods
inc
js
out
fiaddl
mov
repz
call
jecxz
das
inc
or
sub
rolb
stos
sbb
push
scas
sbb
dec
mov
dec
test
jne
sub
lods
cltd
push
and
testb
dec
jmp
sub
add
outsl
pop
stos
stc
mov
insl
cmp
sti
lret
jle
aam
cmp
push
imul
sbb
adc
repz
dec
and
sbb
mov
sbb
xchg
inc
inc
add
ja
or
jb
xor
jnp
mov
push
push
cmp
lahf
das
jmp
aaa
lock
push
xchg
pop
insl
les
aaa
push
aaa
scas
bound
lock
inc
roll
sbb
jle
jns
push
sbb
lahf
arpl
inc
inc
test
inc
push
dec
lret
cmc
int3
divl
cli
aad
xchg
or
mov
xchg
xchg
scas
in
add
pop
push
outsb
mov
fistpll
adc
adc
mov
inc
mov
out
dec
pop
dec
stos
test
jne
outsb
pop
jno
jno
mov
testb
in
add
aaa
xchg
outsb
add
mov
inc
mov
or
adc
scas
and
mov
shlb
int
cmp
push
scas
fnsave
gs
sar
fsubl
jo
and
imul
mov
cmp
or
lods
leave
mov
dec
inc
xchg
add
sti
lds
xchg
mov
lahf
mov
dec
clc
adc
or
or
ret
sbb
lods
dec
xor
ret
sub
jne
push
cwtl
int
rcl
push
pop
mov
pop
cmp
jmp
fldl2e
out
mov
shr
inc
or
lea
fimull
push
mov
lods
notl
inc
cmpsl
sbb
jge
pop
lds
lret
iret
mov
out
mov
cwtl
push
popa
inc
add
hlt
data16
fstpt
push
push
mov
popa
rorl
adc
setb
jecxz
inc
jne
adc
call
push
adc
adc
in
repz
xor
imull
loop
cli
mov
xchg
cmp
jno
hlt
inc
popa
js
sub
mov
sub
and
sub
leave
push
stos
xor
ret
cmp
pop
xchg
push
push
xor
ja
mov
xor
ds
xlat
stc
or
jmp
les
repz
shl
cld
lret
xchg
cmp
clc
inc
and
inc
jae
lock
shrl
mov
popa
inc
lods
mov
shll
sbb
gs
int
or
inc
push
insl
push
xchg
dec
or
test
fs
loop
jecxz
adcb
sbb
push
xor
fcmovb
ret
jbe
cmp
xchg
shl
loopne
cwtl
loopne
fs
cmpsb
out
sbb
inc
mov
pushf
out
cmp
or
cmc
and
jge
bswap
push
in
pop
incl
mov
cmp
les
or
inc
push
jle
in
pop
push
lret
in
popf
dec
mov
inc
sarl
movsb
rcrb
addr16
into
mov
xor
jne
inc
aam
xor
lahf
test
jo
xchg
test
xorl
add
int3
mov
mov
inc
sbb
jbe
xlat
mov
cltd
or
mov
mov
bound
cmc
fwait
jl
stc
adc
mov
repnz
imul
fimuls
in
xor
xchg
dec
fnsave
cmp
and
pop
xchg
add
and
and
pop
daa
push
jns
jg
outsb
pushf
or
addr16
cmpsb
mov
fisubrs
testb
sub
xor
sub
movl
jp
fdiv
mov
xchg
or
xchg
add
imul
mov
lds
and
pop
push
adc
xor
xor
loop,pn
cld
sbb
out
iret
inc
test
ret
jge
ss
cmpsl
push
fmuls
pop
jge
sbb
push
jl
lea
cmp
aaa
out
iret
sub
lret
dec
add
xor
sbb
addr16
adc
hlt
je
scas
icebp
jmp
push
jmp
loop
add
dec
jo
cmpsb
dec
and
sub
test
mov
cmp
out
js
in
mov
fmull
faddl
xchg
ficomps
push
push
pop
push
fsubrl
scas
mov
xchg
jecxz
jo
cmp
xchg
or
mov
out
pusha
or
and
mov
pop
add
push
test
les
pop
pop
mov
xchg
xlat
fstps
cwtl
and
adc
inc
ja
and
test
sbb
xor
stc
stos
cmpsl
jbe,pt
ljmp
jns
dec
fnstsw
add
dec
adc
add
dec
pop
sti
adc
iret
pop
stc
je
jb
test
inc
sub
inc
ds
sbb
es
jecxz
jno
jne
jmp
mov
mov
dec
jbe
lahf
mov
or
xchg
mov
jb
mov
push
aaa
ss
lods
clc
mov
inc
inc
xchg
movsl
bound
mov
inc
inc
mov
mov
shr
sbb
sarb
ret
pop
mov
adc
les
std
cmp
add
adc
xor
mov
mov
es
push
in
dec
or
xlat
add
add
adc
lahf
adc
jns
add
cmp
outsb
sub
repnz
xchg
shrl
jl
xchg
lcall
jne
mov
cli
dec
in
lods
jp
scas
ljmp
test
ds
and
lods
mov
sub
int
ror
or
mov
iret
push
arpl
xor
inc
pop
sbb
in
or
orb
cmp
jne
push
inc
jg
cmp
mov
adc
jle
mov
clc
mov
mov
ret
inc
insb
inc
stos
cltd
jge
pop
mov
call
dec
mov
inc
into
fmull
add
test
dec
loope
sub
mov
rcrl
cmpsl
test
push
jmp
out
pop
test
das
jae
loope
xor
xchg
sbb
pop
cwtl
fstps
adc
sub
mov
sbb
arpl
rolb
and
jae
fnstsw
into
adc
std
lcall
jo
push
and
out
sbb
sub
sub
aad
inc
out
push
mov
sbbl
cmp
sar
insb
daa
sti
pop
add
mov
xchg
mov
jne
loopne
popa
ljmp
lea
jecxz
aam
mov
arpl
and
mov
add
test
pop
daa
adc
jae
fisttpll
int3
pop
and
inc
movsl
xchg
mov
and
adc
or
adc
xor
inc
xlat
or
push
pop
adc
xor
push
pop
outsl
ljmp
ficomps
xchg
mov
adc
pushf
sbb
pop
iret
add
fs
mov
cli
dec
mov
enter
test
cmp
shl
mov
push
loopne
out
jle
mov
xchg
jae
stos
inc
add
mov
inc
lods
inc
lds
xchg
loope
cmc
and
inc
inc
dec
loope
mov
cs
jb
rcll
dec
adc
adc
and
and
jne
sub
pop
sub
push
inc
inc
cmpsl
push
cmpsl
cmpl
aad
jg
out
dec
nop
hlt
cli
mov
jae
and
mov
xchg
lds
in
push
cmpsb
inc
xchg
push
lcall
fs
or
jb
aas
mov
les
inc
mov
popf
int
mov
aaa
push
add
fldl
and
sub
mov
pop
shr
cmp
repnz
daa
lahf
xchg
jmp
call
fsincos
ljmp
int3
mov
fcompl
scas
jle
test
out
pop
loopne
int3
mov
test
jmp
mov
jl
mov
jne
push
push
sahf
inc
mov
pushl
lcall
push
fdivr
push
mov
xchg
jo
mov
push
pusha
mov
jnp
or
negl
inc
cwtl
in
pop
repnz
mov
and
icebp
or
inc
push
jb
rcl
daa
jb
in
icebp
xchg
xor
ljmp
mov
sub
and
jbe
xchg
jle
pop
sub
pop
jno
jle
lods
jns
jne
flds
pop
ss
jg
pop
pop
je
push
xchg
loop
cmp
add
stc
mov
rorb
test
push
dec
out
mov
cltd
inc
cmp
insl
adc
dec
mov
mov
mov
loopne
cmp
adcl
cmp
jb
clc
add
movsb
sbb
daa
popf
ret
add
sub
add
outsb
cmpsb
mov
shll
repnz
movsb
loopne
xchg
sahf
shlb
pop
incl
mov
jmp
testw
xchg
aad
hlt
out
and
ret
sub
mov
xor
int
pop
in
xchg
ja
aad
dec
repz
cmp
in
xor
or
xchg
jmp
insb
lock
andb
mov
inc
cwtl
adcl
dec
fcos
add
mov
out
and
xchg
rolb
repnz
mov
inc
inc
lret
jno
imul
adc
jp
loop
cld
add
aaa
and
adc
sub
fwait
call
stos
push
sub
jbe
ret
sub
bound
cmp
pop
mov
fisttpll
xchg
xchg
sub
inc
push
scas
or
fsubrl
or
ret
lods
test
adcb
and
or
hlt
jmp
jmp
pop
in
lcall
scas
pop
test
xor
pop
mov
push
int
pushf
loopne
cs
movsb
int
jns
pop
outsl
jle
gs
or
scas
pop
loop
out
call
aad
pop
mov
mov
mov
jns
jae
out
jecxz
roll
fiaddl
repnz
inc
out
subb
push
std
dec
xchg
shrd
outsb
sbb
inc
pusha
push
adc
or
cwtl
pop
adc
fisubl
ret
mov
mov
mov
into
cmpsl
inc
xchg
or
shrb
cmp
repnz
push
lret
jnp
pop
repnz
jno
stos
shll
cmp
movsb
jbe
pop
or
subl
jnp
fwait
out
leave
xor
imul
pop
lea
orb
add
ja
js
jns
fcmovbe
loop
dec
imul
inc
dec
fldcw
shll
adc
mov
test
dec
orb
imul
subl
push
xchg
je
loop
add
mov
cwtl
sbb
pop
jne
ss
test
lret
mov
insl
ljmp
jo
out
shl
mov
in
add
push
add
push
cltd
and
mov
push
mov
insb
filds
mov
gs
out
mov
js
push
cmp
xor
add
std
xor
add
les
xchg
dec
aam
dec
mov
outsl
xor
jl
lahf
sbb
jb
ds
mov
aam
das
xorl
daa
repnz
iret
int3
bound
out
popf
xor
xor
or
fcomps
push
pop
cld
jae
scas
mov
inc
adc
ss
test
repnz
pop
mov
ss
xor
ret
jg
hlt
push
mov
jmp
jl
adc
repnz
fildll
and
xor
icebp
das
sub
scas
fcmovbe
cmp
ret
shrl
rep
or
into
int
jne
inc
dec
in
push
ss
jg
int
cmpsl
loop
pop
inc
iret
xor
jge
cvtps2pi
negl
jle
fildl
mov
jae
insb
pop
jns
or
lods
mov
xchg
add
mov
loopne
lret
and
jl
inc
in
scas
je
sbb
mov
mov
jno
in
rcrl
push
xor
rcll
xchg
scas
mov
adc
test
inc
or
cmp
pop
cmpsb
add
dec
arpl
arpl
movsl
and
sbb
pop
inc
das
mov
push
mov
push
xor
fsubrl
cli
js
push
pop
gs
es
cld
inc
test
popf
int3
jbe
pop
or
jne
xchg
push
in
jmp
xchg
mov
imul
xchg
and
sti
pop
pushf
ja
and
shl
mull
mov
fadd
push
jle
in
movsb
xchg
adc
lcall
pop
cmp
sub
jmp
ret
cmp
add
mov
and
lret
fnstcw
rcrl
int3
dec
fstps
call
mov
lcall
dec
push
cwtl
loope
or
xor
xchg
jae
add
mov
mov
pop
inc
cmp
jp
mov
jb
adcb
dec
enter
out
dec
sub
into
cmp
out
movl
xchg
push
mov
aaa
sar
add
adc
or
mov
jo
pop
xchg
ret
push
cmp
dec
in
pop
lods
xor
inc
push
fsubs
cmp
scas
adcl
aam
fxch
sbb
nop
push
ljmp
rcr
ret
or
stos
jns
mov
dec
sti
fwait
mov
aas
pop
cmc
push
xchg
fistpll
push
adc
mov
lock
fstl
or
movlps
mov
insb
jne
test
xchg
fbstp
rolb
adc
add
add
inc
dec
sub
sbb
mov
pop
sbb
mov
fmull
dec
or
mov
scas
stc
cmc
and
rclb
mov
jb
push
jle
lret
int
loop
pop
sbb
subb
cmpl
repz
dec
push
and
inc
andl
int
outsl
aam
mov
dec
sub
and
adc
test
imul
nop
rcrb
andl
fdivrl
inc
jae
lods
or
test
fsts
sti
jb
fldln2
cmpl
clc
rcll
mov
dec
push
add
adc
jmp
adc
scas
lock
mov
andl
adc
push
popf
push
pop
gs
icebp
call
movsl
icebp
popa
sbb
xchg
mov
int
xchg
test
in
push
inc
pop
lret
fcmovu
gs
add
fmuls
mov
cs
das
cld
gs
pushf
add
cltd
push
mov
sub
mov
leave
add
inc
xchg
jbe
aam
test
and
fisttpll
jno
out
mov
rcll
scas
xchg
pop
adc
insl
push
jmp
call
xor
cmp
shll
dec
xor
add
cli
mov
in
xchg
int3
pop
mov
and
xor
push
hlt
pop
push
push
adc
add
mov
pop
and
mov
aas
fstps
mov
mov
loope
sub
hlt
jae
inc
mov
lahf
jge
lcall
add
push
hlt
mov
jb
mov
lea
enter
aad
xor
sbb
xchg
mov
decl
adc
gs
pop
jnp
and
push
push
cli
jne
xchg
int3
daa
xchg
ds
hlt
addb
jns
daa
jb
add
dec
push
aas
mov
jge
inc
aas
push
push
adc
push
cld
cmp
adc
lea
lahf
negb
sub
jns
mov
mov
gs
pop
or
xchg
outsb
mov
clc
sub
aaa
cs
pushf
jp
mov
imul
dec
and
shrl
sub
fs
xor
sub
dec
jno
xchg
cmpsl
or
dec
fidivs
in
push
ljmp
xchg
sti
cwtl
pop
and
in
cli
xor
add
daa
ljmp
mov
jnp
pushf
ret
cmpsb
and
std
adc
mov
sub
clc
jg
ret
mov
mov
bound
fisubrs
loope
and
insl
rcl
sub
aaa
push
mov
sbb
cs
fiaddl
sahf
xor
add
out
jl
xor
sbb
leave
loope
adc
daa
imul
out
in
mov
js
int
lea
xchg
jmp
fmul
jle
inc
dec
pop
mov
or
pop
movsl
jo
jmp
lcall
jns
ret
pop
mov
andb
sub
leave
add
or
pop
sub
mov
dec
xchg
push
pop
movsb
hlt
jnp
cmpl
in
mov
add
jp
jno
pop
test
sbb
push
shll
js
arpl
enter
lock
and
inc
xor
daa
mov
das
push
pop
sub
jno
push
rorb
jg
xor
mov
addl
push
push
push
orb
dec
push
fisubrl
jecxz
out
lcall
aaa
pop
mov
inc
je
lcall
mov
jle
adc
jecxz
gs
stc
jne
stc
in
cwtl
xchg
icebp
loopne
mov
inc
jae
daa
enter
lcall
in
and
push
dec
jmp
mulb
mov
stos
xchg
mov
popl
stc
xchg
xor
dec
test
cmp
insb
mov
mov
ds
in
ss
jg
add
sbb
lahf
pop
pop
addr16
or
lods
out
nop
adc
dec
mov
add
out
andb
aas
xor
mov
pop
mov
xlat
lods
out
mov
ret
dec
test
sub
fisubrl
add
outsb
sub
pop
loope
adc
jmp
add
push
add
fsubl
ret
xchg
int
les
icebp
dec
in
inc
lahf
in
mov
out
xlat
insb
push
add
out
push
or
imul
mov
mov
je
mov
out
pop
push
lahf
or
sub
fldcw
push
sbb
and
in
call
ljmp
das
cmp
cltd
pop
xor
jne
enter
stc
shlb
icebp
das
aas
loope
push
pop
test
xchg
xchg
lods
in
or
mov
ret
adc
xchg
xchg
jp
enter
js
pop
cmp
mov
jns
pmaxub
push
inc
xchg
std
loop
inc
aaa
mov
dec
xor
stc
roll
pop
add
lea
out
in
push
lcall
pop
lods
aam
push
js
repnz
call
push
js
xchg
inc
push
add
jo
jnp
add
dec
fistpll
repnz
mov
outsb
fwait
jmp
cmp
and
lcall
loopne
push
imul
rorb
sbb
mov
fs
mov
js
mov
push
sahf
int
test
cmp
in
sbb
push
mov
imul
mov
jne
jl
dec
lods
and
fldenv
int3
mov
inc
add
push
push
add
ret
pop
out
and
push
fs
push
sahf
dec
pop
dec
into
jnp
insl
cmp
outsl
shrl
outsb
sbb
outsl
sub
xchg
inc
enter
xor
icebp
mov
rcr
popa
std
jmp
movsl
pop
test
cmp
sub
cmc
xor
pop
jge
lds
scas
sti
pushf
inc
push
mov
inc
add
adc
push
jp
xlat
dec
inc
inc
add
pop
dec
shrl
xchg
cli
fnstsw
divl
mov
push
cwtl
inc
push
cld
mov
pop
adc
xor
mov
or
insb
imul
daa
add
dec
mov
jb
mov
pop
iret
push
add
fst
jbe
cmp
push
fdivrl
sbb
in
push
adc
insl
ret
inc
inc
jnp
jno
dec
cli
push
jge
add
sbb
xchg
push
xchg
jecxz
bndstx
movsb
sti
loope
push
ljmp
xchg
hlt
inc
loop
out
shl
jae
push
fildll
rorl
pop
fldt
add
mov
push
sub
mov
test
or
xor
dec
and
insb
dec
dec
test
dec
or
fiaddl
fisubs
xchg
cmp
daa
in
mov
out
push
ss
popf
mov
xchg
fsubrs
mov
gs
xor
mov
mov
mov
lahf
push
popa
and
or
in
inc
lcall
cmpsl
pop
mov
lods
int
lcall
cmpsl
xchg
inc
jecxz
push
ja
lods
xchg
xlat
mov
adc
push
xchg
repnz
imul
outsb
xor
scas
shl
cld
inc
sbb
cld
mov
sbb
xchg
sub
push
mov
addr16
push
shlb
xchg
lea
les
xchg
aas
out
mov
mov
xor
fildl
fdivl
push
movsb
dec
xchg
lahf
mov
sqrtps
fwait
jne
sti
out
inc
popa
lahf
jae
enter
hlt
scas
xor
repnz
add
xor
push
xor
sub
mov
enter
sub
adc
fstps
adc
rcll
dec
or
out
inc
cmpsb
mov
lock
aam
cwtl
inc
jne
cmpsl
arpl
subb
or
sahf
pop
inc
lcall
inc
sub
jae
pop
mov
mov
adc
lock
mov
pop
mov
xor
dec
mov
cmpsb
or
xchg
mov
and
dec
sti
ret
addr16
xor
mov
dec
call
sub
cli
adc
ret
jno
jg
stos
push
add
movsl
out
std
es
mov
xor
loope
push
stos
add
outsb
xchg
dec
loope
pop
daa
mov
sbb
jae
int3
push
lahf
sbb
aad
lods
clc
add
push
sbb
lret
push
xor
jg
out
mov
cli
or
enter
lahf
push
sbb
int3
dec
adcl
cltd
add
subb
invd
scas
inc
imul
pushf
out
iret
test
int3
mov
scas
dec
loopne
mov
loop
pop
dec
mov
mov
add
inc
addl
push
xor
arpl
rorl
cmp
je
pop
fists
inc
xlat
and
push
pop
pop
mov
or
add
pop
fcmovnbe
and
push
scas
dec
roll
lods
cld
daa
mov
jns
sbb
or
xor
cmp
mov
push
mov
inc
sar
jp
in
arpl
xchg
lahf
pop
xchg
dec
loop
add
inc
sub
cmp
mov
push
subb
pop
lds
jbe
push
cmp
mov
mov
fucomi
cld
push
mov
iret
fs
sar
jecxz
fstpt
push
int3
in
inc
loopne
pop
mov
adc
popf
int3
sar
shr
pop
test
divl
lods
adc
test
ds
imul
mov
aas
add
pusha
mov
sbb
jg
aam
testb
popf
mov
mov
pop
or
or
imul
cmc
xor
mov
pop
inc
push
cld
mov
pop
lock
add
and
push
jbe
lods
popf
cmp
xchg
test
or
das
push
lods
leave
test
test
cwtl
dec
ret
mov
jmp
in
xor
in
or
add
incl
jp
or
sub
push
les
jo
lret
fcomp
pop
repnz
rclb
fiaddl
test
ja
xorb
push
mov
loop
jle
jne
aas
dec
jnp
mov
mov
dec
sbb
cld
outsb
sub
pop
pop
pop
divb
jne
add
mov
xor
push
enter
sbb
adc
dec
repz
sub
push
jg
mov
pop
cs
cltd
int
sub
mov
outsb
jnp
pop
xor
or
or
cmpsl
jl
sbb
jge
iret
xor
mov
lods
xor
pop
gs
mov
push
xchg
mov
xchg
arpl
repz
sbb
imul
dec
lea
add
adc
mov
dec
cmc
mov
mov
fs
mov
out
shl
or
dec
jmp
pop
bound
cmpsl
and
mov
pop
stos
add
neg
or
movsb
cmp
xchg
adc
aad
arpl
movsl
loopne
jp
and
repnz
push
jae
mov
enter
imul
xchg
jbe
and
add
in
repz
or
lahf
pop
mov
mov
xchg
inc
mov
loopne,pt
mov
inc
dec
fisttpll
int3
sub
enter
iret
sbb
jno
jg
push
or
or
lds
in
sub
loopne
out
repnz
push
mov
fdivrl
shrl
push
xchg
cltd
jle
insl
mov
xor
mov
push
ss
push
mov
test
lea
push
sub
addr16
stos
test
dec
pop
fdivs
add
aas
pop
in
lds
and
fdivrs
scas
ret
push
xorl
ret
stos
outsb
pushf
sbb
dec
inc
dec
fmuls
xlat
movsl
sbb
sub
mov
movsl
js
es
pushf
imul
xor
push
lods
jnp
and
andps
adc
out
sub
das
shr
js
shll
jne
cmc
scas
cmpl
cmp
test
push
or
mov
sarb
out
imul
sub
dec
xchg
repnz
cli
inc
adc
mov
and
pop
in
scas
out
jg
adc
xor
repnz
repnz
add
xchg
jge
in
inc
inc
jns
repnz
inc
push
and
lea
jecxz
pushf
test
stos
movsb
dec
jp
or
jg
lcall
push
stc
jp
loop
rol
outsb
cmp
push
cwtl
cltd
mov
cmp
ret
sti
cmp
lds
xlat
test
inc
push
and
push
and
sti
cmp
dec
jg
and
cmp
enter
ret
jns
mov
pop
pop
dec
dec
test
jge
repnz
sub
aam
mov
lret
mov
dec
jp
dec
in
xor
ret
sub
dec
ret
imul
xor
cmp
mov
popf
xor
lret
jae
or
jl
jg
jg
cmpsl
jl
daa
into
inc
jb
inc
xchg
xchg
cmp
and
push
and
sub
jg
mov
inc
hlt
inc
clc
imul
inc
pop
jo
or
ja
fiaddl
rcr
cmp
xchg
pushl
or
jle
mov
jo
aad
inc
sbb
mov
jns
iret
aam
orb
cmp
addr16
xlat
fcoms
out
jb
lret
push
popa
jns
stos
push
xchg
stos
sub
push
adc
jno
add
ljmp
push
rol
out
adc
xchg
shl
push
xor
inc
jg
add
mov
insb
sbb
push
push
negb
out
sti
jp
xchg
clc
movsb
or
stos
popa
jns
repz
fwait
popf
mov
in
pop
insl
lea
adc
xchg
clc
or
mov
jge
cmc
mov
movsl
and
scas
jmp
xchg
cs
push
js
cltd
and
mov
mov
clc
xor
dec
jg
and
leave
mov
push
ja
test
push
mov
pusha
xlat
nop
lods
xchg
cmp
xchg
cmpsl
jle
aas
movsl
int
imul
mov
cmp
jp
addr16
ljmp
xchg
push
dec
or
into
scas
es
and
lahf
fcmovb
es
pop
outsl
ficoml
out
dec
sub
sahf
jae
jg
add
fistpll
hlt
ror
sbb
jmp
jmp
into
jns
sbb
adc
xchg
pop
add
xchg
icebp
sub
and
jae
pop
lret
aad
pushf
repz
lcall
scas
ret
leave
scas
xchg
xchg
pushf
and
mov
sti
xor
stos
fstp
push
scas
push
push
ficomps
cmpsl
mov
jp
ret
stc
mov
ja
push
enter
cmc
and
stc
rorb
dec
mov
jg
mov
xor
out
fwait
testl
stos
sub
adc
fistpll
int3
outsb
mov
adc
pop
xor
fs
dec
int3
fidivrs
pushf
lods
xchg
inc
cmp
inc
dec
fisubrl
sarl
pop
jbe
iret
mov
sbb
test
xorl
lock
je
pop
cmpsl
out
xor
or
fadds
jae
pop
dec
rolb
push
sbb
xor
or
sub
frstor
or
or
aam
aad
insl
push
xor
mov
dec
mov
xchg
sub
idivb
xchg
lret
insb
pop
je
pop
sub
les
mov
xchg
arpl
mov
jp
loopne
push
stos
mov
push
push
das
xor
push
pop
inc
mov
jns
sbb
sub
xor
ficoms
repnz
dec
xor
jae
sub
push
orl
loopne
mov
xchg
out
mov
test
movsl
adc
cmc
or
sub
mov
in
shrb
cmc
sub
adc
mov
lods
push
aad
jnp
jl
dec
cmp
insl
pop
pop
and
xchg
jae
push
mov
dec
xchg
scas
scas
lods
test
mov
imul
push
negl
and
pusha
push
pop
or
jmp
sbb
inc
mov
jecxz
fiadds
cmpsb
out
adcl
push
addb
cmpsl
add
pop
mov
xchg
insb
dec
mov
xchg
fistpll
jl
xlat
pop
mov
dec
stc
push
jmp
bound
out
mov
arpl
rcr
mov
mov
imul
bound
push
in
je
sti
fbstp
mov
lods
xor
in
fnstenv
mov
mov
es
mov
fcmovu
js
scas
pop
cmc
stos
cld
out
enter
mov
rorb
sbb
lock
lods
fiaddl
inc
fisubrs
mov
adc
dec
sbb
sub
sar
lcall
xor
test
xor
mov
in
sbb
sar
sbb
or
jnp
stc
insl
daa
xchg
rorb
push
imul
mov
les
push
lret
in
dec
insb
pop
dec
sahf
in
adcb
sahf
mov
xor
bound
and
lods
cmp
out
mov
das
aad
xchg
inc
xor
xchg
inc
pop
mov
cmpsb
pop
mov
xchg
and
add
enter
adc
sub
fsubrs
xor
and
jbe
mov
jmp
test
stc
xchg
pop
arpl
jecxz
mov
out
fildll
jg
jb
cmp
jecxz
cltd
mov
fisttps
push
pop
jne
shll
movsl
ljmp
pop
xlat
call
stos
push
or
frstor
mov
aaa
adc
mov
lcall
test
std
sub
mov
push
xchg
and
dec
mov
popf
out
and
or
push
and
push
cmpb
iret
push
xchg
int3
mov
mov
sub
fildll
mov
in
enter
repnz
and
jmp
jnp
jl
xor
cld
or
sbb
lahf
lcall
std
jmp
pop
in
mov
movnti
jge
xor
adc
imul
dec
mov
sub
dec
mov
xor
ljmp
hlt
and
sti
xor
inc
out
ficompl
jne
cmp
adc
xchg
sub
sbb
es
test
test
mov
js
dec
pop
lods
rorb
dec
jo
popf
addb
push
and
leave
fsubl
push
jne
mov
cltd
sbb
loope
mov
pop
fistpl
xchg
xchg
nop
jle
xchg
mov
inc
repz
jmp
into
inc
mov
jecxz
add
lcall
js
sbbb
call
jg
cmp
icebp
fiaddl
sub
jno
sub
xchg
mov
cmp
psrlq
push
movsb
pop
pop
out
mov
xchg
call
sbb
push
lret
outsb
add
cmp
es
gs
lock
div
loope
mulb
lret
cmpsb
ss
arpl
gs
in
fcmove
xchg
xchg
popf
adc
movsb
data16
xor
test
push
call
mov
dec
and
adcb
lock
inc
and
mov
fwait
cmp
lods
add
sub
imul
clc
adc
insl
ljmp
pop
or
mov
and
outsl
iret
lock
popf
push
cwtl
pop
bswap
jbe
cltd
daa
jb
sub
pop
push
out
movsb
mov
scas
mov
mov
mov
inc
sub
fisttps
mov
xchg
pushf
shrl
nop
popa
push
cmpb
push
or
push
daa
mov
adc
xchg
and
in
xor
sub
jno
xor
pop
into
nop
int
mov
mov
enter
scas
or
scas
push
movb
pop
into
imul
add
fmuls
test
movsb
call
pop
push
mov
mov
sub
fstpl
add
std
jp
mov
movsb
jl
mov
ds
cmc
xlat
imul
xchg
xchg
mov
jno
xor
dec
test
and
dec
test
nop
test
int3
jl
in
aam
fsubrp
sub
pop
dec
inc
xchg
cmp
int
iret
lret
popa
ret
mov
push
repnz
add
pushf
push
fwait
jnp
pop
jb
dec
call
push
dec
xrelease
mov
add
dec
out
mov
subl
sbb
into
push
fdivrs
clc
arpl
cmp
int3
sub
stos
out
mov
inc
out
jne
ret
inc
cmp
es
or
jbe
add
push
es
jno
fdiv
js
stos
xchg
adc
jno
cmp
adc
sbb
xchg
push
loopne
sbb
ljmp
negb
scas
cltd
pop
out
xchg
pushf
pop
js
cmc
jno
dec
xchg
bnd
loopne
cmp
inc
mov
jbe
sub
lret
mov
sub
arpl
loope
lock
sbb
and
std
movsb
rorl
lret
lea
push
cmpsb
lods
or
icebp
mov
push
adc
push
loope
jecxz
jbe
pop
add
fmul
andb
jmp
mov
pop
cld
push
jg
mov
les
push
fildll
inc
lea
sti
lret
add
lret
sub
ja
and
vorpd
xchg
fnstsw
lods
fldenv
inc
aas
bound
pop
inc
mov
sub
add
idivl
ret
pop
adc
mov
or
mov
pop
xchg
mov
cltd
jb
mov
push
sub
mov
mov
stc
dec
fadds
mov
fdiv
add
xor
popa
outsb
mov
loopne
inc
stos
js
loopne
out
mov
es
jno
jge
out
aad
adc
cmp
pop
addr16
daa
push
pop
lret
add
cli
data16
ljmp
pop
mov
mov
mov
sbbl
filds
inc
cmc
cmpsb
nop
mov
pop
jbe
andl
test
in
pop
lods
imul
dec
lea
pushf
sbb
push
xchg
cmpsb
jle
jo
ss
rcrb
jle
sbb
repnz
es
loopne
xchg
iret
xorb
cs
jae
push
pop
xchg
mov
jmp
inc
mov
pop
lret
fisubl
xchg
push
popa
add
push
or
das
jecxz
push
es
test
nop
scas
cmp
clc
popf
or
push
fwait
jle
cld
loop
sub
mov
adc
push
push
mov
mov
aas
inc
xchg
xchg
adc
push
loop
lds
push
jle
mov
fwait
jg
cwtl
xchg
leave
mov
scas
lret
jnp
cmp
das
in
push
mov
push
lret
aad
out
lret
gs
mov
mov
imul
pop
stos
pop
mov
insb
popa
movsl
daa
ss
sub
cltd
pushf
inc
repnz
pop
fisubrs
mov
lock
push
rcrb
inc
nop
sub
cwtl
dec
lock
or
scas
jp
insb
data16
jo
hlt
adc
popf
dec
leave
mov
cmp
divb
pop
gs
fidivrs
jmp
cmpsb
xchg
mov
adc
aas
mov
fnstenv
cmc
rep
push
fsub
cmp
push
daa
pop
std
loop
lds
mov
mov
push
xlat
mov
scas
in
push
mov
push
fcmovbe
ja
dec
sub
xchg
mov
out
xlat
mov
repz
xchg
fcmovu
ljmp
xor
dec
xchg
mov
jmp
popa
adc
gs
iret
mov
jbe
pusha
jae
or
push
mov
imul
shrb
add
jbe
sbb
rcl
orl
pop
lret
pop
shlb
incb
into
cltd
stos
and
sbb
mov
push
aas
or
xor
idiv
out
subb
clc
loope
dec
sbb
ds
shl
pop
mov
fcomi
mov
aaa
cltd
xor
jl
xchg
mov
sbb
pop
cmp
or
mov
mov
dec
or
pop
loopne
lea
dec
aaa
andl
sbb
lcall
cmpsl
pop
push
inc
repnz
xchg
mov
fsubs
in
xchg
test
add
cltd
mov
sub
dec
xchg
lods
pop
pop
sbb
andb
mov
mov
push
jg
das
subl
mov
fs
movsl
push
adc
ret
shlb
xor
or
cmp
inc
or
insl
lea
bnd
in
daa
cmp
int3
jg
lock
sahf
mov
jns
mov
sbb
or
sarl
fisttps
xchg
out
int3
loope
mov
cmc
pop
movsl
stos
movsb
repz
cmp
data16
in
xchg
fldenv
rolb
xchg
in
rolb
aas
das
mov
pop
push
outsb
dec
dec
loop
push
icebp
sahf
cs
das
rorb
pop
data16
dec
out
ja
leave
mov
addb
pop
aam
lock
mov
fs
cmpb
cmp
inc
popa
jnp
hlt
dec
cmpsl
fidivl
cmpsl
push
cld
int
imul
cmp
jo
pop
push
sub
push
outsb
adc
pop
sbb
mov
in
sbb
aam
cs
pop
lahf
gs
jmp
repnz
je
mov
pop
cltd
jecxz
add
shll
repz
lds
cmp
add
leave
adc
aam
dec
lret
sbb
xlat
stos
sub
or
ja
mov
xlat
int3
mov
inc
cmp
pop
sbb
or
bound
xlat
push
xor
mov
xor
jmp
xor
sbb
jae
adc
pop
mov
arpl
jge
stc
jb
lahf
cmc
pop
stc
fcoml
roll
cwtl
xlat
dec
subb
popf
scas
mov
cwtl
je
mov
pop
out
aaa
jno
insl
sub
test
jle
not
and
mov
movhps
leave
inc
hlt
push
sub
roll
int
mov
jle
rclb
lds
mov
cmp
fistpl
repz
dec
test
jp
inc
or
dec
jne
daa
xor
pop
dec
mov
and
std
in
loopne
mov
pop
clc
js
adc
xor
pop
inc
es
xchg
xchg
test
loope
push
test
jge
ljmp
mov
adc
pop
cmpsl
jmp
shll
mov
cs
push
and
xor
or
insl
flds
sbb
pop
int3
imul
shll
mov
int
jb
mov
dec
scas
or
xchg
test
test
enter
cmp
jl
xchg
xor
dec
xor
jbe
repnz
mov
jp
fisttpll
mov
mov
dec
jnp
and
popa
jge
into
pop
jnp
add
push
or
mov
sbb
adc
mov
mov
mov
jnp
aam
dec
adc
xchg
insb
xchg
js
fwait
or
push
add
int3
in
xor
arpl
xchg
cmpsl
inc
pushf
push
in
sub
inc
add
cmpsl
cmp
inc
imul
aad
repnz
aaa
add
lcall
pushf
mov
inc
cmp
jb
dec
pop
jne
cmp
iret
in
insb
xchg
jecxz
jmp
push
dec
push
daa
mov
dec
rol
pop
ds
mov
inc
lea
aad
pusha
roll
sti
and
mov
cli
xor
add
fxch
dec
push
pushf
js
push
paddw
cmp
adc
rolb
fnstcw
ds
pop
ret
dec
push
sbb
inc
cmp
hlt
shrb
test
fdivrl
pop
nopl
test
pop
xlat
cli
cmpsl
sbb
adc
negb
imul
inc
push
jbe
jns
xlat
xor
or
mov
xchg
jo
push
outsl
mov
add
movl
repz
push
inc
mov
jmp
pop
xchg
ds
push
cmp
mov
mov
or
fisubs
mov
xor
sbb
into
je
push
iret
arpl
mov
and
jne
lahf
mov
inc
xor
dec
xchg
or
pop
pop
mov
mov
dec
xor
mov
adc
push
imul
cli
inc
xchg
mov
lds
bound
add
mov
fists
mov
data16
stos
cmpb
mov
mov
cs
daa
sar
cmp
jl
and
mov
inc
cld
fmuls
jge
pop
or
mov
in
xor
mov
inc
xor
lods
cld
dec
ficoml
sub
and
dec
jb
out
mov
jmp
jnp
add
jnp
insb
into
pop
and
mov
hlt
xchg
fs
clc
xchg
repnz
in
ficoml
in
or
jne
cmpsl
xchg
sbb
pop
lea
push
pop
and
out
mov
fiaddl
ss
jmp
aaa
mov
inc
repnz
arpl
pop
gs
loopne
rorb
pop
add
pop
lea
sbb
outsl
add
rcrl
jno
call
popa
loopne
icebp
fiaddl
xor
or
inc
mov
jmp
divb
test
push
push
sub
jle
xchg
push
sar
repnz
js
aam
loopne
test
push
jb
insl
push
and
ss
and
out
lret
ss
push
out
sbb
mov
call
fs
rcr
adc
loopne
jne
xor
loop
pop
mov
jo
stc
fwait
pusha
mov
addr16
dec
sbb
lret
jae
or
jecxz
loopne
mov
lret
cmpsb
out
adc
insl
xchg
cmpsl
mov
sub
or
pushf
xchg
test
pop
enter
jecxz
push
fxch
mov
mov
add
add
movsl
mov
mov
cmp
xor
sub
aas
and
aam
sub
mov
int3
loope
ljmp
mov
outsl
xchg
repnz
xor
aas
ds
inc
mov
icebp
in
push
shll
push
das
or
mov
repnz
dec
lret
mov
cmpl
mov
sbb
jns
pop
bound
fldcw
cld
sbb
xor
and
push
dec
cmpsb
jmp
jge
add
std
out
mov
dec
in
dec
hlt
or
pop
mov
fmul
push
cmpsl
mov
hlt
aas
test
mov
xor
ret
fnstenv
jecxz
mov
sub
out
fldenv
enter
xor
loop
inc
push
es
cmpsb
cmc
cmpsb
fwait
sub
cmp
jle
add
mov
sahf
fld1
shlb
xchg
xchg
and
cld
scas
into
mov
jle
cmpsb
cltd
cld
daa
xchg
sbb
push
inc
push
or
push
adc
or
dec
lock
lock
fnsave
jnp
mov
jecxz
lods
shlb
pop
jecxz
fstpl
lods
jns
leave
inc
mov
pop
data16
push
sbb
jge
pusha
mov
sbb
sub
sub
push
into
loop
cltd
sbb
inc
mov
inc
loop
aaa
imul
cmp
jle
cmp
ja
ss
sub
dec
cs
out
fimull
inc
repz
sbb
mov
mov
insb
mov
xor
xchg
lcall
jmp
je
sbb
dec
rcl
enter
lods
ror
dec
lds
xchg
in
repnz
test
aam
pop
pop
pop
mov
fwait
jb
xor
mov
mov
and
pop
and
cmp
mov
insl
test
mov
fs
dec
and
or
ss
ret
cmp
and
mov
cmp
subb
mov
sub
pop
out
sahf
enter
mov
daa
call
xor
xor
es
push
test
sub
or
std
dec
cli
ja
shll
sbb
inc
test
fiadds
push
and
push
mov
lea
rolb
pop
mov
sbb
add
mov
call
in
and
cmp
push
sbb
addb
mov
add
or
js
les
call
jmp
std
dec
rclb
adc
call
inc
pop
push
rcrl
sub
outsl
dec
orb
inc
repnz
jne
inc
jle
push
dec
mov
and
jecxz
jb
mov
dec
loop
ret
rclb
mov
shl
fisubrl
rorb
mov
into
mov
xor
movsl
test
lcall
arpl
jns
jo
mov
loopne
mov
mov
add
test
dec
cmp
mov
pop
aaa
jl
push
xchg
shl
ficomps
std
repnz
mov
loope
sub
int3
ljmp
call
and
in
lahf
or
repnz
scas
dec
pop
sub
scas
test
loop
xchg
mov
pop
jp
rcr
add
je
cmpsl
clc
mov
pop
fxch
sarb
inc
addr16
dec
cmpsl
xor
xchg
insb
sub
movsb
push
loop
xchg
daa
and
pop
seto
cltd
js
pusha
mov
push
daa
pop
mov
mov
mov
jb
lds
pop
sarl
fwait
mov
xor
lock
mov
xor
mov
test
push
xor
inc
pop
add
cmc
daa
fisubrl
mov
lea
mov
out
pop
lods
enter
mov
outsb
cmp
andl
xchg
mov
and
or
data16
mov
dec
push
insb
rol
nop
cld
pop
inc
mov
repnz
lahf
into
loope
add
sbb
inc
aam
shll
jo
pushf
push
mov
push
leave
cli
jno
inc
call
mov
std
and
es
imul
out
bound
insl
cwtl
dec
ds
xchg
mov
je
cmp
repz
sbb
push
adcl
into
pusha
cli
mov
mov
testb
outsb
jns,pt
mov
push
in
ds
ret
sahf
cmpsb
mov
fnstcw
repz
or
lock
lods
dec
xchg
imul
push
xor
cmpsl
sbb
inc
cmpb
jo
xlat
call
mov
lahf
inc
pop
sti
adc
mov
pop
jecxz
mov
xor
in
loop
jl
loopne
push
push
shlb
fistpll
jns
fiaddl
push
xlat
aaa
cmp
jae
mov
jne
xchg
lcall
iret
xchg
pop
mov
mov
cmpb
and
inc
xor
scas
mov
aam
inc
dec
lea
ds
mov
cmp
subb
sub
loopne
repnz
cmp
adc
push
clc
pop
add
adc
mov
and
imul
and
and
sbb
dec
lods
dec
or
adc
jg
icebp
cld
add
nop
std
lods
xor
and
popf
ffree
jns
cmp
jne
mov
jg
sub
pop
fdiv
jge
icebp
pop
sub
or
push
lods
dec
push
fdivrp
xchg
cmp
notl
cmpsb
iret
rorl
jge
and
scas
sub
mov
dec
js
cmpsl
adc
test
ret
insb
mov
cmpsl
adc
mov
and
push
mov
jmp
xchg
test
jb
mov
xor
int
adc
pushf
pop
mov
and
insb
pop
addl
or
mov
cltd
sub
mov
cmc
mov
dec
cltd
gs
mov
cmpsb
cmp
ret
aad
test
jb
cwtl
mov
out
jl
cmp
ds
mov
xchg
mov
push
pusha
in
movsl
inc
mov
fistpl
pop
cmc
cs
lret
mov
aam
mov
inc
jns
jmp
push
inc
pop
dec
adc
dec
sub
ret
mov
outsb
push
in
sub
cmp
mov
imulb
mov
ljmp
push
dec
and
inc
movsl
jp
pop
enter
xor
les
xchg
pop
cs
inc
mov
or
test
outsb
in
div
cmp
adc
stos
inc
leave
aad
gs
and
mov
in
mov
fwait
clc
jmp
lret
jo
lahf
out
stos
or
lock
and
inc
cmpsb
inc
shl
dec
in
fmull
dec
cmpsl
xor
in
ja
push
test
test
insl
inc
sub
xchg
adc
jbe
test
dec
xor
out
fisttps
test
clc
inc
push
mov
fisttpll
jg
inc
movsl
cmp
out
mov
cmp
cltd
cltd
js
add
in
incl
arpl
sbb
pop
sbb
int
sbb
dec
or
insb
popa
add
mov
mov
mov
and
cli
nop
or
ficompl
aam
aam
adc
js
jne
xor
fsubr
jo
sbb
stos
push
jae
sub
mov
or
push
push
mov
popl
std
pushf
and
cmp
pusha
pop
subb
mov
or
jle
pop
mov
fsubl
pop
or
std
gs
lea
addr16
sbb
or
add
fimuls
add
shlb
int3
lods
in
leave
aaa
jo
or
in
adc
cmc
test
xchg
xor
mulb
adc
out
insl
push
or
push
jb
or
fs
sub
mov
sub
jmp
xor
jo
lret
mov
jns
jge
jmp
xor
fmuls
imul
nop
mov
add
test
in
mov
push
xchg
or
cwtl
push
ss
pop
js
push
xchg
ja
and
out
shrb
pop
test
fwait
ret
sti
fs
bound
lods
cmp
mov
mov
jecxz
cmpsb
loope
xor
repz
or
mov
mov
mov
fistpl
lds
mov
pop
inc
jg
sbb
xchg
jle
push
les
outsb
jmp
sahf
loop
xor
dec
push
aam
insb
jne
and
stos
fdivl
sub
mov
arpl
add
flds
xchg
cmp
mov
xchg
xor
fistpll
inc
popf
enter
cli
pop
f2xm1
lcall
cli
in
and
fsubl
hlt
xchg
fdivrl
xor
push
testl
jl
jns
repnz
push
adc
sti
mov
mov
lods
daa
lds
icebp
ljmp
pushf
xchg
jnp
cwtl
ret
cwtl
es
push
adc
fnstsw
cmpl
xor
cmc
fmuls
pop
push
pop
cmpsb
dec
adc
mov
insl
xor
clc
loope
adc
jmp
or
and
sub
iret
and
nop
lods
jae
insl
pop
sarb
cmp
les
insb
test
sbb
sahf
les
xchg
loop
ja
fs
shrl
add
add
add
pop
outsb
lds
inc
shll
bnd
mov
lods
icebp
fcomp
sub
scas
and
fwait
and
fstl
sbb
aam
push
add
inc
inc
xor
xor
xchg
xor
sbb
repnz
sti
mov
pop
cli
in
jae
xchg
adc
jo
dec
add
arpl
hlt
out
rcrb
cmp
mov
jp
xchg
into
pop
sub
arpl
in
xchg
and
or
pusha
jp
int3
cmc
iret
shrb
inc
lods
xchg
ror
lcall
sarl
xor
inc
sahf
sti
pop
dec
das
push
leave
and
dec
test
xchg
mov
sbb
mov
dec
xchg
stos
push
sub
inc
loope
sub
cmp
lcall
notl
adc
data16
jmp
xchg
add
sbb
mov
xchg
loopne
aaa
nop
adc
bts
mov
sahf
lea
inc
lret
mov
adc
mov
and
mov
dec
cmpsl
jbe
sbb
imul
fwait
lret
adc
and
sub
xchg
push
jmp
push
lret
lcall
dec
sub
rolb
les
out
cmp
or
mov
mov
in
sbb
stos
or
daa
jb
push
or
mov
xchg
jo
inc
xor
push
outsb
call
jne
enter
adc
jno
lret
mov
and
addr16
fisttps
pop
xchg
fidivl
fildl
pushf
mov
sub
les
out
jo
pop
mov
fmuls
push
pop
cwtl
mov
mov
add
in
ficompl
vpshufd
or
or
stc
push
pop
sbb
xor
jne
mov
orl
inc
jp
sahf
mov
movsl
ficoml
push
loope,pn
icebp
mov
aas
outsb
pop
xor
enter
inc
lock
lcall
xchg
jnp
push
sahf
es
aas
je
jge
insb
mov
sbb
cmp
lahf
cltd
jp
sub
mov
fmuls
fidivrl
cmp
pop
sub
icebp
mov
push
inc
inc
xchg
rcr
loope
aam
mov
pop
scas
repnz
add
scas
movsl
cwtl
leave
pop
loop
sarb
sbb
mov
mov
push
iret
mov
stc
fdivrl
cmp
insb
in
xor
sbb
popa
cmpsb
pop
loop
popf
jno
pop
fsubp
mov
push
mov
jbe
jge
xchg
bound
ror
addr16
mov
das
fsubrs
sarl
inc
xchg
lahf
jmp
jae
pop
cltd
inc
daa
cwtl
test
mov
xchg
push
clc
mov
jecxz
adc
sti
adc
leave
fidivrs
call
addb
mov
stc
pusha
scas
mov
jge
jnp
jne
clc
cli
rclb
stos
or
in
add
sbb
inc
lcall
mov
call
pop
and
into
rep
sbb
mov
repnz
mov
sbb
sar
aam
or
xor
stos
insl
cmp
mov
mov
test
cmpsb
xchg
jmp
outsb
iret
mov
lods
lret
lahf
mov
and
test
imul
mov
and
mov
mov
cli
insb
rcr
jle
mov
movsb
adc
pop
mov
mov
ljmp
jg
push
mov
dec
jg
or
or
scas
mov
shlb
pop
push
ret
scas
cmpsl
dec
adc
cmp
sbb
xchg
jle
mov
fidivl
mov
mov
out
div
add
fsubrl
ror
repz
add
je
into
inc
xchg
mov
cmp
pop
ret
jnp
jg
std
and
inc
sbb
lcall
jg
outsl
fwait
xor
sarl
push
test
or
jg
out
movups
loope
loope
xor
stos
lods
sub
stc
outsl
inc
mov
xor
fnstcw
cmpsb
push
inc
jbe
scas
lret
xchg
into
jbe
aaa
mov
pop
pushf
lret
cmp
push
movsb
cld
jp
andb
js
jns
stos
dec
pop
imul
jae
aad
nop
or
push
roll
pop
add
sbb
cltd
call
pop
cmp
xchg
jl
cmp
pop
xchg
sbb
ljmp
cmp
iret
pop
push
lods
pop
imulb
shlb
push
mov
mov
adc
xchg
xchg
xchg
lds
push
sbb
mov
dec
insb
mov
xor
inc
cmp
or
into
ficoms
push
test
es
push
insl
call
push
xor
xchg
push
adc
sbb
das
mov
daa
push
add
jmp
mov
mov
ja
jl
call
repz
mov
test
sbb
and
adc
xor
pop
mov
and
ret
std
sti
lock
add
inc
in
push
cmpsl
jmp
add
push
cwtl
xchg
add
fildl
push
sub
push
mov
sub
sub
sbbl
xor
lret
pop
xchg
iret
stos
roll
scas
jecxz
mov
xchg
stos
cmp
pop
mov
popf
jl
icebp
cmpl
jo
outsb
inc
inc
cmp
fsubl
lods
push
cli
movsb
push
cmp
push
cltd
jo
mov
xor
add
fadd
icebp
and
jmp
xchg
cmp
and
and
mov
inc
fldt
mov
lret
ss
flds
das
rcrb
add
inc
or
clc
and
fcoms
sub
push
in
into
jg
add
jg
mov
ljmp
out
dec
fdiv
aaa
push
mov
mov
shll
cmp
clc
xchg
lock
sti
adcl
fmuls
aam
push
iret
mov
xor
int3
popa
jg
inc
je
xor
sbb
mov
mov
setnp
rolb
stos
int
loopne
xchg
lock
mov
stos
xor
cmpsl
xchg
bound
add
test
mov
data16
pushf
jg
pop
ds
out
mov
scas
pushf
jp
xor
pop
mov
ljmp
cmpsl
stos
sbb
xchg
imul
insl
popa
push
lods
pop
stc
add
pushf
daa
lods
mov
pop
scas
adc
pop
pop
sbb
bound
stos
fdivs
adc
ja
enter
cwtl
dec
mov
addr16
jle
mov
pop
hlt
idivl
call
pop
inc
imul
sbb
test
fcoms
out
clc
and
mov
pop
pop
and
mov
mov
lods
sub
lret
into
iret
mov
or
sbb
imul
dec
mov
daa
push
jnp
mov
aad
shrl
cmp
cmp
mov
js
cmpsb
cli
addr16
sti
xor
mov
insb
outsb
push
cmp
add
outsb
sbb
adc
test
ja
orl
repz
sahf
dec
xchg
inc
adc
cmp
xor
scas
or
sbb
ret
xchg
repnz
or
push
mov
aaa
int3
adc
pop
mov
aaa
or
sub
mov
cmp
and
inc
cmp
or
popa
test
mov
cmpsl
popa
sub
sahf
test
loop
fsubrs
adc
mov
mov
data16
xor
xchg
enter
dec
push
lret
pop
sub
mov
cmp
cmp
std
mov
scas
mov
xchg
cmp
pushf
jl
js
sti
xchg
fbld
xchg
lods
into
aam
or
sub
test
and
scas
pop
xchg
rclb
sub
jg
scas
into
int3
cmpsl
dec
insb
jns
adcl
sarb
push
add
mov
sub
mov
iret
loopne
mov
fildll
rol
in
int3
and
pop
push
xchg
add
cld
xchg
sti
sub
stos
rcll
sbb
push
rorw
cli
imul
push
mov
loopne
mov
push
lods
sub
pop
fbld
bound
dec
iret
push
jns
int
mov
fsubrs
mov
sbb
sbb
inc
mov
es
or
pop
sub
lret
pusha
dec
or
cltd
dec
jmp
fwait
add
frndint
sti
pop
push
das
gs
addr16
adc
push
jl
inc
pop
sbb
jmp
ficompl
fcoms
shl
ja
jg
sbb
sub
xchg
clc
dec
aaa
mov
shlb
lock
jge
inc
out
and
test
jmp
jg
mov
mov
dec
pop
add
mov
ret
adc
mov
mov
pop
push
xchg
imul
cmp
and
inc
lods
adc
lcall
push
cmpsb
push
add
dec
stc
rep
mov
adc
sbb
push
aaa
repnz
mov
or
add
cwtl
or
cmp
mov
call
addr16
mov
mov
leave
std
mov
xor
mov
aad
pop
leave
mov
sbb
pop
sub
xor
stc
sub
cld
cli
xor
cs
inc
lea
push
mov
mov
pusha
pop
lcall
push
adc
dec
inc
in
xchg
lds
adc
mov
pusha
mov
divb
pop
push
jle
incl
xchg
mov
inc
repz
mov
cld
mov
push
shll
cmp
push
cli
inc
mov
inc
stos
add
movsl
cmc
je
xor
fcoms
in
cmp
jge
insl
xchg
aaa
add
call
fmull
lods
cmp
pushf
or
imul
sub
pop
repz
fwait
jge
xorb
icebp
push
xor
ljmp
popf
outsl
test
cwtl
pop
mov
aaa
mov
in
pop
xor
jnp
dec
es
add
in
movsb
cwtl
lret
std
int3
pop
sub
cmp
into
mov
add
add
jmp
dec
sarl
fidivl
aad
mov
roll
jg
dec
jb
shlb
push
aad
cmovo
std
push
or
lock
xor
icebp
push
ljmp
xchg
mov
pushf
bound
in
inc
cmpsb
out
jb
outsl
lds
mov
xor
ja
mov
sbb
imul
out
cmpsb
mov
inc
push
lods
cwtl
leave
sarl
jne
jg,pn
dec
cs
xchg
dec
fimull
fimuls
movsl
jg
xor
lea
pop
xchg
mov
xor
movsb
push
imul
pop
adc
js
and
divl
sti
pop
call
xor
mov
les
fisubrs
cli
data16
lahf
and
test
sbb
push
dec
outsb
and
clc
sbb
rcl
lret
cmp
xor
push
outsl
xor
sbbb
add
test
push
scas
daa
fcomps
dec
test
or
mov
andl
mov
leave
pop
dec
outsb
sbb
in
jecxz
hlt
jnp
lock
pop
mov
jecxz
push
mov
jbe
out
push
xchg
mov
xchg
jl
add
sbb
dec
sbb
jbe
mov
pop
and
loop
das
push
inc
push
mov
sarl
jge
and
arpl
lock
das
nop
adc
leave
mov
pusha
test
mov
fstpt
jnp
xchg
rcl
mov
xor
arpl
sti
into
mov
or
sbb
jo
mov
popf
int
lods
adc
xor
les
mov
jbe
sbb
loop
int
rcrb
icebp
pop
fisttpl
cld
stos
mov
xor
loopne
leave
or
inc
cld
or
push
das
sbb
dec
pop
scas
test
in
dec
push
stc
xchg
sarl
test
sub
cmpsl
adc
rcrl
rcr
testb
and
cmpsb
neg
jmp
ja
xchg
push
gs
add
pop
cmp
mov
xchg
push
jbe
add
sub
push
repnz
add
in
sti
pop
inc
sub
or
fiadds
rolb
jmp
loop
mov
in
rclb
mov
pop
out
cmp
mov
jg
repz
pop
fdivrl
and
divl
xchg
and
test
imul
test
xor
imul
and
push
in
and
roll
imul
or
dec
movl
shrl
fisubs
test
dec
jl
outsb
arpl
push
jb
enter
lret
aad
pop
enter
push
das
notb
pop
pop
nop
or
mov
sbb
and
and
in
add
pop
inc
jns
xchg
mov
xchg
bound
jge
outsb
xor
aad
or
cwtl
repnz
out
jle
fnsave
ljmp
daa
scas
aam
cmp
test
mov
mov
pop
xor
cmpsl
sbb
xor
jbe
dec
xchg
fldenv
jns
lret
test
pop
mov
push
mov
andl
dec
add
sbb
inc
dec
fildl
and
sahf
add
loopne
and
movsl
dec
push
and
sbb
cmp
mov
xchg
popa
lcall
aaa
int
or
insl
pop
sti
sub
mov
or
and
mov
inc
sub
mov
stos
int
sub
mov
jns
out
push
xor
mov
push
stos
sub
outsl
xchg
mov
inc
es
inc
pop
push
and
lock
jnp,pt
lcall
push
roll
sbb
adc
adc
rolb
jp
arpl
jp
inc
and
std
sub
jg
ffree
jbe
iret
adc
dec
cmp
icebp
push
jbe
and
in
xchg
dec
pop
cmp
sti
pop
idivl
jae
repnz
iret
jecxz
mov
ficomps
mov
mov
sbb
sbb
into
iret
adc
sub
or
xor
ret
pop
scas
scas
rcll
sbb
lods
pop
insb
adc
dec
enter
call
fildll
fnsave
sbb
jne
test
and
mov
lods
imul
pop
iret
jp
and
and
out
cwtl
iret
cmp
subl
cmp
mov
ret
inc
popa
lds
iret
or
adc
sbb
inc
ret
addr16
lahf
adc
out
sbb
adcl
lods
stc
jge
pop
rcll
add
nop
inc
addr16
xchg
in
push
imul
add
insl
frstor
out
mov
fldl
xor
fs
dec
xchg
rcrl
cmc
jne
sbb
addr16
mov
xchg
cmp
jge
xchg
test
cwtl
lods
popa
lock
daa
mov
fwait
mov
jge
ret
sarb
push
das
inc
test
xchg
daa
repz
or
in
mov
mov
mov
xchg
loop
fs
jl
sub
repz
add
pop
pop
fsubrp
lahf
iret
and
mulb
xchg
dec
in
cmpsb
sar
imul
stc
test
sarb
xchg
adc
pop
jge
cmpsb
movsb
test
xor
int
test
mov
imul
push
xor
jae
cmp
xchg
getsec
cmp
pop
testb
int3
or
sub
ljmp
lock
cmp
mul
push
push
jl
mov
push
shlb
sub
fldpi
outsb
cmp
xorb
lret
pop
aas
out
je
add
fld
loope
outsl
out
or
mov
fistpl
jmp
int
loope
push
ja
dec
pop
repnz
mov
xchg
leave
pop
mov
lcall
pop
push
mov
inc
mov
sbb
sahf
mov
cltd
push
mov
or
repz
fs
movsb
out
inc
adc
sbb
rcr
push
pop
sub
inc
lock
xchg
mov
rcr
les
ret
pop
mov
lods
add
pop
fcmovnbe
xor
sub
daa
jge
inc
in
ss
fisttpl
lods
rcl
adcb
inc
jmp
sub
xchg
shl
loope
push
ret
and
cmp
mov
hlt
xor
and
xchg
jbe
mov
cli
sbb
lods
dec
mov
loope
adc
pop
sbb
add
mov
ret
lcall
xor
imul
sub
cld
adc
xor
adc
mov
insb
xchg
cmovs
xor
jae
std
push
mov
xchg
mov
in
enter
imul
and
rclb
adc
xchg
lret
mov
ja
jge
inc
pop
pop
lds
mov
cmp
mov
and
int
scas
dec
add
gs
enter
out
pop
loope
lret
andb
arpl
shrb
and
sbb
xor
rcrl
sbbl
inc
push
adc
movntq
sbb
mov
flds
mov
pop
pop
sbb
ljmp
xor
dec
jne
cltd
jnp
push
add
pop
dec
cmpsb
cmp
pop
xor
add
add
fdivp
rep
das
mov
lret
xor
cmp
cmp
lahf
xchg
xchg
lret
pop
ljmp
mov
fcompl
idivb
sub
pusha
add
in
add
bnd
pusha
imul
std
and
pusha
int
push
mov
dec
push
fdivr
mov
or
cli
sub
inc
pop
push
jns
pop
xrelease
ret
arpl
push
add
add
stc
jno
sbb
push
cli
lahf
mov
dec
inc
test
movsl
pop
sub
push
jmp
dec
dec
jb
cs
mov
int3
xor
icebp
mov
dec
loopne
mov
les
fistps
jle
jae
inc
add
push
add
in
jl
pop
pop
ret
push
ds
or
movaps
push
movsl
shrl
int3
and
sub
sub
fwait
push
jo
in
enter
mov
hlt
jg
inc
cmp
stos
test
jbe
and
xchg
bswap
lods
xchg
call
sbb
out
add
mov
cmp
mov
inc
dec
pop
jae
push
cmpsb
push
rcrl
pop
xchg
test
std
push
in
add
sub
lcall
cs
mov
cmp
test
leave
icebp
add
cs
icebp
fidivrs
int3
and
imul
jnp
call
mov
xchg
xchg
cmp
pusha
cltd
sti
shll
adc
insl
add
mov
mov
mov
xchg
cmp
adc
sub
push
sbb
dec
in
cmp
adc
cmp
add
loop
sub
jp
adc
stos
push
cli
adc
pusha
hlt
adc
mov
push
pop
add
xor
lds
pop
int3
mov
sub
cmp
push
arpl
popa
sahf
xchg
leave
or
mov
out
idivl
mov
subl
movlps
es
ret
mov
adc
inc
mov
bound
add
mov
jle
mov
fwait
mov
jbe
mov
adc
ss
shll
xchg
adc
lret
sahf
cmpsl
pop
loop
sub
dec
sub
mov
push
cli
lds
loop
repz
dec
or
sbb
inc
nop
mov
fisttpl
nop
repz
test
cmp
mov
lcall
jbe
movsl
cli
mov
mov
mov
pop
push
mov
mov
dec
jae
adc
pop
jbe
ret
int
in
push
jecxz
je
mov
js
mov
test
aaa
loop
push
sbb
xor
and
cmp
sub
xchg
aas
jle
jno
cmp
sbb
rorb
pusha
xor
mov
mov
std
mov
push
iret
loopne
fcom
jae
fdivrl
adc
cmp
or
mov
and
mov
pop
daa
add
sub
sbb
std
into
pop
mov
push
push
movsl
or
add
push
fcomps
repz
sbb
mov
call
or
or
dec
rorl
enter
hlt
nop
call
shl
sbb
jno
pop
lahf
push
fcoms
jno
sub
sub
cmp
lret
rep
negl
fcmove
cmc
dec
jg
rol
sahf
incb
or
roll
and
mov
imul
push
bound
push
ficoms
push
inc
int
in
lahf
test
shrl
icebp
or
xor
shll
mov
ja
mov
mov
sbb
and
lahf
enter
lds
aam
xchg
mov
sbb
sbb
xchg
int3
adc
inc
je
mov
xchg
ret
dec
fisttps
push
pusha
mov
stc
cmp
mov
xchg
popa
push
cmp
mov
mov
pushf
jmp
scas
mov
inc
push
pop
sti
jnp
lret
xchg
cwtl
xor
xor
fnstsw
int
stos
mov
mov
push
popf
std
repnz
fucom
xor
adc
and
xor
cltd
arpl
push
lods
popf
or
or
mov
or
and
mov
inc
inc
sbb
subl
jo
nop
clc
and
in
insl
mov
jns
repz
ret
pop
sbb
mov
out
jne
rorl
fbstp
test
insb
shlb
sbb
daa
mov
xor
lcall
std
or
xorl
jo
sub
pusha
enter
cld
outsb
fiadds
ds
std
mov
inc
lock
arpl
movsb
loope
mov
fwait
push
push
or
mov
outsl
imul
mov
jbe
jae
push
rcrl
icebp
ss
jnp
bound
in
rcrl
cmp
push
mov
inc
mov
xor
mov
fldt
add
imul
into
icebp
insl
cmp
lcall
popf
in
lds
jmp
pop
mov
jbe
adc
jle
stc
mov
leave
xor
fcmovnbe
push
fwait
insb
mov
and
mov
xor
mov
sub
imul
lock
test
loope
push
outsl
mov
mov
sbb
movsb
xlat
daa
xor
fidivs
fs
push
scas
mov
ret
fisttps
imul
xchg
xchg
cltd
insb
insl
push
in
sti
dec
push
mov
dec
fidivl
xchg
mov
xor
ja
adc
and
mov
sub
nop
test
inc
jle
xchg
adc
cmp
sub
daa
out
push
jmp
pushf
xor
outsb
mov
outsb
xorb
movsl
push
lret
out
or
imul
shrb
nop
push
cmpb
adc
jle
mov
and
and
mov
cmp
mov
add
add
inc
pop
push
sbb
cli
jle
push
mov
mov
dec
dec
in
mov
mov
inc
enter
adc
lods
push
pusha
jno
cmpsl
xor
cwtl
sti
pop
int
cmpsb
inc
or
sub
cmp
clc
cmp
push
mov
data16
xor
ja
imul
xor
xchg
js
add
scas
hlt
push
movsb
sahf
sarl
push
jp
and
sbb
imul
xor
in
pop
imul
xor
cmp
lods
and
ds
mov
sub
mov
insb
sub
cltd
xor
ja
mov
js
dec
jne
xchg
outsl
push
enter
out
stc
xor
cmp
xlat
js
or
mov
add
test
cmp
lods
mov
mov
sub
pusha
jge
je
sbb
push
sub
repz
shlb
jmp
inc
mov
fwait
or
dec
add
dec
or
ja
dec
ds
push
cmp
adc
and
mov
daa
js
repz
out
xchg
mov
add
mov
mov
sub
push
test
push
inc
enter
inc
and
mov
jnp
fisttpl
inc
test
lods
and
mov
rorb
mov
repnz
sbb
jns
cmp
adc
mov
add
sbb
stos
jmp
pop
push
or
add
in
stc
jno
and
pop
ja
test
push
xchg
cmp
lds
mov
je
sub
push
dec
outsl
inc
out
and
xchg
aas
mov
add
frstor
xchg
sub
in
or
ret
inc
mov
push
test
out
pop
and
sbb
push
negb
lss
or
outsl
lock
lret
inc
sbb
fucomip
loopne
pop
aas
addr16
out
xor
or
mov
in
and
hlt
movsl
imul
nop
and
push
iret
push
cmpb
int3
mov
enter
in
repz
inc
mov
aad
or
ror
fcoml
push
lea
add
mov
lea
mov
sti
dec
sub
dec
ffree
push
xchg
sti
push
mov
and
cmp
adc
or
jp
push
test
psrld
adc
mov
loop
and
mov
fstps
sub
outsl
ret
std
and
inc
daa
shll
sbb
push
imul
xor
mov
in
jae
hlt
in
sbb
adc
jno
mov
int3
adc
mov
add
insb
sub
inc
mov
mov
jecxz
outsl
push
adc
or
stc
xor
icebp
and
cmp
push
dec
mov
sbb
adc
fdivrl
pop
ror
pushf
or
fldenv
cmp
bound
pop
cmc
cwtl
icebp
iret
in
adc
pop
adc
hlt
fldcw
dec
xchg
push
push
jbe
lds
hlt
xchg
mov
add
dec
xchg
push
ss
dec
les
dec
mov
jno
sub
mov
pop
jae
push
in
adc
shlb
inc
out
jmp
nop
and
sub
flds
out
xor
fwait
out
enter
jns
in
push
xlat
clc
hlt
push
cmc
jecxz
or
or
and
mov
cwtl
sub
dec
sbb
inc
xor
push
xchg
and
in
lods
repnz
pop
lret
push
xchg
icebp
add
cmp
ret
adc
and
mov
sub
popf
pusha
stos
dec
jecxz
sbb
les
stos
sbb
cmpsb
xor
enter
lods
sub
lcall
scas
jp
xchg
mov
xchg
jmp
dec
popf
fwait
mov
out
xlat
inc
test
sarl
sbb
sbb
out
mov
cs
jg
lock
test
in
or
push
sub
pop
pop
imul
imul
pop
or
fstl
cltd
outsl
sub
incb
mov
xlat
int
jo
imul
mov
test
push
popa
cmp
pop
sarb
nop
lahf
pusha
enter
sub
jnp
push
and
stos
andl
jnp
mov
and
push
rclb
repnz
add
aas
das
sbb
or
aas
and
inc
imul
in
xlat
cmp
int
adc
inc
push
sub
push
dec
lea
clc
pop
aam
imul
jns
jp
ds
cmc
jmp
outsb
push
gs
xchg
stos
pusha
sti
sub
and
dec
xchg
loope
stos
lock
add
sbb
leave
or
cmpsb
inc
jg
add
mov
lods
scas
or
xchg
addr16
adc
add
hlt
imul
and
mov
out
sti
sub
mov
std
movsb
pop
jl
dec
mov
adc
repz
insb
je
jecxz
add
pop
dec
loopne
cmp
inc
mov
subb
loop
mov
out
aam
push
inc
loope
inc
hlt
jo
sbb
inc
lret
push
pop
xlat
pop
inc
sub
and
int3
xchg
lcall
test
outsb
push
cmp
mov
lret
cmp
sbb
movsb
cmc
repz
je
aaa
mov
xor
xchg
jae
cmp
cld
scas
adc
jne
xor
mov
lock
sub
hlt
xor
jbe
mov
push
or
push
and
lock
ljmp
rclb
shl
in
addr16
pusha
sbb
inc
push
and
aas
push
xor
icebp
subb
mov
dec
jl
xchg
movsb
int
jb
cmp
push
dec
sbb
lods
and
or
inc
cmp
stos
pop
jge
hlt
pushf
push
stos
mov
add
or
pop
lcall
jne
negl
sti
xchg
jnp
add
aaa
inc
test
lods
fcoms
nop
xchg
fs
test
dec
or
out
xchg
lods
hlt
cltd
push
mov
leave
inc
andb
or
xchg
inc
pop
pop
dec
and
jno
ljmp
mov
and
aas
cltd
or
mov
frstor
aas
or
es
stc
imulb
hlt
cli
inc
pushf
ljmp
mov
and
pop
repz
ficomps
sahf
mov
pop
out
sbb
imul
or
dec
movsl
cmpsb
insb
or
imul
and
sarl
adc
out
cmc
jae
dec
inc
push
and
adc
aaa
mov
movaps
adc
stos
lcall
sbb
push
dec
xorl
adcb
pushl
test
cltd
push
pop
push
inc
xchg
or
xor
dec
sub
push
inc
cs
cmp
jl
ja
mov
loope
sub
cwtl
test
xlat
rorl
jecxz
test
inc
xchg
sub
outsl
shlb
xor
mov
outsb
push
cwtl
lods
jo
xchg
xor
out
int3
push
jo
insb
mov
shlb
nop
add
test
inc
js
push
sarb
insl
loopne
or
sub
jle
fwait
inc
mov
fimull
mov
push
fidivs
jmp
les
cmp
ret
xor
pushf
push
or
or
leave
stos
jl
or
sbb
pushf
push
adc
xchg
jo
ss
xchg
ret
cmp
add
pop
add
xor
incb
mov
sbb
sub
daa
add
adc
fs
negl
push
pop
imul
ficoml
ljmp
loop
enter
jecxz
pop
xor
cmp
les
cmp
mov
mov
and
inc
pop
and
pop
mov
int
in
sbb
or
dec
xor
add
fidivrs
push
clc
cmp
cmp
shl
xor
xor
sbb
mov
std
fnstenv
cmpsl
pop
inc
sti
cmpsl
jmp
sub
pop
int3
and
and
rol
mov
and
and
mov
pop
mov
and
lods
lods
scas
sbb
adc
adc
stc
push
fsubr
fcmovnu
jns
cmpb
jae
mov
sbb
and
popa
mov
popa
in
sub
pop
gs
push
xchg
push
mov
mov
push
sub
add
cmc
cmp
faddp
cs
dec
dec
jecxz
mov
xlat
ja
jae
cltd
dec
icebp
mov
cld
stos
xor
pop
lea
popa
in
inc
pop
mov
movsb
jne
dec
insl
ja
movsl
fnstsw
cmovge
jecxz
push
stc
inc
aas
pop
push
sbb
xchg
xchg
or
mov
fildll
pop
lcall
mov
mov
rclb
xor
stos
mov
cli
cmp
jno
shrb
xor
push
add
adc
mov
or
mov
repz
pop
addb
int
pop
jno
jae
and
mov
addr16
xor
ficoms
hlt
push
leave
push
or
push
dec
repz
arpl
mov
cmp
fstpt
sub
paddb
lods
int
mov
sar
pop
cli
and
and
pop
ret
test
lods
mov
xor
mov
mov
mov
xchg
icebp
inc
movsb
js
cwtl
leave
mov
mov
lcall
das
mulb
das
sbb
mov
add
or
adc
or
hlt
cld
push
jae
fimull
test
xor
add
mov
mov
add
aas
pusha
dec
je
mov
scas
pusha
pop
pop
in
lods
or
push
dec
mov
push
clc
aad
imul
sbb
dec
push
jno
movsl
add
push
or
les
sti
jno
pusha
roll
xor
mov
or
jno
adc
movsb
pop
mov
arpl
xor
inc
lock
push
int
ret
addb
out
xlat
add
ljmp
or
aad
pop
imul
int3
es
jo
add
mov
test
cmp
ret
mov
insb
jo
push
iret
into
in
lahf
stos
stos
xlat
sub
mov
sbb
lods
adc
sti
xor
test
andl
lea
push
dec
cmc
fimuls
mov
insl
mov
ljmp
rcr
loopne
cmp
add
push
mov
sub
inc
adc
xor
sbb
ds
cli
sti
sub
cmpl
ljmp
aaa
xchg
inc
stos
iret
loop
popw
pop
mov
test
pop
and
movsl
or
jle
movsb
xchg
out
jno
mov
sbb
ja
aad
inc
sub
aam
sarl
jl
rep
push
and
xchg
xor
cs
int3
dec
jl
inc
dec
jg
bound
push
xchg
sbb
dec
fs
jne
mov
jp
scas
mov
mov
bound
rorb
mov
pop
popf
dec
add
cmp
sbb
pop
shlb
outsl
shll
int3
out
cmpsb
rorb
cs
mov
pop
clc
xchg
lcall
addr16
lea
jae
iret
mov
mov
mov
jge
gs
push
cmpsl
and
ja
icebp
addb
add
mov
mov
shlb
sbb
outsl
and
sub
subl
and
fcmove
in
cmp
cmp
xchg
test
insb
loopne
movsl
push
push
in
ficoms
mov
or
adc
mov
js
stos
adc
pop
fadds
lods
das
dec
inc
push
es
rcrl
sti
enter
stos
ror
pop
cli
stos
add
stc
das
out
sahf
sub
inc
cld
les
pop
cmpsb
movsb
push
jb
pop
imul
push
mov
add
clc
inc
fisubs
or
ds
rcrb
xchg
and
dec
cmp
imul
pop
xor
hlt
inc
and
xchg
mov
lret
sub
adc
and
sti
jl
sbb
pop
dec
jnp
lret
ss
scas
adc
push
scas
andl
outsl
shrb
mov
sub
int3
xor
sub
sarb
xchg
mov
mov
mov
daa
mov
insl
push
adc
imul
arpl
cmc
rolb
inc
aam
aad
ret
xchg
xchg
jno
cmp
xchg
cmp
adc
add
int3
gs
decb
add
movd
pop
dec
pop
push
scas
mov
ja
cmp
jp
test
faddp
ds
mov
or
sub
cmp
scas
in
push
adc
ror
mov
push
pop
cmc
lock
fs
pop
cmp
repz
bound
mov
cmp
cwtl
insl
sub
testb
mov
pop
enter
sub
mov
mov
addr16
test
inc
push
fwait
cmp
test
xchg
mov
mov
fnstcw
ror
mov
mov
fdivrp
dec
and
push
and
pop
daa
les
add
push
dec
mov
push
hlt
jb
adcb
ds
and
fsts
jge
jmp
sub
jmp
popf
mov
sub
fwait
js
ret
push
dec
aaa
lahf
xchg
or
flds
mov
sbb
cmp
mov
loope
scas
aam
mov
mov
aaa
aas
dec
cmc
jbe
lret
hlt
mov
ret
lds
out
push
aam
xchg
ds
les
adc
pop
sbbl
inc
aaa
test
mov
sbb
jp
sbb
fwait
or
mov
fbstp
sbb
leave
add
clc
pop
push
mov
addr16
pop
mov
adc
ss
stos
lds
or
xor
adc
popf
jae
insl
int3
in
inc
dec
inc
fwait
xor
mulb
mov
test
ret
inc
and
dec
mov
in
fstps
sahf
addl
adc
jo
js
enter
ret
mov
outsl
and
rorl
int3
inc
cmpsl
xor
jmp
push
and
pop
and
loope
pop
mov
jns
mov
imul
cmpsb
aas
xor
or
push
sbb
test
cmp
outsl
xchg
out
xchg
push
out
push
in
enter
inc
sbb
data16
push
mov
andb
aas
xor
ret
mov
or
into
dec
add
dec
loopne,pt
pop
mov
mov
or
fs
test
sub
pop
push
jecxz
aaa
xor
inc
jg
and
movsl
in
out
jl
add
out
pop
mov
lret
dec
into
pop
cmp
push
insl
push
cmp
jne
ljmp
pusha
sbb
dec
cmovo
cwtl
xchg
sub
adc
mov
push
ret
sbb
inc
orb
incb
int3
jnp
push
pop
inc
xchg
ljmp
das
outsb
outsl
fldenv
mov
jge
push
stos
out
ret
fstps
lahf
stos
adc
adc
add
imul
stos
and
add
inc
cwtl
push
std
push
addr16
push
jns
les
sahf
repz
out
mov
out
mov
std
jae
shlb
jmp
shrb
cmp
sbb
xchg
mov
cmpsl
inc
popa
sub
popf
mov
push
adc
mov
in
or
xchg
adc
stos
int3
dec
adc
aam
jmp
into
int3
jge
inc
outsl
mov
mov
or
or
out
mov
push
sbb
lods
and
and
sbbl
shlb
cltd
pop
or
jb
cwtl
rorb
push
lret
inc
stc
fwait
push
mov
mov
iret
mov
jae
xchg
add
loope
pop
lock
push
inc
pop
shlb
inc
and
push
mov
lcall
push
cltd
cs
call
lret
lret
jae
mov
repz
jae
dec
leave
outsb
sahf
push
cwtl
or
fs
rorb
pop
cmp
mov
stos
cld
cwtl
mov
jmp
iretw
sub
fs
pop
pcmpeqd
or
fdivr
out
lcall
and
enter
pop
std
cmp
sbb
aas
add
sub
fcompl
or
ret
or
sbb
pushf
dec
xor
xor
or
sub
push
stc
les
cltd
lock
pop
dec
push
dec
xlat
dec
add
inc
icebp
mov
ret
jecxz
in
loop
mov
xor
xchg
sarb
call
bound
push
add
add
jne,pn
stc
sbb
cltd
push
fcompl
enter
cltd
and
add
mov
push
mov
ds
pop
test
fildl
cmp
xor
loope
dec
dec
and
pop
out
scas
mov
repnz
lock
adc
cmp
cmp
pusha
data16
ljmp
jae
adc
dec
jg
insl
inc
sub
fdivs
in
ret
jae
shl
mov
dec
shl
mov
pmullw
lcall
arpl
add
unpcklps
gs
test
pop
cmc
mov
jne
xor
cmc
mov
add
and
dec
enter
cltd
sbb
inc
lret
pop
cmp
aas
and
lods
sarl
inc
mov
or
cmp
cltd
shr
ja
arpl
push
subb
ss
mov
and
adc
mov
or
xchg
test
andl
cmp
insb
jbe
loopne
imul
inc
sub
sbb
pop
pop
pop
xor
mov
jmp
movsb
jge
ret
test
and
mov
mov
jp
xchg
mov
jo
fdivrl
xorl
shll
jae
push
pop
dec
xchg
es
sbb
cld
lock
add
mov
in
sub
fmull
movsl
and
add
scas
add
mov
iret
and
and
ss
test
mov
mov
fwait
aad
ficoml
fildl
loopne
popa
inc
imul
jo
aad
pop
repz
push
aaa
sub
fnstenv
jo
or
popa
fnstenv
dec
dec
aad
rorb
or
xor
add
mov
imull
pop
cmp
jg
xchg
xor
sahf
push
push
lea
in
xor
add
mov
pop
mov
cmp
insb
imul
mov
add
fdivrs
arpl
insl
cmp
js
mov
out
jecxz
push
loopne
pop
or
jns
aad
jo
mov
stos
ret
xlat
xor
fnstsw
dec
mov
cmp
daa
mull
mov
out
mov
push
fisubs
test
jle
aaa
aaa
repnz
clc
mov
dec
outsb
bswap
and
cwtl
adc
sti
jmp
aad
xchg
mov
andl
leave
jo
outsb
hlt
pop
arpl
popa
mov
in
ret
sti
int
jg
push
mov
mov
add
adc
ja
dec
push
into
out
mov
int
xchg
add
or
aad
arpl
loop
and
icebp
call
sbb
aad
into
aam
loopne
push
jmp
cmp
pop
adc
cmc
ljmp
rcrl
inc
dec
stos
in
aad
pop
jmp
lods
cmpsb
jmp
vpsubusb
lock
lds
dec
mov
rol
jle
or
mov
fincstp
push
clc
stos
stc
sbb
pusha
ja
add
push
adc
ds
mov
jg
int
stc
mov
cmp
aad
xchg
out
or
sbb
fs
xorl
pop
icebp
mov
arpl
cltd
cmp
in
cmp
shlb
fstps
in
dec
mov
popl
inc
xchg
mov
ficoml
inc
cltd
and
pop
push
cmp
loop
dec
js
icebp
ss
ljmp
push
mov
arpl
sub
inc
iret
jp
or
xchg
insl
cmp
inc
push
jne
push
jge
subb
adc
add
mov
sub
jno
xchg
push
or
rcll
rcrl
in
mov
in
mov
adc
shrb
pushf
jp
repnz
je
fdivrl
pusha
dec
ja
sub
xor
add
xor
icebp
pop
jae
js
xchg
cmpl
idiv
scas
mov
sbb
int3
fcoms
sbb
dec
xor
xchg
or
in
adc
sahf
jmp
loop
sub
cmc
loope
jns
and
aad
subl
in
inc
or
icebp
xor
repz
sahf
test
inc
push
inc
pop
stc
insb
add
sub
cli
inc
mov
or
lahf
nop
jg
aaa
and
mov
andb
sbb
iret
sbb
push
mov
lret
mov
pop
scas
mov
push
paddb
aaa
xlat
jae
stc
stc
loopne
sub
inc
push
faddl
mov
aaa
in
es
xor
fwait
pop
fstpt
sub
and
adc
push
ds
fnsave
mov
rolb
sub
and
add
icebp
lahf
stos
add
cmp
inc
cwtl
mov
iret
repnz
fs
aaa
insb
push
out
pop
out
imul
pop
cmc
mov
inc
in
xlat
or
mov
nop
mov
xchg
xchg
xchg
filds
outsb
and
enter
leave
hlt
leave
push
pop
pop
cmpsl
pusha
push
out
inc
cmpsb
and
xchg
repz
fstps
mov
xor
inc
push
cli
imul
movsb
or
inc
jl
loop
add
imul
cmp
arpl
mov
mov
test
inc
push
xor
stos
stos
adc
dec
mov
sti
out
aas
inc
sub
fcmovbe
mov
popf
and
pop
adc
insl
or
scas
xchg
jno
movsb
movsb
nop
mov
ss
emms
cmp
icebp
mov
xlat
pop
jg
sub
or
sti
fs
cmp
ret
sub
sbb
sub
mov
mov
repz
das
test
jae
push
aam
mov
mov
xlat
jg
imul
xchg
jmp
mov
xchg
xchg
enter
or
jo
int
xchg
cmc
in
shrb
sbb
inc
imul
push
xchg
in
xor
test
fwait
jp
mov
in
sub
or
or
scas
push
or
add
in
jecxz
and
mov
arpl
movsl
xor
mov
xchg
imul
xchg
rcll
dec
jbe
cwtl
cmpsl
in
ret
add
in
sti
leave
movsl
fsubp
sub
sbb
imul
leave
jp
cmpsb
mov
enter
out
ret
inc
pop
adc
xchg
sub
adc
mov
push
scas
jo
or
into
nop
rol
xchg
aam
addr16
inc
out
adc
repz
and
xor
lcall
int
imul
jae
pushf
fsubrl
add
add
add
pushf
fimull
cld
jae
xchg
push
imull
pop
es
aas
adcl
dec
ds
cmp
inc
fstps
mulb
cmp
ss
mov
js
insl
rcrl
jge
jnp
xor
stos
arpl
subb
fcmovne
or
dec
push
sub
jecxz
inc
lds
mov
add
repnz
push
mov
shll
xor
add
sbb
movsb
push
or
add
gs
in
dec
inc
imul
push
mov
jg
or
lret
jg
cmp
sbb
sbb
scas
cmp
mov
repnz
pop
mov
sbb
lcall
sahf
bound
mov
xchg
leave
js
jg
dec
jno
xchg
cmp
cmp
imul
inc
bound
sub
and
sub
and
push
sub
ja
stos
pop
popf
es
aam
cmp
or
mov
sbb
xor
xchg
jle
les
mov
jne
sbb
mov
push
xor
mov
sbb
mov
test
or
lahf
es
cpuid
inc
jecxz
iret
xlat
leave
jo
cmc
mov
aas
lods
jns
inc
jp
in
xchg
push
nop
inc
push
xlat
cld
pushf
xor
xchg
fnstenv
mov
sbb
push
out
jne
jae
stc
dec
mov
stc
jbe
das
test
lahf
inc
addr16
addb
sub
sbb
lds
cmp
inc
xor
push
loope
pop
aaa
insl
incl
sbb
shl
jns
xor
and
adc
cwtl
xchg
out
popf
jmp
xchg
lcall
dec
loopne
push
je
adc
notb
scas
ficompl
fs
push
cwtl
or
cmp
scas
lahf
jno
fsubp
mov
inc
sub
in
bound
dec
int
mov
or
xor
mov
and
dec
inc
jg
mov
sub
adc
jb
fistpl
push
pop
loopne
inc
imulb
out
ljmp
mov
mov
testb
inc
pop
test
push
add
dec
imul
popa
daa
jmp
ret
mov
std
push
rcr
mov
mov
and
mov
push
push
adc
push
js
cltd
negl
mov
outsl
sbb
pop
push
dec
fs
mov
inc
dec
cmpsl
lret
ljmp
mov
xchg
xchg
adc
js
aad
jno
scas
iret
and
scas
fmuls
pop
add
nop
add
sbb
jmp
sbb
sbb
stos
dec
push
push
test
jmp
test
jge
dec
xchg
jb
lods
lea
shl
dec
inc
xchg
call
mov
sub
inc
mov
and
cmp
shrl
adc
jbe
push
inc
add
fisttpl
jecxz
pop
inc
push
sbb
dec
mull
push
enter
mov
roll
cmp
mov
mov
pop
jns
icebp
iret
ja
lods
dec
lea
stos
mov
clc
dec
dec
lock
fsubrs
lahf
setb
mov
fnsave
inc
es
scas
cmp
add
inc
sbb
push
out
mov
cs
dec
jecxz
aad
dec
aaa
or
imulb
lahf
dec
push
mov
jmp
xchg
pop
scas
mov
lret
cli
xchg
xchg
mov
add
inc
mov
xchg
test
xchg
sbb
rcrl
scas
pop
inc
and
iret
xchg
stos
or
cmpsl
push
mov
stos
jbe
inc
out
mov
lcall
je
divl
movsb
dec
inc
ljmp
add
sub
cmp
mov
xchg
rcrl
mov
ret
mov
outsl
lods
sub
xchg
add
xor
lcall
jg
sti
xchg
xchg
stc
push
ret
test
jne
ja
in
jo
xor
cmp
mov
cmp
repnz
mov
xchg
fmul
stos
stc
sub
je
push
and
jp
mov
cld
test
pop
jmp
jmp
jl
sbb
mov
mov
or
mov
popf
xchg
cltd
mov
add
les
lcall
out
cltd
lret
add
push
dec
dec
and
std
jl
fmull
or
mov
and
pop
je
fnstcw
sbb
nop
fs
dec
xchg
or
imul
repz
push
repz
iret
jne
cmp
jno
push
mov
jae
xchg
cmp
mov
ss
cmpsb
xchg
cmp
mov
ret
lods
and
pop
inc
jecxz
cli
add
lret
push
mov
pop
dec
lods
mov
lahf
movsl
jns
and
push
iret
into
mov
mov
mov
pusha
ljmp
push
ljmp
aad
lock
mov
push
jne
add
in
jl
icebp
dec
out
mov
fisubrs
mov
popa
mov
mov
fnstcw
aaa
repnz
ret
mov
cltd
mov
mov
and
movsl
es
pusha
xchg
cmp
mov
sub
dec
cmp
ror
inc
test
push
decl
sbb
cld
mov
cwtl
xchg
xor
cmp
jge
daa
shlb
or
movl
add
cmp
or
pop
imul
cmp
cwtl
fldenv
cmp
xchg
pusha
sahf
gs
cmp
cmpsb
repnz
inc
mov
dec
jg
or
xor
add
sub
std
add
repnz
dec
ret
jmp
enter
and
push
ret
movl
inc
repz
filds
pop
sbb
mov
cmp
mov
pop
jl
xchg
mov
mov
jle,pn
or
sub
jmp
xor
aas
mov
mov
pop
mov
popf
or
jp
mov
add
jnp
out
xchg
or
gs
mov
inc
outsl
pop
adc
sub
xchg
inc
ret
sarb
loope
mov
push
adc
leave
popa
cld
imul
inc
insb
mov
data16
xor
and
ficoml
iret
mov
outsl
fsubrs
push
fimuls
jo
daa
inc
mov
and
and
call
out
lret
mov
rclb
cmp
aam
fnsave
jno
push
icebp
out
or
mov
mov
std
inc
aaa
mov
fldt
dec
xchg
ret
mov
jp
push
cmpsl
sub
out
sahf
dec
sahf
leave
cwtl
xchg
xor
shll
pop
andb
jbe
mov
pop
cmp
sti
xor
loopne
dec
ret
lret
sub
pushf
or
cmp
xchg
pop
out
or
popf
xor
lea
adc
fcomp
push
movl
inc
out
leave
push
into
sub
cmp
out
push
push
push
imul
les
or
mov
aas
movsl
mov
pop
pop
int
adc
sarl
shrl
repz
adc
push
jmp
mov
jb
mov
mov
icebp
jecxz
aaa
dec
mov
jle
pop
insb
pusha
rorl
popa
pop
in
orl
arpl
cmc
jne
mov
add
bound
lods
ds
fmul
cld
repz
lock
push
mov
pop
push
lea
xchg
subl
mov
mov
in
or
pushf
mov
fs
mov
sahf
add
adc
cmpsb
inc
pusha
mov
mov
xor
iret
in
es
add
inc
pop
adc
test
jb
pop
dec
and
cmp
ror
adc
dec
adc
imul
xchg
cmp
aaa
in
push
pop
mov
adc
inc
lea
dec
lahf
test
cld
mov
loop
ret
aad
pushf
cwtl
lods
mov
ret
and
daa
push
fidivrs
cmp
in
cmp
xor
adc
xchg
xchg
jb
add
pop
mov
sub
add
jge
lret
jno
iret
arpl
dec
out
std
scas
sub
mov
jo
cli
mov
inc
pop
jecxz
fxch
inc
dec
add
movsb
jns
mov
sbb
mov
fwait
mov
ret
scas
jmp
out
xor
pop
incb
and
out
mov
fdivp
mov
in
and
push
andb
sbb
pushl
in
lock
sbb
test
mov
rolb
jge
sbb
cltd
xchg
addb
movsl
jo
and
inc
inc
aas
std
sub
jnp
ss
dec
xchg
rorl
test
push
cltd
inc
cwtl
xchg
pop
cmpsb
lods
xchg
sbb
mov
loope
fcmovbe
adc
popa
in
cwtl
in
cltd
imul
loop
into
or
add
lahf
add
sbb
cs
xchg
jp
xlat
dec
push
frstor
cmpb
pop
shl
dec
xchg
jbe
aas
push
scas
push
mov
cmpsb
dec
pusha
iret
and
imul
dec
mov
lods
outsb
shl
adc
mov
gs
add
add
push
out
rorb
dec
sub
dec
jmp
sti
mov
popf
in
xor
mov
jl
cmp
sub
call
lret
mov
xor
sub
ja
fisttpll
inc
loope
xor
pop
pop
cmp
mov
pop
sub
sbb
mov
push
pop
mov
pusha
cmp
inc
push
inc
hlt
sub
jbe
xor
lcall
stos
pop
loop
jbe
push
pusha
pop
jmp
or
in
xchg
pop
sbb
lcall
mov
mov
addr16
jne
aad
jno
mov
xchg
xchg
loope
push
inc
ds
xor
repnz
push
add
das
movl
cld
mov
pop
or
popf
xor
xorb
add
inc
mov
cli
cwtl
clc
lods
jmp
cwtl
leave
int
ss
pop
push
mov
stos
sbb
xchg
sarb
and
scas
cli
sahf
out
testb
mov
fcomip
adc
push
pop
pop
icebp
mov
std
adc
out
adc
popf
jmp
clc
fisubrl
cli
jg
inc
out
jb
cmp
pop
pop
jge
subl
fcomps
sbb
test
xchg
mov
das
lret
jns
xchg
jo
sti
add
pop
xchg
fcmovb
jnp
lahf
cmp
cld
or
add
lds
and
inc
mov
push
or
testl
pop
ljmp
cld
add
cmp
js
push
daa
inc
add
xor
insl
jno
repnz
icebp
and
jecxz
push
inc
push
hlt
or
pop
pop
stos
inc
jo
ds
aaa
add
sub
mov
xorb
sub
outsl
je
cmp
and
pop
push
mov
fwait
out
jg
or
xchg
imul
or
mov
loope
push
out
sub
xor
in
push
fsubl
repnz
xor
cmp
add
das
jnp
lods
loopne
aaa
or
adc
lea
sbb
and
ret
mov
test
xor
sbb
mov
cmp
test
lock
mov
pop
pop
out
jp
insb
enter
or
fdivrl
cmc
jo
fldenv
in
mov
lahf
pop
jb
arpl
insl
jns
in
daa
icebp
pop
sbb
fildll
rorb
xor
testl
cmp
xlat
sub
jl
cwtl
dec
roll
arpl
adc
in
sbb
or
sub
iret
sarl
push
fisttpll
cmc
sub
jno
sbb
dec
push
cli
lods
mov
mov
mov
mov
testb
int
int3
inc
mov
jae
fcoms
push
sub
mov
dec
add
ja
and
lahf
hlt
ficomps
test
pop
lock
fld
cs
dec
pop
or
jns
push
lahf
xchg
out
fwait
insl
and
xlat
cld
lret
in
mov
cmp
jae
push
mov
xchg
jge
push
ret
or
and
pushf
inc
orl
adc
out
test
dec
insb
pop
push
adcb
hlt
sbb
call
sbb
mov
xor
in
jne
xchg
in
xor
nop
push
pushf
push
jle
push
mov
mov
sub
das
xchg
mov
xor
outsl
sub
faddl
ja
movsl
lock
pop
mov
nop
dec
ss
dec
ss
iret
xchg
pusha
das
push
mov
enter
cmp
sbb
push
push
ljmp
rolb
mov
stos
mov
rolw
shrb
data16
out
test
cmc
cmp
movsb
sbb
fwait
add
lea
jns
dec
test
xor
xchg
push
ss
mov
orb
test
mov
sub
push
xchg
sbb
mov
dec
mov
or
pop
jmp
add
mov
lods
sbb
or
mov
or
mov
jae
jae
dec
orl
ja
sub
mov
xchg
push
sub
jmp
std
jbe
je
test
and
pop
mov
rcrl
mov
lods
mov
sub
mov
pop
lock
jecxz
mov
addr16
fistpll
push
push
and
stos
in
pop
xchg
out
xor
icebp
into
hlt
es
aam
adc
dec
push
das
sbb
sbb
mov
stc
mov
in
aas
add
lret
jae
and
lcall
mov
mov
adc
sbbb
adc
dec
push
push
imul
sbb
cmp
inc
pop
pop
jmp
adc
aam
mov
pop
icebp
dec
stc
stos
sub
push
imul
add
xchg
in
cmove
cmp
and
mov
pushf
mov
mov
mov
decl
mov
or
sarl
sarb
lret
int3
inc
xchg
xor
js
stos
lret
flds
insl
seta
and
xor
or
sub
ret
add
gs
hlt
push
jns
jmp
xchg
out
call
mov
pusha
mov
addr16
add
pop
js
mov
pop
out
pusha
push
jl,pn
jbe
sbb
insl
roll
dec
push
les
movb
in
lret
pop
pop
add
xchg
and
jecxz
repz
enter
dec
in
cmpsl
stc
mov
roll
loop
clc
push
lea
cmp
mul
push
sahf
out
jno
jmp
inc
and
mov
fistps
enter
jne
hlt
aas
outsb
adc
ljmp
outsb
or
sub
sbb
xchg
dec
js
jne
mov
or
jecxz
lds
addr16
xor
and
test
mov
loope
push
inc
in
add
push
mov
movsb
hlt
ja
sub
sbb
je
mov
mov
xor
addl
inc
lds
lahf
sbb
add
pop
nop
inc
mov
or
jnp
mov
jl
or
and
jo
lods
mov
mov
inc
push
in
and
mov
or
setns
arpl
jo
je
cs
or
stc
testb
sub
in
movsb
inc
shlb
pop
xor
imul
dec
nop
or
push
mov
jge
out
xor
sub
daa
mov
xor
outsl
jmp
js
mov
movsl
cmp
xor
bound
into
mov
hlt
add
push
scas
push
xchg
clc
mov
cmp
mov
jecxz
loope
mov
lea
cmp
pop
mov
aam
shl
xor
and
mov
loop
sar
cs
fwait
test
pop
outsl
ret
inc
add
push
int
xlat
outsl
lret
scas
outsl
dec
mov
sar
jb
in
pop
pop
mov
inc
jae
xchg
cmp
loop
jns
lods
mov
jle
aam
shrb
dec
rol
cmp
lcall
add
dec
pop
pop
push
xchg
scas
clc
out
fcoml
sbb
cs
aad
cmp
dec
lret
or
scas
hlt
xchg
std
push
in
and
cli
mov
or
pop
lcall
mov
sbb
into
cmp
daa
dec
add
push
xor
mov
jecxz
dec
hlt
sub
sbb
sub
loop
outsb
jp
imul
orl
addr16
sub
mov
lock
cmp
fsubrs
inc
or
add
scas
shr
outsl
adc
dec
faddl
push
les
and
and
les
pop
ss
cmp
xchg
nop
inc
pop
cltd
and
add
adc
adc
xchg
iret
push
sub
inc
dec
roll
hlt
inc
dec
jnp
sbb
sub
adc
and
dec
jnp
insb
mov
fwait
divl
inc
je
pop
mov
je
inc
and
xor
push
cmovge
inc
cmp
ret
ret
jmp
mov
loope
or
and
fcoml
xor
ret
nop
cmp
xor
fstpl
cld
clc
pop
push
push
push
repz
xor
movsb
test
popf
lods
stos
es
cmp
sbb
js
mov
ljmp
push
test
inc
repz
jbe
fsubrl
pop
pusha
dec
xchg
arpl
inc
imull
adc
lds
insb
add
clc
repnz
mov
cmpsb
je
xchg
insb
inc
cltd
scas
repz
cld
ljmp
inc
or
mov
cs
or
inc
pop
xchg
kmovb
or
xor
aaa
jo
icebp
xor
loope
cmp
push
fs
jl,pt
daa
dec
pop
das
pushf
mov
sbb
ret
jecxz
test
jns
popa
mov
adc
xchg
hlt
lods
cmp
insb
mov
outsl
add
or
push
hlt
xchg
push
cs
xor
mov
push
sbb
pop
sub
sub
test
fiaddl
movsl
add
outsl
pop
xor
cwtl
dec
jnp
adc
jbe
cmc
inc
hlt
scas
pushf
dec
jmp
jne
push
mov
dec
add
fisubs
mov
or
push
cmc
subb
sub
mov
fistpll
inc
sub
mov
out
pop
push
cmp
je
enter
jecxz
lcall
test
xor
xchg
sbb
and
test
stos
sbb
jle
scas
ss
pop
pop
test
test
xlat
ja
jl
loopne
add
and
push
push
or
lods
popa
fimull
sti
pop
or
push
mov
aad
popa
iret
adc
push
mov
mov
out
or
aam
scas
test
scas
icebp
add
cmp
outsb
inc
mov
fsubr
lret
popl
inc
xchg
and
adc
inc
and
lock
mov
sbb
jb
loopne
iret
stos
push
mov
fnsave
or
ljmp
insb
xchg
jg
aam
cmp
addr16
stc
les
mov
mov
sub
test
and
movsl
sbb
call
insb
clc
pop
ljmp
or
push
xor
sbb
or
loopne
dec
faddl
es
data16
and
fs
sbb
dec
loope
aad
mov
jno
aam
je
scas
mov
cmp
mov
add
mov
inc
push
inc
xor
icebp
in
dec
lods
rol
ds
push
fstpl
rclb
pushf
lret
push
fcoms
xchg
daa
movsb
xchg
je
enter
nop
inc
sbb
cltd
mov
je
lret
outsl
push
jmp
jmp
xor
push
xlat
js
dec
cwtl
stc
push
add
push
jg
xorb
outsl
adc
mov
fcom
std
cmp
jb
mov
js
mov
aam
sbb
nop
xchg
inc
shrl
cmp
push
stc
fld
sti
fprem
cmp
push
test
scas
aad
ficomps
mov
ficompl
mov
cs
mov
lea
push
mov
or
lods
or
add
popf
xor
push
add
xchg
xor
gs
rorb
cmp
es
movsl
inc
dec
gs
pop
adc
add
movsb
sub
out
shlb
addr16
imul
in
faddl
adc
sub
cli
mov
mov
mov
lret
std
jno
cwtl
cmp
lods
loop
or
mov
ret
push
iret
add
sub
insl
cmp
data16
std
repnz
push
movsb
or
sub
push
xchg
fldt
xor
push
mov
out
inc
je
mov
sbb
pushf
cwtl
test
and
lret
sbb
xchg
call
dec
or
pop
dec
sub
ja
pop
std
jno
xchg
or
mov
rcl
xor
loop,pt
in
mov
pop
fdivl
and
divl
fbstp
cmpsb
icebp
stc
pusha
movsb
es
mulb
outsb
fstpt
mov
lcall
loope
mov
dec
movsl
in
and
mov
std
sub
stc
mov
cwtl
mov
or
push
inc
push
add
pop
movsl
sbb
mulb
shlb
add
mov
dec
loopne
xchg
cmpsl
sbb
sahf
sub
sub
xor
insb
pop
inc
or
mov
cltd
mov
hlt
cwtl
adc
sbb
jae
ja
mov
or
daa
jl
lahf
jmp
push
fstpt
lods
sbb
sahf
dec
push
jg
imul
mov
stos
cld
push
in
mov
popf
insl
outsb
mov
in
xchg
mov
dec
xchg
les
fwait
and
mov
popa
mov
xchg
add
divl
sub
incb
sahf
xchg
loop
xor
or
cmpsb
mov
inc
mov
fldcw
cmp
xchg
shrl
xorb
mov
outsl
xchg
xchg
pop
fisubrl
js
xor
mov
jg
adc
pushf
sbb
pop
rcrb
ret
mov
jno
lcall
rorl
in
dec
lods
mov
push
jo
je
sub
pop
aaa
sarb
sbb
aam
or
ret
aas
into
adc
mov
cmp
lcall
les
push
outsb
stc
loop
in
inc
es
addps
xchg
or
or
sub
int
sub
mov
icebp
sbb
jmp
push
jmp
jae
mov
mov
nop
pusha
dec
sahf
xor
test
test
das
xchg
in
jmp
repnz
and
add
sub
in
aam
adc
xchg
sub
aas
notb
loopne
sarl
aas
repnz
pop
mov
cmpsl
fstpt
ds
push
mov
add
cmp
aaa
push
je
adc
je
ficompl
mov
repz
mov
iret
dec
add
adc
xchg
popf
pop
movsl
cmpsb
insl
sub
add
inc
call
bnd
jns
inc
popa
jg
xor
xchg
xor
ss
sub
addl
dec
mov
push
test
jne
lea
xchg
addb
mov
es
inc
in
stc
lahf
add
mov
movsb
inc
sbb
xor
out
cmp
imul
dec
int3
clc
ret
shlb
inc
into
pop
je
rol
scas
aam
sti
and
inc
mov
pop
adc
and
fidivrs
sbb
hlt
sub
mov
mov
xchg
sub
adc
xor
aas
jnp
or
sub
push
gs
and
add
cli
mov
jmp
das
xchg
lret
pushf
mov
outsl
sbb
stc
sbb
mov
lea
hlt
jge
push
addr16
xchg
int3
cmp
mov
dec
loope
jmp
fnstenv
dec
cltd
xor
pop
test
test
adc
out
je
inc
scas
mov
cwtl
mov
mov
ljmp
insl
jnp
push
pop
out
push
es
fmull
mov
xor
bswap
add
xor
dec
roll
sub
add
lods
filds
pop
arpl
frstor
sub
scas
lea
insb
test
scas
sub
jo
jg
adc
sub
icebp
cmp
bound
sub
in
push
or
mov
rcrb
fidivs
inc
pop
lret
aad
push
loopne
sub
and
jg
cmpsb
sbb
adcl
test
jo
push
pop
hlt
pushf
push
lods
and
adc
movsb
inc
adc
dec
xchg
pop
xlat
mov
lea
test
xchg
jno
push
add
scas
scas
inc
in
push
inc
enter
ficoms
or
xor
cmpsl
adc
sbb
test
popf
mov
rcrl
push
test
jno
or
mov
sbb
or
sti
cld
shll
adcl
cmp
sub
sbb
xlat
pop
fbld
sbb
test
stos
movsl
cmc
dec
xor
xchg
lds
mov
insl
inc
adc
push
jb
test
fsubs
xchg
nop
mov
push
imul
shrb
push
mov
sarb
icebp
lcall
addr16
push
test
add
cmp
xchg
jno
jmp
pop
push
inc
bound
jmp
xor
stc
test
lret
add
repnz
jns
insb
dec
sub
inc
sbb
outsb
push
inc
leave
data16
insl
xchg
mov
xchg
push
fbstp
adc
push
pusha
dec
push
aam
ja
or
cmc
jno
stos
lcall
cmp
bound
mov
repnz
add
mov
fists
loop
stos
shll
loope
cs
lds
int3
add
stos
sbb
repnz
or
jns
into
sbb
pop
add
inc
repz
dec
adc
enter
pop
xchg
xchg
or
adc
inc
pop
sub
repnz
mov
out
cmp
pop
loope,pn
out
or
jecxz
int
aam
xchg
sub
push
and
sbb
ds
repz
pusha
push
pop
cmp
in
fstps
jecxz
aas
rorl
sbb
mov
dec
arpl
push
jo
and
rolb
mov
cmp
sub
jo
cli
inc
jne
jl
jecxz
mov
mov
nop
push
mov
repnz
aas
sbb
fcom
lahf
lods
sbb
out
dec
cmp
cltd
or
fidivs
adc
orb
xor
xchg
lahf
xor
stos
imul
fcmovnu
inc
test
or
lea
lret
adc
cmp
xchg
outsl
adc
cmc
jno
xlat
test
mov
jecxz
sbb
out
movsl
sbb
fwait
jne
daa
pop
mov
jmp
shl
movsb
add
sbb
ss
cmp
repnz
jmp
adc
pusha
mov
jnp
adc
sbb
adcl
lea
and
xor
sbb
sub
sahf
cmp
inc
andb
ja
pop
cmc
xor
jne
call
adc
cmp
leave
iret
in
stos
jecxz
pop
test
scas
pusha
adc
jl
int
movsb
dec
xor
xor
push
push
or
mov
pop
and
loop
xor
jl
lahf
push
add
rorl
sbb
daa
leave
inc
insl
imul
sbb
es
fldcw
xor
dec
ret
add
ret
pusha
jle
dec
mov
aam
iret
imul
pop
and
repz
xchg
jmp
fisttpl
xlat
lock
icebp
push
sub
clc
pushf
insb
fbld
jp
rolb
push
jg
push
bnd
adc
jmp
fnstsw
sti
mov
sti
push
inc
fnstenv
jnp
adc
cmp
rclb
mov
mov
mov
stos
dec
rorl
sub
xchg
pop
xchg
pop
fadds
push
adc
enter
in
in
jecxz
pop
leave
or
andl
adc
and
lock
lcall
push
addr16
adc
mov
repz
not
cld
pop
cltd
scas
adc
outsb
or
into
leave
jmp
xchg
lcall
loope
push
and
or
jne
imul
nop
cmp
daa
in
iret
std
pop
jne
inc
push
cmpsb
cwtl
adc
xor
aad
sub
add
shrl
ret
and
fdivrs
pop
in
push
mov
and
adc
jecxz
pop
sbb
rclb
test
cld
movntps
lret
pop
adc
fs
mov
and
fildl
jecxz
cli
shll
enter
call
bound
mov
test
js
inc
adc
sub
into
pop
push
lret
push
jge
std
mov
enter
push
dec
loopne
popa
sbb
daa
out
inc
sub
test
pop
aad
lahf
out
ficompl
outsb
cltd
dec
adc
stc
adc
lret
mov
call
cmc
mov
fldcw
xchg
call
or
sub
mov
push
fs
sbb
xor
aam
xchg
xorb
push
lea
mov
or
cmp
pop
inc
and
ljmp
add
sub
outsl
ret
idivb
pop
cmpsl
pop
pop
mov
movsb
and
push
stos
dec
lret
inc
test
fdivr
xchg
push
aam
shl
jle
sub
test
and
pop
or
cltd
xor
mov
testb
fistpll
popa
adc
out
dec
scas
and
mov
jmp
mov
jno
lods
stos
push
outsb
loope
sarb
lds
xlat
mov
xchg
sub
adc
push
into
cld
pushf
call
inc
mov
fcmovb
mov
adc
pusha
xchg
pop
dec
scas
push
jo
xor
or
sti
cld
dec
in
fistpl
push
jmp
mov
in
cwtl
dec
mov
dec
je
out
mov
hlt
lahf
mov
iret
xchg
shrl
xchg
mov
mov
push
cmc
cmp
ja
push
inc
std
sbb
or
dec
mov
nop
and
in
xchg
mov
loopne
or
lock
cs
roll
or
int3
ljmp
pop
sahf
jo
mov
mov
and
subb
clc
push
push
cmp
push
mov
cmpsl
movsl
inc
test
xchg
mov
jle
pop
xorl
ja
jg
and
mov
xchg
rcr
pop
lret
dec
xchg
sti
lods
xchg
test
mov
fmull
or
push
cwtl
and
iret
out
or
push
sahf
inc
cmp
testb
mov
faddp
data16
ss
lcall
adc
cli
inc
adc
test
mov
add
fistpll
sarb
mov
adc
sub
rcr
cli
sub
xchg
cmp
sub
shrl
imul
mov
ficomps
mov
dec
imul
jmp
pushaw
mov
and
cmp
push
push
fisubrl
xlat
test
mov
scas
dec
cltd
imul
aas
pop
gs
add
and
int
pop
or
sub
cmp
js
cmpsb
mov
adc
loop
lret
outsl
std
mov
xor
jns
inc
test
inc
shll
cmp
rcl
pop
mov
mov
out
push
gs
cmp
sub
sahf
adc
push
or
test
or
add
inc
xchg
pop
test
mov
leave
mov
adc
xchg
jmp
push
ficompl
cld
xchg
cli
into
xchg
in
push
fcoml
and
xor
or
dec
out
in
lret
clc
je
sub
mov
daa
loopne
lods
jmp
mov
push
jae
pushl
xchg
and
pop
sbb
imul
nop
pushf
pop
mov
jg
inc
shlb
gs
stos
into
rorl
inc
aaa
and
lret
xor
cli
ret
adc
leave
pop
movsl
push
mov
push
add
push
sbb
pop
inc
clc
jl
xlat
cmp
push
je
add
and
pop
adc
repnz
andl
dec
je
out
into
aas
xchg
sar
adc
and
mov
push
enter
xchg
in
notl
inc
loope
testb
mov
mov
clc
push
pushf
xor
xor
jle
inc
cmpsl
and
scas
lods
xor
and
nop
aam
xchg
mov
xchg
aas
jbe
mov
sbb
daa
inc
or
mov
aam
mov
clc
add
xlat
inc
lds
pop
repnz
and
pushf
outsl
je
jns
shl
xchg
mov
jmp
and
jb
jno
jns
shrb
sub
pop
inc
fwait
repz
inc
inc
or
xchg
dec
mov
jns
jmp
mov
jne
lods
jecxz
xor
mov
mov
test
mov
mov
pop
fs
jecxz
adc
fs
xor
jnp
test
stos
adc
or
or
xchg
btr
mov
scas
rcl
ljmp
fwait
push
inc
add
pop
add
outsb
jns
adc
fs
or
xchg
test
fmull
pusha
cmpl
lret
les
test
daa
lds
lret
push
les
pop
adc
lods
aam
push
mov
add
pop
movl
test
or
xor
mov
dec
ror
and
sahf
lcall
aam
shl
push
sbb
xlat
push
decb
int
mov
mov
mov
call
ret
pop
jge
mov
add
idivb
imul
imul
loopne
xlat
shlb
inc
dec
inc
adc
sub
out
fcoms
add
icebp
mov
fcomip
xor
std
mov
mov
pop
loope
jb
jb
aaa
jmp
jo
dec
outsl
addr16
inc
aaa
add
mov
sbb
int
sbb
mov
test
or
loopne
push
jne
enter
mov
and
sahf
or
xorb
mov
push
inc
adc
outsb
aam
mov
lds
inc
adc
lret
aas
sub
mov
xor
mov
enter
imul
mov
mov
ds
cmc
enter
add
push
ljmp
fisubrl
fistpl
cmp
pop
pop
lds
imul
ret
cmc
ss
push
sub
sbb
pushf
leave
xchg
sbb
call
cmp
dec
lret
cmp
sub
inc
sub
enter
dec
imull
pusha
shl
jns
cltd
or
fwait
sbbl
je
mov
aaa
outsb
sub
cmp
jnp
pop
stos
sub
jns
jp
mov
sub
loope
insb
pop
pop
dec
push
fdivrl
fnstcw
adc
mov
sub
cmpsl
or
sbb
mov
call
std
inc
out
dec
push
pop
sub
das
inc
dec
in
repz
lret
jne
or
imul
sub
data16
inc
aad
xchg
enter
loope
loop
ja
add
or
std
push
adc
dec
inc
dec
push
mov
mov
lea
clc
push
mov
mov
sbb
sub
add
push
adc
sbbl
jmp
add
call
imul
adc
pop
mov
lods
sub
adcb
sbb
mov
xchg
mov
ret
dec
mov
jnp
push
jo
push
fs
popa
int3
sar
dec
mov
or
ficoms
js
dec
pop
rcll
dec
aad
loope
clc
xchg
shll
ret
ja
std
cmp
shll
jmp
lahf
in
push
cs
pop
push
imul
scas
push
les
incb
hlt
call
xchg
mov
sub
sbb
fisubl
lea
lahf
addr16
mov
cmp
lea
loope
lret
inc
scas
dec
mov
sarb
fwait
dec
mov
and
pop
adc
movsb
loop
mov
lea
call
inc
jl
adc
aaa
cwtl
jb
pop
out
imul
outsl
push
dec
mov
ljmp
jge
int
sti
dec
loop
dec
es
ja
xor
push
or
or
fisttpll
inc
xor
pop
loopne
fiadds
ljmp
and
xchg
sahf
test
lret
outsb
fiadds
pop
cli
cmp
push
add
mov
xor
lret
inc
pop
mov
xchg
lock
xchg
inc
fs
test
dec
jle
stos
negl
adcl
test
push
lds
xchg
cmp
mov
mov
mov
pop
push
push
and
jbe
pop
add
xlat
test
cmpsb
dec
pop
push
sbb
dec
out
mov
scas
dec
add
pushl
add
adc
adc
imul
sbb
movsl
addl
pop
addr16
mov
test
cmp
push
popa
insb
je
mov
adc
xchg
inc
cmp
les
mov
cltd
rcr
push
add
adc
fistps
or
cmp
in
je
insb
and
pop
cmp
jnp
jmp
cmc
sub
add
push
pop
lret
shll
push
jg
sub
add
cmp
ja
pop
xor
orb
push
out
add
xorl
push
jge
sahf
stc
lds
push
out
and
or
imul
sbb
mov
sub
rolb
ja
inc
mov
cs
push
dec
mov
dec
bswap
rclb
xor
add
repz
test
orl
out
xchg
jns
pusha
dec
es
adc
pusha
pop
pop
or
mov
lret
mov
test
js
lret
xchg
repz
mov
mov
cmc
cmp
pop
cwtl
fldcw
shll
lea
sub
xlat
ret
repnz
lcall
inc
in
adc
arpl
dec
aas
clc
jge
and
enter
cli
jp
cmpsl
mov
aam
mov
fistpll
xchg
popf
mov
fisubrs
push
int3
pop
fimull
divb
aad
in
mov
xor
cmpsb
dec
push
clc
xor
pop
fsts
js
in
cmp
rcrl
inc
cmp
insb
fcompl
xchg
mov
adc
cmovnp
push
mov
push
xchg
imul
sbb
cmpsb
test
cmpsb
test
push
adc
xchg
mov
fwait
ret
push
roll
add
dec
mov
inc
addl
mov
test
push
mov
mov
loopew
insl
aam
or
jne
sbb
loopne
test
or
xchg
fucom
mov
jge
leave
rolb
sub
cmc
ss
jl
out
addr16
push
aaa
test
sbb
or
in
in
inc
xor
cmc
inc
adc
cmp
inc
add
movsl
mov
sti
scas
jbe
adc
add
out
dec
loop
loopne
cmp
imul
push
dec
pop
aad
pushf
pusha
jle
jns
repnz
dec
outsl
int3
lds
jae
dec
fs
mov
rcll
int3
aas
out
aas
test
outsl
xchg
psrad
and
pop
dec
shrl
mov
repnz
xchg
sbb
insl
inc
and
xor
xchg
in
xchg
cs
add
lds
aaa
push
cmp
lds
jle
inc
and
jp
push
imul
adcl
mulb
stc
cmc
jae
add
dec
arpl
pop
imul
pusha
push
jae
cmp
lods
insb
adc
dec
lods
insl
sbb
pop
mov
and
enter
sbb
xchg
stc
hlt
div
jo
push
imul
sbb
int
dec
xchg
loopne
js
jg
sbb
divb
xor
imul
jae
test
xor
mov
pop
sbb
rolb
mov
loopne
sbb
fucompp
push
ss
push
cld
mov
cmpb
jnp
scas
mov
aam
pusha
mov
inc
xor
mov
cmpsl
clc
xchg
loope
and
out
rorl
lahf
imul
xor
out
fidivrs
cwtl
push
rcr
adc
cmp
pop
sub
cld
mov
pop
dec
adc
repz
gs
lcall
cli
jnp
and
addr16
pop
dec
cmp
mov
jg
inc
insb
mov
mov
push
and
sbb
nop
aas
mov
mov
arpl
rcl
cs
pushf
xchg
push
push
xlat
rcll
push
out
mov
addl
roll
sub
fnsave
cmpsl
lock
outsl
out
inc
sarb
pop
lret
lcall
xchg
add
sub
test
mov
mov
sbb
fdivs
push
push
push
pop
xchg
mov
imul
or
jno
xchg
pop
lret
mov
bound
pop
fdivrl
sub
rorb
es
sbb
scas
sahf
xchg
in
mov
add
out
mov
stos
or
xchg
dec
pop
imul
push
out
hlt
or
jl
mov
or
and
jb
icebp
jl
roll
movsb
sub
mov
sbb
jle
cli
cmpsl
stc
jno
mov
xchg
cmpsl
outsb
inc
fnstcw
ja
lock
dec
mov
ret
xlat
xor
gs
aaa
dec
popa
xor
jle
stc
popf
clc
test
imul
fisttps
xor
dec
adc
insl
inc
xor
xchg
pop
ret
push
pop
ret
mov
lock
daa
test
lret
ljmp
in
pop
cmp
mov
orl
mov
jno
lahf
or
das
adc
movsl
sbb
inc
push
cmp
add
daa
adc
mov
mov
xchg
aam
push
jmp
push
xchg
lock
jecxz
mov
xor
and
sbb
fstl
imull
cmp
sbb
mov
movsb
or
enter
inc
aad
push
push
stc
imul
sub
sub
inc
stc
xlat
adc
ja
sub
clc
lock
lret
mov
mov
call
in
in
ret
push
sub
dec
lahf
dec
mov
fstpt
divb
jnp
sbb
ret
fwait
movsl
sub
ja
stos
xchg
and
inc
sarl
jmp
cmp
sub
jmp
or
and
xor
xor
pop
pushf
jl
fcmovu
mov
fistpll
daa
cmpsl
into
outsb
int
cmp
push
jns
pop
aaa
and
cmp
cltd
push
cli
call
lret
push
aas
inc
dec
fwait
gs
fistl
mov
int3
dec
xor
rclb
dec
sbb
fsubrs
repz
xchg
push
inc
pop
jecxz
pop
dec
movsl
adc
insb
mov
fst
sub
mov
lcall
or
mov
gs
dec
mov
xchg
in
inc
leave
cwtl
ja
sbb
xchg
outsl
jp
cmpsb
out
jmp
push
mov
mov
fistps
ret
xchg
xchg
jle
imul
in
sbb
mov
adc
push
popf
movsl
addr16
stos
pop
push
es
popf
outsb
test
inc
sahf
jp
jge
mov
add
into
xchg
push
push
pop
xchg
subb
xchg
int
cmp
adc
repnz
dec
ss
stos
aad
sub
fistl
and
mov
adcl
movsl
jmp
adcl
mov
sub
xchg
shll
subl
fcmovu
cmp
aad
or
shll
jg
add
loop
mov
and
out
mov
adc
mov
ror
les
std
movsb
repz
add
stos
clc
xlat
fs
lcall
in
push
repz
loope
jmp
je
sub
in
shlb
imul
mov
push
inc
dec
js
repz
xchg
orl
xorb
push
xor
out
pushw
push
ret
jo
loopne
pop
sub
mov
sub
addb
mov
xor
mov
out
arpl
fdivrp
jnp
jb
mov
mov
pushf
mov
cmp
cmp
xlat
dec
nop
in
mov
sti
xchg
in
sbb
fidivs
mov
rolb
test
add
cmpsb
inc
pop
sub
xor
mov
pop
xor
arpl
in
rcll
test
fisubrs
or
and
xor
lret
and
nop
and
adc
cmp
loop
inc
or
out
dec
pop
icebp
sub
pop
or
adc
cmpsl
or
pop
std
add
xchg
pop
sub
loop
rcrl
je
int
and
cwtl
pop
sub
enter
xchg
sahf
ja
mov
int
in
and
aam
fisubs
loopne
dec
mov
push
mov
das
xchg
fcomip
aam
dec
leave
test
and
mov
inc
test
pushf
icebp
jge
test
jg
jmp
out
das
insl
mov
pminsw
outsl
int
sbb
or
xchg
enter
mov
shll
inc
ret
in
xor
jge
popa
loopne
sub
sbb
add
pushf
lds
xor
es
xchg
xchg
cmp
xor
mov
xor
insb
cmpl
sbb
push
jle
sahf
popf
xchg
dec
inc
addr16
xchg
mov
sub
mov
sbb
daa
cltd
jl
cld
cmp
insl
sbb
and
lods
dec
push
in
cmp
inc
mov
sub
loop
mov
jp
cmp
enter
and
outsb
sub
lock
ret
into
rcrl
xlat
cmp
jne
pop
cmp
dec
xor
push
out
movsl
cmp
popa
ret
cltd
push
ljmp
popf
adc
mov
fists
inc
jae
mov
xor
dec
xchg
pusha
mov
or
cmpsb
pop
xchg
sbb
push
adc
fs
xchg
loope
out
inc
adc
popf
inc
rorb
push
ds
lods
or
and
add
lods
shrl
or
in
das
cmp
cli
sbb
cld
add
pop
dec
xor
xchg
pop
jbe
je
jmp
iret
cmp
xchg
add
fiaddl
leave
jmp
sub
sbb
sbb
push
test
cmc
in
fidivs
lock
xor
xor
cmp
push
insl
outsl
xchg
dec
pop
int3
push
and
mov
cmp
sar
in
cltd
call
xchg
mov
lcall
das
inc
mov
pop
and
mov
dec
nop
jecxz
scas
lock
clc
cmp
mov
mov
or
xor
cmp
and
popa
and
add
pop
and
scas
add
test
sahf
or
rol
addr16
push
mov
push
notl
sbb
push
and
xor
and
lret
cmp
psubd
sbb
or
cmp
sbb
and
sarl
push
lods
or
sarl
mov
xor
out
sub
adc
out
inc
mov
addb
dec
hlt
out
dec
dec
popf
xor
cmpsl
push
icebp
int3
ret
hlt
pushf
ds
cmp
lret
or
call
daa
mov
fstl
in
push
pushf
rcrb
int
imul
mov
mov
fisubrs
lret
cmp
pop
push
sbb
push
or
clc
adc
lock
gs
cmp
dec
adc
mov
divb
push
jnp
cld
shlb
std
loope
adc
and
inc
fmull
mov
stos
xchg
adc
xor
aaa
mov
jl
xor
insb
cmp
inc
mov
rclb
cmpsb
mov
loopne
nop
jl
incb
das
push
xlat
popa
divb
aaa
paddq
pop
fwait
push
xchg
loope
stos
repnz
into
pop
push
ficoml
sub
xor
push
pop
jns
ret
adc
repz
divl
out
adc
or
fsubrp
xchg
out
decl
ret
push
push
push
mov
push
inc
push
push
mov
ret
mov
sahf
xchg
out
out
and
outsl
mov
or
sbb
popa
aam
sti
mov
sub
lcall
add
jmp
cmp
stos
push
std
std
and
fsubs
sbb
stos
sti
mull
mov
push
dec
ret
jg
sub
jecxz
shlb
leave
leave
ljmp
bound
testl
andl
dec
popf
call
movsb
and
inc
je
fdivs
imul
fwait
lea
mov
std
pop
addr16
inc
rcrb
xor
scas
mov
fnstenv
lods
pop
nop
popa
cmc
xor
repz
jl
push
test
ljmp
xchg
out
bound
call
jo
stos
add
rclb
rol
fldl
push
aad
mov
pop
repz
dec
xor
aas
jg
push
cmp
ret
adc
push
out
and
rorb
sbbl
rorb
nop
mov
adcl
mov
or
xchg
lock
fcmovu
leave
loopne
std
xchg
testl
daa
bound
add
div
adc
scas
xchg
pop
adc
adc
add
cmpsl
out
jl
inc
jg
adc
mov
pop
stos
cmp
das
or
mov
into
ds
push
pushf
outsl
mov
xchg
dec
push
xchg
shrl
pop
and
mov
aas
cmp
mov
scas
aas
mov
inc
lds
lods
insb
scas
cmp
dec
std
aad
jae
adc
or
inc
push
mov
dec
aaa
jl
push
mov
xchg
repz
repz
or
fsubp
sbb
data16
sbb
jp
flds
mov
in
das
mov
lret
mov
lock
inc
fisttpll
lods
push
ds
inc
insb
mov
in
dec
mov
inc
aas
push
jmp
stos
cmp
dec
rol
aam
inc
pop
repnz
pop
repnz
adc
sub
insb
mov
aam
cli
jl
and
cmp
xchg
std
in
out
mov
mov
repnz
sub
xor
aas
dec
xor
int
push
int
cwtl
mov
loop
push
xchg
scas
mov
pop
loopne
push
pusha
adc
jnp
scas
pop
mov
int
call
or
mov
int
sub
idivl
add
jp
add
insb
mov
mov
in
push
dec
jge
or
nop
ds
add
mov
enter
xchg
jmp
out
decb
cltd
enter
fs
popaw
scas
movsb
test
bnd
push
rcll
dec
stc
mov
push
push
cmp
sub
mov
shlb
nop
stos
push
imul
iret
out
mov
mov
sub
scas
sbb
mov
xor
jmp
cmpsl
push
xchg
jmp
mov
xor
pusha
jmp
ss
jbe
popf
ljmp
xchg
stos
add
pop
nop
into
stos
mov
dec
push
pop
int3
pushf
rcrl
push
loopne
fsubs
mov
arpl
iret
imul
mov
jg
imul
lock
lret
imul
mov
rcrl
into
pop
jge
or
popa
test
inc
test
pop
stc
or
pushf
shrb
fwait
cmp
in
jl
jno
push
adc
jp
cli
dec
movl
lret
xchg
add
mov
jmp
mov
sub
ljmp
mov
fwait
push
shlb
mov
push
rcrl
into
movsl
sub
flds
and
mov
mov
pop
stc
mov
pushf
xchg
scas
movsl
pop
cwtl
ficoms
shlb
sbb
into
xchg
push
xor
push
xchg
enter
jmp
or
adcb
addb
dec
dec
lds
outsb
jae
test
xor
imulb
in
cmpsl
lods
fsubr
adc
xchg
in
mov
jae
dec
shlb
inc
popa
lds
push
loopne
iret
daa
dec
nop
jg
out
xchg
mov
lret
loope
and
inc
int
jae
mov
addl
dec
aas
sbb
mov
dec
xchg
mov
cmp
sbb
or
fst
lods
inc
filds
and
cmp
mov
mov
jg
ret
and
inc
lcall
in
call
out
mov
sbb
out
call
ds
mov
loope
or
jl
xor
cmp
mov
jle
rorl
dec
cmp
loop
jge
jno
insb
jo
sti
mov
popf
sbb
dec
dec
or
xchg
lds
pop
imul
addl
pop
in
mov
mov
out
add
cmpsl
mov
insb
dec
push
cmp
mov
jnp
and
push
sbb
push
addb
mov
adc
movsl
adc
pusha
adc
mov
xchg
fwait
fwait
mov
nop
push
sub
daa
in
decb
outsb
pop
adc
fcmovb
mov
push
jp
out
cs
or
je
push
hlt
sub
add
jl
rep
test
cld
adc
test
pusha
icebp
adc
jns
fadds
sbb
inc
xor
sbb
or
jb
ret
lahf
inc
or
fiaddl
jmp
loope
sub
dec
lock
inc
leave
push
mov
call
out
xchg
jmp
outsb
cmp
sub
sahf
lret
cwtl
js
sbb
in
dec
testb
ja
into
pop
hlt
jp
mov
or
pop
xor
in
hlt
and
mov
aaa
jo
mov
jg
arpl
jb
sbb
adc
adcb
mov
out
pop
pop
add
cmp
pop
xlat
pop
stos
push
lahf
or
sbb
scas
xchg
andb
sub
mov
test
adc
cmpsl
adcl
add
rcrl
sbbb
xchg
daa
jecxz
pop
out
mov
pop
mov
loopne
xchg
mov
adc
addr16
leave
xchg
popf
cmp
addr16
fwait
xor
in
sub
in
mov
mov
lds
in
mov
and
push
in
xchg
outsb
sbb
inc
push
sub
jl
cltd
movsb
scas
adc
xchg
pop
fstpl
lahf
or
xor
aad
lret
adc
dec
loop
and
loop
mov
push
mov
mov
clc
mov
cli
dec
stos
push
pop
mov
sub
loope
push
leave
or
push
jmp
sbb
and
xor
mov
imul
cmp
in
lret
and
negl
jmp
test
cmp
jp
mov
pop
sbb
stc
xor
sbb
push
pushw
pop
cmpsb
xor
test
movsl
sub
jp
in
push
fstpl
dec
loop
sti
xor
add
xor
push
push
and
in
mov
inc
mov
inc
sub
fsubr
mov
xlat
cli
push
jbe
mov
xor
ds
cmp
insb
mov
mov
xchg
sub
pop
adc
cli
ja
aam
fldl
outsl
icebp
adc
xor
inc
shl
in
fidivrl
jmp
mov
xor
addr16
fdivs
cld
imul
faddp
mov
imull
push
sbb
xor
ja
loopne
in
icebp
xor
jno
rcrl
push
aad
test
cmpsl
dec
xchg
mov
inc
test
pusha
or
stos
out
stc
jp
pop
or
dec
test
xchg
push
ss
leave
xchg
push
addr16
or
lret
mov
cwtl
push
ffree
leave
rcll
data16
frstor
mov
or
xchg
rorw
call
mov
int3
addr16
dec
or
movsb
mov
jbe
test
out
lret
inc
mov
push
and
jmp
push
arpl
loop
pop
out
in
inc
xor
test
sbb
push
lret
outsb
outsl
repz
push
jne
mov
pop
arpl
sbb
sbb
cltd
das
jne
jle
adc
and
inc
mov
xchg
js
inc
push
xor
in
xor
data16
iret
add
pop
sub
adc
mov
inc
jl
gs
notb
jb
jp
pushl
xchg
mov
mov
scas
jb
jnp
add
outsb
mov
clc
rol
lods
jmp
ret
fmul
dec
pushf
inc
sbb
inc
dec
cmp
and
ret
xor
mov
jnp
sub
outsl
pop
and
mov
inc
pop
jno
mov
popa
sahf
push
push
fs
movsl
and
and
push
adc
lahf
enter
inc
and
lret
ja
sub
das
mov
xor
pop
pop
inc
pushf
push
nop
jp
mov
xchg
rcll
lds
rcrb
and
cmp
test
in
lahf
int3
cmpsb
stc
lods
xor
shrl
lahf
xchg
mov
lcall
mov
xchg
push
mov
idivb
cld
fildll
mov
rorb
pusha
sbb
addr16
loop
out
aad
in
mov
add
add
aaa
mov
xchg
mov
shrl
notl
xor
cmpl
aam
and
cltd
push
pop
call
push
shlb
xchg
sbb
pop
push
rclb
xor
xor
div
sti
addl
push
adc
and
ds
and
scas
mov
pusha
adc
fldt
loopne
popa
movsl
cld
adc
mov
adc
adc
repnz
mov
mov
mov
scas
sahf
sub
xor
int
cmpsl
frstor
pop
pop
cmp
jbe
cld
lods
inc
sbb
xchg
and
jno
in
ret
dec
fucomi
jmp
stos
lret
pop
mov
std
xor
or
adc
pop
mov
or
lea
and
loope
aad
shlb
sub
xchg
sbb
ljmp
sub
es
fadds
lcall
mov
and
insl
xchg
imul
push
xchg
call
xor
js
dec
fiaddl
mull
inc
ficomps
into
fdiv
shlb
jbe
xor
adc
ret
push
or
sbbl
insb
mov
or
aam
ss
mov
jge
pop
ret
enter
loop
minps
movb
mov
jge
pop
sub
mov
mov
jnp
stc
pop
dec
int3
loope
add
xchg
lret
jle
inc
popf
adc
xchg
adc
xchg
sub
mov
xchg
mov
cmc
jnp
shll
dec
cmpsb
iret
imul
push
pop
jno
ret
jecxz
sbb
movsb
decl
rcll
hlt
inc
jge
mov
cmp
fldenv
pop
test
outsb
mov
movb
jno
in
fdivrs
out
xor
paddd
jne
std
cmpsl
fisubl
xchg
or
and
lcall
mov
mov
sbb
insl
in
sub
adc
call
sbb
dec
lock
mov
ja
and
mov
inc
xchg
pop
ljmp
push
adc
mov
sbb
or
and
sbb
jecxz
fwait
dec
ss
xchg
movsb
popf
inc
mov
and
cmpsb
stos
data16
cmp
imul
pop
clc
push
ja
lock
pushf
test
inc
std
mov
xchg
mov
lahf
push
mov
rol
cmp
mov
jecxz
adc
or
xchg
xchg
mov
outsb
jp
push
push
mov
push
adc
stc
sarl
setge
loop
dec
cwtl
xchg
push
mov
daa
testb
and
pop
cmp
icebp
xor
add
xor
ljmp
dec
das
cmp
mov
lods
xor
pop
lahf
sub
mov
fnstcw
jl
dec
cli
adc
mov
inc
fs
sahf
add
mov
cmpsb
adcl
cwtl
cmp
mov
call
std
int
out
xor
pushf
push
hlt
push
jbe
js
sub
push
cld
str
hlt
pushf
imulb
push
pop
pop
jg
push
fimuls
jno
call
mov
dec
adc
dec
stc
xor
test
andb
ret
or
or
push
push
jp
shrl
push
cmp
out
std
push
pop
mov
or
pop
cli
ret
and
int
cmp
sub
repz
lock
dec
jne
addr16
xchg
jno
or
jle
mov
test
mov
fbstp
xchg
cmp
rcr
xchg
pop
push
je
pusha
cmp
xor
insb
inc
cs
in
and
add
xchg
pop
mov
idivb
jne
adc
std
add
or
or
popa
aad
fs
mov
mov
push
std
sub
cmp
data16
data16
or
ljmp
pop
int
adc
sbb
xchg
pop
mov
mov
mov
pop
jecxz
or
pop
mov
testb
cwtl
cmp
and
mov
mov
cmp
dec
fdiv
mov
cwtl
push
cli
outsl
clc
add
or
ret
pop
repz
or
sub
cld
xchg
ret
shrl
sub
inc
xor
add
out
jnp
sub
sbbl
cmpsl
loopne
and
call
add
aaa
push
adc
test
insb
inc
mov
xor
in
hlt
lret
xchg
sbb
pop
cmp
scas
adc
lods
jo
mov
adc
sub
aam
push
outsl
fmulp
rcrl
cmp
add
inc
rorl
test
xor
gs
dec
add
pusha
lret
cltd
cmp
or
cmp
std
imul
addr16
xchg
roll
sub
inc
repz
dec
daa
sahf
push
fnstenv
xor
sbb
pop
mov
push
pop
shll
pop
out
cli
cs
xor
aas
sbb
inc
mov
cmp
data16
or
mov
jo
ss
dec
xor
gs
adc
xor
lret
adc
test
xchg
jle
jae
outsb
jae
div
sub
cmp
sbb
jb
inc
jge
pop
fcompl
mov
mov
pop
cwtl
push
xchg
mov
fs
sub
xchg
pop
push
cwtl
shll
data16
mov
push
sbb
jecxz
dec
insb
mov
and
pop
bound
loope
push
jecxz
push
or
adc
call
mov
or
outsl
cmp
hlt
adc
adc
roll
pushf
movsb
or
cmc
and
xor
sbb
dec
push
inc
dec
fmuls
frstor
cmpsl
jg
inc
cmpl
mov
int
pop
bound
das
sbb
sbbl
jmp
sbbl
mov
push
fdivrp
dec
fs
test
divl
fwait
or
test
outsl
mov
and
adc
mov
or
xchg
movsb
imul
mov
call
rcl
lock
daa
add
ljmp
smsw
or
cmp
movsl
out
xchg
jmp
pop
push
cltd
loop
das
inc
jo
and
out
sbb
rolb
out
iret
popf
sub
gs
dec
jb
loop
and
lods
bound
and
push
ret
adc
dec
sbb
imul
mulb
adc
cmpsl
sub
frstor
cli
xchg
movsl
stc
gs
lock
repz
shrl
xor
pop
and
ret
xchg
stos
andb
daa
mov
xchg
imul
adc
in
adc
fimuls
jmp
add
push
insb
mov
test
dec
ljmp
ficoms
lds
push
fs
inc
adc
xchg
mov
testb
push
sarl
in
push
and
aam
test
popf
mov
imul
fistl
or
mov
sub
push
sub
xchg
arpl
xchg
cmc
adc
out
xor
lret
out
fcmovne
iret
jns
push
cmp
rorb
mov
xor
push
sub
cmpb
push
lods
popa
mov
mov
addr16
xchg
sahf
lea
and
mov
or
pop
js
outsb
sbb
ret
pop
ljmp
sahf
mov
jg
cmc
xchg
dec
fildl
jg
outsb
in
cwtl
into
inc
xchg
dec
mov
pop
adc
xchg
arpl
cmp
pop
dec
mov
hlt
dec
or
cs
shll
pop
test
or
fidivl
mov
sbb
mov
pushf
cmp
popf
jmp
aaa
sbb
mov
cltd
stos
clc
loopne
jns
and
inc
test
repnz
test
and
dec
sub
fcomps
jno
mov
mov
push
out
adc
imul
test
negb
sub
cmp
movsl
inc
xchg
out
mov
js
pop
xchg
sub
loop
shl
bound
jecxz
fists
scas
sbb
clc
cmpsl
push
das
jl
andb
xor
dec
int
out
mov
cmpsl
or
hlt
mov
add
xchg
outsb
bound
lret
imul
daa
imul
ret
pop
mov
int
mov
xor
dec
push
add
xor
xchg
fsubl
sub
inc
xorb
inc
add
sbb
iret
popa
push
mov
lods
out
out
or
push
mov
pop
dec
jbe
inc
mov
cmpb
pop
jecxz
and
sub
call
jno
lcall
movsb
loopne
pusha
mov
pusha
out
cwtl
dec
add
push
pop
cmc
jo
adc
ret
shrl
aad
mov
sahf
xchg
sarl
mov
or
lds
or
sbb
loopne
lods
xchg
ret
ja
and
dec
mov
addl
jp
dec
lret
sub
jge
fcompl
mov
cmpsl
push
jo
inc
psubd
outsb
xchg
and
jbe
aas
jo
cli
xor
aas
lcall
in
test
jle,pn
jmp
cwtl
scas
adc
loope
xchg
dec
push
fsubr
push
lret
dec
cli
cmp
mov
lds
mov
ror
push
pop
das
insl
aas
adc
mov
cmp
mulb
movsb
cmp
jg
cmpsb
test
frstor
xlat
gs
pop
or
ss
mov
dec
jmp
jbe
add
pop
xchg
movsb
addr16
dec
cmp
mov
je
xor
mov
pop
push
and
and
dec
pop
movsl
lds
lcall
andb
js
bnd
fcomps
xchg
mov
movsl
mov
sub
mov
lcall
das
icebp
ljmp
and
mov
mov
add
imul
or
in
jl
lods
push
mov
es
push
and
mov
sub
data16
mov
push
or
mov
xchg
daa
adc
xchg
xchg
repz
leave
mov
dec
hlt
scas
in
xor
add
mov
mov
adc
jp
in
js
cwtl
and
outsb
push
mov
jle
movsl
push
lahf
iret
pop
in
pop
cmp
and
pusha
sub
jne
jp
orb
cmpsb
pop
insb
jmp
sbb
xlat
or
test
test
js
lods
push
mov
or
aas
mov
sti
shrb
sbb
fldcw
repz
gs
push
imul
out
sti
in
loope
test
repz
in
push
loope
cmp
jae
mov
sub
dec
movsl
dec
sbb
in
push
push
pop
sub
sbb
and
dec
pop
mov
xor
jne
in
and
movsb
negb
xchg
bound
jnp
xor
push
adc
inc
inc
mov
stc
cmc
dec
test
pop
sub
jmp
xor
test
mov
stc
mov
jle
add
fldl
sub
jecxz
sbb
imul
movsb
lea
mov
push
mov
test
lea
clc
mov
mov
jge
jge
add
dec
mov
xor
inc
dec
push
or
sbb
pushf
lea
inc
ja
fcom
scas
roll
cmp
xchg
xchg
xchg
fcomps
fidivrs
fidivl
mov
or
push
int3
stos
outsl
hlt
aas
dec
outsl
out
jb
in
insb
lock
pop
and
shlb
push
or
and
sub
push
pop
and
daa
mov
sbb
xchg
rcrl
sbb
les
in
push
push
xchg
sbb
pop
lds
push
imul
bnd
cmp
jmp
xor
pop
inc
and
pop
and
mov
jns
mov
xlat
cld
test
shrb
int3
xchg
outsl
add
aas
dec
fdivrs
std
stc
cmc
sbbl
repz
dec
mov
cmpsb
xchg
fdivrs
xor
fnstsw
cmp
or
inc
jo
roll
fwait
xlat
dec
cmc
mov
add
std
leave
dec
mov
and
sbb
test
xchg
mov
repnz
mov
jge
pop
enter
imul
and
cmp
ds
xor
add
dec
int3
push
and
jbe
push
out
inc
loopne
jg
jno
mov
imul
enter
cmp
adc
mov
and
lret
in
cmpsb
movsl
lods
sbb
jbe
sbb
jo
inc
inc
clc
popa
lds
fs
jecxz
das
fstpl
and
push
lods
jne
movsl
ficomps
adc
cwtl
testl
add
data16
pop
outsb
mov
daa
in
cmp
cli
mov
sub
ss
popl
sbb
ljmp
loop
sub
inc
pushaw
jno
nop
xchg
sub
popa
popa
jns
imul
dec
mov
sbb
les
loop
xor
sarb
inc
sahf
pop
mov
inc
dec
push
jmp
nop
pop
ds
xchg
sti
push
inc
mov
dec
or
pop
in
inc
scas
leave
and
repz
mov
stos
lods
jnp
add
dec
sbb
inc
data16
ret
xor
mov
jns
adc
cmp
adc
or
mov
test
mov
je
mov
push
mov
mov
sarb
movsb
test
mov
adc
mov
adc
add
inc
add
cli
push
negl
js
mov
xchg
addl
xchg
sahf
mov
mov
cli
out
mov
and
add
and
movsl
sahf
xchg
daa
popa
adc
and
mov
loop
cli
cmp
lea
cmp
das
scas
sub
inc
daa
dec
sub
lods
jmp
sub
out
pop
loopne
and
rcrb
mov
xor
outsl
aad
push
push
out
lcall
mov
fildll
fs
insl
mov
popf
mov
sub
mov
sti
enter
stos
lods
andb
inc
subl
inc
mulb
stos
aaa
sub
rcll
cmp
ret
lods
repz
lods
aam
and
icebp
push
cmp
imulb
mov
sub
mov
dec
hlt
sub
iret
pop
xor
mov
inc
repnz
mull
bound
add
jmp
shll
xchg
sub
repz
push
pop
out
enter
jb
mov
mov
iret
xchg
mov
pop
mov
ficoml
mov
dec
jnp
int3
fcomps
mov
movsb
sub
nop
sti
jmp
aam
repnz
insl
popf
sbb
or
int3
mov
imul
lock
popa
adc
aam
pushf
ret
andl
mov
int
jle
jnp
push
inc
sbb
cltd
xor
scas
push
orl
inc
pop
jge
cmp
push
mov
stos
fcmovb
les
mov
mov
mov
and
mov
imul
pop
sub
outsb
pop
mov
xlat
aaa
and
imul
aam
ficomps
cs
cmc
bound
jg
lds
fmuls
es
xor
imul
imul
xor
decb
popa
adc
in
xchg
xor
scas
push
xor
out
inc
push
jnp
scas
mov
push
ja
fldcw
mov
mov
fidivs
cmp
mov
stc
maxps
cli
push
in
int
testb
je
outsl
inc
fidivrs
sti
dec
xor
jae
insl
xchg
andb
adc
fildll
cmp
pusha
cwtl
lods
inc
sahf
and
scas
stos
mov
adc
mov
jmp
adc
lods
and
rcll
cmp
inc
or
fwait
sub
testb
xor
in
iret
xor
jns
cmp
xchg
out
fidivrl
pop
xchg
cmp
mov
test
loope
sub
sbbl
ficomps
adc
ret
mov
xlat
push
push
scas
loop
jb
cmp
orb
mov
and
sub
ret
into
jae
inc
orb
xchg
sub
dec
mov
dec
insl
cs
sbb
fiaddl
outsb
xchg
jae
rolb
lods
xor
or
test
mov
inc
mov
mov
jbe
hlt
and
int
jg
dec
repnz
mov
ret
adc
cmpsl
je
ljmp
int
out
fwait
mov
pop
lret
popa
sbb
xor
cmp
adcb
stos
movsl
mov
and
add
pop
push
push
int3
out
mov
insb
mov
mov
adc
pop
jecxz
mov
mov
mov
add
jl
jl
push
cs
lret
or
lods
cmp
out
movsb
add
dec
ds
push
fldenv
fiadds
xor
and
jge
lods
dec
loop
inc
iret
dec
push
mov
shll
adc
stos
enter
jge
xor
scas
data16
and
add
mov
cwtl
cmp
scas
pop
rcl
cmpsl
imul
push
and
and
std
cli
lret
insb
adc
adcl
sbb
add
pop
xor
push
repz
jnp
fwait
ds
shrb
pop
outsl
ret
pop
mov
rcll
jecxz
sbb
inc
mov
cmp
repnz
repz
adcl
dec
push
sub
push
fxtract
insl
xor
sar
sti
cmpsl
dec
add
es
cmpsb
adc
cmc
addr16
xor
aaa
cli
sbb
out
test
ret
fiaddl
stos
sbb
jb
pop
adcb
out
adc
shll
mov
mov
mov
pusha
mov
and
cmp
push
mov
out
xchg
cltd
int
sub
and
jne
pop
fcmovb
mov
les
mov
xlat
jne
jb
cli
ret
iret
inc
pusha
pop
cmovns
mov
lahf
mov
mov
push
fdivl
je
xor
jne
sub
jmp
push
shlb
dec
not
push
pop
loopne
inc
adc
inc
fists
lea
andb
in
dec
inc
sub
xor
add
lret
cltd
pushf
push
mov
rol
push
aaa
mov
lods
push
and
cmpsl
inc
sub
push
jg
mov
adcb
jp
dec
pop
xchg
lea
mov
dec
jp
enter
jmp
icebp
insb
js
sti
adc
jns
xor
xor
dec
xlat
inc
cs
xchg
les
nop
ss
out
lret
cwtl
icebp
ds
pop
sbb
or
dec
test
stc
adc
or
int
sbb
pop
cld
pop
cmpsl
cld
xor
cltd
pushf
fstpt
loopne
sub
sarl
mov
ret
and
lds
add
das
pop
cmp
pop
xchg
ja
mov
repz
cmp
fsubl
lods
outsl
in
push
jb
lods
pushf
jmp
outsl
aad
cmp
imul
push
pop
stos
jmp
or
lods
test
xchg
into
push
push
sub
xchg
out
mov
push
call
push
xchg
in
pop
adc
or
xor
mov
mov
and
adc
iret
in
push
mov
popf
add
inc
xchg
pop
fstpl
xor
repnz
mov
das
out
int3
or
js
imul
push
xor
icebp
pop
mov
sti
rsm
cmp
cmp
dec
test
aam
pop
movlps
jo
repz
mov
pop
sbb
mov
xor
push
cltd
mov
push
stc
mov
aam
mov
mov
sub
pop
push
icebp
mov
pop
out
jne
outsb
addl
dec
sbb
mov
stc
inc
iret
add
test
ljmp
lret
dec
lret
or
testl
or
mov
cwtl
lock
cmp
or
pusha
xlat
dec
ja
inc
addl
stos
sub
sub
jb
cmc
cs
cmp
in
push
xchg
cmp
jp
cld
cltd
insb
jecxz
mov
dec
pop
bnd
xchg
lret
hlt
out
jnp
insl
or
push
or
fsubs
int3
popa
adc
js,pn
jmp
xchg
sbb
sbbb
push
push
sbb
adc
lea
inc
orl
adc
pusha
mov
jnp
xchg
repnz
pop
lock
out
rol
cmp
ret
cld
jo
in
inc
sahf
xchg
push
fs
jg
ljmp
decb
stc
cmp
stos
lahf
push
lds
cmp
pop
in
enter
pop
jae
rcrl
dec
repnz
cmpsb
or
and
outsl
or
push
lahf
je
push
push
jle
lahf
lea
xchg
imul
inc
lret
xor
fcmovbe
mov
loope
cmp
std
mov
push
insl
cmpsl
xchg
mov
cmp
outsb
sti
inc
push
jne
adc
cmc
icebp
fnsave
xchg
aad
into
js
cwtl
adcl
test
mov
and
gs
and
out
inc
adc
jo
push
pop
xchg
jnp
jne
mov
push
js
sahf
stos
mov
mov
sbb
or
cmp
pop
jp
lret
lods
xor
es
xor
sbb
xor
rcr
mov
mov
fwait
lcall
mov
or
mov
jecxz
stos
les
dec
mov
mov
jmp
frstor
dec
fwait
fs
mov
mov
lea
into
std
repz
or
fwait
mov
test
lds
lahf
inc
ror
jl
lret
jnp
stos
insl
andb
mov
adcb
inc
push
push
ret
sahf
push
dec
out
mov
push
fdivr
jne
fldcw
ret
sub
mov
xlat
sub
push
pop
int
cltd
lcall
mov
fdivs
or
mov
sub
jae
ljmp
out
sahf
iret
jnp
mov
dec
stos
call
jl
push
dec
movsb
xor
mov
and
mov
cwtl
aaa
std
lret
xchg
nop
xor
sarl
and
jo
outsl
cmpsb
test
test
inc
xlat
mov
enter
fbld
xor
out
mov
inc
sbb
inc
mov
std
ja
cltd
inc
call
stos
pushf
pop
bound
lock
cwtl
jge
pushf
fidivrs
inc
jae
sbb
inc
xchg
mov
mov
subb
sahf
mov
lock
xchg
dec
mov
ret
fcmove
xchg
scas
sbbl
sub
dec
jne
cwtl
mov
loopne
shl
xchg
in
cmc
lret
add
fldcw
push
out
in
clc
pop
in
in
pop
pop
pop
loopne
test
rcrb
lea
cmp
jb
add
or
mov
icebp
pusha
int3
adc
cmpsl
sub
stc
pop
mov
stc
lea
and
into
hlt
sub
daa
mov
adc
daa
push
mov
jp
push
es
fisubl
icebp
shr
add
leave
aam
push
shl
std
dec
in
mov
sub
and
sub
shrb
sub
xor
dec
cmp
insb
inc
loope
popa
repz
pop
pop
addr16
xchg
jmp
adc
and
push
insl
repnz
stos
jnp
inc
xchg
loope
push
movsl
jecxz
rcl
in
xchg
jmp
lds
nop
xor
outsl
sub
iret
or
stos
dec
cmpl
inc
adc
call
inc
mov
test
rorb
jle
lahf
push
popf
pop
lahf
sub
add
cltd
inc
xchg
sbb
and
das
pop
outsl
sbb
mov
mov
mov
and
xor
sub
sbb
and
cmp
dec
push
dec
aas
cmp
pop
out
cmc
paddsw
fdiv
sub
daa
bound
jnp
mov
subl
clc
inc
cld
shl
mov
push
les
mov
jmp
mov
stos
ret
daa
inc
inc
rclb
cs
and
int
cmp
cltd
test
insl
mov
or
ds
lock
pop
add
test
pop
out
or
out
loopne
mov
movsb
loopne
mov
inc
sub
arpl
xchg
stos
hlt
les
jecxz
xor
in
or
pop
and
das
dec
cmp
jge
loopne
in
push
mov
xor
xor
add
pushf
test
outsl
cltd
test
dec
stos
mov
xor
test
popa
inc
iret
jno
aam
xor
outsl
pop
ja
dec
frstor
movsl
nop
jb
push
mov
bound
add
mov
add
test
jp
mov
mov
add
icebp
cmp
inc
push
xorl
icebp
jmp
jno
insl
adc
xor
jae
mov
mov
sbb
clc
mov
popa
leave
mov
inc
dec
jo
or
fs
xor
lahf
mov
ljmp
lods
lods
jns
pop
in
inc
jg
push
push
sbb
rcrb
pop
into
ret
mov
mov
popa
loope
cmp
cld
inc
out
inc
sub
mov
mov
cs
aas
gs
jne
jns
and
ret
ret
sarb
movsl
imul
into
mov
jle
or
test
dec
out
push
jmp
sbb
jb
testl
mov
stos
rorb
inc
incb
mov
out
jmp
cmp
inc
mov
sub
test
sbb
mov
aas
test
jg
mov
push
add
mov
jne
les
mov
and
or
aaa
out
int3
js
add
inc
testb
into
mov
stos
cmpsb
lcall
sbb
xchg
fdivrl
imul
and
xor
nop
cmp
lret
mov
mov
jg
push
push
pop
dec
push
xor
lods
jecxz
rolb
sub
xor
popf
ficoms
xor
stos
stos
je
add
loope
lods
stos
arpl
pusha
jns
test
std
add
mov
jmp
std
sub
ret
mov
pop
xlat
inc
cmp
push
icebp
add
lret
test
jnp
iret
aam
scas
lret
lea
bound
clc
mov
lcall
pop
xchg
cs
sbb
cmpsb
push
and
cmp
enter
in
mov
shl
push
push
push
mov
mov
pushf
jbe
outsl
mov
jns
and
pop
push
popa
adc
push
adc
or
mov
icebp
adc
or
lds
test
ds
jo
cmp
xlat
hlt
xor
into
fwait
jl
imul
or
sbb
inc
cwtl
lret
cmp
and
outsl
outsl
mov
loope
bswap
adc
mov
or
mov
mov
mov
popf
jb
xor
lds
testb
or
xchg
dec
loope
lods
and
lds
push
inc
inc
fbld
push
rcr
xchg
pop
test
popa
sti
mov
or
aad
xchg
lcall
frstor
stc
push
sarl
or
popa
movsb
cld
dec
push
dec
imulb
stc
add
push
jbe
pop
jp,pt
imul
mov
rcl
inc
pop
xorb
push
popa
jmp
cmp
or
bound
sub
push
call
mov
mov
xchg
push
inc
sub
repz
lcall
add
mov
jns
int
test
push
icebp
loope
enter
shrb
dec
rorb
cmpb
jmp
cmp
iret
jns
cmp
call
int
pop
scas
or
pop
cli
test
pop
mov
cmpsl
aas
popa
stos
repnz
and
stos
xor
sub
sbb
scas
aaa
sub
inc
std
dec
xchg
sarb
jbe
cmc
jg
inc
fldt
cmp
int3
out
adcb
mov
push
test
mov
pop
sbb
iret
outsb
sub
mov
out
test
inc
or
push
mov
push
lret
xor
sub
inc
sbb
inc
jl
cld
cmp
cmp
pop
popf
lcall
ss
pop
adc
inc
aas
or
xchg
pop
push
mov
mov
or
add
mov
adc
ret
dec
popl
pop
mov
lea
sarl
test
sti
outsl
cld
and
dec
scas
frstor
sbb
push
mov
jb
dec
insl
cmpb
add
icebp
mov
lea
lds
inc
jne
js
adc
nop
jecxz
mov
lret
jns
sbb
jb
mov
out
sbb
lock
fcom
lods
scas
test
mov
js
xor
imulb
adcl
xor
popa
sub
in
mov
jbe
jg
lcall
sbb
divl
cwtl
dec
gs
mov
xor
and
hlt
lret
clc
add
hlt
js
jno
jnp
lret
dec
rcl
mov
lods
or
stos
addl
jl
out
mov
mov
addb
jns
cmpsb
push
jbe
out
adc
cmp
and
lods
adc
ljmp
jecxz
or
inc
and
pop
push
mov
cld
lret
push
xor
sub
add
fs
ret
mov
icebp
sbb
adc
les
cltd
ret
cwtl
and
lret
mov
xor
xchg
pushf
mov
push
dec
mov
inc
movsl
outsb
loope
xchg
scas
sub
scas
shl
cmpl
xchg
sub
clc
xor
dec
sbb
leave
loop
adc
push
and
in
hlt
insl
enter
ljmp
cmpsl
outsl
test
push
lods
and
adc
sar
je
mov
sarb
mov
inc
cld
jl
test
mov
fsubr
jnp
pop
movl
in
xchg
ljmp
loope
arpl
push
dec
mov
xchg
mov
mov
int3
adc
fisubrs
sub
es
mov
insl
outsl
icebp
enter
mov
repz
pop
das
sub
dec
xchg
push
push
test
sbb
push
mov
mov
mov
push
imul
cli
xchg
aaa
mov
xchg
pushf
jne
les
lahf
push
ret
push
dec
jb
aam
cmpsb
jns
fldenv
xor
push
out
jecxz
mov
out
std
adc
call
lret
cmp
aaa
outsl
mov
dec
aam
cli
loope
inc
int3
and
inc
xchg
in
fwait
inc
push
inc
and
mov
into
into
lock
popa
mov
out
jno
lods
clc
paddq
negb
test
push
sbb
mov
dec
add
sub
sbb
jno
jne
xchg
fists
push
adc
push
mov
movsl
push
leave
repnz
mov
pushf
mov
mov
add
jno
dec
popl
adc
and
rcrl
popf
fadds
jle
call
pop
andl
lods
xchg
xchg
mov
sarb
jecxz
push
add
sbb
cmpsl
loop
jb
lds
pop
std
outsb
and
lods
js
test
js
jmp
mov
fidivs
jb
dec
ds
aaa
mov
aam
inc
or
or
xor
push
mov
cmc
ss
cmp
maxps
arpl
adc
xchg
mov
inc
or
mov
mov
jae
daa
clc
jmp
push
fiadds
aam
cltd
outsl
imul
mov
out
into
in
add
xchg
pusha
lock
ficoms
mov
mov
push
mov
and
adc
xor
ds
jle
mov
xchg
inc
mov
hlt
scas
stc
add
pop
cmp
sub
xchg
sbb
in
ja
fcoml
ret
xor
jmp
cmp
jl
outsb
fcmove
cmpsl
stos
in
divb
xchg
jmp
mov
insb
cmpb
cwtl
xlat
pop
daa
jo
xchg
dec
std
sbb
pop
iret
jae
push
add
jnp
add
fs
cmpsb
insb
in
pusha
cmp
int3
lret
pop
outsb
gs
inc
push
jne
pushf
push
xchg
jbe
call
movdqu
adc
dec
sti
pop
out
test
jmp
adc
cmpsb
adc
lcall
aaa
xor
inc
mov
mov
repnz
das
mov
push
out
ss
mov
and
lret
divl
iret
adc
rolb
insl
mov
push
loope
out
out
mov
add
cld
push
mov
mov
adc
lcall
inc
cltd
icebp
xchg
add
pusha
xor
mov
jmp
mov
mov
cmp
xchg
enter
jmp
stos
clc
sub
mov
xor
incb
or
cmp
scas
mov
cmp
sub
xrelease
stc
dec
dec
push
push
lods
jle
xor
stc
shl
xchg
fwait
pop
xchg
xchg
mov
sub
xchg
aaa
pop
pop
mov
adc
cmc
int
and
lods
jecxz
shr
jg
mov
push
push
push
mov
jo
sarl
ljmp
xchg
lcall
xchg
addb
or
jbe
cmpsl
adc
fisubrs
cmp
lods
aas
fisubrl
icebp
cmp
popa
ret
cmp
ret
push
and
push
jmp
push
jnp
cmpsb
subb
ficomps
sub
pop
push
loop
mov
ror
add
inc
cld
adc
arpl
pop
dec
ficoms
push
pop
pop
mov
es
mov
addb
lcall
xchg
int
xchg
daa
dec
repz
stos
dec
icebp
jmp
xor
test
pop
inc
inc
xchg
cmpb
or
mov
add
push
mov
adc
push
movsb
movsl
gs
add
mull
js
and
sbb
pop
in
in
jge
push
insb
push
dec
pop
sbb
mov
push
xor
push
inc
ret
shll
insb
pop
lsl
cltd
mov
and
ficoms
outsb
inc
js
adc
or
out
aas
mov
cmp
and
pop
lahf
mov
call
cmp
pop
mov
sbb
addr16
lret
lds
addr16
mov
int3
and
xorb
lods
mov
mov
lods
lret
push
lods
jmp
out
mov
cmp
sub
mov
mov
lea
clc
repnz
dec
outsl
icebp
mov
push
imul
test
push
shll
push
ja
ret
orb
popf
sbb
int
inc
jmp
cmp
jmp
rol
jl
fstl
aaa
cs
xchg
lea
cmc
sub
inc
inc
pop
push
sub
out
xor
cwtl
cld
xor
stos
pop
adc
sbb
inc
hlt
repz
xchg
mov
pop
out
mov
cmp
jmp
ljmp
jnp
nop
daa
rcll
fdiv
add
sub
sub
rolb
cltd
mov
mov
xchg
sti
xchg
jo
andl
add
xchg
mov
fbld
pop
dec
sub
cwtl
dec
jae
add
dec
adc
and
das
stc
bound
mov
lret
sbb
dec
inc
inc
mov
inc
pop
repz
mov
pop
and
xlat
into
jnp
mov
pop
sub
test
jecxz
pop
ds
and
cmp
mov
cmp
push
mov
pop
mov
pop
add
aas
lahf
mov
jmp
adc
push
fs
xlat
loopne
test
pop
dec
xchg
mov
and
in
push
fucomp
lahf
adc
mov
into
cmpsb
jle
cltd
push
lahf
bound
loopne
mov
aam
push
pop
xchg
mov
jnp
mov
imul
sub
cltd
shl
pop
or
jg
js
test
std
push
lock
ljmp
pushf
cltd
out
imulb
mov
popaw
pop
lcall
ret
fisubrs
jae
add
jmp
xor
inc
int
sub
adc
out
sbb
fxch
jns
jg
sbb
fs
into
dec
and
xor
lock
int
mov
cwtl
dec
sahf
cmp
push
cli
sbb
cmp
fcoml
flds
lahf
loopne
std
xor
cli
ja
pusha
cmp
pop
xchg
jmp
mov
call
or
mov
jle
mov
mov
xchg
xchg
adc
je
dec
out
sub
mov
ja
xchg
push
or
pop
mov
call
scas
repnz
and
add
or
cmp
adc
mov
push
pop
insl
jl
out
ja
mov
inc
mov
mov
sti
xlat
dec
clc
fwait
mov
daa
mov
cmpl
sbb
sub
mov
test
mov
fucom
jnp
imul
lahf
aad
xchg
xor
adc
and
fucomi
sub
movsb
cld
ror
inc
jecxz
push
cmp
imul
xorb
jge
or
sub
gs
inc
inc
sahf
inc
cltd
iret
es
sub
loop
push
ss
into
insb
push
mov
cwtl
nop
push
in
cmp
jge
mov
adc
cmpsb
into
push
ret
cmp
xchg
repz
jb
test
inc
pop
ds
pshufw
push
pop
jle
cmp
scas
test
dec
mov
fbstp
cmp
shlb
pop
dec
arpl
daa
pusha
lcall
sbb
ja
or
lret
test
stos
mov
das
int
std
shl
adc
add
pop
mov
xor
lods
mov
cltd
mov
add
je
lock
mov
popa
xchg
inc
adc
dec
fisubs
push
inc
xor
imul
roll
pop
test
and
movsb
push
pushl
dec
sbb
mov
xchg
pop
and
push
enter
push
imul
and
int3
or
push
and
fisttpl
fisttpl
lahf
test
lock
jbe
and
cmp
jmp
inc
arpl
xchg
sub
js
dec
dec
insl
push
mov
jae
push
outsl
cmp
mov
aaa
mov
test
out
push
push
insl
xchg
and
mov
lret
dec
int3
add
out
pop
mov
sub
xor
mov
decl
aam
and
push
cmova
ds
popa
xchg
lret
jg
push
scas
lods
out
ss
shrb
dec
inc
subl
loopne
rorb
sbb
dec
mov
loop
xchg
pop
loopne
sahf
or
push
aas
pop
dec
fs
xor
fidivs
cmc
mov
inc
dec
dec
adc
jns
popf
rolb
cltd
mov
fs
mov
and
mov
test
inc
adc
cmp
push
das
xchg
mov
or
cltd
hlt
jne
xchg
dec
loop
jae
dec
add
sbb
pop
push
sub
mov
inc
in
xchg
jg
mov
fildl
push
fsubl
sbb
fistps
shlb
pusha
push
pop
aaa
inc
sub
push
xor
jns
pop
hlt
dec
push
ds
mov
xchg
leave
fs
mov
lret
jg
jg
inc
jno
xor
lock
add
mov
clc
inc
sub
daa
cmp
in
addr16
lret
dec
loopne
or
outsl
add
pop
dec
adc
fidivs
ja
lcall
negl
mov
cmp
or
fsubrl
sub
daa
mov
outsl
test
mov
std
call
aad
popf
cmpb
xlat
pop
mov
mov
aam
push
call
mov
jns
push
xchg
mov
gs
xchg
stc
imul
fs
aam
ret
daa
push
xor
xchg
inc
xlat
lahf
xchg
add
jle
or
mov
in
pop
jg
xchg
in
or
and
inc
and
loope
sub
xchg
sbb
in
and
shlb
test
lods
lods
xchg
xchg
lock
clc
cmpsl
pop
inc
outsb
sub
jae
cltd
outsl
push
mov
orl
dec
outsb
inc
icebp
lcall
xor
subl
dec
jl
and
adc
mov
cmp
pop
lret
sbb
mov
dec
je
subl
mov
sub
movsb
add
loop
push
cmp
mov
imul
enter
jbe
xor
fwait
test
sub
int3
movsb
leave
cld
int
sbb
fmull
loop
cld
ja
mov
jnp
mov
jne
push
push
mov
ja
sbb
aam
sub
push
repz
adc
cmc
sbb
sbb
int3
sub
repz
add
stc
add
push
mov
inc
xor
imul
les
mull
fidivs
mov
sarb
or
jne
cmp
or
mov
push
jmp
call
addb
mov
pushf
adc
les
push
stos
push
outsb
aaa
mov
outsb
add
gs
cmpb
rolb
cmc
mov
aad
sahf
mov
mov
jno
inc
xchg
mov
dec
popa
pop
xchg
lcall
imul
xchg
sahf
lcall
inc
xchg
inc
jae
aad
test
jl
cli
sbb
je
adc
and
inc
and
outsb
clc
rorl
push
ss
and
sbbl
pusha
in
cmp
fiaddl
and
loop
aad
shlb
pop
jo
bound
mov
sar
ja
fbstp
jge
xchg
inc
test
mov
aam
mov
lods
jge
shlb
mov
jge
mov
lds
push
fisubrl
jp
std
repnz
movsb
add
ss
nop
fcoml
dec
hlt
cmp
or
insl
lea
fyl2x
sbb
lds
sub
loope
mov
xchg
shl
ja
cmp
push
inc
out
mov
lock
cld
pushf
popf
sbb
or
outsl
sbb
outsb
dec
and
inc
sbb
out
loopne
nop/reserved
xor
and
jns
stc
pop
dec
mov
inc
js
and
mov
mov
and
sbb
adc
add
jbe
xor
stos
popf
das
add
jmp
es
imulb
ds
mov
mov
testl
jae
mov
push
cli
push
sub
sbb
andb
lds
mov
lret
and
int3
inc
inc
add
stos
pop
xor
pop
sti
push
insb
pop
mov
int
std
pop
outsb
xchg
push
ud0
sahf
inc
add
cmc
js
push
mov
xchg
sub
xor
scas
ljmp
mov
add
rcr
std
add
dec
mov
pop
jnp
push
sbb
insb
jle
sbb
test
ds
fdivrs
orb
arpl
xchg
sub
sub
push
cmp
sbb
sbb
mov
scas
pop
loope
and
dec
adc
pop
lock
add
xor
mov
out
xchg
ljmp
sbbl
dec
cmc
mov
mov
pop
and
pushf
int
aaa
inc
loop
jo
loop
insb
mov
iret
sbb
or
movsl
movsb
fildl
add
stos
inc
cld
imul
mov
cmp
enter
call
inc
les
lahf
jle
and
dec
call
jno
sbb
rorl
add
pushf
sbb
rcrb
mov
fiadds
test
pop
nop
inc
jle
ja,pt
cmpsl
and
mov
mov
repnz
cmp
dec
imul
mov
das
inc
cmpsl
add
sub
xchg
xor
push
and
push
mov
icebp
insl
shll
dec
push
lea
xchg
bound
in
cmp
and
add
mov
paddb
xchg
xchg
push
out
pop
outsl
jno
sahf
jnp
into
jle
and
sbb
jge
push
ja
in
xchg
adc
jp
movsl
pushf
out
in
clc
rorb
aaa
out
stos
push
pop
enter
xchg
sbb
arpl
fsubl
or
pop
int
mov
leave
push
push
cmp
stos
test
outsl
inc
out
loopne
mov
aas
mov
pusha
mov
lods
smsw
cmp
fildl
adc
or
mov
std
mov
loope
imul
xchg
cmp
mov
xor
test
scas
fsubrs
sbb
and
and
dec
lcall
pop
lret
xchg
or
mov
xchg
xchg
xchg
xorl
jae
dec
shr
xor
cwtl
fldenv
out
insb
pop
inc
push
stc
mov
sub
stos
stc
sub
addl
xchg
pop
out
movsl
hlt
out
test
xchg
leave
enter
loop
lret
mov
mov
mov
pop
insl
xchg
pushl
daa
in
cmp
test
test
mov
sub
mov
cmp
outsb
jo
movsl
ljmp
sti
scas
mov
scas
or
add
aaa
scas
test
cli
out
movsb
stc
cmp
xor
xchg
adc
mov
push
cli
mov
in
lahf
fldt
ret
xchg
adc
out
shll
pop
or
lods
mov
mov
fcoms
je
fistpll
mov
fsts
out
or
sub
iret
cltd
mov
dec
inc
sbb
add
pop
sarl
mov
pop
mov
mov
repnz
add
and
aaa
pop
or
clc
daa
xchg
xchg
mov
lcall
mov
les
adc
ffree
mov
ret
xor
cmp
out
xor
or
mov
xor
in
mov
cmc
fimull
add
add
mov
mov
cmp
ja
sub
mov
out
cmp
push
loope
push
in
lods
out
inc
and
mov
dec
jno
inc
or
outsb
fsubs
adc
pop
jecxz
movl
in
stc
dec
ret
xchg
sub
mov
inc
jnp
adc
inc
daa
cmp
jae
ret
jecxz
lea
das
imul
add
pop
loopne
andl
enter
and
int
sbb
and
gs
adc
scas
jecxz
sbb
ss
add
push
xor
pop
fcomi
fstps
mov
pop
lret
sub
int
push
mov
gs
jae
xor
push
adc
popf
push
cmc
repz
mov
push
jmp
lds
pop
mov
push
ret
mov
mov
mov
out
js
push
push
sbb
push
jmp
dec
cs
insl
movsl
or
outsb
cld
sbb
cwtl
jmp
push
paddsb
lcall
cmp
xor
dec
pop
adc
adc
pop
and
xchg
mov
xchg
ja
sub
adc
xor
fimull
jno
pop
xchg
imul
push
aaa
callw
xor
daa
cmp
filds
aaa
mov
sub
jae
fdivl
cmp
iret
fimuls
xor
cli
push
mov
xchg
negb
mulb
mov
arpl
shll
sbb
stos
int3
ror
ret
pop
lock
mov
hlt
mov
jmp
jns
fimull
arpl
dec
int3
mov
dec
movsl
push
fsincos
incb
movsl
dec
sbb
in
push
cmp
add
out
mov
push
repz
frstor
shll
addr16
out
inc
icebp
call
fisubl
pusha
and
inc
pop
or
stos
xchg
pop
bound
mov
scas
mov
jmp
adc
add
mov
fisttps
sub
mov
xchg
lret
js
xor
es
aaa
repz
mov
inc
xor
ljmp
pop
dec
xchg
sbb
and
mov
xchg
test
fwait
cmp
notb
push
div
in
and
xor
imul
sti
xchg
aas
inc
inc
lahf
mov
bound
pop
mov
sarb
or
sti
jbe
jp
jle
lahf
pop
push
mov
fmul
bound
test
imulb
test
iret
push
ret
or
and
aad
push
std
mov
mov
cs
out
pop
das
sbb
mov
into
fwait
mov
xor
outsb
js
repz
sbb
push
or
test
inc
and
shr
shlb
adc
out
movsl
stos
jg
push
inc
dec
insl
xchg
jl
sub
mov
negl
mull
mov
and
jp
cmpsb
push
push
pop
mov
jnp
decl
pop
imulb
mov
out
pop
sub
pop
testb
cmp
repz
jmp
cli
insb
ret
jnp
add
sbb
sub
add
fdivl
push
cmc
sub
push
add
aad
lods
push
adc
cmp
ret
mov
sbbl
jnp
mov
pusha
out
repnz
pop
adc
inc
insl
or
es
xchg
jle
sub
icebp
pop
cmp
bound
push
push
push
xchg
dec
and
xchg
paddusb
xchg
arpl
lahf
push
and
xchg
push
pusha
loop
ds
in
lea
and
mov
cmp
psrld
fdiv
or
mov
and
inc
jmp
push
pop
pop
cli
xchg
inc
inc
push
adc
jl
mov
pop
outsb
push
xchg
push
jno
lea
pop
ret
cmp
mov
out
cmc
adc
xor
sub
jae
push
in
xchg
dec
pop
mov
xor
icebp
es
sahf
dec
jmp
repz
jno
stos
aad
popl
adc
push
pop
lock
push
loopne
sarl
push
mov
std
loopne
lods
fcomps
jge
in
or
iret
test
add
sti
imul
out
xchg
cmp
loope
int3
jp
mov
mov
popf
inc
popf
daa
lcall
lods
mov
insl
loopne
test
aas
pop
mov
mov
cmp
xor
test
leave
mov
pop
shrb
rorb
ficomps
jg
lahf
scas
mov
inc
aas
inc
push
sub
lds
je
addr16
add
in
inc
xchg
movsb
fidivrl
insl
push
ret
sbb
imul
xor
stc
in
in
xchg
repnz
leave
cmp
cwtl
insl
jecxz
outsl
add
out
cmc
enter
in
pop
mov
mov
fildl
sbb
cld
cmp
rcr
push
popf
cld
mov
aas
pop
cmpsl
lods
push
aas
push
push
imul
testl
sbb
sub
std
push
ffree
imul
jmp
stc
pop
pop
shll
pusha
dec
cmp
leave
jge
movsb
cmp
jmp
sahf
addr16
std
add
push
test
in
imul
mov
mov
cltd
dec
xor
xchg
dec
sub
sbb
or
pop
sub
mov
pop
pop
mov
iret
xchg
cs
enter
xor
rcrb
inc
add
fnstsw
dec
mov
stos
xor
xchg
popf
mov
cltd
mov
push
movsb
jne
mov
or
addr16
into
pop
in
pushf
movb
cmp
adcl
push
or
fsubrl
inc
outsb
xabort
popf
mov
cmp
add
data16
mov
pop
adc
pop
lods
in
lods
stos
mov
sub
jo
js
rorl
aad
sub
fnstsw
mov
mov
fidivs
pop
loope
iret
test
enter
jne
fidivl
in
lods
inc
es
cld
in
mov
push
mov
fdivp
ljmp
ds
pop
jmp
adc
mov
dec
add
cld
jecxz
and
ja
mov
movsb
push
mov
pop
nop
xor
pop
jns
ror
mov
testb
rorb
loop
ret
rcrb
cmpsl
sbb
dec
mov
psubsb
xor
cld
xor
push
in
aam
cwtl
daa
fbld
movsb
dec
inc
mov
jmp
or
ss
mov
pop
pusha
pop
push
test
adc
jg
lock
arpl
xchg
jp
pop
jl
stos
inc
xor
xor
mov
sbb
shll
jecxz
xchg
and
adc
call
cltd
aaa
mov
and
popf
lcall
test
shrb
aas
ja
mov
pop
adc
sbb
or
mov
dec
inc
aad
pop
mov
scas
jle
cs
cmp
enter
out
sub
lret
jge
cli
cli
call
push
lahf
xlat
sub
std
push
or
and
sub
roll
pop
jno
and
push
dec
xchg
add
sahf
les
loop
pop
sahf
mov
outsl
cmpsb
jmp
pop
jo
sub
sbb
shrl
push
sub
outsl
into
subl
out
push
in
int
xor
inc
cwtl
pop
mov
nop
data16
jge
mov
sub
insb
inc
in
and
pop
test
mov
mov
stos
push
mov
movsl
xorl
repz
cmp
mov
pop
imul
and
cwtl
dec
rcl
jmp
mov
imul
push
inc
push
les
push
jbe
into
push
dec
fdivrl
adc
inc
jmp
aam
ud2
add
cli
aad
mov
sti
rcrb
clc
pop
xchg
ss
jmp
pop
push
jnp
ucomiss
jnp
mov
add
aaa
fs
adc
dec
xorl
nop
loop
jnp
cmpsl
push
and
mov
push
cmpsl
dec
dec
cmp
in
or
aam
mov
shll
or
es
sar
imul
xor
enter
out
sbb
loop
int3
shrl
xor
pusha
popf
or
adc
sub
shlb
jae
jae
sub
inc
notb
jge
cwtl
xor
and
mov
cld
inc
and
fidivs
in
nop
jg
adc
fnstenv
shrl
and
mov
pop
in
mov
fcmovbe
out
or
cs
jns
lods
ljmp
inc
adc
aad
clc
xor
fbld
jne
sub
out
and
stos
dec
xchg
lret
push
xchg
lcall
mov
orb
sbb
xchg
sti
loope
push
pop
xor
push
jl
lret
or
xlat
test
jns
rcrb
popa
or
mov
mov
xor
out
and
mov
mov
adc
ss
data16
xchg
mov
push
mov
inc
push
pop
sbb
mov
inc
cmc
daa
push
in
ss
aad
pop
je
lds
ret
inc
gs
mov
pop
shl
lock
xchg
cmp
sysenter
andb
data16
insb
adc
xchg
cmp
cmp
insl
dec
cli
sbb
int
testb
inc
pop
lret
add
popa
mov
sahf
mov
xchg
cs
push
cmp
ss
or
sub
mov
adc
jo
mov
xor
mov
adcb
jl
lahf
leave
roll
inc
or
imul
or
cmpsb
lds
push
xchg
mov
or
insb
cltd
and
in
popa
adc
aaa
sub
sbb
test
and
adc
push
mov
xor
std
bound
adc
xor
inc
jg
mov
cmp
xchg
cmc
push
mov
out
jnp
xor
lods
add
call
mov
scas
fisubl
rcrl
sahf
xor
and
sub
mov
or
pop
cmp
std
pop
fiadds
sahf
xor
jl
push
mov
dec
adc
cmp
inc
or
or
sbb
inc
push
xchg
pop
push
aam
in
shrb
movsl
insb
sbb
sbb
movb
and
cmp
mov
out
dec
daa
aaa
add
subb
fildl
stos
inc
aad
inc
pusha
je
stos
ficompl
and
sub
aas
fisttps
and
shll
dec
xor
cmc
lahf
xchg
xchg
xchg
mov
dec
xor
popf
in
dec
arpl
out
push
xchg
sbb
jne
mov
pop
mov
adc
pop
loope
or
xchg
popa
push
jp
cwtl
mov
fwait
bnd
movsb
adc
lods
or
testl
pusha
inc
subb
repz
jo
hlt
push
icebp
ljmp
pop
jl
imul
loop
sarl
jb
push
addl
test
jg
add
dec
sub
or
out
xor
dec
and
out
hlt
lret
jecxz
test
ljmp
pusha
mov
fisttpl
sarb
sub
mov
add
and
imul
mov
lret
in
push
cmc
bound
lods
enter
xchg
sub
popf
push
icebp
test
movsl
call
test
push
decb
clc
cmp
arpl
jecxz
jne
push
and
je
lds
outsb
push
mov
lock
out
out
lea
pop
sbb
jae
sbb
stc
mov
adc
jne
cmp
cmc
arpl
loopne
jg
mov
jnp
fs
pop
aas
shll
push
test
loop
sbb
imul
sub
jmp
enter
insb
or
ss
mov
in
and
bound
mull
and
inc
sbb
fwait
loop
or
hlt
inc
fisttpl
rcrb
xchg
push
out
hlt
cmp
cli
addr16
fwait
push
mov
push
in
and
jge
adc
bound
mov
test
jno,pn
xor
xor
sub
xchg
test
aaa
aad
fildll
add
testl
call
pop
and
jne
inc
xor
stc
loope
mov
push
int
inc
pop
stos
xchg
aas
dec
data16
mov
stos
add
jge
and
cmp
adc
jg
push
pop
dec
insb
cmp
cmc
icebp
lcall
loopne
ret
les
es
xor
jbe
xor
pusha
stos
lret
cmpsl
jecxz
mov
sbb
xchg
xlat
inc
sahf
mov
inc
pop
jge
push
jbe
mov
lods
inc
scas
mov
fstps
andl
mov
or
xchg
dec
pop
lcall
stc
stos
inc
fisubl
mov
stos
inc
ret
loop
repnz
inc
test
mov
idiv
pop
mov
mov
test
push
es
adc
orl
pushf
clc
mov
stos
sub
les
sbb
mov
fbld
ja
jge
lcall
jo
test
pop
aaa
inc
cli
mov
pop
fistl
scas
fwait
sbb
pop
push
ss
xchg
inc
repnz
xchg
xchg
jb
dec
popa
push
fcmove
lds
stc
pop
gs
shrl
adc
addr16
lods
adc
vpshab
push
mov
cltd
int
mov
mov
jle
xchg
stc
xor
leave
outsl
popf
push
or
push
addr16
test
cltd
xlat
and
ret
lods
mov
fwait
add
mov
ja
jle
movsl
sbb
jne
dec
mov
mov
jl
mov
push
rcrl
jns
mov
fstp
sbb
push
fstpl
or
adc
mov
mov
in
cmc
js
cmp
sarl
mov
and
lods
shlb
in
scas
sub
test
adc
jmp
sbb
pop
mull
in
pop
rolb
aas
cmp
jae
push
loope
fwait
clc
lea
sub
in
sub
jmp
pop
rcll
push
inc
mov
imul
sub
or
mov
cmp
cmpsb
add
mov
pop
push
into
mov
ret
lods
cmp
je
lret
hlt
cwtl
push
pop
cmp
cltd
cs
out
subl
jp
fwait
pop
out
gs
std
out
cs
popf
mov
jb
push
jns
cwtl
insb
push
out
push
cmp
aam
nop
out
imul
lock
jb
xlat
nop
out
sub
sub
int
dec
xor
mov
push
xchg
add
xor
std
mov
add
ljmp
in
inc
insl
xor
icebp
xlat
shlb
mov
std
mov
hlt
cmp
or
lea
add
out
mov
mov
sbb
es
gs
sub
stc
pop
aad
cmp
rorb
mov
mov
mov
push
adc
shl
cld
adc
pop
repnz
cmp
dec
push
pop
xchg
dec
repnz
lds
pop
mov
mov
xchg
arpl
pusha
cmp
xchg
leave
push
imul
lret
leave
inc
cltd
add
or
jmp
aad
push
js
push
test
mov
and
and
add
fisttpl
ja
pop
xchg
sub
test
sahf
jb
insl
fwait
push
sbb
fimuls
mov
cmc
shrb
push
pop
adc
sbb
push
and
aam
xlat
mov
js
add
pushf
and
dec
aam
cmp
hlt
inc
jecxz
test
sbb
loope
movsl
addr16
hlt
insb
sbb
cmp
push
mov
lcall
orb
out
inc
test
sub
push
pushf
les
lds
mov
lods
out
jnp
shrb
and
lahf
push
loopne
cltd
bound
sbb
sbb
mov
cmp
loop
repnz
ja
fstps
push
xorl
mov
insl
or
lret
push
sbb
mov
dec
ret
fldl
pop
dec
dec
fsubs
imul
jae
sbb
jae
cmp
xchg
subb
xor
mov
mov
cmp
lahf
xchg
inc
xor
dec
dec
and
outsb
mov
mov
rcll
mov
inc
fldcw
inc
jae
mov
les
mov
mov
dec
aam
mov
and
push
lods
and
gs
ljmp
out
push
add
adc
adc
arpl
sarl
mov
psubusb
sub
mov
ja
sbb
out
mov
mov
rcrb
orl
push
pop
xchg
bound
push
sbb
lds
fildll
inc
inc
loop
add
lret
es
mov
punpckhwd
xor
push
movl
and
mov
xlat
and
sbbb
push
add
out
jns
sahf
popa
dec
shlb
fcmovnu
and
jne
xchg
ss
pop
jecxz
xchg
add
outsb
mov
xchg
dec
pop
jae
clc
sub
inc
inc
cmp
xlat
jg
adc
xchg
mov
aaa
mov
mov
or
sbb
int
aam
fabs
pop
mov
mov
add
pop
mov
mov
mov
lahf
faddl
adc
arpl
adc
mov
iret
jnp
inc
cmp
scas
repnz
mov
and
adc
push
xor
cs
add
push
and
and
iret
aaa
sub
insb
test
sbb
mov
inc
pop
test
fs
inc
fsts
lds
sbb
xchg
xor
lea
adc
jnp
sbb
insl
mov
mov
pop
pop
fisubl
mov
ljmp
mov
in
pop
ret
retw
cmpb
icebp
xchg
sub
je
mov
sub
bound
in
sbb
adc
and
mov
pusha
jnp
xchg
rcrl
icebp
fsubp
cmpsb
push
xor
negl
cs
push
lds
fidivrs
xor
sbb
mov
mov
sub
dec
fstps
xorb
jp
push
add
repnz
andl
int
movsl
ja
dec
mov
pusha
and
repnz
gs
arpl
dec
fdivr
mov
mov
fwait
shrb
dec
pushf
dec
movsl
hlt
sub
hlt
es
cld
push
jo
loope
cmp
cmp
lods
nop
cltd
inc
jmp
xchg
cs
into
mov
cmp
addr16
jbe
pushl
mov
mov
imul
jmp
cwtl
ret
pop
fwait
jnp
pushf
andb
cmp
mov
mov
aad
pushf
aaa
fildl
rclb
add
outsb
mov
sbb
shll
adc
or
jge
push
bound
push
jne
jno
xchg
aas
dec
xor
movsb
mov
popf
push
adc
or
sbb
xchg
cmc
popa
mov
addl
dec
out
jp
daa
inc
movsb
jnp
and
lret
mov
test
cwtl
mull
jmp
push
andb
mov
push
sub
mov
pop
and
adc
cld
inc
in
popf
divb
mov
std
inc
ficomps
iret
push
loopne
sbb
in
mov
ljmp
sbb
es
xlat
aam
inc
je
fwait
xchg
add
mov
dec
js
inc
mov
lret
inc
mov
inc
aaa
call
mov
aas
push
and
mov
test
sbb
push
aam
inc
adc
cmp
pop
dec
push
adc
push
lock
stos
hlt
and
sub
dec
mov
mov
out
cmc
cmp
push
mov
mov
leave
fs
sbb
sub
pop
pop
mov
pop
xchg
rep
mov
sbb
fcomp
mov
mov
inc
daa
cmp
push
or
scas
movsb
pop
int
shrb
sub
int3
popa
cmp
js
das
clc
stos
es
adc
push
mov
add
fldt
mov
cmp
outsl
jp
pushf
mov
andb
xchg
ds
push
es
mov
jo
mov
mov
xor
fs
rcrl
lock
int3
push
test
insl
adc
and
inc
iret
inc
mov
pop
jnp
lods
jmp
dec
sub
cmpsl
add
sub
mov
pop
pop
ljmp
xor
and
int
es
add
out
cmpsb
cmpsb
movsb
or
inc
jmp
or
into
pop
std
aaa
jmp
add
jo
insl
les
xor
sbbb
loop
fsubp
cmp
je
in
bound
jp
fiadds
leave
cs
xor
dec
iret
nop
lds
test
inc
dec
pop
pop
outsl
cld
sbb
outsb
icebp
fists
movsb
mov
push
int3
sub
jg
mov
jne
sub
dec
popf
stos
mov
mov
mov
dec
push
and
xor
add
leave
test
adc
pusha
loopne
xchg
shll
pop
jns
push
in
fs
imul
out
push
int
out
insl
fsubs
adc
mov
leave
mov
dec
sbb
push
cwtl
adc
pop
inc
and
push
test
mov
addb
std
subl
fs
mov
pop
jl
and
fildll
add
mov
and
fdiv
jo
xor
jmp
xor
jnp
mov
test
inc
xor
sub
iret
fld
cmp
addr16
fsubl
leave
mov
aam
hlt
out
repnz
xor
test
call
stos
gs
jle
push
aad
nop
mov
lret
sub
into
jecxz
fwait
mov
push
into
sub
shlb
mov
xchg
mov
dec
or
inc
sbb
loopne
sbb
mov
sub
leave
inc
repz
out
ds
sbb
shlb
adc
fs
mov
fidivl
insl
sbb
repnz
in
pop
in
xor
out
push
cmpsl
push
add
adc
cmp
mov
jl
mov
ret
cmpsb
fmuls
fdivs
scas
inc
xchg
scas
pop
jp
or
mov
data16
mov
inc
mov
jo
and
test
je
add
and
negl
je
cmp
add
mov
les
out
cmp
jle
in
insb
cmpsl
xchg
mov
incl
add
popf
outsb
dec
pop
lahf
mov
ret
clc
jp
mov
sbb
xor
adc
stos
mov
movsl
insl
cltd
lods
dec
cmpsb
pusha
mov
add
add
fstpt
and
add
jg
lea
lcall
mov
add
int3
adc
in
dec
mov
idivl
test
addl
dec
dec
in
je
movsb
mov
and
bound
not
jl
stos
cmp
iret
cmp
push
mov
je
inc
and
sarb
sub
jmp
leave
and
lcall
iret
sub
mov
scas
in
jo
xor
int3
mov
mov
call
mov
push
cmp
cmp
xchg
xorl
ds
popf
test
xchg
adc
jnp
pop
add
sub
sti
mov
fwait
addb
dec
shll
mov
jbe
pop
test
jmp
sbb
mov
adc
mov
outsl
insb
test
sbb
je
and
or
jnp
inc
push
fwait
dec
pop
dec
repnz
repz
stos
or
out
push
scas
mov
fldt
cmp
push
dec
push
testl
mov
aas
and
push
testl
mov
jge
adc
push
pop
rorb
jge
xor
xchg
aas
mov
sub
dec
pop
inc
leave
loop
mov
je
mov
test
aad
shll
sti
xchg
cld
mov
pop
mov
and
arpl
cmc
cmp
xor
lahf
out
mov
je
sbb
lcall
and
ds
xorl
adc
mov
in
adc
rcrl
stos
sbb
into
dec
sub
jnp
in
dec
leave
push
mov
mov
jae
jno
in
cmpsl
push
test
pinsrw
inc
jge
mov
jle
inc
adc
out
lahf
xchg
dec
jno
and
pusha
or
out
mov
mov
push
mov
ljmp
test
or
xor
xor
xor
bound
push
and
push
aaa
iret
es
xchg
test
cmc
mov
or
adc
inc
outsb
pop
cli
jmp
gs
insl
int
aaa
shlb
or
shll
xor
pop
xchg
enter
cmp
sahf
sbb
cmp
inc
aad
cwtl
add
xchg
jb
pop
dec
push
cmc
xchg
sbb
mov
pusha
mov
sub
aas
mov
push
leave
xchg
lods
sbbb
push
and
xor
xchg
syscall
shl
aas
repz
lds
mov
sub
xchg
mov
arpl
or
push
add
addr16
cs
ss
inc
enter
jle
pop
lahf
xchg
mov
aaa
cmp
cmp
jnp
sub
and
mov
dec
push
mov
pop
mov
movsl
mov
xor
and
les
dec
lock
in
pop
add
sub
mov
in
popa
clc
adc
jle
and
xchg
and
mov
jle
test
mov
cltd
mov
shlb
int3
repz
sub
inc
xchg
push
push
imul
jp
mov
and
xchg
movsb
loop
jb
pusha
pusha
ljmp
xchg
xor
cs
mov
nop
imul
mov
es
jnp
or
inc
lcall
push
cld
mov
enter
sbb
and
xor
dec
ja
jbe
lds
repz
add
test
cmp
jp
mov
inc
pop
and
xchg
adc
fcmovbe
jg
xor
xor
add
out
inc
gs
jg
sbb
xchg
add
test
leave
jmp
sub
sub
xchg
xor
sbb
enter
pusha
scas
mov
xlat
sbb
cmp
lea
add
jbe
xchg
xchg
jno
lds
adc
mov
stos
sub
cmpsl
int
icebp
fldenv
outsl
cwtl
dec
lock
mov
mov
push
ss
in
mov
adc
lods
clc
out
pushf
mov
fimuls
gs
test
ficoms
mov
or
stos
inc
scas
adc
jp
dec
shrl
stos
mov
adc
andl
lret
xor
push
insl
adc
bound
ja
stc
xchg
push
cmp
sub
cli
push
outsb
and
sub
xor
push
fs
imul
inc
aam
adc
push
cs
jmp
je
mov
jbe
mov
xchg
push
xchg
or
lahf
pushf
scas
adc
lahf
xchg
jecxz
stc
test
test
adc
dec
pop
mov
fstps
loope
scas
and
xchg
scas
mov
push
jl
xchg
cmp
or
repz
cld
leave
nop
add
mov
sbb
loope
xor
ja
jno
xor
xor
lret
mov
sub
mov
in
repz
jbe
in
jle
dec
sbb
xor
dec
push
push
push
cmpsl
popf
mov
cld
xor
loop
jmp
sub
ret
push
dec
and
xchg
or
bswap
test
fs
sarb
jg
ret
dec
cmp
pop
push
rorb
mov
pop
sub
lea
pop
test
xchg
repnz
hlt
stc
xchg
adc
push
cmp
push
dec
data16
push
and
addr16
cs
repz
outsb
or
xchg
lret
mov
mov
and
cmpb
sub
jecxz
int3
jo
es
jno
jnp
inc
push
jg
adcb
icebp
cmpsl
loope
xchg
jmp
aas
lret
pop
pop
iret
bound
sub
mov
cs
int3
mov
push
fcoms
pushf
push
clc
repnz
jbe
mov
in
jb
pop
push
loop
push
cmpl
jmp
push
inc
add
loopne
sarb
out
out
add
imul
std
dec
and
push
xor
xor
jne
orb
js
jmp
jno
mov
shrl
iret
lds
cmp
adcl
aad
scas
push
mov
xor
ret
mov
repnz
fisttpl
stos
into
or
cmp
call
add
or
add
mov
daa
sahf
and
xor
mov
xchg
ss
push
cmpsl
rol
sub
sbb
sub
mov
push
loop
es
enter
inc
xchg
jg
outsb
shl
fwait
sub
hlt
sbb
int3
adc
test
push
lock
lods
and
jle
int
lret
cmc
push
divb
into
add
jo
pop
insl
aam
add
inc
outsb
cmp
rcr
jo
sub
jno
cltd
addr16
fmulp
and
imul
cmp
mov
movhps
cmpb
std
jbe
les
les
xor
xchg
cwtl
dec
adc
mov
orl
dec
jg
int
add
dec
sbb
jge
imul
xlat
test
mov
cltd
sbb
push
mov
mov
cmc
mov
nop
sbb
leave
test
and
cmpsl
inc
xchg
jmpw
and
xchg
or
enter
sub
sub
out
or
xchg
sbb
in
or
fdivl
cmpsl
jp
mov
jns
cmp
or
ror
inc
pop
jne
call
dec
mov
js
cmp
jne
lahf
lods
out
mov
sti
insl
inc
call
push
rol
andb
gs
imul
fwait
xor
clc
pop
adc
jmp
fs
push
xor
jl
xchg
mov
xchg
mov
inc
es
test
je
jecxz
inc
ljmp
jbe
mov
xor
mov
pop
xor
stos
sub
and
inc
shrb
hlt
fsts
aaa
mov
in
jmp
and
jnp
mov
or
aad
and
lret
xchg
pop
cmp
dec
push
adc
pop
lahf
push
addr16
xor
in
leave
adc
mov
cmpsb
bound
rcr
cmc
sub
pmuludq
inc
sub
je
cs
lcall
lea
dec
fucomi
js
divb
mov
dec
mov
pop
aaa
adc
aam
jb
adc
mov
stos
inc
and
sti
ja
inc
test
lret
or
mov
xor
hlt
int
pop
das
jo
ret
mov
cltd
stc
push
xchg
pop
adc
jns
mov
sbb
scas
je
mov
jge
rorl
sbb
movsl
popa
aas
xchg
mov
cmc
scas
inc
arpl
stos
ret
sub
fs
sbb
add
fbld
repz
dec
push
loop
clc
js
test
pop
xchg
fs
sub
sbb
cmc
adc
jae
push
fwait
xchg
jecxz
xchg
mov
inc
sub
lcall
sarb
insl
push
in
pop
cmpsb
dec
xor
inc
mov
das
js
cli
mov
ljmp
lods
inc
adc
jne
or
adc
mov
jp
add
xor
push
xchg
mov
divl
daa
sub
cmc
or
jle
loop
outsl
adc
sbb
pushf
shll
xorl
lret
adc
popa
jl
dec
repnz
out
add
sbb
das
popa
pop
insb
sub
dec
into
jl
je
sbb
mov
cs
mov
clc
cmc
mov
lods
je
mov
es
pop
or
cld
inc
push
jp
test
out
or
lods
mov
ja
mov
adc
add
rcrb
pop
xor
sbb
orb
pop
xchg
out
lea
cmp
lcall
push
add
insl
xor
fs
roll
std
cmp
mov
arpl
mov
or
js
pop
xor
cmp
movsb
adc
imul
sbb
pop
cmpsl
out
mov
insb
vpaddusb
adc
add
xchg
lea
pop
aam
pop
mov
popw
out
enter
adc
bound
dec
loopne
inc
push
inc
in
push
test
mov
aam
je
ljmp
cwtl
xchg
jne
gs
xor
daa
mov
inc
xchg
adc
int3
lahf
out
mov
push
add
mov
mov
mov
stos
sbb
or
dec
dec
pushf
gs
or
sub
adc
out
jp
pop
mov
push
mov
adc
pop
daa
scas
jge
push
or
jmp
mov
das
fistpl
mov
mov
cmp
xchg
mov
int
cli
jmp
fdiv
pop
xor
scas
test
jae
sbb
sbb
rorb
fbld
lods
faddl
divl
clc
test
aas
jge
fidivl
push
outsl
lahf
xlat
rorl
mov
and
into
dec
inc
dec
rcl
sub
in
pop
iret
inc
sahf
std
cld
dec
call
inc
aas
sbb
lret
sarb
lea
sub
add
jno
add
pop
inc
lods
add
test
jl
sbb
ret
les
out
imul
ja
mov
and
sbb
clc
mov
xchg
xor
xchg
xchg
es
sub
mov
arpl
jnp
test
push
lds
jmp
cmpsl
xchg
inc
clc
pop
in
xchg
lcall
jbe
sarb
sub
shll
jecxz
add
mov
das
lcall
orl
pop
jp
push
movsl
lahf
les
xor
cmpsl
jnp
cmpl
shrl
mov
pop
jecxz
ret
sbb
jns
cld
inc
push
jge
mov
sub
cmpb
pusha
data16
inc
pop
cld
or
sbb
inc
std
ja
push
xchg
adc
pop
mov
seta
mov
push
jmp
mov
aad
les
add
pop
mov
addr16
pop
inc
jno
pop
push
sub
sbb
clc
out
nop
loop
lahf
inc
fmull
imul
sbbb
xorl
sbb
lret
in
cmpsl
out
sub
mov
jo
jb
jle
pop
adc
aad
xchg
xor
es
rcrb
push
lea
and
push
out
dec
mov
aam
daa
lods
and
adc
shl
mov
insb
repnz
in
jno
hlt
aas
and
sbb
mov
mov
add
jns
fnsave
mov
jge,pt
pop
ss
xchg
xor
cmpsb
mov
push
pop
stos
add
push
mov
cltd
mov
outsb
out
dec
mov
arpl
popa
pop
loope
jp
inc
ja
sub
aad
xchg
jne
mov
push
lcall
jns
popa
sub
mov
out
sti
cmp
lods
cmp
repz
out
pusha
mov
sbb
mov
lock
pusha
shrl
jb
ja
lods
cmpsl
in
fdivp
sbb
cli
das
or
mov
out
fwait
stc
iret
loopne
das
stos
add
ror
and
sbb
cmpsb
jne
fimull
ret
test
popf
sbb
jb
xlat
dec
xor
dec
mov
jge
sub
add
sar
iret
in
test
jbe
lods
je
add
dec
imul
inc
jo
gs
rcrl
mov
icebp
xchg
sti
jb
mov
cld
pusha
fldenv
mov
and
cs
or
pop
outsl
in
sbb
js
pushf
insl
shld
pusha
cmp
or
scas
mov
mov
test
pusha
sbb
fidivs
xchg
lods
push
push
mov
popf
sbb
out
jae
xchg
dec
adcl
subl
imul
mov
sti
and
cmpsb
inc
loop
jle
xor
mov
add
pop
sub
dec
test
aaa
loop
mov
int3
stc
sub
js
cmpb
push
dec
xchg
xchg
mov
push
sbb
test
sti
sbb
mov
lea
aam
jg
aas
push
xchg
xchg
dec
mov
rcll
xchg
outsl
gs
mov
jle
jecxz
add
adc
icebp
push
sahf
sti
adc
mov
ficoml
jo
sbb
sub
ret
bswap
jae
lods
push
pop
xor
clc
pusha
sbb
push
dec
cmp
inc
adc
or
fnstsw
test
dec
push
pop
jl
out
dec
xor
std
je
stos
mov
add
push
sahf
je
mov
call
pop
push
ja
jo
inc
repnz
shl
inc
dec
sarl
xor
pushf
sub
cmp
and
jl
pop
xchg
pop
in
imul
dec
or
mov
cmp
leave
sub
lods
in
pop
js
and
xchg
mov
movsl
xchg
jmp
daa
push
mov
ficomps
add
mov
popf
stos
aaa
lods
arpl
and
cld
sbb
pushl
nop
inc
or
pushf
jmp
push
insb
inc
jp
or
imul
leave
fistl
stc
imul
int3
and
jae
sub
into
leave
hlt
addl
xchg
ss
cmp
push
fisubrs
out
or
cld
leave
xor
imul
mov
popf
mov
mov
addr16
or
mov
mov
adc
mov
es
dec
adc
je
subl
mov
lret
imul
mov
ffree
xchg
xchg
les
mov
ss
or
clc
jmp
mov
jecxz
cld
jae
push
sub
insl
mov
xor
and
lock
cwtl
mov
sub
lahf
lock
push
cmp
test
pop
sub
mov
pop
push
or
mov
and
insb
mov
andl
inc
jb
div
mov
jo
test
dec
ret
imul
es
pop
mov
cmpsl
pop
outsl
outsl
inc
xor
js
sub
cmpsl
fbld
xlat
movsb
lahf
icebp
shrl
inc
cld
orb
mov
sub
jecxz
xor
push
loop
inc
loop
cltd
movsb
lahf
test
push
sti
daa
jo
dec
in
inc
sbb
int
or
and
pop
sarl
mov
out
lods
dec
hlt
and
mov
cmc
or
xchg
fildl
jo
loope
cmpsb
rorl
lcall
xrelease
cld
hlt
mov
xor
leave
out
push
loopne
dec
imul
sbb
xchg
sub
ffree
cli
adc
subb
cmp
daa
dec
mov
shlb
int
jle
dec
sbb
ja
sahf
pop
out
mov
je
dec
loopne
sbb
mov
dec
push
dec
mov
fiaddl
out
stc
sahf
xchg
lock
sub
and
not
arpl
pop
mov
repnz
test
stos
jle
inc
push
lret
xor
iret
pop
stc
pop
mov
int3
mov
pushf
pop
movsb
test
inc
cmp
xchg
ret
pop
sub
stc
cld
sub
push
mov
rcl
mov
push
or
popa
xchg
sbb
scas
inc
decl
lcall
jb
xchg
xchg
outsl
sbb
jg
repz
fwait
mov
out
out
sbb
adc
fwait
out
lcall
jne
push
inc
jne
testl
test
jb
lea
pop
cmc
aaa
fmulp
jle
xchg
jb
or
popf
add
sub
imul
repnz
fwait
fbstp
mov
bound
xor
push
fs
aam
lock
data16
pop
rorl
les
cmp
sub
mov
fwait
loop
inc
dec
push
iret
daa
sbb
lret
std
pop
cmp
sub
mov
mov
nop
pop
scas
adc
clc
repz
dec
push
and
bound
adc
inc
dec
add
loop
test
cmp
iret
cmpsl
pusha
sub
movsl
add
inc
je
pusha
dec
lret
js
rorb
sbbb
sbb
test
rcrl
jmp
cs
cmp
add
sub
inc
in
sbb
add
sbb
testb
xchg
or
inc
jecxz
adc
jg
sbb
push
mov
cld
jne
mov
xor
mov
inc
js
fwait
push
mov
add
jno
mov
in
sub
xor
lahf
mov
jecxz
repz
lret
jle
or
testb
test
jg
mov
inc
push
lcall
pop
inc
fwait
pop
inc
sub
or
pop
fstpl
jmp
lock
int
jp
int
sbb
push
rcll
fdivr
adc
out
mov
push
stos
dec
mov
aas
mov
popf
dec
repnz
movsl
add
loope
or
subb
mov
hlt
lret
popf
ds
cmc
je
adc
push
and
fsts
dec
loop
or
xor
push
ret
mov
dec
pushf
rclb
cmp
jbe,pn
lahf
aaa
xchg
int3
sti
sbb
cmp
sub
mov
leave
nop
test
adc
cmc
pushf
mov
inc
jmp
add
decl
ret
jg
gs
or
aaa
outsl
mov
ret
movsb
sbb
popf
ret
pop
inc
and
sub
push
xor
fwait
lcall
inc
test
jmp
scas
xchg
test
lahf
lcall
pop
jb
and
add
and
jbe
mov
xor
lea
loope
ja
sti
xchg
xchg
push
cli
cmp
ds
xchg
xchg
cmpl
sbb
mov
popa
ret
cmc
mov
outsb
shrl
cmpsl
sbb
mov
pop
jbe
lret
cli
incb
cmc
push
inc
das
bound
cmpsb
xchg
jmp
cs
dec
imul
push
ret
dec
or
fs
xchg
dec
jecxz
xchg
aam
lock
jp
add
mov
and
xchg
mull
or
add
out
imul
sbb
push
adc
cmp
inc
lea
pop
stos
stos
lea
dec
cmp
jp
in
jl
inc
mov
mov
test
std
lret
add
int3
mov
dec
xchg
jmp
xor
test
movsb
xchg
xor
sbb
mov
cmpb
xchg
rcl
jae
push
add
inc
test
mov
add
dec
jl
enter
fisubrs
mov
inc
jl
pop
dec
insl
dec
and
inc
mov
xchg
sbb
adc
or
mov
and
nop
int3
and
lods
xchg
inc
mov
xlat
jl
pop
addr16
lea
lds
xchg
sub
or
add
cmp
xor
in
xchg
lock
movsl
fidivrs
mov
and
imull
test
std
and
lret
mov
fldl
mov
daa
aad
cmp
mov
stc
pop
add
cltd
test
lods
mov
aam
add
les
idivl
popa
mov
mov
or
addr16
dec
shl
dec
pop
adc
vmwrite
push
mov
test
inc
imul
int
lock
daa
sbb
aam
data16
inc
or
lods
shrb
call
lods
adc
mov
lods
scas
inc
sarl
adc
outsl
inc
loop
ja
mov
call
in
subb
sbb
popa
sbbl
rolb
and
mov
pop
xchg
gs
mov
cmpsl
imul
je
push
inc
push
jne
insb
adc
sub
xchg
and
and
bswap
repnz
std
push
out
push
mov
cwtl
jns
or
push
in
add
and
fs
movb
cmp
jne
jne
dec
fnstsw
add
push
out
mov
jb
js
les
mov
loopne
add
loop
jge
daa
ds
std
mov
mov
jge
jp
cs
scas
stos
adc
out
xor
dec
stos
jns
mov
adc
dec
fistpl
in
inc
aam
lock
sub
test
inc
pusha
je
or
fmull
dec
shll
push
inc
gs
loope
or
sahf
mov
pop
dec
xchg
sbb
icebp
mov
xchg
add
shrb
loop
inc
test
shl
push
jecxz
imul
xchg
and
lods
std
push
lret
jg
sbb
test
repnz
insb
inc
lock
aaa
repnz
ja
xor
fs
popa
xor
add
mov
adc
or
sub
adc
jecxz
test
mov
mov
loop
or
dec
mov
cmc
cmp
mov
pop
pop
xor
test
xchg
lret
xchg
fadds
and
faddp
inc
int3
aam
jnp
mov
popa
push
cld
inc
pop
cs
cmpsl
inc
mov
or
in
push
push
jge
icebp
sub
mov
mov
mov
ss
mov
ss
push
sahf
aad
dec
mov
stos
pop
mov
js
testl
jb
jmp
popf
shrb
in
ret
cmc
mov
js
sbb
add
pop
xchg
ss
sub
dec
in
pop
shll
add
enter
test
or
mov
xchg
fmulp
das
movl
push
push
inc
adc
shr
jnp
push
mov
ds
dec
mov
sti
lahf
rorl
mov
pop
ret
mov
cmp
rclb
bswap
pop
daa
or
or
lret
outsl
add
mov
and
lods
ss
fldenv
add
int3
cmp
das
fsts
arpl
mov
cmp
enter
push
fidivs
inc
in
dec
les
mov
ljmp
xor
mov
xor
mov
cwtl
imul
add
lcall
pusha
jae,pn
mov
in
int
cmp
int
lcall
loopne
inc
dec
in
sbb
mov
stc
rorb
mov
inc
push
cmp
xchg
bnd
xor
add
mov
and
pop
cmc
jo
dec
incl
nop
xchg
adc
pusha
xor
lea
lods
das
ljmp
mov
jge
ss
cmpb
arpl
xchg
xchg
mov
push
es
or
ss
iret
movsl
add
add
popa
sub
pop
aas
add
dec
dec
pushf
mov
or
out
loopne
in
lret
adc
arpl
pop
xchg
sarl
into
ret
cmp
lea
and
mov
sub
add
rorl
jge
inc
add
repz
cli
out
dec
daa
addr16
mov
pop
pusha
pop
imul
daa
gs
mov
leave
stos
jbe
jo
imul
and
or
enter
fldt
dec
pop
push
push
gs
mov
add
aaa
int
cmp
push
das
dec
xchg
inc
xor
out
rorl
lahf
pushf
push
cmp
sub
push
pop
mov
pop
lds
sbb
sub
popa
mov
stos
int3
mov
push
xchg
jns
out
adc
sub
in
frstor
addr16
enter
mov
popf
leave
pop
negl
adc
lea
andb
xor
cmp
sub
stos
push
jnp
sub
mov
mov
lods
mov
pop
mov
cmpsl
dec
mov
jno
fnsave
int3
mov
add
mov
cmp
or
mov
sub
mov
js
int
xchg
pop
push
xor
sub
adc
fld
loop
div
xor
out
insb
nop
test
inc
scas
fs
sti
out
jb
loop
shll
or
shrl
pop
decb
ret
xor
pop
push
and
xor
int3
dec
call
xor
push
inc
jmp
push
jns
pop
inc
icebp
lock
ds
push
bound
loopne
repnz
negb
shr
daa
movsl
push
xchg
scas
pop
jnp
mov
add
sub
xor
loope
hlt
mov
fsubs
push
xchg
pop
xchg
adc
adc
loopne
sbb
mov
insb
jno
mov
in
inc
add
lret
fldcw
andl
sahf
scas
and
lock
cmp
pop
adc
mov
ds
mov
das
fs
test
pop
loope
js
pop
push
lahf
jmp
or
cmc
cmc
fidivs
bound
loope
or
sub
and
int
gs
call
in
xchg
cmp
mov
shl
xchg
and
sbb
add
mov
into
hlt
inc
xor
push
pushf
inc
push
ficompl
and
xlat
gs
cltd
xor
or
sbbb
int
fstpt
aad
test
mov
mov
add
push
and
in
in
jmp
orb
push
aaa
hlt
sbb
add
mov
adc
fcmovne
addr16
imul
jecxz
pop
emms
in
jb
std
add
push
xchg
aam
mov
push
mov
pushf
adc
cmc
push
ror
outsb
sub
jmp
popa
outsb
bound
push
int
add
iret
test
gs
cmp
dec
dec
jle
mov
or
imul
outsl
insb
je
gs
fcoml
dec
xchg
lods
inc
cmc
movsl
cmp
and
icebp
andb
clc
sub
in
gs
aam
fldcw
cmpsb
jae
lret
je
das
mov
les
push
nop
push
pusha
lock
rcr
out
push
out
fiadds
fstl
dec
mov
cmp
std
shll
mov
pop
ss
push
inc
inc
fwait
sahf
adc
jl
jmp
cwtl
je
mov
jl
sbb
mov
std
andb
jae
mov
xor
push
f2xm1
dec
jg
shrb
push
or
addr16
hlt
dec
xor
repz
mov
dec
notl
roll
push
add
out
push
stc
cmp
andl
push
mov
arpl
test
or
dec
icebp
mov
imul
mov
addr16
add
jp
xchg
addr16
and
dec
xchg
mov
rep
adc
pushf
rcl
xor
shll
sub
mov
lret
inc
cmp
and
sbb
sub
imul
ljmp
mov
mov
test
cmc
stos
xchg
out
in
xlat
clc
into
xchg
aam
pop
lds
jne
lods
test
jnp
xchg
sub
popa
or
sar
gs
mov
adc
enter
dec
andb
cwtl
sub
sbb
jnp
xchg
shlb
sub
pop
cmp
out
mov
sub
or
std
sub
fisubl
mov
inc
mov
fwait
sub
testl
mov
and
mov
sub
les
js
aaa
sti
pop
adc
xchg
jl
push
test
jo
cwtl
xor
or
push
mov
mov
lods
cld
inc
popa
cmc
dec
adc
int
fdivr
cmp
jg
shrl
clc
cltd
push
ja
and
mov
and
rclb
fwait
push
je
mov
jmp
popf
sahf
repz
ljmp
ljmp
outsb
adc
mov
xchg
sbb
or
out
jns
insl
dec
aaa
cmc
adc
icebp
sub
cmc
int
cmp
xor
stc
dec
push
popa
sahf
pop
cli
hlt
mov
stos
adc
hlt
lcall
sbb
add
dec
idivl
dec
daa
addr16
les
mov
popf
jne
sbb
les
push
sub
cmpl
or
and
mov
lods
adc
mov
les
or
xchg
pop
in
mov
pop
test
sub
push
mov
cmp
cmpsl
inc
xchg
sub
jb
iret
daa
mov
or
push
inc
outsb
das
add
cli
out
fsts
cmp
push
xor
call
push
nop
mov
mov
les
xchg
in
push
stos
push
pop
jb
jl
cmp
jbe
mov
pop
icebp
mov
push
push
xor
mov
popf
lret
push
scas
rcll
je
loop
adc
into
repz
aam
loope
movsl
pop
ljmp
add
arpl
xchg
lret
mov
stos
rorl
loop
inc
lret
icebp
cmp
adc
cmc
stos
addr16
add
ficoms
push
and
orl
stos
sarb
ret
jmp
fdiv
rcr
and
sub
jo
loopne
push
movsl
stos
sbb
cmp
addr16
mov
pop
jmp
stc
in
sub
sbb
rorl
cli
cmp
inc
loop
mov
icebp
js
or
xchg
adc
je
sub
inc
out
and
dec
ljmp
cmp
jmp
mov
leave
addr16
lret
jg
lahf
push
jmp
xchg
pop
and
lock
add
jp
fwait
inc
sar
scas
inc
cmp
jp
xchg
ret
adc
and
gs
add
mov
and
mov
rolb
push
mov
lret
cltd
fstpl
and
ljmp
mov
pop
inc
push
push
sub
cmp
int
decb
mov
or
js
incb
jle
mov
sub
inc
xchg
mov
mov
std
mov
enter
inc
rcr
cld
pop
mov
xor
sahf
lret
jae
dec
add
aas
jns
xor
dec
mov
and
push
adc
sub
imul
arpl
inc
push
jl
mov
mov
jp
push
fs
adc
mov
jg
mov
jle
inc
inc
test
testb
inc
and
fcomip
lret
pop
sub
lahf
jnp
fildl
adc
dec
pop
push
bound
insl
inc
dec
iret
xchg
decl
cltd
adc
jg
roll
jl
cmp
movsb
out
xchg
inc
imul
test
ret
sarl
popf
sbb
call
in
mov
ljmp
out
popf
jns
out
fsubl
and
flds
lret
fnstcw
int3
add
mov
adc
jecxz
enter
pop
sahf
cmp
bound
pop
pop
mov
and
ret
inc
addr16
and
dec
pop
mov
stc
fs
add
call
bound
filds
adc
lret
sub
adc
mov
sub
not
inc
push
xlat
popa
push
shlb
ja
jno
bound
xor
imul
add
out
jns
daa
push
sbbb
lcall
ss
pop
jmp
call
stc
push
mov
dec
pop
lret
adc
add
lcall
call
cwtl
pop
mov
into
aam
jmp
addl
pop
ss
push
mov
sub
mov
fcoms
jl
or
stc
cmp
xor
xchg
imul
push
jle
cmp
imul
cmp
push
int3
push
loopne
lcall
add
test
add
adc
sarl
mov
test
mov
xchg
push
push
add
clc
popa
pop
test
cwtl
int3
loopne
int
xor
push
ja
push
adc
xor
add
sub
push
push
enter
xor
and
xor
push
gs
es
les
cmp
imull
scas
lret
out
in
xchg
ret
fisttps
sbb
lds
mov
jecxz
outsb
lods
mov
pop
fcoml
mov
mov
jne
bt
mov
pop
pop
mov
jmp
scas
pop
scas
repz
insb
movsl
in
xor
daa
sarl
test
cmpsb
sub
sbb
sbb
les
sbb
xchg
int3
add
shlb
jg
clc
mov
je
or
loop
mov
mov
mov
mov
push
mov
out
mov
hlt
and
insb
inc
decb
pop
test
cmpsb
inc
cmpsl
sbb
jo
icebp
les
mov
sbb
xchg
push
jmp
fildl
sub
push
sbb
outsb
stos
mov
or
adc
repnz
into
add
xor
imul
pextrw
mov
mov
in
int
sub
lret
in
jnp
sti
mov
lods
bound
repnz
sar
or
sarl
pop
pop
cmp
int3
insb
loopne
xor
mov
adc
and
push
pop
imul
add
aas
mov
int3
aam
shlb
mov
xchg
xor
negb
adc
les
inc
add
xchg
nop
mov
push
das
int3
popa
rcr
sti
scas
and
scas
out
jno
dec
inc
xchg
mov
dec
jb
ss
jmp
jp
pop
mov
mov
mov
iret
popa
cmp
test
and
lock
pop
sub
out
loopne
mov
inc
imul
pushf
incb
sbb
lock
std
cwtl
outsl
jl
aam
cmp
fwait
fnstcw
in
push
sub
lahf
pop
xchg
lcall
pusha
fnstenv
gs
pop
pop
pop
test
fistpl
dec
pusha
sti
int
ss
sahf
jno
add
xchg
imul
fwait
adc
int3
pop
jae
clc
mov
outsb
jno
jo
sbb
gs
stos
mov
ds
lahf
pop
mov
pop
push
test
xor
dec
int3
cmc
into
mov
xchg
mov
icebp
mov
push
sub
fnstsw
mov
imul
or
clc
xchg
cmpsl
imull
pop
xchg
mov
or
inc
jmp
jns
mov
repnz
sbb
stos
and
mov
sar
xchg
cmp
lods
cmp
mov
sub
fidivl
jl
shll
stc
aad
xor
sbb
mov
inc
clc
leave
outsb
dec
insl
inc
xchg
xchg
aaa
adc
add
push
sbb
pop
push
jl
jb
lds
and
dec
mov
mov
xchg
sub
mov
aas
pushf
sub
int
push
inc
cmp
mov
fldenv
add
pop
test
jnp
pop
insb
inc
mov
ss
mov
xchg
test
out
aaa
mov
fs
inc
dec
add
in
or
jecxz
jbe
cltd
push
cld
cld
dec
test
pop
xchg
scas
in
mov
je
stos
gs
test
lret
int
sbb
add
test
stc
sar
adc
aas
addl
push
lret
pop
int
inc
push
fdivrl
adc
cmpb
scas
lcall
dec
loop
pusha
jae
and
push
js
jae
inc
jns
leave
jg
outsl
xchg
mov
add
mov
es
loopne
daa
xchg
incl
les
loope
inc
mov
pop
fwait
xchg
outsb
dec
mov
fistl
jecxz
sbb
inc
movl
cmpsb
cmc
scas
cwtl
cld
jb
das
call
mov
rep
popa
pop
mov
mov
mov
cmpl
adc
cmp
xor
aad
mov
xchg
sub
fdivrs
bound
stos
pop
nop
mov
les
scas
inc
lahf
ret
xchg
xor
jb
enter
pop
nop
shll
lahf
fldt
pop
pop
lcall
pop
cmpsb
xor
xchg
lret
imul
test
or
adc
nopl
test
leave
fneni(8087
cmp
aaa
lret
adc
add
rcrl
add
dec
cli
xor
lret
test
pop
lock
ss
xor
and
das
push
rcrl
popf
out
jmp
dec
clc
lods
pop
testl
cli
mov
xor
jbe
jno
add
push
cmp
sbbb
push
andb
add
lock
repz
mov
cmp
sbb
movsl
fdivl
int
loopne
mull
outsb
repnz
mov
cmp
inc
pop
pop
icebp
sbb
mov
scas
clc
jnp
jb
mov
pop
sub
or
or
push
mov
outsb
jo
js
rcr
cli
push
cmpsl
int
fmull
cmp
rorb
xchg
mov
mov
mov
cmc
lds
in
adc
push
pop
cld
xor
imul
mov
jno
dec
jb
cld
pop
jge
xchg
sbb
sar
push
add
jmp
shr
inc
rorb
mov
cwtl
cmp
inc
scas
dec
mov
orl
jg
sub
fnstenv
loop
pop
jo
inc
rcrb
xchg
fldcw
sub
lods
scas
shrl
jo
fldenv
fcmovnb
aaa
push
call
jle
pop
outsl
dec
jnp
mov
mov
fnstsw
cmp
rcr
inc
push
jnp
popl
pusha
out
xchg
and
cltd
adc
incl
fs
sbb
outsl
or
adcl
in
mov
das
xor
adc
loope
cmpsb
mov
jge
push
push
movsb
sbb
jnp
ret
into
inc
sub
and
xor
or
inc
xchg
add
mov
hlt
pop
mov
pusha
fsubs
mov
add
imul
add
sub
push
ds
pop
and
xor
ffree
and
pop
rolb
das
loope
push
sub
pop
xchg
cmp
aad
mov
pushf
in
push
xchg
pushf
sub
jp
aaa
jae
add
idivl
xor
push
cmp
mov
inc
sub
outsl
stc
movb
nop
adc
push
sbb
pop
sbb
rorb
les
sbb
pop
insl
pusha
out
mov
push
pop
hlt
sbb
int
jns
xor
mov
adc
addr16
lcall
addr16
xor
cmp
cmp
mov
pop
inc
push
mov
jmp
mov
popw
pop
mov
fbld
mov
or
in
loope
pop
add
in
lea
adc
pop
mov
xchg
mov
outsb
push
mov
lds
dec
ret
push
adc
or
rcll
in
movsb
fnsave
add
bound
and
xchg
out
sbb
inc
std
out
fidivl
sbb
push
mov
jno
fcomip
mov
jp
sbb
nop
xchg
xchg
mov
scas
in
cmpsl
dec
idivb
int
cmp
mov
sti
sub
stc
sti
xor
inc
mov
cld
jno
push
xchg
mov
movsl
push
cwtl
xchg
add
sub
insl
adc
cld
xchg
mov
or
cld
scas
dec
push
cmpsb
mov
jg
out
pop
enter
mov
gs
out
add
pop
mov
sahf
leave
mov
and
repz
jmp
sub
lret
into
pop
adc
inc
inc
xor
popa
je
mov
push
xchg
jae
data16
pusha
popa
mov
xor
cmc
mov
lcall
out
cmp
int3
mov
lahf
push
scas
ds
fbld
cld
lods
mov
imul
in
test
insb
shlb
aas
mov
ret
dec
sub
cmp
xchg
bound
ss
xlat
pop
mov
push
mov
sarb
xor
dec
ljmp
push
sahf
loop
int
int3
jg
sbb
test
cmp
inc
mov
outsl
sub
ds
enter
jge
cmp
ds
les
push
inc
leave
jae
nop
les
xor
rorl
mov
data16
add
shll
loopne
enter
fisttpll
jmp
add
cmpsb
sub
das
scas
sbb
dec
mov
jnp
cld
dec
xor
cltd
and
push
std
in
and
lods
lods
pushf
in
lahf
insl
push
lock
call
test
or
jae
jns
jmp
stc
xchg
inc
mov
mov
or
out
data16
stos
pop
sbb
and
cmp
jp
jp
jno
cmp
mov
enter
pop
mov
aaa
das
fildll
jno
xor
mov
jo,pt
ror
or
in
sub
jae
loopne
xchg
lock
and
orl
fistl
std
mov
outsl
and
or
pop
pop
or
mov
add
push
ja
ljmp
pop
sahf
adc
out
adc
jno
push
call
sti
xchg
push
xlat
mov
mov
and
stos
lret
cmp
out
js
imul
sahf
add
jae
les
sub
xchg
negl
inc
cmp
cmc
js
outsl
les
call
mov
stos
pop
nop
mov
dec
inc
adc
push
mov
sbb
shll
fwait
movsl
push
or
add
pop
dec
inc
sti
push
lahf
je
cmp
enter
sbb
hlt
inc
adc
xchg
stos
mulb
lret
sbb
ds
divb
inc
lea
xchg
divl
aas
gs
scas
or
mov
sbb
dec
scas
test
push
push
mov
push
test
adc
stos
imul
repnz
mov
dec
pop
sahf
sub
sbb
jecxz
cmp
fwait
mov
test
push
popf
mov
fstps
popl
call
cmc
xor
dec
lds
sbb
push
or
es
xchg
adc
mov
shlb
mov
mov
cmp
outsb
dec
cld
fsubrl
pop
daa
int
mov
mov
std
leave
add
and
ds
cmp
lcall
and
ja
mov
jle
jb
push
aad
inc
mov
xor
sub
aam
nop
daa
dec
xchg
cmp
sub
and
pop
int3
mov
cmp
sarl
shr
fbstp
scas
or
lwpins
jle
js
push
push
inc
outsl
cs
add
aam
add
fmull
es
scas
lret
jnp
rcll
mov
inc
mov
cli
int3
jns
adc
xchg
aad
dec
bswap
pop
pop
mov
rorb
and
insl
sub
push
sbb
mov
mov
arpl
sti
and
ja
push
mov
aad
int3
mov
cmp
frstor
mov
in
lret
outsb
jo
or
push
outsb
or
stc
xor
or
pop
enter
imul
mov
cmp
faddl
mov
andl
popa
mov
and
dec
lock
dec
inc
addl
gs
sahf
inc
xchg
push
mov
inc
sub
push
xchg
ret
inc
push
add
adc
jecxz
fsubrp
mov
mov
xchg
mov
int3
xor
mov
inc
jle
fisubrs
cmpsb
cmp
xchg
fistpl
stos
xor
emms
pop
jecxz
fldenv
mov
xor
test
dec
push
dec
xchg
out
and
push
cld
dec
push
jb
adc
insb
lock
or
jmp
pop
sbb
add
pop
push
inc
pop
mov
jns
inc
jge
rorb
jb
xor
rcrl
addr16
je
pop
cld
cmp
popf
xor
adc
sahf
js
repz
fadd
stc
aam
sti
or
ja
mov
ret
ficoml
xchg
pop
cmp
mov
js
mov
push
lret
ds
mov
dec
jp
imul
bound
and
mov
mov
mov
out
xor
out
and
loop
popf
sbb
mov
xchg
jp
xorb
in
shlw
jl
mov
loopne
ret
add
cld
leave
xchg
push
clc
adc
add
add
push
add
repnz
frstor
xchg
in
mov
pop
mov
enter
adc
push
jb
mov
pop
pop
out
aas
sub
push
aaa
pop
sub
mov
adc
mov
outsl
sahf
pop
push
jg
rolb
jbe
mov
sbb
cs
inc
test
jbe
sub
daa
dec
mov
mov
push
popf
cld
mov
gs
mov
addr16
in
cmp
or
hlt
ss
cmc
add
jae
adc
rclb
mov
cmp
fs
sbb
clc
je
out
push
ret
pop
or
mov
movsl
sub
ds
cli
lods
cmp
dec
xchg
push
push
pop
aas
xor
fdivs
cltd
inc
int3
pop
mov
lea
inc
xor
inc
sar
mov
sub
stc
lds
and
scas
filds
mov
js
push
dec
push
sbb
sub
repnz
popa
aaa
insl
xcrypt-ctr
cmpsl
fisttpl
mov
pop
jb
adc
jecxz
sbb
inc
mov
int
sub
inc
jb
pmulhw
pusha
xlat
fldenv
xchg
xchg
push
pop
add
jbe
mov
jge
fiadds
mov
les
push
out
movsb
xchg
jecxz
xor
cmp
testb
movsb
xor
sbb
fldl
jae
or
jb
sub
dec
pusha
call
ja
lahf
dec
inc
add
test
notb
andb
sahf
push
pop
push
sub
mov
fstpl
push
sbb
ror
xlat
mov
sub
add
cmp
leave
mov
mov
stos
cmp
mov
dec
adc
xor
sbb
mov
add
or
mov
pusha
insb
js
bound
test
adc
pop
xchg
push
xchg
xchg
add
icebp
xchg
and
jnp
lock
fsubrp
and
or
dec
pop
jbe
cwtl
jp
std
test
sbb
repz
jl
cmp
test
cli
ja
push
adc
mov
dec
cmpsb
and
pop
adc
sbb
sbbb
jbe
adc
stc
xor
icebp
pop
loopne
outsl
scas
mov
adcb
int
lret
ficoml
push
xchg
sub
adc
jbe
in
mov
push
or
xchg
add
xchg
dec
inc
and
inc
xor
adc
icebp
shl
pop
dec
jge
stos
cmp
lea
xchg
add
insb
add
aam
daa
or
lret
call
jno
int3
stos
fwait
sar
sbb
aam
pushf
xor
movsl
das
dec
in
xchg
cmpsl
repnz
cmp
sbb
adc
ja
js
mov
mov
cld
push
jbe
mov
pop
mov
shlb
aaa
add
jnp
mov
dec
int
pop
js
stc
mov
push
cmpb
sarb
test
lcall
mov
xchg
push
mov
sahf
popf
push
cltd
mov
dec
subl
jae
ret
loopne
pop
sbb
xchg
or
movsb
push
rolb
xor
dec
subb
dec
adc
test
subl
ret
and
xor
mov
jb
sub
mov
and
fsubr
stos
cltd
clc
outsl
xor
dec
mov
lcall
gs
mov
or
rcl
aaa
mov
add
lahf
jno
xchg
sub
out
add
inc
call
xchg
inc
aad
mov
mov
push
lahf
and
xor
icebp
mov
inc
add
ja
jne
jmp
mov
out
test
xlat
mov
add
jg
fsubr
aas
jbe
push
pushf
jmp
aaa
xor
cmp
leave
ss
dec
sarl
js
clc
xchg
addr16
inc
movsl
pop
pop
dec
mov
inc
fidivrl
sub
and
xchg
ret
push
loopne
or
addr16
ja
dec
cmp
dec
in
adc
pop
dec
adc
aad
mov
xchg
sub
int
or
dec
sub
bound
enter
dec
sub
das
enter
inc
cli
loopne
sbb
je
xchg
inc
lret
inc
mov
fdivs
sahf
movsb
xchg
inc
fnsave
iret
and
fs
push
in
dec
sub
aad
int
lea
or
shr
inc
sbb
adc
sbb
sahf
rolb
fs
xchg
lsl
ds
inc
add
scas
add
add
cli
imul
inc
push
inc
jg
ret
rorl
sarl
flds
bound
rcll
test
icebp
sbb
sub
mov
and
mov
jae
cmc
pop
push
out
xor
pop
inc
popa
ja
fwait
in
mov
xchg
cmp
adc
ds
mov
add
mov
imul
jns
cli
jl
jbe
arpl
test
xor
mov
icebp
and
jbe
mov
sub
movsb
outsl
jge
pushf
mov
push
mov
pop
test
loop
jae
push
fldcw
mov
js
orl
bound
int3
jbe
decb
arpl
xchg
imul
dec
and
test
inc
add
cld
popa
sbb
mov
das
xor
das
mov
xor
mov
push
xchg
add
mov
clc
sahf
icebp
jmp
cmp
xchg
sbb
stos
dec
cmpsb
inc
xchg
dec
jl
enter
xchg
aaa
pop
add
or
mov
iret
scas
and
mov
push
pop
or
call
insl
cmpsl
and
fistpl
or
push
lods
cmp
xchg
xchg
fisubs
add
loopne
jl
les
adc
mov
mov
aas
jbe
fdivl
leave
xchg
adc
mov
mov
push
into
out
adc
inc
lock
xchg
push
and
dec
vmwrite
sub
push
cmp
fidivrl
lret
or
dec
lds
push
adc
inc
xchg
loop
insl
in
in
jg
mov
mov
idivb
cmp
lret
stos
dec
or
and
inc
jge
jle
cltd
out
mov
and
fimull
inc
loopne
pop
subb
add
xor
mov
nop
jns
pop
data16
pop
and
and
sbbl
mov
sub
dec
mov
rorl
jle
jo
xchg
jne
sbb
adc
insb
hlt
mov
aaa
inc
ja
cwtl
repnz
jnp
push
mov
inc
inc
mov
sub
xorl
mov
cmp
rol
inc
nop
pop
ljmp
jecxz
das
xchg
jbe
cwtl
out
pusha
push
and
imul
out
rclb
movsl
push
and
ja
stos
test
repz
mov
rcrl
pusha
inc
add
add
mov
jne
inc
cs
push
sub
ds
adc
fwait
inc
ret
dec
test
xor
sub
mov
mov
inc
jnp
outsb
rcrb
jp
xchg
jle
arpl
in
xchg
jge
push
or
inc
imul
aaa
jl
jnp
negb
inc
or
sub
sarb
lods
pushf
mov
iret
testb
jns
mov
insb
ret
shll
lods
lods
or
or
popa
jno
imul
pop
adc
call
push
insl
sbbb
aad
nop
or
xor
push
aam
arpl
xchg
mov
jmp
sahf
mov
mov
pop
outsb
mov
inc
inc
xlat
mov
or
mov
push
ds
cmp
xchg
push
sbb
cli
push
jnp
in
loop
imull
cs
or
add
out
popf
xor
add
je
mov
xor
or
dec
or
aas
shr
mov
leave
sbb
rcrl
xchg
dec
xorl
add
dec
inc
or
stos
push
stc
push
mov
stc
dec
add
testl
sahf
stc
mov
mov
shll
mov
and
in
sub
xchg
addr16
xor
hlt
repz
xor
push
into
inc
scas
lds
xchg
ret
sub
and
dec
addr16
jbe
popa
mov
in
push
and
nop
jo
ret
test
testl
or
movsl
push
scas
fdiv
push
and
pop
mov
dec
jge
mov
scas
add
call
xchg
or
sbb
scas
mov
stos
popa
loope
in
ret
mov
cmc
mov
pusha
xor
mov
jl
adc
popf
jo
jge
push
adc
xlat
adc
mov
jns
dec
dec
fldcw
nop
jbe
mov
mov
adc
mov
or
js
pop
xchg
test
push
rorl
fcomps
das
leave
xor
and
push
mov
stos
insb
sar
or
mov
mov
stos
shlb
push
pop
sub
jmp
jnp
mov
stos
loop
lock
xchg
mov
sti
shrl
adcl
test
outsb
mov
int3
repnz
insb
pop
sbbb
cmp
jo
daa
pop
insl
jno
ret
sahf
ja
jo
xor
or
popf
in
insl
cmp
xor
out
pusha
scas
aad
insl
push
out
push
ficoml
arpl
imul
jmp
fdivr
pushf
or
lahf
jmp
mov
out
adc
or
xchg
rcr
mov
cli
xor
aad
mov
cli
or
lea
push
sbb
mov
test
and
movsl
out
out
push
shl
pop
test
loop
test
inc
add
fldenv
mov
gs
adcl
add
push
movsl
mov
adc
push
push
or
jbe
pop
loop
fs
call
stos
mov
aaa
movsb
mov
das
push
cmc
popf
push
aas
and
enter
ja
or
test
xor
or
adc
inc
dec
mov
or
cmp
fidivl
inc
push
test
fisubrs
push
push
repz
mov
in
inc
push
es
fld
mov
xchg
jge
fisttpll
jno
ds
jle
stos
and
out
popf
mov
mov
outsl
mov
adc
lret
jmp
test
fstpt
pop
lcall
mov
test
lods
or
aad
pop
jb
dec
mov
loopne
or
ret
das
dec
in
mov
or
aas
adc
pop
mov
add
adc
mov
jp
inc
mov
sub
mov
sti
mov
sbb
ret
adc
inc
iret
push
das
inc
sbb
push
das
xor
cli
cmpsl
test
stos
jne
and
cmp
mov
test
pop
jmp
pop
fisubrl
int
mov
push
test
mov
xor
push
mov
sub
nop
mov
xchg
dec
iret
xlat
shll
cmp
mov
inc
push
lock
add
adcl
pop
ret
add
loop
pop
fwait
shrl
dec
xlat
mov
mov
lret
sti
sub
inc
mov
mov
pmuludq
add
jmp
cmc
adc
dec
hlt
into
out
dec
lea
mov
mov
and
push
ret
test
pop
push
movsb
mov
push
mulb
sarb
pop
test
rorb
and
repnz
loope
popf
fistpll
sub
push
aam
sbb
pop
push
aas
lret
push
push
testl
mov
mov
test
mov
imul
int3
pop
pop
cmc
popa
adc
iret
xor
cmp
and
ficompl
xchg
mov
fmull
mov
jno
shrl
cmp
or
jns
cmc
enter
sahf
arpl
imul
nop
pop
xchg
push
into
loop
inc
sbb
and
mov
push
dec
xchg
jle
rclb
cmp
adcb
and
push
ds
cmp
movsl
in
jmp
inc
loopne
mov
jmp
je
mov
std
popa
jg
pop
das
push
inc
mov
mov
pop
pop
ret
mov
jns
or
shlb
popf
stos
and
into
mov
sbb
cmp
push
lcall
mov
mov
test
cmp
mov
enter
push
sub
pop
in
adc
insl
lret
xchg
shlb
pusha
and
dec
and
cltd
add
enter
push
mov
push
icebp
test
insl
mov
std
cmp
test
or
push
or
imul
sub
and
adc
repz
pushf
cld
ss
mov
xor
out
and
cmp
lea
xchg
addps
shrl
add
nop
mov
out
push
xor
hlt
jae
addr16
mov
repz
xchg
cs
mov
mov
push
stc
stc
or
dec
movsl
popf
movsl
or
addr16
dec
lcall
mov
adc
adc
adc
pop
cmp
push
pushw
mov
dec
add
push
adc
cld
mov
aas
sarb
adcl
stos
jbe
lods
fs
sbb
dec
add
std
cld
mov
push
add
xor
loope
ja
stc
jns
rcrb
pop
in
mov
cmp
pop
adc
xchg
adc
hlt
aam
sbb
jg
insl
sub
test
sahf
dec
pop
outsb
add
and
cmp
shrb
xor
in
jg
mov
push
mov
bound
jecxz
in
fsubr
sbb
das
hlt
push
repz
and
out
sarb
lods
xor
pop
mov
lcall
sahf
ret
sub
adc
adc
scas
jno
mov
fs
xor
sahf
subl
or
iret
xchg
jns
loopne
mov
sbb
and
test
sub
test
ror
in
pop
push
cmpl
enter
push
dec
jmp
push
dec
test
or
adc
adc
push
sbb
flds
inc
add
fisttpl
cmp
js
test
mov
dec
dec
pushf
sub
sbb
jmp
xlat
mov
mov
mov
sar
aam
negl
fldt
or
mov
lcall
inc
dec
cwtl
jae
cmp
fidivl
mov
cmpsl
iret
nop
ljmp
je
addb
mov
repz
jge
ficoml
dec
cmc
ljmp
lds
adc
test
fwait
adc
xorl
mov
sbb
or
rcrb
scas
and
lds
stc
movsb
dec
push
fldcw
push
adc
lret
leave
jmp
scas
iret
xchg
pop
lods
cwtl
icebp
cmc
xor
lods
mov
cmp
stos
jnp
lods
or
jmp
fidivrs
sub
test
leave
enter
add
mov
mov
push
or
dec
and
mov
jae
or
mov
sub
inc
shlb
das
pop
addr16
add
push
xchg
repz
stc
sub
test
xchg
inc
xchg
repnz
aam
push
sbb
les
outsb
lods
mov
xor
ret
cmc
xlat
sarl
bound
pop
sub
pop
sub
or
cmp
mov
cli
adc
xchg
lock
jae
mov
mov
fnstenv
test
in
fsts
mov
push
rcrl
and
bound
iret
js
or
xchg
xchg
dec
nop
lds
mov
lods
cmpsl
xor
mov
decl
pop
add
les
and
sub
xor
dec
sub
jns
pop
add
sbb
outsl
mov
pop
mov
jecxz
pusha
and
jno
fmulp
ficompl
push
mov
dec
data16
xchg
push
push
mov
pop
mov
adc
mov
push
test
fimuls
push
mov
cs
fmuls
xor
in
scas
push
push
add
sbb
sahf
in
gs
jg
jno
mov
stc
sbb
mov
pop
and
arpl
les
inc
or
xor
mov
add
stos
pop
loop
sahf
mov
outsb
lcall
sub
xlat
cmpl
mov
cmp
ss
addr16
push
jo
lahf
imul
sbb
push
push
shll
add
cmp
or
lock
push
inc
shll
rcll
add
sub
in
and
mov
sub
repz
fcomps
dec
mov
popa
nop
adc
and
lea
into
or
dec
xor
movsb
ss
sub
jmp
xchg
fwait
std
sub
pop
pop
outsl
cld
pop
repz
bound
mov
jp
mov
fwait
cs
push
mov
or
lods
int3
test
dec
xchg
inc
push
jns
fimull
adc
rcrb
and
mov
jo
out
fisubl
pop
in
dec
icebp
xor
insl
cmp
out
icebp
call
xor
adc
enter
nop
jno
nop
push
cmp
stos
xlat
scas
and
mov
mov
add
sbb
push
mov
and
and
jp
mov
pop
out
sub
adc
sub
add
fldenv
ret
lods
cld
sub
push
outsb
mov
mov
int3
dec
pop
out
loope
lea
adc
rcll
lock
mov
mov
popf
mov
daa
pop
sbb
adc
je
dec
insl
int3
jno
adc
mov
cmp
repz
int
ja
lock
cld
xchg
in
mov
jae
test
out
pop
lret
test
dec
stos
push
add
addr16
or
frstor
lods
pop
xor
arpl
jo
mov
push
les
xchg
ljmp
mov
ds
fsubs
cmpsb
pop
cld
lods
negb
stos
dec
push
pusha
ds
mov
std
in
sti
pop
and
dec
fisubrl
or
sarl
push
lods
or
repz
test
shl
push
xor
cmp
dec
xor
fmul
cmp
jge
cltd
add
cld
in
cmp
and
sti
mov
mov
dec
or
data16
popa
test
mov
insl
in
dec
fs
fisubl
add
repnz
popf
into
mov
stos
xor
lods
das
dec
push
dec
out
cmp
rolb
popa
jl
insl
push
xchg
jbe
outsl
arpl
sub
push
std
bound
inc
leave
jns
pusha
jo
mov
es
or
add
push
cs
mov
fidivrl
mov
aaa
sti
js
mov
inc
cltd
dec
bound
mov
addr16
cmp
icebp
in
fdivs
ss
fs
jg
std
cmp
pop
push
fisubrl
mov
rorb
lods
xchg
es
inc
inc
aam
out
movsl
lret
jmp
sbb
pop
cmp
inc
pop
outsb
fmull
rcrb
jg
stc
xchg
inc
sbb
pop
cmp
push
cli
mov
sahf
push
adc
xchg
cmp
pop
imulb
push
enter
sub
test
fcmovnu
andl
loop
gs
jo
cmp
jae
in
test
dec
and
rclb
or
aad
stos
adc
jae
outsl
mov
cmp
cmp
sub
sbb
repnz
inc
pop
stos
adc
clc
repz
mov
sub
jno
add
out
dec
xchg
and
jns
scas
roll
insb
xorb
jae
addr16
xor
incl
jle
or
jmp
dec
jecxz
jae
xchg
imul
ret
inc
cmp
mov
ds
jne
pop
mov
push
xchg
mov
or
insb
add
cli
adc
or
xor
or
jp
and
cmpsl
inc
stc
lock
xlat
insl
dec
mov
inc
jge
or
pop
data16
inc
loope
stos
cmp
mov
inc
cmp
addr16
cmpsl
mov
ds
lds
ficoml
bound
jbe
test
aaa
pop
lods
imul
jnp
inc
shlb
inc
inc
sahf
test
popa
les
adc
push
cmpsl
popa
and
push
pop
in
sub
jp
loope
jecxz
rorl
mov
cwtl
pushf
sub
cmpsb
dec
mov
cmp
cld
int3
jnp
stos
imul
push
cltd
mov
and
test
lock
fwait
in
jae
push
lahf
or
shll
xor
jo
xchg
sub
xor
scas
dec
mov
inc
dec
incb
push
test
pop
push
xchg
mov
or
jle
mov
dec
jle
stc
jbe
stc
jns
mov
sti
movsl
popf
lods
hlt
add
mov
cmp
shr
cmp
inc
cmp
inc
mov
test
aad
stos
in
movsl
sub
aam
daa
hlt
out
rcrb
fidivrs
dec
imul
lock
repz
pop
xor
popa
mov
xor
call
mov
in
sbb
nop
sbb
or
lea
or
int3
ret
inc
adc
mov
push
jae
fisttps
add
ds
inc
into
lret
in
jmp
loopne
fldt
push
addr16
popf
push
cmp
sti
fdivs
mov
fidivrl
dec
and
imul
fsts
stos
dec
mov
test
lock
inc
sarb
scas
es
adc
jnp
cld
cmp
cmp
and
sti
mov
clc
mov
jae
ret
mov
cli
dec
pushf
dec
out
push
or
adc
inc
testl
bound
mov
test
out
cmp
mov
pusha
and
cmp
cmp
pop
pushf
je
cmp
ds
movsl
sub
cmpsb
jg
ljmp
pop
adc
xchg
or
dec
xor
dec
push
jnp
leave
ljmp
mov
push
out
je
xchg
lock
lahf
insb
xlat
fisubs
nop
out
int
mov
lret
sbb
pop
mov
add
mov
cld
in
aad
and
xor
js
push
adc
leave
loopne
movsl
out
mov
mov
fistl
test
xchg
push
cli
je
cs
pusha
in
xor
lret
or
iret
ss
and
arpl
jecxz
sahf
pop
push
push
and
dec
insl
test
sub
mov
or
lret
popa
inc
das
push
or
rcll
outsb
ds
or
dec
xchg
mov
out
loope
hlt
ss
sbb
jb
jg
mov
and
enter
in
aad
xchg
inc
jg
ds
insb
lds
clc
xor
sub
jmp
inc
or
sti
jp
ds
jns
mov
xchg
inc
cmp
test
mov
push
clc
out
or
mov
stos
sub
cmp
lcall
sti
ja
or
out
ljmp
sahf
xor
ficoms
sub
jne
in
shrl
mov
into
lret
shrl
loope
scas
mov
out
inc
stos
xor
test
rcrl
mov
aas
test
cmp
dec
out
xchg
daa
dec
mov
mov
popa
pop
aas
out
es
jmp
sub
sub
adc
rcrl
sarb
cmpb
mov
rcl
iret
les
filds
lahf
cld
jbe
mov
pop
fcomi
pop
jle
inc
xor
xor
popa
and
and
lods
cmpsb
cli
xlat
ljmp
or
sub
ja
xor
xor
mov
pushf
mov
cmp
fwait
cmp
push
pop
jb
pop
cli
cmp
lret
jb
out
inc
out
or
jns
movsb
stos
lods
test
sbb
addr16
orb
ret
mov
scas
sub
and
out
mov
push
fdivl
and
insl
dec
std
arpl
fistl
aad
fstpl
jmp
sbb
push
movsl
dec
ret
notb
into
cltd
fldt
mov
icebp
daa
jb
fimull
clc
push
xchg
jmp
dec
mov
or
into
jae
mull
sti
jo
jmp
jg
daa
mov
inc
pop
jne
addr16
fistpll
mov
mov
push
push
jge
xlat
fucomp
push
cld
in
pushf
xlat
js
gs
mov
fwait
sahf
pop
insb
pop
stos
dec
sub
imul
test
push
insl
pop
aad
pop
arpl
inc
sub
iret
xor
movsl
mov
dec
lods
cmc
jmp
sbb
push
sbb
lahf
btc
sbb
jo
mov
and
jle
sti
xor
mov
sbb
mov
add
pop
dec
nopl
sub
and
popa
jp
out
int
push
mov
inc
pop
push
data16
jl
aaa
dec
std
pop
cld
inc
dec
mov
ret
jb
into
mov
inc
xchg
shl
rolb
repnz
rcr
and
movsl
mov
addl
mov
pop
aad
icebp
sub
inc
mov
xor
cs
ss
dec
cwtl
adc
mov
cltd
pop
out
dec
or
pop
cld
mov
sub
fmull
mov
aas
clc
lods
xor
push
mov
cmp
push
rorl
jmp
dec
mov
mov
notl
pop
add
rorl
movsl
sbb
and
and
or
jmp
pop
inc
shlb
xchg
stc
mov
fnstsw
sbb
inc
jecxz
dec
mov
es
push
test
mov
xchg
xchg
jns
lret
lcall
rclb
ret
mov
aad
push
cmpsb
jp
enter
cmp
and
inc
pop
jb
out
cmp
inc
rcrl
sub
outsl
fsubs
sub
mov
push
mov
add
shr
test
mov
xorb
inc
movsb
pop
out
inc
push
xchg
orb
cmp
push
inc
dec
ficoms
int
pop
jne
or
jl
sbb
fnstsw
in
jnp
lcall
out
mov
pop
in
andb
mov
add
mov
xor
es
or
ljmp
sar
jae
fs
ds
mov
pop
jae
inc
push
pushf
sbb
into
pop
inc
push
xor
jnp
shlb
adc
mov
pop
mov
adc
movsl
lret
int
sub
fiaddl
imul
jle
lods
std
sti
in
ljmp
xchg
fisubrs
rorb
pop
mov
sub
xor
sub
add
lret
push
cmp
mov
pusha
cwtl
rcl
pop
loopne
or
mov
ret
aas
call
lcall
icebp
lock
lret
int
push
inc
add
int
mov
add
push
add
call
bound
sbb
push
adc
add
and
scas
xchg
cltd
ds
xchg
pop
pop
outsb
jae
xchg
ljmp
cmp
pop
or
mov
mov
push
xchg
and
dec
pushf
or
jl
cmp
pop
dec
addr16
sub
outsb
adc
js
pop
adc
scas
mov
inc
inc
jnp
dec
es
push
adc
add
into
mov
popf
outsb
stos
fcmovb
pop
aas
data16
mov
fmul
outsl
stc
sar
xor
int3
dec
sub
call
rcr
gs
pusha
enter
sarl
ja
xor
adc
xchg
jp
in
jp
and
cmp
std
mov
aam
dec
out
fldl
dec
mov
loopne
mov
mov
mov
insl
mov
out
adc
xor
lcall
in
mov
aam
add
xor
rcr
jp
inc
into
jp
incl
push
mov
shrb
in
shll
pop
fimull
shll
push
test
push
sbb
and
mov
mov
loope
cmpl
idivl
adc
ffree
sub
pop
push
mov
add
call
or
enter
gs
mov
add
movsb
iret
jns
ljmp
add
mov
adc
and
imul
pushf
and
cwtl
aam
sub
push
xchg
cwtl
mov
addr16
mov
data16
addr16
add
out
fwait
les
xchg
out
sub
xchg
sub
pop
xor
cmpsl
mov
aam
jo
in
jmp
lret
xor
mov
dec
pop
inc
bound
sub
fadd
push
mov
iret
cli
movsl
movsl
mov
test
and
aas
push
inc
shl
jl
in
mov
inc
and
and
aam
lea
mov
mov
pushf
addb
hlt
cmp
repz
je
shll
mov
and
adc
repnz
inc
sbbb
jmp
outsb
lahf
mov
shr
fs
stos
test
stos
sub
jns
sbb
scas
cmp
out
pop
sub
cs
add
clc
lahf
sti
inc
jge
test
xchg
aad
lahf
or
rcll
mov
sub
ret
and
lea
xchg
or
je
fsubrl
adc
fists
cmp
call
out
pop
sub
in
jp
out
fildl
mov
in
ret
call
fstpl
fcomps
cmc
add
xchg
xchg
sbbb
int
cmp
push
or
adc
fs
std
movsb
outsl
and
das
es
push
lods
mov
adc
cmp
add
pop
mov
mov
xor
call
xor
and
or
cs
dec
cli
jmp
cmp
add
add
and
adc
addl
dec
fadds
mov
sbb
ret
xchg
arpl
aam
dec
mov
push
cli
gs
imul
push
xor
cmp
fdivrp
sub
jg
pop
sbb
push
js
sub
adc
push
push
jo
lods
or
cmp
xchg
flds
dec
or
in
jno
jbe
pop
pop
std
xorb
das
shll
je
jp
mov
adc
test
pop
xchg
mov
mov
mov
vpunpckhdq
rcll
cvtpi2ps
xchg
xlat
in
aas
jbe
mov
pop
aam
add
or
cld
loopne
mov
mov
pop
icebp
fisttps
aad
mov
dec
cli
inc
arpl
push
inc
icebp
mov
daa
inc
push
clc
jne
mov
nopl
or
aad
add
or
gs
mov
test
in
cmpb
add
cli
or
jb
add
sub
jnp
cmp
or
push
sub
sbb
popa
push
test
push
sbb
leave
ficomps
std
insb
stc
push
and
and
or
arpl
pop
out
enter
cmpl
aad
fcoms
dec
and
testb
xor
mov
loope
mov
jg
in
inc
jmp
sarl
adc
add
fwait
pusha
and
scas
pop
xlat
scas
hlt
add
aas
lcall
pop
xchg
jbe
pop
pushf
in
sbb
loopne
xchg
adc
push
dec
mov
call
stos
and
nop
shll
mov
cmpsb
dec
or
rorl
xchg
sub
dec
rolb
xor
sbb
push
dec
pushf
mov
cmp
repnz
sub
jle
or
jns
cld
sbb
repz
xor
fs
pop
pop
xchg
mov
mov
cli
flds
mov
jge
mov
cmp
fistl
ret
mov
sub
add
push
out
push
inc
ds
inc
test
mov
xor
mov
jne
cmp
test
cli
add
jge
sbb
aam
add
cltd
pop
add
mov
jl
and
lods
pop
ds
dec
add
dec
mov
mov
jo
in
sub
shrb
cmp
adc
ljmp
jns
movb
imull
lock
jno
clc
mov
or
iret
in
jle
aaa
ret
mov
push
je
inc
dec
jbe
aad
jl
sbb
add
cwtl
mov
dec
movsl
dec
fisubrl
xor
loopne
cmp
pusha
cld
or
or
psubq
leave
arpl
aad
mov
jg
lahf
inc
adc
ds
jns
mov
cmpsl
int3
mov
and
jl
jmp
aaa
aaa
add
mov
jne
out
cld
ret
cmp
inc
mov
shll
fistps
shlb
shlb
std
ficoms
insb
sbb
jo
sub
lods
jecxz
insl
push
cltd
mov
andb
in
pop
pop
xlat
xor
sub
sub
mov
daa
mov
mov
inc
repz
and
lret
push
dec
dec
int
dec
xlat
mov
inc
scas
pop
push
ja
mov
lcall
dec
js
cmp
adc
je
movsl
adc
sub
pop
loop
xchg
push
addr16
rorb
mov
lahf
repnz
inc
arpl
dec
add
jb
lock
inc
fwait
xchg
or
or
adc
into
push
subl
lret
in
pushf
or
aaa
inc
push
push
fdivrl
jno
ljmp
in
or
repnz
xor
imul
pop
mov
xor
shlb
mov
sub
sbbl
stc
jp
into
test
insb
mov
adc
sub
idivl
call
dec
xchg
and
jb
xchg
adc
lret
adc
mov
loope
pop
push
xchg
cmpsb
pop
sbb
loope
add
jb
cmp
adc
or
nop
xchg
adc
sbb
bound
and
sub
fbld
ljmp
mov
shrb
into
ret
lcall
sbb
mov
push
icebp
push
popf
dec
adc
inc
inc
push
or
cmp
hlt
mov
fdivs
and
push
leave
sbb
mov
adc
out
fcmovnu
cmpsl
push
test
inc
jb
jl
sub
mov
stos
xor
daa
fldln2
mov
repnz
ljmp
stos
pop
dec
mov
mov
sarl
fwait
adc
jmp
das
mov
push
mov
fisubs
out
push
dec
pushf
add
mov
arpl
out
sbb
dec
push
push
rol
cwtl
shrl
push
imul
lock
lea
pusha
fnsetpm(287
imul
stc
out
aas
leave
andl
pop
aaa
mov
in
xor
mov
fisubrs
vpslld
pop
in
jbe
and
movsb
ret
sbb
shl
mov
fidivl
hlt
fwait
adc
push
cmp
xor
scas
sbb
sbb
add
testb
jns
xchg
sub
push
or
sahf
mov
loope
dec
aas
nop
cmpsl
push
xor
hlt
cwtl
mov
insl
data16
push
popa
mov
stos
test
fstps
sti
aas
mov
outsb
or
icebp
jne
jnp
mov
mov
lret
dec
dec
mov
test
lea
imul
ror
lret
mov
loope
loop
sarb
rorb
ljmp
jb
sub
insl
aam
or
divl
dec
push
gs
sbb
imul
sub
mov
mov
xchg
mov
loopne
mov
push
sbb
shll
mov
mov
jo
xchg
repz
xchg
imul
and
imul
pop
shrl
jg
push
dec
and
ds
add
pop
repnz
mov
cmc
out
push
mov
jns
push
pop
cmp
scas
out
dec
add
lahf
or
mov
imul
jne
mov
xor
orps
in
stc
arpl
cmp
stos
out
cmp
cmpsb
fcomps
dec
out
sahf
jmp
pop
cmc
jp
cmc
je
scas
icebp
bound
xchg
adc
mov
push
sarl
and
xchg
and
insb
sahf
mov
fistpll
out
sbb
lret
adc
inc
push
fs
mov
daa
lds
xchg
sti
adc
leave
scas
mov
pushf
mov
xchg
xchg
loop
mov
xor
rolb
gs
outsb
pop
add
or
mov
adc
sub
insb
sbb
adc
pushf
pop
xchg
stos
lods
mov
rcrb
mov
add
sbb
mov
xlat
lahf
jl
push
pop
jle
pop
addl
popf
dec
and
outsb
fdiv
xor
xchg
mov
dec
rorl
movsb
jae
fldl
jmp
andb
adc
push
pop
mov
imul
mov
inc
jae
cli
sub
cmp
xor
inc
les
or
loope
movsb
sub
fdivrp
movsb
testl
sbb
lcall
ss
cmp
or
inc
sbb
int3
mov
dec
cmpsb
xchg
add
stos
xorb
pop
les
cmp
aam
mov
sbbb
fbstp
je
cli
push
fsubrs
fstpl
lods
jp
arpl
add
sbb
das
pop
cs
cmp
mov
sub
dec
fisubrs
dec
movsl
ds
jb
xor
sub
outsb
test
sub
scas
push
ja
mov
xor
jge
and
and
nop
mov
and
pop
into
inc
push
xor
rolb
pusha
xor
inc
mov
xchg
popa
aas
nop
fstpt
in
push
dec
mov
ja
addr16
daa
out
mov
or
pop
jae
pop
out
out
stos
inc
lock
or
jns
add
push
xor
xchg
mov
mov
adc
out
pop
sbb
data16
sbb
xor
and
scas
js
cmpsb
lods
movsb
out
fwait
les
mov
fcoms
ffree
cmpb
add
dec
roll
mov
sbb
inc
add
ret
hlt
push
push
and
bound
xor
repnz
in
mov
xor
cmpsl
lret
js
cmp
std
pop
addb
jmp
cmp
xor
sub
insl
mov
mov
cmp
and
repnz
ss
jnp
lods
mov
rcll
adc
xchg
xor
test
or
cmp
test
push
imul
test
fcmovnb
sahf
mov
adc
xor
cli
xchg
and
inc
imul
mov
std
pop
fwait
adc
les
mov
add
add
sub
mov
mov
and
rcll
mov
mov
inc
cmp
aam
fadds
fisttpl
shlb
fisttps
in
mov
sub
mov
and
sbb
fwait
push
sbb
dec
or
and
xchg
in
pop
cmp
dec
xchg
int
or
mov
in
and
add
inc
push
sbb
mov
jg
in
stos
xchg
and
jb
sub
push
lahf
jbe
inc
inc
jl
les
push
push
imul
stos
imul
add
std
lahf
jle
inc
cmpl
ret
adc
jo
mov
adc
cmp
rcr
das
dec
or
aad
mov
mov
xchg
mov
jo
fstl
add
sbb
jns
jl
cs
jle
scas
mov
sarl
mov
add
out
push
xchg
mov
dec
cmp
jge
push
rcll
ror
fmul
dec
or
pop
sbb
sbb
xlat
jb
mov
push
enter
xor
sbb
pop
jno
inc
ja
rcrl
enter
xchg
push
and
fidivrl
jle
sbb
xchg
stos
imul
mov
jg
ret
pop
mov
fwait
mov
dec
cmp
iret
inc
ss
jo
out
stc
data16
dec
subl
or
sub
and
sub
lcall
xchg
ja
push
inc
stc
aad
cmp
xchg
jle
lret
insl
lret
orb
ss
adcb
jne
xor
pop
stos
ret
or
leave
add
test
test
movsl
sbb
pop
fdivrs
outsb
push
lea
mov
cmpsb
inc
dec
or
and
cmp
push
push
mov
stc
jns
nop
sbb
stc
nop
inc
icebp
test
jle
jns
push
mov
in
sar
mov
int3
lcall
sub
xchg
lret
mov
jnp
stc
or
push
mov
lods
lahf
adc
lret
popa
test
sbb
jle
fildll
lcall
cmp
call
jns
mov
or
lahf
subb
shl
lcall
pop
mov
mov
int
inc
push
dec
sub
inc
incb
test
test
mov
lds
scas
dec
inc
js
test
popa
sbb
movsb
hlt
pop
fsubrp
icebp
cwtl
push
sub
push
push
bound
loopne
mov
mov
mov
cs
sub
cwtl
repnz
lds
push
aam
fsubrs
not
adc
mov
mov
orl
movsb
xor
out
mov
inc
test
arpl
into
sub
xchg
jns
outsb
lahf
dec
sbb
inc
out
clc
push
mov
jg,pt
test
popf
pop
arpl
stos
xor
test
jp
movsl
lds
or
test
js
mov
pop
push
xchg
push
mov
es
sbb
xor
mov
push
sti
push
mov
mov
jmp
xchg
fsubrs
inc
inc
dec
dec
scas
inc
das
pop
adc
test
cmp
cli
cmp
jnp
subb
call
pusha
mov
xchg
push
mov
mov
push
dec
and
mov
pop
out
fimuls
mull
mov
dec
loopne
rclb
cmpsb
push
adc
mov
sahf
dec
in
xchg
sbb
xor
adc
pushf
repnz
in
mov
test
push
mov
inc
daa
adc
cmp
push
xchg
inc
je
lods
into
push
call
add
xor
clc
xor
jbe
jecxz
nop
inc
mov
xor
aam
xlat
push
pop
mov
push
mov
call
and
pextrw
xchg
pushf
dec
cmpsl
add
sahf
cmp
imul
das
mov
je
or
pop
notl
dec
jp
pop
xchg
jle
loop
nop
pusha
les
sbb
adc
cltd
gs
add
not
pop
out
pop
mov
push
dec
push
jbe
pop
xchg
das
cli
adc
mov
sub
iret
rolb
sbb
adc
or
ret
addb
repnz
xor
das
nop
xchg
xchg
lods
sbb
adc
adc
adc
lea
xor
stos
bound
or
lcall
sub
or
and
mov
mull
sub
push
sub
popf
jecxz
je
je
adc
mov
jge
enter
in
xchg
lret
mov
add
pop
mov
add
pop
shrl
cmpl
dec
dec
fadds
xor
push
jl
fcoms
mov
sbb
pop
shrb
movsl
add
and
xorb
jle
lret
inc
jae
imul
sub
movq
subb
rcrl
sub
mov
xchg
pop
divl
sub
xor
aaa
mov
clc
cltd
outsl
ss
xchg
in
pop
daa
sbb
and
adc
xchg
sti
stos
out
es
imul
das
push
push
pop
cmp
xchg
mov
pextrw
jb
dec
rolb
adc
pop
mov
add
daa
lods
pop
scas
sbb
mov
scas
push
inc
dec
pop
fisubrs
popf
dec
test
adc
lret
neg
adc
mov
stos
and
sbb
aas
loope
imul
pop
lods
xor
inc
stc
out
adcl
push
push
fnstsw
subb
xchg
popa
cmp
das
stos
jne
sub
jg
push
jecxz
pop
ss
lahf
faddp
cmpsl
and
add
es
mov
add
sub
jecxz
rorb
dec
movsb
jne
inc
cli
scas
je
push
int3
adc
fs
sbb
inc
xlat
inc
shlb
jmp
jb
sahf
mov
dec
hlt
jnp
cs
dec
jl
repnz
dec
or
push
clc
mov
inc
addr16
imul
inc
and
mov
dec
rolb
pop
imul
enter
add
shrl
pop
cmp
cwtl
jno
mov
jl
cmp
repz
jecxz
into
dec
xchg
xchg
outsb
lds
push
adcb
and
and
aaa
nop
dec
outsl
jecxz
xchg
mov
ds
push
pusha
mov
out
xlat
and
add
push
dec
loopne
int
lock
sbb
jns
test
testl
scas
cmp
bound
xchg
ljmp
or
lret
dec
aaa
push
push
mov
lcall
mov
or
dec
xchg
call
lret
inc
fcomps
jl
xchg
jge
pushf
xchg
into
imul
aas
mov
cmp
fstpl
in
repz
cwtl
xchg
xor
mov
aaa
mov
stos
ss
add
clc
jp
pushf
stos
xchg
popa
xchg
jnp
pop
das
sbb
mov
cmp
dec
imul
clc
mov
imul
lahf
movsb
pop
fstpt
aad
sti
daa
fwait
in
mov
mov
hlt
xor
or
rorb
jae
inc
cwtl
push
hlt
push
jl
xor
push
orb
cmpb
out
sbb
xor
and
sub
mov
pop
jl
xchg
adc
dec
jle
shlb
mov
sti
push
and
movsl
jae
std
xchg
sar
mov
lret
in
lock
sbb
adc
xor
push
adc
rorb
add
cmp
out
mov
push
push
or
loop
bswap
or
mov
mov
xor
fcomi
test
cmc
imul
outsl
orb
pop
and
pop
adc
xlat
or
cmp
pushf
jle
cmpl
push
imul
pop
sbb
xchg
mov
xchg
jb
xor
or
cmp
push
adc
mov
jecxz
mov
jecxz
push
push
fsts
or
and
xchg
jno
adc
ret
inc
xchg
sarb
mov
sub
imul
pop
je
ss
fdivs
jp
mov
mov
pop
mov
leave
and
lods
fs
pop
in
stos
rcrb
cld
jns
mov
xchg
pop
push
test
mov
sub
xlat
mov
aas
push
pushf
es
cltd
mov
out
test
into
cmova
xchg
int3
clc
cwtl
lcall
sbb
and
lret
lahf
scas
movsb
loope
fldenv
leave
es
nop
cltd
inc
leave
out
inc
xchg
sub
shl
mov
jp
xchg
mov
loope
ret
in
mov
sbb
enter
xor
mov
daa
aas
arpl
mov
call
repz
lret
int
int
loop
pop
test
or
into
jge
mov
jecxz
pop
xchg
xchg
push
ret
or
and
and
fs
loope
stos
cmp
or
cmp
test
repz
cmovs
mov
rolb
jl
cmpsb
mov
pushf
repz
mov
std
lds
enter
in
xor
xchg
and
out
in
inc
inc
dec
add
jge
loope
cmp
lock
test
jp
jp
or
xor
adc
sub
add
dec
mov
in
mov
sbb
or
lret
arpl
mov
pushl
aam
call
push
mov
ljmp
inc
fidivrl
cmpsl
jmp
es
adc
or
imull
repnz
mov
adc
sahf
inc
dec
out
mov
push
rcl
push
add
cmp
fwait
inc
jne
mov
sub
inc
stc
add
and
fdiv
jae
loopne
pop
inc
mov
mov
jp
mov
clc
jnp
call
xchg
or
lods
fs
xchg
sahf
inc
aaa
es
gs
scas
push
rorl
pop
aad
lock
std
lods
les
xor
mov
cmpsb
dec
leave
jnp
pop
jecxz
xchg
sahf
andb
ja
add
bound
mov
sti
ljmp
inc
dec
mov
mov
mov
stos
mov
lods
fldcw
push
dec
cmp
hlt
jo
or
dec
lret
je
push
call
inc
leave
arpl
lods
jecxz
add
scas
repz
dec
out
pop
mov
adc
popa
jo
pop
lret
mov
mov
dec
mov
jl
add
sbbl
fincstp
movsb
pushf
sbb
pop
inc
xor
bound
or
ds
inc
test
pop
imul
lods
add
mov
mov
cld
scas
cs
xor
lds
cmp
loopne
pop
mov
test
xor
outsl
mov
push
xchg
xchg
sbb
mov
cli
pop
mov
sub
mov
jge
mov
add
sbb
es
jns
scas
stc
push
leave
repz
mov
push
test
inc
int
and
fistpl
cmp
test
cmp
mov
xchg
sbb
mov
pop
add
nop
inc
movsl
mov
mov
add
in
das
mov
ljmp
mov
mov
movsl
mov
pop
in
or
data16
or
outsl
idivl
push
mov
xchg
lock
leave
cmp
loop
cmp
cmp
insl
xchg
jae
cmp
xlat
mov
cli
cmp
leave
adc
mov
mov
push
cmp
aam
add
mov
inc
jle
lret
mov
gs
inc
push
test
cmp
mov
or
push
xchg
lds
mov
and
ficompl
ss
je
outsb
gs
bound
movsl
loopne
xchg
xchg
test
push
and
movsl
jnp
cmpsl
jp
mov
mov
sbb
push
or
outsb
mov
imul
sbb
mov
mov
pop
outsl
jo
mov
dec
add
repz
jnp
xor
push
sub
pop
xchg
enter
inc
add
cmp
xor
outsl
idiv
pop
pushf
lcall
push
inc
dec
mov
xchg
imulb
decl
popa
cmp
and
dec
inc
mov
add
fisubrl
std
add
add
push
fwait
pusha
push
jo
test
lret
sub
ds
out
inc
enter
rclb
lds
mov
xor
ret
negl
xchg
repnz
pusha
dec
xchg
jecxz
outsl
mov
ja
adc
pop
inc
jno
mov
adc
sub
dec
addr16
adc
xchg
ljmp
insl
push
cmpsl
mov
aaa
daa
mov
in
sub
dec
jg
stos
into
mov
sub
clc
mov
popa
jns
cmp
xchg
sbb
inc
add
dec
ds
add
xchg
adcl
mov
fbstp
push
jmp
adc
inc
push
fwait
pushf
inc
adc
test
or
jae
push
push
cmp
dec
rcr
in
mov
clc
subb
repnz
stos
adc
sti
adcl
outsl
cmp
xlat
ljmp
mov
add
fimull
loop
rorl
mov
jno
mov
cld
in
shrl
popf
icebp
mov
and
testl
cmc
testl
jp
cmp
xchg
shll
xor
bound
adcb
pop
cmp
imul
aas
aas
into
movsb
hlt
pop
ret
push
jle
loop
ret
stos
cmpsb
mov
pop
rcrl
push
or
sarb
ja
fisubl
out
push
jno
scas
mov
fcmovnb
arpl
jb
int
jp
mov
jbe
jbe
mov
lret
mov
orb
sbb
cld
push
or
rcpps
inc
call
test
dec
dec
jecxz
cmc
mov
cmp
fdivs
mov
mov
andl
push
and
and
mov
xchg
push
iret
fldt
sarl
inc
imul
fs
push
shll
fucomip
pop
ret
cmp
dec
jge
add
inc
out
test
in
pop
xchg
out
rorl
sub
push
xor
push
icebp
mov
or
push
fisttpl
mov
repnz
and
aas
add
sub
addr16
negl
pop
mov
je
dec
xchg
pop
adc
and
orb
inc
pop
sbb
xlat
leave
push
lret
lea
outsl
xchg
sub
and
je
enter
negb
or
dec
sbb
int3
lahf
or
cwtl
dec
or
cmp
xchg
jmp
add
flds
call
nop
adc
fcmovne
push
sti
fnstsw
mov
xchg
mov
in
test
dec
mov
jae
jge
in
adc
leave
jb
icebp
xor
out
jne
loop
mov
mov
movsl
movb
adc
cmpl
xlat
out
pop
mov
push
sbb
xor
in
in
jnp
stos
jl
out
mov
insb
inc
adc
gs
jno
dec
int3
roll
inc
outsb
or
shll
fimull
inc
popa
sub
pop
jle
add
dec
outsl
adc
cmc
xchg
sahf
out
sbb
enter
inc
nop
mov
ret
stos
sub
xchg
hlt
dec
xchg
push
aaa
sti
loop
test
mov
xlat
dec
stc
hlt
sub
jns
popf
mov
mov
rcrl
loope
lret
imull
mov
js
es
out
mov
popf
xchg
mov
dec
mov
das
sub
mov
dec
out
cmc
ss
mov
fistpl
orb
or
cmp
aaa
mov
sbb
pop
inc
jmp
aas
in
mov
push
jge
xor
pop
fstpt
jno
iret
movsb
cmpb
mov
xor
pop
mov
xchg
mov
jo
faddl
stos
scas
jle
dec
movb
pop
in
xchg
and
cmp
xchg
jecxz
aam
mov
add
hlt
push
clc
push
jo
cmp
push
jle
dec
test
and
mov
sbb
ljmp
popa
fucom
lcall
or
mov
mov
mov
in
push
mov
fdiv
shlb
mov
cmp
aam
mov
mov
scas
or
popa
xchg
and
lcall
inc
int3
jmp
mov
mov
jne
cld
fdivs
pop
and
mov
inc
pop
adc
sub
mov
inc
ss
andb
arpl
lock
mov
jp
xchg
test
dec
mov
lods
push
ret
fdivl
mov
notl
cmp
push
jl
cmp
pop
dec
pop
mov
or
adc
jb
sub
scas
push
or
pop
stos
test
mov
adc
ffree
cmpsb
repz
test
inc
lods
cmp
mov
cmp
dec
sarl
adc
imul
int3
inc
or
push
scas
ss
and
cltd
and
lods
je
adc
ret
xor
mov
and
mov
gs
cmc
enter
pop
pcmpgtw
mov
test
push
sub
and
cltd
lret
outsb
mov
mov
mov
ret
cmp
xor
xor
xchg
or
fwait
jb
js
in
aaa
ret
pushf
mov
adc
fs
mov
jmp
mov
dec
mov
adc
sub
jecxz
jo
lock
ja
jae
cmpsl
inc
xor
ljmp
xchg
pop
out
nop
mov
insl
pop
sahf
bnd
xchg
or
lock
push
pop
repz
jae
ret
cmp
aam
jg
andb
loope
sbb
mov
cmpb
push
xchg
or
dec
mov
setns
dec
push
push
jbe
or
in
inc
dec
pusha
jno
aad
dec
xor
adc
and
pop
or
pushf
add
ja
pop
cmp
neg
and
das
int
or
shll
xor
sub
mov
dec
and
popf
out
lret
add
inc
push
fs
rcrb
lcall
sbbl
pop
push
pop
jmp
test
sbb
and
inc
pop
or
cs
sbb
dec
push
stos
mov
cmpsl
add
mov
clc
lock
iret
mov
loopne
cmpsb
pop
adcb
fadds
dec
dec
negb
xchg
mov
leave
andb
pop
popf
mov
loope
add
push
push
stc
xor
mov
in
mov
adcb
lods
arpl
lea
mov
cmp
fwait
push
fcmovnb
test
cli
js
iret
sub
sti
push
daa
ja
sbbb
push
andl
cmp
mov
jo
push
lock
scas
fdivs
sub
orb
push
cmp
push
adc
dec
adc
push
xor
cltd
cs
roll
in
xchg
adc
not
jp
xor
lsl
mov
xlat
cli
call
add
dec
sub
daa
andb
mov
je
dec
cmpsb
xor
mov
mov
enter
lret
pop
insb
dec
pop
jg
clc
popa
xor
mov
jl
cmp
cmpsb
clc
push
out
pop
sub
xor
ja
out
xor
icebp
rcl
iret
sub
ror
pop
cs
aam
bound
cmp
scas
fidivrl
sbb
jno
loopne
js
mov
dec
in
in
push
fidivrl
pop
cmpsb
mov
rclb
fsubrl
cwtl
je
daa
add
mov
sbb
inc
jns
pop
popa
jmp
shll
shlb
subl
fwait
jns
std
out
mov
inc
cwtl
cmc
cmp
shlb
add
fisubl
cli
or
xlat
adc
pop
fwait
rclb
dec
out
mov
icebp
cmp
cmp
jae
pop
xor
sahf
mov
jno
xchg
sub
mov
add
and
sub
or
xor
test
inc
push
lret
xor
sub
mov
xchg
shll
ja
hlt
jno
dec
in
in
add
xor
lahf
lahf
inc
ss
push
push
sub
xchg
jl
clc
add
repz
adc
push
jnp
rcl
movsb
push
pusha
test
push
out
lret
mov
dec
clc
scas
gs
enter
fwait
inc
out
cli
sub
and
repnz
aad
xchg
inc
pop
popf
in
dec
in
loope
cmp
mov
jl
movzwl
add
das
and
pop
stos
in
adc
fsubr
cmp
sub
leave
jb
inc
mov
insl
ret
cvttps2pi
aad
scas
and
adc
xchg
les
mov
lea
mov
icebp
sbb
xchg
adc
in
xchg
std
push
xchg
loop
into
lret
das
sub
pusha
jmp
sub
nop
jecxz
dec
or
cmp
mov
shlb
jo
hlt
sbb
xlat
ror
xor
add
push
pop
loope
je
mov
pusha
xorb
popa
imul
stc
push
sbb
mov
xchg
xchg
mov
insl
je
lods
popf
aad
push
pushf
sub
sub
dec
int
std
ss
xor
lods
and
mov
les
cld
mov
push
adc
cs
out
push
test
mov
dec
xchg
sbb
insl
jb
es
iret
aaa
or
loopne
jle
xor
xorb
enter
mov
leave
scas
repz
mov
inc
lock
sub
lahf
fsubs
mov
cmp
pop
jg
cld
mov
or
mov
fsubrl
fildll
imul
xor
inc
test
repnz
movsb
test
in
adc
pop
pop
inc
xor
jg
mov
and
push
out
pop
inc
fwait
inc
cltd
je
sbb
stos
adc
pop
lahf
aaa
fldenv
fbstp
jmp
mov
sub
xor
push
popa
rorl
push
stc
lret
nop
out
xor
dec
push
pop
inc
loope
sub
sub
mov
je
shl
push
inc
imulb
in
push
fisttpll
jns
jmp
mov
adc
push
and
sub
pop
cwtl
imul
xlat
pop
or
inc
or
jge
sub
sahf
sbb
roll
mov
mov
pop
das
xor
jb
xchg
flds
mov
stos
pop
push
mov
ss
pop
cld
sbb
sub
mov
cmp
mov
push
mov
fnstsw
ret
jecxz
jp
sarb
enter
push
push
cmp
dec
cmp
xchg
inc
fistl
es
sbb
jbe
xchg
data16
testb
jnp
sbb
jnp
cmpb
mov
hlt
or
sbb
and
stos
jg
decl
push
test
setle
sub
mov
jp
popf
enter
adc
dec
push
pop
in
out
dec
xor
imul
sbb
lods
test
outsb
stos
xlat
xchg
cmpsl
bound
fcomps
dec
xlat
dec
cwtl
mov
jp
cld
daa
pop
push
iret
outsl
push
das
cwtl
sahf
push
cmp
dec
inc
mov
aam
jb
inc
or
lock
cwtl
lret
xor
pop
push
or
loopne
int
push
scas
xchg
sbb
sub
cld
cmpsb
jl
dec
cwtl
nop
pop
sub
push
push
push
jp
fnsave
out
sub
mov
push
sbb
lock
jl
jno
repnz
test
add
add
sub
lock
roll
and
in
push
lcall
cli
mov
push
sub
mov
in
mov
mov
jle
lahf
jl
outsl
sub
arpl
pop
cmpsb
int
fidivs
nop
or
inc
jb
shll
xor
xor
mov
out
push
dec
mov
jp
pop
xor
push
adc
insb
in
in
in
jmp
adc
and
dec
hlt
cmpb
test
cmpb
mov
mov
fdivrl
dec
lret
aaa
pusha
dec
out
xor
out
add
stos
xchg
mov
push
jmp
dec
push
pop
jp
push
sbbb
xchg
mov
inc
imul
arpl
push
leave
test
pusha
aaa
sbb
mov
sub
test
and
icebp
add
out
mov
push
jp
ret
stos
push
xor
out
or
je
add
popf
xor
push
adc
rorl
repnz
cmpsl
lea
cmc
sti
jbe
pop
sub
adc
pushf
mov
push
and
out
shrb
inc
inc
clc
mov
lods
rorl
in
jb
enter
mov
jne
testl
insl
adc
mov
sub
lods
jbe
sahf
dec
mov
rcrb
stos
add
jb
rorb
jl
int
out
scas
fwait
hlt
rclb
cltd
cltd
jl
or
cltd
xchg
xchg
stc
mov
fidivl
adc
rcll
cmp
sti
pushf
scas
xchg
dec
loope
or
push
adc
and
mov
push
daa
push
lahf
or
loopne
xor
dec
aad
inc
in
repz
ret
ljmp
pop
ret
inc
cmp
insl
mov
out
repz
scas
lcall
ja
xor
xor
test
push
or
frstor
test
fldcw
movl
cld
inc
add
and
nop
mov
pop
in
dec
call
out
xor
call
sbb
add
push
push
xchg
incb
cmp
jecxz
out
leave
push
js
cmp
fbld
jp
cmpsl
stos
mov
adc
mov
or
sbb
dec
or
sbb
and
movsl
flds
js
xchg
pop
fwait
call
insl
popa
loope
sbb
and
mov
mov
cmc
ss
sbb
mov
sbb
scas
sub
aad
lahf
daa
loopne
and
les
nop
sbb
jp
leave
adc
icebp
cmpsl
ds
punpckhwd
lea
or
dec
adc
aam
adc
popf
sahf
push
mov
mov
addr16
imul
aas
sub
inc
jbe
jbe
adc
data16
mov
push
xchg
mov
stos
mov
xchg
or
outsb
sub
or
mov
sbb
std
pop
out
pop
shl
cmp
aam
inc
or
sbbl
mov
add
or
leave
push
cmp
xor
sbb
dec
xor
lea
in
and
add
andl
int
or
inc
cld
jecxz
jbe
insl
out
mov
dec
scas
mov
in
aad
inc
mov
dec
pop
and
lods
cwtl
ja
adc
pushf
popf
xchg
addl
fnstsw
cmc
xchg
fildl
orl
cmpb
into
outsl
inc
xor
push
xlat
arpl
xchg
nop
jecxz
add
aam
ja
test
jns
movsl
pop
into
cmp
nop
into
into
push
popa
jg
daa
mov
hlt
lcall
and
push
xchg
aas
out
push
push
pop
fs
rorb
aam
test
cmpb
or
add
les
in
fdivrl
mov
sub
test
or
test
fwait
jmp
aas
outsl
inc
xor
pop
jmp
push
imul
ret
pop
test
fdivrs
lods
sub
pop
xchg
add
lods
ljmp
adc
sbb
pop
sbb
inc
imul
jg
cmc
mov
mov
mov
aad
and
cltd
mov
lods
xchg
xor
lcall
addl
call
gs
cmc
test
pop
fnstenv
lcall
jbe
add
ficomps
push
xchg
jbe
mov
xor
gs
repnz
jmp
out
lds
lea
mov
cld
sbb
enter
cmc
cmp
sub
stos
dec
dec
xor
xchg
ror
hlt
add
jne
xor
out
inc
inc
leave
jo
out
push
lahf
mov
jb
cmc
pop
call
nop
flds
push
dec
push
pop
xor
xor
repz
jb
pop
mov
notl
xchg
orb
adc
xchg
insl
xor
movsl
xor
scas
hlt
dec
outsl
xor
es
add
push
subl
test
push
xor
adc
jbe
mov
test
aas
inc
aaa
push
iret
enter
pop
ret
cmp
jmp
mov
add
ret
repnz
pop
mov
outsb
xor
aaa
pop
std
into
or
push
int
orb
fcmovbe
jmp
sub
jl
and
addr16
test
cs
pop
movsb
fucom
arpl
aas
ja
ss
xlat
adc
cmp
add
push
and
sub
mov
out
push
push
aaa
mov
adc
out
gs
xor
pop
addl
mov
je
cmp
jecxz
scas
jmp
xor
pop
daa
cmp
cs
stos
xchg
cwtl
sbb
inc
sarb
cltd
mov
jo
mov
sbb
mov
sbb
push
in
mov
enter
mov
inc
int3
repz
pop
push
pop
mov
xor
mov
add
mov
sub
ffreep
stc
inc
cmpsl
inc
mov
add
cld
movsl
mov
das
or
pushf
inc
stc
push
and
mov
jbe
mov
cmc
adc
xor
test
lahf
jnp
xchg
dec
push
and
shlb
mov
ljmp
ror
jne
push
cwtl
xchg
arpl
in
cs
xor
cmpsl
aas
cmp
orl
int
xchg
fisttpll
sahf
enter
sbb
imul
pusha
push
xchg
loop
jo
dec
push
jle
loope
mov
out
test
mov
mov
lock
shl
push
cmp
ss
loop
pop
fidivrs
lea
inc
dec
gs
adc
or
inc
adc
test
je
push
ds
repz
mov
mov
mov
sub
mov
hlt
xor
mov
sti
or
mov
push
xchg
xor
pop
mov
lret
les
icebp
pop
addr16
sbb
jnp
push
mov
mov
hlt
iret
insl
mov
aad
cli
enter
xor
inc
mov
into
jl
xor
lods
xchg
dec
inc
movsl
movsb
sbb
add
adc
jle
lea
nop
sbb
int3
mov
popa
mov
fisubrl
std
repz
pop
fcoml
add
hlt
into
pop
test
addr16
lods
addr16
pop
mov
add
lahf
and
lahf
or
movsb
lock
mov
xor
outsl
push
xchg
stos
and
xor
jge
xchg
out
out
loopne
idivl
aam
repnz
imul
fistl
insb
out
std
mov
popa
and
push
aam
dec
roll
insb
outsl
cmp
enter
jnp
stos
push
push
inc
fisubrl
iret
adc
mov
stos
mov
adc
sahf
push
pop
lea
nop
scas
test
loope
xor
jbe
ficoms
push
mov
in
imul
dec
or
out
cltd
orb
xor
fcoms
push
bound
ret
fiadds
mov
pop
mov
outsl
xchg
add
or
jbe
xchg
or
jbe
data16
repnz
cltd
xor
mov
cld
les
out
pop
push
mov
in
popa
add
or
jae
or
jbe
mov
inc
fldcw
inc
mov
imul
xor
mov
xor
mov
pop
bound
sahf
cmpsl
clc
test
dec
inc
lcall
gs
pop
imul
out
jle
repz
inc
test
ljmp
andb
andl
dec
add
mov
loop
mov
and
lret
sbb
jo
das
push
pop
add
sbb
addr16
push
shlb
add
mov
xor
or
jg
mov
pop
mov
out
imul
push
add
adc
jmp
sbb
inc
inc
xor
or
ja
enter
shl
push
jno
xlat
xchg
sub
mov
sahf
popf
test
xor
pushf
shr
mov
mov
mov
les
jecxz
clc
mov
mov
bnd
imul
push
xchg
int
test
lods
adc
cmp
and
xor
push
out
fsubp
pop
fwait
sub
cmp
idivb
sbb
jp
and
mov
movsb
ficoml
add
in
loopne
cwtl
mov
out
pop
adc
arpl
and
ret
subl
or
cmc
jae
mov
cmp
mov
pop
dec
in
jge
in
fs
jmp
dec
out
into
cmp
sub
lcall
scas
test
and
jle
or
outsb
divb
fcomp
sub
mov
mov
lret
lahf
sahf
sbb
rorl
cmp
push
ret
scas
sbb
xchg
out
int
in
dec
cmp
xlat
cs
mov
adc
scas
fwait
sub
out
mov
fstps
hlt
push
push
jg
faddl
arpl
mov
lret
daa
push
icebp
js
cld
mov
ss
sub
adc
xchg
cmp
pop
idivl
xchg
out
cmp
lea
das
fisubrl
adc
cwtl
movsl
sbb
scas
xor
repnz
movsb
push
das
clc
ja
xchg
jecxz
pop
sub
rcll
inc
inc
lcall
mov
add
jge
dec
bound
mov
pop
test
rorb
mov
sbb
in
inc
mov
mov
xor
stos
lock
push
repz
add
push
push
xor
xor
or
push
mov
mov
movsb
sub
xor
jg
sub
jmp
xchg
stos
cmpsl
fdivrs
imul
add
fld
cmpb
out
roll
or
mov
jge
inc
jmp
add
cmpsl
lret
bound
mov
icebp
push
in
and
mov
mov
jno
pop
sub
jo
dec
pop
mov
mov
mov
mov
jge
pop
jnp
mov
scas
jp
repz
sub
je
rcl
pop
int3
cmp
add
pop
jle
sahf
daa
aaa
rcrb
cs
add
jae
add
lahf
mov
cmp
push
adc
jecxz
and
pop
call
in
pop
push
scas
and
push
mov
adc
out
in
adc
xor
push
mov
ja
pusha
sub
aad
in
out
insl
inc
sub
scas
out
and
orl
or
fs
mov
jg
jae
push
inc
int3
xor
dec
sbb
dec
mov
pushf
out
cltd
and
js
jmp
lods
adc
adc
je
sti
mov
push
xchg
inc
mov
rorb
sbb
mov
mov
daa
loope
pop
cld
xchg
push
adc
daa
mov
aas
es
sub
repnz
sahf
sbbl
add
jecxz
movsl
das
add
push
insl
cltd
sti
imull
jg
xor
adc
pop
sbb
mov
sahf
out
ret
xor
loop
lock
pop
sbb
inc
sahf
and
add
aas
adc
sbb
jnp
dec
xchg
inc
sub
xchg
aas
cwtl
jg
push
fldenv
js
pop
mov
clc
and
popa
adc
jl
mov
nop
test
and
mov
gs
xorl
mov
sub
dec
cmp
inc
xor
push
aas
lods
ss
loop
filds
pop
faddl
les
or
pop
repz
push
sahf
xchg
cmp
jge
pop
cmpl
ja
cwtl
cmpsb
jecxz
into
xlat
inc
jl
xchg
in
sahf
mov
loopne
je
aas
xchg
xchg
rcpps
mov
fnsave
xor
popf
adc
shll
outsl
xchg
in
movb
sub
fucomip
in
or
in
cmp
and
pop
sbb
pop
and
mov
mov
or
ljmp
cmp
cmp
les
mov
test
pusha
loope
xor
sbb
adc
repz
add
stos
dec
mov
sub
or
pushf
mov
stos
jbe
pushf
mov
test
into
out
int
rcl
xor
mov
dec
pop
inc
cmpsl
pop
mov
xor
cmp
inc
jnp
and
pop
adc
xchg
dec
rcr
dec
cmpsl
test
pop
int3
xchg
mov
and
cmp
clc
xchg
loop
pop
testl
adc
rcr
sbb
add
push
jp
xor
mov
pop
sub
push
cmpsb
lahf
and
push
mov
or
loop
in
xchg
add
pop
lahf
push
lods
scas
xchg
jle
notb
pop
pop
or
jmp
inc
lods
dec
pop
sahf
ret
inc
xchg
stc
test
push
test
mov
cld
lret
xchg
lock
push
or
dec
imul
inc
dec
mov
inc
sbb
mov
mov
sbb
aas
test
pushf
fisttps
inc
jmp
nop
fdivrs
xchg
das
xchg
jne
leave
jo
jp
mov
test
mov
outsl
inc
outsl
icebp
jne
scas
repz
jo
mov
repnz
mov
lea
lods
push
inc
cld
push
imul
mov
lret
jne
cmpb
xor
cwtl
fistl
mov
aas
sbb
inc
call
or
movsl
inc
mov
mov
mov
adc
mov
nop
jne
xchg
jne
pop
mov
push
std
scas
loop
or
dec
and
sbbl
aad
mov
testl
inc
ja
stos
xor
scas
sbb
shll
xchg
mov
sub
sub
jmp
sbb
das
arpl
in
mov
dec
mov
stc
cmc
mov
test
and
jle
mull
jl
inc
inc
add
cmp
cmp
adc
jmp
or
pop
sbb
xor
and
mov
into
mov
mov
popa
xchg
push
sbb
jb
xchg
mov
arpl
sub
pop
adc
ja
test
stos
mov
and
jle
cmpsb
dec
mov
sarl
mov
xor
inc
push
xor
inc
push
into
shlb
test
pusha
jno
loope
sub
dec
fldt
dec
jns
cmp
js
sub
xchg
loop
sub
lahf
jb
xor
mov
fimuls
inc
stc
mov
in
push
jne
mov
xlat
ret
mov
mov
loop
ret
add
subb
push
repnz
pusha
les
or
out
jae
scas
mov
dec
sbb
shrb
scas
pop
jmp
mov
inc
cmp
xchg
dec
test
xchg
mov
push
cli
scas
in
push
imul
or
and
xchg
inc
xor
xchg
mov
cmpsl
push
test
out
inc
ss
pusha
loope
mov
xchg
sub
sbb
sti
in
push
outsb
push
and
inc
cmpsb
or
es
mov
lea
outsb
inc
test
jg
pop
xor
jmp
fldt
iret
les
jmp
gs
mov
in
push
in
leave
xor
pusha
out
or
int3
pop
push
jbe
push
movsb
xchg
mov
movsl
imul
mov
mov
loop
mov
imul
int3
cmp
xor
or
jl
pop
push
push
xchg
sbb
jnp
xorl
add
dec
xchg
jmp
inc
lock
xchg
lea
aas
push
xchg
ret
push
pop
pop
out
lea
and
das
mov
cmpsb
mov
pop
popl
lret
sub
test
daa
mov
sbb
xchg
pop
lcall
or
ljmp
sbb
jnp
call
xor
pop
mov
repnz
outsl
pusha
mov
inc
adc
jmp
xchg
jge
dec
cmp
adc
mov
push
cltd
pusha
or
out
ds
sbb
inc
hlt
or
aam
cwtl
movsl
pushf
ret
inc
lea
push
jno
stos
mov
jge
fisttpl
push
in
sbb
and
aam
xor
mov
sbb
movsl
js
mov
sub
mov
call
shlw
add
iret
lds
lods
dec
fisttps
dec
push
dec
test
cmc
sti
jb
fistps
and
insb
imul
sbb
sub
cmp
aad
daa
push
dec
xor
jmp
out
cltd
sub
or
cltd
mov
jmp
popa
xchg
dec
fsubs
mov
movsb
jecxz
lods
xchg
arpl
out
sbb
pusha
js
rol
shll
ss
mov
and
rolb
movsb
call
loopne
sub
xor
push
mov
sahf
icebp
xchg
sahf
cltd
ljmp
and
jp
pusha
mov
mov
jns
add
mov
out
xchg
out
in
movsl
stos
or
pop
mov
sub
scas
out
jae
repnz
xchg
and
pop
jae
test
mov
inc
mov
daa
lahf
jge
shll
xchg
xchg
jg
mov
push
and
pop
lds
clc
scas
aaa
jae
xchg
and
repz
mov
mov
pop
pop
cmpsb
std
mov
inc
hlt
mov
mov
sbb
rclb
cltd
bound
loopew
dec
shl
jne
frstpm(287
pop
cmpsl
dec
push
pop
adc
dec
les
in
scas
jne
jns
xchg
addb
push
cmp
dec
mov
dec
testb
dec
xor
xchg
sarb
jno
pop
mov
dec
adc
in
mov
xchg
adc
pop
test
inc
xchg
jg
inc
movsl
call
mov
add
cmpb
pop
int
lods
xor
adc
inc
imul
movsl
movsb
daa
insl
popa
dec
sub
xchg
inc
cmp
sbb
push
pop
or
loop
and
pop
lahf
in
pushf
or
pop
test
sub
jle
int3
mov
xchg
stos
cmp
stos
mov
in
mov
push
pop
lcall
xor
imul
mov
aas
inc
daa
dec
jg
lret
push
xlat
lds
cvttps2pi
sti
xor
mov
bnd
sahf
mov
push
ret
je
rcrl
dec
dec
int
addr16
cmp
aad
mov
xor
and
adc
ds
mov
add
cmp
adc
lock
fcompl
lret
aam
xchg
inc
fs
imul
mov
adc
jb
leave
ret
cmp
sub
inc
xchg
repnz
mov
jns
lea
sub
xchg
sbb
enter
lcall
mov
xchg
out
rol
mov
leave
fisubl
cmp
shll
and
mov
dec
adc
aas
or
popf
push
fisubrl
data16
lret
imul
ret
out
icebp
out
lods
cltd
scas
sub
dec
mov
jne
mov
sub
ret
xor
outsb
sub
adc
push
adc
ficompl
jo
xchg
or
inc
add
flds
in
or
cmpsb
ljmp
jne
jb
mov
sub
jle
faddl
insl
cmpsl
cli
adc
sbb
enter
aas
lcall
sbb
cmc
in
jecxz
or
sub
or
lock
push
fs
mov
jmp
pop
adc
inc
mov
sbb
insl
enter
out
lcall
out
add
stc
in
xlat
cmpsb
xor
xchg
jecxz
mov
pop
push
hlt
cmp
cmp
mov
rcll
lock
pop
ror
aas
push
xchg
lret
mov
inc
in
pop
inc
dec
ret
js
in
fcoml
jp
mov
inc
test
mov
sbb
dec
icebp
xchg
dec
ja
mov
mov
jp
mov
cmp
add
mov
xor
ret
imul
jae
cmp
test
mov
cmp
xchg
daa
sub
adc
and
lods
in
mov
jnp
inc
testb
xchg
in
mov
sbb
push
dec
lock
pop
cmp
movsbl
jle
mov
xchg
js
sbb
aas
xchg
push
lods
xlat
sbb
jp
movsl
inc
dec
sbb
into
sub
cmpl
sbb
dec
out
jmp
ja
pop
xor
jmp
mov
mov
inc
insb
add
jmp
ds
xor
or
dec
mov
test
int
stos
into
xchg
lods
andl
push
xchg
pop
adc
and
pop
jmp
cmpsl
inc
repz
mov
mov
rorl
sbb
jno
popf
rol
cmp
sbb
aaa
jge
insb
mov
dec
sarb
xor
jo
and
or
sub
sub
dec
sub
cmp
push
cmpl
dec
pop
push
and
and
lock
pop
arpl
and
xchg
je
mov
jo
mov
and
or
jb
ret
xor
mov
inc
sbb
mov
andl
mov
pop
push
xchg
sbb
mov
lock
es
adc
or
sub
mov
xchg
adc
adc
jo
cmc
or
daa
ret
fidivl
jmp
sub
imul
ja
dec
sahf
mov
sub
jbe
stos
hlt
inc
jne
push
gs
and
imul
mov
fmuls
or
pop
cs
or
loopne
roll
xchg
inc
das
out
clc
sbb
xor
cli
pop
add
cmpb
ret
and
xchg
adc
xor
inc
hlt
and
sub
ljmp
jg
loop
mov
inc
daa
cli
insb
dec
inc
mov
imul
outsb
push
ja
aam
pop
shlb
sbb
sub
mov
out
sbb
scas
adc
rcrl
mov
lds
test
add
je
mov
data16
int3
int
fldt
pop
dec
movsl
fs
jae
scas
dec
ja
or
xchg
and
mov
lea
xlat
inc
mov
push
sti
lds
xchg
lret
cmp
jno
add
ds
xchg
fwait
out
mov
inc
pusha
cltd
lahf
bound
push
inc
dec
dec
dec
cli
clc
les
es
mov
inc
xor
xlat
sbb
cli
jge
sub
push
ret
aaa
push
push
cmp
nop
icebp
jno
mov
jl
jns
mov
xorb
sub
out
add
loopne
lock
fimull
bound
pop
int
mov
pop
dec
int
jl
cwtl
outsl
inc
jmp
out
mov
xchg
mov
fs
inc
add
mov
cltd
add
psubusb
push
je
sbbb
das
rol
cmp
rcrl
dec
movsl
pop
addr16
pop
ss
notl
imul
test
mov
adc
and
jno
mov
int
pusha
inc
in
or
cmp
xchg
arpl
dec
mov
xlat
shrb
out
cmp
xchg
mov
shl
push
jmp
mov
fdivrl
cmpxchg
imul
xchg
pop
repnz
mov
mov
mov
jb
and
and
ficompl
xchg
cwtl
mov
das
xchg
cmp
repnz
push
sti
push
sbb
mov
or
cld
adc
or
sbb
inc
mov
add
sub
leave
popa
sbb
js
add
jp
insl
cltd
sbb
subb
das
loope
fidivl
fstpt
mov
push
pop
sahf
negl
and
dec
daa
cwtl
lock
inc
fs
xlat
lea
add
jb
movsb
xorl
clc
xchg
iret
and
mov
push
mov
sahf
notb
sub
mov
xor
or
arpl
xor
fcomps
pop
dec
test
in
mov
push
sbb
hlt
loope
ret
les
sub
xor
cmpsb
stos
mov
xor
sbb
fs
mov
fisttps
cld
sbb
hlt
jbe
jae
mov
bound
repnz
sub
mov
push
jb
rcll
bound
sbb
outsl
mov
addb
ss
add
sbb
sbb
outsb
and
std
into
and
jb
outsl
dec
add
je
sbb
fsubrs
lds
and
lret
in
mov
emms
lock
popa
testb
adc
dec
pop
sbb
aad
sbb
jae
repz
xchg
ud1
loopne
sub
jno
call
mov
add
adc
mov
jle
cmp
bound
xchg
pop
dec
sbb
mov
cld
mov
push
adc
out
pop
xor
ret
pop
test
jge
jns
mov
pop
stos
cmp
adc
je
cmp
xchg
fucom
dec
xchg
test
daa
dec
mov
add
repz
imul
inc
bnd
dec
jnp
test
sub
pop
cmc
mov
or
jbe
push
jg
mov
stos
push
xchg
jle
sti
int3
cmp
rcl
out
fsubl
mov
icebp
xchg
scas
push
mov
jb
pop
nop
int
pop
mov
push
cs
jno
mov
jmp
pop
mov
and
add
ss
in
jmp
ret
push
out
repnz
dec
pop
ss
sti
nop
sarl
cmc
movsb
inc
or
xchg
and
sbb
xchg
mov
imul
xchg
sub
jp
cs
xchg
daa
adc
inc
mov
ss
add
daa
mov
insb
leave
dec
incb
das
jl
push
mov
adc
add
jg
dec
mov
jb
test
mov
stc
sub
sub
roll
xchg
cmpsl
jp
lods
loop
push
pushf
mov
je
pop
sbbl
jnp
pop
aad
cmp
lahf
pusha
inc
add
imul
xchg
xchg
fstpl
dec
es
rcrl
lcall
add
jbe
js
cmp
sahf
add
mov
pop
das
lods
cld
scas
push
out
inc
add
ret
mov
dec
xor
rol
cmpsl
mov
mov
ret
dec
mov
jno
mov
std
loope
loop
pop
push
stos
xor
out
loop
enter
pop
push
fstps
dec
out
cwtl
pop
jb
jp
xor
xlat
add
push
pop
call
out
lea
dec
xchg
sbb
into
data16
out
fiadds
jge
inc
adc
pop
sbb
dec
pop
call
out
cwtl
push
shrl
sub
roll
sbb
mov
fcom
aad
xlat
inc
xor
pop
inc
je
ret
sbb
sub
cmp
mov
test
adc
scas
push
test
mov
dec
hlt
mov
dec
jne
mov
arpl
jge
dec
pusha
outsl
mov
pop
push
adc
fisubrs
pusha
hlt
xchg
sbb
rcll
xchg
add
je
adc
pop
cld
das
lahf
aam
sbb
out
lods
int3
xlat
jl
incb
icebp
mov
sarb
outsl
into
mov
shll
pop
cmp
mov
mov
test
out
push
in
lret
das
out
xor
sbb
jno,pt
adc
rcll
mov
outsb
int3
push
xor
push
cmp
sub
addl
enter
fcmove
movsl
test
fiadds
pop
js
ds
sbbl
mov
lcall
jge
mov
mov
cmp
pop
jmp
add
mov
aam
stos
inc
lahf
cmc
pushf
call
push
mov
mulb
xchg
xchg
out
sbbl
sbb
cmc
sbb
nop
aaa
pop
adc
scas
xchg
scas
jae
es
inc
xchg
lret
std
xor
in
pushf
movsl
aas
add
sahf
mov
nop
popa
mov
mov
sbb
xchg
mov
cltd
jle
mov
nop
pushaw
rcr
mov
xor
lock
add
push
test
sbb
in
rcl
sbbl
popf
cmc
mov
addr16
enter
sbb
sbb
aas
clc
adcl
test
inc
testb
dec
xchg
daa
addr16
pop
jnp
sub
loop
rclb
jns
xor
xor
inc
cli
sbb
jle
mov
mov
push
addr16
fisttps
push
xchg
cmp
inc
push
mov
lods
mov
mov
int
push
shll
and
fistpll
push
sahf
es
and
lahf
aaa
jbe
add
dec
outsl
xchg
icebp
scas
frstor
jno
loopne
cmp
jae
and
mov
mov
scas
pop
pop
jmp
cmpsl
push
mov
das
pop
in
push
jne
inc
push
jl
les
adc
idivl
ja
or
sbb
hlt
cmpsl
add
lods
aaa
hlt
xor
cmp
fsubrl
fcoml
sub
dec
cmpsb
test
push
dec
mov
ret
mov
aas
pop
or
xchg
incb
pop
push
ljmp
ss
gs
and
add
test
scas
push
stos
pop
mov
adcb
loop
cmp
and
repnz
test
xor
mov
repnz
std
push
out
push
mov
ljmp
sub
test
mov
inc
cwtl
and
nop
notl
lcall
fdiv
ss
xor
inc
test
movsl
and
cli
mov
push
das
jne
mov
leave
xor
js
jmp
jbe
ss
fdivl
bound
sbb
sahf
xchg
in
lret
jbe
cmp
loopne
out
mov
cmc
sub
cmpsb
pop
popf
mov
sarb
push
mov
imul
stc
gs
sub
cmpsl
xor
cmpsb
inc
jmp
mov
ds
inc
test
fstps
dec
xchg
adc
push
xchg
dec
jbe
mov
imul
lods
test
lods
jp
mov
outsb
add
or
add
mov
cli
mov
data16
inc
in
rclb
xor
sub
push
out
dec
pop
mov
clc
cmp
jbe
aam
sbb
adc
lods
test
ffreep
and
sub
sub
movsl
es
add
dec
inc
add
jl
push
or
pop
movsl
mov
stc
add
push
inc
mov
movsb
adc
bound
pop
stc
dec
repnz
fs
lods
mov
mov
mov
add
int
xchg
pop
outsb
mov
pop
jl
xor
sarb
nop
and
sbbl
aad
lahf
jmp
je
ja
ja
es
les
aas
dec
xchg
les
aad
mov
hlt
cmp
scas
inc
rorl
arpl
shr
mov
sbb
call
adc
cmp
mov
inc
aas
adc
shrb
enter
addr16
roll
mov
xor
outsb
sar
jecxz
loope
and
fisttps
adc
cmp
dec
dec
pop
and
fildl
in
mov
addr16
cmp
test
lcall
xchg
repnz
pushf
dec
add
into
and
arpl
jno
call
movsl
push
mov
add
and
aad
lahf
ret
inc
fiaddl
out
cmpsb
adc
mov
addr16
xchg
mov
hlt
repnz
rorl
and
pop
das
cwtl
ror
push
ljmp
jns
jg
in
ljmp
decl
push
inc
dec
xchg
loop
push
lock
jae
sbb
mov
xor
ret
imul
mov
inc
add
aaa
push
push
mov
lret
add
aaa
cmpsb
gs
pop
rorw
mov
mov
lahf
clc
jle
and
mov
ds
divb
xchg
pop
mov
popf
xlat
fwait
push
mov
pop
xor
repnz
sub
outsb
hlt
loopne
inc
pop
and
adc
decl
xchg
mov
push
outsl
inc
test
mov
addl
mov
cmp
sbb
mov
loope
inc
andl
out
mov
mov
sbb
pop
pop
loope
push
and
push
stos
pop
jnp
cmp
xor
lods
test
lret
in
mov
dec
sub
into
or
in
pushf
mov
dec
inc
cmp
inc
fnstenv
insb
out
out
out
test
in
shll
cltd
mov
shlb
and
inc
insl
mov
fidivl
rclb
xlat
aad
insl
sub
jb
pop
xchg
pop
push
sub
inc
mov
push
ds
and
xor
or
xor
ret
mov
mov
jmp
xchg
je
ss
movsl
xor
sub
ds
sbb
clc
insb
mov
imul
xchg
fisubrl
adc
xor
ret
into
dec
fs
sub
dec
imul
push
and
adc
mov
hlt
and
test
lock
repz
mov
push
jne
mov
adc
lret
aaa
fs
test
sbb
shlb
test
cmp
sub
jbe
jno
loop
dec
xor
cmp
or
and
jns
shr
movsl
out
leave
or
mov
call
scas
stos
cmp
insl
jmp
push
and
fwait
xor
push
shll
xor
lea
xor
mov
cmpb
jns
cld
sbb
cmpsb
std
pop
in
ja
or
lea
pop
or
je
out
cmp
sbb
mov
xchg
repz
sbb
call
je
movsb
int
psrlw
push
or
aam
xor
jmp
mov
je
decb
lret
sarb
pop
jae
popa
adc
inc
mov
lods
xchg
jo
mov
popf
fnsave
insl
cli
lods
adc
roll
aaa
sbb
cmc
lods
aad
popa
push
arpl
xchg
mov
lret
lock
subl
sahf
dec
orb
push
sbb
test
jo
dec
lret
hlt
cmp
loope
mov
pop
std
mov
adc
and
pop
jae
sbb
xor
inc
or
jnp
mov
xor
xor
arpl
xchg
cltd
xorl
dec
fiaddl
cltd
icebp
stos
stos
mov
leave
push
sahf
imul
push
inc
icebp
pop
outsb
cmc
dec
mov
gs
scas
stos
inc
add
inc
add
mov
pop
cmp
jle
adc
pop
mov
mov
inc
pop
fcomps
xchg
sbb
popl
test
stc
xchg
js
std
xchg
fimull
xchg
ss
mov
jbe
pop
push
and
jo
fdivp
ljmp
push
cmp
ret
jbe
mov
push
in
arpl
sti
lock
xchg
bound
xchg
aas
jl
int
ljmp
nop
movsl
pop
sbb
cltd
aad
dec
pop
cmp
clc
leave
lret
dec
sub
sub
pop
adc
lahf
mov
pop
mov
mov
rcrl
add
mov
sub
daa
adc
cmp
cmp
xchg
pushf
scas
jecxz
or
pop
scas
lods
mov
and
out
enter
sub
fwait
test
leave
mov
xchg
cmpsb
test
dec
inc
popf
insl
movsl
cmpsb
lcall
stos
popa
jmp
ficoml
mov
lods
mov
sbbl
jle
or
mov
mov
aaa
dec
out
xorb
scas
xchg
jns
mov
imul
pop
mov
cld
jl
cmc
es
sub
icebp
fdivp
stos
cmc
xchg
pushf
sub
add
sub
mov
mov
pop
ret
jae
subb
shrl
sub
ja
mov
jge
loope
xor
mov
xchg
fldl
inc
icebp
arpl
jge
out
fldenv
push
jne
cwtl
cmc
cmp
outsl
stos
xor
jecxz
push
pushf
fwait
pop
mov
push
xor
push
push
jmp
and
xor
insb
mov
in
sbb
push
or
out
dec
sti
or
pop
pop
in
jle
fucomp
lods
sub
inc
daa
ss
inc
js
enter
test
outsl
jmp
test
sub
sbb
sbb
sub
insb
sub
daa
mov
pop
xor
inc
adc
push
push
fcoml
inc
and
andl
jno
arpl
ds
loopne
fisubl
leave
inc
push
lret
js
in
into
popa
in
fmul
mov
or
rcl
inc
cmp
call
push
idivb
repz
negl
dec
int
jnp
or
pop
sub
lock
call
xor
out
aad
mov
cltd
push
dec
outsb
mov
in
pop
cltd
clc
fwait
push
cmp
and
repz
in
js
fcmovne
jp
or
jb
ja
mov
inc
mov
jae
frndint
lcall
lea
sub
aam
stos
int3
inc
jp
pop
and
inc
pop
loope
add
xchg
shlb
adc
add
icebp
push
inc
stos
out
cmp
imul
dec
push
add
sub
shlb
ficoml
lods
call
jne
ja
cmp
rorl
adc
test
jbe
mov
push
sub
inc
fidivrl
xchg
mov
push
movsl
jb
rorl
pop
je
push
setno
push
mov
es
mov
int
mov
cmp
ja
imul
lods
mov
frndint
cmpsl
scas
xchg
or
jne
mov
adc
push
dec
sbb
pop
mov
adc
fsubrl
outsl
and
inc
cld
daa
sub
cld
imul
fnstcw
or
nop
ja
xchg
cmpsb
jne
lahf
rcrl
daa
clc
into
mov
call
in
cmp
xchg
pop
int
sti
mov
add
lret
lds
ret
addr16
aam
fsub
pop
mov
cld
push
or
andb
jmp
push
xchg
dec
dec
jbe
imul
fsubl
arpl
outsl
jmp
mov
cmp
xchg
mov
mov
mov
push
jp
unpcklps
mov
push
lret
inc
outsb
inc
movb
pop
xchg
cld
xor
sbb
stos
ficompl
adc
pop
mov
call
inc
aam
pop
push
or
sbbb
mov
aaa
adc
aas
subb
aad
outsl
cs
jnp
add
int3
sub
xor
mov
cmp
fstps
sbb
aas
push
jnp
aaa
inc
xchg
sti
fwait
movsl
lea
popa
pop
call
fistpll
dec
notl
fwait
pusha
pop
sub
or
dec
add
pop
mov
fidivs
pop
filds
xchg
lea
outsl
int
adc
dec
out
and
lock
and
cmp
push
pop
inc
gs
mov
push
repnz
lcall
loope
shl
je
cmpsb
fiaddl
pop
and
leave
mov
cwtl
lods
pop
inc
out
sbb
ss
mov
jne
xchg
outsb
test
adc
cs
add
cmpsb
xor
lock
roll
loopne
int3
jno
xor
int
jno
test
adc
int3
fimull
or
sub
xor
sbb
call
mov
fwait
imul
imul
dec
shll
shrl
hlt
push
mov
dec
je
jo
mov
out
ficoms
mov
jo
cmpsb
mov
mov
les
lret
loope
ret
imul
dec
mov
aas
test
jmp
rcll
inc
pop
dec
pop
mov
in
fimull
or
insl
pop
loop
movsl
lahf
add
and
and
jae
fidivrl
enter
cmpb
mov
xor
jne
xor
stc
scas
dec
out
inc
dec
mov
repnz
loope
pop
out
test
in
sti
sbb
lds
cli
jne
inc
mov
fdivrl
cli
in
lods
lcall
inc
push
push
jle
jl
dec
mov
mov
pop
fldt
les
adcl
fcoml
enter
dec
sub
test
and
xor
jl
pop
jle
or
lcall
lahf
adc
and
mov
nop
add
jno
and
test
ret
mov
jp
sub
sarb
sub
pop
push
xchg
cmp
out
mov
icebp
xchg
divl
insb
scas
jp
sti
mov
push
cmp
outsl
pushf
sbb
push
push
xchg
xor
dec
ds
nop
cmp
es
scas
cmp
stc
imul
jl
mov
adc
lods
leave
cwtl
fcompl
mov
sbbb
adc
push
pusha
sti
xor
xchg
fists
mov
testb
or
xor
mov
pop
es
sarb
push
pop
stc
xchg
lea
push
push
xor
jbe
test
cmp
jo
or
decb
xchg
insl
jecxz
adc
mov
stos
pop
adc
jge
cmp
arpl
mov
js
mov
adc
xchg
jecxz
loop
jmp
add
sbb
pop
sub
xor
sbb
push
cli
jne
ljmp
nop
scas
loop
mov
imulb
dec
cmpb
scas
mov
out
stc
push
imul
dec
hlt
rorb
adc
dec
frstor
call
aaa
lock
js
and
dec
mov
cmp
out
inc
push
xor
xor
add
popf
push
add
dec
pushf
jae
test
icebp
incl
jmp
enter
popf
inc
pushf
fsubp
jnp
in
or
test
vpaddsb
dec
push
cwtl
push
mov
ds
jae
inc
xchg
fcoms
dec
and
dec
jle
sub
inc
js
jp
jle
in
cs
mov
push
sub
xchg
out
xchg
stos
dec
dec
in
fnsave
rorb
test
iret
xor
cmp
and
pop
sub
mov
fisubrs
mov
xor
std
movsb
mov
fidivs
and
mov
les
into
into
sub
call
lahf
jne
scas
in
jb
sbb
pusha
mov
mov
push
sarl
ds
pop
cmp
push
mov
sbbb
popa
push
out
jb
inc
mov
mov
and
inc
into
movsl
shrb
jecxz
and
stc
inc
lods
imul
mov
xchg
aad
sub
cld
lret
cmpsl
in
enter
pop
addr16
jle
insb
and
pop
int3
adc
lahf
out
or
rcr
jmp
test
sbbl
inc
jmp
jno
add
jp
cmp
add
icebp
mov
or
ljmp
dec
inc
jmp
jge
into
in
lret
xchg
sub
cmp
inc
pop
push
inc
cmp
pushf
mov
inc
fcoms
xchg
mov
faddl
mov
sbb
pop
push
ret
inc
cld
inc
or
adc
mov
pushl
ds
int
mov
aad
std
adc
aas
jmp
mov
fnstcw
mov
jno
cmp
test
int3
adc
ljmp
pop
popf
scas
sbb
sbb
scas
test
int
in
inc
sub
mov
inc
mov
push
add
test
negb
std
je
shll
js
call
cwtl
cmp
mov
arpl
mov
data16
hlt
mov
sub
rclb
fwait
imul
pop
fimuls
int
pop
nop
mov
fisttpll
push
int3
adc
jg
sub
insb
add
lret
xchg
xor
lea
cmpsl
call
add
stc
aad
lods
dec
cmova
js
jo
cmp
mov
inc
fisttps
add
outsb
shlb
jns
and
test
into
mov
movsl
dec
test
mov
xchg
sub
or
add
dec
and
test
aad
xor
nop
push
mov
inc
mov
jmp
scas
iret
mov
dec
loopne
fldenv
mov
dec
imul
dec
js
xchg
cli
insl
add
dec
mov
fbstp
aad
cmp
mov
jnp
icebp
sub
cmp
push
inc
jmp
xor
fcompl
push
out
mov
test
div
les
or
mov
inc
test
clc
das
ss
mov
jg
cmp
jae
insl
mov
js
dec
aad
xchg
cmp
fwait
jns
cmp
sub
ljmp
or
gs
sbb
scas
pop
mov
int
outsl
jb
mov
subl
out
add
jne
addr16
sub
ja
xor
lret
mulb
outsb
or
test
add
sub
bound
sbb
pop
lds
int3
ret
fisttps
notb
mov
pop
jnp
movb
pop
bound
and
ja
mov
into
add
push
call
jl
test
or
jb
cmpsb
mov
adc
stos
mov
xchg
or
dec
int
pop
inc
lock
pop
pop
mov
popa
fwait
push
cmc
and
inc
jnp
fidivs
jo
enter
pop
push
adc
inc
mov
imul
adc
leave
cltd
aam
or
and
or
outsb
jmp
jns
mov
add
int3
rorb
jb
mov
push
lahf
cmpsl
mov
cwtl
push
fidivs
and
xchg
in
push
cmc
push
sub
or
fs
out
scas
movsb
cmpsb
or
xchg
repz
cs
adc
std
xor
xlat
sub
pop
sbb
push
or
fisubl
ljmp
dec
and
js
in
sbb
fistpll
sub
inc
mov
and
pop
sbb
cs
push
scas
cltd
pop
shll
adc
pusha
int
sub
mov
rcrb
sbb
xor
dec
scas
fdiv
push
sub
sub
stos
add
enter
fsubs
scas
sbb
adc
in
or
popf
in
sub
fwait
clc
dec
lds
sbb
test
outsl
push
fildll
loopne
pop
jne
mov
and
push
in
cltd
int3
movsl
hlt
aam
je
repnz
fcoml
jp
lahf
push
push
pusha
mov
xchg
fsubl
or
aaa
cltd
subb
aad
fdivl
aad
mov
ret
arpl
mov
xor
mov
movsl
mov
pop
repz
lahf
int3
xor
push
loop
aas
into
add
out
add
ja
bound
fsubl
push
jecxz
fdivrs
cli
adc
jmp
cltd
mov
push
cmp
add
cli
xchg
fists
inc
pop
cmp
cwtl
inc
sbb
xchg
std
lahf
xchg
cmp
fstl
daa
aaa
dec
addb
add
pop
mov
pop
pop
cmp
sbb
and
pop
pop
fnstcw
jmp
cmp
jl
sub
jge
enter
inc
lods
repz
das
pusha
insb
imul
dec
sbb
adc
inc
insl
addr16
mov
arpl
sbb
adcl
and
enter
jno
movl
adc
popf
ret
mov
jb
mov
mov
lret
jne
fbstp
fwait
push
sbb
sti
sbb
dec
lods
mov
std
dec
xchg
test
mov
mov
out
pop
adc
inc
push
popf
int
xor
lret
cmpsl
jl
add
outsl
sbb
push
push
movsl
inc
xor
xor
faddp
ss
nop
xor
js
xchg
call
mov
lock
add
mov
or
in
lds
int3
imul
rorb
push
add
inc
or
push
in
add
imul
adc
mov
adc
add
fdiv
ja
mov
jae
dec
scas
insl
xchg
loopne
jns
aaa
cmp
out
adc
fbstp
lock
fisubs
pop
cwtl
jbe
mov
imul
bound
dec
int
lock
clc
cmc
daa
xchg
roll
in
and
popa
fxch
hlt
adc
push
lret
into
pushf
dec
mov
add
je
pop
in
pop
fdiv
imul
dec
push
rolb
sbb
fwait
xchg
push
dec
mov
pushf
adc
out
es
repnz
and
inc
call
mov
mov
popa
shr
test
inc
inc
fst
mov
push
cmp
inc
dec
jae
cmp
fs
add
imulb
mov
add
aam
mov
into
ret
jae
ud1
ficompl
jge
out
mov
sbb
mov
in
fs
in
xor
test
hlt
mov
or
rcrl
or
nop
inc
inc
dec
or
cmpsb
push
add
push
or
mov
mov
lret
ds
xchg
adc
add
xor
addl
stos
xchg
jno
enter
outsl
xor
fildll
stos
pop
jae
xor
sub
add
fidivs
sub
andl
mov
enter
sbb
push
mov
stos
cmpl
cltd
push
sti
mov
xor
inc
rorb
mov
int3
pop
pop
dec
aam
adc
mov
cmp
inc
jl
fsubs
and
jl
xlat
jno
pop
cwtl
inc
incb
cmc
cld
jnp
sub
jmp
outsl
sti
sbb
push
jg
cwtl
jae
mov
popa
aas
or
shl
jbe
or
adc
sub
dec
jns
js
xchg
sti
sbb
daa
aad
sahf
mov
imul
push
dec
ret
xor
mov
mov
faddp
mov
mov
mov
jge
dec
mov
inc
jge
pop
sbb
sbb
shl
andl
fiaddl
add
adc
push
push
xchg
iret
xchg
in
jg
pop
mov
mov
es
loop
xchg
push
push
dec
push
ret
sahf
xchg
jb
enter
xchg
or
divb
mov
cmovo
lcall
loop
xchg
jmp
xorb
mov
ret
xor
out
repnz
pusha
scas
inc
std
xchg
cs
jecxz
push
movsb
cmpsl
xchg
cmp
inc
scas
mov
inc
push
cltd
mov
insb
ret
ljmp
or
or
adc
addb
or
in
aas
cltd
jnp
jb
icebp
mov
addr16
pop
and
jae
mov
mov
xchg
cmp
adc
dec
sarb
mov
dec
add
mov
sarb
sarl
inc
out
cmp
insl
mov
testl
rcll
insb
or
push
pusha
repz
pop
and
es
int
xchg
stos
aam
fiaddl
lcall
bound
pop
or
sbb
stc
mov
dec
add
sub
fistl
pop
out
jne
mov
inc
push
ljmp
ret
hlt
mov
adcl
cld
insl
push
pusha
pop
mov
jns
imul
sarl
gs
mov
in
add
in
ret
push
mov
inc
cmp
insl
push
cs
xor
jne
pop
pop
sbb
daa
call
movsb
aaa
pusha
add
les
fs
mov
adc
xorl
add
aam
outsl
xor
outsl
inc
xchg
aam
dec
xchg
addr16
xor
cmpsl
data16
dec
test
push
pusha
fnstsw
movsl
ljmp
or
insl
mov
enter
mov
aas
in
inc
inc
push
imul
bound
lcall
stc
and
popa
mov
push
cld
ss
add
outsl
mov
jg
xchg
pushf
xor
jno
push
mov
sub
lcall
out
into
mov
adc
lahf
lcall
cs
pop
repz
cmpl
shlb
mov
inc
sub
rcrb
dec
jge
fs
pop
stos
daa
dec
aam
adcl
ja
movsb
xchg
inc
inc
xchg
sub
in
scas
jne
daa
mov
mov
stc
push
cld
fnstsw
outsb
mov
xchg
call
ss
xchg
fsubrs
in
mov
mov
into
out
push
jmp
cmp
mov
data16
adc
aaa
xlat
sbb
outsb
xchg
test
cmp
fbld
fsubrl
and
hlt
cltd
and
les
push
or
pop
or
shl
xor
sti
mov
repz
mov
ja
sub
cld
push
mov
cmpb
into
lock
pusha
adcb
daa
mov
icebp
clc
pop
mov
es
jmp
dec
xor
push
iret
fnstenv
and
roll
cltd
ljmp
repz
cmp
inc
push
pop
movsb
and
push
ret
outsl
and
out
inc
inc
sbb
rolb
pop
xchg
inc
add
push
mov
jl
sub
cmc
and
push
pop
dec
scas
mov
and
icebp
xchg
add
mov
mov
inc
mov
or
add
js
insl
cmp
cmp
cltd
movsb
sti
repz
bound
sub
std
out
adc
lret
sub
jecxz
push
clc
xor
push
int
adc
adcl
xor
je
add
mov
stos
mov
enter
adc
leave
ja
in
and
mov
outsl
jbe
add
jae
inc
push
push
push
lahf
stc
pop
in
inc
insb
mov
push
xchg
push
jbe
dec
inc
ja
insb
xchg
push
pushf
fdivs
jle
ljmp
ret
push
icebp
rcr
or
nop
test
mov
sbb
push
fs
pop
shll
add
fisttpl
push
cwtl
in
and
hlt
sbb
cwtl
dec
push
pop
pop
shrb
and
mov
sub
lret
out
out
mov
mov
push
aad
cli
lcall
or
xor
sbb
fisttps
sbb
dec
adc
fnstenv
xchg
lahf
mov
out
rol
pusha
sbb
and
cmovg
xor
adc
mov
subl
scas
and
call
stos
rorb
in
out
push
or
js
imul
jle
cli
test
movsl
in
ret
int
push
jecxz
bound
pop
cwtl
outsb
ret
into
fstl
fisubl
pop
jle
cmpsb
jnp
aaa
pop
xor
add
enter
pop
push
insb
or
cmpsl
clc
xor
std
pop
addr16
fdivrs
push
xchg
mov
loopne
pop
dec
dec
cmp
mov
aas
cmc
cmc
jne
push
xlat
pop
cmpl
repnz
or
add
test
icebp
hlt
xor
mov
pushf
inc
pop
lock
andl
shrl
je
and
push
sub
dec
out
cmp
push
dec
xchg
jo
jl
xor
out
mov
xchg
mov
out
cmpsb
out
in
jg
inc
movsb
inc
and
ret
mov
in
jns
enter
icebp
mov
lods
mov
mov
xor
xor
outsl
pop
mov
call
or
jecxz
stos
add
adc
out
push
mov
leave
sub
cli
stos
lret
sub
pop
jp
insl
stc
leave
les
push
into
mov
add
lea
in
dec
fnsave
and
mov
lock
popf
mov
pop
mov
pop
mov
jmp
test
and
fs
lock
je
lods
or
sbb
jo
in
add
xor
movsl
stc
xchg
jp
fs
push
pop
push
jle
ljmp
push
sbb
xlat
and
pop
add
lods
fldenv
sbb
rorl
mov
imul
and
out
mov
push
into
lods
xor
and
jnp
fcompl
push
mov
pop
inc
or
aam
not
dec
xorb
fisubrl
aad
mov
sbbl
jle
pop
xlat
insb
scas
outsb
loopne
dec
xlat
sub
rclb
fidivrs
inc
inc
mov
mov
cli
mov
fldenv
mov
outsb
adc
stc
fisubl
xor
cmp
pop
push
subl
sub
cmpsl
or
adc
pop
push
push
jbe
mov
gs
add
out
jbe
pop
mov
sbb
push
insl
bound
xchg
enter
nop
in
addr16
lcall
lcall
jge
test
pop
mov
jge
jmp
cwtl
and
dec
mov
cmp
addr16
mov
cmpl
pop
icebp
jmp
insl
pop
push
sbb
mov
in
jl
or
push
lods
mov
clc
sub
cld
sar
in
ljmp
lods
in
adc
jmp
imul
xchg
pop
add
fbstp
lcall
mov
pop
inc
adc
loop
jge
inc
xchg
fisttps
mov
imul
xlat
mov
outsb
mov
inc
cmp
sahf
push
push
cmpb
scas
sbb
sbb
cmp
orb
sti
mov
xchg
imul
or
add
popf
sbb
xchg
pop
mov
rcrb
add
insb
pushf
adcb
and
xor
out
jbe
loope
mov
dec
clc
cld
pop
sbb
xlat
cmp
shl
or
jno
jne
sub
cmc
mov
cs
push
dec
pusha
fldcw
mov
mov
lea
insl
sub
in
loopne
sbb
sbb
bound
js
das
cwtl
fisubrs
and
mov
push
andb
in
xchg
xchg
clc
ret
gs
sbb
test
sbb
sub
xchg
mov
xlat
sub
stos
ss
jae
rclb
dec
or
stos
fdivr
stos
push
movsb
push
mov
sub
pop
int
mov
mov
push
fs
lcall
data16
or
xor
sbb
daa
inc
inc
das
inc
xchg
adc
or
aad
dec
ss
nop
in
sub
sub
cmp
mov
cmp
mov
or
pop
es
dec
int3
xlat
mov
fisubs
stos
jp
sbb
rclb
mov
cmpsl
sahf
inc
mov
adc
scas
lahf
adc
mov
jp
sahf
dec
or
scas
cmp
pop
stos
sbb
xor
std
jns
inc
int
push
dec
int3
mov
jp
lods
or
add
shll
mov
fiadds
xlat
nop
pop
push
push
aaa
ret
out
pusha
jno
vpsubb
into
dec
xchg
into
xor
sub
std
and
push
cmpsb
scas
push
pop
rolb
pand
pop
cmp
and
test
or
in
rcr
sbb
pop
mov
mov
mov
inc
cwtl
ds
in
imul
jae
push
jb
fdivrs
inc
cmp
jno
das
repz
sub
xchg
imul
pop
call
stos
pop
dec
insl
add
lret
je
adcl
ljmp
outsl
in
imul
in
cmp
mov
cltd
rcr
sbb
divb
sbb
shlb
lahf
mov
out
clc
shll
dec
jl
push
rorb
mov
sar
fdivl
jo
and
jno
sbb
push
daa
xor
push
mov
adc
cli
xchg
test
out
nop
dec
loope
test
add
cmp
xor
notb
xchg
inc
lret
xor
mov
lret
inc
add
pop
testb
fisubrl
cmp
mov
pop
cmc
jle
inc
jno
movsb
mov
loope
enter
test
orb
cmpsb
fistpll
add
ss
push
scas
mov
cmp
and
stc
push
jne
or
or
mov
mov
xchg
mov
xchg
lock
adc
imull
sub
outsb
inc
sbb
rclb
jo,pn
pop
in
repz
cltd
mov
test
or
or
in
xchg
mov
aad
fwait
mov
ret
sahf
movsl
icebp
lahf
out
mov
mov
shrb
inc
dec
cltd
ficoml
stos
and
cmp
or
pop
xchg
popa
xor
insl
mov
cmc
cmp
add
fxam
dec
jno
std
or
pop
movsl
mov
ret
aam
mov
shll
out
hlt
data16
sub
xlat
xchg
pop
cmp
pop
sbb
pop
pop
cmp
adc
inc
xlat
dec
loop
xchg
mov
pop
xchg
out
cs
xchg
bound
cwtl
inc
js
xor
mov
das
pushf
adc
jp
in
xchg
sbb
pop
fnstenv
dec
push
adc
imul
ss
add
cld
cli
mov
inc
lock
xor
inc
stc
sarb
cmp
aad
xor
jo
sahf
cltd
aad
mov
push
sub
sbb
cmp
sbb
mov
adc
test
adc
push
mov
imul
xor
rorb
xchg
out
std
test
adc
jbe
adc
sbb
jmp
push
icebp
jmp
lea
mov
and
sub
cmp
in
and
loop
out
cs
adc
data16
mov
mov
cmp
jne
dec
icebp
xchg
outsl
and
add
std
sbb
lret
add
aam
mov
lods
xchg
push
jae
sbbl
fidivrs
dec
sbb
cmp
int3
fimuls
sbb
mov
sbb
inc
inc
or
insb
bound
mov
and
mov
push
pop
into
pop
adc
push
mov
stos
jne
push
ljmp
jge
les
fbstp
xor
xor
push
xor
scas
mov
lret
mov
push
test
cli
outsb
xlat
ljmp
or
fcmovne
cmp
aaa
sbbl
test
dec
jg
mov
int3
ss
fnstsw
insl
jbe
xor
push
aaa
pop
jns
addb
das
push
mov
xor
mov
imulb
jns
in
fs
add
or
inc
inc
cmpsb
dec
leave
add
nop
xchg
dec
shrb
test
jle
movsl
pop
jp
inc
xor
pop
ss
and
imul
jmp
test
scas
xchg
lods
pop
adc
loopne
pop
int
mov
sbb
arpl
mov
sub
pop
test
lahf
dec
jg
sub
adc
cmp
sub
push
imul
jg
jmp
insb
cld
adc
add
pop
cmpw
adc
loope
stc
xchg
sub
add
shll
pavgb
imul
cmp
mov
sarl
ret
pop
mov
ds
ja
fucom
mov
jecxz
sbb
es
call
jmp
mov
mov
scas
mov
jbe
add
mov
jl
lods
dec
sub
xor
jns
cmp
adc
or
adcb
jno
push
mov
inc
pop
xchg
xchg
iret
mov
push
push
pop
pop
int3
add
repnz
push
scas
dec
mov
pop
cs
int
ljmp
xchg
cmp
out
clc
mov
pop
cmpsl
cmp
cli
xor
pushf
dec
xor
into
add
insl
dec
inc
push
lret
push
mov
xor
cs
insl
xor
outsl
cltd
scas
stos
out
jbe
cmp
ds
add
in
cltd
adc
stos
leave
push
insb
dec
popf
push
xor
loop
pushf
and
ret
sub
fldcw
mov
dec
outsl
pcmpeqb
mov
mov
xor
rorl
xchg
rclb
pop
int3
cmp
mov
or
add
sarb
inc
jl
cmp
ficompl
mov
fldpi
cmp
adc
mov
sbb
pusha
or
hlt
in
bsr
jmp
popa
push
inc
jne
mov
hlt
and
sbb
leave
and
sub
test
pop
sub
jb
cwtl
fdivrl
and
pop
mov
inc
fidivs
inc
hlt
fisubl
fxtract
and
sub
xchg
lock
and
sti
repnz
jecxz
nop
lcall
insb
ds
pop
mov
cmp
std
or
sub
mov
and
fnstsw
addr16
xchg
out
and
fdivs
je
es
xor
push
or
jge
out
adc
lock
inc
mov
ljmp
mov
hlt
jecxz
jnp
test
popa
inc
cld
xlat
dec
popf
cld
jno
das
xchg
sti
mov
nop
add
jp
xor
fs
test
pop
adc
sbb
xchg
out
sub
mov
mov
adc
mov
push
mov
into
out
xlat
or
cmc
xor
mov
xchg
popa
mov
or
hlt
inc
or
ss
jne
push
aam
xor
arpl
ret
push
cmp
mov
pop
pop
mov
adc
dec
push
jae
fidivs
jne
rcrl
jne
sbb
gs
out
ljmp
adc
dec
mov
adc
cmp
xor
stc
sub
jmp
roll
mov
inc
or
mov
cmp
rcll
fcomps
loopne
xchg
and
jl
add
jmp
int
aam
add
push
cmp
pop
stos
lods
imul
cmp
mov
scas
enter
jl
lds
imul
or
shll
sub
xor
imul
lods
jl
jne
mov
add
iret
push
xorl
movsb
xor
dec
jb
repnz
or
js
sbb
test
movsb
fst
lock
mov
mov
insb
xor
call
cmp
insb
int
shll
pop
sbb
addr16
cmp
je
xchg
insb
mov
lock
in
inc
adc
add
push
insb
ficomps
std
dec
mov
subb
xor
push
in
and
add
mov
pop
dec
pushf
ss
stos
xor
mov
xchg
sbb
xlat
outsl
fisubs
stos
cmp
dec
jg
test
push
ljmp
rorb
imull
xchg
mov
adc
das
jno
xor
push
inc
ret
bswap
push
jb
or
cmc
lods
fucom
fcmovbe
pop
inc
mov
and
int
dec
adc
dec
xchg
jns
popf
roll
xchg
dec
and
mov
dec
aad
dec
es
shll
adc
imul
sbb
fcomps
cmp
dec
test
sbb
push
xchg
fdivr
add
out
movsb
dec
lea
lret
mov
leave
mov
out
ret
and
mov
xchg
lret
filds
mov
xor
adc
push
mov
lahf
and
pop
push
scas
test
fmuls
mov
inc
cli
rolw
in
sub
lds
lret
lret
insb
in
shlb
push
xchg
stos
icebp
in
pop
nop
aam
sub
rcrl
roll
mov
mov
sub
bound
das
mul
movsb
aaa
mov
jo
inc
mov
jl
mov
add
scas
lret
hlt
mov
xlat
and
mov
sti
or
lods
dec
cs
int
out
aas
outsl
imul
test
push
add
mov
test
loop
cmp
fimull
fildll
push
in
sub
jb
inc
stos
dec
out
xlat
lock
push
aam
xor
outsl
pop
addr16
pop
and
inc
push
movl
les
je
testb
sub
sti
hlt
xchg
push
xchg
or
push
sbb
xor
inc
and
int
rcll
inc
ficoms
xor
or
rolb
lods
mov
in
push
cmc
mov
outsb
orl
sbb
pop
sub
dec
cmp
psrlq
adc
push
cwtl
pop
push
in
jbe
push
mov
mov
loop
icebp
mov
rclb
loope
gs
sbb
addb
divb
movsl
nop
pop
test
mov
cli
pop
cwtl
mov
push
cvtpi2ps
lcall
iret
mov
mov
loop
ss
add
lret
or
jecxz
shrl
adc
sub
negl
cmp
pusha
push
jg
or
lret
fistpl
sub
and
rcl
clc
mov
cs
inc
jae
jmp
adc
aaa
dec
push
and
mov
das
out
mov
and
idiv
cmp
jmp
test
mov
inc
dec
stos
push
sub
mov
inc
lcall
popa
pop
xchg
pushf
pop
cwtl
cld
int
jns,pn
insb
scas
jae
adc
pusha
mov
jnp
dec
cmp
sarl
pop
dec
bound
pop
nop
inc
or
add
or
xchg
and
aas
loopne
sub
pop
daa
adcl
jb
xor
mov
sub
iret
xlat
rcrb
push
inc
pop
pop
shrb
pop
sub
cmpl
repz
or
dec
popf
dec
jecxz
scas
mov
and
push
insl
jno
sbb
lock
pop
add
push
rorb
pop
mov
fistps
dec
popf
loopne
subl
sbb
idiv
and
sub
push
repnz
and
pop
rolb
cld
and
xchg
stos
and
inc
fwait
js
and
push
arpl
and
push
sbb
inc
mov
mov
mov
mov
push
cmpsl
xor
jae
pusha
stc
test
out
rcr
cmp
add
or
notb
sub
lods
mov
sbb
ljmp
push
xchg
sysenter
lods
cmp
sub
cmp
ds
ret
mov
jge
pop
add
out
rorb
pop
dec
ss
cmp
lret
xor
mov
mov
sbb
ret
mov
push
test
inc
ja
cmp
icebp
pop
or
xchg
dec
sbb
jns
cli
shll
sbb
inc
insl
int3
popf
xor
jno
loope
loop
mov
inc
sub
stos
adc
outsb
leave
mov
sub
rol
push
scas
fbstp
sbb
call
mov
out
sub
push
push
je
fcmovb
cmp
jno
pop
neg
sub
mov
clc
xor
pop
loop
pop
orl
jl
lcall
lret
inc
dec
mov
lcall
outsb
sbb
sbb
push
xor
dec
rcll
jle
lret
hlt
dec
and
push
dec
push
cmp
rolb
jnp
data16
repz
cli
pop
or
daa
mov
sahf
cmp
mov
pop
mov
lahf
mov
mov
jmp
leave
cmp
test
sbb
cli
xor
or
leave
dec
ja
jg
rcrb
insl
xchg
cld
add
or
fs
xchg
cmp
sub
fstps
adc
dec
mov
dec
xchg
jl
cmp
push
jmp
push
sti
inc
lret
and
add
add
push
sahf
mov
sbb
imul
pop
cmp
dec
dec
adc
fiadds
pop
mov
cmc
mov
repnz
imul
pusha
dec
xchg
mov
push
repz
xchg
mov
arpl
repz
inc
loop
xchg
mov
outsl
cmpsb
sahf
gs
push
data16
repnz
jnp
shrl
test
repz
mov
mov
gs
and
pop
adcl
sub
mov
test
mov
cmp
lcall
cmp
cmp
divb
stc
mov
shrb
imul
sbb
stc
popa
in
mov
or
or
repnz
mov
and
or
repz
out
fistl
ficoms
out
push
sub
idivb
out
or
mov
lret
lods
cld
jmp
push
xlat
cmpsl
rcl
mov
sub
push
xchg
sti
je
jg
scas
cmpsl
lds
mov
out
iret
je
mov
sbb
or
mov
popfw
xor
rol
push
sub
sbb
inc
cld
xchg
dec
mov
loop
lcall
adc
mov
jnp
cmp
ds
out
adc
int
movsl
insl
cmp
inc
push
jmp
insb
imul
out
mov
adc
sbb
inc
imul
pop
pop
mov
int3
adc
hlt
vmread
divb
xlat
hlt
pop
push
xchg
ficomps
clc
lcall
je
jbe
cmp
arpl
or
adc
fistpll
stc
fstps
test
sti
xlat
aad
clc
cltd
test
xchg
gs
clc
pop
and
mov
push
loop
and
jmp
mov
inc
enter
jb
xlat
xor
fnsave
into
out
jg
cmp
dec
and
dec
fldl
ret
mov
ret
dec
cmp
xchg
imul
or
or
jmp
mov
popa
jae
cmp
and
lea
adc
pop
nop
xor
or
mov
dec
fstpt
and
push
int3
pop
pop
xchg
pop
mov
or
sub
push
mov
leave
inc
mov
roll
mov
xor
dec
mov
sub
push
test
movsb
dec
push
inc
insl
jecxz
mov
cmp
add
aas
push
push
pop
popf
xor
lods
mov
and
pop
jge
lock
add
out
popf
mov
rcrl
mov
push
jge
dec
fsubrp
out
mov
adc
or
xchg
adc
cmp
stc
dec
and
lds
adc
fistps
test
push
sub
jmp
sti
and
inc
out
xchg
or
mov
xchg
dec
lods
pop
or
dec
pop
sub
shlb
dec
and
add
cmp
int3
mov
jp
add
repnz
sub
jmp
imul
or
lret
movsb
sbb
sbb
adc
mov
mov
xchg
lahf
xchg
push
cltd
lea
xorl
shl
popf
cmp
xchg
popf
shll
je
loope
mov
imul
adc
test
aad
dec
js
push
push
mov
inc
sub
or
dec
clc
repz
dec
sbb
adc
stc
inc
push
aas
add
mov
push
push
pop
xchg
fiadds
adc
mov
xchg
dec
dec
mov
shlb
or
lods
and
xchg
enter
std
movsl
sub
mov
leave
sub
sbb
push
aas
mov
ds
in
cmp
ret
inc
xchg
sbb
roll
rclb
sub
and
cmp
jle
pop
loop
ljmp
lret
test
fbstp
popf
outsb
and
mov
ret
mov
adc
cmp
mov
dec
add
std
cltd
popa
sbb
ret
fwait
imul
xor
jecxz
mov
push
hlt
push
push
mov
adc
mov
add
sub
adc
popa
push
and
mov
and
pop
addr16
dec
mov
mov
cltd
stos
inc
xor
push
mov
xlat
mov
xchg
push
punpckldq
stos
fcoms
test
xor
gs
scas
adc
cmp
dec
pop
push
pop
dec
icebp
jl
xchg
in
mov
xor
adc
hlt
ljmp
pop
add
dec
add
mov
gs
mov
popf
or
jne
sarl
push
insl
das
loopne
in
rorb
mov
mov
dec
insb
popf
test
mov
jg
adcl
dec
mov
sarl
leave
jle
pop
popf
mov
pop
dec
mov
push
out
push
add
lods
sub
add
movsb
mov
js
sub
pushf
dec
mov
sbb
ss
in
imul
ret
aas
cmp
or
arpl
lret
fucom
fsubs
adc
loopne
xchg
inc
js
sarl
lahf
inc
jg
cltd
jmp
mov
fsubrl
cmp
fiadds
push
std
mov
xchg
sub
test
mov
pop
sub
insl
iret
pop
dec
cmp
mov
lock
pop
sub
ja
xchg
loop
punpckldq
cltd
pop
pop
inc
jnp
xorl
shlb
pop
outsb
mov
fnstcw
pop
mov
adc
push
sub
popa
dec
movb
mov
cmp
enter
add
loop
icebp
divl
mov
cmp
into
test
pushf
cmp
out
sub
test
inc
fwait
aas
mov
scas
xchg
xorb
xor
out
push
push
and
in
das
pop
fsubrs
out
xchg
adc
pushf
mov
sbb
sbb
loopne
mov
es
xor
bswap
pop
mov
bound
xchg
pop
xchg
and
jle
test
orb
sbb
xchg
jae
rclb
in
cmp
adc
jecxz
arpl
sub
add
xchg
aas
jno
inc
sub
xor
mov
stos
mov
out
cmp
and
shll
cmp
push
cmp
dec
mov
loop
mov
xchg
jne
cwtl
imul
dec
gs
sbb
movsl
cmp
dec
or
sar
xchg
sub
das
test
cld
aam
sub
ficoml
pop
aad
insl
fdivrl
testb
inc
test
jle
inc
sbb
ds
stos
or
xchg
std
leave
insl
mov
pop
movsl
jge
sub
adc
cs
inc
imul
call
adc
sub
jp
out
imul
lock
test
enter
push
push
roll
fdivl
cmp
mov
out
push
clc
push
aad
push
jns
jl
pusha
shrb
add
mov
cltd
and
jbe
dec
sub
add
sub
into
fiadds
bound
es
clc
mov
cmc
and
sub
jbe
dec
movl
enter
aam
or
xor
or
jne
dec
int
cmpsb
dec
dec
popf
ficomps
sbb
in
cmp
call
and
jmp
es
mov
jl
add
shlb
pusha
aas
cmp
fistpll
xchg
mov
es
fbld
arpl
xchg
push
and
jge
inc
push
scas
jbe
add
inc
cld
sbb
and
icebp
arpl
adc
sbb
jp
push
mov
fldcw
xor
mov
lea
mov
addr16
dec
mov
xchg
mov
jns
sub
or
lock
xor
push
sub
xchg
es
cli
insl
add
jne
jge
mov
mov
fimull
mov
fildl
mov
mov
add
call
adcl
inc
pop
sbb
popf
sbb
clc
add
xchg
mov
mov
mov
adc
stos
insb
fdiv
adc
add
and
fstp
push
mov
add
fistpl
mov
movsl
xchg
dec
aad
std
cmp
loop
popa
inc
rcll
dec
aam
mov
ficompl
negb
add
cmp
mov
push
popa
stc
loop
ja
adcl
and
out
sbb
adc
dec
inc
jnp
dec
and
add
rorl
fidivrs
pop
outsl
mov
sti
aaa
jg
mov
dec
ss
jg
fsts
sbb
out
imul
jb
cmpsb
imul
xor
mov
jns
mov
ljmp
out
mov
jp
enter
popf
cmpsb
mov
cmp
mov
sbb
cmp
jae
add
inc
jle
mov
addb
mov
mov
in
lahf
in
dec
pop
cmp
pop
aas
cmp
lock
mov
inc
cmc
negb
pop
test
inc
cmp
shl
push
dec
xor
shll
mov
imulb
mov
mov
xchg
cmpsb
xor
ss
or
lcall
xor
dec
xchg
dec
out
sahf
dec
pop
fdivrl
ret
and
cmp
xor
loopne
jecxz
sbb
int3
sub
sti
js
movsbl
pop
int
and
pop
cmc
pop
xchg
subl
push
mov
xor
inc
inc
stc
inc
popf
mov
pushf
or
sbb
pop
adc
test
int
test
mov
lahf
jg
imul
sub
sbb
dec
cs
dec
pop
jecxz
iret
lds
out
movsl
mov
push
sbb
mov
xchg
fidivl
lods
sub
push
ret
adc
jp
stos
mov
testl
inc
popa
les
sub
cmpb
and
cmp
pop
xchg
fdivrl
sbb
test
push
es
jo
xchg
mov
push
push
imul
shl
stc
cmp
mov
mov
mov
mov
pop
aam
lods
data16
dec
sbb
shll
push
int
jecxz
adc
fdiv
fs
mov
lcall
pop
mov
mov
pusha
jae
inc
or
sub
daa
leave
xchg
dec
xchg
cmp
push
mov
aaa
xchg
movsb
repnz
xor
or
adc
es
push
and
jne
mov
scas
mov
rcll
aaa
fisubrs
inc
fisttps
aas
ss
push
xchg
push
call
cmp
jnp
popa
or
jne
or
loopne
stos
pop
insb
inc
xor
dec
xchg
stos
enter
bound
or
lret
jb
jp
fdivrs
das
cwtl
call
movsl
mov
nop
outsl
sbb
cmp
cmc
out
in
or
cmpsl
mov
arpl
add
mov
cs
cli
xlat
lea
inc
test
inc
sbb
and
jl
sbb
mov
mov
jmp
push
sbb
inc
xor
mov
shl
leave
add
outsl
stos
scas
andl
daa
fcoml
sub
jb
pop
test
cmp
ja
cli
cmpsl
loope
call
sub
das
mov
call
jmp
mov
repz
or
xchg
mov
dec
stos
pusha
adc
or
insb
jbe
scas
mov
or
gs
or
inc
outsb
pop
jns
adc
icebp
sbb
sarl
cmp
repnz
fiaddl
mov
jo
push
loop
cmp
inc
inc
mov
push
int
shlb
dec
pop
xchg
ss
push
dec
enter
add
stos
dec
jnp
std
leave
ds
lods
popl
jbe
sbb
sbb
dec
cltd
add
xchg
push
lahf
rorb
arpl
es
xchg
adc
iret
mov
mov
icebp
mov
lret
push
xchg
mov
sbb
dec
shl
sub
inc
cmp
repnz
jne
push
jno
sti
sub
std
dec
cmovs
push
in
mov
icebp
loopne
fsts
mov
orb
movsb
repnz
loopne
loopne
aas
xchg
or
lods
pop
shrb
push
xor
iret
mov
loop
pop
ljmp
dec
loopne
mov
addr16
or
icebp
xchg
lods
repz
dec
sub
mov
les
clc
mov
push
daa
xchg
rcrl
xchg
push
test
jecxz
jl
ror
cli
pop
lea
or
adc
mov
xchg
movsl
mov
jmp
scas
adc
movsl
mov
mov
mov
jmp
mov
pop
inc
stos
call
rorl
movsl
push
pop
mov
pop
cmpl
cmp
inc
adc
sub
sub
push
push
enter
xor
xor
and
sub
push
roll
imul
pop
or
dec
add
popf
test
push
sbb
or
xchg
or
mov
pop
pop
and
mov
test
and
cli
shll
adc
in
mov
test
repnz
stos
xchg
mov
sub
jg
mov
cmp
add
inc
push
lock
jecxz
les
xlat
pushf
push
scas
push
test
jmp
sahf
lock
add
push
sbb
inc
ret
es
enter
in
fcoms
sbb
xchg
outsl
fucomp
mov
in
cli
inc
jle
dec
shl
mov
cmpb
cmp
insl
xor
out
jnp
sarl
xor
xchg
and
xlat
mov
xor
inc
pop
xor
sub
aaa
add
pop
jns
xchg
pop
iret
xor
pushf
bound
repnz
push
jl
mov
xor
adc
and
ljmp
mov
ds
cld
imul
mov
xor
mov
or
xor
in
jge
stos
std
addr16
mov
out
add
lock
cmp
loope
movsl
js
addb
int
pop
mov
pop
push
into
int3
cli
out
ja
scas
and
jge
add
repnz
or
pop
cmp
sahf
xor
fiaddl
lods
or
jmp
fs
pop
adc
mov
nop
adc
sbb
je
xor
mov
rorl
mov
add
inc
add
adc
sbb
push
jg
pop
cli
adc
ljmp
lret
xchg
lock
mov
dec
fnstcw
cs
sub
ja
jge
lahf
or
je
mov
push
mov
mov
pop
lret
jbe
sub
aaa
je
push
jg
es
xor
mov
mov
jl
sbb
mov
ja
sbb
xchg
xlat
ret
lods
pop
add
out
adc
ds
movsb
fldt
in
jmp
mov
cld
mov
scas
push
fs
sub
sub
les
cmp
push
mov
sub
dec
jmp
sub
nop
jns
mov
jnp
sbb
jl
stc
xlat
inc
xor
jle,pn
pop
mov
mov
dec
sbb
icebp
test
lcall
sbb
lret
cmpsb
xchg
sbb
xchg
jl
mov
dec
divl
rcll
ja
push
or
sbb
test
or
pop
jne
je
stc
sahf
push
jmp
ret
pop
mov
dec
jne
inc
mov
out
mov
mov
sub
mov
in
imul
jae
mov
bound
pop
leave
pop
inc
sbb
pop
shlb
and
aaa
adc
jmp
push
pop
fs
inc
inc
imul
pop
ffreep
outsb
jle
popf
int3
xor
dec
sub
aad
dec
shrl
inc
movsl
cmp
push
pop
aas
ss
push
adc
sub
adc
inc
or
ret
imul
sahf
xchg
sub
nop
cli
movsl
and
sti
push
add
and
dec
cmp
mov
sbb
xchg
in
daa
jno
add
shr
jns
nop
in
test
inc
addr16
adc
jno
ljmp
mov
inc
cld
mov
dec
jns
add
xchg
jp
dec
lret
dec
mov
sub
aad
daa
sti
insb
sub
inc
pop
and
iret
mov
out
ret
add
jne
jnp
xchg
ja
fmull
add
int3
rcl
jge
and
sbb
call
jle
cmc
cs
nop
xor
jno
sub
movsb
mov
rorl
inc
test
or
subb
into
jns
push
movsl
and
adc
fdivrl
idivl
push
mov
or
jge
pop
sub
jbe
popl
push
ds
ja
in
push
add
and
xchg
jmp
int
sub
dec
das
test
cs
adc
sti
repz
jns
test
inc
cltd
shlb
in
push
into
mov
sub
iret
adc
pushl
jb
or
repz
sub
gs
dec
jge
imul
clc
aas
shl
add
jecxz
ret
in
pusha
popf
aad
shl
dec
outsb
add
clc
pusha
add
mov
mov
mov
out
jge
outsb
fsubs
arpl
jne
sti
inc
jge
mov
or
popf
ret
push
leave
fdivs
sbb
push
adc
shl
mov
in
push
lea
daa
jnp
push
movsb
push
mov
xor
mov
scas
pop
mov
ss
push
and
pop
dec
sbb
xor
pop
rsqrtps
adc
negb
sti
int
gs
dec
movl
and
jp
incb
pop
dec
dec
inc
ss
fs
stos
pop
data16
push
dec
sub
nop
js
push
adc
cmc
cltd
insb
inc
repz
add
cmp
aad
mov
out
fcomip
addr16
jle,pt
pop
push
pusha
je
xor
pusha
xchg
sbb
jecxz
aaa
and
and
pop
pop
cmp
sbb
notl
jecxz
dec
fdiv
imul
jmp
fs
aad
fldcw
pop
pop
enter
xor
mov
cli
gs
cmpsb
pop
std
xchg
leave
fwait
or
inc
les
repnz
xor
iret
das
cmpsl
je
xchg
insb
fnstcw
push
dec
dec
subl
or
sbbl
into
ss
cmp
cli
xchg
inc
inc
sub
cmp
push
xchg
pop
mov
mov
cs
adc
xchg
xorl
rolb
lahf
dec
dec
or
xchg
jmp
movsb
or
iret
xchg
fcoml
mov
lds
pop
cmp
pop
cli
cmc
out
fidivs
rorb
mov
sbb
popa
test
pop
cmp
call
out
movsl
stos
jge
sub
stos
ret
es
xor
jp
test
lods
loop
daa
cmp
mov
dec
fbstp
push
sbb
add
mov
lea
xchg
mov
ja
fs
pusha
cmovo
cltd
pop
mov
mov
je
xchg
popa
mov
mov
mov
andb
hlt
movsb
mov
das
inc
push
xor
mov
adc
mov
bound
negl
ljmp
xchg
scas
in
daa
pop
xor
sbb
jmp
jl
add
and
aaa
out
dec
pop
xorl
pop
adc
sbb
mov
jo
and
xlat
inc
pop
jle
mov
or
mov
out
push
nop
xor
insl
mov
add
cld
ja
push
add
arpl
pop
or
or
lret
dec
cltd
jo
cmc
divl
mov
mov
inc
pop
xlat
push
imul
fldenv
mov
test
pop
sbb
jns
mov
scas
sbb
and
adc
add
push
setge
and
les
mov
cmp
mov
insl
popf
push
rolb
push
mov
fs
lcall
fstl
cmp
or
pop
xchg
nop
xor
scas
sbb
add
lret
das
push
push
movsl
pop
mov
andb
pop
mov
add
mov
aas
mov
out
xor
and
outsl
inc
sarb
mov
stos
xchg
stc
lcall
sub
cmpsb
div
mov
xor
fstpl
loop
sar
rolb
into
pusha
ret
push
repnz
mov
testb
rcrl
ss
bound
movsb
cmp
stc
dec
or
xchg
dec
shl
and
test
sbb
and
add
mov
test
lock
xor
add
ss
inc
movsb
fbld
addb
stc
leave
sub
dec
cmp
dec
popf
mov
push
and
add
fiaddl
adc
lahf
mov
shrb
out
mov
jle
and
pop
popa
sbb
arpl
sti
repnz
data16
inc
cmp
sbb
loope
test
rcrb
gs
mov
insb
sarb
cmp
imul
pop
and
cmp
jp
mov
and
idiv
pop
sub
cmp
sbb
subb
sbb
out
sub
out
ficompl
test
inc
cltd
adcb
adc
imull
or
retw
xlat
stos
out
mov
inc
in
addr16
mov
push
push
xor
cwtl
fcomi
push
add
jecxz
xorl
pop
movsl
sbb
loope
int3
jg
popf
push
inc
pusha
jae
test
cmpsl
insl
out
test
sub
lock
stc
pop
xor
es
loop
push
mov
fidivs
popf
xorl
sub
test
sbb
daa
leave
lcall
lock
and
call
jbe
or
out
shl
out
lret
jne
xchg
and
and
fnsave
push
dec
push
imul
int
sbb
jne
xchg
notb
mov
mov
push
fcoms
push
outsl
dec
roll
inc
mov
jo
sub
add
jl
je
lods
insb
or
insl
mov
in
mov
mov
fwait
mov
mov
mov
cli
test
notb
leave
stc
cmc
loope
bound
test
mov
movsl
jae
push
addb
jecxz
xchg
xchg
ret
cmpsb
movsl
pushf
faddl
cmc
dec
add
rorl
loope
fadds
mov
ret
mov
cltd
sbb
negb
push
call
outsb
sub
lret
je
adc
mov
xchg
cwtl
pop
and
adc
ret
or
cwtl
add
cmp
sub
ljmp
je
dec
ret
ljmp
adc
sbbl
sub
leave
sub
add
test
fdivs
cmp
sbb
dec
xchg
mov
jno
inc
loopne
stos
scas
sbbb
cmp
cmp
mov
push
jmp
and
in
adc
xor
mov
dec
push
in
and
add
mov
mov
mov
lods
imul
js
xchg
loopne
add
jg
xor
cltd
adc
fwait
inc
int3
loopne
mov
scas
jge
mov
xchg
mov
outsl
enter
ljmp
das
push
sti
sub
cli
andl
lock
in
xor
pop
pop
xor
cmpl
fcomip
incl
or
arpl
jmp
inc
xor
movsl
jg
jge
cmp
cmc
hlt
enter
or
xchg
dec
orb
call
in
mov
movsb
loope
int3
fiadds
ret
cmp
mov
xchg
stos
cld
jnp
scas
loop
sub
lcall
out
cmpsl
mov
jge
and
lahf
mov
insb
movb
jge
mov
mov
xlat
fistl
outsb
leave
or
jb
dec
test
std
movl
insl
dec
cmp
loopne
sbb
mov
je
sbb
adc
or
or
cmpsl
rcll
enter
scas
xchg
imull
test
mov
mov
jae
outsl
push
mov
popf
xchg
push
jl
push
popl
leave
cmpsb
push
ss
mov
outsl
inc
add
mov
data16
push
stos
xchg
stos
loop
jb
pop
mov
mov
sbb
xor
sub
xlat
pop
repnz
dec
popf
and
cmp
inc
pandn
cmpsl
lret
stos
call
stos
lea
or
pop
andb
jge
ficomps
sti
rcll
push
mov
mov
test
lret
test
bound
cmpsb
jo
rcll
mov
mov
xchg
lods
push
aam
dec
xchg
add
jne
push
imul
add
xlat
and
std
or
jb
mov
stos
in
iret
mov
mov
arpl
add
repnz
xor
lcall
cmp
iretw
and
in
gs
and
pusha
gs
cmpsb
xchg
hlt
dec
sub
enter
lea
ss
cwtl
sub
enter
dec
pusha
out
orb
test
ds
push
mov
jne
adc
or
mov
iret
imul
add
jno
in
lock
push
add
add
inc
iret
xor
mov
enter
mov
das
xchg
adc
fcomp
add
jecxz
push
mov
fsub
pop
adc
sub
jbe
nop
pushf
mov
lret
or
test
mov
push
lret
add
mov
pop
xchg
in
xor
push
lea
mov
jecxz
das
jg
push
jecxz
mov
jmp
rcrl
test
jp
push
clc
mov
jbe
test
push
gs
popf
jb
adc
or
insl
xchg
mov
aaa
lahf
outsb
icebp
lcall
icebp
cmp
mov
cmpsb
lret
and
hlt
add
fcoms
es
mov
push
cmpsl
and
jg
pop
mov
xor
add
xchg
mov
aaa
adc
fsts
cmp
call
mov
jp
mov
sub
mov
sub
push
pop
clc
aam
and
cwtl
push
fwait
ss
ja
push
push
imul
adc
ret
fldt
dec
mov
in
mov
mov
ror
adc
mov
xchg
insl
insb
scas
and
sub
lret
insb
insb
dec
mov
int3
jle
xchg
sub
add
jge
xlat
mov
fwait
in
rclb
insl
xchg
inc
sub
stos
outsl
mov
sub
add
out
stos
dec
popa
loopnew
aam
or
aam
sarl
mov
inc
fsubrp
mov
mov
mov
cli
mov
xchg
jbe
insb
ret
cmp
xlat
dec
in
jge
shrb
pop
xchg
lods
test
add
mov
mov
sbb
xchg
imul
pop
jmp
in
mov
add
cmp
iret
fs
and
movsb
sub
scas
movsb
lcall
in
xor
xchg
pop
pop
repz
sahf
in
add
scas
dec
repz
jbe
into
cli
std
pop
cltd
and
mov
dec
pusha
lret
pop
mov
add
aam
scas
push
xchg
es
mov
adc
or
mov
xor
mov
mov
pop
ja
or
add
mov
ds
xor
cwtl
inc
mov
pop
into
xor
roll
dec
dec
sbb
dec
out
es
mov
sahf
pop
fwait
int
sub
ljmp
mov
fisttpl
or
mov
dec
insb
add
shlb
sbb
fistps
or
push
cli
pusha
cmp
shrl
incl
cmpsl
push
and
pop
adc
and
lds
ror
mov
mov
jno
xor
fbstp
out
pop
fdivrs
das
cmp
jns
push
js
mov
xchg
jecxz
and
int3
jne
fbstp
jb
dec
cltd
push
aad
xchg
sbb
ja
xchg
cltd
daa
xlat
xchg
adc
cmp
in
xor
lret
xor
push
je
mov
sahf
and
lods
pop
cld
push
dec
add
xor
jp
enter
out
or
gs
push
inc
fwait
jne
rolb
orl
cmp
jbe
cmp
je
inc
adc
mov
mov
cmp
and
adc
pop
add
sbb
test
xor
icebp
inc
shl
jecxz
nop
push
int3
sbb
pop
pop
push
fmuls
dec
sbb
xchg
sub
jl
cmc
jmp
ret
add
mov
scas
or
aam
sarb
ljmp
pop
xchg
xor
jecxz
push
add
ja
adc
mov
arpl
inc
testl
push
cs
sbb
push
xchg
sbbb
mov
cmp
sahf
sti
mov
pop
cli
fs
neg
int
cmp
daa
sbb
sbb
jnp
aad
xchg
sbbl
test
sbb
addb
mov
les
pop
jns
inc
pop
xchg
lahf
fcomps
fisubrl
inc
and
sbb
push
in
pop
ljmp
jg
pop
aad
xchg
arpl
mov
mov
mov
adc
inc
in
mov
cmp
pop
sbb
pop
mov
jne
sub
mov
out
mov
cmpsb
testb
sbb
xchg
lods
je
cmpsb
nop
data16
mov
inc
and
incb
shrb
out
push
jecxz
sahf
pop
push
push
xor
rcl
fisttpl
in
dec
cmpsl
sbb
dec
sbb
movsw
fdivp
adc
mov
out
sbbb
outsl
adc
mov
inc
cmp
inc
pop
mov
rorl
sbb
arpl
xlat
push
push
jnp
sar
ret
adc
ret
test
cmp
scas
movsb
insb
fs
cmc
cmc
push
daa
inc
test
or
cmp
scas
add
sub
loopne
popf
mov
test
dec
jbe
jle
and
push
loopne
xor
mov
clc
aas
jbe
push
out
sub
pop
dec
jbe
lret
dec
push
or
jnp
lret
add
dec
ss
andb
aaa
movsb
out
out
cwtl
dec
loopne
lods
push
addb
adc
pop
punpckldq
xchg
lods
inc
ror
mov
imul
jno
testl
inc
mov
test
pop
cs
daa
jp
popf
jns
and
jg
xchg
sbb
rorb
ss
scas
test
or
out
pop
pop
fcomps
mov
jl
pop
jg
push
fistpl
pop
es
adc
jmp
dec
fs
in
xchg
stos
or
mov
sub
or
inc
adc
shll
sub
inc
lods
sub
pop
push
dec
sahf
inc
leave
out
xor
mov
adc
add
leave
xor
jmp
ds
scas
mov
sarl
cld
js
dec
iret
xchg
add
mov
flds
sbbb
cmp
loopne
mul
sub
shll
and
scas
mov
add
adcl
pop
ds
insb
into
aas
xchg
addr16
mov
roll
adcl
loope
test
subb
stos
movsb
mov
pop
enter
lcall
pop
cmpsb
aad
mov
inc
dec
int3
cmp
mov
and
shl
imul
jne
xor
mov
mov
pop
outsl
adc
jle
pop
ja
xchg
mov
addl
fwait
mov
stc
cmp
lret
xor
fs
push
iret
xorl
lods
xlat
or
aas
mov
nop
rorb
pushf
cwtl
mov
pop
and
sbb
mov
or
add
aam
mov
mov
call
mov
sub
or
cltd
mov
insb
or
pop
pop
je
pop
in
mov
xchg
cmpsl
testl
or
loop
sub
aad
mov
test
imul
out
xor
add
les
pop
push
inc
lea
out
dec
cmp
sub
imul
xchg
sbb
jb
loope
pop
std
inc
pop
iret
pushf
and
cmpsl
and
push
lahf
cs
inc
push
inc
loopne
xor
adc
pop
test
sub
xchg
out
sub
mov
adc
call
pop
and
frstpm(287
ljmp
aaa
xchg
xchg
mov
sti
into
test
jno
cmp
mov
les
lds
imul
stos
sub
cmp
ja
imul
inc
jno
lret
adc
mov
popa
out
jge
xor
adc
cmpsl
ss
dec
cmp
lods
out
push
add
pop
mov
jb
or
test
int
push
push
push
les
fiadds
mov
mov
pop
mov
imul
movsb
rclb
mov
mov
dec
sti
sub
cmp
int3
dec
add
lret
das
test
and
fwait
shr
add
jbe
jno
test
lahf
loop
es
or
xor
adcb
test
push
jle
dec
pop
sbb
mov
hlt
cltd
cmp
or
gs
xchg
fistps
mov
dec
push
pop
cmp
mov
xor
add
out
popa
mov
push
cli
in
jae
std
xchg
lcall
lods
sahf
fistpll
les
test
cmc
shlb
add
push
cmpsl
pushf
sahf
or
enter
push
pop
dec
sub
outsl
imul
add
cmp
in
shll
push
dec
sbb
push
adc
andb
mov
jb
popf
fcmovnu
shlb
or
xchg
push
in
sbb
xor
pop
cwtl
mov
jge
cltd
fisttps
pop
lods
jns
js
loopne
fmul
xchg
mov
aam
mov
sbb
jmp
lods
mov
pop
hlt
dec
mov
gs
cmp
mov
fbld
flds
and
xchg
inc
push
hlt
pop
xor
adc
mov
mov
or
sub
cli
inc
test
and
pop
ljmp
sub
ja
mov
jmp
cmp
inc
fwait
inc
subb
rolb
int3
test
fistpl
mov
mov
es
pop
cli
rorb
or
jp
cwtl
lods
pop
dec
insl
and
cmp
add
mov
rcl
adc
call
push
test
ret
and
outsb
xor
push
lock
mov
addr16
inc
push
lcall
mov
int3
sbb
in
ficomps
mov
add
cmp
dec
xchg
mov
jb
xor
pop
rcrb
mov
lods
popa
pop
in
cs
adc
jbe
push
sti
or
ja
mov
pop
mov
jecxz
sbb
pop
test
ljmp
cli
sub
cmpsl
dec
inc
push
aad
not
mov
je
cmp
sarl
cmp
add
mov
and
xchg
cmp
shl
sahf
outsl
adc
mov
faddl
inc
inc
adc
mov
insl
cs
in
les
cmpsb
ds
push
xor
scas
pusha
mov
inc
fisubrs
pop
push
mov
inc
inc
ja
xchg
jnp
loop
inc
mov
shll
lds
cmpl
push
xor
xor
xor
sbb
repnz
inc
popf
push
sub
fldenv
sub
stos
adc
dec
or
fidivs
dec
inc
lods
adc
push
xchg
mov
iret
ficompl
adc
cmp
cmp
dec
jmp
movsb
shrb
repnz
jge
jmp
jne
sub
mov
mov
aad
ljmp
ret
and
xchg
aam
mov
pop
push
mov
pop
jecxz
rorl
pop
adc
pop
cmp
bnd
fstps
jmp
push
or
mov
push
stc
sbb
jle
rcl
imul
jno
dec
dec
inc
dec
out
gs
or
out
pop
fnstenv
ds
and
sbbb
test
in
rol
into
int3
nop
pop
add
sub
pop
fistpl
movsl
lea
imul
mov
jp
fcmovnb
pop
adc
idivl
fnstenv
jnp
lret
jns
xchg
in
cwtl
imul
push
dec
scas
pop
insb
inc
and
mov
imul
insl
sub
cld
mov
ret
push
jo
out
adc
xor
mov
mov
repnz
jno
das
insb
scas
lea
fldenv
js
xor
iret
add
mov
in
mov
mov
call
imul
les
call
clc
je
push
je
fmul
add
cmpsb
xchg
pop
lret
lcall
lret
lret
mov
daa
out
lea
xor
and
pop
pusha
lret
and
insb
dec
daa
mov
adc
aaa
fdivl
sahf
jmp
call
and
or
push
mov
rol
sbb
sub
xchg
xor
mov
out
in
shll
cmp
mov
dec
mov
in
xchg
cwtl
dec
cmp
push
popa
aaa
loope
es
jecxz
ret
adc
mov
repz
subl
test
jp
mul
mov
pop
mov
pop
xor
pop
xchg
iret
aas
je
jne
push
jbe
push
pop
adc
gs
jge
movsl
mov
lret
adc
sub
js
sub
xchg
cli
outsl
nop
lds
sbb
aas
sbb
outsl
in
push
push
ljmp
sbb
mov
adc
jge
outsb
pop
mov
mov
leave
mull
add
lods
push
xchg
cmp
test
push
lock
int3
mov
rcrl
xchg
data16
in
cltd
add
mov
testl
ret
stos
inc
jae
dec
imul
inc
adcl
dec
add
adc
cmp
imul
mov
enter
ljmp
or
xchg
mov
scas
mov
imul
mov
cltd
inc
shll
rol
dec
jb
testl
cli
in
push
lds
mov
push
testb
cwtd
mov
test
jmp
inc
insb
pop
dec
mov
stos
xchg
inc
and
and
jge
add
adc
nop
mov
sub
jb
mov
mov
popl
jo,pn
mov
xchg
andb
dec
popf
in
ret
clc
lods
mov
jp
push
outsb
in
jle
data16
or
push
push
lcall
and
sarb
mov
jo
fs
pop
rorb
or
rclb
sbbb
inc
add
movsl
lret
or
xchg
inc
inc
pop
inc
and
inc
ficomps
shll
xor
cmpsl
data16
out
aam
mull
inc
mov
sbb
xor
adc
mov
cltd
test
push
es
cwtl
mov
icebp
int
lret
out
xlat
fcoml
mov
xor
sbb
xchg
stos
xor
cli
sbbb
das
xchg
cmp
fstl
and
pop
fs
sti
ret
std
mov
notb
sbb
jmp
loop
mov
push
add
aad
mov
push
jno
loop
dec
sub
push
adc
adc
or
xor
jecxz
jp
cmpsb
jae
fsubrs
mov
mov
sbb
push
aaa
daa
jb
enter
and
pop
std
xor
cltd
sbb
gs
mov
arpl
cli
sbb
insl
xor
mov
mov
fsubs
pushf
outsb
dec
push
jns
and
fisubs
outsl
movsl
inc
adc
mov
jmp
mov
arpl
in
fldt
in
and
mov
push
adc
sub
add
inc
scas
or
lret
push
xchg
pop
scas
pop
lcall
cs
cmp
inc
in
repnz
dec
add
sub
mov
xchg
loopne
test
rcrl
mov
xor
mov
into
xor
call
leave
adc
dec
pop
in
xchg
mov
call
std
jnp
fcompl
jle
and
sbb
addr16
imulb
lret
and
add
cmp
in
out
adc
xor
mov
je
pop
or
mov
xor
popf
sbb
add
rcll
lret
in
sub
bound
cmp
in
into
pop
stos
inc
xchg
sub
mov
dec
out
mov
push
mov
loopne
out
and
mov
cmp
push
lods
das
sbb
and
cmpsb
pop
push
add
enter
pop
xchg
aas
mov
mov
mov
fistps
dec
test
xchg
jae
sbb
fisubrl
jge
int
bound
inc
fsubs
xor
inc
and
jle
pop
ljmp
fbld
call
xchg
sbb
into
jecxz
in
cmp
jmp
pop
dec
lret
push
push
test
add
popf
ror
imul
jb
pop
negb
lret
mov
jmp
inc
push
aam
mov
bound
cmp
test
shl
sbbb
push
xchg
lret
adc
in
mov
push
lods
pop
cs
popf
lock
test
dec
cs
mov
pop
jnp
fisubrl
mov
je
aaa
loope
icebp
jmp
xor
lock
adc
or
mov
xchg
sbb
add
sub
sarl
push
lods
pop
mov
mov
mov
sahf
hlt
loope
popl
mov
dec
rcrb
xchg
aam
jbe
adc
mov
scas
shl
inc
fcmovnb
lahf
pop
lret
repnz
mov
jl
divb
mov
cmp
nop
dec
pop
ds
std
in
imul
pop
test
jno
or
sub
movsl
jnp
std
lahf
aaa
or
mov
subl
data16
cmp
and
fcoms
inc
loop
lret
orl
mov
pushf
push
mov
retw
mov
xchg
out
sbb
push
sub
ficoml
jl
pushf
lcall
pusha
add
mov
push
sub
sub
loop
ret
int3
imul
shrb
mov
test
mov
adc
xor
je
xor
push
xor
jecxz
jp
push
push
fs
in
dec
sar
out
and
mov
jbe
jae
mov
and
lahf
rcr
push
call
jecxz
sbb
add
jb
jmp
xchg
cwtl
xlat
push
call
loopne
mov
lods
mov
dec
stc
mov
mov
fidivs
sub
jge
cld
jge
mov
sbb
mov
fstp
fcompl
leave
cwtl
add
sub
cmpsl
mov
inc
scas
sbb
add
add
cwtl
jl
pop
sub
sub
bound
sbb
in
inc
sub
popa
push
cmp
leave
pushf
enter
inc
shrb
nop
xchg
push
hlt
mov
test
add
fcoml
clc
push
fwait
mov
push
pop
pusha
lcall
fisubrl
push
jnp
adc
mov
mov
rcrl
outsb
mov
pop
lea
arpl
les
sbb
add
into
inc
jo
rcrl
int
jge
icebp
sub
pop
rep
repnz
xor
mov
mov
pop
push
xchg
jns
lret
ret
mov
out
xchg
jbe
imul
scas
xchg
into
xchg
fst
add
mov
push
inc
pop
pop
jbe
cs
and
xor
and
adc
mov
sub
jmp
jg
and
bnd
rcl
pop
cmp
mov
jbe
jns
ret
in
js
adc
mov
rclb
dec
jns
adc
ljmp
mov
mov
movsb
adc
mov
sbbb
mov
add
js
addr16
imul
jmp
and
and
inc
sbb
sbb
jl
out
add
stos
cmp
pop
arpl
inc
push
dec
das
outsl
enter
mov
sahf
xchg
fstps
mov
cmp
cmpl
lods
aam
cmp
xchg
js
add
mov
pusha
sub
jl
gs
inc
bound
fcomi
jb
lods
jb
push
repnz
jne
fsubrs
mov
pop
jno
cmp
fstpl
nop
rcll
push
pop
sbb
xchg
sbb
fisubrs
sub
inc
add
sti
inc
lcall
ss
mov
shrb
cmc
jae,pt
jae
fists
dec
aas
or
pop
mov
mov
and
sub
mov
sbb
jns
pop
dec
subl
test
push
loop
ss
nop
xchg
loope
jl
es
and
into
mov
or
add
loope
faddp
add
popa
add
mov
test
mov
enter
xor
cmp
shr
sub
xchg
lods
lret
and
push
mov
ljmp
cmpsl
insl
push
lahf
mov
dec
push
cmpb
mov
cli
dec
loop
mov
sbb
stc
cmpsl
mov
pop
test
fisttpll
add
stc
rorb
decb
mov
xor
leave
fnstsw
fcoms
in
into
inc
lods
rcll
pop
enter
xorl
push
mov
fisttps
push
aam
bound
inc
add
repz
fnstenv
divl
fs
inc
lods
imul
in
sti
popf
repz
iret
fstl
jae
cltd
lcall
rclb
imul
fdivs
mov
dec
enter
push
scas
and
dec
inc
pop
add
jb
sbb
jae
or
jae
push
and
hlt
dec
lock
or
ja
add
pop
fs
fcompl
ljmp
inc
outsb
mov
arpl
out
xor
push
xchg
dec
fidivrl
lea
pop
int3
add
loope
lods
out
xor
shlb
stos
mov
pop
pop
das
push
pushf
nop
arpl
and
out
add
push
jl
fisttpl
mov
cli
ret
in
dec
xchg
ss
jmp
cmpsb
xchg
in
sarl
lods
adc
sub
jbe
leave
shr
js
gs
pop
jecxz
jno
mov
repz
stos
rcrl
or
out
adc
hlt
ja
mov
test
sbb
pop
sub
xchg
jns
dec
sbb
dec
cmp
sbb
sahf
loope
cmc
cmp
push
cwtl
or
lods
stos
pusha
enter
call
aas
out
jne
outsl
push
ffreep
mov
imul
add
cmpsl
xchg
les
push
sbb
cmp
jle
mov
clc
aad
push
pop
push
sub
mov
inc
mov
les
popf
into
jge
test
pop
fs
inc
sbb
jmp
push
jge
mov
sub
inc
mov
or
aaa
add
pop
lahf
or
mov
std
mov
mov
cmpsl
ljmp
add
xchg
pop
pop
push
dec
fsubrl
mov
fcomps
adc
push
or
sahf
lcall
fdivrl
imul
pop
inc
and
jge
sub
movsb
inc
out
lret
loopne
jb
pusha
and
shll
mov
int
sub
fwait
int
sbb
adcl
push
jp
xor
divb
shll
mov
sbb
mov
dec
xchg
leave
jae
dec
mov
xchg
push
or
scas
cmc
sbb
mov
push
sbb
jle
je
test
divb
adc
sub
loopne
cmpsb
loope
xchg
shl
adc
or
stc
sbb
pop
cmp
lods
mov
outsb
loope
shll
pop
mov
movsb
inc
pop
fcmovb
pop
add
ss
push
lret
dec
fsub
es
hlt
or
sub
jb,pn
int3
rcl
sub
pop
and
sarl
rolb
jge
push
cltd
dec
aam
loop
or
inc
adc
loop,pt
mov
add
out
add
jp
frstor
push
nop
lret
mov
or
ja
push
lret
fisubl
mov
pop
sub
arpl
es
cmp
adc
mov
sub
lods
into
jne
subl
jne
xchg
add
dec
or
fwait
mov
mov
pop
adc
add
mov
je
bnd
fdivrs
inc
pop
or
cmc
shl
lods
pop
stc
mov
jb
pop
dec
mov
add
mov
adc
out
out
leave
shl
jmp
cli
pop
les
cwtl
call
aad
cmp
das
cwtl
into
pushf
mov
jae
scas
je
jae
sets
lea
mov
inc
cmp
mov
jb
addb
or
mov
inc
cmp
dec
iret
ja
cmp
mov
or
push
faddp
lods
cmpsb
lods
and
es
iret
test
push
pop
cmp
add
rolb
in
xchg
in
test
fs
pop
sub
adc
fucomi
fmuls
or
xchg
in
xor
mov
sbb
cmc
jmp
lods
insb
cmpsl
je
fucomp
or
repz
add
sub
cmpsl
mov
in
mov
lret
dec
jl
leave
and
jbe
fsubrs
idivb
sbb
and
in
fwait
and
dec
orl
jbe
pop
adc
push
xchg
sbb
sub
dec
movsl
fmuls
scas
xor
popf
xorb
out
jnp
and
dec
test
sbb
mov
xor
popa
xorl
xchg
adc
lret
push
xor
xchg
jg
pop
pushf
stc
rol
xchg
fcoms
leave
dec
into
test
mov
gs
sbbl
push
inc
sub
lds
es
add
popf
stos
sbb
arpl
xor
popa
xor
add
mov
jae
add
cmp
and
pop
xchg
cmp
and
dec
mov
js
lahf
mov
adc
inc
fwait
or
inc
pusha
or
pusha
fdivs
inc
fs
out
dec
out
cmpsb
sub
pop
xor
mov
filds
mov
mulb
sub
inc
mov
fidivrl
iret
shl
dec
sub
int
sub
popa
cmp
xor
orb
push
adc
push
ss
xor
inc
je
pop
pop
mov
dec
rcrl
bound
xor
jmp
jnp
jbe
xchg
rolb
negl
test
out
sbb
les
lods
addl
sbb
or
mov
sbb
add
dec
adc
or
fisubs
xchg
dec
mov
stc
into
lahf
mov
cmp
inc
mov
and
sti
ljmp
and
cmp
jle
aaa
mov
loope
and
insb
xor
imul
push
mov
mov
popa
insl
jnp
cmp
stos
stc
imul
test
xchg
push
sub
js
and
mov
jo
or
movsl
xchg
mov
adc
out
sbb
aam
xor
sub
mov
shlb
movsb
fistps
cli
jg
push
push
sbb
push
sbb
insl
repnz
pop
call
es
not
pop
sbb
stc
jl
pop
jmp
and
xor
cmp
dec
cs
and
insb
push
adc
cmpsl
jl
insb
add
out
aas
sbb
aaa
lods
mov
sub
jp
mov
cmp
mov
aaa
push
scas
sub
repz
dec
lods
sarl
mov
jge
imul
int3
and
jp
mov
mov
inc
push
insl
inc
pusha
outsl
ss
mov
xorb
or
add
sbb
stc
sub
jns
cmpsb
xor
nop
outsl
xchg
mov
lods
sub
cmp
fstpt
xor
or
jmp
ret
push
sbb
fdivl
int3
imul
push
jbe
call
aad
mov
dec
aas
je
not
mov
aas
les
ljmp
mov
or
pop
leave
xchg
fistl
insb
or
mov
cmp
pop
pop
xchg
xchg
js
imull
fisttps
xor
scas
cmpsl
bound
addl
mov
add
adc
rcll
ret
repz
stos
in
and
hlt
ret
sbb
fdiv
inc
mov
into
cwtl
inc
in
scas
cmpsb
inc
subl
push
sahf
jg
ffree
das
leave
sub
adc
stos
imul
pop
shlb
jp
or
out
and
movsl
aad
dec
sti
lahf
cmp
rcrl
add
pop
adc
leave
cmpsl
icebp
stos
cmp
xlat
in
js
adc
aam
imul
xor
fs
mov
jmp
push
arpl
cmp
fs
dec
mov
mull
dec
xor
push
std
push
jbe
call
repnz
aad
dec
test
sub
adc
sub
popa
cwtl
mov
sbb
xor
inc
inc
mov
mov
xchg
or
jns
repz
lahf
and
jns
pushf
mov
cltd
jecxz
stc
sub
loop
popa
out
inc
aaa
adc
fiadds
pushw
repz
fmul
mov
mov
ja
pop
inc
aam
mov
testb
cli
inc
fcoms
push
loop
xchg
push
pop
testb
xlat
pop
dec
call
pop
stc
mov
pop
lods
ss
push
pop
add
mov
sub
pop
mov
inc
mov
jno
xchg
fldenv
nop
xor
mov
cmp
rol
cld
push
shrb
or
dec
icebp
lea
lcall
out
clc
repz
adc
lds
shrl
ds
mov
stos
es
mov
out
decl
jnp
lods
imul
in
outsl
into
jae
call
xor
mov
aad
sbb
ret
sbb
sbb
out
std
pop
xchg
mov
fdivrl
sbb
pusha
loope
pop
dec
test
icebp
cmp
outsb
mov
lret
cmc
sub
orb
adc
ljmp
fmull
les
lret
movsl
xor
xchg
fmull
loopne
or
enter
fcompl
hlt
jle
mov
xchg
sahf
xor
hlt
add
sub
add
mov
mov
cld
mov
dec
xor
cmp
mov
fdivl
jnp
sti
mov
inc
sti
xor
mov
xchg
and
pop
insb
jb
mov
sbbl
imul
xchg
inc
push
cmc
pop
mov
push
xor
data16
xchg
push
mov
fisubrs
cld
mov
cmp
loopne
lea
mov
out
scas
jmp
sbb
add
imul
push
sub
fisubrs
hlt
enter
inc
ret
lret
xchg
push
lods
xlat
nop
or
inc
xor
sub
cmp
inc
jnp
cmp
jmp
sub
mov
dec
fs
jmp
scas
and
stos
imul
xchg
fwait
jecxz
and
out
push
sbb
lret
lods
mov
xlat
repnz
and
mov
pop
add
test
or
and
push
add
in
mov
push
out
xor
add
lods
jns
xchg
xchg
mov
sub
jbe
ja
inc
jns
popf
pop
rcrl
xor
add
dec
loopne
sbb
pusha
sbb
jo
adc
adc
sub
cmp
pop
adc
jns
into
scas
gs
push
jo
into
or
xchg
push
ret
cmp
je
cs
daa
jmp
in
xchg
sub
movd
cli
cmc
or
push
sbbb
fsubrl
inc
sbb
es
fwait
mov
add
push
outsb
test
stc
xchg
dec
arpl
push
push
into
adcb
mov
test
dec
add
inc
xchg
inc
cmc
inc
cmp
pop
or
out
popa
in
inc
aas
movsl
or
pop
xchg
in
and
sahf
xchg
or
mull
add
jl
push
jl
push
stc
mov
stc
mov
lods
out
xchg
jno
pop
out
jp
or
mov
pop
dec
mov
or
push
mov
in
xchg
test
cmp
cmp
add
out
xor
hlt
out
push
popa
xchg
call
mov
scas
bound
dec
push
fcoms
mov
add
pushf
pop
pop
rcrl
cmpl
lea
mov
push
sbb
sbb
adc
xor
or
xor
cltd
mov
xor
push
and
and
push
xor
test
jl
ret
loop
push
and
scas
mov
push
sub
icebp
jnp
pop
hlt
push
mov
aas
lcall
fnsave
enter
inc
pop
jne
mov
mov
push
cmp
xchg
pop
xchg
pop
daa
jo
and
inc
cmpsb
xchg
jne
and
pop
mov
lret
push
sbb
leave
loopne
xor
in
jmp
test
add
jle
jbe
loopne
mov
push
in
xor
xchg
or
add
sahf
imul
inc
andl
jp
push
mov
lods
ljmp
test
sahf
jl
js
jge
addr16
adc
xchg
and
push
or
mov
popa
sbb
sub
jne
adc
mov
push
je
add
lcall
mov
arpl
jno
inc
je
sbb
adc
adc
xchg
adc
std
test
sub
jns
mov
orl
fsub
xchg
inc
cmp
nop
xor
in
stos
cmp
fwait
mov
and
popl
xor
xlat
popa
cmp
xchg
dec
push
or
jle
mov
and
inc
std
mov
pop
inc
jae
mov
mov
ss
jbe
inc
cmp
push
pop
mov
arpl
jb
xchg
fbstp
inc
xchg
movsl
sbb
aas
dec
loope
dec
pop
les
push
inc
test
xor
sbbb
in
add
fistpl
mov
mov
xchg
jne
icebp
sbb
mov
inc
adc
jecxz
add
popa
or
sub
test
sbb
mov
mov
pusha
pop
dec
in
xchg
scas
jecxz
shll
clc
mov
cmpsb
push
mov
add
divl
jle
or
mov
jecxz
sub
insb
es
psubusb
mov
sub
push
mulb
xchg
sbb
and
mov
pusha
or
sarb
add
or
ret
cmpsl
test
push
sub
or
scas
je
pop
dec
imul
int3
sbb
mov
and
outsb
fwait
pop
push
xchg
cltd
sub
aam
ja
xchg
xlat
push
inc
fdivs
add
sbb
mov
push
dec
mov
clc
mov
push
add
add
cmp
jle
rorb
arpl
push
xchg
outsl
arpl
stos
outsb
jo
and
mov
call
mov
pushf
repnz
in
and
mov
das
movsb
lret
ret
pop
adc
xor
out
or
lcall
mov
shrb
sub
lcall
vmovq
lods
rcrb
dec
fistpll
imulb
or
or
imul
xor
inc
mov
mov
scas
cmc
inc
js
jbe
les
jmp
mov
mov
std
cmp
outsb
stc
jmp
nop
ror
dec
rcl
xchg
das
inc
repz
mov
shll
or
pushf
mov
or
call
fwait
dec
adc
aad
aad
out
sti
jle
dec
outsl
push
jo
adc
sbb
stc
lret
mov
xchg
fsubs
stc
cmp
aam
mov
pop
push
loope
push
test
jae
repz
mov
popa
jns
loopne
mov
add
rorb
mov
and
icebp
div
inc
mov
cli
cmp
imul
imul
out
xor
xchg
loope
ret
not
ja
or
aas
lds
add
push
jns
adc
sub
int3
je
sti
mov
insb
loop
loope
jmp
ret
jns
and
outsl
push
cmpl
test
jge
fsubs
psubq
notl
pop
and
enter
ret
or
sub
cmp
cltd
sbb
mov
fwait
jne
repz
mov
ficoml
out
push
icebp
xchg
mov
add
rolb
inc
jae
test
stos
in
sub
ret
or
mov
push
cmp
dec
test
mov
mov
jmp
adc
mov
call
mov
xor
push
mov
nop
xor
loop
aas
popf
notl
mov
ja
pop
nop
xchg
loopne
lock
add
xor
mov
lret
cltd
outsb
mov
push
xor
push
xchg
insb
xchg
stos
aad
xchg
xor
xchg
dec
scas
js
in
repz
dec
stos
jo
dec
ds
lods
dec
jb
cli
cmpsl
cmp
clc
mov
sub
dec
andl
insb
shll
in
decl
sub
and
sarl
cmpsl
rcrb
push
mov
cltd
mov
addr16
faddl
dec
mov
pop
jecxz
or
test
fcomi
jp
movsb
pusha
sbb
cs
mov
pop
xor
aad
iret
mov
pop
add
movsl
sbb
adc
fbstp
mov
roll
push
sub
jns
movsl
rcrb
scas
into
xchg
es
sub
lret
push
into
sub
filds
pop
movsl
adc
xchg
in
mov
test
cld
sbb
insl
adc
psrlw
movsl
orb
dec
pop
push
inc
fnstenv
aaa
mov
mov
inc
add
push
lret
cwtl
repnz
or
in
cmpsl
or
mov
jl
dec
sbb
and
outsl
mov
lods
add
xchg
fsubs
cmpb
stos
jne
test
mov
leave
int3
into
repz
sub
sub
fs
loop
imul
mov
or
scas
pop
jp
or
jbe
xchg
loope
out
mov
add
lahf
addr16
adc
mov
inc
lret
sbb
cmp
mov
lcall
mov
lahf
aaa
push
sbb
push
or
dec
cwtl
jno
dec
jp
andb
jb
cmp
xchg
mov
ret
cmp
sbb
push
rcrb
insl
inc
mov
cwtl
test
scas
xchg
cld
clc
cltd
sub
lods
sbb
and
add
ja
xchg
cmc
lcall
sub
sub
jo
rclb
jg
cli
mov
pop
sub
adc
pop
sub
cmp
cmp
inc
incb
loopne
sub
jnp
xchg
mov
notl
sbb
stc
sahf
push
lret
test
mov
add
push
sbb
and
lods
lcall
push
pop
xlat
scas
and
cmp
mov
dec
sahf
fiadds
cmp
xor
ret
orl
movsl
loopne
mov
insb
lods
pushf
add
mov
test
push
addl
mov
mov
mov
int
loope
movsb
lea
add
mov
push
pop
mov
sub
xor
sbb
sub
outsl
daa
or
push
in
testl
mov
icebp
xchg
das
jno
stos
push
rcl
lret
test
clc
sub
push
sbb
push
jns
pushf
jmp
loopne
pop
lcall
mov
or
fsts
nop
xor
out
mov
sbb
in
sti
in
int
add
mov
cmp
push
cmp
imul
loopne
inc
pop
cld
ja
pop
ljmp
rcll
add
pop
jae
stos
jnp
cmp
ret
cltd
and
test
outsb
mov
fstpl
movsl
outsl
mov
fidivl
jp
movl
cwtl
cld
cmp
mov
jae
dec
cld
push
lret
inc
sub
insl
pop
and
enter
pop
outsl
jne
loope
and
lcall
mov
enter
test
mov
mov
repz
fdivl
sub
iret
fdivl
pop
imul
sbb
cmpb
fadds
push
xor
cmp
int
push
les
clc
enter
inc
push
movsl
aas
inc
mov
mov
stos
add
jb
cmp
mov
adc
mov
cmc
push
push
push
gs
icebp
mov
add
add
stos
xlat
xor
data16
test
dec
add
int3
cmpsl
les
adc
adc
int
add
frstor
push
sub
cmpsl
xchg
in
popf
jno
enter
notl
rcl
push
insb
fwait
aam
in
inc
push
pop
je
sub
push
sub
add
pop
sub
lods
push
test
daa
and
mov
xchg
add
sbb
test
gs
fidivrl
cld
mov
pop
jns
mov
push
lea
subl
out
push
stos
cld
mov
sub
ljmp
fcomip
data16
rclb
andl
not
movsl
pushf
xchg
sub
jmp
into
push
lret
jg
dec
mov
jae
sub
or
push
or
mov
rorl
outsl
push
mov
mov
lcall
cmp
jle
imul
popf
push
cli
add
xchg
inc
jns
dec
mov
das
or
lret
push
push
testl
inc
clc
add
adc
xchg
ror
mov
mov
scas
lret
ret
scas
cmpsl
roll
insb
cmpsb
mov
les
fcmovnu
sub
adc
iret
mov
loopw
sti
fwait
pop
cmp
in
pushf
jl
outsb
jg
imul
jg
les
jnp
stos
jne
push
ret
mov
fcomps
les
imul
lods
out
cwtl
mov
movsb
fcmovbe
aaa
std
adc
push
or
in
xchg
mov
shl
and
pushw
sub
popf
xor
stos
test
outsl
pop
mov
push
fdivrs
js
cmp
jb
mov
and
std
hlt
push
insb
fucomip
mov
xor
mov
fldenv
iret
jl
ja
sbb
add
sbb
or
pop
fdivrs
aam
lods
mov
xor
push
aas
inc
mov
fs
xchg
xchg
add
xchg
mov
inc
cmpsl
jg
mov
stos
mov
inc
repnz
mov
adc
dec
dec
hlt
add
cmp
in
inc
pushf
ljmp
mov
fcmovbe
jecxz
arpl
mov
inc
loope
sbb
push
sub
movsb
sahf
xchg
ret
pop
xor
rcrb
and
pop
cmp
inc
aas
pusha
dec
mov
add
jge
stc
jo
insb
addl
jo
push
insb
popa
enter
stc
sti
push
movsl
repnz
mov
cmpsl
sub
pop
mov
cmp
pusha
cwtl
push
push
inc
sbb
xorb
dec
sbb
mov
or
test
sub
push
cmp
cmp
imul
hlt
es
jg
pop
test
sub
cmpsb
in
insb
idivl
ss
adcl
jmp
cmpsb
mov
or
mov
jno
push
sbb
cmpsl
out
in
fimull
in
sbb
cmp
or
dec
fdivrl
and
jl
xor
adc
dec
jb
mov
sub
mov
rorl
adc
lret
stos
add
mov
dec
orl
mov
jmp
call
and
cmp
xchg
xchg
fnstcw
fsubs
lea
in
into
adc
add
mov
out
and
mov
mov
mov
in
fistpl
mov
cmp
mov
sub
adc
ja
fimull
xlat
mov
mov
or
data16
aas
push
cmpsl
int
jo
or
je
inc
mov
add
jecxz
je
iret
xchg
cmp
sbb
push
test
sahf
les
or
and
jne
roll
mov
push
push
inc
adc
cmp
loopne
movsb
hlt
rolb
adc
cmp
pop
fistps
aad
pusha
push
test
lret
lock
lahf
flds
or
xchg
pop
dec
int
mov
mov
pop
push
inc
add
mov
dec
rcrb
xor
adc
mov
loop
mov
in
test
into
lods
es
mov
push
sub
push
add
xchg
cmp
cmpsl
jb
push
jl
sbb
add
sbb
or
push
sbb
adc
mov
fistps
rcrl
fldenv
call
xchg
xor
and
and
rcrl
sbb
insl
out
js
xchg
mov
outsl
js
inc
jbe
out
push
dec
adc
mov
outsb
test
pop
popa
mov
pop
insl
lods
cmovns
loopne
mov
shll
jle
es
xor
dec
shl
and
xchg
out
sarb
lock
es
movsb
dec
sbb
aad
cwtl
lods
ret
outsl
ljmp
sbb
push
arpl
es
sti
xcrypt-cfb
cmpsl
and
aaa
mov
push
ljmp
fwait
adc
sbb
mov
xor
mov
arpl
das
pop
xor
mov
aam
lds
mov
rcr
jmp
addb
push
cmc
mul
mov
fimull
callw
push
jge
into
out
movsb
adc
aam
adc
call
pop
push
mov
ljmp
pop
or
push
pop
add
pop
jne
js
cmp
push
inc
xchg
mov
inc
add
dec
pop
mov
push
xchg
cmp
jmp
xchg
jecxz
mov
ret
in
mov
stos
movsl
shlb
je
imul
ja
clc
push
into
xor
out
jb
cld
dec
pop
jg
cmc
cmp
shrb
or
lods
test
jne
xchg
pop
or
rcrl
mov
ljmp
and
cmpsl
es
and
pop
inc
repz
imul
ret
rcrl
hlt
in
xlat
pop
lcall
fst
jns
rclb
mov
aas
daa
mov
ret
lea
fidivs
sar
mov
sar
dec
ljmp
aam
xchg
cmpsl
dec
dec
sub
jno
cld
mov
or
lcall
pop
xchg
insb
je
mov
inc
std
mov
nop
mov
push
stc
ja
int3
mov
pop
sub
test
mov
cmp
mov
mov
jmp
sub
add
or
mov
movb
inc
xchg
dec
xor
aas
lret
loop
popa
mov
push
pop
stos
int3
lods
stos
and
das
jbe
jae
xchg
fs
aaa
mov
insl
lods
jg,pt
scas
adc
ret
out
push
sbb
add
jp
ja
shll
inc
sahf
push
mov
mov
sub
pop
setg
movsb
lahf
daa
bound
push
adc
cmpl
scas
mov
xor
xor
mov
leave
jnp
lock
jbe
movsb
lods
jle
aas
inc
sbb
cli
dec
fisubs
adc
test
pop
into
mov
data16
aad
jecxz
push
add
or
mov
faddl
outsb
and
sbb
pop
push
dec
outsl
in
jns
dec
lea
xchg
lods
js
addl
dec
mov
test
and
mov
dec
dec
nop
sub
lods
xchg
push
cltd
lods
fsubl
outsl
xchg
xchg
pop
test
mov
cmpsl
mov
sbb
mov
pop
in
mulb
cmp
mov
cld
pop
cmc
stos
xchg
mov
dec
or
add
cmp
mov
add
rclb
dec
jne
jmp
stos
mov
cltd
xor
enter
jmp
sub
clc
mov
cmpsl
ret
push
negl
aam
pop
jbe
inc
in
push
xchg
aaa
movsl
inc
sbb
scas
mov
mov
jl
cmp
xchg
xchg
shr
or
popa
data16
stos
loope
out
mov
sbb
xchg
cmp
jmp
in
jns
sbb
dec
ret
mov
inc
cmp
repnz
xor
dec
loop
inc
xchg
mov
data16
out
aas
push
xchg
cmp
fdivs
xor
pop
mov
int3
clc
stos
insb
imul
mov
xchg
push
jb
lea
popa
mov
lret
jns
out
aaa
xor
aas
ljmp
je
aas
stos
daa
and
sub
ja
jae
push
out
push
and
and
movsl
xor
fs
ror
push
cltd
shr
add
cmc
mov
mov
mov
mov
xor
mov
insl
xlat
adc
stc
push
int3
mov
or
xor
xchg
shll
dec
xor
ficoml
mov
sub
sti
outsl
sbb
xchg
frstor
mov
cld
movsb
xchg
cmc
mov
mov
jle
xchg
jno
xlat
ret
popa
sbb
das
inc
fwait
sub
pusha
jmp
xor
xchg
test
add
xchg
and
lea
xchg
pop
push
pushaw
or
mov
cmp
outsb
clc
mov
mov
ret
xchg
std
roll
sbb
or
xchg
in
mov
xor
cld
test
sub
faddp
ljmp
cwtl
fadds
aam
cmp
push
pusha
xor
jnp
mov
mov
pop
subl
mov
popf
sarl
ret
insl
shrl
lret
jnp
jl
pop
das
jecxz
mov
dec
rcr
scas
pop
sbb
jns
out
test
cs
push
bound
push
mov
sbb
into
and
cltd
or
inc
sar
pop
sti
cld
js
mov
mov
ds
cld
shlb
inc
or
xchg
lret
fdivs
scas
shll
mov
popa
jnp
jb
daa
outsl
test
int
jo
and
gs
jnp
dec
lahf
pop
lds
cltd
adc
push
xchg
sub
push
loope
cmp
add
jb
dec
or
mov
pop
rol
mov
pop
mov
ljmp
push
adc
in
pushf
mov
iret
pop
lcall
and
sub
adc
movl
mov
adc
jae
or
imul
fbstp
sbb
push
in
mov
jb
pop
sbb
popl
fcomi
jb
inc
dec
les
mov
shrl
jle
or
subb
stos
and
mov
mov
imull
or
scas
fists
ds
test
xchg
mov
adc
sub
lods
mov
dec
nop
or
je
pop
xlat
pop
cmp
add
int
sti
ja
addb
add
xchg
sub
pop
and
outsb
popf
push
enter
fdivl
jl
dec
cwtl
ficoml
or
sbb
add
lcall
test
xchg
pop
push
repz
shll
push
dec
cmpsb
inc
mov
iret
add
ljmp
cmp
test
addr16
into
xchg
add
mov
loop
and
subb
and
jmp
mov
add
adc
xchg
or
xor
xchg
in
pop
jecxz
btcl
in
mov
pop
mov
xchg
xor
push
pushf
adc
dec
sbb
mov
lahf
je
push
pop
jl
push
mov
pop
and
adc
and
outsl
sub
jg
mov
sub
cld
mov
lods
mov
scas
dec
xchg
mov
cmp
mov
in
movl
lods
jb
cwtl
jmp
jnp
pop
mov
xor
loope
shll
int3
xchg
push
addr16
enter
adc
loopne
test
cmp
jbe
inc
insb
popa
bound
fldenv
push
mov
lods
cmpsl
repz
icebp
mov
inc
data16
and
js
pop
insb
test
loop
jne
sbb
lret
sbb
mov
pop
and
in
mov
cld
add
fpatan
xor
sti
outsb
jmp
mov
pop
jno
cltd
enter
mov
pop
enter
adc
iret
pop
roll
ret
imul
cmp
jg
cmc
dec
jo
lret
rcrl
rorl
mov
add
sbb
or
outsb
cmp
test
cmp
adc
sti
push
rol
fwait
inc
adc
faddl
pop
push
lret
fstpt
xchg
cld
in
inc
fcmovbe
mov
stos
jg
adc
dec
rcrb
andl
or
aad
dec
cmp
jle
out
mov
mov
xchg
arpl
push
xchg
ja
fs
pusha
pop
popf
fs
dec
cli
or
in
out
xor
xchg
xor
je
sbb
adc
inc
pushf
and
jmp
xchg
call
mov
inc
adc
mov
cmp
ljmp
add
arpl
cltd
cs
lret
xchg
insl
loope
daa
cmpsb
imul
dec
lods
dec
xor
pop
jnp
fldenv
jno
sbb
sbbb
clc
lds
or
inc
xchg
mov
imul
push
jae
sbb
jmp
or
rcll
in
pop
arpl
into
loope
stos
pop
push
outsl
fdivs
popa
xor
adc
pop
push
repnz
and
inc
jbe
add
pop
cltd
push
insl
sarl
movsl
adc
shlb
jmp
add
mov
pop
jmp
stos
std
inc
jg
sub
mov
push
and
loope
sbb
fdivl
add
popa
mov
jo
inc
sahf
push
push
inc
lods
test
loop
xchg
dec
push
cmpsb
sbb
push
imul
movsl
insb
and
ljmp
fisttps
xchg
cmp
repnz
mov
sbb
mov
add
shr
and
rcll
push
cmp
setae
sbb
xchg
inc
xor
rclb
inc
fisubl
adcl
fiadds
inc
in
and
js
xchg
xor
dec
sbb
xor
push
xchg
iret
repz
lods
cmpsb
sub
popf
adc
mov
std
arpl
sub
push
jl
push
push
arpl
xchg
sub
mov
xchg
fwait
rolb
or
loop
out
xchg
std
jg
add
ror
lcall
test
and
lock
sbb
mov
adc
aaa
pop
or
pop
cltd
dec
jb
test
and
sbb
in
fistps
pop
cmpsl
cmp
loopne
fnsave
sub
xor
pop
cmpsb
mov
dec
loopne
xchg
fistl
daa
jns
mov
pop
adc
popa
rcrb
push
inc
jmp
gs
push
shll
lock
xchg
insb
lea
stc
cmpb
push
fsubrp
and
test
cmpsl
out
iret
xor
and
leave
push
lds
pop
push
jmp
cltd
hlt
mov
dec
cmp
inc
or
mov
mov
fndisi(8087
leave
xchg
push
or
inc
xor
mov
add
mov
mov
or
setle
lods
stos
mov
xchg
data16
cli
pop
xchg
fimull
loope
inc
pop
shrb
push
cmpb
add
and
xor
adc
adc
pop
daa
nop
imul
adcb
cmp
xor
push
in
xlat
out
add
cld
pop
fmull
aam
ljmp
and
ds
sub
lock
les
cmp
add
xor
push
and
pop
jno
rcr
push
inc
adc
mov
jno
test
out
dec
lahf
sub
aas
dec
cltd
mov
rdpmc
jnp
adc
or
lahf
dec
outsl
mov
adc
stc
xor
mov
sbb
ss
fsubrl
ljmp
loopne
inc
repz
fs
fcmovbe
outsb
je
mov
cld
dec
lret
out
push
stos
aam
xchg
push
test
and
mov
push
stos
cli
stos
fisttps
fwait
push
mov
fstl
cmp
enter
pop
ljmp
aas
shrb
test
add
stos
mov
add
cmp
call
mov
pushf
aaa
mov
loope
lret
adc
sbb
push
pop
imul
bound
xor
gs
cli
nop
loop
push
dec
jo
xchg
js
int3
pushf
pop
insb
arpl
xchg
or
arpl
add
mov
ds
int
in
outsl
mov
dec
and
mov
adc
or
mov
cwtl
pop
sti
les
jns
lret
popa
fwait
aas
cltd
lds
nop
test
sub
cmpsb
iret
mov
enter
push
cltd
xor
mov
insb
lock
xor
inc
lret
add
aam
sbb
out
cmpb
test
push
jg
fsubrl
sub
mov
mov
xchg
mov
ljmp
cltd
mov
push
ficomps
arpl
imul
aad
out
xchg
add
stc
push
cld
test
int
push
outsl
sti
push
je
repnz
gs
mov
pop
iret
xchg
pop
jle
push
addl
jae
movsl
mul
inc
outsl
pushf
scas
fcompl
idivl
movb
iret
or
push
mov
sahf
or
cmp
push
xchg
stos
lcall
lahf
fisttps
adc
cmpsl
mov
lods
cmovle
sbb
shl
xor
dec
xor
jecxz
std
pop
fiadds
push
xor
dec
hlt
cmp
mov
paddusw
mov
adc
push
shl
gs
hlt
outsl
jae
sbb
xchg
adc
sbb
sbb
sub
cmp
xchg
pop
push
sbb
push
xor
push
jb
pop
jl
sarl
xchg
aas
repz
mov
mov
push
int
clc
fwait
jl,pt
sub
sub
cmpsb
cs
sub
mov
arpl
xor
pop
loop
pusha
mov
jb
cmpsb
es
lods
ja
xor
cmpsl
je
jne
pop
int3
dec
mov
pop
inc
sub
push
or
push
ss
aas
xchg
xchg
jg
mov
push
push
cmpsb
xor
inc
add
lock
adc
jl
dec
outsb
adc
aam
adc
push
sbb
call
sbb
mov
sbb
fistpl
ss
mov
jmp
mov
mov
scas
xor
nop
out
shlb
adc
inc
mov
jmp
lods
lcall
cmp
cwtl
popf
sub
stos
nop
push
push
test
mov
popf
mov
dec
movsb
xchg
and
lods
dec
rcl
cwtl
or
xchg
ret
push
pusha
sub
sub
push
mov
dec
notl
fmulp
test
dec
cmp
call
fs
movsb
xor
enter
fmull
cmp
out
movsb
lret
jnp
pusha
loop
ds
lret
xchg
and
inc
enter
vpunpckhbw
dec
add
lock
xchg
add
jne
and
adc
mov
mov
fcmovu
inc
lods
rclb
sarb
push
lock
xlat
out
pop
xchg
shl
jp
fs
ljmp
inc
ss
sub
pop
mov
or
out
push
xor
cmpsb
mov
cmc
pop
add
into
cmp
imul
cmp
dec
pop
mov
mov
pop
cmp
out
pop
mov
cmp
cmp
test
dec
jne
lock
repz
lods
and
jmp
ret
mov
pop
iret
push
or
push
in
or
addps
push
mov
out
loop
cmp
xchg
cltd
cmp
cs
ss
mov
mov
cmpsb
rolb
lods
test
xchg
fsubs
pop
mov
jecxz
sub
notb
and
and
adc
fisubs
subb
sbb
xor
lret
xchg
push
pop
jae
xor
leave
jmp
cmp
push
jbe
jle
out
cli
lods
shlb
arpl
pop
cmp
sbb
push
jg
fs
aam
sub
mov
and
push
pop
cmp
cld
jmp
push
inc
push
adc
xor
testb
cmp
adc
fdivl
or
jo
in
add
aaa
pop
xor
xor
mov
push
or
in
jp
push
sub
int
leave
pushf
sub
xchg
pop
mov
es
mov
adc
int3
daa
xor
inc
or
inc
sarb
shrl
aam
lret
cmc
jno
jno
stos
into
jno
andb
test
or
push
and
cmc
xlat
je
jo
rcrb
fdivrp
js
call
sub
and
cld
mov
aad
push
popf
popf
scas
imul
out
test
jbe
out
test
and
sub
clc
sub
ret
bound
aas
mov
pop
push
or
push
sub
rcr
pop
pop
lods
sbb
mov
cmp
dec
int3
shll
mov
jmp
or
xor
inc
test
mov
dec
xchg
stc
repz
mov
les
mov
xchg
sbb
mov
jge
jge
je
or
rolb
jge
or
xchg
push
cmp
ds
lahf
mov
cli
xchg
mov
pop
imulb
mov
divb
mov
out
jl
dec
mov
cs
xchg
xchg
fwait
dec
lahf
mull
in
loop
mov
cli
adc
or
push
sbb
js
fdivl
inc
dec
and
push
jo
lret
ret
inc
dec
shlb
xor
inc
sub
jb,pn
mov
sahf
shlb
adc
bound
mov
push
or
imul
xor
sub
mov
outsb
xchg
and
test
inc
dec
insl
and
in
and
cli
xchg
lods
andl
dec
scas
fs
pop
mov
mov
inc
dec
xlat
popl
inc
push
sbb
repz
icebp
cmc
scas
push
cwtl
push
dec
mov
xchg
stos
sub
adcb
or
xchg
imul
out
cmpsb
cmp
inc
cmp
lcall
sbb
out
aam
pop
adc
mov
outsl
add
mov
fwait
ds
dec
pop
xchg
icebp
rsqrtps
dec
inc
ja
or
ljmp
fs
mov
scas
cmp
ret
or
in
inc
pushf
lret
ljmp
xchg
inc
cld
xor
push
lds
adcb
xchg
sbb
sub
cltd
cmp
adc
ret
xchg
cmpsb
mov
into
push
aad
mov
imul
inc
jmp
push
das
xlat
sahf
mov
cmp
mov
rcrl
push
cmp
repz
dec
cltd
push
loope
enter
out
push
adc
jmp
or
cmp
jnp
ds
leave
popa
pushl
xor
push
sahf
inc
or
adc
mov
outsl
or
and
sub
fnstcw
fstpl
lret
mov
fcompl
fdivl
scas
test
gs
fwait
inc
xor
push
shrb
mov
movlps
cmp
cmp
push
pop
cmp
std
sub
sub
xchg
test
loop
rorb
sbb
mov
popa
pop
xchg
in
xor
hlt
fists
push
and
cmp
dec
fdiv
jl
sub
inc
test
mov
std
repnz
lret
pop
test
inc
dec
pop
mov
into
clc
cwtl
cld
fs
daa
and
mov
jno
orb
push
movsb
push
gs
inc
pop
xchg
das
ret
sar
rorl
sbb
pusha
push
dec
add
inc
xchg
orb
lods
arpl
roll
negl
out
jmp
or
and
mov
cli
pop
jge
xor
outsb
nop
mov
xor
addr16
loop
repz
imul
stos
mov
mov
or
addr16
inc
mov
jle
mov
ja
or
ss
ret
adc
pop
push
ljmp
fdivrs
add
ficoml
mov
pop
jb
pop
ja
add
cmp
ja
popa
xor
xchg
popf
jmp
xchg
arpl
je
adc
cwtl
mov
insl
and
mov
cli
cltd
insl
inc
aam
fwait
cmovae
mov
call
push
sbb
sub
or
dec
push
fists
hlt
mov
cmp
xchg
push
addl
dec
cmp
leave
xchg
rorl
ret
xchg
jae
pop
fxch
cmp
inc
scas
pop
outsb
cmp
ret
mov
push
jle
mov
sbb
andb
cmpsl
in
loopne
int3
lret
out
repz
aad
je
scas
push
cmovle
repz
cmp
sub
out
mov
fisttpl
mov
rorl
inc
sub
sub
mov
adc
dec
push
xor
cmp
and
pop
inc
dec
bswap
adc
loop
xchg
ret
mov
adc
pop
mov
dec
repz
std
fdivrl
pop
clc
mov
in
cmpsl
in
mov
inc
mov
add
scas
cmc
sbb
or
call
inc
loop
imul
ljmp
mov
sbb
jb
lods
sbb
enter
out
fcmovnu
add
mov
orl
jb
sbbb
jg
enter
jae
loopne
pop
xchg
push
push
mov
ljmp
inc
mov
arpl
mov
push
imul
rcll
dec
mov
dec
fst
pusha
inc
int3
xchg
or
sub
lea
push
inc
xchg
add
sbb
and
sbb
or
pop
push
imul
xchg
pusha
jecxz
jbe
les
mov
inc
inc
int3
mov
dec
pop
xchg
movsl
sbb
adc
lods
ret
sahf
mov
cmp
dec
add
or
fmull
push
mov
cmp
mov
and
scas
mov
lds
frstor
mov
imul
loopne
push
inc
out
and
stc
fnstsw
call
mov
jg
mov
cmpsl
addl
and
pop
fmull
jns
mov
fs
mov
fldt
sahf
mov
xchg
push
mov
lds
enter
pop
test
push
cmpl
cld
mov
jae
xchg
push
leave
nop
jns
push
out
cmp
outsl
std
sub
jg
mov
or
push
sbb
in
inc
xchg
xchg
dec
push
cwtl
cwtl
or
outsb
test
lret
aad
pop
inc
cmpsl
aad
push
xor
adc
jo
imul
insb
pop
add
ss
mov
cld
test
jle
sbb
dec
btr
rolb
aas
and
add
adc
loopne
mov
lods
mov
adc
enter
pop
pop
mov
xchg
andb
cmpl
sub
scas
or
hlt
std
out
add
xchg
xchg
mov
pop
test
repz
call
xor
cli
jecxz
je
xchg
aas
xchg
xor
arpl
mov
ja
in
pop
push
shrl
mov
cltd
jae
stos
jle
push
sti
or
in
inc
push
push
pop
mov
sbbb
xchg
andl
xchg
cmp
sub
sub
iret
dec
aad
or
daa
mov
dec
and
frstor
jne
mov
hlt
pop
push
mov
jb
mov
sub
mov
out
pop
mov
sbb
and
jmp
push
add
movlps
or
popf
aas
gs
sub
cs
jge
jno
mov
cli
push
sbb
dec
in
das
cli
push
add
xchg
popf
mov
pop
pop
xor
cwtl
cld
xchg
aam
or
ss
out
dec
sbb
xor
fs
or
jnp
mov
cmp
loopne
hlt
sti
nop
or
clc
mov
mov
stos
and
add
mov
leave
lea
cmp
and
lret
and
mov
rcrb
push
jb
fyl2x
jge
mov
outsl
xlat
cmpsl
jecxz
ss
jp
push
cli
pusha
test
subl
and
or
pop
xchg
mov
mov
sub
jb
das
and
and
pop
xchg
fwait
shlb
fs
lock
mull
aaa
dec
leave
xchg
sub
xchg
out
outsb
or
ja
jb
ret
in
jno
pop
and
xchg
pop
dec
cmp
mov
jp,pn
addr16
imul
ret
mov
lahf
add
cwtl
xlat
xorl
pop
xor
jle
ja
popl
xchg
shll
sbb
fwait
in
add
push
mov
sti
push
repz
cmpsl
xchg
subb
aam
or
mov
ror
mov
out
ja
syscall
mov
mov
push
orb
mov
insb
inc
xlat
insl
xor
cmc
data16
cltd
popf
cltd
ret
pop
insl
ja
push
cmp
push
scas
mov
aas
dec
cwtl
jg
cs
inc
jecxz
call
ds
cli
fnstcw
arpl
out
cmpsl
pop
das
test
lea
and
pushf
mov
push
neg
fdivrl
dec
enter
mov
ljmp
ds
ret
je
pop
jl
cmpsl
aas
mov
mov
mov
mov
mov
in
outsl
jmp
xor
mov
jg
xor
out
add
data16
xchg
mov
cmovne
push
sbb
idivl
push
fsubrp
mov
stos
pop
mov
shl
lret
popf
mov
bound
push
xor
adc
sub
and
cltd
jecxz
shrw
xchg
data16
pop
push
lret
ljmp
adc
cmp
add
mov
dec
mov
push
addl
xor
sub
sbb
dec
lock
cld
fistpll
add
sbb
shl
cmp
ljmp
add
pop
mov
fcmovu
mov
cld
jae
daa
or
mov
mov
es
cmp
inc
and
inc
mov
jle
jmp
mov
add
cli
and
mov
movsl
cltd
pop
dec
test
cvtpi2ps
aaa
test
pop
lret
jns
ljmp
sbb
push
xlat
es
mov
cld
xor
add
jg
sbb
rorb
mov
in
adc
cmp
sbb
adc
inc
adc
mov
add
inc
jno
bound
push
or
xchg
nop
cwtl
mov
ret
jne
inc
rcrb
inc
sbb
call
jb
adc
cld
push
and
popa
fsubs
push
dec
sbb
mov
adc
rclb
xor
cwtl
mov
push
inc
clc
repnz
hlt
cmp
or
test
repnz
pusha
outsl
push
or
xchg
xor
mov
adc
int
or
push
jp
sbb
jbe
and
mov
ret
aas
outsl
or
push
mov
and
mov
mov
cmp
dec
xchg
call
aad
add
jge
adc
fsts
movb
dec
xchg
mov
fisttpl
outsb
or
ja
les
xchg
cld
bound
lahf
xchg
pop
jbe
adc
ja
enter
inc
cs
pushf
leave
inc
cli
adc
mov
jne
hlt
adc
fdivrs
clc
cmp
movsl
cmpl
push
fldl
cli
int
fadds
and
xchg
push
addr16
mov
inc
mov
ss
imul
xor
frstpm(287
mov
adc
pop
fdivr
adc
out
iret
imul
inc
xchg
pushf
repz
dec
jmp
stos
and
mov
out
pop
ds
lock
fldl2t
add
mov
mov
in
dec
jmp
mov
jno
inc
out
insb
push
lods
sbb
cmp
loope
lods
and
fidivs
loope
lods
mov
sti
inc
add
dec
push
mov
mov
loop
mov
scas
test
out
insl
lds
ret
cmp
cmp
push
jno
pop
jecxz
and
adc
out
in
or
push
xor
sbb
shlb
pop
lods
cmpl
sub
scas
sub
jl
mov
in
popf
imul
inc
jb
sbb
int
addl
sbb
cmp
inc
jno
imul
mov
adc
xor
cmp
repz
into
repnz
pop
aas
aas
mov
dec
lock
pop
fbstp
enter
mov
loopne
dec
enter
mov
repz
sarb
int
pop
jge
sarl
repnz
inc
fnstsw
xor
les
out
pop
mov
frstor
mov
mov
sbb
push
lods
sub
xchg
mov
mov
mov
cmovo
push
dec
adc
and
repnz
movsb
out
fidivrl
xchg
rcr
ljmp
adc
lock
leave
pop
rorb
int3
mov
pushf
enter
fisttps
ret
xchg
mov
or
jge
fidivrs
adc
ja
or
inc
out
inc
mov
lds
mov
push
push
imul
test
sub
call
xchg
mov
shr
js
jae
jno
lods
adc
pop
xor
negl
test
cmp
cmpsl
nop
sub
add
xchg
add
cmp
xchg
das
inc
out
lock
arpl
lds
add
adc
out
push
mov
xchg
in
out
or
dec
pop
ss
ja
mov
lcall
dec
and
scas
sbb
jb
cld
das
xchg
int3
push
pop
sbb
inc
outsb
mov
inc
mov
xchg
inc
mov
cli
cwtl
imul
hlt
gs
sti
pop
push
jb
fsubrl
jnp
pop
push
cli
arpl
or
pusha
arpl
sbb
jl
decl
ds
mov
add
inc
cli
negb
jo
test
inc
mov
push
out
es
or
push
push
mov
ljmp
out
push
popa
jno
cwtl
pop
mov
call
pop
sti
push
sahf
aad
mov
sti
xchg
or
mov
in
fcoms
adc
or
test
and
jle
and
jle
ja
rol
imul
push
das
shlb
cld
add
and
fbld
inc
xor
sub
sbb
shlb
stc
shr
adc
sahf
in
sti
xor
ds
aam
push
jae
stc
aas
jmp
jbe
icebp
or
shrl
icebp
pusha
mov
xchg
leave
sub
mov
add
add
jns
insb
int3
clc
mov
cld
repz
dec
scas
in
mov
lret
mov
ret
imull
int
add
inc
mov
lahf
imul
push
sbb
repnz
xchg
and
dec
fcomps
loop
shrb
jae
cmp
dec
sbb
rcrb
fwait
lahf
add
mov
sbb
mov
and
pop
pusha
xchg
xor
cld
and
fadds
bound
sbb
dec
mov
sahf
xor
push
pop
mov
sub
call
outsb
insb
mov
xchg
jle
dec
mov
push
test
aam
xor
adc
sub
or
scas
loop
out
inc
add
sub
aad
clc
cs
adc
fsubrl
and
ss
inc
popa
fnstsw
mov
lods
cmp
pusha
push
cltd
test
and
or
lock
daa
das
aam
sub
lods
testb
fs
push
jno
ja
push
inc
cmp
scas
and
pop
in
dec
pop
add
popa
mov
js
shlb
mov
inc
jp
dec
addr16
push
ss
inc
and
loope
mov
xlat
aaa
cmp
jecxz
call
push
jecxz
es
in
ds
fdivrs
int3
jle
mov
aad
sub
in
sbb
enter
andb
mov
repnz
xchg
fistpl
mov
pop
mov
mov
dec
sbb
push
and
pushf
jl
jp
dec
push
ja
cltd
adc
mov
loop
test
jns
bound
lock
fldenv
jnp
imul
mov
lret
push
add
popa
adc
inc
mov
aam
arpl
inc
xchg
mov
lock
mov
pop
adc
or
popa
mov
push
xor
xor
adc
sbbb
aam
loope
pop
mov
xor
aam
into
sub
mov
jmp
fcmovnu
jae
rcrl
sub
inc
out
es
dec
into
icebp
ret
mov
push
xor
jns
out
in
sarl
jne
pushf
cmp
pop
mov
repz
mov
imul
adc
push
sub
into
test
mov
and
mov
js
jecxz
sbbl
add
mov
cli
int3
pop
mulb
fstl
arpl
ret
dec
sub
xor
pop
lahf
mov
sub
mov
push
sbb
mov
fwait
or
movsl
movsl
idiv
inc
in
mov
add
and
das
inc
inc
mov
icebp
scas
and
xchg
mov
pop
loop
push
mov
pop
fisttpl
lods
movsl
aam
imulb
xor
jl
adcl
subb
fldl
xchg
ret
test
add
push
nop
std
adc
imul
jg
in
inc
xor
cmp
push
inc
jne
fsubrs
popa
push
xchg
adc
jb
das
cbtw
js
and
or
or
xchg
ja
mov
sarl
ficomps
orl
gs
xor
in
adc
dec
or
ja
xor
jnp
dec
hlt
fdivrl
add
and
daa
xor
movsl
sbb
mov
cmc
rolw
jmp
cmpl
jb
cmp
cmpsl
inc
mov
aad
std
xchg
or
or
inc
push
test
cld
push
xchg
and
lock
out
push
in
push
iret
stos
ficompl
xor
sbb
adc
mov
daa
xchg
xor
sub
or
mov
xor
pop
or
jmp
shlb
ja
dec
and
out
ds
decb
aas
dec
pop
das
adc
sti
and
outsb
fs
fsubl
fimuls
icebp
out
jmp
lret
xor
pusha
xor
clc
and
addb
pop
loop
es
xchg
ds
aam
inc
cmp
sahf
nop
jns
xlat
mov
add
iret
mov
insl
push
pop
adc
pop
and
scas
mov
out
lea
push
rcl
mov
mov
push
stos
movsl
push
xchg
sub
lcall
mov
movsbl
rep
adc
inc
pop
jns
andb
ds
into
adc
ja
clc
repnz
pop
jnp
lret
int3
sub
sbb
repnz
arpl
and
test
dec
jbe
cmp
and
mov
cwtl
mov
add
jp
sahf
or
xchg
add
out
cs
inc
shrl
bound
pop
sti
ja
add
add
push
sbb
xorl
popf
lcall
out
test
lds
sbb
cmc
xor
out
cmc
leave
or
imul
insl
movsb
fnsave
mov
arpl
and
pop
call
mov
add
outsb
adc
out
js
or
insb
pop
xor
mov
xor
mov
cld
xor
dec
mov
mov
lcall
adc
add
mov
adc
adc
dec
imul
shr
in
xchg
rolb
mov
mov
iret
jb
sbb
cmpb
mov
xor
mov
mov
xchg
mov
aaa
sub
je
ret
mov
ljmp
sub
jb
sub
mov
loop
imul
mov
dec
xor
scas
out
out
add
xchg
sahf
sub
xchg
jae
std
mov
add
inc
mov
inc
xlat
icebp
dec
test
xchg
inc
sahf
je
ret
pop
imul
pop
jns
popf
mov
out
std
xor
mov
icebp
test
out
ja
shrb
ja
pop
sub
repnz
sbb
movsl
out
push
mov
adc
call
mov
xor
pop
dec
mov
jno
mov
in
or
push
adc
push
pop
xor
sub
inc
jp
ja
mov
fisttps
push
gs
pop
ja
repnz
fwait
enter
mov
fiaddl
dec
insl
lea
mov
int3
pop
imul
shl
adc
rolb
daa
arpl
sbb
dec
cmpsb
sub
push
jp
xor
fisubrl
sar
push
in
sub
xorb
fdecstp
test
mov
or
stos
ds
ror
jmp
inc
xchg
int3
sbb
pop
lret
jns
pop
push
mov
cltd
out
das
cmp
xor
jmp
sbb
sbbb
les
jbe
xor
mov
test
sbb
mov
punpckhwd
cmp
in
cmp
push
mov
outsl
std
cmc
cmp
push
pusha
push
fs
xchg
and
or
mov
and
insb
mov
lcall
pop
std
xchg
push
rorl
cli
mov
push
ja
sbb
lods
sbb
pop
daa
push
notb
mov
pop
movsb
lods
fwait
ss
leave
pop
repz
lcall
xchg
decb
lret
std
cmpsl
loopne
enter
pop
in
jne
imul
aad
pop
ret
leave
ror
into
pop
pop
jle
mov
insl
out
inc
mov
mov
push
test
nop
xchg
cmp
jmp
pop
and
pop
inc
insl
mov
icebp
jns
daa
lcall
fmulp
add
pop
ss
pop
xchg
rorl
js
xchg
inc
outsb
mov
push
in
jns,pn
test
mov
repnz
mov
or
movsb
int
xor
inc
movsb
and
scas
xchg
jmp
push
jp
pop
mov
cld
aad
adc
daa
pop
into
or
and
xchg
sbb
mov
xor
test
push
inc
sbb
outsl
mov
xor
insl
mov
sbb
jp
scas
subb
add
imul
adc
mov
call
data16
adc
mov
shlb
cs
and
cli
push
push
sbb
sbb
scas
mov
jecxz
daa
iret
scas
sbb
jne
jno
mov
adc
inc
pop
pop
adc
mov
rolb
test
xchg
mov
dec
mov
cmp
cli
jle
xchg
xchg
mov
or
test
das
xchg
scas
mov
xor
push
sarb
dec
cmp
jmp
int3
add
push
lods
xchg
xchg
lret
sarl
and
push
leave
ja
mov
mov
sub
add
pop
adc
or
inc
aad
xchg
stc
das
aas
pop
inc
repnz
jmp
add
xchg
je
jmp
mov
cmpsl
or
add
pop
gs
out
sbbl
pop
pushf
push
jp
ret
jl
into
push
cmp
popf
popf
mov
ret
adc
aaa
pop
push
mov
jb
pop
int
insb
mov
xor
cmpsb
mov
cmp
xor
mov
cmp
sbb
imul
out
xor
xchg
mov
aas
sub
sub
sbb
jp
test
adc
mov
pop
ljmp
ss
daa
mov
or
ret
fmuls
mov
cmp
fcompl
bound
cmc
cmc
gs
cltd
jle
test
xor
bound
xchg
imul
xor
inc
cld
jp
and
mov
test
int3
int
cmp
inc
jbe
jecxz
fidivs
push
dec
test
stos
repz
xor
sbb
adc
ret
inc
cmp
dec
inc
or
inc
dec
cwtl
ret
jo
andl
jns
loop
cltd
cmp
sbb
jle
xchg
movsl
arpl
cmp
pop
mov
adc
adc
call
gs
mov
pop
inc
jmp
in
mov
dec
fld
xorl
dec
adc
sub
clc
mov
popf
dec
mov
sti
xchg
loope
imul
push
repnz
push
sbbb
or
cmc
pop
outsb
pop
pop
insb
aam
or
negl
lds
fstps
pusha
int
jp
mov
dec
aad
aam
xchg
inc
add
fsubs
mov
pop
lock
fistl
aaa
pop
testb
mov
sbb
mov
rcll
mov
dec
xchg
xor
enter
es
cmp
push
jmp
xor
and
cmc
das
test
movups
insb
das
jge
std
fwait
push
ds
jecxz
jle
mov
jbe
mov
mov
mov
test
addr16
xchg
pusha
mov
int
mov
mov
daa
std
and
shll
xor
xchg
aad
xchg
lcall
mov
out
xchg
cld
inc
fwait
dec
jns
rcll
in
out
mov
je
pop
cmp
pusha
mov
push
pop
shll
xchg
cmc
ds
aam
push
mov
or
mov
jae
or
push
fstl
and
adc
dec
mov
xor
push
and
cli
bound
in
sbb
jbe
ja
cmp
ljmp
mov
sub
ret
mov
mov
xchg
out
sbb
jno
movsb
sti
int
push
lods
dec
in
aam
and
mov
sub
jg
jle
in
mov
fstl
mov
mov
and
push
dec
xchg
fsubs
sbb
sbb
and
xor
idivl
mov
loop
xor
mov
add
adc
xchg
cmpsb
lds
cmp
adcb
loope
jne
aad
or
jo
mov
cmc
pop
push
ret
mov
and
push
and
aas
fimuls
pusha
push
aad
cmp
scas
xchg
adc
push
stos
cmp
inc
flds
sbb
stos
dec
in
lret
dec
sti
lcall
les
icebp
xchg
call
ja
adc
mov
fcmove
insb
jg
loop
push
xor
aad
addb
and
and
or
sub
pop
cli
loopne
push
jo
xchg
ds
sub
fdivrs
cs
enter
or
add
dec
daa
mov
lret
repz
clc
jg
mov
hlt
fmull
enter
leave
pushf
adc
fcompl
int
mov
aad
xorb
cmc
inc
idivl
outsb
jmp
mov
ja
stc
pop
je
sub
add
imul
bswap
out
cld
mov
pop
xor
dec
leave
adc
sbb
test
fldcw
pop
xchg
call
push
lods
sarb
popa
lds
mov
gs
stos
repz
pushf
adc
add
jmp
cmp
push
push
negb
dec
mulb
mov
les
rcrl
jmp
inc
lods
push
sbb
mov
clc
sub
fnstenvs
jno
sbb
push
hlt
dec
gs
xchg
xchg
or
rcrl
mov
mov
hlt
ficomps
repz
repnz
fcoml
int
inc
mov
push
pushf
test
push
sub
cld
cli
incl
fdivs
push
int3
sahf
jge
arpl
jns
mov
add
lcall
test
cmp
bnd
sbb
pop
pop
xor
outsb
or
sub
outsb
cmp
inc
sbb
ljmp
iret
add
jl
inc
pop
mov
jl
fdivl
sti
inc
icebp
sub
mov
repnz
pop
sub
sahf
ret
lret
jg
ja
jbe
xlat
sbb
xor
adc
in
scas
cmp
insb
xchg
and
xchg
stc
jge
jl
dec
mov
mov
mov
pop
push
pop
mov
mov
jb
or
adc
and
imul
add
lock
push
stos
lcall
sbb
pop
popa
inc
ljmp
ds
testl
pop
mov
lcall
inc
push
mov
pop
sahf
push
xchg
dec
xor
or
pop
mov
cmp
jo
lahf
leave
cmc
jecxz
dec
sbb
xlat
subb
or
xchg
imul
pop
aaa
mov
push
test
mov
push
notb
jmp
das
test
testb
xchg
in
jp
xor
out
push
or
cmc
xchg
ljmp
lret
jmp
push
arpl
sbb
push
movsl
inc
movsl
pop
mov
mull
test
mov
lcall
xor
outsl
jne
ja
push
mov
inc
ret
leave
hlt
insb
insl
lret
mov
jns
sbb
int
mov
pushl
push
into
rcl
or
rol
das
cld
daa
lea
clc
mov
fnstsw
push
nop
push
inc
mov
test
lahf
push
add
aad
pop
sub
fwait
mov
inc
pop
add
mov
dec
push
cmc
or
imul
int
icebp
or
js
bound
repz
xchg
fcmovbe
jb
or
hlt
leave
push
or
pusha
pop
add
and
std
sub
or
int3
add
icebp
pop
imul
sub
das
rcll
jns
je
insb
or
sbb
incb
fwait
cwtl
cmp
dec
add
loope
loope
aas
xchg
lahf
push
pop
cwtl
scas
mov
cltd
shll
stc
iret
cwtl
push
mov
cltd
push
dec
and
fwait
or
in
inc
bound
xor
mov
repz
cli
ds
stos
cmp
add
inc
pop
loope
xor
jae
lcall
mov
jne
mov
sti
lds
sub
mov
js
jmp
jle
fbld
nop
pushf
ja
push
mov
in
adc
daa
daa
leave
dec
and
or
add
cmp
inc
insl
jno
lahf
mov
inc
sbb
mov
ljmp
fninit
call
je
outsl
lea
imull
xchg
add
sbb
repz
out
negl
popaw
sar
mov
mov
dec
xor
je
imul
mov
and
das
push
dec
mov
pop
xchg
stos
mov
cli
in
in
ja
hlt
jg
jb
mov
in
ret
jl
add
or
mov
aas
mov
loopne
leave
stos
cmc
cmpsb
fimuls
pop
movsl
sub
cli
sub
clc
mov
cmc
pop
fmuls
call
pop
xor
add
gs
js
sbb
sub
xchg
sarb
stos
cmpsb
add
mov
das
cmp
and
pop
or
adc
mov
fstpt
mov
sarb
loopne
mov
das
mov
or
mov
inc
movsl
or
push
and
xchg
mov
and
adcl
sbb
sarb
aas
fsub
test
sbb
aam
and
xchg
popf
adc
shr
loopne
popa
or
pop
push
push
jge
fidivs
popa
mov
add
loope
mov
xor
sub
cs
jbe
cmpsb
pop
lods
jns
test
aas
push
cmp
dec
mov
sbb
jns
into
pop
mov
mov
ficoms
mov
sahf
leave
adc
shr
mov
dec
or
xchg
rcrl
subl
ret
add
add
sub
pop
mov
dec
scas
stos
add
aaa
mov
jl
jmp
cs
xchg
add
or
push
es
push
pop
stos
js
outsl
mov
movsl
fisttps
popa
shlb
push
imul
xor
stos
xor
cld
ret
int
mov
jecxz
jae
imul
sbb
mov
or
sbbl
jmp
and
lcall
jne
mov
inc
in
push
insb
xchg
mov
test
cwtl
add
cmpsl
add
std
insl
sub
inc
xor
fdivrs
or
jg
jge
fidivrs
inc
lret
out
xchg
mov
int
xchg
nop
mov
lock
sbb
add
inc
movsl
adc
xchg
jne
es
mov
pop
testl
sbb
sbb
cmc
andl
jne
or
dec
in
jecxz
into
cld
jo
aas
int3
sub
sahf
or
mov
in
sub
fsubr
push
iret
clc
das
mov
push
adc
xor
or
lods
add
loop
jne
shll
mov
sbb
push
inc
pop
ljmp
push
rorb
and
sbb
push
lcall
fwait
mov
mov
or
mov
into
mov
xchg
ss
adc
xor
cmpsb
das
dec
add
out
repnz
mov
repz
in
inc
lea
in
jo
loop
call
lods
xchg
push
cli
aam
xor
leave
add
push
mov
std
add
test
rorl
mov
adc
aad
aaa
or
sub
stos
inc
test
xchg
add
ja
int3
dec
pop
pop
dec
cli
pop
dec
fisubrs
cmp
cmp
xchg
test
mov
movsl
addr16
push
dec
pop
int
fisubrs
sbb
fcomps
mov
jmp
lahf
stos
or
inc
cmp
ss
fisttps
sbb
add
pop
pop
pop
pop
ss
out
icebp
jb
mov
jecxz
jb
mov
mov
add
sub
mov
dec
jno
jl
xchg
int3
daa
clc
mov
fisubs
cmc
xor
push
adc
mov
leave
or
add
push
mul
pushf
lret
mov
xor
and
sub
sub
repnz
jg
mov
pop
fiadds
call
icebp
inc
js
pushf
adc
leave
aad
pop
pop
mov
and
cli
sub
test
leave
sarl
mov
int3
lahf
out
js
std
sbb
add
pop
fs
xchg
aad
mov
pop
das
jg
test
loop
adc
sub
mov
xchg
dec
fadds
aad
and
addr16
push
subb
flds
adc
dec
adc
mov
loope
adc
mov
mov
icebp
rolb
das
adc
cmc
xchg
popa
dec
out
pop
push
push
test
inc
mov
add
nop
mov
or
mov
aad
push
sbb
mov
andb
scas
fidivl
push
and
fimuls
xor
int3
sbb
xor
sbb
ss
shll
inc
test
jg
jle
pop
fwait
stos
pop
or
xor
mov
jecxz
sbb
fsts
push
sbb
enter
mov
cmpb
adc
pop
xor
std
sub
mov
insb
inc
mov
fidivl
sbb
pop
inc
adc
xchg
lret
daa
xchg
adc
mov
in
sub
lods
adc
mov
lea
and
in
xor
fmuls
fwait
pop
out
bnd
cmpsl
ret
sbb
xor
sub
dec
std
lret
lret
push
xchg
ds
and
mov
insb
lock
xchg
xor
stc
jno
into
and
das
pop
shrb
sub
pop
std
das
pop
fistpll
insb
movsb
ss
popa
ficoms
shrl
mov
cmp
jl
mov
push
push
in
enter
aam
scas
jo
push
adcl
mov
mov
dec
mov
in
pop
insl
clc
dec
xchg
xchg
lds
ret
dec
cs
ds
in
imul
jno
inc
and
dec
in
add
and
ds
into
xor
mov
in
add
andl
sarb
cmp
mull
jmp
or
jecxz
inc
sbb
movsb
dec
aad
arpl
mov
cmp
mov
js
scas
mov
ss
dec
das
jns
cld
add
xlat
cli
fsubrp
xchg
mov
mov
je
pop
fldl
ja
int3
outsb
gs
mov
push
out
movsl
mov
xor
cmc
dec
cmp
decb
mov
cli
dec
rcrb
mov
repnz
addr16
adc
arpl
mov
call
ret
inc
mov
mov
cmc
or
mov
dec
pop
push
xchg
adc
mov
movsb
pop
or
data16
cmc
dec
mov
push
cmc
popf
popf
in
outsb
outsb
or
lea
stc
mov
rorb
lahf
mov
cmp
in
pop
loope
jmp
inc
push
fcmovb
cmp
inc
addl
mov
cmp
push
mov
pushf
or
add
in
adc
shll
pop
pop
add
add
sub
xchg
mov
jne
lods
push
mov
cmpsb
jge
push
inc
xchg
shll
dec
dec
mov
mov
adc
jmp
jmp
xchg
inc
mov
sbb
out
test
dec
fisubrl
add
pop
in
gs
ja
fwait
imul
jbe
iret
mov
sub
adc
adc
mov
in
push
jp
pusha
repnz
push
movsl
xchg
fldlg2
mov
iret
or
inc
xchg
pop
jle
push
repz
mov
movsl
repz
add
mov
rcrl
mulb
int3
lea
ljmp
sbb
cmp
testb
add
jae
insb
or
xor
mov
add
test
or
mov
and
jmp
sbbl
enter
pop
or
push
mov
sub
cmp
pop
fstps
orb
scas
sub
ret
sbb
inc
xchg
fcmovnu
fdiv
mov
test
xchg
cmp
ja
xchg
inc
push
outsb
out
outsb
pusha
hlt
movsb
int3
ss
cli
xchg
subb
jmp
fadds
jne
sbb
sbb
dec
push
pop
sbb
jp
lret
push
nop
ljmp
call
mov
push
xchg
in
pop
ret
outsb
pop
xchg
test
dec
xor
ret
mov
add
outsl
shlb
push
sbb
lds
jl
scas
cltd
adc
mov
cmp
stos
div
in
flds
push
sti
sbb
rcrw
cld
ja
test
cmp
mov
lret
or
cmp
mov
sub
cmpps
dec
xlat
cmpsl
xchg
inc
jmp
sti
jg
ss
das
in
jae
cli
mov
push
mov
inc
add
das
ret
gs
insb
insb
push
inc
add
sub
pushf
pop
jo
stc
pop
xchg
mov
insb
push
push
xchg
cli
loop
adc
and
cltd
pop
mov
cmp
mov
mov
mov
lret
enter
inc
les
cmp
outsb
addl
lods
sahf
or
mov
mov
mov
orb
out
mov
mov
sti
pop
aas
repnz
ret
jecxz
icebp
mov
add
int3
sbb
daa
test
imul
int3
insb
cmpsl
mov
sub
cld
outsb
xchg
dec
fdivrs
mov
outsb
aam
pop
mov
jp
orb
orb
out
das
xlat
xchg
lcall
mov
push
out
push
mov
js
clc
pop
int3
lds
inc
xchg
cmp
jnp
fimuls
jb
xchg
push
jno
cmp
rorl
adc
cmp
lock
loop
lock
out
pop
in
repnz
cmp
mov
btr
mul
cmp
mov
sub
jb
outsl
mov
lcall
sub
fimuls
arpl
movsb
inc
mov
insb
push
out
mov
mov
mov
sub
push
mov
sbb
ret
and
js
or
les
out
mov
xchg
data16
aam
add
jno
lds
mov
loop
call
jne
jae
xchg
nop
push
dec
sbb
or
mull
mov
roll
or
add
test
adc
inc
jnp
inc
stos
push
ja
push
xor
leave
outsl
sbb
flds
lods
ljmp
scas
sbb
xorl
push
dec
dec
and
stc
mov
jp
xor
pop
mov
push
push
stc
test
mov
sub
pusha
adc
jns
fistps
cs
repz
mov
inc
hlt
imul
jnp
add
add
xor
cmc
push
jmp
xchg
mov
ss
jge
mov
add
hlt
pop
or
push
lock
jl
dec
or
mov
dec
jbe
stos
js
push
xchg
push
into
jle
pop
data16
xor
in
xor
pop
cmp
pop
lret
shr
mov
mov
and
mov
repz
add
push
arpl
lock
mov
add
add
xchg
sar
push
ss
popf
push
scas
shlb
out
mov
xorb
mov
pop
sbb
sub
add
add
bound
dec
xlat
adc
repnz
xor
pop
jmp
lods
mov
psubb
fidivrs
cmp
adc
divb
imul
mov
mov
mov
mov
lcall
out
fs
mov
in
cmp
je
mov
push
ss
xchg
push
mov
movsb
lock
jg
int
mov
mov
hlt
sub
inc
push
inc
call
inc
imul
cmp
lds
jp
adc
mov
jmp
xor
aam
mov
jns
or
int
fisttpl
divb
into
ret
push
mov
cmp
push
fildll
add
int
sbb
xchg
xor
xchg
jno
les
sub
loop
mov
pop
mov
fbstp
cs
es
sbb
and
test
xchg
or
daa
mov
pop
cli
add
mov
mov
mov
and
xor
push
mov
lea
movl
inc
jp
aaa
nop
pop
xlat
push
xor
adc
sub
inc
push
xchg
dec
out
and
jp,pt
mov
cmpsl
pop
fwait
ret
jnp
sub
pop
inc
add
das
add
jg
gs
or
or
push
inc
int3
sbb
rclb
sbb
mov
ja
jg
fs
push
jecxz
and
jecxz
lods
or
xor
pop
negl
movsb
mov
mov
mov
sbb
cmc
iret
mov
xor
orb
mov
cli
in
jb
xor
dec
xor
fcom
outsb
xchg
and
pop
mov
push
aaa
inc
call
loopne
xchg
movsl
in
fcomps
scas
xchg
data16
mov
in
inc
scas
adc
ds
mov
cmp
mov
push
sub
jmp
out
outsl
bound
mov
push
test
or
popa
cmp
and
fcomi
repz
ret
out
add
stc
outsw
movsl
push
jo
pushf
dec
clc
adc
mull
push
outsl
mov
popa
adc
and
aas
pop
xchg
fcoml
int3
in
imul
xlat
scas
popl
dec
sbb
test
shlb
data16
inc
inc
mov
fisubrs
adc
pop
xchg
push
mov
mov
icebp
mov
mov
jne
aad
and
push
sub
adc
rcl
xchg
out
nop
mov
jle
cmp
sbb
sti
lahf
dec
pop
xchg
cmp
dec
inc
sub
cmpsl
popa
cmp
jnp
stc
andl
andb
jns
ss
fs
cmp
call
aas
jo
pop
adc
push
inc
jb
cmp
pusha
cwtl
fsubp
xor
mov
aam
and
outsl
sub
stos
stos
cmp
mov
sbb
or
das
adc
in
cmp
mov
add
inc
popf
iret
cli
push
inc
loope
cmc
jo
ss
sub
jmp
jbe
jge
int
imul
dec
orb
mov
jg
mov
jb
mov
jl
repz
ja
movsl
xor
pop
int3
test
dec
cmpsl
mov
loop
ret
mov
jne
mov
mov
and
int
insb
das
jb
arpl
mov
js
lea
cmp
jl
daa
cmp
popa
pushf
mov
test
inc
dec
xor
bound
movsb
pop
sar
sbb
mov
mov
push
aam
sub
test
or
cmp
loop
sbb
and
mov
or
mov
outsb
fcoms
mov
xor
sti
leave
lcall
les
cmpsb
outsb
or
and
repz
inc
das
mov
sbb
or
inc
jmp
push
sbb
in
cmp
mov
cltd
out
js
mov
fcomps
daa
and
iret
mov
sbb
test
adc
in
cli
imulb
mov
mov
mov
cmp
push
cmpsl
cltd
and
pusha
mov
inc
out
leave
ss
push
push
jl
cmpsl
aad
lods
pop
inc
scas
loop
inc
sti
iret
adc
lahf
arpl
je
sti
sub
cmpl
mov
int3
mov
xor
cs
sbb
or
mov
enter
jmp
cli
xchg
adc
and
insl
sbb
xchg
inc
fists
fs
insl
jmp
jnp
clc
pushl
sub
ret
sbb
call
mov
xchg
cmp
or
adc
adc
int
int
lret
cwtl
pop
xchg
or
js
out
adc
inc
setae
test
lods
mov
push
mull
xchg
rclb
jg
and
cmp
sub
int
popf
into
jmp
mov
fstpt
add
adc
cmp
sub
push
repz
mov
pop
mov
xchg
jae
ds
xor
cmp
les
das
jae
mov
clc
in
cmp
pop
xchg
pop
int
in
sbb
cmpsb
popa
rcrl
inc
cmpsb
adc
shll
adc
fsqrt
dec
and
clc
dec
test
add
add
inc
outsb
int3
xchg
pop
push
fs
jecxz
sub
je
xor
cmp
push
jmp
mov
xor
jp
in
sarl
ss
push
jg
lods
mov
push
adc
lahf
hlt
dec
jmp
aad
xchg
jg
jge
push
cmp
ljmp
mov
or
popa
inc
mov
test
test
mov
lods
push
jno
aad
jae
add
scas
pushf
fisubl
shrb
mov
je
xchg
inc
cmpsb
push
test
mov
mov
loopne
iret
or
cmp
jns
call
int3
xchg
push
popa
js
mov
lret
clc
xchg
push
sti
mov
push
in
xchg
mov
mov
aam
test
or
mov
sub
insl
push
or
lock
push
repnz
jnp
push
push
mov
subl
xor
push
test
mov
pushf
xchg
test
roll
adc
mov
xor
pop
in
adc
movsb
outsl
imul
xchg
lods
fstpt
ja
xchg
cs
imul
int
aad
pusha
mov
and
cmpl
lret
or
push
mov
xchg
std
xchg
add
mov
dec
out
jg
jne
mov
cs
lods
xchg
repnz
mov
xchg
and
mov
fdivr
adc
movsb
jp
or
or
stos
into
xchg
push
sub
lods
and
ja
aaa
out
aam
cmpsl
bound
inc
xor
rolb
es
fdiv
stc
xchg
and
and
int3
das
or
add
mov
dec
xchg
dec
pop
mov
fisttpl
iret
mov
stc
push
ficoms
lea
in
dec
jo
rcl
jns
in
ljmp
push
mov
sub
insb
sbb
jnp
push
dec
inc
out
hlt
into
pop
and
mov
push
cmp
mov
dec
xchg
sub
jge
adc
or
jl
imul
stc
jo
in
sbb
inc
std
fwait
mov
mov
sub
pop
lods
or
pushf
adc
orl
pop
mov
cli
adc
int3
pop
and
fisttpll
stos
jno
data16
pop
lea
stos
fs
xor
xchg
fstps
push
push
or
pop
popa
enter
das
adc
iret
mov
push
movsb
rcr
adc
lods
mov
pusha
pop
push
clc
sbb
inc
mov
pop
xlat
lods
inc
push
push
test
pop
fsubr
sub
and
aaa
cmpsb
rcrl
jle
in
popa
cld
xorb
push
lret
mov
lds
pop
ds
call
mov
sarb
add
xor
mov
pop
xor
pop
pop
push
inc
cmpxchg
je
leave
xor
add
mov
pop
or
daa
popa
or
dec
xchg
cmc
ret
lret
or
jmp
mov
call
imul
stos
out
push
ljmp
scas
scas
push
cltd
sbb
or
mov
cld
inc
mov
pop
mov
mov
in
sub
incb
push
cld
cmp
decl
das
mov
or
in
inc
fs
lock
dec
mov
push
xchg
push
stos
scas
inc
std
aam
mov
mov
repnz
and
mov
test
adcb
jp
inc
xchg
sub
add
lods
shlb
adc
mov
outsl
xchg
ss
push
mov
lret
dec
add
nop
adc
das
notb
int
mov
pop
ljmp
xor
roll
aad
lods
xor
jg
outsb
aam
cmp
imul
insl
or
pop
cmp
insl
push
loop
cmpl
fwait
out
rcrl
mov
sbb
mov
xchg
push
and
and
popa
mov
aam
push
jg
in
xchg
arpl
pop
mov
ds
jp
imul
xchg
fists
stos
mov
lcall
sbb
and
xor
add
mov
push
jno
or
pop
movsl
dec
or
lahf
or
sbbb
push
sarl
mov
mov
sbb
mov
cmc
out
xor
mov
fisttpll
add
dec
cltd
mov
xor
dec
cmp
pop
aaa
sub
and
data16
daa
jae
stc
call
and
mov
mov
sub
ds
xchg
cs
nop
aad
cmpsb
ds
cmp
mov
repnz
mov
xchg
scas
pop
mov
inc
ja
mov
xor
push
inc
add
push
xlat
mov
faddl
inc
mov
lahf
push
cld
cs
repnz
inc
pop
inc
cmp
xchg
mov
jge
cmp
imul
ljmp
cli
jmp
add
inc
inc
imul
xchg
pop
mov
icebp
add
jno
inc
inc
fs
mov
or
push
dec
movsb
pop
stos
add
jnp
pop
pop
inc
in
cmp
popf
shrb
and
mov
sub
xor
dec
jp
mov
movsl
divl
es
pop
sub
jmp
aad
loop
ljmp
cli
inc
stos
mov
and
or
lcall
aad
cmpsl
into
sub
int
sub
imull
cmp
xchg
les
es
inc
iret
stc
xchg
leave
pop
pop
lcall
lret
movsb
and
mov
in
pop
sub
sahf
jg
cld
movsl
sbb
les
or
mov
pop
mov
rol
in
add
outsb
xchg
cmc
testb
loop
fcmovnb
dec
sbb
jle
dec
and
and
ds
mov
je
out
outsb
loop
scas
mov
mov
in
push
xchg
and
sub
jecxz
popa
pop
cmp
lahf
pop
sbb
mov
stc
jbe
loope
adc
stc
cmp
adc
addr16
or
cmp
dec
add
subl
ja
lds
jno
pop
popf
frstor
xchg
dec
xor
repnz
xor
jb
mov
xchg
jns
hlt
int3
push
pop
push
fistl
inc
add
mov
mov
cmpb
mov
in
sbb
shlb
repz
inc
sbb
popa
lcall
jne
test
adc
dec
xor
leave
push
adc
mov
insl
push
gs
in
and
jmp
ret
in
xor
mov
fildll
sub
sbb
pop
xor
xchg
sbb
xor
fcmovbe
inc
sub
xchg
jo
das
and
shrl
add
inc
push
push
es
leave
mov
lods
mov
jb
std
cmp
xor
nop
test
daa
imul
mov
das
mov
pop
arpl
rorl
adc
push
gs
repnz
mov
mov
lods
std
dec
inc
xchg
xchg
dec
push
pop
and
inc
sub
cmc
mov
rcrl
sub
adc
xlat
sbb
incb
scas
fiadds
outsl
inc
cmp
xchg
in
sub
push
repz
mov
clc
dec
bound
mov
sub
xchg
mov
mov
inc
push
adc
out
mov
fsubrl
sbb
pushf
out
cli
lret
ljmp
and
shl
in
jnp
mov
test
ret
cltd
or
int3
fmull
cmpsl
mov
push
gs
adc
pushf
push
xchg
in
mov
aam
inc
push
push
mov
mov
shl
push
xor
cmp
push
jae
decl
mov
xor
push
sbb
push
out
loope
xchg
aad
xchg
out
push
jg
sarl
xchg
cmp
cmc
push
out
sub
sub
dec
in
sbb
leave
aaa
sbb
sti
adc
cwtl
fistps
mov
mov
xchg
xor
in
lea
hlt
lahf
mov
xor
sub
call
push
mull
pop
push
dec
std
mov
jno
ljmp
jno
add
xor
bnd
fcoml
enter
mov
dec
cmp
pop
orb
add
pop
xchg
pop
repz
inc
xchg
xlat
mov
icebp
popa
pop
popa
ljmp
pop
ljmp
or
fs
ret
xor
jae
insb
std
push
xor
inc
mov
cmp
iret
add
daa
or
cmp
mov
sahf
sub
push
sub
xchg
jbe
insl
imul
mov
add
push
add
adc
into
dec
inc
xchg
push
fisubrs
pop
div
adc
mov
cmpsl
pop
sbb
call
push
pop
jnp
fbld
adc
loopew
mov
add
outsl
sahf
xchg
nop
xchg
push
add
inc
cltd
jno
les
adc
inc
sub
ss
dec
movsb
inc
xor
push
or
loop
insl
icebp
adc
mov
out
push
or
fmuls
and
mov
dec
push
and
inc
stos
cs
cmpsb
scas
xchg
push
ljmp
sub
xorb
or
sub
add
cmpsb
pop
ficoms
jne
out
push
sub
cmp
sbb
xchg
xchg
xchg
mov
ss
mov
add
int
mov
dec
out
cmc
jle
lods
push
and
inc
cmp
popa
xchg
iret
stc
in
pop
int3
xlat
clc
aam
ss
adc
jp
sub
mov
aam
outsb
sub
xchg
cmp
or
xchg
in
xor
and
xchg
push
add
and
sarb
ror
add
push
popa
sub
inc
xlat
cs
subb
sarb
and
cld
mov
shlb
loopne
and
jae
dec
cmp
push
into
out
fsubrl
sbb
and
xlat
jg
adc
roll
cmp
dec
jl
mov
out
adc
push
lcall
jl
aam
push
int
filds
das
jo
dec
add
jnp
fsub
les
pop
xor
in
jmp
addr16
iret
ds
lds
ret
mov
sub
popa
or
inc
aaa
jg
ljmp
cs
stos
push
pop
push
lcall
into
popl
xchg
pushf
fstps
aaa
sub
mov
push
jg
movsl
push
pop
add
outsb
dec
and
fsubp
dec
sbb
sbb
pushl
jle
mov
daa
insl
pop
inc
cmp
rorb
xchg
stos
loope
fwait
mov
sub
je
shll
xor
dec
data16
mov
out
dec
jb
or
or
push
insb
stos
insb
in
popa
aad
mov
fstps
adc
rolb
push
xchg
pop
cltd
push
add
sbb
inc
push
jns
mov
lods
cmc
jae
rorb
neg
loopne
arpl
adc
scas
shr
andb
xor
xchg
mov
fists
inc
dec
out
adc
push
jmp
pop
cmp
outsl
cmp
push
inc
sti
test
je
rcll
cld
dec
nop
push
xor
add
push
into
add
fcmovu
lcall
fwait
mov
mov
sbb
jge
jg
insl
mov
cmc
lret
faddl
push
inc
notb
cmp
fimull
push
in
inc
ret
inc
dec
nop
or
pop
xchg
cwtl
lock
jo
push
push
add
pop
ljmp
je
jecxz
int3
add
mov
adc
jno
xor
xor
fs
jne
push
outsl
lret
popf
out
add
loope
xchg
pop
inc
icebp
cmp
xchg
out
inc
push
adc
lret
or
addr16
ss
scas
sub
pop
push
nop
mov
aam
call
pop
jge,pn
aam
mov
cs
lcall
pop
fisubs
sbb
ret
ljmp
scas
shll
std
pop
dec
adc
adc
or
xor
adc
pop
lahf
cmpsb
sahf
sti
mov
lret
adc
pushf
jl
sahf
andb
jmp
add
cmp
jmp
cwtl
aad
imul
ret
test
outsl
sub
adc
pop
pushf
push
dec
cmp
ds
xchg
and
movsb
in
and
push
pushf
mov
ficomps
loope
and
outsb
cmpsb
ret
jnp
mov
and
pop
int3
mov
and
adc
or
cmpsl
xor
add
aam
adc
fimull
add
xor
xchg
pop
cld
fcmovne
leave
bound
mov
xchg
mov
fcompl
xchg
push
push
sbb
push
mov
add
pop
ds
cmp
jno
icebp
inc
mov
stc
js
jecxz
jecxz
clc
das
outsl
in
in
xchg
or
call
pop
cli
test
fbstp
mov
adc
cmp
ja
sub
sarl
push
aas
or
scas
orb
inc
out
cltd
imul
lods
icebp
mov
inc
jne
mov
fbld
sbb
aas
push
out
and
inc
adc
xor
arpl
fwait
outsb
aaa
and
cwtl
in
dec
out
inc
dec
lcall
int
xchg
fisubl
xchg
ret
dec
nop
xchg
jl
nop
es
gs
pop
sub
js
pop
pop
in
dec
test
sub
mov
imull
push
jne
push
inc
mov
aad
jb
xor
loope
mov
les
shl
or
insb
andb
loopne
mov
nop
adc
xchg
push
mov
outsb
cmp
xorb
mov
jb
pop
cmp
jmp
or
add
lcall
notb
fimull
xlat
std
cmp
mov
icebp
mov
int3
mov
jbe
int3
lahf
movsl
fs
out
ret
pop
mov
xlat
lds
and
mov
xor
or
xchg
vpmulhuw
fs
jmp
jecxz
xor
in
xchg
lods
ss
loope
jae
mov
jmp
push
inc
jp
ret
jmp
out
test
clc
jl
and
pop
and
sbb
push
jge
cmp
xor
jnp
out
dec
push
gs
adc
and
movsb
insl
adc
insl
nop
pop
sbb
cmp
pop
pusha
pop
movsl
cmp
adc
mov
sub
sbb
dec
jae
shrb
fs
out
mov
push
lea
xor
pop
cld
mov
jne
mov
int
push
addr16
and
xlat
pop
and
xchg
add
fwait
repnz
cli
jp
lcall
push
loop
mov
mov
pusha
jnp
mov
sbb
push
push
std
sub
out
pop
lea
sub
cmc
aam
pop
imul
fildl
sub
mov
bound
push
lods
mov
push
imul
inc
pop
test
jmp
js
inc
fwait
push
flds
jge
loop
in
lahf
repz
in
jl
fucomip
xor
in
mov
movsl
aas
fadds
cmp
and
stos
mov
in
fimull
fdivrl
out
sbb
mov
imul
push
pushf
add
imul
xor
rolb
mov
orl
xchg
lret
mov
cli
add
xor
dec
pop
je
inc
in
cmp
xor
jns
jns
pop
int3
xchg
sub
jl
push
sti
inc
and
mov
rolb
mov
adc
fwait
in
mov
add
jmp
loope
or
cltd
cmp
lods
outsl
aad
aas
insl
cwtl
xchg
mov
and
mov
sti
insl
add
lret
xchg
ret
fisttpll
sbb
mov
ljmp
pop
mov
je
sub
push
cmp
pushf
or
mov
fimuls
es
sub
jns
jnp
pop
mov
ljmp
pushf
cmp
call
out
or
dec
mov
and
leave
je
jbe
xor
pop
xor
out
inc
lds
sbb
lahf
test
lds
inc
xor
cwtl
fsubrs
xchg
inc
scas
cmpsb
pop
lahf
push
push
xchg
xlat
stos
leave
mov
test
ds
lea
inc
adc
imul
loopne
lret
jne
stc
ds
in
les
das
xorl
push
jb
sub
outsl
mov
mov
pop
negl
ret
popf
and
xlat
cltd
xor
ret
out
pop
filds
jo
jnp
lcall
es
cmp
das
mov
int3
mov
jbe
ffreep
aam
icebp
adc
mov
jge
xor
push
or
fiadds
add
cmp
lock
adc
cmp
cmpsb
dec
lret
push
adc
cmp
cs
arpl
lods
push
sahf
inc
lock
jl
rcrl
xchg
push
fwait
pop
pop
or
movsb
out
sbb
push
mov
add
sti
in
scas
or
or
ret
dec
mov
stos
call
dec
push
mov
mov
pop
popa
jg
sbb
imul
iret
cmpsb
fwait
adc
sbb
jb
roll
xchg
mov
mov
dec
lods
jle
add
or
das
or
inc
mov
fdivrl
daa
xchg
stos
pop
pop
jns
push
clc
push
pop
pop
outsb
inc
adc
ffreep
sbb
xor
test
fisubl
aam
cmpsb
pop
push
mov
cld
xor
pop
xlat
adc
cltd
cmpb
in
nop
xchg
bound
and
popf
push
pop
je
pop
sbb
dec
lds
and
xchg
cwtl
pop
sti
inc
mov
mov
dec
jnp
bnd
and
mov
aaa
sub
pop
pop
push
jmp
adc
or
and
cmpl
arpl
add
js
es
fprem1
mov
repz
aam
testl
stos
push
clc
dec
sub
add
and
cmp
insb
psllw
ja
mov
jne
cli
fistpl
cmp
fdivs
dec
mov
lahf
cld
pop
loop
mov
sub
adc
aaa
pop
and
dec
mov
jp
sbb
lea
adcl
lock
hlt
pop
andl
mov
pop
or
out
add
movsl
jno
dec
ss
out
mov
xor
cltd
cmp
rorl
insl
jno
aas
fstpt
call
ja
ljmp
nop
lock
sbb
cld
movsb
je
push
inc
jl
push
ljmp
icebp
imul
push
mov
sub
sbb
ret
push
fiaddl
sbb
in
adc
test
fcmove
adc
repz
adc
fucomp
rol
sub
mov
fadds
dec
and
test
mov
adc
dec
dec
mov
outsb
push
xor
popa
daa
mov
cmc
mov
mov
arpl
mov
jno
test
cmp
mov
xchg
ja
cmp
in
out
sub
push
jl
jo
fdivrp
or
popf
daa
aad
push
pushf
cld
cmp
inc
cmp
mov
nop
mov
in
add
out
cmc
sbb
xchg
and
mov
jb
sarl
mov
rclb
sahf
cmpb
loope
cmp
ret
dec
clc
test
test
or
call
mov
popa
sbb
sub
pushf
mov
insb
xor
mov
cmp
mov
mov
pushw
shr
jns
cmp
icebp
test
dec
or
and
fcoms
cmp
cltd
out
pop
add
pop
xor
sub
or
jno
sbb
les
fstpt
adc
loope
sub
sti
push
cmpsb
jle
outsb
adc
cltd
iret
aad
notl
std
pop
fcmovnbe
test
mov
adc
cmp
sub
loopew
mov
and
mov
cwtl
imul
xchg
xchg
add
jne
popa
test
cmp
shll
outsb
sbb
xor
cmpsl
push
movsb
push
jmp
jl
pop
mov
cmp
xchg
mov
push
lock
out
xor
inc
daa
fbstp
andb
mov
cmp
out
inc
lahf
mov
gs
and
test
ljmp
xlat
mov
ret
mov
xor
mov
pop
jmp
inc
stos
add
push
mov
pop
lods
orb
test
jl
sarb
pop
pop
fcoms
push
lock
cmc
ret
or
sahf
push
xchg
shrb
mov
aad
push
mov
je
stc
xor
cmpb
push
add
mov
push
cmp
mov
jge
subl
jns
dec
dec
push
jmp
ds
hlt
and
int
lods
mov
jl
cmp
les
lods
push
out
push
in
mov
mov
stc
aaa
add
fidivrl
adc
pop
dec
fdivl
xchg
out
aaa
sbb
mov
push
pop
cmpsb
push
fsubrl
xor
dec
aas
cmp
and
push
inc
xor
add
shrb
lods
dec
loopne
pop
into
cli
cmp
cli
call
push
stc
jo
les
or
cwtl
in
mov
xor
insb
cs
xchg
ljmp
cmp
popf
ret
aam
adc
sysret
neg
adc
fstps
cmp
lahf
jbe
ja
mov
mov
sbb
adc
or
jl
aas
or
mov
cwtl
jae
jo
push
leave
js
pmullw
pop
jae
adc
jmp
xchg
or
xchg
mov
nop
xor
mov
mov
mov
mov
ret
repz
inc
icebp
in
or
cmp
arpl
int3
dec
cmp
jns
push
sub
std
aas
xchg
pop
and
scas
xor
and
orl
fdivr
cmp
popl
das
aaa
mov
xchg
int3
sub
std
and
mov
mov
out
sar
test
push
jg
sub
or
sarb
loope
outsl
xor
xor
fnstsw
xchg
lahf
sti
fsubl
push
pop
test
jl
cs
int3
cmp
fwait
addb
add
loopne,pn
add
adc
mov
cli
repnz
pop
js
xor
mov
mov
and
inc
dec
loope
out
cld
addr16
sbb
and
sub
js
loopne
inc
shlb
or
or
in
es
or
sub
push
cmpsl
pop
or
mov
shl
mov
aaa
cmp
hlt
test
push
cmpsb
mov
stos
jnp
xchg
xchg
xchg
pushl
das
in
test
enter
jl
push
std
push
mov
xchg
fdivl
lock
sahf
out
movsb
incl
sub
outsl
inc
mov
add
fxch
mov
push
add
sbb
fcmovnu
lods
xchg
push
jne
and
mov
sbb
in
sub
dec
xchg
pop
ljmp
fiaddl
mov
jae
rorb
lea
icebp
sub
jno
push
mov
inc
sbb
hlt
addr16
aad
out
add
bound
and
fbstp
cmpsl
xchg
mov
lcall
js,pn
mov
mov
cmp
jbe
push
mov
jb
test
or
or
sbb
in
mov
test
add
pop
ret
adc
inc
jo
std
mov
out
sti
shrb
iret
add
mov
push
mov
inc
mov
xchg
mov
imul
push
sub
adc
xchg
mov
cmpsb
sub
arpl
xor
cltd
sub
push
adc
mov
shlb
popa
leave
ja
sar
rcrb
and
inc
fmuls
fnstcw
pop
daa
inc
xlat
inc
add
ret
add
movsl
mov
mov
or
icebp
stos
test
dec
outsl
ja
cmp
scas
push
mov
stos
daa
jp
jbe
jae
loope
push
fisubrs
adc
cmp
or
shll
repz
inc
push
enter
push
pop
sbb
adc
sarb
or
in
mov
aam
mov
out
data16
adc
mov
cmp
cmpsl
pop
xor
pop
mov
lahf
mov
jp
xchg
xchg
sarl
leave
add
pop
xchg
ficompl
xchg
loope
mov
sbb
pusha
pop
jbe
jbe
les
pop
jle
test
les
xor
add
adc
lret
xlat
addr16
dec
dec
pop
xchg
outsl
cmc
xchg
ret
fnstcw
dec
cmpsl
leave
loop
or
test
lcall
xor
sahf
xor
movsb
xabort
cmp
xlat
push
ss
fstpt
mov
mov
jge,pt
aam
stc
push
pop
cmpsb
inc
test
xchg
test
push
cmp
sbb
push
push
shlb
xor
outsb
fwait
mov
add
mov
push
movsl
push
xchg
inc
shlb
or
sub
adc
out
lret
push
xor
cmp
xchg
popa
mov
add
sub
cmp
mov
jle
arpl
jns
mov
lahf
pop
pop
adc
icebp
into
cmp
push
subb
pushf
or
sti
push
mov
ss
xchg
andb
jb
in
shll
push
into
mov
jns
and
call
test
and
xlat
add
cmp
sub
out
xchg
data16
sar
ss
stos
imul
lret
or
dec
loopne
stos
jno
cmp
cwtl
ss
fdivs
test
test
push
push
sub
xchg
sbb
adc
out
mov
xor
loope
inc
mov
mov
sub
es
add
aad
mov
out
cli
and
lea
sbb
inc
or
rcll
or
adc
mov
push
inc
push
cld
sub
inc
insb
jg
movsb
push
in
arpl
sarb
sub
das
ja
cmp
mov
push
inc
jl
xchg
adc
xor
jnp
rcr
sbb
mov
mov
sbb
rclb
inc
cltd
es
mov
sbb
xchg
adc
pusha
mov
jbe
repz
jecxz
jnp
push
outsb
cmp
loopne
rcrl
movsl
adcb
lret
mov
add
mov
push
inc
push
mov
ret
or
sub
lret
out
cli
inc
in
sbb
mov
ds
in
mov
movsb
sbb
mov
sbb
mov
push
loope
pop
fldt
mov
sub
mov
xchg
repnz
lcall
les
mov
mov
int3
pop
inc
imulb
inc
mov
test
imul
js
cmp
mov
shr
filds
inc
pop
and
iret
jmp
adc
insb
pushf
jge
or
xor
cld
test
inc
push
outsb
insb
es
sbb
imul
mov
cmc
mov
sbb
andl
sub
mov
movsb
dec
jmp
adc
jns
popa
fcom
mov
aam
fnsave
sub
cmp
ljmp
push
xchg
dec
popf
iret
outsl
ss
sub
inc
repnz
cmp
pusha
out
jns
ret
mov
mov
xlat
ja
fnstsw
xchg
sbb
iret
dec
pop
cld
adc
add
std
xor
aad
outsl
subl
sbb
jo
push
js
sbb
cmc
out
outsb
out
outsb
sub
inc
sbb
pushf
dec
pop
jecxz
or
clc
stc
pop
sbb
rclb
in
in
push
repz
leave
clc
sbb
lahf
sub
push
mov
inc
jne
shlb
push
push
push
mov
mov
pop
mov
push
dec
cltd
or
movq
sarl
pop
mov
or
xchg
fildll
mov
inc
xor
cld
hlt
dec
mov
push
cmc
ud0
xchg
popa
cmp
mov
rcl
xor
push
xchg
mov
sub
cmp
and
sahf
jb
xchg
mov
jmp
fcomp
jge
pop
add
jmp
adc
dec
and
je
adc
push
loope
xchg
add
lret
mull
jo
out
les
int3
mov
xor
add
push
pop
aaa
push
imul
and
mov
adc
popa
int3
mov
loop
and
cltd
push
pop
popf
push
push
addb
lock
inc
mov
mov
mov
out
adc
mov
dec
int
mov
pop
adc
cmp
add
jo
dec
cmc
adc
cmp
mov
int3
inc
xor
jae
mov
and
outsl
aad
sarb
pop
or
nop
fucomi
add
pop
lret
ret
and
inc
scas
out
and
and
pushf
cmp
cs
in
lods
xchg
push
cmpl
dec
add
mov
push
lret
loope
mov
les
stc
jl
lcall
les
mov
sub
sbb
jle
popa
fisttps
add
jle
mov
into
jl
mov
mov
sbb
cld
lea
repz
push
in
gs
hlt
xor
or
xchg
xchg
insb
push
jae
loop
test
dec
mov
in
or
sbb
ja
mov
out
enter
mov
ljmp
add
push
mov
bound
cwtl
push
ds
aam
mov
mov
xchg
cli
push
and
shlb
push
cmpsl
mov
inc
inc
sbb
xor
adc
adc
ja
sar
and
and
loopne
xchg
lea
push
jb
ja
insb
pop
cmpl
out
stos
add
pop
daa
cmc
and
insb
or
insb
inc
outsb
mov
aam
fisubrs
fs
stc
adcl
popa
mov
shrd
or
outsl
enter
sbb
loop
mov
add
les
lds
and
ficoms
lds
ret
xorl
pop
mov
int3
test
insb
sub
sbb
jns
mov
call
divl
into
mov
mov
mov
jb
push
roll
cli
xor
test
into
repnz
cmp
pop
sub
pop
cwtl
mov
pop
xchg
push
xor
les
lods
mov
mov
in
bnd
repnz
xchg
aam
dec
sbb
imul
movsb
xor
fildll
mov
push
icebp
js
push
add
test
loopne
adcl
out
or
pop
sub
or
subb
in
xchg
insl
xor
lahf
aad
push
sbb
prefetcht0
fldenv
dec
es
scas
sbb
jl
stc
jae
sahf
mov
sbb
lock
add
jmp
lret
leave
fnsave
jg
movsb
lahf
lods
fldcw
adc
scas
je
and
test
mov
and
rcrl
xor
fldl
data16
jmp
sub
inc
test
fsubr
fwait
or
test
sbb
sbbl
cmp
shll
mov
mov
inc
and
or
mov
stos
inc
lret
sbbl
aaa
jns
pop
inc
popa
xchg
and
jl
jbe
or
add
rorb
subb
mov
xchg
std
or
jmp
jne
dec
and
out
mov
neg
push
sub
bound
inc
jge
js
mov
jg
mov
mov
pushf
imul
test
filds
xor
pop
cmp
jno
mov
test
and
and
cltd
pop
clc
data16
mov
jg
in
cmc
adc
ret
pusha
xor
test
jl
add
sbb
mov
daa
sti
clc
scas
push
mov
mov
outsb
arpl
lods
fs
sub
data16
add
or
cmc
rorl
sti
shl
inc
lock
push
cltd
add
adc
cmp
loopne
shl
mov
lock
xchg
jo
sub
and
out
sbb
popa
bound
pop
lcall
adc
imul
iret
fs
decb
jae
xor
fcomps
hlt
es
es
pushf
push
dec
cmp
mov
push
mov
ror
je
xor
popa
inc
icebp
rcrl
adc
cmp
inc
mov
fwait
pop
call
sbb
iret
repz
dec
mov
or
jb
mov
clc
mov
mov
xchg
mov
dec
ss
sbb
lock
push
inc
xchg
add
aam
sbb
loop
dec
ret
add
test
push
xchg
mov
shlw
pop
mov
cs
pop
mov
je
jmp
mov
add
loope
cmpl
and
ja
out
cmp
test
xor
cwtl
iret
mov
inc
cmpsb
ret
or
outsl
dec
jae
pop
fiaddl
adc
shr
jge
sbb
cltd
cmpsl
movb
xor
gs
shrl
loope
push
out
mov
push
push
pop
sarb
fs
jg
scas
fdivp
push
test
fwait
arpl
hlt
int
jno
out
into
and
jecxz
mov
repz
pop
fadd
mov
mov
mov
add
sbb
pushf
cltd
aas
rorl
xlat
mov
jmp
adc
cs
jle
dec
dec
fdivs
std
dec
dec
jmp
mov
aad
repnz
aad
ret
push
push
loop
xor
fs
rorl
cltd
mov
fwait
xlat
jnp
pop
movsb
jecxz
daa
sub
cmp
sti
pop
mov
fcomps
outsb
xorb
repnz
rcrb
push
add
rcrb
incl
aad
add
mov
dec
mov
add
sub
test
lret
pushf
jns
inc
xchg
repnz
gs
in
jo
out
ret
adc
aaa
in
in
cld
mov
jg
ret
ret
push
outsb
lahf
mov
lret
dec
xor
fs
sbbb
decl
vpcmov
sbb
insb
cs
jno
rcll
aas
inc
into
push
inc
out
enter
scas
push
mov
mov
cmp
stos
icebp
cmpsb
inc
cmp
mov
popa
sbb
fsubs
cmp
xor
fdivrl
arpl
inc
hlt
mov
test
rorl
scas
dec
pop
cmp
push
xor
mov
mov
sub
mov
mov
inc
nop
pop
mov
andb
and
lods
push
adc
mov
xor
leave
mov
sbbb
icebp
lret
inc
pop
int3
lds
xor
adc
mov
scas
into
lea
es
mov
orl
sub
and
gs
pop
cmp
push
push
cltd
jp
mov
aas
iret
xchg
xchg
popa
xor
in
imul
fdiv
add
aam
jne
and
outsl
push
sub
iret
aaa
popf
pop
test
cmp
and
jecxz
cmpsb
iret
push
sub
jb
pop
push
or
lods
movsb
lock
cmp
clc
mov
xchg
js
push
add
jecxz
cmp
or
sti
seto
test
pop
sub
fists
orb
pop
jg
js
mov
xorb
cmp
inc
add
mov
add
cmp
fwait
sbb
negb
imul
push
inc
pop
xlat
adc
add
fcmovnbe
iret
loope
cmp
jmp
jp
xor
shrl
xor
les
scas
jnp
xlat
lret
adc
jmp
xlat
add
ret
inc
dec
and
not
push
mov
cmovae
stc
popf
add
pop
js
aad
rcrl
out
push
jno
xchg
xchg
fs
dec
cmp
mov
pushf
sahf
arpl
std
sub
pop
out
scas
in
lret
pusha
addb
cmpsl
push
add
cmpsl
movsl
int3
test
sbb
lret
inc
filds
cmp
fsubl
bound
cmp
pop
daa
lods
pop
xchg
pop
pushf
int3
out
pop
pop
ljmp
and
inc
adc
push
outsb
lret
and
je,pt
outsl
aad
adc
xchg
arpl
inc
pop
or
cmp
in
dec
into
sub
clc
scas
pop
into
mov
testl
jae
std
bound
inc
outsl
jns
sahf
xchg
push
repz
inc
cmp
movsl
out
sbb
dec
roll
outsl
sub
insb
loope
mov
xchg
adc
xchg
or
xor
push
daa
cmpsb
pop
sarb
xchg
and
pop
fsub
outsb
shlb
int3
cmc
das
fwait
dec
popa
mov
cmc
in
ds
loop
mov
pop
pop
das
pop
insb
loopne
dec
sub
and
push
inc
shll
push
mov
mov
xchg
mov
bound
sti
popf
lods
testb
aad
jae
inc
xor
mov
lods
push
imul
mov
jnp
mov
xor
dec
jg
adc
test
push
fdiv
cmp
jo
jecxz
jo
jg
fcomps
inc
mov
stc
add
in
stos
cmp
jle
jl
push
or
arpl
cmp
xchg
xor
xor
es
inc
inc
stos
cltd
int3
mov
aas
movsb
jbe
xor
fldl
xor
aad
mov
lret
push
mov
sub
pop
shll
lea
mov
jmp
add
jl
pop
add
out
lret
or
or
cli
lods
inc
xchg
out
adcb
cli
jno
fldt
cmp
outsl
mul
repnz
mov
cmp
aaa
jbe
negb
pop
push
adc
sbb
shrb
jb
decl
aaa
cltd
iret
lods
or
xchg
sarb
fmuls
gs
arpl
les
data16
push
xor
pushf
mov
xor
inc
jg
mov
loop
cmp
mov
in
mov
push
jo
mov
mov
inc
mov
push
lock
js
lret
jp
push
mov
cld
mov
popa
add
daa
xor
jno
inc
adc
jns
add
jle
js
inc
and
adc
jmp
aas
xchg
sub
lret
jl
cmp
xchg
test
push
inc
xor
leave
pop
std
cltd
cmc
fnstsw
sbb
lret
scas
leave
jnp
pop
repnz
xor
push
imul
xchg
jbe
pop
jnp
dec
insb
adc
arpl
xor
sahf
pop
or
into
mov
mov
ss
dec
sub
push
icebp
cltd
pop
and
cmp
xchg
or
pop
cmp
inc
roll
rolb
pushf
rcrl
sub
test
xor
add
popa
cmp
shr
movsb
outsl
sbb
sbb
dec
add
call
addr16
jmp
mov
inc
jno
sub
test
mov
or
jp
cmp
xchg
fdivrl
mov
sub
andl
mov
or
shrb
movsl
sub
inc
test
mov
inc
iret
mov
dec
roll
push
iret
mov
aaa
std
mov
jb
test
xor
push
push
rorb
xor
lock
sub
mov
ret
xchg
fs
adc
fsts
adc
loopne
sub
pop
jmp
push
lret
fsts
enter
sub
mov
dec
sub
cmc
sar
adc
cmpb
daa
lea
pop
cmpb
rcrl
jae
mov
movsb
xchg
push
push
cmp
je
in
roll
jl
or
mov
imul
aaa
cmpsb
dec
repz
fs
fmuls
jo
dec
or
test
jle
and
iret
pop
js
mov
out
loope
sbb
inc
dec
stos
xchg
and
and
mov
mov
cmp
shll
mov
stos
jo
lock
mov
xor
ret
sub
dec
outsb
lock
xchg
mov
cmp
mov
mov
fimuls
mov
fsubrl
mov
fisubs
lods
xchg
pop
stc
std
dec
enter
fdiv
push
lret
push
push
ds
adc
ficoml
bnd
pop
pop
sbb
aad
in
in
xor
jmp
ror
xor
push
mov
out
icebp
xchg
jle
adc
ficompl
pop
cwtl
xchg
fbld
inc
ja
hlt
dec
aad
std
and
pop
inc
popf
mov
adc
xchg
sub
push
push
sarl
push
cmp
sbb
aas
mov
icebp
adc
ds
test
mov
aam
jne
popf
push
jae
xor
lcall
xchg
insb
mov
dec
mov
adc
fimull
xor
fbld
xchg
cltd
movsb
mov
xchg
xchg
repz
gs
test
inc
xchg
iret
fnsave
pusha
stos
cmc
xor
hlt
inc
imul
lods
and
hlt
jbe
orb
xor
les
and
addb
dec
add
pop
in
jno
out
xchg
lock
mov
shll
jno
dec
xlat
xchg
mov
in
inc
sub
jae
cmp
test
jmp
push
ds
push
push
jecxz
mov
or
push
into
dec
punpcklwd
jge,pt
movsl
pop
pop
into
out
gs
aam
push
and
or
fdivrl
out
repnz
mov
fdivs
and
repz
test
nop
or
daa
adc
repnz
movsb
cmpl
aaa
ds
push
mov
ds
cwtl
lods
pusha
enter
icebp
pop
xchg
cmp
je
lcall
stos
cld
in
xlat
mov
test
pop
sti
adc
icebp
popf
pop
ja
stos
ss
inc
out
sbb
out
cwtl
dec
cmpsb
sub
loopne
xlat
mov
mov
movb
sub
pushf
xor
out
mov
fidivrl
lcall
stc
pop
bound
divl
add
cs
mov
lahf
mov
cmp
pop
pop
xchg
cltd
lret
jns
sub
xchg
mov
lcall
sub
pop
cmp
fwait
test
push
insb
mov
jp
in
addb
add
ja
pop
cmpl
pop
or
push
out
in
fsub
lret
lods
loop
cli
ja
out
mov
fisubrs
and
iret
nop
mov
mov
pop
js
jmp
pushf
xor
into
jns
pop
fcmovb
bound
lock
dec
cmp
sti
lds
mov
outsb
pop
fwait
daa
push
mov
xor
daa
pop
xchg
cmp
cltd
clc
aas
push
jbe
mov
je
sarb
cld
xchg
sti
loopne
hlt
push
or
test
aaa
sar
xchg
jbe
jnp
inc
xlat
adc
inc
into
test
insb
je
insl
mov
mov
jl
mov
ljmp
imul
pop
loop
imul
jge
repz
test
inc
mov
mov
test
cmc
out
sbb
cmp
or
cwtl
cltd
inc
cmpl
inc
ds
in
adc
aaa
ds
ja
pushf
cmpsl
and
jmp
pushf
mov
pop
jle
imul
rcrl
lock
cwtl
xchg
mov
pop
repz
and
mov
jae
stc
xor
popf
pop
movsb
jg
adcl
mov
nop
or
and
xor
push
pop
mov
clc
sbb
mov
inc
mov
insl
es
mov
xchg
in
inc
mov
mov
jp
fs
data16
cmp
fwait
das
jno
nop
pop
sbb
insl
std
mov
aad
je
cmpsb
ja
cld
adc
ret
rcrb
fdivs
or
pop
xlat
push
fidivl
js
push
sbb
lret
xor
ljmp
cli
ret
mov
xor
int3
int
aas
int
lret
push
push
cmpsl
cmp
add
scas
push
es
mov
mov
xor
add
mov
repz
jmp
jb
aas
shll
jae
mov
icebp
push
ret
jle
aas
iret
adc
xchg
fldln2
jle
lods
arpl
mov
imul
cli
daa
pop
loopne
cmp
dec
sub
pop
jb
fs
cltd
shll
sbb
and
data16
cmpsl
xor
movsb
jb
xor
mov
ficompl
push
dec
test
in
mov
fsubrl
into
mov
cmpl
xchg
mov
sbb
inc
mov
test
aaa
mov
adc
outsb
es
mov
cmpsb
lods
mov
lods
pop
or
aad
rclb
test
test
cmp
scas
scas
sub
or
dec
bound
mov
or
filds
ljmp
mov
les
out
inc
push
and
jno
mov
repz
pusha
out
insl
push
mov
push
sub
sbb
cmp
imul
xchg
push
aas
imul
cmp
add
ja
popa
aas
shrl
call
fs
mov
jno
sahf
xor
cmp
imull
mov
sbb
inc
sahf
rcrl
dec
daa
in
repnz
sub
popf
or
imul
mov
mov
jno
mov
ret
jecxz
dec
gs
mov
adc
sti
and
daa
pop
mov
mov
mov
andl
add
sub
inc
mov
xchg
scas
in
mov
adc
jbe
mov
int
out
je
cmp
in
subl
mov
aam
gs
lds
in
push
int3
jns
cli
lret
push
jl
mov
es
add
bound
jmp
or
or
mov
pushf
push
or
test
int
mov
cwtl
fs
push
adc
or
jbe
fs
push
fnstcw
sti
popa
icebp
pop
xor
enter
mov
pushf
adc
adc
fldenv
sub
andb
mov
shl
test
mov
out
lahf
iret
ja
popf
call
cli
and
repnz
les
insb
inc
loop
vxorps
mov
mov
in
xor
inc
lret
ficoml
mov
scas
xchg
cmp
mov
cld
fsts
inc
in
mov
pop
jne
inc
xchg
iret
std
xor
and
push
call
outsl
cmp
push
outsb
push
cmp
les
shlb
scas
lds
pop
xor
insb
add
sbb
int3
cmc
vcmpps
rclb
and
ljmp
enter
pop
cwtl
in
les
cmp
pop
enter
stc
arpl
in
test
insl
aad
gs
clc
jnp
and
xor
or
lahf
sahf
lds
sbb
sbb
xchg
pop
jns
push
pop
push
mov
pop
cmc
mov
push
or
mov
lret
adc
push
jno
push
xchg
aam
and
iret
pop
ds
cmc
lret
sti
or
push
lock
scas
and
nop
sbb
aam
lahf
mov
lret
pop
data16
adc
fcompl
sbbl
test
fs
adc
pop
mull
xchg
and
pop
pop
mov
popf
arpl
mov
jbe
in
jecxz
jno
rorl
pushf
adc
inc
sarb
sub
imul
lahf
pushf
mov
inc
pop
cmp
add
dec
shll
and
loope
mov
data16
outsl
dec
packssdw
test
xchg
dec
jp
and
cmpsb
jl
xchg
aad
xchg
cmp
lds
push
sub
add
mov
inc
data16
mov
add
test
dec
mov
cmp
cmpsb
jnp
mov
add
stos
and
pushl
pop
data16
dec
adc
sbb
pop
xor
sbb
and
xor
jl
sbb
fisttps
rol
jne
popf
inc
adc
test
je
dec
or
jne
push
mov
jbe
bound
icebp
jbe
add
adc
sbb
or
xor
nop
scas
inc
fs
jbe
xor
push
adc
jne
fiadds
sub
xorb
in
inc
sub
and
add
add
cld
rcrl
sbb
add
or
out
cmp
stc
outsb
pop
push
mov
adc
pusha
lea
frstor
pop
cmp
push
jb
jbe
push
aaa
jnp
cmpsl
repnz
xchg
or
xchg
jl
xorb
add
lods
or
mov
daa
xlat
add
nop
xchg
xchg
sbb
mov
adc
jl
push
imul
jbe
xlat
nop
push
rorl
aam
pop
and
pushf
adc
out
pushf
sahf
mov
test
sbb
adc
jno
xchg
into
cwtl
or
add
and
push
add
xor
jae
mov
adc
mov
jg
add
loop
push
mov
sahf
jb
pop
push
xchg
inc
loop
xorl
xor
pop
rorl
xlat
mov
or
and
insb
movsb
xor
add
iret
adc
test
cmp
test
mov
pop
dec
pop
pop
rcll
loopne
je
je
je
and
int3
inc
mov
in
jne
add
cmp
push
rolb
mov
cmpsb
mov
outsb
iret
mov
push
test
mov
ljmp
jmp
dec
inc
pushf
lea
adc
stc
daa
out
inc
cs
je
mov
in
and
aam
jne
push
lea
gs
stc
addr16
mov
adc
push
pushf
mov
jl
lock
or
push
shlb
in
cwtl
pop
cmpsb
sub
lods
jns
adc
inc
js
xchg
dec
and
push
push
push
sub
cmp
stos
rcrb
pop
out
inc
out
pusha
jp
mov
xor
mov
shrb
sbb
jecxz
insb
pop
scas
pop
mov
sub
or
lret
xor
arpl
mov
stc
dec
dec
movsb
and
test
xor
dec
ja
aam
cmpsb
lock
adc
shrb
inc
mov
aaa
push
das
jmp
push
repz
push
lahf
scas
mov
cld
jae
lods
xchg
lds
mov
cld
adc
pushf
rorl
mov
gs
daa
dec
test
lea
jae
rolb
nop
movsl
jl
sbb
push
ljmp
xchg
ror
and
stos
xor
cwtl
adc
cli
mov
lret
push
dec
or
jnp
push
xor
arpl
and
loopne
xor
sahf
jnp
mov
sbb
dec
mov
pushf
movsb
push
in
pop
scas
pop
ljmp
mov
xchg
mov
cmp
xor
push
int3
cmpsl
fisubl
push
jnp
mov
xor
cmp
fidivrl
inc
iret
in
loope
sbb
cs
lds
sbb
mov
popa
pop
fists
sti
xor
lea
cmp
loope
cltd
iret
mov
cltd
out
pop
inc
ds
mov
ds
into
xchg
pop
inc
lea
push
mov
dec
mov
and
adc
scas
test
fdivrs
aas
dec
testb
and
add
lret
or
mov
ljmp
call
pop
iret
pushf
dec
hlt
test
jge
icebp
mov
pop
or
stos
shl
mov
xor
sbb
and
inc
pop
sahf
xchg
jge
cmpl
addb
stos
jl
hlt
xor
idivl
es
stc
pushf
cmpb
in
ret
adc
mov
cmp
test
and
sbb
xchg
inc
or
inc
inc
xchg
outsl
add
popa
test
dec
lods
jne
fistps
mov
sbb
mov
test
movl
les
push
das
pop
xchg
cmp
adc
jl
dec
in
pop
movsl
mov
xchg
movsb
stos
adc
arpl
shr
idivl
or
sub
mov
xchg
and
inc
sub
mov
aaa
test
js
cltd
mov
push
fldcw
push
push
addb
icebp
js
nop
and
pop
testb
push
or
loopne
fsubrl
add
push
push
pop
cld
cs
jno
daa
cmc
stc
jno
mov
sbb
imul
xchg
xchg
int
ret
nop
jo
cs
add
pop
jno
pushw
lcall
in
cmp
push
gs
popa
xchg
fcomps
fchs
push
adc
mov
sbb
cltd
inc
test
lea
pop
cmp
add
sub
pop
popa
adc
pop
dec
mov
mov
lahf
add
mov
or
xor
sub
das
divb
and
pop
fidivs
sbb
lods
shl
inc
xchg
call
dec
mov
mov
add
push
mov
mov
adc
sbb
add
mov
or
outsl
adc
inc
xlat
aad
mov
xor
xchg
cmp
adc
dec
or
and
addb
fsts
xchg
inc
icebp
sbbl
and
mov
shl
push
mov
cmpsl
loopne
loopne
xlat
outsl
inc
push
int3
pop
lahf
sub
test
pop
loopne
sub
leave
std
in
les
decb
movsl
xchg
pusha
test
xor
push
mov
fnstsw
loopne
das
mov
dec
and
xchg
mov
sbb
jl
test
dec
cmpsb
or
and
cwtl
outsb
jbe
sbb
or
mov
ficomps
cmpsl
es
add
jne
dec
cmpsl
dec
xlat
arpl
loop
lds
xorl
push
sahf
fs
out
mov
sub
inc
adc
xor
inc
push
push
aad
pop
lret
call
cmp
pop
sbb
cmp
and
mov
out
xchg
dec
pop
jp
add
mov
or
add
jno
mov
fadd
outsl
rcrl
fucomp
int3
and
jmp
pop
insb
lahf
shll
inc
popf
dec
xchg
popf
and
sbb
pop
into
lcall
xor
pop
ljmp
cmpb
addr16
xchg
mov
cmp
xor
push
bound
leave
test
jae
xchg
fwait
lret
loopne
or
pop
sub
push
push
lahf
stos
jns
sub
outsb
sbb
pop
pop
sub
testl
adc
or
pop
mov
push
xchg
add
aad
jecxz
aas
pop
xchg
cmp
mov
clc
test
push
inc
xchg
mov
jg
rcrl
andl
fstl
jg
add
movsl
insb
sub
pop
int3
inc
adc
add
sbb
xchg
dec
addb
lods
push
cmp
adc
testl
je
insl
jo
je
or
pop
xor
mov
xchg
xor
and
adc
xor
insl
bswap
dec
pop
jns
xlat
in
lea
xor
adc
gs
lahf
in
ficoml
in
in
test
outsb
ror
movsl
into
adc
mov
pop
jle
iret
jno
jg
adc
loope
inc
xchg
out
in
jl
cltd
fisubl
cs
inc
sub
inc
addr16
aad
jle
inc
jl
inc
test
or
fnstcw
shll
or
mov
popf
push
test
inc
ret
fiadds
xchg
icebp
fcmovne
xlat
adc
imul
xchg
test
addr16
or
xchg
jp
lock
cmp
mov
popa
into
insb
or
mov
lret
icebp
out
into
enter
jecxz
lods
or
add
xor
insl
pop
add
pop
inc
mov
push
xor
fisubl
repnz
cld
sar
arpl
jmp
sbb
jae
mov
cmp
cmp
lea
stc
nop
lods
add
dec
jmp
daa
push
push
popa
add
test
mov
push
sti
icebp
xorb
mov
adc
mov
test
pop
lret
adc
jae
movsb
jnp
mov
mov
adc
mov
nop
std
or
les
scas
call
hlt
adc
mov
xchg
ret
icebp
pop
xchg
push
jl
inc
cli
into
push
into
ret
shr
ret
and
dec
inc
lds
pop
adc
push
rol
cs
pop
cmp
cmp
negl
sahf
mov
or
out
clc
mov
inc
xchg
adc
inc
mov
aas
movsl
scas
outsb
pop
add
add
jecxz
fstpl
xchg
xchg
push
mov
inc
lock
insl
outsb
insl
addl
popa
pop
sub
fdivrs
mov
push
jbe
pop
mov
std
out
popf
cltd
loop
mov
jne
mov
in
mov
lods
or
jge
pop
mov
add
jnp
cmp
lret
mov
sbb
xor
nop
mov
adc
iret
jbe
sbb
pop
add
cltd
mov
es
test
push
inc
sub
in
inc
or
mov
lods
xor
clc
cs
test
cmp
repz
pop
jbe
shlb
ljmp
mov
cmp
push
sbb
rorb
jb
mov
aaa
outsl
jmp
mov
test
pop
or
imul
outsl
idiv
stos
fsubl
xor
ficoms
xor
orb
jmp
test
mov
into
push
clc
popf
pop
test
adc
clc
bound
scas
xor
in
lahf
popf
imul
jg
je
and
ljmp
insb
int3
jmp
mov
leave
es
jb
pop
xchg
movl
add
pop
lods
mov
mov
cmp
daa
setl
xorl
out
cmp
lods
jp
mov
aam
or
loopne
add
jp
gs
xchg
inc
add
es
call
lods
mov
dec
dec
jl
xor
in
xor
mov
mov
push
pop
mov
rorl
or
in
leave
dec
cmp
out
cwtl
adc
lock
xor
or
push
orb
das
pop
xchg
ljmp
test
mov
leave
or
inc
lods
inc
xor
jns
insb
adc
mov
mov
mov
fsubrs
bt
inc
ffreep
lret
xor
inc
insb
outsb
out
push
je
pop
mov
hlt
loope
rol
add
cmp
movzbl
lock
arpl
hlt
js
lock
lods
jno
test
xchg
push
call
sbb
mov
sbb
sub
movsl
loopne
dec
lds
icebp
imul
add
fcompl
mov
or
mov
and
mov
push
shll
fbstp
pushf
mov
andb
lods
adcl
or
pusha
imull
adc
test
cmc
or
mov
out
pop
scas
mov
add
mov
repnz
jae
adc
xchg
adc
outsl
jb
jno
sbbb
dec
cwtl
popl
add
add
pop
call
lods
adc
and
push
fsub
inc
fimull
scas
cmp
dec
lock
roll
and
push
ror
mov
shl
das
aad
insl
test
ja
or
lds
insb
adc
sub
stos
out
mov
inc
aas
mov
repz
jmp
rcrl
xchg
fs
xchg
lds
call
in
add
adcl
push
dec
sti
in
cmc
paddsb
dec
pop
xchg
das
jmp
ljmp
bound
cmp
addr16
cli
loop
mov
jnp
adc
fildl
cmpsb
sbb
lret
mov
loopne
into
fbld
loop
fisubl
and
inc
xchg
add
movsl
jns
jg
jae
push
and
ret
sub
push
mov
push
cmp
cmp
test
push
int3
pop
rorb
jbe
cld
fdivrl
inc
xor
dec
sahf
dec
data16
pop
and
std
pusha
call
or
push
cmpsb
mov
pop
and
shl
add
push
pop
add
sub
push
sub
xchg
int3
pop
push
sbb
or
add
and
popf
push
enter
outsb
cmc
fisubrs
or
cmpsb
dec
sahf
bnd
lahf
cltd
push
xchg
xor
jbe
pop
jae
adc
aam
dec
out
scas
xlat
push
adc
sbb
mov
jmp
cmpsb
inc
mov
stos
in
xchg
jmp
pop
jp
or
rorb
sbb
xor
push
outsl
or
add
insl
and
mov
inc
outsl
ja
call
js
and
jg
ret
cltd
rorl
in
mov
fcoms
ret
xchg
pop
xor
inc
insl
iret
fwait
jge
cmpsb
cwtl
je
pop
mov
lea
in
or
and
in
repnz
xchg
and
leave
xchg
push
popa
icebp
nop
pop
add
cmpsl
mov
jbe
xchg
mov
fdivrl
pop
dec
outsb
jnp
mov
test
xchg
push
lcall
lea
dec
fdivp
dec
lret
adc
mov
inc
cltd
mov
and
inc
mov
push
dec
leave
ret
in
mov
popf
movsb
sbb
aad
daa
dec
sbb
aam
cli
and
sub
push
das
xor
lret
adc
lahf
dec
jg
lock
lds
scas
test
outsl
xchg
jp
sbb
or
push
fwait
or
inc
inc
dec
adc
shlb
mull
lods
push
push
mov
incb
daa
push
pop
scas
inc
mov
or
and
lret
and
les
push
mov
out
cmp
add
adc
shlb
popl
insl
int3
pop
inc
rcrb
xchg
mov
sti
adc
out
stos
mov
inc
sub
icebp
sarl
loopne
in
fidivrs
cmp
jnp
xor
sti
popf
cmpsb
lret
icebp
push
jmp
add
out
add
xchg
insl
ljmp
in
mov
das
push
push
add
adc
ja
push
insl
add
ss
push
addr16
repnz
call
mov
sbb
and
pop
int
and
stos
push
cmp
sarl
mov
mov
lods
add
xchg
pushl
rcrl
jae
lret
xchg
sub
jne
stos
add
fwait
mov
sub
ja
repnz
shl
pop
lods
jp
sub
stos
xor
inc
pop
push
sti
sbb
jmp
xlat
sti
or
pop
ror
lret
in
dec
daa
xchg
and
lods
stos
mov
aam
push
fs
xchg
mov
mov
iret
js
lock
sub
lock
maskmovq
testl
adc
clc
xor
jl
repz
jb
enter
shl
stc
dec
ficompl
iret
xor
lret
addb
jmp
mov
mov
xor
les
movsb
inc
push
pop
int3
int3
test
xor
daa
hlt
bound
cmc
mov
pop
inc
outsb
jbe
hlt
mov
pop
pop
test
mov
xor
push
insb
xor
lret
add
mov
sbb
push
pop
jg
daa
dec
or
cmp
xchg
cmp
jg
pusha
cmp
repnz
shll
cmp
dec
xor
pop
and
fisubrs
lret
mov
outsb
jns
pop
ret
into
xchg
fs
xor
fisubrs
cmp
xor
hlt
loope
mov
jne
xchg
dec
loope
adc
lods
scas
mov
adc
pop
outsl
dec
xchg
sbb
mov
lock
hlt
push
adc
jl
icebp
xchg
mov
loop
arpl
mov
inc
xchg
stc
push
push
pushf
insb
int3
xchg
mov
in
lods
jnp
lahf
add
inc
int
add
push
lods
daa
insl
imul
or
in
in
and
lock
imul
incl
xor
pushf
fldl
test
dec
aas
es
dec
or
xchg
lret
jmp
xchg
jge
sub
bnd
dec
mov
in
mov
hlt
mov
or
pushf
or
push
xchg
fisttpll
ret
jge
jne
in
push
xor
rcll
adc
stos
cmpsl
test
cmp
ljmp
mov
movsb
xchg
xchg
scas
adc
adc
or
rorl
sub
and
inc
pop
scas
or
test
dec
aad
testl
sub
rcll
mov
inc
stc
jmp
mov
mov
mov
cs
pop
xor
push
sti
xchg
mov
fstpl
adc
or
or
mov
shr
mov
jne
jno
icebp
cmpsb
jmp
inc
daa
sub
jns
fidivs
cmp
sbb
cli
imul
imul
add
loop
repnz
aaa
jge
push
pop
pop
idivl
es
sahf
pop
dec
scas
test
mov
xchg
das
insl
adc
fwait
inc
push
cmp
adc
inc
aad
push
cmp
notb
shr
loope
js
mov
je
loope
lock
push
mov
xor
dec
pop
push
fisttps
adc
mov
faddl
sbb
mov
enter
add
out
dec
mov
fildl
jp
in
daa
push
jecxz
insl
mov
adc
adc
ret
pop
pop
push
jmp
lods
cld
sub
mov
xlat
in
popa
sub
loopne
push
xor
inc
aas
sub
pop
loopne
loope
inc
push
mov
lret
cmp
pop
mov
inc
mov
push
inc
sarl
lahf
mov
mov
in
push
fs
fbld
pop
in
mov
mov
iret
mov
push
or
pop
xchg
cli
pop
icebp
cwtl
xchg
fdiv
add
sub
and
push
sbb
adc
mov
repnz
pop
xor
addr16
loopne
or
out
or
data16
fcomps
xchg
mov
jp
loopne
or
test
cmc
sarl
dec
sub
gs
push
enter
sub
jnp
mov
adc
icebp
shl
dec
int
xchg
dec
into
jae
or
push
pusha
mov
add
lds
jmp
mov
xchg
or
lock
stos
cmp
xchg
in
or
inc
in
push
and
and
sbb
stos
cli
push
fdivrs
shr
mov
pop
fisttpl
inc
cmp
pushf
and
inc
mov
push
gs
push
push
or
mov
out
pop
dec
test
repz
push
aas
into
int
inc
incl
push
cli
out
loop
pop
jbe
test
jecxz
cmpsl
je
add
call
pop
adcl
and
dec
mov
xor
cmp
add
pop
mov
ret
mov
nop
sub
lret
cmp
jecxz
in
int3
cmc
mov
xchg
inc
push
xor
mov
lahf
cwtl
out
dec
roll
mov
push
iret
xor
cmp
daa
sbbb
mov
or
pop
sarb
cli
cli
mov
or
mov
sub
aad
inc
xchg
sbb
shl
mov
cmp
rcl
je
test
mov
sbb
dec
xor
mov
lea
adc
aas
jns
aam
lcall
xorl
lret
lahf
mov
aas
sub
pusha
call
pusha
clc
sub
ss
adc
es
je
cmc
mov
cmp
xchg
bound
jecxz
in
fisubrs
mov
inc
cltd
cmpsb
and
add
mov
popf
das
mov
js
js
mov
add
jmp
inc
push
lsl
xor
pop
and
leave
pop
scas
lret
stos
andb
sbbb
daa
jns
inc
or
mov
or
rol
adc
dec
xor
xor
daa
dec
sub
ljmp
cmp
mov
mov
js
popf
cmp
jno
xchg
or
mov
jo
pop
dec
mov
sbb
sub
sub
addb
rcrb
dec
or
jp
js
das
sbb
mov
add
sbb
xchg
push
xor
idivb
fs
pop
jne
es
loopne
dec
scas
mov
sub
mov
push
inc
sbb
and
scas
dec
sbb
sahf
adcl
movsl
sarl
cmc
pop
ret
out
lret
jb
das
add
cmc
js
stos
pop
pushf
mov
xchg
inc
sbb
nop
dec
sbb
xchg
daa
ds
and
jmp
inc
sbb
mov
xor
jle
cwtl
jb
add
stc
arpl
popl
add
xchg
sub
push
fbld
sub
mov
stos
sbb
pop
sub
adc
pop
inc
lods
or
inc
sbb
jmp
xor
test
scas
mov
mov
pop
xor
pop
add
xchg
push
ds
adc
je
ret
ljmp
jb
cmp
jne
inc
adc
and
mov
push
fldt
xchg
pop
pop
mov
fildl
jo
shlb
sti
dec
cmp
test
ret
sti
cmp
ret
fwait
pop
mov
mov
cmp
or
pop
xchg
sbb
in
lret
lret
sbbl
jns
test
sub
mov
or
xchg
je
xor
popf
sbb
mov
add
sub
and
lock
out
icebp
imulb
adc
mov
mov
movsb
or
lahf
and
dec
icebp
jg
popf
push
add
mov
loopne
cltd
cmp
jle
hlt
sub
and
mov
mov
mov
xchg
jnp
clc
dec
mov
outsl
xorl
test
loop
xor
dec
push
cmp
push
cmp
inc
in
scas
xor
in
inc
inc
dec
sub
aam
popw
adc
scas
test
xor
shrb
sbb
mov
mov
loopne
pop
mov
xchg
adc
cmp
test
pop
lods
push
arpl
cltd
cs
movsb
je
jp
int3
insb
ljmp
sub
pop
sbb
inc
addr16
fwait
xchg
and
out
outsl
xor
mov
je
add
dec
mov
cltd
xor
shr
xchg
loope
mov
or
fwait
xchg
add
push
imul
push
aas
mov
mov
add
popa
xlat
sbb
pop
pop
data16
mov
jl
xorl
lcall
movsb
dec
pop
pop
data16
sbb
js
icebp
int3
in
aas
pop
mov
mov
testb
and
xor
jle
mov
jmp
hlt
cmp
xchg
fcmovb
xor
cld
push
inc
and
cmp
mov
int3
cmp
sbb
and
fildll
je
aad
je
and
scas
aad
sti
adc
movsb
cmp
pop
dec
jno
pushf
test
cli
push
orb
cmp
ds
imul
cmp
test
mov
sbb
xchg
mov
push
mov
or
cmp
xor
mulb
xchg
fs
add
jmp
sub
into
ret
push
mov
and
mov
cmp
xchg
mov
data16
enter
jmp
mov
mov
adc
jae
inc
push
lds
or
fcompl
mov
ds
and
dec
loope
loop
jmp
cmpsl
pop
adc
rcrb
mov
add
sbbl
sub
dec
stos
add
push
sub
jbe
int3
aas
lods
lahf
add
xchg
test
xchg
mov
xlat
cmp
mov
es
pop
repnz
stos
cmp
xchg
mov
pop
cmp
mov
outsb
push
jb
imulb
cld
mov
jle
sub
sbb
mov
out
iret
jae
int3
iret
iret
lret
inc
pop
lds
repnz
lret
push
out
mov
test
rclb
mov
ss
mov
icebp
xchg
data16
jecxz
push
mov
pop
sub
dec
aaa
add
mov
mov
mov
jge
cmp
pop
scas
xchg
and
lods
push
mov
lahf
dec
mov
mov
aad
pop
orl
pop
push
shlb
pop
ljmp
out
pushf
cmpsl
cmc
add
js
mov
stos
lret
popa
adc
jg
leave
ss
jg
mov
loope
mov
loopne
enter
rcr
xchg
or
sbb
adc
sbb
aam
and
test
cmp
out
push
shll
pop
stos
jl
push
aaa
inc
pop
enter
imul
or
rol
dec
ficoml
movsb
cli
add
in
dec
in
or
rorb
imul
mov
js
cwtl
push
or
add
pusha
mov
sub
cli
fstps
fsts
inc
aas
hlt
or
lds
or
sub
aaa
push
jo
pop
mov
dec
fldt
adc
jns
int
test
repnz
add
js
jge
icebp
cmpsb
adc
mov
mov
rorl
int3
push
into
pop
test
in
icebp
fdivs
pop
stc
xchg
fs
xor
xchg
aam
mov
xor
roll
jl
adc
jl
mov
pop
jg
mov
in
outsb
movl
or
popa
adc
in
dec
push
int
mov
xchg
push
jmp
jno
cmc
add
adc
loopne
fstpt
sbb
imul
mov
push
mov
js
pop
loope
mov
mov
mov
add
in
push
add
daa
mov
cmp
jns
mov
loope
into
sbb
ds
xlat
cmp
mov
cltd
dec
push
or
test
mov
mov
lods
lds
push
cmpsl
sbb
sbb
pop
mov
push
enter
push
fstpl
jg
aaa
mov
fidivrl
mov
dec
dec
insb
mov
je
lcall
mov
inc
mov
mov
imul
imul
inc
stos
xlat
adc
adc
mov
pop
mov
pop
cli
loopne
pop
pop
popa
stos
mov
cmp
inc
inc
sbb
lret
push
loopne
loopne
out
fcmovne
lock
cmovs
and
inc
data16
repz
mov
pop
pop
sbbb
adc
xchg
arpl
jae
add
push
shlb
sub
dec
jmp
into
inc
pop
ret
shll
cltd
orb
xor
inc
xchg
stc
mov
push
push
push
mov
push
fadd
in
in
add
mov
add
mov
shrl
dec
dec
xor
sub
popf
sbb
call
xor
enter
inc
in
xchg
jns
jmp
mov
and
cmp
push
stos
loopne
and
cmp
mov
pop
sub
mov
movsb
sti
mov
xchg
push
out
jmp
lock
arpl
ret
adc
ss
clc
les
pop
jg
popl
jle
cs
addr16
aam
lds
and
lods
lret
mov
inc
adc
or
mov
jmp
js
adc
nop
test
or
mov
jne
out
fistpll
sarl
mov
lods
mov
repnz
sbb
push
mov
mov
fildll
xlat
and
imul
or
cld
jmp
adc
adc
dec
sub
addr16
jle
cltd
shl
mov
mov
xchg
out
enter
sub
fldl
gs
jl
lret
mov
jb
mov
sahf
outsb
lea
iret
jl
imul
inc
mov
pop
inc
aas
ja
or
rcrl
mov
fdivs
outsl
jmp
mov
push
sbb
cs
jle
and
mov
xchg
dec
dec
or
pop
or
scas
leave
pusha
inc
ljmp
pop
xchg
test
into
sbb
and
pop
outsl
test
stc
clc
xor
stos
lods
and
push
aas
out
xchg
cli
pop
es
repnz
jp
sub
inc
xchg
adc
add
pop
jmp
adc
idivl
ficoms
add
bound
sbbb
mov
adc
push
inc
jmp
shll
xlat
lret
pop
ret
repnz
mov
call
jno
mov
test
dec
mov
mov
push
sbb
sar
lahf
and
push
add
jl
adc
fdivrl
shlb
mov
xchg
pusha
lret
pop
xchg
mov
push
mov
jnp
ds
flds
ret
sub
fadds
scas
sub
and
cs
popf
in
or
test
sub
test
or
mov
lods
adc
or
aaa
clc
pushf
subb
xchg
cmp
xchg
in
sbb
dec
mov
jp
mov
leave
xchg
xchg
jle
pop
mov
or
sti
addl
xchg
sbbb
nop
cmp
decb
sbb
hlt
sti
mov
xchg
push
push
popf
push
and
faddl
dec
xchg
ffree
sub
ret
and
fsts
add
nop
cmp
ficoms
sbb
popa
idivl
xchg
mov
sbb
cmp
xchg
cmc
mov
push
mov
fmulp
sti
fwait
cld
mov
sub
or
jns
pop
les
push
pop
fcomi
mov
adc
repz
sub
aas
dec
xor
scas
inc
in
imul
inc
inc
shrl
jecxz
sahf
inc
lahf
pop
mov
outsl
jbe
movsb
daa
ret
dec
adcb
jb
fildl
add
rcr
in
inc
pop
jecxz
sbb
mov
loope
inc
loop
cmp
sahf
ds
aas
stos
dec
into
add
pop
xlat
cmpsl
add
push
stos
xor
orl
int
outsb
cld
xchg
pop
push
inc
inc
into
jp
adc
mov
scas
pop
in
or
xor
jns
in
aas
inc
mov
add
add
adc
cmp
fbstp
dec
movsb
nop
iret
mov
xchg
inc
js
neg
xor
pop
pop
pop
or
xor
mov
dec
popa
cltd
inc
lea
pushf
es
push
sarl
mov
jno
cmc
push
pop
jp
add
mov
xor
jns
jne
arpl
dec
cld
cmpsl
orb
out
and
imul
sub
or
outsb
fst
scas
ret
ret
jle
add
mov
adc
fists
dec
adcl
xor
leave
and
xchg
gs
scas
mov
jns
fisttpll
ds
ljmp
cmc
xlat
push
enter
test
adc
sbbl
push
faddp
aad
push
shrb
rorl
test
jae
dec
xchg
cmpsl
xchg
or
mov
jb
insl
push
inc
in
jp
sub
jg
add
inc
sbb
xchg
mov
or
mov
and
mov
xchg
lea
rcrb
dec
pop
test
pushf
jge
sbb
stos
jo
lret
ret
cmpsl
push
jae
push
jns
inc
xchg
mov
inc
inc
iret
or
pushf
cwtl
adc
inc
xchg
aam
in
pop
ds
test
pop
repz
cs
or
es
mov
fdecstp
adc
into
nop
xor
xor
mov
loope
daa
mov
inc
and
fmul
mov
subb
dec
sti
out
lcall
movsl
or
andb
pop
pushf
movsb
das
push
aam
out
push
test
sbb
pushf
data16
mov
sti
repnz
add
jo
popf
pop
mov
popf
mov
inc
xchg
loopne
ja
sbb
pushf
scas
inc
mov
mov
shrl
sub
xlat
rorl
loop
xchg
test
stos
subb
push
push
or
andl
mov
test
sbb
push
pop
pop
jge
lds
daa
and
test
inc
mov
scas
adc
loopne
xchg
push
cmp
stos
std
data16
loop
test
dec
adc
inc
push
movsb
xlat
push
xor
les
clc
fadd
loop
clc
ja
out
shrl
dec
outsb
mov
shl
and
fsubrs
es
lcall
fldenv
pop
xchg
fcos
subl
mov
pop
lods
sbb
mov
jmp
nop
sbb
and
cmpsb
pop
hlt
sti
sub
mov
mov
jb
sub
loop
jmp
dec
xchg
leave
sbb
shrl
stos
mov
in
adc
notl
pop
cmp
cs
fidivl
add
clc
pop
cmp
push
push
sbb
ficomps
sti
aam
xchg
add
fsubrs
inc
aas
aas
mov
mov
lds
nop
cmp
xor
icebp
leave
mov
mov
out
and
sbb
cli
loope
pop
add
pop
xchg
and
lods
int3
sub
mov
es
loop
or
mov
leave
cs
mov
ljmp
ret
dec
loopne
push
fcompp
jne
insb
fld
sbb
and
push
cli
add
xlat
pop
std
sub
fnstcw
sub
xor
imul
xlat
cwtl
push
iret
fldt
dec
in
insb
jecxz
adc
sub
mov
fs
lea
rorl
or
mov
andps
cmpsb
and
and
arpl
in
pop
ret
inc
xor
mov
mov
sub
inc
int
es
loop
pop
setb
and
jmp
out
test
and
andb
adc
add
xor
mov
fld
add
mov
dec
mov
lock
cli
enter
xorb
decb
insb
push
inc
shrl
cmp
xchg
mull
cwtl
jmp
sub
into
aaa
mov
sub
popl
lods
fcmovnbe
fisttpl
ret
iret
inc
dec
sub
mov
je
aas
push
and
sbb
ficoms
in
or
int3
call
cmpsb
mov
loopne
sbb
ret
cmpb
sbb
inc
scas
or
ja
pop
or
add
fs
clc
idivb
push
sub
dec
shrl
mov
mov
xor
rcrb
mov
add
cmp
xchg
cmp
pop
in
xlat
ss
lods
pop
pushf
pop
addb
or
daa
mov
push
out
dec
inc
mov
hlt
insl
cmp
adc
scas
mov
cmp
pop
add
jp
js
sub
pop
mov
pusha
popl
push
cmpsl
adc
aad
orb
lcall
push
dec
pop
fwait
push
mov
adc
cmp
out
or
mov
mov
sub
sub
ret
add
gs
inc
sbb
int3
cmp
push
inc
lock
cli
pop
cmp
dec
in
dec
dec
add
dec
outsl
mov
pushf
pop
fnsave
addr16
insl
cld
imul
std
loopne
repnz
std
test
lret
stos
mov
add
push
test
inc
test
leave
cmpb
cmp
adc
sbb
stc
inc
out
sarl
lods
fimull
xchg
int3
repz
aaa
fcompl
rcrb
sbb
sub
push
sbb
cmpsl
imul
insb
jmp
arpl
cmpsl
incb
and
mov
xor
rcl
or
sbb
mov
movsl
cwtl
pushf
or
int
or
imul
enter
cmp
lcall
lahf
lret
xchg
or
sbb
cmp
push
and
or
testl
xchg
xor
int
cmpsb
pop
and
mov
pop
pop
cs
int3
mov
popa
int
sbb
or
daa
mov
add
jo
ficoml
ret
pop
popa
inc
std
xor
and
add
lahf
sti
ss
lods
push
sbb
imull
sahf
pop
in
loope
test
cmpsb
cmp
psubb
xor
adc
jp
mov
dec
adc
scas
out
lods
fbld
loope
cmp
dec
in
push
nop
dec
or
and
jne
fs
repz
push
xor
addr16
mov
mov
stos
test
sub
int3
and
jb
push
xchg
icebp
or
xor
add
aaa
test
in
lods
pop
sub
imull
movsl
adc
imull
push
jno
xchg
pop
lahf
in
ljmp
push
lahf
push
xchg
fbld
xchg
sarb
xorb
push
push
call
pushf
lret
outsl
jnp
mov
js
sub
xlat
fwait
cld
cmp
into
mov
int3
loope
pop
jecxz
pop
fimull
adc
mov
mov
jcxz
insl
jmp
sbb
imul
aam
into
sub
sub
cli
sbb
jp
out
pusha
cmp
xchg
cmp
lret
sub
out
dec
andb
jne
mov
sbb
mov
scas
xchg
cmp
gs
cmp
and
sbb
xchg
push
outsl
int
mov
aaa
out
adcb
int
ja
adc
incb
insb
adc
cmp
jg
and
hlt
jo
lret
mov
mov
es
dec
dec
jns
hlt
int
push
aas
gs
stc
sbb
add
jle
sbb
inc
jb
sbb
push
int
mov
lret
mov
call
xchg
or
sbb
test
int3
push
rolb
add
les
mov
gs
xchg
mov
mov
pusha
pop
out
mov
xor
addl
push
hlt
call
sahf
fwait
cmp
lds
xchg
and
push
std
fsubrp
movsl
daa
cmpsb
fwait
stos
movb
out
xor
add
hlt
out
dec
imul
push
data16
inc
mov
adc
pop
xor
inc
mov
fisttps
je
js
mov
rorl
and
sub
xor
lcall
dec
out
jo
popa
inc
loop
stos
pop
jg
pushf
loope
dec
call
in
cmp
inc
sbb
mov
lea
add
sbb
cmpsb
fnsetpm(287
mov
aam
mov
push
jo
mov
dec
push
shl
cmc
mov
sti
jg
add
fimull
aam
mov
dec
je
sbb
sbb
es
cli
and
xor
in
xchg
push
or
lcall
leave
fisubs
push
sbb
xor
mov
addr16
mov
mov
std
adc
mov
mov
cmp
xchg
inc
lock
leave
aam
xor
pop
sbb
call
jge
cli
hlt
cwtl
push
or
in
fnstenv
push
fcomp
xchg
xor
cmp
fucomip
std
stos
fcmovb
mov
dec
scas
stos
sub
add
lock
fwait
lock
aaa
and
loopne
sbb
jae
sub
in
ss
dec
xchg
je
xor
jle
adc
ret
test
mov
push
lahf
test
ret
adc
push
xchg
xor
cmp
nop
lahf
push
xor
mov
cmp
dec
jo
xchg
sbb
pop
imulb
in
sbb
fbld
dec
sub
pop
fnstcw
shrb
adc
call
bound
mov
movsb
push
push
std
vmwrite
pop
fistpl
pop
ss
cmp
sub
adc
mov
and
test
out
push
xcrypt-ecb
cmpsl
dec
jb
jne
cmp
xchg
adc
add
movsl
push
test
mov
outsl
repz
sbb
or
cmp
jmp
mov
mov
pop
shll
pop
and
je
mov
add
push
cmp
call
lret
jb
jle
mov
pushf
dec
jnp
dec
xchg
fldcw
adc
les
rcll
es
ljmp
movsb
mov
push
sbb
pop
adc
xchg
sti
movsb
lea
inc
sbb
addr16
in
push
jg
mov
pusha
lods
clc
jo
push
dec
push
dec
mov
clc
out
add
lds
push
fcmovbe
mov
mov
gs
into
aad
aad
imul
loopne
dec
bound
xchg
or
sub
mov
ds
jle
test
push
jmp
xor
adc
popf
aad
pop
stos
jmp
jbe
xchg
cmpsb
int3
and
add
lret
push
lcall
loop
push
and
sbb
int3
xchg
mov
xchg
pusha
xchg
adcb
jns
ret
and
adc
push
jo
mov
enter
in
mov
sbb
pop
add
mov
inc
movsl
jmp
loop
cmp
loop
je
push
add
lock
pop
movsl
mov
jo
vpsadbw
push
sub
mov
xchg
inc
xor
jecxz
sbb
mov
bswap
mov
xchg
mov
push
nop
dec
int3
lds
stos
mov
fmuls
dec
adcl
aam
jle
pop
int
cmp
or
rcrb
imul
cltd
jns
cmp
or
test
in
out
call
sub
test
add
pusha
jnp
test
stos
arpl
mov
sbb
xchg
xor
xchg
packsswb
lds
mov
call
push
bound
in
enter
pop
cltd
jecxz
ljmp
xchg
dec
inc
pop
mov
jb
sub
je
loop
dec
repnz
les
shrb
test
arpl
xor
xchg
inc
ret
adcl
pop
fdivrl
andb
movsb
fistl
pusha
test
mov
cmpsl
ds
orl
mov
daa
paddsw
fbstp
dec
rcrl
out
test
jp
sbb
lcall
mov
mov
or
sub
and
xchg
xchg
sahf
lret
push
stos
xlat
cltd
mov
lret
nop
call
jne
lds
xorl
aad
out
pusha
mov
cmp
add
ja
loopne
movsl
pop
sub
jo
or
sbbb
in
xchg
dec
adc
dec
add
stos
cli
pushf
push
cmp
out
hlt
pop
icebp
repnz
add
mov
aas
adc
stc
lret
out
mov
insb
add
lcall
add
sbb
push
pop
pop
dec
enter
push
and
shrl
lods
lea
xchg
repz
faddl
pop
push
pop
data16
xchg
push
and
je
rolb
iret
roll
adc
sbb
in
push
aas
in
mov
sbb
out
loope
mov
mov
mov
pop
imul
ja
je
lods
mov
or
mov
or
mov
scas
xor
imul
imul
fmuls
push
cs
add
insl
js
sbb
dec
insb
cltd
mov
dec
adc
int
pop
cmpsb
fnstcw
insb
jns
mov
div
out
ret
aad
fwait
iret
sub
or
sbb
sbb
nop
inc
mov
fistpll
cmp
sbb
stos
mov
rolb
dec
xor
lret
inc
inc
fwait
pop
test
sub
test
movsl
cmpsb
in
imul
and
enter
lret
inc
loop
push
sub
dec
add
or
sub
cltd
jbe
sub
popa
mov
dec
mov
inc
adcb
or
fistpl
jg
cli
cmp
popa
sbb
or
pop
into
hlt
inc
call
hlt
adc
test
xor
add
movsb
popf
jnp
dec
and
adc
aad
mov
mov
dec
aad
notb
mulb
rcrl
xchg
add
lret
inc
push
adc
add
sub
inc
mov
insl
sub
mulb
mov
xchg
insb
daa
mov
loope
test
jnp
mov
jge
hlt
xchg
cmpsl
lret
sbb
inc
rcrb
cmp
lcall
ret
and
jns
sbb
shlb
popa
ss
in
enter
push
xchg
xchg
jmp
push
stos
lock
scas
mov
popa
cmp
ficoml
lret
sub
inc
pop
ss
mov
out
popw
or
jp
cmp
or
test
lret
sbb
fcomip
lret
imul
test
mov
push
stos
mov
push
into
add
les
add
xchg
pusha
mov
xlat
or
imulb
rcr
jo
mov
mov
jg
adc
mov
fst
aaa
or
test
shrl
aaa
add
jg
sub
je
jmp
cmp
lret
jo
stc
fs
cmp
ret
mov
icebp
mov
cmp
mov
subb
arpl
push
addr16
movsl
fstpt
aad
push
or
cwtl
sub
sahf
sbb
ret
out
fwait
cmp
loop
fldl
icebp
les
insb
lret
pop
int3
mov
xchg
div
mov
push
jb
or
lcall
xor
nop
xchg
add
ret
jmp
add
inc
jle,pt
hlt
push
xchg
sbb
push
stos
adc
cmp
pop
jo
flds
jbe
jae
sub
sub
cmpb
pop
inc
lods
lret
out
iret
cmp
test
and
sub
or
push
adc
inc
outsb
push
sahf
and
gs
dec
lock
subb
ffree
sbb
pop
adc
lahf
dec
mov
jle
push
mov
pop
mov
lea
es
std
push
lds
adc
movsb
dec
cwtl
inc
scas
xchg
dec
cmp
int
sbb
sbb
cs
scas
insb
inc
insb
hlt
sbb
or
xchg
ljmp
lret
leave
es
iret
cmc
jl
rcll
outsb
fwait
js
in
mov
out
cmp
out
dec
mov
pop
popf
mov
lcall
test
ja
adc
repnz
cmpsb
daa
lds
xchg
lret
cwtl
push
ret
lds
fsts
xchg
jae
lret
imul
pop
add
out
push
lods
jbe
scas
cmp
sub
dec
lea
xchg
ret
mov
and
or
mov
inc
push
stos
adc
cwtl
jmp
std
int
mov
add
repz
cltd
mov
out
inc
out
or
jp
test
fincstp
lahf
push
mov
insl
jne
lcall
lcall
push
out
inc
leave
lcall
js
pop
inc
or
adc
jns
and
test
nop
inc
push
sti
jnp
and
aaa
jne
adc
jge
mov
cmp
jns
fcmovnu
out
jb
shll
xchg
ja
in
cmp
ja
icebp
mov
insb
mov
pusha
fsts
ljmp
xchg
or
mov
xchg
int
into
aad
fwait
mov
dec
lahf
lods
and
movsb
push
out
cmp
or
ret
ret
cwtl
ja
jne
fldenv
and
xchg
mov
push
sub
jno
xor
sub
scas
clc
icebp
and
pop
sub
jo
jge
sub
sub
push
sbb
or
dec
mov
xchg
cli
xor
and
sbb
fsubrs
in
ljmp
push
inc
xchg
cmc
adc
movsb
sbb
or
xor
mov
adc
xor
shl
or
or
xor
sar
stos
cmp
mov
out
icebp
fwait
adc
and
out
or
ret
push
fists
popa
dec
enter
mov
add
adc
fbstp
loopne
std
push
in
les
inc
cmc
mov
scas
inc
fistpl
in
rcrl
and
out
pop
lock
mov
mov
cmp
or
jne
aam
in
xor
cld
sbb
push
std
mov
popa
or
pop
cli
lods
lds
adc
push
clc
fsubs
adc
mov
dec
jbe
jo
jmp
jo
inc
push
pop
mov
mov
jl
js
movsl
incl
cmp
test
std
and
subb
inc
ret
xchg
and
push
push
push
fmull
inc
dec
aaa
pop
movsb
stos
mov
sahf
test
xor
mov
sub
in
pushf
rclb
xor
je
lock
pop
movl
mov
or
mov
outsb
mov
repnz
dec
shl
jle
jo
push
cld
jmp
sbb
jbe
fwait
test
mov
in
lea
jne
cmpsl
sub
pop
or
or
imul
call
stos
mov
fsubrs
repnz
sub
mov
arpl
fdivrl
sbb
lret
jg
loope
repnz
lock
pop
jg
pushf
push
insb
mov
lahf
shlb
pop
lret
jns
xchg
sti
mov
mul
pop
inc
loopne
sbb
sub
std
cli
push
fstps
and
mov
std
add
push
js
out
mov
mov
cmp
add
mov
sub
adc
mov
mov
xchg
mov
cmpsb
lret
incl
xor
mov
adc
ljmp
lds
dec
mov
lods
or
xchg
push
cmpl
cli
mov
dec
mov
mov
ljmp
out
cmp
sete
in
add
push
rcrb
pop
mov
sarb
leave
cmc
jns
popf
cli
testl
jl
sub
and
int
xor
fcoml
stos
ret
in
outsl
adc
sbb
fdivl
popa
adc
into
mov
mov
sbb
mov
fwait
rcrl
add
in
ja
sbb
movsb
lock
gs
scas
dec
mov
xorb
imul
pop
xor
sbb
dec
jl
push
mov
aam
data16
or
adc
add
push
leave
lret
insl
data16
mov
sbbl
fstps
sub
inc
loope
ret
sbbl
jns
and
jp
out
pop
jecxz
mov
in
inc
push
nop
add
xor
scas
xor
sub
arpl
sub
push
mov
inc
lahf
scas
iret
mov
clc
rcll
sbb
jl
push
lahf
jmp
or
adc
insb
test
xchg
or
out
xorb
das
mov
js
mov
adc
fxch
ljmp
push
push
mov
repnz
jnp
nop
xchg
pop
cli
sub
je
iret
mov
xor
cmp
jmp
dec
and
data16
inc
push
sbb
push
jmp
fadd
mov
sarb
fsubrs
inc
inc
lods
xchg
sahf
shl
int
sub
out
pop
je
call
jp
push
push
mov
push
jg
mov
je
sbb
push
add
mov
pop
out
stc
je
movsl
and
jnp
fwait
dec
std
ljmp
cmp
xor
rclb
adc
mov
cmpsb
cltd
jle
xor
rcll
sbb
or
fists
andb
repnz
sbb
inc
jno
push
jle
test
in
push
mov
dec
sbb
sarl
sbb
fdivl
loope
add
fldenv
aam
lea
insb
mov
dec
imul
lret
sar
and
mov
jl
lods
ficomps
or
xor
and
mov
push
add
je
cmp
and
push
jns
jbe
outsb
rclb
lret
inc
jno
dec
pop
push
and
stos
imul
push
mov
nop
xor
sbb
mov
pop
pushf
add
and
xor
shlb
adc
cs
push
dec
jae
fildll
out
insl
pop
fidivrl
mov
fstps
insl
aas
cmpsl
in
jecxz
sub
imulb
pop
add
mov
out
insb
imul
sti
dec
xchg
int
dec
lret
dec
inc
and
pop
mov
loope
mov
xlat
push
sbb
insb
ret
clc
subl
mov
bound
mov
jmp
adc
jb
test
inc
rorb
sbb
lahf
ljmp
jno
or
pop
cmpsb
dec
push
pop
cmpl
mov
inc
mov
test
loopne
xchg
adc
stos
int
setl
xchg
cmpl
push
lock
pop
cmp
enter
mov
sbb
aad
mov
mov
movsl
mov
mov
or
cmp
sbb
hlt
or
pusha
cmp
or
adc
and
aad
or
pop
in
push
sbb
push
test
pushf
sti
push
gs
sbb
jnp
and
jo
xor
rcl
jno
mov
daa
idiv
push
lret
sbb
mov
mov
fs
insb
out
aas
fbld
mov
mov
js
add
ud0
and
and
cltd
xor
je
in
aaa
stos
sbb
mov
imul
sahf
mov
jl
xlat
aad
mov
rol
xchg
lods
jb
insl
test
ljmp
inc
mov
push
and
lcall
mulb
arpl
icebp
je
sbbl
sbb
xchg
test
dec
in
aam
inc
adc
jecxz
and
mov
shl
cmp
std
fwait
and
fwait
int
ljmp
xchg
rorl
mov
movsl
test
inc
cmpb
mov
xchg
ss
std
mov
jae
push
dec
in
dec
das
jbe
and
adc
mov
sbb
test
cmpl
adc
stos
mov
mov
icebp
and
inc
push
cwtl
and
cmpsl
mov
push
insl
mov
push
shl
inc
mov
sub
pop
adc
ja
out
add
ds
fldcw
mov
enter
subl
popa
inc
dec
test
add
xchg
xchg
cmp
push
sbb
out
mov
into
ror
sub
pop
mov
push
jnp
mov
test
push
fcmovbe
in
lock
ret
mov
rorl
decb
pop
cmc
adcb
outsb
mov
call
inc
sti
in
es
in
push
dec
cmp
into
mov
das
mov
shr
fidivs
and
pop
out
and
xchg
lods
cmp
outsl
push
sahf
das
push
cmp
jbe
outsb
adc
inc
out
mov
pop
fcmovbe
loopne
pop
adc
inc
mov
cmpsl
mov
cld
add
data16
fwait
adcb
pop
xchg
outsl
fnsave
jns
mov
hlt
mov
movsl
test
lods
dec
cmp
out
fsub
cld
dec
jnp
js
test
and
lret
xor
in
jo
sbbl
jae
pop
sub
push
jle
xchg
push
lcall
push
fdivp
cmp
fnstsw
mov
inc
icebp
fucomp
sbb
gs
cmp
clc
daa
sti
mov
mov
add
xor
out
lret
sar
and
xchg
inc
hlt
hlt
mov
das
lret
inc
sahf
dec
lcall
shrb
xor
adc
sub
xchg
xor
xchg
lods
popf
push
dec
sahf
daa
mov
cmpsb
int3
je
ja
scas
adc
sub
jmp
xchg
add
leave
mov
lock
loop
xchg
stos
pop
cwtl
add
nop
or
xor
lods
adc
sbb
js
xlat
lods
repnz
pop
sub
mov
xor
and
ret
in
push
cmpl
xor
sub
xor
lds
pushf
mov
ret
xor
fwait
push
cli
pop
lods
xor
pushf
mov
sbb
inc
sub
sbb
sbb
lods
xchg
pusha
pop
das
cmp
jnp
imul
mov
inc
outsb
mov
mov
int3
sti
jbe
dec
dec
add
xchg
sbbb
pop
or
insb
xor
adc
lcall
push
fmul
repnz
lret
push
sbb
rol
popf
mov
aas
loop
add
jl
xor
leave
hlt
loop
push
sti
dec
std
inc
pop
ljmp
movsb
mov
lock
jl
xchg
inc
insb
rcrl
jp
out
fs
dec
out
push
push
int3
mov
pop
call
fcomps
ss
pop
into
out
xor
or
sub
lret
div
rcrb
xchg
repz
push
jnp
test
xor
stc
push
inc
sbb
test
insb
mov
jo
and
adc
mov
in
mov
leave
les
bound
jb
add
xlat
out
sbb
into
jp
fldenv
push
cmp
adc
subb
cli
stos
xor
jle
jbe
icebp
and
ljmp
inc
jmpw
into
imul
cmp
lds
jae
push
push
jns
call
xchg
mov
add
xor
jb
lods
stos
nop
push
mov
ret
fistps
outsb
stos
lock
lods
nop
clc
dec
rcl
imul
mov
fsubrs
es
cmp
mov
jb
mov
adc
cmp
adc
stc
adc
pop
cmp
pusha
popa
ds
pop
jecxz
fs
jae
mov
or
dec
or
and
pop
xlat
icebp
cmp
popf
repz
and
mov
popa
or
push
jo
nop
lds
dec
jns
dec
loop
or
lods
mov
add
dec
ja
roll
adc
inc
mov
sub
pop
xchg
and
sbb
jl
js
aad
push
xchg
mov
push
or
popa
stc
adc
out
push
mov
xor
jno
and
repz
jg
xchg
inc
es
sub
mov
jbe
and
outsl
or
test
lcall
cmp
mov
push
inc
es
mov
jge
arpl
mov
hlt
pushf
out
and
jo
les
int3
sub
sarb
sub
fdivr
rol
sbb
push
adc
sub
or
addb
mov
or
pop
jb
xchg
mov
flds
adc
shl
push
mov
lods
movsl
je
mov
call
stos
fcom
aaa
je
shl
add
fisubrl
pop
icebp
push
mov
subl
ret
leave
fsub
leave
push
lods
subb
cmpl
jno
pop
notl
repz
popf
lods
lcall
mov
ds
or
shrl
adc
jecxz
xor
cwtl
cltd
or
lahf
test
call
jle
das
and
loope
inc
inc
mov
fisubrl
mov
pop
or
sbb
into
movsb
mov
xchg
pop
or
aaa
cltd
inc
push
sbb
mov
jbe
aad
push
cli
sub
or
movsb
mov
insb
jg
stc
fildll
or
sub
mov
or
push
pop
in
insb
dec
sbb
aad
mov
push
mov
popa
movsl
jl
in
jb
xchg
inc
xlat
mov
mov
mov
mov
cmp
fistps
clc
and
popf
stc
test
xchg
dec
xor
out
test
push
repz
cli
dec
leave
jg
adc
nop
es
je
cmova
jns
jne
cltd
dec
sarb
rcr
sub
shlb
xlat
push
stos
addr16
nop
pop
inc
popf
and
jle
push
repz
daa
add
lds
add
inc
adcl
fwait
mov
jns
xchg
subb
mov
push
pop
pushf
repnz
inc
test
jge
xlat
mov
cmpsb
orb
xor
xor
pop
in
hlt
jo
lea
adc
and
stc
aaa
sbb
fcmovb
fisttpl
pop
push
repnz
movsb
lcall
and
jecxz
dec
lods
and
out
mov
cmp
sub
popa
jg
out
subl
shl
pop
push
mov
movlps
xchg
int3
jne
enter
or
cmp
jno
idivl
icebp
cmp
hlt
insl
inc
pushf
xchg
push
int3
cmpsl
push
dec
imul
lods
bound
out
ret
pop
mov
xchg
jg
jmp
outsl
pop
movsb
xchg
xlat
dec
mov
arpl
call
cmp
fistl
sbb
lods
lret
lods
mov
mov
out
sbb
shlb
int3
shl
dec
mov
shlb
test
adc
rcll
cs
pop
pop
add
inc
int
mov
ja
push
cmpsb
leave
sub
jns
mov
inc
inc
jnp
mov
and
push
addb
ds
out
andb
shrb
cmpsb
outsl
out
sbb
xchg
fistps
lock
mov
stos
push
jg
loopne
scas
push
or
inc
int3
ret
xchg
sbb
inc
push
sub
push
or
xor
xchg
jbe
jae
dec
subl
subb
fs
cmp
or
cmp
jmp
dec
xchg
add
outsl
bound
mov
push
lods
xor
xor
adc
jg
ret
or
jge
aaa
push
adc
jbe
out
test
mov
ret
mov
repnz
lahf
add
ficomps
rolb
push
fadds
rolb
into
cld
mov
cmp
push
jp
add
inc
fdivl
xchg
cmp
and
push
pop
cs
lods
jmp
test
mov
dec
cmc
ds
fwait
out
hlt
popf
loop
adc
push
pop
insb
xor
dec
pop
jbe
ja
sub
lods
fldl
sub
xor
pop
adc
mov
and
mov
scas
jbe
xchg
xchg
mov
aad
xlat
mov
dec
je
int
push
negl
in
mov
jb
xchg
bound
sbb
and
or
adc
mov
aaa
sti
jnp
adc
sub
jnp
sub
test
xchg
stos
inc
ret
xchg
dec
mov
sbb
das
sahf
jg
sub
jno
popa
mov
mov
out
sub
fstpl
loope
cmp
aaa
jl
push
int3
popf
inc
xchg
push
xchg
loope
dec
fldcw
sbb
loop
sahf
xchg
mov
subl
sbb
mov
jns
lods
out
inc
mov
mov
nop
cmp
fwait
mov
jns
adc
fisubrl
push
movsb
aam
imulb
rorb
or
fdivrp
sub
in
pusha
jns
stos
in
dec
inc
xor
mov
inc
inc
pushf
scas
inc
jl
or
rclb
inc
int
mov
inc
jno
mov
lret
push
lock
inc
dec
cmp
aas
cmpsb
cwtl
lods
je
stos
add
out
pop
xchg
int
das
jp
and
test
cmp
lret
cmc
lds
mov
jmp
jecxz
in
cs
fldt
insb
cmp
pop
mov
imul
frstor
movsb
push
cli
out
pop
repz
or
and
and
movsb
hlt
pop
imul
push
movsb
dec
mov
psubusw
dec
push
clc
mov
jbe
ljmp
xor
mov
mov
cmpsb
push
add
and
ret
lret
lret
fbld
sub
jecxz
ja
xor
and
jge
push
into
shlb
inc
das
and
loope
xchg
xchg
je
cs
adc
cmp
lea
mov
mov
add
fdiv
or
mov
inc
scas
mov
sbb
adc
das
outsb
ret
pop
mov
inc
js,pn
cwtl
test
js
loopne
bound
push
ret
ds
sahf
lods
stos
and
loop
push
ss
fldcw
mov
inc
push
xchg
arpl
pop
aaa
ss
fsts
aas
fistl
jb
mov
arpl
cwtl
out
pop
cld
out
pop
xor
cmp
xchg
inc
push
sub
fdivrl
aas
push
sbb
js
test
inc
rol
daa
test
sbb
pushf
push
or
inc
mov
ja
jge
daa
test
cmc
mov
and
mov
ror
push
xchg
cmp
arpl
xchg
mov
cmp
jae
sbb
out
push
cwtl
test
aas
loope
and
insb
rolb
outsl
jge
and
lret
and
or
je
pop
xchg
add
jecxz
movsl
hlt
cmp
mov
rclb
mov
out
pop
arpl
gs
cli
cmpsb
jae
in
xchg
xchg
pushf
cld
out
inc
fnsave
fisubrs
pop
push
push
inc
hlt
lret
je
roll
ret
xchg
and
fnstenv
inc
push
jmp
mov
in
adc
mov
inc
insb
add
jecxz
mov
mov
jno
das
dec
movsb
sbb
pushf
jl
mov
mov
sar
mov
lock
jmp
rolb
psubw
sub
sub
add
sub
dec
push
add
pop
jb
mov
cmp
sbb
cs
push
mov
sarb
movsl
lea
xchg
cmp
clc
test
push
ret
imul
sub
push
mov
fs
xor
add
pop
dec
push
push
cmp
dec
adc
mov
jmp
scas
mov
call
fisubl
lods
movsl
cld
dec
divb
loope
lods
push
outsl
push
mov
out
push
mov
lds
mov
lret
stos
daa
leave
dec
popa
mov
int
cmp
mov
lods
mov
pop
repz
daa
rcr
in
sub
or
inc
fisubs
sub
xor
icebp
mov
pop
pop
cmp
jge
sbb
add
pop
inc
xlat
movl
push
dec
cmp
mov
dec
in
imul
mov
sbb
add
fidivs
mov
jmp
in
xor
push
jns
push
xchg
fstpt
cmc
lds
data16
sub
mov
fsubrp
rcr
xchg
pop
and
movd
jmp
aaa
sahf
jb
or
add
jecxz
test
fildll
decl
mov
mov
or
stos
outsb
xchg
sub
sub
sbb
inc
cmp
dec
xchg
mov
pushf
dec
ret
or
insl
dec
sub
push
adc
mov
or
xchg
ss
pop
nop
push
cmpsl
pop
adc
push
mov
push
cld
aad
dec
test
lcall
outsb
sbb
or
fidivrs
sldt
pushf
mov
aaa
mov
mov
jg
mov
das
dec
lahf
dec
test
outsb
inc
push
es
repz
pop
inc
cmc
aaa
popf
add
fsubrl
adc
inc
sbb
cmp
xchg
in
mov
jl
push
push
cmp
addl
mov
add
push
lock
adc
outsb
js
push
insb
out
jle
in
ret
jnp
pop
scas
or
inc
pop
jl
pop
push
das
sub
or
cmpsb
mov
test
xchg
out
sub
jne
ds
fsubrl
and
mov
js
add
dec
mov
outsl
andb
pop
sahf
rorb
test
mov
pusha
ljmp
mov
insb
es
out
jb
fsts
into
xorl
hlt
ja
aam
mov
push
aas
cmp
lret
jo
jmp
cmp
fucomp
mov
mov
enter
inc
cmp
mov
xlat
lock
mov
mov
mov
lods
dec
mov
outsb
cmp
push
pop
or
mov
jb
jns
ret
mov
sub
push
xor
add
jne
jae,pt
stos
in
dec
push
jo
shll
jmp
outsl
pop
jbe
lds
mov
push
pop
adc
add
cmpsl
jno
mov
mov
fistpl
dec
lret
ds
jb
loope
xchg
push
sub
mov
into
pop
sbb
lret
sahf
xor
ficoml
jmp
lcall
cmpsb
inc
mov
gs
jno
push
jne
pop
cmp
cmp
push
sbb
pop
das
and
into
mov
sub
cmpsl
repz
sub
sub
hlt
jnp
xor
fsubrl
call
mov
cmove
and
cmp
aad
mov
fmull
setno
lahf
std
push
sub
xchg
push
mov
lock
jnp
into
lret
cli
shr
sbb
and
loop
fldcw
and
add
fbld
icebp
pop
data16
and
popa
gs
rcll
dec
xlat
fsubrs
sbb
xor
rep
icebp
xchg
ss
or
xchg
adc
or
in
or
enter
push
inc
sub
pop
mov
ret
repz
and
mov
push
sbb
jne
addb
pop
cmp
popf
mov
stos
mov
mov
leave
push
xor
xor
sti
jl,pn
out
popa
fisubs
mov
mov
push
loope
mov
enter
jbe
inc
inc
pop
mov
inc
mov
cmp
out
push
cmpsb
mov
pop
daa
jl
loope
mov
pop
xchg
fbld
ljmp
jbe
mov
popa
sbb
mov
js
xchg
dec
dec
sar
test
mov
jg
dec
inc
sub
mov
mov
lock
inc
jae
mov
ljmp
das
pop
jo
cmc
add
daa
mov
jmp
aaa
jl
outsb
mov
cmpsb
add
xor
fldenv
push
loopne
lods
subl
loopne
mov
and
lods
rcrl
cltd
jecxz
and
add
fidivrs
les
mov
rcrb
mov
lahf
outsl
test
or
mov
cli
in
jg
xchg
jae
adc
mov
pushf
mov
jle
and
pushf
mov
dec
mov
imul
leave
pop
scas
fisttps
stos
mov
aad
insb
pop
mov
push
add
aas
scas
xor
iret
ficomps
cmpsl
pop
stos
xlat
xor
iret
or
xchg
adc
scas
fwait
xor
add
test
inc
mov
or
repz
pop
push
hlt
cltd
fstpl
ret
mov
xlat
mov
out
loop
dec
lret
mov
popf
faddp
fcoms
lods
movsl
call
adc
sbb
dec
push
mov
insl
jmp
fcomip
inc
test
adcl
in
adc
data16
testb
pop
and
pushl
xor
mov
add
jle
shrb
movsb
js
dec
orb
mov
mov
data16
xorl
lahf
hlt
xor
enter
and
sbb
push
xor
imul
add
jo
add
jp
push
out
cmp
adc
pusha
xchg
ror
push
sub
xlat
ljmp
int3
inc
icebp
mov
aam
int3
cltd
mov
push
mov
fnstcw
sub
lret
inc
fildl
xchg
pop
pop
jbe
rcrb
sbb
push
adc
adc
mov
add
mov
mov
fcoms
jnp
fwait
das
stos
jmp
daa
sub
aaa
or
ret
and
lods
add
aam
cltd
lods
pop
mov
movsl
arpl
les
cmpsl
lcall
mov
sbb
cmp
sbb
xchg
leave
popf
pop
sbb
rolb
inc
mov
pop
or
les
je
add
cli
jge
stos
jecxz
call
out
lock
ds
mov
sub
sub
mov
lret
aam
outsl
pop
or
shlb
cld
xchg
fnsave
xacquire
mov
nop
sbb
xor
shl
int3
cmp
leave
mov
lods
mov
es
addr16
mov
das
and
rorl
insb
aam
pop
es
sub
lcall
rolb
mov
stos
jnp
not
inc
addr16
loop
xchg
out
lcall
fstpl
enter
aam
int
and
fwait
xchg
or
xlat
mov
inc
dec
jl
rclb
out
sub
rorl
jmp
loopne
dec
adc
dec
xor
push
adc
pop
pop
xchg
bound
xchg
mov
cmp
sbb
mov
stos
add
rorl
fistpl
sbb
repnz
add
stos
cli
les
xor
dec
into
fcmovu
out
jg
adc
xor
aam
idivl
ss
xchg
test
into
lds
ffreep
pop
sti
sbbb
cmp
xchg
std
pop
insl
outsb
rorl
jnp
cmp
sarb
mov
and
jae
jge
xchg
cmc
push
or
sub
push
in
fsts
add
popa
mov
or
into
mov
lahf
adc
ror
or
addl
test
jbe
stc
loope
and
fsubs
and
or
fwait
orl
jb
push
cmp
mov
mov
jl
dec
rcrb
js
inc
push
mov
adcl
adc
call
and
hlt
cmp
repz
fdivr
adc
sub
shll
push
into
jns
inc
into
add
sub
sub
pop
and
push
add
movsb
xchg
adc
mov
gs
data16
push
add
mov
imul
adc
loopne
xchg
int
and
push
stos
addl
test
or
les
push
xchg
ret
repz
das
fidivrs
jne
and
dec
daa
mov
fld
shlb
adc
pop
and
mov
fistpl
cmp
sbb
mov
fdivrs
jo
add
mov
mov
push
repz
push
xchg
push
mov
js
test
insb
jmp
aaa
cmp
or
xchg
repz
pop
mov
les
cmpsb
jg
mov
inc
push
pop
fidivrl
pop
push
jle
xor
fistpll
sbb
xchg
cmp
dec
xchg
jo
out
xchg
dec
mov
lcall
scas
push
xor
adc
lods
mov
je
pop
sbb
lcall
arpl
out
mov
imul
mov
push
push
ja
in
scas
test
jl
mov
adc
or
jle
cmp
addr16
ja
js
aam
jns
xor
mov
mov
inc
cmp
or
test
sbb
loop
insb
je
adc
jle
rcrl
data16
movsb
inc
cs
ds
pop
aam
jo
dec
xchg
call
mov
mov
inc
sub
addl
cmc
jno
mov
rol
sub
movzwl
ficoms
leave
test
or
ss
and
inc
pop
push
das
mov
enter
rolb
jmp
lea
xor
add
add
add
lcall
dec
dec
push
cmp
pusha
add
sbb
cmpsb
fs
xrelease
outsl
sti
and
dec
or
xchg
out
data16
adc
jns
mov
fmuls
mov
mov
sbb
rcrl
sub
jnp
shrl
rorb
test
sub
outsl
cltd
ja
cmc
cmp
ds
or
pop
sub
jge
into
test
into
jo
fildl
sti
add
enter
inc
sbb
adc
mov
subb
jnp
std
es
fimuls
cmp
in
addl
sub
test
dec
in
rorl
cmp
dec
xor
push
stos
or
add
cmp
pop
aad
cmp
cmp
push
ret
jno
dec
out
pop
leave
xchg
daa
pop
or
dec
push
xor
mov
inc
pavgb
test
adc
mov
mov
dec
shll
mov
pop
popa
jbe
or
lahf
xchg
pop
dec
mov
sbb
fwait
andb
dec
xchg
jg
lret
addr16
push
dec
lret
repz
test
stos
jo
inc
sub
adc
std
cltd
and
test
mov
call
and
pop
loop
xchg
add
push
cs
ficompl
es
movb
add
testb
ss
push
add
pop
pushf
push
push
div
test
jnp
in
fdivrl
xor
mov
and
mov
sub
in
push
adc
or
mov
xchg
sub
in
in
xor
push
mov
mov
add
outsb
rcll
mov
xchg
outsl
repz
stc
cmp
mov
cmp
or
loopne
push
inc
xchg
or
repz
aaa
adc
adc
shll
sbb
int3
movsb
int3
adc
push
flds
xchg
clc
push
sti
insl
sahf
mov
out
adc
clc
dec
popa
and
dec
or
xor
out
outsl
inc
aaa
pop
mov
cmp
stos
pop
shll
sbb
cli
sub
orl
imul
xor
sbb
es
iret
leave
shlb
fcmovb
and
cli
push
shlw
or
cs
sbb
dec
icebp
inc
out
or
idivl
inc
push
jl
fsubp
clc
inc
popf
xchg
movsb
fwait
xchg
mov
js
lock
addr16
xchg
pusha
jb
sub
dec
jno
test
repz
jle
pop
call
jg
xchg
gs
testb
inc
sbb
xchg
xchg
pop
adc
icebp
rolb
mov
pop
pop
pop
sbb
fildll
jecxz
xor
int3
jp
push
xchg
jge
mov
lret
jge
mov
jp
pop
aad
xlat
jns
jp
je
sbb
fwait
jae
jmp
pop
xchg
xchg
sbb
js
fneni(8087
jmp
nop
cmpsb
xchg
pushf
or
mov
pop
pusha
inc
add
pop
shll
add
xorb
jae
push
mov
psllq
es
outsl
fsubrp
in
loopne
pusha
fldt
daa
pop
loop
lcall
int3
iret
lahf
or
shrb
mov
jno
mov
xor
pop
into
nop
lret
or
pop
cmp
mov
dec
fsubr
push
sub
mov
adc
loopne
sbb
inc
xchg
movsb
pop
test
sbb
scas
daa
lret
sub
int3
ret
in
inc
sbb
push
fcoml
xor
xor
push
mov
shll
cmc
cmp
testl
std
jle
jecxz
cwtl
mov
in
repz
cmp
test
mov
sub
xor
cmp
sub
insb
adc
push
or
inc
mov
aas
push
ret
cltd
xor
stos
and
xor
fsubs
out
pushf
add
inc
xchg
orb
pop
shrb
scas
cmp
mov
inc
jbe
sahf
ljmp
cltd
dec
in
adc
xchg
cs
push
out
shll
fisubl
inc
in
fists
push
pop
nop
dec
pop
jecxz
dec
cmp
scas
fs
cmp
sbb
cwtl
popa
xor
push
scas
cmp
stos
addr16
add
jmp
adcb
scas
adc
mov
cld
sti
mov
mov
mov
cmp
inc
lds
xchg
pop
rcrl
dec
cmp
aas
icebp
orb
jnp
out
push
sbb
data16
int
cmp
sbb
mov
test
sub
in
dec
dec
test
sbb
loop
subl
dec
mov
popf
roll
hlt
xor
lods
lcall
les
cmpl
notl
loope
xor
test
push
jne
xchg
push
cmp
inc
pop
and
fmull
test
sbb
lock
jp
xchg
hlt
fnstenv
popf
cmp
dec
daa
sub
fwait
test
shlb
jmp
lret
cltd
cld
dec
inc
aas
jno
jne
sub
aas
cltd
sbb
fs
sbb
aaa
pop
aad
inc
cmp
imul
ljmp
mov
fwait
aam
stc
jo
jecxz
insb
subb
push
loop
jge
inc
out
das
or
in
nop
sub
jns
fsts
jnp
push
mull
fs
xor
mov
jno
cmp
mov
jno
aad
adc
test
loop
inc
dec
and
mov
imul
in
test
push
xor
shl
inc
icebp
inc
or
adc
adc
imul
in
lahf
fcoms
add
fldenv
out
scas
stos
int3
add
dec
gs
push
daa
xor
icebp
lcall
add
mov
xor
mov
jp
push
cmp
scas
push
push
ja
xchg
xor
add
cmp
mov
cs
xchg
jns
lcall
xchg
aaa
movsl
bound
jmp
mov
add
push
movsl
nop
add
mov
cmp
push
adc
add
leave
fstl
cld
call
arpl
sbb
fildll
lds
loop
lahf
mov
leave
mov
pop
jecxz
cmp
mov
sbb
cmpsb
mov
mov
fnstenv
dec
cmp
inc
jp
cld
push
sarl
xor
idivb
das
lahf
inc
xlat
sub
testl
sub
jg
lock
cmpsl
fsubrp
cmp
jo
popa
fdivrp
sub
xchg
shlb
insb
rclb
xchg
lret
jnp
pop
sbb
xor
xchg
fstpt
adc
push
mov
xor
je
sub
jne
nop
in
fisubrl
xor
cmp
loop
mov
adc
call
add
add
in
daa
popf
lock
and
rcr
jb
cltd
aas
aaa
lahf
mov
enter
mov
or
pop
gs
pop
rcpps
dec
aam
and
and
cmpsb
sbb
leave
cmp
in
dec
ja
push
jge
sarb
push
loop
xor
imul
adc
add
add
icebp
popf
inc
xchg
arpl
call
xchg
jmp
inc
push
cmp
mov
fdivrl
mov
lock
pop
xchg
jl
lods
jbe
adc
sti
mov
sbb
fcomp
pop
xchg
push
repnz
aam
lds
insb
nop
pop
shlb
mov
sbb
cmp
nop
mov
jmp
aaa
sub
arpl
mov
movsb
ds
push
lea
jmp
or
cmpsl
mov
int3
addr16
xor
loopne
xchg
neg
mov
fcoms
push
mov
mov
cmpsl
fdivp
pusha
or
sahf
gs
mov
mov
aad
mov
addr16
jbe
rdpmc
pusha
inc
loope
or
mov
adc
mov
jg
scas
imul
adc
adc
mov
sbb
outsb
loop
daa
push
popf
hlt
insl
sbb
incl
aam
mov
adc
daa
xchg
mov
mov
pop
xor
pop
shrd
push
aas
int3
or
cmp
cld
test
fnsave
fbstp
loope
jle
in
or
xchg
inc
pop
fisttpl
divb
inc
mov
out
imul
pop
aam
pop
xchg
inc
and
stos
pop
sarl
arpl
fcoms
inc
add
jg
push
cmp
inc
xchg
out
nop
cmpsl
ud1
mov
inc
je
pop
push
fs
push
lods
cmc
adc
rorl
insb
sub
scas
add
xor
in
push
push
rcl
cmp
mov
push
lcall
dec
sarb
andl
ret
mov
fadds
jno
dec
mov
cmp
out
test
mov
adc
out
dec
sub
sbb
jno
imul
int3
mov
pop
shrb
pusha
fs
cld
push
hlt
adcl
cmp
mov
cli
icebp
fs
gs
inc
lret
fs
sbb
into
xchg
leave
pop
aas
dec
xor
daa
xor
mov
fwait
incl
and
inc
aam
insb
jmp
shr
clc
pushf
mov
sub
test
adcl
lds
inc
fsts
adc
insb
lock
imul
scas
mov
add
jle
cmpsb
push
scas
into
stc
dec
inc
repz
jle
sbb
cmp
scas
jae
sbb
mov
add
stc
mov
loop
xor
sub
mov
adc
pop
jo
outsl
lods
hlt
insb
cltd
fidivrs
jbe
pop
sahf
jl
in
lahf
inc
mov
das
call
mov
insl
mov
popa
fidivrl
arpl
sub
mov
mov
push
cmp
stos
lret
imul
sbb
dec
pop
sub
add
loope
xorl
push
insb
into
in
mov
xor
in
imulb
ljmp
scas
aad
inc
repnz
sahf
xchg
mov
adc
cmp
rorb
cmc
outsl
dec
jle
xchg
mov
loop
stc
mov
mov
or
shrb
in
push
inc
push
test
shll
add
or
aas
repnz
repz
lcall
les
repz
xchg
xchg
xchg
or
mov
add
dec
mov
xchg
push
pusha
movsl
xchg
test
dec
out
mov
in
fisubrl
or
into
fidivrl
mov
dec
jmp
gs
lock
dec
sub
sbb
inc
lcall
in
pushf
cld
sbb
xor
jle
jnp
adc
je
push
ret
xor
movsb
imul
cmp
mov
mov
fmul
test
lods
paddq
xchg
adc
adc
es
jle
subl
inc
push
xchg
loope
sbb
gs
pusha
inc
ljmp
mov
cs
cld
movsl
in
in
xor
ret
hlt
lret
jecxz
xchg
mov
mov
or
sbb
fldl
in
jb
mov
mov
stos
cmp
enter
jle
sbb
pusha
lret
jae
aas
scas
ds
cmpsl
std
ret
sbb
xor
mov
or
ret
xor
shll
push
add
xchg
sbb
mov
movq
mov
ja
jae
pop
inc
addr16
sub
xchg
adc
negb
pop
adc
lret
insb
sti
scas
fldl
pop
loopne
mov
add
mov
cltd
jno
jne
sar
in
jo
sbb
inc
dec
pop
push
and
adc
sbb
daa
insb
es
sti
cmpl
movsb
inc
aaa
dec
out
cmp
inc
jnp
add
sub
mov
jae
ds
sbb
insb
add
imul
int3
jb
xchg
in
mov
mov
pop
sub
and
and
add
pop
bound
mov
gs
out
fwait
mov
insb
imul
mov
sub
cmpsl
ret
and
mov
mov
popa
addr16
or
push
adc
or
or
mov
or
std
je
xor
mov
adc
js
bound
add
fdivr
or
and
bound
jp
inc
xchg
add
cs
sub
sub
jo
lret
idiv
cld
jns
and
ja
fidivs
sub
inc
cmpsb
movsb
test
loopne
arpl
nop
push
mov
leave
xor
add
add
jecxz
shl
in
jge
jmp
hlt
jmp
mov
fwait
xchg
xor
stos
xchg
lcall
xor
adc
mov
pop
jne
dec
ja
mov
test
sub
leave
mov
rcll
ret
loop
mov
cmp
cltd
dec
fwait
xor
inc
cmp
push
or
jns
outsl
pop
shl
leave
in
dec
cmp
mov
sub
xchg
stc
cmp
shlb
mov
mov
lods
and
sub
adc
dec
jb
xchg
mov
scas
call
lods
aaa
lret
std
push
in
pop
jg
xor
out
mov
ss
cld
mov
aas
jo
cs
aaa
inc
ret
mov
pop
mov
pop
notl
push
lods
sub
mov
push
out
dec
int3
stos
push
xchg
das
outsl
imul
push
push
loopne
js
daa
aaa
add
jae
sbb
adc
cmpsl
inc
iret
xor
xlat
out
outsb
push
push
cwtl
std
fnsave
lret
push
jge
stos
loope
jp
mov
cmpb
jnp
lret
fdivr
jno
cmpsb
enter
cmp
cmp
or
in
cmp
cli
gs
push
and
repnz
xor
rolb
lret
push
aam
pop
push
dec
test
jle
mov
mov
lock
mov
fimuls
xchg
leave
es
aam
sbb
push
scas
pop
sbb
mov
cld
cmpsl
pop
mov
cmp
jb
pop
xchg
fstps
and
dec
inc
test
insl
push
in
ds
fabs
insl
xor
xchg
jnp
andl
xor
fwait
cld
push
stos
int3
xchg
ror
rclb
push
cmpb
lahf
popf
test
xor
lock
or
les
ret
cmp
iret
in
push
test
inc
or
inc
dec
adc
out
jne
lcall
popf
push
aam
lods
inc
dec
lods
inc
in
mov
push
cwtl
arpl
push
ficoms
or
adc
or
and
sbb
mov
sbb
mov
lcall
ds
mov
filds
lock
mov
xchg
fst
mov
sarb
ds
jo
sbb
or
xchg
push
sbb
cld
mov
iret
jne
in
outsl
testb
hlt
adc
aas
push
and
jp
mov
pop
int3
aad
sub
or
push
lods
fcompl
aad
stos
mov
xchg
cli
loopne
add
movsl
inc
mov
jns
hlt
pop
jle
pop
arpl
stc
xlat
xlat
mov
jns
sub
sub
cmp
mov
into
icebp
aaa
insl
ljmp
subb
mov
push
xchg
pushf
push
jne
jecxz
mov
int
out
test
jmp
out
xor
lret
rclb
frstor
movsb
mov
cwtl
pop
jo
out
mov
or
je
xor
negl
lods
shll
mov
out
sbb
das
ficompl
sub
xchg
data16
add
fisttps
decb
add
add
xchg
push
xchg
mov
jo
pop
and
jo,pt
add
pop
jo
and
sub
dec
mov
push
xchg
sbb
push
fbstp
add
xchg
sbb
aaa
add
xchg
dec
mov
bound
sahf
bound
sub
stos
jb
mov
add
fucomi
xchg
push
and
and
hlt
push
or
dec
inc
hlt
popa
cwtl
repnz
push
lahf
iret
cmp
cltd
push
outsb
dec
pop
cmp
pop
out
inc
loop
sbb
int3
testb
mov
sub
inc
inc
and
push
push
sahf
adc
mov
cmpl
push
push
out
or
and
mov
add
fisubl
divl
daa
jb
into
pop
or
scas
add
leave
sub
fisttpl
loopne
mov
jl
jno
push
pop
aam
cmp
inc
xchg
mov
popf
insb
cld
or
dec
inc
or
ljmp
mov
push
stos
push
pop
xchg
add
insb
mov
mov
out
hlt
ja
jecxz
dec
push
in
cltd
xor
bound
xlat
lods
dec
mov
push
mov
push
shrd
lahf
mov
loope
jmp
hlt
adc
insb
movsb
jg
lcall
xor
mov
mov
testl
cmp
add
xor
add
pop
mov
aas
maxps
or
mov
xor
mov
push
adc
stos
ret
jecxz
lret
adc
inc
xchg
mov
stos
mov
add
roll
imul
testl
xchg
mov
lret
imul
stos
mov
add
dec
incl
adc
and
add
popa
ja
mov
push
rolb
cmp
icebp
int3
in
dec
rcrl
mov
xchg
js
cltd
les
lcall
jns
add
push
aad
popa
movsb
or
mov
psrlq
in
add
pushf
mov
popf
cli
stos
sti
mov
mov
and
test
out
jnp
dec
cld
jle
mov
dec
push
out
aas
outsb
shl
ficomps
cmpsb
fidivrs
mov
mov
adc
out
or
fsts
imul
stos
adc
es
xor
sbb
mov
mov
push
aam
xchg
int
iret
shrb
fiadds
inc
jno
inc
jno
push
daa
testb
dec
and
mov
mov
lods
aaa
dec
cmp
test
imul
clc
nop
in
push
popa
pusha
testl
fidivrs
addl
xor
adc
or
xchg
fisubl
inc
adc
gs
test
sub
xchg
xor
dec
jnp
loop
lds
test
pop
daa
mov
push
sbb
mov
pop
imul
shll
push
dec
lods
js
pop
mov
mov
jle
adcb
pop
pusha
xchg
dec
shl
or
pop
in
in
imul
pop
mov
imul
cmc
loop
call
iret
js
mov
push
mov
xor
fstps
or
mov
jmp
loopne
notb
iret
push
sub
xor
jmp
in
lret
push
mov
data16
sbb
fdiv
cmp
out
xchg
and
icebp
in
dec
mov
inc
dec
leave
or
cmp
jle
roll
jne
ja
jne
subb
jne
shll
ljmp
inc
ds
cld
cltd
int3
pop
mov
add
rcrb
pop
lods
mov
shll
push
mov
or
mov
int
stc
cmpsl
add
add
shll
mov
in
cmp
jb
or
xchg
cmc
mov
cmp
push
xchg
roll
lea
sbb
in
addr16
jecxz
xor
insb
sub
add
mov
pop
movsb
xchg
cmp
push
nop
aam
jmp
push
loopne
xchg
pop
pop
mov
mov
lods
stos
or
and
push
mov
mov
bound
aaa
xor
lea
mov
scas
or
mov
pop
fsqrt
mov
sar
ficoms
mov
cmpsl
iret
repnz
inc
sar
and
and
lods
movsb
fimuls
loop
sahf
xchg
in
jecxz
or
sub
test
shrl
mov
push
cwtl
stos
outsl
stc
dec
pop
mov
sub
push
push
pop
add
mov
fdivrs
xor
test
push
outsb
push
adc
lods
jmp
and
roll
inc
mov
das
filds
pop
sub
je
shlb
into
sarb
dec
xchg
je
std
and
pop
ss
pop
mov
cmp
inc
aaa
ficoml
mov
fcoml
push
fldcw
int3
ret
lods
push
aas
out
stc
jbe
jnp
bound
inc
pop
ffree
aaa
xchg
das
and
mov
in
movsb
test
mov
dec
xor
pop
mov
xchg
pop
xchg
ljmp
lods
or
sub
loop
mov
lock
dec
lret
jle
cltd
xchg
jae
shll
push
mov
in
dec
xlat
dec
xlat
xchg
dec
das
fistpl
std
push
outsb
fsubrl
rcrl
cltd
cmp
fstp
xchg
inc
movsb
in
mov
or
adc
adc
cmp
pop
inc
iret
icebp
jmp
shl
cmp
shll
xor
and
hlt
lods
pusha
jne
push
imul
int3
xor
mov
inc
sbb
nop
add
mov
das
xchg
fbld
or
fmul
gs
ljmp
sti
and
lods
lahf
arpl
sub
xchg
jmp
je
mov
sub
xor
leave
jnp
shlb
das
xorl
push
cs
roll
sti
jmp
loop
gs
mov
sbb
jo
cmpsb
in
fildl
sbb
stos
cmp
repnz
push
xchg
shrl
out
mov
push
imul
aaa
ss
fidivrs
faddl
cmp
xchg
shll
lret
pop
xor
xchg
mov
add
pop
sub
inc
mov
pop
fdivl
and
adcb
pop
les
imul
or
cmc
pushf
mov
pushf
push
inc
sub
out
sub
icebp
mov
fsts
fcomip
pop
dec
and
lar
cld
mov
call
cmp
stos
or
imull
mov
rorb
pop
xchg
lds
push
sub
sub
addr16
dec
sbb
in
pop
inc
lret
xchg
cmc
test
data16
movsl
dec
mov
or
sbb
fnstenv
xchg
jno
jmp
dec
adc
imul
pusha
in
pop
sbbl
jle
sub
or
pop
push
stc
lahf
sub
pop
jb
das
incb
leave
add
mov
push
mov
cmpsb
jmp
push
mov
clc
push
int
in
jg
push
sbb
stc
rcrl
pop
mov
xor
test
repz
iret
fildl
popf
jae
xchg
xlat
cmpsl
iret
mov
scas
mov
xor
mov
ret
fsubrp
add
pop
lods
shrb
outsl
dec
dec
dec
ss
outsb
mov
pusha
xchg
sub
int
and
mov
cli
imul
scas
ss
loop
dec
push
add
sub
cltd
adc
inc
lock
xchg
int
jmp
mov
dec
cs
jns
arpl
out
xor
mov
or
ret
push
jne
mov
and
fdivrl
jmp
pop
outsb
or
cld
in
incb
push
push
imul
or
inc
dec
fistpll
mov
xor
mov
icebp
out
fistl
filds
inc
imul
push
cs
out
push
dec
xor
ret
fldcw
and
push
imulb
xchg
jg
int
stos
js
lcall
fld
mov
mov
inc
mov
movsb
push
outsl
mov
cmp
cs
add
jge
add
subb
mov
and
xchg
jl
add
outsl
repnz
ja
inc
push
loop
hlt
cli
jg
dec
outsb
fistps
sbb
dec
pop
ljmp
fdivrl
test
sbb
and
push
sub
pop
cmp
repnz
pop
and
popf
fstl
lret
mov
mov
adc
sbb
xchg
mov
roll
mov
or
sbb
mov
sbb
jmp
push
pop
popf
mov
cmovge
mov
into
cmp
push
lret
hlt
xchg
xlat
data16
dec
push
jp
insb
mov
push
aaa
adc
test
fldcw
movsb
sarb
dec
sbb
es
sub
xor
gs
push
xorl
mov
cmovs
mov
scas
jne
seto
dec
pushf
in
pop
inc
ds
push
nop
fldl
fsubr
adc
or
xchg
lds
mov
mov
pop
sub
movsb
mov
test
xchg
dec
ss
cmp
and
mov
adc
xchg
mov
xchg
out
mov
push
push
fsts
out
sbb
clc
cmp
jns
pusha
pop
outsl
divl
mov
dec
ljmp
jbe
adc
fisttpl
jo
rcrl
mov
popa
and
adc
hlt
jb
mov
add
or
inc
or
in
mov
in
mov
scas
push
push
add
in
scas
out
push
sahf
mov
mov
pop
arpl
and
or
int
adc
insb
rorb
cmp
aad
imull
stc
pushf
fucomip
mov
push
mov
in
lret
ret
fisttpll
sub
xor
shl
int
aas
ds
shlb
dec
xor
es
mov
popf
sbb
out
sub
cmc
mov
popa
add
stos
jge
aaa
aam
lods
adc
push
aas
push
sub
imul
pop
icebp
out
pop
dec
add
cmp
mov
cmp
push
push
std
xchg
mov
int3
pop
add
pop
int
or
mov
in
test
jg
std
and
enter
dec
test
test
push
push
jno
sbb
add
cmpl
jno
add
inc
insb
push
scas
push
sti
jg
cmp
mov
dec
cmpsl
test
inc
fcom
out
out
or
es
je
arpl
fwait
mov
sbb
fdivs
pop
leave
sbb
pop
xchg
movsl
inc
inc
push
outsb
subl
inc
and
mov
mov
cmp
lcall
cmpsb
fmuls
push
dec
jmp
adc
adc
jbe
scas
int
ret
addr16
dec
pop
test
adcb
adc
aas
inc
loop
cmpsl
push
jb
jns
bound
lds
xorl
scas
fnstsw
sub
inc
or
fisttpl
fwait
ss
sbbl
divb
movsl
jmp
out
incb
les
repz
mov
mov
push
cmpl
and
mov
jbe
dec
jno
push
in
xor
jge
scas
lret
sahf
data16
lods
aas
push
dec
push
mov
lret
mov
into
add
jb
loop
ljmp
bnd
push
cmp
js
pop
inc
adc
pop
cmp
dec
add
dec
sbb
jo
jmp
lods
popl
xchg
jne
xchg
arpl
ljmp
and
arpl
cmp
repz
inc
jo
adc
iret
push
pop
rcll
dec
mov
ret
sub
sbb
jae
inc
insb
sbb
enter
popf
xchg
sub
imul
xchg
xor
mov
push
jb
notb
pop
pop
push
pop
pop
mov
jbe
fwait
imul
fcoms
repz
aaa
sbb
outsl
sbb
adc
dec
dec
das
push
cli
std
and
movsb
shlb
push
inc
dec
inc
aaa
cltd
ficomps
les
sub
pop
fidivrs
hlt
movsl
or
pusha
sub
daa
xlat
repnz
add
je
repnz
push
or
lock
js
test
sub
inc
push
adc
and
mov
xlat
outsb
xor
call
shll
inc
dec
gs
xor
fcomps
iret
push
nop
fnstsw
popf
cltd
cmp
adc
stos
adc
push
scas
mov
push
pushf
lahf
and
sub
icebp
scas
sarb
mov
xorb
mov
or
cmpsb
push
sarb
imul
xchg
jb
dec
jecxz
gs
cmp
jge
jns
lock
scas
jle
subl
sbb
cwtl
cmp
mov
gs
inc
int
lcall
dec
push
test
mov
adc
pop
cmp
dec
push
in
and
pop
pop
rcll
dec
pop
leave
xchg
es
mov
out
add
cld
fisubrl
mov
mov
jo
pop
mov
aam
mov
adc
push
push
nop
imulb
das
sub
xor
loope
nop
loopne
dec
aas
mov
dec
int
es
add
mov
cwtl
sub
cmove
xchg
or
sahf
inc
pop
les
xchg
xchg
int
mov
js
scas
or
push
or
imul
daa
jge
push
pop
das
lods
insl
imul
pop
movsl
lods
stos
cmp
or
scas
pop
scas
push
into
and
ja
sti
aam
cmp
pop
fcmovne
lods
das
imul
cwtl
mov
js
lods
repz
adc
fists
int
icebp
or
mov
pop
aaa
int
jle
pop
mov
dec
out
push
rcr
movsl
jae
push
lret
fs
gs
inc
push
push
jb
out
push
pop
js
adc
push
jns
adc
xchg
cmpb
sub
and
dec
xor
push
inc
inc
mov
std
or
dec
rcl
shll
xor
js
int3
xlat
xor
aad
mov
int3
inc
sbb
jne
cmp
addl
jg,pn
mov
dec
inc
dec
je
adc
lret
addr16
jl
outsb
mov
testl
push
mov
jno
pusha
int
hlt
jbe
cmp
adc
jmp
flds
nop
and
mov
and
mov
aas
and
stc
test
mov
or
call
std
int
add
js
insb
ds
push
loopne
fistps
and
pusha
cwtl
test
outsb
shll
inc
outsb
mov
inc
sub
push
cmc
mov
xchg
out
xchg
jge
loop
push
fidivl
andb
dec
ret
mov
mov
loopne
and
call
lock
inc
fldl
push
xor
dec
loope
ret
dec
push
dec
lret
jecxz
cmpsl
stos
cmp
push
sbb
lock
push
inc
pop
std
sub
or
add
fsubr
out
ret
sub
sub
sbb
sti
stos
imulb
xor
insb
call
loopne
lcall
syscall
sub
js
push
cmp
jg
cmpsl
mov
cmp
jge
shl
xchg
adc
fcoms
push
cmp
lcall
mov
enter
das
pusha
out
ret
cmp
cli
movsb
push
fists
dec
sub
jb
cwtl
adc
into
fadd
sub
mov
mov
sahf
pop
mov
ljmp
adc
cmpsl
loope
dec
out
xor
test
jmp
mov
test
stc
or
pushf
lcall
inc
xor
rcll
sub
mov
cmp
xorl
jo
fwait
or
inc
pop
pusha
insb
xchg
xchg
cld
mov
sub
mov
cli
jb
cmpsb
mov
ljmp
fisubl
leave
jl
adc
insb
dec
cli
not
xor
dec
or
jno
mov
or
mov
mov
mov
cwtl
imul
mov
jns
cmp
test
mov
mov
popf
push
mov
or
popa
inc
out
pop
sub
sahf
mov
mov
or
mov
add
pop
pusha
cmpsl
popf
sub
xchg
push
sub
test
xchg
call
xchg
xchg
stos
mov
ret
rorl
mov
out
fs
popa
cld
cmp
test
xchg
add
dec
xor
cmp
cmp
sub
arpl
int3
mov
mov
out
add
aad
add
xor
cli
outsb
cmp
xchg
rclb
inc
inc
push
les
out
cmp
fidivrl
idiv
mov
je
loop
jp
pusha
test
aad
int
pop
in
mov
mov
inc
das
mov
es
lds
repnz
push
fdivrs
push
stos
stos
lret
cld
movsb
inc
or
xchg
pop
jno
jae
ffreep
jmp
push
ret
mov
dec
fwait
jecxz
out
in
iret
sub
fsubrs
jbe
push
inc
sub
mov
loop
popa
fldt
push
push
or
jecxz
push
insl
lret
test
sbbl
std
lds
cmp
cltd
fbstp
push
lret
iret
lret
sti
mov
mov
cld
mov
scas
adc
xlat
out
or
add
sub
dec
add
inc
dec
fs
in
shll
lret
sub
hlt
stc
repz
push
lds
aad
data16
ret
sahf
xchg
or
xor
inc
add
adc
cltd
insb
cmp
movsb
fcoms
xchg
jl
sbb
cltd
in
xchg
sub
push
lcall
dec
cmpsb
mov
pusha
fsubrs
ret
mov
stos
clc
pop
jns
mov
mov
loop
mov
xchg
jbe
mov
aaa
and
xchg
push
adc
jge
mov
mov
insl
and
cmpb
cmpsb
mov
sbb
call
mov
insl
pop
and
rcl
jae
cld
das
mov
cltd
sbb
loope
je
lds
xor
dec
cmp
add
inc
fstps
lret
jmp
addb
lods
pop
pop
leave
add
icebp
ror
push
out
int3
mov
out
jecxz
and
movsb
and
lea
pop
push
out
dec
popa
mov
jg
sbb
movsb
mov
loop
pop
xor
call
sub
and
dec
movsb
sub
scas
mov
sbb
pop
test
repnz
xchg
rorb
cmc
std
xor
cltd
ficompl
or
mov
repnz
or
enter
adc
fs
ljmp
loope
ret
fnstsw
aam
mov
std
arpl
in
in
xlat
loope
rclb
lret
sbb
clc
mov
clc
mov
xchg
insl
subl
mov
push
lds
stos
inc
enter
int
push
push
or
dec
mov
mov
jle
xor
xchg
xchg
add
adcb
adc
aad
dec
mov
ret
push
mov
dec
jae
xor
xlat
dec
enter
sahf
rol
mov
loop
jb
xchg
in
cs
enter
xorl
cli
jae
mov
cli
add
fwait
in
lcall
jle
jl
clc
xchg
push
mov
outsb
repz
or
mov
lret
clc
rorb
push
sar
loop
cmp
shl
xlat
insb
test
jle
push
or
or
push
shll
sub
sar
sub
jle
orl
stc
add
add
mov
xor
ds
ds
int
cltd
sbb
cmp
ds
pop
cmp
lods
iret
movsb
out
stos
dec
aaa
sahf
mov
clc
les
lret
es
adc
pushl
jns
aas
dec
sub
push
addw
sahf
cmp
bsr
movsb
mov
icebp
inc
push
sti
mov
and
adc
jb
pop
adc
adc
out
cmpsb
pop
out
mov
mov
jg
stos
xor
ljmp
ret
xchg
adc
sbb
and
nop
dec
inc
and
jnp
mov
fnstenv
pop
orl
pushf
mov
shrb
divb
dec
sbb
jge
mov
mov
shrb
push
lods
popf
cs
bound
aad
inc
push
or
push
mov
pop
aaa
adcb
cwtl
push
cmp
incl
sti
push
mov
push
mov
fldenv
icebp
fdiv
imul
aaa
jge
fcomi
mov
shr
in
add
xor
xchg
adc
add
shr
loop
jl
push
int3
or
mov
inc
mov
cmp
push
shr
mov
lods
enter
ds
dec
jns
loop
jg
icebp
push
push
inc
mov
dec
imul
cld
imul
jo
sub
push
rcll
sbb
das
stos
push
and
cmc
lcall
mov
and
mov
js
iret
pusha
cwtl
sub
mov
inc
loopne
mov
cmc
aaa
pop
adc
sahf
mov
fidivl
add
test
lods
or
jbe
mov
cmpsl
inc
movsb
ljmp
xchg
mov
hlt
sbb
cld
ss
loope
movsb
fldl
aad
xor
in
sub
out
jmp
into
mov
sahf
cld
sbb
cmp
inc
aam
shlb
pop
or
fsubrs
fidivrs
pushf
lock
mov
ljmp
aam
movsb
cmp
xor
push
pop
cli
outsl
outsl
cmp
xchg
in
xchg
push
lds
jo
cwtl
or
sub
fnstcw
push
dec
or
arpl
pop
xchg
mov
leave
and
bswap
cmp
push
cwtl
xchg
pusha
xorl
add
dec
data16
cmp
pop
jno
cmc
repz
mov
dec
sub
imul
repz
ficoms
int
push
inc
aam
imul
data16
iret
pop
xchg
mov
stos
test
push
sbb
pushf
adc
fistpll
mov
pop
aas
movsl
and
jg
jecxz
mov
icebp
scas
out
sbb
rcrl
fidivl
gs
out
add
xor
and
or
js
sbb
int
call
sar
adc
add
insl
xor
sbb
outsl
fwait
sub
lods
stos
xchg
push
jae
add
jmp
and
in
out
cmp
test
jno
push
push
xlat
repz
jno
jge
repz
fcmovnb
jo
push
add
jecxz
in
popf
mov
dec
xor
sbb
cmp
jmp
push
xor
lahf
gs
iret
sbb
fiadds
sahf
dec
mov
sbb
and
xchg
lods
add
mov
inc
mov
push
xchg
add
inc
push
jl
mov
insb
mov
xor
xchg
inc
lahf
dec
mov
and
mov
in
mov
dec
sbb
jecxz
xchg
mov
inc
add
lock
pop
sbb
mov
dec
mov
aam
std
int
aas
hlt
stos
xor
addr16
out
pop
nop
lock
arpl
adcl
aad
leave
or
adc
adc
push
test
aad
enter
gs
mov
mov
in
pop
xchg
hlt
or
in
push
push
xchg
cmp
lea
repz
mov
inc
jg
and
sub
dec
pusha
push
inc
out
cs
scas
pop
push
sar
sti
dec
dec
mov
fwait
dec
xchg
mov
aam
mov
ror
mov
or
mov
hlt
push
adc
in
push
out
jno
inc
mov
and
repnz
aam
nop
pop
mov
jb
and
sub
mov
roll
incl
repz
and
das
ss
hlt
cmp
mov
or
xchg
imul
fs
mov
xor
push
inc
pop
mov
fwait
lods
cwtl
out
ret
in
das
mov
cmp
push
push
cmp
sti
decb
sub
inc
jg
dec
aas
gs
sbb
clc
jl
sub
push
pop
xchg
or
jne
outsb
repz
in
adc
lret
imul
mov
xchg
xor
lret
in
mov
adc
and
mov
mov
stc
mov
adc
mov
pusha
aad
xor
test
sahf
jg
xchg
and
inc
sbb
test
jbe
fcoms
out
push
lods
mov
ror
jb
cltd
xor
leave
sub
inc
push
decl
or
mov
jbe
push
inc
lahf
mov
insl
and
stos
or
sbb
mov
call
inc
sahf
mov
sub
sbb
out
adc
pop
aaa
push
mov
push
adc
and
andb
pop
inc
out
std
adc
pusha
in
ds
loop
int
aas
pushf
mov
ret
inc
fimuls
add
mov
and
mov
icebp
xor
ret
cmp
mov
xor
inc
push
xchg
inc
pusha
or
push
js
dec
mov
test
shll
fwait
ret
inc
test
jmp
sbb
fadd
popa
xor
and
add
xchg
lds
lea
sub
stos
std
mov
sbb
adc
xchg
xchg
jp
aas
add
fimuls
and
xchg
aad
mov
mov
lret
iret
aas
jns
sti
pop
imul
shl
push
test
jg
inc
mov
mov
pop
mov
lods
into
xchg
decb
jnp
push
sbb
jns
adc
dec
mov
aas
and
push
jns
sub
add
cmp
fidivrs
adc
ret
push
xchg
aaa
insl
lahf
in
mov
mov
testl
sbb
into
push
mov
xor
mov
ja,pt
xor
insl
cs
push
dec
cld
inc
sub
xor
lods
pop
add
sub
or
add
popf
dec
mov
fdivrs
and
mov
bswap
outsb
mov
jp
inc
cmp
xchg
mov
jbe
mov
add
cmpsb
ljmp
push
sub
fcomp
and
dec
outsl
movsl
movsl
in
cmp
cwtl
shl
add
cmc
pop
or
test
pop
or
shlb
js
inc
mov
decb
mov
xchg
repnz
dec
divb
fmul
lret
mov
lahf
pop
dec
stos
outsb
movsb
nop
xchg
or
sub
insb
stc
aaa
jbe
sub
shll
cmp
or
addr16
push
jge
mov
lret
popf
xlat
xchg
dec
mov
mov
push
lret
inc
pushf
sub
mov
lods
scas
sub
nop
push
push
jl
cmpsl
xchg
inc
gs
inc
pop
push
in
inc
add
out
in
enter
xchg
sbb
sub
hlt
sarl
push
in
mov
sbb
push
into
repz
sbb
neg
inc
movsl
adcl
nop
and
hlt
pop
mov
test
inc
push
mov
cli
fisubrl
sbb
pop
sti
testb
jle
sbb
xchg
icebp
and
pop
daa
push
or
lea
inc
scas
cmp
test
xchg
scas
jge
enter
loope
shlb
ficomps
addr16
adc
enter
cltd
dec
push
inc
sbb
addb
xor
jge
jnp
and
sub
out
ss
cs
mov
add
lock
cmc
jns
jp
xchg
loope
adc
outsl
jns
sarb
sub
cltd
mov
repz
mov
mov
in
xor
es
andl
mov
je
notl
lahf
outsw
insb
lret
sub
out
invlpga
xchg
scas
clc
jbe
ss
popa
es
pop
sub
xor
dec
test
mov
xchg
aaa
push
mov
sub
popf
mov
out
addr16
test
sub
xchg
loopne
imul
inc
xchg
jmp
xchg
shlb
rclb
jg
xor
cmp
cmp
out
rorb
jne
inc
cmp
xor
test
popa
pop
inc
popf
push
mov
pop
inc
imulb
jmp
imul
inc
inc
repnz
inc
pop
xchg
pop
xor
jns
xor
dec
in
adc
fidivrs
dec
rcll
ljmp
out
loopne
hlt
mov
inc
outsb
or
sub
adc
js
cltd
xor
pusha
or
std
add
xor
data16
in
sbb
sti
pop
test
insl
push
and
lock
loopne
test
dec
mov
jg
mov
push
xchg
das
clc
cmp
pop
aaa
mov
fistps
decl
in
shll
in
push
mov
popa
sub
cmp
mov
jmp
push
mov
sub
fdivs
cmp
add
pushf
sub
sub
cli
gs
iret
and
sub
in
cmp
ficoms
pop
jbe
xor
test
xor
push
inc
sub
cmp
callw
in
iret
inc
gs
aam
jo
insb
pop
ror
push
repz
fisttps
xor
jmp
shlb
inc
sub
sti
push
mov
pop
push
or
clc
inc
repz
out
aaa
addr16
mov
jp
enter
add
and
in
jbe
imul
loope
repnz
sbb
push
mov
jns
xchg
ret
ficomps
lahf
dec
push
inc
dec
mov
inc
in
dec
mov
cmpl
rcrb
inc
icebp
mov
aam
cmp
pop
dec
xlat
aas
fcoms
jle
aad
fnstenv
scas
adc
mov
orb
jb
sti
je
mov
and
flds
addl
push
popf
or
add
movsb
xchg
lods
xlat
mov
xlat
mov
xor
xchg
scas
sarb
mov
inc
mov
push
inc
mov
add
mov
movsb
xor
insl
and
sub
push
ljmp
test
insb
addl
aad
xor
sub
xchg
data16
inc
cmp
outsl
scas
movsl
inc
jge
hlt
add
fisubrl
mov
clc
sub
and
nop
loopne
fdivrs
mov
aaa
push
test
stc
shlb
pop
shl
xor
mov
pop
mov
push
call
popa
or
loopne
inc
mov
sub
add
insb
pop
loopne
cld
aam
or
adc
sub
push
lods
pusha
cmp
xchg
cmc
lods
dec
inc
push
incl
cmpsb
mov
fnstsw
and
xor
addl
sub
push
sti
lods
and
mov
std
cmp
xchg
xor
aas
push
sub
fistpll
mov
das
or
mov
in
loop
dec
out
arpl
mov
addr16
pushl
loope
cmp
in
mov
jle
movsb
gs
sub
rcr
jmp
or
int
mov
sbb
jne
mov
pop
sub
xchg
adc
mov
cmp
movsb
dec
lock
das
popf
inc
in
push
cs
cli
xor
cmp
cmp
push
divb
cmp
sbb
lods
push
aad
lahf
pop
push
sahf
popf
negb
dec
jle
in
sub
sbb
lcall
add
cmp
cmp
inc
fninit
sub
jo
in
ret
stos
pushf
les
mov
pop
dec
in
mov
push
jecxz
dec
mov
add
aad
pop
push
mov
push
jp
test
or
lret
and
into
in
and
insw
pop
lea
jmp
xor
imul
mov
outsb
lods
enter
add
pop
loope
sub
jno
jl
pop
add
or
lahf
ds
loope
call
sbb
adc
push
je
jbe
cmp
in
nop
repnz
ret
loope
pusha
push
push
in
sbbb
shrb
jl
cmp
inc
out
dec
int3
sub
dec
in
xchg
dec
in
push
inc
movsb
ja
cld
fcoml
stos
lds
mov
xchg
inc
mov
or
xchg
je
xor
add
push
push
push
and
ja
or
push
and
jmp
mov
fsubr
lret
dec
dec
ljmp
andb
rolb
mov
mov
sbb
mov
insb
scas
push
insb
leave
jb
loopne
std
clc
sub
sbb
xchg
popf
fwait
js
cld
mov
lods
test
xor
dec
sub
mov
and
push
iret
sub
jne
aam
sbb
andb
or
aas
sub
pop
sub
aam
test
cmp
or
sbb
jle
and
adcl
leave
fnstsw
push
sbb
and
and
pushf
cltd
push
outsb
in
xchg
ds
test
mov
out
fsts
hlt
fildll
fdivrs
psrad
xchg
fadds
packuswb
stc
setne
repz
insb
daa
push
mov
pusha
sarl
mov
clc
and
popa
xchg
repnz
int3
mov
enter
jae
iret
sub
scas
mov
sub
das
mov
xchg
sbb
or
out
out
pop
aam
jne
cmp
xchg
adc
roll
fwait
sbb
jle
mov
filds
scas
out
pop
faddp
arpl
outsb
lock
js
mov
mov
leave
cmp
int3
inc
and
xorb
mov
sub
pop
lcall
repz
sbb
in
xchg
rorb
into
cld
sub
push
cmp
or
scas
or
out
pop
sahf
int
dec
mov
cmp
mov
push
sbb
xor
mov
jl
lret
mov
lock
and
das
in
push
jmp
add
and
mov
adc
xor
inc
xchg
mov
xor
rcrl
int3
xorl
les
mov
test
mov
imul
rol
cmc
pop
push
mov
movsb
cmp
aad
mov
push
adc
out
rcl
push
add
sub
popf
adc
lock
push
xchg
or
aaa
push
xor
shlb
test
stc
mov
jg
scas
aaa
sbb
ss
cmp
and
dec
add
iret
xor
pop
jle
lods
and
ljmp
fwait
and
add
pop
aas
and
lcall
idivl
out
lds
scas
repnz
mov
jg
mov
jae
jmp
cmp
sbb
xchg
xchg
pop
sbb
inc
shlb
loopne
movsl
mov
add
xor
xor
popa
jge
fsubrs
mov
popf
arpl
mov
repz
jbe
repnz
jns
fdivr
fisubs
scas
pop
fnstcw
push
pop
lret
cltd
adc
cmp
cmp
jg
sbb
xchg
mov
call
xchg
xor
mov
dec
imul
xchg
push
stc
into
jg
mov
js
and
mov
sub
xchg
cmp
pop
fdivrs
inc
pop
loopne
cmp
mov
sbb
lret
cmp
sbbb
xlat
inc
adc
jmp
fwait
std
lahf
les
clc
in
mov
test
int
popa
inc
arpl
idiv
sub
jno
ret
sub
pop
fcmovbe
call
sub
sbb
jne
call
or
or
pop
sbb
sbb
push
mov
xchg
xlat
mov
scas
idiv
dec
bound
test
and
mov
lods
call
ljmp
mov
fdivr
or
and
mov
out
test
sbb
and
pop
stc
adc
loopne
jno
movsbl
mov
pushf
mov
add
pop
lods
in
jmp
and
push
dec
jns
sub
mov
out
and
dec
sub
jo
lret
mov
fwait
adc
xchg
mov
je
mov
mov
ret
pushf
out
popl
iret
dec
dec
cld
jle
adc
push
repnz
cmp
push
jbe
data16
inc
lds
mov
cmp
push
test
lods
xchg
clc
aaa
addb
mov
ds
mov
mov
cmp
stos
in
sub
mov
xchg
adc
loope
add
mov
loopne
mov
shrl
movsl
sbb
outsl
add
ss
sbb
sar
movsl
pop
xchg
and
icebp
loop
mov
rcrb
ja
enter
and
out
leave
inc
sbb
ljmp
lret
and
sub
popf
lods
fists
sub
out
stos
loop
pusha
repz
leave
movsl
addb
push
mov
xor
cmp
xor
std
cmpsl
jmp
test
pop
adcl
int
icebp
push
pop
cmp
bound
imul
sub
push
cmpsl
and
stos
xor
js
lods
mov
mov
mov
repnz
addr16
popa
push
sub
pop
inc
test
mov
fidivl
sub
pop
push
xchg
xor
arpl
mov
jge
push
stos
fisubs
enter
add
dec
cltd
iret
cmp
push
pop
inc
jecxz
pushf
push
jns
clc
pop
ret
pushf
cmp
loopne
mov
sbb
mov
cmp
sbb
in
inc
rcll
insb
sahf
cwtl
dec
mov
add
jge
ja
decb
fiadds
or
sub
dec
mov
mov
pop
adc
and
sti
imul
adc
dec
mov
jp
je
out
cld
addr16
jb
cmp
test
pushf
inc
cmp
int
sub
enter
popf
ja
clc
xor
mov
out
push
lea
aad
push
add
lcall
jbe
xchg
jg
sub
cmp
mov
xchg
mov
pop
sahf
cmp
mov
loopne
aam
sbb
fcmovu
mov
movsl
rolb
orl
pop
sbbl
jnp
and
jmp
sahf
imul
pop
push
or
mov
call
xchg
adc
push
add
insl
lods
loope
lock
sbb
pop
cli
fldenv
inc
lahf
loop
sbb
pop
cmp
xorl
scas
div
push
pop
rcll
adc
andb
ja
fwait
pusha
mov
push
in
pop
cmp
inc
and
mov
orl
push
lods
xor
dec
mov
push
cmp
push
xor
stc
icebp
out
and
lods
dec
xor
or
mov
mov
mov
jecxz
push
nop
outsb
stos
pop
loopne
jge
sub
arpl
adc
jae
mov
mull
xor
add
ja
and
fwait
jmp
cmp
pop
sti
stc
jecxz
jmp
push
dec
imul
shl
ss
sbb
pop
jl
shrb
xor
dec
cmp
jnp
clc
add
imul
icebp
cs
insb
outsl
add
inc
test
add
or
inc
sbb
pop
mov
xchg
sub
popf
out
cwtl
inc
jmp
mov
mov
xchg
daa
sub
jecxz
mov
sbb
cmp
repnz
lcall
xor
cmc
push
testl
push
jbe
lods
out
leave
dec
fstpt
bound
mov
loop
mov
jl
inc
sbb
repz
xor
jle
fiadds
imul
cmp
in
or
jb
fdivrp
add
mov
leave
mov
scas
sti
cmpsl
lds
adc
movsl
inc
mov
sahf
cmp
orb
mov
in
rorl
adc
shr
add
lds
cmpsb
scas
push
shlb
push
iret
in
mov
lret
pop
cmp
cs
mov
or
cmpsl
sub
sbb
fcomp
negl
mov
lds
int3
adc
jae
js
mov
movsb
js
jmp
std
dec
fists
add
pushf
add
shll
inc
dec
sub
pop
sbb
inc
fdivs
push
insb
mov
pop
cmp
adc
inc
sub
sarb
xor
add
jmp
and
int
iret
mov
ds
pop
xor
mov
push
jbe
rcrl
movsb
loope
in
insl
sbb
in
mov
shlb
inc
push
loope
jl
imul
idiv
ror
lret
ljmp
ret
adc
inc
fwait
push
push
stos
cmpsl
jb
popa
pop
clc
pop
nop
pop
lcall
outsb
mov
mov
lods
icebp
adc
test
mov
ret
test
lds
pop
jecxz
in
mov
insl
pop
mov
mov
ret
jp
mov
orb
sahf
add
push
les
sub
insl
stc
xchg
lcall
loope
push
out
mov
pop
lea
mov
cmp
das
subb
sub
imulb
jno
popf
scas
pop
xchg
cmp
mov
call
cmp
xor
ret
xchg
lret
jle
adc
or
cmc
push
das
add
ljmp
dec
fdivrp
jl
xchg
add
and
shrb
sub
loop
jg
ficoms
dec
jle
and
adc
aam
outsb
es
jbe
jnp
test
fimuls
cli
insl
fsin
mov
adc
ja
loopne
and
sarb
or
pop
loopne
adc
stos
mov
test
fistl
mov
adc
inc
jg
popf
push
das
jmp
out
lds
xor
jns
repnz
ret
enter
repz
popf
aad
cmpsb
out
add
pop
test
push
pop
sbb
pop
cli
filds
and
nop
fistl
sbb
and
addr16
je
mov
cmp
fstp
xchg
pop
mov
dec
cmc
xchg
mov
mov
mov
jmp
fsubl
mov
lret
push
mov
mov
ljmp
movsl
or
int3
cld
sub
jb
xchg
lret
push
movsb
xchg
call
arpl
std
test
dec
decl
je
push
sbb
adc
jl
and
jmp
repz
and
adcl
pop
imul
shlb
stos
cltd
stos
cmp
lret
mov
jnp
sbbl
push
push
xchg
in
and
sti
mov
cld
xlat
push
outsb
fidivrs
popf
sbb
aam
cmp
jns
push
add
test
mov
ljmp
mov
jmp
lret
scas
mov
ret
or
push
mov
mov
aam
out
leave
daa
or
rorb
inc
cmpsb
pop
outsl
mov
adc
mov
jg
fstpt
icebp
jnp
push
push
pop
js
ror
cmpsb
sbb
adc
nop
insl
hlt
out
xchg
jbe
jp
out
pop
xor
pop
mov
fdiv
ret
js
jns
js
data16
inc
in
dec
xchg
and
repz
and
mov
lods
fcmovb
pushf
pop
inc
inc
fwait
out
fwait
insb
ret
push
jo
sbbl
xor
jno
and
or
stos
pop
rcrl
aam
lds
add
jp
stos
es
movsl
je
and
jge
inc
imul
cmpsb
adc
fnstenv
sahf
es
repnz
xchg
loopne
aas
and
loopne
dec
adc
add
popa
clc
adc
shll
lcall
and
mov
adc
inc
lea
bound
add
lcall
sub
dec
adc
jno
push
xchg
cmp
insl
repz
ret
jmp
dec
data16
jne
out
loop
dec
jl
adc
loopne
xchg
in
fiaddl
shlb
inc
js
pushf
popf
pop
fwait
das
xchg
jbe
shlb
outsb
repnz
mov
leave
sub
jb
cmp
shl
out
in
cltd
out
jecxz
push
lret
jno
jae
repz
lds
push
mov
dec
inc
adc
repnz
add
adc
addl
ret
xor
add
pop
xchg
inc
or
insl
repnz
sbb
lock
push
sbb
mov
dec
jbe
loop
cmpsl
ja
mov
pop
aam
imul
sbbl
dec
jmp
in
ret
daa
das
dec
cltd
or
andb
push
mov
cwtl
xor
or
jmp
xor
push
mov
pushf
push
cmpsl
les
cmp
mov
mov
pop
popa
adc
cmp
xor
sbb
jne
imul
add
pop
jne
sub
imul
mov
lret
fildl
mov
movb
lock
pop
jns
mov
outsb
pop
icebp
sub
les
sti
pushf
mov
test
jl
add
inc
lahf
add
imul
pop
fistps
addr16
xchg
out
into
adc
mov
stc
sbb
cmp
sbb
cmpsl
fbstp
and
or
mov
inc
jno
scas
xchg
or
rsm
insb
sbb
mov
pop
dec
repz
mov
in
loopne
in
xor
sbb
sub
int3
arpl
jae
loop
pop
jmp
adc
inc
lods
jb
outsl
push
mov
jg
out
rcrl
adc
mov
sub
dec
orl
lahf
cs
push
repz
or
stos
mov
int3
jmp
sbb
ljmp
vminps
and
jp
sti
xchg
lcall
test
cmp
addr16
mov
fcmovb
dec
pop
push
dec
leave
xor
pop
test
mov
fiaddl
fnstenv
addr16
js
mov
lea
popf
or
cmp
leave
or
lock
lahf
into
aam
inc
xorb
das
push
jmp
daa
fistpll
sti
sahf
sbb
pop
add
popa
add
xchg
xor
testb
dec
ss
push
rcll
idiv
adcb
inc
mov
je
movsl
xchg
insb
xchg
pop
arpl
bound
add
out
sbb
xchg
or
cmp
adc
push
jg
add
xor
cmp
mov
mov
adc
ret
xchg
mov
ss
cld
xchg
jnp
pop
pusha
stc
ljmp
aam
bound
iret
pop
jns
scas
inc
sub
sbb
lret
hlt
pop
aas
inc
pop
data16
xor
lea
add
mov
mov
pusha
push
jle
les
mov
jae
mov
mov
xchg
sahf
aam
gs
pusha
iret
lds
daa
push
inc
mov
xor
xchg
test
or
xorb
scas
shll
fwait
pop
lret
xchg
pop
clc
and
cli
popf
sub
out
push
ds
mov
leave
dec
leave
cmpsb
mov
lret
in
adc
mov
sbb
xchg
mov
test
mov
call
das
ja
pop
inc
daa
xchg
sbb
push
addr16
sub
xchg
scas
scas
fsubrs
test
sub
mov
mov
cmp
aad
rcll
mov
dec
cmp
jge
repnz
mov
xor
in
jbe
pop
sbb
mov
and
lahf
popf
mov
jecxz
xchg
sub
jnp
push
xor
sub
ret
scas
dec
cmp
jbe
in
push
add
push
mov
inc
xor
sub
aaa
mov
add
aas
push
ljmp
xchg
fidivrs
fimuls
push
jge
xchg
push
insb
push
les
pop
mov
pop
jae
pop
xchg
adc
add
into
jmp
add
insb
add
dec
into
stc
movsb
fwait
dec
fdivs
dec
fwait
sti
inc
add
push
push
ljmp
fs
mov
mov
cmp
xlat
jae
push
xchg
sbb
mov
andl
or
bound
outsl
mov
fwait
idivl
or
push
inc
daa
sub
lret
or
push
or
cld
pop
adc
xchg
mov
fwait
sub
adc
pop
cs
test
test
loopne
dec
stos
push
repnz
ljmp
sbb
pusha
adc
mov
subl
fs
push
outsb
std
es
test
inc
add
add
jnp
data16
add
xor
pop
jmp
mov
test
je
hlt
icebp
mov
pop
dec
stos
xchg
test
sub
mov
and
dec
dec
jp
bnd
loop
add
scas
es
aam
adc
mov
add
ja
xor
push
push
and
adc
mov
gs
jnp
sti
mov
into
sbb
lods
inc
adc
pop
int3
mov
std
shll
test
scas
jb
push
push
xor
add
and
pop
bound
sub
or
fbstp
ret
or
pop
jno
mov
jecxz
sub
jns
and
aad
orl
int
mov
mov
lea
and
lret
scas
and
into
jae
rcl
mov
mov
mov
pusha
mov
pushf
movsb
ret
mov
sub
imull
dec
icebp
std
cltd
push
inc
out
addr16
fwait
subl
pop
mov
inc
inc
leave
icebp
sbb
cmp
aam
add
mov
lea
fcmovnu
arpl
lods
and
pop
dec
xlat
mov
shlb
inc
popf
pop
and
mov
data16
add
ljmp
sahf
stc
cld
add
sbb
mov
cli
push
ret
and
data16
adc
adc
pop
clc
nop
ljmp
cmc
sub
add
cmpsb
pop
outsl
add
aad
xor
leave
mov
into
in
adc
xchg
adc
mov
push
adc
sbb
stc
repz
lret
mov
or
rcll
push
lods
dec
sub
pop
into
les
dec
imul
insl
lret
or
inc
xchg
sti
push
ficoms
jp
adc
ja
loope
dec
mov
mov
push
clc
inc
rcrb
cmp
repz
jp
scas
and
fsubr
xchg
movsl
mov
jl
aam
andb
aad
sbb
inc
in
enter
imul
pop
imul
leave
jp
pop
mov
out
sbb
push
cmpsb
jne
imul
movsl
push
dec
inc
xor
jl
dec
xchg
bound
cld
inc
test
lds
mov
pop
xor
rclb
leave
adc
add
pop
lods
ret
rclb
jp
xchg
sub
dec
or
pop
jge
sbb
gs
push
enter
mov
jbe
mov
loopne
sub
push
lret
lock
mov
dec
mov
sbb
fadd
push
or
push
or
rolb
or
insl
mov
stc
adc
xchg
adc
sbb
inc
inc
mov
out
xorb
or
xchg
xor
xchg
xchg
dec
cmpsb
daa
add
leave
fcompl
push
cmp
ret
iret
leave
cmp
jp
fdivl
out
lds
cltd
stos
jne
lock
and
push
nop
mov
inc
cwtl
pop
lret
jmp
aad
out
inc
fs
ljmp
rcr
daa
je
div
cmpsl
push
push
xchg
cmpsl
xchg
sbb
cmp
xor
popa
xlat
nop
shlb
mov
out
pop
push
jg
nop
mov
clc
ret
outsl
mov
pop
rcrb
jl
jae
rcrb
mov
sbb
push
notb
aaa
jg
fiadds
mov
sbb
mov
sbb
outsl
mov
call
push
ljmp
dec
idiv
sti
mov
jecxz
dec
push
mov
sbbb
enter
and
jge
sbb
or
ja
push
push
mov
rcll
xchg
inc
addl
jbe
sbb
mov
and
jbe
lret
push
xchg
push
daa
loope
bound
test
into
jecxz
xor
cmpsb
xchg
cmp
in
lods
mov
pushf
and
adc
sub
and
jle
cltd
mov
push
out
cmpsl
add
cmp
sub
bound
mov
cmp
sub
push
les
mulb
mov
push
cmp
iret
daa
arpl
sarb
cmpb
inc
mov
mov
mov
and
js
mov
js
push
mov
jmp
cltd
pop
xor
xchg
dec
mov
or
pop
inc
scas
mov
xor
xchg
jmp
test
or
xchg
push
or
in
pushf
jmp
mov
ds
pop
mov
cmc
nop
in
inc
sahf
fildl
mov
dec
push
mov
sub
sbb
or
daa
and
and
mov
cmp
cmpsl
ret
rol
je
cmp
mov
mov
cmpsb
out
or
ret
ret
jae
dec
in
addr16
fwait
xorl
inc
or
insl
adc
cmpsl
pop
int3
jge
aam
jns
adcb
ret
out
test
popl
pop
sub
shl
aaa
xor
out
in
pop
and
jns
test
xchg
insb
push
xor
add
push
and
xor
pushf
xchg
ja
test
pusha
cmpsl
imul
jae
out
xchg
mov
mov
fistpl
push
dec
pop
jg
pop
mov
add
sub
sbb
push
icebp
mov
test
dec
mov
imul
mov
sbb
cld
xor
arpl
mov
nop
cli
mov
jno
mov
add
mov
rolb
cmp
sub
ret
fcmove
pop
push
jb
mov
dec
hlt
xor
push
adc
int
movsb
psubw
cmpsl
inc
mov
ud1
inc
cmp
jnp
or
push
add
and
int3
jbe
sub
pop
sti
push
cli
cmp
cmc
push
mov
and
xchg
popf
lret
inc
mov
lret
rcll
or
pop
jp
fwait
add
dec
movsb
inc
pop
punpckhwd
addr16
ror
and
or
lahf
pop
mov
ja
adc
out
xchg
pinsrw
mov
pop
adc
inc
roll
scas
mov
push
cmpsl
test
scas
icebp
inc
mov
cmc
fidivrl
mov
mov
sar
xor
inc
mov
adc
xchg
or
mov
jno
ljmp
adc
fsubs
adc
push
adc
inc
mov
sub
push
dec
and
sti
xor
fistpll
bound
mov
aad
sbb
js
jg
pop
lds
call
xchg
fbstp
push
pop
inc
lahf
adc
jle
into
shlb
mov
mov
mov
jno
je
sti
fdiv
mov
jnp
push
std
jae
lds
mov
mov
pop
ja
int3
arpl
or
icebp
pushf
gs
adc
lret
mov
ja
repnz
push
adc
adc
adc
stc
es
or
ja
push
cld
outsb
scas
enter
jae
and
orl
stos
and
hlt
ficoml
aam
sbb
pop
dec
lcall
push
sbb
xlat
testb
jo
dec
imul
cmp
cld
les
out
test
enter
dec
aas
mov
mov
rorl
addr16
lds
inc
outsb
fiaddl
pop
movsl
in
mov
cmc
mov
sub
pop
mov
xor
cs
popf
xor
fistpl
lods
outsl
jg
in
jbe
dec
xchg
jmp
cmp
outsl
add
jp
shr
adc
cmpsb
shll
imul
cmp
xchg
xchg
leave
push
je
mov
mov
or
adcb
xorb
cmp
fldl
movsb
mov
pop
lret
test
xchg
outsl
negl
sbb
int
adc
dec
js
push
adc
jae
cmpsl
lods
push
mov
jl,pn
orl
jo
cwtl
sbb
push
push
test
cmp
pop
adc
repz
cli
and
mov
mov
js
cmpsb
std
syscall
addr16
loope
ljmp
dec
arpl
in
mov
nop
dec
mov
sub
and
cmp
sub
sub
aam
mov
or
cmc
push
lret
jmp
dec
push
orb
fisubrs
fadd
fcmovbe
pop
movsl
mov
ja
in
scas
sti
es
ds
mov
daa
cld
cmp
add
xor
inc
add
mov
aas
filds
push
adc
adc
sti
stc
or
dec
iret
ja
or
pop
cmp
rep
inc
shll
push
hlt
xor
int
loope
es
stc
sub
lea
rorb
push
inc
out
push
ljmp
xor
mov
xor
pusha
mov
ret
pop
jbe
inc
stc
jbe
mov
pop
add
push
fisttpl
cmc
outsl
int3
inc
xor
movsb
cmp
adc
lods
outsb
mov
cmp
dec
dec
jno
scas
outsb
xchg
sub
xor
add
in
bound
andl
cmpsl
adc
mov
mov
push
insb
in
cmp
ret
dec
iret
cmpsl
or
cmp
notb
mov
scas
push
add
iret
inc
xchg
sub
jo
pop
lahf
pop
pop
aad
sti
push
sub
xchg
jg
stos
dec
gs
repnz
mov
pop
daa
fstpt
mov
xor
jb
pop
mov
hlt
stc
pushl
and
adc
lahf
mov
or
add
pop
adcb
mov
jl
dec
cmpsl
inc
pop
lds
jg
pop
adcb
push
les
jne
push
cld
pop
add
out
addr16
cs
dec
pushl
int
or
shll
fdivrl
pop
xchg
adc
dec
mov
lahf
cmp
sbb
int
fwait
incb
and
push
mov
dec
mov
fcmove
mov
pop
push
sbb
or
mov
jp
sub
mov
xchg
push
lret
je
inc
cmp
push
fs
mov
ds
lds
pop
cmp
pop
ljmp
clc
shll
loopne
lods
sbb
lcall
arpl
movsb
xchg
add
inc
cmp
or
mov
add
or
stc
add
jae
sbb
mov
scas
movsb
mov
sbb
icebp
and
pushw
pushf
aam
sub
xchg
mov
sub
into
mov
clc
dec
insb
jp
les
dec
or
outsl
addl
push
xlat
mov
pusha
and
dec
aam
ret
hlt
popf
scas
mov
testl
inc
les
adc
sbb
jns
fisttpl
ja
mov
mov
shlb
andl
test
sahf
push
cmp
daa
cwtl
std
mov
jb
adc
add
lock
test
cmp
imul
xor
arpl
mov
mov
mov
jno
pop
adcb
add
xchg
dec
je
mov
adc
int
pusha
test
pop
cmpsb
dec
ljmp
mov
aad
mov
push
push
jne
shr
inc
loop
cltd
push
jne
scas
and
fcmovnu
adc
daa
jo
es
test
enter
mov
cs
xchg
pop
imul
scas
pop
pop
in
sub
adcl
sub
fnstcw
hlt
xor
divb
movb
push
ret
cmp
lahf
mov
loopne
cli
es
roll
dec
je
mov
addr16
popf
in
iret
stos
pop
call
testb
mov
mov
jnp
sub
addr16
inc
ja
in
cmpsl
dec
int
add
jb
xchg
inc
hlt
adc
push
push
andb
dec
int
sub
pop
fcomip
ja
mov
ja
aas
lods
sub
rcrl
test
jg
xor
stc
sub
mov
cmpsb
adc
push
out
scas
roll
fstpt
push
inc
sub
sarl
dec
in
jp
xchg
inc
xor
fisttps
test
jno
push
pop
loopne
cli
cmpsb
ss
sbb
repnz
fdivl
popa
in
pop
in
fldl
push
jmp
test
inc
or
mov
clc
mov
xor
add
sub
or
inc
adc
aam
xchg
ret
pop
bound
rorl
and
and
or
xor
ljmp
pop
add
mov
and
nop
pusha
and
fldt
in
xchg
aad
and
cmp
ds
das
fistps
outsl
lret
cmc
inc
jmp
bound
fwait
dec
adc
aam
or
jns
mov
sarl
add
test
xchg
clc
icebp
cmp
leave
fdivr
pop
jns
pop
mov
in
lcall
repnz
dec
cs
mov
adc
xchg
and
mov
mov
adc
mov
inc
cmc
in
xchg
outsl
out
adc
xor
das
in
and
pop
imul
loope
adc
shlb
jmp
mov
sub
mov
in
mov
cmpsl
lcall
mov
fwait
lret
adcb
repz
aas
out
mov
lret
je
push
cmpsb
pop
clc
mov
sub
pop
pushf
stos
iret
mov
into
cs
enter
in
loope
cmp
cmpsl
push
sbb
subl
sahf
rclb
mov
push
icebp
dec
dec
cmc
lods
xor
daa
adc
icebp
xor
les
test
test
cmc
push
andl
pop
maskmovq
notl
pop
sub
testl
outsb
loopne
pop
pop
xchg
xor
xchg
roll
adc
cmpsl
loop
or
int3
xchg
cwtl
arpl
rorl
dec
pop
jecxz
loopne
imul
xlat
xor
jg
popa
fmul
scas
rol
mov
fidivrl
nop
and
mov
stos
lret
or
ja
addl
xor
jb
stos
xchg
mov
imul
imul
fld
int3
xchg
xor
push
fst
in
test
adc
adc
fucom
in
lock
out
pop
jle
xchg
xlat
ret
sub
mov
jno
adc
scas
fwait
adc
popa
ljmp
fisttpll
inc
lahf
xchg
mov
sbb
pop
mov
jmp
and
sub
jo
in
mov
dec
addb
data16
movsb
loop
dec
sbb
stos
add
ja
cmp
sbb
cmp
sti
pop
add
sbb
sub
adc
stc
lea
pop
or
or
ffreep
xor
dec
mov
and
in
lods
sub
jo
aam
sbbb
mov
mov
sub
in
pop
adc
lret
ss
cmpsl
adc
inc
mov
add
dec
fildll
les
xor
push
mov
inc
mov
test
lods
sub
and
mov
mov
cli
jl
xchg
sti
adc
add
mov
sub
jmp
mov
scas
int3
rorl
mov
xchg
addr16
call
es
mov
mov
push
adc
test
adc
rclb
jle
enter
in
idivb
dec
jmp
push
and
or
lret
in
add
xor
xchg
mov
mov
push
push
sahf
repnz
xor
push
jmp
xchg
xchg
pushf
dec
outsb
repz
xchg
ljmp
mov
icebp
push
jg
inc
enter
push
mov
cmp
mov
stc
out
mov
insb
rorb
sub
mov
shl
aam
outsw
xor
dec
mov
enter
incl
cli
add
cmp
fdivs
inc
insb
rorb
push
in
push
loopne
xor
or
adc
rolb
inc
fisttpll
leave
pushf
cld
test
mov
mov
or
lahf
sub
jno
decl
shll
sub
in
mov
shlb
sbb
adc
jo
dec
mov
jo
sbb
or
movb
test
in
xor
hlt
push
jmp
into
pop
mov
cmp
aaa
pop
mov
dec
cwtl
mov
mov
test
mov
or
sub
mov
lea
mov
negl
pop
add
rcll
and
stc
push
mov
push
cmpsl
loopne
jne
xchg
sahf
add
pop
or
mov
shll
dec
push
pop
xchg
mov
es
pop
popa
jns
pop
ss
push
push
add
add
test
inc
insb
jae
mov
cmpsl
aas
xor
pop
jae
jo
lahf
add
enter
dec
push
adc
adc
push
cs
arpl
cmp
in
scas
or
lea
jg
stc
lret
cmp
sbb
mov
mov
int
mov
mov
xchg
stos
jge
aad
iret
fistpl
and
push
mov
push
pop
sub
cwtl
push
insb
int3
nop
ret
push
data16
gs
xchg
dec
andb
pop
in
leave
push
movsb
dec
and
sbb
loopne
pop
pop
sub
call
sub
in
jae
fucomp
mull
repnz
loope
adc
movsb
cmpsb
imul
jecxz
leave
pushf
pop
fwait
pop
loope
adc
cmp
cs
pop
adc
mov
xchg
inc
imul
pop
in
pop
xor
or
outsl
rcr
jne
sub
cmc
popf
xchg
xor
scas
pop
sbb
add
out
add
sub
dec
adc
sbb
lahf
adcl
sub
outsl
mov
sbb
cmc
add
xchg
and
xchg
push
mov
aas
notl
jb
into
mov
adc
mov
cmp
dec
iret
or
mov
pop
es
cmc
adc
popa
insb
inc
mov
sbb
adc
lea
je
stos
inc
lods
xchg
and
sub
mov
mov
imul
cmp
negb
inc
and
lods
insl
xor
je
pop
xchg
sbb
mov
inc
std
sub
jbe
cld
xor
lods
inc
popf
fidivrl
pcmpeqb
popf
nop
call
popa
adc
dec
ljmp
scas
xor
push
or
jge
adc
mov
cmp
shr
dec
lock
pop
ljmp
lret
movl
add
push
popf
cld
mov
stc
pop
stos
das
in
push
add
dec
lcall
sub
imul
rolb
cmpsb
lret
jno
pop
mov
sub
movb
sub
push
pushaw
fimuls
pop
rcll
mov
movsb
xchg
mov
loope
jo
outsl
lods
jl
lods
pop
fcomps
roll
push
and
popf
push
fstl
es
sub
mov
je
int3
cmp
sbb
sbb
xchg
pushf
rorb
push
mov
xor
aas
in
pop
inc
stos
imul
mov
test
aaa
sub
adc
cmpsb
cwtl
and
call
lock
xchg
mov
icebp
fs
paddusb
cmpsl
sti
arpl
push
outsb
and
dec
punpckhdq
adc
rcl
aaa
xchg
stos
scas
sbb
mov
ljmp
cmp
lea
icebp
sbb
gs
shr
mov
jmp
insl
es
mov
or
lods
cmpsl
lret
aad
jg
loope
divb
fwait
or
xchg
ja
jnp
xchg
jnp
xchg
outsl
and
aas
test
gs
jge
mov
cmp
lea
or
out
cmpsl
lahf
pop
aad
add
bound
adc
aas
aam
je
mov
mov
imul
and
push
loopne
pop
mov
les
aaa
aaa
test
sti
xchg
sub
sbb
sbb
test
addb
fwait
or
es
or
mov
jg
and
scas
sub
adc
hlt
dec
cmp
ljmp
scas
cmp
adc
in
jae
dec
push
sub
pop
pop
push
jb
negb
sarb
push
mov
pusha
pop
and
jb
andb
push
add
and
jbe
pusha
mov
leave
fs
inc
adc
sbb
fmuls
add
cs
jle
or
out
inc
je
dec
in
dec
dec
cltd
mov
repnz
sbb
xchg
or
inc
outsb
jo
mov
lcall
bound
push
icebp
ja
xchg
mov
cmpsl
daa
jae
mov
cmc
sbbl
mov
sbb
pop
into
in
xor
popa
lret
divl
xchg
sbb
push
mov
or
jmp
pop
out
add
ss
je
add
xorl
sarl
push
cmc
xchg
data16
push
outsb
cmp
dec
fidivs
ja
dec
fbld
mov
test
push
cmpsl
xor
pxor
loop
adc
mov
loop
sub
adc
xchg
lods
cltd
push
mov
div
inc
pop
xor
ljmp
out
mov
repnz
hlt
push
sbb
loope
pop
jb
iret
sbbl
sbb
test
bound
cmpsb
or
xchg
cwtl
cs
sarl
or
xlat
cmp
xlat
inc
jecxz
mov
arpl
iret
push
add
loop
cmp
or
push
jmp
lret
or
fldl2e
daa
mov
cmp
and
sub
xlat
or
mov
push
clc
pop
mov
or
rcll
push
pop
sti
test
jg
push
mov
mov
std
shlb
in
sbb
sbb
ja
mov
addr16
sahf
call
mov
mov
paddw
jae
and
sub
or
in
mov
jnp
leave
inc
or
lea
mov
lret
daa
pop
mov
mov
xchg
sub
ret
push
lock
jns
stos
xchg
or
aad
xor
iret
les
jnp
cmc
imul
lcall
js
cs
bound
adc
adc
popf
xor
test
cmpsb
scas
stos
popa
popf
movsl
or
xchg
test
outsl
xchg
imul
inc
lret
xor
movsl
lock
aad
pop
mov
dec
adc
sbb
push
xor
pop
push
ss
adc
cs
repz
stos
sbb
daa
movsl
lret
sbb
rolb
in
daa
js
xor
inc
add
sub
loope
aad
loope
push
adc
iret
adc
fistpll
pop
pop
cwtl
and
cmp
jb
loope
cmpsl
sub
jmp
mov
sahf
push
add
jne
sbb
lods
sub
mov
mov
cmp
xor
loope
cld
incl
cld
xchg
xchg
fs
aas
repnz
xchg
outsb
push
addr16
ss
in
mov
mov
pop
xor
pusha
mov
cmpsl
call
sub
movsb
inc
lret
or
scas
orl
inc
mov
xorl
lds
sbb
sub
stc
sub
add
mov
imul
rcrl
sti
dec
dec
gs
mov
loopne
shrb
stos
arpl
dec
xchg
push
in
test
xor
xchg
pop
inc
push
pop
inc
jmp
add
xchg
jle
rcll
and
and
icebp
movsb
xchg
adc
cmp
lcall
mov
cld
ljmp
sub
xor
pop
mov
sarl
push
loop
jnp
pop
push
jae
aas
adc
jo
inc
jl
push
scas
add
inc
out
add
sahf
dec
pusha
stc
sub
mov
inc
inc
xor
aaa
xchg
sbb
insb
imul
mov
dec
ret
and
call
cli
les
test
and
shr
jae
mov
outsb
mov
lret
movsb
loopne
int
popf
sbb
adc
scas
mov
js
dec
sub
movsw
xor
nop
inc
divl
stos
bswap
mov
sub
maskmovq
divl
sbbl
inc
data16
add
aaa
pusha
stos
or
mov
xchg
cltd
cmp
lods
in
sub
cmpsb
xor
or
xchg
xchg
and
dec
aam
jns
cli
mov
lods
lret
adc
rclb
xor
daa
push
jo
lea
fs
repnz
cld
stos
cmp
loope
pop
icebp
inc
add
fstpl
shll
adc
sub
mov
sub
in
add
jge
pop
mov
testb
pusha
dec
js
xchg
pop
sbb
in
or
xchg
dec
push
jmp
adc
iret
aaa
push
inc
cmp
in
in
xchg
mov
sbb
xor
rorl
dec
aaa
adc
ja
push
out
iret
xchg
aaa
out
sbb
cmpsb
dec
stos
subl
mov
cmp
call
inc
mov
fwait
mov
cmp
paddusw
js
sub
sbb
push
shll
shlb
and
mov
xchg
iret
add
sbb
je
outsb
orl
loopne
cwtl
xor
lock
lcall
testb
inc
jl
sbb
adc
mov
sub
mov
inc
fcmovnb
repnz
sbb
mov
mov
cmp
xchg
aaa
lds
push
add
mov
xor
push
mov
pop
pop
les
mov
les
push
mov
ret
repz
pop
lret
je
add
cmp
or
aam
out
sub
mov
in
repnz
inc
insl
mov
pop
mov
or
or
xor
loop
xchg
addr16
out
push
sbb
fistl
sbb
mov
aas
insl
insl
fcmovnbe
cmpsb
jl
mov
cmp
push
jnp
fisubl
out
mov
xchg
mov
sbb
popf
test
mov
imul
enter
xchg
pop
mov
fsts
or
xchg
js
aaa
mov
push
aam
pop
rorl
jb
lds
adc
sbb
mov
cmp
daa
add
in
rcl
xor
ret
test
lds
pop
repz
subl
out
stc
xchg
cs
in
sti
jl
mov
imul
popf
into
push
call
cmp
jg
pusha
jbe
ret
dec
inc
es
gs
loop
imulb
dec
loope
iret
jg
fsubrs
lods
shll
xchg
fbstp
sub
repnz
loopne
pusha
pop
test
ret
fmuls
outsb
sub
and
int
out
or
notb
or
hlt
pushf
shll
movb
call
lods
out
or
add
sbb
or
lret
out
aam
or
and
push
sbb
and
or
ljmp
inc
out
loopne
sbb
std
sbb
call
mov
lea
dec
loopne
xchg
and
inc
jg
out
jns
and
je
les
pop
cmp
jne
movsb
sub
out
mov
xlat
mov
mov
pop
cmp
dec
dec
push
fidivs
lods
fs
aas
push
jo
addr16
mov
iret
adc
jae
stos
out
ljmp
add
fsubl
mov
mov
faddl
sbb
movsb
in
xchg
xor
push
push
add
cli
notl
and
jne
ret
dec
lds
in
stos
lahf
dec
pop
pop
pop
adc
mov
mov
jo
das
or
lock
icebp
or
or
dec
or
je
xchg
test
sub
fisttps
div
xor
sbb
jnp
mov
pop
mov
pop
fwait
push
insl
out
xchg
mov
mov
xchg
add
repnz
stos
add
mov
ficomps
mov
inc
adc
call
movsb
lret
inc
mov
mov
dec
xchg
mov
addr16
rcrl
aaa
stos
ljmp
testb
pop
ret
sub
ljmp
movsb
push
adc
pop
mov
and
jg
dec
add
je
ljmp
aaa
cld
jg
stc
xchg
dec
mov
add
scas
leave
sub
cld
adcb
stc
inc
mov
mov
repnz
adc
scas
add
adc
inc
mov
lahf
add
xor
pop
dec
jo
add
ljmp
and
push
int3
paddw
lds
es
jl
inc
push
shll
inc
push
mov
mov
stos
popf
shrb
pop
inc
arpl
xorl
cmp
fstpl
and
repnz
stos
jp
fwait
in
neg
jno
outsb
repnz
mov
out
lcall
or
rorb
inc
lret
pop
mov
pop
or
jp
repz
je
in
mov
fwait
test
stos
iret
mov
fnstsw
out
mov
inc
mov
sti
cwtl
xor
ss
stc
rcll
pop
pop
pushf
sti
fstps
jo
xor
das
out
fldl
in
scas
jecxz
fsubs
sub
stos
bound
stos
adc
xchg
je
xor
push
inc
pop
mov
inc
out
pusha
sbb
insb
add
and
mov
icebp
outsl
les
in
insb
mov
add
jecxz
dec
mov
rcrb
xchg
jnp
shrl
adc
sarb
roll
inc
inc
sub
int3
xchg
mov
aad
mov
ret
inc
inc
and
ljmp
pop
inc
cmp
ret
push
mov
add
jae
fsubl
xchg
sbb
push
cli
mov
inc
xor
addr16
cmpsl
aad
mov
repnz
aas
xlat
inc
jbe
je
adc
imul
pusha
ret
loopne
and
cmpsl
mov
flds
fnsave
sub
and
subl
add
jb
fs
out
repz
adc
sbb
mov
xchg
jnp
gs
push
and
loope
in
fcmovbe
mov
push
mov
repnz
inc
loope
jnp
das
inc
sub
pop
inc
lods
mov
xchg
ret
pop
pushf
std
cmp
icebp
inc
sub
or
inc
in
sub
repnz
mov
call
dec
and
adc
sbbb
insb
inc
xchg
push
adc
int3
outsb
pop
xor
push
aam
or
jne
pop
cmpsl
inc
dec
and
add
mov
stc
sahf
adc
ds
or
movups
mov
lahf
std
fidivrs
mov
jle
pop
cmp
dec
pop
push
cmpl
fmull
push
push
add
adcb
push
sub
int
mov
lods
je
push
loop
sub
ds
iret
mov
stc
imul
jae
push
mov
or
sub
adc
das
sub
hlt
pushw
sub
outsl
push
aaa
xlat
leave
sarl
loope
out
fidivl
dec
mov
nop
pushf
adc
popa
mov
dec
rorb
push
pop
and
sub
rcll
pop
ss
pop
outsb
mov
push
mov
cmp
in
and
or
pop
add
inc
sbb
jns
xchg
push
lcall
test
aaa
dec
into
sahf
pop
ds
je
jo
aad
call
das
pop
dec
int3
lahf
inc
or
mov
js
out
cmp
nop
cmpsl
bound
pop
shll
ds
cmp
fs
js
and
jmp
loop
push
ret
push
pop
dec
lock
stos
and
cld
int
jl
pop
add
pop
jp
lahf
mov
fiadds
loop
mov
sbb
orb
mov
or
into
sub
or
subl
mov
ss
pop
xor
outsl
add
ljmp
dec
xor
shl
iret
lods
xor
incl
dec
sbb
popf
dec
ja
cmp
adc
mov
int3
in
cwtl
cmpl
push
push
js
test
cwtl
mull
in
mov
cld
pop
inc
add
push
jne
jmp
add
mov
cmp
std
xchg
clc
inc
ret
into
xlat
cmpsl
mov
aas
lret
das
pop
hlt
lret
test
in
shlb
test
repz
mov
xchg
add
jo
int
and
adc
je
push
dec
movsl
push
outsb
xchg
out
lret
lret
out
xor
ja
pop
out
mov
pop
xchg
das
push
inc
leave
or
push
mov
push
dec
sub
pop
scas
push
xchg
fistps
scas
loopne
dec
jbe
data16
das
sub
dec
mov
std
ss
push
stos
mov
jnp
ljmp
jp
adc
cwtl
adc
rcll
and
dec
cmp
adc
out
test
mov
rclb
pushl
push
sti
mov
push
push
mov
mov
xor
iret
jno
into
dec
scas
mov
popf
faddl
cmp
ljmp
dec
inc
jb
data16
ret
mov
movsb
sarb
adc
jb
aam
dec
push
mulb
mov
jp
mov
pusha
xchg
mov
shrl
lods
ljmp
dec
push
ret
ror
pop
and
lret
mov
sahf
lods
jbe
jg
mov
insb
lret
loop
fildll
movsb
sbb
mov
mov
test
loope
imul
mov
push
xor
xor
outsl
divl
cmp
roll
js
pop
adc
jb
pop
jecxz
pop
sti
inc
test
out
imul
cld
xlat
shrb
lods
shll
or
xorl
mov
xor
dec
xchg
push
push
int
jo
sbb
nop
dec
and
push
xor
jge
outsl
orb
leave
test
fldenv
outsl
adcl
imul
add
xor
sub
add
insb
jno
mov
xor
cmp
ret
loop
sti
into
movsl
arpl
adc
inc
loop
jne
sbb
add
ret
ja
jp
cmc
add
inc
sub
repnz
das
lods
psubusw
ljmp
mov
mov
mov
add
pop
add
xchg
fld
or
aaa
pop
arpl
cmp
xlat
pop
or
mov
aas
cld
push
out
outsl
xor
xchg
lods
orb
cmp
push
outsb
jo
fisttps
clc
mov
mov
ds
adc
jb
pop
pusha
pop
test
sbb
add
pop
sbb
push
in
pop
and
bound
mov
xor
aaa
into
jg
insl
mov
xor
push
jbe
mov
add
push
insb
ret
ja
ja
dec
scas
inc
pushw
jge
pop
cmp
fdivrs
inc
push
int
daa
lods
loopne
sub
cmp
std
leave
leave
dec
rcrb
into
out
adc
jecxz
leave
jecxz
test
pop
mov
jg
adc
add
or
cmpsb
or
add
pop
pop
xchg
add
mov
pop
cmp
push
jno
outsb
push
jnp
ret
in
mov
xchg
inc
or
hlt
outsl
mul
ret
in
outsl
add
arpl
cmc
neg
mov
call
push
shl
inc
lods
imul
aad
shll
das
inc
mov
pop
pop
cmp
repz
jmp
stc
stos
into
xchg
pop
mov
mov
mov
leave
fdivrs
stos
adc
mov
mov
mov
fcom
insb
ja
sbb
cltd
insb
subb
jns
daa
jmp
sbb
xchg
pop
nop
pop
push
ds
add
xchg
adc
pop
pusha
loopne
jle
dec
and
xchg
cmp
js
loope
sub
add
aas
mull
loopne
dec
cmp
sub
push
jno
out
cli
fisubl
in
shlb
mov
mov
jns
jmp
mov
jno
pop
dec
int3
ja
push
lods
mov
rcrb
and
cmp
iret
jge
jle
dec
mov
sbb
fbstp
xchg
mov
inc
xor
loopne
gs
inc
out
and
enter
xchg
icebp
pop
sbb
sbb
adc
enter
rcrb
mov
jnp
mov
dec
sarl
dec
jg
out
push
push
scas
sub
lods
mov
fisubrs
je
out
and
cltd
das
cmpsl
outsl
adc
push
xor
dec
cs
mul
stc
out
addr16
mov
mov
cmp
and
mov
cltd
lcall
leave
xlat
fdivrs
adc
insb
test
test
adcb
shlb
data16
jnp
je
mov
bound
xchg
add
jb
out
jbe
mov
daa
movsb
or
or
dec
mov
xor
push
dec
in
fdiv
or
les
and
cmp
ret
jle
xchg
lahf
inc
mov
cmp
scas
jp
mov
dec
and
sub
lahf
push
mov
mov
cltd
mov
fdiv
ljmp
in
add
jbe
pop
pop
pop
jbe
and
pusha
or
filds
or
aam
lds
lea
lcall
sbb
fiaddl
ret
loop
cmp
mov
xor
cmp
adc
xchg
jbe
lock
adc
dec
pop
inc
inc
mov
cmp
cmp
add
pusha
pop
fld
and
xchg
test
stc
sub
loopne
ret
push
inc
fs
les
stos
mov
sti
sarl
call
ljmp
push
jp
push
clc
out
pop
push
mov
mov
in
call
mov
mov
inc
or
jp
jo
lock
fistpll
jae
aaa
fdivl
popa
xor
push
xchg
mov
imul
pushf
cmp
movsl
xor
push
mov
or
mov
jmp
push
lock
xchg
bound
in
cmp
add
cmpsl
mov
outsl
lods
jmp
lods
fiaddl
jnp
outsb
or
jo
dec
movsl
push
jo
push
mov
or
cld
add
add
xor
mov
push
fdivs
inc
mull
sub
or
mov
lods
out
int3
push
pop
pop
push
lods
xchg
lock
movsl
mov
aad
addr16
data16
mov
shrb
lret
dec
aaa
xor
push
movsb
andb
sbb
leave
fnstenv
lods
mov
sub
repnz
sbb
cmc
test
test
xchg
fnstenv
unpckhps
cld
inc
cli
mov
loope
sar
pop
dec
mov
cmp
cs
pop
sub
pop
xchg
dec
movsl
jno
jnp
imull
stos
pop
jle
and
scas
push
hlt
insb
sub
loop
mov
fisttps
mov
out
jno
xor
push
cmp
jns
mov
jp
sub
jmp
inc
negb
aam
ss
stos
mov
sahf
lret
aam
pushf
repz
dec
and
rclb
test
test
dec
adc
call
loopne
loop
sbb
push
es
popa
dec
jbe
inc
fcmovnbe
inc
loop
loop
roll
dec
sub
xor
aad
cmpsl
sub
push
sbb
ds
mov
push
xor
xor
data16
in
jmp
sub
inc
adc
dec
adc
sub
jge
jno
add
bound
in
pop
dec
and
mov
push
xor
sub
cld
jp
or
mov
cmc
xor
andb
or
pushl
inc
insb
inc
lods
jo
jg
fistl
xchg
xor
jno
add
fwait
adc
sub
mov
pop
fstpl
lds
stos
mov
sbb
addb
stc
adc
shr
mov
dec
inc
mov
call
mov
push
pop
jge
ficompl
sti
add
mov
lea
aas
imul
adc
add
push
into
cld
push
aas
mov
pushf
adc
cmp
cltd
into
test
clc
or
fistps
sbb
inc
pop
outsb
ret
scas
mov
rol
add
adc
cmp
lret
shrl
stc
mov
xlat
jle
sub
pusha
loopne
lahf
aas
pop
and
cmpsl
imul
test
push
pop
push
sub
push
cmc
daa
sub
ja
dec
sbb
dec
aad
mov
mov
jmp
sub
add
jg
mov
xchg
aas
aas
das
push
push
sbbl
addr16
cmpsb
lahf
sbb
pop
xor
ss
pop
inc
add
pusha
nop
adc
insb
inc
push
jo
add
repnz
imul
mov
adc
jb
sbb
and
pusha
lahf
dec
cmp
test
dec
hlt
test
xor
push
jnp
jmp
loope
jno
jne
jmp
scas
push
aas
sub
cmp
mov
add
jb
inc
adc
pop
jno
jmp
aam
jne
sub
std
mov
lahf
adc
mov
xchg
bound
fldl
mov
mov
orb
push
jne
in
jl
clc
in
xlat
cltd
adc
push
out
jns
arpl
pop
mov
dec
movsl
inc
cmp
pop
inc
jle
cmp
cltd
xchg
insl
je
sbb
add
mov
add
js
xor
test
fimull
aas
pop
sahf
int
sbb
pop
and
xchg
out
push
in
or
repz
push
imul
divl
cmp
sub
push
sub
shrl
push
pushf
popl
mov
mov
les
push
test
repnz
xchg
sahf
in
adc
add
push
xor
adc
ret
xchg
jb
popa
das
shl
jae
pusha
loope
mov
adc
fwait
les
pop
xchg
out
out
in
dec
orb
mov
lock
js
out
sbb
xor
push
pop
aad
mov
mov
or
mov
fisttpl
arpl
cltd
xchg
jo
xor
aad
repnz
push
aas
data16
loopne
scas
mov
sbb
jge
pop
test
das
pop
js
mov
data16
imul
pop
pop
pop
in
mov
cmp
ja
xor
jle
jg
mov
mov
leave
jnp
jp
popa
aaa
pop
jns
xsaves
imulb
jnp
xor
out
lret
inc
cmp
lcall
hlt
lea
daa
in
cmp
push
jecxz
push
add
or
xchg
mov
inc
enter
push
jns
mov
inc
sahf
jb
xchg
dec
andb
adcb
int3
roll
std
rol
clc
mov
push
js
lods
cmp
stos
sub
pop
cmp
and
or
lods
pop
jne
dec
mov
fcomps
dec
xor
pop
mov
jmp
jmp
sbbb
dec
jl
popa
gs
mov
xchg
hlt
sbb
sub
arpl
lock
mov
jp
out
lahf
mov
aam
rcll
adcl
push
xchg
adc
imul
stos
or
pushf
inc
in
inc
pop
inc
pusha
cmpsl
lret
add
rolb
inc
sarl
testb
inc
dec
pop
xor
pop
pop
push
xor
es
mov
loop
or
cmp
mov
out
daa
rcr
sub
sub
mov
xlat
fistpl
ja
jle
add
test
lea
mov
loop
adc
xchg
repnz
mov
xchg
pop
xor
bound
clc
imul
jecxz
movsb
jbe
cltd
daa
jns
js
in
xchg
or
fucomip
add
sbbl
hlt
cmp
xor
mov
icebp
push
add
sbb
push
sahf
push
jp
mov
sbb
loopne
stos
dec
pop
xchg
pop
mov
sbb
jnp
movsb
cli
add
mov
pop
dec
xchg
js
lahf
jns
hlt
adc
mov
xor
dec
and
xlat
push
mov
mov
mov
insb
and
pop
jecxz
clc
ret
or
dec
mov
pop
xchg
cld
inc
push
loope
shll
aad
sahf
cmp
sahf
mov
int3
jg
adc
pop
iret
dec
fsubrl
mov
mov
dec
push
sbb
orl
lock
sub
nop
test
movsl
cltd
rcrl
adc
fsubrp
dec
adc
jmp
inc
or
mov
inc
mov
adc
mov
jne
fisubrl
mov
push
ficoms
inc
jbe
imul
mov
and
inc
inc
or
fmul
xchg
sub
addl
stos
leave
push
mov
mov
testl
dec
lret
push
or
xor
mov
dec
lock
pop
jno
nop
xchg
pop
imul
mov
mov
mov
adc
inc
pop
stos
and
aam
dec
inc
js
jmp
pop
sub
popa
push
ds
ss
popf
sub
pop
in
add
movsl
fs
jne
pop
ret
rcrl
mov
and
and
test
xlat
das
lret
inc
xchg
mov
cmp
imul
mov
dec
mov
test
push
pop
add
jbe
stos
push
jb
scas
pop
cwtl
jecxz
ret
xor
add
test
out
jnp
nop
push
or
aad
loop
jae
add
mov
stos
fs
sub
push
cmpsb
fmul
lods
add
test
repz
rclb
dec
mov
dec
lcall
ss
pop
call
xchg
and
cmc
dec
cltd
cli
sbb
inc
mov
outsl
in
das
pusha
sarl
ja
mov
ret
loope
in
ljmp
ds
mov
mov
addl
fldl
inc
cltd
mov
xchg
orb
outsb
into
cmp
inc
addr16
xchg
xchg
dec
test
sub
pop
sbb
pop
sbb
les
movaps
loop
mov
cmp
pop
jl
sahf
pop
lods
dec
push
cmp
lods
push
outsl
popa
lahf
mov
test
and
sbb
movsb
or
or
mov
mov
mov
int
push
cmp
in
mov
sub
mov
js
adc
test
xor
ja
sub
jl
rcll
mov
fs
bound
jb
int3
lret
in
mov
or
shll
jp
mov
mov
lods
mov
aad
jns
jo
push
sub
xor
jmp
fsubrs
cmc
inc
bound
mov
ret
outsl
and
push
xor
pop
stc
mov
outsb
inc
sub
aaa
sub
sbb
stc
insb
aad
clc
enter
mulb
inc
mov
ja
fimull
clc
into
insb
or
clc
sbb
js
fdivrs
dec
push
mov
mull
add
push
dec
fwait
lcall
pusha
lcall
lock
jle
hlt
icebp
hlt
scas
mov
fsubp
mov
cmp
sub
push
jge
adcl
and
pop
jle
out
lods
xor
test
and
lcall
sbb
inc
jnp
lock
jg
xchg
add
mov
mov
inc
jecxz
subb
sub
loope
sub
pushf
push
sbb
xor
shr
gs
aas
int
aam
jno
fildl
lods
fimull
or
scas
stos
and
gs
test
mov
add
insl
cmp
in
jge
dec
pop
repz
int3
cmp
sub
jbe
roll
jl
jns
xchg
rolb
mov
dec
mov
nop
sub
mov
fnsave
ret
shlb
sbb
sbb
aaa
xor
jl
jo
enter
adc
fcmovnb
pop
pop
or
mov
cmp
add
add
shlb
ja
mov
mov
aas
not
sbb
jo
jb
rcr
xchg
cwtl
sbb
mov
loopne
cli
test
jns
ds
push
int3
xor
mov
jmp
push
dec
pop
js
dec
dec
jg
int3
xchg
jecxz
xor
xorb
pop
dec
ficompl
cmp
out
jb
icebp
jl
add
out
cmp
outsl
lret
sbb
push
mov
xor
loop
inc
cli
push
inc
insl
xorl
add
add
xchg
pop
iret
xor
inc
lret
into
fmul
adc
inc
rol
push
adc
sbb
mov
xchg
dec
popf
xor
pop
insb
std
imul
and
push
dec
ret
mov
mov
popf
inc
dec
adc
sbb
push
loopne
add
push
xchg
repz
ret
jecxz
stos
push
push
cli
pop
enter
mov
inc
fs
ja
push
movsl
pop
pop
outsb
sbb
lock
jmp
push
xchg
xchg
mov
int3
cmp
test
adc
jmp
and
out
mov
sbb
mov
or
gs
push
cmp
callw
mov
add
pop
sti
xchg
xchg
lcall
or
sbb
rcr
lahf
loopne
and
push
rcrb
and
xchg
out
cmpsb
cmp
fisubl
addl
add
or
lods
shlb
or
das
cmp
sub
and
or
cmc
shll
jle
test
jno
fstpl
outsl
push
pusha
and
dec
ret
stos
fsub
negl
add
mov
pop
mov
enter
mov
jno
ljmp
les
imul
jp
cmp
call
sbb
inc
pop
mov
notb
and
mov
out
mov
daa
fsubs
xor
mov
addr16
es
fistl
xchg
mov
pop
fmull
mov
pop
in
lock
cltd
test
dec
mull
inc
push
jmp
dec
loope
shrb
rcll
cmp
jg
es
outsl
ds
mov
icebp
movl
xor
pop
arpl
pop
aaa
inc
lcall
cli
cltd
call
inc
movl
gs
xorl
push
cwtl
shrb
fcoml
subl
mov
adc
cmp
sahf
cmp
enter
movsl
test
lock
lret
cs
out
daa
push
iret
lods
stos
loopne
iret
test
pop
in
cmc
dec
stc
sub
sahf
cmpsb
push
ds
add
mov
adc
xchg
mov
push
or
gs
icebp
in
mov
pushf
push
into
iret
pusha
rcr
jno
push
cmp
cmpsb
outsb
pop
movsb
sub
test
aad
mov
jno
inc
xor
sub
adc
jg
in
pop
lock
adc
in
mov
or
imul
sub
push
mov
fildll
xchg
outsl
lock
lods
dec
cmp
xchg
or
jne
pop
loopne
add
pop
jae
adc
jecxz
xchg
sahf
gs
jecxz
inc
psadbw
or
adc
mov
xchg
cmc
into
push
cmp
and
sahf
adcb
pop
mov
inc
icebp
add
ja
clc
scas
fsubrs
mov
jo
push
bound
pop
lret
es
push
xor
jecxz
call
xor
and
pushf
adc
push
out
iret
adc
mov
in
dec
mov
rcrb
movsl
repnz
cmp
das
lods
jg
in
jecxz
mov
xchg
fimuls
in
xor
fcompl
xor
test
fwait
or
in
outsl
push
push
and
or
leave
jecxz
orb
loope
xchg
es
mov
aam
loop
xchg
lds
mov
fists
cwtl
pop
jge
jne
scas
and
xor
mov
test
leave
int3
cmp
dec
lea
in
push
sti
stos
out
loop
mov
mov
mov
fistpl
lret
adc
and
cld
addr16
or
xrstors
out
cmpsb
cli
in
mov
in
cmpsb
adc
mov
mov
call
es
in
xchg
mov
and
mov
xchg
insb
mov
ret
cmpsb
sub
leave
daa
push
sub
mov
ja
decl
dec
std
xchg
xchg
push
sbb
jmp
jg
es
insb
push
xorl
mov
xchg
and
mov
push
lds
or
sti
mov
stos
push
xor
int
cs
pop
mov
push
mov
lock
pop
cmc
jae
pop
push
xchg
mov
sbb
aad
push
fsubrl
stos
imul
xor
test
push
call
iret
cmc
lcall
mov
loopne
cmp
sub
in
lock
pusha
push
scas
ret
sbb
or
jb
in
cld
jl
andl
dec
and
jno
jbe
shlb
sbb
or
stos
push
je
mov
divl
jp
mov
cs
mov
and
leave
jns
inc
xchg
loop
cmpsb
int3
xchg
inc
xchg
loope
ds
xchg
aad
cmp
dec
ret
push
cmp
sbb
and
or
movsb
xor
les
xor
aas
xor
in
lods
orb
push
sub
and
push
repnz
lret
or
out
testl
mov
loope
mov
inc
test
adc
pop
js
pop
cmp
jle
mov
shl
sub
jae
ret
xchg
xor
xchg
push
repnz
inc
lahf
jge
push
mov
lods
andb
je
mov
icebp
or
xor
into
mov
stc
stc
ljmp
fdivrl
push
push
testb
fwait
mov
test
mov
mov
negl
push
imul
fwait
push
sub
dec
mov
inc
jecxz
lds
push
pop
jae
push
pop
adc
outsb
xor
mov
push
imul
call
mov
dec
jbe
ja
jo
ja
jo
push
push
imul
data16
fdiv
orb
iret
add
jb
lock
push
outsl
jne
jg
ds
pop
push
aas
mov
xchg
cmp
test
pop
daa
icebp
icebp
inc
andl
dec
lret
outsb
popf
push
lcall
ljmp
ror
faddl
jecxz
ss
xor
insb
and
out
std
cmp
je
dec
int3
or
push
dec
lahf
hlt
xchg
pop
mov
cwtl
subb
xlat
lods
adc
in
jge
xor
in
mov
xchg
pop
sbb
adc
inc
sbb
sbb
popf
fbstp
sbb
pop
in
sbb
sub
int
addr16
dec
repnz
dec
sub
adc
xchg
ja
and
or
push
test
fbstp
inc
mov
or
push
mov
in
xchg
xchg
lods
pop
ljmp
in
in
test
add
ja
and
enter
iret
or
jp
cli
xor
daa
outsl
std
xchg
pop
fildll
movb
fs
test
add
mov
loope
fst
les
ljmp
pop
popf
mov
push
push
cld
push
mov
xlat
int
fidivrl
cltd
xchg
sub
rolb
ss
xor
fs
dec
pop
dec
and
mov
fldl2e
lods
arpl
roll
fstpt
and
cmpsl
mov
jae
mov
and
subb
hlt
mov
pop
cmp
in
pop
jecxz
mov
push
test
pushf
ret
xchg
scas
pop
add
sub
inc
push
push
jne
sub
insl
add
je
sbb
xchg
cld
adc
int3
xchg
insl
lock
inc
icebp
xor
xchg
cmp
mov
adc
lcall
push
jbe
rcr
fs
enter
xchg
inc
lret
fdivrs
test
in
cmp
or
xor
jns
subb
mov
dec
xchg
sbb
jge
mov
and
add
cmp
popa
xor
outsl
fisubrl
add
xlat
add
inc
mov
aaa
insb
and
jle
dec
dec
mov
hlt
add
out
test
inc
es
or
sub
and
mov
cmp
imul
pop
cmp
shlb
dec
mov
xchg
jmp
ja
cwtl
xor
ret
movsb
fnstsw
daa
js
sbb
xchg
test
xor
loopnew
pop
js
repnz
mov
ficoms
aas
mov
or
add
sbb
xchg
pushf
pop
loope
sbb
sbb
ret
add
outsb
or
test
mov
mov
mov
test
adc
xchg
sub
pop
adc
mov
inc
mov
mov
fadd
out
xchg
jmp
inc
bound
imul
in
orl
loope
insb
mov
jb
cmp
adc
ret
add
data16
xchg
pop
int
mov
icebp
sti
js
pop
mov
dec
sub
cmpsb
pop
mov
jo
outsl
and
push
mov
arpl
xchg
imul
mov
or
nop
cmpsb
stc
push
push
test
xchg
sbb
aaa
icebp
adc
add
aaa
push
movsb
jmp
call
fcmovnb
sub
mov
push
add
pop
inc
rcr
inc
push
and
insb
cmp
sub
adc
mov
pop
and
add
int3
cli
mov
aas
movsb
popl
mov
lcall
push
mov
imul
mov
ds
mov
push
std
mov
push
andb
mov
mov
jp
cli
mov
rclb
cs
cmp
mov
scas
xor
aaa
test
fimuls
dec
and
xlat
shl
ret
fsubrs
call
cmp
in
lock
add
in
push
sbb
sub
loopne
loopne
aaa
data16
fistl
sbb
int3
push
push
push
mov
add
loopne
cmp
sbb
or
mov
adc
clc
inc
les
outsl
dec
and
sti
or
jge
fcomps
pop
push
xor
cmpsl
adc
fcomps
cltd
out
insb
scas
push
push
icebp
push
pop
and
push
ret
mov
jbe
and
xlat
imul
imul
stc
jb
xor
jg
or
aas
jl
sub
int3
xchg
fildl
jnp
pop
mov
bound
ss
push
dec
sub
pop
pop
js
inc
or
in
push
loop
and
lods
and
sbbb
scas
stc
or
mov
aam
loopne
push
sub
cwtl
xchg
add
mov
push
sbb
push
les
cmp
inc
sub
lret
imul
xchg
loop
mov
pop
sbb
xorb
pop
stos
sbb
pop
lret
insb
jnp
jmp
mov
or
out
lock
and
or
push
jno
sahf
add
xchg
push
aas
andl
push
mov
fdivrs
mov
jne
loopne
push
outsl
lret
xor
mov
adc
dec
std
mov
cmpsl
sbb
cmp
adc
stos
sti
rcll
out
sbb
xchg
mov
std
xchg
nop
or
cmp
add
pop
pop
inc
adcb
mov
int3
xchg
mov
cmpsb
jecxz
sbb
sbb
fiaddl
lahf
push
pushf
and
mov
push
push
sub
mov
pushf
mov
pop
pop
cmp
dec
sahf
gs
and
iret
cmp
mov
test
sbb
movsl
push
cli
dec
xor
push
cli
xor
push
push
scas
and
movsb
sub
xor
pop
xlat
mov
or
xor
repz
cmp
dec
lret
iret
pop
xor
cltd
lds
cmpsl
rorl
out
cmpsl
pop
ret
jbe
xor
or
cmpsl
leave
std
psubq
push
dec
mov
lcall
popf
lret
xchg
adc
inc
and
push
paddb
les
xchg
or
cli
cli
pop
dec
sub
les
push
lea
mov
cmp
out
dec
xchg
insl
pop
dec
mov
je
rcrb
shrb
loope
jle
aad
or
push
pop
inc
cmp
inc
pop
mov
pop
sbb
insl
popa
test
filds
jb
lock
shlb
mov
leave
into
ljmp
iret
inc
stos
jecxz
ret
fstpl
mov
dec
xchg
mov
jg
mov
jmp
or
pop
and
nop
push
sbb
push
int3
push
pop
std
pushf
lret
cmpl
mov
stos
mov
ds
cld
mov
and
sub
xor
mov
fdiv
pop
xchg
stos
cmp
mov
lock
mov
test
jp
sub
sbb
addb
pop
xchg
pop
adc
or
jp
xor
stc
pop
add
or
mov
out
sar
dec
fwait
ljmp
out
xchg
stos
mov
icebp
push
xor
pop
push
std
imul
or
pop
dec
arpl
mov
jmp
out
int
repnz
cmp
testl
push
xor
pop
lea
push
shll
xrelease
ret
fwait
in
mov
cwtl
adc
movsl
add
lds
loop
cltd
or
fnsave
iret
aad
incb
in
or
cmc
sub
cld
xchg
inc
icebp
sbb
adc
dec
insb
cmp
out
sbb
sti
mov
push
flds
testb
xchg
insb
lock
cmp
andb
sbb
cmpb
push
repz
mov
sub
lea
dec
push
mov
jle
mov
dec
lcall
sub
or
aas
sbb
or
iret
add
rcll
and
pop
aas
sub
sbb
add
or
jno
inc
aam
add
sub
bndldx
test
xor
inc
addl
hlt
jae
fisubs
jae
dec
imul
or
cmp
sub
pop
int
mov
scas
mov
ljmp
sbb
dec
lahf
xchg
cltd
or
iret
data16
jae
pushf
mov
sbb
push
or
xchg
les
or
lret
push
lock
push
mov
push
cmpsl
pop
fadd
loopne
loop
mov
add
or
stos
adc
pop
xor
jb
insl
push
mov
adc
push
shrl
mov
mov
insl
imul
test
and
or
pop
iret
sti
and
xor
into
sbb
mov
ja
lcall
inc
test
cs
in
add
lret
cmp
inc
cmp
fstpt
cmp
pop
insl
or
jnp
mul
fnstcw
int3
je
jb
dec
pop
fprem
pusha
ja
adc
fimull
cmpsb
pop
xchg
mov
jg
in
lea
dec
cwtl
jnp
enter
inc
sbb
push
lods
hlt
cwtl
mov
dec
ja
je
pushf
imul
pop
sbb
add
into
cmpl
in
bnd
in
or
lret
and
mov
ret
outsl
ja
mov
in
jecxz
mov
mov
incl
xor
push
inc
lret
aaa
add
js
dec
lea
pushf
push
push
mov
push
add
push
adc
adc
fdivrl
mov
mov
cmp
inc
add
lds
fmuls
dec
add
push
add
in
sbb
mov
add
sbb
shll
gs
testb
cmp
imulb
fisubrs
jnp
insb
xchg
les
push
sbb
pop
aad
pop
int
nop
pop
pushf
xchg
pop
sbb
jecxz
jb
or
mov
mov
ljmp
lea
gs
sub
int
push
test
pop
fidivl
inc
adc
out
sub
jae
scas
in
pop
lea
icebp
insl
stos
jl
sub
sti
xlat
repz
mov
add
rcrl
fscale
scas
push
lods
inc
jmp
rorb
push
test
fwait
cmp
mov
sahf
jmp
gs
mov
adc
dec
adc
sub
shr
jl
jl
cmp
jae
mov
cmp
push
mov
nopl
sub
in
lcall
xchg
outsb
mov
mov
pop
scas
pop
ficomps
mov
sub
sub
scas
sbbb
dec
mov
and
les
or
jbe
cmp
testb
push
fs
adc
pop
leave
imul
and
lods
je
sub
sbb
xchg
ja
push
mov
or
push
lock
cli
js
in
movsl
sbb
daa
or
xchg
addr16
hlt
enter
popa
or
inc
push
dec
outsl
xchg
popf
jnp,pn
mov
jmp
pop
xorb
xchg
sub
add
bound
jmp
repz
xchg
xchg
sbb
adc
rcll
pushf
idivb
scas
add
fimuls
lds
pop
shlb
fsubrs
sub
loop
inc
mov
mov
jge
cli
pop
pop
push
inc
sbb
sbb
dec
xlat
in
mov
popf
add
mov
and
inc
rcr
imul
mov
jo
push
push
jnp
push
ja
outsl
fsubr
or
out
in
sahf
loopne
fidivrl
insb
lock
cmovl
stos
scas
or
icebp
fistps
pop
sub
jp
push
cmp
xlat
rorl
lea
jmp
ffree
dec
xchg
adc
in
push
push
lret
adc
test
cmp
sub
jp
xor
fldcw
scas
mov
xchg
xchg
daa
mov
lock
les
adc
loopne
loopne
inc
jl
cmp
stos
and
push
aas
mov
or
stos
outsl
xor
lret
push
sub
mov
mov
mov
push
ljmp
push
push
cwtl
addb
cld
cmp
lahf
xorl
jno
jl
cmc
aam
stc
movzbl
cmc
loope
loop
out
push
inc
xor
push
sbb
test
dec
pop
in
lcall
movsl
adcl
fiadds
xchg
push
lods
aam
mov
sbb
xor
pop
test
push
push
adc
dec
jmp
scas
mov
cmp
xchg
pop
pop
fcomps
insb
popa
mov
push
xchg
fcomps
mov
mov
pop
mov
leave
pop
ljmp
or
dec
fnstenv
pop
addr16
leave
in
cs
aad
ja
lds
fdivl
cmp
cmc
movsb
mov
mov
sbb
lret
fisubs
rorl
pop
fwait
das
fcoml
shll
sbb
lcall
outsb
and
out
mov
push
fwait
test
mov
sahf
mov
cmpsb
scas
cmp
out
addl
push
jp
jb
add
add
xchg
cld
inc
inc
call
push
cmp
scas
scas
lds
std
sub
fwait
pop
stos
out
xlat
enter
add
pop
inc
in
popf
pop
das
adc
cmpsl
mov
imul
pop
pushf
push
adc
fadds
sbb
and
test
sbb
push
dec
mov
jecxz
aad
stc
shrb
add
lods
add
cmp
dec
cld
pop
xor
dec
iret
jns
push
xchg
movntps
lods
movsb
fsubrs
lea
add
or
imul
mov
pop
xchg
adc
ret
fcoml
mov
aad
cmp
lds
shll
mov
adcb
movsb
mov
cmpsb
andl
jbe
jbe
imul
inc
shl
test
pop
popa
mov
arpl
xor
mov
mov
arpl
dec
ret
lods
inc
fisttpl
arpl
in
popa
and
sub
sbb
push
adc
pop
pop
aaa
sub
ret
add
mov
sbb
sub
inc
xor
mov
pop
loopne
test
jno
aad
mov
jecxz
fwait
add
addl
mov
add
and
or
mov
jl
into
push
mov
std
jns
movsb
add
cltd
xor
pushf
sahf
ljmp
cmp
pop
cmp
and
mov
mov
xchg
mov
or
in
or
mov
rcrl
mov
mov
and
int
insl
sbb
push
rcrb
sub
adc
xchg
cmc
dec
fistpll
mov
jg
out
sti
ds
cld
push
out
xlat
sub
push
out
pop
jge
mov
dec
and
pusha
out
sbb
paddsb
jg
adc
ret
pop
clc
adc
cmp
sub
stc
push
popa
test
adc
sbb
sub
outsl
cwtl
add
ss
in
inc
fists
cmpsl
cltd
dec
imul
repnz
in
mov
xchg
fidivl
lret
out
daa
shrl
push
movsl
mov
pop
mov
xchg
faddl
push
pop
mov
outsb
jmp
stos
sub
test
jno
mov
testl
lcall
mov
inc
bound
loopne
mov
mov
cmpsb
int3
xor
mull
icebp
sbb
cs
mov
enter
adc
sarb
or
cli
xchg
add
inc
pop
lock
pop
das
sbb
adc
mov
loop
xlat
mov
inc
dec
jnp
iret
pushf
repz
decl
lahf
sahf
mov
pushf
cld
mov
mov
ret
or
push
lods
cmpsb
jbe
sbb
lds
mov
xlat
out
daa
dec
ljmp
push
sbb
pop
into
mov
jecxz
mov
dec
xchg
pusha
icebp
or
int3
fwait
sub
call
adc
lods
pop
push
pop
jbe
bound
scas
adc
sub
and
jge
add
negb
mov
sti
xor
jns
cmp
mov
scas
out
shll
sahf
jge
shr
aam
neg
mov
cmp
rcl
int3
shll
add
xor
add
xlat
inc
adc
adc
ljmp
dec
cmp
ds
gs
sti
aam
adc
push
cmp
fsts
movlps
mov
cmpsl
cld
imul
push
inc
lods
and
shll
sub
dec
fs
mov
das
lret
xchg
insb
mov
scas
icebp
leave
mov
ja
and
dec
sbb
into
aas
jae
insb
mov
jbe
stc
iret
int
iret
sub
in
push
ret
stos
scas
pusha
mov
and
mov
adcb
adc
dec
mov
push
or
jns
dec
insl
bound
push
pop
jb
mov
xlat
adc
orb
sub
fwait
xchg
rolb
mov
lret
cmp
mov
divb
adc
add
adc
int3
ljmp
movb
aad
and
adc
add
lock
mov
loope
inc
roll
movsb
xchg
lods
jl
mov
push
jecxz
movsb
ja
loop
cmpsb
pop
shll
xor
push
enter
sub
cmpsb
and
repnz
in
push
mov
lds
shrb
adc
fbstp
sbb
lcall
mov
jno
shrl
lahf
adc
scas
incb
lods
jp
pop
test
cmp
pop
fadds
mov
sbb
fidivs
mov
xor
jne
outsb
pusha
cmpsb
mov
pushf
fisubl
int3
jnp
jb
sbb
jns
fldcw
aas
push
mov
dec
sbb
add
jle
lods
and
xchg
call
sbb
xor
aas
out
adc
dec
into
dec
aas
or
jge
pushf
pop
inc
out
ss
out
jl
ficomps
mov
push
daa
aas
fisubrs
jp
lods
popa
mov
out
jne
mov
jecxz
in
stos
pop
je
and
iret
push
jnp
lock
cltd
pop
jp
fisttpll
dec
mov
xor
cmc
xchg
mov
pop
and
imul
and
xchg
push
mov
test
xchg
xchg
mov
mov
add
imul
adc
mov
pushl
mov
sbb
mov
dec
add
imul
pop
shll
divl
jb
adc
lret
mov
adc
ds
fdivrs
das
data16
hlt
cmpsl
lods
imul
add
shll
mov
mov
mov
jmp
bound
xchg
addr16
mov
and
addl
decb
fimull
xor
repz
imul
push
xchg
sub
stos
lea
sub
push
jo
pop
shr
out
imul
sub
repnz
lea
inc
pop
sub
jb
popa
xor
push
les
inc
xchg
sub
mov
jle
push
cwtl
mov
sbb
sbb
xchg
jb
sub
xchg
frstpm(287
or
hlt
jecxz
or
or
push
adc
or
jge
call
js
ja
dec
xchg
leave
and
adc
xor
pop
push
mov
or
xlat
lcall
pop
mov
pop
xor
pop
lret
or
int
dec
fwait
push
movd
fisttps
jb
fbld
add
loopne
inc
pop
push
dec
inc
push
xchg
outsl
and
jecxz
cld
lcall
mov
lret
jp
mov
pop
imul
dec
mov
xchg
aad
call
daa
xchg
enter
add
out
aaa
lret
cmc
lahf
xor
adc
and
lahf
mov
movsl
push
gs
fdivl
cmpl
mov
sub
bound
pop
int
jp
pop
push
mov
push
outsl
scas
outsb
cmp
out
addl
arpl
sti
fisubl
dec
divb
test
daa
dec
daa
pushf
push
hlt
mov
push
adc
enter
pop
fidivs
repz
push
inc
mov
rcl
test
cmc
loope
pusha
adc
and
mov
cmc
jmp
test
inc
cmp
into
lret
clc
sbb
or
adc
lcall
stc
ss
mov
cmp
pop
xchg
pop
dec
lcall
testl
push
sti
sub
push
dec
xlat
call
dec
add
sub
jg
mov
sbb
movsl
flds
jnp
xchg
and
sbb
cs
sbb
imul
cmova
bound
sub
and
jg
test
out
dec
loop
scas
fistl
scas
mov
push
push
dec
adc
cltd
pop
cmpb
pop
inc
call
jne
push
fdivl
les
in
adc
cld
int
cmp
scas
sbbl
cmp
adc
scas
jae
lods
adcb
dec
pop
push
out
icebp
loope
pop
dec
stc
mov
xchg
clc
inc
jmp
sti
or
lock
js
loope
xor
repnz
xchg
inc
and
dec
insb
ljmp
sarb
sbb
clc
pop
cmp
or
mov
adcl
cmp
out
push
pop
loop
filds
push
mov
and
iret
xor
std
sub
jl
addr16
xor
sahf
stc
xchg
js
repz
jno
push
inc
dec
lods
cmp
mov
ss
sub
repnz
inc
lock
dec
xlat
push
sti
rep
or
clc
sbb
push
sbb
xor
xchg
into
pop
push
dec
push
jns
aam
popf
fwait
pop
sahf
xlat
inc
in
dec
mov
in
imul
mov
cmp
xchg
inc
loope
out
loope
into
aas
inc
in
mov
ret
jo
cmpsl
mov
jnp
jg
xchg
idivl
jnp
cmpsb
nop
loop
in
xchg
in
popa
sub
fistpl
arpl
adc
call
shrb
rol
xorb
adc
es
sub
roll
movsb
lcall
lods
outsl
ja
push
or
cs
xchg
jg
jl
loope
push
cmpsl
adc
je
lahf
add
ss
xchg
xor
xor
fldenv
jl
test
outsb
mov
mov
int3
stos
test
push
icebp
jno
ljmp
xor
sbb
add
xor
aad
fcompl
rcll
push
loope
xchg
dec
test
cmpb
xchg
pusha
js
nop
xor
mov
pop
xor
loope
lods
xchg
mov
push
ret
or
scas
ja
test
push
push
xchg
movsl
inc
sbb
outsl
inc
xchg
fistpl
mov
adc
add
dec
pop
fsub
fwait
xchg
pop
scas
cmpsl
mov
push
repz
mov
mov
pop
bnd
cltd
sahf
cmp
inc
cmp
addl
pusha
sbb
xchg
mov
jg
mov
pushf
cmc
or
ljmp
mov
jbe
and
call
xlat
inc
mov
sbb
cwtl
mov
dec
pop
das
sarb
enter
iret
nop
lods
push
push
sbb
push
stos
xchg
ret
jo
adc
push
cmc
loope
pop
pop
jb
mov
pop
sub
jo
inc
pushf
xchg
cld
cmpsb
sbb
dec
inc
sbb
pop
mov
push
rcrl
sbb
and
jnp
idivl
sbb
popa
insb
mov
in
xlat
push
xchg
inc
cltd
lods
repnz
push
or
sub
ja
cmp
into
fs
or
subl
pop
ja
mov
jmp
popa
pop
ds
ret
xchg
fistpll
das
jae
ret
arpl
movsb
xchg
lods
pop
pop
sbb
bound
gs
mov
push
mov
sbb
cmpsl
test
xor
test
into
aad
mov
sub
das
popf
shl
mov
aad
ljmp
or
stc
mov
les
repnz
inc
fcompl
cmp
cmp
stc
pushf
jmp
xor
inc
inc
push
scas
cmp
mov
aam
imul
addr16
out
lret
dec
sbb
rorb
pop
cli
or
out
pop
sub
into
pop
lret
fwait
sub
jecxz
rcrl
sbb
imul
ffreep
cvtdq2ps
and
jl
jnp
push
jno
cld
mov
sub
push
imul
xor
fnstsw
mov
pop
xor
pop
push
cli
xor
sbbl
jno
test
xor
mov
icebp
pop
cmp
or
fnsave
cmpsb
imul
mov
scas
fistpll
mov
push
aas
sarl
add
das
and
jbe
stos
xlat
and
ja
repz
cwtl
jp
xchg
call
sub
mov
adc
mov
cmp
sbb
xor
iret
lods
or
outsl
cs
jns
mov
fidivs
lahf
rcrb
mov
inc
or
cwtl
sarb
xchg
sub
into
jmp
sbb
enter
jl
push
mov
lods
push
sub
adc
xor
adcl
dec
pop
cmp
adcl
fadds
mov
das
jbe
popf
mov
pop
cli
push
ret
sbb
fidivrs
jge
test
xchg
inc
sti
pop
cli
int
scas
cmp
xchg
mov
jns
mov
arpl
xchg
mov
pop
xor
sub
lcall
mov
fcom
aam
pop
pop
ds
mov
loopne
adc
call
adc
or
mov
jbe
push
jle
rcll
mov
sbbb
sub
jle
xor
xchg
mov
mov
mov
dec
lcall
cmpsl
das
in
ret
mov
orb
ss
sbb
inc
pop
aad
clc
loopne
dec
cltd
test
mov
jo
rcl
push
xchg
xchg
mov
cltd
lret
push
sbb
xrstors
mov
popf
add
mov
rorb
cmpsb
scas
repz
rcrl
inc
mov
mov
push
push
and
cmp
jp
call
insb
jb
call
xor
sub
sti
xchg
ds
pop
lahf
sub
or
sub
add
inc
test
lock
sub
mov
hlt
sti
pop
mov
mov
mov
push
std
lock
inc
mov
jno
dec
sbbb
pop
cmp
inc
sahf
mov
sub
dec
leave
jmp
adc
mov
add
or
or
aam
push
mov
daa
mov
jns
adc
scas
xor
xchg
loop
ss
add
sti
push
push
outsb
xor
dec
add
je
lea
jnp
xchg
mov
cli
dec
mov
pop
xchg
or
fiadds
adc
cmp
insl
repz
lcall
pop
push
sbb
sti
fcompl
pop
mov
jb
inc
popf
insl
jg
ss
push
adc
in
dec
js
fadds
xchg
ja
lcall
cmpl
ja
sbb
xlat
mov
xchg
testb
imul
adc
ret
cmp
push
and
out
xor
fimuls
xchg
mov
jbe
nop
push
push
cli
hlt
and
push
popl
dec
out
jo
in
or
fwait
jb
mov
xor
inc
push
cmpsl
sahf
es
xchg
pop
add
aas
jecxz
iret
xor
push
sbb
pop
arpl
add
mov
fwait
ret
ss
xor
xchg
jmp
jp
movl
pop
pop
push
sub
arpl
sub
scas
in
fidivrs
in
lock
stos
xor
inc
push
jno
insl
scas
mov
and
mov
dec
rcrl
jae
hlt
add
movsl
push
jne
stos
test
mov
cmp
sbb
lcall
js
pop
push
aaa
ja
int3
jge
cld
sub
idivl
xchg
lea
movsb
sbb
push
xor
push
fidivrs
hlt
mov
inc
jae
and
pop
cmpsb
mov
loope
or
mov
adc
leave
xchg
sbb
jne
push
loope
aaa
scas
adc
or
mov
adc
sbb
sbbl
sub
outsb
adc
adc
arpl
mov
into
mov
dec
fwait
arpl
cmpsl
inc
jecxz
shl
push
out
push
adc
mov
ljmp
add
cmp
test
sub
sub
xchg
out
in
call
sbb
cmpsb
or
lods
push
dec
and
inc
xlat
fnstenv
ljmp
movb
fsubrs
xchg
inc
xchg
mov
jle
inc
imul
push
rorb
ss
cmpl
std
or
push
push
pusha
mov
shll
inc
div
cltd
popa
push
jnp
inc
dec
mov
jb
xchg
popf
xor
jns
jg
orb
ss
mov
inc
or
mov
lods
and
js
mov
mov
xor
dec
push
xchg
cmp
fimull
mov
mov
sarb
aad
fs
hlt
inc
pop
rcr
or
dec
cltd
into
leave
cmp
leave
cmp
mov
rcrb
fistpll
aam
add
rolb
mov
push
out
cltd
in
jg
cs
fistpll
mov
xchg
sti
js
mov
jae
rcrl
sbb
stos
pusha
jmp
int
cmpb
leave
mov
pop
stos
pop
lods
xchg
jnp
lcall
inc
aaa
inc
fcoms
out
shr
xorl
adc
or
sub
mov
mov
pusha
loope
push
lock
hlt
add
cld
fidivrs
mov
xor
loope
stos
cmp
jmp
into
add
mov
jns
es
inc
push
fisubrs
das
hlt
mov
sbb
xor
sbb
pop
or
pop
jns
xchg
jbe
or
cmc
popf
rcll
and
cmp
mov
inc
rolb
inc
test
roll
sub
mov
mov
and
rcrb
sub
popa
push
sub
ficompl
outsl
push
xor
mov
fcmovbe
pop
cmpsl
outsl
andl
sarb
and
scas
pop
sbb
dec
idivl
cmp
iret
sti
push
inc
add
lods
lcall
ret
dec
sbb
and
jmp
xchg
xchg
roll
sub
stos
inc
dec
xor
push
aad
mov
xorb
adc
add
adc
push
fisubs
out
shll
cmp
push
sbb
mov
xchg
out
ss
rclb
push
sahf
adc
pop
leave
mov
jbe
xchg
add
and
sbb
push
push
mov
test
lods
cwtl
jg
insl
shrb
adc
arpl
or
sbb
cmpsb
ds
test
movlhps
test
xchg
outsb
shll
lret
jo
imul
loop
sub
mov
ficomps
xchg
pop
push
cmc
jge
jp
stos
xchg
jp
push
or
cmp
popa
inc
pop
pop
rcrl
loop
add
popf
sbb
ret
push
cli
in
data16
lock
push
out
sbb
out
out
xchg
cmp
mov
clc
cmp
inc
sub
shrl
sbb
cmp
loopne
ficoms
jecxz
pusha
mov
add
ja
inc
cmpsb
add
fwait
scas
pop
ss
sbb
fdivrs
cmc
sti
mov
and
mov
inc
jle
mov
mov
jmp
and
outsb
mov
push
jl
jmp
or
gs
jo
push
inc
int3
xchg
mov
pop
test
and
das
cs
mov
test
rorb
fwait
sbb
gs
lds
mov
sbb
nop
imul
pop
clc
pop
push
mov
in
and
jp
popf
mov
lret
add
pop
adc
int3
fistpll
cs
jle
pop
stos
fst
adc
xor
adc
nop
xchg
mov
loopne
insl
out
scas
and
cmp
adc
pop
inc
or
sbb
test
pop
ja
shr
xor
mov
rcrb
call
push
out
leave
push
mov
jle
pop
out
sub
loopne
xor
push
test
outsb
iret
mov
push
pop
loopne
add
enter
pop
fnstcw
je
jo
lea
into
xor
push
mov
repnz
xor
lods
ja
mov
cmc
inc
enter
inc
mov
jmp
pushf
push
jo
cmp
or
pop
push
out
mov
jb
lahf
mov
int3
jb
insl
stos
pop
test
pop
dec
enter
cmp
repnz
or
adc
mov
ljmp
je
mov
cmp
sbb
arpl
dec
insb
iret
mov
rcl
push
mov
mov
aam
jge
mov
gs
jle
xor
es
imul
sub
sub
add
adc
jb
sbb
inc
pop
and
jae
out
out
notb
cmp
or
sub
pop
pop
popf
lret
or
adc
shl
push
xor
repz
mov
leave
adc
js
movsl
decb
std
outsb
dec
add
jns
mov
and
ja
add
aad
adc
hlt
sub
push
jb
xchg
jmp
popf
xchg
xor
jge
jnp
jnp
sbb
mov
mov
ja
repnz
cmc
dec
adc
mov
decl
fstl
out
out
shll
and
add
cs
pop
and
add
jecxz
arpl
call
mov
and
sub
mov
add
popf
dec
jmp
std
xchg
pop
mov
push
push
int
add
inc
xchg
dec
aaa
nop
mov
fnstenv
lahf
or
daa
mov
cmp
test
aas
cmp
mov
mov
imul
and
sbb
and
fcomi
mov
mov
out
aaa
ret
lret
and
lock
and
jg
dec
subl
or
cwtl
cmp
out
aam
pop
lcall
adc
jge
lds
inc
aam
push
in
lea
pop
fisttpl
adc
push
and
movsl
add
xor
inc
pop
cli
scas
adc
fistl
jnp
cmp
lcall
scas
mov
push
hlt
in
jae
xchg
xchg
aam
imul
pusha
nop
stos
push
test
mov
mov
leave
jg
mov
les
xor
les
out
mov
mov
add
add
adc
fnstsw
and
mov
cltd
rcrb
and
xchg
xor
mov
mov
loopne
or
lret
dec
inc
sub
dec
xor
int3
psraw
int
imul
orl
mov
push
call
push
jg
mov
out
push
dec
pop
pop
dec
divb
cmp
push
cmp
call
mov
aas
adc
in
push
inc
xchg
in
dec
jnp
dec
int
mov
jno
inc
inc
push
mov
dec
xchg
xchg
mov
in
sub
pop
iret
jmp
mov
data16
xlat
cltd
stos
inc
or
fdivp
enter
movsb
stos
nop
call
sbb
push
imul
jnp
push
pop
das
mov
lret
aaa
inc
shrb
push
sbb
cmp
test
pop
and
xor
cmpsl
imul
fs
pop
jmp
into
cmp
les
mov
test
mov
test
fists
jg
insb
push
mov
inc
ds
imul
cld
cltd
jno
and
xchg
mov
aaa
sbb
orb
jl
sub
mov
testl
mov
pop
or
pop
push
add
cmp
xor
adc
mov
cli
aaa
dec
inc
dec
pop
imul
or
jne
fwait
aas
in
xlat
pop
gs
cmp
repz
adc
inc
sbb
insb
lods
div
jmp
and
mov
xor
sbb
fstp
push
insb
mov
or
push
inc
nop
call
cld
cmpsl
nop
cmc
ljmp
xchg
mov
out
addr16
cmp
jp
xchg
sbb
push
in
rclb
sbb
movzwl
mov
jne
xor
mov
mov
jp
adc
or
xchg
jo
bound
data16
rcr
cmp
repz
xor
push
push
pop
xchg
mov
aam
mov
in
add
in
imul
jns
add
xor
dec
inc
pop
test
adc
cmpb
sub
cmp
sub
mov
fadds
lret
aad
xor
sbb
insl
push
adc
push
adc
pop
ror
daa
aam
mov
mov
arpl
mov
ss
xchg
imul
mov
push
dec
es
sub
pop
scas
mov
jnp
nop
repnz
jnp
imul
cs
xchg
xor
dec
movsb
mov
clc
lcall
mov
mov
push
sti
xchg
fidivrs
pop
ficompl
lret
bound
and
adcl
pop
adc
mov
jmp
and
mov
lea
push
push
lods
cmp
mov
arpl
shlb
pushf
push
xor
stos
loope
enter
ja
gs
fstl
mov
xchg
xchg
jbe
xchg
icebp
sahf
aam
mov
add
push
cmpl
ret
ret
scas
adc
std
and
pop
std
add
cli
popa
sub
dec
ljmp
jb
cmp
sub
add
jmp
imul
ja
mov
cwtl
and
dec
mov
imul
add
adc
lret
pop
ljmp
adc
andb
sbbb
xchg
and
out
lret
cmp
es
fbld
and
mov
fildll
out
in
pop
or
or
mov
arpl
mov
aaa
xor
into
imul
cmp
cmp
jne
or
loop
out
out
sbb
ss
mov
cltd
shrb
jmp
jmp
lret
inc
jl
bound
dec
jmp
in
dec
enter
std
push
fldt
cmp
leave
mov
cmpsl
enter
lahf
pop
push
testl
into
mov
pop
and
sbb
sbb
or
ljmp
sub
mov
xor
addr16
loop
jl
sbb
push
daa
jo
xor
shrl
movb
inc
mov
cld
xor
stos
addr16
lcall
testb
je
jp
adc
or
inc
adc
cmp
xor
sarb
lds
jge
je
scas
sub
dec
xchg
outsb
jmp
std
test
or
lock
jne
lcall
add
ror
fidivrs
jbe
icebp
flds
and
sub
rorb
add
jns
inc
mov
scas
sahf
pop
dec
jae
imul
dec
loopne
mov
xlat
push
push
xor
cmp
int
fmulp
cs
pop
and
cltd
jecxz
adc
cmp
pop
add
repz
pusha
rolb
or
adc
xchg
hlt
loopne
ljmp
add
push
ret
jp
adc
mov
lcall
xor
dec
rorb
cmpsb
cmp
xchg
lods
nop
lods
dec
mov
push
into
adc
adc
fdivp
cmp
shrd
clc
xor
push
xor
sbb
pop
push
cld
sub
and
or
cmp
push
cwtl
testb
fstl
cli
stc
inc
xchg
popa
mov
mov
call
mov
lcall
push
fstl
movsl
xor
jo
dec
cmp
repz
into
pop
les
mov
sub
wbinvd
mov
sarb
daa
gs
inc
xchg
add
mov
data16
adc
pop
inc
mov
leave
sahf
hlt
movsl
add
add
sti
and
mov
mov
push
mov
shll
lds
xor
in
nop
push
inc
and
fdivs
jne
aam
dec
mov
add
nop
mov
xchg
cld
cmpl
adc
pushf
xchg
enter
sbb
add
push
loope
push
sbb
mov
insl
rclb
xlat
lock
lahf
in
repz
rcll
xor
pop
in
mov
popf
sti
pushf
movsb
xchg
lcall
stos
mov
cmp
imul
icebp
cmp
test
iret
xor
xchg
fnsave
push
call
pop
add
ret
pop
out
movsb
mov
push
lods
cwtl
fcomp
xchg
inc
jae
dec
xor
pop
sbb
mov
cmp
adc
mov
xchg
mov
fildll
push
jecxz
cmp
pusha
xlat
cmpsl
fists
mov
sbb
or
shlb
das
jg
sub
dec
mov
ss
fstpl
mov
addr16
and
push
fdivs
push
repz
repnz
add
mov
dec
cmc
std
movsl
sub
out
push
or
in
and
icebp
and
fld
xor
sbb
aad
push
jne
insl
into
add
dec
inc
add
xor
pop
adc
js
push
int
xor
test
push
mov
mov
push
sarb
inc
mov
xchg
faddl
stos
mov
cmpsl
xchg
cmc
out
insl
mov
jg
and
cmc
sarl
popa
icebp
cmc
sbb
sahf
push
test
lret
fcomi
aas
mov
pop
inc
push
xchg
popa
mov
lea
xchg
push
jno
aad
xchg
sbb
inc
mov
pop
pop
arpl
ret
push
adc
ja
pop
and
daa
xchg
lock
or
pop
or
in
leave
xchg
mov
pushf
fwait
jge
and
test
jmp
push
vxorps
inc
movsl
cmpsl
scas
loop
subb
mov
insl
outsb
mov
out
decb
pop
daa
imul
xchg
push
test
add
repz
jecxz
out
jne
sub
sar
xor
sub
lds
lds
aad
xor
inc
mov
adc
aad
and
fwait
leave
repz
push
icebp
adc
or
push
push
orl
jge
pop
sbb
inc
popa
and
push
lods
jg
jb
hlt
sbb
push
insl
push
xor
in
xchg
inc
enter
pop
addr16
cmp
lret
push
add
pop
lods
adc
out
cmp
inc
leave
orb
hlt
and
aaa
into
add
cmp
loope
clc
xor
mov
mov
pop
or
mov
cmc
jg
orb
data16
ljmp
push
adc
fsubrs
in
pop
testb
pop
mov
push
add
jl
das
jmp
pop
xchg
sub
ret
stos
xchg
lds
insl
lret
xor
test
out
inc
int3
test
xchg
loopne
out
jnp
and
dec
push
rcrb
mov
pop
adc
loope
sub
test
stos
pop
psubb
stos
int3
mov
jmp
add
clc
mov
pop
std
lods
xor
in
not
test
pop
jb
inc
mov
mov
lret
cmpsl
je
ss
shlb
out
aaa
or
imul
adc
arpl
cmp
pop
jbe
psrld
xchg
loop
pop
and
ret
add
int3
sbb
fcoml
xchg
mov
mov
cmp
xor
addb
dec
adc
pop
xor
cmpsb
xchg
xchg
xchg
rolb
cmovno
push
add
rcr
jmp
movsb
call
jbe
lahf
cmp
inc
fbld
ss
add
mov
lret
pop
divb
pusha
push
iret
cwtl
mov
mov
and
insl
cs
outsl
jno
pop
mov
pop
lahf
adc
aas
test
cwtl
test
and
and
push
xchg
daa
inc
mov
pop
inc
pop
cltd
and
scas
or
dec
out
imul
adc
scas
test
adc
test
xchg
cmpsb
push
xor
pop
pop
lods
xor
inc
pop
fwait
shlb
cmpxchg
aam
xor
ds
xor
fdivl
popa
and
movsl
xor
into
scas
es
pop
dec
ds
jb
insl
push
js
daa
es
aam
and
jne
fistl
insb
mov
mov
fcomps
add
ja
lret
jecxz
les
xchg
push
clc
add
push
sub
lock
xchg
pop
cmp
loopne
add
mov
in
lods
xor
fwait
xchg
jbe
mov
repnz
scas
fs
cmp
js
cli
sub
mov
loopne
dec
xor
mov
mov
adc
shr
insb
xchg
clc
lret
imul
mov
jmp
push
mov
ret
ljmp
outsl
fstpl
outsl
cltd
and
pop
pop
repnz
jg
sub
mov
mov
mov
cmp
jmp
ja
xor
xor
out
arpl
ljmp
xor
shr
push
inc
ficoms
pushf
cld
not
add
fdivrl
ret
ljmp
mov
gs
jl
movsb
and
stc
test
ret
adc
add
push
adc
sti
int
jo
sbb
bound
out
movb
nop
jp
sub
cmpsb
jno
pop
mov
and
outsl
shll
fcoms
add
mov
jecxz
push
cmpsl
adc
add
out
push
pusha
bound
and
shlb
sbb
ljmp
mov
mov
add
mov
pop
or
mov
loope
repnz
iret
adc
lods
scas
pusha
xchg
jle
dec
mov
mov
enter
dec
xor
scas
outsl
dec
mov
inc
or
adc
push
lret
sbb
pop
mov
push
lahf
test
fnsave
popa
inc
jo
enter
fnstenv
lods
call
push
xor
cmp
sar
lods
adc
and
jg
sbb
mov
xor
in
and
popf
lods
ret
mov
sbb
movsl
jmp
jp
in
push
dec
inc
outsb
mov
xchg
daa
hlt
push
or
das
daa
adc
adc
inc
xchg
mov
and
sbb
pusha
cmp
dec
xchg
mov
jb
jl
cmpsl
je
aad
fstl
ret
loopnew
cli
enter
push
pop
movsl
mov
xchg
jno
jecxz
jmp
outsl
mov
lret
jno
sahf
jp
pushf
sub
ds
xchg
xchg
test
add
jecxz
shl
ret
fwait
jle
mov
outsl
pop
sbb
xchg
push
pop
dec
jb
pop
xchg
push
ret
mov
popf
jbe
and
mov
adc
xchg
pop
mov
jae
pop
cmpsb
bound
sbb
loop
or
rcrb
aaa
negl
dec
pop
leave
les
out
mov
popf
stos
je
inc
xor
and
movzbl
repz
pop
mov
xchg
add
cmpsb
dec
sahf
inc
xchg
pop
fstpt
mov
sbb
ret
arpl
mov
lcall
imul
sti
enter
cltd
push
lock
jno
mov
scas
lods
test
add
jmp
pop
push
mov
fisubs
psrlq
jl
cli
movsl
test
cwtl
xchg
xchg
jmp
arpl
cmpsl
adc
in
mov
fcoms
jae
sahf
pop
push
cmp
jb
cmp
ret
and
dec
aas
pop
mov
clc
xchg
mov
push
and
mov
xor
ret
push
cmpsb
sub
push
arpl
scas
scas
pushw
out
or
xchg
into
dec
ret
or
aaa
les
cmp
sub
rcrb
std
out
xchg
and
pushf
adc
inc
lret
sub
mov
test
add
jne
js
jl
or
jnp
xor
mov
fnsave
push
shrb
push
ffreep
mov
rorl
out
test
fadd
mulb
nop
fmuls
fwait
out
jbe
cmp
test
push
cmp
lret
test
or
jbe
jg
inc
xor
test
enter
cmpsb
js
push
popa
leave
je
subl
pop
dec
jo
loope,pn
test
dec
xchg
aam
cmp
subl
jns
jg
nop
sub
pop
ret
and
mov
add
icebp
daa
dec
test
pushf
inc
ret
pop
pop
xor
xchg
xor
sbb
clc
es
dec
cmpsl
movsb
sbb
dec
pushf
imul
lret
pop
scas
mov
pop
inc
int
mov
adc
xchg
inc
dec
lea
push
and
movsb
mov
sbb
mov
inc
jne
sar
in
test
into
rolb
daa
xchg
pop
pop
enter
es
ret
dec
xlat
mov
jno
ljmp
push
mov
std
and
lea
xor
stos
pop
sbb
dec
xchg
std
ret
nop
call
cltd
or
ja
and
std
sbb
adcl
mov
xchg
and
insl
inc
xchg
mov
inc
mov
pop
std
sub
inc
pop
fcmove
in
cltd
inc
pop
dec
out
fstps
test
cli
pop
or
sub
aad
add
pop
or
push
jne
or
jge
push
mov
enter
push
cs
mov
xor
iret
arpl
xor
imul
mov
mov
aam
ret
insb
scas
test
popa
jbe
pop
test
fstps
mov
cmp
sub
push
xchg
mov
adc
addl
sub
sub
jmp
lret
cmp
sub
es
aad
jno
and
out
add
out
popf
or
clc
test
jbe
mov
and
fwait
mov
add
imul
mov
aas
pushf
imul
and
out
das
subb
push
jno
jmp
add
add
jmp
push
jle
xor
jae
out
lea
jae
es
out
add
jp
xor
int
add
dec
sti
gs
test
es
aas
jbe
ret
lea
pop
loopne
sbbb
cltd
xchg
jb
adc
cmpsl
clc
push
cmp
rcrb
mov
hlt
testb
xor
ss
jl
jl
dec
pop
fldenv
cmp
cmpsb
mov
pop
lds
mov
push
jp
xor
mov
mov
mov
jbe
sbb
data16
and
cmp
push
cmp
arpl
cmp
insb
mov
scas
pop
scas
ja
ret
imul
adc
mov
cmp
ret
jb
push
stos
fiaddl
cwtl
aaa
mov
and
ljmp
enter
into
xlat
cmp
push
push
shr
mov
jle
sbb
add
ret
and
pop
adc
es
sbb
adc
cwtl
adc
bound
pop
add
mov
pop
test
jo,pn
hlt
mov
xor
dec
out
cmp
mov
shrb
inc
jb
bound
inc
mov
mov
xchg
add
mov
clc
mov
les
in
or
inc
xchg
and
jae
wbinvd
ds
stc
and
hlt
outsl
rolb
cmp
push
and
dec
outsl
je
pop
ss
jge
fistpl
fdivl
lahf
mov
xor
popf
push
mov
jecxz
xchg
adc
enter
sbb
sbb
stos
repnz
jle
mov
add
sbb
and
iret
repz
push
call
rorl
sbb
cmpsb
imul
mov
cmpsb
mov
push
pop
gs
pop
xchg
jnp
jecxz
push
sub
xchg
xor
push
inc
and
daa
mov
xchg
adc
dec
outsl
or
fbld
scas
popf
fcmovne
mov
jbe
inc
xor
cmpl
xchg
push
popf
imul
xlat
loopne
push
popf
fs
inc
push
sub
mov
cmpsl
je
int
sti
jno
sbb
addr16
inc
mov
lods
xor
push
jb
fwait
mull
nop
cmpsl
aad
dec
es
fwait
mov
clc
push
jae
push
movsl
out
bound
adc
cld
mov
xor
mov
mov
sub
rorl
dec
roll
negb
add
inc
inc
and
jns
cmp
out
sub
inc
addr16
fs
jl
mov
or
in
and
sub
xchg
movsb
subl
jae
cmp
repnz
movsb
fwait
sbb
add
movsb
andb
lds
addb
cwtl
dec
shl
add
movsl
push
repz
dec
std
xchg
sub
jns
outsb
insl
push
push
popa
adc
jge
inc
cs
mov
pop
sub
test
jnp
out
leave
sbbl
adc
test
mov
cmpsl
lods
sbbb
sub
cli
inc
and
bound
add
sbb
hlt
outsl
adc
in
mov
divb
or
and
push
lret
push
push
lods
or
mov
ljmp
shlb
xor
mov
push
sbb
adc
dec
sub
mov
add
js
pop
cld
loop
andb
pushf
jmp
pop
or
test
add
mull
int3
outsl
loop
sbb
rcll
aas
cld
jmp
cmp
imul
push
add
mov
pop
xor
int
std
daa
es
dec
out
mov
dec
sti
pop
inc
mov
adc
repz
xchg
jbe
mov
call
pop
xchg
pop
mov
das
xor
sub
stos
sti
inc
int3
jl
pop
lods
je
mov
jp
stc
movsb
push
roll
mov
dec
xor
jmp
inc
pop
aas
pop
aam
jno
cli
or
mov
test
jge
inc
nop
repnz
jecxz
in
les
mov
in
sbb
lret
stos
out
mov
mov
popf
repnz
out
loop,pn
icebp
loopne
leave
xchg
outsb
loop
adc
inc
enter
xor
mov
inc
cmpb
jl
lds
mov
cmpsb
cwtl
xchg
call
sahf
das
mov
arpl
mov
mov
mov
push
dec
dec
pop
decb
and
outsb
test
lock
add
mov
mov
push
pop
stc
into
xor
call
inc
push
out
dec
xchg
mov
loope
dec
dec
imul
cmc
aas
pop
ficoms
jmp
xchg
stc
mov
lret
or
arpl
fldl
loop
bound
add
js
jne
xor
jo
or
push
mov
mov
ds
stc
dec
ret
inc
loopne
jns
in
sarb
int3
lock
stc
loopne
dec
mov
dec
repz
xchg
xor
or
adc
insl
mov
sbb
repnz
test
nop
pop
scas
mov
adc
jb
adc
scas
xlat
mov
add
cmpsl
or
pop
ja
or
mov
add
push
out
mov
mov
lods
jno
mov
mul
je
xor
and
std
mov
out
jns
orl
cltd
test
pop
jl
and
data16
jae
imul
dec
movsb
out
ret
idivb
lods
ret
out
jb
das
xlat
xchg
jae
in
adc
repnz
in
mov
push
out
mov
cmpsl
jnp
lret
int
inc
test
inc
mov
sub
cmpsl
notl
fildll
in
das
lret
mov
mov
scas
sub
addb
cmp
or
push
cld
cwtl
fsts
push
jmp
push
jmp
dec
shlb
mov
push
enter
jo
push
in
xor
pop
fwait
jge
lds
lods
push
lods
jo
scas
ja
je
sub
mov
mov
in
mov
or
sbb
bound
insb
lahf
je
push
pop
loope
push
adc
scas
jl
cs
fbstp
cmpl
test
xchg
jle
rcll
mov
ret
inc
cs
mov
jo
sahf
bound
xor
shll
repz
push
int
loop
faddp
cmp
aam
pop
in
and
push
jne
lea
sbb
xchg
pop
shlb
add
cmp
add
inc
loop
imul
pop
mov
pushf
push
or
fadds
negb
mov
jne
shrb
mov
or
icebp
mov
adc
sub
jge
sbb
pop
ljmp
out
aam
inc
jp
sbb
pusha
movsl
push
test
test
mov
out
jns
xchg
decb
jg
cmp
je
aad
adc
inc
inc
call
sbb
and
inc
xor
aad
fimull
pop
push
shlb
add
sti
xchg
mov
pop
and
jnp
inc
or
mov
pop
das
lret
repz
mov
and
xor
pop
jge
icebp
dec
mov
sub
js
add
pop
sub
cmp
dec
or
xchg
sbb
pop
negb
ret
adc
arpl
pusha
test
lock
sub
out
pop
ljmp
dec
mov
aad
and
popf
sub
das
inc
popf
sahf
mov
add
and
dec
addr16
mov
sub
ds
cmpb
push
gs
lret
fidivrs
lods
hlt
push
push
add
add
and
aaa
mov
mov
xchg
push
xchg
loop
dec
mov
or
mov
test
into
imul
aam
testb
sbb
push
movsl
je
inc
mov
out
in
pop
dec
mov
dec
add
mov
lds
push
das
mov
mov
cmp
pop
arpl
pop
dec
cwtl
inc
push
cmp
xor
test
cli
or
aam
movsl
int
or
sbb
fwait
mov
test
out
jbe
cmpb
movsb
aam
cmpsl
add
fldenv
scas
xor
test
pop
jo
enter
lret
mov
stos
std
stos
add
mov
arpl
ret
mov
push
in
int
jae
addr16
scas
or
xor
mov
out
bound
sahf
fnstenv
mov
jnp
cli
push
jmp
int3
scas
pop
std
pop
mov
test
cmpb
jg
imul
cmp
hlt
push
push
add
fwait
mov
jl
sbb
das
mov
jb
pop
adc
sahf
mov
pop
and
sbb
mov
dec
adc
loopne
and
mov
fcomip
stos
into
xchg
stos
repnz
mov
in
fbld
xchg
mov
jbe
jp
movb
push
xor
aas
adc
inc
mov
iret
fnsave
outsb
leave
mov
mov
dec
mov
repz
adc
push
pop
sbb
push
cs
sahf
outsb
xchg
mov
dec
mov
jg
mov
enter
push
mov
mov
sub
cli
rolb
aad
pop
mov
nop
insb
mov
scas
xchg
aam
dec
cmpsl
pop
dec
jecxz
lret
addr16
xor
dec
pop
lods
es
iret
ja
std
and
das
sub
rclb
mov
hlt
push
or
int3
sti
mov
stos
popa
in
scas
pop
incb
outsb
int
negl
mov
inc
in
mov
outsl
pop
jne
inc
or
addr16
cld
xchg
pop
movl
cmc
pop
test
out
daa
arpl
insb
nop
test
ret
or
ds
aad
jle
mov
mov
pop
dec
mov
dec
ds
aad
xor
cld
xor
leave
dec
hlt
or
cmp
das
mov
adc
cmp
mov
mov
xchg
shl
mov
pusha
jmp
and
movsb
push
sub
mov
out
cmp
orb
inc
imul
xchg
inc
dec
test
scas
mov
daa
xchg
lea
inc
push
aam
lods
pop
cmp
adc
or
inc
and
push
sub
adc
cwtl
pop
inc
push
mov
out
ja
into
sub
jb
jae
add
xor
dec
addl
sub
or
inc
call
std
lea
dec
xlat
and
xchg
push
cmc
push
xchg
out
adc
loop
push
ss
cmp
movsb
repnz
movsb
shlb
adc
pop
in
in
xchg
test
fdivrl
js
dec
test
subl
data16
push
sub
add
negb
cld
rolb
pop
into
sti
jbe
mov
iret
mov
pop
sub
mov
mov
imul
out
shl
push
mov
loopne
push
out
dec
add
ss
insb
jb
xor
mov
mov
add
inc
pushl
sub
mov
cltd
dec
insb
sub
add
adc
jmp
je
fnsave
add
int
pusha
mov
lods
mov
push
or
dec
insb
dec
test
sbb
jbe
lcall
aas
ret
sub
insl
inc
jne
popa
mov
pop
rorl
xor
dec
ficoms
ret
out
aaa
cmp
sar
icebp
dec
fwait
inc
lods
mov
imul
push
pop
adc
jae
adc
push
xchg
sub
inc
sbb
out
or
bound
inc
cmp
lea
dec
cmp
les
pushf
pop
shll
dec
xchg
xor
and
movsl
insb
iret
lds
fnstsw
sub
scas
ja
roll
pop
aad
xor
scas
jo
in
punpckhbw
imul
sahf
pop
sahf
imul
stc
or
fistps
aas
or
stos
fs
fimull
lret
add
jne
and
negb
adc
stos
xchg
push
xor
lods
je
inc
jmp
out
pop
int3
loopne
lcall
cmp
subl
push
push
aad
jle
mov
es
sbb
or
adc
das
push
add
jge
jl
ds
jg
repz
jle
add
jno
jecxz
pop
test
sub
into
lods
ja
dec
pop
or
cs
sub
int3
bound
ljmp
leave
daa
int3
xchg
iret
nop
and
jecxz
dec
pop
test
cmp
aas
adc
or
unpckhps
xor
xchg
push
inc
enter
js
cli
pop
xor
das
into
jmp
xchg
addb
and
pushf
push
sbb
in
insl
fiadds
inc
sarl
sub
mov
cwtl
mov
test
push
out
subb
out
sub
or
icebp
mov
test
clc
pop
je
mov
cs
daa
out
aas
fistpl
jo
cmp
je
add
cli
cmp
test
fisubrl
outsb
adc
rcrl
adc
mov
lea
xlat
ljmp
xor
xchg
dec
mov
xor
cld
mov
push
dec
cli
sub
andl
mov
divl
lock
pop
jecxz
rclb
mov
mov
frstor
clc
pop
ret
sbb
inc
push
inc
inc
sub
push
add
fidivs
push
dec
rclb
sub
add
test
leave
cmc
or
sub
mov
sub
daa
or
sub
push
jnp
adc
mov
or
sarb
cmpsl
fdivrs
fs
pop
or
or
lret
sub
mov
inc
subb
jae
and
lcall
das
push
cld
vhaddpd
in
test
or
and
ds
jl
cmp
rcl
mov
cmp
push
push
xchg
push
jne
adc
dec
push
ret
jge
fadds
loop
or
aad
aas
outsb
push
cltd
or
fnsave
dec
sub
cmpb
fsubs
fists
fdivs
xchg
push
aam
test
add
mov
push
hlt
movsl
and
jno
pop
mov
sbb
and
sbb
push
lahf
iret
jg
loopne
xchg
pop
out
and
jns
or
push
sarl
push
mov
mov
repnz
aaa
out
lods
xlat
jle
lods
cmp
ja
push
inc
ss
adc
mov
je
fstpt
ds
push
in
or
sbb
in
out
fs
gs
rorl
lock
mov
out
jnp
and
data16
ret
aad
pop
inc
ljmp
inc
and
mov
sbb
inc
ja
adc
aaa
mov
hlt
fadds
xchg
pop
pop
cli
popa
adc
ja
mov
jge
mov
mov
mov
push
or
sub
dec
or
out
pushf
lods
mov
out
gs
sarb
std
mov
fmuls
xlat
jns
mov
daa
xor
test
shr
mov
sub
leave
or
jns
mov
mov
mov
fisubrl
and
inc
mov
mov
std
pop
rclb
cld
call
ljmp
inc
aam
mov
bound
imul
push
inc
push
movsl
fdivrl
je
xchg
jecxz
mov
mov
test
in
dec
xchg
movsb
and
pusha
push
xlat
jl
jns
aaa
jbe
push
or
ret
cs
inc
pop
cmpsl
scas
mov
xor
sbbb
sbb
mov
jp
pop
ret
in
adc
fcomps
fbstp
imul
push
aas
add
jns
add
sahf
pop
js
mov
clc
repz
cmp
xchg
sbb
outsb
dec
popw
adc
xchg
push
cmp
or
xchg
lret
jmp
int
mov
pusha
jnp
pushf
into
cmp
enter
push
arpl
mov
fwait
dec
subl
xor
daa
push
push
js
ficoml
and
and
or
or
jg
add
inc
outsb
ljmp
push
adc
dec
push
dec
inc
mov
shrb
rol
inc
ret
mov
dec
mov
push
in
int3
dec
push
sbb
clc
addr16
push
js
enter
xchg
test
roll
cmpsl
xchg
and
pop
repz
pextrw
sbb
xchg
sbb
mov
mov
pop
mov
mov
outsl
mov
out
ja
push
clc
or
pop
pop
sbb
mov
adc
dec
andps
push
shlb
lcall
mov
and
lret
cmp
jle
loopne
add
stos
repnz
mov
inc
gs
rcr
stc
jb
or
add
sti
add
int
pop
xchg
cmp
nop
jb
jnp
mov
in
cmp
cmp
push
loop
fdivs
rcll
int
mov
xlat
ret
sub
jbe
cmp
pop
pop
push
or
pop
popf
fwait
cli
push
inc
xlat
pop
jl
jnp
aaa
push
add
fdivrs
inc
xor
sub
in
mov
xor
popl
xlat
push
sbb
dec
push
inc
ret
loope
ret
push
movsl
cmpsl
enter
test
je
push
rolb
mov
sbb
push
test
insl
daa
inc
pop
lods
aaa
test
fs
fwait
cmpb
ret
mov
loope
jl
fldln2
sti
mov
add
mov
cmp
in
cwtl
lods
rcrb
add
or
xchg
xchg
js
lret
inc
jnp
inc
inc
popa
sub
jae
ds
mov
xchg
mov
jge
adc
icebp
fmuls
aaa
dec
sbb
loopne
lods
cli
pop
mov
add
push
sbb
mov
lods
mov
std
or
pop
lock
mov
dec
insb
lock
xor
aaa
sbb
add
insb
sbb
pop
enter
cwtl
push
jb
or
addl
adcb
jecxz
outsl
test
pop
hlt
enter
rcll
aad
jo
test
setle
inc
mov
int3
dec
xchg
es
jp
mov
mov
add
add
and
push
adc
ds
call
dec
aas
repnz
mov
aad
nop
xchg
ret
mov
xchg
enter
sub
mov
fwait
rcr
mov
jmp
lea
fidivrs
loope
stos
int3
mov
xchg
add
call
mov
leave
push
test
clc
movsb
add
cli
xchg
lds
push
dec
xor
push
and
popf
lock
sub
xchg
loopne
dec
cli
test
in
aaa
mov
ss
nop
dec
ret
adc
addr16
insl
sahf
xchg
push
nop
xchg
cmc
or
decl
pop
mov
daa
lds
push
or
pop
ret
jbe
subl
fcmovb
rcll
out
int
mov
add
push
aad
inc
je
fs
and
sbb
daa
pop
cmc
daa
lods
gs
sub
mov
js
fistpll
jae
dec
bound
shll
inc
pop
dec
xchg
mov
test
fucomi
sbb
sbb
or
pop
ja
cmp
sub
cwtl
push
mov
clc
das
cld
ss
xor
jmp
and
jge
addb
sti
imul
xor
xchg
shrb
imul
in
pop
pop
cmpsb
loopne
stos
push
or
das
in
rorl
popa
sub
sbb
jl
sbbb
stos
sub
push
xlat
mov
xchg
imul
push
aad
cwtl
out
push
and
cmp
dec
lock
xchg
ljmp
roll
jb
mov
sbb
pop
push
out
lret
fucomi
mov
push
imul
jmp
jns
jmp
mov
cli
jmp
mov
mov
adc
mov
cmpsb
stc
std
add
jb
lods
add
cmp
and
add
aad
and
mov
mov
add
scas
adc
sub
fiadds
cwtl
nop
stos
adc
ljmp
pop
inc
aad
sub
sub
in
mov
lds
or
fldt
andl
mov
mov
dec
pop
lret
daa
movsl
push
and
pop
int
dec
xchg
push
iret
lds
inc
push
daa
inc
fnstenv
mov
cmp
aas
push
dec
push
lods
nop
push
mov
and
mov
xor
xchg
into
dec
or
inc
dec
pop
ret
jae
push
sbb
sti
dec
inc
mov
insl
sub
inc
sub
popa
lock
and
push
and
movsb
dec
adcl
test
insb
test
lret
scas
out
aaa
je
ljmp
sub
add
xchg
mov
pushf
div
cmpsb
dec
es
ds
inc
fdivs
scas
xorb
je
adc
fistl
xor
push
add
enter
dec
out
shll
mov
pop
fnstenv
in
int
nop
adc
cli
inc
cli
add
rcll
fwait
lods
inc
xchg
inc
and
jp
arpl
xor
lcall
and
jbe
insb
mov
fwait
lcall
add
mov
adc
lock
jmp
sbb
sti
sub
shll
xor
push
out
sbb
xor
jb
jb
inc
mov
sti
into
repz
push
cmc
jo
hlt
bound
mov
inc
fwait
jg
add
aas
push
xor
add
xchg
dec
xchg
xchg
int3
push
sahf
and
inc
cwtl
mov
in
imul
or
leave
mov
cmp
adc
pushf
sahf
mov
xchg
adc
or
stos
mov
or
das
lods
add
es
shrb
nop
call
or
jge
in
add
jecxz
nop
arpl
push
int3
and
scas
push
dec
sbb
aam
mov
cmp
sub
ret
push
lret
sbb
and
push
cli
mov
mov
ss
or
push
ficompl
adc
push
cltd
jns
mov
es
enter
int3
int3
lds
out
rorb
xchg
test
lret
inc
test
or
dec
ror
shlb
jbe
fwait
sub
scas
bound
cld
icebp
subl
imul
lret
pop
loop
dec
pop
ficoml
cmp
fcmovnb
sub
and
cmpsl
dec
jge
fstpl
ss
sahf
fsubrs
xor
fidivl
fwait
pop
xchg
fldl
xor
shll
adc
mov
push
xchg
jmp
push
dec
push
jle
cmpsb
cmp
in
push
insl
pusha
push
ficoml
jo
stc
push
cld
push
mov
mov
inc
lret
push
mov
xchg
dec
and
and
xchg
jl
out
dec
inc
aad
add
rorb
sbb
loopne
orb
xchg
mov
fdivp
fdivrl
in
call
cmp
dec
adc
gs
out
or
sub
xor
dec
mov
stc
dec
jae
xchg
aad
mov
js
add
sub
cmovge
sub
int3
mov
adc
mov
mov
cmp
inc
repnz
stos
jae
inc
cmpsl
add
loop
in
sub
cmpl
cli
lock
les
scas
xchg
mov
out
xchg
sbb
pop
addr16
adc
lret
stc
es
andl
call
in
pop
addr16
insb
push
ret
push
notb
shrl
pop
rclb
pop
pop
iret
scas
mov
outsl
stc
sub
pop
call
jbe
sbb
stos
in
adc
in
aam
out
jae
ja
mov
fstpt
cmp
mov
xchg
or
dec
das
imul
dec
xchg
push
fadd
addb
rolb
push
aam
enter
int3
inc
inc
push
jnp
jb
movsb
xor
rcrl
cwtl
out
outsb
xchg
xchg
add
popa
shrl
inc
inc
or
pop
ret
push
sahf
push
popa
daa
les
std
or
outsl
test
stos
leave
stos
lods
ficoml
mull
cmp
cmp
mov
fwait
imul
jmp
into
lret
lea
mov
mov
add
pop
call
int
test
pop
inc
jmp
scas
mov
xlat
loop
cli
int3
adc
add
enter
mov
imul
jecxz
inc
sub
jge
mov
xchg
mov
dec
mov
xchg
cmpsl
clc
mov
testb
popa
xchg
roll
rorb
and
pop
push
in
scas
stos
inc
xchg
aas
push
xor
daa
mov
rorl
cld
add
xchg
pusha
mov
ds
dec
nop
mov
sub
cmp
mov
sbb
sahf
adc
lea
mov
movsb
cltd
ret
shlb
testl
icebp
jo
ljmp
repz
test
bound
dec
or
adcl
jno
pop
insl
in
cmp
adc
nop
stc
mov
lret
xchg
roll
scas
loopne
dec
cmp
jb
movsb
xor
xlat
cs
add
ja
fists
insl
push
dec
and
pop
or
cmp
loop
mov
jmp
mov
imul
sbb
pop
into
mov
mov
and
xor
inc
xor
sub
aam
mov
cmpsl
loop
xchg
xor
adc
xor
mov
fimuls
inc
pop
jae
push
das
movsl
lcall
mulb
cmc
jns,pt
mov
adc
cmp
rclb
sub
mov
lret
push
js
xchg
adc
lcall
sbb
cmpsb
inc
mov
pop
adc
adc
cmc
mov
jle
stos
lret
shlb
push
es
inc
add
cmpsb
add
sti
aaa
popf
and
jb
int3
scas
loop
icebp
daa
xlat
adc
in
adc
out
push
stos
leave
inc
jle
pop
cli
jecxz
int3
xchg
push
push
xchg
stos
out
xor
popf
inc
cmpsl
adc
pop
mov
cmp
call
sahf
mov
mov
idivb
inc
ljmp
int3
and
mov
sarb
dec
push
xchg
push
sarb
loope
xor
jae
mov
fs
sbb
lret
jae
jns
lds
adc
push
loopne
mov
fstpl
inc
sbb
ror
mov
jbe
jge
inc
cmc
mov
lods
xor
das
mov
inc
xor
inc
les
es
jg
inc
inc
and
xchg
sbb
push
ja
push
lea
xor
pop
jge
pusha
or
or
out
mov
pop
xchg
pop
in
pop
sahf
aas
out
cmp
inc
pop
add
push
mov
fsubrs
mov
add
daa
pop
dec
shlb
roll
cmc
jmp
cld
or
jb
inc
in
sub
mov
push
pop
gs
mov
clc
push
ljmp
add
roll
lcall
cld
inc
xchg
adc
mov
sub
pusha
push
test
mov
dec
cmp
hlt
cmp
pop
lcall
pop
dec
cltd
push
jbe
jo
xlat
push
inc
sub
cmpb
leave
pop
sbb
pop
dec
cmp
push
ljmp
rorb
mov
loope
rolb
popa
nop
fs
mov
xor
aaa
jmp
cmp
cmp
sbb
ja
scas
js
dec
arpl
gs
jno
aam
and
cmpsb
cwtl
adc
lcall
popf
cltd
or
mov
shll
lods
popf
dec
lahf
sub
add
frstor
or
jmp
add
les
mov
cmp
ret
push
cmp
test
in
addr16
push
popf
pop
pop
shl
jno
push
dec
pop
add
and
adc
mov
bound
stos
int
cmp
sbb
loope
xor
lea
cmp
and
ret
jg
mov
push
orl
cmp
into
in
push
shrl
cmc
aad
sub
pop
add
pop
xchg
push
jae
fwait
push
push
push
push
out
inc
pop
pop
fwait
jmp
outsl
and
jb
mov
cmp
mov
sti
mov
ds
loop
popa
mov
inc
dec
outsl
les
cmp
push
mov
push
shll
cmpsb
push
sahf
jnp
je
adc
ds
push
xlat
addw
das
setb
jmp
sbb
sub
sbb
xchg
cs
fldenv
inc
mov
jl
scas
jns
out
imul
jl
cltd
xor
ss
push
xchg
nop
jmp
addl
in
lods
xchg
add
sbb
clc
ret
push
shrb
int3
cs
imull
daa
jle
dec
sub
push
mov
cli
push
or
sbbl
movsb
inc
mov
out
and
insb
popf
and
popa
or
jmp
and
vpshufd
rcrb
lcall
into
aaa
je
push
mov
popf
icebp
and
adc
push
cmp
mov
jmp
jbe
pushf
add
outsb
lods
push
jmp
or
fcmovu
hlt
mov
push
stos
sbb
pop
add
stos
int3
xchg
mov
sub
sub
aas
bound
cmpsb
fiadds
xor
adc
and
lcall
adc
xor
dec
mov
aam
loop
inc
sti
xor
xor
dec
fildl
hlt
enter
ljmp
sbb
xchg
add
enter
stos
pop
pop
jbe
pop
mov
or
mov
js
lret
in
mov
cmp
iret
mov
loope
cld
inc
sub
js
jno
add
mov
and
dec
shl
push
jmp
pop
xchg
loop
lea
sub
inc
movsb
fisubrl
aaa
dec
dec
aad
mov
pusha
sahf
cltd
xor
out
ds
push
outsb
mov
loop
aaa
divl
mov
pop
and
dec
pop
shlb
mov
roll
ljmp
mov
insl
pop
pop
mov
push
adc
js
push
jae
push
add
dec
in
das
sarb
xor
jmp
xor
ss
mov
dec
std
lods
mov
fs
mov
pop
inc
jl
and
adc
subl
sbb
in
mov
sbb
out
jno
addr16
stc
jno
push
jae
mov
dec
sub
adc
dec
xchg
xor
ficomps
push
jl
int3
aad
xchg
jb
cmp
dec
and
cmp
cwtl
fnstcw
add
push
adc
mov
jb
inc
mov
push
jle
pop
cmovae
dec
sbb
and
pop
inc
push
popl
lods
movl
inc
call
sbb
add
sbb
repz
outsb
xor
loopne
stc
adcl
dec
shlb
sub
mov
adcl
mov
sbb
mov
andb
sbb
jb
mov
popf
test
fwait
ljmp
and
dec
and
mov
mov
por
push
loope
subl
int
mov
mov
dec
je
xchg
mov
or
pop
and
mov
mov
je
addr16
in
loope
stc
cmpsl
idivb
cmpsb
dec
push
inc
out
jb
ja
popf
lea
movsl
scas
bound
loop
lahf
pop
or
xor
inc
mov
pcmpgtw
jle
push
cmp
loope
inc
xor
push
pop
nop
daa
add
pop
cmp
fs
lret
out
loopne
adc
jg
add
mov
mov
or
lahf
inc
call
call
movsl
and
dec
pop
or
dec
fnstsw
out
cmp
mov
fbld
cmp
jb
push
insb
lcall
stc
loop
xchg
adc
mov
stos
inc
int
mov
cld
lahf
pusha
cwtl
outsb
mov
adc
icebp
sahf
ficoml
cmp
fcoml
ficoml
mov
movsl
and
mov
mov
das
inc
sbb
dec
stos
xor
rolb
push
mov
adc
mov
and
movsb
inc
mov
pop
and
and
fnstenv
in
imul
daa
gs
xor
fimuls
jbe
mov
js
hlt
stos
mov
xor
in
xlat
imul
push
or
add
pop
pop
and
ljmp
leave
insl
jp
pop
lds
push
xor
add
cmp
and
sub
pop
cmp
mov
inc
sbbb
xchg
inc
inc
inc
enter
rorb
lock
lds
pop
xchg
neg
cs
clc
popa
inc
repnz
leave
jmp
xchg
aad
jmp
rorb
les
add
push
in
lods
idivb
mov
sbb
xor
loope
nop
inc
fwait
jmp
sbb
fldcw
sub
lcall
xchg
testb
popa
xchg
leave
pop
mov
loopne
cs
ret
fdivs
mov
mov
cmpsb
popa
dec
or
gs
bound
sahf
mov
cwtl
sbb
jl
push
test
and
sbb
data16
stos
or
dec
or
adc
aad
pop
out
mov
sub
fs
sub
lock
lret
pop
jg
pop
push
push
xchg
movsb
jmp
mov
inc
inc
lods
mov
mul
add
scas
push
adc
xor
popa
add
mov
ds
mov
imul
in
cs
cmp
pushf
aad
mov
xchg
rorb
jb
pusha
dec
sbb
adc
mov
repz
pop
out
aas
imul
pop
loopne
push
std
jle
jne
mov
imul
lods
dec
movsl
jl
repz
cmpsl
jg
jge
fstpl
xor
lret
addr16
inc
lahf
xor
dec
add
adc
and
push
inc
cmp
scas
in
rcrl
fisttps
dec
adc
push
mov
and
dec
pop
dec
test
bound
adc
out
add
fisttpl
push
push
xlat
push
fiaddl
push
xchg
jbe
mov
pop
sbb
rorb
in
xchg
pop
mov
roll
xor
inc
sub
xorb
inc
je
pop
call
dec
test
mov
nop
nop
pop
fisttpll
outsl
mov
movsl
std
in
or
outsl
or
in
and
out
pop
xlat
xchg
int
cmp
pop
in
mov
in
hlt
insb
dec
cli
lahf
push
dec
insl
pop
mov
xor
test
arpl
hlt
js
jge
fucom
cmpb
call
mov
sbb
out
or
mul
les
cmpsl
sbb
ds
das
test
ja
cmp
test
out
ficompl
adc
mov
sbb
sub
pushf
daa
ficoml
test
aas
or
subb
repnz
icebp
inc
xor
lods
iret
mov
push
adc
scas
jmp
cmp
scas
mov
cs
or
fsts
stc
and
fsubrl
frstor
xor
push
fwait
test
sahf
sub
cmpsl
jns
mov
frstor
cmp
dec
in
jne
fwait
add
bound
cmp
pop
sbb
mov
insb
pop
pop
adc
pop
test
pop
mov
xor
movsb
fbld
hlt
cmp
pop
push
loopne
jo
mov
adc
inc
xor
ds
pop
addr16
andl
sbbl
gs
jmp
iret
fwait
addl
in
ficomps
leave
out
sbb
mov
test
mov
mov
jo
lock
jp
scas
pop
inc
pusha
dec
dec
xor
xlat
leave
mov
pop
add
mov
xor
lods
cmc
jae
push
inc
cmpb
out
imul
stc
jle
xor
fidivrl
enter
jbe
xor
and
sar
or
pop
nop
adc
std
dec
jnp
jmp
cmp
mov
adc
stos
rcrl
push
push
and
int
lea
xor
cmpsl
rolb
xor
aaa
jge
xor
jno
xchg
in
gs
pop
push
adc
pusha
sbb
dec
pop
enter
add
jle
jno
rcl
stc
and
lods
rcrl
mov
sbb
call
dec
loope
sbb
push
movsb
mov
or
test
lods
sub
mov
mov
pop
sbb
xor
pop
dec
pop
mov
lock
jl
jp
outsl
insw
inc
ret
mov
lock
lahf
mov
lret
and
cmpsl
clc
push
js
sbb
xlat
pop
jecxz
pop
aam
mov
in
cmp
ss
pop
push
dec
push
and
sub
mov
movsb
aaa
lock
incl
inc
mov
push
frndint
jnp
or
push
loop
cli
and
aas
push
or
cmp
imul
incb
jae
add
add
inc
scas
pop
nop
arpl
adc
cmp
je
insl
loop
pop
mov
dec
and
xor
xchg
pop
ror
mov
lods
pop
and
in
mov
xor
lahf
dec
xor
sbb
ja
hlt
jg
pop
loope
divb
sub
mov
rcrb
fdivr
lods
push
test
sbbl
sbb
popf
outsl
loopne
pop
cmp
adc
cwtl
xchg
add
mov
push
pop
xchg
cld
dec
sbb
and
icebp
sti
and
loop
loop
popa
pop
fisttpl
and
ret
mov
add
hlt
popf
ja
das
pop
movsl
cli
fildll
inc
mov
mov
pop
add
dec
ja
arpl
mov
inc
push
sub
cmc
movsb
mov
or
insl
dec
sbb
adc
push
int
adc
imul
mov
push
test
mov
cmp
sub
bound
or
xchg
inc
shll
sarl
cli
xchg
lret
inc
jo
aas
leave
in
adc
mov
jo
mov
cmp
push
insb
inc
jne
mov
and
inc
movsl
xor
mov
fs
arpl
mov
aam
mov
xchg
mov
int
sbb
jl
inc
pop
lcall
inc
arpl
or
mov
sti
daa
pop
out
clc
inc
dec
shlb
stos
bound
stos
mov
jecxz
popf
mov
sub
scas
int
pop
lock
pop
fisttps
leave
mov
fsub
or
clc
movsb
cld
stos
push
or
cmpb
mov
iret
outsb
pop
ljmp
inc
lods
ret
aas
sbb
xor
movsb
aam
add
in
aaa
lahf
cmp
fmul
and
xchg
inc
stos
jg
sub
adc
in
xchg
mov
scas
push
pop
push
sub
push
ret
daa
cmp
mov
or
or
pop
sbb
bound
dec
mov
fnstsw
inc
testl
mov
movsl
push
cmpsl
mov
pop
mov
cwtl
outsb
xlat
cmp
mov
inc
fnstcw
xor
js
inc
add
jge
push
dec
test
adc
add
fsubrl
dec
lahf
repnz
subb
arpl
movq
mov
clc
je
or
xchg
rcr
xchg
pop
mov
mov
out
jnp
lods
push
fnstcw
int3
fldt
and
mov
or
in
rcrl
call
lret
add
mov
and
jno
jne
push
in
bound
arpl
pop
test
test
insl
movsb
in
fs
mov
je
ss
xrstor
fwait
mov
push
xorb
inc
daa
mov
ljmp
mov
in
pop
repz
and
xor
shr
cli
jnp
adc
jp
movsl
movsb
jg
insb
test
in
iret
out
sbb
xchg
mov
xor
addr16
fnstenv
xor
dec
xor
dec
add
arpl
push
mov
stos
pop
xchg
jne
and
push
mov
adc
mov
or
int3
and
inc
imull
cmp
xor
sti
pop
add
pushf
inc
push
or
lds
fdivl
or
adc
sub
int3
xchg
enter
fcoml
sbb
mov
loope
cmp
sub
add
aad
gs
cmc
mov
push
inc
scas
mov
xchg
or
adc
mov
aas
addr16
test
dec
cmp
fs
mulb
add
sub
test
filds
loopne
add
ret
and
sub
enter
add
xchg
sbb
mov
scas
sti
data16
hlt
enter
js
loope
sbb
and
add
popa
lds
xchg
sub
int
dec
and
fwait
adc
leave
mov
and
pusha
movsb
or
call
xor
add
mov
out
and
dec
ljmp
cmp
dec
insb
aaa
cli
insl
outsl
jne
test
in
das
mov
push
lea
into
jle
fcomip
jns
mov
mov
jp
pushf
inc
loope
iret
add
stos
cmp
les
pusha
test
mov
call
add
lods
pop
arpl
push
stos
leave
lcall
rorl
data16
insl
mov
sbb
in
es
sub
cmc
outsb
lcall
ss
shrl
push
jno
fistpll
jnp
psubq
adcb
cltd
push
sbb
xchg
into
es
sub
addr16
push
mov
sti
sbb
jl
push
fdivs
cmp
notl
jp
push
dec
inc
pop
add
jo
mov
sbb
cmp
jge
sub
xchg
jns
lock
rol
sbb
jo
mov
test
or
addr16
in
add
cld
stos
inc
rcrl
xchg
lcall
pop
push
push
jge
rcr
repz
and
mov
pusha
sbb
mov
pop
testb
dec
xchg
xor
sub
push
xor
addr16
in
sbb
xlat
lods
hlt
adc
jle
mov
cltd
cmp
decb
pop
fisttpl
arpl
loop
inc
push
push
sub
dec
add
lea
push
adc
jle
insb
cmp
inc
cmpsb
jp
into
or
out
xchg
mov
sbb
sarl
repnz
ljmp
push
add
sbb
sbb
push
pop
mov
lcall
push
out
popf
insl
mov
pandn
dec
mov
imul
mov
sbb
add
test
insl
mov
mov
mov
je
roll
dec
and
xor
out
jp
dec
jae
inc
sbb
jne
jbe
scas
jb
cmp
jmp
pop
and
ds
cmp
jecxz
roll
in
ret
and
pop
jmp
jae
ljmp
xor
insb
movsb
out
and
cmp
incl
sahf
pop
jns
jae
and
enter
sbb
pop
cwtl
out
loop
dec
sub
loope
sbb
mov
jp
mov
inc
jno
or
sahf
lea
add
xchg
je
or
mov
imul
lret
dec
into
xor
jp
ja
es
sub
adc
jnp
mov
cmp
mov
pushw
fcoms
shrl
aam
rolb
je
and
enter
pop
pop
push
sub
jae
cmp
fadd
in
out
xchg
mov
sahf
sti
loopne
pop
iret
test
push
out
repnz
mov
in
cld
pushf
imul
dec
mov
jl
insb
mov
daa
into
loop
and
xor
fnstsw
push
xlat
jp
test
iret
push
daa
adc
and
int3
xor
jno
dec
shll
jmp
jmp
clc
mov
mov
sbb
adc
lret
out
mov
mov
mov
push
hlt
adc
sub
xor
adc
dec
fistpl
fucomi
data16
orl
int3
cld
cs
and
cmp
xlat
mov
push
jns
jg
xor
arpl
test
mov
ds
inc
jmp
pop
sbb
sub
pop
out
test
add
jno
lock
cmp
imul
and
mov
cmp
pop
pop
push
filds
mov
aam
ret
movsl
int3
adc
add
cmp
leave
adc
imul
ret
jmp
push
sub
loope
dec
sbb
inc
sarb
insl
add
and
pop
sarb
fwait
mov
lock
inc
adc
in
xchg
xchg
adc
icebp
adc
into
jno
or
ret
pushf
shrl
pop
dec
sub
xor
dec
cmp
or
cmc
adc
mov
dec
cltd
ret
fmull
sub
imulb
jo
nop
repnz
cmc
pop
fldcw
cmp
ds
mov
push
ljmp
mov
pop
fwait
or
xchg
inc
subl
out
mov
mov
inc
scas
jg
into
dec
enter
sbb
jl
cmp
push
mov
insb
jmp
ret
pop
mov
mov
lea
mov
adc
or
cwtl
neg
lahf
stc
adc
xlat
int
rol
mov
js
adc
pop
mov
add
pop
adc
sub
les
clc
adc
xorl
mov
sub
mov
push
xor
jmp
cwtl
adc
push
jns
add
stos
and
loopne
js
decl
outsb
mov
push
je
arpl
pop
mov
cmp
jae
cmpl
fldenv
fisttpll
inc
sarl
pusha
data16
xor
dec
sbb
mov
inc
cmp
jno
lods
xchg
inc
popf
andb
jmp
std
xchg
jnp
and
fnsave
nop
ds
mov
bound
adc
inc
xchg
xlat
das
sub
sbb
adc
lahf
push
aas
mov
cli
mov
movsl
scas
dec
mov
and
mov
loope
mov
cld
or
jae
das
nop
add
roll
lret
lret
xchg
cmp
cld
jmp
call
nop
into
es
xor
out
cld
in
int
xchg
or
mov
lds
pop
push
xor
mov
or
adc
cmp
addr16
lods
and
cmp
outsb
loop
lahf
and
jno
mov
sub
inc
out
cwtl
and
push
add
insb
es
jge
sub
jle
add
pop
and
inc
sbb
jno
inc
int3
cmp
test
sbb
ret
mov
std
dec
push
idivl
sub
mov
mov
sbb
insb
xor
xchg
cmpsb
and
or
ja
dec
xlat
adc
ud2
addr16
sbb
dec
cmp
or
les
les
call
mov
pop
scas
xor
cld
xchg
scas
jl
nop
stos
inc
mov
mov
xchg
xchg
sbb
pop
inc
dec
lret
clc
jns
pop
mov
rcll
push
mov
jecxz
lret
sbbb
jbe
arpl
mov
xchg
sub
jg
add
scas
lcall
sub
xchg
stos
lahf
stos
scas
fisttpl
mov
inc
mov
div
sbb
add
mov
fists
pusha
jns
out
adc
jl
pushf
stc
dec
dec
sub
ljmp
adc
and
mov
jge
pop
push
dec
in
sahf
faddl
sub
mov
stc
push
jnp
lds
sbb
es
mov
ja
in
arpl
imul
jb
adc
inc
pop
push
insl
sar
popf
inc
inc
outsb
leave
xchg
mov
pop
lret
cmc
addb
sbb
cltd
mov
gs
inc
inc
pop
gs
jmp
outsb
aas
pop
jecxz
rorl
test
push
dec
fbstp
dec
mov
loopne
aas
test
insl
or
aaa
push
cltd
cwtl
aas
mov
out
and
lds
cmp
in
mov
int
xchg
int
call
dec
cmc
mov
pop
outsb
jno
aaa
mull
pop
mov
add
push
sbb
pop
xchg
lods
cmp
xchg
or
mov
imul
sub
es
mov
lds
add
loopne
push
pop
pop
xlat
daa
incb
roll
jo
sub
repnz
out
popa
or
push
and
mov
jno
outsb
xchg
jo
jb
imull
cmpsb
imulb
and
pusha
mov
fldenv
clc
cmp
and
inc
jne
fcompl
popf
addl
test
jg
mov
and
mov
mov
xor
mov
mov
je
jnp
cmpsb
pop
or
push
stos
icebp
or
iret
add
pxor
popa
out
xor
jl
int3
xchg
bnd
adc
test
mov
fnstcw
into
scas
adc
fimuls
mov
pop
inc
scas
cmpl
ret
inc
cmpsl
pop
jnp
and
push
pop
outsl
inc
insb
mov
scas
mov
cmp
inc
dec
or
inc
cwtl
mov
icebp
lcall
inc
enter
loop
lods
cs
push
mov
or
into
in
xchg
call
addl
sub
cmpsl
ret
fiaddl
imul
cmc
add
and
sbb
out
or
shl
imul
test
push
mov
imul
ret
dec
sub
sarb
dec
les
dec
push
in
js
xchg
xor
dec
and
mov
outsb
shlb
ljmp
jl
cmpsb
or
cmp
inc
pop
js
push
ja
dec
sbb
inc
call
pop
shrl
into
addr16
pop
pop
or
and
js
clc
test
pop
and
lret
adc
addr16
ss
xchg
aad
sbb
stc
and
xchg
mov
dec
jp
inc
pushf
dec
inc
sub
xchg
xchg
addl
mov
mov
xor
pinsrw
jo
nop
mov
movsl
lret
outsb
mov
adc
cmp
outsl
add
push
sarl
rorb
nop
out
into
lcall
out
and
and
lods
mov
fwait
inc
cmp
jg
add
cmp
outsb
jb
ljmp
shl
mov
or
cmp
mov
inc
push
xchg
mov
inc
or
jle
sbb
es
push
testb
cltd
cli
imul
in
dec
inc
sbb
sbb
les
jo
repz
xlat
ja
mov
aaa
dec
sbb
in
inc
mov
bound
add
out
cmpb
fisubrl
aaa
or
hlt
pop
out
push
dec
sub
dec
std
ds
repz
inc
adc
jecxz
mov
sbb
daa
ror
hlt
sbbl
negb
push
shl
push
push
mov
xchg
aad
int
xor
in
test
dec
std
adc
imul
add
lods
jp
jmp
bound
lahf
andl
add
pushf
sbb
les
jge
std
out
pushf
ja
adc
add
sub
push
mov
std
mov
mov
sub
xchg
loope
jmp
mov
mov
stos
mov
fldt
cmp
adc
jmp
mov
push
xchg
pusha
mov
lods
cmpb
dec
test
add
push
addr16
imul
pushf
adc
pop
sbb
js
pusha
mov
mov
push
and
pushf
xor
cmpsl
aaa
inc
nop
cli
lods
cmpsb
pop
push
roll
stos
xchg
pop
lods
mov
sahf
pop
push
sub
or
mov
out
jmp
imul
into
jl
mov
sbb
repz
mov
or
and
fiaddl
aaa
inc
sbb
addr16
add
les
jne
outsb
rcl
sub
sti
xlat
and
xlat
repnz
mov
jecxz
adc
xor
cmp
jge
mov
js
shlb
daa
adc
testb
adc
sar
push
jg
dec
sub
inc
imul
add
hlt
xchg
xorl
dec
mov
dec
cmpsl
pop
movsb
int
inc
cmp
dec
lret
or
dec
stc
sub
aam
daa
cmp
jb
mov
pop
mov
es
jecxz
cmp
repz
xor
jnp
nopl
insb
cmpsb
xor
and
or
cltd
fidivrs
mov
cmpsb
jbe
mov
or
imul
stc
lods
push
push
test
adc
daa
and
call
ss
imul
ret
and
pop
repnz
sbb
lret
and
fs
fsubrp
xchg
out
rorb
jo
sub
sub
mov
cmpsb
adc
and
scas
lcall
adc
dec
movsb
ret
fsubrl
add
in
outsb
call
out
or
and
rcrb
sub
lret
scas
add
and
int3
aam
inc
test
pusha
imul
xrelease
mov
test
dec
icebp
out
in
shr
sub
push
pop
push
aam
loopne
outsb
or
jnp
lcall
clc
pusha
mov
out
ret
fwait
xor
call
and
adcb
sti
ret
xchg
stc
add
das
sbb
subl
mov
push
mov
cs
imul
push
loopne
mov
dec
popf
cmp
xchg
icebp
adc
jns
sbb
or
push
add
fidivl
ret
nop
dec
mov
inc
push
lret
jae
fs
nop
xor
arpl
jo
mov
aad
ja
mov
pop
jge
mov
imul
aad
ret
jb
or
mov
jg
fstpt
and
push
into
imul
jg
sti
pop
add
push
inc
push
and
mov
js
js
adc
xor
hlt
in
xor
xor
mov
pop
sbb
add
mov
pop
subps
xor
or
and
mov
cmp
addr16
int
sub
pop
test
mov
ror
inc
lahf
dec
xchg
jp
dec
fwait
cmpsb
cld
movsb
outsl
or
cwtl
insb
rcrl
xchg
test
inc
sbb
cmpsl
cmp
xchg
arpl
cmpsl
jg
movsl
and
int
mov
push
mov
int
jmp
sub
lret
pop
xlat
daa
or
shll
adc
adc
cli
loopne
popa
push
or
xor
sub
pop
cmp
cwtl
sub
mov
cmp
dec
pop
lods
jns
dec
or
push
cmpsb
jge
xor
push
sbb
xchg
push
sbb
adc
xchg
movsb
add
xchg
mov
xchg
cmpsl
mov
pop
xchg
xor
mov
xchg
andl
adc
test
mov
cmp
cmp
repz
fdiv
push
xchg
jo
mov
xor
jo
stos
cmp
rorl
scas
inc
scas
mov
push
int
movsb
test
loop
adcl
xor
outsl
xchg
mov
bound
cld
negb
es
loopne
aam
push
mov
imul
xchg
rcrb
arpl
hlt
dec
pop
in
test
pop
idivl
xor
mov
cwtl
mov
aas
mov
popa
pusha
dec
dec
inc
pop
push
std
data16
sahf
ret
int
inc
xorb
mov
jl
and
rolb
pop
inc
int3
fildll
lret
sbb
pop
stc
ljmp
les
dec
mov
lcall
pop
jecxz
pop
inc
inc
pop
inc
lcall
loop
add
cmp
fldl
shrb
add
and
rcr
decb
add
dec
fisubs
decl
mov
leave
sbb
mov
cs
decb
lcall
dec
bound
leave
adc
sti
mov
and
nop
jl
fstps
int
bound
cld
pusha
mov
cltd
dec
in
xchg
mov
ds
pushf
and
lret
jmp
lock
jg
lret
sub
push
cmp
pop
sbb
pop
ja
cmp
jne
addl
imul
fsub
fbstp
cmp
daa
sbb
ss
hlt
js
in
test
or
lods
push
std
negl
dec
push
inc
dec
mov
stc
adc
push
xchg
or
mov
fiadds
push
dec
lret
jno
outsb
scas
push
adc
in
mov
push
push
stos
daa
loopne
in
push
jno
sarb
dec
mov
ja
xor
lret
push
cmp
leave
cmp
mov
sti
inc
outsl
xchg
pop
or
xlat
jb
outsl
ret
jnp
popf
jb
inc
data16
sbb
pop
or
aad
cmp
sti
lret
lods
fiaddl
mov
or
data16
lods
xchg
outsb
adc
add
adc
repnz
and
and
xor
and
cld
loop
dec
shlb
mov
jge
fs
push
je
sub
lret
dec
movsl
fbstp
leave
out
cmpsb
ficomps
popa
xchg
cmp
dec
inc
mov
lds
cwtl
and
sbb
shll
push
xor
mov
test
mov
mov
test
in
jne
es
fstpl
add
sti
sub
pop
imul
adc
inc
push
xchg
xlat
rolb
cwtl
lcallw
adc
inc
add
loopne
in
sbb
and
pop
outsb
call
dec
mov
inc
xchg
push
jmp
lret
mov
push
lcall
int
add
push
cwtl
dec
mov
push
clc
cs
lds
sbb
jbe
jnp
and
aad
data16
stc
dec
mov
adc
lods
test
dec
cmpsl
clc
xor
sbb
adc
lret
pop
pop
fcompl
xchg
push
out
xchg
enter
mov
outsb
push
xor
xchg
popa
aam
inc
cmp
pop
loop
xchg
test
push
loop
fimull
pusha
pop
aad
adc
push
sbbl
leave
jno
xchg
mov
dec
cmpsb
ss
sub
sti
arpl
jbe
dec
add
xchg
push
sub
ja
dec
clc
pop
jmp
xchg
xchg
sbb
dec
xchg
jne
lock
push
inc
mov
mov
and
repnz
iret
jg
dec
ljmp
dec
stos
and
lods
sbb
mov
repnz
fldenv
adc
pusha
xor
fnstsw
out
scas
in
inc
xor
xchg
inc
call
pop
fwait
pop
movsl
and
xchg
ret
xorl
pop
repnz
xor
mov
popf
js
gs
ljmp
int3
arpl
mov
pop
sbb
pop
inc
mov
adc
les
pop
repnz
sub
cmp
clc
or
push
sub
xchg
mov
xor
mov
aaa
adc
cli
pop
test
push
inc
xchg
push
sub
es
mov
pop
aad
sbb
mov
cwtl
jns
push
mov
mov
add
icebp
sbb
sub
callw
rorl
xlat
int3
hlt
sub
or
out
or
mov
inc
lock
mov
push
or
test
arpl
inc
lcall
loop
or
adc
mov
inc
pop
fldt
cmp
pop
shlb
pushf
lods
cmp
pop
les
mov
lret
cmp
in
xchg
pushf
push
and
jnp
sbb
add
out
xchg
aas
jl
inc
add
xchg
xchg
test
outsl
test
aas
call
outsb
test
or
and
mov
repz
lock
mov
pop
fstp
clc
push
mov
adc
in
dec
push
jo
ss
popa
mov
lret
sub
mov
mov
mov
out
jbe
or
or
xlat
rolb
push
xchg
xchg
loop
mov
push
test
fwait
push
push
sbb
cmc
dec
add
scas
mov
or
cmc
mov
pop
aas
push
sahf
mov
sub
xor
fcomps
aad
pop
add
repz
mov
aad
sbb
popf
mov
stos
popf
ret
and
xchg
mov
inc
jae
adc
cld
shl
cmp
ud2
jbe
sbb
and
test
jne
movsb
dec
mov
das
or
xor
and
adcl
mov
mov
inc
push
pusha
mov
divl
repz
xor
cli
pop
subl
lret
adc
mov
dec
xchg
stc
dec
lds
xchg
fwait
sbb
add
ljmp
mov
pop
inc
xor
ljmp
dec
scas
loop
or
or
xorb
inc
mov
cmp
mov
cld
and
bound
ret
push
and
jl
cmp
andl
dec
mov
mov
sbb
pop
mov
hlt
and
inc
mov
mov
fdivrl
fimuls
test
pop
loop
movsb
sub
mov
cmpsl
arpl
leave
rol
mov
jg
popf
lcall
lea
dec
pop
ljmp
mov
sub
mov
data16
push
in
inc
pop
inc
ja
ret
add
dec
jmp
jg
movsb
mov
hlt
xor
cmp
das
adc
jb
push
inc
sub
and
dec
pop
inc
in
inc
mov
iret
xchg
jno
mov
je
xchg
push
cli
data16
jg
fisubs
cltd
cs
mov
movsb
mov
cmpsl
cmp
fdivr
push
jno
cmp
leave
test
outsb
mov
cmp
push
dec
sti
lahf
dec
cs
movsl
shrb
mov
push
aad
cmp
mov
pop
pop
das
lret
cmp
or
sbb
push
insl
inc
push
imul
and
call
or
add
and
sub
fistpll
inc
mov
mov
pop
in
icebp
in
out
xor
notb
sti
cmp
sbb
jg
push
sbb
xor
cmp
inc
cmpsl
or
loopne
repnz
iret
addr16
cli
xorb
adc
jae
outsl
mov
loopne
pusha
inc
jns
std
testb
adc
inc
sbb
loopne
mov
or
faddl
mov
pop
xorb
test
add
rcr
cmpsb
sub
and
pop
arpl
xchg
scas
mov
iret
sub
push
int
inc
loopne
mov
mov
fistpl
push
and
loope
decb
add
ja
loope
push
fildll
sbb
imul
mov
aas
ljmp
mov
shll
inc
es
lcall
popa
add
push
shlb
notb
dec
lods
ret
repnz
mov
mov
enter
or
std
jecxz
outsl
addr16
xchg
xchg
cmp
imul
daa
fcomi
inc
into
mov
jno
adc
adc
mov
add
dec
scas
dec
pusha
out
xchg
add
mov
jae
mov
mov
xor
xchg
inc
mov
push
jo
test
in
repnz
in
xchg
shl
and
jae
mov
in
inc
imul
outsb
or
out
or
bound
mov
lret
clc
test
aaa
add
xchg
push
inc
je
addr16
lods
ja
cmp
rorl
xchg
push
cmp
push
xor
outsb
jmp
ljmp
pop
and
dec
jnp
cmp
aas
jns
out
lret
negb
les
xor
xchg
test
push
mov
adc
lods
xchg
adc
stos
rclb
inc
xor
mov
scas
push
adc
xchg
cwtl
loopne
jg
loope
push
push
add
aam
xor
pusha
and
inc
mov
dec
mov
mov
loop
pop
inc
outsl
sub
jns
loope
mov
cld
mov
in
xor
pop
mov
xor
mov
cmc
test
sub
in
mov
mov
xchg
inc
rclb
repnz
frndint
xor
mov
sbb
xchg
xor
mov
jae
hlt
adcb
shll
dec
shll
mov
cmp
sbb
into
rclb
pop
or
lea
in
js
sub
pop
sub
push
inc
rcll
lret
and
xlat
pop
std
mov
outsb
mov
jno
shr
xlat
test
mov
mov
and
cltd
repz
dec
rcll
cltd
cmpb
std
repz
xchg
mov
mov
mov
mov
mov
xor
pop
mov
and
lds
ja
sub
push
mov
mov
mov
sub
pop
cld
into
aad
cmp
loop
push
arpl
es
stos
das
xor
sub
inc
adcb
fstpt
xchg
test
mov
adc
dec
les
movb
jl
lods
sbb
pop
ficompl
pop
sarl
adc
push
popa
loopne
xor
std
idivb
push
and
mov
or
sub
out
push
jno
pop
mov
adc
mov
push
mov
pushf
das
fucomi
mov
mov
lcall
push
cli
fisubrs
mov
mov
push
mov
scas
negl
push
cwtl
inc
push
aaa
xchg
test
add
call
nop
jb
and
js
insl
and
push
js
popa
adcl
shrb
mov
push
jle
sbb
subl
fcoms
push
out
xchg
jb
and
mov
in
mov
shll
icebp
out
mov
mov
outsl
mov
addr16
ljmp
in
outsl
sbb
jg
test
inc
sbb
imul
adc
rcrl
sub
addr16
and
lods
mov
into
push
mov
aad
roll
test
pusha
inc
test
insb
call
int
inc
aad
nop
adcb
jne
xor
push
int
cmp
into
and
mov
outsl
pop
rol
imul
shlb
cli
sub
lret
sbb
xor
arpl
sub
aas
adc
mov
inc
sub
nop
xchg
add
leave
mov
adcb
or
les
xchg
popf
shll
dec
movsl
sbb
rcrl
sti
cmpsl
sbbb
test
aas
adc
xlat
lcall
adc
stos
lods
cmc
clc
cmpsb
test
inc
and
out
inc
xchg
lds
xlat
das
shl
loope
mov
mov
cmp
lds
xor
fwait
xor
mov
out
cltd
add
shl
push
inc
push
repz
sub
inc
and
cmpsl
xchg
sbb
mov
xor
movsb
inc
test
pop
cmpsl
imul
pop
test
push
jge
mov
xor
sub
jo
sarb
push
cld
aaa
mov
push
in
lock
and
insb
push
addl
and
xchg
call
shlb
dec
mov
fldl
xchg
mov
jne
pop
data16
loope
push
push
cwtl
repnz
int3
pop
int3
pop
xchg
popf
stos
mov
pop
add
mov
cmc
les
cs
cmp
jae
jnp
int
data16
sti
push
insl
sub
in
inc
xchg
cmc
movsl
pop
loopne
dec
test
mov
rol
andb
or
push
subb
in
add
jmp
inc
rcll
jle
aas
fisubrl
adc
js
sbb
mov
add
xchg
sbb
and
idivl
in
xchg
mov
sub
sahf
mov
jp
in
shll
mov
jne
jmp
popf
test
insl
insb
mov
push
pop
push
jp
lcall
pop
xchg
mov
push
mov
in
and
jle
cmc
xlat
jl
fimuls
or
addb
sbb
lock
sbb
mov
in
sbb
loope,pt
or
shr
and
gs
aaa
loop
stos
out
dec
fwait
ljmp
std
test
mov
mov
mov
push
xchg
xchg
jge
lds
sbb
xchg
inc
pop
mov
cmp
mov
and
jno
xchg
xor
sbb
cmp
adc
push
addr16
imul
fdiv
or
pop
scas
aam
pop
push
push
in
repz
mov
loop
test
mov
enter
sub
or
data16
dec
adc
cmc
das
in
mov
xor
iret
ret
sbb
mov
iret
loopne
lock
fists
stos
add
cltd
rclb
xchg
rorl
and
pop
and
sub
lds
jno
mov
cmpsl
fld
xor
jecxz
jbe
shll
in
lods
dec
loop
xor
inc
arpl
mov
hlt
aam
fistpl
sahf
mov
jae
mov
dec
adc
add
sub
aad
adc
mov
xor
cmp
scas
ffree
enter
push
jp
popa
jp
sbb
dec
inc
xor
xor
jo
sti
mov
idivl
jmp
dec
inc
jmp
xchg
xchg
xchg
cmp
in
or
mov
adc
aas
rclb
sub
mov
or
into
neg
loop
inc
inc
inc
jne
push
add
ficoms
push
rcll
scas
push
test
adc
out
cmp
in
and
lahf
stc
and
sbb
mov
fsts
pop
mov
sub
lods
jae
fnstsw
es
shrb
into
scas
pop
mov
in
push
mov
adc
loop
outsb
adcb
and
and
aas
xchg
sti
inc
js
push
mov
xchg
rcll
pop
repnz
cli
shll
sbb
loopne
jno
cmp
ljmp
stos
pusha
push
popa
lods
out
shlb
xchg
inc
notb
mov
testl
mov
dec
add
adcb
imul
dec
jne
lea
adc
jnp
loop
stos
add
into
push
pushl
sarb
xor
jge
adc
and
repz
cmp
jle
dec
add
or
pop
push
add
jl,pn
test
xor
dec
and
mov
inc
loop
loopne
cmp
mov
push
idivb
test
lock
inc
pop
jecxz
cmpsb
in
in
imul
add
mov
adc
add
adc
cmpsl
adc
loopne
dec
outsb
fisubs
inc
ror
shrl
mov
pop
adc
aam
lods
aaa
or
into
sbb
scas
test
rcrb
add
pop
shlb
mov
repnz
movlps
xchg
and
xchg
sti
test
mov
in
jp
mov
aam
outsb
hlt
nop
and
ret
outsb
aaa
ljmp
jl
pop
in
xchg
pop
adc
in
and
mov
scas
ret
dec
int3
pop
xchg
daa
pop
push
pusha
add
or
outsb
xchg
pop
sbb
imulb
pushf
mov
rcr
mov
insb
out
pushf
jl
mov
sub
xchg
out
xchg
scas
mov
push
fistl
jno
dec
pop
mov
leave
add
das
outsb
push
or
xchg
xchg
loop
push
int
insb
movsl
lcall
je
fldenv
stos
add
addl
aas
cmc
dec
push
je
hlt
xor
mov
les
xchg
sub
push
dec
insb
add
jbe
push
es
mov
xchg
scas
call
adc
adc
cmp
gs
in
ficompl
dec
addr16
mov
pop
jae
dec
out
mov
push
mov
cmp
mov
mov
in
jnp
icebp
cmpsb
push
dec
add
out
ljmp
push
add
add
std
xchg
fidivrs
sbb
inc
and
mov
adc
mov
into
push
xchg
sahf
push
mov
mov
lret
mov
fisubrl
jecxz
pop
mov
fcmovu
inc
cmp
sub
imul
xor
ret
out
inc
mov
mov
dec
test
push
jmp
push
jns
mov
shl
sti
lret
mov
xchg
sarl
jmp
lods
ss
sti
rcrb
push
loop
bound
cmovae
mov
add
cmpsb
or
lock
test
aaa
xchg
fdiv
cmp
test
into
loope
lret
aaa
adcl
sbb
sub
inc
test
std
jle
lcall
cltd
mov
mov
sub
push
ret
jmp
mov
pop
sbb
jns
jle
dec
rolb
dec
push
imul
mov
sub
mov
ja
push
stos
or
gs
stos
jno
pushf
cmp
dec
loopne
repnz
mov
fldt
stos
cwtl
aaa
and
sarb
jmp
xor
add
push
icebp
jecxz
cmp
jmp
fbld
movsl
movsb
mov
lds
nop
in
adc
test
lock
adc
or
arpl
mov
mov
or
inc
push
shrl
insb
shr
fistpl
lea
mov
jae
dec
icebp
aam
shlb
jo
dec
push
loop
adc
daa
addr16
add
leave
pop
xor
mov
dec
clc
xchg
ds
ret
rolb
jle
sub
push
jl
shlb
jge
daa
mov
out
and
shr
jo
or
cmpsl
stc
repnz
inc
push
aad
xor
shrd
sbbl
dec
dec
ljmp
inc
lods
xchg
out
out
sbb
lea
data16
in
pop
push
add
and
xchg
pop
sarb
jl
rcl
out
inc
cmp
mov
adc
pop
loopne
inc
xor
cwtl
out
and
pop
js
adc
mov
push
loope
push
mov
mov
cmp
pop
movsb
jb
repz
pop
in
dec
es
into
push
js
out
mov
mov
outsl
hlt
cmp
push
inc
jo
jmp
pop
sahf
adc
cltd
and
cmp
fwait
pop
push
rcl
or
pop
mov
or
inc
out
subb
ja
jo
loopne
xchg
inc
and
push
lea
popf
inc
and
rcrl
shrl
dec
imul
ja
iret
inc
popf
adc
or
mov
cld
and
mov
fldl
push
loop
adc
mov
fwait
shll
icebp
push
lret
hlt
repnz
push
cwtl
dec
popf
mov
test
hlt
in
jg
int
and
add
add
pop
ss
into
xor
dec
ljmp
mov
leave
push
sub
ja
jbe
imul
lret
xor
or
shrl
jmp
add
lea
mov
repz
jg
loopne
inc
add
mov
mov
inc
cmc
push
aas
or
adc
dec
cmp
push
cli
push
cmpsb
mov
test
jns
outsl
xlat
repz
cli
mov
jnp
and
push
dec
or
cmp
inc
mov
in
insl
out
cwtl
dec
and
or
je
inc
arpl
dec
cld
enter
das
in
push
cmp
cli
insl
lcall
js
xchg
mov
das
adc
mov
sbb
insb
mov
push
addr16
adc
inc
adc
mov
xor
bound
fdivl
pop
push
dec
sbb
or
xchg
or
cmp
call
or
loope
or
rol
mov
mov
cmpsb
test
mov
lods
popf
sbb
cmpsb
xchg
sub
addr16
inc
adc
or
in
push
stc
inc
xchg
sub
cmc
div
add
xchg
push
mov
call
or
ret
stos
shrb
sbbl
jne
stc
neg
lea
jb
dec
sub
mov
adcl
test
test
hlt
sbb
dec
jle
outsb
daa
push
imull
fcoml
mov
in
cmp
xchg
dec
sbb
mov
lret
inc
leave
hlt
mov
inc
xchg
sub
cmc
cmpsl
xor
push
loop
pushf
inc
rol
sbbl
xor
insl
mov
daa
je
xlat
cmc
data16
cmp
push
es
lock
lds
dec
dec
xor
jns
fbstp
mov
dec
mov
lret
cmpsl
fcmovbe
jae
lcall
mov
push
data16
lea
inc
pushf
cmp
js
jbe
mov
inc
lock
nop
fistpl
rol
or
fcmovb
lahf
jecxz
dec
insl
push
lcall
cmpsb
out
dec
aaa
pop
jns
sub
mov
pop
lock
xchg
fimull
movsb
leave
lods
push
adc
inc
insl
jne
jg
push
add
gs
bound
add
pop
cmp
pop
in
pushf
mov
leave
xchg
ret
pop
sbb
cmpb
sub
jno
mov
shl
push
sub
pop
sarl
adc
js
xchg
sub
rolb
imul
dec
fcmovnbe
push
gs
loopne
cmpsb
lret
push
arpl
push
orb
idiv
cmpsb
ret
jne
orl
or
mulb
cmp
leave
push
cmp
lahf
push
into
mov
inc
sub
scas
add
std
mov
test
cwtl
dec
cwtl
push
flds
dec
mov
mov
fisttpl
test
pop
popa
fistps
ficomps
xchg
lock
lcall
push
rclb
bound
inc
rorb
movsb
push
mov
rcr
loop
cmp
mov
in
xor
xor
add
mov
inc
popa
xchg
insl
sub
add
push
cld
shlb
dec
push
adc
cmp
mov
andl
inc
inc
fdivr
push
fldl
adc
outsb
gs
mov
fbstp
fmul
sbb
mov
fwait
loopne
jns
pop
add
mov
movzbl
cwtl
movsb
faddl
xlat
lahf
push
dec
loope
repz
stos
out
mov
xor
xor
mov
pop
in
icebp
lds
ja
inc
dec
fwait
xchg
xchg
rcr
aam
idivl
shrb
xchg
cli
inc
add
add
mov
iret
cmc
mov
subl
sub
lret
cmpsb
fcompl
xor
dec
adc
push
hlt
mov
rcll
mov
xchg
fdivl
dec
jbe
subl
add
cmc
push
xor
dec
cmp
sub
je
mov
mov
stos
dec
int
imul
addr16
mov
jle
push
ret
xchg
mov
adc
sbb
out
lcall
fidivrs
push
aad
lcall
enter
insb
cmp
subb
sub
mov
xor
ja
lret
movsl
subl
mov
aam
ja
aad
add
pop
lahf
push
cmpsl
mov
into
inc
xchg
ret
fstl
fcmovu
xor
mov
xchg
push
cwtl
aam
out
fucomi
movq
mov
jge
movsl
push
xchg
or
aaa
jp
xchg
jb
mov
fsub
fidivs
jge
push
pushf
arpl
aas
dec
movsl
mov
jne
in
std
test
lods
pop
mov
fdivs
adc
push
xor
imul
andl
push
jno
fmuls
mov
sahf
push
out
fwait
into
cmp
fisubl
out
inc
pop
pop
imul
dec
iret
mov
sti
insb
addr16
testl
fsubp
aaa
dec
in
or
cmp
add
or
jbe
repz
add
call
push
pop
pop
les
into
stc
mov
cmovge
mov
dec
dec
pop
add
push
sub
mov
sti
std
ss
jae
into
popa
daa
add
inc
jo
call
adc
stos
lcall
loopne
shlb
test
fmull
test
dec
imul
xor
xchg
test
lds
mov
fldl
add
in
sti
sarl
js
test
mov
and
ret
push
orl
mov
and
imul
ljmp
je
cmp
fwait
insb
cmp
add
popa
add
pop
inc
adc
mov
mov
in
mov
out
sub
aad
push
outsl
rcrb
in
out
add
repz
stos
les
xchg
lcall
ror
sub
sbb
xor
jp
mov
cld
scas
xor
stos
adc
push
jae
xor
sarl
pop
dec
scas
loopne
and
cmpl
push
adc
add
test
in
mov
xchg
pop
jbe
test
hlt
imul
mov
out
mov
mov
int
in
sbb
lcall
xor
fnstsw
jnp
add
icebp
push
mov
mov
fnstenv
pop
push
into
movsb
sbb
xchg
imul
popa
push
outsb
hlt
lret
and
ljmp
stc
push
hlt
in
cmc
out
jns
jnp
jge
lods
test
and
xchg
sbb
cli
dec
sub
dec
cmp
add
inc
fildl
jns
push
out
aas
movsb
jne
cmp
mov
push
inc
sub
xchg
jo
test
and
stos
mov
xor
sbb
xchg
iret
push
mov
add
aam
mov
into
jg
lods
or
inc
add
jp
or
push
jnp
imul
jg
ss
stos
cmp
nop
mov
shll
incb
std
das
xor
insl
jae
ret
leave
sbb
lcall
repnz
add
adc
sbb
push
test
xchg
mov
stos
fs
push
dec
imul
stc
fimull
or
into
lods
inc
mov
cltd
dec
adc
test
lds
cwtl
sub
addr16
nop
jb
inc
into
leave
sub
xor
or
aam
xorl
adc
test
je
sahf
inc
mov
xchg
dec
lret
push
stos
push
push
cld
sub
push
jecxz
int
push
mov
sahf
adc
or
repz
in
shl
push
fwait
shrl
pop
xlat
add
mov
aaa
fiaddl
rcll
std
jecxz
ret
pusha
cltd
cmp
sub
mov
cwtl
std
imul
sub
andl
cs
sbb
push
inc
pop
jne
or
call
push
adc
pop
push
xchg
repz
mov
jmp
enter
add
movsl
dec
mov
adc
sub
pop
push
popf
mov
push
push
lods
ss
fdivs
cmp
mov
movhlps
adc
mov
mov
out
das
loopne
lods
add
xor
add
xchg
jge
jae
xor
roll
ja
lret
cmp
and
add
xchg
imul
dec
pop
dec
roll
mov
inc
pop
and
dec
sbb
mov
fs
incb
gs
push
dec
cmp
lret
in
fiadds
movsb
movl
js
xchg
jno
sbb
and
andb
xor
cmpsl
jb
xchg
jg
mov
ljmp
shll
xor
loop
cmc
cli
add
sub
push
cmp
lock
cli
mov
fwait
push
or
frstor
pop
xchg
sbb
mov
cmp
mov
popf
xor
js
jbe
cmp
add
addr16
dec
sub
jnp
lret
lea
mov
dec
aad
pop
push
imull
loopne
lods
adc
jmp
aad
add
into
cmpsl
sbb
mov
mov
rolb
xchg
mov
mov
add
adc
mov
sub
sub
pop
loop
push
pop
loop
add
add
push
aam
sbb
hlt
gs
inc
ja
mov
daa
jns
jg
pop
fnstenv
shll
imul
jg
dec
mov
add
repz
ljmp
in
sbb
jle
call
cmpsl
outsb
mov
out
pop
into
ss
adc
repnz
sbb
int
lahf
adc
cmpsl
jb
or
std
or
ja
out
daa
hlt
in
sbb
cmp
sbb
fistps
in
mov
shlb
adc
fucomip
dec
dec
lahf
cmpsb
mov
mov
cwtl
hlt
xchg
mov
sbb
pop
fsubrs
push
imul
pop
lods
es
fnstenv
and
std
je
sbbb
loop
out
gs
lods
jl
fdivrs
pop
int3
int
and
std
add
push
imul
ret
cmpsb
dec
mov
aaa
cs
cmc
sub
arpl
sbb
or
pop
mov
pop
aas
xchg
push
and
test
xchg
ljmp
lock
jb
or
loopne
cmp
sbb
divb
mov
sbb
jg
gs
lea
mov
decb
popf
lock
ret
rorl
add
and
fwait
cli
cmp
sahf
or
or
rcrl
pop
xor
movsl
mov
dec
cs
push
shlb
dec
fbstp
xchg
pop
lret
xchg
mov
rorl
mov
mov
mov
push
push
test
stos
std
xchg
xchg
scas
lods
pop
clc
sbb
jno
test
xchg
sbb
repnz
addr16
xchg
ljmp
pop
imul
popa
pop
or
test
mov
pop
rclb
or
xchg
ja
dec
xor
out
jae
cmp
stos
mov
lahf
pop
dec
es
cmp
test
push
or
leave
xor
inc
or
lahf
dec
jl
pop
repz
push
pop
lret
mov
push
dec
rorl
fwait
out
and
mov
daa
mov
and
xor
popl
or
pushf
in
sahf
ss
cmp
mov
push
cmpsb
test
in
xor
or
cmpsl
pusha
inc
in
adc
mov
scas
in
inc
pop
fstl
jae
xchg
dec
cwtl
cmp
shrb
inc
xchg
mov
sti
cmpsb
pop
pusha
enter
xchg
inc
jp
mov
popa
imul
push
les
xor
mov
into
sub
jne
dec
int
push
add
cli
in
in
clc
mov
and
mov
scas
sbb
ds
and
loopne
sub
push
loope
sbb
fisttps
lret
out
aad
pop
ret
shrb
jne
rcrb
xlat
movsl
jbe
and
nop
xchg
clc
mov
mov
xor
scas
imul
aad
mov
mov
pop
inc
iret
xor
ret
stos
rcll
int3
loopne
cmp
sub
and
popa
push
xchg
cmp
inc
in
lds
dec
mov
push
mov
jecxz
orb
bound
push
lret
arpl
ret
sub
stos
cmp
add
mov
xor
adc
enter
mov
adcb
mov
add
int
ror
cmp
movsb
les
xchg
pop
aas
mov
jae
dec
bnd
inc
sub
pop
sub
mov
mov
ds
jl
fs
push
xchg
addr16
mov
xchg
add
xchg
push
iret
cmc
dec
outsl
mov
push
adc
in
cmp
in
jns
dec
popa
scas
out
fstps
mov
and
stos
mov
or
and
rol
mov
and
cmpsb
in
cmp
cld
mov
add
and
mov
xchg
mov
xchg
mov
rorl
lret
std
mov
clc
add
lds
jg
sarl
inc
dec
pusha
mov
push
sub
dec
jge
jmp
add
jp
rcrl
lahf
inc
adc
out
popf
dec
sub
and
jo
adc
or
loop
jl
cmp
adc
cmp
repz
rep
add
mov
outsl
jnp
ja
cmp
repz
je
fbld
lea
rclb
rcrl
sbb
lods
popf
movsb
iret
add
push
test
es
xor
or
fidivl
packuswb
jle
jno
mov
or
aam
ret
sbb
and
out
rorb
sbb
mov
inc
push
test
xchg
shll
xchg
push
test
sub
jle
loope
lock
sbb
xchg
pop
jno
xchg
bound
sarl
xchg
dec
jle
sub
xor
xor
and
testb
dec
std
pop
mov
xchg
or
adc
push
orb
cmc
ret
jecxz
jecxz
addr16
adc
addr16
push
xor
andb
cmpsl
idivl
push
jl
scas
stos
cld
add
push
push
mov
mov
je
lds
mov
jbe
hlt
movsl
inc
pop
push
jne
add
dec
push
adc
add
sub
jmp
icebp
xchg
punpckhdq
lods
xlat
rol
dec
push
stc
jle
lods
or
dec
or
ret
sub
out
hlt
enter
ds
je
mov
ljmp
mov
xchg
add
mov
dec
xchg
push
jge
xor
inc
lods
or
fisubl
add
int3
ljmp
add
mov
mov
mov
xor
arpl
push
inc
xchg
les
push
data16
and
adc
cs
jge
ds
jge
dec
mov
cmp
daa
lret
mov
xchg
test
das
add
jecxz
iret
das
cmp
inc
pop
pop
jecxz
mov
cwtl
pop
fidivs
sub
and
fwait
call
sbbb
pop
movsl
lods
push
or
mov
popa
ljmp
mov
gs
pushl
int3
test
and
pusha
push
jle
mov
shl
out
scas
mov
xor
lret
jbe
inc
sbb
mov
mov
insb
in
xchg
insl
ljmp
or
mov
xor
out
add
pop
push
ret
jo
lcall
subb
jb
jl
jp
dec
fwait
insb
jmp
inc
sti
clc
clc
es
clc
arpl
mov
sub
jl
filds
add
fwait
ret
jmp
andb
cmp
mov
ret
cmp
dec
cmpsl
jb
xor
cmpsl
loopne
loopne
sbb
pop
xor
pop
mov
cmp
fcmovu
mov
fimull
aam
test
jg
loopne
bnd
mov
mov
or
jns
push
jmp
dec
shl
sub
xor
lahf
ret
pop
stos
mov
add
mov
sub
std
mov
mov
pop
je
gs
sti
jl
out
scas
in
inc
clc
cmp
or
mov
je
pusha
mov
hlt
negl
sarb
lcall
sub
into
pop
sub
mov
lret
repz
jle
clc
movsl
mov
das
cmp
pop
sub
pushf
mov
ret
sub
ss
outsl
test
jnp
in
sbb
ret
cltd
ror
cmp
mov
mov
pop
lret
jae
movsb
shlb
out
jle
outsl
rcr
mov
shlb
popf
xorb
pop
pop
mov
push
sbb
pop
add
in
shr
imul
inc
fs
push
or
call
orb
out
jns
push
shrb
fwait
pop
xchg
pop
outsb
sbb
cmp
scas
pop
or
sbb
insb
imul
ljmp
push
inc
mov
cwtl
or
bound
push
mov
lock
in
adc
cmpsb
out
or
add
popf
test
andnps
push
lret
add
and
push
ret
rcrl
imul
jecxz
xchg
push
in
xor
jg
push
subb
ror
inc
movsb
icebp
mov
cmp
push
aad
addr16
cmp
xchg
and
jmp
xchg
xor
call
xlat
div
loop
iret
and
mov
dec
mov
adc
xchg
in
jle
or
push
std
loopne
outsb
cmp
sti
xchg
push
fisubrl
lds
sbb
shll
push
jp
xchg
addr16
dec
mov
es
jae
xchg
popw
xchg
adc
lods
dec
bound
das
push
mov
xlat
cmp
inc
cmp
jnp
xor
or
inc
mov
addb
popf
cmc
movsb
idivb
cmp
jl
pop
mov
out
jnp
out
lods
or
enter
xor
or
cli
jns
popa
jle
stos
inc
jbe
push
mov
mov
push
aad
or
xlat
and
jge
push
sarb
cmc
mov
inc
mov
pop
xor
push
inc
xor
sub
sbbl
dec
cmp
into
jae
cltd
jns
ret
mov
fs
fidivl
out
jmp
push
ljmp
cmp
cmp
int
hlt
cli
mov
lea
mov
sbb
mov
sub
ffree
and
pop
dec
jmp
push
xor
pop
add
subb
out
sub
cmp
clc
add
add
popa
out
xor
sbb
and
cmpsb
stc
or
mov
pop
inc
push
js
ljmp
push
mov
pop
dec
mov
mov
inc
cld
push
ret
cmp
andb
ffree
lret
shll
pop
arpl
push
mov
call
inc
pop
cmp
pusha
fimuls
xchg
test
cmp
fimuls
mov
nop
cmp
pop
jae
mov
adc
sbb
inc
mov
mov
cld
arpl
daa
lahf
es
fs
in
mov
and
adc
jae
sbb
push
lret
arpl
js
les
jmp
lcall
xlat
movsb
adc
sar
incb
jne
adcb
mov
cmp
sahf
push
sbb
sub
xchg
nop
adc
cmp
cmp
loop
xor
in
insb
scas
fsts
and
push
std
push
push
test
sub
cld
add
clc
dec
mov
lret
sub
dec
sbb
fisubl
out
imul
pop
aam
push
stos
sbb
daa
xchg
hlt
fstpl
in
dec
cmp
and
mov
xchg
out
pop
mov
lock
add
lcall
test
mov
ss
mov
cmpsl
scas
adc
in
std
mull
iret
lods
push
push
xchg
leave
add
dec
xchg
roll
pop
hlt
inc
and
and
pop
and
push
fmul
cltd
arpl
outsl
or
lods
fwait
lods
int
sbb
mov
inc
movsl
les
stc
daa
push
sub
mov
fbstp
jbe
jno
hlt
ds
popa
xchg
in
test
cmc
fists
dec
cmp
shll
stos
sbb
sbb
and
fstpt
scas
push
xchg
div
xchg
bswap
jl
repnz
loopne
push
mov
gs
inc
push
jne
pop
fwait
add
jg
jl
dec
cmp
in
sub
test
adc
sub
and
push
arpl
repnz
mov
test
aad
shl
inc
and
stos
push
sub
fldenv
pop
lods
aaa
in
pop
and
adc
mov
or
mov
sbb
cld
scas
in
and
fsubrs
hlt
push
mov
cwtl
fiaddl
xchg
fmulp
ja
pop
enter
pop
push
sub
and
jnp
mov
push
and
push
enter
movsl
xchg
mov
aas
push
push
cmp
aam
out
fs
neg
xor
js
xor
sub
iret
rorl
bound
mov
push
loopne
mov
pop
mov
lcall
xchg
jl
aaa
push
cwtl
insb
and
ljmp
sbb
icebp
sar
mov
dec
pop
cmpsb
movsb
lret
mov
push
cmpl
sahf
jo
aam
movsb
test
stos
imul
lods
lahf
enter
or
pushf
add
mov
cmc
push
inc
xchg
hlt
divb
pop
mov
stc
sti
jne
push
ds
lahf
and
aaa
seto
clc
lea
push
jb
shrl
pushf
lret
adc
jmp
mov
cmpb
mov
ljmp
shr
push
sbb
sbb
inc
xor
mov
sti
pop
shrl
loopne
test
and
xchg
loop
negb
inc
sbb
cmp
mov
inc
xorb
gs
lret
and
jbe
xchg
ja
loopne
outsb
sbb
sbb
push
fisubrs
mov
ret
jns
or
ds
pop
sbb
jno
sti
fisubrs
enter
fstpl
jmp
sub
adc
fidivrs
sbb
mov
and
adcb
out
pop
mov
notl
int3
fists
push
hlt
xor
pusha
xor
movsb
adc
mov
cmp
lods
sti
nop
add
subb
mov
mov
cwtl
pop
sbb
push
ja
jns
ret
sbb
and
mov
dec
add
leave
push
mov
sbb
stos
jle
aam
cmp
inc
adc
push
scas
lret
mov
pop
adc
cmpsb
pop
ljmp
nop
pop
outsl
xchg
in
cmp
sub
inc
adc
mov
mov
add
pop
xor
ror
sbb
aas
or
addr16
pop
push
fiaddl
icebp
push
insl
daa
in
iret
mov
and
add
pushl
push
leave
mov
mov
push
push
xor
xor
push
push
xchg
and
dec
popf
cmpsb
fwait
aam
jmp
repnz
push
popf
insb
js
mov
inc
dec
and
push
in
test
movsb
jae
jne
stos
cmpsl
mov
jle
out
faddl
cmp
clc
cli
lret
pop
mov
mov
jno
fwait
xchg
jnp
fdivp
popa
adc
insl
sub
inc
cltd
mull
push
iret
sub
or
call
popf
jbe
stos
mov
mov
stos
push
xchg
inc
fisttpll
jp
sub
jge
lret
and
bound
test
addr16
fsubr
subb
push
jmp
out
jns
push
stos
lock
xchg
mov
jnp
xor
sbb
xchg
bound
test
repnz
js
mov
and
dec
cltd
dec
loopne
inc
stc
mov
pusha
xlat
cs
test
adc
ret
mov
in
cmp
xchg
lods
mov
lret
xor
shrl
nop
sbb
out
pop
push
scas
pop
lods
lock
bnd
push
mov
cmp
int3
and
je
inc
mov
call
test
call
gs
dec
dec
jnp
sbb
pop
daa
push
sbbl
lahf
dec
mov
mov
cmpsb
inc
in
jmp
scas
mov
enter
cmp
mov
mul
bound
lcall
pusha
sarb
fnstsw
mov
push
fdivrs
adc
std
dec
sub
scas
lea
dec
jno
and
jmp
cwtl
out
pusha
shlb
lcall
sbb
loop
and
out
popa
sbb
inc
xchg
popf
fnstcw
negl
rcll
addl
test
and
sbb
jecxz
jl
cmp
xor
pop
mov
mov
fnsave
push
adc
adc
cs
jle
sbb
call
js
fnstsw
sbb
mov
negb
les
fs
adc
cli
mov
xchg
push
daa
inc
idiv
or
jmp
xor
sbb
fbld
pop
jg
jbe
int3
mov
xlat
sbb
push
jl
inc
js
imul
sbb
lcall
jge
pop
shll
fdivs
jnp
adc
mov
mov
test
decb
lods
cmp
cli
dec
lea
cmp
xchg
and
or
fcmovnb
or
movsb
jmp
lods
int
mov
sub
mov
and
hlt
cmpsl
int
push
push
jbe
ret
jl
jns
and
mov
gs
mov
incb
cli
iret
adc
scas
adc
jl
int3
sub
aad
enter
xlat
mov
shll
bound
jns
jmp
ds
sbb
push
je
xlat
or
fwait
adc
cmp
or
add
in
je
push
and
xchg
pop
adc
addb
fadds
cmc
loope
jl
ret
jle
jecxz
lahf
or
icebp
dec
dec
idivl
inc
js
jbe
stos
add
xlat
jg
lahf
mov
dec
addl
mov
loope
movsl
xchg
mov
sbb
into
jo
imulb
lret
inc
adc
fists
fdivrl
xor
jmp
ljmp
imul
xchg
cli
lret
xchg
xor
sti
xchg
cmp
mov
inc
xchg
popa
add
mov
les
xchg
cmp
sti
cmpsb
movsl
xor
adc
fisttpll
sti
cld
jecxz
icebp
test
mov
or
subb
pop
push
pop
cltd
adc
icebp
mov
loop
daa
addr16
mov
setno
faddl
mov
aaa
dec
shl
mov
mov
imull
pushf
icebp
pop
or
add
push
cmp
xor
mov
repz
mov
mov
pop
cmp
mov
out
mull
jl
fdivrl
arpl
add
or
xchg
cmp
loop
or
fbstp
cs
xor
xchg
scas
mov
xor
repz
adc
imul
sbb
xchg
or
std
mov
daa
cmp
dec
inc
lcall
stos
mov
push
movsl
test
sar
and
xchg
daa
mov
dec
mov
jmp
pop
lds
loopne
hlt
jns
lods
jecxz
and
ret
idiv
mov
mov
mov
cmp
mov
push
loop
cmp
mov
js
je
jge
mov
xchg
push
and
dec
jno
mov
push
movsl
jne
and
cwtl
dec
nop
fstl
stos
repnz
cmp
out
testl
inc
or
out
xchg
inc
lds
negb
mov
dec
aas
xchg
mov
fisubrs
aad
sbb
lds
mov
sub
ds
xlat
movsb
enter
sahf
push
in
imul
dec
cld
mov
aam
mov
push
add
sbb
jo
insl
cmpsl
sahf
outsb
mov
dec
loopne
cld
lods
push
fs
int
mov
mov
pop
scas
mov
test
out
mov
or
xchg
pop
ficomps
leave
inc
shll
cmp
adc
mov
mov
jo
ja
mov
jo
inc
sub
xlat
cli
movsb
mov
mov
icebp
scas
rcl
fstps
lcall
fwait
fs
dec
std
lret
mov
inc
popa
push
adc
cmp
iret
enter
adc
mov
mov
jl
cmp
push
add
push
xor
and
and
jnp
push
loope,pn
inc
mov
push
nop
rorb
jmp
js
lcall
cmp
inc
int
cmc
insl
lods
and
shll
add
dec
push
insb
in
in
fdivrp
addr16
movsb
les
aam
test
loopne
popa
test
mov
lock
lock
mov
add
sarl
sbb
daa
ja
jns
cmp
and
int
dec
dec
sbb
push
cmpsb
aam
pop
dec
inc
add
loopne
movsb
cmpsb
ljmp
addr16
imul
mov
sub
mov
jle,pn
push
aad
mov
sar
dec
movsl
and
iret
xchg
and
mov
ja
dec
movsl
daa
nop
push
lret
nop
imul
sub
outsb
test
shll
xchg
lret
mov
cmp
int3
cmp
jecxz
ja
mov
jo
arpl
push
fisttps
lret
div
jae
ja
mov
loopne
dec
jb
pop
push
mov
dec
aam
lods
inc
jl
jns
repz
loope
jl
mov
jmp
xor
mov
es
jns
int3
fmull
into
out
add
sub
cmpsb
neg
pusha
lahf
cmpb
push
jge
pop
jns
xchg
cmpl
and
pushf
dec
sub
out
push
xchg
or
jg
xor
pop
rorl
mov
sbb
xor
daa
pop
jge
mov
xchg
in
movsb
sbb
mov
jle
stc
and
fwait
dec
xchg
sbb
repnz
subl
push
add
imul
fldenv
push
ret
xchg
mov
ljmp
stc
pop
jno
out
xor
mov
xchg
mov
add
insb
inc
mov
in
inc
das
xchg
sbb
das
cmp
push
in
ret
rclb
je
and
icebp
inc
lret
in
sti
rol
mov
movsb
movsl
lea
inc
in
loopne
pop
cs
xchg
stos
test
into
mov
cmpl
pop
xor
movsb
js
jp
push
rclb
neg
cmp
pusha
xchg
call
popa
xchg
pusha
cwtl
xchg
stc
out
push
mov
xor
outsl
loop
ja
into
push
cwtl
call
repz
cmpb
dec
jne
sub
xchg
mov
call
ficomps
pop
mov
repz
and
jb
dec
mov
sbb
sub
lea
xchg
jecxz
call
ljmp
out
mov
test
add
iret
add
scas
jnp
std
dec
addl
xor
push
insb
xchg
scas
pop
or
sbb
mov
push
ja
popa
roll
cmp
adc
sub
adc
dec
push
dec
dec
sub
test
lds
lret
add
lds
pop
repnz
push
jns
in
es
movntps
xchg
mov
rcll
and
popf
jnp
mov
pop
mov
and
inc
cmpl
cmpsb
xlat
pop
adc
add
ret
push
mov
and
jl
pop
mov
and
rcrl
loopne
imul
ds
jbe
cs
sarl
xchg
pop
mov
or
mov
sub
push
xchg
xlat
aaa
movb
in
xorb
pop
xchg
mov
dec
sub
fwait
xchg
xor
push
andl
and
mov
mov
movsl
and
or
inc
gs
cmc
cltd
lret
arpl
stos
sub
cmp
or
loope
xchg
xor
pop
dec
cmc
shll
cmp
sub
stc
shrb
loopne
push
mov
cwtl
or
rorb
loop
cmpsb
icebp
add
xchg
jns
rolb
fsubs
dec
movsl
in
shll
push
shrb
out
inc
push
sbb
lcall
mov
sub
out
jp
xchg
sub
jle
icebp
daa
mov
out
sub
cmpsl
daa
push
push
inc
sub
aad
imul
test
or
das
sbb
adc
loop
aam
jecxz
adc
std
aas
push
push
scas
or
mov
call
and
xlat
jge
outsl
pop
ss
push
adc
out
sbb
lods
mov
aad
or
test
mov
dec
pop
outsb
outsl
xor
cmpsb
dec
loop
rorb
xor
add
and
adc
sbbb
and
lock
ret
cmp
psubusw
pop
test
jge
add
rol
sbb
shrl
push
lock
mov
ljmp
mov
sub
dec
push
outsb
mov
inc
xor
repnz
aas
mov
xchg
in
ret
mov
mov
int
cmp
mov
insb
cs
out
xchg
and
jp
dec
jl
mov
rcll
inc
or
loope
inc
inc
mov
xchg
mov
jmp
xchg
adc
lods
popa
cmp
adc
jl
mov
mov
dec
mov
add
dec
enter
mov
iret
cmp
push
jecxz
push
jg
xacquire
sahf
testl
fs
into
inc
iret
jmp
addb
jg
dec
jge
mov
outsb
add
adc
inc
push
js,pn
push
pop
mov
cltd
add
push
rolb
push
sbb
xchg
push
repnz
xor
and
dec
mov
and
add
push
push
lods
adc
mov
xchg
push
dec
sub
subl
xor
ret
lock
scas
sti
adc
nop
mov
push
lret
push
test
out
lahf
cli
push
or
mov
je
cmpsb
push
insb
iret
ret
pop
cwtl
dec
and
mov
mov
adc
pop
cmpsb
loopne
iret
sbb
push
scas
mov
or
sub
xor
fadds
in
pop
jns
push
xchg
mov
cmp
mov
hlt
jns
je
lret
and
insb
jne
mov
xchg
push
stc
or
xor
jnp
pop
pushl
popf
icebp
daa
rcrl
add
xchg
and
sub
sub
mov
xor
cwtl
mov
dec
push
aam
xor
addr16
jns
loope
imul
xor
scas
adc
and
and
negl
call
lahf
inc
mov
mov
adc
movsl
inc
ss
push
sbb
fucom
pop
shrl
xchg
out
adc
push
mov
cld
test
ret
in
push
adc
shrb
int3
test
nop
mov
or
in
bnd
add
mov
loop
xchg
xor
cltd
push
xchg
cmp
scas
insb
mov
clc
out
inc
dec
and
inc
mov
rcll
es
xchg
je
xchg
mov
ljmp
test
lods
sub
pushf
pop
push
pop
sti
ds
pusha
jecxz
fdivp
xchg
or
mov
popl
adc
xchg
sbb
xchg
mov
insb
xor
les
insb
in
add
fisttpll
fildl
push
add
pusha
mov
inc
sbb
xor
out
out
test
out
repz
stc
int
push
mov
ror
or
pop
pop
mov
inc
fcoml
dec
lock
xchg
in
xchg
pop
clc
dec
mov
mov
out
mov
mov
idiv
xchg
lock
xchg
out
and
cmp
add
cmp
mov
in
in
add
pop
pop
lods
sbb
push
sub
sbb
fmull
int3
pop
test
inc
stc
roll
jp
jo
imul
pop
mov
jge
cmp
adc
push
pushf
pop
lea
cmp
rolb
sub
or
stos
pop
xchg
inc
mov
push
mov
xor
push
fneni(8087
repz
inc
shlb
xchg
lahf
jmp
jns
sub
and
hlt
xchg
cmc
add
loop
inc
cmc
cli
fstpl
sbb
dec
sub
or
fdivl
loop
jne
mov
bound
add
xchg
loope
test
js
call
xorl
daa
lahf
push
ds
out
rcrb
add
xchg
insl
mov
mov
in
sarl
inc
lds
xor
push
imul
arpl
xchg
xchg
mov
adc
pusha
adc
add
insb
mov
test
adc
insl
rcrl
push
hlt
adc
jmp
xor
lods
xorl
adc
mov
xor
sbbb
and
and
jno
pop
dec
mov
xchg
enter
sbb
dec
lods
arpl
cmpsl
ret
pop
xchg
lds
dec
arpl
jge
xchg
inc
sar
insb
jle
popf
jno
and
mov
test
inc
fcomp
pusha
pushf
jmp
jae
jge
pop
jecxz
lds
add
xor
lock
cmp
jl
push
ds
or
push
push
insb
cs
bound
jp
dec
or
shrl
inc
or
adc
fisubl
pushf
ret
cmp
adc
pop
lcall
outsl
mov
ret
lcall
or
mov
xchg
stc
adc
sub
fnstcw
push
inc
insl
push
and
jmp
shrl
sbb
xchg
ret
mov
stc
sub
in
push
aam
addr16
jb
sbb
popf
push
loopne
icebp
bound
cs
dec
mov
pushw
push
cmp
outsb
and
xchg
add
fcmovu
data16
add
in
mov
jbe
pop
and
call
or
xchg
push
fisttps
ds
out
xchg
lret
cmpb
add
lahf
add
jl
dec
clc
int
sbb
arpl
jo
dec
scas
ja
call
pop
dec
cmpsl
cmp
sti
fcomi
aaa
jmp
xor
xorb
insb
rorl
aam
mov
daa
push
outsl
pop
pop
xor
mov
jmp
jnp
outsl
pop
sbb
sti
js
add
cmpl
les
lcall
mov
xor
mov
imul
out
std
adc
sbb
inc
dec
jg
jbe
hlt
sbb
sub
hlt
std
int3
cltd
sub
outsl
int3
mov
cltd
imul
jl
sub
push
outsl
xor
fbld
aam
push
je
mov
test
mov
pop
cmp
inc
ja
xor
cmp
sub
push
pop
sbb
fwait
arpl
in
stos
and
jne
insl
jnp
int3
movsl
mov
imul
sets
gs
jb
inc
addr16
lcall
mov
pop
jge
mov
stos
jne
sarb
ss
int3
jecxz,pt
sub
push
popw
push
inc
pop
push
jo
jmp
das
addl
out
stc
popf
jns
adc
push
sbb
adc
push
fists
mov
out
mov
stc
mov
dec
in
test
lea
call
fstps
bswap
shlb
adc
jp
pusha
out
ss
xchg
jae
and
jmp
andl
mov
xchg
out
ljmp
inc
inc
jae
mov
rorl
add
cli
outsl
xchg
xchg
pop
lock
adc
addr16
movsb
push
ret
or
cli
inc
mov
jo
xorb
or
xchg
pop
stos
fsub
clc
aas
ljmp
xchg
xor
mov
addr16
lret
mov
and
xchg
test
cld
lcall
jnp
fisttpl
pop
sub
or
cmp
cmpsb
cmp
repz
fs
mov
lods
int
fstpl
repz
arpl
ds
jo
xor
out
sbb
rdmsr
adc
es
xor
outsb
xlat
mov
sar
imul
inc
outsl
dec
mov
data16
outsb
xor
insb
inc
inc
xchg
add
pop
and
and
inc
push
dec
dec
sub
into
xchg
sub
sbb
mov
adc
out
lcall
xlat
add
sbb
adc
mov
ret
subb
lcall
out
repz
jge
mov
loope
popa
scas
xchg
pushl
daa
xchg
sbb
push
inc
das
sbbl
sub
add
and
cmp
inc
mov
testb
push
sarl
mov
or
and
jnp
mov
xor
jge
out
xlat
mov
pop
leave
loop
adc
imul
sub
mov
sti
jmp
pusha
cmp
mov
ss
jle
insl
mov
cmp
pushf
push
push
fcmovb
jnp
repnz
stc
or
fimuls
test
add
and
push
shll
roll
xor
inc
fdivrl
sti
out
inc
xchg
in
add
xor
push
dec
adc
mov
movsb
fcom
in
jb
push
mov
xor
loope
xchg
xchg
rcl
scas
setle
into
mov
sbb
and
dec
int
add
cltd
cmpsb
je
je
bnd
push
cli
xlat
ja
cmp
out
jecxz
jbe
outsl
ja
sbb
sbb
lahf
nop
dec
jnp
mov
and
movsl
mov
add
cld
mov
push
adc
jecxz
in
nop
push
dec
out
jecxz
xor
ret
addb
mov
out
ljmp
loope
xchg
xchg
sbb
or
imul
jp
incb
sub
test
mov
inc
arpl
sahf
arpl
mov
lret
dec
mov
add
push
adcl
adc
jmp
out
push
ss
mov
aas
pop
sub
push
neg
xchg
lret
lret
jnp
jecxz
adc
jecxz
adc
mov
pop
and
dec
jle
push
sbb
cmp
push
push
jecxz
inc
cs
pusha
or
dec
jp
sbb
mov
add
jecxz
sbb
fisttps
jmp
frstor
outsb
ss
mov
pop
addr16
stc
mov
and
outsb
mov
dec
mov
out
lcall
jl
stos
dec
and
call
push
ljmp
test
int
subl
mov
incl
jecxz
pop
lds
sbb
je
jg
xchg
push
mov
scas
roll
push
fdivr
jle
ret
into
les
adc
cli
push
mov
xchg
jle
or
rcrb
fstl
mov
and
dec
xor
vmovsd
jg
into
lds
push
imul
xchg
out
sub
jecxz
dec
add
sbb
pop
cmp
imul
cmpb
jns
pop
xlat
mov
out
cmpsl
jmp
icebp
lods
ret
je
repz
ret
jle
fidivrs
push
xor
xor
mov
push
xchg
mov
rolb
sub
fidivrl
ret
or
scas
push
xchg
je
jns
iret
rolb
aas
dec
dec
adcb
push
std
fistpl
insb
xor
test
in
pop
xchg
outsl
bound
dec
arpl
rorb
mov
in
aam
cmp
add
pushf
loopne
xor
mov
sarb
imul
jae
jno
sub
and
repz
inc
sbb
or
dec
neg
pop
dec
mov
jle
das
test
push
popf
lret
aam
in
pop
fldl
cmpsb
jae
cli
mov
cld
aad
lret
xchg
cmpsb
scas
les
or
jmp
inc
and
aam
stc
fmuls
xor
mov
dec
pop
je
fsts
push
stos
cmp
cmp
mov
cmp
movsb
cmp
sub
sarb
mov
nop
add
cld
sbb
aad
outsb
fidivrs
out
call
mov
fldcw
mov
xchg
mov
clc
lods
fdivr
pushf
or
cmp
lahf
xchg
mov
shlb
lods
mov
cmp
fadds
xchg
cs
sbb
rolb
mov
insl
aad
xor
shrl
loope
mov
jg
cmp
int3
inc
imul
fidivrl
mov
cmp
popa
xchg
pop
aaa
and
fsts
cwtl
and
fdivl
stos
and
std
and
cmp
mov
ffree
dec
pop
jmp
add
and
pushf
jns
sbb
xchg
sub
inc
cltd
call
out
xor
lds
cmp
sub
adc
mov
xchg
mov
ss
jnp
rcll
jp
or
mov
inc
jbe
lock
out
dec
inc
lret
dec
mov
and
mov
xchg
dec
outsl
push
js
flds
mov
call
xchg
fldt
dec
fsubrs
loope
xor
imul
hlt
sbb
lret
js
xchg
arpl
jae
stos
popf
clc
and
adc
pop
out
push
mov
test
or
imul
cmp
shrl
rolb
or
les
pop
dec
scas
mov
dec
or
loope
mov
scas
in
mov
mov
mov
pop
and
mov
in
xchg
aam
imul
cltd
dec
ret
push
lahf
cs
xor
xlat
scas
and
cmpsb
scas
jmp
push
popa
lea
inc
scas
out
push
adc
xchg
xor
sub
cmp
sti
fcmove
movsl
inc
in
std
scas
pushf
in
jecxz
adcb
and
vpxor
add
out
mov
mov
cmp
jno
xlat
dec
js
xchg
xlat
cltd
scas
loop
xchg
adc
in
and
push
mov
mov
out
pop
push
scas
stc
pop
fistpl
lcall
sbb
push
loope
add
pop
cli
data16
in
int3
aaa
add
imul
es
ljmp
push
lock
add
xchg
push
cmp
pop
test
dec
push
rcrb
mov
mov
mov
lods
std
push
loopne
cs
dec
jg
xchg
rcr
inc
jmp
pop
xchg
loop
popf
aam
icebp
pop
jmp
out
fwait
mov
push
jnp
mov
inc
leave
mov
mov
loop
fs
lcall
aam
inc
sbb
push
cmp
mov
fwait
repnz
rcrl
mov
dec
xchg
enter
sbb
or
fwait
repz
mov
ja
push
dec
mov
mov
in
push
mov
aad
rol
in
pop
pop
das
xchg
js
rcrl
loop
ljmp
push
dec
xlat
push
fdiv
pandn
out
add
dec
and
adc
xchg
cltd
mov
pop
sub
fsin
lock
jge
and
jb
daa
fucomi
lock
test
ss
pop
ja
aaa
or
sub
and
pop
pop
cld
xchg
test
dec
fists
sub
inc
fwait
adc
aam
clc
in
xchg
mov
adc
mov
lock
call
jb
adc
cmp
test
mov
jne
imul
je
jle
and
stc
in
je
fwait
inc
mov
sti
aaa
ljmp
mov
sbb
jp
sahf
mov
jae
xor
jge
movsl
cmovnp
daa
sbb
in
xchg
lds
hlt
cltd
mov
xor
pop
sbb
popf
mov
lods
xlat
hlt
int
scas
fidivl
mov
dec
pop
mov
pushf
notl
cwtl
pop
pop
adc
lret
jae
or
mov
pop
jmp
repnz
into
icebp
mov
sub
lret
and
popf
mov
xor
sub
cld
mov
cld
mov
pop
pusha
pop
nop
jns
fisubl
xor
scas
sti
cmp
sbb
adc
hlt
sbb
sbb
scas
mov
add
dec
mov
jae
add
or
push
fs
mov
out
mov
pop
in
mov
inc
ret
ja,pt
rcrb
add
adc
test
mov
outsb
sbb
mov
stos
and
scas
testl
xchg
popa
imul
mov
testl
mov
mov
pop
jg
push
sub
data16
jp
test
rorl
jne
adc
xlat
cmp
outsb
addr16
pop
fcompl
shll
cs
test
test
sub
mov
pop
push
repnz
or
insb
xor
mov
cmp
mov
jmp
push
and
mov
fs
movsl
mov
push
fiadds
dec
daa
mov
shll
jl
sarl
out
sahf
dec
cs
insb
and
push
xchg
mov
mov
mov
mov
mov
mov
loop
iret
cmc
or
mov
sbb
andb
fcoml
push
sub
aas
jle
cwtl
je
xchg
test
dec
add
int
pop
jmp
jae
mov
lret
lahf
push
xchg
and
xlat
jle
cwtl
xchg
popa
test
jbe
push
icebp
setns
in
arpl
dec
popf
mov
fistl
stos
shlb
scas
shr
lock
or
mov
mov
sub
mov
outsl
mov
pop
cmp
fdivrs
imul
lds
push
scas
push
sbb
bound
xchg
xchg
and
lret
call
pop
dec
verw
arpl
jp
pop
or
push
xchg
adc
repnz
jg
rcl
cmp
mov
mov
scas
xor
cmp
nop
and
mov
xor
scas
sub
push
push
sub
lahf
xchg
fildl
inc
mov
xor
shll
mov
jb
fdivrl
cmp
daa
and
daa
xor
stc
daa
inc
lcall
test
add
inc
in
xor
cld
cld
jb
jbe
xor
push
push
jmp
sahf
scas
je
aaa
adc
cmpsb
add
cmp
push
popf
sbb
pusha
xor
cmp
jae
idiv
xor
dec
shll
leave
lret
pop
add
cli
push
pushf
hlt
cmp
je
inc
insl
xchg
in
inc
jmp
roll
mov
xchg
fwait
xchg
loop
stos
mov
nop
push
inc
movsl
jecxz
mov
cmp
jge
fidivrs
jge
pop
jl
add
push
data16
cmp
sub
bound
jge
add
jo
add
test
ret
cmp
push
xor
test
pop
pushf
or
pop
jne
pop
inc
pop
daa
ret
dec
or
push
addr16
test
mov
and
ret
pop
out
push
test
xchg
xchg
aaa
ljmp
ljmp
std
push
dec
xchg
call
dec
stos
ja
add
arpl
pop
push
in
aas
xor
mov
ds
adc
dec
mov
arpl
fstl
dec
call
mov
jae
bound
jge
mov
add
xor
dec
xor
push
test
mov
stc
jo
sub
dec
lahf
lods
insb
jl
ljmp
inc
push
gs
shl
sbb
mov
cwtl
dec
xchg
lods
pop
addb
add
inc
push
fsubrs
xchg
dec
cli
stc
jb
ja
rol
and
clc
push
pop
lret
jmp
dec
test
or
push
loope
int
popa
pusha
iret
faddl
inc
and
pop
ljmp
and
push
jp
sub
test
dec
jnp
lret
inc
pop
add
cmp
out
push
cmp
clc
cmpsl
dec
in
sti
mov
repz
cmp
test
inc
fnsave
dec
and
loopne
int
dec
lea
xor
nop
shll
andb
mov
cmp
cs
addr16
push
lret
popa
xchg
flds
xchg
adc
xor
hlt
roll
jb
cmp
jle
jl
icebp
clc
mov
outsb
sbb
xor
nop
mov
cmp
stos
mov
mov
pop
cmc
jl
jg
daa
dec
push
cwtl
les
jb
adc
lea
cltd
fs
fcomip
icebp
xlat
sub
pop
mov
xchg
es
fcmovu
mov
fdivl
dec
mov
iret
cs
mov
inc
xchg
das
addr16
cmpsb
bound
insb
movsbl
pop
test
xchg
mov
sub
mov
add
cmp
sub
movsl
movsb
xchg
or
xchg
or
sbb
das
xor
cmc
cltd
test
test
ss
push
mov
cmp
dec
sbb
fs
adc
fs
jb
movsb
and
sbb
mov
jo
popl
dec
in
cmp
imul
push
jmp
xor
inc
aam
dec
dec
or
out
dec
repnz
adc
jno
cwtl
sahf
rcll
inc
and
in
cwtl
cwtl
repz
xor
ja
xor
aad
jg
subl
xor
mov
adc
iret
mov
xor
ds
push
push
mov
sbb
sub
xor
cmp
cmp
inc
cmpsl
mov
mov
je
daa
je
repz
xor
push
mov
mov
mov
mov
xor
pusha
mov
aas
xchg
xchg
inc
ljmp
xchg
xor
bound
ret
lods
outsl
mov
xadd
pusha
lahf
lahf
es
or
dec
lods
and
popa
bound
mov
ds
outsb
pop
mov
stos
sub
and
jnp
mov
mov
adc
imul
inc
or
out
leave
lret
push
or
sti
cmp
and
lods
test
mov
push
cmp
out
xchg
ret
inc
add
jp
cwtl
addr16
mov
lcall
fsubrl
adc
xor
pop
and
lods
hlt
addr16
xchg
and
or
test
lret
xor
inc
push
xchg
dec
outsl
push
pop
adc
rorb
adc
bound
das
les
push
mov
dec
enter
and
push
and
fildll
xchg
lock
xor
mov
fsubs
lahf
shll
or
in
pop
adc
dec
mov
dec
cld
in
jmp
and
lds
mov
cs
int3
push
push
cmc
outsl
ret
pusha
cltd
fs
int
push
mov
jnp
inc
sbb
bound
xor
stos
and
sbb
xchg
pop
cmp
in
out
lods
jae
dec
mov
pop
test
fistl
push
ljmp
lret
cmp
inc
xor
push
int
mov
push
xchg
push
xor
xor
cmp
movsb
js
jp
add
not
test
arpl
stos
lret
xchg
imul
ja
inc
sub
andl
daa
pop
pop
mov
fcoml
inc
insl
dec
arpl
jge
add
and
in
push
and
leave
mov
xor
cmp
xchg
push
cmc
cmp
test
mov
sahf
jne
inc
imul
mov
cmp
mov
xchg
mov
cmpsb
mov
add
cmp
mov
dec
nop
mov
and
fs
andb
inc
lods
les
xor
in
jle
jns
movb
in
sub
pop
add
mov
sub
mov
sub
les
sub
sbb
pop
mov
inc
adc
repz
jbe
cmp
out
jl
mov
mov
rolb
or
icebp
cmp
scas
mov
mov
js
dec
cwtl
fildl
sbb
cmp
cmpsb
jl
mov
jg
inc
mov
sbbb
adc
mov
or
and
fldenv
das
pop
jno
test
mov
das
addb
xor
test
jmp
sbb
adc
adc
popf
adcl
sbb
inc
fidivl
mov
push
dec
mov
jo
ja
mov
inc
or
mov
out
lcall
sbb
pop
mov
xchg
out
sahf
pop
or
xchg
orb
jns
push
pop
daa
sbb
push
neg
call
mov
push
pop
loopne
jge
push
pop
test
inc
fnstenv
mov
sub
cmpl
mov
or
mov
in
mov
imul
xor
inc
xor
add
cli
cmc
pop
pop
mov
pop
jle
mov
iret
sbb
or
push
cmp
add
mov
mov
test
adc
xchg
lods
pusha
cmpsb
inc
sub
mov
adc
sub
dec
nop
pop
movsl
or
fcoms
cmpsb
sbb
pop
cltd
ljmp
sar
adc
adc
fwait
mov
mov
mov
mov
dec
test
push
insl
mov
push
xchg
adc
xor
pop
call
mov
and
addr16
icebp
js
push
lret
push
loope
and
stos
andl
mov
out
dec
sbb
mov
cltd
mov
imul
call
imul
xchg
or
cmp
jge
nop
hlt
add
xchg
xchg
enter
arpl
jl
ja
dec
aas
movsl
ds
test
push
arpl
push
idivl
pop
push
push
fstpt
and
xchg
les
jl
dec
repz
pop
fisttpl
dec
ja
popa
mov
add
rcrl
sub
cld
and
out
clc
or
jb
push
icebp
jle
mov
adc
mov
push
inc
mov
scas
ljmp
fistps
xlat
jae
inc
aad
sbb
mov
in
xchg
mov
and
xchg
dec
inc
cmpsb
sub
flds
add
icebp
cltd
dec
sub
and
movsb
arpl
ret
rcll
mov
mov
or
out
inc
stos
add
dec
shlb
test
aam
adc
adc
subl
mov
push
xor
mov
fiaddl
dec
add
jl
test
hlt
fwait
addr16
xor
inc
dec
cwtl
mov
cld
xchg
adc
xor
inc
jmp
xor
pop
inc
push
mov
jp
sub
loop
insb
pop
mov
shl
movsb
mov
xor
fidivrs
fcoml
fcomp
sub
or
sub
mov
cltd
es
dec
dec
sub
xor
js
clc
ljmp
enter
and
sbb
lret
ljmp
pop
dec
push
mov
fstps
lcall
jne
in
rorl
or
jecxz
xchg
mov
pop
aam
pop
lret
xchg
push
ljmp
hlt
sub
and
push
push
dec
popf
pop
mov
fcoms
ljmp
mov
loope
sbb
mov
rcll
mov
adc
aad
mov
pop
call
add
je
in
aad
inc
out
loop
movsl
and
pop
adc
cmp
fs
clc
call
add
jge
and
jnp
scas
fisttps
out
lea
pop
fnstcw
jmp
jecxz
add
push
es
mov
lret
movsb
mov
mov
sbbl
adc
test
jno
aaa
jle
pop
daa
and
adc
jbe
sbbl
call
push
push
mov
pop
inc
cmp
sub
outsb
in
in
and
adc
mov
sti
lds
adc
in
enter
adc
call
push
mov
icebp
push
mov
jae
decb
iret
jb
xchg
sbb
xor
jmp
cld
mov
add
pop
fcomps
mov
pop
and
add
cmp
lds
ljmp
and
test
adc
sbb
test
xchg
decb
jbe
scas
xor
loopne
shlb
dec
push
xchg
pop
in
add
das
cmp
dec
add
mov
push
lret
xchg
cli
out
cwtl
pop
lret
mov
inc
xchg
es
push
mov
or
je
rcrb
cs
push
add
adc
pushf
dec
add
dec
icebp
jo
stos
ss
orb
cmp
in
push
in
out
sub
and
sub
or
mov
mov
jl
cmp
fldcw
mov
pop
sahf
std
mov
jmp
jno
add
mov
add
bound
fs
sbbl
mov
mov
sub
jne
lods
push
inc
arpl
cmp
hlt
jl
out
lock
sub
ret
add
mov
or
call
xchg
or
cmp
push
push
stos
xchg
je
repnz
sbb
ret
test
xor
mov
sbb
outsb
dec
add
bound
adc
push
lahf
pushf
mov
into
loop
loope
call
loop
and
lcall
rclb
push
js
data16
outsl
stc
ret
mov
jbe
icebp
ret
or
sub
and
call
inc
enter
ds
jnp
push
mov
inc
rolb
xchg
call
xlat
xor
lcall
ss
mov
jno
stos
dec
xchg
clc
push
xchg
sub
push
dec
inc
pop
lods
into
insl
lods
mov
inc
jg
lret
daa
scas
sub
mov
sbb
mov
push
stos
stos
rcrb
and
in
mov
dec
xchg
into
or
lcall
adc
jp
pop
mov
xchg
push
test
mov
out
pop
dec
jmp
push
push
sti
insl
mov
mov
fptan
mov
pop
sub
sbb
imul
mov
xlat
cmp
xor
mov
adc
inc
filds
mov
or
and
popf
loope
lea
out
ret
push
and
sahf
stos
out
cmp
stos
xchg
push
aas
aaa
xchg
leave
and
mov
mov
and
lock
dec
or
jmp
sub
mov
pop
mov
push
mov
test
or
sbb
adc
loop
lods
pop
inc
fdivl
or
pop
ljmp
push
jl
fsubrs
xchg
mov
xor
inc
adc
fsubrs
mov
jbe
pop
call
out
sbb
cmp
mov
cli
xchg
and
push
test
out
xlat
mov
pop
mov
sub
pop
pop
jb
test
sbb
pop
mov
aas
adc
addr16
andl
rcrb
add
or
mov
out
pop
and
icebp
xor
cmc
jg
xchg
adc
pop
std
cmc
sub
inc
mov
outsl
inc
stos
cmovns
outsb
js
add
cmp
stos
fcmovu
xchg
lds
pop
pop
sbbb
repnz
jge
inc
andb
mov
rcr
adc
jecxz
jl
lds
call
cld
push
adc
add
xor
dec
mov
lods
js
jnp
aad
jl
inc
fnsetpm(287
mov
lods
adc
repnz
sbb
dec
push
pop
inc
xchg
mov
fldenv
in
insb
mov
mov
xlat
xchg
push
aaa
sarb
xchg
lods
mov
cmpsb
push
push
jl
add
push
push
jne
pushf
pop
ret
into
push
mov
sub
push
cmp
scas
in
add
cli
push
sbb
clc
and
add
not
ret
icebp
sbb
or
pushf
or
sbb
push
xor
jbe
jmp
mov
iret
cmc
push
shll
pop
int
push
gs
mov
or
ret
mov
loop
sahf
xlat
mov
mov
leave
data16
ds
sahf
test
aas
fdivrs
rorl
aas
dec
in
cmp
push
orl
pop
jmp
inc
fistl
shrl
andl
jne
incl
scas
mov
div
jle
test
scas
add
inc
fs
nop
jbe
xchg
je
loopne
push
or
lea
aas
fistl
mov
pop
mov
enter
push
lahf
pop
xchg
cwtl
mov
addr16
mov
xchg
adc
lahf
mov
movsb
push
jle
jo
push
lds
repz
mov
sub
repnz
into
insb
or
lret
push
test
imul
xchg
mov
inc
mov
xchg
dec
xchg
jb
dec
sti
add
xchg
js
daa
test
jns
add
mov
popa
xor
add
mov
out
xchg
mov
gs
or
jne
or
out
xchg
cld
js
icebp
pushf
int3
add
lods
aam
jne
pop
adc
xor
xor
lock
xchg
test
lcall
jo
and
divb
dec
dec
stos
mov
push
pop
popf
call
notb
inc
out
jmp
dec
pop
mov
sbb
inc
mov
jne
out
mov
fadds
lods
inc
cltd
add
test
push
clc
ss
xchg
push
addr16
cmpsb
xchg
jecxz
outsb
loopne
jge
data16
imul
pop
dec
inc
aad
cwtl
fdiv
push
xor
xchg
mov
jp
and
or
cli
pop
ficomps
lds
cmpsl
jmp
inc
and
xchg
pop
test
sub
pop
aad
iret
sub
stos
test
mov
sub
test
mov
push
add
mov
mov
inc
xchg
rorb
adc
jo
dec
lock
or
cmpsb
jae
ret
or
xchg
or
je
sub
repz
cmp
aad
push
lds
cmp
and
push
rolb
inc
testb
mov
inc
mov
mov
cmpsb
pop
push
es
xor
repz
cwtl
scas
sub
dec
adc
xor
jmp
pop
mov
and
xlat
and
popf
mov
fs
mov
mov
inc
out
xchg
fistps
adc
mov
sbb
lahf
pop
xor
mov
add
inc
add
int3
int3
xchg
rcl
arpl
push
ds
pop
cmp
pop
scas
add
sti
ljmp
pop
je
jne
negb
pop
das
jno
xchg
push
jmp
movsb
flds
or
pop
scas
cld
push
pop
jo
sub
lock
int
aaa
mov
sub
lcall
call
pop
mov
mov
subb
and
test
fucompp
ljmp
sub
sub
int
cltd
in
sahf
mov
insb
test
sbb
out
sbb
mov
sbb
fs
mov
cmpsl
in
adc
iret
cmpsl
aam
stos
sbb
inc
out
enter
and
es
mov
clc
movsl
jae
pcmpeqd
pop
pushf
sub
or
shrb
or
sbb
add
and
mov
pop
cmpsb
push
lods
xor
insb
pop
xor
fcomps
les
clc
dec
or
pushf
ja
or
inc
push
mov
adc
mov
or
repz
in
insl
sbb
sbb
test
pop
mov
pushf
jae
pop
pop
psllw
lods
in
inc
mov
mov
test
push
mov
fadd
xor
sub
jne
sub
xchg
mov
pop
push
dec
or
mov
ljmp
cltd
mov
xor
lcall
pusha
pop
push
adc
imul
xorl
push
pusha
lcall
mov
into
mov
adc
add
mov
stos
fbstp
enter
roll
pop
cmp
stos
decl
gs
ljmp
clc
leave
pop
fucomp
inc
loop
stos
in
repz
ljmp
lret
lahf
mov
push
inc
outsl
leave
subl
cmp
sbb
test
shrb
jp
inc
js
push
popf
fnsave
or
mov
mov
les
xchg
sbb
enter
dec
lcall
cli
cmp
test
push
dec
mov
sti
imul
in
or
imul
cmp
sbb
push
imul
push
add
ret
pushf
cmp
adc
mov
adc
mov
ss
fildll
popf
insl
and
lret
pop
shll
jo
mov
cmp
push
je
mov
cltd
ja
jno
mov
mov
in
mov
fistpl
sbb
mov
in
xor
and
xchg
jno
xchg
cmp
push
popa
push
push
out
dec
lahf
andb
xlat
sar
pop
lds
or
sbb
or
adc
sub
movsb
popf
fsts
mov
mov
lcall
xor
ret
sub
inc
sbb
popa
cmc
lcall
lods
dec
mov
jbe
cmc
or
fnstcw
jne
pop
xchg
shlb
ret
dec
push
nop
shll
jle
pop
inc
push
fdiv
mov
repz
out
pop
shll
and
sub
nop
leave
dec
and
into
pop
jne
xchg
xchg
mov
imul
xchg
or
sub
cmp
dec
stc
std
and
js
gs
std
add
ja
dec
push
xchg
sub
adc
outsl
inc
xorl
enter
cmpsb
stc
pop
sahf
sahf
call
leave
add
mov
sarb
daa
nop
lea
xchg
dec
ja
pop
inc
jg
dec
xchg
or
ret
mov
xor
mov
dec
mov
push
loope
xor
sub
or
dec
imul
dec
pop
push
mov
and
jns
sub
cmp
insl
pop
mov
aad
sar
adc
push
jmp
in
add
add
aad
out
adc
movsl
and
pop
pop
add
fiadds
sbb
and
add
inc
sbb
sub
inc
sub
or
imul
sti
mov
mov
mov
add
es
xorb
movsb
jbe
aas
jno
sub
daa
in
push
push
mov
fildll
pushf
scas
mov
pop
sbb
sub
mov
repnz
lods
mov
cld
xor
out
cmp
scas
fimull
cs
mov
cmpsl
pop
adc
sbb
sub
xlat
xlat
outsb
xor
insl
cli
xlat
mov
xchg
imul
mov
jae
dec
inc
rcl
jnp
int
jmp
mov
inc
or
cmove
insl
jbe
mov
aaa
and
test
mov
mov
mov
stc
xor
popa
movsbl
flds
test
int
xchg
out
popa
cmp
mov
test
loop
sub
add
push
cmp
mov
and
pop
gs
cld
xchg
jb
jns
ret
fidivrl
movsb
rcrb
fdivp
cmc
add
xchg
and
xchg
lods
lret
add
daa
sahf
push
push
sbb
mov
fcmove
jecxz
xchg
fldl
push
scas
faddl
inc
scas
scas
mov
int3
xchg
sbb
push
scas
fidivrs
inc
sub
jge
pop
cltd
cli
pop
dec
mov
in
xor
ret
and
dec
and
dec
inc
fstpt
add
adc
aas
mov
cmp
lret
xlat
movsl
dec
movsl
hlt
outsl
mov
into
adcl
push
push
jecxz
pop
push
mov
fsubs
mov
nop
aam
xchg
cmpsb
or
lods
int
out
fimuls
lret
movsb
insb
decb
mov
rcrb
cmp
or
xor
xorb
inc
inc
add
and
adc
xor
in
push
xchg
nop
adcl
push
mov
cmp
inc
movsb
mov
outsb
inc
pop
in
sti
mov
inc
testb
cmpsb
aam
inc
dec
ficompl
cmp
stos
mov
sub
lods
pop
xor
call
sbb
adc
pop
push
ret
lock
js
xchg
push
mov
xchg
sbb
mov
adc
popa
cmpsl
fld
push
jmp
in
loopne
sbb
inc
sub
dec
loop
mov
ss
and
xchg
hlt
arpl
adc
shlb
adc
sbb
fdivrs
add
add
fmul
sub
xor
sbb
inc
add
mov
sbb
std
mov
inc
in
sub
jle
xor
or
push
aas
aam
in
cld
mov
jmp
imul
dec
dec
push
xor
add
mov
ja,pn
push
sub
js
sahf
and
pop
leave
jl
xchg
leave
xor
xchg
out
mov
pop
or
imul
inc
sub
js
out
jg
stos
flds
out
ss
inc
iret
push
cwtl
sbb
ret
inc
ret
jno
sahf
lret
out
cmp
xorl
inc
mov
or
dec
ret
xchg
stc
sub
jp
pop
cmc
lds
iret
mov
sub
jns
dec
inc
xor
pop
imul
rcll
jb
filds
jp
aaa
or
dec
stos
pushf
and
in
pop
insb
jae
jmp
cmc
xchg
xchg
mov
jno
das
jg
xlat
sahf
pop
mov
rclb
mov
daa
pop
outsb
gs
mov
adc
push
rcr
push
std
push
out
xor
jge
nop
cmp
popa
jno
sub
inc
inc
mov
ffree
mov
mov
pop
adc
es
lret
push
xchg
jge
jae
pop
or
clc
mov
push
int3
out
jmp
in
mov
clc
stos
mov
test
inc
clc
repnz
aas
xor
cld
dec
pop
sbb
cmpsb
mov
xor
xchg
push
hlt
cmp
ss
xchg
es
cmpsb
sub
pop
popf
pop
push
cwtl
pop
jb
bnd
xlat
loope
les
ret
shll
jmp
ljmp
pop
lea
mov
mov
in
add
leave
in
add
push
xchg
stc
insb
or
sub
pop
dec
insb
stc
std
push
in
sub
aaa
mov
es
cmp
mov
jge
push
xor
sbb
xchg
pop
dec
xor
sbb
pop
in
mov
fidivl
fs
push
adc
mov
and
or
nop
movsl
pop
mov
mov
aas
pop
and
jb
add
andb
ret
xchg
dec
mulb
sub
loop
xchg
sub
mov
arpl
xchg
jp
pop
cmp
push
jg
sbbl
sbb
or
sbb
lar
push
add
stc
shrb
mov
sbb
jo
inc
mov
jmp
imul
int
rcll
ljmp
dec
and
test
dec
push
movsl
lea
adc
ja
mov
aaa
jle
mov
dec
pop
icebp
ljmp
insb
nop
xchg
xchg
adc
xlat
aaa
lcall
in
mov
xor
mov
in
js
popf
inc
icebp
movsl
ljmp
gs
sahf
mov
std
adc
and
inc
fs
aad
push
or
je
mov
or
ja
xchg
mov
push
jb
arpl
hlt
popf
fwait
jp
out
inc
leave
gs
cmpsb
xor
sbb
and
aam
push
jnp
or
cmp
mov
or
pop
pusha
ds
xor
jo
int3
push
sub
mov
vcvttps2dq
test
bound
cmp
pusha
aaa
mov
fiaddl
mov
roll
je
loop
pop
pop
enter
cmp
outsb
inc
inc
dec
pop
sbb
gs
insb
aam
mov
roll
dec
sub
inc
pop
subb
fistpll
and
cld
mov
pop
stos
add
imul
add
fs
loopne
lcall
xlat
lock
add
jb
dec
adc
mov
in
es
cmp
xor
inc
jnp
push
lgs
pop
cld
repnz
push
int
cmp
cmp
loope
je
ja
sub
cmp
push
fs
jb
inc
fs
sbb
push
fwait
in
push
cld
push
jp
fnsave
mov
cld
lcall
and
xchg
scas
cmp
cmp
xchg
sub
pushf
inc
mov
testb
ret
and
ljmp
pop
lods
shll
xlat
inc
out
out
mov
add
aaa
or
sub
pop
out
mov
out
pop
fdivl
mov
jnp
lahf
int3
fidivl
outsl
push
es
push
imul
push
and
rcrb
cmpsb
cs
daa
mov
and
cmpsl
ror
cli
iret
sbb
mov
lahf
mov
jle
pop
shlb
lcall
mov
dec
pusha
imul
daa
adc
and
test
pop
xchg
int3
cwtl
push
sbb
xor
mov
enter
xchg
xchg
mov
xor
in
pop
sub
xor
xchg
sbbb
inc
outsb
cld
lods
lods
adc
push
or
push
push
mov
in
mov
ja
stos
cmp
push
cltd
ljmp
inc
and
or
add
push
mov
pop
loop
xchg
shrb
clc
sbb
add
push
lods
shll
lret
xchg
movsl
enterw
sub
mov
jns
adc
cmovs
mov
or
inc
popf
fldt
push
pop
cmpsl
movsb
shrb
sub
push
scas
xchg
cld
mov
rcll
int3
push
out
lret
add
sub
jne
mov
repz
sub
mov
jo
lahf
sub
jno
jle
sbb
js
xchg
adc
xchg
jnp
mov
pop
inc
clc
jle
mov
and
jg
lret
rcll
scas
mov
cmp
xchg
pop
mov
mov
cltd
cmp
lds
jmp
shll
test
xor
or
jo
xchg
or
ficompl
mov
inc
imul
sub
jno
sbb
cli
sub
and
inc
in
loop
push
mov
nop
sub
lods
jns
inc
cmp
das
mov
das
inc
mov
loop
sub
sbb
popa
aad
mov
aas
sub
jns
in
xchg
ret
dec
mov
xchg
decb
pop
shlb
and
int
xorl
jne
js
sub
cltd
int
cld
out
cld
mov
jp
xchg
dec
dec
orl
pop
adc
dec
inc
shlb
clc
adc
sub
mov
scas
jmp
xor
arpl
cmpsb
jns
frstor
les
cwtl
pop
push
mov
and
mov
jnp
push
xor
es
mov
in
aad
push
mov
ss
cmp
data16
leave
push
outsb
pop
sahf
leave
popf
push
loopne
out
inc
cltd
cmp
mov
or
jb
mov
lods
mov
lahf
sub
cli
out
mov
sbb
ja
adc
cmp
leave
hlt
jmp
repz
mov
inc
test
jg
mov
js
dec
xor
test
mov
sbb
or
fwait
xchg
daa
cs
loopne
mov
incl
mov
inc
mov
das
cld
aas
dec
lahf
mov
xchg
sub
inc
stos
pop
imul
sub
stc
scas
andb
aas
push
fwait
xchg
into
sbb
fs
push
jmp
add
xorb
cmp
pop
ficoml
sub
push
test
jle
in
inc
or
mov
scas
lcall
cmp
xchg
jecxz
push
stos
jbe
imul
cmc
cmpl
jge
add
ret
push
lds
shr
andb
adc
push
rcll
mov
data16
mov
xchg
fadds
adc
dec
jb
or
add
out
iret
cltd
xor
jge
push
fwait
std
jl
loope
inc
shlb
and
aam
clc
pusha
inc
enter
mov
push
es
mov
out
repz
hlt
add
push
cmp
inc
test
iret
loopne
pop
sub
jle
xor
xor
xor
daa
xor
movsb
shlb
push
jno
sbb
fs
mov
scas
divw
mov
mov
mov
es
push
je
pop
popa
xor
test
jecxz
loop
xor
jbe
lahf
fisttps
std
outsb
mov
inc
cltd
mov
ljmp
xor
mov
pop
test
je
lods
fdivrs
mov
sbb
add
sub
cmpsb
in
mov
and
and
add
orb
and
bound
cmpsb
xchg
das
popf
sub
xor
ret
inc
repnz
fldl
sti
aad
fsubs
in
repnz
loopne
sub
movsb
dec
xchg
decl
daa
mov
cmc
jne
into
movsl
inc
ds
repz
inc
mov
bound
sbb
sbb
popa
out
addr16
cwtl
jge
pusha
repz
sub
rorb
push
ljmp
xchg
into
loop
mov
aaa
out
dec
fdiv
out
sbb
push
mov
cmp
out
push
adc
movl
jge
and
mov
int3
xor
jo
pop
xchg
push
lahf
inc
scas
fisubl
and
loope
cmp
fldenv
test
and
adc
ljmp
pop
inc
xlat
dec
cmpl
movsl
pop
sahf
sub
fdivl
jmp
sbb
push
int
out
mov
insl
mov
add
jb
xchg
push
mov
adc
jae
mov
push
psllw
mov
das
xorb
scas
movsl
adc
cmp
aas
pop
test
mov
jnp
iret
cmc
stc
in
mov
cmc
stc
flds
xor
inc
jmp
clc
and
and
aaa
in
dec
inc
adc
jle
add
test
mov
out
in
xchg
out
loope
shrl
in
cmp
out
mov
insb
mov
jecxz
out
xchg
push
jge
jo
insl
and
je
fld
rorl
out
xor
cmp
stc
pop
or
and
inc
outsl
loop
mov
mov
add
mov
dec
push
addr16
cld
xchg
pop
mov
out
xchg
in
into
fisubl
and
repnz
jae
push
fstps
ret
pop
sub
test
and
mov
xor
inc
adc
ss
addl
mov
mov
xchg
or
lea
shl
repz
mov
sbb
jb
negl
fchs
pop
shr
and
icebp
andl
mov
sub
cwtl
sub
ss
sbb
faddl
inc
mov
inc
xor
dec
jmp
sub
add
fisttpl
sub
test
pushf
add
inc
pop
add
cld
xor
in
into
aam
mov
inc
xchg
and
int
xchg
mov
push
add
inc
mov
or
ret
xor
jno
sbb
cwtl
mov
cmp
mov
jecxz
fidivrl
sbb
je
stos
outsb
cmp
data16
jmp
mov
or
andnps
sahf
inc
inc
mov
mov
jp
push
mov
mov
lods
imul
outsb
repnz
lods
add
xor
sub
push
cmp
cmp
rcl
hlt
mov
mov
adc
add
xor
test
sub
dec
in
add
mov
jecxz
fimull
cmp
cmp
sbb
cmpsl
arpl
test
adc
outsb
inc
ret
mov
ja
cli
into
into
fcoml
mov
mov
cltd
sbb
inc
cmp
or
add
mov
xchg
or
mov
mov
mov
ds
ret
sbb
add
loopne
sub
pop
push
pop
pop
cmpsb
loope
push
mov
cmpsb
inc
xor
lods
shrl
enter
cltd
pop
mov
add
jg
cmpsl
push
dec
jbe
lahf
jne
pop
fdivrl
cmp
out
or
sahf
mov
insl
jns
in
loope
pop
call
xor
rolb
fbstp
pop
mov
aaa
mov
psllw
rorb
sbb
inc
cli
mov
inc
xchg
adc
repz
fistpll
out
mov
imul
xchg
rcrl
jns
in
out
xchg
adc
and
inc
or
lods
jb
sub
rcr
std
icebp
sbb
sbbb
jg
mov
daa
outsb
or
outsb
sbb
lods
into
adc
in
loope
dec
cwtl
and
sub
rcll
fwait
pop
addl
movsb
test
jbe
push
xor
adc
push
mov
addr16
sub
idiv
ficomps
test
add
xchg
pop
xchg
outsl
dec
mov
push
add
les
jae
pop
jge
lret
lods
call
cmp
aam
cwtl
sbb
jl
rclb
ret
and
add
test
hlt
lret
fdivrl
addr16
cmp
pop
repnz
scas
inc
rolb
in
mov
mov
add
mov
sti
adc
or
repz
movsl
push
or
lock
cs
and
lahf
shrl
pop
or
mov
int
dec
ss
mov
mov
fsubrl
movsb
mov
pop
xchg
sbb
clc
adc
cmpsb
mov
nop
test
cld
pop
pop
push
dec
fsubl
sahf
inc
inc
insb
push
add
cli
cmp
pop
cmp
xchg
push
movsb
fbld
ret
xor
sahf
push
cmpsl
outsl
sub
mov
inc
dec
lods
loop
rcrl
xchg
aas
inc
cmp
adc
mov
out
xor
repnz
sti
mov
push
inc
sbb
out
cwtl
shll
jmp
xchg
or
popa
mov
lcall
rcrl
or
bound
cmp
mov
add
sbb
in
shlb
icebp
sbb
stc
pop
les
jae
cmp
sub
stos
fs
pop
or
mov
xor
push
ja
loop
mov
push
cs
jg
adc
mov
xor
fcom
ljmp
subb
negb
sbbb
push
adc
sahf
enter
insb
cmp
mov
call
inc
mov
imul
mov
push
loop
js
push
inc
xchg
cs
movsb
push
sbb
xor
inc
test
cmp
div
push
adc
je
xor
push
mov
and
mov
lahf
push
push
js
dec
sbb
mov
xchg
cwtl
pop
dec
adc
jb
push
push
xchg
addl
adc
jecxz
pop
lods
ja
hlt
ret
pop
push
dec
dec
xchg
imul
outsl
jp
push
movsb
ffreep
or
jb
fnstsw
dec
addl
add
and
cmc
rcr
jl
icebp
cmpl
jmp
mov
mov
pop
in
or
aad
test
fwait
pop
mov
sarb
gs
je
jns
ja
test
sbb
add
push
outsb
inc
out
and
cmc
sti
sub
jecxz
aas
mov
inc
mov
loope
popf
jae
imul
and
and
mov
fisttpl
xor
hlt
sti
ja
mov
or
in
scas
daa
ret
xor
repnz
cmpsl
xor
int3
mov
in
cwtl
push
cmp
jns
hlt
xor
dec
push
or
pop
push
scas
lret
push
cmp
cmp
dec
mov
loopne
movsb
inc
and
test
daa
mov
pop
push
int3
push
mov
jl
ret
jo
adc
xlat
mov
cmp
lret
add
mov
hlt
fisubrs
test
bound
std
push
ficomps
jae
cltd
dec
scas
lods
cli
pop
iret
movl
xor
mov
push
fcoml
hlt
fldt
das
nop
add
inc
ss
cmp
scas
pop
add
outsl
jmp
cmp
pop
fcoml
pop
jb
pushf
push
inc
xor
mov
push
cmc
mov
movsl
pop
push
shlb
or
imul
xchg
xchg
cld
mov
repz
jne
cmp
adc
xchg
cmpsl
movsb
add
jno
ds
xor
cmc
pop
or
jmp
loopne
mov
sub
cld
dec
ds
pop
sub
or
xor
xor
and
mov
imul
subl
popa
test
cmpsb
sbb
stc
imul
push
imul
ret
ljmp
outsb
testl
in
stos
pop
pop
shll
repnz
pop
mov
push
push
inc
rolb
sbb
movsb
sarb
fmull
push
mov
inc
cmp
mov
aad
mov
movl
push
scas
pop
fnstsw
cmc
xor
sbb
enter
push
clc
push
rcll
inc
cld
xchg
lcall
inc
jo
inc
insl
sbb
dec
mov
int
dec
mov
out
cmc
fnstcw
enter
pop
ja
int
fisttpl
sbb
jmp
cmp
cmp
jge
xor
sahf
pop
adc
enter
ret
cmpsl
divl
jno
cli
xchg
add
arpl
cmp
pop
js
dec
adc
rolb
data16
sub
dec
xor
out
push
mov
outsl
out
sub
push
add
test
sbb
subl
inc
je
shll
imul
xchg
mov
rolb
mov
mov
jg
mov
dec
mov
lock
jae
jb
cwtl
pusha
xor
jb
xchg
xlat
sub
sbb
push
testb
cmp
ss
std
xor
bound
jecxz
pop
fists
mov
mov
aas
jb
dec
jl
mov
dec
jo
repnz
dec
and
add
aam
loopne
cmp
in
je
xchg
sub
adc
xchg
sahf
sbb
call
mov
lock
mov
mov
add
xor
call
clc
bound
aas
cmp
dec
inc
cwtl
sbb
pop
imul
pop
ljmp
lahf
xchg
xor
adc
nop
xchg
pushl
push
dec
lahf
sti
ss
inc
fnsetpm(287
pop
jb
imul
jle
in
shl
iret
jle
in
mov
sub
stos
cmp
shlb
jne
xor
cmpsl
or
loopne
mov
stos
outsl
mov
xchg
out
or
fsubr
cmp
aam
dec
add
lcall
repz
fs
aam
mov
popa
das
or
xchg
testl
js
adc
popa
jnp
aad
aad
lock
and
and
adc
paddusw
pmaxsw
push
outsl
push
in
jne
dec
jl
mov
sub
and
lcall
daa
rclb
clc
fisttpll
pop
jnp
push
and
std
or
add
test
jbe
shrl
push
popl
popf
int
out
ret
cmp
xchg
mov
adc
xorb
xchg
push
icebp
es
jnp
sbb
jb
jmp
ret
and
mov
xchg
xchg
clc
xchg
xor
movsb
xor
mov
adc
pop
sahf
mov
mov
or
cli
or
inc
mov
cmp
ss
jp
xor
add
int3
cmp
ds
mov
and
inc
cmp
jecxz
fwait
mov
ja
outsl
push
stos
xor
pop
xor
stos
addr16
imul
push
xor
mov
cmc
cmpsl
shlb
cmp
push
xor
jo
adc
cmp
rcrl
iret
jge
out
es
les
adc
sbb
mov
divl
jmp
mov
xor
xchg
imul
and
cmpsb
lretw
xchg
adc
mov
mov
push
rolb
jo
lret
int3
add
mov
test
jo
push
lahf
cs
ja
or
cmp
pop
cmp
inc
xor
and
loop
add
cmpb
in
loop
jp
xchg
ret
xor
popa
daa
sub
scas
adc
sar
pop
pop
sysret
adc
pop
daa
or
js
inc
clc
sahf
xchg
pop
sahf
das
dec
or
addr16
std
pop
lret
mov
mov
je
adc
jno
sub
add
mov
cmc
xchg
cmp
mov
test
andb
jecxz
jg
lds
out
sub
call
xor
nop
mov
push
nop
movsl
test
loope
cmpl
mov
daa
lret
and
out
insb
cmpb
cmp
add
xor
sub
neg
inc
xor
cmp
cltd
out
arpl
jae
dec
inc
adc
or
push
cmpsl
xor
add
mov
xor
shll
sahf
in
cld
mov
push
inc
pushf
cmpsl
int
xchg
mov
xor
je
bound
or
mov
sbb
shr
jecxz
and
pop
sbb
lock
in
fwait
repz
pop
mov
pop
cwtl
lret
sbb
testl
pushf
mov
subl
cmp
push
adc
rorb
test
imul
popa
pop
dec
push
sub
js
add
and
into
push
mov
inc
or
in
mov
icebp
adc
clc
sub
ret
dec
fsubrl
je
or
dec
fwait
adc
pop
pop
add
loop
adcl
fsubrp
pop
sub
mov
xchg
outsb
pop
adc
xchg
subl
test
mov
loopne
pop
xor
jb
adc
adcb
push
xchg
dec
pushf
sbb
stos
pop
test
cmpsb
negl
cmpxchg
pop
add
lea
xor
cli
fistpl
pop
mov
test
jno
and
push
cmp
rolb
or
movsl
mov
jg
imul
dec
sbb
push
mov
out
cmp
xchg
add
mov
sub
imul
push
sbb
xchg
dec
push
and
pop
add
fisubrs
mov
sbb
ficoms
repnz
hlt
imul
inc
or
adc
stos
or
in
aaa
test
pop
xor
push
mov
cmp
pop
mov
cmpsl
sbb
sbb
jmp
cli
pop
test
push
add
jo
jmp
jge
mov
lcall
jmp
ficoms
lret
filds
push
pop
jbe
arpl
push
arpl
mov
jbe
push
push
and
testb
pop
adc
gs
sbb
jl
aas
push
out
ret
loope
movsl
sbbl
or
or
push
movsb
push
mov
cli
stos
pop
bound
jle
and
flds
mov
push
movl
mov
inc
mov
hlt
push
cltd
imul
cmpl
ficoml
mov
cmpsb
xchg
pop
movsb
movsl
or
xchg
inc
pop
sbb
sub
loopne
sub
xchg
lods
arpl
push
jp
loope
mov
xchg
sbb
inc
fwait
movsl
insl
mov
hlt
sbb
or
jno
sbb
nop
and
sub
test
xorl
jnp
jmp
mov
pushf
jno
dec
pop
or
pop
sbb
fildll
imul
inc
bound
pop
mov
xlat
out
shlb
sub
xor
clc
imul
jp
inc
aad
stc
push
repz
cmp
aaa
add
mov
push
decl
stos
cwtl
mov
inc
mov
inc
sbb
xor
pop
xchg
and
sbb
xchg
xchg
loopne
movsb
mov
jbe
dec
push
not
daa
scas
dec
repz
out
fidivrs
and
mov
dec
and
outsb
xchg
ret
mov
shl
push
add
lret
imul
sarl
dec
inc
lock
shlb
les
cli
movb
sar
inc
stos
call
sbb
push
and
or
mov
mov
fisubs
xchg
xchg
push
sub
jmp
das
sbb
subb
push
jae
lock
sarb
jb
daa
dec
mov
adcl
push
sbb
jle
shl
ljmp
scas
cmp
cli
sbb
mov
out
or
repz
leave
fs
fsqrt
loope
mov
xchg
mov
mov
imul
xchg
rcl
fisubrl
std
lcall
xlat
sub
inc
cmpsb
push
mov
push
inc
cmc
add
mov
cltd
and
mov
dec
movsl
testl
add
shr
lahf
inc
dec
ret
hlt
dec
or
insb
pop
pop
xor
adc
pop
mov
push
out
xchg
and
mov
pushl
push
test
enter
fwait
sbb
aas
andl
imul
xchg
fiadds
jmp
outsb
jne
sbb
mov
mov
jae
adc
lret
les
dec
clc
sbb
or
pop
bound
jmp
push
test
mov
jno
add
push
stc
test
push
lods
inc
std
jne
push
mov
add
jbe
rcrb
orl
pop
loopne
add
pop
push
sub
adc
mov
lahf
cmpxchg
or
xor
cmp
xor
negl
and
lock
mov
mov
sub
adc
orb
cmp
push
popf
mov
mov
xor
enter
pusha
adc
xchg
jge
inc
dec
pop
jae
jbe
pop
andl
jne
div
subb
aad
dec
insb
cli
cmpsb
iret
mov
enter
fs
mov
sbb
mov
subb
inc
inc
lcall
mov
mov
loope
cmp
inc
loopne
push
mov
call
in
jnp
cmpsl
xchg
std
and
pop
jecxz
andl
hlt
stc
insl
std
andb
hlt
xor
pop
push
loopne,pt
adc
mov
loop
xor
fidivs
addr16
lods
aad
jno
icebp
pop
sub
xor
inc
adc
jl
push
call
jg
fisttps
test
jno
leave
frstor
mov
xchg
sbb
jbe
inc
cmc
out
xor
or
aam
adc
mov
add
add
rcrl
jl
enter
sub
fwait
pop
into
les
push
inc
in
and
cmp
mov
and
inc
mov
scas
and
lods
neg
ds
cmp
rolb
adc
or
mov
rorl
fdivl
scas
lret
mov
sti
daa
mov
rep
push
jno
xlat
das
outsb
mov
lcall
push
cwtl
and
jno
mov
and
pop
movsb
mov
and
sub
insl
jge
push
clc
push
popf
add
cmpsl
ss
in
in
xor
ret
xlat
mov
pop
dec
int
into
lret
repnz
pushf
and
sub
lds
mov
movsb
mov
sub
mov
mov
sti
lahf
and
cmp
add
cs
in
xchg
inc
outsb
pop
lods
push
inc
ret
add
mov
loope
mov
xor
and
pop
push
leave
je
add
mov
je
nop
int3
ja
add
sub
dec
sbb
enter
or
loope
push
arpl
xchg
scas
xor
push
adc
es
ret
lahf
addr16
gs
cmp
shl
mov
cmp
movsl
cmp
jmp
ja
hlt
lock
mov
jne
jecxz
es
scas
add
dec
pop
test
jns
frstpm(287
inc
mov
ss
dec
in
jmp
dec
fs
pop
cld
pop
xorb
das
xchg
dec
aas
push
maskmovq
negl
out
test
push
xor
dec
in
mov
aam
xlat
pop
pop
pop
les
aaa
pusha
cs
jb
test
in
insb
jp
pop
cmp
loope
cmp
and
mov
adc
dec
testb
clc
cmp
sbb
rcrb
insb
lds
mov
sti
push
add
pop
gs
push
sti
subb
xchg
in
aad
inc
inc
xchg
mov
loopne
inc
xor
stos
mov
out
cmpsb
dec
jae
stos
and
out
dec
test
sbb
lret
aam
std
or
dec
cmp
ljmp
adc
inc
std
or
push
je
imul
ss
push
push
xchg
mov
stos
pop
scas
xor
test
cmpsb
stos
lods
mov
xchg
adc
in
fcoms
push
leave
pop
ja
int
mull
shll
add
mov
into
fisttpll
pop
and
jl
fbld
ret
pop
add
xlat
aaa
lret
jnp
sub
mov
jle
add
jns
jecxz
add
loope
sbb
popf
cmp
xlat
dec
scas
pop
das
enter
or
in
in
test
rorb
ret
adc
pop
lret
out
incl
gs
cld
fistpll
sbb
rcrl
scas
out
jmp
cmp
stos
and
arpl
dec
aam
xchg
and
add
test
xor
jge
inc
adc
pop
adc
inc
push
mov
mov
hlt
jp
dec
jno
test
or
lcall
sahf
mov
push
mov
shlb
test
divl
cmp
int3
insl
nop
inc
pop
int
inc
icebp
cmp
mov
pop
test
iret
push
pop
test
rcrb
and
mov
test
fistl
adc
mov
and
fcomps
jne
mov
cmp
decl
jecxz
sub
lret
jae
movsl
pop
ds
loop
cmp
cmp
in
std
arpl
in
aad
call
scas
adc
stos
test
mov
cmp
add
dec
adc
imul
cltd
std
cwtl
jo
xchg
shlb
xor
std
xchg
aaa
cli
mov
js
pop
daa
inc
int3
fsub
fsubr
mov
add
int3
sbb
xchg
shrb
mov
push
dec
jbe
cltd
scas
pop
cmp
add
je
or
outsl
mulb
and
xor
sbb
jb
shlb
push
and
cmc
push
scas
adc
inc
rcrl
fisttpll
movsl
addl
outsb
insb
pusha
cmp
or
insl
pop
push
sbb
xor
mov
mov
cmp
clc
push
int
loope
sbb
mov
pop
push
iret
mov
cli
adc
mov
jb
sbb
loope
push
outsl
jmp
rolb
jbe
mov
fs
inc
xor
fistpl
jno
mov
mov
bound
inc
daa
into
xor
push
sub
aaa
sub
fdiv
data16
cwtl
push
out
test
add
mulb
jg
andb
arpl
fwait
jne
fdivrs
fs
repz
leave
push
adcb
push
outsb
mov
sahf
fldcw
hlt
les
mov
aaa
ja
xor
mov
ja
js
js
aas
gs
inc
adc
xlat
test
xlat
and
jns
imul
ret
sahf
xchg
les
fidivl
std
add
mov
inc
push
push
es
and
test
dec
pop
sbb
popf
jp
loopne
pusha
das
or
shr
popa
movsl
rcl
shl
push
outsb
sbb
aaa
jecxz
mov
lock
cmpsl
cmpsb
pop
add
out
aam
inc
in
dec
daa
xor
sbb
int3
jne
push
in
daa
rorb
mov
or
stos
outsb
jb
mov
or
mov
mov
xor
inc
andb
or
jo
cmpsl
xor
pop
sub
pop
es
or
jp,pt
jae
loop
jb
int3
aad
daa
flds
fwait
rolb
pushl
cmp
adc
arpl
xchg
push
jbe
mov
pop
lret
imul
daa
adc
adc
pop
xchg
dec
cmp
cmp
dec
lret
in
loop
push
mov
lahf
imul
cmpsl
test
pop
push
add
lods
insb
lahf
or
mov
pop
mov
xchg
adc
jl
iret
adc
hlt
mov
test
insb
inc
sub
mov
psllq
gs
mov
fs
cmp
fstpl
add
leave
out
stos
shlb
lock
das
adc
jp
fisttpll
mov
pushf
addr16
aas
ss
or
lds
je
or
jns
das
cmpb
xchg
das
sbb
push
ret
jns
mov
clc
pusha
fs
or
subl
pushf
and
mov
subl
fucom
ret
lahf
mov
push
movsl
test
repnz
adc
jno
insb
mov
or
inc
xchg
mov
fsubp
cmpsl
roll
add
pop
out
iret
add
push
movsl
adc
xor
push
mov
arpl
fdivl
jb
bound
lods
rcrb
sahf
leave
shrl
icebp
mov
in
inc
push
mov
pop
pop
fsubrs
movsb
rclb
imul
dec
fnstenv
mov
sbb
mov
jo
lret
lcall
loope
insl
adc
dec
addl
jb
lahf
nop
push
sub
jecxz
aad
mov
inc
rorb
jge
mov
ja
mov
shlb
cmpsl
mov
pop
out
push
pop
push
aam
adc
cld
mov
xchg
cmp
js
add
popa
or
das
sub
mov
jno
lahf
ja
push
and
and
pusha
and
pop
mov
pop
lret
dec
rclb
in
lock
insl
jg
ss
inc
pop
stos
movsb
adc
push
mov
sub
mov
push
xchg
xorl
fstl
xor
cmp
lcall
out
in
add
or
sbb
cmp
pusha
pop
adc
pop
adc
gs
clc
test
call
int3
xor
sbb
outsl
sub
lcall
lock
push
test
jno
xchg
rclb
and
cli
inc
mov
sub
into
shll
mov
adc
inc
hlt
jno
add
cli
dec
daa
add
jno
dec
push
aaa
mov
sub
pop
pop
mov
mov
sbb
or
clc
sbb
push
sbb
std
inc
cmp
sbb
and
rorl
xchg
sbb
bnd
jmp
inc
pop
mov
mov
push
add
adc
dec
inc
adc
ja
mov
sub
int
jmp
mov
xchg
pop
test
mov
stos
fsubrs
mov
push
adc
in
scas
test
lods
leave
add
ss
daa
inc
xchg
sub
bound
rcrb
pop
mov
xchg
scas
loope
mov
mov
xchg
iret
ficompl
jg
nop
lea
mov
int3
mov
mov
clc
sar
adc
push
lahf
mov
push
jns
nop
add
dec
lcall
popa
push
mov
bound
out
negb
adc
cmp
xchg
rorb
jmp
and
mov
testb
int3
pusha
pop
xor
jo
xor
std
push
mov
cs
iret
add
pop
fld
inc
insb
notb
fcoml
orb
cmp
stos
pop
in
lock
orb
sbb
test
jg
mov
jl
mov
nop
ret
inc
scas
add
pop
jne
inc
ja
xor
popa
pop
call
mov
inc
mov
or
mov
lea
mov
sub
push
adc
jae
dec
incb
mov
mov
repnz
sarl
jmp
push
imul
jmp
adc
adc
cmpsl
fadds
jmp
sbb
mov
test
addr16
inc
add
jle
sub
push
das
stos
ficoms
jle
mov
insl
push
lds
into
xchg
ds
mov
pop
mov
int
pop
in
push
hlt
push
sbb
pop
outsl
scas
xor
js
push
or
mov
cld
push
push
dec
je
jecxz
mov
inc
jo
cmpsb
rcrb
je
out
push
call
pop
adc
or
or
pop
mov
sbb
jp
xchg
jp
sbb
and
sahf
dec
fcomps
imul
cmp
dec
sbb
out
cwtl
xor
pop
mov
daa
or
pop
inc
notl
jmp
gs
cwtl
jb
jae
sbb
xor
or
xor
xchg
pop
test
pop
xchg
stc
rorl
mov
call
sahf
ret
inc
or
xchg
dec
mov
jo
aad
pop
pop
push
stos
and
daa
loope
test
stc
sbb
outsl
out
push
movsb
inc
pop
sub
scas
sub
xchg
adc
mov
jne
and
lock
shl
fwait
and
outsb
movsb
push
lcall
test
mov
xchg
cs
into
insl
inc
xchg
xchg
or
xchg
dec
incb
loopne
cmc
ss
aad
adc
cmpsl
cmp
sbb
cmp
test
or
cmp
fisubl
dec
repnz
push
or
insl
loop
pop
xor
and
push
mov
add
test
cld
mov
mov
dec
cmp
push
js
or
ret
sbb
lahf
and
xchg
jge
insb
in
cltd
push
je
inc
movsl
sub
jbe
pop
sahf
or
push
clc
push
icebp
push
sub
aaa
lock
adc
adc
sahf
inc
jno
iret
mov
scas
sbb
jb
or
adc
xchg
xchg
mov
loopne
adc
hlt
inc
lret
daa
repz
test
mov
enter
mov
and
or
repz
push
rep
hlt
int
or
mov
inc
or
or
mov
out
mov
mov
dec
push
cwtl
dec
xlat
mov
mov
xchg
ret
pop
push
jne
jbe
jb
mov
stos
xchg
adc
js
xchg
inc
xor
rclb
pop
jge
addr16
add
fldenv
out
ret
ja
pushf
inc
test
mov
jp
in
adc
dec
xchg
popa
sub
mov
pop
jo
in
pop
aam
adc
rcrb
arpl
jne
ret
mov
and
mov
sbb
rol
xchg
enter
xchg
pop
xchg
fcmovnu
jge
int
repnz
lret
xor
jnp
pusha
ja
nop
inc
adc
add
test
int
sbb
inc
gs
stos
das
xchg
mov
xchg
cmp
mov
push
jns
xchg
push
xchg
fldl
push
rorb
fbld
les
xor
mov
repz
jno
mov
dec
inc
xor
xor
mov
xchg
ja
xchg
mov
fisubl
jne
notb
push
jnp
mov
fwait
aaa
xchg
jae
jo
xlat
jp
subb
loope
in
clc
dec
shlb
cmp
imul
sbb
iret
or
jb
fildll
loope
cld
jg
popf
add
jmp
imul
out
in
std
lds
and
mov
mov
inc
cmp
std
dec
dec
stc
cwtl
movsb
fistpl
xchg
xchg
mov
inc
stc
fistpl
ljmp
jle
cs
xor
sahf
int
cmp
pop
cmpsl
jb
loopne
in
stos
fisubs
lret
lods
xchg
insb
add
dec
lret
mov
fimuls
adc
cmp
jle
inc
outsb
cmc
arpl
pop
scas
mov
push
sub
fs
adc
jge
jnp
jbe
hlt
scas
mov
mov
fs
mov
sub
nop
je
pop
mov
dec
cmp
ficomps
push
enter
shlb
hlt
aas
decb
faddl
cmc
jnp
pop
sub
shl
mov
and
outsl
enter
pop
pop
mov
xor
adc
cmp
fisubl
popa
adc
jp
dec
lods
test
sbb
loope
std
xor
xor
sbb
nop
in
mov
jb
mov
sbb
pop
push
ja
jnp
or
sbb
push
jns
stc
dec
cmpsl
cmp
mov
lahf
mov
pop
push
add
adc
imull
mov
push
sub
sarb
jl
cltd
jmp
push
scas
push
adc
pushf
flds
sub
sti
int3
out
pop
std
scas
dec
sahf
bound
mov
adc
and
test
cmp
in
ljmp
mov
push
aaa
sbb
js
shlb
jecxz
ficoml
aad
xorb
push
les
movb
xor
xor
xchg
and
ror
or
xchg
pop
cmp
dec
es
fdivrs
sbb
iret
std
imul
push
sub
push
shlb
inc
cmp
gs
inc
inc
push
cmpsl
lock
fidivs
addb
dec
movsb
and
cltd
in
jle
addb
jmp
mulb
mov
mov
outsl
dec
les
adc
int
jo
or
cs
sub
pop
and
jbe
inc
lds
in
test
andb
sub
push
sbb
cmp
cmc
sbb
aad
push
jae
iret
lods
addb
lret
add
cmp
fstpt
sbb
pushf
rclb
scas
xor
je
js
imul
in
dec
mov
mov
cmp
gs
dec
dec
xor
rcl
insl
mov
xlat
in
mov
sub
lret
dec
push
js
xchg
movsb
xchg
add
pushf
pop
push
insl
repnz
popa
mov
mov
pop
cmp
fwait
xchg
popa
fiaddl
std
push
xor
dec
scas
xchg
add
daa
push
enter
pop
stos
xor
out
add
pop
ljmp
lods
insl
adc
ret
stos
mov
mov
hlt
aaa
push
push
data16
pop
sub
sarl
jge
popl
jbe
aas
adc
cld
roll
ja
xor
cmp
lock
data16
and
sub
imul
sarb
pop
adc
xchg
enter
fwait
dec
fldcw
cmpsl
popa
test
and
adc
add
dec
fcoms
adcb
mov
push
iret
adc
cs
jo
dec
sub
push
sub
insb
cli
jl
adcl
scas
fnsave
imul
ds
dec
pop
push
fldl
add
or
insl
cltd
leave
jbe
inc
movsl
cmp
in
mov
ds
loope
nop
xchg
bound
out
mov
fisubl
or
aam
mov
jl
int
in
push
pop
cld
imul
jae
xor
int
adcl
adc
xor
jne
or
dec
pop
mov
fsubrl
int
jp
jne
shll
mov
std
or
adcb
cli
andps
mov
add
sub
push
popa
sti
scas
std
adc
out
call
xor
mov
aam
mov
lcall
test
rclb
insl
jg
les
mov
xorb
jnp
mov
stos
sbb
adc
mov
or
sub
inc
jnp
int
xchg
lret
xor
push
xorl
mov
popa
shr
aam
adc
std
out
lods
and
cmp
lods
sbb
cmp
cmpsl
cmp
aas
pop
mov
scas
jne
jmp
mov
xlat
mov
sbb
outsb
scas
xchg
jnp
rcr
or
jnp
daa
loope
cs
mov
ljmp
inc
mov
iret
dec
inc
nop
scas
fnstcw
ss
aad
sbb
imul
mov
mov
inc
xlat
sti
cmpsl
mov
fsubr
mov
mov
mov
mov
daa
mov
mov
jae
jb
out
icebp
in
xchg
push
ret
out
int
mov
mov
sub
rclb
pop
cmp
ror
and
addr16
and
cwtl
inc
nop
pop
mov
mov
repz
mov
lea
lcall
movsl
leave
testl
push
xor
sub
scas
pop
mov
cwtl
sub
add
lods
inc
test
fildl
stos
bound
and
sub
jp
push
inc
imul
mov
ds
adc
shrb
iret
jae
jb
mov
jo
xchg
cs
loop
stc
lock
xchg
jle
jg
add
xor
mov
in
pop
adcl
jbe
sbb
cltd
jecxz
cltd
jmp
push
add
scas
push
stos
mov
sub
dec
lock
insl
pop
testb
pop
xlat
xor
scas
pop
repnz
mov
cltd
mov
mov
sub
push
insb
sub
ljmp
aad
nop
pop
push
sbb
jge
cmp
idivb
add
cmp
cwtl
cltd
sub
out
imul
clc
inc
pop
xchg
cmpl
xor
ss
sbb
int3
es
sbb
jmp
mov
sub
cld
xor
je
push
in
mov
movsl
shrb
mov
test
add
je
lea
fs
std
add
js
pop
roll
ljmp
pop
push
iret
sbb
movsl
and
inc
clc
stos
icebp
and
call
bound
pop
sub
push
in
pusha
inc
pop
pop
not
mov
into
loope
imul
outsb
xor
stos
imul
les
cltd
sbb
lock
mov
in
je
gs
push
movsb
test
adcl
jg
mov
sub
in
mov
movsb
call
pusha
jle
fwait
adc
stc
test
gs
fxch
in
fs
imul
loopne
sarb
inc
jecxz
sub
jne
mov
mov
imul
mov
inc
js
out
pop
subb
jne
sub
xor
iret
fmulp
inc
sbb
pop
push
mov
leave
cwtl
in
out
xchg
pushf
insb
scas
sub
xor
pop
ret
jmp
mov
dec
sti
test
insb
insl
clc
pop
ficoms
cmp
sahf
aam
out
dec
stc
hlt
mov
inc
movsl
jl
ja
std
xor
cli
call
hlt
repz
popa
mov
cmp
in
dec
adc
dec
sbb
sti
enter
es
xchg
adc
and
jg
jne
and
ljmp
aam
iret
inc
mov
mov
mov
call
std
fimuls
divl
mov
cmpsl
mov
fdivp
clc
out
and
mov
fdivl
dec
stos
in
gs
or
arpl
mov
lea
in
sbb
rorb
mov
ja
jb
aaa
push
push
movsb
loop
lock
sbb
xchg
adc
movb
in
and
addb
sub
aas
ds
in
fdivrs
fadds
cld
or
insl
push
in
jnp
fisubs
ds
push
dec
mov
cmp
incb
and
cmpsl
loope
sahf
and
jle
and
adc
mov
mov
aam
lock
leave
out
and
repnz
cmp
cmp
adc
adc
push
mov
dec
jl
data16
jo
adc
inc
out
mov
xlat
lds
sarl
sub
in
je
sub
dec
mov
test
pushf
sbb
jne
xor
dec
enter
mov
xchg
not
or
loop
sbb
movsb
aad
cmp
push
cmp
test
jg
lahf
xchg
push
fldl
aad
cmpsl
sarb
lret
mov
ret
adc
mov
xchg
mov
int
sbb
out
xchg
jmp
mull
rolb
add
ret
mov
mov
xchg
je
bound
and
adc
mov
mov
ss
adc
mov
mov
sahf
push
imul
and
into
sahf
in
mov
int
push
mov
aam
add
fcompl
xor
daa
inc
mov
arpl
out
mov
lods
leave
fisubl
lea
mov
jne
mov
clc
or
adc
lea
lea
xor
repz
and
cld
sbb
or
cs
ds
popf
sbb
nop
push
icebp
adc
je
outsb
bound
dec
stos
je
pop
pop
js
cltd
xor
jecxz
xchg
mov
testb
add
ss
pushf
js
sahf
ret
mov
imul
xchg
jnp
sub
and
outsb
out
cmp
insb
jecxz
repnz
push
pop
sbb
movsl
pop
aaa
sub
cmp
adc
mov
hlt
adc
and
and
movsb
mov
sub
sub
jecxz
add
xor
stos
pushf
xchg
leave
gs
ljmp
push
outsb
add
cmp
xor
push
adc
add
pshufw
test
inc
loop
pop
mov
cmp
cmpsl
cmp
movsb
xchg
rorb
dec
push
mov
rolb
daa
imul
push
out
std
sbbb
dec
add
out
fiaddl
cmp
mov
sbb
aam
push
hlt
inc
xchg
pop
cmp
aad
mov
stos
push
bound
test
mov
std
lahf
dec
sub
scas
in
mov
imul
imul
sbb
push
or
cwtl
xor
int
xchg
cmp
sub
enter
sets
inc
scas
inc
and
outsl
bound
dec
push
xchg
stc
and
mov
or
xor
adc
adc
fdivrs
cmpsb
imul
mov
loopne
mov
mov
mov
jmp
pop
mov
pop
out
fsubs
repnz
jnp
mov
push
xchg
pop
je
dec
cmc
andb
add
ficoml
sbb
mov
cli
cmp
jl
aam
mov
mov
push
loop
in
mov
rcll
mov
in
leave
xchg
out
sbb
mov
test
insb
mov
popa
xchg
mov
add
sbb
insb
cmpsl
jmp
jmp
pop
dec
int
xor
bound
lock
loopne
or
pop
adc
inc
movb
std
or
addr16
outsl
ret
add
xor
pusha
dec
or
push
jg
dec
sti
jle
call
insb
lret
and
dec
mov
out
sub
rclb
pop
fidivrl
movsl
xchg
mov
and
jmp
or
int3
xor
repz
cli
fabs
hlt
xor
cwtl
mov
mov
adc
in
mov
xadd
subl
insl
enter
jle
mov
mov
sbb
adc
in
lock
xchg
and
imul
js
sar
inc
lds
es
jl
insl
outsb
sbb
and
leave
mov
add
push
cmovp
movhps
push
dec
inc
fs
aaa
repnz
jp
fucom
cmp
adc
and
jns
ds
fmuls
sub
add
sbb
mov
xor
mov
out
jne
loopne
pop
roll
pop
cmp
cmpsl
cmp
test
shlb
mov
add
mov
dec
mov
repnz
jp
daa
lret
mov
inc
push
fisubrs
pop
nop
sub
xchg
sbb
sub
pop
mov
enter
fistpll
sbb
or
or
mov
and
adc
aas
pop
inc
es
pop
and
cs
sahf
mov
lret
in
sbb
pop
in
adc
jne
dec
push
xchg
jnp
cwtl
inc
or
pop
or
bound
mov
or
stos
andl
jge
pop
pop
mov
mov
lds
je
mov
xchg
mov
pop
cmp
pand
cmc
movsb
dec
rcrb
int
lret
ficompl
sub
mov
mov
into
fs
fadds
adc
ja
jnp
xchg
stos
roll
cs
push
xor
pop
nop
mov
xor
push
adcl
les
jns
pop
scas
imul
pusha
and
cmc
pop
loope
in
mov
fst
adc
pop
push
push
add
lahf
les
add
xchg
xchg
imulb
inc
cld
call
mov
repnz
xchg
jno
pop
mov
mov
or
and
and
and
in
mov
cmp
in
roll
loope
imul
stc
sbb
ret
dec
ljmp
subb
jbe
cs
mov
mov
outsb
lret
lcall
xchg
and
or
cmp
jae
ret
adc
mov
fisubs
lods
gs
jge
outsb
faddl
int
pop
pop
in
sbb
sub
aad
xor
es
and
add
adc
lcall
popa
int
mov
sub
sahf
das
pop
adc
mov
dec
mov
test
xchg
mov
xor
or
cmp
dec
sbb
hlt
or
inc
outsb
inc
iret
jg
ret
jmp
inc
mov
es
getsec
fimuls
mov
andl
xchg
mov
push
out
sub
mov
fwait
inc
jg
inc
mov
and
dec
scas
jle
lods
jns
sahf
sahf
sbb
adc
out
mov
loopne
pop
mov
call
dec
push
pop
jno
xor
dec
jno
xchg
pop
imul
imul
mov
mov
scas
sub
bound
xor
int
scas
ja
add
adc
cmc
mov
enter
xor
adc
cmpsb
shlb
enter
outsl
sahf
scas
sub
pop
add
addr16
ja
mov
jo
es
ja
pop
lods
adc
adc
dec
imul
xchg
mov
add
dec
lahf
inc
test
icebp
lock
lret
dec
pop
pushf
cmc
in
cli
adc
mov
jno
aaa
cs
push
cmpl
fldcw
sub
mov
test
jecxz
push
cmp
jecxz
out
subb
cmpsb
dec
les
lods
push
push
ret
dec
cmp
or
fidivrs
faddl
adc
outsb
sbb
imul
decl
push
adc
or
mov
lret
fidivl
ficoms
add
dec
jnp
les
in
inc
push
jp
sub
lock
fnstcw
bound
cmp
rorb
jae
fisubrs
jno
mov
mov
aaa
shrl
icebp
lods
loop
addb
cmpsb
out
movsb
and
xchg
inc
in
xchg
cmp
cmp
mov
and
inc
sbbl
arpl
pushf
iret
mul
cmp
push
fadds
mov
jno
adc
test
lret
insb
xlat
jo
in
mov
or
js
call
insl
dec
bound
out
ffreep
movsb
test
xor
sti
sahf
sub
ss
in
fwait
stos
inc
iret
out
xlat
and
or
fstpl
xor
cmpsl
mov
pop
or
scas
pop
mov
jle
adc
sub
std
push
pop
sbb
add
js,pt
lds
int
ds
xor
nop
xchg
xchg
in
pop
pop
cmp
cmp
mov
sub
fs
inc
pop
inc
mov
mov
mov
aam
imul
and
adc
mov
cmp
fiadds
dec
hlt
pop
fistpll
ljmp
xor
lods
sahf
add
into
lret
repz
mov
sahf
xchg
adc
pop
rorb
cli
push
xor
out
xor
outsb
sbb
xchg
xchg
push
pop
lods
xchg
xor
les
mov
js
arpl
hlt
in
andb
icebp
aaa
fsubrp
lods
jnp
into
xor
test
sahf
sarb
dec
sub
inc
push
jbe
mov
cmpsl
pop
iret
fidivl
int
jns
cltd
add
add
push
outsl
or
dec
add
movsb
xchg
add
js
stos
shl
ds
sub
push
gs
cmpsb
and
ja
pop
loop
jbe
jmp
cmp
movsl
std
ret
call
icebp
popa
dec
in
lcall
and
movsl
jg
fists
out
mov
lahf
mov
fcoms
mov
jae
add
xor
stos
int3
je
shl
aad
pop
out
rorl
out
add
push
push
cwtl
sti
push
mov
mov
test
and
ljmp
push
popf
rorl
push
pop
mov
in
scas
jp
cmp
es
imul
push
and
push
icebp
lret
fldcw
xor
jecxz
mov
rcl
mov
movsb
jle
mov
sbb
gs
xchg
adc
mov
xor
mov
mov
lea
dec
fsubs
xchg
jns
cmpsb
sbb
in
stos
xchg
outsl
xor
mov
inc
fidivs
aaa
in
mov
xor
xchg
xor
icebp
xlat
insl
jp
in
clc
mov
test
fldt
subb
and
adc
pushf
cmp
xlat
call
or
jle
in
movsb
cmpl
fidivrl
stos
xchg
lahf
shlb
popf
inc
and
cmp
ljmp
jg
js
cmp
popf
into
or
cmp
mov
ljmp
in
pushf
add
inc
mov
fldcw
das
lcall
inc
pop
mov
or
int3
add
dec
jae
pop
or
ja
cmp
xor
cmpsl
cltd
pop
sbb
xor
cld
inc
loope
cmp
daa
push
sbb
fisubrl
lahf
mov
and
jl
mov
in
scas
xchg
sbb
inc
sbb
mov
lcall
movsl
arpl
inc
fstl
push
xchg
rcll
outsl
popa
push
cmp
lods
cmpl
cmpsb
mov
ficoml
fs
xor
sbb
mov
push
cwtl
cwtl
mov
ja
scas
mov
inc
mov
mov
lods
aad
push
mov
sarb
mov
add
sti
ja
int3
add
mov
sbb
cltd
adc
btcl
jg
sbb
lcall
bound
movsl
int3
jb
mov
testl
cmc
loope
sub
mov
fsubs
nop
xchg
mov
sbb
gs
sbb
loopne
std
outsb
mov
fisubl
leave
out
dec
fdivrs
sahf
push
mov
dec
xchg
nop
cmp
scas
ljmp
test
rcll
lea
xor
or
push
aam
lea
jne
add
cmpsb
jl
adc
xchg
sub
pop
push
mov
int3
mov
mov
dec
add
inc
inc
mov
jge
push
shrl
mov
in
push
mull
xor
repz
push
cmp
mov
stos
outsb
cmc
mov
mov
mov
mov
iret
mov
aad
sbb
push
mov
add
cli
mov
movsl
dec
cmp
sub
pop
and
clc
inc
mov
cmpsl
and
imul
insb
push
sbb
mov
in
out
je
outsl
dec
cmp
mov
push
scas
and
daa
out
pop
mov
xchg
pop
mov
jmp
ljmp
in
mov
rorb
ss
xchg
inc
inc
add
lods
mov
jp
push
scas
insb
clc
stc
push
bound
push
cmp
xchg
js
mov
lock
std
aaa
inc
aaa
xor
clc
or
jbe
insl
jle
jmp
outsl
loope
pushf
mov
stos
out
insb
fs
lahf
pop
scas
xchg
inc
mov
loop
mov
fisttpll
pop
lods
repnz
mov
xor
loopne
and
stc
rcl
fists
sbbb
fdivl
or
into
out
outsl
mov
xchg
jno
xchg
movsl
jecxz
fwait
xchg
sbb
outsb
mov
ss
shrl
inc
das
mov
mov
vpcmpistrm
mov
lods
scas
loop
mov
dec
lcall
movsb
or
or
out
push
add
xlat
fistps
lods
dec
mov
push
leave
out
ja
mov
push
sub
xchg
rcll
pop
mov
jmp
cmp
lcall
add
mov
arpl
test
aas
add
fiadds
mov
outsb
mov
outsl
loopne
lods
mov
lods
add
cmc
mov
out
in
xchg
add
cwtl
and
arpl
pop
inc
sbb
lret
add
or
cwtl
mov
and
cmp
insl
shl
cld
xchg
pushf
mov
pop
sub
pop
push
xchg
mov
inc
cmp
out
stos
jg,pt
fdivs
mov
stos
ds
sbb
pop
xchg
xchg
scas
mov
iret
or
out
cmp
mov
cltd
push
mov
arpl
faddl
movsb
jo
stos
je
push
dec
jl
dec
ljmp
add
hlt
sub
in
push
in
pop
xor
int3
xor
lcall
fnstcw
psubsb
lds
mov
dec
xor
mov
sbb
dec
mov
in
fsts
fildll
mov
lock
aaa
jnp
add
mov
aam
ficoml
mov
or
mov
in
lea
loop
lds
es
and
cmpsb
dec
imul
pop
xor
xchg
ret
push
insb
insl
cmpsl
xchg
dec
and
inc
shl
mov
lock
pop
xor
sarl
lds
mov
in
insl
sub
fwait
sub
aas
lret
jp
test
pop
and
or
dec
into
mov
jp
int3
mov
pop
mov
daa
jo
pop
scas
idivb
call
out
sbb
push
push
xlat
sub
ret
push
int
inc
cmc
push
sti
mov
outsb
mov
push
push
and
rcl
push
add
ret
mov
fdivrl
lds
aas
mov
cmp
inc
bound
jle
out
xchg
ljmp
sbb
mov
sahf
cmp
fdivrp
ja
aaa
xor
int
loopne
jg
and
loopne
fists
inc
mov
das
xor
sbb
pop
xchg
jecxz
or
loope
pop
aad
dec
cmp
imul
mov
popf
or
iret
cmp
mov
movsb
and
pushf
xor
stc
aam
jns
cltd
clc
mov
test
pusha
jl
xchg
out
jb
push
in
xchg
dec
dec
aaa
roll
fnstsw
fiaddl
popa
outsl
xlat
adc
push
cld
mov
jmp
mov
outsl
pop
ja
pop
cltd
inc
arpl
dec
xchg
cmp
popf
lahf
shlb
aas
fimull
scas
add
lea
in
add
es
adc
or
inc
cmpl
add
xchg
out
pop
jo
shll
imul
stos
loop
inc
arpl
lea
push
or
arpl
ficomps
jae
mov
fucom
push
mov
jl
pop
call
lret
movsb
sti
and
mov
fs
rorl
repz
std
jno
scas
in
dec
ret
out
rolb
dec
inc
repz
cmp
sbb
lret
xchg
test
je
scas
fsts
std
cs
ds
call
std
sub
aad
xor
jecxz
dec
lea
mov
scas
jge
cmp
out
lods
dec
push
aam
rcrl
leave
inc
dec
push
movsl
and
and
xor
fistl
push
in
rclb
enter
aam
enter
cmpsl
sbb
cmpsb
scas
mov
insl
test
mov
cmp
inc
popf
xchg
jg
jae
jns
call
je
stc
mov
rorl
push
mov
orb
or
fwait
xor
push
adc
cmpb
fsts
xchg
add
insl
test
and
pop
mov
shl
repz
dec
pop
jne
vcvtpd2psx
mov
data16
pop
push
inc
outsl
in
es
jp
ja
pop
jg
aam
adc
add
fpatan
inc
cwtl
imul
and
shrb
test
ss
xchg
and
popa
out
lds
cmc
pop
or
scas
das
lret
xor
lock
call
call
imul
pop
sbb
out
jae
mov
add
mov
loopne
sbb
mov
mov
cld
mov
cld
push
bound
mov
jnp
inc
lret
ja
jp
sbb
or
test
mov
pop
push
cmp
movsl
fsubrs
mov
out
add
dec
popa
mov
push
pop
out
cmp
sbb
test
sbb
mov
mov
pop
push
mov
movsl
leave
jl
scas
out
or
adc
data16
pop
sub
mov
or
ficoml
in
lods
and
out
shrl
push
movsl
jg
inc
loop
mov
push
mov
sahf
cmc
jo
shll
fbld
push
jl
dec
xor
pop
sub
fiadds
push
jl
adc
lods
mov
ja
cmc
mov
xchg
or
pop
cmp
test
push
mov
test
mov
mov
push
push
aam
xor
pop
cmp
and
mov
jg
aad
lcall
dec
push
jno
testb
scas
push
jmp
mov
jo
mov
aaa
and
adc
xchg
pop
imul
mov
sub
test
ja
ss
xor
sbb
cmpsb
addr16
out
negl
in
mov
fidivrl
jle
popf
outsb
add
push
mov
jo
not
mov
leave
adc
pop
lret
hlt
bound
jno
cmpsl
dec
cmp
in
mov
inc
pop
aaa
mov
xchg
jae
fisubs
inc
stc
adc
cmp
ds
dec
cld
mov
scas
xor
cmp
jge
mov
fucom
jo
xchg
dec
cmp
ljmp
test
loop
mov
or
adc
in
clc
sahf
ljmp
mov
push
cmp
inc
subl
xlat
out
adc
adc
cmp
loopne
sbb
int
xor
lods
fdivrl
push
jge
xor
addb
fidivs
out
addr16
loopne
in
lods
mov
jp
push
pusha
or
lds
cltd
push
push
pop
mov
pop
ja
add
jne
jl
dec
into
jg
inc
lods
mov
jge
xchg
or
stos
aad
clc
jl
lret
pop
mov
rol
cltd
jnp
sbb
xchg
cmp
xor
xor
test
push
enter
mov
jge
or
outsb
icebp
test
jl
dec
pop
jmp
dec
push
dec
in
jnp
inc
fstpl
movb
lahf
test
and
mov
mov
arpl
and
lods
fbld
mov
add
mov
leave
out
mov
test
inc
dec
mov
push
fldenv
pop
in
cli
negb
in
cmp
ss
mov
ljmp
fildll
push
hlt
pop
and
sub
fcoml
pop
scas
lods
push
push
push
out
arpl
ret
adc
and
lcall
scas
fisubs
add
ficoms
adc
loop
aas
jle
xchg
add
jp
or
ror
push
aaa
sbb
out
test
shl
xchg
lods
stc
adc
ja
xchg
cmp
pop
xchg
aad
insl
dec
push
jge
fldt
add
mov
cmp
in
iret
lahf
adc
mov
pop
pop
into
xchg
cmc
mov
xchg
std
mov
xlat
dec
push
icebp
insl
iret
subl
mov
aad
rorl
sarb
lds
pop
mov
mov
cld
fildl
lcall
icebp
mov
scas
stos
or
sub
xor
xor
gs
out
adc
inc
or
fs
sub
les
repz
jge
or
push
xchg
pop
jae
cmove
pop
fsts
xor
or
daa
adc
dec
mov
lock
loopne
mov
nop
dec
fdivrs
fstcw
mov
fiadds
lret
sub
add
aaa
push
push
mov
pop
jp
scas
mov
xor
mov
addl
mov
pusha
scas
sbb
mov
test
adc
sbb
fistps
sub
jg
jno
mov
iret
push
cmpl
out
ret
idiv
cli
sar
out
jle
push
cs
or
js
mov
lcall
mov
inc
and
dec
jbe
mov
add
in
test
lods
int
inc
jge
dec
mov
pop
add
xor
xchg
repz
leave
mov
dec
in
fs
fisttps
inc
das
aaa
js
movsl
enter
mov
sub
xchg
inc
or
stos
push
pop
popf
aaa
adc
lret
dec
mov
aas
test
mov
rcll
loope
jecxz
jecxz
and
mov
shlb
mov
mov
leave
xchg
js
fs
sub
pop
imul
and
icebp
xchg
jmp
push
negb
pop
ficoml
xor
mov
and
jnp
out
mov
lds
adc
lea
and
rol
xor
mov
push
pop
call
jo
aad
jae
aad
rolb
cmp
xchg
gs
pushf
repz
pop
icebp
mov
iret
imul
in
setp
sbb
sahf
aas
mov
out
in
mov
in
popa
cltd
or
or
clc
jae
mov
jo
or
cmpsb
sbb
sub
or
jno
cmp
mov
std
jle
mov
imul
aad
add
scas
mov
loope
jmp
jne
jne
fdivrl
mov
push
adc
inc
sub
call
test
out
jbe
mov
lret
jnp
stos
iret
inc
add
ss
das
jae
inc
sub
lods
sub
int3
pop
push
adc
pop
shrb
adc
sub
cli
into
ret
decb
jg
enter
test
mov
out
lcall
pushf
and
mov
jbe
inc
gs
cmp
daa
xchg
and
jns
push
popf
xchg
cmc
test
pop
xor
insb
sbb
cmp
ljmp
sub
mov
cmp
add
mov
leave
lock
fdivr
mov
fcmove
lds
mov
cmc
jns
push
cmp
inc
sub
push
and
dec
ljmp
icebp
lods
cmc
in
lcall
int3
mov
jge
addl
scas
fiaddl
xor
push
rol
cli
out
ret
dec
lcall
xchg
xor
sub
or
movsl
mov
jp
out
insb
mov
lock
xchg
mov
loope
mov
or
lret
jne
test
outsl
xchg
aad
mov
sbb
push
aaa
aaa
scas
fwait
inc
fnstcw
inc
cmp
xchg
ds
push
cmp
lret
jp
ss
adc
lret
push
or
insl
data16
int
push
sahf
push
inc
mov
imull
rorl
les
sub
loop
mov
fsubrs
fildll
cmp
mov
aad
push
mov
mov
mov
or
mov
sbb
xchg
aad
int3
fcoms
mov
sbb
jl
jo
jae
ss
cwtl
pop
inc
add
lods
mov
into
ds
addr16
shl
inc
mov
mov
pop
mov
js
add
xchg
cmp
ja
sub
int3
adc
mov
inc
cmp
orl
push
movsl
fcmovnu
gs
xchg
pop
sbbb
andb
push
mov
add
ss
lods
in
ja
addr16
sub
sbb
hlt
rcll
lahf
pop
pop
mov
mov
sbb
and
jae
jno
lods
push
test
aad
mov
mov
int3
push
mov
shrl
daa
in
adc
loopne
scas
out
push
mov
scas
push
addr16
lds
jae
xchg
push
decl
pop
dec
sahf
ss
and
inc
push
xchg
push
push
movl
movsl
in
out
insb
mov
cwtl
int3
fldenv
adcb
sub
std
daa
pop
xor
inc
jbe
gs
dec
mov
adc
inc
adc
sbbl
cmp
sbbb
push
scas
ja
sbb
adc
mov
stos
shl
pop
lahf
pop
les
in
bound
dec
cmp
insl
fldcw
loope
sbb
jno
pop
out
dec
mov
sub
daa
rclb
xlat
lea
xor
xchg
add
test
sarb
mov
mov
jo
loopne
add
mov
out
sbb
xchg
mov
popf
test
pop
mov
dec
mov
shll
dec
in
xchg
cmc
push
pop
pop
data16
sbb
sti
gs
inc
aas
pop
daa
cmpb
pop
add
shll
sub
jle
addr16
test
add
shlb
mov
jb
lret
adc
ret
aaa
xor
les
add
sbb
inc
adc
xor
aas
jp
orl
sti
leave
iret
cmp
jo,pn
pop
mov
sarl
push
movsl
jl
or
addr16
loopne
pop
mov
jmp
mov
test
push
ds
jo
mov
outsb
or
jns
pop
ficoml
arpl
ret
push
aam
pop
sahf
or
pusha
aam
jmp
push
and
mov
sub
or
cmp
and
stos
adc
sahf
stos
scas
jae
inc
jb
jp
or
inc
scas
or
ljmp
rcll
push
into
out
insl
jnp
xchg
and
push
push
cmc
jo
inc
test
xor
sar
int3
stos
sbb
imul
xchg
cmp
dec
pushf
aad
test
pusha
sahf
lret
inc
test
push
and
dec
movsb
inc
popf
shll
push
sub
pop
subb
push
das
xchg
rolb
das
adc
mov
pop
inc
push
dec
dec
decl
fidivs
jnp
cmpsb
xchg
mov
add
push
sub
adc
sti
jae
cmp
pop
test
dec
push
shlb
sbb
stos
pushf
jge
test
dec
pop
xor
imul
mov
and
in
ja
jecxz
test
pop
mov
int
fst
fwait
mov
inc
push
jmp
aaa
test
adcb
mov
mov
sbb
adc
mulb
into
lock
shl
test
roll
mov
sbb
adc
push
add
jno
and
or
inc
hlt
jae
jns
pop
cmp
adcb
sub
ds
clc
sbb
pushf
rcrb
aad
lds
xchg
xchg
lds
outsl
xlat
out
fdivr
xor
xor
dec
ljmp
xchg
or
xor
loop
out
mov
loopne
or
outsb
insb
enter
and
xchg
sar
in
rclb
mov
dec
sub
push
cmp
repnz
mov
xor
push
xchg
mov
sub
ret
xlat
cld
cmp
mov
mov
mov
pop
mov
icebp
dec
sbb
repnz
mov
jp
lea
jbe
jne
ror
sub
push
lods
jmp
jb
hlt
sub
xchg
push
cmc
cld
stc
and
dec
daa
pop
dec
aam
cld
sbb
dec
dec
call
ss
out
js
mov
cmc
call
or
das
in
shlb
dec
or
xor
divl
sub
dec
ret
jl
iret
cltd
test
and
dec
ja
sbb
adc
sub
sbb
lret
push
mov
je
stos
enter
xchg
enter
in
adc
sub
ja
insl
stos
in
mov
mov
ds
leave
push
and
jno
and
outsl
cltd
or
insb
loopne
lods
sub
outsl
push
xor
scas
cmpl
mov
loope
cli
fs
jns
icebp
push
aam
addr16
cmp
mov
xchg
in
fistps
mov
jns
pusha
popf
and
imul
pop
push
jnp
xorb
ficoms
and
mov
movsb
mov
loopne
frstor
int
sti
push
inc
cld
inc
mov
sti
into
push
mov
aad
scas
cmc
adc
jns
xorb
sbb
stos
lret
inc
add
js
gs
out
test
inc
push
mov
dec
jg
fsubrs
lret
mov
pop
ss
je
mov
sbb
rclb
mov
jbe
mov
sahf
shrl
sub
and
btc
das
aaa
inc
stc
and
adc
std
mov
dec
call
pop
gs
sub
adc
pop
sub
in
loopne
mov
mov
sti
xchg
jne
inc
lods
mov
xor
daa
jno
shrb
inc
stos
shrl
pop
push
mov
fadd
ljmp
es
subb
loopne
aad
jne
sahf
lods
scas
cmp
cmp
add
fnstsw
or
xchg
into
pop
movsl
nop
jb
insl
push
clc
shlb
pop
mulb
sbb
popf
sbb
jnp
xor
ja
int
xor
dec
cmc
push
sar
loope
pop
mov
cmpsb
mov
xchg
mov
fs
adc
sbb
inc
testb
add
div
sub
popa
ljmp
pop
push
std
mov
loope
pop
sbb
std
repnz
or
shrl
adc
ret
cmp
dec
push
aad
mov
mov
in
dec
jb
pop
ja
repz
loopne
mov
fcmovbe
data16
mov
leave
mov
iret
mov
into
sbb
dec
test
in
stos
pop
and
dec
test
push
inc
push
push
loopne
push
pop
xchg
aas
xchg
cmp
dec
add
jg
push
xor
adc
leave
dec
pop
int3
pop
mov
aad
lock
les
add
dec
stos
xchg
in
mov
in
aas
dec
rolb
dec
es
mov
adc
mov
sub
subl
sbbb
shrl
xchg
inc
filds
in
fcomip
mov
xchg
and
aad
push
daa
aam
aam
shlb
xchg
mov
into
roll
sbb
sub
xor
xor
jecxz
and
xchg
adc
insl
jb
stos
push
mov
xchg
mov
lods
popf
stos
in
jno
mov
pop
jmp
add
mov
jg
jp
jge
or
sarl
cmpb
ljmp
pushf
and
mov
pop
scas
scas
out
sarl
daa
mov
xchg
fnstsw
insb
push
push
sbb
out
mov
mov
cmp
leave
cmp
jae
enter
cmp
jo
test
mov
sub
dec
xor
xor
sbb
movb
movb
shll
sbb
out
nop
out
pushf
pop
nop
mov
sti
lahf
bound
dec
push
std
xchg
jae
xchg
adc
cmp
dec
out
or
mov
imulb
ret
jb
call
les
in
movsb
or
push
push
xchg
jg
lahf
outsb
jge
fcomi
loop
sub
jecxz
inc
or
dec
test
add
popf
or
jns
pop
xchg
cmpsl
int
add
cld
cmp
sub
shll
add
mov
dec
mov
mull
sarb
push
mov
pop
push
outsl
mov
push
add
mov
sub
xchg
lcall
sub
out
and
aam
fdivs
xor
dec
in
mov
mov
in
ret
nop
adc
sub
aas
ret
pop
lret
fstps
add
and
imul
adc
sub
out
sub
std
cmp
push
pop
shll
xor
loop
push
call
adc
or
fwait
xchg
data16
shlb
iret
jo
mov
push
in
mov
rorb
xchg
jmp
mull
dec
jae
cmp
in
repz
jns
out
mov
mov
inc
jnp
dec
scas
push
iret
and
ljmp
jbe
push
mov
jle
scas
jp
outsl
insl
jae
dec
mov
jmp
sub
jb
or
lock
pusha
push
sub
mov
test
stos
mov
call
scas
movsb
mov
icebp
jmp
into
sbb
or
popa
movsl
js
mov
jns
inc
cmp
jb
addr16
das
stc
pop
nop
and
mov
sbb
mov
or
cmp
into
add
stos
out
bound
std
int
mov
pop
push
sbb
add
jg
dec
push
inc
fisttps
js
xchg
xor
flds
xchg
call
leave
stc
inc
out
ja
xchg
stos
jo
sub
shlb
xchg
in
xor
loopne
add
sbb
scas
sbb
cs
sbb
aaa
int3
inc
cld
adc
add
mov
lock
xchg
sbbl
add
sub
ds
movsl
cmp
lahf
dec
adc
call
dec
and
ret
stos
out
add
push
mov
jo
add
cmp
jb
ds
fdivrs
push
lret
sahf
test
xchg
lea
xor
in
iret
gs
leave
xchg
inc
fnstcw
sarl
arpl
adc
or
daa
mov
push
repz
jmp
loopne
cmp
pop
push
lods
or
popf
cmp
dec
sbbb
rorl
clc
adc
push
popa
sbb
sub
rcl
jb
pop
faddl
or
fstl
imul
dec
mov
sub
push
mov
aam
add
ffree
mov
leave
mov
fildl
outsb
cmpsb
fs
sbb
xchg
rcr
int
adc
adc
cmp
pop
test
push
mov
test
outsl
dec
inc
mov
and
das
pushf
cmp
lods
int3
mov
insb
dec
push
bound
dec
loopew
aam
shlb
xor
mov
mov
lret
sahf
pop
std
xor
adc
pop
icebp
cmp
push
dec
and
push
aam
sarl
add
mov
repz
push
xlat
cltd
sub
mov
std
ret
pop
mov
sub
loope
das
pop
inc
adc
adc
out
adc
ret
cmp
lcall
sti
mov
xchg
in
addr16
mov
xchg
mov
loope
out
insl
fidivrl
scas
push
div
cli
out
aas
adc
jmp
push
hlt
dec
add
jno
xor
scas
test
sbb
dec
add
jnp
out
xlat
push
in
mov
in
andb
notl
fs
insb
sbb
repz
adc
push
data16
mov
leave
insl
cmp
iret
jne
push
test
push
adc
sub
cwtl
sub
pop
lods
addl
mov
cmp
mov
pop
xchg
xchg
xor
pop
cmp
mov
mov
add
pop
int3
jb
mov
add
jl
push
lahf
mov
mov
dec
out
enter
mov
insb
sbb
hlt
fists
ret
aaa
mov
nop
insl
cmpsb
in
stos
dec
xor
push
pop
iret
pusha
mov
xor
mov
lret
jno
shll
xor
jmp
xchg
xchg
sub
hlt
cmc
inc
jp
xor
int
xlat
lods
jno
js
mov
gs
loop
pop
aaa
xor
sub
cld
jmp
sub
int3
push
sub
fstpl
imul
fldenv
cmp
inc
sbb
jp
mov
adc
mov
inc
aaa
mov
inc
adc
jmp
test
dec
jle
std
cmp
or
dec
repz
std
std
js
or
sbb
fldt
sub
rolb
movsb
cmp
push
xchg
dec
jl
ret
xor
test
test
popf
mov
cmp
mov
mov
stc
loopne
push
fwait
std
gs
cmpsl
inc
mov
jno
andb
repnz
call
fldt
lret
sarb
test
mov
adc
cld
push
dec
daa
adc
adc
adc
out
xchg
in
scas
test
sub
sbb
xchg
popl
xor
scas
out
icebp
data16
sub
enter
and
xchg
cmp
repz
mov
and
and
add
mov
cmp
cmp
dec
stos
addr16
mov
sub
pop
cmp
inc
lahf
les
out
mov
loop
bnd
jge
cmpsl
insl
dec
cli
stos
push
pushf
scas
stc
push
ret
push
jge
shl
ret
nop
testb
inc
ss
and
xchg
mov
stos
mov
pop
sub
or
push
jecxz
inc
arpl
jns
incl
insl
sub
aam
cltd
and
rclb
add
adc
fcmovnu
lods
inc
fs
push
inc
cli
inc
call
mulb
lods
inc
lahf
push
cmp
cld
adc
jne
lds
inc
dec
xlat
jle
mov
lds
shrb
adc
or
dec
inc
pop
cmp
hlt
iret
dec
xor
out
jnp
nop
je
jg
inc
and
aaa
loope
addr16
and
jecxz
mov
daa
imull
add
or
cli
sub
add
icebp
fstpl
adc
lret
js
jb
add
inc
fistpl
mov
cmpsl
movsb
aas
int3
adc
int3
daa
adc
add
jns
dec
imul
mov
cmp
stos
lcall
dec
push
sahf
inc
pop
sub
sub
push
mov
loop
loopne
or
pusha
fistpll
xchg
inc
xor
and
rcll
mov
negb
sub
gs
sub
lock
mov
pop
mov
dec
into
cmc
mov
mov
test
adc
jp
xor
add
in
pop
xor
dec
jl
popf
push
gs
xchg
or
imul
or
aad
sub
and
les
jp
fbstp
hlt
jae
sub
pusha
fisttpll
pop
push
push
adc
lea
xchg
xor
fstp
in
mov
fbstp
outsb
mov
sbb
fbstp
jmp
xchg
jmp
dec
int
sub
add
in
inc
mov
test
and
scas
roll
sbb
nop
pop
test
lds
jbe
adcb
negb
or
outsb
inc
inc
and
jmp
mov
sub
sbb
ja
mov
pop
jecxz
cmp
ja
sti
xor
mov
loope
shlb
sbb
sbb
pop
data16
add
jmp
iret
gs
jb
xchg
ss
lret
fnstsw
popf
jle
loop
mov
jbe
inc
popa
jl
sarl
rcll
jbe
mov
lods
cs
push
pop
jno
sbb
inc
fs
jg
sub
outsb
std
repz
iret
adc
and
xor
outsb
dec
adc
adc
ja
inc
fwait
mov
sbb
push
push
testb
scas
jp
movsl
cld
jb
push
inc
les
sbb
mov
cs
or
dec
pop
scas
mov
cmp
xchg
ja
loope
pop
jg
insb
fdivs
adc
jae
xchg
adc
adc
scas
and
xchg
inc
test
xlat
inc
ret
in
cmp
push
cli
loop
mov
stos
xor
xchg
pop
sub
mov
ret
sti
bound
xchg
dec
add
jecxz
movsl
inc
lcall
cs
shll
xchg
ficoms
xor
dec
add
xchg
rcrl
and
xor
test
mov
dec
lock
push
repnz
fisubl
jmp
push
cs
sub
xor
inc
inc
mov
push
mov
xchg
shlb
jp
adc
ljmp
add
inc
inc
aaa
test
dec
adc
jo
push
add
xor
sub
imul
in
add
into
xorb
cs
inc
je
aam
int3
pop
add
mov
adc
sarl
pop
inc
mov
xchg
adc
bound
jns
dec
jge
xor
addr16
cltd
loopne
cwtl
in
jecxz
add
enter
pop
pop
loop
inc
lods
xor
pusha
xchg
mov
push
hlt
sub
push
dec
lret
xchg
stos
cmp
pop
sbb
jl
inc
fxch
aaa
add
push
cmp
sub
insb
je
fdivl
push
sub
sub
mov
data16
inc
jmp
dec
rorl
mov
mov
dec
repnz
rcll
jae
cli
lods
movsb
std
insl
xor
jg
dec
xchg
fcmovu
xor
mov
mov
popf
push
xorb
aad
cltd
lret
stos
addl
test
cmpsl
je
fptan
add
enter
jg
xchg
les
add
fidivrl
push
inc
lcall
mov
faddp
pop
jns
cmp
jbe
test
mov
xchg
dec
or
sub
inc
lcall
das
mov
jnp
out
jg
std
xchg
dec
repz
dec
loop
push
jo
xchg
jae
jmp
cmpsl
jnp
push
fildl
push
adc
movsl
xor
jns
sbb
pop
lret
sub
cwtl
inc
mov
fucom
pop
or
cmp
sahf
sub
pusha
sbb
xorl
fdivr
mov
fiaddl
iret
inc
bound
xchg
hlt
sbbl
mov
xor
push
xchg
add
iret
popf
in
xchg
jae
inc
push
popf
cmp
insl
sbb
cld
dec
decb
movsl
jle
fsubrs
or
pop
dec
lods
xor
fldcw
fsts
push
cmpsl
xchg
cltd
jecxz
sbb
fdivl
pop
pop
nop
ret
mov
lcall
mov
aaa
or
insb
pop
jp
pop
ja
sbb
cld
mov
cmp
mov
test
loopne
xor
fisubrs
lret
cwtl
popa
lock
dec
sar
movsb
in
jb
out
lahf
out
mov
inc
jge
rcr
scas
or
xchg
out
sti
cli
sub
xchg
xchg
pop
xorb
cmp
xchg
into
sub
aaa
inc
ljmp
mov
and
movsb
lds
stos
push
inc
add
sbb
sub
inc
dec
mov
add
mov
lods
sub
hlt
lret
test
pop
add
dec
cmp
and
inc
pop
lahf
mov
mov
stc
mov
icebp
popf
pop
sub
outsl
mov
sub
jg
dec
addr16
pop
mov
jmp
sbb
jno
lods
lock
ja
fstp
loope
les
aaa
rcrl
jp
dec
fisttpl
dec
mov
aas
xchg
popa
adc
dec
outsl
adc
cmpsl
in
cmpsb
fistpl
adc
dec
movsb
dec
jp
push
jecxz
or
cmp
jb
pop
jns
data16
push
int
mov
adc
jecxz
sub
sbb
dec
ror
push
jge
pop
lds
nopl
adc
cmc
jmp
inc
inc
clc
push
jmp
xlat
cmp
adc
leave
jl
sub
mov
xchg
fwait
popf
inc
addr16
cmp
mov
and
inc
icebp
and
lret
pusha
sbb
push
std
or
ficoml
pop
xchg
repz
ds
aad
addr16
dec
mov
mov
add
bound
mov
lcall
sub
sbb
or
shrl
fadds
jle
dec
sub
or
inc
aad
mov
or
outsb
imul
and
xchg
and
pop
mov
lcall
jp
mov
or
daa
xor
rclb
lret
call
insb
jb
cmp
loop
repnz
push
inc
pop
out
and
mov
inc
stc
xor
lods
aam
dec
imul
sbb
pop
and
sub
rcll
mov
test
popa
mov
shlb
xchg
sub
push
mul
jl
aad
jge
push
rolb
jae
repz
cmc
pop
das
insb
xchg
orb
pop
ret
leave
inc
jl
xor
mov
icebp
js
dec
adc
mov
jle
sub
shl
sbb
jb
or
and
in
xchg
rcr
jmp
jmp
inc
xor
fisubrl
pop
dec
cmpsb
jns
dec
int
lock
adc
push
lahf
das
sbbl
xchg
in
mov
add
pop
mov
adc
lods
insb
push
inc
xor
fsts
jne
shlb
pusha
fsubs
push
xor
test
dec
enter
aam
sti
lods
pop
sub
sub
push
mov
in
sub
pop
sub
es
pop
add
pop
movsb
adc
das
push
test
or
add
xchg
adc
sub
shrb
push
notl
push
adc
iret
jns
movswl
insl
and
push
xor
and
aad
xlat
xorl
or
push
mov
mov
ficompl
and
jmp
inc
outsb
addr16
xchg
push
fcomps
dec
xchg
out
arpl
sbb
jae
add
adc
pop
mov
mov
sbbl
decl
push
adc
adc
ss
in
faddl
push
dec
push
push
addb
mov
or
ficoms
sbbl
test
std
lret
lods
mov
fdivrs
push
lret
subl
ljmp
xchg
jae
jbe
lea
imul
push
sbb
adc
dec
inc
sbb
lret
fstl
enter
pop
push
loope
outsb
lds
pop
xchg
in
pop
or
pop
or
imul
mov
jns
inc
push
or
mov
ds
xor
lret
jb
mov
add
cmpl
adc
mov
jno
adc
es
cmp
adc
loop
shlb
outsl
shl
dec
xchg
sub
mov
fsubrl
pop
fnstsw
sbb
mov
mov
lea
xchg
fldenv
scas
mov
adc
mov
movsl
dec
sar
push
loop
or
les
inc
lods
das
jl
int
test
xchg
and
fs
cmpsb
jg
in
mov
xchg
loope
inc
mov
idiv
lcall
ds
out
enter
rorb
jmp
push
add
mov
shrb
lds
or
pushf
mov
and
xchg
mov
or
popa
push
sbb
test
adc
inc
pop
das
pop
push
jg
mov
xchg
aas
test
lods
lea
clc
push
jno
pop
aaa
nop
lods
fildl
jp
pop
cmpsb
dec
cmp
mov
mov
pop
mov
jb
decb
mov
lods
in
jle
cmp
pop
repnz
loopne
mov
inc
fdivl
es
gs
imulb
in
push
outsb
outsl
test
jmp
mov
sti
aas
sbb
rcrl
add
lods
add
and
xchg
xchg
out
fistps
jp
lock
jo
pop
adc
pop
cmp
test
mov
lret
das
int
rcr
pop
and
lock
insl
fnstsw
sti
test
aas
jg
jno
inc
jge
testl
pop
mov
lds
test
xlat
in
popa
iret
pop
cmpsl
scas
in
sbb
push
jmp
adc
ficoms
push
ss
nop
ss
cmc
adc
lea
rcrb
pop
and
pop
adc
scas
nop
adc
and
into
push
insl
scas
sahf
cmp
adc
in
mov
int3
lods
ljmp
call
rclb
loop
sbb
adc
frstor
in
jo
jne
or
in
cmp
into
xor
aaa
push
adc
shll
jno
sub
stos
xchg
cmova
and
push
dec
push
stos
xor
mov
pop
stc
xor
outsb
push
xchg
adc
push
or
mov
xor
rcrb
mov
scas
xlat
push
repz
adc
insb
not
cmp
jecxz
xor
fwait
xchg
mov
lret
inc
stc
fdivrs
pop
dec
pop
fwait
mov
test
stc
je
sub
push
lods
je
loopne
lock
sbb
xor
aas
cmp
push
inc
popf
sbb
loope
fcmovbe
inc
scas
arpl
daa
jecxz
negl
mov
push
pop
add
pop
cmc
inc
js
lcall
out
jnp
fcmovnb
test
pop
divl
and
std
sbb
outsb
fdivrl
cwtl
fisubs
mov
ds
fidivrs
rcrb
cli
mov
subb
aas
jno
push
jne
sub
sub
sbb
xchg
gs
std
jg
ret
mov
mov
subl
fs
sub
mov
cmpsl
cmp
cli
mov
imul
fstpl
stc
cmp
push
push
sbb
dec
movsb
scas
mov
sahf
cmp
int3
imul
out
cmp
cmpsl
xchg
in
in
les
push
adc
sub
insb
icebp
add
mov
mov
jnp
mov
das
add
ljmp
cmpsb
add
xchg
hlt
cmpsb
test
and
addr16
and
sbb
inc
inc
std
arpl
mov
mov
cmp
sbb
mov
mov
fs
pusha
or
sbb
lds
mov
adc
ret
scas
and
cmp
ret
mov
cmp
aam
shrl
movsb
jp
adc
int
jne
cmpsl
int
push
nop
pop
cmpsl
js
pop
jge
les
loopne
push
movsl
ljmp
inc
dec
xchg
mov
jnp
xchg
or
aaa
mov
shlb
push
dec
into
mov
lods
jmp
mov
inc
push
int3
xchg
pop
or
pop
shrb
adc
shlb
xor
pop
movsl
dec
out
out
mov
arpl
cmp
daa
lods
out
sub
inc
pop
mov
lret
pop
push
in
loop
push
insb
pop
je
mov
andb
fcmovnb
gs
add
les
adc
xor
fsubrs
outsb
lcall
xchg
pop
pop
movsl
pop
data16
adc
cli
icebp
lret
leave
bound
jbe
in
adc
dec
sahf
popf
cmpsb
jbe
add
call
inc
in
call
or
pop
dec
mov
xor
xchg
les
lock
add
add
xchg
cmpsb
divl
shrb
jae
cmp
into
fsub
roll
xchg
loop
fimull
pop
inc
lods
or
inc
cmpsl
push
imul
mov
movsb
pop
out
mov
jb
shl
adc
mov
xor
dec
mov
lods
scas
repnz
stos
cmp
cmp
lret
nop
mov
in
iret
mov
repnz
ret
sub
test
cmp
pop
out
lock
nop
cmp
add
and
out
clc
sbb
push
insl
movsl
sub
cmp
cld
inc
fisttps
hlt
scas
mov
adc
or
stos
subl
cmpsb
lret
orl
ficoms
ret
insb
fdivs
xor
adc
mov
je
dec
test
push
pop
xchg
mov
scas
in
inc
xor
and
sub
cmpsl
repnz
or
loope
jmp
loopne
jae
fs
mov
lea
mov
mov
in
ljmp
push
mov
inc
or
inc
or
jo
insb
call
xchg
pop
pushf
loopne
sub
ja
movsb
xchg
out
loope
sub
pop
push
xor
mov
pushf
or
and
jo
aas
outsb
lods
je
jmp
sub
add
add
test
mov
loope
mov
xor
mov
nop
inc
mov
push
rcl
stc
pop
insl
ljmp
test
cld
xchg
iret
fmull
xchg
push
push
mov
dec
inc
inc
jne
fwait
mul
aaa
jae
dec
cmp
jg
fildll
pop
mov
xchg
and
pop
pop
fisubs
jae
xor
ljmp
ds
mov
out
add
fbstp
adc
je
fistl
inc
sub
inc
and
sahf
stc
cmp
insl
cmpsb
test
xlat
negl
xchg
adc
push
or
cs
jge
fndisi(8087
shl
es
lock
cmc
push
rorb
or
xchg
push
push
and
mov
jnp
push
inc
inc
sbb
aaa
popf
jp
js
mov
add
fcoms
and
and
sbb
bound
lods
sahf
push
mov
aad
pop
sub
add
icebp
rsm
cmp
pop
mov
scas
dec
cltd
cli
jmp
stos
mov
mov
notl
cli
adc
sbb
push
lret
stos
ss
std
fwait
push
jns
aaa
sbb
mov
lea
fstpl
cs
lds
adc
out
pop
xchg
mov
cmpsl
repnz
ret
mov
sub
testl
out
outsb
hlt
xchg
xor
scas
test
aad
aaa
arpl
push
sub
fbstp
inc
dec
lret
mov
mov
sub
sub
int
pop
mov
xor
repnz
je
jle
adc
stc
push
loopne
or
ffreep
inc
xor
mov
mov
add
add
inc
pop
sbb
sub
xchg
test
sub
push
pushf
insb
stos
push
mov
scas
jl
sub
je
jne
notl
iret
ss
int3
psubusw
ret
dec
pop
shlb
ljmp
divb
sbb
ret
ljmp
cmp
popf
pop
pushf
ss
iret
pop
push
jg
or
call
or
and
loope
ss
cli
sbb
sbb
repz
jns
inc
pop
scas
lods
jbe
dec
dec
sbb
divb
sub
adc
bnd
push
outsb
test
or
or
jge
and
movsb
adc
mov
out
push
pop
and
and
scas
mov
mov
push
inc
std
pop
pop
outsb
and
fmul
mov
mov
pop
popa
adc
xlat
cmc
add
jno
and
aad
faddl
push
sbb
jg
mov
mov
pop
stos
fcmovu
fwait
xchg
test
mov
xor
xchg
ds
adc
ret
test
adc
push
jl
sub
outsb
jbe
push
or
push
mov
ret
ss
stc
or
std
cli
insb
push
push
fidivrs
sahf
je
lret
test
jl
and
mov
ret
or
int
cs
sahf
loopne
mov
sub
inc
and
xor
and
stc
mov
dec
jecxz
mov
ficoml
xlat
or
aaa
pop
ret
loopne
mov
lret
jb
loope
mov
adc
bound
push
push
or
iret
pop
push
out
dec
jne
jbe
aas
scas
xlat
inc
inc
leave
dec
inc
mov
test
pop
stos
sbb
fstps
mov
scas
jno
add
jle
das
xchg
pop
sub
mov
pop
nop
cmpsb
or
or
aaa
mov
xchg
xchg
sbb
or
scas
mov
jb
mov
cmpsb
fs
lea
fists
jno
mov
bound
leave
lret
inc
stc
scas
pop
stc
jl
and
or
cli
enter
stos
loopne
fisubl
mov
mov
mov
pop
fnstsw
push
in
pop
popa
enter
sarl
outsb
aad
sbb
xchg
repz
ficoms
mov
push
in
push
cltd
push
mov
sbb
loopne
cmp
dec
mov
in
rcrl
movsb
mov
sbb
stos
and
call
nop
cmp
mov
imul
out
jmp
cmp
add
call
ja
push
lret
mov
add
aam
lock
adc
shrb
sub
pushf
inc
mov
jno
popf
and
push
popf
cmc
or
into
pop
mov
push
jo
fistpll
adc
sbb
dec
cltd
imul
push
mov
lret
rolb
dec
sub
xchg
mov
lock
or
mov
lods
jecxz
movsb
sub
gs
aam
cmp
stos
fs
fwait
mov
pop
push
xor
dec
clc
aas
popw
sbb
stc
push
pop
xchg
fildll
enter
movsb
popa
test
push
mov
dec
ficompl
stos
and
shrb
hlt
mov
dec
lcall
sti
lods
jne
sti
xchg
lahf
mov
mov
mov
add
aam
lds
insb
addr16
cli
cli
iret
sub
sbb
pop
shrl
jnp
fwait
int3
sbb
es
lcall
rclb
jmp
aad
and
inc
mov
shll
and
ljmp
push
je
sub
inc
xchg
test
fsubr
cld
pop
xchg
and
pushf
and
cltd
pop
adc
add
aam
sarl
mov
scas
ficoms
mov
outsb
adc
jb
loope
sub
or
add
mov
popf
cmp
sbb
ficomps
push
jb
add
adc
gs
push
xlat
stos
push
les
xor
xor
stos
mov
int3
andb
daa
gs
push
xchg
jne
rcll
xchg
rcl
or
pop
insl
test
mov
push
sub
fstp
pop
iret
pushf
dec
and
enter
popa
push
sbb
sub
out
mov
cmp
push
cmp
and
xchg
dec
mov
sahf
jb
call
push
ficompl
inc
repz
xchg
cmp
push
push
jmp
addr16
and
mov
call
add
pusha
enter
xlat
std
push
mov
pop
pop
test
mov
mov
mov
in
sub
xor
scas
stos
cmp
movsb
decb
dec
cs
lcall
jb
dec
pop
cltd
inc
mov
sbb
inc
fst
pop
rorb
or
ret
mov
int
sbb
scas
sbb
popa
xor
add
daa
adc
sbb
add
stc
popf
jns
fidivs
add
add
adc
in
mov
cmc
cmp
lahf
lret
cmp
in
in
mov
mov
xchg
dec
add
sub
inc
mov
bound
inc
sub
jle
inc
shl
dec
out
mov
cmp
lret
aas
fcoms
ficompl
adcb
push
cmp
sub
lea
outsl
pop
mov
pop
decl
xlat
jno
jle
or
fnstenv
rcrl
test
mov
push
jge
push
cmp
out
mov
fcoms
jle
ficompl
lea
jecxz
lcall
and
fiadds
mov
jne
pop
aas
div
inc
lret
rorb
and
cwtl
fs
fcoml
xchg
push
xor
enter
xlat
cld
popf
jmp
jle
orl
and
test
dec
jmp
leave
xchg
jb
clc
enter
addb
cmp
push
test
pop
fildl
nop
leave
js
lock
or
mov
sub
insl
ljmp
cmp
nop
loope
jmp
lret
jb
dec
incb
pop
push
sti
loop
sbb
je
fldcw
shrl
mov
lods
loope
scas
jmp
fistps
inc
mov
fiaddl
mov
fisttpl
cwtl
ret
sbbl
lods
mov
addb
loope
dec
movb
sub
insb
sbb
lret
pop
adc
pop
pop
in
stc
jne,pn
repz
xchg
or
xorl
push
cmp
hlt
jle
xchg
jne
or
lods
mov
xchg
pop
incl
sahf
movsb
inc
sub
les
imul
mov
mov
es
orl
push
inc
or
push
pop
repz
loop
mov
dec
sbb
mov
pop
repz
lds
cmp
or
into
fsubrp
jle
shlb
inc
jbe
xchg
lret
stc
cmp
adc
xor
dec
push
push
rorl
or
aad
push
mov
scas
cmp
mov
inc
loopne
mov
mov
push
sub
add
outsl
dec
mov
cmp
inc
sub
imul
mov
setae
pop
data16
adc
rorb
sbb
pop
inc
xchg
stos
lret
rorl
or
and
cmp
into
sub
cmp
lret
or
xchg
data16
into
mov
data16
fisttpll
xor
mov
cmp
outsb
dec
iret
lock
mov
repz
xchg
mov
cmc
outsl
dec
push
insb
and
fsubrs
lcall
lret
in
fildll
mov
mov
push
cmpsl
add
test
fldl
insl
mov
idivl
notb
les
daa
xor
mov
mov
add
sbb
mov
arpl
pop
adc
or
jle
sti
rclb
lds
test
insb
push
daa
stos
adc
test
mov
mov
or
inc
pop
push
lahf
adc
aam
enter
out
fisttpll
or
cmp
cmpsb
sbbl
insl
sbb
mov
jp
iret
xor
sub
xchg
xchg
sub
fisubrs
sub
adc
pop
dec
mov
enter
inc
into
and
dec
mov
jae
sbb
sub
mov
dec
push
scas
nop
mov
pop
cmpsb
daa
lret
fs
add
jecxz
mov
pop
ret
push
sub
setg
arpl
pop
add
mov
jmp
fld
enter
jle
mov
int3
jo,pn
inc
movsb
inc
aas
repnz
fiaddl
mov
ret
pop
sub
sahf
push
iret
popa
sub
jno
outsb
les
pop
xchg
mov
repnz
sub
cmp
inc
jmp
cmp
add
stc
cwtl
mov
sbb
loop
mov
aas
loope
outsl
aas
jmp
jno
in
js
stos
xor
cld
aaa
add
jg
fldt
cmpsb
adc
dec
imul
pop
shrl
pushf
lods
hlt
adc
ds
jecxz
xor
pop
inc
lods
sbb
mov
shlb
lahf
imul
cmpsb
xor
gs
leave
dec
jno
dec
or
inc
and
or
mov
mov
cmpsl
lea
push
mov
arpl
dec
iret
fldenv
orb
aaa
fcomip
sarb
mov
xchg
fcomi
cltd
shll
jbe
outsb
mov
xor
hlt
ja
dec
loopne
push
test
lods
and
or
mov
xchg
loopne
dec
push
pop
js
nop
iret
mov
pop
je
test
aas
movsl
xchg
stos
aas
ret
inc
lret
sub
sbb
sub
outsb
add
mov
xchg
es
pop
ss
fwait
xchg
movsl
cs
popa
nop
scas
mov
cmc
push
lds
pop
dec
mov
into
call
fstp
xlat
inc
popf
dec
negb
repz
aam
out
lret
lret
xor
inc
daa
in
adc
sub
cmp
test
dec
ficoml
imul
sar
sub
bound
fcomi
adc
mov
scas
mov
xchg
or
mov
fimull
xor
imul
fidivrs
dec
sub
push
sbb
jo
mov
popf
mov
and
dec
jbe
pop
and
inc
mov
xor
mov
pop
iret
cs
pop
push
push
data16
rcrl
roll
and
add
fs
push
mov
mov
insl
add
inc
xchg
cmpsl
pop
inc
in
repnz
xor
ficompl
mov
paddusb
out
in
cmpsb
sbb
and
add
push
movsb
sub
fisubl
int
sbb
mov
dec
outsl
xor
mov
shll
jne
in
xor
sbb
int3
adc
mov
fwait
das
and
out
movsl
dec
jecxz
call
out
mov
andl
cs
rclb
xor
push
dec
lods
adc
fstpl
push
adc
or
test
out
mov
mov
imul
adc
call
addr16
test
add
cmp
jle
lret
xchg
pop
jg
call
mov
mov
loopne
jle
sti
xchg
test
loop
pop
or
pusha
jmp
icebp
inc
or
mov
mov
mov
or
xor
and
pop
add
les
shrb
nop
notl
and
sub
mov
jbe
cmp
or
sub
inc
repz
inc
shll
jmp
mov
pop
push
stos
jns
ret
sub
scas
lock
or
cwtl
sbb
dec
sub
inc
lret
adc
push
fadds
inc
mov
loopne
rcrb
test
and
pusha
fs
in
xor
enter
es
mov
and
xchg
inc
mov
hlt
or
iret
shl
or
adcl
and
adc
sub
mov
cmpsl
in
lahf
mov
test
cmp
cmp
enter
sbb
loope
outsl
and
mov
mov
out
mov
sbb
cmpsl
jae
mov
push
cmp
mov
cld
cmc
mov
fbld
push
push
out
sbb
stos
mov
push
mov
jp
nop
imul
bound
subl
jne
or
shll
push
mov
mov
dec
fmuls
inc
fwait
mov
mov
mov
je
aam
mov
jne
ds
in
test
les
enter
punpcklwd
arpl
not
push
and
mov
dec
and
fadd
ret
pop
lods
push
adc
inc
pop
mov
cmp
jb
mov
jb
cmovg
xor
orps
inc
push
jb
push
cmp
mov
shrl
push
jns
and
sub
cmp
imul
push
insl
fptan
jg
leave
insl
jecxz
add
inc
mov
xchg
and
or
jne
enter
adcl
xor
or
fs
test
gs
dec
push
mov
and
test
sub
adc
test
mov
notl
jne
enter
mov
sarl
xlat
insb
xchg
aam
and
icebp
xor
jns
xor
mov
scas
pop
mulb
idivl
sbb
aam
ret
add
aad
dec
ror
sub
cmpsb
mov
add
push
test
scas
mov
sub
popf
loope
sbb
mov
cmpsl
and
xchg
push
pusha
lahf
daa
add
jnp
stc
push
out
loop
movsl
mov
or
add
lods
rcrb
adc
mov
xchg
scas
or
cmp
test
mov
inc
cmpsl
fs
fs
in
sbb
and
and
fwait
andl
pushf
adc
pop
inc
push
mov
jae
xchg
movl
push
push
mov
mov
inc
fistps
mul
pushf
iret
lret
mov
mov
adc
mov
pop
cmp
cli
out
les
push
adc
adc
out
aam
retw
in
rclb
mov
cmp
xor
mov
xorl
fcomps
mov
mov
loopne
xor
ficomps
shl
adc
mov
divb
into
lock
rcrb
jb
leave
adcb
pop
jp
mov
into
jecxz
cwtl
xor
mov
das
outsl
gs
repnz
cltd
divb
mov
jae
lock
cvtps2pi
push
push
not
in
das
cwtl
mov
inc
mov
js
jg
test
test
inc
std
jns
jl
cmp
add
jecxz
cwtl
push
lahf
out
shll
cmp
mov
sub
cmp
pop
inc
and
sahf
mov
sbb
mov
in
or
fbstp
inc
sub
cmp
lea
push
test
je
dec
jae
fisttps
or
jbe
sahf
lret
enter
stos
jmp
mov
xor
stos
enter
adc
out
push
into
push
movsb
lret
scas
push
pop
aaa
add
mov
cltd
inc
xchg
ds
aad
jecxz
cmp
and
sub
push
test
hlt
push
adc
or
push
aaa
nop
int
cmpl
cmc
jb
decb
dec
lret
or
fsubl
sbb
dec
fmull
cmp
mov
fs
xlat
jbe
mov
mov
lods
outsb
bound
or
xor
pushf
cmp
dec
or
hlt
mov
jecxz
enter
jle
cli
inc
pop
mov
or
dec
lret
ret
test
sub
or
mov
push
or
mov
push
aas
jne
loope
push
das
fiadds
lea
xchg
data16
xchg
jns
ret
pop
push
pop
pop
push
xchg
add
or
das
mov
pop
sub
adc
test
aam
lret
jp
aas
cmp
mov
out
pop
ret
test
test
roll
gs
or
pop
pop
xchg
and
xor
or
dec
outsb
or
decl
getsec
jo
lcall
adc
mov
pop
in
pop
pop
addl
das
aaa
stos
add
and
adc
add
insb
loop
adcl
pop
mov
add
mov
pop
test
mov
xchg
mov
xchg
cmp
ret
scas
add
data16
arpl
mov
adc
adc
dec
jno
dec
xor
push
sub
lods
mov
or
lcall
ret
mov
rcrb
enter
fcoml
cmp
stos
jmp
fistpll
mov
or
dec
popf
int3
into
pusha
dec
sbb
movsb
popa
mov
push
xchg
jp
sub
ret
jmp
stos
mov
sbb
jo
cmp
outsl
fmull
mov
add
test
out
loopne
mov
outsb
push
ss
sar
rcl
pusha
inc
cmp
sbb
orb
inc
les
addr16
insl
jmp
loope
jb
sti
jp
xchg
fadds
or
js
pop
ret
jl
lcall
pop
js
add
aaa
int3
inc
arpl
add
and
mov
loop
and
pop
inc
mov
hlt
mov
mov
ljmp
pop
xchg
jbe
cltd
pop
jl
setle
push
mov
lods
imul
shlb
stos
fcompl
inc
ret
cli
cmp
push
pop
push
mov
popf
inc
stos
int
sub
test
inc
mov
pop
cltd
cltd
cmp
rorb
add
xchg
mov
add
dec
fidivrl
lea
fwait
mov
testl
xchg
push
sub
dec
addr16
lods
ror
fmull
pop
cmp
loop
movsl
test
std
jmp
or
bnd
adc
xchg
or
and
push
data16
push
and
adc
push
iret
out
in
jns
pop
test
mov
pop
and
sbb
push
sbb
jp
xchg
inc
lret
lcall
imul
xchg
jb
mov
fsubr
fildl
mov
and
jmp
add
or
aad
ds
sbb
out
xchg
mov
fsubrl
in
pop
out
push
data16
or
push
ss
fucomp
aas
xchg
pop
sbbl
in
xchg
rep
or
pop
sbb
test
jo
hlt
pop
jb
mov
sub
js
adc
add
shlb
inc
inc
push
lds
ja
mov
pause
add
cmp
xor
ret
add
sahf
cmp
lahf
or
hlt
insb
mov
adc
orl
inc
pop
xor
adc
bound
mov
ret
and
les
outsl
fmull
in
mov
lods
outsb
push
or
xor
lods
shlb
sub
jns
fwait
in
jge
fwait
hlt
add
testb
adc
or
test
int3
mov
insl
add
or
sbb
in
out
mov
and
cmp
add
dec
push
push
pop
mov
jno
mov
sbb
mov
in
aas
inc
pusha
arpl
mov
or
fstpl
lret
or
rolb
pop
js
sahf
and
add
mov
jge
xchg
pop
or
mov
arpl
int
add
sti
mov
pop
jo
and
lods
xor
ret
cmp
imul
mov
xchg
mov
lods
out
bound
or
out
data16
sbb
mov
notl
xor
cmp
xor
cmc
xchg
jno,pn
mov
fistl
fwait
mov
sbb
les
adc
jecxz
pop
clc
les
mov
cwtl
jle
dec
push
dec
popa
adc
pop
pop
arpl
mov
and
clc
imul
lahf
xor
in
and
mov
aas
sbb
jmp
mov
push
nop
aam
rorb
lcall
cmp
icebp
into
jne
or
cmp
gs
add
mov
jle
xor
mov
popa
jge
inc
sbbb
lahf
mov
jp
std
xor
xchg
idivb
jae
jo
sub
cli
cwtl
pop
push
adc
add
mov
inc
test
nop
shl
cli
mov
ret
shll
lret
insl
movsl
shl
fcmovnu
popf
out
lahf
xchg
fiaddl
cltd
cltd
mov
lcall
in
mov
push
add
xor
add
insl
cltd
insb
mov
adc
pusha
loop
add
loope
add
pop
xchg
orl
insb
in
push
xchg
dec
mov
outsb
lock
leave
loopne
lods
int3
cmc
jno
enter
push
jl
fadds
jecxz
xor
dec
imul
push
adc
inc
lds
cld
aad
dec
testl
aas
or
ret
adc
push
cmpsb
and
xor
pushf
aad
inc
inc
fs
pop
fwait
and
pop
or
lock
pop
lret
out
jmp
push
push
ret
cmp
inc
cld
sub
or
or
pop
xlat
fnstcw
js
or
aad
add
lods
mov
xchg
orb
cmpsl
jmp
les
inc
mov
repnz
mov
dec
aaa
mov
mov
ds
loope
andb
loopne
div
mov
xchg
popa
jg
mov
lods
cmp
and
mov
xchg
or
outsl
pop
inc
clc
jne
fs
add
inc
jnp
lock
lret
int
loop
jge
sbb
cs
mov
inc
adc
push
lcall
fstl
mov
lods
jge
push
and
jb
sbb
sar
xor
sbb
out
movsb
pop
out
mov
jns
daa
mov
ret
adc
push
inc
jmp
das
cmp
jle
cmpsb
gs
lods
ds
or
sete
sub
push
je
or
lcall
pop
stos
cmc
mov
in
aaa
arpl
cltd
jno
jmp
mov
adc
mulb
xor
cmp
pop
xchg
cmpsl
sbbl
mov
cmp
mov
mov
mov
fbstp
cltd
dec
mov
mov
dec
lret
cmp
cmc
or
xchg
inc
in
sbb
orl
xchg
or
mov
jl
lahf
push
pop
jecxz
idivb
int
add
mov
add
xchg
arpl
pop
add
ss
pop
shlb
xchg
push
xor
fs
fistpl
out
mov
lret
xor
push
xor
stos
mov
adc
mov
xchg
adc
insb
pop
mov
sub
roll
ljmp
add
add
adc
xor
pop
inc
lret
and
adc
int
int3
stc
push
sub
cli
aad
aas
ficoml
jecxz
xor
ret
aas
lods
pop
dec
inc
mov
add
pop
jp
pop
sub
mov
es
loope
cmp
and
popf
lea
jb
cmp
dec
inc
enter
add
call
fidivl
dec
xor
xchg
add
adc
in
stos
cltd
inc
jne
cmc
int3
cmp
lahf
push
jbe
ficompl
addr16
cmp
jns
cmp
fldenv
jb
or
ss
pop
les
inc
test
repz
sarb
push
xchg
mov
inc
sub
lahf
or
pop
inc
andl
mov
int
sub
dec
out
mov
pop
mov
cld
mov
sub
aam
lods
aam
into
fisttps
mov
loope
lcall
push
bound
push
jo
inc
imul
int3
sub
dec
cmp
cld
mov
push
aam
push
pop
fnsave
loope
sub
inc
push
les
repnz
pop
push
arpl
mov
icebp
xchg
jmp
loope
adc
out
sahf
popf
scas
push
mov
sbb
in
js
and
mov
cld
inc
pusha
loopne
push
sub
sbbl
mov
xchg
inc
add
gs
pop
cli
mov
or
xchg
mov
lods
cmpsl
rcr
insl
adc
cld
les
adc
inc
outsb
jge
jno
cmpsl
xchg
out
mov
repnz
stos
and
sbb
push
jl
or
jp
lret
rolb
mov
js
sbb
add
ret
cmc
iret
push
aaa
and
mov
jae
pop
jl
lock
clc
adc
sub
mov
xchg
cmp
icebp
dec
and
inc
out
fldl2e
nop
push
pop
fisubrs
lods
mov
dec
cmpl
dec
adc
aad
cmp
push
out
or
popf
mov
nop
push
mov
mov
and
in
fcoml
out
fnstcw
test
and
pop
and
pop
mov
enter
inc
jp
es
xchg
xchg
aad
push
jo
addr16
cmp
or
add
lret
lds
scas
mov
and
lret
and
sub
lcall
sub
dec
sub
gs
xchg
stc
sub
inc
loop
mov
jle
in
fwait
aas
dec
push
not
sub
call
out
jne
fs
das
mov
stos
aam
and
push
inc
dec
loope
lods
or
mov
aaa
add
fbstp
scas
pusha
pop
cmp
shl
push
inc
dec
nop
adc
ljmp
inc
sub
dec
add
adc
rorb
sub
aaa
out
jmp
xchg
fld
es
mov
jmp
sbb
subb
jmp
dec
cmp
das
out
push
add
hlt
add
mov
sub
push
test
mov
insl
fwait
push
repnz
les
jne
cmc
dec
inc
pusha
xchg
imul
lea
lea
insl
adc
and
cmp
dec
cmpsb
push
mov
lcall
out
mov
pop
incb
xchg
and
outsb
jns
push
mov
sti
imul
adcl
cmp
pop
jg
ss
repnz
add
out
lods
shrb
aas
icebp
adc
dec
das
lcall
nop
std
leave
inc
fistl
dec
and
sti
mov
leave
shlb
jl
addps
adc
fstpt
in
mov
sbb
jp
mov
xor
xchg
or
lods
dec
add
lods
add
sbb
sti
or
sbb
push
js
popa
loope
jbe
fdivrs
rclb
cmp
pop
addr16
movl
and
out
outsb
sbb
mov
push
lods
ja
sbb
scas
icebp
repz
jb
mov
push
int
fwait
les
cmp
adc
xchg
pop
jbe
fucom
add
push
arpl
rorl
xor
repnz
jmp
inc
int
rol
call
pop
mov
push
dec
decl
and
pushf
iret
cmp
fists
mov
test
inc
fcompl
lahf
jg
lcall
fsub
ret
into
inc
sahf
sbb
cs
aad
fnstcw
lcall
aad
xchg
or
mov
out
mov
pop
hlt
jno
cmpsl
sbb
and
aam
js
sbb
sarl
xor
mov
add
ror
mov
stos
sahf
fsubs
nop
inc
lret
or
rol
cmp
inc
out
stos
pusha
jnp
sbb
jne
mov
push
jb
mov
inc
fwait
push
cmp
ret
push
or
mov
hlt
dec
out
jno
imul
cmp
jecxz
lret
pop
imul
outsb
fs
ss
and
add
lret
fdivs
cltd
fsts
pop
subl
fs
rcll
sub
pop
aaa
add
fistps
cmpsl
pop
aaa
add
loop
jg
test
std
cltd
fs
imul
and
add
push
ja
roll
pusha
orl
ljmp
add
testl
push
mov
test
int3
ja
mov
movsl
add
push
ds
je
lret
xor
aas
sbb
shlb
divl
inc
es
btr
xchg
bound
jo
cs
scas
rclb
pop
sbb
adc
push
pop
push
fsubs
aad
rolb
rorb
test
call
bound
pushl
xor
mov
xlat
insl
inc
cmp
in
pop
sbb
mov
fistps
push
mov
push
inc
stos
imul
cmp
test
out
std
mov
test
in
es
inc
fucompp
lret
adc
aad
sbb
sbb
push
test
mov
sub
cmpsl
dec
test
sbb
scas
lret
out
das
enter
xor
xor
clc
mov
jecxz
dec
enter
or
ret
imul
jbe
inc
stos
xchg
cs
cli
lahf
repz
mov
shl
mov
cmp
sbb
add
sbb
movsl
push
push
mov
sub
sub
push
sbb
mov
es
push
in
push
dec
adc
adc
dec
fwait
xchg
jnp
adc
nop
stos
sbb
push
mov
imul
cmp
es
test
vpmacsdqh
dec
push
jle
xchg
dec
aaa
adc
ljmp
mov
leave
stc
mov
pop
inc
hlt
jmp
adc
and
xchg
es
out
lods
into
rcl
shll
insb
jl
orl
cli
pop
stc
mov
call
fs
decl
movsb
fdivrl
pushf
cmp
fsubr
repnz
mov
jmp
push
add
or
ss
pop
jmp
jmp
jmp
aas
mov
and
rorl
addr16
test
mov
andb
cwtl
and
repz
jb
mov
mov
std
mov
ja
int
popf
sbb
scas
pop
enter
dec
mov
mov
xor
cmp
faddl
jl
movsl
daa
and
and
out
sub
jle
mov
out
sahf
xor
pop
mov
pop
mov
lcall
sbb
inc
mov
int
arpl
cwtl
into
ret
sub
popl
xor
stc
add
cmp
outsl
addr16
inc
fstl
jns
mov
mov
lods
dec
std
out
and
or
push
lock
test
out
imul
lods
repnz
out
xchg
pop
in
add
pushf
push
out
out
repz
in
mov
das
enter
repnz
stos
pop
rcl
cmpl
pusha
je
add
cmp
mov
cltd
call
ds
rorl
movsb
pop
mov
incl
imulb
sbb
sub
nop
in
test
rcl
cmp
mov
dec
outsb
cmc
aaa
inc
mov
sub
cmp
pop
test
test
and
fstpt
and
xor
adc
movsb
aam
and
jg
shll
stos
shll
xor
std
and
lret
mov
adc
shll
xchg
fbld
out
xlat
and
int
repz
xchg
add
mov
mov
into
push
addb
add
push
pop
test
test
sub
jno
movb
out
pop
cwtl
pushf
mov
jmp
sbb
cmp
inc
jo
xchg
adc
call
jg
xor
ret
inc
fwait
outsl
in
out
jbe
mov
testl
lret
ljmp
xchg
add
mov
sbb
data16
ret
ret
cli
add
xorb
mov
jae
lock
jl
lods
sbb
mov
cwtl
or
push
mov
inc
ret
out
in
add
fildll
mov
loopne
pop
ds
icebp
rcrb
mov
jno
les
lahf
arpl
je
jp
pop
sbb
adcl
mov
dec
idivl
in
loop
xor
mov
pop
push
stos
mov
testb
mov
mov
negl
int3
cli
ja
js
sbb
lds
mov
cwtl
out
mov
adc
cs
pusha
push
gs
ss
push
mov
les
xchg
adc
cmp
nop
cmp
ss
mov
sahf
jnp
and
xchg
sbb
in
xchg
xchg
sub
in
xlat
lcall
dec
out
faddp
mov
cmp
or
sbb
ret
addr16
outsl
lods
mov
sahf
mov
mov
push
push
in
pop
pop
out
in
or
jl
movsl
lahf
pop
popf
call
cmp
jo
and
bound
dec
scas
imul
insl
pop
add
ds
pop
or
andb
mov
test
jmp
xchg
lret
stc
xor
xor
or
jb
xor
cmp
adc
shr
gs
iret
fstpt
cmpsl
sbb
shrb
pusha
mov
jmp
jl
pusha
mov
mov
jns
daa
jb
cmp
mov
aas
mov
cwtl
sub
mov
xchg
inc
enter
shll
je
xor
int3
enter
popa
sub
sub
jne
mov
gs
fwait
das
push
add
enter
pop
adc
inc
jle
xchg
dec
outsb
xchg
pop
into
sahf
inc
stos
cmp
aas
lret
inc
je
dec
scas
mov
push
push
and
bound
cmp
movsl
lods
mov
xor
xchg
out
es
mov
shll
das
and
pop
repz
push
mov
lock
test
icebp
mov
mov
pop
stc
pop
xor
sbb
fisttpl
xchg
xor
je
mov
sub
cmp
cltd
outsl
pop
pop
lods
insb
cmp
mov
fcom
lds
push
std
sbb
lods
mov
add
pop
lret
popa
insl
test
fwait
cmp
fisubrs
aam
insl
mov
sti
xor
mov
jb
xor
or
pop
lret
dec
in
cli
leave
mov
and
jecxz
ds
cmp
popf
out
pop
negb
dec
repnz
mov
push
repnz
push
in
rolb
cld
mov
jbe
lods
or
jnp
sbb
test
inc
mov
dec
adc
dec
or
sbb
or
mov
jb
and
mov
popa
pop
je
cwtl
movsb
mov
fucomi
mov
clc
mov
shr
loop
ficoms
mov
mov
and
add
adc
gs
cwtl
popl
popf
iret
in
cmpsw
xchg
cmp
sti
pop
lea
lahf
xchg
mov
call
mov
cmp
push
data16
xor
and
adc
push
pop
loope
fistl
sahf
ljmp
into
sub
hlt
xlat
sbb
hlt
mov
mov
rcrl
push
scas
ss
ret
lea
stos
imul
jne
and
push
add
stos
or
popw
leave
stc
mov
fwait
or
and
mov
ja
jl
add
adc
stc
stos
inc
test
test
nop
jmp
and
sbb
pushf
mov
lds
iret
daa
insl
das
flds
cmp
xchg
xchg
sbb
add
xchg
cld
push
arpl
jo
push
pop
and
andl
ret
fiaddl
mov
lret
mov
jle
cltd
clc
out
mov
push
lods
ljmp
sbb
cmp
popf
mov
add
sarb
inc
nop
mov
dec
in
imul
outsb
xchg
lcall
outsl
scas
lock
or
mov
push
pop
into
mov
or
sbb
lahf
dec
aam
ds
test
cmp
and
pop
cmpb
cltd
scas
mov
sbb
xor
int
rcr
sub
mov
loopne
testb
scas
repnz
push
mov
xchg
sbb
jecxz
xor
jo
inc
jb
push
xor
movsb
jno
sub
add
cmpsb
sbb
mov
push
cmp
das
mov
ficoms
cmp
call
in
mov
data16
push
sbb
fistl
or
fidivrl
mov
or
push
push
push
dec
sub
addr16
sbb
cmpsl
mov
mov
or
adc
jp
int
pop
mov
outsb
xchg
movsl
es
cmc
mov
push
push
dec
mov
scas
ljmp
mov
out
in
scas
cwtl
pop
push
enter
xchg
out
arpl
addl
push
mov
stc
or
mov
mov
mov
add
popf
popf
sbb
nop
scas
or
xchg
jg
in
adc
out
out
dec
pop
aas
scas
jbe
cli
pop
mov
pop
cmp
leave
mov
mov
insl
push
pop
sbb
cwtl
das
sbb
jl
and
stos
es
rcrb
jg
int
sbb
jg
test
add
movsl
cs
push
push
fs
mov
cltd
push
dec
jp
mov
stc
mov
mov
pusha
mov
or
adc
push
iret
mov
pop
fmull
sti
sbb
jg
sub
jb
cmp
jae
imul
roll
dec
das
mov
jp
sbb
cwtl
cmp
xor
test
inc
addr16
inc
xchg
mov
dec
jp
aaa
testl
pop
add
xor
dec
pop
adc
int
mov
lock
nop
xor
stos
outsl
or
sbb
sbb
sti
popa
push
fadds
xchg
inc
andl
shl
mov
imul
dec
ss
mov
inc
aaa
imul
pop
mov
out
sbb
fs
inc
cmp
hlt
jp
daa
data16
into
pop
pop
sbb
lock
add
or
fadd
sbb
jne
sarb
sti
push
lods
hlt
mov
in
adc
inc
in
sbb
mov
xchg
cmp
cmc
add
daa
cli
inc
shl
in
lods
orl
mov
cmp
mov
shrb
cs
sub
sbb
mov
out
popa
aas
cwtl
addb
pop
jbe
call
or
imul
pop
sbb
or
jb
out
cmpsl
pusha
jl
jns
or
jne
repz
add
cmpsb
insl
loope
stos
fisubs
inc
test
loope
xor
push
add
in
push
mov
cltd
outsl
push
add
ret
sbb
stc
ret
push
cmp
lcall
sub
mov
xchg
lods
enter
iret
std
sub
fs
pushf
fsubrl
add
mov
outsl
scas
or
pop
icebp
loope
push
jae
cmp
cmp
in
xor
outsb
xor
arpl
sbb
lods
pop
shll
fnsave
jmp
push
push
daa
dec
push
data16
in
and
pop
adc
sub
and
fisubrl
adc
jne
sbb
ffree
cmpsb
movsl
mov
cmp
aad
jbe
push
or
mov
insl
fidivs
repnz
stc
jl
movsbl
lds
pop
cmpb
jp
loope
push
inc
push
sbb
push
adc
mov
or
rcll
mov
lret
je
js
lods
mov
pop
and
outsl
jge
pop
pop
pop
sub
dec
push
push
mov
push
mov
enter
mov
hlt
adc
js
cmpsl
mov
lcall
icebp
ja
shl
add
and
or
cmp
aad
mov
mov
pop
int3
inc
aad
pop
push
pop
out
mov
push
jmp
ss
fldenv
mov
fs
test
pop
fmuls
movsb
inc
jecxz
cmp
int3
ss
jecxz
dec
jg
ret
sbbl
and
jns
movsb
or
pusha
push
mov
loopne
adc
dec
bound
adc
shrb
cmp
sub
and
cmp
es
and
or
rolb
jbe
cwtl
scas
std
mov
and
hlt
push
push
mov
mov
and
addr16
out
and
jno
push
lea
sub
jg
add
cmc
mov
imul
mov
stos
addb
shrb
add
popa
pop
mov
add
dec
sbb
xchg
mov
arpl
shrl
dec
outsl
jge
ret
sbbl
aaa
xor
sub
push
cmp
into
ds
notl
cmpsb
xor
cmc
pop
xchg
and
cmpsb
test
ds
pop
rcrb
roll
pushf
sub
call
daa
nop
in
push
adc
scas
jge
icebp
je
push
je
daa
mov
mov
test
aad
int
les
adc
sbb
clc
sub
sti
sub
sbb
idivb
jmp
mov
jmp
insb
iret
pushf
rcrb
and
insb
lods
loop
in
pop
push
dec
or
cmp
out
iret
ds
ss
je
jnp
mov
shrl
pop
jo
mov
adc
enter
bsr
lds
mov
gs
mov
sub
aad
fldl
les
push
xor
jge
pop
push
push
inc
arpl
test
xor
es
mov
pop
and
inc
arpl
xor
stos
sbb
push
push
stos
sub
and
ret
sub
pop
pop
jg
subb
ret
pop
lret
mull
ret
sub
lret
jp
je
xchg
pop
jno
xor
fidivrs
fwait
push
push
ds
arpl
push
sbb
ljmp
and
push
movsb
inc
sbb
jp
and
jl
out
xchg
or
cmp
cli
push
adc
push
dec
mov
jmp
xor
cwtl
dec
faddp
xor
loop
add
cmp
in
cmp
lods
pop
mov
adc
test
xchg
ja
std
mov
and
test
dec
loope
popa
je
lods
hlt
out
aam
lret
add
sub
dec
jle
pop
jmp
push
mov
out
addl
js
pusha
pop
add
dec
mov
jne
cltd
addr16
and
sbb
jnp
dec
or
imulb
mov
xchg
mov
dec
inc
xlat
jae
jnp
sahf
and
push
xor
xchg
sub
push
js
mov
adc
aad
pop
rcrl
sbb
mov
out
divb
neg
adc
out
xor
pop
add
sbb
mov
pop
loop
mov
ja
xlat
test
xor
mov
stc
xor
in
test
mov
shlb
mov
mov
xchg
dec
xor
in
std
ja
jle
push
cmp
push
cmp
pop
ret
mov
xor
cmp
pop
sbb
adc
pushf
jne
lret
iret
jbe
pop
icebp
or
jns
cmp
clc
jne
jbe
cmp
push
mov
or
cmpsb
dec
jge
adc
push
fdivrs
fidivrs
cmc
and
enter
jmp
jae
loope
lods
xor
sbbb
or
dec
xchg
sbb
cmc
jo
cmp
xchg
mov
jb
or
xchg
fmul
dec
jge
aad
movsl
push
inc
sub
mov
lret
add
les
mov
test
mov
mov
mov
aam
sub
xor
add
mov
int
xchg
dec
push
inc
push
cmp
movsl
js
pop
sub
or
jge
jg
xchg
fadds
addb
sahf
lock
and
out
addl
or
xchg
adc
leave
jnp
push
and
mov
js
xchg
aaa
test
adc
imull
ret
int3
mov
cmpsl
inc
xchg
cmc
aas
loope
xchg
adc
in
mov
inc
mov
sbbl
mov
pop
je
mov
cmp
gs
fsts
mov
aaa
mov
cmpsb
ret
faddp
into
sbb
lods
sahf
inc
mov
mul
xchg
dec
into
pop
das
pop
mov
fwait
sub
or
in
dec
dec
sbb
faddl
or
or
inc
pop
mov
sub
inc
movsb
stc
add
add
mov
outsl
loop
outsb
xor
cli
jge
cmp
and
sub
loop
enter
cs
sbb
sbb
ficomps
jo
div
lret
add
jbe
mov
shll
xor
cmpsl
iret
flds
push
pop
addl
out
fimull
mov
xchg
pop
out
mov
arpl
out
jno
jno
negb
mov
pop
cmp
shl
sbbb
xchg
xor
sub
xchg
sub
or
out
out
ss
repz
xchg
push
pop
xchg
fdivs
and
inc
sub
iret
mov
jmp
mov
sbb
jp
cmpsl
repz
adc
les
xor
mov
dec
jnp
dec
bound
sti
sbb
pop
pop
loop
lods
jns
jle
add
push
push
cmpsb
ljmp
pop
adc
out
jle
idivl
cli
xchg
mov
push
pop
testb
push
gs
cmpsb
jge
icebp
sbb
std
push
mov
and
add
scas
data16
cmp
push
loope
jp
push
int3
dec
ret
testb
xchg
or
dec
xchg
sub
lods
roll
rcll
mov
cmp
pop
mov
add
jmp
mov
shlb
cmp
push
sub
sbb
leave
jle
jns
out
daa
test
mov
xchg
and
mov
cltd
clc
inc
mov
dec
xchg
xchg
in
ss
ret
inc
ss
mov
jo
je
lret
sub
sbb
xor
movsb
stos
out
sti
mov
in
push
pop
sbb
adcb
call
out
mov
lods
xor
xchg
les
adc
mov
lahf
add
stos
or
sbb
loope
xor
xchg
ljmp
dec
cmc
imul
aam
lods
fisttps
push
cmpsb
xchg
aas
arpl
scas
sub
inc
cmpsl
adc
sub
sub
dec
sbb
mov
jle
stc
push
pop
and
scas
int3
push
and
pop
pop
xor
or
lahf
pop
fiaddl
adc
or
test
jns
fnstenv
inc
inc
or
rorl
bnd
imul
and
negb
adc
ds
mov
dec
or
sub
cmp
ret
cmp
js
xor
jg
icebp
fwait
lcall
sub
aam
adc
inc
nop
nop
and
loope
sub
clc
ss
xchg
test
into
sti
inc
mov
xor
jae
es
mov
testl
ficoml
mov
inc
jnp
incb
dec
in
out
cmp
int
test
out
and
nop
test
js
stc
out
ret
adc
jl
jo
out
xchg
xor
pop
popf
push
pop
inc
mov
clc
dec
sub
mov
fnsave
pop
xor
fstpl
rolb
sarb
dec
cltd
sub
lret
inc
aas
icebp
xchg
sarb
push
mov
aam
sub
insb
lcall
icebp
push
mov
mov
mov
js
and
adc
insb
push
jg
out
sub
mov
ja,pn
loop
push
iret
pop
mov
loopne
outsl
dec
push
jle
stc
mov
mov
fucom
and
fadd
jecxz
sbb
nop
ljmp
jo
movsl
dec
dec
mov
xor
outsl
xchg
outsl
sub
bound
loopne
dec
fldcw
rorb
not
scas
or
add
dec
add
mov
sahf
pop
es
test
daa
aas
shll
aaa
jp
cmp
pop
xchg
sbb
cmp
push
into
xchg
mov
vsqrtsd
xchg
jae
inc
scas
test
movsb
pop
push
jle
push
mov
mov
and
in
imul
mov
mov
mov
inc
stc
in
into
mov
or
int3
enter
loopne
rol
dec
mov
cmp
push
popf
xor
sbb
jmp
nop
adc
sub
pop
or
mov
jle
mov
in
xchg
popf
xchg
pop
movsl
pop
pushf
mov
sbb
pop
les
xchg
push
sub
jge
repnz
and
movsb
xchg
js
push
out
mov
push
mov
xchg
rcrl
loopne
pop
dec
or
push
cmp
pop
mov
or
mov
or
lahf
sub
ds
sahf
cmp
repz
repnz
sbb
mov
fxtract
outsl
push
pop
gs
adc
mov
ror
daa
cmp
sbb
cwtl
ds
es
mov
add
test
inc
shrb
mov
sbb
stc
xchg
push
cmp
inc
dec
mov
cmpsb
sti
sahf
cmp
mov
inc
es
or
xchg
mov
das
and
cmpsl
imul
fldt
and
or
cltd
decb
pop
bnd
lret
vpand
scas
adc
jg
popa
jne
enter
out
into
push
stc
pop
mov
adc
mov
mov
push
inc
sbb
movsb
mov
jbe
mov
sbb
add
stos
shll
ljmp
pop
pop
dec
adc
sub
push
pusha
or
mov
outsb
lods
mov
xchg
sahf
hlt
js
lea
or
enter
inc
ja
loope
mov
movsl
sub
les
push
in
rcl
into
enter
sub
xchg
xchg
inc
lods
mov
test
mov
sbb
fcmovne
mov
loop
pusha
test
loop
inc
int
mov
int
popf
hlt
rclb
mov
dec
cmp
ret
cmp
mov
hlt
repz
or
popf
out
int
scas
add
movsl
mov
int
outsl
or
xlat
shlb
mov
pop
xchg
rcl
mov
fcmovnbe
mov
aad
mov
in
jg
aam
fwait
inc
sahf
inc
push
adc
jge
lret
lahf
leave
jbe
push
inc
popf
jo
into
jns
icebp
js
gs
dec
mov
jno
pop
sub
xor
pop
repz
xlat
jecxz
or
mov
or
mov
jmp
enter
hlt
sbb
cmp
daa
stos
mov
jo
mov
pop
stos
mov
fistl
sti
cmp
jb
mov
dec
xor
sbb
cmp
mov
pop
pop
lret
hlt
xor
mov
xor
push
adc
mov
sub
imul
iret
das
sub
nop
sub
cli
enter
scas
sub
dec
mov
rolb
lcall
outsb
ja
fucomi
mov
js
jl
sub
loope
popl
push
fidivrs
jecxz
or
mov
dec
xchg
cltd
insl
dec
loop
repz
std
add
scas
dec
add
push
movsl
push
loop
loop
inc
and
pop
push
push
cltd
mov
inc
rorb
mov
mov
jno
add
shlb
aas
mov
scas
jne
in
pop
das
scas
cs
pop
std
mov
push
aam
jle
loop
xor
notl
in
repnz
sub
rolb
xlat
sub
cwtl
fnsave
aad
stc
lcall
into
jl
cmpsl
mov
rcrl
aaa
pop
push
mov
inc
push
nop
rcr
cmp
add
adc
push
fld1
test
inc
cli
xor
push
inc
movups
popf
adc
les
call
xor
adc
clc
mov
or
mov
and
imul
and
jbe
orb
gs
divl
clc
push
inc
xchg
xchg
jns
and
pop
jl
lock
inc
jno
mov
adc
cmp
aam
les
inc
add
pop
sub
adc
add
cmp
lock
stc
movsl
test
lock
mov
mov
lods
jl
ret
repnz
push
push
pop
mov
and
jp
inc
fwait
testl
cmp
pop
dec
inc
pop
or
xchg
fisubrs
je
fistpll
jns
enter
mov
rcr
mov
cwtl
add
rcrb
sbb
and
mov
xor
sub
stos
inc
call
cmpsl
inc
jo
jnp
lcall
rcrb
outsb
inc
aas
push
adc
lcall
lahf
lea
aad
fbstp
dec
push
xchg
or
fs
std
adc
or
sub
popf
and
jns
mov
mov
inc
or
in
cmp
jns
test
dec
subb
dec
out
or
add
or
inc
adcl
inc
cmpsb
xchg
sbb
sub
adc
mov
into
xchg
cmp
xchg
pushf
push
imul
xchg
push
cmc
sbb
insl
mov
or
and
jae
mov
shr
fldcw
out
arpl
xchg
dec
data16
mov
test
imul
and
shll
test
mov
imul
lods
inc
xor
add
outsl
sbb
cli
dec
cmpsl
and
mov
movsb
jge
popl
inc
and
dec
mov
ja
pop
ficoms
into
xchg
loope
out
ret
dec
jg
push
imul
push
inc
mov
cmpsb
push
add
js
sbb
movsl
scas
ret
inc
ret
pusha
lods
sub
imul
lods
mov
dec
cmpsb
cltd
cmp
ljmp
xchg
pop
add
pop
mov
icebp
pop
jl
out
sub
inc
addr16
lret
sub
xor
or
icebp
sbb
xchg
repnz
movsl
mov
dec
jbe
jbe
jecxz
aam
ja
jle
xchg
pop
pop
mov
xchg
or
stos
rcl
pop
adc
xchg
inc
and
in
call
add
push
int
lcall
popa
push
mov
push
insl
jbe
push
xchg
mov
loopne
sub
adcl
call
pop
in
sbb
adc
sbb
das
mov
add
shrb
mov
mov
mov
call
scas
icebp
and
in
jns
ss
in
lahf
and
fbstp
out
shr
or
push
jae
pop
sbb
mov
jae
or
cmp
daa
addl
and
xorl
sub
xchg
ss
xchg
scas
pushf
add
test
mov
ficompl
nop
add
cmc
sub
dec
add
xchg
pop
ds
popa
mov
xchg
in
mov
mov
dec
dec
rcrl
mov
dec
push
xchg
pusha
mov
mov
repnz
xchg
cmp
rorl
mov
cmp
lahf
pop
cmc
into
rorl
pushf
out
js
or
or
xchg
add
mov
shlb
pop
repz
addr16
loopne
ja
pop
mov
adc
xchg
push
enter
sbb
iret
es
adc
sti
std
sbb
mov
fs
adcb
out
xor
xor
lret
mov
mov
ret
mov
int3
bound
mov
xlat
mov
inc
fisubrl
cmp
jb
rclb
jns
fucomp
xchg
test
sub
loope
sub
mov
cltd
inc
pop
adc
mov
pop
jae
pop
xorb
adc
jb
lcall
insb
stos
mov
xchg
jb
mov
in
imul
and
pop
pop
ficoms
shl
jbe
pop
inc
fwait
xchg
sbb
or
jecxz
adc
dec
mov
jp
decl
inc
insl
lret
ret
pop
inc
loope
sub
cmp
scas
outsb
fnstsw
mov
push
jp
pop
add
jo
popa
xorl
mov
mov
iret
add
test
add
add
fisttps
subl
lea
sbbb
push
rcrl
pop
sbb
xchg
or
inc
xor
adc
mov
dec
sbb
add
mov
les
mov
lods
dec
insb
add
jb
testb
ret
nop
fiaddl
leave
popa
mov
mov
fs
cli
test
call
call
lods
scas
sbb
jo
jnp
out
outsb
mov
pusha
movsl
daa
addr16
ss
and
divb
insl
data16
sub
xchg
mov
fisttps
pushf
out
xor
test
or
xchg
cli
dec
mov
outsb
imul
add
into
mov
movsb
dec
imul
lock
shlb
ja
out
jle
cmpsl
dec
inc
jp
pop
cmpsl
push
and
jns
test
lret
adc
scas
jg
les
or
jbe
jne
nop
repnz
xchg
xchg
xchg
cmpsb
sub
or
push
mov
iret
mov
movd
stc
out
mov
xor
ficomps
mov
imul
and
mov
dec
pop
jge
pop
fildl
cltd
in
push
int
and
das
arpl
cs
xor
repz
daa
pop
sarl
fs
pop
leave
cmpsl
fsubrs
pop
fidivrl
test
hlt
mov
add
shl
pmullw
push
enter
mov
mov
jl
and
fisubl
or
sub
fbstp
sbb
hlt
rorl
jmp
lea
inc
pop
test
lret
out
mov
jg
sub
mov
push
movsb
jl
bound
sbb
jg
add
daa
pop
sbb
push
mov
push
cmp
icebp
xorl
dec
xchg
fxam
in
push
and
dec
in
scas
pop
adc
fnstenv
out
sub
out
push
adc
mov
fwait
sar
adcb
mov
test
push
pushf
cmp
xlat
mov
jmp
xchg
push
sub
repnz
aas
xchg
dec
push
lahf
loopne
jo
jo
test
fildl
andb
enter
insb
sub
in
leave
xchg
sub
cli
jb
iret
jns
int
pop
sti
shl
xchg
xor
mov
inc
mov
fs
icebp
aas
mov
inc
out
pop
arpl
cltd
pop
jno
leave
outsb
loopne
pop
xor
pop
jg
cltd
mov
cwtl
adc
ja
insl
or
sbb
faddl
cmp
pop
imul
mov
jae
cmp
and
fwait
insl
idivl
adc
nop
sbb
stos
sbbb
stc
outsb
shll
adc
or
mov
adc
jo
or
ret
add
scas
enter
adc
ljmp
stos
into
inc
scas
cmp
fwait
jns
cmp
aas
mov
ficoml
mov
xchg
lds
repz
mov
or
inc
insl
inc
in
sub
jo
pushf
sub
bound
xchg
dec
repz
push
popa
and
imulb
nop
lock
int
stos
inc
mov
push
mov
mov
clc
mov
loope
push
push
adc
popf
lcall
dec
in
pushf
jbe
jmp
in
xor
pusha
mov
pop
mov
loop
fs
movsb
shll
and
and
dec
cmpsl
movsl
jo
fnstenv
or
test
mov
in
adc
mov
sbb
adc
and
sub
xor
mov
jbe
mov
dec
dec
sbb
dec
mov
mov
jne
inc
icebp
fbld
xor
xor
subl
mov
jb
cwtl
sub
stos
pusha
inc
lods
aam
xchg
push
aas
lcall
cmp
ljmp
leave
or
xorb
jo
mov
add
unpcklps
or
imul
and
sub
out
lods
sub
mov
movsl
out
test
stos
mov
and
insl
or
mov
enter
movsl
push
jl
mov
jns
shll
mov
std
inc
or
jmp
pop
fidivs
dec
adc
js
cmc
in
push
mov
movsb
icebp
and
loop
add
call
jecxz
push
fistpll
sub
inc
add
xchg
sbb
gs
dec
or
ret
xchg
std
adc
push
mov
test
sub
push
repz
pop
lcall
mov
mov
mov
test
lock
pop
ret
int
pop
test
stos
ja
lcall
ret
jl
scas
jb
out
jl
imul
xchg
fnstenv
adc
movsb
je
adc
mov
lcall
jle
addr16
push
xor
ljmp
imul
cli
outsb
loopne
sbb
imull
call
fiaddl
adc
fwait
cmp
leave
mov
sub
mov
sub
pop
lret
ret
cmp
int3
scas
pop
pusha
fisubrs
loopne,pn
jbe
adc
xor
pop
xchg
fnstenv
jg
add
sub
adc
xchg
jmp
mov
jo
repnz
aad
jo
int3
popf
ds
jns
test
test
int3
ja
lret
cld
mov
push
enter
pusha
pop
data16
sbb
jle
mov
sbb
or
lret
out
add
roll
repnz
xchg
nop
shrb
cmc
pop
call
pop
mov
es
mov
in
push
xchg
sahf
jbe
fidivl
mov
xchg
push
mov
iret
cmp
adc
xlat
ret
jnp
loopne
sahf
lods
cmp
shll
scas
idivl
and
lret
sti
cs
in
push
xchg
inc
xchg
jbe
fimuls
jb
call
pop
pop
dec
stc
js
jg
xchg
inc
test
rcl
sar
push
or
mov
adc
ret
nop
pop
or
push
push
mov
cli
push
leave
push
xchg
or
mov
lcall
push
repnz
jp
inc
sub
inc
call
test
mov
adc
inc
jnp
sbb
add
scas
mov
push
and
cmpsb
in
fisttpll
xor
jle
sbb
mov
inc
xchg
xor
lahf
shlb
cmpsl
decl
cmp
in
scas
ds
cmp
lods
lahf
or
pop
test
jns
pop
inc
push
outsb
xor
lods
mov
mov
sub
pop
push
mov
fcomps
das
notl
gs
js
pop
imul
sbbl
mov
cmpb
jno
dec
arpl
push
dec
cli
xor
xchg
or
push
add
cwtl
push
and
daa
dec
and
das
fbstp
insb
xchg
jb
inc
sbb
mov
fs
mov
pop
cmp
jns
xchg
lods
fistps
sarb
cmp
jmp
mov
push
test
cmp
mov
mov
mov
sti
test
in
int
dec
cmp
out
push
int3
sti
hlt
stc
or
cmp
gs
jo
outsl
pop
pop
xchg
inc
insl
addr16
out
fidivl
push
icebp
mov
imul
xchg
movsl
lahf
xor
adcb
lods
mov
jecxz
sub
das
adc
mov
lret
dec
add
sbb
es
mov
dec
push
push
inc
lahf
int
xor
cmpl
and
js
mov
addr16
dec
and
subb
pushf
ljmp
out
mov
mov
std
cmpsb
xchg
inc
lock
rclb
js
lods
mov
out
stc
xlat
mov
ret
xchg
mov
xchg
outsl
mov
fmul
adc
data16
loope
jecxz,pn
xchg
jg
sbb
mov
and
dec
cmp
insb
sub
xchg
dec
add
sbb
fmulp
jecxz
mov
fs
mov
ja
out
aam
inc
jp
mov
mov
push
rcrl
dec
lret
daa
or
sarb
jg
or
mov
clc
push
add
je
popf
aaa
aam
movsb
out
sub
xchg
lret
xchg
mov
or
sbb
jmp
test
je,pn
std
mov
call
push
repnz
fcmovne
mov
scas
roll
rorl
lahf
cmp
aam
sub
push
stc
mov
ss
mov
xchg
sbb
dec
dec
or
cltd
add
fisubrl
mov
add
pop
lods
push
mov
fists
xchg
int
popf
sbb
inc
in
mov
jno
sub
je
inc
inc
pop
inc
jo
movsb
cmp
out
aam
jbe
xor
mov
clc
xor
scas
xlat
mov
mov
xchg
ret
das
data16
sbb
xor
sub
sahf
test
in
jmp
fimull
imulb
pop
mov
in
lret
mov
mov
popa
mov
mov
push
push
std
lret
mov
ljmp
imul
mov
cmp
jno
sbb
pusha
rcll
lret
jnp
stos
xor
xchg
mov
fdivrl
aaa
sub
fwait
adc
in
sbb
outsl
std
xchg
xchg
push
stos
mov
daa
adc
push
pop
push
cltd
push
popf
pop
and
jl
and
xorb
pop
cmp
gs
xlat
jbe
xor
jae
into
call
push
jl
inc
push
or
jmp
dec
repz
subl
push
add
lcall
and
stc
and
cmp
jae
fisubrs
add
sub
inc
mov
dec
adc
mov
mov
pop
mov
popf
add
sbb
shl
das
fistl
and
pop
mov
sbb
mov
clc
mov
adc
pop
sub
cmp
mov
jge
pop
push
or
movsl
or
add
dec
push
stos
pop
add
sub
push
pusha
sbb
dec
sub
lcall
test
popa
dec
push
nop
xor
sbb
sbb
push
outsb
sti
cs
adc
xchg
lods
loope
pusha
mov
repnz
rcrb
mov
cld
fstps
in
and
test
sbb
adc
inc
xchg
cmp
fs
mov
adc
in
imul
mov
lcall
jb
jg
out
ret
sub
pusha
rorl
rcrb
dec
or
inc
fimull
sub
sub
jge
sbb
adc
stos
xor
mov
or
lret
les
sbb
in
loop
mov
ljmp
div
jmp
dec
adc
lods
push
in
lahf
int
xchg
leave
sub
cltd
outsb
pop
iret
fidivl
mov
pop
push
dec
or
inc
xchg
jecxz
test
xor
sub
push
push
in
xor
mov
cmp
ds
loop
sub
loop
xor
fwait
cltd
jp
clc
cmpsl
sarl
lret
or
mov
int
and
push
shrl
sub
lret
push
je
push
cltd
mov
and
scas
cltd
cwtl
jg
fwait
push
cmpsl
mov
or
mov
mov
scas
rclb
lods
mov
and
mov
add
fucomip
in
cmpl
gs
sub
roll
mov
add
stos
mov
lret
and
mov
mov
pop
sbb
jle
adc
xor
mov
and
sti
hlt
jne
ljmp
out
mov
in
mov
xchg
pop
and
loope
mov
faddl
inc
jmp
ljmp
aas
xor
rol
cmp
add
stos
xor
mov
lea
rcrb
and
dec
add
imul
mov
adc
xor
lahf
scas
scas
cmp
repz
leave
fs
pavgb
dec
in
popf
aas
adcl
push
sbb
sbb
push
sub
and
pop
mov
xchg
adc
icebp
mov
lea
sbb
jno
imul
cwtl
dec
ja
movsb
in
test
mov
ss
xchg
add
fwait
dec
or
and
lock
clc
lcall
xchg
jecxz,pn
mov
xchg
xor
scas
add
mov
dec
mov
inc
dec
out
pop
inc
push
xor
mov
negl
loop
cmpsb
dec
xchg
sarb
xchg
and
hlt
and
cmp
imul
jbe
and
daa
aaa
pop
ds
inc
mov
fwait
cld
mov
sbb
sub
or
cmpb
ret
jp
call
lret
mov
xchg
iret
shll
mov
loop
mov
pushf
mov
pushf
sbb
inc
jae
jge
mov
xchg
mov
ljmp
repz
sub
int3
sub
je
push
add
gs
adc
jmp
push
das
dec
pop
cmpl
aaa
ret
dec
fbld
mov
stos
jge
adc
lods
loop
add
lret
std
lods
cmp
cmpsb
jecxz
lahf
and
mov
aas
out
leave
mov
shlb
mov
mov
cmc
xor
sbb
fcomi
push
dec
mov
xor
out
pop
pop
fsubrl
and
subb
mov
gs
ja
test
jp
xchg
fs
dec
fs
lea
lcall
sub
dec
dec
hlt
xor
mov
insl
test
sub
ljmp
mov
fiaddl
sub
shr
push
dec
mov
outsl
push
pop
dec
push
aad
or
xor
cmp
adc
test
sarl
or
xor
andl
sub
mov
pushf
outsl
cmp
add
loop
and
jg
cmp
and
push
sbb
repz
sub
jo
mov
scas
xor
jmp
jae
es
pop
add
xchg
mov
pop
jo
xor
aad
stos
dec
clc
int
hlt
enter
fdivs
sar
iret
jecxz
mov
call
or
lretw
das
pusha
aad
mov
jno
push
loopne
xor
rol
leave
inc
sub
mov
sbb
mov
ficoml
jo
clc
xor
insb
add
les
rcrb
push
add
and
sub
jo
pop
sbb
cli
push
and
inc
mov
sbb
and
inc
push
mov
repnz
fists
add
aas
add
dec
inc
mov
adc
pop
pop
jnp
add
arpl
int
dec
mov
xchg
dec
cld
adc
data16
sub
je
push
jnp
cli
xor
adc
add
in
or
push
lock
xchg
or
imul
mov
inc
mov
xor
je
imul
test
out
and
sti
jmp
pop
sbb
fstl
pop
test
inc
fwait
subb
sti
dec
insl
sbb
xchg
mov
es
sub
inc
mov
xchg
decl
mov
clc
jae
mov
cmpsl
call
popa
frstor
jnp
sub
jae
inc
adc
gs
or
pop
mov
in
loope
ds
cmp
jle
fs
mov
bound
jb
or
push
in
xor
mov
in
out
inc
mov
sahf
in
jg
outsb
xchg
and
lea
mov
ret
std
pop
into
sbb
jmp
mov
icebp
fistpl
pop
stc
sahf
outsb
xor
dec
iret
rcrl
sahf
out
and
ljmp
fcompl
pop
loopne
pop
jecxz
ljmp
gs
ljmp
jnp
cmp
ror
popa
cmp
aad
add
add
push
mov
nop
dec
lret
mov
mov
dec
std
loope
fsubrs
adc
adc
xchg
pop
arpl
jl
adc
xor
push
repz
pop
xchg
mov
rcll
sti
dec
fdivs
movsl
addl
je
icebp
adc
xlat
mov
lcall
dec
sbb
femms
xchg
es
xor
adc
rolb
dec
lcall
cmp
jmp
outsl
pushf
repz
fwait
inc
lods
lret
xchg
cli
stc
addr16
movb
gs
cwtl
sub
sub
or
out
outsl
adc
and
sarl
imul
sahf
push
lods
insb
xchg
lods
xchg
cmpsb
popa
iret
mov
dec
repnz
lock
dec
jle
add
and
in
sysret
ds
ret
inc
push
add
sub
add
add
lods
pusha
cmp
decl
mov
mov
cwtl
push
pop
cmp
ljmp
js
hlt
inc
pop
xor
mov
inc
pop
jmp
dec
ja
insl
push
xchg
xor
push
push
xchg
mull
adc
adc
xor
jns
xchg
cmpsb
dec
rcrl
rclb
inc
fadds
pop
mov
add
jbe
outsb
mov
fcmovnb
cmp
mov
cltd
lret
xchg
xlat
pop
push
js
loop
div
orb
mov
shrb
add
push
or
mov
jae
dec
mov
insb
fidivs
push
aaa
xor
inc
int3
inc
cmpsl
out
push
mov
mov
add
mov
or
push
or
pop
fwait
adc
sbb
daa
shlb
pop
popa
xorb
inc
cmc
cmp
push
lea
loopne
xlat
mov
cs
rcl
call
mov
push
mov
push
dec
jne
pop
add
fnstsw
jne
or
xchg
mov
xchg
push
sahf
xchg
xchg
mov
std
stos
dec
pop
mov
ror
adc
cmp
enter
je
lret
sarb
jbe
adc
dec
xchg
push
sbb
stos
sti
pop
xor
arpl
das
out
dec
mov
inc
out
inc
pop
adc
sub
sbb
hlt
mov
mov
cltd
jno
pop
xor
jae
je
loopne
fwait
jle
jge
mov
sub
gs
je
nop
mov
or
lods
mov
das
xlat
lahf
shl
inc
mov
andl
push
adc
fs
mov
cmp
aaa
fdivrs
popl
lock
and
pop
push
ret
pusha
shlb
pop
jge
jg
jp
out
ss
sarl
scas
out
push
add
mov
dec
lock
lret
pop
stos
outsb
and
call
je
pop
jge
aaa
mov
int3
mov
xor
pop
push
pop
in
rcl
and
enter
ja
jmp
inc
mov
jge
fcoml
cli
rcll
sbb
je
subl
rcrl
inc
cmp
stos
sub
xchg
pop
gs
in
adc
cmp
pop
out
pop
in
fdivr
mov
jnp
push
jecxz
mov
add
cwtl
mov
add
shlb
in
stos
test
lods
aaa
mov
pop
push
fidivs
inc
pop
in
xor
pop
add
push
je
or
adc
fcoms
mov
add
out
push
xchg
popa
fs
mov
popf
cmp
dec
sbb
lahf
jae
cmpsb
cmpsb
cmc
and
dec
mov
test
xchg
addl
movsl
xor
push
mov
cmp
mov
inc
lcall
mov
push
add
push
adc
xor
in
jno
lcall
cmpsl
ds
fnstenv
inc
push
push
cmpsb
jg
inc
repnz
adc
cli
jne
adc
lds
fistpl
inc
mov
jp
dec
mov
sbbb
sub
icebp
sub
mov
movsb
cmp
and
fnstcw
daa
add
outsl
enter
xor
push
and
inc
nop
xchg
add
push
xchg
mov
dec
stos
mulb
mov
inc
decb
je
cltd
loop
lret
add
test
xor
lea
push
cmp
pop
repnz
cmpsb
daa
mov
mov
mov
dec
adc
das
push
xchg
mov
xchg
aas
mov
mov
stos
mov
out
add
into
cmc
and
int3
mov
mov
iret
pop
inc
popf
cmc
adc
aad
ljmp
pop
push
or
jmp
bound
mov
fucomip
pop
cli
xor
dec
adc
jl
cmp
push
jmp
xchg
lea
mov
loope
adc
dec
insb
faddl
push
mov
add
sbb
js
stos
int3
loopne
inc
mov
push
or
pushf
ljmp
arpl
stos
pop
idiv
push
jge
mov
inc
dec
rcll
enter
xor
or
jo
pusha
hlt
mov
popa
adc
or
cmp
jnp
xchg
pop
mov
cwtl
sub
jle
dec
sub
andl
mov
fnstcw
movsl
jmp
dec
lcall
adc
dec
pop
jle
fidivl
jo
out
inc
cmpsb
mov
ss
shr
test
lock
and
inc
rcl
movsb
mov
dec
subps
aas
mov
inc
je
movsb
icebp
loopne
call
jg
mov
jb
imul
stc
nop
dec
adc
test
push
fucomi
mov
cmp
push
sbbl
inc
push
sub
or
or
xor
xor
lock
mov
sti
jp
jae
cmp
aad
aad
outsb
insb
jae
dec
pop
in
repnz
sbb
jo
mov
dec
sub
add
loop
les
je
push
fiadds
and
xlat
stos
into
lock
fisttpll
sub
lods
pop
rolb
push
jae
cld
in
cltd
lods
mov
sub
adc
push
into
mov
call
push
dec
sub
push
test
stos
fsubrl
not
ret
out
xor
mov
dec
cld
shlb
mov
inc
dec
cld
pop
popf
jecxz
sbbl
mov
repz
pop
jge
sbb
cltd
mov
and
aad
cld
ljmp
add
pusha
inc
ja
lahf
mov
into
sbb
cmp
aaa
out
insb
mov
jne
jae
adc
jp
dec
popa
out
pusha
outsl
int3
and
push
jnp
push
xchg
loop
pusha
sbb
or
xor
leave
pusha
outsb
add
inc
nop
mov
lret
repz
mov
imul
xchg
insb
jecxz
mov
ja
xor
clc
cmp
pop
xor
jne
dec
fbstp
data16
shrl
pop
hlt
mov
mov
js
push
pop
out
pop
adc
cmpsb
mov
lahf
adc
pop
data16
stos
cltd
or
cli
add
mov
inc
push
inc
mov
xchg
mov
cmp
xchg
push
ror
inc
test
int
sbb
das
xchg
lcall
and
shll
aas
and
adc
and
xchg
inc
adc
push
xor
sbb
cmc
scas
mov
add
pop
xchg
jmp
aaa
push
xorb
pop
jns
dec
cmpsl
arpl
mov
pop
mov
jge
cmp
pop
inc
ret
mov
inc
fadd
lahf
imul
lods
or
cmc
pop
cmp
enter
gs
adc
add
jmp
shlb
pop
fidivrl
mov
rclb
xorb
xchg
cmp
repz
lcall
mov
iret
inc
push
lret
push
add
mov
test
inc
dec
pop
adc
jae
hlt
mov
cmp
dec
mov
xchg
stos
icebp
jns
mov
xchg
push
sbbb
cmp
fwait
jns
fmulp
sbb
mov
mov
mov
insb
mov
jle
int
lret
movsl
bound
jp
inc
insl
adc
rorb
inc
cld
or
xor
insl
scas
xchg
mov
xor
jae
int
pop
xor
cmpsb
and
andl
stos
pusha
inc
fwait
xchg
xchg
subb
test
xor
out
mov
dec
lahf
jo
rcl
inc
mov
ret
adc
pop
jno
xor
push
aas
pop
mov
sbb
cmc
dec
dec
pop
sti
sbb
in
icebp
xor
adc
scas
xlat
mov
push
mov
or
push
adc
outsb
lods
or
push
mov
adc
xchg
leave
sub
dec
mov
aaa
xchg
out
ds
add
jge
jge
shrl
jnp
push
inc
or
pusha
cli
or
mov
mov
mov
aas
mov
adc
pop
in
ja
cld
inc
jl
mov
out
mov
cmpb
pop
repz
xor
push
inc
shrl
loopne
push
test
ja
movsl
jne
adc
xor
rorb
stos
xor
adc
mov
or
lahf
sarl
icebp
push
cmp
dec
inc
jno
dec
and
xor
jnp
mov
fwait
pop
fistps
test
into
adc
adc
ror
insb
push
adc
lods
and
push
aaa
je
push
mov
xor
cmp
call
jg
xor
stos
out
add
mov
pop
jnp
rolb
jl
adc
jmp
fsubrl
inc
out
faddl
pop
dec
jle
out
inc
sti
test
fiaddl
sti
mov
lret
jns
push
ret
pop
add
dec
xor
ljmp
or
and
imul
dec
shlb
or
das
out
mov
enter
sub
aad
setae
and
stos
neg
popa
fs
or
push
push
enter
pushf
dec
dec
data16
push
lret
sub
ret
in
sub
data16
push
aad
dec
pop
pop
pop
mov
fdivr
push
push
inc
mov
imul
ljmp
xor
mov
call
push
mov
test
loopne
adc
inc
ds
mov
jmp
mov
mov
cmp
cmpb
or
mov
jbe
ja
shrl
fldenv
fcoms
or
pop
aaa
test
int3
xchg
and
jmp
insl
lods
fildl
aaa
lds
outsl
mov
lods
push
aam
xlat
xchg
mov
clc
xchg
call
mov
adc
adc
out
out
sub
lods
aad
inc
ret
popa
mov
cmpsb
xchg
in
or
inc
loopne
int3
stos
cmp
pop
xor
mov
push
data16
jg
jne
push
int
sub
insl
mov
inc
jp
ror
lret
or
js
mov
jb
jmp
cwtl
out
loop
es
adc
bound
popf
xchg
jnp
cltd
hlt
jns
outsl
setne
bound
dec
repz
fcmovnb
fcmove
hlt
dec
test
gs
ds
clc
cmp
fsubl
aam
ret
and
pusha
mov
push
xchg
xchg
mov
inc
lahf
es
and
mov
aam
fmuls
sbbb
or
scas
dec
inc
jge
fistpll
arpl
bound
popf
push
into
out
mov
push
shll
jle
xchg
fidivl
dec
or
adc
shr
xchg
test
pop
testb
lahf
into
scas
popl
sbb
in
lahf
repz
and
mov
jo
bound
fstpl
xchg
dec
xchg
add
popf
dec
sbb
adcb
mov
xchg
dec
movsl
repz
inc
stc
mov
lock
or
les
imul
xchg
imul
out
xchg
nop
lret
sti
sub
out
js
xchg
inc
ja
xchg
in
daa
fcoms
jl
bound
rcrl
jg
push
scas
xor
out
aas
div
das
jp
aas
shrl
mov
sbb
scas
lahf
popf
push
add
lret
sub
inc
arpl
test
ds
lods
popl
cltd
mov
scas
xor
or
inc
jo
and
es
mov
add
xor
pop
into
adc
inc
pop
mov
daa
and
out
outsl
jle
cwtl
pop
and
mov
loope
xchg
lds
mov
and
subl
push
in
cmp
xchg
mov
ret
cmp
das
into
loop
mov
enter
pop
sbb
fsubs
pusha
jg
mov
pushf
sarb
out
xchg
or
fdivrp
cli
inc
loopne
out
cmp
xchg
sbb
std
js
xor
push
mulb
arpl
daa
pop
and
fcoml
cmc
and
xchg
pop
mov
jno
sti
inc
cmp
stc
inc
sbb
fisubrs
loop
pop
sbb
push
xchg
mov
xchg
push
push
nop
into
enter
arpl
jnp
int3
test
icebp
movsb
ret
mov
movsl
movsl
push
ljmp
lret
mov
cmc
loopne
fnstsw
xor
in
fwait
in
mov
sbb
psrlw
sbb
inc
call
in
insl
mov
aaa
lods
iret
stos
or
push
cmp
sub
std
and
in
sbb
repz
xchg
push
push
cmp
mov
mov
out
dec
test
ja
dec
mov
and
out
nop
xor
pop
push
ficoms
mov
movsb
sub
fucom
xor
jmp
insb
and
mov
pushf
bound
fsts
jg
cmpsb
adc
ret
mov
mov
out
inc
push
cmpsl
inc
and
ja,pt
inc
pop
hlt
xchg
xchg
push
bextr
mov
pop
adc
xorb
push
outsb
jae
mov
lret
das
into
jecxz
xor
inc
or
scas
push
test
clc
sub
stos
inc
sbb
pxor
dec
mov
cmpsb
movsl
push
test
mov
dec
add
pop
sbb
jp
out
mov
popa
test
sub
test
cltd
and
mov
xchg
add
xor
repz
into
fs
push
scas
mov
mov
outsl
mov
sub
popa
and
js
sub
les
jns
add
xorb
stc
mov
js
inc
push
cmp
lret
push
scas
add
jns
ds
or
aaa
stos
arpl
mov
sub
filds
es
movl
lea
dec
sub
clc
add
xor
in
ss
insl
xchg
xchg
cwtl
jmp
les
mov
bndldx
hlt
dec
jge
out
pause
xacquire
or
popa
adc
sahf
mov
stos
bound
daa
out
out
movsb
in
mov
lock
mov
push
out
rolb
mov
fildll
xchg
jl
aam
jp
jg
cmp
inc
dec
xor
sub
inc
sub
mov
movb
xchg
fwait
sti
adc
in
bound
mov
xchg
adc
xchg
ljmp
cld
aaa
inc
idiv
jg
sahf
xor
dec
lret
popf
ret
cmc
aas
push
inc
jno
ret
jl
ret
adc
std
sbb
rolb
dec
in
mov
enter
or
mov
lods
testb
dec
xchg
mov
ret
repnz
pusha
lahf
das
insb
cmp
push
inc
or
lret
dec
cmpsl
notl
fadds
js
cmpsl
lcall
mov
jb
sti
aam
dec
cmp
sub
pushf
adc
push
dec
push
jne
xor
lahf
and
jno
pop
jge
lock
mov
pop
push
bound
xchg
dec
sub
das
and
into
loopne
sub
inc
psubw
jo
sbb
mov
inc
inc
stc
mov
test
mov
and
jmp
faddp
push
mov
pop
pop
mov
cs
mov
nop
adc
adc
push
lret
int
imul
stos
and
stc
cmp
cmpsb
fwait
movsb
rorb
add
pop
dec
out
clc
pushf
fisubrl
mov
xchg
or
or
mov
jne
mov
push
cwtl
test
push
out
ret
mov
mov
adc
inc
lret
fstps
adc
cmpsb
add
push
add
das
push
das
pop
mov
fistps
xor
ljmp
leave
xchg
out
jle
repnz
cli
sub
xorb
popf
sbb
ja
xor
es
dec
mov
loope
ret
jae
cs
mov
setl
xor
mov
movl
testb
lahf
popa
aaa
cmpsb
fdivrl
out
dec
jg
push
insb
nop
jb
mov
jmp
and
movsb
repnz
pop
mov
mov
push
jbe
das
mov
inc
fisttps
out
jne
push
pop
test
popf
jge
cmp
sbb
push
vpunpckhdq
es
xor
loope
adc
icebp
lret
lahf
in
shrl
iret
pop
lret
xor
dec
sbb
cmp
in
xor
xchg
icebp
sbb
mov
ret
std
mov
lock
jne
fildll
das
mov
xchg
mov
inc
jae
sub
adc
xor
dec
aam
out
xchg
add
xchg
iret
inc
push
adc
inc
popf
adc
cs
push
inc
iret
scas
or
les
and
fmul
fmuls
repz
sub
lods
test
in
idivb
test
imul
andl
movsl
lock
shll
adc
lds
mov
push
or
xchg
mov
pop
into
adc
lods
inc
push
mov
aam
push
movsl
add
es
fs
test
push
xchg
je
inc
inc
daa
xor
test
jb
jb
int
cltd
push
andl
daa
ret
lcall
or
bound
jae
ret
mov
push
xchg
dec
sbb
test
scas
sub
add
mov
cmp
mov
xor
mov
adc
xor
shll
lahf
mov
cwtl
push
rorb
sub
cmpsl
test
mov
repz
cld
inc
cld
aad
xor
ficompl
xor
cmc
dec
dec
das
cmp
push
sbb
push
or
movb
not
sbb
pop
repz
sahf
mov
outsl
mov
mov
sub
pavgw
mov
pop
movsl
mov
insb
push
sahf
mov
inc
xchg
push
add
xchg
addr16
adcl
fld
jae
out
rcrl
mov
popf
data16
daa
pop
cmpsl
xor
aad
adc
cwtl
xchg
cmp
jp
adc
mov
inc
loopne
fwait
mov
aad
inc
fs
jne
pop
sub
test
xchg
mov
pop
in
sub
mov
imul
stos
push
push
or
mov
dec
xchg
je
out
jne
andb
cmc
bound
mov
cmpsb
arpl
out
pop
jae
test
insb
aam
hlt
shll
mov
mov
std
and
push
sti
stc
outsl
add
cs
scas
lret
lds
mov
nop
ret
loop
mov
nop
pop
cmc
pop
sub
xchg
fcoms
mov
cmp
je
pop
adc
sub
mov
fdivl
dec
add
pop
sub
mov
lret
pop
cwtl
or
sarb
pop
sub
mov
mov
test
pop
dec
repnz
rcll
dec
fisttpl
jp
mov
mov
dec
daa
pop
inc
xchg
xchg
nop
mov
mov
push
es
or
in
dec
addl
pop
lahf
jge
jp
shrb
loop
sbbb
or
cmp
je
mov
pop
push
fisubl
js
and
testb
sub
aas
fisttps
sbb
mov
aas
mov
dec
cmp
lcall
adc
stc
negl
test
mov
jle
in
mov
inc
shr
scas
jns
jg
push
lds
rcl
cmp
aam
adcl
sub
jg
pop
xchg
pop
pop
nop
fsubrl
push
cmp
jge
stos
xchg
out
inc
out
imul
and
pop
sbb
xchg
aaa
jno,pt
ds
andl
sbb
pop
mov
ss
mov
sbb
gs
dec
jg
js
outsb
or
push
test
mov
scas
insl
adc
fsub
notb
aad
lret
mov
sub
xchg
push
mov
or
ss
js
cmp
fdivrp
ret
push
and
popa
xchg
cmp
dec
and
inc
xor
sahf
xor
mov
jp
movsb
dec
test
sub
or
js
jle
and
lahf
aas
in
test
rcrl
pop
cmp
icebp
dec
jecxz
mov
int
push
out
mov
push
sub
cld
sub
xor
xor
xchg
hlt
outsl
cmc
mov
adc
sbb
pusha
or
or
out
movsl
lods
xchg
fistpll
inc
sbb
mov
aas
or
jp
add
lret
mov
js
push
imul
inc
adc
add
add
mov
adc
jecxz
adc
outsl
xor
scas
shlb
in
xchg
int3
movsl
and
pusha
movsl
loop
cmp
inc
pop
sbbl
xchg
xchg
cld
xchg
jge
dec
cmpsb
insb
std
int
icebp
shll
sub
jae
andb
add
mov
push
repnz
insl
bound
pop
test
inc
jmp
addr16
ds
dec
imul
jl
cs
lods
lahf
stos
dec
movsb
xchg
imull
mov
lret
mov
sti
mul
jns
sbb
jecxz
add
push
aaa
or
sub
xor
sub
aad
lret
fwait
dec
nop
sub
gs
mov
mov
shl
ficoms
stc
lahf
ja
pop
cs
cwtl
jmp
pushf
adcl
pop
fsubr
and
inc
fstpt
test
std
lea
repz
or
push
outsb
scas
xchg
push
bound
fisubrl
pop
xchg
aam
xchg
adc
rclb
push
push
hlt
sub
aaa
fucomp
dec
cld
add
mov
mov
ja
add
xor
add
push
sub
xor
sub
lret
data16
pop
clc
ds
lds
std
rolb
es
sbb
je
add
lahf
loop
dec
jb
xchg
push
inc
push
iret
xchg
iret
add
mov
xchg
mov
pop
mov
lods
cmp
mov
fcoms
sbb
icebp
sbb
idiv
fists
aam
push
das
das
cmp
movsl
leave
or
push
aaa
lods
into
sbb
jmp
inc
or
inc
sbb
xor
sub
iret
add
push
add
cmp
pop
bound
cmp
sbbl
adc
inc
movlps
outsl
xchg
vdivps
rcl
xchg
jo
mov
outsl
clc
jns
mov
cltd
jne
daa
test
nop
cli
inc
push
sbb
imul
jg
xor
push
push
fcomps
in
push
and
adcl
xchg
mov
test
and
shl
mov
push
dec
mov
add
cs
aas
pop
ja
lret
jno
sub
rol
in
lcall
mov
ja
loope
dec
pop
jbe
scas
push
repz
jmp
or
mov
add
dec
cmp
nopl
cmp
aam
test
popf
loopne
stc
aam
xorb
push
andl
sahf
or
push
mov
jl
outsl
out
int
shlb
scas
rcrl
jo
pop
sbb
addr16
cmp
sub
shl
jae
test
popa
ret
pop
mov
shr
sub
aaa
xchg
scas
mov
pop
mov
test
jne
adc
cmp
lret
cli
popa
add
lds
push
popf
xor
lret
call
xchg
jb
xlat
arpl
xchg
sti
mov
or
jp
mov
jge
adc
cmpsl
sbb
repz
xor
testl
push
and
pop
push
es
int
mov
and
and
push
push
add
add
mov
cmp
jne
fisubrl
fmuls
enter
sub
cmp
push
call
mov
jns
mov
pop
sub
mov
inc
aas
fistl
test
sahf
pop
scas
les
adc
or
hlt
cmp
cmp
dec
cmpsl
fistl
jmp
add
mov
out
shrb
gs
jno
mov
and
xchg
fistps
sub
add
sub
push
not
dec
pop
movsb
hlt
lods
mov
sub
es
mov
adc
cmp
pavgw
push
push
pop
das
jge
cs
int
mov
test
in
jl
out
data16
mov
aad
and
sbb
mov
push
mov
pop
repnz
jnp
sbb
adc
shrl
add
sbb
xor
push
ja
popa
add
xor
xchg
aam
es
dec
mov
push
jg
adc
adc
cmp
iret
or
inc
lea
sub
mov
cmp
jae
jle
fcoms
inc
sub
xor
mov
push
stc
loopne
ret
pop
std
inc
push
adcb
movsl
cld
xchg
xor
sub
mov
cmpb
cmpsb
pop
ficompl
into
rcll
pushf
insb
sub
subl
movsl
stc
cwtl
mov
inc
rcrb
push
xchg
icebp
xchg
sbb
push
jg
pop
cmp
ret
sub
sarb
dec
or
jge
xor
stc
in
inc
jecxz
mov
mov
loop
mov
sar
or
out
in
mov
xor
les
adc
mov
jne
call
cmp
cmp
pop
mov
negl
inc
imul
add
xor
stc
imul
sub
in
imul
popa
pop
inc
mov
int
cmp
xchg
and
in
fwait
dec
mov
lcall
mov
std
fists
cwtl
lret
fdivl
fcoml
jmp
idivb
rorl
popa
mov
lcall
pop
fs
adc
push
fcomip
out
jmp
adc
cwtl
adc
mov
mov
adc
test
sub
jb
cmp
xchg
lret
hlt
add
mov
jp
addl
or
iret
pop
xor
sub
pop
and
mov
in
lock
cmp
push
je
xchg
mov
and
imul
movb
adc
shrb
aad
rcrl
pusha
shlb
fcmovb
lock
sbb
ljmp
pop
ja
wrmsr
pusha
cs
mov
lret
test
icebp
mov
imul
pmovmskb
xchg
sub
mov
sbb
addr16
bound
cmc
and
push
fists
push
adc
scas
nop
inc
mov
fcompl
or
push
mov
pop
sbb
in
js
or
cmp
xchg
lds
lods
sar
jmp
or
mov
and
fsts
pusha
repz
sbb
sub
push
in
aaa
inc
fcmovbe
lock
je
adc
cli
mov
roll
ret
insb
inc
shll
add
lret
je
inc
lahf
dec
adc
push
jmp
imul
scas
out
cli
fadds
add
popf
fmuls
and
out
jbe
shr
pushf
repz
bound
push
aas
inc
icebp
sbb
cmp
sbb
and
cmpsl
out
roll
notl
fdivr
or
sbb
push
lods
mov
hlt
aad
or
or
sbb
repnz
mov
push
cmp
jecxz
scas
test
nop
jl
mov
dec
out
arpl
mov
cmpsl
push
xchg
xor
dec
int
push
imul
sbb
jns
popf
clc
rep
cmpsb
xchg
xchg
idivl
addr16
mov
mov
fdivrp
arpl
mov
xor
iret
dec
adc
xor
adc
mov
data16
lods
testb
ja
pop
loop
mov
sbb
mov
jle
insl
repnz
popa
and
inc
mov
mov
cltd
jbe
mov
cld
mov
sarl
adc
or
lock
lret
add
push
or
jmp
adc
adc
ja
loop
jg
enter
inc
xchg
pushf
gs
mov
nop
dec
fisttps
rol
in
ljmp
and
scas
and
fwait
adc
movsb
adc
sbb
cmp
into
pop
sub
cmp
pushf
or
lcall
mov
test
jmp
mov
test
mov
or
sub
sbb
addr16
cltd
add
incb
mov
in
in
add
cmpsl
and
push
fucom
mov
cmp
dec
inc
xchg
xchg
jg
cmc
sti
and
insl
push
outsl
inc
leave
inc
dec
mov
sbb
shlb
test
shll
sbb
lds
xor
push
fisttpl
sub
push
popf
or
mov
jge
pop
xor
xorb
add
or
jbe
movsl
nop
pop
mov
and
les
outsl
push
lods
cmpsb
jbe
lods
xchg
cmp
push
add
sub
pushf
mov
or
pop
nop
out
scas
xchg
test
mov
mov
xchg
sbbb
in
push
sbb
movsl
sahf
cwtl
shrb
adc
push
cmpsl
jne
push
mov
pop
adc
xchg
sbb
enter
test
loope
or
popf
lods
js
pop
mulb
in
mov
mov
dec
mov
jbe
xchg
in
loop
call
mov
xchg
into
dec
test
sub
sub
mov
jne
decl
faddl
mov
les
and
scas
mov
shlb
les
cmp
insb
test
jp
sub
roll
mov
dec
pop
lods
jmp
jnp
fcompl
roll
stc
adc
scas
or
cmp
cmpsb
roll
inc
push
push
aaa
in
sbb
iret
rep
inc
cwtl
xchg
je
dec
jnp
fimuls
int3
addr16
das
push
inc
rcrl
xchg
jb
sbb
pop
adc
mov
mov
out
and
mov
mov
cmp
cli
fdivrl
mov
push
add
cmp
mov
pop
sbb
or
imul
xor
mov
push
les
gs
shrl
or
and
rol
scas
mov
pop
rcrl
xchg
xor
add
ret
std
call
jg
and
mov
aas
and
leave
in
adc
xchg
dec
push
sti
xor
cs
lret
repz
outsl
nop
mov
sbb
pusha
sbb
adc
adc
pop
mov
xchg
push
icebp
int3
inc
lods
xor
mov
push
jne
xchg
adc
cmp
add
jno
sub
out
cmp
cwtl
jnp
ret
fwait
xorl
adc
stos
mov
push
cs
movsl
mov
lods
lea
jmp
push
mov
lea
push
jecxz
xor
mov
push
jne
jmp
loopne
lahf
push
cmp
sub
ret
test
xorl
inc
add
nop
lcall
sbb
std
sbb
xor
jae
mov
outsb
incl
adc
lea
or
shl
dec
mov
pop
adc
ficomps
jmp
in
and
sbbl
xor
es
sbb
fldt
xor
das
mov
cmpsl
sahf
cmpsl
mov
cmpsb
xchg
mov
popa
fs
inc
lret
scas
fs
mov
repnz
call
cld
out
int
aaa
inc
imul
xchg
cmp
and
fdivrs
adc
sahf
dec
dec
inc
mov
aam
or
in
pop
jb
jbe
jmp
into
lea
dec
or
rcrl
and
int
scas
lods
cmp
in
lds
popf
pop
lods
inc
int3
int3
mov
hlt
cmp
and
push
adc
les
lock
icebp
cmp
pop
inc
sub
xor
jae
dec
fwait
inc
xchg
mov
lods
sub
cmp
xor
mov
add
cmp
icebp
mulb
xchg
sti
fldcw
dec
loope
out
popa
fcmovu
sahf
std
pop
ja
pop
jne
lea
push
je
call
sub
fwait
popf
cmc
nop
loopne
xor
jae
pop
jp
out
jo
aas
sub
cmp
pop
fwait
je
mov
arpl
aad
fildll
mov
sti
lods
mov
ja
cmp
push
das
sbb
shlb
fistpl
xchg
in
jbe
or
jns
sub
mov
lcall
and
push
sbb
or
in
dec
int
jg,pt
inc
pop
cmp
push
cltd
or
or
and
leave
cmp
pop
xchg
and
aam
sub
idivl
test
add
sahf
popl
push
xchg
popl
xchg
imul
sub
sti
aas
std
and
inc
or
insb
push
or
inc
xor
sarb
xor
int3
dec
mov
jge
loopne
xchg
pushf
push
testb
das
ljmp
pop
ret
push
mov
or
in
test
pop
xchg
pop
sbb
sub
bound
mov
rcr
loopne
sbbb
hlt
mov
aad
lcall
push
jp
test
iret
sbb
ja
push
dec
mov
in
rcl
pop
mov
clc
orl
or
ret
bound
gs
ds
cli
test
addl
jmp
int3
adc
pusha
loope
lods
sub
jmp
loop
push
gs
ljmp
cmp
incl
daa
in
rclb
mov
nop
xchg
pop
leave
fmuls
dec
xor
mov
stos
iret
lods
imul
pop
xchg
adc
pop
inc
popa
jno
mov
arpl
push
push
sbb
int3
and
pushl
push
dec
sbb
push
testb
shl
xchg
push
sub
mov
and
dec
and
enter
cltd
adc
shll
ret
adc
test
mov
repz
xchg
or
test
sub
add
ss
jb
int
xchg
or
xchg
jp
test
adc
lds
add
inc
mov
stc
inc
xor
js
stos
arpl
call
and
fidivs
es
cmp
rorb
pushf
sbb
xor
adc
mov
xor
adc
mov
dec
sub
xor
gs
cwtl
add
jns
sti
jg
mov
ret
mov
insl
in
jl
movsl
pminub
pop
mov
mov
insl
jb
push
cwtl
int3
hlt
jo
fstpl
cmp
adc
pop
jecxz
addl
hlt
cli
fs
cli
and
add
loopne
cmp
int
mov
outsl
add
aad
test
jle
aaa
sbb
std
test
lcall
cli
adc
aaa
inc
mov
push
cwtl
dec
jecxz
xor
and
inc
mov
repz
fcmovnb
lods
mov
icebp
jb
push
hlt
lret
fidivl
cwtl
sbb
jmp
push
adc
inc
xorb
test
mov
xchg
cld
sub
aam
cld
shll
insb
mov
adc
xor
aas
movsl
movsl
xor
das
push
data16
pop
push
bound
imul
test
jecxz
or
ja
jg
dec
lea
lea
adc
out
movsl
insl
sub
pop
stc
sbb
fbstp
imull
or
jmp
stos
inc
mov
cmp
xlat
jb
pop
push
mov
and
stos
xor
fwait
and
and
popa
and
add
xor
stos
xchg
pop
es
mov
cmpsl
add
jecxz
push
or
stos
or
sub
repz
cld
sub
pop
sub
fs
insl
inc
mov
lock
loope
lds
dec
aad
mov
xor
out
jnp
stc
aas
insl
out
test
adc
push
je
repz
shlb
xchg
xor
xlat
stos
sub
mov
mov
movsb
lret
xor
or
fwait
dec
jbe
dec
jl
xor
cltd
inc
pop
les
insl
test
push
push
sbb
bnd
xlat
into
pop
mov
pop
push
scas
cld
adc
test
cmc
xor
mov
mov
jne
pop
inc
cld
push
lods
lock
out
push
jg
cmpsl
inc
scas
repnz
cmc
and
pop
lods
and
movsb
aam
cltd
mov
mov
push
scas
push
dec
call
dec
xchg
cmc
adc
movsb
push
pop
mov
push
repnz
jnp
add
jbe
leave
je
push
in
out
jg
adc
pop
imul
int
adc
out
xchg
sub
fisttpll
dec
lret
subl
pop
repnz
repnz
mov
mov
ja
mov
mov
fnstenv
shrl
cmp
daa
add
mov
sub
in
leave
cmp
add
pusha
push
cmp
cmp
xor
pop
sub
push
pop
fdivrs
mov
gs
arpl
repnz
lahf
imul
icebp
inc
mov
rolb
mov
dec
and
loopne
adc
mov
in
in
shlb
sarb
pop
test
shll
or
sbb
mov
xlat
fstl
dec
gs
inc
loop
enter
inc
or
dec
outsl
mov
mov
movsb
ficoml
ja
mov
ficoms
loop
aaa
mov
or
mov
and
or
xchg
faddp
xor
xor
pop
or
and
cmpsb
test
xor
xchg
in
cmp
into
mov
xor
aam
fnstsw
pop
push
fs
test
or
cld
shrb
inc
push
sub
adc
lods
int3
cmp
cmp
daa
mov
rcrb
hlt
rcr
gs
or
mov
sbb
xchg
or
out
inc
decl
mov
addr16
orl
cmp
add
lods
ds
or
ret
jb
jae
xchg
fcmovne
stos
jo
pavgb
mov
pop
sbb
sub
insl
or
setle
mov
push
dec
ror
jns
lods
dec
aaa
and
js
es
and
pop
scas
jle
mov
repnz
mov
mov
pop
adc
pop
pop
jmp
xchg
sbb
and
mov
adc
es
xor
lret
adc
les
stos
test
lret
data16
sub
cmp
add
sbb
fld
test
and
fcoms
stos
aam
inc
push
add
arpl
popa
push
popf
mov
pop
jo
xor
mov
repz
pop
mov
xchg
pop
lea
cld
jno
stc
mov
les
sub
mov
cmp
in
aad
lret
push
fisubl
fcomp
ds
fstp
pop
or
mov
sub
lds
into
outsb
ss
fcoms
js
or
jnp
out
inc
xchg
add
inc
xor
and
jb
rcll
das
pop
cmp
dec
mov
xorb
shl
scas
scas
jbe
insb
rcrl
add
cmc
xchg
push
rorb
dec
gs
xor
and
sbb
dec
call
fwait
insl
jno
xchg
cmp
or
test
fildl
sbb
sub
cmp
lods
shrb
lods
test
jae
lahf
and
ljmp
sbb
or
addr16
testb
sbb
xlat
push
jp
pop
aaa
xlat
push
push
mov
pop
push
cmpsb
out
xchg
and
in
cmp
fdivs
push
lahf
jg
mov
mov
or
test
dec
add
fnstenv
add
cmp
xorb
push
fistpll
scas
cmp
xlat
push
xchg
in
sub
out
push
and
mov
int3
pop
push
cmp
dec
xlat
mov
jp
pop
fptan
addr16
mov
xchg
outsl
add
jmp
stos
mov
pop
out
loop
fdivr
dec
outsb
js
mov
shrb
into
test
inc
iret
and
inc
jle
inc
stc
arpl
bound
pop
mov
mov
inc
sbb
inc
pop
scas
test
adc
pop
or
in
pop
dec
sub
xor
fisubs
loope
and
cltd
dec
jns
pop
add
jg
xor
push
inc
fldenv
mov
iret
mov
adc
gs
mov
add
sub
cmp
and
aaa
fs
or
in
xchg
dec
adc
lret
or
pop
xor
add
repz
js
xchg
fcmovnbe
push
pushl
inc
fcmovnb
inc
cld
in
add
cld
sub
je
ret
pusha
sets
mov
andb
inc
cli
repz
mov
sahf
ds
lret
xor
in
shrb
adc
xor
pop
and
mov
mov
adc
jge
and
cli
fcmovu
xchg
xchg
daa
adcb
in
pusha
cwtl
cli
movsl
imul
mov
out
outsb
xchg
mov
push
repnz
jle
pop
mov
idiv
mov
push
stos
jl
stos
dec
mov
jle
sbb
clc
popf
lret
movsl
add
push
pop
adc
add
and
ds
sbb
in
clc
in
nop
jp
addb
fdivrs
dec
roll
cmp
xor
dec
push
dec
inc
xor
notb
gs
in
test
pop
mov
mov
jge
inc
mov
das
inc
mov
call
sub
xchg
in
dec
push
fsubl
fisttps
pusha
lods
and
into
xchg
inc
cmpb
mov
enter
icebp
pop
cmp
ret
int3
inc
scas
mull
fnstcw
cwtl
insb
popf
stc
dec
cmp
mov
cmp
imul
xlat
xor
data16
dec
lret
dec
stc
in
je
cmp
imul
mov
mov
fstpt
bound
sub
pop
mov
xlat
push
arpl
sub
dec
push
cmpb
insb
popf
repnz
sbb
filds
inc
or
fbld
lcall
push
adc
adc
cmp
mov
pop
push
lods
cltd
rcl
fsubrl
incb
loope
xor
mov
mov
insb
shrw
lahf
in
nop
lea
pop
and
mov
mov
insl
scas
out
leave
ret
aad
mov
loopne
mov
hlt
test
sub
mov
or
int
int
sbb
push
cmpsl
add
lcall
mov
pop
fcomip
xchg
shl
imul
lock
inc
fdivl
xchg
in
sbb
xchg
push
rcll
mov
jmp
mov
adc
push
xchg
jae
iret
mov
inc
mov
sbb
mov
xchg
pop
jne
cmp
pop
sbb
mov
les
mov
adc
clc
and
sub
mov
pop
dec
or
or
enter
jnp
or
push
xchg
aas
mov
xchg
fbld
xchg
inc
or
sti
and
stos
and
sub
adc
loop
mov
les
adc
push
push
lret
adc
jg
fsts
mov
mov
push
and
mov
push
cmp
xor
xorl
xor
jb
push
mov
push
jne
stos
sbb
lea
fmulp
mov
stos
mov
sbb
pop
lds
push
movsb
push
enter
mov
sub
mov
push
xor
pop
pop
jno
outsl
xchg
ret
mov
jbe
dec
dec
outsb
test
imul
add
mov
mov
fmulp
inc
sbb
mov
pop
das
subb
out
push
outsl
xlat
mov
nop
push
sub
sbb
notl
mov
push
ret
inc
fwait
lret
add
int
sarb
mov
and
sbb
data16
inc
mov
aad
pop
ja
aad
xor
adc
js
dec
mov
or
xchg
loope
in
rcrb
cmp
add
nop
cltd
sub
stos
outsl
aas
movsl
dec
mov
xchg
or
stc
sti
push
sahf
fisttpll
rep
imul
or
pop
push
test
push
rcll
pop
dec
loope
imul
cmp
pop
adc
mov
into
xlat
out
rclb
test
pusha
sub
jl
xlat
push
ss
add
and
subb
pop
jmp
pushf
push
pop
bound
das
test
cmp
push
rcll
in
inc
mov
repnz
arpl
inc
mov
in
push
or
sbb
dec
add
xor
xor
xor
repz
call
cs
mov
das
xor
dec
push
fisubs
mov
jecxz
or
dec
in
mov
ss
and
dec
test
fistps
iret
leave
int
sub
jnp
inc
push
mov
sub
ljmp
scas
dec
jmp
into
shlb
aas
flds
aad
aaa
cmp
xchg
cmp
sub
divb
push
cmp
mov
pop
mov
in
cmp
out
xchg
mov
sbb
cmp
ficompl
shll
lcall
mov
push
jmp
call
jo
mov
dec
dec
bound
push
fdivp
fldl
cltd
mov
lds
in
jge
inc
sbb
fisttpll
lods
rcl
pmovmskb
inc
sbb
mov
or
gs
insl
jg
lods
movsb
leave
jb
fldenv
nop
out
mov
sti
stos
sub
pop
lods
cmp
stos
push
and
sti
push
mov
lds
jmp
mov
inc
in
das
mov
pop
adc
pop
fstps
insl
cmpsl
insl
or
push
icebp
push
adc
call
ljmp
push
dec
push
rorl
jecxz
outsb
inc
rcrl
adc
jecxz
xor
lock
xlat
enter
push
lds
add
ljmp
gs
pushf
fs
or
dec
jle
loop
sub
pusha
cs
js
sub
pusha
pop
mov
jns
ds
mov
xchg
addr16
ret
lock
or
jns
jno
aaa
movl
cmpsb
dec
add
dec
rep
rcll
jge
outsb
sub
movsl
nop
leave
aaa
mov
fistps
push
gs
rclb
pushf
pop
mov
jge
lahf
lcall
imul
dec
mov
aam
lea
sub
arpl
sti
lea
dec
mov
dec
sub
xchg
bound
push
adc
in
xor
and
sbb
pop
adc
sahf
ret
daa
xor
jg
call
icebp
cmp
add
xchg
scas
mov
outsb
cmp
lcall
inc
lds
mov
ret
and
add
es
xchg
neg
xor
movsb
cmp
bnd
les
and
push
and
pop
inc
cli
inc
sbb
and
les
jnp
fwait
mov
xor
adc
xchg
and
add
mov
movb
emms
arpl
mov
dec
or
jb
jmp
testl
int3
insl
push
jecxz
cmp
aas
scas
mov
jno
inc
mov
cmpb
inc
cwtl
mov
sub
xchg
mov
jl
and
pusha
mov
clc
sub
das
add
dec
jge
xor
adc
fcmovnbe
mov
cmpsb
int
push
xchg
ljmp
cmp
or
inc
cmpsl
fcoms
test
adc
jg
ja
and
lahf
cmp
into
sbb
add
and
fwait
dec
mov
ja
inc
dec
shl
aad
xchg
pop
bound
inc
mov
arpl
imul
and
add
jecxz
pop
xchg
sub
rclb
aaa
xchg
pop
std
jbe
insb
jmp
imul
mov
adc
mov
js
subl
jbe
jp
data16
lock
push
sbb
fs
int
push
leave
aaa
sub
jno
mov
fidivs
inc
add
cmp
adc
lods
mov
pop
add
jo
pop
sub
xlat
mov
daa
je
stos
lods
push
stos
mov
in
xchg
roll
scas
mov
sub
lret
test
out
inc
cmp
into
in
cmp
inc
lods
adc
repz
iret
scas
xor
pop
or
and
mov
push
cmp
and
jbe
in
test
stc
mov
push
jno
outsb
popf
push
mov
pop
push
jecxz
sbb
xor
mov
mov
test
dec
add
cmp
mov
dec
pushf
mov
add
or
pop
mov
loopne
jmp
sbb
pusha
inc
ss
rorb
loope
in
jecxz
cmc
push
sub
dec
idivb
add
cmp
in
popa
lods
adc
imul
push
hlt
pop
push
cmpb
fs
lods
pushf
xor
aas
mull
sahf
xor
shll
addb
and
ss
sarl
arpl
rcll
and
scas
or
in
std
xchg
and
mov
mov
xchg
push
addb
xor
or
into
mov
pop
jp
movsb
stos
cmp
int3
iret
mov
jno
sbb
add
mov
dec
call
enter
les
addr16
subb
pop
dec
int3
lods
push
jns
enter
fldt
cmpsb
scas
xchg
adc
sarl
fldcw
stos
pop
imul
push
inc
cli
rsm
mov
add
ret
sub
add
fidivl
ds
scas
mov
popa
sar
push
lds
ss
enter
int3
fdivrl
mov
pushf
dec
stos
jae
sbb
or
ret
stos
repnz
jb
add
cmp
sbb
sub
push
inc
ljmp
iret
pop
hlt
or
ss
push
enter
mov
pop
int3
push
jno
mov
jle
cmp
jmp
jns
cmpl
pop
add
mov
repnz
repnz
cmpsb
xchg
sub
imull
dec
pop
mov
mov
ret
lcall
sbb
icebp
push
mov
sbb
ffreep
fldcw
pop
cmpsb
pop
cld
call
adc
fwait
out
pop
xchg
inc
sbb
and
mov
or
jo
subl
mov
notb
out
in
mov
pop
and
xchg
jecxz
xchg
sbb
test
xlat
es
mov
pop
cmc
lahf
fs
stc
mov
fwait
dec
je
jne
xor
loopne
in
and
fisubl
push
cmp
pop
test
xor
stos
pop
lret
fnstenv
dec
mov
lea
js
xchg
mov
mov
fildl
xorl
push
shrl
subl
shl
jbe
mov
aad
xchg
add
xor
stos
push
ljmp
stos
mov
pop
ret
icebp
cmpsl
xchg
icebp
push
mov
pop
insb
lcall
test
xor
stos
xlat
mov
pop
xor
dec
mov
shl
scas
iret
xchg
test
xchg
imul
int
adc
sbb
sbb
icebp
lcall
imul
psllw
std
cltd
xchg
fxch
sub
rclb
or
imul
xchg
xor
das
push
lret
js
cmp
int
arpl
nop
test
insb
dec
mov
ja
or
xor
mov
notb
dec
imul
fidivs
pushf
adc
clc
inc
mov
outsl
or
pop
out
push
imul
nop
arpl
mov
jns
sub
xlat
stos
pcmpeqw
int
sbb
das
sbb
pop
aam
add
flds
mov
insl
das
lcall
mov
nop
rclb
cmp
test
and
sbb
test
aaa
jns
cmp
inc
fidivs
fwait
push
stos
sbb
xor
and
sub
adc
arpl
les
loop
adc
lea
or
and
or
fisubrl
into
out
push
jge
jmp
cmp
mov
cmpsl
pop
dec
mov
rolb
jbe
testl
cwtl
cmpsl
dec
sbb
push
mov
inc
or
insb
jle
int3
pop
aam
mov
imul
add
ja
push
jno
ficompl
in
dec
or
shl
xor
sub
pop
lahf
pop
out
sbb
jp
xorb
ljmp
sub
imul
xchg
mov
sbb
sub
ljmp
mov
icebp
mov
dec
add
xchg
mov
sbb
cmpsb
inc
mov
mov
mov
repnz
sbb
push
xchg
outsl
mov
or
out
lods
cmpsl
sbb
xchg
jae
icebp
push
mov
pop
pushf
lods
xor
xchg
xor
xchg
das
repz
mov
mov
adc
jmp
cmpsb
arpl
mov
jne
inc
test
cmp
stos
jge
fdivr
pusha
call
sbb
call
push
or
sti
or
inc
jo
call
lds
sbb
jp
mov
or
add
popf
out
leave
pop
shlb
xchg
jg
stos
rcll
aas
mov
pop
sti
and
mov
cs
test
inc
ret
and
mov
xcrypt-ctr
cmpsl
lahf
fimuls
ss
sub
hlt
sarl
lods
push
xchg
pop
int3
fld
or
sbb
adc
outsl
push
jnp
mov
repnz
scas
pop
lods
jmp
out
push
pop
ss
shl
mov
fsubr
mov
gs
arpl
mov
inc
subb
ret
push
mov
out
sti
mov
cmp
mov
inc
loope
rol
or
sub
and
ja
daa
xchg
outsb
add
jle
mov
dec
and
out
dec
mov
jns
arpl
jae
mov
ss
fs
cmp
xor
pop
mov
push
cld
adc
mov
pushf
lahf
pop
mov
xchg
ljmp
int3
push
xchg
push
and
push
xor
xor
cmp
lcall
add
scas
inc
icebp
gs
mov
inc
in
mov
sub
xchg
cmp
xor
adc
rcrl
out
stos
test
cld
fnsave
ljmp
push
loop
push
mov
addl
inc
das
cld
and
mov
mov
pop
lret
pop
inc
xor
fwait
jp
cwtl
cld
add
repz
fidivrs
push
insl
sub
bound
ret
rorl
ds
repnz
push
cmp
test
fildll
clc
or
mov
pop
dec
inc
pop
test
and
adc
inc
sti
xchg
pop
push
test
iret
and
outsl
shlb
jecxz
fnstsw
rorb
cmp
out
push
jg
mov
ret
adc
push
xchg
xor
ljmp
mov
mov
xlat
jl
ss
imul
mov
pop
mov
adc
arpl
jle
sub
mov
movsb
jmp
lret
jno
cmpsb
lret
nop
dec
lcall
xchg
fcomps
jbe
xchg
out
sti
mov
cs
sub
push
sbb
lds
out
jl
das
add
add
aam
jg
nop
es
inc
rolb
das
clc
es
or
dec
inc
xor
dec
scas
xchg
dec
sbb
xchg
ret
dec
dec
pushf
lea
mov
data16
fbld
clc
fisttpl
loop
xchg
icebp
test
sub
push
jmp
jb
pop
xlat
into
test
mov
pop
xorb
dec
xchg
cmp
imul
insl
sub
push
xor
fsubrs
xor
pop
sub
pshufw
push
or
jae
or
fildll
mov
clc
lock
cmpsb
and
mov
mov
or
daa
pop
mov
loope
mov
adc
push
push
scas
test
push
jns
jl
adc
outsb
jmp
popa
lods
shlb
cs
cs
loop
adc
enter
cmp
ss
sub
in
std
ja
test
ss
add
xor
imul
dec
xchg
popf
mov
fs
arpl
nop
lret
and
mov
orl
cld
stos
inc
jo
frndint
jbe
mov
mov
test
adc
aas
ljmp
dec
roll
mov
dec
lea
orb
dec
mov
add
cmp
dec
mov
sub
outsb
and
subb
or
scas
cmpsl
mov
sahf
dec
fnstcw
lods
popa
test
test
jbe
push
xor
sarb
dec
loope
into
cmc
test
fld
lcall
cmp
loopne
out
fisubrl
inc
into
push
mov
jnp
cmpsl
jnp
mov
and
scas
std
inc
mov
push
mov
pop
xlat
ljmp
pop
data16
pop
loopne
mov
sahf
lods
sbb
ret
sar
mov
arpl
fidivrs
or
mul
insl
je
push
inc
iret
mov
fcomps
insl
xchg
cltd
js
leave
fcoms
xor
hlt
lds
mov
iret
sub
push
aad
adcl
aam
inc
out
jb
pop
mov
add
imul
adc
in
in
imul
pop
popf
shlb
push
xor
and
cmpsb
xor
xchg
ret
mov
jp
rolb
push
cli
out
add
test
jge
test
fwait
in
cli
jp
adc
and
imul
push
insl
int3
sahf
adc
loope
pop
push
aad
or
lea
or
daa
dec
jnp
or
and
outsl
dec
inc
pushf
mov
rcrb
movsl
sbb
mov
jle
das
push
fld
cmpsl
enter
add
in
add
inc
dec
pop
xor
mov
mov
out
xchg
push
jo
out
xchg
mov
repz
cmpsl
cmc
or
movsl
cmp
cmp
lea
subl
jecxz
and
jmp
mov
repz
in
icebp
in
fwait
sbb
xchg
or
cmp
call
jae
hlt
in
mov
dec
sbb
mov
daa
adc
imul
adc
ss
jle
jp
mov
jbe
inc
sbb
jno
cltd
xchg
adc
cwtl
test
mov
or
cmp
mov
lock
or
jge
imul
fsubl
add
and
lret
fsubr
fcomps
push
movb
mov
mov
adc
movsb
ljmp
repz
daa
mov
stos
dec
pop
rcr
cwtl
or
pop
push
and
jp
xor
negl
lds
sbbb
mov
imul
sbbb
xchg
sub
dec
add
ljmp
inc
mov
ss
addr16
in
mov
jecxz
push
es
movsb
movsl
pusha
cmp
mov
pushf
insl
enter
inc
int
jecxz
dec
mov
xchg
push
loope
inc
ret
cmc
int3
push
jle
test
push
jbe
cs
push
rcrb
imul
fisttpl
es
enter
cmpsl
mov
and
stc
inc
push
lock
xlat
sbbb
pop
adc
nop
inc
enter
mov
popa
cld
mov
cmpsb
adc
enter
cmp
or
call
popf
fs
jbe
add
or
out
call
jg
ret
pop
xor
js
rcrl
testl
push
cli
mov
insb
and
mov
popf
lea
push
push
xlat
and
xlat
das
js
sahf
fsubrl
adc
stos
repnz
mov
pop
jp
adc
sub
dec
inc
ret
and
sub
std
mov
andb
mov
pop
push
imul
xchg
sahf
int
outsl
sbb
push
push
in
imul
mov
shlb
in
out
cmp
shll
lret
inc
adc
aas
loopne
mov
cmp
fcmovbe
int3
pop
mov
test
mov
insl
add
adc
jg
shl
adc
fsubrs
add
outsb
mov
inc
stos
jmp
dec
push
xor
loop
data16
jae
test
and
adc
cmp
sub
jns
ljmp
incl
pop
lcall
add
jecxz
and
mov
inc
aaa
ja
lods
dec
repnz
pop
in
dec
scas
push
fstl
inc
jns
in
ret
sub
sub
xchg
es
mulb
jle
or
mul
popa
push
jmp
jnp
cmc
mov
mov
fwait
aaa
jo
ljmp
jno
jmp
xchg
pop
divb
sbb
dec
shr
std
sarl
mov
ret
jnp
test
fwait
sub
aam
add
and
mov
in
dec
dec
aas
pop
lds
cmp
testl
repnz
sub
pusha
pop
subl
mov
insb
shll
fistl
jbe
xchg
pusha
cmp
xchg
sbb
subl
scas
insl
imul
jle
adc
arpl
cmpsl
or
adc
scas
enter
jge
test
mov
pop
mov
ja
fsubrs
incb
int
mov
test
hlt
popf
pop
fcmovnbe
jo
dec
pop
int
clc
jmp
jl
dec
jae
jnp
jmp
out
and
mov
sbbb
fistpll
mov
popf
mov
mov
push
sahf
mov
sub
fwait
int
pop
loop
out
or
adc
inc
pavgw
dec
add
sti
mov
out
pop
jne
jmp
dec
popa
dec
sub
add
dec
jne
push
cmp
fsubl
jp
mov
int
mov
loop
scas
rorl
mov
dec
mov
sub
aaa
adc
ljmpw
dec
sub
inc
xor
mov
inc
bound
loop
mov
mov
leave
out
mov
cli
bound
push
or
jns
pop
dec
cwtl
stos
sahf
xor
mov
loop
gs
pop
mov
dec
in
std
xor
or
push
jge
sarb
sbb
mov
push
pop
clc
dec
push
movsb
aaa
insb
adc
pop
dec
jmp
sbb
mov
loop
jnp
arpl
mov
mov
cmp
jmp
xchg
rorb
jmp
sbb
enter
mov
mov
repz
push
jne
das
loope
imull
cmp
mov
or
lret
xchg
fisubs
xchg
ret
mov
mov
fs
dec
xor
jle
das
addr16
adc
pop
xor
imull
es
vshufpd
cmp
push
push
add
sub
add
push
clc
jp
xor
int3
insb
nop
sub
daa
lea
jae
push
fcompl
shl
insb
jae
xor
aad
test
or
mull
mov
jl
cmp
ss
cs
pop
xchg
sbb
and
xor
lods
aas
imul
test
cmp
xor
pop
mov
adc
das
and
jbe
outsl
incb
mov
push
xorb
arpl
inc
sti
mov
sbb
pop
sub
adc
insb
adc
pop
cwtl
daa
addr16
mov
add
push
lret
shlb
test
mov
daa
stos
addl
jne
mov
mov
ror
mov
pusha
movsb
push
inc
pushl
xor
lds
jmp
cmp
std
push
cltd
and
fwait
das
sbb
lock
ficoml
js
mov
addb
rorl
sub
cld
mov
adc
mov
dec
scas
enter
adc
pusha
push
bound
imul
pop
sub
out
cmpsb
pop
and
mov
cmp
jle
pop
orl
mov
push
xchg
testl
lcall
push
jp
dec
les
push
adc
cwtl
mov
popf
dec
icebp
cmp
lods
pop
sub
pop
shll
int
enter
ret
cli
cli
jo
arpl
pop
in
ljmp
loop
mov
ljmp
cwtl
addl
ljmp
popf
add
xchg
mov
jle
sub
repnz
xchg
insb
stc
push
in
mov
xor
sbb
xchg
test
xchg
or
pop
add
call
in
nop
aad
std
push
popf
cld
inc
nop
out
xchg
ret
push
dec
bound
mov
jecxz
push
pop
push
push
pusha
loopne
scas
popf
mov
and
ret
fwait
or
pop
loopne
cmp
cmp
movsb
mov
imul
repz
shll
xchg
mov
or
daa
inc
fwait
xchg
add
call
pusha
les
popl
enter
jecxz
push
jns
shll
shl
int
dec
sub
jae
imul
cwtl
and
or
mul
hlt
jecxz
nop
divb
lods
mov
les
not
loopne
inc
lcall
mov
out
test
push
popa
cli
int
leave
mov
mov
and
pop
call
dec
test
fwait
aas
jno
xor
cmp
loop
rcll
cmp
mov
dec
mov
mov
adc
das
call
popa
dec
jb
rcl
pushf
addb
sub
adc
clc
fstps
sub
jne
mov
push
das
cli
xchg
mov
jp
sbb
in
xchg
xor
bnd
adc
xor
pop
outsb
pop
aad
inc
pop
ljmp
out
fiadds
aas
mov
aas
adc
lret
jmp
sbb
xchg
mov
mov
push
xchg
inc
cwtl
dec
dec
subb
aam
test
jb
sarb
pop
pop
inc
sbb
clc
adc
jo
jp
testl
mov
je
inc
call
dec
lock
mov
ja
or
es
stc
out
outsl
notl
pop
push
jbe
lret
and
ljmp
push
jecxz
ja
test
lahf
xor
inc
lret
cmp
addb
cmc
mov
sti
jg
mov
mov
push
xchg
divb
add
pop
jbe
fadds
pop
cmp
push
scas
add
dec
testb
int3
mov
mov
jecxz
fcompl
cmp
outsb
pop
mov
cmp
push
and
cmp
adc
neg
push
sbb
jbe
and
out
push
cmp
cmpsb
mov
push
aad
std
sbb
loop
xor
mov
popa
pusha
rcr
push
stos
arpl
or
sti
sub
adc
jp
loop
ror
movsb
inc
lock
ficompl
mov
push
testb
inc
pop
mov
cmp
adc
cmp
xchg
push
jmp
mov
into
inc
xorl
pop
mov
adc
rcrb
xchg
gs
push
and
sbb
cmp
scas
sbb
jno
out
cmc
out
push
outsl
sbb
and
push
mov
mulb
repnz
stc
or
sub
fisttpll
addb
lds
mov
and
popf
inc
pop
fdivrp
aad
movsl
mov
stos
pop
imul
mov
loopne
pusha
push
sbb
push
dec
mov
pop
jle
cs
or
outsb
mov
cltd
les
mov
in
adc
add
sbb
push
sbb
mov
into
cmpsl
mov
push
add
cwtl
ds
jmp
addl
mov
ljmp
sti
arpl
imul
les
in
jp
sahf
mov
mov
mov
mov
test
cmpl
or
aam
inc
xor
out
push
jns
jmp
sbb
div
cld
or
pop
or
sub
adc
cmpsb
inc
xchg
mov
mov
lods
testb
dec
xchg
leave
inc
sti
test
sub
sbb
cltd
mov
andb
sbb
sbb
shlb
lods
push
arpl
sub
lds
pop
pop
cmp
mov
adc
iret
and
jmp
or
pop
std
ja
jo,pt
xchg
push
dec
imul
out
push
xchg
mov
pop
mov
loop
ljmp
cwtl
or
sub
xor
iret
pop
xchg
aaa
adc
stc
or
jl
push
aad
add
mov
xchg
and
es
cld
lahf
push
sbb
gs
test
outsb
push
jmp
test
int
jne
push
xchg
jg
push
sub
mov
test
scas
jp
clc
mov
fcoml
pop
hlt
jbe
sub
mov
adc
jo
scas
aaa
int3
outsl
push
push
call
mov
mov
inc
mov
or
push
adc
cmp
pop
sbb
push
cmc
std
jge
inc
add
dec
xor
fisubrs
sbb
aas
loop
mov
aam
bound
jg
inc
xchg
sbb
outsl
mov
and
mov
xor
int
pop
fidivs
clc
imul
imul
pop
loopne
or
push
out
and
call
adc
adc
inc
add
sub
lcall
xor
imul
jae
enter
or
and
shr
mov
push
mov
cltd
cmp
cmc
movsb
adc
out
dec
mov
sub
mov
loop
hlt
jb
jge
mov
sub
inc
incb
lahf
sub
mov
push
cmp
pusha
insl
jo
cmp
push
pushaw
jnp
lret
movsb
sbb
push
shll
xlat
movsl
lods
scas
add
push
pop
cmpsl
sbb
out
mov
repnz
xor
lock
or
clc
jnp
js
lods
loopne
out
aas
dec
gs
sbb
and
imul
clc
mov
fnstenv
and
iret
aad
inc
mov
fistps
sbb
clc
jp
inc
jo
push
movb
mov
fwait
mov
mov
or
dec
lret
js
mov
push
out
and
mov
lock
push
mov
inc
mov
in
rcr
ja
fiaddl
rclb
andl
dec
mov
sub
and
mov
xchg
shll
mov
fcomps
movsl
and
pop
xchg
loope
mov
fldl
dec
scas
insl
clc
lods
jmp
jl
jns
xchg
jb
mov
push
adc
sub
sbb
xorb
xor
push
out
sub
sarb
les
fsubrs
inc
sti
inc
jb
mov
xor
inc
sbb
dec
cld
mov
insl
in
inc
subb
sbb
inc
pushf
loope
addl
jb
fisubl
adc
adc
jmp
loopne
fs
sbb
sub
xor
jg
jmp
push
cmc
pop
mov
or
and
jae
das
pop
sbb
sub
roll
or
outsl
popf
mov
fdivrl
and
jno
mov
or
pop
pop
pop
in
call
inc
xchg
lcall
dec
push
or
sbb
jmp
sub
js
shrb
push
das
dec
jno
sarl
dec
sbb
jo
hlt
aam
mov
and
icebp
mull
xor
jmp
in
sarb
cld
push
fsub
jno
jno
daa
pop
jp
jmp
push
aam
ljmp
or
adc
cmp
lods
ret
pop
mov
fisubrl
int
xchg
inc
lds
push
mov
iret
xchg
lret
or
adc
sbb
sahf
inc
dec
in
das
mov
fsubrs
and
rcll
clc
and
movsl
cmp
out
mov
dec
mov
pop
jns
inc
outsb
pop
adc
fldl
and
in
pushf
or
test
ds
out
jne
or
push
out
pop
pop
push
jae
stos
push
shlb
aaa
inc
aad
pusha
xor
add
pop
aas
test
je
add
sub
imul
hlt
jle
push
cmpsl
sub
shlb
int
xchg
push
fwait
mul
jg
xchg
pop
and
lds
jle
sbb
mov
mov
mov
out
push
add
mov
jne
orb
int
cmp
idivb
sbb
icebp
inc
test
subl
ljmp
or
sbb
mov
cmp
aad
fsubrs
sbb
adc
aam
inc
push
stc
aam
aaa
adc
push
add
mov
in
cmp
movsb
lret
mov
and
out
movsl
fidivrs
push
cmpsb
out
and
sbb
lock
mov
jge
inc
mov
mov
inc
mov
out
mov
lea
movsl
push
hlt
filds
test
pushf
xor
mov
cmp
xchg
adc
jecxz
pop
adc
imul
sbb
and
iret
cmp
mov
lds
mov
loope
inc
dec
sti
jnp
sahf
pop
push
jp
outsl
or
lods
pop
push
dec
test
adc
pop
arpl
repz
xor
pop
stos
in
mov
mov
repnz
add
lods
mov
int
jno
jecxz
inc
xor
mov
xor
out
ret
mov
fldt
jp
xlat
jbe
pop
xor
testl
adc
and
rclb
fisubrs
dec
stos
mov
adc
gs
and
into
or
pop
jns
dec
sub
inc
negb
push
and
jae
add
idivb
bound
ss
xchg
add
dec
xor
movaps
xchg
xor
ja
out
jge
or
mov
mov
iret
sahf
or
add
push
mov
pop
lea
cmp
sbb
xchg
cwtl
das
cmp
inc
mov
cmpsb
xor
sarb
ss
add
dec
ss
insb
lock
or
lods
mov
jp
jmp
or
mov
and
adc
negl
mov
sub
shrb
addr16
ss
push
mov
fmulp
adc
pop
divl
int3
mov
pop
call
mov
sub
sbb
in
rol
inc
jb
sub
test
ret
hlt
cli
add
or
jmp
cmpsb
jl
stc
or
and
inc
jg
fwait
sub
setne
pushf
xlat
xchg
ja
and
add
sub
push
push
fcmovb
incb
fadds
int3
jne
dec
aam
popf
or
lret
js
ljmp
jecxz
pushf
adc
repz
jge
push
outsb
push
add
push
pop
movsl
or
mov
cmp
mov
or
xchg
sub
icebp
movsb
mov
xchg
push
icebp
call
fildll
and
movsb
std
push
mov
mov
mov
or
stc
adc
sub
and
push
xorb
xor
jecxz
jle
fsubrs
adc
pop
rcrb
les
fisttps
mov
adc
mov
cs
ret
adc
xlat
push
xor
mov
adc
pop
cmova
mov
sub
pusha
inc
adc
incb
iret
scas
popf
pushf
dec
cmp
cmc
mov
xor
sbb
xchg
leave
loop
mov
mov
loopne
scas
jae
cmp
in
hlt
scas
cmp
fdiv
jp
cvttps2pi
inc
movsl
lret
adc
mov
jp
ret
mov
out
jecxz
pop
scas
leave
jl
sti
cmp
push
mov
xor
repz
cli
and
jg
icebp
mov
cmp
sbb
adc
mov
mov
add
mov
jne
mov
mov
shrb
lret
inc
iret
pop
xchg
lods
stos
mov
xor
mov
adc
push
fldenv
jp
sub
xchg
adc
mov
fisttpl
jns
sbb
mov
mov
sbb
cmp
std
cmpsb
mov
lahf
sbb
insb
inc
push
sbb
hlt
cmc
ljmp
ja
pop
stos
mov
xchg
xor
dec
mov
fcomi
xchg
out
xchg
test
cmp
movsl
sub
test
pop
out
lret
mov
call
sti
push
xchg
aam
addb
mov
xor
push
xchg
in
adc
inc
add
mov
cmp
popf
pop
add
add
mov
adc
loop
je
xchg
jns
mov
push
int3
lods
gs
xor
pop
adc
sahf
push
cmc
cld
fwait
cli
adc
fildll
pop
pop
add
mov
popa
icebp
adc
and
jb
push
sub
or
mov
into
lea
pop
hlt
mov
jl
mov
in
mov
fsubrs
or
xchg
xor
xchg
mov
adc
lea
dec
std
mov
xchg
mov
testb
and
push
xor
and
aas
in
cmpsb
mov
or
stos
popf
dec
data16
adc
movsl
xchg
jbe
inc
orb
adc
xchg
daa
adc
push
jb
loopne
ret
je
mov
dec
push
enter
jl
mov
stc
rcll
mov
daa
lea
je
in
mov
sub
nop
pop
push
cmp
push
mov
pop
or
mov
imul
js
test
lret
incb
das
out
lcall
repz
dec
add
mov
xor
popa
test
xor
and
aas
data16
enter
jecxz
test
mov
out
dec
inc
repnz
xor
mov
outsb
cmpsl
mov
adc
lcall
inc
and
data16
pusha
stc
mov
imul
lds
inc
mov
xor
sbb
ja
test
inc
sub
fdiv
and
and
push
lret
sub
sahf
repz
push
jle
aaa
inc
roll
popf
jbe
jne
xor
mov
cli
push
xchg
cmc
mov
xchg
push
mov
movsl
jne
pop
es
xchg
out
lret
jno
inc
mov
outsl
inc
jne
add
gs
loopne
pop
adc
or
loop
adc
test
push
sti
jno
js
xchg
mov
daa
adc
fsubs
loopne
jecxz
ret
sahf
out
jecxz
scas
ss
test
jae
inc
lcall
mov
in
movsb
nop
insb
pop
cli
lret
add
xchg
cmc
inc
inc
mov
pop
jbe
std
sub
pop
dec
inc
adc
cmp
add
lcall
imul
sub
sub
mov
fwait
hlt
inc
jnp
shr
scas
ds
stos
push
jp
xor
cmpsl
cs
or
jecxz
or
das
cwtl
fistpll
addr16
mov
outsl
xchg
aam
pushf
adc
mov
mov
std
sbb
paddsw
inc
mov
inc
push
mov
jbe
inc
push
or
popf
mov
cmp
mov
shl
or
sbb
icebp
sbb
jp
mov
in
xorb
mov
cmp
test
sub
or
xor
xor
dec
add
nop
imull
test
das
std
addl
stc
mov
shl
jo
lock
test
testb
xchg
dec
roll
movsl
pop
and
icebp
or
ror
or
out
jne
inc
push
mov
popa
psllq
pop
imul
movsb
lds
enter
call
filds
jg
clc
pop
loopne
jo
out
cmpsb
jmp
xor
insl
lds
push
ljmp
repz
cld
cmp
add
js
hlt
lods
xchg
loop
in
add
inc
das
mov
pop
pop
out
aad
stos
sahf
jmp
jno
arpl
jmp
repz
iret
jl
dec
or
mov
shl
fsubrs
mov
mov
clc
mov
rcl
les
lock
sub
test
lret
xor
adc
pop
pusha
mov
jae
mov
and
sbb
sub
push
jmp
sbb
add
mov
inc
sub
dec
inc
cmp
xchg
sub
jbe
mov
jbe
repz
bswap
mov
pop
pop
mov
lret
mov
xor
xchg
xchg
xchg
adc
jmp
shlb
sub
and
adc
pop
pop
adcb
arpl
dec
popa
cmc
mov
loop
addl
lods
pop
push
jg
adc
sti
or
sub
xchg
movsb
pop
out
jmp
xchg
lock
addb
sub
loopne
push
scas
sbb
sbb
xchg
aas
adc
clc
fs
push
shll
test
xchg
push
sbb
jb
add
inc
inc
cld
adc
cltd
sbb
outsb
mov
repz
imul
lock
dec
xchg
push
ljmp
jge
fstl
xchg
mov
bound
pop
testb
aad
or
or
mov
sbb
sbb
push
imul
lock
mov
negl
fisttpl
xchg
mov
ret
das
cmp
bound
or
imul
pop
test
jg
mov
mov
push
pop
loop
mov
mov
add
mov
fs
mov
push
into
pushf
loope
stos
fcomps
fimull
stc
jno
movsb
sub
dec
sbb
and
arpl
sub
add
lds
int3
out
es
mov
fcomp
sti
add
pop
in
push
pop
dec
clc
loop
mov
ret
sub
pop
mov
or
inc
test
xchg
movsl
mov
out
jb
enter
xchg
xor
adc
cmpl
mov
inc
ds
pop
aas
stos
fdivs
les
jge
mov
in
dec
scas
mov
imul
leave
jne
mov
bound
ljmp
gs
jmp
lahf
adc
mov
int
jecxz
leave
adc
shll
inc
inc
iret
inc
aam
mov
adc
movsl
cld
xor
push
fwait
ss
out
rcr
inc
gs
test
stos
fs
faddl
call
add
aaa
pop
mov
mov
or
mov
pop
inc
xor
aad
mov
push
mov
mov
xchg
mov
stos
inc
repnz
xor
jnp
cltd
xchg
ret
push
ss
sbb
adcb
ret
rcl
adc
fwait
pop
pop
jb
dec
sti
pop
rcr
outsb
jge
jge
sbb
xor
sahf
aad
jbe
bound
jae
fildll
and
sub
cmc
or
mov
add
lods
xor
mov
and
cmp
lea
xor
int
movsl
fstpl
test
jmp
jmp
rcl
adc
cwtl
xchg
fwait
sub
mov
sti
adc
faddp
push
xchg
xor
lods
aam
push
mov
mov
cli
jae
lds
fdivs
enter
mov
in
fcom
rclb
mov
scas
data16
jae
pop
test
jmp
insb
ror
daa
bound
ss
mov
loop
push
int3
jb
insb
push
mov
sahf
adc
mov
push
rcr
es
mov
and
sbb
or
loopne
jmp
mov
mov
movsl
jecxz
or
add
add
inc
shl
pop
test
xor
mov
aas
jmp
add
fwait
push
add
cmp
andl
jne
outsl
lcall
push
test
iret
bound
mov
dec
and
mov
out
das
movl
lock
mov
mov
imul
adc
stos
push
or
fs
jmp
movsb
int
dec
jbe
ficompl
push
adc
sub
xchg
pop
xchg
imul
es
sub
es
loop
lahf
repz
pusha
sbb
pusha
es
cmc
insl
mov
or
aas
movsb
jnp
ret
jecxz
stc
adc
sub
cmp
adc
mov
cmp
gs
cli
adc
dec
repz
and
mov
hlt
push
cmpsl
imul
adc
pop
testb
mov
xchg
or
sub
or
and
inc
fisttpll
test
ds
sahf
notb
inc
mov
div
and
mov
or
ffree
cmpsl
lret
inc
cmp
jnp
pop
clc
in
adc
outsb
pop
pop
out
jg
dec
sahf
xchg
frstor
adc
xchg
sbb
pop
or
test
mov
inc
lods
xchg
repnz
mov
cmpsb
inc
xchg
lahf
cmpsl
std
jb
xchg
lods
mov
aaa
leave
pop
sub
aaa
and
popa
push
or
imul
or
or
je
push
out
inc
jbe
mov
dec
or
and
xchg
hlt
js
dec
pop
adcl
movsb
sbb
mov
in
push
push
mov
fiaddl
pop
popf
xor
and
xchg
repnz
add
pusha
gs
adcb
lock
xor
xchg
push
imul
pop
push
inc
xchg
idivb
sbb
inc
sub
mov
xlat
pop
in
push
jne
or
lahf
xor
mov
mov
shr
adc
shrb
xor
xor
outsl
pop
jge
add
mov
imul
mov
pop
push
call
mov
jecxz
dec
mov
mov
fmull
addr16
mov
jne
xchg
sbb
sbb
daa
or
arpl
into
or
cli
lock
dec
push
cld
bswap
pop
lret
dec
xor
push
sub
pop
pop
xor
arpl
into
sbb
test
sub
inc
filds
pusha
cmpsb
loop
lahf
mov
sti
add
cmp
push
ret
imul
mov
imul
mov
js
or
ja
icebp
push
push
and
dec
push
bnd
inc
shll
mov
dec
cmp
mov
icebp
mov
mov
lret
cmpsl
sti
mov
mov
mov
out
int3
idivb
pop
or
movsb
cltd
add
pusha
ljmp
test
pop
int3
aam
sbb
lock
js
push
xchg
jl
adc
out
and
fmulp
mov
lret
push
xor
add
pop
and
jno
imul
test
xorb
dec
in
outsb
popf
stos
repnz
jl
into
test
xor
adc
mov
sbbl
jnp
outsl
cmp
cltd
sub
sbb
pop
mov
xlat
jle
rolb
bound
mov
mov
out
xchg
addr16
cmpsl
shl
sub
jecxz
out
rclb
enter
push
fidivs
je
sbb
jl
push
xor
ds
or
cld
jp
addb
pop
ss
mov
sahf
leave
leave
stos
in
jns
inc
xor
dec
jecxz
stc
cmp
cmp
xor
cltd
fsubrp
sti
stc
ss
call
out
mov
lret
lea
int
sbb
aaa
rorl
test
cmpsl
flds
outsb
mov
sub
cmp
adc
lock
cld
and
loope
xor
loopne
inc
std
push
add
mov
push
icebp
mov
imul
inc
jmp
jbe
sub
pop
es
xor
mov
lods
and
xchg
fs
dec
call
xchg
push
ds
pop
xor
jns
xchg
jge
ret
mov
dec
std
ja
jne
push
inc
fwait
jmp
inc
xor
subl
std
movsl
sbb
faddl
jg
daa
push
mov
fstl
adc
test
mov
cmp
pop
sbb
mov
aaa
das
inc
setb
js
lret
push
rcll
or
movsb
pop
or
arpl
fldcw
mov
es
mov
test
test
jnp
xchg
out
mov
jle
xchg
push
xchg
add
fbstp
adc
cld
outsb
mov
scas
and
adc
xor
repz
loopne
inc
ds
outsb
shr
orb
and
stos
sahf
adc
dec
clc
iret
rcl
cmp
xor
fdivs
addr16
sbb
pop
push
shlb
rcr
int3
xlat
sbbl
out
jmp
out
xlat
push
pop
pop
test
lods
pop
scas
pop
cmp
and
xchg
fwait
decl
mov
pusha
sub
xchg
stos
lock
loop
outsb
test
pop
and
fisubl
push
lret
mov
xchg
clc
jae
stos
cmp
sub
inc
frstor
test
sahf
sub
xchg
mov
push
jmp
pop
test
aam
jl
mov
jbe
jg
popa
or
mov
clc
shl
pop
jae
cld
in
lock
inc
xchg
loopne
xor
pop
leave
cld
roll
pop
in
mov
jmp
clc
stos
push
fucom
lcall
jmp
mov
int
daa
and
std
mov
jmp
add
movsl
jns
cmc
and
xchg
add
pop
xor
push
sahf
in
xchg
je
insl
in
insb
xor
or
push
outsl
ficomps
popf
test
scas
mov
in
decl
mov
shr
movsl
push
movb
mov
pop
into
daa
mov
fisttps
hlt
repnz
cltd
or
jge
call
mov
or
lea
adc
mulb
aas
pusha
lods
aam
shlb
cmpsl
add
movsl
jae
ss
adc
xchg
pop
mov
enter
mov
stos
xchg
mov
adc
xchg
jp
xor
pop
pop
loope
fdivrs
jle
int
aad
leave
push
leave
cmc
cmpsl
ja
outsl
ds
mov
dec
pusha
int3
mov
adc
inc
mov
cmpsb
lock
insl
push
jne
jl
outsl
jge
stos
sub
test
pop
dec
pushl
jge
push
adc
inc
pop
xor
mov
mov
cmpsb
cmp
test
inc
xchg
call
jg
mov
mov
mov
xorb
pop
xor
jp
out
scas
jo
int3
adc
push
in
fadd
addb
mov
sahf
pop
mov
out
mov
bound
jmp
test
pusha
in
pop
dec
cld
push
mov
mov
sub
cmc
jg
sub
jnp
jg
sbb
inc
mov
sbb
push
aas
ja
cli
bound
dec
inc
mov
or
dec
lds
or
mov
pop
pusha
or
and
dec
push
push
int
data16
sub
push
pop
and
mov
adc
mov
pushf
pop
fnsave
pushf
test
ss
sbb
cli
test
pop
rcrb
stos
sub
fs
jne
xchg
fmul
or
and
inc
bound
dec
jne
ljmp
inc
fistl
mov
jmp
call
sti
js
jnp
call
mov
push
jge
mov
je
mov
insl
fsubrs
add
out
sbb
dec
inc
pop
jle
pop
in
jecxz
dec
lods
cld
call
cs
daa
cmp
loopne
stos
and
call
pop
pop
popa
inc
ss
shl
jge
mov
mov
out
sub
js
leave
mov
negl
cmp
mov
or
cmp
test
lods
out
inc
test
mov
fsubr
ljmp
cmpsb
mov
ss
mov
testl
jle
sbb
inc
movsl
outsb
mov
pop
xchg
lods
mov
dec
or
cltd
push
jnp
jo
loope
and
sbb
in
jl
adc
cmc
xlat
push
fstps
sti
pusha
dec
inc
jecxz
mov
out
pop
adc
incb
pop
cld
jp
sbb
shrl
fs
les
add
xchg
out
lds
mov
inc
inc
stos
jge
call
mov
inc
cmpsb
out
mov
scas
xchg
mov
divl
push
rclb
addr16
xor
lds
mov
mov
leave
mov
jns
fwait
push
jg
cs
ja
inc
roll
mov
mov
daa
mov
pop
push
aad
xor
aas
repnz
sbb
andl
mov
int
mov
jo
out
imul
jae
sub
fiaddl
pop
pop
fcom
jmp
icebp
ja
adc
inc
jae
inc
xor
jne
daa
fcoms
push
repz
lds
sbb
ret
divb
sub
cld
fnstsw
inc
add
scas
stos
mov
dec
js
or
dec
jae
sbbb
pop
pop
or
adc
lahf
sar
mov
push
rolb
data16
inc
dec
testb
cmp
mov
sbb
fsqrt
push
repz
fnsave
mov
fstpt
xchg
mov
call
or
or
sahf
xchg
and
and
push
out
pop
mov
ror
frstor
or
loop
mov
or
cmp
ret
bound
mov
stos
cmpsb
ljmp
push
mov
outsl
repz
xor
out
aam
mov
xlat
fstpt
out
sbb
inc
lock
and
sbb
pop
inc
inc
sbb
enter
sbb
sahf
in
jnp
push
cwtl
or
mov
xor
rcrl
test
cltd
cmc
imul
push
sbb
testb
dec
out
push
inc
lret
lds
push
ret
xchg
shll
arpl
and
mov
push
nop
ja
pop
test
adc
sub
add
test
jmp
mov
push
mov
lock
mov
ljmp
mov
mov
or
les
fnstsw
push
das
call
addl
sahf
test
xchg
xor
fisttpll
sbb
cs
les
sub
dec
mov
outsb
out
orl
xchg
lahf
pop
lret
sbb
test
jl
mov
out
sbb
cvttps2pi
cltd
lea
push
pushf
ret
lcall
inc
aad
insl
jge
adc
scas
xchg
out
cmp
mov
jns
fwait
adc
movsl
inc
mov
push
test
adc
inc
mov
outsl
sub
inc
xchg
push
xchg
les
jo
ds
outsl
lcall
add
sar
xchg
mov
stos
lahf
mov
mov
out
aas
sahf
push
mov
shr
adc
jns
dec
loope
cmp
movsb
cmp
test
test
mov
fisubrs
out
push
cmp
and
andb
test
and
std
cltd
imul
or
xchg
dec
shll
pop
pusha
adc
add
dec
icebp
fmull
test
hlt
or
or
sub
test
pop
int
in
sbb
push
push
xchg
pop
mov
adc
inc
movsl
stc
mov
and
mov
lock
in
fstl
jmp
fdivs
pop
ret
rorb
push
jo
les
fidivrs
and
push
jecxz
add
push
js
jecxz
jae
out
cld
test
cld
arpl
into
dec
pop
jae
icebp
xchg
lret
test
jl
xchg
jp
lock
lret
das
sahf
pop
dec
and
add
xchg
adc
adc
js
and
aaa
dec
mov
clc
pushf
pop
mov
insb
fstps
test
ja
push
movsb
adc
xchg
or
test
aam
jae
fsubrl
add
fadds
xlat
or
pop
sub
xchg
shlb
clc
xlat
je
and
ret
add
ds
in
mov
jmp
mov
ret
ja
pop
std
call
or
lret
sub
decb
test
out
cld
cmp
push
mov
stos
xchg
inc
lahf
jl
cld
cmp
clc
pop
int
fstps
cmp
fs
icebp
push
adc
inc
add
hlt
xor
std
dec
and
inc
icebp
mov
and
push
xchg
sbb
lock
call
pop
push
xchg
mov
mov
pop
stc
fs
ss
sub
fwait
sbb
inc
mov
lods
out
push
pop
adc
test
popa
ja
sbb
and
clc
xchg
outsl
in
or
popf
mov
dec
scas
xchg
ret
insb
mov
mov
dec
addl
aaa
outsl
inc
fbld
mov
dec
mov
mov
test
cmpsl
pop
sub
sbb
push
nop
int
mov
pop
sti
lods
xchg
push
push
and
scas
jns
sub
lds
sub
jbe
adc
or
cmp
xor
and
or
out
adcb
pop
mov
lret
lcall
or
cli
or
in
pop
int
lahf
and
xor
sub
push
or
gs
rcr
push
jne
jnp
dec
in
out
std
aaa
sbb
mov
sub
jg
lret
scas
stc
arpl
cmpl
in
dec
sub
push
stos
sbb
xchg
idivl
xchg
scas
push
jecxz
insb
sub
mov
lcall
and
inc
mov
push
sbb
mov
inc
mov
arpl
sbb
fcoms
inc
sbb
imul
push
sub
xchg
pop
pushf
lods
xor
mov
inc
aas
jmp
jno
negl
enter
popf
in
push
mov
or
sbb
adc
sbb
lcall
dec
sub
int3
pop
imul
cmp
xchg
outsl
ljmp
mov
arpl
cmc
pop
leave
xor
popa
in
jp
mov
push
imul
rcrl
sub
repz
daa
pop
xlat
jle
scas
mov
jbe
sub
lock
cmc
sbbb
in
pop
push
xor
aaa
pusha
push
and
test
lahf
fldl
sbb
add
xchg
mul
and
enter
iret
scas
pop
in
repnz
imul
sub
fidivs
invd
cltd
xchg
push
push
xchg
lahf
inc
or
aad
es
xor
test
push
pop
lret
xor
inc
iret
aad
lret
clc
mov
sahf
mov
iret
sub
in
das
push
fs
mov
sti
jns
fld
dec
test
test
pop
inc
mov
scas
adc
mov
lcall
cmp
dec
jecxz
mov
hlt
sbb
leave
dec
adc
mov
mov
cmp
mov
sub
mov
inc
out
cwtl
ret
pop
aam
cmp
dec
jg
push
pop
push
js
xlat
cmpb
shl
test
mov
imul
test
sbb
xlat
pop
dec
mov
pop
in
add
addr16
xchg
xor
mov
stos
pop
mov
cmp
add
mov
pop
dec
fidivl
popf
xchg
mov
fmull
das
push
cmp
repz
xor
je
sahf
imul
inc
aaa
js
mov
fldl
cwtl
aaa
xor
mov
repz
inc
cwtl
pop
divl
sub
stos
mov
pop
sbb
jne
mov
imul
add
loopne
mov
xor
mov
xlat
mov
mov
push
adc
jecxz
imul
push
push
lcall
test
xchg
popa
es
dec
jno
cmp
jns
frstor
cmp
add
in
fs
out
sti
std
cmp
repnz
repz
mov
or
scas
std
fsub
bound
push
cmp
jne
push
push
add
fs
scas
adc
popf
xor
mov
repz
dec
ja
lock
push
inc
insb
repnz
cmpsb
sbb
dec
sbb
sub
xor
jb
and
shrl
imul
push
fwait
sbb
enter
pushf
mov
insl
leave
stos
adc
push
fnstenv
mov
std
mov
adc
mov
fdivl
neg
fs
mov
in
inc
test
xchg
mov
jmp
stos
in
pop
inc
inc
in
sti
dec
test
mov
pushf
cs
std
mov
in
xor
push
je
mov
stos
jge
test
pop
mov
pop
adc
pushf
test
and
fisubs
cwtl
xor
mov
inc
add
sahf
loopne
andb
lods
pop
cmp
ja
cmp
mov
xor
ret
push
jecxz
cmp
scas
insb
adc
pop
sub
mov
bound
mov
push
and
loopne
adc
jg
inc
loopne
repnz
addb
inc
movsl
stos
cltd
int
std
in
neg
mov
into
xchg
cmp
fadds
xor
cmp
add
imul
std
test
jo
fisubrs
fsubrl
inc
mov
adc
fbld
mov
pop
inc
or
xor
pop
in
popf
xor
mov
rcll
out
rcrb
dec
sub
test
and
push
jno
mov
cmp
fsts
push
inc
int3
enter
dec
sub
imul
divb
mov
arpl
push
sbb
mov
scas
lahf
jg
jge
arpl
lea
jl
or
in
cmpsl
aas
sarl
call
outsl
shlb
pusha
jl
xchg
xchg
js
inc
pop
inc
cmp
add
loope
jecxz
push
leave
pop
xor
imul
lret
sbb
dec
dec
mov
mov
imul
lahf
cmp
popf
xor
sbbb
es
cmp
fmuls
hlt
push
inc
out
ficoml
sbb
sub
xchg
sahf
test
idiv
mov
sub
rolb
dec
and
sub
cmpsl
cmp
sub
lds
lods
push
push
int3
stc
or
push
push
jl
cmp
or
out
scas
dec
jge
repnz
jl
cmpsl
shl
sti
push
mov
lea
dec
adc
fsubrs
add
scas
aaa
cs
inc
lahf
jo
add
add
test
xor
and
lea
fwait
in
fsubrs
insl
xchg
stc
in
fwait
cmpsb
sbb
imul
mov
add
jge
sub
out
inc
stos
insb
sbb
movsb
pop
push
fildll
jecxz
mov
stos
mov
iret
inc
inc
popl
push
negl
cld
xlat
lret
sub
mov
push
and
outsl
les
sub
mov
mov
sti
imul
sbb
jmp
mov
sbb
roll
cld
out
in
jnp
pop
pop
cli
cmpsb
sub
mov
icebp
addb
jo
pop
push
adc
bound
push
push
jns
lods
and
popf
into
dec
in
lock
test
add
push
add
lret
adc
repz
movl
jne
mov
push
idivb
push
addr16
popf
cmpsb
mov
mov
arpl
mov
adc
mov
and
or
insb
movsb
cmp
mov
push
dec
shl
mov
je
test
adc
out
push
push
rclb
or
iret
sbb
clc
movsb
je
xor
xor
xor
fwait
jp
pop
stos
movsb
es
movl
adc
push
test
xor
lahf
inc
pop
aam
es
dec
push
jge
fucomip
inc
data16
repnz
xchg
pop
rcr
out
mov
divb
out
cmpsb
cwtl
out
data16
lock
jl
sbb
cmp
jnp
xchg
out
or
inc
xchg
cwtl
dec
cli
ss
xor
mov
jns
adc
inc
jmp
fwait
fs
xchg
push
jmp
aas
pop
mov
mov
adcb
daa
aam
addr16
and
rorl
cmp
scas
int3
out
mov
shl
pop
push
xchg
fisubl
or
sar
in
fistps
sub
jo
enter
xor
sub
into
cmp
dec
dec
movsb
lods
push
dec
out
popf
subl
in
push
dec
inc
aad
adc
cld
ljmp
fnstcw
mov
nop
rcrl
pop
sub
rorb
popf
dec
cmp
sbb
jmp
in
fwait
mov
push
jo
mov
push
movsl
loope
inc
repz
stos
pop
ds
jb
sbb
fcomps
jmp
jp
jle
fistl
sbb
rcrl
test
clc
xor
lods
cli
mov
imul
mov
aaa
cs
movsb
addb
sub
ret
ficoml
cmp
xchg
stos
dec
int3
hlt
jmp
sbb
jle
ds
in
in
pop
mov
bound
push
mov
cmpsb
jb
xor
fstl
xchg
loop
negw
ret
dec
push
adc
adc
arpl
xchg
test
jg
pop
push
xchg
mov
insl
jmp
mov
cli
sti
movsb
popa
add
add
xchg
sahf
sub
scas
add
out
pop
nop
divb
subl
push
pop
insb
push
dec
mov
stos
nop
xchg
repnz
in
adc
test
push
or
jl
xchg
pop
sbb
aaa
jnp
push
lods
jbe
add
outsb
mov
aad
sahf
mov
pop
adc
inc
sbb
mov
fsubr
mov
jne
xor
lret
mov
xchg
pusha
lret
int
push
mov
mov
js
cmpsl
push
inc
mov
rcrb
xor
or
insl
fbstp
inc
hlt
mov
pop
xor
adc
fcmovnu
nop
mov
mov
sub
or
stos
add
movsl
outsb
inc
call
ret
cmp
bound
pop
ljmp
movsl
sbb
rorl
inc
jb
out
in
fldenv
pop
das
stc
xor
mov
mov
mov
mov
movsb
xchg
loope
xchg
int3
in
sub
xchg
loop
pop
push
inc
dec
xchg
cmp
ljmp
xor
dec
cltd
push
and
lea
mov
inc
pop
pop
test
divl
mov
sub
inc
scas
push
pop
sbb
orb
mov
sbb
pop
jbe
cmp
aam
xchg
adc
test
sahf
sub
mov
add
sti
cltd
das
popf
xchg
jle
cmpsl
inc
fsubp
movsb
in
data16
ljmpw
cmp
loop
je
sahf
sbb
adc
out
and
pop
cmc
add
pop
mov
in
clc
push
dec
lods
dec
push
cmovs
mov
daa
test
pop
add
adc
lcall
inc
aaa
mov
push
pop
sbb
jp
pop
ret
rcl
faddl
loop
popa
bnd
test
addr16
xchg
adc
pop
mov
inc
gs
lods
mov
cmpsl
test
push
mov
arpl
mov
xor
popa
lds
fdivs
jle
dec
nop
mov
cmc
pop
imul
add
jg
mov
sub
inc
fwait
inc
cmp
mov
and
mov
int
sub
pop
ja
add
jle
fisubl
jl
add
adc
insb
and
pandn
test
sbb
sbbl
cmpsb
aad
xchg
and
jnp
or
sub
arpl
adc
pop
mov
mov
dec
insb
arpl
xchg
mov
sbbb
adc
pop
outsl
xor
push
lret
popf
fdecstp
enter
mov
shl
push
mov
aam
inc
cmp
inc
xchg
cmp
in
in
subl
es
ret
mov
mov
scas
fwait
dec
js
stc
scas
repnz
lahf
std
js
ret
fistl
mov
fidivrs
jno
fstl
in
fsubp
sub
ret
fs
faddl
inc
data16
pop
call
ret
mov
inc
imul
scas
sbb
stos
inc
sub
out
mov
dec
push
xchg
out
lods
pop
xor
adc
shrb
mov
daa
adc
fnstenv
mov
mov
add
iret
cmc
xor
dec
pop
in
cmp
movsb
jno
xor
inc
or
or
or
dec
xchg
mov
push
lahf
test
mov
into
cmc
sahf
pop
adcb
pop
dec
xor
lcall
pop
movsl
jge
jg
loop
cmpsb
lock
add
scas
inc
andb
cmp
jp
add
fwait
pop
inc
int3
stos
pop
dec
inc
pop
pop
or
xchg
jne
in
xor
dec
xor
test
and
mov
sbb
clc
sub
test
jg
in
sub
loopne
aaa
mov
push
mov
dec
daa
nop
clc
pop
add
push
push
into
inc
push
jge
loop
lahf
andb
nop
nop
or
mov
lods
lret
pop
mov
jl
jecxz
pop
fsubrs
cmc
cmpsb
and
jl
das
and
mov
mov
push
sbb
ror
cmpsb
and
dec
inc
mov
jno
cmp
adc
sbbb
xor
sub
or
lret
mov
mov
xchg
test
into
dec
mov
test
rolb
jno
jge
cmp
jp
jnp
ljmp
js
mov
push
pop
test
fisttpll
jbe
sub
ja
movsb
sbb
fsubs
cmp
cmp
cmpsl
testb
dec
xlat
cmp
aaa
xchg
dec
outsb
dec
xlat
add
mul
lret
lods
mov
gs
xorl
out
add
ljmp
in
in
fcoms
jmp
in
xlat
mov
mov
pop
nop
push
xchg
cmp
mov
inc
xor
scas
adc
jge
flds
fsub
aas
aas
mov
push
lods
xchg
movsl
imul
xchg
mov
test
cmp
mov
cmc
or
fistps
ffree
les
lcall
int3
jmp
xor
lods
inc
pop
push
dec
insl
cwtl
idivl
cmp
sti
sub
mov
fidivl
mov
iret
jecxz
mov
ret
lock
or
adc
rclb
rorl
out
ljmp
test
clc
loope
ret
pop
sub
mov
jmp
xchg
xchg
or
test
test
inc
mov
jae
pop
xor
jle
cmpsl
mov
out
insb
inc
mov
int
dec
loop
test
adc
cs
adc
popf
aad
mov
clc
xor
ret
xchg
stos
jecxz
aam
loop
adc
aas
imul
in
pop
mov
nop
push
push
rolb
int3
data16
aas
addr16
dec
cmp
or
xchg
stos
imul
aaa
test
cs
xchg
ja
inc
push
sub
jmp
or
cwtl
scas
ja
in
cmp
pop
push
or
repnz
fsubs
xor
shl
loopne
mov
jo
mov
inc
or
pop
xchg
pop
jmp
pop
mov
mov
cmp
into
jae
in
mov
gs
dec
push
mov
mov
cld
push
sub
or
pop
scas
lret
push
ret
xchg
iret
hlt
xchg
push
fdivs
sub
xor
push
shl
lcall
push
and
sahf
and
mov
mov
adc
scas
ljmp
sarb
movsb
out
mov
and
stos
fsubl
test
imul
repnz
loope
out
and
pushf
mov
das
test
inc
test
flds
jnp
or
movzwl
mov
xchg
into
xlat
xchg
gs
shll
scas
inc
and
pop
jb
pop
fmul
lock
cmpsl
cmp
inc
std
xchg
imul
cmp
mov
and
jmp
mov
xchg
sbb
test
jg
mov
dec
push
gs
idivb
das
cmp
scas
cmp
sub
es
clc
je
cmp
je
mov
dec
jns
cmp
pop
arpl
push
gs
imul
lahf
clc
mov
out
es
fstpl
mov
fimuls
mov
xor
jg
lret
ss
popa
lods
or
xchg
aas
adc
fadds
out
mov
pop
adc
sub
std
jecxz
sbb
sbb
mov
out
lret
mov
outsl
popf
cmp
sub
out
ret
loope
jns
cmpb
fld1
jge
xor
and
hlt
outsl
sbb
mov
xchg
shl
loope
push
mov
enter
sbbb
xchg
nop
pop
jmp
outsb
addr16
mov
das
dec
pop
cmc
les
sahf
jp
inc
aaa
ret
and
sbb
pop
mov
push
mov
and
int
dec
push
lods
test
pop
push
pop
mov
fs
dec
and
add
xor
mov
mov
sbb
xlat
push
and
iret
sub
jg
jl
push
leave
mov
adc
cmp
mov
stos
cs
andb
pop
fucom
repnz
pop
and
and
adc
cmp
and
mov
push
cmp
dec
jecxz
call
sub
cmp
out
sbb
adc
mov
nop
movsb
jl
movsb
in
mov
iret
pop
in
pusha
push
or
mov
lret
xor
gs
in
jae
fisubrl
test
fiaddl
fmuls
mov
cmp
inc
bound
adc
push
test
cli
cmc
add
lock
lahf
jo
fdivs
xor
xorl
push
addr16
pop
sbb
stos
xor
or
ljmp
or
shll
mov
shlb
sub
les
add
pop
adc
mov
mov
inc
out
push
xor
sarb
lret
icebp
jno
adc
inc
xor
jns
mov
sub
stc
jl
dec
xor
scas
addr16
outsb
iret
loopne
pusha
cmp
lret
jne
rcrb
lock
mov
fucom
jg
mov
or
xchg
mov
sub
cmc
or
repz
out
and
pop
icebp
test
sahf
pop
lods
dec
insb
aam
adc
jns
out
aam
les
movsl
iret
clc
shl
xchg
out
xorb
xor
push
mov
sub
aam
xor
inc
mov
sub
lds
jecxz
push
aas
ret
pop
inc
cmp
loop
jns
dec
stc
xor
mov
mov
push
mov
in
add
subl
fidivs
xor
or
jnp
inc
in
inc
xchg
cs
popa
xchg
pop
cmpsb
xchg
pushf
mov
loope
inc
inc
pushfw
mov
add
rolb
mov
sbb
cmp
lea
dec
push
jbe
pushf
xchg
pop
out
cmp
mov
pop
addr16
fs
mov
sti
mov
sub
rorb
data16
icebp
mov
inc
aaa
inc
jl
sbb
test
pop
add
mov
bound
cmc
lds
in
out
aam
xor
inc
fldl
mov
push
mov
inc
or
lds
jg
inc
sub
jno
sbb
xor
lods
pop
pop
mov
pop
aam
addr16
push
stc
in
pop
lcall
pop
xor
daa
sub
out
out
outsb
je
adc
sbb
loop
in
sub
pop
cmp
push
pop
jle
mov
mov
inc
dec
mov
push
fisubrs
mov
cltd
inc
pop
aas
sbb
in
test
aas
push
cmp
inc
xchg
imul
adc
je
and
mov
jg
xor
lea
scas
pop
mov
and
dec
and
cmpsl
movsl
and
dec
sti
shlb
sbb
rolb
push
inc
cs
xorb
inc
inc
jno
dec
mov
mov
fsubr
out
out
scas
cld
fwait
aas
aad
scas
ljmp
mov
xchg
add
test
loope
inc
pop
bound
loop
push
into
and
push
mov
loope
inc
popf
fldln2
cld
in
mov
and
xor
aam
pop
imul
dec
xchg
pushf
mov
mov
jae
mov
dec
mov
fs
dec
push
mov
cltd
xchg
adc
inc
fwait
push
aas
mov
or
pop
push
xchg
clc
insl
pop
add
xchg
and
movaps
ret
pop
mov
orl
inc
mov
cmp
mov
push
daa
mov
cmp
jnp
push
rcll
out
mov
xchg
outsb
roll
ret
push
and
or
and
lret
fistpl
rcl
les
mov
icebp
out
mov
xchg
xor
pop
xchg
or
es
cmc
repz
xchg
mov
lock
sub
jmp
cmp
push
lods
xlat
out
shlb
add
inc
push
sbb
mov
sub
test
and
dec
sarb
outsl
jg
lock
lret
sbb
std
mov
cmpsb
cmp
inc
xchg
sub
mov
ret
into
jne
aas
adc
out
mov
jno
fldenv
stos
sub
in
inc
or
push
into
cmp
pop
mov
pop
inc
stos
xchg
leave
int3
std
pop
add
mov
adc
loopne
ja
fcoms
stos
xchg
xchg
jecxz
out
sub
repz
pusha
xchg
cld
mov
repnz
or
es
daa
lcall
in
sub
jge
jnp
fiadds
mov
mov
mov
ret
loopne
call
mov
shrb
xor
push
inc
inc
xchg
xor
and
push
idivb
sub
incb
loope
cmp
push
mov
sub
je
push
imul
dec
ret
cmp
sub
push
loope
faddl
adc
dec
lahf
inc
into
in
inc
jbe
or
pop
xchg
ja
test
mov
cmpsb
aad
fidivrs
and
imul
inc
cmp
mov
pushf
pop
daa
outsl
mov
arpl
stos
ss
adc
mov
adc
hlt
inc
addr16
test
jns
lret
aas
push
xchg
lret
sub
sbb
push
jae
les
pop
sbb
mov
addr16
or
ror
aam
test
jno
xchg
and
icebp
in
xchg
scas
dec
nop
jo
sub
movsb
or
mov
or
call
loopne
sti
pushf
cmp
inc
cmp
nop
enter
pop
lahf
xor
out
sub
pop
fidivl
pop
inc
sub
sub
add
sbb
inc
pushf
push
das
sbb
sbb
lock
icebp
ret
xchg
mov
lods
icebp
mov
add
lret
or
ret
stos
adcb
out
scas
mov
dec
adc
push
push
in
sub
xchg
cmp
scas
inc
sahf
ss
in
push
or
jg
jmp
js
cltd
dec
inc
sahf
and
clc
mov
cmpsl
cmp
lret
outsl
ds
movsb
mov
in
cmpsl
rcpps
mov
sbb
cmp
aad
dec
jbe
pop
pop
dec
xor
clc
sbb
adc
xor
inc
in
dec
jecxz
push
mov
adc
mov
ret
xor
push
shrl
outsl
xchg
xor
insl
xchg
adc
xor
lea
rorb
adc
push
lcall
or
mov
xor
sbb
pop
cld
mov
cld
pop
inc
push
fwait
jno
divb
ja
pop
mov
dec
stos
xlat
jl
ljmp
mov
ss
ret
push
jae
enter
sub
cwtl
in
xor
add
ficoms
jge
mov
cwtl
adc
xchg
dec
fxch
daa
movsb
mov
shlb
add
push
dec
xlat
pusha
adc
cli
and
repz
sub
jle
sbb
or
divl
pop
push
sub
or
cmp
es
adc
mov
movsb
cmp
push
jl
test
cmc
mov
pop
adc
pop
jns
scas
xor
leave
gs
decl
movsb
mov
cmp
mov
mov
orl
mov
ret
add
xor
sub
mov
mov
rcl
cmp
or
cli
inc
insl
pop
bound
scas
lahf
fbstp
int
into
cli
inc
nop
sub
jge
loopne
mov
shl
xchg
ss
xchg
cmpl
fdiv
dec
daa
mov
sub
das
les
jmp
xor
loope
xchg
mov
adc
int
mov
pop
leave
sub
lods
dec
cltd
xchg
hlt
and
adc
xor
jbe
bound
pushw
mov
mov
int
cmp
repnz
shr
xchg
test
xchg
sbb
scas
sub
test
mov
adc
mov
cmp
add
sbb
lret
jg
jns
add
push
out
dec
pusha
scas
xor
sub
fidivrl
jns
cltd
push
mov
or
xchg
adc
out
or
xchg
dec
sbb
xchg
xchg
dec
mov
add
shlb
idivb
pop
inc
pop
lret
jb
inc
mov
out
int
out
or
mulb
xor
call
mov
dec
movl
jae
and
jg
out
adc
in
or
insl
and
jae
fstpt
das
ljmp
jecxz
mov
jl
lods
or
sahf
xchg
rcll
xchg
sub
jecxz
testb
lcall
or
rol
fsub
ljmp
mov
in
mov
cmp
mov
je
inc
mov
pushf
nop
jne,pt
sbb
or
and
jge
or
iret
or
dec
fs
test
jmp
inc
mov
lret
sub
sub
jge
xchg
push
jmp
mov
movsl
popa
add
stc
mov
insb
xor
inc
jmp
sub
dec
sub
test
pushf
cmpsb
pop
lcall
popa
xor
lret
loopne
dec
shll
mov
cltd
mov
mov
cmpsl
inc
inc
add
fsubp
mov
jmp
pop
push
out
fnstcw
cmp
jbe
push
add
pop
imul
jnp
cmpsl
in
js
add
repnz
rolb
mov
push
iret
lret
sbb
popf
fstpt
addl
stc
loop
popf
fisubl
or
cmp
mov
icebp
je
mov
shl
push
pop
fmull
push
add
push
inc
into
mov
mov
repnz
xchg
in
push
jnp
daa
xchg
add
lock
pop
dec
mov
repnz
je
subl
cmp
adc
test
in
aad
std
pushf
push
rorb
mov
insb
ss
test
in
pop
leave
xchg
dec
and
bnd
test
inc
orb
test
pop
jbe
imul
mov
cltd
loope
outsl
cmc
int
mov
call
aad
imulb
sti
sbb
ret
jmp
jb
xchg
jns
adc
mov
mov
repnz
js
cld
xchg
xor
shlb
push
mov
into
sbb
test
push
imul
xor
mov
insb
int
js
lods
loopne
sbb
sbb
jp
pop
leave
shll
mov
push
les
mov
scas
imul
das
in
add
inc
xchg
pop
shll
out
arpl
adc
push
pop
stos
pop
ret
test
jge
arpl
shrb
jbe
mov
stos
cmc
cmp
outsb
pop
enter
inc
inc
ret
daa
jne
int3
sahf
imul
inc
mov
aad
jle
test
push
out
add
das
cmpsb
test
inc
fs
scas
int
add
jb
push
icebp
mov
fildl
mov
jne
in
push
jbe
mov
cmpsl
add
lods
mov
loopne
or
adc
mov
loopne
les
movsl
aam
mov
dec
rolb
outsl
cmc
lret
lods
cmc
jl
push
push
stc
aaa
test
jl
add
jecxz
imul
test
mov
sahf
sbb
ds
lret
shr
addr16
lea
pop
sbb
ja
mov
mov
xlat
test
add
cmp
cmp
mov
lock
aas
mov
add
or
mov
fcmovnb
dec
or
pop
and
call
and
lret
add
push
jle
mov
fldenv
jns
or
dec
jae
and
dec
xchg
xlat
pop
cmpsl
les
test
jecxz
push
les
jb
int
pop
test
sub
testl
inc
dec
inc
out
das
adc
and
int
pop
push
test
fstpt
idivb
subb
je
push
and
add
pop
jno
push
int3
cmpsl
pop
stc
sbb
pop
mov
rcrl
jo
jbe
scas
arpl
shlb
jp
push
xchg
pop
pushf
xor
mov
push
sbbb
xchg
dec
sbbb
or
jmp
pop
mov
push
mov
mov
mov
stos
daa
sub
mov
in
cmp
nop
fsubrl
xor
mov
mov
sub
adc
sub
push
into
mov
sbb
mov
jmp
cltd
mov
pop
pop
lcall
add
or
clc
cmp
bound
loopne
and
pop
mov
jecxz
inc
mov
adc
cwtl
iret
loope
ret
jno
fs
bound
pushf
les
or
inc
jbe
and
mov
xchg
jl
inc
mov
push
rcll
mov
mov
mov
loope
cmp
adc
aaa
mov
push
std
pop
jae
arpl
stos
lods
mov
cltd
inc
cli
xchg
and
inc
xchg
inc
lea
stc
and
adc
roll
dec
sbb
das
in
sbb
iret
inc
fnsave
or
mov
sub
mov
cmpsl
push
jmp
lds
xchg
fimull
lret
xor
jp
or
push
cmp
pop
or
jle
shr
sbb
xor
iret
jae
arpl
fstl
js
mov
sub
xchg
lahf
popa
lcall
xchg
xor
movsb
cmp
mov
or
adc
out
cmp
xor
jo
test
cmpsb
jae,pn
jl
cmp
sti
push
pop
clc
int
loopne
inc
out
xor
jo
fisubs
xor
inc
jg
jae
jns
rclb
sub
push
jmp
loope,pt
jbe
mov
xor
repnz
push
mov
aaa
ret
mov
cmpsl
mull
inc
iret
jl
and
pop
in
or
pop
add
fsubrl
out
arpl
test
cltd
push
push
arpl
clc
mov
cmc
xor
add
loope
mov
and
lds
sub
inc
inc
pop
shrb
pop
jnp
stos
cmp
and
cld
jb
dec
movsb
cmp
sub
imul
addr16
int
push
repnz
scas
xchg
mov
add
add
xchg
not
sbb
popf
mov
ja
stos
sbb
fisttpl
loopne
shld
fistpl
sub
lds
xchg
xor
push
repz
mov
repnz
fdivr
cld
push
test
icebp
fldt
fneni(8087
in
or
xchg
and
test
sub
jne
mov
jns
jno
shll
jne
dec
xor
mov
and
jnp
jg
lret
gs
mov
ss
or
mov
sbbl
add
lret
push
or
ss
icebp
jno
enter
ret
ljmp
shll
fcmovu
jge
mov
inc
das
aas
pop
mov
push
cli
xchg
or
mov
or
jle
push
stos
lret
mov
jo
stos
outsl
mov
pop
jns
add
aas
and
cmpsl
test
add
out
repnz
popa
pop
roll
sub
mov
mov
mov
and
cli
rcrb
out
inc
jno
sub
in
jns
push
pop
gs
cmp
movsb
pop
or
dec
xor
test
jecxz
sub
movsb
and
int3
cmpsl
jmp
add
dec
sub
stc
xor
mov
and
mov
subl
imul
cmp
inc
sub
push
inc
push
nop
pop
out
movsb
std
icebp
int3
movsl
adc
shrb
push
mov
xor
movsb
fiaddl
jns
out
xchg
addr16
sub
add
ficoms
xor
mov
push
add
subl
or
mov
fwait
cmp
sbb
sahf
lods
fisttpl
dec
push
mov
mov
mov
mov
ja
xor
lds
push
mov
and
jl
xor
xchg
cmp
outsb
adc
in
outsl
fbstp
movsb
scas
xchg
scas
push
subl
xchg
out
or
mov
shll
mov
inc
mov
nop
mov
mov
add
sub
or
jmp
loop
lahf
loop
decl
xchg
ds
lea
inc
mov
mov
fisttpl
mov
xchg
sti
shl
sbb
bound
pop
mov
mov
mov
mov
aam
jmp
subl
cmc
push
cmpsb
push
and
gs
cmc
adc
and
gs
scas
push
imul
xchg
stos
in
pop
inc
xchg
fcmovnb
mov
cmp
or
push
imul
push
cmpsl
in
aam
push
sbb
push
inc
lods
add
push
repnz
mov
repnz
gs
pop
aam
into
aaa
fnstenv
push
bound
movl
push
aas
mov
int
roll
mov
daa
inc
jg
fwait
xor
jns
cmp
sbb
push
pop
add
inc
xchg
inc
ljmp
mov
insb
stos
push
pop
repz
mov
push
dec
cld
push
loopne
ljmp
ljmp
fistl
cmp
lds
mov
cwtl
mov
data16
xlat
daa
cmp
sbb
fistpll
fadd
insl
push
test
int3
lods
test
dec
sub
les
xchg
imul
cmpsl
add
sub
jg
sbbb
movsb
and
pop
push
ret
pop
and
pop
mov
xor
add
pop
lods
xor
push
adc
jnp
jb
js
push
or
xor
mov
jnp
push
dec
inc
and
andl
and
jmp
outsb
mov
or
sub
sub
out
xchg
jne
ja
mov
adc
or
pop
callw
adc
adc
subb
fisubl
pop
aam
xlat
pop
ljmp
movsb
loope
hlt
ja
punpckldq
loopne
push
inc
mov
jle
adc
ret
nop
movsl
mov
icebp
cmp
add
sbb
xlat
mov
sbbl
jmp
repz
push
xor
add
loopne
sbb
fisubrs
and
arpl
ficompl
repnz
mov
push
lea
mov
push
xor
add
movsl
shlb
lret
hlt
inc
xchg
mov
cmp
xchg
rcll
ficoml
dec
into
dec
mov
adc
add
fnsave
mov
xorb
scas
push
xlat
lods
xchg
cli
popa
dec
cmp
sub
mov
clc
in
addb
add
pushf
jo
mov
stos
push
mov
push
cmp
rcl
mov
pop
mov
mov
outsb
and
jge
dec
repz
movsl
pop
adc
mov
ds
inc
push
cltd
out
mov
pop
mov
repz
jp
test
xor
les
push
cld
and
adc
xor
repnz
std
in
and
mov
or
adc
pop
sub
inc
xchg
sahf
mov
sbb
adc
lret
mov
pusha
bound
fsubrl
mov
out
add
mov
movsb
outsb
cwtl
cmp
dec
mov
outsl
pop
and
xchg
jmp
fwait
cmp
andl
jo
sbb
sbb
js
popl
jge
sub
xor
mov
xchg
mov
aaa
pop
sbb
cmp
cmp
dec
scas
adc
mov
xor
jne
xchg
push
cmp
add
mov
cld
jp
push
and
je
dec
sub
mov
clc
leave
outsb
icebp
inc
les
inc
jp
sbb
ds
pusha
sub
aam
mov
cmp
push
xchg
bound
pushf
sarb
inc
sti
dec
int
scas
mov
repnz
loop
stos
insl
jbe
push
push
addr16
int
je
in
and
rcr
push
dec
imull
dec
ror
bound
and
jp
das
jle
repz
cmp
push
or
push
shrb
neg
mov
inc
fistpl
dec
movsb
inc
xor
inc
xor
inc
ret
add
push
cmpsl
mov
shlb
int3
push
dec
lret
mov
cmp
aaa
push
and
repnz
fimull
push
pop
xchg
mov
out
cmp
dec
pop
clc
leave
pop
loopne
gs
sub
xchg
lds
cli
lods
stos
mov
aad
sub
pop
and
xchg
dec
jge
test
fsubrl
push
xchg
jb
mul
add
cld
or
stos
int
pusha
push
mov
loop
lret
jne
cs
pop
push
loopne
pop
pop
mov
cli
aaa
adcl
ret
mov
mov
jl
add
or
lret
cmpsl
sbb
mov
pop
mov
xor
arpl
fldenv
jmp
push
xorb
iret
pop
jbe
jmp
xchg
leave
adc
inc
scas
push
icebp
pop
push
js
fs
sahf
je
leave
adc
sbb
daa
jl
cmp
cmpsl
pop
jl
scas
outsb
adc
test
rclb
ret
mov
cmp
shrl
inc
fs
add
sarb
stos
daa
idivb
mov
pop
mov
xchg
mov
jl
or
lods
popf
inc
lock
jmp
leave
adc
adc
mov
ja
dec
repnz
out
mov
pop
push
test
and
mov
xor
stos
push
test
inc
scas
ret
jbe
push
out
je
cmp
sub
dec
pop
cmp
idivb
push
xchg
sahf
push
repz
push
mov
bound
pop
rcr
stc
aaa
orl
sbb
rcrb
dec
pop
stos
xchg
mov
sbb
jle
arpl
inc
sub
enter
daa
in
pop
inc
adc
xchg
ds
js
adc
xchg
into
mov
je
cmp
sub
sub
push
xchg
cmpsb
ficompl
cmp
enter
mov
dec
cmc
repz
mov
rclb
cmp
popa
test
sbb
xchg
or
daa
into
push
xchg
jb
xadd
add
mov
icebp
jle
icebp
mov
inc
lea
push
inc
or
movsl
cmp
mov
add
loopne
std
pop
shrl
sub
or
pop
jnp
cltd
nop
ljmp
push
sub
sub
sub
jb
push
mov
scas
adc
das
sub
clc
push
ret
rorb
cmp
pop
fiadds
lods
cli
gs
call
mov
das
adc
rcrl
clc
push
adc
addw
cmpsb
ss
jo
or
fcmovnb
scas
andl
popa
test
mul
mov
jns
shlb
or
pop
mov
scas
mov
adcl
push
int
pushf
and
stos
lock
or
mov
out
imul
cmpsl
lods
adc
xorb
pop
jg
imul
aas
xor
aad
dec
adc
out
frstor
sub
test
lods
mov
cmp
pop
adc
xchg
shll
ficoml
lcall
add
add
daa
jl
pop
xchg
daa
mov
pop
jge
repz
movl
pop
shlb
lods
lods
and
jnp
xchg
andb
and
and
cmpsb
aaa
call
test
fstpl
arpl
sbb
mov
repz
fwait
push
hlt
push
mov
aaa
push
mov
push
cmp
in
or
push
cld
in
orb
pop
dec
push
xor
pop
sti
popf
jg
int3
hlt
adc
adc
cmpsl
sbb
jmp
mov
and
clc
inc
pop
sti
ja
dec
xorl
pusha
sti
lahf
jmp
sub
mov
adc
fcoms
push
cwtl
pop
in
pop
popf
dec
xor
decb
sbb
aas
sbb
push
scas
inc
cltd
mov
mov
pop
dec
icebp
inc
das
sbb
inc
push
adc
sub
idivw
cmpsl
out
mov
dec
fwait
jp
jbe
cmp
jno
cmp
mov
cmp
cmp
pop
xor
pop
loope
add
mov
push
cli
fwait
cli
leave
pop
data16
ficompl
test
lods
cmpsl
mov
cli
sahf
test
mul
mov
jge
pushf
js
mov
out
cli
or
dec
mov
int3
into
test
xchg
data16
cwtl
icebp
xor
xor
push
sub
and
mov
inc
pop
mov
sbb
dec
aad
jbe
inc
loopne
mov
fdivs
push
je
je
pop
mov
lcall
test
dec
push
ret
aaa
sbb
addb
inc
dec
xchg
add
mov
mov
dec
add
xor
clc
addb
cltd
sbb
dec
lahf
cmc
out
or
cli
mov
hlt
fnstsw
ja
es
testb
mov
xlat
fisttpl
dec
mov
add
ds
ficomps
pop
adc
inc
pop
pop
cwtl
fcmovu
daa
cld
cmc
xchg
mov
es
cld
lods
je
and
or
out
pop
insb
inc
stos
sub
cmp
xchg
push
push
aaa
daa
test
cmp
cmp
into
jno
call
pop
out
aad
and
dec
push
bound
out
cmpsl
bound
push
dec
sahf
pop
and
cs
adc
andb
mov
dec
scas
lret
or
sub
loopne
cld
repnz
aaa
adcl
sbb
cmp
js
pop
and
cld
inc
xchg
cwtl
out
insl
ja
pop
push
jno
test
shll
test
pop
pop
xchg
lahf
or
dec
jbe
xor
pop
test
loope
imul
in
mov
inc
pop
inc
or
sub
and
xchg
mov
mov
in
adc
mov
ffreep
mov
test
and
rcr
aad
psubq
ds
in
jge
stos
data16
std
in
rcrl
xchg
cmp
out
inc
push
push
and
mov
fidivrl
test
insb
xlat
ret
cmp
jnp
in
pop
cli
jge
daa
or
aad
loop
lods
fmul
xchg
add
dec
test
push
dec
fadd
and
sub
xor
mov
loope
cmc
xchg
xchg
or
sbb
bound
mov
jmp
or
test
hlt
xor
arpl
and
jb
cs
je
sar
or
je
mov
xchg
andb
mov
lcall
cli
adc
jmp
xchg
popf
mov
sbb
stc
dec
push
movsl
mov
push
sbb
aaa
push
test
cmc
iret
dec
dec
add
mov
jmp
mov
xor
nop
fidivrl
lds
rcl
jecxz
dec
xchg
testl
jnp
cmp
push
test
cmpsb
and
imul
adc
in
std
loope
cmp
repz
aad
insl
cmp
push
xor
adc
cmc
sbb
in
pop
in
iret
xlat
pop
and
loop
lret
gs
dec
stos
aas
insl
cmpsb
mov
ficompl
in
sahf
das
xchg
addr16
adc
fs
repnz
arpl
daa
adc
add
cld
jmp
inc
xchg
lahf
test
in
cwtl
cmp
xor
out
out
insb
mov
xchg
lret
out
sahf
xor
xlat
arpl
cmp
lcall
jo
sbb
mov
ret
repz
iret
sub
mov
outsl
inc
pop
loopne
add
jo
dec
adc
jmp
push
push
mov
ja
dec
mov
xchg
mov
shlb
jns
and
aas
pop
out
pop
outsb
test
into
cmpsb
and
hlt
in
cmp
je,pt
aam
and
dec
xchg
out
adcb
aad
test
out
addr16
nop
mov
fwait
int3
dec
lcall
ret
and
mov
stos
shrl
mov
mov
push
adcb
into
mov
out
mov
mov
and
lea
mov
ret
jno
pop
bound
enter
rcrl
push
mov
std
dec
xlat
pop
push
lahf
jno
jns
cs
jl
icebp
sahf
jge
repz
adc
lea
pop
or
clc
mov
and
xor
ljmp
sti
mov
pusha
and
test
mov
cmp
inc
pop
nop
fsubs
push
aaa
dec
scas
fmull
fcmovnbe
cs
mov
ljmp
push
cmp
dec
mov
lahf
dec
lret
dec
push
push
sbb
inc
lods
mov
sub
data16
loope
dec
jmp
mov
push
ja
cmpsb
adc
cmp
sbb
test
jne
test
and
cwtl
dec
movsl
cltd
adc
cli
popf
push
lds
pop
stos
flds
mov
sarl
mov
and
rcr
xor
pop
jge
aaa
ss
mov
xchg
mov
sub
cltd
or
out
outsl
mov
push
shlb
cmp
nop
loop
lret
or
outsb
div
mov
out
rcr
das
xchg
icebp
sbb
outsl
iret
xchg
shll
xchg
dec
sbb
in
push
jne
dec
cmp
loope
call
test
iret
or
mov
test
out
lret
outsb
cwtl
inc
and
mov
scas
push
push
int3
push
add
and
js
pop
xchg
adcb
jp
mov
fmuls
sub
cwtl
inc
mov
popf
dec
push
test
fcmovb
mov
xchg
mov
sha256rnds2
ret
jae
add
lock
loope
jbe
mov
mov
das
mov
jmp
mov
icebp
push
and
inc
test
jns
cltd
cli
sahf
frstor
lret
push
xchg
jg
cmpsb
pop
adc
jmp
negl
orb
or
lret
outsl
cli
pop
xchg
push
imull
aas
fisubrs
jae
sbb
lock
or
add
cmp
xchg
cmp
add
mov
push
mov
in
mov
sti
lds
xor
pop
cld
jge
xchg
adc
outsb
aaa
pop
shll
jmp
dec
cwtl
dec
ljmp
js
incl
mov
ret
or
mov
ljmp
subb
push
jo
popa
push
shlb
cs
or
mov
int3
lea
mov
cmp
dec
cltd
pop
std
mov
stc
pop
mov
cmp
or
and
ja
jmp
sbb
data16
adc
ja
dec
sbb
out
or
cmpsl
mov
ret
cmp
addr16
ljmp
arpl
iret
pop
mov
dec
test
pusha
cld
xor
jle
divb
pop
push
test
xchg
cmp
pop
mov
sbb
inc
cld
lods
int3
in
nop
xchg
ror
cmpsl
outsl
pop
sbb
cmp
idiv
and
adc
imul
sub
or
in
cwtl
adc
incb
mov
or
int3
fdiv
into
adc
les
in
js
hlt
add
outsb
aas
fucom
ret
ja
les
data16
js
or
inc
sub
cmp
nop
dec
mov
inc
std
int3
mov
cmp
mov
enter
sbb
mov
cmpsl
fstpl
leave
repz
ss
sub
bound
push
mov
xchg
inc
inc
imul
push
and
mov
push
push
pop
comiss
adc
enter
subb
pop
mov
jne
jo
or
ret
or
sub
mov
push
jle
pop
loop
cmp
xor
xchg
aad
test
dec
xchg
add
mov
pop
sbb
mov
jp
in
sti
cmpsl
push
inc
mov
jno
xor
popf
shl
shlb
les
dec
adc
push
adc
clc
pop
mov
imul
sbb
mov
push
adc
inc
faddp
movsl
adc
popa
and
out
test
enter
cmc
std
lcall
out
filds
dec
ljmp
arpl
addl
js
popf
xchg
mov
shl
push
pop
and
pop
sti
xor
repz
sbb
pusha
test
sti
fadds
add
lds
jge
sbb
xchg
mov
push
int
in
push
mov
xor
std
hlt
xorl
mov
xchg
lods
xchg
mov
sbb
mov
jo
fisttpll
dec
call
dec
les
lahf
push
mov
add
fyl2x
jne
in
cmpb
daa
sub
pop
cmp
xlat
and
mov
cs
inc
cmp
push
cltd
mov
jle
insl
inc
cmp
sar
and
or
lahf
cmp
or
aam
and
mov
push
jns
sahf
out
push
add
jno
and
imul
out
mov
and
dec
jecxz
lock
outsl
mov
mov
fistpll
and
push
jle
loopne
mov
jnp
pop
decl
add
ja
mov
bswap
icebp
leave
sbb
sub
fcmovnb
cmp
xchg
rolb
test
and
fcomp
xchg
lods
add
xchg
and
mov
dec
icebp
inc
or
sti
pop
push
xchg
cli
sbb
adc
mov
std
dec
mov
aaa
push
aas
fiadds
sub
add
lcall
popa
cli
ja
xorb
mov
adc
sbb
sarl
imul
push
pop
xchg
mov
dec
cltd
mov
cmp
xchg
push
imul
lahf
dec
testb
push
push
cmp
out
fisttpl
xor
je
sahf
insb
push
dec
add
out
out
shrd
sub
sub
in
popa
cli
in
dec
mov
sahf
xor
and
int
daa
pop
dec
inc
ds
mov
adc
aam
push
jae
push
xor
subb
adc
les
push
xor
mov
sbb
imul
and
dec
xchg
add
add
xchg
and
cmpsl
or
xchg
insl
dec
loopne
jnp
add
xor
mov
gs
dec
inc
clc
sub
rcrb
push
enter
js
out
ljmp
ds
jbe
dec
lahf
enter
lds
dec
push
jle
jle
cmc
cmpsb
pop
cmc
xlat
das
sbb
dec
jnp
pop
adc
jge
stc
mov
jo
fdecstp
iret
rcrl
orl
xchg
inc
in
jne
xchg
pop
sti
lods
sbb
jb
xchg
pop
test
dec
dec
sub
cmp
sbb
cli
aaa
xchg
xor
adc
movb
movsb
cmp
in
pop
jno
push
cmp
cmpsb
add
sub
xchg
out
enter
pop
cmp
idiv
enter
cmp
scas
imul
sete
mov
imul
inc
stc
push
fwait
pop
dec
nop
cs
adc
xchg
cmp
je
dec
repnz
mov
loopne
leave
sub
int
dec
sub
jmp
xor
sbb
pop
orb
in
cmpb
pop
xchg
das
imul
jne
adc
addr16
push
xor
adc
pop
inc
rcrb
inc
lret
les
mov
push
and
xor
mov
icebp
jns
inc
je
call
movsl
call
sbb
je
iret
pop
push
gs
shr
xor
je
outsb
mov
adc
mov
adc
sbb
jle
mov
ret
mov
add
mov
xor
mov
xor
dec
aas
fcmovbe
orb
pop
push
pushf
aam
movsl
pop
fsubrl
add
pop
or
fstps
pop
xchg
lahf
popa
inc
cmp
cs
sub
test
mov
xchg
inc
lret
loop
scas
bound
mov
pop
push
je
cltd
fisubs
add
pop
test
mov
mov
out
iret
nop
xor
inc
hlt
add
ret
test
out
xchg
mov
out
push
fwait
shl
cwtl
xor
frstor
stos
es
sbb
aad
mov
mov
sti
stos
setne
je
mov
addr16
sub
daa
mov
adc
sbb
cmpsl
mov
clc
call
call
mov
adc
stos
pop
lret
test
je
jbe
jo
ret
xorb
push
aam
lea
xorb
adc
outsl
xor
and
xor
dec
and
push
call
imul
pushf
mov
adc
cld
jmp
int
test
out
in
cmp
cltd
dec
addr16
bound
ror
insb
andl
dec
mov
pop
ljmp
xlat
out
inc
adc
arpl
dec
iret
push
add
cmc
addr16
popf
sub
in
movsl
daa
pop
mov
cmp
sub
ja
push
aam
mov
addb
jg
aam
mov
cwtl
stos
inc
sub
mov
js
inc
adc
xchg
fdivrs
and
adc
mov
add
subl
mov
mov
lahf
pushf
bound
cmp
jmp
or
push
out
lret
fisubrs
xor
fstps
mov
mov
ficoms
ret
lcall
hlt
outsl
jl
push
pop
push
jge
jmp
movl
pushf
jbe
push
xchg
popa
sbb
test
inc
sbb
push
rcrb
mov
and
mov
or
xchg
testl
ljmp
rclb
pushf
xchg
push
cmp
dec
add
mov
sub
jae
lea
push
jne
sahf
pop
outsb
fbld
ss
inc
push
mov
inc
iret
popf
adc
scas
aas
mov
inc
xor
negb
cmc
inc
jg
or
jl
xchg
xchg
jbe
mov
imul
adc
mov
and
dec
xor
mov
sub
ret
dec
or
xchg
mov
mov
jb
in
mov
addr16
inc
pop
fs
imul
inc
adc
add
imul
mov
jmp
pop
jg
cs
push
jge
pop
cmp
xchg
xchg
mov
adc
push
std
adc
push
mov
cmp
mov
sub
ds
jns
sub
movsl
in
out
xchg
add
and
rorb
aaa
arpl
mov
xchg
daa
movsl
cmp
pop
mov
in
les
frstor
add
xor
push
xchg
ss
in
lret
push
or
dec
mov
jnp
rolb
xlat
mov
mov
pop
xor
mov
icebp
sti
mov
cmp
bound
mov
sbb
lret
sub
mov
cltd
or
stc
push
mov
lods
fwait
aas
cltd
push
or
xor
sub
loope
push
fisubrs
loop
cwtl
jp
cmp
mov
sahf
enter
lret
add
adc
sub
repnz
adcl
jp
cmpsl
in
lret
xor
pop
sahf
inc
pushf
cmp
mov
je
frstor
enter
das
push
std
mov
jge
loop
fldl2e
out
cld
ret
mov
stc
dec
inc
push
andl
mov
es
jp
pop
mov
ljmp
movsl
data16
insl
pop
push
incb
dec
in
xchg
iret
jo
cs
out
pop
dec
cmc
cs
add
clc
insl
cmc
add
ret
pop
xchg
mov
call
mov
inc
loop
in
or
out
add
call
into
test
mov
dec
jecxz
daa
pusha
push
addr16
popa
fbstp
push
ss
repnz
ret
or
mov
movsl
mov
cmc
shlb
cmpsb
loope
int
and
adc
adc
testb
sub
or
sbb
jns
cmp
sbb
dec
stos
adc
mov
jbe
mov
shrb
js
adc
mov
add
push
push
add
out
in
mov
add
mov
cmpb
test
fs
mov
icebp
roll
pop
push
pop
xchg
out
aam
lcall
xchg
sbb
cmp
inc
push
nop
mov
mov
add
into
jb
shl
sarb
out
sub
movsb
gs
fildl
cmp
or
sub
jo
imul
int3
sbb
ja
sbb
or
out
push
mov
out
sbb
pushl
mov
mov
enter
shrl
xchg
push
cltd
mov
and
jmp
mov
into
ja
insb
inc
mov
pop
fiaddl
sub
mov
hlt
adc
in
cmp
lcall
push
jne
and
cmpsl
push
adc
xchg
or
fmull
push
lods
push
and
mov
in
ljmp
lret
or
mov
fsubs
js
mov
push
jo
cmp
lcall
or
scas
int3
push
cwtl
jmp
out
xlat
clc
idivl
mov
pop
data16
jae
jb
je
jl
dec
push
or
jmp
jnp
cld
add
inc
movsl
lret
filds
inc
and
pop
mov
fbld
lds
mov
mov
shrb
idivl
loope
adc
es
icebp
mov
icebp
movsb
jb
adc
cwtl
cltd
mov
cmp
test
mov
add
sahf
cmp
jnp
mov
push
mov
repz
dec
xchg
jecxz
cmp
scas
rclb
xor
mov
add
insl
sub
ja
test
or
sub
cmp
push
out
test
jp
stc
in
in
rorb
enter
xchg
idiv
imul
inc
or
sbb
inc
imul
mov
out
push
ljmp
add
mov
hlt
or
incl
jbe
mov
adc
lcall
and
xlat
pop
test
out
cli
ficomps
fsubl
es
sub
pop
repz
mov
cmpsl
xor
stos
bound
pop
inc
lret
sub
ret
or
fcomip
movsl
jnp
mov
xchg
xor
xchg
test
adc
lcall
rolb
imul
cli
pop
add
sbb
test
aam
lret
cmp
test
ror
dec
test
icebp
sahf
push
mov
dec
pushf
pop
mov
hlt
cmpb
inc
adc
int
into
je
xchg
pop
jge
mov
cli
mov
test
sub
inc
fists
mov
push
mov
sbb
iret
into
jl
nop
test
pop
jne
ja
adc
lcall
fadd
in
push
arpl
xor
cmpsb
push
repz
ds
push
div
xor
shrl
lret
pop
cmp
loop
fldcw
into
sbb
in
ds
adc
cmc
pop
dec
sbb
xlat
jns
jne
adc
and
push
jbe
mov
fisttpll
sar
xchg
call
pop
js
xchg
repnz
xchg
jmp
jae
add
sub
lds
cmpsl
and
ret
insb
and
shrl
sahf
add
pop
cld
push
mov
add
faddl
arpl
cmp
jle
xchg
sbbb
pusha
shll
fmul
or
adc
lea
mov
add
cmp
mov
mov
in
stos
mov
fsubrs
aad
pop
bound
test
jne
xchg
shlb
inc
fwait
daa
add
mov
inc
sub
cmp
mov
fcomps
xor
mov
push
addr16
sar
decb
and
sbb
test
push
and
int
xchg
pop
js
mov
cmpsl
repnz
xchg
pop
cmp
mov
outsb
jle
adc
iret
cmp
adcl
cmp
addr16
mov
push
xchg
push
loopne
push
adc
vandnps
les
cmp
sub
fnstsw
add
cmpsb
mov
cltd
push
push
cmpsl
xchg
pop
fistps
push
cmp
hlt
inc
lods
jmp
daa
es
dec
xorl
add
mov
aam
pop
scas
mov
jne
popf
sahf
add
das
adc
dec
rcrl
mov
push
sbb
fimull
movsb
sub
stos
dec
pop
test
or
dec
pop
or
mov
mov
scas
lods
cmp
or
mov
fimuls
fcmovu
sahf
leave
out
pop
fildll
cltd
cltd
add
mulb
and
imul
cmp
or
in
sar
rcl
and
and
fbld
aam
dec
fbstp
cmp
push
mov
repz
jbe
lret
cmp
mov
mov
inc
insl
jl
outsl
sub
jnp
repz
or
lret
lea
sbb
mov
shrl
es
dec
out
jae
pusha
scas
data16
jp
out
cltd
push
out
sub
aam
scas
xchg
or
fisttps
and
mov
icebp
daa
fwait
jmp
inc
ret
cmp
mov
add
scas
notb
repz
insb
push
cmp
dec
test
ds
sbb
dec
xchg
cmc
mov
inc
add
jbe
jg
dec
add
in
lock
mov
sbbb
and
pop
cltd
out
std
test
pop
mov
pop
les
mov
out
mov
xor
out
out
xlat
sub
xchg
addr16
mov
stos
movsl
int
xchg
sub
or
push
arpl
fucomi
aaa
les
jae
fiaddl
mov
dec
xor
push
cmc
jecxz
mov
insb
out
pop
scas
adc
filds
dec
mulb
dec
xor
sbb
adc
imul
and
xlat
fisttps
stos
aam
std
fists
inc
jmp
pop
xor
cmp
xchg
pop
jnp
ret
xor
lock
xor
xor
ja
ljmp
call
add
mov
inc
repz
popa
sub
daa
jnp
int3
mov
push
push
pop
push
add
inc
jp
cmp
test
cs
cwtl
jmp
cwtl
sbb
inc
adc
jae
mov
in
nop
cltd
hlt
dec
out
push
push
leave
xor
loop
push
pop
sub
pop
push
xchg
cwtl
sbb
int
sub
and
push
fmuls
es
ret
fnstcw
adc
dec
lea
imul
pop
lods
cwtl
hlt
in
adc
adc
inc
add
icebp
divb
add
cmp
std
pusha
and
pop
lret
sub
push
sub
ret
xchg
popa
jbe
jge
pop
ljmp
cmp
push
dec
lods
push
sub
data16
push
arpl
popl
adc
sbb
cwtl
movsl
add
and
pop
pop
mov
pop
lret
push
cwtl
or
out
stos
xchg
xor
cmp
add
sub
fidivrs
inc
xchg
popf
mov
dec
aas
ret
add
cmpsb
call
jmp
inc
movsl
mov
sub
jbe
pop
mov
cmpsl
push
cli
and
inc
push
inc
lret
dec
aad
jns
cld
jl
sub
dec
xchg
ljmp
aam
inc
into
pop
clc
inc
loope
pop
cwtl
loope
imul
mov
inc
add
scas
xchg
and
fs
fs
mov
jno
push
pop
outsb
fwait
popf
ficoms
cmp
sarl
jecxz
pop
mov
mov
mov
or
shrb
sti
jl
ljmp
sub
dec
movsb
jmp
daa
test
shlb
popf
aad
outsb
fldt
sub
mov
insb
incb
sbb
test
outsb
insl
jmp
pop
scas
sub
es
push
aad
xchg
pop
sbb
and
fdivrl
mov
and
sbb
ljmp
sbb
lret
push
inc
repnz
sbb
test
pop
xor
jbe
inc
and
icebp
mov
mov
shr
notl
cmpl
ret
mov
xchg
ret
jge
out
push
outsb
jne
cltd
xchg
pusha
xlat
in
adc
sbb
inc
mov
ret
adc
jbe
mull
sbb
pmaxub
add
mov
aam
and
pop
fcom
sub
lret
mov
sahf
push
ds
sarb
mov
std
ljmp
aas
inc
push
and
jb
push
xor
sbb
dec
imul
std
push
mov
fsubl
lcall
push
jg
movsb
and
sub
push
negl
aas
out
sub
mov
mov
jle
sbb
test
xchg
sti
daa
jecxz
or
stos
mov
mov
mov
push
mov
shlb
jmp
mov
cltd
jle
enter
shlb
lcall
push
aaa
jl
inc
in
test
inc
add
imul
sti
xchg
sahf
test
and
insb
sub
mov
mov
outsb
adc
in
ss
cmp
ret
sub
in
ja
pop
insl
pop
faddl
testl
aam
inc
push
mov
fwait
stc
push
in
fisubs
pop
pop
inc
add
insl
mov
movsl
ficompl
dec
popf
mov
mov
cltd
xlat
and
pop
pop
and
mov
mov
mov
popf
cmp
lds
insl
push
pop
fidivs
rep
mov
ret
call
xchg
ret
fmuls
inc
xchg
sarb
mov
push
pusha
stc
pushf
ror
fwait
cmp
sahf
popf
std
mulb
in
push
fstpt
lahf
dec
dec
popa
ljmp
pop
lahf
cmp
xchg
mov
dec
cmp
xchg
je
popf
add
or
andl
aaa
push
cmc
test
or
add
mov
adc
jl
in
adc
add
pushf
add
clc
loopne
mov
cltd
adc
sbb
lcall
jnp
add
jmp
dec
jg
aaa
rclb
ss
out
mov
or
inc
dec
out
outsb
call
jp
sub
int3
sbb
sub
jb
lret
and
cmp
ret
fs
cmpsl
xchg
lret
cmpsb
fisubrl
jne
or
dec
jne
aam
in
mov
push
xor
cmp
lret
cmpsb
jecxz
inc
or
dec
idivb
sub
mov
push
mov
dec
mull
fdivs
repnz
lea
fnsave
stc
add
xor
pop
adc
inc
scas
dec
test
mov
hlt
cmpsb
fists
mov
add
fstl
fwait
push
adc
imul
push
sbb
or
stos
ret
popa
pusha
stos
dec
sub
ja
push
loope
fndisi(8087
pop
xor
jbe
jno
int3
dec
jnp
mov
aaa
cmp
pop
push
ret
jno
xchg
sub
or
sarl
xchg
jp
mov
xchg
mov
inc
cli
push
inc
enter
xchg
cmpsb
aad
cltd
scas
sahf
xor
and
rcll
fistl
jle
arpl
mov
lret
xchg
shlb
sub
sbb
cmp
loop
jns
push
jne
dec
repz
out
icebp
lret
sub
ss
data16
add
enter
or
cmp
dec
push
fwait
inc
cmpsl
stos
pop
xchg
jmp
fdivl
hlt
movsb
jmp
mov
fsubrl
or
iret
arpl
xor
fdivs
loopne
adc
mov
popf
rcll
xchg
rclb
cltd
dec
jns
ret
pop
mov
mov
mov
int3
mov
dec
mov
or
inc
xor
repz
mov
rcrl
aam
push
push
fs
mov
addr16
inc
ret
inc
les
scas
lods
pop
repnz
scas
ret
pop
cmc
xchg
jb
sbbb
pop
mov
or
outsb
add
push
add
cmp
cmp
lahf
movsb
pop
sbb
and
mov
sbb
xor
imul
fwait
fs
icebp
int3
xor
cmpsb
rcll
xchg
add
out
push
push
popa
imul
pushf
jecxz
push
jg
add
pushf
cmp
mov
data16
sahf
rcl
stos
fdivp
lea
scas
stos
rcr
repnz
aaa
adc
movsl
push
cs
nop
popf
fdivl
and
xchg
pop
lcall
pop
push
es
or
mov
and
fwait
cmpsl
aas
in
sub
adc
mov
and
lea
inc
fchs
and
and
les
std
out
push
pop
ds
and
in
stos
fimull
addr16
movsb
loope
pop
gs
mov
cmp
neg
mov
inc
imul
femms
push
outsl
jnp
or
xor
lock
insb
lock
and
mov
mov
cld
sbb
mov
add
cwtl
fcmovb
je
js
jne
xor
into
loope
mov
fdivp
cmpb
sahf
dec
std
movsb
leave
mov
cmp
jecxz
lcall
xor
lcall
inc
ja
pop
sahf
and
adc
mov
loop
push
outsb
mov
testb
dec
out
inc
daa
enter
cmpsl
cmp
pusha
in
mov
lret
mov
add
mov
lock
insb
popa
cmpsb
add
lahf
push
repz
jno
xchg
mov
add
add
hlt
fisubl
stos
cmp
andl
hlt
push
imul
in
mov
insl
js
les
inc
ret
aad
mov
loop
push
mov
sbb
movsb
repz
addr16
mov
shrb
lahf
call
pop
dec
mov
cmp
dec
dec
sub
push
xchg
scas
jl
pop
mov
dec
cmp
aad
roll
xchg
fstpt
or
js
hlt
mov
testb
hlt
rorb
pop
dec
std
push
out
rcll
sbb
data16
scas
sub
mov
sbb
add
add
sub
ss
imul
and
loop
pop
sbb
lret
or
inc
mov
and
mov
dec
mov
inc
cmp
fs
jge
mov
and
sbb
sarb
push
aad
pushf
imulb
sbb
std
fstl
inc
repnz
dec
mov
clc
and
adc
xchg
xor
mov
mov
lahf
scas
sbb
mov
sarl
sub
enter
je
jg
out
mov
int
mov
pop
push
add
leave
bound
repz
xorl
adc
lods
cmpsb
mov
sbb
fs
test
push
ret
jnp
adc
xor
aas
rclb
or
mov
pop
out
jns
jne
outsl
jb
jg
mov
and
repz
add
xchg
gs
decl
adc
jp
int3
call
push
ss
stc
adc
push
xchg
imul
fstpt
data16
sti
pop
mov
mov
lods
push
pop
stos
loop
out
int3
mov
mov
leave
sbb
sub
cmp
popf
jns
push
sub
or
xor
in
push
xor
pusha
call
out
idivl
push
cmpsl
outsb
mov
adc
mov
test
fwait
das
jge
sub
pusha
pop
push
xchg
cmp
pop
sub
and
imul
push
mov
push
sub
mov
and
subl
push
mov
mov
pop
cmp
xchg
fstl
outsl
mov
cmpsb
inc
loope
enter
dec
xchg
cmp
jmp
mov
fildll
or
inc
pop
sbb
xchg
jp
bndstx
jno
sub
pop
insb
jae
ret
das
insb
sbb
pop
mov
mov
pop
mov
inc
dec
popa
dec
push
mov
jno
cld
fildll
jns
popf
dec
fistpl
push
rcrb
push
arpl
std
mov
jns
or
aaa
aad
jg
jnp
dec
divl
xor
pushf
jg
dec
mov
cltd
sub
push
inc
jmp
movsb
inc
or
xor
push
and
cwtl
jne,pt
ror
jmp
fildll
xor
add
jb
movsl
xchg
and
mov
leave
divl
hlt
inc
adc
pusha
inc
add
pusha
mov
out
sti
arpl
mov
and
pop
into
movb
sbb
mov
push
out
pop
ret
testl
sub
jmp
das
popf
lcall
repnz
je
fchs
inc
inc
dec
cmp
mov
add
in
cli
test
sbb
mov
jle
cs
add
andl
das
dec
ficomps
stos
xchg
in
iret
push
push
iret
adc
addl
dec
dec
dec
xor
nop
test
dec
jle
mov
arpl
sbb
jmp
or
imul
push
add
orl
add
lods
int
rcll
jl
test
jmp
sbb
imul
xchg
add
pop
in
xchg
outsb
subps
testl
mov
or
push
jno
stos
xchg
mov
in
addb
leave
add
adc
daa
das
cli
ret
inc
cmpsl
push
rcll
xor
fisubrs
sbb
into
jno
jns
lcall
xchg
cmpsl
or
adc
xchg
js
mov
in
cmpsl
lcall
or
sub
add
call
jo
sub
les
outsb
mov
dec
mov
data16
jb
sub
push
data16
mov
cwtl
leave
popa
fs
call
dec
aad
jae
cmpl
bound
jbe
popf
imul
mov
jg
out
xchg
lds
std
shll
pusha
push
pop
aaa
mov
sbb
inc
and
addr16
xchg
mov
inc
sbb
leave
cmp
mov
and
add
pop
shrb
lods
inc
pusha
js
push
sub
sbb
adc
imul
pop
rorb
in
in
out
fidivs
add
scas
aad
cltd
inc
movsb
data16
sub
lods
ljmp
add
xchg
rorl
fwait
mov
cmp
mov
repz
dec
push
jae
lret
ja
adc
insl
mov
mov
in
insl
jae
out
adc
pop
in
jecxz
sub
pushf
rclb
int
test
fwait
cmp
loop
push
inc
or
dec
popa
outsl
out
call
jmp
outsl
fs
outsl
lret
aas
movl
jne
cwtl
imul
fwait
push
push
xchg
sub
stc
bound
cltd
out
dec
outsb
mov
movsl
push
std
cmpsl
inc
out
xor
add
jns
std
enter
cwtl
xchg
arpl
lahf
ljmp
scas
or
scas
push
inc
adc
xchg
das
rep
scas
loop
inc
outsb
aaa
pop
sbb
mov
iret
es
inc
mov
push
and
test
mov
fsubl
int
sbb
test
jmp
jmp
add
rol
orl
sub
sbb
addr16
pop
pop
dec
mov
mov
pusha
pop
js
dec
xorb
mov
iret
rorb
mov
loopne
out
xchg
les
mov
jle
mov
sahf
ret
mov
lcall
mov
sub
sbb
dec
add
daa
or
xlat
fndisi(8087
cld
fmull
mov
mov
outsl
mov
ret
pop
out
js
addr16
xchg
dec
xorl
mov
xor
lea
pop
sbb
push
lcall
inc
cli
or
addr16
xor
mov
enter
in
addr16
inc
adc
outsb
and
sbb
pop
lods
faddl
xor
add
push
cmp
fsubl
lret
inc
fwait
clc
js
sar
adc
mov
aas
push
xchg
or
mov
push
sbb
jge
xchg
jne
int3
pop
out
xchg
or
std
rcrb
sti
fwait
int3
jle,pt
pop
inc
jle
or
fsubs
mov
lds
cmp
jne
inc
mov
repnz
jl
push
mov
rcrb
jge
mov
jge
or
fsubrl
adc
cmpsl
push
mov
mov
mov
lahf
nop
mov
jb
push
aaa
test
insl
fwait
cmc
ret
stc
repnz
imul
lds
lahf
out
call
push
sahf
fwait
cmc
cld
xor
jae
dec
jbe
shl
or
mov
notl
jo
add
cmp
sbb
cmp
mov
jle
mov
sbb
push
outsl
push
lcall
insb
adcl
xor
je
cmp
aad
call
xor
xor
pop
xor
and
cmp
scas
out
jge
cmp
mov
mov
mov
cwtl
push
fcmovbe
loop
js
push
movsb
add
cld
psubb
and
sbb
sub
fisubs
cmpsb
push
cmc
mov
or
insl
lea
xchg
mov
or
test
fwait
jg
inc
xchg
add
fiaddl
leave
ret
and
hlt
jle
in
sub
mov
mov
push
outsb
je
cmc
das
jne
pop
clc
fxrstor
sbb
in
mov
jp
rorb
dec
xorl
pop
hlt
xor
lock
or
je
pavgb
jle
ret
nop
sbb
push
aas
test
push
test
xchg
cmp
cmp
xorl
test
pop
pop
sti
pop
xchg
dec
call
dec
out
dec
push
xor
loopne
lcall
cld
shrl
mov
cwtl
push
popa
mov
xor
dec
pop
xchg
lods
xchg
and
loope
lahf
testl
cs
pop
and
arpl
daa
aaa
testb
ljmp
popf
pusha
aas
jl
xor
cld
push
mov
not
and
push
loopne
mov
popl
daa
clc
jp
outsl
lock
mov
jg
mov
inc
call
xchg
xor
xchg
mov
mov
je
mov
xor
dec
subl
push
cs
imul
repz
fstps
lret
mov
in
loopne
mov
adc
outsb
mov
xor
scas
jbe
into
inc
push
aam
sti
xchg
out
fisubs
test
or
addr16
push
orl
push
push
adc
jne
inc
stos
out
fsubrl
xchg
cmp
sbb
movsl
mov
sbbb
popa
in
adc
inc
ror
hlt
enter
ret
xchg
fldl
xor
cmp
lret
and
out
addr16
or
mov
mov
shrb
and
loope
cmp
or
mov
add
addr16
sbb
sbb
stc
repz
adc
cmp
mov
sbb
in
andb
ror
stos
movsl
mov
clc
inc
xchg
sbb
sbb
imul
stos
push
and
into
inc
scas
ja
imul
or
jge
sbb
pop
pop
sub
imul
test
enter
loopne
pop
cmc
mov
mov
lret
mov
pushf
dec
leave
fisubl
xor
out
jmp
mov
or
mov
pop
cmc
enter
inc
push
es
mov
scas
dec
stc
ja
dec
scas
pushf
divl
call
pushf
les
inc
mov
push
sub
adc
inc
lods
push
and
mov
aaa
pop
xchg
fstp
xor
jne
sbb
mov
cmp
pop
repz
cmpsl
loope
push
sub
sti
fbld
ret
arpl
aam
int
pop
mov
sub
in
test
and
jnp
aam
scas
push
pop
out
mov
adc
int3
fs
les
adc
cli
mov
sub
sub
out
negl
cmc
mov
push
mov
cmp
or
call
inc
scas
enter
push
iret
pop
mov
int
iret
inc
shr
stc
dec
sbb
fldl
mov
lds
sbb
cs
sub
push
pop
ret
call
test
and
outsb
clc
bnd
loope
aam
push
xchg
mov
std
out
les
sbbl
adc
enter
inc
daa
cld
fwait
repnz
cltd
jmp
aam
or
push
leave
mov
std
int3
ret
fidivrs
gs
pop
aas
adc
test
dec
fisubrs
adc
mov
lret
cmp
andl
adc
adc
iret
std
mov
leave
stc
cmp
xor
mov
add
or
mov
out
insl
in
clc
mov
mov
jmp
adc
mov
test
movl
icebp
rcr
fcmovnu
xchg
cmp
lret
xor
mov
bound
in
in
jns
push
adc
sbb
aas
sub
ljmp
loopne
pop
sbb
repnz
sbbl
loop
movsl
mov
cmp
stos
mov
mov
jns
dec
pop
mov
or
ret
nop
or
jl
cmp
push
cmp
mov
rcll
mov
cmp
popf
mov
jnp
or
adc
loop
xchg
cmpsb
iret
mov
cmp
xorl
popf
ffreep
pop
nop
loope,pn
repnz
mov
sbb
in
dec
xor
push
enter
or
test
cmc
mov
and
sbb
jb
out
pop
xchg
mov
and
inc
enter
xor
lods
cli
popf
dec
insb
inc
or
shlb
inc
pusha
xchg
push
or
mov
pop
jae
sbb
inc
fwait
daa
inc
outsb
push
lock
jae
pop
add
xor
jo
mov
int3
sbb
cmp
cmpsl
push
stos
ret
mov
jp
call
pop
pop
cmp
test
cmc
jp
pop
pop
dec
mov
imul
ret
out
imul
xchg
and
xor
add
iret
inc
mov
xchg
sbb
mov
lods
add
mov
and
jle
cmpl
idivl
sarb
divl
push
into
inc
arpl
insl
stos
adc
lcall
mov
add
fisttps
outsb
or
fisubrs
loopne
imul
je
pop
adcl
lret
pop
aam
arpl
sub
fsub
jge
sub
jae
and
daa
and
jnp
loope
jge
repnz
in
xchg
lahf
insl
sbb
popf
mov
sbb
mov
nop
dec
dec
sub
aad
cltd
cld
movsb
mov
pop
mov
aam
pushf
jecxz
pop
jns
cli
dec
nop
mov
dec
out
mov
mov
mov
out
dec
cmp
sub
ficomps
dec
lret
je
repz
and
push
inc
dec
dec
sbb
ds
bound
sub
and
mov
mov
jle
stos
adc
add
and
pop
mov
mov
fwait
xchg
cmp
or
rcrl
bound
call
cs
or
fimuls
xor
add
pop
inc
jle
mov
add
push
sub
mov
loopne
xchg
jnp
scas
pop
movsl
ret
out
leave
mov
in
dec
shll
sbb
push
ret
iret
gs
movsl
and
cmpsb
xchg
scas
mov
lock
mov
xor
adc
sub
mov
jge
mov
mov
push
pop
inc
repnz
js
in
out
cmpsl
inc
imul
adc
outsb
push
fldt
pop
mov
in
adc
sub
mov
popf
fs
fisttpll
mov
xor
ret
cmp
ja
sbb
jbe
enter
and
jae
dec
mov
div
flds
roll
mov
insl
pop
iret
sub
and
popf
stc
sti
xchg
mov
xchg
rcl
in
and
out
repz
stc
xlat
es
jmp
xchg
mov
mov
inc
jb
in
add
push
inc
mov
sbb
dec
sub
aas
fistl
xchg
test
push
nop
inc
into
or
inc
add
ljmp
addb
ret
lds
cmp
dec
aas
icebp
test
iret
dec
and
dec
sub
mov
lret
int3
nop
fwait
es
pop
mov
cmp
inc
fsts
les
lods
rcr
leave
xor
bound
fsubl
sub
jge
hlt
push
scas
mov
bound
xor
pop
mov
mov
jae
ficomps
mov
sbb
aas
addl
cmp
popa
cld
xchg
and
push
lods
push
mov
call
addb
cmp
or
sub
outsl
in
push
cwtl
out
push
stc
sbb
arpl
das
mov
icebp
push
adc
mov
fistpll
aas
inc
mov
or
add
dec
pop
xor
pop
xor
test
stos
sub
sub
dec
mov
sbb
div
loop
jle
mov
jge
insb
sub
loopne
xor
sub
jne
aas
pop
shlb
fbstp
jno
jbe
inc
testb
dec
xchg
inc
jmp
lret
xchg
add
jmp
mov
pop
mov
ret
cs
pop
mov
sub
xchg
dec
mov
cmp
push
sbbb
cli
dec
cmpsl
pop
xor
inc
jns
ret
cmp
mov
jmp
cmp
and
sbb
sbb
sbb
inc
insb
clc
sbb
arpl
aas
jg
fwait
negl
daa
and
mov
pushf
xchg
mov
mov
imul
cmpsl
cmp
push
shl
push
pusha
push
xchg
in
ret
cmp
jb
in
cltd
jne
dec
hlt
inc
mov
and
cmp
jge
and
jmp
sub
push
ljmp
lcall
inc
or
rorb
jmp
repnz
fisubrl
and
fiadds
in
push
loope
push
inc
arpl
aad
fsubp
inc
push
out
dec
adc
and
push
xor
and
mov
lods
lret
hlt
jp
adc
movsl
xchg
and
ja
aas
shlb
repnz
int
rclb
sbb
pusha
add
pop
dec
sti
pop
dec
inc
scas
xchg
lcall
lret
adc
dec
call
xor
push
loop
ja
push
pop
ds
sub
and
aad
idivl
aad
dec
jae
pop
fists
movaps
iret
sbb
pop
mov
mov
pop
std
int3
std
stos
rcrb
notb
mov
push
out
or
das
adc
push
sbb
out
das
mov
push
jmp
push
pop
xlat
cmc
movl
mov
mov
icebp
dec
dec
aam
sub
mov
ficoms
popl
js
cld
jecxz
jl,pn
push
xchg
mov
push
ret
addr16
rorb
dec
xor
pushf
xlat
test
fisubl
int
iret
xor
testb
mov
pop
fwait
in
gs
mov
aam
pusha
movsb
mov
jmp
rcrl
sub
dec
mov
xlat
scas
int3
add
into
cld
pop
mov
ja
push
dec
and
cs
sbb
adc
aaa
mov
mov
cmp
inc
push
rcrb
rcrl
add
insl
xchg
outsl
pop
pop
push
fs
aam
add
div
test
mov
push
pop
pop
mov
sbb
scas
out
xchg
movsb
inc
js
dec
or
dec
xlat
add
pop
pop
dec
addb
pop
outsb
push
fnstsw
pop
mov
xor
push
xchg
insb
mov
cli
lret
std
cvtdq2ps
mov
push
fdivrs
aaa
mov
hlt
jmp
cmpsb
gs
cmpb
xor
testb
or
and
pop
jae
push
clc
das
push
and
pop
cld
outsb
lret
mov
xorb
inc
sub
adc
imulb
aam
pushf
and
pop
int
into
adc
cmpsl
test
xchg
rcll
sbb
repnz
add
fldcw
cld
scas
xor
jno
xor
mov
jo
xchg
inc
aam
adc
dec
sub
es
mov
jg
sub
sub
xchg
shrl
testl
repz
inc
inc
in
fcoml
cmpsb
jmp
adc
ficompl
pop
pop
xlat
jge
lods
stc
adc
hlt
addr16
fstpl
mov
add
scas
test
jae
test
ficoml
lds
adc
dec
roll
mov
into
jge
das
outsl
enter
mov
das
xor
xor
push
pop
cmp
incb
sub
into
out
nop
mov
mov
jo
mov
outsb
lcall
add
test
movsb
mov
pop
dec
pop
fiaddl
adc
xor
aas
pusha
cs
push
ljmp
stos
test
dec
mov
nop
and
push
pop
rcrb
ss
inc
in
movsl
add
and
jle
jmp
jne
or
imul
and
bound
inc
sbb
xchg
jb
test
scas
and
enter
fcompl
xchg
lds
push
outsl
sub
or
outsl
dec
push
xchg
xchg
push
push
cmp
mov
incl
insb
imul
jnp
icebp
ret
fsubs
push
add
movb
cmp
and
inc
rclb
out
sarl
cmp
or
inc
icebp
mov
fldenv
stos
movsb
jbe
movsl
pusha
mov
lds
cwtl
inc
jne
mul
mov
fdivrs
negb
call
int
dec
jp
pop
and
fnstcw
adc
push
aaa
xor
lods
jb
outsl
jecxz
andps
sub
jp
daa
mov
shlb
xchg
out
cmpsl
test
nop
adcb
aaa
mov
push
push
addr16
scas
lahf
divps
sub
aas
jl
dec
fistps
xchg
sub
movsl
xor
pop
mov
fldl
xchg
fdivrs
add
pop
test
xor
cmpsl
sbb
mov
jge
dec
lock
pop
fdivl
inc
mov
out
pop
loop
cmpsl
push
pop
aam
cld
arpl
nop
sar
add
jg
xlat
push
incl
xchg
addr16
cmp
popa
in
shlb
mov
xor
inc
add
dec
and
sbb
jmp
ret
dec
in
xchg
and
xchg
sub
js
ja
adc
jg
and
mov
push
jecxz
sub
stos
divl
mov
push
orb
dec
adc
push
insb
iret
mov
repz
clc
popa
push
jecxz
jo
adc
mov
enter
js
cltd
mov
movsl
int
or
dec
pop
push
push
xchg
cmp
dec
pop
imul
jg
and
or
push
repnz
cli
sub
sbb
repz
push
xchg
bound
mov
jae
mov
js
popa
loopne
in
lahf
jl
insb
add
cmp
imul
rcl
pop
jo
shrl
sub
xchg
add
loop
and
idivl
sbb
sub
jle
pop
mov
dec
filds
ds
and
xchg
mov
ret
push
out
js
jns
lcall
sub
test
in
and
jb
gs
flds
data16
xchg
mov
fld
fmuls
into
pop
in
call
adc
xor
dec
dec
bound
mov
popa
add
jge
and
mov
arpl
xchg
xchg
add
fcmovnu
pop
imul
lock
fsubrs
push
push
push
inc
push
stos
cmp
push
mov
imull
mov
hlt
leave
cli
je
pusha
rorl
cmp
stos
adc
pop
repnz
push
cmp
nop
jecxz
or
ds
xor
mov
int
cmpsb
xor
push
iret
adc
and
and
xor
or
sbb
insb
mov
pop
pusha
mov
inc
add
xlat
xor
jo
loop
aam
sarl
adc
pop
adc
xchg
push
jne
xchg
ret
mov
pop
into
fbld
mov
daa
or
test
lret
xlat
push
push
xor
or
dec
pushf
adc
xchg
and
mov
sbb
rol
je
mov
fisubs
paddsb
mov
dec
dec
mov
popf
enter
xchg
adc
dec
mov
sar
inc
xchg
outsb
pop
xor
or
pushf
pop
scas
ds
mov
and
adc
push
out
push
jmp
test
scas
dec
mov
mov
pop
or
mov
repz
jg
call
jb
pop
scas
mov
mov
mov
lock
pusha
scas
xor
test
int3
push
mov
das
fwait
sbb
subb
and
mov
stc
dec
sub
fsubrs
mov
jae
inc
movsb
test
dec
push
xor
inc
mov
xor
push
add
in
in
inc
loop
and
or
jno
mov
dec
push
xchg
mov
in
inc
mov
pop
sahf
mov
out
mov
push
ljmp
mov
out
addr16
sub
inc
mov
and
std
fsubrl
add
or
icebp
jbe
cli
jb
adc
inc
leave
cmc
fidivl
cld
push
enter
sti
fisubl
mov
or
pop
add
mov
adc
inc
jmp
je
add
movsb
imul
or
pop
adc
jp
divl
push
in
jo
aas
je
stos
xchg
insl
push
inc
jge
sub
inc
pushl
sbb
call
sbb
inc
pop
mov
js
shrb
out
pop
sub
dec
movsb
mov
shr
loop
sub
and
inc
mov
shlb
ja
sub
rol
sub
shlb
ret
sbb
lods
pusha
add
gs
fsts
mov
sub
mov
cwtl
cwtl
lock
adcb
std
addb
pop
rep
fs
decb
push
aad
popa
xor
xchg
jge
lea
cmp
arpl
push
dec
mov
add
stos
mov
jmp
push
mov
lods
or
movsl
mov
loopne
mov
mov
pushf
int
add
add
cli
repnz
test
das
cli
and
test
repnz
mov
in
in
loop
mov
sarb
mov
pop
pop
insb
add
in
lret
sbb
ja
test
loopne
sub
mov
push
loopne
aas
xchg
mov
inc
int3
xor
jbe
je
inc
daa
imul
scas
mov
xchg
shrl
dec
aad
or
gs
sbb
adc
les
lods
jno
or
incl
test
inc
ja
adc
ja
ss
dec
sub
es
mov
nop
mov
cwtl
inc
xchg
adc
inc
sub
sarb
vmwrite
ja
sbbb
push
inc
cli
jmp
outsl
shll
xor
xor
shlb
es
popa
mov
pop
jnp
sub
cmp
add
mov
sub
xchg
test
sub
and
test
ljmp
outsl
in
js
cwtl
pop
dec
xchg
aam
sub
sub
subl
test
stos
scas
cmp
jb
cld
mov
adc
loope
mov
xchg
jae
ss
cmp
xlat
sub
ds
adc
outsl
cmc
imul
sub
in
mov
cmpsl
push
jae
aam
add
or
or
jle
leave
or
les
insl
xchg
in
cmpsl
mov
cs
in
push
loopne
dec
lret
sbb
dec
sub
movsb
aas
arpl
or
dec
in
aaa
mov
and
lods
mov
cmp
fstenv
cmp
or
popf
movsl
out
test
mov
int
enter
pop
outsl
andb
push
pop
jecxz
dec
jp
lds
shlb
cmp
call
pop
out
fdivrs
in
mov
lods
mov
inc
push
dec
into
insl
loopne
ljmp
jp
adc
xchg
adc
xchg
ja
pop
ss
gs
enter
and
and
sub
pop
pop
pop
mov
push
in
mov
adc
pop
fsts
outsl
icebp
hlt
pop
mov
adc
mov
fisubrl
cs
test
fcoml
push
out
cmp
pop
jae
push
ds
pop
bound
jmp
flds
sti
sbb
insl
lea
push
jb
push
mov
lods
add
cmp
rcrb
call
sarb
mov
dec
movsl
rorl
or
sub
into
dec
movsl
inc
cmp
outsb
imul
or
out
add
fwait
icebp
adc
pusha
es
out
lret
gs
popa
in
mov
xchg
jb
je
and
adc
push
int
sub
sub
push
in
mov
and
and
movsb
clc
jg
xlat
add
mov
lret
cwtl
and
mov
lock
lock
pop
mov
xchg
icebp
cmc
pop
mov
gs
cmp
mov
mov
sbbb
dec
push
push
ror
movsb
call
sbb
ds
adc
pop
sub
cmc
adc
add
push
in
sti
jns
adc
inc
xor
out
xor
cmpl
stos
and
dec
out
dec
pushf
xlat
xchg
daa
pop
push
mov
nop
dec
fcoms
mov
dec
pop
enter
or
lret
aam
mov
jecxz
in
mov
movsl
jmp
divb
add
sbb
push
mov
test
arpl
insb
fcom
push
pop
pusha
in
cmp
leave
mov
mov
mov
adc
mov
repnz
xchg
fs
cld
jne
repnz
push
mov
in
cmpsl
mov
outsb
mov
xor
fstpt
dec
test
dec
mov
jno
pop
jns
fdivr
pop
movsb
fistpl
test
out
dec
ficoms
mov
leave
sbbb
xchg
jl
aad
fdivs
push
lret
inc
shr
jne
pop
int
ljmp
or
jbe
or
adc
inc
sbb
je
cwtl
add
or
xor
xchg
inc
jb
lods
xor
repz
or
fdivs
popa
lahf
int
pop
outsl
add
and
mov
xchg
call
cs
push
xchg
xchg
add
jno
sub
jbe
mov
lds
sub
stos
inc
cmpsb
je
or
stos
arpl
rol
xchg
add
cmp
dec
repz
mov
fisubrs
inc
xchg
push
repz
aam
add
jno
inc
cmp
lcall
loopne
xor
mov
mov
push
test
imul
pop
xor
stos
xor
mov
ss
std
xor
dec
stc
lea
add
push
xor
push
and
inc
scas
jmp
push
pop
cmp
fists
in
sbb
mov
and
test
add
sub
jecxz
jbe
xor
fwait
and
xchg
jle
cmp
add
mov
dec
inc
into
xor
cmpsb
mov
jns
add
fsubs
and
icebp
mov
ss
ror
lea
jmp
loopne
ja
dec
sub
xchg
subl
and
lahf
in
jne
push
or
sbb
bound
dec
daa
andl
out
sub
jmp
cmp
push
loopne
ss
jl
mov
or
mov
pushf
dec
cmpsl
pop
or
pushf
xorl
mov
push
cmpb
cltd
jno
push
inc
sub
es
test
dec
jnp
push
jmp
rclb
xchg
mov
sub
add
dec
mov
movsl
and
sbb
push
dec
pop
rclb
adc
push
call
sbb
cmpsl
fnstenv
data16
les
addl
fmuls
int
jne
xorb
xchg
fstps
clc
sub
ret
push
mov
es
and
inc
cmp
mov
sbb
test
jnp
jl
stos
mov
pop
mov
xor
jnp
push
mov
js
jge
mov
sti
inc
test
sbb
mov
das
mov
cmpsl
subl
enter
xor
mov
jae
cmp
sahf
mov
inc
xor
data16
sti
out
out
sbb
xchg
fmuls
les
adcb
imulb
xor
xor
cmp
inc
orl
mov
in
xchg
lahf
daa
push
lcall
and
pop
push
stc
mov
das
mov
jg
pop
lock
ret
xchg
in
xor
or
daa
loop
rol
mov
xchg
and
fbstp
sahf
hlt
cmpsl
aas
loopne
lret
shlb
in
pop
aaa
mov
ja
mov
dec
call
mov
pop
and
std
sbb
insb
cmp
cmp
sub
enter
flds
jnp
pop
mov
hlt
call
mov
xchg
mov
addl
jg
addb
popa
imul
add
xchg
cwtl
lret
xor
xchg
int
outsl
sbb
sbb
mov
shrl
cmp
in
xchg
sbb
add
sahf
movsl
lcall
add
insb
leave
fs
cmpsl
lcall
mov
pop
insl
or
rorb
in
jns
fnstenv
sbb
call
jmp
push
push
and
pop
inc
inc
adc
fistps
test
aas
ret
js
sub
lea
pop
adc
out
sbb
xor
push
rorb
xchg
sub
add
sbb
or
pop
fnstsw
mov
and
push
fstl
cwtl
stc
and
xor
dec
jns
xor
mov
push
xchg
or
in
inc
test
repnz
mov
movsb
dec
test
lret
cmp
jl
aas
pushf
mov
mov
cli
shr
jl
cmp
pop
and
push
fldt
pop
cltd
cmpsl
outsb
shr
jg
cltd
dec
jp
aam
aas
insb
mov
or
arpl
push
cmpsb
hlt
inc
mov
xor
in
imul
push
stc
or
js
and
aam
push
add
mov
dec
fsubrl
lcall
inc
jle
or
in
invd
and
cld
cmp
daa
and
lock
add
mov
ret
fucomip
gs
fsubr
int3
adcb
inc
incb
add
add
xor
sbb
xchg
js
out
cmp
sub
flds
mov
pushf
sub
insl
js
xchg
and
push
and
ret
mov
mov
ror
mov
push
cli
pop
out
push
movsb
mov
cmp
xor
pop
fstps
mov
cli
test
push
stc
xor
sbb
jb
mov
xchg
mov
or
sub
stos
daa
cmp
inc
movsl
cmovge
xor
xor
sbb
xchg
mov
pushf
rclb
js
iret
negl
jns
push
cmp
xor
scas
repnz
mov
imul
lds
sbb
cmp
dec
rcrl
inc
shll
jno
popa
and
rcrl
push
and
mov
push
sub
cmp
out
mov
add
or
and
leave
xchg
in
es
adc
xor
and
add
inc
hlt
mov
jbe
and
stos
insl
ds
mov
add
sbb
ror
inc
nop
lds
dec
imul
jb
xchg
mov
mov
cltd
scas
fmul
inc
test
insl
ret
insb
std
ljmp
popf
cmp
pop
outsb
outsl
xchg
loop
lods
lods
xchg
push
add
or
aaa
repnz
or
andb
sub
mov
loop
test
sub
jle
cmp
rcll
fisubrl
sub
icebp
xor
xor
stc
inc
dec
xlat
jge
scas
push
stos
in
lar
dec
mov
jne
dec
or
mov
inc
faddl
inc
arpl
push
mov
or
and
push
jg
rol
dec
mov
xlat
lcall
gs
lret
add
mov
mov
push
lods
negb
sub
jl
lret
lods
jno
sub
ds
and
pop
testl
sbb
cmp
bound
lahf
pop
or
scas
xor
cwtl
pusha
leave
mov
and
sbb
sahf
mov
fildl
adc
stc
jge
mov
mov
loopne
mov
loopne
push
rclb
ss
sub
lock
je
pop
sti
xchg
inc
rolb
mov
inc
push
int3
adc
jmp
outsb
je
mov
stos
out
sub
ret
js
or
repz
xor
stc
pop
jl
or
push
jmp
xchg
or
or
sbb
sbb
ja
adc
sbb
hlt
outsl
pop
sti
aas
cmp
mov
inc
inc
cmpsl
jp
mov
daa
sbb
rorb
cmpsb
cmp
insb
dec
stc
mov
aaa
lods
cmp
jg
xor
xchg
sahf
adcb
aas
in
ljmp
add
iret
adc
out
mov
push
lcall
jle
inc
es
test
mov
test
cwtl
and
cwtl
xor
jecxz
lret
jl
test
imul
pusha
or
push
push
es
imul
add
das
inc
mov
xchg
js
mov
inc
cld
pop
and
inc
push
ljmp
aaa
push
and
mov
inc
or
js
sahf
inc
aaa
pop
sbb
rcll
cwtl
inc
es
pop
fildll
sbb
cld
aas
or
jb
inc
mov
data16
clc
lea
sub
pop
push
das
out
xchg
pop
sub
xchg
adc
xchg
or
pop
sahf
inc
in
cwtl
cltd
stos
sbb
sub
insb
dec
cs
loop
xlat
ja
out
add
lret
pop
call
sbb
xchg
mov
inc
mov
cmp
into
and
xor
rol
jp
insl
loop
cmpsb
mov
and
dec
mov
push
mov
mov
shrl
jmp
iret
push
dec
sahf
and
in
mov
scas
xchg
pop
jbe
shlb
or
pop
pop
cmp
push
pop
mov
mov
xor
js
mov
adc
out
imul
adc
inc
sub
clc
ljmp
stc
fwait
push
loop
sahf
loop
movsb
mov
sbb
in
pop
pop
mov
addr16
push
lret
push
mov
aad
jmp
and
mov
pop
ja
outsb
and
pop
and
daa
pop
cli
cmp
inc
mov
cmpl
mov
pop
pop
rclb
jae
loop
sbb
mov
scas
ret
into
jne
lcall
fistpll
sub
mov
or
xchg
out
imul
mov
in
bound
out
jge
cmp
out
popa
sahf
mov
insl
repnz
sahf
mov
rcrl
mov
mov
cmp
out
adc
scas
lods
sti
pop
xchg
sub
and
jmp
ja
pop
sbb
xchg
nop
pop
xlat
cld
adc
mov
jo
iret
daa
scas
movsb
popa
inc
lahf
pop
adc
data16
lds
mov
sahf
push
in
es
sbb
jno
push
push
xchg
ljmp
adc
inc
fdivs
jecxz
insb
sbb
es
dec
mov
mov
rclb
push
into
imul
sub
nop
fwait
cmp
outsl
push
scas
adc
dec
push
dec
call
jp
xchg
rcrb
mov
cmc
jg
mov
sbb
shlb
push
loopne
adc
mov
pop
mov
and
mov
or
in
dec
pop
loopne
cltd
mov
and
ret
ljmp
pop
ss
jae
push
xchg
xor
dec
test
out
lea
inc
push
push
pop
fnstenv
in
inc
dec
inc
mov
ret
inc
jno
jge
sti
leave
mov
aam
pop
out
bswap
pop
jmp
adc
push
in
jmp
add
test
dec
arpl
aad
lods
jl
ret
stos
or
push
js
mov
xor
insl
pop
mov
and
cmp
sti
xchg
movsl
lea
std
sahf
inc
arpl
mov
adc
adcl
sub
xchg
adcl
dec
testl
add
jecxz
fdivr
jno
mov
js
adc
push
shr
cmp
jb
dec
stc
cmp
int3
cmp
cmpsb
mov
clc
dec
sbb
sahf
add
push
aas
pusha
dec
jns
clc
pop
adc
xchg
inc
jbe
in
xchg
stos
jp
dec
adc
jb
mov
mov
testb
xchg
mov
adc
push
sahf
loop
mov
xor
mov
mov
jp
jle,pt
jne
jno
fdivrs
sub
fldt
push
sbb
stc
or
sahf
cli
lcall
lds
mov
mov
mov
push
sub
repnz
rcrl
jge
sub
jbe
inc
loopne
into
out
add
push
xchg
push
stos
push
or
aad
leave
lret
push
adc
cli
int
test
sub
or
int
xchg
mov
out
leave
xchg
daa
js
mov
call
rorb
mov
jmp
test
xor
test
adc
cltd
lock
push
popa
push
mov
push
pusha
pop
mov
test
push
arpl
outsb
xchg
pop
jg
jl
lods
or
outsl
sub
xchg
or
mov
cmp
pop
cmpsb
mov
add
fdivrp
gs
mov
xor
sti
popa
pop
out
subl
push
cld
popa
fprem1
and
mov
cmp
mov
mov
out
lret
fisubrl
iret
les
sub
outsb
or
xchg
andb
sub
shll
fimuls
jae
das
mov
dec
push
xchg
jp
xchg
sbb
cmpsb
lcall
xor
pop
inc
dec
dec
pushf
loop
mov
xor
jmp
sbb
js
sub
pusha
push
inc
push
and
push
mov
adc
addr16
jp
mov
inc
mov
push
je
cmp
or
gs
or
adc
dec
inc
mov
jl
sbb
sahf
inc
push
mov
push
aam
mov
aad
pop
fnstsw
or
cmp
pop
fs
pop
dec
xchg
jp
or
xor
not
xchg
ret
dec
cld
faddp
xor
adc
ja
dec
and
mov
shrl
insl
dec
sub
imul
mov
cmp
cmp
add
dec
sub
lret
repz
addr16
lret
addr16
fdivs
popa
adc
jp
mov
out
mov
xor
mov
nop
and
sbb
scas
imul
cmp
mov
inc
push
xchg
or
adc
ljmp
loopne
in
mov
lock
lods
ficomps
push
pop
dec
push
cltd
fs
cmpl
cli
cmc
pop
fwait
sub
imul
sarl
ja
add
mov
je
xchg
inc
into
rorl
dec
jp
mov
andl
add
dec
outsb
jbe
fwait
out
lcallw
inc
mov
ficomps
imul
pop
sub
inc
std
mov
js
jl
jne
rorl
ss
loope
out
sbb
cmpsb
fiaddl
dec
nop
mov
mov
ljmp
jle
dec
xchg
lods
adc
rcl
leave
push
cmp
imul
cmp
xor
push
inc
mov
cmc
std
sahf
or
movsb
jle
test
testb
scas
pop
sbb
jl
mov
lret
cs
sbb
movsb
pop
test
pushf
fadds
jl
pop
pop
pop
push
loope
push
pop
jo
xchg
stos
xor
xchg
out
dec
xchg
repnz
xchg
jo
push
pop
or
jbe
pop
popa
cmp
jb
adc
andl
movaps
aad
push
xor
cmp
fs
fs
scas
push
sub
inc
fdivrl
repnz
mov
clc
mov
jp
push
fsubrp
cmp
imul
push
mov
inc
lock
or
outsl
nop
xchg
cmp
outsl
lahf
and
stos
xor
fdivrs
inc
mov
testl
les
or
pop
pusha
inc
mov
mov
jge
cltd
jnp
push
cmp
je
and
mov
and
andl
fisttps
cmpsb
lods
add
ja
loopne
fisubrs
push
dec
push
xor
sbb
loopne
jne
pop
dec
ret
xchg
mov
lock
sbb
ss
pusha
jp
dec
mov
insb
sub
mov
or
out
lods
dec
mov
outsl
sbb
fmull
popa
jge
jp
loop
std
or
mov
leave
icebp
dec
or
mov
stos
cmp
cmpsb
lcall
leave
rcl
ss
push
inc
lea
mov
and
je,pt
inc
repz
inc
daa
shrb
xor
dec
dec
push
cmpl
std
push
mov
jb
xor
repnz
outsl
xor
imul
xchg
call
in
jle
das
into
pop
sub
hlt
jmp
pop
add
push
cmpsb
cmp
out
inc
add
jne
sub
sub
es
ret
je
leave
mov
dec
arpl
icebp
or
psubsw
pop
mov
sti
bound
fwait
inc
xor
lods
fbld
add
cltd
pop
mov
subb
jnp
or
imul
mov
stos
or
cmp
imul
sub
cmp
xor
cmpb
clc
in
scas
mov
sub
mov
arpl
lcall
xor
adc
dec
push
icebp
mov
int3
stos
mov
mov
mov
loop,pn
xor
aam
ja
pop
mov
std
mov
cli
fxch
repz
jnp
mov
bswap
add
xorb
jnp
push
sarl
ljmp
xor
cmp
add
mov
add
jbe
pop
bound
mov
scas
xchg
xchg
mov
cmp
ja
cwtl
in
xor
fsubrs
push
jg
inc
xchg
ja
push
inc
sub
mov
or
push
dec
getsec
std
inc
or
ljmp
cltd
cs
mov
loop
scas
or
cmp
rcrl
sbb
hlt
ds
inc
xchg
leave
dec
divb
xor
sbbl
push
inc
in
jecxz
sbbb
mov
mov
sub
adc
inc
test
scas
filds
int3
dec
sahf
fimull
mov
jb
xchg
adc
push
enter
popa
or
pop
push
mov
icebp
pop
lcall
out
lcall
pop
cli
xchg
movsb
and
sbb
pop
jne
mov
fbld
add
jnp
addr16
rolb
sub
cmp
cmp
xor
cmc
inc
pushf
movsl
stc
add
cmp
inc
sub
mov
or
inc
xchg
xor
push
aaa
shl
sbb
pop
or
jnp
push
mov
sub
mov
mov
out
cli
jb
xor
pop
mov
hlt
cmpb
pop
stc
sub
add
in
faddp
leave
xchg
cli
add
mov
enter
lods
pop
sub
or
xchg
push
mov
mov
dec
lahf
js
jbe
lret
xchg
mov
enter
jbe
add
sub
sti
jp
rcll
pop
pop
stos
das
xchg
mov
imul
adc
adc
and
mov
ret
pop
push
dec
push
cmc
pushf
not
stc
add
and
cmpsb
push
scas
lods
dec
fwait
sbbl
xor
es
or
pop
lcall
lds
inc
fadd
add
fs
in
jne
movsb
aam
sbb
cmp
mov
gs
cld
sbb
sub
cmc
fstpt
sub
sub
or
rep
mov
into
scas
inc
push
out
pop
shrb
lods
clc
xchg
nop
xchg
data16
aam
insl
test
push
mov
sub
in
mov
sub
iret
mov
adc
in
std
imul
ds
leave
popa
aam
pop
inc
pop
stc
mov
sbb
test
mov
sub
cmp
fistps
jnp
and
dec
mov
mov
jecxz
mov
adc
into
rcll
das
or
stos
fsubrp
stos
push
adc
xchg
stos
cli
cmp
cmp
inc
mov
jbe
and
inc
and
movsb
dec
into
rcl
adc
add
push
and
jnp
clc
fs
jb
cmc
iret
cmp
stc
push
xchg
pop
or
jle
fiaddl
mov
ljmp
ret
pusha
push
cmp
fsubl
pop
jp
fsubrp
aad
dec
sbb
jb
adc
or
repz
call
stc
push
mov
movl
jno
adc
in
in
aaa
pop
daa
movsl
mov
push
inc
cmp
data16
imul
je
xchg
jb
pop
mov
push
add
xchg
lret
or
push
and
iret
jns
inc
cwtl
cmp
push
leave
or
inc
sub
adc
add
leave
imulb
cmp
cs
mov
inc
lcall
mov
cwtl
pop
fs
mov
sub
aaa
inc
jg
jne
hlt
test
ror
sahf
cli
mov
fcompl
jl
lock
lods
out
push
sahf
cmp
cmp
ret
ja
shrl
addr16
arpl
cmpsb
fstl
push
aas
adc
test
test
mov
imul
movsl
popf
mov
xchg
mov
jp
inc
push
push
mov
and
dec
jno
jbe
xchg
push
rclb
dec
pop
xor
xchg
mov
adc
cmpsb
inc
mov
stos
jg
add
cmp
inc
leave
jmp
outsb
mov
xchg
mov
lods
push
cmp
xor
push
inc
sub
fstpt
inc
push
es
hlt
shl
clc
call
mov
pop
or
fidivs
sub
std
pop
rorb
mov
sbb
sub
mov
inc
push
xchg
push
xor
inc
mov
stc
xor
or
jmp
push
adc
aaa
xor
jnp
hlt
out
cmp
mov
push
adc
xchg
jbe
cs
inc
ficompl
pop
xor
cmpsl
and
or
jns
mov
sbb
ljmp
dec
or
fcoml
imul
xor
and
sbb
adc
and
cmc
out
int
pop
mov
sahf
jne
rcll
inc
clc
sar
add
push
jmp
lret
pusha
das
pop
testb
mov
and
popf
pop
lock
jg
mov
sub
jmp
pop
in
call
lahf
leave
sbb
xchg
jno
subb
lods
xor
mov
movb
cmc
lret
loopne
push
xchg
movsl
adc
push
mov
iret
jo
loope
gs
jmp
setno
arpl
or
es
cmp
cli
outsb
popa
jl
inc
mov
imul
test
imul
lahf
loop
jle
leave
pop
sarl
push
cli
cltd
xor
sub
sub
out
jns
mov
push
push
or
jle
sub
xchg
sbb
arpl
adc
jbe
nop
or
int3
js
das
push
in
pop
arpl
into
pop
push
push
xchg
mov
mov
orl
enter
cmp
stos
cmp
fiadds
xchg
push
dec
cmp
push
cwtl
cmpsb
push
sbb
and
inc
shrb
ds
sbb
pop
lea
test
jno
rclb
mov
xor
or
xlat
in
cmp
mov
pop
ss
mov
pushl
cmpsl
shlb
lea
aam
in
and
or
js
sahf
push
sbb
xchg
or
xchg
notb
xchg
adc
fadds
ret
movsb
mov
cmp
and
or
bound
cmpsb
xchg
sbb
sbb
pop
icebp
pusha
inc
pusha
mov
incl
pop
mov
cmp
imul
inc
adc
hlt
add
and
add
and
adc
jmp
dec
je
fcom
dec
cmp
and
xorb
ror
mov
mov
adc
pop
inc
and
or
shr
xchg
int3
mov
testl
test
vmovups
xchg
pop
and
xorl
mov
and
cmp
and
adc
mov
mov
test
dec
mov
sbb
add
jbe
in
test
xchg
lods
sbb
ljmp
scas
test
mov
jae
outsl
lahf
push
adc
ret
lret
lock
das
xchg
in
inc
mov
add
fstpt
imul
jle
adc
shlb
sbb
cmp
xor
inc
insl
xchg
in
ret
and
or
mov
in
repz
adc
jmp
stc
addr16
roll
fiadds
sbb
repnz
dec
clc
insl
les
adc
aas
leave
insb
mov
jo
adcb
les
mov
stc
out
mov
dec
or
dec
and
data16
roll
pop
btr
jae
xchg
xchg
adc
cli
call
inc
ljmp
scas
imul
dec
lret
mov
lret
mov
mov
daa
mov
jge
repz
out
mov
aaa
lods
xor
and
sub
testb
cmp
fs
ljmp
stos
loopne
sbbb
ret
mov
addr16
in
xchg
mov
mov
rclb
push
sub
mov
xor
fldcw
push
repz
or
notb
pusha
int3
push
push
in
jnp
test
orps
xchg
lahf
add
pop
movsb
adc
pusha
std
stos
push
test
scas
mul
sbb
je
cmp
lock
and
jo
insl
jmp
xchg
test
mov
jp
xor
popa
sbb
idivl
sbb
add
insb
loopne
fnsave
xor
pop
pop
push
mov
je
inc
push
repnz
data16
fsincos
and
rcl
aam
out
jge
sbb
or
jae
push
out
inc
and
mov
adc
leave
sbb
pop
sub
mov
movsl
loope
cmp
ss
mov
imul
fucomp
xor
sbb
sbb
push
pop
cmpsb
mov
push
mov
add
test
mov
inc
and
cmp
mov
jg
call
xchg
push
add
leave
xchg
pushf
test
jp
and
or
shrl
je
dec
and
cmp
push
ret
dec
fisubs
xchg
adc
arpl
jne
cmc
in
mov
jbe
dec
sub
jl
adc
xor
cmp
mov
es
mov
out
xchg
adc
push
mov
enter
mov
push
lcall
pextrw
mov
aad
push
inc
xor
jo
mov
lods
mov
out
xchg
mov
je
movsl
dec
xor
pop
int
lods
xor
dec
fwait
arpl
dec
push
mov
sbb
inc
sub
mov
mov
loopne
inc
mov
and
inc
xchg
pop
or
ret
jns
add
mov
lods
out
cmp
or
mov
lock
xor
aam
xchg
popf
jge
mov
add
pop
test
adc
jbe
into
jno
ja
push
movsb
jbe
loopne
push
mov
cli
push
inc
fldcw
jb
mov
inc
push
pushf
mov
dec
lds
dec
xchg
mov
dec
or
inc
repz
pushf
cmp
xor
scas
icebp
or
pop
mov
mov
mov
adc
add
into
adc
cmp
dec
xor
inc
dec
in
dec
mov
push
mov
out
jne
and
cltd
icebp
cmp
xor
orb
inc
ret
test
addr16
aaa
and
inc
jne
lea
sbb
and
int
cmpb
xchg
jp
icebp
cltd
pop
nop
xor
push
mov
mov
push
inc
inc
xchg
sbb
testb
inc
mov
in
popf
test
outsb
pop
jg
inc
out
push
out
lea
ljmp
xor
dec
mov
je
mov
xchg
pop
lret
hlt
or
and
insb
adc
lea
mov
popa
int
mov
adc
mov
xchg
dec
inc
out
and
mov
xchg
xor
test
xor
scas
mov
cmc
push
lret
mov
popa
sbb
pop
shrb
dec
push
adc
dec
adc
xchg
es
push
sahf
push
xchg
inc
xchg
ret
pop
push
nop
mov
arpl
in
dec
es
decb
inc
and
xor
mov
rcrl
push
jmp
or
fstps
pushf
lcall
push
push
pop
and
dec
mov
or
enter
jne
outsb
xlat
mov
addb
push
sub
pop
sub
inc
mov
clc
movsl
cmpsb
stc
jae
and
mov
xchg
cmp
roll
fiadds
mov
mov
pop
les
dec
jnp
shll
dec
ss
data16
cmp
add
notb
pop
popa
fstps
clc
stos
popa
inc
test
int3
cmp
aas
mov
loopne
lret
sahf
es
repz
cmp
cwtl
mov
inc
inc
jbe
lods
push
rclb
inc
jae
mov
daa
cmp
sub
sub
push
shll
add
push
push
add
add
lcall
xchg
inc
gs
out
add
test
mov
sbb
or
push
insl
jns
shr
ja
xchg
out
aaa
dec
loopne
and
inc
leave
or
mov
sub
clc
daa
jge
aaa
pop
dec
ja
push
insb
int
ljmp
dec
push
dec
imul
test
pop
pushf
mov
jno
cmpsb
add
or
sub
pushl
insb
inc
hlt
inc
fldt
loope
push
shl
imul
lahf
popf
ja
in
popa
sub
mov
imul
repz
push
mov
cli
sbb
nop
outsl
add
fwait
mov
sti
pop
movsl
sbb
jb
and
dec
mov
movsb
outsl
fwait
adc
mov
dec
push
les
or
js
xchg
pop
xor
push
jmp
jae
xchg
sbb
sub
pop
dec
xchg
and
call
jl
and
sbb
or
lock
int3
aad
punpckhdq
and
int
stc
cmp
test
jno
je
aad
xlat
cmp
fstps
mov
sub
scas
fucom
js
mov
incb
std
lret
fildl
or
std
dec
push
adc
add
jae
ljmp
sbb
test
addr16
mov
or
adc
lret
inc
sub
xor
mov
jmp
adc
jno
loop
dec
lret
jecxz
les
mov
aas
pop
movsl
arpl
imul
stos
cmp
adc
into
pop
out
sbb
jnp
cmp
lods
inc
push
movb
cmp
call
stos
and
into
mov
out
cmp
or
mov
or
xchg
pop
mov
dec
sub
filds
js
push
dec
out
test
xchg
pusha
mov
pop
fcoml
and
hlt
stc
mov
subl
mov
in
mov
cmp
out
mov
push
in
mov
xor
sub
sahf
mov
loope
dec
mov
add
sub
lret
lods
xchg
hlt
imul
outsb
mov
jl
mov
inc
mov
sbb
fisubrl
cmp
dec
mov
cmc
fcomip
mov
cli
out
cmp
sub
cmc
jl
lock
imul
push
xchg
add
shrl
shll
mov
addl
cmpl
or
pop
dec
sbb
jg
popf
clc
jnp
fmul
imul
call
dec
int3
sub
adc
xchg
xor
in
test
mov
cmp
scas
aas
push
inc
xor
xlat
movsl
mov
nop
in
sub
incb
or
and
dec
mov
sbb
repnz
js
mov
scas
add
cmp
add
fisttps
cmpsl
pusha
jecxz
lock
popf
mov
in
jns
mov
cli
ret
and
xchg
imul
mov
int
inc
jmp
into
mov
xlat
fadds
mov
lret
push
sub
push
xchg
je
or
adc
cmp
adc
jle
adc
lods
mov
ret
add
pop
aam
mov
leave
mov
imul
mov
scas
inc
mov
xor
xor
mov
push
rorb
movsb
jnp
mov
ret
in
jmp
ja
cli
xchg
sbb
mov
arpl
clc
ds
inc
adc
and
aas
std
fsubrs
adc
xchg
scas
repnz
movsb
fstps
and
sub
jne
pop
pushf
or
jg
adc
scas
pop
jnp
sub
jb,pt
ret
aam
mov
addr16
daa
mov
sbbb
sti
inc
add
mov
jle
cs
cmp
jbe
mov
imul
mov
je
iret
and
test
inc
dec
jae
test
in
mov
addr16
outsb
mov
cmp
nop
inc
stc
lds
cmp
mov
outsb
adc
cmp
jg
or
mov
out
sbb
dec
pop
int
push
out
mov
xchg
or
pop
sbb
push
mov
je
pusha
inc
mov
dec
xor
jnp
cld
mov
mov
mov
mov
insl
xor
sbb
repnz
imul
cmp
imul
sahf
pop
fmull
mov
aaa
clc
cmp
int
cs
cmp
xchg
fcomi
jo
pop
sbb
push
stos
or
pop
sub
cld
shrd
movsb
js
xchg
pop
mov
add
push
adc
loopne
fs
cwtl
or
push
xchg
fsubs
shr
inc
lahf
pop
mov
sub
fdivp
adc
or
pusha
shlb
insb
ss
outsb
mov
mov
std
pop
xchg
sbb
adc
sbb
pop
mov
es
icebp
scas
fstps
clc
jg
sbb
adc
inc
sub
inc
sbb
and
stc
stos
sti
jg
mov
nop
out
repnz
mov
lock
pop
sub
repz
cmpb
aas
nop
xor
pop
xorl
test
xor
ret
cwtl
into
and
sbb
jmp
mov
and
js
and
jno
in
repnz
or
dec
int
ss
xor
jle
std
mov
test
push
jle
sbb
mov
jb
lock
dec
or
pop
xchg
pop
push
and
lock
adc
int3
sub
ret
mov
adc
enter
push
inc
sub
imul
shl
lods
inc
mov
jle
xor
loope
pop
inc
rclb
jb
mov
jle
loopne
aaa
mov
test
in
mov
inc
cld
add
xor
mov
mov
mov
mov
pop
push
popa
addl
mov
sub
fisubs
into
sbb
add
das
pop
xchg
pop
cs
lret
jl
addr16
sti
xchg
mov
jmp
std
add
xor
jle
dec
and
pop
xchg
cwtl
inc
mov
aas
cld
dec
cmc
xchg
and
rcrl
cld
insl
dec
divl
dec
xor
inc
add
js
jp
mov
lds
jb
insb
push
and
lahf
mov
hlt
cmpsb
push
mov
push
and
ret
lea
pop
ljmp
addr16
pop
test
popa
cbtw
in
and
mov
xchg
jle
stos
mov
adc
lret
xor
or
add
pop
mov
aas
inc
mov
dec
pop
jl
mov
es
mov
jbe
daa
and
add
xchg
mov
and
sbb
mov
jnp
aas
test
sub
dec
mov
mov
lea
sub
or
fistps
push
bound
xchg
sbbb
add
out
jg
cmp
fwait
in
xor
mov
mov
jae
jb
xchg
add
sub
push
adc
push
mov
jecxz
adc
rcrl
loop
pop
add
outsb
stos
movsl
and
dec
jg
xor
xor
mov
mov
cmp
call
push
int3
pop
fs
fsts
out
pushf
repz
jl
jo
leave
lods
pop
dec
push
sub
or
push
rorl
mov
adc
stos
push
aam
mov
push
xor
pop
inc
das
push
lahf
fwait
sbb
xchg
mov
pop
pop
movsb
movsb
inc
xchg
sbb
cld
cmpsl
add
jo
les
inc
and
test
mov
mov
arpl
les
incb
jecxz
mov
loopne
push
lret
xchg
aaa
mov
test
cmc
jno
and
mov
push
push
sbb
inc
sub
in
mov
jp
or
jbe
push
scas
or
leave
and
aam
jmp
xchg
js
cld
das
push
adc
dec
jno
pop
and
pop
cld
adc
in
sub
mov
rorb
cmpsb
jg
int3
mov
jo
aad
jb
dec
dec
popf
xchg
pop
dec
or
test
loope
dec
sub
xchg
inc
cli
and
jecxz
daa
sti
cmpl
sub
dec
gs
mov
jge
jb
aaa
or
xor
ss
inc
mov
hlt
mov
xchg
out
xor
scas
aas
aaa
mov
ret
jp
xchg
scas
or
fcomip
push
push
adc
push
movsb
ljmp
add
jge
in
mov
xor
pop
mov
mov
mov
add
xchg
pop
ds
insl
or
ficompl
xchg
and
roll
in
add
xchg
clc
pushl
mov
lret
in
jecxz
clc
xchg
lods
arpl
xchg
and
cmpb
push
adc
push
jl
and
aam
inc
add
sub
and
push
fs
sub
leave
or
out
fs
lea
mov
pop
cmp
push
fimuls
and
add
or
das
or
mov
in
insl
adc
js,pt
mov
fsubrl
enter
adc
imul
mov
xchg
mov
icebp
fs
and
insl
imul
cmp
ja
xor
mov
xor
mov
sbbl
lods
in
push
mov
repnz
and
or
fmul
popa
roll
xor
mov
lds
mov
leave
pop
and
nop
scas
movsl
shrb
push
and
ror
dec
dec
or
mov
add
andl
fistl
ss
and
and
aam
insb
scas
fiadds
add
ret
call
or
pop
insb
in
test
and
mov
sbb
cs
pop
adc
sarl
sahf
scas
xchg
test
sbb
pop
sbb
popa
test
mov
fidivl
xchg
stc
test
je
in
rorb
push
into
sbb
dec
lret
mov
sub
jns
cmp
mov
jecxz
idivb
mov
fsubrl
pop
stc
fistpll
cmp
nopl
add
or
inc
stos
sbb
or
mov
insb
mov
in
inc
aaa
push
rcrb
lahf
cmpsb
aas
mov
adc
mov
push
cli
int
jne
inc
jns
add
sbb
enter
mov
dec
mov
lds
mov
xchg
add
out
aam
push
push
cmp
xchg
push
or
rolb
lahf
jns
nop
adc
stos
dec
or
dec
iret
call
icebp
dec
inc
popf
pop
jno
or
ret
int
push
pop
pop
push
mov
negb
inc
pop
shrl
jl
jecxz
popa
icebp
xchg
xor
cmp
mov
mov
inc
and
movsb
inc
pop
mov
and
sahf
pop
pushl
sbb
cmp
les
out
dec
sub
jo
push
test
or
jmp
dec
inc
jo
mov
xor
std
mov
mov
mov
outsl
ds
stos
cli
fs
out
sub
mov
and
xor
push
test
repnz
mov
leave
jp
call
push
pop
jmp
outsb
dec
dec
loop
dec
test
cltd
imul
outsl
push
jle
inc
sub
adc
fwait
ja
push
mov
clc
into
mov
dec
lret
jp
mov
cmp
out
push
nop
mov
lcall
jp
mov
add
jle
xor
int
addr16
sbb
jo
fcoml
pop
dec
sub
xor
cmc
pop
cmp
cmp
into
lods
pop
roll
push
int
lahf
pop
xchg
les
mov
push
mov
jns
sahf
mov
push
movsb
mov
adc
jns
add
inc
outsb
test
lods
lcall
sbb
mov
cmpsl
mov
enter
addr16
in
mov
cmpsb
inc
or
push
rorl
dec
inc
scas
jl
mov
inc
and
in
push
jg
icebp
popa
mov
jnp
push
fsubrs
sbb
test
mov
lcall
shll
or
push
xchg
dec
loopne
xor
add
jmp
jle
pop
mov
inc
push
mov
subl
lock
stc
das
adc
gs
icebp
test
xor
jae
aam
lahf
ret
and
jmp
sub
mov
idiv
cltd
mov
mov
or
mov
and
enter
jne
loope
cmp
mov
in
or
jg
lock
cltd
pop
and
lock
ret
jmp
in
or
mov
jmp
in
cli
mov
rol
dec
ret
mov
scas
mov
clc
das
iret
jae
mov
jge
jge
mov
jnp
sbb
addr16
mov
adc
in
jae
mov
fmull
xlat
scas
jecxz
mov
dec
adc
loopne
scas
gs
xlat
jno
in
mov
mov
mov
aad
sahf
inc
lret
sbb
sub
outsl
push
xchg
subb
sbb
pushf
loop
lea
inc
adc
dec
popl
lahf
push
sarb
test
bound
xchg
in
lret
dec
out
push
sbb
ds
rcrb
test
adc
pop
add
or
adc
mov
shrl
popa
jno
xor
int3
shrl
mov
adc
imul
and
jae
jb
out
sub
std
add
sbb
and
clc
xor
adc
movsl
dec
test
dec
pushf
dec
inc
jp
aaa
pop
dec
or
pushf
outsl
shrl
mov
daa
inc
test
ds
cmp
lret
dec
sub
test
es
xor
push
lcall
jbe
adc
mov
stos
adc
lret
inc
and
pusha
push
mov
mov
arpl
mov
mov
fnsave
stos
dec
out
adc
mov
in
lods
sarb
mov
je
adc
jbe
sbb
xlat
pop
mov
mov
dec
sahf
add
idivb
xchg
stos
cmp
mov
ficoml
or
daa
lock
lret
aad
cmp
xor
ret
inc
mov
sti
lahf
dec
adc
inc
fistpl
adc
push
mov
jp
inc
lods
mov
rolb
push
dec
and
repz
or
in
gs
ret
adc
incb
jge
push
xchg
sub
dec
mul
cwtl
sbb
into
mov
adc
inc
mov
cmc
stc
ss
sub
rorl
add
loop
decb
sub
xor
gs
stos
mov
xorb
lcall
xor
lock
cmp
call
dec
cmc
mov
add
lret
cmp
xor
clc
cmp
out
or
gs
cld
enter
aam
inc
roll
icebp
sub
lds
inc
jo
inc
sbb
lcall
add
add
test
pushf
adc
mov
xor
add
adc
or
push
mov
dec
cld
xor
push
fwait
popf
es
rcl
or
daa
repnz
decb
insl
arpl
or
leave
push
push
cs
call
jns
jb
jl
lcall
add
xchg
movsb
call
xor
xlat
xchg
sysexit
or
stos
jns
push
loope
and
adc
rcl
push
iret
push
das
pop
adc
mov
lea
out
add
xchg
jne
in
pop
mov
mov
add
sub
mov
cmc
stos
xchg
call
pop
adc
and
aas
or
adcb
sbb
fs
sti
jmp
jge
adc
mov
pop
pop
dec
mov
mov
mov
sub
addr16
out
cmp
scas
fsts
xor
xchg
and
lock
mov
adc
fnsave
xor
rol
or
xor
adc
ds
lret
mov
xor
aas
xlat
xor
xchg
sbb
stos
repnz
dec
lcall
pop
sbb
and
mov
enter
xchg
incl
add
lcall
test
ja
sbbl
cmpsb
stc
repnz
fsubr
cwtl
inc
xor
push
clc
in
sar
add
out
jmp
cli
xchg
sub
cs
sbb
dec
pop
js
mov
push
test
jns
aas
lods
sbb
push
mov
jb
loop
push
dec
jno
addr16
mov
cwtl
movl
enter
jnp
pushl
dec
repnz
sti
push
or
xor
and
aaa
popf
aas
and
inc
pop
lock
pushf
and
push
jge
adc
cs
push
xchg
cmp
adc
sbb
cmp
lea
jns
sub
fwait
xchg
test
pop
xor
sub
jne
cld
pop
cmp
out
imul
loop
in
rolb
mov
push
imul
inc
roll
test
xchg
mov
jae
clc
jmp
inc
pop
test
cmp
sbb
aam
lds
jns
std
mov
aas
push
sub
lcall
and
es
mov
int
pop
fidivl
push
dec
pop
lea
xor
xchg
test
or
xchg
add
push
lds
into
je
loopne
xchg
out
ret
jo
imul
fsubs
sub
jae
enter
scas
or
dec
push
mov
mov
popa
mov
lods
mov
in
mov
ror
inc
dec
adc
pusha
aas
or
dec
xlat
push
or
fnsave
mov
lret
mov
sub
fsubl
aaa
pop
dec
push
test
mov
sahf
mov
xchg
or
cmp
adc
sub
xchg
adc
cmpl
mov
dec
jecxz
movsl
lods
push
cs
imul
pop
push
mov
mov
xchg
imul
popa
arpl
les
xor
icebp
and
xor
jmp
cli
in
cmp
test
pop
mov
js
sub
pusha
mov
lcall
mov
pop
ljmp
int3
aaa
cmpsl
sbb
into
in
test
xchg
jbe
cmp
add
pop
xchg
adc
lods
inc
pop
sub
push
popl
push
mov
pop
sub
sub
in
das
push
dec
aam
aas
cs
push
push
dec
ja
cmpsl
aad
push
mov
sti
mov
pop
mov
lock
mov
rcll
mov
imul
popf
mov
mov
je
jp
shrb
sbb
dec
push
pop
mov
shlb
xchg
adc
jmp
ret
dec
push
in
mov
cwtl
mov
leave
add
jecxz
lret
adc
pop
loop
cmpsl
popa
data16
movsb
mov
jo
fcomi
cli
cld
mov
inc
sti
add
jo
mov
lahf
bound
mov
lock
adc
je
sbbl
fwait
cltd
cmp
or
int3
cmp
inc
sub
add
ss
gs
daa
mov
mov
cltd
mov
in
inc
xor
push
cli
lds
lea
jns
cli
mov
loope
test
jmp
inc
scas
sub
loop
mov
sbb
jl
movsl
cld
shll
fistl
inc
ja
test
ljmp
and
out
mov
cmp
xor
imul
rclb
mov
sbb
sbb
sbb
divb
test
mov
inc
jbe
pop
and
scas
scas
stos
fisttps
push
jne
jle
mov
insl
pop
dec
iret
add
dec
inc
aas
aam
insl
subl
data16
push
jp
sub
sti
mov
xchg
mov
mov
adc
fldenv
pushf
xor
xlat
daa
stos
addr16
jne
loop
loop
repnz
ljmp
jo
jns
mov
mov
sub
cmc
sub
mov
flds
inc
mov
or
adc
aaa
ss
jae
mov
rcrb
scas
adc
jle
xor
cmpsl
sub
push
je
xchg
and
mov
cmp
push
push
cs
push
lahf
inc
test
dec
cmp
inc
ja
das
test
movsb
dec
lcall
and
dec
mov
leave
fcomp
cmp
scas
rolb
dec
xor
pusha
mov
lret
or
out
adc
lea
pminub
jg
push
mov
rolb
jo
pop
insb
and
inc
mov
pop
cmpsl
xchg
mov
loop
nop
sub
dec
mov
sub
sbb
fmul
mov
push
inc
rorl
sub
jnp
popa
sub
adc
cmp
fyl2xp1
icebp
addps
shll
adc
inc
mov
aaa
xor
std
cltd
xchg
orb
mov
xchg
sub
inc
int
insb
ja
ret
dec
mov
or
mov
dec
jge
shl
sub
test
adc
xchg
rcll
cwtl
rorl
jl
mov
out
movsb
adc
sbb
fisubl
or
clc
mov
insb
aad
cmp
std
fsubrl
scas
cmpsl
xchg
out
in
sahf
sbb
mov
pop
sub
push
fs
adc
in
aam
std
aam
or
jb
cmp
cwtl
pop
test
and
out
xchg
lods
rcrl
adc
addb
loope
aas
sbb
cwtl
mov
jbe
inc
cltd
in
sbb
xor
rol
inc
jl
aas
cwtl
mov
ljmp
push
jle
shll
call
push
mov
cmp
dec
xchg
mov
dec
call
sub
adc
sbb
adc
aas
jns
and
jg
imul
xor
pop
ret
mov
cmpsb
lock
pop
notb
mov
mov
pop
adc
stos
or
mov
inc
mov
push
push
rorl
mov
cwtl
inc
mov
out
adc
sti
adc
mov
andl
jmp
fs
lods
push
jg
scas
mov
pop
and
fdivrl
cmp
or
push
roll
sar
jnp
xchg
jbe
pop
pop
ret
dec
inc
in
sbb
stc
or
inc
add
imul
push
jno
push
pushf
pmaxsw
cmp
cwtl
nop
lds
int
jo
sub
jae
stc
mov
pushf
std
sub
das
ret
repnz
mov
and
pop
add
inc
jbe
push
popf
imul
mov
dec
or
mov
iret
xorb
shrb
ja
add
mov
and
js
lods
lods
je
jnp
out
js
aaa
xchg
pusha
arpl
sbb
and
rcll
or
jge
and
pop
push
inc
pop
push
xor
inc
aad
ret
ljmp
cwtl
dec
jle
ret
loopne
dec
push
lea
pop
adc
pop
sahf
sub
fs
popa
rcr
and
popf
or
push
popa
mov
inc
pop
xchg
dec
gs
sbb
in
hlt
sbb
mov
cwtl
cld
pop
imul
pusha
adcb
or
out
out
sti
pop
adc
mov
adc
mov
fyl2x
mov
fadd
rcrl
or
icebp
stos
push
lret
push
mov
sar
cmp
outsl
stc
or
aas
jmp
nop
pop
loop
js
cvtdq2ps
leave
jne
nop
pusha
dec
jae
call
jp
sub
fbstp
cmp
xchg
xchg
xlat
pop
adcb
mov
insb
in
shrb
sub
ja
xor
jg
pop
dec
cmp
mov
xchg
cs
or
fwait
lds
dec
in
lds
inc
mov
hlt
push
mov
out
inc
ds
push
mov
push
or
jb
xor
aaa
adc
in
jmp
and
and
ffree
pop
jae
sub
xchg
loope
mov
inc
mov
sub
xchg
pop
subl
jmp
scas
mov
flds
addr16
mov
lods
cmc
mov
and
ds
pop
insl
aad
stos
sub
sbb
push
es
aad
insl
in
xchg
scas
push
aas
add
adc
xchg
lret
js
mov
cmpb
shrl
aas
adc
jge
mov
and
nop
mov
rclb
mov
in
push
loop,pt
pop
neg
add
lcall
cmp
pop
fistl
mov
mov
cli
pop
mov
push
or
mov
fisttpll
xchg
push
sub
xchg
pop
push
hlt
mov
fists
inc
fisttps
mov
out
insl
es
add
call
clc
cltd
ljmp
and
loop
xchg
xorb
movsb
add
adc
cltd
jo
gs
imul
cmp
xor
push
sbb
popa
push
adc
lods
inc
sbbl
in
int3
es
push
jbe
mov
in
clc
not
popa
jnp
and
clc
push
rorb
cs
rcrl
xor
negl
inc
in
fdivrs
icebp
popf
xor
call
mov
push
jns
and
fs
adc
jg
mov
mov
in
mov
scas
push
cltd
or
sbb
pop
push
hlt
jno
inc
adc
or
mov
out
xchg
rcrl
jnp
pop
xor
call
test
mov
loop
int3
add
fdiv
lods
pop
cmp
mov
je
shll
push
sbb
mov
sub
lods
pop
cmp
pop
subl
push
mov
dec
and
loopne
shl
add
inc
sbb
inc
notl
mov
imul
inc
bound
call
lret
rorl
int
aas
stos
lods
test
testl
call
xchg
mov
pushf
popf
mov
add
outsb
xchg
lods
aaa
sbb
imul
pop
sbb
fildll
rcll
inc
and
subb
jecxz
dec
std
aad
jne
call
pop
cmp
mov
ljmp
sbb
jbe
jae
aad
sub
dec
je
leave
cmc
add
pusha
mov
push
into
inc
ljmp
push
fmul
adc
sub
lret
xlat
leave
mov
lds
cmp
inc
mull
inc
jmp
mov
mov
es
mov
push
ret
nop
pop
insb
movb
and
scas
jo
outsl
pop
subl
xor
jb
adcl
and
stc
xlat
imul
ds
popf
jecxz
in
xchg
pop
add
sbb
xor
scas
inc
addl
mov
rolb
xor
bound
mov
mov
sbb
dec
fildll
outsl
pop
aas
add
push
in
pushf
in
dec
xor
inc
xchg
cwtl
jle
pop
test
jae
js
adcb
xchg
mov
subb
sub
mov
mov
lods
cmp
cmp
scas
xlat
incb
xorps
int
inc
sti
add
add
cwtl
lods
movsb
cmpsl
mov
or
enter
das
inc
in
sub
test
pop
push
and
or
fcomps
popa
jecxz
mov
jmp
pop
gs
jo
cmp
mov
sbb
cmp
sub
out
cltd
cwtl
aas
sbb
iret
adc
mov
mov
cmp
cmp
push
xchg
ja
push
mov
pushf
inc
ds
push
push
fcmovb
in
shrl
data16
int3
mov
or
add
fwait
add
imul
or
and
jae
cwtl
inc
adcl
xor
mov
fbstp
out
push
test
push
pop
je
jne
lock
push
ret
dec
call
xchg
or
shr
or
xor
jnp
cs
mov
enter
jo
sub
sahf
cld
stos
mov
mov
pop
nop
es
fcompl
mov
jo
pop
push
adc
inc
jmp
rcrb
addl
cmp
das
push
adc
pop
push
pushf
mov
add
bound
or
cmp
pop
out
add
sbb
hlt
mov
jo
xchg
add
push
inc
testl
dec
jno
imul
and
fdivrs
add
dec
cmp
loop
mov
adc
mov
enter
es
pop
xor
add
xor
xor
inc
inc
mov
sub
in
inc
out
mov
jns
or
aad
and
push
inc
add
sbb
aas
xchg
dec
aam
or
loopne
insb
ret
and
fwait
ret
ss
fidivrl
rcr
jl
stos
dec
clc
cmpsl
mov
sub
sub
xchg
pcmpeqd
andb
mov
sbb
sbb
mov
std
lds
leave
xchg
out
je
jns
call
xchg
or
cmp
int
sub
fisttps
cli
mov
pop
xchg
popaw
pop
dec
pop
lret
mov
dec
sub
push
xchg
push
ficoml
mov
pop
fsubl
and
sbb
sbb
xor
js
dec
cmpsb
push
test
bound
adc
fwait
mov
jmp
xchg
mov
mov
movsl
in
das
inc
icebp
and
gs
mov
xor
addl
sub
add
or
or
lret
sub
jmp
inc
xor
in
mov
sarl
sbb
out
rcr
repnz
push
add
dec
in
inc
inc
or
repz
sbb
fdivrp
and
adcl
mov
fwait
or
mov
or
out
or
ret
vmovss
push
aaa
mov
add
fidivs
les
cmp
pop
ror
cwtl
and
lcall
push
movsl
or
loop
into
dec
mov
subb
shl
xor
mov
jle
push
jl
xor
sarb
push
ret
jne
test
insb
xchg
or
loope
test
dec
push
int
je
sbb
jnp
sbb
movsl
mov
jl
push
jnp
and
jmp
push
mov
andb
or
sti
mov
jns
push
jne
pusha
mov
add
cmp
lret
loop
xlat
sub
aad
hlt
jae
pop
jecxz
cld
gs
mov
cmp
xchg
xchg
or
lret
scas
lret
sahf
adc
leave
mov
int3
scas
inc
push
push
add
or
cmp
push
dec
xchg
mov
mov
ja
add
cmp
push
inc
or
cmp
sbb
imul
ficoms
add
cmpsb
mov
popa
aam
sti
sbb
ds
cld
mov
mov
jae
stc
pop
xor
inc
arpl
cmp
in
sub
adc
in
clc
jnp
inc
sbbl
add
mov
movsb
or
sbb
outsb
and
sub
xchg
mov
push
jg
mov
call
inc
xchg
ds
lret
pusha
push
insb
sti
addr16
ss
pop
shll
push
or
ror
adc
sahf
lahf
insl
cmc
mov
xor
lods
ljmp
xor
stc
xor
lds
xchg
fistpll
clc
push
int
int
cmp
shl
xor
sub
pop
and
dec
inc
mov
imul
xor
sti
jecxz
add
or
fldl
nop
dec
imul
mov
fldt
int3
or
gs
push
inc
or
jmp
jp
or
fisubrs
popl
mov
mov
fdivp
jmp
pop
jns
popf
fwait
mov
leave
idiv
add
insl
lock
or
leave
cmp
sub
push
sbb
mull
int
sub
add
sub
mov
cmc
xchg
std
insb
movsb
js
repz
mov
stos
icebp
subl
dec
adc
pop
movb
out
adc
push
in
sbb
mov
stos
xor
push
shlb
out
xor
fmuls
mov
dec
sub
repz
test
push
push
cmc
mov
xor
test
fxch
sub
push
cltd
and
mov
or
push
inc
adc
cmp
ds
shl
bound
mov
hlt
aaa
add
lock
stos
pop
mov
xor
scas
ds
icebp
fsts
aaa
in
pushf
inc
mov
mov
xchg
dec
daa
add
les
pop
xor
in
sbb
fdivs
inc
scas
mov
int3
inc
mov
popf
add
mov
std
jbe
push
test
orl
rsqrtps
sbb
xchg
sbb
rcr
stc
mov
std
cmp
mov
push
sub
lret
jns
imulb
push
push
adc
mov
clc
sbb
dec
sbb
stos
mov
addr16
inc
cmc
xchg
dec
leave
mov
fildl
inc
in
mov
subb
rcl
vpmaxub
pop
xchg
dec
xchg
nop
lcall
and
das
aad
ror
cmp
jb
test
sub
mov
mov
shrb
mov
dec
leave
mov
movsb
xchg
ja
push
cmp
xor
sub
mov
in
jg
mov
scas
or
mov
push
xchg
push
cmc
out
fsts
cmc
aas
std
sbb
pop
jecxz
xor
in
mov
mov
lods
rcrl
icebp
ficomps
lods
divb
popa
les
popa
xchg
scas
sbb
adc
movsb
mov
jg
cmpsl
lods
jp
mulb
aas
xor
stos
mov
call
mov
lods
push
imul
sub
arpl
lcall
aam
and
adc
fildl
push
aaa
cltd
pop
stos
or
and
lahf
ret
adc
mov
cld
lods
shll
fsubrl
push
andps
xchg
ds
pop
or
aas
inc
pop
mov
subb
lods
or
push
adc
dec
add
or
jmp
fisubrs
lods
clc
lea
jae
and
lods
adc
pop
pushf
fwait
testb
cwtl
cwtl
xchg
push
std
int
add
movsl
mov
icebp
lods
sub
jnp
dec
pop
sub
cmc
push
cmp
xchg
lock
fildll
inc
jecxz
bndstx
jecxz
mov
movsl
shlb
dec
mov
fstpt
cli
mov
cmpb
pop
pop
test
pop
push
jmp
or
add
aam
cmp
bound
es
fcomps
lock
jp
cmp
xchg
call
andb
dec
incl
mov
mov
into
push
push
test
popf
jne
add
imul
mov
andb
in
mov
ds
aas
xchg
inc
add
xlat
xor
adc
mov
xor
fisubrs
mov
fwait
das
inc
add
xchg
movsb
xchg
cmpsb
sbb
pop
mov
stos
rclb
inc
addl
fldl2e
jo
sarb
push
test
lods
add
inc
outsl
stos
add
add
gs
cmp
inc
icebp
nop
jne
sbb
cmpsb
inc
sbb
sbbl
and
xchg
xorb
subb
call
ss
lcall
andl
xchg
pop
xor
push
in
push
ucomiss
push
adc
ljmp
call
test
lahf
push
sbb
aam
lock
inc
jg
sub
in
mov
rorb
int3
lods
jle
jb
scas
add
ljmp
aaa
arpl
stc
pop
sti
adc
leave
js
stc
cld
push
cmp
fidivs
xlat
jno
orl
sbb
or
call
push
push
cltd
sub
mov
fdiv
mov
xchg
xchg
test
int
sub
stos
testb
nop
push
sbb
inc
or
or
mov
add
out
and
xchg
mov
xor
loop
mov
mov
xorl
or
aaa
shlb
insb
adc
sub
movsl
xor
shrb
lret
pushf
cmpsl
adc
xchg
fldenv
xor
jbe
subl
push
cmc
cwtl
push
call
cmc
sbb
mov
lods
ss
cli
xor
pop
or
cmc
mov
call
pop
loopne
mov
inc
es
jae
sbb
pop
jg
shlb
fs
pop
sub
inc
adc
jae
pop
fwait
imul
dec
add
stos
scas
popf
cmp
clc
arpl
sub
xor
push
daa
push
or
loope
movsb
or
stc
push
jge
mov
and
jg
push
int3
jne
xchg
hlt
mov
xchg
xor
aam
fxch
dec
adc
ret
cwtl
jae
inc
rcrl
fisubrs
daa
aam
dec
push
aaa
mov
les
fldt
or
push
xchg
out
and
cli
and
or
mov
inc
cmp
enter
fwait
xchg
fldenv
lea
xchg
jmp
ja
mov
repz
xchg
lea
cltd
jmp
xor
loope
jg
fstl
mov
pop
cltd
pop
dec
aas
insl
sbb
add
lds
push
jbe
dec
mov
cs
insl
sbb
dec
and
aam
mov
push
xor
arpl
pop
sub
adc
push
pop
lahf
frstor
popa
xor
cli
insl
ret
fs
sbb
mov
sti
mov
out
mov
add
mov
cmp
and
jb
and
call
xor
enter
ret
xor
sbbb
sbbl
xchg
imul
and
jp
and
fdivr
xor
popf
adc
xor
gs
or
sbb
fnstsw
dec
das
pop
pop
iret
aas
inc
popa
add
cmc
repnz
lds
stc
xchg
jne
clc
push
or
jbe
cmpb
ret
mov
lock
or
inc
sbb
insl
insb
shll
out
lea
cmp
popa
cmp
into
dec
cwtl
in
jle
xchg
insb
and
pop
inc
dec
lea
sbb
cmp
fistl
pop
sub
and
xor
dec
jp
sub
dec
test
pusha
mov
insl
push
pop
adc
je
pop
insl
pop
cmpsl
xor
inc
lds
cmp
mov
cmp
push
inc
dec
cmc
or
inc
es
add
in
clc
jmp
cmp
mov
pop
not
ljmp
loope
out
aas
fistl
gs
movb
cmc
jmp
or
sti
call
ret
pop
inc
push
sub
push
stos
sub
mov
repz
dec
pop
lods
scas
inc
inc
aad
sahf
cmp
ja
nop
xchg
fldcw
inc
mov
xor
mov
mov
mov
iret
jle
sub
fisttpll
aaa
pusha
sub
mov
push
ss
popf
sti
in
das
sbb
and
lret
fimull
push
repz
das
xor
je
roll
rcll
add
sbb
test
cmp
xor
jle
mov
arpl
dec
or
js
push
addr16
or
fcompl
xor
and
test
mov
dec
sti
xchg
aaa
add
dec
dec
pop
sub
jnp
xor
pushf
add
arpl
xchg
insl
stos
adcb
imul
fstl
ds
sahf
fadd
nop
out
lock
bound
lds
mov
lods
pop
pop
cmp
lret
dec
daa
pop
gs
xor
pop
adc
test
push
push
in
bound
enter
in
lcall
mov
in
sub
pop
mov
incb
loope
mov
sub
ret
lods
stc
stos
repnz
repz
inc
iret
scas
or
ja
into
pop
or
int
mov
mov
mov
movsb
loop
dec
sub
jle
push
add
add
and
adc
repnz
in
arpl
ret
inc
fistps
movsl
add
mov
push
mov
jg
xor
jle
mov
xor
xor
out
hlt
jno
mov
jnp
fwait
and
aad
sub
imul
push
stos
xchg
push
sbb
pop
sbb
pop
sbb
shll
pushf
pushf
test
inc
lret
cmp
jbe
mov
pop
movsb
cs
jno
gs
inc
push
jmp
fimull
repz
arpl
cmp
inc
xor
jns
rcll
leave
mov
in
rorl
daa
fistps
iret
mov
mov
int3
or
fcmovne
mov
jnp
cltd
lret
frstor
fs
pusha
movsl
adc
inc
push
ficoml
or
xchg
and
cltd
jne
and
pop
loope
rcl
pop
cld
aad
cmpsl
inc
adcl
ja
jnp
pop
pop
jecxz
movsl
outsl
pop
sbb
push
xlat
addr16
rcl
in
das
or
mov
les
xchg
std
in
add
repnz
test
cmp
stos
int3
les
add
xchg
cmpsb
push
and
jbe
ficompl
xchg
int
jnp
outsb
outsl
test
push
cli
aam
mov
push
fsin
lds
jmp
dec
daa
int3
add
lcall
jmp
mov
pop
lcall
cmpsb
or
inc
stc
pop
dec
pop
push
adc
push
sahf
xchg
inc
jp
pop
mov
adc
ficompl
push
in
xchg
xchg
mov
sbb
cmp
aaa
sub
shlb
add
inc
and
xor
xchg
comiss
mov
lods
xor
adc
scas
mov
sub
mov
or
pop
or
jmp
dec
pop
xor
pop
sahf
pop
sbb
inc
in
call
lods
add
mov
push
das
enter
push
xchg
inc
jne
xchg
jle
xchg
mov
mov
jecxz
enter
stos
xor
or
jmp
xchg
fyl2x
scas
add
mov
rorl
orl
jnp
cwtl
cmp
dec
lods
outsl
mov
mov
dec
cmp
sub
bound
in
add
sub
xor
and
sbb
addr16
inc
jge
in
push
divb
push
adc
inc
lcall
adc
inc
pop
mov
inc
cmp
outsl
negb
push
or
inc
sbb
add
xchg
and
pop
gs
push
sbb
movsb
add
outsl
fidivl
push
fistps
repz
xchg
in
adc
xchg
push
mov
jge
or
cmpsl
lcall
add
cmc
sub
fwait
dec
jecxz
pushf
or
pop
cld
es
mov
bound
cltd
add
divb
xor
cmp
jbe
out
push
mov
je
jg
int
insl
pop
dec
pop
mov
cld
loopne
loop
fistps
in
int
stos
repnz
inc
lock
push
cmp
cmpsb
cmp
add
imul
nop
insl
mov
scas
outsb
test
ja
fwait
nop
sbbb
addr16
pop
xchg
cmp
leave
cmp
lds
shlb
inc
push
mov
xchg
xor
out
or
xchg
cmp
movsb
mov
js
fsubl
push
mov
cld
lock
push
not
cmpsb
or
test
repnz
lret
ss
inc
inc
sbb
mov
jnp
rcrb
cld
addr16
pop
inc
movsl
inc
jnp
mov
in
lret
shrb
aaa
enter
sbb
popa
jne
xchg
inc
mov
jb
cmc
and
push
dec
cmp
movsl
adc
pop
inc
popf
add
cmc
dec
clc
cld
push
out
push
stos
outsl
inc
xchg
call
add
frstor
es
mov
scas
fwait
jl
mov
hlt
shll
adc
pop
and
xor
es
subb
ret
jbe
pushw
pop
cmp
setne
or
movsl
jb,pn
xchg
xor
loopne
xlat
cmp
arpl
inc
outsb
fwait
sub
cmp
mov
jmp
push
out
fldl
pusha
xchg
pop
stos
dec
push
scas
or
adc
loope
out
add
mov
xchg
and
repz
xchg
lahf
roll
popa
mov
or
mov
mov
inc
sub
pop
aaa
shr
cmp
jnp
add
fstps
aad
je
jmp
cmc
jbe
cmpsb
in
push
shl
test
pop
jge
dec
mov
imul
fnstenv
adc
addr16
add
sbb
dec
pop
cmpsb
pushf
fildll
add
fnstcw
add
add
adc
gs
ss
insb
outsl
cwtl
push
jb
movsb
xchg
cmp
int3
pushf
or
push
into
xor
mov
push
cs
mov
mov
xchg
loop
daa
sti
subl
orb
xor
mov
out
and
sub
push
cmpsb
paddq
pop
incb
lea
repnz
add
cmp
rcr
pusha
in
push
sub
jne
sbb
jae
push
cmpsl
jno
cs
icebp
or
shl
in
fidivrl
repnz
cwtl
setl
je
sub
lods
pop
lret
adcb
inc
fcmovne
jp
inc
xchg
loop
mov
mov
andb
mov
jmp
outsb
mov
cmp
pop
dec
pop
and
movsl
add
fisubrs
negl
stc
fucomi
pop
mov
jnp
mov
lods
stc
or
mov
cld
adc
sahf
sti
lret
mov
push
push
or
int3
jmp
mov
mov
xor
lcall
push
fisttps
xorl
imul
btr
mov
add
dec
imul
push
add
call
daa
mov
test
movsl
inc
leave
call
xchg
mov
pop
sbb
imul
push
inc
sbbl
out
cmpsl
insl
inc
cmovne
mov
scas
scas
push
out
mov
rol
les
testl
in
xchg
inc
adc
mov
bound
aad
add
fmuls
xchg
mov
cmp
sbbb
xor
sbb
fldt
mov
mov
xchg
adc
inc
inc
popa
dec
mov
mov
and
nop
lods
pop
fisubrl
arpl
icebp
jne
jl
pop
push
xchg
arpl
inc
lahf
xor
clc
nop
and
adc
xchg
inc
xchg
outsb
out
push
xor
jne
pop
lret
out
push
cmpb
adc
ljmp
std
sbb
fisttpl
or
and
adc
mov
and
jno
shrl
push
mov
outsl
add
call
minps
inc
add
ficoml
sahf
cmp
shlb
loop
inc
sub
xchg
test
push
loope
xchg
insl
cmp
xor
fst
ss
mov
cmp
popf
push
cmp
lods
mov
pushf
xchg
and
mov
pop
subl
mov
xor
out
ret
lds
xchg
jmp
in
mov
cmp
xlat
mov
ja
cmp
and
fmul
rclb
push
mov
inc
push
add
cmp
push
cmp
int
xlat
pushf
out
into
mov
repz
ret
xchg
push
test
aam
outsl
imul
cmp
repz
out
push
pop
push
inc
loop
sbb
sub
repnz
lods
jmp
pop
popf
shlb
shll
adc
jmp
jmp
adc
add
xchg
sbb
frstor
ds
je
scas
std
test
outsb
and
jno
cmp
cmpsl
mov
push
fnstsw
add
cmp
sbb
jmp
xchg
popf
mov
xchg
mov
adc
xor
dec
hlt
xorl
fwait
test
icebp
mov
xchg
sarl
sub
je
sub
xor
test
roll
xor
test
lret
rolb
scas
imul
push
gs
and
testb
out
inc
mov
cmpsb
xchg
or
pop
stos
dec
icebp
into
dec
jno
xor
push
les
sub
sub
jmp
mov
pushl
jb
sbbl
sub
scas
dec
inc
jae
inc
in
sbb
dec
sarb
int3
xchg
out
and
jne
push
data16
bound
xchg
add
push
and
mov
add
lds
pop
xchg
mov
ror
mov
sub
lods
pop
repz
xor
push
stos
mov
adc
std
arpl
sbb
or
cli
inc
adc
mov
sub
out
into
lcall
inc
mov
pop
outsl
aad
push
lahf
or
je
popa
scas
cmc
cmp
sqrtps
mov
loop
adc
adc
fisubs
sbb
sbb
arpl
jne
inc
pop
xchg
adc
call
outsl
jns
push
cmp
mov
pushf
sbb
sahf
jl
or
sti
call
pushf
pop
aam
sahf
sub
loope
mov
addr16
inc
daa
int3
aas
jg
mov
push
adc
lds
in
inc
pop
jge
cmc
mov
imul
lea
mul
mov
imul
cmp
inc
loopne
fincstp
ret
mov
decb
dec
adc
sub
or
push
or
cltd
repnz
sbb
stos
add
dec
adcl
call
loopne
pop
inc
xor
test
push
dec
lods
xchg
pop
xor
ret
adc
xchg
movsl
pop
fistpl
loopne
sarl
add
addr16
push
enter
pop
call
jns
xor
push
outsl
ja
out
clc
icebp
mov
test
ss
mov
cld
int
gs
pop
push
icebp
add
xchg
pop
call
js
popf
lret
xor
frstor
outsl
and
jo
mov
jo
jl
fwait
and
or
rcrl
mov
jno
out
loop
push
out
sbb
in
mov
jge
imul
cmpsb
mov
fwait
mov
cld
hlt
aad
mov
pop
imul
je
mov
jge
fidivs
or
push
out
mov
scas
mov
lret
mov
ret
notl
mov
cmp
push
mov
and
mov
out
fisubrl
cs
mov
jmp
jecxz
add
sub
dec
in
jg
jecxz
sahf
inc
adcb
inc
xor
hlt
sub
stc
pop
add
clc
xchg
mov
sub
jbe
les
push
add
sbb
pop
in
inc
jl
and
inc
inc
dec
stos
cmp
inc
fidivs
pop
dec
insl
repnz
adc
push
sbb
jne
mov
push
pop
movsb
mov
dec
subl
enter
ror
xchg
rolb
push
adc
out
xor
loope
pushl
add
jnp
xchg
inc
out
out
dec
fcmove
dec
roll
inc
push
js
dec
into
insl
push
sbb
fidivrl
rclb
clc
adc
xor
mov
repz
cs
mov
mov
lcall
mov
sub
sti
sbb
pop
shrl
fwait
clc
ret
mov
mov
imul
and
dec
dec
pop
sarl
test
and
mov
push
jbe
fadd
push
mov
and
idivb
in
call
leave
jbe
or
out
sbb
gs
and
into
cli
popa
jo
mov
jge
mov
jl
in
test
hlt
cs
out
add
or
mov
mov
insb
hlt
adcb
lret
dec
ret
dec
lahf
pushl
push
enter
sub
mov
out
cmp
pop
das
xor
push
jb
cmp
or
xchg
das
jecxz
rcrl
dec
xor
adc
ret
aas
jmp
jmp
cmc
xor
sarb
mov
adc
mov
bound
jno
or
mov
jb
out
sti
shlb
mov
or
pop
lret
iret
leave
pop
and
in
aaa
hlt
out
xchg
jg
mov
push
adc
adcb
lret
in
test
jg
dec
xchg
dec
lods
pop
mov
sub
in
stc
push
pop
sbb
xchg
and
sub
int
pop
push
or
stos
jb
cmp
int3
pop
popf
xchg
test
cwtl
stos
rclb
sbb
push
mov
sbb
inc
mov
xchg
add
insl
push
xchg
or
pop
jmp
push
cmp
xchg
mov
mov
call
pop
out
push
inc
sbb
inc
cltd
or
lock
or
jae
pusha
sti
pop
push
je
pop
jp
test
cmp
out
rol
add
dec
in
loopne
and
mov
jge
insb
loop
pop
mov
jg
popa
decb
cmpsl
dec
jmp
daa
hlt
insl
jmp
les
sub
ret
mov
jne
jae
mov
add
outsb
test
das
test
mov
loopne
add
push
das
push
jp
dec
jecxz
push
and
pop
dec
push
mov
mov
fsubl
int
inc
push
dec
push
pop
lods
outsb
push
scas
and
adc
addb
aad
mov
mov
rorb
mov
js
ss
dec
or
loopne
addr16
jno
mov
in
int3
jae
out
pop
cmp
lahf
int
cmpb
leave
fmul
inc
push
mov
add
cmp
and
adc
dec
mov
rcrl
mov
pop
outsl
cmp
mov
dec
test
pop
fistl
iret
jp
inc
es
rorl
adc
rorb
xchg
mov
aaa
mov
push
daa
adc
sti
insb
shl
xor
popf
cmc
into
js
aad
notl
lret
and
or
xchg
dec
mov
sub
mov
jno
cs
sub
adc
dec
push
inc
pop
imul
jae
and
pop
mov
imul
lret
movsb
cmp
cwtl
outsb
test
arpl
jp
mov
data16
repnz
xchg
fisubs
fsts
mov
lahf
gs
js
scas
icebp
js
lahf
mov
pop
rcr
push
and
out
into
ljmp
xchg
mov
xor
jbe
or
nop
xlat
ljmp
push
loope
ficoml
and
mov
and
iret
out
std
ret
divb
inc
xor
push
mov
int3
or
jbe
outsb
cmp
dec
sbb
sbb
jp
fnstsw
sub
enter
cmovle
adc
pushf
in
mov
jo
push
jns
mov
aaa
sbbl
jo
lods
jno
mov
mov
subl
test
fisttpll
repnz
sbb
jo
test
imul
mov
xor
das
and
inc
sbb
ja
cmp
sub
scas
in
std
xor
sbb
mov
daa
xor
imul
in
cltd
or
dec
mov
mov
mov
sub
mov
add
sub
repnz
lock
cwtl
lret
adc
shll
scas
lds
divb
insl
xchg
fisubl
pushf
scas
or
inc
enter
fcoml
movsb
lea
cmpsb
loop
adc
cwtl
jne
ss
out
push
jmp
mov
cwtl
mov
aas
mov
test
sub
cmc
mov
inc
pop
or
aaa
push
jne
xor
sbb
mov
sub
loope
ja
and
push
inc
ljmp
pop
addr16
cwtl
imul
sahf
popf
sbb
push
jno
int3
pop
sub
insl
scas
mov
gs
xchg
push
cmp
inc
test
imul
loope
xor
inc
push
jne
pop
pop
push
into
xchg
or
sti
add
push
les
push
sub
shrl
xchg
mov
mov
cmpw
push
push
hlt
into
mov
fisttps
scas
and
imul
mov
fbld
stos
mov
lds
shl
movsb
push
repnz
cmp
hlt
out
lret
stos
dec
mov
test
xor
pop
dec
or
dec
xchg
mov
or
jb
jle
roll
scas
dec
cmp
cld
lods
xchg
psllw
push
xchg
leave
ss
and
lds
dec
pop
je
mov
inc
fcomps
js
loope
pop
cmp
mov
inc
loopne
pop
lds
shr
pop
pop
sub
adc
pop
or
pop
fimull
xchg
mov
faddp
in
mov
test
ficompl
cmp
add
add
mov
scas
xchg
jg
aaa
add
lahf
jbe
jno
flds
dec
roll
pusha
xor
aad
insl
cwtl
push
xlat
mov
bound
ds
dec
push
mov
rcrl
test
jns
sti
fiadds
les
inc
and
add
stc
mov
cmp
cmp
and
mov
or
sarb
lock
and
stc
sbb
stos
sbb
test
lock
adc
insl
jecxz
stos
cmc
gs
stos
clc
adc
mov
sub
sbb
rep
pop
pop
cmc
pop
imul
xlat
mov
stos
pop
int3
xor
pop
cmp
lahf
addr16
jne
mov
xlat
mov
inc
ficoms
pop
jecxz
rcrl
push
cmp
scas
fists
sbb
cmpsl
repz
iret
insl
inc
mov
out
xor
cmp
aad
cwtl
jl
mov
test
fwait
xchg
aam
jge
mov
pinsrw
pop
or
jg
or
lods
xchg
sub
mov
adc
jne
or
xor
dec
popf
pop
loopne
pop
lahf
xlat
xchg
mov
ja
nop
jmp
xorb
fistpl
mov
mov
xchg
scas
rep
call
pop
loopne
ljmp
and
push
inc
fildll
popa
jecxz
inc
cmp
daa
div
push
ljmp
aaa
in
dec
cmp
int
leave
not
xchg
pop
call
cmpsl
je
xchg
xor
loopne
shrb
cmpl
nop
adc
lcall
pop
mov
imul
fldenv
dec
loop
ret
mov
leave
fwait
out
sbb
mov
out
inc
jns
outsl
shll
mov
jo
shl
mov
dec
cs
int
mov
inc
roll
mov
lds
sub
arpl
cli
xchg
aaa
scas
push
adc
and
push
into
fsubrl
ja
idivb
fildll
lock
mov
and
jmp
std
loop
outsb
push
cmp
xchg
fnstenv
or
xchg
test
pop
int3
push
mov
shl
loope
pop
cmpsl
xor
lahf
pop
sub
sub
sub
out
sbb
shlb
in
repnz
not
or
cli
xor
push
and
sbb
cli
imul
mov
loop
xchg
out
stos
in
and
cmpsl
cmp
icebp
adc
test
mov
mov
fcompl
xlat
les
pusha
outsl
faddl
push
jmp
out
movsl
lock
sbb
loop
int3
cli
pop
mov
xchg
jge
jno
nop
jp
xchg
mov
inc
xchg
notl
fucom
repz
jo
lahf
dec
mov
push
pop
and
xchg
std
push
clc
fisubrl
leave
nop
mov
aas
inc
cmp
adc
push
adc
rorb
push
mov
sbb
jecxz
je
mov
movsl
pusha
mov
add
jmp
das
je
lods
out
lcall
movsl
sbb
mov
push
insl
aad
out
sbb
loop
out
shrl
inc
xor
sbb
sbb
stc
xor
jo
pushf
inc
push
cmp
mov
arpl
fcoms
sub
scas
push
movsl
repnz
push
mov
ljmp
sbb
ficomps
xlat
ds
ret
dec
push
push
dec
xchg
push
shlb
pop
or
cmp
fbstp
cvtps2pd
jns
int
nop
je
out
jo
xor
movsb
sub
dec
mov
mov
xchg
les
idivl
sbb
mov
repz
lahf
repnz
lcall
movsb
xor
pop
mov
xchg
xchg
or
adc
jp
cs
sbb
and
pop
push
ret
xor
pop
push
pop
clc
push
add
enter
sti
adc
aad
mov
pop
push
shl
sub
jecxz
das
into
dec
data16
das
fisubrl
pop
fwait
pop
sub
int
popa
cmp
inc
jge
jne
test
and
or
sbb
in
je
mov
fnstenv
push
clc
push
mov
aas
es
outsl
jae
xchg
das
fwait
sbb
mov
sbb
xor
cltd
sti
clc
es
sbb
mov
pop
mov
pop
xlat
fs
mov
movsl
inc
or
faddl
xchg
pop
mov
xchg
insl
flds
popa
and
insb
fistpll
inc
call
daa
pop
std
fcomp
call
scas
mov
adc
push
xchg
cltd
iret
insl
xchg
inc
sbb
ljmp
sbb
cwtl
inc
cmp
movsl
push
add
iret
leave
in
cmpb
adcl
hlt
mov
mov
dec
bound
jnp
shrb
call
std
pop
mov
fidivl
aad
dec
test
out
sub
sub
cmp
shll
jl
jbe
mov
cmc
xchg
cld
lods
or
loope
es
in
mov
pop
daa
jp
sub
loope
push
roll
fiadds
cmp
out
out
aad
push
scas
or
aad
sahf
ret
jnp
daa
mov
mov
repnz
cmp
mov
icebp
push
jmp
testl
push
shlb
lcall
mov
jb
fisubl
pop
ljmp
xor
insl
sbb
and
test
shll
xor
loop
leave
cmpsl
inc
sbb
and
adcb
lods
outsb
cmpsl
movsb
mov
fldenv
lret
sbb
push
data16
lock
mov
out
dec
ret
and
addr16
cli
push
stc
ret
dec
lahf
out
push
lahf
ja
faddl
out
rolb
xchg
dec
repz
negb
es
je
jnp
loop
mov
xor
inc
aad
mov
jb
aad
xor
fwait
out
into
and
mov
sbb
inc
xchg
scas
sub
pop
cmp
sub
jae
xchg
mov
push
push
shl
jmp
movsb
push
mov
sub
aas
dec
and
sbb
out
jl
arpl
xchg
lods
mov
or
daa
and
lock
mov
js
loopne
ret
repnz
popa
test
in
insb
sbb
bound
xor
insb
into
and
xchg
mov
add
pop
xor
sub
mov
mov
cmp
lds
or
popf
mov
mov
andb
cmc
lahf
les
pop
je
jbe
push
add
movsb
lods
push
cli
aam
cmp
clc
int3
fs
jge
xchg
shll
pop
pop
xor
ficoms
out
mov
push
sbb
popf
shl
adc
hlt
xchg
and
gs
dec
fldl2e
test
jmp
mov
jmp
pop
jae
mov
mov
cmp
jnp
fucom
call
mov
xchg
sub
mov
ficoml
pop
push
cld
push
nop
and
mov
outsl
cmp
add
fwait
or
mov
lcall
and
into
icebp
xor
xchg
inc
ds
inc
push
mov
cmp
ds
push
out
cmp
xor
cli
push
mov
xchg
std
test
mov
pusha
push
imul
xchg
shrb
hlt
cmp
inc
lret
adc
test
rcr
jmp
cmp
nop
cmp
or
lds
cmc
mov
repnz
stos
mov
add
out
mov
loopne
jo
popf
das
aam
pop
xchg
push
test
cmp
or
xor
or
adc
jbe
cwtl
xor
stos
std
pop
push
scas
push
inc
lds
daa
push
mov
jae
out
or
sbb
btc
dec
testl
ljmp
icebp
aam
int
cmp
hlt
mov
gs
add
mov
adc
iret
cli
push
add
jl
mov
dec
xchg
test
sbb
pop
push
testb
fwait
dec
dec
jle
aam
cld
icebp
dec
lds
out
outsl
inc
mov
push
ds
icebp
cli
push
mov
xor
not
enter
sbb
movsl
icebp
jnp
jle
xchg
xchg
jne
mov
dec
dec
ret
hlt
push
xchg
xor
cmpsb
dec
orl
ret
cmpsb
sahf
insb
sarl
sarb
push
frstor
sbb
insl
push
sti
jno
les
lret
shlb
push
les
sbb
dec
pop
fwait
and
pop
fcompl
pushf
dec
imul
push
cltd
scas
cmc
inc
sub
lock
dec
sbb
jg
pusha
ret
fwait
adc
or
ficoml
fwait
pop
test
cld
mov
adc
insl
inc
repz
xor
push
out
shlb
addr16
fbld
imul
lret
sbb
fbld
scas
mov
xor
pop
inc
lods
and
testl
sti
lret
sbb
daa
in
jle
fucomi
in
pop
mov
lods
adc
sti
jne
cmp
lock
fs
pop
xor
add
cmc
xchg
js
mov
xchg
and
fmull
dec
mov
lcall
mov
push
rcrb
popf
inc
lret
add
push
xchg
js
cmp
popf
mov
lea
iret
sbb
inc
into
sub
jge
notl
add
jmp
mov
inc
popa
xor
lods
dec
sub
mov
sbb
mov
ss
push
mov
in
ljmp
jae
fsubl
inc
rclb
aam
mov
repnz
fistpl
pop
outsb
test
xchg
lahf
inc
daa
inc
add
mulb
mov
roll
sbbb
sub
mov
es
int3
xor
adc
out
out
dec
fucomip
pop
ja
sub
ds
mov
xor
push
repnz
or
test
ficoml
adc
mov
push
xchg
add
imul
stos
xchg
jmp
mov
mov
mov
sar
mov
push
add
xor
inc
and
adc
mov
scas
pop
shr
sbb
pop
clc
xchg
jp,pn
cmp
adc
aas
stos
add
inc
cld
cli
out
fsubl
and
xor
repnz
cmc
cmpsb
fs
shll
js
mov
pop
pop
loopne
mov
add
adc
add
lret
rorb
loop
jb
shl
into
leave
das
or
xchg
add
aaa
add
jne
addr16
outsl
cmc
and
out
test
sti
cmpsl
push
das
pop
movsb
mov
jecxz
ss
pop
xchg
jg
adc
rep
icebp
xchg
ja
dec
shrl
mov
jecxz
xchg
ficomps
test
dec
pop
push
mov
loope
fiadds
addr16
dec
mov
repz
in
inc
hlt
int3
mov
ss
inc
sbb
mov
push
js
ljmp
dec
or
push
mov
or
imul
xlat
int3
ret
ss
rolb
xchg
xor
lock
aas
test
push
adc
adc
pop
xor
pusha
and
or
test
sub
ret
push
cmpsl
sub
rcrb
pop
shlb
or
cmp
and
add
movl
xchg
test
out
stc
xor
mov
pusha
subl
cmpsl
pop
push
and
jbe
inc
and
and
push
movsl
mov
xchg
test
and
xor
dec
in
or
adc
loope
sbb
and
stos
xor
ljmp
sbb
sub
cmp
rorb
mov
sbb
mov
repnz
sbb
ss
aaa
push
and
in
inc
es
mov
pop
pop
fwait
out
mov
aas
mov
out
inc
lea
scas
in
enter
je
int
and
push
add
xchg
push
shlb
sub
sbb
out
jecxz
xor
xor
xor
and
addr16
jl
and
jo
fwait
lcall
fldt
dec
or
fisttpl
or
push
neg
mov
inc
cli
mov
pusha
add
xor
mov
shll
pop
imulb
mov
cld
xchg
jl
adc
fcmove
dec
es
clc
jb
inc
test
in
aad
adc
xchg
pop
cmp
jmp
outsl
push
cltd
sub
loop
iret
les
dec
lcall
dec
cmp
xchg
iret
aad
dec
das
or
lods
scas
idivb
or
pop
insb
xlat
aas
arpl
sbb
gs
idiv
pop
pop
xchg
mov
adc
sbb
test
das
cmpsb
out
sarl
in
loopne
das
xor
data16
imul
sub
lcall
or
scas
and
or
ret
repnz
cmpsb
sbb
dec
mov
pop
jge
ficomps
mov
pop
adc
adc
sbb
ret
jbe,pt
mov
mov
cmp
mov
jg
inc
fcoml
lahf
arpl
imul
cmp
add
xchg
pop
cmp
sbb
push
mov
call
ret
pusha
cmp
xor
rorb
lcall
xor
mov
add
int3
cltd
jnp
loop
or
mov
nop
cmp
fmull
test
cwtl
addb
dec
test
test
loopne
ljmp
test
xchg
inc
xor
lock
jae
sbb
push
mov
inc
into
std
sub
les
and
leave
les
push
aam
sti
jb
xchg
mov
or
fstpt
stos
mov
push
mov
dec
adc
loopne
dec
sbb
jecxz
arpl
xchg
mov
or
jnp
mov
mov
sbb
fincstp
inc
adc
jae
xchg
pusha
jg
mov
test
aaa
fidivrs
xchg
lret
mov
shl
lods
jle
movsb
adc
dec
mov
test
push
cmp
adc
cmp
xchg
lsl
bound
popa
repnz
aaa
inc
jg
jl
and
out
ljmp
add
jno
mov
cmp
or
sbb
adc
xchg
or
push
movsl
or
mov
shll
rcrl
fimuls
hlt
ret
rorb
ss
lods
push
loope
xchg
ret
or
or
mov
sbb
push
gs
mov
add
or
js
sub
xchg
inc
mov
in
adc
pop
shr
xchg
lods
insb
imul
sbb
maskmovq
push
xchg
in
push
pop
xchg
mov
xor
jne
aaa
insb
popf
xchg
adc
loopne
nop
fbld
popf
fs
shll
lea
inc
jb
or
jne
loop
and
pop
call
scas
push
cmpsb
or
int
xchg
fisttpl
pop
enter
add
mov
clc
push
mov
cmp
cltd
ja
xchg
test
or
sbb
or
pop
cld
and
jp
shl
jmp
jg
xchg
xchg
jne
inc
adc
ja
jecxz
leave
mov
mov
iret
and
js
addb
sub
fwait
and
jecxz
ror
cmp
adc
insb
das
pop
in
shlb
sub
xor
push
jmp
or
sub
fisttpll
or
and
cld
stc
pusha
adc
sahf
cmc
adc
cmp
out
popa
adc
repz
test
mov
divb
in
in
mov
sbb
inc
sub
lods
or
andps
popf
mov
movsb
into
xchg
gs
jbe
rcrl
enter
xlat
mov
jge
out
jge
stos
or
sbb
mov
mov
mov
je
aas
cmp
mov
loop
lcall
test
lret
js
sbb
or
call
out
cmp
add
lret
dec
lods
sub
or
jmp
mov
shll
mov
dec
lret
aas
aad
sbb
mov
pop
or
mov
addr16
pop
inc
pcmpgtd
test
push
sbb
mov
jo
lcall
ficoms
cltd
cmpsb
mov
add
fsubrl
sbb
sub
ss
shlb
and
nop
sarl
adc
mov
jmp
imul
movsl
jae
pop
repz
adc
inc
in
jnp
repz
sbbb
shr
aaa
inc
sub
cmpl
jge
ret
sbb
mov
xchg
mov
out
mov
mov
bound
xchg
ljmp
inc
ficoml
mov
pop
or
scas
fldl
sbb
cmp
xchg
inc
js
or
cmp
xor
mov
loop
mov
outsb
mul
lret
inc
inc
add
test
push
inc
dec
dec
push
cmpsb
out
mov
and
xchg
add
js
cmpsl
clc
sbb
flds
jbe
pop
dec
inc
movsl
pop
stos
xor
dec
push
pop
outsl
jmp
mov
fistl
fldcw
cmp
shrb
pushf
pop
xchg
adc
mov
in
mov
jb
mov
add
test
dec
aaa
inc
add
aad
inc
sub
iret
dec
inc
dec
add
adc
popl
and
mov
or
push
popf
ja
sbb
jb
pop
mov
lret
adc
xor
icebp
sbb
dec
daa
lock
mov
push
pop
negb
sub
pop
dec
adcb
cmp
outsl
sub
ds
inc
in
dec
fstps
rcl
xor
xchg
sub
xor
lahf
mov
cmc
inc
bound
popf
xor
xchg
jge
xor
push
mov
dec
fisttpll
pop
xchg
mov
pop
in
pop
es
xchg
pop
pop
jnp
jbe
mov
and
mov
jns
or
mov
mov
repnz
sbb
and
jecxz
push
jl
add
int
ret
mov
pop
popf
pop
xlat
push
jp
enter
es
adc
xchg
pop
nop
add
lods
mov
xor
mov
lock
pop
jbe
das
jle
adc
adc
inc
sbb
adc
in
pushf
pop
sub
leave
cmp
adc
cld
or
mov
or
pop
push
jge
inc
popa
add
pop
hlt
in
mov
pop
bound
out
sub
xor
jnp
shll
xchg
sub
lcall
lret
add
sarb
lea
ret
imul
out
loopne
push
lcall
jb
insl
fwait
lea
loopne
push
sbb
mov
outsb
nop
dec
push
idivb
cmp
idivb
hlt
setno
cmp
jp
and
bound
push
and
mov
mov
sub
adc
add
jo
jae
mov
pop
lret
and
push
push
insl
lock
arpl
es
stos
ret
repnz
pop
dec
das
inc
mov
out
pop
mov
or
mov
jns
test
mov
fdivl
or
fs
xchg
xchg
cmpsb
jb
adc
lods
push
frstor
call
xor
insl
xchg
add
ret
pop
mov
jecxz
dec
xchg
cmpsl
pop
and
sarb
mov
jle
xor
xchg
jle
leave
inc
dec
pop
adc
or
daa
dec
or
ds
fimull
mov
repnz
loope
out
orb
aam
pushf
mov
popa
imul
xor
test
cmc
add
xor
add
sbb
inc
inc
inc
xor
jge
nop
es
loope
arpl
xchg
inc
test
xchg
push
mov
sub
lcall
scas
enter
sbb
cmp
mov
xor
aad
sbb
jae
mov
cmp
mov
cltd
arpl
insb
fwait
pop
jmp
xor
loopne
ret
test
bound
ret
sbb
pop
sbb
popa
inc
adc
stos
data16
lods
pop
mov
stc
testl
mov
mov
mov
sbb
jecxz
xchg
out
pop
dec
nop
shlb
test
pop
dec
pop
sbb
aaa
push
mov
sti
jns
xchg
inc
push
sti
inc
aas
sti
cmp
mov
icebp
jae
lds
push
mov
dec
jl
test
out
ret
jno
cmp
sub
pushf
sbb
fmulp
aas
jecxz
sarb
cmp
js
mov
mov
mov
jno
mov
loope
movsl
daa
pop
cmp
stos
xlat
mov
or
call
or
xor
enter
clc
imul
mov
pop
sbb
lcall
jae
clc
fcomi
mov
or
mov
out
pop
inc
mov
mov
nop
xchg
inc
sbb
rcll
orb
mov
xchg
dec
pop
in
xchg
dec
pop
adc
pop
inc
cmp
jg
pop
aam
mov
lods
sub
sbb
scas
pop
cli
sbb
and
mov
popa
xchg
cwtl
out
jl
dec
lea
cmpsl
sbb
lret
add
mov
adc
cmc
in
or
pop
stc
not
mov
addr16
je
sub
filds
push
fmull
loope
stc
push
adcl
xchg
pop
mov
add
inc
and
jns
inc
and
fdivp
or
addr16
out
fs
mov
pushl
push
sub
fbld
mov
sbb
idiv
ret
mov
lcall
mov
dec
or
loopne
push
mov
gs
rcrl
das
out
mov
das
mov
sub
mov
xchg
pop
pop
mov
pop
push
cmc
jb
add
les
and
adc
lods
int3
std
stos
aam
cwtl
push
adc
in
xor
ficomps
in
push
add
xor
sbb
jle
and
mov
push
xor
or
out
sub
sbb
jae
dec
fistpll
push
and
rcrb
leave
cmp
or
dec
and
outsl
sti
scas
mov
mov
fisttpl
fcmove
cmp
ret
insb
outsb
dec
mov
js
outsl
mov
clc
mov
and
jne
push
cmp
inc
inc
scas
ret
bound
lds
cmp
push
jne
xor
out
mov
sbb
stos
dec
rcr
cmpb
ss
xchg
sub
or
insb
in
mov
mov
test
adc
jne
es
mov
mov
xor
xlat
fldl
or
adc
inc
dec
aaa
and
ja
out
and
pop
dec
xchg
xchg
jp
push
stc
push
popa
add
lock
fists
mov
dec
scas
xchg
repz
cmp
inc
cmpsb
sbb
repz
imul
and
sbb
dec
sbb
pop
repnz
pop
out
mov
cmp
sub
rclb
push
aaa
fisubs
clc
dec
call
scas
xchg
insb
insl
lock
arpl
push
inc
xchg
push
cmp
ds
test
movsl
inc
push
xor
ror
scas
jb
jecxz
jg
mov
jnp
push
sub
jno
xchg
push
out
mov
push
cmp
mov
adc
xchg
or
sbb
mov
pop
and
and
adc
mov
lret
fwait
sub
dec
pop
mov
inc
lods
xlat
cmc
aas
mov
pusha
xchg
dec
jns
and
faddl
jbe
sub
pop
into
xor
fldl
ja
cmp
jne
fists
mov
add
and
cmp
outsb
pop
jmp
test
sarl
sti
in
outsl
int
sbb
out
adc
imul
mov
inc
rol
dec
push
test
pop
cmpsb
jbe
push
pusha
stos
stos
lds
mov
or
test
dec
daa
fwait
inc
mov
sub
rcll
jecxz
mov
and
mov
ljmp
loopne
out
movsb
add
add
shr
imul
insl
sub
pop
cld
popf
loopne
pop
push
and
mov
popa
dec
jno
inc
stc
das
out
sbb
cmp
inc
scas
jge
or
gs
movsl
or
aaa
mov
or
fsubrs
pop
mov
outsl
insl
xor
test
sub
adc
ret
loope
and
dec
jno
stc
fsub
sub
jbe
xchg
xchg
imul
jns
rclb
jg
and
rcrl
adc
and
and
out
iret
mov
stos
filds
iret
cmp
jo
arpl
fimull
xor
xchg
out
ss
mov
add
addr16
pop
xchg
pushf
pop
pop
mov
jbe
dec
push
mov
inc
repz
xor
add
leave
fucomip
cwtl
mov
popa
out
int
push
test
fwait
pop
push
mov
adc
insb
push
or
test
or
sub
xchg
inc
lret
mov
std
ljmp
sub
in
inc
cmp
into
pop
mov
aad
mov
push
les
insb
popf
mov
pushf
jmp
sub
dec
adc
stos
inc
ret
adc
pop
mov
xchg
movsl
popf
jge
ja
sbb
ret
push
das
cmp
and
jnp
sbb
push
fs
imul
das
mov
jp
imul
jle
and
mov
xchg
pushf
nop
push
rol
nop
push
mov
movsb
popa
insb
mov
xchg
fsubrs
scas
mov
pop
ret
outsb
nop
pop
ss
jnp
rol
test
pushf
mov
sbb
outsb
or
leave
adc
test
fisubl
xchg
mov
enter
jmp
cmp
xchg
shlb
adc
sbb
repz
mov
imul
rclb
cmpsl
mov
fsubl
out
jmp
xorl
test
xlat
inc
jns
mov
sbb
cmp
loopne
inc
or
lods
mov
mov
daa
pop
adc
addr16
mov
xchg
push
sbb
sbb
cmp
imul
xchg
push
loop
lcall
mov
xchg
push
sub
lds
dec
inc
add
dec
lret
mov
nop
push
jno
insb
leave
mov
inc
lret
int3
icebp
stc
or
sub
mov
out
stos
mov
xor
pop
cmp
popa
in
jle
and
orb
ret
xchg
mov
maxps
sti
shll
sub
daa
jge
jmp
jbe
shll
sub
push
in
out
mov
adc
mov
xchg
stos
xor
push
ret
cs
ret
jmp
xor
adc
push
jne
inc
or
les
dec
mov
sbb
mov
in
stc
lcall
cmp
cmp
inc
loop
mov
sbb
pop
hlt
lds
mov
std
test
andb
push
fsubrl
cmpsl
and
sahf
scas
fld
jmp
clc
sbb
ljmp
inc
into
adc
mov
fldenv
jl
out
mov
ds
push
pop
sbb
cwtl
dec
jge
mov
iret
mov
popf
adc
nop
mov
bound
mov
popa
test
xchg
arpl
inc
bound
cmp
mov
jmp
fnsave
lret
js
and
or
das
ja
push
movsl
enter
aaa
adc
imul
inc
cmp
loop
sbb
repnz
jge
sub
and
je
mov
mov
mov
add
sahf
popf
js
mov
pop
mov
add
mov
push
adc
popf
mov
mov
test
scas
cmp
stc
mov
fistps
cwtl
mov
sub
pop
pusha
xchg
xor
ss
dec
pusha
decb
dec
cli
inc
push
add
and
push
mov
movsb
sub
mov
into
mov
add
js
dec
mov
arpl
mov
ds
mov
mov
push
or
mull
mov
pushl
mov
iret
and
xor
out
jmp
out
sbb
xchg
loop
rcrl
mov
xchg
sub
adc
push
xchg
ljmp
data16
imul
mov
call
add
mov
add
sbb
xchg
mov
mov
or
mov
aas
repnz
mov
lods
adc
and
aam
push
and
cltd
mov
fs
in
and
cmpsb
push
mov
mov
sarb
out
call
jmp
mov
fiadds
test
xchg
outsb
mov
mov
cmp
std
shrl
sbb
jns
lds
and
push
imul
iret
add
mov
or
daa
pop
push
out
pop
xchg
dec
aad
adc
pop
fisttps
movsb
sarb
and
or
sarl
add
push
mov
push
fnstenv
inc
and
aaa
pop
stos
mov
cmpsb
inc
adc
sub
mov
xchg
jge
fsubrl
pop
bound
xchg
frstor
push
aas
adc
insb
icebp
in
and
aam
js
pop
mov
mov
in
rol
sti
gs
sub
aas
loope
icebp
dec
or
push
xor
jge
xchg
xchg
mov
mov
dec
data16
aad
sti
sbb
mov
mov
fprem
mov
jnp
insb
ds
xorb
fisubrs
addl
xchg
dec
jmp
stos
outsl
lret
push
jge
pushf
insl
xchg
jg
dec
clc
jmp
leave
inc
lock
cmp
fsubs
lods
test
or
cmp
pop
adc
popa
mov
cmp
dec
xor
adc
add
push
dec
loope
push
aaa
ret
iret
lret
out
adc
dec
push
cmp
lea
aam
andb
push
movsb
push
sub
adc
mov
orb
sub
push
popf
movsl
hlt
addb
mov
mov
add
pop
ljmp
add
dec
clc
gs
repz
inc
imul
jb
xchg
repz
mov
lods
mov
or
fsubrl
dec
imul
dec
dec
mov
sub
daa
and
inc
ret
xchg
jp
or
dec
jl
lods
inc
pop
mov
ffreep
dec
imull
xor
rcrl
inc
jno
mov
lret
sbb
mov
jbe
rorb
dec
cmp
add
xor
xchg
aad
lcall
push
adc
dec
xchg
mov
test
inc
inc
clc
push
iret
jp,pn
hlt
test
mov
push
dec
icebp
cmp
daa
fadds
scas
insl
mov
addr16
shl
scas
clc
hlt
adcb
dec
inc
cmp
addr16
sub
pop
pop
lahf
loope
mov
lret
shlb
mov
adc
addl
mov
fwait
jmp
and
ss
cmp
mov
mov
mov
cmp
dec
xchg
repnz
ss
jbe
inc
scas
dec
outsl
xchg
das
jae
bound
stos
andl
inc
icebp
outsb
dec
dec
jg
loopne
pop
sbb
mov
mov
xorb
test
out
adc
stc
out
nop
fsts
imul
and
jae
xor
jbe
out
ss
dec
push
cmp
jbe
loope
jle
mov
mov
inc
imul
and
mov
mov
cmpsb
fsubrl
jns
mov
mov
dec
cltd
mov
adc
push
loope
shrb
sbb
ror
jge
mov
nop
pop
push
xchg
clc
adc
sub
jmp
cmpsl
inc
int
adc
xchg
in
lcall
cwtl
jle
add
jg
ds
test
imull
pushf
pop
pop
dec
hlt
pop
daa
icebp
insb
fcoms
leave
add
mov
jle
pop
mov
inc
sub
ss
sub
add
nop
add
sub
lods
arpl
imul
fnstcw
pop
call
xor
mov
mov
dec
add
add
bound
enter
sub
cmpsb
push
in
clc
arpl
imul
lcall
mov
sub
push
add
ds
cltd
xchg
les
ret
fsubrp
sbb
xor
popl
xlat
aad
pop
jb
ljmp
xor
pop
mov
pop
pop
pop
push
xchg
test
sbb
movsl
sbb
and
cmpsl
jmp
push
xchg
cmp
inc
pop
add
and
cli
es
aaa
mov
push
and
cmp
and
cmc
sub
jle
into
loopne
xchg
mov
xor
int
push
pop
jae
sbb
mov
adc
scas
mov
std
repnz
out
iret
scas
sub
mov
arpl
mov
sub
lea
notl
cmp
ret
push
mov
sbb
mov
shlb
push
or
bound
xchg
leave
or
push
jbe
xchg
call
loopne
add
ret
jp
and
and
rorl
sti
xor
push
mov
jb
sbb
sub
je
sti
test
sarl
dec
test
xor
ret
test
jg
loope
jp
cmpsl
shrb
sahf
mov
jbe
add
fcomp
or
test
ret
xor
mov
leave
push
push
mov
inc
ret
or
mov
xchg
aaa
in
xchg
push
cmpsl
es
div
cmp
scas
or
adcl
mov
repnz
xchg
ret
pushf
cmpsl
imul
hlt
rcl
mov
arpl
popa
mov
icebp
les
mov
out
sbb
repz
sbb
push
bound
cli
cli
stos
mov
fbstp
adc
in
jne
fs
cwtl
xchg
ljmp
inc
shll
mov
push
jnp
pop
ja
adc
fldt
nop
mov
pop
add
sub
test
push
adc
ret
cmp
test
mov
dec
je
icebp
popf
repnz
repnz
outsb
add
ret
or
add
inc
push
xor
fisttpl
fs
cmpsl
ljmp
mov
in
ss
movsl
inc
jnp
loopne
mov
ja
mov
pop
dec
addr16
sub
pop
ret
flds
mov
jecxz
inc
add
dec
cmc
mov
adc
cmp
sub
jb
mov
inc
insb
jle
loopne
stc
idivl
adc
fmuls
aaa
adc
xchg
addr16
int
out
dec
or
jns
xchg
mov
xor
push
or
in
addl
cmp
insl
aas
insb
jle
aaa
shll
inc
mov
push
rcrl
jle
xor
lock
out
cwtl
or
imull
push
shlb
test
repnz
js
pusha
pushf
int
or
dec
outsl
inc
mov
sbb
int3
lahf
push
push
adc
or
repnz
push
and
ret
leave
lock
test
leave
push
and
in
addl
and
call
pop
mulb
ficoms
je
xchg
cmpsb
lods
cmpl
push
sub
jmp
sarl
sahf
sbb
pop
daa
and
mov
push
outsl
push
push
outsl
movsb
dec
lods
cmpsb
push
xchg
dec
test
int
das
inc
sbb
adc
inc
cli
mov
sbb
add
test
jl
ja
dec
lret
lock
adc
int3
adc
mov
pop
lcall
jle
xchg
inc
add
das
arpl
test
push
std
test
les
mov
mov
xchg
test
jle
sbbl
pop
inc
xchg
orb
cmc
cmpsl
fs
cmp
out
xor
push
xor
outsl
call
fistps
adc
cli
dec
popf
std
test
xchg
mov
mov
mov
cltd
push
xchg
mov
cld
mov
add
cmpsb
cmp
fcmovnu
mov
add
out
mov
test
cmp
pop
nop
test
mov
pop
fwait
xlat
rolb
lods
bound
inc
mov
lock
orb
cmpsb
jo
arpl
sub
fiaddl
xchg
pop
adc
lea
add
add
add
gs
andb
insl
aad
pop
arpl
cli
test
and
pop
in
lahf
insb
jmp
xchg
iret
jne
sbb
mov
xchg
movsb
mov
xchg
pop
scas
nop
pop
daa
mov
or
jp
nop
jb
int3
loopne
test
cmp
sbb
mov
stos
pop
ds
pop
enter
add
inc
sub
fadds
ret
mov
ja
lahf
bound
inc
mov
rcrb
fwait
in
les
mov
fidivl
adc
push
mov
bound
mov
pop
xor
mov
or
and
dec
sbb
or
jle
dec
push
ds
push
cmp
int3
in
jo
push
add
daa
mov
xchg
and
lahf
hlt
adc
mov
xchg
dec
xorl
push
add
add
and
xor
aas
xchg
je
mov
mov
lret
test
or
leave
mov
les
imul
mov
pop
mov
add
mov
cmp
sub
jmp
pusha
jbe
pop
mov
and
push
lcall
mov
push
daa
test
inc
ja
inc
sbb
xchg
xor
pop
adc
adc
and
fs
daa
test
xor
int3
std
movsl
sub
jno
sarl
cmp
push
mov
daa
add
dec
stc
je
mov
fstp
aam
mov
dec
xchg
sbb
jo
lahf
aam
imul
pop
lock
int3
add
pop
inc
mov
stc
ret
movsb
xchg
shrb
cwtl
rcrl
insb
movsb
rorb
outsb
sbb
push
add
pop
xchg
sti
xorb
loop
sub
daa
lods
pop
sbb
mov
cmpsl
sbb
gs
insl
push
jmp
outsl
cwtl
je
cmpsl
pusha
test
xchg
movsb
push
mov
shll
push
dec
mov
mov
iret
inc
jb
inc
rcrl
adc
ja
lock
lods
imul
sar
cltd
jo
cmp
pop
sbb
lcall
add
aas
mov
push
sub
aas
pop
jae
in
ds
jle
das
bound
in
push
push
mov
jne
mov
xor
inc
adc
popa
push
lret
ret
clc
sbb
mov
cltd
sbb
loopne
mov
cmp
imul
dec
sbb
jae
cwtl
dec
jbe
jmp
xor
stc
idivb
lret
mov
mulb
cwtl
xchg
xor
clc
cmp
sbb
xchg
or
xlat
dec
inc
int3
dec
stos
mov
stc
ret
mov
scas
mov
mov
dec
pop
imull
push
mov
in
jb
out
fs
lea
xor
in
ljmp
push
mov
add
popa
adc
lahf
xor
mov
loop
adc
cmpsl
sbb
movsl
in
dec
ljmp
aaa
fstpl
jge
sahf
rclb
loope
mov
bound
jl
fwait
std
add
gs
pop
ret
enter
test
jle
mov
aaa
popf
pushf
jmp
push
add
mov
adc
mov
push
pushf
test
lods
jp
nop
test
and
fisubl
clc
and
lahf
stc
adcb
xor
cmc
jge
lahf
std
push
cmpb
inc
mov
xor
xchg
aaa
mov
xor
jecxz
mov
sbb
jns
test
fisttpl
inc
movsl
ss
arpl
test
test
xchg
popf
addr16
popf
add
out
or
mov
lods
mov
cld
jnp
data16
leave
push
and
xchg
mov
push
fwait
lret
dec
sub
push
add
repnz
dec
fstpt
pop
imul
xor
jno
inc
mov
mov
mov
sbb
jne
cmc
adc
dec
aas
xchg
cs
repz
push
xchg
cmpsb
faddl
or
js
inc
cmp
test
ficomps
mov
xor
popf
repnz
scas
cld
aas
adc
inc
cmp
enter
pusha
pusha
sar
adc
std
mov
imul
xchg
lret
fiadds
aas
mov
xchg
aam
sub
dec
cwtl
lahf
xchg
je
icebp
mov
adc
sbb
inc
or
push
inc
lret
adc
out
jno
out
incb
mov
into
xchg
dec
cli
aas
cmc
jae
add
mov
test
cmp
cmp
or
addr16
out
mov
fcmovne
lods
or
setb
push
mov
cs
data16
mov
fsubr
shl
sahf
sbb
pop
cltd
loop
and
cmpb
stos
ljmp
into
mov
jns
push
jge
push
or
push
shll
ss
xor
pop
mov
imul
iret
cmp
mov
mov
call
push
lret
lcall
adc
jg
add
lret
jbe
xchg
mov
mov
inc
testl
jg
adc
sbb
xor
lret
cmc
imul
jno
jl
sbb
out
sbb
xchg
add
pop
pop
pop
inc
imul
loop
lret
pop
pop
pusha
dec
imul
dec
jns
xchg
xchg
cmp
out
lret
cwtl
lds
das
cmp
xchg
and
mov
popa
xor
fs
stc
mov
shll
popa
pop
xor
aaa
push
jl
shll
dec
jae
loope
and
imul
dec
ja
xor
out
das
mov
mov
lret
push
push
test
mov
mov
int3
sahf
jbe
sbb
cmp
insb
add
xchg
xor
dec
add
addl
mov
int3
fmull
mov
xor
stc
sub
mov
mov
mov
shrb
loopne
push
sbb
or
rclb
push
roll
call
xor
jge
ret
int
arpl
lahf
mov
psubusb
push
inc
jl
pop
mov
fwait
data16
push
lret
mov
or
inc
in
sete
cli
repz
mov
js
hlt
push
icebp
dec
sbb
nop
js
push
mov
jbe
int
fsubrp
fwait
test
leave
jb
mov
rcrl
jle
xchg
cmp
inc
mov
ret
jnp
movsb
int3
hlt
inc
mov
test
sbb
pop
imulb
repz
xor
sarl
shl
xchg
cwtl
push
jg
and
aaa
sbb
push
outsl
jns
or
lods
sarb
add
mov
xchg
mov
add
aad
pop
jns
mov
cmp
mov
cmp
pop
jo
je
mov
in
cmp
ljmp
and
iret
lahf
les
push
sub
and
daa
jno
ljmp
ds
push
mov
loopne
xchg
rcrb
insl
aad
shll
ret
xchg
mov
aaa
cmc
pop
dec
adc
jne
jns
mov
gs
es
jl
adc
out
push
mov
xchg
sub
pushf
fsub
sub
xor
pop
xchg
fbld
cmp
push
cmp
xchg
jae
and
cwtl
insl
outsb
lret
ljmp
sbb
les
push
and
sub
in
movsl
add
lret
sbb
or
pop
imul
mov
js
sub
stos
dec
call
dec
cli
mov
adc
in
mov
ret
sbb
xchg
mov
and
mov
cmp
cltd
mov
push
mov
ret
fabs
add
and
cmpsl
inc
add
pop
shll
fistpl
jecxz
fldcw
pop
jne
mov
or
dec
mov
push
pop
and
adc
repnz
push
pop
dec
sbb
ljmp
jns
jns
cwtl
sub
cld
bound
outsb
sub
sbb
cmp
fldt
test
adc
lahf
mov
outsl
test
adc
subb
addr16
adc
or
je
fwait
mov
mov
mov
mov
adc
ret
inc
sbbb
dec
mov
sbb
inc
sub
sub
data16
sar
cmp
mov
mov
js
insl
divb
jle
loope
cmp
mov
imulb
inc
or
sub
xchg
ja
adc
shll
in
lods
leave
ds
push
sbb
fs
imul
and
ficompl
and
aas
stos
mov
cmp
jl
in
xor
jecxz
xchg
cltd
shrl
push
sub
push
int3
cs
push
adc
sbb
sbb
psraw
repz
lret
and
stos
mov
and
xor
sbb
gs
xchg
call
sbb
pop
int
push
inc
sub
and
pop
add
add
loop
cmp
xor
mov
rclb
shrl
js
into
sub
xor
inc
inc
aad
es
push
js
lods
decl
sub
jecxz
int
movsb
ss
test
cmc
sub
cld
xor
in
lea
test
and
imul
adcl
in
in
insb
in
shr
stos
push
xchg
xor
sub
add
loopne
data16
pop
cmp
jae
mov
sbb
call
into
pusha
jmpw
mov
orb
pushf
mov
fs
mov
scas
lods
pop
es
popf
shrl
xor
adc
push
mov
mov
nop
loopne
mov
sarb
sbb
jecxz
and
sbb
je
aaa
push
sub
xchg
insl
mov
fadd
imul
gs
dec
push
dec
inc
out
aam
test
mov
push
fnstsw
les
push
shll
pop
mov
push
mov
setge
mov
icebp
mov
leave
lds
out
lock
xchg
arpl
rcll
imul
cmc
cmp
sete
add
shr
xor
es
cmc
icebp
ret
inc
dec
imul
jbe
jmp
jbe,pt
xchg
mov
cmp
test
lods
movsl
aam
and
movsb
cmpsb
movsl
and
pop
dec
pop
shr
or
and
test
dec
int
dec
sbb
popl
mov
and
aad
xor
incl
out
sbb
sarl
int3
fldt
ja
das
pop
scas
loope
xor
leave
dec
das
mov
or
leave
pop
lret
rcrb
stos
sub
xchg
add
dec
nop
movl
add
jl
xor
push
adc
lret
jge
hlt
pop
cmpsl
and
push
inc
sub
ret
ret
jl
mov
call
test
xor
xchg
popf
adc
xor
fists
fstps
pop
push
sbb
scas
cmp
lea
stc
loope
test
mov
push
das
mov
xlat
pop
stos
rcr
bound
xor
dec
push
xor
and
jno
cltd
mov
sub
insl
adc
mov
cmpsb
xchg
add
xchg
insb
add
mov
mov
lahf
jb
pop
das
push
test
test
cmp
test
sub
fs
out
fwait
inc
jg
out
inc
push
dec
into
sahf
fisttpll
imul
lock
mov
testb
mov
inc
imul
jns
dec
add
das
lahf
mov
xor
cmp
jno
out
inc
sub
jmp
mov
adc
adc
js
jnp
lret
push
in
push
mov
pop
push
xor
mov
fistpll
pop
es
push
mov
jno
xlat
lcall
xor
or
xchg
and
xchg
stc
or
push
mov
es
and
pop
sbb
jo
xchg
cmp
aas
sahf
sub
ss
jecxz
dec
jnp
test
jno
pop
loop
add
shll
das
mov
mov
cmp
push
jge
jo
pop
xchg
mov
push
mov
out
loope
and
xchg
popf
cmpsl
fildl
test
lods
jo
repz
int3
push
and
movsl
xchg
jbe
lret
cmpsb
add
popf
pop
lods
in
pop
pop
lret
je
stos
jmp
lock
mov
es
int
xchg
lods
sbb
push
mov
lea
xchg
clc
xchg
clc
sub
ss
jg
or
adc
mov
jp
loope
fsub
scas
idivl
xchg
je
adc
inc
out
add
adc
push
jle
repz
movsl
imul
adc
jno
or
daa
mov
mov
rcl
xchg
push
or
push
jg
sbb
mov
push
cmpsb
sbb
add
dec
mov
in
mov
push
mov
nop
dec
sarl
or
and
lods
pop
roll
daa
dec
lahf
sub
out
add
mov
xchg
jno
mov
and
add
loopne
cmp
push
and
sub
rclb
out
sub
jb
cmp
xchg
out
push
gs
sbb
mov
jg
sbb
mov
pop
sbb
adc
pop
mov
das
test
stos
cwtl
adc
adc
ja
push
shlb
notl
into
cli
fwait
lock
add
adc
mov
or
std
adc
mov
xor
out
lock
imul
or
rcrl
cmpsb
or
pop
push
mov
jl
adc
dec
lds
rcll
ss
jle
aaa
gs
jge
outsb
aas
sbb
cmpsb
inc
in
subb
rdtsc
jg
loop
mov
mov
insl
mov
push
mov
repnz
aaa
inc
and
arpl
cmp
lods
sahf
repnz
sbb
pushf
pop
mov
repz
clc
sahf
cmp
cmp
xchg
mov
mov
inc
mov
jge
push
scas
mov
xchg
cs
pop
fadd
inc
jge
and
fwait
xor
aad
mov
and
jae
fsubs
mov
dec
in
jg
fdiv
enter
pop
pushf
repnz
lret
into
adc
rclb
push
jmp
jg
aam
and
xor
push
jecxz
push
pop
shll
adc
out
insl
mov
shl
cmpsl
add
mov
lea
push
int3
jnp
adc
dec
dec
sti
call
test
lock
ljmp
or
out
dec
xchg
mov
es
mov
mov
por
lret
enter
fnop
add
aaa
fmuls
or
mov
adc
call
into
xchg
mov
inc
ljmp
rorb
sahf
jl
outsl
jl
jg
or
test
iret
nopl
push
push
mov
mov
mov
push
mov
cs
hlt
dec
mov
push
test
fisubrs
icebp
sub
js
cmp
fistpll
push
aas
mov
push
or
movsl
icebp
sub
arpl
jnp
cld
sub
adc
inc
mov
sbb
xchg
and
pop
pop
ja
lods
xchg
cmp
xchg
sub
sbb
or
dec
cwtl
jnp
aad
mov
mov
dec
iret
js
jle
stos
outsl
xor
xor
stc
repnz
xorl
xchg
xchg
xchg
ror
push
dec
adc
fcompl
push
mov
fidivrl
cmc
cwtl
in
imul
jae
inc
sub
add
out
fcompl
pop
call
push
nop
std
hlt
cli
jo
cmpsb
mov
jge,pt
pop
scas
repnz
insl
cmp
shr
shlb
mov
rolb
cltd
inc
fs
sbb
rclb
adc
hlt
movsl
or
mov
xchg
xchg
and
mov
sbb
push
push
jp
cmpsl
and
rclb
mov
xchg
les
pusha
xor
adc
in
xor
add
jns,pn
or
stos
mulb
adc
mov
and
jmp
or
mov
mov
pop
ret
jmp
xchg
xchg
mov
jnp
mov
add
cmp
cwtl
push
jne
cmp
mov
in
and
loop
jmp
out
popa
popa
data16
test
mov
mov
push
jne
insb
lods
outsb
loopne
dec
mov
fwait
lock
adc
cmc
pop
cmp
daa
xor
jmp
adc
fldl
and
mov
addr16
mov
jb
push
ret
jmp
lret
neg
push
mov
push
mov
out
inc
loopne
sbb
adc
cs
aam
in
test
ja
int
aaa
cmpsl
movsl
xchg
jmp
inc
inc
hlt
mov
mov
jns
stos
mov
or
clc
out
daa
addl
jnp
xchg
inc
xchg
mov
push
pop
sahf
push
ja
pusha
ljmp
xlat
loop
jne
sbb
cmpsl
lock
pop
gs
sahf
and
mov
subb
jo
push
push
push
mov
dec
push
ljmp
rcr
jg
js
dec
in
data16
pop
cli
jbe
ds
lret
int
pushf
repz
jb
sub
push
int3
xor
pop
data16
xor
pop
aas
cltd
cli
push
jl
or
pusha
cmp
mov
sub
mov
push
pop
push
in
mov
jmp
mov
inc
or
adc
sbb
push
in
gs
jmp
lret
mov
negb
nop
test
push
mov
sub
sub
mov
pop
lahf
jb
insb
in
outsl
jg
xchg
jle
setp
mov
fcoms
daa
fildl
repz
pop
popf
mov
lods
jg
mov
xchg
adc
shl
jg
bound
imul
lea
frstor
scas
pop
imul
mov
adc
dec
jecxz
jns
fldenv
sub
gs
jmp
sbb
sbb
xchg
mov
cmpl
fimull
dec
fcmovnbe
negl
je
fiaddl
nop
in
add
popf
or
into
psrlw
xor
call
inc
mov
mov
pop
movl
jmp
xchg
addr16
hlt
int
xor
ljmp
mov
sub
xor
fldl
call
and
js
dec
lea
push
inc
decb
ret
sub
outsl
fwait
test
mov
aaa
push
addl
aam
int3
mov
dec
xchg
lods
dec
inc
out
arpl
push
int
mov
mov
and
out
pop
lock
xor
pop
sbb
cmpsb
iret
mov
mov
jnp
rorl
push
mov
mov
pop
addr16
in
imul
lret
mov
or
outsl
insb
mov
add
push
lock
sbb
xchg
mov
in
out
gs
insb
das
push
xor
ljmp
jmp
test
and
xor
add
mov
aam
xchg
cmp
mov
sbb
popf
fadds
push
pop
xchg
nop
cmp
jle
or
pop
xchg
andl
push
lcall
aad
jae
fwait
xor
xor
inc
into
outsb
aas
or
and
in
fisubs
es
lods
mov
and
enter
xor
push
pop
mov
enter
add
xor
fnstcw
outsb
mov
scas
mov
xor
jmp
xor
xor
lret
jnp
les
xchg
and
in
jg
xchg
stos
dec
sub
sub
mov
sbbb
pop
movsb
cmp
fstl
es
or
ss
aas
shrb
xchg
xchg
mov
pop
adc
call
out
std
pop
adc
sub
enter
jne
into
or
lahf
fs
jg
loope
jne
repnz
lea
vrsqrtss
mov
outsl
pusha
or
fs
cmp
iret
outsl
pop
fucomp
pushf
jno
gs
jb
or
cmp
or
jp
jae
add
ret
push
xorb
fldcw
cmp
xchg
das
enter
and
pop
pop
xchg
fsubrl
sbb
push
xchg
imull
mov
lods
aam
sub
cs
stos
and
xchg
mov
pop
xchg
pop
adc
cmp
cld
sbb
pop
pusha
pop
pusha
rcrb
pop
sbb
int3
push
sbbb
ds
out
and
and
mov
test
push
iret
aad
push
inc
lods
shl
adc
xor
shl
in
cmpsb
inc
lods
jl
dec
incl
mov
xchg
notl
imul
shrb
pop
sbb
jge
mov
sub
dec
mov
or
cmc
adc
jge
clc
aaa
xor
cmp
pop
xchg
mov
push
xchg
scas
shrl
and
imul
int3
js
mull
insb
cmpsl
mov
mov
lods
pop
xchg
add
and
ret
sarl
jbe
ret
ja
pop
cmc
loope
mov
dec
je
xchg
adc
or
push
ja
adc
mov
insb
xlat
idiv
fstpt
push
or
daa
loop
and
adc
cli
rorl
cwtl
cmp
stos
cmp
pop
sahf
jne
cmp
add
dec
xchg
loope
sahf
jns
aas
ss
aas
aaa
or
sti
rcrb
push
mov
in
adc
bsf
fistl
stc
add
adcl
andb
sti
xor
or
or
mov
fs
lcall
and
pop
repnz
daa
movsl
mov
push
adcb
fiaddl
pop
dec
sahf
rcr
pop
out
or
push
jmp
test
and
sub
mov
out
test
mov
push
repnz
icebp
cs
sub
jne
mov
js
xor
dec
outsl
cmpsl
xchg
push
cwtl
popa
pop
inc
jecxz
fsub
xchg
jmp
scas
sahf
mov
mov
cmp
xchg
cwtl
jnp
jp
xchg
lret
outsb
js
xchg
sahf
and
push
test
orb
rcrb
jmp
adc
xor
insb
popa
pop
test
sbb
dec
add
dec
or
jb
cmpsb
out
popf
mov
sub
push
cmp
movaps
xor
aaa
push
push
mov
fdivrl
mov
imul
outsb
mov
add
clc
shr
loopne
jmp
js
shlb
out
imul
sahf
ret
inc
clc
mov
pop
mov
add
test
js
dec
out
push
fistpll
popf
xchg
jae
lahf
cmp
pop
test
sarl
orl
or
xchg
xor
add
pop
dec
pop
cli
loop
pxor
mov
sub
mov
xchg
or
pop
ja
xchg
scas
lret
inc
inc
test
jbe
mov
dec
loope
shll
test
sub
pop
pop
dec
test
pusha
mov
fistpll
js
inc
stos
jp
sbb
push
in
lock
bound
xchg
mov
pop
jns
jmp
in
and
push
inc
pop
inc
pop
and
inc
cltd
xchg
inc
cwtl
pop
pop
push
lds
xor
or
loopne
shl
insb
int
pop
sub
adc
sbb
jbe
and
mov
imul
mov
mov
xor
add
and
push
sub
pop
dec
mov
test
xchg
imul
cmpsl
dec
pop
sti
mov
pop
mov
dec
xchg
pushl
insl
mov
mov
bndstx
jp
repz
sub
dec
or
push
inc
sub
stos
cmpsb
mov
sahf
adc
xchg
mov
test
xor
pop
and
xor
jp
stos
dec
push
add
mov
sub
into
fcmovnbe
push
sahf
pop
std
mov
mov
mov
loop
adc
inc
dec
add
inc
scas
pop
addr16
jp
dec
and
lret
icebp
jns
push
ret
into
ds
xchg
adc
sbb
jecxz
mov
outsb
add
and
mov
ss
pop
inc
push
insl
pop
pop
or
scas
pop
cltd
xchg
test
rorb
adc
shl
jg
xchg
sarb
ss
hlt
ljmp
jmp
dec
mov
jg
sub
xchg
es
xor
add
cld
std
add
mov
das
into
fs
push
insb
adc
pop
inc
dec
dec
test
cmovne
std
daa
fisubl
iret
test
ficoml
inc
out
mov
sbbb
in
lods
lea
pop
mov
and
sti
shl
mov
pop
push
cltd
xlat
pop
addr16
cmp
outsb
sub
lahf
mov
mov
or
cmp
mov
clc
rorl
lea
subl
mov
mov
lret
cli
out
mov
mov
push
sub
into
imull
clc
pushf
or
mov
xorl
outsb
fucom
insb
pop
xchg
mov
out
decb
scas
cmp
adc
fsubs
movsl
rcrl
pop
es
xor
pusha
fsubrp
and
adc
mov
imul
pop
fwait
jae
fistl
mov
mov
sbb
and
fsub
cmp
jne
xchg
out
xchg
mov
dec
add
mov
jno
xlat
mov
in
call
fadd
addl
push
movsb
jle
fsubl
pop
cmp
out
inc
loopne
insl
sbb
lcall
xor
fdivrl
cmp
mov
mov
out
daa
out
push
jl,pn
or
test
push
popf
ret
jecxz
jp
xchg
aad
lds
mov
addl
pop
xor
jp
pop
mov
inc
xor
adc
repz
ljmp
inc
jle
push
jbe
dec
out
sahf
cmp
cmp
int
mov
jecxz
into
jmp
imul
pop
sti
loopne
ss
mov
sbb
mov
outsl
lods
ss
loope
pushf
mov
xor
mov
mov
scas
push
sub
push
pop
lea
shlb
fnstsw
rcll
ret
mov
je
cmp
nop
pusha
pop
stc
pop
aam
scas
insb
xor
testb
dec
or
jmp
fmuls
xor
cwtl
movsl
add
dec
aas
aad
jge
arpl
add
shr
push
xor
cmovle
fstps
cmp
in
mov
and
mov
out
fcomip
add
add
and
orl
inc
testb
jne
sub
push
pop
lretw
jecxz
es
jae
xchg
sub
pushf
xchg
mov
push
cmp
adc
pop
insb
ret
push
cmpsl
in
les
inc
out
adc
adc
mov
data16
ret
xchg
mov
sbb
jp
in
mov
sub
mov
pushf
or
lret
fmul
or
fiaddl
test
movsl
data16
test
mov
dec
push
mov
pop
ret
aad
in
test
sbb
mov
pop
movb
ja
subb
mov
fcoml
scas
xchg
out
adc
mov
rcll
xor
jg
mov
outsl
inc
in
daa
movsb
aad
fcmove
les
insl
cs
jnp
pop
test
jp
aad
cmp
jp
fs
in
repnz
repz
dec
jne
sbb
cltd
or
add
dec
in
outsb
and
jp
adc
cwtl
movsb
movsb
xor
pop
testl
repz
loope
daa
scas
outsl
push
das
lahf
roll
or
cmp
aaa
outsl
fbstp
pop
les
dec
loopne
mov
xchg
xor
sahf
push
dec
mov
dec
mov
sbb
lock
jnp
xchg
sub
cltd
xchg
icebp
rcrb
loope
popa
and
mov
pop
lods
notb
jmp
sbb
push
es
or
jnp
push
sti
xorb
fwait
rcrl
popa
std
loopne
xchg
cld
jne
xor
aas
and
jb
sub
sub
xchg
add
dec
xchg
ud1
mov
scas
enter
mov
xorb
shrl
jmp
mov
sbb
inc
ljmp
nop
mov
push
push
mov
xor
out
pop
scas
xchg
iret
std
lock
cmp
outsl
mov
dec
adc
stos
jmp
xor
jne
into
pop
dec
imul
sahf
jp
sbb
inc
ljmp
sub
pop
shr
subl
jp
loop
cmp
daa
mov
unpckhps
ja
inc
push
rcll
sbb
push
bound
loopne
bound
nop
cmp
jbe
sub
imul
fsubr
xlat
sub
push
jge
andb
dec
xor
les
mov
xchg
loope
push
lods
push
stc
jb
aaa
add
sub
lea
jno
fdiv
sar
gs
sbb
mov
divl
jno
pop
push
xlat
adc
addr16
sub
mov
add
outsl
dec
or
mov
pop
adc
out
int3
les
sbb
jmp
addr16
mov
ficomps
mov
cmp
dec
mov
sub
enter
mov
xor
inc
ret
in
mov
ret
mov
and
cltd
fs
jo
xor
mov
test
pop
test
add
mov
shrl
inc
mov
mov
repz
adc
or
es
sbb
sbb
cli
jb
mov
enter
in
les
fisubrs
push
movsb
fnstsw
push
fidivl
insb
fstpt
test
mov
insb
fstps
sub
fsubrs
push
sub
inc
mov
cmpsl
repnz
jo
les
push
pop
call
movsb
mov
xchg
mov
adc
push
movsb
mov
mov
pop
loope
jbe
hlt
cmp
mov
scas
lock
adc
ffree
add
jg
mov
dec
sti
inc
ja
cmpsb
test
push
adc
or
pop
xchg
sahf
push
loop
js
fidivl
mov
pop
adc
xor
in
and
lods
leave
xchg
sub
push
dec
aas
mov
fstpl
sbb
cmp
add
cmp
je
push
pop
cmpsb
pop
subl
mov
jno
fs
dec
lea
mov
mov
sub
sti
cwtl
mov
xor
sbb
pop
sbb
cltd
insl
adc
cmp
cltd
jecxz
hlt
test
inc
or
inc
lret
mov
out
inc
xorl
and
inc
sub
push
out
mov
in
jp
lret
dec
mov
jb
mov
mov
repnz
cmp
fisubrs
cmp
das
imul
sub
pop
loope
mov
out
sarl
mov
xchg
and
mov
push
add
jb
and
es
and
jle
and
adc
dec
jnp
jl
outsl
ja
setle
pop
std
repz
clc
mov
sbb
sbb
ss
dec
adc
icebp
ret
aad
dec
adc
sbb
lea
pop
mov
fs
in
pushf
jge
clc
inc
popa
int3
jbe
aad
inc
sbb
es
aaa
add
sub
ret
test
and
dec
xor
aad
pop
mov
cmpsl
adc
add
jnp
mov
adc
int3
inc
mov
sub
fidivl
mov
cld
loopne
jg
mov
ret
aaa
push
mov
pop
pop
cmp
sbb
loope
push
fildl
push
sbb
pop
lret
leave
adc
xchg
in
outsb
rorb
fisttpll
test
and
dec
out
inc
insl
ret
push
cli
stos
cmc
add
icebp
pushf
adc
jb
hlt
push
insl
pusha
mov
mov
mov
cmp
test
push
or
cmp
pop
popa
pop
orb
lahf
mov
mov
dec
sbb
cmpsl
pop
mov
cld
int3
dec
and
loop
dec
pop
push
push
or
mov
loop
scas
jp
or
shlb
or
jno
imul
outsb
add
jge
sbb
cmp
out
mov
xchg
ds
xchg
xor
xchg
xchg
lea
fadds
mov
lods
dec
sub
cmp
and
scas
cmp
test
pop
out
inc
adc
in
inc
jb
scas
jo
sbb
pop
loopne
lahf
or
sub
leave
idivl
loopne
fcoml
pop
imul
sub
out
inc
adc
in
cwtl
fisttpll
lret
stos
or
add
jmp
popf
sub
pop
push
test
inc
loope
sbb
pushf
add
xchg
and
test
div
jp
adc
jle
js
push
sbb
xchg
sub
pop
fstpl
repz
sub
mov
mov
test
push
shll
sub
sub
movsl
push
fs
js
in
xor
int
fcom
mov
stc
loope
pop
jo
lods
dec
rcll
out
dec
and
scas
push
aad
mov
iret
sub
push
mov
jno
sbb
das
sbb
ret
loope
sub
xor
stos
push
xor
and
repz
stos
pushf
stos
push
mov
cmp
outsb
adc
xchg
popf
stos
lds
xor
and
xchg
insb
and
or
clc
fcoms
sub
jbe
sbb
xlat
jp
pop
shrb
dec
lock
in
aam
clc
cld
jb
jb
sbb
scas
repz
insl
pop
and
inc
sti
dec
daa
aam
fcos
pop
or
cmp
in
stc
inc
mov
popf
adc
and
inc
rcrl
aaa
add
iret
xchg
mov
int
mov
mov
cltd
cld
or
xchg
mov
addb
mov
mov
daa
mov
ret
mov
add
pushf
addr16
and
jno
adc
jne
test
xchg
pop
adc
xor
jae
loope
pop
imul
push
pop
jno
ds
fsubp
out
imul
adc
fdivrp
pop
jl
enter
dec
movsb
outsb
xchg
dec
xor
xchg
scas
push
xchg
out
adc
test
int
xchg
jmp
fbld
lahf
and
mov
popa
push
mov
push
in
mov
std
jb
cmp
pop
movsb
add
lahf
lea
aas
inc
xchg
stos
stos
push
push
cmpsl
dec
js
shrl
cmp
xchg
adc
mov
add
enter
cmp
lea
and
jp
mov
nop
fiadds
fmuls
scas
arpl
test
pop
jmp
cmp
inc
cmp
adc
fsubrl
dec
mov
push
pop
push
aam
outsb
jmp
into
jbe
inc
inc
mov
sbb
rcrb
into
adc
cmp
dec
jmp
cmp
push
leave
inc
jmp
scas
jns
rcrb
cmp
hlt
mov
loop
mov
shl
pop
add
push
add
xor
adc
mov
out
and
fwait
shlb
or
pop
fbld
xchg
rcll
lret
mov
sub
rol
push
call
in
enter
ja
sbb
inc
mov
dec
xor
xchg
test
je
repz
mov
lods
xchg
jb
cmp
or
cli
les
movsb
sbbl
sbb
and
cmpsl
in
std
int3
sbb
mov
setns
stos
icebp
int
movsl
std
es
fdivr
push
mov
lahf
stc
jns
imul
rcll
xor
mov
mov
in
inc
sbb
mov
imulb
cmpsl
add
push
or
xchg
add
imul
push
or
and
fs
mov
cltd
dec
add
sbb
bound
pop
aam
or
fcoms
lret
dec
out
push
pop
in
mov
pop
ret
dec
insb
sub
jg
sbb
cwtl
divl
cltd
fldenv
adc
rcll
cmpsb
enter
jl
inc
mov
adc
xor
lret
cmp
and
int
xchg
push
xor
pop
ds
adc
mov
xor
ret
push
in
fstpl
lea
stos
sub
jbe
or
scas
out
repnz
adcl
sub
movsl
dec
sbb
in
mov
adc
xchg
push
cmp
loopne
and
mov
adc
dec
scas
in
insb
dec
std
filds
cwtl
cmp
pushf
fldl
nop
mov
push
or
pop
negl
je
xor
jg
inc
add
add
mov
or
movsl
cmp
loope
movsb
shufps
pop
sub
push
mov
lock
loope
pop
mov
sbb
test
jecxz
cmp
test
call
xchg
test
push
mov
pop
xor
pushf
cmp
lods
loopne
and
ret
ficompl
xor
mov
orb
mov
mov
inc
fists
jmp
mov
lcall
xor
jmp
sub
mov
in
or
sub
mov
test
xchg
or
or
push
xchg
cmp
scas
sbb
cwtl
repnz
lods
scas
lock
inc
xor
mov
xchg
adc
lahf
movsb
or
mov
and
inc
fstpt
sbb
xlat
aaa
lods
mov
in
mov
clc
cmp
sahf
sbb
sbb
push
in
jmp
pop
sahf
xor
rclb
and
lahf
and
in
std
mov
mov
jns
fldcw
loop
icebp
stc
in
dec
mov
cmpsb
bound
cmp
in
push
add
inc
jecxz
push
mov
and
popa
mov
int
je
icebp
mov
test
or
jbe
dec
repz
repnz
pop
add
fcom
adc
xor
and
xchg
dec
xchg
sbb
insl
mov
inc
xor
inc
pop
out
lret
xchg
shl
stos
pop
popf
rcrb
scas
and
nop
or
lret
rcrl
inc
sbb
xchg
mov
int3
lea
popf
and
mov
lret
out
pop
pop
in
lods
incb
xchg
push
push
lock
inc
adc
cmp
rcrb
xorb
pop
loope
loop
sti
sub
lcall
add
sub
inc
mov
lret
lods
fnsave
mov
insb
push
int
es
sbb
sbb
sub
rclb
pop
das
push
fmuls
xchg
mov
fld1
adc
push
cmp
ds
in
push
cmp
sub
inc
cmpb
int3
inc
fdivrl
test
ljmp
push
adc
int
bound
mov
jl
loope
cmp
cmp
aaa
test
testb
dec
pop
stos
shl
xchg
jl
stos
mov
js
mov
add
imul
out
into
push
call
loopne
xchg
out
nop
adc
ret
and
jnp
sub
in
xchg
aad
call
jbe
xorb
xchg
adc
xor
mov
dec
push
push
push
xor
mov
sub
cmp
sbb
arpl
mov
sub
test
push
xchg
cmp
sub
add
xchg
loop
mov
sarb
sbb
pusha
icebp
add
adc
inc
sub
pop
mov
mov
inc
jg
std
dec
inc
mov
sarl
nop
adcb
ret
inc
mov
fidivrs
fsubrs
add
lahf
aam
in
jle,pt
or
mov
cmp
hlt
pop
pop
xchg
and
cmc
ret
rcll
dec
mov
ds
fldl
jns
mov
xor
mov
pop
sbb
scas
sbb
xchg
fisttps
push
pop
pop
xor
sbb
pop
xchg
cltd
add
xchg
mov
in
fisubrl
hlt
test
dec
inc
das
leave
mov
sub
stc
outsb
adc
xchg
push
mov
dec
lods
rcrb
aam
pop
push
sahf
and
mov
xor
imul
popa
dec
mov
insb
aaa
adc
sub
add
xor
lcall
jb
xchg
jne
cmp
mov
and
insl
ret
add
loope
add
movsl
dec
cltd
adc
adc
cmp
icebp
fs
ljmp
mov
push
repnz
insl
cmp
sahf
movsl
xor
insl
pop
call
jo
mov
ss
cmpb
mov
mov
inc
mov
ss
outsb
mov
clc
lcall
pop
fs
xlat
clc
sub
add
inc
or
inc
out
mov
xlat
xor
gs
and
pop
int
mov
push
adc
daa
loop
sub
xor
sbb
mov
pop
mov
ret
and
mov
scas
cmp
ljmp
in
subl
xchg
jne
cld
and
lods
push
scas
xchg
add
mov
add
or
or
cmp
xchg
ljmp
mov
and
movsb
sub
jne
cmp
sti
and
je
pop
adc
lcall
mov
jmp
or
lret
jp
push
push
or
sti
cmp
lods
jecxz
mov
jne
bound
jecxz
mov
les
loop
jne
cmpsb
stos
add
mov
push
push
jecxz
mov
mov
sbb
cmp
data16
mov
and
repnz
pusha
xor
cld
jmp
or
bound
sub
jecxz
aas
jno
out
add
pop
dec
sub
mov
enter
mov
xor
gs
sbb
scas
adc
repz
cmp
sub
adc
fldl2t
fildll
adc
cltd
xor
push
insl
and
xor
cmp
adc
and
add
sbb
pop
inc
push
int3
add
adc
sahf
add
and
pop
inc
mov
sub
sbb
pop
mov
adc
dec
test
mov
pop
imul
lcall
pop
cmp
cmc
xor
test
decl
out
push
inc
ficomps
xchg
sbb
out
lods
lods
ftst
cltd
cmc
pop
mov
mov
add
cmpsl
sub
sbb
mov
mov
push
xchg
mov
lret
lret
adc
popf
sub
pop
add
and
jmp
cmp
add
xor
pop
iret
fisubrl
jmp
push
cmc
sbb
adc
fs
add
cmpb
mov
pop
xchg
in
mov
jbe
xchg
xchg
scas
dec
adc
leave
xor
xor
sbb
negl
mov
sub
inc
mov
xchg
xchg
mov
fsub
mov
cmc
imul
imul
lock
jp
daa
in
add
daa
iret
cmp
push
xor
dec
aad
sbb
fnsave
jge
dec
jo
mov
ja
jno
xlat
testl
out
sbb
xor
mov
dec
loopne
or
ret
add
xor
sahf
xor
in
mov
pop
dec
lcall
inc
sub
push
shlb
jbe
popa
mov
inc
push
xchg
arpl
mov
mov
xchg
pop
xor
lock
mov
fdivs
mov
pop
mov
push
add
push
mov
or
sub
xchg
mov
cli
pop
aas
dec
pop
movsb
imul
xchg
xor
mov
repz
add
sub
jecxz
push
xor
or
sub
test
push
pop
xchg
xchg
cmp
add
gs
sub
mov
ja
jge
sbbl
sbb
add
sub
inc
pop
sbb
repz
jo
leave
adc
push
mov
mov
jb
ret
test
mov
dec
hlt
out
jp
lret
or
sbb
bound
ficomps
leave
push
scas
cld
adc
cmp
mov
sub
outsb
push
sar
xchg
pop
shlb
sbb
popa
ljmp
cwtl
out
xchg
ret
in
inc
xchg
mov
mov
rorb
dec
jg
pop
enter
test
push
add
sub
push
cld
push
cmp
rolb
cmp
or
lea
movsl
ja
test
jmp
mov
loope
sbb
pop
fdivs
and
les
lret
and
out
mov
fld
out
roll
subb
idiv
ljmp
push
pop
lahf
ljmp
rclb
sbb
mov
xor
and
mov
sarl
add
movsb
stos
push
mov
push
fsubs
xchg
inc
jno
aam
and
mov
aaa
lea
mov
adc
popa
shrl
sub
xor
gs
punpcklbw
fnstenv
js
lcall
push
xchg
outsl
dec
mov
inc
ds
xchg
cmp
stos
test
sbb
test
movsl
pop
jmp
int3
cltd
js
addr16
cmpsl
or
in
stos
fmul
add
aam
push
sbb
sub
ss
cwtl
fistpll
pop
pop
dec
inc
adc
jmp
dec
rcrl
int3
stos
adc
mov
pusha
testb
push
arpl
pop
jl
jecxz
lock
stos
sbb
int
fdivs
inc
sbb
sub
or
fmull
mov
dec
jno
sub
sub
add
add
sub
inc
rorb
pop
sub
lret
or
outsl
cs
sub
jno
iret
cmp
and
push
inc
ss
add
mov
js
adc
push
out
and
in
sbb
and
or
mov
mov
mov
push
insl
jb
dec
gs
clc
lods
movsb
imul
add
xchg
lods
sbb
cmp
pop
dec
mov
and
pushf
gs
jnp
bound
adc
sbb
lret
lret
mov
rcrl
fs
mov
out
adc
pop
insl
addr16
fcoml
sub
andl
pop
insb
scas
repnz
scas
cmc
mov
pop
dec
jl
mov
aas
jb
inc
fdivrl
or
outsl
outsb
adc
add
cmp
add
out
pop
clc
das
mov
xchg
mov
stos
pushf
xchg
or
jp
or
xor
stos
pop
sbb
xchg
inc
daa
out
dec
dec
aad
fists
adc
xchg
push
cmpl
jecxz
add
insl
add
daa
pop
lret
inc
and
mov
adc
lcall
and
adc
xlat
inc
mov
ja
pushf
pushf
inc
call
daa
push
je
pop
and
and
xchg
mov
adc
xor
std
test
push
sub
dec
pop
icebp
icebp
pop
push
dec
cld
rcrl
mov
xchg
js
add
lods
inc
daa
enter
test
sbb
aam
mov
icebp
sub
adc
push
arpl
xor
mov
incb
fldl
adc
xchg
mov
xchg
stos
inc
sub
add
inc
dec
pop
cltd
loope
cmpsl
cmpsl
lods
mov
or
xchg
addr16
insb
scas
cmp
nop
push
fdivrs
rolb
icebp
xchg
inc
mov
sbb
leave
mov
xchg
enter
into
dec
imul
xor
scas
push
into
pop
imul
xchg
or
jbe
jo
sbb
adc
xor
cmpsl
das
test
pusha
push
int
xor
ret
mov
jbe
testb
xor
dec
gs
inc
cmpl
in
sub
fldt
inc
insb
push
mov
or
xor
insb
jno
push
lcall
jbe
ja
rorl
rclb
dec
test
xchg
jbe
pop
dec
into
insb
push
push
mov
leave
and
fidivrs
jnp
sub
fdivs
cltd
sbb
sbb
pop
dec
scas
hlt
cmp
rcrb
xchg
xor
lods
icebp
mov
dec
daa
or
sub
neg
cmp
fisubl
aam
fcoms
dec
hlt
mov
dec
or
scas
nop
imulb
movsb
dec
rcll
dec
add
pop
push
aas
aam
lret
xor
push
mov
xor
fsub
cmc
push
dec
or
inc
adc
xchg
popf
cs
lea
lods
xchg
es
add
dec
xor
bound
mov
ss
push
jb
push
inc
or
bnd
test
cmp
mov
sbb
jmp
xchg
sbb
or
repnz
adc
scas
iret
jne
push
cmp
sbb
adc
leave
int
or
xchg
stos
aas
xor
jb
mov
push
or
add
fdivrl
fcom
jae
fwait
pop
mov
ljmp
mov
inc
pop
enter
and
loopne
int
xor
idiv
out
xor
mov
sarb
loope
pop
jle
xor
arpl
mov
cmc
adc
xor
roll
or
shlb
add
mov
sarb
andl
push
sub
mov
pop
mov
sbb
gs
in
enter
lahf
pop
ja
sbb
idivl
xchg
sub
in
test
sub
pop
ret
shl
lods
xchg
mov
imul
or
bound
pop
xchg
pusha
sub
inc
or
lcall
fdivs
jl
ja
into
dec
bound
daa
lock
push
mov
fwait
test
sti
push
jl
mov
nop
or
lahf
cld
mov
sbb
xchg
lret
or
ret
mov
pop
loopne
movsb
inc
cmpsl
lret
mov
jecxz
outsl
enter
pop
sbb
add
push
pop
lahf
xorb
jb
aaa
mov
insl
adc
shl
push
ficoms
add
pusha
xchg
es
and
xlat
mov
imul
outsb
sbb
mov
sbb
cwtl
stc
mov
push
stc
outsb
mov
outsl
xchg
leave
mov
orb
xchg
inc
push
stos
lock
adc
lds
pop
mov
jp
xlat
rcrb
into
push
inc
in
xor
dec
cli
cmp
lods
test
scas
or
push
pop
imul
insl
imul
adc
mov
popa
add
loop
fcomip
or
out
jmp
out
filds
mov
jnp
jge
shr
cmp
mov
out
jns
daa
int
and
xchg
dec
gs
ja
push
dec
push
lret
sub
mov
mov
sub
es
in
xorl
pop
pushf
shlb
lock
mov
add
jne
mov
add
scas
jmp
mov
push
jmp
ja
sbbb
call
cs
lods
insl
push
je
dec
das
iret
xor
cwtl
mov
sub
rolb
sti
mov
mov
aas
shl
or
mov
cld
mov
pop
mov
out
into
movsl
popf
out
rcrl
dec
dec
flds
std
sbb
jae
dec
jb
pushf
pushf
ds
mov
jnp
and
push
xchg
add
mov
aam
jne
mov
lret
sahf
repz
scas
add
les
imul
sbb
cmp
fs
jns
mov
inc
bound
sti
shl
testl
int
mov
call
sub
test
mov
sub
xor
into
inc
das
in
add
scas
fistps
je
clc
fildll
mov
adc
js
or
mov
outsb
sbbl
xchg
std
std
inc
int
mov
cmp
imul
in
ret
pusha
xchg
andl
jmp
gs
push
mov
lcall
outsb
or
das
jae
dec
sbb
and
add
lods
mov
add
inc
leave
lock
nop
in
pop
sbb
adc
adc
enter
pop
adc
movsb
dec
repz
xor
mov
mov
xchg
or
or
into
inc
xchg
std
and
cmpsl
sbb
or
inc
cmpsb
fwait
daa
mov
jmp
outsl
pop
movsl
enter
dec
sbb
mov
sbb
inc
pop
lock
mov
sub
cmp
in
jmp
dec
int
cmpl
push
mov
out
ret
insl
rol
lret
icebp
lret
addl
cmp
aaa
in
addr16
push
sub
dec
popa
adc
lcall
cmp
std
sub
ficoml
ljmp
inc
sbb
xchg
nop
rorl
sbb
dec
pop
fldl
stos
or
popf
pop
xor
repnz
cmp
dec
push
clc
xor
cwtl
test
mov
test
icebp
mov
cmp
push
cmp
xor
repz
inc
fidivrs
out
and
jl
call
add
dec
mov
nop
dec
fnstenv
add
outsl
add
fs
ljmp
xor
cltd
in
xchg
pusha
cmpsb
pop
scas
sbb
adc
sbb
scas
jle
jp
int3
call
push
cmpsl
and
adc
cmpsl
or
or
push
pop
mov
xor
inc
inc
sti
push
fsub
stos
popf
inc
pop
push
jg
add
dec
mov
xchg
and
outsb
sbb
mov
mov
popf
shll
mov
ret
or
cld
cmp
and
lods
jp
sbb
lahf
mov
inc
sbb
or
jl
sub
pusha
int
insb
fists
push
mov
js
pop
imull
or
dec
xor
adc
push
add
fninit
push
jmp
cmp
xor
cmp
xlat
sub
xchg
mov
fcomps
pop
lret
in
ljmp
pop
pop
sarb
mov
fdivrl
inc
dec
loopne
mov
inc
lea
xor
xchg
fistpl
loop
sbb
xchg
push
mov
xchg
jo,pt
ja
jo
adc
loopne
jnp
decl
int3
inc
lcall
cltd
xor
mov
sbb
push
lret
push
or
divb
jae
stc
fnstsw
icebp
adc
or
imul
pop
sub
pop
in
fildll
scas
fsubrl
pushf
xchg
jp
jb
push
mov
adc
sbbb
fcomip
and
roll
pusha
mov
fcompl
lock
mov
sbb
add
mov
mov
xor
mov
stc
mov
mov
flds
test
inc
push
xchg
shr
fidivrs
addr16
push
and
inc
sbb
push
aam
sub
add
push
mov
dec
push
jge
mov
sub
dec
jo
cmp
ret
add
inc
inc
adc
and
cwtl
lds
xlat
leave
or
mov
jl
and
pop
xor
fstpt
icebp
loope
js
dec
arpl
pop
mov
xor
sub
dec
fiadds
repnz
push
negl
daa
aam
incb
and
out
ss
das
mov
sbb
jl
xchg
xchg
pop
push
scas
addr16
mov
mov
inc
ret
lcall
test
mov
cmp
lea
sbb
fsub
stos
mov
add
movsb
ds
jg
repnz
sbb
setae
lea
sbb
jg
repnz
jno
and
idivl
repnz
jbe
imul
aam
mov
pop
cmp
or
cmpsl
lds
add
iret
mov
aaa
mulb
or
outsl
or
lahf
out
mov
ljmp
psubsw
nop
xor
imul
xchg
pop
lods
aad
test
jmp
not
push
icebp
call
cmp
inc
inc
cmp
sbb
and
popa
stos
dec
pop
jge
loop
push
sub
xchg
add
xchg
adc
and
call
push
xor
js
int3
bound
mov
cmp
rolb
loopne
movsb
mov
or
loop
cmp
es
fs
add
jge
aam
addl
dec
movsl
lret
icebp
call
loope
add
push
add
test
imulb
cmovle
dec
popa
xor
mov
xlat
inc
fcoml
fcomi
outsb
jb
cs
insb
fiadds
xor
inc
stos
cld
and
sbb
imul
repz
sbb
and
fcomip
insb
push
hlt
pushl
mov
cmp
or
ja
sub
pop
mov
dec
lds
scas
xchg
dec
sbb
mov
daa
mov
lods
pop
xchg
pushf
jg
mov
xlat
jp
popf
xchg
xchg
in
fists
mov
orb
das
sbbb
popa
movsl
test
cmp
mov
xlat
in
addr16
xor
dec
xor
pop
and
push
gs
add
insl
xchg
scas
xchg
pop
aam
add
lods
jae
test
lea
mov
jl
cs
orl
sbbl
fmull
insl
imul
add
and
ror
icebp
mov
int
xchg
push
xor
xor
add
insb
in
xor
sub
jnp
push
notb
jge
in
fnstcw
jecxz
jne
inc
cmc
push
push
outsl
xchg
jae
jp
push
cmp
addr16
sbb
and
ss
out
lea
and
xchg
add
push
aad
mov
xor
pop
cltd
sbb
les
loope
inc
repnz
dec
jbe
aam
ret
mov
xor
les
addr16
mov
daa
insb
stos
jb
lods
mov
cmp
mov
xchg
test
lret
jae
dec
push
rcrl
and
cmp
outsl
push
push
cmp
jmp
pop
mov
xchg
adc
push
adc
ss
jmp
sub
mov
mov
xchg
jmp
stos
push
subb
cmp
xchg
cs
stos
pop
lahf
inc
cli
sbb
push
out
dec
aas
in
and
xchg
outsl
insb
mov
and
aam
mov
jno
mov
and
push
add
xor
xchg
mov
lahf
sub
jbe
les
jp
jae
out
jl
andl
xchg
dec
cmpsl
out
lcall
sbb
test
movb
fisubs
and
nop
xchg
push
or
mov
jp
or
nop
mov
add
mov
sub
add
dec
mov
or
fidivrs
pop
std
test
xchg
inc
jo
lea
push
push
ret
jb,pt
adc
repnz
into
sbb
leave
xlat
push
or
je
or
pop
push
scas
add
inc
push
test
ljmp
push
push
sub
push
or
pop
mov
out
ret
mov
adc
mov
daa
stc
xor
jne
xor
jp
scas
repz
xchg
test
lcall
jg
mov
push
das
div
cwtl
xor
jl
enter
xor
and
and
push
xor
movsl
and
test
fisubrl
lods
mov
and
mov
add
outsb
cmp
cwtl
inc
cmp
loope
movsl
xchg
push
repz
cmpsb
call
lcall
lods
xchg
or
cmpsb
and
outsb
jl
sbb
sarl
fsubrs
insl
fdivl
cmc
insl
mov
add
push
pop
lds
cmp
mov
mov
cltd
xchg
icebp
or
mov
xchg
push
inc
insl
push
mov
push
mov
test
shrl
push
sar
cmp
xor
xchg
lods
jp
decb
mov
mov
sbb
loopne
aas
mov
les
pop
inc
cmp
iret
cmpl
adc
iret
push
cmpsl
pop
negb
out
dec
shrl
test
aam
arpl
cmp
out
out
xchg
adc
mov
cmp
xor
xchg
movsl
repnz
insl
subb
popa
out
mov
or
or
ret
xchg
test
pop
jmp
leave
and
out
in
mov
enter
xor
in
dec
fisttpll
leave
cmp
fs
icebp
js
mov
jns
push
push
jo
cmp
sub
rolb
lcall
dec
dec
adc
inc
outsb
jmp
dec
jo
cmp
not
push
popa
push
out
fnstsw
jae
push
and
insb
insb
jg
int3
xchg
sbb
add
xchg
sub
sti
je
lret
and
jp
pop
mov
stos
and
mov
les
pop
and
scas
xchg
dec
in
in
dec
mov
pop
mulb
stos
dec
js
push
mov
or
fprem1
push
lock
lahf
fs
jno
mov
mov
test
jbe
lret
lods
jns
jns
or
cmp
fucomip
test
lods
adc
out
inc
popa
add
push
push
pop
cwtl
adc
sbb
je
cld
stos
sub
cltd
cmc
jns
jnp
dec
ret
pop
push
adc
cmc
or
movsb
test
inc
sub
cmpsb
bound
dec
push
inc
shll
mov
aam
ret
icebp
add
insl
jmp
sbb
add
loope
mov
in
shlb
es
addr16
mov
xchg
sub
adc
nop
insl
dec
je
enter
aad
fs
cmp
cltd
cltd
sub
mov
sarl
cmp
jb
and
inc
and
repnz
jb
cmp
leave
dec
dec
lods
subl
arpl
or
or
cmp
sub
std
lea
mov
jg
out
sbb
js
adc
ss
out
mov
xor
shlb
push
pop
jg
add
imul
fwait
dec
dec
popa
loopne
lcall
loope
jns
or
fwait
incb
mov
jb
insl
movsb
jae
add
sub
mov
jecxz
sub
push
mov
xor
and
bound
add
outsl
cmp
ret
mov
incb
shll
xorl
dec
and
push
fnsave
mov
out
add
dec
or
and
mov
sbb
jno
call
je
push
cwtl
inc
jg
sti
inc
lds
fsubrs
xor
cmpl
sbb
push
add
jae
dec
insb
neg
push
and
mov
ret
pop
movsb
push
mov
cmp
fcoml
nop
push
cmp
jp
push
xlat
add
outsl
gs
sbb
mov
sti
sbbb
sbb
push
mov
mov
add
loope
fnstcw
mov
leave
data16
mov
push
into
dec
jbe
xor
pop
fs
outsb
mov
pop
fsts
out
loop
add
add
test
bound
cmp
dec
xchg
fs
ds
shl
and
lock
das
sub
aam
or
lods
jno
cmc
mov
test
enter
xchg
rcrb
mov
outsb
ljmp
mov
push
pop
dec
mov
push
cwtl
cmp
rcll
cltd
xchg
or
pop
pop
mov
mov
xorb
dec
xchg
xchg
out
shlb
test
jl
iret
cmp
mov
mov
test
pop
lods
push
repz
xor
stc
das
sbb
fiadds
mov
stos
out
in
pusha
xchg
dec
cmp
loope
test
aas
lret
mov
dec
rclb
add
pop
sbbl
and
mov
jae
aas
rolb
xchg
jbe
lea
mov
pop
cmpsl
jne
data16
and
and
fdivs
xchg
dec
mov
xchg
dec
or
mov
xchg
popl
cld
adc
insl
pop
imul
cmpsl
dec
aas
inc
cmpsl
mov
mov
popa
pop
xchg
out
jge
int
xor
sub
mov
outsl
sub
sbb
test
or
jo
xchg
cmp
sbb
cmpsl
outsb
insl
arpl
sbb
sub
test
rol
bnd
mov
inc
fstpl
sub
sbb
push
sbb
dec
adc
cld
cmc
js
cmp
jo
pop
dec
jl
stos
add
arpl
jbe
stos
mov
dec
push
mov
subb
rolb
ss
jno
bound
out
lods
sbb
test
push
sbb
arpl
into
dec
popa
sbbl
mov
jmp
sar
pop
hlt
mov
cmpsl
test
lret
dec
imul
in
repz
cwtl
daa
push
sub
cmp
lods
adc
jle
push
pop
shrb
ret
mov
imul
outsl
jne
jbe
sbb
hlt
jb
shll
popf
or
idivb
push
es
pop
inc
add
mov
sub
test
push
pop
mov
ficomps
push
insl
clc
inc
mov
inc
jmp
lock
jb
shlb
mov
rol
xor
mov
sbb
inc
dec
jns
add
scas
mov
or
or
adc
mov
addr16
inc
sbb
shlb
cmp
mov
ret
iret
flds
lock
sti
mov
sbb
xchg
aam
pop
testb
push
nop
sbb
movsb
shrl
add
xchg
rcll
or
dec
loop
and
push
sahf
xchg
pop
stc
stos
subb
mov
lret
pop
insb
mov
iret
nop
jnp
add
or
sub
adc
sbb
or
cmpsb
mov
jmp
repnz
jecxz
and
addl
in
aam
push
sub
fldenv
insl
scas
aad
cli
scas
fdivl
cmpsl
lret
mov
xchg
jae
and
aaa
pop
test
aaa
adc
push
and
push
call
add
out
fsub
mov
pop
adc
cli
sbb
sbb
ret
shr
push
pop
sub
add
mov
mov
xor
popf
cli
outsl
xchg
pop
rcrl
jno
cwtl
sti
add
fisubs
adc
in
les
xchg
cmp
mov
sub
xlat
stos
int
xchg
pop
pop
inc
call
add
xchg
daa
sarb
and
pop
ret
lds
mov
sarb
in
in
mov
push
add
call
out
push
dec
cmp
filds
push
dec
cld
push
push
cmp
cmp
xchg
jne
iret
push
insl
shrb
push
or
or
int3
repnz
daa
mov
mov
jno
adcb
and
cld
into
dec
jbe
jecxz
mov
xchg
mov
sbb
cmp
adc
add
aad
sub
and
push
add
jecxz
push
movsl
pop
add
xor
insb
or
addr16
dec
int
xchg
std
cmc
mov
mov
mov
test
adc
das
outsl
in
add
pop
pop
xchg
idivb
push
lock
push
cltd
daa
js
shlb
or
movsl
mov
inc
jne
push
aaa
and
add
xchg
ret
add
mov
es
call
in
sub
add
dec
pusha
mov
lea
gs
or
add
leave
ds
dec
pop
inc
jno
lahf
jae
les
add
fcmovnb
jge
and
jl
mov
pop
nop
inc
and
je
mov
jae
xor
sub
pusha
cli
or
dec
arpl
out
mov
sbb
int3
stc
arpl
pop
mov
dec
add
mov
je
mov
lahf
nop
rclb
jecxz
mov
and
cwtl
adc
hlt
repz
addl
xchg
xor
roll
mov
je
push
mov
push
dec
cli
fisubrl
lret
inc
adcl
sbb
xchg
aad
mov
pop
sbb
stos
or
nop
xor
pop
stc
jp
mov
pushl
loope
dec
sarb
or
imul
push
xchg
movsb
sahf
xchg
mov
xor
inc
es
mov
cmpsb
stos
call
cmp
sub
pop
inc
xchg
jecxz
and
cltd
enter
jg
sub
jl
jne
jmp
inc
xor
out
std
es
pop
mov
call
cmpsb
xchg
and
movsl
xor
movsl
pop
cmp
fisttpll
out
jl
insb
sub
xchg
lods
cli
lahf
mov
push
dec
push
and
xor
jnp
icebp
pop
fwait
pop
pop
add
sbb
fstl
xchg
outsb
js
sbb
mov
shrl
jae
addr16
outsb
mov
mov
mov
dec
fwait
test
sbb
out
cli
push
mov
xor
mov
adc
pop
xchg
out
jecxz
mov
cmpsl
mov
mov
xchg
mov
out
jmp
int3
inc
pusha
je
mov
and
stc
lods
dec
or
in
mov
and
xor
mov
into
push
dec
sbb
pusha
pushf
mov
pop
cli
jmp
jp
andb
shrb
adc
outsl
cmp
sub
push
sub
mov
xchg
cli
sbb
inc
lds
pop
into
inc
pop
sub
iret
loope
sbb
jo
pop
jb
adc
sbb
ds
jne
out
scas
out
dec
in
sbbl
mov
mov
mov
enter
dec
pushf
pop
test
loop
xorb
mov
mull
pop
jb
sub
inc
jns
xchg
testl
scas
cltd
cmpb
stos
cltd
stc
scas
jmp
out
mov
scas
or
mov
adc
jp
aam
xchg
mov
add
cmp
xchg
fistpll
cmp
imul
outsl
stos
sbb
std
xchg
mov
clc
mov
jecxz
xor
loopne
push
rep
lds
pop
sub
lods
es
push
ret
sub
aas
pop
adc
mov
jmp
lret
fwait
mov
ss
mov
jecxz
sub
clc
sbb
push
dec
push
jl
fisubl
mov
dec
test
std
idivl
jle
rolb
movsb
jl
or
test
into
or
paddd
xor
mov
cmpsl
jno
repz
mov
dec
sub
mov
adc
leave
subb
dec
add
sbb
jle
jle
pop
or
cmpsb
out
pusha
rolb
xor
into
and
xor
test
cmp
cmp
push
and
inc
fimuls
ret
sbb
sub
mov
scas
pop
sub
dec
xchg
into
out
pusha
inc
imul
sti
in
lcall
mov
bound
sbb
pop
jmp
push
or
xchg
and
jmp
cmp
fdivl
aam
push
dec
scas
cmp
shlb
cmpsb
scas
jo
xchg
xor
push
cs
ja
xor
xor
adc
call
iret
jl
faddp
pusha
aas
and
push
ret
aaa
mulb
add
ret
sub
lret
xor
mov
jmp
pushf
and
ret
jb
aas
sbb
inc
jne
ret
mov
cmp
lahf
add
mov
pop
inc
out
mov
adc
mov
jmp
and
cld
iret
pop
stos
dec
pushf
mov
std
dec
out
and
pop
inc
mov
vmovups
xchg
cld
pushf
das
push
repnz
push
das
or
jmp
xorl
or
pusha
push
sub
data16
adc
or
es
pusha
iret
sub
aad
cltd
cmpsl
rcll
enter
add
xchg
loopne
inc
fdivrs
jge
mov
bound
cli
push
bound
iret
cwtl
add
popa
xchg
rolb
dec
add
add
test
pusha
loope
roll
or
mov
arpl
fwait
mov
push
out
js
or
mov
xchg
mov
dec
rep
dec
scas
push
mov
add
cmp
and
ljmp
push
mov
std
bound
jbe
push
mov
push
jle
or
out
xchg
jb
shrb
xchg
lds
pop
aam
pop
xor
and
out
dec
push
jns
cmp
ficompl
cmp
mov
push
dec
xor
out
sbbl
sub
pop
adc
bound
jmp
mov
or
cmp
fcomps
dec
rorb
mul
out
xchg
popa
mov
cmpsl
sti
das
xor
pop
imulb
cmp
call
xlat
push
jmp
inc
or
lcall
push
cltd
outsl
xor
movsb
pop
ret
ret
lret
clc
imul
push
rolb
punpcklbw
out
repnz
xor
or
mov
hlt
xchg
or
xor
lahf
shrl
out
sub
mov
mov
lahf
dec
in
or
cs
aam
mov
push
stc
jno
repz
mov
fistl
sbb
dec
xlat
xor
push
test
in
pop
fwait
mov
repz
enter
xchg
icebp
mov
xchg
dec
jae
and
push
js
or
jnp
mov
cs
cmp
xor
add
loope
dec
scas
popf
cmp
stos
or
inc
insb
mov
fucomi
es
aas
negl
sbb
cs
popa
xlat
mov
into
fldenv
arpl
inc
xor
shrb
dec
sbb
movsb
xor
push
add
sub
mov
in
in
cltd
scas
das
cmp
popf
std
cld
and
test
movsl
sub
push
mov
mov
push
out
addl
adc
ss
sbb
mov
jno
add
leave
jnp
enter
xchg
rorb
pop
into
add
sti
push
arpl
sub
cmpsl
fbstp
add
and
data16
rolb
jl
mov
xlat
mov
mov
movsl
out
jle
sahf
pop
cmp
cmp
in
iret
mov
rolb
sti
out
clc
les
sub
dec
imul
push
leave
sti
inc
jl
jl
add
cli
push
clc
subb
in
out
imul
sbb
jo
cmp
push
jge
pop
test
sarb
out
add
mov
pop
cmp
loope
bound
out
xor
fidivrs
test
xchg
mov
fistl
lret
js
jns
adc
cltd
mov
push
sbb
mov
add
fmull
xor
push
icebp
push
adc
jno
fpatan
in
lods
jle
pop
add
sbb
divb
mov
inc
in
or
mov
movsl
and
clc
and
jle
frstor
cltd
dec
push
arpl
das
and
ss
fcmovb
ficoms
insl
xchg
sbb
xlat
xchg
adc
insl
movb
push
pusha
iret
mov
xchg
pusha
and
repnz
fnstsw
hlt
or
add
mov
stos
add
inc
mov
fimuls
subb
xor
test
add
mov
fildl
cmc
mov
dec
aad
and
movq
mov
dec
mov
mov
aas
and
cmp
out
jp
mov
bound
out
clc
sahf
xor
stos
cmp
movsb
xchg
insl
test
fwait
daa
sub
lds
pop
ret
mov
sbb
test
xchg
cmp
jle
daa
add
xchg
cltd
adc
mov
fdivrl
fwait
imul
fadds
xchg
pusha
or
sub
out
std
out
repnz
neg
sub
jae
lds
daa
imul
mov
push
stc
mov
movsb
mov
mov
arpl
jbe
pop
cmp
out
fstp
jmp
fucomi
inc
pop
repnz
dec
data16
dec
or
dec
lret
push
lcall
cltd
pop
or
mov
push
cmp
out
out
js
sub
dec
jle
cld
xchg
mov
sub
xchg
outsb
imul
mov
lds
and
add
jl
cmovge
and
mov
mov
daa
mov
sti
dec
ret
push
or
loop
jecxz
test
push
pop
or
pop
inc
add
fsubl
repnz
jmp
roll
mov
xchg
ljmp
cmp
push
stos
push
mov
and
xchg
mov
int
adc
mov
add
or
lods
inc
fucomip
movsb
mov
sub
push
mov
mov
sbb
das
dec
dec
jne
push
push
add
stc
xchg
mov
mov
ret
cmp
shlb
stos
fstpt
push
lds
add
inc
cmp
dec
shll
xchg
stos
es
or
icebp
jo
jne
scas
out
popa
xchg
and
inc
pop
cmp
stc
nop
sub
cmp
mov
dec
andb
jmp
xor
jae
sbb
mov
js
into
dec
mov
push
cmp
or
test
rcl
mov
push
insb
adcb
xchg
repz
fiaddl
add
rorl
mov
cmp
insl
push
mov
cli
mov
adcb
jnp
push
hlt
je
mov
rcrl
dec
fistps
push
cmp
mov
in
push
mov
int
std
pop
inc
pop
out
xchg
fwait
mov
xchg
push
subb
jns
sub
adcb
and
push
xor
inc
jno
dec
daa
clc
dec
add
push
or
push
stos
cmpsl
loopne
or
pop
pop
xor
or
bound
dec
shl
push
mov
andl
addl
sub
xchg
add
ret
sbb
jno
enter
dec
add
mov
mov
testl
cmp
mov
lret
push
inc
inc
mov
sbb
inc
dec
jmp
jb
and
cmpsb
movsl
inc
sbb
push
mov
cmp
xchg
cmpsb
cld
cmp
stos
jne
mov
inc
xchg
jb
inc
cmp
xchg
or
dec
je
mov
pop
sbb
adc
repz
flds
sbb
out
or
or
or
out
push
lea
push
loopne
adc
mov
stc
repnz
push
or
sbb
mov
out
test
stc
adc
lcall
adcl
inc
jo
clc
test
loopne
mov
xchg
or
xor
jle
xchg
ss
inc
mov
loopne
fcmovu
std
std
out
sbb
dec
in
es
jmp
and
xchg
xor
dec
cmpsb
js
add
pop
mov
cmp
hlt
mov
adc
xor
jo
and
pop
pop
lcall
inc
mov
scas
cmpsl
or
insl
or
das
aas
pop
push
out
push
jg
enter
stos
jbe
das
lret
repnz
pop
data16
insl
mov
ss
cmp
movsl
leave
jp
je
arpl
fcoms
orb
cmp
sarl
js
sahf
xchg
push
cli
test
loope
push
test
arpl
sbb
cwtl
imul
sbb
and
xchg
sbb
or
or
rcll
daa
sbb
movsb
add
adc
ja
lea
int
push
out
js
cmp
fdivrl
add
add
pop
jns
xchg
in
popa
mov
sbb
fimuls
dec
mov
push
loope
and
mov
or
lret
mov
push
and
icebp
into
pop
les
and
imul
addl
mov
jnp
in
insb
or
push
icebp
in
pusha
fbld
mov
mov
sahf
popa
loop
mov
in
loope
xchg
push
xor
lea
inc
lea
inc
dec
mov
inc
lods
mov
int
xchg
dec
mov
add
je
int3
shll
mov
scas
inc
push
push
popf
mov
outsl
lret
pop
sbb
mov
xchg
jmp
mov
ret
ja
cmp
xor
add
lret
out
shrl
lret
cmp
sbb
lea
cmovo
xchg
sbbl
popa
mov
clc
jnp
popa
scas
or
in
xlat
lods
or
and
mov
xor
mov
js
inc
push
gs
scas
sbb
mov
outsb
movsb
test
cmp
movsl
cli
outsb
inc
in
or
push
lods
jp
add
into
aaa
xorl
jbe
ficoml
aaa
test
pop
pop
rcrb
mov
xchg
sbb
mov
data16
sti
cmp
push
cmpb
jne
iret
jnp
fdivrs
stos
mov
scas
mov
mov
mov
clc
or
jo
lea
imul
rcl
xor
sbb
ljmp
sbb
xorb
pushf
popf
sbb
movsb
daa
mov
jmp
lret
arpl
or
int
call
add
clc
sub
mov
sbb
setne
push
lds
in
mov
loope
enter
jo
mov
sbb
jb
cwtl
loope
data16
mov
sub
cmp
stos
sahf
cmpsb
pusha
xchg
sbb
rsm
jae
cmp
pop
loopne
mov
add
cmp
cmp
add
in
pop
mov
push
push
subb
jo
xlat
inc
arpl
in
outsl
xorb
outsl
popa
js
loop
mov
leave
inc
lods
call
sbbb
rcll
fstpl
sub
add
in
inc
test
lods
lcall
fldt
gs
iret
inc
push
pushf
imul
or
shl
mov
pushf
dec
mov
negb
xchg
sub
mov
mov
daa
push
mov
incl
leave
pop
and
jle
into
pop
mov
pusha
test
jae
imul
sbb
outsl
stc
movsb
push
adc
pop
test
pop
pop
punpcklbw
repnz
lock
jb
shl
insl
inc
roll
fs
in
xchg
push
cli
xchg
jmp
out
mov
lods
loope
test
in
mov
out
or
mov
add
jne
adc
sub
mull
ss
adc
sbb
orl
cmp
cld
mov
insl
data16
mov
ja
iret
mov
repz
cmc
pusha
xchg
inc
mov
dec
sar
out
or
and
outsb
and
cli
imul
xlat
pushf
xor
imul
add
dec
pop
dec
sub
push
aam
enter
shll
jnp
hlt
aaa
push
mov
pusha
lea
sbb
cmpsb
inc
ja
xchg
adc
or
test
in
jmp
add
xchg
mov
pushaw
and
mov
pusha
sub
cmp
nop
clc
dec
xorl
je
int3
test
pusha
cmp
push
lea
in
push
ret
pushf
fdivl
mul
mov
cmp
aas
pop
jmp
mov
push
add
xchg
daa
je
test
sub
add
dec
lock
scas
push
popa
scas
lock
popf
adc
hlt
add
jne
push
push
sub
rcr
adc
add
divb
adc
or
xchg
mov
pop
popa
push
mov
dec
sahf
jno
mov
push
insb
inc
in
outsl
aas
xor
ret
cs
mov
mov
decl
rolb
ficoml
out
lret
scas
xor
in
cmp
dec
cli
xor
push
out
xchg
aas
push
mov
and
inc
pop
and
jmp
sbb
lods
jl
ja
or
xchg
jbe
push
mov
and
mov
ss
sbb
dec
popa
push
jb
sbb
pop
pop
mull
test
or
xor
xor
fwait
cmp
jl
roll
push
sub
push
sub
enter
movsl
sbb
sbb
mov
xchg
daa
and
sahf
loop
pop
sbb
push
lods
jecxz
lods
lret
jne
or
push
pop
cli
stos
outsb
jno
lcall
sub
test
xor
idivl
and
pop
and
push
fisubrs
lahf
add
jns
adc
aaa
subb
cmp
add
push
fcmovnu
lods
push
pop
stos
cltd
test
ljmp
mov
dec
cld
mov
sub
jle
inc
arpl
sahf
xchg
sbb
or
sbb
or
inc
clc
call
fistpll
roll
testl
pop
xchg
loop
test
aaa
cmp
and
cmc
std
jmp
test
or
adc
cli
mov
xor
pop
popa
mov
mov
pop
ret
xchg
shll
cmpsb
icebp
popf
sub
inc
jns
subl
ljmp
jle
cli
addl
cmp
jb
js
push
pusha
push
sahf
inc
inc
and
sbb
inc
movsb
or
fwait
and
push
jae
jae
and
dec
sub
mov
dec
fisubl
pop
stos
stos
sahf
push
sti
rcll
in
or
mov
push
sub
pop
outsl
jg
movsl
cmc
stc
or
sub
rsqrtps
clc
out
push
test
inc
dec
stc
inc
adc
or
mov
mov
scas
testb
sbb
jmp
xor
cmp
mov
sbb
fildl
cmpsb
clc
dec
aam
clc
out
inc
cmp
das
rolb
rol
fstl
xor
inc
out
enter
cmpb
adc
rcll
push
out
sahf
xor
insb
imul
shll
dec
add
jmp
outsb
push
sti
ds
nop
adc
inc
add
push
cwtl
inc
movsl
fs
cmp
cld
test
inc
fimull
bound
pusha
mov
push
popf
lret
cmp
jg
fmull
xor
sbb
fisubrl
mov
mov
inc
xchg
inc
jo
icebp
and
stc
cmp
xor
mov
in
cltd
jae
inc
xchg
rolb
and
push
jmp
or
iret
enter
fsubr
push
daa
arpl
test
mov
cmc
inc
dec
xchg
dec
dec
or
sub
xchg
into
mov
dec
sbbl
inc
in
faddp
dec
adc
pusha
and
stos
add
mov
sbb
sbbl
loopne
sub
xchg
out
imul
into
or
cs
mov
aad
out
daa
xor
mov
inc
mov
push
into
cwtl
out
popf
stc
mov
adc
push
mov
add
mov
xchg
or
xchg
jl
sbb
xchg
ret
pinsrw
sub
sbbl
and
push
push
pop
xchg
lock
ret
int3
and
xlat
push
shll
mov
inc
pop
cld
js
dec
scas
mov
adc
or
idivb
sti
push
test
mov
push
sub
pop
test
xor
xchg
scas
push
and
pop
orl
sub
xchg
xor
xchg
dec
pushf
dec
imul
adc
movsb
mov
out
inc
xchg
iret
or
lods
jg
stos
pause
or
sbb
ftst
je
mov
xchg
jp
out
outsl
cmp
rcll
add
loopne
sbb
ret
dec
cmc
adc
fs
push
in
cmpsb
xlat
stos
shlb
enter
andb
jno
and
cmpsb
mov
and
lods
mov
idiv
call
jecxz
popa
mov
inc
fistpll
xor
lods
sbb
andl
mov
xchg
clc
xor
add
xchg
jg
fsubrp
clc
sbb
adc
add
iret
jl
push
fmulp
mov
daa
sbb
shrl
push
mov
mov
inc
pop
ja
or
dec
jne
loop
pop
rorl
mov
mov
push
jg
movsl
shll
pop
push
insl
mov
sbb
or
pop
frstor
pop
mov
cld
and
push
jl
cmpsl
jg
pop
or
in
mov
xlat
sub
xchg
sarb
mov
xor
gs
adc
add
aaa
movsb
cmp
jo
and
xor
mov
and
shll
adc
dec
dec
scas
icebp
sub
xchg
jns
insb
int3
arpl
mov
xor
cmp
sbb
push
push
dec
lods
js
mov
sub
xor
jmp
in
mov
loope
in
mov
sbb
stos
sbb
icebp
mov
pop
cmp
das
enter
adc
jge
test
jb
or
adc
jl
jmp
mov
aas
jbe
mov
or
aaa
lds
imul
aam
in
js
dec
test
fwait
jge
inc
out
es
movsl
cmp
enter
in
fwait
xchg
mov
jnp
xchg
push
loope
sub
stc
lds
cmp
and
mov
adcb
loope
rol
xchg
push
popf
sbb
dec
and
adc
mov
cmpsl
mov
push
out
int3
fiadds
mov
push
dec
sub
pop
push
lea
mov
adc
mov
cmp
test
lds
addr16
cmp
cmc
lods
push
mov
lahf
xor
cld
jecxz
mov
push
push
inc
call
sub
ja
or
sbb
call
ljmp
shr
icebp
pushf
fistl
xor
add
cmp
out
dec
jno
ljmp
shll
mov
and
adc
sahf
aad
sbb
lret
add
mov
pop
cmp
mov
call
sub
jb
pop
sub
movsl
sub
daa
int3
imul
in
add
mov
icebp
sbb
idivb
or
call
and
add
sub
push
mov
scas
int
sub
sbb
sbb
xchg
insb
xorb
add
cltd
add
pop
cmp
daa
or
clc
fwait
test
lcall
scas
mov
mov
je
cltd
pop
push
iret
sbb
lds
roll
in
mov
xor
lds
push
movsl
sbb
mov
xlat
jae
xor
inc
jge
mov
cmc
push
fdivrs
imul
dec
add
mov
add
adcb
stos
dec
push
cmp
jmp
jle
sbb
cmc
fwait
add
mov
andb
xlat
loop
xor
mov
lret
mov
add
dec
lds
aam
lcall
lock
fidivl
push
lahf
mov
scas
pushf
out
cmp
xlat
pop
ljmp
pop
fidivrs
adc
scas
xchg
outsl
jecxz
or
nop
mov
fld
outsb
sbb
cmpsl
xorb
stc
ss
dec
push
xor
sti
mov
sub
enter
inc
stc
sbb
ss
out
out
xchg
loopne
pop
and
loope
mov
cmc
mov
cmpsb
sbb
cmp
inc
das
sub
cmpsl
outsb
lahf
xlat
je
jns
iret
loopne
inc
push
inc
jbe
into
mov
xchg
pop
test
inc
and
aad
ret
jns
dec
sbbb
jbe
dec
xchg
dec
mov
or
push
mov
xchg
roll
bnd
das
jo
iret
jg
cmpsb
push
andb
pop
packsswb
xchg
mov
push
jae
dec
jne
xchg
or
dec
mov
cmp
mov
cld
in
cmc
push
mov
adc
cmp
ret
cmp
insb
adc
mov
imulb
sub
out
or
leave
mov
lock
or
loop
iret
scas
pop
ljmp
scas
xchg
enter
test
andl
mov
pushf
cwtl
aas
sbb
mov
cmp
mov
push
loope
subl
jbe
in
push
adc
dec
xchg
push
inc
mov
shr
cltd
or
into
inc
stc
jbe
daa
mov
pop
cmp
push
movsl
lea
sub
push
or
pop
sub
xor
lods
sub
mov
pop
xchg
lods
xlat
sar
add
daa
xor
fmull
mov
xor
jno
or
lret
out
sahf
or
pop
loopne
into
or
jp
cmp
dec
and
mov
lea
and
hlt
arpl
pop
out
xor
test
lds
iret
rcl
xor
leave
in
jb
mov
les
xchg
push
subb
push
fldcw
lcall
adc
lods
popw
enter
dec
dec
aaa
in
sub
adc
ljmp
or
fmuls
cli
xor
pop
scas
mov
pop
ljmp
arpl
pop
push
sub
push
add
adc
push
inc
mov
xor
xor
mov
inc
fs
sub
gs
stos
cmp
cwtl
subl
fsubrl
outsb
mov
pop
push
daa
inc
imulb
adc
sub
pop
pusha
xor
cmpsl
jecxz
xor
fs
cs
adc
data16
out
mov
jg
pop
icebp
push
repz
xlat
loope
daa
sarl
xchg
gs
jg
cs
adc
lahf
ja
cld
call
sbb
adc
jne
inc
es
ficomps
dec
inc
xchg
sahf
int3
dec
sub
pop
pop
dec
test
inc
imul
fs
inc
aaa
pop
in
jmp
mov
mov
sbb
test
test
or
sub
sbb
sti
jb
out
and
jg
in
addr16
and
shrb
xorb
aas
adc
jecxz
lock
xlat
cmp
fisubl
mov
xor
add
xor
ja
imul
pop
aad
pop
int3
lds
jecxz
sub
sti
xchg
lcall
add
dec
adc
jp
inc
loopne
add
xor
mov
arpl
jge
pop
xchg
faddl
inc
jbe
imul
dec
sub
outsl
idivl
cmp
pushf
loope
clc
pop
adc
int3
loope
fstpt
xchg
add
mov
jg
cmp
xor
mov
sub
mov
out
sub
or
adc
testb
add
sti
sahf
je
je
sahf
pop
arpl
or
pusha
mov
stos
hlt
jb
out
push
sti
push
lock
scas
in
shrl
jle
xchg
mov
xchg
icebp
mov
nop
push
pop
sub
stos
filds
push
sub
push
js
xchg
add
push
insl
ljmp
jmp
jecxz
shll
dec
jnp
push
cmp
xor
push
lea
movsb
xchg
addr16
sahf
jmp
hlt
jae
xor
or
mov
int
adc
out
cmp
sub
pop
clc
jo
fbld
xchg
mov
movsb
push
pop
mov
dec
mov
out
inc
sbb
mov
pop
stc
out
jmp
fdivl
mov
xchg
mov
sarb
ja
sub
jge
mov
dec
rcl
leave
xchg
jns
imul
ljmp
add
xor
push
ljmp
out
sbb
sub
dec
jnp
cwtl
inc
cmp
es
push
in
mov
or
ret
movsl
jg
mov
pop
aaa
cmp
xchg
jo
xor
mov
pop
pop
or
dec
or
jl
mov
add
fstl
in
mov
ret
arpl
sbb
mov
shlb
mov
ljmp
dec
aam
outsl
push
sbb
dec
mov
cld
adc
dec
std
popf
loop
mov
and
leave
mov
lock
cltd
sbb
push
iret
cld
mov
std
push
add
ja
das
or
mov
mov
lods
jo
inc
in
xlat
movsl
adc
mov
insb
mov
cmp
add
imul
cmp
ljmp
or
adc
xchg
loop
ja
adc
imul
sar
jle
test
das
arpl
cmp
mov
mov
sbb
rcrb
cmpsb
lods
mov
jp
mov
imul
inc
push
push
cmp
sbb
push
sahf
repz
jb
sbb
mov
or
add
dec
hlt
fsubl
call
mov
adc
call
push
cmp
je
repnz
imul
dec
call
stos
mov
pop
lret
scas
loope
xlat
jb
or
cli
inc
jno
notl
push
and
and
sub
jbe
mov
cmp
cmpb
loopne
test
and
test
insl
pop
add
outsl
mov
popf
cmp
ljmp
repnz
add
dec
sub
daa
and
pushf
cld
inc
mov
fstps
push
pop
aas
mov
jns
test
inc
faddp
cmc
xor
and
jo
inc
xor
cs
cmp
test
inc
fwait
repz
add
and
sub
enter
out
lods
call
das
ds
dec
test
lret
faddl
inc
icebp
inc
jecxz
loop
mov
les
mov
lea
xchg
xchg
notb
rcrl
xor
in
hlt
jmp
inc
xchg
mov
nop
or
or
into
adc
pop
dec
mov
jbe
data16
popf
dec
mov
pop
dec
js
mov
lods
xor
dec
nop
sub
sbb
jno
dec
loope
scas
push
push
or
cs
addr16
ret
xor
das
into
dec
imul
addl
pop
add
fidivl
sub
sbb
out
add
into
out
mov
jne
scas
scas
roll
or
ss
push
mov
fsubrl
fnstsw
imul
sbb
sub
lods
mov
mov
xor
jne
movsl
sub
cmp
adcl
sahf
enter
scas
pop
sbbl
xor
js
and
add
cmpsb
lahf
rcll
popw
add
jns
scas
cmp
jns
sbb
repnz
pop
cmpb
pop
and
inc
bound
fimull
and
ja
pop
sbb
push
xchg
inc
bound
mov
in
sub
arpl
ds
out
xchg
xchg
mov
sbb
mov
lret
ds
cli
mov
and
or
movsl
std
push
push
loopne
fbstp
push
push
jmp
out
mov
sbb
in
enter
icebp
scas
leave
roll
out
adc
fnsetpm(287
xchg
and
add
inc
sub
lcall
jp
lds
arpl
xor
inc
sbb
mov
cmp
push
xor
sbb
jle
fistl
lretw
jb
cmp
sahf
xchg
pop
xorb
js
aas
dec
mov
scas
test
iret
loope
cltd
push
out
mov
popa
stc
cmc
std
fcomip
xchg
ret
and
stos
fwait
mov
xchg
push
jge
xchg
call
testb
in
cld
rcrb
dec
inc
test
sub
inc
pop
adc
fwait
xor
fldenv
mov
xlat
jp
bound
inc
or
add
nop
test
or
push
mov
sbb
push
repnz
aam
ret
dec
jns
jo
ffreep
sahf
out
mov
fs
fsubrl
popa
add
mov
or
imul
addr16
fwait
fwait
lcall
insb
fimull
jne
cmp
scas
xor
xchg
or
sbb
pop
dec
and
xchg
outsb
xlat
data16
and
pop
sbb
mov
test
jp
addl
rol
xchg
ror
pop
clc
dec
daa
imul
cmp
or
in
mov
mov
mov
cmpsl
mov
in
adcb
push
dec
cmpsl
add
mov
insb
cmpsl
cmp
rolb
inc
lret
mov
jmp
jnp
push
subl
mov
stos
cld
mov
test
aas
fdivr
mov
xchg
dec
xor
cmp
xlat
push
rclb
pop
jno
cmc
dec
call
sarb
testl
fldenv
mov
jecxz
lods
cmp
sub
push
sbb
push
and
gs
cmp
cwtl
jo
jmp
and
test
cs
js
jne
adc
xor
xchg
lret
dec
out
idivl
sbb
jno
arpl
cwtl
mov
cli
dec
pop
les
cmp
jg
iret
and
iret
push
mov
mov
jnp
add
nop
and
popa
jmp
fimuls
leave
and
rorb
adc
sbb
in
jp
dec
andb
sbb
xor
inc
cli
jmp
inc
fs
out
jl
insl
lret
add
or
test
stc
xlat
pop
dec
add
je
mov
loope
push
in
orl
cltd
aam
mov
sti
pop
push
rol
push
lcall
fs
int3
sahf
cmp
roll
out
bound
rolb
jmp
inc
cmpsl
insl
push
bound
test
mov
lock
arpl
les
js
adc
loop
xchg
lea
push
pop
sbb
jbe
and
arpl
sbb
add
adc
fisubrl
mov
mov
inc
xchg
sbb
test
aam
fdivr
xor
ds
sub
adc
das
push
inc
sub
and
je
sub
mov
and
shlb
adc
hlt
jae
dec
or
cld
add
ret
push
xor
fneni(8087
cmp
js
pusha
and
clc
iret
sub
push
std
jbe
sbb
ficompl
and
scas
sub
fstps
dec
mov
push
scas
hlt
add
sub
push
pop
dec
mov
mov
mov
icebp
push
jne
fsub
mov
jmp
pop
lods
ret
stos
inc
out
dec
pop
std
adc
shrl
jge
mov
ficoms
cli
dec
add
aaa
jmp
cs
inc
pusha
scas
out
das
sbb
jbe
cmp
sarl
adc
jns
sbb
mov
dec
mov
mov
rolb
xchg
stc
sbb
lahf
inc
fs
in
popa
pop
jp
fucomip
fistpl
call
iret
incl
push
push
inc
sub
cmp
or
add
ja
xchg
cmc
inc
push
daa
push
lods
add
leave
sub
jae
outsb
inc
gs
jl
xchg
lahf
into
divl
adc
inc
push
out
mov
jecxz
jmp
push
or
repnz
or
push
push
cmp
out
or
test
mov
stos
int
and
mov
lds
sub
xchg
push
pop
mov
loope
sahf
mov
mov
inc
xchg
dec
lods
or
mov
sbb
sbb
adc
mov
fimuls
jne
add
insb
repz
shr
jge
in
es
mov
xchg
push
jge
shr
mov
fldt
adc
pop
aas
fsub
and
adc
loop
icebp
fistl
pop
xor
stc
jmp
adc
add
sub
or
sub
pop
xchg
pop
adcl
mov
enter
pavgw
sbb
jbe
into
cmpsl
test
sbb
divb
pop
sub
sub
cmp
inc
pushl
mov
sar
xchg
adc
jl
jo
fs
in
idiv
les
es
arpl
pop
data16
mov
pop
mov
repnz
push
pop
imul
mov
dec
lods
cmp
out
stos
ficoms
inc
rcrl
push
pusha
push
adc
cmp
stc
mov
add
ljmp
pop
ja
mov
mov
lcall
adc
sub
cmp
mov
rol
add
inc
jmp
or
rcrl
scas
and
loope
mov
mov
push
in
sbb
insl
sub
out
lea
arpl
xor
mov
shrb
hlt
jmp
or
imul
xchg
xor
dec
pop
push
ret
insb
addr16
jecxz
out
jmp
test
repnz
into
cmp
in
and
out
out
ja
xor
lds
push
cmp
call
outsl
test
and
bound
dec
pop
test
sbb
and
out
dec
rorb
pop
jno
repnz
iret
add
dec
adc
or
sbb
inc
ss
fcmovb
add
and
mov
add
rcl
fdivrs
stos
inc
mov
push
xor
testl
jnp
out
add
mov
gs
xlat
mov
mov
push
mov
xchg
push
jle
es
push
repz
ret
test
pop
pop
cltd
std
and
or
jg
or
jp
das
dec
repnz
xchg
adc
mov
leave
mov
test
jnp
dec
mov
dec
dec
lods
sub
adc
repnz
adc
inc
push
inc
aam
fisttpll
add
lock
call
add
mull
push
mov
push
rcll
scas
enter
or
sub
ret
jbe
push
clc
fstps
jb
push
mov
inc
daa
js
sbb
mov
pop
cmp
cmpxchg
push
data16
fsubp
jbe
sarl
test
lock
adc
nop
fxam
ret
lock
loope
xchg
cmp
cmp
les
orl
mov
add
jnp
mov
xchg
and
lret
js
dec
cmp
lods
dec
cmp
subl
cmp
mov
dec
fs
out
fnstsw
cmc
jle
xor
sub
fisubrs
mov
in
xlat
cli
pop
push
sub
mov
sub
sbb
inc
lahf
rcll
and
icebp
or
or
inc
gs
jg,pt
lret
imul
mov
loopne
mov
push
adc
fistpl
rcrb
dec
push
lock
inc
fwait
lcall
jl
xor
ret
xchg
fldl
testl
cs
sbb
inc
mov
arpl
adc
loop
enter
inc
inc
lea
faddl
push
jnp
aas
dec
in
xor
jno
in
push
lock
scas
sub
pop
fcomps
lods
mov
and
loope
mov
sub
add
push
xchg
addb
movsl
stc
inc
inc
mov
ja
jnp
fwait
pusha
and
dec
out
cs
fstps
movsl
xchg
movsl
fwait
int
aad
jo
add
mov
jo
cmpsl
jp
icebp
dec
test
mov
lea
loope
pop
sahf
cli
mov
into
idivb
push
es
add
mov
jp
into
scas
cmc
pop
pushf
loop
inc
jo
inc
outsb
in
std
xchg
cwtl
ss
mov
cwtl
sbb
add
std
jae
xchg
movsb
out
loop
pop
push
mov
mov
aad
es
iret
adc
mov
sbb
lahf
xchg
adc
inc
mov
movsl
adc
jne
leave
and
or
mov
inc
icebp
mov
sahf
sub
add
cmp
mov
das
adc
cmpb
cwtl
mov
enter
ret
xor
and
addr16
and
push
add
mov
test
jne
and
mov
fs
lods
dec
inc
dec
test
imul
lea
hlt
push
lcall
adc
sahf
pop
mov
shrl
es
push
popf
xchg
xlat
jae
lds
jp
mov
push
mov
add
pop
je
mov
mov
shlb
popf
inc
dec
cmpsl
jne
in
imul
jge
mov
repz
aaa
mov
jno
sahf
shrl
mov
jo
xchg
aaa
dec
out
scas
xorb
jle
imul
clc
test
lock
xor
add
inc
mov
and
insl
outsl
cs
push
dec
jno
stos
pushf
or
xor
jmp
out
pop
in
outsl
arpl
sti
mov
fs
nop
pop
adc
stos
mov
xor
jno
cmp
jecxz
pop
mov
jl
popa
xor
movsl
mov
cs
add
fnop
std
std
inc
pop
cs
add
xor
pop
jg
xor
xor
xchg
and
ljmp
loopew
gs
sub
int
shrb
rcrl
pop
call
rolb
pop
inc
pop
nop
das
sarb
sub
push
insl
cmp
pop
movsl
ljmp
js
call
std
lahf
inc
rorb
leave
scas
ffreep
mov
sbb
ljmp
leave
testl
repz
insb
stos
pavgw
jge
and
scas
std
sbb
notb
lods
out
push
cmp
or
adc
cmp
popf
call
mov
inc
mov
das
push
rcr
xor
or
mov
enter
sbb
gs
xor
sub
push
and
dec
or
mov
xchg
cwtl
push
inc
push
dec
in
adc
roll
jle
and
and
push
mov
mov
roll
fwait
pop
insl
shl
adc
lods
mov
inc
dec
inc
stos
popf
mov
sbb
jecxz
xchg
dec
xchg
xlat
xchg
cwtl
in
dec
sahf
inc
shll
aam
mov
inc
jmp
in
jnp
pop
cmc
shll
inc
add
inc
cwtl
xor
bnd
sub
adc
test
sub
xor
push
rcr
push
out
scas
mov
jnp
jb
addl
pop
and
mov
lret
in
adc
movsl
icebp
adcb
pop
lea
loope
data16
mov
lock
test
push
adcl
pop
mov
fisubs
lods
aam
fildll
stc
mov
cmp
and
pop
fmul
adc
je
ret
xchg
pushf
inc
dec
mov
xchg
xor
push
jl
xchg
or
test
and
add
lret
lret
push
sub
loope
test
notb
dec
stos
inc
push
ja
mov
push
jg
push
xchg
jge
jle
mov
loope
std
xlat
mov
or
add
pop
loopne
ljmp
shlb
lahf
sbb
test
stc
push
fnstsw
pusha
jb
ret
hlt
arpl
mov
add
push
lret
xchg
jmp
insb
xor
push
cli
stos
test
inc
mov
stos
hlt
push
mov
gs
stc
add
xchg
fsubrs
jge
jo
jl
xchg
xor
push
and
mov
jnp
pop
cmpsl
jae
or
jo
inc
test
outsl
dec
lret
jae
dec
xor
jp
sub
mov
mov
inc
loope
mov
jne
cmpl
add
adc
imul
dec
mov
imul
insl
xchg
inc
mov
xor
fmul
jge
mov
inc
cwtl
and
movsl
mov
fldl
arpl
in
lods
cmpb
aas
jns
outsb
push
mov
push
fnstcw
or
into
negb
js
stc
sbb
rcrl
inc
sub
jbe
enter
in
cmpsb
loopne
lahf
stos
push
xchg
dec
cmpsb
out
mov
xchg
adc
pminub
lods
enter
out
or
popf
add
dec
or
lahf
bswap
cmp
mull
mov
pop
and
push
mov
adc
dec
add
or
mov
pop
stos
test
and
stc
in
dec
push
pop
xor
ret
jo
lock
xor
jp
into
scas
inc
fidivrs
push
out
shlb
push
mov
sbb
jns
inc
jnp
shll
enter
mov
push
lahf
jmp
xor
jnp
test
lock
dec
add
mov
cmp
addr16
pop
pop
xchg
mov
mov
in
inc
inc
pop
movl
push
outsb
adc
mov
andl
jns
stc
mov
pop
jbe
push
xchg
mov
dec
sahf
add
mov
mov
mov
cmp
and
mov
sbb
out
outsb
push
xchg
scas
test
outsl
lea
jns
popa
add
or
mov
sub
mov
call
xor
ret
lds
jne
cmpsl
cmc
sub
and
cmp
xchg
xchg
xor
sub
orl
dec
lock
cmp
lret
rolb
push
cwtl
pusha
leave
outsl
jnp
inc
jecxz
stos
adc
fldt
icebp
inc
dec
jnp
out
imul
pop
mov
xchg
das
mov
and
shll
adc
add
push
fisubl
dec
mov
jecxz
xchg
fimull
mov
mov
aas
mov
cmc
mov
jmp
mov
mov
in
push
mov
nop
or
jl
mov
adc
and
je
cmp
cmc
sbb
push
cld
cmp
pop
sub
ds
add
mov
shlb
inc
push
aad
fwait
xchg
pop
sahf
dec
sarl
rcl
xchg
cmp
cwtl
addr16
sbbb
insl
dec
ficompl
ljmp
jecxz
pushf
jg
arpl
ja
mov
rcrb
and
ret
mov
pop
stos
jge
aaa
and
jno
ret
pop
cmpsl
cltd
scas
cmp
inc
dec
add
cld
adc
clc
inc
loopne
sbb
aam
jl
jg
rcrb
lcall
jo
jge
push
mov
leave
xlat
adc
scas
push
push
add
dec
adc
push
hlt
aaa
mov
and
jb
cmp
inc
mov
mov
in
aad
scas
call
pushf
lahf
lea
in
cmpsb
movsl
fstps
fdiv
add
cmpsl
add
xchg
sar
popf
push
sbb
aaa
int3
push
sarb
or
sbb
clc
push
outsl
push
loopne
pop
cmpsb
in
into
outsl
into
mov
mov
cs
aaa
shll
scas
push
add
and
inc
mov
loopne
jle
push
and
outsb
iret
in
sbb
push
clc
mov
mov
mov
sub
cmc
push
lret
hlt
cmp
cmp
cltd
pop
and
stos
femms
sbb
lahf
mov
mov
fwait
leave
push
adc
loop
out
dec
dec
decb
and
xlat
dec
xor
test
sub
test
iret
nop
add
mov
pop
es
scas
test
out
pusha
loope
mov
movsl
mov
xor
call
and
and
push
repz
cld
push
mov
inc
xchg
sbb
insb
or
pop
daa
sub
mov
xchg
jae
adc
divl
lea
pusha
mov
pop
mov
sub
push
mov
push
mov
and
lea
add
jo
push
fisubrs
mov
dec
push
shll
std
xor
jb
loopne
pop
add
rorb
lret
pop
fnstsw
mov
shll
jne
mov
repnz
dec
cltd
jnp
das
cltd
xchg
mov
adcb
ret
mov
jecxz
xlat
inc
imul
rclb
fsubrs
cmpsb
or
rolb
out
or
cmpb
xchg
xchg
scas
in
cmp
mov
dec
fdivrl
cmc
repnz
xchg
xlat
dec
xchg
push
push
cmp
jp
dec
jl
cmp
push
test
loop
lcall
or
int3
xchg
jl
xlat
je
aas
jl
dec
xlat
call
sbb
mov
cmp
dec
sub
cmp
mov
sbb
push
out
push
or
add
cmpsl
ficoml
cmp
fcomps
out
add
out
sbb
mov
jge
mov
mov
sub
jmp
xchg
cld
add
xor
lret
xor
push
arpl
outsl
mov
inc
je
cmpsb
mov
adc
cmpl
or
pusha
xchg
inc
out
test
cmp
outsb
out
fisubrs
clc
cmp
lret
jl
out
mov
mov
js
sub
fldcw
sti
mov
ret
pop
rcr
fisttpll
sub
adc
ljmp
cmp
aas
inc
adc
outsb
xchg
push
mov
push
dec
es
out
sbb
adc
dec
test
mov
fsts
repz
fstps
out
test
jmp
or
arpl
sub
fistpll
push
jmp
out
mov
mov
pop
push
mov
adc
ret
lock
dec
add
jge
popa
je
mov
or
inc
cltd
cs
arpl
dec
call
int3
pop
mov
bound
icebp
mov
shrb
std
jmp
dec
mov
lcall
lret
inc
lods
pop
fcoms
add
cmp
push
xor
xor
lea
jle
xor
mov
repz
and
cmp
nop
push
adc
add
in
in
mov
add
push
add
push
ret
xchg
loope
xchg
idivb
rclb
xor
or
ds
xchg
gs
jl
jle
imul
mov
mov
jl
test
mov
fwait
in
stc
jno
add
xchg
cmp
aad
pop
shll
std
mov
in
xlat
fucomp
ljmp
mov
sarb
stos
cmp
lahf
adc
fdivrl
mov
xchg
mov
and
int
xor
cmpxchg
jg
push
adc
sub
insl
pusha
pop
incb
fadds
mov
dec
movsl
or
pop
cld
cmp
clc
addb
pop
push
sbb
aam
fwait
xor
js
xor
mov
je
push
and
mov
ljmp
sub
mov
mov
out
mov
sbb
leave
inc
stc
dec
cli
dec
test
inc
pop
test
inc
daa
adc
mul
pop
ret
mov
scas
leave
sarb
pop
into
jge
xor
daa
dec
fsubrs
pop
inc
add
es
push
mov
cs
call
xchg
aaa
pop
xlat
lcall
out
jmp
addr16
subb
mov
dec
dec
stc
cli
ja
scas
adcb
jl
fs
xorb
cmpsb
lea
inc
push
pop
icebp
daa
jne
bswap
mov
pop
jmp
pop
sbb
cmc
pusha
and
inc
in
adc
push
push
adc
int3
xor
sub
jne
imul
outsl
fistps
les
arpl
clc
out
cmp
add
rcr
mov
lret
nop
or
jle
pop
lcall
inc
je
and
fdivl
into
stos
sbb
dec
sarl
sub
xchg
or
mov
inc
push
xor
mov
sbb
cli
inc
mov
cs
jne
or
shrl
dec
dec
mov
jns
mov
mov
jo
cld
in
int3
cs
inc
cltd
jl
push
mov
sub
jp
test
sbb
cmp
repnz
fcomps
mov
adc
and
pop
cmp
or
shl
sbb
adc
push
push
cmp
ret
mov
icebp
int
cmp
or
xor
pushf
inc
cmp
daa
inc
mov
mov
int
fimull
and
sarb
jg
hlt
int
inc
mov
cmp
jecxz
pop
lods
adc
adc
pop
push
decl
jmp
push
iret
push
sub
ret
movsl
cmp
scas
push
in
jnp
mov
jne
add
pop
data16
dec
mov
dec
inc
xchg
hlt
jge
xchg
xchg
sahf
lcall
out
jb
sub
pop
push
add
loopne
stos
pushf
cmpsb
mov
xchg
mull
icebp
imul
fdiv
mov
mov
outsl
aad
mov
dec
bound
mov
lcall
shlb
xchg
mov
xlat
cmp
test
das
arpl
icebp
incb
aam
pop
fwait
inc
dec
and
popf
jge,pt
push
fcoml
std
int
cli
in
outsb
jo
pop
movsl
int3
push
and
xchg
push
cs
daa
testb
mov
lcall
scas
in
adc
imul
ja
push
jp
push
mov
shlb
out
pop
dec
push
mov
cmpsb
pop
adc
dec
inc
inc
insl
sar
jp
scas
std
loop
cmpsb
fiaddl
cs
sbb
mov
out
sbb
mov
hlt
push
loopne
addr16
inc
leave
adc
xchg
arpl
adcl
push
inc
adc
adc
sub
cmc
mov
fs
sub
into
mov
movsb
repnz
into
stc
and
popa
mov
das
rcrl
mov
ds
repnz
cmp
adc
xchg
into
cmp
pop
xchg
push
push
inc
imul
jb
pop
ljmp
jecxz
js
add
inc
mov
xchg
pop
je
push
jle
jecxz
adc
dec
fwait
stc
mov
lods
sbb
ficoml
jp
or
pushf
add
repz
xor
int3
scas
int3
push
shll
adc
add
cmc
cmp
cmpsl
mov
pop
pushf
pop
mov
imul
fists
or
movsl
scas
rcrb
cmp
les
pop
lcall
xchg
dec
xor
jmp
ljmp
push
xchg
fmulp
mov
outsl
sbb
cli
and
cmp
jmp
mov
mov
fwait
cwtl
sub
xor
inc
std
push
or
test
mov
pop
xchg
into
je
jnp
mov
mov
ja
loopne
push
sub
jnp
sub
dec
aad
nop
ficoms
push
push
out
sub
lds
in
shl
xor
dec
hlt
xchg
addb
das
notl
stos
mov
and
xchg
daa
fs
idiv
mov
xchg
jno
add
test
out
es
popf
lock
in
mov
fs
push
and
es
insb
test
clc
push
sub
or
dec
cmp
stos
stc
cmp
jne
or
jp
or
std
xchg
popa
push
paddq
xor
call
negb
cli
or
pop
xchg
cmpsl
sbb
cmp
stos
jnp
clc
ret
jg
insb
daa
sbb
jle
cli
mov
mov
fdivrs
and
lret
lods
lods
enter
fbld
loopne
cmp
pushf
fdivs
lds
scas
bound
xor
sarl
dec
negb
outsl
js
addb
popa
sub
leave
data16
push
jle
push
mov
mov
adc
ljmp
xor
mov
mov
setb
cmpsb
mov
jae
cli
jns
xchg
into
sbb
enter
and
cli
fucomi
dec
mov
xor
sbb
sub
incl
mov
push
out
mov
add
xchg
lds
xchg
cwtl
add
aad
xchg
xchg
jl
call
mov
push
push
jbe
mov
into
insb
mov
in
jecxz
mov
and
aaa
inc
stc
lock
inc
out
cmp
add
sbbl
ror
sti
push
mov
jmp
xor
int
xchg
insb
movsb
push
test
lds
sbb
aam
jo
mov
and
iret
push
xlat
dec
sbb
push
das
sahf
jg
je
fistpl
mov
push
es
push
fdivrs
aam
fmul
inc
aas
or
addr16
mov
mov
xchg
bound
ds
lahf
ficompl
xchg
repz
add
jbe
inc
dec
mov
cmp
jmp
xchg
inc
lds
xchg
sbb
mov
fwait
adc
cld
mov
sub
xlat
bound
lds
out
jne
lods
shr
iret
push
sti
jle
mov
xor
sbb
lret
leave
jecxz
or
cltd
bound
sub
shlb
mov
sub
movsb
loopne
mov
cwtl
bound
hlt
add
sub
mov
cld
rolb
mov
push
pop
sub
divps
mov
subl
jne
or
mov
xor
mov
mov
mov
or
jnp
mov
cmc
inc
insb
test
mov
lods
dec
dec
xor
mov
mov
incb
js
pop
cmp
xchg
sahf
add
ds
mov
mov
cmp
sub
jae
jmp
xlat
pusha
cmp
xchg
pop
lcall
push
adc
popw
mov
add
mov
sbb
or
mov
clc
jno
stc
lods
out
fldl
insl
movsb
jg
xor
pop
cmp
imul
aas
inc
mov
out
jecxz
cmpsl
xor
es
lock
lea
fsubrs
std
jae
adc
shlb
fimuls
insl
lret
mov
rolb
add
pop
insb
dec
std
arpl
push
mov
in
jle
popf
mov
jns
test
pop
sub
enter
jo,pn
pop
sbb
push
or
push
dec
push
xor
addr16
je
jle
mov
pop
test
inc
jnp
xchg
imul
pusha
loop
push
pop
inc
push
push
mov
and
sub
imul
jns
inc
rol
clc
arpl
mov
shl
repz
mov
inc
shlb
push
daa
lock
in
sbb
mov
mov
cmp
ljmp
xorl
popf
xchg
adc
push
cmp
mov
sbb
jle
shr
dec
mov
jne
push
ds
repz
fstps
or
jp
mov
dec
cmp
ljmp
jge
scas
xchg
cmp
inc
xchg
out
mov
mov
sub
out
out
cmp
inc
addr16
cmpsb
cmp
jb
fimuls
jl
aam
jb
fsubp
pop
stos
mov
sub
jle
cwtl
jg
adc
push
and
adcb
mov
mov
jno
addr16
mov
and
add
cwtl
and
pop
jns
ret
push
fidivrs
das
ret
xchg
sbb
pusha
push
lahf
rcr
add
mov
int
inc
jp
fistl
add
into
fnstcw
dec
cmp
imul
movsb
ret
mov
adc
fs
and
sbb
sbb
scas
popf
fbld
pusha
inc
ret
push
mov
add
pop
call
dec
push
mov
stos
add
mov
lea
jmp
fsubrl
sbb
les
jnp
push
xchg
cs
loop
inc
push
sbb
sahf
aaa
or
int
xchg
lcall
and
out
xor
lret
push
xor
outsl
fstpt
daa
call
fnstcw
and
test
mov
mov
mov
mov
push
push
jne
and
loop
mov
jg
push
mov
aam
mov
mov
mov
cmp
int3
test
mov
add
xlat
mov
incb
out
subb
sbb
shrl
je
dec
into
ret
xchg
jl
sub
fs
lock
cmp
mov
ficoms
mov
and
cmp
xor
sub
or
adc
mov
mov
leave
dec
lods
pop
and
add
push
or
or
imul
aas
sub
xchg
xacquire
outsb
mov
leave
fidivrl
xor
in
dec
es
outsb
lock
jns
push
cs
pop
mov
sub
add
pop
inc
jl
mov
inc
fcoml
mov
insl
dec
ret
mov
add
mov
xor
leave
cltd
faddp
mov
jnp
jae
dec
jge
movsl
mov
pop
sbb
mov
pop
ja
shrl
pop
les
xor
mov
inc
daa
lcall
lea
mul
loopne
lahf
mov
cld
movsb
mov
shrb
ror
movsb
xor
iret
fwait
in
imul
mov
inc
pop
inc
xor
daa
pop
arpl
pop
mov
push
xchg
ficomps
jmp
lret
pop
jnp
mov
xor
fistpll
xor
insb
daa
mov
lock
repnz
stc
push
sbb
aas
push
addr16
sub
xchg
aam
push
xchg
ds
jo
insb
adc
pop
sbb
xlat
in
inc
roll
push
rclb
jmp
jbe,pt
ja
dec
lcall
inc
xor
scas
movsb
cmp
adc
rcl
pop
scas
nop
xlat
or
mov
into
in
push
fst
cltd
adc
lea
cmp
cmp
cmp
add
add
mov
test
mov
in
adc
das
popf
mov
imul
or
dec
pop
push
faddl
iret
adc
pop
and
mov
mov
mov
lcall
xchg
les
call
repz
adc
adc
ds
out
dec
push
add
xchg
jg
xor
mulb
sub
and
pop
jp
fisttpll
pop
xchg
xchg
xchg
cmp
je
cmp
xchg
cmpsb
notl
repz
mov
pushf
imul
cmpsl
pop
adc
or
mov
or
jg
hlt
add
lahf
scas
jns
sub
dec
sbb
testl
inc
popf
loopne
sbb
pop
cltd
popf
push
dec
jle
and
cmc
add
adc
or
and
dec
test
fimuls
inc
or
cli
sub
mov
adc
mov
out
push
push
shlb
lods
adc
iret
andb
and
xchg
jns
fs
adcl
stc
je
ficomps
sahf
daa
adc
sub
xor
jmp
js
jp
jne
mov
cmp
insl
dec
insb
rcll
xchg
pop
push
push
mov
into
mov
sbb
pop
pop
inc
aas
scas
loop
adc
push
mov
mov
cltd
mov
scas
mov
push
sub
xchg
and
sub
mov
iret
xchg
lods
push
dec
adc
cwtl
repz
pusha
mov
xor
xchg
mov
fs
xor
mov
inc
testl
xchg
mov
inc
mov
gs
cmpsb
rolb
inc
sbb
in
mov
cld
cli
mov
int
in
sub
xor
cmpsb
jl
xlat
ds
jp
mov
mov
jg
mov
stos
pop
cmp
lahf
cmp
adc
xchg
mull
push
lock
ret
jl
rol
push
sbb
mov
sub
insl
in
sti
inc
inc
in
out
xchg
pushf
mov
push
les
push
jecxz
call
test
sarl
cli
ret
test
outsb
iret
test
dec
jg
shrl
xchg
int3
pop
jno
fwait
jg
imul
ljmp
push
push
mov
dec
inc
xlat
cmp
inc
inc
daa
dec
xchg
jge
shrl
lret
pop
enter
mov
sub
pop
sarb
adc
or
lea
mov
rcrb
xchg
jo
jns
ja
scas
test
testb
addr16
jnp
push
orl
daa
int3
push
mov
xchg
pop
mov
xor
mov
movsl
mov
filds
loop
fisubrl
xlat
je
push
jae
sbb
xchg
inc
mov
jbe
xchg
lock
popa
repz
pop
lret
add
rol
xchg
xchg
or
mov
push
scas
jb
xchg
mov
or
mov
mov
xchg
cltd
ja
fsubrl
fwait
jg
sbb
loope
popf
pop
pop
pop
out
repz
xchg
gs
pop
dec
lock
push
pop
xchg
sbb
call
push
xchg
fists
loop
out
hlt
or
lea
call
and
into
stos
mov
in
stos
roll
js
call
cmc
mov
cli
adc
aam
sbb
xchg
outsb
enter
dec
mov
xor
mov
pop
xor
adc
mov
iret
push
mov
repnz
mov
icebp
loope
js
movsb
xorl
mov
mov
fwait
inc
cmpl
rolb
xor
iret
mov
inc
enter
push
std
outsl
cwtl
adc
enter
int
push
lods
mov
inc
mov
mov
jnp
cwtl
aad
loop
xchg
scas
xchg
cmpsl
jecxz
das
sub
pop
fmull
xlat
push
jo
popa
mov
jne
inc
pop
out
ret
or
mov
adc
mov
js
xchg
shrl
push
sub
cltd
popa
stc
and
pop
push
sub
xchg
repnz
jne
pop
loopne
cmp
out
xlat
and
adc
vpcomud
call
or
lock
add
pop
nop
push
mov
je
cmpsb
dec
js
arpl
je
cmp
mov
mov
lock
sbb
fcomps
pop
fisubs
add
pusha
inc
dec
shlb
out
out
cltd
mov
mov
cltd
jle
scas
fs
mov
fsubl
test
sub
in
inc
pop
mov
xchg
leave
dec
scas
xchg
pop
cmp
aam
ljmp
mov
dec
lcall
fiadds
rol
dec
repz
insb
dec
repz
stos
movd
or
inc
add
mov
cltd
mov
mov
sub
aaa
imul
xchg
les
outsl
sub
inc
sbb
lahf
jno
fsts
mov
test
xchg
mov
xor
dec
xchg
inc
idivl
shl
xor
orb
popf
jbe
mov
jo
cmc
jno
and
xor
call
into
sbb
jnp
fidivs
cmpsb
pop
das
loopne
addb
mov
xchg
rclb
push
in
xchg
addr16
rcll
add
jmp
dec
aam
lret
cli
div
jg
ret
inc
mov
and
cld
stc
lahf
mull
cmp
scas
lock
mov
xchg
bnd
lds
xchg
inc
jmp
loop
cmpb
lods
fstl
fwait
cmp
inc
add
ds
cltd
lds
add
das
add
adc
push
cmp
push
mov
or
fs
andl
movsb
mov
aad
add
lds
xchg
mov
xor
mov
xor
dec
and
clc
xor
insb
clc
mov
lahf
xor
xchg
out
mov
jle
test
imul
gs
dec
out
dec
or
and
test
jbe
and
mov
push
or
ret
movsl
into
addr16
push
mov
xchg
in
xlat
xor
ljmp
xchg
aas
pushl
jle
mov
lret
mov
sbb
sub
ds
push
rcll
out
xchg
add
jae
mov
mov
fsubs
adc
mov
dec
mov
popa
lea
neg
int
rcl
cmpsb
sbb
mov
dec
push
and
push
pop
xor
jb
dec
enter
mov
scas
and
xorb
sub
out
cli
imul
push
addb
rclb
leave
lret
cmpsb
cli
cmp
aaa
test
xchg
or
mov
cmp
rcrl
pusha
push
add
xor
pop
add
cmp
cld
lods
mov
loopne
mov
jge
jo
jne
testb
and
pop
adcl
outsb
les
push
jo
inc
mov
jns
xchg
addr16
adc
lahf
lock
cli
icebp
fbld
pusha
in
sbb
add
imul
add
dec
add
dec
loopne
js
cmp
pushf
nop
mov
xchg
inc
loop
cmp
mov
adc
dec
jg
dec
mov
aas
testb
jmp
arpl
rolb
subl
dec
nop
xor
cmp
lea
push
test
jb
repz
add
cltd
inc
lahf
or
stc
inc
ja
push
mov
aad
std
pop
cltd
and
cli
out
mov
cmp
mov
cli
sarl
and
cli
mov
dec
loope
leave
adc
call
sbb
xchg
ljmp
mov
xor
ja
out
jbe
jns
jmp
cltd
in
mov
decl
and
cmp
out
xchg
sbb
dec
jecxz
imul
icebp
rcll
ficoms
mov
test
mov
fidivrl
jbe
xor
sbb
sub
dec
dec
inc
es
in
jp
mov
cmp
aad
fucomi
push
int3
ficoms
fdivrl
mov
stos
adc
movsl
xor
adc
mov
push
aam
inc
mov
add
sbbl
mov
adc
lcall
sub
and
pop
imul
bound
add
sub
loop
rcll
inc
pop
add
rcrl
xchg
mov
mov
adc
int
data16
push
ss
cmp
or
sub
add
std
repnz
leave
push
sbb
loope
add
cmp
fucom
sbb
dec
xor
and
dec
sub
sub
int
fwait
int3
jnp
fadds
lods
xchg
jo
lea
ds
sub
xchg
jb
push
sub
sub
test
inc
pop
cmp
outsb
sub
sub
xor
jge
mov
test
sbb
cmpsl
pop
xchg
xor
mov
rcl
mov
cmp
mov
lret
push
stc
in
fldt
mov
cwtl
cmc
push
jmp
in
test
call
out
scas
addl
imull
sti
sti
mov
push
or
xchg
push
push
add
mov
jno
repz
dec
gs
repnz
mov
cwtl
mov
fsubrp
lock
mov
std
int
lods
mov
aad
testb
insb
test
xor
test
aam
ret
outsb
notl
arpl
fists
and
pushl
pop
pop
iret
xlat
mov
or
stos
ret
ja
int3
cmp
sub
push
jb
outsl
cmp
cmp
and
lds
mov
add
dec
cmpsb
pop
mov
pop
leave
adc
push
loopne
xchg
xor
or
icebp
jns
lods
das
stos
or
inc
shlb
out
outsl
pop
mov
rclb
xchg
bound
dec
add
iret
fistpl
inc
fmuls
leave
push
mov
dec
cli
call
dec
push
shl
adc
outsb
out
xlat
jae
pop
int
sub
xchg
mov
mov
or
mov
cmp
and
xor
pop
xor
aad
xor
iret
jmp
fwait
jmp
add
xor
xor
push
das
adc
add
lret
xchg
cwtl
dec
stos
fldcw
dec
in
jo
dec
add
cmp
sbb
mov
pop
mov
int3
cmp
pop
repz
pop
cld
xchg
adc
mov
adc
cmpsb
pop
and
sub
jl
je
inc
test
out
cmp
mov
es
es
lods
push
aam
mov
jo
nop
lea
call
aaa
movsb
cld
push
pop
ja
xchg
out
mov
dec
push
popf
add
data16
sub
enter
mov
rclb
addr16
mov
sbb
stos
xchg
sti
adc
push
divl
cmp
and
adc
mov
xlat
fimuls
int3
int
adc
add
in
add
xor
inc
mov
xor
outsl
add
arpl
fildll
mov
out
xchg
xchg
xor
pop
pminub
ds
cld
xor
scas
imul
pop
fisubrl
xor
mov
mov
repnz
pusha
jbe
xor
jecxz
es
dec
mov
xchg
pop
xchg
iret
pop
arpl
rorb
xor
addb
pop
push
dec
dec
jne
inc
and
leave
cwtl
je
lock
and
push
or
mov
xchg
jmp
rol
rcr
aas
jmp
push
out
and
rolb
shll
fidivl
mov
and
gs
xchg
sbb
cmpsb
ss
xchg
ds
mov
cmp
pop
push
outsl
out
cld
add
cwtl
aas
ss
mov
ficoml
push
jb
stos
rcrb
push
sti
cs
fists
pop
test
clc
mov
cmp
enter
imull
push
xor
jnp
fs
adc
lahf
sub
mov
inc
stos
cli
cwtl
shl
repnz
push
cmc
outsl
pop
push
cmp
enter
inc
mov
pushw
mov
dec
push
stc
sbb
push
daa
dec
mov
das
sbb
rcrl
push
inc
or
repnz
xor
or
lret
in
dec
stc
fwait
out
in
repz
push
mov
mov
jg
cmp
add
xchg
sub
or
sbb
fldcw
repz
fsin
inc
xchg
or
push
mov
jnp
and
inc
out
sbb
xchg
pop
pop
repz
repz
xor
xor
fcmovne
inc
mov
repz
sub
jo
lcall
lock
xchg
ja
fs
add
sub
sbb
call
push
push
push
arpl
inc
sub
ss
scas
in
jno
push
mov
mov
aad
pop
gs
pop
pop
std
ss
cmpsb
or
and
sbb
int
fcompl
lcall
out
adc
mov
sbb
mov
test
mov
mov
cwtl
mov
rorl
idivl
pop
hlt
inc
cmp
jle
cmp
shlb
xor
pop
jne
xchg
add
mov
aad
pop
stos
sbb
push
xchg
mov
jo
daa
mov
mov
lods
sub
shll
jp
jns
int3
or
icebp
fidivrl
add
lret
fiaddl
sub
add
stc
xchg
xchg
idiv
sti
add
cmp
sbb
xchg
push
incl
xchg
or
in
enter
stos
inc
leave
xchg
inc
jl
sti
arpl
lcall
push
int
negb
fldl
lods
cld
out
sub
movsl
icebp
dec
scas
jns
cmp
fwait
out
scas
pop
cmpsb
loope
cmp
pop
jg
out
jmp
and
sarb
push
leave
data16
pusha
cmp
lret
dec
pop
lea
adc
sbb
shlb
xor
mov
lock
mov
jae
cmp
mov
jno
or
mov
inc
in
arpl
cmp
in
jnp
ss
xchg
aam
movsb
enter
loopne
pop
inc
jnp
mov
cmp
or
jge
xchg
dec
shl
pusha
clc
add
jb
mov
push
xor
ret
and
push
lret
jo
mov
push
shl
pop
xor
pusha
mov
into
clc
addb
pusha
lds
test
dec
mov
int
push
outsb
cmc
fdivl
scas
dec
and
out
dec
sti
pop
jbe
shll
jnp
inc
insb
push
in
push
je
xlat
mov
mov
adc
test
push
sbb
adc
mov
sub
test
rcll
mov
loop
cmpsl
nop
movsl
push
mov
adc
pop
mov
sarl
decl
and
or
dec
iret
xchg
add
movsb
inc
pop
xchg
adc
xchg
jno
xchg
loop
mov
insl
xor
mov
std
sbb
lds
lds
mov
add
fisubrl
adc
mov
dec
lret
adc
and
and
addr16
cmp
and
xchg
cmp
mov
push
fwait
jmp
push
jg
mov
sbb
inc
int
decl
nop
imul
clc
cmpsl
mov
jb
imul
jno
loopne
add
rcrb
int
cmp
arpl
es
fisttpl
sub
data16
pop
sbb
mov
xchg
mov
cmp
pop
and
xchg
sahf
mov
data16
fucomi
adc
test
mov
aam
jl
and
jno
shrl
je
repz
mov
gs
push
push
sub
imul
dec
adc
push
adc
xchg
adc
addr16
push
jecxz
mov
pop
jmp
push
push
stc
pop
lock
inc
dec
cld
xor
cmpl
mov
call
and
push
dec
scas
loopne
and
push
jnp
cli
shrb
xchg
fnstenv
mov
jmp
add
rcl
out
push
sbb
ret
scas
and
add
leave
lret
pusha
jbe
stos
mov
bound
push
xor
lds
shlb
inc
sub
push
aad
pop
dec
gs
fidivrl
je
mov
add
mov
xor
add
cmc
in
lea
jb
sbb
add
jge
negb
jns
test
xor
fidivrs
std
pop
jne
popa
js
dec
or
lret
pop
jmp
mov
in
and
adc
inc
shrb
jo
aam
jns
dec
scas
xchg
faddl
mov
lahf
fcoml
or
add
test
repz
sbb
dec
xchg
out
and
xor
aas
inc
sti
xor
incl
dec
cli
mov
dec
inc
out
mov
and
movswl
xchg
pop
arpl
popa
mov
mov
add
divb
sub
outsb
xchg
pop
stc
sub
es
sbb
sti
clc
xchg
mov
push
dec
mov
push
les
sub
inc
inc
mov
enter
js
dec
shlb
std
adc
pop
sbb
or
mov
push
or
cmpsb
cmpsb
ds
ds
flds
cwtl
aad
cmp
insl
into
out
jge
fwait
mov
in
adc
and
or
in
aad
fnstcw
jecxz
jnp
inc
push
int
mov
repnz
call
enter
mov
mov
out
mov
gs
hlt
mov
mov
jno
roll
test
fisttpll
out
aaa
jb
pop
push
adc
aam
cmp
pop
jb
sti
daa
mov
sbb
xor
cli
jmp
int3
cmp
adc
filds
mov
dec
xor
movlps
inc
pop
and
outsl
push
les
mov
add
dec
push
mov
xchg
stc
lret
mov
push
jle
leave
dec
push
or
out
ret
pusha
add
push
stos
hlt
inc
pusha
cmp
mov
push
xorl
and
pop
jns
mov
fidivs
mov
cmp
out
test
inc
fst
jae
mov
jbe
mov
out
pusha
xlat
pop
adc
imul
das
int
in
dec
xor
xchg
xor
imul
adc
mov
shrl
push
add
leave
daa
pop
fwait
add
rorl
ret
enter
sub
adc
int
inc
inc
fsts
insl
sub
push
test
cmp
sbb
cmc
xchg
jmp
sub
loope
sbb
sbb
ss
mov
mov
pusha
mov
daa
mov
out
and
scas
hlt
inc
add
cmpsb
mov
hlt
inc
sub
mov
jbe
pop
lea
push
lds
or
add
testb
push
lahf
ja
sahf
jnp
xorl
pop
out
popf
jmp
mov
sbb
stc
and
sbb
fwait
inc
mull
ds
push
fidivrl
mov
out
outsl
push
adc
mov
jmp
or
iret
pop
mov
hlt
mov
ret
cltd
cmp
mov
mov
push
xor
push
aam
pop
in
push
inc
test
insl
mov
std
inc
dec
and
dec
and
gs
or
cli
pop
cli
mov
out
mov
scas
pushf
popa
inc
mov
je
or
addr16
enter
adc
cmp
xor
lds
mov
mov
js
test
sbb
std
in
fs
in
mov
js
test
dec
outsb
add
scas
sbb
movsb
lahf
cmp
xor
push
push
push
or
movsl
in
cwtl
xchg
xor
stos
imul
xchg
mov
xchg
iret
subb
inc
jno
cwtl
cmp
lret
enter
popa
inc
mov
outsl
cmpsb
jno
mull
jae
fstl
or
xchg
xlat
push
pop
push
cmp
dec
outsl
xchg
mov
les
mov
jb
xchg
popa
jecxz
mov
rol
enter
sub
addr16
shlb
in
sbb
cwtl
ds
pop
add
add
sbbl
sahf
sub
cmp
xor
insl
add
int3
sub
lret
cs
dec
out
nop
or
cmp
rolb
cmp
int3
mov
jge,pn
adc
in
jp
dec
cli
loop
inc
inc
dec
aas
or
lret
test
movsb
inc
xchg
insl
pop
xor
insb
mov
xor
movsl
insl
pushf
aas
inc
fwait
mov
outsb
shrl
insb
movsl
and
dec
or
sahf
mov
jecxz
jne
xor
sub
scas
mov
add
fcoms
inc
inc
dec
xchg
aad
mov
mov
sbbb
dec
mov
mov
orl
outsl
xchg
stc
aaa
insl
mov
cwtl
ror
lock
hlt
sbb
xor
jle
and
xor
push
mov
aaa
push
or
add
mov
aas
out
sub
mov
sti
jg
in
push
cmp
xor
inc
inc
cwtl
sbb
icebp
add
pop
cmpsb
lcall
stos
das
mov
pop
les
je
xlat
aas
cmp
lea
and
fnstenv
outsb
loop
add
leave
pushf
xchg
jl
scas
ljmp
and
jae
push
xor
add
sub
outsl
gs
mov
stos
cmp
cwtl
sbb
push
jnp,pn
push
lea
jnp
sahf
cmp
jno
mov
stos
jo
ds
fildl
icebp
aaa
sar
push
xor
mov
xor
addr16
xchg
ret
mov
ret
lret
scas
lcall
cmpsb
sub
add
pushf
cmp
imul
aaa
push
push
cs
out
dec
jo
mov
loop
dec
dec
mov
xor
dec
mov
push
mov
leave
lods
adc
pop
fnsave
lret
inc
out
jo
jne
lret
and
push
xor
jo
ss
fldt
jne
dec
mov
lret
loop
xchg
xor
push
push
mov
sti
push
popa
pusha
sbb
das
scas
mov
and
inc
push
mov
imul
jmp
mov
pop
mov
dec
in
mov
jge
std
sub
mov
int3
lret
fimull
lock
xor
inc
xor
call
push
insl
jg
lret
fcomip
leave
or
xor
into
xor
pop
js
data16
ret
jp
and
cwtl
fidivrl
or
in
xchg
enter
cmp
in
sub
xchg
dec
ljmp
adc
jle
or
mov
test
pop
dec
fucomi
adc
fildl
bound
pop
pop
mov
jae
test
add
mov
out
stc
pop
bound
mov
movsl
mov
sbb
ja
and
mov
jns
xchg
jo
lods
rorl
inc
fwait
pusha
push
mov
pop
loopne
jo
shlb
mov
sub
idiv
repz
cmp
adc
mov
push
sbb
test
mov
fs
clc
jne
push
loop
pop
dec
cmp
cmp
xor
sub
push
lcall
scas
dec
pusha
popa
sbb
cmp
push
out
inc
shl
idiv
pushf
pop
pop
orl
not
sub
sbb
dec
shl
sbb
dec
cmp
push
icebp
frstor
es
cmc
cmp
movsl
xchg
sbb
push
aad
jecxz
mov
push
jecxz
xchg
add
adc
sbb
jbe
jg
add
cli
or
sti
xchg
fdiv
sub
mov
xor
std
repnz
stc
sahf
push
in
mov
fldt
inc
mov
mov
mov
ss
jne
mov
add
out
cmp
outsb
or
test
xchg
icebp
cmp
sub
data16
push
xlat
push
jnp
or
pop
gs
addr16
jecxz
push
inc
mov
mov
push
test
imul
adc
cmp
adc
cli
pop
and
stos
arpl
scas
push
jo
nop
lods
mov
ljmp
clc
aas
mov
ror
stc
sub
add
insl
inc
pop
adc
xchg
xor
mov
arpl
out
aam
das
pop
pop
inc
pushf
adc
push
out
pop
mov
repz
mov
mov
lea
mov
leave
stos
pushf
movsb
shlb
dec
xlat
and
pop
jmp
loopne
xchg
pop
popa
pop
cld
hlt
std
dec
push
inc
movsl
rclb
es
mov
add
push
movsl
testl
gs
adc
shrl
xchg
sbb
out
movsl
xor
cwtl
mov
push
pop
jg
xor
push
mov
adc
mov
jp
outsl
mov
data16
shlb
jae
dec
xor
pushf
xchg
mov
push
test
mov
ficompl
testl
mov
loope
push
in
and
inc
mov
leave
dec
mov
xchg
adc
ret
xchg
adc
adc
or
xchg
mov
mov
cmp
popa
inc
sub
and
mov
int
add
lea
ljmp
add
cmp
dec
cmpsb
pop
add
in
dec
jmp
mov
stc
and
mov
mov
mov
repnz
cmp
pop
jns
cmpsb
mov
addr16
mov
or
js
cmp
cmp
loope
outsl
sbbb
xchg
hlt
ret
and
mov
jmp
dec
je
push
xchg
nop
add
nop
push
push
pushl
xchg
sub
adc
scas
out
inc
shll
stos
into
insb
mov
mov
or
int3
cmp
cmp
in
and
mov
inc
jae
pop
arpl
push
cmp
in
arpl
movsl
cmp
out
mov
test
cmpsb
lock
sti
mov
adc
mov
mov
andb
inc
mov
scas
sub
in
add
and
rep
in
cli
hlt
pusha
pushf
mov
push
ss
lahf
inc
dec
lds
mov
mov
addr16
pop
jmp
jl
jne
inc
xor
inc
addr16
or
cltd
jl
mov
and
adc
sub
mov
jge
scas
xchg
inc
sar
sub
into
dec
sbb
xchg
push
inc
cld
loopne,pn
push
pop
push
loop
fcompl
xchg
lods
scas
shrl
push
xchg
pop
and
daa
dec
sbb
dec
inc
or
scas
pop
adc
and
incl
insb
or
mov
cltd
jg
repz
fdivl
adc
ret
aas
adc
push
popf
pop
pop
fmuls
mov
push
call
or
hlt
cmpsl
stos
lahf
ret
lret
hlt
gs
cwtl
push
outsb
sub
mov
push
jle
clc
fstpt
mov
lahf
xchg
mov
in
sbb
sbb
fnsave
or
inc
iret
popf
mov
int
pop
adc
rcrl
sub
repnz
imul
jo
xor
lock
ret
pop
dec
push
dec
stos
xor
mov
out
ror
lret
push
add
adc
addr16
lock
mov
xchg
movsl
ja
ja
out
repz
push
sbb
inc
sub
jle
ficomps
push
and
loop
sbb
push
push
in
orb
push
pop
push
hlt
sub
mov
pop
xchg
pop
jl
lcall
lds
imul
push
mov
adc
es
popa
pop
mov
add
inc
xchg
adc
in
test
int3
test
std
jmp
mov
mov
out
negb
mov
dec
incw
xchg
mov
jmp
xchg
addb
jo
addl
xlat
mull
hlt
or
fbstp
mov
lret
inc
jns
add
jle
loop
mov
outsb
fnstcw
lahf
pop
cs
inc
rol
jns
mov
dec
cmp
mov
mov
mov
mov
scas
pop
int
popl
sbb
xchg
inc
xchg
lods
jg
jp
adc
je
sti
adc
jne
roll
mov
adc
das
int3
and
push
dec
lods
inc
test
jb
ret
clc
sub
mov
xchg
bound
clc
xchg
pop
movsb
aas
rol
push
dec
xchg
push
orb
repz
mov
and
jne
inc
push
cli
pushl
mov
lea
xor
into
jmp
pop
cmpsl
mov
adc
push
xchg
jo
lea
mov
test
cltd
xor
je
pop
stc
fcompl
fcomps
sub
test
test
fwait
ss
or
and
or
xchg
sub
insb
repnz
std
fisubrs
push
xor
movsl
and
fistps
jg
sti
adc
and
dec
ljmp
or
and
lea
mov
xchg
frstor
mov
out
daa
fwait
mov
dec
arpl
or
xlat
inc
je
mov
shlb
pop
lea
out
push
push
mov
bound
das
pop
pusha
aas
icebp
sbb
push
or
mov
and
test
adc
jbe
pop
and
idivb
jns
enter
dec
inc
pop
fwait
inc
push
push
mov
and
pop
inc
ficomps
push
jns
xchg
loopne
adc
test
xchg
int3
dec
mov
or
popf
xchg
cltd
jo
je
mov
frstor
fwait
daa
push
rcrb
xor
fisubrl
mov
stos
mov
aad
push
and
adc
jmp
sub
inc
dec
pushf
nop
outsl
cmp
push
cltd
fldenv
jge
movb
int
xchg
sbb
stos
stc
jnp
xchg
jo
sbb
fdivrs
jmp
or
stc
lcall
sub
add
cmp
stos
cmp
mov
bound
jns
cs
sbb
cwtl
jle
dec
pop
mov
xchg
push
repnz
pop
cmp
cmpsb
outsb
pop
ljmp
pop
adc
cmp
fbstp
fisubs
in
aas
adc
jecxz
clc
push
push
icebp
in
xor
sbb
jo
decb
fcmovu
jns
mov
rcr
mov
xchg
xor
insb
sub
dec
clc
ja
cwtl
sbb
jecxz
rorl
xchg
push
test
fstpt
repnz
inc
add
stc
xchg
push
xor
mull
mov
les
jecxz
ret
movsl
push
shlb
sub
pop
jo
outsb
sub
cmp
jne
dec
push
mov
inc
aas
repz
push
mov
stos
dec
pushf
int3
xor
sbbl
xchg
dec
fxam
sbb
mov
mov
ljmp
pop
inc
sub
sub
mov
icebp
and
fmuls
lods
cld
testb
lods
pop
test
fldl
pop
jbe
mov
int3
lret
cs
call
into
outsl
call
gs
or
sub
sub
jne
popa
repnz
dec
test
add
pop
mov
or
pop
movb
mov
sbb
or
sbb
jb
mov
ret
jl
mov
pop
pop
mov
mov
adc
cmpsb
jecxz
add
mov
jo
pop
fdivrl
push
jo
sbb
mov
jmp
ficompl
add
popf
sar
sbb
and
filds
jge
and
and
fisubrl
mov
dec
ret
dec
adc
add
dec
lahf
addr16
fists
in
cli
push
sub
pop
pop
lahf
mov
sub
out
ja
into
mov
sbb
stos
imul
inc
ret
and
inc
mov
push
sub
mov
fsubp
add
imulb
pop
dec
mov
add
fidivl
mov
aad
popf
jne
mov
xor
fbstp
insb
outsb
push
rcrl
xor
fwait
xchg
popf
enter
xor
mov
ficomps
or
or
call
xchg
lock
jl
inc
add
push
push
lret
fcmovnbe
push
in
subb
add
std
xchg
push
push
stos
add
sbb
insl
pushf
dec
vcvtdq2pd
xor
adc
mov
out
sub
mov
fcmovu
push
jecxz
ljmp
add
aas
add
in
in
pusha
push
xor
fdivr
enter
out
and
mov
stc
bound
sahf
fldt
jb
arpl
cli
mov
cmp
sti
and
fs
pusha
dec
jne
sub
inc
rorl
loopne
push
push
les
adc
mov
and
data16
sbb
es
insl
test
sub
imul
mov
shl
lea
xor
fldt
clc
outsl
icebp
inc
ror
ror
mov
call
loope
fldcw
adc
sbb
sub
data16
pop
mov
inc
push
insb
lahf
nop
test
mov
ret
mov
jno
jae
xor
lock
clc
sbb
adc
not
push
cmp
mull
mov
lods
int3
xchg
arpl
test
jmp
mov
sbb
push
sbb
mov
fcmovne
pop
push
mov
rolb
lea
call
push
cld
sbb
lea
stos
lock
repz
cwtl
je
lods
xlat
jge
inc
lods
adc
ret
or
mov
out
mov
outsb
in
ret
aas
in
bound
aas
int3
dec
add
rcrl
mov
int3
out
popa
aad
sbb
mov
incb
lods
inc
fcmovnu
pop
mov
and
inc
imul
insb
arpl
adc
xorl
fwait
pop
inc
lcallw
dec
jno
xchg
or
push
jp
aad
xchg
mov
cmp
arpl
or
sbb
add
adc
mov
sub
roll
or
add
rorb
js
mov
in
sbb
ret
inc
out
adc
lds
scas
fidivrl
jb
int
push
stc
pop
xor
inc
imul
dec
or
cs
outsl
movsl
out
insl
in
jp
pop
pop
leave
inc
enter
sti
fildll
cmp
lahf
lock
sub
xlat
cs
push
push
call
mov
xchg
pop
adc
sbb
mov
xchg
jmp
lret
stos
js
movb
add
xchg
ljmp
jo
mov
inc
loopne
xchg
iret
pushaw
or
test
or
sub
dec
inc
mov
bound
into
mov
mov
xchg
mov
ffreep
movsb
xlat
cmp
notl
test
push
jmp
mov
mov
jno
mov
fisttps
stc
pop
out
lret
js
ds
inc
jge
pop
fisubrl
xchg
sbb
adc
and
out
sbb
jl
fmull
test
push
sbb
or
test
mov
jge
sbb
dec
mov
xor
ret
mov
cmp
pop
or
imul
insl
in
mov
cld
adc
ds
js
outsb
lds
push
popf
jl
out
dec
sub
mov
fbld
inc
jl
cmp
ja
lods
xchg
xor
arpl
test
jne
clc
shll
mov
sbb
or
inc
mov
sbbl
out
xor
mov
cld
cmc
out
cs
loope
sub
test
push
mov
out
nop
mov
imul
ret
test
fimuls
jp
cmpsb
jecxz,pn
inc
cmpsb
jp
in
sbb
int3
and
enter
out
inc
inc
dec
adc
push
adc
dec
adc
test
sub
data16
sub
test
ficomps
sub
lret
mov
mov
mov
dec
cli
aaa
dec
xchg
das
imul
push
bound
inc
leave
in
test
xchg
outsb
in
sahf
mov
int
fimuls
aad
int
hlt
dec
popf
push
out
aas
movsl
arpl
dec
imul
stc
dec
mov
fdivrp
js
fsubrl
out
and
movsl
pop
xor
in
dec
shl
int
xchg
jnp
fwait
mov
test
int3
icebp
ljmp
mov
aas
pop
jne
cmc
jmp
call
push
mov
sub
pusha
cmp
jbe
out
addb
and
add
add
push
jmp
je
rcr
mov
jp
xchg
adc
lods
mov
jnp
mov
add
jno
leave
pop
mov
lea
cmpsl
arpl
mov
js
sbb
scas
jmp
sar
cltd
loop
negb
xor
iret
lock
loope
adc
in
cmp
fisubrl
cltd
or
sub
cltd
cmc
jnp
test
jae
enter
pop
scas
xor
mov
fistpll
xor
inc
mov
ljmp
lahf
and
ret
or
loope
rolb
push
xchg
cmp
pop
sahf
sub
out
pop
inc
popa
aam
pop
cmpb
sbb
mov
pop
pop
mov
fstpt
shrb
jmp
aas
xor
cmp
lds
mov
aam
pop
jnp
pop
mov
inc
ret
cmpsb
mov
and
lea
mov
sbb
ficomps
nop
in
xchg
sbb
dec
inc
sti
mov
jb
aaa
adc
push
mov
popf
mov
hlt
imulb
repnz
dec
xchg
or
test
pusha
into
mov
shl
test
bnd
xchg
fiaddl
orb
outsl
dec
aas
outsb
aas
stc
xor
add
lods
and
sub
mov
sti
mov
fdivrl
add
adc
popf
pusha
or
arpl
cwtl
or
test
mov
sbb
adc
push
loope
in
shrb
fld
mov
adc
pushf
xorl
cmpb
mov
and
ficoms
pushf
sub
add
cwtl
pop
bswap
out
popa
shrb
filds
je
xor
leave
iret
leave
cmp
test
xchg
mov
mov
sbbb
scas
xchg
mov
inc
xlat
outsl
pop
inc
lds
sbb
mov
int
xchg
lcall
insl
rolb
outsl
dec
mov
test
jne
adcl
cmp
adc
cld
lea
lock
stos
and
jmp
or
repnz
push
lock
mov
std
xchg
pop
push
push
movsl
mov
roll
fidivl
psraw
fdiv
in
test
sub
adc
sahf
sbb
sbb
cltd
out
sbb
mov
leave
imul
pop
mov
xorb
daa
mov
jae
pop
inc
pop
std
loop
inc
loop
mov
ss
pop
js
inc
and
cmp
mov
les
inc
imul
test
push
inc
sbb
loop
pusha
mov
int3
push
test
sub
cmpsl
lahf
mov
mov
add
adc
cmp
push
fsubr
fisttpll
pop
and
sub
adc
in
jb
inc
jmp
pop
in
xchg
adc
jp
hlt
shlb
bswap
stos
ret
test
lret
pop
or
outsl
movsl
cmp
dec
mov
int
js
bound
dec
shl
cmpsb
xchg
popf
fdivrs
stos
mov
pop
mov
dec
inc
inc
jne
ret
push
idivl
dec
popa
adc
mov
jl
js
dec
mov
fdivr
push
leave
enter
adc
lret
xor
loope
pushf
lahf
inc
lahf
dec
xor
and
sub
inc
push
jns
sbb
cwtl
and
mov
scas
xchg
pop
shlb
push
sahf
and
xchg
cld
sahf
sbb
lcall
cmpsb
mov
adc
mov
out
repz
lahf
jle
shr
and
sbb
fwait
xor
and
and
push
pop
jg
and
std
sti
mov
int3
xor
das
movsb
jmp
cs
xchg
adc
mov
adc
sbb
scas
rolb
in
cmpsl
jmp
xchg
cmp
es
cmp
and
fildl
jnp
mov
arpl
adc
and
repnz
and
fs
add
xchg
and
lods
jb
mov
add
mov
leave
pop
and
lods
aam
flds
cmp
aad
jbe
loop
push
sub
adc
xchg
jae
sar
add
xchg
in
aaa
adc
fisttpll
dec
popf
dec
dec
xchg
cmp
sti
dec
or
push
inc
cmpsb
movsl
addr16
jecxz
mov
incl
mov
mov
out
xchg
or
aam
adc
std
add
inc
inc
repz
pop
aad
mov
lods
push
adc
or
call
daa
lock
jge
fdiv
out
dec
rcrb
jl
sub
nop
mov
jb
cmp
stos
cmp
xchg
lcall
jo
clc
add
into
mov
fcomp
mov
add
out
cmpsb
adc
cmp
jne
scas
cmp
sub
fists
mov
adc
sub
adc
jl
sbb
mov
cmp
mov
ss
sbb
and
stos
lock
cmc
sub
pop
dec
push
jo
bound
testb
jge
iret
jb
sahf
push
movsb
out
pop
cltd
sahf
adc
rcl
xlat
cmp
loopne
lea
ss
dec
mov
mov
xor
or
out
idivb
push
jp
cmp
loop
repnz
jno
xchg
push
dec
loopne
mov
ss
cltd
sti
cld
subl
sub
add
enter
insb
xchg
xorb
adc
insb
and
movsl
inc
inc
sbb
or
xchg
mov
and
sub
dec
jge
movsb
out
lcall
daa
mov
and
cmc
pop
and
inc
lds
test
sub
push
out
fcomip
rcl
mov
aad
sbb
imul
pop
xchg
mov
lods
in
pop
icebp
mov
popa
or
pop
fiadds
mov
or
inc
sbb
xchg
nop
out
je
jns
int
jp
cmc
fistpll
loop
movsl
je
sbb
dec
jmp
aam
sbb
mov
mov
movsb
ss
test
xor
xor
inc
fdivl
sbb
push
cltd
movsb
mov
xchg
mov
mov
out
sbb
add
test
out
out
ror
or
daa
pop
xchg
cmp
fsubrl
test
or
leave
pop
ds
sahf
cld
mov
adc
mulb
push
sub
imulb
xlat
mov
ja
cmp
jg
mov
int3
in
sbb
mov
push
mov
je
test
xor
cs
outsb
adc
loopne
jmp
inc
dec
xchg
ds
mov
int
or
fwait
dec
test
push
rcll
cmpsl
test
adc
inc
bound
sbb
adc
mov
xor
aaa
mov
mov
cmp
roll
aas
xchg
mov
mov
pushl
pop
adc
mov
stc
cmpsl
xchg
xchg
std
call
jl
dec
jb
rcll
pop
ss
ret
sub
xchg
xor
mov
sub
mov
dec
lret
cwtl
stos
jae
fisttpll
jge
sub
cmp
pop
cmpsb
jecxz
push
pop
xchg
mov
movsb
shlb
data16
pop
dec
addr16
sub
stc
add
jae
rorb
mov
pop
popa
imul
movsl
call
xchg
and
fcomip
xchg
dec
and
jge
sub
cmp
fmull
inc
jne
test
inc
in
dec
pop
sub
jno
shl
sbb
adcb
loope
mov
je
iret
ljmp
xchg
test
lret
dec
lcall
fwait
in
xor
cmp
insl
mov
dec
mov
aas
xchg
cmp
cmc
or
jbe
div
xlat
imul
push
pop
adcl
sti
mov
mov
sahf
add
pop
clc
imul
shrb
cmp
leave
cld
inc
ljmp
pusha
jl
fcompl
js
test
dec
cltd
imulb
jns
xchg
and
inc
hlt
std
lret
cmp
ds
mov
mov
dec
xchg
les
sbb
decb
int
out
cmp
daa
mov
daa
movsl
pop
and
lock
jns
xor
pop
jno
fcomp
jns
pop
add
leave
adc
movsl
jecxz
fldcw
push
movsl
addb
jo
inc
data16
vunpckhps
lcall
xor
add
cmp
and
rcl
gs
mov
gs
shrl
mov
sub
ljmp
dec
fstpt
out
std
fucomi
add
add
dec
mov
jbe
loop
or
push
lahf
jb
mov
sbb
pop
insb
ret
xchg
mov
test
xchg
mov
xchg
add
jbe
dec
cmp
int
rorb
iret
imul
xchg
mov
xchg
imull
sbb
and
dec
dec
sbb
shr
je
xchg
repz
cmp
mov
push
das
sahf
cmp
aas
mov
or
sub
or
xor
cltd
push
repz
and
das
mov
lret
xlat
mov
mov
adc
dec
and
dec
push
in
and
in
testb
out
adc
subl
int
pop
cmp
mov
sub
call
or
or
sub
xchg
cmp
mov
popf
testl
dec
rcrl
popa
mov
stc
adc
aam
out
jb
ret
xchg
dec
mov
movb
fwait
push
imul
xchg
mov
mov
loopne
pop
jae
push
pop
push
push
test
mov
sti
ds
push
push
mov
jecxz
cli
jmp
shlb
ja
icebp
cwtl
add
inc
mov
push
and
jmp
cwtl
inc
lods
dec
lock
scas
ja
sub
insl
mov
jae
loopne
cmp
aas
add
out
into
push
pop
jge
dec
xor
cmc
mov
loop
mov
pop
xchg
test
push
or
pop
cmp
popa
pusha
js
mov
cmpsb
mov
ret
stos
or
adc
sbb
mov
leave
sub
mov
cmp
movsl
inc
mov
dec
inc
push
fdivrp
clc
test
aad
and
and
jl
pop
add
sarl
imul
jecxz
dec
sub
jae
imull
dec
jmp
jmp
sub
mov
mov
test
mov
insb
add
mov
mov
or
sub
mov
es
dec
std
or
in
pop
ret
or
test
mov
mov
popf
outsl
fldl
pop
fldenv
jno
or
dec
lret
rclb
addr16
inc
in
ljmp
dec
lret
mov
push
sbb
jae
mov
test
and
nop
loope
inc
loopne
negl
orb
popf
inc
fildl
push
fdivrp
cmc
adc
ret
cld
out
nop
ret
fdivl
mov
aad
dec
inc
out
test
bound
push
pop
ds
sti
adc
aad
aaa
enter
movsl
add
movsl
mov
lret
push
out
addb
ftst
add
es
div
jns
repz
mov
jb
cmp
cmp
add
enter
mov
adc
xchg
sbb
in
ret
insl
pusha
inc
sub
pop
adc
xchg
out
mov
scas
pusha
in
insb
shlb
test
imul
clc
dec
add
jbe
xchg
aam
sbb
gs
dec
pop
xor
subb
fucomp
mov
es
sti
icebp
or
xor
xor
xor
orb
movsb
push
jb
inc
cmp
add
stos
call
xchg
gs
cwtl
popf
je
mov
fiadds
xchg
popa
or
mov
ret
inc
js
and
sub
scas
dec
push
outsb
hlt
fwait
or
out
hlt
clc
in
adc
shll
mov
xor
xchg
mov
pop
ja
sub
dec
sbb
cmp
xlat
sbb
int3
push
add
scas
shlb
cmp
mov
adc
dec
inc
dec
sbb
aas
dec
iret
inc
jnp
cmc
xchg
fldt
add
adc
sarb
and
jb
cmp
stos
popa
cmp
stos
xchg
sti
mov
adc
out
repnz
push
int3
inc
mov
leave
add
dec
cli
stos
shrb
cmp
pop
fld
fnsave
xor
dec
pop
mov
pop
loope
dec
or
mov
aaa
jbe
int3
mov
sbbl
cmp
mov
aad
lret
test
in
sbb
cmc
mov
hlt
imul
in
push
or
in
mov
lods
mov
fistps
push
ret
xchg
pop
mov
xor
aad
cwtl
and
loope
dec
cmp
sbb
arpl
stos
push
fwait
outsl
ja
push
jp
pop
jge
out
mov
scas
mov
dec
jns
outsl
jp
dec
jne
jo
mov
jg
add
adc
xor
dec
cmp
lock
les
or
adc
repnz
xchg
insl
lret
mov
push
dec
arpl
dec
mov
in
out
aad
push
or
or
in
lds
and
sub
test
mov
arpl
shlb
jp
mov
lahf
ss
xlat
cmc
stos
rcll
repz
mov
dec
ja
addr16
cmp
sub
jecxz
cmp
cli
adc
xor
sbb
nop
mov
jle
jecxz
dec
stos
mov
hlt
lret
popf
dec
aam
ret
mov
pop
popf
push
or
cltd
mov
ljmp
in
sbb
or
xor
fwait
inc
dec
cmpsl
pop
sub
pop
mov
mov
jne
mov
xlat
add
dec
push
adc
add
aas
pop
sub
test
mov
fldl2t
and
pop
push
push
pop
jmp
cltd
xchg
repz
lret
inc
aad
loop
roll
inc
lea
dec
push
cs
les
push
xor
dec
mov
aam
pop
inc
out
jg
out
insl
lcall
sub
aad
sbb
pop
inc
imull
into
xor
stos
sub
sbb
fwait
call
sbb
mov
inc
orl
testb
sub
fsubl
or
dec
or
into
sbbb
sub
js
bound
mov
lds
sub
lods
cmpsb
test
call
aad
clc
out
xor
mov
mov
mov
cmp
lods
mov
pop
cmp
or
fidivrs
out
add
insl
fistps
mov
movsb
cmp
mov
adc
fldl
pop
adc
rolb
pop
xchg
popa
cmp
hlt
cmc
mov
mov
cwtl
in
cli
in
fadd
xor
out
leave
adc
add
js
push
das
jmp
or
mov
pusha
pop
add
add
inc
mov
push
es
cwtl
dec
inc
mov
mov
or
fcom
icebp
rcrb
push
mov
adc
lock
and
movsb
pop
pushf
cmp
pop
into
jl
and
xchg
ljmp
notl
idivb
test
dec
fnstcw
add
pop
sub
insl
pop
add
mov
into
fcmovnu
aas
jo
rol
mov
and
add
or
fmuls
push
stos
mov
sbb
imul
out
shll
sbb
or
int
sub
lods
sub
scas
fidivrs
mulb
std
lea
jle
cmpsl
test
xor
push
ljmp
test
mov
das
repnz
movsl
sbb
dec
lahf
roll
mov
nop
int3
push
add
cli
ds
adc
push
add
dec
sub
add
push
xor
and
scas
js
jns
mov
adc
out
loope
xchg
mov
cmp
ror
push
cs
adc
iret
ljmp
aam
arpl
or
test
jno
fxtract
mulb
push
repz
xor
out
or
inc
hlt
ljmp
mov
mov
adc
xor
test
push
in
out
pop
xchg
xorb
setnp
add
popf
jo
push
adc
ret
mov
jb
shlb
fisttpll
xchg
cmp
cmp
lcall
jmp
ss
fidivrs
icebp
lcall
stos
mov
cltd
jo
popf
jmp
and
je
cmp
and
std
scas
xorl
lcall
popa
ss
scas
or
sbbb
dec
dec
inc
xchg
addl
loope
stos
pause
inc
sub
xor
in
sbb
ret
cmpb
mov
mov
fs
push
mov
and
lcall
fsubs
mov
xlat
mov
in
test
stos
pop
sarl
loopne
pop
pushf
cltd
cld
stc
xchg
pushf
jg
sbb
pop
mov
push
ss
fimuls
lods
sbb
xor
in
xchg
xchg
jns
lahf
xor
inc
mov
mov
cmp
mov
sub
push
push
jg
inc
lock
gs
pop
cld
push
cltd
pop
mov
mov
jecxz
je
test
xor
mov
rcrl
sti
in
add
fwait
lcall
mov
imull
cmpb
pop
into
mov
aaa
dec
leave
jp
jl
arpl
dec
mov
cwtl
popa
add
mov
mov
insb
mov
imul
ficompl
pop
and
enter
sub
mov
pusha
or
jmp
dec
jns
popf
jl
mov
lods
fmull
jmp
pop
push
repz
inc
mov
out
adc
dec
jbe
pop
dec
xor
jle
xchg
sbb
add
and
fcmovb
mov
sub
flds
jge
stos
imul
xchg
movsb
lods
ja
push
fwait
pushf
xorb
fwait
lret
add
sbb
mov
setge
popa
cmp
mov
movsl
and
sbb
nop
outsb
xchg
mov
sti
mov
inc
add
dec
dec
jno
pop
inc
lods
scas
stos
in
lret
inc
fcomps
icebp
dec
shll
adc
out
lcall
sbb
or
add
lods
push
ds
setb
lret
adc
mov
mov
loopne
dec
aam
mov
fs
and
jne
les
push
outsl
mov
cmc
lods
dec
mov
push
subl
xchg
aam
lret
inc
loopne
mov
je
rclb
stos
adc
into
stos
and
mov
jnp
cmc
out
notl
in
pop
and
js
cmc
cmc
inc
push
or
push
mov
jbe
ret
rcr
jl
xor
out
shll
scas
sbb
inc
mov
or
sub
mov
jne
icebp
push
ja
loope
out
outsl
insl
push
adcb
jb
jne
cmp
dec
dec
pushf
sbb
outsb
repnz
xchg
xchg
je
or
subb
pushf
daa
pop
mov
js
adc
inc
sub
in
xchg
xchg
stos
out
pop
mov
sub
test
ret
mov
imul
mov
fs
adc
out
mov
test
adc
fsts
add
adc
and
pop
sub
add
test
mov
fsubl
icebp
shll
icebp
pop
nop
movsl
mov
jbe
cmpb
sahf
pop
jecxz
jle
inc
es
mov
mov
jbe
xor
mov
mov
cmp
in
jae
mov
movl
aad
pop
dec
movsl
xor
lods
mov
cmp
movsb
jnp
iret
in
pop
dec
cmp
ss
cmpsl
sbb
cltd
sub
inc
ret
mov
enter
in
mov
add
in
stos
ret
fucomp
inc
in
outsl
pop
test
push
sarl
aad
stos
or
jp
xor
ja
shr
add
lret
sahf
fs
mov
mov
aas
sbb
dec
daa
mov
lcall
mov
mov
lock
push
mov
fwait
lahf
and
inc
inc
pusha
stos
mov
fistpl
dec
nop
pop
in
cwtl
bound
jecxz
js
in
push
jae
mov
test
fdivl
mov
imul
jns
mov
fwait
sbb
dec
pop
cmc
jle
je
mov
xchg
mov
mov
lds
or
shl
xor
jne
inc
jnp
jbe
lods
in
push
push
and
mov
hlt
nop
adc
std
and
ja
xchg
push
mov
das
pop
xor
jge
pop
loop
repz
stc
sbb
imul
xchg
pop
and
pop
and
insb
push
mov
shlb
push
mov
pusha
sti
jle
loopne
cmpsl
or
arpl
adc
cmpsb
sbb
pop
sahf
in
sbb
in
add
popa
movsl
insb
stc
cld
sub
cmpsl
shrl
pushf
or
xor
aaa
and
jg
xor
add
jge
xchg
pop
xchg
inc
addr16
adc
stos
addr16
aas
and
hlt
pop
xchg
daa
leave
lret
mov
mov
into
dec
mov
cld
jp
mov
mov
orl
mov
test
add
repz
push
lret
cmp
jle
int
lcall
in
sbb
and
pushf
ss
pop
into
and
jge
xor
mov
jle
xchg
xchg
dec
inc
pop
ret
jbe
mov
dec
sub
das
xchg
push
sbb
mov
dec
lahf
mov
or
xor
cmc
notl
or
mov
in
outsb
cltd
cld
imul
aam
test
pop
test
mov
gs
cltd
lds
adc
out
and
push
insl
lret
arpl
fiadds
and
jno
rcl
add
and
push
cmp
pop
nop
je
vpminub
sub
ja
repnz
jnp
inc
sar
flds
sarl
jp
inc
and
and
mov
xchg
xor
add
out
sbb
cmpsb
fstps
sbb
and
mov
ss
jge
sbb
mov
ja
test
adc
daa
sub
mov
push
cmpsl
sub
popf
mov
ljmp
shlb
ret
addr16
test
std
or
sub
lcall
les
outsb
adc
pop
rcrl
cwtl
cwtl
ja
sahf
cmpsl
and
pop
mov
pop
dec
fstp
jno
jmp
les
and
dec
cmovl
cmp
sahf
ljmp
push
dec
cmp
push
call
xor
inc
push
add
lds
mov
adc
mov
ljmp
pushf
pop
pop
jl
ds
adc
mov
loop
mov
sbb
jg
cmc
mov
lahf
jns
test
xchg
cmp
and
inc
push
dec
stos
pop
fimuls
clc
push
inc
pop
pop
insb
xchg
sub
loopne
popf
push
mov
mov
std
add
mov
js
movsb
push
imul
sti
push
sar
call
add
cltd
lock
lds
cwtl
push
sbb
pop
icebp
sub
gs
aas
jbe
negl
aas
mov
push
mov
insb
adc
cmp
sbb
add
dec
fsin
dec
add
jl
adc
xlat
std
pusha
mov
mov
pop
push
xor
lock
lds
add
stos
shlb
loopne
cmp
mov
pop
das
pop
cmp
add
loop
ficompl
ds
lods
and
shll
cmp
add
sub
xchg
in
mov
mov
jae
stos
inc
jecxz
pushl
add
lods
xchg
movsb
pusha
sbb
cmp
mov
in
rorb
test
pop
mov
jmp
xorb
iret
jb
sbb
xchg
inc
adc
call
push
imul
out
dec
ss
push
test
push
xchg
adc
jbe
pushf
daa
mov
jbe
and
cmp
cmp
int
mov
fidivs
mov
out
fisubrl
ficompl
mov
ja
inc
jo
mov
mov
mov
cmp
mov
stos
cltd
adc
fcmovb
jmp
sub
jge
xchg
sub
fidivrs
inc
push
in
mov
ds
push
add
sub
je
popa
sbb
push
adc
jnp
clc
stos
push
bound
cmpsl
int3
aam
push
add
icebp
add
in
add
js
mov
rcl
push
cli
daa
inc
push
cmp
mov
mov
mov
or
int
lret
sub
mov
or
aam
push
cli
out
mov
adcl
les
pop
or
out
push
mov
adc
sbb
cwtl
ret
in
mov
lods
pcmpeqw
sbb
xlat
xor
sbb
mov
jo
jp
scas
sbb
dec
in
or
jecxz
mov
cmp
xchg
shll
fucomp
lock
call
ljmp
shlb
jecxz
and
dec
aas
iret
fmul
repz
jns
push
sub
shl
inc
cmp
ds
mov
in
pop
aaa
cwtl
and
test
dec
mov
scas
cmp
nop
fucom
jle
pop
sbb
push
sahf
cltd
les
scas
mov
adcb
out
push
inc
lea
dec
mov
or
lret
test
dec
lahf
adc
rorb
lcall
mov
shlb
mov
push
or
dec
xor
lods
push
sbb
sbbl
in
sub
cmpsb
dec
int
push
sub
stos
push
fwait
lcall
je
xchg
push
lret
fwait
jne
jo
negl
mov
movsl
leave
xor
fucomp
fadd
in
jb
pop
je
test
xchg
aas
mov
cmp
ja
mov
push
pop
cs
stos
mov
mov
insb
addr16
push
addl
pop
inc
movb
sbb
inc
jl
push
test
inc
dec
sbb
icebp
and
loope
stos
std
jecxz
push
cld
lods
test
jnp
inc
push
shl
and
shlb
inc
call
cmp
in
in
dec
sub
jge
sbb
dec
stos
stos
adcb
push
shll
xchg
mov
jbe
aas
aam
cmc
pop
mov
lods
repnz
mov
push
xor
sub
les
jnp
fcmovnu
xor
jbe
cmpsb
cmp
pusha
dec
push
inc
add
loopnew
sti
fsubl
lret
rcrb
movsl
and
stos
cmp
adc
call
add
popl
jmp
aam
jo
int3
cmp
loop
fwait
aas
sub
xor
add
insl
imul
mov
jo
xor
xlat
pushf
cmp
pop
sub
inc
iret
cmp
fisttps
call
jl
in
cmpsl
mov
xchg
jo
fiadds
mov
outsl
scas
pop
leave
imul
xor
daa
in
frstor
xrelease
ss
xchg
sti
jl
insb
mov
fdivrl
es
jg
repz
xor
shrl
sbb
add
sbb
mov
ret
fstpl
or
push
push
dec
mov
orl
cmc
das
pop
pop
ficompl
mov
xchg
xchg
in
cmp
call
fwait
add
mov
jg
sti
gs
fs
js
ds
or
stos
push
enter
mov
inc
mov
pusha
stos
dec
push
ja
xchg
lahf
sub
dec
xchg
in
pop
enter
jl
test
sub
lcall
dec
push
gs
aaa
outsb
mov
mov
and
out
cmp
jmp
adc
push
sti
scas
adc
stos
inc
mov
and
jl
mov
gs
movsl
push
cmp
push
je
ret
cmp
lea
add
aas
jbe
lds
xchg
les
fldl
faddp
lea
push
xor
add
in
subl
cmp
out
arpl
stc
mov
jns
mov
leave
nop
cmpsb
popa
in
insb
enter
push
cmp
sub
dec
mov
dec
pusha
push
fcoml
ret
push
in
cmpsl
sbb
stc
mov
sti
cs
scas
mov
std
mov
pop
mov
mov
or
js
out
into
ficompl
jne
mov
pop
pop
xchg
das
inc
cmp
xor
xchg
jb
and
call
jmp
lods
in
ljmp
subb
jae
test
xor
push
xchg
pop
sbb
and
jns
arpl
and
in
sub
mov
jge
dec
in
and
xor
pop
lret
mov
fcomps
add
pusha
addb
lret
sbb
out
call
pop
in
test
dec
sti
fmull
dec
add
mov
push
xchg
lds
gs
fsub
outsb
jbe
jg
cwtl
xchg
insb
movsl
xchg
icebp
mov
xlat
pop
aad
jno
mov
fidivrl
in
call
cmp
sbb
dec
xchg
lods
inc
xchg
or
fs
sub
fcmovu
dec
pusha
pop
mov
pusha
jl
clc
loop
ret
in
iret
adc
fldt
jae
aas
jg
rcl
rcrl
inc
xchg
popa
pop
mov
push
add
add
inc
pusha
adc
addr16
inc
arpl
sub
lcall
xor
roll
mov
mov
inc
sub
pusha
fidivs
addb
add
pop
push
or
cwtl
and
mov
in
inc
in
xor
sbb
nop
mov
movsl
mov
xlat
inc
sub
sbb
neg
mov
cli
cmp
bound
popfw
pop
aaa
add
daa
sub
dec
xlat
jne
aaa
roll
icebp
sub
sub
or
inc
das
pop
add
push
sbb
sbb
dec
xchg
xchg
sti
lahf
cli
xchg
inc
mov
gs
or
inc
mov
jnp
pop
lock
mov
aas
pop
out
rcll
lcall
xor
push
loope
xor
lds
push
popa
nop
cmp
xlat
out
mov
or
sar
movsb
enter
cmc
mov
ds
mov
aad
insl
fprem
int
shrl
sti
mov
sub
ja
adc
xor
xchg
jbe
iret
into
imull
xor
sti
fs
xor
push
movsb
adc
push
adc
mov
lods
leave
xchg
sbb
mov
fucomi
das
sahf
ja
and
stc
cs
data16
clc
mov
ja
mov
push
adc
add
sub
mov
iret
out
packuswb
push
cltd
adc
dec
rorl
inc
pop
mov
xchg
cltd
lret
push
lea
and
mov
xorb
push
in
daa
loope
pusha
pusha
inc
test
mov
fiadds
sub
pop
loopne
jg
and
push
xor
lahf
xchg
test
repz
push
and
out
pop
pop
push
and
cwtl
hlt
ret
inc
push
jbe
push
push
notb
in
ljmp
fldenv
cmpsl
leave
stos
mov
shlb
int3
xor
shrl
ficompl
outsb
mov
jns
push
and
jecxz
sti
test
add
flds
lds
dec
sub
shlb
cmp
faddl
out
test
lods
das
or
cli
sbb
ljmp
jo
pop
cltd
out
aas
cmp
pusha
and
lret
cmp
int
fwait
mov
ret
dec
int3
cwtl
sub
push
push
or
mov
scas
mov
jp
imul
jge
xchg
push
imul
das
mov
popf
lds
ror
out
sub
inc
adc
out
jmp
fisubl
pop
jae
adc
xor
popa
dec
push
inc
or
inc
lahf
and
mov
cwtl
pop
dec
inc
xlat
inc
loopne
sub
add
les
push
mov
cmpl
push
loop
mov
pop
and
mov
lods
jae
and
cmp
push
ret
gs
aad
inc
mov
loopne
sub
lods
mov
test
sub
loope
push
mov
mov
loopne
jns
mov
popf
mov
loopne
sub
or
add
inc
inc
xchg
xchg
mov
pop
outsl
xchg
lret
mov
xchg
aaa
dec
sbb
xchg
negb
dec
pushf
xchg
fwait
lods
or
mov
mov
push
cmpsb
mov
inc
xchg
xor
xchg
push
movsb
xlat
into
outsl
push
les
lahf
mov
xchg
push
mov
enter
mov
jle
push
shlb
lret
mov
gs
dec
cs
enter
pop
dec
pop
test
inc
xadd
outsl
push
jns
call
add
in
sub
sbb
sti
ss
iret
mov
lods
xchg
clc
mov
mov
adc
pop
jae
test
or
jecxz
ja
out
inc
test
mov
insl
cmc
inc
sbb
sbb
out
push
movsl
std
pop
add
add
jne
hlt
and
mov
add
cmp
insb
ret
rolb
loop
xchg
shr
cmp
out
mov
mov
mov
inc
jmp
jnp
bound
or
js
xor
pop
mov
jae
pavgb
clc
jae
lods
repz
xchg
mov
dec
push
test
jmp
push
dec
out
cmc
cltd
ret
mov
imul
fisubrl
lret
add
or
pop
mov
shl
scas
popf
mov
mov
aam
pop
inc
insb
fbstp
cld
movsl
mov
or
dec
fucomp
inc
jge
mov
fwait
or
adc
push
stos
xor
jb
mov
insb
dec
sarl
push
lea
adc
in
mov
enter
pop
dec
movsb
jno
mov
stos
xor
call
mov
mov
sbb
and
orl
ds
inc
adc
stos
or
add
jge
mov
jp
cmp
pop
push
inc
push
int3
mov
lds
leave
jnp
push
adc
lcall
fldenv
addb
cmpsb
jmp
clc
sub
daa
stc
mov
pusha
and
push
pop
sbb
jl
mov
test
ja
inc
fbld
xchg
push
scas
fwait
sahf
push
push
pop
adc
adc
sub
and
xor
xchg
push
cmc
inc
popa
daa
add
je
xchg
mov
movl
adc
aad
inc
or
loopne
bound
imul
xchg
pop
pop
pop
mov
pop
sbb
in
sbb
ret
fwait
xor
cmp
cmp
lock
shlb
dec
ss
inc
stos
jnp
in
sub
and
and
loope
scas
nop
mov
add
adc
and
push
rcrl
inc
or
frstor
out
and
js
and
ja
xor
xor
pop
or
pop
ss
mov
add
xchg
shll
je
outsb
pop
test
cmpsb
lods
repz
dec
scas
ret
outsl
jmp
inc
adc
fstpl
movsb
out
fdivrl
pop
orl
cmpsb
adc
test
cmpsl
mov
jns
inc
stos
cmp
cmp
lods
mov
mov
cmpsb
sbb
adc
add
sar
das
loope
cmp
pop
xchg
cltd
or
sub
xlat
dec
lods
add
int
in
les
inc
ficoml
adc
ljmp
adcb
or
push
clc
or
insl
and
add
push
jbe
sub
mov
push
popa
inc
cld
inc
outsb
in
int
or
xchg
push
push
pop
and
frstor
push
and
inc
or
add
sti
cmp
xchg
sub
mov
icebp
sbb
ret
mov
mov
dec
and
mov
dec
lock
addr16
shl
mov
dec
sbb
ret
out
xor
pop
ja
jge
sti
ret
enter
cs
enter
bound
jge
movsb
mov
cld
jne
and
jge
fadd
ds
stos
lahf
push
mov
xlat
stos
rcrl
xchg
aad
mov
sub
xchg
cmc
ret
ljmp
mov
jl
dec
fcmovu
out
aas
loop
jge
pusha
lahf
pop
xlat
outsl
out
andb
js
popa
xor
cld
fnstenv
inc
push
cltd
sbb
clc
lcall
fidivs
cmp
int
push
in
je
outsb
mov
stc
fnstenv
mov
in
icebp
in
stc
ja
inc
andl
loop
and
out
cld
add
add
leave
es
inc
mov
inc
mov
call
ds
ss
adc
add
sbb
cld
into
fsubrs
loop
les
mov
nop
loop
xor
inc
arpl
mov
or
jns
shll
clc
out
cs
push
jg
pop
shlb
lock
dec
mov
xor
push
mov
mov
lock
jb
add
ds
int3
sahf
or
push
cmp
mov
xor
cld
push
es
push
push
mov
xor
add
insb
mov
in
mov
inc
and
cmp
and
scas
inc
ja
and
fidivrl
jmp
sub
mov
clc
fdivl
add
aaa
movlps
mov
adc
sub
faddl
cmp
fbld
mov
roll
adc
outsl
dec
pop
or
loopne
xchg
mov
add
sbb
dec
mov
sbb
stc
push
adc
sbbl
push
ret
mov
jo
mov
xor
mov
lret
xor
adc
xchg
cltd
xchg
jg
jmp
movsb
and
sbb
jp
xchg
sbb
jne
inc
sti
cmp
pop
stos
inc
in
cmp
repz
pop
in
push
xchg
xchg
mov
mov
cmpl
xchg
sarb
dec
cmp
lret
popf
pop
xchg
pop
add
or
jae
test
dec
pop
sub
cmp
inc
pop
sub
loop
jnp
xor
pop
out
sahf
aad
sti
arpl
insl
mov
popa
scas
in
or
ficompl
jbe
daa
outsb
pop
ret
mov
cmpsl
mov
lcall
mov
cmpsl
pop
add
pop
mov
cwtl
sarl
cs
aam
inc
xor
sbb
ret
pop
xchg
in
push
ljmp
mov
lahf
ja
mov
and
rolb
hlt
xchg
dec
dec
sub
mov
inc
push
shrb
mov
cmp
push
push
cltd
push
xor
fs
int
mov
subb
aam
xchg
call
insb
xor
iret
mov
push
clc
in
out
jecxz
push
pop
pop
mov
addr16
push
or
sarb
jns
inc
fs
fisubs
filds
test
outsl
or
or
jae
pop
jmp
stos
loope
push
sbb
push
mov
cmc
mov
pop
sahf
mov
lcall
in
jns
mov
bound
cs
or
cs
jmp
mov
push
mov
inc
and
js
enter
add
pop
movl
sub
rorb
pop
cmpsb
je
mov
pop
idivl
push
out
pop
lret
xchg
cmp
lahf
mov
in
fcmove
sbbl
push
and
cmpsl
ljmp
aam
inc
test
mov
jmp
or
movsl
xor
cmc
pop
je
xchg
into
and
pop
leave
inc
in
cs
in
lea
sti
mov
ficoml
outsb
and
fisttps
stos
adc
sub
int3
and
jl
pop
cmpsl
adc
sbb
push
push
into
xchg
test
rol
pop
shrl
dec
mov
movsl
push
bound
mov
nop
mov
loopne
mov
dec
jl
jae
mov
jle
mov
mov
ret
jne
cmpsb
sub
cwtd
xchg
xor
mov
or
dec
jg
sbb
lcall
shrl
cmp
adc
repz
mov
icebp
fcom
aaa
js
repnz
mov
les
push
inc
and
mov
adc
fimull
aaa
push
mov
out
fs
jne
ret
pop
dec
mov
sar
loop
lock
mov
repnz
stos
and
mov
xchg
scas
pop
dec
data16
add
xchg
cmp
sbb
shll
jp
jmp
ljmp
mov
sub
inc
lods
popa
fcmovnu
and
in
enter
mov
into
mov
push
popa
push
push
push
cmp
jecxz
pop
cwtl
les
mov
jb
push
dec
lahf
jmp
shll
and
in
xchg
into
addr16
ret
in
out
int3
push
mov
arpl
arpl
stos
and
dec
or
out
call
ds
hlt
outsb
mov
rolb
inc
gs
sub
call
jae
jae
xor
pop
xchg
lods
movsl
cmp
push
xor
or
pop
mov
xor
scas
mov
lcall
cmc
outsb
popa
sub
jg
sub
sahf
pop
jecxz
cmp
or
cmp
fsubrl
popa
or
mov
jne
es
mov
xor
add
jb
fldl2e
push
add
add
and
inc
scas
ret
mov
shrl
add
les
mov
mov
adc
push
dec
jno
lret
add
push
loope
stc
add
push
jnp
or
repnz
insb
fwait
jle
mov
daa
std
sub
add
add
lods
add
adc
ja
xchg
sti
into
not
shr
xorb
mov
sbb
and
jp
xchg
mov
sti
adc
xor
lcall
or
inc
outsb
adc
dec
xchg
inc
andl
shr
in
xor
addb
mov
xchg
jmp
add
rorl
mov
xchg
dec
dec
push
mov
mov
jo
incl
call
jo
pop
aaa
xchg
fstpl
mov
pusha
rclb
or
pushf
fists
clc
nop
fcmovnu
push
push
mov
les
push
cltd
fstps
mov
jmp
xlat
inc
popf
es
scas
dec
arpl
jbe
and
push
jmp
shrb
je
and
insl
inc
push
out
mov
push
mov
repnz
jle
xchg
cmp
lea
inc
mov
sub
xchg
ret
sbb
aaa
pusha
add
sbb
adcb
ret
mul
test
mulb
cmp
clc
stos
pop
mov
dec
dec
jns
icebp
sbb
cmpl
loop
mov
inc
mov
sbb
jmp
xor
push
push
xchg
or
jecxz
cld
mov
cmp
push
aas
xchg
repnz
rcr
aam
dec
inc
fnstenv
jecxz
sbb
out
xchg
das
fldl2t
cmpsl
lods
dec
xchg
sub
push
ret
aad
and
imul
popa
xchg
dec
je
sub
xchg
and
inc
std
subl
stc
mov
out
lea
fldenv
testb
pop
mulb
dec
fists
push
hlt
stos
dec
xor
jp
jg
push
push
fistl
push
cmp
or
pop
stc
and
xorb
int
sahf
and
movsb
test
sub
rcrb
mov
pop
or
test
cmp
lcall
dec
jmp
inc
jecxz
scas
push
and
sbb
movb
mov
push
dec
clc
fsubr
pop
insl
ret
xor
cmc
dec
push
cmc
sar
data16
mov
out
outsb
jp
pop
mov
jp
adc
fnsave
clc
and
jmp
ffreep
in
dec
dec
mov
ret
jo
movsb
dec
adc
pop
push
pop
pop
fisubl
ret
sbb
in
js
dec
decl
ss
xchg
jle
aad
icebp
leave
jo
cli
imul
xchg
js
loop
or
and
cs
test
pop
dec
add
das
or
mov
mov
cmp
inc
xchg
je
js
cmp
andb
push
xor
fisubrs
hlt
call
add
shlb
mov
mov
icebp
ss
push
jns
lea
fcmovu
in
xor
cmp
sbb
cmp
ds
aaa
into
jle
insl
cmp
pop
jp
iret
inc
xor
sbb
ss
out
or
push
out
mov
jae
mov
mov
stos
adc
hlt
mov
outsb
cli
inc
and
aad
dec
jno
inc
and
add
adc
sbb
stos
js
dec
cmp
cs
repz
rcrl
and
enter
add
ficompl
aas
mov
ret
je
or
arpl
push
fs
lods
and
fwait
shll
cmc
je
call
dec
cmp
pushf
jne
adc
addr16
mov
arpl
sti
add
push
sub
shll
arpl
roll
pushf
nop
jge
out
outsl
or
add
fsubl
adc
es
in
arpl
cli
jnp
dec
dec
ja
cmp
mov
mov
movsl
dec
stc
lods
repz
pop
jns
pop
mov
push
fidivs
jae
jne
bound
xlat
sbb
aad
add
lock
cli
cmp
xor
mov
xlat
ret
xor
mov
push
push
xchg
sti
mov
sub
pop
mov
in
ljmp
mov
ret
inc
stos
stc
ja
mov
xor
fbld
lds
in
faddl
mov
push
xchg
jge
mov
inc
cltd
adc
call
push
aam
sub
sbb
mov
and
cli
aam
inc
xchg
in
shrb
lods
ljmp
mov
pop
push
mov
push
loopne
inc
pop
adcl
scas
sub
add
fstps
stos
loop
sub
ds
push
cltd
sbb
sub
add
std
loope
shl
int
inc
adcb
sub
stos
dec
mov
dec
jo
out
es
sarl
jno
daa
lods
fs
stos
out
leave
dec
dec
ja
cmpsl
sub
push
mov
inc
sub
push
dec
jne
xchg
jb
mov
mov
mov
push
scas
lock
jp
and
filds
movsl
push
mov
sub
test
xchg
jmp
sbb
icebp
and
out
test
sub
jecxz
sbb
mov
pop
adc
out
or
jmp
mov
inc
push
mov
inc
or
in
mov
jne
in
jecxz
push
test
pcmpeqw
stos
sarl
fwait
cmp
and
lcall
cmpsb
jno
loope
xor
mov
jp
das
jb
xor
rcrb
mov
lret
xor
in
lock
int3
fiaddl
mov
loope
cmp
lahf
push
insl
jae
or
lcall
je
fstl
hlt
xor
mov
sbb
dec
dec
jbe
sbb
test
mov
outsl
icebp
jbe
mov
scas
xchg
movsl
add
lds
rcrl
xor
mov
dec
xchg
fadd
call
cmpsl
je
inc
cmpsb
outsl
mov
pop
stos
push
movsb
mov
mov
fcmove
xchg
push
cmp
xlat
sub
jns
jnp
je
fldt
pop
jl
in
hlt
push
punpckhdq
ja
adc
in
xchg
daa
mov
sti
fbld
cmp
xchg
and
pop
dec
addr16
aad
dec
sub
or
fnstenv
adc
cmp
pushf
inc
or
dec
push
insb
lds
hlt
sbb
data16
mov
in
cltd
aad
or
add
stos
pop
and
nop
cltd
dec
shl
popa
mov
ror
or
mov
enter
xor
lahf
cs
test
jg
cmp
std
pop
xchg
push
hlt
inc
sti
lahf
push
sbb
jne
or
out
pextrw
movsb
adc
das
shl
pushf
dec
mov
idivb
stc
shll
clc
data16
mov
cld
mov
jmp
sbb
adc
mov
jns
add
xchg
iret
cmp
pop
popa
int3
xchg
test
lock
je
cmovo
cmp
adc
iret
push
repz
sub
and
negl
pushf
int3
push
mov
xchg
popa
ficoml
sub
mov
std
lret
mov
mov
lahf
test
mov
or
add
ret
daa
or
push
cli
add
xchg
jne
jb
cltd
mov
pusha
nop
jns
mov
cltd
dec
gs
sbb
sub
inc
cmpsb
pushf
cmpsb
sbb
insb
leave
jns
inc
fcomp
aaa
daa
sub
in
inc
ljmp
adc
cs
in
push
xor
in
add
sub
jg
shlb
push
popa
arpl
xchg
adcb
sbb
ljmp
inc
push
mov
xor
xchg
sub
cmp
repz
shlb
je
mov
dec
out
jle
test
mov
xorb
out
dec
gs
cli
add
push
and
mov
lcall
mov
cmp
ja
mov
pop
pop
test
push
jmp
push
insl
push
sbb
sub
scas
mov
js
and
rcrl
mov
enter
add
cmp
cmpsl
dec
jge
xchg
cmp
push
jnp
cld
in
xor
xor
cmp
jge
int3
mov
jl
call
adc
push
cmp
out
js
mov
scas
pop
push
inc
subb
mov
pop
mov
aad
pop
xchg
lcall
call
stc
dec
mov
fnstenv
mov
hlt
jo
out
ret
aas
test
dec
or
out
xchg
lret
push
movsb
xorl
std
cmp
jge
cli
idivl
cmp
sbb
out
adc
icebp
sub
icebp
shrb
mov
mov
xchg
jns
mov
pop
sbb
mov
pop
lds
adc
mov
fwait
insl
cltd
outsl
ljmp
outsl
std
inc
jo
clc
rolb
and
js
mov
push
inc
sub
sbb
lock
push
sti
pop
sbb
pop
xor
int3
lock
mov
jl
dec
pop
fst
inc
cmp
pusha
in
insb
xor
pop
dec
test
out
ret
jge
push
and
mov
test
movhps
sbb
sbb
cmc
je
mov
inc
cmpsb
sbb
pop
jg
dec
mov
insb
cs
int
push
test
shrb
and
mov
or
ret
sbb
pop
stos
pop
pop
pop
adc
in
fstpl
or
mov
insl
hlt
sahf
daa
mov
inc
loop
xchg
das
jo
and
fcom
in
lds
lock
dec
loope
xchg
adc
out
out
xchg
shr
rorb
das
mov
cltd
jl
pusha
in
mov
inc
fxch
fs
xor
lea
out
push
push
pop
and
cmp
xchg
mov
pop
add
cli
loopne
inc
jle
and
loope
out
jmpw
imull
mov
cltd
add
subl
pop
sub
ret
mov
inc
xlat
or
das
sbb
lret
jo
xor
lret
add
sbb
out
cwtl
cmp
nop
sbb
sub
and
inc
add
test
fcomp
lcall
add
std
push
out
sbb
sbb
popf
sub
push
mov
and
sbbl
out
ss
mov
sub
shl
and
sub
test
and
push
ja
ret
mov
sub
dec
call
fistl
cmpsl
inc
pop
jae
in
jne
insb
test
mov
sub
stos
rclb
push
outsl
adc
int3
dec
pushf
jp
enter
lret
in
pop
fdivrs
sub
push
jl
dec
loopne
mov
jecxz
mov
dec
xchg
jle
jbe
das
es
add
fsubrs
or
cs
push
push
bound
or
jb
cmc
std
jge
push
add
filds
ds
dec
add
push
lods
sub
jae
pop
fmull
adc
xorb
fucomip
add
pop
je
ss
loop
fsts
push
cmpsb
adc
mov
outsl
add
inc
mov
cwtl
mov
scas
je
mov
mov
sub
cmp
adc
adc
fs
rcr
dec
cltd
test
sbb
outsb
ljmp
sub
lcall
add
dec
loope
jge
fsubl
in
out
inc
scas
push
mov
inc
mov
lahf
out
xor
adc
sbb
mov
inc
xchg
mov
adc
rorb
dec
and
mov
outsl
dec
out
int3
cmp
cli
cwtl
test
ss
adc
subb
mov
push
into
repnz
xlat
mov
lods
push
mov
mov
lods
dec
fiadds
pop
add
push
adc
push
inc
out
lds
shrb
outsb
sbb
jo
sbbb
sbb
mov
leave
dec
inc
xchg
push
pop
cmp
mov
add
push
hlt
repz
xchg
repz
mov
mov
iret
xchg
sbb
pop
cli
sahf
xchg
lds
out
addr16
sub
les
mov
data16
jecxz
dec
pop
push
mov
call
fwait
sbb
jg
loopne
xorl
rclb
lods
movsl
in
xor
push
xchg
mov
test
sahf
in
popf
stc
loop
call
arpl
adc
shlb
testb
xchg
push
les
ss
jno
sub
or
pop
out
rcrb
test
das
xor
leave
lock
cli
xor
popa
sbb
xchg
mov
test
rorl
adc
xchg
inc
mov
popa
clc
sub
jae
out
and
sub
mov
mov
cmc
insl
stos
xchg
loope
sub
push
mov
pop
daa
xchg
and
push
add
pop
popa
in
mov
insl
jno
popa
rcrb
hlt
hlt
adc
dec
inc
push
mov
adc
in
pop
jecxz
mov
adc
or
mov
and
test
mov
dec
fdivl
adc
inc
daa
mov
and
push
cmp
xor
outsb
push
add
push
and
pop
xor
imul
js
or
xchg
jmp
lock
adc
repnz
jl
sti
stos
add
cmp
cli
cmp
aad
arpl
sahf
leave
xchg
sub
imul
xchg
bound
jmp
inc
xchg
jne
lcall
pop
xor
push
adc
scas
mov
shll
jge
iret
xor
push
aas
xchg
pop
push
nop
es
jg
rorb
xchg
rcrl
in
int
xchg
ja
dec
pop
add
inc
pop
cmp
sbb
loop
sub
shlb
inc
test
push
imul
xor
int
lds
jmp
test
daa
pop
or
xchg
mov
les
push
pop
add
ja
push
sub
jle
fistps
push
test
cmp
or
repz
pop
and
stc
aas
sub
xor
jecxz
sbb
push
aam
loope
mov
xchg
adc
add
inc
xlat
xor
push
sbb
test
push
jl
push
jecxz
mov
inc
cmpb
sbb
pusha
cmp
pop
xor
rclb
dec
js
jmp
rclb
insb
adc
testl
add
mov
shll
or
sub
and
cs
fistpll
jl
sub
movl
xchg
popa
outsl
cmp
mov
adc
hlt
sub
push
fildl
mov
xchg
in
icebp
push
clc
mov
arpl
fwait
and
and
call
pop
dec
repz
cmpsl
xor
jp
mov
push
insl
rol
bnd
in
out
xchg
adc
ljmp
and
xor
inc
je
jl
xor
jmp
push
or
xchg
fsubrs
inc
rorb
xchg
iret
lret
stc
mov
loopne
cmp
jl
lahf
or
mov
mov
pop
enter
rorb
in
movsl
daa
mov
xlat
inc
push
jp
gs
aaa
in
and
out
sbb
lds
xor
in
push
cli
dec
push
es
imul
sub
jb
push
xor
sbb
or
leave
imulb
adc
ror
dec
sub
test
scas
faddl
xchg
dec
jns
sub
jno
and
clc
std
mov
insl
cmpb
stc
int3
dec
adc
out
or
pop
mov
jmp
or
xchg
add
push
insl
ror
jmp
lcall
jmp
stos
stc
inc
and
xor
or
mov
mov
xchg
and
repz
fsubl
push
ret
jnp
sub
or
push
sbbb
ds
add
pop
arpl
or
mov
push
jl
movsl
in
fisubrl
aam
push
pop
sub
outsb
cs
cmpsb
out
mov
jnp
aas
int3
pop
movsb
nop
push
lahf
iret
xchg
xchg
fmuls
orb
lods
push
scas
and
nop
popa
lock
dec
test
das
sbb
jo
out
adc
jl
mov
das
ret
js
or
add
mov
xlat
jmp
xchg
fldenv
rep
lcall
push
test
mov
pushf
scas
inc
mov
xor
sub
push
inc
add
pushf
or
insb
push
pop
jne
pop
xor
jmp
xchg
repz
into
jb
mov
fdivp
mov
lret
into
ficompl
pop
jae
xor
sarb
jno
jo
inc
add
dec
add
aad
sub
and
dec
add
dec
or
aas
lock
xchg
pop
movsl
cmp
ljmp
loope
cltd
rorb
push
jl
loope
test
enter
lods
dec
std
jmp
push
push
pop
call
out
aaa
cmpsb
pushl
pop
lahf
hlt
outsl
fdivp
pop
imul
iret
ljmp
int
xchg
pop
push
push
ljmp
je
repz
ja
out
jb
sbb
pusha
ficoml
fadds
in
test
jbe
sub
pushl
addl
bound
adc
fisttpll
dec
vhaddps
stos
fsubrs
sti
add
cmc
in
inc
aas
inc
cmpsl
or
xchg
clc
add
mov
push
shlb
sbb
mov
sub
mov
xchg
mov
pop
adc
aam
imul
sahf
into
fsubrs
and
inc
sub
pusha
adc
dec
inc
mov
jae
xor
hlt
mov
lock
mov
mulb
pop
xor
jbe
in
push
cmp
or
iret
scas
cmp
mov
out
sbb
cmp
add
push
mov
jmp
jmp
cmpsb
mov
cmp
pop
sbb
popf
push
or
addl
js
dec
out
xchg
add
push
lret
or
jo
xchg
jnp
sub
push
out
out
mov
and
pop
flds
leave
aaa
inc
js
dec
addr16
popa
inc
sbb
mov
push
int
cwtl
inc
movsl
icebp
or
cmp
bound
pop
in
sbb
pop
push
pushf
xchg
pushl
jecxz
inc
xchg
imul
jp
insb
movsb
adc
sahf
lods
fimull
sbb
shl
idivl
test
lock
in
mov
cwtl
dec
ljmp
lret
das
aaa
stos
mov
int3
stc
sahf
sub
mov
xor
sub
into
sub
adc
roll
call
inc
or
punpcklbw
cmp
xchg
pop
insl
pop
push
jge
xchg
pop
push
sub
mov
lret
lock
outsl
sub
mov
mov
lret
mov
out
and
fidivrs
hlt
dec
mov
mov
int3
mov
retw
aad
xor
mov
andb
es
xor
addr16
ficompl
insb
inc
xchg
popf
in
push
dec
loopne
rol
call
push
aaa
pushl
insl
xchg
in
or
andb
cmp
inc
bound
jae
mov
jnp
xchg
test
dec
ja
movsb
cmpsb
and
sub
ret
rorl
rep
xlat
inc
lods
jmp
mov
push
mov
mov
lods
cmp
cmp
adc
pop
movsl
adc
out
ss
xchg
scas
fistpll
adc
clc
enter
dec
add
inc
hlt
daa
cs
mov
xchg
jmp
dec
add
loop
lahf
and
cmp
mov
sbb
jp
lods
push
jge
arpl
pop
std
xor
jno
mov
xor
in
js
mov
dec
clc
stc
pop
pop
or
sbb
mov
fnstcw
push
lcall
add
dec
je
sbb
popa
clc
cmc
loopne
push
das
sahf
jmp
std
xor
xlat
xorl
mov
fnsave
lods
mov
mov
push
push
test
sub
cmp
aad
mov
push
pop
xchg
inc
mov
lods
movsb
aam
fadds
pusha
das
mov
or
dec
ret
out
push
dec
sub
pop
fbld
adc
sub
ja
xor
and
mov
shlb
ret
lahf
xorl
stos
inc
pushf
shlb
xor
jle
mov
pop
in
or
in
shlb
cmp
rolb
mov
xchg
sub
add
add
sub
std
inc
adc
mov
jmp
add
mov
mov
pop
call
sti
push
imul
xlat
or
je
mov
mov
mov
add
push
in
lret
xor
imull
divl
mov
lahf
fmulp
rcr
mov
add
push
pop
xor
mov
loopne
loope
mov
mov
xchg
jmp
rcr
pop
or
mov
cmpsl
addr16
push
cmp
xchg
sbb
sub
xor
ret
insb
arpl
stos
shlb
nop
cmp
add
mov
inc
push
push
push
repnz
push
shlb
lods
iret
scas
mov
test
fwait
data16
jb
push
in
cmpsb
xchg
out
scas
jb
call
fistpl
push
cmc
mov
jl
sub
in
inc
mov
test
xlat
adc
int3
lahf
inc
sbb
and
sub
pop
lods
ljmp
jns
xor
sbb
int3
sub
aaa
mov
add
rcrb
xchg
fildl
xchg
outsl
inc
jge
mov
aaa
adc
lock
jbe
je
out
gs
lods
xlat
push
push
push
mov
out
mov
shrl
jo
pop
xchg
mov
bound
cli
add
adc
xchg
push
lahf
loope
daa
lret
mov
lcall
andl
gs
lds
andl
cmc
adc
rcrl
out
and
lret
leave
adc
add
mov
or
int
sbb
cmpsb
push
or
icebp
inc
in
fmull
inc
sub
lock
ja
push
sbb
mov
mov
pop
sub
cmp
int
push
sbb
fwait
sub
sbb
xchg
adc
mov
xchg
add
xor
jb
adc
leave
fs
adc
lcall
mov
push
lret
mov
cmp
cli
arpl
lock
and
repz
in
xor
bound
adc
adc
dec
aam
les
rolb
jno
dec
xchg
xor
inc
mov
imul
push
int3
adc
jle
loop
ret
pop
js
adc
movsb
adc
ljmp
dec
push
mov
into
daa
sti
test
aas
add
xor
cmp
xchg
add
cmp
mov
movsl
mov
jp
push
hlt
push
fidivrl
xchg
jne
add
or
cmpsb
call
sbb
in
or
mov
shrl
rorb
int3
popa
mov
cmp
push
jecxz
or
lea
xor
shrb
mov
adc
adc
in
pop
mov
pop
in
mov
sub
inc
stc
push
cmp
sub
cmpsl
mov
and
pop
cs
out
and
mov
fidivl
test
or
popl
xor
dec
out
out
xor
cmc
cmp
sub
iret
leave
xchg
jmp
sbb
and
jae
push
jnp
clc
pushf
or
pushf
add
aad
stc
arpl
into
mov
arpl
push
in
push
xor
pop
pop
movsl
adc
adc
jmp
cmp
sub
xor
xchg
mov
cmpl
mov
cwtl
cmc
imul
xchg
xor
arpl
pop
ficoml
int3
and
pop
mov
cwtl
xchg
push
call
mov
dec
int
mov
ja
leave
lea
mov
push
lcall
xor
sub
aas
inc
loopne
xlat
mov
shll
pop
mov
adc
cmp
pop
pop
sub
imul
je
push
sbb
xchg
xchg
scas
sub
inc
jne
or
jecxz
rcrb
cmp
add
or
xor
push
pop
jb
mov
jmp
mov
sub
repnz
cltd
std
add
ss
out
mov
cltd
movsl
orps
stos
pop
mov
dec
gs
in
mov
loope
xchg
push
dec
rcrl
xlat
cmp
das
sub
int
xor
jl
lock
push
sbb
pop
insl
mov
xor
mov
test
mov
xor
popa
fidivl
hlt
xchg
jnp
mov
ljmp
or
jmp
popa
je
imulb
rcrb
pop
mov
orb
cmpsl
adc
pop
jmp
inc
shlb
jo
pop
mov
inc
adc
insl
enter
push
pusha
subb
pop
add
pop
dec
popf
insb
stc
hlt
frstor
push
int
in
les
add
xchg
and
or
sbb
nop
sbb
orb
mulb
mov
jne
fdivrs
pop
and
fnstsw
add
cmp
scas
fdivrs
add
cmpsl
sbb
pop
les
enter
pushl
out
js
mov
test
in
add
fs
cmp
call
stos
ds
cmpsl
movsb
dec
fmuls
or
lcall
je
sub
or
lods
xlat
std
imul
xchg
js
mov
insl
into
test
mov
pop
add
or
js
mov
mov
out
xchg
mov
mov
enter
stos
mov
cmp
loopne
ficoms
xchg
inc
push
shrb
mull
mov
jbe
xor
aad
mov
and
in
sub
mov
push
std
xor
mov
and
mov
mov
shrb
sub
arpl
test
shll
jne
rolb
outsl
nop
mov
dec
aam
pop
hlt
lods
jne
cmpsb
xchg
shl
jo
ljmp
fsubrl
ja
movl
mov
lret
test
adc
sbb
sahf
xor
fs
inc
jns
or
dec
cmp
push
mov
or
scas
imul
jge
movsb
xchg
cltd
popa
fisttpll
mov
out
xor
mov
xor
ret
lahf
fldl
popf
mov
out
jbe
repz
inc
dec
add
ljmp
mov
fs
mov
inc
push
lock
in
inc
push
push
jg
pop
lret
cwtl
and
out
fistl
push
xor
xchg
and
lds
inc
and
jge
addr16
mov
lock
shrl
lock
out
in
dec
imul
mov
mov
and
mov
testb
int
inc
lret
push
test
push
fstl
mov
imul
adc
xchg
jnp
sub
cmp
test
fsubr
int
int3
rcrb
rcrl
mov
inc
or
dec
into
add
pop
inc
pop
or
stc
or
mov
inc
pop
imulb
outsb
add
sub
push
xchg
cs
int3
mov
sbb
adc
int
mov
xchg
lock
aas
lcall
sub
sbb
xor
lods
push
cs
mov
fbstp
clc
mov
inc
pop
data16
jmp
out
mov
push
inc
adc
and
jmp
lock
jno
pop
inc
repnz
jmp
into
aaa
xor
sub
stc
fdivrl
in
pop
sbb
lods
adc
and
push
jg
cmp
jae
and
dec
testb
cltd
pop
mov
enter
pop
mov
mov
mov
iret
cmp
imul
inc
sbb
xchg
out
hlt
aam
out
push
pop
or
cmp
mov
xchg
pop
inc
mov
mov
mov
adc
rolb
or
ds
imul
xchg
add
xchg
push
rclb
repnz
out
cli
filds
imul
dec
xor
test
fnsave
shll
sbb
loopne
in
xchg
sbb
pop
ffreep
repnz
lods
mulb
push
jp
jo
lods
mov
sub
xchg
fwait
test
add
jecxz
add
rcll
mov
and
clc
or
mov
subl
dec
fnsave
xchg
inc
push
sbb
adc
cmp
test
sub
clc
popa
and
pop
mov
ja
ja
adc
lds
inc
cltd
in
mov
insb
lock
adc
dec
cs
mov
push
pusha
add
ljmp
dec
mov
iret
cmpsl
push
arpl
xchg
cmp
sbb
sub
pop
rol
mov
push
xchg
xor
fisttpll
cmp
stc
imul
fsubl
push
aam
adc
jno
xlat
into
xchg
or
push
mov
fwait
and
lock
jne
pop
xor
mov
adc
push
out
mov
dec
outsb
ficomps
rol
adc
imul
mov
jg
push
fildl
cmpsb
fisubl
in
add
adc
mov
jo
add
dec
jge
loopne
inc
in
and
xor
push
cwtl
out
lods
ret
mov
out
cmp
cmp
push
lcall
adc
adc
insl
dec
pop
xor
lret
mov
mov
ficomps
es
out
fcom
or
sub
addl
mov
push
imul
mov
sbb
in
push
push
xor
inc
or
ds
not
lea
pop
test
icebp
inc
mov
sub
push
mov
add
dec
cmp
test
mov
cli
xchg
imul
fcoms
xor
mov
inc
jbe
cmpsl
lret
xor
ret
dec
rcrb
subb
mov
ds
xor
and
insl
popa
sbb
cmc
and
or
jne
pop
iret
xchg
dec
jae
mov
dec
aad
inc
loop
out
xlat
rcrb
fisubrs
popf
push
mov
xchg
push
aas
mov
lods
dec
cltd
xchg
xor
mov
mov
jae
lret
xchg
mov
stos
lcall
push
sub
test
mov
sbb
jns
mov
cmpsl
test
inc
test
sahf
xor
in
pop
out
movsl
mov
inc
and
cmpsl
fldl
mov
pop
bound
repnz
sarb
xlat
xchg
popf
inc
pop
test
decb
rorb
repnz
fwait
push
ret
scas
arpl
mov
pop
stc
pop
fs
out
push
call
aad
pop
inc
popa
cli
xchg
lahf
pop
ja
movsl
into
imul
adc
pusha
xchg
test
lcall
xorb
movb
mov
add
add
push
test
mov
cmpsb
inc
add
mov
out
cmp
cmp
sbb
jmp
pop
outsb
push
jns
xchg
cmpsl
sub
ljmp
sbb
lret
ret
inc
arpl
imul
popa
mov
sbb
push
mov
int3
cmpsl
daa
xchg
enter
fistpl
sbbb
pushf
pop
lock
aas
xor
push
cmp
shrb
cmp
aas
inc
sar
daa
xchg
cli
out
sbb
add
pop
repz
out
push
jb
xor
sbb
xchg
or
rcrb
pop
push
hlt
ja
cmp
hlt
sub
pushf
push
int
mov
pop
push
dec
jmp
icebp
lret
lds
lahf
inc
dec
sbb
ret
int3
aas
sbb
cli
jae
xor
aam
inc
negl
inc
inc
es
outsl
stos
sub
push
fwait
inc
sub
add
filds
stos
mov
mov
jbe
pop
mov
xor
cmp
shrb
or
shrb
push
outsl
loopne
and
pop
mov
int3
imul
adc
adc
push
and
fmuls
shlb
out
in
mov
cmp
bound
mov
cmp
test
mov
stc
subl
lret
push
sbb
sahf
scas
cmpsb
pusha
hlt
pop
xor
shlb
cmp
in
insl
jmp
mov
call
cmpsb
scas
pop
pop
jmp
stc
mov
dec
subl
pop
xchg
add
mov
dec
cmp
adc
das
sbb
pop
mov
gs
int3
cmp
xlat
leave
pop
repz
imul
testb
adc
clc
ds
mov
popl
pop
outsl
pushf
idivl
inc
push
or
jle
and
cmpsl
loop
sub
xchg
int
xchg
sub
js,pt
jo
gs
lds
pushf
shrb
aas
call
cmpsb
out
bnd
out
shl
pusha
js
xchg
in
jmp
mov
add
ret
push
and
pop
pop
je
data16
cmp
jl
fcmovne
push
ret
test
orb
xor
mov
xchg
xor
xor
imul
jns
pop
add
xchg
xor
pushf
cli
inc
xchg
sub
and
outsb
icebp
add
mov
hlt
xchg
loope
test
in
cmp
cmp
mov
arpl
pop
or
xchg
inc
movsb
xchg
cmp
sub
aas
icebp
add
sub
inc
ds
or
sar
push
aad
dec
js
dec
enter
xchg
fstpt
dec
stos
xor
adc
jg
lea
or
test
push
icebp
push
cmp
add
xor
insl
insl
and
push
xor
vsqrtps
aad
clc
cmpsb
out
xchg
dec
in
sbb
add
dec
shrl
cld
jg
adc
loop
xor
lret
aaa
aas
ret
jl
shl
leave
adc
aam
out
hlt
pop
shrl
pop
mov
outsl
jbe
dec
jne
int
inc
rorb
add
add
xor
insb
cwtl
xor
pop
add
aaa
push
and
scas
mov
cmp
dec
xlat
orb
jecxz
out
inc
xlat
lds
lcall
mov
cmp
fiadds
fidivrl
mov
scas
gs
outsl
cli
jae
negb
mov
aas
imul
stos
pop
mov
jg
inc
ret
add
aam
mov
jne
cmpsl
aad
in
aam
mov
insl
leave
in
imul
or
pop
mov
xchg
jg
idivl
aaa
out
bsr
xor
xor
xchg
push
ror
adc
or
or
pop
cmp
add
lods
inc
popa
xchg
push
xor
sub
inc
pop
cmp
xchg
pushf
scas
add
add
jns
dec
je
xlat
jl
sbb
andb
sub
shl
fcoms
push
sub
cmpsb
xbegin
mov
mov
movsb
mov
sarb
dec
insl
mov
sbb
leave
sbbb
repnz
addl
push
xchg
add
mov
push
loope
ret
xchg
push
mov
aaa
arpl
xchg
mov
inc
xchg
scas
fcmovne
cmp
cs
mov
je
stc
divb
push
push
pop
dec
mov
mov
xchg
nop
and
cs
repnz
and
mov
sbb
fwait
cmp
dec
cmpsb
cltd
movsl
add
pop
and
fidivrl
mov
aaa
inc
dec
push
and
cmp
enter
dec
pop
sub
stos
cli
popa
dec
kmovw
imul
je
jbe
xor
arpl
pop
stos
les
lea
cmpsb
pop
mov
clc
dec
iret
in
mov
pop
loop
cs
mov
inc
icebp
pop
lahf
dec
ret
push
mov
in
push
scas
cmp
enter
pop
push
not
lcall
jae
mov
out
and
repz
insl
lods
outsb
notl
or
pop
call
pusha
aad
jecxz
or
sbb
icebp
das
add
sub
xchg
imulb
gs
push
mov
test
xorb
inc
mov
xchg
adcb
sbb
mov
add
movsb
pop
adc
div
aad
push
ret
and
jb
out
pop
push
shrb
int
add
sub
idivl
push
aam
ret
and
pop
push
xchg
xacquire
daa
sub
pop
test
xor
mov
pop
in
ret
into
fiaddl
and
jb
ds
hlt
cs
inc
sahf
jl
xor
jle
mov
dec
cs
fldenv
xchg
jl
or
and
mov
and
inc
sbb
mov
pop
leave
push
stos
cmp
bound
sarb
faddl
mov
jae
fnstenv
adc
stos
mov
mov
jo
push
mov
js
push
mov
in
ljmp
jp
or
cld
inc
dec
jp
out
adc
js
mov
push
fidivs
push
and
pop
lret
sahf
mov
shrb
pop
popa
sbb
jno
loope
jae
sbb
pop
outsl
bound
cmc
sub
xchg
mov
mov
sub
jl
sar
mov
or
sub
nop
ds
in
mov
int
icebp
and
gs
adc
add
push
mov
das
lds
cmpsl
cmp
push
and
mov
jge
xchg
inc
mov
mov
fneni(8087
js
xchg
js
fildll
jae
mov
cmc
cld
sub
add
adc
enter
mov
sbb
and
out
lock
fsub
sbb
sbb
pop
shrl
es
sahf
or
xor
lcall
das
xchg
pop
cmpsl
pushf
push
xchg
and
test
dec
inc
adc
sub
mov
addr16
or
mov
sub
andl
sbb
jp
jb
bound
cwtl
jecxz
jp
jns
cs
std
jge
push
test
sbb
fstpt
repnz
stc
or
dec
dec
jl
sub
jae
mov
or
pop
xor
test
pop
mov
adc
push
movsl
dec
push
rcrl
inc
or
stos
mov
add
dec
sub
gs
sub
insl
addb
nop
test
lcall
mov
jb
out
out
mov
cmc
fwait
push
movsb
mov
mov
xchg
push
and
mov
adc
jae
xor
cmpsl
outsb
and
cmp
jle
xchg
and
mov
sub
frstor
fnsave
int3
in
jp
sbb
sub
dec
repz
gs
and
adc
sbb
mov
inc
add
dec
add
jecxz
pop
adcl
adcl
pop
mov
or
ja
dec
out
sbb
sub
test
push
cld
mov
notb
xor
movsl
xchg
sbb
inc
sub
sar
je
xor
fmuls
pop
jnp
xlat
mov
adc
sbb
pop
call
cltd
fisttps
mov
adc
mov
dec
repnz
gs
inc
inc
mov
dec
push
and
test
cli
jb
test
pop
leave
xchg
pop
inc
add
xchg
adc
adc
or
iret
loopne
jmp
push
inc
mov
bound
mov
add
sbb
adc
mov
sbb
mov
shlb
xor
mov
or
out
sub
ja
mov
sti
lret
loop
jmp
lds
rdtsc
pop
aaa
mov
inc
bound
xchg
ja
lret
test
imull
mov
pop
out
xchg
or
mov
push
bswap
int3
cmp
setge
xchg
iret
lods
jg
inc
cmp
in
call
or
lret
push
fsubrl
jp
enter
and
cwtl
pop
fbstp
mov
sahf
mov
or
push
imul
xchg
movsl
xchg
sub
mov
xchg
or
adc
xchg
adc
out
xchg
sub
xor
cli
shrb
stos
inc
pop
dec
push
mov
add
xchg
faddl
xchg
add
sarl
xchg
call
inc
add
shll
push
cmp
test
xchg
inc
push
arpl
adc
ffreep
in
dec
jg
inc
int
sub
pop
inc
sbb
mov
enter
cmp
pop
jbe
je
leave
cmpsl
jge
jns
cld
dec
push
xchg
mov
push
xor
outsl
stc
jmp
dec
iret
jl
test
in
aad
icebp
add
sub
leave
sbb
out
test
inc
xor
sti
sub
out
dec
scas
dec
pop
adc
xor
in
enter
loope
rcrl
iret
dec
sbb
or
sbb
mov
xchg
sub
rcrl
enter
fstpt
adc
in
pop
cmp
jne
dec
cmp
aad
stos
add
scas
mov
xchg
jb
lret
xlat
ret
ret
xchg
mov
xchg
mov
test
xlat
cmp
nop
addr16
or
mov
jge
adc
mov
movsb
jmp
dec
sbb
add
mov
loope
cmp
sbb
call
dec
mov
jmp
mov
lds
inc
and
mov
push
jbe
cmp
test
mov
insb
sbb
cmp
jmp
push
aaa
andb
jecxz
dec
xchg
mov
pop
jg
adc
xor
clc
push
jbe
into
push
cmp
loope
aad
scas
xor
movlps
fcoml
cmp
mov
mov
enter
jne
loop
sub
ja
adc
mov
pushf
pop
mov
repz
ret
dec
pushf
popf
lahf
fldenv
push
xorb
jne
rcr
or
imul
pop
arpl
fs
adc
int3
insl
mov
mov
test
pop
jge
sbb
xchg
rolb
or
adc
mov
arpl
in
lea
aas
ljmp
mov
xor
jmp
sub
lahf
sub
pusha
fstps
aas
test
mov
mov
popa
inc
daa
pop
popf
ja
pop
mov
mov
sub
or
mov
push
push
lret
push
pop
mov
pop
jne
sub
xor
sbb
push
mov
adc
jae
cmp
jns
cmp
fucomp
insl
mov
shlb
add
test
mov
inc
pop
push
jns
mov
mov
daa
xor
xor
mov
loop
mov
jecxz
ljmp
jle
rcl
into
movsb
or
mov
ret
pushf
push
mov
add
repnz
int3
rcrb
cmp
cmp
fwait
mov
dec
mov
int3
mov
mov
xchg
inc
mov
xchg
inc
sbb
mov
xchg
or
push
dec
mov
aad
pop
mov
cmpsl
loope
pop
push
mov
add
mov
jle
sbb
cmp
add
jno
iret
or
rorl
aam
ljmp
pop
outsb
xchg
loop
inc
mov
sarb
int
dec
into
mov
movsl
repnz
and
mov
mov
xor
in
adc
ficoms
add
sub
sbb
mov
pop
sbb
or
ret
sbb
cmp
cld
push
push
ja
cli
orl
subl
xor
lea
pop
pop
push
xchg
adc
insl
mov
mov
cltd
inc
or
andps
cmp
xor
shll
mov
fmuls
daa
or
mov
or
gs
popa
xchg
loopne
or
push
jbe
pushf
fdivl
movsl
mov
xchg
adc
and
lock
fidivl
xor
inc
push
aam
adc
mov
fwait
mov
pop
into
fadds
pop
xor
push
mov
mov
int3
pop
mov
or
in
loope
imul
mov
mov
cmc
fidivrs
mov
outsl
pop
imul
mov
enter
pop
mov
xorl
adc
add
adc
nop
mov
fs
cmp
inc
add
popf
mov
outsb
rcrb
xor
ret
mov
push
daa
or
inc
lret
xor
gs
lcall
pop
mov
orb
insb
ss
sbb
push
mov
mov
push
jecxz
push
cmc
adc
sarl
and
aas
fists
xor
push
inc
cmpsb
dec
push
add
jnp
cmp
adc
jb
lods
test
cmp
sub
mov
inc
or
sti
cmp
arpl
mov
xor
ds
pop
fnsave
sub
jne
lock
iret
aad
inc
cmp
add
cmpsl
pop
xor
or
pushf
xchg
rcrb
imul
push
int
jle
lret
test
sti
sbb
iret
loopne
cmp
ds
inc
imul
jg
and
imulb
sub
xor
arpl
pop
gs
in
xor
data16
sub
sbb
jle
clc
lods
or
out
push
mov
mov
out
ljmp
adc
jl
xor
movsb
out
fimull
xchg
xchg
cmp
xlat
or
sub
into
sysexit
push
les
mov
lods
or
push
in
adc
gs
lret
mov
jb
inc
xchg
shl
mov
inc
and
or
mov
jno
out
jnp
mov
int3
push
fiaddl
pusha
loopne
dec
inc
jne
int3
pushf
push
mov
jecxz
xchg
inc
inc
in
cmp
fsubrs
jne
aas
test
push
pop
imul
pop
aam
lret
ja
or
mov
mov
adc
imul
xchg
dec
sub
push
sbb
mov
inc
lret
sahf
jno
adc
insb
push
adc
lea
dec
mov
sbb
inc
push
pop
int
jg
test
add
cli
outsb
push
inc
insb
incl
or
movsb
movsb
adc
push
outsb
repz
push
pusha
or
incl
fmulp
scas
cmp
leave
adc
scas
clc
sub
subb
dec
jmp
adc
bound
std
mov
jmp
sbb
js
add
testl
pushf
rclb
add
dec
inc
fs
fcmovbe
or
mov
push
inc
cmpsb
mov
hlt
fimull
lahf
cmpsl
and
xor
shrb
sbb
push
inc
es
add
pop
ja
dec
cmp
lods
sbb
push
fwait
jnp
subl
inc
xchg
and
or
mov
bnd
push
and
push
out
out
cmp
in
loope
xchg
jnp
push
ficomps
popa
out
jle
cwtl
adc
roll
add
icebp
mov
mov
sub
aad
hlt
xor
push
fisttpll
mov
es
pop
mov
xorl
clc
xor
cmc
mov
mov
out
dec
add
insb
jbe
mov
jnp
testl
push
das
jle
pop
jo
mov
scas
mov
cli
loopne
mov
and
int3
cmp
outsl
inc
push
ret
mov
inc
out
push
test
inc
gs
sti
adc
into
mov
adc
movsl
lret
bound
push
movsl
push
jbe
vpminsw
in
outsl
cs
or
mov
add
leave
jo
ds
xchg
stc
jne
movsl
inc
mov
xchg
add
push
insl
xchg
leave
js
mov
inc
jecxz
dec
or
pop
movsl
into
sahf
addr16
push
fs
mov
lcall
xor
insb
pop
add
pop
or
cmpl
pop
sarb
mov
xor
xchg
call
bound
xor
pop
jbe
mov
pop
aam
out
adc
xchg
pop
jmp
test
fdivrs
das
test
or
sub
cmp
insb
jns
iret
mov
add
ss
pop
or
sbb
sub
into
mov
inc
push
faddl
repz
icebp
sahf
test
sub
xor
insb
stos
out
fsubp
sbb
cmp
aad
xor
cmpsl
push
hlt
mov
pop
nop
in
sbb
adc
daa
add
insb
lahf
imul
pop
xor
stc
stos
stc
icebp
mov
mov
dec
fsubr
and
stc
jne
mov
mov
add
push
xchg
lock
lods
ret
mov
sub
mov
stc
outsl
or
jg
xchg
mov
mov
mov
dec
mov
je
test
out
rol
cmp
je
and
push
shrl
adc
out
adc
adc
inc
jle
cmpsl
jmp
fmuls
and
negb
jb
cmpsl
push
jb
push
push
les
cltd
rorl
ja
mov
popa
and
push
imul
sbb
xchg
scas
into
sub
pop
clc
xchg
ss
mov
mov
xor
rclb
pop
mul
dec
or
test
mov
xchg
lods
ljmp
cvtps2pi
ficomps
shlb
jmp
in
rcll
es
mulb
inc
outsb
aaa
bound
or
cwtl
int
test
and
ds
push
ds
sahf
sub
dec
pop
dec
sbb
test
and
xor
push
sub
insl
scas
cmpb
stos
and
cmpsb
lds
mov
scas
call
pop
scas
add
add
push
rclb
mov
or
aad
push
arpl
nop
push
sbb
out
mov
cmp
fcoml
rcl
ror
ds
sti
insb
push
add
pop
inc
inc
rcll
ret
or
imul
out
lahf
inc
iret
push
pop
dec
int3
pop
lret
jmp
push
push
fnsave
xor
mov
mov
mov
inc
inc
gs
mov
fidivrs
aad
or
lods
loopne
loop
mov
rcl
inc
sub
push
xor
sbb
adc
jae
and
out
mov
sbb
leave
xchg
adc
adc
cwtl
cmpsl
test
cmpsl
decb
inc
mov
leave
insl
shlb
movsl
sub
ret
lret
filds
xchg
xor
jge
adc
filds
cmc
push
add
std
mov
mov
adc
mov
xchg
pop
inc
or
scas
lahf
popf
ret
popf
lret
xor
xlat
dec
mov
divb
test
aas
outsb
mov
sar
insb
xchg
cmp
outsl
aam
mov
xchg
adc
aaa
push
cmp
dec
stos
cmc
shlb
outsb
inc
hlt
scas
pop
lea
adc
push
jp
loop
and
out
mov
jne
test
mov
fcompl
psubusw
aaa
int
adc
sbb
push
fs
imul
ficoms
xor
lock
fisubl
jle
push
and
push
repz
mov
xchg
fsubrs
cmp
divl
xchg
pop
lods
insb
jge
inc
fadds
call
ljmp
fs
mov
cs
mov
gs
push
and
jb
sub
push
inc
clc
pop
sarl
pop
icebp
add
or
loope
push
adc
test
ljmp
or
and
add
xchg
mov
ret
mov
dec
lods
adc
fcmovnb
sti
pop
jp
xor
jbe
leave
push
into
jbe
rorl
inc
lret
add
movsl
cld
sub
pop
pop
shl
mov
push
adc
sbb
fwait
mov
push
adc
jnp
mov
mov
add
addr16
into
cmp
lcall
xchg
aaa
push
cld
call
es
fsubrl
mov
test
outsb
ljmp
add
adc
mov
rorl
adc
fistps
std
cmpsl
xor
xchg
pop
int
and
decb
add
jbe
push
xor
add
lcall
mov
das
in
jecxz
inc
mov
push
ds
dec
mov
das
sub
pop
lret
mov
or
aam
rolb
std
aam
mov
add
imul
mov
andl
pop
adc
out
and
push
fsubrp
mov
inc
mov
inc
call
xlat
mov
decb
stos
ljmp
adc
sub
push
mov
loopne
jae
or
add
mov
inc
push
int3
xor
xchg
mov
push
dec
mov
or
jb
sub
bound
imul
xchg
rcl
jl
sub
pushf
icebp
mov
loopne
push
or
aam
push
push
xchg
and
xchg
jb
adc
mov
imul
sar
fwait
loop
into
and
pop
adc
iret
mov
mov
ljmp
pop
daa
fsubrl
mov
imul
lock
push
add
cmp
push
loope
mov
mov
push
xchg
lret
shll
nop
test
dec
hlt
xchg
lcall
cmpsb
pop
nop
stos
pop
mov
das
pop
push
insl
add
subb
jge
ret
dec
loop
pop
xor
pop
cmovg
push
pop
test
jno
push
mov
mov
mov
adc
cmp
mov
xchg
xchg
add
loop
aaa
push
stos
mov
sub
push
mov
cmp
push
outsl
sti
pop
jg
daa
or
cmp
insl
dec
mov
daa
add
mov
xchg
scas
xlat
not
xchg
dec
sti
add
stc
or
adc
mov
or
jle
sub
imul
test
cmp
shrb
jb
xlat
test
pusha
xchg
dec
data16
jg
je
inc
mov
gs
and
xor
mov
addr16
and
xor
xor
mov
outsl
out
xchg
push
cmpxchg
cmc
loopne
add
repz
mov
sub
popf
fwait
daa
int
jge
push
cmc
aas
outsb
and
test
loopne
inc
ror
push
stos
push
mov
icebp
mov
add
idivl
dec
pop
loope
mov
outsl
out
jp
mov
outsl
insl
mov
scas
lea
xchg
or
jne
sbb
imul
icebp
sub
push
and
jo
stc
add
pop
out
push
mul
inc
popf
and
lds
jnp
mov
xlat
mov
push
fdivs
out
aam
sbb
repz
inc
ja
mov
mov
jo
icebp
adcb
sbb
shll
out
or
inc
xor
cmpb
ljmp
aas
divb
imul
cmp
jno
push
mov
aaa
mov
in
lock
jb
lock
cmpl
insb
stos
xor
mov
bound
icebp
sub
cmp
push
sub
pop
push
pop
pop
push
shll
mov
jbe
in
cmp
sub
mov
subb
xchg
hlt
mov
mov
lret
scas
xchg
sbb
and
stos
jno
clc
cmc
jb
stos
sub
pop
xchg
jbe
stc
jg
push
add
xor
push
adc
adc
sub
ret
dec
adc
fstpl
mov
ret
jge
inc
call
ds
jbe
insb
push
mov
call
mov
xchg
push
les
jns
push
and
sbb
xchg
movsl
jnp
xchg
pop
sbb
mov
aas
jnp
movsb
scas
xorl
cmp
xor
dec
and
push
jns
fnstsw
pop
cli
inc
in
mov
shlb
and
mov
push
clc
mov
insl
cmp
mov
cs
jb
add
push
push
xor
stc
shll
inc
insb
mov
cld
shl
mov
jmp
jge
add
loopne
jbe
js
jge
mov
pop
pusha
or
xor
arpl
addb
data16
adc
data16
cld
mov
jno
jle
adc
pop
sti
adc
leave
mov
or
data16
stos
push
and
outsl
mov
cmp
pop
push
sti
and
lods
mov
mov
or
mov
dec
inc
and
ret
mov
in
lock
ret
jl
and
mov
push
xchg
in
aam
arpl
sbb
ret
jo
dec
xor
and
fisubl
jae
popa
jge
subb
cmc
jle
ss
hlt
pop
ret
or
dec
inc
inc
inc
jecxz
cli
icebp
add
mov
lcall
push
push
sub
push
inc
push
jno
lods
jnp
inc
xchg
decl
sub
sbb
inc
mov
ss
mov
sbb
cmp
jle
mov
jnp
cmp
fs
push
daa
push
push
pop
dec
cld
add
addb
mov
setp
mov
aad
ds
xchg
sbb
rorb
cmp
sub
ret
out
push
adc
add
adc
ja
xchg
sub
pop
inc
insl
cmp
jbe
mov
xchg
mov
jge
dec
jnp
jbe
fxch
inc
push
jecxz
inc
das
mov
shrb
andb
std
dec
or
cwtl
lods
jae
mov
jp
lret
inc
stos
mov
sarl
or
sbb
xor
pop
aad
das
sub
push
hlt
adc
popf
stos
xchg
mov
fwait
dec
fdivs
add
arpl
sbb
or
das
sbb
sub
gs
cmp
sbb
movsl
or
daa
push
mov
inc
stos
mov
mov
adc
jg
dec
mov
sub
in
jle
out
pop
sub
mov
push
pushf
xorl
pcmpgtd
push
jnp
or
iret
lret
pop
sar
push
push
cltd
test
add
push
int
sub
lcall
ret
or
mov
je
hlt
test
adc
adcb
mov
and
push
adc
jb
pop
in
adc
cwtl
sbb
enter
sub
dec
fwait
add
outsb
test
aam
cwtl
or
sti
xor
cmpb
inc
sbb
xchg
push
cwtl
div
cmc
aaa
scas
in
movsb
xchg
imul
inc
imull
xorb
out
insl
shrl
in
xchg
xor
push
fwait
xchg
or
jo
jge
call
mov
sub
arpl
sbb
mov
lods
aad
sarl
out
adc
movsb
pop
xor
jle
addr16
mov
mov
xor
xchg
vorpd
push
mov
jmp
fwait
sub
or
mov
mov
sbb
add
insb
fsubl
lock
ret
pushf
xchg
into
repz
pusha
adc
mov
rcr
loop
cmp
dec
xlat
out
push
pop
push
cmp
and
fcoml
loopne
nop
jle
pusha
loope
adc
dec
leave
mov
das
jecxz
cmpsb
sub
cltd
and
cmpsb
jae
orb
jle
jae
stc
cmpb
loope
pop
ret
or
data16
mov
jle
test
out
xlat
sub
test
fimull
daa
clc
push
cmp
hlt
inc
sub
xchg
leave
sub
sbb
rcrl
movsb
rolb
push
xchg
adc
les
stos
int
jnp
xchg
inc
int
outsb
iret
adcl
fcoms
push
jo
push
and
add
mov
mov
js
adc
lcall
pop
xchg
xchg
cmpsl
fistl
gs
xor
adc
repnz
cltd
inc
adc
jb
mov
imul
iret
repnz
adc
add
jmp
dec
in
mov
mov
mov
orl
xlat
inc
leave
mov
cmp
imul
aad
sub
mov
mov
push
call
push
fists
inc
xchg
adc
fists
add
stos
add
sub
clc
dec
mov
pop
jg
jo
inc
ret
test
fwait
fwait
add
cmpsl
pop
dec
jo
push
or
movsb
sbb
jmp
aad
mov
push
or
mov
aas
in
mov
adc
xor
push
out
cmp
call
stos
out
loope
sub
fisubrs
adc
push
subl
jne
test
filds
mov
es
mov
pop
clc
adc
xchg
mov
inc
and
js
mov
jmp
cmp
in
pop
inc
cmpsb
arpl
mov
pop
lcall
or
add
push
xor
aam
lock
jo
dec
inc
mov
dec
push
int
or
adc
loope
jge
jbe
jae
leave
mov
adc
or
insl
popf
fisttpl
inc
out
dec
cmc
inc
fiadds
jle
cmp
inc
inc
sub
cmc
xor
inc
ret
push
rcll
int
loope
inc
push
cmpsl
xchg
imul
bound
bound
pusha
stos
ljmp
out
pop
xor
fdivl
sahf
add
out
pop
not
rolb
sbb
movsl
and
jne
into
jbe
js
jo
test
xchg
in
es
adc
or
scas
lock
xchg
xchg
cltd
movsb
sti
cmpsb
sbb
nop
outsl
leave
rcrl
out
iret
incl
xor
ret
mov
imul
mov
lods
pop
inc
les
rorb
repnz
outsl
xchg
push
dec
test
mov
xor
and
mov
cmp
scas
es
stc
fwait
pop
push
mov
cmpsl
rcl
xchg
adc
cmpsb
inc
mov
iret
add
aam
mov
pop
in
mov
out
and
mov
jmp
imul
das
nop
mov
sub
push
test
rcrl
ljmp
pop
and
cmpsl
push
shl
js
or
xchg
mov
cmp
xor
lret
stos
in
lahf
andl
cmp
cmpsb
mov
repnz
movsb
inc
jns
andb
mov
push
imul
xchg
mov
repz
push
sub
and
xchg
cmp
imul
xchg
adc
in
aad
xor
shll
bound
test
mov
insl
push
rorl
mov
inc
xor
xchg
cmp
mov
shufps
arpl
test
jno
inc
loope
arpl
lcall
xor
or
repnz
subb
in
mov
xchg
sti
jle
lret
fiaddl
mov
stos
dec
xchg
out
je
filds
xor
jg
ret
and
popa
mov
jecxz
and
push
jg
movsl
push
scas
lea
cmp
add
bound
pop
fimull
test
repz
inc
jmp
cmp
push
cmp
inc
pop
das
icebp
cs
lahf
cmp
xchg
subl
xor
int
pop
add
cmp
push
jb
mull
imul
sub
mov
fisubs
jae
mov
in
es
fbld
xor
xchg
stos
mov
leave
adcb
push
sbb
sahf
test
arpl
fbstp
icebp
aad
adc
leave
add
mov
and
andb
sbb
shrl
xchg
out
dec
push
fdivrp
push
inc
push
mov
and
xchg
clc
orb
inc
and
push
cwtl
inc
mov
sar
nop
push
fiadds
jnp
push
jb
hlt
movsb
xorb
jecxz
popf
xor
and
inc
out
adc
lock
cmc
mov
or
pop
call
test
xor
test
ret
jge
lea
add
outsl
and
call
jnp
sub
xlat
jne
push
mov
ss
cmp
sbb
pop
insl
sub
popf
mov
js
xchg
stos
js
jno
ss
mov
gs
je
dec
sbb
sbb
jp
sub
adc
pop
out
rclb
jns
fidivrs
addr16
enter
fbld
adc
int3
pushf
jle
xchg
and
xchg
jb
xor
fbld
and
daa
je
pop
xchg
push
std
mov
xchg
cld
idivb
dec
iret
aad
mov
add
rorl
test
jge
inc
outsl
hlt
fisubl
and
and
mov
orl
inc
adc
aam
xchg
push
add
xor
mov
cmp
aas
into
jmp
out
iret
shrl
shl
pop
scas
scas
stc
xchg
and
mov
fistpl
xchg
and
pop
rcrl
or
adc
xor
sub
mov
mov
popf
push
iret
mov
mov
adcl
mov
add
xlat
stos
data16
hlt
xor
sahf
and
movsl
push
das
decb
jbe
dec
cmpsl
insl
sbb
fmul
fdiv
das
sub
iret
jecxz
mov
cmc
adc
scas
repz
dec
imul
mov
dec
fs
insl
and
xchg
test
mov
out
shrl
imul
std
pop
aas
mov
faddl
cmc
cwtl
adc
fdivs
pop
ret
in
testl
fwait
and
or
icebp
jmp
into
hlt
btr
outsb
push
pushf
roll
movsl
add
dec
sti
enter
or
sbb
shrb
cmp
rol
cli
mov
fwait
in
pop
dec
mov
mov
mov
in
test
pop
fwait
cmpsb
or
jns
mov
inc
cltd
adc
cmp
test
lret
cltd
stos
xor
xchg
push
cmpsb
aad
push
mov
mov
stc
jl
sbb
mov
loopne
pop
andl
adc
xor
das
cmp
test
or
mov
or
sbb
add
xor
mov
add
sbb
mov
test
lret
sbb
push
push
fsub
push
insb
repnz
fidivl
rolb
and
test
dec
dec
pop
cmpsl
into
xor
repnz
xchg
adcl
jae
mov
push
cmc
sub
push
cmp
sbb
push
divb
lcall
pop
je
adc
pop
xor
sbb
aad
adc
imul
xchg
dec
push
and
push
dec
sub
mov
repnz
clc
xchg
pop
pop
mov
jecxz
adc
leave
inc
out
push
fistpl
in
pop
dec
sub
xor
and
lcall
mov
xchg
nop
pushf
mov
mov
mov
scas
pop
sub
mov
cltd
loop
mov
loope
jns
fisubs
dec
aaa
out
daa
cld
push
lods
cmp
outsl
iret
gs
push
xor
push
outsb
sub
or
sahf
sub
xchg
repz
and
or
adc
ja
adc
sbb
rcrb
loope
pushf
or
pop
out
mov
sub
leave
cmp
mov
mov
mov
lea
faddp
daa
insl
add
cmp
inc
mov
adc
dec
test
inc
push
jno
adc
pop
xor
je
cltd
jecxz
pop
mov
mov
insb
in
sbb
dec
cpuid
fisttpll
push
insl
sti
sahf
loopne
push
daa
loop
mov
adc
mov
and
aas
shll
xor
lret
and
pusha
rorb
loop
pop
stos
fisubrl
sbbb
push
and
fimuls
int3
pop
sub
into
jp
sub
scas
stc
cmp
mov
sub
mov
fists
and
mov
lahf
mov
mov
or
pop
inc
xorl
or
adc
dec
ja
stos
cmp
push
or
imul
mov
dec
test
movsl
mul
inc
cmpsl
jl
test
les
mov
in
and
xor
rolb
subb
and
into
mov
shlb
dec
outsl
mov
iret
pop
jmp
or
sar
mov
inc
adc
sarb
outsb
testb
icebp
inc
jecxz
shrl
icebp
push
and
cltd
fsubrl
jb
mov
jns
fmull
inc
adc
xlat
sbb
mov
loop,pt
xchg
notl
mov
xchg
xor
test
cmp
lods
in
push
loope
push
add
jb
mov
lcall
xchg
loop
out
jl
movsl
outsl
pusha
adc
insl
cs
arpl
daa
lret
jae
bound
inc
mov
xlat
pop
shr
inc
sbb
scas
adc
pop
mov
dec
xor
adc
push
rorl
js
pop
mov
repnz
pop
inc
movsb
pop
js
push
fidivl
mov
popa
push
pop
imulb
or
or
stos
pop
inc
es
fcmovnb
fiaddl
ds
lahf
xor
dec
xchg
jbe
aaa
divl
mov
xchg
fimuls
testl
nop
add
jbe
cmpsb
sbbb
pop
pop
jmp
loope
sbb
mov
fbld
pop
mov
dec
xlat
sbb
pop
adc
fldcw
test
push
jmp
lea
push
test
sub
es
jno
hlt
pop
int
add
jne
aad
out
mov
sarb
shrb
jge
shr
mov
inc
subl
mov
call
mov
adc
jmp
pop
and
negb
arpl
and
inc
adc
push
mov
add
call
jne
les
addr16
adc
pop
ljmp
mov
fs
fdivrp
push
popf
out
roll
fwait
xor
dec
push
cwtl
pop
jp
pop
or
xor
mov
test
push
test
outsb
adc
enter
fbstp
dec
cmp
mov
add
in
pushf
int
cmp
xor
addr16
cld
lods
insb
sbb
mov
lcall
scas
or
in
das
addr16
int
inc
stos
and
xchg
dec
out
loope
xor
mov
movsb
add
in
xchg
rclb
lds
fsubrl
leave
sub
and
stos
inc
lods
jae
lods
shrl
clc
or
outsb
push
loop
xor
adc
xor
loop
mov
fstps
mov
xor
adc
add
int
in
push
pop
out
add
ds
rcrl
bound
mov
shr
lock
int3
cmpl
cmp
adc
cmp
test
stc
cltd
xchg
and
scas
sti
fisttpl
sub
dec
fcmovu
inc
adc
mov
sbb
jbe
cmp
mov
popf
or
mov
cmc
jg
push
movsb
dec
shlb
xor
and
lret
shrb
paddusw
and
std
pop
xor
or
iret
jg
imulb
leave
cmp
stos
xor
dec
int3
adcl
mov
inc
test
mov
insl
inc
or
or
data16
add
lret
xchg
xor
or
mov
int3
push
in
mov
nop
scas
addr16
inc
and
out
or
pop
nop
out
xor
cmp
xchg
cmp
push
int3
jge
sbb
test
and
clc
mulb
inc
xor
push
dec
mov
sbb
xchg
xchg
xor
dec
loopne
cltd
imul
adc
out
xchg
aad
ds
movb
push
in
and
xor
stos
lahf
imul
daa
adc
in
sub
insl
dec
outsb
inc
leave
mov
adc
ret
imull
adc
push
xor
jnp
mov
fwait
dec
out
cli
and
dec
fisubl
fwait
stc
pop
loope
dec
nop
bndstx
dec
inc
dec
ret
lods
clc
mov
sub
dec
sahf
outsl
lret
and
das
in
dec
xor
adc
cmp
mov
xor
sbb
pop
cld
dec
mov
cld
cli
ds
in
std
or
je
scas
push
movsb
or
gs
rcl
dec
pop
or
lret
cmc
xlat
lock
aaa
outsl
or
out
in
andb
je
jae
rcr
loopne
pop
jns
pop
fimuls
aad
jp
adc
lret
int3
jge
xchg
push
jbe
dec
adc
push
pusha
repnz
loop
in
idivb
bnd
outsb
out
ret
fcoms
or
lock
push
cmp
dec
repnz
out
fcoms
or
push
pop
stos
cmp
sbb
int3
or
jne
cmp
mov
movsb
cmp
loop
add
pop
sub
cs
push
jg
popf
pop
adc
out
xor
enter
xor
rorb
jmp
mov
dec
int3
sub
dec
in
xor
mov
jno,pn
cmp
mov
or
mov
push
call
shl
or
mov
xchg
mov
push
outsb
mov
sub
sub
xor
shl
sbb
dec
xchg
lret
aam
mov
and
pop
std
jae
test
fs
cmp
inc
sub
mov
and
rorb
and
mov
cli
ret
pop
xchg
aas
arpl
or
jnp
cltd
repz
test
je
mov
and
push
push
je
xor
scas
fcmovu
jnp
out
jno
mov
jmp
into
xlat
push
mulb
aad
cmp
inc
ljmp
fdivs
stos
xchg
enter
jne
add
push
pushf
inc
dec
popf
and
rcll
cmc
xchg
ret
inc
sbb
fldcw
sub
mov
sub
jge
inc
mov
inc
xchg
repz
call
dec
push
inc
subb
jecxz
outsb
xchg
fdivrl
mov
mov
sbb
imull
mov
lods
ss
fldenv
dec
inc
movsl
in
inc
stc
inc
pop
push
add
jb
pop
rcrb
xor
push
push
adc
lods
insb
xor
or
outsb
xor
dec
jp
pop
add
jge
ja
push
add
test
cmp
fisubl
xchg
ret
or
cmc
clc
cmp
cltd
jl
scas
lret
ret
imul
idiv
icebp
gs
mov
cli
lods
ja
or
add
fnstenv
push
fstl
sbb
das
add
fistpl
mov
mov
mov
stc
xchg
inc
aam
out
cli
xor
sbb
cmp
add
mov
loope
stos
cli
ds
out
stos
jl
or
cmc
or
and
sbb
xor
add
int3
adc
inc
push
sbb
scas
sbb
ds
arpl
push
sbb
mov
or
pop
movsl
push
jge
ss
hlt
das
loop
sahf
iret
popa
pop
outsl
mov
imul
mov
push
cwtl
loope
dec
arpl
clc
mov
push
lret
sub
jmp
aas
cs
lock
jo
adc
and
fwait
nop
pop
add
and
pop
cmp
mov
in
cli
aad
pop
int
in
mov
fdivs
xor
fistpll
xchg
adc
sbb
shrl
cltd
in
ret
dec
fistpl
pop
jo
xlat
xor
mov
inc
or
mov
rol
lea
aas
outsb
jae
andl
mov
dec
xorl
jle
rorb
cmp
cwtl
cs
insb
xchg
imul
jns
dec
or
xor
push
push
or
mov
dec
pop
inc
addr16
clc
enter
pop
jecxz
xor
es
addr16
xchg
dec
or
aad
lahf
inc
or
dec
mov
arpl
rorb
xorb
inc
mov
sbb
xchg
and
ss
test
jnp
adc
pop
sti
dec
ror
xchg
scas
sbb
mov
pop
dec
dec
pop
cmpsl
sbb
pop
movsb
enter
repz
pop
mov
daa
mov
outsl
mov
mov
in
ja
and
fsts
mov
les
aas
outsb
lods
movsl
in
scas
cmp
xor
dec
jb
loopne
rcl
fsubl
fwait
add
and
mov
loope
add
dec
imul
jns
out
negl
js
add
inc
adc
in
cmp
test
adc
push
scas
movsl
fsts
outsb
add
jecxz
mov
roll
out
jmp
outsl
and
sbb
mov
pop
fs
pop
je
std
xchg
sub
int3
test
pusha
lahf
ret
divl
push
ss
push
imul
sub
fisttpl
xor
loop
jno
xor
aaa
fidivs
hlt
ret
mov
xorb
pop
cmp
jnp
adc
xchg
bound
andl
adc
sbb
lret
insl
mov
frstor
fiadds
sub
int
loope
sub
xor
imul
add
lock
mov
mov
sarb
pop
or
or
mov
pop
sub
test
das
or
push
mov
jecxz
pusha
sbb
pop
test
lea
push
xchg
stc
cmp
mov
xchg
pop
leave
adc
pop
adc
shl
jnp
mov
jp
pop
int
gs
pushf
cwtl
or
gs
jle
pusha
std
jo
adc
pop
jno
and
cmpsb
adc
dec
cltd
lods
leave
pushf
dec
jmp
sbb
test
stos
push
sbb
imul
xchg
insb
out
dec
pop
cmp
fs
cmpsl
gs
dec
mov
xor
cmp
ret
popf
cld
mov
cmp
je
cmp
arpl
xor
rol
imul
or
cmp
mov
push
xor
daa
or
in
fwait
hlt
dec
adc
sbbl
lock
aad
inc
stos
repnz
jmp
sarb
hlt
dec
ret
movsl
xchg
addr16
jo
cmp
jae
xor
dec
insl
xchg
xchg
add
movsl
call
jecxz
filds
addr16
adc
mov
out
xor
dec
addl
fsubrl
push
stc
jae,pt
mov
mov
out
stc
mov
and
jo
pop
cwtl
cli
xor
aam
out
daa
cmp
int
lock
sbb
cwtl
movsl
ficomps
jno
into
push
add
jae
push
arpl
dec
loope
adc
xchg
jge
dec
and
dec
pop
sbb
lods
gs
insb
movsl
sub
adc
movsl
shrb
sbb
test
loopne
push
rcrb
repnz
inc
outsl
loopne
sub
xchg
sub
call
pop
jg
andb
lods
mov
cmp
mov
add
iret
les
sbb
cmpsl
and
sub
xchg
rcl
in
out
outsb
sahf
in
push
mov
aaa
ret
push
mov
mov
pop
adc
mov
insb
negl
lret
inc
or
and
icebp
push
mov
mov
je
int
aad
cmpsl
sub
ret
mov
leave
mov
icebp
out
out
jle
sbb
test
rorb
jge
movsb
movl
and
test
mov
adc
sub
es
pop
cmp
loop
stc
clc
popf
fs
xchg
mov
mov
cmp
dec
in
cmp
outsb
or
test
dec
mov
and
hlt
and
xchg
in
push
push
push
lods
ds
xor
out
add
loope
cs
cmp
bound
push
mov
enter
ljmp
movsl
push
pop
pop
aaa
push
xor
push
aaa
jg
xchg
je
pop
mov
addr16
lods
cwtl
push
adc
dec
xor
daa
sbb
xchg
cmp
inc
xchg
pop
icebp
es
insb
insb
lret
xchg
iret
inc
cs
dec
in
mov
push
xchg
pop
ljmp
hlt
xor
insb
data16
mov
into
pop
clc
mov
hlt
dec
in
xchg
add
or
pop
test
and
mov
mov
out
inc
shr
jle
mov
aas
jno
or
call
sahf
sbb
lods
jp
or
and
xchg
inc
pop
fcompl
inc
movsl
adc
mov
sub
push
xchg
dec
or
aam
out
loop
stc
pop
bound
ficomps
mov
insb
movsb
aam
pop
mov
dec
mov
mov
outsb
mov
xor
sbb
xor
filds
inc
rorl
pusha
mov
push
inc
push
ret
cmp
xlat
dec
jne
lods
push
pusha
pop
or
inc
movsb
clc
iret
inc
add
pop
xchg
es
cmp
xchg
sub
in
or
insb
repnz
aas
popa
jne
pop
das
in
lods
cmp
push
xchg
fcomip
push
mov
sarb
std
inc
inc
xchg
xchg
mov
mov
add
dec
mov
in
push
testl
lods
add
add
test
fcmovnu
fsubs
and
xlat
and
sbbb
ja
stos
jb
not
push
push
add
push
xchg
sub
stc
cmpsb
cltd
test
fcmovnb
and
jp
mov
xorl
xchg
pop
hlt
push
or
xchg
stos
xorl
int
repz
mov
lea
out
sbb
inc
lock
jmp
or
sub
js
and
pop
inc
xor
jo
cld
dec
lods
mov
sbb
mov
fsubrl
outsl
push
pop
lock
loope
xlat
push
jmp
mov
sub
cltd
ljmp
mov
pusha
pop
cmp
and
push
pop
mov
loopne
cmp
mov
rcrl
cmp
aad
fs
cmp
cwtl
mov
les
adc
int3
cs
pop
les
addr16
mov
pushl
lock
push
dec
scas
dec
loope
psubq
nop
icebp
aam
scas
mov
daa
pushw
popa
outsb
xlat
cmpsb
aaa
xchg
std
sub
into
fisubs
cmp
dec
cmp
in
repnz
mov
inc
jmp
add
cmpsb
add
jecxz
dec
inc
imul
jns
aaa
push
icebp
or
xchg
fdivs
mov
lods
scas
ljmp
call
mov
xlat
xlat
inc
push
pop
les
lahf
das
jge
and
or
mov
jl
insb
and
mov
popf
or
push
std
mov
jbe
mov
aad
mov
ljmp
pop
mov
idivb
rcrb
sub
mov
xor
mov
mov
or
jmp
movsl
into
call
jnp
js
dec
sbb
jmp
sub
lock
xchg
popf
repnz
mov
jnp
ja
push
stos
mov
mov
or
inc
mov
cmp
xor
and
push
or
pop
popa
mov
xor
mov
repnz
or
jp
stc
pop
dec
fdivr
xor
insb
sbb
push
pop
ret
pop
sbb
loope
call
loope
add
sbb
add
lds
cmp
jno
and
andnps
cmp
outsb
xchg
frstor
xor
shr
inc
fisubl
jp
sbb
cmp
stc
adc
inc
add
xchg
mov
and
imul
fistl
pop
cwtl
pop
test
xor
pop
xchg
jge
movsb
sbb
rcrb
push
and
ds
aam
cmp
fists
andl
fsubrl
mov
mov
sbb
inc
jmp
mov
xchg
pusha
cmp
push
cld
scas
xchg
push
mov
ljmp
mov
mov
cwtl
adc
lods
int
jne
push
lds
fisubrl
or
push
out
fs
stos
cmc
gs
adc
sbb
xor
ror
push
jle
pusha
jp
adc
lock
mov
push
xchg
fists
lret
jmp
sub
pusha
adc
aaa
fstpl
clc
cmc
sub
iret
sarl
lods
std
jo
call
test
inc
shrb
je
sub
mov
sti
dec
mov
loopne
sbbl
push
das
repz
mov
gs
sub
sbb
mov
sbb
lret
jne
and
in
sbb
adc
add
sbb
xadd
xchg
and
jl
popf
push
cli
push
pop
cmp
mov
mov
jns
xor
cmp
dec
je
pop
adc
cmp
xchg
frstor
xchg
into
add
mov
andb
xchg
inc
mov
mov
bound
ljmp
cmpsw
xchg
push
push
adcb
lahf
pop
stc
sub
ror
aad
or
sbb
orb
jnp
outsl
dec
loope
cmp
test
xchg
icebp
and
test
add
adc
cmpsb
cmp
rdpmc
ljmp
shrl
ret
push
test
xchg
dec
xchg
call
mov
and
xchg
in
xchg
outsl
sub
into
jg
scas
repnz
mov
sbb
repz
push
pop
orl
sbb
cs
gs
mov
outsl
mov
in
jno
sub
leave
lcall
cs
shll
xchg
jno
and
popf
jg
jmp
xchg
lock
add
mov
bound
dec
adc
dec
add
hlt
stos
sub
xor
pop
leave
jmp
out
std
cmp
call
shll
xchg
rcl
imul
add
mov
pusha
push
add
sub
fisubs
add
push
test
repz
xchg
push
push
in
hlt
ja
or
cmp
push
or
jecxz
xchg
mov
xchg
je
cwtl
and
popa
ja
movsb
dec
je
jb
das
mov
mov
dec
das
setns
pusha
aam
jbe
mov
adcb
data16
cltd
dec
sti
ds
jl
jne
mov
adc
cmpsb
and
insb
sbb
dec
xchg
cli
out
imul
int3
sti
fildll
jecxz
and
add
inc
loope
shl
xchg
pop
ret
je
inc
mov
out
sbb
and
mov
sarl
mov
xchg
pop
idiv
inc
cwtl
lret
jae
mov
test
shl
loop
pop
and
cmc
mov
in
data16
xchg
mov
adc
stc
jecxz
loopne
lock
inc
rolb
shll
sbb
int
jmp
push
in
in
ret
jmp
fsub
ds
push
jno
pop
pop
repz
cmp
insl
mov
ret
fsubrs
cltd
arpl
cli
sbb
jl
pushf
mov
push
lahf
mov
mov
mov
xchg
jbe
push
out
aaa
mov
xor
int3
jnp
xchg
fstpt
outsb
cltd
dec
shl
jle
inc
or
adc
inc
bound
mov
mov
cld
fwait
sbbl
imul
aad
xor
mov
sub
cli
sbb
fcmovnu
pop
sbb
data16
sbb
aaa
dec
cltd
outsl
xor
push
mov
popa
orl
push
mov
lret
xor
adc
xchg
ja
divl
sub
test
push
jmp
xor
sbb
cli
shl
mov
jns
arpl
hlt
mov
hlt
cld
mov
dec
push
mov
mov
jbe
cmpsb
mov
push
mov
jnp
out
pop
pop
mov
push
add
and
js
movsl
xchg
stos
mov
jmp
push
scas
std
push
push
es
int3
lods
xor
jae
jbe
fwait
mov
in
arpl
pop
inc
repnz
cmpl
or
inc
test
repnz
push
decl
and
out
fsubrs
or
cmp
out
shll
cmpsb
dec
push
jns
adc
mov
fs
loop
sti
fdivl
test
or
sbb
shl
int
leave
cs
xchg
mov
adc
jbe
xchg
jns
iret
sub
mov
das
stc
bound
lahf
fdivs
sbb
pusha
sahf
dec
jmp
or
push
test
adc
lret
fcomps
loope
faddl
popf
jne
cmp
dec
pop
mov
mov
cmp
mov
test
jp
jl
hlt
stc
and
push
adc
bound
adcl
fiadds
sbb
mov
mov
pop
lcall
push
fildl
adc
sub
inc
pop
lret
call
scas
aad
incb
pop
add
pop
xor
lcall
or
mov
addr16
stc
xor
std
scas
test
cmpsl
shlb
adc
test
push
push
inc
sbb
in
xchg
cltd
pop
add
push
loop
outsb
iret
jmp
jl
in
mov
push
ljmp
psrad
add
in
fidivrl
mov
in
cmp
adc
mov
pusha
push
pop
aaa
push
popa
stos
cltd
es
push
sbb
movsl
dec
sub
ret
jno
cli
int
popa
push
adc
mov
lret
ret
movsb
bnd
pop
xchg
xor
lret
cmpsl
inc
cmp
push
xchg
inc
stos
sub
ja
mov
hlt
insl
adc
scas
in
jo
test
cmp
mov
jecxz
mov
sub
xchg
push
mov
adc
jecxz
push
sub
jecxz
pop
dec
aam
lret
cli
mov
testb
sarl
jp
in
fsubrs
adc
mov
mov
stos
push
pop
cwtl
sbb
jge
sbbl
jns
push
stc
pop
out
or
cmc
jae
mov
test
cmc
jb
pushf
or
test
pop
cwtl
mov
mov
sbbl
lahf
imul
js
push
movsl
in
inc
jl
xchg
orb
hlt
add
sub
pop
mov
ja
or
int
sub
push
jge
aam
add
test
call
adc
adc
aas
addl
inc
add
repz
push
hlt
in
xor
sbb
sbb
mov
pop
mov
outsl
lea
aam
sbb
dec
inc
pop
pop
movsl
out
push
test
cmp
jno
shll
push
cmpsb
dec
sub
je
out
sub
movsl
jns
aad
xchg
int3
mov
mov
sbbb
xlat
mov
loop
fxch
rorl
inc
mov
mov
push
fwait
add
scas
lcall
push
mov
inc
sbb
xor
mov
add
push
xchg
inc
adc
insb
std
xchg
mov
cmpsl
pop
in
js
test
into
pop
sub
mov
push
movsl
cmpsb
fsubs
cmp
ret
pop
stc
xchg
jg
mov
data16
sti
pop
sub
pop
andnps
sub
loop
gs
jecxz
push
fidivs
lds
sub
pop
dec
addr16
pushf
shlb
ss
or
mov
ficompl
mov
or
xor
pop
in
add
pop
jg
lahf
shl
mov
xor
in
lcall
sub
or
decb
adc
sbb
dec
cmp
inc
ror
std
adc
fildl
xlat
test
mov
daa
push
daa
mov
or
insl
mov
pop
lret
sbb
push
aas
add
shlb
cltd
imul
mov
outsb
mov
and
cmpsb
rcrb
mov
xchg
jle
mov
sarl
fadds
cmpsl
in
mov
jae
pushf
aam
clc
mov
xchg
xchg
add
pushf
or
jo
push
jl
jbe
shlb
out
outsl
lret
add
call
leave
pop
sbb
imul
jo
inc
popf
cmp
pop
outsb
and
pop
mov
xor
push
test
jae
outsb
sbbb
jp
movsl
testl
test
or
jle
sar
movsl
aas
mov
jmp
cmc
xlat
push
ja
stos
popf
int3
sbb
mov
pop
daa
fucomip
inc
mov
or
xchg
lcall
xchg
out
fisubs
repz
hlt
std
lret
imul
add
addb
jecxz
sub
test
test
dec
adc
fs
cmp
add
imul
insl
push
sbb
jge
sbb
lods
das
fists
mov
lods
lods
jnp
in
pop
mov
sbb
jl
shlb
mov
mov
outsl
sbb
cmc
jno
adc
lods
xlat
scas
push
adc
pop
into
inc
andb
lds
std
sub
mov
hlt
xchg
int3
in
rcrl
into
jecxz
test
jge
js
mov
loopne
mov
iret
aas
cmp
imul
jg
jp
divl
pusha
xchg
mov
out
jae
cmp
cwtl
add
adc
sbb
lret
fsubr
test
mov
dec
lock
sub
and
iret
push
xor
icebp
rorb
jge
ljmp
je
ret
xchg
movsb
adc
sub
dec
rorl
mov
and
in
push
fcomps
jne
ret
stos
jnp
std
sbb
xchg
jbe
or
addr16
pusha
cmp
mov
into
imul
push
les
pusha
rclb
lret
adc
jp
mov
arpl
xchg
cmp
cli
mov
arpl
sub
testb
push
and
mov
xor
push
pushf
sub
bound
les
xor
jae
xchg
sub
stos
xor
add
out
or
jnp
repz
faddl
ret
xchg
sub
inc
jle
cmp
mov
aam
sar
or
outsl
jns
imull
pop
inc
repnz
sub
mov
dec
xchg
xor
push
rorl
enter
sbb
loope
mov
movsb
push
cmp
inc
jb
jp
adc
mov
xor
pop
sbb
xor
inc
cmp
xor
adc
dec
push
test
orb
std
mov
inc
push
xor
ret
dec
cmp
mov
xchg
xchg
aas
test
hlt
fstpt
or
fnstcw
mov
inc
inc
push
popa
jge
lock
popa
adc
pop
pop
pop
sub
mov
push
rolb
or
lods
ljmp
or
call
xchg
das
cmp
cmp
sub
jae
jmp
call
mov
in
enter
jno
iret
jo
dec
ret
fbld
pop
js
xchg
bound
xchg
mov
repz
in
sbbl
jecxz
movsb
jle
test
pop
sti
test
mov
call
in
imul
and
rorl
out
mov
mov
mov
leave
add
popa
fcoms
sarl
mov
aaa
adcb
cmpsl
sbb
cmp
mov
sahf
jge
andb
clc
inc
mov
outsl
sub
mov
pushf
mov
cmp
ljmp
call
inc
outsl
pusha
imul
pop
dec
repz
popa
and
cli
and
adc
or
mov
mov
iret
and
pop
sub
or
out
adc
call
es
xchg
dec
pop
fdivs
adc
icebp
iret
adc
stos
jne
lods
push
inc
cmc
add
fisttpl
fadds
cmp
pop
imul
mov
jp
cltd
jbe
pop
mov
mov
push
shll
and
push
ret
jl
test
dec
mov
inc
loope
bnd
push
push
cmp
rorw
jg
pop
mov
shll
jnp
cmp
pop
push
nop
repz
mov
adc
and
sub
jl
iret
push
adc
sti
sub
shrl
in
setbe
mov
push
or
aam
fdivrl
sbb
andb
iret
jle
mov
jmp
or
mov
mov
pop
cmc
xchg
pop
mov
sbb
ds
xchg
out
cs
bnd
out
fnsave
sbb
stos
sbbb
jo
ds
xchg
and
enter
lret
cmp
mov
pop
iret
sbb
cmc
mov
cmp
cltd
out
imul
out
jo
fstpl
xchg
aaa
inc
jle
xchg
les
lcall
testl
push
cmp
popf
addl
mov
jp
pop
ret
xorl
cmpl
shl
insl
pop
cwtl
sbb
jbe
outsl
mov
les
mov
sub
lods
sbb
mov
xor
pop
sub
test
cmpsb
push
push
xchg
movsl
stos
shrb
mov
jne
in
and
xor
movsl
mov
cld
pop
int
fs
pop
xor
cld
mov
push
dec
dec
loop
mov
xlat
pop
jge
mov
pop
jae
jnp
and
stos
test
hlt
movl
push
add
pop
sbbb
fs
scas
orl
cli
adc
lds
push
and
scas
add
cltd
shll
sub
sub
clc
dec
pop
pop
iret
dec
fisttpl
loope
out
out
pop
push
jb
push
sarb
loopne
fbstp
mov
imul
mov
add
add
pop
inc
ja
stc
inc
outsl
or
je
out
and
adc
int3
and
xor
test
out
pop
sub
push
cltd
adc
and
fsubs
and
inc
mov
test
test
fmuls
ds
das
movl
jo
jmp
mov
fwait
xchg
icebp
dec
ds
xchg
sub
nop
or
insb
cwtl
inc
test
xor
lret
and
movsl
dec
leave
cmpps
sbb
add
shl
les
jecxz
jno
pushf
or
cs
les
lea
bound
jg
cmovae
dec
push
ficomps
js
lock
pop
push
sub
push
pop
inc
lods
mov
es
cmp
fldln2
dec
xor
add
cmp
or
stos
push
xchg
push
pop
imul
xlat
sbb
aas
lea
xor
jae,pn
dec
addr16
push
cmc
mov
add
in
inc
js
rolb
in
or
push
pop
ret
sub
inc
pusha
je
xchg
adc
push
push
cmpsl
add
int
gs
or
pop
pop
test
xchg
and
outsb
mov
shll
cs
leave
cmovs
loop
or
sbb
lock
sub
addr16
scas
jp
loope
or
addb
addl
stos
xchg
in
jno
xchg
pop
xchg
jl
cmc
sbb
iret
xor
int3
cli
adc
or
or
jg
fisttps
add
dec
or
idivb
data16
push
push
in
xchg
ret
dec
pop
pop
cmpsl
sbb
xchg
or
push
cmpsb
sbb
ret
daa
popa
call
add
push
add
rorb
inc
stos
incl
fldcw
push
xchg
pusha
pushf
dec
xchg
pop
cmp
scas
mov
adc
mov
adc
cmp
aam
loop
pusha
scas
mov
mov
mov
sbb
pop
push
test
cltd
add
sbb
cmp
cld
not
rcl
mov
pushf
insl
fadd
insl
jmp
popa
add
dec
push
dec
mov
fcoml
test
fucomip
and
arpl
mov
jge
js
mov
sub
ret
test
push
push
lods
cmp
ljmp
insl
lds
push
add
fistl
xor
pop
aaa
pop
adc
pop
jmp
in
push
in
mov
cltd
lea
jp
lcall
outsb
add
scas
push
sbb
test
ficompl
cmovnp
mov
sbb
test
stos
jae
pusha
inc
nop
xlat
dec
push
xchg
pop
mov
movd
fwait
jmp
mov
adc
cmp
mov
dec
lods
adc
scas
mov
pop
push
sbb
pop
cltd
mov
inc
jo
push
dec
fld
cli
inc
lret
fdivl
inc
rolb
adc
divb
in
jbe
test
and
je
scas
iret
mov
pop
mov
movl
inc
movsl
sub
cmpsl
ficoms
aam
imul
outsl
xchg
push
mov
jns
sarb
push
xor
or
mov
xchg
js
mov
adcb
cltd
add
xchg
rcr
xchg
test
test
div
ds
divb
adc
add
loop
into
jbe
cmpsl
das
dec
mov
add
scas
je
in
xorl
mov
test
stc
std
mov
add
addr16
scas
pusha
enter
adc
hlt
mov
jae
cld
mov
popa
sub
cmc
jg
sub
inc
jl
aaa
nop
add
dec
gs
out
add
inc
mov
xor
loop
jmp
cs
rcrb
push
lahf
inc
xor
add
mov
cmpsb
mov
insb
jno
mul
add
inc
pop
jp
test
push
scas
inc
jl
cmp
cli
int3
mov
je
or
add
int
sbb
call
mov
push
add
cmp
inc
push
dec
dec
mov
pop
push
add
xchg
ja
mov
lret
add
and
jae
out
das
push
or
jbe
adc
loop
and
outsl
and
adc
push
jns
in
or
nop
add
iret
pop
push
outsb
ss
mov
leave
jg
scas
dec
call
jle
mov
sbb
fisubrl
out
insl
fmuls
mov
dec
dec
rorb
xor
ds
mov
sbbl
jecxz
adc
test
lahf
and
mov
std
pop
push
clc
push
mov
mov
sbb
adc
jl
int3
inc
js
push
gs
data16
ljmp
push
mov
arpl
sub
std
inc
sub
test
push
sub
out
je
jmp
xor
mov
sbb
and
jle
jp
test
push
fdivrs
insb
lods
sarl
add
insb
test
rolb
inc
and
ret
dec
cmpsb
cmc
pop
orb
rorb
xor
stos
aaa
ds
xor
outsl
test
and
add
push
out
into
xchg
sti
addr16
dec
loop
test
push
ret
push
scas
stos
mov
dec
mov
mov
lds
fists
and
loopne
cmp
add
scas
push
movsb
loop
insl
adc
adc
rcrb
enter
push
inc
push
and
ficoms
les
out
je
or
icebp
rorl
lret
push
pop
enter
jb
add
fwait
into
and
fiaddl
out
fucomip
xchg
imul
inc
insb
hlt
pop
cmp
push
push
and
insl
andb
fildl
push
icebp
sbb
pop
xchg
fmull
lret
mov
cli
inc
adc
pushf
mov
jecxz
stos
mov
jmp
mul
jecxz
sub
rolb
mov
sarl
mov
addl
insl
leave
sbb
cmc
and
shll
in
rcrb
je
mov
mov
mov
aas
sbbl
ljmp
jge
lods
fdivl
xor
lock
vdivps
nop
mov
jnp
addr16
in
js
pop
or
jbe
and
dec
sbb
dec
icebp
mov
movsl
add
cmp
loope
jno
scas
inc
mov
fcompl
pop
jo
test
push
jne
push
enter
fs
jo
sub
mov
into
xchg
cmp
out
shr
les
out
dec
mov
imul
xchg
inc
notl
push
ljmp
inc
lcall
pusha
fucomi
mov
lcall
pushf
dec
fdivrl
add
fldl
xor
mov
push
mov
lods
mov
movsb
clc
mov
mov
add
push
add
mov
sub
pusha
in
xor
mov
lods
push
ja
xchg
jns
mov
sub
xlat
test
cmp
jge
sbb
push
sbb
push
aad
pop
ljmp
mov
dec
adc
sbb
aad
sub
push
jae
push
fxch
xor
and
scas
sbbb
dec
aaa
pop
jo
insb
and
test
inc
cli
pop
dec
jae
clc
adc
or
inc
stos
jae
push
sti
int
movsb
test
ficomps
loopne
sar
or
les
inc
inc
call
pop
jo
jge
xchg
es
inc
mov
ret
mov
xor
lcall
mov
cmp
in
sbb
pop
ljmp
stos
mov
xchg
insb
mov
shlb
int
test
cmp
clc
ds
xor
xchg
pop
jge
cld
in
xor
push
in
cs
out
and
dec
dec
add
cli
aaa
xor
push
mov
xchg
and
dec
pop
fs
arpl
mov
popf
fstl
inc
jge
mov
cmp
cwtl
hlt
repz
cmp
insb
add
inc
nop
mulb
cltd
xor
push
iret
rcl
mov
mov
test
aam
xlat
xor
xchg
ret
mov
xchg
or
xor
imul
mov
sarb
lods
jle
sbb
cmp
xor
push
ret
lret
jb
test
or
aam
jl
scas
and
pop
test
bound
mov
aam
bound
insl
sbb
pop
adc
pop
dec
rcll
shr
and
or
mov
inc
lea
add
and
pmulhuw
js
xchg
repz
push
loope
pop
aaa
sub
cmp
mov
imul
mov
rclb
lret
lods
add
into
jmp
push
xor
lods
iret
pop
insl
jnp
cwtl
into
pop
loopne
daa
push
mov
add
roll
and
or
push
push
into
inc
sbb
lds
xchg
outsl
ds
add
jae
adc
jbe
ljmp
sahf
int3
nop
jl
pop
adc
mov
orl
scas
xor
ficoms
push
stos
cld
jp
lds
push
or
in
pop
imul
out
jle
push
xor
cmpsb
adc
daa
out
sbbb
xchg
sub
push
push
incb
imul
testl
ret
in
sti
leave
rcll
jno
adc
test
xchg
mov
pop
mov
xchg
jg
pusha
shll
xor
mov
add
sbb
lods
jge
mov
leave
fwait
pushf
dec
push
mov
push
sub
insl
lods
add
divb
loopne
divb
pop
lds
pop
pop
dec
ljmp
subb
jecxz
pop
lock
xchg
es
rcr
adc
mov
mov
adc
repnz
jge
daa
int3
and
iret
leave
add
bound
and
iret
push
pop
mov
inc
pusha
leave
data16
daa
and
pop
add
push
push
stc
push
xor
ljmp
dec
das
fldl
mov
repnz
notl
sub
cmp
dec
gs
lret
fcomps
sub
mov
adc
mov
lods
mov
cmp
cs
pop
lods
fildl
push
dec
cli
cmc
pop
arpl
fisubl
add
scas
xor
call
icebp
mov
leave
mov
add
std
push
iret
push
cmp
mov
pop
jp
xchg
jb
push
adc
mov
cmpsl
sti
and
dec
and
testb
stos
outsl
mov
sub
push
mov
sahf
push
push
fs
mov
and
sti
sub
popa
sbb
sarl
adc
in
das
ret
mov
enter
shrb
mov
cmpsl
jno
inc
jne
or
in
cmp
mov
sti
mov
fldenv
pop
mov
add
push
rclb
lock
int
xor
or
int
push
aas
cmc
aam
out
xor
mov
pop
mov
call
mov
lods
push
test
inc
inc
pop
adc
aam
arpl
outsb
cmp
movlps
and
jnp
push
inc
mov
pushf
jns
or
mov
or
stos
loopne
cmc
idivb
jae
cmp
dec
cmpl
pop
sbb
mov
jg
pop
stos
push
sbb
cmp
fisubrl
mov
int
fnstenv
popa
lahf
sbb
aaa
lock
sub
push
sbb
jb
lret
inc
xchg
and
mov
pop
insb
mov
sbb
xor
popa
lcall
or
push
xor
and
xchg
rorl
mov
pop
aam
xchg
xor
sbb
xor
outsl
outsb
aas
stos
mov
mov
scas
inc
and
sub
icebp
mov
inc
mov
es
sbbl
sbb
push
xchg
mov
xchg
cli
pop
xchg
loop
mov
cld
leave
push
out
lea
xchg
push
xbegin
sub
test
dec
leave
cmpb
xor
scas
mov
stos
xor
sbb
mov
pop
push
pushw
test
in
pop
jnp
fisubrs
or
fwait
add
adcb
in
jge
imul
xchg
sti
pop
cmc
push
add
jl
lret
ds
cmc
in
xchg
cmpsb
fisttpll
jns
sub
jecxz
mov
call
imul
sti
pop
sti
cmpsl
cld
add
dec
xchg
add
cwtl
stos
jb
outsb
lea
gs
pop
das
testl
or
cmp
scas
lcall
test
push
shl
xchg
cmpsb
loopne
jo
adc
pop
pushf
sbb
popf
add
sahf
ds
cmpsl
outsl
lds
jns
fxch
jl
in
imulb
inc
xchg
dec
inc
add
sub
cmp
fs
jge
push
add
clc
cld
ja
pop
arpl
lds
mov
dec
imul
dec
adc
add
stos
jb
push
jmp
into
xchg
fidivs
xchg
xor
stc
push
imul
aas
and
xor
dec
mov
mov
and
mov
or
and
fistpll
mov
fildll
xchg
adc
jl
faddl
mov
pop
jbe
loopne
push
mov
push
and
insl
push
or
mov
test
shlb
popa
rolb
sbb
pushf
loopne
repz
jmp
sub
rol
xchg
nop
adc
jno
iret
mov
arpl
fucomip
js
adc
mov
and
xlat
std
xchg
in
adcl
repnz
mov
stc
adc
inc
in
lods
cltd
inc
xor
cmp
imul
orb
loop
in
arpl
adcl
sbb
inc
adc
fidivs
cld
jbe
loope
std
xchg
jno
jae
int
fucomi
xor
jb
inc
push
roll
insb
cmc
ja
pop
stos
dec
inc
je
push
jp
nop
pop
xor
into
mov
or
nop
data16
sti
push
lods
xchg
jo
adc
cmp
lss
cwtl
pop
adc
push
sbb
out
xchg
scas
xlat
daa
jl
aam
call
and
sbb
xchg
or
negl
js
sbb
lods
pop
adc
or
mov
or
add
outsb
cmp
pop
add
stos
daa
pop
cwtl
lret
hlt
lods
or
lcall
aaa
cmp
jmp
jno
mov
and
lret
cli
cmp
mov
inc
sub
ds
or
pop
and
mov
xchg
clc
sub
push
fs
jle
mov
bound
add
jne
aad
lahf
mov
sbb
push
or
imul
cmp
xchg
or
xchg
sahf
mov
cs
xchg
cmp
or
mov
aas
adc
push
dec
test
jle
push
pop
rcrl
std
mov
xchg
dec
pop
jecxz
scas
outsl
arpl
mov
bound
and
cld
jmp
data16
imull
ss
cmp
pop
inc
call
popf
into
pop
add
mov
mov
cmp
insb
inc
and
lret
lods
iret
xchg
dec
ret
mov
int
sub
lret
mov
or
mov
fdivl
daa
sti
push
mov
push
lret
lea
pop
xor
ja
dec
fnstcw
aaa
dec
js
repnz
jne
je
sahf
test
jne
mov
mov
xchg
cmpsl
jns
in
push
xor
adc
ljmp
mov
pushf
cltd
lret
idiv
sub
aad
sbb
adc
rorl
and
mov
sbb
incb
arpl
cmp
loope
mov
fidivrl
subl
inc
mov
xchg
in
push
mov
pop
and
pop
ja
out
and
mov
xlat
in
cmp
mov
dec
gs
cmp
mov
inc
mov
jne
je
enter
sub
mov
xor
cmpsl
jae
sub
les
int3
das
rorl
cltd
xorb
lret
jmp
xchg
stos
cs
cmp
out
mov
mov
pop
mov
ds
shll
lret
ret
mov
gs
cltd
icebp
mov
mov
aaa
cmpsb
inc
scas
pop
push
mov
or
push
xchg
pop
push
mov
push
jb
or
psraw
sbb
sub
and
xchg
imul
sub
cwtl
jbe
cmp
jb
inc
pop
int3
das
out
out
xor
cmp
xor
test
ret
add
xchg
mov
out
mov
movsl
faddl
jle
pop
mov
insb
aam
push
sub
hlt
in
jno
cmp
pop
pop
mov
cmpsb
aas
dec
sub
and
testl
int3
sarl
mov
repz
dec
fbld
mov
push
sarl
mov
cmp
in
adc
daa
ljmp
inc
add
fcos
xchg
xchg
ret
ret
rol
sub
jp
outsl
mov
daa
pop
sbb
iret
sbb
adc
xlat
cwtl
pop
enter
xor
nop
xchg
mov
lock
lcall
jns
dec
int3
push
clc
subl
xchg
stos
dec
fcomp
and
test
outsb
add
add
inc
das
xchg
fadd
push
inc
mov
rclb
xor
sbb
daa
jbe
mov
mov
ja
sahf
jo
jecxz
inc
inc
push
cmpl
inc
sub
test
cmp
out
es
pop
sub
orb
popa
pop
adc
shll
and
test
add
xchg
mov
jl
adc
jno
and
mov
fistpll
push
jl
jns
es
pminub
mov
std
out
sbb
push
xchg
lea
mov
xor
cmpb
add
shrl
cmp
jnp
jne
aad
test
loop
sub
add
adc
pop
sub
adc
ja
inc
mov
mov
pop
icebp
jnp
and
orb
and
rorl
clc
insb
pop
pop
roll
loop
test
pop
xchg
sbb
pusha
js
testl
loope
je
mov
roll
push
jecxz
jmp
push
imul
or
icebp
or
mov
or
adc
iret
push
jg
out
aam
lcall
out
pop
frstor
shrb
mov
sar
push
push
sub
idivl
dec
dec
mov
cmpsb
adc
xchg
das
jl
inc
imul
fs
push
fcompl
popf
and
sub
pop
cli
leave
jmp
rorl
std
dec
imul
cmp
ret
fcomps
test
pop
sbb
cli
cmp
insb
mov
xchg
jecxz
add
fst
sbb
fdivs
xchg
ficompl
jbe
xor
ret
into
mov
xchg
js
dec
or
in
mov
pop
xchg
lock
popf
sbb
or
push
sbb
icebp
cld
es
add
aaa
or
mov
mov
ret
sbb
or
mov
sbb
add
mov
mov
std
iret
mov
pop
sbb
jb
cmp
or
ljmp
adc
push
push
inc
pop
jge
jb
mov
or
ja
cmc
push
push
scas
ss
jmp
xchg
xor
clc
in
xchg
lret
lods
xchg
inc
rorl
sbb
lods
sub
or
sahf
mov
in
ja
adc
mov
nop
sub
and
mov
xchg
push
xor
push
popl
inc
or
or
sbb
push
out
cmp
shrb
mov
jae
outsl
loope
or
es
dec
ds
xor
icebp
or
addr16
dec
pusha
xchg
cmp
lcall
pop
and
jae
loope
aaa
filds
in
loopne
push
sbb
outsl
imul
orl
cli
or
adc
pop
je
sub
in
negl
adc
mull
and
jecxz
orb
not
fwait
mov
add
cmpsl
pop
pop
jg,pt
pop
and
out
mov
shrb
lods
out
or
test
hlt
loop
cmp
jmp
sub
frstor
clc
sbb
subl
aaa
lods
xor
inc
sub
xchg
mov
jg
cwtl
push
ss
fldenv
lahf
imul
cmp
pop
pusha
jae
outsl
cld
in
adc
push
gs
fisttpl
bound
mov
mov
dec
andl
call
cs
lcall
sbb
mull
mov
push
mov
in
arpl
insl
adc
inc
pop
xchg
push
cmp
stc
popa
xchg
sub
ss
jno
xchg
push
push
in
ljmp
out
sub
lcall
inc
jge
lds
in
pop
mov
cmp
das
scas
lret
inc
dec
xchg
mov
test
inc
call
inc
mov
and
push
lock
and
pop
sbb
push
popf
frstor
xchg
fisttps
loopne
outsw
mov
mov
sub
adc
push
push
outsb
jbe
movsl
es
dec
rcrl
add
adc
or
sahf
xor
aaa
cmp
loopne
repnz
cmp
imulb
addb
push
lcall
inc
int
popf
sbb
mov
inc
cltd
lret
stc
call
jge
cmp
ds
inc
xor
pop
insl
sbb
mov
mov
cmp
jbe
fiadds
ret
fs
dec
push
sbb
mov
test
xchg
repz
lret
mov
inc
cmp
push
jl
in
cld
jl
and
and
or
xor
int3
inc
stos
mov
out
rol
inc
std
jecxz
push
outsl
shl
lods
mov
and
sbb
ret
mov
je
and
lods
ds
repnz
mov
inc
in
stos
loope
je,pt
movsb
test
cmp
lahf
dec
das
je
lret
outsl
adc
cltd
pop
sub
nop
in
subb
mov
sub
xchg
aas
lods
pusha
sahf
cmpsb
stos
push
lret
test
pusha
insb
aas
jle
test
ret
test
dec
mov
add
or
inc
arpl
sbb
repnz
dec
stc
and
mov
jg
xor
mov
adc
pop
mov
inc
cmp
adc
mov
mov
xchg
sub
mov
in
cmp
sub
sbb
popf
and
fidivrl
or
cmp
or
shll
mov
or
mov
add
push
sahf
outsl
sarl
and
pop
notl
push
xor
xchg
fstpl
cmp
out
pop
push
mov
jno
dec
leave
aas
mov
sub
sub
cltd
inc
repz
pop
mov
inc
push
cmp
and
subb
lcall
sub
ja
add
std
dec
inc
insl
jo
add
sar
push
loop
int3
inc
inc
mov
mov
mov
xor
fwait
aas
mov
dec
push
xchg
push
mov
sahf
rcrl
test
in
ret
popa
jbe
cmpsl
push
sub
push
add
and
pop
ds
mov
adc
jbe
dec
mov
cmp
push
rorl
das
nop
rcl
and
les
dec
add
in
xor
scas
jo
mov
push
cwtl
cmp
sub
fnstenv
push
lods
or
mov
call
push
insl
aad
call
push
in
mov
out
pop
push
dec
xchg
lret
add
imulb
shrb
inc
cmp
out
sbb
pop
out
stos
mov
pop
push
fdivrl
lods
cmp
adc
fbstp
inc
addr16
jge
dec
and
imul
mov
les
cmp
mov
sub
pop
sub
sbb
push
mov
fsubs
xlat
imul
js
cmp
sbb
shl
jp
or
lret
jle
push
jns
daa
outsb
pop
sbb
sti
mov
mov
aas
dec
sti
cs
ljmp
jecxz
mov
jg
js
lds
push
cmp
ret
pop
sub
js
mov
aad
pop
xchg
js
jmp
jae
inc
negb
jne
aad
std
cli
fs
cli
cltd
add
fldt
push
sahf
mov
inc
xor
push
sbb
stos
cmc
cmc
jge
shlb
mov
mov
mov
add
dec
push
sub
fisubrl
xchg
das
mov
cmp
gs
xchg
int3
ljmp
icebp
pop
leave
popf
mov
push
xor
cli
push
jo
jl
pop
and
sbb
movsl
pushf
in
xor
outsb
out
or
push
and
stc
mov
xchg
notb
mov
nop
lea
xchg
andb
fistpl
inc
add
shr
jge
sbb
mov
xor
lcall
pop
push
sub
sbb
lods
cwtl
addl
loopne
push
out
divb
jmp
push
mov
jbe
mov
inc
test
cli
and
xchg
jo
cmp
xor
xchg
insl
stos
decb
test
ljmp
dec
pop
inc
or
adc
lods
pop
lea
or
mov
add
inc
add
mov
sub
movsl
ja
inc
loope
pop
or
push
dec
fcompl
push
out
lret
xorl
into
adc
js
mov
cmpsb
sub
jbe
notb
dec
scas
mov
inc
adc
pop
popa
or
or
xchg
mov
cmp
loope
cmp
into
outsb
in
cmpsl
js
pop
sbb
sub
mov
cld
ret
fimuls
test
sbb
into
sbb
insl
push
push
cwtl
mov
sub
lret
or
les
dec
lcall
cwtl
fwait
and
leave
mov
cmp
mov
insl
add
cvtdq2ps
ret
rcrb
or
mov
int3
pop
mov
fistps
fwait
mov
or
dec
xchg
sbb
lods
enter
data16
xchg
or
orl
cld
shr
pop
cwtl
jmp
shl
cmc
dec
xor
and
fidivs
sbb
mov
cwtl
fldt
jno
jb
xchg
addl
shll
xlat
pop
aam
test
fstl
roll
addl
insb
mov
push
mov
inc
cs
ret
std
movsl
or
inc
inc
icebp
xlat
mov
adc
stc
or
jp
push
fdivp
xor
mov
pushf
inc
mov
cmc
push
xor
mov
testl
sub
popf
push
clc
daa
push
mov
mov
fisttpll
ds
outsl
fcoms
inc
jge
sbb
mov
push
mov
sub
push
out
dec
sbb
pop
lea
das
push
push
adc
gs
test
sbb
ja
mov
jg
mov
xchg
insb
cmpsl
xorl
push
push
mov
inc
movsb
outsb
cltd
add
dec
cmp
sub
rcrl
pop
mov
pop
push
aaa
mov
or
in
loopne
pop
cmpsl
jecxz
pop
add
imul
stc
jecxz
inc
xchg
les
out
inc
add
mov
rcr
mov
and
xor
ds
test
xchg
stc
push
icebp
xchg
ret
lods
shrb
pop
and
cmc
aad
inc
imul
jmp
pcmpeqw
imul
repz
into
adc
sbb
insl
dec
int3
or
mov
mov
xchg
cltd
push
lea
jo
jns
stc
cld
sbbl
fmuls
push
addr16
jle
or
xor
push
mov
xor
popa
push
sti
xchg
push
cmp
sbb
mov
xchg
hlt
movsl
pusha
push
push
insb
repnz
cmc
daa
xchg
push
mov
or
scas
jb
lock
xlat
addr16
adc
push
repz
dec
stc
out
sbb
insb
and
cmc
cmp
shll
mov
push
xor
lods
mov
and
and
add
je
subl
popa
jecxz
mov
bnd
push
cwtl
mov
int3
loopne
sub
sub
cmpb
out
icebp
repz
mov
adc
into
daa
inc
xor
mov
aas
mov
subb
fstp
xchg
xchg
icebp
clc
push
add
xor
mov
test
mov
sub
ret
mov
sti
xchg
mov
fimuls
pop
cmp
lock
sbb
ds
adc
or
jae
xchg
addr16
clc
test
jne
inc
sahf
lea
or
add
dec
fsubr
cmc
mov
test
adc
cmp
cmp
lahf
les
xchg
stos
adc
mov
movsb
and
sarb
add
pop
pop
nop
dec
mov
jge
movsb
dec
push
xor
jb
mov
cli
andl
xchg
dec
gs
pushf
add
mov
push
sbb
cmp
inc
dec
xchg
or
fcoml
out
lret
jbe
xorl
aas
nop
mul
adc
jmp
mov
mov
repnz
cmp
jg
add
mov
and
cmp
adc
lcall
imul
add
cmp
pop
jmp
inc
jo
and
icebp
fs
mov
imul
mov
xlat
lods
add
cld
push
cld
int3
sub
pop
jmp
xor
pusha
repz
push
std
mov
popa
dec
mov
mov
inc
cli
dec
mov
repnz
stos
adc
pop
adc
int3
data16
out
je
lcall
jp
mov
insb
push
pop
int3
out
push
aaa
int3
movsl
lds
add
sub
and
jno
dec
movsb
ret
hlt
sub
jo
ret
inc
dec
mov
cld
mov
lret
xchg
pop
add
dec
loopne
mov
daa
mov
addr16
sub
pop
pop
lock
push
adc
cmpsb
xor
int3
lea
repnz
inc
jbe
sti
out
pop
xor
fisttpl
cs
inc
push
pop
dec
das
test
pop
mov
sub
outsl
jb
jmp
lock
inc
adc
add
inc
mov
xor
xchg
xlat
dec
mov
xor
int
sbb
sbb
mov
out
loopne
cmp
sub
or
xchg
jg
daa
fmuls
sbb
arpl
cmp
fnstsw
add
std
inc
mov
test
mov
dec
icebp
ja
lcall
incl
pop
scas
ret
repnz
cltd
std
loop
xchg
stos
ljmp
fs
iret
insl
mov
stos
test
pop
or
gs
or
orb
cmp
xor
rcrb
jl
mov
dec
insl
shrl
mov
loopne
pop
jns
push
std
aas
ss
pop
mov
or
jecxz
xchg
jo
test
inc
mov
xchg
iret
pusha
xorl
cmp
sub
push
adc
sub
sbbb
inc
mov
push
pop
inc
mov
inc
ss
jae
mov
rcrb
xchg
mov
xchg
lcall
repnz
mov
lret
xlat
push
idiv
loope
mov
jecxz
cmp
mov
push
xchg
xchg
and
lock
into
adc
dec
cmp
std
cmpsb
xor
adcb
mov
cli
and
xchg
test
aad
and
adc
jmp
mov
data16
test
xor
xor
js
fsubrs
or
xchg
pop
adc
lock
jecxz
add
in
sub
aam
xchg
and
sahf
mov
add
daa
jno
inc
je
ja
scas
inc
jmp
cmp
cmp
dec
jnp
pop
inc
std
jge
adc
out
testb
gs
ret
and
jb
mov
cmpsl
sarl
or
mov
lods
mov
lds
xor
xchg
xor
jb
mov
cmp
popf
movsl
mov
insb
and
push
mov
test
aas
push
mov
mov
rcll
setno
movsb
cmp
iret
and
mov
les
out
sbb
movb
dec
int3
clc
jecxz
mov
xor
add
and
int
mov
xchg
into
sarb
or
push
dec
fsubs
jbe
add
into
push
adc
popa
inc
daa
rcrb
stos
xchg
and
data16
jecxz
lret
mov
sbb
pop
cmc
pop
mov
pop
adc
cs
insl
fdivrs
gs
push
orb
pop
mov
leave
cmp
pusha
push
sbb
negb
pop
popf
jae
xor
insl
aam
pop
push
push
mov
rorb
dec
and
mov
sbb
not
pop
and
adc
sti
sbb
shll
inc
dec
sub
add
mov
add
and
lret
or
loop
push
scas
inc
mov
shlb
or
dec
icebp
cli
pop
mov
push
add
mov
xor
mov
and
cltd
push
popa
out
jg
dec
mov
cli
int
add
stos
xchg
and
push
subb
stc
test
mov
test
cltd
addr16
cli
pop
push
add
cmpxchg
arpl
sti
ds
cmc
pop
and
les
inc
das
inc
or
dec
das
cmp
adc
pop
pop
fimull
aaa
pop
jecxz
push
je
repnz
enter
imul
dec
nop
sub
int
jp
scas
add
jae
ljmp
ljmp
sbb
icebp
jmp
fistps
push
cmp
dec
dec
negb
ja
test
or
fwait
mov
popf
leave
fwait
dec
mov
gs
daa
aas
daa
fisttpll
mov
inc
ret
test
sbb
bound
xchg
loop
jp
mov
and
in
repnz
bound
shlb
sub
fldl
dec
xor
jne
leave
ret
inc
fdivrs
test
inc
and
jecxz
shlb
jmp
outsb
lods
push
push
push
inc
orl
rcrl
inc
pop
js
rorb
cmpsb
sub
sub
xchg
push
popl
fmuls
sub
lahf
das
mov
lock
mov
addr16
dec
cmp
fdivrl
dec
imul
jnp
mov
dec
popf
dec
lods
fsubs
das
loopne
xchg
loope
mov
mov
mov
sbb
mov
mov
nop
or
int3
inc
aam
dec
repz
sbb
inc
js
rcl
into
sub
xor
sahf
cli
pop
mov
test
lods
xchg
push
add
icebp
int
jae
stc
in
imul
cmp
mov
pop
fcmovb
jg
lods
jge
fistl
subl
inc
push
and
mov
rcr
mov
xor
ret
or
mov
repnz
push
ds
scas
xchg
mov
adc
or
ja
pop
gs
or
lcall
iret
jmp
gs
mov
mov
sahf
jns
push
push
arpl
and
mov
arpl
nop
lcall
sbb
cltd
inc
cld
loopne
dec
mov
dec
mov
js
cwtl
fadds
pushw
and
cwtl
insl
icebp
shl
int
repz
jle
in
sbb
fmull
or
icebp
jg
sbb
cmp
add
pop
ret
or
sub
push
ss
cltd
insl
stos
inc
push
nop
lock
cld
stos
ljmp
xor
xor
sti
push
roll
popf
clc
out
jecxz
xlat
fsubrs
xchg
and
xor
test
shll
sub
jge
je
shll
in
dec
aaa
scas
pop
lcall
mov
into
mov
pop
mov
das
pop
mov
add
pop
push
xchg
out
and
fisttps
cs
add
mov
repz
jl
dec
jae
jne
cmp
push
mov
sti
jl
out
inc
inc
and
test
sub
xor
jne
icebp
lcall
xchg
mov
sbb
rorb
mov
cmp
or
popa
cmp
mov
inc
xorl
adc
pop
mov
jge
push
call
cmp
jne
sbb
inc
mov
outsl
xchg
mov
arpl
pop
pop
fcoms
jge
push
fldl
hlt
pop
sbb
sub
pop
arpl
xor
outsl
dec
mov
or
add
lcall
sub
test
adc
or
das
pushf
jg
lds
add
mov
insb
add
push
movsl
xchg
loopne
mov
imul
test
xor
cmc
cmp
pop
mov
jg
hlt
popa
dec
rorb
int3
rol
jmp
xchg
outsl
add
mov
push
ret
adcl
fmul
add
jnp
aad
jle
pop
push
bound
xor
mov
dec
mov
xchg
jge
add
nop
mov
dec
lods
pop
mov
jecxz
adc
shrb
nop
xchg
xchg
shlb
jp
das
shr
in
lds
pop
outsl
add
in
mov
xchg
sub
mov
das
mov
or
fidivrl
jb
or
dec
add
mov
mov
dec
jno
sub
mov
pop
daa
xchg
shlb
ljmp
and
cmpsb
sbb
jle
inc
pop
xchg
inc
shl
xor
mov
mov
adc
jp
sahf
gs
jmp
mov
mov
testl
adc
push
repnz
xchg
push
movsb
and
and
mov
sub
dec
fsubs
sti
mov
mov
test
mov
xor
add
inc
outsl
mov
adc
add
repnz
jl
jg
mov
loope
dec
ljmp
inc
lahf
push
push
int3
aas
xlat
sub
imul
xchg
out
in
pop
mov
icebp
lcall
and
xchg
or
jne
pop
stos
test
push
sbb
and
xchg
clc
or
decb
push
mov
rolb
ljmpw
sti
jl
and
dec
jle
fbstp
mov
cli
xchg
mov
sbb
xchg
and
push
pop
sbb
std
lods
fisubrl
pop
sbb
pop
cmp
push
fimull
pop
aas
cmp
pop
mov
xchg
insl
mov
jmp
fs
or
adc
popf
push
inc
mov
and
out
jmp
or
add
sbb
aas
adc
and
ljmp
xlat
pop
lock
enter
divb
pushf
mov
xchg
add
lods
jmp
fdiv
loope
push
lret
lods
ja
outsl
shl
xchg
mov
aad
adc
inc
stc
push
mov
mov
jg
cltd
pop
insl
std
pop
or
adc
mov
loop
arpl
ss
inc
stos
cmp
repnz
lock
jo
push
aad
inc
fs
out
popa
cwtl
stos
test
cmp
inc
cmp
mov
roll
push
jno
mov
faddp
scas
push
pop
daa
pop
jns
mov
incb
mov
cmpsl
insl
or
repnz
sti
daa
push
mov
or
ret
mov
lock
test
sub
sbb
faddl
stc
es
mov
cwtl
movsl
cmp
int3
fnsave
push
push
repz
mov
ljmp
sub
xor
mov
adc
scas
popf
adc
xor
divb
mov
add
add
xchg
push
cs
push
rorl
push
cmc
jbe
pop
adc
cmp
shlb
notb
xor
jge
push
scas
outsb
xchg
scas
stc
inc
jecxz
ret
jmp
jnp
mov
sub
std
xchg
push
in
pop
sbb
cmc
jne
ficomps
xchg
mov
xchg
jmp
loopne
int3
fnsave
dec
add
repz
stos
scas
lea
cmp
cmc
cmp
or
cltd
sbb
pusha
or
cltd
push
cmc
call
xchg
xor
cmp
inc
push
pusha
and
xor
push
cmc
jb
mov
scas
std
add
pop
cmpsb
cmpsl
sbb
test
add
xchg
subb
js
cmp
sbbl
dec
jp
pop
les
xchg
in
or
lsl
jmp
push
test
in
aaa
aam
mov
adc
lods
les
mov
outsl
rcrl
je
loop
jno
adc
out
aaa
movsl
push
adc
nop
fwait
adc
fstl
into
iret
js
loopne
sti
pop
daa
lea
fwait
mov
adc
sub
pop
popf
xchg
xor
popl
stos
adc
icebp
insb
sarb
fdivl
ss
movsl
std
xchg
lds
dec
push
jle
stc
repnz
pop
loop
fldcw
add
data16
addr16
push
aam
jno
sbb
cmc
mov
shll
lods
xchg
inc
mov
mov
mov
imul
rol
out
je
mov
xorb
imul
inc
rcrl
out
adc
inc
xor
sahf
outsl
sbb
fcomps
paddd
or
loope
cmp
cmc
lea
mov
lock
cltd
dec
js
inc
mov
pop
and
push
xchg
and
jge
push
xorb
pop
in
movsb
jnp
ja
js
pop
jnp
aas
pop
in
and
dec
lods
mov
inc
cld
xor
and
daa
lahf
inc
outsl
adc
dec
jo
rol
pusha
dec
cmpsl
daa
or
mov
mov
jmp
adc
jg
cmp
jl
test
xchg
arpl
test
jns
std
inc
jne
arpl
xchg
hlt
inc
sbb
hlt
pop
mov
pop
lcall
sahf
or
xchg
sub
adc
mov
jmp
lds
in
stc
xchg
pop
mov
xor
mov
add
cmpsl
inc
sahf
mov
and
fmuls
push
sbb
sbb
jge
jne
dec
sbb
inc
bound
stos
enter
dec
xchg
int3
cmp
aad
out
fisubl
jle
xchg
xchg
das
push
pop
dec
movsl
sub
add
insl
ret
not
imul
cmp
ljmp
inc
dec
into
rcrb
sbb
jnp
movb
cmc
mov
sub
sub
sbb
mov
cmpsl
inc
arpl
popa
fwait
movsb
jns
lock
enter
int
cmp
inc
adcb
mov
add
adc
jecxz
es
iret
rcrb
notb
jmp
xchg
fildl
jecxz
mov
or
xor
in
test
xor
xchg
daa
ret
xor
push
and
sbb
cmp
and
adc
test
mov
popf
rorb
loope
or
jno
fucomi
pop
jne
iret
mov
scas
mov
loope
call
lods
sbb
sti
pop
sbbb
out
out
mov
xchg
ret
loope
jo
pop
pop
sbb
or
jg
in
pusha
in
sbb
stc
cli
pop
jle
jo
repz
test
cmp
addb
or
cmpsl
xchg
fldenv
fistl
jo
jne
pop
subb
mov
lahf
xchg
in
xlat
aaa
xchg
fstp
test
cmp
std
add
push
xor
sub
pop
fs
mov
cld
jne
dec
lods
sarl
xchg
ss
dec
jecxz
add
in
pop
xchg
das
ret
mov
sbb
sti
fadds
cmp
cmpsb
xchg
fs
jno
xchg
mov
popa
mov
pop
sar
or
or
ja
cmp
ret
or
sti
fisttpl
sbb
lea
xchg
xorb
push
inc
and
shl
jb
jg
cmp
popa
repz
mov
push
push
dec
adc
dec
or
push
lods
ret
loopne
xlat
mov
cwtl
vzeroall
fs
dec
jp
push
xchg
cmp
leave
hlt
arpl
fwait
cmp
faddl
dec
or
cld
dec
clc
cmp
mov
push
mov
lahf
iret
stc
xlat
loop
ret
stc
xchg
scas
cld
cmp
cmp
mov
es
js
or
scas
inc
xchg
sub
insb
push
fnstsw
adc
rep
sar
add
iret
arpl
dec
gs
jnp
enter
pop
or
xchg
filds
push
dec
icebp
ljmp
push
sub
and
cmpl
add
jl
add
add
cmpsb
and
repnz
or
mov
jb
sbb
jg
cmp
fwait
or
mov
ja
xor
pop
cltd
sbb
cs
mov
xor
jg
mov
in
sub
push
pop
push
mov
inc
push
js
xchg
cltd
in
add
fsts
cmp
mov
aaa
jb
arpl
std
jb
pop
mov
cmpsl
icebp
mov
sbb
pusha
cmpb
adc
ss
stc
add
data16
enter
mov
xor
pop
sbb
loope
mov
adc
sbbl
ss
and
inc
stos
mov
loop
cmp
hlt
sub
dec
and
imul
mov
jg
ja
mov
adc
aam
stos
sbb
mov
cmp
scas
test
repz
lds
or
add
insl
push
addl
stos
push
or
lea
jl
or
jo
push
stos
ss
add
out
lcall
daa
inc
add
sub
and
sub
aad
pop
mov
and
in
jl
out
adc
mov
shll
or
cli
fdiv
or
or
int
fwait
xlat
sub
cs
mov
mov
pop
les
xchg
and
push
push
mov
dec
mov
mov
test
ret
adc
mov
inc
gs
out
loop
data16
xor
mov
stos
sub
nop
pop
pushf
mov
outsb
xor
test
inc
sub
fisttps
adc
sti
xchg
mov
xchg
mov
sbb
jl
mov
ljmp
scas
int3
outsb
pop
fwait
test
cmpsl
and
push
icebp
mov
aad
out
push
mov
sbb
pop
cmp
sbb
mov
insl
xchg
jo
outsb
inc
sahf
add
in
insb
push
aaa
sub
les
pop
mov
push
push
mov
nop
inc
cmp
xchg
dec
push
mov
push
add
push
in
call
out
aas
int
stc
notl
test
mov
jb
add
push
adc
push
xchg
push
xchg
lods
leave
xchg
clc
inc
mov
xchg
push
sbb
aaa
jmp
and
and
je
cwtl
inc
mov
xchg
mov
into
dec
cmp
sbb
fs
mov
notb
leave
pusha
gs
movsl
aas
mov
in
pop
xlat
repnz
cld
cmpxchg8b
loope
sub
nop
adc
stc
jle
cmp
jbe
aaa
mov
lea
and
inc
pcmpgtd
pop
repnz
shlb
sub
xor
je
dec
mov
out
std
pop
inc
outsl
andl
outsb
dec
in
add
outsl
xor
adc
inc
pop
and
lea
xchg
sbb
push
push
popf
dec
clc
lock
pop
jge
pop
into
ret
test
push
in
sahf
xchg
sbb
mov
adc
mov
ret
mov
fcmovb
mov
or
loope
xlat
jecxz
mov
call
int3
fs
mov
popa
cld
push
sbb
push
test
movsl
rol
push
lea
sbb
cmp
mov
add
sub
dec
xchg
cmp
repnz
adc
mov
push
sti
imull
xchg
xchg
sub
nop
mov
pop
add
aas
push
or
dec
lret
mov
adc
ss
adc
icebp
pop
std
mov
push
sub
mov
mov
mov
inc
rcrb
movsb
rcrb
clc
and
sbb
ljmp
mov
push
add
push
rolb
mov
pop
sub
div
pop
fcoms
mov
sub
lock
shll
sub
add
test
daa
mov
mov
sub
cmp
or
xor
push
test
imul
out
and
xchg
cmpsb
loop
rcll
xchg
insl
pop
out
or
in
nop
mov
lcall
pusha
call
bswap
scas
cmp
movsl
divl
push
lea
sbb
jno
xor
sub
rorl
push
or
int3
xchg
ljmp
adc
cltd
sbb
sar
dec
in
fistps
cmp
icebp
into
stc
cmc
pop
std
sbb
ljmp
push
and
cld
in
ficoml
sub
aam
pop
fcmovnu
and
or
mov
mov
aaa
xor
xchg
cwtl
iret
hlt
mov
adc
sbb
sbb
fwait
jnp
int3
jg
adc
xchg
sub
lods
in
add
bound
ret
mov
mov
pusha
pop
test
bswap
dec
out
pop
test
jno
shll
sbb
xor
hlt
lock
xor
popa
shl
push
xor
and
mov
sub
jbe
mov
inc
sbb
lea
jbe
cmp
inc
ret
cmpb
sahf
fidivl
out
cmp
mov
xchg
sbb
mov
push
jle
mov
sub
inc
outsl
and
add
ljmp
inc
inc
dec
imulb
mov
pop
subb
test
aas
add
lret
imul
add
fsave
icebp
pop
push
sti
adc
and
inc
test
mov
test
or
pusha
ja
pushf
or
movsb
ja
leave
xchg
push
dec
mov
mov
inc
mov
dec
push
test
pop
dec
or
pushf
out
test
mov
sbb
push
xchg
adc
mov
pop
push
mov
je
and
pop
xchg
nop
or
pop
fisttpl
mull
lods
mov
and
out
stc
jp
lods
pop
jb
lea
shrl
fidivl
adc
or
addr16
pop
jmp
jg
daa
mulb
and
mov
call
insb
pop
fcomps
lods
mov
xor
out
test
xor
or
in
mov
filds
push
push
jmp
xor
or
popa
decb
push
cltd
mov
ss
lahf
sti
xor
or
call
sub
jecxz
int
and
xchg
inc
cmpsb
lret
xchg
pop
out
adc
test
data16
iret
imul
out
pop
or
roll
mov
or
and
fistpll
sbb
jmp
xchg
aas
mov
frstor
cs
sbbb
pop
das
lock
out
aad
inc
cld
cmp
sbb
dec
adc
and
sub
xchg
dec
cli
xor
mov
jo
cmp
push
aas
and
sub
lds
jb
pop
push
rcl
ja
in
sarl
sub
mov
push
push
popf
dec
out
xchg
shl
js
out
fs
jb
inc
adc
xchg
pushf
lods
aaa
outsl
sbb
sub
or
mov
ret
outsl
cmp
inc
sbb
repnz
hlt
popa
mov
lds
xor
ficompl
shll
test
inc
popf
mov
jecxz
sub
test
icebp
mull
in
je
xor
add
mov
sbb
out
mov
nop
pop
cwtl
fiadds
cld
cmp
add
cmpsb
cmc
sub
es
enter
popf
cmp
pop
aaa
add
cmp
mov
cli
pop
mov
mov
nop
pop
or
dec
xchg
rcrb
stos
inc
pop
xchg
push
dec
cmp
mov
dec
nop
movsb
xor
mov
icebp
bt
sbb
das
and
add
or
or
aaa
shld
stos
je
pop
or
out
andl
mov
sub
lret
mov
sub
shrb
stos
mov
sub
jp
fcomps
sbb
push
js
inc
fwait
sub
inc
jmp
mov
dec
insb
insb
mov
jecxz
and
test
mov
mov
movsb
outsl
push
mov
aam
das
dec
jmp
movl
loop
mov
ljmp
nop
and
fs
sbb
pop
push
sbbb
mov
rcrb
dec
pop
jp
dec
xchg
xor
in
sarb
sbb
cmp
movsb
xlat
jg
mov
shr
leave
cld
ret
lret
aaa
fprem
call
mov
lods
sub
sbb
xchg
or
testl
and
dec
int
sbb
mov
xor
cmp
out
outsl
repz
test
scas
add
andb
in
lds
inc
cmp
mov
jg
fiadds
xchg
enter
sub
insb
jmp
jb
mov
sbb
fs
cmp
xor
loop
fistpl
fnstenv
adcb
sbb
sub
add
hlt
push
cltd
push
pop
sub
dec
outsl
jp
cltd
sub
outsl
sbb
nop
cmovbe
and
cmp
push
lea
insb
call
lock
adc
fcoml
cmpsb
push
std
sub
add
cmc
call
mov
mov
rcl
test
push
fisubs
cmpsl
push
out
inc
add
add
jne
dec
mov
mov
repnz
adc
sbb
fstpt
sbb
aam
popf
pop
sub
push
add
int
das
push
jmp
add
nop
xchg
leave
insb
sbb
adc
xchg
mov
lea
lds
mov
in
mov
mov
sahf
stos
hlt
hlt
jg
adc
push
jne
push
lret
dec
pop
push
add
bound
scas
call
pushf
add
xchg
xchg
aaa
andb
arpl
push
sub
sbb
std
ret
xchg
sub
popl
or
test
rcll
sbb
aam
insb
mov
pop
scas
fldl
jge
xchg
mov
into
xchg
mov
pusha
pusha
mov
dec
lea
and
sub
loopne
push
add
lret
mov
cmp
mov
daa
dec
xchg
push
shll
push
nopl
das
pop
lahf
int
jg
or
or
inc
pop
shrb
sahf
fldcw
xor
jle
aad
xor
pushl
stc
cwtl
or
orl
xchg
cld
daa
sbb
pop
sub
loope
insb
mov
xor
adc
sti
int3
pop
adc
mov
xchg
mov
xor
mov
push
jl
out
icebp
inc
fiaddl
loopne
mov
add
cltd
stc
movsb
and
inc
inc
cs
jg
sub
rcr
sarb
jg
inc
push
inc
xchg
cmp
mov
test
and
pop
dec
out
jbe
fmull
cli
loopne
mov
cmc
pushf
add
mov
xor
mov
dec
xor
movsb
jno
loopne
pop
popf
icebp
add
in
inc
rclb
ret
sbb
jle
and
cs
and
adc
dec
leave
cmc
and
loop
in
jb
or
enter
jp
clc
stc
and
fs
pop
gs
outsl
jge
sar
mov
mov
adc
mov
inc
sti
rolb
sbb
rcrl
aad
out
jbe
sub
push
orb
xchg
push
enter
popf
xchg
arpl
fcomi
sub
hlt
sbb
cmc
mov
ja
das
xor
je
mov
stos
in
xchg
repz
jbe
xor
addr16
aaa
adc
xchg
dec
add
xchg
int
inc
ljmp
inc
dec
ss
roll
jbe
xchg
sub
adc
or
and
mov
stos
inc
jge
adc
andl
rolb
movsb
push
fldlg2
addr16
dec
notl
std
and
testb
repz
imul
xchg
adc
out
daa
sub
repz
jb
inc
stos
mov
dec
das
push
adc
push
sbb
fs
icebp
xchg
fnsave
mov
xor
mov
pop
scas
push
dec
lods
pop
pop
bound
dec
dec
enter
int3
or
lods
push
inc
push
popa
testb
pop
jnp
fucomi
lret
lea
mov
sub
jnp
sbb
xchg
and
andb
mov
flds
std
sub
outsl
mov
and
and
imul
test
lcall
stos
mov
and
hlt
xchg
into
out
sarl
pop
cmp
xchg
pop
inc
push
jbe
dec
in
stos
pop
and
jg
jbe,pn
rol
and
dec
icebp
inc
pop
push
std
imul
cmpb
push
outsl
jae
pop
imul
fiadds
push
xchg
xor
mov
lcall
xchg
sbb
jmp
xchg
add
add
cmpsl
orb
sbb
in
pop
cmp
sbb
dec
jbe
sub
dec
sub
into
std
js
lods
nop
lahf
mov
testb
popa
cmc
sub
shr
ret
jbe
pusha
mov
adc
daa
lret
out
ret
xor
xor
stc
fldcw
mov
sbb
testl
fistpl
adc
pop
cmp
mov
mov
sahf
inc
int3
call
or
or
xchg
stos
je
in
mov
aaa
fldcw
jle
pop
out
bound
push
adcl
leave
xlat
mov
jge
mov
sahf
dec
push
mov
stos
into
ret
push
jno
aaa
in
mov
lock
adc
dec
xlat
testl
push
pushf
sbb
in
sbb
pop
dec
push
mov
adc
lcall
movsl
xor
popa
lcall
ficoms
lret
pop
cli
dec
fcmovne
pusha
lcall
xlat
mov
dec
sbb
mov
dec
xchg
mov
mov
xor
push
xchg
fdivs
mov
call
sbb
fidivrs
dec
lods
pop
lcall
cmpsl
loope
mov
pop
popf
mov
mov
jmp
add
aad
adc
add
push
pop
inc
pop
adc
jo
add
sub
lock
sar
repz
mov
xor
sbb
xor
adc
xchg
fadd
das
push
or
outsl
pop
and
push
jb
pusha
xor
js
cmpl
jne
addr16
and
jle
jle
mov
cmpb
or
stos
mov
sbb
xor
movsl
xorl
fadds
cmp
adc
fwait
dec
fwait
cmp
bound
cmp
stc
insl
inc
movsb
or
das
inc
jns
pop
add
nop
movl
pop
mov
stos
notl
push
imul
sbb
movb
insl
in
rcrl
fcom
in
pop
xchg
push
sbb
jo
out
lds
mov
mov
fldt
enter
insb
int3
scas
push
je
loop
mov
repz
mov
rolb
xchg
fcomi
dec
aad
mov
stc
jle
scas
data16
and
sti
mov
shl
shrb
aas
rcrl
movb
inc
popf
outsl
xchg
or
xchg
enter
out
enter
inc
mov
ret
cmpsl
jp
popa
popa
stos
add
xor
mov
sub
cmp
sbb
aaa
and
in
sbb
inc
pop
negl
xchg
lahf
je
dec
insl
mov
xchg
test
stos
mov
mov
or
or
pushw
push
call
aad
aas
xchg
and
adc
adc
subb
add
adc
push
inc
pop
push
pop
mov
pop
ds
sbb
pop
jp
stos
and
jmp
adc
in
fwait
ficomps
xor
loope
xor
or
and
cs
add
xlat
repnz
aam
sbb
fsubl
inc
adc
cmp
scas
es
jecxz
push
test
and
leave
cmp
pop
iret
inc
mov
inc
sbb
xchg
dec
in
roll
dec
enter
xchg
add
mov
jb
inc
jo
hlt
inc
ds
adc
fildll
leave
fs
xor
or
add
push
jae
out
lcall
sahf
inc
js
inc
sarb
jo
adc
insl
mov
push
mov
fisttps
inc
and
roll
and
arpl
dec
ficoms
or
test
lcall
dec
xchg
les
sbb
out
mov
pop
pop
shl
mov
mov
mov
inc
xchg
mov
push
ds
cld
pop
mov
jno
mul
jp
aad
mov
mov
push
pop
push
dec
clc
icebp
xchg
sub
sub
push
fcoms
call
rclb
sub
dec
test
aam
jle
pop
insb
cmpsb
mov
daa
pusha
sarb
pop
outsb
sbb
mov
fsubr
insb
dec
rcll
subb
mov
mov
int3
insb
xchg
push
sub
fistl
xchg
push
les
das
or
inc
xor
jne
out
xor
mov
push
sbb
in
adc
jecxz
dec
jne
mov
push
or
push
int
mov
or
mov
cmp
inc
popf
xchg
jg
mov
fildl
cltd
push
jecxz
xchg
jno
jne
mov
sti
cmp
fdiv
lods
cmc
cmp
lds
fldcw
cmc
scas
enter
or
xlat
mov
pop
fnsave
aaa
fstpl
data16
push
in
fidivrl
push
test
imul
loopne
lods
cli
jne
sub
push
cmc
outsb
push
mov
cld
popa
fildl
movsl
mov
shll
insl
add
mov
scas
adcl
rolb
add
xor
hlt
loope
stos
aaa
fisubrl
jb
cmp
aas
arpl
imul
andb
es
or
mov
pop
stos
push
pop
lea
sbb
dec
fcmovu
loope
adc
ret
and
sahf
das
sbb
jno
les
daa
es
fs
mov
and
or
dec
inc
pop
outsl
inc
icebp
push
rolb
pop
push
lods
pop
mov
test
lock
cltd
sub
fs
or
in
rcl
sbb
inc
in
addr16
movsl
fimull
mov
mov
out
mov
outsl
cmc
cltd
loopne
dec
mul
push
fs
adc
ret
pop
fistpll
and
dec
les
add
ss
pusha
adc
inc
mov
jmp
cmp
mov
mov
stos
fidivrs
inc
repnz
xor
cmp
or
add
cli
mov
dec
inc
push
and
in
insl
or
cli
or
push
mov
mov
outsl
aas
jmp
jbe
ja
fs
ret
test
pop
daa
inc
xchg
rcl
sub
repz
loope
lahf
add
push
in
fsts
push
pop
lock
xor
scas
or
sbb
mov
inc
jmp
fsubrs
jno
sbbb
cmpsl
jno
mov
inc
dec
lods
jmp
hlt
daa
mov
pop
lds
jmp
adcb
test
or
pop
xchg
into
sub
inc
repnz
dec
lea
jmp
and
jecxz
push
mov
stos
pop
pop
cmp
xchg
push
jns
xor
lcall
insb
sub
std
out
repz
jl
sbb
std
aam
lret
cmpsl
sub
push
icebp
xchg
mov
cld
ret
fs
cld
shrb
rcll
ja
mov
jecxz
dec
pop
add
mov
insb
out
inc
xchg
xchg
add
in
test
add
pusha
repz
lret
js
pop
cmp
jae
inc
jge,pn
or
cltd
seto
xor
mov
outsb
mov
push
insl
lahf
add
mov
mov
je
push
mov
add
test
test
mul
sbb
mov
sbb
pop
out
sbb
aas
cmp
cmp
dec
outsb
inc
in
dec
loope
addr16
push
xchg
roll
mov
mov
cltd
mov
add
adc
cmovle
push
iret
rcrb
aaa
mov
adc
testb
mov
stos
cmp
call
mov
inc
push
sbb
int
xchg
stc
imul
popa
lret
mov
jno
pop
aaa
mov
fwait
push
xor
xlat
mov
in
mov
lock
pop
and
adc
cltd
mov
loop
and
aaa
shlb
popf
icebp
dec
sbb
scas
pop
lahf
imul
cmp
test
mov
push
xor
adc
sahf
inc
push
mov
xlat
popa
dec
lock
or
add
cmp
or
popa
push
stos
jecxz
xchg
dec
push
pop
popf
and
sub
outsb
stos
loopne
cmc
cmp
dec
dec
pusha
pop
inc
hlt
stos
fistpll
insl
jne
ret
sub
mov
push
inc
or
mov
sbb
add
xchg
data16
pusha
test
jae
cmp
das
xchg
insl
in
xchg
sbb
rcl
xchg
and
sahf
rorl
js
mulb
mov
sti
insl
push
and
cmpsl
loopne
xor
push
imul
outsb
sbb
gs
xchg
xor
add
cltd
jae
rorl
enter
add
cltd
testl
and
daa
pop
gs
mov
bound
testl
shlb
jbe
fucomp
mov
clc
jnp
icebp
ret
or
push
xor
or
lods
movsb
cli
jg
repnz
sbb
daa
mov
je
movsl
cs
in
jg
js
mov
les
js
aaa
mov
ljmp
jge
pop
mov
data16
pop
add
push
in
xchg
add
movsb
test
out
shl
cmp
addl
jnp
add
mov
mov
mov
leave
daa
enter
stos
adc
cli
xor
int
jno
ds
icebp
mov
addr16
and
sub
xchg
xor
jmp
adc
lods
sub
pop
rorb
icebp
fwait
xor
mov
das
and
cli
leave
cmpsb
jmp
xchg
and
popl
sbb
pop
or
daa
jae
xchg
dec
jp
ret
ret
popf
mov
adc
pop
addl
popf
lret
gs
mov
rcrb
lea
in
pop
mov
out
mov
mov
ret
lahf
out
aas
mov
addr16
ljmp
shrl
icebp
enter
call
fldl
repnz
imul
loopne
sti
fcompp
imul
push
ret
inc
adc
stos
and
les
inc
or
imul
and
mov
pop
dec
mov
je
sti
inc
jae
xor
mov
aas
out
mov
pop
xchg
sub
lcall
std
adc
js
xor
stos
jecxz
pop
sahf
cltd
lahf
cmp
jge
xchg
pop
aaa
subb
pop
pushf
rclb
adc
mov
dec
test
cltd
movsl
lret
jne
adc
and
push
lods
xor
dec
fistl
jno
shlb
jo
jmp
push
inc
jecxz
adcl
ljmp
pop
cmpsl
addl
hlt
or
inc
xor
sbb
mov
adc
jb
add
push
sub
pop
xchg
test
push
shlb
dec
divb
cld
add
cld
cmp
out
pslld
cli
je
adc
mov
aas
mov
mul
jl
mov
and
std
dec
dec
aad
incl
pop
aad
cld
test
fidivl
push
inc
lahf
mov
cld
and
sbb
or
push
stos
mov
sbb
push
data16
stos
loope
jmp
adc
mov
dec
jge
cmp
lahf
sbb
mov
lret
jp
rcrb
int3
lcall
xchg
cli
or
and
addr16
lcall
mov
jno
fxch
or
inc
ficompl
fbstp
jo
imul
out
mov
cmpsl
leave
jbe
iret
sbb
cld
scas
xorb
int
mov
cmc
scas
mov
into
test
popf
adc
pop
imul
push
scas
push
pop
jb
cltd
mov
mov
cmp
jae
add
test
scas
and
fisttpl
aas
jle
jmp
mov
ret
add
lahf
out
xlat
ret
rorb
adc
faddl
mov
inc
pop
mov
pop
and
xor
jl
mov
dec
sbb
loopne
sub
je
mov
lods
in
imul
xor
and
adc
adc
push
jle
xchg
inc
push
inc
or
std
jle
inc
stc
sbb
push
fcoms
addr16
push
dec
add
push
push
mov
cmp
loope
inc
daa
mov
add
test
push
aaa
test
add
lock
mov
jbe
arpl
fistl
inc
push
stc
inc
dec
int3
pop
xor
rolb
or
ds
pushf
lret
mov
lret
cld
imul
xchg
add
cwtl
dec
push
cmp
jno
push
xor
dec
push
int
or
loope
mov
out
into
addr16
mov
pop
push
mov
pop
jp
dec
push
lret
xchg
mov
cmp
push
lahf
pop
cmc
loope
cmp
lea
adc
sub
scas
jb
push
and
scas
adc
cs
adc
and
jne
push
cli
cmc
pop
ror
cmp
aas
insb
xor
in
lret
push
push
and
pop
mov
testl
daa
js
pop
iret
lods
dec
mov
push
cmpsl
out
push
pusha
sub
mov
popa
outsb
int
mov
imul
xchg
scas
or
push
xchg
inc
jne
scas
dec
aad
not
scas
roll
xor
cmp
call
lods
pop
jmp
sub
shlb
out
dec
push
lods
lea
or
or
ss
cmp
lds
cmpsl
mov
xorl
sbb
mov
sbb
pop
scas
fs
movsb
clc
push
fnstsw
jo
imul
out
dec
mov
mov
sahf
sbb
add
fnstcw
pop
xor
stos
jecxz
mov
dec
mov
ror
xor
cltd
lahf
cmc
jmp
fwait
stos
mov
out
enter
mov
mov
out
or
cld
test
jecxz
mov
and
fmull
clc
into
lea
mov
mov
mov
cmp
jbe
and
jae
xor
pop
aam
jmpw
mov
addr16
sarb
call
int
loop
pop
das
hlt
pop
mov
push
fsts
sarb
pop
inc
xorb
or
add
out
push
sub
push
je
xor
and
dec
sub
sub
lahf
fdiv
stos
lods
repz
in
insl
loop
mov
aam
push
inc
sub
fsubs
xchg
add
popa
shll
push
in
and
mov
jg
ret
adc
das
and
outsb
inc
or
sti
mov
jne
lahf
or
jmp
in
aas
popf
out
test
dec
xchg
push
xchg
sub
jle
movsb
push
sbb
sbb
loopne
sub
push
outsb
pop
add
or
jb
mov
mov
dec
pop
xchg
cmpsb
push
jge
mov
and
pop
divl
out
push
movsl
lods
add
out
into
mov
cmc
ds
scas
push
sub
xor
in
shlb
mov
outsl
jb
pop
mov
dec
fwait
stos
adc
cmc
fwait
sti
dec
in
aaa
or
jge
sub
stos
cmp
xlat
dec
fwait
les
pushf
test
push
fldt
pop
shll
rcll
js
mov
mov
wbinvd
dec
dec
mov
subb
lock
cmp
adc
stos
xchg
cmp
repnz
push
add
hlt
movzwl
sub
std
cmc
outsb
je
imull
mov
mov
mov
scas
cmc
inc
cmp
sbb
push
sbb
out
add
cmp
push
xor
xchg
sbb
and
adc
xchg
dec
bound
lret
cmpl
push
pop
in
scas
into
in
mov
push
lret
cmp
lahf
sarl
arpl
loope
in
cmp
jns
or
std
sbb
jl
jg
jg
scas
inc
adc
and
mov
add
ror
aad
mov
and
dec
sub
pop
dec
mov
mov
xlat
xor
cmp
gs
mov
sub
cs
push
mov
sub
cs
movl
lods
xchg
mov
popa
out
aad
push
shll
sbb
xor
or
xor
push
push
pop
cmp
jmp
xchg
cmc
push
lcall
adc
fisubrs
sbb
sbb
arpl
jle
scas
pop
push
stos
aaa
mov
adc
jmp
gs
pop
add
cld
lods
ss
shll
mov
cmpsb
jne
pop
cli
clc
and
xchg
dec
jecxz
cs
lock
scas
or
insl
cmpsl
xchg
adcb
or
sbb
xor
xor
arpl
jl
lods
mov
inc
mov
mov
add
pop
add
daa
pushf
enter
jnp
aad
fld
adc
push
in
jge
xchg
enter
mov
pop
mov
cmp
lret
add
adc
push
xor
fsubs
sub
mov
pop
mov
das
push
or
cmp
cmpsb
aam
repnz
gs
data16
insb
xchg
sahf
mov
fs
sub
shlb
pop
push
jecxz
lret
lock
add
push
mov
bound
add
pop
call
int3
outsb
mov
jp
cmc
xlat
add
insb
push
xor
cmp
es
imul
sub
lret
clc
shll
insb
cmp
xor
imul
mov
and
inc
arpl
adcl
xor
inc
and
adcb
lock
sub
sbb
cmp
lds
jmp
int
jp
pop
inc
add
push
inc
mov
scas
cmpsb
test
fwait
lods
movsb
add
js
mov
ds
out
cli
push
ja
jge
sbb
or
xor
sub
leave
cmpsl
sbb
sub
subb
inc
push
or
push
mov
xchg
cltd
lods
sbb
lds
cli
mov
jecxz
push
sub
imul
pop
fwait
jnp
mov
pmulhuw
jge
sbb
loop
jb
das
lea
jns
mov
clc
in
idivb
imull
into
bound
and
es
cmp
ret
inc
iret
movsb
int
inc
es
mov
lock
and
and
mov
mov
mov
xor
pop
fstl
lock
out
dec
dec
ror
dec
jg
xchg
fwait
dec
test
dec
cwtl
lret
sub
sub
in
pushl
stc
test
cmp
add
testb
pop
mov
idivb
xor
lds
xlat
test
inc
push
sbbl
dec
pop
mov
push
hlt
andb
jl
cmp
push
pusha
sbbl
rclb
lret
ss
adc
popf
popa
test
xchg
sub
movsb
les
mov
xlat
xor
dec
out
and
mulb
pusha
ret
stos
rcrb
fiaddl
sub
and
or
out
lock
sti
jmp
hlt
fistl
pop
cmp
mov
sbb
fisubrl
cmpsl
aad
xor
add
mov
inc
sbb
test
jnp
jge
aaa
fwait
iret
pop
add
pop
xor
sbb
enter
xchg
lret
loop
jne
jnp
outsl
mov
xchg
xor
and
es
adc
mov
addr16
add
push
std
sti
clc
adc
and
roll
pushf
mov
xchg
jb
daa
das
and
ds
mov
sbb
inc
sahf
pop
outsb
mov
dec
xchg
mov
pop
movsl
pop
or
ja,pn
mov
mov
adc
and
mov
in
push
dec
pusha
ds
xor
pusha
mov
sub
inc
mov
out
push
xchg
ds
xor
dec
push
bound
enter
out
xor
mov
mov
inc
sbb
pusha
ds
call
je
xor
or
call
in
or
int3
fisubrl
out
les
push
mov
pop
outsb
inc
nop
or
mov
or
stc
mov
pusha
das
mov
dec
inc
fisttps
sbb
inc
mov
mov
add
inc
mov
dec
pop
lret
popf
cld
sbb
xchg
fsubs
mov
orl
mov
jnp
push
xor
adcl
aam
call
push
mov
sub
push
pop
jge
mov
inc
and
ljmp
scas
add
xchg
xchg
out
inc
sub
push
push
cmp
and
js
orl
ficomps
sub
cs
mov
inc
test
add
imul
stos
out
mov
fdivs
mov
clc
test
dec
loopne
pop
mulb
out
stos
jmp
xchg
aas
in
in
pusha
and
or
mov
dec
std
push
insl
stc
ss
lock
or
dec
mov
iret
addr16
sbb
push
std
sub
jecxz
add
pop
fdivrs
mov
push
sub
pop
jb
scas
mov
stos
lock
das
test
mov
mov
jne
fbld
ror
dec
mov
dec
psadbw
repnz
pop
jno
sbbl
lahf
bound
xor
inc
sub
xchg
ds
scas
decl
pop
push
inc
sub
int
push
mov
lea
mov
mov
add
jo
pop
dec
movsb
out
out
dec
and
in
shll
sub
movsb
imul
loopne
andb
cwtl
cmp
lods
push
loop
fidivl
xchg
int
mov
mov
or
cmp
outsl
mov
aad
pusha
sbb
cmpsl
adcb
and
outsl
dec
sub
jl
jmp
nop
mov
test
out
pop
mov
js
sub
test
insl
sub
jmp
in
jp
call
fnstenv
and
out
hlt
push
xor
int3
xor
stos
dec
insl
jns
daa
mov
scas
or
aam
mov
sbb
jns
dec
cmp
xchg
rclb
lock
mov
pusha
test
sbb
adc
bound
mov
les
sub
addr16
pop
mov
test
icebp
in
xor
xchg
push
sub
add
or
cmp
mov
jo
xor
push
jnp
shl
pusha
pop
inc
enter
add
xchg
rcrb
xorb
xor
mov
call
in
inc
in
loopne
hlt
jb
scas
je
dec
dec
mov
cltd
popa
jae
stos
test
dec
adcl
or
outsl
dec
xchg
cmp
addr16
fidivl
dec
pop
pop
cwtl
and
or
into
inc
cmp
pusha
mov
fwait
test
or
lods
nop
xor
dec
outsl
scas
pop
cmp
fwait
sub
inc
adc
mov
inc
mov
in
ret
dec
xor
sahf
enter
and
dec
mull
push
pop
cli
cli
cld
xchg
test
push
je
enter
lcall
bound
adc
jl
jl
mov
icebp
and
shrb
xchg
bound
xchg
sbbb
and
adc
push
cmpsb
adc
mov
sahf
add
dec
push
push
je
push
ds
xlat
bound
cltd
inc
or
or
ret
cltd
test
jge
mov
pop
push
dec
sbb
xchg
sbb
fldenv
mov
jg
rolb
adc
movsb
test
pop
inc
ja
ja
jmp
sbb
inc
add
push
add
sub
adc
inc
loope
rcr
mov
out
or
push
hlt
cltd
inc
loopne
push
pop
sbb
xchg
mov
aaa
mov
cld
adc
mov
adcl
dec
dec
pop
or
or
mov
and
push
int3
jo
sub
xchg
lea
push
insl
in
xlat
ljmp
int3
test
mov
xchg
cmp
and
sub
mov
sub
jecxz
aad
scas
test
fidivrl
mov
lret
cmp
inc
nop
inc
xchg
js
add
iret
rorb
cmp
cltd
lods
xor
imul
subb
pop
and
sub
jbe
cmp
insl
pop
inc
jne
pop
cmp
insl
push
sub
cld
or
cltd
test
pop
mov
mov
cmp
jl
and
clc
pop
dec
dec
scas
xchg
push
or
inc
nop
ret
or
movsb
or
sbb
inc
loope
sub
mov
stc
faddl
and
divl
sbb
pop
orl
push
sti
pop
shll
adc
scas
ljmp
jb
xchg
sub
xchg
dec
ss
jns
pop
mov
lret
or
sbbb
adc
orl
mov
inc
shrl
mov
adc
sbb
jnp
inc
xor
incb
xchg
pusha
jl
in
push
adc
sbb
ss
cld
mov
mov
and
in
hlt
jae
lods
mov
xor
push
imul
stc
push
add
mov
mov
ja
insl
pop
mov
cltd
mov
jnp
call
pop
enter
clc
out
mov
es
mov
ljmp
in
cwtl
xor
loope
dec
add
ret
out
push
push
mov
jle
inc
mov
xchg
imulb
inc
pusha
enter
stos
das
in
sub
or
insl
mov
test
int3
push
insb
and
xchg
fs
pop
les
testb
sub
shlb
xor
sbb
xchg
dec
jl
movsb
fs
mov
fcoml
leave
cltd
push
arpl
and
repnz
fildll
inc
and
into
mov
inc
push
pop
lods
add
popa
mov
cmp
cmp
sub
fsubl
pushf
mov
rcr
cmp
ss
ret
lods
jge
fisttpll
add
cltd
cld
mov
ret
inc
dec
shr
and
lea
cmp
jnp
push
pop
cmpsl
lcall
push
mov
gs
xchg
das
das
push
sti
mov
mov
xchg
cmp
and
es
jns
adc
pop
fs
jno
negl
jne
jle
mull
cmpsb
loope
xchg
loopne,pn
insl
test
mov
and
xchg
dec
out
test
imul
cwtl
roll
sbb
in
cmpsw
dec
sub
enter
aad
cld
test
sar
lret
aam
fcmovu
mov
jmp
addr16
add
sar
adc
mov
adc
or
in
adc
sbbb
bound
fldl
jmp
loope
in
stos
inc
imul
fisttps
fdivrs
int3
hlt
clc
test
lock
in
xor
mov
sahf
add
jb
mov
inc
in
mov
lret
popl
pop
shl
pop
loope
inc
jmp
sub
and
jns
and
lods
jge
add
lea
pop
out
cmpsb
pop
sbb
push
leave
jnp
or
loop
dec
mov
sub
bnd
in
jnp
mov
mov
bound
mov
mov
pop
fdivrl
in
mov
filds
lcall
dec
mov
enter
sbb
test
iret
mov
loope
jae
dec
mov
aad
stc
in
pop
subl
mov
cmp
gs
out
xchg
mov
mov
dec
dec
out
negb
mov
pop
test
pop
into
fwait
add
adc
sbb
mov
xor
jnp
mov
pushf
fndisi(8087
xchg
jae
in
xor
or
dec
stos
into
push
and
jmp
movsl
xchg
add
cmpsl
adc
rolb
adc
cmc
aad
xchg
lret
loop
dec
inc
lret
movsb
cmc
sub
adc
lret
mov
lret
aam
inc
je
in
mov
lds
adcb
cmp
fcomps
int3
insl
mov
mov
inc
stos
mov
add
mov
xchg
ljmp
inc
bound
orb
imul
and
add
cmp
lahf
push
insb
jg
xor
test
in
push
inc
mov
dec
push
cmc
cmp
fdiv
inc
enter
stos
and
and
pop
movsb
aam
dec
shr
clc
cld
bsf
mov
je
mov
or
cmpsb
outsb
pop
fs
mov
cltd
push
cmpsl
mov
sarb
fiadds
outsl
movsb
orl
or
lods
ror
fisubl
scas
pop
or
loop
loop
jae
fisttpl
stos
sbb
je
mov
dec
pop
ret
xchg
mov
lret
cli
push
sbb
shrl
decb
push
call
es
fcompl
jg
int3
mov
push
pop
data16
jo
jb
in
push
lret
fstpt
in
pop
and
movsb
cmp
sbb
test
pop
pushf
clc
mov
dec
push
or
imul
scas
stos
test
repnz
out
stos
sub
mov
loopne
cmp
mov
jbe
adc
das
loope
jmp
daa
pop
xchg
xchg
jnp
dec
cmc
mov
or
notl
subl
testl
scas
andb
inc
scas
sub
rcrb
xor
ret
mov
movl
dec
xchg
sub
jnp
shlb
push
and
sbb
rcr
and
add
sbb
add
inc
and
lret
lahf
xor
cmp
outsb
iret
stos
push
cmp
pop
test
out
push
cmp
repz
dec
mov
jecxz
xchg
call
rcrb
pop
fisttpll
sub
lds
pop
bound
lea
shll
and
lods
test
sbbb
and
or
std
test
dec
cmp
arpl
mov
sbb
cs
xor
ds
cwtl
jle
insb
aas
xchg
lret
lds
js
xchg
stos
sahf
das
sti
cmc
ret
sti
xchg
imul
xchg
imul
cmpsl
in
bound
lcall
sbb
xor
xchg
push
cmc
dec
orb
dec
pop
dec
icebp
rorb
popa
xchg
out
hlt
int
lcall
sub
cli
mov
or
mov
add
or
lock
outsb
push
dec
stos
push
ror
sub
jnp
ret
adc
mov
and
rcll
and
mov
out
fdivl
cmp
xor
insl
cmpsb
xor
das
push
adc
jecxz
xchg
inc
mov
jb
and
fdivrs
shll
add
sahf
sbb
push
outsl
outsl
scas
cmpl
sub
mov
cwtl
pop
push
push
cmpsl
orl
adc
cli
rorb
mov
adc
mov
push
inc
add
cld
push
shll
mov
jo
pop
dec
adc
mov
and
push
cmp
xchg
dec
pop
in
pop
lcall
jnp
inc
std
mov
rol
divb
aad
inc
jl
inc
leave
mov
push
add
xchg
mov
in
insb
sbb
aam
movsl
fwait
adc
mov
loop
sbb
pextrw
pop
push
sub
add
jno
lock
sbb
inc
daa
cmp
jle
inc
fcmovne
outsl
push
popf
sbb
add
fmull
call
into
push
stc
xchg
out
out
test
insl
jnp
jno
sub
pop
leave
and
clc
icebp
clc
xchg
scas
rcrb
mov
cld
cmpl
ret
addr16
xbegin
xorb
into
test
pop
dec
cmp
or
pushf
imul
and
mov
mov
dec
insl
dec
push
cmpsb
mov
fxch
pop
sbb
mov
jnp
das
aas
dec
fdiv
enter
xchg
nop
in
cs
sti
or
test
incb
xchg
jl
loop
mov
mov
je
in
loopne
adc
lods
fcompl
add
popa
xchg
inc
sub
adc
add
popf
rcl
lods
jecxz
imul
cmp
out
hlt
inc
push
jbe
sbb
in
sub
mov
in
push
mov
test
fimull
fs
out
pop
mov
ljmp
cmpsl
int
cmpsb
sti
adc
movsl
inc
and
xor
add
add
rcl
in
mov
sub
xor
es
mov
test
push
popf
pop
in
in
inc
mov
aam
stc
psrad
cltd
mov
cmp
adc
test
cmpsl
mov
pushl
sbb
and
inc
jo
mov
mov
iret
adc
xchg
lock
and
imul
pop
jl
pop
adc
xor
or
lea
inc
std
nop
or
outsb
dec
mov
dec
jp
mov
push
add
in
clc
jne
jle
fcmovnb
cmovns
mov
mov
mov
inc
call
or
cmp
mov
mov
cmp
idivl
aam
cs
add
adc
aam
insl
shl
sbb
and
leave
jle
dec
pop
dec
sti
pop
mov
cmp
ja
lcall
mov
iret
hlt
ljmp
sbb
jo
in
hlt
dec
jns
lods
mov
jo
pushf
push
dec
xchg
leave
ret
iret
jb
outsb
gs
enter
and
sahf
shrl
sbb
mov
fs
daa
pop
imul
gs
mov
inc
mov
sub
sub
lcall
in
mov
scas
hlt
sbb
mov
mov
shlb
sub
pushf
ficoml
std
and
mov
aad
push
clc
mov
testb
xchg
out
jl
pop
sbb
shlb
dec
loop
cmpsl
push
add
jnp
push
pop
lret
daa
out
mov
dec
jmp
sbb
inc
fisttps
pop
bound
xchg
mov
repz
jne
xchg
dec
fstps
dec
rcll
mov
sbbb
lahf
shlb
adc
cmp
xlat
hlt
sub
gs
repnz
jns
imul
popa
lret
dec
jle
rep
lret
pop
rorb
mov
push
in
lods
sub
dec
mov
insb
add
inc
or
push
scas
lock
pop
and
in
add
roll
mov
in
data16
lds
mov
xchg
push
fs
jns
mov
mov
or
aaa
add
mov
mov
mov
ljmp
dec
add
popa
repz
fnstsw
roll
push
lods
lcall
scas
outsb
mov
and
fidivrs
sti
mov
and
mov
enter
imul
movsl
dec
xor
xor
cmpsb
cmp
nop
lret
cltd
dec
sub
andb
pop
je
mov
xchg
cwtl
push
and
loope
pop
cmpl
pop
testl
insb
push
and
lcall
xor
sets
lahf
ret
fs
repz
mov
out
jp
or
push
dec
in
gs
mov
aam
jns
and
clc
xchg
lea
xchg
rcrl
ljmp
push
fbstp
push
stos
inc
out
jge
outsb
cld
test
sbb
or
daa
sti
ret
jno
inc
fsubl
mov
les
push
cmp
lcall
repz
mov
es
xor
icebp
mov
fldenv
lds
xor
mov
cmpsl
scas
jecxz
jg
mov
mov
sti
fisubrl
cmp
sbbb
mov
xchg
sbb
fistps
adc
xchg
dec
shrb
orl
and
push
in
sbb
sti
mov
call
jp
outsb
popf
mov
or
incl
cmp
or
cmp
rolb
je
dec
hlt
dec
scas
adc
sahf
sbb
cwtl
div
aas
and
and
inc
stc
sbb
call
dec
mov
sbb
sub
bound
lock
push
hlt
xchg
out
adc
xor
push
adc
out
rcrb
shlb
push
adc
jge
cmpsb
cmp
daa
mov
jo
aad
xor
daa
or
popf
movsb
clc
std
lods
pop
lahf
push
cmp
pop
shl
sub
xor
ds
and
sbb
adc
das
shlb
loopne
jbe
mov
or
adc
or
push
jg
and
fisubs
add
aaa
jg
inc
lret
inc
aam
pusha
in
sti
lods
mov
popf
push
push
xor
pop
hlt
int
enter
push
mov
jns
inc
cmp
adc
jns
pop
and
xchg
dec
or
mov
dec
mov
add
insb
pop
hlt
pop
pop
cs
sbb
dec
mov
or
shll
lcall
ss
sbb
in
lods
into
popf
cmp
mov
jnp
push
jp
and
pop
fs
out
push
sbb
inc
jnp
inc
dec
lea
lahf
xchg
in
mov
dec
xchg
push
jnp
call
orb
pusha
test
jno
mov
jnp
leave
inc
rcr
shrb
in
imul
rcl
pop
int
ds
xchg
jg
rcr
je
mov
sub
int3
leave
aaa
iret
inc
push
and
push
and
outsl
imul
fistl
hlt
dec
and
and
clc
jo
mov
jno
adc
outsb
dec
sbb
cmpsb
xchg
adc
jb
cmpl
stos
push
addb
sub
stc
mov
pop
xchg
or
cld
xor
int3
pop
jo
mov
aaa
je
xchg
mull
xchg
xchg
mov
std
mov
imul
add
mov
lock
adc
or
js
add
es
mov
add
xchg
aas
or
or
mov
aam
pop
pop
jno
shrb
push
lret
stos
push
push
xor
xchg
aas
clc
out
xchg
push
xchg
mov
es
sbb
push
mov
pop
lods
hlt
add
push
mov
pusha
cmp
sub
fiaddl
lods
xchg
das
inc
cld
arpl
subb
mov
jae
or
leave
push
sarb
fldcw
adc
ds
dec
dec
test
inc
jae
adc
xor
sbb
movsl
or
dec
dec
sti
mov
xor
cmp
cmc
icebp
xchg
in
pop
ja
std
gs
fs
bound
cmp
or
or
icebp
xchg
jbe
cld
enter
xchg
es
xor
repnz
aas
loopne
or
xchg
sarb
popf
add
mov
xor
mov
cmpsb
fnstenv
jno
jmp
je
test
test
testl
ljmp
xor
repnz
sub
inc
or
push
outsl
cld
jb
jmp
cltd
movsb
and
mov
clc
xchg
movsl
in
and
lds
sbb
jecxz
jb
sbb
or
adc
stos
iret
adc
push
cmp
xchg
iret
or
and
push
movsb
roll
iret
mov
movsl
mov
out
repz
xor
inc
popa
mov
and
cltd
jae
jmp
fwait
cld
lcall
scas
jae
shll
mov
sbb
outsb
pop
stos
dec
pop
inc
and
mov
xchg
aam
jo
add
cmp
je
jp
cmpsl
andl
addb
cmp
popf
stos
pop
inc
ret
js
jne
call
notb
and
mov
mov
cmpsl
dec
rcl
push
nop
pusha
outsb
xor
sahf
mov
mov
push
je
lret
dec
xchg
shl
mov
scas
inc
add
and
cmp
seto
or
insb
imul
and
mov
cltd
mov
mov
pop
aad
pop
movsb
loop
mov
jecxz
sbb
mov
add
loopne
scas
xchg
in
divl
addb
sbb
lods
inc
mov
add
cmpsb
addr16
dec
push
dec
inc
mov
das
sarb
inc
jge
mov
inc
icebp
sbb
lock
int3
fldl
roll
mov
pop
push
inc
aaa
jne
push
jo
and
in
jl
rorl
fidivl
sub
aam
jle
sbb
sahf
or
addr16
ret
add
hlt
inc
repz
stos
insb
sub
insb
sbb
pop
and
pop
hlt
dec
stc
pop
out
lahf
jnp
repz
daa
xor
add
or
cltd
jl
bound
mov
and
stos
test
xchg
loope
push
mov
cmp
and
rolb
and
or
and
fs
push
test
jbe
arpl
dec
cs
jecxz
in
sub
data16
mov
lcall
push
pop
aam
mov
xchg
dec
mov
movsl
lods
mov
mov
push
stc
xlat
pop
lret
mov
fisttpl
loop
or
mov
test
out
rclb
into
ret
lods
push
jmp
mov
outsl
sub
pop
dec
gs
bound
push
ja
mov
dec
imul
rolb
mov
jl
xchg
inc
pop
dec
dec
std
pop
in
xchg
mov
and
xchg
leave
ljmp
cmp
sub
into
sub
movsl
shr
insl
jnp
inc
ss
daa
test
test
in
push
mov
pop
loopne
add
cmp
rorb
sbb
or
push
lcall
aaa
cmp
outsl
push
cltd
cmp
xor
test
xor
dec
int
lret
repnz
enter
repnz
and
mov
push
aas
jmp
inc
lods
inc
push
jns
sbb
ret
mov
adc
das
rcrb
data16
fdivs
out
cmp
and
or
iret
mov
push
push
lock
aam
enter
cmp
jmp
jecxz
mov
sbb
jmp
arpl
movl
sub
test
sbb
sarb
pushf
cmp
es
jge
bound
cmc
sbb
mov
mov
arpl
cwtl
mov
loop
push
mov
xchg
lret
mov
adc
int
jp
mov
sub
add
or
mov
inc
fwait
mov
push
or
icebp
fcmovnb
add
xchg
and
test
jge
cmpl
cmp
adc
adc
inc
mov
outsl
sbb
cmp
sbbb
xchg
and
out
push
dec
sub
out
movsb
dec
inc
mov
adc
fcompl
ret
pop
cltd
inc
in
sub
repz
adc
cwtl
fcmovne
loop
ja
cwtl
push
push
lahf
lret
push
sar
and
pop
aas
mov
xor
subl
sub
mov
cmp
add
xor
jae
dec
imul
out
dec
dec
insl
or
inc
stos
push
cmp
mov
insl
fidivrs
test
adc
mov
and
pop
inc
lds
sbb
mov
aas
push
xchg
aas
xchg
fs
ret
pop
mov
data16
adc
or
and
jne
cld
out
jnp
xchg
xlat
in
cmc
daa
adc
or
cli
mov
shl
lret
test
ds
insl
sbb
movsl
ss
mov
lahf
jnp
or
fidivl
pop
cmp
clc
call
cmp
xor
out
sbb
into
sub
jns
mov
add
and
xchg
or
popa
jge
sub
into
xchg
jg
fldl
mov
out
cmp
jo
bound
inc
addr16
push
insb
orl
push
inc
fiadds
cmp
pop
pop
lea
fldenv
pop
je
adc
mov
mov
jl
out
shrb
mull
fbstp
repz
out
repnz
lea
sub
pusha
jl
pxor
mov
addl
fistpl
and
jne
inc
push
dec
loope
jae
test
jge
das
cmp
push
arpl
orb
repz
cltd
add
mov
or
pushf
xor
lea
out
test
push
jmp
loopne
xor
roll
loope
in
cwtl
or
ljmp
popf
arpl
clc
mov
sub
ljmp
shrl
fwait
dec
sub
sub
ret
mov
enter
lahf
mov
jmp
jmp
push
incl
pop
dec
cmc
xchg
sbb
leave
mov
xor
inc
hlt
and
ljmp
jae
pop
inc
imul
jg
cmpsl
cwtl
jle
test
sbb
lea
adc
xchg
test
insb
xchg
sub
add
inc
cs
push
or
out
hlt
mov
leave
jbe
inc
fwait
cld
pop
aaa
roll
dec
out
pop
cltd
adc
icebp
sbb
adc
dec
xlat
pusha
mov
mull
mov
lcall
lcall
lods
pusha
inc
xor
mov
adc
mov
cwtl
cmp
sub
das
out
inc
pusha
fbstp
lods
sbb
out
sub
cmp
mov
and
dec
cs
fldl
int
ss
vcvtps2pd
mov
adc
mov
xchg
jbe
in
cmpsb
test
sti
push
ljmp
lods
inc
inc
lahf
xchg
sbb
ret
cltd
jns
and
outsl
jmp
jmp
or
fs
pop
xlat
testb
test
push
inc
in
and
sub
xor
mov
sub
inc
mov
daa
scas
adc
stos
ret
out
xchg
push
mov
in
fsubs
add
push
or
jno
mov
or
sub
int
fsts
sub
mov
mov
cmp
xchg
enter
or
int3
adc
fnstcw
subb
and
mov
and
into
and
mov
cmp
pop
inc
mov
iret
movsl
xchg
lods
mov
mov
sti
cmp
shrl
add
aaa
dec
xlat
add
ljmp
pop
cmp
fs
and
ss
push
nop
cmpsl
mov
daa
arpl
cmp
out
jl
test
xchg
dec
jle
int3
fs
add
inc
xchg
leave
xlat
movsb
sbbb
daa
shll
adc
js
xchg
cmp
fwait
iret
jl
fisttpl
jg
xchg
scas
fisubs
int3
adc
jg
mov
imul
sub
add
clc
dec
cmc
and
movsb
subb
mov
jp
jg
push
popa
mov
adc
out
hlt
loopne
sub
pop
test
lods
dec
pop
jl
lods
aas
ret
in
mov
xor
std
dec
cltd
les
insl
dec
xor
into
or
push
cmp
mov
mul
sub
push
pusha
add
mov
xchg
or
out
mov
in
fisubrl
or
nop
popf
ljmp
pop
lods
push
ss
adc
jp
xchg
or
jns
das
push
adc
adc
ss
cmp
scas
sbb
cmc
aad
imul
lea
in
dec
movsb
fnstcw
sbb
sbb
ja
jg
aaa
add
loope
and
inc
in
mov
movsb
les
dec
push
mov
pop
fsubrl
movsb
xchg
sub
lret
xchg
dec
shlb
mov
jg
jg
filds
ljmp
popf
test
stos
xor
jle
cmc
out
out
and
scas
ror
mov
test
sub
xor
dec
push
jo
adc
scas
mov
or
adc
dec
bound
xchg
aas
ret
sub
and
jne
xchg
cmp
mov
bound
call
mov
setl
div
push
cmpb
ss
push
jl
scas
in
adc
or
lds
loope
pop
mov
or
test
mov
ljmp
pop
les
pop
sbb
adc
mov
inc
popa
sub
mov
mov
and
jns
cld
mov
out
mov
add
ficomps
in
cmc
push
dec
pop
lret
mov
clc
out
mov
pop
enter
sti
xchg
sub
add
jl,pn
cli
test
xor
nop
outsb
dec
loopne
in
pop
jp
jg
cwtl
enter
js
pusha
cmp
cmp
cld
shlb
cmp
lcall
mov
in
out
lea
jno
test
insb
sarb
mov
sbb
add
je
sub
loop
dec
xor
or
pusha
and
push
stos
inc
and
inc
arpl
ret
dec
repnz
fs
insl
lahf
inc
daa
in
xor
xchg
pop
adc
xor
stos
stc
enter
sub
xor
mov
rcrl
push
insb
sub
mov
pusha
dec
xchg
scas
mov
je
add
pop
addr16
push
cmpsb
mov
pmaxub
mov
mov
and
dec
daa
pop
mov
and
push
imul
mov
xchg
ret
inc
xchg
mov
fmuls
cwtl
arpl
mov
adc
dec
repnz
movsb
pop
bound
sub
mov
into
rcll
rcll
mov
and
int3
cld
or
push
fcmovnbe
pop
aad
pop
fmuls
jp
jecxz
mov
popf
cwtl
pop
into
ret
lods
aas
pop
decb
fbstp
adc
hlt
mov
clc
into
adc
outsl
mov
inc
dec
cld
cltd
jns
cld
mov
hlt
mov
and
add
pushf
pop
call
cmp
scas
dec
daa
xor
add
jne
xor
sbb
push
insl
push
sbb
and
stc
adc
rcrl
mov
shr
imul
push
xor
push
andl
pop
call
ljmp
push
xor
into
inc
outsb
cmp
jo
scas
pushf
je
fadds
lock
pop
fidivs
je
notl
lret
jmp
sub
adc
inc
ss
push
out
icebp
pushf
pop
adc
test
push
movsl
and
out
jle
stc
xchg
mov
sbb
cli
mov
sbb
xchg
movsb
jmp
push
cmp
pop
inc
aad
enter
repz
mov
dec
mov
loopne
jmp
mov
mov
hlt
xchg
mov
or
and
dec
mov
sub
cmp
pop
xor
punpckhwd
popa
sbb
fbstp
repnz
pop
cmpsb
xchg
sahf
lea
clc
pop
jmp
add
ret
fisubrs
jle,pn
xchg
mulb
and
dec
les
jo
inc
in
pop
sub
push
jl
push
xor
pop
rolb
sbb
idivb
in
push
call
ret
outsb
notl
das
fwait
test
les
pushf
lret
cmp
into
dec
xchg
mov
jnp
iret
mov
push
into
arpl
out
in
outsb
xchg
sub
loope
lods
pusha
mov
jbe
in
mov
cmp
sahf
aas
mov
sti
lret
out
jge
cli
lods
es
inc
outsb
repnz
insl
push
jnp
test
fnstenv
and
cmpsl
out
ret
mov
mov
ss
mov
sbb
lds
aas
out
ljmp
mov
fldenv
mov
sub
fwait
sbb
stos
cmp
push
stos
in
pop
pop
sub
add
or
jg
dec
or
test
mov
lcall
mov
in
dec
mov
mov
outsb
lods
mov
push
mov
js
cwtl
jne
shll
stos
pop
dec
cmp
aam
mov
push
pop
popf
sbb
ret
fst
fdivr
mov
xchg
jmp
call
mov
jle
mov
jno
add
add
imulb
xchg
je
inc
repnz
test
jae
std
push
loop
push
pop
adc
lahf
mov
out
outsl
outsb
fcmovnbe
shll
adc
scas
xchg
jae
mov
adc
rclb
xchg
mov
jle
xchg
pop
pop
mov
js
mov
dec
push
cmp
mov
inc
mov
addr16
stos
mov
sbb
dec
hlt
jne
jae
sarl
shl
in
in
in
sub
mov
mov
and
xor
out
xor
rorb
sbb
xchg
push
pop
ss
mov
add
notb
cmp
test
sbb
out
pop
dec
test
and
push
aaa
rorl
ss
and
lea
fildl
xor
and
adc
mov
test
mov
push
ret
in
ret
fwait
in
loopne
lahf
arpl
test
rcrl
xchg
adc
inc
mov
in
and
jo
mov
adc
enter
cli
jl
fwait
push
pusha
xchg
bound
int
bound
dec
xor
fnsave
movb
inc
cld
cmpsl
sub
rcr
sbb
sbb
inc
in
add
sbb
int3
cwtl
jae
les
sbb
mov
push
cmc
sbb
popa
cmpsl
lds
notb
jo
rol
loopne
or
lea
adc
lahf
das
mov
aad
or
lods
adc
mov
dec
mov
adc
mov
shrb
ds
arpl
loop
mov
pop
mov
rolb
out
and
scas
and
sbb
andb
pop
adc
out
xchg
dec
mov
and
loope
add
shll
inc
iret
hlt
repnz
push
mov
out
and
xchg
mov
pop
cmpsb
stc
or
into
pop
mov
xor
cmpsb
cmpsb
push
jbe
dec
add
fmuls
inc
inc
push
aad
cs
push
ds
repz
push
xchg
sar
iret
sbb
pop
and
xor
aaa
insl
hlt
jg
aas
imul
push
ja
or
sub
aam
xchg
jno
inc
adc
cltd
sub
inc
pop
movsl
sub
jno
mov
movsb
xchg
dec
fldenv
adc
push
lods
sub
add
in
pusha
push
out
xchg
mov
or
mov
inc
sbb
testl
dec
dec
ljmp
add
pop
xor
in
inc
mov
fs
jmp
ds
pop
xchg
mov
mov
xchg
js
jno
push
sbb
cmp
into
adc
push
fwait
and
mov
pushf
mov
sub
jb
in
mov
adc
pushf
pop
sub
inc
mov
es
adc
add
roll
ret
xor
xor
mov
xor
or
sahf
pop
sbb
in
sbb
icebp
push
loopne
shlb
cmp
stos
int
je
in
jnp
sbb
stos
fsubrl
ficomps
test
pop
mov
mov
xor
push
adc
pop
out
jne
or
data16
add
inc
les
xchg
popa
sahf
xchg
insb
imul
pop
call
push
shlb
inc
mov
mov
or
pusha
adc
xchg
into
jg
jnp
inc
xchg
aas
jo
sti
adc
pop
mov
mov
mulb
std
fs
push
jmp
stc
rolb
js
cld
mov
inc
xchg
add
add
fisubrs
jmp
js
mov
jmp
lahf
out
add
loope
push
test
rcrl
or
out
jmp
xchg
int3
push
repnz
lahf
mov
rorb
push
mov
jl
arpl
popf
dec
xchg
jae
mov
jo
adc
inc
jmp
sub
movsl
cmp
mov
xor
sub
add
push
sahf
aaa
imul
adc
mov
jae
sbb
inc
sub
pop
mov
aaa
cmp
divps
out
outsl
and
mov
inc
add
adc
jl
lds
movsl
mov
pop
pusha
aam
xchg
jae
mov
sub
and
jmp
mov
in
push
clc
sbb
push
and
add
and
mov
popf
xlat
fldpi
cmp
adc
push
mov
andb
jbe
inc
adc
mov
jb
jl
ret
fdivp
adc
xorl
add
aas
lock
jge
push
out
popa
cmpsb
lock
push
pop
popf
lea
popf
xor
push
lods
outsl
jae
imul
mov
in
int3
popf
and
cmp
int3
jno
pusha
dec
mov
sbb
cmp
mov
adc
sti
cmpsb
loopne
adc
push
orl
dec
sbb
push
xchg
cmp
and
hlt
and
mov
mov
addr16
fldcw
jmp
sbb
dec
pop
mov
xor
inc
xorl
orb
sahf
push
mov
pop
add
xor
adc
dec
mov
add
fsubrl
mov
jae
shlb
xchg
sub
imul
out
push
pop
cmp
or
cs
les
pusha
clc
lods
andl
sub
mov
sbb
sbb
dec
in
shl
sub
pop
push
add
fisubrs
test
je
xor
sub
data16
insl
jmp
mov
les
mov
jge
insl
jbe
leave
call
xchg
sbb
cmp
or
mov
insl
stc
sub
aam
jg
enter
into
mov
testl
cmp
push
frstor
xor
sbb
lds
cld
aas
xor
loop
mov
ret
push
fisttpl
or
or
outsb
jg
scas
pushf
addl
jmp
pusha
sub
mov
mov
jg
subb
rcll
cmp
lock
push
movsb
dec
cmp
sub
dec
das
cmp
ret
xor
sbb
xchg
test
movsb
adcl
shlb
sub
mov
mov
sbb
adc
dec
push
jl
mov
xor
ljmp
jecxz
pop
dec
xchg
mull
ljmp
mov
pop
test
adc
out
mov
sbbl
push
cld
mov
jp
shr
dec
push
data16
dec
push
xchg
or
or
xchg
imul
and
sbb
and
mov
divb
sti
adc
sbbl
add
mov
insb
loop
pop
jo
sbb
insb
daa
pop
lahf
xor
leave
inc
inc
xchg
dec
leave
repnz
xchg
pop
sub
push
sarl
aam
pushl
fimull
mov
mov
push
xchg
iret
push
rcl
out
inc
test
xchg
mov
xchg
mov
jnp
pop
sbb
xchg
lret
iret
repnz
aas
sub
mov
pop
adc
sbb
fstpt
push
loope
jbe
inc
sbb
adc
dec
into
lret
mov
fdivrs
or
test
insl
dec
int3
iret
jbe
loopne
movl
mov
cmpsb
mul
pop
lret
dec
inc
out
loopne
lcall
es
mov
adc
xor
jae
pop
xorb
inc
add
xlat
stc
int
das
jae
lds
dec
in
gs
ss
push
aas
scas
bound
fildl
sub
movsl
and
or
gs
mov
dec
stos
clc
stc
and
ffree
mov
hlt
adc
adc
lods
testl
mov
pop
aas
rcrb
sbb
adc
pop
cmp
ret
ret
repnz
test
dec
xor
das
cmp
mov
push
push
ljmp
or
sub
out
fsubrl
sub
mov
mov
mov
ret
sti
stc
jbe
mov
sub
push
mov
lcall
inc
call
mov
sub
pop
jecxz
imul
ja
pop
sti
xchg
cwtl
sub
popf
jo
ret
lock
imul
bound
clc
lea
adc
jmp
repz
out
or
cli
adc
ss
pop
pop
cli
lds
adc
sbb
shll
hlt
aad
out
xchg
movsl
jge
dec
outsb
mov
xor
jg
dec
ret
jg
rorl
aad
lahf
call
bnd
repnz
jno
mov
fcompl
xchg
or
cmpsb
sbbb
je
push
pushf
mov
inc
or
movsb
call
movsb
and
sbb
pop
dec
sbb
push
pop
sub
mov
jle
popf
scas
fcmovnbe
movsb
stos
add
stos
jmp
adcl
or
arpl
mov
adc
push
and
out
data16
or
fs
mov
mov
icebp
jmp
mov
and
notb
mov
ljmp
mov
push
fdivs
loope
xor
inc
call
jbe
sbbl
jnp
int3
cmp
mov
or
pop
notl
loopne
add
ret
pop
and
mov
inc
lahf
sbb
loope
mov
scas
daa
fistpl
push
psrad
dec
sub
push
ds
repnz
mov
pop
inc
mov
les
mov
dec
xchg
cld
mov
mov
sub
ficompl
jne
js
into
mov
pop
push
add
cmc
push
jg
mov
scas
incb
fdivrs
push
jp
jo
imul
mov
cwtl
nop
leave
add
fwait
lock
loope
and
push
xor
loop
lods
imul
adc
stc
sub
push
bound
call
das
cmp
popa
push
sbb
stos
sub
hlt
pop
sub
lods
rorb
mov
mov
add
push
xor
aas
mov
jecxz
jb
add
in
jg
sub
popa
pop
mov
push
movsb
ret
mov
push
test
add
cltd
sub
stos
rcr
arpl
das
inc
pop
mov
loop
mov
xor
push
push
inc
inc
mov
inc
daa
pop
insl
or
fdivs
dec
push
ds
sub
nop
jmp
loope
mov
sbb
cmp
int
loop
add
fisubrl
repz
xlat
inc
xlat
sub
mov
daa
push
cmpb
dec
jp
aad
jae
popf
pusha
inc
mov
push
jb
cltd
bnd
shlb
or
or
dec
aam
test
sub
jb
negb
pop
xchg
nop
mov
push
das
icebp
addr16
fistpll
lret
dec
ljmp
push
push
jge
cmc
add
add
add
or
xchg
dec
js
outsb
aas
inc
bound
dec
adc
arpl
dec
stc
out
adc
mov
mov
cmp
movsb
mov
cs
or
aas
push
push
adc
adc
ret
stos
jne
add
out
jns
imul
xor
mov
mov
pop
cmp
xchg
jge
out
pop
ret
call
daa
call
stc
mov
mov
loopne
into
cmp
xor
shlb
pop
lcall
ret
xor
xchg
pop
lods
pushf
enter
shrl
jnp
mov
or
inc
adc
xor
pop
cmp
das
push
enter
lahf
andb
dec
add
push
out
jae
cmp
push
test
push
in
icebp
lods
mov
sbb
lea
push
lahf
es
mov
push
dec
dec
imul
cmp
or
std
xor
stc
in
jnp
fildll
cld
xor
enter
and
fstl
bswap
loopne
add
pop
xchg
imul
adcl
sbb
push
outsl
js
rcr
jmp
punpcklbw
jo
gs
mov
mov
das
arpl
sbb
mov
outsb
xchg
ret
cmpsb
outsl
repnz
mov
jmp
pusha
popa
in
add
mov
pop
mov
xchg
adc
popf
mov
push
add
call
stos
cmp
mov
test
mov
ja
les
pop
push
xlat
mov
jle
ljmp
stc
insl
adc
or
insb
adc
sub
add
imul
inc
fidivrl
int3
loope
xchg
jg
stos
imul
out
ret
push
push
add
loopne
mov
pop
push
jg
data16
fadd
and
insb
mull
test
push
sbb
push
test
xchg
pop
hlt
icebp
mov
xchg
leave
dec
push
push
sbb
fistpl
lret
and
popf
out
and
mov
dec
dec
lock
popa
test
or
pop
pushf
push
adc
push
rol
imul
mov
pop
jmp
xchg
ds
mov
xor
loopne
adc
popa
insl
bnd
jne
ss
enter
xchg
mov
rcrl
pop
cwtl
test
rclb
adc
mov
adc
dec
xchg
xor
pop
cmpsb
jo
push
fsts
repz
mov
or
out
or
mov
pop
orl
sbb
add
rcrb
call
iret
xchg
outsb
stc
aad
xlat
pop
into
inc
int3
xlat
mov
mov
loop
inc
push
xchg
mov
movsl
int3
add
jge
sub
dec
push
sub
fisttpll
push
mov
test
ss
mov
popf
push
pop
fs
add
arpl
testl
repz
imul
movsb
jbe
push
push
jb
pop
hlt
dec
xor
aaa
insl
daa
and
adc
fdivrs
mov
add
pop
dec
xchg
in
rorl
loopne
lahf
mov
aam
jp
je
push
push
out
ret
lret
cmp
leave
lahf
int3
cli
pushf
xor
sbb
dec
lret
pop
pop
add
or
aaa
sub
mov
jge
xlat
mov
test
lcall
aas
inc
test
imul
sbb
inc
mov
inc
push
mov
mov
cmp
insl
ljmp
mov
add
and
xchg
ds
leave
enter
pop
push
sahf
int
adc
pop
jmp
ljmp
popf
push
lea
sbb
xor
cwtl
jge
dec
iret
jae
scas
pop
sbb
lahf
sti
mov
addr16
lods
xlat
add
mov
aaa
jo
cmp
xchg
loopne
ret
inc
push
jl
and
test
rcrb
jecxz
repnz
and
ret
mov
repnz
mov
xchg
mov
adc
dec
loope
mov
xchg
ret
pop
xor
sub
pop
call
mov
or
mov
cmpsb
or
add
es
push
mov
cmp
sarb
loope
insb
movsb
dec
add
sbb
push
sub
shll
add
xchg
imul
xchg
cli
int3
into
mov
ret
pop
test
adc
stos
and
xor
pop
sbb
in
sub
sbb
dec
and
mov
push
shl
sbb
jo
icebp
and
fdivrs
inc
mov
es
or
aaa
ret
into
mov
lds
mov
add
stos
movsb
clc
sbb
outsb
lods
lods
dec
test
or
and
dec
adc
pop
nop
sbb
sub
adc
daa
idiv
mov
jl
fistl
sbbb
les
pusha
lea
lods
inc
jno
sbb
cwtl
mov
outsb
add
cld
daa
lret
out
xor
add
pop
fwait
sub
cli
mov
cmpsl
and
dec
sbb
xor
es
repnz
pusha
push
cmpsl
sahf
ret
adc
bound
ss
cmp
rorl
ret
push
test
push
movl
pop
daa
push
xchg
repnz
mov
sub
push
and
sbbl
mov
jno
les
stos
outsl
inc
pop
icebp
mov
sub
shlb
or
xchg
lods
mov
test
mov
ficomps
fcomi
pop
add
loope
ja
pusha
jge
inc
ret
ljmp
or
into
add
add
xchg
or
imul
insb
mov
jmp
stos
push
sbb
aas
dec
pop
sub
push
sbb
js
xchg
test
popa
jle
pop
mulb
addr16
cwtl
icebp
loop
mov
jmp
mov
and
cmp
and
rcl
cli
and
iret
loopne
mov
jp
and
int
lret
lahf
adc
and
sub
dec
add
mov
mov
jmp
push
ja
imul
sbb
xor
aas
aaa
cli
mov
test
cmp
cmp
lret
or
jo
or
lahf
sahf
push
out
push
int
ficoml
icebp
push
ret
xor
inc
sub
mov
negb
or
ss
xchg
icebp
ljmp
fisubs
lret
jae
je
mov
jbe
inc
cmpsl
pop
nop
fld
sti
cltd
add
into
in
imul
dec
cmpb
cwtl
scas
sar
cmp
popf
aad
xor
pop
push
mov
movsl
in
leave
into
push
std
jae
fcoml
lods
rcl
lea
data16
sbb
pop
mov
jge
cmc
add
mov
adc
xchg
cmp
cmp
jnp
mov
sbb
ljmp
adc
scas
pushf
inc
push
cwtl
add
rcrb
or
and
stos
jnp
test
mov
xor
mov
hlt
xchg
test
cmp
sbb
gs
sbb
dec
mov
test
das
call
jbe
das
push
pop
cltd
ret
in
sub
add
lods
int
out
ds
pop
and
notl
es
insl
cmp
cmp
test
subl
pop
pop
dec
pop
fldenv
lods
ja
pop
mov
test
add
fndisi(8087
dec
pusha
out
sbb
pop
jb
and
add
imul
sbb
mov
popa
sub
shlb
scas
insl
sbb
inc
add
jecxz
push
dec
inc
mov
das
ja
fs
cmp
xor
iret
xchg
enter
add
jecxz
xlat
or
lcall
insb
in
dec
lods
je
or
and
cmc
cmpsb
movsb
jp
lods
adcl
and
add
bsf
clc
negl
movsb
mov
call
rclb
cli
xchg
fnstenv
in
xchg
sbb
dec
lahf
out
ret
cmp
jnp
rol
dec
add
stos
xlat
inc
loopne
iret
out
jbe
bound
push
mov
mov
jmp
cmp
gs
cmp
cmp
ja
adc
cli
insl
ds
pop
mov
mov
jbe
mov
out
in
mov
imul
adc
adc
xor
ss
xchg
jle
mov
je
sbb
shll
rolb
repnz
testl
sti
xchg
push
pop
stos
loop
add
in
cmp
test
enter
adc
adc
mov
popa
stos
in
dec
jge
dec
xchg
cld
cmp
lods
push
pop
stos
adc
ret
mov
mov
lods
jp
and
mov
pop
cmp
stos
jo
int3
mov
cmp
pop
cs
mov
mov
das
add
mov
dec
imul
pushf
mov
adcb
in
mov
sub
or
mov
push
popl
fdivp
jno
lcall
and
stos
ficompl
mov
mov
adcb
in
pop
popf
push
jl
arpl
in
icebp
add
pop
push
push
bound
dec
jg
addr16
shll
or
mov
mov
ja
icebp
pop
mov
fcmovnu
sbb
adc
cli
jne
test
adc
addl
mov
jns
and
cmovae
pop
pop
pop
sbb
pop
outsb
lret
inc
mov
test
movsl
cld
stc
lcall
add
ret
inc
fidivrs
aaa
pop
lods
xor
sbb
jae
jae
sub
lret
jns
rcll
pop
jae
out
mov
mov
call
scas
mov
lea
pop
mov
jge
fistl
sbb
dec
cmp
and
xchg
fs
iret
cmp
lret
and
rcrb
idivl
jno
orl
mov
sbb
cmpsl
mov
jecxz
pop
inc
cld
rclb
aas
sub
xchg
cli
and
and
or
jp
dec
add
add
in
in
clc
ror
jb
push
sbb
sbb
push
cs
lret
push
xchg
dec
fisttpll
std
dec
sub
lea
dec
out
fisubl
pop
add
fs
subb
xchg
mov
je
icebp
mov
push
or
test
push
mov
popf
xchg
scas
add
inc
fdivrl
mov
push
cmc
fldt
sub
je
pop
out
xchg
cltd
sub
nop
pop
shr
dec
shll
mov
test
jns
fimull
dec
clc
lods
nopl
in
jbe
jle
xchg
loopne
popa
ret
stos
dec
lea
stos
je
movsl
in
daa
xchg
mov
cmc
push
scas
shrb
xorb
dec
pop
add
mov
aam
mov
add
mov
aad
lahf
dec
jp
repz
jg
outsl
mov
test
sub
dec
and
in
pop
dec
adc
imul
cmp
rorb
cltd
adc
ljmp
cld
lcall
loope
adc
aaa
and
and
mov
or
mov
enter
dec
xlat
aam
pcmpeqb
add
xor
xor
push
xor
inc
clc
ja
mov
xor
add
out
aad
xor
popa
lds
push
cltd
adc
mov
mov
sbb
sti
push
dec
jns
movsl
cld
inc
cltd
push
int
cmp
in
sbb
cli
sar
mov
jae
je
xchg
negl
test
dec
pop
sahf
inc
insb
mov
ret
pop
xorb
in
pop
mov
mov
rcrl
lahf
xor
ljmp
imul
hlt
fsubrs
push
mov
lret
in
imul
repz
xor
nop
fstl
and
xor
xchg
inc
stc
mov
scas
jp
fstpl
mov
mov
add
pop
subl
incl
aam
jmp
dec
mov
xchg
adc
jp
gs
orl
jl
inc
inc
insl
and
pushw
or
or
ss
andb
sub
aaa
fimull
or
in
cli
mov
inc
mov
into
dec
aas
ss
xor
inc
pop
and
pop
pop
mov
sub
mov
addl
xchg
dec
adc
xor
nop
rclb
lcall
push
cwtl
lock
pushf
fdivrs
or
push
mov
push
pop
dec
pop
and
sarb
cmpb
xchg
and
cmc
mov
gs
std
jecxz
sbb
fs
jno
adc
sub
push
movsb
pusha
mov
or
mov
sbb
popa
xlat
and
stos
inc
arpl
xchg
sbb
jecxz
mov
daa
inc
xorb
ret
into
imul
xor
iret
adc
pop
pop
clc
xlat
leave
repz
sbb
jl
lods
sub
dec
fisubrs
sbb
sbb
and
mov
ds
cmpsl
test
xor
and
adc
sahf
pop
lret
loop
dec
cmp
fs
xor
sub
sub
cmpsl
je
jle
push
insb
es
and
dec
jecxz
or
cwtl
sahf
pop
insl
mov
sub
js
pop
xorb
clc
mov
pop
and
loop
jmp
into
add
jae
jae
mov
lret
jae
mov
inc
pusha
jg
test
aad
call
mov
repz
or
cmp
divb
shl
shl
lret
imul
flds
inc
mov
xor
aam
push
int
pop
dec
insb
sub
leave
jmp
gs
lret
push
scas
lods
sbb
xchg
loope
or
out
and
pop
repz
or
push
lret
jp
cmp
xor
inc
add
gs
cs
cmp
scas
mov
test
dec
push
xchg
divl
jl
jg
or
dec
dec
xor
and
push
loop
pop
or
pop
or
pop
rclb
jp
add
mov
hlt
pop
lods
xor
add
and
gs
popa
jl
mov
sbb
in
pop
push
fs
cwtl
push
jnp
jp
divl
stc
lcall
mov
je
dec
out
jp
xchg
dec
jbe
mov
add
mov
shr
cs
xchg
xchg
sbb
dec
push
mov
insb
rcl
lea
mov
adc
rclb
sub
push
inc
filds
jo
inc
sbb
jp
push
aam
insb
add
push
push
es
mov
xor
fdivrp
cmp
push
push
cmp
add
cmp
int
enter
add
jne
sbb
or
cmp
fbld
enter
jg
cmc
lods
int3
mov
jne
mov
lret
popa
hlt
rcll
push
rorb
jmp
jne
pop
add
mov
scas
mov
roll
sub
adc
nop
jnp
mov
in
or
in
mov
xor
divb
mov
push
cmp
jle
and
sub
out
push
aad
xchg
js
incb
mov
mov
pop
lds
ja
test
lahf
mov
test
pusha
mov
lret
je
sub
outsb
xor
sbb
jb
scas
movaps
in
out
dec
nop
in
shll
sbb
mov
mov
repz
cwtl
or
or
jbe
push
gs
xor
or
lods
jmp
cs
hlt
pushf
or
and
fnstenv
cmp
fildll
clc
dec
mov
pop
cmpsb
insl
aas
fadd
popf
test
xchg
insl
fsubs
xor
aaa
mov
push
and
push
jg
clc
repz
fwait
mov
mov
dec
ret
xchg
pop
scas
shl
mov
jns
xchg
and
int
in
out
loope
clc
stos
nop
and
xchg
arpl
pop
flds
les
and
lea
jge
dec
pop
jne
jae
nop
jne
xchg
aam
cltd
sub
test
add
or
mov
adcl
lret
mov
icebp
iret
push
loope
sbb
lret
xchg
fstps
cmp
push
fcmovu
lea
cmc
loop
lods
or
loopne
pushf
repnz
mov
sbb
dec
add
test
mov
jae
gs
and
outsb
jne
in
cmp
mov
inc
mov
sub
ss
stc
cmc
mov
jg
dec
mov
sbb
or
out
jp
shlb
mov
and
cmp
or
jae
add
shrd
cmc
out
xchg
xchg
daa
pop
cs
fstpl
cmpsb
sbb
sbb
push
add
mov
mov
push
les
fs
pop
fdivrl
repz
movsb
leave
out
aad
inc
xchg
xchg
or
orb
enter
add
aad
out
dec
mov
xchg
daa
icebp
incl
sub
mov
cmp
stc
shll
dec
jl
lret
loop
xor
shll
sbb
sahf
mov
mov
push
sub
rclb
andb
sbb
aaa
adc
push
jae
xor
sbb
outsb
xchg
and
mov
xor
call
rorb
imul
lods
push
sbb
adc
sahf
adc
dec
aas
xchg
mov
mov
fdivrl
jo
popa
popf
and
jne
adc
fildll
jns
imul
pop
nop
shll
or
dec
pop
jno
sbb
leave
pop
push
ror
and
push
push
xchg
ret
xor
add
push
inc
iret
jmp
fs
stos
test
aad
push
in
popa
xchg
push
fwait
ret
cld
cmp
xor
mov
ror
mov
pop
stos
subb
mov
andb
xchg
aaa
adc
aas
jne
jecxz
push
add
pop
mov
mov
or
test
mov
sbb
push
mov
loop
sbb
fs
add
movsl
popa
sarb
push
lret
arpl
mov
cmp
lahf
lds
call
pop
sub
cmpsb
test
sbbl
stc
and
pop
xadd
je
push
cli
sbb
mov
shlb
adc
push
sbb
cmp
in
std
out
push
les
les
xor
xchg
ss
jns
push
jmp
mov
lahf
outsb
sub
addr16
sub
test
repz
add
or
mov
jnp
xchg
orl
adc
mov
xor
insl
movsb
ds
aaa
fnstcw
xchg
stc
sti
jbe
jnp
add
ffreep
pop
xchg
add
in
rcll
lret
in
icebp
test
aas
and
outsl
push
or
mov
xchg
and
loopne
jmp
sbb
push
mov
push
jmp
stc
shl
adc
sbb
icebp
push
mov
lret
loope
das
dec
sbb
inc
cmp
out
pop
pop
jmp
inc
dec
test
iret
pop
lea
cmp
push
mov
inc
inc
fnstcw
or
loopne
mov
adc
mov
out
xchg
inc
and
gs
rcr
or
push
jne
mov
fsts
repz
xchg
mov
pop
std
jo
test
cmc
mov
fists
xchg
shlb
dec
subb
jl
cmp
in
cwtl
lahf
mov
ja
mov
rcl
mov
push
nop
into
lds
adc
jg
rorb
lea
or
vpmacssdql
push
mov
fdecstp
jo
push
mov
jp
mov
jnp
aaa
lret
dec
sub
inc
xchg
cli
or
test
mov
into
mov
and
sbb
test
adc
test
jle
adc
call
cmp
sub
inc
and
mov
xchg
mov
add
and
cmp
cs
popf
pop
in
sbb
xchg
jns
xorb
popa
or
mov
jge
outsl
jle
mov
jecxz
cmp
pushf
cmpsl
leave
mov
out
jbe
or
movsl
xchg
xchg
add
int3
addr16
mov
addr16
test
popf
mov
or
into
dec
mov
pop
mov
xchg
mov
icebp
pushf
xlat
sub
mov
out
daa
mov
scas
inc
or
add
jle
test
jne
xor
push
inc
mov
outsb
jno
loope
arpl
or
mov
push
data16
pop
xlat
dec
cltd
dec
ss
lds
hlt
jmp
lahf
xor
push
daa
add
pop
outsb
sub
jb
mov
inc
clc
mov
sub
dec
jmp
push
loopne
loope
int3
xchg
dec
mov
imul
push
lock
mov
xchg
pop
or
dec
mov
add
gs
xchg
inc
cmpsb
loop
push
insl
lret
je
mov
gs
cmpsb
daa
jne
xlat
cmpl
ficoml
ljmp
pop
cwtl
add
and
cmpsb
cmpsl
xchg
add
sbb
sbb
enter
push
push
mov
out
movsl
mov
in
cs
data16
out
mov
leave
or
mov
jle
cmp
push
sti
call
push
mov
scas
scas
in
inc
dec
adc
dec
push
sub
mov
sub
jmp
inc
aad
xchg
test
insl
out
gs
mov
mov
scas
scas
jp
icebp
pop
xchg
add
mov
mov
sub
or
mov
add
cmp
popf
lods
cmpsl
int
pop
insl
fimull
hlt
cltd
sti
mov
mov
sub
sub
nop
loopne
faddl
jg
std
in
loope
scas
jecxz
cmp
and
out
aas
aam
cmp
cmp
or
adc
pop
pop
or
ret
mov
cmp
mov
pop
rcrb
pushf
ja
into
in
add
inc
notb
pop
dec
mov
add
out
and
adc
scas
mov
sub
movsb
cmp
lods
aam
add
lods
inc
sahf
enter
test
adc
test
cmc
and
in
xchg
dec
jnp
jae
pop
dec
mov
inc
ret
cmp
mov
mov
data16
aam
gs
pop
inc
loope
inc
push
push
outsb
mov
inc
test
into
int3
dec
ret
inc
outsb
push
push
xchg
xor
push
inc
lea
hlt
mov
sub
sbb
lds
enter
popf
mov
pop
imul
jl
xor
gs
push
das
mov
sub
xor
sbb
gs
shrl
fldenv
outsb
cmpsl
fnstsw
enter
scas
fsubrl
adc
dec
addr16
push
dec
sbb
test
cs
int3
push
fcmovnu
test
or
add
dec
inc
mov
adc
inc
sahf
mov
ja
insb
mov
jg
xor
xor
dec
or
mov
pop
cld
inc
mov
push
push
out
lret
pop
ss
stos
aam
stos
adc
and
mov
lods
fs
mov
js
ret
xchg
push
lcall
cmpsb
dec
inc
or
and
adc
test
push
loopne
xchg
pop
jnp
pop
xor
subl
in
loop
mov
pop
or
das
cltd
fistpll
ffree
pop
fstp
push
push
mov
sub
xor
push
pusha
fcmove
add
mov
mov
xlat
inc
push
push
push
je
push
cwtl
xchg
fsts
aas
scas
fidivrs
aaa
inc
pop
adc
xor
sahf
push
push
je
clc
and
loop
cs
or
push
sti
fs
call
mov
push
test
jb
sbb
loop
push
lds
test
cmp
dec
dec
loope
dec
mov
add
test
cltd
in
jnp
push
fidivs
pushf
mov
adc
mov
jo
jae
jae
cs
popf
insl
push
cmp
scas
out
cmp
mov
pop
or
jns
push
sbb
int3
jbe
in
nop
xchg
pop
ret
add
out
sub
mov
nop
mov
cltd
test
mov
push
rorb
xor
aam
push
cltd
mov
cli
dec
push
sbb
scas
inc
xchg
inc
popf
popf
outsb
and
sahf
imul
xchg
pop
jmp
add
xchg
add
fidivl
test
mov
jne
xchg
xor
jae
mov
sub
hlt
js
inc
sbb
imul
roll
mov
mov
and
loop
sub
imul
popf
cmpsl
cmp
jae
xchg
push
mov
frstor
test
dec
mov
shlb
push
pop
test
jbe
sub
cmpl
pop
enter
gs
loope
and
ficoms
pop
cld
sbb
adc
push
std
pusha
cmp
push
jne
cwtl
lcall
push
cltd
movsb
lock
pop
fstps
and
fs
pop
add
mov
sbb
jg
shrl
cmp
inc
mov
std
aad
into
out
pop
cmp
aam
lock
mov
xchg
sbb
addb
cmp
leave
inc
test
scas
enter
lea
push
imul
sbb
xor
out
shll
push
mov
fidivrs
in
pop
cli
mov
aas
loop
mov
mov
lock
jbe
lock
inc
rorb
aaa
fsubrl
repnz
xor
cmp
mov
fs
test
mov
leave
out
adc
movsb
cmp
sarl
xchg
sti
xchg
gs
fistpll
mov
adc
mov
rorl
mov
xor
mov
test
jecxz
sub
push
aad
sti
test
push
cmpsb
aaa
pushw
sbb
sahf
dec
icebp
cmp
bound
mov
pop
add
cmp
mov
andl
jmp
loop
xchg
jg
jnp
ret
scas
fcmovnbe
fsubr
insl
cli
sbb
clc
lds
out
jne
or
repz
xchg
add
add
xchg
icebp
xchg
sub
adc
mov
sub
pushf
sub
and
repnz
cmp
popa
adc
roll
mov
fidivrl
in
add
iret
test
mov
cltd
sub
add
inc
push
pop
ret
inc
add
push
cmp
nop
cmp
mov
pop
fists
cltd
popw
icebp
outsb
adc
sbb
inc
xchg
sbb
pusha
mov
aas
mov
outsb
mov
push
jle
rcl
sahf
adcb
loop
push
pop
lock
sub
scas
sub
ret
popa
imul
ret
pop
std
pop
in
pop
cmc
ret
lret
mov
lcall
or
xchg
loope
dec
scas
and
jno
and
pusha
ret
lahf
xor
pushf
ds
sbb
mov
mov
sti
outsl
js
les
loop
jp
adc
and
pop
jp
mov
add
push
clc
shlb
pusha
stos
stc
push
xorl
xor
or
mov
pop
aad
mov
sbb
btr
cmpb
test
push
fcoms
daa
mov
ds
pop
int
dec
int
aaa
btr
pushf
mov
add
aam
sub
sbb
and
in
loop
in
leave
shrb
bts
dec
and
push
xchg
es
sbb
mov
std
adc
add
inc
sbbb
cmpsl
push
out
lock
out
hlt
mov
test
push
pop
push
outsl
inc
mov
fs
lea
in
xchg
aaa
arpl
mov
push
cmpsl
aas
xor
jecxz
popa
jo
jmp
popf
in
nop
ds
or
mov
andl
ljmp
out
hlt
mov
adc
imul
fwait
adc
pop
pop
mov
mov
fisttpll
cmc
inc
ss
cmp
inc
push
inc
mov
push
pop
repz
les
test
sub
add
cmp
movsb
add
add
in
dec
jmp
js
sub
incl
push
pushf
ficompl
outsl
jb
jg
and
je
jns
test
xchg
mov
jo
pusha
daa
mov
dec
pop
mull
loope
fiaddl
and
fwait
insl
xor
or
mov
jle
inc
out
mov
in
inc
cs
add
inc
enter
sub
out
xchg
out
jnp
mov
fimuls
pop
mov
pop
movsl
test
lahf
imul
mov
xchg
jge
mov
shlb
mov
loope
dec
jns
dec
adc
test
lahf
test
sbb
inc
addr16
stc
lods
in
popa
adc
into
mov
in
lods
mov
sub
xorl
scas
int3
scas
addr16
mov
call
gs
push
mov
mov
ss
inc
xor
sub
cmp
cmc
imull
bound
push
sti
adc
in
dec
outsl
mov
sub
jg
or
test
inc
fisttps
xor
jg
shl
sbb
xor
bound
inc
movsl
mov
mov
inc
mov
or
mov
ss
adc
xchg
out
push
sbb
popa
aam
lcall
jb
adc
fimull
movsl
mov
add
push
dec
lahf
mov
rcrb
jge
pusha
and
xchg
inc
and
xor
stos
cmpsb
push
test
aas
lret
pop
lea
hlt
push
jbe
icebp
icebp
adc
inc
mov
xor
pushf
xchg
jnp
push
shlb
loop
inc
ficompl
adc
jge
aad
pusha
mov
push
fcompl
iret
test
add
nop
shl
fidivrl
js
stos
xor
clc
outsb
sub
and
push
outsb
mov
xchg
lcall
call
xchg
ss
and
rorl
jg
fldl
test
jmp
jge
movl
movsb
loopne
push
and
leave
jecxz
jge
inc
or
jp
sahf
nop
outsl
adc
sbb
in
sbb
lock
lods
xorl
repz
mov
mov
lcall
inc
icebp
lods
fsubr
jge
outsl
push
icebp
push
fcmovne
lods
or
nop
or
int
jmp
xchg
ss
movsb
iret
lds
adc
fsubrl
shl
mov
data16
lahf
add
orl
and
adc
lea
inc
addr16
push
mov
push
sub
and
adc
iret
arpl
mov
test
pop
aas
pop
dec
in
fcoml
mov
cltd
pop
push
vpcmpeqw
in
cli
out
add
mov
add
jge
inc
repz
pushf
imul
mov
xorb
call
push
xor
sbb
pop
lods
rorl
sub
or
add
shrb
mov
dec
xchg
sub
jnp
ljmp
push
std
imul
dec
mov
dec
xor
cmp
push
lock
outsl
clc
and
fsub
mov
xchg
scas
pop
dec
and
jnp
or
inc
jge
dec
loop
inc
les
cmp
dec
adc
push
push
ret
jle
xchg
aam
inc
or
inc
mov
mov
fsubl
les
sub
jno
aas
mov
fstl
xor
xchg
mov
enter
jb
add
jecxz
or
push
sbb
arpl
jnp
adc
xor
cmp
mov
add
sbb
adc
mov
test
hlt
ret
xor
push
insb
push
and
lds
nop
and
add
cmp
mov
adc
lea
xor
mov
xchg
out
popa
hlt
xor
adc
push
cltd
imul
cld
arpl
sub
xchg
sahf
dec
jge
bound
mov
dec
daa
out
inc
out
arpl
stos
dec
jo
cltd
mov
das
int
dec
ljmp
adc
cwtl
inc
cmp
add
mov
inc
int
fimull
bound
pop
aaa
hlt
xchg
sbb
sub
cltd
jo
rcrl
shr
out
mov
sbb
mov
stos
mov
dec
and
adc
sbb
lock
inc
lret
push
sbb
xchg
push
popa
cmp
xor
scas
aas
pop
jno
mov
popf
push
add
sbb
scas
push
fxch
pop
scas
js
push
dec
adc
fnsave
and
mov
mov
mov
mov
cmp
fs
fisubl
lret
dec
movsb
sahf
pop
mov
cmp
stc
adc
lret
and
fucomip
fisubrl
xchg
stos
gs
ja
test
fcoms
mov
pop
mov
add
xor
xlat
jnp
ret
xchg
dec
lahf
inc
les
repz
popf
leave
sbbb
push
cmc
pop
std
rcrl
stos
ficomps
mov
xor
and
enter
dec
dec
leave
loope
xor
aam
mov
jmp
fcompl
pushf
add
push
enter
mov
ss
das
out
stos
imul
std
pshufw
jle
dec
pop
jp
das
mov
add
movsl
lcall
pop
fnstenv
pop
andl
fldl
cmp
or
mov
icebp
xchg
rolb
outsb
shll
rclb
xchg
xchg
mov
push
push
mov
xlat
lods
stos
push
out
les
aad
std
xchg
lods
mov
in
dec
ss
adc
push
mov
add
jmp
sbb
rcrl
inc
sbb
push
cli
in
push
inc
je
jbe
mov
scas
mov
test
negb
cli
sahf
pushf
mov
push
std
pop
push
sti
cmp
frndint
jo
and
jo
jns
movsb
push
std
stos
mov
mov
lds
jo
les
mov
fmull
or
cltd
call
mov
add
shrb
fs
xchg
mov
pop
push
mov
inc
inc
lods
inc
out
mov
xchg
adc
sbb
test
add
dec
and
addr16
sub
mov
xlat
ret
mov
das
fstps
nop
jp
idivb
ds
jmp
pop
dec
and
cltd
cmpsl
inc
jne
or
scas
outsl
jmp
mov
test
jp
add
cs
rcrl
pop
std
cmpsl
inc
push
mov
jmp
dec
and
mov
and
negl
and
hlt
sbb
push
dec
xor
jmp
ss
add
mov
fldenv
push
inc
mov
xchg
leave
push
add
icebp
cmp
pop
loope
jg
and
sbb
jae
les
or
sub
pop
mov
xor
cltd
bnd
cmp
add
testl
xchg
mov
fiadds
inc
lods
mov
mov
or
xchg
call
mov
push
int3
fimull
test
push
push
mov
ss
push
dec
ret
pusha
or
stos
lods
cwtl
ret
xor
ss
test
gs
lret
out
cli
stc
mov
mov
push
push
add
inc
xor
xchg
mov
xchg
test
int
in
and
call
xchg
call
call
mov
insb
mov
pop
scas
and
pop
cmp
xor
fcoms
push
enter
add
sbb
mov
ret
adc
and
xchg
sahf
mov
ja
scas
mov
cmp
lahf
add
in
loop
sbb
clc
push
lret
mov
xchg
mov
mov
gs
and
cmpsb
mov
pusha
sub
and
in
inc
int
or
ret
sbb
adc
sti
pop
push
jne
pop
dec
push
push
pop
les
mov
in
mov
mov
stos
in
jmp
dec
fnstcw
or
inc
xchg
mov
xor
xchg
lcall
fwait
jne
rcll
xor
cmpsl
push
imul
out
loopne
xlat
lock
xor
xor
mov
mov
add
cli
inc
jmp
test
fwait
xor
out
cmpsl
in
loope
je
cmp
xor
jl
sbb
jno
mov
mov
dec
sbb
icebp
mov
xlat
arpl
ljmp
pop
inc
mov
jmp
loop
adcb
jmp
aas
push
fsubl
mov
push
push
cld
add
inc
insb
les
in
movsl
clc
add
sbb
js
mov
popf
outsl
cwtl
jb
cmp
cmp
fiaddl
sub
jg
outsb
xchg
and
push
test
cmp
push
scas
popa
ficoms
dec
xchg
notb
and
ds
jbe
lock
loop
jl
mov
rcr
jb
jp
testb
sbb
lods
or
jbe
bndstx
push
jae
fwait
pop
dec
flds
int3
in
aad
icebp
pusha
xchg
fsubl
rclb
push
lahf
and
arpl
repnz
push
sub
jl
hlt
mov
xchg
into
dec
rorb
add
cld
iret
roll
insl
lcall
cmp
and
into
pop
mov
push
popa
jle
stos
dec
loope
or
and
out
repz
cmp
adc
addr16
dec
es
cmp
outsl
mov
in
jmp
sub
push
xor
icebp
adcb
mov
sub
dec
loopne
aas
daa
pop
mov
or
xchg
mov
test
sbb
mov
ds
push
jg
cmp
sbb
and
ret
shrl
adc
inc
scas
add
repnz
lahf
dec
xchg
mov
push
xor
out
dec
lds
hlt
test
xor
dec
popl
xchg
out
jno
fsubrs
adcl
out
or
int3
rorb
and
jno
dec
es
popa
inc
add
ret
mov
inc
inc
pop
stc
lcall
push
loop
mov
xchg
adcb
push
ret
jbe
in
rcrb
xorb
data16
pop
pop
and
dec
imul
inc
mov
jl
div
inc
mov
pop
or
fsubrl
inc
push
fildl
push
mov
mov
add
cmp
jg
and
jae
mov
pop
lods
ret
mov
push
pop
sub
test
orl
pop
imul
mov
test
adc
pop
shlb
stos
out
fsubrl
sbb
sahf
push
ss
adc
ljmp
mov
push
dec
jp
xlat
dec
int
popa
repz
adc
adcb
outsb
xchg
sbbl
sub
inc
mov
cwtl
mov
outsl
mov
sbb
pop
pop
inc
push
int3
dec
mov
std
xchg
inc
inc
cmp
dec
mov
push
add
jne
cld
cmp
xchg
test
das
and
repz
adc
or
nop
jg
push
xor
cmc
dec
xor
jnp
xor
jo
cwtl
icebp
xor
push
addr16
or
push
outsl
push
push
lcall
pop
fisttps
fisubl
int3
iret
cmp
imul
dec
scas
pop
mov
call
mov
jge
stc
mov
push
sbb
jne
inc
sahf
data16
push
push
sti
sub
and
test
js
loope
test
dec
mov
add
mov
dec
mov
repz
testl
sbb
inc
push
xlat
xor
mov
je
inc
loopne
lret
fcomi
pop
mov
notl
inc
negb
push
out
jl
stos
mov
aad
roll
sbb
cmc
sub
mov
or
cmpsb
sti
adc
fmulp
inc
icebp
mov
adc
pop
push
movsb
repnz
adc
loope
mov
mov
and
dec
dec
lea
andb
add
outsb
and
es
xor
insl
scas
fbld
sbb
insb
dec
imul
scas
mov
mov
test
and
negb
sbb
test
lods
test
rcrb
rclb
test
aad
int
adcl
adc
loope
cltd
cmp
push
testl
cs
push
fcompl
push
popf
adc
sahf
mov
xchg
jge
sar
pop
pop
push
aas
and
loope
or
sub
ss
lret
shrl
cmp
mov
pop
mov
popa
test
lret
rorl
mov
xlat
mov
movsb
pop
shll
pusha
mov
push
cmp
push
sub
xor
push
outsl
add
jle
movsl
mul
scas
std
add
dec
jno
jmp
xor
scas
cmp
bound
pop
add
outsb
pop
sub
nop
sub
add
jp
xor
repz
pop
ja
setno
pop
lcall
mov
out
mov
mov
clc
call
lock
repnz
dec
mov
cmpsb
and
pop
push
pop
cmpsl
fsub
ds
jmp
out
popa
out
les
imul
aam
jae
fistpl
mov
in
lods
gs
int
ds
jg
in
nop
sub
addr16
pushf
movb
jmp
shr
rclb
leave
jg
jo
fisubrl
lods
xor
xlat
negl
mov
mov
fidivrl
test
aam
ja
pop
std
not
mov
dec
arpl
aaa
xor
dec
jg
testl
adc
aas
xor
cmpsl
sub
lock
adc
and
stos
fwait
pop
cmp
iret
jle
sti
mov
jo
xchg
sti
stos
jns
jne
and
push
mov
jge
pop
clc
adcl
jp
pop
xor
sbb
mov
push
fucomi
mov
in
rol
int3
lahf
push
and
dec
mov
mov
pop
mov
push
sub
push
inc
sub
sbb
mov
dec
out
lds
icebp
cs
jb
cmp
add
mov
push
dec
data16
or
outsb
cld
neg
jns
mov
fucomip
inc
and
insb
cmp
nop
hlt
jbe
loope
mov
pop
inc
loopne
jnp
jnp
sub
sbb
adc
xchg
sub
pop
push
mov
dec
cmp
mov
out
mov
and
mov
ja
push
je
loope
ja
dec
iret
jbe
cltd
xchg
ss
pusha
adc
push
and
ljmp
test
mov
pop
test
jp
jae
inc
xor
jg
imul
mul
dec
out
mov
and
push
movsl
dec
fimuls
jmp
jns
out
pop
jg
jl
cli
out
shlb
iret
sbb
mov
mov
cld
adc
xor
mov
icebp
stos
cltd
and
cmc
jle
xorb
loope
bound
mov
fbld
mov
aam
add
pop
jecxz
lods
cs
pusha
push
shl
int3
stc
pop
push
loopne
or
fcoml
push
pop
mov
pop
fdivl
cs
sbb
fs
aaa
mov
mov
lds
call
mov
jb
fwait
dec
sarb
aaa
sbb
data16
jno
fidivrs
jbe
fstl
ret
inc
mov
rorl
xchg
fdivr
xchg
fmuls
pop
add
cwtl
xchg
xor
sahf
sti
push
mov
add
imul
aam
mov
es
push
xchg
mov
jmp
scas
call
test
loop
in
fisttpll
iret
jp
aaa
push
sbb
test
shrb
test
dec
inc
lods
and
mov
daa
mov
mov
imul
cmp
mov
hlt
or
in
es
adc
clc
out
lcall
push
xchg
dec
repz
in
cs
mov
andl
iret
cmpsb
dec
mov
aad
nop
dec
sbb
rolb
mov
jae
cltd
jnp
xor
mov
mov
jecxz
pop
shrb
or
rorl
push
les
mov
mov
dec
iret
js
cltd
cmp
je
pusha
into
pop
call
stc
pop
repnz
xor
xchg
inc
stos
jl
aam
push
and
and
sahf
pop
jge
or
sbb
xor
xchg
xlat
and
movd
jb
pop
insb
inc
and
or
dec
add
mov
xor
lret
pop
sti
ss
xor
mov
sbb
push
out
in
fucomp
jb
xor
mov
lods
loope
sub
nop
mov
adc
dec
es
sbb
lret
aas
pushl
js
lret
insl
dec
fiaddl
fwait
pop
jns
outsb
cwtl
shll
lea
imul
inc
ljmp
fnstsw
mov
ljmp
xor
cmpw
fldenv
xchg
cli
sbb
test
xchg
mov
mov
xor
push
hlt
cwtl
imul
daa
addr16
int
cmp
xchg
sbb
add
movsb
or
test
out
popf
sbb
pop
lock
addl
sub
sahf
adc
xlat
repz
mov
cmpsb
cmpsb
dec
mov
dec
hlt
jle
lret
int
mov
dec
lock
fs
int3
jns
nop
fistps
arpl
jge
mov
cmp
xchg
fisttpl
or
shrb
pop
sub
ljmp
test
repnz
cs
xorb
xlat
lds
or
adc
push
xor
pop
leave
mov
mov
test
repz
out
insb
cli
mov
cmc
jle
jnp
jp
mov
inc
sub
xor
shrl
aad
pop
adc
or
lret
out
test
or
jp
int
test
aaa
divl
jle
mov
lods
das
out
sub
out
imul
into
inc
or
loopne
iret
push
out
imul
hlt
fstpt
inc
iret
sub
out
lret
rclb
lret
jns
ret
sbb
and
js
sbb
arpl
dec
outsl
dec
mov
mov
es
pop
fwait
inc
hlt
andb
jne
loopne
aas
xchg
cwtl
fwait
push
out
dec
mov
and
popf
lret
push
fisttps
mov
ljmp
lods
xchg
in
in
popa
aam
int3
cmp
daa
mov
hlt
xor
jb
add
jg
and
iret
ror
cld
dec
sbb
jge
outsb
push
mov
pop
pop
xchg
cltd
test
jnp
mov
xor
add
pop
icebp
and
pop
divb
push
data16
and
out
jl
inc
faddl
xchg
jae
jnp
pop
iret
in
fwait
arpl
jg
jo
lds
fcompl
xor
jmp
lcall
pop
punpckhbw
push
sub
not
lret
cwtl
cmpsb
les
inc
push
popf
mov
pop
sahf
or
and
add
fildll
enter
sub
lahf
mov
sub
dec
sahf
movsl
insb
xorb
out
mov
insb
lahf
jp
jb
inc
into
stos
mov
pop
adc
pop
sbb
fwait
push
ja
fnclex
push
xor
imul
push
arpl
jbe
pop
dec
push
aad
mov
add
mov
push
dec
test
or
imul
je
nop
or
or
adc
push
dec
out
xchg
pop
push
imul
lahf
push
test
xor
aaa
and
sub
rol
or
inc
lcall
orb
pop
imul
jl
add
in
xorb
cwtl
sahf
adc
and
pop
lock
adc
iret
mov
sti
lods
sahf
stos
std
jp
sarb
xor
dec
aam
add
mov
insl
outsb
push
jo
adc
int
jnp
lcall
addr16
data16
addr16
cmp
xchg
mov
cld
pushf
cmp
sub
xchg
pop
enter
cltd
popa
nop
cmp
iret
push
pushf
sub
xor
fsubr
mov
push
popa
sbb
or
scas
insb
cmp
in
popa
out
cmpsb
inc
shrb
jmp
xor
lret
insl
popf
stos
jp
pop
pushf
insb
fimull
sti
repz
adc
jg
scas
adc
cmpsb
jbe
xor
rclb
out
imul
mov
cmp
xor
hlt
paddsb
subl
push
test
outsl
jae
fisttpl
pop
into
dec
mov
mov
scas
or
push
adc
xchg
imul
mov
mov
jmp
mov
mov
sbb
test
jno
fistl
int
and
ljmp
inc
repnz
ljmp
xlat
sbb
jmp
ret
jp
jno
cmp
mov
sub
xchg
adc
dec
fsubrs
cmpsb
jl
lock
in
fsts
mov
xor
cwtl
cltd
cmp
cmp
in
mov
jns
push
sbb
fistpl
fstpt
mov
notl
sbb
fstpt
push
mov
pop
jne
inc
jns
add
vpmadcswd
rol
icebp
das
mov
andl
ss
mov
cmp
xor
shll
shll
jns
shr
call
and
jg
enter
in
mov
xor
hlt
outsl
scas
adc
mov
enter
add
pop
mov
push
adc
or
ja
ljmp
shlb
sub
add
jl
fstpt
loop
pop
ss
inc
shr
push
jns
add
xor
nop
push
gs
ret
sti
mov
jbe
and
jo
dec
leave
jmp
stc
jbe
xlat
pop
cmp
adc
test
nop
fcompl
das
jno
mov
cltd
fnstenv
fiaddl
std
mov
das
cmp
xor
mov
jle
pop
jle
std
movsb
adc
aaa
popa
mov
jne
or
xor
pop
xor
cmp
mov
cmpl
fcomps
inc
out
cmpsl
leave
cltd
paddusb
mov
jns
jnp
fwait
inc
test
push
push
setl
jne
lds
aad
xor
bound
jmp
fiadds
sub
gs
pop
cmp
stos
cmpsl
rolb
into
lock
enter
test
clc
mov
out
idiv
mov
and
stos
mov
je
out
push
ret
or
xchg
jmp
js
jmp
mov
cltd
pushf
sbb
dec
repnz
test
lods
aas
or
sbb
out
and
ret
push
shll
xchg
sub
xchg
jns
mov
adc
push
int
add
int3
mov
in
and
inc
mov
inc
and
call
jmp
xchg
mov
loop
push
mov
fmulp
movsb
je
imul
mov
fsubs
cli
clc
mov
sbb
add
fisubl
jo
sub
les
stos
pop
lock
jecxz
iret
lods
in
add
mov
int3
stc
cs
fbstp
into
lret
fwait
lahf
icebp
pop
push
decl
jbe
jns
in
xbegin
push
push
lea
pop
fcoml
rcrl
out
out
sbb
lock
in
imul
mov
sub
mov
push
cs
out
fsubrs
jne
ret
mov
cmp
inc
or
jl
cs
cmp
sbb
add
cvtpi2ps
ret
xlat
adc
sbb
mov
call
in
ljmp
inc
push
xchg
add
add
jno
sub
inc
fcmovnu
nop
mov
ja
cmp
scas
and
lea
and
mov
mov
testl
jle
sbb
inc
les
mov
cs
pushf
loopne
clc
pop
or
dec
mov
xor
jge
cmp
or
lea
sti
or
xchg
fdivrs
inc
pusha
shlb
std
adc
loopne
pop
testl
shll
dec
sbb
fstpt
dec
or
testl
stc
jle
leave
scas
jbe
and
aaa
or
and
scas
xchg
scas
pop
fcmove
addr16
or
and
or
xchg
push
gs
ds
xor
mov
bound
mov
cmp
cmp
mov
das
push
call
test
mov
aas
pop
jle
mov
and
push
into
jno
xchg
clc
insb
cltd
push
adc
and
or
loope
jg
adc
mov
idivb
push
lahf
xchg
mov
jge
and
jbe
aam
lock
jge
xchg
pop
mov
inc
mov
adc
inc
iret
js
je
sub
adc
mov
jecxz
imul
mov
nop
decb
sbb
add
dec
push
aas
into
jl
sbb
and
js
mov
cwtl
lcall
cs
cs
push
xor
xlat
xor
mov
sbb
mov
xchg
ret
fisttps
inc
in
leave
fmuls
sub
sub
ficomps
fidivrs
imul
cmp
jge
repnz
fidivrs
insl
adc
xor
xlat
shll
cmp
insl
insb
repz
sub
mov
fwait
inc
dec
xor
cmp
std
mov
repz
pop
mov
inc
xchg
popa
jne
test
sbb
or
or
cmp
xor
adc
cmp
outsl
cmp
jno
mov
or
iret
pop
std
ror
leave
inc
cmp
jno
mov
loop
mov
mov
repnz
or
stc
fwait
sbb
jb
dec
add
icebp
mov
dec
bound
add
jno
call
hlt
jne
inc
mov
fiadds
dec
fwait
movsl
cwtl
in
andb
orl
xlat
std
or
xchg
test
adc
jno
cwtl
dec
xchg
rcrb
stc
cmpsb
clc
popf
add
jge
cmp
mov
add
pusha
out
popf
ds
clc
stc
arpl
add
xchg
inc
cmpsb
mov
icebp
pop
idiv
mov
sbb
ret
adc
lds
pop
cmp
adc
divb
pop
jp
pop
movsb
sti
mov
test
outsl
aad
jp
mov
loop
inc
rol
jge
shl
outsb
add
ljmp
psadbw
or
and
add
adc
cmpsb
icebp
sub
mov
ret
aaa
adc
add
mov
js
mov
mov
adc
cmpsl
add
add
mov
dec
pop
not
adc
mov
cli
cmpsb
jmp
push
rorb
xchg
mov
xor
stos
out
pop
jns
and
inc
cmp
dec
jo
jbe
insb
ds
push
ret
insl
out
icebp
xlat
mov
pop
into
xlat
and
into
or
pushf
xchg
push
mov
mov
mov
test
dec
pop
xchg
into
nop
jno
jnp
mov
pusha
pop
fldt
pop
insl
cmpsb
adc
movsl
inc
nop
xchg
aad
pop
popa
add
test
dec
ret
adc
fmull
das
adc
fsubl
movsb
or
mov
out
jns
xchg
dec
sbbl
aas
mov
sahf
pop
pop
pop
cmp
je
loope
push
cmp
and
das
push
std
daa
out
fs
jbe
repz
divl
mov
out
dec
inc
iret
jo
or
popa
daa
lea
jae
mov
jmp
lods
xchg
adc
jnp
lret
or
sarb
vmwrite
test
ret
iret
ret
movsb
out
push
dec
adc
stos
loopne
cld
cmpl
cltd
mov
mov
ret
in
inc
aad
fsubs
dec
imul
mov
fdivr
inc
dec
mov
les
lcall
popa
sbb
mov
cltd
mov
sbb
push
add
push
adc
iret
push
mov
push
jp
lock
jbe
je
test
shll
cmp
mov
add
push
test
xchg
andb
mov
jo
pop
pop
mov
cmp
ja
pop
pop
test
mov
adc
mov
loop
sbb
mulb
adc
or
stos
cmp
das
xchg
jecxz
mov
adc
popf
cwtl
sbb
aas
test
nop
inc
int3
lret
xor
sbb
sub
pop
ret
jmp
neg
cmpl
jbe
ss
mov
scas
aam
call
mov
psubd
test
sbbb
cld
sbb
lret
aam
in
pop
outsl
out
inc
repz
imul
push
mov
dec
jb
push
int
jl
cs
inc
mov
dec
js
enter
cmp
les
jecxz
xchg
data16
lea
sbb
jmp
adc
add
aad
push
cmp
pop
pop
mov
dec
xor
and
nopl
push
repz
mov
fs
popa
jecxz,pt
dec
dec
xchg
add
in
inc
mov
push
pop
out
jb
push
fs
sbb
adc
and
fcmovbe
sub
jle
mov
adc
pop
fs
sbb
cmpsb
in
mov
pop
outsb
mov
dec
mov
and
inc
adc
dec
in
data16
dec
mov
dec
ss
cmp
push
fsubrl
sahf
push
decb
test
xor
test
test
inc
iret
cmp
add
clc
cltd
pop
fstpl
arpl
and
and
mov
out
insl
add
cmp
ja
add
test
or
xor
push
push
cmp
sbb
sbb
or
lock
scas
rorb
xchg
stc
push
popf
mov
dec
mov
in
lcall
push
hlt
pop
sbb
hlt
notb
stos
inc
std
push
fsts
subl
lcall
movsl
cwtl
gs
push
and
pop
xchg
shrl
xchg
cmpsb
gs
jno
push
mov
xchg
add
outsb
movzwl
insb
sbb
xchg
push
ret
ljmp
jge
aam
in
sub
xchg
mov
dec
fidivrs
xlat
push
inc
dec
jl
inc
jmp
rcll
xchg
xchg
ds
es
scas
jno
dec
ss
dec
sti
outsb
xchg
or
jb
cmpsl
cmpsl
int
test
je
sub
adc
cmpsl
mov
sub
sahf
xchg
mov
jmp
mov
jne
jp
inc
loope
dec
out
popa
call
mov
jge
clc
jle
mov
mov
int
lods
jno
push
rep
xchg
movsb
jle
test
shrb
mov
scas
adc
pop
bound
das
rol
jl
cli
pop
cmp
add
xor
sub
movsl
imul
lcall
jl
xchg
sub
lods
xchg
jns
bound
repnz
cmpsl
cmp
addr16
push
mov
mov
and
inc
mov
sahf
pop
pushf
add
adc
icebp
test
inc
ss
sub
ret
push
jmp
sub
pop
ret
jnp
push
call
pop
pop
mov
dec
scas
addr16
movsl
out
loop
xlat
es
mov
push
aam
and
xor
jmp
sbb
or
lcall
outsb
test
fcomps
mov
movsb
cmpsl
jg
push
cmp
xchg
and
call
aad
jp
push
jmp
dec
inc
pushf
and
je
aas
push
scas
out
mov
lret
sahf
lcall
mov
lods
jne
pusha
xlat
pop
rcrb
sub
inc
fidivl
out
fs
jmp
mov
popa
inc
sbb
sbb
push
sub
mov
mov
lds
out
and
call
popa
dec
and
jns
insb
fcoml
dec
or
jmp
sti
loopne
ret
popa
das
call
imulb
fmull
and
sbb
gs
dec
divb
nop
ljmp
cmp
xor
fs
xchg
xlat
xchg
clc
incl
loop
cmc
in
nop
mov
xlat
push
imul
jecxz
inc
push
xlat
xchg
sub
cs
jns
int
cmp
ficoml
or
mov
sub
pop
divl
mov
adc
push
push
lcall
test
dec
shl
hlt
dec
fidivrs
lea
std
push
and
mov
leave
sbb
mov
fcomps
mov
repnz
and
xchg
push
sub
imul
ret
push
xchg
pop
and
jns
inc
adc
or
outsl
jecxz
lret
push
sbb
cli
mov
cmc
mov
mov
dec
into
mov
sub
push
bound
jno
add
dec
add
mov
mov
push
jge
xorl
add
xor
in
add
roll
rcrl
test
jnp,pt
pusha
out
mov
outsl
inc
or
add
and
xchg
mov
mov
rcr
sbb
xchg
push
adc
aas
jae
in
popf
sbb
lret
and
test
lahf
sub
sub
jg
dec
adc
jmp
dec
lcall
repz
dec
push
lret
mov
fwait
ror
jg
lods
jne
cmp
cmc
imul
sub
hlt
imul
xchg
or
call
int
mov
bound
imul
leave
testb
pop
shll
rorl
insb
lret
adc
push
imul
imul
repnz
xchg
out
xorb
nop
inc
jge
mov
je
shll
aaa
pop
xor
daa
mov
xchg
mov
adc
cmpsb
dec
push
test
adc
test
pop
fdivrs
or
push
shr
push
add
into
mov
mov
mov
repnz
test
adc
cli
scas
jge
pop
insl
fcmovb
das
and
add
scas
jg
push
stos
lods
xchg
sahf
sub
pop
jmp
xchg
pop
lds
mov
push
inc
mov
adc
std
xchg
jbe
add
je
sar
aam
and
adc
push
push
sti
dec
inc
xorb
pop
pop
xchg
test
mov
add
lods
insb
lea
inc
dec
mov
ret
jecxz
pop
dec
push
movsb
jge
aaa
test
jg
add
xor
inc
dec
lcall
jae
pop
cwtl
flds
insb
nop
add
mov
and
xchg
loopne,pt
inc
push
lods
push
sbb
add
fsubrs
pop
stc
bound
ret
cmpsb
pushf
imul
pop
pop
dec
mov
jbe
js
ds
add
xchg
inc
vphaddubd
mov
jne
or
imul
ja
orb
jne
sub
shrl
push
test
cltd
cmp
mov
xchg
sub
jb
ficoms
ja
cmp
sbb
mov
pop
adc
subl
push
fidivrs
mov
push
dec
popf
push
cmp
jns
mov
call
dec
repnz
dec
adc
shl
sar
nop
mov
cmp
and
popa
dec
jl
push
int
xor
sub
push
out
pushf
and
push
lock
mov
xchg
lret
aaa
addr16
sub
and
mov
sbb
stos
popa
aas
inc
dec
jge
lcall
outsl
stc
in
sahf
arpl
jo
ja
add
mov
fsts
test
cmp
shll
jp
out
inc
arpl
jmp
push
push
push
rclb
adc
sbb
sub
mov
sti
ja
gs
mov
or
dec
cli
shl
push
xor
lret
lret
pop
mov
pop
int3
sbb
mov
push
cmp
and
or
cltd
in
sbb
pop
adc
sbb
stos
or
into
lds
dec
lods
call
pop
or
mov
scas
push
cltd
jbe
enter
and
mov
shl
mov
dec
adc
xchg
addl
pop
fisubs
mov
iret
scas
pop
lret
add
rol
jne
scas
gs
mov
imul
mov
or
push
jg
cmc
je
insb
stos
lret
xchg
aaa
imulb
jmp
andb
adc
adc
in
shrl
call
inc
mov
notl
decb
xchg
xchg
jg
aad
jae
mov
mov
lret
push
mov
hlt
fldenv
push
push
add
mov
dec
insb
sbb
inc
push
stos
imul
sbb
cmp
mov
add
add
ljmp
shll
test
imul
xchg
ss
arpl
xor
jecxz
clc
add
jge
adc
lahf
dec
push
sti
and
dec
adc
xor
int3
int3
or
or
xchg
lret
adc
clc
pop
push
add
aam
dec
pop
jmp
mov
ss
ds
mov
shlb
movsb
mov
insb
ret
dec
jae
xchg
xchg
jb
add
fdivs
jecxz
cmc
clc
mov
or
dec
adc
jg
inc
sahf
arpl
cltd
pop
incl
iret
clc
lcall
cmpsb
stos
add
fldl
add
mov
cmp
cmp
cmpsb
xorb
mull
push
xchg
mov
sbb
dec
inc
xchg
call
aam
xor
mov
mov
xor
ss
rorb
xchg
inc
subl
sbb
test
arpl
cld
pop
aas
adc
xlat
decl
xor
xor
jae
je
out
mov
xor
jge
or
fisttps
sbb
pop
addl
mov
test
divb
aas
cmp
test
adc
addr16
addr16
flds
sahf
pushf
cmpsb
loop
loop
cmp
mov
lock
mov
loope
mov
leave
movsl
dec
pop
cmc
pop
xchg
cli
in
jmp
adc
sub
cwtl
mov
mov
das
xchg
mov
popf
push
sub
mov
cmpsb
aas
fisttpll
inc
rcrb
outsb
jmp
mov
leave
call
pop
sub
sbb
push
xchg
ljmp
mov
adc
es
sub
mov
popf
jge
loop
lcall
sub
xor
int
mov
adcb
add
imul
fisttpll
pop
cmp
mov
jnp
cli
test
fldt
push
lret
dec
xchg
outsb
xchg
xchg
mov
stc
je
clc
add
add
mov
mov
or
push
mov
sbb
adc
sub
jns
rcl
fsubrs
mov
lret
test
mov
mov
insl
fadds
in
stc
xchg
cmpsl
pop
pop
xor
lret
lret
in
jp
mov
inc
aam
iret
mov
pop
in
mov
and
scas
jbe
fldl
inc
in
xchg
cli
pop
aam
fdivrp
lcall
fadds
mov
fdivrs
ret
mov
add
xor
cmp
fucomip
jg
or
pop
push
push
push
or
adc
or
xchg
outsw
aas
xchg
inc
sub
xchg
xchg
fimuls
insl
imul
cmc
mov
pop
daa
leave
jle
pop
xor
out
jno
push
jns
nop
and
xor
adc
and
rcll
and
in
je
adc
xchg
mov
scas
jg
leave
or
jmp
loope
sbb
inc
outsl
sarb
xchg
dec
add
push
in
pusha
push
jp
lret
in
jae
addb
jne
cmp
aam
lea
xlat
xchg
xchg
xor
mov
push
adc
sub
aad
push
jp
jmp
cld
mov
out
dec
or
cmp
sti
sarb
sbb
mull
enter
sub
int
imul
cld
pushf
push
into
out
mov
into
jno
ljmp
adc
inc
mov
adc
pop
inc
pop
int
icebp
xor
sbbb
sarl
cs
mov
xchg
push
aam
sbb
jae
cltd
jmp
addr16
add
shl
inc
ja
cld
fcoml
outsl
cmpsb
xor
sbb
cmp
lcall
lds
insb
mov
fadds
es
jnp
xchg
and
pop
loopne
rcll
cmp
pop
jl
repnz
out
and
lret
dec
lahf
jno
scas
leave
iret
sub
out
xchg
lods
xchg
sbb
in
pushl
pop
lds
shr
lret
inc
push
pop
jge
or
sar
orl
pop
xchg
rcl
ror
push
fsubrs
hlt
aaa
cld
mov
push
fcompl
ficoml
adc
insl
inc
mov
adc
lods
mov
fld
add
scas
fnstsw
add
xor
xchg
sub
bound
movsl
inc
icebp
call
dec
push
xor
inc
xchg
lods
mov
jns
insb
lcall
adc
cmc
nopl
and
mov
adc
push
sarl
repnz
gs
sbb
fldl
pop
mov
mov
sub
js
mov
xor
aas
ret
xlat
icebp
jo
jmp
mov
adc
and
pop
sarb
test
lods
in
repz
mov
xchg
stos
and
add
cmc
jp
rcrl
push
notl
or
inc
sbb
mov
test
stos
push
pop
iret
cs
lods
mov
inc
std
jb
or
pop
shrd
daa
sarb
push
xchg
mov
mov
jb
mov
aad
test
cltd
mov
out
cltd
test
jp
xchg
xor
or
mov
dec
nop
test
rcrb
les
cmpb
outsb
add
sbb
xchg
jbe
mov
and
out
inc
popa
jl
xlat
cli
lcall
and
jne
or
addr16
gs
sub
cs
imul
ljmp
cld
cs
out
mov
push
lock
xor
dec
jge
aam
ljmp
jbe
jae
add
pop
xor
push
inc
testb
dec
cmp
aas
lea
xor
mov
rolb
adc
push
sbb
cli
outsl
xchg
test
dec
add
mov
add
mov
aas
jnp
and
inc
jne
and
fsub
mov
lods
rorl
fsts
cwtl
add
aas
xchg
xchg
icebp
jne
mov
mov
xchg
test
jae
xchg
outsl
or
bound
lahf
xor
jne
ljmp
pushf
js
jge
cmpsl
sbb
sub
jnp
dec
adc
or
stos
adcl
imul
jle
mov
xor
jmp
sub
fnstenv
sbb
sub
arpl
xchg
fimull
js
mov
pop
es
int
test
pop
movsb
jmp
push
pop
adc
jns
and
mov
xlat
inc
std
cli
mov
orb
or
fsubrl
mov
sbb
mov
sbb
mov
sbb
or
loope
adc
fildll
and
inc
inc
cwtl
xchg
push
xchg
test
icebp
jne
adc
scas
pop
in
inc
pop
jmp
out
add
adc
pushf
xlat
cwtl
fcomps
outsl
or
rep
xchg
incl
xor
xor
add
or
aad
enter
push
fs
test
aas
push
repz
xchg
outsl
movsl
sub
sbb
dec
xchg
pop
insl
imul
xchg
mov
movsl
mov
leave
stc
xor
loopne
call
xchg
mov
movsl
jp
xchg
movsl
lcall
or
dec
imull
mov
xchg
push
outsb
pop
sbb
mov
mov
mov
xor
xlat
sub
inc
sbb
jnp
adc
iret
ja
outsl
add
inc
cmp
pop
push
ret
push
leave
in
arpl
push
in
lods
or
mov
imul
test
or
pop
adcl
adc
arpl
xor
pusha
push
je
jmp
cli
cs
pop
scas
lods
fwait
test
icebp
inc
dec
inc
cld
jecxz
jns
push
cmpsl
jnp
sahf
jg
push
dec
mov
jg
dec
bound
in
lea
mov
ret
mov
mov
jnp
push
mov
ja
inc
pop
roll
or
das
outsl
xor
pop
je
jmp
shll
lcall
push
in
mov
popf
xor
daa
dec
loop
jb
sarl
adc
jl
mov
cmp
dec
mov
loope
data16
sub
mov
inc
mov
aad
jbe
stc
push
and
fldcw
push
pop
imul
insl
popf
rcr
jb
test
enter
je
jno
adc
lods
idivl
std
or
lahf
lret
lea
cld
jo
rorb
xor
add
pushf
mov
xchg
ror
sbb
push
std
sbb
aaa
mov
xchg
rorb
rcrb
es
inc
xor
pop
push
xor
xchg
gs
pop
xchg
in
cmp
cmp
popf
shll
pop
lods
dec
jecxz
jle
cmp
movb
ret
dec
xlat
pop
cmpsl
jae
aam
add
mov
xchg
dec
and
iret
pushf
mov
or
xchg
jl
mov
cmpsl
push
push
lret
dec
dec
or
bound
and
sti
mov
ja
ja
sbb
rorl
dec
mov
adc
shrb
xor
adc
stos
pop
inc
mov
cmpsl
jb
xor
jne
insb
imul
inc
mov
mov
jne
mov
mov
test
leave
mov
nop
adc
arpl
xor
sti
aam
js
jo
cmp
sbb
je,pt
mov
cmc
fstpt
lahf
ret
jl
data16
or
pop
je
aaa
stc
fld
shrl
loop
cli
and
pop
loop
testb
scas
mov
dec
mov
fisubrl
push
ja
lret
mov
jno
jp
loopne
scas
or
cwtl
ja
xchg
pop
sahf
out
or
jecxz
xor
inc
lret
fisubrl
test
mov
in
cmp
inc
testb
cmpsl
cmp
outsb
mov
or
leave
movsl
push
out
das
mov
jmp
jnp
jno
or
inc
clc
xor
sbb
popf
lods
call
int3
add
pop
loop
mov
hlt
mov
outsl
xor
sbb
fisubrs
fcmovb
cwtl
in
test
sub
mul
inc
sbbb
clc
imull
in
insb
repz
scas
test
insl
pop
or
mov
mov
pop
mov
lds
cld
mov
cmp
pop
out
int
decb
jbe
scas
inc
mov
inc
xchg
js
xchg
mov
add
jle
pop
leave
clc
leave
repz
test
inc
pusha
push
mov
out
push
pop
inc
mov
rcr
mov
push
xchg
xor
cld
jno
orl
xor
inc
mov
cli
or
sti
lock
lods
xor
pusha
xor
imul
dec
jno
xorb
mov
in
push
scas
pop
repnz
js
inc
ljmp
fst
loope
cs
call
xchg
iret
inc
in
loopne
addr16
out
loope
and
loope
xor
pop
fnstenv
dec
inc
sbb
int
xor
adc
or
or
xchg
bound
push
mov
gs
insb
int3
cs
out
mov
loope
in
orl
insb
xor
ljmp
mov
sahf
adc
repz
and
push
adc
and
inc
push
ljmp
xor
clc
das
dec
xor
sub
shlb
jmp
stos
pop
push
icebp
add
push
add
call
dec
into
testb
inc
push
push
inc
adc
push
sbb
stos
test
je
gs
or
clc
ds
inc
add
inc
mov
cmp
xor
push
ficompl
adc
lret
jno
dec
dec
lahf
rcrb
sbb
sbb
mov
lea
mov
inc
mov
inc
lods
pop
mov
loopne
or
pushf
scas
insl
outsb
out
arpl
ret
daa
mov
in
rorb
sub
xchg
jns
adc
lds
push
call
fcompl
sbb
push
addb
sbb
sbb
aad
inc
out
leave
add
loop
xchg
push
jns
sbb
push
inc
js
lods
sbb
push
add
sub
lods
inc
dec
out
xchg
inc
push
fistl
sub
or
test
shlb
mov
out
ss
xchg
in
pop
sub
mov
dec
pop
or
mov
fst
and
sub
fcompl
rorb
mov
ret
and
push
dec
bound
outsl
enter
popa
xlat
mov
pop
lock
mov
insl
push
shrl
or
dec
and
xor
insl
adc
ret
xchg
fildll
ss
xchg
das
xor
pop
mov
mov
loope
loopne
lds
push
push
movsb
xlat
imul
push
in
mov
frstpm(287
adc
sub
jae
jge
xchg
inc
repz
or
dec
in
repnz
sub
scas
aaa
push
mov
add
mov
jno
push
fwait
call
movsl
scas
test
pop
mov
add
ss
imul
sbb
outsl
ja
aaa
bound
lds
sub
shl
pop
mov
xchg
jb
repz
jl
out
sbb
pop
imul
movsb
das
and
jae
test
popf
rcr
stc
out
in
scas
push
xor
das
push
mov
dec
and
push
push
scas
scas
inc
mov
inc
lahf
or
cmp
cmc
lods
xor
fwait
aaa
push
pop
cmp
pop
jo
out
pop
mov
movsl
xchg
inc
adc
mov
out
mov
into
and
dec
stos
dec
mov
mov
icebp
mov
mov
xchg
mov
cmp
movsl
call
cmpsl
push
mov
dec
sbb
add
lcall
shrl
jl
cs
ja
outsb
pop
jmp
das
xor
into
push
sub
fisttpll
or
push
xchg
repz
mov
jle
aad
sub
hlt
clc
pop
xchg
sti
push
shl
data16
mov
xchg
ljmp
test
mov
movsl
loop
es
pop
mov
inc
mov
daa
sbb
add
ficomps
lea
and
rcrb
out
movl
les
shrl
cmp
sbb
xchg
mov
mov
add
test
lret
frstor
cltd
lock
mov
insl
cmp
ret
aas
adc
mov
pop
push
xor
and
fldl2t
xchg
adc
push
push
stos
fs
cltd
outsb
out
mov
fwait
adc
mov
sub
divl
xor
cmp
inc
jg
adc
lret
int3
popa
mov
mov
mov
lahf
push
out
lods
fbstp
sub
add
jne
loopne
mov
add
inc
push
das
and
inc
mov
mov
add
push
push
sbbl
mov
mov
mov
cs
mov
or
test
adc
and
and
scas
jnp
icebp
sbb
mov
adc
stos
mov
fxch
cmpsb
fnstsw
movsl
mulb
sbbl
jmp
out
int
inc
in
inc
mov
fildll
leave
sub
xlat
loope
jnp
cs
and
sbb
pusha
std
divb
orl
jns
mov
outsb
int
fwait
push
lahf
dec
jne
mov
mov
xor
mov
jo
in
bound
pop
repnz
mov
jne
mov
int
mov
pop
shrl
fcomps
fs
nop
xor
mov
pop
in
jge
jle
aam
stc
cli
xor
or
lds
mov
ja
push
mov
pushf
in
mov
outsl
imul
mov
xchg
adc
out
aaa
xor
lret
dec
jg
mov
scas
insb
pop
cmp
add
cld
ret
insl
and
mov
lcall
push
mov
lcall
test
inc
stc
mov
cwtl
out
push
push
mov
cltd
and
pop
sbb
cmpsb
jbe
push
dec
jge
xchg
sbb
sub
xchg
mov
mov
out
fimuls
mov
divb
cmc
lahf
mov
cmc
push
inc
cmp
xchg
pop
out
fstl
inc
hlt
mov
mov
push
addr16
hlt
mov
in
or
cwtl
je
push
sti
add
out
xor
movsb
aam
ljmp
jecxz
cwtl
ret
push
xor
xor
inc
jecxz
ljmp
les
jecxz
cs
test
ljmp
mov
loopne
sub
cmpsb
mov
pop
clc
outsl
mov
jmp
add
shll
pushf
pop
xor
dec
xlat
in
inc
in
dec
arpl
ss
xor
out
imul
and
rcrl
cmpsl
repnz
adc
sub
push
lcall
iret
insb
fs
imul
sub
icebp
cmpsb
insb
cmc
ret
call
sub
jo
insl
sbb
cmp
adc
xlat
dec
daa
jb
les
sub
std
test
push
sub
push
in
ja
aad
ljmp
lret
pop
jp
dec
stos
cmp
xor
mov
dec
imul
fwait
cmp
les
jle
stos
jae
pop
xchg
add
sbb
sub
xor
addr16
pop
xor
jns
sub
dec
enter
cmpsb
decb
mov
dec
push
mov
fnsave
rcrb
pop
pop
sub
add
pop
nop
movsl
jmp
xlat
test
in
fidivrl
dec
xor
shlb
push
lret
pmaddwd
pop
test
data16
into
jne
jns
sarl
shlb
cltd
mov
and
call
dec
xchg
cmp
and
and
cltd
mov
mov
push
xchg
pop
inc
lods
mov
enter
inc
adc
insl
mov
into
fmull
dec
pusha
xchg
imul
sub
pop
ret
out
jae
add
cmp
cmc
pop
pop
and
and
push
xlat
push
das
jb
cmpsl
scas
mov
pop
imul
push
popa
mov
pop
pushf
pop
inc
ljmp
jb
test
mov
ret
inc
movsb
unpcklps
jno
pop
jp
dec
inc
xor
outsl
mov
or
pop
loopne
sahf
mov
and
or
stos
or
arpl
xor
lret
dec
mov
into
xchg
into
mov
jle
int3
dec
mov
cs
pop
dec
js
or
test
xor
rol
leave
ret
fcom
shlb
cmp
dec
cs
mov
dec
stos
mov
scas
ss
sbbb
push
add
sbb
and
imul
cmp
dec
sub
sbb
outsb
pusha
ret
cmpl
popf
mov
xchg
jne
sub
or
in
adc
scas
push
ret
dec
cmp
and
pop
sbb
stos
inc
call
movsl
cmpsb
push
in
jno
shlb
jb
rcll
out
push
jb
out
jnp
out
xchg
sub
shlb
push
inc
jmp
test
popa
push
add
mov
pushf
fs
add
rcrb
hlt
inc
xor
push
inc
cmp
pop
jl
pop
mov
stos
arpl
sub
call
fisttps
jp
aas
sbb
es
test
stos
sub
add
fisttpl
add
xorb
pop
xor
and
sub
aaa
dec
lret
xchg
dec
iret
xor
jnp
shl
add
fs
push
repz
ljmp
jnp
push
movsl
mov
ss
mov
xor
cmp
mov
stos
into
bnd
pusha
adc
sti
xchg
push
clc
sub
or
aad
fisubrl
aad
inc
xor
lea
imul
adc
pushf
mov
and
fcom
push
mov
rorl
cmp
int3
testl
inc
repnz
push
fsub
ss
mov
div
movsl
push
lds
std
xor
xchg
lret
inc
pop
rorb
rcrl
mov
xor
stc
pusha
dec
lcall
adc
repz
and
xchg
scas
mulps
and
xor
sub
inc
push
adc
mov
arpl
xchg
in
cltd
cwtl
movsb
inc
jne
popf
sub
mov
or
outsl
test
pcmpeqd
xor
and
aaa
inc
in
stc
frndint
jb
es
lcall
jae
jns
inc
sahf
mov
push
and
adc
mov
jno
sbb
cmpsl
xor
adc
notl
sbb
push
out
inc
adc
cmp
sbb
out
sub
add
jbe
adc
stc
cmpsl
cmp
stc
out
mov
mov
add
sub
pop
jae
stos
xchg
pop
ret
jae
push
dec
insb
je
inc
push
xchg
testb
cmp
imulb
dec
imul
xchg
sbb
pop
mov
push
scas
scas
imul
ror
jmp
clc
andb
lock
xlat
jno
sbb
adc
jecxz
cli
lret
aaa
insb
mov
hlt
pop
cld
sti
sbb
in
pop
jnp
test
rclb
test
ljmp
mov
mov
push
frstor
xchg
or
lods
fsts
cmp
imul
inc
shll
pop
stc
xor
pop
mov
pop
js
in
popf
aad
fcmovbe
or
xor
lods
and
mov
dec
mov
pushl
pop
or
pushf
push
or
and
mov
cmp
add
std
cmp
fldcw
push
into
repnz
xor
testl
push
in
imul
mov
mov
sub
jb
xor
fidivrl
scas
ret
popa
movsb
pop
adc
cmpsl
pop
jmp
ja
das
fptan
test
nop
sub
sbb
dec
sahf
mov
jae
jbe
call
mov
adc
cli
adc
jp
std
pushf
sahf
mov
loop
dec
add
sbb
add
inc
or
cmp
jecxz
sbbb
xor
out
aaa
sbb
shll
je
inc
loopne
in
adc
mov
sub
js
inc
or
jns
rcll
fidivrs
cmc
loop
test
inc
out
daa
sub
xor
sahf
aaa
and
dec
jp
outsl
sbb
mov
sbb
arpl
aad
lods
test
in
out
fsubs
dec
in
add
dec
ror
ror
das
pop
mov
sbb
jge
xchg
scas
xchg
push
fs
fxch
or
jne
ljmp
sbb
mov
test
dec
push
call
xor
push
mov
cmp
xchg
nop
mov
shll
negl
push
xor
cmpsl
pop
dec
pop
leave
leave
insb
xchg
pop
ret
ret
push
sysexit
addb
cmpsl
into
and
sti
and
jle
and
movsb
mov
push
test
sar
dec
je
adc
shlb
inc
bound
dec
inc
push
iret
fwait
xor
pop
mov
inc
inc
dec
outsb
adc
sbb
stc
add
cwtl
mov
jmp
out
push
dec
iret
add
leave
xor
cmp
das
loopne
pop
mov
fldl
mov
lock
lahf
pop
mov
mov
mov
hlt
add
divb
adc
cs
push
add
repnz
mov
mov
imul
fimuls
int
test
call
pop
fidivl
rclb
mov
mov
mov
push
dec
pop
fs
mov
in
mov
test
in
aam
inc
int3
popa
fldl
pushaw
adc
push
lcall
dec
adc
cmp
adc
ss
mov
stos
and
out
sbb
pop
inc
and
fwait
ret
out
cmp
scas
add
in
cltd
jl
scas
inc
test
mov
fimull
test
cmp
and
data16
xor
and
or
add
sahf
inc
xor
or
pop
pushf
imul
lock
adc
xchg
sti
lahf
push
ucomiss
add
stc
ja
and
cmp
cmc
push
les
icebp
xchg
dec
jo
mov
xchg
lods
push
push
sbb
insl
mov
test
lock
and
cmp
push
in
dec
das
or
std
daa
lea
aam
dec
mov
mov
and
popa
mov
daa
loop
inc
out
adc
add
addr16
mov
push
xchg
stos
rorl
sub
aaa
imul
add
fs
mov
sbbb
rcll
iret
out
mov
sub
xor
pop
adc
jmp
mov
sbbb
dec
jmp
fneni(8087
mov
into
add
ljmp
cmp
add
sbb
divl
movsb
pop
lret
mov
xchg
and
clc
xchg
xchg
pop
daa
outsl
loope
dec
lds
loopne
sub
xor
outsl
lahf
mov
repz
cld
push
aaa
dec
es
mov
add
lcall
sub
pusha
aam
ljmp
or
clc
or
push
sbb
cltd
call
mov
fs
sarl
and
popf
into
add
hlt
insb
or
fsubrs
clc
loop
rol
inc
stc
repnz
xlat
out
xor
adc
loop
mov
in
pop
fidivrl
dec
sbb
add
sbbb
sub
sub
dec
mov
cltd
ret
pop
adc
xor
ja
inc
jg
push
add
mov
leave
lods
jb
lea
clc
in
fldcw
popa
jbe
ja
xchg
aas
in
xchg
mov
sbb
cmp
fbstp
xchg
in
dec
test
stos
lods
std
pop
out
dec
xchg
xor
push
adc
and
push
sahf
xlat
movsl
js
and
out
stc
sub
mov
scas
dec
out
pop
test
cmp
or
bound
or
cs
loopne
les
scas
push
push
add
pop
jnp
scas
add
test
sbb
mov
push
dec
dec
or
in
cld
loope
ja
fisubrl
icebp
loope
push
out
push
xchg
das
mov
outsl
popa
ficomps
popa
leave
lret
lods
ret
notl
inc
arpl
add
cmp
jns
cmpl
lahf
clc
cltd
mov
aaa
cmp
outsl
cmpsl
cwtl
mov
pusha
or
in
stc
inc
sub
xor
dec
mov
ds
scas
push
cmp
lods
jno
adc
loopne
int3
adc
lods
lea
outsb
push
shlb
ds
fsubr
cmp
ss
stos
jns
orb
clc
adc
and
mov
mov
jp
leave
cmp
ret
jne
sti
daa
test
mov
inc
leave
inc
inc
mov
repnz
mov
addb
mov
jle
lcall
or
lret
adc
imul
sbb
sub
adc
cmp
xlat
stos
dec
js
lods
dec
bound
xchg
test
cmp
sbb
fadds
fildll
dec
roll
or
repz
out
out
test
cltd
inc
pop
jb
dec
cli
sbb
ljmp
lret
gs
rclb
or
je
jns
out
scas
pop
inc
and
or
jo
xor
adc
dec
lretw
loope
add
repz
mov
mov
and
ljmp
jecxz
jg
repnz
inc
lds
inc
pushf
jmp
imul
enter
push
aaa
jmp
dec
mov
adc
mov
and
xor
lcall
adc
iret
aaa
repnz
mov
loope
ret
xchg
or
dec
sbb
aad
jg
inc
xchg
push
fcoms
push
adc
sarb
sbbb
mov
mov
das
pusha
inc
in
or
js
adc
mov
mov
loop
sti
stos
mov
cmpsl
sub
incb
xor
icebp
add
ja
add
pop
stos
xor
popa
inc
dec
xchg
xor
push
mov
add
cmp
and
adc
clc
pop
out
stos
dec
dec
test
xor
sub
je
scas
sub
jno
pop
cmp
mov
retw
bound
repnz
mov
cs
add
mov
push
mov
dec
jns
inc
je
sbb
and
pmulhw
cwtl
out
stc
and
int
xchg
xchg
adc
jle
mov
adc
cli
jl
add
push
push
xchg
stc
aas
rolb
nop
in
xor
ja
out
add
and
jg
xchg
cmpsb
sub
lds
lret
pop
jl
fdivrs
mov
mov
frstor
pop
sub
jmp
lret
movsl
push
mov
ror
inc
cmpsb
cmp
dec
sahf
ljmp
out
or
clc
cmp
std
sub
pop
xchg
scas
sbb
or
nop
cwtl
sub
sbb
std
push
std
pop
insl
sbb
jno
pop
outsl
pop
and
into
mov
sbb
xchg
mov
pop
out
in
pop
inc
outsl
leave
pop
outsb
out
and
pop
insb
xor
mov
push
adc
mov
mov
std
ret
fistps
cmpsb
ficompl
sti
and
loop
xor
cmp
pop
push
int
inc
xchg
sahf
nop
sub
fcomps
jne
xchg
sahf
xchg
nop
fwait
inc
lret
or
mov
cmp
insb
and
mov
or
cmp
inc
xchg
mov
popa
popa
pop
in
jae
fcoml
mov
arpl
adc
adc
in
sub
imul
cmp
add
das
sbb
mov
push
xchg
loop
fs
testb
jg
cld
int
lea
or
je
push
stc
sbb
clc
inc
mov
fildl
aaa
push
cwtl
out
mov
movsb
hlt
push
int3
adc
rcrl
xchg
mov
xlat
sbbb
adc
fisubs
jl
dec
out
cmc
in
fdivrl
sub
and
jecxz
cmp
mov
dec
inc
jno
out
shrb
fs
into
push
pop
push
adc
push
clc
xor
pop
pop
repnz
out
addr16
jg
and
movsb
jl
dec
pop
lcall
sub
mov
cli
fld
dec
sti
and
insb
out
rcll
lds
stos
std
cmp
mov
jge
call
inc
mov
bnd
adc
iret
enter
in
ret
les
cmc
test
pop
repnz
test
push
jmp
sbb
bound
push
mov
push
or
sar
jmp
std
and
cli
clc
sub
test
push
es
jg
mov
mov
xchg
iret
fidivl
ds
dec
test
int
push
inc
out
clc
fwait
shll
inc
jge
xor
cmpb
sub
popa
stos
enter
insb
test
cs
shrb
ds
addl
mov
leave
test
pop
sbb
add
fcomi
jg
mov
lcall
push
add
sub
out
mov
and
mov
jbe
or
ja
movsb
jno
insb
or
xchg
incb
fistpll
cmp
adc
fiaddl
pop
bound
insb
dec
push
and
mov
hlt
pop
push
pop
int3
fldcw
or
stc
inc
in
jmp
pusha
in
repz
dec
cwtl
aaa
nop
dec
repz
scas
pop
cmpsl
push
lds
out
shll
shlb
scas
lock
jecxz
loop
inc
rcrb
mov
rcll
mov
add
lods
xor
dec
fisubl
add
cmp
cmpsl
outsl
dec
or
roll
decb
insl
mov
pop
pop
in
cwtl
add
aas
lret
adc
repz
in
test
pop
int
pushl
fwait
jo
xchg
jp
fldenv
stc
dec
cmp
xor
mov
add
lods
mov
ds
mov
fadd
push
mov
push
pop
jp
dec
mov
add
add
sub
out
pop
popa
cmc
rcr
call
and
movsb
js
pop
mov
pop
add
aad
faddp
lock
cmp
scas
pop
add
loopne
shlb
mov
or
push
lds
xor
inc
outsb
jmp
mov
imul
jns
cmpsb
sub
bound
pop
lret
cwtl
loopne
scas
and
jecxz
fcmove
jl
pusha
movsb
fs
std
jno
xor
mov
cmp
pop
push
aam
lds
popf
out
enter
neg
and
test
push
cwtl
push
pop
push
ss
cmp
sub
stc
aad
pop
clc
aaa
or
inc
xchg
popa
mov
sbb
inc
cs
and
jo
or
dec
mov
loopne
into
imul
push
shll
lret
enter
jecxz
push
push
call
imul
jg
add
jns
sbb
xchg
xchg
in
adcb
pop
sarb
sti
enter
mov
out
jmp
scas
push
push
data16
inc
dec
mov
stos
insl
add
jp
mov
lahf
jmp
ljmp
mov
and
jne
ret
sub
pop
rclb
outsb
addl
pop
push
cwtl
stos
jne
es
pop
cli
push
scas
pop
push
mov
pop
je
cmpsl
jmp
movsl
lcall
stc
sbb
inc
mov
ja
sub
pop
cmp
mov
into
sub
and
popf
iret
call
and
and
mov
scas
insb
fldenv
clc
pop
jp
inc
iret
push
pop
ljmp
shr
sub
call
dec
movsl
mov
xchg
push
stos
out
or
adc
sub
pop
in
inc
jmp
or
mov
outsl
lcall
inc
ror
mov
daa
xchg
scas
add
adc
gs
ja
adc
test
xor
stc
stos
mov
insb
cmpsb
orb
in
fnstenv
enter
insl
pop
and
sbb
push
popa
push
dec
sub
mov
imul
stc
lea
shlb
scas
repz
xor
adc
enter
rclb
jp
jbe
sub
mov
inc
push
sbb
sub
adc
hlt
addr16
insl
push
or
stos
and
xor
push
insl
mov
cmp
into
push
movl
push
in
dec
cmpsb
in
pop
cmp
gs
push
lcall
add
ds
mov
jle
pop
xchg
loopne
hlt
mov
mov
xor
mov
andb
std
mov
clc
push
stos
out
cmp
xchg
popa
cli
sub
data16
pop
outsl
daa
cmc
cmp
ja
xchg
xlat
fnstenv
cmp
in
add
cld
popa
movsl
mov
pushl
imul
adc
dec
in
mov
pop
pop
mov
sub
pushf
xchg
add
sbb
std
jge
outsl
pop
pop
ret
das
inc
jg
in
out
ds
mov
sbb
outsl
lods
add
pop
inc
mov
mov
fs
aaa
or
test
outsl
xchg
add
repnz
jmp
xor
xchg
cmp
lods
adc
cmp
sub
and
push
ja
imulb
test
adc
push
ret
xor
cli
sbb
inc
jo
imul
xchg
lret
call
insb
in
cld
out
dec
test
out
lcall
gs
cwtl
mov
add
cwtl
sbb
inc
adc
sub
sahf
cmpsl
push
inc
inc
mov
pop
push
sbb
push
push
jae
and
jbe
sahf
das
lcall
test
xchg
mov
fs
les
pop
ret
dec
push
lret
movsl
les
dec
xor
xchg
pop
and
inc
lods
ror
stos
js
inc
mov
sbb
xchg
adc
or
xchg
ja
dec
enter
loope
filds
mov
sbb
out
mov
cmp
cmc
fnstcw
popa
dec
pushf
xor
push
mov
mov
pushf
jno
out
mov
sub
or
push
cmc
jne
test
and
ja
loopne
sahf
xchg
or
mov
mov
pop
add
mov
fdivp
dec
mov
es
aam
jae
jp
xchg
inc
int3
lea
push
arpl
jp
adc
jmp
sti
dec
cmpsl
adc
xchg
push
test
out
mov
cmp
sub
jno
mov
mov
add
lret
popa
and
dec
dec
dec
push
fs
pop
xchg
fstps
add
dec
push
adc
and
fsts
imul
test
push
aam
sbb
arpl
mov
cld
aam
mov
outsl
clc
sbb
nop
ss
adc
in
xchg
cld
or
mul
mov
lret
sub
pushf
stos
lret
inc
ficomps
jg
test
in
lods
add
cmpsb
mov
or
jp
pop
dec
gs
fwait
cwtl
xchg
and
push
pop
addl
xchg
addr16
inc
inc
clc
sbb
fwait
and
mov
test
mov
ret
cli
inc
xor
int3
stos
add
fisubl
out
arpl
add
push
fidivrl
mov
dec
insl
pop
aaa
push
and
mov
lods
adcl
jns
add
sahf
leave
push
sub
mov
dec
test
mov
xor
lods
dec
stc
outsl
and
inc
movsl
adc
add
xchg
divl
dec
sub
inc
insl
xchg
imul
lret
mov
xchg
out
out
repnz
mov
out
xchg
f2xm1
out
arpl
daa
pusha
pop
subl
cmp
test
push
inc
test
xchg
shrb
jo
int3
xchg
cmpsb
pusha
or
push
dec
ds
movsb
push
cmpb
repz
jno
mull
fldl
jg
call
adc
imul
inc
sbb
sbb
and
subl
repnz
fisubrl
gs
xchg
scas
imul
adc
and
addl
clc
lahf
int3
push
arpl
jnp
xlat
out
test
repnz
xor
cltd
out
jl
leave
lret
lcall
xchg
sbb
test
in
lcall
jne
xchg
subb
cld
adc
and
loope
and
or
int3
inc
cltd
outsl
test
add
sti
cmp
mov
mov
inc
fwait
xor
sti
jecxz
cld
rcrl
mov
or
icebp
pop
mov
je
cmpsl
jo
inc
adc
mov
inc
scas
pop
sub
adc
fbld
or
mov
xchg
jp
dec
aad
lcall
lret
rcrl
fcomps
repz
and
jnp
adc
sub
imul
sbb
and
pop
push
pop
xlat
ss
xchg
out
pop
cmp
dec
int3
sti
push
sahf
jmp
adc
inc
pop
das
mov
in
sti
cmp
lcall
or
sub
push
cli
stos
fnstenv
sub
fcmovu
mov
es
ss
xchg
rolb
jno
sbb
das
xchg
test
push
inc
mov
ret
cltd
xor
out
sbb
adc
xor
es
scas
xor
jb
iret
loopne
cmovg
mov
mov
les
dec
fs
cmpl
sub
xor
xlat
stos
dec
pop
int3
xchg
ds
sbb
jecxz
movb
and
xor
mov
ss
int3
leave
arpl
sub
push
sbbl
jnp
jae
mov
mov
adc
push
cmp
inc
lds
es
lret
sbb
js
xor
push
shl
pop
pushf
bound
out
pop
cltd
or
inc
pop
int3
or
imul
rep
mov
std
aaa
xor
repz
ljmp
xlat
mov
aaa
ret
mov
lea
xchg
dec
addr16
stc
es
and
cwtl
xchg
dec
dec
rcrl
pop
jns
mov
lock
lcall
fdivrl
jbe
pop
inc
dec
and
add
fists
or
repnz
jle
or
adc
mov
negb
sub
dec
inc
pop
jbe
xor
ljmp
jg
sbb
mov
xchg
pushf
lea
inc
mov
imul
cwtl
loop
cmc
repz
or
push
into
and
push
inc
sub
cmp
gs
in
cmp
xor
add
push
add
int
fstpt
xorb
fidivrs
lcall
imul
out
xchg
adc
and
xor
arpl
cmpsb
push
push
icebp
lods
mov
sub
mov
imul
rcrl
cmp
push
adc
push
cmp
pop
in
fistps
push
add
sub
shlb
out
fucom
aas
dec
add
cltd
mov
xchg
mov
and
mov
push
sub
cli
outsl
das
mov
xor
out
push
push
imul
leave
mov
das
test
mov
popa
pop
mov
add
popf
mov
push
in
or
and
test
push
aam
fs
inc
daa
inc
xor
inc
jno
je
sbb
jmp
outsb
and
bound
sbb
pop
incb
mov
outsl
jb
not
jo
hlt
dec
mov
mov
fnstcw
in
lret
stos
add
inc
je
stc
cmpl
inc
mov
and
push
repnz
xor
inc
addr16
or
imul
and
lret
sub
jmp
or
cmp
test
js
sarb
dec
xchg
xchg
ss
enter
call
jle
sahf
lret
dec
out
into
int
and
idivb
sbb
adc
mov
lahf
int3
adc
cld
mov
xor
test
inc
xchg
mov
lock
fdivl
pop
push
pop
jecxz
sahf
jne
popa
js
enter
sahf
mov
arpl
data16
popl
movsl
pop
clc
repz
daa
flds
lods
cli
test
sub
movb
cmp
fldcw
sbb
testl
cmc
xchg
cwtl
pop
pop
popl
mov
test
or
mov
test
add
js
xchg
pop
ds
testb
movsl
test
dec
aas
and
scas
repnz
not
adc
out
in
push
rcrl
mov
pop
movsb
mov
nop
lock
ljmp
push
ret
fldl
xchg
clc
xchg
insl
cmpl
adc
jge
rcll
adc
aaa
cmc
mov
cltd
int3
repz
imul
dec
jb
ljmp
mov
rcr
add
shll
and
push
fwait
cli
lcall
inc
cmp
out
pop
add
adc
jecxz
fistl
mov
mov
popa
cmp
xchg
xor
insl
or
inc
mov
inc
les
dec
xor
xlat
in
dec
or
insb
mov
movsl
loop
scas
gs
mull
repnz
scas
push
in
clc
mov
stc
mov
jge
xlat
ret
loop
jecxz
and
cmpsl
sahf
inc
xlat
add
pop
incl
in
es
nop
inc
int3
insl
jle
push
out
dec
xor
jb
js
pop
sahf
in
add
jecxz
fs
sub
mov
ss
out
jns
adc
fdivs
add
jecxz
xor
dec
xchg
xor
mov
pop
add
inc
mov
arpl
stos
cmc
adcb
mov
enter
loopne
sbb
ret
xchg
mov
or
loope
imul
and
aas
inc
add
push
repnz
lock
rcr
dec
mov
add
or
dec
inc
leave
adc
push
mov
push
lret
pop
sub
pusha
adc
pop
xchg
dec
or
cmp
pop
dec
ljmp
and
sbb
shrb
cltd
cltd
add
dec
push
pop
loop
roll
daa
dec
fistl
jo
dec
fisttpl
cmp
xchg
dec
sti
xchg
add
adc
jnp
mov
push
push
iret
jp
stc
push
adc
sub
mov
call
sti
cmp
inc
divb
in
mov
test
mul
jg
in
dec
sti
add
or
inc
pop
mov
fisubl
sub
and
xchg
gs
mov
mov
imul
inc
and
add
sbb
push
iret
ljmp
and
das
pop
leave
mov
sub
test
mov
int
lret
dec
stos
sub
mov
out
int
or
fnstenv
inc
cmp
sbb
mov
mov
repnz
aad
lods
movsl
nop
jns
jmp
dec
je
inc
mov
test
add
mov
scas
sbb
imul
xor
fwait
sbb
mov
mov
jo
sub
mov
nop
adc
jle
sbb
jle
ljmp
mov
fstl
shll
loop
lds
mov
pop
aam
mov
lods
push
out
sub
leave
iret
and
inc
or
clc
adc
sub
clc
fwait
lret
in
dec
cmp
or
xor
fwait
loop
and
adc
loope
popf
mov
and
aad
lcall
xor
add
sub
pop
mov
or
imul
xor
mov
dec
dec
mov
xor
fs
lods
push
mov
js
inc
icebp
movsl
sub
rolb
lret
mov
stc
or
jle
in
movsb
imul
and
dec
push
inc
loopne
dec
stos
nop
leave
cmpsl
mov
ss
andl
lahf
addr16
arpl
mov
or
fwait
add
pop
icebp
fcmovnu
ret
popa
jno
jno
inc
push
sarl
loope
mov
mov
mov
cltd
ja
mov
loope
fisttpll
inc
cmpl
xchg
subb
aas
push
inc
lret
out
mov
mov
cld
jae
scas
mov
jecxz
es
adc
dec
sbb
ljmp
and
leave
loope
jae
mov
cmc
xchg
in
out
inc
ret
push
aaa
xor
sub
inc
mov
popf
sahf
pop
movsb
add
sbb
rcll
nop
dec
adc
rclb
das
and
xchg
dec
jecxz
pop
lds
or
push
pop
cmc
sub
cmpsl
xchg
push
push
push
cmp
jo
fnstenv
cli
xor
jb
push
sub
loopne
sub
js
inc
aad
in
andb
addr16
xchg
jl
xor
sub
fsubrl
loop
loopne
add
mov
xchg
fwait
inc
jmp
out
shlb
push
dec
push
jo
bound
push
jno
subl
cmp
adc
aad
xchg
call
hlt
mov
int
mov
fcoml
mov
adc
sbb
mov
mov
sub
add
daa
xor
stos
mov
es
sub
dec
mov
and
mov
mov
jge
rolb
sbb
jle
sub
jmp
inc
decb
xchg
outsb
cmp
xor
mov
subl
ret
sbb
outsb
or
and
mulb
dec
stos
out
roll
dec
pop
mov
js
jne
lret
xchg
rcl
and
sti
mov
jns
ret
out
add
xor
stc
xor
sub
addr16
subb
jp
sbb
push
mov
pushf
int
or
inc
testl
mov
mov
cmpsl
clc
es
lret
cs
pop
xchg
clc
aad
push
sahf
ja
ja
xchg
mov
lahf
mov
push
push
cmpsl
stos
shlb
jp
cltd
xchg
pop
jbe
imul
js
xchg
jge
and
mov
pop
fcmovnb
out
pop
xor
lds
imul
xor
cld
sbb
push
adc
addb
add
ffreep
div
jmp
pop
mov
std
or
rolb
test
dec
dec
repz
adc
pop
insl
in
jno
cmc
ds
test
cmp
xor
xor
fs
aaa
cmc
jne
sbb
loopne
or
out
aaa
dec
and
dec
and
sub
cmp
lods
scas
mov
or
mov
sub
jne
lods
xchg
adc
xchg
dec
int
sbb
cltd
in
aam
mov
fcompl
sbb
inc
gs
cmpsb
and
fiadds
push
adc
cld
pop
jns
inc
test
inc
rcrb
jl
daa
pop
add
xchg
adc
aam
and
push
pop
mov
adc
or
int3
mov
add
jp
leave
neg
mov
hlt
sbb
sub
inc
and
push
lahf
out
dec
xchg
adc
cltd
js
out
imull
add
cmp
stos
xorl
outsb
pop
add
mov
movsl
or
and
lcall
push
repz
cli
scas
lock
mov
lock
imul
pop
jns
mov
in
ja
and
lahf
lcall
sub
subl
int3
mov
jle
outsl
ror
inc
clc
cmp
dec
jo
enter
outsl
lahf
out
pop
ljmp
lds
cld
mov
cmc
jne
xchg
fucomp
insl
add
xor
lea
lea
in
call
pop
pop
lods
sub
push
icebp
aaa
adc
add
rcrb
aas
rcrl
test
cwtl
push
jb
add
addb
into
and
movsl
cmc
xchg
in
js
cmpsb
lods
fisubs
xlat
xor
mov
cmpsb
jge
ss
idiv
clc
jmp
clc
ret
push
roll
lret
hlt
dec
jb
xor
sti
jo
cmpl
sbb
adc
push
shrl
imul
push
dec
or
mov
pop
shr
scas
cmp
mov
cwtl
cmp
clc
ja
int3
push
outsl
sub
out
inc
adc
sub
xchg
in
cltd
fstps
loopne
ja
lds
repz
movsl
ja,pt
mov
dec
frstor
push
je
mov
pop
fincstp
jl
add
or
sbb
mov
ljmp
aas
pop
mov
lahf
cwtl
cmpb
pop
out
in
sub
std
cmp
adc
adc
push
inc
mov
shlb
sbb
xchg
lahf
stos
mov
push
icebp
mov
fdivrs
loop
loop
sti
pop
das
mov
sti
in
sbb
sub
fidivs
push
and
shrb
jnp
xor
push
les
loopne
pop
hlt
pop
call
out
roll
pop
add
xor
dec
lds
ss
fcoms
lods
pop
out
roll
out
lret
push
sub
ja
jb
mov
roll
or
pop
cltd
push
insl
rcll
stc
out
dec
shlb
jnp
repnz
wrmsr
or
inc
int3
fxch
push
or
out
scas
adc
cmp
sti
in
push
inc
fldcw
insb
out
das
mov
rorb
mov
lods
lods
pop
lea
popa
pop
xor
or
push
nop
test
lea
mov
add
and
xor
dec
push
aad
sbb
shlb
aad
jbe
out
clc
xlat
sub
xchg
das
jbe
das
mov
stc
cli
xchg
mov
sbb
les
inc
cmp
xor
scas
lea
mov
dec
adcl
in
mov
push
mov
pop
push
jbe
stc
push
bound
ja
sarb
mull
ss
or
fstps
sbb
popf
rcrl
insb
xchg
mov
mov
jb
add
dec
pop
out
sub
mov
dec
aad
add
sub
in
popl
arpl
fcmovnu
mov
loopne
movsb
aad
popf
js
lahf
fwait
xchg
xchg
add
adc
call
fwait
ds
pop
fsubrl
js
outsl
lea
repz
dec
dec
in
lret
mov
bound
in
xadd
jge
add
rclb
daa
xchg
push
ret
jne
fiadds
jb
dec
mov
lret
dec
cmpsb
or
stc
aas
pop
pop
pop
xchg
loope
arpl
into
mov
mov
leave
xor
push
insl
push
je
cmp
lock
cmp
add
sub
cmc
jle
bound
scas
sar
xor
and
outsb
push
loope
xchg
out
xor
stos
pop
loop
cld
mov
and
cmc
lds
and
mov
inc
mov
and
mov
xor
and
movsl
mov
mov
movsl
push
test
lods
lahf
pop
in
int
cltd
lahf
addr16
pop
lcall
ss
jo
dec
test
push
inc
cmp
test
in
ja
lods
stos
pusha
ficoms
push
sbb
pop
inc
adc
jno
orl
add
je
xchg
pop
xorl
enter
out
add
loope
stos
lods
inc
inc
pop
sbb
aas
pop
adc
or
push
mov
jae
fiadds
std
or
cmp
insl
jge
leave
fbld
inc
mov
mov
or
ret
push
ljmp
cmp
loope
aas
jae
stos
jns
xor
sbb
enter
sub
out
add
mov
or
jno
mov
push
or
mov
leave
fdivl
rcr
or
test
mov
jmp
mov
push
pop
dec
repz
mov
jmp
cli
leave
lea
mov
mov
xchg
xor
push
gs
pushf
out
scas
out
mov
xlat
ja
add
push
out
dec
hlt
or
jge
stc
xchg
sbb
inc
push
pop
lods
xor
cmp
sub
inc
leave
idivb
int
int3
movl
pop
rcrl
scas
sub
rcl
add
pop
xchg
enter
jbe
movsb
fs
mov
fidivrl
rcll
icebp
addb
push
je
mov
out
es
mov
inc
and
dec
iret
aas
das
ret
popa
adcb
pop
ret
cmp
divl
push
sub
sub
leave
cmpsl
and
jo
outsb
mov
sub
mov
adc
rolb
stos
out
aam
cmp
dec
jge
jnp
fwait
push
cwtl
push
icebp
dec
mov
test
xchg
dec
fmulp
sbb
pop
sub
and
push
mov
add
outsb
inc
rcrb
pop
jbe
dec
stos
jb
xor
ds
adc
aad
fs
jns
stc
xor
leave
mov
dec
mov
test
popf
les
insb
mov
loop
lods
mov
push
jae
imulb
leave
mov
xor
or
adc
mov
fldcw
test
cmpsl
inc
pop
mov
cmp
sub
pop
inc
cmpsb
ss
cwtl
cld
scas
dec
mov
popa
in
mov
out
lcall
xchg
or
shll
in
jo
dec
fnsave
push
outsl
or
add
or
ljmp
xor
ret
inc
push
push
sub
mov
push
or
movsb
lds
loope
xchg
add
imul
pushf
sbb
out
sbb
cmp
dec
push
lcall
test
xchg
sub
xor
mov
cmpsl
flds
pusha
std
fcmovbe
jge
xor
cmp
cmp
cmc
sub
test
mov
pop
xor
jne
or
xlat
ret
frndint
aad
fstps
mov
aaa
lcall
dec
mov
shrl
xchg
pop
mov
push
fdivrs
dec
push
incb
jp
leave
pop
fdivr
mov
scas
mov
jge
in
out
mov
leave
fdivl
fdivrs
fsub
jge
push
icebp
and
pusha
incb
pop
add
dec
aad
push
fldt
insl
mov
jmp
add
dec
addl
sbb
test
cwtl
enter
test
ja
and
and
out
cmc
push
repnz
or
cltd
out
cmp
xchg
xchg
add
jbe
pop
pop
add
jg
jnp
ljmp
or
fnstsw
or
dec
inc
jno
mov
push
xor
out
stc
stc
dec
xor
dec
mov
sahf
xchg
aaa
out
in
sub
sub
pop
mov
pop
inc
sub
dec
pop
or
aam
mov
lret
adc
push
rorb
adc
out
pop
aaa
adc
lret
mov
loope
jb
adc
or
and
jo
ret
out
cld
push
pushf
data16
sti
pop
daa
mov
and
sbb
xchg
fnstenv
xor
lea
or
lcall
cmp
dec
mov
jle
mov
adc
push
movsb
movb
mov
loopne
sbb
jl
gs
pop
dec
xchg
ret
adc
mov
mov
inc
lahf
fsubl
js
adcb
enter
sbb
out
sub
lods
ja
shrl
cmp
leave
out
fstpt
push
aad
outsb
mov
jge
icebp
scas
dec
int3
das
iret
fsubl
in
xor
sbb
xchg
scas
inc
insb
inc
sti
das
in
ret
adc
hlt
xchg
mov
roll
push
ljmp
je
cmc
aad
and
fwait
cmc
fisubrl
out
insl
lods
shl
inc
ljmp
aaa
and
out
mov
dec
mulb
movsl
lret
pop
imul
iret
jg
sbb
pop
ret
gs
in
shll
push
movsl
movsl
push
sub
imul
sahf
jae
mov
lcall
lods
cmp
je
add
out
cmpsb
gs
mull
xor
xlat
mov
jecxz
popf
cmp
sbb
and
mov
dec
cltd
push
lds
mov
aaa
xchg
mov
pop
fsts
jle
push
sub
cltd
push
pop
push
jmp
pop
into
jbe
adc
int
xchg
fcoml
mov
jno
fidivrs
sub
or
push
pop
sahf
inc
pusha
js
push
lahf
mov
pop
rcrb
test
testl
push
jle
xlat
push
mov
stc
sub
inc
inc
cli
sbb
fbstp
mov
cli
xchg
push
push
xor
pop
add
ss
xor
jae
adc
push
or
jns
loopne
repnz
stos
scas
and
mov
inc
aaa
mov
test
mov
push
stos
or
push
mov
mov
mov
ret
pop
icebp
shll
imul
push
dec
or
fcom
cli
dec
fsubrs
out
fisubrs
or
scas
aas
xchg
mov
stos
jo
xchg
sub
pop
cs
sbb
les
gs
xchg
sub
mov
mov
mov
jbe
and
arpl
aaa
inc
mov
lock
movsl
sub
jecxz
dec
ret
std
pop
ret
imul
dec
outsb
push
daa
repz
lods
mov
mov
sub
xchg
or
ret
gs
push
lock
pop
add
push
jo
test
lcall
jle
aad
mov
mov
pop
test
sub
rorl
push
adc
xchg
pushl
ds
inc
pop
mov
push
insb
fisubrl
inc
pop
jmp
sub
inc
push
jns
push
das
lcall
jns
rep
inc
jb
mov
cmpb
jecxz
gs
mov
flds
out
adc
inc
lcall
mov
out
pop
mov
xchg
out
leave
fcoms
or
es
inc
mov
sbb
sub
outsl
movsl
sub
mov
scas
movsb
je
insl
inc
push
or
subl
lock
aam
jl
push
cwtl
xor
push
push
jmp
pop
pop
rolb
push
mov
dec
push
leave
xchg
push
add
orl
mov
mov
shrb
repz
dec
dec
lods
cmpsl
cmp
mov
imul
aas
mov
mov
pop
push
push
scas
loop
mov
fistpl
sbb
cli
in
and
sbb
stc
or
xor
outsb
or
xchg
or
je
push
stos
mov
sbb
es
pop
fwait
dec
mov
jno
call
adc
lcall
test
xorl
sub
out
xor
xchg
icebp
mov
or
push
pop
aas
inc
xchg
pop
add
stos
fbld
xor
add
pop
mov
fisubs
pop
daa
inc
pusha
lahf
cmc
stos
push
lret
aad
lcall
and
mov
fidivl
cld
jne
add
mov
out
cmp
adc
jecxz
mov
nop
inc
and
aas
jg
or
cli
sbb
sub
stos
cmp
fscale
cmp
movsb
arpl
popa
xchg
fnstenv
push
cmpsl
push
inc
out
or
add
mov
pop
inc
pop
lods
or
icebp
mov
and
ds
mov
mov
mov
mov
lea
add
test
mov
nop
push
sub
stos
mov
sahf
clc
push
xor
pop
decb
add
repnz
mov
mov
nop
mov
push
fildl
loope
cmp
mov
imul
xchg
xor
cmp
inc
ss
addr16
jmp
push
pop
push
sbb
mov
jnp
int
aad
mov
pop
stos
cmpsl
notb
nop
xchg
arpl
sbb
repnz
pop
aad
and
pusha
cltd
ret
js
scas
je
movb
mov
xor
not
push
call
je
add
in
or
jl
lods
inc
outsl
sbb
adc
push
test
mov
sub
add
mov
inc
ficomps
lock
in
jecxz
xlat
jo
xlat
cmpsb
adc
mov
test
xor
fdivl
fcmovu
xchg
ds
xchg
and
jne
les
pop
ja
add
mov
sbb
addr16
xor
mov
arpl
je
cmc
jmp
adc
xchg
xor
mov
popf
bnd
cmp
aad
jmp
cmp
mov
pop
mov
jl
pop
cmp
cltd
or
xor
or
fs
push
ficoml
xchg
jmp
movsb
bound
data16
stc
push
add
cltd
out
aas
ljmp
push
leave
push
popa
jecxz
inc
movsb
jp
jg
cli
add
out
nop
mov
insb
or
leave
mov
sbb
jg
jbe
sbb
sti
or
lcall
fmull
and
fwait
mov
dec
mov
lcall
cmp
shlb
fldln2
out
neg
mov
movsl
insl
jmp
out
rcll
inc
js
sub
mov
push
in
adc
push
das
sahf
rorl
add
xor
or
lock
mov
lds
inc
mov
mov
outsl
lods
ds
pusha
inc
inc
xlat
jbe
fisubrs
jle
add
lods
lcall
cld
sbb
pushf
inc
bound
jg
sahf
xchg
bound
arpl
cmp
cmp
jecxz
in
outsb
and
sti
jbe
cmp
call
hlt
push
popf
sbb
adc
shll
addb
sub
ja
inc
ja
xorb
clc
lea
and
int
call
std
xchg
cmp
fdivs
xchg
sbb
xor
adc
mov
fucomip
mov
push
stos
and
push
mov
mov
aas
jbe
jmp
and
in
gs
push
inc
out
push
mov
mov
mov
ror
insl
mov
outsw
sub
lods
sub
cltd
rol
pop
push
int3
pusha
xor
lods
lret
or
hlt
int
mov
adc
cmp
in
xor
int3
xchg
jg
dec
int3
pop
xchg
insl
int
hlt
lods
ljmp
jge
js
lret
or
add
mov
dec
aad
or
cmp
mov
or
loop
push
add
cmp
jl
aaa
push
cwtl
imul
loopne
call
lods
out
lahf
fildl
dec
add
shrb
add
inc
stc
mov
jl
pushf
stos
int3
xchg
xchg
jnp
xchg
jns
inc
fwait
movsl
addr16
push
cmp
jg
xchg
outsb
cmp
in
cmpsl
ljmp
rcrl
mov
and
and
and
and
pop
cmp
pushf
mov
sbb
fcmovne
addr16
add
ret
mov
xor
sbb
push
imul
dec
mov
adc
mov
inc
fucomip
gs
dec
inc
ja
adc
dec
shll
rol
sbb
and
aam
loope
xlat
mov
mov
add
jmp
loopne
mov
pop
ficomps
cmpsl
xlat
cs
popf
aas
iret
in
aas
fisttpl
add
pop
push
test
lds
dec
in
mov
dec
push
shll
stc
mov
insb
inc
stc
outsl
idiv
and
push
push
addr16
lcall
stos
insl
cld
mov
xor
addr16
mov
sbb
lcall
ror
push
sti
pop
rorb
stos
cltd
mov
push
mov
popa
repz
out
lret
lret
push
out
test
loope
insb
adcb
es
push
shlb
push
dec
and
insl
inc
xor
fdivs
lcall
xorb
in
xchg
or
dec
sub
movsl
mov
push
sti
push
inc
inc
addl
push
js
add
sti
stos
fs
cmp
dec
pop
push
mov
lcall
test
fnstenv
sbb
mov
dec
mov
xlat
or
dec
stos
cli
in
push
cmpsb
ja
cmpsl
sbb
jnp
sub
dec
and
out
pop
inc
pop
ret
dec
in
inc
mov
rorb
xacquire
jae
push
cltd
out
push
in
cmp
mov
clc
cmc
sahf
jbe
ret
fs
sub
ficoms
sub
mov
jg
pop
repz
addl
test
fucom
xor
dec
mov
jo
aam
mov
stos
rcrl
movsl
xor
push
adc
mov
and
jno
xor
ja
stc
mov
add
divl
scas
cld
pushf
xlat
inc
fcoms
xchg
scas
hlt
xor
outsl
pop
out
adcl
pop
xlat
lds
pop
mov
pop
lret
fnstcw
add
or
pop
dec
xor
in
jns
sbb
outsl
imul
mov
mov
sbb
xor
mov
xchg
mov
or
dec
sub
mov
xchg
mov
ja
sub
imul
cmp
xorl
xor
repnz
shlb
call
dec
mov
daa
cmp
nop
lret
sub
loopne
xchg
out
xlat
pop
mov
cli
lods
dec
rorb
mov
loope
push
fs
adc
sahf
mov
sub
lods
push
xchg
out
adc
stc
adc
dec
popa
or
adc
in
mov
in
mov
imulb
fsubrs
popf
dec
mov
cmpsl
mov
xchg
ljmp
pop
mov
sub
push
sti
mov
notl
nop
fmuls
dec
sbb
push
mov
adc
icebp
enter
testl
in
cmp
iret
add
fdiv
mov
cmp
int3
or
sahf
or
shlb
lods
pop
cmpsl
xlat
test
mov
dec
push
aad
imul
push
jmp
inc
mov
mov
push
lock
arpl
mov
je
adc
icebp
mov
ret
repz
jne
jb
jnp
adc
and
loopne
jge
xchg
fcmovnu
inc
add
dec
sub
movsb
mov
pusha
notl
test
bound
mov
xchg
and
lods
cs
pop
outsb
outsl
test
cli
mov
icebp
xchg
outsl
jmp
lds
xchg
mov
in
aaa
int
pop
mov
sti
mov
mov
push
out
clc
lds
cli
popa
sti
mov
movsb
fstl
rcrl
cli
adc
cs
xchg
fistps
pop
js
iret
jmp
out
push
fs
stos
cmp
lret
ret
incl
mov
mov
imul
dec
fwait
or
sbb
mov
mov
call
add
sbb
add
xlat
sbb
mov
imul
pop
and
push
pop
push
pop
stos
aad
iret
ds
fidivs
push
insb
out
sbb
out
lds
sti
xor
cld
es
cld
clc
or
cs
aad
test
scas
sbb
loope
mov
icebp
sbb
loopne,pn
jg
mov
push
jmp
add
or
xchg
rorb
add
mov
jns
inc
jb
adc
bound
pop
and
mov
cwtl
fcmovnbe
push
dec
cli
mov
rcr
pop
addb
push
gs
push
ds
stos
call
fdivs
call
movsl
outsl
sbb
fists
test
xchg
iret
jbe
sub
out
stos
imull
iret
test
xchg
das
mov
fldt
lods
ja
stos
ret
repnz
xchg
sti
cs
jb
stos
dec
mov
jmp
adc
mov
test
cpuid
fnstenv
xor
push
imul
insl
movsb
or
in
lahf
stos
popf
pop
pop
cmp
fsts
lea
sub
iret
jl
lds
inc
pop
loope
cmp
das
pop
smsw
sbb
ja
test
sbb
inc
xchg
fcoml
jp
ja
out
mov
jb
vpcomb
push
test
pop
vmwrite
jg
popf
push
push
cli
mov
xor
xor
rcll
jle
push
outsl
pusha
lmsw
add
loopne
dec
jae
inc
jecxz
inc
jmp
fcmovnbe
dec
adc
inc
adc
add
pop
nop
dec
adc
sbb
jno
jnp
scas
mov
test
xchg
push
jecxz
inc
xchg
dec
cmp
shld
mov
xchg
jo
push
add
subl
loope
loop
sbb
leave
pop
aas
mov
adc
ljmp
popf
ja
push
sub
sbb
stc
imul
dec
cmp
iret
cmp
mov
lcall
dec
cmp
shr
les
push
loope
out
sbb
mov
je
scas
dec
cmp
dec
rolb
or
outsl
rcl
insl
frstor
sahf
aam
in
sbb
sbb
cltd
andl
pop
push
push
stc
in
add
mov
stos
xchg
inc
cmc
in
adc
sarl
jmp
mov
movsb
cli
and
popa
in
outsb
and
cs
pop
insl
das
lock
daa
and
cld
mov
jno
int3
and
leave
rorb
cmp
inc
subl
cmp
mov
mov
fcomp
mov
cmp
stos
mov
stc
pop
in
mov
test
test
or
mov
and
sahf
cmp
jns
pop
jg
push
push
and
sbb
push
mov
fwait
xchg
insl
push
pushf
push
cmp
sub
push
cmc
mull
fiadds
xchg
cmp
jmp
int
std
lret
push
pop
and
and
add
mov
lret
adc
sub
inc
xchg
enter
push
pop
dec
mov
dec
dec
pop
lock
adc
mov
cmc
mov
aad
xchg
xor
dec
push
dec
sub
dec
mov
enter
push
pop
repnz
adc
adc
and
xchg
rolb
cs
xor
addr16
cmpsb
loopne
ss
mov
sub
xorl
push
jae
push
adc
ljmp
insb
leave
jge
or
loope
lret
xor
sub
int3
mov
lods
lods
pop
adc
mov
nop
adc
mov
sub
loope
push
adc
sar
fists
mov
jecxz
pushf
jo
jae
mov
and
xor
cmpsl
in
enter
jns
inc
mov
rorb
into
or
fwait
and
icebp
ds
bound
imul
adc
js
sbb
mov
inc
in
pop
stc
bound
adc
mov
lea
pop
aas
cmp
adc
pop
xchg
iret
mov
in
mov
jp
sub
lret
pop
dec
cltd
mov
rcrl
cmp
cmp
dec
adc
sbb
sub
jns
repz
popf
scas
jne
pop
es
call
mov
cmp
mov
mov
or
add
lock
int
dec
mov
pop
inc
xor
add
outsl
xchg
loope
notl
sbb
ja
lds
xchg
shrl
mov
into
or
iret
fstl
cmpsl
inc
clc
lds
pushf
movsl
test
fadd
imul
je
imul
pop
xchg
xchg
out
jp
mov
leave
mov
in
lcall
and
lret
mov
dec
nopl
sub
in
xchg
hlt
pop
xchg
dec
mov
sub
add
es
add
sbb
fmul
xchg
fisttpl
dec
push
jle
popf
gs
sahf
pop
and
mov
adc
and
popf
addl
icebp
and
test
jne
push
mov
insb
sub
push
push
bound
push
mov
mov
or
jg
cmpsl
minps
iret
add
push
inc
cmp
nop
dec
dec
sub
arpl
shr
sbb
add
fwait
fs
adc
xchg
mov
inc
push
nop
add
add
jle
lods
sub
imul
loope
jmp
ja
sahf
ss
mov
ja
xor
push
pop
pop
es
cmp
pop
adc
arpl
xor
xlat
enter
outsl
test
scas
dec
xor
sbb
mov
push
xchg
andl
mov
pop
add
mov
mov
jecxz
mov
adc
stos
add
insl
cmp
gs
fs
fnsave
mov
ss
xchg
mov
inc
rcr
out
fsts
popa
inc
cli
add
mov
in
aaa
fildll
sbb
in
xchg
mov
arpl
imul
jno
xchg
xor
add
sub
xchg
and
pop
xchg
sub
or
push
lcall
jecxz
pop
mov
lahf
pop
push
add
addps
and
mov
call
and
sbb
ret
xor
roll
mov
adc
push
push
test
mov
mov
and
sbb
push
jl
push
jae
push
loopne
jbe
push
push
xor
lea
hlt
add
sbb
or
xchg
sbb
dec
stc
cmp
jp
dec
sbb
jb
aam
imul
pop
mov
add
xor
out
popf
repz
add
nop
xor
loope
pop
in
cld
rclb
into
stc
jno
xlat
push
mov
or
cmp
xchg
dec
mov
xchg
dec
push
lods
mov
xor
inc
mov
rcl
lret
into
js
push
pshufw
pop
les
push
aad
jno
push
push
push
fsubrs
dec
mov
in
in
xchg
xor
int
mov
push
adc
incb
je
jne
cmp
add
addr16
pop
dec
ja
cmpb
pop
sahf
roll
repnz
xchg
push
aaa
cmp
repz
inc
add
aas
pmaxsw
xchg
pop
xor
out
or
mov
jb
repz
push
aam
fwait
pop
dec
mov
inc
outsl
movsl
loop
rcrl
std
cmp
push
scas
jb
sbb
aam
add
and
ja
lcall
negl
mov
xchg
jnp
lock
xchg
loopne
sbb
xor
dec
xchg
sbb
cmp
adc
popf
push
add
aaa
ljmp
and
inc
je
pop
pop
iret
shrl
cmc
xchg
lahf
dec
add
cs
mov
mov
in
sbbb
lcall
add
mov
lods
push
mov
adc
mov
out
jno
cmp
dec
fdivrl
push
push
dec
xlat
pushf
xchg
rcll
imul
mov
mov
push
cmp
outsl
cmp
sub
jp
lods
fcomps
xchg
push
push
fists
outsb
jo
jbe
xchg
and
sub
aam
rclb
or
aam
or
mov
xchg
mov
scas
cli
or
daa
ret
sub
fidivrs
pop
leave
lcall
outsl
ja
test
out
mov
pop
inc
xchg
mov
adc
lea
lahf
jl
loop
es
jl
mov
call
and
mov
mov
andps
scas
ret
push
pop
aas
ret
pop
sti
and
mov
xchg
mov
enter
xchg
loope
xchg
adc
cmp
xchg
jl,pt
fucomi
add
and
pop
bound
imulb
incl
xchg
iret
cld
rcr
xor
inc
ret
and
mov
aaa
mov
scas
sbb
int3
adc
addr16
dec
enter
popa
or
andl
cmp
sub
and
pop
sbb
outsb
sub
push
cmpsl
sahf
loop
xchg
mov
rol
cmpsl
cltd
xchg
inc
stos
xchg
mov
fsubrl
mov
push
addr16
sub
pop
mov
xor
std
xor
cmpsl
sbb
idivb
aas
xor
popa
ljmp
sbb
movsl
in
and
mov
inc
ja
add
js
or
in
repnz
rclb
push
lock
inc
pop
cmp
jbe
mov
pop
xor
cs
add
divl
aam
push
orl
add
call
and
iret
sub
scas
jle
and
inc
mov
sub
xlat
outsb
add
idiv
adc
movaps
xchg
sbb
xor
fistpll
shl
sub
addr16
pop
inc
rcr
pusha
sbb
jne
pop
cmp
and
enter
inc
push
test
repnz
pop
call
mov
pop
mov
imul
das
mov
dec
add
stos
add
divb
sbb
leave
mov
jbe
ret
fwait
mov
mov
fnstcw
push
cmp
out
mov
fists
in
repz
int
pusha
je
out
int3
imul
pushf
xchg
in
aam
xor
in
sbb
or
imul
mov
dec
add
test
iret
adc
push
mov
imul
test
shlb
cmp
out
jecxz
add
mov
movsl
dec
mov
mov
mov
push
and
pop
add
sub
lret
sbb
lods
mov
mov
enter
push
xchg
aas
mov
fstps
test
addl
aam
int3
jle,pn
rorl
jle
idivb
fldt
lds
scas
andl
iret
xor
nop
inc
sbb
shll
outsb
push
sahf
loope
cmp
pop
cmpsl
test
jno
add
or
pop
addr16
inc
ja
lea
adc
orb
adc
test
out
fsubrl
stos
ljmp
push
push
inc
pop
fsubr
fmul
loope
xlat
push
push
xor
xor
pop
loop
ja
jp
cmc
and
sbb
jg
xor
sti
sti
push
ss
dec
mov
push
xor
cli
jb
mov
lock
scas
jmp
js
fldt
push
mov
aas
mov
xchg
cmc
pop
mov
mov
cmp
xchg
xchg
in
movsl
mov
xor
rorl
pop
out
lret
and
fsts
sbb
mov
cs
pop
shlb
dec
xchg
clc
ss
lahf
dec
push
ds
mov
ret
mov
dec
in
out
jge
inc
jbe
les
daa
or
mov
shrb
cltd
ret
jg
jle
lahf
fisttps
outsb
testb
mov
fwait
push
mov
aam
shr
push
imul
stc
fucomp
inc
cli
testb
xchg
ret
jl
mov
leave
adc
dec
cltd
mov
outsb
mov
orb
jb
cmp
je
mov
aad
movsb
out
inc
cmp
xchg
in
hlt
scas
adc
repz
jmp
push
rcr
jno
subl
movsl
push
pop
scas
xchg
scas
add
adc
addl
jbe
inc
pop
pushf
cmp
jno
adc
sub
jne
and
lret
xor
cmpsl
aad
pop
inc
push
pop
fwait
xchg
jp
lea
lods
inc
clc
dec
mov
or
and
cmp
sbb
jae
int
aaa
rol
inc
push
inc
mov
movsl
inc
shlb
mov
xchg
das
not
and
ja
int
cmpsb
popf
dec
std
test
sbbl
ljmp
int3
in
pop
add
test
ret
inc
gs
xor
sub
mov
in
iret
jle
push
pop
daa
lret
or
scas
jb
clc
sbb
scas
cmc
and
mov
mov
pop
mov
fistl
shll
pushf
mov
movsb
dec
add
cld
or
pop
mov
cmp
cmpsl
sub
sub
and
jns
xchg
shll
or
insl
xor
test
rorl
dec
andl
xchg
out
idiv
out
add
call
cmpsl
xchg
pop
pop
shrb
mov
pushf
ds
xchg
add
pop
leave
xor
shr
mov
inc
out
jno
sub
xchg
push
loop
push
enter
lret
xor
arpl
jae
or
lock
jg
pusha
cli
mov
dec
dec
push
push
add
inc
add
add
xor
and
adc
fldenv
mov
js
scas
enter
ljmp
cmp
mov
mov
into
mov
cmp
cmp
sub
adc
dec
cmc
loope
cmp
add
rdtsc
sahf
adc
xchg
xor
xchg
xor
mov
xor
outsb
mov
inc
fstpt
nop
sub
aam
cmp
into
loopne
xor
add
cld
and
scas
adc
dec
mov
mov
jg
std
int
cmpsl
int
xchg
jmp
jecxz
mov
pop
push
loopne
mov
dec
mov
or
fidivs
xor
lret
inc
lea
mov
jecxz
cmp
dec
clc
leave
add
adc
jge
jno
cmp
sub
push
pushf
cld
sbb
dec
sbb
subb
push
lahf
stos
jb
sbb
add
fcmovnb
mov
fldt
pop
fisttps
or
xchg
mov
ficoml
jp
aas
adc
add
add
int
loopne
test
insb
cmp
pop
cs
xor
push
pop
cmp
stos
mov
jne
inc
xor
cmp
xchg
loopne
test
divl
jbe
or
push
sti
push
movsl
mov
add
pop
leave
jmp
mov
hlt
inc
and
arpl
mov
xor
dec
push
bound
or
out
jmp
xchg
ss
sahf
mov
inc
mull
push
negl
test
adcl
rcr
pop
cmc
push
rorl
popa
push
sarb
jbe
adc
cli
jns
repnz
pop
addb
mov
inc
out
mov
xor
adc
sarl
push
fistl
pop
loop,pn
add
repnz
inc
mov
sub
mov
orl
or
cmp
pop
ja
push
push
stos
sub
imul
mov
fidivs
inc
mov
test
cmpsl
inc
sub
or
ret
outsb
movsb
fnstsw
sub
push
scas
test
push
xlat
pop
fistps
shl
jmp
in
pop
stos
adc
xchg
xchg
lods
xor
xchg
xor
or
bound
clc
es
xor
mov
jg
mov
enter
push
cmp
inc
cmc
dec
mov
sub
ffreep
xor
subl
sub
hlt
lret
ss
add
js
aam
push
fstps
and
push
std
js
jnp
imul
mov
sub
sub
ret
insb
sub
mov
movsb
into
pusha
bound
add
jp
stc
loope
pop
pop
movsl
cmp
out
daa
cmp
loope
test
mov
xchg
clc
inc
cwtl
testl
repnz
adc
sbb
push
jns
incb
or
sbb
sbb
scas
lock
cmp
bound
in
dec
jns
cmp
mov
lods
pop
xchg
icebp
mov
rclb
daa
jne
xchg
xor
inc
jbe
mov
pop
push
fnsave
movsl
dec
out
test
or
das
jmp
push
sarb
mov
fnstsw
sub
jecxz
add
sbb
dec
add
push
push
scas
jbe
and
xlat
cmp
ret
xchg
jle
loopne
movsl
xchg
loope
xchg
stos
sbb
dec
in
int3
loopne
fnstenv
adc
mov
ret
fwait
mov
shr
add
pop
rcrw
icebp
addr16
mov
or
add
lea
cwtl
or
or
pop
mov
sub
mov
inc
sar
pusha
aas
cwtl
testb
icebp
mov
or
mov
fistpl
jle
or
aas
sbb
aas
out
mov
loopne
jge
je
mov
lods
popf
add
stos
lret
mov
dec
inc
dec
loope
pop
jg
pop
sub
popa
fwait
inc
pop
mov
cmc
loopne
stos
sbb
lcall
call
add
in
dec
ret
push
xchg
sub
jne
aas
cld
in
in
adc
jl
xchg
aad
jne
leave
imul
dec
leave
mov
insb
mov
hlt
add
idivl
sbb
fstpl
lods
repnz
jns
dec
cmpl
loop,pn
jecxz
add
mov
sahf
ror
xchg
cmp
mov
cmp
mov
lcall
lret
dec
pop
leave
push
outsl
inc
or
add
loopne
outsl
adc
into
in
cmpsb
mov
inc
jnp
xor
ret
cmp
dec
loopne
xchg
in
adcl
dec
or
arpl
pop
cltd
mov
fscale
ret
inc
movsb
pop
xchg
leave
push
mov
push
fsts
mov
popa
cmp
inc
dec
ljmp
mov
lahf
lret
mov
lds
out
lret
movsl
divb
push
mov
mov
push
subl
jecxz
mov
gs
xchg
test
jnp
cmpxchg
loope
inc
fwait
sbb
sbb
jp
mov
or
push
cmpsl
xchg
add
adc
in
mov
bound
test
test
stos
call
pushf
pop
addb
or
aad
aam
push
jge
cli
pop
and
lock
sahf
or
movsb
sti
clc
fwait
loope
insl
les
mov
fcomi
les
stos
mov
cmp
add
test
pop
sub
notl
push
imul
outsb
jmp
lret
dec
loope
xchg
std
inc
mov
mov
test
fwait
fisttpl
hlt
or
gs
xor
xchg
test
mov
cmpsl
sub
or
mov
sbb
inc
nop
cmp
xor
sub
popf
mov
stos
imull
mov
lahf
rcll
mov
shlb
add
fisttpl
dec
cltd
sub
xchg
aad
jmp
push
xchg
pop
aad
ret
sub
push
xor
xchg
nop
dec
fisubrs
leave
imul
jo
test
out
into
or
loop
cld
insb
ljmp
xchg
pop
jle
sub
sub
icebp
frstor
fcomps
pushf
pop
xor
adc
sbb
mov
inc
push
sbb
sub
in
xlat
lea
sbb
shrl
icebp
and
push
push
dec
data16
int3
adcl
fadds
lds
rorb
stos
jb
call
jmp
das
sbb
rcl
xchg
inc
sti
in
test
outsb
mov
mov
adc
jecxz
fmuls
je
sub
xchg
mov
cmc
inc
ss
sub
out
ret
fwait
sbb
data16
sbb
jno
fwait
rclb
rorb
adc
dec
xlat
lret
rcll
xchg
sub
stc
pop
ret
jmp
cmp
shrb
dec
jg
hlt
mov
rcrb
push
add
adc
lret
aaa
mov
mov
or
or
dec
dec
cmp
cmp
pop
dec
sub
mov
mov
mov
adc
pushf
pop
cmc
mov
adc
imul
mov
xor
push
or
xor
push
cli
and
test
mov
cmp
bound
or
jns
pop
test
pusha
jbe
cmpsb
test
cmpl
into
pop
push
jecxz
fnstsw
xchg
fcompl
push
mov
xchg
add
xchg
insl
inc
aaa
int3
xchg
push
clc
popf
xor
popa
test
ljmp
mov
sbbb
das
jno
jo
xor
xchg
push
push
jp
mov
outsl
js
incl
jno
out
sub
mov
adcb
pop
into
in
jecxz
push
xor
mov
ret
push
jmp
push
mov
pop
sbb
test
fistpl
shlb
scas
fsubl
pusha
jge
mov
lock
rcrl
dec
cwtl
jecxz
aas
imul
in
leave
icebp
or
xchg
outsl
push
data16
mov
in
pop
sbb
jb
xchg
or
pushf
dec
fmul
jg
inc
out
mov
pop
push
leave
repnz
pusha
jl
repnz
cmpb
and
negb
insb
pop
int
scas
mov
fsubl
jno
bound
scas
mov
fsubl
dec
sbb
push
pop
push
add
clc
loopne
and
in
fnstsw
cmpsb
out
jecxz
cmpsl
jnp
jne
add
addr16
xchg
in
insl
jno
repnz
fidivl
stc
mov
cld
push
icebp
pop
pop
jno
lds
aas
fcmovnu
push
mov
gs
mov
decb
lret
ds
ss
adc
adc
cmpsb
xor
cwtl
pop
in
and
shlb
mov
sbb
pusha
mov
pop
push
add
imul
mov
int3
xor
jb
aas
stos
test
gs
jecxz
out
int3
ja
jp
inc
ret
cmp
stos
pop
out
dec
xor
int
insb
inc
push
lds
pavgw
and
leave
daa
dec
xor
fdivl
insl
jmp
and
mov
sahf
jmp
push
xchg
xor
pop
shr
add
dec
or
jle
dec
movsb
lahf
pop
push
jp
and
jno
lret
adc
incl
into
popa
cmp
rcrl
push
lock
push
sub
mov
jo
dec
pop
es
jne,pn
push
push
inc
cmpsl
jecxz
imul
dec
jg
jge
pop
aam
xor
test
ja
into
bound
inc
adc
xchg
fistps
stos
mov
jns
and
cmc
inc
push
mov
lcall
mov
inc
jmp
add
movsl
sbb
outsl
jmp
jns
int
rolb
and
cmp
dec
push
loop
imul
and
xchg
mov
jp
sbb
test
dec
mov
sbb
fstpl
arpl
lds
mov
into
and
cld
mov
imul
or
mov
push
cld
cmc
fiadds
pop
daa
pop
loop
pop
dec
xchg
sub
sahf
and
sti
jae
mov
aas
jb
fs
jnp
sbb
push
ja
lods
test
push
mov
push
in
dec
nop
faddl
in
and
cmp
lahf
mov
pcmpgtw
adc
fs
push
adc
and
ljmp
lock
mov
sti
mov
pop
mov
pop
jne
push
cmp
ljmp
xchg
and
sarl
into
inc
test
adc
mov
mov
pop
ret
bound
outsl
fs
add
sahf
gs
lahf
push
mov
lds
jns
pop
add
ds
fldcw
mov
aad
xchg
xlat
add
sarl
sub
adc
fmull
enter
jge
inc
inc
pop
dec
fdiv
fsts
cld
jge
dec
jle
js
xor
popa
in
xchg
cmp
rcrl
pop
ja
arpl
aaa
js
inc
jbe
jp
enter
mov
or
into
jns
push
out
icebp
leave
pop
adc
jne
ret
inc
ss
jno
add
mov
and
or
mov
xchg
add
out
ror
enter
and
inc
in
cmp
aam
mov
ficoms
ljmp
lea
insb
inc
push
out
das
xor
in
aaa
jp
jmp
test
mov
jle
mov
jnp
xor
inc
dec
pushf
lret
pop
mov
adc
imul
scas
xchg
push
jns
loopne
shr
movsb
imul
push
in
mov
lds
popf
mov
in
add
ds
sarl
test
cld
push
jp
dec
dec
xchg
jge
xchg
push
sbb
mov
mov
fdivr
and
imul
push
cmp
repz
mov
inc
andl
mov
jl
les
xchg
clc
sub
jbe
imul
cmp
lcall
cld
ljmp
jns
arpl
sub
out
pop
xchg
adc
mov
cs
push
xchg
push
jecxz
mov
jl
lahf
xor
xor
test
and
jmp
loop
xor
fwait
mov
aas
pop
into
jle
test
mov
insb
mov
sub
lds
rolb
rorb
adc
insl
inc
fiaddl
es
mov
fidivl
push
sbb
xor
punpckhdq
lret
pop
pushf
mov
sub
xchg
lret
dec
mov
mov
mov
test
cs
xor
mov
fsave
adc
pop
sub
ljmp
or
out
push
sahf
pop
push
push
pushf
fiadds
int3
notb
pop
push
cld
inc
das
inc
in
push
out
xor
repnz
repz
xchg
scas
and
push
inc
jb
stc
cmp
jle
dec
adc
ss
sub
cmp
insl
inc
mov
xchg
xchg
test
loopne
jno
ds
icebp
mov
xchg
fbld
inc
or
cld
jmp
inc
sbb
and
jle
mov
jns
icebp
stos
fstps
loope
pop
dec
lcall
std
or
push
jae
lock
dec
dec
push
pop
mov
adc
out
xor
dec
sbb
fmull
ret
mov
cmp
mov
push
popa
negb
lea
sbb
or
sub
cmpsl
lods
pop
in
mov
jle
insl
sub
in
or
push
lret
xor
mov
jl
pop
mov
mov
sbb
or
stos
pop
lock
mov
stos
pop
leave
das
mov
mov
sbbb
movsl
xor
sarl
xor
jo
scas
cwtl
mov
loopne
pop
jmp
sar
push
xchg
cmp
jge
mov
arpl
pop
mov
in
mov
xchg
cmp
cltd
mov
cmp
jb
xor
movsb
sbb
push
sbb
push
adc
mov
inc
into
lods
xchg
hlt
incb
stos
cmp
sub
sub
dec
mov
mov
cmp
rcll
aaa
inc
daa
scas
js
inc
push
call
scas
mov
inc
jae
pop
cmp
xor
mov
arpl
jns
idiv
lret
orl
push
mov
push
jb
jbe
jno
or
push
xchg
lock
pop
xchg
pop
pop
sar
cmp
push
call
sbb
rcll
int
icebp
cli
test
clc
cmp
xlat
fisttps
pushf
mov
cmp
or
jp
xor
push
and
sbb
lock
push
mov
testl
push
or
sahf
iret
test
mov
sbb
dec
data16
fstps
cmp
add
adc
mov
out
xor
cmova
sub
push
adc
lret
fsubp
add
shrl
rclb
lea
ljmp
loopne
repz
lcall
xchg
fidivrl
mov
mov
pop
rcrl
ja
hlt
sahf
inc
daa
stos
stc
xchg
and
xchg
dec
push
sbb
rorb
insb
push
pusha
sbb
bound
dec
pop
lods
int
mov
int
sbb
add
adc
adc
ss
jg
ret
mov
and
into
inc
jp
sub
insb
imul
jge
push
add
sbb
sbb
xchg
sbb
and
dec
aad
out
arpl
push
aas
rcll
sbb
fmull
shrl
add
jb
pop
ret
jge
jno
clc
dec
insb
and
ret
and
ss
insl
mov
adc
xor
push
lcall
adc
or
sbb
or
or
fistpl
pop
jns
sub
out
sahf
test
cmp
popa
add
scas
mov
mov
cmp
sbbl
popa
rolb
std
mov
mov
and
lods
mov
push
ret
mov
fstps
push
adc
rclb
sahf
daa
jne
decl
dec
add
ret
and
xor
jnp
adc
mov
sbb
mov
adc
mov
pop
loop
setge
mov
ljmp
jae
sub
es
cmp
lods
arpl
jne
jmp
ds
imul
push
int3
cld
movsb
movsb
xchg
aaa
or
scas
xchg
xchg
into
sbb
mov
or
pop
cmp
lock
mov
jnp
cld
fwait
je
lea
or
bound
inc
mov
pop
adc
mov
test
nop
pop
ret
call
out
cmp
lods
mov
insl
jmp
push
jns
enter
test
pop
dec
adcb
arpl
add
xchg
cltd
sbb
pop
ds
sahf
mov
dec
lock
cmp
lahf
mov
aaa
in
cmpsl
add
push
inc
adc
pop
push
andb
adc
pop
mov
dec
cli
jg
push
jnp
and
lret
sbb
jp
jae
lods
cltd
test
scas
imul
adc
ret
sub
or
mov
test
ljmp
adc
jne
mov
xchg
sbb
scas
daa
sub
repz
loop
or
dec
rolb
jecxz
mov
ljmp
pop
sbb
xchg
push
mov
pushf
dec
push
hlt
add
inc
and
into
add
pop
pop
mov
clc
cs
ds
push
jl
mov
adc
mov
nop
push
mov
dec
sbb
cmpsl
fsubrl
pushf
sqrtps
pusha
lods
xchg
add
cmp
mov
or
pop
add
sub
cli
js
lcall
enter
add
mov
es
xchg
out
xor
sbb
fs
jb
mov
das
hlt
or
ds
add
fiadds
lcall
rolb
loop
mov
jb
mov
push
jle
xchg
lcall
imul
dec
jle
int3
pusha
sbb
stc
mov
in
jge
lcall
mov
mov
and
shll
xchg
inc
sbb
lds
cmpsl
lret
hlt
inc
mov
xchg
movsl
enter
lret
sub
test
rclb
mov
fisttpl
or
int3
push
scas
cmp
in
jbe
jl
shlb
dec
mov
movsb
inc
cmc
pop
fmul
es
stos
push
fwait
push
push
xor
pop
fwait
inc
aad
das
fisttpl
or
sahf
jmp
mov
mov
mov
cli
sti
cmp
je
in
jl
jecxz
insl
adc
jle
test
scas
repnz
xor
lahf
out
sbb
pop
gs
nop
das
fld
pop
cmc
jnp
sub
test
jmp
push
decb
mov
lods
or
mov
pop
xor
pop
inc
xlat
ja
add
mov
add
std
mov
lods
popl
sarl
enter
inc
aam
mov
fadds
dec
stos
or
inc
fldl
xchg
inc
std
popf
out
rorl
inc
lods
pop
lcall
test
neg
fwait
and
addb
push
inc
mov
into
dec
jecxz
shlb
push
jecxz
pop
mov
scas
andb
in
fmuls
pop
cld
faddl
push
sub
pop
bound
lds
cmp
jecxz
ror
leave
pop
mov
sbb
jno
xor
mov
or
insb
push
rcr
ss
scas
add
sub
jmp
shll
ljmp
dec
popf
in
leave
dec
fcompl
loop
dec
dec
lahf
jle
clc
push
mov
xchg
inc
pop
xchg
or
inc
jmp
jo,pn
shlb
dec
push
jne
stc
out
pop
mov
in
cmp
xchg
pop
adc
imul
lahf
fsub
push
mov
test
scas
dec
mov
or
and
inc
imul
jge
mov
aad
in
jne
jne
decl
xchg
xor
repnz
mov
dec
in
jbe
sub
xor
push
add
mov
mov
push
adc
xorb
movsb
out
jne
dec
sbb
pop
ja
fs
fnstenv
pop
pop
cli
jo
inc
or
or
lahf
jae
xchg
lahf
repz
lahf
stos
mov
xor
adcl
shll
les
inc
pop
test
or
enter
div
dec
iret
repz
out
xchg
xor
sti
push
mov
rorb
and
aaa
mov
cmpsb
shrl
gs
mov
inc
cmp
cmp
int3
mov
dec
fnstenv
inc
jg
xorb
loopne
popf
bound
mov
stos
cmp
push
roll
sbb
dec
ror
xor
orb
sahf
call
test
pop
lret
xor
iret
and
pop
xor
jne
out
call
dec
push
mov
mov
inc
mov
mov
fisubrs
xchg
cmp
sti
xchg
mov
jne
cli
sub
jle
lret
push
cmp
outsl
or
add
fwait
cmp
aas
fsubrl
ret
fwait
hlt
add
and
sbb
cmpsb
sub
mov
loopne
jbe
jns
push
push
in
sbb
ret
out
int3
sbb
shl
test
pop
xor
or
push
push
lds
xor
cmp
int
bound
inc
cwtl
ds
add
shr
gs
add
jle
push
add
inc
and
sub
movsl
mov
mov
adc
icebp
or
adc
ljmp
mov
and
test
clc
lahf
adc
outsb
cmovp
push
cmc
js
xor
fnsave
fimull
in
ret
jp
xchg
mov
xchg
fs
cltd
stc
cmc
aam
xchg
mov
sub
sbb
lea
jmp
fcomi
shlb
jnp
sbb
mov
jg
fstl
adc
mov
stc
sub
jle
mov
dec
add
cmp
cmp
mov
push
jns
inc
aaa
pop
mov
jg
insl
lret
hlt
mov
xchg
bound
mov
out
fwait
jnp
push
mov
lcall
adc
or
in
cmp
sub
lea
sti
sbbl
fimull
jo
insl
shll
pop
adc
andl
mov
dec
cld
jecxz
jb
inc
daa
xchg
xchg
jbe
bswap
das
mov
xchg
xor
loop
aas
xor
xchg
cmp
sbb
faddl
in
mov
int
push
sbb
popa
add
push
sbb
fnstenv
insl
or
lret
jg
out
xchg
or
lahf
dec
pop
push
sub
aad
jle
xchg
out
in
xchg
cmc
imul
add
lfs
imulb
ds
out
mov
fldl
adc
test
or
shrb
lret
adc
out
push
or
add
cmp
xchg
movsl
inc
jle
out
sub
cli
xchg
xchg
cltd
mov
mov
jns
mov
stc
jl
adc
arpl
enter
out
add
filds
mov
inc
clc
data16
test
loopne
scas
les
test
mov
adc
sub
ret
jg
mov
mov
fnstcw
xchg
daa
les
loope
pop
adc
dec
inc
icebp
pop
dec
and
or
and
mov
mov
xor
inc
cmpb
push
lock
cwtl
test
mov
xor
xor
mov
filds
cmp
mov
and
lret
mov
test
loope
jge
in
jg
push
xchg
mov
leave
pop
jno
sti
add
and
push
mov
lahf
repnz
loope
std
cld
and
push
jge
bound
sbb
mov
cli
outsl
idiv
mov
mov
mov
push
sbb
sbb
inc
mov
vpsubw
jo
outsl
bound
jo
int
neg
outsl
cli
mov
out
mov
push
pop
lock
rcrb
enter
jne
les
pop
out
clc
scas
sbb
fsubs
outsl
ja
cltd
xchg
es
jecxz
decb
mov
xchg
insb
fldenv
iret
and
leave
adc
in
or
xchg
daa
je
jae
cmp
repz
lea
lods
pop
enter
pop
pop
das
pop
sbb
rolb
arpl
es
mov
pop
mov
sti
sbb
sbb
cmp
pop
inc
lea
ret
aaa
hlt
jae
insl
sub
dec
jnp
jb
es
mov
mov
adc
mov
pop
jle
and
sub
sbb
aam
or
cli
arpl
push
jge
negl
cmp
out
popa
adc
nop
in
cmpsb
push
jns
call
pop
jo
mov
jge
inc
fsubp
fdivrs
pushf
adc
xor
idivb
js
mov
and
subl
imul
cmpsl
pushl
xchg
or
ss
into
and
and
sbb
jno
jmp
sahf
in
out
pop
testb
lds
xorl
mov
call
and
aaa
test
in
push
sbb
cmp
fistpll
notb
cli
lcall
pusha
lds
cmc
popa
pusha
mov
push
shlb
mov
lods
cltd
movsb
arpl
insl
sbb
sub
inc
or
push
test
iret
gs
insl
cwtl
lods
pushf
push
xchg
int3
jo
adc
pop
shll
clc
jo
sub
xchg
ret
mov
dec
mov
adc
adc
xchg
in
lahf
loop
clc
flds
loopne
scas
xor
jge
sub
and
in
stos
adc
mov
push
cmp
mov
cmpsb
mov
inc
cli
xchg
mov
cmp
or
mov
or
iret
mov
lcall
insb
adc
cmc
cmp
fwait
lret
xchg
rclb
sub
mov
fdivrs
jbe
inc
cltd
repnz
xchg
cmp
cld
mov
mov
lock
inc
iret
shrl
inc
loope
push
mov
inc
lret
mov
loop
imul
in
add
loop
adc
stc
test
scas
int
dec
aam
rcll
sbb
mov
push
fnsave
sub
adc
xor
cmp
das
jae
ss
js
jl
mov
lcall
and
addl
inc
xchg
sub
add
sahf
xchg
leave
push
pop
sub
add
sbb
cmp
popa
imulb
enter
push
jae
add
orb
sub
xchg
insl
lock
pop
outsl
fs
out
idiv
jp
dec
lea
aam
pop
xchg
xchg
add
adc
push
jge
xchg
mov
push
xchg
das
lret
jmp
aas
jl
and
ss
and
pop
and
std
inc
rcr
rorl
sub
sub
adc
jl
jl
mov
push
xchg
cli
mov
scas
mov
push
xchg
mov
mov
add
cmp
push
cmpps
mov
in
mov
hlt
aad
fidivs
fwait
subb
dec
push
adc
or
mov
out
mov
xor
sub
pusha
jmp
in
dec
std
xchg
and
sub
fistpl
mov
in
push
xchg
jg
and
sbb
pushf
stos
dec
dec
int
cwtl
sti
cmpsl
sbb
fisubl
add
rcrl
dec
and
icebp
adc
push
fldenv
cmc
in
mov
stc
sbb
jae
add
stc
cmpsl
xor
pop
ja
push
out
data16
das
fbld
cmp
sbb
or
jns
xor
dec
loopne
cmp
jnp
rorb
pop
cmp
mov
test
jge
xchg
or
mov
add
insb
lds
push
or
loopne
pop
mov
adc
or
inc
rorb
pusha
imul
mov
es
and
rcll
xchg
mov
rclb
inc
sub
mov
call
lods
dec
pushf
inc
sbb
add
fdiv
jb
jb
roll
jbe
push
ds
ficomps
pusha
ljmp
lret
lret
jl
cli
xor
sub
or
pop
xor
or
mov
mov
addb
jae
cld
in
cwtl
rorl
js
push
add
sbb
and
jle,pn
push
iret
dec
lcall
and
jp
fisubrl
sbb
js
sbb
mov
imul
hlt
arpl
xchg
push
mov
cmpsb
pushf
push
lea
push
push
jmp
je
sbb
mov
push
mov
cltd
xor
mov
inc
jecxz
jae
jae
push
mov
in
dec
dec
mov
shll
mov
in
push
xor
hlt
or
or
adc
pop
mov
and
adcb
pop
dec
xchg
jle
std
add
sete
dec
rcrl
lock
push
movsl
das
xchg
pop
daa
enter
push
das
push
lret
frstor
call
nop
sbb
mov
ficomps
bound
fsubl
push
xor
sub
js
hlt
sub
sub
subb
test
cwtl
push
in
xor
popa
into
es
das
add
jne
popf
incl
sbb
outsl
ljmp
adc
mov
adc
shrl
mov
repz
sub
ss
fdivrs
mov
wbinvd
into
jns
and
jns
mov
mov
dec
test
jbe
push
imul
fists
cmp
outsb
out
xchg
fiaddl
mov
cmp
mov
sbb
mov
rorb
add
lea
push
mov
lock
aaa
cld
mov
or
pop
sub
sub
add
scas
jnp
scas
mov
mov
out
and
aaa
lahf
or
lods
or
pushf
mov
mov
sub
sbb
sti
xchg
lods
inc
loop
icebp
insb
mov
mov
addr16
adc
push
mov
mov
sub
and
lret
xor
sbb
cmpsb
leave
test
aam
lahf
or
std
aad
jno
inc
inc
mov
mov
xor
aam
add
aam
mov
in
divb
pop
ror
lret
hlt
rorb
subb
ss
lock
ret
add
add
xchg
lret
and
mov
push
into
lret
xchg
xchg
out
enter
scas
pop
jo
aas
mov
dec
fdivl
cld
aad
aaa
imul
jb
mov
and
ds
nop
add
lds
pop
push
and
mov
mov
jg
lods
mov
sbb
daa
sub
pop
mov
pop
mov
dec
push
sbbl
lret
add
aam
mov
scas
out
cltd
rcrl
test
movsl
pop
xchg
mov
mov
jmp
mov
popa
add
xor
repnz
int3
call
xchg
push
mov
repnz
iret
pop
mov
add
add
sub
decl
pop
loope
inc
es
cli
in
pop
pop
dec
loopne
add
xchg
imul
xchg
frstor
shll
es
push
push
dec
xchg
rcl
stos
sub
lds
and
xchg
stc
lock
loop
pop
loopne
sbb
cltd
inc
fnsave
in
fsubrl
xchg
jae
insb
inc
cmp
cmp
aad
sarl
cli
dec
jae
lcall
mov
sbb
or
adc
fdivs
inc
add
cmpsl
adc
cmp
clc
pop
cmp
dec
inc
outsl
dec
imul
pop
lods
test
mov
add
bound
xorb
mov
cs
push
test
fldenv
in
or
les
daa
cmc
sar
es
test
ss
fdivs
lea
inc
or
add
clc
xchg
and
cmpsb
or
rorl
jae
imul
int3
inc
cmovp
in
pop
adc
das
adc
mov
pminub
fldt
call
call
push
idivb
sahf
sbb
mov
mov
sbb
xor
pop
fwait
jmp
das
push
cmp
pop
mov
ljmp
popf
push
cld
mov
popa
push
lods
push
scas
sub
nop
dec
fldt
xor
sbb
adc
mov
push
add
pushf
enter
push
outsl
sahf
jo
test
adc
dec
call
out
cmp
mov
dec
in
js
push
js
movsb
sar
ja
push
mov
rcrl
rolb
cmp
cltd
lea
jo
inc
pushf
mov
mov
jbe
mov
pop
fcompl
scas
cmp
cmpsl
inc
aas
or
in
mov
push
stos
fdivr
insb
dec
mov
jnp
push
fcmovnbe
inc
mov
jns
scas
mov
popa
lcall
xchg
or
adc
mov
sub
pop
xchg
jp
ret
pop
outsb
fidivrs
test
pop
sbb
stc
test
pusha
jg
pusha
xchg
out
cld
fs
adc
jno
jmp
xchg
int
sbb
xor
xchg
fs
rcrl
lcall
lcall
mov
stc
cmp
cmp
in
jmp
cmpsb
and
call
or
jmp
cmc
loope
cmc
cmp
cli
push
subl
mov
in
push
enter
add
xchg
test
lock
push
mov
push
ss
cmpsl
loopne
inc
in
mov
in
aam
fsubr
je
dec
lahf
dec
lods
imul
ljmp
or
pop
xchg
mov
cmp
cwtl
out
subl
scas
sbb
mov
mov
xor
xchg
inc
pop
push
jg
movsl
cwtl
xor
xor
cltd
mov
xor
sbb
cmp
jbe
movsb
or
jb
sub
movsb
inc
movsl
ds
test
jb
data16
dec
outsb
int3
insb
jnp
lods
pop
mov
mov
daa
mov
repz
clc
faddl
shlb
mov
sub
mov
pop
sbb
loop
jb
les
jge
lret
mov
pop
add
int3
movsl
push
js
xor
add
nop
dec
inc
push
scas
or
cmc
pop
mov
jmp
insb
jl
jo
call
mov
dec
or
fcomps
mov
jne
mov
sub
pushf
jb
fs
lret
pusha
cmp
test
push
cwtl
dec
jge
aaa
mov
int3
xchg
dec
cmp
cltd
jl
cmpsb
cmp
cmp
stc
ror
xchg
xlat
test
stos
jl
je
mov
pop
lahf
outsb
dec
shlb
mov
dec
cmc
sbb
iret
sub
addr16
pop
and
mov
sub
push
dec
mov
cmpsl
sbb
lahf
and
dec
cmp
movsb
das
sbb
popf
leave
out
inc
push
jl
inc
addl
cmp
push
movzbl
cmp
push
or
insl
sbb
inc
addr16
xlat
mov
mov
or
outsb
push
mov
popf
xchg
push
xchg
fildl
mov
pop
push
xor
xchg
arpl
out
test
sub
stos
push
xchg
fidivs
or
dec
and
sub
lock
jecxz
pusha
insl
mov
ljmp
xchg
popa
out
pop
mov
and
cmp
flds
jl
out
add
push
ljmp
mov
mov
insl
jbe
push
insb
mov
push
sub
out
and
and
push
fbstp
lcall
sbb
dec
pop
mov
lds
xchg
jle
out
fs
sub
movsb
pop
mov
or
scas
enter
cmc
sar
and
push
jl
pop
fistpl
call
negl
push
pop
jno
sub
and
xor
rcrl
mov
jb
arpl
sti
pop
mov
cmp
jno
lret
lret
or
cli
or
sub
adc
notb
iret
jns
sub
pushf
cltd
push
out
mov
repnz
gs
ret
es
les
lock
daa
sub
loopne
pop
pop
xchg
jb
lds
outsl
inc
test
mov
test
pop
mov
sti
jo
mov
fildll
xor
xchg
xor
dec
call
or
inc
mov
ds
rcrl
and
mov
daa
mov
loop
dec
mov
xchg
inc
push
fidivrl
push
push
sub
mov
add
bound
mov
jb
cmc
cmp
ret
mov
test
inc
mov
and
sahf
imul
and
inc
sbb
std
scas
int
sub
pop
sahf
lcall
outsb
push
or
jle
add
sub
imulb
jg
div
outsb
adc
mov
mov
adc
add
andb
bound
sub
scas
std
push
cmp
lret
into
mov
jmp
pop
adc
push
push
loopne
inc
dec
inc
inc
in
push
arpl
cmp
lea
adc
or
out
mov
mov
cli
fnstenv
and
lcall
and
push
mov
push
fwait
nop
xchg
lret
or
mov
mov
and
cld
xchg
pop
sbb
push
fsub
es
sbb
lea
loopne
and
mov
push
mov
xchg
dec
xchg
arpl
in
and
fcomps
jle
and
push
test
mov
push
pop
rol
imul
mov
inc
pop
aam
call
cwtl
push
mov
test
or
popf
notb
sub
shlb
test
adc
fisttpl
iret
aad
lds
arpl
push
mov
sbb
dec
inc
mov
les
xor
mov
inc
jmp
shlb
lea
aam
stos
add
loope
ja
mov
bnd
add
pop
inc
js
or
cmc
xor
add
sub
clc
outsb
pop
dec
popf
dec
sbb
xchg
fdivr
pop
popa
imul
loop
sub
lret
xchg
push
imul
aad
out
sbb
mov
push
adc
jnp
sti
add
sub
cmpsl
cmp
sub
in
nop
xchg
fiaddl
or
push
adc
out
out
int
out
lret
icebp
jns
out
sub
aas
addl
inc
icebp
mov
outsl
inc
mov
incl
int
mov
xor
mov
dec
xchg
inc
lds
lods
je
int
outsb
pop
pop
push
insl
movsb
push
mov
ljmp
sbb
fwait
mov
scas
ret
test
adc
rorb
mov
adc
gs
sbb
fidivrl
rorl
dec
add
cmpl
add
pop
push
dec
cmp
pop
mov
push
mov
adc
mov
mov
leave
lahf
or
jae
sub
jg
cwtl
inc
ja
dec
jo
aad
lcall
mov
test
loop
jge
cmp
sbb
lahf
int3
aam
pop
xchg
mov
fdivrl
shrb
and
inc
je
aas
and
jecxz
xor
mov
fsubl
orb
pusha
inc
ret
dec
add
cmp
jns
shll
mov
jmp
sbb
dec
icebp
lcall
adc
fstps
out
cmp
popf
sbb
xchg
fs
lahf
jg
and
or
pusha
mov
cmpsl
loopne
xchg
cmp
movsl
mov
fwait
dec
sbb
shlb
and
xchg
popf
test
add
push
pushf
dec
pop
xchg
and
adc
xor
mov
mov
test
cmp
roll
lahf
int
mov
pushf
push
pushf
loopne
lea
aas
add
fs
iret
insb
js
je
sub
push
adc
ret
repnz
sarb
mov
shrl
jne
rorb
movsb
loope
mov
fisubrl
rol
loop
dec
les
pop
cmpsl
push
sub
jge
inc
cmp
dec
pop
imul
aad
test
aad
add
out
sub
cmp
and
mov
mov
jg
mov
sbb
int3
call
sbb
lahf
in
sub
lea
xor
add
or
negl
test
adc
cld
pop
cmp
cwtl
xlat
sbb
sub
mulps
add
stos
mov
jo
insb
ret
jle
jo
rorl
hlt
pop
sub
lahf
mov
sub
loopne
sub
inc
lea
out
mov
lret
andl
jnp
and
aas
mov
mov
insl
repz
pop
push
inc
js
dec
inc
or
loopne
cmp
push
or
xchg
dec
xor
insb
daa
aas
icebp
addl
dec
lods
stos
fucomp
inc
pop
fwait
iret
jle
fimull
and
inc
shlb
push
pop
pop
sub
jg
push
inc
mov
mov
sub
icebp
push
lods
mov
xchg
mov
and
jbe
jne
icebp
cmp
icebp
inc
adcb
lret
xchg
push
loop
pusha
xchg
sahf
sub
mov
orb
imul
bound
pop
xchg
or
xlat
mov
sbb
sub
xchg
dec
mov
mov
xchg
xchg
test
push
cmpl
jge
loope
or
jp
rcll
xchg
rcl
mov
sub
mov
cmp
movsb
adc
loope
test
pop
fcompl
mov
xor
push
mov
cld
bound
push
inc
stos
add
enter
sarb
jae
stos
sbb
jg,pt
imul
add
inc
sub
ds
cmp
pop
add
out
xchg
xor
dec
dec
pop
lds
or
int
pop
inc
shlb
pop
push
cltd
xchg
in
mov
test
push
test
adc
sub
mov
fstpl
push
dec
push
test
push
mov
push
stc
ss
test
xchg
idivb
cltd
popl
sbb
popf
jge
dec
ja
jbe
inc
adc
arpl
jl
in
jmp
adc
cmp
xchg
and
int3
or
in
sbb
sub
ss
mov
mov
aaa
xchg
ror
xchg
rclb
mov
xchg
inc
push
sub
lret
je
loop
or
out
pop
out
inc
ljmp
push
lcall
mov
jbe
loope
popa
adc
lret
out
ss
inc
inc
mov
int3
das
pop
xchg
lret
mov
mov
jle
test
and
arpl
test
pop
dec
aam
jl
xor
scas
aam
fucomp
frstor
add
push
mov
or
in
sub
cmp
jmp
xor
cli
enter
das
movsw
pop
ja
ds
popa
repz
mov
mov
mov
dec
adc
hlt
fwait
int
add
cld
jae
mov
xchg
push
jl
movsl
lret
sub
aad
add
dec
inc
jns,pn
clc
lret
jmp
scas
movsl
cmpsl
or
add
jns
add
idivl
jno
mov
jmp
filds
jge
aad
mov
adc
stc
jge
bound
xchg
mov
cmp
jecxz
je
pusha
mov
pop
pusha
adc
ret
ljmp
loop
arpl
pop
clc
push
add
fsubl
ret
inc
push
and
outsl
sub
mov
decl
stos
mov
pop
mov
inc
jno
jno
mov
test
pop
cmp
ljmp
dec
sbb
mov
xchg
pop
pop
inc
jmp
push
and
cmp
cmpsl
push
xor
outsl
mov
xchg
jl
jg
mov
popa
xor
daa
into
sub
or
xchg
inc
mov
cwtl
pop
ror
scas
inc
inc
sbb
scas
mov
loopne
cs
sbb
int
aas
jmp
mov
scas
mov
push
add
mov
sbb
push
pushf
xchg
xor
xchg
stos
js
out
call
stos
loopne,pt
lods
clc
or
jb
sub
mov
xchg
dec
lcall
cmpsb
or
lea
imul
stos
sub
cmpl
sbb
sub
jae
jns
push
icebp
mov
int3
cmp
sub
rcll
inc
jae
pop
sarb
pop
mov
mov
mov
fs
mov
dec
inc
test
insb
mov
xchg
pop
addr16
cmpsl
jle
jge
mov
push
aad
push
aam
push
pop
add
das
jl
jnp
lret
aaa
imul
scas
loope
adc
adc
pop
mov
inc
adc
or
stos
cmp
adc
das
jle
das
dec
js
fldenv
imul
arpl
mov
dec
inc
enter
adc
pop
fildll
in
inc
push
mov
jb
in
xor
andl
xchg
and
add
and
movl
mov
xchg
fsubs
icebp
ljmp
cwtl
int3
pop
shrb
xor
ljmp
add
lret
lcall
lcall
dec
sbb
xor
test
loope
sahf
or
pop
es
das
and
mov
dec
shlb
and
bound
sbb
push
sub
jb
pop
jl
add
movsb
aam
xchg
incl
adc
jecxz
icebp
xor
cmp
imul
sub
pushf
testl
add
adc
cmc
mov
push
adc
mov
dec
cli
xor
dec
mov
adc
fsubrs
movsl
or
sub
and
mov
adc
lea
test
xchg
addr16
lock
ret
cltd
ja
insl
add
repnz
add
ss
repz
and
xchg
jge
push
jle
sub
lahf
lret
xlat
sub
inc
popa
mov
sbb
jo
inc
mov
inc
jno
xchg
sbb
sub
pop
sub
gs
hlt
and
rcrl
insl
mov
xchg
mov
aad
sbb
aad
es
arpl
and
mov
push
dec
adc
imul
sub
vandnps
rcl
lahf
mov
jnp
shrl
mov
fstl
mov
dec
xchg
roll
cld
cmpsl
cmpl
movsl
divb
add
cmpl
inc
aam
adc
adc
cmp
mov
mov
xor
fsts
dec
out
push
adc
sub
dec
cmp
sub
aam
mov
mov
daa
adc
adc
cwtl
std
in
lcall
jns
xor
jge
hlt
xchg
sbb
repnz
nop
ja
lea
sbb
adc
and
add
and
mov
imul
lcall
dec
fcoms
movsb
rorb
enter
out
in
add
out
dec
cli
in
sub
and
cmp
cwtl
add
mov
inc
mov
js
and
adc
xor
add
adc
xchg
inc
mov
lcall
stos
jb
xchg
and
mov
adc
sahf
fcomps
hlt
sub
mov
push
dec
out
mov
aad
sbb
and
stc
inc
dec
jp
jp
push
inc
xchg
sbb
movsb
bound
add
dec
lods
ja
push
mov
les
jae
lret
adc
mov
push
adc
jmp
outsl
add
outsl
imul
push
div
test
imul
shlb
pop
div
fmuls
andb
cmp
sub
imul
and
mov
push
sbb
xchg
mov
sbb
ror
cmp
movsl
call
clc
repz
inc
sarl
and
mov
xor
mov
inc
mov
out
ret
jbe
rolb
loop
test
mov
call
sbb
inc
mov
mov
pop
or
je
jnp
push
ljmp
jle
ljmp
push
aaa
pop
xor
ja
pop
lahf
push
jg
xor
mov
shlb
push
push
jb
nop
lods
mov
add
outsb
std
pop
js
int
mov
aad
in
mov
stc
jecxz
pop
push
dec
cmp
jnp
out
cmp
xchg
cmpsb
or
xchg
xor
call
mov
lea
xorl
jae
jne
pushf
xchg
call
popf
test
cmp
repnz
popf
mov
jns
pop
dec
inc
mov
cmpsl
enter
add
mov
movsl
jmp
testl
cs
mov
in
dec
cmp
insl
pop
jno
cmc
mov
and
push
mov
and
push
sub
sub
inc
dec
or
mov
fprem1
mov
ret
loope
inc
or
mov
push
stos
mov
jns
jns
xchg
fnsave
test
test
div
sub
xlat
add
pop
aaa
popf
cmp
fimuls
insl
mov
push
jmp
push
out
sub
add
es
or
ret
outsl
dec
jp
pop
and
cld
sbb
jg
cmp
pop
sub
and
pusha
mov
scas
push
gs
cmp
outsb
movsb
jo
sbb
add
add
mov
les
fiadds
ljmp
cmc
jmp
adc
mov
lods
stc
inc
sbb
mov
shll
out
mov
dec
stos
pop
scas
lods
fucomip
inc
std
dec
cmpsb
and
loope
xchg
xor
cmp
sahf
push
push
or
dec
jb
cmpb
jbe
jmp
adc
xor
in
xchg
aaa
test
aam
dec
lcall
push
movsb
and
jmp
jnp
movsb
pmaddwd
mov
mov
sub
mov
xor
shrl
jnp
mov
lock
int
dec
mov
inc
leave
mov
lahf
fbld
sub
scas
jne
add
rcr
and
pop
andb
and
pop
fnstcw
test
fisubrs
les
enter
adc
hlt
mov
inc
test
jbe
dec
decl
mov
lds
sub
jge
adcl
mov
mov
clc
mov
sbb
pushf
fidivl
frstors
mov
and
pop
popa
dec
sbb
dec
stos
sbb
adc
lods
mov
int
sub
inc
cmp
jb
lock
and
mov
inc
test
stc
aad
ljmp
pop
sbb
scas
dec
push
rclb
pusha
pop
sbbl
or
iret
scas
es
sbb
cli
cmovbe
arpl
xchg
ja
aaa
fcomps
fwait
outsl
psraw
cmp
inc
shl
xchg
jp
bound
int
jg
mov
lock
cld
mov
push
negl
dec
int
pavgb
mov
bound
enter
cli
insl
test
mov
popf
pop
lret
ror
or
inc
enter
mulb
js
pop
imul
mov
lods
loopne
andb
mov
mov
push
imul
test
inc
xor
icebp
sub
mov
loop
sbb
or
and
aad
lock
imul
adc
add
and
test
xor
cmpsb
jb
in
xorl
gs
shll
ja
xchg
fbld
loope
mov
add
sti
outsl
sub
out
cs
in
scas
cmpsb
mov
mov
mov
outsl
in
out
adcb
xorl
shlb
mov
lahf
sbb
out
popa
fistpll
add
imul
sbb
lods
imul
sub
daa
fwait
pop
xchg
sbb
and
xor
xchg
jne
icebp
shrl
scas
cmp
xchg
xor
cmp
jle
pop
cmpsb
push
dec
inc
je
bound
pop
lret
sub
inc
and
cs
test
mov
std
or
jae
cwtl
dec
cmpsl
loopne
dec
xlat
pop
adc
cmp
pushf
in
in
adc
arpl
movsl
ret
sub
push
pop
cmp
mov
lods
js
ja
test
or
shrb
fsubrl
xor
push
pusha
popa
je
aam
shlb
repz
and
pop
and
and
stos
cltd
ljmp
movsb
data16
mov
in
scas
and
lcall
dec
sarb
push
jb
insl
jo
cmp
dec
shlb
mov
sbb
jecxz
pop
es
cwtl
js
inc
sahf
pop
ret
xor
jne
adc
mov
push
xchg
mov
stos
out
mov
and
adc
jnp
jle
jl
sbb
ds
test
lods
push
scas
ret
sub
mov
add
add
add
cmp
xor
xchg
lcall
mov
push
mov
adc
mov
test
cmp
dec
pop
outsb
mov
and
sub
mov
pop
out
fists
sbb
cld
jg
push
xorb
stos
scas
out
jle
and
xlat
dec
mov
pop
ror
adc
movsl
call
inc
xchg
lods
inc
pop
sub
mov
jb
or
movsbl
pop
shll
push
and
sbb
fmull
xchg
xchg
adc
testb
gs
mov
cmpsb
fidivl
sub
mov
scas
cs
mov
ja
sbb
shr
pop
loope
outsl
sub
sti
adc
mov
mov
jnp
push
mov
or
add
sti
sbb
in
cld
subb
pop
xor
je
es
push
xchg
xchg
clc
test
mov
mov
sub
inc
bound
imul
adc
add
pushf
cmp
xchg
sbb
aad
fs
adc
dec
xchg
inc
lods
mov
rclb
or
adc
scas
imul
divb
and
sahf
lahf
xchg
je
push
xchg
sub
lret
push
ficoms
pop
das
out
int
mov
jge
aaa
repnz
lahf
adcl
jbe
sarb
adc
mov
aaa
xor
and
push
hlt
mov
dec
jg
mov
mov
cwtl
fistpl
scas
insl
adc
cmpsl
iret
cmp
jmp
in
flds
jae
cmp
insl
gs
jle
inc
je
fs
inc
adc
ret
mov
jge
mov
arpl
icebp
lcall
je
mov
mov
fildll
cmc
xor
cld
enter
stos
int
sbb
rcrl
sbb
dec
xor
movsb
mov
mov
pop
daa
shrl
mov
out
nop
xchg
jns
jne
mov
iret
xchg
or
outsl
pop
fisubrs
xor
pop
popa
test
in
xor
and
and
flds
jns
mov
jp
push
lds
pop
sbb
cltd
mov
cmp
add
stc
adc
icebp
sbb
in
xchg
aam
xlat
fdivl
loope
adc
mov
jbe
loop
and
lea
jnp
adc
jb
pop
mov
std
test
jg
mov
call
cs
iret
mov
inc
jno
movsb
push
fstpt
cli
mov
jno
xchg
jae
and
ret
insl
mov
push
sbb
fildll
xor
repnz
sbb
cmpb
outsl
ja
inc
adcl
aaa
and
push
xchg
pop
xor
movsl
es
mov
push
jne
lods
out
fucomip
jns
cmp
insb
ljmp
mov
mov
push
scas
add
loop
rorl
outsl
data16
sti
dec
ja
mov
jnp
int3
xchg
nop
into
jecxz
icebp
dec
vandps
in
sbb
inc
jne
addr16
es
fsubr
nop
dec
cmp
stos
cmp
in
fcmovbe
dec
jne
xor
popa
jno
jl
mov
jl
mov
aam
sbb
sub
sahf
sti
or
ja
sbb
lahf
dec
jmp
jge
jmp
mov
insl
xor
pop
push
fidivrs
shld
pop
adc
cwtl
and
mov
xor
push
int
repz
mov
stos
inc
pop
pop
and
dec
daa
mov
in
cmpb
jge
or
xor
xchg
sahf
adc
scas
sbb
fidivs
xchg
jmp
lret
add
rorl
lret
mov
lea
shlb
xchg
orb
sub
pop
imul
xchg
cmp
xchg
ljmp
cmp
jne
cs
fsubrs
add
shlb
mov
repnz
inc
xor
nop
cmp
cwtl
cld
lret
insl
adc
loop
and
hlt
addr16
add
pop
fisttpll
sbb
imul
es
fiaddl
scas
aad
mov
outsb
fcomps
pop
xor
dec
sti
mov
add
enter
fbstp
mov
popl
lcall
xor
std
je
lods
dec
out
and
lods
adc
es
mov
cmp
lods
adc
xchg
mov
sbb
lods
mov
nop
sub
xor
pop
xorps
into
add
sub
dec
mov
fistps
imul
iret
inc
fsubrl
cmpsb
test
add
scas
jp
adc
ss
iret
aas
push
insb
pop
mov
repnz
push
mov
cltd
jno
out
imulb
movsb
inc
jns
xchg
lret
loope
push
push
lcall
mov
and
clc
mov
or
mov
out
bound
fwait
jns
imul
and
rclb
jmp
sbb
sub
xor
or
lods
sub
cmp
cltd
dec
loope
push
xor
jns
cld
lock
mov
mov
pushf
xchg
arpl
pop
xchg
imul
loope
sbb
xchg
cmc
cltd
xchg
hlt
fists
jge
jl
inc
rorl
push
cld
rcrb
pop
push
repnz
shl
mov
sbb
and
mov
enter
cltd
ret
pushl
out
out
inc
dec
adc
mov
jae
sub
inc
mov
pop
stc
in
aad
fimuls
lock
int
pop
adc
xchg
in
dec
scas
jle
inc
hlt
scas
bound
bound
adc
sti
arpl
and
adc
ss
pop
into
sub
and
cmpsb
push
lock
and
mov
icebp
add
mov
aam
push
inc
mov
inc
dec
push
es
xchg
push
add
lret
fdivs
loop
sar
ret
test
nop
icebp
clc
or
sbb
movsl
imul
add
cmp
push
xchg
pop
and
jge
and
sahf
sub
loopne
imul
xor
or
stos
and
adc
cs
lahf
sbb
pop
out
xor
dec
add
ljmp
mov
mov
jno
mov
adc
mov
je
call
dec
mov
inc
and
push
es
adc
sub
in
in
lock
sbb
mov
ljmp
push
push
insb
repz
insl
sti
test
imul
push
hlt
xchg
and
int
into
stc
jnp
addb
insb
aaa
cmp
push
jo
in
xchg
pop
jns
nop
outsl
mov
fistpll
pop
cmp
adc
movsb
dec
sti
mov
mov
iret
cs
movsl
cmp
decl
mov
mov
shll
sbb
push
ret
fisttpll
subb
in
insl
xor
mov
dec
inc
inc
adc
popf
mull
outsl
call
jg
pop
lret
jns
shrb
fnstsw
and
jmp
add
ret
mov
loopne
fsts
pushf
dec
pop
popa
xor
pop
inc
jp
add
sar
fsubrp
mov
lret
mov
inc
loopne
pusha
xor
adc
pop
sbb
jbe
filds
cmpb
add
adc
or
int3
fdivrl
add
popf
enter
xchg
rcll
xorl
cmp
adc
cmp
jb
sbb
repz
xor
inc
psubw
mov
aad
push
cld
int3
cmpsb
test
and
test
bound
test
sbb
xchg
jmp
mov
mov
out
out
insb
mov
sbb
movsl
and
pop
popf
push
aas
and
add
lds
addr16
std
cmp
test
adc
out
adc
rorb
jl
push
ja
sbb
push
out
jbe
or
dec
sub
cld
inc
stos
sti
sar
jl
dec
adc
adc
mov
in
mov
rorl
das
mov
sub
jne
inc
and
inc
outsl
outsb
mov
call
jmp
pop
or
jmp
jle
push
jmp
push
or
push
imull
inc
sub
cltd
sub
fisttps
jnp
push
push
popf
movsl
rcrb
fimuls
cmpl
lock
sub
scas
dec
clc
and
jnp
shrb
pop
sbb
mov
into
std
dec
cli
xchg
fdivr
int
dec
jge
jl
nop
rol
das
pop
ret
rol
mov
jae
cmp
in
lahf
jecxz
pop
add
call
lods
bound
sbb
cmp
jb
jge
push
cmp
cmp
fcompl
mov
or
clc
mov
pavgb
pop
cmpsl
sahf
jmp
mov
xchg
sub
movsb
sarl
jne
fcmovnu
test
fwait
pusha
outsl
sbbb
sub
out
filds
inc
and
mov
cmp
insb
adc
mov
das
fldl
stos
cwtl
testl
fucomi
dec
aaa
push
lret
cltd
lahf
inc
hlt
pop
test
jmp
pop
pop
jne
call
jl
cmp
add
add
mov
mov
sub
jg
cmpsb
ljmp
int3
aaa
fwait
call
into
pop
mov
repnz
cltd
out
fsubl
and
jg
push
daa
ret
fisubrl
int
push
inc
arpl
sbb
cwtl
bound
mov
jno
fstpt
aas
xchg
sbb
xorb
pop
out
mov
jo
pop
inc
arpl
popa
ljmp
fnstsw
push
rcll
pop
jo
incb
fwait
and
pop
loope
decb
mov
mov
xchg
in
sbb
test
cltd
cwtl
cmp
jmp
inc
cmp
sbb
pop
inc
out
xchg
push
mov
add
in
imul
repz
cmc
stos
inc
les
adc
cmp
es
les
lods
mov
add
lds
and
loope
mov
lret
xchg
and
imul
mov
testl
and
fbld
aaa
stos
and
ds
mov
enter
call
jnp
cmpsb
mov
jns
sub
cmp
jmp
rcl
xor
ret
push
out
xor
lcall
jecxz
pop
lret
pop
or
popf
xlat
in
psubb
or
imul
push
loop
sub
mov
js
push
push
add
pop
pop
cmpl
stc
leave
push
fiaddl
add
faddl
std
jns
in
pop
jns
inc
sub
pusha
enter
xchg
in
test
pusha
push
mov
popa
xor
in
loopne
adc
les
cmp
fs
mov
sbb
ret
xor
fmul
lret
aam
ljmp
loopne
scas
test
mov
stc
lods
push
xchg
repnz
sahf
adc
lock
xchg
repz
stos
jg
out
adc
sbb
and
push
jp
in
jle
mov
ret
out
lods
bound
pop
push
push
outsb
fimull
fildl
sbb
xor
out
add
and
in
cld
pop
stos
loop
jecxz
xchg
push
xchg
jmp
adc
xlat
add
out
or
jae
xchg
adc
sarb
shrb
stos
das
fidivrs
fadds
xor
divl
sub
ja
nop
jns
out
enter
or
push
mov
and
ss
mov
or
pop
sub
xor
in
cltd
mov
insl
shrd
ret
fld
sbb
outsl
fchs
jl
mov
jo
daa
push
mov
loop
mov
aas
mov
pop
addr16
cmc
or
mov
insb
xchg
mov
call
add
dec
mov
adc
add
lea
mov
sbb
movsb
scas
adc
pusha
inc
jl
shrl
push
nop
pop
push
bound
mov
mov
mov
sbb
mov
xor
inc
dec
pop
inc
sti
divb
mov
imul
repz
jl
aad
lea
ret
gs
in
xor
mov
pop
or
out
adc
sbb
int3
cli
ljmp
leave
mov
aad
daa
and
lea
xchg
sub
xor
xchg
jg
jge
inc
icebp
xchg
pop
cmp
lock
push
or
jg
pop
sub
aas
push
ss
cmp
mov
fstps
pop
sbb
xchg
jmp
lea
jge
push
xchg
jne
cld
and
int3
repnz
loopne
mov
cmp
lea
in
or
les
sub
sti
out
int
lds
dec
push
sub
sbb
in
push
fdivrl
jae
out
enter
inc
push
xorl
popl
je
mov
and
cld
mov
inc
adcl
imul
add
adc
jne
mov
pusha
div
or
test
dec
jnp
shlb
push
mov
sub
dec
das
loope
mov
inc
mov
sbb
inc
testl
jl
xor
movsl
rclb
and
insl
mov
xlat
xchg
lods
push
xor
stos
mov
jmp
pushf
dec
int
mov
adc
sbb
or
cmp
jb
enter
aam
fisubs
fs
std
push
popf
mov
and
or
xor
cmp
fucom
sbb
cmp
pop
jbe
pop
mov
sub
or
bnd
ds
js
test
bound
push
fld
push
or
call
les
push
jmp
cmpsb
aas
mov
dec
lea
outsb
push
inc
xchg
and
mov
jb
cltd
push
mov
call
push
lret
or
pusha
jbe
icebp
lea
out
mov
pop
mov
pop
mov
adc
pop
rcrl
dec
rcll
xchg
imul
and
mov
ljmp
enter
mov
pop
add
xchg
sbbb
xchg
cmp
dec
cmp
in
insb
mov
mov
lock
adc
inc
xchg
addr16
jle
mov
xchg
stos
mov
loope
loope
cmpb
push
stos
jle
jge
pop
xchg
fidivrs
jmp
pop
mov
mov
xor
adc
out
out
test
movb
fwait
test
mov
push
ljmp
popf
insl
loope
xor
mov
cld
lahf
cs
sbb
lods
jbe
xchg
mov
in
pop
movsl
jg
movsb
sbb
mov
ret
inc
inc
mov
lcall
dec
inc
sbb
shrb
out
fbld
mov
xchg
popa
popl
pushf
sub
mov
fs
int3
adc
call
pushf
mov
iret
data16
ret
pop
add
lret
shll
inc
pop
pop
sub
enter
jle
xchg
cwtl
in
pop
test
test
inc
add
popa
push
mov
xchg
insl
xchg
inc
clc
xor
xchg
jmp
mov
push
mov
pop
cmpsl
sbb
in
loopne
pop
das
loope
mov
cmp
lret
cltd
rcrb
jl
push
lods
mov
mov
mov
test
adcb
frstor
or
mov
or
xor
test
je
das
add
pop
lret
test
fildl
push
enter
inc
jp
rcr
aas
xor
mov
pop
inc
inc
sub
add
adc
pop
cmp
push
nop
jecxz
sub
adc
cmp
and
jge
cmp
jmp
fstps
loope
popa
insl
pop
cmovns
fnstenv
jae
jmp
xchg
push
orb
cmpsb
and
sbb
movsl
nop
jg
daa
mov
mov
or
mov
dec
test
loop
ret
xor
rolb
mov
test
mov
aaa
adc
push
inc
mov
jb
adc
xor
repz
dec
fldenv
pop
pop
xor
bound
out
jge
push
sahf
push
nop
xchg
inc
push
insb
js
add
dec
popa
inc
fidivrs
jg
lcall
mov
push
sub
fldcw
ret
lret
ds
fldl
sbb
push
rolb
loope
cmpsl
nop
fistpl
loopne
imul
adc
sbb
mov
push
and
xor
pop
sub
idivb
sbb
aam
sub
cs
mov
add
cli
orb
ret
mov
push
mov
dec
mov
dec
cmpsb
push
dec
cltd
inc
cmpsb
push
dec
es
int3
ret
adc
inc
fnstenv
add
cmpsb
mov
and
inc
cld
out
push
cmp
xchg
call
rolb
lea
mov
dec
outsb
mov
imul
and
push
pop
sbbb
xchg
sub
test
sbbb
inc
sarl
and
mov
lret
mov
mov
jl
data16
jns
jg
mov
lods
es
leave
mov
pop
cltd
inc
and
pop
test
incb
outsl
and
push
jp
jno
sub
ds
popf
adc
clc
inc
xor
jecxz
push
dec
jne
sbb
rorb
rep
dec
daa
out
inc
cli
xchg
fcoml
and
int3
adc
dec
pop
sub
push
xchg
loopne
add
xchg
xor
rorl
dec
insl
mov
lahf
push
cmp
loop
sbb
jae
dec
jo
add
sti
mov
cmp
loope
stos
mov
pop
cmp
push
pusha
adc
scas
stos
pop
inc
xorl
mov
incl
stos
xor
inc
add
mov
icebp
mov
add
jmp
pop
mov
hlt
mov
jo
dec
cmp
outsl
xchg
sbb
adc
adc
add
stos
sbb
xchg
mov
mov
sub
and
adc
adc
fistl
outsb
subb
out
fstps
into
nop
push
leave
fimull
sbb
mov
fwait
int3
aas
mov
orb
js
aas
in
inc
or
mov
lock
jno
sarb
add
fwait
mov
xor
inc
pop
scas
xorl
pop
and
outsb
inc
push
sub
repnz
arpl
mov
or
sub
cmp
jne
repnz
dec
loopne
gs
jl
jecxz
sti
stc
cmp
jae
sbb
out
push
mov
aad
pop
mov
sbb
iret
in
jne
xor
cmc
pop
mov
pop
gs
push
jg
mov
xchg
insb
fdivs
iret
cmp
pop
popf
lcall
mov
pop
pop
inc
xor
jle
jae
sbb
inc
or
insb
xchg
out
mov
pusha
loope
cltd
pop
insl
dec
int
cld
inc
jecxz
mov
sahf
cmp
push
inc
xchg
jmp
xor
cmp
mov
sbb
movsb
adc
out
dec
sub
sahf
adc
cmp
icebp
dec
xor
out
pop
bound
xchg
pusha
mov
out
xchg
cmp
jb
loop
jecxz
jne
mov
push
lcall
mov
je
xchg
loope
fdivrp
xchg
adc
mov
cmp
mov
and
lret
iret
adc
jp
dec
test
imul
shrl
cli
and
or
sub
cmp
dec
lret
vpmacsswd
inc
jg
lock
int3
in
dec
mov
jo
add
xlat
push
mov
and
dec
js
rcl
xor
jbe
lret
scas
push
repnz
cmc
fwait
push
insl
or
stc
sbb
xchg
nop
fsub
cmp
test
add
inc
inc
sbb
add
clc
sti
jecxz
jbe
std
xor
aas
xlat
cmp
sub
test
stos
pop
jg
xchg
bound
lock
pusha
jge
lret
je
stos
fadd
subb
or
addb
in
pop
sbb
imul
mov
cmp
sbb
test
out
test
pop
and
xor
jbe
jge
jnp
sbb
mov
pop
jmp
mov
scas
outsb
and
sbb
cmp
mov
imul
call
cmp
popa
jo
movsb
jmp
sub
orl
sbb
push
pop
stos
cmp
ds
push
push
imul
pop
scas
or
sar
les
enter
sbb
xor
dec
sub
add
lods
outsb
pop
dec
inc
xor
pop
push
ljmp
sub
jmp
int
cli
jl
jbe
cmpsl
or
stos
xor
lds
insl
pop
cltd
dec
lods
mov
mov
iret
ja
add
into
inc
pushf
fstps
lds
cwtl
fwait
popf
lds
push
cld
or
out
mov
mov
nop
pushf
pop
negb
fists
mov
hlt
push
sub
mov
cltd
or
loopne
jmp
dec
mov
in
xchg
pop
push
test
push
int3
xchg
mov
xchg
rolb
in
clc
mov
inc
stos
jmp
sbb
insl
mov
sbb
jno
roll
jmp
inc
jb
and
loop
mov
lods
add
adc
popf
pop
scas
das
inc
and
ja
iret
mov
ss
pop
divb
and
std
add
adc
jg
sbb
push
into
fmulp
decl
cmp
leave
inc
sub
nop
push
loopne
rcl
xchg
pop
jb
in
imul
adc
insl
mov
ja
inc
shr
add
push
int
sub
fnsave
mov
dec
or
add
or
adc
adcb
cmovl
shll
sub
shrb
js
sub
loope
jns
wrmsr
loope
insb
fwait
call
movl
cld
unpckhps
pop
insl
rorb
cltd
pop
std
push
inc
mov
inc
push
xor
and
sbb
ss
es
pop
mov
jae
add
repnz
in
ds
sbb
dec
add
fs
and
das
push
xchg
sahf
aas
popa
dec
mov
stos
cmpb
call
out
push
fmuls
jl
or
daa
fnstsw
add
dec
shrb
pop
dec
or
pop
jno
dec
hlt
cmp
cld
fstpt
ret
pushf
push
pop
aaa
inc
jae
cmp
fists
add
decl
ficompl
mov
or
push
pop
or
arpl
jbe
mov
sub
jmp
cli
dec
lahf
mov
sbb
movsl
jl
idiv
jle
sub
addl
data16
cmp
and
jno
je
rcrb
jg
orl
test
and
mov
pop
push
adc
insb
pop
inc
movsl
arpl
faddl
xchg
pop
jae
out
mov
pop
scas
out
inc
mov
in
fmull
cmp
and
and
push
dec
push
sbb
push
or
cli
fdivr
xchg
jle
es
data16
push
xor
lock
aas
mov
sti
adc
jp
push
cmc
mov
inc
dec
xchg
sarb
inc
movsb
mov
mov
jge
dec
fs
sub
int
xchg
pusha
adc
mov
push
shlb
pop
push
adc
sub
rcr
cwtl
lcall
in
lods
mov
sub
mov
incb
dec
mull
es
fsub
sbb
ljmp
into
insl
inc
repnz
sbb
mov
xchg
pop
std
stos
inc
imul
and
std
std
push
sub
dec
pushf
imul
jne
mov
lahf
sub
add
dec
add
lds
mov
sbb
or
xchg
int3
sbb
rcrb
jle
negl
jle
insb
imul
std
pop
pushf
int
pop
lret
jo
aad
dec
ja
adc
jnp
stc
lahf
inc
addb
sub
add
addr16
addl
inc
mov
sub
xor
mov
dec
mov
adcb
push
jno
stos
subl
fs
inc
adc
cld
lea
add
arpl
add
mov
movsb
mov
xor
pop
cmp
jno
dec
mov
pop
movsl
out
aad
scas
js
add
fisttpll
js
mov
lock
xchg
cmpsb
out
push
mov
dec
cmpsl
xchg
pop
inc
lds
adc
sbb
xchg
cs
pop
cmp
mov
push
mov
jb
inc
xor
imul
in
adcb
push
mov
mov
push
and
lock
sarb
mov
cmp
fistpl
xchg
sbb
mov
rol
jb
lret
leave
lcall
in
rolb
ftst
sbb
pop
lea
inc
fadd
sbb
pop
mov
enter
or
sarl
jne
and
lret
mov
icebp
pop
out
adc
cmc
mov
and
inc
repnz
fildll
jp
lret
or
test
sbb
negb
ljmp
push
jp
scas
aaa
lods
negb
jae
mov
daa
sub
inc
test
loop
mov
add
jg
jl
lcall
call
jae
mov
xor
pop
inc
adc
adc
cmp
scas
ljmp
push
jbe
call
fsubp
mov
outsl
cs
jno
xchg
leave
leave
inc
inc
leave
cmp
inc
ljmp
sbb
jmp
lret
jne
push
shrb
sub
pop
outsl
or
bound
lcall
dec
mov
sbb
or
rcrb
ljmp
push
adc
sbb
mov
jne
jns
or
and
xchg
dec
push
jo
jns
dec
pop
xor
mov
aad
add
fistps
pop
arpl
lcall
sarl
add
mov
icebp
rcl
icebp
ljmp
in
sahf
int3
pop
add
xlat
dec
sahf
cmp
shll
or
jecxz
shll
lret
jnp
jg
xchg
inc
push
out
fwait
xchg
jbe
insb
clc
adc
adc
inc
lds
popf
cmp
rorl
sbb
jne
cmpsb
insb
test
ficoml
xchg
pop
gs
push
xchg
mov
sbb
lret
js
sub
inc
fcom
and
into
dec
hlt
adc
in
fdiv
sub
repnz
xlat
and
hlt
and
mov
mov
out
mov
jne
push
cmpsb
scas
mov
mov
dec
in
mov
dec
mov
sarb
cwtl
adc
xor
push
jecxz
fcomps
and
push
mov
xchg
mov
xor
inc
push
add
mov
shlb
andl
loope
lcall
movsl
jecxz
testl
xchg
inc
arpl
xor
out
incl
jmp
dec
notl
xor
hlt
and
jne
mov
add
jbe
pushf
js
rorb
cmp
mov
call
xchg
es
fmull
jno
out
and
movsb
mov
outsb
stos
ret
xor
jno
mov
in
addb
arpl
inc
mov
ljmp
pop
and
mov
and
inc
pop
pop
lea
fildl
jge
inc
sahf
push
pop
popa
in
inc
cmp
pop
cmp
xchg
jmp
leave
loope
push
fiadds
jle
ret
push
push
sub
testb
cmp
and
les
jno
dec
xor
jns
fsubr
dec
bound
pop
or
test
mov
inc
scas
mov
mov
cmpsl
pop
mov
addl
roll
or
outsb
les
pop
mov
sbb
cmp
sbb
sub
jno
pop
mov
mov
push
dec
insb
dec
mov
fwait
bound
fdivrs
xchg
imul
mov
sub
sub
arpl
hlt
jbe
or
and
cs
add
fdivrl
push
loop
pop
mov
lcall
iret
jno
cmp
and
pmovmskb
aad
xor
mov
rcrb
icebp
sub
mov
pop
inc
mov
jns
adc
ljmp
cmpsl
push
dec
mov
pusha
xchg
scas
and
rol
jmp
pop
jmp
dec
and
addr16
jge
adc
repz
jb
mov
jmp
mov
cmp
mov
xor
mov
push
incl
addr16
cld
das
insl
lcall
mov
mov
cmp
lock
addr16
pop
enter
mov
sbb
pop
pop
mov
adc
sub
dec
mov
in
nop
xor
dec
loop
mov
mov
cli
mov
movsb
or
fisubs
xor
pop
mov
out
cmp
cmp
outsl
frstor
and
xchg
fsubrs
xor
sub
push
add
in
adc
push
sbb
ljmp
frstor
sub
mov
cmpsl
fwait
addb
mov
sub
or
aad
push
pop
adc
and
in
clc
loop
orl
dec
xchg
sub
dec
dec
adc
nop
mov
dec
out
fsubs
mov
push
fmul
jne
icebp
in
test
adc
cmc
jle
cld
xchg
sbb
jl
les
outsb
out
cmp
fnstsw
fisttpll
fnclex
mov
fidivrl
sub
mov
cmp
mov
cld
decb
call
jp
xor
and
push
dec
jmp
pop
scas
pop
xor
daa
movb
xor
xlat
popf
or
add
mov
mov
scas
cwtl
cld
xor
push
xchg
push
das
in
mov
adc
inc
shlb
mov
testl
mov
jecxz
insl
mov
imul
inc
cmp
adc
fists
sbb
cvtdq2ps
fisubrl
mov
sbb
push
scas
adc
pop
ret
jge
mov
push
pop
push
mov
mov
sbb
stos
mov
adc
pop
arpl
push
outsl
xlat
sub
mov
psubsb
in
mov
push
adcl
adc
sub
lods
test
mov
fisubrs
xchg
jge
popa
push
inc
popf
jnp
pop
hlt
jmp
mov
pushf
mov
mov
insl
repz
test
sbbb
inc
mov
add
push
and
insl
add
in
mov
jg
mov
aaa
daa
xor
dec
xor
dec
das
insb
lret
call
mov
cmpsl
cmpsl
clc
clc
sahf
shlb
pop
pushf
test
push
daa
dec
lret
push
jle
cmpb
mov
sub
push
fdivrp
xor
jae
arpl
insl
push
cmp
xchg
jg
and
cmp
imul
xlat
lcall
popa
dec
mov
ja
movsb
push
out
inc
addr16
in
jp
lods
shll
jle
add
std
stos
inc
cmp
cli
push
mov
insl
push
dec
or
fsubrs
xor
pusha
in
cli
xor
pop
hlt
push
lods
cwtl
add
das
lods
aaa
and
ds
ja
in
dec
push
xchg
inc
js
arpl
ss
ret
pop
fmull
pop
mov
mov
hlt
fs
mov
and
pop
leave
pop
inc
xlat
sub
push
jl
mov
jo
roll
mov
into
fisttpll
cmpsl
mov
jle
cmpsl
mov
insb
shrd
and
aaa
cmpb
mov
jecxz
or
inc
fs
push
aaa
xor
push
mov
es
pop
pushf
sub
sub
inc
ds
sbb
popf
jnp
addl
in
cli
stc
out
mov
xchg
push
movsb
push
pop
sti
jns
idivb
push
mov
push
rcl
mov
stos
addr16
dec
into
test
loope
mov
lea
insl
and
aam
mov
repnz
mov
popa
adc
fs
popa
jnp
push
sti
xchg
int
test
popa
and
aam
test
shll
addr16
dec
adc
std
jnp
cmp
rclb
mov
outsl
mov
sarl
sbb
inc
inc
add
cmp
lret
fwait
pop
or
cmpb
pop
test
xchg
mov
pop
fisubl
stos
mov
mov
out
sbb
sbb
pop
mov
lds
and
fidivrs
lret
aas
jno
in
clc
jp
and
and
add
fisttpl
fdivrl
fldt
loope
xchg
je
fistpll
pop
jl
mov
and
and
and
sub
out
inc
scas
pop
dec
xchg
repz
push
in
out
sub
adc
shlb
fistpl
testl
pusha
pushf
dec
xchg
mov
stc
clc
jecxz
testl
or
or
fisttps
lret
icebp
fwait
add
sub
lock
nop
movsb
dec
dec
stos
call
lret
inc
add
xchg
jb
and
incb
lret
les
hlt
adc
push
pop
xchg
xchg
jg
test
mov
out
xchg
shl
enter
push
icebp
push
cmp
adc
cmp
cwtl
fistl
rorl
xor
repz
dec
push
jnp
ret
jae
leave
inc
call
lcall
and
repnz
or
out
std
arpl
scas
fwait
and
cmp
loopne
lcall
cmp
in
ja
add
popa
mov
xchg
int3
mov
int3
push
or
insl
in
fs
or
push
in
inc
adc
pushf
aam
aad
test
adc
xor
and
les
dec
enter
inc
push
jmp
dec
jae
imul
rdmsr
push
xorb
mov
insl
push
cmp
rorb
arpl
xchg
adc
push
fisttpl
daa
negb
xor
bound
pop
jb
sub
cmp
movsb
ja
add
pop
and
cmpsb
mulb
xchg
push
pop
jecxz
pop
xlat
test
out
dec
mov
push
fs
push
repz
add
out
push
pop
cmp
sbb
push
imul
dec
lret
xor
cwtl
pop
pop
or
push
cs
pop
sbb
mov
subl
xor
imul
daa
into
addr16
subl
jnp
sbb
fisubrl
ss
fmuls
dec
xor
popf
jo
push
mov
mov
xchg
enter
jg
in
xor
repnz
loope
loopne
imul
fmull
enter
movb
into
in
inc
lods
mov
mov
xchg
sub
enter
adc
lods
roll
ret
cmp
js
mov
pop
jmp
pop
xlat
fldpi
push
xchg
add
icebp
sbb
popf
mov
lods
mov
lock
out
in
fisubs
call
loopne
dec
addps
out
shlb
and
addr16
sbbb
sbbl
lea
leave
or
faddp
mov
popa
xchg
and
imul
inc
inc
mov
and
leave
aas
stos
jo
movb
xlat
pop
mov
shr
stos
inc
add
cli
mov
or
dec
sbb
lock
jae
add
jge
sbb
cmpsb
les
lds
fisttps
sbb
cmp
push
int3
jg
fdivrp
pop
jl
leave
loop
test
cmpsb
jmp
inc
pop
sub
jecxz
push
jbe
xchg
ret
adc
sub
in
icebp
xor
in
cmp
push
addr16
dec
inc
jle
mov
icebp
jl
push
xlat
jge
sub
das
mov
jbe
sbb
inc
or
sbb
and
and
rcr
mov
ret
sub
test
iret
imul
sbb
lcall
xchg
lods
scas
cltd
pop
fcomps
stc
push
mov
nop
imul
dec
fs
dec
mov
pusha
faddl
or
dec
cmpsb
out
adc
jle
mov
sbb
bound
add
sub
shlb
mov
addr16
aaa
hlt
ficomps
int
jecxz
cmp
das
inc
outsl
mov
add
hlt
mov
imul
out
sti
add
std
shll
and
jl
aad
push
mov
fstp
mov
test
jo
in
popa
push
or
fwait
stos
fidivl
cs
das
aaa
xchg
test
faddl
lds
pop
dec
inc
aaa
lds
inc
test
push
in
mov
scas
mov
stos
fucomp
jge
cmp
dec
sbb
sbb
outsl
dec
outsl
rorl
popf
and
dec
sub
shlb
push
and
test
mov
pusha
mov
push
int
xchg
jns
fcomi
adc
push
das
lock
int3
push
jns
mov
mov
fcmovbe
dec
pop
popf
xor
shrb
repnz
das
add
cmp
popa
add
hlt
stos
xor
jg
je
push
into
sarb
dec
loope
test
or
stos
mov
lds
sub
adc
cltd
mov
out
pop
lahf
pop
repnz
and
sbb
stos
or
data16
and
xchg
repz
ja
xchg
sahf
and
stc
cmp
loope
xchg
push
inc
mov
testb
cmp
arpl
push
test
mov
int3
push
dec
xchg
add
mov
or
enter
push
or
dec
lds
xchg
pop
pop
mov
notl
xchg
xor
xor
shr
into
popa
lods
sbb
aad
mov
push
pop
dec
xchg
aaa
mov
rcll
mov
data16
sbb
nop
adc
or
xchg
rcrl
addr16
push
push
int
das
cmp
setns
insl
mov
test
mov
das
dec
push
sar
fcompl
mov
sbb
pop
jo
out
push
jmp
nop
hlt
pop
mov
hlt
int
lret
faddl
mov
mov
jbe
sub
fs
insb
inc
mov
push
sub
mov
inc
int3
adc
imul
add
xor
into
jmp
lret
inc
and
add
add
dec
mov
fcoms
xchg
mov
jge
js
pop
aas
repz
je
jne
jno
inc
adc
fstpt
pop
rolb
jecxz
mov
mov
or
mov
mov
push
or
test
jp
jp
icebp
add
ds
push
xor
std
dec
aam
mov
push
mov
test
adc
pop
push
mov
testl
adc
xchg
je
adc
pop
mov
cmp
mov
jb
lahf
inc
rol
jnp
cmp
dec
xchg
out
mov
mov
push
dec
or
test
mov
mov
outsb
aas
ljmp
xchg
dec
call
mov
rcrb
ss
mov
stc
sub
mov
nop
stos
loope
mov
or
cmp
jnp
xor
xor
in
and
jmp
pop
clc
or
daa
cpuid
leave
mov
inc
pusha
adc
insl
jp
sahf
mov
push
ret
cmp
push
sub
ds
testl
ret
mov
xchg
mov
fucomi
add
push
adc
leave
add
jnp
xchg
movsb
in
mov
push
pop
pop
lods
or
cmp
stos
mov
lock
mov
lret
pusha
jg
cmp
neg
gs
into
sbb
jb
or
dec
sub
sbb
flds
out
pop
and
mov
cmp
popa
mov
xor
cmp
loop
jle
fdivrl
add
xorl
js
cmp
xchg
in
push
push
test
mov
test
aad
xchg
sbb
add
lret
fimuls
and
insb
pop
ficoms
in
fsubrs
ds
xlat
dec
add
push
xor
scas
add
bound
sbb
cli
rorb
stc
push
jl
lret
mov
aaa
push
pushf
leave
jae
ret
loope
or
pop
and
mov
std
add
mov
fwait
das
mov
flds
jmp
push
dec
jg
push
test
add
insl
mov
lods
mov
push
mov
cmp
sub
imul
sbb
and
mov
push
xchg
int3
pushf
jb
mov
scas
loopne
and
inc
in
lret
jecxz
jae
mov
cmc
inc
dec
andb
orl
xor
sahf
movsl
aas
push
cmp
subb
dec
adc
xchg
inc
loope
add
aam
sbb
xor
outsl
cwtl
incb
outsl
xchg
rep
ds
jne
jbe
push
add
test
pop
icebp
es
pop
loop
jp
repnz
xor
loopne
jne
fwait
cltd
lock
xchg
ret
iret
mov
js
jmp
xchg
cmc
outsl
inc
pop
nop
int3
sbb
mov
mov
push
clc
jae
lock
shr
push
in
inc
je
cmp
cmpsb
sbb
enter
ret
lock
leave
sti
test
mov
pusha
cmc
add
cld
sub
mov
out
sub
iret
ret
mov
pop
imul
in
div
push
or
xchg
sahf
cmp
movsb
in
sbb
fldl
mov
mov
push
cltd
insb
stc
xor
xlat
xchg
sub
jl
in
test
pushf
scas
push
lret
insl
xchg
push
ret
jno
lds
insl
add
outsl
xrelease
shlb
imul
cmp
fiaddl
in
rorb
fisubrs
cmp
popf
jecxz
sub
xchg
jecxz
or
jno
aaa
out
lret
and
icebp
movsl
aaa
aam
shrb
dec
push
adc
out
push
es
shrl
xchg
stos
movsb
add
mov
fists
scas
ljmp
xor
push
imul
sbb
add
aaa
pop
rcrl
aam
dec
cmpsl
cmc
mov
push
xor
fucomi
cld
sub
mov
push
pop
inc
fbstp
adc
and
ret
das
push
dec
sub
xor
pop
clc
mov
pop
or
sbb
xor
dec
ds
cmpsb
mov
fdivrl
leave
cmpl
mov
repz
mov
outsl
jecxz
sbb
jp
xor
call
xor
and
pop
xchg
scas
xor
nop
pusha
aad
mov
mov
sub
repz
xchg
les
repz
or
fdivrl
adc
pop
mov
and
insl
pop
dec
or
or
mov
add
push
push
and
push
inc
sub
xchg
lcall
or
loop
jo
cli
push
mov
cmpsb
or
pop
mov
cltd
jo
pop
das
in
sub
cltd
add
cs
das
mov
mov
fcomps
pop
xlat
aaa
rorl
lea
jg
add
and
pusha
fs
mov
mov
push
shrb
insb
idivb
lds
pop
cmp
popaw
nop
sbb
jbe
adc
adc
pop
rcrb
mov
xchg
push
dec
loope
out
cmp
insl
and
out
inc
rorl
pop
dec
int
fs
push
std
in
dec
jbe
movsl
push
jno
sub
pop
push
les
sbb
out
ret
cmc
dec
bound
xchg
cli
out
pop
mulb
mov
std
hlt
dec
ja
mov
repnz
imul
mov
mov
lcall
mov
insb
subl
pop
pop
mov
xor
xchg
daa
adc
popa
inc
fnsave
adc
std
pop
cwtl
in
pop
mulb
mov
leave
and
lods
sbb
push
ss
jne
pop
pop
clc
stc
mov
das
or
cmp
cmp
rep
sbb
jmp
ret
xchg
cld
ficoms
xor
jb
inc
fcmove
lods
shlb
mov
int3
push
jb
fadd
dec
pop
pop
xor
aam
pop
nop
movsb
mov
lea
jg
je
pop
insl
aas
sbb
mov
inc
jbe
adc
repnz
sbb
div
shl
mov
mov
sbb
jne
or
loop
mov
pop
scas
push
inc
cwtl
lods
add
dec
mov
jg
sbb
js
jle
mov
icebp
fdivr
xchg
dec
and
idivb
inc
or
jno
adc
or
bound
aaa
icebp
repz
dec
and
add
mov
stos
push
cmpsb
in
pop
cltd
iret
mov
push
rcl
push
push
jg
repz
add
mov
loope
mov
das
inc
movsb
or
ret
lock
ja
xchg
inc
pop
or
cmp
test
insl
mov
or
jae
xlat
push
test
jb
inc
or
in
fsubs
aad
xchg
mov
loop
jecxz
or
out
sbb
jns
xlat
popa
or
add
cmpsl
xchg
rclb
je
stos
ljmp
jecxz
data16
cwtl
mov
rcrb
test
clc
inc
push
leave
push
enter
mov
stos
adc
xlat
aaa
mov
push
mov
jg
test
daa
iret
popa
movsb
add
pop
sub
aaa
lea
xchg
mov
and
fldt
and
cld
or
push
out
bound
rcr
push
xor
jmp
mov
xchg
stos
sahf
enter
add
loop
leave
and
test
pushf
lret
mov
pushw
imull
adc
pop
sub
ds
scas
daa
dec
daa
push
stos
rorl
cs
inc
add
jl
in
lret
xchg
sbb
or
push
sub
add
aad
cmpsb
cmp
loope
out
data16
and
dec
test
adc
fsubr
out
mov
call
mov
push
add
in
sahf
lahf
lcall
dec
clc
inc
push
jl
mov
mov
popa
cmpsb
in
and
in
std
jo
jmp
jle
call
cli
out
pop
jmp
outsl
pop
cld
mov
pcmpeqw
or
shrl
bound
int
jns
sbb
cmc
jno
push
push
mov
adc
int3
jae
gs
push
stos
jmp
add
rcl
inc
stos
icebp
insb
sub
cld
and
repnz
lods
cmp
xor
icebp
test
leave
inc
pushf
sbb
hlt
mov
mov
cmp
or
adc
call
mov
push
pop
xor
test
movsb
imul
int
lods
jno
inc
sbb
and
adc
cld
in
das
sbb
add
mov
cmp
sahf
insl
imulb
push
sub
je
test
inc
xor
sahf
pushf
enter
loop
mov
aas
push
movsw
mov
push
in
cmp
mov
mov
mov
andl
adc
popa
gs
lret
movsb
popa
aas
cwtl
fcoms
mov
jp
sub
cmpsb
scas
xchg
inc
jbe
hlt
mov
stos
dec
adc
sub
stos
test
aad
or
scas
cmc
push
pop
push
mov
sbb
bound
mov
dec
sub
lds
adc
pop
cmp
fyl2x
xchg
and
sarl
mov
adc
push
roll
sahf
and
stos
push
outsl
cmp
dec
fldenv
dec
sbb
fcmove
jl
int
cmp
lcall
addr16
or
rcrl
jmp
inc
inc
push
adc
lcall
lahf
pop
or
cmpsl
pop
es
ret
fcoml
inc
imul
xlat
call
cmp
mov
hlt
mov
or
int3
add
adcb
lret
mov
fisubs
movsb
test
sub
xor
cli
cwtl
les
mov
mov
lods
push
xchg
cld
add
cmp
adc
push
cld
inc
cmp
test
outsl
mov
push
add
mov
test
les
imul
pop
cs
fists
mov
nop
int
orb
or
pop
sbb
mov
cltd
xchg
or
mov
orb
movsl
js
mov
pop
push
push
je
sbb
stos
and
mov
cmp
dec
pop
xor
and
xor
lcall
in
xor
jae,pn
aad
mov
mov
mov
stos
push
lret
xchg
mov
xor
jl
flds
pop
mov
cmp
xlat
lret
movsb
jnp
cmp
les
ds
push
mov
dec
jmp
mov
add
jg
ss
mov
ret
xor
dec
add
mov
adc
test
or
popa
cmp
mov
inc
aas
xchg
dec
cmp
adc
mov
jbe
mov
pop
dec
sbb
adc
cmp
sbb
stc
aaa
sbb
das
adc
inc
movl
scas
xor
cmp
ret
mov
jo
push
and
popf
lret
fdivl
in
andl
inc
loope
or
sbb
sahf
push
adc
sub
jmp
into
inc
xor
pop
rol
nop
pop
push
mov
cmp
pop
sbb
inc
lock
dec
sbb
jo
addr16
dec
cmpsb
add
dec
leave
cmpsb
stos
fdivrs
fldlg2
xchg
xchg
lcall
xchg
and
out
push
mov
cmpsl
daa
mov
repz
sub
jb
imul
hlt
daa
shrl
testl
ds
sbb
fs
push
dec
add
clc
add
mov
popf
sub
cld
xor
mov
fisubl
ss
jecxz
fisttps
and
out
fsubrs
mov
jl
mov
inc
or
mov
adc
imul
frstor
fists
es
sbb
mov
pop
sub
sub
xor
jmp
outsb
mov
mov
int
sahf
cmp
jbe
add
dec
ja
aas
push
aas
rcll
xchg
fistpll
push
adc
push
xor
mov
mov
test
scas
mull
in
xchg
xor
addr16
popf
cmp
lods
and
push
mov
mov
das
mov
xchg
in
cmp
hlt
sub
rol
ljmp
mov
out
push
js
movsb
fbstp
or
mov
mov
shrb
cmp
xchg
cmpsl
insl
push
cmp
rcll
cmp
push
pop
cmp
cs
ficompl
push
lea
das
mov
adc
and
xor
in
sbb
in
xchg
and
stos
in
mov
ja
sbb
out
iret
stos
es
imul
push
mov
sbb
inc
push
lret
stos
mov
adc
mov
enter
movsl
adc
in
loope
pop
push
xor
sbb
xor
sub
add
adc
js
jo
sti
xor
das
xor
cmp
dec
add
cmpb
pop
insb
jecxz
inc
mov
mov
out
fdivrs
icebp
mov
mov
scas
xchg
push
dec
sbb
dec
sbb
xchg
mov
addr16
pop
and
je
dec
cmpl
mov
jge
mov
std
xchg
cli
mov
inc
push
and
outsl
into
jle
movsl
xchg
arpl
push
lahf
ljmp
not
outsl
lahf
dec
addr16
das
sbb
xchg
mov
cmp
ret
outsb
push
push
aam
rclb
cmc
stos
and
push
xlat
shr
wbinvd
mov
push
xchg
das
stos
sbb
aad
pop
int3
cmpsl
add
in
jne
xchg
lcall
pop
push
jbe
jns
out
es
xchg
push
mov
mov
sti
vmwrite
cmp
jae
xlat
repnz
inc
mov
xor
fstpt
dec
cld
push
popa
dec
xchg
add
pop
jae
mov
push
js
pop
incl
pop
fnsave
pop
add
push
ss
cs
enter
iret
not
mov
push
adc
adc
sub
sub
cmc
fs
insl
push
lds
pop
xchg
jp
dec
cmpl
inc
push
js
add
adc
ret
cld
push
adc
out
cmp
push
adc
out
rorl
push
idivb
insb
push
dec
mov
rcr
cmp
cmp
push
bound
das
jl
fmulp
mov
add
push
popf
imul
push
outsb
jne
xor
xor
pushf
jno
adc
je
mov
repz
in
loop
lret
adc
and
sbb
cltd
and
push
push
xchg
jle
add
daa
xor
pushf
dec
push
int3
gs
ret
jp
xor
cmp
xor
sbb
push
cmpsl
ds
add
pop
sbb
test
jno
loope
pop
gs
test
push
sub
inc
int3
std
cmp
lahf
mov
inc
sbb
stos
insb
dec
dec
cmc
loopne
cmpsb
int3
fwait
push
pop
lret
sub
inc
jnp
cmp
jne
inc
aam
js
cmp
mov
jle
scas
pop
outsl
xor
lret
aam
xchg
pop
movsb
xor
pop
out
jecxz
fdivl
ds
cmp
outsb
jl
leave
mov
add
imul
inc
fsubl
cli
jle
lahf
test
pushf
mov
xchg
xchg
push
pop
push
fdivs
hlt
js
push
xchg
mov
sti
cmpsb
mov
push
stc
hlt
add
test
mov
xchg
push
dec
cmp
inc
das
ret
lret
movq
jg
notb
push
jmp
scas
push
cmpsl
sub
imul
popa
pop
jae
mov
out
mov
dec
sahf
jmp
inc
es
xlat
pusha
mov
push
iret
mov
dec
negb
push
xor
in
imul
pop
xchg
push
jae
cmp
pusha
xor
aas
xchg
fisttpll
fdivl
sbb
adc
cltd
or
sbb
jp
mov
in
dec
hlt
push
loope
and
push
jecxz
scas
bswap
adc
adc
sub
or
sti
sub
adc
add
dec
dec
adc
stos
mov
or
popa
jle
mov
ret
inc
pop
push
sbb
je
mov
les
int3
mov
bound
in
pop
sbb
inc
stos
repz
into
rclb
inc
mov
andb
pop
mov
fcmovnb
in
sbb
addr16
adcl
mov
and
divl
scas
cmp
dec
cmc
push
test
shl
xchg
pop
jmp
pop
ret
mov
pop
cltd
push
cltd
xchg
in
and
mov
sti
inc
jb
sub
push
bound
sub
xor
out
inc
mov
fcmovnu
ret
movsb
rcr
iret
loop
icebp
lock
add
fsubrp
pop
push
arpl
dec
imul
xchg
loop
outsb
ret
std
push
mov
xchg
inc
pop
dec
add
adc
addr16
mov
divb
fdivrl
in
popf
test
mov
nop
fcomps
adc
cmp
sbb
fwait
xchg
xchg
xchg
cmovns
xor
pop
sub
insl
les
jns
pop
rolb
fs
mov
mov
rclb
test
pop
inc
int3
stc
or
call
cwtl
mov
adc
int
call
daa
rorb
lock
xchg
jo
sti
clc
jmp
add
leave
sub
fimuls
sar
dec
cli
out
insb
push
mov
add
xor
xor
in
xchg
out
mov
out
incl
ror
sbb
cld
mov
sub
ljmp
xchg
leave
lret
xor
cmpsb
jmp
pop
mov
dec
or
sub
movsl
mov
push
xchg
jbe
call
cld
push
adc
mov
add
sub
sbb
jne
out
jne
jne
cmpsb
mov
or
sahf
cmp
and
sub
pop
jmp
mov
mov
mov
daa
pop
mov
mov
jo
lock
inc
push
pushf
popf
sbb
mov
and
jno
mov
mov
jnp
pop
in
dec
push
mov
lret
mov
xchg
pop
out
pushw
and
jns
gs
mov
xchg
dec
in
addr16
cmp
jmp
out
jge
xor
pop
arpl
testb
mov
in
xchg
cmp
test
mov
stos
call
in
mov
in
cltd
inc
mull
gs
daa
aam
sub
cmpsl
inc
mov
jns
fiadds
push
jae
mov
pop
aaa
xchg
mulb
cmp
jl
dec
sbb
mov
inc
inc
hlt
cmp
lds
inc
xchg
cld
fwait
js
add
bound
test
ret
test
add
inc
push
and
test
push
jno
rorb
mov
data16
or
ficomps
jle
clc
inc
fs
and
inc
shll
mov
adc
mov
psubusw
mov
dec
movsl
in
lea
pushf
popa
ret
ja
sub
cmp
jae
fldl
pop
scas
and
lahf
pusha
and
mov
mov
mov
mov
in
push
movsb
push
pop
adc
sub
fadd
nop
jbe
mov
add
imul
adc
dec
lock
xchg
insl
dec
pop
ret
sub
lret
push
jl
push
cltd
mov
fisubs
mov
aas
lods
aas
jecxz
in
sbbl
mov
daa
dec
aas
fildll
addr16
cli
cli
fwait
imul
sahf
xchg
sub
xchg
pop
lret
sub
ret
test
ss
cmp
jbe
or
imul
mov
dec
stos
out
cmp
xchg
cmp
into
aaa
inc
xlat
mov
xor
cmp
xlat
jnp
inc
sbb
mov
jecxz
and
sub
mov
mov
xchg
imul
data16
push
and
mov
sub
shrb
cli
int3
xchg
xchg
outsl
mov
inc
cld
sbb
or
add
repnz
movb
and
insl
mov
sbb
pop
sub
test
test
xor
test
gs
aam
imul
push
push
xor
ret
xchg
xlat
scas
repz
stc
and
push
jmp
pop
xchg
or
ds
out
mov
fimuls
push
arpl
sbb
inc
pop
fisttps
pop
lea
jge
cmp
cmpsl
loopne
idivb
pop
orb
fucom
in
ljmp
addr16
push
xchg
cmc
or
inc
mov
mov
pop
das
and
rcr
inc
pop
in
xchg
cmpsb
or
push
xchg
mov
adc
mov
ret
dec
cmp
repnz
sti
pushf
shrb
sub
push
push
pop
incl
testb
cmp
xor
jne
cltd
out
iret
fucom
dec
js
xlat
imul
stos
push
add
sbb
mov
gs
lret
inc
mov
gs
xchg
fstpl
sbb
cmp
outsb
sbb
fadd
add
lods
pop
xor
inc
push
inc
push
fwait
mov
ljmp
incb
rclb
test
dec
mov
sub
cmp
mov
pop
lock
push
idiv
mov
rcll
aam
leave
or
in
xor
xor
jbe
dec
aad
in
in
mov
testl
fadd
fmul
decl
cmp
jl
pop
xchg
cwtl
loopne
mov
cltd
push
push
and
add
and
add
cmp
dec
push
mov
es
fwait
xchg
jne
nop
rcll
push
ret
je
push
jl
fldt
lea
mov
call
negl
pop
sub
mulb
jge
aad
addl
std
cs
push
cld
push
mov
test
jno
rorb
add
sub
in
and
rcrb
adc
sub
inc
xor
push
xchg
shll
and
lret
cmc
or
cmc
inc
cmp
mov
xbegin
or
lock
loop
je
aaa
test
add
xor
out
adc
dec
es
icebp
xor
add
arpl
rolb
or
push
push
out
mov
pop
je
lds
stos
je
sub
jl
push
lcall
xchg
imull
add
mov
iret
mov
leave
cwtl
jmp
test
ljmp
test
aad
mov
pop
out
jge
mov
jl,pn
aaa
and
loopne
pushf
repz
adc
sbb
int3
aam
mov
scas
ja
imul
call
xchg
test
jecxz
jno
xchg
mov
sub
push
jo
sti
fildl
inc
mov
icebp
inc
add
dec
lods
mov
aad
and
xchg
mov
dec
sub
sbb
hlt
clc
jns
inc
shrb
sub
sub
ret
incl
xchg
xchg
test
and
dec
push
jb
fistl
aam
mov
push
dec
jle
sub
xchg
cs
sar
cmc
push
jnp
imul
dec
cmp
pushf
adc
or
cmpsb
cmpsl
cmpb
dec
and
aaa
fdivs
mov
sbb
cmpb
push
fs
shl
aad
out
inc
fcmovnb
fldenv
addr16
push
lahf
clc
pop
inc
mov
jge
repnz
lds
rorl
push
dec
mov
je
imulb
xor
jle
adc
mov
popa
outsl
or
dec
inc
jne
cmc
rorl
in
vcvttss2si
push
dec
xchg
mov
add
push
pushf
add
aam
cld
sub
addr16
mov
iret
cmpsb
jmp
int
sub
icebp
sbb
mov
in
or
pop
dec
test
mov
dec
cmp
inc
push
fldl
xchg
in
mov
adc
dec
cld
sahf
jns
orl
repz
inc
or
notl
std
push
das
add
aas
xchg
repnz
jl
pusha
in
xor
pop
push
inc
lahf
pushf
stos
pop
lods
fisttps
notl
dec
call
scas
es
add
mov
mov
dec
xchg
and
fimull
pop
sub
addr16
jb
test
pop
pusha
iret
push
ljmp
int3
push
loope
mul
lods
or
repz
shrl
mov
in
jno
pop
scas
dec
dec
js
lahf
sub
pushf
xlat
mov
popa
mov
lret
jp
dec
push
xchg
in
mov
sbbb
lea
outsl
test
sub
outsb
xchg
jne
pop
and
cmpsl
mov
out
inc
arpl
cs
dec
pop
sbb
jle
jb
ljmp
mov
mov
enter
and
mov
das
out
and
and
jne
dec
xchg
dec
icebp
pushf
cmpsl
test
or
stos
pop
fcmovne
jmp
mov
hlt
add
fbstp
repz
xor
xchg
paddq
mov
mov
lcall
push
es
das
mov
sbbl
sti
jle
loope
outsb
sub
call
xchg
lret
loopne
sub
test
jmp
cs
lds
mov
shl
data16
adc
scas
addb
repnz
mov
ret
push
jae
or
add
iret
jmp
mov
rcrb
adc
push
and
imul
mov
pop
je
mov
jne
sbb
std
add
dec
push
ror
divb
ja
mov
rclb
dec
outsl
sbb
xchg
adc
pop
pop
scas
aad
mov
ja
xchg
fisttps
fimuls
push
xchg
push
add
jg
test
push
inc
hlt
movsl
adc
mov
sbb
mov
mov
lock
andl
jbe
repnz
sbb
lods
mov
in
jo
mov
pop
repnz
loopne
and
scas
fistps
pop
cmpb
mov
cmpsb
mov
mov
jo
fwait
jmp
sub
movsb
faddl
push
pop
push
mov
jge
xor
add
aam
mov
push
stos
xchg
jge
inc
inc
pop
xlat
jnp
push
inc
cmp
repnz
sub
mov
jns
lods
fwait
cmp
push
push
fcoml
pop
pop
mov
xor
inc
push
pop
ljmp
stos
outsb
jg
pushf
ret
dec
outsb
cmp
and
aad
mov
jl
cmc
into
cmp
dec
sti
add
or
call
imul
cld
sti
xor
int
mov
adc
sti
add
loop
inc
mov
xlat
cmc
in
in
jb
or
jmp
push
sbb
pushf
adc
das
pushf
add
aas
dec
loop
stos
mov
in
dec
jno
cltd
in
push
loope
mov
inc
stos
clc
inc
mov
fwait
jge
fstpt
ret
xchg
jb
inc
fldcw
loope
loopne
mov
lret
insb
das
mov
scas
push
out
add
lods
shl
push
adc
mov
fwait
lods
inc
mov
xlat
shl
jbe
sub
cmp
inc
out
dec
add
push
cwtl
push
iret
jb
and
into
push
xor
xchg
mov
aaa
lds
std
sbb
stc
lcall
sbb
ret
inc
xchg
dec
sti
pop
cmp
mov
or
stc
pop
add
shll
mov
incb
ffree
loopne
imul
in
dec
adcb
jno
or
or
repnz
pop
fsubs
inc
lahf
aas
xchg
pop
push
inc
push
push
imul
mov
outsl
sbb
jbe
add
jnp
into
outsl
cli
aas
lods
mov
mov
lret
loope
and
pusha
xchg
ds
pop
xchg
inc
test
mov
push
js
stos
and
sub
or
sarl
adc
test
dec
cltd
push
sbb
pop
int3
cmc
cwtl
adc
loopne
aam
dec
ja
xor
icebp
imul
sub
aaa
pushf
incb
jns
dec
imul
inc
sbb
cmp
pop
icebp
insl
mov
lds
clc
sbb
push
cmp
add
lret
pushf
sbb
mov
gs
pop
mov
mov
ss
xchg
xor
cltd
in
sub
and
cmp
push
or
pmullw
inc
stos
pop
and
mov
dec
out
adc
push
mov
sub
rclb
loope
adc
lret
cmp
cs
test
pop
aas
loopne
fbld
cs
dec
fnstsw
cmpsl
pop
mov
es
cmp
daa
test
jecxz
push
sub
in
rol
push
pop
xchg
cmpb
out
repz
cmp
mov
inc
outsb
and
or
scas
mov
ja
clc
mov
negl
cmpsl
or
ss
mov
cmpsb
dec
inc
xor
add
and
mull
mov
jmp
mov
dec
jp
mov
repz
ret
cmp
jae
push
or
mov
jne
shll
lret
cmp
mov
pop
movzbl
xchg
shrb
jge
sbb
mov
push
shrb
dec
or
fisttpll
popa
mov
sbb
sub
inc
in
push
sbb
xor
dec
dec
lods
pop
sbb
jp
sbb
jg
fnsetpm(287
idivb
ficoms
push
xor
movl
and
aam
mov
pusha
mov
out
dec
movsl
sbb
cmpsl
dec
xor
mov
in
or
adc
stos
sub
inc
mov
pop
int3
mov
inc
repnz
xchg
ss
insl
adc
cld
mov
fnstcw
fwait
in
cmpsl
int
loopne
cli
mov
lret
repz
adc
jg
pop
xchg
push
jbe
dec
iret
arpl
cmp
mov
mov
dec
stos
dec
push
xchg
nop
lods
push
pushf
rorb
cs
xor
pushf
cmp
sbb
jge
mov
shr
insb
les
clc
push
sarb
mov
sbb
pushf
push
adc
fs
loopne
add
add
leave
imull
pop
loop
adc
sub
shlb
rcrl
outsl
xchg
dec
or
push
dec
cwtl
lods
iret
mov
sbb
add
call
jge
xchg
pushf
pop
enter
pop
or
xor
pavgw
or
xor
iret
dec
mov
jns
ds
iret
jl
pusha
dec
out
loopne
pop
in
sbbb
out
repz
adc
lret
mov
adc
pop
push
loopne
or
jl
xor
pop
jo
xchg
mov
and
jne
mov
push
enter
pop
sub
cli
orb
sbb
in
inc
js
sbb
pop
sbb
xchg
sbb
pop
xlat
dec
popf
add
jmp
jmp
mov
test
inc
lcall
mov
fisttps
imul
adc
loope
ljmp
mov
aad
fptan
lds
push
push
inc
mov
test
mov
xchg
es
inc
push
mov
out
jbe
xchg
mov
shll
or
xor
push
xchg
xchg
lahf
push
jle
out
shl
daa
adcl
in
ljmp
mov
pop
xchg
mov
je
in
enter
push
mov
iret
push
mov
filds
cmp
mov
jge
cld
aas
or
insl
fisttpll
mov
into
jno
sub
daa
repnz
mov
dec
popf
sub
bound
insl
xor
mov
lock
adc
xchg
adc
popa
sub
mov
cmp
cmp
or
je
jl
sub
aam
mov
sub
test
or
inc
lods
or
jmp
or
in
mov
shlb
dec
mov
mov
cli
enter
push
pushf
jle
pop
jns
fxch
mov
xchg
adc
pop
cmc
cmp
ss
icebp
in
call
inc
loope
pop
or
aam
add
sbb
cmp
jg
add
pop
xor
add
fs
jne
cmp
repnz
or
add
dec
sbb
outsb
fwait
scas
loop
push
xorl
pop
sbb
push
mov
dec
insl
xor
cmp
lahf
sbb
cs
aas
pop
cmpb
stos
mov
jb
ljmp
faddp
sub
aad
push
push
out
adc
fidivrs
xchg
cld
xchg
push
fnstcw
mov
fidivrs
jne
scas
in
js
jg
fiadds
addr16
fstps
ficoml
dec
stc
fdivs
xchg
daa
dec
arpl
clc
pop
pop
inc
push
test
cmpb
pop
sub
loope
test
adc
mov
jnp
xor
test
adcb
mov
push
mov
adc
mov
push
dec
mulb
mov
jbe
in
mov
bound
jo
or
loop
popf
repz
cld
mov
mov
add
and
ret
jge
ret
je
imul
mov
adc
in
or
mov
mov
ljmp
cmpsl
js
lock
jp
movsb
sbb
fsubrp
push
and
jle
scas
stos
inc
mov
je
ds
jnp
xor
es
repnz
incl
test
adc
xor
int
fiadds
jg
or
mov
movsb
test
lret
mov
cli
aad
loope
mov
js
sahf
into
adc
inc
ds
popa
jne
push
movsl
loopne
push
push
fcmovnb
fiadds
and
and
int
scas
call
inc
sbb
ret
mov
mov
sub
in
jmp
insb
aam
xor
adc
mov
mov
ficomps
daa
dec
sub
mov
sbb
pushf
call
roll
ret
jbe
lret
cmpsl
sub
push
lock
popf
xor
mov
sbb
int3
sbb
int3
pop
iret
jnp
jle
shr
add
iret
fcom
mov
adc
adc
cmp
js
and
adc
iret
push
push
cmp
sub
fstpt
sbb
daa
inc
pop
xchg
movsl
movsl
inc
xchg
arpl
or
adc
mov
or
sbb
cmpsl
dec
ret
push
out
mov
gs
imul
mov
nop
xor
repnz
out
push
cmp
cli
dec
shll
pop
hlt
aam
pop
das
inc
rcr
sbb
mov
dec
sub
cmovae
cld
cmp
in
aas
xor
rolb
pushl
sarl
pop
jmp
or
dec
sub
ljmp
dec
and
testl
adc
adc
call
aas
or
adc
cltd
test
in
mov
jge
add
mov
push
sarb
lods
push
cmp
jns
or
mov
or
pushf
push
xor
xchg
and
int
ljmp
sbb
mov
inc
popl
push
lret
cmpsl
ficomps
mov
pop
cmp
clc
mov
mov
aam
xchg
xchg
lret
pop
push
dec
inc
push
push
sarl
mov
sbb
out
cmp
cmp
xlat
jmp
push
lods
shlb
mov
test
cmp
push
popa
pop
fnsave
aas
test
insb
stos
mov
lea
jno
lahf
push
mov
cmovne
sbb
out
pop
aas
into
mov
dec
aad
jg
xor
in
adc
imul
xchg
cmp
sub
add
or
shl
mov
arpl
dec
sbb
mov
cli
inc
dec
fcompl
cmpsb
mov
aaa
push
incl
dec
inc
test
jl
jns
adc
rclb
fdivrs
inc
xchg
imul
adcl
fisubl
xor
movsl
xchg
call
xchg
push
test
mov
imul
xchg
les
insb
sub
sahf
cltd
jle
cltd
push
mov
scas
test
rcrl
sahf
or
cmpb
lret
fiadds
out
cs
hlt
iret
pop
inc
fcmovnb
mov
jb
mov
sbb
call
mov
cltd
call
mov
cmp
dec
fucomip
shl
movsl
or
call
cli
leave
sbb
lahf
repnz
xor
pushf
xor
scas
clc
test
add
jge
fdiv
repnz
dec
sub
cmp
inc
shlb
cmpl
ret
fisubs
ficoms
leave
fs
mov
or
test
test
rcr
add
sub
mov
mov
mov
movhps
mov
divb
stc
pop
in
or
add
dec
lods
cmpsl
jne
repnz
das
stos
sbb
jg
cltd
scas
in
out
push
add
icebp
popf
or
jb
data16
das
stos
push
jb
mov
jg
movsb
sbb
nop
pshufw
push
fsts
dec
sbb
adc
jle
mov
into
and
pop
xor
mov
lods
xchg
fisttps
or
enter
scas
adc
mov
sbb
mov
call
paddb
cmp
das
pop
pop
mov
push
lds
cld
mov
or
js
call
fdivl
or
lret
and
arpl
inc
mov
mul
xor
mov
xchg
fsubr
jmp
sbb
mov
rcll
popa
dec
jl,pt
and
insb
jge
xor
xor
cmp
cld
mov
push
in
xchg
fcomps
xchg
xor
add
lret
sub
or
scas
xchg
sbb
insl
cld
or
pushf
andb
mov
pop
add
decb
push
fsubrl
mov
push
adc
xchg
xchg
dec
sbb
xchg
jne
iret
fisubl
xchg
mov
pop
bound
pop
adc
sbb
dec
fidivrl
inc
mov
ret
pop
pop
sbb
jae
fistpl
lea
xor
add
sbb
aas
cmp
fsts
add
cmpsb
imul
and
jmp
jp
xor
mov
es
push
call
repnz
pop
iret
jbe
fs
adc
add
dec
mov
dec
sub
enter
add
inc
int
fisubl
lods
mov
add
xchg
push
inc
or
scas
inc
xor
fs
addr16
loopne
mov
pop
adc
push
pop
int
xor
in
or
inc
sub
inc
sti
push
into
jp
mov
push
xor
xor
mov
inc
push
jno
jmp
push
inc
mov
ficoms
icebp
hlt
aam
int3
jmp
subb
pop
xchg
ss
cmp
bound
and
shl
sbb
dec
lahf
aad
dec
sahf
mov
or
and
and
stc
popa
lods
or
and
movsb
cwtl
mov
sub
sbb
enter
insl
incb
test
test
cmp
sub
sbb
inc
dec
xchg
jge
and
cmc
mov
mov
pop
dec
hlt
mov
lret
add
push
xchg
sbb
jge
scas
les
imul
xor
inc
in
push
mov
dec
push
shll
cmp
insl
sub
imul
loop
aad
movsl
pusha
mov
dec
test
sahf
and
dec
shl
sarl
in
inc
mov
stc
pop
mov
popl
mov
mov
enter
mov
inc
roll
push
jl
fidivl
push
push
or
popa
jmp
cmp
hlt
mulb
ljmp
pushf
xor
out
popa
sbb
dec
out
ss
dec
lret
arpl
aad
mov
les
jg
xor
or
int
add
xorb
jmp
bound
push
add
pop
lock
mov
pop
sbb
stos
or
xlat
or
in
movsl
es
push
into
xchg
call
jecxz
sbb
out
mov
jo
out
popa
idiv
bnd
out
out
adc
nop
stos
push
fwait
cltd
mov
inc
jl
ss
add
ret
sub
push
xchg
push
xchg
ja
stos
pop
imul
cmp
shl
pop
data16
mov
std
push
jne
int
xchg
sbb
jnp
leave
in
cmp
push
mov
lcall
push
sub
pushf
xchg
imul
inc
mov
add
push
rcll
cmp
push
scas
cmc
lret
cld
lock
push
inc
mov
sar
jg
xchg
sti
cmp
dec
mov
bound
pop
lds
sub
stos
aam
aas
add
js
mov
neg
adc
or
ret
and
xchg
xchg
add
shll
pop
pop
or
jmp
mov
aad
xor
std
or
adcb
sbb
loope
cmp
stos
mov
cmp
cvtpi2ps
push
imul
inc
dec
int
pop
jnp
leave
fimull
mov
xchg
mov
xlat
inc
add
fs
rsqrtps
fisubrs
inc
mov
xchg
cwtl
repz
xchg
out
shr
rcll
mov
data16
pop
ja
inc
add
test
add
push
cmc
lods
in
mov
jno
les
push
xchg
xchg
push
mov
jmp
outsb
loopne
nop
imul
fisubrl
jl
pop
xor
adc
iret
lock
xor
cmp
pop
ja
sub
enter
sbb
jmp
jmp
sbb
xadd
icebp
xchg
out
cmp
lret
dec
dec
ljmp
enter
jb
jecxz
cmp
lods
lock
mov
test
sub
loope
jae
sub
xchg
aaa
jbe
mov
jl
pop
xchg
sahf
pop
mov
pop
pop
or
xlat
ret
sarb
rcll
mov
push
jae
ja
dec
outsl
ljmp
stos
mov
js
repz
psubq
xchg
lds
sbb
hlt
es
aas
xlat
mov
or
fimull
dec
mov
addr16
add
imul
lret
xchg
sbb
add
notl
lret
scas
ds
or
inc
mov
and
sbb
rclb
xchg
xchg
add
movsl
rorb
bound
cwtl
xchg
popf
fisubrl
inc
cmpsl
inc
dec
xor
inc
cmp
pushf
push
push
stos
mov
insl
mov
mov
lods
scas
out
sub
int
fnsave
mov
dec
push
repz
or
daa
pushf
or
mov
mov
aas
and
or
cs
dec
fnstcw
dec
cmc
ss
xor
pop
test
mov
dec
mov
dec
sbb
stos
test
xchg
cs
es
sbb
lock
sbb
cli
or
mov
fmul
mov
jnp
mov
fisubrl
mov
lock
xchg
push
cmp
ja
ljmp
or
mov
ljmp
fdivr
sahf
out
sub
shrl
gs
stos
adcb
rcrb
in
lcall
divb
pop
jecxz
mov
jnp
xor
in
or
insb
add
cmpsb
jnp
negb
and
js
and
daa
aas
mov
imul
scas
pop
mov
jecxz
shl
mov
and
or
adcl
jo
jne
add
cmp
movsl
pop
pop
push
enter
sub
dec
loope
adc
cwtl
pusha
jno
mov
cmp
mov
aad
dec
or
or
push
mov
xchg
jmp
cmp
add
popa
mov
jl
std
test
cmc
jecxz
mov
js
fsts
es
add
mov
jl
enter
decl
mov
jmp
mov
js
sub
inc
stos
push
cltd
mov
insl
inc
test
xchg
icebp
ds
push
jbe
and
xor
int
dec
mov
stos
sbb
sub
iret
mov
shlb
sbb
xor
movb
inc
dec
mov
adc
dec
outsl
add
insb
inc
out
popf
or
out
or
sub
out
adc
cmp
xor
pop
adc
push
sbb
xchg
insl
insl
jae
jecxz
jecxz
loop
mov
ljmp
mov
mov
hlt
cmpsb
mov
ret
or
pop
sub
pop
rcl
push
lret
das
push
jmp
dec
in
adc
popa
mov
ss
shrl
jb
mov
xchg
sub
insb
mov
outsb
xorl
rorl
lods
mov
sub
cmp
in
and
mov
sbb
sbb
lods
flds
mov
xchg
mov
das
lock
sbb
mov
cwtl
es
inc
cmp
fwait
inc
stos
imul
aam
xchg
pop
es
xchg
sbb
clc
adc
xchg
xchg
int3
sahf
dec
xchg
xchg
rcr
outsb
popa
in
dec
sarb
mov
push
mov
out
mov
jp
dec
bound
or
orl
add
rcll
test
dec
pop
orl
aaa
out
out
mov
enter
dec
and
iret
xchg
nop
loop
sbb
es
inc
insb
out
push
and
mov
loop
jle
scas
les
stc
inc
mov
xor
aas
js
std
push
xor
mov
or
sub
inc
add
call
push
jmp
daa
cmp
ja
push
pop
pop
test
sbb
adc
mov
jmp
icebp
test
adc
sbb
out
les
js
incb
in
testl
jg
std
jp
xchg
bound
cmp
test
gs
add
test
xchg
jno
dec
imul
sub
mov
fstl
dec
lahf
pop
out
clc
jecxz
outsl
fcmovnu
imul
sbb
pop
movsl
pop
repnz
push
mov
stos
ss
cs
xlat
pop
mov
or
in
aas
mov
sub
shl
jno
or
lcall
fcmovne
mov
test
fsub
cmp
ljmp
std
xchg
ret
notl
cs
add
xchg
mov
sbb
inc
out
ljmp
rcll
xchg
sub
rorb
push
outsl
mov
lret
in
or
fnstcw
xchg
test
mov
imulb
iret
jns
jp
imul
mov
jae
or
xor
fmull
lret
push
in
sub
stos
inc
fisubrs
inc
sub
jae
shlb
mov
and
popf
xchg
mov
es
das
imul
mov
pushf
sahf
pop
jg
outsb
insb
mov
lahf
aad
push
hlt
cmc
fadd
insl
inc
jbe
xchg
pop
add
adcl
mov
icebp
jl
lock
aam
stos
and
mov
sbb
loope
hlt
fldt
adc
mov
ror
imul
out
aam
test
mov
out
cwtl
xchg
dec
repz
mov
pop
ja
ss
daa
cmp
add
cli
add
sbb
stos
pop
xchg
scas
loopne
mov
movsb
jl
test
loopne
out
sbb
mov
xchg
sbb
bound
pop
lds
mov
out
scas
jbe
lret
rcll
aaa
add
mov
inc
scas
cmp
mov
mov
cmpsl
cmpsl
push
aam
xor
int3
leave
push
and
add
shrb
xchg
inc
mov
repnz
adc
sub
xlat
sub
les
sbb
shrb
push
into
push
mov
rolb
push
adc
sbb
out
aam
xchg
imul
scas
cmp
popf
or
rcrb
ja
idivl
mov
sub
dec
setl
inc
lods
idivb
ret
cmp
ds
pop
pop
popa
pop
roll
sub
sti
jb
sub
xchg
sbb
inc
cmp
inc
pop
in
xor
xor
xchg
adc
rcr
gs
xchg
jns
fnstenv
insb
add
xchg
jle
inc
imul
dec
jnp
cmpsl
pop
dec
and
imul
push
sbb
jmp
lds
push
sbb
xchg
xor
sbb
sbb
mov
add
mov
in
inc
xchg
fidivrl
lret
jmp
dec
mov
jo
pop
orb
test
sub
push
jl
push
sub
jg
je
dec
ljmp
jno
mov
aaa
jle
sub
inc
das
and
mov
mov
stos
mov
or
sub
and
add
cmp
cmc
push
fnsave
mov
rcrl
daa
inc
mov
jle
imul
mov
dec
sub
push
out
lahf
bound
inc
inc
nop
popl
sub
pop
test
inc
mov
xor
arpl
into
jmp
xor
sahf
clc
mov
pop
loope
arpl
xchg
sbbl
or
pop
fcmovu
aam
out
pop
dec
aaa
ret
jl
sti
pusha
mov
mov
mov
jmp
xchg
sbb
cmp
push
xlat
mov
fnstsw
dec
test
push
outsb
cmp
dec
sbb
add
test
jne
lahf
loope
jnp
les
out
xor
jp
pop
int
dec
stc
iret
mov
mov
idivb
mov
mov
jo
push
mov
popa
sub
add
mov
or
xor
cmpsl
out
add
std
cmp
adc
decb
xor
pmaxsw
or
repnz
negl
popf
sbb
push
xor
pop
clc
mov
or
imul
icebp
adc
pop
cmp
out
pop
xor
fs
out
xchg
inc
dec
std
pop
in
sbb
imul
negb
mov
xlat
out
xlat
sub
xor
rcll
bound
cmp
mov
cmpsb
ss
jne
out
jbe
mov
sbb
loope
push
push
repnz
mov
ds
out
cmp
sbbl
cmp
in
mov
sbb
xor
push
mov
jge
sbb
push
int3
cmovae
sbbl
adc
inc
loope
xchg
in
lods
jmp
jge
dec
rcl
lock
xchg
cwtl
int
dec
pop
movsl
xor
cli
jne
dec
decb
and
addl
cmpl
sub
xchg
cmp
dec
adc
repnz
gs
cmpsb
popa
mov
jecxz
xchg
dec
pop
data16
xor
sub
dec
mov
ficomps
inc
push
dec
sbb
mov
leave
nop
jle
addr16
cmp
int3
aam
ficomps
les
jge
push
sti
xchg
mov
inc
iret
in
aas
movl
sbb
je
insb
cs
cwtl
and
aad
loopne
xchg
popf
mov
adc
fldl
fidivl
cmc
enter
cwtl
inc
or
sub
xchg
js
ret
mov
scas
fcom
unpckhps
imul
popf
xchg
mov
iret
mov
xchg
mov
jp
or
jg
jge
jno
aaa
inc
mov
dec
les
cmp
into
out
and
aaa
jne
rorb
subb
cmp
sbb
loopne
adc
icebp
mov
adc
jbe
cltd
push
lret
mov
rcl
lods
jbe
and
out
mov
cwtl
hlt
mov
setnp
inc
xchg
xchg
inc
jge
add
sar
inc
inc
sub
sub
stos
sbb
xchg
push
lds
ljmp
divl
add
lock
cmpsb
xchg
adc
lret
pop
rclb
and
aas
movsl
popa
dec
push
pushf
mov
cmp
sub
scas
jecxz
jg
jne
push
push
inc
xchg
adc
roll
inc
std
add
out
xchg
and
adc
aaa
call
mov
push
jecxz
sub
outsl
xchg
hlt
jo
cltd
mov
addl
fcmove
pushf
test
pop
sti
adc
and
cmp
int
lcall
cmp
into
push
dec
sbb
std
ds
push
pusha
inc
aam
dec
fs
mov
pop
rcrb
dec
fistpll
push
push
call
les
and
lock
sub
adc
into
jmp
movsl
xchg
xor
insl
leave
or
push
mov
adc
and
add
xchg
scas
rol
dec
pop
mov
xor
mov
call
or
rcrb
cs
pop
add
shrl
arpl
sub
jae
inc
mov
addl
ja
xlat
dec
sub
stos
push
mov
mov
pop
sbb
int
sbb
and
ljmp
out
mov
loopne
subb
or
sbb
mov
pusha
mov
sbb
fwait
sub
xchg
sub
mov
fdivrs
pop
or
sahf
movsl
cltd
and
mov
dec
lods
movsl
add
leave
sbb
out
mov
adc
ja
addr16
push
mov
dec
mov
adc
dec
in
shll
ret
adc
cmpsb
bnd
push
add
stos
xacquire
dec
inc
push
sti
lcall
scas
push
dec
enter
cmp
nop
call
ror
mov
loope
xlat
xchg
scas
xchg
mov
stos
add
dec
mov
jle
into
lds
lds
ret
stos
jmp
ljmp
fcmove
cmp
sbb
add
jl
push
jns
cmpb
mov
mov
std
pop
dec
inc
stos
shll
ss
addb
push
pushf
xchg
loop
sub
mov
bound
xchg
mov
dec
push
test
int3
inc
xor
xchg
adc
nop
sbb
adc
stc
insb
jg
imul
shrl
mov
cs
pop
cmc
ds
cmp
lds
dec
cltd
mov
test
shrl
and
push
js
mov
pop
add
stos
xchg
pop
insb
and
sahf
aam
icebp
aad
jae
and
aam
adc
mov
xchg
rcrb
mov
icebp
cmp
ret
rcrb
dec
xchg
or
add
les
repnz
mov
mov
dec
jmp
inc
sbb
std
leave
xor
xor
and
orl
mov
adc
test
int3
mov
sub
cmp
add
adc
call
cwtl
add
ret
mov
sbb
sub
sbb
test
data16
rcrb
movsl
push
rcrl
mov
xrelease
inc
add
dec
aas
pop
cmpsb
jmp
xchg
sub
pop
dec
mov
sub
ret
adc
jge
and
inc
pop
and
lods
adc
test
dec
sbb
ja
push
inc
lds
xchg
fimuls
push
xor
ds
jl
enter
test
dec
imul
inc
adc
dec
scas
shrb
jp
lcall
sbb
imul
int3
rcrb
add
jg
je
pop
in
test
je
or
sub
test
jno
lahf
xlat
fsubrs
xchg
and
es
sti
cmp
jo
sub
adc
lds
cmp
pop
jle
xchg
fstl
outsb
mov
and
dec
mov
fadds
mov
dec
sbb
andl
xchg
push
sub
outsb
or
mov
xchg
dec
or
xchg
stos
addr16
dec
xchg
test
inc
mov
movsl
pop
cmpsb
jecxz
cmp
loop
aas
fcompl
or
movsb
and
in
ficomps
sub
sahf
jmp
push
mov
cmp
insb
xor
xchg
scas
xchg
cmp
jb
xchg
mov
xor
push
xchg
pop
leave
jne
flds
in
adc
test
or
popf
in
fisttps
lcall
xor
dec
dec
popf
xor
xchg
cwtl
inc
fsubrl
rclb
sbb
xchg
cmp
jg
call
xchg
fildll
xchg
mov
rcrb
andb
loop
mul
ljmp
loop
test
es
cmp
add
clc
pusha
xor
mov
mov
lods
mov
fisubrl
xorb
mov
push
cltd
ret
lret
loopne
insb
adc
adc
test
inc
gs
sub
aas
lods
movsl
in
adc
xchg
sub
xchg
xor
mov
ret
xlat
ss
lock
and
pop
inc
mov
out
fsubrl
lods
sub
and
add
cmp
pop
push
jmp
pop
xchg
xor
or
or
pop
cmp
cmp
push
repnz
cmp
outsl
dec
add
roll
shll
in
cltd
xor
pop
hlt
in
movsl
test
popa
push
cmp
popa
push
cmp
stos
daa
jecxz
mov
nop
xlat
push
cmp
xchg
outsb
aam
adc
das
lods
cs
pop
hlt
or
lock
mov
les
mov
lods
imulb
pusha
add
nop
mov
jge
out
fwait
scas
arpl
or
xchg
mov
add
jne
out
iret
mov
push
push
adc
ficomps
pop
ja
xor
xchg
dec
pop
mov
pop
pop
leave
jp
pop
adc
xor
fdivs
les
mov
add
dec
inc
xorl
xchg
adcb
out
mov
jno
pushf
fldcw
sbb
rorl
notl
inc
dec
and
mov
outsb
and
loope
jecxz,pn
rcrb
out
or
test
fisubs
xlat
xchg
shrd
xchg
sarb
mov
aaa
aad
outsl
out
cmp
mov
ds
inc
mov
and
push
inc
imul
sti
fidivrl
mov
mov
das
pop
xchg
cmp
push
loop
or
dec
xor
cmp
cmpsb
jecxz
in
lret
shlb
push
ret
mov
popa
push
mov
mov
inc
in
jne
lahf
subb
jnp
fldt
nop
jo
xlat
rclb
mov
xor
shr
rcrb
loopne
and
loope
push
sub
outsl
push
or
sbb
fistpl
shrb
mov
xchg
sub
inc
mov
inc
lds
dec
test
push
sub
xor
test
jmp
fildll
popa
rclb
sbb
xor
inc
and
pop
mov
mov
cmpsl
push
and
shl
pop
mov
jno
lods
mov
sub
popa
movsl
and
test
ja
mov
aam
mov
mov
fmull
push
mov
mov
es
aam
js
fildll
push
insb
push
jbe
shr
mov
adc
adc
mov
sbb
or
lock
cmc
lcall
jo
fistps
mov
dec
icebp
dec
push
sub
xchg
adc
cmpsb
mov
cs
mov
xor
push
lret
repz
push
cmp
lods
mov
mulb
in
daa
cmp
cmpsb
jns
push
or
xchg
daa
stos
push
cmp
mov
push
xchg
cmpsb
pop
sete
xlat
insb
repnz
inc
adc
jl
push
jecxz
dec
shll
scas
test
push
pop
adc
adc
fcompl
fidivl
pop
enter
cwtl
dec
inc
pop
mov
idivb
push
lret
sub
arpl
adc
jne
xlat
xchg
dec
idivl
xchg
and
push
mov
push
stc
mov
std
inc
cli
sbb
pop
pop
aas
jbe
push
outsb
xchg
or
xor
out
push
mov
repnz
jne
cmpsb
outsl
mov
test
lods
add
xchg
loop
mov
push
adc
push
mov
adc
cld
dec
aaa
jg
scas
mov
rol
add
cmc
cmpb
scas
cwtl
cwtl
nop
jle
xor
mov
xor
mov
push
rcl
mov
addr16
jle
dec
mov
lds
mov
or
and
fdivrs
lods
lds
std
sti
test
call
enter
repz
test
lods
leave
in
pushf
popa
icebp
test
loopne
add
repz
jp
xor
ret
cmp
filds
les
nop
aaa
cld
pop
push
ds
inc
idivl
es
inc
xor
jg
add
push
out
xchg
sbb
xchg
int3
ss
sbb
xchg
dec
aad
and
out
pminsw
fs
mov
les
and
call
xchg
jae
jg
mov
jno
push
scas
jo
inc
lahf
adcl
jne
pop
testl
cmp
xchg
sub
jnp
jb
das
dec
push
cmp
pop
cwtl
pop
and
popf
ja
mov
lahf
decb
cmp
into
mov
mov
or
loopne
and
stos
adc
nop
xchg
les
es
mulb
test
js
rorb
xchg
icebp
shll
add
fistpl
or
lock
push
dec
mov
adcl
es
das
mov
adc
adc
xchg
sub
pushw
jmp
jae
push
add
push
insl
aad
ds
mov
cs
stos
mov
lret
mov
popa
jnp
and
add
cmp
icebp
in
fwait
lods
repnz
push
sub
out
jae
sub
mov
xchg
add
sub
loop
in
ficoms
fwait
test
xlat
jmp
add
cmp
or
pop
or
rcl
arpl
add
sbb
ret
sbbl
sub
dec
iret
and
pop
repnz
dec
movsb
psrlw
jno
idivb
ljmp
rolb
hlt
pop
pop
mov
sbb
mov
mov
mov
mov
adc
in
jmp
fsubr
cs
sub
sbb
enter
cltd
inc
xchg
sbb
mov
sbbb
jg
and
pop
or
sub
jge
and
ficoms
das
insb
jge
xchg
sub
push
sahf
mov
in
jge
sbb
test
scas
jle
or
mov
mov
mov
cmp
fldcw
sbb
pop
adc
fisubrs
mull
xor
mov
iret
aaa
inc
push
imul
mov
loope
sub
in
lock
fcoms
and
cmp
dec
inc
inc
mov
jne
shlb
cmp
in
cmp
ror
cmp
cmpsb
sub
aas
ficoms
das
mov
sub
and
push
mov
xorl
in
les
xchg
add
mov
imul
adc
jnp
lcall
and
aad
lret
and
push
mov
sbb
xchg
adc
gs
pop
lahf
mov
dec
pop
jmp
adc
xchg
or
push
dec
jg
xchg
push
mov
mov
mov
mov
es
xchg
jb
imul
mov
jbe
xor
aam
sti
in
xchg
stos
xor
push
push
mov
dec
lahf
push
xlat
imul
int3
mov
jle
add
xchg
out
mov
cmpsb
xchg
daa
jno
lcall
xor
mov
into
pop
arpl
inc
loope
pop
jno
fildl
mov
lcall
sub
clc
sbb
xor
sub
pusha
fwait
jmp
sub
les
pusha
jle
in
movsb
sbb
add
out
mov
cmc
inc
pop
dec
ret
sub
push
sbb
hlt
imul
das
jne
xchg
mov
mov
mov
out
lret
fidivl
test
aaa
mov
pop
ss
pop
push
in
lret
mov
clc
push
xor
pusha
cltd
xchg
xor
pop
jmp
push
xor
int
jo
or
push
shrb
int3
shr
sub
stos
cmp
jb
andb
and
popa
sbb
mov
sub
out
and
xor
jmp
xchg
rep
push
popf
push
mov
pop
mov
adc
repz
ficomps
xor
add
in
jmp
mov
push
out
jno
push
aam
xor
mov
sarb
dec
mov
mov
pop
push
xchg
out
into
int3
xor
mov
xor
cmp
push
out
in
mov
out
in
xor
pop
cmp
pop
xorb
jb
sub
xchg
rol
pop
fs
imul
jle
dec
stos
adc
xchg
adc
out
dec
dec
add
push
in
cmp
sub
jnp
and
addr16
mov
sbb
pop
adc
push
adc
and
cmp
sbb
pushf
leave
jmp
push
shl
pop
nop
andb
mov
ss
push
jge
inc
dec
repz
fcoms
rol
sbb
pop
xchg
aas
pop
push
add
movsb
das
shrb
xchg
jbe
inc
inc
movsl
or
ss
je
or
jnp
push
cmp
push
pop
adc
add
mov
mov
loopne
jp
mov
jge
scas
jbe
and
js
nop
push
hlt
pop
push
pushf
fsubrs
pop
repnz
sbb
ds
inc
add
and
add
lds
test
dec
mov
int
out
mov
sarl
add
sbb
cli
dec
test
aas
test
mov
fiaddl
mov
mov
mov
ret
jno
sarl
cltd
data16
mov
int3
and
ret
mov
dec
sub
sbb
sbb
leave
mov
das
in
sbbl
inc
testb
loopne
cmp
xchg
loope
inc
repnz
jo
in
mov
and
into
xor
aas
movsl
and
fimull
xlat
subl
dec
fbld
or
mov
ljmp
cmp
roll
push
addr16
pushf
mov
add
adc
lea
push
adcb
or
xor
push
xor
insb
xchg
cmp
cmp
into
cmp
inc
xor
arpl
bound
xor
pushf
mov
mov
sub
insb
je
sub
sbb
jb
fwait
stc
test
sti
add
jmp
fcomp
rcll
push
xor
jl
pushf
jle
mov
mov
adc
icebp
push
jns
divl
or
push
push
insb
xchg
and
jmp
out
inc
cli
aas
hlt
push
cli
and
push
stc
inc
into
adc
ds
xor
inc
jnp
push
xchg
ret
dec
cld
out
add
add
cmp
xor
xor
xor
or
add
data16
fbstp
popa
aas
cmp
arpl
lahf
fsubrs
pop
enter
jnp
rol
dec
jmp
cwtl
mov
arpl
ljmp
loopne
add
lret
sub
jg
leave
cmp
hlt
xor
addr16
jae
xor
cmpsb
ds
mov
sbb
test
push
ror
cmp
cmc
inc
js
push
mov
jno
sbb
popl
pushf
cmp
int
lret
inc
scas
lods
xchg
scas
push
arpl
lret
sub
add
out
mov
cmpsl
or
aam
mov
insl
jnp
or
repnz
push
popa
cwtl
mov
lds
adc
lods
inc
js
jg
mov
mov
loop
test
cli
cmp
loope
mov
aas
mov
in
out
ljmp
cmp
mov
in
dec
jl
rol
and
xor
push
mov
cmpsb
add
ret
mov
adc
ret
pop
call
push
and
inc
xchg
scas
sti
cmp
sub
imul
in
call
push
xchg
or
out
push
outsb
js
sahf
jbe
pop
mov
orb
cmp
fcmovnb
add
adc
cmc
sbb
dec
mov
adc
xchg
in
arpl
inc
rcl
shll
rep
les
or
data16
int
aaa
clc
loope
insb
dec
addl
loope
lret
into
mulb
mov
int3
xorb
xchg
sub
xchg
jbe
hlt
sbb
fnstenv
mov
insl
in
dec
les
enter
js
ja
or
lret
arpl
addb
pop
ret
and
popf
popa
dec
dec
dec
imul
mov
aam
push
pop
xor
push
fs
lret
cmpsb
mov
pop
into
insl
cmp
xchg
push
sbb
mov
sbb
std
sub
and
enter
nop
mov
jne
pop
es
jb
imul
lock
loop
aaa
pop
cmp
pop
sub
ds
xchg
in
push
xchg
sbb
xor
pusha
std
jne
mov
in
testl
imul
push
arpl
or
or
fisttpl
movsl
add
fcoml
xchg
push
mov
scas
add
xor
pop
stos
aas
loopne
sbb
aas
mov
and
or
in
shll
add
cwtl
lret
pop
cwtl
cmp
adc
push
xor
popf
dec
and
jecxz
sbb
sti
cld
out
pop
movsl
jl
dec
mov
popf
testb
push
into
dec
adc
scas
stos
inc
repnz
sbb
push
mov
loop
push
sbb
push
cmp
xor
test
mov
sub
sbb
cmp
loope
icebp
test
cli
adc
cmp
add
mov
mov
jmp
jg
fsubrp
sahf
mov
leave
inc
or
jb
sahf
dec
jp
push
lret
sub
push
idivb
movsb
jne
andb
pop
mov
mov
stc
pop
lret
xchg
push
sub
push
rol
push
or
repnz
push
negb
movsb
sahf
in
js
test
pop
cld
es
and
movsb
js
sti
xchg
insl
inc
mov
push
xor
jns
jne
test
jo
and
aam
jnp
push
xchg
cmp
scas
pop
jns
int
xor
sbb
out
dec
xchg
inc
mov
push
push
fdivrs
adc
fsubrs
push
xchg
jmp
cld
loope
xchg
mov
outsl
in
mov
xor
adc
jne
test
jge
mov
mov
add
adc
mulb
dec
stc
sbb
pop
xor
lcall
and
push
movsl
std
lret
repz
mov
mov
jmp
std
push
dec
sbb
jle
pop
cwtl
and
test
mov
pop
js
pop
leave
sti
aaa
repnz
inc
push
mov
mov
ss
movsb
leave
aam
scas
fisttpll
nop
div
ja
ja
popf
fidivrs
aas
mov
mov
imul
shrb
stc
pop
push
out
subb
or
ja
add
or
jmp
mov
stos
jg
cmpsl
mov
int
jmp
out
xchg
sahf
push
mov
dec
inc
ret
icebp
insl
movsb
xchg
dec
sarb
lods
and
cmp
std
aas
ss
scas
ficompl
fadds
ds
xchg
cmp
repz
popf
scas
sub
add
rclb
inc
jp
dec
testl
pop
jae
sahf
mov
subl
loop
pop
cltd
xor
sbb
or
xor
cwtl
movsb
fstpt
dec
add
jp
cmp
sub
sbb
mov
icebp
repz
hlt
add
pop
and
sbb
push
cltd
push
shrl
sbb
dec
icebp
xchg
arpl
stos
mov
sbb
addr16
cmp
push
andl
adc
sbb
insb
xlat
aam
in
pop
lods
sbb
jb
cmpsb
inc
adc
lock
push
test
jae
push
adc
mov
and
mov
cmp
pop
fcomp
jns
out
jns
leave
add
inc
outsl
fistpl
jb
into
sub
add
cs
add
ds
scas
push
mov
in
je
sbb
xlat
call
out
jb
lds
push
scas
jae
pusha
in
sbb
gs
aam
mov
mov
out
test
cmp
mov
push
jle
jmp
movsl
and
cmp
inc
jns
dec
inc
popf
icebp
inc
adc
aas
aaa
mov
xchg
les
mov
xlat
das
movsb
cmpsl
adc
and
shll
fld
test
dec
push
out
pop
aas
leave
scas
faddl
jbe
mov
cmp
lcall
gs
mov
add
jecxz
cmc
data16
rcl
sub
mov
cld
nop
pop
mull
mov
jge
movsb
dec
pop
adc
xchg
daa
decl
jb
das
mov
cmp
cmc
xchg
push
sti
dec
dec
sbb
and
sub
or
fcomps
sbb
pop
fistpl
xor
scas
xchg
int
out
stos
fs
add
pop
aad
sti
pop
mov
sub
adc
mov
push
aas
and
dec
xchg
push
scas
in
mov
pushf
inc
vucomiss
fstp
inc
sti
sub
aas
lods
in
int3
mov
outsb
cmpsb
rcll
lods
inc
pop
aas
xchg
add
scas
sti
mov
rolb
mov
xchg
ja
pop
aam
call
adc
xchg
xchg
xchg
sbb
lods
movsb
addl
lret
movsb
aaa
scas
mov
push
pop
shrb
fcmovb
out
icebp
mov
leave
xchg
shlb
or
rorb
ret
dec
lahf
push
in
mov
loopne
mov
popf
sub
cwtl
xorb
push
fs
je
sub
or
scas
ret
fildll
or
jo
pop
repz
movsb
cltd
test
xor
xor
pop
xchg
mov
hlt
std
sbb
dec
add
mov
arpl
cs
pop
stos
xchg
cmp
jae
repz
mov
shll
sti
inc
insb
iret
mov
sarb
ret
insb
imul
out
nop
gs
out
xor
cmp
dec
nop
mov
add
pop
pop
movsb
and
fldt
xchg
add
repnz
jmp
inc
or
aam
das
push
mov
jno
test
xor
inc
rcll
dec
xchg
outsl
pop
int
stc
jnp
pusha
mov
adc
cmc
xchg
out
and
rol
cmp
xchg
sbb
lock
negl
insb
out
or
fdivl
sub
mov
inc
adc
push
xlat
sbb
push
mov
shlb
pop
lret
pop
push
ret
or
mov
mov
aas
xchg
dec
sti
subb
in
pop
cmp
int3
addl
cltd
xchg
push
mov
xchg
aas
push
pop
pop
call
sbb
and
xlat
insl
in
sub
enter
dec
sub
les
fsubrl
std
jmp
lds
popf
outsl
clc
into
sti
inc
stos
movswl
or
pop
mov
xor
jae
push
push
mov
dec
clc
mov
lock
jno
fstpl
filds
cmp
mov
test
sbb
pop
mov
movsb
sbb
shr
jle
fwait
in
mov
jp
scas
in
scas
aaa
jle
and
xchg
icebp
push
add
stc
adc
popa
insl
loope
lret
fwait
cwtl
cmp
fnstenv
sub
inc
pop
or
fwait
or
jge
ds
mov
mov
dec
or
or
rorb
in
icebp
mov
ret
out
xchg
icebp
mov
loop
cmp
inc
mov
or
scas
or
into
inc
ret
aad
aaa
add
jo
mov
mov
sar
aam
jae
mov
xor
outsl
push
ss
jae
cs
test
mov
cmp
clc
addb
outsl
push
jge
das
xor
cmpsl
inc
jl
int3
dec
cld
andl
adc
roll
adc
inc
mov
das
mov
or
and
fcoml
and
jns
int
fsubrl
dec
loop
mov
insl
or
aad
push
and
mov
mov
and
mov
sbb
mov
push
jno
add
add
out
daa
sub
adc
mov
int3
jno
jp
bound
lahf
sub
or
imul
dec
xchg
mov
add
push
idivb
into
adc
pop
pop
loopne
xor
loope
stos
daa
or
cmp
dec
cmc
aaa
push
inc
xor
and
lods
in
and
push
pop
sub
xor
pop
adc
in
push
in
stos
and
addr16
xchg
ret
shrb
or
imul
pop
leave
test
outsl
push
mov
syscall
pop
cwtl
fwait
xchg
icebp
or
xchg
xor
jle
in
push
faddl
lods
adc
adc
sbb
fwait
push
fsubs
xor
push
and
leave
push
jno
loope
cmp
jl
imul
inc
add
push
add
or
cli
dec
shrl
cwtl
jb
sbbb
movsb
mov
xor
dec
sbb
push
jl
dec
mov
clc
or
push
mov
sbb
fcmovne
jge,pt
push
repz
mov
ss
ss
sahf
inc
andl
aas
push
cli
andb
fdivrp
cmp
and
push
inc
cmp
cmpsl
lahf
pop
inc
insb
xchg
xchg
testb
leave
jbe
insb
call
sub
dec
in
getsec
sub
lds
xor
es
les
jb
add
test
out
movsb
aam
inc
inc
pop
or
lock
outsb
push
jecxz
pop
add
pop
mov
cltd
sbb
les
notl
sub
pop
dec
imulb
mov
sbb
pop
mov
mov
xor
mov
out
adc
mov
or
negl
and
popf
add
pop
out
cmp
lret
mov
loope
shr
mov
outsb
pop
add
inc
pop
test
int
sub
mov
sub
outsb
insl
push
dec
shlb
jg
dec
cmp
mov
nop
push
loopne
rcrl
pop
jmp
inc
cmpsl
mov
cs
scas
adc
clc
pop
cmp
rolb
sub
pop
add
out
loop
xor
sti
mov
pop
and
call
jmp
pop
push
xchg
cmp
shr
iret
fdivrl
add
ss
xchg
xor
adcl
out
sarl
pop
and
and
jmp
mov
ret
mov
scas
xor
push
mov
mov
divl
repz
cli
sbb
bound
mov
lea
cmp
js
mov
fsubl
dec
cmpsl
or
repnz
pop
lret
ljmp
jbe
outsb
adc
ss
xchg
xchg
jp
sub
in
cmpsl
push
or
add
cmp
cmp
or
pop
insl
sbb
xorl
push
mov
mov
cmc
scas
adc
arpl
adc
in
clc
xchg
adc
pop
cmc
insb
sub
mov
and
out
xor
idiv
cmp
out
add
sub
dec
popa
inc
repz
pop
aas
dec
imul
sbb
jne
roll
ret
adc
push
sbb
hlt
inc
stc
pop
neg
jmp
subb
repnz
ret
mov
lahf
rolb
cmp
jne
fmul
adc
dec
loope
mov
sbb
pop
jo
fildl
push
and
sub
dec
rcl
mov
push
in
lock
push
stos
dec
mov
jp
int3
sti
negb
add
xor
lock
or
test
pop
fmul
imul
xor
ljmp
cld
frstor
adc
jns
sti
je
adc
xchg
mov
mov
and
mov
nop
xor
pop
fwait
lahf
call
cmp
ret
jb
push
mov
clc
sahf
pop
pop
inc
test
in
out
std
outsl
sub
data16
iret
dec
xor
add
pop
dec
jns
test
push
cmp
ficomps
in
inc
xor
insb
mov
xchg
mov
mov
aaa
ds
xchg
push
out
shlb
gs
jo
dec
push
insl
dec
lods
out
outsb
jg
shr
sbb
jne
pop
sub
push
in
into
sub
mov
call
test
subl
mov
mov
lcall
test
push
jg
movsb
adc
mov
insl
inc
or
adc
xor
mov
call
inc
fsts
aaa
das
lea
gs
imul
fwait
test
sbb
push
shrl
jmp
aaa
cmp
arpl
scas
xchg
pop
imul
push
call
hlt
jno
imul
sbb
pop
xchg
rcrb
insl
fstpt
push
pop
rcl
mov
mov
jecxz
repnz
pushf
orb
pop
inc
out
mov
mov
inc
mov
mov
cmp
roll
lods
jecxz
adc
ljmp
ljmp
sbb
daa
ja
clc
sub
sbb
out
ss
sahf
pop
mov
and
imul
lcall
stc
aas
adc
sbb
jne
jp
fsubrl
pop
and
fiadds
in
and
push
pop
fsubs
or
enter
inc
push
xor
test
jae
pop
mov
inc
jg
insl
or
out
xor
and
pop
add
ds
or
mov
popf
testb
push
pop
mov
outsl
popa
aas
test
cmp
fisubrs
jmp
les
ret
movsl
pop
adc
rcrl
adc
enter
adc
xlat
rcrl
mov
push
inc
ret
mov
mov
out
ds
std
xchg
fisttpll
dec
sbb
jge
fsubl
push
fdivr
xchg
divl
insl
outsl
xchg
ret
jnp
sbb
cli
or
mov
xchg
jne
daa
fs
testb
mov
xlat
mov
adc
jo
pop
push
sub
dec
push
xchg
push
cmp
mov
test
jbe
mov
rcr
hlt
xchg
dec
cld
test
lret
fidivs
pop
mov
cmpsb
add
sbb
in
outsb
fsub
imul
ja
or
mov
imul
in
pop
jecxz
jne
sub
push
adc
js
sub
shlb
shll
inc
dec
mov
cmp
fdivrl
xlat
jmp
scas
dec
jl
jnp
shl
in
mov
rcll
pop
push
mov
adc
scas
les
shlb
mov
xchg
out
enter
xchg
sbb
adcb
or
xchg
xchg
dec
repz
lahf
outsl
sbb
movzbl
push
mov
lea
cltd
fsubp
leave
xchg
iret
icebp
cld
pop
xor
in
mov
push
outsb
or
shlb
push
xor
push
add
jo
xor
xchg
adc
test
lods
mov
sbb
inc
push
inc
icebp
call
cli
mov
in
arpl
test
scas
loop
mov
mov
icebp
rol
pop
sti
xchg
adc
lret
inc
push
fcmovnu
push
xchg
insb
orl
scas
in
xchg
lods
jge
and
fsubrl
fsub
mov
mov
dec
lret
fstpt
cmp
test
hlt
xchg
lods
adcl
inc
mov
or
test
loopne
jbe
ret
dec
cltd
inc
int3
stos
xchg
fdivrl
shll
mov
in
lret
xchg
lea
lret
imul
lods
inc
les
repnz
push
cmp
adc
das
mov
fldcw
cld
fucompp
loop
mov
mov
sahf
jnp
mov
subl
inc
push
mov
lock
test
popf
xor
jne
cld
and
daa
inc
push
add
sub
or
aaa
stos
stc
pop
arpl
xor
inc
push
mov
xchg
shl
sub
fdivrp
aad
aas
jbe
dec
popf
or
adc
outsl
int
pop
dec
xchg
or
clc
adc
pop
movsl
mov
jb
pop
push
dec
and
fnstenv
mov
into
add
pop
in
in
cwtl
xchg
cltd
daa
cmpsl
push
cmp
sbb
outsl
pop
mov
enter
cmc
in
icebp
jl
mov
rclb
xchg
stc
sub
rcrb
sbb
imul
int3
addr16
out
jmp
insb
loop
add
adc
mov
adc
or
dec
mov
cmp
insb
scas
dec
and
push
inc
jecxz
ret
js
lds
xchg
sub
ficoms
cwtl
ret
and
mov
xchg
lds
stos
and
fs
mov
xor
mov
push
adc
insl
repz
dec
or
movb
fdivrs
out
mov
add
out
imul
mov
aaa
es
sub
aaa
cmp
orps
or
mov
rcrb
push
iret
cmpsb
or
fucomip
sti
outsb
jb
mov
jecxz
negl
mov
mov
jp
xchg
repnz
outsb
rorb
std
pushf
adc
sub
jo
scas
lock
outsb
inc
push
leave
fwait
push
out
jnp
sbb
inc
jno
or
aas
gs
lods
jns
pop
mov
mov
xchg
pop
add
and
mov
push
sahf
ja
enter
push
sub
jl
addr16
lods
mov
or
inc
fs
test
dec
and
xchg
cmpb
mov
add
pop
js
lret
out
shlb
stc
jg
das
jb
int
push
and
pop
add
jbe
jle
shlb
add
and
adc
dec
mov
push
xchg
mov
loop
mov
sub
adc
pop
stos
sub
adc
dec
mov
cmp
push
shlb
push
mov
pushf
iret
lahf
mov
dec
xchg
add
cmp
mov
inc
dec
mov
int3
or
or
leave
pop
cmpsb
lds
in
adc
mov
add
pop
or
scas
add
dec
sbb
cmp
setge
pop
das
inc
push
mov
dec
mov
mov
test
pop
in
testl
push
aas
pusha
clc
xchg
xchg
xchg
in
nop
nop
mov
stos
aas
xchg
lock
push
aam
iret
sbb
mov
inc
mov
xchg
fisttps
pop
mov
fsubrl
test
and
fnstenv
ja
lret
push
in
cwtl
push
xchg
icebp
lret
cmp
std
pop
stc
xchg
in
dec
lret
pop
and
inc
std
in
paddd
cli
dec
dec
repnz
xor
mov
scas
jne
xchg
fucomp
loop
pop
mov
lret
jnp
stos
xor
push
mov
mov
adc
lret
mov
fnstsw
out
or
inc
push
add
neg
adcl
aaa
and
test
lahf
pop
push
push
or
sbb
inc
mov
or
sub
pop
adc
sahf
sub
push
mov
dec
mov
cwtl
and
push
test
sbb
or
sbb
rorb
icebp
ss
push
test
xor
hlt
pop
sbb
mov
cmc
int3
bound
aad
or
imul
bound
out
pop
push
adc
and
dec
push
xchg
add
lahf
push
int
mov
sub
or
dec
imul
xchg
mov
lds
push
or
fisubl
out
cli
inc
xchg
fidivrs
pusha
xlat
adc
pop
mov
inc
addr16
sub
lds
int3
or
mov
stos
adc
push
sub
je
leave
add
or
mov
mov
pushf
push
mov
jno
adc
lods
add
sub
addr16
pop
decl
sbb
xchg
mov
lock
data16
fsubs
dec
dec
jp
xor
ds
xchg
push
pop
add
jbe
jns
cmpl
jns
scas
jnp
xchg
mov
push
mov
addr16
scas
sbb
sub
cmp
aam
or
fwait
es
int3
imul
cli
fidivl
lahf
popa
xchg
or
call
or
js
mov
push
call
fucomip
xor
sbb
pop
ret
jp
fiadds
mov
xlat
int3
push
sub
sub
push
and
dec
fsubrl
lods
pop
xor
minps
bound
ficomps
mov
icebp
push
lahf
mov
sub
push
ret
adc
mov
cs
dec
mov
jno
std
add
cld
xorl
movsb
xchg
jecxz
popa
add
mov
adc
fwait
add
lret
push
shlb
dec
out
inc
and
cmpsl
addr16
fnstcw
push
mov
nop
add
int3
js
mov
stos
adc
and
comiss
sbb
rcr
shlb
loopne
jmp
movsb
rcrl
xor
inc
inc
arpl
enter
rorl
adc
jmp
sbb
adc
sub
cmp
mov
mov
jno
jb
sarb
mov
jp
jl
scas
stos
loopne
outsl
pop
hlt
and
xchg
jo
aas
and
outsl
fistps
aaa
inc
cwtl
mov
cmp
inc
repnz
jno
call
gs
mov
and
fidivrs
xor
std
dec
aad
cmp
pop
push
gs
sub
data16
out
lcall
push
dec
movsl
jge
mov
and
pusha
pop
repz
mov
mov
filds
mov
adc
sub
andb
or
lds
jle
jbe
adc
mov
add
mov
out
xchg
stos
cmp
test
aam
inc
mov
or
fldenv
add
scas
ds
add
lahf
dec
jle
movsb
loop
or
mov
cmp
push
pop
dec
sbb
pop
out
push
lds
xor
jo
adc
mov
and
mov
jns
fiadds
push
inc
insl
inc
filds
xor
in
cmp
pop
or
andl
mov
jb
dec
jecxz
sbb
sbb
xor
fwait
pop
jl
pop
pop
in
sbb
and
int3
xor
sarl
arpl
mov
das
cmp
pop
dec
cltd
and
add
je
mov
sbb
xchg
test
xor
enter
outsl
add
push
icebp
jbe
mov
popf
add
jge
pop
pop
rcrb
iret
fdivl
cmp
ja
jo
mov
or
xchg
jns
or
lret
addb
jmp
call
aad
inc
inc
dec
xor
lods
push
jmp
xor
jmp
test
jge
cli
and
mov
lods
jge
xchg
mov
adc
iret
inc
mov
ja
dec
mov
mov
notb
jnp
das
outsb
lods
fcomi
cs
gs
testb
stc
push
inc
scas
dec
cmpsb
add
pop
cmpsb
add
mov
xchg
jle
fisubrl
icebp
adcb
sbb
in
sub
dec
in
sub
movsl
dec
test
push
mov
jle
sbb
add
mov
pop
pop
mov
cmpl
xor
xchg
xor
sub
pushf
repnz
xchg
dec
mov
sub
shll
outsb
out
mov
popf
or
sbb
outsl
mov
pop
adc
sbb
adc
sbb
dec
inc
add
mov
and
mov
ret
add
sbb
xchg
rclb
fisttpl
push
repnz
cld
jg
out
jg
test
sbb
xchg
movsl
xor
sbb
xlat
sbb
js
jb
scas
xor
es
push
mov
and
dec
icebp
pop
jnp
loopne
xor
or
mov
sbb
sub
adc
sub
loope
mov
stc
xor
inc
jmp
loopne
test
or
insb
mov
lret
cltd
adcb
test
mov
into
mov
cmp
xchg
js
test
cmp
shlb
cmp
and
mov
cmp
mov
sti
xchg
inc
out
movsb
fldt
jl
cld
mov
adc
mov
dec
sub
mov
mov
cmp
ljmp
ficompl
and
fwait
fwait
and
testb
xchg
js
lods
loop
insl
xchg
jae
out
cmp
ret
sub
setne
and
pop
sub
mov
jge
inc
pop
imul
pop
pushf
cmp
push
call
iret
mov
popl
mov
int
and
cltd
loopne
pop
shl
mov
sbb
and
outsl
xor
imul
lahf
fucomp
jg
imul
sub
loop
imul
pop
cmc
mov
sbb
aam
mov
push
in
adc
adc
testl
repnz
fildl
shlb
push
lods
mov
stos
out
push
testb
inc
sbb
pop
mov
in
scas
aas
cmp
pop
xor
jnp
js
cmp
mulb
adc
add
into
outsl
mov
out
inc
sub
pop
aam
or
arpl
cmc
dec
outsl
dec
shll
fmuls
divl
dec
inc
mov
xchg
inc
pusha
inc
adc
add
out
repz
insl
or
cltd
test
nop
test
je
xorb
gs
lcall
and
or
sbb
call
cld
add
dec
mov
push
mov
cmovno
add
pusha
inc
sub
jns
fs
mov
pop
imul
inc
xchg
data16
lds
pop
push
dec
popl
out
data16
repz
mov
mov
dec
jbe
lret
lods
inc
mov
in
pusha
js
in
test
jo
call
inc
xor
and
pop
mov
test
aas
inc
xchg
mov
nop
or
fstpt
stos
add
in
push
cmp
dec
pop
lock
pop
mov
mov
repz
push
mov
mov
fdiv
inc
fsub
lahf
push
es
loop
or
push
adc
add
mov
nop
fs
stos
xchg
jmp
test
xor
subb
cmp
push
xor
idiv
add
jmp
lret
gs
sbb
ljmp
lock
lret
test
or
int3
cmpsl
inc
pop
sti
cmpsb
call
mov
test
sti
mov
les
xchg
cmpxchg
jne
adc
pop
leave
std
xchg
or
pop
lods
push
cli
sub
iret
pop
mov
sub
push
sahf
dec
arpl
int
shll
pop
sub
push
xor
ss
sub
int3
outsl
movsb
push
rorb
mov
add
dec
cltd
push
add
jg
mov
mov
mov
cltd
or
mov
stos
imul
into
jl
sub
cmp
orl
sbb
aas
movsl
inc
outsl
aam
insl
adc
out
mov
sahf
pop
in
neg
sub
outsb
mov
sbb
or
cltd
adc
cmc
inc
fcmovnbe
loope
mov
fwait
inc
mov
icebp
ljmp
shll
jnp
pop
inc
shll
lods
je
imul
repz
mov
push
cli
or
mov
enter
repnz
in
call
rorl
cmp
cmpsb
mov
stos
test
imul
es
sti
inc
and
aam
xor
rcr
pop
inc
sub
sarl
inc
pop
cmp
push
out
cmpsl
push
shl
loopne
jl
mov
hlt
jp
pop
and
mov
pop
inc
lods
xchg
xlat
out
xor
cltd
or
xchg
xor
jo
iret
insl
loopne
shll
sub
push
sub
sbb
negl
jnp
pop
dec
ds
adc
leave
rolb
cli
mov
jl
outsb
test
sbb
cmp
sbb
dec
push
cmp
jp
add
and
insl
lock
cli
or
repnz
sti
mov
mov
jg
aad
adc
lret
cli
lcall
aad
in
push
or
mov
push
ret
dec
jb
popa
shlb
sarl
js
xor
push
fildl
mov
fidivs
sub
mov
pop
adc
mov
js
fdivrl
pop
or
aas
and
jge
sbb
adc
mov
fcmovu
inc
mov
lea
xchg
xor
xchg
cld
pop
mov
sub
xor
es
xchg
push
iret
pop
mov
pop
push
and
jnp
insl
and
pop
add
inc
cmp
pop
sub
sub
fisubl
stc
insb
push
or
cmp
pop
mov
jecxz
lds
xchg
jg
jnp
pop
out
add
jle
cmp
out
mov
out
inc
add
in
nop
mov
rcl
dec
lret
jnp
or
jle
jg
push
sbb
mov
sub
ret
add
arpl
cmp
add
scas
insb
lea
cmp
xchg
push
fimuls
or
int3
mov
fists
es
sub
mov
pop
xchg
and
xchg
mov
push
pop
or
data16
fwait
push
test
xor
decl
push
mov
or
in
sub
jbe
ss
loope
add
jmp
jae
daa
add
shrl
js
shll
imul
mov
rorb
dec
adc
pop
in
fcoms
movsb
push
or
cmp
mov
lock
int3
mov
push
je
ds
lret
insb
xchg
or
shl
and
dec
add
call
inc
mov
clc
repz
sub
sub
xor
fwait
gs
test
iret
mov
test
fiadds
lods
mov
push
add
mov
jg
xchg
test
mov
pop
dec
mov
jbe
lds
lds
mov
leave
pop
test
pop
push
cmp
adc
fiaddl
cmc
lods
pop
cmpsl
data16
in
push
mov
orl
fidivs
lods
insb
popa
jp
loop
pop
sbb
fcmovnb
cltd
push
out
mov
loopne
sub
or
inc
into
fmull
roll
ljmp
fs
daa
cs
and
repnz
push
xchg
push
xchg
inc
fistl
xchg
xor
dec
loopne
scas
sub
push
in
sbb
ficoms
push
pop
mov
fstl
and
fisubrl
addr16
dec
gs
sub
mov
addl
cwtl
stc
imul
insb
pop
cmp
stos
cmc
divb
jbe
scas
sbb
lods
jecxz
mov
mov
pop
mov
popa
jnp
mov
lods
imul
jae
mov
insb
int3
shll
loopne
arpl
xor
or
scas
iret
or
xchg
cwtl
shrb
aam
shll
ror
lcall
in
or
movsb
fnstsw
adc
shlb
dec
ret
push
inc
and
int
addr16
xor
and
inc
lock
lock
mov
imul
les
dec
pop
jmp
add
push
cmp
push
mov
adc
add
or
cli
push
mov
fnstenv
sarb
std
lock
jb
adc
je
imull
test
inc
int3
jmp
out
jl
xlat
fdivl
mov
or
roll
xchg
inc
pop
es
pop
ljmp
xchg
subl
aad
call
mov
sbb
sahf
das
sbb
test
and
xchg
fisubl
es
adc
jle
cmp
cli
sbb
cmp
xchg
xorb
adcl
outsb
cmp
leave
sbb
jbe
outsb
mov
adc
mov
xor
mov
call
imul
sub
roll
sbb
fwait
scas
int
int
push
cwtl
and
jae
ds
mov
or
mov
xchg
or
xchg
inc
xor
mov
jecxz
jmp
pop
xor
cmp
fdivs
cld
dec
mov
push
dec
mov
push
call
mov
mov
test
insb
ss
in
in
dec
lods
dec
pusha
inc
shrb
lret
add
push
push
lock
es
aas
stos
fs
pop
sbb
xchg
mov
int3
add
je
push
arpl
orl
adc
pop
push
out
das
aaa
mov
and
mov
pop
push
int3
into
repz
mov
mov
mov
add
daa
bound
fwait
aam
cmpsl
rcrl
xchg
gs
jns
int3
sbb
mov
loope
fisubs
jns
insl
mov
sbb
inc
mov
je
push
das
std
scas
and
aam
pop
lods
sbb
xlat
mov
fst
in
jp
pop
aam
jae
dec
arpl
mov
nopl
xor
xchg
pop
fstpl
cld
mov
inc
push
mov
xchg
imul
and
inc
cmp
jmp
fucomip
icebp
mov
aaa
add
pop
lret
fldcw
scas
dec
push
repz
repnz
gs
mov
enter
ss
shlb
cmp
mov
or
scas
notl
and
inc
adc
cltd
aas
mov
outsl
jnp
imul
pusha
sahf
inc
stc
std
in
sbb
addl
cmpsb
pusha
ss
xlat
sub
cmp
scas
pop
pusha
mov
loop
inc
mov
xor
repz
and
inc
scas
jbe
xor
jl
and
imul
mov
xor
psubb
add
push
or
xchg
cmp
pop
dec
inc
jmp
dec
enter
and
mull
cltd
rol
add
cs
lcall
mov
ret
add
jmp
push
addb
add
and
sahf
pop
mov
and
xlat
xor
mov
repz
aaa
sahf
xlat
rorb
shll
ret
adc
aas
adc
inc
lds
mov
xchg
adc
push
lret
jbe
xchg
lret
xor
scas
xor
adcl
push
shlb
sub
jecxz
dec
jle
sub
mov
adc
dec
popa
dec
jb
or
jae
jns
mov
mov
add
mov
inc
inc
into
adc
inc
test
lds
pop
xor
add
jnp
cmp
sub
es
jnp
stos
fdivp
je
xchg
cmp
dec
mov
orl
lret
jmp
icebp
sbb
push
es
jb
cmp
pop
shl
std
mov
xchg
mov
push
pop
insl
add
out
mov
das
xchg
adc
movsl
xor
loopne
push
cs
adc
js
out
dec
pop
dec
or
lret
mov
repnz
pop
ret
or
inc
add
inc
and
mov
in
loopne
rolb
mov
cmp
cmp
out
pusha
mov
popf
mov
fcmovne
lcall
push
lds
faddl
add
fst
loop
aam
ja
or
scas
jb
std
cmp
mov
stos
inc
negl
or
hlt
or
clc
lcall
cltd
mov
daa
mulb
fisubrs
icebp
ja
mov
jno
adc
fistps
dec
and
mov
dec
and
sub
pop
insb
or
aad
ret
cltd
outsl
insl
and
jne
inc
add
lret
mov
cmc
icebp
push
xchg
inc
into
add
clc
popf
sbb
cli
pop
sahf
mov
cmpsb
loopne
insb
mov
loop
jo
jmp
sbb
negb
and
sub
inc
stos
andb
jmp
das
pusha
inc
adc
ficompl
or
imul
jnp
fcoms
mov
ljmp
xor
nop
hlt
jae
cmp
mov
es
cmp
mov
jbe
fsubrl
mov
sbb
insb
mov
test
push
pop
sub
mov
loop
mov
sarl
jbe
xchg
inc
pop
rcrl
addr16
and
fldl
rorl
lret
inc
imull
xor
lret
faddp
jmp
mov
add
pop
mov
sbb
adc
cmp
fs
adc
or
call
leave
and
mov
cltd
add
mov
jo
insb
movsb
js
jp
mov
mov
inc
out
dec
jno
sbb
and
aaa
dec
fsubrl
lock
stc
imul
xchg
cmp
dec
cmp
cld
dec
stc
test
ret
stos
and
adc
push
ds
loop
in
pop
in
inc
cld
lret
jns
xchg
ret
shrl
insb
xchg
push
loop
pushf
pop
loopne
out
repnz
dec
or
addr16
lret
pop
add
cmp
jge
mov
dec
hlt
jnp
jp
lcall
cmp
outsb
test
xor
lea
xor
sar
dec
bound
into
push
pop
mov
outsb
inc
nop
push
adc
add
testl
aad
inc
loopne
js
dec
dec
pop
shlb
sbb
les
pop
gs
rcr
inc
repz
xchg
and
outsb
inc
or
cltd
icebp
push
sbb
hlt
add
or
jg
call
repz
std
push
jle
sub
jno
lret
fsubr
in
or
mov
and
jnp
xchg
stc
fwait
cmp
stos
setle
loope
repz
pop
fsts
ds
lods
push
push
pop
js
adc
pop
shrb
daa
adc
pop
out
or
mov
pop
test
mov
popf
je
cmp
insb
sub
jae
push
into
mov
cmpsl
loopne
or
cmpl
daa
out
and
sub
enter
test
dec
pop
sti
push
jae
mov
push
sbb
imul
and
insl
data16
cmp
xchg
pop
movsl
dec
mov
cs
das
out
stc
pop
sub
sahf
in
jge
pop
loop
and
pop
dec
xchg
popa
sbb
jge
mov
mov
mov
mov
and
xorl
icebp
mov
test
stc
or
daa
pusha
fcmovu
faddl
lret
stos
mov
push
in
jns
adc
shrb
mov
mov
xchg
loop
cmc
adc
testb
lds
inc
enter
das
les
mov
push
mov
or
cmc
sub
sahf
cwtl
addr16
cmpsb
push
xchg
mov
inc
push
xchg
pop
in
leave
sbb
lds
xor
ds
mov
xchg
cmpsl
add
rol
xor
xchg
adc
popa
scas
pop
lret
lock
loope
bound
not
xchg
jl
rorl
call
insl
sarb
lahf
pop
pushf
subl
push
data16
fisubl
ret
push
int3
js
faddl
pop
movsb
icebp
cmpb
xchg
inc
mov
cmc
mov
lea
pop
divb
icebp
imul
add
push
jb
dec
aad
popa
je
arpl
dec
or
mov
scas
or
push
lea
pushf
push
pop
fdivl
shrl
call
fildl
xchg
pop
mov
and
xor
sbb
jp
cmpsl
xor
mov
or
bound
adc
orl
stc
dec
jmp
sbb
mov
xor
into
and
cs
repz
repz
nopl
inc
popa
mov
aad
sbb
or
mov
dec
imul
xor
addl
sbb
inc
dec
sbb
inc
xor
stos
mov
pushf
push
lea
test
les
rcl
sbb
sub
add
and
lret
dec
int3
xor
sbb
jmp
aaa
insl
xchg
int
dec
or
sbb
adc
testb
pop
inc
add
xchg
jne
inc
add
xlat
rcl
dec
in
ja
mov
popa
sbb
cmp
daa
and
aad
addb
jne
xor
push
and
pop
xchg
jae
fnstsw
push
lret
jmp
inc
or
setg
call
fisubrl
xchg
sub
pop
hlt
cltd
xor
sub
lahf
push
call
rorb
sahf
cmp
sub
test
out
jecxz
inc
idiv
repnz
xchg
or
fimuls
cmp
cmc
or
mov
jns
pop
sub
outsl
lret
mov
jmp
or
jno
movsl
in
adc
repz
jb
fisttps
add
aas
jecxz
das
mov
rorl
test
js
mov
dec
xor
sub
popf
push
push
xchg
icebp
mov
idiv
in
adcb
mov
mov
pop
lret
jo
ss
mov
faddl
mov
and
imul
out
insb
repnz
rcrl
movsb
mov
shlb
stos
fs
in
jmp
mov
std
xlat
clc
cmp
push
out
xchg
push
mov
fs
in
loop
adcb
test
push
mov
sbb
dec
xor
ret
mov
insb
jmp
sbb
stc
mov
sbb
push
insl
mov
shl
fstps
jmp
and
pop
mov
loopne
aas
mov
fisttpll
mov
xchg
adc
jg
and
repz
fnstenv
shrl
rorl
dec
xor
adc
icebp
movsb
pop
fwait
add
test
js
outsb
jo
xor
dec
icebp
xor
pop
xchg
fs
adcl
into
nop
lret
das
rep
mov
ja
inc
jne
xlat
jp
ja
xor
inc
push
and
pop
pop
lahf
cltd
adc
fbstp
enter
fiadds
sub
fnstsw
imul
andl
xchg
subl
arpl
decl
jle
aaa
xchg
fwait
mov
out
lret
mov
mov
adc
in
mov
fwait
arpl
or
xchg
pushf
pushf
xchg
and
xor
insl
leave
jno
pop
adc
stc
ja
lods
ss
mov
cmp
decl
cmp
mul
mov
sbb
jae
out
cmp
out
pusha
jno
out
mov
lret
aaa
fwait
movsb
lea
popf
pop
outsl
jge
push
mov
rcll
jbe
sbb
mov
jg
sarb
movsl
xor
dec
push
xchg
push
scas
aad
push
nop
addb
rol
mov
push
pop
shrl
std
mov
xor
jo
lds
and
iret
lahf
clc
lret
iret
jne
mov
cli
popf
mov
pop
fs
sbb
movsl
pop
repnz
xor
jb
hlt
sbb
push
aam
aas
js
jecxz
cmc
xchg
jl
fdivr
enter
std
adc
inc
xor
mov
pop
inc
xchg
push
je
and
outsb
int
dec
andl
inc
pop
and
xlat
mov
ret
push
add
adc
jl
xchg
push
add
xchg
cli
imul
ds
sub
outsl
jge
sub
out
dec
adcl
cmc
xlat
rol
stos
mov
fisubl
sbb
xchg
rcrb
inc
outsl
stos
scas
adc
scas
jle
mov
add
mov
das
leave
or
rclb
pop
lods
sti
addr16
fcom
hlt
aaa
lods
push
adcb
iret
and
mov
shr
pop
xchg
pusha
gs
inc
inc
push
sbb
cmp
adc
dec
loopne
or
cmp
mov
mov
inc
aad
jp
std
out
push
or
in
xchg
xor
mov
jns
cwtl
fistpll
out
sbb
lret
fsub
dec
in
sbbl
jno
pop
ss
lea
pop
jg
lret
jl
xor
xchg
adc
lret
pushf
decl
pop
and
out
aaa
aaa
bound
mov
lods
lock
fistpll
js
adc
sbb
mov
xor
cmp
push
mov
pop
jmp
shlb
aad
sub
xor
pop
stc
cmp
mov
cltd
jge
nop
cmc
call
dec
fisttps
lock
test
push
jl
and
cli
std
push
jns
mov
test
jp
scas
ss
mov
dec
pop
jmp
sahf
and
xor
jle
xor
mov
insb
xchg
pop
and
fs
mov
sub
jle
stos
movsb
mov
mov
adc
cmp
jle
in
daa
add
inc
mov
ficomps
and
test
lahf
outsl
xchg
fildl
jmp
push
pop
push
jb
test
int
lods
sbb
stos
lods
insb
out
out
and
pop
sti
jns
repnz
clc
dec
sbb
jb
lea
mov
enter
xor
xchg
neg
dec
shl
aaa
cmp
shll
push
mov
push
shlb
pop
jo
insb
pop
dec
das
or
rcll
cmp
iret
fists
outsb
scas
push
inc
sub
jge
xchg
aad
fsubrl
aad
inc
sbb
cmc
jb
jno
xchg
sarb
loop
jmp
mov
adcl
and
push
stos
lods
sbb
dec
hlt
xor
arpl
in
pop
ret
jl
fsts
jecxz
fdivr
out
and
scas
mov
add
xor
stc
xchg
cli
cld
mov
push
cwtl
jmp
fnstcw
xlat
mov
mov
pop
dec
in
xchg
cmpsb
sbb
fs
sub
scas
call
jp
rcrb
and
call
das
jmp
or
movsl
lock
pusha
xchg
pop
jmp
test
gs
and
xor
pop
clc
sbbl
popa
and
mov
aad
jb
xchg
pusha
test
in
sub
ja
pop
push
inc
inc
and
push
mov
push
out
int
lods
aas
repz
ljmp
add
jbe
adc
jmp
mov
xor
test
mov
inc
lods
repnz
je
stos
in
addl
adc
loop
fists
test
add
pop
or
and
cmpsb
loopne
int3
pop
jnp
fnstenv
pop
dec
mov
and
mov
aaa
mov
jle
sbb
sub
xchg
inc
xlat
mov
mov
lea
jae
or
mov
pop
adc
inc
imul
out
cltd
in
mov
movsl
mov
lods
negl
out
push
inc
jae
aas
arpl
jge
dec
pop
outsl
fcomi
repnz
and
dec
add
js
je
ja
add
adcb
push
or
push
les
xor
in
jae
lock
out
or
push
fists
dec
inc
xchg
xor
cli
xchg
cmpsl
sbb
call
out
out
or
icebp
mov
sete
shl
mov
mov
sbb
lods
xor
adc
rolb
jbe
or
adc
xor
mov
stc
push
int
fwait
mov
repz
xchg
sti
xchg
mov
popf
js
ret
jmp
or
mov
push
fcomi
jno
push
inc
sbb
addr16
aad
mov
sahf
icebp
xor
or
or
xlat
fwait
jmp
int3
jg
xor
jmp
xlat
xor
imul
push
jmp
bound
clc
in
lahf
sbb
aam
add
and
cmp
fcmovb
push
inc
lret
push
mov
filds
xchg
mov
lret
shl
xchg
rcll
push
testl
jmp
cmpsb
xchg
mov
lods
adc
push
or
insl
mov
mov
or
mov
jmp
stos
mov
add
and
pop
into
sub
insb
and
inc
push
loope
insb
or
adc
lods
ret
icebp
insl
aam
cmp
pop
mov
faddl
cmp
sti
rcrl
cli
pop
jle
xchg
pop
inc
mov
jmp
ret
iret
bnd
out
outsl
xchg
aad
test
jno
loop
out
mov
and
push
or
pop
xor
and
inc
push
and
test
xor
jmp
pop
cmp
ljmp
fcomip
mov
fwait
scas
clc
das
lock
sarl
test
push
icebp
mov
jo
sahf
xor
xchg
adc
gs
pop
xchg
in
rcr
or
xor
je
or
push
cwtl
leave
mov
mov
add
push
sbb
jnp
adc
cs
addl
fwait
in
xlat
mov
lods
and
cmpsl
inc
xor
orl
mov
mov
subl
rolb
xchg
pop
inc
iret
and
xor
popa
or
fs
push
mov
mov
pop
mov
nop
call
and
add
dec
cmp
and
jle
and
sti
jmp
jnp
es
pop
mov
inc
xchg
mov
outsl
iret
dec
and
daa
dec
push
cmpsl
mov
arpl
insl
sub
js
addr16
lret
adc
adc
lcall
mov
imul
adc
cmp
sub
bnd
add
pop
arpl
push
das
aam
mov
aam
aas
cwtl
sbb
xor
sti
ret
add
stc
add
in
hlt
cmpsl
inc
jbe
daa
outsb
cmp
call
lahf
adc
ret
repnz
mov
cmpsl
dec
in
jge
adc
push
inc
stos
fdiv
jbe
mov
mov
push
lcall
dec
imul
adc
repnz
inc
add
xchg
or
aam
xlat
or
mov
fcomps
pop
repz
inc
inc
pop
inc
jae
adc
dec
pop
imul
outsl
xor
mov
jmp
push
aas
les
rcll
xchg
cmp
push
xlat
jmp
cmp
sbb
aad
push
push
mov
mov
fdivrl
les
jne
nop
std
jnp
mov
inc
pop
jbe
insb
lods
sub
mov
movsb
xchg
fwait
xor
dec
test
inc
jmp
std
repz
push
rcrl
jns
pushf
xchg
das
mov
sbb
rorb
jbe
xor
int
inc
jmp
xor
imul
inc
mov
imul
jne
lods
lret
pop
testb
in
mov
cmpsb
stc
mov
mov
pop
sub
xchg
insb
xor
in
aaa
ret
cmp
pop
xchg
leave
shll
mov
mov
xchg
aas
rorb
adc
mov
mov
inc
addr16
mov
inc
inc
cmp
dec
aad
popf
int3
cli
pop
pushf
add
shll
mov
mov
mov
adc
out
mul
mul
or
cmp
add
cltd
insb
dec
pop
mov
popa
aaa
inc
repz
xchg
xchg
xchg
cmp
cmp
add
mov
jo
mov
pushf
fiaddl
movsl
or
mov
test
movsb
sub
pusha
mov
mov
jbe
jge
enter
add
xchg
jmp
pop
push
test
push
daa
test
and
leave
sub
mov
inc
push
and
movsl
orb
sbb
lahf
pop
mov
js
mov
out
mov
test
adc
and
mov
pushf
dec
jno
add
mov
inc
ret
sbb
movsl
adc
inc
in
inc
push
lcall
push
shll
adc
insb
int3
pop
mov
sub
mov
inc
xchg
sti
jne
std
xchg
push
bound
arpl
aam
pop
aad
adc
test
or
inc
jge
inc
mov
repnz
jle
mov
cltd
sbb
jmp
fildll
mov
aaa
inc
into
mov
inc
pinsrw
lret
xor
push
out
mov
jno
inc
cmp
push
repnz
cld
shll
push
iret
mov
mov
les
jecxz
cmp
push
pop
push
add
scas
scas
cltd
jg
cmp
sub
adc
push
pop
push
jnp
movsl
repnz
stos
cld
ds
fstl
add
scas
jmp
adc
pop
test
clc
push
xor
mov
xchg
es
in
test
jmp
mov
dec
jge
inc
fsts
divb
adc
mov
ds
aaa
push
gs
ja
mov
cmc
mov
stos
and
mov
cmp
mov
shll
clc
dec
cmp
pop
inc
pop
and
out
rcl
data16
or
mov
shll
lods
sub
dec
pop
lods
popf
sbb
ret
fwait
dec
jb
jno
shrb
popf
sub
fcomps
es
sub
test
iret
lea
leave
in
dec
jg
pop
loope
sub
inc
dec
lock
repnz
xchg
daa
sbb
cmpsb
test
mov
aad
push
xor
fcoml
fidivs
movsl
mov
in
pop
dec
jmp
test
mov
pcmpeqw
mov
dec
fcoms
jp
jg
push
in
sub
in
and
das
pop
xchg
movsl
mov
pop
push
mov
ja
jl
out
sub
loope
add
mov
xchg
mov
xor
rcrb
cmc
cmp
fimuls
sbb
cmc
mov
mov
push
ret
ret
mov
inc
addr16
movsb
ja
cmp
cmp
paddw
mov
mov
mov
loop
inc
add
jge
outsl
fisubs
mov
jne
clc
and
xchg
mov
push
aas
and
and
icebp
xor
sub
jbe
pop
mov
in
mov
dec
cmp
inc
popf
rcrl
fcoms
xchg
repz
rcrl
mov
mov
fdivl
into
sar
es
adc
roll
pop
loopne
lock
sub
dec
jbe
mov
sti
and
mov
fcmovnu
xchg
cmp
leave
adc
movsl
fs
cmp
push
mov
lret
pushl
adc
mov
xchg
pusha
mov
cmpsb
filds
sti
ss
aam
popa
in
jl
ljmp
cmpsl
aam
mov
cmp
mov
xchg
imul
insl
incl
cmp
push
data16
inc
nop
call
lret
xor
mov
loope
cmp
incl
movsl
and
aas
fwait
xchg
mov
mov
cwtl
add
or
in
es
pop
pop
ret
mov
adc
outsb
mov
jl
repz
cmp
jp
insl
call
sub
orb
in
ret
mov
or
in
mov
lret
xchg
inc
or
repnz
in
add
inc
mov
jbe
out
sarb
sarb
xor
jae
lods
je
jp
dec
xor
imul
lea
sti
dec
in
mov
add
mov
dec
iret
andb
mov
mov
inc
mov
lock
pusha
adc
mov
dec
sahf
push
sbb
lcall
pop
mov
add
loope
into
xchg
test
pop
in
dec
adc
xor
push
inc
jae
cmp
sarb
or
xor
mov
lcall
fiaddl
insl
popf
cmc
sbb
lcall
daa
stos
fcmove
jge
lahf
or
js
nop
xchg
pop
xchg
into
ljmp
push
add
fldcw
dec
lds
xor
or
or
jne
orl
test
mov
xchg
inc
mov
jno
mov
inc
daa
add
cmp
dec
stc
loope
adc
jns
sbb
test
stos
ja
inc
and
mov
into
mov
or
data16
lods
popa
shll
mov
xor
fisubs
stos
pushf
stos
adc
out
stos
push
jae
rorl
and
test
testb
hlt
mov
pop
cmc
icebp
sbb
mov
movsl
ficompl
mov
dec
cli
mov
and
add
arpl
mov
adc
imul
mov
sbb
mov
loop
test
out
cmp
mov
or
out
xor
push
rorb
out
jno
test
dec
pop
push
lods
iret
jl
movsb
jp
test
sbb
jbe
int
idivl
xor
fcomps
mov
push
shrb
fcomip
mov
sti
iret
dec
out
pop
ss
push
iret
or
mov
dec
pop
mulb
or
scas
sti
xlat
shlb
into
int
enter
js
fcmovnb
out
xchg
dec
aam
lods
pop
sub
mov
fsts
ficoml
sbb
cli
cmp
hlt
pusha
mov
jp
jno
sbb
fistl
lods
mov
pop
xor
adc
insb
mov
cmc
or
test
sarb
jl
adc
jle
stos
in
outsl
stc
adc
mov
scas
stc
nop
mov
cld
sbb
pop
pop
jnp
repz
je
and
mov
or
imul
jo
gs
enter
cmp
scas
jnp
mov
mov
and
test
cmp
pushf
adc
jp
dec
dec
dec
jne
ja
jmp
pusha
push
stos
das
movsl
or
loopne
rclb
jnp
lcall
test
pop
stc
push
cmp
andb
mov
aas
icebp
xor
ret
push
inc
xchg
xor
icebp
test
lret
mov
xchg
clc
push
popf
scas
add
loop
inc
lods
inc
adc
mov
jle
popa
cmpb
xor
div
push
int
sub
outsl
enter
les
jo
push
lock
ss
test
cltd
in
mov
repnz
xchg
mov
jp
adc
cmpsl
sbb
cwtl
test
inc
lret
xor
mov
mov
nop
into
jae
lock
enter
in
mov
jb
xlat
mov
dec
fsubl
adc
data16
or
mov
sub
icebp
xchg
dec
adc
push
sub
lods
pop
push
pop
loop
stc
decb
xor
ljmp
cli
inc
xor
lahf
or
dec
orb
stos
aad
subl
dec
imul
imul
enter
dec
xchg
push
mov
jb
loope
mov
mov
push
and
mov
adc
mov
jo
shll
sbb
or
arpl
aad
sbb
cmp
and
enter
pop
outsl
jb
push
nop
push
jg
stc
and
stos
push
add
leave
lahf
ss
aaa
call
cmp
sti
lcall
mov
mov
imul
std
dec
js
sbb
lret
jp
rcl
inc
mov
push
repnz
mov
xlat
adc
sub
rorb
and
shrl
lock
js,pn
jmp
mov
mov
movsb
repz
outsl
lds
jae
stc
mov
push
insb
hlt
mov
rcrl
subb
pop
xchg
insb
pop
aas
in
adc
stos
xchg
shlb
pushl
mov
ss
push
imul
mov
adc
fldenv
cmp
lock
jmp
movsl
cmp
inc
cmc
sub
pop
dec
sbb
mov
stos
lcall
negb
mov
bound
out
dec
inc
rolb
hlt
fadd
in
pop
stos
adc
gs
xor
jo
pop
push
pop
lret
mov
cltd
roll
cmp
jnp
cmpsb
out
push
push
je
movb
add
andb
sbb
rcl
in
and
iret
mov
add
mov
mov
cmp
add
call
das
push
lret
fldl
aaa
mov
fs
cmpl
mov
push
movsb
int3
inc
dec
daa
xchg
pop
ljmp
pop
lcall
jecxz
repnz
adc
ds
cmp
sub
mov
dec
sti
xchg
dec
pop
stos
push
dec
test
lret
inc
pushf
adc
mov
cli
cmc
movsl
xchg
mov
stos
insl
sbb
mov
mov
imul
cld
add
xor
fnsave
jg
mov
hlt
sbb
xor
dec
lret
popf
icebp
and
jo
sbb
cld
jns
cli
push
or
roll
sbb
fldt
lods
rclb
cmp
dec
js
inc
cmp
jnp
call
aaa
rclb
lods
les
mov
jnp
pop
xor
movl
loop
sub
inc
lods
xlat
xlat
adc
xchg
mov
cs
xchg
in
testb
test
adc
push
je
sbb
sbb
inc
and
jl
test
cmpsb
imul
or
cs
adc
inc
or
pop
js
sbb
imul
je
outsb
test
adc
int
scas
inc
ss
cs
aaa
pop
inc
lcall
js
add
out
pusha
loop
xchg
dec
adc
push
sbb
and
scas
int
ja
xchg
mov
stc
or
dec
shll
shl
in
in
dec
or
and
push
gs
sub
mov
and
addb
rcll
and
lahf
inc
sbb
dec
sbbb
sti
aam
push
pusha
cmp
in
imul
ret
jo
jecxz
mov
xchg
out
int
insb
jmp
les
insb
or
stos
or
xchg
popf
loopne
mov
sbb
cmp
xchg
mov
mov
jge
in
jae
in
lret
sub
out
adc
mov
js
adc
into
push
xor
repnz
ds
dec
jle
bts
sbb
test
sub
stc
mov
mull
or
lds
dec
sbb
cmp
cmpsb
cwtl
sub
or
sub
add
and
pop
sub
or
sbb
inc
subb
pop
or
dec
jge
mov
arpl
mov
push
sub
sbb
or
fs
sub
jl
mov
rorb
aas
pop
push
rclb
inc
aas
lock
xchg
subl
repz
mov
mov
lret
push
xchg
sbb
ss
mov
mull
bound
jb
pop
out
lods
xor
mov
add
inc
repnz
fwait
call
jle
sub
sub
push
xchg
outsb
xor
lea
mov
cmpsb
jne
jecxz
push
sahf
pop
add
bound
sub
adc
fsubp
out
scas
pop
mov
loopne
inc
out
and
mov
rolb
pop
lods
push
mov
xor
and
fsubrl
dec
or
xchg
jnp,pn
sub
xchg
cmp
cld
or
notl
dec
inc
cmpsb
push
bound
mov
das
inc
in
cmp
sahf
dec
or
ljmp
ret
repnz
daa
sar
or
lods
leave
and
jle
cwtl
dec
shrl
or
test
mov
sub
jle
fiadds
mov
fstpt
jmp
jg
or
inc
mov
push
bnd
dec
stos
sarl
cmc
mov
pop
stos
testb
mov
in
adc
pop
out
xchg
inc
push
movsl
hlt
adc
ret
sbb
cwtl
mov
add
push
in
push
or
fdivrs
fnstcw
inc
cmp
daa
into
lahf
js
shlb
lret
arpl
testl
xchg
outsb
fwait
imul
inc
loope
adc
outsb
sahf
add
jle
xlat
fildl
or
addr16
mov
add
jae
fldcw
xchg
adc
xchg
lods
in
sbb
bound
mov
cmpsl
inc
daa
dec
or
shrb
pop
js
jne
mov
fs
push
out
adc
shr
fstpt
inc
lret
movsb
mov
fdivs
inc
mov
cmpsl
fwait
scas
push
xchg
cmpsb
dec
jp
mov
inc
jns
sub
and
lds
jp
iret
mov
int3
mov
pop
xchg
fistps
rolb
cld
js
loop
stos
stos
dec
cmp
ss
sub
xchg
sub
xor
orl
aad
add
inc
mov
mov
cli
dec
dec
and
and
inc
out
test
filds
push
outsl
aas
push
sub
filds
int
outsl
cmc
out
push
scas
and
cmpsb
dec
daa
push
inc
out
sbb
add
mov
sub
add
add
jmp
cmc
lret
sub
push
push
sbb
cmpsl
std
pop
push
push
sbb
inc
cmp
daa
and
mov
and
mov
push
xchg
movsb
sub
popf
xor
pushw
mov
std
inc
xchg
pop
fmuls
aad
addr16
mov
pop
pop
ret
daa
or
xchg
mov
jns
mov
mov
adc
pop
push
pop
cmpsb
lea
pushl
rol
or
je
ret
and
in
repz
sahf
in
adcl
ret
add
scas
test
lahf
loope
fs
xor
sbb
cmp
jp
xchg
jne
xchg
adc
fld
xor
or
lea
cmp
aaa
test
pop
add
popf
arpl
mov
in
sbb
push
aas
push
sub
lcall
js
lret
add
mov
xor
jecxz
sbb
pop
mov
outsb
sub
insl
test
hlt
insb
pop
paddw
or
adc
fstpl
cmc
test
cwtl
pop
cmp
lds
jle
popf
sub
clc
adc
lds
cmp
dec
sbb
push
dec
cs
enter
daa
xor
add
sbb
iret
inc
loope
arpl
mov
fdivs
pop
ljmp
stos
mov
icebp
pop
je
inc
cmp
inc
xor
mov
xor
dec
xchg
sbb
xor
dec
lds
pop
or
inc
pop
cmp
inc
call
adcl
lret
pop
stc
loopne
call
jne
push
dec
cmpsl
fcompl
add
in
jb
jo
xor
dec
mov
ret
aas
subb
inc
cmp
xor
ret
iret
push
fsts
add
or
pop
test
imul
add
adc
sub
imul
mov
mov
cmpsl
add
inc
jmp
push
mov
jno
pushf
pop
int3
jl
movsl
int3
pop
lahf
jbe
xor
cs
jnp
inc
or
mov
orb
inc
pop
mov
pushf
mov
xor
sbb
aas
icebp
sbb
lods
enter
arpl
ja
dec
cld
add
xor
cmc
mov
enter
mov
pop
mov
inc
repnz
sub
xor
clc
bound
xchg
cmp
jp
push
dec
mov
in
ja
jecxz
loop
cmp
out
test
and
cmp
aaa
cs
or
cmp
push
inc
ja
xchg
or
adc
xchg
loope
int
call
mov
stc
cmpsb
and
cmp
inc
inc
sub
cmp
in
loop
adc
inc
lea
dec
adc
movsl
pop
nop
cwtl
sarl
xlat
lds
jg
mov
add
dec
sbb
mov
imul
call
xor
imul
mov
repnz
repz
es
adc
mov
cmp
mov
and
cld
rolb
je
orb
repnz
scas
push
mov
sub
mov
cld
insl
fdivl
sbbl
push
cli
aad
xchg
xor
sbb
cli
pop
xchg
inc
sub
jbe
gs
jbe
xchg
insb
add
out
dec
icebp
xchg
sub
sbb
sbb
mov
and
jb
xlat
jae
dec
stos
mov
inc
or
adc
in
loopne
aad
lret
or
mov
cmp
repnz
mov
iret
push
arpl
mov
sub
and
incb
xor
add
jno
xchg
mov
cld
fsubrs
jp
jmp
sahf
mulb
adc
into
dec
push
clc
push
adc
fistps
subl
mov
mov
push
jb
jp
xchg
sub
inc
inc
xchg
cmp
jo
add
mov
sub
fsubr
out
xchg
adc
or
and
or
dec
fstpt
fsubrl
jae
push
mov
int3
ret
add
repnz
jmp
xlat
adc
xor
lods
add
pop
rcll
in
or
adc
sbb
ljmp
imul
aas
xor
lock
test
lcall
lock
push
push
les
xchg
cmp
sub
stos
inc
adc
subl
sub
adc
xchg
mov
in
dec
sub
orl
aad
jg
inc
les
clc
leave
int3
cmpsl
jecxz
ljmp
inc
loope
fwait
outsb
inc
cltd
sub
cwtl
arpl
cli
shld
clc
cmp
push
mov
fsts
inc
daa
hlt
cmp
xor
push
xchg
push
clc
or
xor
xorl
adc
cmp
roll
hlt
daa
lret
test
inc
adc
popa
aam
and
add
daa
xor
test
add
or
test
out
addr16
push
pop
xor
cmp
insb
cwtl
xchg
lret
mov
stc
xchg
mov
iret
pop
cmp
test
lods
loopne
inc
stos
cli
cld
push
xor
jge
or
mov
push
xor
push
out
je
lods
out
cmc
inc
sub
mov
cs
arpl
jle
test
lret
jns
leave
push
repnz
daa
pop
gs
ret
pop
inc
negl
jle
loop
icebp
xor
lahf
push
cmpsl
sub
cmpl
int
push
ljmp
stos
leave
ds
std
mov
lea
dec
cs
cmp
ret
push
push
pop
or
gs
pop
mov
lahf
aam
insb
mov
cld
inc
out
in
lds
mov
ret
pop
in
fwait
pop
inc
add
data16
dec
jp
out
push
cmp
adc
lea
pushf
decb
add
mov
pop
out
mov
cmp
idivl
arpl
stos
stc
sbb
mov
iret
rorl
and
movsw
iret
push
popa
jmp
and
movsb
pop
enter
sub
arpl
push
addr16
lret
sbb
push
inc
adc
test
dec
inc
xor
sti
sub
icebp
in
negb
icebp
ds
imul
shl
jl
leave
in
hlt
ret
lret
ret
dec
and
das
xchg
mov
aaa
push
out
dec
pop
push
jae
movb
dec
jns
and
popl
call
mov
sbb
aad
cld
push
cmp
pushf
push
ljmp
jnp
pop
bound
jmp
shrd
dec
sub
or
push
in
shlb
jnp
mov
or
push
iret
leave
sbbl
push
add
addr16
mov
adc
sbb
cmp
mov
add
es
pop
daa
into
jmp
pushf
ljmp
lret
or
loop
rorl
cmpl
outsb
lds
mov
and
add
inc
push
outsb
test
adc
dec
pop
pop
dec
and
sub
enter
aad
or
cltd
adcl
cmp
mov
pusha
out
cmp
xchg
cli
dec
xchg
ja
cli
test
aam
cmp
sub
aaa
stos
jns
js
jb
sub
and
popa
test
push
dec
bound
pushl
stos
in
pop
cmp
out
jae
jns
xor
insl
shll
loopne
clc
std
or
pop
dec
dec
iret
jg
ret
stc
add
cltd
outsb
adc
mov
fdivp
jp
cmpsl
popf
jno
dec
sti
adc
stos
mov
hlt
jp
mov
lahf
inc
dec
adc
push
or
jbe
mov
xchg
loopne
sbb
push
out
jg
in
and
adc
mov
xor
jbe
cmp
pop
pop
mov
xor
xchg
lret
stos
cmovbe
xchg
andb
lock
pop
repz
fstps
xchg
cwtl
or
push
jno
pop
xchg
mov
or
adc
push
es
xchg
sub
xorb
jbe
push
jbe
push
out
pop
lods
sarl
push
jne
cwtl
out
out
mov
rcll
ret
adc
faddp
imul
nop
ljmp
sub
pop
cmp
fldenv
jbe
sbb
sbb
test
divl
cmpsb
sub
push
push
lea
jnp
js
or
cmp
xor
mov
mov
fldl
lret
sbbb
in
push
cmp
mov
sbb
fidivs
in
mov
lods
push
adc
mov
xor
sub
fnstcw
dec
stos
inc
scas
rcll
jne
repz
mov
icebp
or
inc
add
fs
cmc
out
insb
add
sbbl
push
cltd
aas
pop
es
mov
mov
out
push
cmp
sbb
sub
jne
pop
or
sub
cmpsl
test
cli
fbstp
push
cmp
push
ds
jns
lods
lds
mov
dec
in
mov
xor
sbb
xchg
rol
push
les
mov
or
jo
dec
inc
sub
xchg
or
popf
out
cwtl
xor
inc
cmp
cmpsl
and
nop
mov
dec
hlt
das
push
rol
outsl
clc
lret
mov
ror
out
jnp
mov
fisttpll
shrl
insl
jecxz
fisubl
aaa
dec
inc
inc
jg
out
in
repnz
mov
lods
sbb
or
hlt
jecxz
movsb
ret
and
xor
insb
les
jecxz
rep
je
xchg
cs
xchg
and
cmc
mov
jo
adc
mov
repnz
mov
shll
push
mov
mov
inc
roll
ret
insl
push
addb
xchg
loop
or
loope
sub
xorl
mov
or
mov
cmp
dec
in
mov
repz
push
jo
sti
scas
sbb
int3
mov
pop
and
push
xor
clc
mov
push
pushf
push
xchg
and
ds
rcrb
push
jg
pop
jg
cmp
push
fs
jl
leave
mov
cmp
test
jp
in
cmpb
adc
mov
jno
mov
cmp
mov
xchg
loop
popf
add
mov
loop
or
cmp
gs
jp
pop
lea
xchg
imul
and
stos
hlt
xchg
ficoml
mov
gs
mov
jecxz
pusha
stc
repnz
cmp
arpl
inc
lret
addr16
mov
popf
arpl
mov
das
mov
outsl
jge
xlat
or
mov
hlt
adc
fwait
std
div
call
mov
pop
addr16
xchg
mov
test
movsl
call
jmp
or
and
cmp
cmp
cmpb
mov
enter
sbb
cltd
scas
mov
hlt
push
cltd
sbb
inc
aas
and
out
pushf
inc
jecxz
cwtl
in
clc
mov
push
test
or
add
xor
loopne
stos
sub
lock
into
sbb
or
shlb
stos
ljmp
dec
outsl
xchg
add
std
sub
rorb
lods
mov
shr
and
daa
js
pop
cmp
lcall
xchg
inc
push
and
inc
push
push
sbb
roll
sti
sub
xor
jl
jmp
and
out
inc
adc
and
cmp
and
stos
jl
stos
cmp
lds
inc
in
pxor
dec
cwtl
cmpsl
popf
cmp
int
push
cli
mov
adc
imul
jp
fisubs
push
adc
insb
push
xchg
adcb
jnp
inc
cmp
ret
pop
mov
cmp
enter
xchg
outsb
iret
insl
mov
dec
das
mov
aas
bound
xchg
js
lret
inc
push
jl
gs
loopne
cmp
add
nop
cmp
dec
mov
pushf
add
push
arpl
daa
frstor
das
push
xor
loopne
movsb
xchg
cmpsb
add
push
ds
out
insl
push
scas
mov
add
pop
mov
xorl
pushf
int3
mov
insb
xchg
dec
cmp
fsub
sub
jno
lock
fdiv
push
repnz
mov
xchg
call
jns
mov
test
and
popa
pop
xor
mov
mov
ss
push
pop
imul
adc
scas
push
add
sbb
dec
mov
std
push
mov
fildl
pop
call
fstl
fs
cmpsl
and
push
or
lret
inc
jae
fmull
outsl
lret
out
pop
scas
cmpsl
pop
mov
testl
mov
mull
sub
call
int3
gs
scas
rclb
mov
jne
sub
xlat
sub
sbb
cmpsb
jge
insb
and
mov
outsl
push
jg
sahf
mov
clc
push
xchg
insl
arpl
mov
jl
arpl
jb
xor
iret
pop
inc
lods
ret
add
mov
iret
push
rcrb
pushf
push
pop
xchg
lret
shlb
pop
insb
sbb
lods
sub
movsl
shll
xchg
in
dec
push
cld
mov
jae
cmc
jae
push
jae
or
test
fwait
adc
out
sbb
das
loope
mov
stos
ja
jns
dec
xchg
loop
cwtl
or
push
out
in
jmp
mov
fdivs
movb
scas
stos
dec
aad
fisubrs
lahf
xchg
jo
out
or
test
bound
push
sub
push
and
jns
mov
enter
test
jo
mov
cltd
pop
cld
mov
int
adc
loope
in
sbb
icebp
in
adc
xchg
pop
sub
repz
test
in
lods
not
int3
mov
packsswb
or
xor
insb
push
iret
lret
sbb
xor
dec
mov
mov
mov
xor
lcall
jmp
mov
add
jl
fistpll
pusha
sub
stos
clc
pop
pop
sti
and
jo
pop
sub
cld
or
pop
repz
inc
into
inc
dec
sub
pop
mov
in
mov
pop
mov
cltd
fwait
dec
rcrl
inc
fcmove
sbb
xor
out
std
sub
sbb
lahf
icebp
cltd
insl
jae
es
jns
push
pushf
stos
enter
es
ret
repz
icebp
call
xchg
fwait
sbb
xchg
xchg
dec
pushf
mov
mov
push
mov
xor
lock
inc
add
pop
dec
pop
xor
int3
push
rcrb
and
in
stc
mov
aas
ss
cmc
sbb
in
jecxz
push
rcr
addr16
mov
neg
sub
mov
dec
push
jge
push
add
movsl
and
adc
clc
adc
mov
and
sub
xchg
bound
lea
mov
es
or
push
enter
sahf
scas
fstl
xchg
mov
scas
xchg
and
dec
jno
pop
jge
add
fistl
cmp
lcall
xchg
sub
mov
js
stos
jmp
popf
push
pop
popf
jno
mov
adc
sub
mov
xor
sub
jecxz
shrb
in
pop
pop
jns
movsb
mov
mov
rcrb
mov
scas
call
cwtl
push
pop
jmp
cltd
mov
inc
mov
pop
aas
dec
enter
movsl
adc
pusha
dec
add
cld
cmp
in
xchg
cs
sbb
decb
cld
arpl
inc
push
ljmp
int3
pop
adc
mov
xor
push
dec
movsl
xchg
enter
ljmp
mov
hlt
sub
xchg
xchg
bound
jns
arpl
jg
inc
sti
movsb
repz
or
lock
ficoml
jecxz
cmp
jne
lret
mov
xor
mov
mov
packssdw
aam
jne
mov
dec
inc
xchg
fwait
cmp
in
cmpsl
out
sbb
mulb
movsb
jns
outsb
cmpxchg
test
mov
inc
and
xor
lahf
rorb
pop
cmp
jno
and
inc
xchg
cli
push
cld
inc
push
jmp
push
in
xor
leave
pop
sub
xchg
cwtl
mov
sub
stos
jl
dec
sbb
ds
sbb
mov
scas
aaa
enter
das
push
jns
mov
mov
inc
jl
out
repnz
push
ret
call
adcb
ret
test
mov
sti
loopne
mov
shll
sub
fs
ja
xchg
sar
call
mov
sbb
sbb
jmp
mov
pop
sub
xor
xchg
adc
dec
push
mov
outsl
jnp
lods
in
sbb
cmp
int
push
cmc
inc
cmp
sbb
hlt
js
mov
es
xor
lret
sbb
lret
in
leave
sti
aam
xchg
jo
cmp
in
mov
mov
push
hlt
jb
lods
mov
es
sbb
xchg
push
pop
out
jmp
or
xor
push
or
adc
fsub
hlt
andl
ret
push
jle
push
jbe
and
clc
push
fistpl
add
xor
out
or
and
loope
je
es
mov
std
dec
out
xchg
sbb
push
sub
xchg
je
add
inc
sub
std
xchg
jnp
dec
mov
mov
push
fcomp
xor
jecxz
cli
enter
iret
test
sbb
pop
aaa
cwtl
mov
push
andl
xor
cmp
into
enter
rcrb
inc
add
mov
jbe
jecxz
cmp
dec
test
cwtl
xchg
stos
in
mov
jmp
mov
lock
scas
push
shrb
xor
pop
mov
mov
mov
and
push
mov
cmp
test
xchg
int3
and
pop
cmp
or
push
out
dec
jecxz
pop
fwait
xchg
shlb
shr
cmp
or
fcompl
outsb
shrl
testb
outsl
in
lcall
inc
lret
mov
mov
push
or
xchg
pop
leave
lods
push
fiadds
ret
inc
mulb
pusha
iret
push
mov
cmpsb
dec
loopne
rcl
dec
icebp
inc
mov
ret
ficompl
fisubrs
dec
mov
scas
in
ljmp
push
pop
cmpsb
dec
cmp
dec
or
xchg
pop
inc
pop
dec
and
cld
xor
ret
xorb
xchg
xchg
dec
cmp
je
imul
dec
sub
out
pop
cltd
or
cs
idivl
mov
push
shr
push
mov
adc
mov
adc
or
add
mov
inc
inc
sub
jb
adc
adc
xchg
pop
insl
pop
jno
clc
jnp
ret
adc
jb
leave
dec
imull
mov
test
cmp
or
add
push
mov
andb
loope
sbb
push
imulb
mov
mov
sub
adc
push
test
idivb
sbb
xchg
ror
mov
or
add
lock
xchg
sub
xchg
sbb
inc
dec
and
popf
dec
leave
jno
dec
or
adc
jnp
inc
add
loope
std
xor
shlb
xor
or
mov
dec
mov
jle
inc
cmpb
cmp
bound
pop
lea
pop
out
dec
mov
mov
jecxz
push
push
pusha
sti
cmc
mov
ja
repnz
fwait
sti
push
ja
pop
stc
jg
dec
loopne
std
adc
iret
add
repz
xchg
aam
inc
add
loopne
mov
add
arpl
sti
or
xor
adc
push
or
sub
rcrl
jo
jecxz
pop
int
testl
sub
dec
inc
sub
imul
and
sbb
mov
pusha
insl
in
iret
adcb
sub
cli
repnz
or
je
div
push
mov
into
xor
sbb
and
adc
inc
add
mov
xchg
mov
xor
sub
pop
adc
pushf
stos
inc
rclb
fwait
das
add
jecxz
test
pop
cmp
inc
jae
pop
repz
pop
imul
jae
lret
fsubl
dec
sub
rcl
adc
sub
out
adc
pop
movsb
pop
inc
push
add
inc
imul
dec
sub
mov
add
cmc
mov
pushf
mov
sti
test
les
pop
push
aaa
inc
cmpsb
xchg
mov
xchg
inc
lock
dec
int
mov
sbb
and
mov
adc
and
lock
mov
cmp
movsb
pop
pop
mov
mov
jmp
stc
imulb
scas
mov
aam
icebp
xor
fsubrs
jo
dec
add
js
cmp
cmp
xchg
mov
shrl
cmpsb
xor
imul
jb
xchg
daa
mov
mov
jmp
xchg
int
cli
fnstenv
jae
push
xchg
xchg
fstpl
cmp
iret
pop
clc
js
cmc
lods
pop
jg
add
push
mov
sub
data16
iret
mov
or
loopne
xchg
xor
scas
test
jno
adc
ds
loope
or
inc
jb
out
in
sbb
cs
mov
or
xchg
push
std
sarb
push
filds
test
divb
pop
addr16
cmp
push
mov
mov
pop
jo
icebp
icebp
call
leave
in
cmc
mov
jne
xchg
jg
fs
movsb
inc
aad
mov
mov
sub
arpl
jne
movsl
negb
out
insl
je
push
dec
ja
out
sbb
jmp
bound
jecxz
jl
or
pop
loop
stc
jb
jno
mov
add
mov
mov
pop
movsl
clc
loopne
sub
or
ljmp
push
cmpsl
mov
push
xchg
adc
and
jae
add
or
ret
add
jne
pop
or
mov
ljmp
cmpsb
dec
cmp
xor
cmp
outsb
fidivrl
pop
mov
jp
insl
rol
sbb
ret
push
out
stos
mov
sti
addr16
in
clc
push
int3
mov
mov
push
inc
add
xchg
inc
sub
lea
mov
addr16
mov
mov
in
lret
test
mov
sub
push
pop
je
cmp
adc
fdivr
jbe
repz
pop
add
pushl
push
cmp
in
lds
xchg
push
fs
mov
sbb
dec
cmc
mov
sub
sarl
daa
leave
push
jae
cltd
in
adc
jns
xchg
dec
addr16
imul
shlb
sldt
xchg
push
jns
outsb
lds
sub
movsl
or
or
rclb
push
push
fldenv
data16
or
add
pop
imul
xor
sub
loop
push
mov
push
sar
xor
jmp
mov
adc
inc
sub
adc
pop
popa
push
insb
dec
cmpsb
int
and
fwait
arpl
insb
push
mov
pop
imul
insl
dec
add
mov
xor
xchg
xor
push
push
lock
sub
popa
adc
mov
int3
shl
and
xchg
sarl
pop
sbb
orl
xor
shll
pop
pop
inc
mov
jns
icebp
aas
bound
sub
xchg
jmp
or
cmc
loopne
enter
adc
lret
fimull
cmpsb
add
in
movsl
adc
aas
cmpsb
std
or
pop
push
push
adc
cs
mov
int3
xchg
mov
shl
fs
xchg
add
fsubr
fs
xchg
pop
movsb
hlt
sbb
xchg
repnz
jmp
jne
shrl
and
lods
add
out
jne
loope
cmp
inc
movl
pushf
xchg
mov
push
inc
adc
jae
ja
pop
js
pop
pushl
ficoms
mov
pusha
push
sub
mov
and
pushl
or
mov
iret
sti
xchg
or
push
jp
loopne
inc
clc
stc
cmp
aaa
xor
dec
es
flds
and
push
sbb
dec
aas
jl
adc
adc
pop
dec
test
mov
addr16
dec
jae
mov
gs
jl
mov
sbb
cmp
int3
sub
sar
ficoms
xchg
in
in
mov
pop
fstpl
into
pop
cli
divb
mov
and
sbb
mov
sub
cmpsl
mov
scas
call
aam
cli
or
loope
outsl
add
sahf
lret
push
pop
fwait
scas
out
fsubr
jg
push
sub
hlt
push
out
shl
sub
xchg
in
push
aam
pop
loope
mov
inc
lret
pushf
bound
dec
mov
adcl
fistpll
cmc
outsb
fs
add
inc
dec
lods
lods
or
dec
sub
add
in
push
mov
ficomps
mov
movsl
sub
xchg
rorl
fcomi
jp
pop
jns
jle
ss
mov
mov
jecxz
dec
outsl
and
leave
popa
adc
ret
jecxz
cmpsl
mov
push
lods
outsb
hlt
xor
shll
adc
dec
xor
add
pop
mov
or
popl
push
add
fs
jnp
std
ss
mov
hlt
fdivr
shl
not
ds
sbb
loope
sub
mov
das
cli
aam
cmp
mov
mov
pusha
jno
incl
sbb
movsl
enter
int3
iret
jb
lea
mov
push
loop
mov
xlat
call
jl
mov
cmp
mov
xchg
and
int
in
mov
in
lods
and
sub
scas
mov
outsl
inc
push
sub
sub
imul
sbb
xor
lcall
or
and
popa
dec
cli
jecxz
test
push
inc
loope
test
lods
daa
repnz
mov
clc
push
adc
jne
jb
cltd
sub
and
lea
or
mov
jne
les
jbe
outsl
stos
jp
pop
nop
xor
add
loop
in
sbb
ds
mov
imul
repnz
aam
xlat
jns
repnz
and
sub
dec
lahf
xor
fdivl
or
xchg
int3
lcall
das
fwait
jb
push
xor
hlt
cli
dec
out
lods
jb
icebp
lahf
add
fnstcw
xlat
jecxz
call
popf
mov
sub
adc
loop
fnstcw
jno
fstpt
and
loop
jmp
adc
in
in
and
repz
addb
jl
js
mov
cmp
mov
shlb
sbb
pop
test
out
inc
in
fnstcw
jbe
loop
out
adc
das
dec
popa
cmpb
lock
adc
push
mov
xlat
in
iret
add
jo
inc
pop
push
lret
fsub
hlt
mov
in
pop
out
dec
ss
out
test
repnz
iret
jge
movsb
mov
rclb
xor
cld
cmp
je
imul
or
lcall
mov
pop
sbb
rolb
cmpsb
stos
shlb
pop
adc
adc
popa
shlb
push
or
lds
testl
dec
pop
pop
inc
jg
xor
xchg
cmp
scas
lret
mov
fistpl
cs
and
jp
push
repz
stos
ss
add
jbe
inc
sub
and
jmp
scas
xchg
dec
jg
or
iret
cltd
ret
xor
dec
sbb
sub
and
xchg
and
mov
cli
jnp,pn
iret
inc
jnp
cmp
inc
aaa
imul
push
xor
lahf
pop
dec
jmp
cli
je
movsl
jle
jge
mov
and
xchg
aam
ss
in
pop
data16
fwait
mov
bound
cli
sbb
mov
adc
cmpsl
jns
jg
cmpsb
in
push
jae
and
sbb
pushf
inc
shrl
mov
pop
hlt
das
int3
pop
dec
push
pop
adc
les
sbb
ds
mov
pop
neg
sbb
jno
lcall
mov
leave
mov
dec
fstpt
outsl
test
xor
mov
push
jae
fstps
mov
lods
pop
push
mov
xlat
mov
mov
cmpsb
xchg
pop
pop
and
test
inc
push
enter
outsl
mov
jne
popa
xor
or
mov
mov
mov
push
sar
lds
or
hlt
seta
in
xorl
lret
or
ret
aas
xchg
push
mov
dec
aas
movsb
fsubrs
aas
popf
cltd
pop
sti
dec
out
shl
cmp
jne
dec
lret
mov
rcll
adc
mov
inc
dec
jmp
push
dec
add
xchg
mov
aas
clc
inc
in
and
in
dec
adc
in
pminsw
push
in
lods
mov
fwait
mov
inc
je
mov
push
std
or
addr16
add
hlt
xorl
cmp
mov
inc
push
add
mov
es
sti
mov
test
or
fbld
jo
jmp
repz
xor
pop
or
jp
dec
pop
lfs
and
or
adc
mov
pushf
sbb
in
rolb
movsb
add
sbb
sub
rclb
test
or
ss
fwait
jl
and
data16
repnz
adc
push
pop
test
dec
mov
jmp
or
sbb
jnp
inc
fcoms
das
daa
test
int
and
xchg
adc
mov
in
insl
loope
dec
or
repz
cwtl
cmp
data16
mov
ja
outsl
outsl
sub
sub
push
movsb
das
xor
pop
out
insb
std
cmpsl
push
push
mov
pop
aas
repz
mov
sub
push
sbb
or
jne
push
rol
pop
push
pop
fwait
jmp
outsb
imul
pop
adc
sahf
outsb
ret
sti
sbb
cmp
and
mov
lods
sbb
adc
xor
sub
xchg
mov
clc
mov
jge
jg
imul
je
repz
insl
push
sarb
xor
cmp
rorl
or
fimuls
or
iret
adc
mov
mov
test
and
fcomps
stos
sub
popf
fdivrs
inc
mov
sbb
pusha
pop
das
test
sub
adc
rcrl
inc
adc
lret
adcb
hlt
andb
cmp
into
cmpsl
cwtl
cwtl
add
mov
fs
iret
push
int3
mov
fs
jnp
mov
mov
pop
inc
test
inc
and
cs
dec
ret
inc
or
call
push
push
bound
push
je
iret
lahf
adc
cmpsl
xchg
dec
out
push
rorb
rcll
mov
clc
jbe
repnz
mov
scas
push
ds
xchg
sarl
add
int3
inc
mov
xor
xor
rcll
popa
pop
mov
xchg
es
push
adcb
mov
mov
rcll
dec
movsl
cmp
call
shr
push
cmpsb
mov
loopne
adc
cmp
test
aam
push
xor
adc
repnz
pop
xchg
ljmp
push
iret
or
ret
pushf
push
ret
idivl
nop
inc
mov
or
push
scas
jmp
sarl
stos
add
adc
or
rorb
frstor
lea
jge
das
neg
call
out
xchg
fisttpl
in
jecxz
add
pop
adc
pop
or
ds
sub
pop
in
pavgw
mov
aam
mov
je
call
sahf
ja
in
add
ja
push
rcll
mov
xchg
push
fs
xchg
mov
add
xor
enter
lea
add
jl
ret
cmp
push
aad
mov
in
cmp
pop
jl
repnz
xor
dec
jecxz
rol
clc
or
leave
pop
ret
lret
lods
adc
lods
jns
pop
loope
xchg
bswap
icebp
jmp
sub
xor
mov
mov
pop
push
inc
xor
jno
mov
adc
jp
lahf
aam
repnz
pop
dec
add
sahf
insl
sarl
in
mov
mov
mov
mov
inc
pop
or
adc
sub
enter
fucomi
arpl
mov
adcl
mov
mov
das
or
lea
pop
and
inc
shl
xchg
dec
aaa
push
push
mov
shlb
std
push
inc
pop
int
mov
xor
notb
iret
roll
movsl
push
inc
jg
mov
inc
int3
scas
scas
xorb
sahf
fwait
pop
fcomp
pop
insl
add
pop
sub
ljmp
insl
lock
mov
add
pop
call
in
xor
push
inc
sahf
fstps
scas
xchg
mov
es
sahf
dec
fisubrl
xchg
mov
xchg
mov
decb
adc
dec
test
mov
sbb
filds
jo
repnz
mov
loope
sub
mov
movsb
out
stos
aad
or
and
cwtl
xor
test
leave
dec
or
mov
pusha
frstor
std
jnp
and
jo
hlt
jno
push
mov
or
dec
das
std
push
jb
test
test
mov
sub
movsl
movsb
jmp
jp
push
jo
sub
adc
mov
pusha
stos
idivl
es
cmp
popf
jnp
push
pop
bound
push
rcrl
xor
clc
dec
adc
ret
je
cmc
jne
xchg
pop
sub
xchg
enter
xor
decb
repnz
pop
es
pop
sub
lea
cmp
xchg
test
fsubs
push
in
dec
mov
sahf
test
lret
cmp
push
stc
mov
bound
sqrtps
dec
out
ss
jnp
pop
and
fldl
cmpsb
lret
add
cmp
fnstsw
sbb
dec
int3
outsb
pop
xchg
pop
repz
add
jne
jo
cmp
and
jo
lock
inc
jno
sarb
idivl
dec
lahf
jg
sbbl
and
pop
sub
and
pop
jns
jbe
das
push
adc
xlat
mov
adc
loopne
dec
lods
shl
mov
sbb
xchg
cmpsl
mov
je
ret
adc
stos
orl
test
out
bound
inc
imulb
hlt
push
and
lahf
push
sbbl
push
orb
lret
imul
add
insb
ss
jg
loope
dec
test
in
imul
mov
jmp
add
mov
mov
or
push
and
fadd
adc
jecxz
leave
mov
push
inc
xchg
ret
adc
mulb
shlb
dec
jg
push
xchg
mov
out
jne
aas
add
iret
sbb
lcall
xor
add
mov
out
stos
ja
notb
add
sbb
mov
jg
or
push
mov
sbb
int
jle
xchg
cltd
cmp
clc
loop
out
sti
aam
lcall
and
dec
ds
push
adc
jo
sub
push
pop
push
pop
and
icebp
out
fucom
out
aas
shl
adc
in
inc
ljmp
ficompl
and
cmp
pop
lock
mov
or
dec
adc
cmp
negb
push
dec
xor
mov
push
or
mov
insl
testl
and
push
xor
flds
lock
pop
aaa
or
fmuls
popa
into
sub
mov
mov
push
and
aam
xor
clc
scas
or
hlt
adc
aas
jg
out
and
mov
sub
push
subb
movsb
push
or
jp
and
sub
cmc
into
xchg
mov
jge
or
addb
sub
sub
mov
xchg
shlb
in
inc
push
jl
divb
out
ss
and
xlat
sub
and
mov
push
push
dec
gs
jne
scas
inc
xchg
lret
adc
stos
outsl
inc
test
or
div
xchg
sub
hlt
sahf
fidivrl
imul
xchg
push
test
sub
test
xor
cmp
in
in
in
outsl
inc
pop
loopne
loopne
in
pop
mov
repz
jp
jl
mov
scas
mov
mov
mov
and
outsb
pop
pop
lret
call
or
inc
xor
xchg
sahf
push
inc
and
push
insb
sbb
adc
push
xor
inc
pop
adc
int
mov
ficoml
sub
jmp
pusha
dec
test
pop
rcll
pop
mov
cli
sahf
scas
cmc
sub
or
rorb
inc
xchg
fstps
and
test
stos
clc
mov
xor
scas
idivb
adc
mov
loop
adc
sbb
jle
push
pop
lods
pop
sbb
mov
in
jb
xchg
and
ret
lock
xchg
nop
inc
cmpsb
dec
and
test
pop
or
sbb
jae
shll
cmc
lret
inc
mov
mov
out
sbb
addr16
jp
and
pop
cmp
fnstcw
popa
clc
inc
fisttps
add
popa
mov
shrl
loop
std
adcl
fcompl
repnz
out
test
sub
mov
rclb
push
pusha
pop
mov
jno
and
sbb
mov
cmpsl
repz
push
pop
jns
mov
notl
je
cmp
jle
aas
imul
adc
push
in
mov
out
cmp
xor
inc
enter
xor
xchg
mov
xchg
cmp
fstpl
xchg
ljmp
inc
sbb
mov
in
ret
fstl
shlb
mov
push
hlt
or
mov
pop
push
fisubs
dec
test
jno
outsb
cmp
mov
add
push
cmpl
cmp
je
or
test
cmp
repnz
jae
push
lods
loopne
loope
lret
and
mov
fdivs
outsl
popf
mov
mov
cmp
fnstcw
mov
rcrl
pop
sbb
xlat
or
int3
lods
aaa
jg
mov
jnp
popf
jmp
mov
orb
out
mov
sti
jg
xchg
lock
int3
inc
repnz
pop
mov
addr16
mov
fisubs
adc
ss
rclb
pop
sbb
movsb
daa
jae
imul
xor
ja
mov
jo
fs
adc
mov
cmc
sub
xor
addr16
and
or
leave
lods
pusha
je
cmp
subl
and
aam
pusha
jne
jns
xchg
int3
inc
or
mov
mov
fsts
test
inc
nop
movsl
jno
xor
sub
scas
pop
dec
or
imul
roll
dec
mov
int3
sub
pushf
pop
repnz
inc
cwtl
dec
in
cmp
insl
xchg
cmp
sbb
adc
ficoms
pusha
test
ljmp
leave
jnp
xchg
mov
cmp
cmp
mov
sbb
adc
fcomps
xchg
addr16
inc
push
jmp
jb
push
jo
mov
mov
fnstsw
outsl
jg
push
sub
sub
adc
xchg
mov
imul
xor
movsl
aam
inc
xchg
push
pop
xor
and
repnz
insl
in
aad
popw
add
dec
and
jg
aam
dec
cwtl
dec
pusha
call
sub
sub
enter
setle
daa
mov
pop
xchg
lret
ret
sub
push
xchg
inc
dec
outsb
mov
into
xor
fstpl
test
outsb
jecxz
pop
pop
not
mov
jb
xor
inc
std
insl
inc
lcall
sbb
out
push
dec
arpl
inc
addr16
test
pop
hlt
mov
push
std
mov
pop
roll
pushf
and
jmp
inc
xlat
push
mov
xchg
std
fwait
or
test
out
cmp
dec
outsb
xchg
dec
inc
repnz
bound
out
es
lahf
push
cvtdq2ps
mov
pop
dec
xor
cmpsl
push
dec
dec
mov
jg
test
mov
int3
bound
and
sti
or
and
aas
mov
sbb
jle
mov
int
cli
stos
int3
inc
jp
xchg
mov
add
aaa
or
adc
imul
xchg
ffreep
jb
mov
popf
xor
adc
add
clc
int3
cmp
mov
test
rol
cmp
push
push
loop
jecxz
lret
pop
pop
mov
adc
push
dec
pop
daa
lcall
das
mov
dec
out
mov
adc
cltd
repz
insb
push
ljmp
in
in
jp
xlat
lds
insl
mov
test
xchg
adc
jmp
scas
jno
sarb
xlat
xor
mov
push
in
push
xor
xchg
push
cmc
xchg
sbb
push
stc
movsl
inc
push
push
add
aas
pop
pusha
mov
aas
jno
add
in
mov
add
test
cmp
mov
aas
jbe
call
pop
in
cwtl
loope
mov
les
mov
aas
jnp
xchg
xchg
loop
aas
loop
push
add
jg
jge
pushf
sub
or
js
clc
push
pop
pop
cmpsl
psubsb
xchg
xchg
mov
cwtl
xchg
sbb
cltd
cmpb
dec
xorl
fs
fdivs
jg
cmp
cmp
dec
sub
mov
sub
xor
mov
and
stos
xor
add
movsl
mov
sub
addr16
out
aaa
iret
cmpl
gs
hlt
shlb
pushf
add
int3
mov
xchg
sub
sbb
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
cld
ja
cmc
jp
or
or
mov
mov
push
imul
in
stc
or
adc
mov
lds
mov
mov
xchg
test
mov
xchg
in
lock
js
movl
hlt
pop
dec
test
jo
mov
leave
loop
sub
cmpb
orb
fstps
cld
cmp
jno
leave
push
into
es
cmc
add
fistps
adc
push
sub
inc
dec
adc
sbb
mov
lret
in
mov
lcall
cmp
fistpl
cli
and
push
cltd
jmp
mov
sbb
pushf
cli
pop
cltd
mov
xor
cmpsl
jns
cmpsl
sbb
lds
inc
lret
xchg
arpl
in
dec
xchg
sub
sub
sbb
jl
aad
filds
or
dec
jns
mov
mov
je
insl
fidivs
rcll
push
sti
jge
inc
cmpsl
leave
mov
inc
xchg
leave
clc
inc
adc
and
mov
mov
sbb
sub
cmc
mov
inc
lret
add
out
xor
aam
and
paddb
adc
jae
pop
imul
cwtl
pop
inc
mov
pop
addr16
or
and
lfs
inc
pop
pop
jle,pn
stc
rorl
cmpsb
jb
xor
ss
enter
dec
lods
imul
aas
xlat
xchg
push
cmp
nop
in
popa
aas
imul
dec
inc
rorb
mov
scas
rcr
xor
xor
lock
lock
adc
xchg
jp
rcr
fdivr
pusha
ja
sbb
and
sbbl
xchg
aas
add
xor
mov
cwtl
jmp
js
outsb
dec
insl
das
xchg
push
rcrl
and
push
lret
inc
jo
daa
cmp
in
ja
mov
add
add
add
add
inc
xchg
mov
add
js
call
pushf
and
sar
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
mov
mov
mov
repnz
jne
cmpb
jne
mov
shr
rol
xchg
sub
add
stos
jmp
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
mov
