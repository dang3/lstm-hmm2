sbb
add
mov
cmp
aaa
les
dec
unpcklps
in
adc
cmp
add
xchg
cli
and
and
mov
mov
mov
jmp
test
repnz
loopne
pop
pop
pop
adc
sub
add
cmp
lret
cltd
jae
out
stc
pop
outsb
push
push
cmpsl
pop
lret
mov
dec
adc
lcall
fsubrl
adc
add
pop
pusha
shl
sahf
lahf
and
daa
sbb
sbb
stc
ret
jns
jmp
mov
lods
push
sub
int
push
fwait
cmp
mov
arpl
jge
ficoml
sti
mov
pop
aas
enter
ss
stos
push
or
lds
arpl
jne
dec
add
sub
fists
lock
add
ret
nop
xchg
xchg
cmp
xchg
mov
icebp
push
mov
pop
aaa
adc
das
sbb
dec
movsb
jnp
loop
fs
cmp
xor
scas
cmp
lds
xor
imul
fidivs
popa
mov
out
fstl
mov
jne
sbb
dec
push
push
xchg
test
fidivrl
jno
adc
fs
rolb
fisubrl
call
int3
xor
pop
sub
cmp
mov
idivl
sbb
jecxz
dec
das
popf
cmp
and
rcll
add
adc
inc
std
mov
lock
jns
sub
jae
adc
jb
xor
sbbl
mov
lods
mov
cmp
push
push
jb
lret
cwtl
fbld
aas
outsb
lcall
push
sahf
out
push
and
jmp
fcompl
mov
pusha
jno
mov
sub
xor
leave
repnz
inc
cmp
sub
mov
insl
sub
inc
adc
loop,pt
sti
push
rclb
or
push
mov
inc
adc
pop
nop
dec
fidivl
pop
ret
xor
or
repz
insb
push
negl
rcr
jle
sahf
ret
aas
inc
pop
dec
aaa
test
sub
repnz
sti
and
stc
lods
shlb
xchg
clc
add
xor
movsl
pop
xor
iret
cmp
inc
pop
insl
mov
outsl
dec
rcll
js
and
fninit
hlt
and
jl
push
loop
cli
in
jmp
mov
imul
test
imul
cwtl
sahf
sub
cli
mov
repnz
mov
dec
cmp
sub
pop
lods
pop
mov
xchg
loop
loop
mov
mov
xlat
test
sti
mov
xor
pushf
jno
test
add
add
xchg
sub
ss
and
pop
imul
stos
mov
sub
clc
jge
dec
push
add
ljmp
pop
mov
jmp
cld
jae
adc
fsubrs
mov
jns
shlb
pushf
fists
out
xor
adc
and
ljmp
das
pushf
arpl
mov
add
jb
in
out
dec
sub
pmaxub
cld
outsl
jbe
jecxz
gs
adc
fidivs
lcall
push
cmp
xchg
push
lods
mov
push
nop
mov
in
test
mov
cltd
fsub
lods
outsl
xchg
lcall
jnp
jmp
cmp
out
xorl
dec
mov
test
or
xchg
std
jmp
stc
ret
add
out
cmp
lret
mov
pop
nop
dec
jae
test
push
xor
jp
es
lock
imul
mov
mov
out
xor
ss
and
inc
loopne
dec
mov
das
nop
rclb
or
mov
lcall
int3
xor
mov
fwait
outsb
orb
shlb
lret
add
fisubrs
inc
jno
xchg
cmpsb
mov
pusha
xor
nop
lds
rcrb
add
lahf
call
dec
cli
enter
add
out
xor
mov
add
imul
push
pop
stos
jne
insb
aaa
and
imul
push
and
cmpsl
outsb
mov
inc
shr
aaa
push
add
or
xor
inc
aas
mov
ret
inc
dec
cmpsb
push
jo
pop
mov
mov
dec
lock
clc
jae
add
test
aaa
jg
stc
mov
inc
xchg
fxch
lret
dec
lret
into
dec
mulb
out
sub
test
iret
add
cmpsb
or
lock
repnz
int
out
sub
lds
or
stos
sarb
xlat
push
iret
or
inc
pop
push
ret
mov
jl
and
pop
or
xchg
aaa
lods
test
lock
movsl
je
call
mov
es
sbb
dec
cmpsb
mov
dec
fadds
aad
inc
mov
mov
xchg
jp
aas
sbb
shrl
ljmp
mov
mov
psubsw
maskmovq
jg
mov
stos
mov
sbb
cmp
xchg
sub
mov
enter
scas
je
mov
sbb
mov
dec
push
xchg
cwtl
inc
push
icebp
xchg
imul
sbb
pop
sbb
mov
cs
cmp
test
iret
loop
pop
cltd
test
jo
push
jnp
lods
jge
sbbl
iret
insb
mov
or
lea
mov
push
mov
inc
push
mov
inc
arpl
imul
jl
jg
adc
sahf
enter
arpl
xor
add
sbb
ret
pop
xor
in
and
imul
in
popa
loop
ss
pop
hlt
sbb
js
imul
call
cmp
test
das
pop
aas
dec
cmp
cli
jmp
push
jns
xor
ja
clc
repnz
jge
sahf
cmp
rol
arpl
les
leave
push
mov
lods
ret
iret
xor
inc
and
mov
or
in
out
mov
jb
and
cld
add
push
das
loopne
push
roll
dec
sub
xchg
cltd
sub
cmpsw
sahf
sub
jo
nop
cwtl
roll
out
sub
mov
mov
inc
lret
push
xchg
cmp
fwait
mov
xchg
andl
test
fmuls
cmp
mov
jl
insl
mov
push
sub
push
fcoms
mov
pushf
sbb
and
nop
push
mov
inc
xchg
or
mov
xchg
xchg
aam
xor
popa
cltd
enter
and
cltd
les
scas
xlat
pop
xchg
push
jl
dec
mov
ret
jne
sbb
and
mov
imul
inc
push
jb
lea
popa
cli
cmp
sub
cli
pop
cmp
mov
inc
sarl
aam
cmp
and
mov
ljmp
add
out
loope
sbb
and
mov
sti
dec
imul
lds
xor
psrad
pop
sub
mov
sub
mov
das
cmp
andl
arpl
lret
repz
push
cmc
pusha
xor
movsb
sbb
cltd
sub
mov
sbb
cmc
pop
enter
repnz
mov
aam
mov
xchg
xchg
movsl
mov
lcall
adc
lds
shll
jne
incl
and
idivl
repz
in
jns
cmc
int3
dec
pop
pop
in
jl
xor
sbb
cmpsl
arpl
cli
pushf
dec
int
jns
mov
aad
sub
mov
popf
sbb
inc
cli
push
iret
adc
push
cmp
divl
addb
scas
push
call
jns
scas
dec
adc
fistpll
pop
lahf
rclb
mov
movsl
adc
data16
out
or
movl
jge
outsb
cltd
push
jg
aas
xor
pop
lods
call
outsl
adc
gs
adc
xchg
jge
inc
int3
sub
and
cltd
sbb
add
inc
cmc
pop
and
andb
aam
inc
lret
add
movsb
pop
fidivrs
push
xchg
jns
jns
push
ds
jge
rolb
push
cld
cmpsl
cltd
pop
inc
push
mov
push
leave
arpl
and
pusha
test
mov
rorb
into
mov
mov
sbb
pushf
loop
sbb
loop
adc
jnp
xor
inc
mov
dec
ret
jno
cmp
cmp
cmpsl
cmp
call
sbb
and
stos
push
outsb
bound
pop
imul
das
ljmp
pop
in
filds
push
cld
out
sti
push
adc
mov
lock
or
lret
jbe
aam
negb
mov
mov
sub
sub
push
push
add
popa
hlt
adc
mov
jb
dec
cmp
inc
sbb
jp
push
cmp
in
xchg
sbb
and
mov
xlat
popa
bound
aad
sub
jmp
outsl
xor
mov
hlt
subl
aad
fisubl
lahf
pop
add
data16
cmp
cmc
jnp
in
inc
lods
mov
in
pop
mov
popl
fnstenv
or
cmp
sbb
sbb
push
mov
mov
icebp
push
popa
xlat
rcr
popa
dec
loop
dec
iret
mov
in
xchg
mov
mov
or
sub
jb
sti
dec
les
subb
fnstsw
jo
and
add
jl
xor
aaa
pop
out
dec
cmp
cld
cmp
mov
or
lods
lret
xor
xor
fsubrp
add
out
or
push
shrb
mov
cmp
cmpl
cmpsb
insb
daa
loop
in
push
push
push
shlb
ss
dec
fisttpl
in
sub
sbb
insl
ret
les
leave
scas
clc
adc
mov
orb
imul
shll
mov
stos
sbb
pop
mov
adc
sarb
mov
repz
inc
repz
push
in
xchg
and
xor
iret
pop
xor
cmp
xor
lods
push
jo
push
repz
inc
stos
into
leave
inc
push
mov
mov
and
add
push
es
test
idivb
pushf
ficomps
leave
pop
sub
xor
cltd
mov
fst
mov
les
mov
pop
sarl
sub
push
mov
dec
dec
daa
push
mov
stc
mov
cltd
movsl
cli
jge
jae
aam
push
lods
and
mov
or
hlt
cld
stos
movsl
adc
wbinvd
fcmovu
cmpsb
and
mov
dec
and
inc
push
cmp
xchg
mov
pop
outsb
mov
les
xor
push
loope
int3
mov
gs
cld
add
ret
jle
add
mov
adc
outsl
arpl
fwait
cmp
adc
leave
sub
push
push
jbe
dec
cmp
mov
pop
mov
pop
sbb
adc
xor
mov
les
das
jns
aas
movsl
push
imul
inc
xchg
mov
js
daa
pop
imul
fnstcw
repz
dec
pop
aad
int
push
shr
in
rol
cmpsb
inc
lods
cmp
inc
xchg
popf
dec
pop
jbe
gs
mov
scas
mov
std
mov
out
cwtl
pop
mov
insl
test
leave
movsb
xor
xlat
adc
jbe
insb
std
adc
mov
pop
notb
push
pop
sbb
mov
imul
cmp
test
pop
mov
mov
mov
jb
shrl
fildll
add
aaa
out
iret
orb
scas
test
cmp
add
into
add
xchg
mov
mov
cwtl
sub
mov
adc
ja
mov
sbb
arpl
add
sarb
jae
adc
sbb
pushf
jmp
or
iret
cmpsl
mov
int3
or
push
cld
insl
xlat
and
fsubp
filds
pop
stc
loopne
andb
nop
and
cmp
ljmp
xchg
mov
jg
sbb
xor
mov
fcoms
xchg
dec
or
jnp
sbbb
movsl
fwait
enter
push
jle
adc
jmp
pusha
repz
dec
fldcw
lret
cmpsl
arpl
dec
test
scas
lcall
out
push
push
mov
add
mov
icebp
movsl
into
sbb
pop
insl
loopne
adc
subl
lcall
xor
push
pop
mov
mov
loop
and
adc
sub
popa
loopne
mov
pop
mov
test
lds
sub
in
test
jle
pusha
adc
cmc
cmpb
jge
loopne
fdivs
notb
xor
jmpw
or
aas
xchg
cld
cmp
leave
cli
js
lds
ds
or
dec
enter
int
cmp
sub
in
mov
clc
mov
cwtl
fcom
out
sbb
sub
push
es
dec
pop
js
xlat
push
lea
pop
pop
push
mov
fistpl
mov
inc
xchg
vpslld
mov
fdivs
push
mov
pushf
movsl
adc
shll
mov
xor
jno
lcall
repz
rorb
pop
popa
lods
cmp
rorb
call
sbb
add
cltd
dec
xor
test
mov
loope
mov
enter
lahf
dec
dec
xchg
loope
pop
arpl
popa
pop
jle
cmpsl
and
push
pop
mov
jns
pop
lods
push
push
lcall
movsl
call
and
fldl
jmp
xchg
add
sbb
out
es
cs
mov
and
sub
or
lcall
mov
jae
and
mov
cmp
and
push
add
dec
pop
lea
dec
and
in
sbb
fwait
in
lods
loop
xor
into
cmpsb
testb
jge
inc
fistpll
pop
mov
sti
fidivs
addr16
cmp
add
or
jle
sbb
out
adc
js
and
dec
jnp
mov
repnz
add
or
loope
mov
adc
cmc
pusha
push
mov
jecxz
sub
int
cmp
shll
add
aas
jp
mov
jge
inc
and
jge
dec
mov
cmpsb
fistpll
in
sbb
frstor
loope
sub
pop
in
or
and
iret
sarb
push
fwait
cli
movsb
jbe
sbb
pop
jo
fcomi
push
push
andl
fstl
cmp
int
pop
mov
scas
jns
fildll
mov
cmp
insb
std
mov
fdivrl
out
pop
pop
fs
and
popf
outsb
jg
lock
fiadds
subb
cmp
outsl
xchg
pusha
ja
cmc
jae
cmpsl
lock
and
dec
sbb
jb
cld
fisubrs
adc
arpl
loop
mov
in
mov
push
dec
xchg
mov
aad
fisubrl
sub
jg
aam
xchg
xchg
push
neg
pop
lret
add
mov
testb
add
and
add
cmp
out
xlat
lds
mov
mov
jns
gs
inc
pop
xor
or
add
pop
dec
fnstenv
testb
sub
sub
push
roll
test
push
out
icebp
inc
push
aam
ljmp
inc
enter
jmp
mov
xor
ljmp
psrad
je
inc
adc
push
pop
inc
shll
dec
outsb
int
adc
andl
pop
test
or
dec
loopne
fcomi
mov
into
pop
rolb
inc
xchg
inc
jno
psubd
mov
dec
pusha
push
xchg
fstpt
cs
push
xor
mov
lds
nop
outsb
fildll
in
and
sub
scas
or
push
es
shll
nop
pop
ss
xor
mov
ja
out
shll
mov
sahf
pop
loop
cmpsl
arpl
jp
out
push
ficomps
add
xor
sub
imul
data16
stos
inc
insb
mov
outsb
clc
dec
inc
shlb
or
or
lods
call
js
imul
fisttps
xor
or
mov
les
xor
xorl
xor
push
mov
outsb
notb
icebp
add
jmp
jmp
xchg
out
sbb
lret
lret
inc
movsl
sbb
push
stc
outsb
jmp
mov
jb
cmpl
push
hlt
sub
mov
or
mov
fcoml
gs
pop
in
out
sbb
mov
mov
mov
cmp
fxtract
add
mov
mov
sub
xor
cmp
cmpsb
inc
sbb
inc
dec
aas
pop
cmp
pop
imul
adc
hlt
addl
dec
lret
inc
and
xchg
aas
cmp
and
dec
dec
mov
xor
cwtl
es
xchg
loopne
stos
cmp
jge
xchg
and
jnp
or
inc
and
inc
stos
push
orb
sbb
sbb
inc
scas
inc
repnz
jle
stc
lret
sbb
cmp
jg
jle
adc
and
leave
xor
and
dec
sbb
in
pop
popf
mov
negb
mov
std
loopne
pop
cmp
inc
clc
mov
aad
xchg
dec
loope
cmp
cmp
jl
sub
lods
les
jp
push
cmp
or
jne,pt
out
pop
xchg
jno
or
dec
push
jle
lea
sub
stos
fldcw
stos
cltd
lcall
mov
imul
push
fwait
and
dec
sub
lret
xchg
or
mov
dec
pusha
push
jnp
pop
fcmovne
insb
cmp
xchg
je
xor
push
popf
testl
pop
dec
push
or
mov
push
jp
rcll
cmp
and
pop
pop
scas
push
jp
scas
decb
pop
mov
popf
ss
xor
hlt
into
inc
arpl
mov
pop
cltd
mov
xor
jns
call
cmp
jg
pop
lea
out
mov
les
mov
push
jb
sub
imul
jp
test
or
sbb
mov
mov
imul
sti
imul
inc
es
mov
fcoml
push
cmp
dec
pop
jo
add
ret
mov
sub
mov
inc
xor
and
fldenv
mov
xor
jo
loop
xor
cld
je
ficoml
arpl
shl
addr16
in
xchg
or
and
outsl
xchg
jecxz
inc
out
jbe
adc
cli
jb
data16
mov
sbb
cwtl
andb
das
pop
jp
test
sub
enter
int3
lahf
cmp
lea
and
push
in
outsl
rcrb
pop
gs
sub
mov
push
cmp
int3
ja
cli
jne
rcrb
sub
inc
xor
ljmp
mov
idiv
jg
mov
xor
xor
popf
cmpsl
xor
cmpsl
daa
mov
cmpsb
mov
lcall
lds
mov
push
iret
sub
fnsave
sahf
into
xor
xor
test
ret
pop
or
stos
jl
adc
mov
dec
inc
sti
ss
pop
sbb
sbb
pop
push
cs
dec
push
pushf
jecxz
xor
mov
jb
sbb
dec
or
jecxz
fstps
or
add
dec
aad
pop
xchg
xor
xchg
push
cmp
push
jg
push
sbb
fisubrs
xor
jb
and
les
adc
into
aad
mov
jne
and
imul
mov
xor
cmp
js
lods
push
arpl
fucomp
dec
popa
sahf
mov
mov
cs
lcall
fldt
jne
fwait
popa
inc
jp
xchg
pop
inc
bound
ret
xor
push
jo
js
inc
mov
outsl
js
enter
int3
pusha
xchg
fcomi
mov
aad
test
mov
cmp
imul
test
mov
mov
push
test
pushl
push
adc
mulb
dec
inc
test
pop
fst
insb
dec
pop
lds
mov
adc
mov
out
fbstp
xor
lahf
sbb
jp
mov
in
pop
xchg
xor
ds
stos
jne
xor
aaa
xor
outsb
shl
filds
or
mov
dec
jae
add
and
jns
cwtl
fistl
ficoms
in
aam
xor
inc
and
sbbb
jbe
dec
jno
cli
mov
shr
iret
mov
mov
push
nop
popa
inc
call
pop
and
jb
sarl
stos
loop
fstps
sub
es
inc
fmull
sbb
jmp
add
insb
leave
test
cltd
imul
and
dec
sbb
fwait
jbe
es
addr16
add
lock
fiadds
push
js
aas
into
push
jne
arpl
out
xlat
fcmove
sbb
fldcw
push
das
add
jp
popf
sub
inc
testl
inc
aad
push
mov
sbb
mov
dec
mov
jp
clc
cmc
sub
add
jl
out
xchg
pusha
xchg
mov
xor
cmpsb
shll
data16
sub
inc
mov
imul
cli
pop
stc
mov
lret
je
mov
int3
jl
enter
das
mov
fwait
xor
mov
and
xchg
lods
cmp
in
call
mov
inc
hlt
sahf
jb
mov
rorl
mov
adc
pop
test
rorl
insb
sub
ja
lret
dec
lret
push
cmp
leave
mov
test
jmp
das
add
ja
je
sarb
fwait
add
adc
dec
or
test
loope
push
mov
sub
stc
fdivr
incb
add
mov
dec
and
jo
notb
lcall
mov
jecxz
sti
pop
cltd
subb
push
inc
imul
mov
gs
adc
insl
popf
pop
movsb
mov
repnz
push
and
pop
xchg
mov
add
xor
jb
sahf
lahf
sahf
push
leave
cmpsl
rol
mov
mov
rcrb
loop
jae
pop
ljmp
or
lock
mov
sub
mov
push
push
inc
cli
leave
inc
dec
ret
cmpsl
enter
shrb
cmp
outsl
scas
cli
pop
lock
or
push
es
sbb
sbb
mov
inc
adc
rorl
cmp
push
sub
dec
dec
or
sbb
mov
dec
jnp
mov
lock
jo
movsb
xor
stos
outsb
push
insb
cmp
test
mov
rorl
ror
dec
sbb
sti
mov
mov
mov
sbb
int3
or
sub
pushf
dec
mov
in
and
mov
call
adc
cmc
jmp
cmp
pop
add
jno
mov
and
in
loope
sbb
outsl
mov
testb
out
and
mov
xchg
pop
lcall
test
cwtl
inc
imul
cmpsb
add
pop
les
dec
cmp
fisttpl
lcall
xchg
push
add
lods
dec
in
mov
dec
jl
and
mov
ret
mov
mull
pop
ds
mov
xor
pop
jnp
or
xor
jmp
xor
inc
orb
ja
adc
ss
arpl
jl
sbb
sub
shr
sbb
mov
fists
mov
adc
fwait
mov
adc
loope
adc
push
aas
mov
inc
clc
jno
int3
testb
rol
ds
mov
cmc
mov
lods
jmp
mov
test
outsl
lods
insb
pushf
jae
dec
mov
pusha
mov
adc
into
scas
gs
pop
cmp
sub
sti
imul
push
pop
movaps
xchg
arpl
aas
fstl
sbb
ret
movsb
popa
adc
test
sbb
insb
jno
std
mov
jecxz
sbb
xchg
ja
mov
lahf
pop
cld
aaa
add
out
rcl
push
cmp
in
stos
mov
or
outsl
shlb
divl
ret
sub
pop
lds
ficoms
push
add
pop
imul
adc
loop
call
pop
lcall
jns
mov
cld
cmp
pop
or
add
or
test
mov
jge
and
inc
loop
stc
inc
es
hlt
mov
dec
scas
js
mov
loop
das
jno
out
jne
or
jb
outsb
mov
xor
aam
push
andb
ja
jns
mov
xchg
repnz
sub
xchg
mov
add
pop
mov
aas
adc
repnz
bound
clc
push
and
adc
mov
lds
je
lock
pop
stc
fldcw
dec
add
jno
mov
std
add
rorb
xchg
fisttps
cwtl
js
push
into
or
cmp
shlb
stos
out
sub
add
mov
pop
mov
mov
xor
mov
test
inc
int3
cmp
stos
dec
cwtl
or
add
mov
or
ficoms
mov
inc
pop
or
ja
cmp
mov
and
push
push
es
movsl
mov
dec
data16
inc
rclb
pop
jns
lds
scas
fmulp
push
jae
in
sub
test
pop
cli
out
dec
enter
mov
clc
lods
sub
inc
or
lods
add
jne
sbb
cmp
iret
mov
mov
xchg
push
xor
call
xchg
jecxz
add
in
outsb
inc
xor
repz
imul
cltd
sarb
inc
jb
xchg
cwtl
push
movsb
xchg
xor
inc
jae
and
dec
test
fsubl
fnsave
push
subb
popa
mov
xchg
xchg
lods
sti
rcrl
addr16
movsb
adc
imul
push
lret
mov
adc
test
mov
outsb
rclb
fists
sub
popa
push
sub
addr16
rorl
xor
hlt
pop
sbb
jno
shl
push
mov
mov
and
push
nop
mov
mov
inc
push
mov
xchg
mov
xor
adc
jle
xor
sbb
push
sbb
int
shl
sub
mov
mov
cmpsb
loopne
mov
add
xlat
xorl
leave
ja
mov
sbb
mov
ja
idiv
lds
mov
adc
pushf
pop
cmpsb
xchg
jmp
movsb
insb
jo
cmpl
push
add
push
leave
sub
hlt
or
ss
xor
out
push
mov
imul
xchg
subb
out
pop
cmpsb
jl
sbb
lea
scas
ret
mov
add
jbe
push
addr16
mov
leave
lcall
mov
push
sbb
rcll
mov
mov
ss
jo
fs
inc
pop
sub
sbb
adc
xchg
pop
rorb
aad
adc
mov
and
test
jecxz
daa
pop
sahf
sub
add
test
scas
hlt
imul
cmp
into
int
jecxz
mov
mov
sahf
xchg
mov
insb
sub
repnz
pop
jl
pop
rorb
jno
ja
xchg
pop
fs
ss
cmp
push
mov
cmpsl
mov
int
fistl
dec
push
add
rolb
sbb
mov
enter
cmp
jmp
xchg
push
mov
notl
xorl
hlt
mov
dec
or
pop
sbb
add
nop
push
jmp
orl
test
xor
add
xchg
insl
cmp
or
ss
fistpll
push
jg
test
or
xor
add
aaa
lcall
and
mov
xor
pop
stc
xchg
outsb
lcall
dec
sarb
test
dec
jno
dec
stos
dec
fsub
rorb
add
inc
ja
pop
and
in
jne
insl
or
data16
andl
cmpsb
and
xchg
mov
pop
lahf
or
out
mov
clc
xchg
and
in
cmp
cld
mov
xor
popa
push
mov
pop
push
add
mov
xchg
aaa
mov
lret
xchg
cmp
ret
negb
mov
jne
in
out
push
dec
push
outsb
lea
fisttpl
cmpsl
insb
jnp
cmp
xchg
sub
cmp
mov
icebp
xchg
clc
cmpsl
mov
cs
adc
xor
pop
mov
jns
addr16
sub
dec
jae
jo
cs
test
fs
imul
mov
push
dec
out
cs
or
jb
test
pop
jge
scas
dec
add
dec
sti
push
push
sahf
aam
mov
or
push
jae
nop
xor
in
xor
push
dec
cli
jb
shll
outsb
aad
xor
push
cmpsl
rcll
je
jbe
push
push
sub
cs
int
xor
dec
inc
push
insb
sbb
int
stos
cmc
in
aaa
lret
data16
jg
mov
cmc
sub
xchg
inc
cli
push
stos
mov
pusha
push
out
cli
stos
pusha
sbb
into
push
pop
shrl
push
cmp
sbb
xor
dec
mov
mov
jno
push
icebp
pop
and
mov
mov
xchg
or
nop
in
inc
and
idiv
inc
fldt
jno
inc
jmp
clc
insl
push
pop
cltd
imul
sbb
xchg
mov
repz
clc
lea
subb
in
jno
inc
pop
add
ret
and
xlat
jb
push
lret
cmpsb
and
jecxz
dec
cli
mov
dec
orl
mov
xor
pop
push
cmpsl
sarl
popa
hlt
push
orb
add
psrad
into
xchg
add
sub
les
push
mov
dec
sub
notl
and
es
das
fimull
xor
inc
loop
mov
stos
mov
xor
or
pop
imul
add
or
mov
or
mov
lods
xchg
jl
lods
cli
push
orl
push
inc
sbb
imul
inc
das
arpl
rcl
or
push
in
jg
push
int3
roll
sbbl
mov
pop
and
movsl
cli
sbb
xor
es
cmp
outsb
call
dec
aad
lods
mov
cmc
cltd
mov
pop
xchg
mov
movsb
movsb
xor
je
sub
or
insb
hlt
scas
arpl
jns
lock
or
int
adc
lock
js
sbb
and
dec
mov
aas
xchg
aad
jne
mov
jle
imul
or
mov
cmp
jnp
cmp
push
push
push
jge
cli
adc
add
bound
aas
jnp
push
ja
iret
lods
dec
out
or
push
ljmp
fwait
pandn
roll
jno
cmp
lods
xchg
ljmp
push
outsl
or
call
scas
js
xor
push
ss
fs
xchg
mov
mov
imul
sbb
outsl
mov
push
cmp
jns
rcrl
fs
mov
pop
in
bound
ret
addr16
jmp
push
pop
scas
xor
xchg
imul
hlt
dec
out
mov
gs
shll
out
loop
cmpsb
jecxz
inc
dec
cmp
std
xor
stos
push
dec
loopne
test
add
xchg
rcrl
xchg
in
mov
xchg
xor
jno
orl
insl
jb
outsb
xlat
leave
fwait
clc
add
out
pop
movsb
shrl
mov
jmp
push
popf
pop
inc
pop
mov
paddd
jl
sub
pop
jl
mov
push
sbb
push
sarl
push
fstp
jg
push
mov
push
mov
iret
sbb
jns
int3
cli
je
addl
repnz
scas
and
int
or
inc
mov
daa
arpl
lods
and
adc
and
adc
sbb
ss
fmuls
or
lcall
cwtl
push
cmpsb
jl
dec
or
test
out
jbe
rclb
mov
cwtl
cli
mov
sub
bnd
jge
mov
scas
sbb
cmpsb
arpl
jle
xchg
enter
nop
mov
ret
lret
xchg
lret
ret
sub
pop
mov
test
xchg
push
clc
mov
orb
in
push
hlt
lret
aad
dec
out
adc
repz
xchg
cmpsb
out
xrelease
adcl
scas
or
lock
adc
sbb
xor
mov
hlt
in
out
loop
xchg
or
subl
leave
in
movsb
outsb
loopne
cltd
gs
xchg
xchg
pop
xor
mov
mov
adc
adc
add
das
in
jno
cld
aad
adc
add
xor
or
jno
gs
and
push
adc
mov
pop
adc
jnp
push
cmp
in
out
icebp
addr16
iret
and
test
aas
adc
push
dec
xchg
xlat
jl
pop
mov
jo
je
inc
in
pop
jbe
mov
scas
pop
mov
dec
fs
xchg
cmp
cmp
mov
and
popf
push
out
stos
add
sbb
dec
cmp
pop
and
dec
sub
or
int
pop
add
loopne
adc
mov
pop
and
cmp
enter
rep
jno
outsl
imul
rcrb
addr16
movsl
in
je
xchg
call
mov
and
out
adc
mov
mov
inc
sbbb
dec
or
in
add
insb
inc
xor
loop
pop
daa
jne
in
iret
cld
mov
dec
pop
jbe
inc
in
add
mov
cmp
fwait
loope
hlt
cli
mov
test
mov
cwtl
imul
clc
popa
aam
loopne
in
pushw
in
inc
mov
mov
loop
xchg
fwait
sbb
push
push
scas
lret
insb
in
in
xor
mov
inc
leave
outsb
mov
into
int3
scas
cltd
mov
inc
push
notb
scas
sub
add
push
les
imul
test
cmpsl
or
pop
mov
pop
hlt
dec
enter
out
pop
ss
xchg
sbb
jae
mov
xchg
dec
xor
sub
push
mov
bnd
sbb
icebp
or
cmp
xor
cmp
adc
xchg
adc
pop
dec
mov
jne
fnstenv
mov
jle
mov
lock
pop
jle
pop
daa
icebp
dec
xchg
or
add
lahf
and
inc
shl
movsb
jae
ret
inc
add
pop
lock
fldenv
pop
mov
rcll
nop
push
sub
or
push
xchg
in
xchg
movsb
push
int3
jbe
iret
ficomps
jne
ljmp
jne
jo
cmp
insb
pop
test
mov
dec
inc
in
mov
adc
sbbb
lahf
mov
or
cmp
pop
popf
lret
mov
out
mov
stos
dec
js
mov
dec
xchg
ret
gs
rclb
icebp
clc
mov
pop
mov
xor
pop
fstpl
pushf
leave
cld
push
sbb
pop
ljmp
mov
push
adc
push
popf
sbb
sar
pop
adc
out
test
and
test
repz
sub
sbb
mov
stos
shlb
xor
push
sbb
out
and
sbb
pop
outsb
push
jb
loope
aad
add
aam
imul
mov
inc
and
lahf
or
lret
sbb
mov
or
imul
daa
sbb
xchg
and
ficompl
push
sahf
dec
adc
ss
pop
sbb
fisubrl
sub
das
mov
ret
shll
push
fnstcw
push
and
cli
xchg
pop
popa
xor
sub
dec
xlat
xlat
test
jnp
lods
push
jae
add
setnp
scas
push
jg
inc
pusha
inc
and
jno
adc
leave
rcl
xchg
xchg
xchg
lds
mov
or
xchg
jl
sahf
push
inc
adcl
stos
hlt
sub
xor
adc
or
push
out
xor
test
cmp
ds
add
mov
fsub
and
inc
fbstp
fucomip
push
test
cmp
xor
fnstsw
ret
inc
mov
negl
into
mov
out
jle
inc
jnp
xchg
hlt
mov
inc
inc
popa
hlt
rcrl
inc
cmp
jbe
xor
aas
sbb
mov
pop
testb
lods
or
gs
xchg
addl
inc
insb
or
stos
pusha
jno,pn
lods
or
out
jns
jnp
push
add
into
and
xchg
icebp
cmp
adc
dec
jns
mov
icebp
jbe
or
stos
push
mov
jg
out
dec
push
jae
and
repnz
cmc
insb
inc
adc
mov
pop
pop
dec
fcomps
leave
stos
add
pushw
cmpsl
mov
push
inc
lret
icebp
enter
jmp
jnp
jne
pop
xchg
lds
cmp
cmp
loopne
dec
pop
cmp
pop
out
jge
mov
pop
leave
dec
and
mov
mov
ja
out
iret
xchg
push
mov
test
daa
je
xor
cmp
jbe
mov
and
int
mov
js
cmpsl
jns
outsl
les
rclb
es
clc
mov
idiv
cmpl
addr16
in
adc
pop
xor
outsl
dec
mov
push
xor
scas
daa
les
movsb
ret
push
imul
jns
add
push
sub
fcoml
insb
stos
inc
push
or
adc
sub
fcompl
sub
xor
add
lock
lret
lcall
xor
cld
inc
adc
subb
scas
pop
and
sub
fiaddl
scas
mov
dec
popa
mov
sub
lock
dec
push
pushf
jo
sub
dec
xchg
in
test
leave
sub
mov
dec
int3
dec
or
xchg
fdivl
cmp
mov
bound
sub
outsl
stc
push
data16
test
andb
stos
jp
xchg
pop
fstpl
lods
xchg
jecxz
mov
mov
mov
mov
cwtl
in
sahf
sbb
mov
push
and
hlt
mov
or
pop
xor
shl
xchg
cmp
or
jne
cli
add
decl
and
scas
mov
mov
mov
dec
jne
sbb
and
jmp
inc
sarb
push
stos
mov
cmp
fwait
lahf
fistpll
mov
cmp
in
or
hlt
or
insl
lds
cmc
out
clc
nop
and
lock
popf
sbbl
je
pop
outsb
das
inc
mov
xchg
adc
mov
sub
pop
cli
sub
je
xchg
int3
shll
inc
sbb
mov
iret
out
and
ss
sahf
mov
aam
or
sarl
pop
inc
mov
arpl
repz
sbb
shll
push
test
inc
js
push
fists
and
cli
mov
inc
xchg
cmpsb
add
inc
cmp
xor
hlt
push
xor
push
popl
fs
cmp
fucomi
mov
movsl
leave
dec
mov
in
inc
in
add
in
inc
inc
xor
cmp
lret
add
and
andl
and
aam
test
sahf
dec
and
lods
movsl
repz
rorl
dec
movsb
and
out
in
mov
test
xor
and
mov
ja
out
dec
or
mov
xchg
stos
test
mov
in
shrb
or
push
adc
and
jecxz
nop
popa
movsb
and
pop
pop
int3
bound
cld
cmp
adc
subl
xor
cmp
or
scas
add
mov
add
insl
ljmp
push
dec
xchg
pop
sub
out
xchg
imul
lods
je
xlat
mov
xor
pop
test
add
xor
dec
idivl
push
mov
or
sub
pop
rcr
pop
sbb
push
popa
shr
cld
popf
repnz
std
cmpsb
sbb
les
fcmovne
inc
adc
test
nop
js
mov
or
fcoms
adc
add
sub
adc
xor
cs
mov
aas
or
push
mov
adc
cmp
into
mov
mov
pop
aas
leave
add
orl
inc
push
mov
adc
jge
aaa
pop
cmp
mov
hlt
jae
sbb
push
fidivl
cmp
push
mov
fwait
jae
aad
and
inc
sarb
stc
mov
inc
outsb
or
fsubrs
sub
lds
mov
or
mov
test
aam
sbb
xchg
pop
xchg
outsl
jnp
mov
bswap
mov
jmp
in
sub
inc
push
repnz
xor
enter
adc
or
cmp
jb
int
int3
push
ret
cmp
add
aaa
mov
push
mov
jle
fcoml
cmp
xor
sarl
cmpsl
nop
imul
bound
dec
adcb
or
data16
out
add
jbe
loop
inc
sbb
clc
push
xchg
xor
psllw
sub
dec
xchg
mov
cli
fwait
jns
hlt
xchg
sub
lods
pop
or
fldcw
or
test
stos
aad
push
mov
jg
sub
lret
sbb
shrb
in
xor
out
roll
sub
call
ret
jnp
imul
jnp
pop
mov
cmp
sub
aad
dec
movb
xor
add
aad
sti
lret
jns
aad
push
mov
mov
and
pop
sub
or
jle,pt
shlb
sarl
mov
jecxz
pop
fimuls
aam
out
idivb
cmp
mov
addl
adc
idivl
xchg
repnz
movsb
test
add
movsb
in
pop
pop
push
add
aad
aas
xor
movsb
cwtl
insl
bound
xor
push
test
fiaddl
repnz
enter
scas
call
push
jae
mov
jge
xor
out
inc
add
outsb
outsb
mov
adc
out
adc
jns
jle
push
addr16
fisubrl
iret
mov
cmp
fistpll
jb
sub
imul
mov
pop
add
sub
fistl
adc
jecxz
insl
cwtl
jge
xchg
fdivr
sti
pop
jbe
mov
outsb
push
inc
push
inc
hlt
dec
sub
enter
test
js
fs
push
mov
lods
xchg
mov
sub
ret
jmp
fcmovb
mov
or
pop
pop
jno
inc
cmp
add
xchg
push
mov
mov
adcl
jnp
jg
pusha
fwait
aas
jg,pn
xchg
cmpsb
xor
xchg
scas
dec
test
mov
adc
add
xor
daa
adc
push
sub
or
inc
or
data16
dec
inc
mov
adc
shr
mov
popa
mov
jno
xor
push
dec
out
xor
test
ljmp
js
mov
pop
inc
popa
push
aad
lea
icebp
test
lret
lret
leave
add
lcall
out
mov
dec
inc
pop
ljmp
pop
mov
pop
clc
sub
loop
ds
mov
or
xchg
pop
test
in
aas
mov
hlt
push
xchg
lock
ljmp
and
lock
les
mov
loop
sbb
sub
aas
ret
mov
mov
aas
jecxz
jb
pop
cmp
mov
lds
test
pushl
push
call
das
jbe
xchg
lock
cmp
pop
cmp
mov
add
or
pop
popf
sub
mov
icebp
movsb
pop
add
mov
scas
ffree
icebp
pop
enter
test
repnz
sbb
jb
cmp
cmp
dec
fldt
adc
cmpsl
aam
lea
scas
push
shrb
arpl
jmp
dec
mov
repnz
mov
mov
pop
adc
scas
or
xor
xchg
xchg
push
dec
jg
insb
push
mulb
mov
dec
cltd
in
xchg
aaa
scas
in
setle
in
jcxz
fstps
xchg
mov
jp
cmp
dec
jns
mov
or
mov
repnz
popf
jmp
dec
lods
test
mov
fsubrs
dec
vmovlps
ljmp
imul
outsb
xchg
mov
dec
pop
cwtl
push
dec
sbb
sahf
inc
mov
add
sub
insl
jg
das
mov
insl
out
jle
lods
jno
cmp
cmp
in
adc
movsl
pop
gs
xchg
outsb
cli
scas
aad
pop
xor
cltd
leave
add
jae
fildl
mov
xchg
mov
lds
test
push
lds
mov
mov
push
jbe
add
insb
es
mov
cmp
cmpsl
movsl
and
out
cmp
sarb
push
xlat
pop
arpl
pop
arpl
jae
push
xor
sub
inc
cli
pop
lret
mov
cmp
mov
mov
shlb
out
iret
addb
pop
sarl
shll
mov
test
aas
xchg
andb
pusha
icebp
and
inc
jnp
jo
leave
into
adc
fwait
dec
rcll
pusha
pushf
mov
pop
sbb
shll
lods
pop
sbb
push
add
and
jmp
xor
xchg
push
aas
mov
adc
inc
add
xchg
pop
sbb
xchg
inc
cmp
std
repnz
mov
aam
sub
lea
dec
les
cmp
mov
cltd
call
add
imul
cmp
jns
xchg
jb
inc
repnz
enter
adc
rol
fcompl
dec
popf
mov
loope
inc
daa
cmc
push
cmpsb
std
in
jno
mov
pushf
dec
cs
fsubs
push
xchg
inc
mov
inc
popf
enter
jnp
test
mov
sub
icebp
mov
mov
pushf
pop
dec
jecxz
stos
jno
ljmp
test
subb
out
inc
cmc
sub
dec
mov
jno
xchg
icebp
xchg
into
sbb
xor
push
xor
mov
inc
jp
push
mov
or
ja
dec
jmp
out
fisubl
out
les
mov
test
xor
test
scas
jmp
add
pop
mov
cli
xlat
jge
shlb
jmp
cmp
mov
sti
xchg
mov
pop
xchg
es
sub
lock
mov
add
add
idiv
mov
iret
scas
or
push
rolb
dec
in
sub
ret
aaa
std
repnz
insl
add
cmp
insl
mov
mov
push
mov
mov
cwtl
cmpsb
jae
mov
in
mov
cwtl
sbb
jl
jmp
cmc
mov
sar
stc
ret
fstl
sbb
xor
pop
je
dec
inc
push
imul
sub
sub
cmpsl
lret
xchg
stos
add
shlb
push
push
inc
jle
jne
aaa
inc
add
cld
mov
pop
cmp
repz
pop
fs
mov
prefetchw
xor
mov
pop
rclb
into
mov
lahf
cmp
cltd
xchg
inc
stos
in
jp
push
insb
data16
cmp
into
iret
or
iret
and
pop
xorb
ljmp
sbb
mov
loope
add
mov
addl
inc
ret
sbb
push
adc
in
sahf
push
push
js
loope
cmp
push
mov
jmp
stos
mov
les
test
ud1
adc
fcmovne
mov
in
add
xor
xchg
dec
add
cmpsb
mov
ljmp
mov
loop
push
fsubs
xor
ja
xlat
lret
jl
aaa
and
jno
mov
mov
jmp
gs
test
mov
xchg
push
test
mov
inc
cmp
push
out
fcoms
cmp
xor
push
or
leave
add
faddp
cs
scas
pop
fwait
pop
mov
sub
pop
jo
imul
mov
lock
inc
or
cmp
pop
out
mov
push
cmp
pushf
sub
jl
fildl
pusha
movsb
xchg
ja
mov
pop
mov
inc
fldcw
fldl
mov
add
push
pop
mov
cmp
push
pusha
shrb
push
pop
adc
sub
movsl
stos
icebp
sub
mov
add
dec
data16
push
jl
jne
ja
jb
dec
inc
dec
pop
push
clc
popl
imul
dec
fistpll
mov
cmp
or
push
aam
int
mov
call
mov
ss
shlb
rolb
shl
and
sub
push
mov
js
fists
jo
push
dec
mov
jb
adc
stos
add
sub
jo
scas
jae
insb
jbe
and
movl
mov
aam
and
or
xor
jg
stos
nop
int3
add
out
fadds
pop
xor
clc
dec
nopl
shlb
add
pusha
pop
xchg
std
das
mov
mov
mov
dec
mov
insl
popf
or
mov
movsb
iret
mov
cmpl
inc
xor
fdivrs
rep
cmp
popa
cmp
cltd
ret
dec
ja
repz
push
fwait
pop
pop
mov
push
push
cmp
test
divl
mov
imul
push
repnz
pop
xchg
jb
mov
cli
jg
pop
aam
inc
pop
dec
mov
movsl
daa
push
pop
lds
and
icebp
mov
and
mov
ja
mov
call
fldcw
sti
ret
push
fwait
adc
lods
jmp
inc
mov
ret
enter
and
mov
push
int
sbb
mov
lret
rcll
popa
add
and
push
mov
dec
jno
out
lea
dec
subb
icebp
fsubr
popf
dec
sub
or
mov
xchg
fnstenv
cmp
in
xor
or
mov
push
in
movsb
sti
and
inc
gs
lcall
jmp
loop
cmp
pop
xchg
das
dec
cmpsb
pop
fists
repnz
mov
ror
dec
mov
mov
shrb
loopne
loope
leave
pop
dec
and
jnp
imul
inc
inc
add
in
fnstcw
loope
sub
stos
mov
xchg
and
into
ja
xchg
std
roll
cmc
xchg
mov
cmp
push
jne
loopne
sbbl
xor
inc
or
pop
mov
in
xor
dec
pushf
cmp
adc
lret
leave
push
mov
scas
xchg
xchg
bound
lret
out
inc
fnsave
popa
push
mov
inc
sub
xlat
cmp
xor
pop
xchg
pop
nop
dec
sti
int
sbb
sti
inc
cli
lea
dec
mov
and
mov
jne
adc
adc
xor
iret
test
dec
xorl
sbb
xor
lock
pop
pushf
inc
adc
sbb
nop
popa
cld
adc
inc
imul
add
add
pop
pop
push
dec
sub
ja
xor
inc
cmc
dec
cltd
jne
adc
js
add
stos
fnstcw
nop
out
notb
mov
mov
das
and
test
push
lahf
aam
jmp
mov
mov
xor
enter
adc
sbbl
xor
andb
mov
hlt
rorl
outsb
imul
xchg
inc
xor
lcall
dec
cltd
cmc
scas
cmc
outsb
jge
aad
mov
cmp
jnp
sbb
icebp
sbb
and
outsb
dec
ja
lea
out
dec
xchg
sbb
push
and
fdivl
cmpsl
ds
mov
and
cmpsl
js
cmp
adc
mov
loop
ja
insb
mov
sub
je
add
xor
les
sub
or
lods
xchg
cmp
mov
sahf
pop
sub
add
daa
ja
pop
pop
lret
fs
xchg
and
nop
cmpsl
mov
fs
push
lret
or
jmp
push
xchg
cld
adc
mov
dec
bound
movsb
mov
scas
dec
xor
repnz
pop
or
fists
inc
loope
jl
ja
xchg
ljmp
dec
xchg
pop
add
ds
aaa
jecxz
enter
test
xor
les
mov
loopne
xor
and
test
or
lea
lea
jg
mov
or
ss
sbb
xchg
sub
scas
cmp
js
dec
pop
out
ret
jo
bound
ror
clc
mov
pop
mov
pop
jne
fisttps
or
js
testb
sbb
pop
test
in
out
arpl
in
cmp
mov
out
dec
pop
mov
out
ljmp
rclb
repnz
nop
in
and
dec
and
xchg
lret
jmp
jp
dec
adc
stos
fs
mov
inc
inc
pop
or
jne
rcr
push
pop
push
in
sbb
aaa
shrb
cltd
frstor
rcl
push
cmp
dec
mov
insl
hlt
inc
push
sbb
ja
ficoms
mov
adc
pop
fistpll
hlt
inc
jecxz
nop
outsb
mov
push
xor
pop
sub
cld
pop
insb
xor
pop
dec
and
divb
loopne
xor
inc
insb
jl
cltd
movsb
push
subb
add
lods
xor
jbe
adc
push
pop
inc
test
xor
mov
addr16
jo
shrl
popf
rcll
test
push
mov
ss
psrad
dec
or
ret
mov
adc
in
sub
jp
xor
sbb
xorb
sbb
mov
ficoms
lea
cs
adc
das
dec
and
cmp
test
fldl
inc
dec
cmc
test
fwait
cmpsl
mov
out
dec
outsl
movsl
ds
xor
and
cmp
loope,pt
add
sbb
scas
sub
out
push
int
je
dec
push
orb
add
mov
adcl
test
ja
scas
daa
sub
test
mov
mov
test
mov
daa
in
mov
ds
in
jle
test
add
rcrl
jno
rol
pushf
cld
aad
movsb
adc
fsubl
fs
mov
sbb
push
mov
icebp
jbe
je
mov
hlt
xchg
lret
inc
cli
call
sub
mov
ss
imul
fcmove
test
test
ss
or
mov
dec
dec
inc
outsb
pop
lods
ss
lea
icebp
inc
mov
in
push
stos
divl
jle
sbb
adc
daa
pop
xchg
sub
cmp
adc
clc
cwtl
fisubl
ss
mov
lret
or
ror
push
cmp
ss
sub
call
ret
xor
aam
xorb
xchg
or
mov
divb
mov
inc
xchg
push
pop
sub
sub
add
pop
jg
add
cld
cs
call
xchg
pushf
scas
mov
mov
into
popa
fdivr
push
adc
fisttpll
subb
xchg
mov
fidivrl
jecxz
pop
rcr
aad
push
mov
jo
fisubrs
jbe
xchg
adc
mov
imul
and
clc
sahf
sarb
cmpsb
xor
push
popa
imul
xor
sbb
inc
xor
lret
fisubs
ss
nop
mov
push
scas
push
cwtl
scas
bound
push
cmpsb
pop
aad
xchg
adc
xchg
mov
sub
lret
ljmp
lds
int
js
je
xchg
push
imul
fadds
cmpsb
sarl
jnp
sbbl
pushf
dec
sahf
cmp
daa
push
pop
fdivrs
sbb
fnstenv
push
xchg
std
stos
jo
movsb
mov
push
aad
push
popf
ret
aas
add
inc
mov
in
lock
push
push
aas
fwait
mov
cltd
push
mov
sbb
fisttpll
xchg
test
mov
enter
or
sbb
es
stc
lock
popf
sbb
out
mov
mov
dec
daa
mov
lcall
test
clc
xchg
and
adc
xor
sub
dec
add
loopne
adc
and
dec
xchg
mov
lcall
shrb
sti
jbe
mov
leave
imul
sub
fwait
hlt
roll
push
imul
negl
dec
call
adc
es
and
mov
or
push
addl
shll
sub
mov
mov
out
mov
or
hlt
push
mov
scas
or
push
mov
decl
lahf
fisttpl
mov
call
in
dec
mov
ja
xor
add
lahf
inc
sub
sub
mov
mov
mov
pop
loop
scas
xchg
out
jecxz
fidivl
in
push
imul
ret
ret
lahf
inc
xchg
dec
cbtw
cmc
dec
sbb
sahf
cld
les
imul
enter
sahf
push
jmp
mov
inc
push
mov
or
insl
push
mov
mov
outsl
inc
pop
inc
mov
xchg
adc
clc
in
scas
sahf
xchg
lods
cmpsb
dec
in
out
lret
lcall
outsb
push
mov
dec
rcrb
imul
add
or
sub
xor
inc
and
js
dec
call
insl
jg
loop
mov
sbb
aad
lods
cmc
decl
xor
repz
push
stos
bound
cmp
sub
movl
push
dec
shl
jge
jae
rcrl
sbb
jbe
sub
inc
outsl
ret
pusha
mov
dec
inc
mov
jle
add
sub
and
dec
pop
jg
popa
imul
cmp
movsb
dec
loope
add
insl
push
mov
push
cwtl
and
mov
dec
jmp
lcall
movsl
out
mov
push
insb
cmp
jo
fistpl
push
mov
mull
mov
mov
adc
inc
mov
out
mov
pop
rorb
push
stos
or
repz
pop
inc
jnp
xchg
pop
dec
lods
mov
sbb
dec
int
mov
aaa
dec
adc
pop
loop
push
sub
jae
in
insl
mov
ja
fldenv
pop
gs
pop
out
sub
addr16
or
cmp
lds
adc
rep
in
pop
adc
leave
add
into
cmp
or
push
test
dec
pusha
mov
pop
dec
mov
mov
and
cs
cmpsb
sbb
xchg
js
sahf
add
sub
loop
dec
jmp
mov
sub
inc
mov
adc
mov
xor
inc
add
jo
xor
adc
out
fwait
xchg
in
and
jl
jne
mov
push
out
xor
ljmp
into
xor
in
dec
popa
div
scas
cwtl
jbe
cmc
cli
and
adc
inc
icebp
xlat
adc
daa
fnsave
ffree
jns
aam
cli
ret
pop
jno
lcall
jbe
add
sbb
and
lahf
jmp
mov
test
inc
mov
movsb
or
ret
jg
imul
test
in
mov
aaa
in
ror
addr16
out
pop
add
ficoms
and
and
sbbb
les
cmpsb
aaa
sub
sbb
int
xor
outsb
ja
aad
lods
sbb
cmovbe
lods
mov
pop
mov
hlt
or
or
ficoml
mov
or
popa
sbb
sbb
lcall
lret
jne
out
loope
out
loop
xlat
loope
push
imul
rcll
les
test
or
adc
loopne
out
dec
dec
sbb
xor
mov
test
cmp
pop
xchg
sbb
pop
pushf
jne
jae
lock
mov
push
xchg
or
je
cmp
div
mov
inc
adc
sub
lret
ret
pushf
cmpsl
dec
mov
push
push
jl
les
scas
movsl
imul
xor
call
mov
mov
pop
mov
lock
push
push
xor
fildll
movsl
mov
pop
add
out
sbb
sub
stc
and
xor
stos
pop
push
stos
ja
jno
sbb
pop
sbb
xchg
mov
fnstsw
ret
jne
stos
inc
les
ljmp
imul
bswap
adc
lods
cmp
lock
mov
jno
cmp
in
push
rcr
out
xchg
movsb
sbb
push
mov
nop
je
adc
xchg
pop
shr
in
arpl
and
icebp
push
cmp
mov
repnz
loop
aam
fnstsw
push
pop
pop
mov
mov
dec
jl
mov
lock
test
scas
and
xor
adc
sbb
xor
add
sbb
popa
xchg
icebp
mov
test
adc
adc
fisttpll
adc
xchg
js
imul
int3
fcmove
shll
enter
or
orl
lret
jl
cmp
add
stc
xchg
icebp
int
int
mov
fimuls
mov
push
jno
clc
dec
cmpsl
ret
fwait
leave
adc
push
fldcw
enter
xor
jo
or
dec
xor
mov
lahf
out
pop
jecxz
test
pop
cwtl
dec
or
cwtl
out
xchg
sbb
push
sbb
and
out
lahf
adc
aam
imul
add
ljmp
pop
filds
lret
cmpsb
xor
roll
aas
lret
inc
xchg
loope
gs
outsb
rcl
and
jl
xor
outsl
test
lock
pop
out
test
outsb
inc
stc
push
sti
jo
fs
push
inc
adc
pop
ud0
cmc
fidivrl
push
sub
pop
xchg
mov
rol
dec
mov
cmp
inc
or
dec
sbb
xlat
pop
aam
jo
jl
xchg
les
movsb
lahf
jecxz
out
pop
push
loope
fiadds
sarb
mov
push
hlt
jns
jp
xor
test
sar
movsl
push
inc
mov
sub
sub
mov
pop
cmp
push
nop
test
cwtl
mov
scas
adc
add
data16
hlt
ret
jns
into
lods
in
fwait
xchg
insb
sbb
ret
lahf
cmp
mov
rolb
mov
push
or
stos
inc
pop
lods
fisttpll
mulb
aad
pop
fimuls
ljmp
test
test
push
inc
sub
hlt
pusha
sub
xor
flds
int
imul
push
jno,pt
xchg
test
scas
jo
jmp
mov
stos
push
dec
rcll
push
dec
sbb
test
call
mov
xor
sahf
in
int3
sub
sub
daa
fsts
mov
xor
push
out
push
push
jo
fsubs
out
mov
pop
scas
pop
repnz
enter
lahf
push
cltd
jns
jle,pt
divb
sub
fs
jle
xorl
xor
cld
xchg
lahf
int
hlt
fistpll
push
cmpsl
loopne
xchg
cmp
mov
push
popa
daa
int3
loopne
jo
add
les
pop
sahf
cmpsb
sub
in
test
lcall
repz
adc
mov
test
movsb
insb
mov
pop
mov
sbbl
rcl
jne
lret
vsubpd
notl
cmpsl
shll
fcomps
adc
mov
inc
fwait
out
out
imul
cmp
or
xchg
idivl
sub
imul
imul
push
repz
xlat
inc
call
adcb
push
lods
sahf
out
mov
and
sbb
dec
xchg
push
iret
pop
sub
sahf
mov
arpl
loop
dec
ffreep
pop
or
jns
mov
cmp
push
and
ljmp
xor
push
cmp
and
add
mull
add
jmp
mov
dec
lds
repnz
int3
test
pop
cmp
and
sbb
inc
scas
push
fldl
dec
cld
in
xor
movsl
inc
sbb
mov
pcmpeqd
lds
aam
aas
pop
xchg
pop
jg
cmp
ja
stos
lcall
push
hlt
sub
jns
jb
jmp
mov
jp
inc
out
loopne
jl
mov
sahf
sbb
xchg
pop
fs
fsubrs
adc
push
jns
int
adc
push
stos
call
comiss
mov
out
jg
xor
dec
jno
int3
cs
jge
fisubrl
fnstcw
fsubl
cmc
dec
ss
add
fldt
pop
cmc
mov
sbb
and
je
loope
outsb
pop
ss
xor
push
adc
and
and
clc
xor
fidivrs
xor
jecxz
fsubs
aas
pop
pop
scas
cmpsb
jge
xorl
sub
and
dec
add
in
rcrb
cmp
call
jne
cmpsl
or
push
dec
add
ds
add
pop
pop
aam
roll
cmpsl
rcll
and
lcall
sub
mov
enter
je
cli
repz
notl
mov
adc
pushf
inc
hlt
mov
subl
dec
push
enter
xor
cli
movsl
mov
aam
mov
mov
rcl
idivb
in
int
mov
push
push
pushf
loop
rol
into
adc
in
fldl
pusha
xchg
psubw
pop
dec
sub
dec
imul
push
into
mov
jmp
ret
in
push
out
movsb
sub
mov
pop
dec
dec
mov
mov
cmp
xchg
and
andb
xchg
mov
sbb
mov
jp
iret
shll
cli
imul
cmp
lea
jge
das
push
arpl
push
pop
pop
jge
int3
jge
add
jb
jmp
xchg
jns
inc
outsb
dec
inc
adc
sub
mov
sbb
fldt
jno
sub
xchg
cmp
js
jo
jne
add
into
and
fwait
pop
or
mov
sti
lds
stc
test
or
sbb
int3
in
fcmovnbe
inc
pop
jb
lcall
out
idivl
xchg
pushf
push
dec
xchg
sub
dec
add
cmpsl
mov
pop
jne
popa
cmpsb
test
loope
xchg
es
sub
xor
xor
add
pushf
lods
fwait
ja
in
pop
mov
inc
sbb
sbb
iret
cltd
fmuls
pop
push
sbb
or
pusha
jge
in
jae
cltd
or
stos
in
sbb
inc
aaa
pop
rcrl
jge
dec
mov
iret
cmp
mov
ficomps
pop
loope
jb
sbb
xchg
ja
sbb
and
adc
enter
dec
inc
in
stc
dec
add
dec
ret
xor
fwait
or
mov
int3
in
dec
aaa
xor
mov
aas
sub
sbb
sbb
cmpsl
xchg
lcall
mov
mov
add
mov
leave
mov
cmp
push
push
std
aam
dec
push
imull
popf
rorl
leave
fmuls
inc
pop
lret
addr16
and
in
icebp
insb
imul
push
pusha
jb
mov
push
cmp
icebp
inc
and
xchg
xchg
arpl
cmp
adc
lret
das
in
cmp
into
enter
clc
aad
add
dec
daa
or
xchg
and
lods
mov
or
push
sahf
faddp
cmpsl
icebp
mov
mov
pop
mov
dec
arpl
pop
push
mov
fmulp
xchg
pop
mov
inc
jbe
mov
sbb
jo
out
lods
fidivrl
icebp
push
xor
jg
stos
out
add
dec
adc
rclb
ja
sti
or
adc
fidivs
cmp
mov
orl
mov
les
lret
pop
jne
pop
insb
xchg
bound
into
adc
hlt
and
fbstp
std
in
test
adc
dec
or
sub
sbb
outsl
into
xor
jbe
cld
add
inc
test
xchg
lcall
xchg
fidivs
out
mov
mov
jmp
push
push
aam
movsl
sbb
xor
popf
cwtl
adc
sbbl
stos
stc
push
mov
cwtl
pop
mov
mov
call
and
cmp
shll
xchg
les
or
movl
dec
sbb
sti
inc
ret
lods
sbb
pop
ja
pushf
stos
push
push
cmp
nop
stos
and
pop
cs
in
das
test
add
aam
lahf
in
xchg
cmp
xchg
ret
cmp
sbb
outsb
fadds
imul
add
imul
out
sbb
add
and
mov
dec
mov
jns
add
mov
cs
and
mov
mov
lods
dec
lock
ss
sub
mov
adc
mov
subb
cltd
cmp
cmp
ret
jmp
sub
das
add
mov
ljmp
lods
adc
adc
adc
aam
jp
les
push
add
fildll
fbstp
insb
adcb
jecxz
lock
dec
cmpsl
mov
cltd
jno
cmpsl
not
enter
or
out
mov
pop
lods
jno
shll
mov
ljmp
lock
mov
aam
mov
lds
nop
push
sub
adc
cmp
sbb
or
dec
mov
in
adc
mov
loopne
repnz
push
mov
fnstcw
cmp
cld
push
mov
pop
push
adc
adc
js
sahf
pop
push
mov
jg
outsl
sub
bound
jl,pt
add
scas
xor
sub
rsqrtps
fisubs
adc
mov
subw
pop
repz
lcall
mov
scas
xchg
lcall
cmpsb
xchg
lret
nop
repz
sub
or
and
cmp
insl
in
or
outsl
push
sbb
push
mov
push
mov
mov
mov
xchg
sbb
pop
dec
lret
inc
out
and
imull
jae
ljmp
cmpsl
sub
ret
ret
adc
cmp
xchg
pop
cs
xor
sbb
cmp
nop
fnstcw
in
xchg
xchg
and
fs
pushf
das
and
add
in
xchg
xchg
push
sbb
jbe
movsl
mov
cmp
cli
xchg
and
popf
adc
mov
syscall
ss
sub
pusha
addr16
imul
in
add
sub
and
imul
jl
cmp
ljmp
mov
std
lcall
ds
push
pop
fists
add
in
and
rolb
js
sub
jge
pop
scas
and
cltd
call
loop
dec
cwtl
int
push
fs
and
sbb
xor
lret
in
fstpt
mov
push
xor
mov
inc
mov
sub
in
les
fisubs
pop
mov
pusha
cmpsl
das
es
pop
ret
pop
dec
cmc
mov
mov
loopne
sbb
adc
lods
in
in
ss
call
xor
cli
xor
pop
pushf
insb
pop
jg
adc
push
imull
sub
dec
xchg
sbb
cmp
or
shlb
mov
xor
adc
cli
and
addr16
cltd
les
loopne
jae
push
dec
mov
jp
fsub
idivb
hlt
push
ret
or
add
lock
mov
pop
fcompl
cmp
inc
push
imul
aaa
addr16
push
xchg
sbb
ljmp
roll
dec
pop
movsl
jl
and
add
push
enter
fcmovnb
pop
cwtl
imul
adc
xor
adc
loope
daa
jle
push
loope
or
push
repnz
jb
add
cmp
xchg
pop
notl
fisubrs
jne
push
or
out
sub
cmp
fisubs
andb
repz
push
jmp
push
repnz
xchg
das
loope
sub
cmp
icebp
xlat
add
cmp
int
insl
xor
sar
fmul
movsb
leave
sbb
fisubrs
fcomps
pop
lcall
mov
sub
loopne
xchg
sub
push
int3
orb
mov
bound
outsb
andl
or
loope
mov
cmpsl
loop
mov
add
add
int3
xchg
addr16
fisubrs
sub
aam
cwtl
test
xlat
insl
jge
xchg
dec
shrb
shll
sub
mov
mov
outsl
stc
adc
sbb
xor
adc
mov
mov
lock
nop
icebp
cli
sub
clc
pop
xchg
dec
sbb
mov
pusha
js
mov
lods
fimull
inc
add
dec
mov
stos
mov
cs
rcr
push
repz
daa
push
dec
jno
cmpsb
adc
cmpsb
inc
jo
decb
mov
jns
dec
xor
push
jns
push
dec
or
loop
cmp
pop
xor
mov
mov
cmp
cmp
xchg
add
repz
mov
outsb
jb
pop
and
leave
es
fistpl
sub
aaa
sarl
in
testl
mull
sbb
add
cmpb
outsl
cmpsb
mov
jnp
inc
jl
xor
leave
cmp
scas
stos
sbb
mov
insb
sbb
lods
in
and
lcall
inc
scas
iret
pop
fwait
mov
dec
test
sub
in
or
add
ss
pop
or
xchg
std
hlt
popa
mov
test
or
xlat
adc
pop
add
icebp
daa
adc
pop
xchg
js
dec
dec
ljmp
pusha
push
mov
push
stc
mov
mov
in
fiaddl
xor
mov
pop
sbb
fldl
subl
push
jnp
mov
jle
and
into
mov
lahf
pop
sbb
push
pop
sbb
in
cmpsl
inc
add
xor
inc
adcb
outsb
mov
lods
das
repnz
and
adc
stc
iret
sti
push
cmp
xchg
xor
imul
push
xor
jnp
dec
sbb
push
loope
jnp
je
dec
inc
arpl
aad
mov
mov
adc
mov
push
push
cltd
nop
imul
jp
addr16
incl
inc
dec
xor
jb
push
jmp
jmp
cltd
sbb
pop
lods
das
push
adcl
test
outsb
outsb
or
cmc
dec
jb
cmp
inc
xor
popf
test
xchg
mov
xor
pop
jns
push
gs
mov
popf
sbb
gs
scas
ret
rcl
sbb
jb
jo
sbb
or
insl
mov
cmp
xchg
xor
cmpsl
scas
sahf
inc
testl
push
inc
mov
push
mov
add
cld
scas
xchg
sbb
imul
dec
aaa
add
fildl
dec
sti
ljmp
imul
and
cmc
jo
lcall
pop
fimuls
lock
cmp
or
sarl
mov
push
mov
out
xor
les
jmp
inc
jp
jb
jmp
xchg
aam
sub
ror
cmp
ret
movsb
dec
or
push
cwtl
loopne
clc
gs
out
leave
xchg
hlt
sub
sti
mov
sbb
in
addr16
fdivrs
gs
sti
cwtl
sbb
roll
cld
icebp
dec
sub
cmp
xchg
cmp
adc
outsl
push
jp
push
mov
add
and
mov
cmpsb
sahf
adc
insb
ja
and
hlt
hlt
mov
cld
out
sti
xchg
nop
xchg
clc
push
loopne
dec
popf
shr
lock
scas
lret
xchg
dec
int
notl
and
cmp
lods
xor
test
lret
xlat
andb
lods
xchg
psrlw
lods
ret
xchg
xor
jno
xor
xor
loop
scas
rep
rcl
add
or
xor
xchg
js
test
pop
hlt
fistl
shl
fs
sbb
cmp
xor
leave
pop
or
push
mov
pop
sbb
je
add
pop
stos
mov
iret
movsb
and
add
inc
push
xor
jne
mov
push
xchg
cmp
sbb
mov
add
aam
sti
jl
ja
add
pop
imul
jbe,pn
shll
testb
sahf
fnsave
into
in
daa
dec
push
mov
cmp
fbstp
fwait
insl
outsl
mov
xchg
movsb
push
lret
xorl
mov
daa
sbb
xlat
mov
fisubrl
lcall
jp
lea
lods
adc
xchg
decl
xor
adc
dec
push
or
mov
sbb
dec
and
lods
dec
lds
sub
dec
pop
adc
add
rolb
cwtl
mov
fwait
enter
in
stos
push
mov
sub
adc
xlat
loopne
inc
lods
jo
inc
or
hlt
pushf
xor
push
or
lods
shlb
outsl
or
in
push
lahf
xchg
out
inc
sahf
pop
bound
fistpll
pop
outsb
add
mov
flds
pop
nop
or
ret
push
iret
hlt
hlt
clc
xchg
cwtl
inc
pop
or
clc
out
xchg
push
addr16
out
mov
mov
test
pushf
pusha
stos
cmpsb
sbbb
lods
adc
mov
push
je
mov
jae
jne
and
adc
in
dec
loopne
pop
jb
pop
rclb
jmp
dec
mov
adc
repz
dec
adc
loope
inc
rcrl
xchg
iret
xorl
dec
push
mov
add
aad
dec
jl
xchg
mov
repnz
inc
mov
pop
inc
popf
test
pop
inc
ficoms
and
xor
cwtl
mov
cmp
mov
loopne
xor
aad
out
popa
add
jns
scas
lret
mov
imul
cltd
in
pop
loope
cmpsb
fldl
cmp
hlt
xchg
lret
loope
inc
cli
dec
xchg
scas
dec
cmpsb
mov
imul
adc
and
mov
loop
test
inc
or
ljmp
neg
movsb
out
int3
loope
push
and
cmpl
stos
add
fisttps
push
xlat
sarl
push
lret
cltd
cmp
enter
xchg
add
dec
out
sub
dec
inc
hlt
mov
xor
jp
push
fs
jmp
cmp
loopne
test
sti
push
and
lods
mov
scas
adc
fwait
dec
dec
in
dec
leave
jbe
dec
out
pop
adc
out
subl
cmp
ret
cltd
cltd
test
add
data16
mov
xchg
das
inc
mov
lock
lret
xor
add
dec
mov
mov
or
xor
or
jo
mov
pop
ljmp
and
sub
sub
cltd
insb
sub
lea
rcr
lea
xchg
push
inc
jb
stos
sub
aaa
xchg
mov
pop
xchg
xor
mov
or
mov
int
adcb
loop
repz
lcall
mov
aaa
das
inc
arpl
xor
gs
rorb
loop
test
cltd
mov
in
push
pop
mulb
jp
or
repz
loop
shll
std
jmp
fwait
push
mov
push
mov
pop
or
pop
ret
outsl
add
ret
cltd
lahf
movsb
jmp
inc
jg
xor
loopne
inc
mov
or
int
icebp
xchg
add
add
stos
cmpb
pop
insl
pop
and
pop
or
lea
push
pushf
pusha
mov
fildl
cmp
mov
cli
cmp
mov
xor
pop
or
jae
js
xchg
fs
out
cld
mov
jp
mov
pop
out
lret
add
cmp
dec
pop
out
inc
xchg
jg
cmp
repnz
pop
cld
pusha
bound
shll
mov
jmp
add
xlat
subb
cmpsb
xchg
cmpsl
popw
or
xchg
roll
movsb
pop
xor
adc
pop
mov
cld
pop
rcll
jo
or
pop
mov
js
mov
in
jb
out
out
inc
hlt
add
sti
jl
mov
sub
testl
out
push
push
mov
int
stos
fwait
outsb
pop
aas
push
popf
add
ss
jg
icebp
push
sub
lcall
push
pop
jg
add
add
inc
sub
in
pop
test
cmpb
pop
pushf
push
xchg
out
iret
mov
push
into
and
enter
sbb
mov
fsubl
push
lret
xchg
in
cmp
cmp
or
lahf
ret
fiaddl
jge
mov
add
test
mov
lods
adc
sti
scas
push
test
xchg
inc
fwait
aad
mov
aad
icebp
lret
pop
dec
fdiv
bnd
or
jnp
in
int3
push
movsl
push
mov
xchg
fisttpl
xchg
jmp
and
sbb
add
jp
jbe
pusha
call
sbb
mov
mov
setle
in
and
or
ljmp
push
testb
jl
cli
dec
jp
bound
negl
adc
mov
xchg
imul
addl
inc
push
mull
xchg
mov
das
dec
sbb
sahf
das
push
bound
data16
inc
adc
pop
popf
shl
popa
sbb
leave
pop
nop
and
xlat
fwait
cmpsl
fwait
stos
sbb
clts
hlt
aaa
ds
mov
repnz
ret
push
mov
test
mov
xorb
mov
mov
aaa
mov
cmp
and
mov
dec
mov
jl
rcrb
sbb
cwtl
in
leave
add
repz
push
dec
imul
jno
cmp
mov
movsl
fdivrl
jle
jne
inc
cmpl
sub
adc
jb
std
add
mov
std
gs
sbb
data16
ret
pop
aaa
ret
clc
push
nop
push
std
xor
mov
movsl
mov
add
lods
push
into
sub
adc
int3
sti
adc
mov
ret
leave
daa
mov
push
pop
sbb
and
jge
scas
mov
adc
jno
lods
arpl
adc
pop
xor
cli
in
ljmp
push
dec
lock
subb
loop
sbb
leave
inc
aaa
adc
scas
sub
cmp
cmp
movsl
mov
cmp
jo
cmc
fsubl
cmp
xchg
call
shld
das
sbb
cltd
in
loopne
in
pop
xchg
xor
inc
repz
dec
mov
lds
adc
aaa
aaa
jb
add
jl
es
pop
push
push
sti
inc
cmp
mov
mov
bound
inc
repz
push
dec
sbb
lcall
cmc
into
ds
ret
mov
pop
push
dec
arpl
fucom
lahf
mov
dec
mov
push
ss
xor
mov
loop
mov
daa
test
xchg
push
sarl
mov
pop
mov
dec
dec
dec
shrb
push
or
cs
enter
lret
shlb
out
or
sahf
sbb
stos
out
jecxz
pusha
mov
movsl
sbb
fisttps
and
and
xchg
mov
imul
xlat
xchg
pusha
inc
gs
outsl
aam
daa
lea
inc
pop
pop
lcall
inc
cmc
mov
cmpb
arpl
sbb
jae
fsubr
push
rolb
jmp
or
hlt
lret
ret
mov
outsb
into
push
scas
rorl
out
jno
push
ljmp
mov
ss
mov
scas
pop
dec
cmp
loopne
cwtl
lods
fs
jno
jnp
add
lods
or
mov
jae
sub
xlat
and
push
mov
mov
js
xchg
hlt
jb
xorl
dec
push
pop
pop
aam
stos
into
xor
jno
dec
aam
stc
testb
sub
push
xor
enter
lea
xchg
jmp
ret
in
aam
mov
inc
in
dec
add
out
test
imul
push
mov
int
dec
sub
sbb
ljmp
mov
mov
add
lods
pop
call
adc
mov
mov
cmp
adc
fwait
es
dec
lea
imul
push
add
inc
jbe
push
dec
std
ss
adc
jns
pop
ret
adc
fdivrl
inc
lcall
imul
xchg
cmc
pop
xlat
shrb
and
dec
stos
lods
inc
mov
mov
add
push
leave
mov
lds
pushf
jge
out
std
and
and
jnp
adc
stos
idivb
xor
mov
sub
pop
aaa
pop
shl
jae
inc
lcall
aaa
xchg
sub
stc
dec
sub
sbb
je
fidivrl
push
notl
mov
nop
cltd
test
pop
test
mov
jmp
jno
mov
push
sahf
les
dec
pusha
addr16
outsl
inc
xchg
add
or
pop
mov
pop
sbb
fsubr
test
mov
mov
orb
fwait
decb
lret
inc
sub
das
jg
jbe
fistpl
out
cmc
repz
mov
test
incb
into
test
xchg
add
aas
cld
mov
lock
scas
jae
cmp
call
dec
ss
into
rorb
in
scas
sub
shl
add
nop
in
lea
pop
jmp
sti
and
jmp
push
push
push
call
std
mov
daa
pop
test
jecxz
cmp
and
dec
scas
adc
add
rcll
mov
stos
mov
lret
ss
and
dec
in
imul
insl
mov
adc
pop
lods
int3
dec
sbb
inc
push
arpl
lcall
shll
idivb
push
popf
dec
push
mov
ds
scas
xchg
ss
and
push
mov
add
and
pushf
inc
cmpsb
or
shlb
hlt
pop
mov
aad
lods
xor
xchg
loop
insl
lret
daa
mov
mov
mov
js
mov
push
decl
sub
jo
push
sub
test
add
ja
les
icebp
adc
icebp
xor
mov
pop
push
xor
outsl
lret
ljmpw
adc
aaa
fstps
outsl
clc
fistps
push
pushf
dec
push
push
mov
jmp
push
data16
push
sbb
ja
push
jo
push
xor
leave
popf
inc
xchg
dec
push
mov
jnp
jle
pop
in
fs
inc
ss
sub
pop
clc
test
xchg
pop
testl
lret
sub
push
inc
repz
adc
inc
movsl
adc
bound
mov
adc
push
jbe
fidivl
cmpsb
mov
ljmp
das
in
mov
fldt
jo
jl
outsb
mov
xlat
pop
mov
mov
enter
addb
adc
jno
enter
mov
ljmp
test
and
mov
cmp
das
dec
mov
push
or
mov
nop
daa
movsb
call
adc
test
repnz
ja
jnp
jns
icebp
pop
and
xor
test
add
test
or
mov
test
nop
jne
jno
mov
cli
mov
lods
jne
xchg
ret
adc
mov
sub
shrl
repnz
push
mov
xor
cmp
shrb
ljmp
arpl
notb
popa
ret
dec
sti
popa
stc
mov
insb
mov
outsb
xchg
mov
popf
jmp
cmp
popa
or
lahf
pop
pop
je
xor
sarl
fs
inc
lods
mov
fisubs
cmp
mov
jmp
jo
cwtl
jecxz
cld
imul
out
mov
inc
push
xor
push
sbb
push
fstl
outsl
add
and
jecxz
push
or
popf
daa
jnp
inc
popa
sbb
fs
pop
sub
mov
jno
push
adc
push
and
int
dec
mov
xlat
pop
shrb
loop
test
xorb
arpl
hlt
add
out
mov
aas
cmp
xchg
jne
or
sub
xchg
insb
adc
mov
sub
push
mov
fbstp
iret
cmpsl
mov
cs
ja
add
dec
inc
adc
ud1
xor
lea
dec
ret
xor
sbb
pop
cmp
pop
inc
jmp
in
rorl
jle
fcoml
fstpt
xlat
test
or
mov
subb
inc
insb
lret
mov
out
inc
in
mov
or
in
add
add
outsl
jge
loop
jae
jae
pop
jecxz,pt
sub
xchg
and
movsb
movsl
in
jecxz
inc
cmp
sbb
std
out
dec
adc
ret
out
pushf
mov
mov
ja
mov
cli
sub
ret
iret
fcompl
loopne
xor
or
and
dec
inc
mov
stc
sbb
sbb
jne
es
ret
inc
mov
adc
push
sbb
pop
dec
adc
ficoms
ljmp
test
or
int3
or
stos
pop
push
dec
popa
repz
mov
cltd
xor
pop
outsb
pop
cmp
mov
push
mov
xlat
cmpsb
inc
dec
or
mov
jb
test
mov
sbb
pop
sbb
xchg
jo
ret
sbb
inc
popa
sbb
lock
movsl
sub
xchg
fcoml
mov
sahf
pushf
imulb
push
pusha
into
dec
ljmp
imul
stos
imul
out
mov
mov
in
int3
jb
dec
shlb
mov
out
insb
push
pop
jne
fwait
std
out
loopne
lds
arpl
dec
ljmp
rcl
xor
ljmp
cld
stos
shll
sbb
xor
fldcw
mov
test
cmp
icebp
cmp
mov
pop
stc
mov
dec
jge
ja
xchg
sti
fwait
mov
sbb
xchg
scas
sahf
jg
push
leave
pop
and
inc
cmc
js
inc
or
sarl
mov
jno
rorl
lock
into
aas
pop
ja
pop
or
inc
add
sbb
jl
mov
jbe
sbb
mov
call
pusha
imul
inc
xor
jb
mov
push
xchg
out
test
adc
out
jns
mov
mov
das
addb
and
lock
bound
adc
fcom
sbb
pop
fistpll
dec
ljmp
xchg
jp,pn
lcall
xor
push
jle
int
dec
adc
fnstsw
lock
cmp
xorl
sahf
scas
jle
repnz
push
xor
icebp
inc
es
imul
mov
jg
out
adc
pop
sbb
fcmove
push
aad
daa
pop
jle
sbb
mov
jmp
mov
sarb
into
xchg
aaa
sub
xchg
js
ds
sbb
xchg
insb
xor
inc
xchg
add
cmp
cmp
mov
pop
inc
mov
or
scas
movsl
movsl
cli
pop
or
and
loope
sbbl
lret
movsb
dec
xchg
jbe
push
cmp
sub
mov
inc
pop
call
das
out
cltd
inc
push
std
movsl
dec
and
xchg
add
xchg
decl
push
xor
push
sahf
mov
cmpsl
xchg
dec
nop
lea
lods
dec
into
inc
inc
sbbb
xor
test
lret
inc
sbb
rcl
sahf
ret
pop
jl
or
inc
loopne
sbb
sub
cwtl
xor
or
inc
mov
sub
test
xchg
or
pop
mov
std
sbbb
pop
inc
lock
out
xchg
orb
hlt
dec
sbb
adcb
jns
fwait
xor
jmp
and
add
into
fisubl
loopne
sub
xor
sbb
add
leave
lcall
sbb
xchg
push
push
inc
das
jns
inc
xchg
add
scas
inc
jno
mov
aas
sub
xorb
fwait
mov
sahf
mov
lods
push
ja
dec
jecxz
pop
scas
repz
std
shll
cmp
or
mov
jno
mov
test
mov
ljmp
in
pop
mov
shlb
fistpl
loopne
cmp
out
pushf
mov
or
inc
adc
in
test
int
dec
test
and
outsl
add
fadd
cmc
dec
push
mov
jp
jle
jecxz
or
shl
cmp
pop
pop
in
and
push
jecxz
repnz
mov
lods
jge
orb
in
stc
divl
movsb
xchg
movsb
lods
mov
out
andb
jp
xor
mov
std
mov
push
fidivl
in
dec
aas
pop
and
xchg
pop
out
and
dec
adc
inc
xor
stc
insl
jg
stos
pop
test
shlb
lret
add
mov
adc
sbb
xchg
test
cmp
adc
out
sarl
enter
pushf
mov
setge
pop
jnp
sbb
arpl
mov
jle
cld
xchg
xor
std
popf
xor
out
popa
add
std
out
push
ficoms
cld
stos
or
in
jle
xorl
hlt
ja
add
sbb
cmpb
adc
push
scas
rol
fistpl
ficompl
arpl
mov
outsb
sar
xor
div
scas
add
mov
and
mov
fs
inc
shlb
arpl
lret
cli
xor
pop
cltd
mov
roll
push
int
andps
xchg
mov
pop
sub
fidivl
pop
mov
popf
hlt
icebp
dec
lcall
xchg
aaa
dec
js
mov
movsb
cmp
xchg
test
sbb
sbb
xlat
ficoms
adc
mov
imul
addb
or
xor
and
xchg
sbb
adc
shlb
inc
xchg
fscale
adc
pop
ds
shrl
pop
push
pop
inc
fidivl
lret
std
or
cmp
jg
jmp
shlb
sbb
add
ret
outsl
pop
fwait
dec
sbb
lea
or
cmpsb
sbb
or
push
push
inc
or
and
imul
lods
jecxz
add
xchg
mov
xor
push
sub
sub
pop
push
xchg
dec
jno
or
sub
lahf
loopne
subb
inc
cmp
cmp
add
jecxz
adc
dec
fdivl
sub
add
or
fnstsw
inc
rcrb
or
jl
enter
lahf
out
jb
mov
flds
fwait
mov
jge
xor
insb
mov
ret
mov
xchg
xchg
jnp
gs
dec
or
push
inc
jns
sbb
cmp
shlb
jo,pn
movsl
sub
sbb
mov
or
push
movsl
add
test
setae
push
cmp
sbb
test
bound
push
stos
adc
push
pop
js
adc
out
push
dec
or
mov
mov
push
mov
gs
test
adc
xor
lahf
out
fidivrs
mov
stos
outsl
and
xchg
jnp
jmp
xor
fsubrp
movsb
arpl
stos
cmp
adc
out
mov
sbb
xor
adc
fiadds
fists
inc
shll
push
shll
jecxz
or
adc
mov
jno
insb
mov
pop
adc
in
jg
ja
fisttpll
cmpsb
fnclex
cmp
sub
jg
jns
mov
daa
sub
mov
frstor
xor
lea
cmc
dec
loope
outsb
int3
ret
daa
mov
orl
dec
dec
add
lret
mov
mov
cli
adc
xor
fsubrl
and
ret
fsubrs
hlt
int3
fmulp
dec
cmp
mov
or
dec
sub
mov
fisubs
pushf
push
pop
addr16
leave
dec
xor
stos
jno
int3
out
push
loope
push
and
or
jle
stc
mov
dec
mov
and
dec
mov
push
sbbb
mov
cmp
adc
mov
lods
iret
popa
lods
fidivrs
push
loop
pop
and
sub
les
int3
sti
pop
sub
popf
jno,pn
pop
mov
jbe
xchg
fs
mulb
pop
xor
lods
out
xlat
jne
xor
mov
or
and
lea
mov
out
inc
in
test
or
pop
lcall
push
fstpl
sar
cmp
sahf
cmpsl
dec
pop
inc
js
jb
mov
icebp
out
into
out
sti
scas
pop
sub
pop
aaa
adc
cwtl
xorl
xor
je
add
nop
xor
aaa
outsb
sub
sub
enter
je
sub
iret
and
movsb
insb
adc
push
sahf
ret
dec
push
adc
movsb
fs
mov
stc
test
xchg
mov
aaa
or
int3
mov
into
cwtl
or
pop
cwtl
pusha
mov
outsb
jmp
inc
mov
fcomps
jns
adc
inc
and
jae
mov
xchg
pop
adc
jl
sub
cmp
sub
test
pop
mov
cmp
jno
mov
in
pop
movb
mov
cltd
fiadds
into
add
add
inc
in
test
adc
lcall
fsubs
sarl
ret
jmp
jno
sahf
les
sub
dec
push
push
icebp
hlt
jb
push
sub
push
jmp
ds
sbb
mov
xlat
dec
in
adc
out
dec
add
cmp
pop
leave
scas
adc
cmp
repnz
push
add
pop
mov
mov
fdivp
or
add
sub
add
xor
jo
xchg
pop
insb
daa
and
pop
jmp
xor
pop
cli
insl
icebp
mov
dec
enter
fmuls
adc
test
mov
mov
daa
repnz
iret
std
jbe
and
test
mov
sub
sub
ficoml
popa
loopne
clc
shr
in
xchg
mov
scas
add
lcall
mov
xlat
jle
or
rcll
xor
pop
cli
stos
pushf
gs
subl
add
in
inc
dec
jp
jg
cmpsl
jne
iret
cmc
cmpsb
loopne
scas
into
stos
push
dec
dec
ficompl
xchg
ja
lcall
xchg
mov
push
ret
lods
mov
jne
mov
sub
aas
adc
jne
sub
mov
xor
adc
addb
mov
add
ljmp
mov
sbb
negl
xor
mov
rclb
dec
popa
ret
movsl
xor
dec
call
cmp
add
add
lcall
push
and
mov
lcall
fidivl
adc
xchg
mov
in
ljmp
dec
add
or
jle
leave
sub
lea
push
cltd
popa
les
adc
sbb
mov
insb
sbb
mov
push
nop
jle
inc
mul
sub
add
xchg
push
cltd
nop
jge
mov
imull
xchg
cmp
inc
mov
pop
sbb
or
sub
adc
in
cmc
adc
mov
sarb
mov
fisttpl
stc
mov
scas
and
jp
leave
sub
das
pushf
in
jne
fabs
and
pop
push
icebp
divl
jmp
inc
pushf
inc
xchg
inc
inc
les
lods
test
mov
xchg
mull
mov
scas
out
movsb
adc
cmp
sbb
movsb
subl
xor
dec
adc
dec
or
cmp
test
jge
pop
sub
mov
rorb
mov
adc
out
jge
push
mov
imul
js
arpl
xchg
add
sti
or
pop
js
push
enter
mov
mov
fs
test
adc
lock
mov
lock
ds
xor
cld
icebp
nop
push
gs
jg
ret
imul
cmp
push
test
call
outsb
jns
dec
daa
push
mov
jmp
pop
outsl
cmp
cmpb
dec
fisttps
push
in
xchg
mov
mov
xor
and
sub
cmc
sub
jnp
jmp
sti
mov
clc
pop
imul
test
sub
and
pop
hlt
or
movsb
sub
stos
loopne
mov
cmc
cmp
fsts
add
ret
add
xor
sbb
mov
pop
xchg
dec
lret
pushl
mov
ficoml
xchg
lret
inc
jnp
jp
mov
jge
outsl
rol
imul
jl
xor
jo
cmpsb
push
call
jo
xchg
push
and
sub
pusha
fs
imul
or
dec
push
add
lods
scas
aas
hlt
xchg
sub
out
mov
cmpsl
ret
mov
ret
ja
mov
popf
and
xchg
icebp
jg
add
iret
mov
or
lcall
ja
in
pop
shl
outsb
pop
mov
stos
cmp
cwtl
and
sti
or
popf
mov
test
mov
or
add
ret
aam
mov
pushf
inc
xor
or
cmp
push
lret
out
sub
dec
inc
pop
jbe
xchg
mov
gs
sahf
addr16
xor
daa
push
out
fnsave
sti
test
and
cld
lock
aas
test
aam
enter
dec
clc
push
mov
pop
xchg
std
sub
mov
jmp
xchg
shlb
shrb
sarb
inc
fists
test
jns
fsubrs
jnp
sub
call
bound
xor
push
out
pop
js
dec
mov
xchg
popa
pop
pop
aas
sub
nop
jo
pop
orl
icebp
mov
fisttpll
in
add
data16
fsubrs
jmp
push
sub
arpl
ret
shll
jns
adc
push
cmpsl
sub
add
and
dec
sbb
divb
jg
adc
lret
mov
and
jecxz
aam
fldl
add
mov
fldenv
jne
test
cmp
sub
dec
xchg
mov
movsb
cmp
sub
ret
mov
int3
repz
or
or
lods
dec
sbb
inc
xor
stos
push
mov
in
push
in
adc
inc
dec
scas
test
test
in
stos
lock
sub
ficompl
push
mov
add
push
fimuls
or
in
or
pop
inc
push
stos
inc
add
test
or
andb
sbb
jl
xchg
xor
cmpsb
cmp
inc
mov
aaa
lock
outsb
stos
ffreep
stos
popf
lods
push
adc
sbb
js
add
and
ss
sub
add
in
sub
mov
pop
jnp
jle
call
jb
aaa
xchg
xchg
movsl
jb
jg
jns
cmp
jo
imul
jmp
out
adc
icebp
push
dec
or
xlat
int3
pop
cmp
mov
stos
rol
inc
xchg
dec
jnp
out
sti
mov
adc
add
cltd
cmpsl
mov
mov
xchg
aaa
ss
ffreep
cltd
notb
out
add
xor
into
mov
inc
xchg
xor
data16
outsl
lea
dec
pop
into
cld
pminub
pop
ret
in
in
xchg
repz
jl
cmp
cltd
push
mov
pushf
mov
divb
aas
sub
xor
dec
jns
mov
test
mov
dec
mov
nop
cmp
sahf
cwtl
xor
aas
test
les
cwtl
and
xchg
dec
enter
and
js
jae
jnp
lret
ret
jp
and
sbbb
cld
inc
jb
and
fdiv
fsubrl
sub
jbe
cmp
jecxz
mov
or
pop
cld
inc
mov
mov
mov
xor
jmp
pop
rcrb
int
jg
fmull
mov
outsl
or
lcall
jne
or
addr16
dec
popf
cs
mov
lahf
ret
cli
cmc
imul
inc
adc
dec
les
pop
jnp
push
mov
adc
cmc
xlat
stos
mov
adc
push
mov
lock
decl
popf
or
mov
and
sub
dec
dec
je
pop
pop
iret
lds
in
aaa
xchg
xchg
or
fwait
adc
dec
test
xor
jl
mov
nop
rcrb
dec
pop
mov
out
insl
or
in
ret
iret
data16
mov
inc
ja
fisttpl
pop
mov
test
lods
addr16
sbb
cmp
movsb
mov
leave
lea
das
mov
mov
loope
mov
in
cmp
jle
inc
jge
or
rcrb
cmp
mov
push
fs
out
aaa
or
clc
xor
cmp
jne
dec
mov
mov
in
mov
out
mov
lock
pop
das
incb
mov
stos
icebp
jno
mov
data16
pop
out
mov
shlb
pusha
int
arpl
scas
inc
lods
jecxz
cmpsb
jno
or
fnstcw
xor
cmp
jecxz
and
or
and
or
mov
and
rorb
inc
loopne
mov
adc
cld
data16
dec
rcll
mov
jne
movsl
sub
inc
and
push
push
cmp
rcll
stos
adc
orb
repnz
mov
stos
popa
xor
add
mov
inc
stc
in
sbb
xorl
ss
mov
fs
scas
stos
sub
xor
cltd
lock
ret
iret
hlt
push
adc
repnz
mov
sbb
xchg
xchg
leave
aam
and
test
sub
inc
jle
and
or
call
mov
nop
cmp
mov
in
aad
xchg
mov
jne
xor
dec
adc
lods
dec
out
std
movsb
or
dec
lret
jns
push
dec
test
and
and
into
lods
lahf
pop
enter
int
stos
stos
sub
loop
imul
mov
push
js
std
inc
mov
jecxz
hlt
or
cmp
xor
imul
sub
fdivs
popf
and
xor
xchg
inc
or
ficompl
dec
push
aaa
shrb
jl
add
dec
or
stos
ss
pop
pop
mov
divl
adcl
fbld
inc
xchg
sarb
jae
mov
aas
mov
mov
dec
add
dec
pop
sbb
std
xor
lret
scas
testl
das
testl
mov
inc
mov
cld
arpl
sub
pop
sub
fwait
mov
ja
pop
out
push
lahf
scas
adc
and
xlat
lods
pop
dec
fadds
mov
popa
push
adc
cmc
js
shl
fcmove
xchg
pop
loopne
dec
aad
xchg
sti
fstpt
sbb
dec
xchg
mov
xor
lea
repz
cmp
xchg
xchg
cli
int
push
jp
ror
in
pushf
push
push
pop
ror
pop
int3
push
mov
sbb
add
out
xor
push
imul
ret
inc
out
inc
fiaddl
sub
fnstenv
mov
xorl
icebp
mov
and
addr16
test
push
mov
int
push
rclb
inc
xor
out
xchg
repz
lods
mov
or
aaa
fndisi(8087
imul
mov
gs
dec
pop
push
repnz
aam
es
xchg
ffreep
fs
add
sbb
xchg
xor
cmpsl
mov
xchg
xor
loope
push
out
jno
mov
mov
jg
push
jae
nop
cmp
in
mov
movsb
ret
dec
cld
pop
pop
mov
inc
cmp
jb
push
bound
ljmp
sbb
enter
cmp
xor
repz
push
roll
fwait
and
in
fcomip
mov
icebp
adc
sbb
push
sbb
mov
aaa
add
mov
jae
sub
jno
mov
or
lahf
pushf
hlt
mov
jecxz
dec
adc
xor
pop
xor
fs
in
push
and
mov
lcall
sbb
inc
mov
mov
iret
mov
lods
aam
cwtl
hlt
xor
inc
mulb
sbb
jne
xchg
mov
shrl
dec
data16
inc
inc
into
xchg
xor
ret
sub
sbb
lods
out
sti
or
jne
jno
int
pop
jae
cmp
sub
mov
sbb
lods
pushf
bound
pop
sbb
cmp
sahf
add
inc
mov
dec
adc
inc
or
mov
pop
inc
add
push
xor
or
fldenv
pusha
push
fsubrl
mov
out
inc
pushf
mov
lods
mov
sbb
cmp
stc
push
cltd
hlt
lods
stc
add
pop
aam
pop
dec
mov
adc
xor
and
adc
fistpll
aaa
xchg
loop
loop
lds
sarl
ds
mov
rorl
subl
xchg
cmp
popf
mov
arpl
lcall
jl
sti
adc
mov
lods
jns
xor
sub
negb
sub
fldt
sbb
pop
sub
mov
inc
imul
xor
lea
or
lret
mov
shl
mov
js
adc
pop
mov
fsubrs
or
insb
inc
sub
mov
sti
or
shr
push
pop
imulb
mov
xchg
sbb
iret
imul
push
movsb
cmpsb
mov
pushf
pavgb
ficomps
jbe
push
inc
lahf
push
mov
xchg
test
dec
xchg
jl
sbb
out
notb
fwait
xor
popf
sahf
mov
das
or
cmc
mov
aaa
dec
jl
ret
jbe
pop
pop
mov
out
pushf
sbb
lods
movsl
or
or
scas
aad
inc
out
incl
repz
or
jg
stos
ljmp
add
or
in
movsl
inc
mov
std
push
icebp
add
js
mov
imul
dec
lcall
pop
jg
into
pop
mov
mov
or
add
in
js
cltd
dec
add
push
imul
mov
rorb
mov
xchg
sti
sub
sahf
cmpsl
adc
enter
mov
cmp
aad
ficoml
js
lods
jl
jns
mov
sub
addb
addr16
jae
adc
push
jbe
aas
or
adc
add
mov
pop
cmpsb
mov
sbb
add
pusha
sbb
mov
ret
leave
lahf
call
sbb
scas
stos
mov
cli
loop
cmpsb
and
sarl
adc
shrb
lock
ficomps
jae
mov
add
iret
imul
test
push
or
and
rcl
les
add
fdivr
cltd
mov
out
stos
push
ds
iret
fs
pusha
mov
and
push
bound
movsl
pop
fadd
inc
arpl
cmpb
push
popa
jg
aaa
or
pop
shlb
and
pop
inc
and
outsb
cmp
dec
xor
dec
aas
rorb
test
cld
add
sarl
cld
sbbl
sbb
dec
mov
fmuls
aaa
add
repnz
or
hlt
or
inc
and
inc
mov
into
add
jo
pushf
int3
adc
divb
inc
mov
jno
inc
adc
cmc
mov
or
aas
inc
shll
add
test
jo
insb
loope
inc
insl
mov
outsb
out
inc
loope
gs
outsb
sub
pop
decl
stos
in
fbstp
adc
fbstp
notl
lcall
jp
ds
ret
in
fisubrl
dec
xor
repnz
iret
pop
xchg
iret
pop
xchg
jmp
jbe
adc
cmpsb
mov
inc
sbb
in
lcall
pop
sbb
sahf
mov
xchg
jne
dec
call
nop
aas
icebp
fdiv
xchg
pop
rorl
sub
dec
cmp
lret
xchg
inc
shlb
bound
sbb
cwtl
call
icebp
es
stos
or
sarl
ljmp
xchg
push
cwtl
xchg
push
jmp
js
or
popf
xor
nop
add
mov
mov
cmc
mov
sarb
int3
shrb
out
xor
add
shlb
or
or
xabort
and
push
dec
dec
popf
mov
push
xor
aaa
or
push
adc
mov
rol
sub
popa
in
lret
or
cmc
or
sbb
lret
in
jb
jg
jle
sub
jle
fadds
pop
pop
test
enter
mov
sbb
xchg
cmpsl
dec
test
inc
mov
pop
mov
pusha
insb
sti
push
test
mov
aam
push
inc
sub
mov
mov
adc
xor
xor
sub
cmp
in
inc
and
adc
sbb
push
mov
push
insl
jns
out
mov
fldcw
inc
in
mov
push
or
pop
and
adc
push
xor
cmp
xor
push
int
mov
jmp
rclb
lock
vandps
xchg
or
stc
xor
fildl
loope
fs
adc
and
loop
pushf
dec
decb
sbb
repz
mov
push
fsts
scas
jle
pop
inc
push
sbb
push
xchg
fisubrs
jae
in
repnz
add
imul
xchg
rorb
mov
push
out
std
add
orb
mov
cmp
mov
loope
call
mov
pop
test
or
out
shlb
sbb
nop
xor
inc
dec
cmpsb
cmc
mov
inc
and
mov
mov
and
inc
xchg
arpl
mov
call
jb
nop
dec
jo
mov
mov
dec
cwtl
int3
lds
sbbb
xor
inc
sub
dec
push
pop
scas
mov
inc
flds
pop
jp
lds
inc
shlb
bound
out
dec
call
mov
push
imul
packuswb
pop
jnp
out
pushf
js
imul
cmpsb
ds
pop
into
test
je
jns
stc
push
test
pop
sbb
xchg
ljmp
jne
repnz
stos
js
in
hlt
leave
mov
ja
insl
aad
inc
or
aas
mov
int
or
lock
jnp
ljmp
dec
jge
stc
es
fbstp
repz
cmpsb
insl
adc
clc
test
sub
mov
jbe
cltd
push
cmc
inc
pop
cmp
inc
jbe
outsb
sbb
enter
shl
sbb
repz
adc
test
adc
dec
dec
lahf
jmp
or
call
sbb
push
mov
es
pop
xchg
sbb
pop
lcall
jbe
pop
jbe
shll
lret
jl
xorl
inc
inc
sbbb
outsb
js
mov
test
iret
xor
dec
sub
in
sbb
pop
outsl
add
cs
mov
xchg
ror
xor
lret
sub
pop
inc
adc
mov
mov
lret
cmp
shufps
fwait
dec
std
or
jns
xor
hlt
xor
cli
adc
inc
add
das
std
jmp
sub
jl
sbb
stc
pop
pop
push
iret
sub
sub
fs
or
xchg
mov
fstl
js
cmp
inc
js
add
orl
inc
jp
xchg
jns
push
add
fistl
ret
cmp
jg
jo
jnp
dec
adc
sbb
outsl
js
mov
push
aaa
push
enter
scas
and
js
in
or
dec
ds
xlat
cmpsl
xor
das
mov
dec
in
out
dec
mov
mov
inc
das
add
popa
repnz
push
or
call
pop
push
dec
out
sbb
or
sbb
call
or
dec
daa
fdivs
sbb
rorb
push
pop
in
fstpt
pop
rorl
cltd
xchg
test
jle
dec
inc
and
jae
daa
cmp
std
fildll
repz
cmpsb
adc
pop
push
jne
add
or
aaa
ret
rdpmc
stc
adc
dec
je
push
aaa
ss
mov
fbld
fs
ret
mov
aas
cmpsb
jae
rolb
sahf
test
jle
dec
cmp
incb
int
imul
jmp
push
leave
pop
inc
stos
mov
pop
jl
jecxz
dec
mov
ljmp
or
add
adc
jo
jne
mov
xchg
inc
out
pop
lret
shll
jle
fwait
ja
mov
lret
xchg
das
mov
outsl
adc
cwtl
mov
lcall
fcoml
clc
inc
xor
in
mov
nop
pusha
pop
mov
fisttps
xor
adc
jno
pop
jecxz
inc
fwait
xor
add
insl
lret
enter
outsl
bound
repnz
add
mov
inc
ret
pop
xchg
adc
repz
cmp
pop
dec
mov
or
mov
mov
cmp
sbb
stc
gs
mov
aas
jmp
sbb
dec
popf
mov
faddp
je
push
imul
enter
xchg
dec
xor
push
gs
push
or
or
mov
call
call
mov
sub
xchg
add
fs
lds
xor
jecxz
leave
into
stos
lret
inc
loopne
mov
outsb
cmpsl
cmp
inc
jle
test
jge
fs
adc
or
push
negb
mov
inc
or
mov
cmp
cli
or
push
jae
or
pop
enter
loope
pop
sahf
and
dec
xchg
jae
pop
mov
fimull
lds
xor
mov
in
dec
das
cmp
and
in
pop
sbb
icebp
aaa
adc
pop
lcall
cmp
xchg
notb
scas
mov
sbb
push
in
shrb
loope
jbe
lods
mov
in
mov
pop
sub
fcompl
clc
test
jecxz
xor
dec
bound
je
fcom
sbb
clc
mov
imul
sbb
dec
mov
jmp
insl
xor
fistl
sti
or
jnp
sub
add
sub
mov
ficoms
cmp
or
cmp
dec
cmpsb
adc
or
dec
popf
add
fucom
xor
add
cwtl
ds
mov
hlt
sti
sar
xlat
in
notb
sub
dec
lock
and
push
stos
dec
push
ja
or
or
dec
retw
adc
stos
sub
js
loopne
aaa
ljmp
push
je
fisubrs
popf
cmc
cld
cltd
sti
leave
out
adc
ja
pop
insl
sbb
jmp
loop
pop
xlat
pop
sub
or
mov
test
incl
enter
jmp
hlt
outsl
aas
xchg
rcrb
push
ret
pop
push
int
push
add
adc
mov
cmp
mov
sbbl
mov
xlat
or
loop
or
dec
adc
sbbl
dec
in
in
push
mov
adc
push
xchg
or
fsubl
push
dec
add
xlat
jne
andl
insb
fiaddl
sbb
jl
pop
push
pop
mov
and
xchg
call
xor
mov
ficoml
cmp
lea
and
mov
aad
fisubrl
and
lret
cmp
mov
xor
hlt
imul
out
aaa
add
int
lahf
cli
inc
in
lea
arpl
push
push
test
adc
adc
std
jecxz
dec
cli
in
mov
ja
outsl
scas
jecxz
xor
pop
jp
xchg
push
ljmp
cs
loope
ljmp
pop
sti
out
adc
or
in
call
out
cmpl
ficoml
je
adc
lret
pusha
and
xchg
scas
imul
mov
mov
sub
lea
ja
insb
mov
dec
int3
or
pop
sar
imul
jle
push
icebp
ficoml
orb
cltd
jae
bound
loopne
mov
mov
jp
pop
mov
adc
sub
inc
xchg
adc
jge
cli
mov
adc
das
repnz
xor
jnp
dec
pop
sub
imul
inc
cmpb
sub
stc
inc
dec
int3
inc
scas
inc
pop
pop
jmp
lcall
loopne
rcrl
xchg
push
cld
pop
sahf
popa
pop
cmp
sbb
jae
pusha
inc
jmp
mov
in
jl
sbb
pop
dec
jbe
mov
push
hlt
loope
lds
mov
dec
push
add
cmp
sub
or
cmp
inc
mov
mov
test
insb
mov
addr16
stc
xchg
fisubrs
icebp
ja
or
jbe,pt
outsl
imul
test
inc
push
mov
iret
push
pop
dec
pop
imul
les
pop
jbe
push
xchg
mov
hlt
inc
xor
pop
fs
or
sbb
inc
inc
sub
cmp
cmp
xlat
test
sti
test
push
data16
jl
ret
push
adc
push
dec
loopne
push
mov
push
mov
repz
or
xor
mov
jns
into
sbb
cld
xchg
mov
jle
repz
fnsave
pushf
or
sub
roll
test
xchg
aaa
testl
inc
cmp
aam
ljmp
sbb
aaa
test
ljmp
pop
mov
inc
mov
push
lods
int3
or
hlt
adc
shlb
loopne
xchg
int3
jmp
mov
mov
mov
fsubrp
lods
jge
xor
pop
push
cld
pusha
mov
test
pop
sti
data16
mov
int
mov
xchg
inc
jle
mov
stos
into
mov
sti
outsb
jl
test
dec
inc
mov
lahf
xchg
rcrb
in
popa
test
and
icebp
int
or
lcall
inc
mov
ds
les
into
pop
aam
negl
and
test
xor
inc
aad
repnz
test
xchg
mov
pavgw
sti
mov
mov
ret
fnstcw
push
add
lahf
sbb
lods
jge
in
xor
dec
push
sub
cmp
scas
fcmovbe
sahf
stos
and
sti
out
xchg
xchg
pop
mov
cmp
shl
pop
push
nop
es
sub
lds
fcmovb
aaa
cmpsl
movsb
mov
sub
pop
in
push
cmp
ss
cld
jbe
aad
adc
add
into
add
int
push
or
add
dec
push
out
out
xor
pop
cmp
popa
sar
mov
inc
or
lahf
in
data16
mov
mov
pop
lock
imul
clc
repz
lahf
adc
in
lds
ret
cs
adc
or
xchg
scas
lods
popf
pusha
mov
sbb
sbb
pop
inc
fcmovnb
adc
ret
insl
pushf
adc
inc
or
ja
jmp
push
out
lret
inc
add
mov
aad
mov
ss
ss
push
dec
ret
lahf
pushf
sbb
inc
xlat
mov
sub
sub
jmp
fsubl
jns
mov
hlt
xchg
mov
cmp
ficompl
jp
mov
pop
xchg
push
pop
fxch
mov
lret
das
les
call
add
adc
pop
bound
and
pop
sub
xor
sbb
test
sar
push
push
mov
shr
aad
out
aad
push
and
or
push
dec
out
sbb
cmp
inc
xor
repnz
imul
mov
mov
sar
popf
jne
xor
ficompl
inc
adc
adc
push
out
adc
add
push
sub
cmpsl
ja
enter
add
pushf
xchg
cmp
dec
ret
ret
xchg
pop
inc
imul
sbb
addb
dec
xor
out
adc
jle
arpl
cmovbe
dec
cmp
jge
push
repz
lahf
movsl
pop
nop
xchg
sub
xchg
std
insl
lahf
scas
ja
jge
or
outsb
std
lods
lcall
xchg
mov
mov
xchg
or
xchg
imul
outsb
lea
add
insb
popa
out
stc
imul
push
pop
jp
adc
mov
lcall
lock
mov
jg
fs
add
push
or
xchg
out
and
push
dec
adcl
pop
cmp
mov
jb
arpl
imul
sbb
adc
sti
jbe
xor
xchg
movsl
mov
subb
cmp
mov
aaa
mov
xor
cltd
popa
test
addb
push
sbb
sub
fsubrs
scas
inc
iret
in
lret
mov
test
sbb
daa
xchg
and
add
pop
ja
mov
mov
sub
fisubl
outsl
or
loope
loope
mov
subl
or
or
mov
data16
fstps
pusha
cmc
inc
movsl
out
sub
pop
std
push
push
int3
dec
inc
in
push
imul
dec
ret
pop
imul
jb
lcall
outsl
mov
jae
stos
jle
stos
adc
jno
and
test
mov
mov
shlb
sti
lods
push
mov
mov
inc
shr
jns
js
fbstp
push
adc
stos
dec
subb
je
cli
fcomp
stc
icebp
lret
add
cmp
insb
shlb
inc
mov
add
aas
loopne
cmpsl
sbb
or
jg
xor
dec
movsl
dec
adc
sbb
sbb
jne
test
lea
fsubp
adc
mov
pop
cmp
xor
cmp
hlt
test
push
das
lock
xchg
jo
mov
dec
scas
push
lea
pop
push
jne
xchg
xchg
inc
sahf
loop
mov
push
and
outsb
mov
adc
ljmp
pop
mov
xchg
mov
push
add
xor
push
aam
push
sbbb
adc
movsl
out
es
dec
nop
or
mov
pop
dec
mov
cmpl
jnp
sbb
push
sbb
movsl
add
mov
ja
xorl
mov
cmp
mov
dec
outsl
ja
adc
scas
lret
dec
and
push
outsl
cmp
sbb
pop
pop
adc
or
mov
pushl
mov
xchg
notl
fstpt
push
rcll
sub
out
ss
aam
cmp
cmpsl
je
subb
xchg
ss
clc
mov
mov
jp
shlb
xlat
mov
in
mov
mov
jmp
mov
subb
dec
cmp
add
ret
xor
mov
xchg
add
fdivrl
add
dec
push
mov
dec
leave
mov
push
xor
xor
das
pop
rcrb
cmpsb
mov
hlt
pop
dec
into
and
loope
cmp
les
insb
outsl
and
sub
xor
xchg
stos
sbb
xchg
sub
push
les
push
test
sub
rclb
push
inc
adc
sub
mov
inc
nop
cmp
add
paddd
sub
xchg
jg
test
sbb
cmpsl
push
xor
mov
cmp
cmp
nop
shrb
jne
cld
in
mov
sub
fimull
ja
mov
mov
cmp
nop
out
and
jecxz
jmp
cwtl
cmp
lahf
mov
out
mov
fbstp
jo
mov
or
push
sbb
sarb
ljmp
cmp
out
inc
into
dec
test
ret
pop
call
lea
sub
imul
cltd
popa
and
dec
hlt
icebp
addr16
mov
mov
in
mov
loop
adc
sub
aam
mov
mov
inc
ss
sub
push
int
fmull
popf
cmp
adc
imul
mov
and
sarb
sbb
jo
xor
loope
add
cmp
dec
or
pop
imul
sub
inc
out
xor
push
sbb
dec
or
repnz
movsl
mov
xlat
test
movsl
mov
mov
in
lds
or
mov
mov
decb
insb
inc
cmpsl
push
in
add
movsl
addr16
cmp
popf
pop
inc
in
push
mov
inc
inc
cmp
mov
pop
adc
mov
lret
leave
or
cli
adcb
js
mov
notl
lea
xchg
aam
pushf
xchg
mov
xor
into
dec
movsl
jae
and
inc
or
xor
sub
jmp
and
push
inc
or
push
mov
test
adc
xchg
add
loope
stc
popa
pop
hlt
sbb
pop
mov
test
pop
in
or
stos
fwait
scas
push
out
lods
out
dec
repnz
shrb
cmpsb
or
jbe
in
scas
les
ja
dec
gs
insb
push
cmp
add
daa
ret
insb
test
test
xor
sub
lahf
andl
pop
xchg
cltd
daa
pop
adc
pop
stc
xchg
cmp
cmpsl
xstore-rng
cmpsl
cmpb
xacquire
xchg
popf
fbstp
adc
mov
dec
push
sti
mov
test
sarb
lds
mov
rorb
cmc
popf
xchg
fcomps
cs
in
sub
push
sub
xchg
imul
arpl
daa
in
out
clc
mov
jg
testl
cmpl
sub
sbb
outsl
sarb
mov
test
stos
mov
sbbl
sahf
mov
xlat
shr
test
sub
sbb
call
daa
out
mov
sahf
push
in
in
and
xchg
fidivrs
cmc
stos
fwait
loopne
fists
or
push
or
and
or
jno
leave
inc
and
pop
cmpsb
sahf
pop
add
ss
movl
push
dec
outsb
pop
pop
popf
jbe
cmp
add
pusha
cmp
mov
jmp
or
pop
xchg
int
mov
test
loope
clc
push
dec
dec
mov
jmp
xor
mov
daa
pop
mov
sub
in
outsl
and
test
and
cmp
mov
adc
mov
xchg
or
mov
add
cld
mov
dec
pusha
push
std
aas
xor
imull
dec
insb
nop
and
pop
jge
lds
fisubrl
movsb
xor
push
or
arpl
pusha
push
xor
cwtl
pop
add
stc
dec
nop
je
lds
or
pop
xchg
xor
lea
xchg
cmc
sbb
dec
sub
jle
aam
das
jge
test
inc
push
fldl
xchg
mov
sub
ss
or
repz
cmpsl
lret
gs
push
es
and
in
mov
mov
aam
nop
repnz
in
les
or
loopne
repnz
xchg
pop
inc
jmp
pop
xorb
push
outsl
mov
ds
or
sbb
push
mov
sarb
adc
mov
int3
in
popf
inc
inc
jge
call
push
fidivs
imul
push
push
push
ret
repnz
mov
or
jno
stos
mov
pop
push
add
mov
mov
mov
cmp
and
pop
out
out
test
push
push
std
sahf
xor
or
add
mov
jne
pop
mov
add
repnz
fwait
shl
shl
sahf
subb
xchg
movsb
lods
jns
xchg
loopne
ret
pop
out
repnz
sub
pushf
testl
xchg
stc
jbe
ficomps
lcall
leave
leave
cmp
fdivrs
dec
mov
push
sbb
dec
jg
in
mov
cmp
push
xchg
ret
push
jns
aas
movsb
gs
jle
fnstsw
add
clts
xchg
rorl
lds
inc
mov
lods
in
lea
in
out
fimuls
dec
dec
jb
jo
fs
out
adc
pop
sbb
int
in
gs
adc
fisttpll
xchg
inc
cmp
inc
lahf
ss
inc
adc
into
sbb
pop
leave
mov
insb
xchg
sahf
jp
lahf
movsl
adc
popf
fldcw
sbb
sub
cmp
push
sbbb
jecxz
push
pop
inc
pop
mov
mov
push
xor
mov
stos
pop
ret
sub
mov
dec
lds
mov
scas
jle
scas
les
inc
or
jecxz
ret
adc
inc
add
sahf
jne
push
bound
sub
fldl2t
sahf
cmpsb
mov
xchg
bound
xchg
jb
mov
pop
dec
ret
sub
dec
mov
iret
daa
mul
pop
push
ja
pop
insl
mov
cld
test
je
xor
adc
and
jl
in
jo
imul
dec
in
cwtl
test
jmp
dec
in
mov
or
out
fbstp
sub
push
inc
testl
sarl
imul
sub
aad
fcompl
sbb
cmp
pop
inc
rcrl
xor
andb
xchg
push
aas
pop
pop
jl
push
push
xchg
lds
and
mov
call
xchg
sbb
pop
jb
pop
icebp
data16
jno
push
xor
xchg
mov
adc
adc
or
push
mov
popf
rcrl
in
push
sti
and
jge
fs
mov
mov
js
or
mov
outsl
dec
jne
lea
dec
cmp
adc
repnz
sbb
leave
pop
stc
mov
inc
loope
pop
ss
cmc
aad
shrb
fcmovnbe
add
loopne
int3
sbb
sarl
mov
imul
xor
cwtl
xchg
mov
inc
dec
popf
and
mov
xchg
stc
mov
insb
fmull
pop
sbb
out
cltd
pop
stos
mov
dec
mov
mov
in
lock
inc
sbb
gs
mov
inc
cwtl
jecxz
mov
test
jae
push
aaa
sub
cmp
push
ret
aam
cmc
xchg
jb
xchg
xchg
sahf
into
mov
movsl
mov
lock
paddb
mov
mov
and
repnz
test
popa
mov
adc
or
ja
lea
mov
call
int
sub
xchg
pop
into
loope
iret
fadds
aad
sbb
inc
pop
dec
xchg
xchg
notl
pop
sub
cmp
ljmp
jns
jns
outsl
stc
mov
xor
sub
mov
ret
je
pop
push
push
xchg
in
rclb
test
adc
sbb
push
jne
pop
pop
test
addr16
or
int
inc
and
mov
ret
scas
fwait
push
xor
lea
inc
jmp
call
insb
mov
and
push
mov
mov
and
add
mov
cmp
pop
js
aaa
add
dec
mov
repnz
dec
mov
data16
inc
mov
pop
loopne
loopne
sbb
xorl
xor
fcmovu
jecxz
loope
sub
lds
psadbw
mov
test
adc
sbb
push
xor
jp
sbb
push
test
sbbb
dec
int
aad
pop
stos
and
xchg
mov
inc
adc
inc
add
push
ret
jbe
xor
lcall
loop
mov
aad
add
out
mov
out
mov
mov
dec
sbb
xor
and
lods
lods
movsb
lods
pop
test
push
mov
adc
out
aas
lret
push
xchg
xchg
clc
pop
jmp
jle
jle
mov
inc
data16
mov
push
aam
rcl
push
dec
push
repnz
pop
push
enter
js
xor
and
jns
sbb
push
hlt
xchg
inc
popl
repz
push
sub
jbe,pn
xor
jae
push
test
fdivs
lret
sbb
mov
jns
in
xor
xor
adc
std
lahf
sbb
pop
hlt
jo
pusha
divb
jle
daa
mov
nop
sub
sbb
in
push
cmp
jmp
sub
mov
testl
dec
pop
adcl
inc
scas
jne
sub
inc
xchg
fs
or
fisubrs
mov
fidivrl
pop
push
adc
test
and
dec
movsl
enter
jnp
xchg
lcall
addl
sti
insl
addl
movsl
push
scas
adc
lods
or
mov
push
ja
int3
loop
inc
fsubr
adc
aaa
mov
out
cmpsl
pop
push
mov
cmp
push
xlat
dec
cmpsl
jge
shrb
push
movsb
mov
adc
mov
loopne
out
cltd
pop
js
push
inc
sub
sbbb
mov
outsl
xchg
test
push
mov
dec
movsb
pop
push
jae
pop
gs
lret
outsl
mov
dec
xchg
cmp
repz
shll
inc
push
mov
push
sub
sarl
std
push
or
and
pop
shlb
popf
in
jns
test
outsb
sbb
mov
into
push
ret
mov
rcl
pop
jo
sub
cltd
cltd
jno
xor
sub
movl
shlb
lock
push
lcall
outsl
in
push
xor
aad
cmp
adc
pushf
iret
jns
xchg
adc
sub
or
push
mov
adc
dec
sarl
lock
test
mov
mov
xchg
sub
mov
ja
push
pop
das
outsl
mov
cmpsl
jno
loopne
dec
mov
mov
dec
add
xchg
mov
and
mov
iret
roll
aaa
stos
xchg
sub
pusha
in
cmp
aas
enter
lret
dec
aam
in
jo
int3
out
cwtl
mov
mov
pop
jg
cmpsl
test
subl
push
sbb
add
sub
or
mov
jno
incl
cmc
adc
xor
push
xor
test
xor
push
xor
sub
mov
lcall
std
in
inc
inc
rcl
inc
lods
pop
std
into
mov
mov
add
sub
cmp
cltd
aam
outsb
cltd
inc
add
int3
rolb
jge
aas
push
push
add
adc
mov
in
lcall
stc
push
jnp
mov
push
mov
fisttpl
cltd
orl
rolb
in
hlt
and
add
mov
mov
cltd
add
ljmp
pop
sub
lcall
jno
mov
divl
adc
mov
or
in
ljmp
or
out
gs
jl
push
cmp
jo
push
jmp
adc
and
lea
push
stc
xor
cmp
cwtl
xchg
xchg
sub
test
jns
inc
push
or
gs
jbe
push
fldt
clc
sub
push
iret
pop
ret
push
jecxz
push
mov
xchg
sahf
cmp
or
adc
xchg
xchg
ret
sbb
test
sbb
fcmovb
and
es
mov
dec
and
push
push
jg
ds
push
call
into
cmpsb
inc
bound
dec
jp
xchg
int3
call
inc
mov
aaa
das
mov
add
sub
jecxz
sbb
shl
fdivrl
dec
jo
inc
ret
pop
cmp
mov
add
add
add
add
sarb
mov
xchg
push
lods
cmpsb
loopne
mov
push
jle
nop
mov
call
inc
push
les
out
pop
jp
loop
out
dec
icebp
ljmp
dec
add
or
xchg
lret
and
pusha
dec
pop
jnp
mov
sub
mulb
and
lahf
push
loope
xchg
xchg
push
or
std
jno
sbbl
adc
cmp
xor
xchg
jecxz
out
hlt
arpl
jg
movsb
mov
ret
inc
enter
xor
jge
jp
cltd
inc
add
push
cmpsl
std
mov
xchg
ffreep
fptan
movsb
push
into
je
and
jg
subb
jp
nop
push
mov
stos
sti
mov
push
xchg
rcrb
ljmp
fsubrs
icebp
inc
lahf
sbb
test
lcall
cmp
cmpsb
lock
js
std
jmp
or
nop
outsl
out
mov
fst
mov
je
sahf
out
test
xchg
or
mov
ja
test
std
sub
insl
xchg
nop
sbb
mov
jp
ret
outsl
ret
sub
and
std
push
and
push
stos
sbb
into
xchg
fldl
push
popa
jo
or
ret
add
add
jnp
shrb
mulb
cmp
pop
xlat
push
cmpsb
add
pop
cmp
jecxz
ret
jp
adc
or
push
jp
push
loop
dec
lahf
pop
mov
push
push
lock
xor
xchg
mov
arpl
rcr
mov
jmp
pop
cld
fucomi
sub
fadds
adc
sbb
inc
xchg
stc
insl
andl
add
cmpsl
pop
dec
sbb
lods
les
inc
inc
push
movsl
xlat
jo
popa
arpl
pop
mov
mov
stc
sub
and
inc
loop
xor
scas
inc
push
add
or
leave
pop
mov
sbb
sbb
xor
jg
mov
in
cmp
andb
adc
lock
or
jp
add
jno
mov
sub
pop
push
or
cltd
out
loop
call
sbb
jle
dec
add
add
jae
imul
bound
je
insb
pop
jecxz
pop
push
mov
jns
or
xchg
movsl
mov
mov
sub
sahf
jns
test
mov
xchg
sub
outsb
lods
sbb
rcll
adc
mov
mov
fsubrp
mov
mov
add
lods
scas
lea
mov
inc
call
or
sbb
popf
je
inc
popa
lret
out
bound
cmc
addr16
mov
cmp
add
adc
inc
pop
stos
cmpsb
pop
test
add
xchg
mov
push
mov
push
repnz
in
nop
test
and
pusha
mov
mov
inc
push
dec
mov
or
pusha
in
arpl
push
sbb
dec
ret
jbe
int3
cmp
mov
ja
add
push
je
mov
and
add
and
sbb
lahf
or
push
repnz
sub
push
add
sbb
in
pop
jns
call
xor
push
jle
inc
jle
pop
inc
and
ret
mov
xor
jecxz
sbb
mov
insb
pop
mov
pop
xor
or
ljmp
pop
push
js
or
and
xchg
pop
out
lock
sysexit
xor
dec
xor
or
mov
cmpsb
adc
cmp
or
icebp
cld
inc
mov
jns
push
dec
imul
fwait
adc
ret
fwait
cwtl
mov
lea
call
adc
repz
inc
ret
iret
pop
xchg
leave
jle
rcrb
mov
cmp
mov
xor
jge
xorb
loope
or
repz
test
push
mov
dec
ret
xchg
cltd
js
repnz
pushf
mov
stos
data16
push
fld
inc
jecxz
notl
aad
out
sbb
out
lret
mov
adc
mov
out
xor
mov
out
andl
pop
add
jb
or
int
lods
sub
mov
inc
jle
outsl
hlt
sti
lret
cmp
out
stos
add
sub
arpl
mov
xor
and
pusha
dec
out
jmp
daa
mov
rol
mov
dec
mov
out
push
pop
lcall
stos
push
sbb
out
jecxz
arpl
pop
sbb
out
and
scas
sub
mov
xor
sub
fwait
cmpsl
movsb
das
sub
xor
dec
push
fnstcw
and
mov
cmp
repz
fistl
lret
jmp
push
outsb
cmp
aad
addr16
jnp
fwait
pop
pop
sbb
repz
push
pop
ljmp
mov
sub
jmp
mov
cmp
imul
push
dec
cmp
xchg
jmp
mov
pop
and
sbb
test
xor
lcall
or
or
sbb
adc
int3
mov
or
push
movsb
pop
and
or
inc
std
jmp
cmp
insb
xchg
fbstp
xchg
shll
or
add
add
inc
cmp
repnz
subb
cmp
loope
and
sbb
inc
popa
imul
cmp
push
adc
sbb
cwtl
orl
rcrb
add
call
xor
sbb
mov
lods
mov
out
jmp
pop
push
cmp
adc
call
mov
movsb
xchg
xchg
movsl
mov
or
pop
inc
inc
repnz
jns
ss
pop
push
jnp
jnp
dec
push
movsb
leave
popf
insb
cmc
mov
ss
jb
stos
adc
mov
mov
adc
neg
xlat
aaa
cwtl
fsubr
push
dec
pop
dec
jb
inc
xchg
sbb
in
add
dec
lret
and
loope
rol
sub
jnp
and
stos
jb
jecxz
cmp
push
les
pop
add
cwtl
pop
xor
fdivr
subb
fwait
sbb
dec
call
push
push
jmp
aam
sbb
cmp
sar
cwtl
adcb
je
cs
dec
aad
push
leave
pop
rcrb
push
jp
pop
sub
adcb
stos
inc
cltd
rorl
lods
cmpsl
mov
push
gs
mov
inc
cmc
mov
add
jecxz
and
les
mov
test
push
inc
mov
rorb
test
inc
and
jns
fistpll
shlb
mov
lahf
imul
js,pn
movsl
mov
pop
cmp
sub
imul
and
addr16
mov
push
aam
in
or
roll
xor
push
shll
fiaddl
fnstenv
ds
xchg
push
inc
mov
loope
jl
xor
xchg
call
dec
mov
arpl
outsl
rcll
or
sub
sahf
cwtl
adc
loop
mov
lock
mov
and
push
xchg
out
cmp
xor
test
ljmp
aam
xor
xor
imul
mov
add
shr
test
mov
pop
enter
add
and
and
or
test
js
jo,pt
or
mov
and
into
dec
fs
cmp
mov
and
loope
ljmp
jne
jo
loopne
jbe
dec
fiaddl
xor
jl
je
pop
xchg
push
popa
adc
push
mov
jecxz
push
incb
test
xor
mov
cmp
cwtl
dec
rorl
out
cmp
push
test
sub
scas
mov
cmp
fs
mov
mov
cmc
sub
jg
add
mov
test
movsb
cmp
sbb
add
pop
pop
mov
pop
mov
fldenv
js
push
mov
les
mov
in
push
test
inc
jle
imul
sub
push
ds
mul
arpl
loop
inc
dec
gs
xchg
and
xchg
arpl
fsin
sub
imul
pop
jnp
shll
in
out
dec
sub
and
testb
add
rol
aad
loope
dec
jecxz
loope
lock
negl
ret
xlat
icebp
pavgb
pop
inc
lcall
mov
push
rcrb
add
popf
test
mov
mov
in
aas
add
jbe
xchg
je
sub
inc
push
iret
mov
jle
xchg
xor
fwait
setnp
insb
mov
cmpsl
aam
mov
push
xor
stos
xchg
fnstcw
mov
fldt
ljmp
pop
cmp
ret
jns
outsb
mov
ret
je
dec
cmc
cltd
lea
pop
mov
and
mov
jmp
mov
mov
std
cmpsb
divl
pushf
ds
xchg
or
loopne
loope
xor
out
inc
loop
sbb
mov
cltd
xor
jbe
cs
shll
in
add
fld
rcr
xchg
and
or
and
fldcw
xchg
dec
insb
pop
imul
xchg
decl
adc
mov
jae
push
xchg
ds
push
insl
dec
inc
pop
inc
dec
ss
cmp
ficoml
mov
cltd
jg
std
icebp
lret
mov
out
aaa
and
push
cmp
sub
adc
inc
shll
sub
jae
pop
sahf
push
leave
xchg
sbb
lods
pushf
inc
loope
adc
fcmovnu
cmp
scas
pop
sbb
aas
sub
movsl
jbe
add
xchg
and
sub
mov
mov
adc
mov
fs
sub
popf
into
jns
fsts
mov
mov
pop
jb
jl
shl
out
cmp
lds
push
push
aam
leave
call
fs
xor
jno
rcrb
loop
dec
mov
in
pop
cmpsb
and
mov
test
hlt
test
xchg
jb
pushf
or
cmpsb
mov
cli
jnp
movsb
mov
call
arpl
inc
mov
or
in
enter
popf
in
ror
sbb
lcall
push
mov
mov
mov
jp
mov
push
fildll
push
stos
fdiv
xchg
mov
out
push
addl
mov
fsts
mov
mov
and
in
mov
sub
scas
dec
ret
cmp
inc
cs
adc
setns
test
fcompl
pop
in
xor
loop
push
into
inc
cltd
xchg
jns
xlat
enter
xor
pop
arpl
and
jnp
lods
lods
mov
addr16
xor
les
fwait
inc
gs
insb
jl
cmp
and
pop
inc
getsec
lds
rcr
ja
cmp
gs
sub
lds
icebp
enter
mov
xchg
sub
xchg
clc
mov
insl
fld
ds
movsb
pop
test
test
addr16
out
xchg
andl
fwait
xor
sbb
jge
test
cwtl
ret
insb
pop
loop
aas
shll
xchg
pusha
sbb
add
pop
arpl
mov
sarb
cmp
cmc
push
loopne
pop
lcall
cmc
imulb
and
and
inc
sub
mov
pop
add
mov
lahf
icebp
pop
in
fs
in
or
insb
jb
iret
add
jbe
into
in
xchg
add
leave
out
push
dec
xor
mov
add
cld
push
inc
pop
xchg
mov
xchg
mov
pushf
cmp
cmp
push
cmp
cmp
jne
cs
xor
xchg
ljmp
ja
pop
mov
xchg
push
push
pop
adc
rclb
xchg
dec
faddp
cmc
aad
pop
popf
std
add
in
push
imul
pop
jg
pop
jp
cli
xchg
ds
test
push
daa
stc
or
fsubrl
test
and
aas
les
stos
xor
cli
fnstsw
rcl
dec
mov
mov
mov
addr16
mov
pop
aas
xchg
mov
lahf
cs
push
popa
push
es
cmp
fsubs
cmc
xchg
inc
push
xchg
or
xor
or
adc
add
pop
sbb
cli
dec
clc
mov
mov
xchg
sbb
push
insb
adc
or
xlat
mov
jge
addb
mov
adc
mov
fimuls
daa
std
adc
scas
pop
mov
jle
push
nop
pop
mov
pop
adc
mov
cmp
mov
add
or
mov
enter
pop
mov
mov
repz
test
lahf
aam
int
mov
cmpsb
dec
sub
lods
stc
xlat
popa
les
inc
sub
dec
sahf
mov
loop
adc
mov
fwait
cs
ja
adc
adc
mov
lcall
jmp
inc
cmpsl
add
xchg
adc
adc
pop
lods
adc
push
ds
xor
arpl
inc
mov
in
sbb
sahf
xor
pop
pop
xor
adc
mov
subl
cmp
cmpsl
not
enter
pop
ja
int
sbb
jge
je
icebp
movsl
add
into
divb
push
adc
mov
dec
mov
repnz
and
lods
test
in
push
add
xchg
subl
mov
fwait
and
xor
jg
sti
xor
cwtl
sbb
dec
or
jmp
mov
ds
lods
pushf
bound
mov
pop
cli
sbb
jg
notl
test
popa
or
inc
cmpsl
imul
loopne
popa
or
mov
adc
in
enter
lahf
clc
xchg
pop
dec
pop
shll
add
xchg
imul
insl
push
movl
je
jae
dec
cmp
jnp,pn
push
inc
lcall
push
ffreep
inc
pop
ja
push
jns
and
mov
mov
je
mov
aad
add
mov
jae
mov
xorb
cmp
sub
and
mov
mov
stos
mov
sub
pop
inc
call
mov
sti
mov
stos
pop
xchg
call
cmpsb
cmpsb
shl
xor
ret
daa
fucomp
fstp
loopne
outsb
gs
in
mov
or
xchg
movsl
mov
mov
adc
pusha
outsb
test
and
movsb
negl
shlb
push
flds
jle
pop
jns
dec
jl
jo
mov
lret
mov
mov
push
sbb
leave
xchg
cwtl
sbb
jmp
int
or
rorb
xchg
lods
dec
mov
inc
push
outsl
test
mov
mov
into
negl
leave
sub
adc
shlb
fistpll
dec
leave
out
shlb
leave
sbb
iret
pop
pop
popf
pop
aaa
or
test
aas
add
xchg
or
scas
cltd
fistl
int
lds
push
dec
xchg
mov
push
push
fdivrl
add
test
iret
mov
push
xchg
cwtl
push
icebp
das
sub
int
jo
pushf
scas
sbb
cmp
int3
lcall
cmpl
inc
orb
inc
inc
mov
add
mov
scas
pop
adc
aad
mov
mov
xchg
js
push
add
mov
jns
bound
pop
sbb
aas
cmpsl
adc
js
jl
dec
inc
shr
push
dec
iret
call
mov
imul
aaa
in
ficomps
xchg
mov
jne
jl
mov
fidivrs
aas
xchg
xor
mov
mov
rcrb
fucom
aaa
inc
jge
ds
xor
add
rolb
les
xor
shll
mov
adc
test
pop
mov
clc
add
sub
in
push
cld
loop
mov
push
leave
cmp
shrb
jne
cltd
cli
mov
pop
loope
lods
sub
mov
mov
out
cltd
xchg
cmp
mov
ss
fimull
loopne
rcl
aam
in
mov
dec
fdivl
push
push
mov
and
mov
sahf
xchg
aam
hlt
rorl
xchg
dec
inc
jl
std
stos
test
jnp
xlat
mov
lahf
popa
mov
rcrb
test
cmp
in
ja
outsl
pop
jno
dec
cltd
flds
jmp
cmp
jnp
cmp
xchg
add
adc
sub
sbb
cltd
cld
addr16
into
gs
call
adc
add
cmc
loop
lds
inc
fbstp
mov
push
arpl
push
rol
test
nop
gs
pop
push
mov
jae
in
aad
jo
pop
jns
xor
inc
nop
sub
into
add
insl
cltd
jb
cli
or
fdivrl
enter
rolb
fmuls
push
sbbb
jne
mov
movsl
push
mov
xchg
xor
dec
adc
sarl
std
scas
jns
fdivs
inc
imul
scas
call
pop
push
xchg
mov
mov
shl
fdivrp
inc
cmp
ja
jae
sti
andnps
pop
fnstenv
mov
lea
jecxz
movsb
insb
pusha
dec
ljmp
sub
sub
lods
bound
lds
popa
es
fnstenv
stos
or
dec
cmpsb
cmpsl
inc
bound
cmovne
cld
mov
shll
jl
push
jae
mov
rolb
cmp
push
repnz
xchg
ljmp
mov
xchg
xor
lods
daa
xchg
pusha
in
ret
stc
xor
xor
xchg
or
jno
cmp
sub
rcll
adc
xor
dec
cld
mov
xlat
cmc
lahf
pop
sarb
add
jb
lea
jp
or
les
imul
imul
mov
lret
addb
adc
pushf
mov
gs
mov
push
pusha
gs
push
sbb
aas
pop
mov
push
das
mov
xlat
push
or
sbb
mov
into
dec
es
mov
loop
mov
bound
int3
jnp
mov
out
sbb
add
sub
and
jno
mov
xchg
lods
shr
lahf
xchg
scas
pop
adc
mov
sahf
es
cmp
cli
subl
or
cld
into
outsl
mov
xchg
fnop
es
and
ficompl
and
jno
ficoms
sub
pushf
into
les
les
popf
sti
iret
inc
sahf
mov
sahf
test
fld1
lock
rolb
scas
xchg
lock
orb
out
push
popf
or
fdivrl
cmp
sbb
adc
dec
popa
xchg
mov
roll
push
mov
xlat
cs
xor
push
aam
lahf
mov
add
inc
cs
push
lock
arpl
lock
cmp
out
mov
outsb
jae
mov
out
inc
lahf
jecxz
fbld
cld
pushf
mov
arpl
pop
cmpsl
mov
lea
mov
mov
repnz
adc
xor
mov
mov
daa
pusha
iret
mov
push
jno
pop
into
and
mov
xor
push
mov
push
stos
testb
lahf
mov
mov
add
xor
jp
pop
push
imul
loop
scas
test
lea
pop
adc
loope
cmp
pop
mov
sbb
fsubrl
test
sarl
fidivrl
jnp
mov
and
and
push
adc
ds
int3
daa
mov
lret
pop
xor
negl
repz
cmpsb
dec
xlat
push
jl
bound
pop
sar
notl
jle
insl
testb
shll
or
pop
inc
mov
lea
inc
mov
jle
sub
lret
ds
add
cmpsb
pushf
mov
cmp
loope
jae
dec
dec
and
or
fidivl
pop
roll
cs
cmpsb
sbb
std
cmpsl
sub
add
loop
data16
leave
mov
dec
or
xlat
sub
les
jge
scas
dec
or
pop
mov
gs
pop
and
push
mov
jns
hlt
leave
cmp
or
jl
stos
cs
lea
inc
push
xchg
jecxz
scas
or
adc
add
sbb
mov
cli
jmp
in
imul
loope
pop
and
fdivs
dec
cmp
bound
repz
jle
idivl
addl
iret
pavgb
mov
dec
adc
jl
lea
mov
and
in
mov
outsl
int
jp
jae
push
repnz
outsl
and
int3
mov
inc
xchg
mov
push
aad
xorl
shl
scas
push
pushf
pop
rcll
imul
negl
insl
jo
adc
mov
sub
adc
daa
shl
sahf
daa
insl
push
sub
les
andl
and
data16
arpl
movsb
dec
mov
cmp
in
cmp
fcmovne
adcl
xchg
cmpb
cmpsb
push
jle
out
push
cltd
push
into
rep
es
dec
in
mov
lret
fimull
adc
jnp
and
out
insl
cmpsl
mov
xchg
mov
fsubs
sbb
pop
and
rorl
mov
xchg
dec
mov
xchg
xchg
jne
repnz
lret
hlt
dec
nop
cmp
mov
lea
shlb
das
cmp
imul
cmp
fisubl
jmp
mov
inc
xor
push
stos
subb
mov
cmc
push
imul
int3
scas
leave
rorl
repnz
xor
cmpsb
inc
addr16
or
mov
and
into
jbe
in
mov
enter
xchg
in
outsl
adc
xor
cmp
or
scas
or
adc
push
addl
pop
lea
pcmpgtd
std
adc
rorl
test
pop
xchg
js
and
mov
and
pop
cwtl
cmp
test
pop
fidivrs
dec
mov
add
cmpsl
mov
roll
outsb
mov
push
cmp
cmc
inc
fisttpll
pushw
or
cmp
pop
push
inc
mov
ret
fwait
incb
and
dec
jo
leave
inc
adc
mov
mov
add
in
inc
lea
xor
adc
out
mov
iret
or
jno
shll
dec
decb
lret
sbb
dec
ss
jnp
lcall
stos
out
mov
movsb
pop
dec
filds
jns,pn
xor
outsb
cli
sbb
dec
mov
roll
xchg
jne
rolb
mov
popl
mov
push
inc
pop
out
gs
jp
idivb
sti
test
add
mov
daa
out
shlb
cmp
xor
fs
in
shlb
push
into
add
loope
cs
and
push
nop
push
add
scas
cmp
inc
sbb
jno
pop
jecxz
mov
jae
xchg
call
mov
pop
shlb
shrl
mov
icebp
iret
test
daa
jmp
fsubrs
add
mov
in
popf
xchg
loope
in
js
jo
popf
adc
adc
and
insb
insb
jne
bound
mov
aaa
add
jecxz
std
and
lds
inc
and
stc
mov
mov
repnz
cmpsb
push
sbb
or
push
enter
data16
mov
ja
ja
dec
and
ja
mov
or
repnz
ficoml
lock
fiadds
aam
fmull
int3
push
and
icebp
cmp
popa
jl
dec
aad
in
push
mov
js
xchg
xor
ds
ficompl
dec
cmp
xor
push
pop
mov
sti
data16
mov
inc
test
add
cmp
ret
sub
ljmp
movsl
dec
mov
call
xor
vpaddsw
bound
cmpsl
mov
xlat
addr16
rorl
add
andl
push
sub
lret
test
stc
lods
movsb
sahf
shlb
pop
mov
pushf
ja
xchg
add
fstps
sbb
test
jl
stos
pop
decb
mov
push
sbbb
leave
mov
mov
push
into
sbb
pop
pushf
xchg
push
je
sbb
dec
andl
mov
aas
or
add
inc
xchg
jo
movsl
dec
dec
xchg
enter
sbb
dec
sbb
sub
xchg
testl
jbe
in
aas
sub
push
inc
dec
xchg
push
icebp
or
dec
xchg
push
and
mov
xor
mov
cmp
lock
cwtl
pop
sbb
inc
jne
cmc
adc
xchg
mov
cmp
mov
mov
das
dec
or
scas
test
mov
push
mov
fchs
cmc
mov
jl
cmp
je
pusha
int
int3
mov
bnd
sbb
fimull
mov
push
sbb
loop
into
in
mov
mov
call
adc
loop
lcall
dec
fldcw
in
fadd
dec
adc
jl
push
rol
sahf
nop
pop
xor
mov
inc
lret
testl
sbb
mov
cmp
push
inc
js
mov
add
jmp
add
shlb
lret
hlt
inc
sbb
mov
mov
fmull
arpl
mov
repz
clc
jb
adc
xchg
xchg
mov
divl
sub
lcall
clc
ljmp
add
push
cs
jle
jb
das
push
sbb
cmpsl
sub
adc
sbb
dec
hlt
add
and
popa
andl
push
shrl
and
cmpsb
fstpl
sub
dec
out
ret
cli
cmp
imul
scas
xlat
mov
mov
xchg
repz
repnz
sub
adcb
inc
dec
cwtl
rcr
rcl
out
dec
and
dec
cmp
sbb
scas
out
mov
sub
repz
fisttpl
jmp
add
and
dec
and
out
inc
out
jp
inc
cmc
sbb
out
mov
outsb
push
push
aam
sbb
repz
or
pop
pop
andl
sbb
cmpsb
jg
push
mov
hlt
ret
adc
outsl
cs
sbb
dec
sbb
call
push
pop
repnz
sbb
cmpl
insl
pop
loopne
fmull
cld
inc
cli
fwait
xor
cli
pop
and
sub
cwtl
inc
adc
fstpl
push
xor
andb
leave
aad
dec
lds
cli
out
or
push
push
sbb
cmp
gs
aaa
push
shll
out
mov
sbb
and
add
sti
out
loopne
inc
push
dec
add
pusha
call
stc
outsl
cld
adc
fistpll
mov
inc
cmpsb
mov
sbb
fwait
gs
nop
adcl
stos
daa
clc
xor
ds
pusha
push
jb
aaa
lret
push
call
add
xchg
rolb
pop
fdivr
movsl
push
fcmovnu
add
add
hlt
leave
cmp
mov
mov
and
jp
pop
and
mov
scas
mov
or
jns
popa
add
js
or
mov
add
lcall
sub
adc
push
movl
sbb
lock
cltd
fwait
dec
mov
inc
jl
ja
fisubl
xchg
roll
jnp
and
lea
pop
sub
ss
cld
mov
push
loopne
add
sub
iret
mov
addr16
movsl
pushf
fld
insb
push
aam
sub
mov
shrb
insb
leave
mov
les
movb
xor
call
adc
sub
gs
rcrl
cwtl
or
scas
xchg
or
int
pop
mov
and
sbb
stc
call
pop
and
aad
and
xchg
pop
imul
pop
push
add
jne
mov
cs
out
pop
ret
or
mov
aad
push
movsb
fsubrl
rcrb
add
das
dec
in
xor
inc
loope
cmp
push
movsl
int3
add
pushf
scas
pop
test
addr16
mov
mov
pop
js
mov
dec
fwait
je
rcrb
scas
cmp
push
mov
test
dec
mov
xlat
add
stc
aam
fstps
fisttpll
add
js
sahf
mov
jmp
push
xor
adc
or
clc
push
mov
push
ret
cld
xlat
js
lea
ds
fsub
shlb
pop
adc
sub
sub
adc
lods
push
pop
sub
pushf
loope
stos
sbb
mov
pop
js
mov
mov
jns
pushf
mov
inc
inc
cmpsl
cmp
sub
sar
repnz
sub
xlat
into
pop
and
xor
mov
and
sarb
cltd
jp
iret
xor
daa
push
inc
jb
in
cld
mov
popa
out
aaa
into
mov
mov
mov
popf
gs
or
dec
lods
mov
ja
or
mov
scas
pop
push
lahf
scas
xchg
cmp
rol
movsl
pop
cmp
sahf
adc
rcrb
add
cmp
xchg
pop
ficompl
sub
jle
push
cmp
mov
push
mov
das
rcrb
ss
nop
mov
stos
push
mov
pop
mov
pusha
mov
scas
cmpsb
push
sahf
xchg
and
scas
push
aaa
xchg
fwait
cmp
gs
jbe
mov
push
xor
rolb
cmp
cltd
xor
xor
and
push
repnz
xor
sbb
xlat
xchg
mov
cmpsb
int3
aaa
fnstenv
addb
test
or
movsl
xor
sbb
shlb
mov
push
mov
pop
mov
inc
cli
int3
cmp
mov
cmpb
iret
jnp
jnp
lcall
lods
nop
mov
lahf
mov
adc
xlat
mov
mov
xchg
in
cli
mov
test
insl
arpl
dec
les
clc
add
sbb
fs
cmp
movsl
pop
lret
jecxz
in
push
lods
push
data16
sti
inc
jns
lcall
daa
mov
mov
dec
mov
cwtl
pop
testl
out
mov
add
outsl
pop
jge
mul
stos
mov
or
nop
pusha
stos
xchg
fsubrl
xchg
data16
mov
pop
xchg
in
pop
int3
xchg
mov
outsl
cs
shll
hlt
mov
ficomps
mov
cmp
sbbl
or
repz
xor
mov
pop
scas
or
or
xor
push
inc
and
daa
pop
mov
loope
popf
js
or
in
neg
push
outsl
gs
ljmp
sbb
pop
cs
sbb
mov
ss
sub
pop
xorl
shlb
or
cld
xchg
ljmp
in
inc
or
ja
cmpsb
lret
dec
jge
adc
xor
xor
xor
popf
sbb
fwait
repnz
into
dec
inc
test
xor
ret
inc
mov
clc
push
push
decl
add
mov
adc
shlb
pmulhw
roll
xor
xor
mov
or
ja
imul
mov
cmp
cmp
mov
push
jnp
rcll
sbbb
dec
lret
cld
push
lahf
stc
mov
stc
sbb
pop
incl
movsb
xor
pop
es
and
jb
add
jmp
dec
or
sub
mov
outsl
jmp
sti
xor
outsb
adc
sti
sti
sub
and
cmp
mov
mov
or
xchg
fiaddl
xlat
pop
xorl
test
gs
sub
mov
imul
test
mov
and
and
mov
loope
addr16
pop
stos
adc
jo
test
outsb
sub
pop
adc
jne
add
sbb
sub
xchg
dec
sub
stc
pusha
testl
xor
out
dec
push
mov
out
push
add
shll
cmp
aaa
fcomi
xchg
or
lcall
xor
movsl
ret
addb
insb
cmpb
xchg
xor
nop
sub
nop
shrb
mov
popa
outsl
adc
jbe
or
add
jmp
ja
or
insb
pusha
adc
mov
inc
das
rorb
stc
cmc
dec
and
test
add
jecxz
jl
sbb
loope
cmp
xor
or
lret
mov
aad
loopne
mov
pop
stc
sub
out
pop
adc
ljmp
and
push
inc
jl
mov
pop
pop
test
push
insl
sub
loop
stos
cli
sbb
add
adc
in
mov
cmp
or
outsb
jg
cmc
sbb
fdivl
cmp
inc
jns
dec
test
mov
inc
lcall
lahf
push
mov
mov
mov
pop
mov
js
gs
jnp
adc
cmc
leave
push
xchg
movsb
xchg
dec
mov
aam
dec
jg
stos
sbb
mov
xchg
je
insl
dec
adc
jmp
cld
push
testb
ljmp
fwait
inc
jg
adc
mull
sbb
movsl
ss
shll
adc
cmpsl
or
popf
dec
xor
mov
or
push
push
sbb
mov
bound
pop
test
mov
xor
xchg
nop
shl
mov
push
fmul
sbb
mov
leave
sub
and
movsb
call
cmp
fsubs
push
push
sbbb
jecxz
inc
notl
or
das
mov
mov
mov
jp
pushw
jle
xchg
test
imulb
lcall
rclb
inc
out
inc
jo
nop
xchg
fwait
or
js
mov
xor
dec
test
dec
fdivr
imul
fstpt
sub
mov
int3
xor
add
insl
adc
pop
lea
push
out
push
movsb
cltd
or
or
add
in
cmp
jnp
xchg
cs
inc
sub
pop
push
xor
and
push
dec
push
ds
dec
lods
jle
fistl
push
vaddpd
inc
sub
ja
mov
push
xor
aaa
jbe
shrb
je
jne
cmp
mov
fistl
loope
aam
mov
or
stos
imul
mov
and
or
push
jecxz
dec
xor
jg
imul
loop
inc
loop
rol
insb
add
add
or
mov
cmp
ficomps
repz
sub
scas
fldt
push
sub
mov
nop
lret
or
lds
cmp
jle
rolb
dec
mov
jmp
mov
inc
lea
sbb
inc
push
push
movsl
jno
mov
roll
test
mov
sbb
popa
imul
sub
xor
xor
scas
js
sub
pop
sbb
jb
sbb
pop
fdivrs
cmp
sahf
sub
sbb
dec
in
adc
jns
or
je
fimuls
loop
test
cmp
cmp
fcmovnbe
bound
and
add
add
int
jnp
fcompl
push
cwtl
stos
jp
divb
mov
xchg
sbb
fdivrs
dec
ret
jns
mov
inc
cmp
jb
push
xchg
data16
inc
mov
add
aas
xchg
xchg
into
nop
dec
ss
and
mov
jns
movsb
mov
xor
imul
and
fildll
lret
adc
out
movsb
add
lret
adc
and
inc
dec
lret
xor
ficoml
test
adc
adc
jno
mov
test
inc
cmpsb
jne
cmp
sti
in
adcb
rorl
test
add
adc
jnp
and
stos
in
pop
adc
jle
jge
jb
push
jne
mov
xchg
mov
mov
fs
mov
push
enter
mov
mov
pop
repnz
jecxz
inc
jge
icebp
jno
xor
ljmp
cmp
jo
mov
pusha
fwait
jo
leave
fstcw
pushf
ja
icebp
and
js
fildl
add
fsubrp
pop
fldcw
fidivrs
faddl
fwait
out
int3
imul
scas
cwtl
data16
and
ljmp
lock
movlps
aam
jg
or
and
push
repz
mov
push
in
loope
mov
cmp
jae
addr16
int3
xor
sbb
imul
cmp
cmp
jl
push
cs
dec
ljmp
shlb
jle
xchg
stos
xor
mov
std
sbb
bound
adc
or
nop
sbb
bound
loope
xor
hlt
xor
insb
out
orb
add
fwait
lock
jl
sbb
inc
mov
and
mov
cmpsb
insl
ss
sbb
insb
jns
or
pop
popf
jmp
dec
in
and
outsb
call
nop
lcall
pop
mov
xchg
push
int3
fdivrs
enter
loop
out
jmp
xchg
stos
dec
xlat
insb
push
shr
pop
aam
jnp
push
cltd
inc
xor
xchg
pop
rolb
add
lds
aad
mov
sub
mov
lahf
stc
xchg
outsb
scas
orb
mov
and
rorb
jge
pop
pushf
pop
mov
cmpsb
xchg
in
xchg
or
cwtl
dec
leave
ljmp
cwtl
jl
and
mov
inc
inc
cmp
mov
loop
mov
xchg
aam
movsb
shll
push
mov
jp
loope
mov
jl
loope
popf
push
es
loopne
mov
dec
adc
fsubrl
xchg
mov
sub
push
pop
ds
sarb
xchg
jae
inc
dec
add
sub
mov
inc
mov
fldl
mov
mov
mov
push
ret
fxch
and
adc
pop
jb
adc
in
pop
mov
shl
aad
stos
popa
mov
jnp
into
int3
cltd
fbstp
jge
inc
into
in
mov
mov
adc
fidivrs
pop
cli
ja
test
or
add
push
dec
cmp
aad
aad
adc
mov
mov
filds
fsubs
pusha
push
lcall
xchg
ss
aaa
outsb
mov
test
in
xor
sub
and
add
mov
fwait
pcmpgtw
shrb
nop
out
mov
mov
or
gs
popf
mov
or
jbe
xor
jle
rclb
repz
clc
dec
mov
stos
adc
inc
sbb
xor
jecxz
fwait
or
sti
imul
lcall
xor
cltd
lea
xchg
and
push
or
adc
call
fiadds
stc
daa
iret
cmp
lods
inc
push
sub
mov
inc
rolb
std
loopne
xchg
arpl
jle
jge
sbb
dec
mov
jo
fs
fwait
cmp
std
xchg
push
aas
inc
mov
ret
cmpsb
adc
jp
jecxz
adc
mov
stos
in
and
das
inc
cltd
cmpsb
cmp
std
mov
cmp
push
jne
dec
pop
add
outsb
mov
or
sti
test
int
mov
out
fidivrl
test
cltd
inc
mov
js
fwait
into
inc
in
jae
sub
adc
sbb
call
sub
ret
mov
sbbb
push
rorl
mov
rclb
pop
ds
push
lods
or
fidivrs
mov
add
lahf
ja
ja
mov
enter
lds
push
lods
bound
add
pop
dec
add
jnp
mov
push
arpl
add
call
push
outsb
mov
outsl
loope
adc
negb
sbb
scas
jg
call
loope
aas
loopne
roll
pushf
lea
test
push
dec
imulb
out
jl
push
or
mov
std
sahf
pop
pop
mov
cmpsb
test
ljmp
rcl
push
jno
lret
idivl
scas
cs
mov
sbb
or
pop
or
dec
mov
push
or
jae
xchg
call
sub
lret
push
test
sub
fdivl
push
add
push
inc
mov
and
or
dec
pop
mov
repnz
ret
testb
das
cmpsb
sbb
dec
xchg
jnp
in
stos
add
mov
mov
movsb
lahf
sbb
cmpsb
mov
adc
jnp
xlat
push
sbb
push
iret
and
xchg
std
cmp
push
xchg
fwait
mov
addr16
xchg
mov
push
sbb
fldt
fwait
fs
lods
mov
test
jle
or
arpl
fisttpl
psllq
shrb
cmpsb
leave
leave
adc
sbb
mov
stos
leave
fnstenv
pop
arpl
xchg
repnz
xchg
pushf
iret
push
adc
xor
imul
arpl
test
popf
push
sahf
dec
xor
push
mov
mov
insb
add
hlt
mov
ror
outsb
dec
insb
mov
sbb
cmpsl
frstor
int
jl
or
jae
pop
aas
movsb
divl
xor
rcll
test
iret
inc
adc
mov
into
jg
add
or
jo
data16
adc
lahf
in
xor
clc
pop
in
pop
aad
test
mov
or
outsb
and
mov
pop
lea
add
sbb
pusha
pop
fmul
loop
pop
mov
repz
loope
mov
outsl
in
mov
daa
mov
sbb
js
fdiv
sbb
fdivrl
or
cmp
aaa
cmp
adc
call
sub
pop
inc
scas
jl
dec
mov
mov
adc
add
cli
cmpsb
xchg
sbb
scas
out
inc
xor
and
sub
mov
popf
jnp
insb
lret
mov
sahf
push
jne
xchg
and
sbb
add
mov
jle
aad
jg
sti
mov
in
push
inc
int3
or
or
data16
xor
cmpsb
ficomps
dec
fwait
in
sbb
adc
inc
mov
mov
dec
adc
push
inc
loope
inc
into
pop
lret
mov
enter
pushf
adc
cmc
iret
mov
xchg
mov
int
addr16
add
push
push
dec
std
pop
cwtl
push
imul
or
mov
outsb
cmp
jecxz
mov
and
mov
cmp
leave
xor
jns
jb
movsb
cmp
mov
loope
insl
sahf
push
fstl
mov
ss
cmc
leave
shll
rorl
adc
xor
xor
movl
xor
or
in
lret
bound
mov
pop
into
cld
fst
dec
sub
lds
nop
outsb
sub
xor
in
dec
cmpl
out
jbe
or
mov
jg
test
in
icebp
cmc
lret
jl
xchg
dec
js
mov
fs
scas
inc
mov
imul
sbb
mov
sbb
mov
dec
sbb
mov
and
or
adc
cmp
xchg
mov
into
mov
pop
inc
pop
sahf
out
pop
stos
movsb
test
mov
scas
pop
xchg
xor
push
xchg
pushf
mov
adc
pmaxub
push
push
jmp
mov
push
sbb
stos
stos
mov
jnp
or
sub
lods
addr16
or
xor
andl
insb
jge
cs
mov
mov
popa
or
roll
push
cmp
mov
xchg
push
mov
dec
enter
adc
xor
and
mov
cmc
adc
les
mov
fcoml
push
add
inc
rorb
std
mov
or
jb
lahf
cmc
pop
cmp
push
les
in
fldenv
clc
lret
or
mov
pop
adc
sbb
test
jnp
push
mov
mov
pop
sbb
pop
sbb
pop
repnz
add
mov
fadd
cmp
imul
xchg
mov
aad
push
rorb
fmulp
insb
out
repnz
dec
jle
sbb
out
clc
fucomi
sub
or
pop
dec
push
in
fstl
dec
xorl
leave
outsb
push
insb
cmc
adc
dec
lret
insl
xor
xchg
sbb
data16
movsl
or
fldcw
rclb
hlt
sub
js
cmp
inc
add
sti
cmc
xchg
fsubl
in
push
subb
inc
and
repz
or
xorb
ret
into
cld
popf
dec
cvtps2pi
jne
fdivrl
xchg
push
dec
cwtl
loopne
pop
mov
adc
mov
test
in
inc
xor
jae
pop
or
cli
cmp
add
xor
inc
or
lea
mov
jl
fucomip
adcl
inc
sub
xor
xor
xchg
pop
mov
leave
out
or
dec
mov
into
or
in
dec
adc
and
shlb
jl
push
cmp
fadds
cmp
scas
sti
cld
inc
cmpsb
jb
adc
inc
test
or
cld
xchg
nop
push
es
mov
mov
adc
and
cmc
cmp
push
std
cld
lret
outsb
in
xor
xlat
adc
lahf
mov
pop
dec
mov
mov
mov
dec
xchg
push
inc
jle
pusha
and
ja
adc
xor
pop
sbb
adc
or
or
sbb
xor
add
gs
push
pushf
sti
inc
inc
lock
xchg
sub
xchg
les
fwait
clc
cmp
sbb
repz
sub
punpckldq
in
dec
dec
mov
int
pop
lods
mov
cwtl
jno
stc
cld
fbstp
push
mull
mov
popf
push
mov
stc
insl
andl
mov
xchg
adc
rsm
in
pop
mov
call
leave
xor
cmp
cltd
pop
lcall
subl
push
mov
fcmovbe
push
jae
int3
loope
in
mov
ss
mov
scas
nop
daa
sti
and
aad
push
xchg
mov
sub
jp
fs
insl
scas
mov
in
xchg
sbb
icebp
pop
sub
mov
sbb
imul
jl
orl
jnp
adc
fwait
push
les
push
lahf
test
mov
or
cs
mov
and
dec
sub
fidivs
shll
sbb
nop
xchg
or
cmp
sbbb
mov
scas
loope
ret
or
stos
loop
jl
movsl
push
lock
es
dec
push
negb
fdiv
xor
mov
sbb
fbld
shll
std
dec
jbe
pusha
cli
fildl
jb
dec
jnp
or
adc
jno
xor
js
bound
jecxz
xor
and
sub
clc
std
scas
cmpsb
aad
mov
pop
std
movsb
mov
shlb
mov
xor
cmp
jb
mov
movsb
jnp
or
cmp
push
scas
mov
xchg
rcll
clc
sbb
and
mov
push
push
jecxz
bound
mov
pop
aaa
jp
add
or
test
lret
and
push
xor
xchg
loope
mov
inc
repz
pop
inc
inc
das
xor
push
stos
mov
daa
stos
ds
inc
lods
js
lods
ds
inc
ljmp
mov
xor
comiss
or
andl
leave
pop
arpl
fmuls
or
fcmove
cltd
mov
jb
xlat
xor
push
arpl
mov
daa
outsl
mov
out
mov
mov
mov
out
es
leave
mov
cmp
mov
int3
mov
movsl
sub
pop
das
inc
jl
jl
cmp
jg
sbb
stos
arpl
pusha
mov
jns
jo
fstpt
push
sbb
fisubl
lods
aaa
push
ds
inc
arpl
lret
push
cmp
mov
add
mov
jne
cld
fdivrp
dec
mov
xchg
cmp
ss
sbb
imul
dec
jae
xorl
cmp
xchg
psrlw
push
xor
cmc
inc
ss
xchg
gs
add
mov
jg
insb
ficoms
in
cmp
sti
popl
mov
ds
js
nop
mov
stc
cmpsb
jnp
and
jne
jae
pop
dec
sub
das
das
cmp
mov
pushf
or
push
insl
mov
fnstenv
xchg
or
cmpsl
xor
inc
fstpl
jmp
fdivrs
imul
sahf
dec
pextrw
or
push
and
dec
cmc
adc
xor
jno
mov
imul
cmc
xor
jb
cwtl
sub
ret
xchg
fcomps
xchg
outsb
ret
mov
push
lahf
mov
add
adc
adc
iret
aaa
out
mov
fwait
roll
push
sbb
imul
imul
adc
sub
inc
insl
mov
xchg
push
sbb
aas
or
mov
adc
xchg
or
iret
mov
sbb
out
add
into
mov
mov
out
dec
dec
stos
cmp
stos
and
mov
pop
mov
push
ret
pop
mov
shlb
sbb
outsb
mov
cwtl
repnz
mov
rcl
lods
xchg
push
outsl
test
pusha
aam
ljmp
mov
lods
mov
divb
cmp
pop
std
imulb
push
test
ja
pop
cmp
loope
out
hlt
xchg
lahf
pushf
and
mov
faddl
nop
clc
lea
pop
sub
sahf
mov
out
pop
aaa
ret
nop
and
dec
aaa
jns
pop
mov
dec
sbb
pusha
addl
jmp
in
aas
mov
jecxz
cmp
shll
jge
in
mov
xor
push
jmp
adc
cmc
inc
sub
xchg
enter
inc
stos
pop
jnp
clc
lcall
cld
xchg
cs
movsl
or
mov
lods
cmp
adc
testb
pop
lahf
aam
cmp
mov
adc
mov
sahf
push
and
push
js
lea
adc
push
or
movsl
push
loopne
movsl
and
pop
mov
adc
cmp
rdpmc
pop
pop
or
cmpsl
in
dec
in
add
mov
pop
int
sbb
negb
or
fwait
mov
push
jno
sti
daa
cld
inc
aas
sub
pop
mov
sbb
or
aad
or
sbb
pop
aad
xchg
cld
lods
sbb
es
add
jno
pop
sub
push
jp
outsl
adc
sub
cmc
jae
int
test
pop
push
push
fdivl
fistl
les
sti
test
insb
stos
pusha
push
push
aaa
jno
fs
mov
jmp
add
inc
adc
jge
inc
pop
scas
dec
adc
jnp
xor
add
mov
das
fbld
or
add
arpl
lods
out
push
test
mov
mov
push
cmc
add
push
inc
out
lahf
lds
mov
mov
inc
push
shll
test
into
sub
sbb
sbb
test
movsl
leave
arpl
xor
inc
hlt
pop
jle
mov
dec
cwtl
and
shlb
push
out
mov
cmp
lea
push
lock
push
add
lcall
nop
int3
insl
fwait
sub
add
and
sub
mov
pop
roll
fsubrs
mov
inc
aam
lock
cltd
mov
rclb
xlat
cld
notl
sub
arpl
pusha
jb
sub
xchg
push
shrb
sbb
std
xor
popl
dec
cltd
loopne
cmp
ds
xor
or
gs
cs
push
cmp
xchg
mov
add
xlat
test
adc
shrl
mov
clc
pop
jne
jg
ljmp
mov
sub
cmp
ds
insb
pop
inc
inc
adc
cmp
mov
ret
push
clc
ljmp
roll
add
push
test
and
cmp
inc
and
sar
jge
das
and
xlat
xor
inc
xor
adc
push
int
dec
insl
mov
repnz
fs
cmp
jnp
cmp
andb
clc
andl
test
dec
jge
add
cmp
mov
push
dec
mov
rcrl
cmp
arpl
subl
mov
sub
and
mov
mov
mov
rorl
pop
std
jle
andb
mov
cld
mov
test
and
lock
mov
mov
flds
in
data16
cwtl
cmp
mov
outsb
outsl
and
jbe
rcrl
ds
cs
xlat
inc
pop
dec
hlt
jge
adc
lret
cmp
mov
and
ret
cmpsb
push
sbb
mov
or
out
adc
push
std
xchg
mov
pop
cmp
bswap
insb
dec
xchg
xorb
imul
pop
rclb
lret
push
sbb
repnz
ljmp
test
insb
dec
jg,pt
dec
fwait
mov
movsb
sarb
sti
xchg
xchg
scas
jno
ret
mov
add
cmp
push
xchg
sbb
sbb
inc
mov
pop
pop
popa
mov
lea
inc
xorl
jns
scas
pop
fs
adc
xor
dec
inc
sti
ljmp
xchg
jl
xchg
test
outsl
jo
das
mov
fildl
int
daa
mov
rcrb
lods
stos
lock
dec
xchg
roll
and
fnstsw
xor
pop
xchg
xchg
jae
push
and
push
push
and
push
xor
and
pop
add
jae
or
fildll
lea
shlb
clc
jp
lahf
cmpsl
cmp
sub
sub
jl
ljmp
sub
popa
inc
xchg
in
sbb
aad
jb
data16
je
shll
mov
outsl
out
sbb
xchg
lock
enter
cwtl
dec
jno
push
add
mov
ja
push
stos
sbb
xor
test
andl
dec
mov
pop
add
stc
inc
jecxz
stc
scas
loop
cmpsb
push
mov
std
jnp
test
fiadds
and
repnz
scas
add
rolb
mov
mov
fucomp
mov
inc
aad
mov
sbb
pop
pop
mov
pop
and
rclb
fldt
aam
jge
in
stos
and
sarb
scas
mov
and
cmp
aaa
std
mov
cld
jge
lcall
enter
out
clc
jge
pop
lahf
pop
pop
das
test
dec
cmp
fcompl
aaa
xchg
je
sbb
ljmp
jmp
inc
daa
cld
mov
cs
sbb
cmp
xchg
int
repz
leave
cli
scas
cmp
adc
sbb
jge
and
mov
push
movsb
push
xor
mov
jge
or
and
xchg
cmp
int
lds
iret
xor
mov
in
or
gs
push
pop
xchg
and
loope
mov
inc
or
dec
adc
jne
leave
adc
scas
inc
imul
sarl
mov
add
jns
push
mov
xchg
shl
loope
mov
inc
mov
aaa
cmpsb
rcrl
pop
xchg
nopl
cmpsl
mov
push
ja
mov
cmc
pop
arpl
aad
pusha
testl
jb
rcrb
xor
ds
or
xchg
stos
push
fwait
adc
sub
add
inc
cli
push
out
das
push
cwtl
mov
mov
inc
dec
xchg
cmp
sub
jmp
pusha
fisubl
ljmp
enter
xchg
xchg
cmp
jp
icebp
mov
sbb
cli
jnp
in
cwtl
add
cmp
inc
push
jecxz
cmp
mov
inc
pop
jmp
rcll
jg
and
addb
lahf
dec
sahf
xchg
rcr
adc
and
sarb
ret
push
jno
pop
ljmp
jo
sbb
movzwl
mov
into
clc
jnp
lock
xchg
cltd
sysexit
mov
mov
lea
adc
inc
inc
stc
add
jno
in
pop
sbb
icebp
mov
adc
mov
inc
mov
mov
inc
push
outsl
in
stc
movsb
ret
testl
push
test
push
and
mov
and
adc
aas
in
dec
jle
mov
into
cmp
mov
cmc
cli
push
lea
push
xor
dec
jle
mov
sbb
mov
outsb
aam
ficoms
cmpsl
push
call
ss
lods
aam
fisubrl
arpl
in
scas
repnz
xchg
in
push
mov
into
and
out
ljmp
in
jo
jne
xor
sbb
movsl
inc
test
jl
inc
fwait
xchg
iret
pop
pushf
jns
xor
push
sbb
adc
push
sub
js
fs
mov
mov
sbb
mov
cmp
dec
cwtl
pop
addr16
fldenv
pop
jno
mov
pop
imul
bswap
hlt
sbb
into
lods
roll
pop
xchg
cmc
movsl
insl
inc
push
das
jns
sbb
mov
adc
jo
dec
shl
mov
xor
mov
or
cmc
popf
lds
xor
push
scas
pop
ja
jmp
and
dec
lahf
mov
mov
bound
xchg
xor
stos
jnp
cmp
mov
mov
cli
pop
mov
pop
leave
sbb
xchg
iret
mov
lods
out
jb
inc
fstl
or
adc
shr
pop
gs
sub
lret
push
je
mov
lds
mov
cmp
or
cmp
iret
popa
fdivrp
jl
fisubrs
fsts
jne
mov
clc
inc
xor
pop
mov
push
jae
popf
xchg
sub
leave
lcall
and
or
push
mov
repz
mov
popf
out
fwait
pop
mov
mov
jo
out
fdivs
and
jno
clc
sbb
ljmp
hlt
and
xlat
mov
insl
mov
add
cmpsb
fimull
mov
inc
or
xchg
jg
lcall
ds
cld
lret
inc
insb
movsl
test
xchg
and
ror
aam
sub
in
mov
cmp
push
movsl
fcmovu
imul
inc
cmc
in
movsb
add
jb
inc
xlat
jne
mov
xor
neg
leave
aam
adc
xor
mov
das
imul
and
push
dec
mov
push
dec
and
rorl
and
aaa
lods
orl
std
pusha
lods
fnstsw
push
popf
cmc
xchg
les
pop
mov
adc
popa
rcll
push
in
lahf
inc
scas
inc
dec
dec
adc
pop
fucom
or
push
ljmp
loopne
out
stc
xor
popf
and
loopne
pop
aam
fnstcw
lret
jae
add
outsl
cld
xchg
dec
xor
addb
push
repnz
cmp
mov
fidivl
adc
adc
xor
gs
aad
aam
xor
in
add
lret
leave
inc
jno
push
pop
push
mov
jmp
pop
mulb
adc
push
sbb
bound
lret
pop
iret
cwtl
gs
mov
push
push
inc
outsb
xor
jae
shll
imul
adc
xchg
add
mov
sbb
cli
fldenv
fists
outsl
neg
push
shrl
inc
mov
out
movsl
dec
sub
mov
mov
mov
fdivl
dec
lock
inc
test
shrb
js
sarb
mov
clc
mov
or
mov
sbb
jbe
lods
loop
mov
add
lcall
pop
sahf
lahf
out
xchg
and
inc
or
loope
push
dec
sub
inc
sub
pop
cmp
loope
push
and
in
push
cmp
in
ja
loop
ja
leave
lock
roll
pop
mov
mov
nop
cmpsl
xor
jae
mov
pop
push
xchg
cmp
or
arpl
add
ljmp
mov
faddl
push
test
test
rol
test
out
adc
xchg
sbb
sub
movsb
movsl
xchg
dec
pop
shlb
sti
pop
clc
fsubrl
push
mov
lds
dec
lahf
xchg
inc
vorps
inc
pop
push
mov
stos
push
negl
mov
adc
sub
shrb
cmp
pop
fsub
mov
and
out
inc
push
scas
push
lcall
lock
gs
jecxz
mov
fnstenv
dec
sub
ds
jmp
xchg
sarl
fwait
jle
lahf
mov
mov
mov
aad
ss
test
or
lock
lret
pop
mov
xchg
xor
jp
call
dec
lahf
mov
sub
xchg
dec
sbb
and
loope
push
lret
pop
or
cmp
arpl
test
sti
sub
mov
pop
adc
lahf
xor
push
inc
into
fistps
shrb
mov
data16
add
or
or
mov
xchg
fcmovnu
xchg
add
sbb
mov
popa
adc
divb
sbb
xor
out
pop
mov
sbb
popf
into
sbb
test
mov
insl
or
cmp
lcall
mov
push
push
adc
orl
fwait
xor
mov
cmp
sbb
aas
inc
add
aas
shrl
mov
sub
push
add
sti
repnz
mov
or
cmp
jmp
jnp
movsl
mov
pop
orb
dec
or
in
outsb
popa
pusha
lret
gs
idiv
xchg
rorl
inc
push
mov
movsl
pop
push
test
fs
jmp
cmp
int3
dec
jp
add
icebp
in
adc
xchg
dec
xchg
repz
pop
ds
sub
cmc
cltd
ja
adc
push
fsts
movsl
xchg
dec
out
adc
addr16
xchg
cmp
mov
inc
stos
sub
clc
push
push
enter
mov
jae
in
das
jnp
dec
addr16
inc
insb
lods
scas
js
sub
cmp
insb
xor
xchg
push
mov
ds
jne
bound
pop
repnz
ljmp
std
push
dec
dec
repnz
pop
push
lock
xlat
call
jo
xor
mov
cmp
arpl
test
push
lea
sbb
mov
adc
cmp
stos
rclb
push
pop
mov
orb
sbb
add
mov
cmp
mov
setl
mov
cmc
xchg
sub
jbe
sbbb
movsb
jb
and
adc
fsubrl
test
jp
outsb
cmp
rcrb
add
sub
loopne
push
push
mov
xchg
aam
pop
outsb
push
jl
bound
lcall
mov
add
mov
iret
hlt
push
aam
rcll
out
loopne
in
push
and
inc
dec
loope
lock
push
dec
fwait
lcall
pop
rol
stos
adc
fisttpll
pop
test
dec
and
pop
lea
pusha
lret
es
movsl
and
test
stos
pop
and
dec
in
das
repnz
enter
mov
pop
adc
enter
rorl
cmp
ror
push
lahf
fs
push
ljmp
jl
je
or
xchg
nop
mov
push
scas
cwtl
and
ljmp
and
shlb
mov
cld
aaa
sti
sbb
test
imul
sbbb
adc
xchg
jo
cmpsb
xchg
dec
jae
int3
mov
add
mov
sbb
push
mov
in
pushf
mov
lock
into
das
xchg
mov
xor
inc
jo
xchg
inc
sbb
ds
js
mov
push
dec
inc
mov
dec
shll
push
rcr
imul
dec
or
cmp
sub
fwait
cmp
adc
inc
outsb
int
and
outsb
sbb
mov
xchg
dec
push
cwtl
mov
cmp
bound
movsb
xchg
fidivs
popf
js
mov
and
ss
cmpsb
enter
in
insb
popa
mov
sbb
jecxz
cmpsb
insl
sbb
andb
or
jmp
xor
fbstp
stc
cmpsb
adc
mov
or
or
mov
loop
push
jle
imul
lret
hlt
adc
out
cmpsl
and
sub
insl
xchg
pop
jns
arpl
insb
mov
scas
mov
inc
pop
in
mov
out
mov
popf
cld
outsl
adc
lea
mov
push
cmpsb
stos
jno
fcom
xor
push
or
ljmp
mov
cld
mov
adc
sbb
dec
jbe
inc
mov
cli
enter
and
or
movsl
xor
movsb
es
fisubrl
rcrb
push
jae,pn
ds
cmpsb
xchg
xor
and
cmp
push
insb
orb
lds
outsb
mov
cli
mov
xor
adc
stc
add
ror
xor
sub
pop
xorb
aad
pop
cmp
adc
mov
movsl
pushf
outsb
and
loopne
xchg
fists
fldenv
inc
mov
insl
repz
int
push
pop
jbe
or
push
jns
add
and
int3
cmpsb
lock
xor
push
pop
and
mov
lret
nop
das
push
aad
mov
out
jl
pop
lret
mov
cs
jge
gs
cmp
sti
pop
fnsave
push
jae
push
out
mov
cmp
enter
push
push
aam
cmp
adc
or
xor
push
sub
out
sub
add
or
stos
lret
cmpsl
mov
and
cs
lds
add
sahf
add
jbe
jp
or
insl
test
scas
jnp
fildll
add
sahf
fsubs
add
pop
add
and
adc
mov
mov
call
icebp
fnsave
mov
push
mov
and
lock
inc
add
push
pop
cmpb
aaa
mov
sub
pop
xor
jbe
popa
mov
out
insb
iret
mov
mov
mov
fbstp
or
push
in
cmpb
enter
lcall
movsb
or
push
clc
es
mov
mov
rcrb
mov
pusha
cmp
dec
sbb
in
cld
int
pusha
test
rcrb
imul
lret
jp
incb
sarl
jl
lock
addr16
mov
scas
add
rorb
scas
addb
popf
mov
jns
jae
push
cwtl
cmp
jo
stos
sub
xchg
ret
fmull
jge
les
lock
bound
pop
mov
push
cltd
jae
mov
sbb
adc
cmp
pushf
adc
jne
sub
xorb
sar
xchg
cmp
xor
xchg
jmpw
jns
mov
and
je
cmp
jl
push
inc
inc
mov
test
lea
mov
pushf
cmp
in
and
fsts
enter
mov
pop
out
cmp
loop
cmpsb
and
js
sar
jge
mov
mov
movsl
lds
cmp
ficoms
fwait
mulb
hlt
sub
ljmp
rcrb
sbb
sub
test
sarb
ret
nop
cli
cmc
xor
das
and
adc
in
cmpsl
cmp
sub
or
popf
int
adc
cwtl
sub
movsb
mov
dec
jnp
cmp
and
mov
call
sub
jecxz
and
xchg
int3
mov
or
mov
or
daa
sub
push
cmc
and
lods
das
sbb
mov
push
dec
fs
dec
fwait
jo
inc
ds
int
std
les
clc
sbb
mov
or
iret
dec
shrb
in
roll
push
cmc
popf
xor
jnp
mov
sbb
incb
mov
insb
fsubs
rcrb
cmpsb
mov
and
sbb
in
sahf
sti
fisubl
push
fcoms
sub
xchg
fnstsw
mov
xchg
and
pop
dec
lea
cmp
sbb
mov
push
cmp
sbb
out
fs
pushf
cmp
or
leave
cmpsb
into
std
negl
enter
andb
dec
sbb
enter
jge
in
inc
sbbb
lret
rcll
or
mov
mov
sub
xor
aad
out
sbb
ja
aas
sub
cli
ds
es
stc
fisubrl
iret
mov
enter
cmp
or
ficoms
dec
inc
lret
dec
cwtl
adc
fs
mov
out
or
mov
pop
mov
dec
imul
pop
loop
das
das
call
add
sub
insb
je
cli
out
pop
mov
xor
mov
xchg
jno
fldl
inc
cmp
mov
cld
fwait
repnz
insl
ret
and
int
leave
xchg
cmpsb
xchg
jae
pusha
push
xchg
jne
mov
jl
hlt
mov
arpl
xor
mov
sub
sbb
cld
adc
and
subps
inc
mov
pop
scas
das
mov
and
xchg
rolb
jno
out
cwtl
xor
mov
push
mov
aaa
lods
jle
add
dec
push
and
repnz
xchg
arpl
ficomps
addr16
fistpll
in
imul
cli
cwtl
testb
lret
gs
push
jnp
pop
sbb
call
orb
add
pop
out
stos
mov
jmp
fs
jmp
mov
pop
js
push
fstl
mov
mov
cli
cmpsb
in
nop
lret
aam
pop
or
or
sbb
push
push
movsb
mov
sub
push
subb
jl
test
lcall
dec
scas
cmp
ljmp
test
scas
push
adc
adcl
xor
cmp
push
xchg
and
ud0
mov
flds
je
dec
xor
roll
push
inc
cmp
inc
test
mov
mov
outsl
stc
rcrl
cmc
mov
in
fwait
inc
mov
out
les
add
les
out
in
jnp
imul
shll
lock
cwtl
stos
sbb
pop
popf
test
pop
inc
mov
dec
pop
js
push
mov
jno
xor
int3
loopne
dec
pop
and
adc
mov
dec
pop
test
push
xlat
roll
test
sbb
mov
xor
dec
ds
gs
in
add
xor
lods
idivl
jmp
push
dec
imul
inc
or
push
mov
roll
mov
je
fsubl
xorb
mov
cmp
jno
xchg
pop
mov
or
test
mov
loope
test
adc
pusha
mov
and
stc
popa
scas
cltd
outsl
xor
das
lods
jb
roll
std
mov
and
fsubl
cmp
fcomi
xchg
or
int
fistps
mov
pop
pop
dec
xor
pushl
adc
out
loopne
sahf
push
nop
out
clc
pop
pop
sbbb
out
insl
das
repz
mov
mov
scas
sahf
xchg
ret
push
xchg
mov
cmpsb
dec
insb
ficomps
dec
cmp
hlt
inc
xchg
cs
insb
mov
lret
inc
js
mov
jmp
sbb
push
in
sarb
loop
or
int3
mov
loope
xchg
push
pop
add
fxch
pop
fistps
repnz
jo
cmp
das
testl
push
popa
or
inc
enter
lock
pop
fwait
sbb
cmovno
mov
mov
imulb
ss
mov
mov
fimuls
mov
sub
mov
jecxz
xchg
and
test
aam
nop
js
pop
push
mov
in
add
fnsave
or
or
adc
stos
inc
sub
pop
adc
lret
mov
bound
push
inc
add
mov
adc
jno
lcall
add
jmp
or
push
push
les
movsb
mov
mov
pushf
in
imul
out
test
sbb
iret
lret
push
xchg
push
outsl
daa
or
xor
dec
sbb
dec
push
sbbb
push
xor
pop
jnp
and
jns
adc
xor
jg
call
movb
lahf
mov
cmp
cltd
pop
mov
lret
pushf
pop
jle
test
and
sbb
jg
or
out
inc
inc
popf
mov
add
gs
mov
mov
clc
jne
pop
ss
fs
xorl
popf
push
cmp
xlat
or
or
test
arpl
scas
pop
bound
mov
pop
int3
pop
adc
insl
es
in
mov
out
mov
mov
lret
jno
addl
rcrb
out
push
xchg
mov
add
push
insl
dec
test
movsb
sahf
jle
mov
jo
shrb
js
inc
icebp
testb
fnsave
aam
in
roll
and
ljmp
fstpl
aad
lret
rolb
dec
mov
faddl
ds
in
push
dec
jbe
ret
cltd
movsl
mov
xor
and
ds
pop
js
rcr
test
push
mov
lods
int
xor
sub
cmp
pop
arpl
mov
cmp
aaa
mov
out
repnz
and
push
ss
insl
inc
mov
mov
sbb
xlat
out
addr16
fcoms
je
add
lahf
loop
push
mov
mov
ja
fmull
sarb
mov
adc
fimull
pop
sub
cmp
jmp
aas
and
jnp
cmp
dec
in
out
daa
push
or
adc
and
mov
mov
repz
enter
push
data16
mov
inc
or
imul
int3
xchg
push
push
fsubl
movsb
fmuls
cmc
fdivp
outsb
stos
push
hlt
add
gs
jmp
sub
movsl
inc
jle
movsbl
cmp
dec
adc
inc
nop
mov
jl
cmp
lods
mov
mov
cmpsb
pop
les
xchg
xor
xor
jmp
mov
popf
cmpsl
inc
xchg
xorl
clc
mov
addr16
out
aas
mov
xor
xor
dec
pusha
and
mov
cmp
sbb
sbb
out
dec
dec
inc
lods
adc
test
outsl
cld
push
inc
mov
sub
xchg
push
pop
mov
xchg
aam
call
outsb
dec
xor
or
loope
cmp
std
mov
lcall
jnp
test
inc
call
cmpsb
pop
jno
test
jmp
decb
imul
daa
or
pop
leave
lret
cmp
ret
adc
or
insl
add
add
cli
push
flds
outsl
mov
dec
jbe
shll
jle
pop
sub
sbb
js
ret
xor
mov
ret
xor
out
push
jp
gs
inc
and
sub
adc
jecxz
in
sub
ret
adcb
add
inc
leave
mov
pop
push
sub
xor
or
jne
inc
adc
add
mov
or
pushf
movsl
mov
ljmp
pop
lret
pop
loop
mov
cmp
sti
lcall
outsl
mov
pop
imull
sbb
inc
cmp
jns
add
idivb
daa
jo
movsb
imul
and
imul
xor
pop
adc
sbb
iret
lcall
filds
mov
xor
gs
mov
mov
addb
fidivl
rcll
dec
mov
stos
sbb
icebp
lds
push
shl
adcl
sbb
dec
fsubs
inc
outsb
push
inc
xchg
inc
inc
add
mov
repnz
push
sbbb
jg
mov
mov
imul
cmp
jnp
cmc
inc
jl
xchg
sbb
sub
fimull
xor
xor
cmpsb
add
rclb
xchg
inc
out
or
mov
add
lret
mov
inc
xor
movsl
pop
cwtl
add
bound
pop
mov
popl
imull
xor
push
inc
mov
xchg
scas
in
push
je
pop
sti
data16
clc
popa
into
jno
xchg
jmp
ljmp
cmp
in
inc
mov
push
adcl
adc
xor
shrb
xchg
and
xchg
aaa
mov
xchg
push
adc
jmp
jbe
or
xorb
mov
data16
adc
inc
adc
outsb
imul
xor
cwtl
jne
rorb
and
xchg
bound
push
jle
push
push
lods
and
test
insb
pop
add
shl
cmc
sub
adc
scas
adc
cld
lods
sbb
fcomi
fwait
ret
outsb
adc
mov
xor
frstor
into
rdtsc
out
pop
lods
test
jge
push
shll
xor
push
and
inc
mov
pop
pop
or
xorl
sub
inc
adc
add
add
shr
pop
push
imul
lea
mov
popf
rcll
cltd
lcall
pop
pop
xor
jge
pop
popa
dec
mov
int
and
mov
mov
pop
std
add
mov
pop
adc
pop
es
xchg
loope
daa
jnp
push
mov
push
frstor
loop
push
testl
xchg
add
push
mov
repz
xchg
out
int
mov
lock
mov
mov
jle
dec
adc
or
add
ds
popf
push
repnz
xchg
lds
jg
movsb
sub
jg
es
outsl
cmp
imul
leave
or
in
push
mov
xor
fdivs
fildll
js
roll
imul
push
push
outsb
sbb
icebp
mov
shr
push
das
insl
jmp
sahf
or
aad
or
clc
add
rol
repz
outsl
ret
int3
or
mov
jbe
jp
xor
popa
jmp
leave
mov
push
cmp
outsl
fldcw
inc
jbe
icebp
mul
test
test
scas
fnstcw
sbb
sub
mov
and
cmp
pop
mov
cmp
call
or
pop
dec
movsb
in
or
dec
icebp
fwait
je
pop
pop
lock
stos
cwtl
mov
add
or
inc
mov
sub
clc
xor
cmp
lret
insl
mov
repz
pop
fwait
insl
out
mov
pop
xchg
push
and
lret
xor
pop
into
push
xchg
das
rorb
inc
xor
pop
cmp
daa
jae
xchg
adc
inc
sti
outsb
out
mov
pop
add
mov
inc
out
sarl
arpl
insl
sti
leave
test
sbb
test
sbb
adc
loope
push
jmp
push
sub
sub
fdivrs
xlat
ljmp
jg
faddl
sbb
sarl
push
jo
cmp
hlt
and
fbstp
cli
sub
xchg
mov
pop
pop
stos
cmc
out
sarb
mov
stos
rolb
or
xor
imul
mov
sti
nop
jno
inc
aam
ja
xor
and
or
jl
ret
fcmovb
and
sahf
sub
push
push
sbb
in
xchg
mov
aaa
sbb
jnp
adc
xchg
pusha
popa
das
mov
cmp
jae
mov
xchg
adc
mov
sbbl
fstl
mov
ret
mov
loopne
mov
fadd
sbb
xchg
jp
adc
add
aaa
loop
and
test
jmp
mov
xor
cmp
imul
sub
sub
leave
sbb
mov
sub
inc
pop
adcl
or
rclb
je
aad
pop
lret
repnz
xor
mov
pop
inc
add
add
inc
sub
pop
mulb
test
add
std
xor
jl
inc
pushf
xor
sti
cwtl
mov
fcoms
idiv
les
pop
adc
sbb
fsubrl
jmp
mov
push
decl
fbstp
test
in
add
insb
pop
mov
sbb
fwait
xchg
push
ja
rcrb
ss
cli
imull
or
xlat
adc
mov
mov
adc
test
dec
sub
xchg
in
imul
sti
push
adc
ret
adc
jbe
push
es
fadds
mov
into
add
outsl
nop
iret
dec
aad
pop
lcall
cmp
ret
mov
faddl
sti
popf
inc
iret
pop
mov
pop
cmp
inc
cmp
push
out
add
inc
test
dec
and
inc
iret
addb
jge
es
aam
insl
xor
icebp
cmc
iret
cld
pop
adc
xchg
jmp
and
inc
mov
mov
jnp,pt
mov
test
xor
sbbl
sub
sti
and
push
xor
xor
or
xchg
loopne
cmpsl
mov
movl
push
mov
mov
in
push
sarl
mov
outsb
mov
lcall
cld
jg
cmp
dec
or
jnp
mov
in
pop
out
pushf
push
xchg
dec
stc
xorl
add
pushf
insl
cmp
pop
mov
shll
rcl
or
ret
pop
and
jb
cmpsb
enter
inc
jge
ss
in
pusha
pop
popf
pop
push
insl
push
xchg
call
mov
iret
movsl
sbb
push
cmovo
fwait
test
push
sub
out
mov
out
or
xlat
mov
add
pop
mov
pop
push
loop
pop
iret
and
into
xchg
sub
ret
pop
movsb
arpl
out
sbb
jl
push
or
popa
addr16
dec
mov
inc
xchg
cmc
dec
mov
in
or
mov
andl
or
xchg
cmpb
pusha
fildl
pop
jns
lds
mov
test
xchg
mov
inc
data16
aaa
das
xor
in
pop
imul
pusha
mov
mov
pop
stos
out
add
ds
inc
ss
faddp
lds
aas
push
mov
in
lds
fimuls
mov
jmp
xchg
xor
pop
mov
cld
dec
pop
add
jb
rolb
ds
xchg
pop
mov
push
inc
inc
xchg
sub
lahf
mov
inc
cmc
inc
lock
popa
or
bnd
xchg
xor
push
pop
cltd
cld
shlb
mov
sub
push
mov
sub
add
sbb
dec
push
jl
jo
pop
aad
orb
cmp
fwait
sbb
pop
sub
scas
xchg
ja
add
fisubl
adc
pop
adc
cmp
negl
mov
dec
mov
sahf
fdivrs
or
scas
jmp
sub
lret
xchg
jno
aad
jp
loope
add
scas
pop
push
dec
inc
mov
aaa
or
iret
jecxz
xchg
push
movb
mov
pop
sbb
fistpl
inc
push
lret
fcompl
sbb
sti
dec
dec
jecxz
mov
inc
mov
mov
pop
in
in
add
dec
lods
mov
int
push
push
jne
addb
fcomps
daa
cs
orl
rcl
jge
xlat
cmp
lods
sti
movsl
dec
jle
mov
movsb
add
add
cmp
cli
loope
inc
adc
add
push
adc
popf
mov
xchg
push
out
andb
xor
sbb
adc
push
fmuls
sbb
add
out
jle
adc
jmp
mov
rcl
mov
popf
out
xchg
ret
fstps
pop
es
pop
xor
lret
cltd
lret
cmp
imul
movsb
in
mov
push
push
out
dec
sub
cmp
mov
push
sub
dec
frstor
jne
add
pop
je
mov
clc
jecxz
pusha
xchg
lahf
xchg
fists
mov
dec
or
or
push
stos
mov
add
dec
ljmp
pop
xor
mov
sbb
mov
push
dec
outsl
in
std
mov
push
fcmove
divl
jno
lahf
ficompl
xchg
sub
aad
lock
sub
xor
push
xor
dec
in
dec
iret
mov
repnz
jae
enter
pop
ficompl
push
push
dec
fwait
ja
inc
inc
inc
mov
sub
stos
dec
add
arpl
xor
repnz
dec
jp
sti
inc
mov
mov
xchg
pop
or
int3
cmp
xor
cmp
push
mov
mov
push
mov
cs
cmp
pop
mov
jae
jbe
sbbl
cmpsl
popf
add
testb
cwtl
loopne
push
in
jae
data16
sub
movsb
mov
fcoms
mov
imul
mov
ret
pop
outsl
mov
test
aaa
fldl
dec
jmp
ret
mov
jbe
inc
add
das
xchg
out
shl
addl
adc
jl
arpl
dec
sbb
push
fs
mov
mov
sbb
fmull
fsubl
ret
xor
or
push
mov
sbb
mov
hlt
test
add
sahf
arpl
jb
pop
mov
gs
adc
inc
add
dec
sbb
hlt
fiaddl
jb
js
lea
sub
dec
xchg
mov
dec
cmpsb
mov
scas
pop
sub
mov
mov
cld
dec
gs
rolb
push
movsl
mov
in
xlat
loopne
lcall
jae
xor
inc
aam
pop
jecxz
mov
jnp
sbb
in
mov
jp
dec
push
jl
idivb
sub
scas
jnp
push
sbb
adc
leave
sbb
or
ljmp
fs
sbbl
iret
sbb
movsb
xchg
xchg
clc
inc
cmc
sub
pop
outsl
add
and
int3
add
mov
mov
dec
mov
rcr
sub
lods
into
ss
adc
stc
xchg
xchg
dec
inc
inc
jb
imul
dec
mov
sbb
xor
mov
and
in
sub
mov
movl
int
sbb
pop
andb
jo
push
mul
das
fwait
rcll
out
fmull
mov
push
jmp
dec
xchg
loope
lahf
insb
xor
pop
mov
and
xchg
imul
push
fnsave
scas
addr16
push
ja
daa
or
jecxz
ret
sbb
inc
push
and
dec
icebp
mov
sti
xchg
sub
add
and
pop
in
jne
in
addr16
push
outsl
or
jo
mov
inc
push
mov
adc
outsb
fsubs
mov
lods
inc
sub
fmull
mov
iret
jp
mov
mov
adc
fmull
into
jbe
mov
or
push
jae
fdivl
mull
xchg
cmc
mov
sub
xlat
loope
xor
jae
cli
fistpll
addl
insl
xchg
aas
fsubrl
hlt
mov
push
cmp
pop
mov
ds
sbb
pop
imul
sbb
cmp
lret
inc
in
repnz
mov
out
out
inc
add
and
leave
test
pop
sbb
loopne
clc
repz
jp
ss
outsl
fcmovbe
leave
imul
sub
ret
xchg
or
inc
fldt
dec
ficompl
cmpsb
or
movsb
inc
into
mov
xor
xor
sub
push
mov
movups
sub
ja
lret
and
or
clc
inc
test
mov
sbb
jbe
repnz
xchg
orb
das
jle
dec
scas
scas
cli
bswap
enter
jbe
das
je,pn
sbb
jb
adc
adc
adcl
inc
stos
es
mov
fwait
test
jl
push
xor
adc
clc
adc
scas
cmp
loop
in
and
fldl
jno
popa
adc
daa
inc
push
adc
or
leave
out
out
mov
or
leave
jo
js
mov
adc
gs
xorb
out
mov
stos
fwait
jbe
fnstsw
or
inc
push
jmp
push
and
pop
fstps
or
in
dec
hlt
jmp
dec
mulb
in
std
imul
mov
and
mov
leave
pop
sbb
adc
scas
xchg
inc
push
mov
ret
popf
sahf
cli
and
psubusb
xor
mov
shlb
cmp
cmpsl
mov
push
bound
ds
addb
mov
cld
push
inc
pop
aas
mov
test
ss
or
dec
ss
sbb
fnsaves
cmc
pop
push
fidivl
inc
jecxz
inc
jo
dec
mov
dec
pop
cmp
xor
scas
pop
dec
gs
push
mov
orb
fdivl
arpl
dec
xchg
pusha
ljmp
cmpsl
and
repnz
stos
jb
inc
push
push
mov
dec
push
xchg
les
test
in
pop
test
dec
nop
mov
fwait
imul
icebp
push
jo
cmp
ret
add
sahf
push
pop
xchg
repz
lods
cmc
in
aaa
add
jb
iret
incb
das
sbb
cmpsl
jb
xor
inc
sahf
push
cld
dec
nop
js
mov
adc
mov
adc
dec
or
out
and
insl
jo
add
ss
mov
and
xor
inc
add
loopne
adc
in
fdivs
ljmp
inc
cmp
lock
add
jae
ret
rcrl
sti
add
xchg
xchg
cmpsl
pop
mov
not
fcomps
test
lock
sbb
sub
inc
pop
mov
push
daa
stos
imul
ja
popa
pop
arpl
pop
movsb
dec
lret
jae
in
std
test
sbb
das
xchg
outsl
mov
cld
inc
rol
add
push
or
insl
mov
lea
and
in
xor
leave
in
sarl
add
and
jp
setns
divb
xchg
das
cmc
inc
inc
int3
shlb
xlat
stc
sub
ja
popf
xor
adc
pop
add
sahf
sub
test
cmpsl
push
or
or
push
sti
jb
sub
loope
aad
adc
sahf
xchg
push
and
xor
lcall
cmpsl
inc
outsb
in
pop
and
add
shrl
xchg
cwtl
or
xor
push
jns
xor
xor
hlt
cmp
lods
mov
jne
or
jne
popf
test
adcl
xchg
in
aad
push
repz
out
imul
fsubs
ud2
int
cmp
add
add
stc
shlb
cmp
xchg
sub
push
mov
add
pop
jl
test
cmp
xchg
fldcw
fs
leave
mov
push
cld
testl
daa
bound
jge
mov
mov
push
pop
inc
adc
cmp
sbb
jo
jge
ffree
xchg
les
mov
leave
jmp
pop
pop
sub
dec
aam
xor
gs
fbld
sti
dec
xor
sbb
sbb
in
xor
or
lock
add
xor
mov
xchg
rolb
and
lods
fsubs
xor
clc
xor
inc
ret
dec
lods
mov
push
mov
jp
test
shl
insb
mov
lret
loope
xlat
fs
push
jbe
mov
hlt
nop
sub
jne
push
fisttpl
sti
inc
push
in
lock
rol
inc
lock
adc
repnz
loop
sub
rcll
sub
push
push
jg
lea
incb
adc
stos
rcll
pop
xchg
lods
cltd
pop
jmp
mov
jae
mov
fcmovu
mov
bound
push
lea
sti
pop
pop
mov
jae
std
jae
jg
rcl
cli
pop
sub
jle
sbb
lcall
stc
clc
mov
mov
ja
icebp
adc
arpl
xchg
std
mov
dec
das
mov
mov
push
popf
add
and
es
clc
add
imul
xchg
adc
mov
push
fstpt
sbb
scas
loop
mov
addr16
loopne
and
out
aaa
in
repz
pop
imul
and
or
sbb
sbbl
xchg
je
scas
xor
addr16
popf
popf
dec
adc
xor
mov
das
adc
lret
or
cltd
cli
in
rcll
idivb
xor
jno
call
ret
cs
nop
jp
adc
xor
pop
jbe
loopne
outsb
sbb
pusha
test
test
push
ja
js
push
ss
repz
out
fnstcw
repnz
fwait
pop
adc
add
add
cmp
popl
fadd
out
jne
nop
xchg
imul
mov
push
add
xchg
cmp
mov
sbb
mov
cmpl
scas
mov
outsl
jae
call
dec
adc
sub
addb
fistpl
fisttpll
test
loope
and
loop
out
mov
daa
fidivrs
loope
add
int
dec
outsl
pop
push
repnz
push
insl
sub
or
push
int
test
sub
mov
stos
xchg
or
test
sub
jg
push
repz
lds
adc
and
inc
mov
movsl
out
movsb
divb
mov
iret
sar
test
xchg
ja
dec
ja
or
adc
mov
pop
lea
insb
pop
or
push
pop
inc
popa
push
xacquire
out
sub
pop
inc
ficoml
data16
xchg
stos
inc
add
mov
icebp
cmp
ror
adc
xlat
jmp
lods
fiaddl
xor
notb
lods
in
rcl
repnz
push
fists
mov
mov
mov
lock
sarb
stos
and
mov
hlt
cmp
cmp
out
jp
dec
fdivrs
in
mov
pushf
jl
push
mov
or
push
mov
mov
xor
add
sbb
cs
leave
lods
dec
and
push
xor
dec
xchg
insl
jno
and
cmp
add
jp
adc
or
cmp
push
cmp
or
adc
call
aad
push
roll
enter
pop
jecxz
into
popa
jle
cmp
jl
fcomi
xor
lret
adcb
call
sbb
sbb
test
pop
pusha
inc
andb
inc
cmpsb
icebp
sub
pop
out
popf
stos
xor
test
dec
add
cmp
mov
mov
dec
xchg
xor
sbb
add
push
mov
cli
pop
scas
ss
dec
aam
cwtl
das
std
jo
int3
in
out
in
push
xor
cli
mov
push
sbb
sub
fstl
xor
lock
dec
sub
repz
subl
xchg
es
push
push
and
xor
inc
xchg
pop
in
outsl
cmpsl
jns
add
and
rorl
sub
seta
jno
xchg
sbb
xchg
and
mov
js
das
ja
cmp
xor
cmpsb
int3
out
pop
mov
mov
ds
nop
dec
ficomps
fsubrs
mov
icebp
mov
add
mov
insl
mov
outsb
loopne
out
sbb
xchg
pop
mov
push
mov
inc
mov
cmpb
mov
add
adc
sub
push
les
shll
add
push
cmpsl
insb
sub
push
roll
adc
cmp
jmp
xlat
push
sub
repnz
mov
sub
scas
inc
into
sub
mov
out
xchg
movsl
bound
push
or
dec
push
ret
cmpl
xor
jg
jnp
lods
movsb
pop
adc
outsb
gs
or
xor
sbb
fs
pop
xor
mov
testl
sbb
xor
cmc
push
sbb
xchg
cmpsl
loopne
dec
push
movsl
sbb
aaa
adc
lcall
flds
xchg
pop
jnp
and
add
flds
imull
popf
sub
or
into
mov
lds
and
fwait
xchg
sub
cmp
dec
jp
mov
and
lret
das
addb
sub
push
int
insb
mov
mov
sti
pop
cmpsl
data16
lods
mov
in
ljmp
mov
xchg
pushf
cmp
fbld
out
cmpsb
lret
shl
pop
repz
or
push
jb
xor
or
mov
nop
push
aam
bound
adc
ret
push
stos
popf
or
xchg
pop
das
jae
or
jne
jb
pop
and
cli
mov
pushf
sbb
add
xor
subb
and
sub
stos
mov
fwait
and
push
loop
dec
or
dec
pop
lock
inc
outsb
pop
movsl
mov
out
loopne
adc
xor
addb
jle
movsl
jne
scas
ljmp
inc
inc
les
sbb
xor
fdivl
shll
cmp
imul
add
cmpsb
loopne
aad
les
addb
inc
hlt
xchg
cmc
orb
loop
add
pop
mov
pop
popa
stc
dec
and
add
pushf
mov
pop
pop
lcall
movsl
jbe
adc
add
jbe
push
enter
jl
into
aad
inc
push
lahf
xchg
scas
jle
out
pop
push
loopne
aas
std
lods
daa
sbbb
and
insb
xchg
scas
leave
addr16
nop
dec
mov
pop
repnz
in
sbb
testl
imul
nop
nop
xor
mov
pop
sbb
stos
jno
and
dec
fwait
xchg
das
dec
out
push
test
mov
arpl
or
sub
aad
dec
add
cwtl
adc
mov
mov
imull
int
hlt
adc
mov
dec
paddsb
add
push
iret
lea
push
std
cmc
test
and
pop
es
xchg
test
mov
mov
loopne
repnz
or
repz
mov
push
dec
pop
call
xchg
bound
shl
mov
add
mov
lret
sbb
repz
adc
push
adc
inc
not
lea
test
lods
test
imull
hlt
mov
testl
mov
mov
test
mov
xchg
lea
inc
xchg
push
or
add
scas
mov
cmpb
add
orb
jnp
inc
in
push
fcomps
aam
inc
lds
pop
pushf
out
cld
imul
popa
fcom
in
in
mov
jnp
mov
es
push
sub
cmc
push
push
push
aam
xchg
repnz
dec
add
xchg
fs
lret
inc
test
adc
cli
call
fs
pop
ret
mov
imul
jo
rclb
shl
rcrb
dec
adcb
fxch
rcrb
test
push
mov
mov
aas
popa
inc
cmp
lret
pop
mov
test
pop
and
jmp
sbb
xchg
lcall
inc
movsl
andl
mov
and
shlb
cld
xor
shlb
data16
mov
addl
fsubl
push
xor
jl
movsl
fscale
xor
dec
lea
fldpi
mov
add
fs
mov
xchg
sbb
mov
mov
or
mov
insl
add
orl
mov
outsl
dec
lea
add
fs
push
fimuls
shrl
cmpsb
je
push
inc
aaa
xor
mov
lods
adc
mov
popf
mov
lock
repz
cmc
inc
add
test
push
dec
shl
lods
shrb
xor
cld
adc
cld
or
mov
xor
and
fadds
xchg
jge
adc
cmpsl
out
jbe
cwtl
ret
mov
or
mov
jne
lcall
adc
aas
lods
mov
sbb
lcall
xor
mov
xor
pop
or
jno
dec
push
fsubr
push
icebp
cld
fcomp
mulb
cmp
adc
pop
data16
jno,pn
ljmp
test
shll
lahf
or
jmp
rol
movsl
rclb
mov
in
sbb
push
andb
inc
xchg
mov
lret
sub
push
sub
push
aaa
inc
in
enter
mov
sub
push
rcrb
ret
sti
inc
bound
add
jecxz
movsb
adc
inc
add
das
sbb
fsts
scas
pand
mov
in
push
push
and
fadd
or
out
sub
sub
sub
mov
xor
mov
or
mov
pop
lds
fsubr
clc
jae
mov
imul
pop
into
aam
pusha
cmpsl
js
dec
out
clc
xchg
sbb
cmp
add
cmp
scas
add
sbb
addr16
inc
fwait
shll
or
rolb
aaa
aad
repz
xor
sbb
aam
adc
les
mov
ret
adc
dec
sbb
das
push
push
dec
jecxz
sbb
pop
ja
cltd
fimuls
adc
mov
aas
sbb
fcmovbe
jecxz
sbb
icebp
and
push
add
xlat
pushf
pop
imul
mov
and
inc
subb
es
inc
fbld
out
aaa
jo
mov
clc
sbb
enter
jnp
and
sti
jne
loopne
mov
dec
pop
arpl
shr
dec
lcall
jle
dec
cmp
cld
inc
subb
jo
pop
push
or
loopne
sbb
out
adc
dec
movsl
and
jne
movsl
mov
imul
push
jne
popf
cli
adc
mov
subl
addl
cmpb
negl
dec
cmpsb
mov
mov
xor
popa
xor
xchg
test
mov
mov
xor
aam
into
mov
xchg
aam
add
xlat
adc
filds
and
aad
ljmp
and
and
in
movsb
cmpsl
std
jns
xchg
lock
and
int
daa
scas
cmc
mov
adc
fcmovnb
push
scas
ds
pop
sub
adc
fisubrl
shl
xchg
xchg
test
pop
sbb
mov
shr
cmp
jae
push
jae
iret
bound
jo
dec
test
jbe
scas
adc
push
loop
push
xchg
pusha
mov
cmp
aaa
adc
insl
inc
and
hlt
shr
push
add
sti
add
cli
in
aam
imul
ss
ret
orl
and
es
incl
notl
lock
sub
cmc
push
lods
push
or
popf
add
mov
fcmovbe
adcb
mov
pop
push
mov
mov
inc
fldenv
mov
jle
xor
add
and
and
pop
jg
adc
test
cld
pop
xchg
cmp
rcll
fcomps
push
jl
or
lahf
push
outsl
cwtl
enter
adc
mov
mov
leave
push
adc
or
hlt
pop
xor
mov
or
or
mov
repz
filds
xor
mov
movsb
jo
aaa
mov
js
pop
xchg
rcrb
orb
int3
dec
push
push
out
idivb
sbb
or
mov
or
loope
lar
sub
aaa
pop
cs
jmp
je
loopne
icebp
jl,pt
adc
inc
pop
dec
nop
mov
add
push
xchg
and
fwait
arpl
mov
insb
xchg
inc
test
loop
and
adc
jmp
and
divb
push
ss
frstor
and
cltd
jns
sti
ss
stc
movsb
loop
test
adc
adc
pusha
insb
imul
inc
mov
repnz
xchg
inc
cmp
or
fnstcw
mov
fnstenv
sbb
jle
push
pusha
xor
fisubl
xchg
mov
call
cmp
rorb
push
cmp
out
in
inc
fldt
add
xor
int3
test
adc
popa
push
outsb
lods
jbe
stos
mov
je
cli
jnp
and
orl
rcrl
pop
xchg
adc
into
ret
dec
dec
shlb
xchg
sub
lds
pop
inc
mov
stos
pop
dec
mov
lods
sub
fstl
fwait
mov
dec
dec
scas
mov
cltd
jae
ljmp
in
xlat
cmp
jmp
jns
sti
into
loopne
mov
lds
sti
inc
mov
lds
out
js
lods
jmp
push
sbb
xor
and
shlb
in
out
fisttpl
in
jne
push
dec
cmp
ret
fldenv
pop
lcall
dec
and
pop
lret
shl
es
adc
ss
lock
out
jnp
ss
gs
push
jl
jl
lods
fwait
sbbb
cmp
adc
dec
xchg
mov
mov
mov
pop
popa
in
data16
or
test
data16
push
loopne
das
iret
mov
push
insb
dec
lock
je
ds
outsb
jp
inc
aas
sub
dec
mov
pop
aas
sti
inc
jae
fst
inc
add
imul
push
xor
adc
rcll
sbb
cmpsl
in
pop
pop
lods
fwait
addb
sbb
sbb
jo
adc
adc
gs
stc
pushf
push
cmp
popf
sahf
mov
jae
outsl
cmpsb
xlat
mov
incb
pop
inc
call
dec
and
xor
ss
fmuls
push
or
orl
out
add
dec
and
rol
test
repz
mov
cmp
pusha
adc
sbb
adc
cmp
pop
ds
sbb
es
push
clc
cli
pop
xor
aas
mov
jnp
aas
shrb
fisttps
push
push
push
arpl
jecxz
or
std
jmp
fs
lahf
iret
stos
add
mov
pop
and
xchg
rcrw
mov
sahf
stos
outsb
add
mov
fsub
xchg
mov
inc
fdivs
jmp
mov
push
les
je
rolb
sub
push
add
and
pop
dec
call
stc
ffreep
loope
call
loope
cmovae
insb
xorl
test
popa
cli
filds
int3
es
cmp
bound
popa
or
dec
out
dec
fdivrs
lahf
xchg
cmp
and
mov
xor
imul
divb
sbb
jl
mov
movb
nop
sarb
test
jo
loopne
or
jle
int3
clc
addl
repnz
sub
push
push
ja
imul
pop
int
addl
test
sbb
lcall
jge
fmuls
mov
jo
scas
nop
push
cs
cmp
xchg
test
pop
daa
stos
fsubr
call
cmpsb
fiadds
dec
mov
cmpb
pushf
jle
and
gs
insw
or
lods
pop
and
sub
jp
lods
hlt
sti
dec
and
sbb
dec
pop
xchg
fldcw
and
test
xor
into
adc
sbb
cmp
aad
push
adc
scas
add
out
sub
mov
test
cltd
clc
ret
inc
lcall
add
lods
xor
repz
pop
dec
jns
inc
stos
dec
fcoms
mov
cltd
and
call
jmp
fiaddl
pop
xlat
aad
mov
fwait
lea
rcrl
and
cmp
stos
arpl
mov
pushf
pusha
push
dec
pushf
push
push
sahf
sub
mov
lahf
pop
push
test
cltd
mov
mov
mov
lret
and
out
cmpsb
jp
sarl
or
icebp
add
dec
dec
pop
cli
sti
pop
test
fwait
hlt
push
daa
in
leave
or
fldenv
stos
mov
sbb
lahf
int3
xchg
push
shll
aas
in
or
sub
mov
lcall
pop
cmp
imull
mov
mov
clc
jg
sbb
xchg
cltd
add
jg
cs
or
in
add
mov
repnz
adc
mov
xor
sbb
mov
sub
and
add
pushf
mov
aaa
inc
jl
xchg
cmp
mov
repz
push
jle
pop
aaa
pop
test
sub
mov
and
jne
sbb
dec
inc
mov
adc
sbb
or
lods
jle
out
mov
jge
or
cld
sub
pop
js
insl
add
xor
fwait
lock
dec
insl
jmp
stos
xor
jp
mov
test
push
fs
pop
sti
lea
push
xchg
fldt
mov
aad
and
sbb
popa
and
aam
dec
loopne
pop
dec
jge
sbb
dec
in
or
cmpsb
in
in
xchg
add
sub
out
push
mov
jb
or
repnz
inc
or
sbb
insb
outsl
sub
xchg
ficompl
jns
cmpsb
scas
out
inc
xlat
jmp
lcall
cmpsb
jae
test
sbb
rorl
nop
incb
sub
js
ror
cmp
std
pop
lds
mov
ljmp
je
lret
adc
aam
mov
push
jp
call
sub
mov
fwait
xchg
push
mov
jecxz
cwtl
jnp
add
lock
cmpsl
movsl
hlt
xchg
scas
sbb
dec
push
push
jecxz
cwtl
outsb
shrb
repnz
pop
inc
xorl
xor
sbbl
cmpsl
test
mov
outsl
mov
in
push
js
pop
jnp
or
pop
rcl
sarb
test
daa
into
cmp
add
movsb
out
lods
out
icebp
into
sbb
pushf
sbb
dec
xor
lcall
xchg
repz
sahf
sbb
and
cmp
jne
lret
in
adc
ljmp
daa
stos
popf
rorl
xchg
pop
fdivrl
je
xchg
mov
test
cmp
leave
jmp
adc
jno
iret
popa
ds
dec
jmp
aas
cmpsl
xchg
dec
cmp
out
add
inc
push
sbb
pushf
aad
repz
pushf
out
jge
and
add
out
xchg
mov
leave
loop
inc
cmp
push
sbb
sub
and
iret
aam
adc
or
mov
pop
and
int
mov
mov
pand
ret
jns
ret
mov
fisttpll
push
insb
stc
fwait
pop
call
aaa
xor
cmp
lret
pop
xor
repz
out
mov
lea
aas
fdivrp
ret
jg
pop
dec
pop
pusha
cltd
shll
add
inc
pop
loopne
insb
cmp
push
pop
test
cmpsl
adc
pop
scas
mov
inc
aaa
adc
out
add
xchg
inc
lcall
or
pop
push
mov
inc
jne
popf
jmp
repnz
gs
addr16
mov
std
nop
add
out
mov
add
out
jno
jle
daa
lods
lret
mov
arpl
cmpsb
and
fucomip
mov
xor
dec
and
xor
jb
or
es
push
shll
pop
fmuls
lret
addr16
jb
pop
fnstenv
push
xchg
fwait
cwtl
or
mov
dec
fmuls
xor
movl
pushf
xor
lret
mov
cmpsl
andb
xlat
sbb
aas
jne
lret
pop
and
mov
mov
fsubrs
jle
xor
pop
adc
fiaddl
cs
out
push
add
bound
push
push
insb
loopne
mov
jbe
sub
out
filds
popf
cmp
mov
mov
dec
cmp
jo
hlt
insl
sub
loop
das
sbb
push
std
fsubrp
pop
jg
out
call
mov
clc
jge
lcall
je
out
push
movsb
adc
lods
clc
xchg
and
adc
loopne
outsb
inc
xor
test
sub
jecxz
push
push
cmpsb
jae
jg
std
or
fisttpl
pop
scas
in
jp
jge
fadds
mov
jge
dec
add
pusha
addb
fisubl
cmp
mov
gs
addr16
andb
xor
fnsave
mov
jo
mov
ret
lret
xchg
test
push
mov
fstps
adc
ja
pop
shll
sti
xlat
cmp
sub
or
push
mov
outsb
pop
ret
movsb
movsb
inc
xchg
mov
adc
mov
xor
mov
inc
cmp
sub
mov
cmc
test
out
jno
sub
or
add
pop
int
movsb
pop
movsb
mov
jmp
mov
stos
mov
dec
loope
test
insl
xor
adc
test
sub
xchg
add
xor
or
fs
adc
or
jb
inc
popa
fstpt
bound
lcall
lahf
sub
cltd
addr16
push
aad
adcb
movsb
les
into
in
scas
fstps
lds
jecxz
and
ljmp
dec
xchg
jp
testl
adc
jg
or
xchg
mov
push
rorl
int3
rclb
loop
cs
xchg
icebp
push
cltd
stc
repz
xchg
addl
jge
mov
pop
fucompp
scas
xor
ficoms
adc
fs
push
ds
fidivrs
shll
jns
lret
jno
pusha
stc
stc
into
insb
int3
sti
outsb
aas
mov
je
out
sub
jo
pop
aaa
aaa
test
xchg
cmp
pmullw
popa
in
je
outsl
xchg
push
shlb
in
test
cmp
dec
lea
lods
and
jnp
dec
sub
jp
orw
xor
adc
fbstp
inc
inc
push
lock
dec
inc
sbb
je
and
outsb
add
outsl
dec
insb
das
sbb
imul
add
sub
jne
lods
inc
incl
xchg
or
aas
pop
shlb
jl
mov
jg
bound
jmp
xor
add
data16
xchg
mov
test
pop
and
ret
imul
stos
stos
push
lahf
xor
in
lahf
fidivrs
imul
popa
addr16
fisttps
ds
fnstcw
mov
mov
add
test
inc
mov
jns
jb
roll
test
rorb
pop
inc
jo
mov
push
es
mov
xchg
push
xchg
lret
jmp
mov
push
sbb
inc
iret
push
mov
scas
adc
cmp
jle
out
and
xchg
call
dec
mov
lret
sti
fildl
mov
stos
dec
cwtl
lcall
pop
scas
push
in
push
add
repnz
mov
inc
or
cmp
lahf
imul
int3
imul
aam
mov
rclb
inc
add
dec
icebp
test
inc
and
adc
adc
outsb
mov
fisubl
sbb
rcrl
adc
xchg
cmc
out
xchg
cmp
jnp
mov
dec
hlt
sbb
push
ret
cld
dec
mov
cwtl
es
ss
mov
pop
loopne
push
pop
loop
shll
arpl
movsl
and
shlb
aas
out
sbb
lcall
push
fwait
decl
repnz
lret
jg
subl
divl
repz
insl
insl
cmp
inc
not
cwtl
jmp
add
sbb
scas
or
cltd
pop
mov
fdiv
shlb
mov
pop
pop
mov
icebp
inc
into
jecxz
lods
cmc
scas
and
addl
aad
ret
inc
add
cmpsl
xchg
nop
lahf
int3
xor
xchg
dec
lds
pop
push
mov
aaa
jle
ret
inc
mov
or
pop
js
mov
cmp
cmp
pushf
xchg
pop
sbb
sbb
stos
fmuls
sbb
inc
mov
sbb
mov
enter
pop
mov
arpl
or
mov
orb
dec
icebp
imul
ss
mov
jne
mov
sbb
add
ljmp
inc
fdivrs
jae
adc
testl
jb
mov
in
xchg
frstor
xchg
push
sahf
popa
mov
mov
sub
cs
push
into
repnz
sub
cld
loopne
in
mov
lret
jmp
notl
shrb
cmp
xor
outsl
call
push
movsb
sarb
std
mov
lret
rcr
test
movsl
or
inc
pop
in
add
mov
call
and
jmp
sub
xor
push
test
pop
dec
cmp
push
stc
pop
mov
in
test
insl
jle
mov
cs
lea
fmuls
ja
in
out
xor
iret
rorl
out
ror
push
jg
push
and
scas
lret
in
and
mov
cmpsb
jp
iret
in
lock
cmc
fs
mov
push
arpl
jns
jno
lret
jl
iret
adc
dec
push
js
insl
mov
mov
fisubl
stc
lds
dec
movsb
out
jl
push
sub
jnp
sbb
or
fisttpl
int
mov
sbb
inc
fidivs
adc
movups
dec
dec
adc
xchg
add
adc
sahf
andl
jecxz
mov
rol
mov
push
push
add
sbb
shrb
sub
repz
sahf
outsl
rorl
sbb
lret
push
mov
dec
dec
subb
fwait
pop
in
nop
movsb
and
sub
lods
pop
mov
mov
xor
dec
mov
decb
or
mov
sub
shrl
add
inc
adc
mov
cs
jns
push
jge
jns
nop
sahf
xor
out
mov
hlt
xor
lock
in
mov
xchg
push
subl
sbb
out
inc
xor
sar
adc
cltd
cwtl
push
mov
iret
mov
fistl
enter
or
add
dec
pop
js
ss
xor
imul
inc
inc
adc
adc
jg
pop
lahf
fistl
cmp
shrb
mov
pop
or
ret
fdivs
lret
lahf
or
gs
subb
pushl
jbe
das
jbe
fmuls
scas
push
fcomi
stc
mov
pop
cwtl
dec
jg
test
cwtl
push
xchg
cmpb
sar
outsb
push
lods
pop
xchg
jmp
xor
fs
mov
sbb
adc
xor
out
lcall
out
cmpsb
add
push
mov
stc
testl
aas
cltd
jns
aad
sub
les
inc
xor
push
mov
bound
aaa
sub
lahf
and
call
add
jge
ja
push
ret
mov
cmp
push
scas
jae
inc
stc
mov
incb
lret
sbb
cld
mov
jb
pusha
fiadds
adcl
sbb
inc
rcr
lret
lock
push
push
sarb
sbb
stos
stos
in
push
lock
int
and
cmp
inc
pop
fwait
mov
inc
jbe
cli
js
test
ja
and
xchg
xor
jmp
mov
fcomip
push
dec
push
sbb
ret
enter
ljmp
scas
jns
bound
add
ret
bswap
adc
inc
rol
mov
or
nop
xor
and
and
cmpl
scas
inc
and
cs
orb
idivb
mov
mov
or
adc
fwait
mov
mov
outsb
mov
imul
inc
insb
lahf
repz
cltd
stc
aam
inc
in
or
push
jmp
jp
rcr
lret
cmp
dec
mov
xchg
lahf
data16
fnstsw
push
dec
cmc
sub
gs
ret
aaa
inc
fsin
jg
inc
std
add
lods
inc
push
mov
nop
mov
dec
pushf
enter
dec
subb
adc
dec
adc
stc
push
cmp
scas
or
lods
push
call
jae
jb
push
repz
jne
adc
repnz
cmp
pop
aaa
daa
out
dec
lods
in
push
adc
xor
dec
negb
cld
cmp
addr16
sbb
clc
inc
iret
mov
inc
sbb
cmp
divb
push
lods
mov
push
add
mov
out
lds
dec
xchg
clc
pop
mov
and
cmc
pop
lds
imul
in
out
adc
movsl
popw
rcl
jno
jo
outsb
mov
fisubrl
xchg
mov
add
jmp
cmpsb
in
hlt
push
je
out
int3
inc
xorl
lret
fs
mov
nop
adc
adc
sahf
orl
lock
xor
in
aas
jno
arpl
xchg
dec
or
cmpsl
mov
shll
and
insb
inc
lahf
pop
int3
pop
pop
scas
sbb
mov
fs
pushf
or
test
fstpt
das
outsl
sti
push
xchg
jle
nopl
jne
sub
lea
popa
inc
fcompl
js,pt
sub
push
lods
pusha
push
in
mov
out
xchg
pop
push
out
mov
jae
mov
ss
outsl
cmp
xor
mov
fdivs
out
or
mov
nop
xlat
or
pop
push
mov
dec
shll
adc
stos
push
adcl
repnz
or
mov
mov
shrb
daa
ret
lds
ljmp
cmc
movsl
fmuls
push
xchg
jmp
jne
data16
pusha
cmp
cmp
in
push
cld
out
and
or
dec
dec
xchg
shr
or
outsl
js
add
cmpsb
mull
in
or
xchg
push
pop
testl
in
inc
hlt
ja
shrl
jae
mov
mov
or
push
adc
add
movsb
in
jne
sbb
push
sbb
sahf
in
mov
mull
sbb
jne
dec
mov
outsb
insl
xor
pop
int
aaa
pop
inc
mov
xor
xchg
scas
call
adc
movsb
sub
cmovs
mov
jmp
cs
push
outsb
xor
sahf
sbb
add
sbbl
mov
int
mov
shll
pop
dec
jecxz
cmp
jne
add
insb
nop
push
mov
dec
and
shrb
mov
sub
or
sub
loop
movsb
shlb
push
mov
adc
jb
scas
xor
xor
movsl
movsl
stos
sbb
cmp
lods
out
and
movsb
jbe
mov
lock
dec
mov
loop
shr
imulb
dec
or
lods
xlat
push
jp
jl
xchg
bound
repz
loopne
mov
sub
stos
push
int3
outsl
fucomi
enter
dec
ss
jbe
add
mov
arpl
loop
aaa
mov
inc
shlb
adc
outsb
mov
push
mov
mov
mov
lods
out
xor
mov
sahf
sbb
test
xor
outsl
xlat
enter
ja
cltd
sub
ficomps
push
xor
jnp
clc
insl
movsb
cmp
dec
icebp
pop
rcrb
or
and
daa
movsl
js
sbb
mov
push
inc
pop
add
cmpsl
mov
in
scas
or
in
sbb
inc
stos
outsl
dec
pop
mov
fsubp
insl
rorl
adc
cmp
mov
loop
lret
in
sbbb
imul
pop
fsubrl
jmp
xchg
sbb
pop
mov
ret
mov
push
push
jbe
mov
dec
inc
sub
inc
xchg
xchg
mov
test
mov
push
das
mov
jmp
xor
sti
mov
gs
leave
repnz
rcr
sbb
and
test
int3
js
sahf
out
movsb
imulb
inc
xor
and
xor
sub
icebp
call
ljmp
std
or
in
xchg
and
pop
mov
cmc
pop
push
sarb
dec
mov
out
repnz
test
movb
fimuls
icebp
paddw
sbb
subl
adc
push
xchg
push
push
mov
movsb
call
inc
ja
mov
jg,pt
in
ds
negb
push
insb
ja
mov
mov
iret
add
out
divl
popa
add
sbb
push
mov
sbbb
pusha
ljmp
cli
add
xor
inc
enter
dec
movsb
lock
dec
arpl
xor
and
lret
fs
push
sbb
sub
jne
stos
fwait
jecxz
mov
lods
test
das
xor
add
xchg
xchg
imul
and
ljmp
sub
inc
vpshufd
std
pop
and
lods
test
lahf
test
outsb
mov
call
pop
push
inc
scas
xchg
adc
jecxz
jecxz
fwait
mov
cmp
aas
mov
adc
jl
shl
rorl
popa
cmp
cmc
leave
xor
cmpsl
xor
popa
js
lret
pop
pop
lcall
int3
add
into
mov
hlt
aaa
shll
push
sbb
cli
push
test
add
dec
shlb
xor
popa
je
adc
test
xchg
inc
push
data16
lret
dec
iret
pushf
sti
mov
push
repnz
stc
pop
repz
out
push
mov
fs
ficoms
imul
dec
mov
or
push
dec
out
inc
mov
sbb
add
cmp
mov
inc
fcomps
mov
inc
push
push
cmp
hlt
jecxz
mov
popf
scas
jle
push
cld
lcall
fs
xor
cli
lcall
ja
xlat
gs
xchg
in
lea
ss
xchg
sub
repz
dec
xor
cmc
cld
lret
mov
lret
adc
movsl
xchg
adc
xchg
fsubrl
repnz
push
sbb
arpl
fmull
jb
push
xor
cwtl
outsb
pop
add
cmp
push
dec
fsts
dec
imul
cmp
xchg
add
pop
jg
jne
dec
leave
jae
out
idivb
mov
lds
jns
sub
push
sbb
adc
cmp
sarb
mov
sbb
lea
mov
or
pop
fistps
dec
aaa
add
and
hlt
lods
dec
push
adc
adc
enter
pop
jecxz
int
xor
insb
sti
stos
call
jecxz
mov
out
sbb
adc
notl
sbb
rcrb
fistpll
xchg
pop
lahf
xchg
js
aaa
adc
enter
nop
lock
jg
xor
cmpsl
fistpl
xor
dec
add
and
daa
dec
nop
lret
fsts
mov
lahf
xlat
ja
push
hlt
pop
insb
inc
stc
popa
arpl
lock
lds
clc
mov
pop
adc
sbb
pop
lahf
outsl
adc
pop
pusha
xchg
dec
or
add
std
loopne
or
incl
es
xchg
stc
out
cmp
lcall
mov
gs
pop
ds
mov
roll
arpl
cmp
add
or
dec
imull
xor
mov
push
stos
mov
pop
and
das
add
pop
fsubr
jo
adc
hlt
f2xm1
sub
inc
pusha
inc
mov
subb
notb
jno
dec
lods
je
aas
ds
mov
stc
xor
pop
testl
mov
jp
imul
or
sub
jns
rcll
arpl
mov
adcb
pusha
lret
push
call
mov
test
ds
in
aam
fadd
mov
sub
ss
loope
cs
cld
test
sbb
and
xor
sbb
mov
cmp
dec
mov
inc
ret
test
lock
es
push
or
outsl
pop
cmp
jp
mov
push
jmp
bound
lret
sarl
push
jns
mov
out
test
fdivl
mov
sbb
and
sub
hlt
in
cld
je
dec
push
inc
sub
mov
ljmp
lds
inc
sbb
in
sub
jb
leave
dec
cmp
sbb
push
sub
sbb
sbb
shrl
cmpsb
mov
mul
in
jle
and
cmp
fucomi
xchg
popf
mov
mov
cmpl
xor
push
ja
clc
icebp
add
idivl
and
ljmp
xlat
lret
cwtl
dec
test
lods
ljmp
sbb
xchg
ja
mov
dec
mov
sbb
insl
mov
popa
popa
in
mov
xor
dec
jmp
xchg
ds
in
aaa
repz
push
push
mov
mov
jae
nop
and
xchg
jo
dec
jmp
pop
add
test
adc
mov
xor
xchg
les
loopne
stos
push
in
inc
mov
xchg
dec
xor
or
fistps
push
cmpsb
imul
imul
repnz
jns
aas
test
jecxz
repnz
sbb
fdivl
xchg
or
or
mov
out
jge
jmp
daa
pop
xchg
scas
or
jb
stos
cmpsl
jge
cwtl
jb
jg
lret
out
scas
fisttps
mov
fcomip
push
out
push
mov
cld
adc
test
xchg
hlt
fmul
aas
dec
jmp
in
jns
jmp
xchg
orb
push
or
push
pop
sub
popa
hlt
addr16
lcall
sub
scas
arpl
mov
sbb
std
cmp
std
dec
inc
xor
das
push
xlat
sub
rep
sub
inc
int3
add
loope,pn
pop
pop
movsb
sbb
mov
sti
jecxz
cmp
sub
not
aam
or
mov
fstpt
xor
dec
mov
pushf
dec
adc
lret
jl
into
lods
xchg
xchg
stc
repnz
mov
fstps
pop
repnz
inc
pushf
je
jno
jmp
aam
pop
cmpsl
scas
lds
mov
ficomps
pusha
mov
and
jb
push
jp
cs
pushf
gs
add
sbb
xchg
js
sub
inc
pop
dec
xor
std
cwtl
cmpsb
imul
mov
xor
sub
fwait
sub
pop
repnz
sbb
enter
pop
inc
add
adc
and
xor
xchg
mov
dec
mov
jle
das
or
push
lock
ja
xchg
or
add
pop
in
mov
icebp
xor
cmpsb
mov
jns
arpl
add
pop
stos
fmul
mov
imul
cwtl
push
or
cld
leave
addr16
in
lret
or
push
inc
lcall
inc
fsubrs
mov
mov
inc
mov
mov
mov
jge
std
mov
out
jo
push
mov
cmpsl
add
xor
sub
dec
push
test
out
mov
out
cmp
pop
sub
insl
pop
mov
or
push
adc
push
ds
mov
add
js
pop
repnz
std
xchg
pop
mov
shlb
mov
or
shlb
cmpsl
or
decb
mov
sub
and
fnsave
pop
int
std
mov
outsb
mov
call
sub
push
xor
mov
lahf
ds
int3
push
lock
jmp
jae
xchg
push
call
push
das
enter
mov
mov
mov
mov
push
dec
out
add
mov
mov
dec
js
clc
add
jb
mov
ret
push
pusha
push
out
push
xor
addl
push
cwtl
adc
and
leave
and
xchg
ljmp
out
imull
arpl
scas
mov
jmp
sbb
mov
push
mov
adc
pop
fsubl
adc
inc
add
aaa
out
call
test
aad
mov
and
jno
and
add
lcall
xchg
cmpsb
sbb
aad
push
jns
jle
xor
dec
data16
sub
shll
pop
jo
cmp
mov
fstpt
push
jmp
idivl
inc
je
mov
bnd
jg
xor
xchg
popf
leave
cmp
mov
mov
popa
imul
fbstp
in
fdivrl
push
ret
dec
mov
jmp
pop
inc
mov
sub
pop
push
hlt
inc
pushl
jno
je
daa
jnp
fiadds
cli
push
jb
xchg
stc
or
in
xor
fcoms
inc
insl
mov
inc
jg
aam
mov
les
or
inc
add
xchg
mov
mov
xor
imul
jmp
rorl
pop
fnstsw
inc
pop
stos
fwait
xorb
cmp
ror
out
sahf
cmpsb
push
jmp
add
imull
sub
arpl
hlt
dec
xchg
inc
imull
mov
in
hlt
aaa
or
ss
jb
les
xor
and
fwait
pop
xchg
sub
mov
jge
push
mov
addl
sbb
xor
lods
scas
aad
xchg
andb
sub
mov
rolb
xor
jp
mov
int
adc
ja
push
and
lret
out
add
mov
int3
inc
push
int
cmp
cmp
int
notb
insl
ja
push
or
lret
aaa
jns
xchg
xor
push
cmp
cmp
inc
cmp
push
adc
mov
pop
cmc
mov
enter
std
push
inc
mov
out
jns
xchg
sub
aaa
cmp
jecxz
rcl
push
movsb
xchg
fincstp
mov
pop
mov
sbb
mov
subl
subb
fs
repnz
mov
ret
mov
gs
or
cmpsl
push
test
jmp
aam
loop
pop
in
rcrl
dec
out
mov
outsb
push
out
cmp
pop
xor
notb
fsubs
fidivrs
cmp
or
pop
pop
adc
lods
test
or
inc
cmp
cmpsb
xchg
push
test
pop
out
into
dec
out
xor
dec
or
sub
scas
dec
arpl
rol
mov
lds
jle
arpl
stc
dec
mov
test
mov
inc
adc
fnstcw
out
mov
add
shll
shlb
dec
jmp
push
pop
sbb
iret
testb
sub
mov
push
roll
in
insl
sub
es
cmp
dec
out
fisubrs
int
cli
test
les
imul
hlt
jl
push
flds
movsb
cltd
cli
add
inc
rorb
xchg
sahf
enter
sti
out
popa
ret
cmp
lea
cmp
mov
xor
in
mov
sbb
outsl
pushf
cmp
ret
push
or
add
mov
inc
mov
add
xor
aaa
imul
mov
and
test
stos
cmc
pop
jl
xchg
ja
jmp
fadd
mov
test
pusha
call
ja
test
loopne
xor
add
xchg
mov
pop
jns
push
pop
jns
mov
out
sub
sbb
lock
push
mov
mov
les
fldenv
ret
xchg
mov
repz
jb
movsl
sarl
xchg
arpl
adc
iret
add
ja
lret
rorb
int
lock
push
leave
or
into
jbe
std
inc
pop
lds
cmc
sbb
or
ja
gs
mov
icebp
mov
jns
imul
jp
out
test
mov
jae
xchg
dec
push
test
lret
das
push
imul
inc
pop
mov
data16
movb
insl
cmp
repz
ja
sub
stos
fisttpl
sbb
nop
sahf
fistpl
pop
or
bound
inc
shr
nop
or
mov
sbb
and
mov
mov
imul
adc
orl
xchg
pop
mov
pop
lret
clc
orl
popf
mov
lds
fwait
sbb
mov
clc
xor
jmp
aam
test
xchg
js
in
pop
lds
mov
sbb
test
aas
dec
imul
mov
imul
imulb
cmp
adc
mov
push
jno
xchg
leave
sbb
mov
push
xor
aad
outsb
mov
inc
jl
dec
cltd
sub
inc
mov
addl
js
lods
fstpt
lahf
dec
adc
pop
jmp
add
push
stos
jo
jbe
inc
fisubs
fsubrl
push
data16
lcall
mov
clc
push
mov
popl
jmp
mov
jl
adc
dec
js
icebp
aad
mov
sti
sarl
es
test
cmpl
in
sub
ja
pop
call
fcompl
shll
adc
pop
out
mov
mov
add
mov
enter
in
fs
cmp
cmc
shll
mov
or
out
loope
loop
ss
push
mov
or
lcall
ljmp
scas
and
push
stc
mov
mov
enter
aad
xchg
add
jne
das
mov
es
movsl
ds
aad
mov
xchg
mov
jo
in
fildll
xchg
fsubrs
dec
test
mov
fs
in
cmp
pop
test
sub
mov
xchg
xor
icebp
cmp
inc
jbe
sbb
xchg
dec
mov
mov
xlat
sti
adc
mov
lock
test
xchg
das
add
sbb
pop
xor
push
ret
ret
ljmp
add
add
loop
pushf
xor
dec
rcll
jne
in
popf
cmpsl
gs
int
xchg
jae
repnz
ret
std
xor
shl
lret
int
mov
ret
call
mov
popa
xchg
mov
lcall
fiaddl
fisttpl
push
mov
lcall
push
xchg
inc
fiaddl
shlb
push
xchg
push
js
daa
and
and
insb
mov
out
mov
sbb
or
sub
inc
clc
subl
sarl
fldenv
imull
aaa
rcrb
imul
iret
push
push
subb
jmp
into
cld
hlt
imul
push
in
mov
int
mov
xor
insb
mov
jp
jl
mov
xchg
mov
pop
or
fcoms
push
dec
jg
adc
mov
mov
mov
push
das
xchg
les
test
adc
ds
mov
les
xchg
jne
mov
std
jae
test
neg
scas
add
dec
ja
divl
outsl
sbb
int3
outsl
in
jge
add
idivl
adc
popf
xorb
sub
push
adc
test
mov
mov
test
sti
jno
cmp
push
pop
leave
or
dec
pop
lods
push
mov
xor
sub
movsb
stc
lods
cmp
inc
mov
mov
inc
or
retw
sbb
cmp
xchg
mov
mov
mov
push
or
adc
sub
jne
and
jo
xor
dec
cld
enter
push
leave
mov
jno
ss
jne
fldcw
ljmp
in
dec
xor
test
shlb
xchg
into
xor
push
arpl
mov
addr16
imul
std
pop
call
dec
je
lods
adc
mov
test
push
aas
imul
stos
push
rsm
cmp
xchg
loope
xchg
jl
add
inc
cmp
inc
test
ljmp
cmp
or
mov
mov
mov
fwait
hlt
stos
jne
and
add
cld
lds
aaa
jp
cmp
mov
lcall
addl
xchg
add
addr16
loop
sti
mov
cmp
insb
jge
sub
or
add
or
dec
cmpsl
lock
inc
add
sub
test
xor
add
push
and
push
sub
lea
xor
xchg
xlat
frstor
push
test
cmp
push
lods
pop
mov
das
sub
daa
movb
pop
int3
lods
out
xchg
das
xor
xchg
jae
mov
mov
out
addr16
mov
js
sahf
in
nop
mov
data16
and
pop
cmpsb
test
pop
xchg
cli
inc
sub
push
jb
loopne
mov
subl
leave
nop
addr16
and
xchg
xorl
les
outsb
es
fwait
mov
push
fs
les
in
mov
insb
jmp
inc
add
icebp
std
fistpll
repnz
rolb
mov
iret
cli
jne
cmp
lcall
push
jne
dec
rclb
adc
mov
xor
sbb
aaa
mov
jae
jecxz
rclb
int
mov
divl
mov
sbb
mov
inc
movsl
jl
pop
stos
test
mov
or
xlat
jp
push
rcl
mov
je
loopne
dec
mov
mov
xor
inc
inc
xchg
mov
push
adc
into
movsl
mov
inc
mov
shlb
and
lret
cmc
cmp
pop
mov
jns
jbe
dec
pop
xchg
mov
push
mov
ja
aaa
xlat
push
push
call
mov
je
cmpl
mov
stos
adc
jge
and
mov
or
mov
xchg
lds
pop
add
mov
ss
test
inc
sbb
mov
dec
mov
lea
inc
sub
jmp
mov
mov
dec
xlat
lret
out
add
adc
enter
xchg
push
push
cmp
lods
cmc
pop
pop
xchg
cli
or
mov
iret
out
lods
lcall
dec
lret
sub
and
and
lret
iret
cld
push
into
cmc
push
ret
push
or
adc
ja
add
jl
lock
sub
insl
adc
jecxz
ret
and
dec
fwait
dec
push
dec
push
outsl
addr16
push
push
xchg
pop
cltd
mov
xor
sti
das
mov
aaa
out
mov
mov
repz
xor
push
lea
dec
adc
pop
dec
stos
cmpsb
bound
js
popl
push
nop
sti
loop
mov
lret
cmp
leave
dec
push
mov
mov
jmp
in
negl
repnz
pop
mov
mov
dec
mov
push
mov
pop
pop
mov
adc
decb
push
jecxz
mov
fiaddl
add
fs
adc
cld
cmc
jo
fwait
mov
jo
lock
mov
js
idivb
add
xor
pop
lods
nop
dec
in
push
icebp
gs
scas
push
jl
xchg
add
push
sub
iret
pushf
repnz
bound
cmp
sub
xorb
mov
andl
mov
mov
jmp
adc
push
imul
and
add
cmp
sbb
push
hlt
xchg
iret
adc
adc
inc
popf
xor
xchg
and
xchg
aad
xchg
xor
xor
pop
jo
sbb
lods
je
fisubrl
mov
aad
and
push
ds
and
scas
sbb
mov
cmp
xor
inc
mov
push
add
push
in
xlat
jge
push
pop
dec
pop
iret
jl
popa
repnz
leave
fwait
pop
lods
cmpsl
ss
jne
imul
cli
test
mov
sub
xor
shl
stos
lcall
rdpmc
mov
dec
xchg
mov
scas
repz
lock
icebp
cld
mov
xlat
dec
stos
lea
loopne
dec
rcrb
pop
scas
sbb
push
dec
in
mov
jo
es
cmp
pop
pop
or
push
or
scas
test
adc
les
add
cmpsb
mov
jl
push
in
cld
inc
outsb
mov
xlat
fldcw
xchg
mov
xchg
cmp
adc
cmp
mov
fidivl
add
cmc
sub
inc
bound
xlat
adc
mov
push
mov
lods
jg
daa
ret
sbb
cmp
push
repz
pusha
imul
shll
fldl
push
jge
inc
mov
cmp
sbb
push
jp
loop
insb
ja
push
insb
lret
cmp
or
nop
push
cmp
cmpsl
clc
xchg
push
daa
in
pop
push
jno
push
push
inc
popa
jnp
mov
aaa
mov
jno
sti
jg
dec
test
ja
daa
lds
aam
pop
cmp
mov
dec
cmpsb
push
scas
sub
out
or
enter
hlt
mov
or
outsl
xchg
imul
fists
mov
lret
movsl
pop
or
les
push
push
ud2
inc
push
push
adc
pop
jp
sbbl
dec
fisttpll
leave
inc
mov
std
mov
test
xor
ret
cli
push
imul
sbb
fs
push
test
or
mov
loopne
sbb
inc
push
dec
bound
sub
push
leave
pop
in
rcll
mov
xchg
cmp
inc
mov
xchg
jle
clc
mov
push
inc
out
ret
mov
xlat
xlat
or
in
sbb
sti
push
pop
fnstsw
inc
lahf
jge
or
push
jno
adc
es
mov
push
scas
in
mov
outsl
rorb
fistl
xchg
cld
imul
xchg
sub
dec
mov
out
xor
sub
ret
in
mov
jmp
mov
pop
pusha
clc
mov
dec
fcomps
and
shrb
stos
dec
les
and
popa
test
xor
ficompl
push
inc
push
mov
shlb
cmpb
mov
int3
shll
es
sbb
rorl
in
orb
outsl
icebp
or
dec
or
fidivs
or
insl
add
mov
push
ja
xor
xchg
pop
mov
mov
sub
mov
into
icebp
mov
push
ds
sbb
das
pushf
jle
push
lcall
fsubr
es
push
jb
daa
jne
lcall
and
push
roll
pop
les
loop
stos
sti
fwait
inc
sahf
pushf
dec
not
add
mov
jge
std
cmpl
mov
inc
movsb
push
or
popa
push
aam
nop
shrb
in
test
pop
loope,pt
mov
leave
imul
mov
mov
mov
inc
lds
in
clc
push
jne
pop
decb
xchg
mov
fdivrs
xchg
or
push
out
subb
outsb
test
rorl
push
dec
stos
fs
sub
cmc
cmp
in
addl
ds
fisttps
mov
repnz
push
add
es
fisttps
shr
hlt
xchg
enter
comiss
inc
cld
fmull
pop
inc
xchg
pop
jb
dec
sub
mov
pop
sub
cmpb
scas
mov
outsl
mov
jl
lock
rcll
jmp
fadd
cltd
popf
dec
pop
aaa
cltd
cmpb
mov
push
loopne
pushf
or
enter
or
adc
movsl
je
lret
fsubs
jecxz
imul
out
out
shll
mov
sahf
mov
stos
xor
xchg
hlt
mov
insb
jp
cmc
and
jo
aas
es
xchg
or
dec
mov
pop
xchg
sub
push
cmp
fsubrs
and
xchg
dec
hlt
das
fucom
and
jle
shl
pop
loope
xchg
fisubrl
test
jns
inc
cmp
test
lahf
xor
loopne
divb
push
adc
test
push
mov
icebp
or
fcoms
jae
scas
mov
js
fcomi
or
cmp
sub
cmp
add
cli
push
push
movsb
lods
stos
enter
pop
inc
add
cmp
xchg
sahf
mov
jno
pop
js
push
jge
icebp
ficoml
mov
fcmove
or
jmp
cmpsl
sub
mov
or
and
xchg
sub
or
dec
adc
insb
arpl
aaa
sub
ret
nop
shll
adc
arpl
nop
popa
xlat
aad
adc
xor
jns
push
push
daa
cmpsl
fadd
lods
lcall
mov
and
jmp
ljmp
mov
lret
bound
mov
test
popa
mov
mov
push
and
sub
push
imul
adc
fnstenv
scas
sqrtps
leave
call
jmp
ss
dec
sahf
filds
sbb
or
jge
repz
stos
xchg
xchg
aad
xchg
add
cltd
std
mov
dec
stos
div
scas
mulb
cmp
stc
ret
push
cmp
dec
and
mov
sbb
xchg
cli
jle
add
pop
dec
rcrb
ret
mov
arpl
fldenv
rclb
or
shll
cmp
ja
xchg
mov
dec
test
xor
xor
add
fildll
test
sbb
mov
cmp
cmpsb
cmpl
orl
dec
rol
in
std
scas
inc
xchg
js
fnsave
adc
sub
inc
xor
mov
addl
pop
adc
xchg
lods
and
int3
jle
out
add
mov
sbbb
mov
sti
lea
inc
mov
fsubs
mov
fcoml
fisttpl
push
ret
rorl
stc
lret
fwait
push
divb
inc
dec
jnp
scas
jne
xchg
xor
xor
cmp
add
out
daa
jge
imul
imul
xchg
aam
jp
or
rcrl
scas
mov
mov
daa
sti
dec
or
or
imul
push
sbb
mov
lret
loop
cltd
push
outsb
pop
pop
aad
xor
int3
push
fmuls
inc
jl
push
into
outsb
mov
adc
pushf
lock
jmp
ret
aam
cwtl
add
les
mov
and
mov
rol
nopl
xor
pop
xorb
sub
adc
pop
mov
das
js
push
les
into
subb
jle
insb
gs
daa
jmp
cmpsb
int
out
out
xlat
mov
cmp
sub
jno
in
fistl
sbb
jns
jbe
adc
jb
push
test
je
mov
icebp
sub
jbe
dec
sti
mov
mov
jl
lahf
xor
or
test
int
jmp
and
push
das
lods
pop
sub
xor
or
or
cwtl
push
push
scas
xchg
adc
hlt
std
rclb
push
or
pop
insl
mov
xchg
pop
xchg
inc
inc
sbb
movsb
stc
fidivrl
sub
stc
sahf
cmpsl
shl
push
or
adc
fcoms
sbb
mov
mov
lret
xchg
out
fldenv
push
iret
inc
jmp
inc
or
mov
out
push
outsl
mov
mov
xor
fisttps
ja
lods
stos
lods
sub
add
cmpsl
pop
imul
fsubl
jl
insb
in
xor
push
lea
push
lds
ds
lahf
adc
push
sbbl
jg
xchg
add
stc
outsl
lock
std
mov
scas
call
fstpt
xchg
fisubl
inc
push
pop
js
inc
mov
jne
outsb
arpl
inc
xchg
lods
imul
fwait
rcr
xchg
cmp
nopw
sub
lcall
es
push
pop
fwait
shrl
jge
jmp
dec
sub
popa
jecxz
lods
fdivr
mov
push
test
loope
mov
sub
sbb
out
jne
cs
cltd
dec
mov
in
mov
jl
outsb
and
outsl
adc
push
repnz
jmp
cld
cld
xor
sbb
stos
fildl
inc
jge
adc
test
mov
jmp
adc
shll
bound
push
xchg
mov
leave
aaa
mov
cmc
cmpsb
inc
inc
jle
sahf
sub
imul
xor
hlt
jmp
xchg
xchg
pusha
cmpb
test
pop
add
sbb
lcall
jg
movl
ljmp
xchg
mov
jmp
mov
jbe
fldlg2
dec
dec
dec
adc
cmc
mov
pop
cmp
loope
mov
and
adc
insb
outsb
dec
xor
scas
xchg
sub
push
inc
popf
inc
mov
stos
repz
std
daa
fsubl
mov
aam
push
imul
pop
mov
test
enter
push
fsub
aas
pop
push
add
icebp
inc
mov
mov
mov
dec
popf
repz
add
xchg
cmc
add
push
adc
js
pop
test
push
int
sbb
filds
in
xchg
xchg
imul
adc
jo
xchg
pop
repz
fisttps
jecxz
jle
and
test
dec
sahf
adc
idivb
push
insl
mov
mov
movsl
and
jge
cld
push
sbb
and
shl
push
mov
sub
or
cmp
jbe
std
cmc
dec
call
addl
adc
test
xchg
cmp
sbb
or
xchg
adc
mov
cmp
stc
call
and
lds
pop
mov
fldl
iret
mov
les
data16
dec
xchg
mov
cltd
adc
bound
popf
mov
push
test
add
out
insb
mov
mov
pop
pop
add
mov
mov
push
ret
jb
cmp
ss
mov
lea
cmp
add
loop
test
repnz
sub
jns
adc
cmp
cmc
or
fldenv
pushf
scas
adc
lods
xchg
xchg
or
cmp
clc
xchg
push
jae
mov
test
xchg
aam
xchg
cmc
cmp
fisubrs
cli
test
data16
stos
jo
mov
or
inc
xor
dec
out
dec
fdivrl
mov
adc
pop
jnp
addr16
sbb
sub
mov
sub
enter
dec
ret
bound
jae,pn
xchg
nop
mov
jno
negb
out
ds
clc
nop
pop
jne
jnp
jae
shrl
lcall
loope
add
add
and
lahf
loopne
push
repz
xchg
aam
cltd
adc
sbb
adc
hlt
test
add
lock
push
insb
arpl
fiaddl
inc
out
add
fstpl
rol
mov
add
test
icebp
and
mov
fisubl
mov
jnp
or
mov
push
sbb
push
adc
xchg
inc
sub
xchg
mov
cmp
frstor
inc
xchg
or
adc
and
cs
mov
cmp
mov
adc
add
cmp
movsb
pop
cmc
sub
fiaddl
xchg
imul
fldenv
mov
push
xor
shlb
int3
cmpsb
mov
andl
lret
pop
gs
cwtl
popf
cltd
inc
sub
pop
and
cmpsl
add
out
stos
ja
ds
xchg
or
out
pop
stos
mov
jp
das
fimuls
cmp
fcom
mov
xor
mov
imul
push
pop
inc
xor
leave
and
xor
inc
xchg
cmpsl
dec
jmp
insb
inc
adc
inc
push
insb
add
gs
ja
adc
or
jb
shll
in
xor
iret
fnsave
jl
dec
int
adc
enter
mov
lock
mov
shlb
push
movsl
add
cmp
cltd
loope
lock
outsl
xor
test
leave
pop
and
inc
dec
fs
out
imulb
jle
arpl
outsl
jnp
adc
mov
shlb
jmp
lret
lcallw
xchg
xchg
stos
sub
in
cmc
mov
aas
movb
sub
psubd
pusha
test
loopne
xchg
je
sub
mov
addr16
aaa
or
out
in
cmp
mov
aad
lock
xor
mov
jno
mov
xor
addr16
mov
pop
xchg
ficomps
std
mov
sub
push
pop
or
push
jb
cmp
fistpl
aaa
jae
pop
pop
in
cs
in
mov
and
push
clc
sbb
add
pop
repz
mov
fs
mov
pop
xchg
aam
js
xor
loope
incl
push
imul
sbb
sbb
cmc
sub
inc
mov
into
dec
pop
sbb
imul
fs
inc
out
test
add
adc
sbb
mov
loopne
aam
fmull
sub
loop
mov
daa
xor
and
xor
aad
mov
fistpll
mov
xchg
sub
movsb
xor
arpl
and
fsincos
enter
and
xor
lock
stc
mov
rclb
cmp
stc
cmp
fiadds
aas
in
mov
movsb
bswap
stc
stos
inc
imul
into
pushf
shlb
addl
lods
je
fnstenv
sbb
icebp
std
sti
and
test
sbb
dec
xor
pop
dec
mov
jnp
xor
cmp
clc
pop
ljmp
daa
or
jecxz
pop
cwtl
hlt
sar
xorl
xor
cmp
adc
fistpll
aam
cmpl
dec
dec
sahf
addr16
clc
cmp
fisubl
xchg
jl
xor
inc
jnp
inc
cmp
lock
push
fisubs
out
xchg
mov
jno
cmp
jle
in
gs
aam
stos
mov
aas
call
pushf
dec
cmpsl
jne
scas
push
xchg
les
xor
mov
mov
scas
ret
lods
push
xor
sarl
and
pop
pop
shl
mov
cmp
int3
mov
xlat
cli
inc
ljmp
and
fiadds
and
cmp
jp
test
enter
insl
loop
add
movsb
ucomiss
xchg
xor
ficoms
flds
mov
out
inc
das
jmp
sub
cmp
mov
paddusw
add
sets
neg
xchg
sub
ss
shlb
fsts
js
es
jge
repnz
xor
xchg
mov
jo
ret
dec
dec
aas
leave
scas
repz
enter
das
mov
jmp
scas
sbbb
push
loop
outsb
push
out
pop
gs
sahf
inc
pop
lcall
loop
jbe
pop
rclb
xchg
aas
xchg
loop
mov
cmp
sbb
std
inc
ja
sub
in
dec
or
idivb
roll
adc
dec
inc
lea
cmp
mov
jne
dec
shll
add
sbb
dec
push
mov
push
call
sub
sbb
mov
enter
test
adc
jo
dec
lods
inc
jno
jne
cmpl
xchg
sbb
push
cmp
adc
cs
out
ret
and
mov
cs
mov
insb
cmpsb
pop
frstors
cmp
sbb
cmpsb
testb
sahf
jae
add
rcl
imul
lds
mov
negb
fimull
into
ret
jb
stos
xchg
lret
movsl
sub
adc
mov
fidivrs
pop
mov
scas
mov
mov
test
and
mov
add
popa
repnz
inc
mov
xchg
cmpsb
iret
cwtl
inc
jnp
mov
or
mov
imul
repz
sbb
inc
add
out
sub
lgs
pop
outsb
cmp
xchg
mov
aad
popa
out
xchg
mov
or
loopne
or
jns
ret
push
popf
xor
adc
mov
mov
dec
fs
and
outsb
adc
dec
pop
adc
and
add
pop
int3
out
outsb
loop
js
jae
ficoml
fucom
les
jno
insb
sbb
mov
xor
add
mov
pop
add
xor
push
jbe
dec
inc
jg
addb
xor
imul
lret
push
frstor
shlb
jno
loop
je
lret
adc
test
sub
mov
adc
xchg
mov
mov
cmpsb
orb
lcall
out
jge
hlt
xchg
pop
mov
add
sub
pop
push
into
and
mov
mov
push
xchg
rolb
aam
mov
imul
addr16
cmp
jbe
inc
pop
adc
lea
mov
xchg
jp
jmp
jl
in
push
or
mov
adc
push
push
fcompl
mov
jae
insl
fwait
pushf
mov
leave
inc
add
mov
cmp
sbb
pusha
popf
or
and
cltd
mov
sub
xchg
push
fmuls
mov
xor
into
enter
inc
pop
dec
nop
movsl
fcomi
in
call
shrb
mov
mov
mov
cmc
cwtl
les
aas
pop
imul
fnsave
lcall
push
scas
sub
cmpl
test
mov
pop
cli
jb
mov
dec
inc
push
jno
cli
stos
ds
jge
xor
nop
and
mov
call
fsubrs
cs
cmpb
es
jbe
push
xchg
jmp
icebp
mov
movsb
sti
mov
mov
xchg
xchg
adc
and
cmpsl
data16
dec
test
in
call
and
sub
jne
insb
lock
add
loop
cli
sbb
bound
loopne
sbb
scas
subl
stc
enter
pop
bnd
arpl
inc
xchg
push
xchg
or
sti
sub
cmp
out
xchg
mov
in
iret
sub
ds
pop
jge
xchg
test
mov
cmp
xor
fsubs
cmp
andb
rcl
adc
cwtl
jbe
dec
insb
jbe
mov
pop
movsl
lods
dec
mov
repz
adc
movsl
mov
push
fdivs
push
in
movsb
movsb
mov
push
fldt
pop
lock
pop
jle
fldenv
jno
inc
test
cmp
andl
pushf
repz
shll
cmpsb
xor
jo
push
mov
sarl
in
fidivrl
ficompl
pop
xchg
adcb
leave
and
pusha
or
cmp
or
cmp
mov
jg
dec
mov
push
cmc
jmp
xchg
or
inc
cmc
test
jp
mov
aaa
ss
jne
lahf
sbb
imul
jmp
mov
xor
rorb
stc
rcll
sub
jecxz
fs
pusha
or
cmpsb
fucomi
sub
adc
out
fldcw
cwtl
mov
jae
xchg
pushl
daa
mov
sub
faddl
xchg
nop
stc
int3
pop
xchg
fcoml
outsl
add
fcoml
pshufw
inc
pop
fists
aas
cmpsb
inc
mov
inc
xchg
inc
push
inc
mov
mov
inc
push
jae
cld
fwait
sbb
xchg
loop
or
xor
repz
orb
dec
xchg
inc
shl
push
mov
dec
and
scas
ror
or
mov
hlt
into
pop
mov
pop
out
mov
xchg
mov
mov
mov
add
sub
cmp
jecxz
jns
dec
adc
sub
ja
fstps
cmp
cld
xchg
outsl
sbb
sub
loope
in
cmp
xorl
leave
cmc
mov
push
loop
nop
outsl
mov
mov
orb
loop
cmp
dec
insl
shrb
mov
push
fildll
scas
inc
stc
mov
add
jo
std
test
outsb
or
mov
aaa
cmp
dec
loop
aas
pop
pop
sbb
push
inc
pop
gs
in
inc
int
les
mov
or
inc
adc
pop
mov
scas
fistpl
fisubs
arpl
daa
jno
jns
insb
cltd
adc
mov
mov
inc
sub
cmp
mov
in
push
lcall
decl
mov
xor
add
cmpb
repnz
clc
test
fisubrl
jo
loopne
mov
sbb
cmp
mov
fcomp
and
sti
jl
int
mov
or
scas
pop
mov
lcall
leave
mov
jge
cltd
lock
or
jbe
pusha
sbb
stc
inc
in
leave
push
mov
add
repz
jg
pop
pusha
push
jg
loope
add
and
or
imull
mov
mov
in
fistl
mov
inc
pop
lods
xchg
loopne
lods
adc
cwtl
int3
inc
or
sub
adc
pop
xor
sub
jl
clc
mov
test
test
ret
xor
xor
popl
outsb
jg
mov
and
hlt
adc
pop
push
iret
xor
add
adc
xor
lock
or
inc
jnp
mov
mov
and
mov
pop
mov
cmpb
mull
popf
je
jecxz
xor
jbe
sbb
and
jbe
ret
fnstcw
mov
aam
inc
enter
lcall
sbb
cmp
scas
fsubl
stos
test
in
mov
push
inc
inc
xlat
and
inc
leave
inc
mov
loope
sub
push
inc
push
fidivl
nop
push
push
jle
mov
sub
pusha
push
cmp
in
lret
stos
jp
fdivrl
pop
pop
shl
sahf
cli
or
cmp
inc
mov
sbb
fimull
mov
aaa
fbld
xchg
fildl
lret
cmc
cmpsb
ret
dec
inc
pushf
jl
push
xchg
fcompl
mov
mov
sub
mov
into
je
mov
add
or
out
sbb
inc
movsl
mov
jnp,pt
xor
ss
int3
dec
or
mov
inc
inc
jne
sbbl
dec
push
insb
fstl
and
xor
fistpll
pushf
xlat
out
xchg
dec
into
in
loopne
sbb
bound
add
inc
scas
das
fsub
mov
arpl
push
scas
popa
cli
push
cmp
mov
adc
sbb
ret
loop
inc
roll
adc
lock
xor
push
sbb
gs
xchg
gs
popf
xor
pop
jb
aaa
sub
addb
cmovne
jl
add
ret
call
dec
mov
dec
imul
rcrl
gs
es
push
mov
push
mov
popf
pop
adc
add
aaa
lcall
mov
inc
inc
ds
xchg
scas
loop
pop
in
jno
inc
gs
and
outsb
add
scas
test
ror
in
imul
cmpsl
nop
aas
jae
int
jb
xchg
subl
addr16
test
mov
daa
or
stos
cwtl
mov
lret
add
mov
cld
cmp
push
mov
and
gs
pop
movsl
out
sbb
ja
adc
mov
ds
out
call
lock
cwtl
mov
sub
add
xchg
sti
and
sbbl
xor
mov
testl
ret
arpl
out
jge
loopne
sub
cmpsb
push
aas
inc
test
sbb
jo
mov
std
dec
sbb
ss
push
ficoml
aas
mov
xchg
dec
fs
sub
sbb
cs
dec
adc
jnp
divl
sub
ljmp
in
adc
mov
inc
push
int
adc
arpl
into
xchg
adc
dec
mov
pop
rcr
add
iret
out
mov
jg
stc
push
mov
or
jae
dec
int
out
jecxz
stc
das
dec
popf
or
negb
cmp
and
out
sbb
mov
lcall
xchg
pop
fwait
ret
sub
pop
out
icebp
fcomps
lret
mov
stos
push
pushf
or
sub
xor
inc
mov
mov
push
fdivrs
rcrb
ds
mov
add
cmpsl
jmp
and
pop
mov
cmc
scas
testb
xchg
out
adc
nop
in
and
outsb
or
outsl
and
push
or
lret
sarb
inc
sahf
xor
xor
cmp
divb
scas
dec
cmp
and
rep
addr16
pushf
rol
iret
testb
stos
adc
pop
and
call
inc
aam
xchg
lea
flds
leave
pop
add
cwtl
decb
lods
ljmp
test
cwtl
or
lret
pop
sbb
mov
push
daa
into
lods
fs
sbb
dec
xchg
or
lret
subl
jne
pop
jae
int3
xorl
cmpsb
sub
jae
add
mov
and
data16
std
xchg
jns
mov
test
mov
addl
stc
and
arpl
psrlq
push
add
xlat
mov
repz
or
mov
pusha
xchg
outsl
pop
and
scas
loopne
pop
wrmsr
mov
inc
xor
sti
clc
ss
dec
bound
add
ds
pop
les
mov
mov
xchg
ja
cmp
push
call
call
add
cmpsb
mov
dec
or
es
mov
cmp
xchg
mov
and
jnp
sub
iret
je
xchg
imul
cmp
mov
shll
cmp
mov
mull
mov
cmp
or
dec
xor
pop
add
mov
test
dec
push
mov
les
jo
cwtl
popa
adc
ljmp
cmp
mov
or
stos
jecxz
ds
loope
scas
std
jg
test
imul
aaa
cmp
es
dec
or
out
inc
decb
lahf
sub
pop
test
leave
mov
or
add
movsl
jp
add
cltd
shr
xorb
popa
fucom
mov
jp
sub
adc
mov
ja
and
es
ja
xor
addr16
std
inc
sbb
enter
mov
mov
and
hlt
stos
add
das
ss
jg
repnz
dec
inc
sarl
repnz
xchg
imul
push
lret
popa
or
popf
pop
sbb
inc
mov
lea
outsb
popf
and
hlt
jns
sbbb
jbe
lods
xchg
je
push
mov
hlt
jno
pusha
inc
std
pop
test
call
dec
imul
mov
arpl
dec
jb
inc
rcrl
push
lret
push
cmc
sub
pop
jno
push
jl
push
pushf
push
cwtl
imul
aad
and
insl
xchg
jbe
cs
cld
sbb
call
jecxz
sbb
inc
and
scas
outsl
insl
lcall
inc
outsb
push
repnz
shrb
mov
fldenv
ss
int
jp
add
and
sbb
dec
pushf
jecxz
cld
push
add
push
xor
lock
aaa
cmp
xor
xor
imul
pmulhw
push
mov
jecxz
mov
notl
sti
lds
jp
scas
jnp
jne
emms
loop
inc
testl
cmp
jae
mov
dec
hlt
adc
sub
rcl
lahf
cld
cwtl
xchg
cltd
pop
add
aam
cmp
adc
or
mov
aas
popf
scas
jle
out
movsb
inc
xor
fsubl
mov
test
fisubrl
xor
xchg
xchg
outsl
xchg
bound
adc
jg
mov
inc
lods
push
sahf
pop
push
in
es
enter
call
cmp
mov
aam
mul
pop
les
incb
dec
imul
rolb
pop
dec
adc
push
cld
lahf
enter
cmpsb
pop
pushf
add
cmp
fidivrs
add
push
add
jecxz
xchg
test
or
cltd
in
test
sub
sbb
es
xchg
inc
adc
mov
cld
xchg
mov
mov
xchg
clc
pop
aam
jbe
xchg
icebp
iret
fcmovnb
and
add
ljmp
mov
cmpsb
rolb
inc
nop
out
mov
test
bound
pop
inc
imul
fs
add
sub
cmp
sbb
inc
aam
movsl
stc
mov
imull
addb
cmpsb
xchg
fwait
daa
out
in
test
mov
cmp
xchg
jmp
xchg
sbb
xor
shll
loop
mov
jge
push
andb
pop
clc
cmpsl
in
dec
inc
lock
iret
mov
push
imul
adc
cli
inc
jno
jns
xchg
add
xor
mov
mov
dec
jmp
data16
sub
imul
xchg
leave
adc
sbb
cmp
add
mov
ret
pushf
stos
lahf
lcall
xor
shlb
gs
sub
js
jp
xchg
or
hlt
dec
inc
xor
fcoml
and
stos
cmp
in
movsbl
fisubrs
fsubrl
pop
aas
xchg
or
xchg
cmp
je
sti
xchg
in
rcrl
cmpl
stc
out
aaa
pop
clc
or
cld
roll
xor
repnz
pop
or
and
inc
mov
jno
pop
inc
aaa
xchg
xor
xor
call
add
inc
cld
inc
jle
sub
and
sbb
xchg
lods
mov
push
sub
pop
xor
xor
out
test
sbb
popf
ret
lock
lcall
cmpsb
cmp
mov
pop
fsubr
jo
mov
xor
push
mov
add
jo
mov
push
ljmp
mov
mov
ljmp
lods
out
push
shlb
cs
adc
sti
sub
inc
dec
rorb
cmp
mov
leave
rcr
mov
sub
add
or
sbb
jl
mov
sar
dec
lret
cmc
addb
xchg
hlt
mov
sub
xlat
or
pusha
sub
lcall
shll
xchg
mov
lock
in
aas
es
pop
rolb
ror
scas
popa
add
add
mov
out
fsin
rcrb
xchg
jmp
test
fs
sbb
sbb
or
and
lret
in
add
insl
and
and
xor
stos
mov
in
xor
setno
lea
xorb
stc
mov
dec
or
and
and
sbb
ss
push
vpcmpeqw
roll
jmp
xchg
icebp
cld
lods
inc
mov
mov
push
fbld
xor
lock
hlt
hlt
add
xchg
inc
and
movsb
mov
fnstenv
or
insb
movsb
jmp
mov
or
cmp
pop
cmpsl
cmpl
mov
int
iret
xchg
test
mov
push
out
mov
xor
outsl
mov
push
xchg
dec
pop
sti
pop
addr16
sub
popa
push
sub
cmp
mov
es
lahf
inc
add
int
mov
pop
sub
inc
out
rorb
mov
addb
shr
cwtl
aam
ret
iret
nop
scas
push
pusha
and
ds
and
fdivrl
jl
jmp
pop
lods
ljmp
mov
loope
adc
cmp
loope
dec
cmp
movsb
xchg
cwtl
dec
rolb
sti
and
sub
insb
jb
aad
push
int
data16
jecxz
aad
repnz
getsec
adc
mov
sbb
stc
pop
or
stc
jecxz
fs
in
sub
cltd
sti
shlb
xor
rclb
loop
movsl
pop
mov
fisttpll
sbb
scas
sub
add
sub
mov
jns
shl
rcr
xor
push
and
xorl
outsb
arpl
imul
dec
stos
addl
sar
cs
mov
iret
sub
jnp
mov
pop
mov
or
pushf
and
lods
outsl
es
cmpsl
jne
or
fiaddl
inc
ljmp
fidivl
xor
mov
jb
xlat
sub
dec
outsb
xchg
rcrl
call
es
push
add
push
out
fcmovnbe
gs
mov
and
in
mov
push
mov
jg
mov
push
pop
push
ljmp
test
inc
and
js
aad
ja
and
add
mov
loope
mov
cwtl
loope
add
fs
jmp
push
sbb
pop
ss
movsb
push
ret
stos
popa
pop
sbb
fnstcw
sbb
push
sub
mov
mov
pop
jecxz
or
test
call
fcomps
mov
xor
pushf
jne
sbb
addr16
roll
add
xor
loopne
cmp
imul
pop
mov
std
cs
mov
bound
xchg
arpl
push
cmpsl
pandn
fs
filds
dec
je
arpl
or
bound
add
cld
pop
jecxz
mov
cmpsl
lds
mov
std
fs
cmp
ret
and
push
cmp
push
push
jbe
sbb
loop
cmpsl
lret
xchg
js
lods
inc
xchg
add
jge
addr16
repz
pop
pop
sbb
dec
cmovae
scas
stos
jns
cmpsb
inc
push
lea
and
sbb
pop
lea
mov
lahf
int
call
fst
pop
sub
int
sub
sbb
aaa
rorb
xchg
outsb
xor
in
outsl
mov
sub
out
int3
or
jmp
jns
shlb
sahf
dec
mov
addr16
pop
int3
orb
bound
jle
lds
mov
dec
jp
subb
xchg
bound
adc
mov
not
push
inc
jbe
sbb
xchg
lock
outsb
add
data16
add
mov
push
outsb
dec
roll
pop
adc
xor
push
call
iret
fidivs
mul
lods
dec
mov
ret
mov
cwtl
cmpb
leave
adc
xchg
sub
jmp
aaa
jg
popa
push
jns
aaa
adc
rcrl
jmp
sbb
cltd
or
sbb
dec
or
add
mov
aad
sbb
xchg
loopne
jo
loope
jae
adc
mov
mov
jns
mov
fsubrl
fsub
leave
xor
pop
cmp
dec
xlat
fisubl
lock
gs
adc
mov
adc
es
cwtl
push
outsb
cmp
mov
cmp
arpl
or
or
xor
aas
pop
dec
movsb
pop
or
jecxz
paddusb
jbe
addr16
and
xchg
and
and
xchg
sub
cwtl
xor
lods
push
scas
in
les
xor
inc
leave
xchg
mov
cli
ds
inc
push
cs
aas
loope
loop
dec
cmp
and
sbb
stos
or
pop
test
mov
sbb
sub
cmp
sbb
pop
dec
push
sub
adc
scas
test
and
pop
pop
xchg
xchg
scas
and
out
sbb
mov
ror
add
jmp
fisttpl
inc
mov
movsl
or
not
xchg
andw
nop
or
ret
mov
sub
mov
bnd
jge
ss
into
sub
dec
add
mov
pop
xchg
rcrl
in
jo
adc
jle
sarb
add
popl
jno
or
bound
sbb
loopne
cmp
inc
je
in
add
movsl
pushf
testb
xor
cmp
mov
mov
stos
mov
test
negl
cmc
divb
inc
xchg
dec
add
insb
sbb
pop
pop
fmuls
jp
aad
cmpsb
and
fisttpll
pop
and
adc
mov
movsl
push
and
add
push
inc
stos
enter
sub
std
out
les
cld
cmp
mov
mov
icebp
call
outsb
aaa
movntq
out
add
inc
arpl
mov
std
dec
add
mov
inc
jbe
cmp
pop
and
cmp
dec
test
jns
xor
mov
pop
add
mov
cmp
out
sub
mov
dec
mov
xchg
push
fmuls
insb
dec
jmp
arpl
adc
jno
bound
sbb
xor
xchg
fldl
cmp
negb
add
sbb
xchg
repnz
inc
pop
push
call
pop
and
cmp
shr
jnp,pt
jbe
jbe
mov
stos
dec
ljmp
cmp
xor
fldl
xchg
jecxz
sub
gs
shll
push
into
xor
pop
mov
rcrb
stos
fdiv
mov
sbb
xlat
mov
repnz
fsubr
test
daa
pop
mov
stos
je
les
mov
sub
jl
mov
and
out
in
fs
movsl
test
call
sub
mov
lcall
mov
inc
cmpsb
out
pop
outsb
mov
xor
dec
push
and
jle
adc
sub
dec
pop
cmpsb
loopne
mov
mov
imul
cld
pop
or
test
rolb
ja
inc
aad
mov
xchg
repz
arpl
sub
pop
lea
adc
jecxz
repnz
mov
rorl
xchg
jae
xchg
ljmp
outsb
and
std
fwait
pop
xchg
mov
hlt
jnp
scas
pop
mov
cmpsl
xor
out
pop
stc
adc
in
mov
mov
xor
call
shll
imul
loopne
push
ret
stc
sbb
inc
movsb
je
lods
push
aaa
hlt
stos
pop
lret
cmp
add
arpl
xor
pop
xor
cmp
xor
push
xchg
in
insb
jmp
test
jb
sub
cmp
add
jge
jno
scas
lds
or
movsb
adc
pop
or
inc
xchg
cmpl
ret
push
xchg
pusha
cmpl
clc
sub
xor
or
sbbl
or
addr16
sbb
cmpsb
mov
cmp
push
sbb
pop
cmp
stc
mov
jecxz
out
pop
orb
mov
mov
add
mov
pop
sbb
mov
sub
mov
outsb
cltd
add
cmp
les
cmpsl
loope
test
dec
cmc
stc
and
pop
hlt
repz
cli
sbb
or
iret
insb
jb
mov
jge
adc
xchg
fisttps
xorl
in
push
sbb
pop
jae
andl
push
or
add
enter
rolb
xchg
pushf
fldcw
in
and
mov
mov
adc
orb
aam
out
push
lcall
sbb
sbb
ret
in
fisubs
push
fcomps
push
jno
and
sub
stc
mov
mov
xor
mov
add
sbb
dec
jns
dec
mov
or
adc
mov
fdivl
shll
das
notl
add
xchg
mov
push
xor
ret
push
and
sub
idiv
xlat
adc
stc
in
into
adc
and
adc
rcl
jnp
sub
lea
pushf
dec
dec
xor
adc
in
daa
adc
into
fiadds
add
out
adc
xchg
mov
cmp
pop
and
mov
mov
xchg
in
stos
xor
dec
fimull
jo
loop
pop
fs
fstpt
sahf
mov
mov
dec
nop
sbb
cli
fiadds
xor
repz
mov
fimull
cltd
add
mov
aam
es
das
rol
xor
das
aam
sahf
xchg
lea
mov
adc
inc
int
dec
inc
sub
call
scas
lahf
pop
pop
dec
mov
mov
xchg
and
loop
adc
pop
xor
jge
lret
cwtl
push
adcl
xchg
aam
adc
cmp
cld
jle
pmaddwd
outsb
cmp
mov
dec
inc
inc
hlt
lock
sub
pop
pop
lea
inc
cmp
popa
pop
into
sub
lea
xchg
ret
adc
jecxz
add
test
push
scas
xchg
icebp
mov
inc
jg
fdivrs
lods
xchg
sbb
lock
mov
das
xor
negb
xchg
cmp
out
sub
push
out
xchg
leave
mov
shll
ret
and
aad
lahf
cmp
fnstcw
jp
push
inc
insb
imul
add
adc
inc
push
pop
stos
arpl
iret
test
adc
mov
sbb
sbb
xor
push
loope
sbb
sbb
lea
and
xchg
push
xchg
mov
pushf
pop
aam
pop
int
xchg
pop
xchg
dec
test
jmp
loop
fsubrl
adc
data16
cmp
shrb
and
cmp
xchg
incl
xchg
aad
inc
aas
cmpb
jnp
and
movsb
lret
test
cmp
outsl
or
call
cmp
loop
push
or
loop
pop
mov
movsb
mov
int3
cltd
into
lods
subb
inc
mov
push
cmp
mov
xorb
mov
movsb
mov
loopne
lea
in
stc
into
cwtl
ja
mov
test
pop
push
cli
sub
xchg
xor
pop
jle
sub
jno
mov
and
das
jnp
in
jbe
cmp
lcall
sub
xchg
das
outsb
xor
je
insl
or
add
mov
jo
out
rclb
pop
cli
ds
xor
loopne
sbb
pusha
out
jns
cmpsb
shlb
sahf
out
mov
jno
ss
add
jmp
push
mov
sbb
push
mov
test
mov
add
and
add
sbb
or
loopne
lret
and
bound
inc
cmpsl
movsl
pop
aam
add
pop
inc
inc
daa
and
mov
xchg
cmpsb
ja
pop
sarl
jp
pop
sbb
dec
pop
mov
insl
sbb
orl
cltd
jns
jle
in
dec
movsl
cmpsl
jecxz
sets
or
or
push
adc
inc
dec
aas
imulb
dec
mov
inc
aaa
pop
scas
cld
sbb
cltd
leave
adc
sbb
aad
mov
xchg
ljmp
sub
pop
mov
lret
jno
jb
js
aaa
sbb
xor
sub
arpl
cwtl
or
dec
mov
rcrl
inc
pop
in
adc
sub
cli
fst
sbbb
rcll
adc
sbb
jp
fldcw
in
ljmpw
out
movsb
cld
push
push
add
lcall
add
sti
adc
push
out
dec
fmuls
movsb
scas
repnz
adc
pop
mov
dec
mov
cmp
xchg
das
ss
pop
sbb
sarl
sbb
mov
xor
cmp
pop
aam
mov
das
cmp
lods
dec
scas
xchg
jmp
lds
out
push
sub
insb
cmp
jge
pop
or
xor
adc
and
add
enter
nop
lods
cwtl
jmp
arpl
or
loopne
or
std
outsl
push
loope
inc
test
pusha
ror
push
mov
push
jae
inc
inc
push
fldcw
cwtl
pop
lcall
push
lods
pusha
xchg
push
hlt
movsb
sbb
aas
lcall
mov
imul
mov
xor
imul
test
sbb
nop
push
dec
in
cmp
mov
lret
clc
js
arpl
cli
js
mov
jnp
dec
mov
cltd
es
pop
call
repz
add
xchg
push
call
pop
or
int3
and
loope
outsl
icebp
bound
mov
push
inc
arpl
aad
mov
cld
add
or
mov
fwait
test
int
aad
in
inc
add
xchg
in
mov
pop
pop
xlat
jb
test
pushf
imul
fiaddl
cld
fwait
dec
mov
inc
push
daa
xchg
pop
leave
repnz
aas
mov
test
sub
mull
pop
fwait
imul
fildll
xchg
mov
dec
orb
dec
call
cmp
pushf
sbb
xchg
and
stos
sub
pop
jecxz
je
js
pop
xchg
orl
xor
ficomps
push
lock
xorb
xlat
jo
xchg
xchg
and
rol
fs
in
js
jge
rclb
fs
mov
scas
dec
lods
mov
addr16
jbe
mov
xchg
dec
or
pop
pop
lock
mov
adc
dec
xchg
aam
js
ret
out
imul
and
movsb
cmp
bound
mov
fcoms
insw
aad
icebp
jne
mov
xor
xchg
dec
lahf
mov
cmc
jecxz
pushf
cmp
fimull
imul
add
inc
mov
and
lcall
push
in
stc
test
js
xor
cmpsb
cmp
lods
cs
int
push
loope
ja
add
loope
cmp
jp
dec
out
mov
aaa
insl
js
push
or
xor
and
stc
dec
insb
mov
inc
pop
cltd
fdivl
inc
pop
cmp
sbb
push
outsb
cmpsb
push
xchg
xor
sub
xchg
push
sbb
out
rcrl
adc
pop
leave
inc
insl
push
cmp
bound
adc
mov
adc
jbe
loopne
dec
fmul
inc
outsl
rcrl
push
and
mov
adc
cmp
mov
jns
cmp
dec
xchg
outsb
jmp
sbb
inc
je
add
adc
jmp
jo
or
and
call
push
lcall
xchg
ss
jl
lcall
out
out
add
inc
shl
fisttps
ret
ja
or
dec
aaa
cltd
js
jl
outsl
xchg
mov
idiv
loope
fiaddl
mov
adc
fs
and
pushf
mov
mov
es
add
rcl
xor
mov
int
xchg
cmp
aad
leave
fwait
cmp
or
orl
sub
dec
ret
cmp
arpl
and
mov
or
add
adc
out
pop
push
jae
sub
dec
aas
scas
lock
dec
inc
stos
clc
icebp
lods
lret
push
push
loop
push
iret
pop
pop
mov
mov
inc
stos
push
cmpsl
or
cmc
inc
icebp
fsubs
or
lea
push
xlat
mov
or
test
jmp
pop
test
push
add
jmp
lcall
cmp
lds
sarb
repnz
fcmovne
test
sub
inc
cmpsb
mov
ret
dec
repz
jl
fs
aam
test
loopne
aad
nop
jmp
xchg
dec
sbb
sub
scas
filds
mov
popa
dec
aas
fidivl
dec
mov
mov
sub
rorl
outsl
es
fnstsw
in
jnp,pt
lahf
inc
mov
push
xchg
xorl
loope
push
inc
jl
inc
enter
jl
push
dec
sbb
mov
stos
xor
or
movsl
es
push
or
sbb
rep
push
mov
mov
movsb
in
int3
movsb
cmp
aam
js
in
jge
ss
cmpsb
pop
adc
cmp
xor
sbb
jmp
mov
dec
pop
inc
jbe
xchg
jmp
imulb
repnz
lods
jae
xchg
inc
dec
imul
aam
ret
shr
cmp
sbb
fidivs
loopne
push
dec
jae
testb
lcall
and
mov
mov
push
fsubrs
mov
in
dec
jl
lret
xchg
lods
or
cs
test
add
push
les
int3
add
cmc
and
mov
add
scas
nop
lods
dec
mov
adc
add
aas
lahf
xchg
sahf
sbb
movsb
xchg
ja
repz
dec
xchg
xor
push
add
mov
add
sub
stos
or
into
xchg
mov
push
sub
bound
push
lret
rcl
jecxz
fs
xor
xor
cmp
xchg
xor
and
adc
or
out
pushl
adc
and
std
testl
and
push
push
jae
int
call
ljmp
movl
ljmp
pop
in
add
int3
fidivrl
dec
test
sbb
or
test
and
push
fisubs
mov
mov
fcoml
pop
xchg
mov
lcall
mov
xchg
dec
xor
inc
imul
js
add
push
pop
mov
insb
jbe
insl
mov
daa
std
popf
xor
cld
push
test
rcl
ret
into
leave
sbb
mov
sub
inc
stos
fs
jmp
adc
jns
inc
jmp
in
fidivl
ss
fst
mov
ds
sbb
fdiv
push
dec
push
jbe
fwait
push
bound
scas
or
jns
sub
cmpsl
mov
sub
inc
lcall
push
movsb
cmp
xchg
xor
jns
popa
jns
inc
adc
mov
adc
pop
mov
sahf
frstor
leave
iret
lea
mov
xchg
jne
dec
insl
mov
xor
mov
and
das
movsl
push
sbb
push
cmp
les
lret
daa
test
daa
add
jbe
pop
pop
nop
jno
sbb
idivb
cmc
add
addr16
into
xchg
mov
out
lcall
dec
in
or
rolb
sahf
inc
out
daa
inc
mov
hlt
mov
xchg
mov
pop
xchg
cmp
pop
sahf
ja
test
lock
xorb
dec
xchg
lds
outsl
mov
test
mov
or
pop
xchg
lahf
ret
inc
add
sub
xchg
pop
or
dec
fsubrs
fs
sbb
aas
stos
dec
outsl
xlat
scas
xor
dec
loop
popa
decl
jno
pop
push
orb
push
or
xchg
adc
mov
mov
dec
test
ret
subl
jle
outsl
clc
pop
in
dec
pop
hlt
mov
shrb
movsb
out
stc
nop
pop
aam
inc
aas
xor
loope
inc
je
adc
xchg
mov
cwtl
sub
cmp
lds
imul
out
mov
mov
pop
jmp
iret
shrl
and
pop
lret
sahf
xchg
dec
xorl
imul
or
push
push
mov
sbb
dec
fwait
rorb
es
push
fsts
fwait
outsb
inc
sahf
or
lret
mov
adc
xchg
icebp
test
iret
es
out
inc
aas
data16
and
mov
push
fwait
sub
mov
push
jns
stos
stos
fwait
stos
push
inc
daa
pop
xchg
js
mov
sbb
mov
lcall
push
in
inc
jg
fsubs
xchg
cli
iret
inc
adc
mov
dec
call
jg
je
xor
movb
lcall
add
adc
xchg
adc
sub
and
push
add
pop
mov
ss
dec
mov
push
stc
fstl
mov
and
shl
xchg
insl
cmp
in
jmp
mov
sahf
out
popf
and
xchg
shll
xor
das
lret
cmp
xchg
pop
cmpsb
stos
fcomps
push
dec
inc
mov
loopne
push
and
ret
jp
add
inc
mov
sub
mov
decb
push
mov
sbb
rorb
cmc
add
xchg
jbe
ja
loopne
inc
push
insl
jle
sti
imul
flds
loopne
orb
or
filds
ret
leave
push
iret
push
inc
push
sbb
and
fs
jecxz
fbstp
xor
sub
dec
sbb
sahf
imulb
sub
ficoml
push
xchg
adc
jge
fbstp
mov
dec
les
int
neg
aaa
sub
xor
adc
fdivrl
aam
push
ror
data16
xlat
call
push
dec
push
mov
bound
inc
push
xlat
in
push
outsb
fstp
mov
mov
cli
ficomps
enter
xchg
pop
test
js
mov
rolb
ret
gs
mov
or
dec
pop
mov
test
sbbl
pushl
sbb
xchg
cmp
cwtl
cmp
cltd
jae
lea
xor
sub
xchg
in
jecxz
aaa
adc
mov
sbbb
subb
xor
cmp
jmp
or
in
iret
aas
stos
jl
les
mov
mov
aas
mov
sub
mov
inc
into
adc
mov
movsl
cmp
pop
mov
xchg
negl
pop
mov
push
stos
sbb
ret
es
lret
ss
inc
bound
push
mov
pop
xbegin
out
mov
mov
add
or
sbb
mov
and
fs
imul
in
into
push
sahf
js
imul
int3
mov
enter
xchg
adc
rorl
sub
fidivrl
jmp
push
aam
bound
ja
and
or
mov
in
hlt
sti
sub
fmuls
ja
test
movsb
fisubs
pop
add
mov
cs
dec
sub
pop
xchg
in
std
pop
repz
int
cwtl
fisttpl
jg,pt
shll
mov
clc
mov
dec
pop
repnz
ficoms
fwait
stos
cmp
sub
inc
xchg
loopne
mov
xchg
push
ja
mov
std
sub
aad
int
fildl
mov
inc
aam
push
daa
insb
jge
push
cmc
sub
lods
sub
push
mov
ljmp
pop
mov
mov
mov
fldl2e
jae
mov
and
xchg
adc
movsl
or
dec
push
push
xor
lea
sarb
xor
mov
bound
popa
pop
and
lret
pop
loop
jbe
pusha
or
cmp
jno
inc
add
loop
sbb
push
mov
sub
test
sub
jno
mul
xchg
add
jae
rcrl
aas
pop
flds
adc
inc
mov
and
pmaxub
add
sub
dec
ss
xchg
std
popa
mov
in
jle
outsb
rcll
pop
call
push
mov
jmp
xchg
scas
jae
shl
jne
mov
xchg
rcr
and
cmpsl
cmp
das
add
xchg
lcall
push
enter
arpl
xchg
out
lods
jo
sets
or
or
daa
in
sti
mov
add
mov
fs
sbb
out
pop
aaa
stos
and
pop
mov
sbb
pop
lods
inc
push
inc
cltd
addr16
push
mov
dec
stc
cmp
loop
xchg
sub
lret
push
jmp
scas
test
adc
xchg
and
outsl
sbb
int
mov
cltd
cmp
ljmp
or
jmp
push
jp
inc
dec
sub
ret
xchg
fs
cltd
xchg
or
adc
das
add
lahf
or
push
mov
push
test
stos
mov
mov
inc
push
mov
xor
and
lds
or
jns
push
push
push
and
loopne
mov
call
out
sub
sbb
xor
loop
leave
jno
cmp
or
scas
je
jns
mov
jo
xchg
sahf
or
xchg
pop
mov
jns
add
js
fs
cmp
xchg
ja
insb
mov
mov
cs
mov
out
or
xchg
push
mov
xchg
icebp
xchg
in
cmp
cmc
sub
test
and
ja
aad
sub
add
inc
aaa
sbb
ss
lods
mov
fwait
loop,pt
imul
test
mov
mov
sbb
mov
call
pop
push
mov
test
push
out
cmp
cmpsl
adc
test
mov
jg
sahf
lds
jns
sarl
sbbb
cmpsl
outsb
pop
or
inc
cmp
std
in
xchg
into
or
adc
popa
je
xor
mov
and
adc
dec
adc
insb
stos
pop
call
cmp
add
dec
stc
pop
lods
test
sub
inc
or
xor
add
or
sbb
cmp
inc
out
cmp
jmp
add
jmp
jno
jbe
fwait
shll
lea
addr16
cmp
jecxz
or
je
lahf
jo
cmp
xchg
stos
xor
mov
jl
insb
loopne
ficoms
stos
std
imulb
and
or
pop
inc
imul
subb
js
and
mov
mov
cmp
push
rcrl
mov
loopne
fiadds
xchg
stc
sti
and
lret
cmp
fistps
outsb
out
cmp
xchg
inc
xor
and
cwtl
sub
push
cltd
aaa
mov
pop
fildl
sub
jp
rorl
dec
sub
in
mov
jl
pop
sbb
and
xchg
pop
into
jne
mov
cwtl
ret
les
push
mov
jae
or
sub
mov
mov
adc
cmp
adc
mov
mov
and
shr
jmp
pop
sub
jns
testb
xchg
mov
pop
rol
pop
std
dec
jp
aad
cs
cmp
sbb
arpl
sub
int3
xchg
bound
dec
mov
fwait
push
and
add
das
pop
sbb
lock
dec
mov
cld
mov
repnz
aas
mov
cmc
jb
fstpt
inc
mov
mov
jb
sahf
outsb
scas
test
jp
jae
dec
nop
inc
mov
and
pop
dec
sbb
dec
push
pushl
mov
adc
test
and
pop
iret
in
xor
mov
jnp
cmpsl
and
xor
pop
xor
int3
imull
loop
gs
mov
fadd
fdivl
pop
mov
clc
fdivl
xor
loopne
imul
dec
loopne
stos
movl
mov
repz
pop
sahf
test
bsf
fisubrl
mov
cmpl
js
mov
dec
push
xchg
cs
push
ja
and
mov
mov
mov
and
repz
clc
xchg
adc
ds
aas
test
push
fisubl
sub
adc
pop
ret
rcll
mov
ret
fs
mov
mov
mov
and
add
mov
kaddw
je
xor
mov
outsb
movsl
sbbl
dec
clc
aad
clc
idivb
sti
les
imul
adc
dec
or
lods
mov
dec
incb
iret
jmp
hlt
adc
sbb
push
pop
dec
ja
mov
xor
mov
outsl
add
sub
push
sub
mov
push
and
iret
loopne,pt
dec
out
sub
mov
out
gs
pop
pop
insl
movsl
repnz
lds
in
stos
in
jmp
addr16
loop
jecxz
loopne
int
rorb
xor
sbb
ret
xchg
shll
in
sbb
push
mov
hlt
addl
push
push
adc
adc
push
out
mov
outsb
mov
inc
xor
dec
and
popa
sub
lds
bound
fldl
jecxz
aas
and
out
ja
sub
sahf
push
xchg
push
pop
popf
icebp
test
add
push
add
push
mov
fstpt
dec
js
rcl
or
enter
icebp
enter
mov
or
jecxz
cmc
aaa
inc
cmp
or
jl
xchg
ret
imul
jp
aad
pop
adc
int
outsb
mov
mov
and
sub
cmp
fisubl
daa
jge
daa
repnz
iret
inc
and
loop
cmpsb
jb
cmp
sub
push
stos
sbb
in
das
pop
stos
in
cmp
gs
sub
sbb
jp
in
or
mov
es
jecxz
test
pop
pop
ljmp
movsl
dec
test
repnz
fwait
mov
adc
add
cmp
mov
mov
lods
mov
jge
insb
xor
imul
sbb
movsb
lret
cmc
pop
gs
or
jae
nop
pop
in
pusha
jae
movsl
mov
les
fisttps
sub
xor
pop
shlb
test
jo
cmp
push
sahf
jo
mov
gs
cmp
jno
mov
xchg
std
lcall
int
ljmp
cmp
std
popf
push
xor
js
xor
dec
dec
mov
clc
out
xchg
movsb
negl
mov
gs
push
cmc
ror
dec
movsl
mov
mov
xor
out
mov
sub
sti
repnz
ljmp
mov
dec
push
push
out
lret
mov
je
mov
out
jmp
scas
and
fists
mov
lds
push
xor
or
adc
adc
in
or
lds
xor
dec
rcrl
outsl
lret
cmp
cs
rcrb
xchg
testb
push
cmp
adc
sub
jge
es
movsb
pop
adc
inc
cmp
lods
sub
xchg
cmp
xor
jl
pop
jmp
iret
ficompl
outsl
mov
sbb
or
sbb
cli
or
pop
cmp
xor
in
addr16
xor
nop
sub
or
push
in
xor
inc
adc
mov
sbb
pop
add
jp
sahf
mov
push
outsl
stos
hlt
jne
dec
pop
xchg
sub
cmc
cltd
and
ljmp
mov
dec
inc
orl
mov
scas
test
dec
lock
dec
inc
nop
xor
mov
inc
ret
sbb
mov
jno
test
jae
hlt
inc
les
dec
jb
daa
dec
xor
sarb
aam
mov
push
inc
movsl
sbb
test
mov
jle
cltd
ja
test
dec
adc
andb
insl
xchg
stc
inc
pop
lds
and
dec
mov
shl
les
or
mov
xor
mov
dec
std
aad
push
rcrl
gs
mov
push
sbb
xlat
push
push
movsb
inc
jmp
xchg
add
mov
or
mov
test
sbb
out
repz
ret
pusha
mov
mov
inc
scas
movsl
jp
and
mov
bound
in
pop
pop
xchg
in
xchg
insb
cmpsb
clc
xchg
out
addr16
out
data16
pop
xchg
xor
subb
test
sub
shlb
fiadds
jl
lret
jbe
test
rorb
scas
sub
aaa
xor
push
push
hlt
and
dec
daa
jo
mov
outsl
xor
dec
sahf
movsb
loop
xor
cmpsl
add
adc
mov
mov
js
and
xchg
dec
pop
sarl
movsb
inc
add
frstor
test
cmc
pop
or
pop
push
aam
sti
xor
imul
add
add
rcrl
inc
xor
andl
and
sub
jp
jmp
repnz
xchg
in
sbb
popf
adc
mov
repnz
sub
pop
inc
mov
sbb
inc
adc
cld
stc
inc
test
mov
test
jmp
xor
test
insb
je
fwait
dec
inc
icebp
inc
lods
add
arpl
xchg
nop
loope
pop
and
mov
and
pop
shrb
test
stos
mov
dec
and
mov
leave
insb
loop
mov
out
mov
xor
mov
inc
inc
xchg
movsb
pushl
xchg
es
lods
ja
stos
leave
inc
add
ljmp
call
in
mov
add
popa
jmp
push
jnp
cmp
pop
iret
je
mov
mov
enter
sbb
sub
ret
pushf
enter
jecxz
dec
jb
or
popa
lds
dec
ror
mov
cmp
clc
push
je
lcall
lea
repnz
mov
cmpsl
mov
in
shll
and
mov
lret
fists
jge
adc
mov
movsl
adc
jae
sub
and
shll
sahf
pop
mov
sbb
mov
mov
dec
es
es
xchg
cwtl
or
test
dec
xchg
scas
xchg
push
push
mov
ss
and
cli
and
dec
and
lea
or
fisubrs
int
jno
push
pop
mov
and
add
jp
add
and
mov
mov
adc
jge
mov
jle
repz
xchg
cli
js
push
test
xchg
push
cmp
imul
xchg
cmc
dec
mov
add
sbb
adc
imul
jno
jns
subps
dec
pop
pop
fildll
mov
jbe
inc
adc
andb
sbb
mov
push
and
push
adc
lret
adc
fisttpll
adc
cmp
cmp
adc
inc
roll
out
into
xor
cs
int
adc
xor
push
sub
fwait
rcr
jle
sub
and
dec
push
mov
inc
fisttps
pop
mov
pop
cmpsl
push
jae
add
xlat
aaa
dec
mov
and
cmp
xchg
xchg
je
add
push
and
jmp
push
out
fwait
outsl
push
sub
fsubrl
dec
cmp
xor
or
adc
pop
xchg
je
or
and
jle
mov
jbe
test
sti
call
lahf
push
lret
fisttpll
mov
clc
pop
cmpb
ss
jne
fs
pop
mov
sub
jle
lcall
dec
adcl
add
icebp
mov
push
xchg
pand
ds
mov
inc
sbb
cmc
lods
push
sarb
pushf
sub
push
nop
popf
dec
jge
mov
daa
inc
mov
shrl
movsl
adc
fmull
shrl
out
cmpsb
xor
out
sbb
or
leave
iret
or
leave
std
xor
cmp
aaa
dec
jne
or
mov
daa
sbb
add
xor
pop
lods
fisttpl
fildl
xchg
ds
enter
inc
lds
popa
sbb
loop
push
faddp
and
inc
insl
loopne
inc
adc
in
jmp
mov
scas
add
jae
dec
mov
out
push
adc
test
pop
push
pop
sti
fldenv
sub
add
in
xchg
popa
jmp
loop
outsb
inc
dec
in
pushf
test
clc
mov
push
rclb
or
xchg
cmp
or
pop
xchg
jns
sbb
pushw
mov
dec
lret
xchg
movsl
test
mov
mov
sbb
imul
stos
xor
adc
push
stc
in
lahf
push
stc
mov
fisubrs
xor
xchg
jno
push
and
add
inc
mov
arpl
fiaddl
jle
es
jno
lods
xor
movsb
push
xchg
sbb
pop
pop
lret
mov
xor
adc
push
mov
call
ss
int
xchg
aam
cmp
hlt
xchg
xchg
cmc
pop
nop
push
outsb
inc
mov
call
loope
test
inc
sub
pop
push
jno
js
pop
xchg
mov
sbb
pop
push
jo
fmul
mov
setle
or
sbbb
jae
mov
mov
in
stos
cmp
jns
dec
cs
out
roll
loope
repz
mov
xchg
pop
cmp
or
add
add
call
addr16
out
mov
cwtl
sbb
das
xchg
cmc
mov
jecxz
xor
sbb
pop
enter
dec
xor
xchg
push
push
sbb
pop
mov
jmp
sarb
add
mov
iret
mov
lcall
test
pop
xchg
rcrb
adc
ret
pop
jnp
jecxz
clc
push
xchg
pusha
shll
push
pop
mov
imul
xchg
dec
cmpsl
scas
adc
nop
or
dec
xor
clc
popa
mov
imul
stos
lret
leave
sub
inc
adc
nop
outsl
jno
sub
or
aad
lods
outsb
mov
push
aaa
insb
ret
das
outsl
dec
cmpsl
lahf
jno
push
mov
jecxz
fstpt
adc
into
mov
dec
xor
xchg
sbb
enter
shll
jecxz
jns
subb
lods
push
cmp
mov
aad
mov
bound
ds
test
fdivrs
popa
mov
insb
mov
sub
jns
cmp
data16
popa
test
push
lcall
iret
lock
jmp
imul
les
add
push
mov
orb
call
jnp
push
icebp
push
repz
cmp
lret
adc
rdtsc
push
sbb
aaa
fbld
inc
push
scas
rorb
pusha
inc
mulb
inc
xor
sub
mov
mov
int3
mov
or
clc
outsb
xor
sub
mov
pop
test
sub
mov
ss
mov
or
push
cmp
and
cmp
cwtl
push
dec
add
lock
into
pop
mov
xlat
push
inc
inc
jnp
or
insb
fldenv
xor
jg
hlt
outsl
dec
subb
jl
dec
mov
mov
sbb
push
jne
pop
out
test
aad
ret
lret
cmpsl
js
shr
cmp
les
add
rclb
mov
mov
cwtl
ss
js
je
add
in
js
lock
ja
std
fstl
gs
mov
ds
xorb
cmp
sbb
stc
cmp
cmc
xchg
adc
pop
je
dec
cmpsb
in
cmc
fistpll
xchg
test
adcb
sahf
mov
pop
sub
icebp
add
xor
add
mov
cmp
pop
or
roll
dec
mov
ljmp
mov
sbb
mov
xchg
push
xor
lret
lds
xchg
mov
jbe
cmpl
mov
rorb
bound
inc
loopew,pn
daa
lret
adc
adc
out
mov
mov
mov
adc
mul
jb
jbe
out
ss
cmpsb
out
inc
movsb
mov
out
add
mov
bound
in
inc
xchg
stc
dec
and
mov
psubusb
xchg
mov
push
xchg
fcoml
movsb
mov
jnp
clc
loop
movsb
inc
jb
mov
testl
addr16
xlat
xor
fistpll
invd
sub
lret
iret
in
cmp
lds
popa
jl
inc
inc
aas
push
aam
dec
mov
adc
sub
lock
cmp
mov
and
mov
cmp
xchg
dec
or
clc
divb
sbbb
stc
test
push
lods
adc
sbb
out
loopne
or
adc
ja
xor
in
pop
push
stos
xchg
insl
scas
movsb
icebp
sbb
cmp
aad
scas
xchg
cmp
test
movsb
dec
xor
cmp
into
adc
push
push
ss
scas
out
loop
scas
mov
jbe
pop
inc
pop
sub
mov
cs
mov
out
mov
iret
jge
aas
dec
cs
adc
sbb
pop
movsl
std
aas
dec
insb
lahf
lock
out
mov
and
ljmp
or
sub
leave
jbe
outsl
stos
hlt
or
jg
sbb
add
dec
dec
arpl
ret
inc
scas
popf
fstl
mov
ret
shlb
sbb
imul
mov
xor
fistpl
add
adc
push
ret
stos
sub
mov
push
int
and
aas
out
outsb
or
dec
push
mov
subl
push
into
outsb
sbb
ret
je
mov
adc
jge
jo
lret
push
add
cmp
cmp
mov
stos
div
cmpsl
xchg
cmp
addr16
push
jnp
dec
std
cmc
xor
fcmovne
gs
xchg
push
fdivrs
ljmp
pop
pop
jmp
imul
sub
add
sub
cld
ds
popf
xchg
addr16
sub
je
fwait
movsb
insb
idiv
pop
sahf
cmp
mov
xlat
dec
push
test
bound
in
dec
popa
insb
call
sbb
enter
fiadds
test
orb
fnstcw
adcl
dec
or
push
xchg
add
inc
hlt
xor
adc
mov
mov
xor
push
mov
fwait
cmp
xor
sbb
pop
outsb
cmp
push
popf
xorb
out
loop
push
fwait
rolb
cmp
shr
dec
fidivl
cli
adcl
sub
mov
ljmp
sbb
hlt
cmpsl
add
inc
push
pop
jo
jb
jle
stc
jge
add
add
cmp
int
push
popa
test
inc
cmp
es
test
fistpl
out
hlt
shlb
lahf
or
cmpsb
jno
jecxz
call
daa
insl
mov
and
rolb
fstp
repz
cmp
out
je
shrl
movsl
mov
jno
call
push
stc
jg
sbb
add
xchg
mov
jmp
leave
and
into
pushf
pop
divl
les
mov
pop
testl
hlt
ljmp
aam
sub
leave
push
cwtl
sub
xchg
sbb
iret
sbb
lods
mov
test
xchg
mov
mov
jae
push
add
push
xor
test
popf
lock
push
sahf
insb
pop
dec
sub
pusha
mov
mov
inc
mov
loop
lock
cltd
mov
aaa
xchg
sub
mov
or
int3
mov
filds
addb
dec
dec
add
imul
fisttps
mov
out
ret
jae
mov
push
enter
cmp
popa
movsl
test
cmp
push
sub
cmp
dec
rcrl
repz
lods
dec
jb
pop
inc
and
pop
inc
push
or
push
popa
fldenv
inc
cmc
pop
push
mov
fldenv
fcoml
pop
scas
adc
pop
sub
aam
push
mov
xchg
repz
and
out
xchg
jmp
sub
or
pop
int
pop
adc
push
add
mov
mov
testl
xor
mov
fdivp
and
leave
jnp
jp
in
jno
popf
addr16
cmp
hlt
hlt
mov
jns
call
data16
or
pop
push
faddl
cmpsb
icebp
xchg
dec
sbb
insb
jnp
pop
sbb
or
lods
mov
mov
test
fdivrs
dec
xchg
les
sub
xlat
mov
mov
mov
lods
movsb
mov
clc
inc
aad
not
and
popa
movsb
push
mov
mov
cwtl
mov
inc
ret
push
xlat
add
insl
in
sti
repnz
mov
cli
push
mov
inc
invd
sbb
subb
add
enter
adc
sub
dec
popa
sti
xchg
outsb
cmpl
mov
lahf
jp
push
xchg
xchg
bound
xchg
movsb
add
std
outsb
xor
imul
mov
sbb
xor
popfw
or
mov
xchg
xchg
mov
cmp
out
jns
sbb
enter
divb
mov
rorl
stos
push
xlat
xchg
stc
xor
test
call
cmp
sbb
out
mov
jbe
mov
push
out
pop
mov
adc
adc
sub
or
pop
ret
ds
les
outsb
xor
aas
sub
inc
xor
push
out
dec
xor
sub
daa
xchg
xchg
dec
setbe
mov
inc
out
gs
in
xchg
xor
inc
cmpsb
loop
dec
adc
mov
and
lds
fistpl
jge
xor
mov
dec
ret
add
adc
daa
je
mov
sbb
xchg
mov
push
pop
lds
xlat
ds
pop
dec
call
loopne
or
sub
push
cmp
sub
or
into
pop
push
test
and
sub
jp
and
xor
xor
nop
sub
ljmp
filds
hlt
aaa
fsubr
bound
adc
add
inc
das
ret
test
in
and
ret
push
fldl
mov
pop
addl
push
mov
std
out
cmc
mov
and
dec
inc
loope
les
orl
shrb
push
outsb
insb
shll
imul
pop
lea
idivb
repz
or
aad
adc
adc
lods
andb
mov
outsl
pop
mov
out
xor
rclb
ret
sbb
lea
loope
mov
aad
data16
test
repnz
push
or
jecxz
sub
sub
pop
mov
dec
mov
ss
movb
stos
cltd
lcall
jns
add
push
mov
sub
cmpsl
lods
sub
stos
sbb
mov
mov
or
dec
inc
out
fdivl
jp
xor
sub
int
daa
cmp
sbb
hlt
cmc
pushf
dec
fistpl
addr16
rorb
out
ss
xor
jae
les
fimull
imulb
inc
ret
test
lods
xorb
mov
push
jae
add
dec
adc
mov
fucomi
bound
leave
cmp
push
fldl
hlt
cwtl
jp
xlat
push
fisubrl
xchg
scas
aas
mov
aad
pop
je
scas
ret
scas
jns
divl
xchg
and
sbb
scas
jne
pop
fwait
adc
enter
aad
das
dec
pop
fisubrl
fdivrs
cmpsb
iret
dec
jne
icebp
fmuls
repz
xor
fstl
hlt
out
in
push
sub
ss
pop
mov
adc
dec
ret
aad
xor
scas
xor
es
pop
jnp
test
mov
push
jmp
adc
mov
cmp
in
ljmp
loop
push
mov
adc
xor
mov
pop
jecxz
or
push
mov
loop
push
loop
into
pop
enter
xchg
inc
or
sub
daa
ljmp
pop
lods
mov
cmp
mov
xlat
jmp
xor
test
sub
cmc
mov
cwtl
xor
sub
inc
push
or
or
lahf
fistpl
arpl
es
mov
push
mov
aaa
test
rcrb
cmpsl
xchg
mov
push
gs
xchg
les
outsl
lock
test
cmove
xchg
neg
les
ljmp
adc
cwtd
mov
clc
and
pushf
jns
mov
mov
insb
in
aam
shl
lea
lret
jbe
insb
inc
das
in
sbb
pop
push
sub
pop
inc
adc
xor
fneni(8087
pop
sbb
enter
bound
cmp
and
mov
sub
pop
mov
jp
xor
inc
in
pusha
mov
mov
jle
outsl
mov
mov
sbb
cwtl
fiaddl
repnz
arpl
pop
movsl
fadd
push
ja
call
fcmovb
sub
inc
adc
and
dec
jne
fwait
mov
add
mov
shll
jmp
push
or
lods
adc
out
pop
jo
mov
shll
pop
inc
clc
mov
push
xor
add
mov
dec
sub
mov
pop
inc
inc
les
repz
lahf
or
dec
loopne
out
jmp
jnp
xor
pop
fdivrl
xchg
or
movsl
out
cmpsb
dec
xor
dec
js
push
cmp
adc
cmp
sub
cmp
cmp
cmp
pop
inc
lahf
mov
shll
dec
call
dec
add
adc
fldt
into
xchg
in
aam
decb
adc
mov
jo
or
sbb
lea
loop
jb
and
mov
sub
arpl
cmp
add
cmp
jecxz
mov
cmc
lahf
loopne
sub
jne
push
popf
pushf
mov
dec
loopne
pusha
test
xor
sbb
ds
test
adc
imul
fimuls
xchg
inc
sub
std
mov
xor
push
pop
mov
and
lret
jge
in
aad
ja
mov
leave
imul
add
das
sbb
inc
dec
adc
lcall
xor
inc
sbb
daa
jmp
les
scas
dec
repz
mov
aad
nop
cwtl
or
mov
fimull
add
popa
jo
cmp
test
out
pop
pop
scas
mov
cmp
jo
push
std
dec
movsb
enter
xchg
add
and
xor
and
push
sbb
mov
xchg
data16
testb
adc
repnz
mov
xor
iret
xor
repnz
dec
scas
pop
ja
and
push
fldt
and
sub
in
jl
jge
movswl
fbld
pop
jb
cmp
xchg
pop
or
das
andl
push
ja
push
mov
mov
mov
fwait
bsf
jmp
cli
push
inc
std
mov
or
mov
icebp
sti
repnz
leave
add
inc
fnstenv
fwait
inc
or
leave
cli
iret
fistpll
cmpsb
push
rol
adc
mov
adc
lods
pop
pop
pusha
test
lods
movsb
fwait
subl
sbb
outsb
pop
inc
addl
popf
cmp
jge
xchg
ss
pop
pop
test
clc
dec
movsb
lock
int3
adc
neg
xchg
mov
mov
lcall
imul
push
das
invd
pop
shl
adc
jnp
add
push
jmp
jae
pusha
inc
test
jg
fildl
fistps
mov
mov
inc
mov
imul
dec
lret
fnstenv
or
pop
mov
adc
sub
scas
int
icebp
cmp
in
push
add
xchg
xor
loop
mov
mov
test
push
sbb
inc
shrb
xchg
movsl
ja
mov
enter
push
outsb
ficoml
fidivs
cmpsb
inc
stos
dec
xor
mov
fstpl
data16
mov
adc
sbb
add
cmp
sub
idivb
test
lahf
or
xchg
mov
aad
outsb
pop
mov
and
mov
clc
pop
imul
mov
les
in
pop
ret
shll
xor
out
inc
hlt
mov
fs
fs
and
es
das
adc
repnz
cmp
inc
aam
pop
cld
daa
shl
sbb
pop
mov
cmpl
sub
sahf
xchg
inc
test
jp
ds
mov
inc
dec
leave
xchg
mov
xchg
loope
or
mov
mov
cmp
lea
and
lret
repz
cmpsb
xor
sbb
dec
jno
pop
xchg
jmp
xchg
mov
and
pushl
push
iret
mov
daa
cmp
add
scas
mov
stos
lods
mov
xchg
cmp
inc
ficomps
lods
xor
mov
lds
hlt
inc
lahf
dec
sbb
add
xchg
xor
mov
inc
xchg
sbb
testl
in
jne
ret
inc
not
xchg
pop
mov
nopl
jno
movl
pop
cmp
ljmp
notb
cmp
xorl
adc
mov
add
adc
test
nop
and
xor
aas
movsb
das
push
xor
pop
addr16
jle
ljmp
mov
sub
into
int3
sub
adc
pusha
insb
mov
lea
jbe
outsb
frstpm(287
loop
decb
xchg
sbb
shlb
mov
and
aaa
jmp
pop
dec
aas
test
and
adc
cmp
pop
je
xor
adc
xor
mov
idivl
or
mov
mov
aad
imul
jp
lret
cltd
insb
sbb
add
fwait
push
incb
and
lcall
fs
imul
mov
mov
aas
mov
inc
dec
sub
sbb
jnp,pt
mov
dec
lahf
mov
aas
xorl
mov
sbb
lea
mov
jmp
stos
leave
and
std
mov
ljmpw
or
test
xor
and
lea
ret
cmp
rcll
insb
sbb
push
rorb
lods
sub
jno
add
jne
addb
cmc
bnd
das
aam
scas
push
mov
sbb
pop
push
xchg
push
jp
incl
xor
hlt
in
sbb
rolb
push
adc
fsubrp
or
clc
jns
ss
push
sub
sub
pop
inc
xchg
inc
xor
mov
and
mov
push
iret
or
push
sub
or
inc
push
psubsb
insl
push
test
and
xlat
pushf
dec
xor
dec
hlt
rcll
shlb
aas
or
test
pop
push
jno
inc
mov
cltd
pushw
pop
sub
iret
outsl
mov
fwait
sub
sub
ja
mov
nop
out
xchg
or
cmp
xchg
mov
and
mov
leave
dec
add
cld
mov
ja
mov
jb
repz
shl
xchg
mov
mov
adc
sub
dec
jp
add
pop
ret
cmp
std
or
mul
adc
fs
cmp
mov
mov
insb
mov
xchg
mov
clc
imul
outsb
out
mov
lea
or
scas
inc
mov
adc
in
jge
cmp
or
daa
call
rep
insl
adc
insl
inc
popf
mov
dec
mov
mov
loope
mov
ds
call
cmp
add
xor
xchg
and
fistpl
out
sbb
sub
or
jo
cmp
xchg
sbb
rol
mov
and
xor
movsl
outsb
into
mov
cmp
dec
xor
push
aam
mov
adc
cwtl
jne
push
xor
mov
mov
pop
pushf
sub
mov
pop
mov
pushf
jp
xchg
sub
pop
vpshuflw
cs
or
mov
lret
rorl
pop
push
sbb
cmpb
sub
add
mov
rorl
cmp
sbb
mov
inc
jne
xor
cmp
jns
xchg
into
and
push
test
insl
enter
mov
popf
aaa
in
mov
popf
mov
xchg
cs
inc
or
stos
lret
jnp
mov
enter
mov
or
adc
sahf
xchg
push
scas
les
out
inc
jbe
pop
adc
mov
cmp
mov
daa
fisubrl
or
jnp
mov
xchg
imul
mov
lcall
inc
ja
les
jecxz
lret
lcall
add
outsl
pop
aas
lcall
xlat
in
dec
or
stc
push
jno
lret
popa
and
mov
mov
hlt
subb
imul
xchg
jae
movsb
add
push
fwait
lret
js
js
xor
ljmp
movsl
mov
mov
cmc
sarl
push
out
orl
rcrl
rcll
inc
jp
jno
lahf
lods
pop
mov
push
je
cmp
repz
stos
cmp
lret
xchg
sbb
dec
fcoml
hlt
test
push
mov
xchg
movsb
out
cmp
in
test
xor
sahf
jb
dec
orl
mov
xor
out
gs
cmp
cmp
sbb
arpl
pop
iret
repnz
sbb
cltd
cwtl
outsl
in
dec
xchg
lret
sbb
ret
adc
sub
orb
push
test
stos
mov
push
imul
mov
dec
pusha
jns
cmp
jge
sub
fsubl
lds
call
arpl
and
mov
int3
hlt
push
outsl
cmc
pop
inc
xchg
and
in
mov
lods
jne
pop
sbb
nop
movsb
or
cmpsb
xor
sbbl
and
ss
mov
and
xchg
push
add
out
sub
popf
insl
cmp
lret
cmpsb
add
movsl
sarb
sbbl
inc
jmp
cmpsl
mov
mov
or
or
in
insb
movsb
rcrl
jp
icebp
mov
daa
lds
fwait
cmp
mov
sti
inc
out
jl
es
mov
cmpsl
roll
cld
inc
and
mov
popf
out
adc
in
pop
jnp
mov
sub
sub
mov
or
lret
xchg
clc
and
in
mov
mov
inc
xchg
lret
aaa
out
jecxz
add
add
and
ficoms
in
lods
outsb
sarb
stos
inc
add
imul
xchg
push
ljmp
cmp
xor
lods
les
ficomps
in
mov
stc
xchg
xor
xchg
lahf
pop
pop
inc
inc
push
inc
loope
in
add
mov
mov
lahf
mov
mov
je
out
int3
sub
xor
out
stos
inc
fdivrl
fsubs
gs
xchg
cmp
and
add
xor
pop
adc
movsl
jnp
or
and
iret
popf
xor
daa
sbb
and
es
mov
movsl
push
out
sub
outsl
xchg
das
test
shll
push
jl
popf
cmpb
loope
adc
pop
fdivl
xor
xor
loopne
xor
pop
dec
addr16
leave
push
es
je
add
fdivr
fmuls
jle
mov
imul
lods
jp
and
add
adc
lcall
pop
shll
pusha
cmc
subl
mov
adc
loope
mov
in
add
loopne
xchg
ljmp
cmc
mov
or
addr16
and
jo
add
push
shlb
outsb
test
mov
jge
sbbb
cltd
pushf
aam
subb
mov
xchg
testl
fistpl
js
push
cmp
ret
pop
jnp
into
orl
divb
dec
scas
enter
fnstsw
scas
out
shrb
add
fnstsw
xorb
inc
out
fdivs
jnp
push
in
rclb
push
imul
icebp
cmc
stos
jo
pop
mov
dec
mov
push
icebp
shl
and
inc
loopne
jb
xor
dec
test
mov
ljmp
lcall
repnz
push
test
daa
adc
sbb
out
adc
jns
and
popf
ror
dec
stos
movsl
jl
inc
lcall
jo
sahf
int3
bound
fisubl
jns
les
movsb
nop
repnz
xor
pop
adc
and
clc
and
sahf
push
sub
aas
fadds
xor
sarl
jnp
in
pop
lds
lahf
aaa
rcll
add
mov
xor
in
mov
jp
cmp
addr16
or
insb
dec
js
jae
pop
sbb
or
mov
push
add
fcom
mov
mov
in
adcl
jns
rcll
divl
mov
dec
pop
sbb
xlat
jne
stos
scas
inc
ret
adc
int3
les
or
xor
test
and
adc
push
dec
std
xlat
push
mov
pop
mov
xor
rolb
sbb
clc
ret
lea
pushf
and
xor
sahf
xor
inc
push
popa
rcll
xchg
dec
push
outsb
adc
add
push
aas
repnz
push
popf
xor
push
pop
fstps
lods
gs
mov
insb
or
out
nop
xchg
jns
push
dec
mov
sbb
enter
bound
aaa
test
mov
lock
loope
test
or
lret
fildl
mov
cli
dec
mov
xor
cmp
icebp
adc
mov
sub
jmp
xchg
pop
cli
pop
arpl
aaa
and
aam
xlat
nop
les
loop
popa
mov
cmp
push
add
mulb
std
imul
outsl
push
jp
mov
and
loop
cmp
dec
and
add
push
inc
jbe
and
jp
and
es
pop
mov
xor
imul
stc
in
push
xor
inc
mov
add
adc
sbb
call
ret
jo
dec
sub
sub
dec
or
sbb
and
mov
lods
scas
xchg
pop
pop
pusha
sbbb
lods
loope
scas
leave
and
xor
orl
jle
pop
subb
jl
and
cli
mov
sbb
dec
cmc
rclb
dec
xor
mov
mov
mov
call
and
add
repz
sbb
xchg
clc
cmc
jle
jecxz
loop
cltd
dec
gs
cmpsb
ret
push
fwait
or
sbb
xor
mov
out
outsl
push
lods
stos
jne
popf
and
iret
cli
imul
shll
imulw
mov
xchg
gs
dec
dec
dec
mov
jbe
sbb
add
pop
mov
and
popf
dec
pop
fsts
sti
xchg
rorl
dec
jmp
jns
rolb
lcall
arpl
test
std
xchg
add
adc
movsb
test
icebp
insb
xor
sub
xor
pop
mov
rcrb
jg
push
xchg
fstps
jo
pusha
outsb
sbb
jmp
outsb
test
pushf
sbb
push
jne
xor
inc
out
mov
call
mov
mov
xor
repz
test
fcoml
rcrb
ret
mov
add
insb
dec
mov
in
mov
lcall
leave
lock
add
inc
mov
add
xchg
push
and
and
jae
loop
dec
dec
pusha
inc
add
out
jo
out
test
xor
insl
loop
xchg
mov
cmp
addr16
mov
push
repz
clc
sub
test
leave
mov
pop
pushf
add
xchg
js
lea
test
dec
lret
cld
mov
sbb
in
cs
cs
mov
pusha
insl
sahf
lahf
testb
or
cld
xchg
popa
push
sub
push
sbb
mov
jmp
inc
and
js
push
not
arpl
adc
inc
int3
or
inc
pop
push
sahf
jl
out
addr16
pop
repz
and
xor
sbb
in
jg
mov
inc
mov
cmp
outsl
xchg
or
adc
sub
adc
mov
sbbl
push
leave
repz
outsb
xchg
fildl
mov
or
lods
out
pop
dec
pop
or
lcall
pop
std
cmc
add
loope
out
shlb
ss
fdiv
and
in
nop
int
pop
pop
push
push
je
out
xchg
mov
sub
jno
dec
test
adc
lcall
push
adc
lret
sub
mov
xor
and
dec
stos
cmp
mov
or
in
adc
shrb
inc
das
out
add
ljmp
xor
stc
push
sub
jb
out
ret
repz
mov
push
xor
cmpsb
int
fdivp
pop
dec
add
pop
cmpsb
add
pop
in
push
sbb
push
cmpsl
pop
mov
inc
dec
adc
imul
ret
pop
int3
cli
mov
aaa
jmp
rcrl
mov
js
xchg
stc
push
jne
adc
stos
push
mov
mov
dec
xchg
cmp
jne
or
dec
inc
or
aas
pop
aas
adc
pusha
movsl
sbb
fstpt
fnstcw
stc
mov
pop
in
push
inc
out
jle
stos
ret
aaa
faddl
ret
xchg
jnp
leave
enter
cmp
fdivrl
pusha
pop
and
cld
pmaddwd
ja
adc
adc
cmpsl
cltd
in
das
jge
addr16
lret
mov
add
fsubrp
add
cmpsb
dec
dec
fldl
xorl
std
insl
and
and
cmp
inc
add
in
jmp
inc
xlat
push
push
mov
adc
mov
repnz
or
sub
in
sti
ss
mov
pop
xchg
pop
fstps
mov
cmc
xchg
and
into
jp
psubsb
xchg
xlat
adc
or
movsl
mov
adc
scas
jae
loop
daa
mov
xchg
ss
jbe
pushf
and
nop
mov
fidivrs
or
lcall
mov
clc
inc
cmc
into
jnp
ljmp
cmp
pop
and
shld
inc
ret
xor
mov
imul
repnz
inc
mov
in
mov
cli
mul
movsb
push
cmp
push
sbb
adc
and
and
and
mov
outsb
xchg
inc
or
push
shlb
xor
ja
leave
sbb
je
push
xor
add
fiaddl
jge
sub
sub
mov
xchg
scas
or
lds
pop
mov
dec
adc
inc
push
jmp
loop
mov
test
push
push
pop
mov
outsl
cmc
xchg
repnz
js
and
inc
push
adc
ficomps
mov
insb
insl
mov
xchg
data16
ja
popf
arpl
pop
int
adc
jmp
dec
stc
fwait
mov
cld
xor
iret
loop
jle
adc
fisubl
gs
loop
je
dec
and
mov
repnz
adc
int3
cmp
jmp
jmp
mov
lods
gs
pop
arpl
jg
mov
in
xor
aaa
addb
mov
dec
insl
jmp
popa
dec
out
cmp
pusha
out
xor
sub
out
add
mov
fisubs
test
adc
repnz
mov
dec
dec
mov
lds
adcb
push
mov
xlat
inc
push
sbb
cltd
fs
hlt
mov
mov
dec
and
or
push
mov
test
push
in
push
std
jmp
jge
or
mov
push
push
inc
push
push
sahf
fadds
aam
mov
jmp
push
fs
and
out
sbb
push
mov
insl
adc
inc
adc
xchg
dec
into
test
adc
lahf
xchg
scas
mov
or
lret
sbb
xchg
inc
mov
inc
sarl
push
clc
dec
lret
iret
sub
jge
inc
popf
inc
add
loopne
adc
ljmp
pop
mov
xchg
xchg
xor
mov
adc
loop
xor
jnp
pop
fnstcw
lret
pushf
dec
ret
aam
addb
daa
jne
dec
jns
push
jl
push
aad
movzwl
scas
add
fstpt
sub
or
imul
sbb
xor
ds
push
jp
sub
stc
dec
xor
mov
adc
inc
push
cmp
cmp
pop
dec
scas
in
ret
dec
sti
cmp
dec
punpckhwd
insl
mov
loope
pop
jno
pop
push
nop
pop
mov
mov
bound
icebp
dec
dec
mov
and
incl
xlat
pop
push
pop
sub
icebp
dec
mov
jne
mov
inc
xlat
mov
or
imul
daa
fildll
inc
adc
enter
sub
sub
aaa
push
shl
loopne
mov
mov
fisubrs
cli
jnp
xor
sar
stos
mov
xchg
addr16
aaa
pop
mov
addr16
outsb
push
cmp
mov
adc
enter
popa
dec
lcall
or
mov
push
cld
add
cwtl
gs
and
lods
pop
out
in
inc
scas
in
cmp
aad
pop
dec
push
aam
addr16
fwait
cld
xor
push
nop
shrl
rcrb
add
dec
push
inc
dec
push
cmp
pop
call
inc
mull
mov
cmp
in
mov
jb
sti
sub
xlat
mov
mov
mov
lea
mov
cmp
xchg
popa
pop
jmp
sbb
dec
movb
adc
sbb
lods
dec
dec
sbb
xor
jmp
mov
xchg
out
test
insb
mov
or
jmp
int3
adc
xor
cwtl
pop
in
jg
cmp
cmp
pop
mov
mov
pop
sbb
xor
cmp
stc
lds
js
fsubrl
add
dec
cmpb
inc
insl
jbe
sub
fcomip
fdivp
rcrl
into
dec
xchg
or
lret
push
jp
pop
lret
popa
jp
mov
test
loop
adc
shlb
cli
xor
or
cmp
adcb
shl
ja
push
es
repz
aas
mov
mov
cwtl
dec
cmp
dec
loopne
shll
jb
aaa
je
mov
jne
insb
push
mov
adc
xlat
ss
xor
rcrb
sbb
push
and
in
mov
rcrl
inc
mov
lret
js
mov
cmp
jp
divl
stc
inc
jmp
sub
mov
lods
test
shr
mov
adc
adc
mov
push
jae
mov
in
pushf
rorl
mov
or
push
and
jno
sub
pop
insl
xor
jecxz
shll
inc
cltd
out
pop
jb
fwait
adc
mov
jae
pop
pop
fisttps
outsb
and
fwait
sarl
lock
xchg
cmp
imull
sbbl
sahf
and
and
adcb
pop
rcll
enter
test
xor
les
js
add
cwtl
scas
dec
push
std
pop
leave
dec
mov
inc
bound
fwait
inc
jne
aam
shll
dec
pop
iret
dec
fabs
sub
in
call
cltd
in
cs
add
push
pushf
sbb
fisttpll
push
lds
mov
push
loopne
sbb
mov
mov
sarb
and
popf
mov
mov
xlat
pop
pop
adc
imul
pushf
adc
jns
in
push
mov
xorl
add
or
fnstenv
lret
xchg
cli
testb
lea
test
es
fcomi
pop
dec
stos
sub
sub
add
xor
add
fs
pop
jg
mov
ljmp
pop
ljmp
jmp
push
inc
clc
clc
add
jle
inc
mov
test
test
imul
xor
inc
stos
sbb
in
jg
icebp
sbb
sarb
pusha
mov
dec
push
xchg
fimuls
cmp
mov
popa
insl
imul
pop
mov
test
sub
mov
dec
adc
jno
notl
or
xor
testl
inc
dec
xchg
adc
movb
lcall
repnz
pop
xor
cmp
js
inc
jb
cmp
adc
out
xchg
cltd
das
dec
sub
add
addl
xchg
jecxz
push
mov
jmp
xor
mov
popf
mov
cmpsb
les
sub
lock
fists
adcl
mov
hlt
dec
pop
fistps
sbb
jmp
in
and
clc
imul
mov
adc
xor
aam
out
sarb
sbb
xchg
mov
sbbb
mov
push
jno
jmp
fidivrs
cmp
and
call
inc
push
mov
ret
out
dec
inc
cwtl
mov
out
cmpl
repnz
and
pushf
jno
stc
adc
jg
xor
lock
add
sub
push
sub
mov
push
mov
out
std
cmp
mov
mov
scas
out
hlt
mov
xor
clc
repnz
aad
mov
xchg
adc
iret
xchg
pop
lahf
fidivl
inc
xor
xor
ja
loope
xchg
lods
dec
aaa
add
int3
addr16
mov
imul
inc
sahf
sub
aas
pusha
cmp
mov
cltd
dec
lds
pop
sahf
xor
cmpb
aaa
insl
sbb
jg
or
movb
pop
lcall
lcall
dec
jmp
push
and
mov
cmp
arpl
mov
rcl
jp
std
pushf
push
dec
negl
leave
xchg
xor
add
rorl
lret
sub
cmpsl
out
xor
ljmp
fcomps
adc
lock
popf
stos
sub
and
jno
dec
and
sub
adc
lcall
mov
inc
lds
mov
movsl
shlb
mov
out
pop
mov
and
mov
lcall
xor
pop
imul
rcr
aaa
xchg
loopne
mov
pop
add
dec
pushf
mov
jne
mov
or
rcl
fnstenv
rorb
and
inc
adc
push
cmp
decb
sub
xchg
lods
rcrl
cs
lods
sahf
in
cmp
lea
movsb
push
xchg
mov
sti
adc
cmp
fldt
push
popl
cmp
mov
pop
sbb
dec
mov
mov
movsl
xorb
lock
addr16
mov
imul
incl
js
stos
dec
jge
call
fwait
xor
pop
lea
or
pusha
xchg
hlt
adc
xchg
imul
into
arpl
sub
pop
mov
xchg
cli
cwtl
hlt
add
xchg
lds
or
inc
js
xchg
push
fs
flds
xchg
fwait
sub
sbb
push
orl
dec
dec
insl
mov
outsb
pusha
scas
ja
clc
inc
or
push
cmp
add
and
cmp
hlt
push
and
mov
or
lea
jg
daa
mov
xchg
hlt
fistl
cmc
inc
in
arpl
rcrb
sbb
lcall
andb
xchg
pop
mov
mov
dec
dec
add
imul
in
std
mov
pop
lods
dec
rolb
sub
pop
negl
dec
movsl
clc
dec
push
insb
fadds
mov
imul
dec
lock
mov
jmp
pop
fs
aad
loope
clc
rcrl
adc
jbe
xchg
fcomp
mov
je
dec
fdivrl
sub
jge
popa
jl
sub
fcmovb
dec
cmp
xchg
frstor
xlat
clc
jl
cmp
mov
jns
xchg
insl
dec
and
data16
dec
jnp
pop
test
pop
sub
xor
lret
dec
imul
daa
xchg
jae
xchg
inc
mov
das
and
mov
inc
or
jo
pop
xor
hlt
mov
add
loopne
push
xchg
loop
pop
mov
jnp
bound
mov
loopne
lds
inc
push
mov
fstpt
in
jecxz
mov
sbb
cs
test
mov
push
dec
mov
pop
xchg
cmp
pusha
mov
mov
inc
test
nop
mov
imul
push
out
xor
xor
sahf
push
sahf
aad
fistpl
sbb
mov
out
jnp
mov
lds
je
lcall
je
movsb
loopne
shlb
add
imul
mov
xor
mov
sbb
outsb
vpsrlw
daa
mov
ss
imul
xor
cmp
lods
pop
mov
hlt
sub
out
fxch
pushf
add
fstps
ja
ljmp
aad
negb
lea
mov
jmp
inc
inc
xor
xor
popa
out
pop
push
cld
out
cmpb
mov
xor
mov
sub
popa
lods
push
lods
data16
lods
and
imul
dec
xchg
push
push
pop
push
mov
add
adc
push
scas
flds
cmp
xchg
or
adc
out
pop
pop
lods
cmc
out
jbe
mov
inc
pextrw
push
enter
es
or
push
add
adc
mov
inc
mov
or
into
add
xchg
ret
pop
es
cwtl
sub
xor
push
push
or
sbb
jo
outsb
cli
jne
inc
jmp
inc
mov
rcrl
stos
insl
sbb
sti
arpl
ret
xor
and
push
rcl
cmp
adc
lock
dec
sbb
mov
jl
adc
mov
inc
pop
je
movsl
add
mov
jle
in
int3
mov
testb
xchg
sbb
in
leave
arpl
add
mov
dec
xchg
fs
mov
cmp
jle
cs
cmp
push
inc
and
and
jo
dec
popf
mov
xchg
insl
aaa
inc
ret
inc
es
btr
mov
or
es
fs
cmpsb
pusha
aaa
enter
mov
aam
pop
dec
cli
mov
mov
inc
or
ret
dec
lret
shlb
xchg
shll
and
add
push
pavgb
xchg
rorl
xor
shll
or
leave
jae
outsl
mov
loop
pop
xchg
clc
mov
into
scas
add
adc
xor
hlt
jno
xor
jae
ret
cwtl
or
sbb
ret
pushf
and
push
push
inc
fcmovu
jae
cmp
xor
bound
add
gs
in
insl
cmp
xlat
mov
arpl
sbb
fnstenv
adc
arpl
insb
mov
cmpsb
shll
ret
repz
inc
imul
sbb
or
pop
imul
jecxz
incb
push
cld
fildll
add
daa
add
es
ljmp
in
sub
sbb
mov
mov
sbb
loopne
or
mov
adc
jl
mov
push
popf
int3
shlb
lret
jnp
dec
into
imul
bound
loop
inc
stc
test
sub
lahf
ss
push
xor
mov
xchg
push
xor
pop
out
sub
imul
cmp
cmpl
mov
rclb
test
icebp
jne
stc
loop
adc
cld
adc
arpl
sahf
aad
popf
and
cmc
movsb
icebp
out
pop
add
jb
loopne
jnp
pop
add
jns
imul
cmpsl
movsb
push
or
pop
fisubrl
int3
andb
popa
fpatan
rcl
mov
std
mov
jecxz
sbbl
and
sub
jbe
rcrl
cmpsb
jns
and
loop
or
pop
out
push
sbb
add
movsb
add
imul
add
shll
ja
inc
pop
jae
movsb
fimuls
xor
dec
repnz
sub
je
iret
popa
fiadds
mov
loope
add
aad
xchg
ficoms
or
or
cmpsl
jl
sbb
lcall
lods
cli
shrb
mov
inc
jle
mov
inc
sbb
aas
cwtl
or
stc
in
cs
mov
jb
pop
pop
sbbl
sarb
lods
and
lea
popf
iret
test
mov
mov
mov
int
xchg
push
cmp
mov
pop
adc
xchg
push
ds
cmc
jns
jno
adc
test
les
mov
in
sbb
pop
lret
jae
test
test
cmp
xlat
cmp
fmuls
mov
lcall
ljmp
mov
jl
jecxz
sti
inc
add
enter
push
rcr
nop
popa
stc
xchg
inc
xchg
ljmp
je
shrb
xchg
inc
subl
shr
push
sarb
into
pusha
leave
push
sub
push
pop
push
mov
in
mov
lods
jge
mov
pop
add
jns
jne
xchg
rorb
leave
xlat
push
xchg
je
mov
pop
sbb
fmulp
mov
mov
les
lds
dec
icebp
mull
imul
mov
sub
iret
xchg
fs
jmp
loope
jno
repnz
pop
test
es
mov
scas
pop
sbb
xchg
lea
cli
mov
mov
pop
inc
ret
cmpsb
push
push
test
sub
shlb
xchg
cmp
dec
xchg
mov
mov
jmp
insb
mov
push
popl
sahf
dec
cltd
or
xchg
scas
cmp
divl
nop
add
ficoml
mov
call
and
call
dec
mov
jg
insl
cmp
mov
rclb
mov
mov
stos
xor
in
or
imul
pop
pop
add
insl
in
in
xchg
mov
mov
and
sti
mov
mov
sbbb
incl
jnp
lock
inc
outsb
xchg
iret
pop
call
pop
and
jge
fwait
out
jle
adc
xchg
dec
scas
mov
pop
jnp
xchg
rorb
mov
out
jnp
mov
shll
leave
mov
fldcw
xchg
sbb
mov
out
mov
leave
aas
adc
push
jmp
jae
inc
or
adc
lods
popf
xor
or
cli
aas
and
xlat
sbb
push
rcll
jp
or
out
pop
dec
sti
in
mov
or
cmp
leave
or
insb
clc
dec
sub
jl
and
dec
jp
mov
outsl
pop
cmp
lea
push
shlb
mov
mov
cmp
outsl
les
add
mov
inc
pusha
inc
and
fbstp
pop
xlat
adc
negl
shll
je
jg
mov
sar
pop
mov
mov
push
insb
andl
popl
mov
mov
ss
jmp
or
cmp
jne
dec
lea
roll
mov
ljmp
push
pop
shll
pop
cmp
cmpsb
inc
mov
add
aaa
cmp
cld
or
and
in
jecxz
addr16
aam
scas
push
mov
push
pop
repnz
scas
test
xor
push
add
insb
lock
fmull
jbe
rcll
dec
add
sub
imul
pop
xor
pop
nop
rol
pop
das
testl
lock
sbb
xor
leave
nop
dec
ret
iret
fists
movsb
mull
add
dec
jnp
int
xchg
pushf
mov
xchg
out
notb
mov
xor
popf
movsl
fs
cmp
icebp
lcall
fcoms
bound
mov
sarl
in
js
push
xor
adc
std
or
jns
out
les
xchg
xor
xor
xchg
leave
sub
mov
fildl
mov
xchg
push
mov
lock
scas
out
and
gs
xchg
or
inc
or
xchg
movsl
aam
test
in
adc
imul
outsl
push
jno
jmp
xchg
ficoms
or
insb
imull
adc
bound
insb
mov
jmp
sbb
std
and
jne
jo
push
hlt
loope
cmp
xchg
mov
shl
cmp
mov
and
inc
mov
mov
fbld
push
inc
pop
enter
mov
add
jnp
loopne
sub
dec
and
call
mov
sbb
sbb
popf
mov
cld
push
add
or
ficoml
sub
pop
pop
cmp
push
addr16
cmp
orb
jecxz
xchg
loope
mov
mov
icebp
push
cmp
ret
cli
jns
pop
negb
cmc
push
pop
xor
inc
and
jle
mov
mov
push
dec
adc
scas
ret
inc
stos
mov
or
xchg
pop
sbb
or
xor
andb
stos
mov
xchg
ss
push
cmp
pop
push
cld
mov
iret
hlt
pop
mov
pushf
adc
aaa
jl
adc
mov
jns
pushf
lret
mov
or
shll
push
xchg
je
adc
push
xchg
add
jecxz
es
addr16
pop
mov
ljmp
dec
dec
loope
or
xchg
cmp
and
xchg
cli
xor
lret
cltd
sub
dec
addr16
add
hlt
ja
pop
loopne
cmp
sbb
sti
mov
add
inc
loop
sub
mov
icebp
push
cmpb
sbb
sub
data16
pop
movsl
mov
movsb
aas
mov
sub
rcll
fisttpll
rcl
or
cli
inc
push
or
aaa
adc
bound
std
xchg
in
xchg
pop
call
xor
cmp
fdivrs
add
dec
dec
test
shrb
inc
sub
popa
pop
testb
or
push
jbe
arpl
inc
sbb
cmp
xchg
test
push
and
xor
cmp
inc
cmp
out
popa
inc
adc
popf
jno
dec
dec
out
inc
mov
inc
cmp
or
nop
or
or
dec
cmp
xor
in
add
inc
push
dec
cmp
fcoml
sub
test
dec
dec
adc
sbb
xor
in
cmp
jl
push
lcall
jnp
mov
jnp
push
pop
lcall
xchg
pop
fcomps
and
out
xor
outsl
test
jb
lds
fwait
rorl
pusha
movsl
add
iret
sar
idivb
dec
fsubrl
into
addr16
fadd
inc
mov
imulb
divb
cmp
and
push
dec
adc
push
pushf
mov
inc
movsb
xchg
dec
mov
repnz
adc
test
iret
sbbl
int
mov
mov
xchg
push
pop
ror
inc
lods
lea
lods
cli
mulb
repz
ficompl
movb
in
rorl
lods
incl
fs
push
push
xor
inc
cli
cmp
adc
adc
push
adc
cmp
out
adc
xor
cmp
int3
pusha
and
and
cmp
das
jmp
clc
pusha
push
je
daa
rcl
ret
lret
pusha
sub
aad
addr16
sti
dec
sub
or
dec
mov
jb
negb
xchg
xor
sub
inc
aad
scas
lock
push
clc
push
outsb
xor
jb
mov
ljmp
dec
inc
and
out
cmc
roll
lcall
mov
mov
test
fcmovu
orb
inc
cli
mov
cli
sti
fnstenv
in
push
xor
shrl
loop
sub
imul
jno
iret
fwait
lret
cmpsb
call
out
fisttpll
mov
daa
or
jp
jle
hlt
repz
sub
cmpsl
jmp
or
test
mov
inc
out
out
clc
or
sub
ljmp
sub
std
jg
jo
sub
mov
cmpsl
loop
aaa
es
test
mov
add
push
adc
xor
cli
lret
or
mov
insl
scas
inc
adcb
dec
or
hlt
into
jmp
jbe
cli
sub
aaa
mov
pop
shll
out
cmp
loop
jb
fiadds
xchg
jmp
xor
xor
ds
mov
ljmp
mov
mov
iret
movsb
arpl
pop
sti
jl
add
dec
clc
cmp
xchg
out
mov
rcl
movsb
int
std
xor
std
sahf
rcrl
mov
inc
mov
cs
xor
sub
mov
dec
mov
and
js
icebp
jbe
pop
jns
pop
sbb
pop
cmp
cmp
lea
arpl
outsl
push
cmp
imul
adc
test
jmp
sub
cmpsb
mov
push
cmpsb
xor
lret
fs
movsb
das
popf
cmp
outsl
jle
pusha
sti
adc
not
mov
std
les
push
dec
out
lahf
cld
test
push
inc
movl
dec
popf
xchg
mov
das
idiv
and
lret
sbbl
mov
add
add
xor
scas
xchg
cli
pusha
jb,pt
push
in
ret
loop
sarl
mov
orl
xchg
popf
push
cli
dec
dec
mov
in
cmp
in
xor
addr16
push
mov
orb
pop
shrb
pop
adc
pop
sbb
add
and
jb
test
xor
sub
push
xor
div
pop
dec
jbe
loope
or
fs
pusha
bound
scas
dec
mov
mov
adc
adc
dec
pop
xchg
dec
int
cmp
push
pop
sbb
add
into
cmpl
cmp
sub
int
adc
sbb
dec
aas
xchg
mov
dec
jmp
movsl
mov
jl
lods
xchg
and
mov
push
loopne
cmp
stos
mov
push
ret
fcomip
sub
mov
aas
push
pop
outsb
push
out
or
outsl
xor
add
sbb
loopne
dec
iret
adc
aam
mov
enter
push
and
fcmovb
in
pop
mov
push
mov
push
mov
sahf
dec
std
nop
lea
ja
popa
sbb
outsl
stos
ds
fnsave
movsl
dec
test
sarb
xchg
mov
sub
mov
sti
jb
rcrb
inc
mov
stos
mov
cwtl
movd
pop
loope
cmp
lret
mov
fs
clc
aad
popa
mov
jns
int
lock
cli
pop
mov
cs
fdiv
sub
xor
sub
lret
mov
clc
push
psllq
in
add
sbb
test
ss
imul
sti
dec
mov
rcrb
dec
cmpsl
scas
mov
insb
lea
int
leave
xlat
flds
pop
fiadds
jl
xchg
stos
push
sbb
xor
inc
or
shl
cli
lods
pop
out
cltd
lods
mov
mov
or
cmp
ljmp
mov
xchg
dec
and
icebp
pop
xor
mov
adc
push
fs
fadd
jae
mov
cmp
pop
and
xchg
mov
dec
jl
aaa
mov
pop
push
daa
jle
mov
in
or
push
arpl
mov
xchg
pop
shr
push
in
hlt
in
or
xor
inc
lahf
stos
cli
std
xor
dec
sub
push
into
mov
inc
test
inc
icebp
nop
pop
dec
pop
xor
xchg
rcrb
lds
adc
lds
pusha
mov
inc
cmpsl
inc
xchg
ja
sub
jbe
pop
push
adc
fbstp
adc
repz
jp
imul
pop
insl
push
scas
lahf
xor
jecxz
cltd
fldcw
cmp
shl
mov
dec
inc
mov
loopne
cmp
push
cmp
xor
fmull
int
call
pop
ds
or
mov
out
cmp
aam
mov
pushf
fcompl
sub
cmp
clts
mov
test
shlb
mov
repz
mov
xlat
xchg
jecxz
mov
call
push
or
lret
xchg
xor
cwtl
jg
mov
dec
movsb
in
mov
pop
test
mov
nop
adc
in
sahf
cmp
cmp
xchg
clc
ss
and
lds
int3
mov
leave
mov
movsb
cld
fidivrs
sti
dec
cmc
and
pop
mov
lret
adc
insl
aam
mov
out
out
popl
adcl
cs
dec
add
sbb
clc
and
mov
fldl
bound
or
mov
and
or
outsb
bound
xor
lahf
xchg
cmp
xlat
pop
shlb
pop
mov
xor
js
or
sub
jae
aam
clc
pop
push
mov
adc
cs
cltd
out
and
and
jmp
lcall
push
hlt
mov
cmp
shl
fwait
cli
mov
stos
lock
push
dec
add
pop
fisubs
ds
sahf
aam
enter
loop
mov
mov
pop
and
fildll
repz
inc
nop
sahf
mov
jecxz
xor
inc
jle
mov
cld
and
and
mov
dec
testb
push
pop
xchg
push
lret
and
popf
cmp
jmp
mov
pop
ja
bnd
jb
ret
ja
loopne
xlat
add
and
cmp
js
dec
jbe
push
and
xor
or
cmp
mov
dec
lahf
fcoms
adc
dec
popf
outsl
xor
jae
mov
jge
pop
dec
mov
sti
xchg
test
out
es
pop
not
inc
addr16
addr16
xchg
icebp
sub
mov
pop
add
xor
xchg
push
push
ljmp
jb
push
xchg
call
add
xor
in
dec
ret
pop
cmp
scas
sti
xor
mov
hlt
or
arpl
dec
or
mov
and
addr16
repz
dec
sbb
loope
push
add
mov
sub
push
leave
popa
mov
cmp
pop
pop
inc
les
mov
pop
stc
aad
sub
pop
or
pop
ja
pop
lcall
push
dec
andl
movsl
cltd
pop
xchg
add
jp
aad
jge
adc
or
gs
int
mov
fdiv
mov
dec
ds
sbb
scas
imul
in
test
mov
xchg
pop
jecxz
cmpl
fistpll
aas
rcll
repnz
mov
or
mov
cs
hlt
iret
mov
push
sbb
sbb
rcll
mov
lret
jle
pop
add
fimuls
loope
cmpsb
int
jg
xor
mov
andl
pop
clc
add
cmp
addr16
mov
or
outsb
push
mov
fildll
jg,pn
push
cmp
and
aam
shll
sbb
and
mov
inc
xor
jo
mov
push
aad
mov
fsub
dec
or
sbb
inc
push
push
sub
js
xor
sti
aam
pop
fucomip
pop
int
mov
imul
sahf
ja
fsts
mov
mov
stos
pop
jne
sub
xchg
push
int3
fwait
pop
pop
lcall
mov
jmp
inc
out
shrb
pop
int3
sahf
out
pop
inc
mov
sub
pop
sub
mov
outsb
repz
rorb
jecxz
fidivl
sbb
sti
imul
adc
sbb
sub
ja
inc
mov
stos
mov
inc
notl
inc
sbb
mov
cmpsb
xchg
add
andl
ds
enter
pop
mov
push
bound
adcl
cmpsb
roll
shl
dec
jo
mov
leave
xchg
clc
iret
sub
cld
mov
nop
fisubrs
push
adc
mov
ja
cmc
xor
push
and
xchg
jmp
std
int
lahf
pop
jns
mov
push
rolb
cmpl
insl
in
push
gs
out
sbb
orl
cwtl
cmpsl
pushf
movb
mov
fbld
data16
data16
cmp
outsb
imull
lea
leave
pop
into
add
or
jb
loope
out
out
out
and
ljmp
dec
jp
xchg
cmp
cmc
sub
jmp
mov
jb
lcall
mov
insl
rol
push
loopne
jl
jecxz
jae
cmpb
cmp
stc
sbb
shrb
xchg
mov
out
inc
xlat
popf
push
das
adc
ss
out
inc
ds
fistpll
fnstsw
lock
pop
ljmp
push
mulb
add
or
nop
xor
pop
es
pusha
xor
jmp
mov
sub
out
sub
stc
dec
cmc
fstpt
push
aam
mov
cltd
fiaddl
push
neg
scas
cmc
std
movsb
mov
mov
cmp
movsb
cwtl
insl
sub
daa
push
mov
dec
or
adc
add
loope
mov
movsb
das
ja
enter
iret
xchg
hlt
imul
mov
inc
mov
and
outsl
test
mov
adc
ror
adc
fwait
sub
daa
or
stc
cmpsb
jne
add
add
fs
pop
cmp
and
pop
pushf
into
fmuls
leave
pop
xchg
ljmp
xor
mov
inc
xchg
ljmp
repz
inc
fwait
js
xlat
jmp
add
ja
roll
aad
pushf
jmp
xor
fistpll
and
aam
ret
add
shll
and
pop
xor
lret
inc
pusha
push
ja
int
js
xchg
or
or
adc
clc
xor
sub
ret
xchg
ret
or
in
push
mov
xchg
cmc
inc
sbb
add
pop
sub
adc
xor
adc
aas
mov
xchg
cmp
popa
cmp
cmp
data16
dec
inc
dec
lret
icebp
enter
xor
jno
pusha
jbe
fidivl
mov
fcmovnu
pop
or
aam
and
pop
call
aad
mov
mov
cli
ds
int
sbb
in
xor
inc
int3
xor
stc
fmull
mov
fdivrs
sbbb
loopne
scas
inc
inc
ja
addr16
pop
adcl
mov
dec
xchg
xchg
les
es
out
outsl
mov
seto
push
xchg
lods
pop
ja
test
das
ret
es
mov
in
push
out
ss
or
nop
test
pop
loope
xlat
fnstsw
adc
mov
mov
fisubs
ss
jne
call
mov
sbb
repnz
loope
icebp
pop
aam
ss
cmp
or
imulb
mov
clc
jb
mov
fcmove
mov
and
das
in
pop
popa
cmp
jbe
decb
imul
cwtl
push
mov
xor
leave
lret
test
fstps
jnp
xor
dec
and
pop
dec
xlat
mov
push
jns
adc
hlt
inc
movsb
notl
xor
inc
stc
aas
clc
ja
dec
outsb
jbe
adc
cmp
test
aad
jmp
into
enter
push
push
cmp
adc
mov
cwtl
pop
inc
dec
cmp
ret
xchg
sbb
or
mov
stc
pop
outsb
push
pop
xchg
dec
int3
stos
std
nop
pop
test
notb
cmc
sahf
int3
sub
stc
into
mov
lea
inc
mov
jne
jae
mov
test
stos
dec
mov
and
or
add
and
lret
stos
xor
mov
imul
mov
jb
mov
sub
mov
xchg
push
adcb
loope
in
push
fstpl
and
add
dec
jl
rcrl
idiv
cmp
cli
bound
pop
dec
lods
in
inc
mov
in
or
inc
adc
lret
std
jge
fmul
mov
clc
mov
rorl
in
fnstcw
mov
jl
dec
mov
cs
mov
xlat
sub
loop
and
inc
enter
mov
or
adc
shrb
cltd
push
pusha
nop
sub
imul
lock
dec
xor
xor
loopne
imul
mov
push
in
rol
adc
and
jo
push
lret
add
aad
mov
mov
cld
pop
jno
lods
cmp
testl
pop
out
shll
xchg
rcrl
mov
sub
fcoml
fs
sub
sar
xchg
fstpt
jmp
xchg
mov
mov
or
imul
dec
add
dec
dec
das
pop
faddp
out
sbb
push
mov
pop
lods
mov
shlb
insb
cs
lret
mov
lds
mov
mov
dec
cli
ja
adc
and
add
mov
dec
pop
pop
mov
jge
loopne
sbb
dec
and
fs
fs
sbb
or
push
outsl
aam
scas
loope
cltd
mov
call
jnp
mov
sbb
sub
or
sub
pop
push
and
pushf
or
jge
lock
ret
xor
lcall
pop
xchg
xor
adc
jo
scas
rorl
push
jecxz
lcall
or
movsl
push
sub
daa
cmc
sbb
cwtl
adc
pop
ljmp
fcoms
lahf
mov
cmp
mov
js
in
mov
sbb
push
cmp
lods
clc
push
mov
adc
adc
fstps
lock
xor
pushf
test
xchg
dec
mov
inc
jno
pop
shll
cmc
pop
xor
xchg
std
pop
xchg
int3
lret
mov
movsb
sti
mov
cwtl
mov
jno
push
lods
bound
icebp
add
mov
sbb
fdivrp
jecxz
mov
inc
xchg
pusha
mov
inc
adc
ljmp
lahf
ja
aas
ja
nop
scas
mov
imulb
paddusb
adc
xchg
incb
cwtl
adc
cmp
enter
pop
mov
cmpsl
jg
cmp
push
test
lahf
adc
lock
mov
or
popf
mov
push
mov
loop
jbe
xchg
out
test
aam
int
bound
cmp
outsb
sbb
cwtl
push
add
imul
cmp
push
cs
jl
outsl
outsb
xchg
mov
push
sbb
jne
mov
and
scas
sahf
je
outsb
out
outsb
outsl
adcb
inc
or
shr
stos
out
mov
test
idiv
mov
in
aas
push
mov
daa
ljmp
cmc
int3
in
rorb
dec
jg
xchg
cld
jnp
mov
aad
subl
ljmp
mov
stos
ss
les
ret
les
std
shll
jb
add
pop
pop
daa
iret
fbld
jae
jge
mov
fcomps
fcomps
mov
test
pop
pop
in
sbb
faddl
inc
dec
cltd
inc
out
in
roll
fwait
and
repnz
andb
adc
pop
cmp
mov
mov
sbb
lods
ret
adc
xchg
push
xchg
cmpsl
dec
lret
cmp
data16
popa
in
push
fs
dec
lods
inc
dec
loope
or
xchg
cmc
push
mov
xchg
inc
or
call
add
pop
add
jne
test
push
inc
mov
popa
cli
mov
test
lods
lret
movsl
xchg
aad
or
and
les
xchg
push
xlat
jmp
pop
mov
imul
sbb
int
or
fmuls
dec
sub
cmp
popa
inc
out
mov
ljmp
xor
adc
addr16
fidivl
push
cmp
fisttpll
std
sarl
fwait
aaa
pop
fnstsw
jle
imul
or
xlat
jbe
hlt
mov
fsts
imul
mov
icebp
testl
jae
mov
jne
jp
sub
pop
push
cmc
inc
aas
cmpsb
mov
loopne
xor
fmull
ret
dec
daa
mov
leave
push
aam
sub
mov
cmp
lcall
dec
idiv
clc
mov
push
loopne
and
mov
aaa
cmpsb
mov
push
lods
stos
mov
testb
call
xchg
jno
mov
sub
xchg
aad
sub
test
mov
push
aam
push
xchg
sbb
push
jnp
pop
and
test
sub
adc
xchg
mov
adc
cmp
shr
imul
push
lea
adc
lahf
xchg
xor
addr16
mov
sbb
push
mov
or
addr16
insb
jbe
sbb
jnp
outsb
lahf
pop
out
into
jge
or
scas
mov
test
ret
cmp
jp
mov
jns
out
fdivrl
jecxz
pop
cmpb
lea
lahf
loop
mov
xlat
sub
fdivrs
aaa
addr16
ljmp
cmpl
push
out
shlb
pop
popf
pop
decl
add
push
out
pop
sub
call
sub
jbe
nop
cs
pop
js
jbe
inc
test
sbb
hlt
cmpsl
movsl
mov
push
cwtl
dec
fstpl
test
or
repz
jg
mov
mov
mov
mov
mov
jge
nop
inc
adc
xchg
pop
xchg
lea
jp
pop
ds
inc
mov
std
fwait
jecxz
in
jno
sub
repnz
push
add
rcll
push
lods
pusha
lds
mov
pop
stc
ss
ds
divb
out
in
inc
mov
or
outsb
leave
inc
xor
xchg
jbe
sbb
daa
stos
cli
push
or
movsb
dec
in
or
in
mov
cmp
clc
lret
mov
push
xchg
adc
inc
test
pushf
dec
shll
enter
lods
push
iret
sbb
mov
push
adc
jb
sti
pop
shrb
and
jae,pt
or
xchg
scas
push
or
dec
mov
aad
push
mov
dec
and
lahf
das
jae
scas
scas
jne
and
out
cli
cmp
insb
ss
mov
jl
das
inc
jnp
insb
mov
push
mov
dec
imul
sahf
mov
sub
dec
imul
gs
mov
cmp
adc
sub
les
jge
mov
dec
aas
gs
push
sbb
sub
int3
test
test
and
loope
pop
lds
push
xchg
fldenv
inc
sbbb
in
insl
repnz
addr16
mov
loopne
loope
ret
mov
mov
cmc
dec
push
out
adc
sar
arpl
scas
pusha
pop
ror
sbb
test
mov
inc
sti
std
test
xor
ss
xor
push
fs
test
dec
and
push
mov
int3
shlb
xor
pop
test
add
xchg
frstor
cmp
inc
xor
rclb
cltd
cmp
cmp
xchg
pop
push
test
iret
inc
sbb
daa
je
mov
out
push
pushl
movnti
mov
inc
sbb
outsb
mov
dec
add
push
inc
loope
pop
and
sbb
sub
lret
je
or
dec
out
sbb
repz
mov
cmpsl
xchg
jae
cltd
xor
push
scas
dec
dec
xchg
jge
adc
in
xchg
sbb
es
and
cmp
fisttpl
daa
xchg
repz
mov
sarb
arpl
bound
sarl
and
mov
imul
pop
nop
mov
movsb
lahf
or
or
cmp
push
ljmp
dec
sub
add
jns
sbb
dec
cmc
sti
xchg
xchg
pop
pop
dec
arpl
out
cltd
sbb
xchg
hlt
pusha
and
movsb
lods
movsb
mov
aam
lds
inc
mov
mov
mov
mov
outsb
out
xchg
into
push
jecxz
push
sbb
xchg
xchg
cmp
add
invd
adc
loopne
pop
cmc
into
mov
jmp
jp
sub
sbb
push
jne
xor
and
and
add
mov
scas
xchg
xchg
mov
lds
pop
mov
add
in
mov
sbb
test
shrl
fsubl
sbb
cmp
sbb
pop
adc
cmp
addr16
jnp
mov
lcall
arpl
mov
jne
mov
push
popf
xchg
dec
lcall
xchg
jbe
pop
or
push
sahf
push
icebp
xchg
pushf
rol
movsl
mov
cmpsb
imul
orl
imul
cmpsl
mov
push
aas
push
pop
mov
mov
dec
das
fsubrp
enter
daa
test
mov
dec
es
jp
mov
setnp
mov
leave
sub
adc
sbbl
sarl
or
test
loopne
jns
fnstsw
sbbb
sbb
fs
out
rorb
inc
xchg
dec
jle
sub
or
xchg
xchg
rcl
add
mov
scas
nop
mov
sbb
jmp
sti
mov
sahf
mov
movsl
cltd
pop
adc
jbe
or
sahf
data16
mov
pop
push
and
fs
cmp
jecxz
inc
mov
mov
xor
pop
lock
inc
int
mov
xor
mov
push
jae
sbb
cld
xchg
jmp
and
jns
add
filds
sub
imul
into
adc
push
or
xchg
cmp
cmp
push
xchg
mov
pusha
lods
fsts
pusha
aas
mov
fwait
jns
shll
cmp
mov
out
aam
cmpsb
mov
mov
mov
repz
hlt
scas
lcall
fwait
xor
and
imul
inc
inc
movsb
push
xlat
out
jnp
xchg
or
mov
leave
jne
mov
decb
xor
fsubrl
add
and
lods
mov
es
xchg
das
or
xor
push
mov
push
mov
sbb
push
and
test
mov
js
adc
mov
or
xor
cmp
roll
add
push
mov
inc
xor
adc
sahf
f2xm1
fadds
add
in
fsin
inc
sub
sub
sarl
jecxz
cmp
test
aas
pop
fsubl
shr
mov
adc
daa
and
cs
and
xor
push
or
jnp
cli
xchg
mov
int3
pop
mov
push
pushf
jge
dec
jecxz
ret
ret
jmp
dec
js
jo
popf
mov
mov
dec
jl
stc
int3
mov
mov
xor
imul
mov
stc
daa
fisttpl
cltd
dec
adc
or
adc
sbb
adc
repnz
add
xor
cmp
jns
idiv
imul
mov
lahf
cmc
push
lods
int3
push
xchg
cmc
pop
and
rolb
cmp
dec
xor
test
out
xor
aam
xor
cmp
mov
xchg
shl
dec
loopne
mov
pop
outsb
and
inc
aam
int3
shll
ss
dec
or
xchg
adc
pop
enter
sti
pop
and
push
dec
mov
mov
inc
xchg
daa
mov
loope
jne
inc
sarb
pop
leave
push
iret
scas
jmp
popa
fsubl
sbb
xor
sub
pop
mov
fucomip
jecxz
sub
cmp
dec
cmp
inc
xor
pop
idivl
out
push
push
jle
les
loope
outsb
and
push
xorb
pop
pop
xchg
ja
loopne
sbb
or
fidivs
mov
mov
xchg
cwtl
mov
incl
jno
lds
mov
insl
mov
into
xor
pop
or
cmp
insl
pop
rclb
add
cmpsl
xlat
pusha
xor
cmpsb
mov
cmpsl
lcall
xchg
sub
ljmp
dec
cmp
sub
ffree
enter
sbb
mov
dec
lahf
ja
clc
cmp
push
and
add
cmp
mov
fucomip
jnp
dec
or
mov
and
in
scas
out
jl
mov
push
mov
es
sbb
in
adc
in
dec
dec
out
cltd
pop
cli
decl
or
jp
fadds
pop
jo
pop
ficompl
ficoml
jo
int3
sbb
cmp
and
rorb
bound
mov
sbb
stos
push
hlt
call
cmpsb
push
push
mov
lret
aad
or
les
sbb
jge
xor
aad
outsl
nop
or
jmp
pop
scas
push
lods
push
rcrb
je
push
and
mov
iret
lret
jns
sub
and
sub
jno
xchg
js
dec
faddp
fisttpl
sub
mov
and
pusha
out
adc
sub
and
sbb
push
or
lock
fs
mov
dec
das
push
mov
dec
mov
push
xor
sub
mov
cmp
pop
mov
insb
mov
lods
sbb
fnsave
push
insl
inc
outsl
xor
inc
push
aaa
sub
rcr
pop
test
xlat
into
dec
add
push
in
jo
ret
test
shll
mov
jne
fmull
insl
add
sub
setl
add
mov
mov
cmp
fnstsw
test
lcall
dec
test
mov
mov
mov
fsubl
and
add
das
mov
fs
jb
test
les
dec
xor
sub
insb
sub
add
sahf
mov
aad
rol
cmp
stos
loop
mov
fisttps
pop
pop
jge,pt
and
cmc
hlt
ja
jecxz
adc
push
push
lods
cld
mov
movsb
push
sbb
cmp
mov
or
and
inc
adc
lea
jecxz
dec
std
dec
xchg
out
inc
xor
or
data16
mov
das
pusha
cmp
gs
pop
movzwl
lock
jno
sbb
clc
mov
cmpsb
mov
das
cmp
xor
scas
mov
mov
test
xchg
lret
jns
mov
push
sahf
out
and
or
fists
imul
add
pop
sbb
or
xor
mov
dec
and
inc
pop
cmp
data16
jmp
jae
mov
aas
xor
faddl
adc
mov
arpl
sub
inc
movsb
clc
scas
les
inc
xor
adc
mov
outsl
push
push
inc
icebp
idivl
mov
mov
fsubrs
aaa
pop
push
add
dec
cs
jecxz
daa
push
cltd
jo
or
mov
clc
mov
sbb
mov
rorl
push
xor
cmovnp
push
loop
andl
add
mov
bound
xor
mov
cmpsb
daa
mov
fsubrs
mov
dec
into
test
xchg
mov
jg
lahf
cmc
out
inc
lea
sti
jo
jge
arpl
and
inc
ret
jne
rclb
insb
and
scas
xchg
mov
cmp
cltd
and
fidivs
pop
test
ret
leave
movsl
and
dec
into
jmp
dec
xchg
mov
in
push
push
xor
sbb
in
jae
sar
ljmp
lahf
and
or
insb
inc
jns
mov
push
stos
add
inc
push
mov
jl
mov
cmp
sbb
setnp
jb
push
push
stos
or
ljmp
arpl
shll
icebp
sub
insl
scas
jmp
pop
ja
push
sbb
sbb
cmp
jb
stos
push
and
pop
lods
rorl
push
mov
ja
push
sahf
test
xchg
into
sbb
sub
or
shrl
hlt
mov
adc
jg
push
aas
mov
cmp
xchg
inc
mov
mov
inc
fstpl
mov
lahf
pop
mov
xchg
xor
shll
adc
lret
jmp
inc
mov
fucomi
je
je
inc
fistps
lcall
mov
or
aaa
js
out
inc
sub
push
test
mov
jg
pop
lock
int3
data16
push
mov
insb
aaa
cmp
cmp
roll
inc
movl
push
mov
xor
addr16
stos
fimuls
add
js
ret
sarb
or
cmp
xchg
sbb
pop
pop
cmpb
adc
pop
xchg
aaa
mov
movsl
addr16
sbb
sbb
inc
mov
mov
add
push
push
xchg
adcb
lods
push
mov
repnz
stos
lds
repnz
push
cmpsl
stc
xchg
iret
test
imul
mov
jl
das
inc
jae
mov
cmc
inc
in
loope
xor
pusha
mov
push
ja
inc
dec
lods
in
in
push
mov
std
dec
or
inc
js
cltd
dec
es
test
or
out
test
mov
js
mov
enter
cli
fwait
add
sbb
cli
push
stos
loopne
mov
icebp
xchg
cmc
aas
mov
rcr
hlt
mov
cmpsb
sub
rolb
mov
jno
push
dec
jnp
or
mov
mov
leave
dec
jmp
fdivp
clc
cmpsl
pop
cld
inc
out
jge
cmpsl
mov
mov
in
mov
pop
int
lods
cli
mov
fwait
lcall
mov
js
push
cmp
adc
mov
imul
jb
sub
mov
jp
call
scas
in
popa
fcomi
test
jne
or
popa
push
push
mov
push
xor
rcrb
add
mov
sbb
pop
sbb
popa
imul
push
jmp
adc
fstpt
hlt
add
pop
push
pop
jmp
cmpsl
xchg
int3
push
sarl
popf
mov
sub
lock
clc
or
jecxz
xchg
xor
out
jl
popa
aam
stc
pop
insb
push
dec
cwtl
and
int3
push
in
cmpsb
shll
inc
mov
sub
mov
cli
scas
negb
mov
and
mov
pushf
das
xchg
mov
lahf
push
sbbb
jg
mov
jnp
and
mov
addr16
enter
pop
add
stos
adc
arpl
into
mov
mov
or
divb
jns
push
fbld
xlat
test
js
imul
es
jbe
in
stc
pop
jp
sub
mov
mov
scas
xchg
and
xchg
test
lcall
cli
mov
adc
adc
xor
mov
or
ret
clc
pushf
test
scas
out
addr16
sbb
push
sti
pusha
push
scas
mov
add
jecxz
je
arpl
roll
mov
mov
and
and
out
cmp
sbb
in
out
inc
xlat
aaa
dec
mov
xor
xlat
adc
cmp
xlat
add
pop
mov
fistpl
cmp
fstps
mov
imul
mov
sbb
out
into
insl
popf
jl
ret
shll
insb
cld
adc
out
xor
mov
cli
call
jbe
in
jmp
mov
rol
scas
cmp
subl
imul
gs
pop
inc
test
xor
jns
cmp
push
sbbb
inc
shll
aad
aad
rclb
rol
cmp
inc
sub
leave
shrb
cli
push
inc
jecxz
roll
dec
mov
cmp
and
mov
fnstenv
das
sbb
loopne
sub
fstps
out
dec
xchg
pop
test
sbb
sub
xchg
adc
mov
jns
xchg
xor
stos
repz
and
mov
sbb
stc
outsl
adc
dec
and
inc
cwtl
xor
dec
sbb
cld
sub
or
mov
inc
pop
pop
push
fnstenv
enter
mov
mov
mov
push
inc
rcrl
lock
add
fisttps
sub
or
popa
orl
mov
adc
and
jb
hlt
ret
cmp
orl
push
arpl
outsb
test
sub
in
shll
sbb
jb
iret
or
cmc
aam
popa
inc
mov
and
repnz
shl
mov
insb
xor
icebp
sub
out
ss
jo
cmp
sub
mov
push
sub
hlt
inc
aad
xor
dec
jne
ret
jno
mov
imul
add
test
mov
loopne
sbb
stos
scas
leave
pop
movsl
aas
fwait
sub
ret
in
dec
imul
outsb
cli
jb
mov
cld
xchg
pushl
decb
test
inc
popa
addb
jae
je
dec
push
push
adcl
stc
lock
out
jg
jp
fwait
mov
movsl
sub
sarl
add
add
mov
sub
xchg
adc
xchg
jns
and
ss
seta
popa
sbb
add
xor
movl
divl
lea
bound
mov
push
loope
lret
lret
sub
jecxz
xchg
in
out
push
int3
stos
gs
divl
adc
and
add
cmp
and
sbb
push
jb
jb
jns
inc
jecxz
aaa
sarb
inc
outsl
iret
fwait
mov
pop
dec
out
iret
jae
and
repnz
pop
adc
add
mov
pusha
jae
push
mov
add
insl
inc
add
or
mov
hlt
inc
popl
or
cmpb
fnstcw
pop
jp
xchg
sbb
mov
loopne
mov
xchg
idivl
adc
ud0
sahf
jbe
cmp
mov
jb
xchg
push
mov
out
stos
ja
cmpsl
inc
pop
push
loope
mov
sbb
jae
mov
repz
cmp
cmp
and
stos
jae
jb
ja
sbb
mov
cwtl
pop
dec
jno
and
mov
sti
mov
rorb
xchg
xor
cmp
repz
cmp
pusha
mov
jmp
or
cld
or
and
push
mov
dec
inc
es
push
xor
inc
test
stc
fsubrl
icebp
jle
jg
pop
dec
jae
push
rorl
loopne
pop
jp
cmpsb
mov
or
push
xchg
pusha
int
adc
shlb
jecxz
out
call
fwait
push
adc
adc
xor
je
push
out
call
aam
es
inc
push
mov
outsl
inc
push
adc
sub
inc
sbb
xchg
jns
xchg
hlt
cmp
mov
out
or
and
mull
dec
inc
je
shrb
movsb
daa
call
shlb
sbbb
cmpsb
int
cmovge
cmp
cmp
mov
pop
add
add
jnp
pusha
movsb
neg
xchg
movsl
push
and
xor
arpl
shll
add
lds
pop
pop
sbb
fwait
test
outsb
add
popl
mov
or
sub
and
xor
fs
stos
inc
inc
inc
or
cmc
xchg
scas
mov
inc
sti
mov
sub
adc
pushf
rorl
mov
shll
mov
paddb
iret
mov
jo
scas
inc
mov
sub
enter
inc
out
push
pop
pop
jae
outsb
inc
pop
cltd
js
out
inc
stos
outsl
nop
adc
pushf
mov
pop
mov
mov
cmp
sete
or
repz
leave
cmp
and
or
xorl
pusha
je
inc
je
dec
test
mov
pushl
xchg
dec
xor
insl
push
lret
xchg
fs
orl
insb
ds
push
lret
adc
ficoms
pop
cmpsl
xchg
or
outsl
mov
in
pushf
test
pop
rcll
sahf
shrb
imul
mov
jbe
mov
daa
neg
cmpsb
arpl
sbb
add
mov
fstl
in
out
cmpsb
bound
xchg
ljmp
xor
rcpps
scas
mov
sbb
test
push
cmp
cltd
jbe
jp
jecxz
adc
ret
mov
popa
inc
pop
aam
inc
xchg
inc
and
xor
mov
loopne
ds
cs
rclb
xor
pop
in
in
stc
cli
fsubrp
std
repz
nop
mov
movl
mov
js
and
sbb
test
xchg
les
outsl
in
jne
fdiv
jae
ljmp
dec
ret
scas
xor
rep
cmp
xor
sarb
and
pusha
jecxz
das
sbb
xchg
cmpb
cmpl
ret
aaa
jne
or
test
sbbb
shrb
lret
xor
mov
repnz
pop
xor
xchg
jnp
mov
push
xchg
sub
loop
adc
pop
mov
stc
lret
iret
sbb
push
cltd
and
addr16
push
subb
adc
mov
nop
mov
loopne
lret
and
es
cmp
jecxz
insl
fs
adc
xor
and
les
and
scas
or
cmp
repz
in
out
pop
and
sub
fisttpll
lock
inc
repnz
out
lea
mov
pusha
popf
les
push
mov
add
pop
repnz
add
add
jecxz
sbb
js
xchg
pop
lcall
mov
cmp
in
ret
jle
fcom
inc
jb
lcall
xor
pop
push
adc
jne
ficomps
xlat
adc
cmp
test
push
mov
jmp
and
mov
adc
nop
inc
pop
outsb
or
pusha
orb
inc
sbb
xlat
cmc
daa
cmp
test
lcall
arpl
jns
stos
pop
push
mulb
hlt
lock
push
or
adc
movsl
xchg
aam
ds
pop
mov
xchg
mov
jmp
xor
or
jne
in
mov
mov
mov
xor
fld1
push
pop
xchg
adc
dec
push
dec
sbb
je
ss
repnz
rorl
or
cmp
sub
out
iret
or
ja
sub
loope
jae
shll
or
je
in
mov
cmp
sbb
and
test
lds
pop
std
iret
sbb
inc
scas
push
mov
sbb
neg
pop
push
or
add
add
mov
iret
fisttpll
repz
subl
mov
movsl
pop
scas
adc
repz
push
shlb
lea
push
stos
sbb
xor
jnp
push
aas
or
cmc
mov
adcl
mov
adc
sarl
mov
pushf
lock
in
cwtl
or
int3
dec
scas
inc
fdivl
and
inc
sub
adc
imull
inc
mov
cmp
inc
testb
xchg
adc
jecxz
xchg
mov
adc
ficoms
lcall
jge
je
push
in
cli
jae
dec
hlt
xor
fidivrs
cmpb
and
lods
add
mov
xor
jge,pt
jae
in
push
addr16
pop
inc
test
ret
jno
cmpsb
or
icebp
inc
and
jb
shrb
inc
mov
sbb
mov
cld
fistpll
pop
inc
jle
imul
dec
mov
lcall
inc
pop
inc
inc
add
pop
mov
rcll
fsubl
movsl
pop
dec
jle
in
decl
xor
inc
fcomps
dec
movsl
jg
icebp
test
jbe
inc
pop
cwtl
inc
inc
in
rolb
jmp
sar
add
pushw
xchg
in
cmp
xchg
cmpsl
jge
push
xchg
mov
cltd
pop
dec
loope
jge
mov
xchg
jo
adc
popa
inc
jbe
cli
inc
movsl
mov
xchg
loope
enter
add
xchg
pop
loopne
xorb
cltd
dec
or
adc
cmp
neg
add
notl
inc
enter
mov
dec
and
mulb
shrb
sbb
clc
dec
rorw
and
testb
or
jb
popa
mov
cmp
push
rclb
sub
xor
or
addr16
in
cs
lock
ret
cmpsl
in
loop
repz
mov
jl
pop
cmp
in
imul
sahf
xlat
sub
inc
adc
fdivs
fidivl
jecxz
xchg
xor
std
ficompl
aam
inc
xchg
pop
jl
jmp
jbe
adc
lret
pop
mov
cwtl
and
icebp
inc
sbb
cmp
loop
int3
mov
scas
arpl
arpl
in
xor
cs
in
cltd
or
add
adc
and
in
or
push
xchg
addr16
adc
and
or
adc
or
xchg
xchg
jo
ljmp
jmp
aas
outsb
lock
inc
jae
mov
add
mov
pop
dec
xchg
lret
in
pop
pop
mov
imul
mov
fstl
mov
jne
pop
pop
mov
scas
sbb
es
pop
test
je
mov
xchg
call
xlat
pop
mov
push
mov
lcall
mov
xor
jmp
loop
add
cwtl
sub
cli
xchg
jo
mov
sbb
ja
decl
xor
aas
push
lret
adc
xor
inc
aas
repnz
cli
or
or
add
pop
jne
pusha
inc
pop
rdmsr
pop
movsl
xor
clc
aad
mov
adc
mov
lods
mov
pop
call
int3
lcall
mov
fadds
enter
shl
adc
les
mov
imul
test
mov
mov
je
inc
out
sbb
xchg
mov
adc
add
sbb
cmp
test
sbbb
fcmovu
jmp
fsubs
sbb
cmp
mov
jmp
iret
mov
mov
and
icebp
test
sti
push
inc
mov
add
sub
mulb
sbb
xchg
add
xlat
or
sub
loope
xchg
jns
je,pn
in
lret
repz
add
dec
cltd
cmp
loop
xor
or
movsb
sbb
fisubs
mov
pop
mov
aam
and
lret
out
cs
loop
movsl
xchg
cmp
xchg
imul
outsl
mov
push
cmpsb
mov
pop
daa
xchg
fucom
and
sub
or
inc
dec
push
jp
or
push
xchg
fs
jmp
or
icebp
pop
or
fmul
std
adc
imul
inc
leave
push
hlt
inc
pop
sti
int
pop
inc
fistl
xchg
movsb
sub
dec
sbb
or
jne
mov
push
mov
cltd
pop
adc
movsl
arpl
pop
js
jb
outsb
fwait
xor
push
icebp
mov
pusha
mov
sbb
jecxz
mov
mov
inc
out
pushf
sbb
fistpll
into
sbb
inc
sbb
cld
ss
cltd
jmp
dec
call
pop
push
leave
fsubrl
popf
sub
rcr
imul
pop
ljmp
loope
dec
push
movsb
jmp
sub
clc
xchg
stos
and
dec
pop
xchg
sbb
and
hlt
cmc
fnstsw
inc
popa
mov
cli
clc
out
lcall
inc
jl
int
and
jbe
push
fdivl
ss
sar
mov
insb
idivb
sub
dec
movsb
pop
cmp
sub
stc
arpl
and
inc
and
sub
scas
aam
mov
mov
xchg
mov
xor
js
xchg
icebp
lods
mov
or
jp
xchg
cltd
inc
popf
or
enter
inc
mov
sub
fs
mov
and
addr16
or
gs
mov
mov
jmp
xor
mov
mov
ror
sbb
or
xchg
mov
add
ret
dec
popa
dec
fwait
xor
sub
sub
push
mov
ja
sbb
scas
xlat
xor
sbb
cmp
fs
xchg
jbe
mov
add
jb
mov
shll
ds
xor
addr16
int3
mov
sbb
mov
mov
push
add
and
aaa
in
rorl
mov
lea
pushf
data16
xchg
das
jg
adc
add
pop
outsl
mov
adc
mov
push
popf
mov
xchg
fdivrs
mov
std
pop
mov
fsubrl
iret
sub
mov
test
mov
aam
xchg
and
iret
into
subps
outsl
sbb
out
dec
xchg
mov
mov
fcmovne
fsts
pushf
cli
sub
mov
mov
mov
pushf
mov
testl
adc
stos
xlat
mov
xlat
xchg
pop
rcrb
and
jl
loop
and
push
cmpsb
aam
mov
mov
mov
in
hlt
aaa
fmul
lret
ss
pop
arpl
in
jmp
mov
lds
cmc
jge
test
sbb
jge
pop
fs
dec
push
or
or
les
test
loope
and
push
adc
jp
jmp
push
push
push
mov
loopne
imul
mov
sbb
or
shl
movl
push
and
not
ret
mov
xchg
leave
mov
clc
popa
mov
xchg
into
or
shll
std
push
dec
stos
clc
movsl
jb
mov
xor
sub
fisttps
lods
int3
vmwrite
shll
sbb
addr16
adc
ret
sbb
add
js
jae
fsts
les
push
xchg
jg
loop
xchg
in
dec
mov
fisubrl
add
fdivp
lcall
loopne
mov
adc
clc
cmc
inc
push
xor
inc
adc
pop
and
jle
push
ja
jno
jb
sbb
cli
jp
jnp
fisubs
push
xorl
imul
and
cli
dec
ss
cmpsb
pop
ret
rolb
icebp
bound
scas
lea
stos
mov
jbe
mov
and
sahf
jae
lods
or
ror
cmpsl
imul
fcom
fs
cmp
popf
mov
lods
enter
xor
cld
roll
aad
sahf
sub
push
sub
mov
loopne
adc
aam
pushl
push
cmp
jecxz
notl
cmpsb
data16
xchg
and
roll
fldt
push
int
jbe
insl
in
mov
popf
aam
ret
jo
jecxz
cli
push
mov
and
push
add
fisubrl
lods
mov
push
push
lods
ja
lea
int3
lds
call
jg
js
mov
xchg
mov
addb
jbe
addr16
pop
push
cmp
inc
cltd
or
or
pop
test
ljmp
loope
cmpsl
xlat
ficoms
lcall
xor
adc
fistpl
sbb
popa
jle
movsb
ret
pop
loop
mov
fnstenv
lcall
fwait
inc
cmpsl
and
mov
add
insb
jecxz
js
dec
cmp
leave
jge
popf
repz
es
sbb
sub
and
sbb
inc
fidivs
nop
dec
fldcw
or
outsl
lea
add
movl
loopne
lahf
xchg
test
jge
xlat
gs
call
rclb
gs
rcll
pop
jne
lock
push
pop
dec
xlat
xor
call
adc
xchg
add
and
aas
adcb
push
test
popa
aaa
lods
sub
clc
dec
fistps
ja
jno
or
and
mov
xor
cwtl
pop
mov
out
pushf
dec
adc
sub
sarb
sbb
mov
nop
mov
pop
cmp
pop
mov
dec
movsb
test
fimull
cmpsb
mov
add
stos
sbb
xchg
xchg
mov
fdivrl
lea
add
lods
cmp
mov
cmp
lock
adc
outsb
cld
sub
leave
push
outsb
cwtl
mov
aaa
stos
jo
sbbb
test
jno
leave
push
imul
jae
cmp
jmp
xor
in
jo
mov
dec
enter
inc
out
xchg
dec
add
rep
test
adc
pop
clc
aad
ljmp
shll
sbb
stos
cmpsb
mov
pusha
add
lret
les
ds
mov
out
in
in
and
inc
dec
adc
pop
add
out
add
add
mov
jg
mov
pusha
dec
adc
faddl
adc
test
cmpb
push
sub
and
inc
sbb
mov
pop
sub
xchg
aam
xor
ljmp
pop
xor
push
cmpsb
or
addb
leave
arpl
push
ss
xchg
repz
add
lret
cli
scas
jmp
mov
in
fistl
loope
imul
js
or
xor
cmp
mov
stos
push
pop
jnp
dec
xchg
push
pop
out
dec
push
jp
xlat
add
dec
pop
jl
loope
jle
pop
mov
sbb
mov
addl
sbb
lods
call
out
cmp
pushf
xchg
xchg
pop
stos
push
pop
push
adc
sub
ljmp
lcall
imul
mov
mov
aas
add
fxch
imul
jns
sbb
jne
mov
push
mov
xlat
fwait
cmp
sahf
xchg
push
inc
dec
iret
cmp
xor
lea
aas
in
fimull
cmp
int3
sub
and
test
repz
inc
sub
push
mov
add
out
xor
lcall
jno
push
cwtl
leave
jge
clc
leave
clc
and
xchg
arpl
cmp
adc
aas
xor
mov
cmpsb
in
pushf
xor
shl
sahf
mov
std
xor
cmpsl
fucom
sub
fcmovnu
mov
ret
xor
jne
jecxz
out
cmp
mov
jb
dec
adc
push
sub
popf
adc
cmp
lods
xchg
jne
mov
xchg
pop
aad
addr16
sbb
gs
mov
mov
and
adc
or
negl
sbb
inc
bound
lcall
daa
xchg
mov
adc
stos
mov
mov
in
fsts
mov
or
jbe
sti
and
sbb
inc
insb
adcl
push
and
test
or
aad
insl
mov
push
jle
cmp
mov
out
pop
inc
add
add
pop
in
and
lea
fdivrl
pop
dec
cmp
lahf
repz
ficomps
jecxz
pop
hlt
lahf
inc
xlat
fsubl
lcall
mov
aad
xchg
fs
out
mov
pop
sbb
mov
lea
and
shlb
or
mov
xchg
xor
adc
fs
pop
xchg
add
push
mov
ss
stos
icebp
fs
clc
shrb
fxch
mov
inc
xchg
jge
inc
sarb
mov
push
rorl
gs
pop
iret
lcall
insb
inc
adc
xor
push
add
popa
fstpl
test
xchg
push
fisttpll
fwait
push
or
ret
cmp
sub
out
stos
sti
sbb
out
cmp
sbb
mov
xchg
adc
scas
and
dec
int
inc
jle
pop
push
repnz
jmp
inc
repnz
jmp
sahf
adc
imul
xchg
sub
int3
pop
scas
in
adc
fldenv
repz
sti
add
pop
bound
mov
mov
push
mov
mov
fisubrs
jmp
pop
xor
dec
pop
dec
in
mov
sahf
cli
mov
pop
xor
or
loope
pop
and
sti
jp
inc
add
out
call
shrb
arpl
push
daa
cltd
inc
sbb
sahf
insb
popa
xor
inc
int3
lds
in
xor
out
lock
mov
dec
push
and
lret
outsl
mov
jno
mov
dec
inc
ds
int
nop
ret
popa
lret
imul
fdivr
pusha
outsb
mov
adc
popf
pop
inc
ljmp
and
ds
test
jne
mov
fiaddl
sub
cld
add
addr16
fimull
fdiv
xchg
bound
gs
add
pop
mov
xchg
imull
rcll
cmp
adc
jno,pt
fwait
es
cmc
mov
das
or
daa
dec
sbb
stos
xchg
and
jl
lret
cs
cmp
push
test
pop
push
rclb
mov
pop
rorb
add
jge
adc
in
inc
icebp
fld
adc
sahf
mov
inc
push
add
inc
insl
aaa
fadds
ror
jne
std
in
in
pop
mov
in
xchg
pop
jg
int
add
loope
les
cltd
dec
mov
adcl
push
cmp
dec
std
inc
mov
insl
scas
lret
imul
mov
outsb
lock
in
insb
repnz
xor
pop
push
movb
or
sbb
sbb
pop
sbb
arpl
fistl
mov
shlb
or
les
mov
ret
pop
dec
mov
pop
nop
in
shll
push
ret
xchg
adc
mov
mov
pop
lcall
xchg
dec
sub
ja
das
fiadds
lock
or
subb
rcll
or
xchg
add
fwait
stos
flds
cmovo
add
xor
jne
mov
or
lret
js
pop
imul
fisttpl
and
mov
hlt
leave
jae
mov
in
rorl
push
loope
adc
sbb
jb
and
outsl
xchg
xchg
push
sar
out
sahf
stos
and
pop
xchg
mov
ret
mov
out
pop
cmpsb
je
data16
xor
ret
pusha
out
xchg
enter
adc
shrl
mov
mov
adc
mov
dec
adc
and
xorb
mov
ret
es
cli
cmp
push
movsl
sbb
and
sti
test
xchg
js
sahf
es
xchg
or
add
lods
cmp
mov
cmc
sub
leave
mov
cmp
fldt
mov
jmp
jp
pop
cmp
insb
adc
mov
jb
enter
inc
testl
mov
adc
cltd
dec
fwait
shlb
mov
insl
call
cmpsb
ss
jb
fwait
adc
lret
cmp
cmp
sub
jge
out
jge
shll
je
shrl
ss
adc
rol
pop
and
pushf
roll
test
xchg
cmp
insb
es
xlat
cmp
scas
inc
std
lret
fdivrs
xchg
into
push
adc
test
fidivrs
add
mov
adc
cmpsl
cmpb
dec
add
jp
addps
push
popf
sahf
xchg
dec
rorb
mov
pushf
xchg
call
cmp
jp
daa
cli
sarl
insl
repnz
add
fisubrs
mov
dec
cmp
int3
jnp
hlt
xor
in
ret
ljmp
mov
jmp
add
xchg
jl
cmpsl
inc
or
sub
cmpsl
pop
push
cltd
xor
dec
adc
pusha
pushf
and
ret
adc
mov
xchg
sub
jno
divl
push
pop
xor
sbb
popf
sahf
jecxz
addr16
mov
mov
adc
mul
cmc
pop
mull
inc
cwtl
inc
imul
mov
lock
sbb
jno
lock
inc
and
and
add
gs
sbbl
aaa
dec
in
pop
sarl
pop
shlb
sub
repnz
or
sti
es
icebp
cltd
jns
jnp
push
push
sub
daa
stc
shlb
cmpsb
movsb
dec
roll
push
adc
iret
mov
xorb
jo
dec
pop
jg
in
cwtl
pushf
sbb
clc
stos
or
cld
mov
inc
test
aaa
xchg
cmpsb
jo
lods
jmp
push
dec
mov
stos
shrb
rcrl
xor
stos
push
leave
je
add
stc
lods
push
mov
ja
mov
and
lods
rorl
sbb
dec
cmc
cmpsl
mulb
mov
fists
sbb
dec
sub
sti
jmp
ret
jmp
mov
inc
idivb
xor
push
xchg
test
pop
cltd
rcrl
test
pop
fisttpl
ficomps
movsl
dec
rcrb
dec
push
jmp
push
xchg
xor
xchg
mov
or
mov
cmc
dec
mov
dec
dec
mov
lret
jno
test
pop
mov
pop
lods
jg
aad
aad
repz
push
mul
xchg
push
dec
pushf
or
rcrl
fs
cmp
cld
cwtl
jl
or
cli
xor
push
pop
ds
insl
jo
ja
repz
js
dec
mov
fisubl
push
pop
in
jmp
cmp
cmp
fcomip
int
pop
test
xor
js,pt
push
jns
inc
push
mov
out
lret
pop
ret
xlat
and
je
add
fcmovbe
xchg
jb
inc
push
xchg
fmul
out
into
push
pop
jne
jle
push
jl
adc
xlat
or
inc
rcl
in
pop
es
pop
xchg
imul
cmp
stc
cs
out
arpl
cmp
inc
out
cmc
jb
sub
gs
push
xchg
aaa
dec
xchg
test
push
jecxz
fiaddl
jp
gs
dec
cmpb
push
pop
pop
mov
in
pop
pop
sub
mov
jmp
mov
push
inc
mov
lea
dec
aas
jge
int
repz
xor
pop
cmp
pop
jecxz
cmc
xor
mov
mov
xlat
mov
out
push
mov
addr16
xchg
mov
sbb
inc
push
daa
stos
cwtl
inc
pushf
mov
cmpsb
jb
sbb
rolb
inc
mov
push
fstps
mov
fwait
push
in
mov
out
pop
pop
daa
addr16
mov
pop
outsl
jge
icebp
jbe
push
lds
push
xchg
popf
nop
test
push
xchg
mov
dec
jg
js
ret
xor
outsl
jae
xor
out
push
addl
inc
xor
lret
push
nop
mov
inc
scas
push
inc
pop
push
mov
sbb
mov
mov
aaa
rcll
fidivs
sub
adc
les
lahf
jecxz
push
and
push
add
push
sub
push
js
adc
xchg
and
cmp
adc
sti
cmp
mov
pop
call
ret
xor
adc
add
in
nop
or
adc
cltd
test
dec
sbb
outsb
mov
jne
pop
fidivs
sub
xchg
or
jbe
sbb
jo
mov
imul
lds
mov
and
into
test
sahf
or
loop
sub
xor
loop
dec
insl
test
in
pop
sub
repz
jl
repnz
mov
dec
inc
push
add
pop
bound
insb
icebp
outsl
dec
scas
or
pop
sbb
loopne
dec
addr16
pop
lods
mov
or
mov
aaa
pop
fisttpll
stc
inc
mov
mov
sub
lret
fdiv
das
pop
mov
cwtl
mov
or
mov
dec
jno
ljmp
shrl
mov
inc
mov
nop
in
adc
repz
ss
jb
hlt
cmp
lea
leave
leave
and
sarl
test
dec
push
xchg
cmp
cmp
stos
pusha
mov
mov
std
pop
mov
dec
add
inc
mov
xor
lret
push
pop
xlat
std
mov
mov
jmp
push
push
jno
cmp
fwait
add
cld
add
mov
or
mov
shlb
dec
push
dec
mov
adc
jae
jg
mov
js
mov
das
ja
inc
add
or
repnz
pop
repnz
imul
push
push
dec
mov
rorb
push
mov
xor
nop
push
lds
sbb
cmp
sub
leave
rclb
iret
nop
fdivs
lds
mov
cwtl
in
sub
inc
ds
imul
add
adc
mov
fwait
jno
stos
sti
and
and
sub
xchg
test
or
sub
insb
sub
sbb
scas
add
pop
mov
fimuls
ss
paddusb
in
pop
addr16
out
pop
pop
mov
fwait
roll
fildll
mov
rcrl
mov
add
or
or
jecxz
ljmp
jmp
bswap
add
cld
xor
xchg
dec
sahf
fiadds
mov
ljmp
cld
insb
add
repnz
sbb
loope
adc
mov
add
mov
fnsave
add
sbb
push
test
jno
and
jle
add
push
shrb
sbb
test
out
xor
ss
and
daa
fcoml
jb
into
mov
das
mov
out
insl
push
mov
pop
sub
pusha
test
movsb
sbb
sub
or
aas
movsb
test
mov
aam
and
pop
mov
and
ret
dec
rolb
ret
dec
stos
jnp
cmp
mov
hlt
xlat
cmpsl
push
xchg
sub
mov
and
cmpsb
fucomp
popa
pop
mov
dec
push
xchg
push
dec
sbb
jmp
dec
jns
cmp
mov
test
insl
pop
pushf
imul
mov
loope
mov
add
lods
mov
push
ret
xchg
imul
push
add
leave
test
mov
push
adc
xchg
imulb
pop
sbb
xor
inc
out
insb
push
mov
xchg
repnz
scas
inc
in
xchg
insl
in
in
inc
aad
sbb
jge
cld
add
and
push
hlt
mov
test
sub
jb
ret
inc
mov
dec
cli
mov
mov
popf
and
aam
les
push
bound
jbe
hlt
hlt
pop
daa
mov
iret
sbb
xchg
stos
pop
adc
aad
pop
mov
mov
rorl
lretw
aad
add
mov
lar
push
int
sub
push
mov
pop
fcmove
lcall
iret
leave
loopne
pushl
xchg
push
clc
push
dec
punpckhwd
loop
test
lods
and
or
adc
mov
dec
adc
jb
repz
mov
lret
push
shrb
pushf
xor
mov
or
das
ja
popf
hlt
lcall
lea
popf
mov
sbb
das
loope
fildl
ss
mov
push
xor
sub
sahf
adcl
push
push
mov
fucom
push
xchg
or
lea
rcll
cmp
loopne
or
out
sbb
push
sbb
adc
lock
data16
mov
inc
push
add
hlt
dec
into
scas
push
xchg
push
sbb
es
add
jo
nop
enter
jne
lcall
adc
jno
sti
cmp
arpl
lret
inc
popf
adc
mov
mov
sub
jl
mov
or
outsb
ja
dec
mov
inc
in
js
out
and
lea
jp
dec
mov
sbb
adc
mov
cmp
xchg
sbb
es
xchg
mov
aas
sub
inc
xchg
dec
sub
dec
lret
xor
fwait
rcll
or
js
jmp
mov
and
imulb
outsb
lret
xor
sarl
xor
or
xchg
les
ja
mov
scas
dec
shlb
mov
repz
inc
mov
out
sub
cli
add
popf
add
xchg
sbb
sbb
lds
jb
fwait
adc
jo
mov
shlb
dec
push
ljmp
jae
sbb
popf
jp
or
or
jmp
arpl
push
and
call
lret
leave
adc
aaa
stc
inc
xchg
cmp
enter
add
sub
bound
xchg
imul
pop
sub
les
test
outsl
lret
nop
add
or
pop
xor
xor
test
into
pop
jns
das
pusha
cmp
movsl
sub
pop
sub
int3
dec
loopne
xchg
sbb
or
in
dec
loop
or
mulb
ljmp
push
clc
cmp
or
mov
xchg
ret
std
outsb
adc
ret
sbb
insl
jmp
es
mov
shlb
sahf
xchg
shrl
loope
mov
stos
mov
sbb
sarl
lods
mov
mov
mov
dec
leave
loope
dec
icebp
repz
mov
repz
arpl
jae
push
sub
fcomi
sub
adc
mov
jns
call
and
shr
adc
adc
mov
xchg
add
mov
and
movsb
and
mov
or
sub
xchg
sbb
xchg
test
jl
xor
sti
and
mov
mov
lret
xchg
push
and
andb
add
sahf
push
ja
nop
ret
fisubl
test
daa
imul
xchg
mov
fnstenv
loope
jno
mov
es
out
mov
xor
lea
idivb
push
lea
lcall
add
mov
imul
xor
pusha
adc
std
fcoms
fcoms
dec
pushl
in
mov
mov
lret
xor
or
fidivl
mov
sbb
pop
push
outsl
add
fcmovne
mov
data16
stos
out
movsb
lods
pop
lcall
shrb
xchg
or
cmc
dec
outsb
adc
xchg
mov
popa
fsubs
sub
jnp
add
sbb
xor
test
mov
pop
sub
and
call
xchg
and
inc
inc
pop
fmull
mov
repnz
mov
hlt
cltd
in
add
int3
mov
sti
push
mov
out
xor
xchg
pop
pop
shl
aaa
inc
sub
shr
orb
in
out
shll
xor
outsl
sub
xchg
push
test
xor
ds
inc
cltd
mov
sahf
jle
test
sub
jg
xor
jge
in
scas
cs
cwtl
adc
cmp
add
sarl
test
jecxz
push
nop
mov
mov
push
lods
test
jge
mov
sub
add
das
icebp
stos
lea
inc
push
xorl
mov
push
lret
xchg
test
cmp
icebp
cmp
fisttpll
shrb
daa
xor
inc
int3
in
mov
lret
ss
xor
gs
arpl
xor
adc
aam
add
xchg
cmp
jb
or
leave
shll
adc
adc
dec
push
mov
xchg
lds
cmp
mov
bound
jg
pop
jle
inc
dec
imul
dec
push
xchg
sbb
dec
inc
xor
xchg
leave
pop
in
dec
arpl
xchg
mov
xchg
sub
mov
jecxz
fcomip
and
popf
adc
sbb
pusha
jb
out
dec
sub
dec
adc
leave
stos
cmp
ss
ds
clc
addr16
hlt
pop
mov
cmpsb
mov
int3
mov
stos
add
xor
xchg
pushf
push
push
mov
sbb
sub
sbb
mov
xchg
stos
xor
jecxz
mov
or
xor
popf
ljmp
sub
incb
icebp
lret
sub
out
arpl
clc
xchg
xor
in
lahf
or
lret
test
mov
popa
adc
and
into
movsl
lods
cmp
popf
xchg
sbb
sub
xor
out
mov
jae
mov
push
aas
mov
sbb
inc
sbb
pushf
in
xlat
mov
aam
lods
dec
or
ja
arpl
mov
dec
push
repnz
mov
ljmp
jp
dec
outsl
lods
cld
hlt
or
mov
out
add
jl
fstpt
fnstenv
fildl
aaa
push
mov
fildll
nop
ja
xor
and
repnz
out
call
sub
mov
cwtl
inc
or
xchg
cltd
adc
xlat
push
or
jo
rorb
xchg
mov
pop
lods
adc
inc
xor
je
sti
and
scas
lock
cmp
jns
push
mov
mov
inc
or
xor
pop
ret
push
mov
sti
es
clc
pop
xchg
adc
adc
notb
ret
insl
std
push
ja
xchg
sub
mov
daa
adc
mov
push
test
xlat
adc
jl
sub
cmp
push
xor
cmc
cltd
xor
cltd
pop
scas
add
jmp
inc
xor
mov
lds
scas
mov
add
test
inc
cmp
mov
or
lea
mov
stos
test
and
ficoml
dec
mov
adc
cmp
xchg
xchg
push
ds
call
repnz
or
sbb
xchg
inc
js
cmp
push
adc
je
lret
sub
dec
in
mov
sub
sbb
or
mov
cmp
outsl
adcb
aad
in
jp
lret
sti
add
and
xor
mov
xor
jnp
mov
or
arpl
sub
push
mov
xor
into
mov
movl
sub
mov
mov
adcl
dec
addr16
adc
fists
cmp
mov
add
sub
outsl
and
cwtl
fmull
xor
adcl
jne
dec
lods
outsl
cli
ja
xor
and
push
orb
mov
xchg
pop
popa
inc
cmp
and
mov
aam
xor
xchg
test
ss
ss
sbb
xchg
into
add
mov
mov
fstps
xor
movsb
and
and
pop
loopne
sbb
xor
out
jae
icebp
pop
arpl
mov
rorb
sub
bound
das
push
jl
lcall
inc
inc
cmpsb
das
dec
imul
lock
mov
push
jle
hlt
rcl
inc
adc
loope
gs
inc
cmp
adc
adc
xchg
ss
push
int
lahf
js
pop
ja
and
enter
pop
jmp
je
imull
loopne
aas
mov
fbld
push
xor
push
negl
add
int3
test
or
test
test
outsl
mov
mov
rcll
test
mov
fs
add
lods
and
mov
cli
cmpsl
and
push
push
sbb
in
mov
adc
flds
scas
add
xlat
lods
sbb
jno
idivb
xchg
xor
sbb
cmp
mov
add
repz
mov
ret
ret
push
or
das
or
clc
mov
fistl
cmp
or
sti
dec
gs
xlat
pop
lahf
test
mov
imul
cmp
mov
fstpt
data16
inc
arpl
out
stos
mov
pop
sbb
jnp
aas
mov
notl
out
add
icebp
scas
push
pop
loopne
jne
push
loop
dec
fsts
mov
lahf
movsb
bound
fisubrs
mov
mov
adc
inc
fwait
xor
jno
adc
dec
sub
push
test
jbe
popa
push
lret
loop
xchg
jnp
aam
aam
imul
pop
int3
popf
jo
int
fmul
ret
cmpsl
loopne
das
aam
pop
scas
pop
and
fcmovnu
aaa
xor
cltd
and
sub
jp
jg
js
cld
sti
dec
xchg
pushf
notb
adc
cmp
xchg
jl
jmp
jo
pop
add
dec
fst
sub
or
cli
or
xor
int
xorb
call
pop
pop
es
lods
dec
loope
jmp
sbb
push
sbb
xchg
nop
inc
cmpsl
xor
hlt
pop
inc
push
decb
fwait
xor
pop
dec
rolb
loopne
insl
in
jmp
xchg
add
icebp
pop
out
jbe
lock
inc
insl
inc
outsl
mov
push
sbb
and
js
sti
dec
xor
jmp
mov
xchg
and
mov
clc
push
add
cltd
dec
or
mov
jae
and
adc
inc
cmp
les
test
sbb
fnsave
xchg
out
inc
push
hlt
inc
jns
add
xchg
mov
add
jle
dec
aaa
movsb
pop
xor
add
aad
sub
jnp
outsb
jnp
pop
sub
jl
dec
scas
and
lods
enter
mov
push
fbld
adc
adc
pop
in
adcl
fcoms
pushf
and
or
rcrl
pop
xchg
rorl
sti
pop
cmp
mov
push
cmp
shll
pop
push
and
sub
fs
mull
clc
fs
cmp
adc
mov
inc
dec
dec
push
dec
sub
rcr
cmp
jmp
rep
mov
pop
mov
push
add
popa
lea
push
test
and
sub
pop
mov
sub
popf
aad
cmc
test
inc
jg
sub
dec
andb
mov
ljmp
xchg
sarb
loopne
lock
pusha
cli
fcompl
inc
mov
cmp
mov
leave
out
add
subb
mov
clc
xchg
add
sub
or
dec
jnp
loop
jg
adc
adc
cld
push
push
cmp
push
pop
lods
mov
inc
pusha
xor
cli
adc
mov
adc
pop
mov
mov
addb
sahf
sbb
xor
pusha
add
shlb
mov
add
popf
dec
pop
push
test
and
mov
sbb
xor
sbb
dec
std
pop
sbb
mov
sbb
cmpsb
sbb
int3
xchg
loopne
daa
leave
data16
xor
sahf
pop
ja
mov
lds
xor
cmp
in
lods
addr16
int3
mov
inc
push
pop
divl
mov
inc
inc
push
mov
sbb
pusha
fs
jbe
jecxz
fimuls
pop
xor
xlat
stos
xchg
lret
pop
or
and
sub
cmp
fisubrs
and
idiv
push
or
int
jne
into
mov
dec
inc
mov
jne
and
adc
shll
inc
add
adc
or
jle
adc
dec
or
jmp
and
in
int
cmp
sub
mov
ss
lcall
mov
adcl
sub
dec
pop
stos
push
pop
scas
xor
test
out
mov
mov
shll
sub
pop
pop
adc
popa
cmpl
mov
mov
fiadds
mov
pop
fwait
and
outsb
xchg
push
imul
xor
mov
sbb
pop
rcr
jg
pusha
test
cmp
or
mov
mov
roll
out
jmp
idivl
push
sbbb
xor
push
sub
push
out
ja
sbb
fildl
cwtl
ret
xor
and
les
jp
mov
jbe
dec
inc
scas
inc
jmp
cmpsb
jb
cmc
outsl
jnp
jle
test
sbb
mov
aad
cltd
test
sbb
cmpl
cwtl
sub
sub
inc
data16
mov
dec
out
enter
xor
ss
mov
mov
dec
mov
scas
loopne
jp
cli
mov
dec
aas
add
cmpsb
and
cmp
mov
adc
in
daa
dec
dec
pop
shrb
and
test
inc
lahf
pop
jmp
imul
sub
mov
mov
cmpsb
inc
jno
mov
mov
xchg
sbbb
ja
xchg
sbb
cmc
sbb
lret
xor
dec
mov
xlat
int
daa
iret
test
adcl
pop
scas
pop
push
inc
aas
divb
lods
sarl
jae
jnp
add
test
aad
and
lods
jbe
inc
std
lods
repnz
fnstcw
lods
into
sbb
loop
ja
mov
or
xor
pusha
loope
cld
loopne
fstps
mov
add
les
cmp
jp
shl
pop
mov
pop
pop
xor
mov
lcall
dec
mov
out
repnz
sbb
pop
or
mov
mov
lret
jns
scas
scas
jnp
xchg
imulb
pop
sbb
clc
adc
jg
aas
sbb
pop
push
mov
aad
xor
mov
xor
loop
cli
les
dec
push
inc
jno
dec
cmpsl
xor
jle
inc
ret
inc
cmp
cmpsb
outsl
test
ja
out
divl
andb
sub
cmp
mov
ja
pop
mov
dec
push
xor
lcall
mov
or
mov
push
pop
leave
icebp
je
cmp
fsts
lea
jecxz
insb
aaa
xchg
daa
sub
mov
icebp
lock
std
in
clc
jl
adc
lcall
jo
xchg
cltd
mov
mov
testb
rclb
lret
or
cmp
pop
rorl
into
xchg
roll
add
jg
out
pop
xchg
xchg
fdiv
repnz
or
mov
and
xorl
scas
xchg
jo
lock
adc
sub
add
inc
inc
or
sub
sahf
add
shlb
movsw
out
negl
mov
cmp
mul
pusha
push
sub
xor
dec
mov
pop
xor
out
or
cli
cmc
xor
lret
adc
vpaddw
ljmp
out
repnz
dec
cli
mov
pop
rcrb
inc
adc
lock
xorl
cmp
adc
mov
xchg
xchg
aam
sub
adcb
out
fsubp
movsb
adc
call
xchg
xchg
sysexit
jne
xchg
cmp
xor
loopne
pop
cmp
subl
hlt
xor
mov
cli
mov
cmpsb
ret
hlt
ljmp
push
popa
jle
and
pop
add
mov
adc
mov
mov
jae
adc
ljmp
xlat
sbb
fsubs
inc
mov
dec
test
xor
repz
sbb
xchg
mov
mov
arpl
lret
sub
int3
bound
xor
outsb
adc
mov
sbb
jae
mov
or
dec
call
xchg
hlt
movsl
xchg
cmp
xchg
lret
jne
jae
fcmovnbe
orl
mov
cmpsb
cltd
inc
cmpsl
jg
or
push
shlb
dec
jge
mov
loopne
test
movsl
mov
std
add
inc
addr16
mov
pop
jo
xchg
inc
lock
sbb
sbb
cmp
mov
sub
xor
popa
fisttpll
fimuls
cmp
mov
sbb
jle
mov
add
sbb
sbb
xor
stos
mov
shlb
adc
cmp
jno
sahf
push
jle
sahf
insb
and
mov
sub
andl
push
sub
mov
inc
mov
popf
dec
mov
mov
fstl
test
in
shrl
cmp
fs
pop
cmpsl
dec
fdiv
mov
mov
or
js
clc
xchg
xor
push
fdiv
xchg
int3
jo
loopne
sahf
add
mov
in
mov
imul
in
add
cmp
add
ret
outsl
cmpsb
sub
sub
cltd
inc
jae
xor
mov
dec
inc
mov
cmp
sub
movsl
mov
shlb
pop
stos
xchg
out
in
cwtl
mov
mov
pushf
sbb
or
in
aaa
xchg
or
mov
popf
push
adc
gs
stos
sub
xor
mov
out
sub
jp
mov
popa
push
cmp
rclb
xchg
adc
scas
fcmovb
adc
divps
inc
sbb
cmpsl
pop
out
lea
inc
test
repz
arpl
mov
push
pushf
jle
pusha
arpl
daa
fisubrl
xchg
in
pop
xor
enter
inc
adc
and
xor
and
repz
mov
push
testl
mov
fcmovne
imul
push
pop
jb
inc
mov
xor
adc
mov
cmc
jmp
bound
hlt
xorl
mov
cmp
idivl
adc
popf
inc
orb
jl
pop
push
into
sub
dec
out
mov
fnstsw
iret
mov
inc
out
and
gs
adc
flds
xchg
in
fs
aam
mov
imul
and
mov
pusha
movsb
test
cmp
xor
inc
mov
mov
cs
out
mov
jb
mov
mov
xchg
addr16
inc
ja
sbb
push
inc
and
cmp
fs
psubusb
sbb
lock
mov
inc
push
inc
loopne
das
inc
push
test
repz
mov
cld
dec
xchg
or
mov
jne
mov
out
pop
mov
ljmp
xchg
jle
sub
inc
xor
hlt
xchg
pop
dec
lds
mov
test
add
mov
jae
and
xor
daa
push
nop
mov
jge
lret
ss
pop
sub
pop
xchg
or
ret
test
adc
jge
adc
mov
push
jl
push
shrl
fwait
pop
xor
xorl
jp
fwait
and
fldl2e
addr16
lcall
dec
sub
and
or
sti
int
aad
jp
add
test
je
jnp
int3
xor
xchg
jmp
fistpll
incl
push
jnp
subl
and
loopne
hlt
push
xchg
mov
mov
inc
inc
mov
ss
jno
mov
push
enter
mov
add
sbb
subl
pop
fisubrs
cs
fwait
sbb
in
imul
push
pop
jecxz
fsubrs
fidivrl
leave
addl
repnz
mov
jl
or
or
cmp
mov
int
dec
inc
aaa
jae
xchg
jl
es
mov
push
push
adc
loope
push
lods
loopne
repnz
pop
arpl
jns
cltd
push
sbb
mov
sbb
enter
fs
jle
aas
xchg
fdivrs
fmulp
push
mov
pop
lahf
cmc
in
hlt
in
sbb
test
jb
mov
rclb
insl
and
shlb
sub
mov
jge
push
mov
xchg
das
mov
fcompl
or
pop
test
add
or
movsb
dec
jmp
mov
out
xchg
lret
mov
push
push
pop
lock
xchg
adc
mov
cmp
call
scas
and
pop
jb
pop
aas
aas
sub
and
add
inc
inc
les
add
sbb
shlb
mov
subb
pop
cmp
test
aam
inc
js
ret
in
hlt
rclb
lds
iret
lods
pop
jo
shrl
adc
aas
mov
mov
sbb
scas
fistpl
sahf
xchg
test
rclb
lea
xchg
gs
inc
sahf
shll
mov
or
aaa
xchg
mov
loopne
ss
add
adc
xlat
in
in
inc
fildl
mov
inc
mov
cli
mov
xchg
pop
sub
dec
mov
insl
je
push
negb
out
scas
pop
cmp
adc
inc
shll
dec
call
fldenv
dec
idivb
pop
stos
push
frstpm(287
loopne
jnp
adc
adc
xchg
inc
pusha
xor
pusha
push
inc
aaa
out
jae
and
rolb
xor
fs
xchg
push
lcall
lods
adc
sbb
xorb
outsl
cmp
sbbl
gs
cmp
fdivrs
xor
arpl
shll
lods
dec
arpl
decl
pop
mov
pushf
mov
js
dec
or
popf
lds
mov
jnp
fldt
inc
movl
aam
dec
xchg
int
sahf
nop
jae
out
lea
movsb
movsb
and
sbb
aas
xor
pop
push
repnz
pop
pusha
push
push
scas
stc
out
arpl
xor
mov
jne
mov
stos
push
loopne
xor
lret
jecxz
les
fmull
loop
test
fs
nop
pop
rcrb
lahf
cmpsl
xor
pop
pop
daa
stos
or
xorl
cmpsb
das
pushf
cmpsl
inc
out
mov
scas
jae
loop
xchg
ljmp
arpl
in
mov
jg
add
inc
mov
sahf
sub
mov
fwait
xchg
dec
enter
or
push
jge
ljmp
insb
push
sbb
jge
movsb
jns
loope
jnp
lods
adc
sub
mov
adc
push
shrl
pushl
sub
idiv
pop
enter
jae
and
jl
dec
and
adc
xor
pop
jne
fcomps
stos
cmc
pop
dec
sti
aad
inc
xchg
mov
mov
mov
pop
or
cmp
jle
ret
sbb
aaa
xchg
jecxz
lret
scas
lret
and
jns,pt
imul
or
mov
cmp
push
mov
inc
negl
lret
ret
hlt
and
pushf
mov
and
mov
lods
jne
jmp
fdivl
fsubrp
js
inc
ja
jbe
mov
mov
or
jae
adc
adc
int
xor
std
test
lock
push
sub
push
daa
rorl
inc
pop
lea
add
inc
mov
push
push
dec
jge
rcrb
jno
and
out
loopne
dec
fldcw
movsb
gs
mov
mov
jge
iret
mov
out
mov
cmp
lea
insb
sub
test
aad
rorl
xchg
push
pop
xchg
stc
xorl
jo
mov
imul
add
ja
push
out
or
mov
imul
sahf
pusha
xchg
adc
aam
repz
dec
test
adc
repz
xchg
xchg
loop
xchg
jecxz
cmpsl
xchg
arpl
ret
jecxz
shlb
cmpsb
movsb
iret
cwtl
cwtl
mov
and
inc
pop
ja
fcmovne
aad
cmpxchg
in
add
pop
ret
adc
xchg
movsb
xchg
mov
dec
mov
cmp
mov
mov
dec
jne
xchg
jmp
lahf
xchg
daa
sarl
jmp
pop
cmp
outsb
pop
dec
push
rcrl
in
rclb
push
and
cltd
mov
add
mov
enter
mov
repnz
test
fsubs
mov
call
mov
jle
mov
xor
cli
pop
sbb
fmul
inc
push
ret
dec
in
scas
lds
ja,pt
or
mov
cs
mov
xchg
subb
adc
pop
adc
inc
dec
ret
sbb
mov
add
mov
inc
mov
mov
xchg
pop
add
fs
lcall
call
fisubl
gs
pop
stc
mov
ss
and
loope
daa
add
sbb
fistpl
pop
dec
inc
dec
js
dec
or
les
mov
cmpsb
mov
cltd
adc
cmp
sbb
aad
pop
pop
jns
icebp
cltd
inc
sbb
jb
xchg
fs
mov
lret
add
xchg
xor
pop
int3
inc
xchg
pop
pop
fnstenv
sub
or
sub
mov
int3
or
sub
push
jns
xchg
mov
inc
inc
xor
push
jl
cld
pop
ret
mov
push
aas
cmpsl
aad
mov
jbe
inc
and
sub
and
or
sub
aaa
mov
push
outsl
cltd
push
add
dec
mov
xlat
add
add
cmp
push
les
call
aad
clc
mov
lock
fisubl
stos
ljmp
insb
xor
xor
jmpw
pop
sbb
cmpl
jbe
cmp
mov
dec
imul
cmp
icebp
lods
or
into
gs
negl
cs
out
jmp
stos
xchg
push
and
push
loope
sub
out
mov
jp
lret
and
sbb
pop
fsubp
das
jp
and
mov
mov
in
pop
mov
mov
stos
out
jg
pushf
gs
js
mov
repz
shl
adc
mov
movaps
pop
pop
lods
xchg
fadds
xor
push
rorl
icebp
inc
out
outsb
push
arpl
jmp
jecxz
sti
pop
xchg
cwtl
call
insl
out
rcrb
int
incl
push
xchg
rclb
xchg
or
fadds
mov
jecxz
sub
or
xchg
and
adc
mov
pusha
je
cmp
es
repz
mov
dec
fcoml
or
fsub
loope
les
insl
clc
sbb
dec
cs
sub
shr
jbe
mov
cmpsl
mov
or
adc
imul
cmp
push
jae
ficoms
aad
fimuls
aas
cltd
in
es
addr16
aas
aaa
mov
mov
jg
cmp
mov
jne
jmp
mov
hlt
xchg
pop
dec
mov
lahf
pop
jae
mov
scas
jmp
cltd
or
or
aad
enter
jo
stc
lock
pop
ja
mov
mov
xchg
subb
vmread
fnsave
roll
inc
sub
insl
shll
inc
sbb
loope
aam
or
inc
push
jge
adc
imul
or
mov
inc
je
mov
dec
mov
jne
push
enter
adc
repnz
push
and
xor
mov
mov
dec
push
stc
xchg
in
nop
pop
fadd
push
cmp
int
pop
outsl
sti
jo
nop
xchg
xor
int3
push
xor
jno
add
fisubl
add
push
outsb
jb
insl
inc
test
popf
or
inc
dec
in
mov
jl
les
fwait
sbb
mov
stos
loope
jp
mov
and
cmp
ss
aad
fisttpl
jns
roll
push
pop
outsb
out
sub
pop
pop
mov
mov
sahf
dec
std
dec
fwait
out
pop
xchg
jae
aaa
dec
sbb
es
mov
mov
jne
pop
push
mov
jp
ds
pusha
sub
mov
jbe
test
mov
push
sbb
dec
adcb
cmpsl
push
or
add
ja
mov
sub
addr16
push
mov
cmp
push
lret
or
hlt
int3
xor
sbb
out
in
inc
out
popl
dec
dec
bound
sub
ja
leave
dec
ss
cmp
pop
test
repz
dec
bnd
and
insb
cmpb
movsl
add
adc
mov
cltd
aam
mov
movsb
lods
dec
daa
cld
insb
pusha
xchg
dec
iret
test
out
fstpl
and
push
adc
xchg
sarb
mov
mov
pop
xchg
cmp
test
push
push
xor
inc
stc
mov
mov
dec
mov
enter
in
adc
sub
pusha
sub
xchg
mov
dec
xchg
lahf
repz
fcomip
subb
mov
leave
pop
and
and
sub
jne
ljmp
and
insl
add
xchg
stos
arpl
adc
and
inc
je
and
int3
pop
mov
and
fnstcw
rcl
outsl
adc
sub
sub
adc
jns
pop
out
push
sub
inc
sub
xor
sub
rcl
add
mov
popf
dec
xchg
neg
mov
cltd
fistl
outsl
fisttpll
lock
outsl
test
mov
pop
cmp
std
das
xlat
pop
sub
sarb
pop
xor
mov
inc
inc
and
aam
sahf
mov
fnstsw
iret
push
pop
sbb
cltd
jp
xchg
out
xor
das
fistl
jne
das
push
in
cli
clc
fdivrs
xor
in
sahf
fidivs
mov
fwait
jae
pop
mov
rolb
rcrb
pop
dec
cmp
sbb
inc
iret
jbe
mov
jo
pop
ljmp
and
pop
ss
sub
popf
pop
and
stos
push
icebp
stc
icebp
and
mov
mov
into
dec
insb
mov
adc
or
dec
sub
xchg
add
loopne
adc
inc
cwtl
or
or
cmc
mov
pop
or
xor
mov
mov
sub
mov
clc
jno
jp
int
sbb
mov
sti
idivl
outsb
ficomps
jo
mov
pop
es
cltd
and
jae
sub
sbb
add
jp
insb
mov
shlb
jl
xor
fs
jmp
pop
mov
adc
test
pop
lcall
loop
int
pop
and
enter
aam
jp
cli
sahf
xchg
add
pop
imul
xor
fwait
std
mov
sahf
loopne
test
sub
jge
dec
push
cli
mov
cmpsl
xchg
mov
mov
dec
or
sbb
repnz
xor
cmp
and
xchg
xchg
incb
aam
push
out
sbb
dec
push
and
iret
xor
push
popf
jle
incb
repnz
ret
addb
push
scas
jg
push
push
xor
push
cmp
in
or
cli
mov
dec
or
sahf
jp
int3
std
cmc
mov
push
sbb
in
out
pop
inc
xchg
inc
jno
push
or
mov
out
push
es
cmp
hlt
imul
lret
movsl
jmp
jge
push
jns
stos
mov
pop
xor
test
xor
jle
push
fimull
adc
es
cmp
sbb
repnz
push
stos
lret
or
daa
mov
movb
push
xchg
lret
cld
mov
and
fsub
sub
outsl
jmp
mov
xchg
jge
fcomps
mulb
aas
jecxz
in
insb
fnstsw
adcb
ret
sub
sub
xor
sub
lahf
cli
pop
les
in
pop
data16
jl
xor
adc
and
repnz
rorl
mov
jge
cmc
inc
and
test
movsl
fbld
subl
xor
repz
sub
insl
cmpsl
out
or
mov
cmp
inc
pop
pop
xor
sub
scas
inc
cmc
xor
dec
push
xor
xchg
push
clc
sti
sbbl
mov
mov
sub
or
loopne
mov
mov
cmc
mov
xchg
cltd
test
jno
insl
mov
test
daa
inc
sbb
cmpsb
repz
inc
push
and
leave
ljmp
cmp
mov
arpl
mov
aaa
hlt
cs
mov
scas
push
rcrb
cmp
sbb
outsb
jb
cld
lods
mov
lretw
sbb
mov
cmp
jo
in
and
stc
and
or
subb
add
xchg
xchg
pop
loop
inc
cmpsl
cs
cmp
pop
fstl
test
lcall
int
cs
fildll
data16
insb
mov
popf
test
xchg
std
adc
push
jnp
jle
cmpl
push
out
cmpsb
mov
inc
adc
loopne
jmp
testb
pop
and
push
test
mov
add
popa
lcall
je
insb
dec
lahf
cmpsb
ss
jno
pop
inc
int3
sub
ja
add
add
add
in
mov
push
je
stos
vmptrld
mov
int3
nop
movsb
dec
fbstp
jbe
cld
subb
cltd
pop
and
mov
cmc
or
lods
out
call
push
mov
andl
inc
outsb
xor
in
shrb
fnstsw
jb
inc
mov
pusha
add
add
rep
add
pop
clc
xlat
lret
idivl
add
ds
push
and
jns
sbb
pop
stc
mov
ja
or
pop
adc
pop
lods
pop
push
push
pop
and
test
in
fsub
jnp,pn
out
xchg
cmc
fbld
stos
pop
mov
xchg
idiv
or
lcall
jbe
ret
mov
aad
jge
sub
jcxz
push
pushf
cmpsb
xchg
xor
and
pop
fisubl
sti
pop
cld
mov
outsl
popaw
loope
mov
dec
add
and
mov
popf
les
sahf
hlt
pop
add
leave
insl
les
mov
pop
adc
fcmovnbe
dec
movzbl
jns
mov
addr16
rcrb
outsb
add
movsl
add
ret
aam
jge
movsl
lds
fwait
repz
add
sbb
aad
sbb
inc
xchg
lret
jmp
jbe
mov
mov
cmp
int
bnd
pop
mov
or
push
iret
aad
shrb
int
arpl
inc
xchg
pop
ret
add
repz
rcll
xchg
and
jns
or
mov
adc
mov
push
pop
rorb
and
fadds
adcl
sub
mov
inc
out
pop
cmp
dec
adc
lahf
int3
push
shr
es
or
sarl
dec
sahf
inc
jns
mov
orb
mov
mov
lock
dec
or
imul
iret
xchg
dec
mov
das
cld
xor
jle
dec
out
into
jmp
arpl
adc
mov
jnp
outsl
cltd
mov
mov
or
or
idivl
or
mov
jo
push
jp
push
int
jb
movsb
std
xor
iret
adc
mov
dec
iret
fwait
inc
push
cwtl
sbb
mov
outsb
mov
fldcw
clc
hlt
or
xchg
cli
sub
add
je
xor
mov
hlt
rcll
popa
scas
push
outsb
aad
addr16
sbb
notb
cmp
rolb
mov
push
xchg
mov
jb
xor
pop
mov
lahf
mov
mov
xchg
ja
xchg
das
scas
sub
xor
sub
in
lret
sti
loop
mov
test
cmpsl
mov
stos
sub
xchg
std
ja
xlat
hlt
xchg
aaa
lcall
fists
addr16
dec
orl
mov
cmp
testl
dec
in
mov
add
ss
lcall
xlat
mov
mull
les
in
fcoml
mov
jbe
pop
jae
mov
adc
outsl
outsl
js
xor
ss
mov
dec
push
sbb
repz
mov
dec
or
imulb
mov
or
add
xchg
sbb
fldt
inc
lret
inc
fsubrs
lock
jb
push
lods
out
mov
lods
dec
jle
popa
pop
outsb
adc
dec
mov
je
out
fnsave
clc
pop
fwait
or
jns
xchg
aam
pop
push
in
lcall
xor
mov
out
daa
sub
sbb
cmp
and
sub
sbb
aaa
jle
movaps
and
mov
and
pop
dec
test
add
aas
stos
pop
cld
cmp
push
dec
sub
mov
pop
adc
sub
adc
xor
fwait
adc
stos
test
mov
subl
inc
sbb
cli
shrb
jecxz
pop
rcr
shrb
addr16
sbb
or
test
jo
aaa
aad
mov
mov
mov
inc
mov
sbb
popf
xlat
push
xor
loop
inc
adc
scas
jecxz
inc
and
adcb
mov
sub
aam
cwtl
dec
cmp
push
jmp
out
test
test
jb
leave
in
push
or
sub
fistpl
and
and
and
xchg
mov
mov
xchg
shlb
pushf
fs
cmp
js
fcoml
dec
lods
insb
dec
pop
mov
bound
stos
sbb
cltd
ds
xchg
mov
pop
fcomip
imul
pop
leave
mov
pop
inc
sarb
into
push
rorl
les
shll
out
jne
adc
mov
inc
sub
jns
cltd
push
xchg
rcrb
mov
leave
aas
jnp
ret
adc
mov
into
loope
negb
nop
fwait
cld
out
insl
inc
test
out
rorl
mov
pop
in
pop
mov
push
jne
dec
mov
in
lock
mov
xchg
flds
pop
sbb
ffreep
pop
into
movsl
and
loop
ja
sahf
sbb
stos
adc
jmp
dec
mov
std
inc
mov
loop
mov
lcall
test
mov
mov
int3
add
dec
sub
xchg
mov
movsb
push
pop
icebp
lods
rorl
mov
es
lock
xchg
imul
popa
cmpsl
dec
sbb
or
push
or
adc
loopne
and
jo
aam
add
dec
mov
sbb
inc
popa
pop
aas
fs
paddd
cld
clc
push
cmp
sbb
inc
dec
stos
mov
fisubs
sbb
test
or
mov
lods
bnd
jl
pop
or
cmp
adc
mov
out
loop
pop
add
aam
sbb
jl
adc
sbb
bound
data16
pop
pop
gs
inc
xchg
jmp
push
cmp
shll
inc
inc
fs
dec
sbb
negl
out
add
jae
add
mov
mov
lret
aas
and
mov
pop
insl
push
pushw
xsaveopt
int
jmp
mov
push
inc
mov
add
je
bound
cld
int3
aad
cmpsb
scas
bound
xor
pushf
mov
cwtl
pop
dec
stos
sub
loope
scas
data16
imul
out
pop
mov
pop
fdivrl
xlat
addr16
sbb
xchg
mov
jno
fldenv
cmp
pushw
je
popa
leave
roll
mov
jne
xlat
addb
pop
inc
inc
pushw
xchg
jge
pop
push
xorl
clc
sbb
or
mov
test
fidivrl
sbb
xchg
fildl
insb
test
pop
insb
mov
popf
or
addl
jne
and
xchg
sbb
jle
std
mov
repnz
mov
pop
loop
lret
sbb
add
mov
hlt
xor
lds
fldz
lcall
jmp
pop
repnz
ds
sbb
sub
jne
outsb
shrb
jge
jl
int3
jnp
es
inc
fs
lds
clc
es
cmpsb
test
adc
insb
inc
push
scas
inc
je
adc
xchg
cmpsl
push
mov
mov
ds
test
jno
push
jl
loope
sti
or
or
mov
loope
and
cwtl
push
repz
jno
test
jo
loope
sub
pop
dec
rorb
out
cmp
jp
daa
les
mov
add
fldenv
scas
xchg
pop
cltd
mov
cmp
jno
pushf
popf
fimuls
mov
xchg
aaa
mov
gs
jg
int3
out
cmc
clc
inc
mov
lock
test
sub
test
mov
dec
pop
lds
jecxz
mov
insl
cmpsl
jnp
inc
stos
mov
sti
scas
ss
aad
push
dec
xor
ja
test
aas
xor
popa
movsb
jb
lcall
push
mov
int3
call
stc
jne
repz
inc
or
pop
adc
push
jl
and
pop
mov
xchg
mov
fwait
sarl
fists
popa
je
jae
add
mov
fidivrs
mov
jmp
inc
pop
shl
jbe
add
dec
add
jbe
sub
pop
aaa
jbe
popa
mov
movsl
fs
push
into
out
inc
arpl
dec
dec
xor
ds
sub
jnp
mov
xchg
and
inc
sbb
add
lret
pusha
fsubrs
cltd
ja
mov
fcompl
xchg
xchg
shlb
mov
repnz
aaa
popf
arpl
add
pop
and
flds
cmp
mov
in
test
popf
shl
sbb
out
push
and
cs
cli
add
cmp
sysret
mov
int3
loopne
inc
pop
jbe
push
push
cltd
inc
in
lret
inc
xchg
cmp
ss
les
imul
or
shl
insb
or
jns
cmp
dec
cmpsl
insl
std
inc
std
repz
mov
cwtl
cmc
int3
les
and
sub
push
add
fisttpl
std
xchg
fsubrl
jmp
or
jecxz
std
mov
mov
loop
sbb
sub
add
push
cmpl
or
pop
mov
orb
fldl
gs
jbe
loop
nop
and
jge
xor
sahf
add
repz
mov
mov
jo
popf
pop
hlt
pop
in
sbb
nop
imul
data16
xchg
push
clc
test
dec
loope
cmp
adc
jae
addl
or
pop
adc
xor
shlb
scas
mov
test
lahf
daa
pop
std
in
push
cmp
arpl
xchg
mov
or
mov
inc
outsl
dec
repz
out
popf
std
xchg
add
xlat
loope
adc
mov
and
cmp
shll
aaa
jecxz
push
push
inc
mov
ret
test
mov
stc
or
leave
insb
and
fstps
lock
mov
lahf
fstl
out
sub
xchg
cltd
xchg
popa
ret
mov
push
add
sti
pop
mov
les
aas
das
dec
out
mul
mov
ljmp
xor
das
je
faddl
cmp
and
filds
cli
shlb
push
mov
aam
jae
arpl
jnp
addb
pop
cmp
pop
jge
or
sbb
push
and
dec
inc
add
dec
jge
mov
xor
orl
dec
and
mov
dec
cmp
jo
mov
cltd
les
sarl
inc
ljmp
mov
cmpsl
jmp
lret
mov
call
lahf
adc
push
scas
jecxz
aaa
movsl
and
out
cmpsl
xorl
sbb
xchg
inc
cmp
cmp
lods
push
pop
sub
shll
repnz
shlb
neg
inc
ficompl
mov
adc
mov
in
sbbl
adc
fnstenv
cld
jne
iret
test
adc
mov
mov
mov
lcall
mov
add
push
jg
shlb
fsubl
leave
jl
mov
dec
jecxz
jle
sub
mov
or
addb
loope
fsub
lods
add
mov
repnz
push
test
shl
jmp
jns
or
and
sbb
pop
sbb
mov
cmp
je
sar
sbb
repnz
cmpsb
xchg
popa
xor
mov
sbb
mov
repz
cmp
cmp
push
pop
mov
add
inc
mov
mov
sub
add
das
pop
inc
pop
and
push
xchg
and
dec
aaa
stos
dec
test
push
fcmovne
stos
popf
inc
fidivs
and
cmp
clc
pop
int
lea
mov
mov
jae
or
scas
dec
pop
scas
movsl
pop
insl
jmp
sarb
push
mov
add
js
xchg
push
jno
sub
daa
mov
push
mov
pop
jo
int
test
aaa
mov
sub
push
dec
fcmovbe
xchg
hlt
push
testb
add
ret
xor
and
sbb
dec
lds
inc
sbbb
sbb
loop
fcomps
mov
mov
popa
sahf
mov
fsubl
inc
mov
adc
push
inc
mov
mov
jg
add
cld
push
add
mov
stc
cwtl
and
mov
dec
mov
jbe
in
jg
jbe
imul
adc
test
xchg
xchg
cmp
and
pop
pushl
sbb
push
push
fisubrl
xchg
cmp
imul
insb
cli
pop
ds
push
push
int
fildll
icebp
mov
in
add
pop
ret
inc
pop
inc
ficoms
mov
call
arpl
jecxz
movswl
and
pop
jns
ja
scas
es
in
jge
jns
daa
fiaddl
sbb
leave
lods
pop
adc
popf
jge
rcr
dec
xchg
jg
jg
rcrb
cmp
daa
cmc
loopne
sbb
sub
inc
add
push
andb
jbe
testl
mov
sbbl
and
or
nop
sbb
and
std
dec
int
fs
sbb
lock
lcall
decl
mov
clc
mov
pmaddwd
aad
cmp
clc
push
scas
sub
and
mov
cwtl
popf
inc
adc
ret
test
and
push
pusha
stos
shrb
pushl
mov
repz
fnsave
or
lea
pop
aaa
jno
jb
xor
and
test
cmp
mov
lds
inc
xor
xchg
mov
mov
bnd
push
cmp
mov
rcr
sub
dec
fildll
sbb
ss
mov
data16
jo
jnp
lcall
lea
push
inc
cmpb
sti
into
ret
mov
pusha
ljmp
and
or
xchg
call
cmp
push
inc
xchg
lock
bound
jno
xchg
push
mov
hlt
call
xor
cmp
cmpsl
cld
negl
push
cmc
loop
addb
aad
jne
inc
xchg
pop
jae
pushf
mov
cmp
sar
insb
push
or
push
xor
mov
test
sub
aaa
outsb
mov
test
frstpm(287
cwtl
xchg
cmp
add
enter
sbb
cltd
add
mov
shll
jne
inc
bound
jmpw
sub
out
in
lret
bound
aaa
xchg
js
cmp
dec
insb
mov
fldcw
rcrl
lods
add
lods
inc
adc
or
push
sar
shr
in
lds
jg
jo
popf
lods
loop
adc
or
es
jne
lret
outsl
or
stos
sbb
dec
xchg
jnp
divl
movsb
jmp
pushf
inc
pop
inc
xchg
or
out
or
fdivl
jbe
ljmp
hlt
rorb
in
and
std
mov
or
push
dec
cmp
xchg
idivl
push
rcrb
outsl
insb
mov
fnstenv
es
xchg
rcll
cmp
popl
stc
cs
push
sub
mov
and
push
out
shll
jno
sarb
stc
movsb
push
addr16
dec
jmp
pop
orl
sbb
xor
and
mov
dec
xor
cmc
cmp
jge
shlb
loope
mov
les
dec
dec
out
test
out
pop
out
aaa
jae,pt
add
sub
orb
aad
xchg
adc
scas
or
pop
xor
cmp
fwait
pop
push
test
fidivs
adc
mov
add
cmp
cwtl
fidivrs
sub
std
jns
insb
ret
mov
push
fisubs
and
xchg
dec
push
inc
into
pop
pop
addl
sbb
decb
sub
shll
pushf
mov
xchg
pop
pushf
iret
sbb
mov
lahf
sbb
push
lds
sbb
arpl
jmp
adc
out
rsm
dec
pop
fdivrp
inc
lods
out
dec
lret
pop
loop
add
stos
inc
jae
fistl
mov
shrl
cld
lret
sub
cmp
push
loope
adc
xor
je
sbb
sub
fcmovnu
bound
ljmp
in
dec
adc
jne
inc
mov
inc
inc
add
mov
sub
scas
mov
adc
bound
es
dec
loope,pn
data16
mov
aad
rolb
xchg
inc
nop
mov
mov
jns
xchg
fildl
dec
adc
mov
les
xchg
and
jp
mov
ljmp
lods
mov
int
push
cvtdq2ps
xor
fisubl
add
mov
cmc
aad
inc
addr16
jnp
jecxz
decb
call
inc
sub
out
orb
aad
out
gs
ss
cmpsb
fimuls
inc
shlb
inc
ss
loope
stc
xchg
repnz
arpl
add
out
xchg
js
mov
mov
jns
mov
mov
mov
dec
hlt
and
push
jg
xlat
arpl
jecxz
dec
mov
inc
ret
jno
dec
sub
clc
in
iret
sbb
ror
es
ljmp
adc
int
sbb
repz
loope
sub
imul
adc
loop
adc
arpl
push
icebp
add
xor
add
mov
push
outsb
mov
faddl
scas
xchg
xchg
shl
xchg
stos
jg
ret
dec
jae
movl
rcll
pop
and
inc
out
mov
jecxz
or
and
leave
pop
cld
mov
mov
out
adc
cmc
in
sub
jb
pushf
cld
and
or
cmp
in
xor
cmp
or
xlat
insl
cmp
cmp
sahf
mov
icebp
xlat
fstpl
movsl
mov
rcrl
xchg
add
clc
int
cmp
cmp
dec
jbe
or
int
test
loop
mov
std
pop
mov
fistpl
scas
dec
jp
insl
loop
xchg
push
daa
icebp
aas
jmp
lock
lea
out
xor
sub
xchg
add
cmp
cmp
jb
xchg
dec
ds
sbb
mov
scas
insb
push
ret
gs
into
push
fdivrp
popa
cmp
or
orb
paddsw
sub
dec
push
mov
bound
push
adc
cld
pop
lret
std
xchg
mov
rcll
sti
mov
lret
mov
add
arpl
test
dec
push
aas
jecxz
push
xor
push
fcompl
add
fwait
xchg
adc
inc
push
jg
jns
jo
sbbb
push
xor
jne
int
cmp
xchg
decb
out
test
sbb
enter
inc
adc
dec
pusha
mov
ss
or
adc
cld
push
movsl
xor
cmpsl
or
jne
sub
sub
movsb
test
fcoms
dec
dec
outsb
inc
mov
stc
aam
cmp
cmpsl
add
inc
cld
mov
xacquire
add
jnp
sub
aas
push
shr
div
scas
adc
cmc
ljmp
adc
sbb
xor
jmp
dec
jl
jmp
pop
cmp
bound
mov
mov
ljmp
mov
and
out
pop
dec
idivl
fldenv
xor
cs
inc
jb
hlt
dec
jg
pop
loop
mov
sub
test
cmpb
and
idiv
sbb
sti
mov
push
popf
pop
sub
pop
es
in
dec
xlat
dec
cwtl
and
push
xor
pusha
scas
addr16
mov
aaa
sbb
jmp
fisttpll
mov
push
jns
push
adc
std
fildll
xchg
mov
test
enter
je
test
icebp
and
dec
mov
push
sahf
xor
jmp
mov
jg
clc
adc
lahf
or
add
xchg
lahf
je
out
bound
fs
push
or
imul
adc
mov
aad
ret
dec
xchg
mov
xor
pusha
push
pop
mov
shlb
mov
std
cli
out
mov
lcall
jae
lock
add
jo
mov
cltd
in
pop
push
cli
les
lea
dec
xchg
sbb
daa
cmc
inc
push
sbb
adc
pop
test
fxch
imul
fstps
call
sar
inc
fcmovb
dec
daa
cmp
lock
mov
push
mov
pop
out
das
je
push
scas
test
dec
les
cmp
xor
shrb
repnz
or
or
iret
xchg
lret
xor
inc
jle
out
cmpsw
sub
jg
inc
cmp
aad
push
mov
pop
jb
jecxz
add
lret
push
test
push
sbb
cmp
mov
sbb
and
lock
inc
lds
scas
roll
jmp
cltd
lahf
call
dec
or
test
or
inc
pop
pop
xlat
aad
loop
arpl
push
or
jns
cmp
mov
les
add
movsl
fcmovnb
addr16
mov
add
pop
or
pop
fadds
cmp
cmp
std
ljmp
inc
and
dec
push
stc
es
test
outsb
mov
push
arpl
add
mov
adc
adc
jl
push
flds
nop
mov
ljmp
and
xchg
adc
data16
jecxz
mov
jo
pop
mov
pop
push
add
scas
out
pop
daa
pop
clc
xor
and
mov
and
push
int3
outsl
stos
mov
call
push
and
xchg
lea
jle
sahf
sbb
aad
mov
xor
xor
cmp
ret
daa
popa
dec
clc
sarl
fldl
addl
mov
mov
rorl
lods
rcr
pop
cmpsb
outsb
mov
sub
dec
mov
ss
daa
xor
repz
mov
sti
imul
sub
xor
pop
repnz
cmp
jecxz
pop
and
mov
bound
pop
xorb
push
jb
dec
imul
dec
jge
pop
mov
inc
mov
mov
shrb
aam
or
inc
xchg
mov
or
neg
fstpl
lcall
lods
fistpll
loopne
push
xchg
pop
lret
push
cmpsb
push
mov
popf
stos
mov
pusha
fistpl
popf
xor
or
inc
out
mov
inc
iret
dec
jle
mov
mov
add
lods
sbb
shll
test
pop
andl
adc
lret
je
inc
cmpsb
push
push
sub
outsb
addl
xor
imul
or
sub
nop
add
xchg
inc
lahf
jns
jg
mov
pop
test
lret
adc
test
and
adc
hlt
mov
cli
jnp
enter
cld
xchg
mov
es
add
lock
aas
jbe
and
es
jg
aas
sub
loopne
imul
in
int3
sub
cmp
cmpsb
ret
test
mov
push
dec
push
add
sub
ja
pusha
negb
inc
and
test
test
jmp
xchg
pop
push
cmp
dec
lock
sub
aad
repnz
xchg
mov
daa
cmp
jno
lcall
inc
add
mov
mov
cmp
je
sub
push
dec
push
ret
ljmp
cmp
fbstp
dec
loopne,pt
cmp
daa
sti
push
dec
xor
sub
cmpb
cmp
cmpsb
dec
mov
shlb
bound
jo
in
jbe
sbb
sbb
mov
jb
insl
es
in
add
std
and
xor
push
jle
jp
jno
sub
sub
stos
xlat
cmp
mov
lahf
add
dec
xchg
test
pop
orl
jne
in
sbbb
icebp
pop
aaa
xchg
jp
add
sub
test
jo
stc
pushf
or
inc
lahf
subb
xor
movsb
into
dec
cs
and
xor
sbb
jmp
outsb
pushf
test
mov
jmp
xor
dec
mov
idivl
pop
add
push
mov
jge
test
dec
push
pop
psraw
lahf
pop
xor
test
filds
jecxz
in
xchg
pop
jbe
inc
shlb
mov
stos
rcr
imul
in
insb
cmpsl
int
stos
sbb
mov
mov
xchg
xor
pop
lret
popa
push
or
movsb
out
cmp
mov
xchg
inc
fisttps
jbe
pop
in
pop
xor
mov
fidivs
cmpsl
add
cltd
jle
std
fiadds
scas
sbb
lock
leave
stos
out
cmp
in
out
psadbw
filds
add
cmp
test
pop
int3
or
sub
inc
add
inc
lods
adc
lret
cmc
das
mov
xchg
scas
imul
xor
dec
push
or
xchg
in
mov
dec
jne
mov
lahf
ret
push
mov
pop
push
inc
pop
push
push
xor
jmp
out
stos
das
popf
ds
push
aam
or
test
orl
mov
xor
imul
pop
shll
jle
psubusw
lea
mov
cmp
pop
add
inc
mov
jne
cs
adc
imul
mov
xchg
imul
cmpsb
daa
idiv
xchg
insb
inc
push
pop
popa
inc
inc
mov
mov
or
jmp
jne
push
cld
pusha
repz
and
fidivrl
push
fisubrs
test
xor
push
arpl
pushw
mov
iret
add
dec
sub
dec
scas
rcr
xor
sub
sub
sbb
scas
orl
movsb
jmp
aaa
and
repz
repnz
push
pinsrw
jo
int3
add
jnp
pop
jno
addr16
into
ficoms
sub
ffreep
cmpl
outsb
xchg
mov
inc
inc
add
pop
lds
cmp
dec
ss
repnz
cmpsl
andb
cwtl
add
sub
ficoms
push
jae
lret
xchg
pop
cmp
xor
xor
pop
icebp
mov
stc
decb
sub
cli
cmpsl
ss
mov
mov
mov
bound
mov
mov
sub
push
mov
dec
pop
rcr
push
aad
pushf
iret
scas
mov
sub
lods
pop
enter
popf
or
rcrl
mov
mov
bound
sub
xchg
adc
daa
call
pop
push
sub
data16
testl
xchg
xchg
jge
in
mov
push
sbb
fsubr
loop
push
scas
mov
rcl
sbb
sbb
ja
rcrl
sbb
jg
int3
movsb
nop
inc
int3
mov
xchg
arpl
jns
or
rorl
adc
mov
mov
push
push
ret
and
and
inc
lds
xor
cmp
out
addr16
sbb
mov
in
pop
sub
jmp
mov
loopne
push
inc
jecxz
je
test
fsubrs
addr16
cmp
adc
roll
jl
adcb
xor
roll
popa
add
dec
xor
mov
gs
adc
daa
cmc
filds
xchg
adc
cmp
push
pushf
and
pop
pushf
xchg
fsubp
arpl
fdivs
add
xchg
xchg
lcall
jne
push
cli
mov
fadd
aad
ss
mov
sub
mov
xchg
negb
mov
stos
and
fisubrs
xchg
adc
mov
xchg
es
mov
in
enter
mov
iret
fistpll
sti
cmc
vpunpckhdq
stos
in
jge
jnp
lods
pop
aas
or
or
repnz
cmp
push
xor
jmp
divb
outsl
divb
fcoms
and
sti
jecxz
add
bound
cmpsb
lock
mov
roll
mov
arpl
push
jae
add
ret
ljmp
mov
sti
dec
jne
in
xor
adc
stc
mov
jb
push
add
pop
dec
pop
ds
fwait
inc
push
fwait
pop
xor
mov
sub
shll
sbb
sub
sarb
rolb
test
mov
repz
adc
das
pusha
xchg
fwait
insl
mov
jl
hlt
outsl
mov
sub
pop
xchg
test
push
sub
and
jg
fisttps
and
call
lea
pop
cmp
lods
jecxz
fnstenv
xor
pop
fistl
clc
mov
nop
popa
mov
rorl
cmp
pop
xor
add
jp
mov
mov
mov
or
lret
ret
je
into
daa
ficoml
popf
sbb
test
jno
in
mov
xchg
rclb
xor
xor
xchg
in
std
mov
jmp
loop
xor
enter
mov
adc
pop
inc
sbb
inc
ja
sti
cmpsb
pop
ror
test
xchg
sahf
lcall
mov
repnz
lock
imul
jge
sbbl
lret
cmp
jle
enter
loopne
mov
pop
sbb
and
push
cmp
jne
in
in
push
popf
xchg
mov
dec
and
pop
nop
rsm
pop
fldl
ret
lret
scas
sti
lret
cs
test
ret
sbb
fildl
jbe
call
in
mov
lahf
xorb
add
dec
imul
mov
es
and
xchg
scas
in
cmp
jo
xlat
cmc
pcmpeqd
xlat
xchg
fwait
mov
dec
fidivl
adc
stos
data16
jge
int3
mov
add
adc
movsl
ret
pop
adc
push
dec
jb
add
sub
into
cld
and
lods
mov
repz
test
cmp
jbe
mov
call
mov
mov
push
into
nop
dec
pop
xor
shrb
mov
xchg
insl
lret
aad
aam
inc
mov
adc
iret
add
inc
mov
imul
push
ret
push
push
inc
xchg
ljmp
pop
and
inc
cmp
aam
int3
xorb
inc
pop
mov
adc
jl
and
xor
inc
inc
mov
push
aaa
js
ja
fidivs
repz
mov
aam
ret
cmp
mov
out
das
sti
es
clc
xor
popf
jle
test
out
jns
jmp
mov
mov
sub
out
mov
lds
sbb
xchg
mov
add
or
cltd
push
roll
mov
ret
and
dec
mov
fldenv
pop
insl
jae
arpl
mov
repnz
pushf
pop
nop
jecxz
pop
insl
push
jnp
push
xchg
xchg
aad
xor
mov
pop
cmp
std
mov
pusha
pop
test
jb
jle
dec
lret
idiv
dec
dec
loop
dec
dec
out
ret
inc
push
imul
sbb
mov
ljmp
ret
cmpsb
negl
mov
push
repz
movsl
lock
cmp
pop
ds
cld
lea
xchg
push
inc
loopne
in
fsubrl
xchg
xchg
stos
sub
scas
xorl
addr16
mov
mov
xchg
daa
rorb
test
xor
jb
int
and
and
dec
cmp
ds
in
mov
push
sbb
lahf
jae
xor
aam
pop
outsl
sbb
jle
data16
jge
in
ds
mov
fbstp
xchg
or
xor
pop
popf
adc
pcmpgtd
push
adc
sbb
sub
fstl
out
ljmp
mov
cltd
inc
addr16
aas
aaa
xor
pushf
jl
add
pop
add
into
sti
sbb
jo
pop
cmpsl
push
mov
adc
sbb
push
in
inc
adc
rorl
push
push
push
xor
negb
in
inc
mov
sub
push
push
lcall
xchg
movsb
or
test
dec
movsl
xchg
mov
loope
mov
dec
jns
cltd
scas
jnp
mov
ds
imul
test
push
xor
std
xchg
cltd
dec
push
lret
pop
mov
jns
sbb
adcl
mov
and
xlat
add
test
out
stc
icebp
add
add
sarl
les
cltd
push
xor
pop
or
or
add
and
mov
test
ja
out
mov
mov
fldenv
xchg
xchg
push
mov
cmp
add
sub
pop
xchg
insl
sub
inc
dec
and
xor
mov
ret
jnp
or
sub
in
orb
je
adc
xor
xchg
add
aas
add
cltd
adc
lret
fsubrs
mov
loop
rol
add
sub
or
and
enter
nop
outsl
sub
outsb
shlb
jns
std
or
jnp
dec
ds
jb
sahf
pusha
pop
test
sub
xchg
loope
in
jg
shlb
and
mov
repz
faddp
dec
test
xlat
in
pop
push
rcr
mov
pop
push
add
clc
mov
jb
es
out
enter
jb
scas
cli
lret
jp
add
pop
mov
cmp
icebp
pop
jbe
pop
xorb
nop
push
xchg
insb
xchg
xchg
stos
cmpsb
jmp
mov
ret
sbb
lds
or
insb
sar
push
xor
dec
push
jge
xchg
shrb
pop
xchg
pop
lds
mov
js
sub
cmc
fidivrl
cs
mov
sub
or
int
scas
fwait
xchg
sub
lret
mov
pushf
out
jb
ficomps
inc
cmovge
sub
mov
fists
mov
xor
mov
push
cld
jbe
popa
inc
xor
idivl
xor
jle
add
mov
and
add
mov
xor
out
sub
mov
clc
jb
and
int
inc
sub
aad
sarb
clc
adc
pusha
arpl
mov
xor
rcr
shll
push
sbb
fcoms
call
push
iret
sbb
sbb
xchg
ss
mov
dec
jns
mov
ja
leave
insl
daa
shrl
das
mov
lret
jmp
add
fcom
sarb
dec
sbb
dec
dec
fsubr
dec
sar
mov
cmpsb
hlt
and
outsb
lea
and
aad
adc
and
repnz
cmp
adc
into
pusha
mov
jno
mov
in
add
jmp
sub
xchg
jae
out
shll
ds
movsb
add
jb
outsl
dec
arpl
ljmp
pop
popf
pop
insl
mov
push
mov
les
add
cmp
dec
sub
loop
mov
xchg
sub
sahf
cwtl
aam
fnsave
clc
xor
in
inc
pushf
pop
ljmp
adc
xchg
mov
stos
pop
adc
cltd
push
inc
sbb
and
dec
mov
jle
dec
add
ficoml
and
mov
cmpsl
xor
or
js
and
in
lods
jno
inc
test
dec
xchg
lret
scas
addr16
test
or
movsb
jp
cld
sbb
fwait
add
jmp
out
aam
or
adc
xchg
ss
fbstp
lock
std
push
bound
sbb
imul
pop
cld
mov
ret
adc
les
xchg
rcll
push
icebp
repnz
xlat
pop
lock
push
mov
xchg
js
nop
push
icebp
call
or
sahf
fwait
pop
test
or
push
mov
cmc
push
ret
adc
in
repnz
out
stos
stos
sub
jl
xor
pop
and
mov
push
mov
xchg
adc
cs
and
sbb
dec
imul
cld
push
jo
cli
test
xor
imul
shrb
stos
popa
ljmp
popa
stos
orb
cmc
rcl
sbb
push
add
mov
enter
dec
dec
lock
sbb
fs
subl
sub
loopne
pop
lahf
pop
leave
aaa
fildl
push
jne
in
adc
out
cmp
adc
jb
out
aas
cmpsl
lds
push
popf
sbb
icebp
mov
mov
pop
sub
leave
sbb
aas
jo
notl
xchg
pop
xchg
insb
cmp
or
nop
pop
mov
sbb
loope
dec
jp
test
das
outsb
sbb
insl
iret
cld
lcall
fimull
mov
xchg
pop
bound
decb
sub
inc
incl
ss
les
cmc
push
loop
push
and
mov
ja
sbb
push
lret
pop
bound
dec
fnstcw
jge
add
xor
adc
stos
mov
inc
lret
inc
daa
mov
mov
cltd
mov
xchg
daa
in
repz
insl
daa
cmp
int3
mov
clc
sbbb
mov
les
add
add
pop
add
dec
nop
xchg
cmp
push
sub
call
mov
mov
cmp
out
bt
cltd
add
faddl
fistl
popa
in
sub
lds
mov
lahf
arpl
hlt
aad
sub
jecxz
bound
dec
pop
or
lods
or
push
cmpsb
inc
icebp
dec
shll
ss
in
lret
imul
int
adc
and
shll
lods
stos
jb
xchg
ja
mov
mov
arpl
xorb
jle
out
mov
inc
inc
adc
adcb
leave
jae
orl
daa
dec
loop
mov
add
and
in
xchg
sub
sub
out
cmpsl
mov
lods
jp
mov
js
xlat
data16
int3
sbb
add
push
or
inc
lds
data16
mov
ss
sahf
jl
cmpsl
repnz
adcl
dec
sub
fdivs
ss
pushf
cmp
fimull
or
daa
xchg
xchg
jae
mov
xor
mov
test
sti
fidivrs
aam
pop
mov
add
cmp
lcall
cmp
in
ss
pop
xor
mov
push
scas
jo
and
xchg
or
add
cltd
lea
data16
mov
mov
aas
push
scas
sbb
ja
mov
lahf
or
pop
filds
sbb
push
mov
xchg
push
clc
jg
out
scas
shll
xor
cmp
leave
movsb
xor
jl
push
sub
testb
inc
sub
jne
nop
adc
adc
push
insb
adc
sahf
pusha
lret
arpl
out
push
cld
sub
adc
in
and
in
gs
repz
push
movsl
and
mov
dec
rcrl
sub
stc
add
and
addl
mov
in
push
sub
in
cmp
jp
loope
xchg
inc
aaa
mov
dec
or
rolb
jns
jae
push
jle
cmpsl
jg
adc
mov
inc
xchg
sbb
in
mov
shrl
xchg
lret
fisttps
sbb
dec
andnps
int3
add
xchg
cmp
ret
outsl
cmp
arpl
inc
mov
mov
je,pt
xor
push
cmc
dec
xchg
fidivrl
push
imul
add
ret
cmp
call
add
adcl
push
paddusb
jne
mov
mov
add
pop
add
pop
sbb
dec
or
mov
jp
cmpb
scas
out
es
les
sub
fsub
mov
pop
jl
pop
adc
lods
and
xchg
push
andb
fwait
int3
mov
je
dec
mov
into
xor
outsb
dec
adc
outsb
je
add
adc
leave
pop
lahf
pop
jo
inc
jle
ret
mov
sub
sahf
jo
orb
mov
cltd
mov
loopne
fwait
cmp
xor
xlat
lds
lahf
add
sbb
mov
inc
xchg
notl
adc
dec
in
jecxz
ret
and
rcll
inc
cli
mov
dec
cld
mov
xchg
sahf
inc
das
arpl
cmp
jp
pop
test
jb
push
jo
xor
stc
out
imul
jb
inc
or
stos
cmp
xchg
iret
out
and
lds
loop
sarl
popf
xchg
sub
test
sub
dec
push
mov
xor
dec
inc
shlb
repnz
sub
ror
adc
pop
popf
mov
and
xchg
xor
dec
push
jb
pop
dec
adc
mov
lds
hlt
pop
jno
dec
mov
adc
fiadds
sub
stos
pop
mov
mov
push
fsts
ss
das
xor
mov
and
push
movsb
push
xor
fnsave
push
mov
and
mov
pop
test
cmp
pusha
adc
gs
arpl
inc
jle
xor
push
or
jno
jle
les
push
subb
fwait
inc
dec
and
gs
rclb
sahf
scas
sbb
xlat
dec
popf
les
testl
cwtl
cmp
cld
dec
stc
xor
fidivl
lock
mov
in
sub
sub
pushf
in
push
inc
add
adc
mov
lods
and
fs
sarb
les
xor
arpl
jg
push
cld
std
scas
push
call
test
or
mov
loope
or
hlt
xlat
push
insw
dec
xor
ret
mov
xchg
inc
jnp
in
mov
mov
roll
or
jo
mov
int
push
inc
inc
icebp
and
and
out
aas
xchg
int
jmp
push
enter
sbb
xor
ds
lret
clc
pop
pop
mov
jge
imul
mov
mov
fsubrs
cmp
ret
sbb
loop
cwtl
rorb
mov
out
pop
and
cmpsb
ds
or
jle
sbb
mov
or
ja
frstor
out
jmp
or
inc
sub
insl
xchg
mov
xor
in
jl
call
stos
dec
movl
sub
pop
inc
stos
or
in
shll
loopne
sahf
pop
and
mov
jnp
das
mov
mov
xor
pushf
push
out
add
fsubrs
jp
sbb
adc
xchg
movsb
adc
sub
lcall
into
jb
decb
xlat
jo
fiadds
pop
in
nop
loopne
lea
rorb
sahf
incb
lds
sti
or
popf
sub
iret
mov
adc
xchg
int3
mov
insb
lret
leave
mov
inc
or
popa
xchg
dec
pushf
out
jb
sbb
popa
imul
scas
lret
data16
mov
xsha256
cmpsb
push
in
leave
int3
cmp
ret
push
in
mov
jns
xchg
inc
loope
cmp
jnp
addr16
cmp
repnz
ds
incb
ss
jmp
mov
loopnew
sbb
outsb
or
sbb
lods
repnz
in
inc
push
dec
scas
loop
jecxz
inc
repnz
push
js
ss
mov
pop
jg
rcrl
scas
jmp
inc
ret
scas
add
aad
adc
jg
push
fldenv
lds
mov
jb
clc
fmulp
je
cmp
out
pop
push
pop
enter
loop
sarb
xchg
lods
adc
outsl
lods
adc
jle
adc
and
xor
jmp
push
out
dec
dec
aaa
mov
cmp
cmp
into
test
mov
out
or
popf
mov
loope
sub
sbb
mov
int
pop
or
sub
mov
cltd
outsl
cmpb
inc
cmp
pop
fwait
sbb
or
xchg
rcr
cmc
pop
push
aad
imul
and
scas
mull
lods
jle
jbe
shll
in
mov
xchg
inc
or
int
mov
lcall
les
xchg
jb
pushl
or
mov
popa
jmp
or
cmp
xchg
xchg
sbb
fisttps
mov
mov
arpl
lock
shlb
sahf
xor
sbb
into
xchg
lcall
negb
jp
mov
jae
adc
in
mov
cmp
bound
out
filds
shl
out
test
xchg
out
add
sub
pop
pop
push
dec
cltd
jg
cwtl
push
lods
js
xchg
pop
add
cmp
pop
xchg
push
xchg
fildll
jl
ja
mov
sub
push
adc
mov
pusha
sub
hlt
ds
mov
mov
mov
push
sub
sub
cmpsb
or
and
inc
lock
ja
sub
pop
inc
ficompl
loop
adc
clc
aad
and
fsts
aas
sahf
jmp
mov
xor
mov
lock
sbb
fcomps
fldt
inc
inc
push
cwtl
ret
mov
mov
stos
mov
mov
xchg
out
cmp
fldenv
cmovge
fsubs
jp
jmp
dec
push
arpl
repz
push
push
mov
sub
inc
or
adc
dec
ds
mov
rcl
repnz
sbb
imul
xor
adc
xchg
les
push
mov
inc
iret
push
jae
ret
add
adc
out
das
jns
and
mov
mov
test
push
cwtl
subb
xor
pop
out
fwait
shrb
push
cmp
call
cmc
dec
sbb
cltd
popa
pop
arpl
xor
cltd
mov
movsb
inc
sbb
fsubr
in
add
dec
xchg
repnz
arpl
and
sub
fcomi
pop
les
lds
jne
adc
scas
xchg
or
ljmp
pop
jge
sbb
jg
sub
xor
test
lods
call
push
dec
and
call
dec
and
jge
xchg
dec
das
jbe
call
xchg
xor
jne
pushf
rorl
dec
jae
push
jl
adc
sub
push
sbb
jnp
inc
out
rorl
mov
pop
mov
add
arpl
popf
cmp
jecxz
es
or
fdivl
add
js
imul
cmc
xlat
sarb
or
or
clc
negl
aaa
scas
jnp
rol
jge
mov
test
dec
in
mov
push
mov
popf
xor
cmp
ret
test
push
dec
scas
mov
sbb
loop
pusha
push
fsubrs
cwtl
xchg
imul
inc
lods
in
loop
cmp
in
inc
cmp
int
pop
push
es
mov
int3
jl
ljmp
out
mov
pop
pop
jno
je
jb
mov
inc
push
pop
shll
subb
aad
pop
enter
push
loopne
mov
cmp
xor
mov
add
push
push
pop
sub
in
sarb
and
sub
adc
xor
mov
lods
inc
push
lock
icebp
dec
sarl
and
push
add
mov
sbb
lea
push
mov
in
or
std
imulb
cld
jnp
repz
add
mov
sbb
jns
push
rorl
xchg
pop
mov
mov
jae
dec
jl
fidivs
push
outsb
cmp
xor
fcompl
es
and
mov
std
push
lcall
clc
xchg
or
jae
stc
adcl
mov
int3
cmc
inc
lods
dec
push
fdivrs
aas
cmc
std
lcall
inc
sbb
mov
dec
and
push
imul
ret
push
lds
push
mov
cmp
xchg
xchg
fbld
mov
cmp
repnz
dec
clc
pop
call
test
inc
fistl
test
pop
add
xor
pop
clc
inc
xchg
mov
loop
mov
jg
lret
lock
dec
add
out
jg
dec
insb
popa
fsubl
fildll
iret
or
stos
xchg
push
mov
pop
xchg
ret
scas
cmp
bound
ja
push
daa
pushf
aad
inc
mov
pop
push
mov
lods
pop
jne
call
icebp
and
push
mov
push
out
cmpsl
or
outsb
xchg
add
mov
jle
add
lcall
fisubrl
jecxz
jle
xchg
js
mov
adc
and
mov
jecxz
aaa
in
out
lea
dec
jae
dec
and
test
xchg
push
addr16
leave
add
jl
das
fs
movsb
jne
sub
jle
dec
mov
add
cs
cli
loopne
add
or
outsl
mov
dec
xchg
xchg
pop
sbb
lods
xchg
jecxz
test
icebp
cmp
and
stc
ljmp
sarl
aam
pop
pushf
pop
into
int3
aaa
jmp
cmp
xchg
movsl
cli
test
ret
xchg
mov
adc
xchg
and
dec
jnp
pop
mov
mov
adc
dec
loop
ljmp
sti
pop
sbb
jge
xor
push
mov
pop
sub
rorl
dec
jns
mov
push
xlat
lds
es
cmp
xchg
push
insb
pop
pop
adc
std
and
fdiv
sub
clc
ficomps
fmuls
mov
pop
dec
ljmp
cwtl
cmpsl
fnsave
jmp
mov
in
mov
lods
cmpsb
cmc
sahf
stos
lods
iret
in
bound
push
ret
lahf
pop
jae
xchg
pushf
sti
pop
les
xorl
orl
add
sub
test
aam
pop
push
push
mov
cmp
into
xor
int
xchg
and
sbb
outsb
push
cli
enter
sbb
cwtl
sbb
movsb
insb
in
lahf
sbb
add
sti
mov
pop
sbb
inc
icebp
roll
sbb
mov
cli
inc
xchg
cmp
rclb
sub
rclb
aam
dec
hlt
jmp
js
lret
mulb
mov
arpl
lods
stc
out
decb
cmc
xor
stos
gs
or
sbb
shr
push
add
pop
notrack
stos
sbb
rolb
push
sub
fmull
out
or
push
push
mov
xchg
lods
pop
jns
and
sti
add
xor
addr16
mov
clc
fcmove
jno
shl
cltd
mov
mov
mov
sub
movsb
scas
iret
lahf
xor
shrb
sub
outsb
jo
lods
xchg
insl
adc
xchg
lods
push
xchg
in
sar
into
mov
cmp
mov
mov
mov
aaa
adc
inc
stos
jmp
rorl
xchg
fisubs
cmpsb
enter
jmp
and
inc
cs
xor
cli
and
dec
fsub
fiaddl
and
es
std
ss
adc
adc
insb
jne
js
adc
scas
sub
dec
push
int
cmpsl
scas
mov
nop
inc
loope
cmp
cmovge
repz
rolb
lcall
stc
lock
call
lock
sub
adc
sub
or
jecxz
inc
sbb
shlb
imul
repz
push
adc
outsb
or
cmpsb
std
in
mov
in
jbe
jb
jmp
insb
dec
ja
sub
test
mov
sub
jbe
je
es
mov
fwait
test
in
repz
mov
dec
in
addl
out
sbb
shll
sbb
test
mov
popf
adc
jb
pop
sub
and
jle
gs
adc
inc
fldenv
ja
push
scas
lods
mov
xchg
push
aas
jns
ret
arpl
ret
adc
mov
mov
seto
sbb
fst
insb
pop
jnp
sahf
popa
repnz
int3
loope
sub
push
aam
iret
jp
inc
jnp
cld
mov
jge
test
orl
aas
arpl
and
adc
int3
and
cmc
mov
cmp
dec
in
mov
call
pop
in
or
push
imul
lock
dec
sahf
cwtl
int3
popa
inc
gs
xchg
mov
sub
cltd
rorl
andb
sbb
cld
sar
adc
pushf
mov
std
cmpsl
jl
stos
and
in
cmpsl
mov
cmc
jg
jle
orl
sub
popf
xor
aam
lock
loop
cmpsb
addr16
dec
inc
pop
or
decl
imul
sbb
jbe
mov
mov
cmp
cmp
add
inc
sti
inc
and
cmp
mov
out
leave
jmp
lret
inc
pop
pop
in
cmpl
xchg
and
mov
hlt
leave
cmp
sar
stos
lock
cmpb
mov
pop
push
movsb
ja
aam
sbb
jle
jl
mov
stos
ret
xchg
inc
aas
jbe
cli
or
mov
fwait
fsubr
enter
push
or
jno
loop
pop
jnp
test
lcall
test
mov
pop
or
jb
cmp
pop
push
push
lret
mov
add
aaa
pusha
aam
mov
adc
pop
pop
int
xchg
xor
pop
aas
mov
jp
mov
cmp
movsb
mov
add
jnp
or
cmp
pop
jbe
push
xchg
flds
es
stos
scas
outsl
cmpsb
jo
bound
pop
push
lods
jbe
jp
sbb
fidivs
pop
inc
xor
mov
out
iret
inc
sub
enter
jp
inc
dec
push
je
into
xchg
jb
fbstp
js
inc
ret
xorl
je
mov
mov
iret
insl
js
mov
imul
xor
stc
or
xor
fidivs
aaa
call
mov
movb
stc
pusha
in
dec
addr16
cld
or
shl
jo
fnstsw
xor
push
fisubrs
xor
adc
ja
lock
pop
bound
lods
cmp
in
xlat
add
lret
cmp
fs
int3
xchg
sub
decl
xchg
or
cmp
cwtl
add
dec
movsl
mov
cli
fs
stos
cs
cwtl
das
or
adc
pop
cmp
sti
jbe
inc
mov
test
mov
rcll
jbe
insb
sub
sub
fwait
pushf
push
in
loop
push
out
aas
mov
push
jnp
jb
sahf
sarl
into
ret
repnz
inc
ja
or
test
dec
xor
jle
jb
leave
xchg
lret
inc
pop
xchg
and
mov
outsl
imul
pushl
jnp
xchg
or
sub
repz
pop
lock
rolb
pop
add
cli
fstpl
mov
inc
ret
data16
test
lods
dec
push
scas
mov
cwtl
inc
adc
mov
shl
jmp
fwait
push
adc
mov
mov
jmp
lods
xor
xor
jb
in
and
stc
out
and
sub
arpl
push
xchg
mov
mov
add
test
in
in
stos
push
out
std
outsl
inc
dec
cmpsb
aaa
adc
mov
or
sub
xchg
sbb
jecxz
pop
pop
stos
sbb
dec
xor
rolb
add
les
pop
xor
push
pop
cwtl
rorb
push
xchg
mov
je
jne
in
jecxz
push
mov
and
xchg
into
jp
cmp
lcall
sarl
jns
add
jmp
call
idiv
ret
xchg
mov
push
popf
lret
enter
lcall
jne
mov
dec
push
xor
cwtl
cmp
sub
jbe
dec
lds
mov
movsl
push
jbe
ja
es
ret
outsb
mov
mov
sarl
push
cmp
pop
push
pop
shl
add
lcall
iret
sub
enter
push
mov
or
mov
call
js
mov
xchg
add
icebp
xchg
and
xchg
aas
roll
sbb
adc
aad
jg
out
fstl
sbbl
or
ja
insl
xor
cld
xor
cmp
lea
dec
andl
cs
pop
mov
push
ret
rol
negl
loop
fsub
aas
mov
popf
sub
sbb
out
push
enter
jl
lahf
mov
or
pop
mov
cwtl
aam
out
cmc
mov
add
loopne
or
add
adc
cmp
xchg
jecxz
imul
adc
xchg
cmp
addr16
xor
inc
mov
out
sbb
mov
adc
das
xchg
mov
fidivs
jl
mov
push
divl
xor
addr16
shlb
sarb
push
mov
sbb
xor
mov
add
push
sub
and
test
loopne
or
mov
cmp
fwait
and
mov
icebp
repz
xchg
scas
nop
mov
mov
out
adc
mov
sub
xchg
cmp
lods
hlt
and
mov
push
int
and
mov
cmc
sub
adc
adc
leave
cld
cmp
lcallw
push
mov
clc
add
pop
mov
sti
jp
sub
fbstp
xchg
andb
inc
mov
xor
dec
and
ficoms
sbb
add
popf
aas
cmp
inc
pop
pop
push
xor
or
mov
jmp
addb
fsubrl
jp
lahf
lods
fstl
loope
sub
mov
stos
lcall
or
inc
mov
mov
sahf
xchg
enter
adc
jl
test
aaa
stos
loope
je
fucomi
or
sbb
loopne
pxor
mov
bound
cmp
fsubrl
gs
xor
loopne
test
inc
inc
jl
cld
add
scas
fldt
rorb
xchg
push
fiaddl
in
or
inc
and
ds
pop
mov
push
pop
loope
ss
pushf
mov
mov
push
fs
push
sub
pop
cmp
outsl
cmp
sete
les
and
jae
scas
adc
fdivrp
cmc
xchg
shlb
push
xor
or
in
je
lods
push
and
std
jnp
enter
add
jge
pop
rep
lds
jmp
xor
jae
pop
xchg
lock
mov
xchg
out
cltd
inc
mov
adc
mov
jp
push
shll
mov
cmp
inc
push
and
loop
bnd
pusha
xor
add
xchg
ffree
sti
inc
mov
sbb
outsl
or
xor
mov
in
pop
rcrl
jns
test
mov
ja
stos
xchg
pop
clc
and
rcrb
push
repnz
loop
pop
mov
mov
mov
outsl
lods
out
scas
dec
outsl
inc
dec
push
sar
and
and
rcll
test
sbb
push
ss
in
leave
sbb
jle
fsubrs
push
ficoml
cmc
repnz
xchg
xor
les
repnz
icebp
push
movsb
and
xchg
fcomps
mov
or
es
mov
push
xlat
pop
xchg
iret
mov
xchg
repnz
jbe
in
dec
push
or
fsts
divl
daa
adc
pop
pop
into
pop
and
sarb
adc
mov
in
xor
or
lahf
or
movsl
dec
bound
hlt
jmp
int3
adc
loopne
mov
cmc
adc
gs
arpl
loopne
into
mov
add
mov
ficompl
pushf
cmp
mov
sbb
adc
pop
push
xchg
fstp
or
popf
add
es
mov
ffreep
push
cmp
mov
popf
dec
ljmp
ds
and
in
sub
pop
js
cmp
lock
pop
lcall
lods
sub
aas
xor
jb
xchg
mov
fimull
repnz
and
jmp
sarl
decb
sub
or
jp
pushf
call
push
rolb
test
dec
pop
mov
and
and
mov
stc
jns
and
je
cmp
clc
mov
dec
int3
xor
imul
or
test
cld
sbb
aaa
push
cltd
xchg
hlt
pop
push
decb
sub
cwtl
jge
add
test
rol
push
mov
leave
xor
clc
sbb
inc
add
push
xor
repnz
clc
mov
jle
lahf
jbe
shrl
cmp
dec
pop
mov
sub
push
adc
pop
cltd
ja
scas
sub
push
test
nop
add
mov
inc
or
xor
cmp
add
pop
or
insl
and
ss
mulb
repnz
js
js
int3
outsb
push
int
loopne
insl
aam
push
stc
into
out
shl
pop
shrb
adc
lea
rcll
and
add
cwtl
mov
or
pop
push
test
mov
mov
sub
lcall
sbb
mov
push
and
mov
adc
cmc
and
loope
mov
rcr
ja
jnp
call
inc
aas
enter
in
nop
pop
push
pusha
jb
and
xchg
orb
jg
cmp
adc
push
orb
push
stos
popa
push
xor
aad
jge
jns
sub
add
addr16
cltd
push
lods
pop
subl
imul
loop
pop
push
jmp
xchg
decb
pop
mov
flds
mov
movsl
imul
push
mov
mov
and
dec
mov
cmp
and
and
aaa
mov
jbe
fwait
xor
fs
icebp
pop
push
lahf
daa
loop
sbb
lahf
lods
jns
xchg
jle
testb
ja
dec
sub
cmc
sub
cmp
test
cltd
test
push
jecxz
daa
sub
pop
out
sar
test
enter
pop
aam
inc
bound
sub
aam
dec
movsb
je
lahf
xor
cmc
movsb
in
push
pop
sbb
dec
cmpsb
xchg
push
jge
add
iret
sbbl
pop
pop
iret
jg
popa
lods
dec
stos
lea
loop
in
out
sub
pop
jns
pushf
sub
mov
mov
and
mov
sar
outsb
xor
jo
cmp
rcll
roll
push
in
imul
push
int
test
rorl
je
sbb
rorb
stc
xchg
out
out
push
and
addr16
ds
mov
mov
or
mov
sbbl
dec
push
mov
rcl
pop
dec
or
cmp
push
mov
in
stos
jmp
lcall
and
sbb
stos
mov
adc
sbb
push
mov
stos
xchg
inc
cmpsl
fldenv
std
addr16
aaa
or
mov
dec
rcrb
push
lds
mov
lds
movsb
jb
inc
sbb
sub
outsl
or
dec
notl
shrb
or
cmp
in
xor
push
into
xchg
lds
pop
ret
test
daa
and
adc
rcrb
lret
jmp
fildl
jo
fidivs
mov
fstpt
add
push
dec
dec
js
push
mov
add
dec
cs
mov
sub
fucomi
pop
pop
out
aas
cmc
dec
cmp
bsr
xchg
out
out
xchg
ror
add
je
mov
push
sbb
ds
pop
das
xacquire
or
jb
mov
mov
jl
cmpsl
rclb
stos
and
jp
dec
js
pop
out
or
shl
ja
test
jnp
scas
push
data16
mov
arpl
mov
dec
pop
mov
mov
mov
sbb
adc
pusha
fbld
sub
fsub
mov
imul
jns
stos
daa
jns
into
daa
or
imul
cmpsb
push
ljmp
mov
scas
or
pop
sahf
push
out
outsl
add
fs
or
mov
push
mov
xlat
js
jnp
or
push
jmp
sbb
mov
jnp
pop
cmp
jae
push
dec
shr
scas
shrl
mov
cltd
jae
jo
sbbb
pop
out
add
std
xor
adc
sub
add
dec
add
lret
inc
and
cmp
ss
test
xchg
enter
icebp
xchg
notb
mov
scas
fsubrs
cwtl
mov
cli
lds
mov
mov
mov
mov
xchg
push
jg
test
subl
sub
and
add
cltd
add
and
dec
cltd
or
repz
jno
fadds
out
jle
mov
sbb
pop
jp
add
lcall
pop
ss
outsb
cmp
stos
mov
jnp
sub
push
mov
mov
pop
testl
popa
test
push
mov
fcoml
mov
ja
aas
jp
sub
test
rolb
and
in
add
cmp
dec
xor
push
fimull
jb
bound
ljmp
dec
add
and
out
push
jp
mov
nop
adc
adc
dec
fistpll
mov
mov
insb
sub
xchg
inc
dec
push
movsb
sub
into
shlb
ja
push
and
fdivr
daa
std
lea
repnz
int3
xchg
jns
out
mov
pusha
sbbl
push
sahf
daa
dec
pop
sbb
sbb
ljmp
mov
jle
sti
mov
out
cltd
adcl
repnz
cmpsl
insb
je
and
cwtl
stos
into
mov
push
jle
test
mov
outsb
jle
xchg
push
cmp
movsb
add
aad
test
imull
jnp
retw
dec
ds
xchg
sub
xor
sti
cs
inc
aad
mov
cmp
call
add
pop
ss
xor
fistpll
sub
mov
popf
pop
push
pop
add
and
insl
idivl
sbb
xchg
shl
sbb
xor
xor
lret
inc
mull
icebp
jno
push
mov
jns
fdivrs
int
or
or
jecxz
popf
repz
mov
pushf
xchg
lret
data16
push
outsb
shll
imul
xchg
xchg
iret
sbb
mov
cmc
pop
jge
mov
or
and
and
dec
aas
fsubrp
iret
adc
insb
adc
sub
js
icebp
xor
or
mov
jg
mov
int3
push
xchg
in
inc
push
mov
ja
cs
test
pop
mov
mov
in
jb
call
jp
cmpsb
loop
pop
neg
or
into
and
or
mov
mov
push
push
xor
sub
mov
xchg
xlat
dec
or
call
inc
incl
addl
push
mov
sub
sbb
pop
sub
shll
sbb
shrw
popf
xorl
divl
addr16
dec
stc
rcr
inc
mov
cs
test
mov
ja
and
sti
push
mov
stc
jecxz
lods
clc
jmp
fs
aam
xor
in
inc
xchg
xor
cmp
dec
sub
jbe,pt
sti
push
lock
add
pop
push
adc
es
push
jle
jnp
mov
dec
rorl
jb
pop
mov
pop
cmp
call
orb
add
jno
cmp
cmpsb
xor
stos
cld
xchg
les
jne
loope
cmp
jecxz
jp
pushf
pop
es
call
pop
jl
or
fisubs
inc
xchg
mov
sub
out
add
cmpsl
mov
sbb
xchg
push
out
xlat
fisubrl
les
xor
cwtl
fs
mov
cmp
fwait
inc
xor
ss
mov
out
inc
lock
push
xchg
cmp
outsb
adc
xor
int
push
mov
xchg
adc
cmp
cmc
cmc
andb
push
filds
out
lret
sahf
sub
jne
xlat
sub
inc
mov
mov
cmpb
adc
inc
cmpsl
mov
jmp
stc
fldlg2
jb
std
mov
rorl
ficoms
and
rorl
mov
mov
cmpps
imul
imul
shrb
cmp
xor
pusha
insl
test
popf
sub
adc
xchg
adc
addl
mov
cltd
mov
jg
push
push
aas
xchg
cltd
mov
fwait
dec
jo
mov
adc
data16
shrl
adc
gs
jmp
in
stos
fsubrs
push
sub
pop
lock
push
push
jle
cmp
test
pop
daa
or
dec
or
loop
dec
mov
pop
xchg
sub
scas
or
inc
mov
insl
hlt
jl
pushf
inc
movsb
repnz
repz
and
aaa
hlt
pop
rclb
mov
cmc
push
mov
inc
jbe
mov
stos
sti
movsb
ja
enter
sbb
mov
ret
add
cwtl
and
add
pop
arpl
jnp
fcoml
fimull
xor
jge
mov
es
sub
cmpsb
lods
mov
mov
add
push
inc
jo
mov
insl
out
cmp
loopne
and
pop
mov
cli
or
scas
pop
mov
jnp
pushf
cmpl
dec
jp
or
or
sar
xor
shl
adc
rolb
test
adc
fdivs
addr16
adc
notl
push
push
mov
push
lea
test
adc
push
insl
pop
xchg
jg
fldl
shrb
push
pop
sub
les
inc
fnstcw
outsl
push
bnd
cs
fidivs
lahf
mov
mov
gs
adc
xchg
cmc
cmpsb
aam
imul
pop
adc
xchg
inc
or
rcr
insb
inc
enter
int
ljmp
cli
ret
mov
push
add
imul
lods
pop
push
pop
and
xchg
pop
push
cmp
pushf
pop
iret
pop
test
fcom
adc
push
sub
pop
clc
je
orb
cmp
add
into
cmp
add
jo
push
mov
ljmp
pop
inc
mov
in
inc
inc
pop
adc
cld
sbbb
outsb
inc
clc
ror
jae
inc
inc
xchg
adc
push
mov
aad
dec
jne
loope
sbb
fwait
mov
hlt
aaa
push
dec
mov
test
push
fistps
jbe
aam
test
nop
mov
ja
ficomps
in
scas
inc
adc
inc
mov
cwtl
add
dec
mov
xchg
push
xchg
pop
xor
adc
fadd
inc
fsubs
dec
sub
loopne
cmp
insb
data16
mov
fwait
inc
adc
pop
lock
cmpsl
shll
cmpsb
call
fidivrs
mov
xchg
xlat
jp
int3
adc
cmc
call
adc
adc
movl
or
and
jne
in
enter
mov
jmp
data16
add
or
push
pop
push
and
enter
sub
outsl
rcrb
fmulp
xchg
jbe
lods
xchg
addb
std
mov
cmpsb
and
dec
mov
push
lret
mov
outsl
cmp
fisttps
pusha
movb
fcompl
xchg
push
pop
xchg
pop
shlb
xor
and
push
ud2
mov
andl
sub
adcb
into
dec
dec
adc
incb
cmp
mov
sbb
mov
aad
iret
sahf
arpl
push
shlb
testb
pop
sub
into
pop
cwtl
xor
addr16
int
xchg
dec
xchg
or
push
sub
jb
xchg
and
test
sbb
jp
test
addr16
add
test
aad
pop
cmc
out
add
jns
sbb
out
mov
sbb
setl
iret
shrl
icebp
xchg
mov
cmp
dec
repz
xchg
in
and
mov
fcoms
fs
adc
movb
mov
scas
lods
imul
aas
aad
xor
nop
outsl
mov
dec
aaa
insb
mov
test
divb
add
icebp
push
scas
loopne
adc
mov
xchg
fcmovnb
mov
imul
jnp
js
push
loop
jnp
out
addl
loope
icebp
cmp
mov
jecxz
je
lret
sub
fneni(8087
jo
pop
inc
jns
add
pusha
rcrl
adc
movsb
sub
sbb
mov
mov
or
pop
jmp
mov
cld
sub
cs
out
arpl
adc
ret
scas
in
pop
jge
mov
pop
pop
cld
push
xor
inc
lds
ficoml
or
jecxz
imul
ja
popf
enter
jae
sub
push
ds
sti
cmpb
std
and
xor
fcompl
inc
mov
add
sahf
push
jno
aad
xchg
in
out
dec
in
test
scas
and
cmp
pusha
push
movsl
scas
out
mov
cmc
test
xor
jo
adc
xchg
push
xchg
loopne
les
aas
fs
stc
dec
inc
inc
fsubrs
cltd
inc
cmp
mov
outsl
and
pop
aam
push
push
add
mov
or
dec
add
cmpsl
aad
cmp
scas
and
push
push
sbb
push
es
movsl
les
mov
nop
fs
inc
aaa
mov
cwtl
xchg
mov
xchg
loope
xchg
adc
add
mov
ret
jecxz
mov
out
or
adc
adc
cmp
lahf
inc
hlt
pop
inc
xorb
xchg
mov
pop
add
lahf
add
popa
fistl
outsl
mov
adc
fstl
mov
push
jmp
in
push
adc
std
fsubl
push
test
test
jmp
shlb
xchg
mov
daa
loope
fnsave
scas
inc
xchg
je
sub
mov
movsb
scas
jecxz
pusha
movsl
insb
lret
dec
or
push
push
fstpt
ss
rorl
push
pop
je
xor
fdivs
mov
rolb
or
xor
lods
imul
pushf
sbbb
call
sub
adc
inc
les
je
push
sbb
loopne
pop
xchg
or
mov
xor
fcomip
pop
push
inc
stc
movsl
test
lods
pusha
cmp
and
into
adc
lret
in
cs
dec
add
out
mov
adc
mov
nop
jae
cmp
loopne
or
pop
sbb
notl
sub
mov
add
inc
lahf
jmp
jo
cmp
stos
fimull
movsb
adcb
ss
cld
push
sub
test
and
push
inc
rcrb
pop
inc
in
je
push
in
shl
push
movb
idivb
pop
test
jmp
xorb
repnz
mov
add
fwait
mov
jae
cmp
loop
cmp
outsb
cs
adc
adc
xchg
pop
outsb
jbe
nop
fucomi
movsb
mov
or
dec
js
aam
dec
int
inc
sbb
rorl
push
push
and
xchg
sub
xchg
outsb
rcrl
and
xchg
xor
adc
js
out
push
rdrand
shl
data16
pusha
sbb
test
std
cmp
insb
inc
push
mov
test
inc
std
rorl
jle
lcall
sub
sub
mov
cwtl
lret
and
imul
imul
test
icebp
cwtl
ret
clc
fisttps
xchg
test
loop
jl
jne
jmp
gs
aad
dec
sub
les
xchg
cmp
test
fimuls
xchg
pop
imul
jecxz
mov
jno
pop
add
ror
fsubl
pop
sti
sahf
cmp
bound
and
icebp
in
push
out
inc
daa
or
push
orb
push
push
stos
inc
fsubrl
xlat
dec
xorl
adc
dec
sub
add
mov
mov
or
mov
ret
jb
jne
sbb
out
mov
push
and
inc
xchg
stos
in
mov
push
cmp
push
fimuls
push
es
neg
xchg
popf
hlt
loop
cld
xchg
mov
inc
js
cmp
or
cmp
fucomip
adc
dec
jno
lahf
and
aas
out
and
cmp
jp
or
mov
repz
mov
xor
add
or
push
jb
test
push
dec
dec
push
outsl
mov
adc
dec
mov
lods
jbe
push
rcrl
int
fdivr
xor
mov
sbb
outsb
pusha
pop
pop
dec
inc
mov
lcall
push
lcall
adc
cmp
lret
xchg
push
mov
shrb
xchg
cmp
dec
mov
pop
popf
xchg
and
and
mov
filds
mov
cmp
inc
cmp
xchg
enter
mov
fs
pop
sbb
adc
jno
mov
in
or
inc
mov
jns
mov
fnstsw
pop
pop
xchg
div
jnp
dec
bound
inc
mov
inc
in
inc
cmpsb
mov
or
ss
push
push
and
aad
lock
or
lock
sub
or
movsb
sub
mov
dec
and
push
mov
cmp
xchg
push
les
mov
push
in
mov
mov
xor
jnp
gs
sub
sub
sbbb
jl
push
addr16
and
xor
add
xor
and
scas
test
jle
mov
jmp
inc
push
sbb
sarl
aas
and
cmp
hlt
lds
stc
push
cmp
lea
aas
scas
pop
lret
int
std
ret
xchg
inc
mov
ret
aad
dec
jnp
mov
adc
fcmove
jb
jge
sarb
imul
sub
lcall
push
dec
sahf
mov
mov
inc
aam
mov
lods
adc
push
daa
in
fistpl
js
mov
cmp
je
popf
clc
sub
dec
and
loope
insl
sbb
mov
movsb
lock
dec
jmp
leave
jmp
stc
or
pop
push
mov
ret
pusha
out
or
xchg
test
sar
sub
mov
add
jbe
xchg
in
ja
dec
out
cltd
sub
lcall
push
mov
cmc
xchg
xor
jge
or
mov
cli
scas
cmp
cmp
sub
jae
outsb
or
std
cltd
adc
xchg
sar
xor
loope
mov
mov
lahf
roll
ret
xchg
add
pop
test
xchg
mov
mov
jnp
push
leave
leave
ret
or
cmpsl
mov
rorl
shl
pop
stos
cltd
test
imul
or
pop
cmp
xor
rolb
enter
pop
xor
popf
mov
add
je
xorb
fcmovne
mov
xchg
mov
pop
mov
add
sti
push
mov
mov
pop
mov
fisttpl
sub
movsb
leave
or
and
out
xchg
fsubrs
fldenv
jle
int
scas
or
out
sbb
push
test
lods
lcall
ja
sbb
jg
dec
rcr
mov
mov
xchg
jb
negb
dec
xchg
in
cli
out
pop
in
in
arpl
lret
xor
fadd
out
add
xchg
inc
mov
jl
adc
imul
ret
lahf
jmp
ret
jae
adc
in
add
repz
xor
push
or
mov
fsubrp
in
ret
mov
mov
mov
and
imul
int
lods
sub
and
cmp
cmp
pusha
movsb
shrl
incl
mov
ret
xchg
jno
jno
hlt
test
stos
aaa
out
xchg
pop
xor
xchg
out
stos
pop
dec
push
nop
xor
inc
mov
xor
lcall
or
cltd
pushf
je
loopne
icebp
pop
ljmp
mov
sti
ret
sbb
lahf
js
inc
mov
xchg
mov
xor
xor
inc
push
je
sub
out
pop
mov
xchg
mov
shlb
mov
or
mov
adc
std
fdivrs
inc
cld
js
lods
cld
ret
stos
jge
fcomps
test
adc
xchg
test
call
jmp
leave
cmpsb
je
mov
jmp
push
mov
dec
push
das
shl
inc
jne
pop
shl
mov
push
outsl
pop
cmp
sub
test
push
lcall
mov
jecxz
data16
ss
xchg
cmp
or
dec
imul
ficoms
add
adc
aas
sbb
fdivrs
fstpt
lea
cmp
cmpsb
sbb
mov
aam
jne
mov
mov
subl
js
push
fistps
and
jne
mov
sbb
pop
cltd
jb
xchg
sub
sarb
jle
ljmp
adc
gs
hlt
lahf
bound
dec
jmp
notb
or
jnp
xchg
push
push
jg
aam
ficompl
inc
out
pop
and
outsb
test
xchg
and
popf
lods
add
pop
and
mov
lret
adc
add
lret
lods
mov
in
dec
mov
mov
cs
inc
sub
mov
movsb
mov
shl
outsb
and
cmpsl
push
imul
jl
ja
cmpsl
cli
and
mov
clc
inc
cmpsl
sbb
fisubs
jg
inc
gs
fmul
pop
sbb
repnz
add
fstps
cmp
aam
push
leave
lret
push
add
push
stos
mov
js
jo
pop
pop
fcmovu
mov
dec
xor
arpl
dec
jae
jp
sub
pop
fimull
popa
jb
add
dec
not
or
xlat
jmp
orl
stos
jo
in
outsl
xorl
add
lods
sub
inc
mov
jmp
push
mov
int
add
fcos
mov
inc
lcall
out
or
in
dec
pushf
es
loope
add
flds
add
sbbl
jnp
gs
xlat
sarl
leave
xchg
xor
push
jle
hlt
gs
ret
lahf
data16
dec
jae
js
mov
adc
mov
lcall
inc
adc
aaa
cmp
mov
push
xlat
dec
sub
jle
mov
or
in
mov
lahf
repz
sub
scas
mov
loope
popf
mov
movsb
dec
sub
jge
movq
dec
push
lcall
jmp
push
cmpsb
aas
into
sbb
push
mov
xor
xor
mov
nop
add
pushf
repz
les
dec
mov
adc
sub
repnz
jns
jae
es
sbb
aaa
dec
cmpsl
cwtl
dec
push
outsb
pop
insl
jge
cli
add
mov
addr16
lahf
xchg
push
lahf
mov
cli
xlat
and
xor
movsl
or
jbe
add
inc
cli
or
loop
js
push
cmpsb
ror
stc
cmc
movsb
test
add
shll
inc
dec
add
imulb
pop
sub
and
push
jl
ja
pop
nop
mov
insl
dec
je
adc
out
repnz
adc
push
and
mov
adc
push
sbb
subl
out
aad
out
push
lock
dec
xor
and
mov
addr16
xor
and
cmc
jmp
test
add
arpl
addb
cmp
add
rcrb
push
aas
push
pop
loopne
rcll
call
inc
mov
xchg
int
nop
and
call
xor
ljmp
outsl
iret
in
and
sbb
xor
add
inc
lret
jle
xor
test
cmp
cmp
aam
xor
mov
cmp
pop
lods
lahf
int3
call
or
int
push
sarb
int3
and
sahf
or
repz
pop
fistps
jmp
push
iret
mov
into
enter
int3
inc
nop
xor
inc
adc
add
or
lock
test
fwait
aad
adc
mov
xor
fwait
call
cmp
ret
fld
loop
xchg
insb
out
or
push
sahf
add
inc
ja
cld
std
lcall
and
mov
inc
iret
cmp
test
mov
cld
stos
and
jo
test
xchg
mov
addl
movsl
add
push
sbb
mov
cmp
icebp
sbb
inc
push
jnp
sbb
mov
mov
ja
pop
fs
add
inc
mov
in
fistpl
sub
xchg
pop
cmpsb
fwait
add
add
xchg
int3
lcall
addr16
test
imul
xchg
inc
cld
test
xchg
icebp
test
shll
mov
notl
ja
sbb
and
setg
mov
cmp
cld
sub
fucom
loop
adc
pop
lods
xchg
cltd
push
xor
and
mov
mov
push
hlt
push
in
pop
call
mov
dec
addr16
adc
icebp
das
jo
dec
into
jmp
jg
adc
icebp
out
shlb
xor
fadds
mov
test
clc
pop
fldl
mov
aad
dec
mov
jb
test
cs
es
xchg
cli
out
jp
sbb
xchg
test
xchg
mov
loopne
xchg
mov
js
adcl
push
jp
popa
mov
xchg
sub
mov
insb
pop
cld
jbe
ljmp
jp
icebp
pop
xlat
fisttps
push
xchg
sub
xchg
fidivrs
adcb
rolb
sub
stos
jb
clc
cmp
pop
les
mov
pop
and
lds
lret
cmp
push
gs
test
scas
mov
or
jo
stos
xchg
sbb
push
aaa
iret
xchg
ror
pushf
lret
xor
fistpl
lods
dec
or
es
mov
movsb
dec
jo
xchg
pmaxub
loopne
aad
mov
add
push
adcl
movsb
pop
loope
fcoms
cmp
sbb
jle
push
lock
adc
push
jge
loope
loopne
out
sbb
popa
dec
cmp
mov
imul
sbb
pop
dec
xor
mov
pop
adc
shl
or
stc
gs
test
dec
sahf
addr16
add
mov
sbb
data16
fists
nop
loope
push
loop
movsb
jae
add
loopne
je
inc
mov
test
adc
pop
push
jne
sub
les
mov
jb
jp
cmp
sub
mov
mov
cmp
sub
call
dec
adc
push
pushf
scas
scas
fstl
jns
sub
mov
movsl
xorl
add
cmc
and
add
lret
inc
sarb
or
adc
lret
outsl
mov
iret
adc
push
jp
lock
fcoms
xchg
sub
pop
in
dec
shl
das
imul
xor
mov
mov
xor
dec
xchg
test
in
testl
xchg
arpl
pop
dec
test
ss
mov
cmp
les
adc
insb
mov
sub
sub
cs
dec
bound
enter
inc
lea
shrl
or
lcall
mov
shlb
sarb
mov
push
and
adc
imul
cmp
add
adc
push
fisubrl
mov
int
lret
pop
mov
xlat
sbb
lret
xchg
sub
sub
cwtl
aad
in
and
pop
xchg
add
add
out
fstl
cmpsl
add
push
mov
cmp
outsl
sbb
jge
and
arpl
mov
xor
in
aam
and
popa
or
insb
xor
sbb
push
pop
jae
pop
rcll
pop
push
rcrb
imul
and
stc
aad
out
andb
xor
lahf
pop
and
sbb
mov
xchg
aaa
bound
adc
dec
mov
mov
fucomi
mov
sbb
push
add
test
cmp
adc
jnp
and
outsb
xchg
xchg
fwait
add
jge
mov
jmp
add
jae
scas
sbb
cmp
pop
xchg
jg
or
push
jle
xor
loopne
sbb
cmp
mov
subb
jb
je
arpl
aad
or
pushf
mov
push
out
cmpsb
repz
push
add
nop
fstpt
xor
test
and
ss
fcomi
mov
nop
push
xlat
outsb
push
inc
or
lods
ret
fadds
mov
inc
shr
pop
sub
scas
lds
sbb
inc
jb
repnz
dec
jae
stos
sti
repnz
push
sbb
push
call
inc
pop
sub
ss
mov
and
fsubp
fld
pop
lea
sahf
add
outsl
mov
xchg
out
or
xor
cmpsb
pop
bound
cmp
test
in
pop
jbe
int3
mov
gs
push
lock
adc
pop
js
mov
cmp
push
xchg
add
mov
rcl
inc
lds
jo
lock
pushf
adc
mov
xchg
bnd
dec
and
or
addr16
fucomp
mov
and
test
inc
xchg
mov
mov
movsb
arpl
gs
rcrb
sbb
xchg
pop
dec
rolb
sbb
sub
int
push
iret
xor
xchg
xor
push
adc
sub
mov
lea
jb
dec
roll
lods
jae
mov
arpl
negb
mov
int3
bnd
sti
ret
data16
mov
mov
testl
pop
mov
cmp
cltd
test
mov
mov
lock
fiaddl
cmp
xor
lds
adc
nop
cmpsl
ret
xchg
pop
push
push
add
nop
movsb
pop
daa
lock
int3
xchg
daa
push
pusha
pop
clc
leave
cmp
ss
dec
push
ret
sbb
push
or
sub
jle
mov
call
dec
jbe
jae
pop
jb
into
call
sbb
inc
jge
sarb
xchg
mov
adc
outsl
or
mov
je
js
adc
pop
xchg
inc
mov
pop
sahf
pop
lock
and
jno
mov
cmp
or
mulb
push
andb
push
jae
ds
adc
sub
fmuls
push
fstps
mov
mov
fcomps
xchg
cmp
jmp
jne
adc
mov
fnstsw
out
sub
xchg
xlat
sbb
mov
test
stc
mov
push
pop
shrb
cli
rclb
arpl
mov
xor
out
mov
jl
mov
inc
sbbb
push
xchg
adc
fnstcw
jb
push
mov
pop
push
mov
lods
fsubrl
shrb
cmpsb
scas
xor
xor
insb
pusha
inc
jge
and
ret
xor
mov
in
iret
mov
jmp
and
jnp
pushf
mov
cmpl
rcrl
adc
cmp
dec
push
sbb
mov
jl
lods
lcall
fldz
or
incb
arpl
cmp
aas
stos
mov
andb
and
dec
lcall
aam
scas
lea
psubsb
outsb
xchg
pop
aas
fidivrs
outsb
aaa
fidivrs
pop
addl
dec
jns
stos
sbb
insl
mov
add
mov
sub
dec
inc
sbb
mov
jecxz
ja
jno
mov
adc
or
movsl
inc
or
and
andb
insb
sub
jae
stc
int
iret
out
sbb
in
lods
mov
lods
push
js
ret
cmp
aas
and
adc
loop
mov
sbb
clc
add
adc
mov
push
sbb
pop
xor
loopne
xlat
neg
adc
and
push
xor
cmp
push
jge
inc
cmp
cli
fsubrp
inc
clc
sarl
mov
pushf
jae
xchg
lods
imul
je
adc
nop
nop
mul
mov
stc
ljmp
sub
sbb
enter
idivb
mov
cld
sub
adc
push
popf
adc
mov
sti
lret
bound
imul
outsl
lret
fisttps
cmp
pop
jo
or
pop
cli
sub
or
test
jbe
movsb
in
jo
sahf
incl
cld
add
mov
inc
lock
adc
sbb
fisubl
imul
jns
insb
lcall
jecxz
cld
int3
loopne
pop
add
inc
xchg
pop
add
pop
jne
ds
jl
jmp
dec
adc
neg
cmpsl
add
cwtl
pop
pop
dec
js
jno
lret
cmc
dec
pusha
and
inc
dec
call
loope
jb
in
lret
mov
cmp
inc
or
jne
jle
loop
loop
mov
adc
dec
jae
mov
icebp
dec
mov
nop
mov
lds
scas
xor
mov
popf
push
dec
aad
scas
or
out
lahf
cmp
popf
ja
and
leave
dec
mov
iret
push
jecxz
mov
dec
xchg
adc
imul
lret
or
and
into
add
mov
nop
fsubr
pop
jo
jmp
in
inc
ja
inc
test
fcmove
imul
lods
inc
fsts
ss
mov
orl
sub
add
fldl
jnp
mov
and
call
movsl
inc
pop
pop
mov
test
icebp
arpl
xlat
fldl2t
jecxz
xor
aam
jnp
cmp
xchg
mov
subb
sti
ljmp
lock
xchg
dec
outsl
jo
jge
sbb
mov
imul
std
lcall
lcall
push
mov
mov
icebp
add
rol
imul
sbb
out
pop
decl
out
mul
sbb
ja
pop
mov
ja
test
pop
adc
std
and
sahf
shrb
mov
test
jecxz
jp
mov
add
sbb
jle
in
mov
push
push
es
popa
push
in
in
xor
adc
mov
sub
pushf
mov
jl
in
pop
xor
std
push
int3
pop
add
or
mov
add
js
pop
push
sbb
add
scas
or
mov
add
add
fsubrs
cmp
cmpsb
pop
adc
mov
pop
add
out
insb
add
jge
sub
bnd
loope
cltd
mov
std
push
insl
jbe
push
sbb
jl
rolb
sbb
xchg
mov
popa
sarl
xchg
ret
dec
jecxz
stos
sbb
inc
mov
mov
les
rcll
clc
into
mov
jno
ss
andb
push
jae
fidivl
pop
add
loopne
orw
dec
add
jecxz
dec
cmpsl
lahf
jo
adc
sti
lahf
out
push
sub
test
mov
fldl
jne
int
sbbb
stos
cmp
jmp
cwtl
dec
lds
movsb
int3
hlt
xchg
test
pop
dec
jmp
insl
push
out
movsb
insl
push
movsl
xchg
sbb
dec
xor
push
ds
dec
xlat
adc
pop
in
inc
xchg
test
push
repz
mov
xor
sbb
insl
push
stos
push
pop
add
pop
lret
sbb
mov
inc
add
in
push
jmp
fsubrp
sahf
dec
cmp
imul
sarb
data16
cli
pop
cmp
lahf
pop
cmp
mov
loope
test
jo
sbb
das
jg
inc
cwtl
inc
or
sub
popf
gs
stos
pop
loop
adc
notl
sahf
pop
out
mov
fdivl
pop
mov
loope
push
pop
gs
dec
paddsb
mov
mov
or
imul
xchg
xchg
cmp
sbb
in
add
cmpsl
stc
adc
test
cltd
jne
iret
icebp
shrl
cmp
out
or
lahf
mov
dec
test
add
aam
mov
jns
jb
data16
lahf
stc
repz
pop
mov
adc
inc
push
xor
daa
xor
mov
lods
mov
adc
adc
data16
aam
pusha
ljmp
in
cmc
sub
mov
pop
out
aad
adc
ret
je
loop
in
out
data16
xchg
sarb
notb
out
int3
and
loopne
cli
or
adc
mov
xlat
add
jecxz
mov
pop
xchg
cmpsb
push
insb
das
xor
sbb
in
mov
lahf
push
push
leave
imull
jg
test
mov
scas
adc
dec
sub
adc
sub
adc
out
dec
arpl
cli
fs
sub
and
rclb
arpl
dec
mov
mov
cld
add
mov
call
xchg
add
test
cmp
mov
cmp
fs
into
aaa
xor
dec
push
or
cmp
xor
pop
lret
jmp
mov
ss
in
andb
jp
adc
or
jp
nop
push
xor
test
lahf
xor
loop
scas
jecxz
bound
outsb
in
dec
int
imul
stc
shll
addl
in
push
xor
ljmp
lods
lods
mov
fisubl
push
leave
mov
icebp
test
dec
add
dec
adcb
imul
insb
jno
sarl
mov
mov
inc
or
stos
int3
xor
lret
loopne
mov
ds
orl
jns
into
push
std
rcrb
imul
dec
jnp
outsb
andb
aad
sub
fs
inc
dec
ret
adc
push
add
ret
fs
fisttpl
pusha
call
out
shll
sar
mul
push
pop
popa
and
cld
jb
inc
cmp
testb
mov
pop
mov
inc
pop
ja
jo
adc
popa
loop
dec
inc
in
jecxz
push
inc
cmc
cmp
es
push
pop
sbb
sahf
xlat
xor
fwait
push
cmp
pop
movsb
sbb
jle
mov
mov
scas
icebp
xor
andb
dec
push
imul
in
push
addr16
testb
push
mov
inc
mov
cmp
mov
cmp
jecxz
push
and
sahf
sub
adc
mov
cmp
std
push
xchg
jnp
pop
xchg
sub
add
outsb
rclb
cwtl
imul
sbb
inc
addr16
in
cmpb
dec
add
popf
sub
jae
in
ficomps
inc
in
mov
daa
arpl
ja
outsl
lret
dec
lcall
mov
lcall
data16
dec
xchg
add
out
out
lods
push
push
leave
lret
xor
aas
pushf
jp
test
out
xchg
dec
xchg
cmp
ficoml
aas
iret
mov
shlb
fiaddl
cwtl
daa
pop
stos
xchg
test
cmp
or
or
or
in
xor
xor
fwait
jnp
dec
or
push
je
test
jl
sub
dec
inc
mov
mov
shlb
nop
sub
jge
lret
stos
fs
movsb
jae
les
fs
fwait
outsb
orb
test
and
jp
xchg
inc
mov
jbe
je
cmc
xlat
jb
lret
stos
addr16
xor
ret
sbb
cmp
loopne
repz
xor
pop
xchg
in
dec
inc
fdivrl
cmp
push
mov
popa
mov
mov
sub
inc
pop
stos
or
or
fwait
popa
mov
cli
aas
jg
and
adc
sbb
loopne
mov
data16
dec
dec
mov
mov
shll
pop
sub
std
push
ds
lock
into
das
sbb
or
xchg
mov
je
insl
push
add
xchg
andl
test
inc
cltd
jae
jne
push
ljmp
repz
pop
push
ficoms
or
adc
call
push
out
xchg
pop
mov
lret
xchg
cmp
enter
leave
or
sbb
jmp
sbb
push
dec
ret
incb
andl
gs
daa
push
inc
and
repnz
inc
add
inc
out
jnp
push
xor
sbb
fs
sti
lret
orb
lods
and
jnp
jmp
leave
hlt
enter
pop
int
out
fcmovnu
jg
aam
je
out
test
or
loop
jle
int3
mov
mov
bnd
inc
lds
push
sbb
jne
xchg
fs
sub
sti
cmp
push
fs
rclb
inc
cmp
ret
stos
dec
push
mov
mov
mov
push
outsb
inc
enter
inc
arpl
gs
pop
xchg
jo
inc
pop
xor
sub
lods
sbb
and
mov
pop
jg
pop
sbb
push
mov
loop,pt
jns
cmp
leave
cmpb
cmp
scas
sub
push
popa
pop
scas
lods
ret
movsl
push
add
sub
scas
xlat
sti
adc
ljmp
cld
jb
es
in
dec
into
lods
fcomi
repnz
jae
mov
addb
sub
jge
cmp
fstpt
lods
or
sub
loopne
xchg
test
or
jo
inc
push
xor
xor
lcall
sarb
jae
lahf
call
fstpl
fstps
xor
jge
std
push
enter
push
xor
aam
push
xchg
mov
mov
pop
mov
punpcklbw
sub
mov
test
inc
sarl
out
adc
mov
inc
std
xchg
je
cmpsl
push
jg
and
imul
xor
lret
jae
sbb
in
xor
sbb
addl
aad
jns
das
cmp
cwtl
push
xchg
ret
dec
shll
setbe
shrl
mov
mov
push
sub
sbb
test
sub
jmp
scas
inc
repnz
fldcw
add
rorb
lods
fs
addr16
stos
pop
movsb
dec
es
stos
mov
sbb
sbbb
lea
pop
push
push
shlb
mov
imul
jge
bound
xor
in
push
movsb
inc
rcrb
sbb
decb
add
add
sarl
in
mov
inc
cwtl
out
and
sbb
mov
mov
xchg
dec
jle
mov
sarl
sti
dec
push
repz
sub
icebp
jg
mov
sub
and
mov
cld
ret
js
jp
or
loope
out
call
cli
in
pop
or
mov
jecxz
test
jmp
pop
movsl
scas
mov
add
lahf
mov
dec
and
test
jl
imul
shll
xor
test
cmpsb
orb
loop
int3
sbb
test
pop
push
jae
cmp
nop
inc
pop
cli
rol
or
call
stc
sbb
xor
and
pop
jno
adc
inc
rorl
rorb
inc
or
dec
hlt
push
mov
push
push
dec
push
pop
jg
jecxz
int3
inc
aad
imul
jmp
fldt
or
testb
jg
and
in
flds
mov
or
shrb
and
mov
and
daa
clc
fiaddl
jae
xchg
ljmp
fildl
shll
lods
lods
sbb
pop
sbbb
rol
das
mov
xchg
cmp
dec
into
xchg
sbb
mov
mov
dec
jmp
mov
pop
adc
stos
shrl
popf
clc
mov
out
stos
inc
push
mov
pop
pop
push
mov
mov
mov
mov
imul
shrl
lock
jge
daa
ds
into
xchg
push
out
or
push
pop
cmpsl
stos
dec
rolb
popf
ret
int
cmp
ret
pop
push
fbstp
orb
mov
into
nop
add
int
into
imul
pop
dec
scas
arpl
inc
popf
psubusb
test
adc
push
add
and
mov
and
daa
xchg
test
xchg
pop
scas
shll
in
push
cmc
jns
sbb
mov
fwait
jl
clc
push
xchg
movsl
bnd
add
mov
insl
or
sub
pop
aam
xorb
xor
shr
lahf
arpl
add
sbb
testb
bound
xchg
fisubl
jnp
out
out
or
daa
daa
cmpl
lods
cmp
adc
lds
pop
push
mov
pop
sbb
ret
leave
lock
mov
jnp
imul
mov
ja
outsl
das
inc
add
fdivrl
std
test
pop
sub
daa
insb
mov
dec
jno
icebp
test
fdiv
pop
push
mov
jg
aam
mov
cmp
das
or
add
fcmove
les
leave
and
mov
mov
xor
sub
pop
xor
into
jno
sub
xor
cmp
mov
lods
daa
or
sub
in
fcomi
mov
or
pop
jmp
ret
or
xchg
lea
loopne
mov
out
fstpl
cmpl
xchg
adc
cmc
aam
inc
dec
gs
fstpt
lcall
mov
xchg
lods
jmp
in
ficompl
mov
xor
in
jnp
sub
icebp
js
pushf
imul
and
pusha
das
and
pop
mov
imul
or
push
and
scas
jo
aam
sti
push
sub
push
or
gs
outsb
adc
inc
mov
cmp
inc
mov
ja
push
jl
and
ret
pop
jge
sub
bound
dec
imul
inc
cmc
pop
mov
stos
mov
adc
mul
jl
nop
test
mov
cmc
push
dec
xchg
dec
and
add
or
pop
mov
add
jecxz
ss
jne
hlt
pop
sbbl
pop
xor
or
dec
or
mov
cmp
andb
sbb
mov
loop
lahf
mov
nop
data16
ret
insb
mov
imul
add
enter
dec
sub
ja
xor
orb
insl
lods
ja
adc
shlb
and
mov
lods
adc
mov
jae
pop
fisttpll
in
test
mov
pop
or
fisubs
sbb
push
mov
mov
call
mov
jmp
pop
ret
mov
jl
shl
cmp
pop
or
loopne
push
in
jbe
in
mov
push
mov
mov
cli
in
lds
xchg
xor
mov
mov
imul
cmp
scas
ret
andb
add
mov
movsl
cmpsl
mov
insb
popf
xor
fnstcw
fidivl
mov
sbb
loope
pop
mov
sub
icebp
test
sub
ss
pop
addl
pop
cmc
pop
fstpl
insb
call
fnstenv
into
cmp
push
iret
mov
loopne
add
mov
jae
jle
and
push
js
rolb
mov
jb
aad
push
ss
js
je
cmc
roll
mov
sub
pop
mov
pop
add
das
sub
push
cmp
insl
pop
fidivl
inc
jecxz
add
xchg
mov
fimull
enter
adc
push
push
inc
xchg
sbb
and
or
mov
in
jb
loopne
enter
push
mov
mov
sbb
cmp
inc
cmpsl
mov
sbb
sar
push
xor
std
push
pop
es
adc
gs
pop
sbb
daa
scas
xorl
push
stos
aad
rclb
mov
xchg
into
ds
lea
mov
pop
js
cmp
xlat
loop
push
int
dec
sbb
loop
push
rcrb
int3
and
into
jle
in
ficompl
or
ss
xchg
push
roll
inc
push
stos
push
adc
pop
in
iret
notl
dec
and
add
out
rolb
cmp
lea
mov
imul
std
cli
xchg
jbe
inc
cwtl
jo
xchg
je
sub
add
mov
push
les
or
xchg
xchg
in
xchg
mov
shrl
sarl
add
dec
xchg
sbb
sbb
and
or
outsl
into
pop
fnstenv
push
pop
mov
lock
arpl
or
sbb
inc
jnp
pop
mov
or
mov
sub
or
or
or
fimuls
aas
and
cmp
lods
fs
and
and
and
jo
or
in
insl
inc
adc
jp
cltd
mov
sub
in
sub
ret
std
inc
xor
in
sbb
mov
jnp
dec
xor
mov
push
adc
add
jns
or
push
inc
ret
cmp
push
jae
or
js
lods
push
notb
mulb
pop
dec
mov
mov
fwait
lret
sub
aad
pusha
pop
mov
mov
icebp
cs
outsl
outsb
adc
test
cmpsb
mov
es
dec
mov
and
jp
arpl
aas
fistpl
cmpsl
dec
adc
test
fidivrs
nop
les
xor
push
pop
daa
dec
mov
out
add
mov
les
les
mov
test
xlat
adc
jno
jbe
hlt
les
repz
test
lea
sar
testb
fmuls
lcall
in
xchg
inc
and
mov
jnp
inc
in
js
add
mov
cmpl
mov
pop
jae
sahf
repnz
add
scas
xor
mov
rolb
add
shl
sbbl
shrl
test
ja
gs
ret
lods
stc
cmp
push
xor
popf
cwtl
xlat
cmp
jl
lahf
lods
pop
das
mov
in
dec
call
jl
pop
pop
clc
push
jmp
sti
popf
fwait
in
pop
xor
jns
in
int
cmp
lock
jge
mov
lahf
ret
jmp
repz
inc
cltd
xlat
cwtl
stos
mov
dec
sub
fwait
xor
adc
mov
iret
pop
nop
pop
mov
sti
mov
sub
int
dec
mov
mov
ljmp
mov
dec
ret
inc
out
lcall
ja
lahf
xchg
fsubs
or
outsb
and
daa
push
outsb
xor
loop
xor
pop
out
jp
pop
mov
arpl
loopne
mov
in
jne
pmulhw
into
xchg
mov
dec
xlat
push
js
xchg
mov
insb
sti
sub
pop
inc
lret
test
mov
movsl
iret
or
adc
xchg
ljmp
sti
sbb
sbb
dec
mov
pop
push
pop
push
fs
in
in
xor
cmp
mov
add
cmp
lea
test
mov
jg
stos
mov
jmp
icebp
push
out
dec
call
fisubrs
cmc
push
mov
out
out
fistps
iret
xchg
loope
imul
mov
or
push
aaa
jns
test
mov
push
in
mov
jecxz
and
and
xchg
ja
out
or
push
mov
addb
rolb
lock
mov
push
mov
test
repnz
mov
sbb
and
mov
int3
mov
loopne
mov
push
icebp
mov
mov
mov
orl
insl
movsb
lock
call
cltd
iret
inc
cmp
push
insb
out
mov
cmp
lock
sub
es
ret
push
int
mov
dec
cld
fists
xchg
iret
fidivrs
sbbb
addb
out
xchg
cld
cmp
lret
int3
mov
icebp
mov
stos
sbb
or
jbe
sub
loope
xchg
add
cmpsl
add
xchg
insl
sub
loopne
sub
imul
stc
fsubrl
push
imul
mov
cmp
scas
ds
cmpsb
cmc
mov
mov
dec
sbbl
cwtl
in
ja
shr
lahf
frstor
sbb
sbb
ret
and
insl
ret
sbb
push
xor
sub
xor
mov
cld
xchg
cmpl
xchg
dec
mov
lods
dec
dec
ss
lcall
jno
pop
push
dec
dec
mov
sub
outsl
mov
push
ss
pushl
call
dec
pop
fidivrl
lods
mov
add
ret
adc
sub
push
dec
push
push
into
movsb
inc
sub
mov
mov
push
repz
rcll
xor
mov
mov
insb
ljmp
hlt
pop
cmp
pop
inc
inc
lahf
das
lods
jb
in
push
dec
aam
xor
dec
fldt
sbb
push
cld
ds
jne
adc
mov
test
test
out
popf
pop
popf
in
add
jnp
into
clc
rorl
or
sbbl
sbb
mov
movsb
fisttpll
lret
jnp
cmp
jbe
mov
mov
clc
frstor
mov
jp
out
fst
pop
out
pop
data16
movsl
imul
mov
pop
pop
or
sarb
stos
rcr
xor
mov
or
ret
xor
or
jns
iret
push
rclb
rorb
dec
add
test
sbb
dec
lea
pop
sub
cld
cli
shrb
aad
mov
shr
jno
jle
loop
testb
xchg
inc
jae
sub
push
cltd
mov
sub
pop
pop
dec
ficoml
mov
movsb
flds
and
mov
xor
xor
mov
xchg
jno
mov
mov
insb
subl
pop
jnp
mov
mov
xchg
adc
ret
sbb
popf
shlb
les
jp
xor
or
push
mov
mov
cwtl
fwait
test
enter
addb
enter
push
fstpt
push
mov
and
add
arpl
pop
clc
xchg
push
cltd
xchg
int
movsb
xor
push
je
dec
or
push
fs
pusha
bound
cwtl
lods
xchg
mov
xchg
xchg
sar
ss
es
fstl
cmpsb
sub
mov
sarb
into
js
mov
jge
in
addb
mov
cmp
addb
out
ret
sbb
in
push
inc
out
in
push
xor
ja
dec
loopne
popf
cmp
push
add
cmpsb
lcall
js
in
and
jnp
sar
lods
cld
jmp
mov
sbb
push
ja
in
or
notl
xchg
shrb
in
stos
imul
clc
jp
nop
add
sbb
sub
dec
xchg
adc
divl
cmp
lcall
jg
ss
fistpll
sbb
jle
lds
inc
test
sub
lret
mov
pop
call
ret
outsb
js
arpl
stos
xchg
push
push
mov
in
into
sbb
mov
xor
sbb
shlb
repnz
lahf
xor
nop
jmp
sbb
xor
ret
cmpsb
xchg
lea
ret
add
or
ja
cmp
mov
gs
inc
add
push
sbb
mov
push
or
repz
test
mov
fimuls
cs
xor
lds
loop
xchg
xchg
fldcw
push
or
insl
cmp
mov
or
incb
popl
ds
jns
mov
nop
lods
dec
xchg
cmpsb
fbstp
mov
int
sbb
fldcw
adcb
jae
or
ret
sub
cmp
es
pop
rolb
add
mov
dec
lods
in
das
cmpsl
and
ss
adc
inc
cmp
andl
sub
pop
test
jns
sbb
repnz
sbb
adc
sbb
cwtl
les
push
add
pop
lahf
or
sbb
pop
pop
inc
popf
lods
fwait
push
add
mov
mov
add
sub
mov
arpl
decb
loop
add
pushf
jae
leave
push
dec
out
jno
lret
mov
cmp
pop
je
out
mov
sbb
jmp
sti
lcall
mov
cmp
pop
mov
loope
jecxz
in
mov
insl
into
lret
sti
push
mov
push
andb
jl
xor
lea
add
cmp
push
push
xchg
daa
sub
ret
push
test
cmp
insb
sub
mov
adc
jne
aaa
and
hlt
sub
out
xor
cmpsb
add
mov
sub
xchg
pop
movsb
pop
sub
leave
pop
mov
out
pop
scas
test
call
leave
in
mov
aam
dec
sub
les
push
shlb
imul
leave
pop
jecxz
pop
sub
adc
loope
xchg
test
fstps
xchg
sub
mov
mov
cmp
xchg
shl
inc
out
pop
insb
mov
dec
sbb
rcrb
cld
je
movsl
rcr
jae
xor
adc
rcr
jecxz
xchg
in
stos
hlt
test
mov
xchg
xchg
fwait
jg
mov
repz
pop
nop
and
test
push
icebp
out
adc
lods
mov
cmpsb
jnp
or
mov
xchg
xchg
sub
in
sbb
out
xchg
push
pop
mov
in
xor
out
sub
incb
pop
pushf
add
mov
insb
lea
cmp
in
sbb
outsl
aas
scas
jge
sti
jb
and
sbb
popf
jns
or
push
pop
lahf
push
mov
outsl
xor
xchg
pop
stos
popf
js
outsl
pop
insb
inc
icebp
jge
fldcw
icebp
adc
mov
lods
mov
pop
stc
in
call
mov
dec
sub
mov
shll
fists
cmp
outsb
jne
ror
sub
test
out
add
repnz
sbb
push
lret
and
jp
pop
cmp
adc
push
aas
cmpb
and
and
jmp
lahf
adc
fwait
loope
ret
xor
sub
mov
addb
and
sub
daa
dec
dec
push
mov
or
daa
hlt
mov
jnp
test
shlb
cmpsl
call
aaa
xchg
jne
movsl
les
fbld
cwtl
addr16
xor
adc
insb
sbb
push
jno
in
jbe
icebp
filds
adc
jmp
idivb
out
cmp
iret
std
xchg
mov
popa
jg
pop
fdivs
mov
push
jg
sbb
mov
fimuls
mov
inc
xchg
subb
push
xor
sub
sahf
pop
subl
imul
lea
push
pop
test
or
cmp
in
hlt
add
daa
xchg
jle
test
in
cmpsl
ret
loope
mov
push
cltd
and
push
into
popa
and
mov
int
iret
dec
cltd
adc
loop
inc
movsb
xor
das
xor
stos
inc
call
out
pop
movsl
test
in
aaa
jo
nop
jno
mov
mov
pop
mov
fcompl
xchg
pop
push
imul
mov
divl
inc
inc
bound
andb
push
cmpsb
adc
pop
push
dec
insb
aam
dec
ficoml
jle
mov
les
in
aaa
das
inc
xlat
mov
dec
filds
jp
test
mov
adc
dec
add
mov
jecxz
popf
mov
dec
test
cmp
hlt
adc
mov
adc
fdivl
inc
mov
cmp
xchg
in
dec
fmull
inc
test
sub
mov
les
les
pop
inc
jno
xor
xchg
mov
and
cltd
adc
mov
inc
insb
sub
mov
sti
sub
call
adc
and
je
shll
inc
xor
loopne
jo
imull
push
pop
xchg
sbb
enter
inc
jle
jp
mov
pop
pop
data16
enter
je
pop
xor
add
inc
mov
pop
and
ja
sub
insb
sub
inc
push
jno
imull
mov
movsl
xchg
pop
mov
xor
jp
cwtl
pop
sbb
sti
out
sbb
mov
mov
jb
ja
int3
call
dec
sbb
and
in
mov
sub
daa
dec
adc
pop
adc
sbb
leave
jnp
jb
and
stos
jmp
sub
aad
cmp
or
inc
in
sbb
inc
mov
mov
sub
and
cli
adc
pop
or
xor
cld
leave
nop
sbb
mov
es
adc
icebp
dec
loopne
fiadds
mov
dec
popa
inc
cmp
inc
cmp
cmp
mov
lods
mov
adc
int
push
jae
lea
rol
push
mov
pop
nop
popa
push
pop
fsubr
inc
in
inc
data16
dec
inc
cmp
fsubrp
hlt
jno,pn
pop
adc
loop
sub
xor
jb
das
pop
xchg
dec
pop
repnz
test
sbb
lds
leave
mov
je
ror
fucom
inc
mov
and
cs
push
and
xor
fnsave
notb
lods
sti
loop
or
push
arpl
test
mov
in
fbld
loopne
outsl
mov
stos
lret
mov
or
hlt
sbb
int3
cmp
xchg
inc
and
add
mov
lret
ret
mov
enter
gs
les
sti
ss
cmp
ja
jnp
mov
pop
push
mov
cwtl
ds
and
adc
dec
hlt
shrb
inc
cld
xchg
push
inc
lret
ror
push
test
sub
aam
inc
mov
in
or
call
mov
divl
inc
and
xor
inc
xchg
ja
in
mov
mov
sbb
mov
adc
jo
fistl
cmp
aas
adc
cmpsb
mov
fiadds
outsl
bnd
add
adc
insl
sti
mov
popa
cld
dec
leave
aaa
adc
cwtl
cmpsb
pop
jno
inc
out
cmp
push
mov
ficoms
lods
mov
xor
mov
cmp
movsb
sti
fnsave
dec
lock
sbb
testl
in
repz
inc
jle
loopne
cld
int3
fsubl
ret
xchg
lea
lock
sbb
adc
jnp
sub
and
jae
sahf
mov
mov
push
add
sbb
mov
jg
xchg
cltd
mov
cmp
inc
lods
lds
stc
jnp
aaa
and
cld
lret
fsubrs
adc
into
push
add
mov
std
addr16
inc
add
mov
in
andl
lret
jne,pt
shll
daa
loopne
add
cmp
jge
jno
cld
push
adc
xor
and
sbb
jns
xchg
push
and
aam
fstl
xchg
jle
sbb
std
in
loop
lock
rcl
cli
ljmp
es
fildll
sbb
sub
xor
test
into
fwait
call
pop
dec
fnstenv
mov
or
sub
sbb
lds
je
inc
jae
or
out
xchg
test
fidivl
push
and
addr16
je
out
lods
jae
roll
fildll
in
rclb
cmp
mov
leave
cmp
pop
mov
cmp
sub
dec
sti
lods
jp
loope
push
call
jne
and
push
push
int
ret
cmove
push
loopne
xlat
and
xchg
xchg
cmpl
fidivrl
cld
mov
sub
out
movntq
out
ret
mov
push
and
push
add
inc
pushf
das
fdivrl
aad
sub
popa
jno
cmp
jns
out
pop
test
int
stc
roll
outsb
sub
pop
sarl
cli
shl
add
dec
cmp
and
aas
test
nop
pop
lods
push
repz
sbb
lcall
in
dec
gs
fsub
cmp
push
sti
inc
sahf
imul
mov
jecxz
cltd
xchg
mov
into
or
mov
lock
inc
mov
pop
and
sbb
cmp
mov
das
hlt
dec
aam
movsb
bsr
mov
lcall
or
push
adc
or
dec
stc
shlb
jb
sbb
sub
daa
push
in
icebp
xacquire
add
ror
push
adc
sbb
js
out
push
mov
cltd
in
mov
adc
popa
scas
enter
mov
and
out
xor
push
push
in
addl
pop
lcall
jns
xchg
arpl
add
js
int
das
dec
mov
lock
inc
gs
mov
hlt
xchg
push
dec
cmpsb
int
andl
addr16
lret
pop
dec
push
jl
test
testb
cmp
jl
push
mov
mov
icebp
ret
std
mov
daa
adc
xchg
pop
or
adc
dec
test
mov
add
inc
dec
dec
test
xchg
fdivp
jle
inc
adc
pop
frstor
and
or
mov
push
cmp
xchg
push
ss
jne
repnz
hlt
sahf
add
faddl
xchg
addr16
dec
push
inc
jno
pushf
mov
and
decb
mov
dec
fstpl
fistpll
mov
addr16
loope
into
mov
inc
ret
adc
push
enter
les
xor
popa
mov
fs
ja
les
jge
ja
mov
decl
sti
or
lea
jmp
push
mov
xchg
or
mov
inc
out
mov
mov
outsb
xchg
mov
sub
mov
add
popf
jg
jne
pop
inc
pop
jmp
pusha
and
xlat
mov
mov
mov
add
cmp
push
out
data16
call
dec
add
cltd
fistl
mov
and
sub
rcll
jl
pop
push
js
outsb
mov
and
jno
adc
mov
inc
or
orl
sbb
lret
mov
mov
pushf
sti
inc
adc
bound
mov
jecxz
push
push
orb
mov
fnstsw
xchg
and
loopne
jmp
jb
mov
adc
adc
insl
mov
in
xor
pushf
rcrb
lahf
jmp
mov
mov
xchg
sub
mov
push
and
and
cmp
and
add
fadds
cmpsl
aam
pop
adc
and
movsl
jae
and
shll
xchg
out
xor
xor
aam
dec
fistl
jle
scas
pop
lods
mov
jl
mov
or
lahf
iret
sub
mov
pop
repz
enter
imul
xor
aad
and
mull
movsb
mov
ret
out
mov
add
lds
add
jo
sbbl
rcll
enter
xchg
dec
cmp
daa
addl
xor
insl
sub
into
xchg
std
or
jg
in
mov
and
mov
xchg
push
gs
jecxz
insb
or
lret
sbb
test
mov
out
cmpsb
hlt
inc
loop
rclb
repnz
dec
xchg
cmp
mov
cltd
rcr
or
subl
icebp
mov
fsubs
js
loop
fs
aaa
and
sbb
mov
xchg
fildl
dec
push
cwtl
mov
cli
loope
jb
xchg
aaa
leave
dec
into
xor
jl
std
je
cmc
xchg
in
inc
push
aam
jb
enter
push
leave
lcall
inc
mov
xchg
insb
xchg
cmc
push
jae
popf
push
jno
scas
mov
xchg
jb
pop
push
aaa
mov
cmp
xchg
cli
inc
scas
or
cwtl
pusha
add
add
enter
bound
lret
pop
push
xchg
mov
das
nop
inc
jecxz
push
jno
and
fadds
pop
decl
xchg
movnti
push
dec
cmp
jno
aam
push
aaa
pop
xor
mull
int3
pop
shll
gs
or
add
adc
xchg
in
cmpsl
lahf
jbe
out
adc
andb
inc
sub
push
shll
pop
push
sbb
pmaxsw
jae
add
lahf
push
daa
lds
jle
aad
lea
inc
jecxz
movsb
lods
push
lock
pushf
xor
xor
in
jmp
shrl
add
test
fst
popf
jp
sbb
inc
movsl
ficompl
inc
movb
int
dec
clc
xor
mov
push
mov
pop
test
xor
mov
xchg
dec
outsb
fwait
mov
sub
sub
dec
push
fnsave
test
rcll
leave
imul
cmp
and
adc
dec
into
fldl
dec
into
int
negl
lret
fildl
sub
push
fidivrs
mov
stos
dec
icebp
movsb
adc
add
mov
push
dec
int3
add
adc
mov
push
mov
push
cwtl
hlt
cmp
lea
adc
mov
mov
and
add
dec
xchg
sbb
add
xchg
sub
mov
test
mov
jle
shll
sub
jl
enter
std
ja
lret
jne
into
leave
sahf
mov
add
add
ret
xchg
mov
lock
pop
mov
pusha
pusha
sbb
sbb
in
mov
xor
mov
inc
dec
bound
into
jbe
stos
jmp
mov
mov
mov
inc
iret
push
cwtl
icebp
bound
daa
xor
sub
movsl
psadbw
and
mov
jbe
push
push
fiaddl
jmp
fwait
push
shl
inc
sbb
test
sbb
push
fs
xor
mov
test
loopne
pushf
movsb
sti
ret
inc
inc
and
adc
lock
stos
dec
sub
outsl
lds
ds
lret
inc
movsb
movsb
fsubs
daa
jo
fwait
insb
lret
dec
adc
pop
inc
xchg
scas
xchg
xlat
popa
dec
cmp
gs
popa
ficomps
imul
ud1
lret
push
cwtl
xor
mov
icebp
iret
icebp
loop
inc
jecxz
push
cltd
data16
jmp
loope
jl
gs
std
loop
xchg
cld
testl
imul
jnp
inc
jns
jae
xchg
clc
mov
dec
push
cmp
mov
pop
ret
mov
ds
iret
jle
adc
jmp
inc
jmp
jecxz
push
and
inc
mov
xor
pop
stc
push
imul
movsl
adc
xchg
jmp
lods
repnz
adc
test
loopne
mov
add
mov
fisttpll
pushf
jl
mov
jae
orl
rcrb
notl
test
push
mov
test
sub
loop
mov
adc
gs
push
pop
sar
xchg
mov
adc
sub
or
inc
jle
jae
and
daa
bound
xor
lods
mov
xor
dec
stc
cli
jno
les
ss
test
cmp
lea
fisubs
daa
mov
ret
xor
arpl
mov
and
or
jl
sbb
xchg
inc
dec
dec
add
jo
cld
push
jnp
ja
inc
movsl
dec
pop
jmp
dec
sub
adc
pop
mov
pop
mov
mov
adcl
and
test
pop
adc
xchg
pop
fcmove
push
outsb
fimuls
mov
inc
or
aas
sbb
enter
and
push
imul
and
pop
movsl
push
push
sarl
bound
lahf
cltd
scas
cmp
pop
popa
sub
inc
ss
mov
mov
xchg
call
rolb
addl
or
scas
xor
scas
in
hlt
repnz
pop
je
jns
ret
scas
sub
pushl
lret
fists
out
sbb
or
pop
add
scas
rcl
pop
orl
enter
fstpl
cmp
push
and
mov
xor
mov
ret
out
jnp
cltd
and
cld
icebp
sub
jbe
mov
push
pop
movb
and
div
xchg
xchg
loop
repz
lods
nop
mov
adc
mov
test
pop
inc
push
cs
sbb
shll
jp
xchg
ret
clc
cld
pop
or
ficoms
sub
adc
daa
cmp
mov
jnp
sbb
sbbl
mov
lcall
xchg
cld
push
or
cmpl
in
xor
sbb
dec
pop
and
mov
push
inc
pop
das
hlt
xchg
or
arpl
stos
test
dec
pop
sbb
jbe
xchg
push
in
or
subl
inc
test
lock
sub
sbb
xor
push
sub
add
sahf
leave
fsubs
das
push
lret
xor
dec
into
pop
repnz
fnstcw
adc
sbb
adc
std
aad
push
ss
mov
xlat
pop
imul
inc
jae
leave
add
cmp
std
add
cmp
fcoml
out
mov
aam
ja
xorb
mov
js
into
rcll
mov
sub
xor
inc
inc
adc
mov
jo
xchg
test
mov
push
adc
jbe
xlat
pop
cmp
iret
int
push
jg
ljmp
dec
sub
xchg
loop
movsb
jo
cmc
sbb
mov
fdivs
sub
xchg
push
mov
cmp
mov
into
mov
mov
stc
jecxz
pop
sbb
jns
inc
push
incl
ds
adc
cmp
adc
mov
daa
mov
xchg
pop
or
shlb
sbb
pop
jnp
imul
inc
push
pop
add
jmp
cmp
insb
sub
pushf
out
ss
fnstcw
xchg
fstps
xchg
sbb
out
inc
inc
mov
movsl
sub
pop
mov
mov
and
cs
pop
imul
imul
xchg
mov
add
xchg
add
pusha
add
bound
lea
xchg
bound
pcmpgtw
into
mov
and
or
mov
outsb
mov
aam
jmp
pop
add
gs
push
jnp
ljmp
imul
test
push
push
jne
sbb
rcll
dec
roll
jno
push
int
and
rcr
sti
sub
bound
addr16
mov
jno
neg
push
xchg
mov
es
shrb
cwtl
xlat
std
call
stc
lret
addr16
push
adc
movsl
in
ret
sub
das
ret
and
add
mov
stos
push
add
mov
xor
in
test
jnp
cmp
insb
mov
es
jo
idivl
out
icebp
or
push
in
cmp
and
jnp
cmp
and
out
out
jmp
jae
sti
test
pop
push
dec
cwtl
fwait
xchg
sbb
or
fdivs
mov
cmp
sahf
adc
push
dec
push
sub
dec
mov
shl
add
ljmp
dec
inc
sub
aaa
in
jl
loope
leave
pop
mov
enter
mov
xchg
js
int3
ljmp
mov
shl
or
cmp
pop
push
pop
loopne
add
or
dec
dec
add
fcomip
out
cmp
gs
out
xor
xchg
pop
fs
fyl2xp1
xor
jge
rcrl
or
inc
push
das
ja
out
add
ljmp
pop
and
repz
mov
pushf
sub
in
xor
jae
subb
ret
pop
stos
and
mov
rep
inc
push
rcrl
pop
outsl
leave
aam
lahf
jge
sti
lds
subb
and
mov
test
pop
sub
add
mov
xchg
inc
sbb
pushf
mov
jno
aaa
sbbl
shl
in
lock
cmp
jecxz
int3
pop
loopne
gs
inc
repz
mov
and
pop
fstpt
sub
js
and
pop
leave
fsubrl
shll
push
mov
clc
push
out
cmp
addl
decb
ficoms
jecxz
mov
pop
sub
and
pop
cmp
and
cmpsl
and
xor
js
pop
add
outsl
dec
push
enter
jno
xchg
and
and
in
jle
out
sub
rcpps
lret
jp
jmp
mov
push
imul
push
push
addr16
stos
cld
shrl
push
add
add
dec
add
push
jo
push
sub
mov
stos
jecxz
pusha
inc
mov
mov
dec
psadbw
mov
fwait
loop
push
bound
fs
pop
jno
loopne
outsb
dec
mov
mov
nop
ret
push
repz
mov
sbb
sbb
xchg
sub
sub
jae
sti
fcoms
push
or
outsb
test
sbbl
xor
adc
orl
adc
mov
aaa
into
push
cs
sbb
jecxz
shr
cli
lods
repnz
aas
call
pop
dec
cmp
dec
sahf
lea
dec
lods
rorb
in
or
or
out
sbb
sub
push
out
add
shlb
nop
mov
push
loop
push
cmp
sbb
add
cmp
mov
sub
test
in
and
push
cli
jl
stc
or
cmc
add
push
iret
push
sub
pop
and
jmp
cmpl
in
ljmp
push
into
outsb
cmp
fcom
mov
fcmovnbe
push
std
dec
mov
add
jp
popa
jne
clc
add
add
int
test
sbb
stos
pop
das
aaa
xlat
pop
jbe
imul
cwtl
mov
notb
popa
js
clc
lea
rclb
repz
popf
ja
outsb
push
aas
sar
jecxz
dec
fstpt
add
movsl
push
sub
cmc
stos
add
cmp
jge
xchg
push
mov
out
adc
mov
ret
sbb
dec
xor
test
mov
sub
mov
jbe
or
push
adc
scas
mov
pop
jne
sub
mov
push
mov
push
fnsave
push
dec
in
outsb
sbb
xor
fists
xor
sbb
rolb
mov
incb
cmp
inc
fildl
or
sti
jo
xchg
or
jns
movsl
pop
sahf
sbb
jg
pop
in
test
mov
pop
inc
cwtl
push
cmp
sbb
aam
popf
fsubrs
daa
dec
adc
pop
out
cmp
pop
rcll
sub
jmp
mov
dec
fcmovnu
or
xor
loopne
aaa
ret
cmpsb
test
adcb
stc
jg
adc
call
mov
fcmovne
jmp
lret
repnz
fistl
dec
popf
xor
into
xor
outsb
push
and
add
aad
subb
stc
mov
xchg
aas
rclb
pop
dec
xchg
testb
xor
aam
sub
js
and
idivb
mov
jne
mov
mov
mov
xor
fwait
jbe
scas
es
cmpsl
aas
stos
popa
repnz
ds
rclb
dec
scas
or
js
mov
mov
sub
sub
and
jae
ret
lea
xor
stos
mov
cmp
insb
sahf
xor
mov
mov
imul
push
cltd
add
jmp
pushf
lret
cmp
sub
mov
dec
inc
stos
cmc
aad
pop
mov
lea
inc
lret
mov
insb
sbb
mov
xchg
and
ja
cmp
in
sbb
out
jo
add
fcomps
es
cmp
dec
pop
andl
mov
sub
les
test
lods
sub
rcrb
imul
pop
ret
pop
iret
daa
or
dec
and
call
xor
sub
cmp
cltd
movsb
cmp
cmpsb
arpl
add
push
in
push
stos
mov
xor
test
das
fsubrs
ja
sbb
mov
sbb
jmp
cmp
fsubs
jmp
imul
or
sub
stc
pop
inc
cmpsb
jbe
aad
pop
call
mov
dec
adc
rorl
dec
jle
fisubrl
mov
cmp
or
test
ljmp
loop
lods
lods
and
sahf
enter
mov
in
js
out
cmpsb
dec
in
stos
push
aam
xchg
mov
insb
movl
repz
inc
jle
dec
xlat
scas
nop
mov
gs
hlt
stos
insl
sbb
stos
pop
test
and
out
xor
mov
push
xchg
push
and
adc
ja
fldl
jnp
lcall
jne
xchg
or
cmp
call
sti
insb
add
cmp
pop
cmp
push
in
and
push
pop
jp
and
insb
dec
mov
js
mov
dec
daa
cs
mov
aam
fmuls
pop
lret
inc
mov
xor
fistpl
jbe
xchg
hlt
and
ljmp
mov
jp
dec
test
aad
int
xchg
stc
or
or
adc
pop
mov
out
into
xchg
pop
mov
jg
pop
lea
cmp
pushf
lret
ja
lods
fcomps
adc
jno
dec
out
adc
clc
std
rolb
rcrl
pusha
dec
bound
clc
lret
lods
pop
cltd
mov
inc
mov
je
mov
inc
and
push
addl
mov
sbb
xchg
shl
xchg
lds
insb
test
mov
pop
or
sbb
mov
rorb
dec
adc
mov
test
movsb
dec
pusha
jmp
sub
out
loope
repnz
pop
push
fmull
fists
push
pop
scas
into
flds
outsl
lahf
cmpsl
pop
push
das
es
mov
xor
fwait
mov
bound
mov
icebp
test
adc
add
mov
sub
mov
sub
mov
jmp
xchg
dec
sbb
in
outsl
mov
pop
dec
addr16
loope
push
pop
shl
leave
lea
repz
out
inc
and
lahf
inc
call
cmpl
mov
cmpsl
les
cmp
icebp
imul
test
data16
int
scas
scas
xchg
scas
out
insl
cmp
jnp
mov
or
jbe
test
push
sbbb
jl
cmpsb
iret
xor
cltd
push
sub
mov
push
popf
pop
xchg
push
outsl
mov
daa
xchg
repnz
sbb
or
xchg
lret
leave
sub
in
mov
and
test
mov
loop
test
inc
inc
or
xchg
pop
insb
nop
mov
xchg
add
inc
je
dec
cmpl
cmp
mov
loopne
cmp
or
and
idivl
out
cmp
pop
ret
sahf
cmp
out
repz
xor
fwait
pop
jo
sbb
mov
clc
sub
into
xor
movsb
xchg
add
fbstp
sbb
xchg
aas
cmp
imul
divl
cmp
or
lods
jp
fwait
dec
push
xbegin
mov
jno
std
xor
aam
adc
lret
fcom
mov
xor
outsb
lods
sbb
mov
pop
cltd
ds
xchg
adc
scas
dec
adc
es
and
or
cmpb
std
mov
cwtl
sub
pop
hlt
sub
mov
int
jo
cmp
push
xchg
ds
fs
pop
jne
jl
mov
ljmp
sbb
cmp
repnz
mov
lods
jno
inc
or
flds
jmp
lock
push
jno
ja
fsubs
rorb
add
mov
out
dec
jp
aad
cmpb
dec
stc
movsl
mov
mov
int3
cmp
mov
sub
mov
jmp
shll
push
out
lret
clc
sarb
sub
leave
nop
dec
hlt
push
popf
xlat
aas
xchg
ficoml
sbb
mov
in
lods
and
jge
jp
and
xor
imul
xchg
rorb
adc
push
fiaddl
inc
dec
cmpsl
inc
fimuls
add
cmp
cmc
dec
clc
push
ret
sbb
mov
or
int
sub
xchg
mov
fwait
adcb
pop
inc
sub
mov
or
lahf
pop
xor
adc
out
sub
adc
incl
or
or
push
roll
jle
cmpsl
inc
sub
push
lds
lods
mov
add
mov
clc
in
xor
test
cmpsb
movsb
xchg
mov
push
lret
sbb
outsl
jae
test
ret
lret
mov
mov
and
or
out
push
mov
outsl
aaa
and
jno
adcb
aam
push
adc
fcoms
pop
mov
rolb
inc
or
insb
mov
out
xor
ss
jns
lahf
out
mov
mov
jmp
xor
cmc
dec
pusha
in
xchg
out
dec
std
xlat
das
imul
sbbl
mov
repnz
xchg
mov
mov
cs
jge
fstpl
cs
push
int
dec
jp
fcompl
cmpsl
test
std
and
mov
jns
pop
movsl
cli
push
mov
inc
jbe
jnp
aaa
sbbb
xor
testb
add
and
inc
adc
or
stc
test
inc
jne
adc
je
lcall
sbb
jecxz
xchg
popf
fwait
mov
psubw
sbb
xor
push
aas
repz
add
jge
add
stos
lret
pop
push
adc
add
jmp
lret
lock
mov
imul
mov
int3
aaa
pop
cmp
sti
pop
call
inc
sbb
imul
mov
pop
push
mov
out
add
cwtl
nop
or
sbb
lret
pop
jle
push
jmp
lea
xlat
sahf
adc
dec
cli
into
dec
int
or
adc
pop
adc
xchg
add
dec
in
lret
adc
jbe
icebp
data16
jl
mov
pop
and
sub
imul
xchg
ficomps
cwtl
lahf
mov
xchg
push
pop
mov
aam
arpl
jo
ljmp
daa
xorl
sbb
ret
pause
mov
mov
outsb
or
mov
pop
ja
jo
fmulp
clc
movsl
mov
sub
mov
outsl
ficoms
inc
mov
jge
cmp
repz
mov
sub
mov
cmp
rcrb
xor
mov
jmp
mov
sub
sbb
push
jne
pop
cmp
push
sbb
cmp
clc
jno
pop
bnd
scas
or
sbb
pop
les
out
ljmp
mov
mov
adc
nop
push
gs
cmp
push
sub
shlb
sbb
into
cmpsb
aas
add
xor
and
push
jge
or
sub
adc
jecxz
int3
call
dec
xchg
pop
xor
inc
into
jae
xchg
mov
cwtl
add
nop
push
xor
sbbl
xor
push
adcl
or
jb
aas
testl
andl
jp
xchg
int3
xor
roll
pop
push
inc
cmpsl
ficompl
dec
pop
jnp
push
push
out
insb
clc
jle
xchg
aas
int
test
mov
aas
call
mov
xchg
pushl
inc
sbb
sbbl
insb
push
data16
pushf
and
test
bnd
and
sbb
xchg
pop
bound
cmpb
push
mov
mov
ss
jle
fcom
ret
leave
mov
jbe
mov
ret
std
and
sbb
inc
jne
pop
jo
jg
cli
nop
lret
jmp
xchg
pop
push
jl
mov
pushl
push
or
cmpb
fistl
loopne
ret
inc
fs
push
push
sbb
xor
xchg
lahf
sti
mov
out
loope
inc
push
xor
mov
aas
xor
andl
lret
pushf
mov
lods
dec
lret
sarb
fs
lods
es
mov
xchg
sarl
add
insl
pop
cli
push
sahf
mov
mov
or
inc
sub
jl
and
js
or
sub
lods
repz
cmp
cmpl
jge
mov
dec
dec
adc
push
mov
and
ds
nop
out
loope
inc
mov
sbb
inc
scas
test
inc
push
ret
pop
sbb
jmp
into
js
or
and
push
or
push
outsb
repz
les
mov
push
or
shll
movsl
and
jp
sbb
ljmp
neg
add
jnp
sub
jo
dec
sbb
mov
icebp
jb
mov
imulb
mov
inc
clc
outsl
stos
test
pop
fs
lcall
hlt
mov
mov
fiadds
push
lret
test
es
xlat
rorl
test
push
movsb
pop
jbe
xchg
push
push
jmp
enter
or
hlt
mov
daa
cmp
popf
sub
lahf
xchg
xlat
icebp
ljmp
repz
mov
pop
mov
test
js
enter
mulb
insb
dec
cmc
add
xchg
mov
or
xor
push
pop
sti
leave
lret
cmc
imul
pop
pop
xchg
imul
insl
jle
push
jns
push
aad
cmp
dec
pop
dec
inc
push
cmp
and
sti
loope
test
xchg
mov
lods
mov
ja
ja
shl
repz
aaa
xchg
aas
ds
and
popa
cld
das
adc
adc
pop
jae
adc
mov
cmpsl
popf
push
test
lret
push
push
popf
mov
jg
sub
fnstsw
xor
and
push
mov
aaa
mov
sub
imul
adc
jne
push
push
cmpsl
xchg
dec
lret
pop
ficoml
inc
xchg
hlt
push
cltd
repnz
jmp
dec
push
cltd
push
mov
jl
mov
xor
or
shl
cltd
cmp
ret
add
lods
movsl
out
stos
jmp
ret
nop
add
mov
pop
fbld
mov
inc
xor
inc
fisttpl
add
sub
dec
sar
ja
aam
je
pop
movsb
aaa
and
pushf
fwait
pusha
iret
jmp
push
es
sbb
fucom
inc
cmc
data16
add
shrl
jmp
sbbb
jmp
mov
cmp
shlb
and
jge
push
lock
or
imul
aaa
jns
orb
popf
push
nop
rcrb
jecxz
ss
lahf
jno
push
mov
or
inc
inc
gs
std
pop
inc
cmc
sub
mov
orl
mov
mov
sbb
addr16
stos
mov
stos
ret
add
in
push
cld
imul
movsb
sbb
arpl
clc
addr16
push
adc
xor
out
xorb
or
xchg
cmc
push
or
les
dec
cs
pop
or
mov
mov
and
xchg
aas
lock
push
push
pop
mov
inc
sbbl
push
mov
or
shl
push
cmp
lret
xor
enter
lods
inc
jnp
hlt
test
inc
mov
mov
inc
jg
or
leave
pop
add
shrb
mov
push
pop
in
sbb
push
aad
pop
test
xchg
xor
and
or
or
in
std
mov
sub
inc
in
inc
dec
jnp
mov
out
fld
lock
mov
and
pop
nop
pop
inc
pushf
rcl
loope
cmp
dec
jb
pop
push
mull
jo
mov
xor
into
aad
movsl
sti
pop
loop
mov
jmp
pusha
xchg
inc
sti
or
imul
sti
cmc
xor
outsb
mov
rorb
fs
aam
das
inc
out
dec
cmpsb
inc
sub
mov
cmp
dec
into
imul
fisttps
sahf
jb
or
repnz
jae
andl
mov
fsubl
sub
ror
adc
mov
std
cltd
mov
mov
pop
popa
shll
xchg
push
sti
enter
dec
xchg
pop
push
dec
mull
add
mov
fisttps
aam
mov
pushf
adcb
fldl
rcr
sbb
xor
pop
out
dec
jno
mov
leave
sub
movb
clc
iret
add
or
shrl
cmpsl
sub
cld
mov
mov
popf
rcll
inc
mov
and
out
andl
xchg
in
mov
fsubrs
inc
sbb
mov
mov
inc
and
fwait
or
outsl
stos
je
push
mov
jl
int
adc
mull
mov
cmpsb
call
push
int
notb
push
lock
icebp
iret
sbb
jle
add
and
push
pop
out
cltd
arpl
ja
out
xchg
or
mov
enter
add
cltd
xor
in
in
shll
mov
pusha
pushf
xor
pop
ss
cmp
mov
insl
movsl
mov
sti
lods
ret
mov
js
test
pop
outsl
test
xlat
jbe
add
call
sbb
sub
outsl
jb
pop
aam
pop
mov
psllq
scas
pop
push
mov
jg
lcall
fldt
and
jl
adc
inc
ficomps
xchg
cmp
fldl
and
loope
xor
sub
mov
rclb
jbe
lods
ja
imul
lea
lods
pop
jle
jecxz
lods
mov
mov
jmp
testl
xor
push
out
imul
cmp
inc
mov
icebp
cltd
push
mov
push
mov
jecxz
es
or
fistpll
popa
xchg
mov
cmp
out
cwtl
icebp
in
loopne
sarb
fisttpl
outsl
xchg
xchg
cmp
mov
outsb
fs
jle
cmp
leave
fldt
ret
pusha
lret
data16
in
xchg
hlt
int
insl
sti
fs
stos
pop
iret
sar
ficoml
mov
addb
outsl
xchg
xor
testb
xchg
cmp
ret
mov
bnd
cli
cmp
bound
cld
cld
sub
push
lret
mov
dec
mov
and
imul
cli
cmpsb
xchg
jne
test
jmp
cmc
addb
clc
testb
mov
sbb
or
ss
mov
pop
xchg
mov
push
add
andb
adc
inc
push
stc
lods
ds
push
test
into
inc
mov
or
lahf
test
mov
and
xor
insb
jge
daa
fs
aam
ret
loop
xchg
cmp
add
and
add
fcom
inc
call
pop
xor
imul
rcl
imul
sub
sbb
mov
dec
push
inc
and
aad
cmp
lds
mov
pushf
dec
add
xlat
outsb
les
jge
push
add
adc
adc
mov
sahf
and
pop
ficoml
sbb
or
mov
xor
lods
mov
mov
cmc
dec
xchg
leave
xchg
loopne
or
adc
push
dec
dec
ljmp
jae
rcll
out
outsl
xchg
mov
sbb
xlat
lahf
push
cmp
je
popa
jp
pop
scas
jp
pop
into
int
out
lret
cmpsl
imul
jbe
jmp
push
jo
ds
je,pt
filds
jmp
stc
ljmp
loop
out
push
xchg
add
popa
mov
mov
mov
aas
cltd
imul
sbb
repnz
ljmp
push
jp,pn
fadds
in
pusha
dec
enter
loop
popf
mov
push
cmc
xor
mov
lret
mov
test
stc
inc
push
fsubr
mov
addr16
jle
int3
push
pop
add
repnz
pop
add
ficoml
std
lods
sbb
inc
jg
and
arpl
int3
imul
leave
push
pop
push
imul
pop
call
adc
subl
mov
pop
inc
pop
sub
lock
mov
pop
inc
xchg
dec
lret
jmp
xchg
sbb
and
pop
fmull
loopne
sub
je
popf
mov
adc
imul
sti
xor
sub
inc
mov
cli
xchg
out
fldl
push
and
or
push
mov
aas
pop
or
xchg
sbb
sub
cs
dec
pop
ds
cmp
jle
jnp
xchg
stos
cltd
add
test
add
cmp
js
cmc
loope
mov
cwtl
popa
scas
xor
xor
jns
lahf
mov
sbb
and
push
rol
sbb
push
xor
shrb
push
dec
mov
mov
addr16
test
mov
aaa
jl
push
ret
mov
mov
es
or
jae
ds
jno
jle
in
or
les
les
fstpt
mov
pop
xchg
xor
push
mov
sub
fmul
test
dec
pop
jl
sub
into
inc
mov
jnp
subb
mov
iret
dec
pop
pop
fidivs
inc
sbb
adc
ret
dec
out
dec
or
addb
jg
pop
mov
js
cmp
inc
push
pop
xchg
pop
cltd
popf
stc
fsubrs
jmp
sub
adc
and
cmp
mov
xchg
out
or
outsb
clc
push
lahf
pop
hlt
xchg
sbb
lea
cltd
lds
loop
les
dec
sahf
dec
pop
jecxz
fs
xchg
add
ja
add
add
mov
xor
pop
repnz
jecxz
out
adc
das
sbb
adcb
xchg
push
push
jae
jne
xchg
pop
fwait
dec
mov
or
outsl
jns
in
fisubrs
pushf
loopne
movsb
data16
loop
mov
lock
cs
leave
out
in
leave
popf
mov
imul
push
test
xlat
rclb
inc
mov
jae
pop
lcall
jb
subb
jb
push
ljmp
in
inc
push
pushf
inc
adc
mov
mov
mov
mov
loop
xor
ficomps
imul
and
out
xchg
nop
pop
push
les
cmpsb
jle
andb
sub
cmpsb
adc
dec
inc
adc
jecxz
roll
repz
dec
push
pop
pushl
movsb
push
jl
ds
loop
push
sub
clc
jecxz
sub
xor
mov
lret
aas
rol
fnstcw
into
dec
sbb
inc
outsl
js
jb
and
mov
jecxz
ret
lea
sbb
outsb
mov
fisttpl
ret
int
rcrl
cli
insb
js
fcomps
jbe
pop
mov
mov
lods
dec
xorb
icebp
ljmp
mov
in
pop
aaa
sub
mov
fs
push
lock
popa
std
js
dec
movsl
dec
xorl
sub
and
cltd
cmp
ja
cld
stos
sub
ret
inc
repz
nop
sub
gs
sbb
pop
xchg
mov
dec
push
sahf
pop
mov
cmpb
xor
insb
int3
movsl
sbbb
fnstsw
test
jecxz,pt
call
lds
or
xchg
mov
loopne
dec
rclb
je
pop
mov
inc
aam
jecxz
mov
pop
inc
out
imul
push
stos
mov
dec
mov
mov
mov
sti
mov
sbb
push
mov
xchg
dec
cwtl
xchg
adcl
in
icebp
xor
lea
dec
mov
xor
leave
sbb
rcr
add
rorl
cmpsl
hlt
pushf
fmull
push
movsb
insb
mov
outsl
js
leave
pop
dec
shrb
out
or
push
sub
fcmovbe
xchg
or
pandn
rcrb
cmpsl
dec
neg
jno
ds
adc
pop
sub
repnz
push
jmp
xchg
mov
xlat
inc
mov
mov
add
mov
int
inc
sub
call
and
sahf
popf
mov
dec
push
pop
cmp
lods
pop
aas
addr16
insb
test
sbb
fistl
data16
gs
xchg
mul
xor
fwait
cmpsl
ds
mov
jle
pop
in
scas
sub
add
sbb
dec
out
mov
mov
adc
xor
in
cmpb
ss
inc
adc
or
sub
xchg
int
adc
or
and
jge
mov
inc
std
mov
mov
push
sar
inc
imul
fnstsw
mov
lods
adc
sub
xchg
dec
mov
jae
or
and
and
sahf
sbb
scas
adc
orb
mov
inc
je
mov
loope
add
scas
cmp
lods
loopne
xchg
xor
dec
or
or
repz
jg
adc
or
dec
add
sbb
inc
inc
cmp
fistps
sub
mov
mov
dec
adc
repz
dec
sahf
cmp
jp
dec
dec
sarb
ljmp
jge
aas
xchg
out
or
sar
loopne
cmpsl
inc
add
xchg
out
je
cmp
inc
xacquire
cmp
or
roll
aas
outsb
lods
xchg
pop
mov
push
insb
je
xchg
js
jecxz
jnp
out
push
cmp
ret
mov
iret
pop
fldcw
ja
sti
xor
clc
insl
dec
pop
mov
sbbb
or
mov
sub
in
inc
roll
mov
fisttpl
mov
orb
xchg
jne
push
xchg
sub
push
xor
xor
mov
inc
adc
pop
rcll
insb
push
push
in
stos
scas
push
cmpsl
lea
cmp
mov
repz
push
ljmp
jbe
shrl
into
xchg
cwtl
xor
pop
test
mov
les
scas
xchg
pop
mov
es
sub
sar
jne
pop
std
icebp
fldcw
in
pushf
stos
or
incl
push
mov
fidivl
into
fs
ss
or
dec
fdivs
mov
jl
mov
inc
push
jl
cmc
xor
jecxz
lods
loopnew
add
jae
mov
pop
cs
xor
test
mov
test
lock
adc
sub
push
cmp
clc
je
orb
xor
notb
pop
rolb
add
and
or
outsb
pop
sti
cs
in
fisubs
xor
add
lods
jbe
bound
mov
pop
pop
loopne
cmpsb
sub
incl
fcmove
add
cmpsb
xchg
dec
or
jbe
icebp
dec
push
nop
jecxz
notw
xor
movsb
outsl
popa
data16
insl
fcoml
mov
adc
mov
inc
inc
dec
mov
iret
jge
fstpl
cli
sub
xchg
push
mov
in
and
adc
jb
dec
ds
add
imul
or
inc
add
fcmovne
mov
aam
sub
or
and
into
das
test
sbb
daa
push
out
push
or
sbb
loopne
call
cmpsb
test
or
sub
xor
push
pop
xchg
enter
std
ret
movsb
or
shrb
sub
xchg
sub
sahf
stos
lea
dec
fmul
push
push
mov
pop
cmc
xor
sub
dec
sub
hlt
je
adc
loop
mov
add
mov
cmpsb
add
inc
ret
xchg
mov
imul
mov
pop
fwait
push
sub
jge
test
in
jecxz
mov
inc
mov
cltd
jb
nop
mov
xlat
ficoms
nop
insb
sti
jmp
jbe
movsl
test
adc
mov
xor
push
sub
pushf
mov
in
cmp
ljmp
movsb
mov
imul
addl
scas
push
mov
fidivrs
jl
cwtl
mov
mov
dec
roll
pushf
push
enter
fsubs
mov
inc
lods
xor
jb,pn
int3
popa
adc
jp
jecxz
movsl
ds
mov
fwait
cmp
sub
pop
fdivl
push
outsl
inc
test
xchg
in
pop
add
jno
jne
adc
mov
jno
mov
lcall
test
lea
pop
mov
or
xchg
xchg
stc
inc
dec
inc
push
int
jge
xchg
xor
int
fldt
shr
mov
jg
add
jne
sti
cwtl
insb
push
rcrb
sarl
in
pop
test
add
sub
add
and
mov
mov
adc
cmp
jle
jge
outsb
in
xchg
xchg
popa
icebp
mov
stos
jmp
int
pop
lahf
fs
pusha
mov
cmp
ds
push
mov
iret
sub
sub
jno
sbb
xchg
cltd
test
cmpsb
xor
sub
aam
mov
xor
scas
adc
out
mov
mov
pop
xorb
jg
jns
xchg
out
lock
stos
xchg
test
dec
mov
mov
add
jle
push
aam
xlat
arpl
sti
pop
insb
sbb
push
xchg
push
jne
dec
mov
mov
mov
and
and
call
cmp
cltd
push
into
mov
loopne
insl
push
mov
pandn
fwait
mov
cmpsl
jbe
out
roll
cmc
fcmovnb
push
xor
fdiv
test
lods
enter
andl
out
sub
mov
inc
and
lds
adc
arpl
xor
or
in
adc
fisubs
mov
fmulp
in
jbe
sub
xorb
adc
add
inc
mov
aad
aam
gs
loop
mov
jp
lds
js
psubw
jnp
sub
adc
mov
mov
into
cmpsl
test
call
je
ss
fistpll
loop
adc
inc
inc
das
shll
nop
jne
sbb
pop
scas
inc
cmp
push
xchg
lods
cltd
lods
std
add
iret
adc
dec
popa
or
ret
pop
and
int3
mov
cmpsb
sarb
idivl
pop
jne
loope
cwtl
or
stos
adc
mov
ljmp
lods
scas
lods
jne
xor
js
bound
pushf
fwait
lods
imul
cmc
mov
aam
sub
int
sahf
loopne
insl
adc
in
and
popa
stc
xchg
cmp
cmp
push
mov
fdivrl
xor
push
jle
fwait
sbb
mov
add
sbb
mov
mov
sub
clc
push
in
gs
mov
and
mov
mov
std
mov
movl
scas
cli
sub
out
jo
lock
movsb
or
pop
xor
ret
sbbl
dec
fs
sbb
inc
cli
mov
push
add
jo
and
enter
lret
call
and
mov
add
pop
repz
push
cmp
cmpsl
push
jb
out
mov
xchg
and
mov
and
inc
pop
or
cmp
xchg
pop
fcmovne
loope
pop
jle
pop
fstps
xlat
and
orl
cmp
push
push
xor
mov
mov
test
not
cmp
stc
icebp
mov
add
sbb
jmp
orl
outsl
sahf
rcrb
cmp
aad
fsts
sbb
clc
xchg
inc
dec
insl
cmp
push
adc
inc
xor
adc
inc
push
flds
mov
daa
adc
push
adc
mov
inc
rolb
les
add
shlb
mov
pop
mov
push
dec
xchg
mov
sbbl
jns
imul
xor
jbe
dec
and
fimuls
shll
addr16
inc
lods
ja
cmp
mov
out
xor
sbb
pcmpgtb
pop
enter
xchg
lock
sub
stc
loop
lahf
rcrl
cmp
mov
lret
jb
test
jno
sub
sub
rcrb
or
shrl
inc
sbb
mov
pop
pop
adc
je
ret
movsb
inc
stos
out
aaa
jg
popa
in
js
frstor
pusha
xor
pop
dec
cmpsb
pop
lods
push
and
xchg
in
in
cmp
pop
aam
inc
inc
jmp
repz
jne
or
and
inc
xchg
mov
mov
jp
add
fcmovne
cmp
rcll
test
lcall
cmpsb
fidivl
shll
inc
repnz
xchg
test
adc
test
cs
sbb
test
mov
push
arpl
or
stos
aas
or
in
ja
xor
inc
inc
xlat
cs
sub
test
lret
ss
je
stc
in
inc
pusha
pop
add
push
mov
adc
popa
jmp
sahf
xchg
pop
jge
push
push
icebp
jle
pop
xor
inc
cmp
jbe
or
sub
mov
add
jl
std
in
jge
add
cmp
enter
adc
fcoms
jmp
ss
and
push
mov
xchg
iret
das
ret
adc
dec
mov
gs
mov
add
dec
out
sbb
popf
out
push
adc
inc
cli
xchg
pop
mov
icebp
in
dec
ficomps
cwtl
out
fs
dec
mov
insb
dec
sub
pop
pop
test
scas
mov
inc
xchg
xlat
out
sbb
inc
imul
das
popa
testl
xchg
mov
lods
add
sub
fsts
test
sbb
mov
pushf
or
pop
test
bsr
cmpsb
mov
cmp
rol
clc
mov
nop
xchg
push
mov
mov
xlat
out
repnz
repz
aad
or
shrl
cli
cmp
push
xchg
mov
fiadds
sub
or
ret
inc
jo
cmp
mov
lret
add
mov
and
cmp
pusha
xchg
xor
pop
lds
mov
roll
sarb
loope
adc
xchg
out
in
mov
mov
mov
repz
in
mov
test
shr
xlat
loop
mov
mov
xor
mov
nop
pop
dec
cmp
ret
bound
imull
push
add
icebp
xchg
sbb
sbb
push
xchg
or
inc
push
xor
mov
mov
repnz
sbb
data16
dec
cmp
ret
xchg
push
and
and
mov
mov
cmp
sub
sti
fmul
sbb
pop
test
xor
sbb
add
push
movsb
add
sbb
mov
xchg
loope
adc
mov
loopne
pop
xor
and
and
and
loop
out
cmp
mov
jl
mov
cltd
nop
ja
lret
enter
pop
cmp
in
cmp
rcr
pop
push
orb
mov
cmp
xchg
push
subb
or
arpl
pop
mov
and
xor
xlat
jns
ds
fs
cmp
arpl
repz
cmc
pop
lock
test
leave
and
rcll
jne
inc
sbb
sub
std
jmp
xchg
dec
call
xor
mov
push
pop
jo
sbb
in
in
aas
cli
ljmp
cld
mov
jmp
jbe
addr16
sti
dec
or
dec
mov
xor
xchg
cmp
scas
xor
div
cltd
sbb
jae
mov
hlt
fiadds
mov
push
adc
test
daa
leave
jo
pop
adc
lods
pusha
ja
repz
cmpl
loope
mov
aam
push
adc
dec
cltd
and
pop
mov
ds
lret
out
jp
jl
or
xlat
mov
mov
hlt
inc
cmp
outsb
push
loop
iret
push
cltd
icebp
xchg
repz
loope
or
xor
adcb
mov
jp
cmp
jmp
xchg
into
pop
push
aaa
push
pop
insl
jae
sub
mov
cmp
pop
popf
jo
pop
test
cmp
inc
pop
mov
movsb
fs
xchg
xor
mov
dec
mov
jmp
xor
pop
daa
aam
cmp
push
in
hlt
cmp
cmp
add
scas
into
mov
fildl
cmp
pop
xor
fsts
mov
cmpsl
or
out
jmp
scas
test
sahf
repz
fs
lcall
test
add
push
ret
mov
sub
movsl
mov
sub
adc
add
sti
mov
adc
pop
jb
stc
cmp
scas
mov
push
push
cltd
cmp
inc
lock
lock
sbb
call
loop
cmp
adc
add
xor
inc
cltd
jae
dec
or
aaa
dec
insl
aad
cmpsb
or
cmp
sbb
es
push
and
bsf
xor
loope
add
test
jo,pn
mov
ja
mov
xor
dec
incb
pop
cmp
rclb
gs
or
scas
and
mov
cmc
fucomp
aad
dec
arpl
push
les
rclb
popa
mov
loop
xor
cmc
adc
inc
cld
inc
cmp
push
popa
test
push
das
in
add
jl
mov
nop
xor
lcall
mov
mov
xorb
mov
cmpsb
push
fs
push
arpl
cmc
push
or
cmc
add
mov
push
movsb
pop
jl
or
fcomps
js
pop
mov
mov
cmp
pop
subl
divl
sub
stos
dec
popl
mov
imul
rcrb
aam
lods
adc
mov
xorl
in
and
es
pushf
mov
mov
cmp
lds
cld
jne
sbb
sbb
lret
pop
insb
cli
aad
fsubrl
nop
inc
clc
icebp
pop
xor
jl
in
lret
aas
dec
clc
ret
mov
movnti
nop
adc
xchg
push
int3
stos
cmp
shr
inc
sbb
test
or
in
xchg
fisttpl
add
sub
mov
jp
out
je
mov
in
enter
sti
rcll
pop
mov
aam
inc
stos
push
fs
cmpsl
cmp
loope
add
test
push
fprem
xchg
iret
ret
cmp
xchg
inc
mov
jno
imull
lods
mov
loop
nop
pop
mov
insl
fld
mov
push
mov
dec
int3
inc
jns
xor
sar
gs
or
aas
dec
xchg
mov
into
ficoml
shrb
jo
movsl
out
leave
xchg
js
dec
mov
cmp
sti
fwait
or
data16
bnd
cmp
fucomp
rorb
jge
xchg
sbb
cltd
add
pop
repz
addb
lock
fisttpll
xchg
lret
movsl
pop
cs
mov
sarl
ja
xor
int3
rolb
mov
mov
and
adc
and
ja
dec
inc
push
or
mov
lcall
clc
shlb
mov
int
movsb
sbb
icebp
js
pushf
in
fmull
movsb
jns
insb
incb
push
pop
pushfw
pop
shlb
daa
sbb
sub
aad
xor
xor
icebp
ss
jmp
movsl
repz
clc
xchg
sub
mov
sbb
call
or
sarb
pop
mov
xchg
std
ror
icebp
ror
out
xlat
sub
sbb
mov
mov
mov
sub
add
push
inc
mov
xorb
adc
test
xchg
mov
mov
fbld
xor
mov
pop
add
dec
lods
in
roll
jbe
adc
jl
shlb
aas
cmp
cmpsb
mov
test
lods
cmp
ror
addr16
adc
call
adc
fsubl
or
pop
xchg
in
inc
lods
fidivrl
xor
std
sti
mov
in
arpl
and
aad
test
test
mov
or
sub
jns
mov
loopne
rcll
pop
data16
or
mov
pop
add
fcmovnb
ja
fistpll
push
imul
fmuls
arpl
cmpsb
lret
mov
out
mov
xchg
mov
sub
mov
jl
fistpll
std
mov
and
xlat
jo
stos
das
outsb
call
lods
call
mov
pop
pop
xchg
mov
inc
leave
xor
std
lret
dec
aad
xchg
push
inc
mov
das
cmp
mov
popa
xor
mov
lcall
mov
les
ljmp
push
push
sub
or
rcrl
push
pop
jne
sbb
ja
or
add
mov
bound
mov
test
inc
pushfw
cmp
xlat
pop
ret
and
jne
aas
arpl
int3
pushf
sub
call
xlat
mov
pop
pusha
fldt
stos
loopne
add
pop
xlat
fstpt
fs
addr16
lea
lret
mov
sbb
and
hlt
adc
mov
mov
pop
imul
xor
push
call
xchg
rcrl
nop
aas
cli
gs
fcoml
in
loop
pop
xchg
call
lds
fs
andl
bnd
in
jg
mov
cwtl
sahf
push
cwtl
out
stos
movsl
pop
sarl
scas
aam
lcall
sbb
cmp
mov
add
or
cmpsl
jle
jo
sbb
mov
push
adc
scas
out
les
arpl
das
ds
adc
mov
cltd
dec
cli
push
jmp
das
roll
mov
lcall
push
nop
mov
and
les
popa
fnstenv
xor
dec
lret
test
xor
mov
dec
aad
inc
adcl
arpl
leave
sub
push
add
dec
jmp
cmpl
or
out
inc
xchg
xchg
sbb
lea
or
mov
sbb
sub
fmulp
adc
sub
aad
sti
popf
cmp
loopne
inc
fisttps
loopne
iret
dec
mov
sbb
loop
movsl
stc
push
inc
sbb
fs
or
test
fwait
outsb
aas
repnz
jne
insb
pop
insl
mov
and
cmp
mov
cmp
in
sahf
jb
lock
mov
test
out
test
push
xchg
jne
sub
or
dec
pop
adc
out
call
popl
arpl
dec
ds
add
xor
insb
dec
lahf
scas
dec
add
push
cs
mov
clc
push
gs
es
and
sar
push
push
jg
lret
or
hlt
push
lock
cltd
inc
call
dec
xor
push
dec
mov
pop
dec
gs
in
add
ret
stos
dec
pop
sbb
ret
and
sbb
out
pop
shlb
outsl
int3
mov
in
push
test
mov
imul
or
outsb
in
lcall
pusha
rcrb
nop
lahf
bnd
dec
popl
jge
scas
push
ja
pop
shlb
es
xchg
nop
ret
rclb
clc
inc
leave
mov
rolb
ret
mov
adc
cmp
into
mov
push
mov
iret
insb
adc
iret
fsubl
js
shll
fwait
xor
add
enter
pop
cmc
add
add
pushf
adc
push
jno
ja
adc
push
mov
aaa
stc
xor
fiadds
movsb
call
fisttps
fucomi
loop
mov
cld
sbb
jecxz
add
lods
jl
cmpsb
test
rolb
sahf
lods
into
mull
mov
out
inc
into
add
jne
push
movsb
hlt
addr16
nop
jle
data16
mov
inc
adc
mov
adc
mov
cmp
and
xor
outsl
lret
sbb
or
inc
or
xor
mov
or
enter
je
dec
cltd
fisubl
xchg
pusha
cmp
sub
mov
xchg
inc
push
add
adc
scas
dec
add
lods
loopne
mov
jno
out
cli
call
pop
cld
insl
pop
rclb
icebp
jb
mov
sti
aad
adc
push
fidivl
jle
mov
pop
dec
scas
mov
test
jo
xor
push
into
push
pusha
shr
xchg
outsl
sbb
add
cmpsb
xor
sahf
loop
mov
rorb
push
xor
daa
movb
inc
test
popf
cmpsl
je
decl
fcomi
test
dec
into
call
pop
cmp
imul
shlb
loopne
cmc
mov
inc
sbb
outsb
xchg
xor
les
hlt
and
jmp
std
fbstp
sbbl
lret
stos
pop
mov
clc
or
and
pusha
xor
inc
inc
leave
and
push
pop
sbb
sub
xor
in
cmp
out
jnp
ds
xor
lods
inc
xor
ja
pop
sbbb
nop
insb
sbb
sahf
pop
xorb
fwait
loop
push
clc
xor
or
and
mov
sub
push
subb
jecxz
repz
dec
pop
dec
cmp
push
daa
pmullw
fcmovnu
xchg
pop
mov
aad
lahf
fwait
dec
sbb
or
rolb
in
in
bound
xchg
adc
sub
and
loope
add
loope
lahf
mov
lahf
jb
fstl
push
sbb
sahf
push
mov
jo
inc
in
dec
push
pop
pop
pop
repnz
daa
cmpsl
rcr
jo
mov
mov
fs
fisubrl
rclb
fsts
and
call
into
push
push
icebp
fldt
testl
shrb
add
insl
fistpl
cmc
inc
push
cmpsb
mov
icebp
sbb
leave
sub
sahf
push
icebp
dec
loop
into
xchg
xchg
popf
repz
fwait
push
lahf
dec
mov
in
inc
inc
movsb
sub
stos
movsl
mov
fidivl
add
add
fnsave
jns
movsl
xchg
mov
and
xchg
std
or
cmp
xlat
stos
mov
fmuls
pushl
imul
add
leave
push
andb
shll
ret
les
and
cmp
cmp
movsb
cmpsl
jns
cld
lahf
push
in
fsub
int
jle
mov
ja
and
leave
xor
je
add
mov
pop
xchg
nop
inc
mov
cld
ljmp
sarl
jecxz
outsl
dec
and
push
cmp
mov
repnz
xor
jns
aad
lahf
pop
mov
test
jb
lock
pop
xchg
sbb
inc
stc
or
mov
xchg
cli
lret
mov
cmc
fwait
mov
cmpsl
scas
xchg
sub
rolb
shll
rcl
rcr
sub
aad
movsb
hlt
mov
jecxz
sub
nop
movsl
dec
ss
fimuls
out
and
xchg
pop
aad
les
lods
add
xchg
sbb
outsl
xor
out
std
cmc
pop
test
xor
mov
xorb
in
sub
repnz
jmp
mov
insb
mov
and
loopne
out
add
push
add
xchg
add
or
inc
lods
xor
fldenv
mov
stc
adc
pushf
clc
cmp
mov
pop
cld
sub
ljmp
sbb
popf
test
xor
add
mov
mov
cmp
scas
pop
pop
jmp
mov
pop
jbe
cwtl
jecxz
adc
mov
add
stc
xchg
jbe
je
jo
int
pop
xchg
inc
int
adc
pop
sbb
inc
jmp
mov
in
sub
or
adc
push
popa
icebp
sbb
jl
sub
mov
insl
and
mov
adc
pop
mov
ret
loopne
dec
out
hlt
aam
sahf
lret
icebp
shlb
add
insb
sarb
in
lods
pop
xchg
mov
dec
mov
or
pop
mov
add
insb
and
jmp
xchg
jecxz
stc
push
imul
les
sub
xchg
incl
ret
aaa
fmull
push
dec
shl
stos
in
stc
in
inc
jp
mov
repnz
ret
sub
and
mov
push
mov
stos
fildl
push
xor
cmp
hlt
sbb
dec
icebp
test
out
cmp
test
test
in
ret
mov
sub
insb
loope
scas
and
jns
mov
lods
adc
in
push
mov
mov
iret
sbb
out
xchg
ljmp
mov
outsb
lcall
xor
sbb
jae
or
push
mov
je
lds
mov
loopne
fsubl
add
push
push
in
push
mov
jb
mov
pop
cmpsb
mov
pop
adc
add
mov
je
jb
jle
sbb
testl
cs
cltd
xlat
cwtl
mov
int
ljmp
xor
mov
mov
aas
aam
and
push
lock
xor
sbb
add
cmc
shlb
stos
call
pop
decl
rcrb
sub
outsl
out
cs
popa
inc
mov
inc
cli
xchg
dec
mov
xor
push
sub
mov
decl
pop
aas
notb
and
jae
cmp
repnz
rcll
sub
iret
data16
in
xchg
sub
mov
popf
stc
xor
inc
adc
mov
pop
sbb
mov
add
sub
scas
push
xorl
inc
je
mov
mov
scas
cmc
add
inc
jl
subl
xchg
fdivs
sbb
dec
sbb
mov
aas
inc
jno
ja
add
xchg
xchg
pop
int
cmp
repnz
dec
and
call
mov
dec
mov
dec
test
enter
inc
lahf
xor
add
fcompp
nop
sub
jg
xor
cmpsb
stc
mov
ljmp
cld
js
and
push
jb
xlat
mov
leave
mov
test
sarb
pop
dec
movsl
xor
in
add
nop
push
aas
subl
rcr
loop
jns
shll
imul
mov
mulb
and
hlt
shlb
aam
pop
loop
cli
mov
mov
sarl
push
pop
pop
jns
sub
xor
iret
dec
mov
testl
cmpsl
push
mov
mov
xchg
mov
mov
cmpb
sahf
loop
sbb
dec
mov
inc
pop
cmpsb
sbb
mov
imul
adc
adc
cmp
sub
outsb
inc
data16
xor
cmp
sub
inc
stos
push
fdivs
and
in
pop
push
jo
mov
xor
ds
add
and
jle
shrl
lds
pop
or
ds
aad
sbb
pushf
aas
xor
pop
movsb
pop
aas
movsb
lret
lret
das
xor
dec
mov
ljmp
lea
push
sub
dec
imul
dec
xchg
cmp
inc
test
jg
aam
mov
adc
mov
mov
cs
dec
lea
in
mov
mov
adc
inc
mov
fidivl
jmp
jae
sub
jmp
or
mov
dec
mov
dec
and
xor
call
pop
sub
subl
hlt
sahf
out
scas
jecxz
xor
insl
mov
mov
sub
mov
push
ds
mov
adc
pop
adc
push
int
push
inc
leave
call
scas
mov
aaa
clc
sub
aam
mov
push
icebp
pop
jb
insl
push
push
dec
nop
jl
test
int
inc
stc
xchg
popa
dec
and
iret
xchg
aas
mov
add
pushf
and
xorl
mov
jb
push
movsb
leave
mov
adc
fbld
jg
test
inc
push
and
roll
adc
xor
xchg
push
pop
xorb
and
cmp
lcall
nop
fistl
out
imulb
mov
jbe
or
imul
xor
shlb
mov
js
xchg
jg
imul
xchg
mov
sbb
in
mov
or
dec
jo
inc
ss
xor
pop
sub
mov
pop
int3
repnz
out
lock
es
fsubrl
ss
push
inc
lock
das
insb
enter
addl
sbb
adc
ret
rorb
ljmp
into
les
push
outsb
cltd
dec
test
cmp
sub
int3
dec
mov
jp
jecxz
test
lods
fldl
mov
xlat
and
roll
xchg
add
dec
mov
fiaddl
push
ret
mov
and
cmpsb
mov
lahf
sub
loopne
out
out
xchg
sti
pop
xor
cmp
hlt
xor
pop
dec
pusha
shll
lea
dec
sbb
mov
mov
inc
leave
insl
dec
adc
data16
or
das
and
dec
sbb
dec
dec
jge
fs
and
jge
mov
mov
inc
loop
mov
fdivs
adc
out
aaa
push
scas
dec
stos
mov
pop
xchg
lods
cmp
outsl
xchg
pop
nop
jae
sub
insb
push
jmp
outsb
adc
mov
stos
call
push
dec
aad
loop
pop
or
adc
call
mov
pop
sub
outsb
in
pop
imull
xchg
mov
pop
pusha
iret
insl
leave
cmp
lds
loopne
add
adc
push
adc
sbb
scas
xor
pop
lock
jecxz
cmp
mov
fisttpl
add
push
xor
pinsrw
fistpl
cmp
lahf
cs
fcomip
cld
cmp
push
add
or
icebp
jle
add
push
xchg
inc
loop
xchg
clc
add
mov
repnz
add
dec
shrb
aam
xrelease
insb
mov
pop
push
popa
jmp
jle
pop
loop
mov
insl
mov
sbb
out
popa
lock
ret
push
cmpsb
loope
add
in
xchg
cmp
mov
mov
inc
arpl
push
repnz
pushf
cmpsb
call
sbb
test
lcall
pop
sub
adc
xchg
movsb
jno
jmp
dec
xchg
es
push
jno
inc
imul
or
sbb
nop
push
push
sub
mov
pop
and
ja
arpl
jae
xchg
add
in
test
imul
jle
xor
push
fwait
data16
inc
iret
aaa
fsubr
and
jecxz
xchg
leave
ds
mov
adc
inc
inc
pop
sbb
mov
pushf
add
xor
mov
pop
iret
and
jae
insl
nop
iret
sub
jns
imul
rcrb
adc
sahf
je
xor
faddl
mov
in
rorl
sarb
xchg
into
cmpsb
cmp
orb
scas
sub
ret
out
faddp
enter
iret
data16
movsb
xchg
sbb
mov
cmpsl
sbb
mov
jne
mov
jecxz
dec
fnstcw
flds
or
test
jnp
inc
xchg
lock
xor
imul
mov
mov
gs
test
aam
in
out
dec
xchg
adc
daa
insl
mov
ds
cmp
test
push
sub
cmp
inc
js
push
cld
pop
scas
push
xor
pop
cld
dec
mov
jg
lock
push
or
daa
jl
loopne
push
jno
lock
pop
aad
mov
addl
daa
pop
sbb
idivb
xchg
cmp
add
cmp
inc
les
pop
stos
aam
cli
icebp
push
sub
stc
es
adc
fldl
repz
sbb
test
pop
out
outsl
sarb
jb
add
lret
outsb
dec
mov
aad
inc
cmp
lea
outsl
les
js
and
lret
pushl
js
ret
xchg
mov
pop
cmp
pop
jne
cmp
imul
push
xor
js
jge
or
aad
and
inc
add
xchg
push
mov
cwtl
insb
mov
jnp
out
jae
sub
pop
push
jo
pushf
cmp
ss
aaa
mov
popa
out
push
aad
inc
lret
cltd
fstp
ljmp
or
arpl
popf
xchg
sarl
das
lods
ljmp
insb
das
pop
in
add
xchg
sbb
repz
arpl
lahf
mov
push
mov
cmp
mov
hlt
sbb
mov
insl
add
sub
adc
xchg
stc
xor
mov
pop
jg
fdivr
mov
out
roll
jmp
pop
sahf
mov
pop
jbe
and
test
and
pop
mov
cmc
adc
movl
mov
je
and
outsb
xchg
cmp
aas
xchg
jno
jle
inc
mov
fsqrt
negl
sbb
push
jns
mov
imul
pop
addl
ret
pop
push
nop
es
addr16
dec
popa
mov
iret
push
pop
mov
les
sbb
jmp
jmp
jmp
xchg
movsl
dec
loopne
repnz
mov
outsl
and
sbb
shlb
push
out
gs
enter
lock
mov
xchg
jb
mov
sar
jo
push
inc
leave
pop
pop
stc
mov
xchg
pop
sbb
fwait
cmpsl
scas
jecxz
outsb
jge
mov
pop
iret
add
in
xchg
cwtl
mov
xlat
xchg
int
data16
or
sbb
jnp
fcmovu
mov
je
or
mov
les
push
sti
mov
es
mov
fdivl
aam
in
movsb
mov
frstor
mov
aam
inc
and
mov
rcll
push
jne
cs
sub
and
daa
or
cwtl
iret
cmpsb
lods
adc
mov
xchg
xchg
mov
out
iret
hlt
push
movsb
dec
mov
shrl
lea
in
lods
movsb
popa
pop
push
jg
cmp
push
daa
sbb
or
jne
mov
sub
pop
mov
jp
mov
mov
shll
mov
push
insl
mov
andl
adc
add
scas
das
push
out
dec
push
sbb
dec
mov
cltd
adc
jo
test
jns
out
cs
lret
mov
daa
sub
push
cmp
inc
sti
cmpsl
shrb
cmp
nop
sbb
jb
bound
loop
sbb
xchg
push
leave
dec
mov
insb
fsubrs
jbe
inc
and
mov
and
dec
sub
adc
jecxz
xchg
lcall
and
jo
sub
push
dec
xchg
cmp
andl
enter
xlat
mov
out
push
out
out
lcall
cmpsb
aaa
cmp
xor
sub
or
movsl
dec
mov
icebp
int3
dec
jle
es
loope
mov
dec
xor
int
mov
or
fwait
in
jo
fs
loope
outsb
pushl
sub
out
jecxz
outsl
mov
mov
sub
lods
subl
test
cmp
cwtl
movsb
push
xchg
mov
and
pop
xor
imul
std
lds
mov
xlat
xor
sub
mov
outsb
mov
addr16
shll
imul
sbb
aad
ss
adc
push
orl
xchg
neg
movsb
pop
sub
std
mov
call
outsb
sub
mov
jns
iret
push
aaa
imul
pop
push
out
or
pop
ss
add
orb
pushf
and
add
push
lret
inc
ss
or
mov
dec
dec
dec
cmp
mov
and
mov
decl
dec
mov
xchg
mov
gs
call
cs
sbb
outsl
pusha
or
sbb
sub
fcomp
mov
xchg
shl
or
jo
jmp
adc
cli
push
or
dec
scas
aaa
jne
sbb
xor
iret
in
sub
cltd
aam
dec
insl
int
or
jns
shl
mov
cmp
cs
clc
inc
lock
mov
push
stos
xor
add
rol
sar
out
in
jp
sbb
clc
xchg
orb
das
or
inc
rorl
arpl
inc
jmp
es
cltd
popf
test
adc
lods
mov
pop
stc
rcrb
mov
out
mov
fs
pop
xchg
and
test
rolb
mov
sbb
mov
xchg
outsl
pusha
call
inc
lahf
test
push
xchg
and
jno
leave
bound
sarb
int
jno
push
aam
mov
out
xor
mov
sub
movsl
stos
inc
sbbb
dec
in
or
xchg
call
pop
loop
mov
sub
icebp
fmuls
add
popf
popf
mov
inc
outsl
or
dec
lea
jmp
mov
mov
inc
scas
idivb
mov
mov
arpl
imul
jns
idivl
sarb
push
inc
outsb
ficomps
out
cmp
jecxz
dec
mov
cltd
mov
push
pop
sub
loope
imul
jmp
mov
jge
les
xchg
mov
jns
stos
inc
sbb
jns
pop
gs
lods
iret
xor
stos
xor
jl
gs
fidivs
in
stc
repnz
sub
xchg
dec
xchg
add
jo
and
push
xlat
cmp
dec
push
pop
mov
xor
cmc
or
pushl
lock
mov
popf
fdivs
inc
xor
lret
dec
ljmp
sbb
cmp
sub
cmp
and
pop
repz
xor
jp
mov
pusha
mov
jbe
xchg
js
imul
add
enter
cli
leave
js
lret
movsl
arpl
ljmp
mov
mov
cld
dec
mov
cmc
insb
mov
mov
jecxz
mov
add
cwtl
push
icebp
stos
add
ret
out
enter
sahf
sbb
push
fs
mov
pop
pop
add
inc
mov
jo
clc
stos
testb
jl
pop
inc
mov
rorl
mov
aam
sahf
mov
imul
mov
in
movsl
pop
mov
sub
inc
xchg
xchg
and
and
xor
lret
test
add
movsb
jge
pop
push
mov
mov
ds
hlt
fnstenv
mov
add
mov
mov
aaa
jne
push
outsb
ret
pop
insb
in
add
scas
dec
inc
inc
sub
out
leave
add
pusha
cmp
sahf
adc
dec
rorl
lret
lods
adc
jecxz
dec
lods
mov
stos
push
mov
rorl
loope
into
mov
push
push
pushf
mov
insb
cmpsl
xchg
loopne
test
push
insl
dec
dec
mov
shlb
inc
and
ss
in
dec
dec
cmp
push
pop
fimuls
mov
popa
repz
daa
hlt
pop
daa
add
mov
cmp
push
aas
sti
add
imul
mov
insl
dec
dec
mov
loope
aad
loope
cmp
push
dec
xor
pushf
nop
fidivrs
imul
cmp
cld
popf
add
stc
dec
xchg
inc
and
mov
fdivrs
pop
xor
lcall
mov
jl
in
jo
mov
inc
inc
push
scas
int
test
adc
test
out
scas
add
aad
xlat
add
mov
cltd
mov
into
repnz
test
push
pop
lret
shrb
rcll
pop
mov
sbb
pop
sub
ljmp
mov
or
adc
adc
push
ljmp
lods
cmp
aam
es
imul
jl
push
scas
push
aam
es
or
pop
sbb
jb
in
xor
pop
out
sub
jbe
cmp
xchg
fxch
pop
pop
gs
mov
roll
inc
lea
out
dec
xchg
inc
data16
or
pop
cs
mov
popf
movsl
das
inc
xchg
inc
clc
pop
cmp
jge
push
flds
rcr
rcll
test
icebp
adc
addb
xor
and
mov
jns
sbbl
sub
push
push
jle
js
sbb
mov
adc
cmp
mov
cmpsb
subl
mov
call
jmp
mov
push
jle
cwtl
jmp
sub
andb
xchg
insl
adc
ss
testl
repz
into
cmpsb
cltd
xor
jae
pop
mov
dec
popa
testl
imul
das
repz
ds
rol
cmpsl
repnz
dec
jbe
jno
mov
fsubrs
mov
mov
or
inc
jmp
add
xchg
mov
mov
shlb
mov
xchg
test
add
pop
bound
aam
push
sub
xor
mov
loopne
mov
mov
mov
jmp
addr16
pushf
les
pop
pop
out
mov
and
push
xchg
pop
adc
shll
mov
push
out
push
loope
and
add
shl
shrb
and
loopne
arpl
xor
inc
sbb
pop
mov
lods
xor
movsl
mov
jo
push
xor
bound
xlat
xchg
lcall
lods
dec
lods
xchg
mov
into
jo
in
nop
leave
shl
insb
bound
scas
pushf
outsb
sub
xor
add
cmpsl
cmp
add
pop
sbb
inc
push
in
test
mov
push
xor
loope
mov
xchg
mov
test
shlb
out
inc
iret
mov
shll
cwtl
and
dec
ja
aaa
pop
fwait
pop
adc
dec
cli
pop
add
sub
inc
pop
jle
cmc
sbb
adc
cmpsl
jnp
jl
aaa
sub
and
xchg
cld
out
mov
mov
jno
icebp
in
mulb
inc
test
lds
movsb
test
sbb
sbbl
mov
sbb
mov
inc
push
push
popf
es
xor
test
cmp
push
or
push
and
cmp
scas
or
mov
pop
es
into
cmp
or
js
inc
and
cmp
push
leave
cmpsl
push
inc
mov
fs
std
cltd
cmpsl
xor
or
xor
mov
aaa
leave
bound
pushf
xor
jg
adc
mov
mov
mov
jo
aad
xlat
sub
pop
mov
popa
sbb
push
loope
stos
lock
push
sahf
add
bound
das
or
pop
repz
in
scas
test
jns
push
lea
clc
mov
lock
gs
xor
rcrl
rolb
or
xor
xor
and
aam
sbb
in
jp
adc
dec
adc
in
sbb
xchg
sbb
aam
fstpt
sahf
sbb
push
xor
addr16
test
mull
dec
push
lcall
iret
adc
xchg
inc
pushl
loopne
sahf
filds
jnp
cmc
jmp
roll
stos
mov
enter
mov
popf
sbb
imul
xchg
mov
int
xor
lds
mov
dec
xchg
je
push
mov
nop
lods
clc
in
mov
loop
add
adcb
pop
jae
divb
je
xlat
fildl
xor
into
dec
leave
jecxz
cwtl
lret
push
sbb
xlat
setns
adc
mov
dec
cmp
fdivs
ret
jno
in
push
push
or
sub
inc
std
mov
sti
xchg
pusha
sbb
in
xor
jl
jl
pusha
stc
mov
sbb
xchg
out
pusha
mov
mov
push
xor
daa
fsub
xorb
lahf
xor
lock
mov
call
pop
aam
rolb
push
inc
das
sub
fsubs
leave
mov
ret
mov
inc
push
push
jmp
xor
stc
aam
cmpsl
inc
jmp
fsub
sbb
xchg
or
inc
mov
push
pushf
movsb
stos
fadd
jg
cmp
push
cmp
sbb
jnp
add
out
subl
pop
pop
in
sub
add
cmp
mov
lea
jnp
das
or
cs
popf
push
insl
arpl
and
sbb
and
imul
xor
fbstp
fldl
xor
pushf
or
ljmp
inc
repz
inc
mov
cmpsb
sbb
sbb
or
sbb
xchg
xchg
aad
pop
mov
ljmp
aam
mov
add
into
inc
popa
out
sbb
mov
aaa
inc
mov
jns
in
mov
into
sbb
out
insb
or
cmp
clc
movsl
fcmovnu
inc
lods
pop
xor
lea
movsl
adc
add
lods
rorb
call
sbb
push
jmp
add
in
adc
lods
adcb
fcomps
mov
adc
push
adc
cmp
pop
xor
les
pop
dec
xchg
movsb
mov
dec
mov
jge
push
loop
dec
aaa
out
xor
dec
sub
lahf
mov
testb
ret
push
fwait
jge
jmp
call
ret
inc
and
insb
imul
lahf
test
imul
in
dec
ja
lock
xlat
pop
pop
inc
pop
leave
add
add
dec
ss
test
mov
mov
in
jge
call
outsb
mov
aas
mov
mov
idivb
pop
pusha
fwait
icebp
xor
movl
jns
stos
xchg
adc
les
cs
outsl
cmp
stos
stos
pop
dec
out
add
test
ret
je
mov
xchg
shlb
push
aam
insb
neg
push
fldt
adc
push
cmp
jne
mov
pop
out
jns
inc
js
push
jno
inc
fstpl
sub
movaps
pop
not
imul
movsl
out
jb
inc
jp
dec
outsl
add
inc
pushf
lds
sub
jg
pop
inc
scas
mov
or
mov
add
add
clc
popa
sbb
cmp
xor
ret
ds
sbb
jle
ficompl
out
fldenv
mov
repz
sbb
adcb
jmp
sub
int
in
mov
imul
es
push
pop
jbe
sub
gs
jle
movsb
jg
sub
stos
jmp
sub
fs
test
cmp
push
mov
lods
incb
dec
imulb
xor
repnz
ljmp
out
sti
xor
add
gs
or
mov
adc
lds
loopne
push
cmc
stos
movsl
jns
add
mov
hlt
xor
pusha
fsubrs
mov
jmp
push
or
fisubrs
into
push
push
push
xchg
inc
push
int
xchg
pop
xchg
fisubrs
ret
cmp
add
scas
lret
mov
cli
mov
cmp
out
mov
jns
lds
cltd
push
mov
sub
imul
push
pop
jp
jge
loop
dec
and
dec
lds
loope
fwait
movsl
pop
add
mov
sbb
and
sbb
xchg
aad
lds
shll
pop
cli
pop
sti
scas
popf
dec
sbb
adc
add
lret
jecxz
pushl
hlt
daa
pop
mov
xlat
nop
mov
push
sbb
dec
movsl
dec
stos
inc
pop
lods
jae
xchg
out
in
rcl
xchg
jp
test
xchg
add
lret
adc
insb
adc
mov
lcall
jb
inc
pusha
mov
inc
jp
sbb
cmp
ficoms
fs
loope
lcall
fistl
sbb
sarl
call
pop
sbb
adc
mov
or
push
mov
aas
jbe
mov
call
mov
fistl
les
and
mov
dec
test
push
in
mov
dec
or
inc
fnstcw
add
xlat
aas
loopne
add
xchg
repz
adc
dec
add
sbb
pop
in
jo
push
lds
rcrb
cmp
pop
push
add
xchg
rorl
jg
mov
and
mov
imul
mov
push
dec
sti
jb
adc
and
imul
stc
lock
divb
dec
lods
das
xor
xchg
cmp
inc
pop
pop
negl
stos
negb
jnp
aas
jae
insb
movb
xor
sub
popa
notb
and
pop
fcmovnu
dec
clc
rolb
dec
loopne
mov
add
fnstenv
dec
jns
dec
ja
sbb
movsl
dec
xchg
dec
cmpsl
rclb
aaa
jle
push
in
push
dec
pop
ljmp
jge
xlat
push
rolb
scas
pop
push
movb
adc
jge
add
flds
jnp
xchg
pop
and
inc
lods
shr
mov
sbb
xor
sub
jge
pop
xchg
and
sbb
mov
cmp
int3
mov
sti
jecxz
adc
adc
test
shlb
xor
mov
sub
xchg
imul
mov
xchg
xor
or
jne
add
adc
sub
fists
aam
out
fdivrs
jg
mov
cwtl
aad
rclb
pop
stc
loopne
cmpb
add
fistl
add
xor
mov
sub
sub
jle
xor
jmp
dec
cld
jecxz
sbb
xchg
sub
shll
ljmp
dec
jg
or
sub
mov
pusha
add
and
mov
sahf
and
add
imul
frstor
imul
dec
xor
fdivs
jbe
je
daa
out
pop
dec
loope
and
cmp
outsl
sbb
dec
loopne
hlt
mov
jno
aam
mov
and
push
or
addl
xchg
jo
adc
lea
fmull
sub
mov
pop
pushf
pmaxsw
movsb
add
push
adc
push
idivb
pop
cmp
dec
popa
fstpl
out
sub
je
push
jg
jp
loop
inc
xchg
pop
movsb
cli
push
test
repz
dec
shlb
mov
insb
out
jnp
adc
stc
and
js
add
mov
mov
out
mov
mov
sarb
xchg
call
dec
mov
pop
int3
sub
or
incb
in
jmp
out
sbb
sub
clc
sti
sbb
in
out
mov
aam
ret
es
clc
gs
sbb
nop
jae
xchg
mov
mull
mov
mov
mov
sbbb
enter
xchg
adc
loopne
imul
aam
test
xor
adc
sub
pop
xchg
pop
and
pop
dec
pusha
mov
sub
inc
ja
sub
rcr
movsb
fs
aas
rclb
sbb
fs
stos
insl
jbe
outsb
out
psrlq
jle
push
in
mov
test
jmp
loopne
leave
xchg
repz
dec
add
and
inc
add
push
popa
in
fisttpl
xchg
push
and
cs
inc
stc
adc
mov
pop
cli
sbb
add
xchg
add
loop
enter
mov
lods
mov
mov
lea
negb
ds
mov
ja
and
dec
pop
lea
inc
sbb
add
into
and
fdivl
pop
inc
out
sbb
sub
sub
popf
adc
cmc
arpl
mov
jg
mov
lret
mov
pop
lds
mov
out
mov
push
enter
adc
ss
outsl
stos
call
adc
repz
jge
cmp
out
mov
xchg
pop
jmp
test
or
fadd
mov
xor
pusha
ret
or
sbb
movsl
subl
add
push
xchg
aaa
or
xchg
add
inc
pushf
inc
push
orl
frstor
bnd
jo
cltd
int
adc
mov
fbstp
cmpsb
xlat
stos
pop
xor
sub
sub
pop
mov
mov
aas
mov
jecxz
lret
pop
and
ja
dec
mov
add
aas
mov
push
mov
push
push
pop
cs
jl
cmc
fs
lods
sbb
div
sub
outsl
sbb
pop
test
cli
rclb
lret
mov
into
pop
jmp
lea
mov
xchg
loop
adc
pop
scas
cld
lret
jecxz
in
hlt
mov
push
dec
out
inc
icebp
push
cltd
dec
fstpl
jmp
lods
movsb
int
or
cmp
mov
ss
mov
gs
lds
mov
sti
lcall
xchg
das
mov
cwtl
pop
adc
aam
movb
push
mov
ljmp
imul
mov
stos
cs
push
rcrl
lcall
fbld
add
out
pop
cmp
dec
fs
popf
movsl
push
jle
adc
dec
sbb
in
sbb
add
daa
mov
mov
mov
jg
adc
cmp
repnz
cmpsb
mov
lret
push
pusha
cmp
int
sub
mov
add
sub
pop
sub
fstpt
dec
adc
scas
nop
fidivrs
inc
shr
lcall
andb
mov
popa
out
gs
icebp
jo
jmp
push
add
stos
pop
sbb
rorb
aas
add
inc
je
ficomps
into
inc
sub
adc
xchg
ljmp
pop
add
adc
addr16
jmp
inc
call
fneni(8087
je
sub
jns
loop
or
mov
inc
or
stos
mov
out
pop
lods
adc
xchg
stos
pop
adc
mov
incb
fwait
or
and
out
xorl
or
adc
sub
lods
or
lods
push
std
push
add
daa
pop
mov
jge
jae
dec
mov
in
mov
es
mov
and
cmpsb
lcall
push
iret
jg
xor
fldl
test
lret
mov
fwait
pop
lret
cmp
int
push
xor
ret
or
leave
test
fmul
cltd
jbe
jmp
lds
sarl
xchg
sahf
jecxz
xchg
dec
push
js
mov
push
sub
jbe
lods
push
insl
add
mov
imul
xchg
outsl
add
ja
jo
scas
daa
cmpl
sub
imul
jo
cmpsb
ja
fildl
xlat
imul
nop
pop
inc
pop
push
jg
xor
jo
xchg
push
dec
add
and
pushl
mov
xchg
loope
adcl
xchg
xchg
dec
push
or
sub
mov
xchg
lods
out
and
and
aam
movsb
test
mov
stos
and
fnstenv
adc
sub
xchg
out
add
mov
mov
enter
jmp
ljmp
pop
or
cmpb
adc
inc
cmpsb
int
rcrb
stos
adc
fcoms
dec
lret
fstpt
iret
push
cli
jge
jmp
fistps
push
cli
and
into
into
xor
fcomip
cmp
fimuls
mov
xchg
mov
pushf
sbb
jno
shl
inc
dec
repnz
jno
push
xorb
outsl
mov
push
xchg
xchg
push
mov
mov
shll
cwtl
in
xchg
fs
push
push
cli
dec
xchg
dec
and
out
jno
mov
xchg
les
ds
xchg
and
out
jp
inc
lret
js
negb
jl
mov
add
xchg
xchg
ret
dec
loop
ljmp
mov
dec
enter
cmp
xchg
in
loop
jne
sbb
pop
sub
jae
insb
arpl
ds
shll
sbb
or
mov
into
jg
js,pt
cs
gs
cmp
pop
mov
adc
jg
mov
pushf
and
bound
lret
jp
sbb
push
adc
popf
popf
lods
add
push
inc
sahf
jbe
push
cld
lcall
mov
gs
sbb
hlt
xchg
xor
add
cwtl
jne
adc
loopne
out
xchg
sub
les
xlat
into
pop
repz
pop
sbb
cmpsb
inc
jge
sbb
jne
out
in
add
pop
js
js
cmp
push
iret
sub
jno
push
cmp
or
cmc
ds
test
and
pushf
xor
push
incb
inc
scas
cmp
cmp
rcll
pop
adc
add
dec
xchg
shl
add
gs
lods
mov
fwait
pop
sti
pop
icebp
fiadds
stos
jnp
popf
xchg
flds
and
or
mov
popf
rorb
addr16
outsb
jle
inc
call
lret
clc
push
cli
lcall
mov
inc
cmpsl
mov
mov
out
into
fistpll
rcll
sbb
cli
sbb
je
int
cwtl
and
xchg
mov
push
dec
push
sbb
sbb
mov
imul
out
add
or
rol
push
xor
cs
imul
jb
jle
aam
daa
cmpsl
cmpsl
xchg
std
jecxz
clc
xor
jp
pop
test
ucomiss
push
sub
cld
loope
test
js
test
movsl
movsb
movsl
push
stos
mov
stc
cwtl
jp
loope
lock
pop
xor
test
icebp
cmp
shr
xchg
add
lret
mov
cli
sub
xchg
sub
in
mov
mov
xlat
gs
adc
fdivp
jp
jbe
insb
fistpll
push
pop
test
ficompl
shrl
lret
sbb
jle
cmp
dec
pushl
mov
int3
arpl
xor
pop
xlat
mov
sbb
push
push
movsb
and
push
stos
in
fistpll
rep
aaa
dec
inc
adc
fs
jecxz
pop
sub
ret
nop
test
sub
ljmp
or
nop
mov
ror
xchg
mulb
lret
ljmp
cmp
mov
test
xlat
pop
pop
ret
cmpsb
jmp
shlb
icebp
inc
xchg
xor
mov
movsb
add
mov
mov
mov
xchg
mov
jp
push
jl
xchg
jmp
push
iret
inc
ret
aas
xlat
icebp
and
test
jecxz
cmpb
sub
xchg
cli
or
dec
or
lock
shll
aas
push
je
sti
push
add
mov
into
cmp
jl
ss
fmul
loopne
lcall
mov
sub
push
jno
repnz
jnp
and
idiv
jge
pop
hlt
cmpb
cmpsl
push
test
mov
fisttpll
xchg
cltd
jns
adc
and
out
add
pop
mov
cmp
test
add
jns
ds
push
into
lret
pop
loopne
in
mov
pusha
mov
mov
outsb
movsb
mov
daa
push
dec
push
dec
in
fwait
vpsraw
pop
add
test
div
jmp
in
jmp
sahf
adc
sahf
shlb
cmc
dec
inc
pop
sahf
gs
pop
and
sub
mov
test
test
es
pushf
inc
sbb
adc
or
out
outsb
notb
test
or
aad
push
ljmp
push
pop
loop
push
inc
cld
jge
pop
cltd
addr16
xchg
xchg
inc
rorb
or
popf
or
movsb
cmc
adc
cmp
fidivs
push
mov
mov
cmp
xor
shrl
std
push
adc
cltd
push
adc
jmp
int3
pop
push
jle
add
out
adc
lock
jg
ja
test
in
adc
jp
cs
and
sub
fsubrp
loope
test
push
fs
xlat
fcomp
dec
and
xchg
fidivrs
pop
insl
mov
pop
jbe
push
outsb
pop
pop
lret
aam
test
push
sbb
ljmp
mov
inc
ljmp
jl
push
mov
push
push
aaa
jl
add
repnz
into
inc
or
pop
jne
and
das
rclb
mov
and
hlt
dec
mov
test
or
adc
pop
mov
mov
frstor
mov
xchg
mov
and
xchg
pop
mov
outsl
ja
xchg
mov
or
and
mov
pusha
inc
hlt
or
push
mov
cmc
sub
xor
xchg
or
lea
pop
rcll
xor
sub
or
push
xor
in
sti
cmp
out
dec
sbb
lcall
dec
leave
movsl
cmp
cmp
ficompl
and
dec
je
shrl
popa
int3
or
pop
bound
pushf
aad
and
mov
mov
cmpl
scas
adc
inc
cmp
addr16
into
fadd
jns
add
sti
pop
call
sbb
dec
sbb
cmp
push
inc
call
and
or
shlb
dec
jp
mov
push
sub
inc
sub
dec
add
gs
pop
fs
dec
pop
inc
add
jns
add
test
cmpsb
les
pop
jbe
add
ret
repz
adcb
pop
lahf
aaa
pop
in
jno
sub
or
push
dec
loop
outsb
inc
aas
test
adc
sarl
clc
dec
js
or
sbb
xchg
popf
test
xchg
mov
ret
jns
sar
iret
ss
pop
cmpsb
jo
sub
inc
into
in
push
cmp
scas
ret
jecxz
add
add
dec
sarb
sbb
ss
and
inc
cmpsb
mov
add
sbb
xor
dec
rolb
jne
xchg
mov
cmpsl
jle
data16
jmp
cmp
inc
in
mov
fdivl
xlat
lods
lret
jae
out
outsl
inc
dec
movsl
pop
ja
imul
test
xor
mov
lods
jl
js
adc
mov
push
mov
ljmp
cmpl
mov
into
cmp
in
mov
sbb
dec
pop
lea
adc
mov
inc
xor
adc
xchg
xlat
sub
push
and
cmpsl
cmp
mov
cmp
inc
stos
test
fimuls
pop
pop
dec
outsl
gs
popa
xor
rol
cmp
push
jae
or
and
xchg
lret
cmc
je
ljmp
lret
fimull
jmp
int3
pop
lret
lret
cmpl
popa
sbb
cmc
add
int3
xchg
xchg
jg
push
pop
xchg
sbb
and
dec
cmp
pop
xchg
sahf
out
test
lldt
outsl
push
mov
bound
mov
jmp
sub
fnstsw
jmp
js
or
test
jbe
pop
outsb
add
mov
fwait
xor
aas
shr
cmp
ret
pop
shl
and
xchg
adc
fcoml
int3
or
in
lock
push
mov
inc
in
mov
in
stos
pop
fwait
sub
shl
xlat
in
jno
test
fstpl
sahf
add
cmp
add
loope,pt
pop
fprem
mov
add
xchg
push
arpl
imull
decl
lret
and
mov
imul
outsl
popa
test
nop
shrl
sbb
jae
popa
sbb
add
pop
jns
cmc
jecxz
vmwrite
push
mov
sahf
mov
dec
sub
mov
pop
into
add
hlt
sub
push
in
test
xchg
inc
jno
repz
lahf
sub
daa
sbb
pop
out
inc
push
pop
out
ret
daa
pop
ret
rcrb
adc
and
jae
sbb
sar
adc
outsb
sbb
sub
xchg
or
sbb
sub
mov
cmp
xor
jle
call
xor
cli
xor
push
aas
aam
pop
enter
out
pop
aas
mov
pop
dec
xor
lcall
sub
cmp
ret
jnp
push
jp
ret
mov
mov
clc
mov
mov
dec
xor
and
xor
fidivs
insb
andb
push
xchg
inc
inc
mov
icebp
rolb
mov
sti
and
stos
jbe
xor
mov
std
or
xchg
fisubrl
push
dec
adcb
cmpsl
mov
cmc
clc
mov
insl
cld
fldt
mov
push
sbb
sbb
add
lcall
sub
sbb
icebp
gs
xor
and
jp
add
in
or
testb
je
inc
and
nop
pop
mov
cwtl
dec
movb
jecxz
sbb
hlt
lahf
insl
and
ja
fstl
cmp
and
sbb
out
add
mov
add
negl
insb
sbb
mov
xchg
ret
mov
and
cmpsl
ss
aas
jnp
mov
dec
cmpsl
add
add
pop
xchg
fstpl
fdivr
out
das
repnz
sbb
dec
hlt
or
mov
icebp
sbb
aaa
out
ja
pop
std
adc
mov
test
jle
or
jns
call
pop
cmp
loope
jl
movsl
ljmp
xor
xorb
mov
xchg
inc
jb
xchg
popa
cmp
scas
inc
push
adc
lsl
xor
jge
shrl
fsubrl
lret
or
sbb
mov
fdivl
sbb
repnz
lock
sbb
mov
outsl
es
ljmp
lahf
mov
dec
xchg
xchg
jb
out
es
dec
cmc
pushf
lret
cltd
xor
sbb
cmp
out
add
dec
lret
jge
loope
dec
xchg
cld
aaa
fstps
dec
add
inc
cmpsl
loop
and
inc
add
mov
or
mul
rcll
pop
outsl
sahf
mov
rclb
sahf
shl
sbb
movsb
mov
mov
push
xorb
pop
stos
sub
jno
outsb
mov
imul
adc
int
mov
adc
push
daa
mov
mov
mov
hlt
outsl
or
inc
push
xor
push
mov
test
dec
mul
es
inc
push
ja
pushf
jne
rcl
int
jne
in
pop
xchg
adcb
loope
cs
imul
scas
xor
sbb
push
or
adc
mov
jae
sbbl
xchg
xor
mov
icebp
jns
xor
loopw
inc
add
rcrb
scas
imul
in
negb
mov
push
pop
cmp
sbb
iret
xchg
out
jne
mov
mov
in
sbb
inc
inc
stos
js
mov
or
fldl
lds
push
sbb
pop
dec
and
sub
mov
dec
call
lods
jge
loopw
out
in
mov
sbb
imul
pop
test
lea
cwtl
arpl
aaa
inc
lahf
mov
int
sti
jl
stos
roll
push
dec
or
xor
and
xchg
push
test
mov
icebp
pop
sub
inc
sub
jno
movsl
sbbl
lret
scas
ja
lods
ljmp
cmp
add
push
mov
out
adc
clc
mov
lds
stos
mov
sub
jo
arpl
lock
stc
iret
mov
sub
mov
pop
mov
cwtl
inc
imull
adc
out
lods
fcmovne
and
fwait
cmpsl
cwtl
daa
add
sbb
or
jne
jmp
xchg
fisubrl
outsl
adc
lock
cmp
jle
stc
aad
jb
fimull
and
mov
lods
xor
mov
jge
aam
notl
pop
mov
cmpsb
add
xchg
insb
paddb
fdivr
sbb
out
icebp
bound
jg
int3
inc
mov
scas
icebp
lcall
xor
adc
xorl
mov
hlt
inc
or
stc
add
xor
or
pusha
stos
int
out
stc
je
or
jge
mov
add
stos
add
in
push
addr16
xor
dec
mov
std
and
inc
test
loop
sbb
push
push
dec
xchg
out
push
dec
or
mov
lret
and
pop
std
sbbb
sub
lret
sbb
pop
push
add
push
sbb
call
movsl
push
dec
fwait
jg
icebp
cwtl
and
bound
dec
in
dec
mov
sbb
sub
xor
push
xchg
pushf
lock
adc
test
sbb
jmp
lcall
push
or
loop
add
mov
fstpl
xchg
insb
arpl
xor
int3
int
lock
mov
pop
mov
in
fwait
mov
xchg
sbb
mov
jmp
jecxz
repnz
or
lahf
out
push
push
jge
loopne
das
push
push
cltd
add
dec
aam
adc
mov
rorl
jo
push
fs
or
jns
aad
jns
adc
bound
xchg
xor
and
movsb
push
stos
leave
push
insb
push
push
aas
lea
jno
jmp
mov
shlb
jg
sbb
cmp
cmpsl
cmpsb
push
ret
or
jmp
pop
out
mov
aam
mov
xchg
lea
dec
push
mov
out
ljmp
ja
xchg
xchg
sti
scas
in
mov
jo
or
push
xlat
out
jo
icebp
mov
sbb
incb
outsb
fisttps
rorb
ds
push
insb
xchg
adc
nop
push
mov
jne
pop
push
roll
and
or
add
loopne
sub
call
fs
enter
push
movsl
lods
rolb
cli
mov
call
xchg
stos
adcl
pop
ja
dec
sahf
xchg
pusha
jbe
cmp
adc
lock
push
xchg
lods
mov
daa
xchg
sub
push
push
fs
push
jg
and
aas
fiadds
xchg
test
outsl
in
loopne
pop
xchg
nop
stos
mov
lods
xlat
outsl
nop
cmp
lret
pop
out
or
fwait
inc
sbb
jne
dec
add
lahf
and
in
lahf
xchg
aam
popf
nop
push
mov
xor
cltd
cltd
xor
xchg
hlt
stc
mov
mov
and
test
idivb
jnp
enter
jp
xor
lahf
cs
icebp
or
push
scas
outsb
mov
rcl
mov
in
mov
cwtl
sub
xchg
sbb
jne
aas
lds
lahf
mov
lods
daa
mov
push
cmc
das
movsb
aaa
lret
out
dec
adc
lcall
pusha
out
aam
jo
push
and
xchg
xchg
sbb
insl
ljmp
cmp
scas
sbb
jbe
jp
ret
test
icebp
fmuls
push
pop
inc
addr16
lea
cld
cltd
mov
fwait
sub
push
mov
clc
or
ds
lock
test
inc
adc
aas
adc
out
ficoml
aam
and
pop
push
mov
xor
out
sub
sbb
rcrl
inc
sahf
mov
pushf
push
cmc
es
xor
lahf
mov
hlt
adc
push
pop
lods
mov
fnstenv
inc
mov
sub
jno
fsubl
out
pop
pop
js
and
jl
lds
test
xor
jg
push
fadd
mov
pop
add
stc
pop
or
dec
sub
inc
movsl
sbb
sbb
in
imul
inc
imul
push
das
mov
cmp
jg
shlb
jns
out
cs
and
sub
xor
pop
arpl
xchg
dec
inc
push
out
sub
sub
or
add
pop
stc
jb
popf
cwtl
mov
outsb
lock
test
sahf
fmull
test
out
mov
jg
mov
lods
mov
or
insl
sbb
in
inc
loopne
cmp
jnp
sub
push
or
mov
xchg
or
imul
push
inc
shlb
mov
data16
cmc
movsb
push
mov
repz
cmpsb
call
and
nop
xchg
sbb
pop
jbe
iret
xchg
xor
inc
pop
adc
cmp
xchg
arpl
adc
add
mov
shrl
cmc
das
inc
jae
jl
add
push
pop
mov
pop
pop
jle
in
call
xor
out
loopne
insb
add
jo
pop
xor
push
push
sbbl
test
sti
stc
push
fmul
cmp
jb
push
inc
jmp
aad
ss
pop
and
int
ja
loop
js
fucomp
rcl
push
mov
data16
mov
int
mov
xchg
aas
push
or
pushf
pop
jp
in
ds
or
inc
pop
lds
jmp
push
lret
iret
mov
lods
lods
shlb
lods
mov
xchg
aam
jnp
adc
and
adc
jmp
add
ficomps
sbb
imul
add
clc
lret
xchg
in
mov
push
xor
mov
int
sub
stc
mov
sahf
aad
or
movsb
pop
ret
pop
repz
jae
cld
mov
loope
push
mov
sub
and
dec
or
push
mov
sbb
fsub
pop
dec
jecxz
imul
xchg
jns
cmp
cmpsb
lcall
ds
and
repz
inc
cld
jns
pusha
mov
popa
mov
mov
mov
movsb
cli
punpckhdq
mov
in
xor
fsubr
fiaddl
xchg
inc
adc
ljmp
cmp
in
dec
xor
outsl
dec
pop
dec
push
and
es
std
pop
jo
push
xchg
inc
out
movsl
ret
adc
inc
imul
out
cmp
arpl
loope
das
nop
adc
es
loope
jne
lcall
sub
add
mov
fildl
daa
movsb
inc
pop
sub
jp
scas
add
hlt
push
mov
imulb
sub
jnp
arpl
ds
adc
or
sbb
pop
xchg
testb
or
dec
and
cmp
popa
call
inc
add
or
aam
lock
lods
add
pop
sbb
add
xchg
push
push
xchg
dec
das
push
dec
sub
mov
xchg
sbbl
mov
push
jge
out
imul
dec
or
xchg
addr16
jmp
ljmp
loop
lea
push
lret
and
xlat
mov
loope
enter
shll
out
insl
stc
lock
and
cmp
fistpl
pop
and
sub
cmp
add
add
nop
out
jbe
adc
fsub
push
mov
pop
jo
je
dec
mov
jbe
ret
mov
and
sti
repz
in
cmp
jae
xlat
sub
fcoms
cmpsb
int
jecxz
lcall
shlb
dec
in
ja
mov
out
ret
iret
mov
in
pushf
call
add
test
bound
stc
insl
fs
mov
fcmovnu
faddl
je
test
pop
jmp
pop
repnz
xorb
das
or
mov
enter
inc
cmp
xor
scas
and
mov
data16
lcall
or
push
or
xor
mov
scas
cmp
stos
sti
dec
or
push
mov
jle
jno
sbb
addb
add
mov
stc
mov
hlt
ljmp
int
add
in
jne
lods
fidivrl
inc
subb
or
push
adc
in
mov
test
movsl
jp
push
fildl
enter
jb
sbb
scas
sbb
mov
jp
jnp
cmpsl
addr16
xchg
fnstenv
and
out
or
mov
sarb
inc
in
jecxz
inc
and
xchg
jl
sbb
xchg
test
cmp
ss
dec
push
inc
bound
add
sbb
ljmp
inc
sbb
mov
jge
cmp
pop
and
lods
xchg
mov
add
in
inc
lahf
fwait
mov
bswap
push
sbb
push
sub
in
outsl
adc
lds
int
ficompl
adc
ret
add
fwait
sbb
cmp
scas
xchg
jle
cmpsl
jo
push
mov
cld
addr16
or
aaa
gs
or
push
loop
js
lods
imul
pop
in
ret
das
iret
inc
xchg
pusha
dec
shlb
or
sti
pop
xor
repz
inc
dec
mov
pop
sub
in
jbe
movsl
notb
pushf
push
pop
push
nop
outsl
lock
adc
xor
fstpt
js
lret
lock
xchg
push
out
clc
sub
enter
cli
into
dec
pop
movsb
mov
clc
cmp
jge
mov
fstpt
adcl
outsl
setnp
or
or
mov
sarb
and
adc
movsl
ret
mov
dec
lret
sarl
lods
or
xchg
add
xor
cmpl
dec
dec
add
jbe
mov
jno
je
jae
scas
pop
pop
mov
ret
popa
jmp
jecxz
inc
andl
add
lea
outsb
cmp
mov
out
pop
loope
out
dec
mov
inc
aad
pop
aad
lret
jnp
in
sub
push
shrb
inc
cwtl
pop
sbb
inc
xchg
daa
xor
imul
pop
and
das
mov
dec
push
sbb
pop
lahf
leave
xor
cmp
sbb
sub
xchg
dec
or
lds
cld
dec
mov
mov
add
in
loope
jne
int
sbb
fs
cmc
aam
imul
pop
sbb
ret
jb
mov
les
movsb
cmp
mov
xor
repz
and
and
inc
das
ja
mov
pusha
mov
pop
ror
xchg
cmp
imul
mov
cmp
aaa
popa
movsb
aas
xchg
sahf
mov
aas
xchg
or
je
sarb
pop
icebp
pusha
adc
jb
imul
lahf
paddusw
add
push
aas
imul
sar
sub
mov
in
push
pop
pop
adc
jo
divl
cmpb
in
cld
repz
sbb
pop
push
and
pop
push
cwtl
ret
xchg
cmpsl
dec
mov
dec
inc
das
test
inc
push
and
xor
and
not
test
mov
mov
ficoms
cmp
mov
movsb
jns
imul
mov
xchg
shlb
push
pop
cmp
test
add
adc
sub
cmc
sbb
int3
int
subb
aad
icebp
mov
jo
push
cmp
mov
push
lock
mov
test
lcall
loope
xchg
pop
mov
adcb
dec
push
mov
dec
je
push
lock
dec
adc
and
scas
jb
and
xor
pop
mov
jl
shl
adc
and
icebp
pop
loopne
xor
inc
jmp
cmp
ja
cmpsb
xor
outsl
xchg
inc
sbb
and
pop
jmp
mov
sub
xchg
aam
lds
fmuls
cmp
adc
lcall
inc
std
jle
adc
lcall
into
hlt
mov
test
xchg
fistpll
sbb
stos
and
icebp
arpl
sbb
nop
adc
xor
inc
jecxz
adc
jno
cli
mov
clc
dec
movsb
in
sub
xlat
jae
fisubl
sub
cltd
popa
sbb
adc
adc
mov
and
or
mov
xor
push
push
push
jmp
dec
cs
push
adc
std
jb
stos
stc
or
jb
mov
adc
mov
jo
sub
data16
mov
and
xchg
cmpsl
inc
xor
ret
xor
test
mov
xchg
icebp
sbb
add
xchg
fisttpl
push
mov
adc
lock
shr
lcall
lret
xor
mov
int3
pop
ss
je
cs
lret
jbe
icebp
daa
mov
mov
jmp
in
mov
aad
mov
ret
dec
mov
das
push
cwtl
push
adc
add
sbb
xchg
es
inc
lods
push
jns
dec
add
or
movsb
jnp
xor
into
pop
cmc
add
xchg
mov
icebp
adc
push
sbb
pushf
rorl
fisubrs
movsl
cmpsl
in
int
pop
lods
cmpl
mov
push
pop
mov
stos
shr
lods
rolb
shlb
pop
loopne
mov
adc
push
stos
repnz
mov
sbb
rcrb
fildll
jno
mov
cmpsl
mov
mov
stc
sti
adc
sbb
fs
sub
sbb
push
pop
sub
sbb
pop
push
repz
mov
nop
cmp
movsb
jmp
ja
inc
fs
sahf
xchg
xor
cmp
xchg
cmpsb
cs
enter
in
imul
sbb
popa
imul
mov
jmp
fs
mov
je
and
divb
pop
ret
mov
push
xchg
movsb
add
xchg
ljmp
aas
repz
push
test
mov
stc
xor
cmp
xor
fldl
icebp
imul
pop
sbb
aad
lods
mov
fisttpl
mov
sbb
sahf
iret
xor
jne
dec
mov
incb
into
push
movsb
push
mov
notb
adc
pop
inc
das
test
inc
jp
push
adc
popf
cmp
movsl
push
xchg
fsubs
test
rcll
mov
gs
std
sbb
mov
les
inc
imul
xchg
movsb
adc
arpl
inc
stos
mov
leave
sub
repz
jb
push
and
xchg
jle
int
pop
sub
push
nop
mov
cmp
lcall
in
in
popa
aaa
jle
fs
cmpsl
ficoml
mov
xor
iret
testb
push
movsl
pop
in
cmp
stos
add
loop
pop
pop
push
dec
pop
movsl
fmuls
sub
and
andl
or
int3
adc
mov
pop
and
mov
mov
pushf
jg
jp
fstpt
cmp
cmp
clc
mov
push
push
scas
jnp
jecxz
bswap
iret
push
ret
pop
or
and
fisttpl
stos
cmp
push
mov
in
sbb
icebp
das
test
jns
js
in
adc
xchg
mov
or
inc
inc
adc
push
xchg
movsl
orl
sbb
fxam
cmpsb
inc
notb
pop
testl
pop
jo
stos
dec
leave
into
scas
jns
int3
and
pop
jl
repz
loop
xor
cmp
xchg
cmp
inc
popf
aam
jp
jb
jle
iret
scas
xchg
push
sahf
lret
test
and
fistps
les
push
sub
lock
lds
addb
add
mov
scas
adc
and
cli
out
xchg
pop
cs
add
pop
adc
ret
leave
mov
repz
divl
enter
cwtl
cltd
inc
push
sbb
mov
or
inc
mov
xchg
pop
cmpsb
mov
mov
mov
aas
mov
push
shll
and
movl
fimuls
sbb
adc
adc
lea
xchg
test
out
incl
mov
push
push
out
ret
testb
xor
xchg
mov
nop
push
xchg
sbb
aam
test
movsl
int3
mov
sti
jle
adc
fildll
ud0
lret
in
int3
add
inc
or
push
push
ret
add
inc
xchg
and
ds
enter
and
and
mov
inc
mov
inc
jecxz
fnsetpm(287
push
sbb
cmpsl
mov
leave
pop
pop
cs
scas
aad
push
sti
fwait
pop
loope
cltd
push
rcrl
mov
xor
ja
std
cmpsl
ja
push
aam
push
mov
cmp
or
daa
fisttpll
push
dec
call
imul
pop
push
mov
stos
cmpsl
loope
jae
call
mov
dec
cmp
xchg
test
stos
push
arpl
jmp
xor
test
push
daa
sbb
adc
je
fcoml
pop
loop
mov
stos
iret
cmp
inc
imul
outsl
outsb
out
fisubrs
lret
mov
mov
loope
add
cmp
adcl
popa
sahf
loope
xor
outsl
push
test
fimull
xchg
fistps
sbb
scas
mov
and
aam
es
insb
lret
or
popa
jnp
out
mov
hlt
mov
shll
pop
jb
out
popf
lret
inc
aam
push
rolb
cmp
movsl
fisubs
test
hlt
mov
adc
inc
inc
xchg
push
lock
sbb
lods
shll
arpl
and
das
cmp
ds
add
movsl
lods
es
or
fnstcw
movsb
sbb
ret
mov
cld
mov
mov
xor
adc
cli
in
jl
xchg
inc
adc
pop
cld
les
inc
cmp
mov
rorb
movl
sub
pop
jp
add
xor
adc
xor
xor
cmpsl
sarb
subb
and
dec
fildl
mov
das
mov
inc
scas
pop
test
jne
ror
enter
mov
cmp
std
cmpsl
mov
adc
or
jns
pop
popa
and
push
data16
lods
mov
jae
push
add
nop
stc
add
jecxz
cmp
es
mov
push
inc
xchg
hlt
xchg
fadds
stos
negb
add
pop
push
sbb
movsl
sub
lea
sti
es
in
sub
dec
xor
add
push
mov
repnz
mov
aad
inc
ss
sub
cmp
xchg
and
mov
int3
xor
mov
std
div
jmp
mov
popa
pop
pop
jns
push
dec
pop
inc
fld
lds
in
movsl
sbb
ja
scas
xor
bound
or
cmp
adc
insl
in
cmp
sbb
mov
pop
jmp
lock
pop
or
add
ljmp
cmc
lock
push
sbb
cmp
fstps
lret
jbe
mov
sub
adc
pusha
jne
out
xor
jmp
push
xor
lret
test
pop
push
mov
call
int
and
and
pop
lret
repz
nop
and
add
stos
imul
dec
fbld
je
fnsave
jl
shrl
mov
xchg
mov
fmuls
inc
imul
mov
leave
jae
add
pop
lods
clc
pushf
sti
dec
pop
insl
out
adc
data16
mov
cmp
jge
lret
cmc
mov
mov
daa
and
lea
mov
xor
jbe,pt
push
push
xor
cmp
js
or
xchg
inc
js
loopne
push
test
sbb
inc
sbbl
lods
adc
jnp
jg
xchg
xlat
push
lock
mov
aas
and
lods
sbb
mov
jno,pn
gs
mov
lret
inc
fs
imul
inc
cmc
lods
sub
adc
cmc
into
cmp
aaa
das
xchg
jnp
inc
mov
pop
sahf
dec
jp
jp
sbb
fdivrl
dec
mov
jmp
dec
cmpsl
imul
popf
adc
cs
mov
sbb
cmp
outsl
jge
aad
xchg
je
mov
push
jge
jbe
loope
adc
jmp
push
mov
adc
stos
xor
lea
pushl
sbb
stos
mov
test
push
push
mov
jbe
dec
ljmp
pushf
xor
pop
cmp
aam
ljmp
sub
ljmp
mov
jo
xchg
sub
cmp
test
into
jbe
dec
or
push
lret
pop
add
mov
aaa
inc
call
xorb
xchg
arpl
pop
sbb
bound
xor
pop
test
jnp
adc
imul
in
mov
xchg
fimuls
cltd
sarb
jmp
adc
jl
cmp
xchg
pushf
mulb
push
add
divl
xchg
pop
mov
outsb
stos
std
mov
mov
push
and
pop
sbb
arpl
nop
jne
enter
movsb
mov
adc
sub
cmp
xor
bound
cs
test
test
ret
shr
sti
mov
pop
mov
mov
sub
movsb
outsl
adc
sarb
rcrl
ds
mov
int3
insb
and
addr16
enter
push
rcll
lods
pop
cmp
jae
rcrb
adc
lods
mov
push
cmp
nop
xchg
cmp
aad
das
es
ljmp
cmp
jl
fwait
add
das
js
js
mov
daa
push
aaa
mov
insb
lcall
inc
test
xchg
int3
cmpsl
repz
push
test
push
fcoml
pop
and
inc
and
out
aam
lret
mov
stc
rorl
out
cwtl
dec
mov
lret
push
cld
fs
add
cli
push
lds
push
xchg
mov
leave
mov
push
sub
xchg
mov
popa
jno
inc
or
aam
jge
movsb
pop
sub
xlat
inc
mov
sbb
mov
xlat
rolb
sbb
cmc
shr
and
cmp
enter
pop
sbb
test
xchg
mov
pop
out
mov
call
jg
pop
dec
mov
out
je
adc
add
shll
dec
daa
xchg
aas
out
inc
xor
arpl
pop
push
jle
rclb
pop
mov
add
sbb
add
aad
pop
jns
sbb
loop
inc
mov
aad
ret
movsl
in
test
jecxz
dec
outsb
mov
imul
scas
incl
inc
push
and
test
inc
push
adc
mov
pop
jmp
inc
mov
jge
lods
add
fnstsw
inc
cwtl
roll
sbb
mov
test
xlat
subl
pop
movsb
imul
roll
push
aad
call
sarb
loop
mov
push
mov
fs
mov
mov
inc
xor
js
fisttpll
jb
and
cmp
popf
push
int3
lret
cmc
sbb
frstor
sbb
popa
xchg
filds
popa
and
mov
xor
fucomp
mov
push
inc
mov
inc
fcmovnb
and
dec
cmp
out
add
addb
jo
xchg
outsl
inc
lret
push
loope
loop
loopne
dec
mov
cli
in
ja
lods
mov
hlt
cmpsl
jo
cli
loop
es
jb
adc
jge
add
and
or
mov
sti
mov
push
sub
jge
stc
adc
cmp
adc
cmp
test
sub
mov
xchg
insl
inc
xchg
xchg
fmull
fisubl
xchg
les
aad
enter
push
push
cmp
fstpl
fs
sub
xchg
cltd
fadd
or
js
sbb
loop
int3
and
fidivrs
in
pushf
stc
or
out
shl
xchg
pop
mov
pop
and
xchg
pop
stos
sbb
sub
out
sub
inc
fisubrl
mov
popl
aaa
test
pusha
xchg
sbb
cltd
subl
ds
sub
add
cmp
aam
inc
pop
lock
cmp
sbb
pushf
enter
push
scas
movsl
cmc
jmp
cmpsb
dec
iret
pop
int3
push
cmp
adc
mov
cmp
inc
sbb
test
push
sarb
jg
stc
movsb
iret
or
sub
outsb
inc
sub
loop
lret
jg
push
mov
push
cmpl
imul
das
pop
sbb
call
ds
adc
push
into
scas
pop
add
stc
in
push
xor
mov
add
test
mov
xor
rol
inc
push
jp
dec
pop
stos
test
dec
xchg
add
inc
mov
imul
xlat
jbe
inc
sub
xchg
and
cmpsb
ss
lret
outsb
loope
aas
dec
pop
fisubs
scas
popf
dec
out
adcl
lds
scas
imul
call
into
dec
es
daa
jp
xor
loope
ret
xchg
rolb
xor
test
jno
sarb
push
ret
movsb
pop
shll
or
stos
push
inc
lret
jbe
xlat
nop
cmp
xor
jge
sbb
std
mov
xchg
fdiv
pop
leave
pop
ja
push
cmc
addr16
xchg
dec
jecxz
pop
lea
insl
mov
xchg
jmp
sub
jns
cmp
xor
repnz
leave
xchg
fistpl
cmc
mov
arpl
cltd
hlt
in
fildll
push
aas
mov
adc
pop
push
pop
push
insl
adc
clc
bound
inc
stc
cmp
cltd
mov
adc
mov
push
jnp
int
jo
inc
test
clc
out
xor
and
in
dec
or
jl
dec
popf
add
out
int3
push
ss
movsb
cwtl
into
dec
inc
nop
mov
data16
xlat
cmp
or
cmp
mov
xor
mov
sbb
jno
mov
cld
and
xchg
xchg
mov
xchg
lds
sbb
in
sti
add
lods
sub
cmp
pop
pusha
pop
and
orl
mov
cmp
icebp
push
xchg
dec
xor
ja
lods
jecxz
sbb
rcr
jle
dec
xor
je
push
xor
cmp
mov
or
sub
les
xlat
test
scas
rclb
pop
mov
mov
inc
scas
cli
mov
test
lods
fnstenv
sub
fwait
pop
jp
or
icebp
add
imul
clc
sub
es
cwtl
fs
dec
cmp
adc
sub
inc
xchg
repz
fmuls
mov
lcall
das
push
add
mov
sbb
xchg
sub
aas
push
cltd
loopne
loop
sar
sub
aas
cmp
pop
jmp
push
push
in
mov
mov
ljmp
sbb
cli
push
subb
mov
or
or
ljmp
ret
add
data16
ret
shrl
push
pop
push
out
mov
or
pop
out
outsb
outsb
shrb
mov
dec
sbb
adc
cs
imul
push
push
in
in
add
push
sub
add
fdivrl
mov
dec
pop
in
out
cmp
mov
arpl
fcompl
add
loopne
adcb
add
scas
adc
dec
pushf
jns
cmp
popa
jbe
dec
lods
cmp
das
fucomip
cmp
jecxz
loopne
dec
rcll
rcl
pop
test
mov
aad
push
js
and
test
call
mov
icebp
xchg
inc
mov
lahf
mov
xor
fbld
and
movl
test
cmp
or
dec
sub
mov
xchg
adc
xchg
and
push
shr
pop
or
cwtl
in
std
lods
in
pushf
call
cld
rorb
mov
cwtl
pushf
cmc
dec
into
sub
addb
dec
xorl
dec
test
iret
push
lea
jle
and
mov
mov
xor
jle
icebp
pop
dec
push
pushf
test
jns
aas
ret
and
mov
push
fwait
mov
aas
sbb
out
cmp
jge
jne,pn
roll
jle
jg
jae
sub
xchg
xchg
adc
add
loopne
in
lock
inc
out
fmul
es
aaa
call
mulb
jge
ficompl
inc
pop
push
sbb
int3
aam
jbe
cwtl
mov
fwait
loope
inc
ljmp
jnp
fsubrs
lods
jp
xor
jp
hlt
js
xlat
pop
mov
iret
in
test
cli
int3
mov
cmp
adc
push
dec
addr16
jo
mov
aam
pop
fsts
dec
adc
push
dec
in
or
jmp
jb
iret
pop
push
jne
pop
push
pop
lods
stos
mov
push
pushf
xor
call
mov
or
mov
lret
addr16
add
imul
das
sbb
sbb
stos
test
mov
aas
decl
jle
loopne
inc
enter
mov
or
mov
inc
call
in
mov
frstor
cmp
dec
sub
mov
pop
shll
bswap
cmp
inc
mov
push
add
xchg
shll
aaa
fbstp
jns
jp
xor
jno
stos
mov
inc
or
into
cmp
rcll
jg
ljmp
push
rep
push
pop
mov
xor
daa
adc
into
mov
xchg
mov
inc
arpl
sub
and
adc
jecxz
jle
stos
push
lea
mov
add
fs
outsl
loop
es
sbb
daa
adc
js
jp
ret
xor
fwait
das
dec
pop
pop
adc
jo
mov
outsb
js
ss
mov
leave
sub
jg
scas
xor
cld
inc
std
out
shrl
sahf
cmpsb
fcoml
add
imul
xor
and
dec
sarb
xor
sub
jge
xchg
mov
push
sti
mov
sub
dec
popa
subb
repnz
cmp
push
fwait
dec
cli
pusha
xchg
jne
xchg
rorb
in
pop
push
xorl
ret
or
sub
push
or
daa
lcall
dec
test
add
dec
test
mov
xor
std
arpl
mov
xchg
dec
paddd
add
pop
int
data16
or
xor
add
test
mov
inc
add
jmp
in
mov
cld
or
lods
popf
push
mov
lock
in
out
and
mov
pusha
pop
cmp
inc
addl
cmpsb
and
push
gs
scas
mov
repz
jle
jle
push
hlt
cmp
lock
push
mov
in
addr16
arpl
aad
call
imul
mov
cmp
dec
ret
out
sbb
cltd
add
xor
mov
adc
jle
inc
dec
fs
mov
xlat
imull
sarb
fwait
cltd
stc
in
shll
insb
sti
and
insl
add
xor
push
add
push
mov
fistpll
add
pavgw
movsl
andb
inc
xor
aam
inc
adc
jmp
filds
adcb
das
test
jno
popa
lock
bswap
pop
xor
out
mov
cmp
mov
push
pop
xchg
jo
push
pop
lret
add
push
lret
ljmp
movsl
int3
repnz
jp
das
cmp
popf
add
mov
inc
lcall
ss
aad
cwtl
pop
or
push
and
insl
inc
push
or
inc
sbb
push
ss
sbb
movsl
mov
sahf
stc
mov
subl
gs
je
adc
leave
loopne
and
and
sub
push
imul
mov
pop
jne
xor
add
sahf
out
sbb
jae
rcll
mov
jo
xor
mov
inc
inc
mov
xchg
clc
mov
out
lea
and
mov
std
js
mov
and
or
mov
jb
aam
loope
movsb
lods
cs
out
sbb
mov
scas
jg
push
imul
popf
mov
push
inc
lahf
dec
in
ljmp
data16
add
mov
jo
or
incb
nop
imul
data16
insb
js
mov
mov
sbb
jo
push
sbb
or
nop
imul
insb
movsl
pop
adc
mov
add
mov
popf
stc
outsl
xorl
cli
adc
in
dec
dec
xlat
or
push
adc
xchg
je
jecxz
xlat
lret
push
or
cmp
and
push
fcoml
mov
mov
push
xchg
out
cwtl
and
xchg
leave
sbb
iret
fwait
loope
das
in
ljmp
dec
jle
aad
add
sub
outsb
lret
add
mull
dec
mov
nop
and
ret
cmp
xor
jmp
fistpll
lret
pop
inc
push
or
mov
xchg
test
and
mov
cmp
stos
outsb
pop
push
push
jg
mov
nop
jmp
push
insl
mov
inc
push
sbb
mov
scas
push
clc
int
test
cmpl
xchg
push
dec
push
lahf
cmp
fidivrl
inc
sbb
aas
pop
divb
push
dec
push
mov
xor
outsb
pushf
stc
mov
jp
jmp
adc
inc
cmp
es
dec
sbbb
repz
jb
xchg
adc
or
out
shrl
mov
rolb
insb
lahf
sub
mov
sbb
dec
cltd
xchg
fiadds
lods
clc
ljmp
ds
push
test
pop
rcr
stos
test
pop
fnstenv
push
mov
rorl
cwtl
insb
int
dec
stos
jecxz
pop
push
sahf
pop
sub
xor
adc
push
or
sbb
in
clc
or
jo
add
lahf
stos
scas
aad
lret
dec
bound
or
lcall
sahf
jae
xor
xchg
xchg
xchg
push
mov
cmp
das
js
push
dec
sub
js
fcompl
add
cmp
lods
test
add
sbb
sub
cld
inc
les
add
int3
sbb
sub
and
fstl
or
sub
mov
pop
aad
inc
btr
cs
aaa
jp
sub
sub
adc
dec
lcall
cmpsl
cmpsl
enter
popf
fimuls
xor
adc
mov
pop
pop
dec
mov
adc
and
cmp
rcrb
adc
imul
jb
ds
pop
add
movsl
in
out
adc
mov
mov
adc
jmp
loope
xchg
mov
adc
xorl
sub
xor
mov
adc
popl
cmp
popa
icebp
ja
and
inc
cmpb
rcl
nop
sub
cmp
into
cmp
pop
pop
mov
push
cli
pusha
mov
dec
clc
pop
orl
ljmp
andb
pusha
dec
push
ret
repnz
dec
or
inc
divl
cmp
jg
imul
adc
pop
fcoml
nop
push
mov
xorl
jl
test
add
add
adc
pop
and
mov
enter
inc
fidivrl
xor
scas
mull
mov
imul
sbb
sar
add
push
jns
imul
xchg
push
cmpsb
fwait
in
sub
fnsave
xchg
xor
in
loop
inc
mov
movsb
in
mov
or
cmp
jb
int3
test
cmpl
decb
mov
push
mov
daa
jp
xor
insb
jo
fcomp
xchg
addr16
notb
inc
fisubs
mov
push
pop
and
adc
loop
testb
add
mov
push
popa
xor
and
and
shrl
xchg
xchg
adc
push
jne
sub
push
movsl
dec
aas
push
leave
mov
popa
mov
pop
movlps
mov
jge
ljmp
outsb
pusha
add
aad
cltd
push
nop
es
pop
pop
in
push
mov
aaa
sbb
pop
rcrl
lods
cmp
adc
repz
xchg
mov
fnstenv
outsb
clc
jl
jp
out
aad
cmp
xchg
cwtl
mov
mov
mov
mov
inc
bound
dec
movsl
loope
sti
jg
call
mov
addl
sbb
and
popa
push
jb
push
mov
add
inc
sbbl
mov
out
test
push
mov
push
jecxz
mov
push
rcrb
xchg
push
add
xor
sahf
xor
jae
cmp
ret
ret
push
loopne
cltd
jge
mov
cmp
shrb
pop
mov
imul
mov
ja
cli
imul
bnd
jo
sbb
cltd
jnp
xor
or
int
jo
cmp
arpl
push
mov
das
repz
shrb
xchg
ljmp
ds
xchg
mov
imul
movsb
cmpsl
adc
pop
imul
ds
sbb
ss
pop
xor
cmp
add
adc
das
xchg
hlt
xor
pop
loop
jmp
test
jmp
ror
shrb
out
push
sub
add
mov
adc
neg
push
sub
or
in
les
movsb
iret
es
push
pusha
mov
xor
rolb
and
aad
pop
dec
push
repz
cmc
fldl2t
loop
mov
bound
push
mov
ret
lahf
jno
and
fsts
jb
xlat
pop
xchg
push
test
xchg
sub
rcrb
sbb
daa
enter
sbb
sub
movsb
pushf
add
leave
ja
adc
push
addb
lea
and
into
out
push
add
lds
lock
xor
std
adc
cwtl
das
cld
adcl
add
mov
dec
iret
clc
mov
lcall
xor
gs
sub
jno
xchg
mov
and
lret
inc
jnp
sub
xor
je
inc
and
add
inc
xchg
jno
arpl
fisubl
xor
imul
aaa
rorl
jle
repz
iret
in
lret
ret
int
icebp
sub
ja
outsl
add
enter
or
sbbb
or
mov
dec
dec
insl
xlat
lds
lock
enter
orl
jg
sub
dec
nop
inc
adc
test
into
adc
outsb
mov
mov
jb
std
and
movsl
sbb
xchg
lret
ja
push
lcall
jecxz
mov
and
sbb
push
push
cmp
mov
dec
mov
outsb
xchg
xchg
pusha
jb
fdivs
sbb
andnps
scas
gs
aad
es
xorl
in
dec
pop
testl
sbb
and
adc
mov
push
leave
pop
or
stos
pop
decl
mov
jmp
cmovge
cs
sti
or
pop
pusha
test
sub
xor
sarl
lret
dec
jp
sub
movsl
imul
ja,pt
cmp
ja
adc
mov
cwtl
out
adc
fisttpll
mov
insl
ss
jnp
add
push
inc
sbb
lret
ret
nop
mov
fbstp
and
push
cmp
mov
jb
jmp
xchg
sbb
mov
mov
cmpsb
je
sub
mov
je
roll
xchg
fs
test
cli
pop
inc
sbb
cmp
into
jb
mov
mov
inc
mov
shrb
and
inc
push
test
jae
and
out
xchg
xchg
fbld
data16
test
mov
movb
and
out
or
rclb
lret
inc
aas
xlat
add
stos
mov
mov
imul
jmp
stos
rorl
sub
fsubr
adc
js
xor
roll
imul
loope
lock
faddl
add
lret
es
rorb
rclb
xchg
sbb
fdivs
into
jae
mov
subl
sbb
mov
inc
dec
imul
cmpsl
push
inc
cmp
pop
shlb
mov
cmp
int3
sbb
cmp
fcoml
cs
mov
cmp
lahf
jmp
movsb
popa
icebp
push
sar
xorb
jns
adc
push
into
add
jb
lds
mov
mov
push
mov
sbb
and
ret
mov
mov
mov
mov
sti
adc
cmp
and
xor
pop
xchg
adc
dec
push
mov
sub
imul
dec
sbb
inc
out
loopne
in
sub
sbb
outsl
mov
adc
bnd
mov
xor
pop
or
mov
push
mov
xchg
movq
inc
pop
repnz
iret
mov
fadd
mov
jp
jb
ja
aam
lods
clc
push
dec
xchg
push
sbb
add
test
divb
push
pop
xor
xchg
lret
push
xchg
push
push
sub
xorl
xor
mov
xchg
or
cli
loope
insl
ret
inc
xor
xor
dec
ljmp
push
or
sbb
test
int
sub
mov
or
outsb
leave
out
sub
nop
call
out
rcrb
dec
pop
push
popa
shl
lea
pop
pop
scas
and
push
int3
aam
push
aam
clc
mov
insl
or
cmp
or
lods
xchg
pop
jp
insb
sub
in
push
cmpsb
arpl
lret
ss
push
sahf
outsl
cmpsb
pop
aad
mov
mov
loop
mov
cmp
sbb
sub
mov
repz
ja
add
push
into
jnp
pop
inc
add
jmp
dec
scas
mov
xor
int3
xorb
mull
cmp
sbb
lret
or
ss
or
rorl
insl
xchg
stc
and
mov
lea
jne
inc
jge
test
add
ds
mov
fst
sbb
mov
xlat
cld
movsb
dec
xchg
pop
and
test
cmp
sti
mov
cld
xchg
int
aad
aaa
js,pn
das
mov
das
inc
or
push
jmp
and
mov
xchg
inc
sub
jne
dec
pop
mov
lahf
mov
shll
sbb
test
fdecstp
aas
out
sarl
int
add
add
aam
inc
aad
add
iret
rcl
xor
lds
add
and
inc
and
ja
xchg
addr16
jb
mov
adc
mov
xor
xor
pop
scas
jge
mov
outsb
loop
rcll
cmpsl
fmul
bound
push
aad
cmpsb
aam
inc
mov
jbe
add
pop
inc
rcr
loopne
int3
mov
inc
nop
jg
lret
scas
adc
es
int3
mov
pop
dec
lods
popa
mov
stos
test
mov
das
test
xchg
sub
rolb
mov
ret
cwtl
ljmp
mov
fnstcw
push
cld
jns
adcl
dec
rcrb
pop
or
cmp
xor
out
iret
push
popa
lods
shll
negl
inc
jmp
jne
mov
sbb
in
xchg
enter
xorb
add
dec
fs
inc
xor
das
es
inc
cmp
dec
loopne
jecxz
sub
in
mov
loopne
clc
insb
mov
stos
sarl
cmpsb
addl
cs
push
imul
cmp
xor
fwait
jne
mov
jnp
xor
fdivl
movsb
xor
imul
addr16
pop
leave
mov
stos
mov
inc
adc
pop
sbb
and
pusha
rcl
rcll
cmp
pop
mov
dec
mov
in
jecxz
mov
dec
xchg
out
and
xchg
cwtl
incb
jp
fwait
lock
sub
mov
and
mov
cmpsb
xor
loop
shl
and
or
fists
push
movsb
fistl
sub
xorl
xacquire
push
int3
xchg
popa
or
jb
push
orl
ja
pop
sub
test
dec
push
aam
lods
arpl
or
jg
out
scas
into
in
mov
or
insl
int3
mov
iret
adcl
push
enter
test
or
lahf
and
or
sub
push
xchg
sbb
dec
in
lea
and
xor
rcl
out
push
stc
xor
sbb
cmpsl
sti
xor
add
sub
cltd
jo
xor
test
xchg
pop
aas
clc
jbe
mov
sub
insb
lcall
xorb
mov
int
jae
repz
jmp
loopne
test
cmp
mov
or
jg
xor
popa
js
roll
sbb
mov
push
and
adc
mov
fmuls
push
loop
sub
or
int
inc
sahf
iret
scas
inc
push
cltd
fstps
lret
or
jno
jecxz
adcl
clc
adc
push
cmp
ficoml
fldcw
mov
xor
fwait
imull
aam
jle
push
mov
rcll
icebp
rcl
push
ret
fstpl
out
test
dec
mov
aas
sub
outsb
lods
in
jl
lds
inc
xor
xor
sub
andl
mov
lret
xchg
mov
push
mov
cs
or
or
or
cli
cmpsb
test
dec
inc
stos
mov
rcrl
repz
sbb
ja
pop
fs
call
pop
or
jg
out
stc
addr16
bound
bound
dec
mov
lret
jae
push
int3
sbbl
push
rclb
faddl
xchg
cmp
fwait
cmp
pop
mov
lods
sti
lahf
enter
cmpsb
lods
mov
shll
push
repz
mov
push
or
jno
jns
push
jnp
push
ja,pn
add
pop
test
mov
or
xor
shl
or
stos
dec
out
mov
cmp
cmpl
mov
xor
pop
shlb
inc
mov
cmpsl
movsb
adcl
loopne
cmc
sti
pop
insb
cmp
lds
leave
xchg
addr16
scas
sub
sti
xlat
pop
mov
incl
push
fisubs
push
sahf
ret
negb
repnz
push
jae
gs
scas
cli
cmp
hlt
cltd
inc
adc
sub
jnp
das
clc
xor
pop
mov
pop
clc
jle
ror
call
cmpxchg
cmp
test
xchg
out
push
inc
insb
sahf
cmp
mov
dec
jl
or
stos
xchg
jb
xchg
mov
in
outsb
pop
jne
xchg
sbb
cwtl
popl
insb
sahf
jp
xchg
les
cmp
stos
add
data16
mov
push
mov
add
test
fs
jb
movsl
mov
repz
mov
cli
jge
fstpt
or
cmp
lods
or
shrb
repnz
popa
xchg
das
xor
out
das
mov
cmp
sbb
clc
jp
cld
push
fs
xor
aam
fistl
xor
xor
or
test
dec
xor
xor
inc
je
or
push
or
loope
outsl
scas
jmp
ss
es
xor
jmp
cmpsb
movsb
dec
jmp
pop
test
mov
add
mov
or
push
je
ds
icebp
mov
in
inc
mov
bound
jp
mov
xor
xchg
push
push
mov
sbb
pop
idivl
mov
pop
pop
repnz
cmp
out
ucomiss
mov
xorb
fwait
cld
test
xor
jp
mov
or
xchg
add
out
lods
and
stos
and
fucomi
ja,pt
icebp
je
dec
hlt
rclb
sbb
xor
roll
inc
mov
stos
sub
je
aas
pop
xor
loop
lcall
lret
test
dec
dec
sti
clc
out
gs
ret
mov
cli
lds
mov
aaa
push
sbb
test
add
push
jne
xor
lret
lock
adc
jg
add
mov
mov
cmp
stos
mov
cli
test
in
sbb
push
cmp
and
out
in
xchg
daa
or
mov
int3
or
push
xor
shlb
push
add
jle
jbe
les
add
mov
int3
test
lahf
imul
mov
pop
subl
enter
pop
adc
pop
push
jb
cld
jbe
lods
mov
mov
into
insb
xchg
push
fcom
push
or
mov
jno
sti
rcrl
xchg
mov
or
xlat
loopne
mov
mov
mov
call
jle
in
dec
pushf
push
or
mov
jl
dec
inc
shlb
fldt
jne
mov
jae
sar
mov
or
test
push
and
xchg
lahf
mov
aas
into
imul
sbb
out
and
cmp
into
xchg
mov
aam
sahf
in
cmpsl
jmp
lods
push
div
xor
and
inc
ss
dec
mov
fidivl
cwtl
ljmp
and
fnstsw
adc
cs
sub
es
clc
popa
icebp
sbb
repnz
test
ds
pop
dec
xchg
or
scas
lods
stos
mov
pop
xchg
test
push
je
movsb
xor
cmp
sbb
and
aam
and
addl
mov
scas
fwait
hlt
mov
add
rcll
in
or
ja
loopne
inc
ret
xor
or
mov
or
dec
fmull
std
push
mov
fcmove
sar
ljmp
ficompl
dec
push
out
movsl
das
xchg
data16
mov
insl
mov
mov
xor
push
lds
and
out
push
adc
mov
cmp
xchg
cmp
lret
jg
xor
call
pop
xor
out
lods
call
inc
cmp
ljmp
lock
jbe
jbe
cmp
pop
xchg
or
pushf
lcall
ljmp
cld
adc
mov
ja
push
jb
adc
fsts
mov
push
les
insl
fisttpl
pop
sahf
aam
loope
xlat
sbb
cwtl
add
arpl
push
sub
xor
cmp
adc
adc
pop
imul
pusha
and
out
cmp
test
lods
fs
scas
sub
lea
call
rcr
cmc
pop
pop
out
imul
mov
js
sbb
push
dec
or
rep
sub
lea
icebp
pusha
out
in
lods
nop
mov
push
pop
inc
mov
int3
ja
xchg
sub
and
mov
push
test
mov
lds
popa
in
cmp
ret
icebp
out
mov
xchg
xchg
mov
inc
test
arpl
xor
lock
xor
and
dec
imul
pop
rorb
dec
pusha
mov
adc
fwait
inc
cmp
dec
in
call
jbe
leave
insl
mov
ret
mov
jle
sahf
or
addb
outsl
sub
ret
mov
lcall
adc
fwait
addb
mov
aam
dec
lds
ss
mov
lds
frstor
das
jecxz
push
inc
jmp
jge
test
cmp
or
enter
jp
push
ss
aad
adc
imul
rcrb
fwait
push
xor
and
ret
adc
mov
dec
xchg
mov
rep
into
jmp
pushf
jge
mov
mov
into
fisubl
push
cld
adc
sar
jle,pn
lcall
repz
add
sti
push
mov
xor
sub
cmpsb
insl
push
sbb
cmpsl
fs
mov
xchg
push
mov
cmp
xchg
add
or
je
bound
cmp
inc
rclb
shl
jne
and
inc
pop
adc
xor
cmove
push
and
loopne
xchg
mov
lahf
leave
jle
jns
test
mov
testb
pop
mov
adcb
js
stos
mov
fwait
xor
mov
mov
repz
mov
repnz
or
aaa
push
xor
icebp
xchg
leave
icebp
cwtl
fldl
int3
cmp
ret
push
lods
js
xor
pushf
adc
xor
hlt
inc
mov
rclb
xchg
xor
inc
cmp
xor
enter
cmp
jns
in
adc
mov
push
add
push
arpl
inc
loope
xor
lret
lahf
push
xchg
aaa
cmp
in
dec
icebp
dec
mov
popf
adc
ja
add
jnp
decb
fbstp
sub
pop
push
shll
xchg
pop
sbb
cmpsl
mov
repz
pop
cmc
andb
add
push
jle
mov
scas
jnp
insb
push
into
iret
xchg
xchg
pop
loopne
or
adc
movsb
push
dec
out
sbbl
daa
clc
lods
insl
mov
nop
test
and
push
int3
in
ljmp
sub
pushf
sbb
pop
aaa
push
inc
xor
pop
xorb
inc
or
lods
xor
and
dec
test
test
outsb
stos
mov
mov
es
imul
cmp
mov
mov
pop
jnp
ret
jp
insb
xchg
divl
push
jb
mov
das
xchg
pop
ret
test
and
jo
into
push
lcall
xchg
pop
inc
jge
sub
repz
cltd
jle
jg
xor
fistl
rcl
je
outsb
pop
inc
arpl
hlt
aas
mov
xor
icebp
aas
adc
mov
fs
xor
or
lea
inc
jo
inc
pop
adc
psllw
lods
jb
mov
rcl
sbb
and
lcall
inc
push
jl
dec
stos
lods
mov
loopne
xchg
xlat
in
jb
shl
popa
xchg
ljmp
pop
mov
inc
xchg
cltd
ljmp
fisubl
orb
sbbb
int3
inc
pop
scas
push
or
pop
pop
dec
add
mov
into
daa
ret
cs
out
es
adc
addb
lea
jle
mov
popf
adc
or
ljmp
push
push
adc
imul
in
add
push
sub
les
fstpt
lods
inc
pusha
pop
lods
insl
fldcw
push
mov
mov
insl
rclb
push
mulb
mov
cli
sbb
jl
ror
fisubs
and
sub
dec
jmp
mov
pop
nop
adc
and
sbb
or
fidivrl
and
fidivl
xchg
loope
mov
hlt
fistpll
aad
mov
sbb
stc
pop
imul
lods
lds
shll
enter
pop
push
sub
pop
adc
out
loopne
mov
jb
add
fwait
xor
rorl
lock
orl
movsb
data16
adc
or
ficompl
jle
xchg
dec
mov
mov
push
mull
adc
out
cld
mov
mov
lods
bound
jge
jns
ret
sti
inc
mov
cwtl
leave
sahf
ds
test
into
mov
push
cli
sti
sbb
add
daa
mov
pop
jne
adc
or
mov
lret
leave
packuswb
rol
lds
inc
xor
ljmp
cs
int
aaa
dec
xlat
cmpsl
shrl
or
imul
aaa
mov
xchg
mov
psrlq
xor
jo
xchg
jge
inc
std
shll
out
bound
pop
cmp
fisttps
mov
add
cli
out
sbb
mov
ljmp
fcomps
mov
cmpsl
les
inc
mov
xchg
jnp
outsb
mov
lds
dec
mov
imul
inc
or
adcb
lock
mov
xchg
fcoms
flds
cmpsl
enter
in
jne
jmp
jne
ds
sub
push
xchg
imul
mov
lea
jbe
cli
dec
out
sub
add
scas
and
lcall
scas
in
mov
cmpsb
inc
xorl
push
mov
popa
mov
mov
jge
lret
in
out
test
jmp
pop
push
outsb
xor
mov
pop
icebp
dec
push
insl
fldenv
int
ficoms
add
sub
or
les
sbb
mov
out
cmp
add
mov
adc
or
push
xorb
aaa
lds
pop
sbb
push
js
faddl
out
idivl
fs
cmp
clc
inc
jl
sub
ljmp
xchg
bound
movsb
jecxz
add
push
mov
xchg
movsl
inc
inc
ucomiss
leave
mov
inc
mov
jp
pop
repnz
xor
and
out
xchg
push
xor
jbe
push
invlpga
jle
ljmp
mov
push
insb
pop
jo
mov
cwtl
mov
mov
mov
jnp
adc
leave
bound
dec
aad
dec
adc
stc
jne
fs
addb
insl
dec
xlat
xor
bound
adc
inc
shr
pushf
adc
pop
cltd
andl
in
sbb
sub
jb
into
test
fwait
cltd
in
push
push
xchg
into
cmpsl
enter
push
jno
jle
pop
mov
jmp
add
scas
lds
mov
les
pop
mov
xchg
xchg
add
aam
push
inc
sub
or
lahf
pusha
mov
pop
loopne
inc
pop
mov
pop
mov
adc
and
mov
jae
test
in
or
add
lcall
xor
leave
push
cmp
cmp
mov
and
mov
pop
adcb
jbe
fisttpll
mov
jno
outsb
sub
bound
fisubrs
lahf
mov
dec
dec
sub
push
push
add
rcl
addr16
jnp
rolb
mov
gs
mov
xor
sub
pop
pop
push
cmp
jp
xchg
sbb
xor
daa
sahf
pop
mov
xchg
mov
cltd
mov
sahf
iret
sbb
sub
outsb
push
movsl
mov
sbb
xchg
das
cmpsl
lods
fldcw
mov
imul
adc
insl
dec
and
insb
loopne
mov
lahf
inc
subl
test
adc
es
out
das
jae
cmc
cmc
dec
dec
pop
mov
aaa
xchg
adc
xlat
xor
pop
fildll
fs
bound
xor
test
push
adc
daa
lea
cmp
nop
mov
mov
loopne
push
inc
in
pushf
fistpll
sbb
dec
jne
stos
shl
cmp
rclb
and
jmp
mov
int3
addb
repz
dec
out
xor
inc
jge
and
sub
xchg
xchg
xor
xchg
dec
pop
loop
jo
incb
lock
stos
rorb
ds
movsl
outsb
test
sub
sbb
cwtl
xchg
fsubr
xor
in
pop
xor
xor
mov
std
fcom
bound
inc
jge
pusha
cmp
jp
es
push
loop
cs
subl
mov
xchg
sti
rclb
adc
add
gs
xorl
aas
push
testb
ja
mov
mov
ret
sbb
repnz
lcall
pop
push
xor
in
inc
hlt
dec
push
stc
movsl
add
mov
xor
and
sbb
das
scas
in
mov
in
ret
imul
jp
push
test
mov
lcall
int
fsts
jge
inc
mov
pop
add
pushf
insb
sub
or
xchg
cmp
fcmove
mov
arpl
add
dec
jo
xor
lcall
movsb
in
push
test
hlt
imul
in
push
pop
push
test
in
stos
jae
loope
sbb
test
add
imul
push
mov
cmpsl
dec
fdivrs
mov
mov
sbb
je
mov
pushf
push
jmp
inc
lods
cmc
cmp
mov
xchg
cli
mov
test
pop
push
mov
pop
stos
jnp
inc
pop
mov
jle
sbb
int
inc
scas
lock
adc
insb
stos
mov
xchg
sbbb
sbb
dec
jno
add
push
xor
fsubl
stos
mov
push
in
or
jbe
add
es
aas
cmp
inc
cltd
cmpsb
sub
inc
and
xor
mov
and
int3
inc
or
xchg
cmc
or
dec
popa
mov
shlb
aaa
cld
or
jl
int
pop
stc
mov
inc
pop
fiaddl
popf
sbb
inc
mov
dec
mov
xor
in
data16
and
push
flds
imul
mov
imull
lods
dec
pop
in
add
sahf
cld
es
test
ficomps
pop
or
sbb
ret
test
push
lods
xchg
lcall
ficoml
xchg
jno
lods
fsts
repz
outsb
mov
ret
cmp
inc
mov
push
insl
hlt
mov
mov
and
dec
test
mov
test
inc
xor
fstps
lods
addr16
popa
std
in
push
mov
jo
add
or
pop
fisttps
mov
dec
mov
add
testl
xlat
insl
fwait
mov
ljmp
jmp
xchg
les
or
addb
mov
sbb
sub
addr16
ret
or
mov
std
sbb
adc
les
mov
cld
xor
mov
sarl
repnz
pusha
push
pop
jo
ljmp
or
stos
cmpsb
add
fs
push
movsl
fidivrl
xchg
decl
sbb
jmp
push
xor
shrb
repz
faddl
xchg
mov
sub
imul
sbb
iret
insl
aam
xchg
jno
mov
pop
add
repz
test
adc
data16
aam
xchg
ja
jbe
push
lret
pop
xchg
mov
cmp
xor
adc
mov
aas
pop
cmp
push
scas
jp
xchg
imul
pop
pop
out
xchg
mov
icebp
push
xor
shll
mov
int
and
fisubl
jp
in
shrl
mov
bound
cmp
or
aad
mov
into
dec
sahf
or
mov
lock
enter
push
enter
jne
or
jmp
and
mov
sbb
es
sub
dec
div
adc
add
shlb
pop
pop
loope
lret
popa
cwtl
sahf
mov
loopne
movsb
lahf
push
adc
ja
flds
in
add
xchg
sahf
dec
roll
add
adc
gs
adc
push
cmp
mov
dec
or
push
adcb
jle
mov
ret
cltd
out
xor
test
stos
inc
push
and
js
das
scas
add
push
fwait
adc
pop
jmp
aaa
subb
xlat
adc
in
scas
sub
test
dec
outsb
imul
sti
xor
mov
xchg
sub
dec
in
cmp
or
cmp
add
sbb
out
sbbl
subb
adc
push
adc
mov
jae
pop
xchg
push
mov
add
jo
inc
add
and
test
inc
jle
cli
inc
xchg
jae
inc
xlat
popa
and
mov
sub
pushf
or
mov
dec
dec
push
sub
mov
mov
push
jecxz
int3
out
push
lret
add
and
int3
adc
cmp
mov
sahf
dec
mov
outsl
test
mov
cli
mov
enter
addr16
movsl
out
and
bound
mov
gs
push
out
out
adc
inc
and
push
adc
sub
sub
jmp
sarl
or
call
adc
repz
pusha
jnp
and
pop
loop
cltd
mov
fsts
mov
std
mov
push
imull
ret
mov
push
xor
cltd
sub
lock
jmp
xchg
xchg
sub
aas
pop
cmp
and
and
out
xor
ds
push
imul
add
std
jp
push
cli
add
cmp
cmp
imul
jle
cmp
cwtl
xchg
adc
cmc
xor
or
xchg
idivl
add
push
les
stc
inc
ret
inc
ja
pop
inc
aas
rcrb
imul
daa
iret
sub
push
lock
mov
add
adc
int
mov
mov
pop
add
pop
test
stos
rorl
icebp
ss
iret
scas
jg
outsb
cmpsl
jo
push
cmp
fldt
jns
xor
lds
subl
into
push
and
cmp
ret
inc
lcall
das
mov
and
jp
adc
mov
cmp
pop
xchg
cli
mov
test
mov
and
loope
cmp
unpcklps
lahf
jns
xor
xlat
pop
dec
adc
and
aaa
or
insl
fistpl
xor
fs
mov
add
repz
cmp
psubb
ljmp
fwait
dec
add
pop
movsb
xchg
or
ror
in
hlt
xor
cmpb
leave
imul
js
push
jnp
sbb
call
xchg
xlat
aas
ljmp
sbb
mov
jmp
rol
stos
mov
lea
ret
pop
push
xorb
popf
sbb
sarb
sub
push
cmp
push
xor
cmp
jno
mov
push
iret
mov
inc
enter
hlt
imul
ret
rcl
int
sub
into
ror
ficoml
push
movsl
popa
cmp
test
in
xchg
test
or
sbb
sbb
andb
cmpb
push
lea
aad
xchg
arpl
inc
ret
pop
lcall
sub
fwait
push
sbb
lcall
out
cmp
xchg
fst
jg
addb
cli
js
dec
mov
jmp
test
jae
mov
ds
mov
aaa
push
imul
pop
data16
xor
dec
es
adc
and
imull
lds
pop
scas
or
add
or
pop
inc
xchg
xor
mov
mov
ja
inc
js
push
adc
lahf
inc
pusha
sub
xchg
testl
mov
test
xchg
xchg
jne
dec
mov
push
decl
xchg
jmp
pop
orb
fwait
sbb
cmp
stos
imul
add
lods
cli
mov
sarb
cs
dec
dec
jl
das
ret
cmpsl
int
stc
loope
xor
stos
ret
add
ret
and
incl
jl
jns
cs
shl
mov
ficompl
pop
add
sbb
dec
pop
adcb
fidivrs
insl
dec
icebp
int
test
xor
fiaddl
sub
ficomps
xchg
or
dec
jno
inc
rcll
bound
cli
ja
movsb
fsubs
fwait
subb
xor
shll
and
pop
mov
jnp
dec
adc
pop
neg
lods
test
add
lods
and
lea
or
popf
dec
or
xor
jle
push
jae
int
stos
jnp
pop
push
mov
popf
dec
sbb
cwtl
push
stos
adc
cltd
sbb
adc
mov
gs
mov
imull
dec
inc
push
ret
mov
pop
and
inc
loopne
mov
lods
imul
or
repz
mov
pop
xor
adc
pop
pop
mov
fldenv
mov
dec
xchg
lahf
or
in
jmp
outsb
das
fimull
lea
mov
imull
mov
loope
jg
mov
sti
dec
mov
scas
add
sarb
add
minps
jmp
jno
in
push
repz
hlt
jle
inc
cmp
sbb
lret
sbb
xor
mov
test
jecxz
lahf
stos
dec
hlt
mov
push
push
sub
stc
lret
adc
dec
pop
outsl
sarb
xchg
rolb
test
jp
cmp
mov
scas
outsl
xchg
outsl
adc
scas
stos
nop
push
aam
add
les
je
sbb
fildll
xchg
cltd
or
rorl
pop
inc
xchg
inc
sbb
jno
pop
push
sub
ds
cmpsl
imul
sbb
jnp
outsl
int3
aaa
nop
divl
inc
fstps
das
and
andl
imul
xor
adc
or
fldenv
mov
pop
xor
fwait
in
popf
fcoml
xchg
incb
js
pop
stos
lcall
lahf
pusha
or
adc
xor
aad
sbb
xor
daa
xchg
cli
ljmp
sub
ret
stc
push
mov
mov
fs
xchg
pop
push
adc
xchg
shll
std
clc
dec
jo
dec
add
jmp
int3
or
xchg
jle
sub
je
mov
adc
loope
add
lods
cmp
dec
pop
daa
sbb
iret
jl
sbb
out
mov
dec
das
cltd
dec
sub
dec
push
mov
add
in
and
mov
add
cmp
jbe
js
jne
js
jecxz
inc
in
cmp
out
test
aas
mov
inc
negb
add
fldcw
dec
adcl
add
jo
incl
fldenv
jbe
test
mov
inc
imul
cmc
out
pop
cltd
jle
push
clc
pop
adc
shl
repz
sub
ds
xchg
jp
add
das
fists
test
cmpsl
sub
popf
adc
testb
adc
movsb
pop
inc
sub
pop
mov
mov
jbe
push
cltd
cmp
aad
insl
cmpsl
shlb
xor
push
sub
bound
in
insb
push
pop
jne
insl
mov
es
sbb
mov
lret
popa
sahf
repnz
xor
out
je
fisubs
push
pop
xchg
mov
mov
ret
xchg
shlb
stc
into
cltd
int3
in
or
jl
int3
push
mov
jecxz
mov
inc
and
or
stc
pop
cmp
adc
out
mov
andb
inc
inc
cmpsb
mov
sbb
xchg
mov
inc
jmp
cltd
test
jae
shlb
mov
push
paddsb
pop
stos
xor
mov
stc
adc
mov
out
jo
mov
mov
cmp
mov
insb
mov
mov
rcrb
mov
mov
cli
fildll
push
push
clc
or
mov
lahf
push
je
mov
push
xchg
cmpsl
out
sti
sbb
mov
xchg
cmp
jbe
jg
jle
popf
xor
and
mov
jp
push
bound
mov
incb
xlat
lahf
std
aaa
mov
call
cmp
push
js
cmc
jbe
jae
in
and
sub
sahf
cwtl
and
xor
pop
mov
push
test
daa
ret
sbb
out
jbe
or
jbe
lcall
jae
adc
call
test
movsl
imul
out
loop
imul
lahf
jp
sti
sbb
push
ljmp
rcr
jns
mov
xchg
das
mov
cmp
mov
ja
mov
mov
insb
not
jmp
jp
int
mov
pop
clc
int3
sub
xor
xlat
shlb
lock
jl
add
mov
pop
mov
mov
into
idiv
xchg
xor
xchg
fmul
jl,pn
mov
or
xchg
mov
and
call
lds
fwait
imul
sti
enter
jmp
mov
insl
pop
xchg
cmp
scas
jecxz
mov
xchg
jle
imul
sbbb
xor
jno
dec
lret
add
repnz
es
lcall
sub
sbb
movsb
jmp
dec
fs
inc
pop
ljmp
sub
add
jbe
mov
add
mov
hlt
call
int3
xchg
popa
cmpsl
jno
in
sbb
xlat
ret
push
mov
fcmovbe
dec
loopne
jns
dec
push
js
sbb
std
jle
out
sbb
daa
add
mov
push
popf
fadd
jmp
in
int3
mov
ret
test
pop
sarb
in
inc
push
xchg
roll
lds
fmull
mulb
test
movsl
lds
sbb
leave
and
add
mov
or
test
scas
sbb
mov
adc
fcom
jbe
call
icebp
cmpsl
into
scas
inc
inc
cld
push
xchg
sbb
jno
mov
lods
mov
jmp
push
das
into
daa
dec
mov
push
inc
xorl
shll
aaa
adc
stos
lds
test
les
xchg
mov
push
and
pop
lods
mov
mov
fimuls
dec
sub
inc
push
mov
lcall
add
push
sbb
sub
aas
out
adc
cld
adc
cli
pop
nop
test
or
dec
cmpsl
add
insl
pop
inc
scas
pop
outsl
mov
or
fdivrp
xor
addr16
sahf
push
adc
and
push
dec
test
ds
xchg
aad
fnstcw
mov
sub
hlt
adc
stos
dec
dec
int
cltd
xchg
les
cs
sahf
jle
adc
or
or
daa
mov
call
dec
dec
or
pop
mov
jo
pushf
daa
mov
lock
iret
mov
stos
and
inc
xor
popa
fdivrs
sbb
into
or
cwtl
cmp
sub
imul
repnz
pop
pop
ret
cwtl
pop
pop
movsb
call
in
fwait
popa
pop
xor
mov
xchg
mov
mov
sti
mov
add
out
pop
add
lcall
pushf
push
cli
shl
jmp
aam
lcall
pop
push
jae
int
mov
jne
js
scas
fwait
dec
jb
dec
popf
cli
mov
aad
repz
push
imul
fsubrl
repz
xchg
shrl
pop
push
dec
fnstsw
dec
sub
xchg
xor
cwtl
jge
push
mov
add
pop
cmpsb
dec
push
jns
je
inc
rolb
dec
xchg
pushf
sbb
ret
int
ja
cmp
adc
mov
enter
das
pop
push
xlat
xchg
dec
in
push
jnp
testl
or
test
addr16
and
leave
or
je
btl
in
or
cld
dec
push
int
sub
icebp
cld
push
adc
daa
leave
outsl
lods
mov
push
cld
cmc
cmp
mov
inc
jnp
sbb
negb
inc
lea
xchg
xor
or
push
loopne,pn
dec
xchg
iret
rol
push
xchg
into
sub
mov
idiv
mov
or
add
insl
xchg
jae
add
out
dec
sbb
bound
sbb
sbb
adc
testl
clc
ljmp
lret
push
repz
adc
in
mov
or
or
jle
sub
and
jmp
jns
inc
adcb
dec
int
sub
sbb
das
xorl
pushf
jge
push
lds
movsl
sbb
xchg
or
cmc
popa
repnz
cmp
popf
outsl
pop
dec
cmp
flds
cmpl
cwtl
cmpsl
jmp
lods
outsb
cld
add
sub
inc
dec
mov
gs
pop
fistpl
xchg
mov
lods
fldln2
js
imul
mov
outsl
cwtl
data16
sbb
je
aad
gs
cmp
mov
push
int
and
xor
adc
nop
mov
cmp
xlat
jecxz
or
mov
push
jg
mov
scas
cmp
popa
lret
mov
pop
cs
cwtl
jl
cmp
jbe
mov
dec
rcll
call
idivl
in
lahf
lret
xchg
scas
outsb
cmpsb
inc
stc
mov
mov
je
fildll
xlat
test
mov
push
xchg
or
mov
jl
xlat
in
xor
repnz
jmp
fldenv
rorb
dec
sub
dec
inc
xor
xchg
add
out
mov
jp
inc
arpl
push
xor
cmpsb
inc
or
les
jno
lds
cltd
arpl
arpl
xchg
insl
orl
in
xchg
pop
sarl
scas
ljmp
jge
loope
data16
out
cmpsb
popf
sbb
pop
test
inc
add
int
xlat
fisttpll
dec
aad
and
scas
aaa
and
sbb
xlat
mulb
fdivs
or
sub
push
xor
jmp
repz
loope
and
stos
push
push
xchg
adc
dec
or
loop
std
xor
sbb
jecxz
adc
test
add
and
sahf
arpl
inc
js
and
and
data16
jae
and
cld
mov
pop
adcl
imul
imul
jl
aaa
or
cmp
xchg
stos
je
call
mov
test
inc
rcll
mov
sbb
decb
or
insl
sbb
or
cli
jno
in
loopne
imul
and
aam
jne
cwtl
js
test
in
in
xchg
movsb
push
repnz
xor
mov
in
repz
adc
mov
cltd
add
sub
dec
push
adc
int3
mov
movsb
mov
ret
lea
add
icebp
push
inc
mov
rorb
hlt
jne
add
repnz
fcomp
fnsave
mov
test
insl
inc
inc
cmp
mov
ds
fldenv
js
popf
mov
or
and
lods
xchg
add
pop
mov
repnz
push
das
xor
mov
mov
and
push
lcall
aas
outsb
movsb
cld
inc
or
push
ret
jns
dec
xchg
rclb
dec
lcall
bound
pop
in
aaa
int
xchg
mov
pop
xor
lea
loopne
lret
cmc
or
js
outsl
add
push
jne
and
jns
int
cmp
pop
iret
xor
iret
scas
push
dec
sti
leave
jo
lock
cmp
mull
fstpt
sahf
shrb
lock
push
dec
loope
rorl
mov
push
push
push
movsl
xor
scas
lods
repnz
mov
pop
sbb
outsb
clc
inc
mov
add
push
jnp
mov
sub
mov
push
add
out
lods
cwtl
jecxz
pop
sub
cmp
push
pop
movb
push
push
jo
shl
jmp
pop
mov
stos
push
and
lea
xchg
outsl
out
cmp
jmp
sbb
arpl
pop
cmp
mov
fisttpl
fs
or
data16
adc
push
and
insl
cmp
jle
mov
push
fwait
movsl
sub
mov
mov
jae
xor
sbb
gs
xchg
ljmp
or
cmpsl
inc
fcmovb
decl
mov
test
cltd
sbb
lds
test
add
xchg
cs
jp
inc
sbb
arpl
inc
popf
int
sbb
cmp
popa
outsb
pop
sarb
bound
sub
mov
jb
and
inc
xchg
inc
cmp
xor
mov
mov
into
arpl
ja
sbb
es
shl
sub
cltd
int
pusha
scas
mov
xchg
pop
cmp
pop
or
aam
inc
and
fidivl
xor
insb
mov
add
ljmp
mov
dec
cld
sahf
jge
out
mov
jb
fcompl
adc
sti
rolb
mov
inc
sub
je
pop
rclb
sub
jo
out
adc
inc
insl
mov
mov
je
mov
fistl
inc
lcall
jno
add
push
movsb
or
in
filds
jae
push
icebp
outsb
push
mov
je
in
inc
stos
pop
jne
ror
and
jbe
add
lock
xor
in
cmp
and
ja
inc
and
pop
mov
xchg
pop
or
cmp
inc
repnz
insl
pushf
insb
or
out
jmp
add
push
add
lret
lock
imul
sbb
mov
popa
dec
jge
and
hlt
or
adc
inc
test
push
mov
xchg
std
outsl
shl
arpl
out
ret
inc
out
outsl
or
ljmp
sub
pop
jb
outsl
xchg
in
mov
in
dec
test
dec
lods
out
popa
xchg
scas
lret
inc
das
pop
cmpsb
loope
popa
push
mov
push
sbb
icebp
insl
ret
jne
pusha
pop
out
cmpsb
cmp
and
mov
std
xor
mov
cmp
aam
cmp
cmc
dec
cld
dec
test
scas
mov
jmp
adc
mov
and
push
push
stc
js
sbb
lea
pop
pop
insl
arpl
or
sub
jecxz
pop
and
lods
es
leave
add
clc
sbb
aam
lea
push
fimull
jnp
aad
cmp
loopne
shrl
es
or
xor
mov
jnp
xor
sbb
push
jp
or
mov
sbb
sbb
std
sbb
cli
mov
popa
fistps
outsl
mov
fdivl
enter
sti
testl
push
sahf
xor
imul
push
andb
pop
gs
ljmp
lods
icebp
adc
leave
adc
add
cltd
push
mov
and
push
test
mov
push
and
or
xchg
and
mov
xor
fwait
nop
mov
sub
or
xor
mov
jp
xchg
dec
adc
mul
outsl
and
roll
xlat
jmp
xor
mov
adc
lds
inc
and
adc
loop
out
mov
and
push
mov
mov
push
call
or
movl
inc
es
and
shrb
jg
lcall
and
xchg
add
pusha
mov
adc
cs
fcmovb
sub
aam
sar
dec
cmp
sbb
and
rolb
push
fidivl
mov
stc
push
popf
rcrb
mov
int
xorb
cld
or
jne
push
or
loope
cmp
sbb
sub
mov
sub
movsb
xchg
pop
mov
cltd
daa
mov
pop
imul
stos
cs
jmp
jo
dec
mov
xchg
shlb
gs
push
lcall
and
xchg
jne
cmp
icebp
lea
and
push
insb
sbb
inc
stos
test
pop
cmp
nop
and
mov
mov
lret
jl
jecxz
jb
ja
mov
push
xchg
sbb
rolb
lock
int
cmpsl
imull
mov
xor
ds
sub
push
inc
fists
rclb
neg
pop
sub
mov
test
lahf
xchg
or
fildl
pop
mov
hlt
lea
push
int3
or
xrelease
movsb
mov
sub
outsb
or
mov
imul
ja
mov
sahf
test
dec
shll
sub
arpl
and
lods
mov
cltd
and
ret
lods
and
jge
or
les
xor
hlt
dec
push
xchg
cmpl
and
cmp
stos
add
js
cwtl
sbb
in
test
sub
inc
and
jl
fldcw
adc
pop
nop
or
push
dec
or
adc
xchg
xchg
fstpt
in
sub
lds
jle
jne
stos
xchg
imul
inc
icebp
mov
shl
sbb
adc
out
add
aad
les
fwait
xchg
imul
or
iret
insb
addb
adc
cmp
aam
push
lret
mov
mov
mov
repnz
jp
in
and
or
mov
add
loopne
jo
scas
dec
int3
pop
jns
insl
cmp
mov
pushf
lret
lcall
addb
and
jns
adcl
sub
sahf
and
call
arpl
xor
imul
adc
jbe
aaa
fcmovbe
lds
mov
pop
xchg
dec
mov
push
jb
repnz
in
dec
imull
arpl
lock
popf
sbb
rcll
push
sbb
and
lods
loope
inc
inc
mov
mov
mov
dec
cmp
jge
xchg
fildll
mov
sbb
in
movsb
sti
jno
or
sti
inc
lods
pop
push
xchg
orl
out
pop
sbb
imul
out
and
outsb
push
int
inc
std
cmc
inc
push
mov
imulb
inc
ret
out
cld
sbb
test
insl
xchg
xor
arpl
aas
std
les
sub
std
mov
out
cmpsl
imul
mov
iret
ret
fcoml
dec
xlat
fidivl
push
pop
std
or
add
add
pop
cmp
mov
mov
sahf
jecxz
and
nop
out
dec
loop
stc
sbb
fwait
xor
mov
jge
leave
inc
xor
or
cmpl
sub
sahf
jo
adcl
les
test
dec
es
popf
std
or
adc
lods
pop
or
in
andb
stos
pop
lret
call
mov
fmuls
or
mov
dec
data16
fistpl
xlat
insb
fisttpl
shlb
cmpsb
sbbl
hlt
outsl
cmp
push
pop
outsl
push
repz
mov
jge
cld
mov
xchg
das
or
sbb
cmp
cs
adc
push
cmc
or
mov
mov
add
or
aad
xchg
fucom
lret
jmp
pop
test
cmpsl
imul
movsb
movsl
jp
cmp
pop
dec
ret
inc
xchg
and
bound
sbb
mov
push
add
repz
pop
sbb
cmpsl
jmp
push
int3
scas
outsb
sbb
add
sbb
fsts
loopne
xchg
add
xchg
xlat
sbb
cmpl
jne
enter
push
inc
inc
test
out
insl
insl
xor
and
pop
sub
ret
loop
ret
sbb
sti
inc
lahf
outsl
push
fs
fcoml
dec
scas
sub
or
xlat
jnp
fs
cld
cmp
loopne
sub
jnp
or
adc
xchg
mov
xchg
dec
mov
int3
mov
jnp
mov
das
cmp
lret
dec
jp
sub
xlat
pusha
jns
jge
repnz
insl
dec
inc
lods
xchg
xchg
enter
sub
hlt
mov
outsb
jp
fadds
std
mov
hlt
sahf
sbb
sti
mov
popf
lahf
sbb
nop
pop
loopne
ss
daa
mov
decl
fidivrs
pop
xchg
cmp
test
xchg
scas
jo
mov
or
push
pop
cmp
inc
push
dec
pusha
mov
dec
lret
movsb
scas
inc
and
mov
bound
shl
mov
and
fistpl
shll
push
mov
push
cmpsb
dec
in
mov
lcall
add
fldl
cmpsl
mov
push
dec
lret
ljmp
hlt
mov
jnp
mov
shlb
lock
scas
xor
sub
add
mov
aad
cmp
xlat
les
mov
add
jl
push
mov
test
repnz
xor
in
call
push
scas
repz
sub
pop
pushf
add
cmpsb
bsr
inc
push
sar
int3
nop
mov
sbb
or
pop
or
sar
xchg
int3
shll
out
dec
dec
dec
dec
push
test
xor
pop
pop
cld
insb
insb
pusha
sarl
ret
xchg
and
or
inc
cld
pop
xor
sti
mov
mov
add
jb
pop
fstpt
pop
push
add
insb
sub
fldenv
cmp
mov
lcall
rcll
cmp
stc
push
bound
js
les
adc
mov
gs
mov
pop
dec
pop
adc
lahf
ds
cwtl
mov
dec
xchg
aas
movq
pushf
int3
sub
push
fldenv
in
leave
ficompl
push
out
dec
aad
js
es
or
xchg
loopne
or
cmp
mov
adc
addr16
popa
jle
aaa
out
popf
push
mov
fxch
call
mov
pop
pop
dec
fwait
jns
inc
mov
std
pop
pop
shlb
add
cmp
xchg
dec
and
add
addl
mov
lods
push
add
pop
in
repnz
add
pop
mov
inc
jmp
mov
pop
scas
dec
stos
sbb
add
mov
push
mov
inc
outsl
cmpsl
lds
xchg
adcb
in
mov
mov
neg
and
and
adc
iret
daa
or
xor
adc
addl
sbb
call
test
or
add
xchg
popf
push
or
insl
inc
push
mov
cmp
stos
ds
pop
stos
repz
cmp
cwtl
mov
sub
cmp
int3
mov
push
sub
rclb
out
lcall
add
xchg
lods
sbb
cs
xor
sub
mov
mov
add
cmp
jle
pop
ror
jg
test
mov
shl
xor
xchg
not
cmp
mov
arpl
dec
and
fwait
sub
inc
jp
adcl
sub
loop
push
cmp
xor
rorl
adc
clc
sub
xchg
mov
aas
inc
or
jle
cltd
enter
rolb
xor
in
push
sbb
sbb
xor
out
mov
movsb
push
mov
in
mov
push
jle
iret
std
push
adc
cwtl
ret
pushf
xor
push
popf
dec
pop
fstps
cmp
fwait
outsb
ret
imulb
lret
push
lds
pushf
outsb
lds
add
in
or
add
jbe
adcb
pop
inc
or
push
andl
ror
mov
clc
outsb
lret
sub
and
sbb
pop
pop
nop
and
dec
xor
les
js
mov
jno
stos
data16
jnp
fistpl
out
pusha
jne
imul
pop
fs
mov
push
and
or
jbe
add
and
push
mov
pop
jnp
or
bound
and
jl
jae
mov
lods
sbb
nop
iret
xor
mov
lods
icebp
imul
adc
jle
fsubl
mov
clc
cmp
jecxz
sbb
lods
test
adc
xchg
dec
pop
mov
lea
pop
cmp
and
push
neg
test
cmp
into
mov
cmpsb
out
sub
inc
xchg
stc
mov
je
out
push
mov
inc
in
out
jecxz
test
lcall
pop
shrl
cmp
sahf
in
mov
scas
inc
fcoml
cmp
xchg
sar
or
out
push
push
push
nop
jl
orl
pop
stos
and
push
pop
adc
fwait
enter
adc
daa
ljmp
xor
push
addr16
add
xchg
rcrl
test
push
call
adc
subl
fnstenv
inc
stc
mov
push
jle
xor
or
imul
mov
xor
sub
repnz
or
pop
push
xchg
jns
xlat
imulb
loop
mov
cmpl
and
insb
jae
mov
call
leave
in
jmp
adc
dec
jae
pop
cmp
mov
test
pop
xchg
and
dec
fmulp
jle
push
mov
sti
lods
pop
rcrl
cli
jbe
fstpl
jle
inc
push
xor
pop
inc
mov
jl
fs
mov
push
mov
sub
jne
fnstenv
outsb
inc
jne
mov
sub
push
add
aaa
das
ljmp
es
sbb
iret
xchg
mov
cmp
fldl
add
stos
sub
shlb
jmp
inc
jne
add
jno,pn
mov
pop
and
popa
fiaddl
dec
push
rorb
cmp
outsl
fwait
cmp
mov
mov
stos
shrl
jns
ret
mov
leave
and
in
daa
push
adc
and
adc
ss
test
and
sub
mov
cmp
imul
jbe
push
mov
xchg
sarb
push
and
cmp
cwtl
pop
test
adc
filds
cmp
scas
js
inc
add
test
pop
push
movsl
das
mov
es
cmp
push
dec
addr16
cld
mov
cmp
sub
cmp
sub
loopne
lcall
sbb
jecxz
ss
dec
fwait
in
add
outsb
cmpsb
repz
repz
add
jbe
xor
jecxz
lock
movl
and
xchg
repnz
mov
add
aam
inc
aaa
inc
xlat
lock
xor
sbb
ret
fimull
js
out
out
pop
jp
test
out
push
pushf
sub
mov
jmp
ljmp
hlt
out
dec
xchg
xor
icebp
movsb
push
mov
dec
sbb
cs
arpl
mov
mov
test
lret
insb
mov
sbb
xchg
call
pop
mov
xchg
dec
into
leave
sti
cmp
outsb
add
cmp
jge
inc
test
xor
test
cmpb
ja
cmp
rcrb
fwait
int3
xor
enter
sub
cmp
inc
mov
hlt
inc
mov
or
test
xor
mov
enter
imul
sub
enter
stos
inc
mov
in
inc
data16
sub
dec
dec
inc
aas
sub
aam
cwtl
mov
loope
adcl
xchg
pop
lcall
sub
leave
pop
dec
roll
push
ljmp
mov
mov
mov
call
adc
sbb
adcl
pop
insl
pop
stos
pop
lea
out
shl
fsub
mov
add
rdtsc
mov
inc
mov
xchg
xor
clc
push
cmp
and
mov
fs
jge
add
jmp
mov
mov
jnp
cli
lods
adc
xor
in
xor
xchg
pop
imul
xchg
jg
imul
dec
xchg
fldt
mov
push
imulb
xchg
jb
insb
call
push
jno
ljmp
out
pop
fwait
aaa
dec
pop
sbbl
test
mov
lea
sub
xor
loop
lods
xor
lcall
stos
adc
push
pop
or
cld
jle
pusha
adc
aas
mov
arpl
push
mov
out
pop
dec
rcr
popf
outsl
imull
out
sbb
inc
push
push
push
or
or
scas
xlat
inc
lahf
mov
ja
inc
fwait
jno
je
movl
adc
xchg
jns
fcmovnb
insl
sbb
pop
sbb
fdivl
mov
cwtl
mov
ljmp
repz
loop
or
subb
in
dec
mov
call
mov
lret
lock
jg
lret
popf
sahf
es
push
aas
movzwl
mov
nop
add
sub
mov
cmp
pop
add
adc
mov
in
xchg
cmp
mov
rorl
in
sbb
add
popa
and
mov
jb
cmp
push
mov
mov
outsb
aam
int3
mov
mov
sbb
ret
call
ds
inc
int3
repz
enter
cs
inc
int3
pop
mov
dec
inc
mov
xchg
fbstp
adc
adc
pop
jo
inc
stc
mov
pop
mov
rcrl
dec
lahf
je
push
fdivr
xchg
fnstenv
bound
push
pop
movsb
lock
jmp
lods
lret
mov
add
sub
cs
adc
sti
inc
fdivrs
mov
test
push
ffreep
mov
lret
mov
fwait
jno
aam
inc
push
adc
lods
outsl
sub
xchg
insb
xor
out
mov
jbe
clc
mov
pushf
fsubrs
loopne
mov
loop
push
jns
imul
test
mov
mov
insb
mov
jecxz
push
and
xor
movsb
movsb
and
push
adc
cltd
shlb
add
icebp
sahf
mov
test
test
add
dec
pushl
rorb
and
je
out
xor
mov
push
popa
pushf
mov
pop
cmp
push
insl
pop
adc
incb
lock
sub
iret
cmpsl
pop
sbb
in
mov
jb
rcrb
add
mov
dec
xor
push
sub
sbb
mov
and
out
mov
cmp
faddl
sub
les
mov
outsb
hlt
int3
mov
das
mov
pop
or
mov
fs
xchg
shrb
mull
mov
mov
xor
aad
inc
cmp
add
movsb
or
mov
adc
cmp
cmc
pop
lds
repnz
jecxz
andb
xchg
mov
pop
dec
xorl
lret
loop
xchg
jl
enter
movsb
xor
pop
pop
xlat
shrl
call
jp
mov
idivb
or
cmp
fdivl
adc
inc
cvtpi2ps
imul
js
mov
lock
arpl
jbe
stos
rorb
ljmp
stc
aam
push
iret
dec
sub
jns
std
dec
mov
int3
lea
xchg
movsb
ret
fmul
xor
imul
nop
stc
repz
adc
jo
inc
and
xchg
add
rcrb
sarl
jle
sbb
push
testl
cmc
mov
ror
mov
push
push
shrb
jle
fiadds
cltd
push
mov
mov
fisubrl
out
movb
pop
fiaddl
adcl
pop
jmp
push
outsb
jge
sub
mov
ja
sub
jbe
lret
ficoms
inc
mov
dec
mov
cmpsl
xor
mov
sarl
mov
mov
cltd
jmp
les
out
and
xor
jno
jb
adcl
aaa
pop
jge
mov
sub
and
pop
out
push
push
imul
inc
popa
mov
fs
mov
lods
sub
clc
test
add
xchg
or
fldl
das
mov
inc
pop
popa
jns
dec
shl
jnp
ret
adc
pop
daa
adc
sub
pop
test
xor
cmpsl
and
enter
lret
xor
pop
inc
cmp
hlt
inc
mov
adcb
adc
call
mov
sbb
mov
jae
divl
inc
pop
mov
lds
adc
sbb
int3
jns
jg
imul
xorb
and
jnp
sti
rcrl
push
iret
pop
pop
fidivl
stos
pop
add
inc
fimull
xor
rclb
das
fadd
enter
sbb
clc
clc
jo
xchg
mov
stc
add
dec
pop
ret
scas
inc
mov
fdivrs
sbb
mov
mov
mov
sbb
push
ljmp
jmp
mov
dec
or
mov
test
mov
jge
push
jns
xor
fsubs
ja
mov
int
cmc
jb
xor
repz
xor
stos
add
imul
cmp
jno
adcb
mov
add
popa
adc
cmp
cmovbe
lcall
push
xchg
test
sbb
xor
dec
icebp
or
dec
cmp
in
shrb
adc
cmp
xchg
mov
mov
cmp
outsb
aas
aad
outsl
outsl
cltd
daa
mov
dec
outsb
orl
leave
or
and
in
add
sub
in
lea
icebp
out
ret
pop
cld
mov
dec
push
rcrl
xor
mov
adc
mov
push
mov
insl
push
xor
call
stos
shlb
lods
add
mov
stos
mov
outsb
iret
shrb
pop
rcrl
in
fs
and
jae
fcmovnb
push
js
xor
pop
mov
pop
ret
test
mov
mov
les
adc
out
mov
pop
mov
aaa
lret
or
in
imul
sarb
adc
fstl
cmp
cmc
inc
xchg
adc
mov
xor
movsb
clc
adc
add
pushf
pop
addb
enter
js
mov
sub
in
mov
jb
out
push
xor
dec
lds
arpl
daa
jg
xor
inc
jle
and
test
daa
xor
frstor
xor
add
push
push
movsb
mov
in
pop
xor
repz
pusha
xor
jp
shlb
arpl
icebp
sub
mov
addr16
loop
repnz
outsb
lea
cmc
mov
adc
mov
xchg
inc
test
cmp
push
jb
inc
mov
lods
sbb
inc
mov
mov
jmp
pop
and
xor
dec
fdivs
push
stc
push
cmpsl
jno
leave
test
std
rcll
mov
std
xchg
daa
xchg
push
sbb
push
add
dec
cwtl
xchg
xor
inc
in
and
jp
negb
mov
es
outsb
cs
hlt
je
pop
add
dec
lock
imul
mov
stc
sbb
mov
jl
adc
aas
pop
shr
jmp
adc
adc
mov
incl
test
cmc
aad
dec
sbb
mov
jge
sub
int3
fistl
dec
or
mov
and
imul
add
add
insb
out
mov
jno
aam
mov
in
mov
sbb
pop
test
rclb
dec
lahf
cli
outsb
je
jns
pop
popf
test
sub
dec
push
daa
sub
repnz
lret
mov
scas
sub
sbb
or
sbb
xor
in
popl
and
inc
jg
std
mov
jbe
sub
stos
add
inc
sub
lock
jmp
pop
jecxz
hlt
shll
cmpsl
mov
mov
dec
mov
push
jbe
addl
or
adc
mov
lock
push
xchg
xchg
sbbb
jecxz
jb
mov
fcomps
cmp
cltd
push
mov
mov
sub
or
mov
std
ret
push
in
jo
push
mov
mov
les
mov
test
sbb
nop
and
sbb
adc
adc
xor
and
in
dec
int
mov
mov
push
xor
jbe
and
cwtl
in
addl
sbb
mov
dec
push
dec
mov
dec
or
dec
andb
inc
add
dec
mov
jae
shrl
push
adcb
push
jnp
xor
testb
mov
or
ss
xchg
sti
lods
jp,pn
mov
pop
adc
pusha
sub
lret
lret
cltd
push
into
lret
cmpsl
jmp
sbb
sbb
adc
in
xor
addl
fcmovbe
adc
add
pop
cmp
rclb
mov
inc
sub
stc
mov
dec
cmc
xchg
scas
and
insl
jecxz
add
jecxz
daa
pavgw
push
cmp
aas
inc
mov
popa
out
es
and
sbb
xor
push
mov
rorl
daa
sub
iret
adc
and
mov
aad
inc
scas
and
jnp
ds
xchg
push
loop
das
jp
jge
mov
pop
jecxz
pushf
xor
int3
mov
xor
ljmp
sub
sti
cmpsl
mov
add
jmp
fisubs
cmovbe
push
push
out
inc
notb
jg
or
std
sbbb
lcall
gs
cmpsl
xorb
push
stos
jge
sbb
jle
loope
sbb
xchg
repz
dec
nop
jno
inc
adc
dec
sbb
cmp
push
dec
mov
int3
sbb
pop
push
and
addr16
cmp
adc
and
sarl
in
test
dec
dec
bound
imul
test
dec
add
cmp
lret
adc
je
mov
lock
mov
in
clc
test
psrlw
xor
les
ljmp
pop
stos
xchg
xor
test
adc
sbb
shll
insb
inc
mov
fcoms
fstpt
inc
out
mov
je
test
mov
clc
mov
movsl
or
adc
out
push
call
test
ja
xchg
or
push
mov
outsb
je
stos
test
cwtl
ss
or
xchg
and
inc
lock
int3
fwait
inc
sbb
adc
pusha
adc
add
mov
xor
mov
xchg
inc
push
or
in
movsb
test
jbe
mov
inc
push
or
scas
mov
sub
scas
fdivr
outsb
xchg
cmpsl
xchg
mov
mov
shr
mov
mov
das
jnp
aam
lods
adc
mov
mov
cld
in
fsts
mov
test
pop
sahf
scas
pop
sbb
aam
in
mov
adc
mov
lods
std
mov
rorb
jns
andl
mov
add
dec
cmp
add
xor
and
in
mov
ficoml
xor
mov
jae
lea
push
push
ret
cmp
mov
mov
adc
fsubs
ds
add
mov
js
in
mov
adc
repz
cld
out
or
jae
pop
push
push
or
ja
xor
rorl
add
inc
insb
neg
fldl
rcl
mov
sbb
and
cmp
cmp
mov
lret
xchg
mov
cmp
xchg
pop
shlb
movl
and
rorl
xor
sub
es
pop
and
shll
pop
push
inc
xor
call
fucom
mov
pop
xchg
add
rcrl
iret
lahf
scas
xchg
imul
cmpsl
inc
or
out
in
cmc
into
aaa
sub
fidivl
popf
lcall
add
add
xchg
loopne
push
xchg
add
cld
dec
push
std
lahf
rcll
stos
xchg
xchg
enter
mov
movb
mov
cmc
xor
dec
rcll
mov
jle
leave
sub
cmpsl
ljmp
js
lret
sub
loopne
popw
hlt
push
mov
push
cmp
jp
xchg
jnp
cmp
pusha
mov
stc
aas
addr16
push
or
sti
mov
mov
or
cmpsb
pop
nop
inc
sti
loope
and
push
sbb
mov
lret
call
adc
orb
mov
mov
inc
lea
mov
jae
bound
inc
sub
mov
xchg
adc
add
cmp
lret
xor
enter
push
movsl
cmc
push
rolb
xor
inc
xor
lcall
dec
jae
add
pop
cli
mov
inc
pusha
into
xor
xchg
sbb
push
jg
pop
sbb
push
pusha
add
push
jg
xchg
cmp
das
mov
jno
fidivl
call
rorb
adc
sub
mov
les
push
repz
mov
and
aam
inc
ljmp
in
imul
pop
or
scas
mov
add
dec
in
in
test
xor
inc
fisubrl
mov
add
push
pushf
push
sub
stc
fidivrl
or
fisubrl
sub
dec
data16
mov
adc
pop
test
adc
xchg
int
out
cmp
push
idivl
and
pop
int3
cmp
leave
sub
iret
sti
fimuls
stos
into
xchg
mov
inc
pop
jp
jge
xorb
sarb
inc
out
xor
out
inc
mov
lods
xor
les
das
xlat
mov
mov
sub
pop
lea
jg
aam
loope
xchg
xor
cmpsb
into
cmp
pop
ja
lahf
sbb
jo
xchg
daa
outsl
je
jb
jge
test
stc
fstl
lea
xchg
arpl
andb
jge
repnz
jecxz
jecxz
mov
sbbb
mov
sti
scas
nop
cmpsb
into
shlb
adc
enter
pop
nop
adc
das
mov
push
cmpsb
or
hlt
fsubp
mov
and
out
sub
cld
mov
and
jae
mov
push
in
into
cltd
cmp
lea
jle
out
mov
push
aam
ffreep
inc
cmc
jbe
mov
jl
xor
lods
jge
sbb
dec
push
sarb
adc
inc
ret
mov
cmp
outsb
mov
pop
and
mov
fdivl
push
repz
or
inc
nop
dec
lret
cli
pusha
addr16
dec
mov
jecxz
jb
or
sahf
pop
jne
adc
xor
and
aaa
in
mov
push
gs
test
push
add
addb
mov
cli
stos
dec
add
push
dec
adc
and
xor
lea
clc
xor
imul
addr16
lods
xchg
xor
out
mov
cmc
push
add
les
jo
ljmp
dec
sbb
xchg
pop
sub
xor
add
js
pushf
sub
push
jo
xor
jb
sub
repz
dec
es
mov
mov
adc
in
lock
int3
shll
call
sti
ret
clc
add
ja
cmc
jb
xor
insl
push
mov
sbb
xchg
aaa
aas
pop
lock
pop
jg
divl
mov
push
repnz
ljmp
dec
sbb
push
daa
jb
clc
inc
lods
push
daa
mov
sar
mov
push
jge
pop
push
push
nop
bound
popa
lock
sarb
pop
xchg
dec
jns
and
sub
mov
jle
cmp
out
push
repz
js
aas
std
jle
gs
xchg
or
jns
ja
jae
shrb
mov
push
sub
daa
sub
loope
xchg
push
cmp
cmp
or
inc
cmp
cmc
test
sbb
lahf
in
sbb
add
addl
int3
ret
scas
cmpsl
xor
sub
push
xor
jecxz
add
xchg
mov
lcall
xchg
mov
push
mov
loopne
mov
dec
sub
jl
cli
addr16
and
jns
dec
pop
imul
aad
fbld
mov
mov
adc
bound
xor
and
or
and
cmp
and
das
ret
adc
xchg
mov
sbb
movb
mov
in
sub
shll
insl
mov
xchg
or
cmp
pop
adc
jge
pop
inc
stos
pop
and
dec
les
dec
pop
not
inc
scas
out
xor
mov
mov
cmp
iret
lock
push
pushl
mov
dec
jle
mov
sbb
out
pushf
mov
jne
in
or
pop
and
loopne
call
add
mov
leave
mov
out
sahf
repnz
ret
xchg
mov
jne
mov
pop
das
xchg
xchg
iret
adc
cwtl
push
xchg
jbe
or
loopne
xlat
out
xchg
cltd
lret
mov
addb
and
or
mov
inc
popf
in
mov
sbb
stc
inc
out
test
xor
mov
cmp
inc
bound
or
inc
mov
jle
faddl
or
xchg
pop
and
push
inc
loope
aam
mov
inc
mov
jnp
cltd
cmc
and
repz
push
sub
jmp
pop
xchg
add
popf
es
mov
jg
stos
out
push
sti
aad
jae
adc
adc
popa
and
pop
das
aas
stc
sub
mov
fstl
das
push
pop
pop
popf
cmpsb
enter
lcall
lret
insl
sub
movsb
test
fcoms
pushf
imul
imul
push
icebp
xchg
or
mov
fldenv
add
lods
jb
xchg
bound
and
or
out
lfs
sub
cli
or
dec
nop
mov
or
lods
mov
or
jge
pusha
lods
js
orps
and
fcmovu
xlat
mov
je
lods
stc
add
add
lahf
and
lea
push
scas
lock
lret
pop
push
push
push
dec
jp
jg
jne
test
cmp
mov
sbb
jbe
in
mov
sbb
mov
movsl
insb
iret
dec
xchg
imul
mov
xchg
jae
jno
sub
add
popa
adc
push
or
bound
aas
enter
addr16
test
inc
cmp
xor
cltd
repz
in
dec
mov
cmp
xlat
xchg
cltd
jo
cwtl
test
xor
adc
out
pop
test
jmp
imul
adc
stos
mov
pop
inc
or
out
flds
xor
or
sub
dec
cmp
out
and
ljmp
sahf
int
and
pop
ret
dec
in
xchg
or
cli
out
aaa
popf
mov
pop
pop
test
shrb
sbbl
lods
xchg
cwtl
adc
mov
ss
push
sbb
lock
sahf
mov
rcl
sahf
nop
sbb
fdivr
cld
mov
out
mov
dec
and
in
jbe
sub
scas
jmp
decl
jmp
es
cwtl
push
stc
vrcpss
add
jge
enter
jo
sbb
aas
adc
adc
roll
jp
pop
adc
shl
cld
dec
cmp
icebp
jg
xor
insl
out
cmp
loop
in
in
pushf
iret
xchg
mov
or
lods
insb
or
ds
inc
cmpsl
hlt
pop
dec
cmp
pop
test
xor
gs
mov
out
adc
mov
add
jecxz
push
dec
mov
add
in
xchg
mov
adc
push
lret
jnp
mov
or
jb
adc
bound
lret
loop
cmp
jnp
test
shl
pushf
inc
push
add
and
push
mov
hlt
in
push
sarl
adc
pop
data16
cltd
mov
xor
cwtl
mov
mov
mov
test
scas
add
adc
test
call
jle
push
jle
lret
sub
nop
jne
outsw
jae
mov
dec
sbb
js
lods
mov
add
popa
xchg
xchg
cmpsb
or
inc
push
test
fwait
cld
push
fs
dec
outsb
mov
push
fmull
cmpsb
sti
or
ds
mov
lret
aas
aaa
or
mov
ja
les
cvtpi2ps
fnsave
rolb
sbb
gs
cwtl
jnp
in
fcmovbe
outsl
out
xchg
ljmp
sub
pop
add
les
mov
aaa
jg
rolb
das
std
aam
aad
icebp
push
leave
cltd
xchg
fs
xor
stos
mov
add
adc
mov
xor
leave
aad
xor
xchg
enter
sbb
adcl
lods
add
in
aas
hlt
cmp
dec
repnz
adc
mov
cmp
lcall
mov
push
sub
and
call
sub
mulb
bound
arpl
cmp
push
xchg
cmp
frstor
push
mov
and
pusha
dec
jns
inc
shlb
inc
pop
pop
sbbl
outsb
or
pop
jmp
pop
out
das
xorl
ss
outsb
shufps
push
jno
out
sbb
mov
popl
leave
inc
push
cmpsl
outsl
xchg
mov
ret
jnp
and
or
adc
in
xchg
ja
mov
scas
inc
in
sbb
les
add
push
stc
test
push
xor
mov
and
jne
mov
mov
xchg
dec
pop
les
jecxz
xchg
mov
mov
jg
pop
ret
stos
mov
pop
movntq
cmpsb
fs
cld
push
mov
jae
inc
pop
xchg
push
hlt
jns
cmpsb
push
hlt
mov
jae
inc
cmpl
aaa
jnp
aas
dec
sub
jg
jle
stos
aad
mov
popf
enter
lock
dec
push
push
pop
adc
lret
mov
arpl
sbb
add
mov
adc
jg
scas
mov
out
sarb
int3
inc
dec
loop
enter
inc
cmc
cwtl
add
inc
xor
and
scas
cmp
insb
sbb
cltd
nop
xor
sub
or
mov
or
hlt
sti
push
and
std
push
fistpl
lret
mov
add
ja
test
leave
mov
cltd
leave
xor
xor
mov
sarb
pop
add
aad
enter
and
pop
inc
mov
add
or
dec
sub
xchg
sarl
cld
jae
pop
icebp
fisttpll
and
mov
sbb
idiv
push
and
repz
mov
cmp
jns
dec
or
mov
mov
add
mov
mov
out
pop
mov
loope
ret
xrstors
add
or
pushf
not
icebp
test
shrb
adc
mov
loope
jns
xor
jle
mov
xor
sbb
sub
pop
mov
mov
mov
jnp
cmc
jnp
dec
in
mov
ficomps
sbb
xchg
jne
xor
xor
mov
cmpb
push
inc
arpl
sbb
pop
out
fbld
xchg
mov
jae
cmpsb
adc
push
add
xor
mov
ljmp
or
mov
xor
cmp
push
sbb
push
push
sarl
aad
ja
cmpsl
push
rolb
lock
sbb
mov
xchg
inc
in
jae
out
xchg
loope
mov
gs
popf
pusha
xchg
jbe
fildl
mov
push
xor
enter
iret
mov
lods
shr
xchg
dec
fwait
rolb
rcrl
mov
stos
xchg
mov
enter
inc
push
ror
cmp
xor
dec
mov
fwait
jmp
or
push
xchg
ss
inc
push
mov
cwtl
xchg
ds
rolb
fs
sub
pop
mov
loopne
popa
loop
icebp
out
test
dec
repnz
pop
rclb
xchg
inc
prefetch
cmpsl
mov
dec
dec
scas
in
adc
in
outsb
pop
inc
mov
adc
jno
mov
adc
repz
out
cmpsb
ljmp
xor
xor
aas
jb
popa
hlt
cs
jmp
inc
std
je
sahf
sbb
xor
movsl
movsl
into
imul
mov
xchg
fdiv
hlt
scas
jp
sarl
lea
pop
cld
cmc
sbb
sub
cli
and
clc
cs
rcl
clc
adc
jo
dec
je
inc
adcb
jbe
xor
and
jg
movsb
outsl
fmul
out
mov
xchg
pop
pop
in
inc
loop
mov
push
xchg
in
in
mov
insl
cmp
jae
jno
xchg
data16
xchg
mov
mov
loopne
sbbb
es
subb
jecxz
lock
fsubs
les
incl
rolb
out
dec
mov
sub
shrl
les
sbb
aaa
jbe
orl
sbb
out
xchg
scas
rcr
push
inc
std
cwtl
fsubr
push
cltd
lods
push
xor
ja
pusha
jl
lret
mov
imul
test
fldl
imulb
push
xchg
xchg
or
inc
sbb
push
pusha
in
add
in
inc
rclb
push
lods
dec
fmulp
test
sub
test
cltd
jnp
int3
adc
mov
sub
fs
lahf
or
imull
ja
minps
in
mov
mov
jecxz
out
dec
jl
cmp
cmp
aad
xor
rorb
xchg
aas
fdivr
inc
sub
cmpsb
or
es
das
push
inc
inc
fisttpl
jns
jbe
aas
mov
enter
mov
ja
dec
pop
sub
cld
inc
pop
mov
dec
xchg
outsl
subl
inc
cmp
jo
repz
add
xchg
mov
dec
or
jmp
mov
popa
sub
push
stos
sbbb
adc
mov
xor
loope
loope
mov
sbb
cmp
ret
sti
mov
jbe
sub
xchg
dec
cmp
cwtl
mov
cmp
pop
xor
or
das
jns
xchg
stos
sub
sarl
mov
enter
push
fnsave
outsl
add
and
int3
sbb
push
cmp
dec
scas
add
jae
cmp
pop
gs
or
orb
jge
push
ss
or
xor
push
jb
shr
cli
add
cmp
adc
xor
add
mov
call
mov
xor
ja
cwtl
shlb
loop
ret
push
mov
jno
mov
enter
loopne
ret
adc
mov
fsts
aaa
push
lahf
daa
shll
addr16
popa
mov
jb
rcl
cs
ds
in
mov
repz
dec
jl
cmp
negl
mov
cmpsb
call
lods
sub
xchg
dec
adc
cmp
sahf
jp
add
pop
sbb
orb
hlt
cmp
leave
add
sub
fidivs
xchg
dec
fs
lds
rolb
pop
nop
push
jecxz
mov
fsubrl
mov
cmc
data16
addb
arpl
xchg
arpl
popa
out
xchg
and
sub
das
in
xchg
icebp
pop
pop
in
sub
sub
push
mov
shlb
xchg
std
ds
in
xlat
outsb
or
ficoms
sbb
xor
dec
inc
shll
jbe
das
sarb
inc
jo
fistpl
sub
or
adc
std
cmp
cmp
arpl
pop
movsb
shlb
das
ss
out
pop
mov
arpl
push
popa
pop
out
xchg
pusha
xor
in
pop
test
adcl
aaa
test
and
leave
xchg
fdivr
nop
test
testl
fbstp
cmp
sahf
adc
sub
add
or
loope
jns
fcmovu
sahf
pop
xchg
inc
je
sbb
push
inc
inc
das
inc
inc
jno
iret
sub
jmp
cmp
inc
mov
push
int3
add
push
aaa
test
sbb
movsl
fsubs
pushf
scas
jbe
cmp
and
push
mov
fadds
mov
jmp
lcall
jge
in
out
scas
jae
aas
stos
das
fs
mov
inc
push
and
out
inc
hlt
sub
mov
xor
sub
jge
shl
jp
je
push
dec
cmp
cmp
int
lock
sub
mov
pop
movsl
push
xchg
cli
jg
push
mov
inc
push
out
fistl
dec
data16
dec
mov
int
pusha
insl
sbb
adc
test
jb
dec
shll
sbb
sbb
mov
stc
push
in
shr
or
or
stos
fdivrs
dec
gs
and
add
test
xlat
neg
mov
int
jecxz
cmp
js
lock
jbe
sub
mov
add
jg
imul
sub
xchg
or
push
cs
push
xchg
into
bound
fs
mov
rorb
shll
xchg
cli
iret
pop
cmc
inc
cld
outsb
dec
push
xchg
pop
sbb
jnp
sbb
clc
data16
rolb
dec
sbb
ljmp
push
aam
mov
adc
leave
and
push
mov
out
push
push
movsl
add
cmp
std
mov
jl
roll
and
mov
sub
mov
inc
cmpsb
inc
push
mov
mov
jns
test
shll
push
cmpsb
enter
mov
mov
les
cli
in
ljmp
imul
mov
jmp
test
shlb
jns
and
test
out
sti
sbb
rclb
add
jecxz
inc
sbb
dec
mov
arpl
lods
sbb
push
outsl
popf
mov
arpl
ljmp
push
ds
inc
and
pusha
imull
inc
pop
and
push
inc
xor
cmp
pusha
jl
or
pop
add
sbb
xor
sub
sub
std
ja
lret
push
mov
iret
sbb
ljmp
jne
xchg
push
inc
jmp
ds
add
mov
addr16
sbbl
std
adc
in
std
cmpsb
or
cmpsl
pusha
int
dec
mov
mov
mov
imul
xchg
insb
adc
aaa
dec
inc
xchg
mov
push
imull
xlat
rolb
rcrb
mov
das
or
inc
add
mov
sbb
or
cmp
xor
clc
dec
movsl
jle
push
stos
rcr
mov
push
dec
jecxz
loope
pusha
hlt
sbb
sbb
push
and
lret
pushf
mov
lds
movsb
sub
jle
into
xor
mov
popa
clc
mov
xchg
xchg
leave
ret
lods
xchg
xchg
adc
xchg
mov
jp
sub
xor
sti
inc
int3
int
mov
xchg
stc
iret
frstor
outsl
and
jle
outsl
sbb
inc
or
fnsave
out
mov
or
fwait
int
outsl
in
jne
xor
dec
pop
adc
sbb
sub
add
jns
push
mov
nop
test
mov
or
push
inc
pop
add
je
popf
movsl
pop
or
pop
das
cli
lret
movsb
sbb
sbb
das
mov
jle
and
cmpsl
mov
ds
insb
sub
stc
lea
push
xor
sahf
pop
repz
icebp
icebp
mov
ret
int
into
mov
lea
jns
out
ret
aad
mov
lods
into
and
pop
add
adc
push
mov
test
mov
mov
mov
imul
fcmovnu
lods
scas
lock
push
ficoml
jmp
mov
cmpsb
cwtl
call
ret
jmp
adc
mov
popa
fdiv
adc
repnz
imul
mov
hlt
pop
bound
jne
jecxz
or
pop
or
jne
out
js
mov
lods
mov
pop
orb
movsl
push
into
insl
push
sub
test
pop
addl
push
sub
dec
cmc
sub
jne
popa
rclb
int
pop
dec
data16
ret
cs
mov
movsl
clc
bound
fcoml
mov
in
loop
push
clc
mov
pop
test
mov
mov
adc
pushf
and
jp
in
sbb
pop
sub
add
push
mov
test
add
ret
sbb
adc
dec
push
push
outsb
inc
inc
jle
loope
jnp
out
lret
xchg
inc
imul
cwtl
lret
jl
add
push
lahf
cmp
out
dec
jmp
test
int3
mov
inc
loopne
mov
pop
add
cmpsb
adc
and
icebp
or
cwtl
inc
push
pop
adc
int
pop
and
sbb
inc
pop
outsb
and
lcall
and
jnp
xor
mov
adc
fnsave
repnz
sbb
add
cmp
jge
bound
mov
push
mov
mov
fldt
xor
mov
in
roll
pop
lret
enter
xor
mov
loopne
out
push
mov
sar
stos
into
sub
lods
cs
and
add
nop
rcl
inc
mov
cmp
lret
sbb
bound
adc
bound
jl
jmp
cld
cmp
pop
pop
inc
lahf
mov
jmp
xor
adc
pop
dec
push
out
xchg
add
js
adc
push
mov
mov
bound
in
sub
xor
mov
or
inc
pop
in
pop
scas
lret
imul
mov
adc
outsl
cmp
aad
xor
es
fistps
sbb
je
add
mov
mov
push
shll
jne
sub
cmp
and
push
clc
loop
in
mov
cli
pop
add
sbbl
add
or
xchg
imul
mov
out
icebp
adc
mov
mov
push
ret
rcrb
pop
sub
mov
cmpsl
notl
and
sub
cmp
movsb
fadd
addw
jb
lds
cmc
jb
push
sbb
cmpl
divb
in
loop
out
fisttpll
sbb
rclb
stc
or
ret
orl
aaa
pop
inc
jmp
xor
das
sub
ret
xchg
cmp
and
imull
inc
scas
in
push
in
pop
jbe
in
inc
cmp
out
negl
adc
xor
pop
in
out
jne
inc
fwait
mov
pop
sub
jnp
adc
and
jg
add
out
jmp
mov
push
ljmp
aad
adc
hlt
shrd
mov
pusha
mov
fsubr
jne
adc
dec
adc
loopne
out
mov
xchg
hlt
and
lahf
adc
bound
inc
xchg
ficompl
loope
call
push
cwtl
clc
cltd
je
push
repz
popa
iret
ljmp
lods
pop
xchg
fpatan
fcoml
add
jb
fldl
aaa
rcl
xor
popa
adc
sbb
adc
leave
stos
xchg
repz
fldenv
and
xlat
movsl
push
fmul
movsl
ljmp
loop
inc
xor
or
cmp
loopne
jl
ret
lret
iret
lret
scas
sbb
aad
cmp
jo
subl
popf
out
inc
idivb
dec
out
or
sub
inc
mov
xchg
jecxz
repnz
movsb
int3
mov
js
arpl
cmp
iret
je
sahf
jns
stos
les
xchg
and
or
or
push
add
adc
adc
xor
adc
jg
js
daa
movsl
outsl
mov
cltd
fwait
jo
sti
insb
adc
imul
inc
int
aas
mov
dec
enter
inc
inc
jl
jns
repnz
clc
xchg
test
mov
test
sub
dec
mov
orl
dec
scas
xor
inc
lods
popf
mov
daa
sbb
stc
mov
cs
fidivrl
mov
repnz
xor
cli
mov
rcrb
xchg
mov
and
insb
les
shrb
mov
hlt
jg
aas
arpl
lods
push
jge
pop
add
sub
ja
fdivs
or
daa
jbe
call
mov
ss
jne
gs
cmp
jnp
test
xor
pop
addb
mov
xchg
jae
add
cltd
mov
sbb
repnz
outsb
les
fimull
mov
or
add
jmp
or
sub
dec
lods
fisubrl
loop
aas
sub
inc
inc
dec
lods
ds
or
jb
inc
xor
clc
jne
jle
out
rcll
in
lods
lods
arpl
stos
popa
inc
not
inc
and
or
pop
shrb
cs
ret
and
test
ljmp
stos
test
test
punpcklwd
ja
add
call
mov
pop
xor
jecxz
xor
call
cmp
jne
orb
mov
add
movsb
call
arpl
loopne
mov
cmp
xor
xor
in
dec
pop
adcl
mov
or
xchg
jmp
or
rep
int
insl
jbe
add
mov
inc
cli
imul
mov
lcall
jmp
mov
aas
arpl
scas
adc
pop
stc
sub
mov
icebp
aad
movsl
sub
adcl
add
and
jns
imul
mov
push
adc
and
mov
sar
test
push
addl
mov
cwtl
and
es
and
xor
lea
inc
mov
push
or
pop
inc
mov
push
decb
insl
pop
loop
rcrl
popf
push
int3
mov
mov
imul
mov
mov
test
imul
xchg
ret
sbb
call
repnz
inc
inc
jmp
sub
scas
leave
mov
lds
imul
inc
add
or
cmp
dec
fidivl
scas
xchg
cltd
ds
test
push
out
fdivr
test
xlat
roll
and
jge
in
pop
popa
inc
mov
sub
orb
fstl
lret
mov
mov
jge
lods
mov
fwait
out
xor
sbb
xor
addr16
pop
jge
inc
rcl
push
or
pop
loop
in
push
cmpsb
dec
inc
adc
xor
pop
jbe
pusha
loop
lea
add
popf
push
lods
sub
xlat
mov
jns
mov
test
fisubrl
cmp
xor
jecxz
into
jae
add
jmp
jo
and
in
jp
lret
inc
add
pop
sbbl
mov
adc
add
mov
scas
and
pop
jno
cmp
jb
cmc
cwtl
in
mov
xchg
cld
mov
push
pop
or
xor
ss
lahf
jp
scas
and
add
nop
dec
repnz
xlat
xlat
push
repz
jmp
insl
jge
add
sub
sti
mov
into
mov
cli
xor
pop
jp
loope
dec
pop
and
ds
or
vfrczss
cld
push
push
dec
xchg
pop
pop
test
aaa
jne
call
lcall
out
test
cmp
subl
inc
xor
adc
shlb
jb
inc
fistl
cmp
inc
inc
lret
dec
mov
in
xchg
cld
filds
mulb
insb
adc
lods
inc
push
xor
push
xchg
pop
enter
hlt
add
push
subb
iret
xor
pop
adc
clc
insl
imul
push
je
filds
addb
das
imul
gs
xchg
scas
aaa
dec
mov
fmuls
fadds
jmp
jnp
add
mov
mov
sub
inc
insl
add
jno
jo
jecxz
mov
gs
xorl
sub
sbb
jb
lds
sub
xchg
inc
sti
outsl
and
rclb
stos
pop
inc
rcll
int
adc
mov
out
cmp
movsl
out
fdiv
fwait
xchg
add
jno
jmp
ljmp
inc
dec
jp
gs
adcl
iret
inc
mov
xor
stos
repz
pop
dec
adc
lds
bound
add
clc
or
hlt
in
es
or
fsubr
sbb
stos
jbe
adc
dec
fldcw
sti
xchg
sbb
ret
movsl
or
sub
ja
pop
or
shrl
jns
mov
inc
inc
sbb
adc
sbb
lcall
push
in
mov
mov
mov
ss
mov
pop
sub
enter
pop
push
jle
xor
lock
scas
pop
jp
sub
ljmp
mov
fiaddl
mov
cmp
xchg
add
add
jp
scas
push
je
or
in
pop
mov
or
sub
test
jbe
cltd
icebp
and
mov
sbb
scas
pop
mov
lret
and
add
add
cwtl
mov
sbb
fs
xchg
mov
in
andl
pop
or
mov
repz
xlat
jb
cmp
adc
push
js
mov
ljmp
aam
cmp
sub
and
lahf
shll
cmp
das
in
fs
or
pop
ffree
insl
mov
xchg
xchg
out
in
xor
jl
mov
ds
fsubs
and
popl
xchg
subb
lret
or
jbe
jmp
push
inc
into
and
shll
cwtl
aam
fisubl
xchg
dec
push
pop
push
in
icebp
xorl
adc
add
pop
in
mov
stos
aad
stos
sbb
outsl
lret
jg
in
cs
insl
mov
mov
pop
xchg
inc
roll
cmovle
rorl
pop
imul
dec
adc
jnp
pop
jae
jae
sbb
icebp
lds
inc
fildl
sub
cmpsl
std
push
jg
push
and
inc
call
ror
out
pop
push
push
rcr
shll
lahf
fcoml
pop
jl
into
and
mov
sbb
and
outsl
cmpsl
popf
scas
push
sbb
or
sahf
cmp
mov
jno
mov
push
rorl
xchg
mov
call
push
nop
pop
sarl
imul
add
push
cmpsb
or
inc
rcrl
mov
sub
or
scas
lea
fsub
or
pop
pop
in
clc
mov
sbb
dec
pusha
loop
mov
add
pop
add
cmpsb
ja
mov
add
test
lods
lds
push
xchg
push
push
lea
push
pop
cmpsl
inc
shrb
outsl
sbb
or
outsl
xor
dec
add
pop
add
into
int3
call
jle
imull
sbb
loope,pn
ficoms
inc
add
dec
mov
fs
inc
insl
mulb
dec
popf
or
jbe
shl
pop
cmp
inc
dec
xor
loope
fsts
outsb
xchg
mov
push
gs
pop
inc
sbb
inc
bound
push
lock
push
shlb
les
arpl
push
cmp
nop
xchg
nop
gs
xlat
call
test
mov
pop
xor
mov
insb
ljmp
aad
enter
mov
lock
scas
inc
inc
loope
cmpsl
mov
pop
decb
mov
fidivrs
adc
dec
call
div
dec
xlat
sub
xchg
push
mov
ret
jle
imul
xchg
sub
je
xor
push
mov
xor
lods
push
lods
pop
loopne
std
in
jb
jmp
mov
mov
repnz
inc
mov
ret
pop
imul
sbb
mov
sbb
idivb
sti
cli
dec
jmp
push
jl
adcl
ja
dec
sbb
repz
outsb
or
pop
jecxz
cli
pop
repnz
push
jno
in
mov
xchg
mov
pushf
lods
sub
and
fidivs
inc
push
mov
outsb
neg
pop
popf
mov
cmp
hlt
xlat
movsb
add
hlt
lods
repnz
cmc
nop
out
gs
icebp
pusha
loopne
cmp
cmpsb
fwait
cmc
mov
pop
mov
jl
xchg
xchg
push
pop
xor
in
adcl
add
rclb
pop
xorb
inc
or
xchg
jmp
xor
pop
scas
pop
cltd
mov
aaa
xchg
mov
sub
push
push
stc
jo
dec
jl
sub
dec
push
pop
fldl
add
xor
das
or
push
inc
in
xor
cvtpi2ps
jmp
mov
sub
pop
and
out
mov
rcr
xor
xchg
add
jmp
and
int
lods
pop
cmc
iret
inc
flds
lock
pop
loopne
dec
cmpsl
add
inc
mov
sbb
or
aad
outsb
adc
sub
xchg
loop
imul
sub
pop
lahf
stos
adc
mov
insb
cmp
movsl
mov
je
push
in
dec
mov
imul
and
adc
loope
sub
sbb
loopne
movsl
in
loop
adc
or
add
std
cmpsb
cmp
and
ja
nop
add
testb
sar
mov
dec
mov
bound
xchg
or
add
fdivrs
dec
cmp
cmpsb
pop
push
mov
neg
es
push
or
cmp
stos
fs
jp
repz
sti
mov
push
sbbl
fldl
sub
sbb
xchg
bound
pop
cmp
aad
adc
out
pop
pop
popa
sbb
add
add
sbb
mov
lock
fists
shrl
repnz
jns
or
mov
add
and
xlat
add
sub
aas
or
stos
dec
repnz
jbe
and
addr16
lahf
enter
rorb
insl
and
out
add
cwtl
shrb
mov
cli
push
sbb
imul
add
testl
fwait
push
push
mov
clc
push
les
xchg
dec
xor
dec
idiv
sub
lods
scas
jg
mov
inc
sbb
imul
mov
fiaddl
frstor
jae
xor
or
pop
mov
aaa
pop
mov
push
xor
add
in
int3
inc
jp
cmp
iret
and
mov
out
jl
test
xor
inc
jg
loopne
adc
ss
scas
cmp
ljmp
adc
mov
push
lea
cltd
in
or
mov
lret
aad
sbb
imul
push
mov
cmp
cmpsb
gs
ljmp
test
sub
mov
sbb
fldenv
pop
aas
xchg
enter
loope
mov
and
push
xchg
mov
insl
xor
dec
addr16
jbe
mov
sub
sarb
add
int3
pop
arpl
scas
hlt
adc
test
add
ljmp
pop
and
xchg
cmp
insb
sub
das
adc
mov
mov
test
or
sub
arpl
in
clc
mov
inc
sbb
mov
mov
mov
call
inc
aam
xorl
scas
fisttpll
int3
jmp
xchg
into
fndisi(8087
and
jle
mov
add
idivl
inc
ret
xchg
jp
outsb
repz
pop
jns
call
and
mov
repz
daa
cmp
les
icebp
popf
out
sub
cmpsb
aas
push
sbb
pusha
das
fbld
xlat
dec
inc
inc
data16
push
lods
in
push
adc
jle
insl
roll
cmpsl
repz
stos
dec
aas
in
inc
cmp
lcall
fmuls
es
rcrb
xor
cwtl
xor
dec
sidtl
fstp
adc
sbb
rol
cmpsl
adc
outsl
and
rol
jae
sahf
xchg
sbb
into
movsl
mov
in
int3
mov
es
mov
fldl
add
adc
jge
or
std
shl
inc
fildl
mov
lahf
lret
les
adc
outsb
adc
dec
outsb
push
xlat
popa
jo
movsb
mov
inc
xchg
push
sub
cltd
jecxz
xchg
push
stos
insb
icebp
sbb
adc
xor
pop
shrb
in
addb
movsl
mov
sub
xorb
mov
test
pop
subl
cmpsl
or
xor
fwait
inc
cmpb
mov
pop
xor
dec
ja
push
lcall
xor
cli
add
xchg
test
leave
push
sbb
popf
data16
dec
xor
pusha
cltd
notb
push
cmp
jp
insl
mov
loopne
xlat
jns
int3
out
inc
out
or
add
popa
inc
add
push
hlt
clc
push
xor
imull
gs
clc
mov
retw
out
pusha
lds
iret
inc
or
cli
push
and
add
pop
call
in
jns
notl
in
add
pop
mov
mov
clc
jge
push
xor
xor
lds
jle
jmp
gs
xchg
push
ljmp
mov
fsubrl
sub
cmp
push
pop
gs
imul
or
mov
xor
pop
jnp
and
scas
xchg
mov
jne
mov
fadd
adc
repz
ljmp
call
or
hlt
inc
dec
pop
xor
xchg
sbb
sbbl
fimuls
sub
test
mov
mov
add
xor
jecxz
sub
loopne
je
outsb
sarb
sub
dec
fstps
addr16
inc
sti
xor
sub
test
mov
jb
or
dec
mov
iret
sub
je
mov
mov
loopne
pop
rclb
sbb
ret
in
sbb
sbb
and
cmp
fildl
iret
lcall
inc
xlat
stos
xchg
xchg
xchg
js
dec
nop
mov
rorb
pop
jle
push
std
mov
inc
hlt
add
das
xchg
js
and
dec
test
mov
jnp
jge
inc
mov
adc
pop
jle
shl
push
aad
stc
sbb
xchg
jbe,pn
test
subl
fimuls
into
fsubrs
call
idiv
xchg
xor
jmp
scas
mov
xchg
flds
iret
outsl
insl
push
movsl
scas
mov
popa
scas
aaa
lods
inc
mov
fucomip
fildll
lret
adc
jbe
and
mov
frstor
mov
xor
mov
fiaddl
mov
push
ljmp
mov
aaa
ds
sub
cmp
repz
adc
fcoml
addr16
cld
sbb
pop
out
jmp
push
mov
jp
inc
mov
mov
sbb
mov
xor
push
orl
or
lcall
outsb
push
or
ljmp
fwait
test
mov
xchg
fldl
cmp
test
roll
aas
cs
jge
cmp
xchg
or
jge
int3
les
cld
lahf
sbb
push
inc
imul
icebp
fsubrl
cmc
mov
icebp
cmpb
pusha
pop
fstpl
call
ret
cltd
dec
or
shlb
cmp
or
aas
add
xorl
dec
push
mov
mov
repnz
es
mulb
fisubrl
sub
repnz
xchg
stos
push
mov
mov
sbb
cmc
jnp
call
or
dec
cmpsl
adc
pop
fisttpl
lods
adc
push
lock
adc
stc
pop
jne
stos
mov
stos
cli
test
jle
adc
or
sbb
lods
xor
xor
outsb
int
or
jo
popf
sbb
jmp
push
fcoms
sahf
jmp
dec
ljmp
js
pop
mov
jp,pn
lods
jle
les
xchg
jae
mov
and
xchg
mov
fdivrl
ss
jno
xlat
test
or
push
mov
int3
xor
mov
add
inc
inc
sahf
mov
xorb
sub
lcall
inc
es
call
push
cmpsb
rcl
test
fnstcw
fwait
outsb
ds
mov
je
subl
shlb
push
call
jl
jl
imul
outsl
xchg
icebp
rolb
or
cmp
mov
daa
rorb
sbb
jb
add
mov
leave
ss
ss
rorl
dec
mov
pushf
add
adc
or
fidivl
repnz
sub
sbb
mov
sbb
cmpsb
and
pop
mov
xchg
addr16
les
iret
xchg
call
js
push
pop
ret
cltd
cld
inc
mov
sbb
sub
pop
mov
cld
es
fistpl
push
adc
insl
dec
push
mov
ret
jge
mov
inc
or
dec
aam
in
sbb
mov
popf
loope
fildll
in
inc
rcr
cmp
arpl
fwait
data16
jae
inc
das
fstpl
or
das
mov
movsb
shll
inc
sbb
iret
pop
mov
test
cltd
jmp
or
inc
inc
mov
jl
ja
mov
jge
add
jbe
lods
sub
int3
movsb
push
sarl
in
out
daa
dec
sbb
inc
pushf
mov
pop
sti
xchg
int
xchg
fnstcw
push
mov
dec
push
mov
xlat
sahf
inc
mov
push
push
out
jne
pop
xor
insb
movsb
pop
pop
mov
rcl
and
inc
sbb
jbe
pop
and
je
iret
stc
loope
outsl
or
jle
inc
lds
xlat
les
push
aad
pop
add
xlat
mov
dec
push
shlb
mov
pop
jns
adc
repz
loopne
shrb
push
inc
pushf
out
pop
cmp
mov
xor
daa
jns
xlat
push
popf
iret
js
cmovs
out
cwtl
xchg
loop
sub
je
add
sbb
loopne
imul
ss
ret
addb
mov
in
cmpsl
in
cwtl
cs
dec
dec
dec
cmp
cmp
orl
repz
jg
imul
or
sti
adc
idivb
jmp
jg
sti
pop
jo
mov
cs
addr16
cld
xorl
xchg
jae
and
cmp
xchg
addr16
rcll
inc
test
inc
test
cmpsb
jmp
sbbb
mov
ds
pop
mov
pop
xchg
iret
imul
jmp
mov
xchg
stc
aad
cltd
cmp
mov
jmp
mov
push
xchg
mov
scas
int
xchg
mov
das
sbbb
add
nop
ljmp
fistpll
sub
iret
cmp
pushf
pusha
mov
ss
lock
push
jmp
in
xchg
mov
test
or
arpl
jle
pop
mov
and
gs
sub
dec
ja
std
adc
ret
push
arpl
push
cwtl
inc
mov
cltd
dec
pop
or
cmovle
jnp
arpl
dec
cmpsl
int
dec
adc
push
out
movsl
loop
jecxz
sub
jbe
mov
xor
sub
sbb
ja
and
push
mov
mov
or
popl
xor
std
jg
out
add
in
and
xchg
push
xchg
insl
or
ss
inc
jne
mov
xchg
lcall
sti
in
mov
sbb
in
cmp
sahf
lods
mov
sbb
test
push
ss
or
push
aad
std
sub
push
and
and
scas
repnz
imul
push
in
cmpsb
sub
pusha
cmp
fistpll
jo
push
dec
inc
mov
xchg
sbb
ljmp
incb
enter
rcrb
daa
and
into
inc
push
jle
xor
sbb
stos
mov
gs
push
dec
sti
jbe
std
adc
aas
pop
out
jge
test
mov
cmpsl
cld
test
les
xchg
imul
pop
ljmp
ret
mov
mul
xor
enter
xor
lds
outsb
fiaddl
popa
and
mov
sbbb
sbb
es
sbbl
lods
xchg
ds
add
shl
push
pop
jle
roll
push
negl
inc
call
orb
je
cmp
test
imul
or
pop
dec
icebp
shll
iret
idivb
iret
and
mov
lds
aad
jl
pop
clc
sbb
sahf
jnp
test
in
fstps
sbb
aam
mov
test
insl
push
shrl
pop
fisttpl
nop
push
out
jecxz
loop
cltd
xchg
daa
mov
sti
sub
test
stos
sbb
daa
jle
jbe
ret
mov
cwtl
mov
mov
xchg
inc
scas
adc
fmull
fcomps
push
adc
std
jns
subl
outsb
hlt
or
or
popf
cmpsl
loope
imull
jb
ret
inc
cli
add
int
adcl
mov
sbb
inc
mov
inc
movsl
inc
loop
pusha
out
sub
in
std
push
loop
pop
fwait
pop
js
outsl
sub
and
jmp
and
jmp
es
loopne
add
or
sbb
cli
mov
lock
cli
xchg
sub
das
mov
adc
and
adc
stos
push
cmp
fstpl
mov
movsb
pop
mov
out
pop
lods
jns
push
js
data16
pop
data16
xchg
or
jns
dec
fsubl
inc
sbb
idivb
fisttps
or
roll
mov
or
mov
ret
divl
push
inc
mov
pop
popf
icebp
push
push
xor
sub
clc
or
shrl
insb
ret
add
add
ficoml
pop
int3
mov
loope
shlb
sbb
insl
xchg
dec
inc
lds
and
test
xor
xchg
dec
mov
inc
je
notb
pop
inc
pop
adc
fcomp
shrb
enter
call
idivb
push
dec
loope
mov
sti
cmp
dec
sarb
ret
les
sub
outsl
or
xchg
cmpsb
shlb
adc
aam
pop
add
fnstenv
icebp
cmp
sbb
jne
sbb
arpl
fdivr
cltd
push
dec
lea
scas
int
repnz
adc
cwtl
mov
movsb
xor
faddl
andb
subb
add
push
mov
pushf
xor
imul
popl
mov
cwtl
xor
push
fstl
push
mov
loop
mov
jae
xchg
mov
scas
test
mov
pop
jo
popf
cli
adc
cmp
and
xor
rcrb
dec
dec
cmp
cwtl
out
cld
scas
or
or
rorb
xchg
cmp
mov
mov
iret
adc
xor
push
sbbb
sbb
cmpsb
decl
addr16
mov
imul
pop
lret
fcmovne
sub
add
inc
out
icebp
push
fwait
in
jns
dec
fstpt
out
push
das
jecxz
stos
jb
xlat
clc
cmp
cltd
cli
xchg
mov
cmp
sbb
test
aaa
enter
insl
xlat
shl
pop
sbb
mov
mov
dec
aas
xchg
jmp
xchg
cmp
sbb
adc
cltd
cmp
adc
mov
cmp
inc
xchg
add
mov
andl
sbb
inc
test
int
lea
cli
stc
fdiv
cmpsb
pushf
dec
sbb
rorb
jno
jmp
xchg
lds
push
mov
ljmp
push
int3
xor
sbb
adc
push
xor
daa
add
loop
push
push
mov
rclb
jmp
shrl
push
mov
call
sbb
jmp
jb
inc
out
xchg
stos
pop
lock
mov
jg
std
push
mov
ret
dec
arpl
lcall
mov
lret
pop
pop
sbb
push
and
xchg
xchg
add
aas
mov
addw
imul
nop
gs
shr
stc
adc
fwait
pop
aaa
add
pop
shlb
pop
pop
out
or
repnz
xor
iret
mov
add
ret
adc
fdivrl
psrlw
xchg
mov
scas
adc
fmuls
out
int3
add
andl
notl
data16
push
shll
rcl
js
das
mov
shl
sbb
mov
xchg
loop
and
push
das
loope
lods
loope
sbb
or
or
pusha
lahf
add
cwtl
sub
sahf
negl
jecxz
add
push
mov
mov
or
inc
nop
sub
sub
and
ficoms
xor
jne
lret
fdivl
cltd
push
pushf
add
in
vpunpckhwd
sti
add
inc
jbe
adc
mov
cmp
jmp
dec
xchg
or
pop
jns
xor
xorl
lds
cltd
lahf
push
mov
stos
cs
bound
das
and
jbe
and
push
les
xor
nop
sbb
pop
cmp
mov
je
es
jp
xchg
adc
ffreep
movsb
loop
or
or
jns
clc
push
lahf
rorl
lea
addr16
xchg
into
sub
aad
jnp
mov
inc
lods
sbbb
xchg
cmp
outsl
test
and
aas
daa
dec
inc
xor
xlat
mov
rorl
adc
jo
dec
push
adc
stos
xor
inc
repz
stos
and
adc
xlat
adc
mov
xchg
and
out
xor
dec
jmp
decl
adc
pop
insl
pop
fisttpl
aaa
loope
jo
mov
or
add
push
or
or
bound
test
adc
push
repz
cli
sar
arpl
out
cli
mov
je
out
int3
or
es
inc
cmpb
aaa
in
sarl
lcall
iret
pop
in
push
test
mov
int3
inc
hlt
cmp
mov
add
test
jecxz
outsb
inc
stos
pop
bound
mov
pop
loope
jae
test
lret
or
mov
sbb
imul
lock
pushf
mov
add
dec
gs
pop
stc
aad
push
and
dec
icebp
cmp
iret
cmp
addb
mov
aad
in
lods
jl
nop
mov
mov
js
lea
fdiv
stos
jl
loopne
stos
sub
filds
or
pushf
ret
enter
fidivrl
mov
ss
pop
jb
ja
sbb
adc
mov
jb
call
or
xchg
out
dec
xor
pop
push
popf
shlb
jno
cmp
cwtl
scas
cli
mov
xchg
daa
sbb
bound
mov
mov
fists
and
int3
and
mov
adc
push
orb
gs
dec
shll
mov
lock
scas
cmpsb
in
jmp
arpl
ds
mov
and
pop
add
sbb
fistl
add
rcll
mov
cli
ror
lea
xor
pop
cmp
icebp
cmpsl
fwait
push
outsb
mov
imul
push
add
xor
jno
dec
hlt
xchg
ror
fwait
sub
out
mov
sub
mov
sub
xor
xor
mov
out
or
mov
or
add
mov
out
push
push
xor
xor
incb
cmp
add
inc
stos
rclb
mov
sarb
out
adc
fdivl
jle
mov
mov
fcompl
inc
mov
or
jp
and
cld
push
xchg
or
idivb
movsb
insl
cs
mov
stc
mov
sar
mov
inc
cmp
mov
sarl
popa
inc
mov
jnp
rcr
add
pop
pop
icebp
adc
dec
xchg
push
inc
jl
imul
dec
sub
mov
mov
je
jae
daa
mov
or
aaa
inc
mov
xchg
xchg
les
in
js
je
inc
test
push
daa
cld
jne
fcmovnbe
sbb
aam
pop
clc
sti
push
sbb
xchg
orb
add
mov
sub
inc
mov
popa
lea
ficoms
dec
dec
pushf
stc
jo
adc
push
fisubrs
mov
scas
rolb
fstl
ja
dec
jne
mov
pop
pushf
stos
sub
fmull
sub
out
inc
cs
cmp
xchg
test
ds
outsl
pop
add
jo
lods
test
addl
and
push
pop
jnp
mov
mov
push
stc
scas
xchg
fistl
cli
loope
adc
add
xchg
cmp
in
insl
fs
loop
rolb
adc
and
and
imul
jecxz
sbb
inc
dec
xchg
fistl
test
in
rclb
out
mov
pop
mov
in
dec
insb
inc
imul
shrl
call
xchg
mov
mov
push
andl
xchg
test
mov
or
stc
ljmp
fcompl
lret
scas
imull
push
movsb
cld
les
cwtl
pop
pushf
in
enter
mov
and
cli
jno
loopne
shrl
sbb
push
xchg
pop
xchg
mov
inc
div
xorb
jbe
rorb
mov
pop
adc
lret
movsb
cmp
jb
std
movsb
loopne
lea
jge
and
hlt
push
imul
pop
movsb
jnp
test
cmc
push
fnstenv
sbbl
mov
test
inc
jno
fwait
pop
jmp
fsubrl
push
push
rcrl
es
pop
test
adc
daa
repnz
push
pop
stos
and
mov
jbe
jns
and
mov
xchg
fsubrl
mov
rolb
adc
pop
ret
mov
or
shl
cmpsl
out
and
sub
insl
cmp
cmp
cli
xchg
les
pop
mov
daa
jae
jns
push
inc
xchg
add
pop
out
or
cmp
and
push
js
sub
xchg
leave
mov
lods
cld
lds
adc
movsl
in
data16
mov
repz
xor
xchg
mov
sub
or
in
xchg
push
mov
int
lea
enter
enter
sub
mov
loop
dec
sbb
sbbl
stos
aad
xor
aad
ja
mov
stos
insl
popf
sub
ljmp
or
fistl
pop
xor
mov
dec
or
push
mov
adc
js
in
bndstx
or
push
dec
mov
mov
mov
jbe
add
dec
insb
stos
js
int
sahf
mov
sub
xchg
dec
dec
scas
inc
inc
jne
pop
mov
jno
shll
or
sub
fisttpl
in
popf
xor
into
lcall
jb
insb
aad
rcrl
adc
and
ret
je
push
out
mov
fisubrs
les
push
nop
icebp
mov
loop
sub
int
jg
pop
scas
pop
lahf
mov
jg
decl
sbb
mov
mov
outsl
xor
sti
aad
xor
cmpsl
push
pop
jns
pushf
pop
arpl
fiaddl
xchg
mov
and
pop
dec
inc
int3
popa
lahf
shr
stc
stc
and
mov
xchg
push
negb
sub
inc
leave
xchg
sahf
fimuls
jne
pop
movsl
dec
jecxz
xor
push
mov
in
and
xchg
xchg
into
mov
popf
adc
jle
imul
ljmp
inc
sbb
mov
out
xchg
arpl
lahf
lock
loopne
mov
rorl
out
aaa
push
sub
mov
xor
dec
into
daa
jbe
mov
hlt
pop
shll
sbb
and
popa
inc
xchg
aad
jb
cmp
sbb
mov
out
adc
aas
in
push
and
fldl
xchg
pop
int3
fists
mov
push
pop
inc
cli
mov
sub
xor
xlat
mov
or
fdivrl
push
es
orb
or
sar
jecxz
adc
sahf
inc
scas
movb
mov
iret
mov
and
out
push
cmpsl
inc
mov
subl
int3
xchg
mov
inc
push
xchg
inc
push
insb
das
inc
in
js
je
add
iret
ljmp
pop
dec
aam
add
clc
mov
insl
xchg
adc
mov
mov
gs
stos
iret
loope
push
ja
cld
mov
adcb
and
addl
and
adc
pop
jb
outsl
pop
cld
inc
cmp
and
lahf
push
imulb
dec
and
mov
mull
enter
orb
pop
jae
aad
sub
popf
notb
xchg
rolb
dec
push
insb
jmp
dec
std
mov
jbe
pop
adc
lahf
xor
lret
jne
xor
pushf
xchg
push
in
sti
cmpsl
xchg
mov
jg
xchg
xchg
faddl
mov
andb
insl
js
mov
repnz
and
pop
outsb
stc
ret
mov
jge
cld
sub
lahf
adc
mov
ret
imul
push
dec
inc
lret
jne
add
lea
pop
enter
dec
loopne
cltd
data16
inc
pop
pop
mov
push
and
adc
jb
clc
mov
imul
cmp
pop
xchg
mov
rcrb
popf
fdivrp
jo
ret
je
push
mov
fldcw
xchg
add
adc
lret
out
jno
jb
pop
or
add
adc
pop
and
xor
or
mov
mov
je
xchg
lods
sahf
cmpsl
mov
movsl
dec
aam
mov
stos
data16
pop
jo
insl
inc
loopne
ret
out
int
jb
ja
imul
jae
cmc
xor
out
add
pop
lahf
adc
push
xlat
das
or
outsl
add
cs
add
sub
push
and
push
inc
sbb
es
pop
mov
hlt
addr16
movsb
lock
cmp
loop
in
jbe
mov
cmc
mov
jmp
shll
cmp
leave
or
and
sub
arpl
push
inc
int
inc
xchg
dec
mov
pop
sbb
test
adc
add
sbb
xchg
cmpsl
je
add
mov
loope
aad
or
insb
sbb
adc
sub
xchg
push
enter
test
xchg
loope
imulb
sahf
sub
lds
test
xor
xlat
push
outsb
loope
push
in
push
and
add
inc
cmp
stos
out
sti
jp
pop
xlat
jp
adcl
sbb
insb
inc
cmp
lret
pushf
loope
sahf
mov
dec
inc
xor
outsl
cmp
sti
xor
lret
pop
sar
iret
push
sbb
rcll
push
lret
pop
jb
xor
jle
push
into
popa
popa
jp
je
nop
xchg
dec
and
cmp
xor
das
or
or
mov
xchg
scas
xor
mov
lcall
test
cld
xor
les
push
sub
xchg
sbb
notb
cmc
fadds
sbb
pop
andl
or
inc
addr16
pop
rorl
mov
fbstp
push
jb
lret
and
cld
jmp
xor
outsb
pop
into
dec
xor
gs
sub
cmpsb
push
popw
negb
scas
out
adcl
es
adc
outsl
fldl
jns
mov
enter
in
in
pop
adc
outsl
test
addr16
push
fucomip
out
dec
cmp
cmp
sbb
xor
mov
or
push
cltd
fldt
cmp
cmpsb
xor
into
rcll
xchg
loope
je
mov
xchg
mov
je
clc
test
xchg
mov
cpuid
mov
push
daa
out
adc
std
das
xchg
ret
les
sub
jmp
jmp
xchg
les
fsts
mov
cmpl
mov
out
cmc
xor
les
or
adc
adc
xchg
int3
in
cwtl
inc
in
sub
test
mov
pusha
adc
sahf
dec
mov
sbb
mov
inc
mov
mov
and
ret
push
repz
shlb
cmp
mov
nop
lret
push
adc
sub
dec
popf
into
movsl
fdivp
jp
push
and
mov
xchg
or
or
sbbl
xchg
xor
lds
dec
pop
fistps
push
bound
jmp
xchg
adc
aam
dec
pop
enter
cmp
mov
cmp
insb
arpl
jbe
std
adc
inc
or
out
js
mov
cmp
lret
sti
frstor
adc
xchg
les
xor
adc
adc
icebp
xchg
and
mov
adc
mov
xor
lcall
adc
ss
mov
jge
test
pushf
mov
outsl
cmpb
ja
dec
decl
xlat
icebp
rolb
cmpl
test
loopne
sub
mov
leave
addr16
sub
fcmovb
pusha
out
dec
dec
hlt
mov
cmp
bound
fcmove
push
add
iret
mov
ljmp
and
leave
jb
fidivrs
adc
add
add
mov
mov
shl
in
loope
jb
iret
daa
xor
push
push
push
mov
jp
mov
movb
sbb
mov
daa
fs
inc
sti
adc
shr
jbe
jb
in
inc
or
mov
mov
adc
ss
stos
jo
mov
lds
inc
inc
in
lock
mov
lods
sbb
jo
es
push
cs
sbb
leave
test
pushf
popf
pop
repz
mov
xchg
mov
jno
aaa
mov
add
cmp
inc
add
test
stos
xor
pop
pop
mov
jns
dec
popf
add
xchg
in
es
int3
mov
out
or
xlat
daa
push
in
lcall
sahf
je
and
stc
mov
push
loop
lahf
and
mov
stos
int
push
incl
mov
push
cli
repz
aam
ret
repz
hlt
lods
scas
stos
or
mov
cltd
aaa
dec
jecxz
cmp
sub
cmc
in
aaa
mov
mov
mov
popa
out
xor
sbb
sahf
mov
gs
or
adc
or
loop
mov
cmpb
adcb
or
pop
stos
inc
cmp
je
mov
ret
cmp
push
adc
add
jbe
aas
adc
jp
sti
test
popf
mov
mov
out
sbb
pusha
cmp
adcl
dec
pusha
adc
jne
test
dec
popf
stos
sub
scas
and
leave
and
xlat
js
bound
mov
ret
mov
mov
nop
test
push
icebp
sub
xchg
sahf
bswap
stos
and
js
loop
scas
insb
popf
mov
push
sub
test
or
insl
leave
push
jmp
rclb
femms
inc
js
out
popf
xchg
negb
mov
andl
gs
or
aaa
lock
cltd
add
js
test
sub
fwait
movsl
in
dec
add
add
ret
xchg
dec
jg
inc
add
push
enter
pop
push
mov
into
outsl
popa
pop
inc
ljmpw
and
imul
jl
pusha
dec
jns
push
shlb
aam
mov
dec
jae
gs
lahf
mov
mov
daa
lret
add
add
cs
sbb
xchg
adc
into
xor
jmp
aas
js
mov
adc
inc
rol
jp
outsb
icebp
mov
in
pushf
xor
adc
push
sub
inc
loop
adc
push
dec
movsb
inc
lock
enter
fnstenv
in
ljmp
mov
add
push
and
rep
inc
hlt
jae
iret
hlt
outsl
mov
push
sahf
mov
aas
adc
mov
xor
push
push
test
aaa
sbbl
pop
cli
jg
or
leave
dec
daa
or
int3
fimull
sarl
jbe
adc
cmc
mov
scas
jle
lret
rorl
sahf
xchg
iret
and
insb
arpl
mov
insb
mov
faddl
push
xchg
push
sub
popa
into
cmp
add
cmp
movsb
add
mov
inc
add
in
pop
xchg
cltd
adc
push
sbb
fnstenv
imul
lea
stc
push
addb
mov
repz
orl
in
mov
pop
cmp
jnp
or
add
shl
jbe
cmp
adc
cwtl
popa
scas
cmp
call
data16
loop
inc
leave
adc
ret
add
js
mov
inc
leave
mov
xor
in
mov
test
in
test
popa
xchg
mov
lods
inc
loope
repnz
cmp
cmp
jl
jp
leave
sbb
movsb
mov
repnz
ja
mov
cld
push
jmp
fsts
cmp
test
mov
sbb
out
imull
adc
bound
movsl
test
testb
int3
adc
mov
adc
in
add
dec
lcall
clc
stos
xlat
pushf
lea
test
ss
add
cmp
pusha
or
lods
jmp
dec
mov
call
and
and
xchg
cmpsl
std
pop
sub
mov
dec
adc
iret
cltd
lret
cmc
lods
pop
mov
cmp
cmp
jo
outsb
mov
cmpsb
mov
jmp
nop
xchg
imul
push
pop
fstpt
divl
jbe
cmpsb
iret
or
and
mov
inc
adc
and
mov
jl
lret
lods
mov
int3
in
adc
sub
and
cmp
mov
mov
stos
sbb
mov
sbb
dec
jmp
xor
lahf
icebp
jnp
nop
sub
lds
and
add
bound
jle
push
mov
icebp
nop
fs
test
lret
ss
or
fstpt
les
adc
push
cmp
fistps
ss
push
pop
mov
mov
cmp
add
xchg
mov
jecxz
pop
jl
jno
out
mov
and
jnp
adc
pop
inc
ret
inc
arpl
add
in
jb
sbb
div
out
loopw
sub
mov
data16
sbb
cmp
out
xor
sub
dec
repz
pusha
cli
and
dec
and
roll
js
enter
mov
sbb
push
scas
lock
push
fnsave
xor
fsubrp
lret
push
fcoml
shl
cmp
push
pop
stc
xchg
test
lcall
fists
pusha
repnz
dec
imul
push
sti
cmp
into
imul
insb
cmc
fdivrs
add
mov
fldcw
push
imul
iret
dec
sub
xchg
imul
jbe
lcall
push
andl
repnz
rol
xchg
int
out
enter
inc
dec
mov
cld
sbbb
jle
mov
out
pop
cmp
add
loop
mov
andb
stos
stos
bnd
xor
je
sarb
add
iret
pop
pop
mov
fsubrl
leave
insl
ljmp
lea
xorb
icebp
push
adc
dec
xchg
or
movsb
add
outsl
outsb
sbb
jle
cmpsb
scas
fnsave
aam
cmp
jp
mov
sbb
aam
inc
xchg
out
sub
dec
jne
jne
xchg
movsl
call
ja
lcall
and
dec
inc
sub
lret
add
mov
add
movb
in
pusha
sub
jno
xlat
out
push
push
xor
fisttpl
test
mov
pop
stos
pop
dec
push
movsb
inc
lods
lock
or
adc
mov
inc
push
ljmp
out
push
es
mov
lock
outsb
fstp
mov
data16
cmp
pop
fistl
cmp
jge
push
into
ds
sub
stc
pop
xor
xor
pop
cmp
hlt
mov
cmp
outsl
jle
imull
int
pop
movsl
or
aam
in
mov
cmp
xchg
pop
arpl
out
mov
pop
mov
add
ficoms
or
add
or
push
sub
push
add
sahf
jecxz
xor
xchg
ret
and
pop
mov
ret
xor
pop
jo
movsb
ljmp
das
jecxz
movsb
pop
mov
pusha
pop
and
lods
lods
inc
adc
aaa
and
outsl
sbb
mov
fbstp
adc
and
shlb
inc
mov
movsb
mov
xor
int
jae
in
iret
int
sub
cmp
cmp
mov
push
cmp
andl
sub
sub
scas
lds
dec
loope
in
iret
fsubs
mov
negb
test
mov
inc
sub
sub
inc
in
sbb
mov
clc
stos
dec
sbb
pop
les
insl
and
mov
add
xor
or
dec
aam
inc
repz
imul
mov
inc
pop
dec
arpl
inc
mov
incb
call
xchg
std
adc
inc
or
insb
mov
das
mov
and
xor
cmp
mov
lods
xchg
rorl
dec
add
ficoml
and
loope
test
mov
stos
jl
xchg
fldl
add
adc
cmp
out
movsb
lock
dec
pushf
aad
and
orl
scas
and
cmp
or
mov
or
inc
js
nop
mov
inc
and
xchg
scas
mov
adc
aas
fwait
jo
mov
mov
push
dec
out
pop
into
and
ret
sub
imul
imul
outsl
inc
loopne
imull
icebp
or
sub
mov
subb
push
loop
cmp
mov
xor
pushl
and
outsl
xchg
pop
cmc
jmp
shll
mov
int3
xchg
aam
xchg
cmpsl
sti
lds
and
add
fwait
out
dec
add
das
mov
pop
enter
mov
les
sbb
inc
inc
stos
mov
mov
add
xchg
mov
testb
xchg
cld
inc
fidivrl
mov
leave
pushf
adc
mov
dec
adc
fwait
jno
cmc
add
jg
fiadds
push
lods
pop
jl
fsubrp
push
rcrl
orl
pop
hlt
xchg
lds
rolb
push
test
shll
cmpsl
jb
imul
pop
clc
cmpsb
mov
scas
push
adc
mov
cmp
fildll
in
or
sub
js
ja
imul
lcall
stc
shrl
movsb
jo
sub
in
in
xlat
aas
pop
aad
sub
jecxz
scas
pop
push
jbe
cs
fwait
mov
cmp
sbb
mov
jp
outsb
jbe
push
pop
or
dec
push
jl
jmp
jne
lods
xchg
jae
add
ss
scas
pop
push
ficomps
int
loopne
outsl
and
cwtl
jl
dec
adc
test
mov
sarb
testb
inc
addb
mov
jnp
or
or
mov
sbb
in
sub
adc
lahf
sub
or
gs
test
mov
pop
push
fcmovb
mov
add
stc
mov
out
or
cmpsl
inc
cmpsb
ss
lock
sahf
loop
mov
xlat
sub
pop
cmp
lock
shll
out
sub
out
fwait
movsb
fwait
jecxz
inc
pop
adc
pop
inc
test
pop
or
das
mov
jp
xchg
ljmp
adc
out
cmp
mov
js
sbb
jmp
inc
shrl
in
outsl
das
cmp
xchg
pop
into
int3
cli
xchg
mov
sbb
rolb
pop
mov
dec
adc
addr16
inc
stc
and
lcall
add
dec
icebp
cmc
mov
push
test
pop
imul
push
dec
add
pop
daa
repz
adcl
dec
cwtl
and
inc
insb
shrb
lods
xchg
pop
pop
das
out
or
and
cmp
addb
and
enter
fidivl
mov
gs
sbb
sahf
mulb
mov
and
mov
mov
mov
adc
imulb
adc
enter
shll
push
mov
adc
jae
aaa
and
leave
fwait
sahf
pop
test
jg
jge
mov
or
cli
sahf
stos
cmove
loopne,pt
jge
pop
lea
outsb
rcr
mov
xchg
in
xchg
mov
inc
mov
push
movsb
adc
lcall
mov
add
sbb
movsl
and
loopne
movsb
xchg
shrl
xchg
cli
imul
or
sub
rolb
repnz
xchg
xor
pop
add
loop
xor
stos
mov
sarb
jecxz
mov
scas
clc
mov
mov
pusha
jl
and
push
bound
xor
ja
or
mov
mov
es
xor
into
and
pop
divl
scas
push
xchg
dec
pop
les
in
mov
daa
fwait
lods
jno
dec
ljmp
leave
addr16
mov
xor
inc
inc
stos
dec
mov
dec
lcall
nop
sbb
es
push
lcall
add
fnstenv
inc
das
test
mov
and
int
pop
pop
cld
inc
xorl
push
inc
pusha
movsl
xchg
jae
pop
fistpll
es
push
dec
add
scas
jecxz
rorl
jno
pop
ja
sbb
and
insb
cmpb
pop
mov
test
scas
inc
cld
and
ljmp
lods
lcall
xchg
lea
push
push
jns
in
fstl
popa
imul
push
mov
mov
and
std
and
aaa
hlt
pop
jns
test
daa
lret
stc
call
jne
and
enter
ja
mov
push
enter
jno
jle
mov
cmc
jns
xchg
leave
mov
outsb
jp
movb
mov
shll
fisttpl
andb
push
out
inc
pop
shrl
fimuls
addr16
pop
adc
pop
js
sub
mov
jb
lret
je
pop
loopne
xlat
inc
mov
add
jl
push
xchg
cmp
shrb
push
pop
add
js
pop
lret
push
adc
sbb
jae
test
sar
mov
aad
aaa
sbb
push
movsb
std
nop
and
mulb
xchg
adc
in
pop
jge
insb
cltd
and
adc
mov
lock
rorb
inc
and
jmp
mov
add
mov
movsb
ds
cwtl
xlat
add
cltd
div
enter
jmp
push
outsl
add
shrb
or
jle
pushf
ret
mov
sub
dec
andl
lahf
mov
sub
sti
pop
stos
mov
inc
aam
repz
notb
xor
loopne
push
imul
cmpl
loope
rcr
sub
lret
call
outsb
add
mov
sbb
mov
dec
in
mov
sahf
adc
inc
fdiv
mov
imul
mov
adc
add
aas
adc
jmp
xor
mov
or
mov
jge
out
cmpsb
call
pop
or
dec
cmpb
xor
adc
leave
pushf
cmpsb
filds
jno
add
xchg
lock
push
insb
ja
mov
popa
pop
sarb
sahf
ret
lret
repnz
dec
shlb
add
in
lret
in
addr16
gs
mov
js
and
mov
lret
xor
cmpsl
pop
lea
lahf
into
push
cwtl
sub
cwtl
dec
xchg
or
ja
fisttpll
dec
out
mov
movsb
mov
xor
and
popf
lcall
xchg
clc
mov
mov
or
push
outsl
add
out
repnz
dec
mov
stc
and
jl
repz
stos
dec
jge
fistps
inc
das
and
cltd
lret
aad
push
sub
xchg
and
push
mov
es
lret
xor
sahf
adc
fs
es
lds
in
xchg
lcall
jb
pop
js
sahf
popf
mov
xchg
cli
aas
adc
push
and
mov
icebp
stos
movsb
ds
xor
jmp
movsl
jb
out
pop
mov
nop
lahf
inc
test
xchg
push
popa
div
mov
es
sahf
push
mov
mov
and
rolb
sbb
fnsave
adc
dec
and
sub
mov
dec
fnstcw
adc
lret
or
mov
sub
mov
lea
fsubrl
push
push
jae
pop
or
jbe
les
add
shr
ret
and
mov
ss
int
cmpsb
push
iret
cmp
or
test
movsl
mov
inc
dec
fwait
push
push
add
addr16
xchg
or
out
xchg
xor
mov
mov
xlat
sbb
negb
adcl
in
push
mov
pop
adc
dec
jns
jbe
les
jp
out
test
shr
test
ret
xlat
call
xor
loopne
out
fistpll
mov
dec
movsl
test
pop
dec
push
mov
out
in
pop
mov
cmp
cmc
jbe
xor
jo
cmpsb
add
mov
sub
ror
lcall
test
test
loopne
in
stc
pop
push
and
ja
in
hlt
nop
lock
adc
sub
lods
cmp
loop
pop
aad
stos
lds
adc
jbe
add
lea
cmpsb
fs
repnz
inc
push
mov
ljmp
lret
push
jecxz
jnp
jmp
idivb
ds
sub
adc
cmp
mov
test
rorb
pop
sub
fdivrs
fsubrp
subl
push
fcoms
jo
pusha
in
push
dec
adc
les
jmp
cmpsl
dec
mov
rorb
dec
mov
xchg
pop
hlt
cmp
fwait
mov
test
mov
lcall
or
cbtw
mov
dec
or
sub
inc
je
push
cmp
fdivs
sbb
add
lods
xor
loop
call
jns
lahf
out
ret
lods
adc
fwait
mov
out
int3
push
inc
faddl
testb
repz
mov
inc
jb
jno
pop
dec
out
mov
mov
xlat
aas
push
push
or
or
push
inc
xchg
sti
addr16
outsb
test
inc
jmp
mov
imul
cli
inc
daa
mov
aad
pop
or
pop
add
popf
sarb
mov
jno
xor
in
scas
inc
sahf
stos
aam
mov
mov
xorb
push
inc
in
aad
in
adc
jmpw
cmova
mov
ds
lods
mov
pop
aaa
jp
pop
mov
lret
repz
xchg
pmaxsw
arpl
test
iret
lea
ret
jmp
push
mov
or
add
clc
cmp
andl
imul
fcomip
les
cmc
sub
xor
ret
test
outsb
ss
jp
enter
enter
cld
pop
add
inc
or
mov
mov
in
insl
mov
loopne
push
ss
xchg
mov
mov
xlat
stc
mov
adcl
pop
dec
sbb
sub
push
loope
jne
rcrl
andb
pop
mov
adcb
push
fistl
mov
and
clc
cli
inc
push
dec
ffree
mov
cmp
aaa
mov
sub
out
cld
scas
mov
out
pop
mov
sti
stos
jl
and
jb
fistps
icebp
sbb
dec
pop
stc
push
mov
pop
jecxz
mov
inc
sbb
cmp
pop
test
cli
or
in
es
jge
and
cmp
mov
push
mov
fadds
pushfw
jge
xor
aas
loope
ja
pop
pushf
dec
sub
in
imul
jbe
adcl
divb
clc
ds
sahf
fmull
ljmp
xchg
push
xchg
fninit
adc
jge
ret
xchg
mov
jb
or
xor
xchg
xchg
inc
jge
fstpt
std
fldcw
fs
cmp
repnz
cli
push
outsb
call
adc
aaa
mull
dec
jnp
push
loop
or
mov
ds
insb
mov
mov
jl
daa
dec
leave
xor
jno
cmp
inc
ret
insb
push
cmpsb
sbbb
scas
or
jp
adc
mov
lock
fildll
push
lea
mov
cltd
mov
lahf
add
lcall
inc
sub
arpl
jbe
lret
xor
xor
jbe
int3
lds
fdivrl
shll
mov
adc
cmp
in
icebp
jo
nop
inc
sub
cmp
loopne
movsl
mov
xchg
adc
and
jo
cmp
scas
lea
lea
sarb
int
pop
mov
pop
xchg
shrl
sbb
pop
scas
dec
aam
cli
add
test
int
dec
imul
mov
jp
in
fists
mov
sahf
cmp
movsb
mov
aad
addr16
mov
xor
cmp
pop
mov
ss
push
sub
ds
jbe
inc
mov
pop
sbb
cltd
popa
fiaddl
sbb
sub
mov
aad
out
repnz
xchg
sti
popa
sub
stos
sub
addr16
std
mov
mov
pop
fbstp
imul
fst
jae
outsl
fcomps
dec
in
in
mov
xchg
xchg
rclb
pop
lcall
sbb
stc
das
lahf
ret
imul
mov
sbb
or
adc
jp
lret
cmp
adc
mov
das
dec
fst
pop
imul
fcmovu
push
jmp
jne
push
adc
mov
cmpsl
add
cmc
cmpb
inc
test
test
fisubs
sti
dec
nop
adc
ret
js
add
sar
and
rcrb
leave
adc
jno
aaa
out
leave
mov
imul
stc
lods
add
xchg
xor
in
and
popa
cmp
lea
xchg
out
push
adc
std
ja
imul
lret
mov
mov
add
adc
pop
fsts
lds
cmp
pop
data16
mov
adcb
dec
popa
ja
aam
pushf
cmp
dec
scas
loop
push
sub
cmp
fucomip
lods
cmp
xor
xchg
out
sbb
scas
popf
sar
and
push
add
popa
test
adc
sbb
fwait
xor
mov
add
hlt
and
dec
scas
je
dec
pop
mov
push
sbb
lret
dec
and
mov
in
outsl
incl
cmpl
jbe
xor
fmull
shlb
in
xor
jg
jecxz
push
sbb
in
jmp
inc
insl
adc
mov
or
inc
mov
daa
stos
sbb
das
fdivrs
adc
xchg
pusha
xor
into
add
mov
and
mov
xchg
lahf
push
testb
fdivr
inc
adc
dec
insl
shr
stc
and
daa
sar
addl
lcall
movhps
outsl
jmp
test
ljmp
xor
sub
fcomi
dec
faddl
and
xchg
dec
inc
xor
rcrl
push
cmp
clc
cwtl
pop
je
mov
xchg
lods
pop
push
xor
shrb
imul
dec
mov
fdivrs
jmp
subb
xchg
lret
lods
clc
aas
jb
out
insl
pop
xchg
daa
jle
mov
jno
loopne
jp
fcoms
cmp
xchg
sub
imul
das
xlat
dec
and
adc
out
add
hlt
or
out
mov
mov
pop
pushf
push
orl
gs
movsl
lcall
mov
adc
lahf
mov
sahf
stos
add
stc
sub
sub
jne
pushf
pop
cmc
pushf
cld
pop
test
out
and
mov
add
popf
push
pusha
and
cwtl
or
lret
add
sbb
xchg
mov
icebp
push
pop
sahf
cmpsl
dec
mov
lahf
xor
pop
or
in
adc
cmpsb
aas
rcrb
xchg
outsb
mov
jmp
lds
sub
in
xor
cmp
inc
or
xor
xor
add
xor
xchg
xchg
pop
sub
xor
fs
mov
inc
lea
stos
inc
test
jecxz
mov
mov
sbb
nop
push
sbb
xchg
jne
dec
lods
aas
sbb
push
sbb
das
les
mov
xor
popa
out
mov
cmc
jno
sbb
loopne
add
je
or
add
cmp
hlt
in
push
and
fwait
jg
jge
mov
ficompl
adc
hlt
data16
push
mov
push
sbbb
push
xchg
test
xchg
stos
stos
shlb
push
and
out
mov
xchg
sub
xchg
shll
pop
pop
jo
in
outsb
out
sub
sub
sahf
mov
dec
subb
insl
adc
push
inc
insl
and
and
nop
sub
mov
mov
movsl
lret
ror
lds
js
pushf
fs
sbb
out
push
mov
cmp
adc
js
or
je
cmp
mov
in
push
mov
int3
outsb
dec
in
bound
pop
fildl
sub
movsl
mov
jl
mov
push
and
xchg
xor
cld
lock
push
jle
test
imul
xchg
xchg
mov
fisubrl
adc
test
add
xchg
mov
aas
nop
outsl
push
dec
mov
jns
icebp
mov
adc
sbb
into
jmp
shr
mov
std
and
cmp
adc
fcoml
and
sbb
pop
or
hlt
or
sbb
xor
pop
sbb
pop
mov
std
pop
sub
xchg
test
mov
jne
sub
out
mov
pop
test
subb
call
stos
push
pop
mov
push
or
add
jle
lret
push
mov
loop
xor
cmp
into
xlat
cli
scas
sbb
inc
pop
je
arpl
mov
rolb
aas
push
and
push
into
gs
dec
mov
ret
adc
sti
nop
dec
jge
mov
iret
fldt
leave
cmp
mov
orl
jmp
movsl
add
cltd
sbbl
in
popa
xchg
mov
stos
or
mov
aad
rol
add
push
mov
test
sbb
arpl
mulb
fdivrs
inc
or
or
rorb
or
nop
popa
and
fsubl
mull
in
xchg
mov
sub
sbb
or
pop
mov
lock
and
sub
lods
test
dec
out
das
leave
sahf
sti
xor
jle
push
or
xchg
xchg
sti
clc
or
sbb
jns
xchg
int3
popf
leave
popa
sbb
cmc
jp
lcall
and
dec
jmp
push
outsl
imull
xchg
shrb
or
jmp
jl
or
ret
jnp
lret
pop
repz
pushf
nop
mov
xchg
mov
xchg
insl
mov
mov
pop
into
loop
push
xchg
push
ret
and
add
scas
inc
out
pop
push
out
jns
sahf
xor
jmp
lods
xor
ss
ficomps
mov
mov
mov
fisttps
nop
shl
adc
jbe
ja
cs
int
pop
fdiv
loope
lods
nop
adc
in
pop
lds
cmp
sbb
mov
pop
xchg
imul
jbe
sbbb
jb
mov
stos
xor
mov
stos
adc
mov
pop
popa
and
out
push
pop
jnp
ja
lods
lock
sti
decl
push
fidivrs
cltd
repz
inc
mov
sahf
push
push
jbe
movsb
aad
mov
cmp
loope
rcpps
addr16
pop
mov
mov
dec
sub
pop
pop
std
fcmovnu
sub
mov
cmp
xchg
push
jnp
inc
sbb
movsl
inc
mov
jle
test
lods
push
xor
insb
aaa
mov
dec
or
clc
cmc
adc
les
and
mov
loopne
cmpxchg
ret
xchg
dec
sti
call
xor
lret
jmp
adc
mov
scas
test
add
scas
in
iret
mov
mov
fstpt
test
push
out
xor
mov
inc
scas
stos
push
stc
hlt
rcrb
sub
shlb
inc
hlt
ja
daa
testl
mov
add
clc
push
add
jge
fmuls
fs
cld
das
ret
adc
pop
xor
jae
fcoml
mov
mov
rclb
and
mov
icebp
push
test
pop
arpl
es
push
lods
dec
mov
ds
insb
push
mov
andl
arpl
cmpsl
xchg
mov
cmp
xor
jb
sbb
test
add
imul
popa
mov
cli
xchg
arpl
popa
fsts
pop
iret
leave
shll
mov
adc
insb
cmp
mov
mov
dec
mov
int3
scas
or
and
add
lcall
or
aaa
ret
push
addl
cmpsb
xchg
scas
add
ss
mov
push
je
jne
adc
sub
pop
pop
cmpsl
sar
movsl
jae
dec
push
mov
sub
pop
fistl
insl
sbb
inc
rol
or
push
sahf
fidivrl
adc
pop
lods
sbb
jl
mov
push
mov
int3
ds
idiv
add
jae
cli
ret
add
add
mov
mov
adc
or
out
mov
xor
push
out
lea
push
pop
lods
imul
les
jo
outsb
and
movsb
or
jae
mov
inc
iret
sarb
daa
xchg
pop
push
mov
sub
dec
sar
sahf
mov
test
xchg
mov
mov
leave
xchg
out
cltd
cmp
push
mov
mov
cmp
aas
cltd
xlat
out
fiaddl
mov
pushl
test
ss
xor
xchg
ret
cmp
into
mov
mov
lods
jno
fidivl
pop
ja
jmp
xor
loop
xchg
and
mov
int3
sbbb
add
mov
jle
jle
shrb
into
add
cld
sub
inc
jg
rorl
sbbl
fwait
outsl
js
iret
add
subb
push
inc
sbb
loop
pop
dec
addr16
adc
dec
lds
daa
mov
xor
push
and
xchg
mov
notl
lock
arpl
stos
out
leave
pop
fcoml
pop
mov
push
outsl
test
pusha
movsl
ffree
loop
sbb
inc
jns
outsl
sub
jecxz
cmp
jl
sbb
into
sbb
pop
ret
pusha
cmp
out
lods
add
sbb
jnp
pop
or
sub
out
rorl
cmp
xchg
ljmp
mov
mov
mov
or
ljmp
jne
push
push
lret
cmpsl
inc
cs
imul
repz
adc
mov
adc
inc
jo
push
mov
outsb
xchg
pop
jge
js
lods
rol
jb
pop
mov
xchg
mov
stos
repnz
adc
xor
add
mov
in
inc
jnp
or
rolb
stos
jecxz
push
push
fcmovnbe
pop
scas
aad
xchg
mov
inc
cmc
push
mov
push
imul
pop
xchg
aaa
stos
xchg
push
in
jmp
push
mov
test
dec
xor
push
mov
dec
xchg
adc
xor
or
mov
sbb
lods
or
movsl
add
rdtsc
and
sbb
fistl
out
xlat
shrl
cmp
cmpsl
mov
addb
jo
ret
sub
in
or
dec
mov
mov
std
ret
lea
mov
adc
fdivrs
ljmp
dec
mov
jecxz
mov
fistpll
xchg
jmp
mov
std
cmpsb
sbbl
dec
mov
lret
mov
data16
fldt
mov
sbb
push
inc
push
push
enter
je
sub
push
adc
add
adcb
repz
mov
stos
hlt
and
les
cmp
ds
stos
pop
inc
and
addr16
cs
fisubrl
popa
jp
ljmp
sbb
roll
xchg
fists
mov
addl
xchg
add
push
mov
outsb
adc
imul
adc
xchg
int
push
mov
push
adc
testb
jb
js
fisttps
adc
inc
mov
add
fwait
loope
mov
in
daa
jbe
dec
cltd
jl
push
cmp
dec
fcmovb
negl
ss
and
mov
fstpl
popf
cmc
pop
fisubrl
test
icebp
imul
xchg
jno
mov
xor
fidivs
pushw
add
mov
jns
pop
sbb
lods
xchg
std
add
push
hlt
sbb
sub
xlat
push
xchg
adc
ficompl
fadds
pop
dec
add
inc
cmpsb
js
inc
imul
pop
aaa
sbb
inc
lcall
cli
jmp
push
lock
sbb
fsts
add
sub
pop
clc
daa
fwait
mov
cwtl
lods
lret
sub
mov
xor
pop
lods
shl
mov
imul
and
pushf
add
ret
das
js
jle
push
cwtl
cmp
pop
js
lcall
cmp
test
stos
push
cmp
outsl
jns
pop
out
sbb
lock
jle
outsl
in
cld
das
dec
lock
into
jle
stc
xchg
mov
fildl
ja
mov
dec
dec
push
fs
subb
pusha
adc
push
test
mov
idivb
dec
mov
add
jl
push
inc
add
sub
sub
addr16
sahf
adc
push
xor
jnp
popf
dec
sub
ljmp
push
sub
inc
or
call
sbb
push
dec
jge
loope
xor
daa
xchg
pop
fildl
mov
int
pop
sub
add
pop
jl
mov
mov
adc
frstor
mov
add
or
adc
cwtl
mov
mov
and
das
sbb
aas
rcr
dec
cli
sbb
gs
sub
lds
mov
in
mov
mov
sub
lahf
fcoms
dec
in
fisttps
cmpl
fucomi
fadds
lcall
repz
jg
lahf
test
mov
mov
sbb
cli
pop
popf
fcompl
in
std
insl
sbb
jne
das
or
add
sub
xchg
pop
mov
popf
in
jmp
inc
shr
cld
xchg
mov
pusha
inc
stos
xchg
movsl
or
fcmovu
jns
inc
jp
in
mov
and
and
or
adc
sbb
push
xchg
jmp
adc
cmp
push
mov
dec
test
xchg
in
jo
or
nop
adc
inc
inc
xor
shll
xor
dec
movsb
dec
popa
xlat
jp
aam
mov
test
movswl
inc
dec
push
fcompl
jge
mov
in
orb
dec
cmp
fnsave
aad
pop
jo
xchg
insl
inc
test
jmp
lret
in
inc
jno
mov
mov
in
ja
fstpl
xor
sub
sub
inc
pushl
std
xchg
test
lock
pop
test
mov
fs
pop
push
adc
mov
int3
mov
pop
sub
adc
dec
jae
inc
add
stos
jle
jge
sbb
dec
aas
cmpsb
mov
jge
je
adc
rcrb
xor
mov
int3
negb
les
pop
les
popf
xchg
jl
and
loop
push
test
push
test
adc
fldcw
inc
enter
and
jle
mov
fcomi
mov
push
in
adc
lods
cmpsb
mov
cld
xor
enter
inc
mov
dec
sbb
test
or
pop
outsl
in
mov
xchg
jno
jmp
dec
test
xor
out
dec
bound
in
or
cmp
mov
cmp
sbb
ja
scas
mov
cmp
daa
hlt
pop
ret
sti
or
mov
pop
leave
fwait
leave
jne
aaa
and
push
cwtl
xor
mov
pop
insb
cmp
iret
loopne
pop
dec
test
jl
sbb
stos
mov
and
addr16
shlb
push
popa
addr16
scas
out
sahf
ja
pop
out
sub
es
sub
negl
adc
inc
les
sub
sub
jbe
mov
mov
js
fnsave
adcb
dec
add
inc
mov
jno
jo
aad
imul
pop
jle
adc
stc
sbb
dec
xchg
mov
adc
inc
xchg
enter
insb
out
push
or
dec
sbb
lods
push
mov
lods
movl
mov
mov
jnp
or
in
daa
xor
dec
ja
mov
outsl
fcomip
sysret
mov
xchg
imul
mov
es
bound
outsb
dec
mov
cmp
sbb
jp
adc
mov
mov
add
dec
push
inc
negb
add
rol
pusha
lock
jg
and
aaa
ficoml
cmp
pop
aad
xchg
fadd
cmp
pushf
xor
mov
adc
pop
sbb
or
mov
xor
iret
iret
dec
fwait
jge
sub
test
test
and
mov
std
test
jb
int
js
dec
adc
ja
push
ja
jno
xchg
sarb
sub
adc
pause
fmull
adc
jecxz
mov
cmp
sub
clc
jmp
sub
mov
jge
addb
lods
mov
test
adc
pop
add
ss
rcll
sub
sti
jl
pushf
add
clc
jge
pop
dec
lret
sarb
jecxz
dec
std
daa
pop
sub
rcl
adcb
sub
cmp
fmulp
sbb
iret
lods
xchg
out
cli
scas
fdiv
sbb
mov
popa
nop
loope
test
dec
xor
inc
and
cmp
dec
push
imulb
jb
shrl
sbb
fimull
jmp
push
pop
lret
hlt
cmp
rcrl
dec
loop
cld
mov
jns
adcl
fcmovbe
or
out
fstpl
inc
inc
movsb
adc
pop
movsl
sti
xchg
add
leave
jmp
xchg
outsb
xchg
call
sub
add
imul
mov
push
addb
sub
mov
mov
enter
mov
mov
mov
pop
mov
jno
adc
and
xor
ljmp
adc
lds
push
imul
in
sub
jg
or
mov
mov
jecxz
leave
loope
mov
sub
inc
iret
xor
pop
imul
mov
incl
or
jmp
fs
fsubrl
cwtl
sbbb
jae
roll
movsb
pop
jmp
adc
pusha
pop
or
mov
in
xchg
cmp
xor
adc
xchg
insl
int3
pop
sbb
adc
mov
inc
mov
inc
sahf
outsl
sar
loopne
jb
test
push
icebp
shll
mov
stos
push
mov
outsl
imull
and
push
inc
sub
dec
mov
xchg
dec
inc
lds
test
pop
sbb
sarb
je
and
cld
outsl
int
xorb
incl
fadds
into
imul
pop
xchg
mov
aas
pop
or
dec
and
mov
push
sub
cltd
mov
push
or
or
fwait
cmp
lods
test
mov
sub
jp
fcomip
dec
cld
cli
push
stos
std
movsl
xor
xchg
dec
fdivl
xlat
mov
out
scas
xor
inc
and
mov
mov
jnp
sbb
sbb
add
iret
pop
sub
fs
cwtl
inc
outsl
pmuludq
in
sub
fiadds
insl
movsl
push
push
ljmp
mov
sub
outsb
or
js
pop
push
sbb
or
or
dec
icebp
scas
dec
lahf
fwait
aad
xlat
and
mov
adc
stos
xor
mov
dec
mov
ja
xchg
push
or
mov
inc
push
lcall
jne
xor
scas
daa
sbb
loopne
jnp
and
cmp
xor
jo
pop
push
in
test
jbe
imul
scas
add
cmp
fiadds
or
jmp
addl
add
mov
xchg
mov
or
xchg
cld
inc
add
cwtl
inc
add
out
ja
push
push
xlat
in
push
jns
sub
sbbb
das
imul
pcmpgtw
cmp
sbb
jecxz
lods
push
clc
loope
das
pusha
sub
jp
sub
pop
lock
loop
cld
test
xchg
sbb
pushf
cmp
in
dec
pop
addb
xor
shl
sarl
sub
rcrl
loopne
sub
fimuls
loop
push
add
fs
cltd
xchg
or
mov
hlt
inc
rorb
loop
loop
inc
loopne
insb
jecxz
xor
leave
rorb
push
bound
fdivrs
cmpsl
popa
lds
pop
gs
xchg
dec
xchg
nop
mov
and
inc
cmp
pop
fstpt
mov
sbb
pop
fdivl
sub
push
mov
cwtl
mov
xlat
pop
stos
or
mov
cltd
mov
lea
adc
pop
push
fwait
repnz
sbb
ss
fimull
pop
adc
popf
mov
cmc
cltd
mov
lods
mov
sahf
jl
iret
cld
xchg
lret
fdivrl
push
out
xchg
xor
in
cltd
dec
pop
popa
mov
scas
mov
push
mov
and
or
aad
cmp
sbb
test
mov
mov
jle
ficoml
xlat
cmpsl
scas
fidivrl
popf
jecxz
and
aad
aaa
inc
mov
je
pop
and
in
push
push
loop
sbb
xchg
lcall
push
sbb
and
inc
mov
fiadds
repz
or
pop
stos
and
aas
mov
cs
cmp
negb
shrl
lahf
das
add
cltd
sbb
int3
loopne
sub
leave
lods
repnz
in
jns
mov
push
dec
frstor
or
aas
rolb
mov
push
xor
dec
cli
mov
dec
or
mov
jg
push
push
inc
push
nop
ret
mov
and
and
iret
xchg
in
or
mov
add
test
jecxz
mov
xchg
inc
pop
push
iret
xor
xchg
lcall
stos
jmp
movsl
sbb
dec
cmc
and
pop
mov
mov
js
pop
arpl
mov
mov
fidivrl
cmpsb
cmc
cli
filds
pop
sbb
mov
es
jb
sub
cltd
mov
mov
mov
sbb
xchg
addb
xchg
hlt
sahf
cli
popa
out
or
and
fcoml
notb
inc
icebp
sub
dec
xchg
ja
inc
int3
push
cld
addb
push
fwait
out
pop
loopne
add
test
push
notb
movsl
xchg
sbb
hlt
jle
lods
movq
sub
clc
jne
mov
lret
mov
pop
mov
jecxz
push
xor
jne
movb
push
dec
mov
push
insl
fwait
and
mov
push
mov
int3
jmp
fsubl
fsub
xor
sub
or
movsb
lds
int
mov
movsl
out
pop
notl
mov
or
rcr
fldl
xor
adc
das
call
mov
mov
xchg
ja
jmp
mov
pop
out
daa
xchg
lods
push
or
mov
and
popf
out
lods
adc
jae
fisttpl
xchg
mov
xchg
add
xor
test
dec
std
mov
movsb
das
pop
enter
call
or
stc
rcll
pop
and
andl
xchg
cmc
cs
ljmp
jecxz
pop
outsl
loope
mov
test
pop
movsb
mov
inc
cltd
jo
cmp
movsb
leave
int
mov
jae
pop
sbb
mov
or
nop
movsb
jbe
inc
add
dec
aas
outsl
fidivl
fs
xchg
add
shlb
jnp
dec
and
mov
int
jecxz
inc
dec
sub
or
fiaddl
and
or
pop
push
popa
jle
lods
lods
sub
mov
dec
push
and
mov
jle
adc
dec
iret
sub
and
push
loop
test
cli
adc
popa
fadd
std
sub
vcvtdq2pd
xor
and
cmp
andl
sbb
adc
iret
dec
mov
jno
sub
aas
jae
std
xorl
popf
rcl
xchg
out
pop
icebp
push
testb
les
jno
mov
inc
or
ret
mov
hlt
loopne
std
push
cmpsb
jns
xor
push
jl
or
pushf
into
jne
xlat
sbb
mov
test
jecxz
mov
scas
cmp
pop
sbb
js
pusha
jbe
or
loope
adc
stos
push
sahf
jecxz
sub
mov
pop
xor
dec
lds
jl
call
jge
cmp
dec
lret
mov
or
popa
test
jecxz
scas
dec
or
loope
stos
cmp
mov
jb
mov
cmc
sub
shl
jb
sbb
aas
mov
push
iret
inc
or
jle
outsb
cs
sahf
pop
leave
sub
daa
shr
test
int3
cltd
inc
pop
leave
daa
jno
out
addr16
pop
jo
inc
inc
adc
shll
ljmp
fildl
jae
push
sbb
and
mov
sarl
xchg
add
adc
push
add
xor
mov
cmpsb
mov
lds
xor
negb
popf
scas
xor
cli
pop
cmpsb
lods
es
cmp
dec
sbb
push
aas
cmp
outsl
test
or
jmp
aaa
pop
out
mov
mov
stos
sub
or
in
push
xlat
mov
cmp
xchg
jne
cmp
push
adc
test
aam
pop
popa
repz
test
mov
mov
jb
leave
mov
mov
mov
imul
xchg
ss
pop
cmp
rcrb
inc
shl
xchg
pusha
test
or
in
push
xor
jge
xor
sub
inc
adc
inc
sti
mov
fists
subb
mov
nop
fwait
lods
cmp
jo
insb
mov
pop
lock
out
test
push
clc
pop
sub
lods
sbb
imul
out
cld
dec
cmp
sub
push
sub
ret
push
inc
push
dec
imul
xorl
movsb
les
mov
mov
xor
mov
mov
bound
push
mov
aaa
inc
icebp
or
cmp
das
xchg
jo
xchg
imul
rorb
pop
stos
xchg
fsts
mov
mov
test
or
pop
sbb
pop
mov
lcall
aas
dec
mov
mov
inc
mov
shll
test
xchg
inc
dec
sub
popa
dec
jns
out
psubusb
popl
movsb
sbb
iret
pop
mov
stc
and
cli
or
or
shll
push
cmp
inc
cld
pop
mov
orl
scas
inc
fiaddl
repz
mov
push
lods
fmull
imul
jne
loop
cmpsb
mov
xchg
inc
jmp
mov
mov
call
lahf
mov
and
push
cmpsl
mov
nop
and
adc
in
mov
cmc
loope
or
or
sbbl
hlt
rcrb
ret
movsl
test
jns
imul
stos
lock
repz
sahf
xchg
inc
or
sti
sar
add
out
mov
mov
sbb
test
mov
mov
sbb
ret
sbb
pop
lahf
loop
out
lea
aaa
mov
jbe
mov
and
mov
add
fs
hlt
cmp
loopne
das
sbb
popf
mov
or
shrb
insl
out
jl
aam
jnp
imul
add
out
imul
push
je
cmc
rclb
lahf
mov
and
pop
in
and
xchg
iret
mov
mov
out
shlb
cmp
repnz
aaa
lock
out
add
lret
cmpsb
ljmp
rclb
test
cwtl
rorb
or
fnstenv
pushf
cli
cmpsb
int3
or
mov
push
inc
push
pop
stos
or
insb
mov
pop
xor
fsubs
add
pop
fistpl
ds
scas
out
scas
ljmp
push
hlt
pop
aaa
imul
repz
dec
jmp
and
push
js
mov
dec
or
ffreep
fs
sbb
out
mov
push
movsb
inc
rcrb
fwait
cltd
fstsw
xchg
push
sub
rcrl
push
or
mov
test
outsb
sbb
push
dec
push
arpl
lods
cwtl
push
rorl
jns
jge
cmp
inc
push
mov
pusha
ja
pusha
xchg
xchg
jno
icebp
mov
mov
mov
or
sti
outsb
sub
sub
xor
test
push
and
mov
outsb
mov
mov
dec
int3
or
jnp
orb
es
push
fcompl
cwtl
fists
lods
inc
sbb
adc
jmp
jge
pop
mov
jnp
jge
adc
inc
stc
xchg
lods
ja
mov
cmp
lods
sub
adc
adcl
scas
mov
sub
xor
mov
sub
adc
sub
insl
rolb
push
cmpsl
nop
add
aad
cmpb
ljmp
sbbb
out
mov
xchg
jp
ljmp
jge
ja
loope
inc
lea
clc
in
dec
adc
sub
or
lret
in
mov
add
loop
icebp
lret
shlb
add
imul
sarb
into
mov
cltd
ja
jge
shlb
loop
daa
ss
jp
pushf
gs
or
imul
ss
popa
lods
jle
xor
xor
mov
xorb
ja
int3
jle
push
jbe
das
push
dec
inc
movsl
mov
and
adc
inc
lods
movsl
cmp
cmpsl
test
pop
fimull
fs
cmp
inc
arpl
mov
jo
mov
inc
test
mov
out
add
jo
pop
sbb
or
std
inc
cmp
sub
shl
fwait
push
jecxz
jne
jge
pop
imul
test
sbb
bound
mov
cmp
jnp
adc
or
or
movsb
xchg
push
dec
mov
mov
fcompl
xor
lcall
pop
dec
xchg
mov
push
fsts
stos
add
fs
cld
icebp
jne
mov
test
and
jmp
adc
mov
dec
mov
xchg
test
jnp
and
push
test
sub
pop
mov
sbb
data16
jae
mull
imul
lahf
jecxz
out
aad
mulb
ljmp
shll
xchg
jmp
sub
lahf
jecxz
push
xor
sbb
or
and
and
in
mov
push
pop
lods
mov
mov
xchg
xor
add
inc
sub
mov
data16
push
pusha
xchg
cmp
push
and
inc
stos
stos
xchg
mov
add
add
jp,pt
test
and
inc
push
fcompp
fiadds
pop
mov
xchg
xor
aam
iret
fadd
sbb
leave
aas
jl
mov
lret
mov
inc
out
mov
enter
test
into
in
aaa
jbe
iret
or
cmp
daa
pop
mov
sub
mov
fsub
rcrb
iret
adc
adc
and
push
push
lods
mov
imul
pusha
fistpl
push
fisubl
fwait
add
xchg
rol
sbb
pop
test
inc
rcrb
in
adc
sbb
loope
xor
test
test
cmp
fimull
jns
ret
sub
push
stc
mov
mov
popf
xchg
shrl
int3
mov
lcall
and
subl
call
cmp
cmp
jmp
shrb
inc
cwtl
add
cmp
inc
insl
mov
and
hlt
inc
mov
dec
xchg
shlb
sarl
push
mov
mov
pop
jmp
and
add
imul
cwtl
sub
pop
dec
outsl
add
imul
xor
mov
sub
stos
mov
movsl
out
or
les
mov
ljmp
xlat
xlat
sti
adc
xchg
pop
pop
loopne
push
pop
sarl
xor
jae
ret
sbbl
arpl
cmp
jne
inc
scas
inc
jle
and
mov
sub
sub
cld
sbb
cs
mov
push
repnz
pop
cmp
pop
xchg
cmpsb
cmp
fistl
sahf
fstl
jns
fcomps
push
sbb
pop
and
pop
mov
xchg
push
pop
popa
pop
aad
xchg
int3
xor
dec
mov
cld
int3
sub
inc
pop
inc
sbb
push
xorb
test
push
sti
jne
sbb
bound
lret
mov
pop
test
enter
lods
into
or
imul
iret
jo
in
push
mov
add
push
or
sbb
or
push
mov
xchg
cli
pop
jle
inc
or
xlat
sub
sub
cs
in
xchg
daa
and
in
pop
cltd
jae
dec
lcall
shl
sub
adc
mov
jle
sbbl
faddl
loopne
cmpsl
cmpsl
jno
shll
es
push
pop
and
pop
mov
xchg
xchg
cmc
orb
push
sbb
hlt
inc
rcrb
lcall
jo
shl
aaa
loopne
cmp
bound
test
push
xor
sub
or
shl
cmp
jbe
add
inc
xor
pop
int3
lret
out
xor
leave
cltd
add
sti
push
and
mov
lea
dec
jge
xchg
cs
jno
mov
xor
pop
test
cltd
fists
sub
dec
test
mov
xor
xorb
inc
enter
rcl
in
inc
mov
mov
fmulp
mov
ja
push
outsl
dec
mov
push
push
js
lret
and
stos
inc
dec
mov
mov
fucomi
cmpsb
or
inc
sbb
sbb
inc
jne
adc
mov
or
imulb
bound
jbe
mov
aam
push
mov
les
adc
mov
jg
std
jbe
cmp
xchg
gs
inc
pop
xchg
mov
push
in
or
outsl
in
xchg
xor
jecxz
idivb
xchg
fldl
outsl
mov
jp
call
jbe
into
movsl
push
bound
or
data16
pop
fnstcw
xchg
fnstenv
int3
popa
mov
mov
sbb
dec
rolb
dec
mov
addl
mov
mov
add
xchg
aas
add
nop
sbb
sbb
test
lea
pop
dec
aaa
scas
je
mul
push
dec
xor
das
pop
rcr
xchg
and
lret
pop
mov
js
mov
negb
xor
aam
pop
pop
mov
adc
xor
cmc
cmp
enter
loop
pushf
mov
hlt
and
lods
pop
lea
stos
movsl
sbb
ret
pop
push
stos
mov
sub
popf
push
int
sbbb
mov
xchg
idivb
push
fisubs
jp
sbb
xchg
push
xor
sahf
xorl
or
or
hlt
rclb
popa
push
sub
pop
cmp
add
lods
push
pop
push
mov
aaa
cmpsb
xor
add
fistps
mov
aad
leave
test
cmp
filds
sub
push
outsb
imul
out
jb
arpl
push
js
sub
mov
xor
mov
insb
mov
mov
lds
andb
les
inc
pop
loopne
pop
xor
ljmp
ja
push
sbb
xchg
fdivs
add
sbbb
cmp
xor
test
decl
lret
mov
sbb
mull
mov
jne
cmp
pop
mov
test
test
pop
jl
push
mov
xor
mov
mov
fistpl
call
mov
pop
fcmovnbe
jle,pn
pop
insl
in
pop
push
jae
fbld
test
mov
ss
cmp
jmp
mov
les
push
push
cs
mov
jo
mov
shrl
dec
push
and
movsb
xchg
push
outsb
xchg
sub
dec
cmpsb
push
add
mov
fstl
inc
pop
mov
add
out
jno
pop
mov
add
mov
pop
in
add
mov
mov
or
leave
jno
dec
dec
fwait
mov
add
fsts
cmp
push
mov
mov
inc
enter
pop
inc
sub
push
and
subb
push
mov
lods
ds
test
cmp
lret
inc
jl
into
xor
xor
cli
adc
stos
mov
es
xor
ret
les
mov
pop
push
arpl
jbe
adc
or
in
add
rcr
lret
stos
sub
mov
mov
daa
push
cmp
icebp
jo
imul
arpl
xor
mov
clc
cmc
mov
imul
leave
adc
jp
add
fdiv
pop
out
mov
inc
ljmp
adc
shrb
stos
aam
xchg
xor
loope
adc
in
shrl
inc
pop
sahf
gs
pusha
insl
repz
push
stos
mov
mov
mov
sbbb
pop
stc
inc
call
in
int
sub
imull
xchg
mov
enter
clc
and
dec
jp
pusha
das
xor
js
iret
stc
inc
frstor
mov
jbe
and
fwait
mov
jns
rcrl
nopl
aad
call
outsl
dec
pusha
loop
testl
add
mov
add
fildl
lret
cltd
movl
outsb
pop
cmp
xchg
cs
lds
repz
std
fdivrs
daa
xorb
xlat
adc
jo
leavew
inc
jecxz
sub
shl
push
xor
pusha
lea
and
push
out
cld
fdivl
call
out
push
pusha
or
iret
jp
sub
dec
mov
mov
xchg
fildl
pop
jns
scas
lcall
pop
inc
push
dec
sbb
imul
mov
lahf
ljmp
sahf
sub
mov
divl
dec
push
lcall
popa
ljmp
sub
fdivl
dec
or
dec
or
mov
ret
xlat
gs
arpl
stos
mov
into
and
inc
xchg
add
into
push
jno
push
fistl
cmpsl
xchg
pop
push
std
movsb
adc
mov
mov
inc
cwtl
insb
arpl
movl
fdivs
lret
call
and
push
mov
pop
fisttpll
fidivs
push
loop
movsb
outsl
cld
add
jge
sub
out
sub
lods
ja
data16
test
xor
inc
inc
jns
inc
dec
std
call
mov
jl
push
dec
adc
dec
push
dec
subb
ljmp
jmp
daa
push
sub
loopne
mov
icebp
mov
out
cmpsb
inc
adc
inc
cmpsl
push
add
jno
ja
jle
cmp
shlb
cwtl
test
dec
add
popf
and
jle
dec
adc
adc
mov
shrl
scas
pop
add
xchg
jmp
add
adc
mov
clc
fisubl
push
jb
in
mov
in
movsl
mov
sbbl
lret
xor
test
fwait
in
in
stos
xor
dec
dec
movsl
mov
imul
jp
in
mov
inc
jl,pt
movsb
je
adc
dec
sbb
lret
dec
ds
mov
outsl
jb
pop
repnz
jge
mov
and
stos
dec
mov
in
mov
pusha
sahf
movsb
hlt
adc
les
nop
cmp
sbb
imul
inc
xor
std
dec
and
xor
ss
dec
jl
je
jle
cli
cwtl
push
xor
xorb
or
push
outsl
and
cld
adc
and
mov
imul
aad
xchg
mov
cmp
push
and
jo
cltd
enter
jae
cld
sub
aaa
rcrl
stc
jne
ljmp
cld
mov
adc
clc
stc
test
stos
aad
add
lods
and
lea
pop
sbb
sbb
call
std
ret
mov
test
insl
inc
les
mov
push
xchg
or
xchg
cmc
jae
mov
mov
imulb
mov
popa
call
outsl
mov
ficoms
int
sbb
fwait
es
push
test
gs
imul
dec
out
push
insl
jecxz
mov
clc
pop
mov
cmpsb
pop
fnsave
pop
xor
out
mov
xchg
adc
lret
cld
int3
in
mov
mov
ja
xchg
dec
xor
mov
in
mov
mov
lods
fsubrp
sbb
sub
mov
loopne
and
mulb
fcmovnu
decl
mov
sub
iret
stc
flds
clc
dec
or
sub
dec
incb
arpl
bound
and
fcomip
data16
ss
xchg
int3
std
jae
js
in
xchg
dec
out
push
jge
aad
mov
scas
xchg
fscale
dec
aaa
hlt
and
xchg
inc
test
movsb
inc
lds
das
ss
popf
xchg
imul
add
add
movsl
rcrl
xor
push
add
call
mov
sub
mov
insl
cs
xchg
insl
pop
es
rolb
xchg
iret
mov
inc
out
pop
ja
mov
imul
pop
push
sub
lods
lret
jne
mov
push
pop
imul
sbb
sub
ret
in
pop
aam
push
pop
shlb
lahf
adc
mov
mov
sub
imul
int
add
xchg
cld
add
dec
sbb
mov
jp
mov
mov
jne
add
add
push
fwait
sbb
pop
dec
stos
jle
ret
ds
bound
mov
cmp
lds
xor
vmwrite
sub
push
jmp
or
ret
push
push
adc
push
xor
push
mov
scas
jl
hlt
xor
aaa
push
push
cmp
adc
sahf
pop
and
adc
cmp
inc
outsb
repnz
pop
enter
scas
jns
jecxz
and
sbb
xchg
inc
ds
mov
pop
jge
loopne
repz
inc
mov
dec
cli
ds
ljmp
and
arpl
xchg
add
mov
sub
lret
mov
enter
lods
es
adc
out
imul
in
cltd
cli
xchg
movsb
push
push
sbb
pop
in
adc
loope
lret
jecxz
dec
dec
popf
std
mov
repnz
mov
rcrl
inc
pop
cmp
bound
stos
cmp
xor
sub
cmpsb
in
push
or
jo
sub
add
sbb
inc
push
inc
or
xor
mov
inc
popf
cld
popa
push
dec
sbb
jns
leave
fwait
js
nop
xchg
ror
adc
sub
adc
test
out
mov
sub
adc
pop
or
fldenv
fistpl
cwtl
leave
loopne
cmp
ljmp
insb
movsl
mov
push
arpl
add
les
popa
push
out
dec
pop
ja
inc
and
mov
inc
pushf
and
xchg
pop
jno
repnz
and
fidivl
sub
mov
dec
rclb
inc
lret
mov
and
dec
push
push
lea
test
test
lret
mov
add
fstpt
pop
mov
int3
les
iret
roll
dec
and
push
sbb
dec
not
xchg
outsb
jp
push
sti
jmp
fdivr
imul
movsb
lods
loope
add
mov
lds
test
leave
sahf
and
scas
aam
push
cmp
cmp
mov
and
cwtl
lret
rcll
sbbl
pop
je
sub
push
mov
test
pusha
sub
add
mov
scas
leave
mov
clc
scas
aas
mov
sub
xchg
mov
inc
std
dec
and
rolb
and
les
popa
jne
mov
pusha
fiadds
hlt
push
cli
pusha
xlat
lcall
dec
xchg
aam
cmp
loope
mov
sub
push
mov
enter
lock
mov
test
mov
jns
add
dec
rclb
scas
jnp
lods
into
add
mov
cmovbe
pop
stos
lahf
mov
push
in
ret
pop
rolb
pusha
enter
rorb
aad
dec
fwait
add
mov
mov
test
xor
bound
add
mov
add
push
and
xchg
cmpb
xchg
sarl
xchg
mov
stc
fisubs
and
dec
scas
idivl
dec
pusha
push
dec
sub
jns
mov
add
sahf
sub
fistpl
aam
or
sub
filds
lods
mov
pop
fsubs
lret
jmp
pop
jecxz
cmp
sub
or
sbb
or
cmp
adc
mov
mov
add
mov
jno
mov
fdivs
aas
rcrl
pop
mov
int3
imul
ret
sar
cmpsl
int3
adc
cmp
sarb
addr16
outsb
jmp
scas
lock
or
cltd
sbbb
cli
push
or
cs
rcll
mov
jae
dec
bound
add
addl
xor
pop
cmp
jge
xor
movl
cltd
xchg
js
xchg
cmpsb
sbbl
pop
in
adc
mov
pop
arpl
aas
adc
das
adc
movsb
ljmp
or
jge
pop
sbb
jp
idivl
xorb
sbb
inc
stos
mov
and
xchg
jecxz
sub
xchg
movsl
insb
mov
sahf
xor
sti
fdivrl
cmp
lcall
adc
pusha
and
cmp
das
pop
lods
cwtl
cmp
jle
lds
hlt
jmp
stos
inc
add
jae
cmpsb
lods
cwtl
aad
and
mov
stos
outsl
xor
add
inc
dec
outsb
pop
cmp
insb
cs
and
jae
das
sub
rolb
jnp
fs
sub
xor
adc
imul
and
shlb
pusha
out
clc
mov
pop
leave
sbb
jg
mov
sub
loopne
mov
test
pop
push
jns
sub
loopne
arpl
add
movsl
int3
jl
cmp
loope
cmp
xchg
inc
sub
mov
mov
sub
and
adc
mov
test
fcmovne
mov
sub
nop
jle
jnp
test
mov
and
push
xchg
out
push
sarb
lock
and
sub
daa
mov
adc
ja
mov
mov
aam
cli
andb
clc
in
ds
mov
stos
testb
cwtl
and
xchg
lock
mov
pop
push
sub
pushf
push
jno
cltd
fwait
pop
addr16
or
mov
nop
pusha
cltd
push
xor
xchg
ja
daa
jne
mov
scas
ljmp
jnp
inc
mov
aas
movsb
scas
lock
fisttpl
dec
movsl
xchg
out
cmp
test
je
int
add
out
fisttps
cmpsb
in
shrl
pop
arpl
push
shrl
jbe
xchg
pop
das
das
cli
test
inc
cmc
into
iret
scas
fsubrs
or
push
into
in
sub
xor
lret
push
mov
jp
add
adc
in
adc
add
xchg
in
sub
mov
arpl
mov
ja
in
shrl
push
dec
dec
in
js
aaa
mov
push
bound
cmp
mov
fwait
dec
xchg
out
into
fidivs
cmp
adc
or
imul
out
cltd
sub
mov
outsb
cmp
xchg
xchg
sar
pop
cld
or
push
xchg
add
mov
not
cs
sti
jo
jp
xchg
push
cmp
iret
cmc
push
dec
mov
aam
out
idivl
bound
sti
arpl
mov
popl
xchg
mov
scas
cs
push
mov
and
aaa
or
pusha
jecxz
push
test
in
iret
shrl
ss
rcrb
and
and
div
aad
popf
pop
fwait
mov
sub
sub
je
ljmp
movsb
dec
dec
loopne
jae
cs
add
sub
sbb
and
pop
xlat
pop
fwait
jecxz
fwait
jmp
enter
vmovhlps
out
push
hlt
or
sub
lret
mov
xor
out
notl
mov
jg
cmpsl
aad
in
pop
mov
in
mov
stos
sbb
roll
pop
xchg
or
mov
data16
sbb
cmp
js
fs
nop
dec
ljmp
test
es
mov
or
and
sbb
sbb
shl
pusha
out
inc
lods
bound
inc
aaa
pop
mov
jmp
hlt
adc
mov
fadds
adc
lods
cmovae
pop
push
fsubs
es
aas
aad
inc
and
or
shll
mov
pop
inc
jecxz
test
jne
push
mov
aas
decl
mov
in
jnp
mov
sbb
imulb
mov
jo
pop
imulb
in
mov
or
test
inc
adc
push
lret
in
dec
sbb
gs
xor
ret
sarb
xchg
inc
inc
aam
sbb
sarl
jg
pop
pop
and
mov
pop
xor
pop
mov
fcompl
adc
and
or
loopne
mov
es
cmpb
mov
and
pop
lods
subb
dec
movsl
cmp
pop
dec
lds
push
adc
push
in
push
scas
pusha
imul
popf
dec
sar
jae
or
jl
in
adc
inc
or
dec
and
mov
test
push
mov
jbe
rol
test
add
leave
xor
rcr
mov
dec
jecxz
sub
jge
mov
repnz
xchg
fldt
pusha
mov
shlb
arpl
jmp
dec
cmp
addb
cmpsl
mov
adc
and
mov
in
pop
add
xor
scas
mov
dec
sub
xor
push
aas
out
pop
or
push
jns
out
outsb
sti
mov
cltd
mov
or
mov
xor
cmp
into
push
jnp
mov
mov
pop
aas
push
mov
xchg
cmp
aad
call
into
insb
outsl
les
push
pop
cwtl
jb
jl
jl
sbb
cmpb
sti
call
scas
inc
xor
bound
fsubrs
ret
xchg
dec
icebp
in
sub
xor
jg
adc
enter
mov
jno
rcll
nop
mov
push
cmp
push
fcompl
xchg
mov
out
in
add
cld
ffree
xchg
inc
es
flds
jmp
mov
xor
xorl
lcall
or
out
jnp
outsl
out
jae
fdivs
add
adc
in
add
lea
iret
jge
sbb
inc
imul
push
mov
mov
mov
push
fstpt
cmpsl
pop
es
popf
mov
xchg
in
mov
xchg
or
add
xlat
mov
jb
add
clc
pop
pop
add
scas
notl
xchg
push
mov
dec
nop
inc
imul
jbe
int3
dec
push
imul
mov
inc
and
test
push
jnp
push
mov
and
out
inc
adc
repnz
in
inc
das
push
in
pop
leave
lds
mov
je
imul
push
mov
push
popl
dec
adc
sub
sarl
jnp
loope
insl
movb
or
fs
push
das
sub
push
in
jns
pop
pop
lods
and
test
sbb
xor
pop
lcall
cwtl
xrelease
jo
xchg
fisubs
cld
xchg
and
pop
dec
jns
push
jg
fs
xchg
iret
cwtl
xchg
ss
jmp
and
mov
clc
xor
sub
cmp
and
mov
pop
push
add
lds
iret
lods
insl
mov
in
mov
dec
mov
inc
jmp
jmp
scas
mov
jo
mov
out
insl
bound
or
push
cmp
xchg
jg
jle
fildl
call
pop
repz
sub
out
std
push
loop
clc
sbb
ret
dec
outsb
push
xchg
xchg
loope
es
test
dec
ficompl
dec
mov
lods
sub
push
mov
jmp
inc
movsl
cmpsl
mov
push
inc
repnz
test
pop
out
es
fstps
aam
ss
sub
jg
sbb
mov
nop
scas
or
nop
das
add
and
iret
fsubp
int
sbb
xchg
push
and
mov
pushf
inc
pop
out
cs
lcall
sub
out
mov
jmp
cltd
orb
je
push
or
pop
lods
leave
ja
or
lock
insl
dec
sbb
lret
icebp
push
popa
sub
testb
ljmp
add
sbb
lds
add
jns
xchg
xchg
pop
xchg
and
mov
push
mov
nop
aam
push
enter
out
add
add
into
ljmp
pop
clc
clc
inc
xor
test
add
lods
mov
dec
test
inc
es
add
out
inc
lds
mov
jg
or
insb
pusha
icebp
push
adc
cld
xchg
xlat
jp
push
cmpsl
push
icebp
repnz
push
dec
cmc
clc
and
xor
ja
cmp
ficoml
jnp
rcrb
mov
std
jecxz
lea
int3
lea
adc
push
call
sub
shl
popf
mov
fsubrl
or
ds
sub
pop
and
add
mov
xchg
sbb
aam
in
in
lds
lds
cmp
sub
inc
lret
mov
add
loop
sub
push
movl
dec
push
sti
imul
push
lret
aaa
or
out
mov
outsb
sbb
jbe
lods
in
jb
and
ja
mov
add
mov
mov
ret
lea
dec
ss
mov
ret
aaa
rorb
mov
fbstp
insl
mov
inc
sti
mov
loop
pop
lds
sbb
xchg
pop
mov
out
iret
mov
sbb
pushf
mov
call
xor
add
sub
adc
ds
xor
jg
sbb
sahf
sbb
dec
jle
mov
mov
fidivl
jmp
push
pop
pop
je
xor
pop
lcall
xor
sbb
mov
push
out
out
push
mov
in
pop
add
out
adc
push
push
inc
sub
cmp
lcall
adc
xchg
mov
push
popf
out
scas
mov
addb
sarl
push
mov
in
mov
add
dec
sbb
je
addb
or
mov
pop
int3
inc
adc
popa
imul
mov
sbb
aas
cld
pushf
test
stc
add
in
jmp
arpl
or
mov
stos
int3
pop
stos
es
inc
xor
cmp
pop
mov
and
imul
and
cli
stos
add
cmp
sarl
jge
sub
jp
pop
sub
sub
stos
mov
not
jecxz
inc
dec
add
daa
jecxz
imul
xorb
hlt
jo
push
pushf
cmpb
sbb
cwtl
clc
xchg
jg
out
sbb
fprem1
fimull
xchg
add
adc
sbb
shlb
js
lret
movb
int
pop
aaa
jmp
test
mov
mov
loopne
test
xchg
xchg
jg
add
push
sbb
scas
aaa
xor
mov
stos
xchg
in
loope
xchg
add
lock
out
int3
je
mov
cmp
stos
dec
mov
in
and
andb
push
jnp
add
add
cld
xor
pop
ret
mov
mov
inc
outsl
mov
and
jae
xchg
pop
wbinvd
add
popf
adc
add
or
popf
push
popf
jb
aas
cmp
leave
pop
shlb
rol
fbld
and
sbb
mov
pop
lret
jl
mov
add
dec
inc
popf
add
pop
std
jo
cmpsb
clc
push
pop
sub
cmpsb
dec
cld
xchg
loopne
inc
lods
xor
lcall
jecxz
pop
pushl
xor
adc
adcb
mov
xor
add
lock
pop
call
nop
push
shr
mov
popf
jb
cmpsl
stos
jno
cmove
cltd
and
in
or
sbb
call
push
or
mov
fsubrl
lret
inc
xor
cmp
sti
xchg
push
xor
fmull
or
stc
sub
out
test
jbe
aam
fstpl
add
xchg
int3
and
inc
xchg
aaa
and
mov
or
je
push
push
gs
and
movsb
inc
test
lock
out
dec
dec
jbe
mov
xchg
adc
inc
addr16
pop
mov
jmp
outsb
add
iret
repz
es
xor
scas
pop
cmp
incl
jecxz
sub
inc
xor
mov
nop
jecxz
insl
lcall
cs
mov
pop
or
hlt
mov
inc
data16
sbb
aas
inc
stos
mov
pop
cltd
aam
xchg
iret
jp
jmp
mov
mov
adc
pop
repnz
fwait
push
cmp
je
sub
sbb
fistpll
scas
adc
lea
call
xchg
xchg
movlps
xchg
xchg
sahf
mov
pushf
push
fdivrs
add
mov
pop
or
lods
lock
cmp
stc
sbbb
push
pop
mov
pop
cltd
jne
daa
jecxz
or
mov
in
sub
pop
movsb
je
pop
push
xlat
xor
lcall
fdivl
fmuls
xchg
popf
sub
int
xor
lods
iret
adcb
cmp
and
sbb
sbb
mov
sbb
lret
lcall
adcl
mov
xlat
sub
push
adc
dec
push
cltd
jecxz
sub
loopne
loopne
mov
insl
mov
test
aaa
inc
out
dec
movsl
rep
adc
clc
or
movsb
xor
out
pop
inc
lahf
in
inc
push
push
insb
pop
shll
xchg
xor
jge
shll
xor
ljmp
mov
aam
pop
shlb
int
aaa
adc
add
dec
inc
mov
test
xor
insl
bound
stc
movsl
mov
xchg
xchg
push
test
das
sar
push
push
lods
rorb
daa
aas
daa
sahf
cmc
jge
mov
test
adc
or
loopne
cmp
xchg
cmp
daa
dec
jl
and
outsl
in
xchg
cmp
lcall
cmpsb
les
xor
setl
pushf
icebp
dec
das
aad
daa
ja
mov
xor
repz
push
std
jmp
outsb
pop
xor
sti
popa
lahf
push
xchg
iret
mov
jb
pop
dec
pop
and
and
lods
dec
aaa
jle
push
xor
std
and
jb
or
sbb
or
inc
jmp
stos
fcmovne
mov
loopne
sbb
daa
in
jecxz
jle
xchg
pop
adc
pusha
cmp
int
inc
aam
jge
idivl
pusha
mov
repnz
mov
loope
js
in
dec
adc
or
and
xor
out
test
orl
jb
aas
add
cwtl
or
mov
cmp
cmc
push
mov
stos
insl
mov
add
in
jo
sbb
mov
mov
jl
call
lds
pop
or
lods
inc
sti
jge
dec
in
push
xchg
frstor
ss
xchg
in
std
scas
or
sarb
jmp
and
addr16
sub
nop
cmc
movsb
jns
jmp
mulb
clc
jp
rolb
gs
sub
mov
jnp
jl
mov
mov
andl
dec
pop
or
mov
adc
jnp
dec
out
das
orb
gs
sub
leave
stos
sahf
aaa
pop
mov
jp
adc
popa
imull
inc
testb
enter
jle
dec
sbb
jns
and
aam
or
jge
xchg
xchg
xchg
xchg
testl
add
aaa
fnstcw
cld
int3
cmpsl
xchg
sbb
or
imul
aam
and
xor
arpl
and
jno
dec
out
mov
jbe
push
repnz
ljmp
pushaw
add
pop
shl
call
pop
pop
or
jnp
movsb
inc
pop
mov
mov
ret
lock
xchg
or
fwait
jecxz
test
cmp
fs
jecxz
sbb
dec
pop
add
mov
faddl
les
mov
mov
xorb
adc
fucomip
pop
ret
mov
in
mov
adc
mov
fmull
inc
imul
mov
out
xchg
pop
adc
frstor
adc
ja
shrb
mov
push
ja
mov
xor
out
out
sub
ficoms
jge
jbe
enter
int3
mov
ss
push
shr
xchg
rcr
adc
cmp
inc
push
icebp
fwait
sbb
inc
sahf
cmp
and
cmpsl
fsubl
dec
addr16
mov
push
pop
push
std
pusha
xchg
mov
cmc
fsts
in
sub
outsl
sbbb
and
sti
cmc
mov
pop
ljmp
lret
mov
daa
popf
mov
into
inc
inc
jmp
shl
andl
sub
test
cmp
nop
jle
mov
sahf
mov
int3
jecxz
mov
pop
adc
dec
xchg
out
pop
sub
pop
shll
push
rorb
mov
push
xchg
icebp
in
jae
pop
test
lock
lcall
movsb
dec
pop
xor
lahf
ret
adc
and
sbb
or
aaa
ljmp
pop
xchg
jecxz
cmp
xchg
push
add
xchg
inc
out
ret
pushf
add
stos
xchg
xlat
scas
pushf
xchg
jle
js
jp
lods
cmpsb
in
mov
test
pop
xor
sbb
fsub
mov
ljmp
movsl
fisubrl
or
lods
fs
lock
sub
aad
jb
pop
lods
dec
inc
ss
jl
lahf
jns
lods
mov
in
push
pop
push
popf
aaa
adc
lock
add
add
stos
enter
mov
push
mov
sbb
aad
mov
push
mov
cmp
sbb
or
or
and
xor
lret
add
sub
pop
inc
fbstp
cmovnp
ljmp
add
fists
inc
dec
and
mov
arpl
push
fwait
xchg
mov
popa
dec
ss
orl
lock
outsl
sbb
mov
cmp
sub
lahf
iret
jbe
in
ret
adc
daa
ljmp
adc
stos
adc
jno
shrl
data16
imul
mov
dec
ret
or
jg
and
into
jge
imul
push
repz
mov
sarl
xchg
test
lea
mov
clc
jns
dec
jo
sbb
lcall
loope
dec
divl
ret
loop
adcb
dec
push
cmp
add
inc
lds
rcr
or
fldcw
pop
adc
cwtl
stos
call
xchg
in
or
js
cmp
jns
xor
ds
push
sbb
lds
mov
lock
lcall
mov
fadds
and
mov
add
push
loope
jb
repnz
or
mov
push
sub
and
cmp
pop
subb
mov
xchg
push
adc
das
xor
cmpsb
jnp
jne
pop
int3
add
and
mov
outsb
pop
sarl
xor
inc
sahf
iret
mov
aaa
pusha
jb
sub
pop
int3
lock
xchg
mov
sub
mov
xor
arpl
ljmp
and
and
test
and
push
adc
jbe
sarl
mov
sbb
test
or
lds
adc
add
dec
mov
fnstcw
adc
push
inc
mov
mov
shrb
dec
xchg
cmc
daa
sahf
push
and
fisubl
arpl
subl
cmpsl
mov
sub
cmp
xor
leave
dec
imul
sub
or
xchg
sub
andb
sbb
imull
and
sub
out
xchg
call
cmp
and
fcomip
out
cli
in
outsb
cmpsl
fldenv
add
std
jns
lods
aam
push
push
push
push
jnp
push
inc
cmp
lds
fstpl
pop
in
jbe
int
sbb
mov
popf
repz
mov
into
pop
inc
nop
cmc
and
push
lret
scas
outsb
cli
movsl
inc
test
mov
cmc
mov
stc
mov
fstpl
aad
mov
add
cs
mov
movsl
mov
add
lods
pop
mov
mov
mov
sub
xchg
push
mov
mov
leave
mov
fcmove
jne
ja
sub
fbld
shr
add
int3
jnp
push
adc
outsl
movsb
rcrl
sbb
jge
inc
js
ds
mov
outsl
add
and
cmp
mov
aad
sar
jns
cmp
sub
xlat
inc
std
jnp
mov
repz
sbb
fwait
sub
fnsave
in
add
daa
cmp
mov
mov
ficoms
mov
addr16
jmp
cmp
jbe
inc
inc
aaa
push
mov
xchg
pop
call
stc
mov
cli
je
or
mov
adc
notl
push
cmpsl
ja
ss
sub
sub
mov
mov
pop
incb
in
xchg
push
cmp
js
gs
test
add
movsb
jge
test
repz
mov
test
xlat
in
jge
mov
cwtl
mov
lret
or
pop
sub
jg
add
push
cmp
lret
pushf
xor
cli
rcl
and
ds
sti
lds
xlat
sti
sahf
incl
cmp
divb
adc
scas
test
xchg
xchg
fmulp
pop
lds
pushf
jnp
cwtl
jg
dec
movsb
mov
or
inc
divl
lret
sbb
sbb
lret
and
jne
addl
sbb
jnp
rorl
rorl
out
ror
mov
cs
fwait
jmp
mov
sti
fstl
test
scas
add
mov
jo
ret
fsubs
or
mov
andl
cmp
fmul
sbb
jno
ss
mov
rorl
pop
pop
lret
push
sbb
sti
xchg
jae
push
mov
xchg
stos
inc
shrb
add
jg
lods
mov
dec
mov
arpl
ja
mov
out
call
mov
into
out
adc
mov
mov
ret
sbb
jg
in
fcmovnbe
inc
mov
xchg
jno
xchg
cli
mull
rcll
icebp
outsl
out
cwtl
std
inc
pop
sti
fstpt
dec
xorl
in
xchg
in
scas
pop
ljmp
ss
sbb
jo
outsb
and
cmp
or
adc
int3
fs
sbb
frstpm(287
mov
lds
lcall
mov
mov
ss
adc
fdivrp
mov
xor
dec
icebp
les
jb
clc
clc
mov
std
mov
ffree
scas
int
inc
xor
outsl
cmp
push
mov
sbb
or
pushf
cmp
popa
lahf
fs
jbe
loopne
incl
adc
hlt
divb
sbb
mov
xor
aad
push
pop
add
and
scas
ds
std
jb
push
mov
push
add
pop
dec
adc
out
arpl
sub
push
adc
icebp
sbb
mov
lea
xchg
jb
inc
sub
test
in
iret
add
sbb
rcr
repnz
and
pushf
cmp
or
cltd
pop
ret
addl
imul
cmpsb
fcomps
push
test
popa
sub
or
sub
jb
xchg
sbb
mov
nop
dec
loop
shrl
mov
xchg
or
fidivrl
mov
mov
cmp
out
mov
ror
sahf
dec
aam
addr16
bound
lods
cmp
sti
mov
je
jns
icebp
ljmp
mov
aad
dec
inc
mov
cmp
fnstenv
inc
mov
lock
pop
dec
test
ja
sub
sahf
call
jne,pn
call
pop
negb
or
dec
cld
sbb
cmp
and
or
lock
cld
mov
fiaddl
cmp
stc
lds
cld
hlt
and
mov
push
xchg
lock
sbb
call
pop
out
in
ss
daa
icebp
dec
loopne
sub
nop
xchg
jp
sub
sarl
mov
adc
orl
cld
and
jb
movsb
jb
jp
fs
lret
loop
lcall
mov
fcompl
lret
adc
in
stos
adc
out
test
insl
fistpll
out
xor
sub
loope
xor
sbb
loope
inc
popa
ljmp
stc
pop
mov
enter
push
loope
cmp
hlt
sub
lret
fdivrs
push
or
sub
bound
add
or
cmp
jbe
in
loope
inc
cmp
subl
jmp
in
jne
adcb
lea
lcall
fdivr
sbb
pop
movb
and
in
std
pushf
push
jp
sbb
sub
mov
out
xchg
push
push
xor
iret
into
pop
or
xor
mov
in
lahf
dec
lret
dec
inc
movsl
fsubrs
out
inc
push
pop
jne
fcmovbe
sub
inc
sub
adc
xor
add
out
adc
push
sbb
cmp
call
jp
add
rorb
outsb
dec
inc
arpl
jp
push
mov
add
stos
xchg
mov
dec
mov
testb
insl
sbb
into
fstpl
sbb
mov
jno
cmpsl
fwait
cmp
mov
or
inc
sbb
out
add
mov
lds
mov
or
jle,pn
and
jns
inc
fsts
mov
lret
das
inc
mov
test
je
insb
ss
mov
adc
push
andb
sub
cli
cmp
adc
xchg
push
pop
int3
push
out
add
mov
inc
push
scas
ljmp
add
mov
out
adcl
adcl
mov
pusha
ljmp
and
jbe
dec
push
push
imul
push
push
push
scas
imul
sbb
mov
pop
aam
je
xor
jae
out
movsb
adc
enter
arpl
push
sub
mulb
mov
mov
jecxz
pop
mov
std
ficoms
push
push
ret
out
push
inc
inc
and
in
jge
sub
jae
in
mov
inc
popf
cmpb
dec
fcomi
jne
subl
push
sub
sbb
in
pop
push
lock
mov
fldpi
xchg
stos
xor
test
pop
mov
mov
imul
insb
inc
cmpsb
and
imull
imul
or
mov
scas
or
sub
ds
in
imul
aam
dec
fisttpll
nop
xchg
fstpl
sti
mov
insl
lds
fucom
in
push
mov
cmp
sub
lock
add
sub
in
in
xor
jl
pop
inc
jnp
push
pusha
mov
jl
outsb
cmp
mov
leave
mov
dec
and
pop
shrb
lock
and
gs
push
out
daa
out
pop
inc
in
xchg
inc
adc
sub
push
jae
jl
int3
arpl
subl
or
xchg
sub
popf
xbegin
loop
cmp
xor
add
fwait
adc
neg
adc
lret
movsb
daa
pop
insl
jp
xlat
mov
in
xor
gs
push
mov
popw
shrb
jne
mov
jle
mov
imul
outsb
loope
mov
les
iret
dec
int3
dec
adc
push
push
aaa
and
and
cmc
es
adc
xor
and
fstpl
fmull
mov
insb
inc
aad
push
push
sbb
cmp
je
call
mov
mov
shrl
pop
pusha
xor
sahf
mov
adc
test
mov
repnz
rcll
cld
aas
adc
imul
add
adc
mov
int
sub
ret
or
pusha
jb
ljmp
pop
es
xchg
fwait
inc
dec
or
xchg
mov
cmp
cmp
test
mov
cmp
jp
jne
add
inc
xchg
xchg
lock
stc
mov
push
leave
stos
test
lods
outsl
sbb
out
adc
cmp
push
and
xor
adc
cmp
mov
fsts
clc
mov
subb
loope
cmc
mov
aad
negl
sti
loope
je
jge
mov
mov
das
mov
call
mov
inc
aam
mov
repz
xchg
enter
sub
mov
rcrb
adc
pop
mul
imul
and
rol
inc
aad
in
pop
pop
or
mov
je
fsubrs
push
pop
mov
sahf
daa
test
mov
mov
xchg
fmuls
jo
call
bound
roll
xchg
sub
ret
mov
cmpl
imul
out
push
push
lock
hlt
xchg
add
pusha
ljmp
add
popf
adc
jae
inc
mov
gs
pop
or
outsl
aad
or
leave
testl
adc
push
mov
jno
pop
cwtl
push
jae
jge
mov
lea
jmp
pop
in
and
outsb
xchg
adc
gs
add
arpl
aaa
mov
or
mov
clc
xchg
js
mov
sbb
stos
cmc
push
dec
mov
pushf
sbb
pop
add
leave
sbb
mov
mov
dec
orl
sub
js
hlt
dec
divb
cmp
mov
jbe
cmp
jno
jmp
stc
push
jmp
cmp
jo
rcrl
pop
cvtpi2ps
dec
popf
inc
int
xchg
cmp
lret
das
les
mov
popf
scas
outsl
mov
and
daa
mov
mov
pop
test
inc
mov
loop
pop
xchg
jb
scas
pop
adc
sub
add
cwtl
and
push
mov
sub
mov
push
dec
je
jo
dec
mov
outsl
cltd
or
or
xor
dec
inc
shrl
outsb
or
add
pop
adc
xor
or
pusha
outsb
fdivl
and
lods
aaa
jnp
lods
test
jbe
lock
pop
adc
mov
gs
fidivs
mov
lods
sub
inc
sbb
pop
cmc
pop
xor
push
insb
mov
pop
sub
insl
rcll
js
insb
rolb
das
and
mov
into
mov
pop
push
xchg
test
mov
mov
xchg
sub
outsb
shll
xor
push
mov
lods
lds
mov
sbb
jne
mov
xor
loop
bound
jecxz
push
pop
ror
or
fsts
ja
lcall
pusha
loop
fildll
xchg
imul
sub
mov
adc
cltd
push
jecxz
or
out
adc
add
pushf
and
loopne
arpl
stc
jns
ret
dec
testb
cmpsl
lahf
add
aam
sub
in
cmpsb
mov
dec
stc
sub
or
sbb
cli
sbb
push
lcall
add
push
lcall
icebp
jnp
inc
movb
shrb
outsl
lret
or
sar
cmp
cli
stos
gs
push
outsb
addb
push
rcl
add
lret
ds
cmc
sub
ljmp
cltd
mov
jne
lds
cld
mov
std
mov
jne
out
add
dec
fs
jns
cmp
jnp
jo
sub
sbb
in
jp
push
sub
dec
andl
xor
filds
sub
inc
leave
es
cmpl
stos
push
xor
sbb
mov
add
sub
fcom
ja
out
adc
adc
outsb
xchg
fcomp
stos
push
push
lock
sub
pop
and
mov
or
mov
add
pop
gs
movsb
mov
adc
and
push
outsb
cltd
xor
in
add
push
adc
jmp
in
cmp
jns
xchg
std
sub
xchg
jle
cmc
cmc
lret
xor
or
ret
cmp
mov
push
adc
cmpb
scas
dec
add
push
loope
sub
stos
push
push
cli
sub
test
sahf
fisubrs
cmp
mov
fldl
adc
push
das
mov
or
cmp
lods
loope
fsts
mov
xchg
call
stos
je
cmp
insl
sbb
add
scas
clc
js
cmp
sub
or
addr16
cmp
outsl
mov
je
mov
in
movsb
popa
aaa
int
mov
push
popa
sub
mov
mov
pop
pushl
fucomip
jp
mov
jns
imul
mov
dec
scas
sub
mov
gs
push
data16
xchg
pop
ja
iret
popa
sub
adc
movsl
or
mov
icebp
jns
sbb
data16
push
dec
adc
mov
rorb
xor
xchg
std
mov
sti
dec
push
cmp
in
es
test
mov
pop
and
push
and
fidivl
sbb
ss
mov
xchg
out
mov
inc
mov
cmpsb
ret
dec
ja
fldln2
lds
cmp
pop
rcrl
pop
or
in
jg
and
push
adc
or
ret
movsb
imul
es
lahf
pop
cltd
adc
inc
enter
xchg
jb
inc
leave
xor
dec
lock
xchg
rcrb
or
jmp
xchg
pushfw
dec
jne
xchg
jno
or
movsl
and
cld
mov
sub
adc
iret
lods
in
sub
and
fsts
xchg
xlat
dec
xor
ficoms
sbb
adc
mov
cmp
push
and
in
mov
jno
ljmp
jb
cwtl
fadds
and
fldenv
mov
testl
xlat
inc
push
push
add
fs
or
add
mov
mov
jg
push
std
jg
mov
mov
andb
adcb
mov
pop
aad
js
sbb
clc
shll
loopne
xchg
repz
daa
out
jbe
orb
push
push
das
lret
outsl
xor
and
mov
mov
enter
inc
in
sub
or
mov
mov
add
imul
clc
pavgb
dec
dec
mov
test
imul
mov
lret
loopne
in
pop
lea
inc
pusha
sub
imul
pop
xor
pusha
into
adc
mov
dec
repz
cmpsl
jg
int3
mov
fsub
sbb
mov
push
push
ret
push
cmpsl
stc
lahf
rcll
sbb
push
pop
mov
add
cmp
leave
cltd
slwpcb
cmp
sub
dec
lods
movsl
mov
cmp
push
mov
push
mov
cs
stos
inc
push
mov
cltd
test
push
pop
mov
js
lea
stc
hlt
bound
adc
test
roll
lods
adc
or
cmp
loope
push
or
imul
push
and
and
mov
mov
jnp
pop
into
ja
bound
add
fsts
mov
or
nop
jno
lea
lret
inc
das
out
sahf
fs
xchg
jl
lcall
repnz
mov
mov
mov
repnz
mov
push
xchg
movsl
aaa
push
add
test
add
fcomps
stos
rorb
jecxz
pop
xlat
out
fwait
lret
shr
jno
fsubs
jp
ffreep
jne
jbe
cmp
popa
sbb
stos
in
faddp
insb
arpl
lret
imul
repz
mov
popf
rorb
lock
cmpsl
push
or
out
in
and
jb
pushf
sbbb
push
icebp
or
fdivrs
mov
xlat
mov
insb
mov
push
neg
sbb
push
xor
mulb
inc
aas
sbb
mov
cs
xor
xchg
adc
lahf
cs
push
repnz
or
test
cmpb
mov
ret
out
ret
scas
lods
jae
inc
test
pushf
xchg
push
rolb
leave
icebp
mov
jecxz
mov
sub
dec
dec
adc
pop
ds
jge
add
sub
popf
sbb
fcoms
sti
scas
sbbl
stos
add
loopne
dec
orl
orb
mov
jp
push
aad
add
cmpb
xchg
jmp
sbb
push
dec
gs
enter
rorl
jno
xchg
frstor
pop
addl
dec
mov
ja
ret
aam
lret
loopne
cltd
lea
jb
in
and
call
mov
pop
int3
fcoml
push
lock
or
movsb
gs
out
loopne
xor
pop
add
adc
xchg
test
jnp
out
inc
dec
flds
outsl
sub
lods
and
add
dec
testl
jne
dec
xor
loope
popf
mov
jne
push
xlat
ljmp
mov
mov
jl
inc
cs
xchg
out
mov
das
add
iret
out
push
mov
scas
adc
stos
rolb
aad
nop
lret
cli
outsl
cltd
rep
sub
orb
cmp
sbb
hlt
popa
cli
jp
adc
insl
adc
push
jl
call
sub
inc
sti
mov
lods
test
jo
adc
ljmp
outsb
sahf
add
roll
das
int3
lea
inc
dec
das
imul
pop
mov
mov
and
xchg
cld
insl
mov
arpl
xor
loopne
push
test
pop
xor
cmp
repz
fimuls
fisubl
mov
push
leave
pop
xchg
mov
or
lcall
fstpt
addr16
stc
add
and
cmp
fwait
xchg
shlb
ds
repz
xchg
sub
iret
push
jnp
gs
outsl
insl
cmpsb
rcrl
jge
mov
adc
push
stc
sbb
mov
lds
les
data16
sub
jge
xchg
sub
sub
cld
iret
mov
sahf
jg
push
xor
mov
sub
mov
test
pop
aad
aad
cs
es
lds
mov
outsl
dec
sub
hlt
lock
int
pop
and
je
icebp
dec
fdivrp
mov
iret
sub
pop
test
lret
das
push
in
ficomps
cmp
jle
and
pop
out
in
sbbl
jo
ja
cli
sub
fs
arpl
jl
cmp
mov
cmpsb
push
add
cwtl
stos
leave
xchg
xchg
push
es
lcall
mov
filds
in
popa
push
pushf
int
adc
push
out
dec
outsb
pop
hlt
js
ljmp
gs
dec
xchg
xchg
aaa
ret
aam
pop
push
dec
stc
das
jp
sahf
movsl
jle
push
daa
sbb
mov
xchg
in
pop
sbb
fistpll
je
jp
sbb
in
iret
mov
lods
mov
clc
dec
dec
or
cmp
mov
mov
adc
lahf
pop
adc
lods
cmp
pop
pop
jp
in
jp
and
clc
cs
cmc
into
movsl
shrl
pushf
push
mov
test
hlt
imull
sub
mov
and
or
add
inc
push
pop
ficomps
and
lahf
iret
xor
fwait
sbb
jno
js
add
mov
lods
mov
lods
jl
pop
push
sbb
rorb
dec
xchg
mov
sti
adc
push
xchg
das
xchg
sbb
mov
cwtl
adc
ljmp
mov
xchg
push
std
add
inc
imul
xor
imul
jle
xor
jae
adc
insb
sti
out
lock
call
sar
mov
jbe
addr16
lds
fbld
mov
xchg
mov
int
xor
shrl
xchg
push
mov
popa
mov
jmp
pop
shl
mov
jmp
adc
scas
fs
leave
mov
shl
or
xchg
test
add
sbb
push
xchg
xor
dec
jp
inc
push
inc
clc
push
shl
inc
fwait
aas
push
push
sub
or
xchg
mov
mov
lock
jecxz
mov
lock
mov
mov
aaa
jmp
xor
mov
cltd
sahf
insl
imul
cmp
aas
xchg
fnstcw
mov
scas
pop
push
dec
popf
jg
mov
les
popf
repz
mov
jbe
mov
xchg
stos
ret
cmp
roll
les
cli
xchg
cmp
jmp
sbb
inc
filds
xchg
sub
movsb
push
mov
jg
lods
adc
add
addr16
or
pop
es
push
movsb
popa
call
adc
mov
or
mov
sub
gs
and
xchg
inc
test
dec
lea
sub
jns
push
or
test
mov
pop
pop
pushf
pusha
out
cmp
mov
xchg
push
cld
popf
fildl
out
xchg
mov
xchg
add
sbb
cs
xchg
xchg
sbb
pop
cmc
lret
nop
lahf
or
notl
ret
dec
push
push
addl
and
sbb
js
jnp
mov
leave
sub
mov
movsl
mov
js
dec
and
pop
mov
addl
xor
les
xor
xchg
call
xor
notl
push
sub
xchg
sbb
sub
push
repnz
mov
jns
pop
xor
sub
out
inc
mov
test
pop
stos
stos
imul
in
add
fisttpll
dec
xchg
mov
into
inc
push
imul
jb
sub
loope
fidivrl
cmp
mov
in
mov
pop
inc
and
dec
movsb
pop
lds
dec
mov
scas
int
out
popa
inc
out
test
fisttps
sbb
jo,pn
insb
adc
mov
jnp
loop
jns
ds
aam
sbb
iret
inc
push
mov
mov
mov
call
insl
xchg
push
cmp
add
int3
push
mov
mov
lret
les
and
nop
dec
xchg
jne
std
rep
xor
les
pusha
or
fiadds
cltd
xor
ficompl
mov
clc
push
shl
movsb
xchg
mov
shrb
sub
shrb
bound
push
xchg
inc
lods
in
jmp
inc
in
addl
pop
into
add
js
adc
sbb
movsb
push
andb
and
mov
inc
fwait
scas
lods
stc
fildl
add
cmp
pop
and
out
xchg
xchg
push
rcrb
add
add
out
pop
aas
ret
jne
in
jo
lret
ret
daa
sbb
ds
mov
aam
pushf
loopne
movsb
and
mov
xchg
jle
jnp
mov
inc
xchg
cmpsb
insl
pop
add
pop
aas
jmp
fcmovnu
mov
fcoms
pusha
pop
mov
jp
push
sub
insb
sbb
jl
arpl
mov
hlt
inc
adc
mov
lods
push
push
push
jl
jmp
pop
jbe
dec
and
xlat
ljmp
pusha
push
add
test
xchg
pop
out
and
cwtl
fstl
ljmp
sarl
popf
lock
sub
mov
fimull
ds
jle
mov
cs
pop
jne
int
ffree
mov
jecxz
mov
lcall
jb
or
cmp
cmp
repz
lret
sti
push
dec
rolb
mov
inc
or
fs
icebp
lods
xchg
fdivs
push
cs
inc
xchg
mov
pop
inc
mov
lods
xchg
mov
call
mov
xchg
or
cmp
cmpsl
xor
lret
imul
jecxz
pop
fists
daa
sub
imul
out
push
loopne
pop
sarb
xchg
or
adc
popa
xchg
add
mov
fmull
xchg
lds
fidivrs
jns
and
sub
popa
or
sbb
or
cmpsl
dec
mov
and
add
sub
pop
and
push
adc
adc
test
popa
inc
mov
sub
dec
mov
pop
push
pop
jmp
push
popl
lret
shrb
push
rcl
cmpsb
fcoms
mov
rcr
lods
pop
dec
loopne
jle
std
push
or
jbe
jns
out
aas
push
jmp
rolb
mov
dec
cmp
ljmp
xchg
test
mov
imul
lret
mov
ror
pop
outsl
mov
xchg
pop
sar
iret
xor
fsubrs
mov
addr16
mov
and
mov
mov
movsb
leave
mov
sub
jmp
or
hlt
inc
adc
sub
imulb
xor
ret
outsb
mov
addr16
mov
dec
xchg
sbb
lret
bound
mov
xchg
pop
push
xor
xlat
inc
ds
test
fwait
xchg
in
jp
arpl
fldt
push
adc
in
loope
mov
push
shlb
inc
jo
pusha
out
or
mov
jae
add
aam
dec
mov
ljmp
pop
data16
pop
inc
cmc
add
repnz
cmpsl
repnz
or
pop
xor
mov
add
loopne
jmp
xchg
leave
outsl
add
out
cmp
xchg
incb
pop
and
inc
mov
xchg
sahf
aam
sbbl
inc
movsb
sub
cs
sbb
into
sub
add
leave
subb
outsb
fwait
cmp
sahf
jmp
aam
inc
leave
rcr
out
pop
sarb
xchg
pop
in
sbb
cltd
call
pop
out
lock
inc
mov
jmp
xchg
nop
in
in
je
add
xor
add
push
test
sbb
dec
adc
rolb
test
fmull
inc
jns
cmp
ret
out
out
js
int
insl
ljmp
dec
sub
xor
sub
shl
test
cmc
mov
adc
ljmp
daa
stc
lahf
stos
mov
sarl
gs
lahf
movsb
push
cmp
movl
movsb
mov
std
pushf
cmpl
ljmp
inc
ret
stc
inc
sub
xchg
inc
pop
inc
or
popa
fists
cmc
pop
xchg
loope
cld
push
mov
pusha
mov
cld
jp
arpl
jns
std
sti
ljmp
xchg
sub
in
add
jl
xor
pusha
dec
test
jno
pop
add
jg
data16
mov
xchg
cltd
out
js
dec
xchg
gs
adc
pop
inc
popa
lahf
mov
aaa
cwtl
pusha
cmp
aad
add
inc
mov
inc
shl
dec
cltd
hlt
cmc
push
insb
sub
call
add
fcmovnu
push
inc
xor
jecxz
jae
mov
rcrl
sbb
in
push
inc
pushf
xor
pushf
repnz
stc
push
andl
imul
dec
mov
mov
hlt
mov
jnp
mov
xor
inc
xchg
jnp
inc
xor
mov
hlt
xor
mov
push
add
cmp
aad
imul
cmp
cmpsl
std
inc
mov
leave
xchg
and
mov
adc
test
lods
and
xchg
or
stc
xor
repz
xor
pop
adc
pop
adc
add
lret
ss
xor
ss
or
push
jmp
inc
sbb
stc
mov
out
rorb
and
imul
xorl
out
dec
dec
orb
bound
js
jbe
xchg
fdiv
push
leave
sbb
adc
rorb
iret
adcl
and
sub
ficoml
pop
push
fcomip
pop
xchg
int
jp
loope
stos
adc
xor
and
psubq
mov
pop
daa
arpl
call
jg
incb
jno
add
pusha
jle
js
jbe
add
cmp
xchg
xor
mov
es
cs
mov
inc
mov
ljmp
jae
fldt
xorl
add
or
fadds
xchg
shlb
mov
adcb
push
int3
int3
rcll
test
push
std
sarl
sbb
sbb
xor
mov
movsb
scas
fldt
dec
aam
xor
int
aas
mov
mov
ret
jecxz
icebp
dec
xchg
iret
pop
outsl
ja
add
and
dec
movb
pop
xor
stos
push
sahf
sahf
sub
mov
xor
mov
push
pushf
add
in
mov
hlt
lahf
out
lods
jmp
test
push
push
stos
xor
add
or
pop
pop
andb
cmpb
stos
xchg
lods
outsb
mov
dec
jl
sub
call
xor
inc
and
push
in
sub
inc
pop
xchg
inc
scas
pop
adc
ret
mov
loopne
cmp
popf
jmp
fsts
addr16
rorl
mov
test
std
cli
cltd
mov
xchg
pop
popf
sub
addr16
pusha
arpl
dec
push
push
or
outsb
mov
in
or
lea
mov
xlat
test
mov
xor
es
in
mov
addr16
loope
jecxz
jg
das
push
je
sahf
in
movd
cmp
mov
lock
xchg
andb
push
push
push
or
pop
dec
addr16
jecxz
push
mov
arpl
in
xchg
mov
int3
iret
out
imul
cmp
out
or
mov
insl
mov
add
inc
pop
out
jo
jmp
xchg
inc
xor
in
cmpsl
sahf
rolb
sbb
jno
leave
push
shr
mov
pop
mov
mov
sub
fdivl
js
cmp
lods
aad
icebp
xor
fisttps
inc
sbbl
xor
repnz
mov
mov
xor
das
inc
stos
mov
jl
mov
jmp
test
fs
movsb
shrl
std
pop
subl
data16
aad
mov
mov
jbe
xor
xorb
mov
mov
and
dec
pusha
prefetch
xchg
dec
and
mov
pop
jae
roll
cs
inc
imul
pop
sbb
iret
dec
cwtl
bound
aad
cmc
and
shlb
pusha
in
test
inc
jg
cmp
pop
xchg
and
or
mov
add
hlt
aad
xlat
jmp
push
arpl
test
je
and
dec
jo
mov
and
dec
lahf
add
rclb
fldcw
pusha
inc
icebp
xor
aad
icebp
js
or
test
dec
rorb
test
mov
dec
xchg
out
fwait
mov
std
test
pop
xor
negl
cs
xor
ret
loop
in
dec
xor
and
enter
and
ljmp
pop
push
ljmp
sub
adc
fists
dec
xchg
inc
jb
cmp
mov
pusha
fdivrs
pop
rcr
cmpsb
adc
or
cmpsb
mov
jbe
or
jb
add
jnp
scas
test
rolb
pop
push
mov
sbb
dec
stos
pusha
sbb
mov
inc
and
pop
xor
pop
loop
shlb
add
xlat
les
jmp
ss
add
mov
testb
sub
pop
adc
mov
sbb
dec
arpl
cmpsb
test
fadds
pop
push
xor
push
cmp
cli
test
inc
mov
push
dec
jg
jns
mov
cmpsb
mov
push
adc
aaa
cmpsb
fildl
xor
shlb
int
sbb
out
enter
lret
jmp
hlt
mov
adc
push
mov
loopne
call
adc
gs
out
add
jl
mov
stos
in
lea
sub
add
adc
add
in
lcall
mov
gs
test
or
fidivrs
jg
cli
pop
inc
scas
or
mov
andb
sub
or
sti
jle
xchg
jne
jecxz
add
adc
out
pop
push
cli
es
aam
cmp
ljmp
inc
lea
dec
push
jl
or
pop
xchg
xchg
dec
ds
xchg
or
mov
icebp
ds
sub
xchg
mov
mov
cmpsl
xchg
sbb
lret
inc
enter
ret
dec
jns
mov
shll
pop
add
mov
push
dec
scas
divb
jno
mov
repz
aaa
les
in
inc
dec
jne
mov
enter
out
insl
cltd
adc
cli
rolb
pop
call
shl
icebp
sbb
adc
dec
inc
imul
gs
lods
ljmp
mov
lret
or
popf
xor
mov
pop
xor
inc
popf
je
scas
fs
arpl
cmpsl
test
adc
push
and
dec
and
push
cmp
leave
sub
gs
lock
jnp
cmc
lret
cmp
shrb
leave
in
pushf
int3
pop
add
pop
or
test
pop
xor
adc
mov
ljmp
js
and
mov
adc
xor
pop
fisubl
sbb
in
pop
data16
pop
aam
addl
loop
pop
mov
sub
sub
adc
mov
sbb
fwait
mov
xchg
incl
inc
sub
pusha
jnp
fstl
movsb
adc
lock
test
cmpsl
and
insl
pop
loope
adc
sbb
xchg
jg,pn
jle
mov
mov
xchg
fisubl
aam
in
xchg
cmp
int
pusha
daa
pop
fisubs
fbld
mov
clc
out
inc
and
leave
push
and
repnz
mov
pushl
shrl
add
daa
xor
movsl
cwtl
jae
push
xor
xchg
in
lret
scas
dec
ljmp
mov
or
pop
idivb
adc
xchg
pop
jp
hlt
cs
mov
dec
mov
pop
sbb
dec
subb
add
faddl
xchg
mov
mov
decb
inc
mov
sbb
push
mov
mov
call
mov
mov
mov
or
orb
inc
test
idivl
rolb
scas
repnz
jnp
ret
ds
cli
rorl
pop
int
push
aam
hlt
xchg
fmull
mov
aad
dec
or
test
and
imul
fcompl
sti
xchg
mov
jno
test
aam
jecxz
add
jne
out
push
imul
xchg
pop
push
and
ret
push
out
lret
or
xchg
dec
mov
popf
mov
adc
cmp
adc
push
gs
call
push
mov
ss
pusha
or
or
dec
sbb
or
pushf
jmp
ss
pop
call
push
inc
pop
arpl
adcl
aaa
inc
daa
mov
jp
je
mov
test
je
jbe
shll
or
sbb
xchg
jo
cmp
sti
fimull
push
les
jnp
pop
icebp
scas
add
jmp
push
loop
sbb
inc
call
sbb
and
pop
in
scas
fmuls
sub
jno
add
scas
sub
pusha
call
fs
sub
out
or
sbb
mov
test
mov
mov
mov
jmp
push
adc
loop
aaa
cli
jae
cmp
mov
dec
aam
sahf
or
mov
jb
decb
mov
sti
lds
gs
mov
andb
repnz
pop
orl
out
push
stos
cmp
push
imul
nop
mov
push
insb
adc
jae
sti
iret
pop
jmp
filds
mov
push
sbb
test
dec
mov
dec
in
loopne
fs
mov
mov
stos
push
jg
lods
aad
bound
test
pop
repz
jo
mov
sbb
mov
lea
mov
jae
clc
dec
data16
mov
repnz
or
mov
cwtl
cmpl
mov
fsubs
mov
xchg
push
cwtl
adc
repz
popa
dec
data16
clc
out
and
in
jae
mov
pop
mov
push
jp
jns
movsl
mov
dec
ja
fs
or
jbe
or
cld
jmp
aas
lcall
mov
adc
fsubrl
inc
sub
cmp
jae
ret
sub
mov
call
ret
shlb
fwait
orb
sub
outsb
pop
test
sbb
std
push
dec
mov
in
cmp
xchg
pop
sbb
xor
mov
subb
sarl
ret
pop
jle
ja
daa
imul
jmp
jl
inc
stos
pop
rcl
sti
sbb
push
fstpt
sub
push
mov
sbb
popf
cmc
out
jb
adc
into
out
xchg
in
negb
in
movsl
icebp
test
cli
or
xchg
jno
mov
xorl
cmpsb
lea
hlt
jno
les
add
mov
adc
xchg
push
jecxz
clc
jg
enter
repnz
je,pt
lea
nop
push
inc
gs
xor
cmp
or
sub
mov
paddq
lret
mov
inc
mov
jnp
sbb
mov
dec
sti
out
xor
insl
pop
sbb
int
fucompp
xor
add
fsubrl
aad
popa
dec
es
inc
or
and
cmp
inc
in
sti
gs
xchg
imul
mov
mov
dec
sbb
cmpsl
sbb
xchg
cmp
sbb
sti
inc
in
shrl
push
mov
es
out
push
paddw
es
push
sub
test
js
ret
sub
mov
xchg
sbb
mov
lea
and
sti
push
xchg
fistps
cmp
adc
pop
cs
mov
fisubrs
xor
or
cmc
dec
xchg
xor
repz
sub
jge
fmuls
adc
adc
daa
into
add
les
jnp
xchg
push
repz
pop
div
add
pop
sbb
cmp
mov
xor
or
xchg
popf
fs
sbb
dec
inc
mov
dec
jle
roll
fstl
xchg
testl
mov
dec
mov
or
int3
push
stos
scas
adcl
mov
dec
pop
sbb
popf
or
mov
sahf
xchg
scas
add
aas
sub
mov
fadd
mov
lret
icebp
jecxz
test
lods
test
scas
add
fimuls
icebp
mov
iret
mov
mov
push
sub
lods
push
jo
aam
fcmovb
addb
lds
cli
outsl
pop
xchg
lret
xchg
adc
adc
pop
push
push
stos
cltd
mov
xor
leave
ficomps
xchg
add
inc
pop
dec
cmp
push
fxch
inc
add
stc
gs
lret
sbb
add
fwait
and
pop
push
in
inc
sahf
ljmp
sbb
push
in
add
in
test
jge
xchg
cltd
pop
and
sub
test
stc
and
shl
aas
add
nop
mov
jmp
sti
pop
lods
and
mov
pop
mov
mov
sbb
js
aaa
das
jp,pt
mov
and
pusha
fmulp
js
test
loop
and
and
fists
and
sahf
ficompl
repnz
cmp
jl
ret
push
fnsave
xor
sahf
pop
ja
mov
nop
mov
xor
xor
ret
inc
mov
iret
in
push
loope
jg
test
push
sub
push
fnsave
in
jmp
xor
test
fsubrl
data16
lret
ret
pop
std
mov
mov
push
dec
push
pop
inc
cmp
cmpsl
scas
cmp
or
lahf
inc
cmp
jno
imul
leave
iret
scas
and
popf
push
adc
insl
jl
scas
out
imul
clc
in
mov
pushf
mov
fdivrs
dec
or
pop
iret
cwtl
sub
push
sub
in
xchg
add
and
adc
movsb
roll
shl
lds
data16
lret
mov
or
aad
xchg
jo
pop
jmp
mov
dec
test
jmp
insb
push
nop
sub
ljmp
insl
inc
or
jmp
sbb
dec
sbb
aas
lcall
push
into
out
or
mov
andb
imul
mov
cli
mov
push
jle
scas
clc
das
hlt
pushf
mov
popf
loopne
push
das
in
movb
out
sub
repnz
add
hlt
cmpl
push
ficoms
mov
cmp
mov
dec
push
sbb
in
sbbl
clc
lock
jle
in
decl
cmp
loop
cmpsb
xor
inc
cmp
in
adc
inc
roll
insb
pop
jb
jo
pusha
adc
ror
sbb
in
push
add
cmp
sub
cmp
add
jo
call
xchg
fnstcw
and
pop
mov
insl
inc
dec
jmp
push
fmul
mov
mov
adc
imul
shrl
outsl
pop
outsb
xor
cmp
lret
xchg
out
push
mov
mov
pop
mov
aad
test
dec
nop
mov
stos
std
adc
out
sub
mov
pop
adc
hlt
mov
sub
adc
xchg
popf
fucomp
int3
mov
in
push
pop
dec
sbb
mov
test
scas
push
or
xor
in
pop
mov
adc
cltd
add
orb
or
xchg
ds
xor
add
and
stos
pop
in
mov
fsubs
stos
ret
cld
pop
dec
push
pop
adc
add
xchg
ja
xor
mov
sub
inc
test
testl
mov
cmc
adc
rclb
mov
hlt
mov
sub
test
jecxz
sbb
inc
xor
popf
frndint
mov
xor
mov
test
mov
push
in
mov
pop
mov
inc
dec
jge
popf
lcall
popf
out
cmp
aaa
sub
add
int3
fwait
xor
int
xchg
sti
mov
testb
push
ss
repnz
js
lods
inc
inc
daa
orb
cmpsl
lahf
mov
mov
leave
jne
mov
jno
stos
fiadds
rcrl
mov
pop
sbb
std
push
imul
mov
or
sarl
pop
mov
xor
sub
sub
mov
push
or
fildll
pop
out
xadd
gs
xor
pop
sbb
mov
sarb
jl
mov
push
gs
or
or
dec
cld
inc
pop
insb
repnz
dec
out
out
mov
mov
sahf
adc
and
mov
mov
mov
mov
cmpsb
xchg
nop
or
ds
push
or
pop
testl
cs
adc
out
push
inc
testb
add
adc
shrl
std
lods
ds
shll
cwtl
cmp
cs
pop
sub
and
jl
loopne
jp
adc
mov
loop
mov
inc
into
call
rcrb
adc
iret
pop
xor
xor
mov
mov
add
mov
pop
outsl
repnz
ret
sub
lea
xor
std
adc
dec
movsb
shrl
jle
stos
add
out
jg
cld
cmp
jle
pop
cmpsb
cmp
sti
sbb
push
sub
dec
movb
arpl
mov
aaa
mov
jg
lods
repz
bound
mov
aas
sbb
sbb
mov
je
fisubl
sub
stos
inc
arpl
push
sub
pop
movnti
js
xchg
jb
jecxz
dec
and
enter
jp
ds
xchg
popa
hlt
in
push
cltd
cmp
mov
mov
mov
and
insb
fnsave
scas
jg
add
popf
mov
pop
mov
aam
sti
ja
aad
lret
movsb
mov
or
mov
fistpll
ret
fadds
push
jge
cs
fwait
jb
and
inc
pop
add
jl
mov
enter
addb
shll
cmc
call
out
hlt
ret
mov
data16
popf
mov
stos
movsb
or
pop
nop
insl
add
mov
int
insl
or
pop
mov
sbb
movsl
jge
insb
andb
inc
or
mov
cmp
pop
jae
and
pop
jle
in
sbb
popa
adc
push
ret
test
nop
mov
mov
daa
dec
in
sbb
cmp
or
mov
jg
hlt
mov
mov
pop
pop
xchg
pop
loopne
or
push
inc
popf
jmp
fistpl
cmp
fsubrp
gs
mov
or
or
pusha
mov
enter
mov
out
pop
in
adc
inc
test
jns
in
aad
sub
mov
xchg
neg
mov
loop
pop
rcrb
imul
fidivrs
loope
jp
xor
push
orl
adcl
insl
dec
inc
push
ja
fsts
call
shlb
data16
fildl
loopne
pop
call
sub
lcall
into
push
xchg
clc
mov
dec
lds
hlt
mov
sub
ds
dec
sbb
sti
popf
mov
sub
mov
cwtl
push
mov
jmp
fdivp
loope
test
xor
push
dec
inc
aas
imul
icebp
sbb
aaa
sti
mov
jae
sbb
lcall
sbb
das
fst
xchg
shrl
movsb
stc
mov
cmpsb
inc
call
mov
popa
jne
lret
and
inc
bound
pop
inc
mov
push
std
fcompl
cmpsb
in
stc
ljmp
ja,pn
push
je
push
mov
inc
mov
adcl
push
mov
sub
lea
aam
push
sti
mov
add
test
jp
dec
stos
add
ss
test
into
sbb
pop
clc
jl
add
cli
sti
sub
xchg
jmp
test
lock
inc
stc
insl
in
jno
jb
jb
and
and
fwait
inc
insb
xchg
sub
mov
or
xor
gs
roll
in
add
push
icebp
jl
stos
mov
jg
push
int
mov
out
xchg
imul
inc
jbe
bsf
jmp
jnp
into
mov
in
jbe
sbb
and
fldl
cmp
adc
push
pop
jmp
in
dec
iret
jno
movsb
ror
std
cmp
dec
cltd
test
sbb
xor
xor
add
call
xor
imul
dec
mov
mov
xor
leave
mov
mov
adc
sarb
push
pop
push
mov
mov
push
pop
mov
fptan
insb
testb
data16
stos
mov
cmp
adc
shlb
or
jg
stos
inc
out
jg
mov
iret
dec
das
pop
mov
cmp
aaa
push
pop
mov
jp
jl
add
xchg
aaa
push
ljmp
in
adc
xor
mov
ret
cmp
and
out
push
jno
push
iret
sti
push
inc
enter
jle
push
jmp
xchg
mov
xorb
cwtl
outsl
arpl
sbb
fdivp
sbb
jbe
mov
sbb
xor
push
imul
gs
ficoms
xor
insl
movsl
cld
sbb
scas
jmp
pop
cmp
jecxz
xor
pop
lock
push
lret
or
add
cmc
movsl
mov
dec
fwait
pop
outsb
test
lret
aaa
leave
cmpsb
nop
adc
cmpsl
sbb
out
inc
adc
inc
mov
sub
jb
push
pop
inc
leave
in
xor
jb
mov
inc
loop
pop
jae
and
outsb
cmp
mov
mov
in
lods
xor
outsb
cmp
test
sahf
dec
jmp
cld
nop
repz
mov
nop
int
and
fwait
add
xor
sub
add
adc
xor
aad
leave
push
pop
add
inc
movsb
mov
ja
hlt
inc
dec
enter
aaa
out
mov
mov
sbb
loope
out
jmp
pop
push
cmpsl
push
sub
mov
mov
cwtl
into
das
jg
push
and
xor
shrb
insb
sbb
sti
dec
sub
mov
push
dec
mov
daa
pop
pop
cwtl
mov
pop
aad
inc
out
lret
fsubl
cld
add
stos
xchg
cmp
fs
mov
sbb
mov
or
cld
popf
mov
dec
cmpsl
cld
dec
jle
jmp
int3
mov
push
push
je
xchg
jno
sbb
cs
push
data16
xor
xor
cmpsb
push
repnz
jg
push
jnp
xchg
ret
ret
jb
inc
jne
leave
scas
adc
arpl
lret
inc
and
mov
cld
jg
cmp
or
push
fstl
mov
test
xchg
xor
jp
andb
inc
insb
fadds
outsb
aas
xor
push
mov
sti
popa
dec
stos
movsb
adc
call
out
icebp
sub
push
add
push
jo
mov
jo
icebp
insl
jmp
sahf
fwait
rcl
xor
pushl
jnp
xor
jns
or
add
adc
mov
jns
sub
xlat
call
xchg
jl
addr16
push
adcb
sbb
cwtl
and
pop
loope
fsub
test
loop
insl
xlat
push
add
xlat
mov
loope
data16
out
scas
cmpsb
lahf
cmpsl
loopne
lret
and
mov
jne
mov
push
aas
dec
inc
inc
jo
jmp
xchg
ret
xor
mov
fnstsw
add
mov
jne
cld
cs
sbb
dec
aas
imul
pop
mov
push
jle
cmpsb
loope
adcl
pop
sub
adc
icebp
in
adc
rcrb
and
frndint
sbb
jns
add
mov
fsubrl
mov
inc
xor
jo
mov
dec
pop
mov
lock
and
xchg
mov
pop
sbb
jmp
sbb
xor
lds
add
stc
adc
fidivs
xor
int3
fdivrs
mov
dec
pushf
mov
add
mov
repnz
jae
insl
sub
andb
jmp
aam
inc
dec
cwtl
roll
inc
mov
stos
shll
call
pop
xor
add
push
add
rorb
data16
fcmove
or
push
dec
push
mov
enter
fdivs
adc
aaa
lock
pop
pop
xlat
rolb
lret
pop
add
mov
mov
inc
daa
sbb
cmp
daa
pop
add
cmp
in
inc
ljmp
int3
mov
imulb
negl
cmp
xor
push
es
shrl
mov
hlt
or
popa
and
adc
cmp
jo
inc
push
daa
jnp
cmc
stc
mov
mov
popf
iret
pop
lds
jle
lcall
stos
push
movsb
jo
outsl
adc
push
lock
jl
test
dec
sub
add
out
fs
or
cmp
pop
xchg
test
xor
add
push
dec
push
scas
aam
arpl
and
fwait
test
xchg
addb
pop
popf
popf
in
or
into
cmp
jl
push
sub
ja
xchg
popf
packuswb
jb
xor
andb
jmp
in
jbe
xchg
adc
shrl
pop
and
inc
mov
popf
out
mov
fcomps
pop
xchg
dec
pop
cmp
inc
xor
sub
ret
add
pop
and
pushf
sub
fldenv
mov
pop
repz
and
cld
mov
mov
out
cmpsl
sub
sbb
popa
push
adc
in
push
jecxz
jb
shl
sub
mov
mov
push
mov
push
insb
vxorps
mov
and
and
mov
iret
add
aas
inc
out
repz
jno
idivl
mov
push
lcall
jge
loop
loop
pushf
inc
mov
cmp
mov
loopne
shlb
add
push
stos
dec
or
xor
adc
cmp
dec
jl
addb
sbb
xchg
das
and
cmp
test
fdivrs
lret
jg
sbb
notb
pop
movups
imul
stos
mov
fcoms
enter
adc
sub
xor
lock
cmp
dec
leave
cltd
lahf
aad
adc
arpl
inc
call
in
xchg
mov
xor
sub
mov
xor
push
imul
cmp
mov
xchg
inc
or
xor
pusha
mov
or
pop
fisubs
stos
sti
mov
xor
mov
push
or
and
adc
mov
xor
mov
pop
test
mov
xchg
mov
fwait
push
add
fwait
int3
cwtl
xchg
aas
push
movsl
sub
int3
cmp
pop
push
or
or
aad
sbb
push
cmp
cmp
sbb
jnp
or
cmp
fwait
imul
mov
pop
popf
jge
and
mov
mov
out
aas
pop
mov
popf
mov
out
mov
lahf
repnz
into
cmpsl
xchg
inc
scas
cs
adc
pop
mov
xchg
jg
sub
mov
inc
lcall
shlb
cmp
loope
movsb
fimuls
out
loop
or
jmp
divb
stc
enter
cmc
shrl
sbb
popa
push
enter
mov
pop
pop
mov
push
pop
ljmp
lahf
mov
sbb
stos
repnz
mov
dec
test
or
std
cmp
jae
aam
stc
in
mov
repz
loope
jbe
sahf
sbb
cmp
cmp
cmpsb
ficompl
fsubl
divb
scas
fldcw
pushf
jne
add
pop
mov
cmp
pop
gs
adc
jnp
push
lock
add
adc
add
pop
shl
inc
fs
sarl
mov
out
xor
or
lcall
xchg
dec
inc
and
push
lahf
push
push
xchg
fsubrl
xacquire
stc
xchg
out
xlat
dec
push
cli
cmp
je
ret
sahf
or
mov
mov
pop
add
sbb
pusha
rcrl
sbb
jge
movsl
mov
fs
inc
push
cmp
pop
push
cmp
push
ja
mov
cmp
pop
xor
sbb
mov
movsl
sbb
mov
imul
xchg
fsubs
int
sub
rcll
out
mov
pop
mov
out
mov
inc
pusha
push
fistl
test
lret
int
test
mov
mov
lock
dec
inc
jl
or
repz
push
push
outsb
add
jno
out
and
sbb
xor
je
or
cmpsb
sbb
loopne
test
mov
sub
lock
push
je
jb
adc
add
sti
or
ror
inc
addr16
xor
lods
popf
loope
add
mov
je
sbb
add
mov
xchg
cmp
cs
scas
xchg
sbb
dec
rorl
cs
inc
in
mov
jno
mov
push
std
mov
mov
cmpsl
movsl
sbb
fstl
mov
fs
call
lret
loopne
pop
sbb
shlb
inc
rorb
decb
mov
je
cmp
loopne
xor
stos
mov
imul
xor
and
shlb
push
imul
adc
mov
dec
sbb
addl
js
dec
shll
aad
dec
cmp
mov
mov
dec
sbb
test
push
inc
mov
mov
adc
sub
pop
test
mov
sbb
sub
pop
dec
xchg
sbb
or
fdiv
into
mov
sub
loope
jg
iret
sbb
pop
dec
std
xchg
xchg
xchg
lods
jae
ret
dec
imul
jg
mov
inc
xor
sub
and
xchg
cli
sti
loopne
ficompl
sahf
in
hlt
dec
outsl
dec
loope
filds
out
dec
jno
fidivrs
cmp
xor
icebp
add
xchg
imul
fisttps
ret
mov
push
and
xor
roll
fldcw
pop
pusha
sub
aas
imul
push
rcll
push
and
mov
dec
dec
inc
mov
cmp
scas
je
xor
push
mov
rcl
popa
mov
sub
inc
lock
test
inc
push
mov
and
and
add
sub
cmp
stc
mov
mov
pop
jl
or
xchg
insb
cmp
sbb
shll
testl
gs
cld
pop
in
nop
add
aas
inc
mov
cwtl
sub
out
imulb
sub
mov
scas
es
ss
cmpsb
mov
xor
xor
fildl
jl
sbb
sub
or
cmpsb
xchg
lahf
stc
fdivrs
cs
mov
rolb
push
iret
subb
xor
out
aad
sbb
fnstenv
and
sbb
lds
sar
pop
mov
add
pop
std
cmp
pusha
xchg
in
int
in
sbb
ficompl
mov
mov
fidivrl
dec
mov
add
mov
call
cmp
xchg
inc
inc
push
pop
and
lcall
lods
movsl
add
pop
mov
arpl
nopl
adc
cmp
cmp
xchg
fisubl
xor
sub
shll
mov
xor
loope
shr
outsl
out
mov
out
cli
test
test
int
sti
int
sbb
mov
es
xchg
xchg
and
inc
call
test
movsb
push
mov
adc
sub
fucomip
xchg
les
cmp
xor
mov
das
add
pop
push
add
in
in
fcompl
adc
add
fistpll
rcrb
fildll
mov
je
movsl
cmc
les
rclb
ret
pop
imul
cmp
into
loop
sbb
subl
loop
sbb
cmp
stc
jo
add
das
sub
dec
xchg
js
jle
xchg
jb
push
sbb
sub
sub
xor
test
mov
cmp
mov
mov
and
out
jae
loope
pusha
flds
inc
stos
outsl
add
ljmp
aad
xor
scas
insl
or
fstps
mov
pop
cmc
ret
and
orb
push
lea
imul
repz
push
insl
jge
dec
jmp
add
push
stos
xor
xlat
mov
popf
and
in
pop
lods
cld
inc
lods
jl
xor
adcb
loope
or
mov
ret
inc
mov
loopne
out
arpl
test
popf
clc
gs
mov
push
aas
in
imul
out
movsb
add
add
orl
mov
repnz
and
or
mov
push
cs
add
je
add
out
ljmp
mov
mov
mov
movsl
and
test
pop
ds
enter
loope
lock
mov
mov
mov
lea
cli
loopne
jg
xchg
mov
xchg
lahf
add
sub
int3
daa
scas
mov
push
mov
pop
repnz
jmp
mov
std
adc
jne
fxch
jbe
scas
sbbb
sub
mov
add
push
ja
inc
pusha
insl
pusha
adc
dec
dec
adc
pop
mov
xchg
out
push
cmp
mov
in
sarl
aas
dec
or
jp
out
mov
xchg
outsb
dec
sbb
loopne
push
jne
jb
aaa
adc
mov
push
adc
das
mov
rcl
mov
and
fsubl
dec
mov
push
push
push
ret
or
sub
lock
sub
out
in
dec
dec
cmpsl
fscale
arpl
mov
inc
sbb
pop
adc
cmp
roll
mov
mov
push
cld
pop
sbb
xor
lcall
bound
out
nop
enter
mov
inc
cmp
jo
jmp
cmp
xchg
and
xor
mov
fdivrp
lods
pop
into
dec
fucomp
xchg
mov
sar
sti
lcall
andb
push
scas
pop
push
mov
dec
cld
aaa
add
rcl
repz
jg
xor
mov
ffreep
xlat
stc
push
sub
and
push
imul
push
cmpsb
lods
mov
jl
cwtl
int3
jp
jo
mov
inc
adc
push
sub
cmp
data16
fiaddl
ffree
hlt
aad
stos
ljmp
inc
loope
mov
imul
or
fistps
dec
out
sub
popf
sub
cmp
jb
adc
mov
cmp
notb
movsb
test
push
cmpsb
sub
movsb
adc
push
test
loope
dec
lcall
popa
cmp
imul
rcrb
jbe
and
scas
iret
ljmp
sub
pop
loop
fistps
mov
cmp
fcomps
jno
fld1
inc
push
sbb
and
mov
fwait
xor
test
adc
mov
hlt
xor
or
aad
push
cmp
in
les
xchg
inc
inc
rol
in
mov
scas
dec
sahf
addl
and
aad
les
fisubl
xor
fidivs
test
andb
fwait
repnz
ljmp
add
mov
push
and
dec
in
mov
push
dec
in
add
jns
push
push
push
stos
push
cltd
or
outsl
rcl
mov
rcrb
lcall
outsb
push
pop
sub
sub
rcl
sub
shlb
adc
rcrl
test
push
xchg
call
push
add
rcrb
cli
dec
fisttps
mov
sbb
imul
out
xchg
es
lods
push
xchg
jle
lds
cmpsb
or
mov
fcoml
cli
or
push
mov
add
xchg
test
inc
nop
xor
add
sub
cs
sbb
xchg
mov
pop
ret
lret
hlt
in
ljmp
xchg
bound
mov
cmp
fsubp
mov
rolb
adc
lcall
push
mov
fcomi
negl
cld
sbb
lods
xchg
xor
pop
mov
ljmp
and
mov
loop
test
pushf
push
test
divl
les
nop
add
pop
test
push
lret
and
jp
mov
fsubs
popf
jg
mov
pop
push
in
pop
call
lret
iret
push
sub
sub
jl
xchg
sub
push
loop
add
lock
and
mov
mov
test
gs
fwait
and
cmp
jbe
gs
xchg
jns
into
imul
sbb
rolb
test
mov
push
cld
lds
and
sahf
fs
sbb
xor
push
mov
inc
aad
int3
xchg
cli
jbe
and
pop
arpl
xchg
jecxz
mov
out
pusha
aaa
cmp
and
hlt
fmuls
xchg
mov
mov
clc
fidivl
ja
into
mov
pop
or
mov
sbb
mov
pop
je
lret
mov
aaa
sub
vpunpckhbw
rcrl
loop
adc
into
xchg
mov
ja
mov
pop
inc
clc
out
inc
pop
dec
test
aas
loop
mov
fcoml
outsb
mov
jle
js
sub
sub
and
icebp
push
rorb
rcl
icebp
notb
std
cmp
or
jb
mov
jp
les
xor
pop
mov
repz
clc
clc
jae
mov
mov
adc
xor
arpl
test
dec
daa
sarl
mov
sbb
xchg
fists
outsb
fwait
enter
sub
mov
inc
xlat
sbb
enter
in
mov
mov
nop
scas
popf
xchg
pop
xchg
in
mov
fdivl
mov
sbb
xadd
xchg
or
xor
out
mov
js
and
inc
mov
inc
cwtl
pop
push
mov
jge
inc
sub
shlb
addr16
arpl
push
cli
pusha
aas
jo
test
or
or
test
or
std
jge
popf
clc
mov
shll
pop
xor
fwait
xchg
lahf
mov
std
dec
subb
cmpsb
lcall
pop
push
xchg
mov
mov
inc
adc
push
rorl
xor
sub
sub
jle
jne
out
out
frstor
cs
bound
lea
cmpb
arpl
sbb
outsb
adc
stos
into
adc
shrl
daa
fs
fsubl
daa
jns
clc
mov
inc
xor
das
fnstsw
sbb
rcr
iret
scas
push
inc
rclb
add
push
popa
pushf
adc
mov
out
scas
dec
ss
mov
mov
add
jecxz
xor
add
inc
js
mov
mov
fistpll
stos
cwtl
lock
cmp
inc
mov
sbb
xchg
xor
cmc
mov
shrl
imul
cmc
loop
push
mov
int
jg
test
mov
lahf
out
mov
push
in
std
outsl
das
jo
dec
xor
mov
pop
cmp
cwtl
imul
mov
fnstenv
arpl
mov
andl
push
aaa
insb
fistl
fwait
ret
fadds
shrb
cmp
xor
mov
out
icebp
jp
mov
rcl
mov
scas
cmpsl
test
pop
or
add
test
xor
bound
add
enter
insb
out
rcrl
jae
adc
mov
and
fdivrs
or
aas
xor
pop
popf
fdivrp
leave
dec
push
jmp
cmp
xor
sbb
idivl
xchg
aaa
pusha
cs
aam
in
ljmp
lcall
js
adc
add
mov
add
xorb
stc
daa
xchg
test
icebp
fidivl
dec
mov
xor
les
cmp
imul
xor
outsb
lods
ret
pop
or
add
in
dec
test
inc
in
test
adc
iret
or
popa
mov
les
pop
pop
loopne
mov
xor
mov
or
ss
int3
mov
jnp
fcoml
xchg
mov
in
jb
xor
sbb
jmp
mov
pop
stc
dec
mov
jmp
sbb
mov
fmul
popa
pop
pcmpeqw
pushf
sub
sub
daa
and
sub
repz
or
sbb
and
pop
inc
loope
pop
jecxz
ret
mov
in
mov
pop
notl
mov
loopne
pusha
dec
mov
inc
jns
addl
or
or
xchg
aad
adc
xchg
jne
test
sahf
daa
int3
mov
loope
jbe
xchg
jnp
adcb
adcl
dec
nop
jmp
nop
cmpsb
mov
imulb
xchg
movswl
aas
push
imul
inc
jecxz
fstp
jne
dec
pop
mov
mov
subb
imul
ror
ret
scas
pusha
mov
mov
bound
jp
jae
shrl
in
lret
jno
stos
lock
fs
aas
jbe
stos
pop
push
jp
sti
mov
jo
arpl
arpl
mov
ret
inc
addr16
aaa
dec
cmpl
jmp
je
push
cmp
fdivrl
push
xchg
decl
mov
cmp
and
pop
mov
mov
ret
test
mov
xchg
jle
stos
cmpsl
mov
and
xlat
test
and
jl
push
mov
push
adc
lds
pop
jle
xchg
or
mov
sbbb
scas
jne
ja
lahf
sbb
fdivrs
or
push
ds
adc
adc
test
es
lret
xchg
ja
and
imul
sti
sub
and
cmpsb
mov
test
sub
call
adc
mov
fsubrl
cmpsb
adc
or
pop
lahf
mov
jae
dec
dec
mov
cld
push
stc
cli
dec
sbb
inc
push
icebp
cli
mov
cmpsl
aad
stos
cltd
adc
cmc
out
sbb
cwtl
lods
aam
push
pop
xchg
push
int
addr16
push
mov
xchg
jge
add
je
mov
adc
out
jae
scas
outsl
mov
test
data16
xchg
dec
cld
movsl
inc
sbb
cmpsb
mov
inc
aaa
mov
dec
jb
and
les
xchg
inc
push
sahf
inc
lahf
cmp
fnstenv
add
inc
jne
cmpsb
loopne
pop
hlt
scas
in
push
or
bound
push
pop
dec
sbbl
inc
xchg
push
test
cmp
inc
sub
jl
rcr
shrl
pop
gs
sub
clc
cltd
out
inc
call
jp
lds
xor
mov
sbb
popa
xlat
pop
dec
dec
lret
dec
sbb
icebp
fimull
lahf
repnz
into
repnz
pop
mov
addl
fidivs
das
inc
pop
xchg
pop
js
into
stos
fwait
shll
stc
mov
dec
lea
popa
xchg
xchg
sub
sub
xchg
mov
in
mov
popf
jle
xchg
test
cmp
mov
dec
cmp
loope
into
sahf
jae
jg
mov
fistpll
inc
xor
insb
mov
inc
xor
xchg
mov
xor
sahf
stos
outsb
repz
sbb
jle
bound
adc
push
daa
sbb
or
fnstenv
push
stos
ffreep
leave
add
jbe
push
push
js
dec
add
mov
mov
and
adc
imul
mov
ljmp
xchg
xor
cld
pop
add
cmp
stc
pop
mov
sarl
xchg
sub
cwtl
scas
loop
rorl
jge
notb
outsl
adc
scas
cmp
bound
dec
mov
mov
cld
pop
add
cmpsl
sbb
inc
mov
sub
in
mov
cmp
repz
jb
nop
push
mov
push
stos
push
or
fcmovnu
out
in
mov
or
cmp
mov
dec
xor
fidivs
lret
fnstenv
inc
xor
loopne
imul
mov
mov
cwtl
dec
mov
stc
aaa
pop
ljmp
sti
pusha
push
cmpb
fs
mov
stc
ret
pop
jle
pusha
andb
dec
call
rol
aaa
fbstp
lahf
scas
sbb
xor
int
dec
add
push
and
xchg
cmp
fwait
or
imul
mov
jecxz
push
enter
out
sti
xchg
je
fwait
inc
mov
sub
fsub
sub
test
lea
jl
nop
fdivl
fimull
jno
pushf
xor
mov
sub
repz
pop
outsb
or
mov
mov
js
jo
fcomps
movl
mov
mov
cmpsb
mov
add
xor
adc
enter
mov
pop
aad
pop
dec
mov
sub
jecxz
clc
mov
maxps
xchg
adcb
cli
aaa
out
iret
cmp
add
movsl
cli
mov
push
mov
lahf
scas
mov
push
mov
add
clc
and
dec
inc
push
movsb
xor
mov
ljmp
jnp
cld
andb
sbb
cwtl
inc
clc
data16
and
and
jmp
dec
or
push
test
push
or
loop
jp
aad
fs
dec
loopne
add
mov
popa
mov
mov
xorl
jl
pop
rcrb
adc
sub
dec
testl
mov
les
in
cmp
dec
sub
or
loopne
or
push
ljmp
mov
ret
insb
jne
xor
outsl
bound
pushf
pop
mov
dec
mov
mov
dec
stos
xchg
xor
and
add
setg
leave
jno
inc
out
in
sbb
cmpsl
ds
sbb
in
jecxz
sub
xor
loopne
inc
jno
xchg
xchg
outsl
xchg
aas
or
dec
sti
iret
ds
xchg
cwtl
jb
pop
dec
push
jae
repz
stc
xchg
dec
add
outsb
addr16
loope
aas
push
cmpb
scas
ljmp
and
repnz
push
out
mov
mov
mov
out
jmp
dec
in
sub
mov
jb
jge
cli
inc
mov
adc
fnsave
jecxz
lahf
xchg
pusha
daa
sarb
fistl
sbb
incl
mov
pushf
fs
outsl
lret
mov
mov
fwait
sub
and
adc
and
xchg
notb
stos
xor
shrb
adc
imul
insl
or
xadd
shll
test
xchg
add
adc
xor
mov
testb
mov
jmp
sbb
icebp
out
int3
xchg
adc
cmp
test
roll
test
int
add
stos
das
xor
push
adc
icebp
std
jg
mov
hlt
scas
ret
push
rcl
aas
aaa
fstl
mov
jg
jno
xchg
push
push
sub
fs
inc
xor
cmovge
jae
out
mov
push
adc
push
sub
jl
gs
mov
sbb
push
push
inc
into
test
mov
insl
mov
or
adc
push
lret
orl
cld
fwait
adc
lahf
insb
aas
inc
popa
test
jne
in
fstps
fildl
ror
xchg
sub
test
out
stos
xorb
jge
push
push
push
push
movsb
lock
mov
arpl
jbe
scas
repz
jo
div
sub
aam
adc
or
in
push
pop
cmpsb
xchg
sub
in
xorb
cmpsb
loop
int
xchg
jbe
call
pop
jo
sub
js
idivb
dec
mov
shlb
iret
bound
xchg
into
or
lods
adc
lcall
or
push
pushf
gs
sub
stc
xor
ja
sbb
call
push
push
jne
sbb
aad
push
jno
mov
adc
xor
fdivs
loopne
cwtl
mov
mov
scas
fs
jge
jg
jns
mov
pop
daa
pop
xor
xor
mov
sbb
data16
inc
jb
stos
dec
arpl
mov
hlt
dec
mov
dec
mov
enter
cld
scas
mov
push
js
jb
jle
loope
or
sub
xchg
sub
mov
and
dec
mov
fisubs
jp
inc
gs
pushf
or
scas
test
pusha
stos
hlt
ja
movsl
data16
arpl
or
call
pop
pop
mov
sub
mov
addr16
adc
and
sbb
movsl
inc
push
pop
dec
sub
aad
push
sub
sbb
cs
sub
sbb
cmp
mov
or
mov
iret
insl
call
inc
mov
pusha
lret
js
int
enter
mov
inc
in
dec
dec
dec
std
pop
mov
lcall
mov
cli
mov
inc
push
and
jns
popa
and
jmp
shll
sbb
fnsave
mov
push
add
mov
enter
dec
sub
insl
mov
or
mov
push
pop
inc
das
push
sbb
xor
inc
aas
xor
cmp
bound
dec
dec
mov
sarl
nop
into
call
sbb
jmp
pop
pop
cmc
xlat
dec
pop
inc
xchg
std
nop
mov
gs
xchg
jns
bound
neg
mov
fsubp
xchg
pop
mov
hlt
ds
fcompp
jns
xchg
mov
jge
push
inc
fnstsw
imul
test
mov
pop
gs
jmp
xchg
and
fildl
leave
mov
addb
add
jno
mov
add
add
mov
add
pushf
push
out
xchg
ja
add
mov
movsl
sbb
adc
outsb
nop
xchg
cmp
sbb
mov
jno
push
sub
mov
shlb
and
bound
push
inc
or
dec
mov
mov
lods
sub
test
lds
addr16
pop
cmp
sub
jl
sub
addr16
in
in
push
addr16
cmp
aad
add
pop
mov
mov
insb
mov
pop
push
mov
sbb
in
adc
ja
imul
cltd
int3
movsb
and
lds
fildl
sub
leave
and
cmpsb
leave
dec
nop
inc
mov
lea
lea
imul
pop
pop
cli
jg
jmp
sbb
outsl
cli
jg
lock
and
rcrl
lahf
enter
or
push
pop
pop
mov
xor
adc
aad
fdivl
and
xor
jge
je
std
ds
mov
daa
sub
in
mov
push
nop
mov
enter
popf
fistpll
mov
xchg
lea
mov
jp
mov
rcll
xchg
not
and
int
cld
fucompp
mov
fcoml
jmp
sub
pop
jb
push
cmp
nop
cmpl
add
sbb
mov
shlb
mov
jp
or
ret
mov
scas
dec
adc
scas
inc
int3
jnp
or
int3
mov
pop
adc
mov
rcll
out
stos
push
out
inc
pop
and
jmp
mov
xchg
mov
jp
adc
jp
dec
add
out
sbb
sbb
ret
and
ja
add
xchg
xchg
int3
mov
sub
pushl
cmpsb
sbb
mov
or
jecxz
aad
mov
test
jge
or
loop
test
add
fucomp
lock
std
js
jmp
enter
in
cld
pop
mov
sub
push
addr16
pop
pop
notl
inc
pop
mov
xor
movsb
add
addb
pop
cli
sub
imul
cmp
pop
mov
lahf
ds
dec
cs
insl
jne
in
aaa
mov
lret
xor
xor
out
jo
sti
popa
mul
repnz
test
cmp
imul
sbb
push
sbb
push
stc
dec
sub
dec
mov
adc
outsb
in
imul
push
pop
adc
adc
les
in
outsb
add
and
xor
mov
mov
or
inc
xchg
mov
fwait
xor
xor
sbb
gs
repz
xchg
test
and
add
lods
pop
mov
dec
cmpl
add
push
mov
jns
mov
mov
adc
mov
popa
push
sub
xor
fcomip
int
movsl
int3
add
xlat
clc
ret
push
cld
add
cmp
xor
pop
inc
pushl
push
pop
xor
jno
repnz
mov
pop
sbb
xchg
jmp
mov
inc
lahf
push
mov
pushf
mov
push
xor
dec
add
jle
mov
int3
dec
cli
clc
in
adc
outsb
sub
nop
fldenv
ss
and
adc
les
pusha
inc
pop
das
dec
sub
pop
repz
mov
xchg
mov
jne
fs
or
sub
push
xlat
mov
ret
out
jecxz
cmpsb
test
insb
fdivs
mov
clc
sti
ds
push
adc
push
ja
gs
add
scas
leave
dec
scas
adc
test
or
es
mov
addl
jne
pop
xchg
xchg
sub
aas
ja
bound
push
pop
xor
jecxz
and
push
adc
inc
decl
sbb
loop
dec
xor
pop
leave
mov
bnd
aaa
jge
repnz
daa
add
sbb
les
int
push
push
mov
movsb
sbb
push
mov
popa
test
adc
pop
rolb
and
lds
shlb
das
xchg
mov
lock
inc
or
inc
mov
shll
mov
repnz
cmp
push
sbb
push
pop
fisttpl
mov
in
subl
out
xchg
mov
adc
add
mov
push
xor
jno
jae
popa
mov
js
dec
dec
mov
aad
jp
inc
cmpsb
jne
mov
sub
popa
ret
pop
jnp
rorl
out
sbb
dec
std
mov
lret
bound
mov
cmp
mov
std
clc
cmp
xor
dec
sub
dec
sahf
push
divl
push
push
icebp
mov
pop
cwtl
cmc
push
std
mov
mov
aaa
xor
scas
pushf
mov
pop
mov
or
mov
mov
jl
or
mov
xor
pop
movsl
pop
or
call
add
ret
and
lret
stos
push
jecxz
pushf
fadds
outsb
jne
movsl
stos
stc
div
or
shlb
arpl
movsb
and
pop
cmpsb
cli
fs
and
inc
mov
jae
cld
in
lahf
popf
mov
fldt
push
ret
push
cwtl
test
push
adc
nop
jl
push
mov
pop
push
mov
add
outsl
and
stos
xorb
icebp
jo
fs
jae
insl
xchg
push
xor
and
sub
insl
jle
jg
inc
mov
jle
sbb
nop
clc
lret
pop
lret
lock
popf
addl
adcb
in
push
out
inc
push
inc
dec
inc
jne
and
jmp
int3
mov
cmpl
pop
sbb
lahf
insb
mov
loope
sub
addr16
les
dec
jo
clc
cmpsb
cmpsl
test
loope
and
mov
iret
push
ret
and
dec
add
aas
test
jae
and
push
mov
inc
pop
pushf
dec
mov
or
cwtl
inc
sub
stos
mov
cmc
dec
dec
mov
stc
xchg
xlat
test
jo
add
jle
in
xlat
and
rorl
repnz
adc
jg
lret
inc
xor
int
mov
movsl
adc
cmp
inc
pop
adc
push
dec
sti
mov
mov
add
in
imul
xchg
adcl
je
cld
jbe
mov
and
hlt
push
xlat
pusha
cmp
xchg
inc
pop
loop
insb
jmp
push
dec
push
sbb
cmp
lcall
data16
cwtl
subb
and
data16
pop
cmp
inc
push
inc
or
subl
or
enter
adc
movsb
sbb
test
cmp
in
inc
lds
adc
mov
mov
arpl
xchg
arpl
push
cmp
adc
pop
movsl
repnz
lahf
fistl
xchg
mov
shrl
dec
repnz
push
mov
push
mov
mov
test
arpl
rolb
pop
jnp
or
jg
xor
daa
xor
out
and
push
ror
xlat
dec
pop
xchg
pop
into
xchg
nop
add
ret
xchg
xchg
sbbl
loope
cmp
icebp
jne
imull
pop
cwtl
outsb
fs
cmp
or
mov
jmp
sbb
cmp
sti
in
in
and
enter
xor
xor
jle
shll
movsb
push
dec
push
dec
sub
test
andl
mov
sub
inc
pushf
nop
in
xor
jno
enter
fimull
push
std
adc
mov
enter
popf
adc
leave
mov
sahf
add
loopnew
xchg
or
xor
xor
ftst
aaa
pushf
and
sub
sarl
test
addl
push
rol
mov
xchg
dec
stc
int
jp
and
push
ret
pop
dec
scas
aam
addr16
adc
stos
mov
je
pop
mov
fnstsw
push
jg
mov
or
mov
out
pop
xor
push
add
rcrl
les
dec
call
std
pop
add
ja
inc
jbe
adc
pop
fwait
pop
call
jge
inc
jp
sar
rclb
mov
stos
loopne
inc
test
push
sbb
out
mov
xchg
test
aas
sub
jp
mov
daa
std
pop
fcoml
in
sub
repz
cmp
sti
out
push
insl
ds
pop
mov
mov
inc
pop
out
add
inc
or
into
xor
jmp
nop
xchg
test
push
test
mov
mov
addb
push
mov
sub
jns
mov
mov
sti
stos
cli
jl
aad
imul
cmpl
mov
sbb
mov
and
push
push
push
call
out
push
jns
dec
xchg
jns
dec
imul
push
mov
aas
push
ljmp
jb
hlt
sahf
mov
pop
push
dec
inc
mov
ja
and
jle
fisttpl
imul
add
pop
fwait
or
add
iret
ja
mulb
leave
loope
lahf
adc
and
fmulp
les
adc
aam
mov
dec
pop
int3
add
mov
lahf
outsb
insb
add
jno
loope
and
inc
test
pop
insl
dec
inc
or
pop
or
and
xor
inc
sbb
scas
jmp
ja
test
enter
push
dec
test
sub
ret
dec
mov
movsl
ror
pop
sub
not
sub
insb
mov
pop
adcb
jmp
enter
aam
lahf
jge
pop
pop
leave
cltd
cmp
test
mov
fimuls
repnz
or
rcll
mov
cmp
in
popa
pop
imul
nop
mov
sub
push
adc
jne
pop
add
testl
into
mov
inc
hlt
push
daa
and
jo
mov
push
popf
inc
jo
cld
ljmp
pop
fistpl
pop
mov
pop
pop
push
mov
pop
pop
push
dec
xor
dec
daa
adc
mov
adc
sub
gs
addr16
mov
cmp
push
sub
je
pop
mov
stos
outsb
dec
movsl
int
bound
dec
adc
or
nop
cmp
jnp
pop
das
dec
adc
mov
sbb
ror
std
push
shlb
cli
sti
add
push
aad
dec
rorb
push
pushf
lds
in
call
xlat
pusha
ja
push
imul
ljmp
xchg
sahf
dec
cmp
outsl
bound
loop
inc
or
inc
sub
dec
lret
mov
gs
cld
divb
dec
cmpsl
xor
fisttpll
cwtl
cmp
outsb
xor
imul
jae
test
clc
xchg
cmpsb
mov
inc
or
stos
sub
stc
enter
enter
sarb
inc
push
in
pop
mov
mov
mov
popa
mov
in
jo
cmp
add
outsl
mov
dec
xchg
cmp
call
scas
and
xlat
xchg
lahf
mov
sub
in
cmp
mov
add
mov
adc
sub
fwait
mov
mov
push
sub
mov
sbb
jo
gs
call
mov
scas
in
jl
fwait
and
cmp
lock
mov
jp
xor
testl
mov
outsl
pop
sub
test
ljmp
sub
pop
cmp
jle
push
roll
add
push
dec
push
nop
mov
scas
or
sub
in
mov
in
in
cwtl
mov
in
push
lods
and
fucom
mov
in
pop
in
push
sbb
ja
jmp
les
int
fwait
xlat
cmp
mov
fwait
hlt
mov
fisttpll
stc
dec
jge
or
and
jb
mov
bound
push
pop
test
jno
clc
push
mov
pop
in
ljmp
and
inc
mov
add
rcll
pop
mov
inc
xchg
andb
fsts
push
test
sub
lcall
mov
jmp
insb
lods
or
mov
xor
jecxz
push
xchg
push
fwait
test
xchg
jno
and
adc
push
mov
mov
movsl
sub
icebp
pop
adc
inc
mov
js
adc
out
xor
iret
mov
lods
add
scas
jo
push
jecxz
cmp
mov
sbb
fs
int3
sbb
mov
push
popa
pushf
cmp
mov
cmp
cs
and
das
clc
sbb
dec
je
mov
shrl
push
bswap
nop
sarl
xchg
lret
imul
mov
mov
push
xchg
add
sti
fwait
je
clc
dec
and
out
mov
sbb
push
ja
lret
insb
adc
movsl
pusha
dec
or
xadd
xchg
mov
cmp
aas
pop
insl
iret
hlt
or
addr16
cmpxchg
std
jne
in
xchg
mov
push
fidivrs
popf
and
jl
test
jg
push
push
dec
into
dec
mov
mov
in
pop
fidivl
sahf
dec
mov
jbe
add
add
call
sbb
cltd
sbbb
movsl
xchg
dec
add
dec
fnstcw
sub
mov
mov
adc
pop
and
xchg
arpl
cmpsl
subl
add
adc
add
daa
or
lea
cmpsb
push
cwtl
jl
or
ret
mov
cmc
out
jno
clc
les
dec
insb
or
ret
into
shl
and
push
mov
gs
mov
sbb
js
stc
jnp
in
xor
jle
cmp
iret
in
shlb
and
jmp
arpl
js
jecxz
pop
inc
dec
xor
lds
push
out
jmp
or
adc
clc
sub
int
or
adc
inc
push
push
and
je
les
adc
sarb
dec
jno
push
dec
rcr
popl
mov
adc
cmp
inc
call
add
imull
xchg
lret
sbb
pop
aaa
out
scas
or
dec
mov
mov
xchg
cmpsl
les
cltd
loop
rcrl
imul
icebp
lret
pop
mov
xchg
cmp
mov
sbb
jbe
push
sub
push
outsb
adc
pusha
mov
sub
or
mov
jge
leave
xchg
insb
popf
or
lahf
popa
int3
sahf
lcall
adc
insl
or
or
test
in
or
and
out
and
es
mov
xlat
sub
fwait
pop
cmp
insl
cltd
rcll
ficoms
mov
adc
jmp
sbb
sbb
in
mulb
in
lods
cs
push
push
xchg
xchg
add
pop
mov
aaa
and
shll
dec
lea
dec
jo
je
enter
jl
add
lcall
or
adc
aaa
pop
mov
sbb
insb
outsb
adc
stos
shrb
or
mov
lods
jmp
out
into
mov
xchg
pop
das
pop
scas
mov
inc
dec
sbb
dec
push
sbb
data16
or
pop
sub
push
lods
das
mov
pop
shll
mov
and
jne
inc
gs
stos
bound
add
bound
mov
xor
test
jecxz
int
mov
dec
fwait
cmpsb
dec
outsl
negl
mov
mov
addr16
xor
stos
xchg
pop
lahf
scas
xor
xor
xlat
inc
testb
jne
jp
in
mov
out
aam
xchg
rorl
and
mov
cmpsl
sbb
sbb
sub
out
jnp
push
sub
push
push
cs
lods
fisubrl
sub
mov
push
add
stos
dec
lea
movsb
inc
push
sub
daa
fs
jns
jae
inc
mov
mov
push
jne
cmc
and
stos
add
adc
fwait
mov
fwait
je
test
mov
and
sub
pop
xor
aam
sarb
mov
lahf
jge
sub
sub
pop
loope
outsl
mov
lahf
push
adc
out
sbb
push
sahf
pop
in
jo
aam
pusha
add
sarl
cmovp
int3
shlb
repnz
sub
and
mov
clc
mov
in
jns
cmpb
push
mov
dec
out
push
insl
pop
sbb
fsubs
pop
cmp
out
fmull
pop
push
icebp
xor
test
clc
gs
push
les
push
enter
fisttpl
xor
jo
je
ds
arpl
scas
jp
and
and
xchg
pushf
mov
fwait
lahf
fxtract
inc
and
xchg
movsl
lds
ror
and
insb
ja
mov
xchg
lret
mov
xchg
jge
iret
repnz
mull
cld
clc
das
cmp
mov
push
sbb
mov
iret
xlat
fnstsw
sbb
jle
inc
mov
inc
dec
sub
jne
pusha
jae
adc
dec
sub
push
jnp
call
fldenv
icebp
mov
mov
popa
test
orb
jae
popf
test
or
add
add
push
les
lret
ja
mov
out
adcb
xor
mov
mov
xchg
push
xlat
int
xchg
ficomps
push
pop
mov
push
test
xchg
mov
addr16
xchg
sbb
and
inc
or
mov
pop
add
lea
in
inc
push
mov
repz
repz
and
test
dec
fadds
cmc
repz
pop
arpl
mov
in
aad
xchg
out
leave
mov
into
shll
shrl
repnz
mov
loope
inc
call
mov
das
xchg
cmp
repz
mov
push
outsb
mov
call
cwtl
cmc
les
mov
ljmp
test
aad
sbb
nop
and
movsb
cmp
mov
jbe
test
xchg
daa
loope
imul
shl
mov
jecxz
xor
imul
and
popa
sti
pusha
jo
or
leave
or
lea
cwtl
inc
pop
push
pop
mov
pop
scas
and
xchg
pop
cwtl
pop
mov
or
ljmp
jg
mov
push
mov
sahf
fcoms
imul
sbb
mov
inc
insb
outsb
in
push
out
jecxz
enter
into
dec
inc
pop
dec
add
mov
or
aaa
jle
test
lods
nop
fiadds
andb
cmp
jecxz
aas
pop
fldenv
clc
jne
fdivp
ffree
fildll
out
lods
ja
rcrl
icebp
pop
mov
jmp
xchg
lods
in
into
mov
sub
test
out
jns
lret
popa
mov
sub
or
jg
bound
dec
pop
mov
test
xchg
pop
sbb
data16
gs
or
mov
pusha
xchg
outsb
popf
dec
xchg
push
sub
repz
add
jge
punpckhbw
das
iret
jbe
fwait
mov
sbb
dec
mov
inc
pop
xchg
ljmp
aas
stc
adc
in
xchg
popf
xchg
movsl
lods
sti
adcl
or
sub
adc
mov
gs
das
mov
leave
xchg
mov
inc
lods
out
aaa
mov
push
pop
outsb
xor
xchg
popf
push
dec
xor
lods
icebp
adc
mov
lcall
add
adc
cmp
stc
insl
and
mov
sti
push
icebp
cli
orl
mov
lds
xor
aad
popa
mov
out
jns
fs
add
sub
int
add
inc
enter
pop
scas
movsl
fistl
add
jno
xor
mov
mov
fadds
bound
das
jnp
gs
test
outsl
add
cmp
mov
add
sbb
inc
or
insl
dec
arpl
jmp
popa
outsl
mov
aas
push
out
popa
mov
insl
nop
xchg
loop
pusha
add
popf
xor
outsb
icebp
lea
xor
hlt
dec
std
ficoml
jmp
dec
ss
sub
shrl
ret
jmp
cwtl
scas
out
es
and
dec
sub
jno
jnp
sub
lret
xchg
cmp
scas
lds
sub
out
sbb
sub
andl
dec
aaa
adc
mov
scas
loop
pop
clc
xlat
mov
mov
push
add
lret
jno
or
loope
mov
push
dec
repz
js
adc
out
ljmp
shr
xchg
dec
push
pop
sbb
movsl
cmp
fldenv
shrl
mov
mov
clc
loopne
jle
mov
adc
push
aas
pop
out
mov
add
xchg
daa
fisttpll
rol
sbb
imul
es
add
or
in
dec
ret
sub
xor
push
and
mov
inc
out
mov
mov
xor
adc
mov
or
push
pop
add
outsb
in
les
mov
inc
cmp
movsl
jecxz
test
pop
push
test
xchg
jg
stos
clc
pushf
or
mov
cmpsl
cmpb
push
cmp
cmc
pop
test
or
jg
ljmp
xor
jb
hlt
jo
xchg
in
aam
lea
ss
mov
mov
and
in
and
sub
push
scas
hlt
add
or
pop
xchg
jns
mov
cmp
or
sbb
adc
push
shll
rcrb
pop
inc
inc
jno
xchg
pop
fs
jno
hlt
push
cli
and
pop
cltd
jbe
xchg
xchg
push
xor
call
adc
cmp
pushf
clc
fcmovbe
push
mov
lea
jae
pop
pop
jnp
iret
sub
sub
repnz
stos
adc
inc
or
mov
in
and
fwait
lods
xor
add
push
xor
lea
fcomi
mov
rcl
mov
es
sub
xlat
ja
cltd
in
xor
add
out
int3
dec
mov
inc
add
push
dec
insb
in
inc
fisttpl
imul
clc
sub
cmp
mov
das
gs
loopne
push
add
xor
add
inc
xchg
rcrb
mov
or
jbe
out
push
and
daa
std
and
aad
divb
add
inc
imul
inc
jmp
jl
fstpl
sbb
add
dec
ds
xor
gs
push
adc
mov
fsubrp
jo
mov
xor
test
int
add
or
test
outsl
adc
cmpsl
dec
mov
pop
in
mov
dec
sub
test
mov
add
in
mov
jmp
aas
jge
jne
inc
jne
cmp
sub
add
fdivrl
adc
loopne
clc
ret
push
cmp
mov
mov
push
fildll
push
ds
aas
aaa
sbb
adc
and
jecxz
xchg
leave
ret
gs
xchg
sbb
cmp
insl
repnz
add
lds
jmp
xor
xchg
mov
push
pop
mov
les
in
mov
cmp
cmpsl
fadd
cmc
or
mov
cmp
cmpsb
je
sub
sbb
call
add
mov
mov
xorl
pxor
rolb
lods
xchg
dec
aam
xor
push
pop
mov
loopne
fsubs
ja
mov
xor
cmp
arpl
aaa
aas
movsb
adc
ja
lock
daa
dec
divb
push
mov
pop
push
ljmp
hlt
insl
fildll
push
nop
xchg
push
xchg
and
xchg
sbb
jmp
lret
or
ficompl
lds
mov
movsl
std
sbb
ret
int
daa
xor
dec
or
mov
pop
jne
in
int3
mov
sbb
jmp
jb
dec
int
lods
imull
ss
mov
lahf
dec
jmp
jae
out
popa
in
or
cmp
push
out
gs
dec
cltd
lods
test
dec
movsl
adcl
mov
sub
aad
push
rorl
add
fwait
push
xor
dec
sub
push
fidivs
test
jmp
shlb
lret
int3
mov
fisttpll
push
xchg
xchg
arpl
and
mov
mov
or
mov
leave
sub
aas
sti
cs
pop
mov
and
test
out
and
dec
jo
mov
push
mov
inc
xchg
mov
bound
stos
cmpsl
out
fdivs
sbb
pop
dec
test
scas
add
ret
xchg
cld
pop
adc
leave
lahf
push
add
out
jp
jl
or
mov
lret
movsl
or
sub
in
jecxz
sbb
xor
imul
jle
ret
jns
xlat
cmpsb
aam
fcmovne
adc
xor
sti
loopne
pop
dec
push
push
out
jle
filds
ret
nop
jmp
push
rorl
popf
add
dec
or
call
nop
aad
andb
mov
sbb
pop
nop
mov
dec
shl
andl
push
mov
add
outsl
mov
and
add
inc
out
push
or
shr
shrb
imull
in
aas
xchg
in
add
jge
cmp
fsub
mov
out
inc
inc
sub
in
pushl
mov
outsl
sub
test
jp
cli
pop
sub
xchg
stos
mov
lods
les
mov
das
mov
aad
pop
jle
shrl
or
xchg
or
dec
aaa
rolb
pop
adc
mov
es
ss
jns
mov
mov
dec
push
fisubl
fwait
mov
fistps
aas
add
ss
or
dec
cmp
pusha
movsb
xor
jp
xor
mov
mov
push
xchg
lods
mov
sub
add
cmp
lar
push
repz
mov
inc
je
sti
or
imul
and
les
ret
imul
jo
rorb
adc
cld
cmpsl
mov
and
arpl
cwtl
push
negb
add
repnz
in
loopne
xorb
pop
test
mov
sbb
xlat
jg
dec
in
adc
arpl
mov
jmp
push
cwtl
jl
pop
fidivrs
push
rorl
push
jge
test
lahf
and
pop
pop
cmp
mov
shrb
cmp
mulb
push
jns
xchg
dec
out
mul
mov
popa
test
mov
out
outsb
jg
add
fcoml
sub
or
fidivrs
xchg
mov
pop
imul
xor
loopne
popf
aad
mov
call
int3
cmp
xchg
pusha
cli
pop
and
daa
cli
lds
adc
dec
dec
inc
cmp
and
bound
pusha
sti
cmp
mov
mov
cli
frstor
mov
cmp
outsl
mov
subl
addb
pop
or
pusha
test
rcrb
movsb
dec
imul
cmpsl
sbb
jg
or
insb
pop
leave
mov
sub
dec
clc
das
mov
and
movsl
scas
sbb
and
roll
pop
sub
mov
inc
and
cmpsb
js
xchg
nop
out
add
lods
pop
mov
xor
jle
mov
lret
pop
add
xchg
inc
scas
add
ret
cmpsl
dec
add
sti
in
or
in
adc
push
mov
adc
cli
dec
jnp
xor
jnp
in
add
outsb
push
mov
xlat
dec
jae
cli
lcall
ret
jp
mov
mov
push
jg
inc
out
sbb
stos
add
xchg
pop
add
pop
jns
sub
mov
repnz
inc
sahf
mov
pop
xor
jle
sbb
mov
loope
or
insl
xchg
jo
cmp
dec
jg
dec
cmp
jecxz
and
std
aas
pop
and
outsb
stc
and
cmp
xchg
or
inc
in
mov
jmp
jne
fisubrs
inc
xchg
adc
rol
xchg
lds
int3
pop
in
fimuls
cmp
sub
dec
cld
and
call
imul
test
test
mov
in
adc
fs
jne
xor
les
xchg
mov
outsl
addr16
add
mov
push
and
xchg
sbb
repz
leave
das
repnz
ret
popa
dec
xchg
add
out
cld
push
sbb
ja
out
loopne
sbb
xchg
sbb
pop
out
cmp
repnz
pop
push
pop
pop
bound
sub
inc
pop
jmp
insl
and
insl
xchg
popa
inc
in
adc
dec
cmp
mulb
xchg
negb
xchg
mov
sbb
mov
scas
add
shlb
les
insl
inc
mov
out
stos
sbbl
shlb
or
lea
imul
dec
push
ja
dec
or
or
adc
add
jnp
sahf
negl
sub
push
and
test
mov
inc
cmp
int3
mov
stos
lcall
sub
lret
hlt
int3
mov
xor
sbb
push
cmp
or
in
iret
jg
mov
mov
jb
test
scas
sahf
and
pop
jle
int
mov
lods
pusha
lds
jno
das
mov
rcl
gs
mov
pop
cmp
push
dec
jns
xchg
dec
pop
enter
inc
and
daa
push
test
pop
mov
lahf
mov
jmp
dec
popf
fmulp
cmp
sbb
adc
pop
clc
jmp
sub
fwait
xor
and
movsb
mov
aad
arpl
dec
pop
xchg
jp
mov
loope
out
xchg
aas
in
mov
or
ljmp
pop
shlb
insl
cs
mov
mov
in
pushl
add
dec
xor
movsb
dec
jg
inc
ficoml
mov
mov
fwait
hlt
pop
xor
out
inc
mov
mov
dec
aam
mov
rcr
pop
ja
push
icebp
call
sub
xchg
gs
lret
push
jno
cltd
out
add
mov
sahf
mov
loope
or
out
scas
jl
incb
fmul
xor
xchg
jp
int3
xlat
jmp
arpl
or
loop
pop
xchg
repnz
mov
dec
outsl
push
pop
aaa
jne
jmp
xchg
jmp
cmp
mov
mov
movsl
aam
jne
test
inc
out
pop
aad
mov
push
sbb
push
sbbl
rolb
stos
add
ljmp
jmp
mov
cmpb
jo
mov
mov
rorl
fld
mov
pushf
and
ficoml
add
lods
inc
fpatan
popf
imul
pop
xchg
mov
cmp
dec
ret
int
dec
mov
or
push
push
sub
dec
lds
loop
cmp
pop
sahf
sub
xchg
lret
test
cmpsb
jle
xor
dec
addl
in
inc
fs
dec
mov
cli
loopne
sub
dec
jge
lea
loope
dec
mov
mov
out
mov
hlt
mov
pop
jp
cltd
test
test
dec
popl
pushf
daa
jne
mov
jmp
jp
mov
push
rcr
inc
push
add
push
test
std
cld
sub
cmp
pushf
loop
mov
fmulp
inc
jnp
inc
mov
sub
iret
int
dec
nop
add
mov
pop
in
inc
mov
aaa
or
mov
out
pop
cli
nop
jb
test
mov
lock
or
inc
pop
arpl
inc
and
push
jae
test
in
dec
in
fdivrl
outsl
lock
cli
stos
fnsave
push
pop
ja
loop
sub
xchg
dec
xchg
jecxz
out
imul
test
rcll
adc
imul
push
popa
int
repz
rolb
sahf
mov
orb
mov
daa
inc
push
aaa
inc
in
dec
es
lock
pop
push
and
cwtl
xor
add
or
mov
inc
mov
xchg
push
shl
fldl
loopne
les
aas
shl
mov
adc
dec
push
sub
jl
pop
inc
cmp
aad
mov
jb
sub
or
mov
data16
add
dec
outsl
push
ja
out
sarb
mov
mov
rclb
or
iret
mov
popa
pop
mov
inc
cmp
xchg
in
addr16
lock
cmc
out
aas
cmp
iret
xchg
repz
pop
sbbl
and
mov
sbb
cli
movsl
mov
mov
rcl
stc
sti
mov
out
sbb
sub
push
inc
outsl
xorb
mov
ret
add
inc
pop
cmpsb
cltd
mov
mov
jp
fld1
jae
je
scas
inc
mov
ret
ja
dec
and
das
ret
mov
inc
lret
dec
jnp
out
fbld
inc
xor
pop
jecxz
cmc
stos
repnz
sbb
test
mov
jns
test
add
mov
stos
sub
ss
and
in
data16
mov
insl
pop
adc
gs
push
sub
jg,pt
and
testb
notl
xchg
ss
sti
sbb
jb
push
ja
xchg
xor
jb
in
sbb
sbb
enter
cld
inc
jbe
sub
mov
cli
bound
orl
jns
ja
or
cmpsb
mov
inc
into
sub
sbb
mov
xchg
out
adc
cwtl
inc
cmp
stos
jbe
mov
out
mov
jnp
mov
add
jo
test
adc
std
pop
adc
loop
pop
ja
repnz
push
dec
cs
mov
mov
push
mov
js
jle
push
sahf
out
push
mov
in
mov
mov
cli
aas
jle
add
jmp
ss
mov
sub
lret
dec
lods
pop
js
fcompl
ds
or
jl
sub
int
push
test
jbe
push
mov
fld
push
cmp
push
sub
clc
push
andl
dec
mov
test
pop
sbb
mov
imul
add
xor
or
adc
inc
or
fstpt
mov
xorb
das
out
xchg
movsl
jne
sub
imul
hlt
dec
xor
pusha
aas
xchg
push
daa
das
xor
dec
add
xchg
inc
push
push
xor
xchg
nop
int
es
fdivs
scas
mov
das
ret
or
mov
add
arpl
adc
hlt
insl
pop
xchg
fmulp
lcall
add
repz
lods
pushf
mov
sub
lahf
xchg
or
scas
mov
je
push
je
repnz
test
ret
inc
ret
fidivrl
std
movsb
sbb
pop
mov
or
lcall
sti
jecxz
add
fs
jle
outsb
add
push
mov
xor
sub
sbb
dec
mov
je
cli
adc
aas
fisttpl
test
nop
push
sti
cld
mov
orb
stos
ja
ret
clc
add
loopne
ljmp
pop
mov
mov
std
jno
lock
dec
jg
cltd
fnstenv
loope
adc
ja
ja
mov
xlat
xchg
mov
xor
xchg
pop
jo
xchg
sbb
mov
or
push
fwait
push
fdivl
cmp
push
data16
gs
sub
pop
pop
dec
xor
movsb
and
pop
je
loope
hlt
push
mov
clc
into
fcomps
sub
rcll
mov
sbb
pop
into
mov
sub
push
dec
cmp
push
mov
xor
push
push
add
and
mov
cmp
mov
or
ljmp
movsb
push
pop
fiadds
push
mov
push
push
dec
lods
sub
push
lret
divl
loopne
ljmp
outsl
xchg
ds
ret
inc
push
dec
sar
jbe
and
xor
insl
mov
jmp
movsb
xor
shrb
movsb
enter
pop
add
lock
idivl
repz
and
repnz
dec
cmp
xorl
mov
mov
mov
jnp
xlat
add
push
mov
inc
push
push
push
mov
bound
pop
sub
loop
xor
fiadds
cmp
mov
jge
sub
mov
pop
shrb
fiaddl
xchg
add
out
add
adc
cmp
or
mov
mov
rcrl
imul
jmp
mov
fcmovnbe
mov
jge
push
mov
and
shlb
stc
iret
fwait
mov
adc
sarb
mov
lods
mov
adc
bound
scas
add
xchg
sbb
test
je
jb
cltd
cld
test
jmp
lret
jl
stc
mov
les
jnp
shll
adc
scas
add
mov
movsb
xor
push
stc
jb
imul
and
push
call
ja
pop
push
call
fstps
cli
cmp
push
add
dec
pop
pop
sbb
pop
push
push
cmp
pop
pop
aad
in
add
stc
mov
sub
adc
sti
jp
mov
inc
push
outsb
daa
fwait
mov
das
pop
test
inc
or
dec
fdivrl
and
xor
add
addl
jmp
ret
push
scas
out
enter
cmp
pop
imul
bound
inc
daa
or
sbb
ret
inc
xor
popf
arpl
sub
adc
dec
mov
mov
data16
inc
je
dec
sbb
jp
mov
ja
in
sarl
xlat
adc
pop
jmp
sub
popa
scas
in
inc
mov
ljmpw
xor
data16
cwtl
loop
sub
lret
xor
cwtl
xchg
aam
outsb
xadd
mov
cltd
pop
popa
jmp
mov
inc
add
jge
inc
push
or
cmpsb
push
xchg
xorl
xor
stos
xor
or
in
cmpsb
xchg
outsb
cmp
inc
jne
cs
outsl
xchg
adc
andb
es
flds
insb
outsl
cmp
inc
inc
and
out
into
mov
mov
jbe
fsubp
mov
dec
dec
cmp
mov
mov
in
fisubs
dec
pusha
mov
inc
pop
add
jno
mov
pop
mov
fldl
incl
addl
mov
push
es
sbbl
add
cltd
mov
mov
fildll
add
push
scas
loope
cmp
sbb
jns
mov
out
sahf
fs
fldcw
xor
lea
in
and
xor
sub
sub
gs
popf
aam
cmp
push
leave
mov
mov
outsb
pop
pusha
jle
fistl
data16
out
mov
jns
imul
jg
jecxz
addb
mov
xor
subb
iret
sbb
sbb
icebp
and
push
push
fs
stc
jecxz
repnz
sub
mov
cmp
cltd
mov
xor
loop
pop
ljmp
jbe
dec
fwait
adcb
inc
les
lock
jo
mov
aad
mov
xchg
cmp
orl
dec
loope
xchg
xor
insl
and
mov
ss
into
les
push
inc
jmp
mov
ret
push
add
cmp
dec
push
push
jmp
outsl
push
xchg
test
stos
and
les
push
push
xchg
mov
stc
int3
xchg
arpl
insl
dec
jo
cmp
push
jmp
and
std
add
add
inc
out
fwait
push
add
es
fsubs
dec
cld
lcall
cmpsl
int3
fiadds
push
popf
cs
call
jne
add
xchg
clc
out
xor
mov
jnp
mov
mov
roll
into
arpl
pop
out
stos
lret
jne
pop
loopne
pop
xchg
ret
insb
stos
scas
or
stos
adcl
jnp
mov
fsubs
or
jno
push
fistps
xor
sbbb
ss
xor
aad
adc
and
xchg
push
andl
sub
cmp
aad
jns,pn
dec
das
mov
mov
dec
dec
inc
js
cs
int
int
lret
xchg
pop
rorb
lret
dec
adcl
adcl
adcl
loop
mov
les
lcall
arpl
cmc
popf
inc
pop
pusha
add
gs
loope
jg
mov
dec
jnp
sbb
xchg
mov
mov
xlat
sbb
pop
fisttps
mov
add
insb
fsubr
data16
mov
mov
dec
xor
ds
je
ljmp
lret
pop
adc
add
scas
pop
int3
jo
xchg
mov
fcomip
mov
into
jl
pop
test
sar
push
pop
cli
cwtl
sub
shll
out
mov
sbb
cmpsl
jns
pushf
pop
mov
mov
add
insb
cmp
cmp
add
js
pop
mov
and
hlt
mov
or
loope
sahf
and
cmp
pop
xor
xchg
push
enter
lods
jg
jbe
sti
fimuls
dec
push
ljmp
or
jno
pop
ret
lahf
lock
in
inc
stos
dec
cs
in
mov
fldl2t
cmpsb
jno
inc
in
pop
xor
in
jne
vphadduwq
push
inc
xor
repnz
add
jecxz
sbb
rclb
lds
sub
cmp
scas
push
sbb
fldenv
in
scas
scas
cs
mov
out
cmp
pop
mov
aam
cmpb
dec
mov
and
pop
or
cld
pop
icebp
loop
jne
int3
xchg
sti
ret
cmp
adc
dec
and
stos
mov
jae
fistl
idiv
xlat
sbb
jne
or
pusha
jg
xchg
mov
pop
push
imul
std
jmp
jp
dec
inc
inc
pop
popf
stc
adc
sbb
jl
cmp
jg
lcall
hlt
and
push
mov
pop
add
out
out
pop
out
xor
pop
xchg
ds
mov
sar
pop
xorl
xor
push
push
or
arpl
cltd
lret
fstps
cmp
xchg
sbbl
add
stos
aad
and
adc
mov
cmp
jnp
loop
mov
jge
ss
arpl
push
aaa
loopne
imul
mov
out
add
decl
adc
push
mov
rcrb
mov
and
cmpsl
jle
cmp
mov
jmp
fcmovne
jo
stos
mov
sbb
push
daa
pop
mov
into
and
push
sub
lea
testl
cli
ficomps
cmp
xchg
cmp
dec
insl
cmp
mov
sub
mov
sbb
insb
pusha
add
enter
adc
pop
gs
push
dec
jb
jg
repnz
test
inc
mov
cmp
sub
xchg
hlt
in
test
fdiv
xchg
clc
nop
mov
and
xchg
and
push
mov
xor
push
addb
sub
lods
cmpsl
daa
outsb
sbb
mov
ret
pop
adc
mov
repz
pop
mov
push
jp
push
je
push
mov
jne
mov
xchg
mov
jle
jp
lds
sbb
cs
pop
cmpsb
mov
stc
test
mov
and
xchg
out
adc
out
outsl
dec
and
pushf
cs
into
push
cmc
mov
cmc
add
shrl
xchg
out
push
mov
inc
mov
scas
out
test
outsb
test
in
cmp
cwtl
mov
xchg
stos
sbb
test
cmp
bound
mov
test
out
lea
sbb
sub
int
jecxz
mov
sarl
push
in
sbb
enter
push
outsb
into
insb
out
adc
test
cli
pop
jae
cmp
aam
lret
sub
arpl
or
popf
or
cs
loope
arpl
push
test
daa
dec
xor
mov
and
fsubl
cwtl
cmp
roll
scas
jg
jecxz
xchg
push
test
out
popf
push
gs
dec
jne
fcomip
pop
mov
inc
or
cltd
push
in
add
cmpsl
int
jecxz
shl
or
and
insb
mov
push
negl
mov
pop
or
addl
lock
dec
ja
sbb
dec
sbb
xchg
cmp
xor
hlt
push
inc
test
xor
xlat
pop
xor
stos
out
clc
iret
push
dec
clc
push
inc
test
fcmovu
dec
jl
xchg
gs
xor
mov
lret
out
mov
inc
jno
jmp
dec
inc
xchg
into
lret
and
aaa
incb
arpl
sub
push
sbb
pop
repnz
jg
addr16
xchg
ret
loopne
psubb
adcb
pop
es
sub
mov
or
sub
call
jge
ret
mov
imul
sub
mov
sub
pop
cmp
bound
pop
mov
or
adcl
imul
mov
mov
pushf
push
stc
mov
xor
ljmp
jne
orl
fldl
push
xor
push
xchg
cmp
bound
stos
and
out
lock
js
iret
jns
sub
cwtl
loopne
cld
and
mov
pop
and
cwtl
jecxz
test
enter
sbb
mov
hlt
dec
jecxz
push
dec
shll
pop
mov
in
iret
popf
insb
dec
mov
cmpsl
jl
cld
pop
sub
sbbl
xor
jns
pop
insl
rcll
leave
out
and
cmp
divl
sti
xorb
jae
mov
daa
jnp
and
aas
in
loope
cmp
sub
loopne,pn
jnp
add
jge
fsubr
loop
cmp
xor
pop
jecxz
jge
fs
inc
inc
and
jge
xchg
lods
add
pop
std
sub
xor
mov
mov
sbb
jle
inc
and
call
les
mov
repz
cmp
xchg
je
movsl
ret
lcall
es
and
inc
movsl
inc
daa
or
and
arpl
popa
aaa
xor
cmp
add
test
push
inc
sub
mov
mov
sub
or
cmp
mov
mov
out
idivl
int
lret
movb
push
mov
push
xchg
xchg
test
dec
stc
sub
sbb
imul
cmc
repz
inc
xchg
mov
je
aad
movsb
inc
movsb
in
je
in
mov
jo
push
rorl
into
mov
gs
mov
mov
mov
gs
iret
adc
out
xchg
getsec
pushf
push
mov
insb
mov
imul
fisubrs
ljmp
mov
cmp
insl
mov
jno
push
js
test
fistpl
in
push
bound
cli
or
xor
in
movsb
leave
loop
cmpsb
mov
lcall
test
mov
imul
inc
xor
int3
dec
lcall
repnz
cmp
push
jmp
out
xchg
std
fildl
mov
cld
jb
dec
sahf
xor
in
xchg
inc
mov
ds
scas
xlat
aad
jg
fsubl
adc
outsl
in
addr16
idivb
mov
je
pop
mov
ljmp
arpl
call
push
cmp
sub
shlb
mov
nop
jb
scas
push
adc
jge
shlb
ficoms
mov
sti
fadd
repnz
lds
test
mov
xchg
movsl
cmp
test
test
mov
mov
fdivr
cmp
icebp
mov
testl
adc
icebp
cmpsl
xor
stos
push
xchg
adc
stos
imul
outsb
es
pop
add
lods
shr
loopne
cmpsb
and
cmpsb
inc
sub
mov
jle
and
inc
es
dec
and
js
or
push
dec
ret
push
movsb
sub
ret
dec
sbb
xor
xchg
iret
dec
mov
push
js
cld
jbe
imul
cld
mov
test
ficoml
dec
mov
mov
mov
mov
or
clc
mov
stos
lret
cs
xor
push
fildll
mov
jmp
jp
adc
in
xchg
jnp
xor
insl
es
and
sahf
pop
in
sbb
repz
pushf
cmp
sub
es
adc
repnz
xor
and
jl
ficompl
ret
sbb
ret
lret
test
sbb
mov
outsb
pop
mov
mov
addr16
add
and
ja
ja
repnz
fldl
sbb
sub
mov
enter
adc
outsl
aam
and
push
nop
adc
push
enter
mov
stos
xchg
sub
jno
cmp
pop
outsb
aam
or
in
xchg
or
jg
bswap
and
movsl
aam
aad
xchg
push
or
stos
jae
imul
xor
pushf
mov
outsl
jecxz
xor
or
pop
push
jb
fwait
xor
inc
adc
mov
pushf
test
js
pushf
cwtl
cmp
mov
jbe
lds
and
je
stc
inc
xchg
fbstp
sub
sbb
aad
sub
movsb
add
in
lds
cmp
in
mov
inc
nop
imul
adc
xchg
add
push
fiadds
sbb
mov
mov
inc
mov
pop
inc
xor
pop
cmp
popa
ja
fisttps
stos
cmp
dec
out
imul
scas
sub
das
test
out
mov
pop
and
xor
cmp
xchg
sbb
pop
add
arpl
enter
mov
shrb
sbb
fldl
dec
fildll
std
in
inc
or
sub
fs
outsl
shll
inc
xchg
fstps
add
mov
and
ds
les
and
jnp
addr16
push
or
ljmp
pusha
stos
mov
mov
cmp
pop
and
aad
ja
push
out
cs
mov
addr16
and
mov
insl
stc
loop
movsb
imul
movsb
xlat
or
fistl
cmpb
jne
pop
inc
hlt
push
push
cld
repz
and
out
mov
mov
int
push
mov
jns
and
pop
mov
push
mov
fcompl
jb
cmp
outsl
fiaddl
xchg
aad
sub
dec
aas
cs
cmp
sbb
insl
mov
hlt
sub
data16
test
lret
cmp
sarb
mov
into
or
insl
dec
and
jbe
out
std
cmp
clc
sahf
xchg
nop
dec
mov
adc
aaa
dec
add
out
out
jecxz
insb
daa
push
jo
inc
and
stos
mov
loopne
les
dec
lods
fcoml
jge
push
int
fcom
add
hlt
out
js
repz
sbb
movaps
jl
in
scas
cmp
or
iret
sub
add
xor
into
pop
out
je
popa
dec
xor
ds
int
mov
movsb
ret
aad
icebp
push
nop
jmp
lret
aas
inc
fcompp
inc
adc
incb
lahf
mov
popa
or
and
ret
movb
test
xor
rolb
add
cmp
in
push
les
sub
sarl
jns
or
movsb
jns
orb
jne
xchg
dec
dec
je
pusha
out
inc
js
testb
pusha
ret
repnz
loopne
stos
mov
data16
fmull
int3
lahf
mov
adc
and
add
xchg
loop
aas
or
mov
aam
cmp
lock
xchg
mov
add
fwait
mov
movsb
xchg
push
inc
call
fwait
mov
xor
or
fdivs
sahf
mov
mov
dec
or
cmp
and
cmpsl
jge
dec
push
enter
les
std
add
cltd
push
mov
aaa
or
push
test
subps
dec
lahf
orb
in
aam
fbstp
cmp
lods
cmpsl
cwtl
cmpsl
jbe
mov
or
mov
popa
rcll
mov
divb
shl
xchg
fs
push
daa
out
stos
sbb
and
dec
mov
out
shlb
sbb
pop
add
xchg
jno
ja
cs
in
ret
lahf
out
cli
xchg
mov
lods
pop
outsl
pop
jmp
cmp
dec
dec
daa
out
push
dec
dec
push
stos
cltd
sub
outsb
mov
xor
mov
inc
popf
mov
mov
jno
xchg
mov
int3
sti
sub
jg
mov
and
test
jge
outsb
icebp
int3
filds
jge
cmp
push
call
or
cmpsl
or
cmpl
push
jge
arpl
cmc
insb
xchg
adcb
arpl
pop
sbb
xor
mov
cmpsb
push
jns
inc
mov
fisubrs
sar
jnp
dec
add
inc
ds
sbb
mov
xorb
cmp
inc
mov
xchg
ja
mov
add
xor
jbe
lret
mov
adc
jle
and
movsb
jo
insl
out
jp
cmp
xlat
or
loope
or
mov
push
test
lea
dec
xchg
xlat
push
cmp
fsubr
xchg
adc
pop
jl
fs
pop
xchg
addr16
outsl
push
xorl
mov
jmp
add
and
mov
ja
xchg
add
jno
jno
rolb
addr16
adc
int
cmp
loopne
gs
out
fisubs
adc
lods
and
and
dec
jle
vandpd
adc
push
test
push
xchg
adc
pop
adc
daa
sub
push
insb
xchg
pop
adc
je
xor
loopne
push
aaa
pop
cmp
lret
inc
std
insl
inc
xchg
shrb
or
ja
andl
sub
jo
cmp
test
inc
jmp
cmc
iret
hlt
jg
dec
xchg
mov
push
jae
sbb
xor
pop
out
push
icebp
push
jo
imul
aad
xchg
cwtl
lods
lock
cmp
jl
cli
jne
adc
lahf
mov
mov
into
bound
lods
into
pop
or
lret
ja
dec
mov
jne
or
or
orb
and
in
pushf
out
inc
push
mov
sarl
ror
add
rcll
jbe
int3
adc
scas
xchg
in
mov
pop
cmp
roll
test
pop
xor
stos
adcl
jg
not
mov
nop
xchg
cmp
jb
test
std
push
sub
push
jg
movsl
andl
mov
jg
mov
imul
mov
shrl
lret
ds
aaa
xchg
jns
mov
sbb
pop
cltd
out
lcall
dec
cmp
mov
insb
xor
pop
and
pop
pop
adc
popf
xchg
mov
xchg
xor
jge
lods
aaa
insl
adc
in
in
jb
cmp
push
jp
xchg
xchg
pop
inc
mov
push
add
lds
jno
mov
add
sbb
mov
xchg
pop
in
push
daa
mov
dec
fsts
mov
fcom
aam
shl
mull
out
in
in
icebp
rcrb
and
dec
in
add
cmc
ljmp
lahf
imul
xchg
fimuls
popa
inc
lock
arpl
mov
and
xchg
stos
int3
imul
cmpsl
sbb
test
fstpt
clc
lea
lret
pop
jo
fsubrs
inc
hlt
pop
pop
pushf
or
inc
mov
ds
mov
add
pop
fisubs
call
stos
push
lret
lret
subb
inc
mov
rol
icebp
into
push
scas
movsb
pop
sbb
mov
leave
jg
lds
inc
js
enter
xor
sbb
mov
pusha
xor
pop
adc
adc
out
xchg
add
pop
xchg
mov
out
xchg
or
mov
add
ljmp
cmp
stos
pop
adc
mov
cmpsl
sti
je
js
je
jg
dec
sub
jge
mov
rol
xor
sbb
and
mov
push
aam
call
sbb
lock
cld
fldenv
jne
inc
loop
mov
ljmp
xchg
xorb
sub
orps
push
inc
repnz
cmpsb
repnz
mov
icebp
or
stos
in
stos
daa
xorb
or
push
mov
cltd
cmp
cld
mov
mov
mull
mov
sub
jg,pt
outsl
pop
stos
or
inc
repz
xor
ficompl
int
iret
repz
and
sub
mov
mov
cmpsl
mov
leave
pushf
ret
jns
enter
je
pop
xor
mov
mov
xor
and
fdivl
jmp
mov
jle
and
aad
arpl
pop
lret
pop
call
fsts
or
cmp
daa
jl
push
or
movsb
sbb
sarl
push
clc
hlt
jne
test
mov
push
insl
repz
push
cld
fidivrl
xor
out
adc
dec
out
or
pop
add
jbe
and
dec
mov
pop
mov
mov
stc
jno
daa
jle
in
and
xchg
mov
les
and
mov
pop
mov
push
daa
jg
aas
fdivrp
or
lea
mov
push
jle
lods
cs
dec
cltd
ljmp
dec
in
push
cmp
fsubs
xchg
mov
fsts
test
ficoms
enter
lock
jmp
and
lret
addr16
idiv
js
ss
dec
sub
adc
add
adc
xchg
add
js
out
repz
mov
push
mov
mov
dec
scas
jb
pop
pop
sub
ror
sub
jge
mov
inc
iret
and
mov
fdivr
jo
lock
push
fcoms
push
sub
sbb
pop
fcomip
push
popa
mov
cmpsw
sti
mov
addr16
jns
dec
xchg
ja
lock
sbb
and
lcall
xlat
and
xor
mov
out
call
insl
xchg
lret
sbb
lods
and
dec
inc
cmpsb
test
xor
ret
cmp
ret
inc
rcrb
or
sub
xor
out
adc
xor
fwait
outsl
fsubrs
daa
sbb
mov
mov
cmpsl
pushf
sbb
std
aam
and
or
arpl
test
stos
push
lods
adc
push
sub
inc
sarl
popf
ffree
hlt
scas
jge
or
mov
mov
stc
mov
ljmp
jmp
and
in
bound
pop
mov
and
sbb
insb
rorb
mov
shrb
lret
mov
arpl
or
xchg
leave
stos
pop
jno
fists
mov
leave
sbb
mov
xor
loop
outsb
out
sti
lea
movsb
gs
mov
jne
jb
jmp
mov
and
fwait
pop
ret
test
push
xchg
test
sbb
std
xchg
je
leave
jns
mov
test
mov
xchg
loope
dec
adc
in
popf
ja
cmpsb
or
or
xor
push
dec
stc
mov
add
or
sahf
loopne
jbe
cwtl
and
in
adc
add
inc
lea
mov
insl
jl
inc
mov
jg
int3
pop
pop
loope
mov
xor
icebp
jbe
and
xlat
pushf
imul
flds
es
jge
push
push
push
fdivrl
mov
in
inc
insl
lcall
adc
push
js
sahf
push
jg
xchg
repz
mov
xlat
xchg
sub
and
aad
xchg
mov
cmp
jge
inc
jb
jg
xor
sbb
movsl
adc
cltd
dec
fsub
lds
xlat
icebp
in
fcompl
test
add
push
call
add
or
icebp
fcmovb
jbe
in
lods
push
pop
sub
push
or
mov
adc
movsb
lret
stos
decl
adc
lret
inc
push
pop
cmp
insl
pop
adc
mov
ljmp
mov
and
xchg
push
into
push
and
inc
inc
adc
ficoms
in
call
in
and
pop
dec
out
or
mov
dec
mov
push
nop
in
push
lods
sub
fldenv
movsb
inc
clc
mov
cmpsl
iret
out
mov
insb
inc
das
dec
pushf
add
xchg
in
in
sbb
xor
fmuls
xchg
call
push
in
and
popf
sub
stc
inc
add
mov
mov
out
jle
xor
es
popa
fs
loop
xor
jnp
sub
jae
mov
in
mov
cmp
dec
outsb
mov
mov
or
sahf
les
or
lods
fdivrs
or
xchg
adc
adc
mov
outsl
push
aam
mov
repnz
and
lock
sbb
in
dec
adc
fisttps
lods
mov
and
and
add
aad
popa
stos
mov
add
nop
or
jmp
loope
popa
in
adc
lds
jnp
jle
xor
push
out
lock
jmp
in
xchg
or
xchg
shrb
popa
addr16
into
mov
repz
je
add
mov
inc
mov
pop
stc
rorb
xchg
mov
aad
adc
out
fidivs
sbb
mov
xchg
adc
cmp
repz
fs
in
xor
jle
repz
icebp
out
lcall
mov
jp
cwtl
or
insb
loope
push
jbe
pop
fiadds
gs
aam
jge
xchg
faddl
inc
xchg
aad
sbb
sub
add
and
and
sar
leave
rcr
jmp
mov
jno
je
pop
pop
push
icebp
repnz
mov
xchg
cld
pop
mov
popa
dec
btrl
push
out
mov
jl
test
repnz
lock
jb
data16
rclb
cmpsl
popl
pushf
int3
xchg
lods
push
add
pop
loopne
cmp
in
xchg
jp
stos
cmc
jbe
add
repnz
aas
sub
sarb
or
mov
les
xlat
shrl
movsl
sbb
push
add
push
jns
mov
lock
stos
jae
sbb
cmpsb
inc
xchg
cltd
ret
popa
enter
lods
push
xchg
out
out
arpl
cmpsb
pop
mov
addr16
lsl
mov
dec
inc
inc
xor
mov
push
popa
mov
mov
jecxz
add
out
xor
mov
addl
fisubrl
and
cmp
out
iret
pop
enter
sub
push
sti
es
xor
adc
add
pop
cltd
mov
cltd
popf
xor
dec
repnz
loopne
js
sbb
or
add
fwait
xor
push
inc
fmuls
pop
inc
fwait
adc
dec
rcr
mov
xor
pop
cs
adc
fisubrs
rcrl
adc
sub
xchg
mov
lds
pop
aad
les
fsub
ret
mov
or
sahf
xchg
inc
lret
cs
test
sbb
inc
xchg
dec
dec
ret
outsb
inc
lahf
or
mov
fsubl
movsl
out
xor
add
inc
cmp
out
mov
scas
and
loopne
sub
enter
cmp
mov
aad
lods
jecxz
fcoml
enter
pop
mov
adc
movsl
inc
das
mov
xor
stc
push
pop
add
test
xor
je
jle
out
int3
sub
xchg
ljmp
pusha
dec
incl
or
adc
xchg
scas
outsb
sub
les
pushf
push
or
or
fadds
addl
mov
cwtl
mov
adc
pop
gs
je
out
xchg
xlat
flds
popf
or
test
mov
sbb
int3
jbe
loop
jno
mov
jbe
rcl
stos
test
sbb
fs
cltd
mov
rcl
jge
inc
fistps
testl
scas
int
sti
dec
mov
mov
or
mov
shll
and
push
shll
inc
ret
mov
les
adc
stos
rol
sub
pop
fidivrs
mov
pusha
ficompl
mov
jl
stos
shl
loope
cmp
dec
mov
les
xchg
xchg
push
bound
jecxz
addb
in
aas
mov
adc
sub
pop
lds
std
mov
and
mov
cs
jb
adc
cld
add
cmp
pop
out
pop
adcl
jbe
xor
mov
and
xorb
mov
addr16
rorb
mov
push
pop
out
in
stos
test
fwait
sbb
cmpb
jns
faddp
insb
push
repz
inc
imul
xor
das
repnz
into
xor
xlat
shlb
pop
into
or
rcl
add
data16
jle
mov
stc
xor
fs
xorl
cmpsb
mov
orl
ja
addr16
clc
pop
add
ret
hlt
cld
fdivrl
add
sub
scas
test
push
dec
pop
push
mov
fcmovu
xor
xor
xor
xor
mov
pop
sbb
or
dec
sbb
lret
mov
adcb
ja
imull
mov
ficompl
bound
jecxz
les
dec
dec
inc
pop
jmp
pop
add
jo
out
mov
js
out
inc
dec
in
push
rcrb
pop
lret
mov
in
inc
cmpsb
nop
add
mov
xchg
lds
hlt
dec
or
pop
lock
pop
adc
sub
pop
mov
and
aas
pop
call
out
pop
xchg
cmp
cmp
mov
rol
or
sahf
pop
loope
insl
imul
mov
icebp
inc
or
jbe
sub
pop
aam
mov
es
je
out
mov
xchg
movsl
mov
ja
int
jg
fmull
push
adc
dec
fstpt
inc
test
fidivs
xchg
in
xchg
xchg
dec
call
outsb
xchg
and
js
and
lret
adc
or
xchg
sub
imul
or
adc
pop
xchg
into
stc
data16
dec
pop
sbb
pop
jns
push
dec
test
repnz
gs
lahf
jbe
mov
push
adc
sbb
test
mov
imul
xchg
and
out
clc
loop
xchg
rorl
ds
jg
add
xchg
xchg
data16
ficompl
mov
push
rclb
loop
insb
daa
sbb
dec
jae
inc
dec
cmp
or
in
movsb
fisubl
jecxz
sbbl
shll
sarb
fcmovnbe
xchg
mov
mul
xchg
sub
inc
xchg
jo
insb
xchg
xlat
test
add
inc
fldcw
mov
popf
andl
adc
lret
cmp
roll
outsb
sti
das
icebp
lods
mov
and
sbb
fstpl
gs
jno
xor
mov
sbbl
std
out
rcl
push
and
mov
mov
mov
sbb
scas
and
pop
fwait
ja
sub
lods
test
scas
stos
xlat
or
add
ret
fmuls
push
xor
popa
ret
xchg
sub
add
dec
dec
ja
enter
ret
lret
push
lcall
push
cltd
inc
jp
push
lds
push
adc
mov
jmp
shll
mov
pop
int3
and
ficoml
nop
xor
sub
ja
ss
push
inc
in
cltd
mov
sahf
lcall
stos
xchg
fs
mov
rclb
aam
xlat
scas
scas
xchg
mov
into
popa
and
outsb
outsl
jg
ja
dec
js
fwait
mov
insl
xor
divl
mov
xchg
in
cwtl
jae
jo
rcrb
push
adc
popa
in
icebp
in
dec
cmp
hlt
sub
dec
push
dec
and
pop
inc
aaa
xchg
inc
scas
mov
jle
pop
sub
push
in
aam
inc
jmp
mov
mov
imul
mov
mov
in
add
push
imul
inc
mov
clc
push
sbb
mov
jae
scas
push
mov
push
imul
movsl
imul
pop
add
testl
rolb
jecxz
jp
push
xchg
jge
out
push
jae
roll
or
stos
out
pop
les
add
popf
lds
or
rol
sbb
xchg
out
jo
push
jl
in
ss
jle
addb
into
adc
and
jl
adc
rol
in
mov
and
jb
dec
and
cmpsb
sub
ret
adc
mov
inc
mov
adc
mov
jl
push
repz
mov
mov
mov
imul
dec
sarb
inc
mov
ficoms
imul
dec
pop
loop
xchg
xchg
je
pop
imul
scas
and
and
je
mov
push
iret
mov
dec
jnp
sbb
imul
push
jp
movsb
cmpsb
iret
jo
inc
sub
mov
jo
mov
jae
jnp
push
les
mov
in
sub
push
test
cmp
loope
pop
sub
mov
je
xchg
aas
movsl
sbb
pop
jb
outsb
ljmp
pusha
lahf
lcall
scas
movsl
inc
adc
mov
shlw
hlt
outsl
push
cld
lods
cmc
sbb
call
ss
jp
addr16
push
sbb
or
mov
loopne
mov
add
pop
xchg
loop
jg
daa
orb
jecxz
or
cmp
dec
add
aas
sub
xchg
push
xor
jns
inc
shll
lods
pop
ss
xchg
push
cs
mov
cmpsl
add
fcomi
xor
nopl
outsb
jne
jmp
xor
movsl
insl
sub
mov
pop
enter
sub
dec
into
mov
ret
test
dec
xchg
aas
mov
repnz
sbb
dec
lea
stc
shrb
ds
dec
pop
xor
and
lahf
cvttps2pi
xchg
inc
pop
mov
jb
out
push
sub
pop
hlt
mov
add
pushf
out
xchg
ret
and
das
mov
repz
rcll
sbb
hlt
daa
xlat
test
sbb
std
mov
mov
pop
cmp
int3
test
int
mov
adc
sub
pop
or
out
jmp
mov
setge
enter
shll
inc
xor
cli
icebp
lcall
arpl
inc
popa
mov
xor
clc
pop
into
fimull
mov
out
cltd
pop
in
xor
push
sbb
or
pop
or
cmpsl
fldcw
lods
sub
ljmp
push
or
iret
push
add
call
lock
sub
sub
in
mov
push
gs
mov
ss
mov
or
adc
out
imul
jl
lahf
adc
push
or
mov
fucom
rcrl
push
push
dec
nop
pop
das
fsubrs
mov
dec
push
xor
outsb
sbb
xor
xor
push
jno
scas
sub
and
dec
jae
lea
cmp
mov
cmp
adc
jo
bound
mov
jmp
sub
sbb
invd
mov
repnz
gs
mov
popf
in
dec
fmuls
mov
es
sub
mov
xor
out
clc
inc
cmp
das
or
adc
push
test
pusha
mov
gs
cmp
inc
push
push
stos
sarb
add
jo
imul
inc
lea
lods
cmc
sbb
push
and
scas
je
or
imul
aad
cmc
inc
ds
push
sbb
pop
icebp
cmc
lret
jmp
cmc
fistpll
je
shlb
je
cmpsl
cmp
jno
mov
jl
mov
repnz
sbb
test
pusha
sub
aaa
popf
inc
pop
cs
int3
jno
out
pop
daa
mov
rcrb
adc
sbb
sub
inc
add
mov
push
pop
push
inc
adc
ss
mov
mov
cmp
idivl
xchg
inc
ja
ffree
insb
pop
jae
daa
idivl
loopne
into
sub
mov
fimull
fwait
stos
mov
inc
rolb
testb
or
in
fisubrl
ud1
pop
xchg
outsl
fcom
ja
pop
subl
icebp
sub
rcrb
les
hlt
xchg
xchg
loope
xorb
int3
add
ret
call
push
out
and
mov
iret
in
mov
xchg
xlat
fsub
pop
movsl
or
jae
push
xorb
lds
mov
adc
fstpt
stos
test
and
jno
and
inc
movhps
aad
jns
jp
popf
imul
cmp
mov
insb
mov
fwait
sub
test
movsl
xchg
mov
add
jmp
cs
inc
and
inc
cmpsb
cmpsb
shrl
lahf
mov
stos
xchg
sub
and
push
and
jmp
loopne
lea
xchg
mov
xor
pop
inc
xor
stos
outsb
pop
inc
inc
and
sbbl
push
ds
ret
out
ja
ljmp
insb
repz
outsb
frstor
movsb
dec
mov
movsb
xor
sub
sbb
fimull
jg
lock
ljmp
cmp
daa
sub
push
push
jmp
lock
push
adc
cs
es
stos
bound
sbbb
out
mov
aaa
out
sbb
cmp
sbbl
dec
inc
cmp
hlt
popf
push
shr
dec
xlat
mov
incb
dec
int
in
lds
fisubrl
daa
std
hlt
push
ljmp
sub
pop
call
rcll
lahf
hlt
ljmp
loop
insl
mov
or
aas
or
sbb
inc
pop
pop
inc
inc
lahf
stc
and
and
sbb
fnstsw
cmp
ja
daa
lcall
mov
sbb
or
jo
ljmp
in
xor
incl
cmp
sbb
jp
push
mov
add
or
je
mov
and
mov
in
cltd
sub
aas
inc
jge
xchg
das
jmp
test
or
mov
lds
cld
add
sub
jmp
xor
rcll
xchg
in
cmc
and
xor
mov
aaa
int
or
data16
mov
xor
inc
xchg
hlt
inc
xchg
mov
lcall
pop
in
add
fbstp
pop
jb
out
adc
dec
push
jb
and
xchg
xchg
sub
mov
andb
into
clc
add
or
xlat
push
xor
xor
das
adc
push
sahf
adc
pop
pusha
scas
xchg
lahf
dec
inc
pusha
lret
sub
sbbl
push
scas
jns
sub
inc
das
fldl
cli
sbb
es
outsl
in
subb
mov
fimuls
mov
and
imul
int
inc
mov
sbbb
push
and
stos
aaa
mov
cli
ret
in
int3
outsl
mov
fnstsw
in
ss
mov
aas
repnz
jp
insb
or
jle
mov
shr
ret
and
push
lock
aad
rclb
xchg
mov
imul
sahf
pop
test
nop
cmp
cld
mov
or
lahf
aaa
jecxz
imul
movsl
into
xchg
call
jo
add
test
leave
andl
data16
jg
mov
sub
mov
cmp
sbb
sub
ret
into
pushaw
push
imul
add
pop
xchg
cmp
decb
adc
ss
add
ss
xor
mov
or
jge
arpl
mov
call
and
in
dec
sbb
cmc
jb
cs
repz
mov
push
pushf
filds
jns
stc
ljmp
sub
outsb
iret
mov
pushf
mov
xchg
jl
sbb
xor
cmpsl
bound
pop
and
xor
addl
out
js
pop
push
dec
in
xor
enter
imul
test
sub
push
int
aaa
fcoms
sub
mov
jb
int3
jno
mov
out
dec
aas
dec
sub
xor
les
js
mov
push
pop
mov
mov
mov
insl
pop
testl
cmp
pop
mov
cmpsb
sbb
inc
mov
sbb
outsb
sub
iret
mov
pop
xchg
bound
xor
pop
mov
jmp
push
pushl
cmpsb
mov
adc
xorb
jb
cwtl
xrelease
fadd
adcl
jmp
mov
jge
sahf
neg
lret
jl
lea
mov
jne
clc
inc
mov
call
jns
inc
and
clc
mov
xlat
lcall
rcll
pushf
and
nop
cmp
int
cwtl
adc
jmp
inc
int3
sub
pop
push
fbstp
mov
pop
scas
mov
jne
cmpl
and
sub
cmp
imul
dec
sub
test
aas
and
dec
shlb
sub
push
fnstsw
inc
lea
lahf
push
inc
das
loop
and
cmp
adc
das
sti
fstps
lret
ret
imul
mov
dec
mov
in
nop
jp
movsb
cmp
ja
xchg
pusha
xlat
insl
sarl
jle
sarl
mov
cltd
call
pusha
imul
arpl
push
xor
lock
jo
inc
or
cmpsb
ljmp
push
sub
fnstenv
psubq
mov
xchg
or
inc
push
xchg
aam
or
xor
aas
in
adc
addb
adcb
cmpsb
cmp
lea
sub
mov
pop
outsb
jle
inc
movsl
push
push
outsl
sbb
jg
pop
rorb
in
ret
lods
push
jecxz
push
icebp
jb
sub
insb
fistpll
jb
lea
jecxz
adcl
dec
sub
push
imull
std
mov
dec
mov
mov
jp
lock
rolb
movntps
jne
ret
xor
cmc
jnp
sbb
sbb
fcomps
add
out
mov
cmp
mov
sub
cli
or
int3
stos
push
clc
inc
sub
lahf
shrl
out
lock
sbb
mov
sbb
mov
cmpsb
jno
stos
das
repz
or
sbb
rcrl
testl
loop
sub
aam
lods
mov
test
mov
aam
xor
cld
cld
fsubl
cmp
jbe
pop
add
jg
ret
xor
mov
into
in
pop
dec
jl
inc
xchg
jp
aad
cs
jecxz
dec
sub
loope
or
pop
sbb
and
loopne
xchg
mov
mov
add
aam
push
add
call
xor
fsubrp
jp
out
or
rcr
or
add
and
dec
xchg
mov
mov
test
mov
push
pop
sub
adc
push
call
push
and
pop
sbb
bound
xor
pop
fisubrs
sbb
roll
push
pop
push
pushf
cmp
push
in
push
adc
dec
cld
fwait
dec
sti
fmull
pop
jmp
mov
daa
ret
and
out
jae
sub
int
mulb
push
aaa
ficomps
mov
hlt
fiadds
outsl
mov
data16
adcl
push
leave
or
test
xchg
adcl
or
ljmp
into
mov
loop
adc
pop
or
jle
sti
mov
mov
mov
dec
mov
jecxz
dec
xor
xchg
out
sbb
lahf
and
scas
push
out
maxps
lock
mov
fcomps
cmc
sub
or
cmp
hlt
pop
aam
stos
cmp
repz
outsl
cmp
jge
cmp
lods
add
inc
xlat
push
adc
add
mov
mov
adc
stos
pop
cmpsl
stc
sub
int3
ja
xchg
test
fisttps
xchg
ljmp
cmp
mov
add
mov
or
add
xorl
fdivrs
das
fdiv
mov
lret
aad
xchg
ffreep
inc
xchg
dec
loopne
jo
in
push
adc
mov
add
mov
dec
xchg
jg
nop
pushf
adc
xchg
imul
cli
sub
mov
adc
loop
inc
icebp
std
lods
fcomps
or
sub
mov
les
aaa
mov
add
addr16
dec
out
mov
ds
sahf
xchg
jle
and
loopne
test
cmpsb
jg
inc
push
in
cwtl
push
mov
push
sti
mov
test
out
out
dec
inc
jecxz
loopne
adc
jno
sbbb
xor
inc
movsb
divl
add
loopne
inc
ja
inc
ljmp
mov
in
stos
push
test
loopne
add
pop
adc
sbb
mov
jne
mov
shlb
xchg
inc
or
mov
jo
test
xor
adc
leave
xor
fsts
dec
pop
enter
or
outsb
leave
or
pop
in
jnp
pop
push
push
imul
dec
jl
ljmp
movsl
add
out
or
rolb
inc
scas
shlb
mov
fldenv
add
popf
push
jae
lds
inc
pop
mov
pop
in
div
push
addb
xchg
nop
icebp
bnd
adc
sub
movsb
xor
sbb
test
inc
cld
cmp
repnz
cs
xchg
into
sti
mov
out
int
push
inc
sahf
outsl
ss
add
ja
adc
out
sub
xchg
pushf
xchg
ljmp
xlat
sbb
adc
lea
mov
add
mov
jge
data16
nop
rcl
enter
jb
add
mov
dec
leave
lods
iret
lret
cmp
add
mov
insb
or
loopne
es
jae
in
sahf
test
dec
int3
sub
outsl
movsb
dec
ja
mov
add
in
test
test
mov
and
outsb
jle
adc
lret
inc
and
dec
pop
xor
cmc
inc
popa
jo
mov
fbstp
popf
mov
lcall
inc
fildl
xchg
pop
jns
int3
decl
mov
out
mov
or
test
stc
dec
jo
xor
leave
sub
and
lcall
int3
mov
jnp
cli
pop
sbb
outsb
int
cmpsl
scas
xchg
imul
movsl
push
mov
mov
imul
and
and
cmc
pop
jbe
inc
hlt
dec
push
imul
iret
ja
jmp
add
cli
or
push
addr16
enter
fisttpl
fistpll
rorb
dec
push
sbb
andb
xor
mov
mov
stc
pop
scas
mov
xchg
out
xchg
mov
dec
call
and
pop
shll
pop
jg
imul
jge
adc
jl
test
lret
mov
cwtl
xor
idiv
push
aas
mov
fisttps
sbb
push
outsl
or
out
pop
push
sub
push
sbb
ja
pop
leave
in
jl
lahf
test
adc
and
inc
enter
addr16
fidivrs
repz
in
sahf
sti
cmpb
mov
or
xchg
and
mov
add
adc
lcall
pop
mov
dec
xor
inc
data16
jl
aam
cmp
mov
shlb
jno
jb
mov
fs
sbb
sbb
fsubl
insb
xor
jns
pop
adc
imul
pop
clc
mov
incb
fdiv
cmpsl
or
jb
stos
test
in
addr16
addr16
out
mov
inc
mov
stc
out
leavew
mov
xor
push
fcomp
jecxz
clc
sti
sub
xchg
cmpsb
xor
cmp
mov
lret
idivb
jecxz
into
cmp
and
sub
outsb
sbb
cmpsb
repz
out
fdivs
and
jo
xchg
pop
stos
and
sub
mov
xchg
icebp
outsl
cmp
or
out
push
mov
ficoml
jg
ret
imul
test
das
ffree
jae
pusha
fwait
and
dec
fwait
lret
xor
cmp
push
sub
scas
sarl
sbb
push
je
mov
insb
data16
fiaddl
cli
sub
xor
add
insl
add
insb
jg,pt
adc
les
cmpsb
stos
das
scas
dec
mov
cs
scas
adc
adc
adc
pop
clc
fildl
and
aam
push
or
fxch
dec
out
iret
imul
sbb
fsubr
rorb
adc
or
mov
mov
into
xor
jp
mov
jle
iret
xchg
in
test
push
mov
call
loop
mov
iret
pop
repz
pop
icebp
xchg
jge
push
fs
inc
dec
or
outsb
xlat
mov
mov
and
mov
data16
xchg
adc
movsb
fmulp
jno
scas
xchg
and
mul
pop
sbb
or
js
inc
fiaddl
adc
jnp
ret
or
data16
xchg
cmp
leave
xchg
push
sbb
shrl
mov
inc
out
je
inc
mov
pop
int
sbb
arpl
jle
jne
add
sub
ds
pop
sti
xchg
dec
push
adc
cwtl
imul
jno
arpl
or
std
enter
scas
xor
popf
mov
and
push
sub
clc
pusha
ficoms
out
inc
repnz
dec
jo
fimuls
es
shll
bound
lret
cmp
outsl
inc
mov
jae
popa
hlt
repnz
cli
cmp
test
mov
dec
insb
mov
loop
cmpl
dec
lods
movsb
mov
cmp
mov
or
jbe
mov
sbb
fnstcw
xchg
or
xchg
add
lock
xchg
icebp
inc
ss
pop
sub
addr16
mov
xor
sub
adc
sbb
jae
sub
xchg
loop
aaa
or
int
fadd
outsl
mov
sbb
ljmp
cs
or
inc
addl
push
insb
shlb
push
pop
lds
popa
addr16
xlat
xor
mov
push
or
repz
jb
adc
mov
dec
lcall
leave
out
mov
cmpsb
ja
inc
jp
jl
xchg
push
xor
std
fdivrs
shlb
push
aas
push
mov
jecxz
push
loopne
mov
add
sub
fs
or
lcall
xor
cs
aaa
xlat
xor
jmp
cmpsb
mov
out
arpl
xchg
aas
jnp
subb
mov
push
mov
adc
ss
popf
jecxz
xchg
lcall
fmul
cmp
fsubrl
rcrb
push
fnsave
add
insb
gs
pop
sbb
push
or
cmp
out
mov
adc
rdpmc
jno
push
imul
jnp
in
dec
lahf
add
jecxz
popf
mov
xchg
add
aad
into
and
sub
test
jp
repnz
ds
ret
push
lret
push
lock
push
in
and
insl
popa
int
outsb
daa
jns
cmp
repnz
cmp
sub
mov
xchg
mov
push
push
add
cmp
insl
push
cmp
lcall
movsl
and
les
pop
adc
jp
rclb
mov
and
hlt
iret
test
insl
imul
clc
int
aaa
xchg
stos
mov
mov
inc
inc
jo
scas
ja
sbb
out
lds
mov
fidivrs
and
cmp
push
out
lret
lea
xchg
cmp
nop
test
push
xor
adc
insb
mull
repz
jne
inc
mov
iret
push
hlt
mov
or
jno
repz
and
dec
push
cmp
arpl
jnp
stos
dec
movsl
arpl
jnp
mov
mov
lret
cmp
pop
lahf
sar
add
in
lock
out
icebp
cmc
push
pop
dec
movsl
ss
push
add
repnz
loop
ficompl
adc
clc
or
lods
into
sbbl
inc
dec
mov
test
out
pop
int3
push
push
rol
rolb
mov
divb
ss
mov
sub
xor
inc
dec
xchg
fnstenv
outsl
outsb
push
addr16
aad
mov
lds
clc
in
add
and
loope
and
add
push
push
pop
push
sbb
clc
cltd
sub
push
xchg
jge
out
mov
aaa
aas
xchg
rorl
dec
dec
or
xchg
and
inc
push
or
mov
aad
mov
sbb
arpl
adc
xorps
cmp
fstp
add
xor
jno
test
add
xchg
sbb
xor
mov
in
and
mov
fsubs
adcb
xchg
push
subb
mov
add
cmp
sbb
outsb
jbe
add
adc
outsb
stos
jp
cmp
fwait
or
cmpsb
je
cld
scas
sbb
loop
into
sub
sub
popf
stc
sbbl
mov
pop
idiv
call
sub
adc
fcmovne
mov
adc
inc
or
jo
repz
add
lock
inc
dec
push
push
test
mov
push
xchg
push
inc
or
xorb
or
cmc
lea
or
mov
nop
and
sub
push
sbb
stos
ret
xchg
xchg
jns
fld
dec
adc
lahf
jno
out
movups
jno
aad
xchg
jle
mov
cmpsb
inc
in
js
sbb
stos
arpl
mov
mov
sub
mov
inc
int
shl
mov
mov
jp
shll
addr16
and
pusha
xor
or
lret
ret
orl
pop
jb
in
pop
mov
jl
int
cmp
shlb
rorl
adc
inc
mov
lds
adc
insl
mov
dec
loop
dec
cld
je
iret
xchg
fisubs
cmp
xchg
push
or
xor
sub
dec
shlb
mov
stos
xor
pop
pop
sbb
mov
or
inc
push
fmull
sbb
mov
inc
rorl
add
mov
xchg
dec
adc
leave
mov
nop
sbb
sarb
je
mov
mov
jne
and
or
xor
sub
sub
push
fmuls
xchg
incb
pop
and
push
mov
mov
outsl
in
mov
and
inc
and
fidivl
popf
inc
dec
dec
push
cld
scas
loop
insl
pusha
mov
adc
pop
ds
mov
lock
lret
fsts
mov
xor
cmovg
mov
sub
mov
sbb
xchg
rsm
shlb
stc
inc
jb
aad
lea
push
adc
inc
clc
or
fldt
int3
mov
sbb
xchg
dec
or
sub
daa
add
push
dec
iret
push
sbb
repz
test
jns
aad
mov
mov
sbb
icebp
add
les
cltd
xchg
lahf
xor
cmpsl
test
stos
pusha
or
xor
jle
enter
aas
push
addr16
xchg
xor
sub
insl
stos
scas
mov
mov
sub
lods
push
in
aad
adc
pop
dec
mov
shlb
jnp
jl
cli
push
lods
out
fcoml
cmp
xchg
fsubs
xlat
push
lds
outsb
jbe,pt
jo
out
pop
inc
pusha
dec
mov
clc
decl
cli
pop
inc
shrl
dec
jge
sub
and
adc
mov
ret
repz
inc
mov
jmp
mov
jle
aad
decl
popa
xor
xchg
iret
jecxz
out
adc
insl
add
outsl
inc
sub
sub
cmpsl
aad
cmp
dec
popf
loop
stos
pop
fistpll
xorl
and
aad
fisubs
addr16
dec
inc
aam
add
inc
addr16
cmp
dec
es
mov
jmp
fistl
adcb
push
and
sbb
mov
xor
outsb
das
pop
mov
jg
sbb
jmp
cld
or
pushf
pop
mov
bound
jle
mov
lds
ss
repnz
call
jno
ffree
push
pop
mov
arpl
and
push
dec
aaa
push
lret
xchg
mov
xlat
jg
push
ljmp
loop
push
xchg
lret
cmp
push
cmp
mov
push
out
cmovne
sbb
stos
adc
pop
jnp
in
jbe
xor
adc
shll
cmp
lods
test
dec
orb
pop
mul
js
jl
in
sbb
gs
add
adc
and
pop
inc
mov
leave
sub
call
push
cmp
shlb
enter
pop
dec
mov
lea
add
inc
sub
shrb
cltd
notb
mov
cmc
mov
sbb
movb
insb
imul
dec
icebp
lds
cmp
mov
nop
mov
lods
js
sbb
ss
push
int3
xchg
sbb
push
stos
rcrb
ljmp
sub
adc
and
or
push
movb
leave
leave
jno
jp
adc
clc
mov
mov
mov
jnp
lahf
and
jmp
sbb
xchg
mov
push
pop
out
leave
movsl
sbb
dec
inc
test
out
dec
fcomp
inc
sbb
pusha
in
xor
test
stc
and
pop
mov
out
adc
fwait
cmp
sbb
jo
push
outsl
push
notb
es
std
dec
cmpsb
pop
and
pop
push
xchg
or
ud0
xchg
data16
in
dec
addl
imull
iret
push
xchg
inc
hlt
jo
sbb
inc
jecxz
xchg
daa
cmpsb
push
faddl
hlt
int
outsl
cmp
or
mov
xchg
bound
xchg
xchg
mov
out
cmp
fidivs
es
clc
push
pop
sub
test
jg
aam
inc
xchg
push
mov
outsl
insl
xor
sbb
push
dec
inc
inc
and
insl
repnz
pop
scas
outsb
push
push
in
outsl
cmc
test
jb
das
pop
jecxz
inc
addr16
jo
ja
outsl
fldenv
push
fisubrs
xchg
out
mov
ds
inc
xor
pop
sbb
fmul
subl
out
or
push
aas
sahf
repz
dec
xor
je
push
cltd
fcomps
jecxz
and
lods
mov
mov
sub
mov
jecxz
nop
sub
mov
jne
xor
mov
pop
mov
xchg
lret
xorb
test
sbb
frstor
mov
dec
jp
stos
daa
scas
push
dec
dec
popf
mov
xchg
les
jge,pn
xor
push
push
nop
sbb
lret
iret
cld
cmpsl
adc
add
cmp
std
leave
mov
aad
add
je
cmpsl
hlt
call
out
mov
sti
dec
jb
jl
movsb
push
or
cmp
xor
dec
dec
jmp
mov
push
and
shlb
sub
xchg
into
jns
dec
adc
sbb
inc
nop
iret
stc
cli
es
jb
fiadds
lock
mov
loop
enter
inc
ds
pop
mov
cmpsl
sub
mov
jecxz
stc
and
loopne
jnp
fisubrl
sahf
fs
mulb
rcll
mov
xor
shr
xchg
aas
xchg
das
sub
and
aad
xchg
cmp
repz
inc
mov
push
sbb
add
pop
xchg
lahf
xchg
test
mov
jecxz
or
scas
adc
aam
push
mov
xchg
icebp
push
push
inc
sti
call
jge
sbb
inc
mov
adc
iret
popa
jnp
movb
adcb
loope
loopne
mov
cmp
adc
aas
dec
in
ljmp
rclb
test
push
mov
sub
subl
push
imul
jno
xchg
repnz
adc
scas
dec
pushf
outsl
push
pop
scas
div
sbb
add
mov
loopne,pt
dec
fucom
loopne
decl
iret
or
jecxz
xchg
xor
mov
adc
shlb
in
sub
faddl
stos
push
out
dec
int3
popf
lret
xchg
pop
stos
add
xchg
xchg
pop
addb
pushf
int
xor
and
mov
or
ror
or
push
adc
ss
enter
dec
push
and
push
dec
arpl
hlt
cmp
mov
aas
out
cltd
xchg
clc
icebp
sub
lea
movsl
lods
xchg
cmp
das
push
adc
xor
in
jecxz
shlb
jp
test
push
mov
lret
lock
add
ret
loopne
add
jnp
sbb
jno
fs
ret
dec
scas
sub
int3
mov
in
push
cli
mov
cmpsb
push
mov
push
or
mov
je
cmpsb
sbbb
clc
fstps
das
push
add
shll
mov
loopne
call
into
sbb
stos
inc
add
dec
sub
es
and
push
mov
ja
jp
sbb
xor
das
add
out
lcall
ror
stos
push
mov
fwait
inc
jo
pop
xchg
dec
jb
ja
mov
sahf
daa
dec
mov
stc
mov
lock
mov
mov
and
testl
cmp
mov
inc
pop
add
add
testl
nop
pushl
add
out
scas
ds
cmp
mov
movsb
nop
movsb
stos
dec
sti
dec
sbb
pop
jg
shlb
jns
cmpsl
movsl
lcall
sub
ss
js
lds
mov
mov
mov
jp
adc
xor
aam
into
dec
leave
lahf
jae
mov
mov
push
lcall
mov
jo
or
lds
es
inc
xchg
sbb
xor
cmpsb
outsb
fisubrl
test
cmp
in
jg
lret
or
pop
ljmp
nop
jg
pop
xor
and
push
int
pop
mov
sub
lea
js
out
rolb
cld
stc
out
cmp
daa
mov
clc
ret
adc
inc
xor
cltd
push
mov
pop
out
into
fcomi
push
imul
gs
push
stos
addr16
add
test
dec
lret
gs
push
xlat
int
arpl
sbb
push
movsb
jmp
cmp
gs
or
jne
or
jo
test
dec
rol
adc
jle
loope
cmp
imul
add
lahf
pop
into
push
clc
pop
in
sub
mov
dec
test
popf
sbb
out
cmp
ret
dec
push
jg
add
vmovmskps
lds
dec
xor
adc
lea
shll
xchg
cmp
lret
jl
out
data16
push
stos
cmc
sahf
mov
xchg
jne
xlat
inc
push
bound
fwait
cmp
sub
stos
popa
pop
push
mov
fimull
flds
push
mov
lahf
ja
mov
xchg
test
les
insb
dec
sub
or
addl
inc
xor
jecxz
jecxz
sbb
pop
sub
repnz
je
pop
pop
add
xchg
mov
mull
clc
push
dec
frstor
adc
sub
mov
loopne
mov
mov
push
jl
filds
stos
ljmp
sbb
cmp
xchg
ds
push
bound
push
cmpsb
mov
aam
cli
dec
and
push
aaa
sahf
adc
pop
mov
push
mov
jmp
push
jno
push
test
lcall
mov
push
fcomps
fs
aaa
imul
loop
push
enter
aam
rolb
movsl
pop
sti
push
and
jge
and
stos
cmc
andb
mov
insb
out
push
jne
out
pop
iret
movsl
hlt
leave
mov
in
test
and
inc
adc
lret
lahf
mov
mov
or
test
dec
stos
sbb
and
mov
popa
jns
int3
xchg
call
les
pusha
cwtl
mov
lods
test
cltd
cwtl
jb
xor
pushf
pusha
xor
lret
jge
pop
mov
push
add
jb
pop
mov
add
xor
ss
push
pop
daa
dec
ss
xor
stc
popf
jmp
inc
lret
cmpsl
pusha
lds
push
sub
data16
mov
insl
pop
xor
das
add
mov
adc
jecxz
xor
daa
push
add
cli
mov
ljmp
test
test
pop
mov
in
jno
xchg
xchg
sbb
dec
lock
adc
push
loopne
negb
subb
mov
sbb
inc
cmp
insb
dec
inc
push
popf
mov
outsb
lds
push
mov
cs
cmpsl
das
jae
jg
push
ror
insb
adc
lock
lea
mov
jns
daa
int
sub
adc
xchg
jge
sti
aas
rcrl
filds
popf
add
jae
mov
imul
dec
rcrb
inc
loope
cmpsl
fcmovnu
and
repnz
cld
sahf
repnz
or
sub
sbb
xor
mov
push
es
rcrl
cwtl
rorb
adc
addr16
adc
xchg
int3
push
mov
adc
bnd
scas
lds
jo
icebp
sarb
and
out
mov
loopne
andl
jg
cmp
enter
cmpsl
lcall
fmull
push
add
imul
inc
dec
sub
in
es
pop
or
in
shrl
dec
sti
hlt
imul
push
jp
mov
pop
cmp
push
lods
jle
loope
addr16
dec
xor
das
sti
push
repnz
ja
dec
jbe
lret
ficomps
lods
xchg
xor
add
dec
loope
test
mov
jbe
sahf
mov
gs
gs
add
outsb
test
push
jbe
scas
lahf
push
and
cmp
xor
and
dec
mov
fwait
lds
mov
outsb
in
cmc
aaa
loop
dec
loope
and
sahf
or
movsb
pop
pop
mov
dec
in
dec
jae
test
xchg
and
jbe
fisubs
filds
icebp
das
mov
mov
cltd
iret
or
lods
les
mov
outsl
mov
mov
or
and
icebp
mull
dec
sbb
pop
sub
cmpsl
mov
icebp
inc
shrl
fs
lock
sahf
jl
outsl
xchg
add
dec
mov
jge
and
outsb
pop
inc
aas
mov
xchg
sbb
inc
cmp
lret
sti
sub
add
add
mov
adc
rorl
addr16
cmc
mov
shll
cmpsl
insb
ss
xchg
inc
insl
xor
outsb
xor
sbb
andl
mov
sbb
cmc
mov
cwtl
fwait
push
inc
mov
cmp
cmpsb
enter
mov
mov
or
fcmovnb
jl
sub
ds
stc
dec
jge
sbb
icebp
xor
add
xchg
iret
push
rcrb
add
mov
and
mov
or
jb
sub
ret
xor
mov
in
sbb
mov
movsb
sbb
jge
push
add
scas
cltd
mov
call
sti
sti
cli
inc
jl
mov
sbb
jnp
cmp
into
sahf
inc
lods
and
push
hlt
adc
pop
jge
sti
xchg
cmc
xor
andl
jnp
dec
into
pop
add
inc
xor
xchg
test
sub
enter
mov
push
xor
rorb
xor
and
mov
shll
sbb
movsb
fisubl
call
fadds
pop
int
dec
pop
add
sbb
rorb
aam
mov
push
fistpll
es
insl
pop
mov
test
xor
leave
fcmovnu
fisttps
push
push
jne
loop
out
cmp
repnz
test
jae
movsb
add
dec
xorb
out
pushf
push
mov
js
push
stos
pop
xchg
fisttpl
inc
inc
lea
dec
mov
mov
fildll
xor
out
push
adc
gs
scas
jb
push
aaa
mov
xor
clc
fmuls
test
mov
stos
and
std
mov
pop
xor
jo
push
mov
cmp
xlat
scas
sub
cmp
shl
push
pop
cmpsb
add
mov
movsl
mov
shll
sbb
inc
sbb
fdivl
repnz
add
pop
hlt
jecxz
inc
mov
or
cmpsb
mov
outsb
dec
xor
mov
mov
add
repnz
jmp
ss
movsl
add
push
ds
cli
outsl
in
sbb
into
add
outsb
push
mov
push
ja
adc
imul
das
sbb
and
gs
shrb
xor
xchg
and
adc
pushf
pop
test
stos
shlb
sbb
hlt
test
aam
sbb
jnp
inc
jp
lea
mov
xchg
xchg
lock
adc
inc
xchg
cs
fidivrs
div
mov
xchg
xchg
adc
inc
cs
js
mov
rcll
int3
inc
mov
mov
dec
push
add
imul
and
jmp
fimull
int
outsb
add
popf
hlt
dec
dec
repnz
mov
data16
cmp
or
mov
xchg
arpl
add
or
jmp
hlt
push
shll
adc
mov
rorl
in
in
and
cmp
sub
mov
call
call
xlat
mov
icebp
add
sbb
sub
sbb
test
xchg
cmp
pop
fldenv
jnp
inc
mov
mov
fbld
jns
fwait
insb
push
and
and
push
fs
push
push
add
andl
stos
lods
inc
add
push
jnp
push
or
lds
fldenv
pop
pop
xchg
or
aad
loop
orb
in
fiadds
cmp
xor
and
push
mov
dec
cltd
pop
push
cmpsb
mov
pop
jns
data16
and
and
adc
and
fsubl
fstpt
lret
push
std
cmc
divb
stos
or
in
outsl
call
sahf
adc
adc
push
stc
hlt
dec
pop
xor
xor
js
jle
adc
loopne
in
push
or
xor
loope
sbb
out
sbbl
push
out
es
sub
push
dec
test
add
lcall
inc
ljmp
bound
adc
in
push
mov
or
mov
lods
outsl
and
jg
rol
arpl
jns
stos
xor
pop
dec
cmc
popf
push
inc
jnp
mov
inc
adc
xor
mov
pop
ljmp
xchg
pop
les
jmp
mov
std
ret
adc
cltd
bound
cmp
jp
xlat
clc
ficomps
mov
negl
jl
fs
and
push
stos
jmp
mov
cli
clc
xor
pop
in
jb
xor
jno
sub
cmpsb
inc
cmc
push
push
out
sub
jmp
jecxz
fs
pop
outsb
or
or
jo
xchg
fstl
push
addl
cmpsb
dec
mov
pop
aam
enter
popf
movsl
jmp
enter
popf
pop
out
mov
shl
in
cs
out
icebp
cmovnp
inc
ljmp
or
adc
ret
ret
or
les
push
cmp
nop
pop
xchg
sbb
in
pop
hlt
ja
cmp
insl
mov
ret
jmp
repz
dec
pop
js
jae
mov
mov
gs
sub
xchg
and
call
jb
aaa
sbb
lahf
mov
mov
xchg
pop
lods
iret
push
out
adc
bound
inc
cmpsl
enter
rcrb
aad
inc
cmc
repnz
dec
loope
cmp
xchg
scas
iret
push
mov
pop
rclb
sub
stos
fistpll
aaa
mov
jmp
filds
loopne
cltd
test
cld
call
cwtl
xchg
dec
add
out
nop
into
outsb
cmpb
aas
hlt
or
arpl
fincstp
mov
insb
out
jbe
mov
iret
push
dec
repz
mov
stos
je
adc
lea
push
in
inc
mov
xor
lret
xchg
mov
push
xor
jbe
lods
bound
add
jge
mov
pop
cmp
or
addr16
in
test
mov
mov
imul
bound
pushl
lahf
js
inc
shlb
flds
jecxz
xchg
xor
sahf
pop
mov
sub
bound
das
dec
jne
cmpsb
aaa
testb
std
push
cmp
pop
fisttps
rol
jg
mov
test
jno
cld
fucomi
xor
xchg
scas
sbb
frstor
cmpsb
push
mov
in
add
mov
adc
ret
repz
xchg
and
mov
test
jo
aam
adc
cmovno
mov
inc
aas
mov
nop
xor
xchg
or
dec
mov
or
xor
mov
stos
push
pusha
xchg
mov
dec
mov
clc
data16
ljmp
mov
adcb
outsb
jne
lock
cld
pop
xor
lcall
scas
in
mov
lsl
or
cmc
nop
shlb
inc
mov
sub
addr16
fneni(8087
jle
xchg
push
shrb
enter
gs
xchg
xchg
or
push
pop
mov
xor
out
in
xor
mov
sahf
jp
sub
push
sub
push
cmp
fcmove
and
movsb
pop
jg
or
aam
mov
mov
pop
or
xchg
xor
mov
jp
fstps
scas
pop
leave
mov
jnp
in
jp
mov
std
jbe
or
xchg
mov
and
sbb
push
aad
add
cmp
mov
dec
pushf
sbb
rorl
mov
push
inc
jl
xor
or
sbb
out
add
mull
cs
movsb
mov
inc
lcall
or
push
add
and
jp
jl
int3
in
xchg
jmp
jne
add
je
mov
inc
fldl
jecxz
xorb
inc
test
pop
hlt
cli
sub
fmuls
dec
fnsave
stos
int
loope
sbb
gs
cld
mov
out
pop
lea
cwtl
push
mov
or
ficompl
test
subl
mov
daa
iret
xchg
fsub
pop
ret
out
lock
dec
cmp
imul
lret
lret
push
pusha
or
mov
mov
pop
sbb
jnp
push
cli
arpl
sbb
je
fistps
int
xor
lcall
cmp
sub
mov
push
dec
hlt
adc
popf
iret
adc
test
dec
add
cmp
movsb
shlb
aaa
outsl
jns
adc
mov
shll
mov
inc
xchg
xchg
inc
clc
pop
mov
inc
xchg
enter
mov
int
add
loop
push
aad
xor
ret
inc
jo
mov
cltd
bound
into
adc
fdivl
push
dec
add
xorl
das
outsb
mov
inc
iret
cmc
pop
out
mov
sbb
mov
xchg
les
sbb
push
out
dec
xchg
pop
add
arpl
fnstsw
mov
js
lods
cmpsb
xchg
mov
mov
add
fdivp
cmp
pusha
test
xor
roll
or
ja
push
jg
test
fstpt
pop
lods
adc
jmp
mov
and
ds
xchg
aas
mov
pop
std
adc
fiadds
ss
inc
push
sbb
jmp
jns
dec
cmp
mov
mov
push
cmp
test
pushf
pop
mov
xchg
lock
mov
outsl
fdivr
sbb
outsl
test
fildll
mov
rcrb
or
repnz
cltd
cli
push
repz
push
rsm
inc
pop
shrl
xor
xchg
push
lret
lock
jp
scas
fidivs
xchg
xchg
iret
pop
test
xchg
push
pusha
pop
xor
and
enter
bnd
test
lea
lcall
insl
movsl
adc
push
dec
push
imul
bnd
pop
or
outsb
or
add
xchg
push
xchg
xchg
jge
mov
test
nop
fwait
aam
ja
lea
cltd
pop
mov
adc
mov
jno
push
repnz
repnz
pop
iret
xchg
call
stos
pop
push
vshufps
jbe
in
dec
jmp
fisttps
sbb
xlat
mov
lret
movsl
jnp
in
pop
and
push
mov
sub
cmp
cmp
pop
daa
js
fwait
push
mov
add
pusha
push
mov
cmp
xor
sub
cmpl
push
cmp
pop
add
decl
xchg
into
add
sti
add
pop
mov
rcll
jno
xchg
or
enter
lods
je
out
xor
mov
roll
mov
or
or
xchg
mov
aam
mov
cmp
scas
test
pop
aam
mov
scas
out
xlat
into
push
dec
jg
lds
test
outsb
test
xchg
es
push
rol
psubsb
lds
jno
enter
pushf
pop
xor
jb
popf
cmp
or
cmp
in
and
xor
in
cmp
push
cwtl
aaa
inc
add
popa
sub
xor
sbb
pop
sti
push
out
inc
cmp
test
inc
gs
shrb
mov
je
les
jp
adc
xor
aad
mov
push
into
xchg
mov
sub
fstpl
mov
out
icebp
outsl
xchg
inc
sbb
lock
mull
stos
push
nop
jo
or
xor
add
jle
outsb
outsb
mov
xchg
inc
mov
test
or
ficompl
mov
push
adc
jl
lret
lret
jo
xchg
ja
mov
les
push
cmc
sahf
xchg
pushf
into
ss
dec
cmc
inc
popf
xchg
or
adc
out
lahf
dec
mov
mov
shlb
xchg
aad
daa
add
sub
shl
movsl
sub
mov
push
imul
cmp
repz
or
mov
inc
inc
das
xor
xchg
pop
add
cli
and
lret
rcll
sbb
jae
ficompl
push
rcll
dec
xchg
add
scas
pop
jl
pop
in
adc
inc
fldl
adc
ret
xor
adc
ljmp
adc
cld
test
add
adc
es
sub
dec
dec
adc
and
jmp
add
mov
adc
inc
stc
mov
xchg
mov
ljmp
cmp
and
adc
repnz
pushfw
sbb
out
ss
sub
mov
pop
mov
packsswb
mov
add
add
dec
and
rorb
cmc
mov
out
ja
into
push
pop
adc
fists
rclb
dec
and
xchg
cld
push
xor
mov
sub
imul
pop
in
jp
pop
mov
add
or
cmp
outsl
xchg
or
dec
fsts
fnstenv
loopne
pavgw
push
dec
es
push
ds
fistpl
cmp
repnz
jg,pn
cmp
sahf
xor
push
imul
ret
js
adc
pop
in
test
test
daa
pop
dec
xchg
xchg
mov
enter
dec
sub
sub
sahf
or
xor
jle
jne
das
sbb
lcall
xchg
imulb
and
in
push
add
xchg
int
sarb
add
or
pop
sbb
je
mov
xor
test
mov
cmp
imul
lods
pop
dec
fists
jl
decl
dec
leave
lods
push
loopne
fucom
pop
xchg
test
loope
xor
int
jmp
mov
sbb
fcoms
in
xor
xchg
test
add
fldt
mov
lcall
jns
fbstp
sub
cwtl
add
mov
shlb
mov
outsb
scas
mov
imul
insl
mov
shr
mov
cmp
adc
loop
inc
xor
inc
adc
inc
nop
or
mov
shl
lcall
lods
pop
xchg
cmp
mov
xor
sub
sarl
sub
mov
dec
daa
out
pop
repz
out
test
leave
sbb
jbe
xor
loop
dec
pop
cmpsl
cmpb
push
fwait
mov
xchg
leave
test
add
ret
orb
test
adc
pop
jne
in
scas
or
lods
jb
clc
inc
jmp
sub
js
pop
sub
ljmp
pushf
pushf
xor
mov
data16
or
mov
lods
dec
cmp
jnp
and
adc
pop
jae
cld
mov
or
scas
scas
rolb
mov
ds
pop
das
lock
mul
mov
aaa
sti
mov
push
icebp
cmp
lret
gs
lcall
mov
sbb
lret
dec
into
push
lds
cmp
mov
iret
add
pop
loopne
sub
cmp
push
jns
and
lds
stc
insl
je
jnp
xor
imul
test
stos
pop
jp
mulb
dec
popf
test
mov
fs
bound
or
ss
out
jb
pusha
mov
lea
pop
add
xchg
std
xchg
adc
fisubrl
mov
push
rclb
dec
loop
fsubs
push
or
sbb
dec
cs
stos
sbb
hlt
fstpt
cli
xor
iret
mov
dec
lds
push
inc
lcall
xor
adc
cmpsl
or
mov
vsqrtpd
jb
or
fwait
pop
jo
popf
loope
xor
adc
iret
pop
fbld
repnz
mov
dec
sub
nop
test
stc
add
and
stos
cmp
movsl
push
divb
or
sub
mov
sbb
mov
pop
pop
popa
test
dec
int
mov
dec
inc
push
aad
mov
ss
test
jmp
outsb
repz
mov
xor
icebp
popa
mov
fld
xchg
xchg
arpl
dec
push
out
xchg
inc
mov
push
lock
cmp
mov
int3
add
pop
pop
mov
pop
icebp
and
push
sub
xlat
repz
add
add
scas
loopne
mov
mov
sbb
mov
adc
sbb
cwtl
ljmp
push
arpl
jno
add
clc
xor
or
dec
ds
ror
xchg
push
push
cli
pusha
mov
push
cmp
pop
psubusw
roll
push
addr16
lret
lahf
jbe
ret
xor
mov
mov
out
clc
mov
or
popf
lret
pop
bound
or
mov
daa
fs
std
dec
adc
jge
in
or
or
lret
sub
jns
data16
xchg
shll
ret
mov
fwait
bound
hlt
std
int
insl
fdivrp
das
mov
sbb
sub
xchg
movsb
sbb
fnstcw
in
mov
jl
insl
xchg
jp
push
mov
ror
or
mov
loope
jae
movsb
dec
lahf
pop
xchg
sbb
popa
dec
in
into
xchg
jo
scas
push
sub
je
cmpsb
push
stos
cmpsl
add
jnp
mov
hlt
pushf
pop
iret
idivl
cmp
gs
hlt
cld
lahf
sarl
fidivrl
cmp
movsb
or
or
das
lret
fcompl
sub
out
xchg
clc
mov
jmp
aas
add
pop
jmp
xchg
jne
push
or
cli
arpl
adc
add
lods
mov
push
lret
mul
jg
cmp
clc
jmp
jnp
sbb
lret
mov
addl
and
push
das
dec
rol
sub
notb
jmp
fs
sub
mov
ret
sub
mov
inc
pop
inc
inc
inc
sub
flds
cmpsl
sbb
lock
cmp
scas
shll
dec
mov
jb
sub
test
push
scas
cmp
and
pushf
jge
dec
sub
sbb
sarl
push
cmp
xor
iret
push
sub
mov
xor
mov
adc
scas
inc
andl
fistl
sub
es
les
movsl
bound
enter
imul
hlt
dec
push
push
inc
adcb
test
jge
pop
jecxz
fwait
cmpsb
jecxz
aaa
outsl
xchg
scas
movsl
pop
jecxz
scas
jl
ret
push
mov
mov
pushf
push
jne
dec
lahf
jecxz
lret
xchg
add
sub
push
push
jge
or
ret
test
pop
sub
push
and
or
adc
dec
idivb
jns
bound
out
pop
mov
push
pop
lret
movsl
push
and
mov
mov
pusha
int
fadds
sub
ret
in
ljmp
stos
into
fnstenv
sub
jo
loope
fists
movsl
repz
pop
xlat
push
cmp
out
into
rcll
ljmp
inc
mov
cmp
orl
push
sbb
jge
xor
xchg
pop
scas
fs
xor
adc
les
daa
mov
mov
pop
pop
xchg
xchg
and
lods
mov
orl
lods
ljmp
repnz
xor
xlat
loope
into
adc
fsubr
or
xchg
data16
lret
jp
insb
stc
je
in
clc
adc
mov
mov
mov
add
push
and
fsubs
es
adc
push
xor
rol
data16
mov
inc
pop
hlt
orl
mov
cs
int3
fs
pop
outsl
fmul
jl
sbb
sarl
fwait
push
inc
sbb
fadd
lds
push
adc
xor
or
push
inc
mov
das
or
sub
stos
xlat
sbb
jnp
mov
sahf
repnz
adc
sahf
and
in
cwtl
mov
insb
xor
arpl
mov
sub
and
outsl
mov
das
out
xchg
cs
test
inc
adc
push
dec
idivl
lret
test
and
out
jno
testb
pop
mov
mov
out
push
cmp
addl
int3
stos
and
xchg
xor
out
movsl
je
fs
mov
dec
testl
aad
fnstcw
clc
pop
repnz
adc
lods
push
xor
mov
movsl
loopne
arpl
loope
shl
fisubrs
pop
xchg
test
fcoms
jle
pop
jns
roll
pop
jmp
sbbb
mov
in
aaa
call
lods
subl
mov
lods
add
mov
cmp
add
dec
jbe
pop
dec
dec
negb
push
loopne
ljmp
movsl
jmp
xchg
and
pop
into
std
add
int
les
inc
hlt
cmpsb
mov
and
mov
jne
jbe
call
cli
mov
cmp
jg
je
jge
xlat
xchg
push
pop
push
xchg
out
mov
push
adc
pop
inc
add
fistpl
jbe
outsl
ret
xchg
push
lret
jle
adcb
mov
mov
orb
push
xlat
adc
jb
in
dec
test
sbb
jo
fmuls
push
stc
xlat
clc
inc
test
fwait
roll
lock
cmp
or
xchg
cmp
mov
daa
sub
xchg
ret
aam
jl
decb
mov
fstpl
jns
and
jno
dec
sbb
ret
dec
aad
jmp
add
pop
iret
cmp
popf
or
pop
xchg
popa
repnz
pop
mov
pop
shrl
ret
sarl
or
pop
es
or
pop
or
div
add
cmp
push
push
push
ret
add
pop
pop
mov
mov
add
sub
int3
adc
inc
cli
pop
jno
bound
jg
lea
sbb
pavgb
mov
pushf
push
push
push
fwait
xchg
mov
lcall
bound
jl
loopne
call
inc
lea
xchg
jae
jo
mov
movsb
push
add
mov
mov
sbb
daa
jge
mov
aam
push
pop
bswap
jl
psadbw
cmc
xor
je
into
push
outsb
sti
mov
fst
or
ja
in
lcall
ja
lods
sub
cmpsl
int3
pop
fdiv
or
mov
cmpsl
mov
js
jno
shrl
xor
icebp
loope
ret
inc
movsb
inc
stos
xchg
aas
enter
flds
sarl
inc
jbe
rcrb
mov
push
add
sahf
sbb
or
pusha
jne
or
das
xor
js
aam
sub
leave
test
sub
or
out
or
jo
pop
popa
pavgb
nop
jmp
jecxz
out
push
loopne
divb
movsb
add
jbe
pop
sbb
mov
jbe
mov
and
xchg
push
movsb
mov
and
adc
arpl
cmp
cmpsb
nop
sub
add
aas
push
inc
mov
jg
icebp
xchg
fwait
mov
pusha
negl
adc
push
and
test
loope
jmp
dec
adc
mov
cmp
add
scas
xor
pop
dec
xchg
xor
dec
popf
inc
mov
les
aad
sbbl
sbb
hlt
adc
push
jbe
cmp
aad
cmpsl
mov
sbb
mov
adc
pop
jno
sbb
dec
es
enter
mov
mov
cmp
ds
test
xchg
mov
fisubrl
addr16
and
cbtw
mov
pop
loop
outsl
dec
mov
mov
nop
mov
and
adc
pop
sbb
pop
and
or
popa
stc
inc
or
scas
je
adc
cmp
aam
ljmp
sarb
jmp
pop
loop
inc
mov
and
mov
push
repz
cwtl
jle
jp
xorb
mov
sbbb
jmp
adc
add
dec
lret
lea
xor
bound
iret
mov
jne
rcr
mov
pushf
es
std
mov
clc
mov
xor
mov
insb
jmp
loop
and
ja
sub
xchg
sub
loope
push
addr16
add
addr16
das
mov
dec
hlt
lea
pushw
fisubrs
pusha
jg
pop
repz
push
rol
mov
int
xor
xchg
push
mov
rol
and
xlat
subl
pop
dec
movsl
sar
gs
mov
mov
leave
and
test
cld
fisttpl
mov
jnp
mov
mov
push
pminsw
fistl
sub
jnp
movsb
lahf
cs
hlt
jecxz
aad
cld
inc
sbb
push
scas
shrb
imul
mov
loopne
push
enter
mov
and
scas
lret
mov
sub
popa
lret
iret
jae
jmp
xchg
pushf
out
xlat
mov
leave
xor
loopne
push
scas
push
orb
mov
inc
js
inc
movsl
xorl
or
pusha
dec
and
imul
sbb
repnz
mov
sub
jle
rcrl
pop
inc
mov
fs
into
mov
lahf
sti
and
sbb
xchg
arpl
jl
fcmovu
inc
or
iret
adcl
sarb
and
pop
jl
sbb
add
jp
and
cld
add
sbb
sbb
pop
out
negl
cltd
mov
mov
rcll
sbb
iret
in
ret
adc
loopne
sbb
inc
cli
add
push
enter
nop
pop
out
test
xchg
and
or
adc
mov
imul
sbb
cmp
outsl
into
popf
gs
inc
or
jmp
call
cmpsb
xor
call
sbb
xor
cltd
or
mov
push
mov
sahf
xchg
mov
cmp
pop
data16
xor
jecxz
jae
push
cmpsl
mov
shrl
sbb
aas
xchg
rcll
pop
cwtl
mov
pop
ljmp
or
hlt
cmp
or
faddl
add
sub
sbb
and
enter
aam
sub
adc
fld
cwtl
iret
popf
rolb
xor
dec
push
push
je
jmp
mov
mov
imul
out
push
sbb
push
ret
and
mov
or
lret
and
jno
mov
and
mov
and
pop
push
aad
sbb
bnd
add
add
or
bound
pop
push
movsb
mov
ficoms
sbb
cmp
adc
jo
fcmovnbe
rcl
pop
je
sbb
scas
outsb
pop
mov
aas
pop
cmp
out
divb
adc
mov
inc
out
mov
leave
or
cmp
gs
jno
out
addr16
sub
xrelease
push
addr16
pop
and
cmp
out
xor
push
cmp
shlb
push
mov
cmp
addr16
pusha
add
cld
cmp
cmc
das
xchg
mov
ret
pop
push
cs
mov
pop
sbb
lock
cmpb
mov
xor
xchg
and
pop
push
pop
cltd
push
cmp
adc
daa
ss
aaa
fidivrl
fwait
push
adc
sbb
in
leave
add
lret
push
lds
mov
mov
jo
mov
xor
jne
js
sub
pop
sub
mov
xchg
iret
inc
outsl
mov
jne
into
adc
inc
ds
das
push
jns
push
inc
mov
cld
sbb
nop
arpl
stos
test
mov
fnstcw
sbb
or
mov
cmp
jns
sub
lock
adc
and
lcall
add
es
xor
pushf
loope
fstps
ret
push
in
or
mov
enter
lds
sub
sbb
pushf
cltd
pop
lock
or
loop
pop
ret
xlat
mov
sub
sahf
jmp
aad
bnd
sti
cmp
jns
fwait
sbb
cmpsb
mov
bound
jnp
jmp
subb
scas
sti
cmp
roll
pushf
sahf
ljmp
or
fnstcw
mov
rclb
push
push
es
loop
cmp
mov
inc
test
add
pop
stos
stc
lods
mov
aas
inc
xor
bound
sub
jg
lret
roll
inc
ret
pop
les
adc
nop
gs
and
inc
pushl
jmp
iret
in
repz
out
es
push
adc
loope
sub
jbe
rol
sahf
mov
je
pop
insb
lahf
mov
mov
dec
xchg
aam
fcmovne
xchg
xchg
imul
js
cmp
inc
lds
rorl
xor
fistl
loope
pop
cwtl
notb
leave
push
mov
pushl
jle
movsl
pop
in
aad
subps
ficompl
jne
add
adc
dec
int
or
in
push
int
cmp
xchg
ljmp
xchg
mov
pop
sti
mov
and
adc
xchg
ljmp
stos
iret
ds
xor
dec
xchg
cwtl
in
les
xor
mov
insb
mov
xchg
add
clc
jo
inc
mov
lret
mov
shl
bound
xor
xchg
adc
sti
mov
mov
xor
adc
xor
lcall
inc
mov
ds
pop
sarb
mov
scas
loop
cmp
push
mov
out
ret
add
lret
mov
mov
iret
inc
add
scas
pop
repz
dec
jle
lcall
cmc
xchg
xchg
add
sub
push
aaa
lds
mov
xor
es
sub
mov
fsubrs
daa
das
pop
rcl
fisttpll
popl
sub
scas
sbb
loop
aad
push
dec
iret
push
sbb
cmp
cli
pop
movsb
xchg
inc
pop
js
enter
cmp
outsl
xchg
cld
data16
add
or
call
inc
mov
outsl
out
jne
lret
jns
out
iret
ljmp
mov
out
dec
inc
jno
repz
decb
xchg
lock
ss
jnp
fsubr
rorl
mov
mov
push
scas
insl
lods
dec
dec
jg
mov
inc
and
mov
mov
test
int3
lods
popf
outsl
push
leave
pop
mov
ljmp
sbb
xlat
insl
and
aad
mov
cmp
and
fimull
cmpsl
pusha
ss
xor
push
cltd
add
add
push
test
jns
addb
mov
xor
add
pop
in
cmp
imul
xchg
adc
lcall
cli
add
test
in
lret
pop
and
sub
xlat
mov
sbb
adc
push
lret
iret
je
mov
testl
dec
xor
cmp
scas
mulb
div
and
pop
out
or
lcall
push
jne
sbb
cwtl
dec
push
mov
and
outsb
xchg
daa
mov
xor
mov
xor
test
cmpsl
ds
aaa
arpl
mov
inc
and
notl
fcoms
adc
inc
inc
sbbl
cli
rorl
popf
or
scas
pop
sbb
pop
mov
hlt
lahf
cmp
xchg
xchg
xchg
cmp
xchg
repnz
mov
sahf
sbb
int3
jecxz
in
xchg
aaa
scas
cmc
and
and
xor
xchg
push
mov
mov
ja
cmpsl
add
popf
sti
push
je
inc
addr16
mov
jns
sub
mov
pop
cmpsb
and
inc
mov
xor
pop
fcomp
shl
lock
xchg
cmp
sbb
ds
data16
or
xor
lret
jno
fidivrs
cld
jmp
das
stos
mov
pop
cltd
aam
sbb
add
or
mov
adc
sahf
jmp
adc
and
nop
popf
mov
clc
mov
push
outsb
mov
sbb
out
insl
rcrl
mov
push
dec
mov
push
or
xchg
lcall
adc
imul
stos
xchg
test
test
pop
fnsave
ss
mov
inc
aad
adc
loop
js
insb
movsb
in
fbld
inc
inc
gs
adc
sub
mov
je
cmc
xchg
xor
xchg
arpl
xchg
push
jmp
out
xor
out
jle
int
lcall
mov
or
dec
mov
stc
cmpl
mulb
out
cld
scas
insl
movsb
jl
adcl
add
test
shlb
divl
daa
jb
lcall
pop
addr16
arpl
cmpb
clc
sbb
fbstp
pop
sub
popa
or
add
lcall
cwtl
je
mov
pop
and
sbb
ret
std
outsb
sub
sbbb
push
or
xor
subb
jmp
add
jne
lds
and
icebp
adc
ficompl
sahf
xchg
mov
jmp
add
push
and
ret
jns
sarl
sub
xor
fdivrl
jbe
sbb
fucomip
inc
or
insb
fbstp
push
ljmp
jg
dec
testb
push
sar
pop
pop
mov
popa
shrl
in
fwait
dec
xor
loope
fistpll
pusha
out
ret
pop
hlt
mov
sbb
outsl
jge
cs
mov
push
jns
leave
push
leave
out
mov
push
jge
ljmp
xchg
fistpll
push
movb
daa
ja
into
mov
mov
mov
fwait
mov
mov
vmread
jmp
fisubl
add
dec
sarl
fwait
outsb
int
dec
pop
mov
dec
add
in
xor
rep
xor
push
pop
sub
fmuls
jns
and
pop
test
or
mov
out
cmp
dec
or
clc
push
adc
add
xchg
imul
aas
gs
push
sbb
mov
and
jnp
aad
sbb
nop
sarl
jns
or
fmul
ds
push
jmp
shll
or
pop
outsb
push
popa
ret
pop
aas
mov
ret
xorb
adc
rorl
and
out
sti
mov
jbe
jbe
call
addb
jb
leave
pop
xor
add
xor
xor
ret
sbb
mov
stos
ss
fwait
data16
cmp
adc
shll
pop
cwtl
pushf
dec
data16
dec
adc
rorl
pop
add
test
enter
lret
xchg
je
aad
inc
mov
aas
outsl
inc
mov
pusha
push
sub
sub
and
test
mov
push
push
and
in
sbb
sahf
jne
loope
mov
gs
adc
ficomps
lds
loop
mulb
imul
in
repz
out
pop
mov
es
movsl
stos
or
stc
dec
leave
rcrl
mov
fcmove
dec
mov
lret
stc
jge
out
leave
jns,pt
pop
test
or
insl
clc
mov
mov
cmp
jae
mov
loop
ja
mov
jnp
mov
setno
cmc
pushf
neg
adc
orl
add
pop
xchg
mov
lcall
out
jmp
fistpl
lds
test
push
daa
jl
mov
mov
mov
cmp
stos
mov
gs
ds
call
xchg
cmp
loopne
vmovdqu
or
pop
add
or
sbb
call
mov
in
mov
jle
fsincos
sub
lret
or
lock
xchg
mov
repnz
addr16
fnstsw
lock
push
cli
popa
ja
out
push
mov
mov
les
aaa
jae
or
or
xor
loopne
push
in
ljmp
fs
xor
adc
dec
pushf
clc
and
xchg
push
sbb
jmp
sbb
dec
xchg
adc
add
sbb
xchg
push
push
xor
sahf
mov
je
mov
sub
push
je
inc
inc
loopne
or
mov
pop
xchg
xchg
shlb
pop
jg
scas
ds
xor
lret
repz
jl
mov
dec
clc
test
sub
cmp
rorb
cmp
or
jbe
je
in
jno
sbb
rcrb
lahf
mov
sbb
adc
and
mov
fisttps
scas
cli
jo
and
movsb
rcr
mov
or
or
wbinvd
pop
pop
push
jge
dec
call
jp
fs
cmpsl
mov
sbb
pop
sbb
imul
pusha
call
fstps
add
jl
push
ljmp
jge
jg
into
dec
shll
and
dec
pop
es
lcall
lock
lret
and
dec
ljmp
sbb
mov
sbb
xlat
dec
push
aad
adc
out
mov
or
rcll
aam
test
jo
pop
fwait
sub
add
outsl
repz
into
lods
mov
popa
mov
mov
shl
shlb
push
sub
cmpsl
lcall
cmpsb
mov
and
add
sub
cmp
filds
jle
pop
dec
push
add
push
xchg
mov
pop
shl
lods
push
jo
inc
mov
mov
data16
in
and
cli
dec
push
bswap
sbb
xchg
fwait
adc
inc
rolb
add
sbb
out
inc
sahf
sti
aad
mov
sub
sti
cmpsl
jns
add
loopne
popf
sub
xchg
lods
mov
test
dec
adc
cmp
cld
push
loop
jmp
sub
leave
scas
insb
inc
mov
pop
push
sub
jo
shlb
cmp
pop
imul
push
adc
pop
ljmp
dec
aad
cmpsb
cmp
mov
jnp
stos
mov
mov
or
pop
mov
jns
push
fxch
bound
aad
add
orb
and
jbe
cmp
sub
cmc
outsl
xor
xor
popf
add
addl
mov
xchg
addr16
movsb
mov
cld
sbb
ss
ret
push
pop
sbb
lret
sti
inc
aad
fs
mov
or
dec
and
adc
push
inc
sub
arpl
sbb
fninit
in
in
push
leave
sahf
push
jns
dec
shrb
sbb
ja
in
jl
addr16
insl
xor
pushf
xchg
xchg
cmp
repz
cld
sti
pop
js
imul
push
jmp
mov
cmp
xor
lods
sub
pusha
je
sub
scas
stos
jecxz
or
cmp
push
mov
xlat
imul
daa
cs
aam
xor
imul
xor
stos
shlb
lahf
sbb
mov
imul
push
fbstp
lds
outsb
ret
out
sahf
mov
ret
pop
adc
lret
push
sti
mov
mov
cli
out
and
fstl
pop
sti
iret
shrb
sbb
icebp
sbb
iret
pop
das
pop
jo
xor
sbb
leave
sbb
hlt
sarl
add
scas
bnd
push
fwait
repz
les
xor
fdivs
in
cwtl
sbb
lahf
test
popa
ficoms
or
push
test
push
movsb
jbe
push
sahf
jno
push
dec
jle
xor
ret
negb
movsl
lock
cmpsb
jae
sahf
test
adc
push
aaa
sub
shll
fwait
dec
pop
adc
aad
mov
adc
dec
or
or
pop
and
inc
pop
cmp
jmp
popf
std
rorb
jg
lds
shlb
push
mov
lea
xor
lds
push
xchg
cmc
dec
iret
inc
or
jmp
xlat
roll
bnd
pop
daa
cmpsl
lods
imul
xchg
xor
gs
push
inc
repnz
test
jnp
mov
or
and
mov
push
jns
sti
lcall
ds
jmp
cmp
and
lea
jae
out
es
push
ja
jle
xor
pop
das
es
aad
pop
dec
cltd
sbb
dec
fs
insl
cltd
adc
bound
aaa
xchg
stc
insl
inc
orb
mov
fidivrl
imul
cmp
sub
adc
negb
xchg
icebp
adc
stc
xchg
jecxz
loopne
daa
sub
cltd
adc
xor
ja
fcomps
dec
in
es
cmp
test
mov
arpl
mov
sub
xorl
pop
pop
xchg
cld
mov
in
js
pop
jge
loope
lret
push
push
push
and
fsub
mov
or
push
call
mov
jae
jge
xchg
lds
addr16
jg
xlat
imul
mov
or
push
push
scas
imul
add
test
pop
jns
jo
push
hlt
dec
mov
das
fcoml
fbstp
iret
enter
in
es
lock
push
mov
fcomi
lods
cmp
lock
outsb
and
mov
dec
pop
cmp
lahf
sbb
cmp
cli
cltd
cmp
xor
insb
lret
cmp
sbbb
bound
in
js
mov
addb
adc
xchg
frstor
mov
xor
push
test
xchg
mov
push
movsb
or
pop
es
dec
mov
cmp
frstpm(287
movsl
stos
cld
stos
int
mov
fwait
lea
outsb
mov
popa
test
mov
dec
jle
ss
lret
shlb
pop
adc
enter
popf
inc
in
js
call
repz
stc
and
mov
jg
mov
aad
hlt
aas
rol
dec
cmp
dec
cmp
outsl
dec
stos
adc
pop
in
enter
idiv
fwait
inc
xchg
dec
popa
icebp
clc
test
out
cmp
and
rcrl
mov
jle
push
sub
or
cmp
push
imul
xchg
push
sti
mov
bound
sahf
push
or
dec
and
xchg
loop
or
ret
add
int3
fsts
inc
or
push
insb
rolb
sbb
lret
int
cltd
cld
add
in
sbb
inc
divpd
in
cmpsl
push
cmp
jge
cmp
add
in
ret
mov
stos
jle
ret
fsubp
cmp
xor
es
stos
adc
pop
lods
or
pop
add
ljmp
rol
xchg
add
and
sub
addr16
push
inc
dec
jns
mov
mov
call
inc
sub
jo
inc
jbe
sbb
sti
iret
mov
mov
xchg
popa
jp
dec
sub
test
push
out
rcll
in
fwait
pop
ret
insb
cmpsb
add
jle
ljmp
sbb
fcoml
mov
mov
fwait
dec
test
in
inc
xchg
daa
xorl
xchg
adc
int
pushf
lods
stos
inc
jecxz
add
js
add
fsubs
sahf
stos
jmp
dec
outsl
push
mov
movsl
daa
icebp
inc
jne
cmc
shll
andl
jmp
out
test
jb
inc
out
pusha
cltd
add
into
sub
pop
cmpb
ret
jo
adc
testb
insl
mov
nop
sub
fwait
inc
addr16
xlat
rorl
xchg
fiaddl
sbb
pop
aas
mov
repz
fs
mov
dec
imul
pop
pushf
shrb
popf
push
jnp
imul
hlt
push
inc
mov
je
daa
xchg
inc
in
insl
pop
xchg
xor
sub
loopne
test
ljmp
test
cltd
dec
lcall
movsb
je
jl
mov
cld
mov
cld
sbb
or
adc
xor
inc
xchg
imul
andl
fs
shll
call
mov
int
adcl
xchg
data16
and
or
leave
out
mov
adc
filds
iret
arpl
inc
std
jecxz
jmp
adcb
adc
repz
sar
loopne
adc
xor
mov
push
es
mov
dec
in
aam
imul
scas
jns
loopne
popf
ret
rcl
shl
jle
ret
mov
ja
cmp
into
jle
ljmp
stc
push
inc
or
pop
xor
cltd
addl
inc
push
sbb
xor
xor
movsl
lods
test
push
shll
xchg
in
sti
push
out
inc
aam
rcr
sbb
or
sub
out
push
sub
rcpps
ja
push
ljmp
jbe
out
lods
xor
inc
movsl
xchg
or
push
in
lods
xlat
leave
or
lcall
mul
mov
daa
mulb
cmpsl
repz
adc
leave
fwait
imul
mov
pop
pop
into
test
sbb
mov
lea
xor
mov
int3
aaa
mov
and
nop
jmp
mov
sub
loop
sti
sbb
mov
clc
fsubs
cmp
out
sahf
in
mov
test
add
mov
mov
mov
xchg
mov
cs
jmp
inc
jecxz
jne
jge
in
add
cltd
and
in
xor
aad
inc
dec
data16
inc
repnz
jb
inc
sub
loope
or
pop
scas
fimull
cmp
sbb
inc
xchg
stos
cltd
adc
inc
cmp
jle
and
and
sahf
mov
insl
fisubs
leave
push
imul
mov
adc
decb
or
mov
pusha
adc
or
push
sub
imul
divb
mov
idivl
mov
push
sub
fnstsw
enter
mov
xor
clc
outsb
sbb
repnz
add
mov
ret
and
bound
rclb
inc
cmp
or
aas
xor
mov
and
and
inc
loopne
shlb
repz
lcall
outsb
lea
pusha
xchg
inc
xchg
movsb
jle
in
or
push
jbe
clc
es
mov
and
push
test
outsl
sbb
out
sbb
hlt
scas
aaa
jp
nop
je
movsb
xor
hlt
lods
or
mov
test
mov
mov
mov
add
pop
inc
addl
nop
bnd
mov
stc
sti
arpl
scas
jns
rolb
int
or
push
lcall
js
call
scas
lret
sbbb
push
aam
pushf
and
dec
in
lret
pop
movb
shlb
in
fwait
jne
push
adc
mov
xchg
mov
and
inc
add
out
jecxz
push
xor
pop
addr16
mov
flds
jle
xchg
adc
sub
out
lcall
add
sbbb
int3
add
mov
into
and
jo
or
lahf
adc
sub
stos
test
imul
jnp
xchg
mov
bound
sbb
mov
push
and
aas
out
shll
push
mov
mov
lds
shlb
scas
loope
and
ficomps
out
adc
sub
lds
jbe
bound
mov
xchg
add
mov
sbb
adc
gs
lcall
pop
jle
mov
test
or
popa
inc
mov
pusha
aas
outsb
adc
fstl
lods
sub
jp
mov
in
testl
sub
movsb
imul
xchg
push
mov
mov
outsl
adc
push
pusha
adc
mov
sub
test
sub
push
movsl
int
dec
mov
cmp
ja
xchg
je
xor
shll
test
sub
loop
aaa
in
mov
mov
or
push
clc
add
fisttps
fwait
into
test
mov
push
icebp
popf
jl
and
adc
dec
cmp
stos
and
adc
call
and
hlt
xchg
push
data16
mov
hlt
bound
xchg
lea
shll
mov
add
shlb
repz
icebp
lret
mov
rolb
pop
lret
scas
sarl
sar
pop
mov
scas
mov
movsb
test
and
jmp
daa
bound
repnz
xchg
cmpsb
aad
push
pop
fcomps
xchg
cld
inc
or
push
inc
bswap
push
xchg
mov
mov
or
cltd
rcl
or
loop
pop
mov
xchg
fnstsw
push
test
fmulp
sub
xchg
dec
pop
int
push
lock
push
sbb
xlat
sbb
out
fs
cmp
dec
lret
pop
jns
cmp
mov
or
cli
pop
add
scas
mov
pop
lret
push
cmp
and
enter
jno
jmp
and
add
push
or
push
ljmp
hlt
dec
push
movb
fidivs
andb
mov
dec
sub
mov
jb
inc
cmp
aam
push
push
cmpsb
nop
or
xchg
mov
lds
psrld
mov
in
adc
and
sub
mov
js
lods
xor
je
neg
mov
out
xor
jge
pop
addl
mov
jne
mov
push
cs
loop
gs
in
cmp
xchg
xor
lods
fisttps
daa
rol
scas
jmp
addr16
ret
mov
add
mov
cltd
aas
lods
inc
lret
or
loop
scas
icebp
add
pop
ljmp
and
dec
psllq
fiaddl
mov
mov
inc
fldcw
repz
addr16
mov
push
nop
xchg
cmp
rol
testb
adc
xlat
xor
popf
sub
pop
or
cmp
add
int3
sbb
push
pop
outsl
jl
movsb
mov
gs
xchg
in
push
repnz
cmpsb
jecxz
mov
rolb
hlt
sub
in
mov
cmp
xor
xchg
xor
adc
test
cmpsb
jbe
enter
or
testl
adc
movsl
dec
mov
fwait
pop
dec
sbb
push
ret
xchg
xchg
or
lcall
rcrb
dec
dec
and
cmpsb
sbb
std
push
lahf
xor
ja
mov
add
lcall
fistpl
or
movsb
jecxz
sahf
and
mov
in
rcll
mov
mov
push
xlat
push
nop
push
cvttps2pi
fdivl
add
adcb
sahf
sbb
mov
jge
xchg
mov
ss
stos
jb
inc
loope
leave
or
cmp
pop
flds
out
add
aaa
mov
adc
dec
mov
bound
mov
cmp
and
push
cs
addb
sbb
xchg
cmp
fcmovb
loope
xchg
fisttpl
jnp
loop
daa
jp
add
dec
nop
js
mov
or
loope
scas
sub
xchg
fimull
inc
sub
sbb
sbbb
cltd
inc
shl
test
cli
stc
jl
jp
jbe
or
mov
inc
leave
inc
add
dec
lds
jns
popa
mov
push
movb
pop
and
add
mov
ja
loop
jl
fwait
das
add
loopne
cltd
push
inc
dec
inc
jp
dec
lcall
jmp
add
adc
mov
pop
pop
or
xchg
sahf
dec
mov
xor
push
mov
fistpl
notb
xor
insb
imul
pop
mov
not
mov
dec
fsubs
sbb
cmpsl
hlt
lret
jno
xor
aad
mov
insl
sbb
fwait
lods
sbb
sbb
bound
ja
xchg
outsb
sub
mov
in
mov
mov
pop
inc
jmp
sbb
outsl
jecxz
push
inc
cmp
dec
adcb
test
push
add
arpl
pop
xor
mov
data16
dec
call
ficompl
ljmp
xchg
jge
jle
call
cmp
add
hlt
pushl
add
or
movsl
jge
negb
mov
adc
jno
and
or
pop
or
sbb
or
cmp
daa
test
jecxz
bound
xor
push
pushw
test
pop
fldcw
dec
pop
mov
lahf
jecxz
dec
out
dec
cmpsl
xchg
arpl
jmp
mov
and
test
push
fwait
or
in
nop
or
mov
das
xlat
ds
jg
add
and
cwtl
enter
in
aas
push
addl
inc
gs
popf
repnz
mov
push
sub
jbe
fldt
jp
imul
aam
sub
dec
insl
gs
push
add
pop
jecxz
testl
push
lahf
mov
nop
out
outsl
pop
mov
pop
pushf
gs
cmp
lahf
sbb
jle
xlat
out
fs
aaa
sub
dec
sub
sub
mov
ret
dec
xor
nop
push
and
scas
icebp
imul
loop
fwait
aad
cmp
das
cld
lcall
sbb
push
jle
pusha
loop
shrl
mov
popf
xchg
fsubrs
dec
cmp
stos
adc
pop
inc
adcl
jo
jg
pop
adc
ljmp
cmp
xchg
cs
mov
fs
into
mov
std
sub
bound
inc
imul
aaa
xor
mov
fbld
cmpl
fcompl
adc
mov
mov
dec
xorb
orb
cltd
ljmp
mov
jns
cmpsb
sahf
adc
movsl
int3
or
js
out
mov
stos
xlat
xchg
orps
rorl
aam
adc
mov
push
scas
pop
inc
cmpb
xchg
adc
push
repz
adc
pop
movsl
aaa
sbb
scas
dec
dec
cmc
and
mov
mov
lods
les
aam
mov
push
add
push
les
or
clc
mov
fmull
jecxz
xchg
fs
imul
ja
mov
popa
dec
jle
nop
mov
pop
pop
mov
loopne
push
xchg
out
mov
xor
test
repnz
inc
mov
pop
push
fwait
mov
or
xchg
stos
mov
aas
loop
aas
hlt
mul
push
aad
mov
pop
inc
jmp
mov
xchg
pop
inc
mov
lahf
enter
mov
rcrl
and
and
push
jae,pt
sub
lret
push
enter
jne
in
mov
cmpxchg
push
mov
cmp
cmpsb
push
mov
sub
and
pop
iret
lahf
and
jg
lds
mov
and
sbb
cmp
inc
mov
sbb
clc
pop
inc
call
push
fdivrl
in
cmp
xchg
int
stos
mov
or
mov
or
dec
das
cmp
mov
out
mov
scas
subl
std
xor
inc
mov
inc
dec
dec
cmc
or
stos
loop
pop
loope
insb
mov
ret
push
fmuls
pop
cmpsl
lcall
jnp
repnz
cmp
lods
fstl
orl
sahf
loope
daa
in
pop
jbe
sub
and
lock
cmc
push
popa
push
adc
not
std
pop
sbb
and
inc
jle
jns
das
adc
jno
push
mov
pushf
jl
sahf
sub
cmpsb
push
lret
xor
pop
cmc
push
fdivrl
es
cmp
loop
test
sub
addb
sbb
aam
or
pop
push
xor
sbb
repnz
in
mov
cmc
icebp
xor
push
sub
insl
popf
add
movsb
sbb
add
pop
xchg
ret
cltd
push
sub
pop
sbb
lahf
scas
bt
mov
xchg
orb
nop
ss
stc
insl
bound
fistpl
leave
stos
sub
mov
jns
and
lcall
in
add
add
or
cli
insl
popa
add
push
lcall
popa
mov
stc
push
pop
sub
adc
mov
imul
jns
std
in
shlb
iret
inc
int
inc
adc
jmp
mov
lahf
mov
dec
daa
ret
dec
cmp
je
test
mov
das
dec
adc
int
js
push
jb
pushf
arpl
jmp
jmp
out
insl
xor
and
iret
or
pushf
jnp
imul
sbb
and
cli
xchg
xchg
cmc
leave
add
dec
enter
mov
decb
lea
sarb
les
subb
inc
ljmp
jb
enter
loop
or
jbe
repz
cwtl
adc
sub
insb
xor
push
mov
test
xor
in
jg
jb
ljmp
xor
gs
push
rcr
adc
push
addl
jecxz
bound
stos
insb
nop
loop
pop
mov
jecxz
imul
es
dec
imul
xchg
enter
cmp
pop
sub
pusha
stc
sbb
fwait
shll
mov
mov
jg
and
sub
repnz
jecxz
js,pn
cltd
cld
leave
rclb
jno
clc
and
call
push
subb
push
xor
les
dec
add
mov
rcrb
inc
loope
call
pop
pop
mov
dec
nop
hlt
and
jnp
sub
inc
jecxz
popf
mov
rclb
add
loop
insb
dec
add
lret
dec
cld
or
mov
jle
arpl
sbb
mov
sbb
adc
fisttps
xchg
stos
test
push
push
std
lods
mov
and
neg
jp
test
stos
inc
mov
pop
push
xchg
aad
bound
cmpsb
adc
in
stos
ja
daa
jae
lret
mov
cmovno
mov
je
push
jle
fisttps
adc
cmc
or
ficoml
jg
jp
aam
cmp
pop
cmp
sbb
leave
mov
test
xor
jecxz
mov
dec
lea
dec
mov
call
adc
cld
out
out
mov
inc
insl
div
sub
scas
pop
or
fcmovb
fisubs
jne
add
aam
sarl
mov
sub
fmull
hlt
lock
push
sub
lds
aam
jl
mov
lret
stc
xlat
repnz
mov
popa
lds
fprem
mov
cmp
mov
or
cmp
xor
subl
fs
dec
inc
mov
sub
add
lock
jecxz
subl
lds
and
out
addr16
insb
xor
dec
dec
decl
fimull
cmp
cmp
les
int
pop
mov
mov
mov
pop
packssdw
js
js
into
sbb
lret
cmp
faddp
xchg
cs
adc
cmp
ja
pop
push
and
test
jnp
fisttpl
das
xlat
lds
pop
xchg
add
fucomi
pop
push
add
cmp
in
xchg
sbb
lods
or
lds
dec
pop
mov
inc
cmp
arpl
scas
iret
inc
jp
paddsw
out
pushf
js
imul
dec
nop
in
push
adc
test
repz
fidivs
cmpl
fwait
push
mov
adc
cmc
leave
loop
test
aas
adc
ja
stos
stc
push
out
xor
adcb
adc
out
or
mov
addr16
jle
xchg
hlt
out
mov
lret
mov
jne
mov
imul
or
in
jno
fwait
lret
and
sub
cmp
mov
imul
mov
push
xorl
cmp
pop
mov
daa
sub
lret
movsl
pop
xor
mov
mov
push
dec
in
or
mov
cs
scas
lds
andl
jmp
std
mov
sbb
sub
aas
xchg
movsb
push
lods
popf
inc
loop
mov
leave
pop
push
stos
pop
jle
cmp
cmp
int
jnp
jno
cmc
lret
cmpsl
lcall
loope
stos
divb
inc
xor
int
loopne
scas
in
mov
js
into
push
scas
fbld
out
popa
pop
icebp
push
mov
or
xor
aam
and
test
sahf
adc
sbb
js
or
inc
or
inc
stos
inc
rol
ror
imul
jmp
xchg
push
insb
mov
and
pop
jl
dec
push
pop
jle
fdiv
lods
sbb
pop
mov
hlt
pop
jmp
push
xchg
lret
mov
test
add
jns
mov
push
adc
jmp
inc
outsb
pop
fcmove
test
dec
scas
push
lods
push
leave
lret
adc
xor
ljmp
push
pop
arpl
pop
cs
pop
or
dec
and
insb
negl
dec
inc
jae
sbb
addr16
rclb
add
mov
cmc
push
mov
mov
pop
cld
xchg
push
arpl
je
pop
add
mov
aas
xlat
or
lds
cli
xlat
mov
mov
push
jae
push
jecxz
leave
mov
notb
loopne
out
shrl
mov
shl
hlt
mov
dec
xor
loopne
jo
xchg
add
mov
dec
aad
mov
mov
mov
mov
call
xchg
repnz
sti
stc
cs
jp
test
and
pop
sbb
mov
jmp
lret
stos
pop
push
mov
dec
and
lcall
scas
sbb
xchg
mov
xor
sub
test
insl
and
dec
int
cmp
jp
mov
cmp
add
iret
ret
fldl
push
dec
popa
ds
cmp
pop
sub
ds
in
xchg
cmc
and
inc
les
shrl
xchg
push
xor
inc
leave
dec
xor
jp
fs
je
frstor
jnp
loopne
mov
or
and
ljmp
pop
xor
dec
or
jae
xchg
je
jle,pn
testl
jge
jle
mov
push
aaa
in
xor
xor
subb
push
pop
adc
cmp
fcom
fnstcw
mov
add
jge
gs
mov
shl
jl
mov
cmp
pop
outsl
out
pusha
fidivs
mov
dec
ja
xor
pop
xchg
cmp
test
push
mov
stos
add
hlt
icebp
cmpsb
aas
les
fwait
mov
rolb
lods
popf
pop
or
push
pop
mov
int
dec
adc
data16
hlt
cmpsl
or
lock
adc
test
es
popa
cmp
jns
sbb
hlt
cmp
nop
mov
enter
sti
int3
icebp
xorl
pop
xchg
outsb
dec
jbe
fwait
push
aad
in
bound
pop
rclb
xor
and
mov
ss
jb
jbe
adc
and
inc
inc
lds
lods
fst
imul
jp
xchg
fwait
repz
stc
repz
fsubl
mov
lea
jns
fxam
bnd
pop
pushw
adc
test
fisubrs
in
jb
sbb
ret
aam
repnz
add
pop
pop
mov
dec
das
testl
push
xchg
xchg
mov
test
lcall
mov
lock
cmp
test
dec
pop
and
jb
sub
mov
sub
fimull
mov
or
pusha
test
psubusb
rol
popa
in
movsb
cmp
xchg
adc
mov
xchg
push
mov
pushf
mov
jae
sahf
inc
pop
mov
int3
push
push
mov
inc
sbb
add
repnz
jns
insl
cmpsb
stc
ss
cmp
jo
movsb
stc
jno
lret
mov
fadds
sarl
ljmp
jno
and
fistpll
xchg
mov
inc
xchg
popa
jmp
sti
aas
dec
loop
popf
mov
cmp
enter
pop
sbb
add
dec
in
aaa
and
push
and
je
sbb
punpcklbw
pusha
dec
fwait
or
add
dec
sti
aaa
shll
iret
jae
testb
cs
jns
lret
xchg
mov
cmpsl
jl
je
add
mov
jne
lods
adc
sbb
pop
cmp
jp
jbe
cmp
mov
fdivrl
xor
int3
icebp
push
adc
jmp
pusha
cmp
insb
std
mov
mov
add
lods
inc
repnz
test
les
rsqrtps
dec
dec
js
dec
stc
mov
jnp
idivl
jne
movsl
loop
fstl
pop
xchg
rcrl
in
out
cmp
cmp
jbe
pop
add
push
rorl
rol
js
or
mov
lret
stos
cmpsb
push
pop
int3
sbb
clc
push
sbbl
roll
jae
leave
jne
outsb
adc
out
loope
dec
daa
enter
bound
jecxz
xor
or
push
xchg
ret
test
into
leave
shl
mov
lods
mov
cmpsb
sbb
fs
add
pop
enter
dec
sub
in
int
test
aam
fildll
pop
shrl
iret
cld
xchg
add
push
cs
arpl
jbe
pop
xchg
outsb
insl
loope
mov
push
or
fsts
dec
pop
dec
and
repz
push
mov
push
push
push
lret
adc
push
mov
dec
movsl
adc
aas
add
lret
mov
mov
sbb
aam
cld
outsb
lock
add
mov
push
in
es
mov
push
fdivl
movsl
shl
imul
es
or
test
sbb
jo
sub
add
in
pop
lret
subb
jns
and
fwait
loopne
scas
shl
ja
popf
sub
adc
jmp
add
push
and
mov
shrl
adc
pop
iret
cmp
test
sub
mov
in
out
jnp
adc
inc
inc
cli
mov
and
ret
popf
lret
sar
cmp
jecxz
or
sbb
mov
add
aaa
mov
int
jge
loope
xlat
mov
cmp
in
mov
sbb
leave
hlt
loop
cmp
loopne
outsb
test
xor
lret
inc
cmp
or
add
negl
xor
cmpsl
cmp
pop
adc
mov
pusha
sbb
jne
cld
cltd
mov
mov
cmp
sbb
xchg
lahf
sub
pop
jg
int3
jl
push
bound
push
gs
movsb
stc
mov
and
sbb
insb
xchg
test
dec
xchg
inc
pop
add
add
pop
inc
add
lods
popa
jge
fimuls
xor
cld
push
leave
dec
mov
mov
sbb
cmp
ds
xchg
dec
adc
mov
rcr
cmp
ucomiss
je
lret
lea
les
mov
ss
mov
fidivs
ja
mov
outsl
inc
stos
mov
test
fdivrl
in
lcall
add
pop
xor
or
push
pushf
inc
fcoml
mov
enter
xchg
arpl
jg
ds
mov
push
imul
into
stos
xchg
adc
ss
sub
mov
loope
frstor
into
dec
fcoml
scas
in
mov
shlb
or
jl
cmp
out
add
cli
stos
shrb
mov
in
xor
popa
lret
stos
mov
pop
mov
pop
lock
das
pop
pop
mov
mov
int3
int3
inc
in
cld
jbe
sarb
sbb
inc
mov
push
std
jno
dec
cmpsb
cltd
pop
das
lcall
xchg
ret
movsl
lahf
out
push
sbb
test
cld
cmpsl
jle
js
pop
ret
shrb
rcrl
mov
fs
repnz
clc
push
lret
test
jno
mov
and
xchg
rorb
xchg
lds
xor
outsb
mov
mov
test
out
mov
adc
sub
add
js
push
cli
std
dec
pop
loopne
out
gs
les
aas
cmp
decl
or
or
ss
rcr
adc
jno
pop
jecxz
or
sub
adc
mov
rcll
sar
mov
ret
fistpl
shlb
inc
mov
ror
ret
insb
fadds
jno
cmpsb
scas
dec
cmp
or
test
cmp
ret
sbb
std
jle
xor
jecxz
roll
pop
push
inc
out
data16
and
xor
fwait
add
popa
hlt
aas
xchg
je
in
dec
ds
sub
imul
xchg
jnp
shrl
cmp
scas
insb
sbb
cld
xchg
sbb
mov
push
lret
je
inc
push
jge
fiaddl
cmp
cmpb
mov
mov
jae
push
cmp
inc
outsb
jp
ja
push
cmp
sub
shlb
jp
loop
nop
jecxz
sarb
cmp
adc
loope
inc
mov
lea
jecxz
adc
popf
pop
sub
jg
jle
dec
inc
neg
stos
dec
test
cmpsb
int3
or
add
loop
push
popf
mov
ss
rclb
dec
ret
cwtl
outsb
sub
rolb
jp
sub
pop
dec
add
mov
ficomps
ret
insl
out
int
or
mov
test
push
mov
insb
pushf
ss
push
lea
xchg
bound
insb
and
jns
xlat
dec
insb
dec
shl
mov
mov
push
lret
shrb
test
hlt
jmp
repnz
mov
lock
mov
and
aad
jle
or
dec
cld
icebp
jecxz
aam
jno
xor
mov
notl
xchg
adc
leave
leave
into
fimull
rol
sbb
ljmp
push
insb
scas
ds
sbb
test
stc
jmp
xchg
xchg
mov
vcmplt_oqsd
cmpsl
or
pop
lret
popf
cmp
sbb
pop
dec
push
adc
aad
ret
or
jecxz
sub
lea
mov
in
insb
push
push
cld
scas
push
dec
aad
or
jecxz
insl
or
sbb
shrb
dec
sub
aas
aas
loopne
xchg
int
inc
insb
xor
xor
jne
sbb
jp
push
jp
sbb
pop
inc
sub
xchg
ret
lds
mov
mov
push
repnz
test
pop
add
pushf
movsb
mov
pop
or
fs
xchg
mov
adc
notl
xor
ljmp
or
and
lock
mov
mov
nop
mov
adc
fs
xor
fdivs
mov
dec
dec
stos
rcrb
xor
sbb
dec
push
call
push
jo
pusha
mov
mov
sbb
fldcw
mov
inc
mov
dec
out
add
xchg
cwtl
arpl
push
mov
lcall
dec
pop
clc
and
rclb
push
icebp
insb
insb
xchg
clc
repz
not
add
mov
sbb
mov
and
repz
mov
add
push
jb
mov
inc
inc
lret
pop
aas
xor
cld
out
fidivl
jbe
addb
xor
mov
lahf
push
sbb
roll
punpckhwd
push
push
idivl
shlb
mov
enter
mov
or
orb
int
or
pushf
addl
mov
ljmp
sbb
mov
add
ss
or
or
mov
sub
dec
lock
ficompl
jle
mov
imul
pop
jle
adc
inc
push
push
cmp
dec
mov
xchg
int3
loop
jecxz
inc
mov
xor
sub
push
daa
call
dec
scas
lcall
and
mov
cmp
jge
test
push
mov
push
arpl
mov
push
dec
mov
aam
mov
sbb
xor
xchg
daa
mov
lahf
sub
emms
decb
push
xchg
pop
and
sub
xlat
bound
push
mov
sbb
mov
loop
mov
aam
push
adc
jl
out
nop
mov
jmp
sub
jle
movsb
inc
pop
test
mov
xlat
jmp
xchg
mov
jg
mul
add
pushf
pop
leave
push
or
sub
mov
xchg
aam
inc
inc
int
mov
out
fwait
jg
stc
mov
fxch
mov
sbb
inc
lods
mov
and
cmpsl
adc
in
out
nop
mov
in
cs
testb
fsubrl
xor
jno
pop
or
sbbb
push
repz
sub
mov
mov
dec
cmpsl
out
jl
imul
xchg
clc
addr16
push
jge
mov
pop
mov
rclb
adc
es
or
mov
push
adc
add
cmp
lods
popf
clc
xor
jecxz
mov
ficompl
mov
pop
mov
adc
sub
out
add
cmp
sub
mov
stc
mov
jecxz
test
insl
addb
inc
pop
cli
insl
mov
dec
or
dec
outsb
scas
sbb
andb
sub
cltd
ret
sub
and
add
adc
add
loope
sub
imul
int3
out
out
fsubr
pop
sub
das
loopne
fldcw
pop
mov
aas
jno
mov
jge
xlat
je
in
ja
pop
nop
fst
cmp
push
aaa
cmp
mov
dec
shl
lods
outsl
les
inc
imul
cld
push
std
data16
and
cmp
mov
int
imul
mov
mov
pop
mov
adcl
or
or
cli
imul
jno
fisttpl
fs
lret
xchg
push
in
fidivrs
stos
add
sarl
xchg
enter
sbb
ret
data16
pop
dec
movsl
xchg
std
and
bound
insl
jl
mov
adc
iret
push
jg
loope
cmp
xor
adc
popa
or
pop
sub
aad
inc
fwait
inc
push
mov
add
insb
sbb
pop
xor
and
push
jno
jo
bound
sbbb
push
or
sbb
mov
dec
jle
xchg
ss
push
dec
ds
shlb
bnd
sarl
mov
push
push
sahf
mov
mov
jl
call
inc
cmp
test
pop
clc
push
add
pop
loope
movl
push
lret
dec
pop
or
ss
push
add
mov
ss
js
lret
adc
arpl
mov
enter
sbb
cmpb
jle
fcmovu
mov
dec
mov
adc
lret
sbb
inc
inc
pushf
ret
shlb
or
adc
mov
push
jns
inc
sbb
jno
out
xchg
andb
loop
push
mov
dec
sub
dec
cmp
inc
shlb
xlat
repnz
cmp
dec
lock
pop
fiaddl
push
shr
out
push
lret
jae
out
scas
jns
mov
aad
mov
jb
cmp
hlt
mov
cld
sub
mov
cmp
rcll
add
push
dec
not
ds
xchg
dec
cmp
out
movsl
and
cld
xchg
cwtl
test
lret
jb
sbb
sti
mov
orl
adc
shll
xlat
sbb
test
push
dec
scas
jns
push
sti
stc
push
orl
fildl
pop
into
inc
xor
xor
imul
bound
les
cmp
mov
dec
mov
pushf
les
mov
inc
fstl
adc
dec
in
ret
in
sub
andl
out
dec
dec
xor
lods
std
jnp
rcl
mov
xor
adcb
and
xchg
cmc
gs
or
in
pushf
jp
loop
lcall
outsb
dec
mov
pop
sbb
mov
sti
ds
push
sahf
cltd
mov
mov
mov
sub
ja
pop
sbb
pop
int3
in
inc
sbb
mov
and
les
insl
xor
push
scas
push
es
add
test
jge
mov
adc
out
movsb
add
fdivs
jl
inc
std
and
lcall
jne
jp
outsl
ds
test
pop
sub
scas
jg
ret
sbb
test
pop
mov
fwait
mov
adc
push
in
in
jnp
lock
aad
test
xchg
repz
mov
aaa
sub
daa
imul
aaa
fsubr
addr16
scas
in
mov
dec
addr16
dec
test
iret
fwait
ja
in
in
cmpsl
les
pop
test
into
jo
cmc
fmull
mov
sbb
fimuls
dec
mov
out
mov
and
mov
jae
mov
push
cli
push
xchg
pextrw
adcl
dec
int
cmp
pushf
iret
add
mov
fistpl
cmovo
adc
out
xchg
cmp
fldcw
repz
mov
sub
js
xlat
sarb
insb
frstor
notl
mov
popa
lcall
imul
and
push
js
lods
and
xor
jge
mov
mov
mov
push
pusha
sbb
test
mov
mov
add
cltd
test
sbb
inc
out
stos
aaa
ljmp
mov
xchg
push
repnz
sarl
adc
dec
xchg
xchg
loope
cmp
dec
pop
xchg
sub
pop
cltd
les
orps
in
aas
inc
std
fnstenv
xor
xor
cli
aas
stos
lock
dec
cmp
jae
les
in
insb
mov
mov
nop
sub
loope
andl
out
xchg
es
push
enter
push
sbbb
int3
add
push
test
or
xor
popa
xchg
fdivrl
clc
adc
pop
sbb
pop
sahf
or
or
pop
lret
and
cmp
fisubl
jmp
adc
xlat
shlb
movsb
mov
shll
enter
call
stos
jle
xor
or
subb
pop
mov
ljmp
mov
sub
and
pop
pop
mov
stc
sbb
into
insb
fadd
adc
dec
lods
dec
outsl
sub
sbb
mov
pop
cmpsl
jne
dec
or
fisttps
mov
pop
insb
pop
inc
push
or
mov
jne
adc
push
pop
adc
test
adc
dec
lods
sti
cmp
fs
push
xchg
adc
test
cwtl
jecxz
mov
dec
add
sbb
mov
or
aas
shlb
fldt
int3
repnz
xor
xchg
and
rorl
lcall
in
xchg
dec
mov
out
clc
sbb
cmp
pop
pop
push
or
les
fwait
insb
cmp
pop
cmp
cmp
mov
add
ljmp
out
scas
mov
pop
ljmp
xlat
daa
aaa
sbb
mov
mov
xor
mov
cmc
pop
sub
inc
loop
sti
jo
cmpsb
or
sbb
andb
jnp
jp
or
mov
sbb
adc
out
icebp
xor
adc
out
sbb
inc
adcl
xor
or
or
push
push
dec
pop
aas
jg
dec
inc
push
sub
push
inc
icebp
inc
outsb
imul
push
adc
pop
push
mov
hlt
rcr
ret
test
sbb
xor
inc
nop
or
sub
mov
xchg
movb
int3
mov
outsb
add
sbb
and
cmp
mov
std
out
roll
cmp
repnz
cmp
test
or
inc
push
add
xlat
add
fstps
dec
mov
aaa
xchg
iret
lret
pusha
or
popa
ror
fildll
add
mov
adc
xchg
xchg
gs
pop
mov
pop
cmp
scas
inc
mov
rcrl
cmp
push
adc
and
mov
dec
shll
fadd
sbb
add
dec
pop
push
mov
subb
sub
cmp
int
pop
leave
xchg
daa
sub
repnz
dec
repnz
lret
and
lret
push
push
movsb
xor
pop
mov
cltd
add
hlt
jb
inc
cli
pop
pop
pushf
ret
jmp
les
and
dec
jecxz
sub
xor
push
inc
movsl
jmp
jno
int
test
xchg
add
ret
push
gs
adc
in
jecxz
lret
ja
out
dec
lcall
lcall
addb
pop
add
sub
sbb
jg
sub
xchg
mov
addr16
movsb
lods
adc
cwtl
cmpsl
pushf
dec
add
lahf
imul
leave
gs
insl
icebp
mov
and
xchg
out
jno
ret
sbb
push
adc
leave
sti
lahf
jge
xchg
adc
sti
aas
hlt
dec
in
leave
push
pop
jns
mov
outsl
jecxz
jmp
and
and
cmp
pop
dec
movsb
adc
add
mov
push
mov
sbb
jbe
pop
inc
arpl
ret
imul
hlt
filds
add
push
sub
outsl
mov
or
ss
fwait
out
sar
sub
push
scas
and
push
icebp
jmp
dec
push
sahf
ss
add
mov
lds
jp
xor
mov
std
adc
fcmovu
and
pop
mov
xor
lret
xchg
ss
mov
or
xor
arpl
popf
fst
outsl
jnp
add
aas
pop
mov
or
adc
xchg
inc
sub
xchg
ljmp
iret
pop
imul
add
pop
mov
or
cmp
pop
mov
pop
or
in
lahf
pop
dec
push
cmp
jle
xchg
cmp
and
sahf
xor
cmp
jb
js
jle
sbb
in
pop
adc
lea
jl
lcall
aam
and
pop
mov
mov
add
xchg
mov
pop
mov
or
out
aaa
lcall
roll
or
das
hlt
sub
mov
das
test
sbb
push
les
scas
push
pop
cwtl
cmp
mov
aad
repz
or
inc
dec
ret
pop
sub
push
and
shlb
xchg
xchg
and
andb
cli
adc
insb
xor
cmp
cwtl
push
loopne
xor
pop
sub
sbb
xor
mov
add
repz
ret
rorl
inc
cmc
lds
mov
or
pop
dec
mov
je
dec
sbb
adc
cmp
push
mov
xchg
ljmp
mov
je
mov
add
push
mov
jnp
jle
jl
ja
lret
nop
push
mov
in
js
cmp
xor
addr16
test
mov
mov
xchg
gs
jne
rcrl
ficomps
adc
mov
inc
popa
jno
dec
mov
popf
pop
nop
pop
fisttps
cmp
lods
adc
das
cwtl
stc
push
adc
daa
pop
mov
out
xor
in
lods
jecxz
mov
outsl
and
fists
pop
xor
lods
add
sarb
pop
rcl
lahf
cli
mov
int3
loopne
fwait
pop
jmp
mov
dec
mov
mov
or
jbe
xlat
call
sub
shrb
call
loop
mov
cmp
inc
aad
push
fildll
dec
mov
into
jae
jmp
or
xchg
int3
test
pop
cs
insl
mov
jnp
shll
addb
jmp
shll
rclb
xor
dec
lods
jge
add
xchg
sub
adc
sub
int
mov
lcall
mov
fistps
lcall
pushf
in
lcall
xor
cmp
fiadds
and
call
mov
sahf
ds
push
inc
addr16
test
int
mov
jle
pop
lods
cmp
aas
pusha
jnp
imul
sbb
pusha
xchg
loopne
mov
or
or
xor
aad
daa
fsub
inc
push
outsl
inc
mov
xchg
shll
addl
repnz
mov
jecxz
lret
popf
fldl
sbb
sbb
fnstenv
outsl
jle
in
mov
cmp
dec
nop
cltd
xor
mov
sub
rorl
inc
outsb
sbb
inc
fnstenv
std
xchg
add
std
dec
jae
push
mov
fsubr
cltd
rorl
pop
xor
sub
mov
jle
ds
popa
jo
xchg
icebp
orb
push
inc
inc
stc
inc
xacquire
dec
mov
jb
cmp
pushf
add
andl
lods
add
adc
push
and
popl
mov
inc
xchg
scas
dec
stos
ds
out
gs
sbb
scas
int3
xchg
int3
lods
jle
divb
dec
push
mov
pop
subb
xor
add
and
mov
test
inc
out
ret
popf
inc
jp
mov
insb
mov
xor
fnsave
jp
xor
test
test
mov
cmp
dec
sbb
jp
fcmovnbe
lahf
iret
cmp
push
jge
lahf
pop
pop
mov
sub
ss
roll
ret
jne
mov
fwait
adc
mov
push
mov
inc
stc
out
xor
mov
jne
loop
pop
je
jo
add
pop
mov
imul
mov
mov
cmp
outsl
movsb
jmp
mov
hlt
push
js
je
loopne
shlb
out
les
mov
mov
cs
mov
dec
lds
stc
or
add
xchg
xchg
mov
movsl
cmp
mov
jns
jo
jl
xchg
arpl
adc
xchg
cs
add
inc
inc
mov
mov
xor
leave
or
lds
cmp
or
test
adc
adc
inc
sub
fcmovnbe
sub
adc
or
repz
cmpb
adc
aam
mov
sarb
fcoml
mov
insb
adc
pop
aas
sbb
pop
cmc
int3
adc
es
shll
and
lret
test
aas
lahf
pop
fiaddl
mov
jo
cltd
shlb
pop
lea
mov
xchg
fbstp
fildll
xchg
cltd
cld
inc
arpl
mov
dec
mov
push
fldt
lock
jle
mov
jecxz
lock
ljmp
jecxz
mov
push
adcb
pop
pop
ret
lahf
xor
sub
mov
adc
mov
add
lcall
and
push
pop
or
outsb
and
bound
mov
loop
pop
sbb
adc
cwtl
sub
pop
cmpsb
outsl
push
dec
leave
outsb
and
arpl
or
and
mov
call
nop
jno
mov
cld
in
or
jnp
inc
jecxz
aam
add
inc
mov
jnp
fsubrs
shl
enter
aam
jo
loop
leave
std
lock
push
push
add
jae
pop
adc
dec
leave
dec
les
mov
mov
sbb
cmpsb
pushf
fstps
mov
rcll
es
sub
rcll
push
mov
lret
lods
cmc
add
cmp
fsubs
push
mov
jne
pop
sbb
mov
in
xor
les
xchg
call
xor
mov
push
shll
je
sti
mov
repnz
sbb
clc
sub
cmpsl
cmpsl
push
mov
andb
setae
mov
aad
fcoml
adc
mov
insl
jle
mov
pop
mov
xchg
mov
inc
xchg
movsl
icebp
adc
sub
pop
mov
and
jns
mov
push
cmp
mov
inc
arpl
aam
out
mov
dec
jae
int3
mov
add
cmp
lahf
out
pop
sbb
adc
xchg
sub
int3
inc
ljmp
mov
mov
adc
xor
adc
sbb
pop
nop
adc
movsw
out
jb
subl
fadds
sbb
dec
xor
cltd
mov
mov
cld
inc
sahf
mov
mov
cmpsl
push
fisttps
fistpll
repnz
mov
sbb
or
je,pt
mov
dec
xchg
outsl
cwtl
int3
pop
add
in
push
mov
lea
int
mov
adc
call
mov
ds
or
jbe
push
xor
test
cs
or
sbb
push
add
dec
adc
mov
pop
add
roll
push
push
and
dec
inc
dec
xchg
fsub
inc
fidivrl
add
push
cmp
jmp
mov
pop
pop
push
aam
xchg
or
das
xchg
fisttpl
xchg
adc
es
imul
jae
lds
int3
xor
push
cmpsl
mov
jl
inc
jecxz
ffreep
bound
cmp
push
push
gs
dec
dec
rcl
pop
adc
xor
bound
das
into
xchg
aaa
xor
or
cmc
andl
outsb
fs
jl
mov
mov
lret
ds
je
data16
cmp
movsl
xor
bound
inc
fucomi
subl
xor
lahf
add
stos
pop
cmp
jo
jae
leave
aad
jbe
dec
sub
imull
sub
push
cmp
nop
sti
lods
test
add
pop
mov
push
aad
jbe
lret
lock
mov
ljmp
jle
nop
cmp
dec
neg
pop
lret
in
fistps
mov
inc
or
xor
scas
shll
in
inc
adc
fildl
ss
and
in
cwtl
mov
fidivs
xchg
add
scas
repz
adc
mov
adc
fs
std
xor
push
jg
lock
hlt
mov
jge
xor
jg
lods
push
or
imul
mov
sti
push
pop
inc
les
jnp
mov
jno
and
movl
cmp
sub
jle
pop
pop
loopne
enter
pop
dec
mov
test
push
shrb
inc
jmp
ja
sub
dec
dec
ret
mov
test
outsb
inc
mov
jg
pop
clc
or
shlb
aas
out
jnp
sti
xchg
cmp
mov
lods
test
push
cmpsb
sti
jmp
repz
pop
in
stc
adc
adc
andl
sbb
jge
rcrb
stos
xor
pop
clc
and
xchg
mov
xchg
pop
mov
mov
dec
imul
cli
movsb
xchg
pop
sub
stos
fdivrs
pop
add
sub
outsb
and
hlt
mov
jg
fsts
jle
jne
cmc
xchg
outsl
push
jl
rorl
sbb
cli
loope
stos
mov
or
int
xor
enter
aad
scas
ljmp
mov
xlat
mov
pushf
fnstenv
pop
push
sub
fsubrl
pop
dec
data16
ljmp
sbb
cmp
in
mov
jnp
ret
mov
push
enter
inc
jg
stos
imul
cmpsl
ds
test
jne
jne
stos
mov
sub
push
pop
mov
pop
movsb
int3
imul
inc
hlt
mov
repz
jg
mov
out
nop/reserved
mov
jbe
mov
sbb
adc
mov
cli
out
into
movsl
pusha
adc
jge
jns
out
push
js
out
sbb
dec
pop
sahf
mov
ja
in
cmpb
mov
xchg
in
lock
cmpsb
or
adc
adc
xchg
insb
sub
xchg
pop
adc
mov
adc
outsl
jg
mov
lods
xchg
pop
adcb
lock
pop
dec
add
xchg
add
mov
mov
rorl
js
fwait
pop
pop
xor
sub
cli
clc
pop
mov
pop
out
mov
mov
and
mov
mov
in
adc
ds
int
outsl
pop
push
inc
jle
mov
add
jb
in
aas
fnstenv
adc
jno
loop
sub
push
sti
loop
add
cmpsb
mov
or
sahf
pop
pop
mov
pop
test
add
test
stos
dec
mov
dec
loope
ficoml
lods
and
aas
cmc
shlb
cwtl
pop
pusha
sub
stc
push
mov
movsl
jl
scas
loop
jmp
inc
rorb
jp
sub
cmc
jnp
or
mov
in
arpl
mov
push
sahf
push
cltd
lea
out
mov
lcall
int3
cmp
notl
dec
shlb
dec
mov
test
and
jne
scas
int3
cld
data16
fdiv
popa
or
pop
scas
pop
pop
sub
adcl
xor
jno
lods
mov
ss
xchg
loope
insl
push
andb
sbb
shrb
pop
mov
imul
jne
ss
jo
call
fsubr
pop
xchg
ljmp
xchg
pop
insl
rcrl
test
outsb
out
adc
mov
mov
aaa
mov
enter
fisubrl
pop
cmp
divl
mov
pop
mov
mov
test
mov
lods
dec
add
inc
jl
dec
adc
and
pop
sub
sbb
repz
clc
cwtl
mov
inc
sub
push
fmuls
clc
pop
popa
pop
inc
push
pop
mov
adc
cmp
xor
xchg
add
test
sub
lcall
fwait
mov
mov
outsl
and
flds
push
sbb
aam
sub
idivb
lods
aam
sbb
fdivs
mov
lods
addr16
imul
mov
push
and
add
sbb
rolb
push
xlat
push
cmp
push
jns
jp
nop
scas
adc
jl,pn
rcrl
imul
addr16
rclb
lret
jo
jl
fidivrl
test
aaa
nop
sub
mov
in
icebp
popa
jne
push
jecxz
lahf
popa
fidivl
and
sbbb
mov
orb
rorl
inc
jo
loope
pop
mov
lret
sbb
in
add
mov
add
cmp
arpl
cli
adc
addr16
cwtl
gs
mov
jno
jbe
xchg
cmpsb
cmp
cmpl
mov
fidivrl
cmp
sub
jl
stc
push
enter
cmpsb
mov
push
jae
push
cs
cmp
dec
fsubrs
in
jp
xchg
movaps
or
dec
and
or
stos
lret
fucomp
inc
in
outsl
xchg
gs
xor
xchg
cmpsb
in
lods
cmp
mov
lcall
or
bound
add
cmp
aam
mov
xor
cli
ja
mov
mov
in
inc
scas
subl
add
stos
push
and
add
mov
cmp
add
sbb
mov
sbb
mov
sbb
and
adc
das
cld
insl
into
out
mov
iret
test
je
jge
jo
mov
sbb
dec
jl
je
or
lea
mov
dec
push
sub
lret
cmp
ljmp
in
cmc
je
aad
xchg
stos
inc
sbb
orb
repz
sbb
das
je
aam
sbb
and
mov
adc
sub
decb
outsb
outsb
mov
mov
add
pop
rclb
in
add
mov
jae
mov
aam
and
xchg
mov
les
jo
dec
add
cmc
mov
jnp
dec
jnp
push
cmp
repz
mov
ficoms
fs
sbb
push
lahf
pop
insb
push
dec
aam
dec
inc
and
pop
scas
cmp
es
xlat
and
cmp
add
repz
pop
dec
loopne
pusha
mov
lock
push
adc
popa
lds
inc
lcall
outsl
fstl
or
xorb
stos
ljmp
push
shlb
and
push
push
pop
lcall
xchg
in
ds
jne
mov
pop
xchg
into
adc
lret
lcall
adc
inc
inc
lock
mov
dec
jmp
dec
push
bound
imul
in
mov
in
pusha
aaa
mov
ss
push
push
aaa
sub
jmp
sub
dec
in
das
jo
aad
jmp
inc
and
fcmovu
inc
xor
fisubl
sub
pop
jo
mov
dec
push
cmp
push
leave
sahf
sub
pop
jl
lahf
dec
cmpsb
mov
in
xor
sahf
sti
add
inc
jg
cmp
fnstsw
push
pop
ss
ret
fisttpl
int
sbb
lock
ficoml
out
cmp
enterw
xchg
xchg
out
cmp
dec
insb
repz
xor
push
jnp
add
dec
out
popa
mov
inc
cmp
xchg
repz
sub
jb
gs
sarb
lods
pop
popf
dec
pop
and
aad
bnd
movsb
push
out
xchg
les
daa
lret
xor
push
aad
arpl
push
xor
test
xchg
jno
sarb
cmp
mov
xchg
sbbl
adc
testb
or
jle
pop
dec
in
push
ja
sbb
xchg
xor
out
inc
mov
cmpsl
popf
xor
push
cmpsl
ss
push
sbb
pusha
cld
aas
sub
stos
stos
mov
push
xlat
ljmp
in
push
lea
aas
xor
outsl
xlat
mov
into
cmpl
push
aam
daa
cmpl
mov
ja
ljmp
cmp
rorb
mov
or
pop
mov
imul
out
stc
add
add
push
outsl
insb
mov
stos
test
pop
dec
xor
pop
push
sbb
movsb
enter
adc
adc
out
mov
pop
js
cltd
mov
sbb
aad
sub
dec
sub
mov
hlt
push
in
jno
fimuls
xlat
jno
dec
xchg
mov
lods
lods
add
les
pop
dec
cmp
nop
mov
mov
loope
dec
cld
or
rcrb
imul
rorb
outsb
xor
and
movl
outsl
movsl
mov
rorb
mov
and
pusha
call
inc
into
rol
shll
dec
add
data16
push
mov
mov
in
cmp
test
lds
dec
lods
dec
roll
or
jb
jle
inc
lock
in
negb
std
dec
insl
mov
andl
in
jnp
or
xor
test
test
mov
mov
and
sahf
push
fiadds
pop
sbb
in
push
outsb
xchg
mov
andb
mov
mov
xchg
jb
repz
insl
xchg
sbb
nop
and
cmp
mov
fcomps
cmp
add
sbb
movsl
aam
lds
xlat
mov
out
out
mov
xchg
inc
fsubs
aam
xor
xor
xor
push
bnd
mov
push
aad
mov
sub
fcoms
ss
cwtl
xorl
xchg
fwait
cltd
jb
frstor
cmp
mov
dec
xorb
ret
loop
test
and
and
xor
jmp
add
xchg
add
mov
cmc
mov
repz
clc
sbb
lea
js
dec
pop
mov
nop
jne
push
cmp
ja
mov
xlat
mov
pusha
adc
fwait
xchg
ja
mov
dec
sahf
push
cs
mov
jl
inc
sbb
xchg
sbb
push
loope
out
dec
stos
gs
mov
push
repz
mov
pop
inc
cs
push
leave
push
xor
jg
sub
jp
mov
mov
jl
das
inc
sbb
jl
sarb
or
mov
out
mov
mov
fldenv
outsl
insl
pop
inc
in
mov
aas
jg
xchg
jecxz
adc
pop
push
mov
cmpsl
adc
scas
repz
xchg
lret
loopne
adc
xchg
or
shlb
rcrb
xor
scas
xchg
pop
jo
lahf
ror
mov
test
mov
outsl
cwtl
in
cmpsl
mov
xchg
pusha
mov
int
xchg
push
loopne
mov
mov
aas
ror
setb
or
roll
xor
jmp
es
and
dec
fwait
gs
pusha
jp
in
lds
fidivs
bound
cmp
lods
test
sar
std
add
add
lahf
sbb
mov
je
cmp
dec
scas
movsl
push
repz
cld
out
aad
adc
stos
mov
subl
mov
or
sub
fnstcw
imul
mov
lods
sbbl
jecxz
movsb
push
ljmp
test
cmpsl
shrl
jae
jne
das
mov
jb
cmp
mov
out
clc
jae
fs
inc
in
or
outsb
mov
in
add
cmp
push
rolb
push
stc
push
pop
es
popf
mov
jp
cs
xchg
pop
and
movsb
pop
iret
scas
inc
xlat
cwtl
xlat
cmc
shll
sbb
pop
jmp
mov
inc
mov
out
pop
xchg
inc
sub
sbb
or
or
popa
jp
jl
repnz
lods
movsl
push
imul
int3
xor
fwait
pop
sub
movsl
push
jae
lock
push
lea
nop
in
jp
ret
stos
lret
and
cmp
inc
inc
aas
jle
xchg
sahf
pusha
loopne
or
dec
ret
test
stos
cmp
and
xchg
movsb
sbb
add
inc
sahf
push
jl
dec
movsl
jbe
mov
adc
loopne
jns
fwait
push
out
xlat
sti
bound
loop
bound
push
xchg
je
lods
dec
je
add
fdivrl
cmpsl
data16
hlt
jae
mov
cmp
mov
int3
outsb
push
pop
mov
sbb
scas
mov
stos
push
dec
lods
jnp
sbb
jmp
jbe
mov
mov
and
out
int
sub
push
adc
je
add
insl
mov
pop
adc
outsl
add
mov
sub
fadd
push
jne
out
aad
insb
dec
jae
test
mov
mov
and
mov
cwtl
arpl
in
adc
movsb
imul
mov
sub
xor
enter
call
push
ret
and
xor
and
cmp
pop
stos
lods
outsb
add
ss
xchg
pushf
add
or
mov
call
rcl
test
int3
test
fistps
movsl
xchg
push
hlt
fdiv
mov
mov
adc
adc
xor
mov
or
add
xchg
ret
mov
imul
enter
lcall
mov
cmp
test
lock
stos
cmpsb
mov
out
int
ljmp
pop
mov
pop
rclb
cmpsb
adc
mov
lods
cld
push
icebp
ret
jmp
or
movsl
aaa
in
sbb
jb
jne
cmp
dec
dec
add
jo
xor
cld
ss
out
or
push
fs
out
fwait
hlt
push
inc
adc
dec
xchg
test
xchg
inc
pop
jno
or
ljmp
mov
ja
repnz
xchg
ds
and
push
cltd
sbb
jmp
inc
pop
hlt
iret
jo
sbb
push
ror
push
inc
xlat
fadd
and
adc
mov
in
out
sbb
jns
out
push
imul
fwait
scas
sti
pop
xchg
jbe
fldl
pop
or
popf
cltd
aas
add
inc
push
dec
mov
sbb
js
mov
mov
and
xor
push
filds
inc
stc
dec
xor
xor
cmp
sub
sbb
hlt
clc
xchg
push
out
inc
or
les
sub
push
out
stos
or
sbb
inc
je
out
adc
mov
jo,pt
cli
jmp
xchg
mov
int3
and
jg
lahf
mov
pushf
and
adc
mov
notl
jne
push
jo
cmc
xchg
sbb
test
outsb
xor
test
mov
add
addr16
lods
inc
aad
test
loopne
lods
mov
lock
dec
cld
mov
mov
push
inc
dec
jl
fistps
push
xor
push
adc
mov
jns
rorl
in
push
jns
mov
inc
dec
sub
aas
out
adc
shl
clc
xor
adc
or
popf
movsb
insl
mov
cli
pop
hlt
aas
push
stos
jbe
stc
subb
bound
and
lock
mov
xlat
pop
popa
sub
jo
sub
push
rolb
call
sbb
mov
jl
outsb
pop
imul
fadd
std
fcoml
push
xor
sbb
xorb
ja
mov
sbb
sarb
add
push
stc
imul
lret
dec
outsl
xor
fcompl
shlb
in
pop
test
cmovbe
loopne
jno
sbb
adc
xchg
jo
leave
xor
test
leave
mov
adc
ss
dec
cwtl
mov
test
inc
fwait
dec
std
ds
movsl
mov
sub
jns
xor
mov
mov
fldt
cli
repnz
incl
pop
or
and
outsl
shll
mov
dec
stos
sub
adc
mov
push
mov
mov
std
sub
mov
pop
in
sti
insb
je
pop
lcall
scas
or
adc
je
mov
lods
cmp
shll
test
imul
leave
adc
pop
xor
outsb
pop
fmull
cmp
addr16
add
sbb
in
stc
mov
popa
and
cmp
dec
addr16
add
sub
les
jbe
ret
int3
sub
xchg
mov
adc
dec
xor
mov
dec
inc
outsb
ror
cmp
faddl
xchg
inc
int3
daa
loopne
cmp
jle
jl
pusha
push
xchg
mov
or
lods
inc
lods
sub
sahf
mov
fldl
push
or
sub
aad
fidivs
mov
mov
and
leave
out
bound
mulb
jne
out
cs
pop
push
or
inc
adc
test
arpl
cmp
add
inc
dec
dec
dec
and
shrb
xchg
xchg
cmp
fwait
outsl
enter
jne
dec
mov
in
call
shlb
jl
adc
xchg
push
std
repnz
outsl
cld
loop
insb
sbb
arpl
shl
data16
sub
mov
mov
fisttps
mov
jnp
dec
push
xchg
sbb
xlat
lock
push
ljmp
scas
inc
out
jecxz
cli
mov
pop
bound
and
pop
dec
xchg
adcl
ret
or
push
jne
pop
jg
movsb
popa
lret
js
sbb
bound
test
loop
pop
jle
jbe
add
add
clc
shrl
loop
fcompl
jbe
stos
jmp
mov
clc
inc
pop
lcall
lock
and
inc
out
sbb
outsl
inc
push
pop
sub
aas
dec
adc
mov
push
mov
cmpsl
mov
inc
lds
jo
xor
leave
mov
repz
xchg
cmp
or
lods
sti
mov
outsl
push
pusha
mov
dec
mov
cmp
cwtl
ret
lret
push
xor
test
rol
push
fdivrs
dec
repnz
imul
aaa
mov
adc
push
ret
out
inc
test
mov
jne
daa
cld
stos
int3
fwait
inc
test
popf
pop
push
mov
pop
jg
or
mov
cmpsl
rcll
les
addl
cs
jmp
call
sub
lcall
aam
ret
mov
and
call
sub
subl
ja
ret
lret
sbb
adc
xor
cmc
les
lret
leave
ficoml
fnstcw
fdiv
mov
cwtl
ss
adc
sub
push
out
repnz
popa
adc
aas
pop
popa
add
mov
pop
xor
xorl
sub
jns
fbstp
mov
daa
fimull
cwtl
daa
ret
sbb
xchg
in
pop
adc
inc
fcmove
sub
sbb
loopne
arpl
fwait
dec
xor
pop
jmp
je
sub
scas
popf
int3
or
cwtl
fcomps
sti
in
pushf
rcrl
nop
push
or
mov
hlt
movsb
std
jp
push
xor
mov
mov
pop
cmpsl
fistpl
or
addr16
aad
push
rolb
cmp
aaa
lcall
lods
add
dec
or
push
sahf
adc
xchg
or
or
adc
movsb
xchg
xor
mov
in
loop
mov
mov
mov
das
out
cs
adcl
or
mov
into
sub
std
adcb
mov
dec
xor
xchg
inc
mov
arpl
in
inc
cmpsl
or
push
dec
mov
xchg
repnz
test
or
mov
dec
aam
xchg
adc
test
pop
mov
repnz
leave
sub
test
mov
pop
lds
ror
mov
fmuls
xor
hlt
dec
clc
mov
test
mov
test
sarl
lds
stos
arpl
dec
inc
inc
dec
push
mov
out
sbb
les
pop
adc
mov
nop
dec
shrl
in
xchg
sub
out
test
pop
in
sarb
xchg
and
cld
push
push
mov
pop
or
xor
mov
dec
add
cmp
rcr
mov
call
bound
adc
test
ret
sub
mov
jae
imul
xor
xchg
jecxz
filds
cli
sub
sbb
je
push
lods
inc
sbb
aaa
cmpsb
lcall
push
outsb
movsl
xor
stc
cmp
aas
pop
jbe
ja
in
fldln2
push
stc
xchg
nop
ret
and
movsb
cmpsb
sub
inc
sub
mov
pop
adc
daa
mov
std
inc
fcomps
leave
or
incl
in
mov
imul
or
into
adcl
adc
adc
mov
dec
aas
jno
mov
inc
out
push
imul
mov
xchg
ret
insl
hlt
mov
gs
inc
jo
push
mov
mov
mov
lahf
test
jp
or
aad
popf
xchg
dec
and
sbb
push
jg
outsb
sbb
cmp
ja
cmp
fnstenv
jg
clc
jge
pop
inc
in
iret
xor
aaa
inc
pushf
test
mov
pop
icebp
dec
adc
fistpl
mov
pop
and
pop
pop
outsl
imul
ds
mov
xchg
cs
or
mov
dec
imul
movsb
int3
fstps
xlat
push
test
stc
ret
pop
ljmp
mov
inc
jae
outsl
iret
sarb
lcall
jmp
std
outsl
dec
scas
xor
jne
jne
jl
std
xor
ds
add
dec
ficomps
es
leave
outsb
cmp
push
dec
popf
xor
add
sbb
jno
mov
push
xchg
xchg
and
or
mov
les
rolb
cltd
ljmp
mov
cmpsb
dec
aas
cmp
mov
push
dec
add
stc
test
and
mov
push
xor
adc
lret
inc
insb
lods
or
sbb
fbstp
mov
js
cltd
jnp
test
ja
or
and
test
ret
jo
hlt
jle
lock
dec
sbb
pop
pop
adc
testl
ret
push
or
xchg
nop
iret
ljmp
inc
test
dec
jae
inc
push
mov
negb
xor
jmp
ss
in
mov
int
ja
stc
push
adc
and
scas
mov
nop
aas
pop
mov
stos
clc
jle
jp
add
ds
ret
or
and
xchg
clc
push
loope
sub
mov
pushf
lock
test
aam
popa
mov
loop
out
mov
jl
adcl
loop
fidivrs
push
dec
adc
inc
jae
lcall
cmp
in
loope
mov
das
les
fnsave
xor
rclb
mov
movsb
subl
vmread
orb
in
sbb
xor
hlt
scas
int
cmc
dec
out
xor
xchg
sti
add
popf
loopne
dec
mov
xchg
add
add
or
and
inc
and
mov
scas
pushf
push
push
mov
jb
mov
inc
xchg
pop
mov
icebp
mov
inc
jbe
test
cmc
addb
mov
mov
and
clc
push
dec
xor
mov
xor
sbbb
movsl
mov
sub
into
cmc
roll
enter
scas
inc
cwtl
arpl
pop
mov
jle
jmp
adcl
frstor
lar
icebp
inc
or
stc
push
and
inc
stos
mov
mov
xchg
jl
jns
or
mov
repnz
jo
mov
inc
dec
cld
ljmp
push
cmp
dec
out
and
in
mov
lds
add
pop
cmp
pop
mov
xor
vpcmpgtb
rcll
test
sbb
outsl
iret
or
mov
add
test
leave
dec
jge
nop
mov
mov
mov
inc
add
iret
leave
pop
das
shlb
sbb
cmc
xor
pusha
or
iret
jbe
xlat
pusha
sub
adc
icebp
or
or
and
mov
jbe
pop
cmp
cmp
and
push
mov
lcall
push
mov
gs
xlat
or
mov
ficomps
sub
cwtl
fnsave
iret
jp
out
mov
in
dec
daa
ficoms
xor
out
sti
push
jmp
add
inc
sbb
add
or
repz
ret
push
cmp
inc
adc
xor
mov
jne
fsubs
ror
out
dec
jge
cmp
pop
xor
or
lock
je
sbb
nop
lahf
dec
lret
sub
add
push
mov
add
mov
add
cmp
push
shr
dec
in
sarl
xchg
xchg
test
xor
enter
jbe
in
xor
mov
pop
add
js
sub
mov
iret
pop
adc
ret
loop
cmp
lods
repnz
mov
jp
pop
sub
pushf
clc
ljmp
jne
or
cwtl
test
and
aaa
jno
cli
jmp
mov
cmc
cmp
lock
mov
push
cs
pop
inc
out
jge
ss
lock
incl
xchg
cmp
mov
cltd
sub
sbb
pop
xchg
push
push
shl
outsb
mov
add
jp
fs
jo
ja
test
and
dec
jne
jmp
inc
dec
push
and
aas
push
pop
cmp
les
lcall
insb
inc
inc
inc
sub
sub
repnz
cmc
inc
out
test
jp
loope
sub
std
out
add
cmpsl
cmpsb
pop
mov
and
sub
stos
in
add
mov
nop
push
lds
mov
ss
aaa
test
sti
aas
mov
inc
add
sbb
cltd
int3
repz
enter
jecxz
jp
cmpsb
outsl
cltd
sbb
clc
dec
imul
xchg
sbb
mov
jns
mov
xorl
cli
mov
xor
fs
outsb
mov
mov
xor
frstor
or
mov
stc
movsl
ds
js
sbb
stos
cmp
imul
js
sub
lcall
add
mov
sbb
inc
lret
and
adc
xchg
testb
call
mov
xchg
imul
mov
int
push
add
outsl
push
inc
out
xchg
test
pop
in
xchg
and
push
xlat
inc
mov
popf
js
xorb
rcrl
ljmp
cltd
inc
jae
lcall
lds
jnp
push
sti
loop
ljmp
std
sahf
jl
push
iret
cmp
out
xchg
int
jg
ret
jle
pop
test
sub
or
or
xor
jge
repnz
xchg
adc
fabs
mov
xor
jns
sbb
fldenv
mov
xchg
inc
hlt
in
mov
iret
dec
into
outsb
dec
xor
mov
xchg
imulb
mov
sbb
sbb
cs
and
sub
shl
das
xchg
cmp
mov
xor
dec
stc
rcll
arpl
sub
add
cmc
popa
rcl
into
test
mov
bound
cwtl
jb
aad
pop
xor
stos
fwait
push
ficoml
enter
leave
xor
xchg
add
rcrb
jae
pop
fs
repnz
sub
daa
mov
ss
mov
push
mov
aad
ljmp
stos
cs
stc
mov
jecxz
ljmp
sahf
dec
out
hlt
jns
sub
cmpsb
mov
cld
sbb
cwtl
outsl
hlt
incl
and
imul
mov
mov
popf
push
loope
mov
mov
ret
lret
sbb
adc
pop
adc
pop
or
inc
icebp
ja
jge
decl
scas
cs
jg
inc
cmp
mov
xor
sbb
add
js
add
pop
xchg
inc
jne
dec
jbe
loope
in
cli
push
pop
sub
push
xchg
inc
jge
std
dec
out
ljmp
sbb
aaa
data16
mov
je
sbb
arpl
sti
xchg
cmp
daa
jecxz
xchg
popf
dec
popa
pop
lret
xor
push
hlt
sub
mov
fmuls
or
rcrl
sub
cld
shrb
xor
pushf
decl
ljmp
cmp
jno
loope
jp
mov
push
and
adc
inc
add
push
daa
or
aas
lret
pop
aam
and
jae
rclb
pop
jmp
xor
push
bound
or
adc
add
and
dec
push
insb
pop
mov
push
hlt
fmull
rclb
stos
mov
ja
sub
and
mov
inc
ds
mov
inc
dec
pop
clc
loop
jecxz
imul
div
pop
cld
loope
imul
add
stos
sbb
test
cmp
je
adc
push
lock
out
mov
data16
mov
repnz
jnp
lcall
fsts
fstps
test
jbe
inc
mov
shll
mov
lods
fcmovnbe
xchg
push
jbe
jo
repnz
outsb
stc
ret
jb
addr16
aam
mov
popa
imul
pusha
pop
xorb
bound
adc
cmp
or
dec
int3
fcoml
push
mov
pop
or
jl
jmp
jbe
mov
cmp
pop
ret
loope
sub
push
test
sbbb
jo
and
js
dec
pushf
test
sahf
out
fisubrs
dec
jl
mov
push
xor
std
into
adcl
mov
xchg
out
fistps
cmp
es
jmp
loopne
mov
mov
ljmp
mov
sub
movsl
mov
ss
dec
adc
or
sub
and
cmp
inc
sbb
mov
jecxz
pop
in
addb
inc
mov
dec
loop
adc
pusha
xchg
jge
test
test
imul
sub
push
push
sbb
pushf
cmpl
sub
xchg
mov
scas
and
mov
cwtl
jmp
pusha
fistpll
cltd
pop
xor
jae
mov
test
push
test
mov
orb
sbbb
je
mov
fadds
daa
jl
mov
sar
out
ljmp
shl
and
inc
jno
aas
out
adc
adc
mov
inc
mov
pop
xor
in
jmp
jg
xchg
adc
add
inc
repnz
ret
mov
xor
push
fdivrl
jae
ffree
xor
adc
lds
aad
nop
scas
es
push
popa
test
mov
and
fidivs
mov
mov
movl
sub
out
push
mov
push
in
test
inc
mov
ret
jae
lock
mov
and
lods
mov
push
pop
jmp
in
icebp
add
add
int3
les
fs
push
push
cmp
loop
lods
push
adc
push
sub
pop
jg
orl
out
fdivr
dec
ljmp
pop
xchg
cmp
and
mov
pop
in
cmp
inc
push
fadds
and
jle
jge
sub
stc
sub
xchg
dec
movsl
adc
enter
mov
insb
sub
mov
mov
mov
jns
mov
jns
or
sub
daa
adc
mov
adc
mov
or
mov
pop
rcrb
imul
dec
add
sub
fwait
or
lahf
or
stc
or
jo
sub
cld
mov
insb
jg
mov
out
out
push
xor
daa
push
testl
movsb
push
sub
xor
add
dec
insb
push
push
stos
mov
lods
rorb
insl
pop
xchg
outsl
les
fiadds
out
push
leave
or
loope
idiv
sbb
loope
mov
fidivl
mov
mov
sub
xchg
scas
popa
loope
insb
lea
jb
mov
add
ss
call
stc
fs
loope
clc
push
scas
jo
xchg
cs
push
fiaddl
push
scas
daa
aaa
clc
mov
xor
jecxz
pop
stos
bound
mov
call
add
mov
sbbb
in
negl
popa
aam
cmp
scas
fisttpll
sbb
push
push
xor
jle
movups
or
push
mov
push
pushf
mov
mov
lds
pop
out
pop
push
mov
loope
ror
ljmp
xchg
lcall
mov
jge
add
mov
mov
imul
mov
jp
jno
loopne
or
aad
les
popf
negb
sub
add
jle
stos
arpl
in
js
xchg
outsb
pop
dec
orl
jb
sbb
adc
lds
jno
out
je
stos
idivl
or
cmp
and
and
inc
jo
test
mov
mov
sbbb
stc
push
cmpsb
popl
xlat
mov
test
xor
cltd
mov
lret
insb
rolb
scas
mov
aad
xor
ret
cmpsb
mov
jns
sbb
jae
mov
push
lret
cmp
ret
fidivs
sbb
ds
mov
pop
out
aaa
sahf
inc
jg
out
ljmp
shll
test
or
pop
aaa
aad
dec
or
jb
in
jp
dec
cmp
cmp
xor
jge
sub
xchg
mov
dec
scas
mov
call
or
add
lds
cmp
enter
pop
dec
mov
mov
lret
push
in
push
and
jno
dec
iret
xlat
adc
or
xchg
pop
shll
out
sbb
flds
bound
outsb
rorl
xor
sbb
sbb
cmp
pushf
stos
in
cmp
jge
jne
lret
gs
add
mov
pusha
mov
arpl
inc
push
sbbb
mov
adc
add
push
fistps
jbe
mov
ja
pop
ljmp
loope
or
lock
ljmp
out
and
jl
fldl
mov
int
and
ljmp
add
sbb
rcrb
push
test
mov
jmp
nop
sub
dec
push
jns
outsl
pop
adc
cmp
xchg
loopne
dec
aad
ret
js
and
cld
inc
cmc
jbe
lds
mov
pop
in
jmp
lcall
repnz
lock
xchg
daa
jle
xchg
push
scas
lea
ds
mov
xchg
mov
mov
in
sbb
dec
xchg
pop
xchg
inc
sbb
jae
lret
aas
scas
cli
sbb
mov
cmc
rol
inc
jle
scas
ret
jp
pop
shll
fiadds
out
in
in
push
add
sbb
scas
ret
lock
and
pop
and
fistps
xchg
or
xchg
ljmp
std
ljmp
xor
pushf
add
adc
jbe
rcl
movb
or
fiaddl
xor
xchg
out
xlat
clc
or
xor
out
fwait
or
xor
std
adc
mov
push
mov
sahf
repz
insl
sub
shll
iret
pop
lds
add
stos
out
cmp
data16
repnz
lcall
out
test
mov
cmpsl
pop
mov
inc
pop
xchg
out
sti
cmp
adc
ficomps
je
jb
and
pop
shll
scas
pop
data16
jns
xor
sub
push
fadd
mov
es
rcll
cs
sub
add
jnp
out
mov
gs
add
mov
test
push
fsubrl
call
cmp
xchg
lahf
inc
lret
mov
outsb
loope
pop
sub
mov
out
fnsave
loopne
nop
cmp
testl
push
outsb
or
shl
call
mov
mov
sub
movsw
jge
jp
mov
mov
xchg
daa
add
adc
adc
addl
out
cmp
dec
mov
mov
std
adc
cwtl
or
mov
movsl
xor
add
int
jg
ret
in
dec
xchg
mov
push
and
fiaddl
addr16
popa
mov
testl
cmpsb
jnp
loop
inc
xchg
cmpsl
push
pop
jo
mov
movl
xchg
stos
mov
outsb
stos
fildl
bound
sahf
pushl
dec
dec
pop
mov
push
and
xor
out
pop
lahf
cmc
out
jmp
push
sti
test
mov
lock
lods
mov
loop
push
insl
lahf
gs
in
and
in
sar
xchg
dec
push
sub
adc
std
inc
rcrl
adc
ds
push
mov
jns
add
dec
stc
fimuls
adc
ret
ficoml
jbe
push
and
dec
mov
mov
adc
aam
xor
loopne
aam
pop
test
popf
lock
push
fdivs
out
mov
xchg
hlt
roll
jno
aad
test
mov
xor
xchg
rorb
push
fisttps
movsb
arpl
mov
outsb
mov
cli
adc
xchg
jno
aas
xlat
lret
addr16
xlat
mov
sbb
test
shl
xor
aaa
jnp
test
mov
mov
mov
add
push
fwait
rolb
ja
adc
and
and
xchg
and
fwait
push
xor
aad
jle
fs
enter
data16
outsl
or
xchg
adc
clc
and
inc
arpl
insb
jge
xchg
push
or
fildl
pushf
xlat
adc
jg
ret
xor
std
bound
adc
and
insl
jge
add
lods
sub
les
cmpl
mov
fdivrp
adc
jecxz
in
ja
cmp
sub
in
sbb
lret
stc
stos
imull
movl
jp
imul
mov
cmp
jle
pop
pop
mov
inc
cmp
or
add
mov
fstp
stc
mov
ja
dec
leave
cli
mov
les
pop
and
and
loope
pop
pop
cltd
ljmp
fmull
xchg
mov
out
jns
das
int
push
pop
xchg
mov
xchg
scas
icebp
int
xchg
fimuls
cmp
mov
and
iret
fwait
sti
inc
cli
cmp
ljmp
in
add
stc
jmp
das
test
lods
adc
or
sarb
jl
imul
jbe
scas
cmpsb
cltd
cmpsl
mov
mov
and
mov
mov
pushf
cmp
mov
int3
mov
pop
pop
fcoml
xlat
scas
jmp
lds
jecxz
dec
add
inc
or
add
sub
and
loopne
ss
and
leave
jg
mov
xchg
add
lahf
or
out
inc
xchg
push
push
aaa
add
mov
into
xor
mov
dec
daa
addr16
mov
ret
mov
arpl
xchg
push
mov
push
xchg
add
bound
aad
in
jl
fistpl
lcall
aad
shlb
xchg
bound
je,pn
push
sahf
sub
mov
pop
loop
push
mov
cmp
pop
cld
inc
xor
shrl
cmpsb
pop
xchg
test
mov
mov
sti
pop
mov
call
push
jp
cli
xchg
jle
in
cmpsb
cmp
hlt
xor
mov
js
cmpsb
lock
add
add
popf
xorl
fsub
xchg
daa
xor
in
pop
dec
jnp
jecxz
flds
mov
pop
movsl
lahf
add
xchg
loope
or
arpl
adc
ret
decb
xchg
sbb
jno
popa
mov
push
pop
xor
pop
mov
repz
ja
cmp
sbb
jns
or
fdiv
xchg
ds
add
repz
repz
mov
sahf
aad
ficomps
fcoml
xchg
popa
jbe
test
jnp
bound
inc
loope
outsb
scas
fistpl
pop
jecxz
pop
xchg
add
jne
lret
sub
jmp
mov
cmp
sbb
sub
jecxz
and
jg
mov
fwait
or
adc
mov
inc
jl
push
jae
movsl
test
push
ss
icebp
xor
sub
dec
adc
mov
pop
push
add
cmpsl
leave
stos
not
jl
fisttpl
mov
dec
mov
adc
rclb
popa
stc
pop
loopne
ss
mov
xor
adc
push
pop
fcoml
stos
out
add
fdiv
push
jecxz
rclb
leave
pop
push
pop
insb
in
shlb
fwait
cmpsb
push
xor
sub
test
or
sbb
cwtl
jp
mov
and
aaa
adc
out
mov
xchg
adc
mov
mov
and
rcll
mov
push
scas
pop
nop
scas
xor
into
fmuls
pop
aaa
mov
incb
es
cld
pop
jae
or
inc
mov
les
cmp
adc
xchg
scas
out
call
jno
lods
push
cmp
xchg
jo
pop
inc
fnstsw
lahf
jo
fimuls
bnd
inc
popa
xchg
mov
sahf
mull
adc
adc
std
imul
aas
nop
mov
jl
loop
rcrl
addps
shll
outsl
sbb
pop
jbe
adc
cli
out
dec
adc
icebp
imul
xchg
popf
push
fwait
inc
out
jmp
adc
cmp
in
dec
jp
add
mov
jp
push
inc
mov
leave
repnz
push
xor
cmpsl
mov
xchg
lret
jbe
adc
jp
fnstsw
leave
movzwl
into
mov
stc
clc
push
stc
and
xor
mov
stos
in
sub
aad
mov
or
data16
sbb
je
ret
xchg
aas
cmpb
loopne
mov
rorb
daa
xchg
pop
ret
mov
push
mov
iret
jmp
ret
aam
sti
roll
pop
sub
inc
inc
adc
arpl
xlat
inc
imul
ret
cltd
fidivrs
xor
add
mov
test
pop
push
and
inc
fdivl
pop
pop
idiv
nop
inc
cmp
movsb
push
cltd
pop
xchg
test
jo
dec
dec
mov
addr16
pop
xchg
loope
adc
add
inc
mov
adc
mov
push
int3
sti
xor
push
inc
loopne
cmp
xor
push
jmp
xchg
mov
in
ret
sub
jmp
fldz
dec
push
xlat
outsl
mov
out
xchg
jl
cld
mov
push
pop
cli
mov
mov
outsb
arpl
cld
and
mulb
insl
loope
je
push
adc
pop
cwtl
push
cmc
ds
outsl
sbb
fisttpl
sub
mov
sub
xor
xchg
dec
and
enter
out
inc
clc
rcl
mov
loop
sbb
mov
or
sbb
les
jl
jg
popa
mov
inc
pop
xchg
and
sbb
mov
cwtl
sbb
orb
scas
loope
pop
dec
cmpsb
js
jne
mov
inc
xor
mov
fcmovu
inc
outsl
jb
push
int
jo
adc
int
dec
adc
xor
mov
jge
insb
fmuls
movsb
mov
pop
fnstcw
scas
xor
xchg
sbb
adc
xchg
mov
xchg
cld
or
jge
ja
outsl
cltd
mov
pop
fsubrs
mov
std
pop
mov
add
scas
lock
dec
push
in
out
shl
sbb
repz
daa
orl
jmp
inc
mov
arpl
mov
nop
nop
dec
sub
add
pop
lcall
mov
jno
or
je
mov
sarl
adc
lcall
test
bound
and
cmpsb
movsb
sar
das
movsb
xchg
inc
pop
into
int3
jl
mov
sbb
pop
jb
push
inc
lcall
xchg
scas
or
or
inc
xor
dec
sub
xchg
call
hlt
nop
lods
stos
add
test
push
cmp
push
divb
sub
ror
cmp
popa
arpl
inc
rorl
es
shlb
push
int
adc
xchg
shlb
in
cmp
mov
adc
je
inc
js
pop
adc
pop
into
mov
dec
xchg
aas
in
lea
stos
mov
icebp
icebp
xchg
loopne
jl
or
imul
test
ret
sub
add
push
add
cs
mov
ret
es
pusha
or
jg
std
js
outsb
fiaddl
mov
xchg
mov
dec
pushf
ret
inc
data16
movsl
lock
incb
loope
fistl
ds
int3
icebp
dec
cmc
or
cmpsl
jnp
add
mov
cwtl
les
mov
sub
inc
call
leave
xor
sub
push
xchg
leave
pop
jge
cli
daa
fsubrs
cmpsl
pop
iret
scas
pop
mov
pop
rorl
and
cltd
mov
bound
sbb
or
jnp
call
scas
cmp
mov
aaa
jns
aaa
cmpsl
push
cmp
jb
movsl
shrl
imul
scas
cmp
mov
or
fucomp
scas
sti
mov
sbb
jecxz
sbb
inc
inc
pusha
xchg
mov
cmp
mov
mov
push
test
filds
stc
push
cmc
addr16
and
movsb
dec
dec
dec
scas
rcl
dec
inc
out
sahf
shr
out
add
inc
decb
enter
test
leave
sbb
mov
pop
std
sbbl
mov
push
in
xchg
int3
sbb
aad
cwtl
mov
sub
mov
negb
repnz
push
sub
dec
test
inc
mov
dec
push
jb
fs
cmp
rorl
mov
pushf
adc
pop
push
cmp
test
adc
dec
xchg
std
testl
ds
or
inc
in
push
jl
popf
leave
dec
rolb
ret
mov
pusha
mov
es
jno
out
test
push
dec
insl
push
jbe
push
pop
mov
jne
mov
je
cmp
mov
ja
call
andl
and
lods
push
xchg
xchg
mov
out
inc
aad
mov
out
push
test
imul
push
dec
mov
ja
xchg
pop
push
stc
adc
xorl
out
xchg
in
add
dec
ret
test
popa
cmp
gs
jle
das
mov
pop
das
inc
or
lahf
fidivrl
xor
movsl
mov
js
dec
test
lret
sti
sbb
sti
aas
xor
jmp
xchg
arpl
push
inc
add
sub
and
test
mov
xor
push
push
les
mov
fdivrs
push
xchg
mov
rcl
mov
lods
pop
dec
mov
jg
cmp
push
insl
push
pushl
dec
sbb
fwait
es
inc
loop
rcrl
cmp
cltd
xchg
les
mov
call
cmp
dec
sub
decb
mov
cli
jg
shrl
xor
lret
pop
rcrb
andl
mov
sub
fildll
les
aaa
ficoml
cli
into
xchg
sub
adc
add
loop
inc
sbb
pop
out
andl
shrl
or
int3
adc
mov
xchg
sbb
jne,pt
ret
popf
push
push
sub
lcall
aam
imul
and
imul
dec
jge
inc
xor
mov
jge
cmpsl
loope
inc
loop,pn
push
movsb
pushw
inc
mov
fucomp
rcll
sbb
sarb
scas
sub
sub
out
cltd
pop
cwtl
dec
add
ret
test
ss
lods
mov
add
inc
outsl
add
xchg
pushl
cwtl
pop
adc
lock
ss
pop
mov
pop
dec
adc
push
push
pop
push
std
or
xchg
lahf
aam
shll
or
xor
and
out
imul
lds
inc
or
mov
mov
nop
xchg
ret
rorl
fsubl
xor
sub
cs
fistps
fisttps
insb
mov
movsl
jne
mov
push
sahf
mov
mov
fdivs
and
add
lods
imulb
inc
pop
mov
ds
and
xchg
mov
sbb
cmp
mov
shll
dec
dec
push
mov
insb
mov
mov
shll
rcr
ss
inc
dec
cs
mov
hlt
pop
push
loop
movsb
je
pop
shlb
dec
mov
pop
jle
add
fs
adc
xchg
fadd
adc
ror
xor
mov
subb
mov
roll
popa
test
es
pop
add
aam
mov
out
dec
repz
testb
mov
sub
jg
mov
js
pop
je
xor
leave
pop
xor
jg
fcomps
mov
jb
jecxz
mov
cmc
cwtl
mov
and
ja
cmpsl
adc
sbb
xor
cmp
rorb
lods
and
movsb
popf
cli
fmul
mov
mov
and
pop
or
mov
movsb
inc
int3
xlat
jmp
sti
adc
clc
imul
cmc
cli
fimull
mov
dec
cltd
dec
out
lods
dec
jg
push
idivb
pop
xchg
stos
repz
xchg
andl
fcmovnu
adc
test
add
shr
push
jns
xchg
inc
inc
dec
pop
mov
jno
push
das
pop
in
dec
or
dec
call
adc
mov
dec
hlt
pop
dec
sbb
push
add
push
test
aam
test
pop
adc
inc
mov
je
mov
outsb
test
or
cmp
jl
pop
loopne
insl
addl
xor
gs
inc
push
and
sub
movsb
gs
or
cmp
add
mov
int
sti
cmp
ds
sub
popa
xchg
sbb
hlt
cmp
ss
lret
xor
adc
ror
shlb
sub
pusha
fucomip
adc
aam
cmp
mov
push
add
or
loope
cwtl
scas
mov
add
xchg
xlat
jns
loopne
push
movsb
mov
xor
cmc
test
movsb
int3
cmp
add
add
rorl
shlb
push
mov
ljmp
dec
mov
out
test
sub
cmp
push
mov
mov
popa
mov
dec
insl
xor
dec
rolb
mov
les
pop
shlb
push
bound
loop
mov
push
xchg
mov
adc
sub
inc
ds
repz
mov
div
test
pop
lcall
repnz
cmp
xchg
outsl
sub
adc
push
and
add
in
cs
lcall
inc
aad
movsl
or
add
pusha
sub
jnp
push
cmc
push
into
inc
inc
jg
inc
xchg
dec
ss
jmp
notl
pop
lret
mov
push
inc
aam
insl
mov
mov
mov
pop
insb
aam
cmpsb
mov
pop
mov
cli
movsb
cltd
out
rcr
sbbb
dec
arpl
aas
sub
aam
outsl
dec
lret
and
mov
mov
test
jbe
mov
push
xor
or
and
push
enter
test
mov
pushf
dec
jge
je
pushl
xchg
sub
fwait
in
es
leave
nop
dec
test
dec
fbld
mov
fildl
push
xchg
idivb
fcompl
dec
ds
add
lret
mov
add
cmpsl
inc
inc
cmp
idivb
push
sahf
dec
dec
repz
cld
fucom
xchg
jmp
popf
test
or
jecxz
and
inc
ja
dec
in
jbe
push
shrl
jnp,pt
cmpsl
sbb
and
mov
outsl
dec
mul
cmpsb
lock
pop
xorl
subb
jno
or
leave
pop
push
xchg
outsl
or
push
and
jns
int3
add
insb
pop
sbb
aam
fwait
inc
xchg
mov
mov
jp
lods
addb
jle
aas
and
test
movsb
outsb
cmpsl
sti
push
fs
lcall
ljmp
and
imul
pop
pop
test
es
xchg
mov
mov
fadd
in
fildl
push
fnstsw
inc
inc
fiaddl
inc
jae
ds
in
inc
rorl
add
hlt
inc
pop
or
sbbb
imul
clc
icebp
dec
push
repz
mov
mov
repz
int3
push
fdivs
test
insb
fstps
sbbb
lock
leave
jl
fdivr
jecxz
fisttps
or
adc
jmp
pusha
je
mov
cld
rcrb
xchg
stc
cmpsl
mov
repz
in
jns
fnstenv
sub
add
lods
adc
pop
xor
rcr
or
cmp
pop
add
cmp
lds
xchg
mov
lds
cli
mull
pop
nop
inc
mov
in
push
mov
cmp
sbb
xor
and
movsl
cmp
aaa
xchg
lods
cs
pushf
dec
in
arpl
add
out
loop
pop
pop
lahf
shll
ret
or
inc
les
push
fs
push
pusha
cmp
mov
jg
inc
or
lea
js
ss
sub
mov
jb
xor
imul
xchg
jnp
out
outsl
in
cmp
frstor
out
frstor
add
jb
inc
xor
xchg
daa
into
outsl
jo
lea
addl
mov
xor
pop
adc
pop
dec
push
cmp
insl
ret
aad
pop
lods
jns
or
icebp
andb
jle
cmp
mov
pop
in
jecxz
out
jne
scas
loopne
pop
cwtl
mov
jb
movsl
pushf
clc
bound
add
mov
pop
mov
in
push
push
xchg
push
push
sbb
out
scas
movsb
andl
jmp
sbb
sbb
cmpsl
lret
add
jmp
ret
fs
push
mov
jne
xchg
sbb
loopne
loop
lods
add
fdivs
dec
push
cmpsb
imulb
mov
bound
stos
lods
inc
xor
xor
fimull
dec
and
faddl
sahf
icebp
and
jp
sub
mov
fnstcw
add
fsub
lcall
icebp
jl
scas
sbb
arpl
js
clc
push
imul
cmp
test
mov
roll
cmp
jns
int3
notb
inc
sub
sub
xor
push
inc
loope
dec
hlt
repz
scas
rolb
dec
dec
sbb
jae
fsubrs
fnstcw
mov
jno
test
sbbl
or
fisubrl
les
aas
push
cmpsl
jnp
push
aad
xlat
nop
div
lret
mov
sti
mov
inc
das
pop
push
mov
add
in
jbe
ret
out
mov
xlat
mov
mov
in
push
adc
and
fdivl
push
cmp
fs
lea
pop
xchg
fldl
test
je
cltd
jge
out
lahf
jae
movsl
cmpsl
mov
cs
test
xlat
fadd
in
inc
inc
les
sub
ret
imul
mov
xchg
sbb
sbb
imul
inc
push
aas
push
mov
jb
sbb
fdivrl
dec
call
pop
inc
add
js
dec
xchg
mov
dec
stos
icebp
shlb
sub
xor
xchg
adc
pop
mov
or
jnp
push
sbb
adc
adc
xchg
xlat
les
or
push
std
ja
adc
dec
pop
xchg
or
ljmp
pop
sahf
in
mov
cmp
cmc
ficompl
fstpt
test
dec
subb
inc
popa
scas
xorb
mov
cmp
aaa
and
movsl
stos
push
dec
or
pusha
je
ret
jne
mov
inc
je
and
decl
aad
xor
dec
cmp
mov
pop
push
jl
push
add
mov
mov
fwait
shl
fsubl
add
aam
test
lret
xchg
and
jecxz
xchg
mov
cld
push
shr
dec
neg
div
pusha
cli
inc
dec
adc
xchg
jmp
addr16
mov
rcrl
push
leave
aaa
xor
mov
pop
sub
jb
mov
pop
push
or
adc
je
clc
lds
jae,pt
sbb
mov
stc
mov
mov
cld
add
mov
sbb
cmp
aaa
enterw
push
mov
push
jne
mov
dec
xchg
mov
arpl
std
sub
sbb
xlat
add
lret
into
adc
or
cmpsl
mov
sbb
pop
mov
push
ret
push
add
adc
inc
xor
push
push
pushf
aas
mov
movsl
pop
fisttpl
cli
in
popa
les
movsb
sbb
in
mov
mov
popf
clc
outsl
faddp
adc
or
enter
jl
leave
xor
xor
scas
cmp
dec
cmp
sti
repnz
popf
out
adc
or
dec
stc
fstpt
and
das
and
jle
mov
pusha
xlat
or
xchg
and
or
sbb
sbb
mov
xor
popf
dec
pop
test
pop
sub
mov
lock
es
jno
adc
lock
aas
pop
mov
pop
stc
push
ret
cmc
mov
int3
jl
inc
and
mov
es
adc
inc
fbld
data16
xor
ftst
pusha
rol
mov
inc
push
mulb
es
call
inc
inc
mov
mov
push
jae
xchg
pop
arpl
bound
outsb
je
sub
and
scas
enter
jnp
mov
fiadds
shll
fwait
lock
js
pop
adc
sub
xor
xchg
out
bound
clc
rcrl
push
loop
icebp
out
pop
sahf
dec
shll
mov
mov
jle
test
in
fs
test
outsl
repz
aad
aad
mul
adc
mov
mov
fwait
pop
sbb
cwtl
sbb
loop
mov
xlat
xchg
popf
das
mov
popf
add
out
sbb
and
inc
xchg
cmp
icebp
cld
adc
dec
dec
xlat
cmp
test
js
xchg
or
out
mov
dec
hlt
push
not
loopne
cli
xor
fildl
movsb
stos
test
ret
pop
push
pop
push
adcl
popf
ficoml
scas
shll
in
sub
and
cmpsb
lcall
mov
cmpsl
test
pop
gs
xor
cmp
push
fadd
stos
mov
jp
xchg
notb
push
jl
sar
cmp
dec
jmp
hlt
aaa
push
jns
jmp
and
adc
pavgw
mov
ret
je
inc
xor
mov
mov
dec
daa
dec
int
dec
jne
notb
sbb
inc
jge
xchg
pop
pop
in
adc
inc
push
jl
xlat
push
loop
mov
mov
sbb
das
and
es
jne
mov
add
xchg
sarl
xchg
mov
adc
std
jns
nop
or
cmp
repz
lea
outsl
jb
cs
ficoml
pop
inc
shlb
daa
imul
sbb
movsb
pop
jecxz
inc
out
mov
jge
inc
add
xchg
pop
mov
outsb
ret
mov
mov
pusha
test
mov
clc
int
bnd
popf
sbb
inc
or
dec
into
gs
xor
cmp
jmp
mov
ret
jmp
mov
sbb
icebp
pusha
add
sub
aas
ja
data16
mov
gs
aaa
shll
movsl
sbb
add
xchg
or
mov
daa
shll
mov
push
sarl
notb
inc
shlb
lcall
fs
ss
mov
test
lods
xor
and
ret
sbb
jb
sub
leave
pop
mov
fadds
jle
dec
lods
imul
mov
pop
sub
mov
addr16
sub
scas
mov
jmp
adc
in
fisubs
nop
cmp
xchg
and
lcall
out
pop
push
push
xor
aas
xchg
stos
mov
push
push
mov
dec
ror
xchg
dec
ljmp
jecxz
mov
mov
jl
std
cmpl
imul
dec
push
test
mov
or
cmc
shr
push
fwait
and
ja
dec
inc
ds
outsl
sbbb
sbb
inc
adc
mov
jae
je
in
addr16
mov
ficomps
loop
pop
xor
out
sub
fcmovnu
pop
mov
sub
lea
sbb
xor
call
test
pop
adc
add
jmp
add
dec
add
add
jnp
cmp
push
push
cs
xchg
mov
xor
shrb
inc
push
es
xchg
ss
movsb
inc
push
or
sbb
xchg
rcll
sub
in
mov
mulb
xchg
icebp
hlt
dec
daa
xor
sarb
pop
pop
ret
adc
pop
mov
ret
popa
sub
test
inc
int3
pop
cld
test
cmpb
syscall
popa
testb
mov
les
loope
mov
cld
popa
movl
mov
ja
out
push
outsb
mov
mov
je
js
fdivl
mov
cmp
aas
mov
adc
je
jecxz
nop
jmp
jle
or
and
xchg
lret
xor
dec
dec
mov
dec
arpl
scas
sbb
inc
jnp
daa
sub
fistpl
stos
jge
add
in
stc
pop
lret
cltd
mov
lods
repz
aad
movsl
add
jge
enter
mov
lods
mov
adc
imul
push
das
pop
push
mov
fcompl
aad
xorb
cmp
dec
sbb
cmp
pusha
adc
dec
push
out
adc
xchg
ret
insb
mov
push
clc
out
je
inc
insb
xor
fistps
push
dec
push
cmpsb
std
push
int3
sarl
lea
shr
mov
adc
push
jne
xor
xchg
clc
mov
mov
repnz
or
rorb
into
sub
cmp
xor
and
adc
lahf
cmp
xor
mov
mov
js
sbb
dec
jno
inc
dec
inc
push
fiadds
xchg
cmp
aas
push
into
push
cld
aaa
ds
sbb
cs
pop
hlt
movsb
jae
jg
int3
idiv
int3
push
inc
xor
jg
adc
adc
sub
out
fs
lock
enter
int
std
ja
ss
mov
jno
out
scas
movsl
xchg
add
mov
sub
mov
aam
inc
push
xor
push
cmp
cmp
jns
cmpl
loopne
or
push
bound
stos
sbb
jnp
int3
shll
pop
int3
or
mov
scas
add
inc
clc
out
xchg
push
movsl
std
loopne
pop
adc
push
aam
pop
push
cld
pop
call
or
sub
jle
lods
pop
mov
test
icebp
or
inc
mov
into
mov
pop
sbb
mov
or
gs
out
jecxz
mov
ficoml
push
push
mov
mov
cmp
std
sbb
mov
mov
fwait
mov
jmp
sub
orb
out
jb
cmp
in
push
ds
xchg
in
or
inc
mov
ja
nop
mov
and
popa
jmp
or
mov
rcrb
push
add
ljmp
mov
aas
scas
sub
movsl
mov
mov
cmp
enter
lret
mov
adc
jmp
lods
or
xchg
fisubs
add
bnd
fisttpll
out
xchg
add
mov
mov
in
xchg
inc
or
sbb
pop
icebp
and
js
fs
push
aaa
sbb
stos
xchg
test
cmp
sbb
call
and
mov
sbb
scas
jmp
add
jno
hlt
jmp
int3
adc
mov
lods
dec
adc
sub
xor
xchg
movsb
cmp
pop
clc
popf
dec
sub
int3
gs
add
fldcw
loope
fisubs
outsb
dec
push
or
xchg
inc
jg
insb
jmp
nop
leave
add
mov
xchg
and
ret
repz
sbb
sbb
ja
movsbl
aaa
addl
popf
cmp
ljmp
pop
sbb
add
pop
push
jl
lds
adc
arpl
ret
lods
or
inc
adc
cmp
pusha
jp
pop
stos
rorb
push
jns
xchg
adc
loopne
scas
cmc
sub
daa
pop
dec
iret
cmpl
push
clc
mull
mov
cmp
in
cmp
mov
push
bnd
pop
outsb
addr16
dec
push
es
rorl
mov
pop
xchg
int3
mov
shlb
fidivrl
and
nop
pop
std
xchg
mov
das
sub
fisubrl
sarb
into
ret
mov
imul
inc
cmpsb
ficoml
push
mov
mov
test
mov
test
jg
or
mov
mov
rolb
inc
sub
out
inc
jmp
add
mov
outsb
rcrb
int3
nop
aaa
jp
hlt
int
fst
out
rcll
fisubs
and
mov
aaa
inc
and
mov
or
test
lock
fmulp
cltd
mov
sbb
cmp
imul
jle
ss
xchg
mov
xchg
xor
pop
jmp
ret
and
mov
gs
fcomp
push
push
shlb
cld
mov
xor
mov
xor
dec
sarl
pusha
hlt
cmpsl
xchg
pushf
xchg
xor
pop
mov
adc
movsl
sub
inc
fsubrl
mov
daa
pop
stos
das
pop
fldenv
sbb
sbb
iret
mov
subl
dec
sbb
or
xchg
pop
inc
repnz
xchg
pop
pop
int
rolb
loope
sbb
insl
mov
cmp
pop
sub
or
pop
mov
xor
mov
mov
loope
add
jecxz
mov
testl
scas
fmull
mov
stos
rol
and
jecxz
lret
xchg
loopne
mov
ljmp
dec
push
popl
dec
push
ds
inc
jno
dec
pop
pop
fisubrl
lahf
shrl
dec
xor
inc
xchg
insl
xchg
in
add
adc
mov
mov
xor
cltd
cmp
push
inc
add
out
out
stos
iret
xor
lods
mov
inc
stos
fcoml
out
sbb
in
aaa
icebp
cwtl
pusha
cmpsb
ss
scas
dec
ret
enter
sbb
scas
insb
and
test
sub
fwait
add
mov
mov
std
mov
imul
cmp
mov
xor
fs
sarl
outsb
popa
adc
push
cld
ja
es
jae
jnp
je
dec
sti
dec
rol
add
fcompl
and
inc
jl
mov
repz
ret
out
out
outsb
jl
push
sbb
cmp
mov
int3
mov
add
mov
repnz
mov
notb
iret
sbb
mov
xchg
mov
or
xchg
jle
push
dec
subb
xor
roll
inc
or
loope
loope
lods
inc
mov
loop
mov
and
add
mov
mov
aam
push
lds
movsl
xor
xchg
lea
fldl
cmp
sub
bnd
push
int
jae
cmp
xor
faddp
bound
pop
pop
or
dec
mov
mov
fsts
out
fs
flds
push
push
add
hlt
sub
jo
aas
cmp
sbb
jo
push
insb
push
xchg
cmp
movsb
in
ja
or
in
pop
cmc
jnp
mov
mov
popf
mov
sub
sub
jge
ret
dec
stc
inc
fidivl
lea
shrb
inc
lds
jnp
mov
or
leave
mov
sbb
pop
fisttpll
push
jbe
mov
cmc
mov
test
testl
repz
loopne
fstpl
std
mov
repz
mov
ds
jg
out
gs
xlat
mov
nop
stc
mov
ror
into
repz
xor
inc
jne
loop
ret
pop
movsb
icebp
in
inc
fstpl
inc
or
ja
xchg
cld
in
scas
pop
scas
sub
sub
inc
xlat
push
mov
sbb
hlt
jb
inc
mov
adc
pop
outsb
xchg
rcrl
lock
jae
mov
push
mov
add
aad
dec
out
out
cwtl
dec
scas
popa
mov
cmp
add
xchg
in
jecxz
pop
popa
divb
test
jbe
jne
out
mov
cmpsb
loope
cli
aaa
xchg
sahf
or
bound
mov
aad
shll
mov
fmuls
xor
dec
push
ja
xchg
sbb
adc
mov
mov
dec
lcall
cmpsl
iret
mov
adc
sbbl
jecxz
and
xlat
sub
mov
pop
daa
stos
jne
dec
add
std
mov
fistps
data16
std
mov
xchg
in
rorl
sbb
es
cmp
repz
repz
sti
fldt
sbbb
out
hlt
adc
nop
call
int3
decl
fldenv
inc
sub
scas
andb
test
dec
sbb
lret
dec
in
mov
jl
jecxz
into
push
pushf
out
stc
mov
adc
pop
inc
fldl
gs
pop
jle
aad
sbb
push
pop
out
add
insl
in
daa
and
inc
adc
and
xor
push
adc
cmpsb
sbb
pop
sub
fs
test
push
lcall
and
cltd
cld
sti
mov
sbb
xor
dec
repz
pop
push
push
jg
xor
and
cmp
mov
push
mov
lahf
lcall
pop
les
pop
add
sarb
mov
push
xor
lret
addl
fdiv
mov
mov
leave
test
ss
and
adc
lret
xor
sub
andb
test
pop
mov
data16
mov
mov
mov
es
or
push
inc
dec
pop
dec
pop
hlt
cltd
les
jle
jg
inc
mov
jg
in
push
mov
jne
jmp
xor
stos
popl
cmc
shrb
gs
imul
loope
int3
and
mov
ds
rcrl
mov
pushf
mov
cmp
outsb
das
dec
cld
and
cmc
or
cld
mov
mov
sti
test
add
xchg
shrl
fs
stos
iret
movsl
aam
cmp
data16
cmp
jl
sbbb
adc
xor
ja
xor
popf
fdiv
jo
dec
decl
outsl
sub
cmpsl
xchg
aam
lahf
rorl
fidivs
sub
mov
maxps
xchg
add
lahf
int3
fbstp
lret
inc
cli
stos
call
or
xor
arpl
mov
dec
ret
or
cmpsl
xchg
lock
pusha
push
adc
push
inc
jns
and
cmp
sbb
sbb
sbb
mov
or
sbb
cmp
lcall
mov
dec
gs
enter
mov
cmp
enter
add
shll
loopew
rcrl
ret
jl
addr16
mov
adc
fwait
dec
pop
cs
sub
imul
jecxz
jbe
in
stos
inc
jecxz
or
fucomip
adc
xlat
xor
ja
push
stos
js
push
xchg
aad
test
stos
xor
mov
and
int3
incl
add
sahf
and
jle
lahf
outsb
neg
adc
into
repnz
addb
push
sbb
xor
inc
jecxz
sbb
mov
ret
sbb
xchg
and
cmp
pop
mov
shlb
push
adc
mov
cmp
ret
or
xlat
ret
cmp
xchg
addb
inc
cmc
cld
mov
hlt
or
inc
add
outsl
stos
dec
push
loop
dec
jo
push
cmp
jge
cmp
xchg
push
mov
or
cmp
xchg
int3
add
in
xchg
in
orb
clc
push
test
cmp
inc
mov
xlat
jnp
lret
lods
sahf
jae,pn
sbb
push
cwtl
data16
ds
ss
push
sarl
pop
fisubrs
arpl
fsubrp
pop
stc
lahf
sbb
adc
and
xchg
shll
or
jg
enter
lods
mov
mov
xchg
int3
inc
scas
or
hlt
out
add
imul
push
mov
push
pusha
scas
mov
addr16
xor
sbb
pop
xor
idivl
adc
orl
out
out
arpl
xchg
dec
push
lea
push
or
push
out
int
es
push
fldt
pop
stos
aaa
nop
lds
scas
repnz
movsl
in
popa
push
dec
add
mov
pop
dec
jmp
push
repz
movsl
cmp
out
cmpsb
push
shll
xchg
pop
sub
jl
push
in
cmp
push
jbe
fucom
inc
into
test
sbbl
xchg
ficompl
jbe
pushl
std
mov
mov
cmp
inc
iret
push
andl
clc
cmp
mov
mov
xor
xor
push
dec
repz
aam
lock
and
jb
mov
jb
mov
and
pop
ljmp
aad
sbb
ljmp
out
jle
ud2
mov
add
loopne
inc
int
test
mov
nop
fnsave
xchg
jo
push
addr16
ja
xor
nop
imul
adcl
cwtl
cmp
mov
jl
push
mov
test
jns
sbb
sti
inc
cltd
and
scas
mov
or
jbe
jmp
cmpsb
lds
pusha
inc
xor
adc
and
data16
outsb
into
lods
inc
xchg
pop
add
jmp
cmp
pop
call
stos
adc
idivl
jns
int3
mov
dec
xchg
dec
mov
stc
or
inc
lock
xchg
loope
loop
cmp
or
mov
adc
sbb
andb
push
jae
test
movsl
bound
in
jno
push
fwait
and
jb
adc
jmp
jb
jnp
xor
push
mov
ret
mov
test
loopne
mov
jle
icebp
dec
mov
sub
sbb
icebp
outsb
mov
aaa
cmpsb
test
jo
testb
mov
pop
cmpsb
les
adc
das
dec
and
arpl
cmp
jg
pushf
and
xchg
out
cmp
pushl
andb
mov
stos
popf
sti
xor
jo
lds
mov
fdivrl
test
push
add
sbbb
rolb
movsl
lods
in
sahf
lock
adc
xchg
rorl
out
xor
in
ja
mov
repnz
mov
pop
or
leave
out
sub
stos
lods
test
ljmp
xlat
push
test
into
scas
sbb
rorb
dec
int3
jnp
mov
enter
loopne
push
sbb
sbb
push
scas
out
add
cmp
mov
fsubl
adc
aas
and
dec
outsb
sub
gs
push
test
adc
into
xchg
movsb
push
jns
je
mov
xchg
mov
call
and
in
mov
push
add
into
ret
ljmp
int3
sub
add
xchg
repnz
mov
hlt
mov
les
cmp
ss
jae
inc
repz
mov
aam
add
jp
dec
mov
or
cmpsb
in
push
push
cmc
in
js
mov
outsb
push
mov
maxps
pop
adc
cmc
popf
int3
adc
push
inc
pop
lret
and
ds
out
push
repz
iret
in
nop
cli
pop
test
sbb
stos
mov
js
xchg
push
popa
pop
jae
cli
clc
and
push
push
divl
movsb
aam
push
xchg
ret
aam
and
outsl
shlb
xor
xchg
pop
test
dec
sub
daa
xor
test
fcoml
push
and
out
gs
dec
sub
cltd
ret
lcall
adc
push
jo
ret
pop
sbb
aaa
test
fsub
out
mov
sahf
push
pop
push
out
mov
fucomip
lcall
sarb
cmp
inc
test
adc
iret
cltd
sbb
rcrb
jle
xor
into
aaa
dec
push
push
fmuls
loopne
xchg
scas
push
mov
jae
in
cld
xchg
repnz
mov
icebp
jae
ss
or
pop
in
pop
jbe
ret
push
fiaddl
daa
push
ficoms
push
ds
mov
mov
and
and
ss
test
dec
jb
pop
pop
test
dec
imul
mov
repz
dec
mov
mov
rorl
out
cmp
dec
adc
arpl
push
movsb
xor
mov
pop
cmpsb
enter
sar
push
mov
lea
popf
shll
call
icebp
mov
cmpsl
or
pop
push
jae
xlat
xor
mov
mov
xor
testl
popa
in
jb
lock
mov
jg
pop
xchg
mov
jns
lods
insl
sub
sti
add
and
bound
fldt
shrb
fsubrl
mov
sahf
xchg
fst
sbb
mov
insb
jp
cmc
cmp
xor
rorl
aam
and
jl
les
lret
mov
ja
out
cmp
pop
dec
enter
in
cmp
xchg
push
push
je
je
pop
add
cmp
in
inc
xorb
rcrb
adc
pop
clc
mov
push
popf
mull
push
pusha
jg
pop
and
pop
sub
popf
adc
mov
push
add
nopl
mov
fldenv
mov
packuswb
adc
cmp
add
lret
int3
mov
cmp
lea
jno
jp
stos
xor
out
loop
sub
outsb
stos
push
aam
sar
cmp
and
decl
xchg
xchg
push
sub
repz
fisubl
sahf
int3
fdiv
repnz
retw
jbe
sbb
dec
repnz
sahf
sbb
cld
add
pushf
dec
push
scas
push
xor
decl
and
sar
mov
push
jbe
push
mov
scas
mov
add
or
pop
fisubrl
push
xor
pop
dec
mov
and
mov
mov
sbb
and
stos
arpl
or
inc
test
lods
aaa
outsl
xor
xchg
lea
imul
fnstsw
inc
lock
or
aaa
xchg
cltd
pop
dec
ficoml
xor
jb
ja
mov
in
out
jbe
xor
addr16
jne
int3
mov
aad
pop
xor
fsubr
and
insb
out
mov
enter
mov
mov
jp
add
rorb
inc
inc
insl
leave
hlt
dec
add
pop
aas
int3
sahf
sbb
adc
repz
push
pop
mov
mov
int
lret
jp
push
jecxz
lods
movsl
in
out
pop
pusha
sub
pop
je
test
dec
mov
data16
pusha
sbb
addr16
loop
xor
ja
cmp
lahf
xchg
sub
adc
and
in
mov
xchg
clc
mov
outsb
jbe
cmp
loope
sarb
mov
fnsave
into
daa
lret
pop
enter
mov
mov
int
xchg
lods
push
xor
inc
fisttpll
and
inc
out
es
pop
shll
adcb
fildll
dec
xorl
or
fyl2xp1
adc
xchg
lret
xchg
push
mov
cli
jne
icebp
sbbb
ja
xor
xor
cmpsl
inc
cmc
dec
or
roll
mov
call
aad
or
inc
mov
mov
push
dec
add
lods
ds
in
dec
pop
cmp
push
outsb
push
sbb
and
in
rep
fbstp
loopne
enter
pushf
cmpsb
pop
test
jnp
leave
fs
push
push
pop
aaa
ljmp
loopne
or
fs
call
imul
sub
add
pushf
ljmp
adc
add
xor
mov
push
cs
mov
cmp
enter
jb
lret
bound
add
cld
repnz
sub
jp
add
js
aam
pop
xor
cmpsl
das
scas
adc
xor
test
add
xor
or
fstps
fdivs
xor
bound
and
xchg
inc
int3
xor
inc
mov
mov
sub
fs
cmp
enter
pop
push
xchg
pop
mov
push
cmp
jb
xor
dec
imull
int
push
jno
xchg
insb
mov
xchg
inc
in
mov
ret
inc
imul
xor
adc
push
mov
arpl
out
loopne
cs
ror
icebp
lods
jno
dec
add
cltd
arpl
xor
or
inc
lahf
or
sub
fisttps
sub
mov
repnz
fwait
mov
je
gs
or
jp
adc
pop
pop
cs
insl
imul
mov
repnz
or
not
sub
stos
call
aad
mov
dec
test
stos
xchg
imul
adc
pusha
adc
test
fsubs
outsl
orb
adc
rorl
add
sub
push
shlb
or
mov
or
xor
sbb
into
add
pop
xor
cmp
dec
rclb
xor
cmp
jmp
xchg
dec
add
xchg
xor
mov
inc
enter
out
outsb
std
jg
push
push
dec
mov
mov
out
sahf
adc
xchg
sbb
add
sub
or
push
xchg
pop
pop
xchg
xchg
sahf
jle
cmp
mov
xchg
pop
jle
jbe
push
into
stos
mov
in
cmp
notl
movsb
cmp
sub
insb
jl
sbb
push
pop
insl
dec
mov
xor
push
dec
insb
fs
cmc
inc
push
test
fmul
xchg
push
push
mov
pop
adc
xchg
rorb
rclb
dec
sbb
insb
xchg
aad
push
mov
add
js
cmp
or
mov
sbb
scas
loopne
movsb
dec
add
xor
cmc
jle
inc
xchg
fnstsw
loopne
add
xor
dec
flds
push
in
daa
dec
lea
imul
ror
clc
xchg
cli
inc
adc
mov
and
in
sbb
and
imul
lods
out
movl
xchg
jp
xor
dec
shlb
mov
rorb
mov
mov
fsubrs
jno
sti
adc
xchg
cmp
lahf
aad
sbb
push
inc
mov
jl
loop
sahf
js
int3
fldl
gs
pop
xor
or
arpl
inc
stos
lret
mov
mov
test
aaa
data16
inc
adc
pop
jb
cmc
jno
cli
jle
enter
sbb
sub
xchg
andl
mov
aas
shlb
test
or
mov
inc
cld
or
and
ret
cmp
sbb
cmpb
jae
stos
shlb
jecxz
ret
inc
shrb
and
sbb
sbb
mul
in
gs
and
sbb
and
lock
mov
test
fdivs
add
cltd
cmc
outsl
insb
mov
xor
test
inc
cmp
cmc
or
popf
sub
sub
xchg
sbb
xchg
xchg
push
pop
mov
fwait
repnz
mov
and
adc
jp
out
sbb
aam
lods
scas
jl
add
push
pop
mov
inc
pop
icebp
pop
inc
dec
mov
rclb
xor
in
rcpps
mov
push
das
mov
pop
push
jae
roll
test
loop
jl
push
jge
adcl
push
adc
xchg
cmp
sub
into
mov
inc
cwtl
pop
sub
pop
stc
cmp
jns
add
repnz
mov
mov
mov
rolb
icebp
mov
nop
push
cmpsl
jne
fs
adc
popf
and
push
sbbl
fsub
cwtl
fldl
out
jae
jo
push
inc
mov
mov
push
cmp
pushf
dec
jae
cwtl
js
cmpsb
mov
mov
dec
fisubrl
lods
jecxz
adc
pop
push
mov
frstor
lock
jge
mov
test
outsb
nop
mov
push
fcomps
add
jmp
stos
cmp
hlt
dec
cmp
out
inc
push
mov
pusha
inc
aaa
jg
aaa
pop
fdivr
inc
adc
cmc
sar
xchg
mov
xor
mov
sahf
cmp
and
mov
mov
cli
cmpsb
mov
orb
pop
data16
addr16
repnz
stos
jne
ret
sti
inc
and
fbld
cli
sbb
inc
roll
shlb
adc
je
out
adc
xor
cmp
inc
jp
sbb
xchg
and
icebp
push
jle
inc
test
jge
sub
out
fsubs
pop
enter
test
incl
pop
push
fmull
sub
out
repnz
popl
ds
fucomi
dec
loop
cwtl
aas
sub
test
sbb
call
fcmovnu
add
cmp
aam
or
pusha
sbb
in
cli
mov
push
fs
imul
das
popf
dec
cli
cmp
insl
out
xor
ja
lcall
sbbb
xchg
in
mov
xchg
inc
stc
pop
testl
rcl
inc
stos
fs
dec
ss
ja
in
repnz
or
ret
jae
ficoml
js
mov
cmpsl
inc
lret
pop
push
scas
int3
inc
ss
pop
pushf
mov
lea
insb
fs
iret
adc
sub
rorl
jno
adc
jg
out
push
outsl
enter
cmp
jle
mov
sahf
pop
jne
sbb
inc
out
aaa
movsl
cmpsl
push
dec
fildll
ficoml
or
int
xor
enter
loopne
repz
sahf
shrb
mov
push
enter
subb
lret
xchg
fiaddl
and
dec
sub
rorb
icebp
into
sub
jae
pushf
push
les
and
cmpsl
xchg
clc
aas
add
push
push
jne
test
testb
repz
mov
mov
ret
ja
mov
sarl
fcomip
inc
bound
pop
popa
js
mov
in
and
sarb
mov
xchg
xor
inc
sti
and
lds
xor
das
add
ds
leave
mov
sbb
fs
jo
js
test
inc
mov
cli
xor
dec
or
in
shll
ss
mov
cwtl
xor
addr16
or
jmp
dec
and
push
test
jle
mov
xor
rcl
das
stc
movsl
jecxz
mov
jl
rol
gs
jno
loop
mov
sarb
jbe
movl
mov
push
fs
dec
in
out
and
sub
mov
fdivs
dec
jg
inc
imul
mov
or
inc
dec
fstpl
or
sub
test
adc
jecxz
repz
fwait
add
popf
in
xorl
and
push
lcall
xchg
or
jge
rcl
sub
aas
sbb
je
xchg
or
scas
or
adc
pop
or
adc
adc
aas
inc
mov
or
xor
jno
sbb
test
roll
mov
jnp
ljmp
lea
mov
dec
dec
mov
sub
pop
push
dec
adc
es
cs
pusha
and
mov
mov
jecxz
jns
aaa
seta
aad
ss
or
xchg
data16
xchg
mull
imul
cld
pop
push
add
dec
sub
cmp
cmp
movsb
stos
cmp
dec
mov
push
sti
jb
out
clc
push
pop
cmp
xchg
rep
mov
outsb
mov
fwait
repnz
aad
adc
lahf
out
into
loope
push
adc
and
mov
or
test
or
inc
cwtl
bnd
inc
js
and
aas
push
adc
ret
call
mov
test
inc
fs
addr16
xor
cltd
bound
xchg
dec
andl
es
fwait
aaa
and
aam
cmp
imul
cmp
fs
sub
jnp
add
mov
pop
ret
fldcw
inc
jae
in
cmp
test
inc
loope
dec
lock
mov
stos
jo
or
xor
and
out
lahf
js
mov
out
hlt
add
push
mov
dec
loop
jecxz
jmp
sar
mov
movswl
in
xchg
enter
sub
xchg
loop
mov
insl
push
les
xchg
stc
ret
addl
repnz
cmp
fcoms
pusha
mov
test
movsl
test
pop
sub
cmp
pop
pop
fcoml
push
nop
stc
xchg
or
add
mov
mov
test
jmp
imul
mov
pop
xor
xor
jo
andl
inc
mov
dec
int
xlat
push
jg
std
ss
add
addl
jb
es
sub
mov
pop
popf
mov
and
movsb
lahf
mov
aas
insl
bound
pop
scas
dec
imul
push
sub
dec
in
fsub
or
imul
mov
lods
cmp
push
shlb
mov
sbb
pop
jnp
jns
or
mov
cmp
cmp
fimull
add
addr16
das
imul
jns
adc
sbb
lods
mov
pop
ja
pop
xlat
fldenv
mov
test
xor
push
iret
rcrb
mov
mov
das
jbe
inc
push
push
lods
dec
adc
jg
dec
cmp
adc
push
cmp
into
xor
and
and
push
sbbb
insl
dec
lret
in
mov
jnp
insl
mov
jbe
fcmovnb
mov
sbbl
fcompl
bswap
in
popf
popf
movsb
bound
outsl
test
pusha
mulb
mov
add
ss
neg
adc
fidivrl
mov
orl
mov
mov
mov
pop
mov
fidivl
xchg
cmpsb
sbb
lock
pop
shll
fisubl
movq
test
push
clc
ficompl
mov
fwait
jmp
cmpsl
sbb
xchg
addr16
addr16
mov
sar
stos
inc
pushf
cmpl
dec
add
cmovo
scas
repz
mov
or
xor
mov
outsl
mov
js
cs
or
ret
sbb
adc
out
mov
movsl
and
or
lds
lds
jge
and
gs
scas
jne
popf
jno
scas
inc
push
mov
test
rcr
pop
aad
jmp
in
mov
push
jns
rclb
mov
popf
inc
jle
mov
xchg
adc
mov
xor
ljmp
pop
rol
mov
inc
lahf
add
loopne
into
mul
and
push
xor
mov
sti
jle
pushf
fsubrl
push
mov
mov
cmpsl
jno
repnz
mov
sar
mov
iret
mov
xchg
loope
pop
call
xchg
lret
push
dec
test
or
dec
lahf
or
scas
adc
ret
or
popf
xor
and
jge
enter
cwtl
mov
insb
mov
aaa
pusha
sbb
add
daa
sbb
mov
push
aas
nop
mov
loop
mov
jl
and
xor
out
add
fcomip
es
das
std
movsb
addb
popf
xchg
int
or
jge
jge
add
test
push
lret
jae
repz
fs
stos
cmp
cltd
repz
and
cltd
cmp
lahf
push
inc
push
inc
repz
mov
mov
pop
ret
les
jnp
sarb
out
adc
daa
icebp
adc
jge
lret
xor
mov
pusha
xor
inc
push
gs
mov
sub
mov
les
movb
jmp
and
sbb
xlat
mov
inc
enter
mov
cmpb
mov
icebp
les
insb
hlt
cmp
mov
call
or
jnp
call
nop
ja
dec
push
fwait
ror
sbb
iret
push
pop
mov
xlat
cmp
sbb
jle
sub
mov
adc
xor
and
inc
adc
sub
mov
mov
stos
add
or
and
push
push
pop
xchg
xor
or
fldenv
leave
daa
inc
mov
sti
sahf
in
nop
push
iret
xlat
shll
stc
movsl
mov
div
push
sbb
loope
xor
jp
ja
shll
adc
mov
fucomip
lods
jb
fistl
neg
mov
arpl
cmc
mov
jno
mov
adc
in
push
pop
mov
stos
daa
cmp
sub
sbb
pop
xchg
clc
ljmp
aam
pop
inc
mov
fiadds
inc
pop
imul
pop
clc
cmp
dec
outsl
data16
or
and
hlt
add
or
ret
xchg
xor
pushf
cmp
leave
jb
adc
mov
xchg
test
inc
xchg
push
aam
test
xchg
jae
and
lea
insb
xchg
sub
in
aad
and
test
leave
push
or
mov
stos
repz
out
sbb
imull
iret
xchg
xor
sub
xor
pop
clc
int3
test
push
outsb
or
bound
call
movups
fsubp
jg
leave
sbb
mov
in
jnp
xchg
pop
in
out
roll
inc
ficomps
mov
inc
test
incb
in
test
jecxz
push
test
frstor
pop
dec
adc
xor
mov
js
jge
add
cmpsb
sar
not
xor
and
push
sbb
inc
xchg
adc
xor
ds
adc
movsl
sub
outsl
mov
dec
ljmp
jecxz
dec
jne
icebp
inc
mov
mov
je
cs
mov
loope
mov
in
lds
ja
out
xor
decb
jns
sahf
adc
in
dec
aaa
ljmp
sub
push
fldl
faddp
mov
push
sbb
jmp
mov
aas
into
xor
lcall
add
in
push
ror
stos
popa
icebp
dec
sti
pop
jo
clc
mov
ds
mov
lea
lcall
sar
push
in
push
jmp
out
lahf
cld
insl
mov
inc
or
jecxz
and
cmp
jne
js
sarl
sub
bound
ds
mov
add
cmp
sub
jle
iret
mov
sub
gs
leave
adc
and
fcoml
psubw
mov
filds
push
in
test
mov
hlt
dec
mov
pop
push
push
mov
mov
jg
mov
inc
ljmp
aas
out
sub
jp
fmuls
xchg
mov
popl
mov
xor
sbb
and
cmp
jo
adc
enter
rorb
sub
bound
pop
rcrl
jbe
nop
fsubr
sbb
cltd
mov
stc
adc
ss
sbb
es
stc
fnstenv
jg
add
popa
xor
push
mov
xor
popl
lock
xchg
xchg
jno
push
adc
inc
in
sbb
fistps
or
int3
xor
inc
xor
lcall
mov
and
pop
inc
cmp
inc
es
hlt
dec
xchg
sbb
dec
mov
mov
fcoms
aaa
and
lods
cmpsl
loope
in
push
sbbl
pop
leave
sub
add
in
mov
popf
dec
xchg
pushf
loopne
loop
ffreep
or
test
xchg
push
cmpsl
jl
aad
mov
das
loop
mov
push
stc
add
stos
insl
jge
mov
nop
shrl
dec
sahf
stos
add
inc
fnstenv
test
fidivl
xor
add
adc
fsts
out
dec
or
aam
sub
cmpsb
lret
lods
test
sbb
es
add
xor
cwtl
xlat
jnp
xorb
daa
adc
arpl
mov
pusha
fsubrl
insb
fsubs
jbe
add
test
mov
dec
mov
filds
xchg
lods
jb
cltd
add
aam
outsl
push
mov
loop
add
push
sahf
add
sub
mov
mov
xor
and
loop
xor
pop
or
mov
mov
js
mov
adc
and
sti
pop
dec
lahf
out
cmpsl
xor
jo
mov
jb
mov
inc
jne
mov
mov
in
mov
pop
mov
adc
roll
js
test
push
dec
sub
mov
leave
ror
or
in
dec
daa
inc
lods
scas
pop
shlb
add
push
xchg
mov
or
cmp
pop
hlt
jbe
jg
push
fiaddl
psrlw
and
cmp
jnp
push
cmp
adc
xchg
mov
in
aaa
push
cmc
enter
jmpw
jns
or
or
out
adc
pop
imul
or
pop
mov
mov
jno
cld
rol
xchg
xchg
fs
adc
leave
fsubrs
dec
jg
adc
xor
mov
cmp
dec
mov
pushf
sbb
mov
ss
movsb
in
cmp
add
cld
mov
in
fsub
dec
cmp
sbb
aaa
xchg
push
jle
in
xlat
xchg
sub
add
cmp
mov
aam
popw
sbb
cmp
aam
idivl
xor
adc
in
jp
and
test
insl
sbb
or
das
or
sarb
mov
cmp
sbb
daa
fisubs
into
sahf
in
mov
push
repnz
xor
ret
scas
fnstenv
sbb
xchg
pop
and
mov
inc
popf
sbb
test
xchg
jp
sub
pop
loop
cltd
idiv
rolb
mov
fsts
fsts
jns
pop
inc
orb
mov
dec
repz
adc
nop
loope
mov
rolb
jns
mov
int
or
jmp
or
or
mov
pop
push
inc
mov
mov
mov
adc
and
sub
pop
sbb
push
loopne
pop
sbb
aad
out
lcall
imul
shll
sahf
and
push
shrl
cmp
out
jmp
mov
popf
insb
lret
lret
jge
push
cmc
in
shrl
insl
mov
ror
popa
jl
and
adc
in
sysenter
adc
xchg
push
cmpsl
cld
scas
dec
cmc
addr16
add
clc
inc
fwait
pop
dec
dec
mov
cmc
push
adc
sbb
loope
stc
pop
pushf
dec
xchg
movsl
add
cmp
outsb
push
out
repnz
mov
daa
mov
xlat
adc
dec
loopne
sub
xchg
cmpb
mov
loopne
mov
add
js
mov
inc
add
sbb
ret
shlb
into
sub
push
cmc
lods
mov
xchg
sbb
mov
xchg
dec
mov
jmp
cmp
fldcw
sahf
xchg
loopne
mov
jbe
push
cmpsl
lahf
add
mov
scas
dec
rcrl
ss
fdivrp
repz
or
mov
cmp
pushf
popl
add
mov
sub
add
sub
and
and
stos
jae
mov
xor
scas
testb
movsb
clc
lret
jg
inc
pop
jae
out
push
dec
setl
inc
flds
mov
test
shlb
test
in
mov
movsb
mov
stos
fnstsw
data16
or
xor
outsl
jle
fildll
sub
push
adc
pop
int
sbbb
cmp
pusha
repnz
insl
jle
add
sbb
movsl
enter
out
sub
dec
jl
lods
push
mov
cmpsb
cmp
or
std
push
imul
out
jnp
jmp
or
out
sub
das
addr16
add
in
lds
pop
vunpckhpd
ret
adc
xor
pop
arpl
imul
pop
push
addr16
jbe
jbe
outsl
sub
shll
add
mov
mov
faddl
mov
cmpsl
mov
pop
das
sbb
popa
xchg
ss
jp
ljmp
out
popa
mov
imul
jg
push
lods
ja
sahf
adc
dec
fwait
insl
pop
xor
pop
lea
xchg
push
movsb
outsl
movsl
lcall
mov
sbb
xor
ljmp
xor
cmp
fnstenv
sbb
inc
fidivrl
in
fidivl
mov
in
pop
mov
jle
add
addr16
inc
and
mov
or
sbb
fadds
jg
sbb
out
mov
pop
push
and
loopne
add
push
sbb
jo
fisubl
fcmovnu
mov
push
dec
sbb
jae
aaa
push
adc
pop
in
int3
out
cmp
call
mov
aad
pop
push
and
jbe
sub
and
rcll
fwait
test
into
mov
in
xchg
jno
sub
iret
enter
cmp
add
sti
sub
in
sbb
cltd
mov
loope
xor
outsb
push
stc
lock
push
sub
test
fmull
jl
dec
out
inc
test
and
jg
inc
jl
mov
cs
sub
loope
jne
int
rcrl
mov
sbb
fildll
pop
xsha1
cmpsb
dec
push
lret
mov
mov
dec
dec
cmp
mov
jp
call
add
push
sbb
dec
xchg
mov
fstpt
cmpsb
fisubrl
movsb
adc
cmpsb
lahf
clc
sub
fildl
and
fdivl
xor
sbb
pop
stos
inc
fucomip
jp
jae
int3
xchg
mov
insl
pop
mov
inc
fs
add
nop
jnp
movsb
dec
std
movsb
jp
aaa
xorb
pop
std
popa
mov
push
int
add
pop
lahf
popa
push
sbb
pop
inc
aas
jno
shl
sahf
dec
mov
xor
into
decb
sub
cld
and
jne
jmp
push
mov
mov
repnz
decl
or
dec
mov
adc
insb
iret
je
cmpsl
stos
inc
mov
negl
repnz
push
xor
stc
fldpi
mov
dec
test
test
mov
in
adc
scas
movsl
rcl
rclb
cld
rcr
jle
test
fcom
add
inc
pop
pop
mov
lods
pop
push
jne
cmp
stos
rclb
jno
stos
mov
add
xchg
inc
shlb
orl
out
mov
mov
imul
push
repnz
xchg
mov
cmp
xchg
sahf
mov
loope
out
cmpsl
dec
push
in
je
outsb
frstor
in
dec
sub
call
mov
cmp
imul
inc
scas
fwait
xchg
sbb
and
dec
arpl
shl
and
sbb
shlb
jl
and
push
mov
mov
sub
jnp
mov
jnp
int
mov
inc
inc
sahf
int
aam
ficomps
inc
les
cmp
mov
mov
or
jle
pop
push
dec
loop
push
cmp
mov
jg
xchg
or
pop
cmp
adc
push
ss
lods
dec
cmp
fisttpll
lods
sub
je
mov
movsl
pusha
in
xor
push
sub
add
lretw
jmp
jno
jne
lea
dec
xchg
in
js
push
ret
cmc
adc
mov
add
cmpsb
jle
gs
push
adc
xor
mov
push
sahf
mov
sti
sti
mov
insb
das
fisubrl
ret
rcll
les
pop
pushf
sbb
cmp
pushf
jge
in
add
negl
jno
cmc
test
gs
jp
adc
push
xorl
mov
idivb
das
cmp
aad
inc
adc
lock
mov
lods
subl
mov
fisubrl
cli
and
jnp
adc
pop
xorl
rcll
dec
xchg
daa
dec
jg
in
insl
lret
xlat
bound
scas
repz
push
xor
xchg
xor
hlt
rolb
jg
mov
repnz
cmpsb
cmc
icebp
push
mov
test
mov
and
dec
mov
inc
std
out
aam
mov
dec
mov
pop
jns
pushl
pushf
mov
sub
xchg
ds
jle
add
in
lods
loop
decl
sub
and
ficoms
lods
out
jns
pop
imul
mov
outsl
or
mov
mov
fwait
dec
dec
or
loopne
or
jg
pop
dec
imul
lock
push
inc
xchg
dec
pop
push
movsb
pop
dec
jmp
aaa
cli
and
ja
mov
addl
mov
dec
pop
loope
jmp
ds
aas
mov
jbe
ror
and
sub
xlat
inc
push
bound
and
lret
cmp
push
bound
pop
lret
insl
add
or
xor
xchg
notl
lods
or
cmp
xchg
push
xchg
adc
lea
mov
les
rorb
jecxz
js
test
inc
jecxz
test
cmpsb
add
xor
dec
out
dec
jae
enter
ds
divb
nop
leave
mov
bound
popa
repz
ffreep
cmpsl
cmp
imul
iret
mov
sbb
mov
jbe
push
cmpsl
data16
fs
lods
testl
lea
mov
jae
xor
xbegin
jb
xor
sub
je
xor
cmc
sbb
mov
or
jle
pop
xchg
fmuls
mov
sqrtps
or
jle
inc
jge
enter
push
mov
xor
ljmp
push
outsl
sub
je
fs
sbb
mov
sub
pusha
into
cmp
dec
push
ljmp
xchg
mov
ret
and
pop
repz
aad
push
shlb
movsb
push
push
jge
dec
mov
mov
push
repnz
lock
ljmp
xchg
hlt
scas
cmp
ret
and
aaa
filds
insl
mov
jp
jnp
add
adc
adc
inc
xlat
jns
jge
jb
push
mov
mov
pop
int3
inc
cli
jns
lret
data16
and
jp
push
jno
insl
mov
testl
pop
fldenv
loope
sbb
mov
inc
and
lret
push
cmp
jne
jns
je
fs
push
rclb
adc
mov
cmc
push
repz
sub
bound
testb
add
aam
jmp
sub
lods
cli
pop
jnp
or
inc
arpl
xor
stos
repz
xchg
insb
popf
das
xor
sbb
mov
jne
and
or
subb
fistps
and
pop
jle
or
mov
pop
cmc
hlt
mov
cltd
sub
jmp
push
mov
lahf
icebp
pusha
jecxz
das
insl
mov
and
mov
clc
jmp
cmpsl
popf
daa
cmp
xchg
adc
ljmp
jb
push
inc
es
notl
outsl
and
imul
jno
leave
pop
jae
in
outsl
push
cmc
or
jns
popf
push
scas
and
xchg
mov
or
pop
mov
repnz
out
push
pop
cmpsb
aam
das
test
jmp
pop
adc
jp
sti
jmp
cmpb
test
pop
xchg
test
mov
es
test
call
jg
loopne
in
sub
rclb
mov
adc
mov
fnstsw
imul
pop
mov
lret
dec
push
mov
stos
repz
lcall
push
xor
xor
cs
ret
push
pop
mov
or
inc
jl
cmp
cmpsl
xor
bndstx
std
lods
xchg
je
cmpb
popa
inc
mov
imul
pop
or
jno
fs
push
ss
sub
aad
xor
adc
adc
or
int3
push
jge
xchg
cmp
sbb
xchg
aad
mov
out
sub
jge
inc
into
sti
inc
bound
cmc
mov
pusha
mov
aaa
push
out
dec
sbb
xor
pop
cmp
ljmp
or
lahf
jge
mov
xor
push
add
icebp
nop
negl
aam
aam
lds
xor
shl
mov
aad
fisubl
sub
sub
inc
shrb
out
inc
mov
adc
fst
clc
mov
cmp
data16
pop
pop
inc
and
mov
lret
adc
aad
fildll
mov
insl
icebp
pop
mov
mov
repnz
adc
cmp
lods
dec
xor
mov
fmuls
dec
cmpsl
shr
scas
mov
cmpsb
jge
movsb
mov
cmp
pop
push
sub
lret
scas
mov
ljmp
lcall
jmp
sbb
in
push
sub
xor
xchg
or
loop
pop
sub
ds
addr16
ficompl
lods
aas
push
mov
mov
ljmp
mov
push
loop
mov
repz
cmp
popf
mov
sbb
sub
popa
leave
add
xor
andl
repnz
add
mov
mov
mov
out
clc
push
xchg
mov
lcall
repnz
mov
jns
and
sub
sub
lea
sub
pop
mov
cwtl
cmp
mov
mov
jo
ret
pop
aam
and
push
xor
mov
jno
pop
adc
mov
cmp
sub
mov
push
fimuls
lea
aas
es
pop
pop
jns
pop
test
xor
orb
mov
or
or
fcomip
and
cmp
adc
nop
sub
mov
popa
shll
dec
fsubs
inc
aas
fidivl
fmuls
int
adc
in
testb
dec
dec
jl
xchg
mov
or
pop
dec
loope
popa
jo
or
mov
in
mov
aam
pusha
mov
push
sahf
clc
clc
or
cli
xchg
xor
sbb
xor
pop
cmp
jne
inc
add
or
or
sub
inc
stos
inc
xchg
stos
jl
das
cmc
push
xor
and
inc
es
mov
pop
push
xchg
mov
rcrl
inc
pop
jbe
sub
xchg
push
lods
in
sbb
xlat
mov
aaa
push
andl
int3
and
lcall
adc
adc
jb
jb,pn
adc
aaa
sbb
loop
and
inc
rclb
push
cltd
test
ffree
lock
push
dec
mov
push
xchg
add
inc
loope
mov
jbe
or
ja
cmp
test
js
clc
or
push
jno
xchg
in
dec
addr16
mov
jl
jecxz
shll
leave
sbb
xchg
subb
popf
in
lock
mov
inc
aas
cltd
push
push
lods
outsl
mov
or
push
push
mov
lcall
into
push
dec
in
lea
dec
in
in
and
push
lret
jp
call
js
rolb
pop
scas
pop
sbb
jmp
ljmp
add
mov
push
sbb
mov
or
inc
ret
icebp
hlt
rcl
jecxz
cli
dec
fs
mov
cmp
jbe
popa
out
xchg
pop
cmp
outsb
fldl
or
or
and
or
rcrl
xchg
out
test
mov
ret
into
or
push
mov
sti
test
loope
xor
add
sbb
out
icebp
mov
lea
enter
and
insb
jo
mov
push
push
jle
sahf
jge
dec
add
xchg
pusha
lahf
adc
scas
jge
jbe
ret
push
xchg
add
cmp
clc
arpl
mov
sub
mov
sub
jge
push
mov
mov
mov
ja
fcmovnu
mov
pop
imul
jb
or
push
dec
inc
push
sub
push
xchg
gs
mov
hlt
mov
xchg
mov
rcr
lahf
cli
mov
cmpl
mov
jecxz
sub
or
or
xchg
clc
dec
pop
mov
dec
inc
stc
icebp
pop
push
sbb
ror
and
inc
jmp
int3
ss
dec
or
add
insl
bound
mov
sub
enter
es
sub
sti
sub
popa
ret
mov
mov
xlat
add
adc
jo
sub
jle
popa
or
aaa
ja
popa
and
fdivrs
mov
sub
adc
jl
or
mov
imul
popl
mov
movsb
or
push
sbb
je
jb
loopne
insb
jmp
jl
test
xchg
jle
jp
or
loop
lcall
mov
imul
mov
sub
xor
cli
inc
leave
lcall
jecxz
popa
pop
lea
mov
popa
or
push
mov
mov
bound
pop
and
jbe
lock
dec
sbb
cmp
sbb
test
mov
mov
sbb
in
xchg
movsb
les
ret
loop
and
cltd
mov
frstor
pusha
aaa
pop
mov
mov
pop
add
cmp
paddsb
dec
dec
sbb
jmp
cmp
pusha
rclb
outsb
xchg
dec
mov
mov
inc
push
pop
add
sbb
jbe
dec
cmp
es
cmp
pop
sub
dec
cmp
push
mov
nop
pop
mov
push
arpl
cmp
flds
dec
loopne
fsubrl
std
sbb
cmp
xchg
adc
sbb
in
cmpsl
aad
jbe
sahf
inc
out
sub
xor
jmp
fiaddl
in
xor
push
mov
mov
les
popf
sbb
ds
cli
jb
mov
mov
cmp
into
sub
cs
mov
sbb
lret
jne
lret
aad
call
aad
sbb
push
pop
mov
je
das
aad
mov
mov
adc
in
mov
subb
es
fsubrs
lods
fisubs
jp
int3
out
fiaddl
mov
movsb
cmp
test
and
ja
ret
push
add
adcl
mov
adc
hlt
push
imul
xchg
add
fiaddl
mov
lea
aaa
jge
push
lods
enter
call
icebp
cmp
mov
jmp
loopne
aaa
out
jmp
mov
ljmp
sti
out
pushl
out
loop
inc
mov
scas
mov
sub
cmp
or
fstl
dec
bound
insb
push
loopne
leave
dec
cmp
fistpl
cli
jno
movsl
lods
mov
cmp
lret
xor
popa
or
jb
lods
add
sbb
add
cld
fcmovb
xchg
sub
push
int3
mov
sbb
sarl
pop
mov
mov
test
xchg
in
orb
pop
sub
dec
in
xor
xor
push
mov
jge
push
arpl
fcmove
mov
add
pop
mov
sub
leave
loopne
loopne
imul
cmp
inc
adc
imul
subl
dec
inc
xor
add
sbb
leave
jb
mov
es
pop
xor
shl
ss
sarl
mov
pop
xor
leave
negb
inc
dec
pop
or
movsb
adc
rclb
std
mov
xor
sub
data16
jmp
jo
xor
icebp
mov
mov
inc
notb
mov
mov
mov
ret
mov
sbb
imul
scas
jg
cld
jmp
out
and
pop
xchg
inc
jae
daa
sahf
sub
or
roll
xchg
scas
dec
cld
fildl
mov
and
lret
and
les
daa
and
adc
je
ljmp
aaa
jmp
fstps
or
mov
out
into
fldt
int3
jmp
xchg
inc
rolb
adc
mov
mov
rcll
jae
cmpsb
repz
or
jno
jae
or
popa
lea
call
movsl
lods
and
dec
and
push
clc
sti
ret
mov
xchg
jmp
std
jbe
test
js
cmp
js
xor
or
sub
adc
xchg
dec
adc
sbb
scas
cmc
pop
mov
sti
cld
fsub
mov
sub
mov
sahf
push
and
mov
cmpsb
ret
out
not
mov
jmp
jne
das
cli
cwtl
inc
fnstcw
sti
insb
rorb
add
rclb
dec
push
or
push
pop
pop
je,pt
test
mov
adc
cld
hlt
jg
xor
sahf
sub
arpl
lret
pop
lods
std
pusha
clc
fsts
nop
pop
xchg
add
insb
sbb
adc
sbb
sahf
in
repz
adc
cmp
jnp
rol
mov
insl
sahf
or
and
inc
push
aad
pop
aam
pop
pop
mov
in
mov
fldenv
movsl
mov
aaa
add
sbb
push
sub
push
fmull
cmp
inc
pop
loope
loop
cltd
in
movsb
jnp
push
xor
mov
push
cmp
pop
sub
fsubrs
sub
dec
lret
popa
mov
rcll
mov
adc
outsb
jnp
push
pop
lcall
and
ss
in
add
jbe
sbb
std
aam
pop
xchg
dec
push
push
push
es
dec
fisttpll
cwtl
pop
push
xchg
inc
ss
ret
daa
adc
subb
jno
mov
mov
rclb
mov
fs
nop
or
out
jmp
adcl
jno
enter
mov
leave
mov
push
xor
sub
lahf
add
cmpsl
sub
push
cmp
fisubl
ss
jb
mov
outsl
lfs
stos
stos
fcmove
sub
inc
mov
dec
pop
cmp
push
stc
roll
rorb
nop
clc
inc
pop
lods
adc
sbbl
cmc
xor
mov
mov
pop
loop
xor
pop
push
aaa
outsb
ficompl
clc
adc
loope
icebp
pop
xor
ret
cli
movsl
cmp
cmp
pop
xchg
repz
mov
in
outsl
into
andb
sbb
scas
pop
xchg
lods
sbb
subb
jno
ja
adc
push
pop
out
push
pushf
cmp
pop
sub
or
sub
orl
aam
or
sub
push
cltd
inc
out
mov
lcall
mov
sbb
xor
pop
mov
or
pop
lock
xchg
iret
mov
test
nop
icebp
insb
je
sub
repz
mov
pop
sahf
adc
dec
xchg
mov
adc
int
test
sub
mov
mov
mov
sub
andl
xchg
lret
inc
cli
dec
push
and
push
xchg
push
xchg
or
or
adc
xchg
loop
call
pop
mov
push
lea
je
out
dec
lods
jl
pop
iret
icebp
add
subb
movsb
add
push
nop
les
or
cwtl
mov
test
add
jo
and
jo
insl
in
cmp
and
mull
sub
shlb
cmp
or
add
subl
jle
sub
sub
rcrb
movsl
push
fiadds
push
lea
add
cld
xlat
insl
mov
out
pop
cmp
rorb
push
test
or
xchg
push
inc
cwtl
pop
xor
rolb
out
xchg
test
mov
jae
int3
pop
push
push
sbb
cmp
adc
dec
int3
pop
mov
dec
mov
mov
hlt
cmp
cmp
mov
dec
pop
xchg
or
inc
push
push
pushf
aas
push
imul
and
insl
pop
push
jne
add
mov
dec
gs
cmp
sub
rcrb
imul
pop
mov
cld
rorb
je
ljmp
ffreep
adc
fs
adc
scas
sbb
lret
out
mov
mov
jg
cmp
sti
stos
push
ljmp
gs
inc
dec
in
nop
sarb
cli
cmp
and
lcall
jecxz
cmp
outsb
pop
mov
pusha
sub
mov
out
pushf
cltd
aas
cmp
or
pop
idiv
cltd
push
mov
cmp
and
stos
sbb
out
arpl
orb
test
mov
out
das
fsubr
xchg
push
test
popa
lds
cmp
loopne
sbb
addr16
cmc
mov
pop
insb
repz
es
movsl
mov
and
cld
xchg
imul
call
enter
outsl
mov
dec
scas
sbb
jl
jmp
add
clc
cwtl
sti
sub
jo
cmp
pop
dec
aaa
push
push
bound
jecxz
cmpl
test
in
cmc
sbb
lock
scas
lea
js
lcall
dec
push
ror
cmp
sub
pop
jns
rcl
in
pop
mov
aaa
aaa
sbb
inc
cs
jecxz
xchg
pop
lds
cmp
jp
repnz
popa
dec
sub
push
js
mov
stos
adc
addr16
add
fwait
sbb
lods
sbb
bound
ljmp
lahf
test
mov
adcl
enter
leave
lret
ds
popf
mov
add
shl
in
mov
push
dec
inc
enter
pop
push
adc
loope
addr16
adc
cmp
xchg
add
out
push
push
filds
sub
mov
out
aaa
pushf
xor
fsubl
adc
inc
addr16
jge
sbb
stos
jmp
fldt
sbb
mov
lods
sub
in
or
adc
mov
mov
data16
pop
or
adc
cmp
mov
daa
ror
xchg
cs
sub
shr
popa
sarb
sarl
mov
decb
jp
rcrl
scas
sub
sti
gs
xchg
add
mov
fists
imul
in
imul
fxch
jmp
push
js,pn
mov
sub
push
push
clc
or
sbbb
cmpsl
fistl
aam
test
xchg
pop
ja
test
test
pop
xchg
fildll
pushf
ret
negl
mov
fmulp
xor
mov
push
stc
pusha
shll
sub
insl
jo
xchg
leave
inc
mov
pop
dec
repnz
mov
cmp
push
and
in
sub
mov
inc
xor
jns
jo
or
xorl
pop
insb
lahf
mov
stc
sbb
jg
jecxz
shlb
imul
call
ret
xlat
sti
adc
mov
stc
mov
insb
push
scas
rorl
out
call
mov
fwait
lock
dec
mov
icebp
sti
xchg
push
cmp
add
xchg
pop
mov
cmpb
sub
push
cmp
fnsave
jae
cmpsl
shlb
adc
adc
mov
dec
aas
fnstenv
cld
xor
lock
arpl
xchg
mov
mov
test
lahf
je
je
scas
add
sbbb
leave
movb
sbb
pop
call
push
movb
jbe
sarl
push
push
ret
cmpsb
push
xchg
mov
or
lret
lds
mov
mov
into
les
cld
ss
stos
push
or
pop
jecxz
push
stos
shrb
pop
xor
aam
scas
sub
insb
lea
sbb
fcmovb
outsb
xchg
int
cmpsb
mov
sbb
mov
add
mov
push
dec
mov
cmp
call
cld
push
ret
jg
addl
call
cmpsb
scas
jo
cwtl
subb
outsb
cli
leave
or
cs
arpl
in
enter
bound
mov
push
cmp
xchg
xchg
scas
xchg
add
stos
dec
cmpsb
hlt
das
xchg
push
or
aam
les
gs
adc
and
sub
lcall
daa
jg
xchg
inc
scas
je
push
jg
and
mov
jmp
inc
test
jbe
add
or
out
dec
cmp
add
mov
xor
es
in
lods
fcomps
mov
sub
add
push
adc
lret
icebp
adc
pop
pop
mov
arpl
fadds
or
xchg
mov
sub
mov
in
inc
fidivs
in
push
sub
add
rcl
popf
pop
imul
pop
cmp
pop
or
loop
loope
xchg
rclb
cmp
bound
loope
sbb
mov
and
sub
or
lret
mull
adc
movsb
test
nop
cltd
pop
push
jecxz
fmull
xchg
outsl
mov
cmp
mov
rcl
sarl
fmulp
xor
sub
in
and
fs
xchg
mov
mov
lcall
inc
jne
ds
fistl
imul
mov
pusha
push
xor
and
rolb
incl
dec
cs
jns
loop
iret
js
in
push
jle
adc
xchg
push
das
aaa
pop
mov
cs
jnp
inc
sub
cmp
mov
sbb
gs
movsl
adc
clc
cmp
or
mov
pop
cld
xchg
mov
dec
push
test
fstl
jo
movsl
cmp
scas
xor
int
into
mov
int3
rcl
dec
add
mov
jo
pop
xor
cs
aaa
test
shrl
jmp
jo
mov
add
inc
sbb
cmp
pop
dec
and
cs
xchg
jne
outsl
mov
leave
sarl
jbe
lcall
push
in
adc
inc
push
cwtl
xor
fiaddl
mov
add
dec
pushf
out
mov
fstps
add
idivl
cmpsl
inc
jns
cld
ret
jp
ret
lods
xchg
xchg
push
test
mov
mov
jecxz
out
sub
adc
push
mov
imul
push
add
fmul
sbb
loop
imul
inc
jns
daa
sbb
sarb
mov
rcll
adc
xor
sub
dec
addr16
pusha
aaa
inc
push
nop
xchg
cli
out
les
add
jbe
scas
fisttps
stos
lea
pop
dec
imul
push
push
and
pop
sbb
cli
lds
jp
aaa
fbld
jae
push
adc
adc
jnp
and
pop
pusha
stos
std
cmc
fsubrs
xchg
dec
cmp
sbb
pushf
cmp
mov
fsubrl
stos
inc
fcomip
or
shlb
test
ficompl
cmpsl
and
stos
ss
xor
sub
dec
jle
adc
gs
fnsave
mov
scas
ds
popa
orb
ss
imul
push
aam
insb
xchg
int3
jp
and
call
in
xor
fldl
fwait
sub
adc
sbb
outsl
or
std
ss
push
pop
daa
cmp
mov
push
out
ret
jne
loope
loopne
lock
mov
fsubrl
and
and
loopne
mov
or
mov
sbb
popa
loopne
xorb
shrl
pop
mov
imul
imul
cld
shrl
insb
dec
xor
inc
fwait
add
in
cs
and
out
fisubrs
or
shl
arpl
fwait
cmp
pushf
push
mov
dec
mov
mov
popf
add
repnz
icebp
mov
or
cmp
jo
das
dec
or
adc
dec
int3
dec
ja
pushf
shll
pop
loopne
shl
out
into
ror
and
mov
jbe
mov
imul
mov
add
adc
xor
pop
test
dec
jb
enter
pop
xchg
xor
lret
pop
cmc
iret
xchg
shll
pop
jb
test
cmc
or
push
push
pop
push
jnp
sti
add
pop
test
enter
cmp
out
mov
push
fistpl
loope
push
sti
inc
fimuls
ror
jno
and
sub
sub
mov
lods
mov
cmp
xchg
icebp
rep
inc
cmp
add
repnz
das
mov
orl
ja
mov
fs
js
repnz
hlt
aam
mov
testb
popa
sbb
pop
fwait
pop
mov
fwait
into
js
xchg
jg
mov
sbb
in
vpmacssww
jle
subb
pop
push
sbb
in
pop
js
sub
push
dec
leave
mov
xor
mov
scas
xchg
inc
cmp
mov
mov
pop
popf
push
popf
pusha
loope
mov
btc
or
mov
jae
xlat
cmpsl
add
mov
push
xchg
sbb
dec
push
xchg
aam
aad
xchg
scas
cmpb
cld
ljmp
cmp
lods
in
hlt
repnz
xchg
push
jecxz
outsb
push
inc
inc
jg
out
or
shlb
pop
cli
imul
aam
sbbb
mov
scas
andb
and
add
outsb
adc
mov
sub
xor
aam
sbb
sbb
les
and
push
lods
outsl
int3
jg
sbb
push
xchg
cmpl
xchg
insb
push
pusha
cld
lcall
pop
mov
mov
mov
lret
jae
int3
out
rorb
mov
cli
arpl
scas
sub
lret
mov
shl
mov
jg
mov
jg
jmp
mov
dec
cltd
xor
ja
jp
dec
and
iret
cltd
test
pop
cmp
fsubrs
scas
mov
and
adc
test
iret
xchg
movsl
pop
lcall
xlat
push
mov
ret
sub
and
xor
jne
mov
cmpsb
sub
xor
jns
stos
cmp
mov
mov
mull
shll
fiaddl
cmp
pusha
mov
xor
ret
cmpsb
mov
xor
mov
mov
xchg
mov
mov
sbb
sbb
sub
js
ss
out
pop
sub
sbbb
cmpsb
and
xchg
pop
cmp
push
nop
xrelease
or
sub
hlt
push
addr16
xor
cmpsl
test
and
popf
push
lea
cld
gs
mov
daa
out
inc
jo
pop
sub
cwtl
inc
std
push
dec
mov
outsb
test
cwtl
cmc
pop
xchg
sub
sub
inc
adc
inc
xchg
decl
rorb
dec
mov
int3
movsl
fisttps
jmp
leave
sbb
sbb
xchg
jo
push
jae
movsb
sbb
xchg
pop
arpl
mov
icebp
lret
shrl
adc
movsb
ljmp
js
push
push
orb
jl
push
in
add
xchg
shll
pop
mov
sbb
pop
sbb
mov
aas
mov
pop
das
cmpsl
iret
xchg
outsb
push
xchg
push
out
and
push
stc
shlb
xchg
xchg
rcr
xor
addb
loope
cmp
and
test
negl
fcmovb
jmp
loope
jecxz
adc
mov
xchg
sbb
imul
sbb
mov
jne
stos
push
xchg
adc
mov
fmull
lods
pop
pop
adc
in
faddl
dec
ja
and
pop
dec
test
push
xor
lock
cmpsb
push
jne
fnsave
jmp
xor
stos
je,pt
add
add
mov
daa
repz
mov
inc
rorb
lcall
rclb
inc
or
add
pushl
mov
lea
pop
inc
pop
add
mov
adc
aaa
push
ss
and
out
xor
push
imul
stos
push
hlt
cld
sti
push
or
push
test
insb
push
inc
fcompl
mov
and
xor
sti
movsl
in
jnp
iret
xchg
ret
enter
sbb
fmull
and
jbe
xor
jo
push
mov
pusha
cli
fnstsw
popf
xchg
icebp
push
and
es
push
cltd
subb
test
popa
cmp
inc
inc
sub
or
adc
add
ja
shlb
out
lds
push
xchg
jmp
scas
ljmp
sbb
pop
daa
repnz
lret
mov
pop
mov
lahf
sbb
loope
dec
les
lcall
or
pop
sub
outsb
lcall
mov
jmp
cmpsl
mov
push
test
sub
lds
insb
push
and
lock
or
or
imul
pop
jle
jnp
out
cmp
test
and
sahf
sbb
or
xlat
stc
imul
repnz
popa
cmpsb
call
xor
adc
into
inc
sahf
popa
fs
and
aas
xlat
roll
ret
ret
dec
loope
dec
div
lret
cmp
popa
pop
fcmovne
sbb
ds
jle
inc
add
mov
xchg
mov
pop
les
mov
into
sti
ds
mov
out
das
mov
popa
dec
ja
sub
mov
jo
popf
insb
push
pop
enter
xor
mov
call
cmp
mov
test
addr16
shrb
insb
add
nop
sbb
push
in
jp
into
scas
mov
push
jecxz
leave
pop
sbb
cmp
pop
dec
mov
inc
stc
in
xchg
and
mov
jecxz
fs
pop
push
add
cmc
addl
add
push
mov
ljmp
dec
cmp
call
push
movsl
data16
mov
outsl
dec
rcl
scas
clc
dec
sarb
call
push
dec
es
cld
jns
das
test
push
test
sub
push
fs
inc
cmpsb
adc
scas
xor
data16
icebp
jno
stos
jns
ret
rorl
aad
rcrl
sti
incl
xchg
dec
xor
pop
and
ja
in
mov
sbb
cmp
pop
mov
sbb
mov
cli
xchg
pusha
pop
mov
in
add
push
or
jo
add
shrl
fsubl
scas
or
test
popa
xchg
dec
jae
mov
ljmp
clc
inc
into
inc
daa
lods
ja
ret
jp
dec
xchg
adc
fst
push
mov
test
xor
mov
sti
enter
mov
mov
lret
cmpsl
outsl
mov
gs
push
cmpsl
movsl
lods
fstpt
imul
and
shll
sbbb
xor
lcall
push
and
xchg
pop
shl
movsb
shll
push
bound
fildll
mov
lods
mov
cs
sar
sbb
bound
cltd
pushw
inc
mov
mov
add
jne
sbb
or
pop
push
aas
mov
sbb
or
pop
testb
popf
aas
stc
push
popf
jo
stos
and
mov
push
subb
or
inc
xor
mov
mov
push
test
dec
cmpsl
pop
dec
icebp
pop
push
test
and
scas
rorb
fcmovu
and
stos
aam
jp
pop
clc
sar
mov
and
adc
dec
cltd
mov
icebp
mov
add
xor
fiadds
repz
roll
push
mov
lock
push
cmp
imul
fwait
call
and
add
les
pop
in
inc
mov
aaa
and
push
sub
movsl
ja
mov
sub
jnp
lret
mov
test
pop
aaa
mov
out
outsl
sbb
or
pop
dec
fwait
sbb
ljmp
test
arpl
xchg
dec
enter
cmpsl
out
mov
mulb
jl
pop
mov
mov
push
mov
mov
scas
inc
mov
int
mov
inc
or
push
shll
test
xchg
fildll
push
test
push
mov
cmp
mov
sti
daa
dec
and
dec
dec
bound
loop
jecxz
and
mov
xchg
in
push
or
and
in
leave
xchg
push
xchg
stc
mov
jbe
xchg
push
mov
imul
out
shrl
and
xorb
xlat
scas
aas
inc
enter
iret
dec
inc
rorb
adc
add
gs
nop
mov
loope
lret
fildl
xchg
mov
adc
jge
insl
outsl
pop
push
out
push
jg
fcoms
roll
push
push
mov
das
add
std
pusha
mov
int3
aad
xor
cs
test
mov
imul
std
outsl
lds
mov
and
test
imul
enter
sub
andl
adcl
sbb
xor
xchg
xchg
mov
les
nop
jle
cmp
loop
loop
inc
clc
add
fisubrs
and
xchg
jbe
insb
leave
lods
inc
stos
and
call
rolb
mov
push
add
pop
xchg
mov
repz
jo
in
stos
fldenv
pushf
call
subl
lret
sub
or
nop
cmc
inc
xchg
or
pop
jo
xor
mov
ret
and
and
fiaddl
pop
mov
mov
add
jo
and
div
cli
or
into
xchg
dec
cmpsl
into
les
shrl
pop
mov
and
mov
xchg
cmpsl
dec
ja
sub
cli
mov
push
xlat
stos
sbb
inc
out
add
lock
subb
movsb
xlat
aad
xor
fnstsw
fs
arpl
xor
scas
popa
sub
adc
xorb
push
stos
jge
add
fdivrl
mov
ffreep
xchg
jle
sbb
push
jl
cs
sti
cltd
pop
stc
sbb
xchg
inc
and
adc
cmp
xor
mov
inc
mov
rcrb
adc
aad
jmp
leave
dec
push
loopne
cmp
push
lret
cld
push
les
inc
dec
hlt
pusha
push
adc
lret
jmp
mov
push
dec
test
sub
jbe
in
jb
fmull
xchg
mov
xchg
in
sbb
lret
xchg
jne
push
sbb
push
movb
cmpsb
dec
in
sub
mov
pop
movd
or
xchg
push
or
xorl
mov
jne
or
xchg
jae
bound
xchg
pop
dec
fcomps
pop
insl
adc
push
icebp
mov
outsb
out
cltd
icebp
idivb
int3
add
xchg
mov
fisttps
push
dec
xor
jcxz
push
pop
dec
fstpt
jne
jno
ficompl
pop
or
fnstsw
mov
sub
inc
es
and
mov
and
pusha
pop
fmuls
inc
push
pop
or
fldl
fdivr
stos
mov
inc
add
lods
xlat
out
sahf
sbb
stos
insl
test
mov
xor
cltd
mov
cld
dec
xchg
es
pop
fcoml
add
push
dec
push
ljmp
fiadds
imul
mov
in
sub
add
outsl
jnp
stc
mov
cmc
add
xchg
sbb
imul
and
outsl
adc
pop
adc
lock
mov
xor
test
xchg
add
and
outsl
popa
int
jno
insl
ds
lret
push
sarl
xchg
bound
cmp
pop
lods
push
es
xchg
pop
push
loopne
push
add
xchg
test
fs
outsl
push
xchg
in
in
outsb
shr
jns
repnz
lret
push
sbb
pop
daa
or
ds
divl
xor
xchg
loop
xchg
xchg
mov
or
ds
lds
dec
dec
cmp
xchg
outsl
arpl
mov
jecxz
gs
and
jle
out
pop
jmp
iret
xor
popf
out
push
loopne
insl
add
sub
mov
lods
pushf
bound
sbb
jmp
f2xm1
bound
mov
sbb
sarb
cmpsb
xorb
xchg
jecxz
nop
iret
inc
sbb
pop
or
data16
iret
sub
pushf
ret
sbb
jns
fimull
mov
jp
xchg
sbb
imul
fstpt
dec
lock
ja
xchg
sbb
sbb
push
cwtl
inc
push
inc
scas
xchg
cmpb
test
mov
wrmsr
and
pop
shl
fcmove
pop
xchg
jae
cmp
imul
sti
bound
sub
out
popa
mov
cltd
dec
mov
ret
test
in
ror
out
roll
ror
mov
xlat
lea
lds
lds
or
int3
or
pop
mov
cli
insb
movsb
lea
les
mov
push
sbb
push
and
sbb
sbb
xchg
in
jmp
mov
mov
mov
mov
leave
adc
loop
out
das
mov
xchg
gs
pop
notl
mov
sbb
mov
pop
ljmp
repz
addr16
outsl
mov
dec
testl
fwait
add
lds
mov
jae
sub
sub
int3
jge
pop
or
or
xchg
lret
or
mov
mov
mov
movl
or
ficompl
xchg
into
es
icebp
cmpsl
xchg
push
xchg
stc
out
je
imul
out
mov
and
dec
mov
ret
xor
mov
adc
mov
ret
cmp
inc
sbb
test
mov
cmp
out
add
adc
adc
sbb
or
pop
mov
nop
inc
shll
mov
ror
loope
mov
push
mov
inc
lahf
in
stc
lret
lret
pop
loope
lds
aam
push
popa
mov
cmpsl
mov
mov
lods
xchg
jmp
push
mov
adc
adc
jo
in
sub
movsb
lods
ds
sarb
ss
or
gs
mov
mov
sbb
push
mov
ss
sub
jl
mov
fldl
push
rorl
inc
test
push
cmc
mov
add
adc
hlt
cltd
fiadds
dec
pop
sbb
icebp
adc
xor
das
push
pop
ljmp
xor
fst
adc
addr16
xor
push
fidivl
xor
adc
cwtl
xchg
sahf
bound
mov
int3
je
mov
pop
in
in
jmp
je
sub
scas
mov
xor
ret
inc
jb
push
nop
cs
push
shll
imul
sub
push
rclb
ds
mov
inc
mov
lcall
mov
loope
adc
xchg
or
jp
or
adc
mov
or
jl
xchg
mov
testl
cwtl
sbb
mov
mov
cmc
cmp
sub
das
add
mov
or
into
fmuls
mov
pop
lods
cmp
push
popa
pop
push
scas
pop
sub
and
sahf
outsb
cs
jg
rcrb
mov
movsb
cmp
fildl
fdiv
mov
sbb
xor
imul
pop
xchg
jne
shlb
int
push
bound
mov
call
pop
push
es
nop
mov
jl
stc
cmpsl
inc
mov
jmp
jo
push
mov
imul
jo
icebp
cltd
push
push
das
and
inc
out
inc
mov
dec
xchg
mov
in
push
mov
cmp
out
enter
dec
pop
push
iret
sti
sub
addr16
cli
in
push
fidivl
xchg
daa
fsubl
mov
fiaddl
pop
xlat
into
add
imul
push
adc
jmp
mov
jle
out
push
imul
xchg
inc
into
cld
inc
mov
scas
lret
fdivrs
pushf
lret
cmp
sbb
push
jmp
mov
iret
arpl
cld
or
cmp
mov
mov
mov
jnp,pn
aaa
ja
jns
pop
jp
rcll
cmp
int3
std
xchg
outsb
insl
pop
scas
ja
jl
leave
outsl
sbb
popa
jmp
xchg
push
mov
retw
std
cmp
dec
stos
jge
ja
jmp
push
jmp
aam
lahf
pop
nop
lcall
sbb
and
movl
add
in
lcall
sahf
gs
pusha
adc
add
push
stos
sub
pop
dec
idivl
mov
cld
loope
or
shll
fisubs
in
ret
lock
xchg
fistpll
cli
xor
daa
jg
pop
inc
std
sub
pop
jg
insl
sub
scas
or
cmp
mov
dec
sub
fwait
cmpsb
push
push
inc
bound
cmp
loopne
fcoms
push
out
repz
and
xlat
lea
mov
arpl
es
test
jecxz
movsl
lahf
lret
adc
sub
js
js
or
ljmp
mov
lock
cld
or
outsl
inc
xchg
push
adc
lret
inc
mulb
jge
xor
aas
sbb
pusha
icebp
xchg
cld
jecxz
out
negb
aam
scas
dec
idiv
mov
xchg
jle
aad
aam
jb
in
push
cwtl
jne
std
outsl
cs
lret
inc
mov
stos
cmp
lods
rcll
mov
clc
xchg
daa
addr16
repz
pop
inc
push
out
rcr
pop
gs
cmp
int3
call
icebp
mov
stc
add
push
xchg
jne
cmp
mov
dec
sahf
or
cmpsb
fisubrs
jp
adc
in
es
and
mov
jg
push
daa
or
mov
adc
mov
arpl
mov
adc
dec
jl
loop
call
fwait
inc
fldl
ficoml
inc
inc
cld
mov
aam
cmp
pop
pop
and
push
dec
jle
or
out
push
add
andb
and
mov
jle
jl
cs
test
nop
or
add
mov
insl
cltd
shll
push
inc
xchg
push
dec
ret
push
sbb
adc
lock
xchg
out
shrb
mov
mov
mov
sbb
cmpsl
mul
add
inc
lock
sub
mov
mov
inc
orb
leave
pop
repnz
mov
lahf
dec
out
mov
ds
ds
filds
les
pop
mov
jns
arpl
jo
or
sarl
inc
sar
jbe
jg
jle
stos
inc
out
into
scas
sub
imul
pushf
xchg
das
fisttpll
mov
ret
xchg
sarl
mov
data16
jp
addr16
jo
inc
mov
in
fwait
sub
xor
outsl
xlat
inc
add
ja
inc
dec
xchg
sbb
outsb
push
sbb
cmpsl
fnstcw
iret
jge
push
and
mov
hlt
call
add
jns
xchg
shlb
movsb
push
gs
pop
test
cmpsl
jmp
jmp
stc
fists
or
sti
mov
pusha
cmpsb
rclb
jne
int
sub
pop
shr
sub
xchg
cmpsl
fisubs
cmp
aaa
xchg
mov
sti
mov
loopne
push
inc
push
dec
ja
inc
push
and
sbb
mov
loopne
cmpsb
dec
add
cwtl
lcall
or
fs
add
aad
push
out
cmp
in
lods
or
sahf
sub
push
add
xchg
and
xor
add
add
adc
jp
lcall
test
sbb
sub
movsl
mov
mov
subb
jmp
adc
xorl
jns
in
push
cmp
push
outsl
jnp
call
xor
test
add
mov
daa
or
call
hlt
in
notb
sub
lahf
mul
jb
mov
adc
das
pop
repz
enter
aad
dec
or
xchg
aad
out
jp
xorb
imul
mov
pop
cld
test
clc
or
add
push
xchg
iret
cmp
test
xchg
movsl
lea
jb
fstps
pop
bound
xchg
or
ret
gs
pop
ds
pop
sbb
out
gs
test
cmp
enter
outsb
push
mov
test
cmp
es
lods
mov
popf
ror
lea
loopne
outsb
shlb
push
sbb
rolb
repz
add
int
cs
mov
mov
int3
es
fsub
sbb
xor
iret
aas
into
sbb
loop
xor
mov
add
std
cmp
xchg
ljmp
pushf
andb
and
mov
xchg
adc
out
fwait
stc
rolb
cmp
push
repnz
clc
shlb
jbe
xlat
mov
mov
pop
xchg
or
pop
or
jb
pop
shrb
adc
clc
xchg
push
fisttpll
lret
sub
in
out
nop
jo
movsl
push
out
cmp
push
cmp
fdivrl
cmp
or
mov
mov
cli
jae
loop
pop
je
movl
jb
out
dec
arpl
iret
fadds
test
pop
mov
in
cs
push
js
sbb
add
fidivs
sub
dec
iret
shl
add
push
jnp
or
mov
lea
shlb
pop
imul
xchg
sub
or
int3
stos
push
lcall
cmp
pop
pop
xlat
mov
aam
enter
loope
dec
xor
sbb
and
push
inc
sbb
inc
pop
int
or
pusha
in
mov
les
mov
and
mov
out
sbb
xor
cmp
testl
stc
icebp
jbe
sub
ja
js
and
out
std
jmp
arpl
jp
cs
dec
orb
rol
in
sbb
mov
xchg
xor
je
lret
push
hlt
movsb
shl
sub
fsubr
add
fisttpll
frstor
test
jg
jo
xor
jecxz
xchg
inc
ret
and
jno
mov
das
inc
xor
out
out
mov
mov
sarl
stos
stc
scas
sbb
bound
mov
jle
sub
mov
xchg
fs
push
hlt
dec
dec
imul
push
insb
or
push
mov
hlt
push
fdivrp
inc
or
sarl
lds
or
stc
jge
adc
or
jge
cli
mov
mov
lahf
enter
lcall
stos
data16
popf
sahf
sub
lcall
xlat
xor
add
mov
ja
ror
ret
in
popa
lods
cmp
inc
leave
out
push
or
aas
dec
js
cmpl
daa
mov
fs
aas
movsb
mov
pop
popf
mov
pop
imul
int3
mov
stos
pop
mov
jmp
loope
xor
xchg
leave
mov
pusha
hlt
idivb
cmp
inc
sub
ja
fsubr
mov
les
or
ret
lock
adcb
xor
out
outsb
out
and
fwait
std
mov
xor
ds
enter
mov
inc
xchg
mov
bound
pop
imul
xchg
dec
into
mov
dec
inc
cmpsb
and
pop
in
cmp
loope
dec
fdiv
add
push
cwtl
jne
gs
mov
fstps
lods
cld
call
ljmp
xchg
leave
movl
inc
lahf
stc
sbb
cwtl
into
data16
inc
cmpsl
push
dec
mov
sub
mov
aas
pop
pop
lcall
mov
std
cmp
mov
dec
or
pop
mov
jb
xor
jno
pop
dec
notl
jns
jno
fisubs
outsb
or
cmpsb
push
jnp
adc
out
push
sti
hlt
fisubs
imul
sbb
mov
int3
cmp
jnp
pop
and
stc
add
repnz
in
out
outsb
in
enter
pop
sub
emms
pusha
xor
push
insl
or
jnp
pop
sub
mov
lahf
test
aaa
jae
addr16
dec
in
xor
loope
dec
adc
daa
adc
test
dec
test
sbb
daa
int3
mov
aas
gs
mov
clc
lods
mov
out
push
jl
jmp
mov
dec
pop
dec
mov
jp
dec
stos
repz
cmp
inc
popf
in
mov
cs
push
insl
dec
mov
or
add
cmpsb
mov
es
jbe
mov
and
pushf
jbe
outsl
loopne
daa
jno
xchg
dec
adc
jns
lock
adc
outsl
aam
adc
sahf
mov
adc
mov
bnd
clc
jbe
jne
fstps
and
gs
lahf
out
sub
xchg
fiaddl
icebp
or
stos
cmp
dec
movb
lret
bound
push
push
push
pop
pop
enter
sbb
xor
mov
leave
pop
jl
loope
cmpsl
leave
fwait
in
daa
add
pop
fcoms
fsubp
pop
push
repz
out
rcrb
mov
adc
sub
sbb
les
faddl
mov
push
aas
push
ss
push
iret
jb
dec
adc
pop
shl
ljmp
push
adc
push
adc
add
fimull
cmp
jle
sahf
cmp
aam
inc
add
test
outsl
in
push
and
fstl
ss
movsb
pop
adc
and
mov
subb
push
adc
cld
or
cmc
ljmp
xor
xchg
negl
cwtl
fwait
movsl
stos
les
xlat
pusha
cmp
inc
pop
sbb
inc
fptan
pushf
mov
jp
jne
shr
test
sub
push
push
pop
mov
adc
outsb
lret
lret
dec
pushf
sti
mov
adc
mov
cmp
inc
push
adc
enter
mov
adc
mov
pop
loop
dec
out
adc
or
stos
mov
ljmp
xchg
push
sbb
jno,pn
sbb
sbb
fnstenv
dec
or
mull
cmp
jle
scas
cmp
rolb
sub
mov
inc
mov
aad
addb
fsubp
or
jge
inc
sbb
adc
repz
gs
pusha
dec
mov
or
mov
and
add
loopne
mov
inc
cmp
ret
into
loopne
fwait
sbb
scas
jno
jo
jmp
xor
js
mov
mov
jae
mov
test
xor
lcall
cmpsb
mov
cmpb
sub
add
push
pusha
int
sub
cli
dec
pop
and
jge
pop
mov
pop
jae
mov
sub
cmp
push
mov
cmp
in
dec
jnp
jno
sub
sub
imul
rcl
std
jns
scas
xchg
pop
pop
imul
das
xchg
movl
xlat
sbb
ljmp
inc
pop
dec
sbb
or
push
std
rorl
dec
mov
xchg
push
xchg
mov
cwtl
pop
add
add
pop
shll
mov
adc
scas
push
arpl
or
dec
xchg
adc
jle
xor
sbb
mov
pop
mov
jecxz
xor
mov
xor
mov
cli
mov
inc
mov
sbb
mov
or
sarl
gs
in
jo
gs
outsl
or
jo
lahf
fwait
movsl
pop
lret
dec
or
std
arpl
loope
roll
out
lea
popa
push
sbb
adc
dec
aad
push
shlb
xor
fsubr
fcompl
jecxz
xorl
sub
mov
popf
sub
sbb
cld
test
pop
xchg
test
sti
lods
inc
mov
test
dec
pop
cmpsl
sbb
pop
loop
or
fmull
push
addr16
or
aaa
outsb
cli
movsl
sbb
or
gs
sub
int3
inc
push
movups
jg
jp
cmpsb
popa
xcrypt-cfb
cmpsl
movsb
in
xchg
call
jne
xchg
xlat
lods
push
lods
addb
xchg
negb
pop
xchg
js
ds
jmp
inc
repz
adc
iret
push
pop
js
push
rolb
dec
pop
xchg
faddl
xchg
xchg
mov
stc
lea
mov
arpl
jns
mov
pop
jne
and
xchg
and
lret
les
xchg
fwait
and
add
add
jo
sahf
in
dec
mov
loop
pop
lret
cmpl
hlt
es
clc
mov
xor
divl
cmp
and
xchg
mov
inc
loop
lods
scas
icebp
js
je
sbb
aam
call
cld
jbe
inc
rorl
xchg
push
xor
iret
aad
pop
push
mov
scas
lds
fdivp
push
inc
dec
or
pusha
aas
ret
fisubrl
enter
mov
imul
push
push
pop
push
push
bound
fidivl
xchg
jp
pop
jb
insl
pop
push
jnp
fistpll
xor
iret
ficoms
andl
mov
adc
decl
mov
xchg
inc
fdivp
pop
mov
mov
pop
outsb
sub
mov
cmpsb
sbbl
fstp
ljmp
cmp
sbb
iret
and
in
rcr
sbb
lahf
inc
std
jae
or
outsl
dec
xor
mov
fcomi
jecxz
add
mov
sbb
mov
xor
test
push
jb
sti
fnsave
cmc
rclb
mov
pop
cmp
cli
call
pop
outsb
adc
inc
data16
fildll
jbe
mov
xor
leave
or
mov
cwtl
push
jmp
jp
adc
push
xor
inc
mov
divb
xchg
fdivl
imul
ljmp
int
dec
lods
insb
add
popf
inc
gs
or
lcall
std
rcr
jae
sub
mov
test
mov
sub
add
addl
sub
movsl
jp
pop
popf
decl
stos
shlb
mov
mov
fcom
movsb
add
cmc
push
ss
adc
adc
cmpb
idivl
mov
dec
int
push
bound
xor
jg
cmp
dec
cmpsb
inc
xchg
jbe
movl
or
xor
pop
xor
mov
add
shl
mov
lods
inc
xor
or
or
jge
clc
jbe
scas
adc
aad
inc
pusha
into
arpl
pop
cmp
out
and
adc
out
cwtl
roll
addb
pop
jmp
add
movl
adc
mov
pushf
adc
mov
push
ja
movsb
popa
out
imul
jl
add
scas
jmp
xchg
out
imul
push
xor
test
inc
inc
fidivs
add
sub
lock
test
dec
fwait
lock
cwtl
hlt
stos
jnp
and
mov
jb
jae
subb
push
xchg
sahf
xchg
call
jmp
fcoms
dec
add
push
jns
lcall
scas
cwtl
xor
adc
adc
data16
leave
adcb
jno
loopne
jmp
mov
stos
aaa
popf
or
jbe
dec
jbe
repz
and
inc
push
mov
xor
testb
out
xor
icebp
jmp
imulb
test
cmp
adc
fidivrl
in
repz
aam
mov
add
call
int3
int3
fistpll
or
insb
sbb
cmp
jns
and
lahf
pop
movsl
adc
sbb
pop
lds
sbb
mov
int3
loop
fs
or
sbb
andl
sub
je
jle
inc
jl
mov
incl
or
and
and
mov
push
inc
enter
dec
pop
movsb
lahf
jae
jb
imul
ret
fscale
jl,pn
in
mov
xlat
stos
test
adc
loope
cwtl
ret
fdivr
push
out
cmp
adc
and
mov
adc
lods
pop
aad
xchg
sbb
jns
repnz
sub
jbe
subb
and
cmc
and
les
adc
xlat
mov
and
sbbb
cwtl
adc
push
aaa
mov
xchg
sbb
lret
nop
push
jns
and
hlt
jecxz
les
inc
ss
sub
sub
sub
sbb
aas
neg
adc
mov
xchg
or
or
pop
cmp
sbb
and
jp
or
repz
inc
pop
xor
ja
aam
scas
and
ds
popf
add
sub
cmp
xchg
push
fs
cmp
out
adc
sub
out
cmc
fsubl
aad
mov
sub
lods
lret
daa
aad
aad
push
pop
clc
sub
mov
call
jnp
pop
add
pop
stos
out
lea
jecxz
xor
insb
pushf
and
dec
push
xchg
cli
gs
push
jnp
rcrb
lods
or
and
sbb
testl
adc
andl
and
cmp
cmp
mov
insb
mov
cltd
push
cmp
jnp,pn
lret
add
shrl
imul
lret
xlat
scas
dec
pop
jno
mov
repz
lcall
inc
test
aaa
das
enter
sub
sbb
xor
fstps
call
push
jp
stos
jnp
add
xor
push
cmp
loopne
ret
addr16
inc
pop
jge
mov
sbb
clc
aam
pop
xchg
out
mov
inc
fidivl
in
sub
or
cmp
int3
lret
sub
sub
lahf
add
dec
clc
cltd
sbb
adc
aad
add
mov
lahf
int3
xor
cmp
sub
mov
mov
xchg
inc
push
mov
mov
das
or
mov
mov
add
push
push
jne
addr16
mov
shr
xlat
dec
fbld
jg
mov
sti
mov
cmp
mov
mov
in
xor
mov
clc
out
das
xchg
and
sbb
lods
lret
and
pushf
testl
lock
mov
ljmp
jo
push
mov
push
adc
insl
enter
xor
addr16
dec
test
xchg
mov
roll
enter
filds
adc
dec
cli
dec
pop
sub
cmp
iret
and
es
push
xchg
jge
loope
stos
xchg
pop
inc
xor
movsb
or
cld
dec
xchg
adc
cmpsb
stos
mov
lret
or
jbe
lock
or
mov
xor
test
sti
add
sbbb
sub
in
mov
lcall
dec
int3
notb
jo
sub
popf
and
xchg
sahf
ss
enter
push
cmp
les
jg
pop
out
es
inc
or
xlat
adc
gs
movsb
sbbb
bound
leave
jl
shlb
sbb
lods
call
ljmp
outsl
cmp
sahf
sbbb
push
mov
jnp
dec
sub
or
pop
test
mov
sbb
cmp
adc
into
fisubl
es
leave
inc
lds
lods
and
sub
inc
loopne
mov
out
ss
sarb
aad
mov
lret
scas
pop
mov
test
cltd
mov
pop
and
cs
and
inc
and
bound
mov
jmp
xor
jne
fadd
rcr
imul
int
and
adc
jp
adc
fcmovne
mov
adc
xchg
icebp
push
fcomps
xchg
aam
int
pop
pop
mov
out
fs
add
ljmp
std
sbb
movsl
sbb
inc
mov
shrl
test
adc
fimull
inc
cmp
mov
add
out
out
push
fildll
jne
decl
add
stc
lods
add
sbb
inc
ja
popa
flds
notrack
stos
leave
test
repz
lahf
sbb
xchg
cmc
dec
xor
pop
into
jle
cwtl
loop
xor
jl
pop
xchg
leave
call
sub
sub
pop
jbe
mov
std
jb
mov
push
in
inc
rcrl
cmpsb
adc
cwtl
add
movsl
jns
xlat
int
sbb
mov
pop
int3
cltd
add
std
iret
push
mov
sub
and
pushf
push
outsb
shll
hlt
xlat
jecxz
cltd
inc
popf
inc
iret
sahf
stc
aad
cmpsb
cwtl
push
imul
mov
sbb
ret
test
inc
push
or
packuswb
cmp
sbb
and
pop
nop
lahf
in
sub
enter
xlat
xchg
pop
cltd
xchg
imulb
ljmp
cmpsl
stos
sbb
jmp
and
bound
fldcw
sub
push
adc
in
sbb
ret
dec
jnp
inc
movsl
jb
cmp
push
ret
lock
lock
mov
cs
int3
pushl
jne
inc
loopne
push
cmp
sbb
rorl
pop
adc
ja
in
out
push
add
imul
mov
repnz
and
sbb
cmp
loope
mov
pop
ds
aas
mov
clc
xchg
loopne
pop
mov
imul
sub
adc
xchg
popa
aas
lcall
ja
sti
repz
lret
dec
pop
mov
sti
lahf
jbe
and
aam
test
in
fcomps
mov
mov
push
cmp
and
xor
or
in
mov
incb
xchg
and
scas
push
seta
mov
sub
into
inc
cmc
add
pop
jbe
dec
ss
fprem
ret
test
cmp
jmp
mov
aam
push
and
pop
jecxz
leave
gs
sarb
inc
mov
outsb
dec
out
call
sub
jae
inc
mov
jg
mov
es
mov
rcll
out
gs
setnp
xchg
add
add
insb
aas
xchg
sbb
imul
mov
ss
ja
adc
ret
jecxz
icebp
scas
cmpsl
jae
mov
mov
pop
push
add
in
fwait
jb
mov
int3
mov
pop
imul
push
sbb
xorb
cmp
call
adcl
sub
test
mov
add
xlat
mov
push
repz
loope
sbb
dec
adc
fmul
les
push
mov
dec
push
jp
ret
pop
arpl
nop
pop
jae
mov
xchg
jne
dec
cwtl
pop
sti
fdivrl
mov
insl
lods
mulb
jnp
add
mov
sbb
xor
xchg
mull
jae
clc
pop
dec
xchg
add
pop
cmp
mov
mov
add
pop
sbb
in
sub
dec
push
test
mov
lea
push
push
out
cwtl
das
imull
jl
adcb
outsl
xchg
xchg
push
imul
mov
xchg
je
xchg
sub
loopne
sbb
mov
outsl
xchg
mov
lock
ljmp
dec
pop
lret
imul
mov
cli
or
sub
pop
jge
inc
ja
add
push
jns
jecxz
ds
movsl
mov
xlat
fmull
test
fnsave
inc
test
jae
mov
xor
rcl
sbb
push
xchg
and
or
xchg
sbb
arpl
in
ret
jp
xlat
lret
lods
test
dec
push
dec
test
out
add
out
inc
sbbb
cmpsb
movsl
ja
nop
repz
push
jb
mov
scas
nop
xchg
dec
popf
mov
and
arpl
pop
dec
testb
push
cmpsb
std
and
aas
sub
ss
xor
ja
imul
sub
fnstsw
cmp
lea
mov
inc
xchg
inc
inc
shlb
xchg
scas
outsl
leave
or
lcall
add
cmp
mov
out
fwait
stc
cmc
out
call
xchg
push
rcrl
push
jb
inc
movl
xchg
ljmp
fnstenv
daa
pop
inc
and
icebp
adc
repz
stc
fstpl
xchg
push
inc
sbb
cwtl
cmp
rolb
mov
jbe
shl
cmp
cltd
call
inc
sub
inc
xlat
cmp
roll
or
stos
push
pop
xchg
add
inc
je
out
or
mov
repz
xchg
mov
push
popa
nop
lcall
xchg
dec
pop
hlt
loop
cltd
and
aaa
lods
mov
daa
and
sub
push
loop
dec
jl
icebp
fisubl
repz
inc
int3
jbe
sub
pushf
inc
fbld
fsts
sbb
movsl
into
inc
dec
jo
out
dec
int3
in
xor
sbb
xchg
mov
sbb
out
cmp
fcompl
pop
dec
in
and
add
movsl
push
and
inc
scas
mov
pushf
inc
dec
int3
ds
xchg
jae
or
or
outsl
and
out
test
adc
mov
mov
nop
push
movsb
sbb
pop
inc
inc
sub
hlt
mov
pop
andb
adc
dec
movb
sbb
gs
sbb
aas
cltd
sbb
or
fwait
inc
xchg
cmpsb
cmp
cmp
arpl
es
mov
and
sbb
outsb
jmp
mov
std
les
pop
xchg
and
or
add
sub
out
jmp
or
xchg
outsb
inc
inc
add
pop
adc
ds
sbb
lret
cwtl
or
rolb
repnz
xor
data16
pop
xchg
inc
pusha
pop
imul
adc
xchg
inc
loop
push
movsb
xchg
mov
aad
popf
mov
popf
dec
xchg
jmp
mov
jae
or
pop
addr16
xchg
mov
cmp
arpl
sbb
in
jl
test
pusha
cs
cli
int3
scas
mov
in
cmp
outsb
or
cmp
mov
cmpsl
stos
jae
jo
in
jno
stos
insl
insl
jo
cmpsl
stos
cmc
pop
pop
cmpsb
adc
js
adc
jmp
outsl
sbb
std
pop
sub
push
cmpsb
shll
sub
insb
xlat
push
lret
stos
cmpsl
mov
mov
lret
push
aas
rolb
adc
sbb
push
test
addb
inc
cmp
sbb
stos
mov
mov
sub
pop
aaa
fs
ret
cmp
dec
popl
mov
mov
cmp
arpl
xor
lret
mov
repnz
jl
sub
into
sbb
mov
sbb
sub
add
sti
lret
insb
push
scas
cmp
sbb
push
inc
mov
pop
sub
cwtl
fisubrl
out
pop
push
mov
into
dec
sbb
push
adc
add
stos
in
mov
mov
xlat
sub
fs
lods
pop
andl
movsl
adc
lds
adc
mov
sub
push
lret
xchg
and
or
pushf
push
cmp
rolb
mov
jle
inc
sahf
in
das
mov
bound
or
addb
and
adc
or
or
in
es
gs
xlat
into
jnp
and
sbb
ss
nop
sub
xor
loope
xorl
add
sub
sub
rcrb
add
cli
mov
iret
stos
mov
andl
add
jno
psraw
jmp
mov
ret
xor
or
add
pop
sbb
movsb
loop
call
jnp
test
and
aad
stc
lret
fisubl
push
xor
test
push
lock
gs
jle
cmpsl
cmp
pop
adc
repnz
xchg
xchg
jb
cmpsb
scas
push
and
out
cli
and
ret
jbe
add
adc
adc
cmpsl
sub
leave
adc
mov
gs
in
adc
jle
pop
lds
push
pop
xchg
mov
movsl
sbb
imul
push
mov
scas
inc
out
jnp
push
mov
bound
push
out
js
test
mov
jno
lods
jg
mov
sti
imul
lods
adc
repz
adc
and
aam
pusha
dec
adc
mov
adc
lcall
cmpsb
or
out
mov
int
loopne
fsts
mov
pop
inc
dec
aaa
mov
jne
pop
cmpxchg
pop
arpl
aad
jge
mov
adc
insl
ret
jnp
mov
add
in
xchg
add
out
sbb
jg
or
dec
add
jp
and
pop
jle
nop
out
loop
sub
divl
mov
out
sbb
inc
add
pop
ja
sub
or
popf
in
jecxz
aad
int3
out
aad
mov
aad
pop
les
xchg
lods
das
mov
ror
lret
cmp
aas
loopne
cld
test
shl
test
je
adc
ljmp
leave
lock
sahf
lea
subl
scas
dec
xchg
out
fs
mov
icebp
into
pop
sahf
inc
fpatan
push
pop
mov
mov
scas
mov
fs
mov
inc
pop
aam
cmp
int
stos
daa
mov
jbe
mov
mov
mov
test
mov
push
arpl
lret
shrb
cmp
dec
subb
sar
add
out
cmp
cmpsb
cmp
xor
adc
fstpl
testb
mov
jbe
pop
add
fisubs
cmc
mov
aas
sbb
pop
jp
mov
in
mov
xor
mov
das
add
iret
shll
jg
sbb
dec
dec
mov
int3
je
repnz
f2xm1
push
rolb
jle
jge
mov
pop
aaa
or
jecxz
into
bound
pop
aas
aaa
ljmp
popa
and
in
decl
mov
pop
jnp
test
js
std
addr16
jns
bound
loop
movsb
or
repz
leave
cmp
jo
dec
lock
xor
out
push
push
push
mov
loopne
xchg
leave
mov
push
push
mov
addr16
iret
js
xor
adc
mov
movsb
cmp
ja
test
lock
out
mov
into
jmp
and
pusha
jbe
ret
inc
cmpsb
in
sbb
test
lock
cmc
cpuid
add
or
cmp
pop
xchg
push
push
rcrb
jp
shrl
iret
jmp
or
sub
and
add
stos
test
mov
push
push
or
sti
adc
daa
dec
adc
imul
loopne
pop
mov
dec
xchg
xlat
push
mov
push
or
in
mov
mov
mov
imul
sub
sti
shll
sub
sti
cmp
cmp
jle
push
pop
xchg
shll
add
arpl
dec
jo
sub
andl
hlt
ds
scas
test
push
dec
xchg
negl
rorl
dec
mov
pusha
mov
mov
outsb
insb
jmp
je
lea
and
pop
dec
cld
inc
mov
repz
pop
fidivrs
adc
and
jp
fists
in
mov
fcmovnu
or
in
out
or
dec
ret
pushf
jle
jmp
pop
std
xchg
rcr
cmp
hlt
push
lods
lahf
inc
or
js
sub
mov
sub
xor
ljmp
pop
pushl
or
add
rcrb
xchg
jne
out
scas
dec
xchg
adc
and
dec
jnp
mov
hlt
popa
jp
xchg
jns
push
divb
sarl
mov
mov
mov
pop
push
push
test
mov
out
mov
dec
pop
insb
lret
adc
ljmp
lea
outsb
inc
mov
aad
sbb
repnz
jns
pop
dec
rcr
pop
push
xchg
je
sar
test
fldenv
gs
cltd
aam
loop
jmp
cmp
in
mov
sbb
into
xor
mov
lret
in
pop
adc
push
inc
sub
jecxz
cmpsb
pop
popa
cmp
mov
mov
mov
out
adc
jne
adc
dec
mov
sbb
repnz
test
inc
mov
in
add
inc
sub
mov
rorb
cwtl
jnp
outsb
adc
inc
dec
push
inc
pop
add
xchg
jle
add
xchg
bnd
push
xlat
pop
sbb
ja
xor
and
jg
mov
outsl
sbb
test
dec
shrb
rcr
cmp
mov
shll
sti
repz
popf
iret
in
outsl
test
mov
loopne
movsl
and
imul
int3
push
dec
push
mov
test
ja
mov
rclb
hlt
jbe
loop
int3
lods
lods
cmp
rcll
ds
dec
fadds
jp
out
orl
dec
add
fwait
cmp
sbb
inc
test
xchg
lahf
push
cmp
adc
push
testb
sbb
dec
int
scas
in
int
inc
and
and
push
lods
sbb
aad
and
fs
jnp
pop
xchg
or
pop
adc
add
jnp
out
xchg
mov
subl
mov
and
mov
jb
adc
imul
sbb
push
and
or
adc
pop
jbe
push
sub
std
mov
mov
or
ss
out
jmp
lods
jne
sbb
fistpl
jl
jno
rclb
inc
hlt
cmp
rcl
nop
mov
dec
lcall
mov
jb
mov
adc
adc
mov
mov
shll
es
in
out
mov
mov
lock
subl
pusha
push
push
add
rcr
xor
or
ret
inc
loopne
pop
or
popl
outsb
xor
fildl
daa
dec
push
xchg
pop
xor
aaa
xor
addr16
cmp
fimull
mov
push
and
sti
aaa
add
aas
xor
lods
push
ffree
dec
mov
jecxz
push
in
add
subl
dec
stc
pop
fcomi
mov
xor
xor
mov
mov
jb
adc
xor
mov
repz
push
sub
pushf
daa
push
mov
mov
xchg
mov
mov
and
pop
imul
das
shl
pop
pop
dec
pop
mov
shlb
mov
mov
mov
mov
lahf
movsl
jle
scas
pushf
es
nop
test
test
xor
call
add
or
pop
ds
xchg
out
fldl
mov
in
mov
and
leave
push
inc
xchg
jo
or
xchg
inc
dec
jno
ret
push
rcrb
or
gs
nop
xor
and
ss
test
push
sti
cltd
mov
push
rorb
neg
cltd
sarb
dec
addr16
jnp
bound
push
push
inc
adc
pop
out
cmp
test
xchg
cmpsb
popa
sub
movsl
call
and
push
push
and
in
inc
jge
ds
movb
or
sub
push
jmp
insl
cmp
enter
xor
and
mov
pushf
mov
ds
in
mov
movsl
sbb
mov
push
mov
jle
dec
adcl
cmc
dec
mov
out
mov
stc
rcrl
and
xchg
mov
fldl
int3
xlat
inc
ret
add
scas
jb
std
popa
out
sbb
mov
sarl
inc
cmpb
js
dec
aaa
popa
pop
cli
mov
adc
loop
clc
push
fbstp
xor
in
test
fwait
std
ss
ret
or
fcomip
ror
sub
loop
scas
mov
shll
dec
xchg
cld
fildl
rcll
popf
sarl
gs
cld
imul
repz
push
xor
movsl
rcrb
out
arpl
jp
lods
aaa
cmpsl
cmc
dec
jns
inc
aaa
aas
mov
sbb
sbb
dec
cli
inc
and
mov
xchg
mov
jp
shll
mov
mov
ljmp
int3
popl
pop
and
shll
cltd
pop
repz
pop
std
int
mov
das
mov
or
cwtl
jl
adc
shll
jg
sahf
sub
leave
or
jb
test
pop
movsl
in
pushl
xchg
xor
lods
lock
mov
sub
push
pop
sbb
daa
ja
sbb
xor
add
xor
adc
negb
hlt
adc
pop
pop
fisubrl
out
scas
and
mov
hlt
xchg
fistpl
cmpsl
call
or
jmp
dec
repz
in
mov
pop
fldcw
in
jmp
dec
clc
imul
fsubr
aad
mov
daa
mov
or
rcll
jns
fisubs
pop
mov
iret
and
add
mov
inc
dec
adcl
or
jne
repz
xor
rorb
adc
pop
pop
out
mov
mov
int
pop
test
push
push
fdivrs
inc
sbb
ss
mov
or
leave
scas
ljmpw
lock
lock
sub
insl
pop
hlt
mov
inc
sub
adc
push
jmp
popf
and
clc
aaa
rorl
adc
into
or
jp
xor
pop
js
roll
daa
mov
lock
out
xor
xor
mov
clc
outsb
pop
inc
mov
add
js
xchg
mov
cmpb
or
inc
mov
mov
in
adc
adc
js
bound
into
fisubrl
xor
mov
cmp
jmp
cmpsl
imul
push
sub
mov
pop
jmp
test
push
stos
outsl
sbb
jne
iret
fsubrp
push
or
xor
pusha
mov
add
xchg
test
dec
fwait
div
scas
out
lods
xor
jp
insb
mov
mov
addr16
inc
pop
mov
loopne
xor
faddl
lcall
inc
testl
shll
cmp
daa
pop
sbb
sbb
cmpsl
pop
push
and
jnp
mull
aaa
stc
repnz
frstor
xchg
inc
enter
cwtl
mov
jbe
mov
jl
pop
xor
xchg
clc
xchg
mov
push
pop
leave
stc
jne
inc
push
lods
sub
mov
cltd
roll
pop
jmp
pop
sub
aam
xchg
scas
add
mov
pop
mov
mov
sub
xor
fsubl
adc
mov
sbb
cmp
in
cmp
or
cmp
xchg
push
jnp
add
mov
mov
xchg
lock
mov
push
push
insl
cwtl
popw
mov
add
xor
sbb
dec
adc
jmp
fcomps
test
mov
shll
or
cli
ret
ss
in
mov
add
movsl
sub
arpl
xchg
loopne
sbb
jbe
pop
mov
jne
jno
in
test
dec
hlt
shll
movsb
and
inc
pop
xchg
hlt
loope
pop
iret
ljmp
lret
das
adc
push
sub
sub
pop
shrl
and
mov
push
mov
xor
adc
mov
repnz
mov
or
loopne
iret
pop
aaa
fisubrs
adc
test
or
ret
fcoms
sub
sbb
dec
jns
mov
jle
push
push
mov
cs
pop
xorb
cwtl
inc
sbb
mov
and
pop
or
aas
pop
xchg
and
hlt
cld
lret
pop
rcrb
outsb
mov
adc
mov
je
mov
cmc
jge
je
cli
imul
iret
xor
jl
aam
push
stos
ret
xchg
pop
aad
aam
lea
xchg
stos
in
push
jl
jb
xlat
jle
jae
icebp
and
xchg
aad
aad
insb
and
xor
or
test
in
pusha
std
cmp
das
mov
xlat
ret
push
cmp
sbb
subl
sarl
movsl
fcomps
xor
int3
dec
adc
sub
out
xor
fdivs
out
sbb
sub
inc
mov
aad
xor
jg
fwait
loope
push
xlat
ret
hlt
mov
jmp
cltd
xorb
aam
push
imul
fldl
std
shrb
push
xchg
nop
fs
dec
cltd
add
rcrb
dec
adc
inc
sub
addr16
ret
pushf
pop
dec
shlb
femms
test
ljmp
test
test
mov
imul
inc
sub
adc
pop
fs
out
pop
mov
sarb
in
rcrl
xlat
int3
and
lods
xorb
mov
xchg
fldenv
data16
xchg
add
xor
mov
or
inc
fisttps
out
push
stc
pushf
into
lock
clc
xchg
add
or
mov
pop
aad
and
cmc
adc
xchg
cmp
adc
in
cld
dec
mov
adc
cmp
xchg
mov
jo
push
mov
into
out
test
jecxz
ja
ja
cwtl
mov
inc
pop
xchg
lret
add
aas
aas
jne
dec
shrl
add
mov
outsb
repnz
in
and
js
lret
add
cmp
push
mov
push
push
and
sbb
push
stos
xor
jl
or
adc
movsb
movb
mov
add
lds
js
das
pop
push
inc
sub
xchg
sti
cmp
inc
adc
jge
lret
clc
mov
icebp
cwtl
inc
pop
mov
jbe
pop
repnz
in
cmpsl
roll
in
xor
ss
fucomip
test
or
or
sub
fxch
jne
aaa
mov
jp
xlat
test
ss
xor
sub
adc
and
push
dec
xlat
in
lea
imul
push
jmp
push
gs
dec
xchg
out
sub
mov
mull
cmpsb
es
hlt
mov
pop
lret
sbb
cmp
add
and
and
push
add
sbb
das
popf
mov
jbe
push
pop
outsl
orl
insl
outsl
xor
fcomps
mov
jnp
xor
push
scas
movsl
jmp
aad
aam
pop
inc
stos
inc
or
mov
lock
mov
and
shrb
sub
insl
cmp
cmpsl
ss
cli
mov
enter
adc
add
inc
cmp
sub
mov
mov
push
inc
fdivrs
or
loope
les
xor
sahf
stos
xor
idivl
adc
fwait
insb
cmpsb
adc
xchg
in
mov
push
xor
das
pop
push
inc
sub
adc
add
aam
imul
adc
mov
in
fnclex
scas
and
repz
cmp
mov
jbe
cmc
lods
notl
cmp
loop
sahf
jp
cmpsb
mov
pop
fbstp
fildl
dec
pop
add
add
sbb
aad
lea
mov
jns
inc
cli
mov
test
std
cmp
jp
xchg
jp
out
pop
jb
mov
cmpsl
jle
ss
inc
scas
jecxz
jnp
pusha
inc
xchg
lods
jge
ret
add
xchg
outsb
or
or
or
mov
fstpl
imul
fdivs
and
enter
or
stc
xchg
ret
ss
push
inc
scas
lds
ljmp
add
imul
or
pop
test
xchg
aas
icebp
cs
int
cmpsl
and
sub
xchg
push
push
test
sbb
insl
jns
ret
out
pop
jmp
cmp
loope
jecxz
jge
std
add
inc
xchg
xchg
adc
loop
cmp
dec
addb
cli
in
shll
mov
sbb
push
xor
insb
mov
sbb
mov
inc
test
push
imul
clc
inc
sub
lret
cld
inc
ftst
cmc
ror
lret
cli
jecxz
es
sub
test
in
or
sub
lret
lret
jp
cltd
sub
es
pop
jmp
and
mov
add
divl
lcall
push
add
and
pop
jne
mov
aad
scas
cli
mov
xchg
sbb
pop
mov
aaa
aad
shlb
push
out
cli
mov
scas
enter
and
enter
fildll
ficoml
xor
out
popf
mov
sahf
neg
scas
lea
mov
mov
pop
outsb
cs
into
adcl
pusha
iret
cmpsl
jns
or
and
and
xor
out
into
mov
jmp
push
imul
enter
insl
fsts
or
dec
enter
mov
pop
out
loop
mov
gs
daa
jp
mov
bnd
sub
sahf
movsl
push
ja
push
xchg
jns
jne
or
fcmovnbe
adc
outsl
mov
add
adcl
mov
xor
stc
xor
push
mov
or
cmpl
daa
inc
bound
xor
fcoms
jae
mov
push
and
cld
mov
mov
rcr
and
shll
add
insl
lret
add
arpl
lret
test
push
fsubrl
xchg
inc
ret
in
int
nop
loopne
cmp
adc
jae
cmp
add
std
js
mov
mov
sbb
out
jno
jne
mov
add
fdiv
pushf
je
jae
push
xchg
sbb
pusha
lahf
pop
cmp
cmp
rorl
push
daa
imul
mov
and
mov
arpl
setns
cmp
ja
int
ret
jns
popf
mov
dec
inc
call
cmp
cmp
popf
pop
pop
repnz
gs
out
xor
sub
lret
mov
fnstenv
ljmp
fwait
sub
into
std
dec
jbe
ljmp
cmc
mov
push
sbb
sbb
ret
pop
enter
xchg
mov
shll
adc
lret
add
pop
mov
lret
in
xchg
gs
sub
popa
mulb
jno
lock
sub
pop
test
dec
lahf
mov
mov
sahf
leave
pop
jno
lret
push
mov
in
outsl
das
adc
and
sub
test
xchg
pusha
das
shlb
sub
hlt
mov
dec
mov
cmp
lret
aas
push
jns
or
cmpsl
or
adc
or
jns
arpl
xchg
daa
addl
xchg
stos
mov
push
and
or
lock
push
mov
cmpsl
in
jb
jne
lcall
pop
mov
sbbb
sbb
icebp
add
dec
push
cmpsb
jle
sbb
int
int3
xchg
ds
loopne
jmp
cmp
xor
or
sbb
mov
pop
js
bnd
mov
mov
jl
inc
xchg
in
clc
mov
fmuls
adc
xchg
mov
and
popa
xchg
fidivrl
lock
fldenv
add
mov
scas
dec
leave
test
inc
popa
sbbl
clc
and
rcrb
hlt
shlb
mov
jnp
cmpsb
sbb
shlb
pop
sarl
mov
shlb
adc
sub
ljmp
je
push
sarb
pop
xchg
mov
cmp
mov
dec
xchg
clc
push
inc
push
test
ljmp
sahf
imul
lods
push
dec
das
push
fimull
loop
push
mov
orb
pop
dec
and
push
mov
dec
loopne
sub
pop
test
adc
mov
push
std
cmp
xchg
je
fnsave
scas
push
pop
and
jb
pushf
sub
xchg
inc
rorb
dec
pop
aaa
sbbl
outsb
int3
rcrb
loop
xchg
adc
mov
adc
inc
dec
push
popf
inc
into
das
jge
dec
pushf
out
sub
jo
and
pop
imul
aam
repz
or
arpl
inc
ss
cmc
pop
adc
shlb
push
rcrl
repz
hlt
sbb
imul
sub
icebp
sbb
bsf
xlat
sub
mov
add
push
and
mov
cmp
jmp
fstpt
and
lods
adc
xor
loope
sub
out
inc
mov
je
xchg
movsb
scas
or
mov
xor
imulb
mov
xor
xchg
mov
pop
dec
fs
mov
lret
add
xchg
sahf
je
mov
rcr
pop
inc
sub
mov
lock
shll
sahf
mov
fimuls
movsb
jge
mov
push
dec
gs
add
xor
mov
add
add
fistpl
test
push
push
and
sub
or
pop
jle
mov
je
mov
rcl
flds
loope
stc
in
cmp
aas
add
push
rolb
sub
out
fsubs
mov
scas
mov
testl
sbb
je
xchg
or
jecxz
mov
shll
xchg
adc
lods
repnz
out
sub
jbe
sbb
push
fnstcw
and
loope
add
xor
cmp
aaa
xor
jg
and
fdivl
lahf
enter
decl
add
pop
adc
or
push
pop
lcall
aam
sbb
into
iret
popf
js
fwait
jp
call
inc
rcl
mov
stos
outsl
push
and
mov
daa
mov
pushf
or
and
lcall
dec
xor
mov
push
jge
imul
sbb
and
rcrb
ret
mov
push
jnp
sub
pop
adc
jb
xor
lret
ret
fs
mov
adc
cld
cld
pop
adc
mov
fisubs
in
xor
in
cmp
xchg
ja
push
test
idivl
rcrb
lcall
iret
daa
and
cmp
mov
and
dec
fld1
push
pop
xor
imul
rep
push
pop
push
fs
lret
push
mov
aam
adc
test
xor
xorl
mov
addr16
and
shll
mov
and
xor
in
mov
jge
pop
dec
mov
sbbl
ret
jp
test
and
jp
notl
lahf
jo
gs
decb
and
ret
mov
scas
loop
sbb
mov
push
pop
loopne
and
fldcw
adcl
push
stos
or
inc
rcrb
mov
jae
cmp
sti
cmp
popa
sbb
pusha
stos
leave
fisubrs
mov
popa
pop
inc
ss
in
dec
xchg
test
mull
add
das
shlb
push
cmpsb
imull
add
imul
pop
push
pop
clc
dec
mov
hlt
insb
outsl
pop
cmpsb
jg
or
or
pusha
and
gs
or
addr16
mov
andl
cs
movsl
cmp
sub
xchg
and
mov
adc
push
icebp
lods
mov
and
fimuls
xorl
push
adc
mov
icebp
roll
stos
fisttpl
test
cmpsl
and
pop
xor
push
jbe
repz
mov
mov
mov
arpl
jb
jae
jg
aam
push
into
pop
andl
adc
and
roll
sub
push
cmp
add
xchg
dec
push
idiv
cmp
xorb
dec
loope
inc
jge
add
or
sub
inc
cmp
mov
scas
or
xchg
insl
ficomps
dec
mov
lahf
ja
push
test
out
je
lcall
jae
test
and
test
or
punpckldq
dec
dec
push
xor
cmp
or
pop
sub
shrb
inc
push
mov
pop
cltd
stos
icebp
adc
repnz
push
stc
add
fimull
mov
cmp
sub
add
mov
sub
mov
adc
test
jmp
aas
dec
subb
loopne
xchg
push
loopne
nop
push
mov
sub
mov
nop
mov
adc
xor
adc
inc
xlat
addb
int3
fxch
mov
dec
fdiv
pop
outsb
gs
dec
lea
test
mov
jp
sub
lods
aad
imul
xor
ds
push
mov
lea
sub
sti
or
mov
xchg
test
sbb
cmp
sarb
cmp
inc
adcl
sbb
fucomp
cmp
dec
xor
sub
and
pop
lds
adc
lds
add
sub
sti
out
shrb
aad
iret
and
xor
lock
lret
push
inc
pop
adc
mov
sub
sub
cmc
sbb
jecxz
add
out
and
xchg
pop
mov
dec
loop
and
or
push
das
addl
scas
lahf
lock
ret
mov
cli
or
in
xchg
fsts
repnz
mov
sub
and
xor
popf
and
and
jo
jb
jo
xchg
dec
aas
mov
enter
push
mov
xchg
insl
out
cmpsl
fs
adc
mov
mov
iret
aaa
in
cmpsl
icebp
sbb
insb
and
adc
fbld
mov
mov
pop
cmp
and
stos
movups
fwait
add
hlt
mov
sub
insb
add
mov
dec
ljmp
and
ds
outsb
add
and
lahf
xor
fcmovnbe
enter
loop
das
xor
lcall
push
or
dec
xor
arpl
movsl
outsb
sub
fstl
nop
mov
and
add
lret
cli
xor
mov
icebp
js
test
lret
test
mov
push
divb
imul
scas
sarl
jle
mov
stos
jne
mov
roll
pusha
aam
jb
xor
add
sbb
jns
sti
adc
cmp
test
xchg
jmp
cld
inc
gs
jle
scas
fxch
inc
adc
dec
aas
enter
out
jle
fidivl
cmp
test
lcall
inc
fs
pop
dec
push
jnp
cmp
daa
cmpl
aaa
add
jno
xor
aas
mul
inc
push
test
sub
and
cld
jmp
or
inc
fidivrl
clc
xor
push
add
je
sub
mov
bound
rorb
adc
rcll
ret
aas
fiaddl
adc
pop
aas
push
es
push
sub
es
sub
out
pop
fistpll
sub
sbb
imul
gs
mov
fsubs
inc
mov
cmp
pop
sahf
dec
push
cmpb
imull
out
mov
clc
xchg
cwtl
loopne
xchg
and
mov
push
cmpl
pushf
mov
fcmove
fidivrs
movsl
mov
clc
cmp
in
pop
aam
enter
lods
push
test
movsb
ljmp
jnp
lds
fistpl
scas
pop
push
movzbl
testb
add
cmp
and
aad
jb
and
xor
popf
pop
cmp
fsubrl
hlt
aas
dec
jecxz
cltd
xor
jecxz
inc
pop
in
jb
in
push
insl
cltd
mov
sub
stos
cmpsb
add
jle
imul
mov
mov
sbb
add
cmp
cwtl
pop
orl
imul
dec
fisubrs
cmpsb
clc
outsl
sbb
loop
rolb
pop
ja
paddsb
xchg
cmc
hlt
repz
xchg
ret
lds
cmp
cmpsb
int3
inc
loop
sub
inc
mov
xchg
xor
sbb
sub
jmp
mov
andb
xor
push
mov
dec
aad
xchg
push
into
loop
pop
in
mov
jle
lcall
scas
adc
lret
pusha
cli
aam
jp
bound
popa
jb
and
xorb
mov
mov
sarb
scas
aam
mov
xor
adc
sbb
cmp
push
outsl
dec
dec
mov
shll
out
rorb
roll
inc
lret
outsb
mov
int3
ja
mov
pop
bound
cmp
movsb
gs
popa
es
loop
int
out
jne
or
xchg
ljmp
addr16
andb
mov
mov
test
dec
dec
jo
orb
das
sub
and
out
dec
pop
movsl
or
inc
mov
mov
call
ja
push
mov
fdivrl
jl
stos
mov
mov
adc
cltd
pop
sub
jnp
pop
lret
vpackssdw
das
jnp
push
cmc
rclb
loope,pt
int
xchg
pop
inc
mov
push
fwait
jne
cmpsb
push
xor
lds
add
sahf
sub
sbb
gs
rcll
mov
push
cmpsl
mov
sub
jne
cwtl
jns
repz
sub
loopne
pop
in
lods
inc
repnz
test
mov
movb
out
adc
xor
sti
mov
in
jecxz
out
loop
fstp
mov
in
stc
lret
shll
cmp
sub
pop
enter
add
sahf
add
push
lea
daa
adc
sbb
and
pop
outsl
and
or
imul
cmpsl
mov
jne
mov
add
mov
xor
fadds
fdiv
enter
hlt
dec
subb
and
mov
and
push
add
jl
aam
faddl
out
cli
gs
jmp
inc
jno
sub
adc
push
mov
adc
sahf
nop
fsts
pusha
mov
mov
int
jge
out
in
sbb
out
into
ss
shrl
xor
lret
lds
test
movsb
jmp
jnp
enter
mov
sub
mov
test
jbe
or
adc
rolb
nop
and
cld
cmp
inc
andb
dec
ss
xor
jb
cld
neg
or
les
mov
inc
out
dec
mov
cmpsb
loopne
push
incb
sbb
out
movsl
push
mov
mov
sub
push
leave
sahf
xchg
gs
and
mov
pushf
addl
cmp
adc
mov
ss
mov
jg,pt
int
int3
pusha
push
dec
inc
and
mov
into
dec
stc
ficompl
push
loop
push
and
xlat
fidivs
das
nop
xor
iret
out
add
xchg
lcall
enter
or
xchg
inc
push
pusha
add
jmp
cmp
add
cmp
push
imul
sbb
xchg
cmp
or
jmp
xor
add
in
into
ret
insb
inc
int
sub
mov
icebp
cmpsl
sahf
mov
lock
addr16
insl
test
mov
mov
pop
pop
sub
and
fisttps
sbb
leave
lret
dec
sarl
mov
es
mov
inc
sbb
push
and
adc
inc
test
jnp
nop
mov
xchg
or
add
aas
mov
cmp
pop
inc
decb
pop
xor
fstpl
mov
mov
ret
movsl
add
int
sbb
out
rorb
adc
sahf
cmp
movsb
cltd
clc
jmp
inc
aam
adc
sar
insb
add
repnz
push
jmp
cmp
into
in
or
jb
je
jl
xchg
sub
xor
sbb
popf
lret
pop
mov
sub
ja
pushf
sbb
xchg
xor
add
stos
or
ljmp
mov
test
arpl
pop
sbb
jle,pn
push
ljmp
fcmovnbe
stos
jo
fisubl
mov
pushf
pop
xchg
cs
sahf
push
dec
push
mov
xchg
mov
sbb
cmpsl
xlat
aaa
or
add
dec
adc
xchg
mov
sub
dec
and
dec
popf
pop
inc
mov
mov
mov
lret
outsb
lea
fwait
xor
dec
in
jns
movsl
mov
inc
rcrb
lods
in
inc
test
sub
imul
jecxz
mov
inc
shlb
fnstenv
arpl
sti
sbb
aam
mov
lock
lcall
jbe
fcmovbe
jmp
cmp
jecxz
jge
fbstp
ja
js
cli
push
decb
xor
sub
mov
dec
lret
flds
daa
sbb
xchg
xor
jo
pop
mov
stos
imul
jne
mov
out
rol
out
out
cmp
jns
mov
add
dec
or
sbb
push
jle
scas
xor
es
mov
iret
inc
xor
fxch
jg
out
cmp
dec
push
inc
push
fwait
movsb
scas
je
test
in
inc
pop
ja
mov
mov
mov
andl
mov
test
imul
xor
mov
pop
fwait
test
dec
int
cld
cmpsl
jbe
xlat
pop
mov
mov
outsb
fmull
fs
mov
jae
jbe
stos
jno
xor
sub
mov
inc
jg
int3
jno
in
xor
add
jnp
fucomip
ja
add
popf
stos
aam
mov
mov
daa
xlat
sub
push
xchg
mov
dec
aaa
xor
aaa
push
pusha
cld
test
and
pop
lcall
adc
icebp
push
xchg
rorb
movsl
jecxz
fnstcw
xorb
imul
out
xor
or
jae
dec
sbb
cmp
push
ret
sbb
and
cmpb
jmp
inc
aas
mov
xor
and
mov
int3
mov
push
inc
sahf
jge
sbb
aas
incb
jnp
subl
push
data16
add
cmp
add
push
add
mov
imul
xchg
and
push
mov
jle
cmp
jle
fidivrl
mov
jnp
push
and
mov
lods
jecxz
mov
jmp
xchg
jl
xor
add
xchg
sub
and
negl
popf
dec
mov
test
cmp
cmp
sti
add
popf
popl
push
xchg
imul
inc
fsubs
mov
mov
or
fnstsw
and
pop
faddp
or
sub
outsl
sub
xor
push
shrl
and
imul
insb
adc
fcmovu
adc
xor
cwtl
arpl
ds
inc
push
adc
sub
xor
pop
das
mull
repz
repnz
arpl
cmp
orl
xor
xor
dec
sub
push
inc
sbb
fsubp
mov
cmp
pop
ja
or
out
inc
popf
popa
mov
ret
ret
push
adc
je
idivb
inc
mov
jmp
insl
adcb
inc
push
imul
inc
xchg
dec
sbb
sub
jle
add
ljmp
lds
cmpxchg
add
scas
and
cltd
int
push
push
xor
inc
jp
mov
aam
cmp
mov
push
adc
cli
jo
inc
mov
cmp
stc
xchg
xor
sub
xchg
inc
mov
sbb
mov
and
mov
cmp
cmp
jnp
pop
cmp
hlt
add
jno
dec
test
decl
xor
ljmp
xor
sbbb
adc
mov
lock
mov
int
fs
mov
mov
aam
je
dec
mov
mov
cmpl
cmpsl
xchg
adc
and
daa
testl
loop
cmc
mov
and
lock
mov
into
adc
xlat
lea
stos
fidivrs
repnz
xchg
addl
dec
mov
outsl
pop
mov
push
sbb
jle
out
push
and
int
pop
xor
lds
repnz
pop
push
sub
out
sbb
jmp
adc
adc
xchg
movsl
notb
mov
shll
enter
or
xchg
jmpw
mov
jl
cwtl
or
push
jmp
lds
inc
jle
pushf
sub
push
sub
push
add
push
aad
test
mov
aam
cmpsl
rolb
push
mov
jo
jl
js
mov
scas
std
pop
jmp
cmpl
or
std
test
xchg
or
ljmp
push
pop
shrb
mov
mov
jl
add
roll
cmpsb
push
and
enter
mov
xor
jecxz
ret
pop
pop
lcall
mov
xchg
and
mov
icebp
xchg
inc
stc
cltd
hlt
jg
std
jo
iret
ret
test
xor
cmp
mov
mov
sub
pop
cmpsl
push
roll
mov
in
xchg
imul
fucomip
mov
test
sbb
fistpl
test
cs
sbb
test
stc
or
add
jle
push
testl
xchg
imulb
cmp
cmp
fsubl
fcomps
xchg
aaa
je
mov
add
ds
sbb
addl
hlt
xor
dec
mov
sbb
imul
xchg
test
pop
clc
lods
mov
sub
dec
inc
jae
dec
sahf
mov
mov
loop
mov
and
aad
mov
int
test
push
pop
mov
fidivrs
popf
daa
xchg
mov
xchg
xchg
and
and
insb
das
rolb
outsb
fsts
mov
out
adc
cmc
lret
fldl
xor
in
outsl
cmp
push
or
push
mov
int
insl
cwtl
movsb
xchg
imul
pop
mov
fisttps
and
cmp
lahf
xlat
push
jbe
repnz
cmc
mov
repnz
adc
lds
ljmp
sbb
repnz
std
out
shrl
inc
and
add
xchg
andb
cld
aaa
bound
rclb
mov
add
call
repz
and
mov
jo
iret
xor
add
push
mov
jg
cli
jp
dec
notb
add
arpl
sti
mov
cmp
mov
int3
sbb
mov
inc
fistpl
jbe
shl
out
test
pop
test
ss
pop
push
fimuls
push
lds
xchg
mov
pushf
fwait
mov
popf
cmp
jns
and
mov
fnstcw
xchg
xchg
inc
push
icebp
sbb
mov
dec
xor
inc
jecxz
jle
cmp
pop
leave
aaa
mov
and
xchg
in
out
and
repz
repz
lea
pop
lods
ficomps
nop
mov
add
inc
mov
sbb
daa
mov
mov
inc
push
push
adc
mov
fst
pop
filds
pop
mov
inc
cmpsl
fnstenv
sbb
jbe
andl
jge
jle
aad
or
mov
pop
idiv
mov
aam
xor
mov
out
pop
push
pop
testl
inc
fs
movsl
roll
sti
loop
clc
std
adc
and
jl
inc
mov
xchg
test
push
pop
aam
sub
cmp
xor
jmp
xor
push
jo
shrl
adc
pop
xchg
xchg
outsb
inc
sub
xchg
cld
push
movsb
cmpsb
movsl
mov
imul
push
mov
push
pop
xor
or
jle
fisubrs
jge
shrb
cmp
test
scas
mov
or
out
push
aad
jp
mov
or
sti
pop
mov
bound
orb
into
fs
pop
push
pop
pop
clc
das
mov
push
imul
insl
mov
mov
and
incl
jnp
sbb
dec
or
cmc
dec
jg
ljmp
xor
and
ss
pop
push
rol
sti
dec
or
mov
lret
xor
fwait
and
sub
ljmp
sbb
scas
into
adc
sbb
roll
clc
lcall
fistpll
jg
outsl
mov
lcall
or
test
inc
int
mov
pop
cmp
and
xchg
xlat
sub
inc
inc
mov
sarb
pcmpeqb
in
or
frstor
sbb
jmp
adc
hlt
xor
adc
mov
stos
pop
hlt
into
push
jmp
pop
jo
test
sub
sub
push
or
inc
and
pop
loop
aaa
sbb
push
orb
imul
js
int
ds
jl
loopne
jo
jnp
icebp
jl
ljmp
adc
jecxz
imul
cld
fcmovb
jnp
faddl
mov
movsl
lock
xchg
fsubp
adc
in
push
xchg
or
out
shll
mov
dec
add
sbb
jge
faddl
jbe
mulb
sarl
es
mov
dec
or
inc
jns
pop
outsl
nop
xchg
ds
push
rcr
pop
mov
arpl
out
jb
xchg
dec
ja
inc
mov
cmp
xchg
push
cmp
add
outsl
ret
fdiv
movsl
jns,pt
sub
sbb
ss
xchg
bound
sbb
add
sbb
mov
hlt
jne
and
pop
pop
and
cmpsb
ret
xchg
dec
dec
push
clc
shrb
sbb
mov
insl
lcall
mov
add
scas
repnz
fcos
pop
lahf
cltd
dec
push
fiadds
jbe
outsb
out
fwait
jb
inc
sub
cwtl
pop
xchg
push
cmpsl
out
sub
pop
mov
jbe
mov
pop
lods
push
inc
std
pop
mov
push
xchg
int3
pop
dec
jb
mov
in
cmp
lods
fiadds
stos
rorl
dec
sbb
movsl
pop
lea
adc
mov
es
scas
ds
sbb
pop
and
insb
das
mov
popf
cli
out
xor
neg
popf
mov
xchg
sbb
jne
push
aad
loopne
adc
mov
xchg
sub
xchg
out
push
dec
jg
xchg
imul
or
pop
subb
push
cmp
fdivs
mov
pavgb
sbb
xchg
ja
lret
popf
sar
inc
add
pusha
mov
sbb
jo
pushf
bound
sub
jns
add
push
in
test
test
xchg
sbb
xchg
outsb
ret
mov
jno
xchg
ja
lahf
dec
test
dec
xor
pop
add
ja
xor
push
xchg
jmp
orl
xchg
adc
fndisi(8087
testb
cltd
push
xlat
cmp
ror
bnd
iret
cmpsb
pop
push
adc
push
test
mov
inc
repnz
lcall
jae
xchg
sbb
push
or
jmp
mov
popa
adcl
sbb
dec
pop
lret
mov
mov
sahf
sbb
insb
mov
out
aaa
mov
in
add
sub
push
pop
or
loope
push
dec
or
dec
out
add
dec
cwtl
xchg
add
adc
xchg
sbb
pop
in
dec
add
fs
cwtl
je
mov
fmuls
add
js
sub
fwait
sub
imul
arpl
push
xor
stc
int3
lds
cli
loop
pop
je
mov
sbb
into
sahf
pop
mulb
in
xchg
and
arpl
in
dec
repz
dec
pop
xor
mov
test
std
pop
ret
sub
fs
sub
in
ljmp
test
xchg
push
adc
jnp
cmp
bound
mov
roll
repnz
leave
push
jns
jl
mov
adc
xchg
jp
dec
push
stos
inc
psrlq
daa
pandn
lock
sbb
aaa
je
fwait
iret
cmpsb
call
test
fcmovnbe
dec
mov
sub
jno
adc
sbb
cmp
lahf
pop
xchg
lret
add
mov
cmp
and
cmp
int3
and
scas
repz
hlt
data16
out
fs
dec
lea
or
test
daa
sbb
and
jge
push
adc
out
jne
xor
inc
test
jecxz
scas
and
mov
push
cmp
in
inc
mov
aaa
and
aam
inc
test
adc
sbbl
outsb
mov
jnp
mov
stos
dec
outsb
xor
pop
gs
xchg
aam
sbb
xor
in
lahf
out
pop
shl
bnd
cltd
xor
aad
jbe
imul
adc
jb
lcall
jns
dec
dec
sahf
repz
inc
aad
mov
xor
outsb
and
repnz
mov
xchg
lcall
xchg
or
cs
mov
inc
ss
xchg
cmp
xchg
test
cli
mov
xchg
and
inc
mov
cmpsl
lret
test
add
mov
jbe
stos
sti
test
in
out
push
test
inc
orb
es
xchg
xor
mov
addr16
fstps
loope
adc
pop
std
pop
adc
shll
cmp
in
add
push
aas
mov
jecxz
mov
stc
or
shll
insb
add
xor
dec
xchg
insl
sbbb
xchg
icebp
pop
jl
aaa
jmp
les
inc
mov
sub
ljmp
mov
pop
jb
mov
loope
xor
xor
push
dec
xor
sbbl
ss
xor
dec
fildl
mov
loop
sub
pop
call
les
lret
cltd
inc
push
outsb
cmp
push
push
fmull
repz
xchg
jns
push
and
lds
loope
and
ret
icebp
pop
pusha
xchg
int
sbb
lret
out
jns
sbb
les
adc
roll
les
insb
outsb
sbb
cmp
loop
pop
sarl
je
lcall
mov
in
pop
pop
xor
mov
out
shlb
jb
adc
mov
pop
bound
add
int3
and
xchg
cwtl
mov
les
fdiv
nop
icebp
call
stos
xchg
es
in
xchg
inc
and
inc
pop
and
cld
inc
pop
sub
iret
xor
pusha
fwait
dec
out
test
lods
std
mov
movsb
ja
fistpl
pop
sbb
cmp
in
scas
mov
sbb
add
cld
mov
mov
cmc
jp
sbb
ds
jmp
cmpb
push
adc
inc
ds
pop
inc
and
or
enter
sbb
sbb
dec
jl
jp
jnp
inc
mov
pop
adc
fs
dec
js
cmp
xchg
sar
push
jae
or
js
mov
mov
jge
rol
mov
xor
jp
pop
or
inc
add
jo
inc
xor
adc
dec
dec
sbb
jge
stos
aam
pop
cmp
mov
jno
push
cmp
scas
mov
sub
sub
dec
and
inc
sbb
pop
jecxz
fstps
test
dec
or
sub
in
push
add
adc
and
adc
adc
leave
lret
dec
mov
sbb
lret
and
stos
fisubrl
shrb
xchg
int
rcrl
aas
push
clc
lret
push
sub
mov
push
lds
xchg
cmp
adc
xchg
jge
fsubr
xchg
mov
jp
and
ljmp
mov
sub
push
popf
out
fnstenv
lds
sub
addr16
pop
std
inc
cld
pop
sub
ss
sbb
jae
add
or
pop
out
jl
sub
out
pushf
pop
insb
mov
mov
push
jns
addr16
icebp
inc
add
out
xor
jae
into
neg
adc
sub
and
jnp
dec
adc
jg
test
addl
sahf
pop
add
and
add
push
aas
outsl
or
movsl
push
mov
sbb
in
and
jbe
roll
sbb
iret
mov
ret
or
pop
add
cmp
inc
add
jbe
in
out
add
jb
ret
imull
out
movsl
and
scas
mov
mov
out
xchg
fnstcw
sahf
stc
leave
xchg
nop
lods
mov
subl
nop
out
sbb
add
mov
xor
int3
dec
add
mov
in
mov
jg
mov
xlat
lret
push
adc
inc
push
mov
mov
mov
outsb
mov
jns
push
or
fcmovnbe
push
repz
sbb
adc
pushf
inc
fsub
cltd
outsb
jmp
xor
cmp
mov
cmp
adc
cmp
mov
enter
movb
stos
mov
xchg
andb
mov
outsl
daa
push
pop
hlt
inc
jge
sub
movsb
loope
out
clc
sub
xchg
pop
outsb
pushf
fidivrs
insb
mov
or
sbb
push
dec
pop
ficomps
jne
arpl
and
jl
mov
mov
test
add
jg
sarb
fsts
xor
mov
push
cmp
mov
push
je
mov
cmp
xchg
into
push
xchg
lahf
nop
xchg
idiv
out
movl
inc
xchg
xchg
sbb
and
sub
repz
and
sbb
adc
jo
xchg
xor
dec
clc
mov
scas
arpl
test
mul
xor
add
and
lcall
loope
xchg
subl
push
popa
add
sbb
mov
and
mov
frstor
fsubrs
les
loopne
cmp
das
cli
xorb
xor
insl
jbe
ret
jl
dec
mov
pop
clc
ss
mov
mov
add
mov
xorl
jle
dec
leave
aaa
or
mov
sub
sub
push
test
fs
ret
lret
call
or
xor
rcrl
ljmp
mov
movsl
xchg
push
imul
es
dec
mov
xchg
mov
inc
or
gs
push
fmull
outsl
cmp
fstpl
pop
or
dec
dec
adc
hlt
adc
xor
cmp
aam
test
dec
test
out
fwait
or
lea
dec
nop
std
into
mov
jnp
add
out
mov
inc
bound
xchg
mov
std
pop
in
cmp
stos
pop
in
or
loopne
mov
xchg
mov
xchg
and
movsb
fnsave
popf
rorb
hlt
mov
test
cld
inc
cli
dec
mov
cli
popf
xchg
inc
push
movsb
cmpsl
test
inc
call
call
cli
adc
les
dec
cltd
mov
shl
cmp
add
pop
cmp
mov
xchg
jae
lret
daa
jge
jnp
dec
or
into
jnp
adc
jg
lret
in
mov
pop
les
cwtl
mov
popf
insl
pushw
adc
in
jno
jno
jne
mov
ss
sub
xchg
lock
jno
xchg
es
inc
repnz
mov
xchg
cmp
dec
lret
adc
jmp
jns
xor
fidivl
jge
sub
push
push
fs
ja
aas
jo
dec
rolb
jl
in
fsubrp
call
push
dec
adc
sbb
and
imul
jge
test
outsl
jns
pusha
or
cltd
call
or
mov
sbb
aaa
jno
inc
faddl
xchg
jnp
lock
adc
stos
repz
sub
int
jo
inc
mov
jno
test
cmp
mov
aad
movsb
pop
fnstcw
dec
inc
neg
add
mov
inc
iret
in
test
mov
nop
and
divl
filds
cwtl
push
dec
pushf
push
or
mov
mov
test
mov
push
popf
fbstp
sahf
loop
push
faddl
mov
jo
and
ret
pop
fmulp
out
adc
stos
cmp
push
aad
xor
dec
and
bound
mov
aaa
or
insb
push
lods
movb
call
push
push
movsl
jne
sidtl
push
add
jbe
stos
aad
js
dec
inc
and
cmc
std
jne
lahf
into
jae
sub
out
hlt
loope
mov
insl
cmpsl
mov
lock
xor
xor
popf
sbb
aaa
and
movsl
xor
stos
andl
pop
mov
popa
scas
jmp
xor
jb
mov
aas
xor
sbb
movb
xchg
into
sub
cmpsb
and
outsl
jle
cmp
pop
mov
aas
add
stos
cld
push
add
clc
fisttpl
out
clc
lds
sarl
shrl
jge
mov
pop
inc
mov
cmp
inc
std
jae
pop
arpl
pop
repz
adc
add
jl
icebp
cmp
or
lock
inc
test
pop
adc
pushf
das
push
mov
sahf
cs
icebp
lret
mov
push
and
js
das
mov
shr
mov
or
andb
and
stos
mov
sbb
inc
pop
aam
fwait
mov
inc
jle
sbb
in
xor
push
pop
cmp
cld
xor
cltd
subb
hlt
xor
pop
pusha
sbb
daa
inc
in
xor
jp
push
push
ret
das
add
outsb
cmp
out
test
jge
ljmp
test
push
movsl
fdivr
fdiv
out
insl
bound
and
mov
sub
xchg
test
push
ja
es
pop
xchg
jo
and
sub
sti
dec
push
mov
enter
or
cmp
popa
pop
fiadds
fcomps
mov
dec
and
adc
sbb
adc
es
sub
push
push
bound
jno
xchg
das
outsb
int
cmp
mov
push
adc
loop
ss
xor
xor
xchg
xchg
popa
pop
outsb
das
jnp
xorb
push
sbb
pop
pop
rcll
popf
sti
add
cs
jne
loope
and
mov
ljmp
in
je
mov
pop
dec
xchg
and
cmp
pop
mov
lock
test
insl
bound
inc
xlat
sbb
hlt
mov
daa
mov
sbb
and
inc
cmpsl
cltd
mov
or
fdivs
loop
xchg
lds
addr16
adc
dec
cmp
fnstsw
sbb
mov
mov
push
and
pushf
add
ljmp
shrb
jg
insl
loop
jge
stos
push
imul
orl
inc
es
xor
lcall
mov
lret
jnp
sub
es
push
dec
cmpsl
insl
and
inc
icebp
je
jmp
sbb
and
lcall
mov
mov
jmp
jmp
repnz
and
add
push
rol
mov
ja
add
pop
lcall
xor
or
xchg
cmp
shrb
sbb
loope
inc
cs
lods
pop
add
stos
ja
mov
jns
or
add
leave
sub
inc
es
lock
mov
inc
cli
adc
jns
add
inc
dec
adc
jb
in
jg
aad
dec
sub
inc
inc
push
adc
movsl
pop
les
gs
ja
out
insl
pop
ja
push
jg
outsb
add
insl
mov
sub
jnp
mov
jno
addr16
xchg
jbe
mov
or
push
sar
pop
push
cwtl
leave
dec
int3
popa
and
fdivs
mov
push
xor
test
lcall
cwtl
mov
pop
popa
sbb
add
out
jns
in
dec
into
lods
dec
dec
sbb
pusha
mov
jne
shlb
pop
popa
sbb
mov
scas
es
and
inc
ljmp
jb
add
sarl
sub
adc
push
fisttpll
sbb
movsb
add
cwtl
aaa
sbb
cmc
enter
stos
inc
or
data16
xor
xchg
mov
fs
mov
xor
mov
sbbl
dec
xchg
mov
lret
aam
cmp
mov
jae
shrb
imul
cmpb
xchg
test
je
adc
sub
inc
stos
insl
dec
or
mov
sbb
cmc
cli
sti
push
sub
mov
push
stc
push
repnz
ret
and
jg
cmp
inc
aam
push
xchg
out
push
mov
push
adc
pop
pop
inc
pop
cmpsb
flds
jg
push
push
lea
test
push
push
int
call
in
sahf
shlb
cltd
pop
insl
mov
ret
jnp
aam
shrb
iret
call
push
jne
cltd
int3
dec
lods
pop
das
sub
loop
arpl
lcall
aam
and
dec
and
int3
or
fdivl
scas
cmpsb
mov
cmp
jne
cmp
cmp
xor
push
cwtl
jne
sahf
cld
pop
cmp
scas
xchg
dec
sub
je
divb
idiv
adc
stos
arpl
push
bound
jge
or
inc
jne
aas
cmpsb
rcll
jns
xor
ss
call
jge
in
mov
add
mov
xor
es
outsl
out
popa
inc
adc
xchg
pop
push
add
outsb
adc
negb
inc
xor
sub
cmp
or
push
pop
mov
xlat
jae
loope
sub
and
data16
inc
cli
pop
sahf
aad
or
inc
xchg
cmpsb
ja
ret
lods
mov
mov
push
xor
inc
aad
ja
xlat
repz
jl
inc
popa
gs
dec
pop
xchg
fbld
popf
push
dec
xor
dec
das
fmul
repz
add
jae
repnz
xor
mov
enter
psubsb
cmp
mov
inc
clc
push
hlt
loope
and
movsb
pop
inc
xor
pop
mov
mov
mov
sub
and
in
bound
popf
or
or
cmp
jp
cli
mov
cmpsb
enter
push
dec
adc
aas
push
lcall
mov
pop
inc
daa
mov
icebp
and
orl
push
xchg
loope
pop
push
add
movsb
stc
rolb
jnp
loop
jo
inc
aad
mov
mov
sahf
andl
sub
dec
sub
repnz
mov
cmp
jecxz
push
sahf
jae
lods
mov
jne
outsl
jle
add
data16
mov
je
icebp
aaa
fsincos
adc
xchg
push
fimull
and
sbb
sub
cmpsb
mov
sar
into
call
sbb
imul
cmc
lods
testb
fnstsw
xchg
mov
adc
and
insl
mov
out
xlat
xor
pusha
cmp
dec
push
adc
inc
fbstp
push
mov
xor
subb
ljmp
sbb
bound
out
sysenter
out
fiaddl
pop
mov
push
dec
stc
dec
pop
sub
dec
xor
jae
adc
pop
fnstsw
fisubl
orl
push
push
cmc
fwait
xchg
jg
xchg
pop
pop
xor
lods
cmp
fs
push
mov
dec
das
dec
stos
mov
fcoml
mov
imul
divb
xchg
jmp
fstpl
mov
jmp
push
cmp
sarl
add
mov
inc
and
add
or
out
add
xlat
arpl
in
inc
test
lcall
jge
loopne
addr16
sub
int
psubq
adc
mov
loope
push
outsb
jbe
push
movsl
cmp
or
stc
dec
sub
push
std
xor
sbb
lds
push
add
sbb
dec
or
and
cmc
in
adc
lods
ret
cmp
pop
xchg
lea
es
iret
pop
sub
jae
out
aam
push
cmc
cmp
sub
add
jle
xor
aad
call
xchg
mov
adc
and
cmp
mov
mov
fidivl
pop
push
push
pop
sub
sub
jae
lahf
lcall
cli
jl
lret
jne
mov
icebp
or
push
and
mov
inc
fs
je
mul
jge
ret
in
push
int
push
mov
repz
cmpsb
mov
iret
dec
mov
mov
bound
hlt
and
icebp
and
add
out
inc
push
mov
daa
fistl
push
mov
idiv
xchg
add
sti
js
push
test
sbb
in
sub
popf
xor
mov
push
repz
movsb
jmp
xchg
jg
mov
sub
cli
xor
ss
test
xchg
inc
inc
popf
or
push
adc
pop
lods
shl
lock
out
or
fnstenv
xchg
sub
outsb
add
mov
sbb
lods
in
dec
jp
mov
or
xchg
xor
add
jae
sub
cmp
aad
aas
pushl
dec
cmp
arpl
or
sub
stos
scas
cmp
notl
loopne
ja
fwait
mov
mov
daa
inc
icebp
mov
std
jb
add
shufps
fdivrs
jns
dec
or
pop
aad
cmp
pop
adc
jge
vaddps
outsl
and
inc
jnp
sub
cli
movsb
imul
out
push
fs
and
cmp
shrb
pop
add
iret
out
add
bswap
push
pop
js
negl
mov
adc
mov
push
pop
repnz
sub
push
inc
ja
iret
in
or
push
and
test
mov
add
pushf
dec
notl
jle
add
sbb
filds
test
push
mov
jle
dec
add
add
sahf
push
xor
pop
dec
popf
jno
pushf
out
loopne
mov
or
xor
cmpsb
cmpl
subl
sbb
mov
cmp
sbb
add
sbb
sti
mov
xchg
lret
jno
imul
rclb
sbb
rorl
ret
push
pop
aam
and
js
roll
jp
mov
movsl
out
push
in
xchg
out
ficomps
mov
test
pop
lock
xchg
in
out
or
add
xlat
out
scas
shl
adc
push
dec
push
pop
xchg
and
mov
cs
sbbl
loop
fnstsw
xor
mov
adc
or
faddl
lret
aam
or
adc
push
push
add
cmp
int3
fcomps
jns
xor
movsb
push
cs
arpl
ficoml
hlt
jae
jns
jecxz
bound
xor
scas
outsl
addb
mov
addr16
mov
popa
pop
cmc
addr16
lods
jne
call
out
js
mov
stc
jne
xor
sub
les
ds
mov
sarl
or
xor
mov
mov
dec
mov
cmp
mov
pop
enter
inc
fdiv
in
test
sti
mov
or
int
jle
es
sbb
daa
mov
xchg
jle
cmp
jb
xchg
outsb
xor
mov
scas
or
outsb
adc
lea
fwait
mov
mov
shll
sbb
sarl
addr16
pmullw
mov
lock
cli
hlt
out
aad
pusha
fs
push
inc
push
loopne
mov
sbb
cmp
dec
gs
leave
push
bound
jo
fidivrl
add
icebp
imul
dec
aam
repnz
imull
nop
push
mov
cmp
jl
imul
test
mov
cmp
popa
frstor
mov
std
mov
scas
mov
inc
jmp
sub
stos
mov
dec
aaa
adc
jge
das
mov
cli
xor
sub
ljmp
mov
pop
mov
and
push
add
sahf
js
leave
call
insl
adc
ftst
pusha
cmpsl
mov
adc
push
sbb
insb
add
sub
imulb
adc
in
icebp
ret
sti
mov
aaa
cmpsb
idiv
push
arpl
mov
lea
lret
daa
nop
fsubl
xor
pop
jl
pop
push
xchg
stos
and
int3
cwtl
sub
enter
icebp
scas
mov
imul
in
lock
push
sub
ss
xor
js
lret
scas
cmp
inc
pop
std
mov
jne
inc
sub
add
lret
mov
xor
hlt
mov
push
and
lahf
jo
inc
clc
mov
xor
and
xlat
cli
sub
sbb
ss
aas
or
jno
out
mov
test
add
push
outsb
inc
inc
shll
mov
push
mov
popl
call
test
push
mov
pop
mov
mov
jmp
test
add
adc
cld
push
pop
mov
mov
jnp
cmpsl
jae
cltd
inc
sub
dec
iret
dec
in
ss
dec
in
shrl
cmp
inc
test
xor
xchg
inc
int
pop
out
test
in
roll
in
mov
out
adc
call
iret
iret
mov
jmp
jmp
mov
rcl
fwait
push
xchg
movsl
ret
mov
lods
adc
out
jl
inc
cmc
lods
xor
bound
insb
icebp
dec
leave
jno
pop
jbe
into
cmpsb
stc
mov
dec
or
pop
bnd
icebp
adcb
lock
mov
cmp
push
fwait
jno
lods
or
imul
pop
test
movsb
mov
push
pop
enter
mov
push
jg
dec
lcall
sbb
mov
fcmovne
push
inc
mov
orl
inc
loopne
push
jecxz
rcrl
mov
lcall
sahf
dec
iret
or
icebp
pop
sub
shll
dec
inc
mov
mov
lcall
bnd
rolb
lahf
cmc
ljmp
pop
cld
inc
int
xor
gs
xchg
xchg
or
pusha
fldcw
push
mov
testb
cmpsb
sbb
xor
stos
xor
fmuls
popf
out
xchg
mov
ret
push
insl
bound
cmp
cmp
mov
maskmovq
mov
jnp
mov
xor
mov
sbb
les
sub
add
test
sbb
dec
jbe
in
out
mov
mov
push
inc
fcomi
mov
xor
sarb
cmp
mov
xor
enter
mov
lea
call
stos
shl
and
jmp
daa
push
add
stc
xchg
scas
mov
into
es
jne
jmp
xchg
in
sbb
cltd
push
cs
out
lret
repnz
push
pop
pop
xor
pop
cmp
pop
data16
sub
xchg
ret
mov
adc
push
inc
movsb
jns
movsb
pop
into
mov
lds
fprem1
jb
pop
insl
ja
pusha
adc
sti
add
pop
pop
sbb
inc
push
or
inc
lcall
mov
aam
fsubr
daa
frstor
jb
mov
jno
sahf
js
roll
jle
jbe
ret
and
sub
ds
pop
mov
icebp
int3
add
dec
into
inc
clc
sub
out
xchg
lods
lds
shr
faddl
in
lods
mov
mov
mov
inc
repz
xchg
sahf
cs
cmp
mov
mov
mov
insb
push
jg
xlat
roll
lea
pop
mov
xor
cltd
cmp
sahf
push
cmp
bnd
fxch
xor
xor
div
stc
and
pop
jmp
mov
mov
cmp
and
and
and
fucomp
movsl
imul
in
imul
sbb
sbb
pop
and
test
sbb
pop
mov
scas
cld
dec
pop
cmp
sbb
sub
push
in
jmp
test
shlb
push
push
cmpsb
xchg
sbb
fisubs
and
aaa
push
aas
sti
in
mov
pop
xchg
stos
push
ss
sbb
cmp
test
pop
push
mov
out
inc
dec
adc
inc
addr16
inc
stos
add
and
jns
std
movsl
cli
mov
mov
les
aas
and
in
mov
sub
popa
mov
cld
loop
add
pop
adcl
orl
xorb
mov
pop
shll
lcall
add
sub
mov
es
xlat
sbb
mov
push
hlt
pusha
pop
sub
adc
les
pop
and
test
adc
xchg
jno
mov
cmpsb
fldenv
cmp
fwait
ljmp
cmp
jno
mov
mov
outsl
stos
lods
xchg
stos
dec
call
cmp
xchg
push
dec
ret
fisttpl
inc
lsl
cmp
inc
divl
mov
fwait
push
aaa
std
adc
add
scas
ljmp
cli
icebp
ja
fmull
sbb
push
ljmp
xchg
mov
sub
shlb
icebp
addr16
sbb
adc
cmpsb
outsl
inc
cld
xor
sub
imul
mov
sub
sbb
cmp
rorl
jp
out
sub
das
mov
sbb
ret
pop
sti
iret
dec
js
or
out
test
bound
mov
out
ljmp
dec
stos
pop
jle
inc
into
and
mov
stos
mov
mov
shll
lret
insb
inc
xchg
push
imul
cmpsl
sub
xchg
add
adc
lds
dec
es
bound
imul
fbld
lcall
jmp
or
lahf
lcall
adcb
mov
jae
adcl
mov
jno
pusha
lret
mov
bound
push
shl
push
or
mov
in
xchg
pop
into
cmc
call
outsl
inc
inc
cmp
adc
sbb
or
xor
ljmp
stos
ret
imul
outsb
movsb
in
inc
inc
iret
cwtl
xor
mov
add
mov
pop
mov
or
push
jp
clc
daa
mov
inc
sub
dec
shlb
inc
out
rorb
push
fs
movsb
jl
xlat
cmp
pop
adcb
pop
rcrl
jbe
pop
ucomiss
iret
and
jge
orb
jmp
cmc
mov
jl
mov
mov
pop
mov
inc
inc
or
sub
pop
mov
addr16
jg
jo
cltd
faddl
mov
mov
add
xor
rorl
hlt
jp
test
jne
fstl
fbld
dec
pop
stos
cmpb
rcll
jae
test
or
int3
cmp
lahf
testb
jmp
sub
cmp
fstpl
jnp
xor
aaa
lods
mov
dec
pop
jl,pn
dec
addr16
sbb
add
movsb
jecxz
sahf
mov
movsl
cli
pop
dec
pop
out
push
insb
xor
mov
pop
push
scas
add
and
ret
in
addr16
call
add
stc
push
popa
lcall
and
xchg
outsl
jge
xchg
adc
lret
movsl
cmpsl
push
outsb
lods
and
lret
in
xchg
jg
sub
adc
into
xor
bound
inc
inc
das
mov
jge
jl
adc
arpl
xchg
jne
add
adc
ds
and
nop
and
fsubrp
insl
pop
daa
xor
faddl
cmpsb
xor
pop
out
sbb
add
nop
pop
icebp
movsl
mov
cmp
jmp
icebp
xor
lds
imul
es
jbe
sbb
adc
out
cmp
mov
fcoms
mov
mov
inc
addr16
sbb
bound
adc
sub
outsb
mov
pop
ds
fistps
popf
push
sahf
xor
add
fsubrs
fdivrs
int
fistl
xor
jo
mov
fisubrs
dec
fldcw
xor
fcomp
aad
lock
jno
inc
push
sbbb
outsl
int3
and
xchg
xchg
stc
add
add
pop
mov
mov
rcl
je
mov
and
or
js
aad
mov
leavew
add
enter
imul
mov
mov
out
jmp
push
and
lret
sbb
xlat
imul
mov
sub
sahf
xchg
mov
jns
aaa
sbb
mov
pop
mov
or
cld
movsl
in
idiv
popf
adc
xchg
jecxz
jle
int
add
aam
inc
seto
sub
orl
mov
mov
shlb
fnstsw
lock
add
xor
mov
pusha
xchg
mov
lods
lcall
cmpsl
pusha
lret
insb
pop
mov
in
xchg
or
push
jnp
mov
push
out
push
fwait
lret
dec
mov
repnz
imul
lea
mov
sarb
cmpsl
mov
cmp
jns
lods
cmp
inc
mov
frstor
sbb
fsubrs
in
ja
jge
fdivr
push
add
dec
xchg
push
jne
fmul
or
sbb
mov
mov
mov
icebp
add
pusha
lods
sbb
ret
mov
leave
pop
ja
inc
dec
cmp
imul
sbb
jb
pop
int3
jmp
test
sahf
dec
out
sbb
mov
cmc
bound
sarl
mov
fidivrs
bound
adc
adc
shlb
jno
cmp
push
imul
xchg
call
testl
testb
inc
adc
mov
xor
inc
mov
iret
dec
push
dec
jbe
dec
adc
jbe
push
dec
xchg
push
repz
jp
pop
dec
insb
dec
imul
mov
inc
lods
mov
mov
bound
xchg
xchg
inc
imul
es
in
pop
icebp
or
fnstcw
jnp
fmuls
ja
dec
lret
or
mov
lds
ret
iret
lea
pop
fwait
cwtl
jg
cld
mov
mov
push
addb
mov
fcmovu
jo
sub
jmp
pop
es
jg
fsts
rclb
or
xor
js
mov
pop
dec
cmc
roll
jo
aad
xchg
push
sub
out
xchg
xchg
mov
test
or
arpl
xchg
xchg
test
jnp
scas
jnp
jmp
sahf
mov
bound
es
add
inc
mov
jns
insb
pop
add
lock
insl
sbb
jbe
add
push
fildll
fstl
and
ss
out
in
or
es
mov
inc
sub
mov
in
and
and
push
jb
iret
and
add
and
pop
std
add
daa
daa
cmpsl
push
adc
icebp
mov
mov
sbbb
mov
aas
mov
pop
shl
scas
enter
pop
outsb
testb
inc
add
jecxz
sub
int3
dec
daa
fbstp
test
int3
repnz
hlt
ss
jle
push
ljmp
repnz
jne
mov
rcr
out
nop
dec
repz
cmp
les
mov
xchg
cmp
nop
shrb
clc
xchg
add
fidivrl
xchg
out
mov
pop
imul
int3
rsm
in
fisubl
push
push
add
add
fdiv
mov
imul
loope
test
dec
adc
jge
and
es
leave
mov
mov
addr16
shrl
xor
xchg
imul
mov
arpl
idivb
shrb
loopne
stc
inc
jp
rcrb
pop
cs
sbb
enter
cmp
popf
mov
ss
stos
xor
lret
fwait
or
sbb
es
fidivrl
fisttpll
lret
push
inc
and
mul
arpl
in
jp
cmp
lahf
lea
xor
and
xor
aas
xchg
imul
enter
or
fcmovnu
daa
mov
movsl
jp
fstpt
pop
and
xorb
and
sbb
xchg
inc
cwtl
inc
mov
jb
sbb
xchg
pusha
mov
inc
cmp
jl
jmp
int3
shrl
lods
lcall
push
mov
push
push
mov
push
pop
icebp
add
shll
andb
cmpsb
pop
les
rcl
and
lret
pop
add
and
das
enter
movsl
mov
int
clc
inc
jmp
or
add
mov
nop
add
cmp
mov
roll
xchg
or
jge
aaa
mov
popf
push
addb
xor
lcall
ret
aas
inc
popa
sbb
data16
sbb
mov
sti
push
push
jp
insb
mov
and
ret
or
jle
pop
add
pop
xchg
int3
xor
sarb
cmp
rclb
out
mov
adc
inc
sub
into
push
add
inc
stos
flds
add
lds
mov
ja
push
js
pop
jb
push
dec
and
xor
mov
add
in
or
and
test
mov
popa
outsl
js
cmp
jno
fcmovnb
ret
test
out
add
pop
or
fldt
lahf
adc
in
ljmp
rcll
ficoml
nop
cwtl
sub
cmp
xchg
adc
out
sti
cld
xchg
or
mov
xchg
cmc
test
dec
mov
xchg
xchg
sub
shrl
adc
in
dec
sub
lcall
xchg
loopne
inc
push
cwtl
loopne
cmp
lods
into
add
rorb
and
mov
inc
ss
clc
fdivl
enter
push
lods
mov
mov
xchg
lret
iret
les
stc
sarl
jl
aad
out
inc
dec
xor
jb
sarl
ret
je
jle
enter
scas
cmc
dec
or
push
in
test
mov
cltd
cli
hlt
mov
cltd
dec
jae
mov
and
mov
pushf
mov
inc
shrb
cld
arpl
mov
and
xchg
or
sub
pop
in
jno
xchg
fsubp
dec
and
pop
out
inc
adc
adc
and
mov
inc
mov
mov
mov
aaa
scas
xor
int
lcall
mov
data16
fimull
jno
lods
into
int
jnp
sub
in
and
cs
mov
xchg
inc
add
sbb
enter
sub
mov
xor
or
xorb
lret
test
or
int
jne
pushf
repnz
xchg
or
add
pop
imul
rcl
test
ja
movsl
inc
push
in
js
and
sub
or
sbb
adcl
jmp
inc
outsl
mov
nop
aas
and
in
jns
xchg
dec
js
cltd
add
xorl
ret
movsb
data16
aad
inc
dec
test
adc
dec
mov
mov
insb
push
ja
xchg
inc
lods
pop
test
add
leave
jecxz
ficoml
adc
rclb
sbb
jno
cmp
pushl
sbb
std
cltd
push
addr16
leave
fisttpll
mov
mov
ss
out
mov
iret
roll
jnp
fdivs
stc
lahf
xchg
sahf
stc
call
leave
sbb
sti
cmp
dec
push
jno
cmp
xchg
xchg
ret
lcall
fsts
dec
push
cmp
lcall
sbb
sub
inc
adc
loopne
fidivl
aam
ljmp
xor
fistpl
adc
pop
push
std
shrb
jbe
jg
stc
xor
cmc
or
aam
mov
jge
or
mov
leave
mov
scas
dec
lods
std
mov
int3
mov
push
les
je
sarl
rorl
ret
pop
xor
mov
mov
xchg
sub
mov
aas
int
mov
mov
sbb
and
cmp
xor
cmpsl
bound
scas
in
imul
adc
lock
mov
fwait
and
dec
pop
cs
test
push
pop
add
scas
jb
or
xchg
div
rol
xchg
cltd
xor
repz
inc
pop
ljmp
fwait
or
mov
dec
jnp
jbe
cmp
inc
pop
dec
sahf
mov
les
lea
out
mov
add
mov
mov
pop
les
shll
fcoms
dec
aas
gs
dec
cmpsl
imul
jae
jp
or
inc
mov
fisubrl
inc
andb
rcrl
ss
adc
int
iret
insb
mov
test
mov
cmp
mov
dec
push
dec
dec
jmp
orl
movsb
movsb
js
jle
dec
adc
gs
hlt
pop
jg
out
ret
dec
fwait
jmp
jg
enter
stc
pop
loop
mov
loop
push
sbb
jge
gs
jbe
fnstcw
push
lods
cmp
hlt
nop
fildll
push
xchg
daa
jmp
inc
jmp
lret
inc
pop
lahf
xlat
pop
xor
mov
divl
into
push
sub
cmp
ljmp
pop
stos
jg
repnz
out
cmc
mov
pop
dec
jg
mov
icebp
mov
outsb
push
pusha
loope
ds
mov
jae
lret
repnz
je
pop
push
data16
mov
cmp
or
dec
inc
lahf
ds
push
outsb
mov
push
xor
cmp
rclb
fucomp
mov
aam
les
enter
lahf
popf
stc
lret
pushf
or
ret
fisubrs
dec
daa
cmp
cmp
js
lret
cmp
loop
xchg
pop
cmpsb
add
dec
inc
jmp
jbe
enter
sti
adc
cmp
jae
cmp
adc
insb
in
filds
cmp
push
dec
fistpl
cmp
mov
test
mov
out
es
or
inc
out
or
pop
sub
xor
xor
jecxz
push
int
dec
repnz
mov
or
mov
sbbb
xchg
inc
mov
movsl
xor
lcall
test
and
into
stos
nop
cmpl
cmp
sbb
movsb
lds
lcall
sbb
fnstenv
or
xchg
sbb
negl
scas
jp
pop
adc
call
xchg
cli
mov
mov
call
jge
lret
or
lock
repnz
pop
sub
cmc
fcompl
and
dec
andl
sbb
in
mov
lods
sbbl
push
subl
push
add
aad
hlt
sti
inc
inc
xchg
inc
loopne
std
popa
add
jecxz
pop
or
sbb
add
cmc
jne
add
pop
jno
or
in
jb
insb
nop
sbb
fidivs
push
leave
mov
mov
aaa
mov
xchg
insl
lods
jle
popa
into
xor
cmpsb
repz
fstpl
pop
or
lods
push
push
adc
lret
pop
jo
rcrb
mov
xor
and
jle
iret
dec
and
adc
jmp
mov
cmc
cmp
hlt
mov
and
mov
test
out
lock
add
js
mov
jb
cwtl
mov
xor
push
pushf
fiaddl
inc
lcall
mov
mov
and
pop
lea
sbb
mov
xor
repz
andb
mov
adc
sbb
hlt
mov
push
cld
or
mov
xchg
divb
fmull
mov
fldenv
cli
mov
insl
jo
cmp
jl
sbb
xchg
pop
icebp
mov
cmpb
lods
xchg
or
repnz
jmp
sbb
push
and
inc
jns
xchg
dec
and
xor
das
aaa
or
mov
jae
ds
adc
in
fxam
cmp
mov
push
mov
push
adc
popf
or
jmp
jb
pop
jp
push
lahf
negb
mov
jnp
stos
push
ret
loopne
pop
aam
and
insl
mov
rcrb
gs
aas
jae
and
jl
mulb
sub
filds
inc
sub
xchg
adc
iret
ljmp
cmpsb
xchg
mov
lahf
andb
nop
cmp
adc
jo
push
push
mov
stos
push
or
inc
inc
movsl
cmc
xor
psubb
mov
mov
lods
pop
test
mov
push
xchg
cld
inc
and
mov
rclb
jp
popa
ficoms
push
jb
xor
xchg
or
testl
pop
aas
dec
push
rcr
fwait
std
cmc
push
adc
fs
stos
in
ljmp
les
sarb
cmp
sbb
iret
mov
outsb
inc
pop
adc
mov
dec
cmpb
insl
or
test
mov
std
cmc
sbb
push
negb
xchg
out
icebp
negl
mov
push
scas
out
jae
scas
stos
push
inc
sahf
lock
mov
dec
imul
xor
loopne
fdivrs
mov
sti
mov
push
movl
jg
mov
or
icebp
pop
mov
inc
cmpsb
daa
or
stos
mov
out
in
rdmsr
sti
and
stc
daa
or
mulb
jb
test
and
or
push
fdivr
sti
sub
or
inc
inc
outsb
jl
aaa
pop
cmp
nop
xchg
pop
cmc
fsubrs
mov
into
xchg
int3
insl
xchg
insb
xlat
out
and
sbb
and
xor
inc
sbb
sub
sti
test
cwtl
faddl
pop
sub
lods
push
lahf
inc
je
mov
sbb
mov
push
test
sahf
lods
xor
cmp
mov
sub
cmp
cld
push
leave
cmp
and
rclb
adc
dec
xor
sbb
mov
jnp
push
loope
scas
jnp
xor
cwtl
xchg
dec
and
mov
jns
jge
cmp
push
pop
imul
aam
mov
fadds
jle
hlt
jae
mov
mov
jl
out
or
dec
and
mov
out
out
out
int3
push
cmp
add
pop
jge
cwtl
xor
jbe
mov
pop
stos
dec
in
lods
stos
sub
xchg
pop
fstpl
sub
fidivrl
out
xchg
loope
gs
les
pop
push
stos
ljmp
aaa
sub
cmpsl
sub
add
aaa
push
xchg
pop
leave
std
or
jg
inc
je
jmp
push
in
add
test
rcll
scas
fbld
jle
sti
stos
sbb
xchg
push
cmc
ja
sbb
jp
cmp
mov
dec
jno
ret
orl
jae
adc
lock
sahf
inc
dec
in
cmpsb
inc
dec
mov
mov
or
mov
aaa
jp
std
pushf
push
xor
xchg
add
cmpsl
stos
mov
insb
pusha
jbe
cmp
andl
sbbl
fwait
lock
push
in
fldenv
sar
sbb
int
mov
lahf
xchg
aaa
adc
scas
sub
add
pop
xchg
xchg
mov
int3
jb
add
test
push
fildll
mov
insb
lahf
dec
cs
push
test
aad
movsl
roll
nop
int
ret
test
and
sbb
popa
daa
movsb
mov
cld
lcall
xchg
xchg
sub
mov
push
fsubs
adc
test
cli
out
mov
sahf
loop
pushf
sbb
sbb
lret
and
ljmp
ja
pop
sbb
mov
xchg
icebp
movsb
mov
out
pop
mov
aad
in
pop
enter
pop
fsubr
fsubs
shlb
iret
gs
dec
xchg
imul
mov
in
jl
dec
int3
jnp
lods
sub
shll
inc
aas
xor
xchg
jns
xlat
sbb
push
jmp
cltd
lahf
mov
or
push
in
inc
inc
leave
ficomps
or
jnp
add
push
xor
sbb
jge
test
cmp
fdivrs
cld
fists
mov
mov
mov
dec
into
stos
push
orl
pusha
sbb
les
outsb
inc
fisttpll
stos
mov
rorb
cmp
push
pop
and
aad
or
sub
xchg
sub
and
int
pop
insb
and
pop
pop
adc
and
mov
shrb
rclb
inc
ja
test
sbb
ja
fadds
jns
fistpl
sbb
test
xchg
test
and
es
xor
shrl
cmpsb
ds
call
mov
dec
pop
scas
hlt
xchg
pusha
mov
fists
jg
imul
adc
adc
bound
leave
cmp
pop
jmp
lahf
adcl
pop
adc
pop
add
dec
clc
in
push
gs
xchg
sahf
data16
push
mov
mov
jns
leave
notb
int
mov
fsubrl
cmp
es
jg
ds
mov
and
sbb
jb
xlat
xorb
cmc
fimuls
aam
push
daa
out
mov
lret
int
shrl
push
lds
mov
sub
ss
mov
mov
addl
fdivrl
xor
fdivs
xchg
rcl
xor
das
clc
push
jecxz
dec
dec
sti
pushw
subb
push
repnz
pop
and
mov
jae
out
jg
add
adc
push
cmp
stos
ja
aad
fdivrl
xchg
add
ss
int3
xor
pop
fiaddl
sbb
bound
push
mov
dec
or
daa
push
sbb
push
repnz
push
inc
sub
mov
arpl
movsb
jecxz
lods
repnz
mov
ds
lcall
cli
adc
inc
fwait
jg
mov
adc
adc
lock
cs
jne
pop
jle
fistpl
push
push
jmp
jne
imul
outsb
sar
add
es
bound
rolb
frstor
xor
jns
scas
mov
lock
mov
ret
lock
icebp
cmpsl
jmp
cmp
cltd
pop
divl
inc
imul
mov
pop
mov
shrl
pushf
arpl
pop
sbb
pusha
xchg
fstpl
xor
fiadds
or
or
out
mov
or
popa
pop
lds
pusha
pop
and
sub
jl
sub
ja
cmpsb
jl
push
rol
dec
cmp
ss
fldcw
mov
ljmp
sbb
xchg
std
repz
push
dec
stc
mov
mov
xlat
jno
xchg
test
sub
aas
push
pop
stos
push
add
orl
mov
lret
js
add
les
movsb
outsl
mov
dec
rol
clc
mov
jb,pt
add
stos
cld
adc
xchg
enter
jae
cltd
adc
in
and
loop
push
out
lret
xchg
xchg
iret
dec
ret
test
inc
lahf
cmp
xchg
cmovge
fstpl
lods
into
sti
lock
popa
lds
negl
loope
gs
sbb
fwait
sbb
mov
dec
cmp
mov
add
pop
clc
sub
xchg
ret
sbb
mov
xchg
dec
popf
pop
mov
bound
push
fdivrl
and
das
mov
xor
xchg
pop
outsl
lods
jl
and
mov
stos
mov
cmp
shlb
andb
aad
and
ja
les
in
jl
pop
icebp
gs
sbbl
pop
subl
sub
inc
mov
pop
jns
daa
mov
daa
xchg
negl
mov
cld
mov
dec
mov
adc
stos
imul
imul
xor
lret
lods
aam
aad
mov
lahf
lahf
les
or
das
mov
jl
jne
mov
pop
adc
cmp
pop
clc
jae
ljmp
scas
incl
cmp
stos
jnp
xchg
mov
sbb
sub
dec
mov
dec
jb
aas
jb
lds
or
xchg
or
mov
lcall
sub
adc
sbb
in
push
push
mov
jbe
and
rcrl
fistpll
sti
lret
and
pop
cmp
cmpsl
push
mov
and
cwtl
mov
jmp
subl
jp
sbb
sbb
ljmp
out
sub
xlat
daa
fdivr
fbstp
cli
mov
mov
ret
out
push
mov
push
sub
mov
adc
into
pop
xor
mov
sbb
cmc
mov
jle
lods
inc
les
mov
xrelease
cwtl
mov
std
dec
cmc
adc
jno
xchg
cmp
jp
adc
cmp
subb
push
sub
mov
mov
hlt
pusha
cmp
mov
push
xchg
add
popf
cmp
ret
xor
jmp
popf
test
ja
dec
addr16
jmp
cmp
or
ficoml
push
insb
or
or
shlb
or
push
mov
inc
push
les
loop
inc
sti
sbb
sbbb
add
out
gs
loope
inc
mov
sbb
imul
push
push
idivb
dec
es
loope
iret
push
fwait
rorl
es
dec
ret
jp
pop
xchg
xchg
iret
cmpsl
outsl
push
sar
push
lret
mov
mov
ret
repz
push
sub
mov
and
mov
aaa
gs
xchg
out
test
pand
pop
xchg
inc
xchg
test
xchg
jmp
test
and
into
mov
push
scas
xchg
shll
fcoms
dec
ret
pop
pushl
pusha
push
leave
stos
jmp
std
es
xchg
inc
sbb
cmp
push
push
inc
outsl
test
and
ja
das
xor
xor
aas
cld
jb
adc
xor
pop
stos
fcom
inc
adc
outsl
iret
test
cmp
jl
cld
sbb
outsb
push
es
mov
adc
test
js
test
int
imulb
das
test
jo
add
xchg
adc
arpl
ljmp
xchg
sub
aad
xchg
popa
leave
xchg
lods
sahf
shl
lret
cmpsb
xchg
sbb
es
sbb
pop
mov
push
in
aad
adc
push
adcl
push
cmp
xchg
inc
test
vcvtdq2ps
xor
fldl
inc
inc
jge
jmp
dec
jle
test
cmc
push
cmpsb
loopne
mov
pusha
mov
sbb
jmp
or
and
sbb
fwait
jle
cwtl
xchg
jg
je
jl
pushf
std
or
cmp
fldenv
sbb
jb
sbb
sbb
jle
inc
push
rcrb
pop
jbe
or
push
pushf
mov
addb
jge
in
dec
test
cmp
stos
int3
mov
vrsqrt28ss
shlb
int
std
inc
pop
iret
int3
subl
adcl
lret
int
mov
cwtl
std
dec
lahf
cmc
sub
enter
xchg
jle
pop
les
dec
pop
ja
hlt
mov
fiadds
enter
mov
jmp
inc
mov
inc
cmp
aam
sahf
xchg
js
mov
lahf
lcall
jae
insl
and
ret
fdivl
sbb
or
mov
xor
pop
clc
adc
out
pop
cwtl
mov
or
xor
decl
pop
cmc
add
adc
push
pop
popf
and
push
sbb
pop
mov
cmp
mov
sub
mov
sar
mov
mov
sbb
push
sub
ret
sahf
add
or
push
mov
xchg
outsl
jl
xchg
xchg
and
adc
inc
aas
xchg
rcrb
jecxz
out
ret
sub
xor
mov
push
and
and
and
pop
pop
lods
inc
out
xchg
add
or
outsb
es
ret
mov
push
xchg
sbb
adc
lds
add
cld
dec
jnp
add
or
push
xor
insb
dec
repnz
jns
sbb
sti
adc
fidivs
out
xor
gs
dec
pusha
shlb
test
dec
int
mov
jb
loopne
scas
xchg
cmpsb
repz
mov
dec
and
ds
cmp
in
fs
subl
sub
enter
dec
adc
mov
adc
pop
push
push
cmc
sbb
stc
mov
mov
xchg
lods
pop
out
push
xchg
popf
xor
mov
stc
jmp
mov
push
mov
mov
jg
mov
popa
cmp
push
cs
mov
popf
mov
jecxz
scas
jle
xchg
ss
inc
xor
xchg
push
std
stos
scas
xlat
stc
pop
or
fstpt
inc
outsl
cltd
xor
push
shrl
adc
mov
imul
cmp
jne
scas
sub
out
nop
int
lcall
cmpsl
xor
ret
fiaddl
jl
aas
pop
sbbb
out
stos
mov
pushf
fistps
popf
and
outsb
fisttps
in
mov
dec
daa
dec
pop
fmull
jge
mov
push
jg
insl
out
mov
mov
into
inc
push
sub
xchg
fstps
or
sbb
fisubrs
ret
subl
mov
cltd
test
mov
xorl
mov
xchg
cmp
imul
xchg
shl
enter
pop
mov
ja
gs
test
push
mov
outsl
stos
mov
mov
xchg
loop
jne
mov
sub
inc
addb
and
seta
cmpsl
loop
and
dec
sbb
jmp
xlat
aas
js
rolb
pop
leave
enter
int3
repz
incb
aaa
mov
adc
cmp
lods
jge
and
rorb
hlt
pop
ljmp
push
into
ss
adc
push
pop
out
mov
sub
add
imul
inc
lds
cmp
insb
jle
sbb
mov
cmp
or
adcl
adc
out
cmpsl
outsb
stos
dec
xlat
mov
add
mov
or
adcl
and
aaa
rol
dec
or
imul
mov
imul
gs
pop
neg
cmc
jmp
shl
push
test
jg
bnd
fstps
pop
xchg
dec
pop
cwtl
out
sub
xor
dec
popa
pop
out
cs
lret
inc
dec
or
aam
or
iret
fstpl
in
mov
lds
pop
dec
adc
dec
xor
out
mov
adc
xor
push
mov
add
cmc
gs
fdivrl
mov
fiaddl
bound
sub
test
jbe
mov
sub
shrl
int3
add
jns
leave
cmpsl
hlt
xor
add
leave
aaa
adc
mov
push
cltd
aas
into
add
lods
sub
xchg
mov
sbb
ss
ucomiss
hlt
adc
inc
dec
cmc
xor
and
int3
lret
scas
mull
mov
in
test
int3
std
ljmp
pop
mov
push
mov
jnp
xor
mov
mov
adc
sub
movsb
outsl
dec
xor
mov
out
add
sbb
xchg
outsl
insb
mov
ss
or
add
sbb
cmpsb
imulb
shrl
jle
push
add
adc
add
xchg
and
call
dec
fldcw
dec
lret
mov
movb
nop
xor
push
xor
shll
pop
into
pop
sub
lret
sub
dec
arpl
mov
mov
sbb
jo
mov
xor
push
xlat
dec
adc
nop
lock
fistl
ds
out
scas
js
aaa
add
ret
fldcw
fadds
fcmovnu
sarb
jb
out
inc
loope
fisubs
arpl
sbb
in
in
xchg
sbb
orb
sub
add
scas
fnstcw
popa
mov
enter
cltd
arpl
push
jne
sub
movsb
inc
das
dec
pusha
pop
cmp
jmp
aaa
imul
in
add
ficomps
jge
fldcw
add
popf
loop
pop
daa
jno
mov
pop
leave
in
fiaddl
sub
sub
push
xchg
sub
stos
ror
shll
dec
sbb
push
inc
add
pusha
bound
xchg
sub
mov
call
or
push
mov
out
fldcw
fildl
add
fadds
mov
sti
mov
pop
sti
nop
pop
cltd
std
lock
clc
lock
push
mov
repz
push
pop
enter
pop
adc
aam
jb
test
dec
push
adc
lret
rcrw
movl
ficoms
sub
xchg
push
jle
pop
int3
outsl
movsb
pop
pop
aas
ret
out
scas
pushf
cmp
dec
fcoml
insb
jno
sub
dec
hlt
in
and
pop
jg
push
fwait
pop
cld
pop
mov
xor
loope
imul
divb
jno
ljmp
pop
mov
sub
cmpb
je
sub
xchg
push
dec
out
bound
mov
or
out
cmpsl
adc
push
lcall
sti
jo
xorl
ss
mov
adcb
pop
mov
cmp
add
icebp
arpl
jb
adc
std
add
mov
mov
es
jo
icebp
xchg
aaa
cltd
ss
adc
lret
inc
pop
mov
addr16
pop
xchg
out
add
hlt
ret
push
xor
test
dec
movsb
or
xorl
pop
insb
jb
push
mov
mov
in
inc
fiaddl
sbb
icebp
sbb
inc
pop
fisttps
dec
jae
std
inc
mov
int
xchg
push
mov
add
cmp
clc
cmp
decb
pushw
negb
dec
sahf
adc
lods
inc
inc
out
sti
std
mov
das
push
fcomps
inc
sub
fs
fs
sahf
jbe
into
xor
sub
sarb
or
pop
scas
dec
out
sbb
jmp
push
adc
sarl
cld
and
xchg
test
mulb
ss
call
js
sbb
mov
aam
xchg
out
incb
xor
cmc
inc
mov
insb
sbb
pop
jl
adc
push
popa
mov
ficoml
dec
dec
scas
xchg
ficoml
adc
test
lret
add
repz
loopne
push
cld
std
mov
push
sub
ds
lock
mov
js
adc
inc
mov
lahf
daa
in
pop
je
sub
push
ss
js
subb
pop
push
loope
pop
adc
cmp
push
or
repnz
loop
bound
adc
jno
ret
addr16
cmp
pop
xchg
inc
mov
bnd
add
adc
jecxz
sbb
out
and
and
fs
in
addr16
sbb
js
jmp
std
into
push
in
xor
rcrb
mov
shlb
pop
pop
sub
clc
fsts
xor
pop
mov
fldt
mov
outsb
pop
dec
data16
inc
cmpl
scas
xor
arpl
mov
aaa
xchg
mov
cld
xor
pushf
mov
aad
mov
test
cmp
push
dec
not
cli
inc
inc
test
jp
mov
xchg
add
into
cli
in
popa
popa
xchg
aas
divl
cmp
push
loopne
xchg
jl
dec
push
js
mov
test
mov
and
scas
fstl
sarl
lret
push
jno
ss
xchg
xor
pop
test
dec
clc
rorl
mov
inc
jg
dec
pop
cmp
dec
test
mov
mov
xchg
jecxz
cmp
inc
push
jae
fiadds
cld
sub
add
xchg
mov
loop
cmp
mov
sub
shlb
rorl
xchg
mov
cmp
jge
mov
std
cmp
imul
lret
imul
adc
hlt
ret
std
mov
lods
xchg
shrl
lock
adc
scas
mov
sbb
add
mov
sarb
mov
inc
mov
mov
mov
inc
stc
cmc
or
andb
bound
dec
mov
xor
insl
push
push
add
xor
dec
je
push
xchg
jnp
fstps
mov
fcoms
push
mov
in
repz
ds
inc
xor
or
or
xchg
pop
mov
loop
lods
pop
movsb
push
mov
mov
lret
xor
xlat
repz
dec
fs
sti
jno
inc
mov
pop
flds
push
inc
dec
mov
and
frstor
rorl
popf
xchg
inc
movsl
xchg
loope
dec
or
cltd
xchg
push
movsb
fucomip
lahf
xor
or
enter
icebp
shr
inc
add
xor
in
xor
sbb
je
push
or
jge
aas
push
or
jge
imul
enter
aas
push
cmpb
pusha
mov
sub
xorb
in
adc
orb
fs
jbe
aaa
inc
lret
sbb
push
in
mov
imul
sti
adc
repz
dec
jns
mov
pop
xor
xchg
imul
jmp
cmp
fidivs
mov
jmp
sbb
mov
cmpsb
stc
xchg
pusha
insb
insl
mov
jmp
sbb
adc
dec
push
sahf
loopne
mov
sbb
ljmp
xchg
dec
fbstp
insb
cmp
push
stos
mulb
xor
outsb
int3
xchg
das
lock
xchg
dec
sahf
xor
and
sqrtps
test
rolb
xor
andb
lret
and
enter
stc
push
jmp
push
cmpsb
pop
out
orb
fidivs
and
push
push
inc
cwtl
mov
enter
dec
out
cmpsl
pop
in
pushf
xchg
jb
fdivl
in
xor
inc
stos
cmc
inc
fbld
dec
pop
filds
sub
lahf
decb
loop
dec
popf
imul
mov
mov
dec
pop
fmul
out
repnz
sub
mov
sub
loope
jecxz
loope
adc
jg
pop
mov
mov
xor
imul
sub
test
cmp
movsb
insb
movsb
imul
pop
sub
scas
pop
push
das
jge
sahf
mov
push
fidivrs
ljmp
push
sti
or
fs
addb
repz
and
scas
lods
dec
mov
cmp
pop
repz
xor
rcr
daa
icebp
aaa
or
adc
push
sbb
sbb
push
jecxz
enter
psubusw
cwtl
pop
xorb
pop
aaa
inc
pushf
inc
mov
pop
adc
mov
das
ret
dec
daa
pop
rclb
pushf
aad
push
imul
aaa
adc
inc
or
stc
sub
mov
cmp
shll
pop
pop
js
mov
pop
push
sub
mov
cs
dec
adc
and
push
push
cmpsl
jns
bound
xlat
inc
add
andb
adc
fmulp
pop
test
xchg
lret
xorb
fcompl
lods
or
outsb
push
push
adc
pushf
mov
pop
out
push
and
testl
jns
xor
inc
pop
add
sbb
sahf
dec
shrb
sbb
loope
stos
stos
inc
fstpt
rcll
inc
repz
vmovsd
add
fwait
pop
insb
call
adc
into
outsb
imul
push
dec
adc
fisubs
and
ficoms
push
adc
pop
loope
adc
sbb
dec
push
jns
call
inc
mov
add
or
dec
fisttpl
mov
fwait
xchg
fistps
ljmp
ljmp
outsl
out
std
pop
rorb
addb
repnz
jg
das
out
xlat
jb
or
mov
xor
daa
mov
stc
xor
mov
ror
les
mov
iret
add
mov
into
mov
add
dec
fwait
ret
pushf
or
sub
fwait
adc
or
inc
popa
sub
loopne
clc
lret
push
mov
adcb
inc
out
sbb
incl
sub
xor
dec
push
mov
lret
test
push
inc
inc
leave
rolb
daa
arpl
xor
loope
cmpsl
in
fistpl
push
mov
int3
arpl
cmp
xor
aam
xchg
fucomp
sbb
jbe
sbb
and
push
stos
jae
add
cmp
sub
xor
dec
xchg
mov
cmc
mov
negl
pop
jmp
popf
aam
in
mov
sarb
cmpsb
cli
sub
lods
cmp
mov
mov
mov
pop
cmp
cmp
aaa
mov
xor
addr16
into
pop
insl
push
sahf
fidivrl
leave
adc
negb
push
insb
das
cmp
test
dec
js
xchg
rcrb
or
sbb
daa
enter
jo
call
push
roll
cwtl
mov
mov
pushf
loopne
sub
add
fistpl
sbb
pop
inc
out
jno
dec
mov
add
test
pop
mov
pop
mov
fstpl
inc
in
arpl
scas
cwtl
cmp
mov
xchg
lahf
add
add
leave
test
mov
popa
xchg
repz
out
aaa
xchg
arpl
pop
push
clc
test
inc
das
xlat
pop
sub
or
pop
stos
xchg
mov
push
mov
lret
dec
cmp
mov
xchg
sub
and
rorb
int3
mov
push
push
push
lahf
ror
cmc
rep
jg
or
or
out
stc
sbb
int3
dec
push
enter
dec
push
gs
xor
stc
out
lock
xchg
xor
jb
lds
xchg
in
inc
adc
bound
mov
jmp
cmp
aas
inc
mov
add
shl
mov
mov
imul
ja
adc
jmp
sbb
call
pop
mov
mov
mov
pusha
roll
sub
imul
shlb
or
jmp
popl
js
sarb
mov
add
dec
loop
sub
test
mov
jl
jbe
push
xor
shlb
aam
mov
test
out
leave
xchg
cmp
add
sarl
aad
vpshufd
adc
mov
int3
add
in
cwtl
repnz
sub
fists
jbe
xchg
jg
arpl
add
push
mov
add
insl
fbstp
in
mov
cmp
gs
mov
lock
hlt
jae
mov
fstpl
outsl
out
jo
cltd
cmpsl
xor
shl
call
push
sbb
nop
mov
cmp
mov
repnz
mov
pop
out
and
dec
loop
adc
arpl
test
adc
dec
das
xchg
jmp
clc
jmp
mov
pop
stos
xor
lods
pushf
out
sub
mov
or
shlb
dec
mov
outsl
mov
dec
mov
fstp
hlt
mov
jbe
daa
mov
push
js
inc
mov
lea
push
xchg
arpl
outsb
push
pop
sbb
addr16
push
int3
fsubp
add
and
sub
or
and
rolb
sub
outsl
push
aam
inc
cmc
gs
mov
or
sahf
sub
inc
lock
or
pop
sbb
sbb
or
fistl
mov
sti
sbb
dec
mov
ret
stc
xor
test
lahf
jecxz
jae
xchg
push
sub
fimull
rolb
pop
hlt
in
xchg
xchg
imul
fdivl
stos
loop
add
mov
rcll
sti
dec
jae
rolb
popa
lock
inc
int
mulb
out
push
movsl
dec
xchg
repz
mov
sub
add
xchg
and
xchg
dec
addr16
pop
mov
enter
push
inc
xor
xchg
sbb
or
nop
fwait
daa
int
ja
xchg
mov
xchg
mov
js
dec
inc
push
jge
clc
push
adc
lods
sub
test
xchg
xchg
shrb
insb
cmpsb
or
inc
std
std
push
cmp
aam
fwait
icebp
out
jle
and
mov
and
stos
dec
or
jge
adc
jg
pusha
pop
push
inc
fcomps
ds
mov
push
jne
mov
push
xor
movsl
cmp
into
and
jmp
lahf
icebp
ret
popf
and
sbb
inc
cwtl
adcb
out
bound
inc
cwtl
add
jge
pop
test
nop
dec
ret
lods
fidivrl
pshufw
aas
cmpsb
outsb
adc
jecxz
cmp
pop
call
popf
imul
ljmp
fistpll
add
scas
lret
imul
rol
xchg
call
leave
fsub
inc
int
imul
and
int
rcll
js
add
pop
std
sbb
repz
ljmp
loopne
sti
add
negl
inc
or
lret
fcomi
aad
lds
shlb
outsl
cmpsb
push
and
in
mov
mov
cmp
jns
xchg
popa
cli
cmc
cmp
int3
jb
cmp
hlt
dec
insl
push
mov
cltd
push
xor
xlat
repnz
in
sub
or
fbstp
clc
into
mov
movsb
ss
mov
pop
mov
lahf
hlt
push
xchg
repz
pop
jmp
mov
adc
pop
mov
rcll
pop
pop
mov
loope
cmpsl
ja
jge
popf
pop
mov
aas
and
xlat
insb
ret
out
daa
or
mov
div
dec
mov
inc
jb
mov
or
frstor
xor
cs
jnp
cmp
push
int
negw
out
inc
inc
mov
cmpb
jl
push
aaa
aad
cmp
lcall
adc
lcall
mov
mov
dec
dec
inc
push
jbe
je
pop
clc
inc
sbb
fwait
sti
inc
xchg
clc
pop
pushf
aaa
push
push
sbb
fcmovnu
inc
movsl
or
ret
mov
push
insb
dec
or
aad
dec
sbb
fnstcw
in
push
xchg
xchg
fiaddl
sub
dec
pop
sbb
lret
lock
mov
ja
pop
add
ja
xor
or
lret
push
test
dec
or
idiv
popf
ss
test
sbb
jp
adc
filds
xor
mov
jmp
shrl
and
add
in
fstps
nop
xor
in
push
loope
lcall
mov
pop
movsl
mov
sub
and
stos
push
push
adc
or
call
inc
scas
popf
or
cmp
pop
push
ss
xchg
divb
popf
mov
ds
out
arpl
test
sub
mov
push
fimull
dec
js
xor
test
and
lea
push
push
xchg
dec
or
rolb
lret
xor
jmp
dec
jge
jb
lret
sarl
mov
shll
push
mov
mov
push
mov
mov
popl
jno
lret
pop
js
shl
out
xor
adc
lods
pop
pop
jae
pop
imul
stos
push
negl
ljmp
inc
jge
inc
inc
mov
or
mov
mov
mov
out
ret
pusha
mov
rclb
xlat
xor
lcall
mov
xor
mov
add
cmp
xchg
push
rol
mov
xchg
sub
xor
jb
lcall
ljmp
aas
cltd
addr16
mov
sbb
in
pop
les
arpl
add
dec
mov
loopne
mov
daa
insl
jne
cmp
ljmp
cmp
pop
hlt
push
bnd
mov
adc
imul
mov
pop
popf
adc
dec
pop
pop
xor
mov
rorb
pop
les
adc
aas
mov
sbb
cmc
bound
mov
shll
inc
push
pop
movsl
or
jmp
subb
mov
jae
lock
mov
push
cs
mov
mov
push
pop
fmuls
jnp
cwtl
and
mov
mov
lds
xor
rorl
scas
aaa
add
push
xor
lahf
dec
mov
sub
inc
add
mov
sub
and
pop
test
mov
adc
jl
mov
and
mov
mov
mov
or
sbb
inc
jo
lea
rcl
imul
icebp
notl
fdivr
fwait
mov
or
loop
ret
cwtl
daa
nop
call
arpl
xor
jns
std
sub
lods
in
lahf
outsb
mov
sub
and
sbb
dec
test
out
daa
pop
sbb
hlt
ljmp
add
push
repz
sub
outsl
pusha
lds
lds
ret
lret
sub
sahf
mov
mov
out
sbb
mov
xchg
rclb
ja
fcmove
cmpsl
dec
pop
fmul
mov
xchg
jecxz
mov
pop
jmp
sub
pop
pop
xor
sbb
dec
inc
mov
dec
push
jnp
xchg
repz
mov
fsubrl
divb
gs
and
push
adc
and
xor
sbb
mov
dec
repnz
sbb
xlat
pop
add
dec
pop
int3
ret
push
jle
and
shrl
mov
jle
fstpt
loope
push
out
push
in
mov
push
daa
mov
and
enter
les
xchg
jns
inc
fdivr
pop
mov
sbb
fbstp
xor
jns
jecxz
popf
mov
cmpsb
mov
and
ss
adc
cmp
lret
mov
jg
push
fxch
push
inc
cmp
pop
stc
mov
mov
lods
das
jnp
fs
fisubl
shll
dec
xchg
jae
xchg
pusha
pop
pop
enter
mov
out
ljmp
mov
cmpl
xchg
mov
aam
jle
mov
in
jg
push
mov
mov
push
cld
dec
stos
icebp
mov
nop
loope
stos
in
and
push
lods
jl
mov
fiadds
xor
cmp
fwait
shl
mov
xchg
in
loopne
add
in
mov
lcall
adc
adc
jg
popf
pop
enter
hlt
mov
adc
inc
test
push
outsl
lock
or
jmp
movsl
int3
lcall
in
pop
popf
pop
cltd
dec
cmp
jmp
js
std
mov
mov
and
cmp
lds
inc
xchg
jl
xchg
push
arpl
popf
inc
sub
mov
imul
pop
popf
xchg
sbbb
mov
and
int
aad
scas
lea
cmpsb
dec
cmp
aam
push
sar
mov
test
jae
int3
loopne
call
add
and
and
mov
in
stos
fnstcw
mov
arpl
shll
negl
xchg
mov
mulb
popa
fisubrl
gs
xchg
popa
mov
cmp
mov
test
ret
shrl
hlt
neg
jae
xor
inc
xor
mov
sbb
adc
pop
push
int
add
push
ljmp
pop
insl
inc
loop
test
mov
js
mov
or
enter
jns
push
jno
cmp
cmpsl
xor
sti
pop
lahf
and
lret
sahf
mov
sub
fucom
xchg
rclb
testl
adc
ss
insl
pop
push
or
push
pop
mov
mov
jl
fsubl
mov
sub
mov
int
scas
adc
push
in
pop
sub
call
pop
mov
jp
stc
ret
sbb
mov
sub
cmp
adc
inc
dec
inc
push
gs
outsb
inc
push
adc
or
notl
ror
mov
lock
insb
xorl
pop
cmpsl
add
adc
mov
leave
fistl
std
mov
add
fcmovnu
pop
xchg
and
dec
mov
aam
adc
cmpsl
dec
js
fldl
add
xchg
mov
jge
push
cmpsb
or
imul
and
xchg
xchg
je
cmp
xchg
mov
push
addb
pop
ret
jge
scas
dec
and
addb
lret
or
ljmp
mov
insb
sbb
cld
ljmp
aaa
and
out
bound
xchg
fs
into
jae
mov
inc
fiaddl
or
and
adc
out
int3
lcall
mov
dec
call
mov
lock
mov
ficoms
cld
lcall
enter
push
dec
inc
es
scas
pusha
clc
aad
dec
ss
pop
ficompl
ficomps
in
test
jbe
das
inc
push
push
stos
outsl
out
mov
mov
inc
leave
das
int3
sbb
mov
mov
ret
sub
stc
dec
mov
andb
in
fs
add
out
push
dec
out
adc
ds
sarl
push
push
and
lcall
adc
jne
push
xchg
aas
push
adc
push
mov
push
dec
insl
jae
fdivr
xor
pop
push
jns
lret
sahf
pushf
cmp
lds
mov
enter
dec
jge
add
popa
lcall
cmp
mov
push
mov
lret
xor
ja
cmp
out
xchg
call
cmp
pop
xlat
mov
jo
call
mov
stc
fwait
jbe
loope
lods
aas
sti
cmp
pop
fwait
shr
sar
aad
in
out
fistl
imul
sub
jle
in
repnz
xchg
push
jg
repnz
sbb
jne
push
jo
arpl
xor
les
in
sbb
addr16
xchg
mov
and
int3
mov
stos
popa
cmp
mov
adc
sub
cs
popa
push
scas
mov
mov
mov
xchg
stos
sbb
xchg
adc
adc
or
pop
dec
jnp
sub
test
cmp
iret
lods
push
mov
dec
ja
test
mov
mov
add
xor
inc
lods
mov
mov
sbb
dec
mov
mov
sbb
cmpsl
pop
mov
xor
xlat
psubq
push
iret
and
mov
xchg
sbbl
cmp
ljmp
mov
sub
mov
inc
lods
bswap
jp
mov
in
mov
xchg
nop
rcl
xchg
xor
cmp
push
dec
fidivs
xor
inc
push
in
call
mov
pop
or
inc
mov
cmp
lods
mov
mov
push
jg
adcb
sub
jmp
dec
cmp
sti
xchg
xadd
ss
pushf
insb
adc
lds
xor
dec
fimull
ficompl
imul
enter
jbe
repnz
and
std
out
loop
stos
ret
inc
pop
xchg
sbb
cmpsl
mov
mov
in
fcomp
jne
jbe
addr16
imul
repz
shlb
jmp
bound
call
sti
arpl
shl
insb
mov
in
lcall
xchg
nop
cs
xchg
inc
clc
sahf
fs
sbb
cmp
aas
pop
adc
addr16
and
jne
aas
pop
mov
xchg
cmp
xchg
rclb
outsl
loopne
mov
es
mov
nop
jle
shlb
hlt
push
mov
inc
cmpsl
adc
mov
or
lahf
sbb
push
sbb
pop
clc
push
mov
dec
out
cld
stc
test
sub
jo
scas
inc
mov
pop
jl
jbe
or
pop
repz
mov
pop
cwtl
sarl
add
shlb
mov
add
idivb
pushf
jno
mov
testl
in
mov
jae
push
mov
add
ret
enter
mov
hlt
pop
sub
jecxz
clc
push
xchg
jbe
scas
fwait
sbb
fsubl
pop
add
cvtps2pi
insl
popf
insl
bnd
loope
and
rolb
adc
ljmp
or
aam
and
idiv
int
cmp
bound
call
inc
sbb
in
dec
sbb
mov
push
xor
repz
sub
insb
in
clc
or
cmp
test
mov
jle
leave
jnp
test
add
ret
sub
dec
aam
aam
and
repz
cmp
cs
popa
dec
sub
mov
fwait
pop
mul
mov
scas
insb
adc
cltd
jne
jno
cs
xchg
add
xchg
pop
incl
enter
mov
mov
sub
lock
xor
out
sti
or
insb
or
inc
push
pop
or
mov
dec
lret
ficoml
jmp
xchg
pop
insb
sub
mov
ds
clc
cli
notl
lahf
adc
jecxz
push
sbb
mov
dec
lcall
sbb
pop
call
xor
pop
inc
lods
xchg
sub
popf
sub
pusha
add
add
sbb
insl
xor
repz
in
xor
and
out
lods
dec
or
inc
dec
jnp
pop
nop
mov
shlb
or
int
jmp
ds
cwtl
sub
mov
lahf
jae
mov
pop
fsub
inc
xor
push
lret
jns
loopne
fxch
popa
mov
nop
or
inc
or
lcall
fcomps
sub
xchg
lods
mov
fidivrl
push
push
aas
outsb
and
and
dec
fists
stos
ss
loope
clc
ljmp
or
hlt
mov
enter
jmp
pusha
push
jae
stos
cltd
rcrl
jp
mov
add
inc
arpl
dec
cmp
dec
xlat
add
cmp
dec
lods
ffree
mov
dec
fmuls
cmp
leave
push
fs
loopne
jg
inc
leave
inc
or
loopne
inc
out
push
add
pop
add
and
or
aam
test
lods
jb
in
leave
and
mov
xchg
sub
sub
mov
mov
jne
out
and
mov
leave
popf
inc
xchg
xor
dec
xchg
outsl
sub
jae
adc
mov
lahf
push
sbb
pop
imull
and
or
xchg
xor
pop
stos
scas
xchg
push
movsb
rcl
cmp
xchg
pop
xchg
push
fisubrl
aaa
cmp
mov
pop
lock
adc
xchg
xchg
push
in
loopne
inc
jge
xchg
scas
aad
lock
push
pop
pop
xchg
dec
mov
xchg
sub
cmp
and
je
inc
jecxz
stos
lods
fdivrs
mov
cmp
fs
daa
or
mov
jne
rorb
in
xlat
cmpxchg
lret
sub
jl
loop
pop
xchg
dec
lahf
cmp
or
push
mov
iret
js
les
test
lock
pop
xchg
lret
aad
aam
aaa
adc
add
pop
push
call
cs
sbb
xor
cli
out
xchg
les
dec
outsl
fwait
push
scas
sbb
pusha
out
jge
xor
cmpsb
pop
out
lods
cltd
loopne
outsl
mov
xor
leave
xor
in
xor
out
fistpl
adc
pop
mov
and
ljmp
mov
mov
xchg
pop
mov
inc
mov
dec
cli
and
test
outsl
pusha
lret
jl
mov
xchg
jbe
sarb
insl
cmp
sbb
adc
rcrl
jno
and
bnd
xchg
jbe
add
mov
xor
mov
cmp
scas
js
lret
fdivrp
dec
out
ret
pop
ljmp
jb
lods
sbb
cmp
test
inc
mov
xchg
repnz
cs
lcall
pop
or
nop
pop
add
xor
sbb
cli
and
sbbl
repnz
or
and
mov
lret
ss
ret
xor
xchg
aaa
fstpt
std
mov
or
sub
xor
or
xor
cmp
push
inc
fsubs
test
repnz
mov
lret
inc
outsb
je
mov
arpl
movsb
sbb
pop
sub
aad
sbb
adc
xlat
bound
or
std
mov
je
add
adc
mov
stos
pop
mov
adc
fucomi
cmc
fstpt
scas
sahf
cld
stc
ffreep
mov
inc
xchg
int3
outsb
icebp
push
cld
lods
fcomps
cmpb
bound
xchg
jb
lods
push
lret
flds
mov
jae
fildl
in
leave
fwait
inc
mov
cmc
leave
xchg
jo
jnp
fnstsw
roll
jo
jg
sbb
shll
movsl
xor
adc
insl
cli
movsb
push
fdivrs
fildl
xchg
mov
je
xchg
rorb
pop
jecxz
pusha
add
xor
cld
test
push
pop
push
shlb
icebp
add
and
sub
and
repnz
sub
mov
xlat
test
push
outsl
pop
push
repnz
cmp
lret
loopne
inc
sbb
pop
outsl
sub
push
jmp
dec
pop
subb
dec
dec
loope
pop
or
cmp
scas
xchg
repnz
ljmp
addr16
test
mov
cmpsl
jae
inc
mov
xor
push
rep
sub
adc
les
mov
enter
rorl
jl
adc
scas
sbbl
daa
mov
popf
push
icebp
adc
dec
mov
mov
jne
add
cmc
jnp
mov
push
test
push
ja
ja
cmpl
cmp
mov
out
sub
imulb
xor
pop
cmpsl
push
das
pop
out
push
std
enter
movb
jge
push
scas
xor
xchg
fs
mov
xor
int
jl
lds
add
and
outsl
std
jno
sahf
clc
test
pusha
out
and
jge
dec
adc
dec
dec
subb
or
stos
pop
jne
mov
and
fs
mov
and
int
xchg
cmpsb
jo
sbb
xor
mov
jle
mov
pop
adc
pop
push
cmp
pop
cli
dec
fstpl
iret
stc
pop
mov
push
in
jecxz
repz
jmp
mov
xchg
jl
cs
adc
jg
inc
vunpckhps
cmp
bound
push
dec
leave
lods
sbb
daa
getsec
sub
out
mov
bound
into
lret
inc
int
jle
xor
push
cmp
imul
cmp
and
or
mov
aad
pusha
adc
push
and
xor
mov
ss
popa
out
or
sti
jno
xchg
fwait
leave
inc
aas
xor
cwtl
les
mov
mov
push
insl
sbb
movnti
mov
xor
sahf
mov
imul
sub
fnstenv
add
stos
mov
aam
mov
adc
mov
out
or
inc
or
add
test
dec
mov
flds
or
add
shrl
pop
mov
sbb
lds
test
scas
adc
lods
fwait
xchg
bsr
ret
pop
imul
pop
cmp
mov
ljmp
jg
cmp
pop
testl
fstps
xchg
cmp
or
cltd
jecxz
adc
movsl
jl
and
ja
sbb
mov
stos
mov
rorb
out
aas
mov
sbb
iret
cld
loopne
jle
push
jns
ja
push
jge
inc
cwtl
and
inc
movsb
adc
stc
aam
pop
dec
aam
lcall
push
outsl
jae
xor
push
decl
outsl
roll
sbb
call
in
push
fwait
inc
ljmp
adc
mov
xor
or
sbb
add
mov
clc
mov
cwtl
dec
adc
sub
dec
xchg
test
cltd
rcrb
outsl
loopne
jmp
fnstsw
mov
lahf
jge
mov
in
sub
sub
dec
dec
jecxz
into
and
push
and
xchg
cld
ds
xchg
aas
call
jns
push
aaa
loopne
aas
jbe
pop
or
lock
popa
imul
or
iret
sbb
jecxz
push
add
mov
mov
push
rorb
adc
mov
imul
aas
rorl
mov
and
cmc
int3
fwait
dec
in
mov
shll
pop
sub
leave
js
inc
shl
cmp
out
sbbb
inc
rorb
pop
adc
rcr
fisttps
sbb
cmp
int3
cwtl
jno
and
lahf
imul
push
lcall
jno
jb
xchg
jl
ds
xchg
mov
iret
in
test
xor
adc
pushf
mov
sub
inc
sbb
mov
add
mov
push
and
les
adc
data16
sbb
lods
xchg
test
scas
add
mov
fstl
js
fcoms
nop
cmp
in
inc
dec
push
xor
cmpsl
mov
es
mov
idivb
jle
clc
repnz
gs
das
sub
or
shrb
ret
stos
push
cltd
mov
add
cmpsl
roll
or
push
mov
or
incl
clc
popa
inc
push
in
pop
enter
mov
jg
out
jo
iret
jmp
loope
push
dec
add
cmp
fistpl
mov
jg
test
mov
push
out
dec
mov
inc
movsl
pusha
push
sub
aad
or
or
cmp
pop
stos
jmp
xor
test
inc
push
xchg
shrd
jae
call
divl
xor
out
sahf
jb
movsl
sbb
mov
add
pop
cmp
push
adcb
push
sbb
pusha
jae
ds
sti
lahf
mov
cmp
mov
mov
arpl
vmread
insl
rclb
inc
outsl
rcll
clc
xor
mov
dec
rorl
push
addr16
xchg
mov
pop
sub
sub
jbe
flds
arpl
clc
scas
xchg
ret
in
push
dec
cmp
sbb
adc
enter
jmp
jge
mov
add
sub
stos
dec
sbb
fs
lds
movsb
dec
jae
jb
adc
add
fsubr
testb
add
sub
or
mov
outsb
andl
fdivl
mov
pop
stos
fcom
movsb
leave
cmp
add
push
pop
out
jnp
loopne
in
movsb
hlt
mov
icebp
pusha
ret
mov
jne
cmpsb
popf
movsb
enter
frstor
jmp
enter
pop
mov
out
cmp
out
push
imul
mov
mov
mov
fmuls
xchg
mov
imul
cwtl
enter
mov
push
pushf
xor
fimull
mov
cmp
sbb
xchg
test
jbe
nop
mov
inc
lods
or
push
inc
sbb
cmp
dec
add
and
or
mov
repz
insb
cmpsl
bnd
pop
fbld
int
arpl
pop
sbb
in
mov
dec
mov
pop
loopne
loope
fadd
push
std
loope
test
add
push
cmp
in
pop
insb
mov
shr
mov
mov
xchg
jns
adc
jmp
jae
mul
leave
add
repnz
shr
inc
mov
shrb
fidivs
pop
xor
sbb
daa
jne,pt
inc
xor
pop
lcall
sbb
mov
push
xor
mov
fmul
or
cmpsl
xor
lret
push
cmp
ror
loop
mov
loop
push
icebp
pop
adc
add
fildl
lret
cmp
in
add
es
insl
push
test
jo
aad
add
mov
pop
pop
cmp
jg
mov
incb
push
inc
pop
ret
jp
mov
sub
add
pusha
pop
xchg
jne
inc
test
sbb
stos
into
add
jae
jae
dec
pop
in
loopne
jno
pop
ret
movsl
pop
push
fisubrs
neg
mov
dec
mov
cltd
xchg
jns
rclb
lds
sub
mov
sbb
push
iret
mov
push
movsb
test
cmovne
std
into
loopne
out
lock
cli
ficoml
jo
xchg
inc
and
dec
out
adc
imul
jae
movsb
mov
test
pop
orb
mov
xchg
jbe
outsl
mov
lods
shll
dec
repnz
lea
std
sarb
mov
jno
ds
pusha
mov
inc
mov
sub
inc
pushf
jecxz
cmp
rorl
js
jbe
mov
or
jp
push
into
test
push
xchg
cmp
sbb
cmpsl
aaa
jl
push
mov
adc
in
dec
mov
adc
push
fistpl
test
jg
or
adc
stos
jb
pop
enter
mov
or
cs
lock
divb
fsubrl
jge
movups
xor
sti
push
xchg
sub
inc
adc
das
popa
jae
mov
jns
cmc
arpl
scas
shlb
cltd
pop
sbb
aad
repz
loop
pushl
push
jl
or
les
test
mov
mov
out
push
jmp
adc
push
jne
push
dec
scas
stc
sub
mov
mov
shll
bound
scas
into
or
inc
mov
les
dec
lahf
outsb
sub
and
in
cmc
sbb
pop
add
insb
push
shlb
inc
fists
cmp
not
mov
sub
fcomps
inc
push
loopne
mov
out
xchg
xchg
movsb
out
xlat
jno
lret
push
nop
repz
xorl
inc
mov
cmp
repnz
or
dec
dec
ljmp
jbe
mov
ret
push
movsl
fcomp
mov
or
mov
lahf
xchg
xchg
cmp
nop
lcall
adc
ss
dec
dec
sbb
repz
jb
and
cli
adc
cmc
xor
call
adc
mov
dec
les
add
fidivs
iret
mov
sbb
cmpsl
sbb
cwtl
call
xchg
pop
shll
mov
inc
dec
fadd
jecxz
popf
repz
inc
dec
dec
repz
test
clc
dec
sbb
jmp
test
jg
clc
dec
adc
jae
clc
cmc
inc
dec
inc
loope
inc
cli
xchg
int3
scas
jne
push
clc
sbb
mov
add
push
push
add
test
outsb
mov
nop
ja
xor
push
add
cltd
mov
and
sub
sub
xor
mov
mov
dec
loope
call
movsb
ret
fists
sub
cmc
mov
test
lea
or
sub
jae,pt
notl
cmp
adc
lcall
mov
inc
dec
notl
pop
jmp
sahf
cmp
aas
cmpsb
lds
aad
cltd
popf
aas
outsb
dec
mov
and
pop
xchg
movsl
loop
push
inc
mov
lret
fidivrl
popf
pop
inc
pop
lret
mov
dec
std
push
daa
push
cmp
dec
mov
into
push
test
stos
inc
fidivl
mov
dec
inc
popf
mov
push
push
push
dec
push
mov
cmp
lods
shrl
xor
stos
or
pop
mov
cmp
pop
push
add
cmpb
jbe
bound
je
pop
and
hlt
push
insb
jp
or
cmc
xchg
nop
out
fs
addr16
loop
lcall
mov
mov
aaa
xchg
mov
lea
mov
cltd
xchg
stc
mov
test
insb
jge
int
push
adc
sub
cmp
sbb
loopne
adc
mov
into
mov
shr
mov
push
popf
sbb
jl
mov
or
and
jmp
in
add
mov
lret
mov
cwtl
mov
push
icebp
sti
test
ja
xchg
xor
mov
sti
cmp
fldl
xor
jb
jge
pop
fdivl
popf
dec
cmp
mov
test
enter
aaa
mov
xchg
in
sub
push
cmp
dec
in
mull
or
push
dec
pop
mov
add
sub
add
cmp
pop
jmp
lock
mov
or
sub
shl
lock
and
push
add
loopne
into
mov
pop
push
mov
mov
dec
mov
jnp
cli
cmc
test
add
arpl
push
add
lcall
imul
mov
push
sbb
lods
jns
lds
clc
sub
xor
in
cmp
sub
or
aaa
mov
es
pop
pop
inc
stos
mov
aaa
adc
cmc
es
lock
sub
push
jo
push
pop
xchg
sub
mov
mov
lea
in
mov
popa
xor
and
ja
das
xchg
jl
popf
push
ss
rclb
push
aam
jg
outsl
mov
les
cli
dec
rcl
stc
test
add
sub
fsubrs
mov
imul
pop
test
aad
pop
mov
sbb
lahf
out
mov
into
sub
jecxz
imul
cmp
mov
jmp
jnp
lea
adc
dec
push
dec
setne
clc
push
inc
std
mov
std
cmpsl
in
scas
jge
sbb
ljmp
inc
in
mov
jb
pop
in
in
jo
shl
adc
ljmp
jns
rcrb
cwtl
jae
add
mov
cmpsl
test
xor
lahf
jb
inc
gs
push
shl
cmp
sar
test
in
push
inc
mov
sarl
lods
js
dec
test
sbb
cmp
stc
adc
ja
leave
mulb
jnp
xlat
push
rorb
jbe
bound
test
int3
add
or
ljmp
bound
push
or
fs
sahf
xor
js
test
mov
out
js
pushf
js
push
data16
scas
dec
fwait
ds
icebp
pop
pop
push
bnd
cmpl
shl
mull
inc
add
pop
push
cmp
mov
imul
cwtl
push
inc
sub
xor
pop
xor
scas
mov
add
imul
lret
and
sahf
andl
cmp
test
jle
inc
inc
or
jbe
jnp
adc
jo
fcompl
mov
fs
push
push
in
or
sub
repz
mov
sbb
ss
xchg
cmpsl
pop
fldenv
adc
sarl
xlat
and
lds
ljmp
add
mov
sub
rcrb
movsl
push
int3
sbb
mov
push
jnp
fs
movb
mov
push
dec
add
test
stos
push
nop
fcmovb
xor
hlt
jge
std
cwtl
cltd
jmp
pop
mov
lahf
test
push
xchg
hlt
test
sahf
js
and
adc
sahf
or
dec
pop
test
jns
sarb
mov
jno
mov
addr16
inc
xor
in
push
pop
mov
aaa
push
mov
clc
adc
sbb
ds
sti
push
sarb
cmp
lds
std
pop
or
subl
and
scas
or
xchg
ret
mov
mov
subl
jmp
ja
pop
fdivl
aad
addr16
ja
xor
stos
xor
inc
add
mov
lods
mov
xor
xchg
add
xchg
adc
jo
flds
shll
xchg
and
jb
addr16
jg
mov
xlat
xchg
inc
jns
fstp
icebp
mov
icebp
dec
aam
rclb
test
and
xchg
lret
adc
mov
mov
mov
push
repnz
jmp
aam
inc
mov
and
test
lods
pop
cmc
repz
fists
mov
cmpl
mov
dec
arpl
push
dec
mov
push
sbb
xor
daa
insl
int
scas
or
xchg
dec
ja
movsb
sbb
fisttpll
mov
outsb
repz
fcoml
pop
lahf
cmp
sarl
int
shlb
adc
sbbl
fidivs
sub
pop
mov
jmp
add
adc
aam
pop
es
and
stc
js
adc
lods
ficoml
inc
pop
sarl
push
popa
pop
fcomps
sub
sub
sbb
in
adc
push
adc
movsl
jne
mov
and
ljmp
sbb
mov
cmp
loop
shlb
jge
call
dec
pop
aaa
scas
popf
or
das
xchg
ffree
fwait
mov
in
add
mov
adc
push
nop
cmpsl
ds
add
mov
cmp
xchg
pusha
fstp
cmp
dec
outsl
fdiv
pop
jnp
push
mov
cwtl
jb
jmp
dec
ja
mov
icebp
mov
dec
sbb
insl
sbb
pop
dec
pusha
subb
lds
xchg
push
mov
xchg
ret
movb
push
jecxz
sbb
subl
jno
xchg
pushf
add
jno
jns
jne
xchg
mov
icebp
sbb
xchg
hlt
dec
iret
jae
adc
scas
xchg
cmp
adc
push
mov
pushf
xchg
cmp
into
mov
jp
repnz
push
adc
stos
jne
dec
jmp
pop
cmpsl
loopne
mov
adc
jecxz
lds
push
push
ret
cli
push
roll
aaa
xlat
xchg
rcrl
or
jg
inc
aaa
scas
cmp
or
outsb
in
jns
adc
mov
push
inc
push
xchg
dec
fldl
mov
fwait
jge
xchg
xorl
sbb
jp
scas
loop
outsl
sub
call
imul
test
lcall
cwtl
xchg
add
mov
inc
fnstenv
mov
cltd
aam
sub
test
dec
or
loope
xchg
loop
inc
stos
fwait
fwait
das
add
int
rcll
popa
mov
ret
dec
jno
popl
ret
filds
and
pop
lds
push
icebp
add
push
jae
lret
cmp
mov
mov
jo
aam
mov
cbtw
mov
cmp
dec
aad
testb
std
sar
and
or
es
push
ror
sbb
cmp
ds
push
push
push
mov
or
sub
ret
pop
dec
mov
mov
inc
cmp
cld
ss
push
movsl
gs
sub
xor
and
sbb
roll
addr16
in
mov
test
jmp
sbb
jecxz
pop
fdivrl
in
cmc
mov
push
les
mov
push
push
retw
ljmp
pop
dec
adc
lret
movsl
fs
mov
imul
insb
shlb
mov
movsl
lahf
and
jmp
loop
jae
mov
inc
mov
test
imul
sbb
lds
lds
xor
jge
cmp
jnp
movsl
dec
or
cld
sbb
add
add
jg
add
lret
add
int3
sbb
sbb
clc
scas
jb
pop
cmp
cltd
or
inc
rorl
in
jl
sti
sti
lea
mov
xchg
adc
dec
mov
fmulp
fdivl
jo
mov
fidivrl
sahf
into
sbbl
push
xor
dec
jmp
cltd
xor
mull
push
cmp
mov
sub
mov
jge
adc
out
insb
not
out
repnz
inc
fisubrl
jle
push
cmp
push
fs
pop
mov
je
xchg
in
test
jge
add
mov
or
cmpsb
repnz
push
cmpsl
pop
das
out
test
jp
bts
insb
adc
and
lods
in
sahf
mov
movsb
fildll
jecxz
sarb
lock
fidivs
mov
jae
jnp
rorb
rep
cmc
mov
xor
xchg
jge
test
cs
push
repnz
cmp
mov
loope
push
mov
cs
scas
or
sub
cmp
movsl
and
sbb
or
cld
or
icebp
xchg
xchg
xorb
mov
mov
jb
push
fstps
scas
into
dec
cs
add
lret
add
push
mov
lahf
frstor
dec
icebp
push
push
ja
sbb
das
rol
dec
mov
and
std
or
int3
out
inc
pop
pop
adcb
sbb
loopne
mov
cmc
dec
xchg
les
je
dec
clc
jne
sub
int3
gs
xchg
fidivrs
sti
lcall
ret
jbe
inc
or
scas
add
lea
pop
mov
leave
int3
pop
dec
fimull
leave
inc
and
enter
enter
loopne
pop
xor
mov
push
out
dec
xchg
add
dec
mov
movsb
push
inc
mov
inc
add
in
ret
shrl
push
cwtl
stos
xchg
mov
fwait
rcll
xor
in
pop
fistpll
pop
cmp
inc
inc
and
or
inc
jmp
mov
push
jnp
push
adcl
movsl
stc
xchg
pop
xchg
xor
ss
dec
enter
mov
xchg
or
outsl
mov
fnsave
mov
sbb
sbb
or
push
dec
inc
push
iret
cld
and
push
jb
movsl
fs
cmpsl
mov
xlat
aam
rcll
popa
sbb
imul
add
shrb
sub
jle
enter
imul
inc
sbb
mov
insb
test
scas
lcall
in
fsubs
or
iret
mov
mov
add
arpl
adc
dec
inc
int
sahf
pop
mov
adc
test
test
inc
mov
or
jecxz
push
scas
je
fstpl
or
popf
sarl
loopne
dec
insl
stc
jge
mov
test
es
js
or
sbb
xchg
adc
call
push
sbb
rcrl
aad
rolb
add
mul
sub
mov
xor
lea
cwtl
jg
enter
cmpl
cmp
into
dec
pop
fnstenv
mov
xrelease
inc
mov
ss
out
xchg
cmpl
out
mov
je
cld
in
shl
test
jl
call
dec
sub
cmp
fnsave
xor
jnp
loop,pt
mov
dec
dec
jns
test
in
xchg
pop
call
repz
sub
xor
pop
ljmp
nop
repz
mov
add
test
inc
cmp
adcb
in
jb
push
push
repz
movsb
xor
jae
fs
xchg
pop
testb
ljmp
mov
sbb
out
dec
imul
call
or
xchg
outsl
mov
movsl
and
pusha
or
in
or
imul
mov
ror
xchg
mov
fnstenv
pop
mov
in
lds
sbb
mov
arpl
pop
ja
cs
pop
mov
sbb
mov
pop
push
stos
add
xchg
sbb
mov
addl
mov
xchg
dec
xchg
or
cmp
and
sub
add
xchg
addr16
and
sbb
sahf
aam
aas
xchg
shl
inc
mov
xchg
daa
jmp
cmp
bsf
dec
lret
iret
outsb
dec
pushf
dec
push
hlt
outsb
shrl
adc
inc
cmp
in
cli
sub
sub
pusha
je
loopne
addb
mov
fucomp
inc
js
lahf
loope
insl
cmp
mov
ljmp
or
outsb
rcrl
pusha
push
jmp
sbb
pop
xchg
ljmp
jmp
or
mov
ret
add
and
cmp
out
lds
enter
cli
push
and
push
lret
lods
cld
jecxz
ss
xchg
sub
or
rol
fcoml
jo
repnz
dec
dec
inc
push
dec
pop
shll
and
ficoml
adc
mov
inc
pop
shl
sub
in
pusha
push
ret
jb
add
dec
jecxz
or
dec
xchg
insb
inc
xchg
mov
out
jmp
call
or
jg
pop
jns
out
stos
orb
cmp
ljmp
dec
and
push
ror
std
and
out
lret
jp
jo
sbb
pop
lret
mov
cmc
add
out
insb
addr16
xchg
pop
cld
xchg
mov
iret
clc
lret
stos
pop
inc
push
xchg
or
pop
sarb
xchg
mov
dec
pop
push
ficomps
sub
pop
faddl
xchg
jle
sub
popf
mov
push
and
mov
mov
pop
movb
sbb
dec
mov
jecxz
pop
cltd
pop
out
shrb
mov
cmp
leave
mov
jae
hlt
xchg
std
imul
nop
cmpsl
test
jl
mov
dec
cmp
lods
clc
je
stc
xchg
push
dec
cli
fsubrl
mov
dec
jnp
cmp
sub
mov
pop
cmp
mov
or
cmpl
cmp
mov
test
in
or
pop
rolb
mov
mov
mov
push
xchg
lods
popf
cmpl
aam
scas
mov
daa
aam
xchg
mov
inc
call
cmp
call
lret
or
ds
insb
xchg
cs
pop
std
jne
lea
pop
adc
adc
lea
in
sbb
dec
test
mov
and
iret
hlt
push
out
push
mov
add
lcall
mov
int
mov
xor
loope
xorb
mov
aas
repnz
repz
or
lock
call
insb
ljmp
or
wrmsr
js
cmp
add
jo
jp
enter
pop
aas
std
int
fs
push
imul
push
push
jmp
lock
mov
push
inc
movsl
psubusb
mov
mov
cmp
xor
loope
insl
mov
mov
sbb
int
ja
addr16
je
dec
mov
dec
and
or
xor
pop
mov
daa
xchg
and
iret
mov
int
jg
push
shr
aaa
add
subps
jge
and
mov
jmp
push
inc
cld
sbb
fsubrl
gs
xor
xlat
add
data16
test
jmp
dec
add
fsubrl
lock
push
outsl
in
pusha
mov
lcall
mov
lods
mov
jg
xchg
jmp
imul
loop
adc
lods
enter
pop
jmp
push
xor
cmpsb
add
aad
cltd
aad
pop
cs
pop
enter
pop
inc
xor
in
sub
jo
in
cmp
mov
mov
adc
mov
iret
push
daa
adcb
cmc
push
mov
inc
sub
inc
loop
movsb
fs
arpl
mov
cs
mov
pop
pop
addr16
fwait
enter
lock
or
dec
push
aas
outsl
mov
clc
mov
movsl
lock
dec
inc
lcall
shr
inc
or
push
pop
cwtl
jp
xor
mov
jp
loope
fsts
test
clc
cltd
push
inc
adc
stc
pop
mov
test
cmc
xchg
fstp
and
jp
push
pushl
lock
mov
and
sub
cmpl
test
jno
mov
shlb
ret
int
pushf
sub
or
inc
add
xor
pop
pop
popl
mov
mov
sbb
fwait
push
cli
cmp
iret
gs
frstor
arpl
cld
ret
loop
xor
fsub
cld
sub
in
mov
rol
cmp
mov
jbe
add
subl
push
bound
xor
add
sbb
or
mov
lahf
inc
std
and
fmulp
mov
scas
test
fdiv
mov
push
outsl
and
addr16
mov
jecxz
les
mov
mov
push
pop
scas
in
ja
inc
testl
cmp
jb
insb
adc
ficoml
test
jp
adc
adc
aaa
insb
and
seta
xchg
lret
pushf
mov
sbb
xlat
dec
and
push
mov
aam
or
lcall
mov
popf
iret
pop
mov
and
sbb
cmp
sub
pop
adc
adc
sbb
mov
pop
movsb
outsb
add
push
mov
mov
fnstenv
add
mov
xchg
imull
mov
cwtl
xchg
push
xchg
xchg
clc
mov
nop
jnp
repnz
mov
in
adc
xchg
push
jecxz
push
aam
lcall
mov
xchg
xor
outsb
inc
pop
mov
movsl
jno
xchg
out
adc
mov
test
xchg
push
xchg
jne
dec
stos
mov
pop
push
mov
pop
std
insl
and
dec
inc
xchg
shl
xchg
cmp
xor
out
xchg
stc
pushf
mov
mov
mov
pop
sti
popa
rcll
mov
bound
mov
lahf
je
daa
cld
and
sub
pushf
sbb
xchg
mov
cmp
mov
leave
inc
ja
mov
ret
mov
inc
or
cmp
cmc
in
jno
clc
mov
xchg
ja
sub
scas
xchg
mov
lock
mov
or
cwtl
imul
lahf
int
idivl
pop
roll
insb
push
add
sbb
fisttps
in
sahf
sbb
and
adc
imul
pop
inc
sbb
jb
sbb
dec
dec
fmul
cmp
imul
inc
mov
mov
inc
scas
dec
mov
xchg
mov
pop
pop
mov
mov
adc
push
lods
mov
adc
sbb
pop
cmc
sub
scas
sbb
insb
addl
mov
sbb
push
arpl
lahf
add
pop
mov
mov
lcall
sbb
lds
mov
mov
mov
arpl
cli
js
and
je
sbb
sub
hlt
push
adc
aam
data16
inc
stc
jns
xor
stos
insb
adc
jo
adc
lea
fucomip
fldcw
dec
pop
xchg
jmp
enter
jnp
lods
notb
stos
jb
mov
push
xorb
ljmp
inc
jnp
push
rorl
push
cmp
jbe
jns
popa
push
mov
jnp
mov
push
sub
mov
arpl
out
push
adc
pusha
sbb
jge
out
jle
lods
and
lods
cld
in
and
lret
das
pop
xor
ret
out
cli
jae
fadds
lea
xor
fs
pop
and
cmp
ret
mov
fldenv
mov
je
shll
mov
mov
sbb
add
movswl
stos
push
insl
cmp
enter
cmp
outsl
lock
xchg
popf
inc
sarl
or
sahf
sub
xor
push
sahf
shl
dec
add
jbe
or
lods
andl
adc
sub
and
dec
popa
push
push
jecxz
lret
ljmpw
nop
fwait
mov
fidivl
stos
inc
push
add
div
mov
bound
push
or
mov
and
jno
fucomi
or
mov
xchg
inc
lods
es
test
hlt
xor
mov
and
jge
sub
cmp
lods
cmc
lahf
mov
push
xchg
xchg
popa
xor
jl
push
sbb
ds
mov
aas
cmpb
pop
or
mov
sbb
cmpsl
mov
hlt
dec
icebp
mov
mov
pop
sbb
fs
or
pushf
loop
fdivs
hlt
jns
iret
add
xor
loope
mov
inc
dec
mov
lret
jbe
xchg
jns
scas
pop
gs
add
and
xor
sub
mov
fmul
adc
roll
xchg
aad
sub
inc
sbb
xchg
mov
insb
dec
jge
bound
aad
daa
je
mov
loop
pop
mov
lods
adc
shlb
scas
xchg
add
jle
mov
cmp
je
dec
fs
xor
xchg
cmp
sahf
in
call
pop
shlb
popf
jl
pop
pop
cmc
jns
dec
cmp
or
lods
mov
hlt
call
mov
xor
int3
subl
in
and
and
mov
loop
cmc
ja
das
pop
outsl
inc
hlt
in
jmp
fists
lcall
dec
sahf
repz
test
jbe
ja
mov
out
dec
jae
or
ds
pop
sbb
scas
mov
dec
js
jecxz
push
cwtl
xchg
fsubl
mov
sub
push
out
ja
jp
jne
loop
fwait
dec
movsl
test
push
xor
nop
shrl
xchg
push
pop
lods
add
repnz
or
addr16
push
inc
out
into
inc
sar
xchg
cmp
shll
and
mov
fbld
xor
test
inc
push
lret
push
fisttpl
xlat
sbb
leave
lods
add
shlb
push
push
xlat
adc
nop
es
jae
or
int3
jne
pop
and
and
jnp
shrb
cmp
jb
pop
fwait
xchg
sub
aam
push
sub
out
mov
sub
mov
and
shrb
sarb
jge
in
pushf
and
inc
sarb
xlat
inc
in
dec
das
mov
fdivs
sub
shlb
xchg
andl
fdivr
xor
stc
dec
adc
pop
mov
movsl
popa
iret
xchg
sbb
add
inc
push
in
pop
ja
mov
dec
mov
cmpsl
jno
sti
inc
cmpsl
xorb
inc
scas
push
in
adcl
outsb
jl
pushf
into
jle
popa
jno
adc
jb
sbb
pop
mov
dec
shlb
mov
or
adc
and
dec
sub
jnp
sbb
sub
or
gs
add
mov
aaa
aas
jns
mov
push
hlt
push
cmc
jns
stos
add
popl
out
addr16
mov
or
jno
lods
shll
in
fcomps
lods
cmp
add
mov
adc
decl
shll
sbb
call
xchg
sub
adc
jnp
fcmovnbe
dec
lret
inc
xor
and
insl
sbb
or
call
and
test
test
cltd
sub
xchg
xchg
int
mov
jp
aam
inc
xchg
cmp
and
pop
aaa
mov
add
dec
ret
sbb
sti
je
jl
inc
xor
stos
dec
lret
cmpsb
std
movsb
fwait
inc
es
loope
ds
jecxz
lret
sbb
dec
popf
pop
std
sub
popa
adc
pop
inc
fistpl
aas
push
cld
dec
jb
add
add
cwtl
mov
bound
pop
popf
or
icebp
enter
add
inc
xchg
fldlg2
in
or
or
mov
inc
mov
jmp
jnp
insb
movsb
mov
addl
rorb
push
and
push
fwait
movsb
jg
xchg
cmp
or
dec
dec
jne
mov
cmp
xchg
movsb
fs
push
enter
add
mov
repz
int3
jnp
xor
mov
sahf
rolb
xor
stc
hlt
jp
push
jbe
loop
jle
fsubp
mov
adc
in
sub
adc
mov
jmp
and
js
popa
jae
insl
in
ds
and
dec
mov
daa
pop
push
mov
std
push
loope
cmpsl
mov
jge
dec
add
or
xor
mov
shll
daa
pop
arpl
decl
roll
lock
or
sbb
jns
cmp
imul
xor
aas
bound
pop
shrl
sub
fidivl
js
in
shl
pop
stos
inc
jnp
stc
sbb
loop
dec
pop
sbbb
lea
negl
inc
sahf
fwait
xchg
pushl
inc
mov
test
xchg
sub
inc
jg
push
xor
aaa
sbb
fdivs
add
xchg
test
xorb
sub
sbb
loopne
sbb
ja
sub
popf
xor
nop
jbe
jmp
test
into
jmp
scas
aas
or
adc
movsb
sbb
cs
jbe
inc
cmp
out
test
stos
and
sbb
or
in
lock
push
in
loope
ss
cmp
xor
fistpll
test
fldenv
pushf
inc
fcomi
loop
fisubs
scas
js
and
mov
outsl
pop
inc
cmpl
push
mov
or
and
push
lcall
outsl
mov
lret
daa
dec
mov
out
hlt
or
rorl
daa
imul
imul
jecxz
fdivrl
dec
pushf
outsl
repz
add
cmp
fwait
xor
jg
adc
imul
pushf
jnp
adc
pusha
dec
fisttpl
cs
shlb
cltd
cmp
push
xor
dec
adc
mov
pop
sbb
cmpb
sbb
push
addr16
pop
sbb
xlat
scas
gs
mov
push
add
fwait
aam
add
imul
adc
dec
jmp
loope
cmp
add
movsl
rol
mov
imul
mov
stos
lods
and
xor
xor
int
mov
or
adc
ljmp
mov
jb
aaa
stos
dec
mov
push
cmpsb
or
mov
xchg
or
and
adc
xlat
lods
sub
in
je
xor
dec
mov
jne
enter
stc
fsincos
leave
xor
imul
adc
sbb
lret
xor
jno
pop
cmp
cmp
dec
in
add
mov
adc
jo
call
adc
jb
aam
and
je
je
dec
sbb
mov
lret
fwait
mov
pop
pop
xor
in
repnz
outsb
mov
xlat
jb
insl
clc
sbb
xor
jl
scas
cmpl
jp
cmpb
out
enter
push
cmp
mov
jge
rorl
jle
sbb
pop
imul
clc
nop
jg
sub
call
cmp
ret
xchg
jmp
or
mov
std
jo
mov
inc
jl
pop
addr16
test
jns
xlat
popf
cmpsb
cwtl
adc
jg
es
xor
sbb
sbb
addb
add
inc
sbb
and
sbb
jne
lock
xor
push
aad
scas
mov
jecxz
pop
loope
call
mov
into
mov
into
mov
and
movsl
test
jae
jno
iret
xchg
les
jp
cli
xchg
lahf
xchg
or
les
hlt
shll
int3
add
and
in
jo
in
xchg
and
enter
outsb
out
adc
popa
andl
mov
repz
nop
imulb
std
sti
push
sbb
clc
xchg
adc
hlt
sahf
jmp
xchg
xorb
push
and
cmp
adc
fcom
mov
mov
lcall
call
es
and
cld
lahf
sbb
popf
sub
les
mov
sub
jno
adc
daa
les
fsubrs
or
outsb
sarb
xor
jae
cmc
lods
inc
dec
cmp
mov
mov
sub
fsubrl
mov
enter
adc
cltd
popa
jle
addl
fwait
lcall
shrb
stos
jmp
inc
jmp
sub
aaa
dec
jb
push
lret
ret
dec
in
out
jle
adc
sub
scas
test
jns
aad
ds
inc
or
test
mov
rcr
jmp
adc
mov
inc
sub
add
adc
jl
jb
jle
jmp
popf
ret
fcmovnu
sbb
out
sbb
adcb
roll
js
xor
add
and
add
sub
shrl
sub
pop
rclb
push
das
pop
cmc
jb
and
cmp
ret
or
sbb
dec
add
fidivs
lds
mov
pusha
sub
js
testb
lea
shll
mov
sbb
xchg
xor
stos
and
and
aam
jns
cmp
xchg
dec
in
pusha
in
sub
aas
arpl
nop
sub
push
inc
scas
adc
add
lcall
and
ficoms
mov
test
je
test
push
mov
outsb
ret
stos
push
add
pop
fstpl
sbb
add
loope
js
sbb
das
xor
sub
xor
xchg
push
iret
hlt
ss
push
clc
in
push
je
dec
ja
mov
sbb
int
mov
out
mov
fcoms
rclb
push
or
movd
test
push
push
cld
lcall
pop
push
xor
loop
leave
mov
xchg
test
stos
sbb
idivl
sarb
ja
ss
inc
mov
adcb
fdivrp
fisubrl
xchg
jecxz
loope
mov
imul
outsl
push
daa
dec
dec
pop
push
fnstcw
and
cs
in
pop
mov
push
negl
aas
and
shrl
in
cld
enter
jno
cltd
mov
psllq
push
adc
pop
jle
lret
insb
lock
inc
jb
out
sub
sbb
cmp
cld
pop
in
enter
in
pusha
mov
ret
dec
cmp
xchg
jbe
imul
sub
stos
rcr
imul
addb
push
int
push
jp
jns
aam
sahf
jl
pop
push
xchg
xor
aam
xchg
push
xchg
lcall
jae
ljmp
aas
dec
dec
push
ror
mov
psraw
daa
pushf
jmp
les
cmp
mov
inc
jecxz
pop
fadds
femms
fidivs
dec
popf
pop
xor
inc
cmp
movsb
subl
inc
mov
fwait
adc
jecxz
cmp
cmpsl
movsb
aad
fdivl
fcmovbe
js
shl
in
adc
or
cmp
and
pop
test
cltd
cmpl
push
mov
mov
jg
dec
cmpsb
or
shll
nop
push
leave
cmp
dec
lret
in
ret
in
push
test
or
ljmp
push
pop
stos
ss
push
jbe
mov
pop
fldcw
push
lock
mov
daa
jae
stos
mov
daa
in
imul
dec
rclb
xchg
fwait
cld
xor
cmpsb
loope
cmp
subb
push
xor
mov
in
push
rcrb
inc
out
pop
loope
fs
and
aas
and
sub
xchg
mov
add
cli
adc
mov
pop
xor
xlat
cmpsl
outsb
movl
aas
aaa
aaa
jnp
jnp
jmp
add
jae
stos
sbb
xor
add
cmpsb
push
cmp
mov
mov
cltd
xor
test
test
mov
add
push
pop
inc
mov
push
or
sub
es
fs
imul
pop
cmpsb
mov
and
add
fs
sub
push
into
jmp
fcoms
rcrl
lret
cs
add
sbb
lea
in
mov
fwait
imul
jg
arpl
inc
adc
repnz
dec
adc
outsl
flds
cmpsl
pop
ret
clc
adc
mov
cmpsl
jmp
lock
and
icebp
enter
dec
xor
mov
mov
cmc
mov
rorb
bound
jo
dec
in
sarb
pop
clc
mov
fstpt
lds
in
lea
je
mov
fwait
inc
push
iret
jno
and
xchg
and
jle
fnstcw
push
push
arpl
mov
jp
pop
sahf
jmp
and
les
sbb
mov
hlt
pop
stos
cltd
push
in
jae
adc
xor
push
push
and
pop
mov
enter
ljmp
push
js
repnz
in
fwait
andb
xor
nop
leave
in
fistpl
in
push
and
clc
dec
int3
arpl
fidivrl
push
mov
and
sbb
arpl
push
xor
shlb
adc
fildl
or
jno
lea
mov
insl
xor
test
xchg
push
aam
pop
int3
getsec
out
inc
data16
nop
pop
pop
mov
mov
mov
sub
add
or
push
adc
xor
push
mov
cmp
cmp
jg
enter
mov
or
insb
xor
outsl
pop
lea
sub
xor
push
js
test
sahf
scas
daa
mov
js
lods
nop
sbb
push
xchg
call
and
ror
adc
shlb
and
popf
pop
in
in
in
push
std
ret
push
outsl
push
loop
dec
ficompl
mov
pop
div
mov
adc
cmc
jo
lcall
imul
adc
scas
subl
sub
int3
push
push
adc
mov
fcoml
in
lret
fs
adc
xchg
outsb
lods
cmp
repz
lret
push
mov
mov
sarl
outsb
js
xor
fldenv
adc
cmc
aaa
sarl
aaa
lahf
dec
in
or
xor
mov
and
pushf
gs
lcall
xchg
cmp
jbe
xchg
popf
das
or
sarl
xchg
xchg
inc
lods
xorb
repnz
or
inc
inc
adc
sbb
fcmovnbe
lret
cmp
je
roll
out
push
xlat
sub
xchg
cld
pop
cmp
lds
jmp
fs
arpl
mov
aad
out
xchg
mov
or
xchg
shr
shrb
pop
ljmp
andb
fsubp
push
xchg
push
cmp
int
int
jp
loope
fnstenv
repz
ja
aaa
shll
sub
clc
enter
xchg
mov
leave
push
push
test
fs
mov
inc
fstl
cld
fists
add
dec
sbb
inc
and
popa
or
xor
lods
mov
mov
push
inc
stos
idivl
int3
xor
xchg
popf
fs
dec
and
fcompl
insb
fisttpll
dec
or
or
sahf
or
push
dec
negl
mov
popa
jmp
out
mov
mov
sbb
addr16
movsb
cmpsl
sbb
pop
test
mov
mov
sbb
std
mov
push
or
mov
das
inc
mov
jbe
xor
jne
iret
insl
mov
mov
or
add
inc
add
mov
or
pop
sub
outsl
je
jp
cmp
xor
add
and
cwtl
push
mov
push
loop
insl
pop
xchg
aam
arpl
cmp
negb
rcrl
test
jmp
pop
cmp
std
adc
lock
push
aas
add
outsb
sbb
lret
push
and
cmpsl
xor
add
mov
pushf
mov
leave
xchg
and
movsb
mov
loope
dec
test
cmp
popa
test
sub
loop
in
pop
roll
push
jnp,pn
fnstcw
rcrb
insl
xor
fstl
dec
stc
adc
or
aaa
lds
cli
std
cs
xchg
pop
pop
mov
test
hlt
xchg
imul
movb
push
mov
movsb
repnz
xor
jne
dec
cli
data16
leave
mov
pop
xor
ljmp
insb
adc
add
jmp
ljmp
sub
pushf
push
sarl
sarl
cld
jnp
pop
mov
jg
sti
or
pop
aas
repnz
rep
push
jb
and
out
fisubl
pushf
xor
cmp
mov
lds
fs
pop
xor
xchg
scas
loope
xchg
pop
fldcw
lcall
outsl
push
xchg
mov
movsb
fisttpll
jno
jnp
loop
push
sub
gs
dec
pop
jae
push
clc
inc
sub
jns
xlat
sbb
pop
sub
adc
xor
mov
xor
repnz
cmc
clc
dec
movsl
cmp
adc
push
add
pop
sbb
sub
adc
jp
jmp
push
pushw
out
dec
pop
cld
repnz
pushf
inc
shll
and
mov
inc
loop
or
push
add
adcl
bound
cmp
adc
cmpsb
js
fisttpll
push
mov
scas
outsl
cli
jmp
cwtl
push
mov
jno
pop
incl
loop
dec
nop
fimull
movsl
ret
inc
and
xchg
push
or
fists
xchg
or
fld
jo
add
bound
addl
movsb
test
addl
pop
sub
insl
pop
std
add
lock
imul
pop
mov
popf
xchg
sub
movsl
lret
test
add
cmp
dec
stos
jbe
dec
mov
or
sub
sbb
push
cmpsb
ret
lcall
icebp
les
mov
push
xor
bound
mov
rol
addr16
dec
adc
stos
inc
daa
jle
dec
stos
fistps
in
sub
sub
test
cmp
insb
scas
xor
dec
sbb
xchg
xchg
sbb
jno
dec
es
inc
xor
in
orb
dec
cmp
cli
push
addb
sti
xor
cld
xchg
xorps
cmc
ret
notb
sub
xchg
test
pop
jle
push
add
push
outsl
and
fsubrl
push
xor
cli
mov
fadds
push
inc
mov
mov
testb
push
mov
or
xor
mov
add
out
mov
mov
pop
popa
test
jns
mov
add
insl
jp
sub
push
rcrl
aam
inc
test
icebp
stos
cmp
pop
fstp
sbb
ret
js
in
sub
pop
jecxz
lcall
push
sbb
mov
cld
push
insb
jbe
insb
daa
out
std
or
dec
mov
jg
outsl
and
or
sbb
out
xchg
xchg
js
lods
xlat
adcl
jbe
ficomps
out
loop
push
sbb
xchg
into
divb
xchg
pop
aam
jbe
xchg
inc
mov
pop
ljmp
mov
insl
or
sub
test
int
xchg
push
xor
inc
clc
fimuls
shlb
addr16
xchg
pushf
mov
jge
and
popa
repz
xor
xor
xor
xchg
mov
fbld
pop
aad
mov
pop
insl
or
out
stos
or
cmp
cmp
dec
adc
leave
icebp
jns
dec
lret
sub
xchg
popa
lcall
fsub
fsubr
jp
punpckhdq
sub
adc
scas
aam
das
xchg
jmp
ds
mov
jns
mov
and
or
sub
fcoml
lods
mov
callw
or
lret
pop
cmc
insl
notl
jp
lahf
mov
and
pop
js
cmpsb
outsb
and
icebp
adc
mov
cmpsb
jb
pop
add
pop
mov
pop
jno
mov
push
adc
xchg
cmp
pop
fiaddl
imul
lock
mov
pushf
mov
push
int3
aad
in
out
into
push
pop
push
sbb
dec
and
cli
pushf
dec
xchg
outsb
inc
fs
faddp
mov
cmp
inc
movsb
pop
xchg
pop
andb
int
fdivr
xchg
std
mov
shrb
fneni(8087
inc
in
lcall
dec
pop
pop
or
xchg
ja
mov
repz
sti
scas
lds
mov
xchg
pop
mov
test
pop
inc
rcll
jmp
jmp
mov
jle
push
xchg
or
std
xchg
jns
test
stc
out
nop
mov
add
mov
test
cwtl
dec
mov
aam
push
mov
loopne
das
and
rcr
xchg
xor
adc
mov
les
pop
push
imul
or
push
push
and
subb
out
ja
int
subl
mov
push
pop
xor
mov
notl
and
into
inc
pop
push
lods
rol
lock
imul
jge
adc
gs
je
lods
stc
out
test
cmp
add
adc
fstpt
xchg
mov
movsb
into
std
add
das
xchg
cmp
push
scas
mov
push
jb
mov
mov
pushf
push
push
in
insl
pop
loopne
and
mov
aas
arpl
cmpsl
and
pop
scas
adc
mov
mov
test
jns
sub
xchg
fimuls
jns
mov
push
jnp
dec
rol
jecxz
fwait
test
test
jle
sbb
dec
ret
sub
mov
shll
add
lret
addr16
xor
mov
jp
je
adc
jb
lods
loope
sahf
aam
cmpsb
sbb
mov
jno
bswap
ljmp
push
stos
jbe
inc
jnp
or
pop
rorl
loopne
pop
push
mov
imul
movsb
mov
sarb
jge
push
push
in
jnp
sahf
lahf
aad
fisttpl
push
fstl
lea
pop
in
ja
mov
sub
xchg
dec
push
mov
inc
into
out
mov
movsl
lcall
hlt
mov
in
dec
xchg
sbb
lcall
push
pop
sub
insb
jecxz
loopne
insl
ss
xor
movsb
in
dec
pop
push
jo
test
in
ret
jbe
mov
test
push
pop
roll
jp
out
stos
and
jnp
aas
jecxz
lods
mov
xabort
and
les
rcrb
fwait
mov
inc
pop
xor
jl
xchg
jae
jecxz
ja
xchg
cmp
shrb
pop
icebp
lods
ret
sarb
push
andl
ficoms
lret
xorl
das
fcmove
movsl
dec
aaa
mov
nop
or
into
xchg
push
xchg
stc
dec
jbe
xchg
loopne
movsl
in
stos
pop
jno
je
xchg
stos
xorl
push
imul
addl
call
xor
ret
and
sub
sub
int
mov
xchg
leave
and
into
repz
dec
test
bound
push
flds
insl
movsl
xchg
push
lret
inc
sub
cmp
repz
sbb
push
test
jno
or
cmp
sti
dec
cmp
mov
pusha
mov
mov
filds
cmp
out
dec
imul
movsl
data16
pop
adc
lcall
sub
inc
xor
pop
push
stc
leave
ds
pop
cmp
das
push
adcl
push
and
in
jae
into
adc
xchg
mov
xorb
sbbb
push
push
out
arpl
stos
inc
and
mov
xlat
ljmp
cmp
rorb
test
sbb
out
dec
sub
add
enter
test
loopne
leave
xchg
sub
lods
iret
cmp
loopne
xchg
repz
jg
add
fbld
sub
out
and
push
adc
mov
sbb
pop
ljmp
jmp
repz
adc
stc
adcb
mov
shr
adc
dec
int3
pop
loopne
and
clc
jge
loopne
lahf
lods
loopne
test
outsl
and
or
and
fcoms
xchg
ret
mov
nop
pusha
gs
fiaddl
mov
das
idivl
icebp
mov
xchg
inc
add
pop
mov
test
push
mov
jo
xchg
dec
daa
les
popf
movsb
mov
std
sahf
cmpsb
lret
sub
mov
pop
xor
push
stc
cld
out
add
sub
ficoms
sbb
mov
fwait
ljmp
mov
fcmovnb
test
and
mov
mov
jp
aad
pushf
stc
dec
xor
cmp
negb
lret
cmp
daa
mov
push
outsb
loope
pop
cmp
cmp
push
sub
mov
cmp
sub
push
es
mov
call
mov
cmp
cmp
test
sbb
jbe
bound
mov
push
xchg
iret
ja
mov
cmp
int3
xchg
mov
stos
aas
addb
adc
xor
xchg
or
mov
ljmp
or
push
and
dec
jl
mov
sbb
insl
fbld
inc
and
mov
pop
add
push
int3
adc
aaa
aam
dec
pop
jp
mov
adc
ficoml
pop
ret
mov
sbb
ds
or
daa
push
pop
dec
cmp
dec
xor
dec
imul
jecxz
sbb
bound
push
or
adc
pop
and
inc
hlt
push
loop
aaa
jecxz
sbb
mov
das
fldenv
mov
outsb
int3
pop
sub
and
rcrl
xor
or
std
es
mov
cmp
dec
lret
jge
pop
sub
push
adc
cld
push
jg
cli
jle
out
sbb
jno
bound
cmp
mov
scas
jp
mov
fimuls
leave
cmp
xchg
xor
sub
and
mov
arpl
repz
xor
insl
mov
jns
mov
loope
shlb
out
xor
int3
pop
int3
movsb
inc
add
pusha
mov
pusha
cli
mov
jp
dec
outsl
push
adc
pusha
or
cmc
inc
or
out
loop
or
and
mov
dec
out
shrl
jge
jl
xor
mov
inc
or
inc
mov
inc
mov
lock
inc
mov
and
xlat
mov
sub
ret
push
jns
sbb
lcall
mov
movsl
and
jae
mov
leave
pop
outsb
in
jo
fsts
cmpsb
pop
std
pushf
push
jg
or
lods
dec
xor
jmp
bound
push
jae
push
push
outsl
ss
and
pushf
scas
sbb
sub
loope
stos
popl
mov
jne
mov
lret
add
popa
out
xchg
inc
testl
aaa
xchg
mov
cmc
cmpsb
xchg
add
cmp
xchg
xor
pop
inc
jl
out
mov
xor
adc
bound
push
into
test
sub
mov
or
xchg
mov
mov
inc
leave
mov
mov
pop
or
outsl
lods
in
outsb
dec
insl
dec
jne
adc
pop
cmp
in
mov
bound
insb
ljmp
mov
int3
inc
stos
mov
and
mov
xor
daa
nop
jp
js
data16
out
aam
fmulp
cmp
mov
adc
jl
add
mov
jge
adc
das
sti
or
call
add
fldenv
sahf
sub
je
imul
or
jbe
jl
push
lods
fildl
ja
notl
xchg
ds
add
pop
insb
push
loopne
ret
mov
jecxz
adc
shll
je
jle
aad
daa
jmp
scas
xchg
or
sbb
loope
cmc
jno
mov
pushf
stos
arpl
aaa
or
or
arpl
adc
pop
xchg
mov
pushf
enter
xlat
pop
xor
xor
dec
mov
cmp
daa
add
sbb
push
inc
dec
ret
mull
push
inc
flds
xchg
cmp
jmp
imul
cmp
jo
inc
adc
ret
xchg
imul
and
int
cld
cmp
lds
les
mov
testb
add
inc
push
inc
pop
sbb
sti
cmp
xor
sub
xchg
pop
leave
fimull
and
outsb
sub
jno
jecxz
stos
bound
push
hlt
pusha
jmp
xchg
mov
mov
mov
dec
jg
mov
add
pusha
inc
mov
jmp
in
shl
test
sub
data16
sub
xor
xor
outsb
icebp
addr16
mov
js
mov
dec
mov
sub
sbb
cwtl
lcall
fwait
cwtl
into
push
inc
add
idiv
lock
lret
mov
jb
mov
scas
add
mov
jp
mov
mov
mov
sub
mov
imul
lahf
xor
sub
dec
push
cmp
xor
xchg
sbb
into
jp
pop
mov
scas
push
insl
scas
aaa
mov
inc
lahf
push
xchg
daa
gs
pop
push
rorl
stos
iret
test
fists
daa
or
xor
and
aas
sub
cmp
mov
sbb
fwait
jp
cs
and
iret
xlat
inc
out
push
gs
leave
movl
fisubl
ss
movsl
mov
arpl
cmp
xchg
jge
or
xchg
xorb
push
or
add
cmpsb
mov
mov
mov
bound
dec
xchg
sub
movsl
lea
sbb
adc
sub
xchg
and
jb
xlat
xchg
mov
lods
pop
sbb
andb
xchg
out
daa
jle
xor
dec
xor
xor
or
mull
gs
jmp
daa
fisubs
repz
in
sbbl
aaa
lret
jo
pop
cmpsb
inc
fstpt
popa
mov
inc
mov
mov
arpl
cmp
sub
and
cmp
icebp
sub
iret
hlt
cmp
xchg
mov
fmul
in
mov
xchg
dec
ficoms
sub
pop
jg
cs
sub
call
cmpsl
mov
mov
out
rorb
test
stos
mov
or
mov
into
imul
dec
push
in
iret
inc
js
in
cmp
lods
loopne
push
cmp
cs
in
arpl
push
mov
sbb
mov
mov
mov
xor
repz
xchg
call
idivl
adc
or
jg
cwtl
mov
mov
xchg
icebp
push
sub
leave
lahf
fdivl
adc
cmp
movsb
int
push
insb
andb
test
in
mov
sti
hlt
into
add
std
pop
inc
jno
outsb
popf
mov
cli
cmpsb
sbb
mov
dec
ss
mov
test
adc
ss
js
lock
sbb
pop
xor
outsl
adc
sahf
scas
mov
aad
mov
or
loopne
sub
std
sub
sub
push
cld
imul
cmc
xchg
xchg
xorb
je
test
in
add
push
daa
je
roll
or
jl
in
cltd
gs
sub
mov
fldt
mov
cwtl
pop
mov
inc
and
lds
add
jp
cmp
xchg
mov
out
push
popl
pop
cmp
in
cmp
ret
mov
and
add
push
repnz
gs
mov
adc
xchg
int3
xchg
jno
lods
jo
ljmp
mov
gs
and
test
std
sub
aad
and
scas
add
sub
icebp
adc
notb
sbb
movsb
adc
and
mov
add
sub
add
pop
leave
jb
stos
and
out
mov
mov
shll
push
call
adc
cmpsl
aas
xchg
cmp
jno
pop
fistl
fidivrl
push
mov
xor
jno
mov
mov
cmpsb
xor
lahf
push
scas
sub
pop
mov
fucomi
mov
or
and
cmp
xchg
fwait
mov
shl
mov
mov
xchg
sbb
es
gs
outsb
repnz
int
mov
xchg
or
mov
sub
sbb
jns
add
pop
jae
andb
ret
movsb
sti
pop
shrb
dec
xchg
or
in
inc
test
aam
xor
push
fs
in
mov
cmpsl
outsb
ret
rolb
sub
jns
and
xchg
iret
sub
addr16
sub
xchg
arpl
rcrl
int3
out
out
popa
test
or
jnp
mov
into
sahf
xor
dec
leave
xor
xor
and
and
xchg
and
cmc
jecxz
sbb
cld
add
cmp
dec
into
inc
jmp
sub
addr16
pop
jne
or
xlat
sbbb
sbb
push
popf
test
sbb
fisttpll
ss
add
inc
clc
fstpl
cltd
pop
popf
shlb
pusha
mov
call
pushf
inc
ds
out
inc
jecxz
sbb
fsts
adc
mov
add
xor
scas
imul
sbb
or
sub
jbe
pop
popf
or
jg
out
test
xor
sub
scas
mov
call
mov
shl
ret
adc
jg
mov
arpl
pop
inc
jmp
mov
scas
sub
lds
shlb
fmul
push
and
mov
es
clc
mov
inc
xchg
xlat
bound
in
lods
and
das
and
and
adc
mov
repz
es
int3
std
dec
out
sub
cmp
mov
fs
andb
aas
xor
and
pop
mov
lret
stc
ret
scas
mov
sub
mov
push
inc
aad
dec
clc
pop
push
mov
push
xor
popa
push
in
xchg
jbe
sbb
mov
lea
incl
and
pop
and
insl
cmp
popw
lahf
xchg
pop
out
mov
xor
adc
dec
sbb
or
pmaxub
test
jge
xor
cmc
sbb
sbb
rcll
mov
jo
and
cmpb
cld
dec
sbb
xor
add
pop
or
ret
dec
ficomps
test
test
pop
push
xor
push
jnp
mov
lds
faddl
add
dec
hlt
test
and
jle
cmpsl
xchg
dec
add
imul
stos
mov
imul
ret
mov
les
scas
pop
loope
and
pop
repz
popa
jno
lahf
mov
mov
cmp
aam
imul
fcmovu
into
push
inc
add
xlat
cs
jo
xchg
pop
and
dec
out
lods
mov
test
cmp
pop
imul
and
ret
mov
insb
add
in
mov
dec
pusha
mov
cmpsl
pop
cltd
mov
out
stc
sti
jl
pop
ss
sub
lahf
push
add
sbb
and
je
fprem
jmp
sbb
pop
xor
xchg
mov
fsubp
lds
xor
adc
out
arpl
jae
es
mov
mov
cmp
pop
into
sub
fsubp
xor
movsl
xchg
cmp
jns
sbbb
je
loope
add
repnz
mov
mov
cmc
movsl
xor
or
addr16
repz
push
aas
xor
or
icebp
fdivrs
int3
imull
movsl
cmc
cwtl
push
rclb
sub
pop
ds
outsl
and
cmp
out
adc
mov
push
int3
mov
loope
scas
loope
sbb
sbb
pop
mulb
outsb
shll
sbb
imull
sbb
insl
mov
pop
out
lock
int
and
out
cmp
and
mov
sbb
sbb
jo
mov
cld
jne
pop
push
push
push
shl
bound
fistpll
loope
push
xor
mov
dec
sarb
mov
push
out
icebp
jmp
nop
loop
cmp
pop
data16
outsb
cmpsb
cmp
aas
mov
xchg
mov
repz
repz
call
jo
mov
ja
dec
xchg
ja
jge
dec
jle
test
jecxz
add
sub
mov
cmpsl
push
lcall
xor
bound
loope
cmp
jg
pop
mov
jbe
mov
aam
and
mov
pop
jmp
int3
cmp
push
and
fistps
inc
jg
inc
dec
ds
call
cmp
notb
loopne
movsb
mov
jbe
sti
out
push
and
jb
sbbl
xor
test
push
mov
lcall
sub
and
in
ljmp
into
cwtl
pop
jmp
dec
mull
das
hlt
adc
addb
cmp
and
inc
out
cwtl
andb
xor
adc
mov
or
pop
out
pop
ljmp
pop
push
jb
int
test
add
aad
add
pop
lea
inc
loope
adc
add
cld
dec
lea
cmp
push
sub
int3
cmp
test
add
xchg
inc
jl
or
rclb
xchg
fsubrl
ja
sub
jno
outsl
or
dec
and
jnp
xor
popa
test
xor
cmp
rorl
lret
mov
mov
lea
int3
add
scas
cmp
push
push
iret
movsb
fnstsw
pop
mov
mov
lcall
call
or
inc
and
sti
fistl
outsb
addr16
xor
lcall
fiaddl
cli
push
int
movsb
mov
mov
hlt
sbb
xchg
pop
or
cwtl
pop
rcl
add
inc
insl
pop
sub
mov
sbb
pop
cmp
push
mov
inc
jg
push
dec
fwait
lea
xchg
push
jle
pop
cmp
sub
stc
inc
aas
xchg
push
repnz
scas
add
mov
pop
insb
pop
fildll
or
enter
sub
arpl
add
addr16
cmp
sarl
mov
cmp
aad
cld
dec
movl
stos
int3
rclb
outsl
add
int3
push
nop
mov
mov
lods
mov
add
mov
ret
lock
inc
sbb
sub
add
mov
sub
sbb
jo
mov
pop
test
push
adcl
adc
mov
add
mov
jle
inc
push
push
testb
push
les
xchg
mov
adc
out
popa
xchg
ss
sub
roll
dec
jnp
cmp
scas
dec
dec
add
mov
add
xor
xchg
xor
aas
xchg
insb
popf
xchg
loop
lret
pop
fs
push
sbb
in
sub
cmpsb
xchg
mov
ja
call
rorl
mov
inc
int3
scas
dec
loope
or
fnsave
into
inc
and
outsl
sbb
sbb
or
call
adcl
jge
xlat
fisubrs
dec
mov
cmp
pop
pop
xor
pushf
fcmovne
ja
mov
fs
arpl
dec
add
jl
lock
bound
popf
push
lret
ljmp
or
stos
jp
jge
bound
push
popa
xchg
mov
rcr
ret
sub
cmp
push
leave
popa
movb
mov
fidivs
insb
aas
adc
clc
pop
xchg
inc
ret
idivb
adc
sbb
inc
outsl
les
testl
mov
mov
cltd
xor
xlat
xchg
fwait
jmp
pushf
out
lret
in
mov
adc
mov
mov
mov
orb
shl
repnz
cwtl
arpl
movsl
lret
push
pop
fcompl
xor
es
scas
xchg
push
sub
stc
jno
pop
call
jg
xlat
mov
lret
sti
arpl
pop
js
xor
mov
fs
jae
sbb
std
data16
stc
rcr
outsb
sub
stos
mov
push
call
out
xchg
mov
adc
popf
add
lret
sbb
mov
or
ja
scas
xchg
inc
sahf
adcl
xor
and
lahf
pop
mov
ss
sub
add
push
jge
jmp
imul
call
push
je
pop
test
pop
inc
es
aad
dec
ficompl
mov
add
andl
call
in
pop
mov
cmp
out
mov
mov
int
jg
jne
dec
or
jl
adc
mov
xor
daa
jae
popa
test
dec
pop
cmp
fisttpll
jp
aad
pop
mov
addr16
jl
fstl
cmp
js
cmp
fstpt
push
sub
out
cmpsl
pop
xchg
xchg
insb
and
mov
mov
adc
sub
popf
mov
and
into
icebp
inc
div
loopne
icebp
xor
mov
jl
enter
dec
dec
comiss
inc
cmp
lds
xor
enter
out
mov
fcompl
jb
push
dec
testb
lret
fisttpl
lret
xchg
add
loope
mov
adc
push
negl
push
scas
add
mov
hlt
mov
imul
push
stos
fimuls
xchg
incl
mov
das
inc
or
xor
sbb
in
popl
jbe
loopne
scas
xchg
fisttpl
ss
cmp
loopne
cmp
mov
stc
xor
lods
int
in
mov
mov
insl
mov
lods
loop
xchg
rcrb
and
fs
xchg
pop
jbe
push
dec
push
scas
push
jb
cmp
mov
push
addr16
sub
push
adc
sub
mov
js
pop
test
mov
mov
pop
repz
repz
push
inc
dec
sub
mov
mov
fnsave
jns
jecxz
repz
fsubrs
adcb
cmp
insl
lock
push
repz
int3
leave
mov
push
fcomps
push
insl
loop
lods
jecxz
addl
sbb
and
jns
jp
mov
pusha
popf
and
daa
mov
pop
sbb
mov
shll
aam
and
out
dec
iret
pop
fdivr
rcl
jns
rcrb
out
fildl
pop
jnp
ljmp
cs
ret
scas
and
cld
cli
cltd
out
and
out
xor
jle
sbb
mull
inc
adc
repnz
and
and
pop
ljmp
cwtl
cli
gs
hlt
std
leave
cmc
cmp
adc
int3
adc
jnp
arpl
jno
aad
cmc
fdivrp
dec
hlt
daa
lock
mov
xchg
sub
pushf
frstor
fbld
fdivr
adc
repz
push
sbb
and
loope
std
scas
out
mov
ds
and
adcl
stc
and
pop
repnz
fidivrs
in
clc
std
lds
adc
aas
sub
bound
inc
mov
shrb
stc
and
pop
loopne
inc
out
bound
pop
sbbl
movsl
sti
sbb
cli
dec
adc
inc
icebp
xor
jmp
inc
push
mov
push
xor
faddl
mov
dec
cmpsl
jb
or
outsl
cmp
and
fistl
adc
adc
mov
mov
jno
ss
scas
movsl
inc
nop
mov
jg
sub
out
or
xor
repz
sbb
sahf
mov
mov
ret
les
gs
mov
xlat
fldl
rcrb
mov
add
mov
unpckhps
mov
fsubrs
mov
jle
jmp
push
jmp
fistps
fcmovnu
loope
add
sbb
and
or
push
sub
jno
sub
mov
dec
gs
push
add
xor
add
jg
imul
insl
das
cltd
and
pop
clc
xor
sbb
jb
mov
daa
test
aam
icebp
add
xchg
add
cmp
je
inc
mov
movsl
xlat
outsb
es
test
inc
mov
fwait
sub
clc
lock
insl
loopne
in
or
add
push
mov
jle
int
in
dec
ret
into
cmc
cmp
pop
add
test
xor
xchg
es
sub
in
and
sarl
scas
roll
scas
and
int
inc
in
lods
push
jne
call
sub
inc
mov
or
aam
jp
mov
cmc
push
add
pop
jl
cmpsl
inc
mov
outsl
adc
ret
arpl
cmpsb
in
shlb
mov
inc
shlb
inc
cli
shlb
test
mov
rcrb
pop
test
das
pop
xor
imul
in
push
movlps
fwait
push
add
pushf
mov
push
xchg
pop
in
dec
add
daa
dec
shl
out
cmp
mov
lret
dec
iret
arpl
or
outsb
add
int3
xor
test
sti
jmp
repz
inc
dec
sahf
lcall
icebp
rorb
adc
dec
out
and
jl
daa
gs
sbb
ficoms
das
ret
knotw
ss
and
ffree
ret
and
push
lock
jp
dec
dec
jg
cmpsb
shll
dec
adc
aam
lahf
sub
push
add
bound
pop
cld
out
out
pop
xor
popa
jns
fistl
mov
jo
iret
ret
pop
movb
xchg
xor
add
fwait
push
and
addr16
xor
jg
mov
sti
jno
sub
add
ret
xchg
xchg
out
call
mov
mov
xor
sarl
dec
push
cmp
cmpsb
add
shrl
fiaddl
cmc
js
lcall
cs
dec
push
lods
inc
adc
test
inc
cltd
cmp
outsl
sbb
pop
and
xchg
arpl
out
nop
cld
jmp
mov
sub
jg
dec
fldenv
je
adc
fdivrs
dec
clc
divb
ljmp
add
mov
fcoms
leave
in
fsubr
cmc
aaa
stc
scas
sub
sub
fs
in
sub
iret
flds
or
jg
inc
stc
arpl
xor
pusha
mov
ret
scas
jecxz
add
out
out
rorl
testl
or
dec
arpl
or
decl
and
push
aam
xchg
fiaddl
jge
adc
fistps
sahf
outsl
sbbl
sbb
dec
cltd
clc
mov
xor
in
stc
loopne
jb
js
push
jbe
addr16
aas
mov
inc
subb
cmpsl
aaa
in
test
or
jae
les
imul
repnz
insl
out
out
xchg
push
lock
adc
gs
in
sbb
or
icebp
push
subl
sbb
insl
mov
repz
xor
enter
shll
in
mov
seto
stos
inc
test
movsb
ds
sub
aam
ret
jge
jne
sub
clc
adc
jmp
add
cld
cmp
idiv
lret
into
cmp
mov
jnp
cmp
adc
xor
in
cmpb
lret
clc
int
loope
push
mov
movsl
daa
stos
and
call
inc
or
mov
push
push
movsb
inc
ds
jge
dec
repz
out
mov
pop
mov
mov
sub
or
rcll
add
or
push
lods
notl
xchg
and
fiaddl
xchg
imul
insl
ficomps
xor
sbb
stc
fstpl
aaa
icebp
dec
add
stos
pop
xchg
data16
in
aam
arpl
data16
cmp
outsb
out
aas
popf
and
add
setg
pop
mov
cmp
adc
adc
stos
adc
shll
adcl
push
xchg
insb
push
adc
insb
cwtl
cmp
call
and
inc
pop
pop
hlt
out
mov
iret
cmp
jns
les
push
addr16
int3
stos
push
push
jae
dec
js
inc
sub
incl
xchg
xchg
add
fisubs
xchg
cmp
mov
mov
xor
aas
out
clflush
pop
jmp
xor
aam
xor
cmc
fcmovnbe
stc
push
lret
push
xlat
leave
fidivs
outsl
push
adc
xor
xchg
pusha
jl
and
outsl
sub
shl
movsb
shlb
out
pop
dec
cli
jne
test
pop
pop
cmpb
repz
cmp
xchg
lret
lods
jae
mov
int3
cmp
daa
xlat
jbe
sub
xlat
loop
fs
rorb
insb
pop
pop
pop
loop
xlat
repz
test
sbb
lods
test
movsb
and
out
test
mov
mov
mov
push
pop
out
or
pop
mov
lock
cmp
into
movsl
cmc
cli
sbb
sti
jg
clc
xchg
jo
sub
xchg
cwtl
pop
mov
je
out
mov
adc
test
dec
int
sub
sbb
addr16
jecxz
pop
mov
sub
cmc
fs
dec
or
and
sbb
ja
xchg
jnp
cmp
push
lret
add
adc
dec
pushf
mov
dec
and
xor
pushf
and
es
sbb
jbe
sub
xchg
fcoms
and
sbb
push
inc
scas
ljmp
roll
insb
jb
mov
inc
push
mov
xchg
movsb
out
stos
jp
orb
jmp
push
sarl
dec
pop
cmp
fcmove
jle
sbb
dec
xchg
fwait
or
xor
jnp
jbe
or
jp
sub
out
int
lret
fdivr
in
jbe
movl
or
fcmovnu
lods
cmpsl
test
mov
mov
or
cmp
das
sbb
adc
daa
sbb
insb
fisttps
dec
fsts
and
sbb
pop
loop
sbbl
sub
dec
fnstsw
aaa
cmp
cmp
sbb
pop
je
pop
mov
jnp
dec
call
cmpsb
ret
jp
add
cmp
jecxz
and
into
insl
lahf
xchg
lea
inc
mov
ljmp
mov
inc
jmp
mov
xor
push
scas
adc
xchg
inc
xor
and
jle
cmc
adc
test
add
lcall
repnz
xchg
or
jle
adc
rcr
inc
ja
sbb
cli
mov
push
in
test
jo
pop
push
inc
pop
insb
sbb
push
scas
dec
xchg
xabort
nop
push
and
push
sub
and
dec
or
vmovlhps
cli
repnz
fidivrl
lds
daa
lret
pop
add
add
cltd
pop
out
adc
sbb
sti
and
movsl
push
mov
cmp
inc
inc
roll
sub
movsb
sub
mov
aas
mov
pop
mov
add
in
fs
sbb
test
int
cmp
add
in
and
movsb
arpl
testb
mov
cltd
mov
loope
rorb
push
mov
push
dec
or
and
add
insl
outsb
pop
lods
mov
inc
adc
sahf
mov
and
push
bnd
mov
adc
mov
stos
stc
in
xchg
mov
pop
xor
lea
and
mov
pop
mov
add
push
xor
mov
xlat
jo
sub
ficomps
mov
lock
fdivs
sub
cmp
mov
imul
pop
cmp
mov
push
arpl
lcall
imul
dec
scas
push
and
sub
or
es
and
rol
or
test
pop
mov
fldl
loope
sti
repnz
test
mov
xchg
test
lods
jge
int
nop
push
stc
jp
push
data16
lock
mov
jbe
cli
sub
fildll
icebp
in
mov
inc
mov
inc
fstpl
hlt
arpl
pop
sti
dec
xchg
mov
bound
test
and
ljmp
out
lret
cld
scas
push
or
movsl
sbb
pop
stos
repz
mov
rcrl
mov
xchg
sbb
test
adc
notl
insl
loopne
clc
mov
mov
testb
cmp
test
sub
out
sahf
sbb
jnp
imul
and
in
adc
std
inc
stos
sub
cmp
popf
push
movsl
xchg
sahf
mov
lods
fsubs
hlt
shl
mov
insl
lock
lods
mov
adc
xlat
add
call
mov
test
lods
cmc
inc
imul
pushf
mov
arpl
in
or
mov
or
xor
insb
in
adc
dec
ljmp
ret
les
sub
adc
outsb
repnz
pop
dec
jae
mull
test
mov
clc
testl
fcoms
fimull
adc
jo
gs
mov
loop,pt
movsb
in
ret
adc
call
and
std
and
xor
mov
mov
jmp
add
inc
add
add
xor
xchg
bound
aaa
jge
xor
pop
idiv
fiaddl
xor
push
rol
icebp
lods
mov
jbe
fwait
or
mov
push
jne
inc
gs
jb
loopne
lds
sub
ja
mov
cmp
xchg
test
jno
mov
cmp
jg
cld
and
or
sub
sbb
inc
mov
sbb
xorl
test
sahf
movsb
sub
or
faddl
jl
and
sub
mov
movsb
sub
test
dec
push
std
pop
es
icebp
cmpsl
xor
xlat
mov
jbe
test
adc
mov
mov
mov
sti
jle
xor
sbb
lock
int3
enter
or
pusha
fwait
sahf
shll
sahf
js
mov
lret
inc
fldl
ss
mov
push
cmc
rorb
ss
movsl
call
ficompl
inc
add
add
mov
test
mov
or
imul
hlt
push
repz
jne,pn
nop
jno
movsl
add
inc
mov
dec
mov
xchg
ret
arpl
out
sub
into
mov
not
adc
jne
cmp
loop
pop
loope
inc
add
cmp
imulb
add
adc
cmpsb
scas
xchg
mov
rorl
push
xchg
les
scas
or
mov
std
ljmp
cwtl
mov
xchg
lods
ror
popa
cmp
mov
mov
adc
dec
insb
push
cmp
sbb
cmp
faddp
call
jmp
xor
movl
adc
push
sbbb
cwtl
dec
lcall
sbb
sbb
adc
or
and
ds
out
cmpsb
out
pop
xor
arpl
jge
or
out
ljmp
mov
fs
fwait
jl
pop
rcl
out
fs
outsb
inc
pop
sub
fbld
cmc
jle
xlat
in
enter
mov
jno
sarl
mov
fistpll
jg
xor
pop
nop
les
jae
divl
lcall
inc
repz
call
lcall
xchg
mov
add
lea
mov
pusha
add
stos
push
ja
sahf
inc
cli
aam
or
call
hlt
mov
ljmp
outsb
sub
ds
sahf
pop
sub
adc
movsb
imul
imull
fcmovnu
cmp
ja
dec
push
pushf
add
ja
dec
rcrl
lds
sub
inc
push
mov
loop
in
stos
scas
push
mov
add
inc
sbb
and
mov
xchg
cltd
sub
pop
push
xchg
add
sbb
and
iret
cmp
loop
or
sbb
aaa
mov
into
scas
cmp
pop
xor
pop
cmp
mov
leave
das
repz
mov
sti
dec
sahf
mov
movsl
add
js
into
test
adc
or
mov
lods
xchg
pop
addr16
push
adc
roll
retw
frstor
inc
es
lds
or
cmpsb
pop
push
rcrb
addl
cmpsb
mov
outsl
mov
inc
popf
scas
cmpsl
repnz
sbb
push
pop
pop
repz
mov
xchg
cmp
xchg
cmpsb
insl
push
ja
mov
in
pop
cmp
push
and
or
aad
sbb
jge
mov
pop
fisttps
fwait
hlt
mov
scas
int3
mov
rclb
dec
pop
xor
jnp
xor
scas
out
add
cmc
cmp
cmpsl
cmc
daa
inc
movsb
into
lcall
mov
pop
daa
jo
lds
mov
add
pop
rclb
lds
loope
lret
or
adc
mov
dec
pop
leave
push
xor
in
jns
ret
mov
pop
ret
mov
mov
xchg
negl
dec
lret
outsl
cmc
push
sarb
cmp
adc
adc
mov
add
enter
ja
lds
add
insl
ss
cmp
mov
lret
dec
pop
test
ds
add
pop
les
sbb
push
pop
pop
mov
jne
jl
mov
lods
lods
push
cltd
dec
add
inc
enter
add
push
sub
xor
adc
or
fists
jg
and
in
shl
arpl
xchg
fwait
mov
jbe
fnstenv
ret
cs
adc
cwtl
mov
movsb
sbb
mull
xor
xchg
and
fdivs
push
daa
xor
xchg
pop
aaa
pushf
jmp
call
jge
mov
mov
insl
mov
adc
dec
lret
xor
cmp
sub
and
inc
and
add
dec
push
cmp
nop
pusha
adc
pop
hlt
adc
sbb
das
xor
and
push
stc
notl
daa
adc
push
out
adc
ret
pop
outsb
cmpsb
rol
push
fldt
orb
int
aad
mov
sahf
call
dec
orb
roll
mov
cmc
mov
push
mov
scas
mov
fbld
pop
sub
xor
in
hlt
jge
sub
fnstsw
mov
xchg
lahf
pop
and
adc
cli
push
js
adc
test
adc
jecxz
push
bound
mov
into
sti
divl
flds
xchg
sub
aam
mov
js
repnz
hlt
sub
lock
jle
mov
call
cmpsl
mov
sbb
sub
sub
movlps
loopne
loope
inc
push
in
movsl
ljmp
inc
outsl
xor
xchg
mov
rcrb
push
sub
mov
mov
ficoms
ljmp
std
mov
push
push
sti
xchg
iret
sbb
jmp
and
int3
cs
mov
adc
out
icebp
mov
aas
mov
in
mov
add
nop
dec
out
push
or
mov
rcrb
dec
dec
sbb
cwtl
iret
js
faddl
scas
xlat
int3
jmp
cmp
jecxz
fildl
insl
fsubrl
shr
scas
and
xor
and
fs
add
add
inc
in
repnz
pop
push
add
out
xchg
outsb
inc
enter
das
adc
jle
lcall
ds
andb
jmp
notb
test
daa
fcmovnb
loope
fdivp
iret
fsubrs
cmc
rcr
or
sti
adc
sub
sbb
out
cmp
sti
gs
and
xchg
push
lds
scas
pop
push
and
fwait
test
insl
shlb
fists
popf
jecxz
in
ret
insb
mov
adc
cs
sti
dec
test
in
mov
pop
sti
std
xchg
pop
and
pushf
scas
mov
sub
aaa
inc
nop
frstor
and
mov
jge
mov
jae
jno
mov
jle
lea
push
fadds
and
stos
dec
jne
xor
lret
jg
mov
push
nop
cmp
inc
jge
nop
mov
jae
std
popf
andb
imul
sbb
inc
and
jle
lock
mov
ds
xchg
mov
fwait
pop
cltd
je
rcrl
lds
xor
inc
push
cld
sub
testb
inc
pop
nop
insb
in
loopne
and
addr16
icebp
ljmp
xchg
sub
ljmp
popa
sub
sub
hlt
out
fcmovnb
rolb
inc
pop
push
sub
cltd
insl
popf
iret
sub
and
pop
and
mov
cmp
es
push
xor
sti
cmc
stos
xchg
sahf
adc
sbb
mov
jb
gs
aas
repz
push
xchg
mov
out
dec
sub
mov
mov
push
sbbl
aaa
sub
lds
sbb
or
iret
stos
adc
inc
mov
outsl
mov
stos
out
mov
or
sub
pushf
dec
jmp
call
pop
insl
rcrb
push
jb
push
jno
rorb
repz
mov
mov
push
mov
in
mov
rolb
shll
idivl
dec
loope
das
arpl
aam
and
outsb
gs
divb
xchg
icebp
loope
add
mov
lds
test
mov
pop
cmpb
hlt
cmpsl
popf
pop
cli
popa
cmp
mov
bound
mov
fs
and
xchg
popf
inc
pop
xchg
mov
imul
pop
push
inc
repnz
sub
adc
or
in
and
and
sbb
cmpsl
mov
add
xor
ret
cmpsb
aam
lret
jns
out
test
jne
xchg
sub
and
frstor
in
mov
popa
sbb
mov
out
cmpsl
fimull
mov
aaa
lret
mov
mov
outsl
cmp
xor
jmp
pop
xor
fadd
in
mov
aam
faddl
stc
divb
fs
and
add
cmpsb
fst
push
ret
xchg
icebp
mov
mov
out
nop
jmp
cltd
enter
repz
mov
or
mov
jb
sti
ret
jne
loopne
icebp
inc
andl
pop
ja
push
push
sub
jns
inc
mov
es
mov
add
mov
mov
pop
out
xor
mov
lret
les
or
rcll
std
mov
std
sahf
imul
repnz
xchg
ljmp
add
mov
fwait
and
fadd
movsb
push
push
add
inc
jecxz
push
adc
xor
cmc
pop
adc
stos
adc
mov
aam
xchg
lds
fwait
stos
fisubrl
mov
sbb
add
add
inc
rcll
mov
or
push
sub
fwait
dec
scas
inc
fimuls
mov
into
jmp
js
and
jne
cli
sbb
ljmp
push
push
ljmp
mov
dec
mov
mov
push
sub
std
stos
push
xchg
xor
repz
in
pushf
dec
cwtl
loope
gs
sahf
enter
push
mov
cltd
xchg
lcall
out
dec
jl
cs
push
leave
addb
popa
inc
inc
dec
ljmp
pop
leave
hlt
imul
add
imul
adc
xor
sbb
push
out
mov
in
xchg
sarb
outsb
movsb
cmp
pushf
ljmp
repz
dec
push
pop
stos
loopne
or
xlat
jns
pop
jge
ret
stos
cs
sub
cmp
mov
ret
cmp
add
iret
push
add
add
test
mov
fnsave
sbb
cmp
rol
sub
es
fiaddl
jmp
sbb
inc
call
shrl
sbb
movsb
enter
popf
call
push
sub
xchg
mov
aaa
lock
jns
decl
and
sbb
fnstsw
jg
xor
popa
push
mov
xor
out
mov
inc
jb
push
pop
scas
adc
fbstp
popf
movsb
fcoml
es
inc
xchg
xchg
fs
call
push
adc
das
cmp
in
scas
or
add
mov
dec
flds
mov
aad
xlat
or
aam
addb
push
xchg
adc
enter
fcom
cmpsb
sub
test
jo
inc
cmpsb
cmp
push
fisttps
inc
into
push
xor
je
fmuls
lret
cmp
inc
and
testl
into
decl
add
xor
ss
cmp
mov
test
mov
inc
xor
mov
sub
repz
addr16
addl
xor
in
sbb
lea
add
add
mov
push
test
jo
stos
xlat
icebp
pop
mov
mov
test
std
xor
pushf
jbe
xchg
jmp
xchg
ret
cli
scas
xchg
sbb
mov
adc
jle
js
call
dec
or
push
cmp
sahf
mov
mov
push
cld
jae
pop
arpl
mov
imul
loope
and
out
sbb
mov
inc
jne
mov
out
scas
mov
cmpsb
fistpl
sub
push
pop
or
scas
popa
xor
push
call
or
imul
cltd
repz
in
sbb
xor
xchg
or
and
das
aaa
in
notb
das
pop
jnp
nop
insb
xchg
xor
xchg
cmp
mov
mov
fwait
enter
cmc
mov
pop
mov
insb
fmuls
jb
out
and
cli
mov
adcl
sbb
cmp
shrl
call
pusha
ljmp
xchg
jmp
pop
sub
clc
in
jmp
xor
std
sahf
cs
mov
mov
loop
lea
test
aad
xchg
pop
dec
adc
mov
adc
xchg
mov
iret
into
dec
mov
mov
cmc
repnz
iret
mov
rolb
test
clc
sbb
sub
call
in
test
test
mov
inc
addb
adc
js
insb
pop
stos
pop
cmp
sbbb
or
xchg
dec
hlt
xchg
lods
jecxz
sub
cmp
xchg
sub
push
outsl
gs
cmp
lds
sti
mov
fstps
loopne
shll
ffree
sub
add
mov
sbbl
not
in
pop
cmpsl
fisubl
mov
pop
sub
sbb
es
cwtl
cmp
popl
add
ss
in
jb
xchg
call
lahf
jp
lods
ds
aam
inc
lahf
xchg
loopne
subl
sub
mov
movsb
xor
ret
cmp
andb
cmp
ret
xchg
fnstcw
pop
outsb
pop
push
loope
adc
lcall
insl
or
dec
in
xchg
push
mov
jg
test
jae
scas
cs
fucomip
arpl
hlt
pusha
jle
xchg
lahf
fnsave
push
test
cmpsb
inc
push
fs
enter
cmp
loopne
lods
in
and
cmpsl
mov
hlt
jns
scas
xor
mov
add
sbb
cmp
pop
mulb
subl
adc
cmp
xchg
push
pop
sub
xor
dec
cmp
mov
rol
dec
sbb
in
out
les
xchg
idivl
push
mov
push
test
push
imul
mov
push
xchg
and
push
bound
cmp
mov
lock
sub
lret
daa
dec
test
adc
repnz
inc
add
cld
enter
and
xor
out
pushf
insb
adcb
das
mov
jbe
inc
aam
pop
add
and
test
fwait
or
mov
addr16
sbb
inc
mov
mov
mov
push
or
mov
fiadds
pusha
nop
popf
push
je
pushf
mov
mov
pushf
scas
jle
and
movsb
scas
jno
adc
sub
jne
test
dec
mov
jmp
ret
loop
mov
and
out
jo
mov
imul
bsf
and
lods
loop
sub
jecxz
ror
das
cmc
inc
in
stos
imul
mov
fdivl
aas
sub
push
push
gs
rcll
cmc
xchg
imul
xor
out
icebp
nop
mov
cmpsb
icebp
aam
lcall
push
inc
out
and
xchg
jge
stos
dec
outsb
outsb
inc
push
push
push
scas
cli
dec
shrb
inc
dec
dec
add
pop
iret
ljmp
add
addr16
pop
andb
ficoms
jb
inc
push
test
pop
in
and
fsubrl
ss
xlat
iret
stc
sub
adcl
adc
xlat
js
shlb
pop
imul
inc
sub
ds
lahf
loop
in
adc
addr16
add
movb
ret
hlt
dec
icebp
lock
ret
xchg
les
or
shll
arpl
sbb
frstor
inc
mov
orl
mov
sbb
cmc
and
sbbl
jns,pn
ret
pop
jno
add
in
ja
add
lds
mov
cmp
sub
bound
xorb
cltd
pusha
outsl
clc
mov
jg
pop
push
sbb
and
inc
arpl
dec
or
les
pop
dec
lods
scas
or
cmp
xor
fsub
xchg
scas
aas
mov
xor
jne
mov
mov
out
lahf
jbe
sahf
jp
or
mov
test
xor
xchg
sbb
sti
mov
xchg
xchg
mov
mov
inc
js
into
stos
in
in
int3
sbb
bswap
pop
jg
or
sub
pushf
test
test
leave
xor
adc
mov
jb
mov
dec
ljmp
add
in
mov
jmp
mov
iret
mov
fisubs
or
jecxz
dec
cwtl
or
cs
repz
movsb
fstpl
into
clc
sbb
out
xor
sbb
inc
js
push
sub
sbb
int
arpl
ss
mov
hlt
add
or
cmp
lcall
pushf
xor
push
mulb
js
in
mov
fchs
cmpsb
mov
dec
dec
dec
jb
lea
out
pop
sahf
aam
rcll
addr16
movsb
stc
or
cld
je
or
jo
cmp
add
jmp
push
sub
sti
mov
in
mov
popf
fs
stos
push
ljmp
stos
xchg
lds
stc
lods
xchg
imull
dec
into
sub
loop
xchg
and
mov
mov
mov
mov
or
and
out
and
call
test
xchg
cmpsl
cmp
loop
xchg
or
mulb
inc
push
sbb
push
fstpt
nop
and
xor
cli
daa
sub
fwait
jb
pop
pop
adc
inc
mov
ret
push
xchg
scas
jge
or
adc
adc
sahf
inc
pop
or
mov
inc
add
cmp
push
andb
inc
mov
lock
or
xchg
daa
push
mov
sub
out
jo
iret
loopne
bound
int
ljmp
xchg
enter
int3
pop
push
cwtl
jl
imul
inc
mov
pop
insl
add
movsb
sbb
sbb
pushl
xor
push
rolb
call
cmp
dec
scas
fbstp
mov
cld
mov
arpl
and
in
mov
dec
push
bnd
pop
scas
and
call
mov
push
sbb
xchg
test
xchg
mov
jle
lock
cmp
cmp
lea
test
jo
mov
in
movsl
or
pop
push
and
aam
pusha
movsl
mov
mov
and
mov
cmp
inc
in
je
stos
por
pop
loope
dec
inc
or
mov
pop
cmp
outsb
gs
xor
inc
test
lock
in
loopne
push
sub
mov
add
jmp
iret
xlat
dec
adc
dec
int
mov
test
push
fiaddl
aad
imul
addr16
ljmp
and
mov
push
and
and
mov
stos
scas
mov
les
imul
mov
test
ret
imul
and
mov
sbb
jne
push
rclb
adc
xchg
mov
lds
lods
xchg
out
sbb
sub
lea
aaa
sub
and
jge
lods
sub
jle
addr16
je
inc
fidivrl
push
lods
fcomip
push
clc
pop
and
bound
or
xchg
push
sub
inc
cmp
or
jle
dec
rclb
mov
fwait
xchg
cli
jne
out
das
hlt
mov
inc
imul
xchg
cmc
jl
jno
or
and
or
js
fistpll
rol
loop
loop
popf
movsl
lds
inc
pop
mov
jns
push
pop
js
nop
and
rcr
rolb
out
mov
leave
jp
out
sub
xor
popa
xlat
test
mov
jg
or
jge
mov
and
sbb
jb
pop
xor
ds
popf
xchg
xorb
jns
xor
dec
leave
stos
shrb
movsl
pop
inc
cmp
pop
fidivrl
ljmp
scas
cld
aaa
xor
fwait
push
insb
and
rcrb
fs
insb
aaa
pusha
push
mov
add
aam
mov
inc
adc
sbb
sti
cmpl
xchg
loopne
pop
mov
pop
sahf
clc
jne
aad
mov
rcr
lahf
adc
mov
inc
mov
mov
loope
jecxz
scas
pop
sub
out
jnp
ja
int
push
lods
repz
jecxz
iret
mov
fsubl
repnz
clc
mov
mov
ljmp
fists
loop
mov
ret
xor
xchg
cld
test
adc
mov
das
jge
mov
data16
movsl
jne
jbe
ljmp
xor
std
das
loope
adc
xor
inc
leave
cmp
sbb
lods
cmp
cmpsl
pop
hlt
repnz
fucom
push
pop
les
es
xor
mov
pop
das
repnz
out
xchg
push
lahf
adc
rcrb
inc
pop
sarl
fwait
mov
aam
shrb
aad
popf
sub
xchg
cld
icebp
testb
and
out
mov
xchg
mov
xchg
xor
aas
xchg
out
dec
xchg
mov
loopne
nop
negb
jnp
push
aam
addl
cmp
jg
adc
ljmp
add
in
jge
dec
pop
pusha
lock
cmp
pop
push
mov
aam
leave
and
nop
and
push
dec
out
jl
in
filds
sub
inc
mov
daa
push
and
leave
dec
pop
out
push
sbb
or
addb
mov
xchg
addr16
fst
push
pop
push
push
dec
std
call
xchg
adc
pop
push
xchg
sub
cmc
or
hlt
jle
filds
repz
pusha
jecxz
jecxz
outsb
cmc
jnp
add
xchg
enter
push
imul
stc
int3
aad
sub
into
orb
sbb
jl
aad
adc
and
push
mov
push
shl
ja
pusha
cwtl
add
repz
sbb
sti
lret
sbb
pop
mov
lea
jno
ljmp
jo
xchg
ja
adc
adc
loope
dec
xchg
aaa
jno
in
mov
es
arpl
add
es
je
loop
imul
addr16
lea
out
ja
pop
leave
andl
mov
inc
add
push
daa
mov
push
jns
mov
aaa
test
mov
sub
adcl
jne
stos
jge
lret
xchg
ja
lret
out
enter
pop
mov
dec
and
sbb
into
xor
negl
push
lahf
fcoml
push
shrl
hlt
cs
lods
mov
testb
pop
fsubp
inc
aas
cmp
sahf
scas
sub
shlb
jo
push
outsl
nop
sub
lea
stos
es
loop
cmc
dec
push
add
mov
push
in
cltd
sub
rolb
jge
aad
inc
dec
inc
lret
push
inc
add
int
faddl
push
int
test
mov
pop
cmc
jb
scas
xlat
repnz
sahf
in
dec
or
xor
std
sub
je
cld
mov
push
dec
cmp
mov
rcrb
sarl
loopne
fs
shrb
insl
jo
clc
xchg
sbb
stc
add
sub
xchg
out
mov
loop
gs
add
and
xor
sub
pop
pop
lock
int
js
push
enter
inc
or
icebp
xor
outsb
lea
adc
in
scas
dec
aaa
aaa
mov
enter
add
fbld
mov
and
mov
xor
or
sbb
lret
mov
stos
aaa
daa
daa
jge
scas
rcrl
nop
cmp
int
adc
lahf
inc
stc
ret
cmp
pop
in
popf
ss
insb
xchg
xchg
nop
push
add
rcr
inc
test
rolb
and
fbld
push
stos
xchg
or
xor
movsb
add
mov
test
inc
popa
rolb
dec
cmpsw
movsb
add
push
or
setle
push
lret
fwait
iret
mov
push
rclb
sub
lds
or
cld
pop
and
jnp
mov
push
mov
hlt
loope
ret
cmp
data16
movsb
dec
xchg
arpl
xor
test
insb
push
loope
mov
pop
lock
call
adc
outsb
stos
or
xlat
mov
pushf
repz
pushf
add
in
cmp
pop
scas
mov
adc
or
enter
jl
loopne
cmpsb
in
aaa
jle
jmp
xor
jmp
xor
sub
cs
mov
clc
imull
and
sbb
adc
cmp
jno
xchg
adc
lahf
fs
dec
js
mov
ficomps
inc
adc
lret
pushf
mov
aad
cmp
in
push
outsb
adc
mov
clc
jae
rcl
pop
cltd
sub
push
je
out
popa
push
mov
mov
mov
mov
adc
xor
add
jns
test
push
in
loope
and
mov
dec
inc
cli
mov
push
std
and
dec
fwait
mov
movb
outsb
adcb
idivl
arpl
inc
psubusw
xchg
inc
jae
xor
loop
cld
jno
subb
clc
ffreep
jno
fdivp
dec
sbbb
arpl
hlt
lea
jae
sbb
ret
sbb
mov
sahf
hlt
dec
movsb
rorb
push
push
ficompl
out
aaa
push
push
repz
or
push
rorb
mov
lods
mov
cmpsl
mov
stos
repnz
push
stc
out
data16
cmp
adcl
in
shll
imul
test
push
pop
jmp
push
and
aam
mov
jb
and
pusha
adc
js
adc
ret
mov
stc
loop
pop
rol
ja
xor
or
push
fimuls
push
jbe
mov
loope
and
sbb
pop
mov
and
out
push
mov
std
lea
add
xchg
ds
dec
int
call
adc
and
fnstcw
push
ljmp
pop
in
mov
sarb
jmp
cmp
jne
add
stos
push
ffreep
aas
jno
repz
cltd
xchg
sub
xchg
and
fimull
jns
inc
lret
adc
sub
cmp
sbb
mov
stc
inc
add
mov
dec
ds
xchg
test
repz
adc
fiaddl
ljmp
or
mov
arpl
das
dec
pusha
stos
imul
mov
mov
jle
push
ficoml
jmp
xchg
fdivr
enter
pop
js
mov
rcrl
lods
es
std
loope
cmp
orb
in
adc
pop
sub
dec
and
insb
clc
sbb
adcl
mov
mov
or
rcrb
mov
mov
xor
scas
push
pop
movsb
fisttpll
add
insb
arpl
jo
ja
and
jg
xchg
cs
std
mov
out
add
push
gs
adc
cmp
xchg
cmpl
imul
lods
imul
xchg
arpl
adc
in
outsb
xchg
ret
imul
adc
into
das
aas
or
imul
and
faddl
jl
inc
enter
jl
lock
ret
inc
sti
xor
fisttpl
pop
pop
repnz
loopne
jl
fbld
sbb
js
lds
fdivl
or
and
test
sbbl
mov
dec
inc
push
in
lea
orl
add
or
rol
push
dec
add
js
loopew
insb
scas
add
std
jnp
push
test
inc
inc
cmp
xchg
in
sub
arpl
mov
jecxz
pop
das
mov
push
fwait
cs
dec
cli
ja
xor
push
add
test
cmp
ljmp
jae
test
adc
push
mov
repz
inc
shr
mulb
adc
jns
nop
or
iret
adc
inc
push
and
pop
sti
mov
out
jnp
out
inc
leave
lods
cwtl
dec
push
adc
jle
cmp
mov
cmpsl
cmp
cld
xchg
rcrl
xchg
sbb
xchg
sub
mov
jmp
adc
jne,pn
cmp
stos
pop
or
pop
adc
sbb
xorb
and
jae
pop
cmp
mov
push
mov
arpl
xchg
pop
mov
pop
add
pop
pushf
cli
cmp
adc
insl
repnz
inc
push
test
jl
nop
jecxz
mov
xor
adc
in
push
in
push
mov
pushf
dec
imul
pop
xor
fldcw
push
xlat
rol
mov
or
ss
in
lock
jns
cli
or
xchg
fwait
test
ret
mov
adc
jae
cltd
andb
rclb
mov
cmpl
mov
mov
aaa
cmp
dec
out
push
mov
xor
pop
or
jecxz
push
out
int
cs
sbb
xor
xchg
mov
push
cltd
mov
sub
popa
test
repnz
sbb
ficompl
jmp
leave
into
shrb
rclb
out
mov
int
in
nop
lret
leave
aad
dec
push
mov
pop
popa
and
into
ss
xchg
adc
rcl
lds
dec
xor
xor
dec
jge
fildll
ret
ds
imull
xchg
ret
sbb
mov
cmpsl
loop
jmp
mov
xchg
jb
cmp
insl
inc
popa
mov
push
sar
addb
cli
out
mov
dec
xlat
jnp
mov
stos
cmp
mov
mov
and
mov
add
push
aad
jae
cltd
imul
xchg
mov
repz
leave
ljmp
push
popf
lret
and
xchg
aam
cs
lock
push
movb
xchg
push
add
xor
fistps
into
mov
notb
dec
fistps
adc
xchg
aas
xchg
out
sti
xchg
js
inc
jne
sub
std
dec
jmp
stos
mov
das
dec
push
mov
pop
fdivs
mov
dec
xchg
iret
rcll
fs
leave
cltd
or
push
pop
push
jmp
mov
popf
cmp
scas
jbe
repz
add
pop
rorb
add
pop
inc
lods
jae
testl
cmp
ss
xor
pop
mov
or
mov
push
psubusb
pop
mov
xchg
mov
jo
mov
in
mov
fidivrs
add
mov
repz
mov
fwait
jnp
mov
mov
rolb
sti
cmc
lahf
pop
insb
daa
outsb
mov
dec
cmp
adc
sbb
add
aas
stos
lods
rsm
inc
mov
mov
or
add
mov
xlat
sbb
push
xchg
jnp
rcrb
fistpl
iret
leave
cmp
sub
mov
sbb
incl
inc
jecxz
mov
fiadds
sbb
iret
pop
inc
sbb
inc
in
mov
or
mov
popa
stos
add
pop
dec
pop
cmp
test
call
lock
out
orb
add
fdiv
fildll
push
adc
ja,pt
jmp
cld
add
mov
xor
inc
push
fwait
sbb
jno
test
cmp
movsb
pop
arpl
sub
loop
icebp
sub
sbb
mov
rclb
inc
push
mov
cltd
mov
push
test
mov
pop
lret
xchg
scas
out
and
leave
push
popa
loope
or
mov
mov
xor
in
mov
fcmove
add
dec
je
push
sbb
xchg
scas
push
addb
test
pop
pop
mov
jg
jge
pop
sar
flds
cs
sar
and
into
aad
fiaddl
out
inc
jg
inc
in
adc
mov
lcall
pop
cmp
jno
test
outsb
add
fwait
rorl
jnp
add
inc
xchg
neg
cmpsl
adc
jns
imulb
jne
in
sub
movsl
mov
ficoms
mov
jl
jecxz
aad
jae
xchg
jb
imull
cmp
rcr
xchg
testb
sbb
loope
jbe
lock
xor
outsb
das
test
fidivrl
and
int3
cwtl
pop
jp
clc
stc
cwtl
incb
cld
pop
nop
pop
mov
fidivrs
fstpt
sbb
js
ss
shlb
dec
jg
popa
pop
cmp
imull
inc
addl
shll
xor
adc
sub
adc
pop
imul
outsl
pop
xchg
mov
fs
pop
lret
es
push
mov
insl
loop
sbb
mov
push
bound
or
mov
xor
lea
dec
xlat
push
aam
pop
and
pop
subb
fldcw
aam
mov
js
lods
xor
xor
jmp
std
pop
test
rcrl
inc
dec
mov
ja
imul
add
js
ss
pop
lods
xlat
pop
xor
jae
sbb
mov
sti
jns
mov
jl
ja
sub
push
ret
jp
leave
push
pop
inc
adc
adc
test
adc
pop
daa
ficomps
push
pushf
lahf
rclb
mov
xor
push
loope
cs
pop
cmpsb
dec
in
js
loope
out
test
add
aad
xor
arpl
mov
pop
aaa
leave
mulb
mov
push
ret
sti
jo
sbb
adc
inc
inc
call
jbe
xchg
jb
orl
mov
push
je
jg
lret
into
fildl
xlat
jle
and
add
mov
cltd
xchg
lcall
je
mov
jecxz
int
or
lods
leave
jl
and
scas
inc
rcll
jg
pusha
addr16
bound
xor
xor
adc
mov
xor
js
sbb
pop
fwait
fs
xor
inc
sbb
lock
loop
dec
cmp
insb
pushf
pusha
sbb
add
mov
movl
ds
xchg
ret
mov
adc
int
inc
push
jmp
jl
inc
je
xor
mov
popf
je
lock
xchg
ss
jo
sahf
lcall
push
xor
mov
mov
xchg
rol
push
dec
mov
js
cmp
adc
dec
jo
push
es
dec
adc
push
pop
sub
int
out
jmp
jle
ror
pusha
push
push
scas
insl
xor
or
mov
call
add
repnz
in
pop
fnstsw
jmp
ficompl
shl
add
xorl
stos
or
dec
inc
into
fdivrl
pop
lods
and
imul
in
jno
sahf
and
decl
xchg
test
mov
out
into
in
imul
orl
jmp
and
cmp
and
cli
imul
mov
pop
push
and
cmp
les
imul
dec
xor
pop
mov
pop
andl
pcmpgtw
add
ret
sbb
mov
add
loop
lret
sbb
scas
rorb
idivb
outsl
cld
bound
xor
loope
push
aas
mov
mov
scas
aad
add
xchg
mov
cmp
lea
mov
sub
cmp
fcompl
icebp
push
xchg
mov
test
test
jmp
or
push
adc
mov
add
mov
popf
push
cs
push
pusha
ret
xchg
dec
and
sub
adcb
popa
dec
sti
gs
sahf
inc
je
jl
jns
adc
cli
xor
loope
lcall
push
cmpsb
scas
bound
cli
jp
pushf
test
fnstcw
aaa
cmp
fildll
mov
inc
lods
sbb
ret
fldt
jnp
std
jb
jmp
fstl
adc
scas
jl
xor
pop
push
mov
dec
cmp
xor
aaa
cmp
pop
stc
fdivrs
cmp
enter
fmuls
add
jnp
mov
and
sar
add
mov
push
stc
arpl
pop
mov
ficomps
ret
mov
stc
push
andl
or
xchg
cmp
cmp
into
sbb
movsb
out
das
test
mov
test
and
jg
jle
sub
cld
in
fxch
rcll
pop
dec
in
call
jae
fstps
sub
pop
ss
sub
cltd
aas
pop
ss
mov
cmp
gs
cmpsl
rolb
inc
adc
gs
pushf
pop
and
fimull
in
xchg
lods
push
ljmp
add
jne
mov
jge
andl
lods
jmp
jnp
aam
sbb
push
cmpb
pop
xchg
in
xor
sbb
fdiv
sti
xor
add
mov
testl
pop
imul
and
hlt
sub
adc
popf
ja
adcl
std
adc
pop
mov
mov
loopne
rolb
popf
mov
jns
dec
cli
imul
adc
mov
mov
push
push
mov
cmp
dec
or
fdivs
dec
jg
inc
pop
mov
xor
or
imul
testl
sbb
mov
push
push
cli
popa
mov
mov
addr16
adc
or
test
xchg
jg
adc
mov
sbb
les
and
mov
lcall
pop
sbb
or
pop
jnp
es
out
or
cmp
sub
mov
dec
xchg
xor
xor
mov
test
movsl
out
cmovb
dec
add
add
xor
push
push
pop
push
mov
adc
sbb
mov
mov
outsb
fadds
xchg
push
mov
push
mov
shlb
jae
sahf
repz
jl
inc
and
and
dec
scas
lret
push
shl
add
dec
subl
and
subl
or
orb
scas
inc
jle
pop
addr16
cmp
cmp
push
add
mov
sub
fstps
out
fwait
inc
push
sub
loop
jnp
dec
and
pop
xchg
dec
xchg
popf
clc
mov
adc
fdivrl
mov
sbb
rorl
dec
mov
loop
cltd
add
and
movsb
lea
inc
mul
sahf
xor
mov
lods
push
dec
pop
adc
jo
add
lahf
or
addr16
xchg
std
cmc
jl
mov
mov
mov
xchg
xchg
cld
test
xor
pop
sub
mov
and
push
inc
cld
movsb
jne
lahf
popf
movsl
fs
add
and
and
xrelease
xor
cmp
dec
and
nop
sub
mov
mov
cmp
mov
stos
aaa
imul
movsl
cld
jae
cmp
push
scas
out
xchg
cmpsl
xor
stc
setp
xchg
sbb
xor
cli
cld
jmp
mov
mov
shl
loop
sbbl
mov
sbb
add
clc
int
fnsave
lds
mov
ja
xchg
push
ret
rcrl
cmc
xor
jno
pop
pop
test
jmp
push
cmp
neg
imul
ljmp
mov
icebp
dec
and
pop
jbe
and
in
lret
pop
rclb
inc
in
pop
add
sbb
jno
fs
test
sub
sub
push
pop
gs
mov
adc
cltd
out
jl
cmp
je
dec
daa
mov
sarb
das
add
sub
jge
notb
mov
test
rcr
push
lods
andl
jns
rcll
dec
lock
subl
sahf
loope
daa
fdivr
repnz
aas
sub
xor
gs
fdivrl
lods
imul
xor
xchg
popf
ss
xor
dec
ljmp
or
xchg
push
push
push
fadds
pop
push
mov
push
mov
lret
addl
add
sbb
ret
cmp
mov
test
xchg
movsb
paddq
ds
jp
inc
fiaddl
cs
xchg
xor
push
in
xchg
mov
xchg
xlat
xchg
pop
into
sbb
add
push
ret
pop
inc
push
aaa
sahf
or
out
imul
lcall
mov
lods
mov
out
or
lcall
sub
sbb
in
add
in
sub
roll
pop
jmp
ss
sub
xchg
jno
lods
shlb
and
addr16
mov
fisubrl
lds
cli
dec
imul
sti
add
jnp
xor
cmpsl
dec
mov
jne
pop
jge
pushf
mov
out
sub
fs
sub
loope
das
fdivl
ss
js
popaw
rorl
add
pop
clc
ljmp
jg
jo
push
andl
hlt
push
xor
or
ret
mov
inc
or
push
dec
add
test
int
imul
out
or
lds
mov
bound
out
xchg
orb
cli
mov
int3
int
stos
add
arpl
mov
lahf
rcr
mov
dec
in
enter
pop
mov
je
xchg
pop
pop
xchg
nop
fidivs
push
mov
pop
fs
dec
add
or
dec
imul
mov
fwait
xor
je
scas
cmc
push
fstl
jnp
lds
lret
js
inc
pushf
xchg
out
and
xchg
xor
xor
add
xchg
push
cmp
dec
jecxz
sahf
inc
pop
jle
jmp
int3
adc
mov
dec
xor
dec
pop
ficomps
push
fiadds
and
inc
int
out
in
sbb
fcoms
loop
hlt
int3
push
xor
inc
jbe
je
lahf
jo
xor
pop
push
and
sti
pop
jno
das
clc
mov
xchg
in
pop
add
outsl
sbb
cmp
call
push
sahf
pop
icebp
test
jb
stos
cmpsb
jne
dec
or
cmp
mov
enter
inc
push
out
je
inc
push
xchg
cltd
xchg
sub
addr16
push
pop
scas
adc
arpl
or
xorb
lock
clc
inc
mov
pop
xchg
repnz
ds
pop
or
dec
push
nop
push
orl
leave
loope
ret
cmp
fucomp
stos
dec
shll
or
fs
fldt
mov
mov
aam
sub
shll
sub
pop
add
lret
mov
cmp
shlb
pop
pop
loope
cmp
lds
jbe
fs
fsubrl
cmpsl
lahf
sub
ja
je
mov
jnp
push
je
and
std
add
xor
mov
dec
shrb
xlat
mov
inc
and
and
jb
push
bound
push
insl
and
or
aam
inc
dec
icebp
jnp
mov
clc
data16
das
hlt
test
jp
add
fwait
lock
aad
pop
fstpt
in
in
les
fsub
je
sbb
jge
shrb
sbb
push
mov
mov
lds
and
pop
sarb
cli
jbe
mov
cmpl
icebp
jo
adc
xchg
xchg
dec
cmpsl
fisttpl
xchg
lods
fidivrl
scas
push
xchg
loop
pop
adc
xchg
popa
inc
cs
lret
mov
jp
es
cmp
mov
fwait
mov
cwtl
mov
adc
jbe
popf
addb
sbb
xor
mov
enter
cmpsl
xchg
int
pop
nop
push
adc
int3
jae
mov
push
dec
pushf
sbb
inc
inc
clc
jo
fdivrp
push
dec
int
inc
mov
sbb
lods
mov
push
loope
push
inc
xchg
mov
fldenv
mov
adc
adc
inc
push
jae
and
and
pop
shr
movsb
aam
and
loope
pop
lods
sub
cmp
mov
filds
sti
mov
cmp
daa
mov
add
int
sub
push
ljmp
push
sub
pop
push
ret
sub
mov
dec
lahf
pop
aas
sub
insl
cwtl
add
inc
fsubs
pop
pop
mov
cltd
fwait
push
dec
mov
lahf
fdivs
xchg
daa
inc
mov
add
bound
loope
xor
mov
cwtl
jb
mov
add
gs
inc
mov
ficompl
subl
xchg
pop
xor
js
sub
iret
adc
sbb
lahf
sub
mov
push
inc
mov
int
dec
adc
out
in
in
mov
push
and
into
push
and
adc
cmpsl
pop
fnstsw
cmp
popa
lcall
enter
stc
inc
jg
pop
push
fisttpl
movsb
stc
mov
mov
inc
push
xor
inc
pop
mov
push
jb,pt
sub
mov
adcb
jl
and
lods
inc
push
sub
sbb
rol
sub
out
push
pop
stos
js
xchg
lds
ret
adc
xchg
aad
dec
in
xlat
xchg
fdivl
out
call
test
inc
push
mov
in
xchg
dec
sbb
push
out
pop
mov
mov
push
inc
mov
lret
pop
mov
pop
jl
jle
mov
xchg
outsb
fimull
mov
adc
ret
fdivs
fcmovne
push
idiv
insl
cli
clc
mov
jp
mov
pop
cmp
xor
enter
into
add
jge
or
mov
scas
push
cmp
xor
inc
in
mov
push
and
cltd
xchg
rcll
xor
xchg
jbe
movsb
adc
orl
add
xor
out
mov
sets
push
xchg
lock
inc
xor
cltd
outsb
sub
imul
adc
fadds
loope
xor
cmc
jo
jge
lds
imul
inc
in
fcmove
lock
ss
and
push
and
mov
mov
push
mov
shlb
cwtl
repz
pushf
or
test
ret
mov
lcall
fildl
dec
cli
cltd
sbb
lods
mov
out
mov
dec
mov
mov
mov
movsl
out
xor
sub
xlat
mov
in
loopne
jb
mov
into
or
test
pop
ss
dec
mov
enter
cmp
stos
dec
lahf
fsts
xor
bound
cwtl
pop
mov
lea
aaa
sbb
sbb
lods
shrl
mov
jae
push
adc
jns
add
xchg
inc
shrb
mov
sbb
fisttpll
sahf
push
jo
mov
jl
imul
ss
sub
lcall
sarb
push
test
pop
mov
xchg
mov
flds
pusha
and
push
outsl
pop
ss
dec
leave
in
cld
stos
sub
int3
clc
jnp
push
lcall
scas
ret
ljmp
fwait
adcb
into
xchg
scas
insb
xor
cmp
cmp
push
cmp
rcll
xchg
aaa
mov
jge
mov
pusha
mov
insb
dec
xor
fisubrs
shrb
imul
sbb
mov
push
jge
sbbb
andps
push
and
xor
add
cmpsl
or
cltd
pop
fnstcw
push
aaa
clc
cmp
inc
cltd
sbb
push
add
fistpll
jnp
lahf
or
repz
mov
movsb
push
ja
xor
add
ljmp
or
dec
icebp
jle
fwait
lock
fsts
imul
sbb
bound
inc
rol
les
fiadds
mov
aam
and
cmp
adc
pop
dec
icebp
and
ja
mov
daa
repnz
bnd
pop
mov
insl
fidivs
sub
mov
icebp
and
mov
xor
cmpsb
sbb
inc
cmp
scas
sbb
sar
loope
lret
lods
je
arpl
mov
push
cli
or
sbbl
jmp
stos
jecxz
jmp
cmp
into
das
adc
lcall
insb
push
mov
mov
shrl
push
cltd
lea
das
adc
lds
jnp
inc
call
push
inc
ja,pt
es
jp
add
cwtl
loopne
push
xor
outsl
js
cmovs
ret
mov
test
push
cltd
mov
std
cmp
mov
and
add
faddl
shlb
push
dec
fiadds
mov
call
xchg
lret
out
icebp
inc
pop
out
mov
push
mov
shrb
dec
int3
mov
mov
in
lock
or
push
mov
adc
ds
xchg
xchg
pop
sub
int
adc
loope
fnstsw
jl
loope
and
lds
shrl
aaa
or
std
fcmovnbe
inc
or
jp
xchg
adc
into
call
notl
fiaddl
push
sbb
mov
adc
mov
sbb
or
mov
sub
or
push
jl
sub
sub
adc
push
or
loopne
imul
fmull
adcb
mov
data16
jecxz
shrb
mov
outsb
orb
outsb
mov
add
int
xchg
inc
es
test
addr16
pop
push
cli
outsl
jo
scas
add
loope
jns
outsb
les
sbb
ljmp
fs
js
jb
add
out
pop
stos
xchg
add
repnz
gs
mov
mov
and
outsb
cmp
rcrl
push
out
xchg
lds
fstpl
lods
inc
in
cli
dec
in
lods
push
pushf
jge
xchg
inc
cmp
mov
xchg
xchg
dec
sbb
ret
dec
pop
int3
cmp
gs
jno
fwait
sbb
adc
cmp
mov
or
orl
mov
or
jo
xor
je
xchg
jp
sahf
mov
push
xlat
lret
sub
xchg
pop
je
mov
or
push
out
sub
fdivr
bound
cmp
ss
mov
and
cs
inc
mov
mov
pop
ret
dec
pusha
dec
imul
in
push
fs
add
add
sub
lea
inc
inc
pop
sti
push
cltd
sub
cmp
ljmp
mov
test
sub
xor
fmuls
or
cltd
sub
mov
je
mov
fidivrs
jbe
xor
and
pop
rcll
sarl
fcomp
call
push
add
lea
outsb
aad
jl
mov
jbe
aad
clc
stos
sub
dec
xor
fs
loope
push
or
push
adc
and
xchg
xchg
and
or
inc
aad
mov
lret
mov
xorl
loopne
push
loopne
push
sub
insb
cwtl
daa
mov
fcoms
or
sub
mov
dec
rclb
xchg
mov
xchg
ss
sub
gs
cwtl
jecxz
mov
ret
es
mov
jb
push
cwtl
ss
sar
test
das
ret
inc
adcl
inc
pop
hlt
adc
stos
and
mov
xchg
shlb
jae
rcll
push
outsl
fistl
mov
push
test
jle
xchg
test
mov
mov
imul
dec
mov
cmc
add
xor
jbe
arpl
stc
dec
rorl
push
xor
mov
add
sarl
xchg
xor
pop
cmpl
sahf
xor
jne
imul
fists
jmp
pop
xlat
cmc
out
mov
adc
divl
xlat
add
sahf
sub
push
pop
xchg
add
sahf
mov
aad
cs
pop
gs
dec
and
push
sub
cmp
scas
jge
movsl
lods
movsb
lock
in
xor
sbb
lret
stos
dec
xor
inc
or
cmp
mov
add
movl
pop
lcall
pop
cwtl
xlat
mov
push
andb
aas
int3
cld
mov
cs
addl
push
fsubrl
cmp
leave
out
and
cltd
xor
out
xor
adc
adc
test
js
nop
xor
dec
out
adc
lods
cmp
lcall
jae
cmc
fdivs
dec
or
adc
not
mov
leave
pop
loop
sahf
pop
mov
mov
cmp
cwtl
pop
and
loop
pop
jnp
cmp
cmpsb
pop
jbe
es
adc
test
cld
lds
xchg
or
jmp
loopne
xchg
enter
mov
lcall
fistl
insb
add
mov
adc
in
std
xor
dec
fcmovnbe
add
stos
lock
dec
jl
outsb
lret
out
jge
push
dec
lock
ret
push
xchg
push
sub
mov
outsl
mov
cmc
push
lods
mov
cmp
cmp
shrb
jb
push
pop
test
into
out
jmp
ret
popf
push
or
cwtl
jl
add
mov
lahf
mov
mov
lret
and
xor
fstpt
pop
repz
jno
iret
jecxz
or
fdivl
stos
mov
adc
jecxz
mov
cmp
cld
rcl
push
add
sbb
dec
mov
jbe
into
cmp
out
jb
push
nop
fidivrs
jb
filds
push
les
pusha
mov
repz
mov
pop
mov
sahf
xor
ret
pop
insl
and
mov
mov
mov
mov
in
jge
les
je
subb
push
and
push
sub
or
pop
fwait
mov
js
cmp
pop
mov
hlt
mov
xor
int3
addr16
iret
testl
mov
call
test
aad
push
jo
cltd
mov
pop
xchg
push
xchg
out
and
push
push
lods
and
sbb
pop
dec
lds
and
dec
sub
or
mov
fsubrs
pusha
outsb
sbb
pop
jmp
testl
ret
je
mov
adc
pushf
filds
in
inc
cli
push
inc
repnz
pushf
push
fwait
or
in
add
fsubrp
lcall
aaa
mov
mov
insl
lea
pop
loope
nop
inc
repz
or
andb
xchg
lds
fcomi
movsb
cmp
cmp
sbb
inc
sti
shrb
pop
dec
push
sbb
add
inc
push
sbb
cmp
flds
test
in
pop
push
insl
add
insb
outsb
lahf
sub
xor
pop
pop
imul
adc
popa
add
aaa
into
push
in
push
cmp
fcom
xchg
xchg
dec
and
cmpb
push
scas
stos
lahf
pop
mov
in
mov
push
cwtl
add
mov
jns
fs
jmp
sub
icebp
add
inc
mov
mov
roll
dec
insb
enter
dec
repnz
pop
cli
pushf
pop
js
push
jge
outsb
cmc
leave
nop
lods
sbb
fwait
rclb
dec
add
adc
mov
mov
cmp
and
add
test
inc
xchg
popf
pop
in
movsl
mov
das
jmp
or
addr16
mov
fidivl
test
pop
imul
fisubs
je
push
rcrl
repnz
adc
or
push
lret
or
pop
call
adc
imul
loope
dec
es
fwait
jno
inc
mov
cmp
cmp
dec
add
stc
pop
add
add
jo
jns
pop
es
rol
mov
lock
cwtl
xor
mov
push
repnz
and
jle
cwtl
fcomi
inc
shl
pusha
je
test
xor
popa
xchg
cmp
add
jo
pusha
outsl
das
cltd
mov
cmc
pop
addw
mov
mov
pop
pop
gs
in
cli
lods
cmc
sub
rcr
fs
mov
std
cltd
je
and
push
pop
js
fdivrs
xorl
fwait
out
mov
fst
jb
push
fdiv
into
frstor
inc
and
loop
adc
adc
test
pop
pop
in
xchg
adc
xor
and
mov
popa
xchg
mov
cmp
movsl
add
jo
arpl
mov
test
std
fcmove
leave
aam
out
andl
fldl
mov
mov
mov
mov
dec
dec
xchg
jl
je
jg
daa
xchg
mov
mov
std
dec
and
pop
test
add
cltd
arpl
sub
js
xchg
xchg
adcl
mov
loopne
les
cmp
leave
outsb
jmp
notl
adc
xchg
out
and
xchg
jns
mov
leave
pusha
les
iret
or
cmc
xchg
loopne
imul
xchg
jmp
shlb
xchg
mov
aam
nop
xor
std
arpl
jg
jl
add
push
or
and
inc
sbb
sysexit
cmp
jg
push
outsl
jge
ss
xor
push
inc
xchg
pop
xor
lock
addb
sub
mov
cmpb
outsb
adc
cmp
and
xchg
push
mov
pop
sub
lret
out
pop
mov
push
dec
push
add
pushf
loopne
shrb
fildl
lea
inc
xorb
xor
sbbb
fimuls
xchg
pusha
pop
adc
mov
mov
mov
jno
aad
dec
loopne
sub
adc
pop
std
into
push
cs
and
mov
cli
cli
call
jnp
push
ret
sbb
jecxz
mov
inc
test
cld
lds
int
leave
out
xorb
lret
fiadds
jb
sarl
mov
mov
cmp
insb
outsb
or
insb
ret
cmp
adcb
clc
cwtl
ja
mov
pop
ret
push
hlt
les
imul
cmp
orl
dec
lcall
mov
inc
add
jb
xchg
mov
mov
fisubrs
xchg
inc
and
popa
cmpsb
xor
xor
pop
jo
adc
dec
add
mov
cs
push
stc
push
push
or
sbb
fs
dec
test
mov
cld
out
pop
xchg
mov
xchg
jb
push
enter
push
popa
pop
mov
sbb
and
inc
xorb
stc
out
and
pop
pop
test
stos
sti
and
popf
mov
mov
scas
sbb
xchg
dec
pop
lcall
xchg
fdiv
cmp
mov
mov
lods
daa
adc
cmc
lahf
mov
lahf
mov
cmp
stos
stos
inc
mov
loopne
icebp
mov
xchg
lea
push
add
ds
out
insb
out
push
or
push
sub
inc
and
mov
out
cmp
out
fcoms
cmpsl
jmp
aas
xor
sub
cltd
fnstcw
test
repz
je
out
mov
das
fs
in
pop
fnstsw
dec
xchg
mov
aas
out
aam
sbb
dec
ss
loopne
es
std
inc
or
cmpsl
inc
cmp
pop
fbld
push
mov
mov
or
adc
aas
dec
test
test
mov
mov
push
pushw
mov
lcall
push
inc
sub
pushf
inc
and
adc
mov
mov
mov
mov
adc
xchg
cwtl
sub
adc
mov
adcb
das
add
in
loop
adc
inc
adc
pop
inc
mov
clc
add
mov
push
jno
fwait
sub
dec
push
lret
enter
xchg
add
xchg
pushf
sbb
std
or
cmp
cmpsb
adc
lret
rcr
decb
and
dec
mov
aaa
lds
inc
jecxz
mov
js
fistl
cmpsb
stos
ret
xchg
mov
xchg
popf
repnz
add
movsb
and
popa
lea
xor
out
push
sub
mov
nop
sub
leave
adc
push
xlat
jl
nop
or
jmp
test
mov
cmpsl
js
and
mov
pop
call
dec
push
pop
jmp
sub
sub
ret
les
dec
mov
xchg
ret
popf
fisubrl
add
pop
dec
orb
loope
cmc
in
push
adc
flds
aam
imulb
lahf
stos
push
dec
hlt
fidivrl
lods
jecxz
pop
jo
aas
xchg
pop
mov
shll
icebp
cmp
mov
mov
mov
sub
cs
in
push
pop
jle
insb
xchg
push
or
sbb
insb
stos
and
gs
shrl
out
clc
fs
and
adc
or
les
loopne
scas
fs
lods
lods
in
jmp
cmp
or
jecxz
xchg
sub
xor
push
mov
sub
add
aas
jle
pop
movsl
mov
mov
int
adc
adc
dec
adc
or
dec
adc
sub
in
out
fisubl
xchg
fcmove
push
add
ret
jne
sub
stos
xlat
xchg
or
xor
ret
jae
cmc
imul
mov
scas
jg
fnstcw
add
out
jb
inc
out
aaa
adc
push
hlt
xchg
inc
inc
cmp
popl
dec
addr16
sub
in
rcrb
add
push
outsl
adc
int
movsb
pop
mov
push
lds
push
fbstp
ja
cwtl
nop
ja
stos
stc
clc
gs
pop
out
aaa
das
gs
sbb
movntps
das
aaa
je
jge
lods
cmp
pop
jp
popa
push
fwait
lods
or
insl
fcomps
mov
mov
mov
nopl
push
sub
ss
test
and
popf
test
enter
or
cmc
adc
pop
or
cmpsb
cltd
insl
mov
je
inc
shl
jae
xchg
sar
nop
or
imul
pop
mov
aas
jae
mov
idivb
sbb
mov
out
je
lret
jnp
inc
and
dec
in
mov
xchg
mov
mov
cmpsb
insb
and
pop
sbb
scas
jbe
insb
mov
and
adc
test
sub
jae
mov
push
loop
arpl
sarl
mov
movsb
lods
inc
push
notrack
push
clc
imul
aam
cmp
imul
and
mov
pop
lahf
je
xor
mov
scas
xor
jne
xor
mov
fucomip
push
jo
add
stos
daa
xor
or
sti
jmp
shlb
or
pop
xor
push
pop
pop
sub
inc
fstl
inc
xchg
mov
adc
mov
inc
xchg
inc
aad
adc
xlat
shll
cmp
shll
cmc
in
xchg
and
pop
in
loop
stos
ja
rorl
fimuls
dec
incb
mov
in
mov
mov
mov
mov
fmull
adc
and
loopne,pt
das
stc
push
push
cmp
cmc
popa
mov
inc
hlt
xchg
xor
jnp
scas
jns
mov
cmovne
mov
lahf
in
pop
insb
repnz
add
repnz
shl
sarb
ss
adc
lcall
insb
int
add
mov
jo
xchg
jb
cwtl
pop
pop
imul
mov
dec
jns
roll
arpl
mov
lret
cmp
mov
into
push
jne
test
add
and
in
inc
inc
sbb
add
scas
ret
dec
push
xchg
mov
dec
inc
xor
out
das
push
aad
js
in
and
xchg
pop
xchg
adc
insl
xchg
add
ror
stc
inc
pop
fcompl
in
cmpsb
and
and
mov
popf
cmc
orl
mov
repnz
mov
mov
enter
mov
xor
fcomip
std
jecxz
xlat
mov
and
das
test
adc
push
mov
aas
insl
push
gs
adc
arpl
push
mov
stc
cmc
sbb
push
pop
ss
sub
xchg
sub
fists
mov
xchg
mov
dec
jle
inc
or
xchg
loope
xchg
sub
dec
stos
fwait
mov
out
xor
fisttpll
push
adc
mov
jl
pop
push
fwait
dec
insl
imul
in
les
adc
test
cmp
push
popf
loope
lahf
in
loopne
lods
mov
dec
xchg
aam
imul
and
sbb
lcall
loop
push
cmpsb
and
dec
movsb
xchg
cmp
loop
jp
ja
fbld
pop
in
in
cmp
xchg
xchg
adc
ret
rcr
dec
dec
mov
jl
jae
and
cli
add
xchg
les
orl
loop
mov
fstps
fs
fwait
scas
mov
daa
hlt
mov
jbe
addr16
push
push
jno
stos
inc
sbb
lds
rcl
das
xor
push
adc
sti
inc
aam
mov
add
adc
jg
add
sbb
push
pop
outsb
mov
push
test
sbb
iret
mov
mov
jmp
int
mov
cltd
xchg
push
sub
xor
les
popf
cmp
aam
frstor
mov
xchg
call
dec
pop
inc
push
mov
push
push
or
inc
add
adc
hlt
int
mov
dec
mov
pushf
icebp
pusha
xchg
jge
push
ret
jmp
cmp
dec
mov
xchg
fildl
imul
ret
in
jb
add
jbe
imul
sbb
adc
jns
dec
cmp
sub
stos
sub
adc
scas
jecxz
dec
fiaddl
rcll
dec
test
mov
lret
mov
mov
das
daa
cmp
and
andl
jns
mov
fistpll
push
cwtl
push
pop
rorb
dec
in
lcall
insb
mov
push
or
push
push
outsl
jbe
inc
gs
and
out
cmp
enter
push
push
jmp
jno
cmp
xor
cli
shrl
mov
icebp
pop
jbe
mov
xchg
icebp
jecxz
jno
aaa
mov
adc
arpl
xor
push
sbbl
loopne
add
loope
and
orb
outsb
push
sbbl
lea
popa
outsl
sarl
in
insb
adc
mov
xor
test
inc
das
lahf
imul
sub
call
lahf
out
dec
fisttps
push
push
mov
sbb
stos
mov
scas
sbb
enter
les
cmp
outsb
add
and
cmc
mov
subl
loop
mov
jne
fstl
cmp
mov
push
mov
push
cmp
aaa
enter
pop
std
mov
popa
cmp
fsubs
xchg
mov
fldenv
xchg
jl
out
jmp
cld
imul
jns
dec
mov
movsl
mov
jae
test
lcall
mov
cmp
push
xor
popl
sbb
or
loope
inc
add
in
ds
xor
push
adc
add
call
sub
popf
or
mov
movsb
and
js
cltd
sahf
add
mov
inc
dec
nopl
mov
das
repnz
leave
xchg
cs
ja
jle
int3
or
fwait
rorl
call
jg
aaa
sahf
xchg
sub
ss
pusha
or
jge
scas
jmp
inc
cmpsb
xchg
movsb
dec
mov
cmpsb
mov
in
fldt
xchg
and
xchg
inc
sti
sbb
jmp
mov
pusha
clc
mov
mov
adc
fsubl
lods
sub
push
xlat
push
mov
xor
inc
ficoms
cmp
mov
loope
popa
std
adc
fs
js
ret
and
mov
jecxz
pop
jecxz
or
or
xor
loope
push
cmp
sbb
xchg
mov
lea
rolb
data16
dec
repnz
adc
and
pop
lahf
or
sahf
mov
jbe
adc
fucomip
fcompl
cmp
mov
jns
jecxz
mov
pop
jp
outsl
and
loop
cmp
andb
or
xlat
mulb
mov
push
cs
mov
arpl
aad
sub
shll
sub
fsts
mov
cmpsl
add
popa
jg
addr16
jb
lds
and
inc
jecxz
adc
cs
xchg
out
hlt
dec
xchg
jne
into
cmpsb
cld
cli
pusha
jo
xchg
xchg
ret
scas
sbb
pop
cltd
mov
cmpsb
add
mov
pop
mov
lahf
xor
xchg
in
je
loopne
in
das
fs
pop
loopne
movsb
insb
lret
sbb
jle
jb
mov
in
insl
push
js
add
gs
xchg
lods
inc
push
imul
stc
jmp
mov
sub
add
gs
jbe
test
sahf
dec
sahf
loope
fidivrl
test
push
sbb
lea
pop
ds
iret
dec
hlt
repnz
faddp
lock
sbb
pop
sbb
out
movsl
movsw
pop
lret
add
test
mov
popa
outsl
cmp
jbe
sarl
add
jae
lret
insb
orl
adc
inc
repz
mov
aam
int
ja
outsb
ret
inc
inc
roll
fwait
dec
sub
xchg
xchg
xchg
xor
push
fdivl
int
fmul
xor
shlb
lahf
dec
or
shll
inc
mov
lea
jl
test
xor
jge
out
mov
jns
cmp
add
stc
xor
aas
sti
or
stos
sbb
adc
mov
xor
lods
ret
aaa
pop
das
xchg
aad
test
mov
cmc
lret
cmpsb
movsb
shlb
jmp
je
lods
pop
push
sbb
jp
mov
jle
sbb
add
out
mov
xchg
pop
das
shll
mov
into
gs
jp
and
je
popa
test
ds
xchg
stc
sbb
mov
pop
ret
sarb
mov
mov
mov
and
sub
lahf
jle
pop
ljmp
jno
push
out
cmp
sbb
push
add
xorl
xchg
push
pusha
test
add
jmp
jae
xor
in
mov
pop
into
or
addr16
call
stos
mov
xchg
scas
push
jb
xlat
dec
fwait
jns
sbb
andl
pmulhw
in
nop
xor
pop
shufps
push
xor
and
push
mov
das
push
in
out
imul
outsl
pop
pop
pop
mov
add
or
mov
or
push
sbb
loope
sbb
insb
mov
push
fldt
lds
cmp
js
xchg
filds
arpl
pop
add
mov
mov
lea
adcl
and
mov
mov
js
mov
imul
fcom
inc
cmc
add
out
push
outsb
mov
push
sbb
cmp
jne
cld
push
adc
in
jo
mov
stos
sbb
mov
int
mov
mov
add
mov
cmp
mov
loop,pt
enter
xor
rclb
shll
fildll
add
adc
adc
adc
cli
lds
xchg
or
xor
add
cli
jg
xor
add
add
les
mov
inc
add
aas
xchg
mov
addb
repz
mov
mov
insb
mov
jbe
insb
dec
and
js
movsb
mov
test
imul
stos
std
xchg
or
ja,pn
mov
add
dec
out
insl
jno
pop
loop
enter
test
movsl
andl
leave
xchg
ljmp
mov
sti
arpl
pop
mov
xchg
out
push
xchg
inc
aad
and
jg
cmp
lret
les
mov
mov
push
pusha
inc
test
test
dec
enter
aad
in
jl
push
dec
jb
and
mov
out
sbb
sbb
push
jmp
mov
pop
int3
repz
cmc
jge
mov
das
nop
insb
jb
enter
daa
mov
push
xchg
sbb
adc
int
shlb
ret
out
inc
sahf
cmp
mov
xchg
jb
inc
xchg
lods
mov
xor
xchg
xor
hlt
fwait
push
or
clc
test
mov
insl
subb
sbb
adc
mov
push
dec
jle
mov
mov
cmp
sub
inc
sbb
xor
xor
xchg
int
and
sbb
ja
out
xchg
jns
jne
call
fdivl
jae
sarl
or
xor
fcoms
pushf
push
mov
xchg
movsb
xor
dec
nop
mov
insl
insl
ss
xor
int3
adc
mov
xor
mov
push
add
jb
out
adc
jnp
ds
mov
xlat
adc
cmp
pushf
cmp
and
daa
and
lods
enter
and
mov
fnstcw
adc
push
jo
daa
jns
or
shrd
adc
rorl
cli
adcb
fnstsw
mov
rorb
jno
pop
push
test
dec
call
ja
push
mov
enter
into
jecxz
jecxz
jo
fbld
jbe
jo
mov
xor
pop
test
fwait
andb
call
ds
lret
mov
and
push
adcl
or
pop
mov
mov
sarl
or
movntps
push
sub
push
pusha
mov
jl
scas
sahf
pusha
pusha
imul
and
int
loopne
cmp
jbe
addr16
cmpsb
inc
lock
inc
xor
cmp
test
mov
inc
ds
fists
mov
sbb
or
or
mov
clc
sbb
cmp
stos
pop
adc
js
repz
sub
movsl
mov
push
lret
aaa
dec
mov
pop
sbb
mov
sbb
inc
mov
or
mov
test
mov
push
inc
sbb
addr16
jp
js
mov
cmp
add
enter
cwtl
sub
dec
pop
mov
lcall
jns
ljmp
loope
das
insl
sbb
sbb
call
dec
push
popa
test
stos
adc
sbb
xchg
imul
out
xor
mov
mov
ret
int
jle
or
imul
out
arpl
inc
mov
out
cmpsb
xchg
xor
ja
jb
jns
insl
add
hlt
add
pop
or
ja
mov
adc
repnz
clc
mov
and
add
mov
pushf
pop
pop
in
lret
or
mov
mov
in
aas
jb
iret
xor
jo
jb
add
dec
gs
ljmp
adc
imul
xor
push
or
rolw
ja
xor
mov
je
mov
jnp
cmc
dec
gs
cld
add
sub
pop
in
fs
shll
push
pop
or
outsb
and
or
adc
mov
jo
cmc
xor
leave
loop
jnp
and
mov
or
jge
in
push
std
int
cmp
xchg
in
pusha
fcmovnbe
loopne
ss
movl
sbb
adc
push
pop
in
repz
test
pop
pop
clc
and
and
and
cltd
mov
addb
push
cmpsb
sub
ja
dec
cwtl
add
rolb
je
adc
divl
nop
mov
sahf
insl
out
bound
std
scas
sub
ja
ret
adc
pop
aam
repnz
xor
push
adc
out
jne
cwtl
stc
jae
dec
mov
pop
push
jle
addr16
mov
mov
aad
ja
out
mov
sbb
scas
add
mov
xchg
fwait
movsb
ficoml
pop
or
sub
in
orl
das
mov
push
sbb
dec
scas
mov
mov
mov
sbb
inc
jge
xchg
or
test
loop
add
jo
popa
mov
pop
or
mov
pop
xor
add
and
movsl
ret
fldl
jb
sbb
cmp
fdivr
test
dec
cmpsb
adc
idivl
sub
or
lcall
jne,pt
mov
push
stos
aad
mov
das
pop
jp
shll
fcmove
addr16
mov
clc
scas
scas
lea
das
subb
xor
cltd
decb
xchg
or
sub
dec
push
fidivrl
inc
dec
sar
lock
in
jg
iret
scas
in
pop
into
mov
and
lret
pop
cmp
sub
dec
or
xor
loope
mov
nop
push
adc
sub
and
ficoml
cs
aaa
fnstsw
cmp
fisubs
or
aas
shlb
scas
rcll
cmp
push
fisttps
jp
add
incb
add
inc
incl
cmp
sahf
mov
daa
pop
stc
xor
adc
loopne
add
rcl
xchg
mov
leave
push
push
in
or
cmp
loopne
iret
call
sub
bound
mov
xchg
push
lea
pop
ss
mov
mov
push
int3
lcall
mov
outsl
jg
arpl
fdivrl
subb
push
push
stc
rcrl
mov
xor
pushf
mov
cld
mov
lahf
repnz
mov
xchg
dec
mul
bound
icebp
mov
push
mov
and
nop
ja
aam
lds
roll
into
das
mov
test
mov
pop
jno
jl
arpl
pop
cmp
jnp
adc
mov
fstpt
sti
or
dec
dec
add
xor
jmp
xorb
dec
decb
mov
dec
outsb
dec
mov
insb
pushl
jb
xor
movsl
jbe
sahf
in
bnd
jo
add
mov
es
push
adc
xor
bnd
fmuls
jmp
sbbb
fisubrs
dec
push
inc
push
mov
dec
and
xor
je
push
mulb
fadds
and
mov
adc
cmpsb
jg
imulb
fisubrl
das
leave
aas
pop
clc
shll
mov
test
fs
or
push
inc
enter
cmpsb
adc
fsubrs
nop
stos
xchg
cmpsl
xchg
daa
std
rolb
nop
das
dec
cmpsl
int3
push
popa
jle
jge
xor
in
pushf
or
jb
sub
xor
mov
scas
ja
hlt
les
cmpsl
lds
mov
cmp
fidivl
mov
ja
aaa
mov
xor
test
jp
stos
outsl
daa
jnp,pt
xchg
mov
orl
xchg
mov
sbb
add
out
cld
push
and
icebp
xor
mov
fildll
in
xor
jecxz
xchg
adc
fidivs
adc
stos
cmp
and
fimull
into
mov
cmp
adc
cli
leave
pushw
sub
lods
pop
mov
gs
add
add
add
jp
pop
and
jge
fs
aas
mov
sub
xlat
idivl
jge
add
shl
roll
mov
sub
lret
out
fstpt
lahf
cltd
pop
mov
mov
mov
mov
dec
scas
jp
sbb
ror
or
fwait
movsb
xchg
add
ds
int3
pop
inc
int
popf
sub
add
cmpsb
push
das
loope
jecxz
movsb
incl
xchg
mov
mov
repnz
or
out
xchg
inc
add
cmpsl
push
push
fdivp
pop
sahf
stos
mov
mov
inc
mov
xchg
sub
inc
inc
push
ffreep
mov
and
adc
jg
test
and
pop
sub
xchg
cld
in
mov
inc
or
test
add
test
sbb
inc
push
out
pop
sub
fistpll
pop
sbb
dec
mov
push
test
xor
and
xor
jmp
sub
push
cltd
popf
cmp
jge
or
mov
push
pushf
and
sbb
fcmovnbe
sub
imul
pushf
dec
jb
xor
loope
aas
or
pop
bound
xor
repz
or
subb
add
mov
loopne
pop
cmp
lcall
xchg
jae
inc
xor
and
test
pop
iret
and
movsl
xchg
stc
mov
push
int
jmp
lret
sub
and
jb
mov
push
lahf
aas
pushf
or
movsb
inc
dec
mul
jmp
push
aaa
lcall
or
iret
sti
rclb
mov
or
sbb
loope
add
add
fcmovb
stc
xchg
adc
add
mov
test
nop
jp
rcrb
jnp
nop
or
push
jmp
dec
push
dec
nop
add
icebp
shl
ss
mov
into
mov
stos
xchg
adc
xchg
scas
les
mov
mov
dec
pusha
dec
sub
mov
xchg
into
mov
mov
xchg
sbb
cli
or
idivb
sub
mov
and
flds
aaa
lock
gs
rcrl
divb
mov
sub
dec
jmp
inc
fs
xchg
mov
xlat
sub
lods
test
jmp
sub
jb
mov
inc
push
fcompl
and
in
out
cld
or
xor
jp
mov
lea
push
int
cmpsb
push
push
cmp
loop
mov
add
imul
mov
call
push
cs
push
call
push
stc
lock
movsl
insl
in
mov
add
rolb
inc
dec
data16
test
or
das
push
daa
push
jo
pop
les
xchg
and
pop
mov
in
test
and
xchg
jbe
subb
push
lcall
out
rcl
pop
stc
icebp
aas
imul
mov
mov
or
icebp
jo
in
pop
sub
loope
inc
pop
imul
in
fsubs
xlat
xchg
jmp
cs
sbb
mov
cmp
jmp
adc
fs
dec
xor
inc
add
pushl
xchg
dec
inc
mov
vpaddusb
xchg
pop
and
cmp
cmc
fcoms
cmpsb
aas
mov
arpl
cli
push
daa
lock
adc
aad
frstor
sub
xor
out
adc
mov
leave
int
rclb
sub
cmc
gs
xchg
jbe
cmc
lods
push
lods
or
and
jno
xchg
sub
scas
pop
xor
xor
push
cmp
mov
mov
push
cmpsb
mov
fisubrs
mov
xchg
ja
mov
jp
sbb
pop
je
outsb
jne
rorb
push
arpl
sti
arpl
cmpsb
mov
and
mov
in
out
cmc
je
xchg
es
xor
add
pop
mov
das
mov
pop
mov
adc
negl
std
lret
fisubs
cmp
cmp
jno
mov
popf
in
dec
xchg
hlt
jmp
and
bound
enter
and
inc
fistps
scas
sbb
test
ret
int
cmpsb
jl
in
fimuls
push
mov
pop
add
or
cwtl
shlb
gs
adc
call
jne
ds
jb
jno
inc
out
jno
jecxz
addr16
dec
sub
xchg
inc
out
les
sbb
cmovbe
mov
repz
jge
movsb
hlt
les
popl
sahf
movsl
pusha
shll
stos
and
in
cmp
ja
sti
push
adc
arpl
sbb
out
sbb
xchg
cmc
mov
das
add
inc
outsb
sub
mov
add
aaa
cltd
push
cmp
std
mov
pop
outsb
shll
test
xor
pop
notl
pop
dec
mov
jmp
or
xchg
testb
mov
cli
in
shl
xor
dec
rcrb
xchg
sar
add
insl
lcall
pop
mov
and
enter
mov
nop
cmp
sbb
loop
test
mov
fldt
xor
mov
xchg
out
rdmsr
xchg
lret
xchg
stos
mov
aas
or
or
scas
pop
pop
test
inc
gs
pop
test
aad
loop
or
xor
pop
xlat
jmp
sub
stos
push
jb
in
lea
inc
jge
mov
mov
je
ljmp
arpl
sub
sub
add
sahf
mov
xchg
or
inc
cli
push
mov
sti
dec
and
sub
fisttpl
out
out
gs
out
repz
push
fistpl
cwtl
mov
xor
leave
lds
mov
mov
andb
cs
and
ljmp
mov
mov
mov
push
outsl
pop
repz
pusha
imul
fwait
dec
add
sub
mov
mov
inc
lret
int3
stc
mov
inc
flds
negb
mov
shlb
jae
fbld
lcall
xchg
jp
xchg
sahf
push
jae
test
in
push
adc
lret
pop
adc
and
pop
push
stc
bound
or
orb
adc
or
jp
push
add
push
adc
push
cwtl
pushf
xor
jecxz
cmc
and
dec
adc
stos
mov
daa
cmpsl
mov
cmpsb
lret
fcomip
mov
mov
ja
cmp
les
xor
into
imul
scas
add
cmpsl
pop
jae
cld
cmp
std
or
sub
rcrb
addb
pop
loope
push
xchg
out
mov
or
xchg
jmp
jno,pt
adc
dec
ljmp
ret
arpl
imul
cmp
lock
test
test
cmp
mov
sahf
sbb
stos
retw
xchg
pusha
jmp
lods
adc
inc
mov
aas
cwtl
sbbb
sub
jmp
into
repnz
mov
or
repz
push
lret
jmp
push
mov
stc
mov
and
sahf
add
daa
push
fildl
sbb
adc
cmpl
call
rcrb
xchg
jnp
jb
mov
aam
and
es
pushf
lea
push
or
scas
andl
ljmp
arpl
or
cld
out
adc
dec
cltd
mov
jl
jle
and
jo
icebp
jno
jmp
into
in
cmpl
xor
fucom
adc
ljmp
clc
dec
fwait
dec
mov
mov
dec
pop
cmp
stc
push
cld
mov
mov
rcrl
push
mov
fwait
daa
sbb
mov
pop
les
fwait
mov
inc
insb
pop
sti
clc
cmp
lret
or
dec
fsub
push
out
loopne
jo
mov
pop
shrb
pushf
mov
addb
into
add
xchg
or
xchg
jno
pusha
dec
jge
iret
cld
andb
add
outsl
xchg
mov
xchg
stc
daa
loopne
mov
sbb
cli
pop
mov
inc
mov
sbb
loopne
mov
loop
push
cwtl
jno
xor
mov
rorb
cmp
fsts
lcall
lods
push
jg
mov
cmp
cld
filds
fidivrs
inc
cmp
push
loopne
repnz
jne
inc
cmpsb
dec
hlt
fwait
hlt
stos
push
cld
add
lods
adc
cmp
sbb
lret
mov
icebp
repnz
inc
push
aad
or
rolb
or
xchg
sub
test
iret
jnp
mov
sti
mov
mov
mov
arpl
outsb
adc
andl
xchg
push
mov
push
mov
movsb
inc
mov
cltd
or
movsb
sbb
lret
dec
pushl
jecxz
aam
pushf
pop
jae
aaa
sub
vpcmpeqb
mov
loop
int3
dec
mov
push
push
xchg
mov
add
enter
in
sub
out
mov
xlat
pusha
or
xchg
or
adc
adc
outsb
stos
dec
out
daa
call
and
inc
movsl
jp
xlat
xchg
stos
sub
movsb
mov
loope
push
es
add
inc
push
add
and
loop
shlb
lock
mov
popl
das
stc
lcall
xchg
movsb
push
lds
jp
inc
xchg
test
adc
jecxz
adc
in
ljmp
mov
fwait
cli
int3
std
rcrb
andb
push
movsl
mov
add
lock
rorl
fildll
push
dec
call
and
std
scas
push
icebp
jb
mov
loopne
dec
mov
jb
test
int
lea
out
mov
inc
inc
adc
mov
not
sbb
and
pop
add
xchg
mov
mov
in
rclb
rorl
add
mov
addr16
aas
cmpsl
cmp
stc
lret
and
lods
inc
xchg
cwtl
outsb
inc
imul
jge
xchg
das
idivb
add
inc
popa
nop
push
loopne
mov
push
pop
jle
and
mov
mov
mov
sbb
xchg
shll
sub
loope
sub
or
adc
or
lret
mov
insl
repnz
jecxz
or
adc
std
ret
ret
xor
daa
adc
test
inc
insb
and
aaa
inc
adc
jns
in
xlat
mov
out
scas
out
stos
inc
jg
loop
add
or
int3
scas
arpl
and
dec
popa
jae
jbe
inc
adc
xor
xbegin
dec
push
adc
sub
add
gs
call
ds
and
push
nop
lret
pop
imul
je
gs
add
push
jo
pushf
push
lret
repz
mov
add
jge
inc
mov
mov
ror
mov
fldl
inc
movsl
insb
repnz
shrl
mov
pop
repz
add
dec
sbb
xchg
testl
sub
or
dec
rorl
inc
fwait
sbb
mov
cmc
pop
test
cmp
cmpsl
loope
and
movsb
loope
jmp
or
sub
push
inc
popf
xlat
lcall
icebp
andb
add
push
mov
shlb
sbb
and
and
mov
add
inc
add
divb
adc
dec
or
mov
repnz
xor
xor
xchg
or
into
test
adc
lock
and
daa
stos
xorb
or
mov
mov
sub
jbe
shrl
gs
mov
jle
movsb
sbb
dec
cmp
test
add
shll
xchg
mov
pop
xchg
add
sbb
adc
fcmovbe
arpl
mov
popl
pusha
lret
xlat
push
lret
loopne
pop
test
or
mov
mov
pusha
mov
gs
cmp
pop
sbb
sbb
xor
jecxz
add
inc
int3
pop
sub
pop
jle
mov
out
inc
loope
in
js
push
mov
mov
lahf
xor
dec
inc
jne
mov
mov
pop
mov
mov
ror
dec
mov
test
lods
repz
cmp
movsl
ror
fsubrl
add
push
push
negl
mov
dec
or
xchg
cmc
and
jle
push
lods
shll
imul
rclb
sub
xor
test
sbb
aad
test
sub
jb
popw
mov
mov
cmp
sti
pop
mov
inc
or
xchg
test
adc
mov
mov
aad
jl
push
add
push
jge,pt
push
push
xchg
mov
shl
jp
cmp
loop
js
mov
rcrb
xor
out
aad
sub
lods
filds
cmpsb
clc
pop
jno
inc
adc
mov
add
jae
fisttpll
fcmovnu
je
fists
sub
push
pop
push
dec
push
ret
xor
stos
mov
cmp
xor
rclb
xorl
dec
mov
jns
push
or
push
mov
std
addr16
pop
pusha
stos
and
add
jbe
inc
jb
icebp
es
icebp
insl
xchg
decb
mov
pusha
and
push
push
pop
stos
adc
repnz
loope
mov
lods
dec
mov
js
orb
aaa
fidivs
sbb
arpl
test
fdivs
sbb
inc
sbb
sahf
sub
mov
dec
adc
sub
jbe
push
addr16
clc
adc
stos
mov
mov
fidivrl
arpl
cld
cmp
adc
push
popf
aam
das
lock
pop
test
mov
dec
test
and
add
cmp
adc
dec
sub
mov
lods
inc
movsb
push
adc
and
sbb
or
fmul
decl
in
mov
stos
mov
jne
dec
jns
rclb
mov
aad
fmuls
xchg
sub
xchg
inc
sub
push
inc
loope
mov
and
lock
lcall
fcoms
mull
fldcw
xchg
subl
ret
mov
nop
mov
xor
adc
stos
test
add
fstps
pop
xor
pop
fsubrp
or
jg
pusha
loop
dec
jl
pushf
popa
mov
ja
mov
mov
inc
test
pop
jmp
inc
pusha
jnp
lret
xorb
pop
call
sub
or
adc
mov
pop
jp
bound
lahf
ljmp
shr
cltd
movsl
lods
jmp
jae
push
push
stos
jmp
imul
test
cltd
data16
xor
xor
lods
test
add
fwait
pop
xor
add
mov
jmp
xchg
lret
add
cwtl
mov
fsubp
add
pop
clc
lods
dec
pop
mov
jp
or
adc
pushf
ret
dec
xchg
sbb
push
outsb
inc
mov
sbb
jne
mov
xor
outsl
mov
in
cmp
addr16
jl
and
in
popf
js
push
aam
mov
mov
cmpsl
jb
lds
mov
sbb
into
jle
inc
into
bound
sbb
dec
ss
mov
add
pushw
fsubr
cmpsl
pop
cmp
adc
lods
sbb
sub
nop
dec
inc
shll
jbe
pop
cmp
fwait
sub
jge
jg
lds
adc
xor
inc
shlb
mov
lahf
jge
pop
lds
push
add
dec
jmp
xor
fsub
cs
xor
cld
test
imul
xchg
ljmp
and
movl
das
mov
mov
mov
dec
or
push
call
sub
push
mov
jmp
or
jb
mov
in
pop
lods
sbb
dec
sub
inc
mov
sub
push
and
adc
ja
push
inc
inc
cmp
pop
rorl
in
sbb
dec
pop
add
sbb
inc
cmpsl
xor
in
mov
mov
std
push
cmp
sbb
je
cmp
mov
insb
pushf
data16
fdivrs
in
in
inc
sub
jbe
adc
decb
int
stos
mov
xor
lret
pop
mov
cli
and
dec
cmp
mov
xchg
mov
aam
mov
loopne
lock
je
xchg
and
aam
lret
daa
jne
addr16
lods
cmp
jo
pop
loope
jo
in
les
xchg
test
call
add
aad
mov
xchg
int3
jbe
xchg
test
add
hlt
push
movsl
dec
repnz
jns
cmp
mov
push
adc
sbb
movb
pop
or
mov
sub
imul
mov
test
jge
out
mov
inc
lods
int
pop
and
mov
imull
adcl
sbb
stc
sbb
pusha
mov
cwtl
out
rcl
gs
rcrl
sti
jb
out
and
jle
jmp
add
rolb
dec
movsl
lret
cmpb
mov
xchg
dec
mov
lret
xor
arpl
xor
mov
pop
and
test
dec
fstpt
aad
in
dec
lret
les
add
leave
mov
loopne
lret
ss
dec
jb
mov
repz
inc
sbb
mov
test
jle
cmpsb
insb
data16
jo
push
fldt
out
mov
dec
fnstcw
leave
push
xchg
test
pop
xchg
xchg
xor
int3
xchg
js
lock
inc
lret
scas
jo
adc
jae
pop
outsl
mov
jle
je
xor
int
subb
scas
adc
mov
adc
and
mov
sub
sub
xchg
push
push
loop
add
push
outsb
enter
popf
inc
cmpsl
fsubrs
adc
push
stc
pop
shrl
xchg
aam
ljmp
nop
nop
or
dec
dec
cmpsl
dec
lcall
inc
mov
push
fs
repnz
fcomi
adc
std
pop
fnstsw
jle
dec
sti
dec
push
mov
cmpsb
add
inc
loopne
jne
and
test
fs
jg
mov
jmp
nop
clc
cmpsb
int
ja
xor
xchg
jb
in
fmul
andb
sbb
rcl
incl
sbb
jns
push
sahf
mov
call
mov
inc
lds
dec
gs
data16
test
shr
stc
jge
inc
or
repnz
nop
ss
sub
mov
ss
sbb
out
enter
mov
mov
add
pusha
push
add
xchg
outsb
mov
and
fnstcw
and
in
mov
jb
cld
mov
push
andb
repnz
push
or
mov
cmp
fnsave
das
call
add
push
int3
pop
push
sub
div
sub
xchg
into
addr16
dec
mov
xor
cmpb
xor
gs
mov
jmp
rcrl
sti
movsb
subb
and
or
mov
loopne
jg
dec
inc
test
test
add
jae
mov
jmp
call
cmpsl
insl
ljmp
ja
push
sbb
sbb
inc
into
sahf
out
jecxz
rclb
into
jbe
adc
rolb
cmpsb
dec
add
sbb
lcall
es
xchg
test
rcll
daa
out
movsl
rclb
cmp
jno
stos
out
fbstp
xchg
imul
push
jle
add
enter
pop
jle
inc
mov
add
cld
mov
jnp
pop
repnz
icebp
xchg
lret
sahf
cwtl
mov
test
jge
add
pop
xchg
movsb
and
pop
mov
jbe
in
pushf
jnp
shll
ret
bound
popf
int
insl
jo
out
cld
inc
xlat
imul
xchg
enter
fcompl
lahf
movsb
lret
jp
add
dec
jo
orl
outsl
mul
and
pop
mov
dec
das
add
sub
imul
pop
mov
rcrb
fbld
nop
outsb
add
and
mov
imul
fisttpll
cmp
lret
adc
jl
lods
fisubrl
mov
sub
fcomp
mov
cmpsl
mov
xchg
xchg
inc
jp
dec
mov
sub
sbb
lea
mov
push
add
add
dec
out
add
fmuls
mov
adc
xchg
mov
xchg
sti
leave
int
les
xorl
ja
xlat
mov
icebp
cltd
pop
addb
mov
popf
movsl
cmc
jns
or
xchg
outsb
jmp
inc
aad
sub
test
sar
imul
inc
mov
fistl
or
bound
sbb
jns
jno
les
jne
sbb
pop
adc
out
jp
or
int3
in
fidivrs
ret
fsubrl
aas
aam
mov
jge
addr16
outsl
vcomiss
cld
sti
mov
insb
decl
stos
lret
sub
in
fidivrs
cmp
jae
shrb
cmpsb
pop
pop
jle
inc
insl
ret
iret
int3
mov
aas
sbb
dec
push
add
pop
xor
dec
pop
push
add
jge
push
ret
shrb
ffreep
push
fs
je
adc
clc
sbb
push
mov
repz
mov
in
xchg
dec
mov
nop
out
or
pop
and
ss
sub
enter
rcr
push
push
mov
repz
and
pop
mov
dec
jne
pop
mov
push
mov
ljmp
dec
or
sub
inc
mov
jge
cmp
mov
mov
nop
mov
jle
je
push
enter
enter
movsb
out
mov
mov
and
scas
or
rcl
pop
test
sbb
push
xchg
add
push
jg
lfs
arpl
mov
and
xor
adcl
popa
hlt
and
adc
cld
mov
outsb
lret
cmp
push
cmp
xor
mov
test
sbb
stc
fcmovnu
push
int
and
inc
insb
lock
and
add
add
add
add
jbe
xor
sub
ss
push
jmp
fidivrs
cmp
es
sub
jno
or
cltd
das
sbb
jb
icebp
lret
mov
stc
mov
cmpsb
jl
inc
sub
push
dec
imul
cmpsl
jecxz
fdivr
out
push
sbb
dec
and
and
pop
sub
push
mov
scas
inc
xchg
mov
cmp
fdivrs
mov
fcmovne
cli
int3
scas
xchg
pop
lock
adc
fs
mov
adc
cli
add
das
stos
pop
lock
xor
rcrb
cmpsb
and
dec
pop
int
imul
lods
je
inc
dec
dec
test
dec
cs
inc
inc
in
add
lds
jp
mov
jl
xchg
mov
push
sbb
dec
push
cmp
sbb
les
inc
hlt
arpl
cli
mov
in
data16
cmc
movsl
adc
scas
js
adc
jbe
mov
sbb
sahf
rolb
in
fsubrl
sub
sahf
mov
or
or
pop
adc
push
xlat
inc
lret
stos
jno
cmp
pop
rcrl
imul
int
aam
movsl
faddl
outsl
into
push
shll
xor
sti
fmull
and
imul
je
jle
and
xor
and
adc
xchg
int
daa
add
dec
adc
jg
push
pop
xor
inc
xor
cmp
loope
popa
dec
push
xor
jl
push
loopne
jne
push
rcll
pop
xlat
negl
jp
int
push
inc
stos
xchg
fstpt
mov
movsb
mov
mov
mov
lods
cmp
lea
mov
insl
popa
fsts
inc
fwait
adc
adc
inc
mov
xchg
cmp
int3
cwtl
andl
and
bound
cmp
mov
scas
arpl
and
pushf
mov
push
and
push
lods
inc
pop
mov
ja
gs
popf
popa
pusha
and
test
jnp
dec
dec
mov
in
inc
and
ljmp
or
cld
jo
into
xlat
dec
mov
add
jbe
lahf
xchg
sbb
daa
mov
lea
push
scas
add
fdivrp
enter
icebp
xchg
andl
or
data16
add
lret
es
or
popa
and
inc
loope
js
push
jae
jle
nop
pop
inc
mov
mov
sub
movsb
mov
dec
add
and
xor
push
sub
mov
bound
and
jmp
sub
cmp
mov
jno
cld
sbb
mov
lock
inc
dec
stc
pop
movsb
add
dec
sahf
gs
scas
iret
pop
repz
je
int3
jp
xlat
pop
cmp
sbb
std
mov
push
dec
insl
loope
jp
push
lret
sbbl
or
jge
and
xorb
mov
aas
notl
sub
and
lea
mov
cmpsl
xor
test
mov
mov
dec
andl
push
xchg
in
bound
adc
cltd
sahf
adc
push
and
sub
cmpsb
insb
test
add
daa
pop
cmp
fisttpl
test
xlat
mov
idiv
add
daa
out
pop
add
adc
mov
rcr
mov
fisttps
movsl
push
pop
adc
or
push
faddp
ret
in
xor
pop
dec
push
stos
xchg
lods
cmpsl
inc
push
and
adc
call
pop
pop
cmp
add
ja
outsb
fisubs
out
mov
lcall
imul
or
jmp
or
xor
dec
shlb
and
rclb
adcb
push
inc
add
loopne
in
and
mov
mov
mov
lods
push
mov
push
in
inc
stc
popf
arpl
lahf
imul
hlt
adc
xor
hlt
mov
and
mov
jb
cmp
ljmp
dec
iret
in
mov
addr16
push
mov
aaa
rcrb
cmc
push
push
idivl
sub
mov
mov
lret
xor
cltd
jle
sbb
and
out
mov
jbe
push
ljmp
aad
outsb
lds
jmp
inc
pop
sbb
sbb
dec
xlat
shrb
mov
mov
mov
add
adc
sarb
xorb
add
mov
sbb
mov
sub
jbe
insb
xchg
movsb
push
cltd
int
and
mov
xor
ret
jl
out
adc
cmp
or
fwait
lods
dec
stos
jnp
jmp
add
aaa
sbb
call
dec
adcl
repz
fnstenv
sbb
inc
in
mov
idivl
bound
jbe
push
mov
hlt
pop
sbb
enter
inc
push
jns
mov
pop
cmp
scas
imul
fwait
sub
nop
mov
mov
xchg
cmc
fists
pop
stc
mov
aaa
pop
enter
lcall
in
out
loopne
xor
in
cld
mov
int
fnstsw
orl
nop
lods
dec
push
mov
jl
sbb
addr16
mov
cmpsl
fcmovnu
out
insl
push
es
test
ljmp
dec
adc
jg
pop
in
out
jl
jl
adc
push
or
test
mov
cmp
int3
rcll
cli
cwtl
jge
cld
push
sub
fdivp
push
or
xor
jmp
push
out
mov
sub
jns
jp
in
mov
fstpl
in
mov
stos
cmp
pop
insb
jecxz
adc
cs
sbb
mov
jmp
jl
dec
or
inc
pop
inc
jo
pop
das
pushf
je
sbb
push
xor
mov
jns
test
fdivrs
cmpsb
push
mov
das
ror
push
ss
push
xchg
out
lret
cmp
push
inc
fisttpll
pop
push
pop
mov
push
jns
push
je
fidivs
xlat
movsb
jne
push
hlt
xchg
sub
fldl
adc
sar
outsb
testb
sub
dec
leave
push
mov
repz
cmp
jmp
xchg
sbb
mov
lcall
pop
push
jo
dec
lahf
jae
xorb
mov
imul
mov
loop
out
and
sbb
cmp
imull
mov
mov
push
mov
rclb
jne
fs
push
jns
incl
cs
jo
mov
je
and
inc
jno
rolb
sbb
outsb
xlat
sbb
jle
sbb
xchg
mov
mov
mov
push
popa
pop
xchg
ljmp
adcb
js
adc
andl
inc
stos
cld
jle
dec
inc
pop
xlat
ficomps
sub
jns
jmp
pop
xchg
sub
jbe
lret
pop
and
sub
jmp
sbb
lcall
push
arpl
cmp
out
cmp
movl
mov
mov
push
in
push
or
ja
outsl
cmpsl
dec
xlat
nop
push
in
adc
mov
or
and
mov
scas
adc
sub
lea
fisubrs
ss
inc
out
xchg
sbb
xchg
sub
adc
or
sbb
sub
mov
cmp
ljmp
ljmp
inc
jmp
pop
or
jecxz
push
sbbb
mov
scas
aam
stos
xor
xchg
pop
fucom
lods
ret
ret
sub
mov
addr16
push
fmuls
cmp
out
pop
lret
mov
adc
push
adc
testb
sbb
cmp
loop
pop
ret
gs
repz
mov
and
xchg
cld
mov
clc
cmc
ficompl
out
out
enter
stos
test
scas
cwtl
jo
mov
ss
or
push
pop
add
jb
popf
cwtl
pop
imul
popf
mov
hlt
adc
or
xchg
jl
push
sub
insb
pop
mov
test
cli
jnp
lcall
movl
xchg
lods
aaa
jae
sahf
mov
push
in
mov
dec
test
add
int3
insb
inc
addr16
out
pushf
in
xor
pushf
and
mov
daa
dec
cmpsl
clc
xor
gs
or
cmp
sub
popa
loopne
xchg
std
jle
fidivs
sub
cwtl
jle
out
lods
rorl
cld
test
pop
cmc
aaa
loop
aad
in
insb
sti
push
inc
add
pmulhuw
cmp
or
dec
push
fsubrp
iret
mov
lock
inc
push
or
mov
ljmp
fmull
lods
bound
ret
jmp
clc
movsb
add
daa
jle
push
jge
adc
jb
lds
sbb
movsl
and
ficoml
mov
jmp
xchg
cmpsb
arpl
in
fdiv
mov
or
and
loope
mov
push
lret
out
add
sub
dec
pop
stos
push
and
orb
add
imul
cwtl
pop
cmp
fisttpll
push
mov
test
mov
jno
ljmp
sub
lcall
lcall
loope
fcoms
dec
add
or
fldenv
mov
cli
fs
cltd
inc
cld
xchg
out
mov
data16
xchg
pop
mov
leave
inc
and
sbb
scas
rclb
adc
in
cmp
cmp
jne
stos
pop
cwtl
mov
jo
insb
push
fisubs
pop
test
add
movsb
test
in
js
dec
adc
inc
cmpsb
pop
aad
inc
in
lcall
lcall
shrl
scas
mov
xorb
outsl
inc
ljmp
ljmp
paddsw
or
push
mov
dec
dec
jne
push
and
push
leavew
mov
and
inc
int3
nop
fisttpll
in
out
xchg
fisubl
mov
xlat
inc
jae
or
mov
pop
out
icebp
cltd
push
bound
inc
jne
push
sbb
xchg
rcrb
mov
ss
fsub
sahf
movsb
inc
cmp
mov
cmp
and
aas
outsl
xchg
or
push
sub
mov
and
xchg
adc
pop
std
adc
imul
push
xor
shll
push
mov
popf
xor
cmp
outsl
into
push
dec
movsb
inc
into
scas
mov
mov
push
xor
jg
xor
xor
les
arpl
push
sub
xchg
test
aad
mov
rcrb
notl
in
push
cli
sahf
xor
sub
test
mov
lcall
xor
js
cmp
sbb
mov
mov
popa
cli
arpl
or
push
testl
xchg
push
imul
imul
xor
fimull
nop
add
fstp
cmpsl
popf
pop
inc
jg
es
in
lock
call
and
clc
fcomip
pop
icebp
mov
cmc
stos
addr16
cmp
adc
lcall
cs
jl
orb
cwtl
add
pusha
hlt
add
in
pop
and
stos
sbb
mov
lret
cmp
push
popa
andb
ljmp
or
bound
cwtl
jge
mov
cmp
xor
fcomps
mov
outsl
sub
dec
dec
xlat
jg
mov
hlt
addr16
sbb
jl
sarl
and
out
ret
movsl
mov
lahf
or
inc
push
xchg
call
push
ret
sbb
cli
movl
out
sub
ficompl
fnsave
fcmovbe
push
orl
int3
sub
xchg
push
scas
xor
movsl
jle
jmp
mov
sbb
scas
push
sahf
cld
add
mov
aaa
inc
cmp
loopne
xor
fcomps
xchg
outsb
mov
out
push
scas
movsl
sbb
sbb
js
mov
push
loope
jnp
xor
jb
sbb
popa
add
std
in
mov
fdivs
mov
imul
xor
mov
aam
add
outsl
push
mov
mov
xchg
icebp
shl
pusha
and
fistpl
imul
pop
xchg
fsubrs
mov
imul
cli
rcrb
loopne
out
fs
xchg
je
and
lods
add
pop
pop
pusha
lods
mov
das
xchg
cmp
xchg
cs
in
out
js
gs
aaa
sub
insl
mov
das
add
js
mov
or
lods
adc
aad
or
popf
leave
iret
xor
xlat
shrl
clc
push
cmc
mov
lds
ljmp
adc
test
add
les
scas
pop
sbb
or
shrl
arpl
inc
xchg
pop
daa
push
mov
aas
cmp
call
pop
repnz
adc
int3
and
addr16
into
sub
pop
mov
jecxz
push
mov
xchg
inc
inc
outsl
icebp
pop
in
mov
mov
loop
in
mov
sahf
cld
rcll
cltd
clc
mov
mov
xor
push
loope
pop
iret
pop
std
jecxz
sbb
jbe
xchg
pop
push
and
xchg
pop
cli
fldenv
outsl
cmpsb
ljmp
jb
push
or
fstps
nop
addr16
xchg
dec
xor
sbb
cmp
sbb
sub
sahf
jae
inc
xor
sbb
jae
jmp
mov
add
adc
or
add
imul
repz
push
pusha
or
jge
cmp
dec
cltd
in
push
mov
fisubrl
pop
xor
dec
fiadds
jo
add
loopne
mov
popf
and
cmp
jno
inc
and
cmpsb
das
das
gs
inc
xchg
xorb
pushf
mov
aam
mov
xor
pop
ror
push
sub
popf
sti
and
fcmove
test
rorl
in
push
mov
jg
pop
imul
ret
nop
insl
fwait
pop
jecxz
fistps
lret
mov
mov
and
dec
inc
push
fmuls
sbb
or
mov
inc
jp
psubq
aas
push
or
and
or
adc
movsb
cld
add
jp
pop
lods
cmpsl
pop
das
mov
pop
pop
or
cmp
mov
out
incb
xlat
mov
cmp
ficompl
push
push
cmp
inc
inc
mov
sub
xchg
hlt
js
mov
iret
jmp
jp
add
lea
mov
arpl
jmp
bound
shlb
loop
sahf
inc
sub
clc
lahf
pop
mov
dec
mov
sub
inc
in
enter
aas
out
inc
push
push
aad
outsb
inc
cmp
mull
jp
xchg
ret
mov
adc
ss
jno
xchg
mov
or
mov
out
iret
aam
xor
adc
mov
mov
aam
xor
mov
mov
mov
out
loop
adc
sti
mov
add
push
scas
ret
mov
aam
sbbl
ret
dec
test
xor
or
push
xor
in
aad
fcoml
gs
mov
xchg
add
xchg
mov
push
outsb
dec
lahf
mov
sarb
mov
jb
enter
fidivl
mov
mov
nop
ja
inc
xor
andl
sbb
sbb
shl
mov
cltd
aad
push
dec
push
in
dec
jg
push
leave
push
fmul
push
sbb
ret
test
cmpsb
xor
jle
pushf
push
fsubrp
arpl
loop
adc
test
push
cld
ret
xchg
or
fnsave
mov
dec
scas
jle
cmp
out
mov
das
scas
xchg
pop
stc
nop
jnp
jle
dec
pusha
rolb
lock
dec
mov
fwait
adc
fisubs
fsubrs
mov
int
fcoml
push
inc
cli
loope
cmpsl
cmp
sbb
inc
pop
adc
cmp
add
out
and
adc
pop
cmp
jge
or
jnp
movsb
aam
dec
in
es
pop
adc
lods
jp
fiaddl
sbb
mov
adc
inc
aas
sbb
push
aad
push
sar
inc
cmpl
gs
imul
add
and
test
push
inc
leave
orb
neg
xchg
pop
mov
fs
dec
or
push
loop
fildl
sub
test
push
adc
sbb
push
into
jae
mulb
xchg
fcoml
inc
or
outsl
mov
arpl
mov
jo
add
sub
jmp
sub
add
mov
mov
mov
mov
enter
dec
sub
mov
mov
inc
pop
stos
xor
out
les
js
iret
or
mov
daa
pop
out
jo
sbb
and
push
sub
subb
jge
mov
sbb
setns
sbb
cmp
jl
mov
bound
mov
call
inc
arpl
repnz
int3
adc
and
and
iret
call
add
fwait
cmp
mov
adc
aam
xorb
pop
push
lds
jns
ljmp
mov
lret
jl
push
sub
in
pop
jo
sub
mov
ret
push
cmp
mov
and
sbb
fistpl
lahf
xor
fldenv
popa
in
out
push
pop
adc
pop
mov
dec
sub
int
rolb
push
lods
pop
out
jl
es
mov
cs
cmp
shrb
movsl
sbb
push
fcmovu
sbb
push
mov
lahf
mov
arpl
mov
std
loope
imul
aad
jb
adc
negb
or
sbb
cmp
mov
in
adc
in
xchg
xchg
or
mov
dec
pop
pop
push
in
pop
cld
insb
mov
cmc
jl
out
pusha
mov
pushf
outsb
lea
adc
cmpsb
or
lret
js
sbb
iret
pop
mov
out
test
and
ljmp
adc
cwtl
iret
add
daa
mov
push
sbb
adc
in
fs
and
xchg
mov
mov
movsl
pushf
mov
js
dec
pop
lret
pusha
aam
js
mov
push
lahf
fisubrs
lea
enter
xor
pop
sub
cwtl
jp
or
aam
or
xor
movsb
outsb
data16
jg
sbb
sarb
push
mov
inc
ficomps
idivb
cld
push
xor
xlat
outsl
xchg
loop
push
and
fcmovne
aas
pop
sarl
sub
cwtl
mov
sbb
mov
xchg
cmpsb
or
dec
push
mov
rcl
adc
je
xchg
fwait
sbb
sub
xchg
in
xchg
jg
popf
fs
xchg
aam
imull
loope
inc
mov
jne
bound
cmpsb
and
dec
adc
cmp
fidivrs
mov
jge
push
lds
rorb
and
subb
cmp
mov
nop
rorl
mov
in
inc
in
mov
jl
pop
jp
aam
jl
mov
insl
adc
enter
sbb
jnp
fidivs
rcll
jecxz
iret
cs
push
repz
andl
imul
sbb
mov
dec
js
dec
and
pop
aad
sahf
test
les
lret
xor
cmp
mov
test
jns
es
in
push
sbb
xchg
popa
pslld
pop
lock
int
sbb
xchg
cmp
jo
out
push
pop
lcall
sub
push
pop
cmp
sar
out
add
lcall
adc
push
lods
testb
mov
cmp
mov
xorl
clc
pop
insb
call
stos
rclb
jge
out
ljmp
mov
mov
pop
iret
xchg
xchg
fnstsw
mov
aad
test
sub
filds
xchg
dec
add
mov
sahf
adc
mov
push
pop
cmp
mov
in
aad
jp
sub
xchg
jne
add
mov
dec
jg
test
cwtl
xor
xor
inc
mov
push
cmp
cmp
daa
cwtl
xor
inc
adc
mov
shrb
jne
or
push
xor
or
jmp
mov
mov
outsb
jl
dec
sub
bound
mov
imul
jae
add
cmp
frstor
or
loop
enter
mov
sub
cmpl
xlat
lods
sbb
sbb
in
and
jp
test
aad
jg
push
out
sub
scas
xchg
fstp
xchg
and
mov
pop
add
in
test
dec
loopne
lock
js
xchg
mov
sub
push
pusha
hlt
sub
pop
sub
loopne
ljmp
and
loopne
dec
lds
scas
add
divb
jmp
or
das
clc
xchg
push
xchg
sub
ja
fistl
pushf
mov
or
popl
xchg
clc
je
jg
loopne
shlb
mov
mov
sbb
push
xor
add
xchg
pushf
aaa
mov
push
and
sbb
dec
int3
inc
shll
repz
hlt
test
xor
hlt
xlat
mov
push
loop
jne
mov
xchg
inc
lret
jae
in
lock
dec
mov
pop
aas
adc
cmp
int
fwait
mov
cmp
xor
adcl
mov
sbb
int
jo
xchg
xor
std
jbe
xchg
or
das
mov
orw
xchg
cmpl
and
mov
lods
sub
sub
jne
clc
stos
add
cmp
ss
jp
or
test
push
jmp
mov
ja
jp
lret
pop
pop
mov
stc
xor
clc
loop
imul
lods
xor
xchg
cmpsl
jbe
mov
xor
sti
sub
jge
insb
mov
aas
lock
jnp
or
lahf
jns
mov
pop
pop
call
pop
jge
mov
cld
inc
mov
push
jmp
xorl
shl
repz
mov
int3
ss
xlat
push
mov
xlat
mov
xchg
sbb
jnp
fnsave
rcll
fidivrl
int
hlt
xchg
sarb
aad
xchg
dec
add
inc
push
ds
adc
jmp
and
ja
and
dec
outsl
jo
cmpsl
iret
pop
add
xor
pop
mov
imul
mov
js
mov
inc
add
pusha
jp
mov
sub
push
xchg
jmp
pop
adc
loop
test
xor
cmpsl
int
lods
aas
mov
adc
ja
mov
enter
dec
test
inc
mov
leave
cltd
dec
stos
sbb
les
cmp
sahf
lds
pop
dec
and
jbe
repnz
and
clc
mov
xor
and
les
pop
jmp
and
dec
nop
pop
ja
inc
mov
mov
jge
gs
pop
fidivrs
inc
mov
out
xchg
xor
inc
inc
inc
popf
ss
clc
aas
fsts
movsl
loopne
mov
addr16
dec
sbb
jb
pop
jbe
and
fstl
jb
outsl
mov
pop
das
push
jnp
jmp
bound
fdivrs
inc
cmp
cmp
fiaddl
and
xor
popf
inc
mov
cmp
or
xor
sbb
test
insl
mov
mov
enter
jp
shrl
loopne
add
int3
out
sub
clc
mov
lret
or
gs
jle
loopne
inc
ljmp
je
inc
push
add
popf
mov
jge
in
adc
xchg
xchg
pop
je
lret
dec
jmp
test
cmp
test
nop
pushf
mov
mov
inc
mov
xchg
push
jg
mov
popa
pop
xchg
adc
xchg
inc
ffree
outsb
ja
inc
xor
cmpsb
dec
inc
loope
push
movsl
sbb
loope
or
mov
insb
dec
inc
popa
sarl
jne
xchg
dec
ss
inc
pop
aad
mov
imul
adc
jmp
inc
fstpt
inc
push
xchg
push
shlb
orl
or
cmp
add
aaa
popl
mov
dec
fimuls
adc
pop
fs
jne
push
mov
in
jl
or
fstl
xor
daa
ljmp
mov
adc
hlt
jb
jbe
push
cli
arpl
cmp
push
pop
pop
cmc
mov
mov
movsb
add
mov
wbinvd
push
lds
sahf
cmp
cwtl
cmp
sub
shll
sub
xor
mov
xorl
jae
push
jno
mov
push
mov
jns
dec
aas
mov
cmp
or
push
xchg
cmpsl
aam
outsb
movq
cmp
je
sub
inc
data16
mov
daa
pop
clc
mov
jno
sarl
test
inc
sub
out
xor
in
mov
xor
mov
test
lock
nop
stos
scas
xor
or
cvtps2pd
or
or
inc
mov
dec
jbe
std
mov
xchg
pop
flds
or
xchg
jle
out
sbb
dec
xor
xor
jbe
and
xlat
in
loop
inc
push
sub
push
movsb
push
xor
rolb
mov
arpl
xor
lcall
push
add
lret
jne
sbb
pop
ljmp
jg
gs
lcall
inc
sahf
xlat
xchg
jmp
rcll
and
inc
daa
out
xchg
sti
mov
les
jo
cmpsb
dec
hlt
hlt
rolb
mov
inc
mov
fisubs
stos
sub
push
fiadds
sub
and
aaa
jp
shlb
sbb
cmp
mov
jb
mov
dec
lret
ret
subl
test
test
xchg
ret
dec
lahf
loop
adc
arpl
or
mov
xor
sub
lahf
movsl
fwait
inc
push
int
xlat
xchg
repnz
and
mov
in
ss
add
out
push
xchg
mov
ja
jg
mov
inc
cmp
ret
inc
sarb
cld
cld
pusha
fucomp
idivl
add
sub
js
clc
pop
mov
nop
mull
cwtl
sub
test
add
xor
push
inc
rcll
jmp
push
mov
pop
xor
mov
jg
inc
sub
sub
push
arpl
xor
call
aad
mov
xchg
ret
test
pop
loopne
add
sbb
push
repz
sub
pop
dec
adc
in
cltd
movsl
lds
cmc
push
fidivs
jae
in
lret
jle
inc
add
daa
decb
movsl
jne
insb
jmp
lret
jnp
cmp
shll
movl
scas
sbb
pop
outsl
int
inc
repnz
xor
inc
outsb
ret
push
jno
sub
mov
mov
inc
xor
shl
mov
xor
jo
mov
movsb
lock
int
jg
or
adc
dec
shll
inc
add
test
rol
test
sbb
mov
push
sub
popf
stc
mov
test
push
sahf
xor
ja
jns
mov
ficomps
mov
mov
xchg
movsl
stc
fsubrp
mov
lret
pop
je
aaa
mov
test
mov
iret
repz
test
loop
stos
jne
mov
cmpsb
mov
insl
in
push
stc
aam
pop
ffree
call
push
inc
fwait
sbb
jmp
repnz
jno
lahf
pop
test
cwtl
or
out
es
fwait
cmp
mov
cli
xchg
or
add
jb
xchg
into
mov
jo
inc
dec
ss
fwait
stos
dec
mov
movsl
mov
bound
daa
cmp
pminsw
cmpsl
xor
cmp
jo
scas
sbb
fwait
ds
cs
andl
jg
push
jmp
rcrb
push
sbb
ror
aam
int
push
pop
or
imul
into
cmpsl
sub
jge
cmp
dec
ficomps
test
xchg
arpl
sbb
daa
pop
xor
adc
dec
jl
aam
pop
pop
loopne
cmp
sub
clc
ss
sub
cmpsl
ljmp
loopne
adcb
xorl
or
add
movzwl
addr16
xchg
pop
ret
movsb
inc
test
lret
popa
mov
and
jge
mov
imul
nop
push
daa
sbb
pushf
and
out
mov
repz
mov
inc
test
out
in
xor
push
test
daa
mov
lcall
mov
sti
mov
dec
sbb
xor
ret
jl
faddl
dec
inc
xor
mov
cmp
jae
std
scas
subb
jmp
jno
adc
loopne
das
jle
fistps
out
cltd
in
sub
call
push
je
push
dec
lods
lret
adc
xchg
mov
je
movsl
nop
bound
xchg
mov
sub
and
dec
ret
rorl
iret
out
sbb
lret
daa
fildll
xchg
out
sbb
ja
sbb
jg
ljmp
adc
mov
out
jl
xor
jo
add
mov
jb
xchg
lcall
icebp
sarb
je
int3
aaa
inc
jo
add
mov
test
daa
mov
sub
ficompl
and
push
clc
sub
xor
adc
in
lock
int3
rorb
inc
psrlq
jns
scas
sbb
pop
iret
dec
cmpsl
sub
in
mov
dec
int3
add
inc
lods
xor
nop
lcall
lret
shll
inc
cmp
mov
jl
xchg
mov
movsl
out
inc
iret
mov
push
jge
jae
into
mov
inc
test
mov
arpl
rcll
pop
cmp
jecxz
mov
pop
lret
fldenv
into
inc
and
sub
jge
sub
push
xchg
addl
xor
jno
rcrb
cmp
xor
mov
or
cmp
mov
sahf
fwait
imul
dec
jnp
lock
rolb
add
pop
and
fldt
add
repnz
jge
shr
fbld
aad
rcrl
cwtl
sbb
inc
ret
push
sbbl
arpl
sub
and
and
cltd
repnz
and
sub
push
push
imul
fbld
xor
adc
cmpsb
lock
and
sbb
jmp
cltd
xchg
xlat
es
pop
lahf
push
andb
cmp
add
mov
in
ret
inc
mov
sub
adc
out
out
xchg
sbb
and
dec
lods
mov
inc
sbb
scas
sbb
xchg
in
adc
fucomi
icebp
fwait
in
ss
lods
dec
mov
sbb
xor
je
push
lahf
push
push
add
cmp
cli
dec
mov
mov
and
movups
cmpsb
xchg
mov
pop
loope
lods
lret
push
mov
sub
rol
or
es
mov
dec
mov
push
mov
jle
clc
rolb
into
mov
roll
xlat
push
dec
int
mov
push
mov
adc
dec
mov
mov
mov
push
cld
popf
enter
dec
lret
jl
cmp
add
lret
out
xor
add
scas
adc
adc
lods
js
xor
mov
push
inc
outsb
lods
mov
push
sti
scas
adc
xchg
ret
xchg
sub
sbb
jbe
dec
leave
inc
and
lcall
aad
cmp
sbb
mov
or
dec
mov
rcr
into
bound
xchg
mov
ret
push
loope
jmp
pop
pop
jbe
lahf
xchg
sub
mov
jo
mov
dec
testb
xchg
push
test
cmpsl
out
dec
lds
jg
out
fsubrl
pop
xchg
cwtl
and
enter
mov
daa
jae
outsl
fcmovnu
dec
adc
fdivp
and
dec
jno
push
lcall
shrl
pop
and
subb
cmpsl
test
adc
inc
push
fwait
jmp
mov
mov
mov
xchg
push
mov
in
ss
pop
lret
icebp
inc
fwait
imul
jae
sbb
push
out
mov
mov
out
xchg
pushf
ss
inc
xchg
lods
push
insl
outsl
mov
xchg
into
cltd
subl
pusha
add
dec
inc
js
sti
fiadds
call
pop
pop
mov
sbb
xchg
ja
imul
push
stos
sbb
clc
cwtl
gs
push
movsb
mov
mov
mov
and
lea
sbb
shll
fidivl
jno
sbbb
lea
push
pop
ret
ret
mov
into
mov
mov
xchg
subb
mov
aaa
cwtl
dec
jmp
testl
mov
push
or
insb
cmpsb
lock
inc
adc
sahf
jo
or
popa
or
mov
aaa
mov
mov
mov
outsl
addr16
mov
pop
repnz
add
mov
mov
fwait
pusha
sbb
dec
jp
aaa
jg
test
leave
arpl
test
jl
outsb
subl
icebp
fs
dec
ret
cli
push
push
adcb
sbb
cmp
or
loop
pop
loope
add
leave
out
lods
cmp
scas
mov
push
loope
adc
cmc
outsb
out
mov
push
dec
pop
push
scas
rolb
dec
lock
test
mov
fcmovb
mov
xlat
pop
add
push
fprem
data16
and
push
stos
ficoml
sti
push
jno
rclb
filds
lods
popf
ljmp
outsb
lods
push
xor
rol
in
jp
testb
sbb
lcall
mov
pop
add
aas
faddl
pop
cmp
in
xchg
pushf
rorb
sahf
lock
sbb
push
jle
dec
fsub
sbb
scas
xchg
mov
repnz
clts
xor
add
ss
xor
aaa
negb
cs
test
mov
adc
sarl
xchg
pop
es
lds
insb
mov
mov
lds
pop
ficoml
test
pop
adc
outsb
hlt
mov
add
cltd
mov
adc
scas
jge
mov
test
out
cli
or
jmp
in
mov
cs
filds
insl
scas
rcrb
sub
sbb
das
lock
adc
mov
bound
mov
fwait
cwtl
fsubl
aas
pop
inc
hlt
sbb
pushf
mov
jmp
test
xchg
xchg
aaa
out
cmp
cld
pop
add
push
fisubrs
lcall
push
dec
loop
sbb
push
xchg
sub
lahf
or
in
fcmovb
push
sub
pop
rorl
fiaddl
and
mov
cmp
mov
push
add
inc
sub
cld
inc
out
dec
sbb
fidivs
cmc
adc
es
jns
fcomip
cmp
xor
xor
fdivs
pop
pop
jge
mov
mov
aaa
jnp
xchg
xor
inc
inc
or
fwait
and
xchg
dec
mov
ljmp
or
es
xor
or
aad
dec
xor
adc
cli
notb
movsl
sti
dec
jno
aad
mov
dec
stc
cmp
test
out
shll
dec
in
repz
mov
lahf
xchg
push
sub
push
in
cmp
mov
cs
xchg
js
outsl
and
adc
pop
sarb
push
xchg
adc
and
dec
icebp
movsb
psubusw
mov
xchg
xor
sbb
sbb
inc
dec
lds
cmp
cmp
jp
sbb
pushl
xor
cwtl
mov
clc
add
xor
add
lcall
repnz
add
xor
sub
or
mov
pushf
jnp
cli
and
repz
pop
ss
lock
xchg
popf
fcoml
push
mov
mov
or
dec
push
or
sahf
jno
dec
xchg
pusha
xchg
or
inc
fdivs
cmpb
loopne
fmulp
sahf
aas
cmp
call
punpckhwd
cmp
popa
xor
rorl
loopne
sub
lock
stos
xor
inc
iret
divps
mov
aam
leave
mov
dec
bound
pop
cld
xor
mov
inc
adc
cmpsb
cli
mov
outsl
mov
mov
mov
push
jns
push
fdivp
pop
insb
sbb
sbb
xlat
cltd
sub
or
ja
sti
popa
cli
test
sub
clc
xchg
push
fbstp
cmp
pop
outsb
dec
xchg
sub
sbb
movsl
cmp
loopne
jne
push
and
in
sbb
shl
adc
lods
call
sbb
inc
stc
repz
call
jbe
xchg
fldcw
dec
dec
leave
call
jns
xchg
xchg
loopne
jecxz
and
lret
sub
ret
or
ljmp
xchg
dec
ss
int3
jo
loop
test
in
orl
adc
insl
daa
cwtl
or
pop
dec
mov
and
mov
mov
adc
nop
lahf
hlt
popa
sbb
clc
ret
repz
iret
repz
push
sahf
mov
daa
cmpl
cld
outsb
xor
add
push
mov
pop
fnstcw
sahf
cmpsl
ret
icebp
pop
jne
mov
cmpsl
xor
lds
dec
stc
jnp
xchg
outsl
or
lods
mov
ret
fnstenv
lret
popa
xlat
lds
dec
sarl
add
insl
fs
mov
jecxz
sub
stc
incl
aas
mov
adc
stos
jmp
mov
setne
inc
lret
add
add
int3
xor
cmp
cmp
sub
inc
scas
push
fidivrs
sub
icebp
add
js
xchg
cmp
push
mov
xor
movsb
cpuid
and
push
inc
lods
pop
rcrl
mov
or
mov
mov
ljmp
xor
push
mov
xlat
dec
jecxz
xchg
mov
cmp
sahf
pop
mov
adc
sti
cmpb
mov
and
adc
jbe
sbb
std
pop
or
sbb
scas
adc
adc
outsl
rcll
sub
xchg
push
in
inc
jp
outsl
mov
push
inc
adc
rcrb
jbe
rolb
mov
mov
and
mov
bound
dec
inc
xlat
mov
jbe
xlat
add
add
jp
and
popf
aas
mov
subb
xchg
adc
imul
push
shl
fistpl
rclb
and
add
cwtl
mov
pop
xor
adc
xor
mov
sub
mov
sub
jae
xchg
lahf
pop
mov
and
cwtl
mov
cmp
cmp
stc
inc
lds
icebp
fstpl
cmp
movsb
push
scas
rcrl
in
js
in
and
stc
push
jb
fisubs
imull
inc
std
mov
fadds
adc
shlb
xchg
daa
inc
popf
imul
xchg
mov
xchg
cld
insb
mov
incb
cmp
jnp
call
scas
xchg
inc
sub
stc
mov
push
cmp
jno
movsl
mov
push
mov
jge
inc
push
sbb
inc
nop
call
in
xor
adc
inc
testb
jl
jecxz
lock
dec
push
dec
loope
sarb
mov
inc
fcomi
jl
sub
enter
jp
fidivrl
jmp
stos
out
outsl
push
push
cmp
movsl
adc
andl
loope
outsl
insl
aas
int
dec
fadd
add
out
das
sub
idivl
pop
cmpsb
and
dec
fs
or
mov
jg
ret
or
push
xchg
dec
mov
push
mov
pop
pop
jecxz
sub
mov
lds
cmp
fisubrl
and
or
test
std
pop
aam
sub
in
push
shl
jmp
lods
jae
rorb
mov
jl
loope
xchg
jecxz
pop
out
arpl
hlt
jb
push
movsl
cmp
cwtl
in
mov
sub
mov
mov
iret
mov
shlb
and
xor
call
mov
sub
pop
idivb
std
mov
or
jp
dec
fisttps
dec
push
xchg
shll
sbb
leave
subl
mov
adc
jbe
sqrtps
dec
pushf
out
mov
sub
jle
iret
je
jle
mov
fldenv
inc
mov
je
movsb
outsl
pop
xor
inc
je
lods
cmpsb
mov
push
outsl
mov
sbb
loopne
subl
mov
jge
stos
inc
inc
cmpsl
lea
mov
std
fildl
pushf
fiadds
mov
xchg
aad
sbbb
cli
or
insl
adc
scas
test
dec
push
xchg
mov
stc
mul
xor
pop
adc
or
lea
jnp
loope
sti
sub
xor
and
out
fisubrs
addb
cmp
call
xchg
mov
inc
jns
add
add
loopne
jle
jnp
or
adc
dec
loop
sti
repnz
inc
mov
enter
sbb
xchg
pusha
mov
lods
xchg
dec
addr16
das
or
ret
pop
fsub
decb
adc
mov
pop
int
xchg
idivb
les
mov
outsb
stos
pushf
das
sbbl
inc
out
xor
dec
mov
hlt
ss
mov
adc
imul
mov
dec
outsl
inc
fs
lock
ret
test
jne
out
and
pop
popa
rorb
sbb
addb
aam
add
frstor
pusha
pop
ja
aam
push
inc
pushf
rorb
and
jnp
stos
xor
inc
ds
jg
scas
fwait
push
sbb
mov
mov
cs
sbb
xchg
lret
lahf
mov
stc
stos
aaa
inc
js
int
or
lods
pushf
mulb
mov
stos
xor
enter
xchg
jp
push
mov
mul
shll
mov
jecxz
sbb
dec
add
adc
shlb
addr16
xor
in
cmp
pop
or
ja
cmpsl
and
mov
mov
push
push
dec
enter
aaa
adc
xchg
adc
inc
jle,pn
pop
pop
mov
dec
mov
das
jg
jle
jmp
test
fmuls
mov
xchg
sbb
push
fsts
out
or
int
mov
daa
ds
stos
cmp
je
cmp
mov
mov
aad
mov
adc
pop
nop
rcl
nop
jp
add
lea
xor
dec
dec
lcall
daa
imul
not
sbb
jle
ja
fwait
subl
mov
in
lods
testl
dec
inc
clc
dec
mov
sub
scas
aaa
imul
and
mov
cmp
jne
stos
repz
stc
adc
mov
outsl
insb
stos
adc
inc
mov
sub
dec
push
das
flds
lock
ss
cmc
mov
jae
or
insb
mov
mov
jmp
test
push
or
andb
das
cld
cmpsl
mov
jbe
gs
pushf
adc
lods
sbb
mov
cltd
bound
ret
ret
or
insl
ljmp
ss
mov
mov
js
sbb
adc
loopne
leave
jae,pn
es
xor
repnz
push
mov
lcall
dec
std
incb
sub
mov
and
sub
sbb
adc
sub
cwtl
test
or
adc
pushf
pop
push
dec
mov
push
xchg
push
orb
mov
mov
and
sub
in
cmp
cmpsb
pusha
jmp
jb
mov
xor
inc
xor
cld
in
outsl
push
ret
mov
ljmp
or
cli
push
lret
push
pop
mov
stos
out
cmp
jmp
movsl
mov
push
or
cltd
sbb
sub
push
dec
hlt
es
call
mov
push
adc
sbb
pabsw
aas
mov
cmp
pop
int
xchg
pop
adc
jno
inc
mov
rclb
or
add
scas
pop
jnp
and
ja
cmc
add
cmp
mov
mov
xor
xchg
adc
cmp
push
and
cmp
sub
sub
sub
movsb
scas
jae
leave
cwtl
mov
inc
imull
fidivl
out
loope
jnp
cmpsb
mov
pop
stc
pop
and
int3
jecxz
mov
mov
mov
cmp
int3
push
iret
sbb
aas
push
add
scas
loopne
xor
nop
or
add
and
popa
test
ds
js
pusha
sbb
sbb
and
imul
clc
fstpl
mov
pop
mov
xor
insl
adc
icebp
int
add
iret
sub
jmp
in
sub
cmp
inc
xchg
cmp
aad
sub
sub
push
ja
mov
cmp
and
fnstenv
xor
sub
jmp
xor
loopne
aas
pop
add
arpl
stos
lahf
xor
cltd
dec
xlat
push
sbb
fistpl
outsb
inc
cs
dec
emms
rcrb
xchg
lea
cmp
push
inc
rorl
adc
mov
dec
icebp
fsubrl
dec
sub
imul
push
mov
pop
ret
sbb
shrl
loop
loop
dec
stos
or
add
ret
aas
push
jae,pt
mov
inc
clc
call
xor
xchg
rdpmc
arpl
mulb
shlb
lods
jg
and
xor
push
xlat
cld
adc
mov
xor
cli
fcompl
cwtl
and
popa
negb
inc
xchg
test
test
inc
add
inc
inc
repz
mov
cwtl
xor
xor
mov
ja
xlat
mulb
xchg
repnz
fdivp
mov
push
mov
loop
mov
pop
push
xor
shll
pop
adc
cmpsb
push
adc
jl
add
cmpsl
fisubs
stc
sbb
mov
jbe
mov
push
imul
repz
sub
mov
sahf
shl
add
mov
cld
imull
mull
sbb
xor
jbe
or
aad
incl
xor
enter
or
enter
pop
aam
sub
push
shl
test
cli
inc
jns
in
clc
out
dec
stc
in
data16
mov
dec
aaa
cmc
cmp
inc
jno
ljmp
shrl
out
pop
inc
cmc
jns
in
inc
shll
jne
ja
dec
mov
cmp
sub
in
enter
mov
int3
mov
or
rclb
fs
rcrb
mov
subl
call
and
push
ret
mov
shrl
pop
sub
sbb
ret
repz
hlt
rolb
mov
arpl
cmp
push
sub
popf
adc
iret
imul
enter
dec
inc
out
movsb
clc
inc
jmp
mov
mov
sarl
push
jnp
cmp
shrl
cmp
jno
cmc
ss
daa
adc
loope
mov
sub
pusha
andb
push
lret
test
inc
es
insb
repz
mov
lret
jg
dec
and
sbb
add
aas
popa
andl
pop
adc
or
pop
mov
hlt
or
pop
and
push
lret
pop
das
repnz
dec
inc
out
adc
les
and
in
lods
jecxz
jmp
jge
cmpsl
mov
sub
popf
int
mov
addl
jno
mov
addr16
add
in
mov
lcall
push
xchg
mov
lock
xlat
xor
sbb
in
sarl
int
mov
out
dec
out
cmc
js
sbb
shll
cmpsb
sub
pop
shlb
mov
cmp
mov
push
repz
icebp
mov
sub
aam
adc
lods
or
dec
nop
bound
and
dec
loop
sti
jnp
cmc
mov
dec
mov
add
mov
movsb
adc
pop
dec
xlat
adc
js
and
outsl
or
clc
pop
jns
cmpsb
and
jge
jne
push
push
dec
mov
sub
jecxz
sbb
clc
sub
adc
mov
xor
data16
sbb
and
jmp
lahf
lods
adc
mov
int3
sbb
add
sbb
cmp
xchg
pop
rcrb
jne
xchg
inc
dec
loope
push
or
xor
sub
mov
and
push
adc
enter
add
nop
iret
divl
xor
bsr
loope
mov
cltd
pop
dec
push
into
inc
mov
cmpsb
call
fwait
imulb
mov
adc
cmpsl
jp
lret
push
mov
repnz
mov
xlat
push
push
pop
and
mov
inc
sub
aad
lcall
jne
fistpll
sbb
xlat
pop
xlat
pop
lret
jbe
inc
aam
in
jns
aad
xchg
adc
lods
jae
stc
mov
pop
out
push
loopne
jbe
adc
mov
fdivl
push
lret
lret
mov
mov
bound
in
dec
es
pop
xchg
jmp
clc
mov
push
pop
push
or
popf
xchg
mov
aam
outsl
out
flds
or
jo
sub
xor
scas
clc
xor
mov
fwait
and
pop
stos
es
dec
cmp
push
jp
lods
cmc
loop
sar
pop
pop
orl
push
pmuludq
mov
mov
shlb
cmp
sub
pop
mov
aad
aaa
lret
leave
or
pop
adc
lea
sbb
repz
pusha
push
xchg
add
enter
out
xchg
lock
sub
mov
adc
push
mov
aam
push
sbb
sbbb
mov
ja
js
pop
es
inc
lea
cmpsb
jno
or
call
push
push
decl
repnz
or
fs
cmp
add
in
dec
jb
adc
dec
push
xor
mov
std
in
mov
lcall
push
dec
mov
inc
mov
mov
mov
leave
mov
jnp
xchg
test
xor
scas
js
push
and
arpl
out
cmc
ficoms
pop
mov
add
adc
in
jge
sbbb
ljmp
test
cmpsb
and
les
mov
add
movsb
je
cli
push
mov
test
jno
aam
inc
xchg
pushf
js
push
test
add
test
sarl
push
jb
mov
xchg
sub
xorl
lods
clc
cmc
std
sbb
clc
dec
sbb
pop
mov
call
test
popw
xchg
jbe
daa
adc
ss
jg
test
jae
ja
push
push
pop
sub
outsb
push
push
or
arpl
movsl
syscall
std
int
inc
cmp
push
imul
xchg
mov
fwait
sbb
pop
sbb
add
cwtl
imul
mov
dec
cmp
stos
sub
sbb
mov
shlb
imul
push
mov
clc
mov
pop
pop
xlat
push
je
pop
cs
fwait
leave
aam
xchg
loope
fldcw
adc
adc
or
mov
dec
lret
or
add
and
addb
scas
mov
pop
outsb
push
sub
movsl
sbb
cmpsb
js
nop
and
imul
pop
jle
mov
cmp
push
aas
inc
lret
loop
dec
or
sub
cltd
sar
pushf
or
ds
dec
xchg
cs
dec
dec
add
add
pop
sub
mov
in
inc
test
outsb
sub
cs
cli
andl
bound
mov
jo
loop
add
sub
jno
adc
sbb
adc
cmc
stc
and
push
add
dec
inc
into
orl
aad
push
sbb
hlt
push
inc
ret
xor
je
rolb
cmp
and
or
sub
orb
fmul
cmp
mov
dec
int3
sbb
into
sub
hlt
pushaw
ja
adc
mov
imul
xor
scas
jo
xor
jmp
lock
sahf
mov
xorb
fcmove
jecxz
loop
outsb
insl
fwait
ret
adc
cltd
neg
sbb
jno
je
test
xor
xchg
scas
jge
lods
mov
in
push
dec
insb
adc
cmp
push
pop
fs
sbb
test
cs
adc
inc
out
leave
xor
es
lods
lcall
and
ds
inc
jnp
pop
inc
inc
cli
cmc
ret
roll
roll
mov
sbb
jne
sbb
fisubrl
ljmp
jp
rcll
pop
out
ret
fiaddl
in
fs
xchg
inc
mov
and
out
xor
pop
repz
lret
cmpsl
or
inc
hlt
shll
jecxz
adc
fsts
je
stos
lahf
mov
push
jo
cmc
gs
call
es
fcomi
lret
cmp
int3
mov
dec
dec
or
addr16
mov
out
inc
dec
fwait
cmpsl
xchg
in
xchg
push
lcall
aam
sbb
inc
sbb
dec
fcoms
push
sbb
sbb
dec
in
push
jecxz
xchg
cmp
loopne
out
sbb
xor
dec
sub
xchg
fs
fdivrl
mov
cltd
sub
cli
push
xchg
notb
sub
adc
jecxz
test
push
es
mov
mov
out
ja
mov
sub
stc
sub
push
mov
jmp
fisttpll
gs
xor
sub
inc
xchg
inc
movsb
call
repz
cmc
in
push
add
stc
icebp
insl
scas
xor
dec
mov
dec
jmp
mov
repz
mov
pop
or
push
xchg
ret
cmpb
clc
xchg
clc
lods
lret
imul
fnstcw
pop
xchg
and
addb
mov
or
jbe
popa
cli
test
jge
mov
sbb
cmp
push
inc
repz
mov
or
push
mov
or
dec
mov
pop
pop
cltd
dec
das
lahf
push
xchg
mov
or
inc
inc
jno
inc
ja
in
cli
outsl
xchg
dec
int3
sbb
mov
push
inc
xor
and
scas
xchg
inc
inc
dec
mov
xchg
insl
mov
xchg
cld
and
mov
mov
inc
mov
shlb
divb
testb
scas
imul
stos
popa
mov
iret
mov
cli
leave
test
mov
dec
insl
xor
rorl
sub
mov
or
mov
fsubp
xchg
or
cmp
imul
push
cwtl
dec
mov
test
leave
les
test
dec
aaa
xlat
dec
ja
jge
sbb
mov
ret
jo
daa
xchg
pop
fimuls
hlt
add
cmpsl
jmp
lahf
scas
and
es
pop
shll
push
or
stos
lds
sti
cmp
jl
loopne
filds
outsl
adc
adc
aam
imul
jl
mov
imul
jae
dec
add
jbe
into
call
fildll
mov
push
sbb
test
sub
mov
jmp
dec
mov
mov
xor
xor
into
rcll
imul
popa
ret
dec
cmp
arpl
rcll
bound
mov
pushf
or
xor
or
insl
mov
jne
sub
subl
leave
xchg
int3
sub
sbb
mov
fidivrs
cmc
jbe
scas
lods
mov
cmovp
cmp
lcall
or
lock
mov
dec
mov
les
sub
mov
cmpsb
inc
ret
xchg
jne
xchg
pop
push
push
mov
sub
daa
jp
aas
data16
and
xor
mov
xchg
xchg
mov
scas
xchg
mov
dec
jmp
jnp
ret
or
push
add
cmpsb
ret
add
xor
movsl
xor
and
xchg
outsl
stos
mov
nop
pop
or
aam
cmpsb
push
xchg
push
neg
pop
jecxz
mov
ret
xor
adc
pop
xchg
mov
cwtl
es
adc
push
or
fcmovu
sahf
cmp
ret
mov
dec
add
cmp
out
loop
push
adc
mov
scas
aad
aaa
ds
stos
jo
fstl
nop
aaa
mov
pop
push
adc
and
xor
icebp
xor
mov
mov
mov
mov
push
cmp
outsl
stos
fnsave
lret
and
jno
in
data16
push
jp
js
into
pop
inc
imul
negl
jecxz
push
mov
jp
xor
sbb
lock
dec
push
or
pop
icebp
xchg
ss
mov
sub
lret
add
pop
jmp
daa
push
pop
sub
test
sarl
adc
sbbb
das
sub
push
inc
mov
lret
dec
nopl
mov
add
lcall
jp
cli
push
sub
sbb
dec
mov
or
adc
and
test
xor
loop
cmp
pop
mov
mov
test
icebp
clc
adc
jbe
pop
test
sbb
inc
fld
shrd
and
repz
scas
push
or
aam
push
fisubl
je
xchg
mov
push
insl
out
cld
jns
repnz
push
negl
mov
cmp
aaa
test
stos
nop
test
sti
leave
or
add
shll
add
mov
jle
add
mov
fld
ja
sbb
lods
or
addl
inc
andb
lret
sahf
insl
and
push
pop
mov
sub
test
cmp
jp
out
sub
push
nop
into
mov
sub
stc
inc
xchg
fsubrp
jno
movsb
pop
or
das
xchg
jmp
stos
jb
imul
imul
xor
xor
outsl
sub
and
xorb
add
inc
pop
orb
pusha
mov
push
jg
xor
cmp
pop
nop
inc
lock
lahf
in
movsb
adc
push
rcl
cltd
jae
ljmp
mov
and
imul
test
fwait
bound
add
testl
icebp
mov
mov
mov
mov
bound
cmp
xchg
adc
shll
sbb
cmp
mov
xlat
je
inc
sub
cmpsl
push
fisubrs
sbb
rorb
insb
mov
cs
ja
push
or
xor
inc
fwait
in
test
xchg
ret
mov
aam
push
aam
mov
mov
cwtl
or
push
xchg
mov
cltd
rol
pop
mov
fsubp
push
xor
xchg
xor
out
shrl
das
stc
out
int
mov
xchg
mov
and
rcrb
cmpsb
dec
xchg
inc
inc
std
dec
and
cld
mov
dec
and
popf
mov
gs
movsb
xor
in
inc
aaa
lea
add
cmpsb
pop
hlt
mov
xlat
leave
sbb
insb
push
xchg
cmpsl
mov
mov
jo
out
fbstp
ret
pop
xor
dec
sahf
adc
lods
addb
idivb
arpl
rcrl
jge
pop
gs
clc
inc
pop
cmpsb
and
xchg
sub
xchg
mov
xchg
movsl
ds
dec
xchg
clc
xor
add
xchg
cmp
xor
mov
loopne
push
into
fdivs
out
push
mov
pop
outsb
push
arpl
rcl
jae
movsl
mov
lcall
xchg
lcall
repz
sub
and
cmp
and
cli
sbb
mov
mov
iret
gs
repnz
xchg
push
adc
fsubrs
test
mov
stc
test
loop
fdivl
mov
inc
sub
mov
add
fdivp
iret
xchg
les
fisubrl
mov
inc
jbe
dec
or
mov
or
add
add
mov
cmc
or
rcrl
pop
rolb
lahf
pop
lock
test
and
out
add
adc
je
and
lock
inc
xor
mov
scas
adc
dec
mov
outsb
stos
adc
push
mov
outsl
dec
dec
hlt
out
mov
mov
push
mov
xor
inc
bound
dec
mov
faddp
mov
scas
repz
sub
imul
lock
dec
push
daa
outsl
sub
fisubrl
inc
mov
mov
rolb
push
and
pop
ja
add
rcl
loopne
aam
cmp
adc
push
sub
cmpsl
add
sbb
jle
stc
jae
mov
push
cld
cmp
cmp
jl
jmp
pop
push
popl
nop
fmuls
das
in
inc
scas
or
shrb
movsb
cltd
das
fsubl
or
dec
aaa
shrl
jecxz
or
or
and
jp
addr16
pop
adc
jmp
insl
mov
repnz
add
loope
or
push
nop
ja
insb
aaa
jp
mov
add
rorl
sahf
loope
pop
inc
cmpsb
add
gs
xchg
mov
xorb
std
inc
dec
or
push
mov
data16
jg
fstpt
ror
cmp
mov
shrl
das
fsubrs
xchg
je
adc
mov
ljmp
sbb
pusha
aas
jp
pop
into
xor
cmp
pop
sti
push
movsb
fdivrs
sub
loopne
aaa
mov
and
fdivrl
sub
imul
or
cmpsb
push
daa
or
in
into
jnp
cmc
out
or
jb
xor
mov
adc
loop
and
loopne
out
add
ret
and
mov
pop
fwait
sub
jmp
and
arpl
xchg
repnz
pop
outsb
in
repnz
sub
out
dec
sbb
push
cli
scas
mov
call
push
icebp
jae
dec
add
movsl
adc
adc
bswap
gs
inc
adc
in
jl
test
xchg
popf
cmp
jb
cwtl
decb
push
shll
ljmp
pop
add
pop
stos
mov
sahf
ljmp
or
mov
bound
out
push
insl
xor
mov
jmp
mov
test
mov
das
sub
sbb
int3
rclb
adc
int3
es
roll
lds
ret
jl
add
pop
lock
popf
out
inc
cmpl
dec
loop
sub
pop
jle
enter
cmpsl
pushf
scas
rol
icebp
add
js
mov
rorl
fnsave
test
add
mov
push
inc
dec
scas
and
or
push
daa
inc
xchg
jp
decl
push
and
xor
adc
out
ds
or
lock
inc
or
fidivs
mov
fstl
fcmovnu
loopne
push
imul
jne
mov
ret
sbb
lahf
sub
and
int3
and
xor
fwait
sbb
xor
iret
and
mov
cltd
out
jbe
std
push
in
testb
roll
mov
movsb
mov
jb
dec
pop
hlt
cmp
cs
adc
xchg
clc
xchg
jmp
or
or
jl
and
out
fcompl
or
cmp
sub
inc
and
jne
pop
push
jmp
in
sbb
sbb
movsl
subb
fcomp
movsl
outsl
xor
hlt
push
scas
push
push
mov
sbb
fldcw
rorl
mov
inc
push
mov
das
inc
idivb
data16
lahf
jbe
outsl
arpl
inc
test
xor
dec
xchg
data16
movsl
das
sbb
aam
loop
and
or
imul
push
sti
sbb
gs
ret
xchg
jns
inc
xorb
mov
mov
mov
mov
pop
jp
loop
jge
in
cmpsb
sbb
inc
mov
arpl
add
in
inc
cmc
xor
push
sub
or
sub
push
aad
into
sahf
inc
movsl
xchg
push
dec
sub
loop
xchg
inc
fld
daa
jmp
out
cmp
pusha
sbbb
add
loopne
jp
popf
ret
jno
adc
imul
ja
cmc
inc
cld
inc
clc
pop
incl
inc
sbb
loop
insb
add
inc
test
push
or
in
pop
inc
jecxz
shll
mov
push
mov
rcll
out
pop
sbb
mov
cmpl
sub
imul
aad
out
sub
add
push
rcll
pop
cmp
in
pop
cld
sbb
jb
adc
mov
adcb
fisttpll
adc
cmp
xor
xor
dec
xchg
pushf
add
lret
hlt
fwait
push
outsb
inc
addb
into
mov
aaa
out
aam
in
jno
dec
sbb
cmp
icebp
pop
fstpl
scas
sub
adc
dec
push
push
jo
ja,pt
jmp
add
jns
jge
lods
sarl
in
cs
or
fisttps
cltd
je
sbb
out
mov
loope
lahf
add
pop
mov
pushf
push
lret
push
lcall
mov
inc
loope
push
fs
dec
mov
dec
mov
lea
sti
inc
cs
ss
pop
add
imul
push
aaa
les
fwait
mov
je
lea
scas
adc
sub
inc
in
imul
into
inc
pop
or
fwait
inc
movsl
mov
pop
cmc
ficompl
xchg
das
enter
adc
out
call
repnz
jecxz
cmp
xchg
movsb
decl
push
xchg
daa
xchg
xchg
int3
pop
xchg
inc
cmpsb
mov
jo
mov
sbbb
loope
pop
fucom
jbe
std
sub
std
or
aad
filds
jle
mov
jecxz
imul
inc
mov
stc
pop
mov
sahf
mov
repnz
ds
inc
adc
xlat
data16
mov
mov
int3
sub
ds
mov
add
shll
clc
mov
in
imul
lock
xchg
xor
fcoml
xchg
insb
imul
xor
inc
ret
int3
pop
and
mov
pop
cmp
jl
aas
inc
into
lock
fcomps
cs
cmp
and
xchg
sub
push
in
jb
add
sahf
jne
lahf
jmp
movsb
std
sbb
lods
pusha
outsl
out
add
sahf
mov
iret
push
rorl
movsl
dec
dec
jno
xlat
stc
in
push
pop
inc
or
insb
rcl
mov
push
imul
mov
push
jae
stc
inc
movsb
jmp
cli
jge
and
dec
adc
xor
cmp
mov
out
or
aas
rcrl
repnz
dec
push
test
sbb
lcall
xor
inc
and
orb
sarb
aam
or
aas
shrl
jle
xchg
pop
sub
jl
dec
out
push
mov
pop
cmpsl
pop
sahf
mov
enter
mov
test
xchg
ret
or
xchg
push
dec
xchg
dec
movsb
push
inc
pushf
dec
dec
pop
mov
addb
outsl
cmp
jg
add
insb
xorb
jg
push
jbe
test
pop
popa
jae
inc
sahf
dec
iret
out
call
fistps
sbb
or
pop
push
dec
sbb
jb
imull
test
push
cmpsl
outsb
test
xor
add
call
lret
mov
mov
faddl
out
jo
aaa
aam
dec
lock
das
xchg
pop
or
sbb
outsb
xchg
call
roll
mov
lahf
add
movsl
xchg
repnz
xlat
stc
add
xor
mov
pop
mov
mov
insb
fidivs
shr
divb
sbb
inc
mov
aas
dec
mov
insl
and
push
adc
sbb
cmpb
shll
scas
shr
aas
clc
mov
shll
xchg
sbb
in
mov
in
js
sbb
push
dec
cmp
lea
scas
adcl
ja
xchg
fwait
ss
rcrb
push
cmpb
notb
loope
leave
mov
jbe
cmp
and
mov
xchg
jae
xchg
lret
push
ss
sahf
jo
add
fdiv
or
les
out
ss
and
nop
lods
shll
push
and
pop
sbb
mov
repnz
and
mov
lret
and
iret
bound
and
iret
xor
cmc
test
and
adc
ss
mov
iret
mov
shll
test
scas
jmp
xchg
rcl
sti
and
aad
mov
mov
mov
push
aam
inc
ja
sahf
shr
cmc
or
lcall
jmp
roll
cmp
xchg
in
cli
pushl
gs
jle
insl
jno
cmp
sbb
jmp
xchg
cmp
add
cltd
nop
ja
push
pop
fdivl
sahf
fmull
mov
push
or
dec
popf
ret
enter
lds
repz
fildll
jge
pminub
stos
sbb
je
push
cld
and
aaa
bound
mov
or
test
xlat
lcall
xchg
out
out
je
stos
add
pop
out
mov
fildl
or
jle
movsb
cmp
addr16
adc
jae
pop
mov
xor
push
sub
inc
rcpps
mov
sub
xchg
jns
lret
xchg
stc
inc
rcll
pop
adc
cmp
cmp
shrb
ja
orb
sahf
push
cmp
movsl
sub
sub
xchg
mov
leave
pusha
or
and
mov
pop
lret
dec
dec
data16
mov
push
bound
sbb
cmp
push
mov
lods
xor
je
inc
or
mov
ret
into
push
cmp
icebp
or
les
pop
sbb
fidivs
pop
sub
leave
sub
and
cmp
dec
hlt
movsb
jno
lahf
negb
jno
dec
add
jmp
clc
cmpsl
cmp
imull
push
xor
loopne
pop
add
push
mov
and
mov
sub
imul
popf
les
mov
jae
andb
xchg
jl
jo
outsl
fmull
jmp
push
outsb
nop
bound
arpl
insb
lea
sahf
xchg
xchg
mov
add
movzwl
jno
lahf
mov
aam
scas
popf
jle
push
es
xlat
shlb
dec
jno
scas
sti
push
in
pop
push
jecxz
xchg
xchg
mov
mov
into
lock
jle
addr16
add
insb
notb
xor
mov
out
xchg
pushf
lock
cld
jno
roll
push
hlt
rorl
pop
jno
push
icebp
in
xor
int3
mov
cli
repz
dec
jnp
popf
sub
ror
hlt
sbb
ret
jae
ret
adc
jecxz
repz
pop
mov
stos
push
mov
lahf
aam
js
mov
xor
dec
cmp
bound
lcall
mov
jae
mov
cmpsb
mov
stc
mov
dec
jecxz
movsb
hlt
out
lahf
cmp
icebp
out
mov
add
lods
cmp
jo
jg
xor
shll
shl
lock
mov
sub
mov
or
sub
mov
sbb
ud2
cmp
push
ret
cmovg
push
into
jg
sbb
xor
mov
sub
out
push
aad
hlt
jne
mov
mov
je
cs
inc
mov
sbb
mov
out
cmp
popf
in
push
xchg
sub
clc
xchg
fs
fs
or
lods
rcrl
jecxz
ret
sbb
dec
rcrl
pop
mov
out
xor
outsb
je
out
fmuls
outsl
out
xchg
sub
inc
sub
jo
jnp
mov
or
mov
ds
ret
jmp
xor
leave
cmp
jle
push
sub
and
adc
push
xor
mov
inc
aam
imul
into
add
mov
icebp
sub
aad
or
test
aam
ss
push
loopne
push
or
les
out
and
inc
mov
pop
push
dec
pop
push
or
mov
jns
test
pushf
xor
jle
or
lods
fwait
aad
adc
hlt
nop
je
pop
rorl
arpl
push
mov
iret
adc
jge
shll
and
fwait
idivl
daa
mov
push
loopne
lock
and
mov
in
fldenv
in
mov
test
out
sub
lret
xchg
fcomp
pushf
or
push
loopne,pn
cmpsl
push
cmp
les
repnz
popf
push
inc
xchg
out
ljmp
push
stc
xchg
sub
cs
mov
fldenv
roll
xchg
xchg
pusha
sahf
or
jno
gs
clc
pop
lea
test
cmp
imul
fcomps
cmpb
shl
lods
imull
popf
jnp
shl
or
push
push
aas
pusha
push
les
mov
das
sbb
gs
adc
pop
stc
jmp
pop
fdivrs
add
lret
les
aaa
movsb
mov
and
insl
sub
cli
ss
inc
rcr
loop
dec
lahf
in
mov
cmp
mov
push
sub
out
clc
and
and
jnp
imul
leave
cwtl
stos
es
jmp
push
xorb
popf
leave
mov
mov
adc
lahf
and
mov
inc
stos
sub
jle
in
in
or
pop
and
pop
jp
or
repz
inc
mov
jle
push
mov
outsl
arpl
xchg
dec
fldenv
dec
lret
mov
stc
call
clc
lds
xchg
in
mov
sbb
and
cmc
lahf
fdivrp
mov
cmp
fisubrs
je
imul
pop
js
lret
mov
cwtl
sbb
sbb
pop
int
das
mov
scas
cmp
mov
mov
stc
hlt
je
jb
mov
sbb
repnz
jb
movsl
popa
lock
cltd
mov
and
insl
mov
jns
xor
dec
adc
mov
add
mov
fildl
or
std
xor
cmp
dec
sbbb
js
adc
or
and
jno
ret
jnp
iret
lret
in
shlb
jae
ljmp
cwtl
std
mov
mov
test
and
push
mov
dec
out
xchg
test
mov
xchg
xchg
cmp
lock
xor
jle
mov
fistps
cmp
subl
cmc
rcrl
cmp
cwtl
pop
leave
mov
cltd
aad
and
repz
ss
bound
xlat
aas
pushf
aas
inc
xchg
gs
fistps
jo
jp
orb
orb
and
dec
aad
jno
or
push
rcll
fs
mov
mov
insb
fists
mov
or
sub
xchg
cmp
and
cmp
test
hlt
mov
pop
xchg
and
lods
xchg
mov
and
xchg
cmp
mov
add
popf
mov
dec
sarb
mulps
and
or
scas
adc
adc
lods
hlt
data16
aam
or
in
repz
stos
in
fbstp
dec
stos
or
dec
call
hlt
lods
cs
in
pop
and
enter
dec
cmp
push
nop
jp
aas
and
sarl
rorl
mov
clc
xor
lahf
in
insb
fld1
jmp
mov
mov
cmpsb
cmp
lcall
dec
shll
lods
mov
fisttps
and
lds
or
and
outsb
cmp
jmp
dec
mov
fwait
xor
es
inc
jo
cmp
fsts
insb
and
pop
ljmp
pop
test
inc
stc
pop
pusha
lret
lds
jle
pop
dec
jo
inc
inc
js
or
push
and
jnp
push
cmp
adc
cmp
push
xchg
rclb
imul
jb
data16
adc
inc
sub
popa
jb
sub
ja
dec
mov
or
int
pop
pop
pusha
bound
lret
imul
or
fpatan
add
sbb
and
inc
xchg
mov
test
mov
xchg
add
fs
test
adc
std
pop
xchg
popa
pushf
fldcw
xlat
or
add
stc
sti
sub
mov
xor
sub
dec
sbb
or
sbb
mov
sub
scas
mov
das
std
outsl
mov
sti
cltd
dec
or
mov
sbb
xchg
jl
adc
push
arpl
mov
sbb
mov
jnp
sbb
sbb
rcrb
shlb
inc
testb
mov
mov
test
jbe
outsl
or
xor
fistpl
xor
mov
aam
jmp
imul
push
scas
pop
sub
into
sub
lock
out
bnd
or
xlat
mov
pop
jnp
je
call
xchg
mov
inc
insb
iret
leave
xor
fs
mov
es
push
dec
xchg
aam
cwtl
xchg
or
cwtl
popf
cmp
into
adc
out
popa
dec
cmp
sub
add
loop
xor
std
push
lret
cmp
push
cmpb
popl
dec
or
mov
sbb
cld
and
int3
mov
add
push
hlt
popf
out
push
add
mov
sbb
dec
xor
cltd
sbb
shr
push
in
loop
inc
jo
pop
insl
dec
xchg
mov
fwait
xchg
push
pusha
shll
jns
in
cmp
xchg
fmuls
xchg
push
xchg
cmp
sbb
xchg
mov
xchg
idivb
and
pop
bswap
mov
into
in
std
testl
call
ljmp
dec
mov
jno
push
cmp
xchg
and
iret
add
faddl
push
mov
add
fldcw
push
ds
pop
mov
mov
shlb
in
test
mov
sub
out
adc
pop
xor
rorb
mov
sub
std
pop
sbbb
flds
push
xchg
ficomps
popf
dec
leave
lret
hlt
lret
icebp
xchg
mov
mov
push
cmc
scas
push
cmp
cmp
add
mov
add
mov
aam
push
test
fldt
adc
es
mov
and
adc
push
or
or
leavew
pop
mov
ss
inc
sahf
addr16
jno
je
insb
cmp
push
xor
cwtl
adc
enter
mov
mov
jbe
cmpsl
cmp
fnstcw
es
mov
jmp
jle
adc
push
xchg
sbb
jp
hlt
sub
cmp
pop
and
mov
mov
out
and
in
and
loope
xchg
sbb
add
stos
orb
mov
in
push
jl
ljmp
loop
push
push
fsub
sub
int3
ret
pop
push
pop
loop
invd
xchg
fnstsw
inc
fcmovnbe
jns
aas
test
lea
add
and
roll
jecxz
imul
cltd
std
pushf
mov
xchg
xor
vshufps
inc
inc
pushf
cmp
cmp
fildl
mov
insl
sub
xchg
sarb
int
cs
dec
outsl
sbb
bswap
fildll
cli
ds
jnp
inc
add
aam
dec
sarl
out
lds
out
or
rcll
xor
stc
rcrb
dec
push
and
sub
shll
pop
ss
mov
dec
jbe
xor
fsubrs
aam
jmp
mov
adc
sbb
out
or
jno
loop
adc
pusha
mov
dec
addr16
add
sbb
or
daa
inc
lock
mov
dec
fmul
mov
jecxz
pop
and
adc
lods
xchg
mov
cmc
xchg
or
xlat
adc
push
push
sbb
jnp
mov
mov
mov
or
xchg
add
lock
bound
sub
xor
and
jnp
xchg
inc
int3
cwtl
je
gs
add
insl
testb
fpatan
shrl
gs
sarl
dec
cld
adc
lahf
xor
mov
pop
lds
sbb
cmp
mov
arpl
scas
fisttpll
and
out
push
popw
int3
push
xor
mov
lods
mov
out
jo
fiadds
xor
repz
mov
and
inc
out
nop
mov
js
or
sub
cs
mov
ret
repz
cli
dec
mov
inc
lea
or
inc
xchg
sysexit
das
mov
sub
cmp
popa
cmp
out
mov
pop
cmp
jb
orl
movb
sub
mov
add
cmp
push
add
cld
dec
clc
pop
daa
popa
cmp
and
xchg
ficoml
loope
sahf
es
popf
inc
xchg
push
ss
sub
inc
mov
aaa
out
mov
and
push
outsb
jns
mov
repnz
repz
adc
mov
sub
les
push
loopne
ret
cmp
loopne
stos
popf
loope
adc
cli
lahf
sarl
jle
sbbb
out
xor
push
outsl
repnz
xor
or
ja
loop
mov
add
or
jo
or
les
jmp
loope
fwait
mov
push
mov
fsubrs
xchg
push
sub
call
test
cwtl
pop
nop
mov
in
xor
jmp
add
addr16
pusha
decl
push
and
stos
add
and
clc
pop
push
aam
mov
fadds
ja
xor
ljmp
fildl
fadd
add
push
mov
iret
fdivrl
mov
cmpb
or
ffree
dec
aas
ss
sub
push
loop
add
xor
fcompl
xor
cli
sub
nop
test
add
and
out
mov
daa
adc
adc
pop
mov
cmp
out
sbb
addl
rol
pushf
bound
roll
lret
mov
xchg
inc
mov
iret
jl
ret
rcrb
pusha
mov
dec
or
dec
xor
out
mov
subl
scas
aaa
jl
hlt
add
pop
dec
mov
pop
aam
stc
add
mov
xor
pop
or
add
inc
xorl
and
lods
pop
mov
jle
jae
pop
je
push
sbb
sti
enter
fsub
pop
enter
xchg
push
fadd
outsl
cmp
lret
dec
cmpsl
jl
mov
and
cmpsb
neg
cmp
mov
jg
pop
es
mov
mov
push
lds
daa
and
sarb
aad
loopne
or
cmp
call
dec
inc
in
aam
shll
pminub
dec
pop
mov
jp
inc
xchg
hlt
aam
repnz
stos
mov
push
int
inc
mov
jmp
adc
inc
cld
cmpl
xor
leave
inc
mov
sbb
and
outsb
jno
cmp
jb
mov
lock
insl
cmp
insb
pushf
push
cwtl
cld
push
push
xor
sti
jg
incb
call
cmp
lock
add
pop
push
pop
dec
gs
jecxz
je
pop
jp
outsl
icebp
sbb
mov
outsl
push
pop
outsl
sub
inc
repnz
nop
test
add
mov
in
push
mov
dec
pop
add
mov
sbbl
jne
jle
mov
dec
mov
push
pop
adc
mov
jae
ss
call
js
cmp
lods
js
or
or
jle
sahf
pop
sbb
mov
std
mov
frstor
xchg
add
je
pop
cwtl
icebp
das
int
jmp
push
std
xchg
insb
add
mov
mov
movsl
lods
xor
cli
pop
cmc
imul
cmp
xor
jae
cltd
inc
mov
hlt
mov
test
xor
adc
cmp
pop
nop
cs
lock
pushf
pop
jle
mov
xchg
dec
aaa
xchg
xor
aad
mov
lds
ds
xchg
lret
ud1
inc
icebp
mov
imul
adc
insl
aad
sbb
test
or
push
dec
arpl
cmp
popf
arpl
dec
mov
filds
mov
mov
inc
shlb
adc
ja
rorl
pusha
in
and
in
insb
jmp
jns
sbb
rcll
cli
dec
push
repz
aas
lods
mov
fdivl
pushf
sahf
mov
out
lods
sbb
ja
std
pop
outsw
in
cmp
lret
jno
xchg
dec
jns
cli
test
enter
mov
jg
add
ret
mov
inc
push
adc
scas
mov
mov
and
or
mov
or
mov
vpextrb
mov
cmc
jae
icebp
scas
in
or
jp
stos
jl
mov
pusha
mov
push
or
xacquire
popa
xor
pop
popa
int3
in
push
pop
leave
enter
pop
cmp
add
jne
xor
sub
ret
or
xchg
shrb
add
mov
jnp
dec
inc
xchg
div
add
and
idivl
sbb
inc
adcl
dec
dec
jnp
imul
jmp
or
les
fdivl
sub
mov
stc
and
jae
leave
xchg
adc
loopne
int3
aad
aas
mov
mov
mov
lods
insb
mov
mov
fwait
mov
int
mov
pop
js
inc
into
out
or
jbe
scas
xchg
or
addr16
test
leave
xchg
mov
sub
cmp
dec
insl
pop
js
in
mov
sbb
scas
xchg
sub
ljmp
inc
sbb
and
mov
mulb
dec
or
nop
xor
ror
sub
rorb
or
mov
mov
cli
jg
ret
cmp
ret
or
push
inc
inc
adcb
lods
xchg
out
fimuls
push
sub
push
xchg
adc
daa
mov
and
sub
imul
ret
pop
xchg
mov
sbb
iret
loop
fwait
xchg
scas
out
rcrl
inc
and
or
pushf
inc
mov
push
decb
in
scas
and
test
cld
repz
flds
push
out
iret
or
xchg
mov
call
lods
cmc
scas
jnp
push
loop
es
hlt
pop
push
pusha
stos
cwtl
jl
dec
mov
xor
adc
mov
loopne
popa
push
imull
adc
mov
mov
movsb
mov
popf
data16
add
sahf
shr
stos
push
lock
xor
and
sti
pop
outsb
fmull
push
mov
gs
adc
sbb
pop
pop
xchg
shr
mov
cmp
cmp
xor
icebp
ja
out
xorl
pop
dec
test
inc
pop
ds
push
stos
outsb
mov
push
cwtl
adcl
mov
or
fcmovu
mov
inc
mov
pop
xchg
lods
popa
aas
fwait
dec
jge
mov
scas
and
push
iret
add
xor
enter
mov
jge
cmp
lods
dec
in
addr16
ficoms
sub
cld
add
incl
xchg
cmp
int3
and
aad
jecxz
xchg
data16
push
push
lods
or
imulb
push
or
das
lods
fcoms
cmpsb
ds
ja
dec
mov
inc
cltd
mov
mov
mov
pop
push
and
in
fcompl
xchg
and
sahf
fcomps
repnz
add
int
outsl
mov
pop
stc
insb
dec
add
out
jns
adc
sub
ja
pop
sbbl
sub
sub
ret
enter
fs
lcall
lahf
push
mov
dec
aaa
inc
xchg
cmp
mov
mov
dec
loopne
sub
inc
jmp
sarl
shrb
mov
cmp
fsubs
test
fsubrp
add
mov
ret
scas
js
xchg
movsb
or
test
lret
movsl
dec
scas
lea
lods
rcrl
outsb
add
bound
scas
pop
xchg
into
jmp
adcb
push
xor
pop
sbb
out
imul
bound
jp
popa
xchg
js
outsb
add
out
adc
lret
and
and
sbb
dec
shlb
adc
loope
xchg
test
ds
push
lds
add
push
hlt
popl
pusha
inc
shll
mov
and
orl
jne
dec
fstpt
fs
push
mov
jns
sub
sub
push
iret
xchg
outsb
ret
jne
dec
jl
mov
mov
and
mov
enter
xlat
or
call
nop
and
sbb
mov
mov
fldcw
pop
pop
inc
and
cmpsl
fisubrs
out
out
fcmove
cmp
aas
je
rep
lds
jnp
jmp
or
popa
jge
nop
movb
hlt
or
ja
out
fwait
or
stos
xchg
fisubrl
aad
mov
dec
je
push
sbb
movsb
inc
jno
fucomip
push
sbbb
xorb
and
xor
sbb
int3
std
dec
pushf
jp
dec
jo
pop
dec
xchg
cmpb
xor
popf
add
xchg
and
movsb
jbe
ds
ds
and
pop
mov
mov
fisubs
mov
dec
dec
dec
dec
mov
mov
pop
dec
mov
and
xor
dec
out
and
jnp
push
or
sub
gs
mov
or
ret
movsb
and
push
hlt
jecxz
addr16
push
add
inc
push
cmc
enter
sarb
daa
ret
rclb
ljmp
cmp
and
sub
push
ss
cli
in
inc
popa
std
jbe
cmpsl
je
stos
push
in
add
or
je
mov
mov
mov
xor
mov
adc
mov
scas
and
sub
jecxz
in
ljmp
cmc
sub
jno
mov
or
rcll
mov
stc
out
sbb
sub
hlt
loop
sub
cwtl
cmpsl
push
pop
out
mov
std
rolb
mov
mov
xlat
test
push
and
mov
mov
sbb
jnp
dec
inc
sub
lds
jns
shl
idivb
jl
push
xor
shlb
fldenv
das
nop
loope
jle
dec
inc
adc
sub
vmread
cmp
out
pop
mov
mov
imul
test
enter
xor
test
mov
es
inc
lock
xor
lds
pop
mov
mov
shlb
mov
push
pop
and
cmp
das
cld
jp
cmp
in
dec
mov
in
into
rcrb
xchg
push
jmp
push
pop
push
je
mov
aaa
cmpsl
stc
jo
mov
add
rorl
adc
shrl
ss
dec
loopne
imul
arpl
jmp
iret
enter
testb
add
mov
adcl
mov
gs
xor
mov
repz
inc
sbb
push
and
pop
mov
push
fcomps
xor
push
xchg
loop
movsl
xchg
push
or
adc
int3
cmp
pop
lahf
mov
push
jne
dec
inc
xor
sbb
stc
cmp
and
insb
dec
xchg
jns
add
push
test
xor
insb
adcl
sti
jno
xchg
cmpsl
cmp
mov
and
add
cli
xor
test
shrb
mov
mov
inc
push
jae
lcall
test
aam
cmp
cli
push
xchg
inc
adc
push
fcmovu
jo
arpl
jl
mov
fsubl
sbb
sub
fcmovnb
xchg
and
aaa
adc
mov
and
fucomi
repz
add
aaa
push
push
pusha
xchg
add
popa
test
rolb
call
mov
pop
js
sbb
xchg
not
pop
inc
jge
aad
mov
jns
in
sub
pop
movsb
adc
lea
cmp
pop
fnstcw
sbb
push
lret
pop
mov
push
inc
std
or
xor
les
lods
call
mov
and
sub
xchg
cmp
push
iret
xchg
xchg
pop
xchg
mov
cltd
fs
movsb
mov
lahf
out
scas
inc
imul
lock
and
int3
lahf
jb
je
dec
push
jb
adc
rclb
loop
pop
mov
addr16
jne
out
bound
sbb
push
cld
movsl
int3
mov
imul
mov
sbb
mov
mov
pop
clc
push
push
and
or
mov
lret
icebp
and
les
sbb
leave
andl
xor
jge
jbe
adc
loop
addr16
enter
outsb
addb
cli
push
std
addr16
sbb
stos
mov
scas
adc
andl
dec
sti
sub
outsb
adc
subb
adc
popa
push
aam
jns
scas
roll
push
sbb
leave
add
add
dec
outsb
in
enter
inc
loop
imul
stos
cs
xor
adc
adc
loop
cltd
or
addb
mov
mov
hlt
test
out
imul
ret
jno
or
lea
add
xlat
pop
insl
mov
sub
test
mov
lret
or
es
test
push
pop
daa
jb
ret
mov
mov
or
lgs
fdivrs
mov
movsb
jecxz
out
sub
push
call
mov
push
sub
push
push
dec
mov
dec
out
push
dec
pop
rclb
mov
and
pop
jl
loope
push
ds
popa
ljmp
jo
dec
jae
cltd
dec
movsl
shll
sub
stc
push
pop
mov
cmp
loop
movl
dec
adc
stc
mov
xchg
add
sub
and
push
pushf
add
mov
imul
jbe
jno
pusha
out
xlat
outsl
pop
iret
and
decb
enter
adc
je
add
stos
rol
pop
sahf
jnp
sahf
pop
pop
arpl
mov
mov
xchg
loop
repnz
out
mov
jle
dec
push
jg
scas
add
jg
stos
and
sar
xor
ficompl
call
adc
pushf
and
pop
daa
dec
mov
pop
adc
cmp
test
insl
pushf
push
cs
push
jno
sub
cmp
xchg
jle
lds
xchg
lds
push
fnsave
pop
cs
call
sbb
push
cltd
clc
les
cmc
testl
pop
sbb
xchg
mov
enter
sub
stos
adc
inc
mov
xor
pop
xor
shll
push
loop
outsl
arpl
shlb
mov
adc
mov
aaa
cmp
cmp
mov
pusha
mov
mov
mov
and
je
push
pop
popa
out
inc
clc
loopew
int3
mov
test
cld
mov
cmpsl
pop
aaa
dec
je
push
sbb
imul
adc
lock
f2xm1
sub
lcall
and
lea
sub
hlt
int3
cwtl
cmp
enter
rcrl
and
or
or
aaa
ds
mov
pop
adc
push
adc
dec
call
in
jle
inc
mov
lods
sti
inc
xlat
push
rorb
idivb
sahf
or
sbb
and
cli
mov
jp
xchg
test
pop
es
mov
sub
loopne
add
cmp
aas
inc
div
mov
sti
adc
test
cmp
adc
mov
icebp
lea
shr
les
mov
imul
dec
xchg
pop
adc
adc
xchg
andb
add
mov
or
mov
push
add
or
inc
mov
push
ss
mov
leave
cli
xchg
xchg
int
jae
movsl
mov
and
or
push
add
xchg
sti
sahf
xor
repz
movsb
sbb
leave
gs
loopne
xor
jg
inc
rcrb
jns
mov
test
adc
int
out
xchg
inc
push
cltd
int3
or
push
mov
sahf
adc
mov
mov
jnp
dec
push
push
fs
xchg
mov
ljmp
jle
cld
test
inc
mov
daa
test
gs
jmp
mov
insb
push
or
into
add
pop
mov
push
pop
mov
add
push
insl
add
xor
mov
xor
in
fisttpl
ror
scas
insl
bound
sarb
xor
inc
mov
jo
jns
sbb
mov
sbb
dec
mov
jle
cwtl
inc
mov
daa
xor
gs
sbb
mov
inc
mov
mov
repnz
int
inc
sub
es
repnz
es
push
jmp
outsl
mov
jmp
fucomp
and
inc
rol
xor
and
int3
aas
arpl
mov
sarb
mov
fnstenv
lock
inc
lahf
stc
iret
in
jmp
dec
in
loopne
les
or
gs
xchg
push
inc
xlat
sbb
pushf
xor
and
xor
je,pt
rcll
int3
or
mov
mov
xchg
or
std
cmp
ficomps
jnp,pt
clc
cs
jg
fbld
pop
push
stc
xbegin
and
popa
and
ja
xchg
je
xor
stos
inc
insb
fadds
add
jmp
arpl
ss
jae
mov
jo
scas
adcl
cmc
mull
dec
inc
jb
jg
push
and
mov
js
aad
nop
adc
dec
pop
jp
cmp
add
push
push
out
add
xchg
xor
add
inc
push
sbb
orb
mov
pop
cmpb
test
xorb
sbb
stos
call
adc
jmp
lods
sub
add
cmp
mov
ret
stc
push
hlt
mov
mov
xor
fabs
fsubrp
adc
aaa
popf
dec
pushf
or
leave
clc
aam
push
or
pop
out
mov
pop
add
sub
inc
push
and
sahf
ss
sahf
je
pop
pop
jno
insb
inc
negl
mov
jle
sub
insl
cltd
repnz
mov
lds
rolb
adc
jae
les
xchg
mov
fdivrl
lret
xchg
dec
ljmp
add
xchg
aas
ja
repz
pop
add
aad
dec
in
cld
sub
inc
dec
sbb
mov
mov
das
xor
mov
cmc
cmp
out
add
pop
sub
cmpl
push
inc
popa
push
dec
shlb
lahf
aas
add
push
in
mov
and
mov
fs
fidivrs
ficompl
lret
pop
jnp
fisubl
leave
enter
aad
jge
dec
push
sbb
jge
dec
sub
aas
fidivrs
adc
sarl
push
fnstsw
imul
push
push
pop
push
inc
iret
mov
fdivr
jae
xchg
out
or
push
and
push
movsb
sahf
push
popf
jg
aam
sahf
dec
clc
jmp
push
int3
pop
sbb
ss
adc
pop
fwait
push
mov
stos
aaa
jecxz
and
leave
jne
ret
mov
inc
insl
mov
roll
daa
std
int3
or
adc
rcr
iret
sbb
sarb
sbb
jo
mov
mov
jb
shr
lret
and
or
jmp
fistps
hlt
add
lcall
lods
mov
cs
shlb
movsl
ret
cli
outsl
scas
ss
inc
adcl
push
movsb
xor
xchg
pop
mov
divb
int3
sub
add
or
jb
gs
dec
arpl
push
scas
push
xchg
push
add
mov
data16
dec
pop
nop
push
mov
and
shlb
repnz
jecxz
mov
fs
xor
lea
stc
pop
mov
loopne
mov
lret
sti
pop
fmull
test
push
mov
jno
icebp
js
push
cltd
cmp
and
or
lods
in
inc
lods
mov
ja
jp
loop
imul
mov
mov
int3
test
ja
pop
lds
xchg
xor
loope
fcmovnu
mov
ss
int
push
xchg
or
aad
inc
adc
sbb
dec
icebp
aam
or
stc
jge
ucomiss
xor
shrl
jle
out
lret
sti
jge
jp
inc
pop
mov
cmp
mov
jb
mov
mull
lods
add
xor
mov
cld
pop
int3
dec
xor
push
dec
or
sti
out
popa
jns
dec
ja
pop
adc
mov
jb
sub
sbb
sbb
clc
ret
sbb
push
pop
jge
movl
scas
js
scas
push
mov
aad
hlt
add
jbe
or
fisubl
mov
test
lret
ljmp
stos
sub
lods
test
xchg
je
mov
add
dec
lods
inc
mov
es
push
leave
push
dec
dec
jno
and
mov
cmp
add
cmp
imul
insl
insl
pop
cmp
test
rcll
cmpsl
movsl
mov
jne
push
lret
sub
xchg
xchg
mov
inc
arpl
jl
lea
cmp
mov
inc
push
adc
out
or
add
mov
xchg
or
movsb
loop
xchg
clc
aas
xchg
bnd
mov
repnz
lahf
mov
cwtl
int3
mov
push
add
mov
pop
inc
cmp
mov
popf
ds
push
out
pop
sbb
fld
out
jne
dec
fiadds
clc
pop
daa
mov
and
cld
lahf
stos
pop
lock
ret
jae
shrl
mov
hlt
add
repnz
js
out
stos
and
je
jbe
pop
mov
mov
mov
jg
lods
cld
or
and
pop
adc
mov
xor
push
cmc
movsbl
rep
cwtl
lods
xor
cmp
cld
in
or
int3
es
fadd
jmp
leave
fdiv
or
lock
fisttpll
mov
cmp
hlt
les
add
lock
jne
lret
xchg
xor
inc
xchg
imul
xchg
inc
in
mov
cwtl
sbb
pop
and
adc
adc
and
mov
out
imul
jge
dec
lods
push
shll
shrl
pop
adc
testb
or
mov
lret
test
inc
mov
call
data16
cmp
sbb
pop
popa
in
inc
test
mov
scas
sbb
xor
les
mov
movsb
add
fistpl
sti
sahf
pop
filds
into
lea
fdivrs
ror
jnp
mov
or
add
mov
cld
pop
mov
aad
mov
sub
cmp
sub
loopne
test
dec
jge
sub
cmp
dec
adc
mov
js
pop
ret
jmp
icebp
jmp
jge
icebp
outsb
arpl
std
insb
inc
out
sub
rcl
sub
stos
shll
sub
nop
xchg
bnd
cmp
ljmp
and
out
icebp
sub
mov
scas
sub
push
pop
push
mov
add
xor
pushf
lock
jle
cmpsl
outsl
mov
fsubrs
xchg
adc
sub
ds
xor
inc
mov
jne
jl
dec
mov
xor
shlb
mov
aam
adc
scas
xor
push
push
xchg
std
mov
pop
insl
adc
mov
sbb
int3
lahf
mov
cmp
clc
pop
aad
inc
or
repnz
test
pushf
sub
jl
mov
cmp
outsb
hlt
stos
cmp
fsubr
mov
aas
push
jo
test
mov
sarb
mov
stc
je
adc
xchg
scas
pop
or
or
flds
sub
adc
jle
rcrb
jo
loopne
sub
xor
cmp
fstps
loopne
lret
push
ss
mov
push
lret
adc
add
loopne
daa
andl
mov
sbb
sbb
fistps
imul
or
adc
nop
movsl
or
pop
aaa
jge
xor
rcl
mov
dec
insb
adc
jl
xchg
mov
xor
mov
enter
sub
test
mov
inc
mov
xlat
and
stc
dec
gs
imul
or
sbb
jl
pop
mov
test
int
jne
jae
insb
adc
dec
mov
pop
xchg
and
xchg
mov
test
sbb
and
push
mov
fcoml
cmp
xchg
icebp
mov
cwtl
mov
mov
jbe
adc
aas
nop
lods
data16
mov
repz
cmp
dec
test
xchg
inc
mov
xchg
cmpsb
push
adc
out
sbb
dec
lcall
mulb
cmp
ds
push
mov
add
cmpsb
cli
sbbb
push
add
sub
hlt
push
dec
adc
pop
and
es
jo
jo
or
cli
push
and
clc
mov
repz
les
jbe
xor
or
jmp
mov
sbb
mov
shll
ja
std
push
and
dec
add
bswap
mov
dec
imul
sti
loope
pop
in
sbb
stc
dec
shll
sub
std
adc
sub
dec
outsb
and
clc
incl
adc
rcll
and
sub
mov
mov
jne
add
jno
pop
xchg
jmp
lcall
add
test
imull
test
into
shrl
stos
in
pop
mov
or
lods
int
test
hlt
sbb
xor
cmpsb
or
sub
loopne
cwtl
cs
mov
lahf
add
xor
aad
iret
std
cli
xor
xor
insb
rcrb
xchg
nop
das
scas
imul
jne
cltd
xor
or
scas
fisubrs
daa
mov
lahf
cmc
mov
pcmpeqd
xchg
in
dec
in
int
inc
call
fistpl
pop
ss
xchg
daa
es
dec
outsb
dec
push
mov
shrl
sbb
adc
mov
mov
push
repnz
addb
outsl
mov
std
pop
adc
popa
inc
push
or
pshufw
andl
and
std
mov
clc
testl
lods
into
lods
pop
pop
push
xchg
js
addb
lret
ret
mov
in
pop
xchg
imul
jb
stos
jecxz
aas
sbb
mov
stos
inc
jne
mov
cmpsl
xor
jle
js
jge
rcrl
mov
dec
inc
mov
loope
cmp
sbbl
push
popa
int
jge
jb
mov
xchg
mul
xor
jns
pop
test
lea
sub
fstpt
addl
pop
cmp
or
inc
mov
shrl
xor
fsts
or
sbb
test
mov
and
and
insb
flds
push
cmpsb
cmpl
inc
mulb
pop
pop
je
add
test
into
lds
push
pop
test
sbbb
cmc
xor
fbstp
mov
pushf
fcompl
lret
addb
pop
cwtl
pop
andb
dec
and
orl
jp
jbe
xchg
push
movsb
jp
dec
insb
gs
shll
test
aas
mov
xchg
sub
cwtl
mov
push
cmp
dec
mov
xorl
sub
arpl
jle
xchg
mov
sub
daa
and
cli
addr16
sti
xor
dec
push
push
xchg
pop
inc
sbb
xor
inc
subb
movsb
inc
and
xchg
lret
sarl
shrb
jns
cmpl
dec
lcall
icebp
rorl
negl
fnsave
or
dec
cmp
out
and
jno
push
repz
dec
xor
xchg
daa
xor
and
jne
leave
adc
scas
mov
les
xchg
jl
pop
jge
into
jb
mov
das
and
pop
xor
pop
stos
and
dec
jb
fstpl
in
jmp
xchg
faddl
mov
mov
rcrb
popa
mov
jae
xlat
in
es
mov
notb
aad
xchg
loopne
mov
lea
aas
pop
stos
or
mov
mov
movsb
stos
pop
xchg
ja
or
cmp
cmp
mov
cmp
add
dec
sahf
push
popf
int
popa
mov
sbb
mov
aas
mov
fwait
and
and
push
mov
add
add
je
mov
sub
xchg
dec
add
jmp
jle
fwait
lcall
cmpsl
loop
sbb
push
fwait
pop
mov
in
fwait
int
shll
jp
sub
je
pusha
les
test
xchg
fs
lock
dec
loopne
ljmp
out
lds
mov
outsb
mov
addl
lcall
cmc
mov
sub
arpl
dec
lret
es
lahf
push
mov
xor
push
mov
sbb
push
add
mov
cmp
add
rorb
xor
subl
test
push
xor
sbb
out
insb
outsl
frstor
pop
mov
outsl
bound
mov
pop
fimuls
xchg
loopne
jb
ret
add
test
cmp
and
xchg
hlt
xlat
mov
popf
or
outsb
stos
out
or
in
je
sub
js
bound
nop
mov
pop
jae
mov
pushf
push
mov
push
sbb
aad
push
hlt
call
movsb
xchg
pop
loope
fisubrl
sub
cld
aad
cmp
idiv
pop
push
rorl
movups
xor
pop
jnp
and
aad
orl
into
stc
push
push
adc
sbb
jmp
mov
xorb
fwait
inc
push
xor
dec
xor
daa
add
std
fs
ffreep
add
sbb
jno
pcmpgtd
jb
xlat
shll
mov
mov
sbb
int
mov
ds
xor
loope
inc
loopne
add
push
or
sbb
push
ror
sub
sbb
add
jno
lcall
mov
or
fwait
inc
clc
loopne
ret
shll
and
xchg
cmp
mov
in
mov
cli
ss
lret
fimuls
fstpl
and
js
pop
mov
sbb
add
sbb
cmp
jo
jns
dec
mov
add
aad
rcrb
dec
jb
pop
cmp
and
push
popa
pop
insb
pop
push
push
inc
addr16
lea
inc
pop
sub
in
outsb
sti
popa
xor
jg
jns
jbe
xor
and
aaa
pop
outsl
or
pop
add
loope
bound
aas
lods
cwtl
mov
fmull
dec
xchg
add
icebp
xlat
dec
push
xchg
xchg
in
pop
push
cwtl
sbb
cwtl
imul
mov
or
or
in
test
mov
outsl
in
xchg
icebp
rcr
push
mov
mov
jle
subl
je
jo
lock
jns
sub
dec
adc
mov
ret
jo
lds
out
and
pop
aam
ret
sub
push
mov
xor
shl
imul
std
orb
jmp
mov
bound
xchg
sbb
mov
sarl
mov
pop
inc
xorb
clc
imul
jb
call
add
mov
and
sbb
sub
add
es
arpl
hlt
pop
arpl
xchg
jno
cmc
loope
lret
fwait
in
jecxz
and
sbb
pop
rcr
push
or
push
mov
pop
lds
stc
or
cmp
or
mov
or
mov
insl
sbb
das
das
xor
lods
adc
les
loope
je
hlt
int3
jno
in
mov
cmp
mov
or
dec
sbb
out
lods
clc
hlt
jl
ss
or
arpl
pop
movsl
std
sarl
cmpsb
add
inc
sub
push
push
sub
in
mov
cwtl
inc
jns
nop
jmp
mov
cmc
fcoms
das
subb
mov
jb
inc
push
cwtl
xchg
bound
call
xchg
mulb
xor
pop
rolb
pusha
popf
lods
adc
or
push
call
ja
iret
and
fiaddl
int
jp
or
jb
stos
or
xor
outsb
test
fdivrs
js
or
fsub
xchg
cmp
into
repz
xchg
cmp
cld
das
mov
pop
cmp
mov
inc
jge
jl
xor
adc
in
jecxz
lret
andl
jo
scas
pusha
pop
mov
lret
cli
ja
inc
dec
sub
xchg
cltd
push
movsl
ja
icebp
add
xchg
ja
imul
adc
rcll
adc
inc
mov
cwtl
jmp
lahf
pop
hlt
push
in
lods
push
mov
aad
dec
ja
sub
xchg
leave
and
and
out
dec
sub
cmp
dec
xchg
mov
and
dec
aaa
or
and
stos
cwtl
xorb
sub
jecxz
or
pop
inc
or
xchg
ja
cmpsl
push
je
mov
stos
mov
pusha
jecxz
push
inc
loop
mov
test
push
das
pop
insl
cwtl
jg
out
push
push
mov
vucomisd
out
loopne
sti
lock
adc
cmp
pop
xor
dec
nop
stos
xor
sti
push
push
sbb
mov
jp
xor
jns,pn
jl
pop
test
mov
les
push
pop
imul
std
push
pushf
cmp
movsb
cli
cmp
lcall
loope
pop
and
rcrl
int
jb
cmp
sub
out
push
shlb
xlat
or
scas
out
fmuls
int
xor
dec
movsl
mov
pop
cmp
xchg
inc
jnp
push
and
push
push
lock
xchg
lret
std
jge
fwait
stc
xchg
jb
pop
and
fidivs
jecxz
iret
cmp
and
lahf
test
ljmp
mov
repz
xlat
push
hlt
and
dec
pusha
fildl
lret
xor
jnp
push
dec
jg
lea
loop
jnp
lods
cmp
or
pop
test
sub
push
scas
push
addr16
fucomp
add
adc
jo
cs
ja
mov
daa
and
inc
es
or
mov
scas
outsb
pop
mov
sarl
sbb
jp
int3
movsl
inc
jle
not
lahf
fsts
mov
xchg
xchg
mov
jns
dec
sarb
popa
test
jb
sub
dec
lods
mov
into
cmp
ja
sbb
push
stos
int
cmp
jne
stos
jo
mov
pusha
je
std
ficomps
mov
mov
add
pop
jno
rdtsc
test
std
rcl
clc
add
push
out
sbb
andb
xchg
and
gs
add
ljmp
add
sahf
jo
ja
lret
jne
nop
jno
iret
adc
cmp
into
mov
dec
fimull
repnz
cmpsl
dec
or
xchg
ret
imul
fdivrs
ljmp
pop
or
lret
hlt
jne
inc
mov
dec
sbb
push
dec
and
xlat
imul
lods
or
icebp
nop
les
ja
pop
jle
mov
inc
loop
shll
outsb
ds
inc
int
sub
outsl
and
je
cmp
sub
test
cmp
push
ret
inc
cmp
sahf
mov
stos
jno
in
jne
mov
sti
or
insl
cmc
movsl
sub
movsl
dec
arpl
or
ljmp
in
push
sahf
and
std
das
sub
pop
enter
stos
jmp
paddq
jmp
gs
aad
inc
sti
inc
add
out
add
adc
ret
insl
rorb
rolb
xor
lods
add
aad
in
iret
notl
jne
data16
cltd
daa
pop
jnp
cld
ss
pop
mov
push
out
sub
xchg
stos
pop
mov
adc
popa
lods
mov
pop
inc
mov
dec
mov
jb
shrl
cmp
xchg
adc
in
test
leave
and
es
aad
dec
jbe
shlb
sub
mov
xchg
pop
sbbb
mov
inc
mov
ja
pop
loope
or
mov
and
inc
in
cmp
adc
and
cli
mov
fwait
sub
or
loopne
and
dec
xlat
es
clc
arpl
pop
mov
push
pop
decb
scas
cmpb
pop
mov
cmpsl
movsb
inc
nop
add
scas
in
cmc
sti
movsb
aaa
sbb
jmp
inc
cmpsl
lds
sbb
cli
sarl
pushl
mov
enter
loope
mov
sub
or
dec
xchg
mov
mov
sbb
dec
sub
fwait
lock
gs
notl
push
flds
mov
mov
lcall
mov
mov
xor
jg
adc
loopne
testb
xlat
lret
mov
push
movsl
xchg
or
jmp
inc
je
jne
adc
xlat
push
jae
sbb
and
mov
add
sbb
cwtl
lea
test
mov
xchg
lea
add
flds
aad
push
hlt
inc
sahf
xchg
xchg
xorb
jle
mov
push
push
cmp
fbld
imul
jns
jo
add
push
sbb
fdivp
scas
subl
clc
movsb
or
cmp
test
jge,pn
cld
push
and
sbb
pop
jb
ds
xchg
shrl
or
and
xorl
sahf
adc
jle
aam
sbb
inc
cld
jb
outsb
cltd
aam
lds
xor
clc
mov
fsubl
xchg
pop
fcomip
mov
aad
push
cld
push
sub
adc
mov
mov
xchg
dec
dec
or
mov
clc
mov
cmp
cmc
mov
lock
inc
inc
out
jmp
lods
pop
xor
add
xor
xchg
subb
jmp
stos
fnstcw
and
sub
jb
cmc
push
aad
sbb
out
sarb
mov
jle
or
mov
iret
test
lea
aas
cld
pop
mov
mov
jb
imul
movsl
int3
fmul
add
je
cmp
stos
jg
add
pop
out
inc
xchg
mov
adc
test
aaa
xchg
push
fdiv
mov
shll
popf
mov
mov
fwait
je
add
rcrb
int3
fcoml
xchg
aaa
pop
test
test
mov
call
popa
jecxz
xchg
stos
add
push
lods
dec
lahf
push
icebp
in
call
add
mov
scas
in
or
xor
pop
sbbb
pop
mov
inc
push
pusha
dec
pop
stos
cmp
hlt
repnz
mov
mov
repz
lds
loopne
nop
shrb
cmpsb
fildll
push
push
popl
and
adc
sub
hlt
fisttpl
xchg
insb
xchg
mov
mov
mov
test
mov
push
cmp
add
jmp
rcrl
pop
out
fcoms
cmp
pop
and
cmc
dec
jnp
in
jmp
in
jge
jnp
or
jl
jg
xchg
aas
cmp
sub
jmp
push
pop
adc
sub
add
fnstcw
ljmp
clc
pop
fldl2t
cmpsl
shll
push
or
ljmp
mov
sub
int3
fadds
push
shl
outsb
dec
jne
push
xor
lock
in
insl
addr16
jle
lea
jno
mov
lret
mov
add
sub
subl
popa
xchg
cmp
cmp
jo
pop
das
push
mov
fidivs
and
cmp
jnp
or
fimull
or
pop
f2xm1
cwtl
cmp
mov
pop
stc
mov
negb
jp
mov
mov
fiaddl
popa
cltd
jg
mov
inc
jno
adc
push
popf
and
jle
mov
xchg
lret
stos
popf
popa
lahf
arpl
pop
inc
cmp
repnz
int
loope
adc
xchg
dec
adc
mov
dec
add
bswap
out
pop
push
adc
int
mov
sbb
fiaddl
and
sbb
jmp
xor
fld
lret
mov
mov
xchg
mov
jle
icebp
nop
sbb
jno
jge
and
inc
cmp
aad
shlb
lds
pop
adc
jge
xor
out
daa
xor
push
push
ss
sbb
in
mov
push
test
fdivs
xchg
xchg
js
mov
inc
mov
out
xor
aas
or
in
mov
out
lods
fwait
mov
out
jle
xor
negb
fisubs
imul
sub
xor
sub
mov
ret
stos
sub
call
loope
and
jb
movl
lea
fildll
mov
shll
popf
sti
xor
push
and
scas
and
sbb
sahf
fs
mov
movsw
in
negb
ljmp
cmpsb
loope
push
push
or
imul
or
xor
jg
xor
inc
pop
cmp
out
ret
mov
lds
mov
enter
xor
cmp
ljmp
cmp
pop
lock
jb
adc
adc
inc
sbb
lock
incb
ret
or
xlat
xchg
sbb
ss
jno
cmp
push
jg
push
cmc
inc
adc
in
enter
xor
popf
xor
lds
push
push
mov
jmp
and
mov
js
out
scas
mov
leave
int3
sbb
mov
cmp
jae
mov
cmpsl
ficomps
nop
jmp
mov
mov
insb
pop
jle
addr16
cltd
mov
fldl
add
scas
push
xchg
mull
hlt
mov
and
mov
je
cmp
pop
lods
add
mov
lea
xchg
andb
sbb
inc
xor
mov
cwtl
mov
mov
mov
adc
cmp
call
cmpsb
lock
cltd
stos
les
pop
jbe
push
push
mov
dec
push
mov
xchg
ret
or
out
cltd
sbbb
int3
push
or
add
scas
xor
mov
sbb
sbb
test
and
push
add
or
int
add
mov
and
mov
out
rcrl
incb
mov
icebp
sarb
or
leave
fdivs
or
xor
out
sbb
or
fiaddl
xchg
out
sub
into
xchg
inc
imul
jmp
stos
push
inc
jp
add
test
push
cli
sub
fcom
add
mov
cmc
pop
dec
cltd
movsl
adc
icebp
pop
mov
mov
xor
ret
lret
or
repnz
xchg
lret
adc
inc
add
xlat
mov
faddl
mov
jno
mov
dec
xchg
push
inc
in
je
xor
aam
cwtl
pop
idivb
faddl
xor
sub
addb
in
push
push
jnp
and
loop
dec
cmp
cmpl
je
out
push
into
adc
scas
sbb
xor
pusha
mov
jg
cmc
outsb
hlt
lcall
dec
bound
adc
pcmpgtw
mov
ret
mov
call
jae
sub
inc
adc
push
push
pushf
in
sbb
jecxz
pop
insl
stos
int3
xchg
inc
divl
testb
pop
mov
int
outsb
or
adc
mov
cmc
aaa
aad
adc
inc
fnstenv
fidivs
mov
icebp
pop
pop
inc
mov
fidivs
cmp
mov
mov
pop
std
loopne
jl
mov
or
comiss
inc
xlat
ss
push
js
cmp
jp
icebp
fnstsw
mull
push
or
mov
in
push
int3
nop
inc
js
mov
adc
mov
jb
and
jnp
push
daa
in
loope
cmove
and
pop
and
fisubrs
outsb
test
mov
add
call
dec
pushf
xchg
mov
das
int
fsubs
repnz
ret
in
mov
xchg
insl
adc
or
sbb
cmp
lcall
psubusb
jno
jmp
dec
hlt
xchg
inc
sbb
adc
fcmovu
or
dec
mov
ljmp
movsb
pop
mov
fldt
sub
bound
in
push
arpl
movsb
flds
mov
mov
pop
cmp
dec
pop
jmp
jne
divb
push
sbb
pop
and
popa
sub
dec
push
push
dec
ds
push
in
xchg
js
mov
sub
ret
in
xlat
sahf
push
xchg
out
ret
lret
pop
ja
sub
hlt
or
dec
mov
insl
sbb
xchg
lret
icebp
sbb
dec
mov
mov
in
out
lods
sub
pop
bound
jne
mov
data16
out
test
adc
out
js,pt
rolb
out
fwait
shrb
in
ljmp
clc
mov
add
add
ja
mov
push
sbb
subb
stos
mov
cmp
test
sbb
fisttpll
lds
lret
lahf
cmp
and
push
ljmp
fcmovnb
fnstenv
pop
lods
dec
call
clc
xchg
sub
dec
enter
and
dec
sub
lods
mov
in
mov
mov
jns
icebp
jg
cmpsl
les
mov
inc
aaa
ds
lcall
pushf
adc
sub
dec
pop
jmp
sarb
sub
sarb
sti
or
inc
mov
ret
jp
hlt
jg
mov
mov
jmp
add
xchg
in
xor
adc
inc
iret
divl
cmpsb
mov
jle
cmp
mov
push
sbb
fdivrs
adc
je
add
inc
data16
int
lods
movsl
inc
xor
add
push
xchg
test
outsl
push
dec
mov
popf
cmp
or
pop
sbb
and
shlb
ds
cmp
fnstenv
and
add
inc
sbb
xchg
sbb
mov
dec
movsb
insl
dec
adc
insb
ret
push
cltd
sbb
push
out
sbb
cmpsb
sbb
mov
divl
pop
arpl
test
shl
outsb
shrb
pop
push
ds
dec
mov
push
or
push
imul
dec
inc
inc
xor
cmp
or
movsl
cld
insl
sub
mov
sbb
arpl
mov
xchg
mov
rcrl
popa
xchg
roll
dec
lods
jge
mov
jae
test
mulb
xor
cltd
add
xchg
ljmp
pop
push
mov
fnsave
movsb
mov
mov
sbb
xor
xchg
or
imul
js
jl
cld
outsb
adc
or
std
testb
ss
cltd
add
movsb
inc
xlat
xchg
cmp
fldenv
and
loopne
jg
in
push
inc
xor
fs
in
add
adc
ret
cmpsl
insb
add
call
push
popf
icebp
sub
sbbb
push
aaa
adc
cmp
or
hlt
mov
mov
mov
or
mov
lret
inc
fcoms
subb
inc
cmp
and
add
sub
rcl
xchg
shlb
mov
pop
stos
sub
or
jge
movb
jbe
mov
cmp
mov
add
or
mov
out
cld
arpl
test
and
mov
loopne
inc
jle
dec
mov
call
std
test
clc
jle
sub
pop
pop
xchg
adc
outsl
xchg
imul
lods
outsb
or
xor
mov
xchg
jns
mov
dec
xchg
fnstsw
imul
mov
jnp
mov
fldcw
lcall
imul
cmp
scas
clc
mov
xor
adc
sub
inc
pop
clc
jo
test
scas
mov
dec
js
mov
dec
mov
lret
and
xor
adc
jmp
push
cmp
mov
dec
dec
fwait
lret
cld
mov
mov
mov
call
add
movsb
push
ljmp
pop
add
dec
ret
jae
push
mov
adc
push
dec
jo
sbb
push
add
cwtl
dec
leave
push
push
mov
mov
fnstcw
repnz
in
xor
pop
aaa
push
push
or
mov
mov
inc
loope
dec
sbb
rcrb
scas
inc
out
in
jl
out
out
clc
mov
jmp
scas
xor
cmp
push
xlat
push
fmuls
rclb
outsb
fcompl
test
test
push
sbb
outsb
lahf
lcall
outsb
mov
fstp
and
pop
add
dec
sub
addr16
cli
cmpsl
sbbl
mov
xchg
es
out
in
sub
and
imul
pop
loope
sarl
add
std
ds
dec
imul
lds
rcrl
xchg
add
push
dec
faddp
lahf
or
repnz
daa
clc
xchg
push
mov
adc
dec
fisubrs
xor
loop
cmpb
addr16
xor
loope
lock
test
pop
mov
shlb
std
fs
xor
rorl
ss
xchg
aaa
daa
iret
push
mov
dec
hlt
subb
xorb
pop
push
stc
or
xchg
arpl
bound
scas
data16
out
pop
loope
js
mov
xor
pop
sub
and
mov
xor
or
xchg
jae
stc
xchg
jb
pop
movsl
jg
pusha
mov
and
push
push
imull
cs
fldt
xchg
scas
lea
imul
stos
decl
mov
adc
inc
xor
mov
in
xchg
rcrl
fiaddl
cmpsb
ret
or
mov
xchg
pop
repnz
daa
repz
cld
jmp
mov
lea
lock
lcall
imul
or
jle
mov
sbb
mov
imul
mov
fisttps
cmc
add
pop
xorl
mov
daa
push
xchg
int3
js
loope
fwait
push
jbe
fisubl
ficoms
dec
cmp
icebp
fcoml
cmc
sbb
stos
pusha
mov
cmp
dec
mov
or
adc
mov
stos
mov
cmp
fistl
inc
mov
add
insl
scas
fimuls
mov
repz
in
pop
fisubrl
xor
pop
pop
xor
pop
es
rolb
jno
lock
popa
scas
int3
push
inc
sbb
xchg
sbb
lret
lods
test
fwait
jno
jns
jo
lods
stc
adc
je
xlat
fstp
push
add
hlt
and
push
push
sbb
mov
outsl
addl
ret
sub
into
sub
push
pushf
mov
add
pop
in
pop
mov
iret
cld
ja
insb
mov
mov
pop
insl
mov
imul
jmp
pop
loop
jnp
imul
pushf
adc
push
mov
push
movsb
test
rorb
rclb
mov
movsl
xchg
mov
notl
jbe
pop
or
jg
xchg
dec
ds
lahf
test
cmp
ss
in
ja
mov
add
sub
cmpsb
xchg
dec
mov
sbbb
test
sub
cld
dec
mov
in
fstl
ret
hlt
fidivs
xor
call
decb
test
or
and
mov
movsb
lock
fsubrl
jns
xchg
adc
outsl
cmpsl
cmpl
and
xchg
rorl
and
xchg
aas
fmul
stos
pop
xor
xor
pop
push
add
scas
int3
in
pop
or
push
lahf
push
cmpsb
dec
or
rorb
daa
xchg
add
jmp
pushl
mov
mov
dec
cld
push
xchg
sbb
mov
mov
jns
test
sti
cltd
fnsave
aas
or
jns
int
jle
xchg
jb
repz
adc
jle
in
sub
xor
xchg
rcll
arpl
and
ja
and
cmp
push
sub
rorl
inc
inc
mov
cmp
je
js
add
into
rcl
pusha
mov
jge
repnz
jo
mov
icebp
mov
pop
les
mov
imul
jno
imul
inc
mov
ficompl
mov
fistpl
movsb
xor
in
adc
inc
in
dec
dec
rcr
repz
mov
shr
sbb
stos
hlt
ret
in
pop
jo
push
pusha
ret
mov
cmp
int3
pop
jae
xor
push
inc
out
pop
aaa
fistps
ljmp
or
sbb
pop
and
imul
test
lret
and
and
ret
push
xor
scas
and
xchg
pop
push
fcomip
dec
cwtl
idivl
negb
psllq
leave
gs
repnz
mov
xor
ds
popf
mov
popa
or
repnz
outsl
push
mov
sbb
fcoms
and
int
dec
test
inc
daa
xchg
outsl
mov
xor
orps
movsl
dec
imul
pop
push
ficoml
jmp
mov
jnp
dec
mov
or
lret
add
rcrb
test
push
push
add
negl
cmp
shl
xchg
cmp
jbe
push
std
shlb
dec
cmc
dec
cld
mov
ds
int3
cmpb
cltd
imul
call
cwtl
mov
sub
add
cld
scas
xchg
dec
hlt
scas
out
flds
pop
adc
icebp
xchg
jo
cmpsb
dec
xor
inc
sbb
adc
mov
pop
popa
and
sub
fsubs
pop
int
cli
inc
je
pop
push
movsb
outsl
lods
push
jl
ret
fbld
and
pushf
fdivrl
ret
sub
xchg
xlat
mov
pop
push
push
kmovb
mov
loop
mov
clc
lret
out
mov
mov
sti
fdivrl
ret
cwtl
mov
cld
xlat
aam
andl
lock
mov
sbb
dec
ret
fchs
pop
and
pop
inc
push
jne
outsb
sub
cmp
repnz
out
cmp
mov
roll
pop
dec
outsl
in
in
fdivs
pop
rorl
xchg
inc
int3
pop
adc
mov
mov
nop
insl
faddl
xchg
ret
rcll
jg
jb
cmpsl
mov
adc
scas
in
iret
xchg
lret
lret
mov
push
fcomps
mov
jmp
mov
outsl
ja
jne
dec
sbb
pop
sub
jmp
mov
pop
test
xchg
stos
pop
mov
add
sub
and
data16
mov
aas
cwtl
mov
push
loopne
loop
mov
insb
lea
movsb
stos
lea
sub
pop
pop
fcomip
inc
cmp
adc
test
shrb
xchg
sbb
pop
or
cmp
adc
lea
inc
data16
out
mov
jne
xor
sahf
adc
cs
aam
ss
mov
jo
orb
orl
int3
imul
es
data16
push
or
outsl
loope
adc
fdivrs
xchg
push
pushl
xor
lahf
inc
mov
mov
mov
fistpll
mov
test
lahf
hlt
push
int
scas
mov
inc
jmp
pop
std
xor
mov
xorb
scas
div
enter
dec
sbb
mov
mov
ja
push
xchg
outsl
ljmp
mov
iret
mov
mov
dec
sub
repnz
fldl
fmuls
jp
aas
sbb
jle
xchg
imul
adc
mov
adc
cmpb
mov
or
fsubrl
lea
pop
or
mov
xor
pop
aad
pushl
jg
inc
sub
subl
scas
jl
xchg
or
andb
push
jo
dec
xchg
xchg
sar
icebp
test
fsubs
inc
xorb
push
call
sub
mov
popf
in
dec
mov
adc
cmp
shlb
pop
lods
cwtl
push
sub
cli
fsubp
aaa
popa
call
pop
xchg
loop
int
jl
shlb
repnz
sub
cwtl
cmp
out
scas
adc
mov
fildl
out
adc
push
cld
add
mov
call
and
movsb
lsl
in
xchg
arpl
push
cmp
mov
je
jl
cwtl
sbb
xor
cmp
jb
or
clc
xor
pop
xchg
dec
addr16
out
faddp
std
mov
mov
jg,pt
loope
fdivrs
mov
mov
cmp
sbb
xchg
push
insl
rorl
add
inc
pop
and
nop
push
xor
lods
adc
lds
jae
jbe
jne
sbb
add
rcrl
fisubl
cs
cs
sbbb
mov
push
push
xchg
lds
jno
cld
or
sub
outsb
lods
mov
dec
clc
adcl
fcom
mov
jl
cmp
je
mov
xchg
jno
aam
popa
push
cli
mov
pop
pushf
clc
pop
cwtl
test
aas
inc
out
jp
xchg
sbb
xchg
or
mov
scas
subb
jg
xchg
mov
mov
push
ljmp
aam
mov
icebp
pop
das
and
scas
lods
sub
dec
inc
fimuls
xchg
test
fs
mov
jo
gs
lock
mov
push
jo
insl
xchg
jmp
rolb
inc
jno
sahf
pop
lahf
push
push
insb
mov
sbb
sub
js
sub
inc
adc
xor
jmp
lret
cwtl
fdivl
lret
repnz
jmp
test
cmpsl
xor
cltd
pop
sti
shlb
push
popa
shlb
mov
and
int3
mov
aaa
fstpt
jns
jne
cs
loopne
sarl
mov
daa
lods
fucom
sti
jae
push
xchg
dec
rcll
sub
cmp
sti
test
xor
lcall
jmp
sbb
cli
fs
add
lock
mov
jge
jae
mov
xchg
inc
xchg
mov
rolb
adc
int3
test
test
dec
sbb
jo
ret
xor
mov
dec
mov
scas
mov
pop
jne
daa
add
scas
out
cmp
jmp
push
or
or
imull
or
fisttpl
int
repz
lds
cmp
mov
pusha
pop
imul
xlat
mov
repnz
stc
adc
push
lret
sub
pop
push
ss
rorb
fisttpll
sbb
adc
cmp
fs
enter
sbb
shrb
push
mov
leave
dec
adc
or
popf
sbb
sub
dec
mov
outsb
int
pop
es
adc
orb
lcall
scas
mov
roll
mov
iret
xor
pusha
cli
push
mov
xor
fs
sub
cmp
jnp
in
insl
scas
jbe
push
pop
stos
cs
jns
mov
dec
mov
mov
jnp
mov
leave
lcall
sbb
mov
cmp
cwtl
mov
cmc
ficoml
decl
xchg
in
and
sti
adc
pushf
lods
lret
repnz
pshufw
and
or
push
clc
or
jnp
ss
sbb
sbb
insl
cld
pop
imul
js
dec
dec
fs
pop
mov
cli
xor
pop
rolb
and
adc
bswap
sbb
mov
mov
sbb
adc
jns
mov
pusha
mov
fldl
outsb
push
mov
pop
jne
push
lret
dec
mov
loope
mov
and
mov
dec
lret
call
push
and
mul
iret
cmpsb
cmpb
push
arpl
loopne
or
jbe
adc
add
test
test
push
jle
dec
add
mov
out
sbb
test
jns
nop
push
jne
jnp
and
ror
cld
out
xorl
xchg
pop
in
sti
pop
imul
adc
mov
imul
sbb
outsb
jbe
jb
ljmp
pop
lock
adc
or
cmp
cmp
fbld
and
pop
sbb
aam
mov
xchg
jb
jns
jae
mov
outsl
jge
lock
and
mov
adc
add
push
sahf
xchg
sbb
cmp
sub
into
jnp
mov
fisttpl
js
rcrl
dec
push
sbb
test
xor
fsubs
mov
jl
repnz
imul
pusha
mov
or
fs
lea
std
div
cmp
popf
pop
push
pop
jle
fidivrl
inc
mov
int
ds
insl
xchg
mov
in
into
out
fcomps
rorl
in
popa
ficomps
and
call
or
xchg
xchg
sbb
jg
sahf
test
dec
push
bound
xchg
inc
inc
jge
push
jp
adc
push
mov
xor
gs
fsubp
mov
adc
lods
lods
das
dec
cld
clc
fbstp
pop
mov
pop
sub
xor
or
cs
insl
sbb
mov
xchg
sbb
stos
adc
xor
jb
or
aaa
fsubrs
aam
and
or
add
pop
inc
cmp
pop
lret
sub
add
leave
mov
push
and
sbb
mov
push
je
mov
jo
mov
and
stc
rorl
push
fsubrl
lds
push
inc
lea
insb
clc
hlt
lcall
pop
pop
xor
mov
lret
xor
imul
inc
aad
ljmp
adc
mov
jmp
and
sub
xchg
int
lret
inc
pop
push
pop
stc
je
iret
sbb
push
mov
testb
xor
pop
loopne
cmp
lods
cmp
jmp
dec
into
call
jae
fadds
adc
sub
je
orb
iret
mov
cmpsb
movsl
pop
sbb
repnz
sti
clc
fimull
ljmp
fstpt
popa
mov
pushf
mov
jle
shlb
ljmp
xchg
imul
stc
xlat
jecxz
fst
dec
imul
mov
mov
insb
xor
aas
or
stc
popa
cmp
sbb
mov
scas
pusha
xchg
add
je
or
pop
sub
daa
inc
imul
push
push
fmul
mov
testb
push
adc
lret
mov
cmp
fdivl
and
mov
orl
les
ljmp
iret
lret
pop
xchg
out
cmp
mov
movsl
push
or
inc
cmp
imul
enter
pop
jp
push
cmp
insl
test
sbb
cli
popa
sarl
xor
push
mov
ret
loopne
xor
xchg
sahf
or
or
movb
rol
decb
dec
xor
fcomps
xchg
or
shll
test
jle
lock
daa
mov
pop
out
push
mov
cwtl
lds
scas
mov
std
imulb
xor
lahf
nop
iret
into
push
and
adc
adc
xchg
stos
adc
push
lcall
int3
xor
dec
test
stos
arpl
popa
into
lcall
add
int
or
test
jne
sub
or
or
pusha
or
adc
fsub
inc
xchg
adc
addl
pshufw
mov
push
mov
idiv
aam
lods
stos
or
shrl
jge
xchg
mov
push
sbb
mov
gs
mov
shr
sbb
sahf
adc
or
xchg
mov
mov
out
imul
mov
sahf
fsubl
andl
xchg
push
js
and
xchg
sub
jb
cmc
scas
mov
pop
jmp
mov
aaa
popa
mov
sub
loope
loop
or
imul
add
jl
rcrb
je
repz
in
xor
push
fwait
cmpsb
dec
add
or
pushw
cmp
jl
int
in
fcmove
adc
arpl
push
loope
cmpsb
rcll
outsb
aam
inc
xor
add
mov
movsl
inc
je
inc
aam
sbbb
insl
popa
sub
inc
add
add
lcall
sti
sub
push
pop
mov
mov
jp
xchg
aad
jb
mov
mov
dec
inc
pop
xor
sbb
pusha
pop
test
jg
sub
fwait
inc
into
lret
adc
stc
ljmp
int3
xchg
in
cmp
xchg
mov
int3
orl
inc
jne
lds
and
mov
mov
sbb
and
enter
inc
mov
in
test
repz
dec
inc
sbb
jbe
aad
ret
pop
xor
mov
imul
outsb
xor
dec
and
xchg
xlat
popa
xchg
ja
shlb
inc
call
xchg
pop
pop
out
add
or
add
arpl
adc
pop
dec
and
cli
jno,pt
sbb
jl
or
xor
loopne
pop
inc
or
sub
push
pop
adc
sub
movsb
inc
pusha
pusha
lods
icebp
ja
cwtl
jmp
push
mov
js
push
daa
xchg
xchg
pop
mov
notb
or
pop
imul
roll
out
pop
pop
xor
jnp
popf
js
pusha
add
inc
fisttps
jmp
inc
push
iret
dec
mov
sbb
dec
dec
aad
cmp
lcall
push
jo
stos
mov
mov
jecxz
subb
lahf
pop
jno
mov
notl
movd
mov
or
popa
popf
pop
std
or
fistps
loope
out
add
pushf
mov
cmpl
xchg
xchg
add
sub
loop
mov
dec
mov
in
pop
cltd
fwait
rcl
stos
or
jns
sbb
cmp
mov
or
popf
icebp
stos
out
push
lahf
xor
jne
mov
es
push
mov
iret
popf
xchg
ret
mov
pop
movsb
sub
int
das
adc
push
pop
inc
loope
lock
test
int
jp
das
dec
lcall
pop
cmp
pop
test
xchg
popw
jg
add
loope
stos
push
xor
mov
xchg
xchg
nop
cmpb
data16
jno
sahf
repz
test
lods
or
pop
fsub
in
daa
push
or
push
xorl
cmpsl
cwtl
loope
push
lods
xor
jle
mov
outsl
mov
mov
inc
xchg
jno
pop
in
mov
inc
movsl
mov
sarl
xor
mov
adc
into
or
adc
lods
cwtl
daa
shrl
add
and
jb
sub
adc
pop
jecxz
or
jle
inc
test
push
ret
lods
out
dec
pop
inc
sub
lods
js
stos
lret
and
insb
hlt
jecxz
cmpl
ja
push
and
cmp
jbe
hlt
mov
dec
in
and
dec
xor
std
mov
loop
and
test
out
mov
stc
clc
out
jb
mov
jle
or
jae
outsl
ret
pop
cmpps
add
fisttpl
enter
addr16
mov
les
inc
xor
cmp
jle
push
pop
mov
sbb
rolb
xor
sbb
and
mov
dec
pushf
push
xchg
ds
mov
or
xchg
adc
pop
mov
inc
sahf
stc
inc
mov
shl
jmp
add
stos
lock
and
out
iret
ja
push
pop
xor
and
pop
icebp
adc
add
push
jl
test
nop
mov
hlt
push
sub
mov
in
imul
movsb
ds
mov
inc
sbb
arpl
jge
leave
pop
xor
ret
aad
outsb
aad
inc
ret
cmp
aad
add
sahf
pusha
inc
dec
lock
and
inc
sbb
jp
shll
out
pop
xchg
out
mov
push
jns
xor
stos
pusha
xor
mov
mov
popf
cmpsb
in
cmpsb
out
aam
or
orl
pop
mov
fbstp
flds
jo
pop
out
jge
mov
orb
add
sub
sbb
rcrb
xor
xchg
adc
or
or
aaa
sbb
push
xchg
hlt
mov
daa
pop
mov
push
ret
in
loopne
jecxz
xchg
lods
fisttpll
test
push
shll
sbb
mov
mov
xor
add
arpl
pop
sbb
mov
ret
pop
adc
or
xor
imul
fcmove
jo
daa
test
adc
cmp
fsubrp
adc
dec
cmp
sub
loopne
aam
push
jp
xor
dec
dec
push
jl
enter
jb
pop
cmp
sbb
gs
xor
bound
dec
arpl
dec
sub
dec
orb
jo
jge
pop
xchg
test
jno
or
imul
repz
cs
or
movsl
sarb
int
pop
sti
cmp
test
and
mov
fisubrs
mul
cwtl
ret
cmp
xor
add
add
mov
push
xor
add
xor
sbb
mov
mov
push
mov
cmc
push
sbb
insb
fimull
inc
mov
mov
add
add
or
inc
and
outsb
movsl
call
aas
and
mov
mov
fimull
insb
in
ljmp
rcl
adc
lret
cld
xor
sub
faddl
jmp
pop
cmp
mov
jg
cs
jno
mov
in
js
stc
jl
push
aas
call
pop
sub
adc
outsb
ljmp
orb
pop
adc
daa
lret
cmpb
arpl
lods
jne
jnp
je
cmc
ja
sub
jp
mov
scas
cmp
mov
mov
xchg
lret
popa
mov
mov
and
cld
scas
dec
int3
int3
sahf
sahf
mov
or
aas
add
insb
pushf
sbb
fdiv
out
add
addr16
xchg
inc
pusha
sub
pushf
das
dec
cli
dec
jecxz
mov
jae
sbb
push
outsl
mov
iret
cwtl
mov
shl
int3
lock
push
cwtl
mov
pop
jbe
stc
xor
je
stos
push
imulb
cli
cmp
scas
out
sub
ret
and
movl
arpl
push
push
shlb
mov
jl
js
push
rcll
cmpsl
pusha
test
dec
aas
pop
outsl
mov
mulb
sbb
mov
inc
xchg
mov
mov
cld
push
adc
or
xchg
les
sbb
sbb
and
pop
cmpb
pop
ja
jle
and
add
and
mov
shll
inc
fstps
leave
mov
inc
test
jns
ds
or
cmpb
mov
imull
aaa
test
sbb
or
xchg
shrl
ret
sub
fcmovnb
scas
and
adc
mov
aas
icebp
inc
jg
and
push
sub
jle
nop
xlat
inc
adc
inc
mov
or
out
enter
gs
inc
fsubrp
icebp
jns
cmp
add
imul
add
std
mov
xor
dec
xor
fs
and
mov
mov
loopne
jmp
mov
add
pop
pop
add
cmp
jbe
and
xchg
pop
sub
jle
inc
sub
out
sbb
jae
sahf
adcb
and
dec
imul
test
popf
sub
and
repz
sub
stos
imul
cmpsb
and
inc
test
xchg
xor
rclb
rol
xchg
xchg
push
int
subb
adc
xchg
test
jbe
and
xchg
dec
lock
xchg
fildll
jns
mov
adc
call
mov
mov
push
push
mov
mov
sub
int
insb
loop
out
leave
cltd
loope
xor
push
stos
push
pop
mov
orl
shlb
or
rorl
out
insb
popf
sbb
pop
out
aas
push
jg
roll
and
dec
loopne
jle
dec
in
and
or
in
rcrl
in
jmp
das
add
pop
inc
fwait
ret
cwtl
daa
push
jle
into
fucomi
outsl
jno
loope
add
int
fstpl
cmp
rorb
jnp
fmull
mov
pop
adcl
sub
das
cmp
or
jns
mov
jns
xchg
jnp
push
imul
in
sti
ljmp
movsl
int3
jl
pop
adc
inc
and
frstor
add
ljmp
aad
inc
and
sub
ds
mov
inc
jo
push
mov
insl
fildll
stos
rcr
inc
stos
lods
xor
xchg
out
push
lods
inc
or
jle
dec
pop
adc
sub
outsl
or
outsb
ret
je
test
roll
lock
pop
cld
outsb
jmp
mov
stc
in
xchg
std
inc
movsl
rcll
jmp
enter
shll
jle
pop
push
xchg
cmp
push
jnp
jmp
addr16
push
in
icebp
psllw
dec
loopne
cld
mov
mov
aas
and
and
mov
xor
aad
adc
add
inc
popf
int3
xor
outsb
xor
mov
stos
push
push
loop
pusha
lods
pop
incb
ss
mov
adc
icebp
mov
js
in
sub
stc
lcall
sub
push
lods
dec
inc
lock
fldt
clc
fs
aaa
divb
and
mov
in
push
push
push
mov
jns
lods
pop
scas
mov
mov
mov
inc
scas
dec
fnstsw
xlat
sti
out
inc
jbe
push
push
subl
mov
or
add
sub
mov
xchg
mov
jge
testl
mov
out
and
add
data16
cmp
lahf
ror
icebp
call
inc
cmpsl
and
lcall
inc
test
or
dec
and
mov
adc
mov
ss
push
cli
sbb
test
aam
jecxz
pop
enter
je
cmp
aas
imul
inc
out
xchg
push
pushf
xchg
popa
xchg
sub
cwtl
pop
cs
clc
gs
fwait
es
loopne
rorb
mov
fbstp
jg
jmp
int3
sbb
call
insb
adc
aam
adc
cmp
lcall
lds
pop
inc
or
push
pusha
pop
fst
movsl
flds
into
xchg
xchg
nop
xchg
push
movsb
cwtl
rclb
in
sbb
and
in
js
mov
lds
stc
jnp
and
jo
outsl
call
sahf
sub
sbb
cmp
and
mov
or
mov
sub
pop
jge
push
lods
outsl
fisubrs
cld
mov
cli
in
loopne
cmp
mov
xchg
push
fneni(8087
rorb
popa
loopne
cmpb
shlb
push
inc
mov
cld
mov
aaa
data16
jl
roll
lahf
jg
sbb
cmc
mov
inc
test
cmp
xchg
mov
jmp
ret
sub
jae
lock
push
imul
lea
enter
rcll
inc
push
dec
ja
adc
push
pop
test
push
lods
xchg
adc
repz
mov
icebp
fidivs
faddl
mov
test
mov
sub
cwtl
insl
insb
cmp
mov
sbb
inc
mov
pushf
adc
fucomi
push
xor
pop
sbb
pop
or
arpl
or
mov
mov
pushf
std
negl
add
jp
sbb
stos
cmp
cwtl
lahf
aas
xchg
pop
inc
mov
test
push
orl
xchg
mov
lods
pushf
mov
insl
bound
inc
loop
insl
push
cs
scas
fidivrs
mov
jno
in
add
mov
inc
push
pop
push
nop
mov
push
or
xor
or
cmpsb
mov
cmpb
mov
jnp
add
xor
sub
adcb
mov
pop
in
rorl
inc
or
ficomps
outsl
jmp
std
jge
mov
pop
iret
mov
orb
mov
add
bound
mov
or
popf
mov
dec
loope
or
into
cmpsl
push
test
or
fsub
sub
push
jb
cmp
lods
test
jmp
mov
xchg
mov
push
mov
or
sbb
jge
adc
jns
pop
sarl
push
and
xchg
pop
imul
in
sub
lock
jbe
sbb
adc
out
add
fucomi
or
xor
push
xchg
fldcw
jmp
pusha
xor
fiadds
and
js
jae
std
jp
push
pop
jb
cmpsl
pushl
je
cs
xor
dec
mov
shr
xchg
out
fs
push
xchg
imulb
xor
aas
pop
pop
xchg
sub
rcrb
inc
fnstcw
popfw
push
mov
mov
and
jl
daa
test
and
in
xor
outsb
lret
jl
push
incb
xor
out
jmp
jns
subb
or
fadds
push
xorl
jl
add
or
dec
dec
pop
add
je
dec
or
fucomp
pop
xchg
out
push
mov
into
dec
cli
push
es
dec
xor
dec
fiadds
xor
cli
push
adc
or
dec
les
dec
cmp
pop
mov
cmp
mov
mov
scas
sub
jl
pop
lock
mov
or
sub
mov
xchg
lods
sub
leave
push
in
gs
clc
sbb
test
rcll
lret
and
dec
aad
loop,pn
sub
inc
sbb
js
mov
sub
lcall
jb
ds
adcl
stc
fwait
out
cwtl
imulb
dec
adc
mov
lods
nop
leave
loop
mov
mov
test
into
add
cmp
subb
out
add
xchg
xchg
xor
push
in
out
sahf
je
adc
loopew
insb
sub
cmp
inc
or
ljmp
cmp
mov
mov
loope
inc
cmpsb
jne
inc
push
cmp
pop
mov
pop
pop
xchg
lods
movsl
sbb
jecxz
pusha
cwtl
pop
pop
xchg
xor
mov
mov
cs
loop
mov
scas
add
fimuls
xchg
mov
jno
loope
inc
fwait
je
out
bound
inc
adc
dec
jbe
and
cmp
xchg
cmp
gs
sub
cmp
cmp
insl
or
inc
jb
stc
fists
cmp
sbb
cmp
ljmp
das
call
call
cmp
popa
jno
mov
iret
aad
lods
pop
mov
jl
es
jnp
jmp
adc
outsl
hlt
dec
int3
add
xchg
call
cli
imul
outsb
mov
ja
orl
adc
fdivrl
movl
lret
push
xlat
cmpsb
fcmovbe
std
jmp
xchg
icebp
insl
inc
cmp
dec
or
int3
sar
mov
pop
adc
adc
repz
je
adc
pop
push
arpl
and
aad
mov
test
dec
in
jp
mov
xchg
test
fdivrs
adc
ja
or
dec
adc
stos
mov
and
lods
lcall
inc
out
sbb
test
mov
sti
xor
add
lock
bound
popa
imul
scas
imul
sub
lahf
ljmp
jnp
push
pop
std
ljmp
adc
scas
imul
rolb
mov
rcll
fimuls
fsubs
js
or
sbbl
fwait
dec
mov
out
fbld
cmp
ret
push
inc
jne
adc
mov
std
cs
mov
ror
mov
sbb
outsl
mov
aaa
ljmp
aam
repnz
cmp
sub
fs
mov
push
fpatan
out
in
mov
in
in
mov
dec
mov
push
xor
mov
insb
movsb
in
add
jo
xchg
pushf
fnstcw
sahf
jo
lods
mov
cmp
mov
and
push
test
scas
pop
stos
nop
lahf
lods
xchg
dec
fs
bound
push
jecxz
int
mov
test
pop
fiadds
add
enter
ret
add
push
hlt
mov
fisttpl
jp
cld
inc
jns
je
mov
fsubs
pop
lods
loop
push
and
and
and
mov
cmp
ret
movsl
pop
in
adc
inc
mov
and
repnz
aam
lods
adc
clc
xor
dec
pop
rcll
xor
xchg
inc
lds
mov
dec
mov
in
ret
jb
insb
and
jno
in
dec
movsb
jb
aam
mov
stc
dec
mov
or
or
add
jnp
fidivs
arpl
mov
test
movsl
inc
fucomi
in
loope
pusha
cmpsl
xchg
lock
insb
stos
stos
ljmp
lock
or
imul
fwait
jmp
jg
lea
push
mov
int3
std
mov
xlat
push
test
fidivl
pavgw
ss
insb
lds
out
lahf
and
cmp
push
insb
lret
mov
scas
lds
lahf
frstor
mov
jecxz
and
das
push
ret
and
testl
sbb
pushf
bound
jge
push
rorb
jmp
pop
cwtl
loope
and
cmp
pop
cmp
inc
rcrl
jno
aad
repz
or
icebp
lret
inc
add
test
inc
fmull
movsb
imul
mov
inc
sub
aas
xchg
das
std
push
xchg
mov
dec
or
rol
jmp
push
into
pushf
inc
aam
test
push
or
pop
jnp
lahf
push
popa
jmp
mov
clc
mulb
sbb
xchg
adc
cmp
mov
pop
sub
mov
cmp
mov
pushl
xchg
cmp
lea
dec
test
pop
pop
ljmp
and
xchg
popa
or
sahf
icebp
sbb
push
mov
fcompl
pop
test
imul
int
mov
jle
push
pop
lret
push
testb
test
popf
or
ljmp
mov
nop
stos
mov
jmp
cltd
dec
lock
cmp
mov
cld
and
dec
movsb
scas
lds
dec
pushf
sbb
push
mov
xchg
cmp
repz
pop
mov
scas
fdivr
cmp
ja
adc
jge
cwtl
and
repnz
in
sbb
mov
lock
je
push
aaa
xchg
sub
mov
push
jl
jl
out
push
xchg
inc
xor
jp
stc
adc
push
xor
inc
xor
out
movsb
pop
pop
mov
shr
aad
jo
jle
stc
add
push
repz
lods
sahf
pop
daa
call
adc
rorl
push
mov
vpsllq
jl
jmp
lods
dec
addl
mov
js
sbb
add
xchg
push
xchg
and
into
jnp
mov
daa
in
movsl
push
dec
es
jnp
les
rcrl
xchg
aam
fdivl
cmp
and
xor
je
sbb
bound
adc
mov
clc
and
adc
jo
daa
or
bound
sti
xchg
pop
sarb
stc
lret
sub
or
loop
or
or
shll
fstpt
les
daa
popa
out
movsl
mov
lret
pushf
fwait
lock
fwait
in
daa
test
cmc
xchg
loope
sub
add
scas
repz
ficompl
test
xor
and
sub
dec
das
pusha
mov
test
ret
lds
xor
push
insb
cld
outsb
shll
pop
dec
inc
mov
jp
push
loope
popf
cmp
outsb
insl
popa
and
fmull
add
mov
in
ss
sub
pop
stos
or
ss
dec
js
add
rcrl
imulb
adc
mov
pushf
insl
jl
push
inc
jmp
cmp
xor
sbb
cmp
sub
cld
mov
arpl
mov
scas
loop
dec
sbb
dec
in
and
neg
ret
jbe
jne
out
lock
mov
xlat
stc
xor
mov
inc
aad
dec
push
cmpb
sarb
test
testl
jae
sbb
jl
fcmovnu
cwtl
outsl
push
sti
jl
add
punpcklwd
lcall
iret
adc
mov
xor
inc
xchg
jle
mov
dec
fnstenv
inc
cmc
enter
pop
in
stos
jle
jbe
inc
xchg
push
sbb
fidivrs
sbb
les
adc
cmpsb
bound
repz
dec
or
sbb
ret
pop
icebp
aas
xor
xor
js
xchg
lret
mov
sbb
movsl
sbb
in
mov
loop
repnz
mov
popa
lret
popf
scas
and
or
test
inc
or
mov
xlat
push
push
xor
and
mov
imul
cld
jno
scas
in
cwtl
movsb
mov
inc
pop
and
xchg
test
and
push
cltd
outsb
lods
stc
cld
mov
xchg
das
insl
icebp
jge
jae
dec
cmp
xchg
xor
fstpt
clc
xchg
mov
cmp
xorl
stos
dec
in
push
mov
out
ja
inc
push
fisttpl
xor
cmc
xor
adc
and
pusha
or
out
sbbl
add
clc
inc
icebp
ljmp
mov
popf
or
in
out
scas
fidivs
xchg
pop
add
hlt
xchg
popf
add
sbb
pop
xchg
and
jecxz
or
fcoml
test
outsb
jnp
add
scas
xor
shr
inc
xchg
xchg
mov
mov
je
pop
lret
subb
pop
faddl
inc
data16
in
outsb
negl
idivb
aam
pusha
jae
je
pop
jl
xchg
enter
add
ds
inc
xor
ss
adc
adc
pop
pop
mov
pop
push
clc
adc
mov
or
addr16
sbb
inc
mov
inc
ret
push
leave
daa
aad
dec
out
xchg
mov
cld
hlt
filds
insl
inc
in
outsl
mov
mov
lock
addr16
mov
xchg
and
cmp
dec
jns
lock
orl
adc
fldcw
and
xchg
push
mov
inc
ljmp
popf
lods
cmpsb
pop
mov
dec
push
jge
test
outsb
shll
lods
movsl
add
jecxz
jl
aad
popa
pop
add
imul
enter
mov
cmc
push
js
ja
out
mov
or
pop
negb
jg
repnz
ret
popa
jb
xor
sti
dec
jb
insl
or
or
xchg
sbb
and
pop
add
repz
rcr
in
push
aas
cmp
insb
outsb
xor
lahf
sub
jne
cmp
add
mov
bound
jno
inc
inc
jae
adc
inc
mov
fsubrl
and
push
inc
add
cwtl
dec
sbb
mov
rorl
aad
imul
or
sbb
es
xchg
stos
std
aam
adc
lds
aaa
mov
xorl
pop
sub
and
popa
mov
scas
xor
xchg
cmp
es
xchg
aas
mov
in
ret
popfw
adc
jle
sub
push
insl
add
push
lock
jae
adc
sbb
orl
jno
arpl
mov
orb
and
push
stc
pop
mov
mov
jo
ja
pop
xor
lahf
in
lret
insl
xor
xor
mov
mov
ja
test
in
mov
fstpl
ja
adc
bound
in
mov
scas
jmp
cmp
add
xlat
je
jae
lods
sub
dec
insl
add
fisttpl
push
lea
push
stos
pushf
negb
mov
cmpsl
jp
and
dec
je
mov
popa
push
data16
jnp
push
inc
addr16
jecxz
pop
add
rcl
mov
lock
jb
testb
sub
leave
pop
pusha
in
fwait
les
loopne
test
idivl
lret
mov
jmp
out
push
jg
ljmp
mov
dec
sub
inc
incb
lods
xchg
mov
cwtl
push
jmp
hlt
mov
aaa
xor
mov
jb
jbe
mov
adc
adc
movsb
sub
mov
jecxz
sbbl
dec
push
sti
xor
and
nop
testl
cmp
and
xor
adc
inc
es
sahf
gs
ret
inc
xchg
adc
sub
cld
lds
int3
imulb
cli
and
mov
call
repz
jecxz
jle
out
jae
hlt
xchg
data16
adc
aaa
jecxz
shrb
in
jge
imul
dec
mov
js
inc
pushf
in
dec
daa
xchg
leave
inc
movsb
arpl
mov
stos
push
jmp
push
pop
add
ficompl
dec
add
testb
ja
shlb
int
pop
xchg
jge
xchg
mov
arpl
xlat
xor
jle
cs
data16
stos
xchg
or
es
and
cmp
jge
mov
pop
jno
xor
fstpl
fimuls
pushl
test
push
test
jo
shll
hlt
insb
push
pop
sbb
into
xor
andb
dec
nop
aas
dec
dec
iret
test
mov
xor
mov
ret
sbb
pop
or
dec
or
push
or
sub
jns
xchg
sbbb
loop
mov
enter
clc
ss
es
js
lea
sbb
pop
adc
sarb
jl
push
pop
shl
lods
and
ret
sub
call
insl
mov
mov
jmp
in
or
mov
adc
jle
imul
lea
data16
ljmp
push
cld
aaa
cltd
or
mul
sub
sub
mov
dec
jnp
leave
dec
push
fcom
adc
pop
out
int3
shlb
fcompl
jae
out
shll
mov
add
or
cmp
mov
fstps
lret
inc
out
loop
mov
sbb
add
or
mov
scas
ret
aas
adc
in
mov
cmp
sbb
scas
ss
cltd
lea
les
loope
sub
push
dec
push
add
jns
aas
inc
mov
cmp
and
sub
xor
out
add
mov
dec
adc
test
rolb
xor
add
pop
xor
ret
call
mov
sti
jg
lods
push
test
repnz
lea
sbb
mov
gs
sbb
and
mov
pop
jecxz
out
data16
push
sti
mull
sbb
xor
push
xchg
ss
ss
mov
hlt
cmp
testl
cmp
sbbl
mov
push
stc
pop
xor
xchg
xor
loope
inc
lahf
jge
mov
fstps
das
dec
sahf
mov
jmp
inc
dec
or
into
lds
out
imul
pop
add
loop
dec
or
pop
mov
aam
int
call
negb
cmp
addr16
negb
sub
je
nop
cmc
inc
jb
xchg
inc
or
test
imul
dec
rclb
js
inc
mov
dec
cltd
lock
pop
imul
adc
ss
mov
mov
dec
les
mov
xor
cmp
aad
mov
mov
mov
cld
je
scas
jae
and
data16
aam
mov
popf
loop
mov
dec
dec
and
scas
cli
cmp
daa
mov
les
mov
test
push
mov
sub
test
mov
iret
push
test
inc
fnstcw
loopne
test
dec
das
movsl
xchg
leave
xor
adc
pop
in
mov
add
dec
out
lods
sub
aas
adc
mov
add
add
pop
je
xchg
fs
sahf
push
cwtl
push
jl
fstl
sub
push
sub
int
cld
add
jne
aad
mov
pusha
lret
scas
cmp
mov
int3
lods
xor
push
mov
jo
mov
fldpi
orb
and
mov
dec
in
add
mov
fidivrl
jge
clc
add
mov
adc
fwait
stos
aam
std
in
outsl
sub
iret
mov
sahf
ss
dec
pop
push
je
loope
negl
mov
jle
shr
sub
outsl
sbb
adc
jge
inc
pushl
adc
ret
adc
leave
outsl
jmp
arpl
xchg
stos
cmp
divl
icebp
dec
sub
dec
int3
testb
ret
je
ljmp
js
data16
mov
mov
jmp
outsb
jp
adc
mov
inc
push
insb
addr16
rcll
adc
ret
subb
mov
or
pop
aaa
daa
sbb
adc
inc
and
ret
fadd
inc
sbb
pusha
mov
in
adc
sti
fnstsw
push
push
jge
mov
cmp
scas
in
enter
pop
xlat
movsl
xor
mov
fidivrl
aas
sub
jae
sub
and
movsb
mov
add
hlt
and
add
stos
jmp
ljmp
mov
mov
in
sti
test
inc
sti
lea
out
mov
addr16
dec
rclb
movl
mov
adcl
lahf
sarl
pop
dec
mov
xchg
mov
add
clc
mov
cld
fs
adc
movsb
adcb
mov
sbb
push
rorl
mov
popf
lods
fnstsw
insb
xchg
movsl
dec
xchg
arpl
cwtl
xchg
push
xor
pop
mov
ret
lods
jb
jnp
aaa
push
pcmpgtb
lcall
ds
push
scas
mov
sbb
arpl
lahf
mov
adc
cmp
test
mov
sbb
push
add
fs
test
mov
addr16
or
sbb
jbe
addr16
dec
pop
xchg
push
xor
push
loop
or
mov
dec
push
pop
outsb
sub
aas
sub
rorb
sbb
mov
movsb
mov
sub
jb
xor
incl
punpckhwd
es
pop
ss
mov
shll
cmp
in
ja
mov
and
xchg
mov
and
xor
bswap
inc
aas
popa
push
loop
jp
ficompl
pop
jmp
dec
test
add
jb
shlb
and
in
xor
je
adc
movb
inc
push
cld
in
sub
sbb
subl
push
adc
sbb
incb
push
pop
jp
mov
icebp
popf
sub
dec
int
push
xchg
push
loop
pop
jno
fsubs
cmp
mov
and
divb
das
shlb
sub
imul
fbstp
je
in
aam
jl
adc
aam
pop
add
pop
pop
lret
cli
add
cmp
xor
xchg
lret
out
hlt
stc
xchg
pop
add
icebp
xchg
lods
add
pop
dec
sahf
and
scas
add
sub
int
cmc
cwtl
mov
fs
sub
movsl
repnz
push
aam
ja
ror
dec
or
and
xchg
add
lahf
shr
cmpsb
pop
lds
aad
popf
cs
aas
lock
pop
mov
mov
lret
dec
push
lods
cmpsl
mov
push
jg
aam
inc
xchg
jns
repz
rcrl
push
cmp
mov
add
add
mov
adc
aaa
out
pop
xchg
pop
popa
out
aad
xchg
push
cmp
sbb
pushf
and
xchg
mov
leave
repnz
jbe
test
insl
inc
in
arpl
fs
xchg
push
xchg
out
sbb
rcl
mov
dec
lret
adc
js
enter
pusha
iret
and
mov
js
mov
sub
movsb
add
divb
movsb
mov
push
xor
stos
rolb
adc
mov
imul
loopne
lods
inc
mov
xor
cltd
jbe
adc
repz
add
mov
mov
and
jne
lods
lar
in
mov
lea
mov
adc
pop
pop
xlat
mov
fld
loop
inc
pop
adc
lods
outsl
in
fidivs
lods
fwait
repnz
out
pop
xchg
sbb
stc
stos
push
dec
test
int3
jnp
add
test
mov
xchg
adc
dec
jae
xor
scas
mov
and
cld
sarl
xchg
xor
dec
add
inc
and
cmp
push
cltd
lods
and
outsl
cmp
out
xchg
xor
jge
out
adc
orb
mov
mov
lea
mov
out
fistpl
stos
xlat
xchg
daa
cmp
out
repnz
pop
cmpsl
into
enter
sbb
adc
rcl
mov
jp
sub
negl
inc
in
lret
fnstsw
mov
test
in
push
outsl
aas
cmp
aad
test
xchg
dec
push
adcl
sbb
mov
sub
ja
and
addr16
xchg
clc
xchg
pushl
mov
leave
sub
jmp
jno
or
in
xorb
rolb
inc
js
test
fsubp
imul
rolb
das
or
orl
xchg
xchg
mov
dec
sbb
mov
rcl
and
sbb
dec
push
lods
les
sbb
test
idivl
rcr
mov
clc
push
lods
ja
in
adc
js
pop
add
mov
sub
sbb
add
rclb
ljmp
cmp
in
pushf
inc
shll
scas
mov
jge
ret
lods
adc
and
adc
mov
lds
pop
std
ljmp
inc
mov
jne
push
cmp
imul
dec
inc
pop
mov
lds
in
icebp
cwtd
leave
mov
or
or
and
or
ret
pop
inc
es
imul
push
jno
cmp
imul
lock
out
popf
cli
or
sub
fsubrl
or
pop
pusha
and
in
hlt
testb
push
dec
jle
mov
or
push
gs
aad
sub
mov
bound
in
lds
dec
aas
mov
jl
mov
adc
sarb
xchg
ljmp
repnz
outsb
push
cmp
clc
and
mov
cmc
shlb
adc
xor
test
daa
in
jecxz
push
add
mov
test
adc
imul
jns
stos
test
xor
in
lds
sbb
enter
jne
and
es
inc
sub
lea
pop
std
inc
xchg
adcb
and
pop
fwait
inc
loopne
fwait
jo
xchg
lret
mov
shll
jnp
and
jp
rcrb
leave
scas
inc
orl
jno
fldl
sbb
mov
lret
sbbl
sub
rol
stc
in
xchg
inc
addr16
cmc
add
test
mov
loop
pop
sub
jno
push
in
mov
push
popf
jne
pop
xor
jg
stos
adc
rcrb
fldcw
mov
mov
sti
xchg
ret
jl
movsb
sbb
in
arpl
dec
push
mov
jnp
inc
cltd
shrb
jg
test
fiaddl
in
mov
and
dec
or
mov
das
jl
and
and
fisubs
popa
xchg
pop
loop
mov
outsb
mov
mov
aaa
add
push
xchg
pop
inc
xlat
add
out
movsb
arpl
mov
mov
fwait
int
xchg
cmpsb
mov
into
and
add
sti
mov
inc
ret
cmp
sbb
sahf
inc
popf
ror
lcall
jg
cmp
mov
clc
pop
cmp
jg
sahf
jecxz
insl
in
scas
jp
inc
sub
sbb
jbe
out
mov
inc
mov
test
mov
fcomps
loop
pop
or
or
jnp
lods
ds
mov
add
insb
rolb
inc
dec
inc
invd
ja
cld
xor
leave
icebp
addr16
adc
out
mov
ret
repz
mov
in
inc
sub
ja
push
pop
in
aam
dec
int3
mov
clc
and
popf
data16
jno
stc
fnstenv
add
push
jnp
sti
sbb
repz
lock
cmp
lcall
dec
ret
jb
orl
orb
leave
lret
push
stos
xlat
mov
scas
nop
dec
pusha
arpl
lret
inc
dec
inc
lcall
sub
mov
jge
and
and
das
bound
push
mov
push
inc
jns
mov
inc
cmp
into
fld
jne
fisubs
or
push
scas
jmp
jb
mov
sub
mov
jb
mov
imul
sbb
xchg
daa
pusha
sarb
iret
aaa
adc
repz
and
sub
aad
or
fisubrl
enter
push
pop
dec
stos
dec
or
call
call
xchg
jns
mov
pop
test
push
jo
or
mov
fsubl
cmc
outsl
pop
leave
cmp
ds
insl
pop
daa
dec
in
inc
testl
insl
mov
cmpsb
add
mov
insl
arpl
mov
mov
mov
pop
xor
inc
jo,pn
sub
out
push
clc
sbb
xchg
mov
mov
test
mov
jb
in
cmpsb
add
dec
daa
cli
js
lods
fucomi
mov
imul
mov
jle
sbb
lods
es
fldt
xchg
fimull
xor
rclb
out
bswap
xchg
xor
fisubl
lret
pop
aad
ds
cmpsb
testb
incl
pop
pop
mov
push
lahf
pop
xor
loopne
jle
sahf
inc
insl
xchg
xor
imul
cmp
test
sbb
nop
cld
mov
sub
xor
jle
scas
lods
inc
out
adc
arpl
std
inc
ljmp
cs
pop
outsl
add
lods
adc
and
mov
in
shll
lcall
popa
mov
outsl
mov
push
outsl
xor
repnz
test
cmp
pushf
popa
jecxz
int3
das
ja
aad
mov
stc
xlat
lahf
adcb
mov
inc
xchg
cli
mov
cmc
mov
cmpsb
aam
movsb
inc
jp
jp
and
dec
jle
popa
pop
popf
out
pop
call
cwtl
mov
adc
movsl
fwait
clc
jae
push
xor
rolb
add
mov
test
sbb
dec
cmp
movq
dec
dec
aaa
cmc
imul
testb
in
movsl
and
xchg
jbe
and
cmovle
and
aam
mov
xchg
pop
add
mov
and
push
packsswb
clc
in
sbb
push
mov
push
icebp
xchg
popf
nop
stos
mov
mov
repnz
pushf
jnp
ret
pop
int3
dec
and
loope
pop
push
clc
ret
add
jo
push
sti
aad
inc
lea
insl
ror
xlat
mov
xor
decb
in
sahf
popf
jo
mov
mov
sbb
and
loope
sub
ret
jo
sub
xchg
ror
mov
mull
push
aas
xchg
lods
fnsave
jo
lcall
jae
bound
fmuls
shrb
pop
lds
mov
cmp
sahf
leave
or
xor
jbe
mov
andl
out
push
hlt
in
push
mov
jp
enter
push
pop
stos
inc
xchg
jae
xchg
xchg
andl
adc
dec
mov
sarl
leave
out
movsl
push
cli
lcall
xlat
mov
and
jne
cltd
adc
inc
stc
and
fsubrp
or
fimuls
xchg
popa
fs
adc
xchg
jge
nop
xor
mov
in
jnp
aam
xchg
pop
push
push
and
pushf
test
imul
push
cmp
movsl
jl
jb
lahf
adc
mov
mov
insb
cmp
pop
sahf
xlat
dec
lods
sbb
mov
pop
popa
mov
insl
sbb
and
dec
out
aad
mov
sub
xlat
mov
xlat
pop
xor
pop
mov
cmpsl
sub
push
incl
lea
out
mov
addr16
insb
xchg
mov
in
loop
pop
xchg
test
and
inc
loopne
in
adc
and
xor
dec
add
rcrb
pop
xor
mov
push
icebp
sub
int
mov
jno
lret
push
pop
cwtl
cmp
or
dec
mov
shlb
mov
xor
cmp
rorl
cmp
cmp
pop
sub
adc
rcl
dec
cmp
imul
mov
push
mov
out
daa
out
loopne
sub
jbe
push
test
shlb
and
or
hlt
dec
gs
inc
outsb
cmp
xor
cmpsl
in
mov
jl
adc
and
enter
aad
push
inc
and
sahf
mov
ds
push
mov
imul
sbb
mov
push
rolb
pop
adc
lods
cmpsl
icebp
stos
sbb
subb
xchg
push
sub
sub
mov
pop
mov
pop
bound
data16
into
push
int3
scas
cmp
sarl
loop
inc
ja
dec
mov
jp
or
insl
xchg
add
push
addr16
jno
pop
dec
mov
fwait
jnp
sbb
ja
sbbl
dec
sub
in
mov
out
mov
and
cmp
inc
ret
fdivl
ror
xor
xor
test
ds
nop
dec
cltd
testb
sahf
test
sbb
sbb
and
enter
jae
push
sbb
fstps
stos
mov
add
repz
or
adc
js
push
int
call
jp
jne
dec
or
xor
scas
mov
mov
mov
mov
inc
and
ret
ficompl
xchg
jge
es
mov
fidivl
cmp
insl
pop
push
flds
ret
push
sbb
ret
mov
or
or
pop
ret
loopne
shr
inc
cmpsb
into
mov
cmp
testb
outsb
aad
scas
out
lahf
inc
and
jp
xor
and
das
sbb
in
pop
call
movsb
fnstcw
pop
fcomp
sbb
add
jle
xchg
and
inc
insl
test
push
mov
ljmp
adc
mov
adc
mov
test
and
inc
mov
cmpsb
movsl
xor
push
and
jl
adc
outsl
mov
jmp
rcrl
andb
dec
sarl
dec
aaa
push
fsts
mov
and
xchg
lods
test
and
or
loop
scas
cmp
fisubrl
pop
lods
dec
push
out
call
pop
sbb
mov
mov
xchg
pop
je
pmulhuw
push
xor
or
mov
ds
shlb
xchg
mov
mov
mov
mov
mov
fdivrs
dec
movups
push
movsb
jg
jnp
push
inc
mov
std
fsubrs
inc
push
out
iret
shl
sbb
daa
pushl
inc
in
cmp
sbb
sub
fcomi
sbb
ljmp
fsubl
in
ficoms
fisttpl
pushf
mov
popa
cs
and
pop
push
inc
push
xorl
mov
outsb
mov
and
or
repnz
xchg
cld
lods
ret
scas
cld
dec
out
lcall
pop
pop
fildll
and
cmpsb
cmpl
popf
sbb
mov
fbld
dec
nop
mov
add
out
xchg
shrl
loopne
add
lods
jo
mov
push
cltd
push
cmp
lret
push
iret
jp
add
outsl
stc
daa
and
and
aad
adc
orb
js
sbb
ja
pop
sti
or
sub
pop
mov
cwtl
mov
xchg
inc
nop
movsl
pop
rol
xor
ds
and
aaa
popa
insb
call
fistpl
clc
jge
les
xchg
js
das
push
cmp
pop
fcmovnu
mov
mov
ss
mov
or
dec
mov
jo
cmc
jns
adc
fldcw
sub
or
sbb
mulb
sub
cs
divb
cmp
cli
add
cmp
mov
scas
fcom
ud0
clc
imul
arpl
push
lds
add
aas
enter
stos
les
cmp
jg
sti
data16
pop
cmc
cwtl
bound
outsb
out
mov
jp
outsb
xchg
xchg
cs
lods
es
gs
fmul
jae
iret
je
mov
cmp
mov
enter
ljmp
dec
ret
loope
mov
or
inc
sbb
mov
adc
loopne
test
adc
add
sbb
fnstenv
or
imul
mov
fsubs
mov
cmp
aad
scas
out
add
sub
in
dec
lock
lea
iret
loop
inc
add
bound
inc
daa
push
scas
or
es
or
dec
popa
jb
jne
jo
jge
xchg
test
enter
cmpsb
xor
fsub
xlat
pushf
sub
add
jae
mov
ret
aas
add
test
movsl
mov
dec
mov
pop
mov
iret
xchg
jecxz
lock
push
sahf
movsb
out
cltd
fsubr
out
jb
stos
mov
jno
std
in
cmp
shll
addb
sbb
xchg
xor
cmpsb
and
pop
jg
mov
sbb
call
scas
mov
mov
mov
jae
movsb
dec
xchg
inc
sub
movsb
addr16
test
sahf
xor
push
ja
negb
cmpsb
loope
cmp
inc
and
jne
mov
push
fimull
arpl
push
dec
ret
mov
jg
je
test
sub
js
pop
dec
mov
mov
pop
mov
leave
xchg
push
aam
xchg
push
fidivrs
jno
jp
sbb
imul
test
mov
dec
push
repz
fldcw
xor
sbb
mov
sub
scas
sbb
out
jp
sub
xchg
pop
pop
je
clc
pusha
mov
not
arpl
pop
je
cli
in
jmp
cwtl
jg
xor
pop
mov
das
sbb
rolb
mov
mov
shrb
jb
sub
and
out
stc
inc
mov
push
or
xor
fwait
das
adc
xor
jg
adc
mov
imul
mov
imul
mov
sbb
dec
andb
clc
cmp
xchg
xchg
ficomps
inc
lret
stos
sbb
push
sbb
fsubl
leave
inc
push
dec
sbb
sub
shl
add
pop
clc
xchg
aam
sbb
out
dec
pop
fistpl
jne
mov
pushaw
int3
int
add
inc
arpl
jno
mov
stos
and
out
add
add
jg
jo
daa
jl
in
lret
pushf
dec
mov
lret
in
lds
in
pop
mov
sti
pop
and
shrl
sahf
jnp
fwait
push
jbe
adcb
imul
xchg
aam
xor
out
cmpsl
xchg
cmp
lods
pushf
es
xchg
add
imul
dec
pop
jp
movsl
mov
mov
adc
and
add
xchg
subl
mov
inc
mov
or
inc
daa
xchg
scas
xor
je
ret
outsb
jp
addl
xchg
or
testb
clc
mov
cld
mov
shl
pop
movsb
sub
cmpsb
sbb
loope
inc
cmc
sahf
dec
and
movsb
cmc
pop
div
sbb
xor
aad
and
jnp
dec
mov
ljmp
push
mov
aas
mov
jnp
adc
mov
enter
orl
ret
sbb
mov
mov
aas
mov
cmpsb
out
push
clc
and
mov
movsb
cmp
lods
mov
fcoms
and
hlt
das
and
cmpsl
xor
outsb
sub
push
stos
pusha
test
aam
jnp
pop
dec
xchg
dec
or
lret
push
cmp
inc
fcompl
je
cmp
xchg
pushf
adc
sub
adc
ds
jecxz
daa
mov
lods
das
cmp
and
prefetcht2
pop
pop
aas
jp
push
push
mov
cmp
sarb
xor
xchg
jnp
out
in
sub
repz
sbb
cmp
mov
xchg
or
mov
stc
mov
xor
in
and
jmp
xorl
sub
or
fsubl
inc
adc
fisubl
mov
repnz
jbe
mov
inc
push
fs
aaa
clc
icebp
aad
jmp
mov
xchg
pop
repz
aad
ss
mov
xchg
loop
or
dec
adc
xor
dec
xorl
enter
dec
je
adc
fwait
cmp
enter
flds
push
xor
add
data16
inc
adc
xor
rcll
test
jne
sbb
sub
cmp
push
mov
cwtl
mov
and
dec
int
in
jecxz
mov
dec
pusha
inc
cmp
aas
aad
mov
ficompl
fnstenv
adc
pop
inc
imul
scas
and
rorb
push
sarb
mov
mov
add
dec
out
jo
ja
scas
stos
inc
mov
fisubs
mov
cmp
mov
jg
js
jbe
jbe
or
xor
mov
insl
clc
mov
pushf
and
cmp
inc
out
sub
jnp
loopne
pop
jle
out
popf
test
aad
mov
xlat
push
test
scas
ror
inc
iret
cli
pop
jne
stc
jp
pop
adc
pop
cmp
shlb
jecxz
mov
and
call
add
cmp
lret
mov
movsb
cmp
adc
mov
push
jl
movsb
mov
inc
loopne
in
and
cwtl
repz
cld
in
in
in
rcrb
xor
push
fcompp
sub
shrl
outsb
dec
xchg
mov
dec
xlat
adc
pop
xchg
jo
loop
jnp
cltd
or
mov
xchg
add
xchg
adc
mov
in
mov
push
icebp
mov
data16
fisubrs
inc
test
or
sub
call
push
lcall
shr
dec
and
mov
rcll
in
fldenv
scas
adc
xchg
sbb
push
sbb
shlb
addr16
sti
arpl
insl
insl
push
mov
and
rclb
into
sbb
xchg
fwait
push
xchg
aad
mov
inc
stos
loopne
jns
stc
sub
push
sti
push
push
mov
fsubr
jo
and
fdivl
xchg
sbb
inc
xchg
lahf
arpl
xlat
pop
cwtl
jg
xchg
out
and
clc
movl
and
in
sbb
aad
imul
jle
mov
dec
jae
adc
pop
jo
mov
adc
push
daa
push
les
ja
js
movb
movsl
push
lcall
dec
ss
add
dec
mov
mov
aaa
repz
in
lret
sbb
lock
mov
mov
sti
or
mov
push
ds
fmul
and
sub
loopne
mov
mov
stc
mov
ja
cltd
mov
dec
sahf
sarl
ja
popf
fstps
ror
sbb
in
ret
push
loop
loop
pop
insb
mov
loop
pop
lods
hlt
sub
insl
inc
pop
stos
dec
push
xor
pop
mov
das
push
xchg
stos
xlat
pop
and
mov
loop
inc
movsl
jae
loop
jg
push
dec
fildll
and
mov
jae
mov
push
addr16
sbb
dec
out
enter
in
repnz
push
push
add
arpl
push
sahf
mov
repz
and
stos
mov
jg
sti
repnz
adc
aad
add
jp
pushf
push
cli
imul
cli
sub
and
bound
pop
push
inc
loope
or
add
inc
xchg
mov
xchg
out
aaa
insb
popa
mov
sub
int3
adc
lcall
popa
insl
push
push
xchg
mov
mov
mov
lahf
popa
sub
pushf
cld
or
mov
and
movsl
and
sbb
xchg
xor
subl
imul
mov
push
push
sub
shrl
mov
and
xchg
xor
insb
jns
mov
sahf
jl
roll
clc
loop
or
and
loope
mov
xchg
loope
les
and
sarl
popa
imul
jg
push
mov
inc
int
fisttpll
fdivrs
pop
inc
push
mov
add
sbb
mov
dec
movsb
inc
ljmp
shlb
scas
lds
mov
nop
pop
inc
jno
and
pop
and
sub
sbb
adc
adc
das
dec
sbb
cmp
movsl
cmp
sub
sub
std
popa
cli
fnsave
out
mov
inc
es
fisubrs
cli
lahf
xchg
jnp
lcall
mov
xchg
add
stos
sar
testl
sbb
sub
dec
fcoms
roll
jl
fsts
or
jmp
jle
and
cmp
gs
jmp
xor
pop
nop
daa
cwtl
mov
lods
testb
test
test
adc
icebp
xor
sbb
pop
or
rcr
stc
faddp
popl
mov
mov
sub
scas
inc
jbe
dec
xor
sbb
enter
push
add
loope
dec
sub
sbb
adc
mov
xchg
subl
jle
sub
mov
push
ret
push
pop
inc
adc
rclb
inc
xchg
lret
add
loope
in
xor
fwait
inc
imul
xor
cmpsl
das
lock
xor
aas
xchg
mov
imul
add
ljmp
add
dec
test
inc
ss
das
in
xchg
popf
repnz
push
cltd
popw
mov
mov
push
orb
pop
adc
es
lock
movsl
pop
mov
and
push
adc
push
push
pushf
incl
push
sub
out
enter
sub
ret
popl
movsl
aad
inc
inc
ret
adc
int3
xor
sti
popa
sub
mov
pop
and
roll
out
stos
xor
call
int
iret
and
das
outsw
push
pushf
add
std
cmpsl
xchg
in
jle
sub
clc
xor
roll
les
adcl
cmp
jecxz
mov
mov
pop
loop
xor
adc
jg
push
xor
and
jmp
pop
in
aas
imul
test
push
pusha
fildll
pop
fs
test
pop
xor
nop
dec
add
and
daa
bound
aad
test
int
xor
lahf
mov
cmp
adc
pushf
lret
adc
jecxz
fstpt
push
cwtl
popa
sbb
push
add
mov
inc
enter
xor
movsb
push
ret
mov
cwtl
pop
les
mov
or
and
nop
inc
mov
pushf
fdivrl
sub
adc
scas
popf
cwtl
out
dec
mov
call
mov
dec
xchg
or
shl
ja
pop
or
bound
pop
loopne
mov
jo
mov
xchg
push
cmp
cmpsl
in
aad
and
sbb
and
mov
xchg
lahf
dec
rol
xchg
movsl
xchg
dec
push
decb
mov
push
xor
add
adc
add
scas
ja
jge
mov
test
mov
pop
imul
and
mov
cmc
mov
push
push
xchg
xor
mov
es
nop
jg
mov
pushl
enter
mov
dec
insl
xor
mov
adc
jnp
aaa
sub
dec
inc
cwtl
movsb
inc
pop
out
inc
test
and
cld
adc
ret
aaa
loop
aad
xor
sbb
gs
lret
lock
add
arpl
jp
out
inc
fistl
xor
cmp
or
adc
sbb
mov
jbe
cmp
dec
sub
mov
mov
div
and
rclb
sbb
mov
mov
test
bound
bound
stos
adc
add
cmpsb
decl
xchg
fsub
inc
cmpsl
pop
add
rcrl
iret
cmpsb
call
or
imul
xorb
sub
lods
dec
pushf
inc
fdivs
outsb
cli
push
es
sbb
xor
jmp
jmp
popa
jns
or
dec
daa
xchg
sarb
pop
push
sahf
sbb
outsl
inc
ret
lea
aas
test
lahf
and
lods
fcoms
adc
sub
addl
adc
call
adc
xchg
icebp
fiaddl
jae
or
xor
ljmp
cmpsb
pushf
shr
addl
sbbl
inc
sbbb
dec
push
dec
data16
dec
and
arpl
mov
inc
aas
fistps
out
insb
bound
jp
cmp
rorl
jo
push
jge
cmpsb
push
inc
jb
push
dec
mov
subb
test
push
jg
mov
mov
pop
jp
or
imul
popf
sbb
lods
test
sbb
mov
jge
mov
pop
stos
jmp
pop
xor
out
int3
fldenv
push
fsts
repnz
loopnew
orl
scas
ret
jl
mov
jae
imul
lock
or
xchg
jp
pop
push
sub
push
gs
scas
std
stos
movsl
add
xor
mov
je
mov
clc
jl
icebp
mov
repz
arpl
loopne
add
movsb
xchg
loop
sarb
sbb
mov
jmp
test
sbb
mov
cltd
mov
popf
ret
scas
in
fidivs
xchg
leave
daa
test
mov
pop
scas
lret
mov
je
or
arpl
stos
jl
in
scas
leave
dec
adc
sbb
sbb
xchg
in
mov
sbb
jle
and
xlat
pop
rcl
jne
push
fidivs
mov
pop
ret
add
mov
fsubrl
enter
out
sub
pop
jb
pop
cmp
xchg
xor
popa
idiv
roll
xor
push
lcall
sti
inc
out
mov
aam
sub
add
cld
scas
cli
imul
addr16
mov
push
pop
lret
dec
or
sbb
xchg
cli
cmp
std
das
pop
and
call
inc
mov
in
sbb
mov
mov
fimull
push
mov
cmpb
div
jg
add
cs
mov
cmp
scas
movsb
dec
cmp
push
inc
repz
aas
addb
into
sbb
cmpsb
xchg
mov
aas
inc
cmp
mov
stc
insl
inc
cmpl
pop
cvtpi2ps
fsubrs
fwait
sub
lahf
push
dec
into
ja
stos
xor
inc
lock
xchg
push
inc
shlb
jbe
inc
mov
ret
cmpsb
mov
jno
sbbl
ret
sub
ljmp
lahf
es
outsb
mov
fisttpl
les
inc
pop
pop
push
scas
xchg
arpl
loop
xchg
mov
jae
inc
shlb
test
repz
lret
pop
cmc
inc
jge
shr
rcll
inc
loopnew
rcr
pop
xor
sub
jmp
push
lods
js
js
adc
imul
cmp
in
mov
add
sarb
shrl
mov
adc
je
sub
mov
pop
nop
pusha
push
pop
sbb
push
push
iret
and
and
push
stos
dec
adc
xor
pusha
xchg
out
xor
test
fidivrs
das
mov
ret
sbb
mov
dec
imul
fldcw
sbb
insb
dec
pop
cli
setb
sahf
xor
push
loope
frstor
cmpsl
into
daa
push
and
into
sbb
rorl
sahf
psubw
mov
scas
nop
sbb
shll
push
insl
scas
lods
inc
ljmp
test
aaa
adc
cmp
adc
call
lea
cmpsl
loopne
jbe
jno
mov
pop
or
jmp
push
sbb
int3
xchg
mov
lock
mov
shl
in
adc
xchg
lcall
sub
lahf
cmpsb
xor
pop
inc
pop
add
and
inc
mov
ljmp
push
mov
in
inc
lret
ds
notl
push
jbe
lret
dec
sub
adc
mov
aad
aaa
dec
out
dec
lcall
mov
mov
cmp
call
push
cmpsb
loopne
out
das
jg
test
imulb
and
cmp
lods
xor
popf
mov
ja
inc
jno
out
mov
addl
cs
mov
xor
xor
mov
or
pop
movsl
dec
mov
mov
rcll
std
cwtl
pop
pop
cmp
jmp
inc
xchg
and
nop
adcb
mov
sbb
fldl2t
jb
inc
mov
out
lds
inc
loopne
jp
push
pop
cs
sbb
sbb
lahf
add
dec
jge
loop
add
mov
loope
push
mov
icebp
push
aaa
jne
cmpsl
ss
mov
and
pop
mov
stos
pop
loope
sub
pop
test
lahf
jecxz
xchg
notl
fisubl
inc
je
addr16
xor
push
lret
push
xchg
xor
lcall
pushf
jae
sbbb
sbb
bnd
aaa
push
pop
lret
ds
in
xor
or
fidivrl
inc
mov
or
in
arpl
mov
loope
mov
fsub
inc
or
lods
mov
aaa
add
sbb
shlb
mov
push
push
inc
les
repz
shrb
fsub
imull
fcomip
pop
idivl
andl
jge
mov
ja
mov
cli
pop
xor
cmpxchg
sub
in
repz
repnz
push
adc
sbb
cmp
or
ret
in
and
jecxz
in
jecxz
hlt
sbb
mov
mov
in
mov
iret
cmp
mov
test
inc
outsl
jnp
dec
fbstp
incb
lcall
mov
jb
jo
mov
or
jo
pop
lds
shl
adc
jg
xlat
adc
imul
push
sbb
jae
cmp
jle
xor
es
cmpsb
pop
push
pop
xor
aad
movsb
out
arpl
pusha
sub
in
or
addr16
mov
sub
sbb
popf
out
je
shll
xor
or
outsl
pop
lods
ljmp
xor
xchg
xor
dec
xor
dec
dec
scas
idivl
sti
push
or
xchg
add
jns
ljmp
ret
jbe
inc
push
aas
xor
or
cs
pushf
push
adc
insl
or
xor
add
ljmp
enter
push
sbb
jp
enter
mov
pop
and
push
in
push
lcall
dec
into
subl
push
cli
xchg
popa
xor
xchg
sbb
lret
push
mov
jns
adc
mov
push
cmp
add
test
sub
pop
test
jmp
adc
and
imul
and
hlt
daa
inc
adc
jle
mov
int3
xor
cmp
sbb
or
pop
mov
mov
rolb
and
ret
cmp
daa
add
loopne
leave
and
xchg
xchg
push
mov
out
cltd
push
push
insb
push
mov
jecxz
fists
fwait
or
aad
jne
stos
fwait
xchg
roll
mov
sub
stos
mov
sub
and
sbb
sub
popf
fcoms
in
fld
mov
roll
adc
dec
das
xor
sti
mov
lret
gs
lds
scas
es
mov
pushf
sub
int
dec
pushf
mov
ret
mov
cvtps2pi
clc
mov
test
dec
insb
dec
cmp
lds
fisubrs
xor
pop
sub
xchg
clc
dec
insb
or
jecxz
cmp
push
icebp
mov
pop
xor
dec
pop
movsl
stos
dec
insb
dec
add
out
aam
ljmp
clc
rolb
ds
jmp
add
das
sub
push
aad
ret
pop
sbbb
jmp
lea
stos
in
iret
repz
xor
or
arpl
adc
push
adc
fcomps
ficoms
adc
mov
dec
fidivs
sbb
lea
aad
aad
adc
out
cmp
xor
sub
fnstenv
or
push
sbb
mov
hlt
cld
cltd
cwtl
out
and
insb
xor
xchg
push
xor
out
imul
mov
mov
push
out
lahf
cmp
pop
out
int
xchg
cmp
fs
dec
push
ffree
inc
daa
test
inc
cltd
cmpsl
andb
loop
adc
clc
test
insl
jnp
jbe
popf
test
insb
fdivr
in
cs
cmpsl
subb
and
icebp
inc
std
mov
push
aad
cmpl
leave
lock
xchg
mov
cmp
or
nop
scas
xchg
data16
inc
scas
sbb
jbe
test
insb
imull
orb
dec
dec
add
pop
rcr
cs
cltd
shl
imul
jne
sahf
int3
xor
push
cmpsb
adc
cmp
lds
dec
js
lret
lcall
or
and
out
pop
out
push
in
mov
shrb
push
sub
imul
sti
rcrb
or
push
stc
sub
pushf
inc
cmp
decb
xorl
sbb
push
cmp
or
xchg
mov
addr16
or
dec
orb
sub
jecxz
popa
fsubrl
inc
mov
sub
ret
xchg
and
pop
cltd
cmp
inc
pop
stos
mov
mov
pop
jae
push
pop
cmp
sub
cmp
int
sub
xorl
data16
and
mov
push
add
loope
rclb
gs
ljmp
nop
xchg
call
sbb
dec
popf
aam
dec
sti
fisubs
jle
adc
lret
inc
or
push
add
mov
cmp
out
or
mov
jle
or
add
xor
and
xlat
mov
je
repz
imul
fwait
out
adc
jb
ljmp
in
sbb
ret
pop
cmc
adc
divl
xor
dec
inc
stc
int
mov
js
push
add
arpl
xchg
pop
pop
dec
mov
fwait
push
ret
aad
dec
lret
addl
push
dec
xor
mov
in
jecxz
push
pop
es
dec
or
xor
add
sub
cs
dec
inc
and
cs
fld
lret
mov
pop
ficompl
popl
or
shll
mov
jb
adc
sub
inc
add
adc
popa
sbb
push
imull
je
cmpsb
mov
rclb
pop
div
jecxz
xor
mov
xor
jmp
inc
shrb
movsb
into
popf
or
pusha
lahf
out
sbb
push
jno
fildll
out
mov
rolb
fnclex
xchg
lahf
mov
ret
int
cmp
in
adc
pop
cmovle
lret
roll
leave
and
or
push
shr
outsl
in
loope
enter
mov
scas
pop
test
arpl
pop
mov
xchg
ret
xor
stos
ficompl
push
out
pop
fists
pop
jb
stc
inc
stos
hlt
or
xlat
adc
je
mov
insl
sub
stos
mov
test
out
xor
cmp
or
sub
ret
jae
repz
dec
mov
icebp
dec
repz
xchg
bound
dec
ljmp
mov
sarl
mov
pop
add
jne
jb
jae
xchg
lods
push
fwait
aam
or
dec
jecxz
mov
ficoml
mov
mov
sbb
or
inc
jnp
das
xor
xlat
xchg
repz
loope
add
out
and
xchg
pop
cmpsl
or
sub
test
pop
loopne
cmp
sbb
pop
sbb
jmp
dec
mov
stc
in
movsb
ret
bswap
inc
adcb
imul
setae
test
and
xor
cwtl
lods
mov
sub
jecxz
mov
push
sub
insb
je
outsl
push
lea
add
adc
mov
mov
mov
insb
dec
lea
in
pop
ja
pop
pop
pop
jo
push
inc
ljmp
into
js
and
js
or
popa
pusha
mov
mov
loopne
xchg
shl
mov
cmp
out
push
or
mov
and
lods
loopne
xchg
mov
lcall
and
jnp
lret
aaa
je
mov
mov
aam
hlt
cmpb
sbb
jnp
sarb
out
cwtl
pop
sbb
sahf
sub
imul
popf
and
mov
addr16
icebp
xchg
lods
xor
int
or
fsubrs
add
cmpsb
pop
pop
cmp
pop
cmp
inc
xchg
or
inc
stc
loopne
movsb
mov
jo
mov
sbb
idivl
addl
inc
inc
imul
stos
je
xor
es
fnstsw
jmp
and
test
add
fisttpl
cmpsb
push
lds
jge
mov
loope
mov
pop
fldl
sub
mov
lret
dec
aas
ljmp
pushf
cmc
repz
rep
decl
scas
mov
xchg
lret
add
jne
daa
daa
sub
stc
int3
out
stos
jmp
inc
mov
ljmp
sbb
shufps
push
in
fdivl
push
pop
das
int3
push
stos
mov
jnp
rorb
scas
or
mull
xchg
xchg
dec
push
or
xchg
inc
ret
imul
push
adc
subw
xor
inc
mov
jp
mov
mov
jbe
popa
push
jle
mov
into
xchg
outsl
add
pop
cmp
cld
int
xorb
lock
test
ljmp
cmpsb
cmp
imul
aad
mov
leave
jb
sahf
scas
push
loopne
push
xchg
aas
jle
and
or
outsb
dec
pop
sub
mov
mov
fistpl
or
or
cltd
sub
pop
ss
mov
xchg
inc
pusha
xor
or
sub
leave
push
push
mov
mov
cwtl
icebp
call
inc
out
imul
insl
imul
lret
adc
es
aaa
sbb
and
shl
ret
dec
cmp
loopne
jecxz
mov
out
jmp
pusha
push
movsb
mov
in
push
inc
loope
addr16
xor
adc
int3
mov
pusha
adc
fbstp
daa
push
repnz
out
test
lods
and
xchg
pusha
jne
mov
inc
ja
pushf
xchg
and
sbb
or
adc
mov
add
xchg
pop
adc
jno
adc
mov
fsts
cmp
idivl
xchg
jl
ret
stos
out
ds
sbb
int3
scas
or
jo
xchg
push
xchg
inc
ss
daa
push
and
push
lds
cmpsl
push
inc
hlt
popf
push
mov
lods
jmp
in
std
hlt
rcrl
inc
int
pop
or
int3
fistpl
fwait
mov
mov
icebp
je
mov
aam
lret
cld
or
in
push
in
jbe
xor
xchg
aas
ljmp
mov
aad
insb
jp
test
aam
mov
mov
sbb
xchg
negb
mov
addr16
fidivl
cltd
pop
out
mov
mov
je
mov
lods
pop
inc
mov
aam
xchg
mov
aaa
idiv
out
into
test
fildl
inc
pop
jecxz
xor
dec
fimuls
sub
adc
into
andb
adc
lods
scas
out
push
jge
andb
sub
mov
jbe
pop
inc
fstcw
bound
cld
aas
inc
imul
and
adc
popa
xchg
and
mov
jle
xchg
inc
das
mov
les
ljmp
or
mov
and
mov
inc
fadds
cmp
sahf
push
scas
xor
cmc
adc
imul
enter
jl
icebp
adcl
push
push
das
cmp
dec
mov
xor
and
sbb
mov
jnp
imul
pop
in
ja
adc
xlat
stc
test
sub
outsb
jae
lahf
cld
in
xor
mov
push
sbb
pop
icebp
inc
js
lea
cld
fwait
jb
xor
ds
jmp
push
lahf
adc
lods
lock
addr16
mov
mov
popa
in
std
cmp
dec
das
or
dec
jl
and
aaa
mov
insb
mov
jae
add
mov
and
xchg
das
sbb
movsb
adc
jmp
push
jne
push
out
jae
out
pop
push
adc
push
xchg
adc
test
sbb
subl
aas
clc
aas
out
mov
add
enter
dec
xor
jnp
xchg
int
adc
out
dec
aaa
jp
jnp
fmulp
or
repnz
add
scas
cmp
call
dec
pop
vminss
lods
or
or
fisttpll
into
insb
jns
pop
repz
mov
cmp
aaa
mov
jle
lods
mov
aad
mov
pop
xchg
cli
pop
xor
cmpsb
ret
mov
jp
jg
popa
inc
test
mov
inc
fdivl
int3
mov
fnstsw
pop
jp
pop
sbb
jbe
jb
jmp
stos
adc
scas
mov
dec
insl
dec
js
push
jecxz
dec
xor
cmp
packssdw
sub
cmp
iret
jns
clc
lret
js
cmc
sbb
notb
and
int3
les
popa
adc
daa
mov
mov
sbb
call
loope
push
push
les
mov
sbb
cmp
and
cwtl
imul
sbb
add
sbb
dec
push
shll
std
and
cmc
pop
int3
adc
inc
fs
xchg
adc
leave
mov
mov
add
jl
jns
jge
rcll
adcb
push
fadd
lcall
push
nop
loope
icebp
mov
movsl
sti
push
sub
push
xor
popf
mov
in
xor
adc
mov
xchg
out
push
lcall
cmp
xor
in
add
mov
movl
push
addb
mov
push
jbe
bound
pusha
xchg
shll
jbe
jns
mov
mov
add
adc
cld
xchg
ljmp
xor
lods
mov
in
push
jmp
sub
gs
xor
and
testl
fldt
add
lcall
mov
mov
mov
push
dec
je
scas
imul
sbb
ficomps
cmpsl
push
mov
rolb
inc
cmp
hlt
push
sbb
dec
adc
mov
jae
rcll
or
je
mov
and
enter
sbb
out
add
call
sub
cmp
ja
cmp
fwait
pop
popa
sbb
dec
cld
mov
mov
mov
cld
mov
mov
outsl
xor
jo
int3
sub
mov
in
mov
pop
dec
or
pusha
cmpsl
and
inc
lods
mov
in
mov
adc
es
aam
add
das
popf
roll
shll
sbb
add
cld
pop
xor
mov
loopne
notb
out
push
push
cwtl
mov
pop
pop
nop
loope
lock
sub
test
cli
jo
push
fisttpl
bnd
es
jne
cltd
xor
imul
icebp
repz
sbb
enter
add
outsl
xchg
push
loopne
and
jge
dec
mov
loope
cmpsb
add
test
imul
adc
popf
icebp
jl
mov
dec
jne
mov
xor
imul
andl
fstp
sbb
adc
mov
pushf
into
jg
mov
movsl
adc
jno
push
or
cs
lcall
xchg
test
xlat
jmp
mov
lock
or
mov
lcall
and
into
jg
dec
imul
ds
xchg
or
cmp
push
add
cwtl
in
xor
jecxz
ljmp
cmp
xchg
test
fidivs
mov
jo
pop
hlt
hlt
sbb
add
dec
dec
dec
loope
outsl
push
mov
addb
push
movsl
push
cmp
aam
inc
sbb
fs
mov
jle
es
push
jge
push
cmp
xchg
dec
daa
and
stc
ss
jmp
pop
or
xchg
lret
cmp
lods
mov
mul
push
pop
and
jmp
ret
sub
lds
pop
inc
jge
out
mov
mov
xchg
addr16
fnstenv
mov
mov
mov
push
xchg
int
dec
xchg
aas
push
test
cmp
or
cmpsl
jle
add
cmpsb
xchg
test
test
out
movsl
push
add
mov
jae
loopne
push
cmp
or
loope
repnz
movsb
cwtl
adc
mov
popa
add
adc
sarl
pop
and
arpl
je
sbb
mov
dec
mov
popf
inc
jecxz
fwait
or
mov
stc
mov
std
mov
sub
ret
xor
sbb
andl
jns
fnstenv
push
shlb
and
popf
cwtl
fcmovnb
hlt
test
jb
adc
xchg
pushf
cs
notb
and
sub
mov
mov
fsts
add
mov
jne
aas
dec
fisubrs
push
and
xchg
xlat
inc
outsl
xchg
shll
popf
lret
cmc
lret
cmpb
inc
xchg
push
mov
pop
pop
jns
int3
lds
test
dec
add
sarl
js
and
fstps
inc
add
repnz
fisttpl
fcompl
or
pushf
dec
and
xchg
bound
pop
aas
sbb
and
test
mov
mov
cmp
shr
bound
aad
adc
mov
dec
sbb
es
push
inc
cmpsl
sbb
fxch
add
es
jb
fwait
mov
sbbl
stc
cmp
sub
adc
in
push
xor
push
les
inc
inc
xchg
in
sbb
xor
faddl
xor
xor
pop
push
push
aaa
cmp
aas
push
testb
iret
xor
cmc
in
mov
cmp
add
enter
loop
mov
icebp
ds
xchg
xor
loope
fisubs
xor
xor
push
xor
shll
enter
xor
xchg
push
insl
push
loope
js
dec
mov
test
mov
and
push
dec
lahf
cli
outsb
xchg
adc
jnp
mov
mov
cmp
imul
sub
xchg
cld
jl
add
and
jge
fists
fcomi
dec
or
stos
push
cmpsl
imul
shll
mov
pop
push
insb
mov
mov
mov
imul
cld
sbb
imul
pop
ljmp
cmpsb
xchg
daa
shll
in
sub
mov
ljmp
xchg
mov
add
enter
stc
push
popa
pop
fldt
adc
cmpsl
cwtl
fcoml
lea
mov
inc
fldenv
xchg
ret
or
aam
fwait
inc
jecxz
cmp
mov
or
pop
ror
aaa
mov
push
mov
sub
addr16
mov
dec
and
sub
cmp
fwait
add
jg
jo
das
adc
inc
push
dec
jno
cmc
sbb
je
aas
xchg
repz
jge
test
xchg
fisubrl
dec
mov
pop
xor
sub
mov
scas
add
sbb
fdivrs
mov
es
outsl
add
outsl
mov
sbb
testb
gs
adc
repz
cwtl
stc
aam
cmp
sbb
xchg
xor
sarl
push
addb
sbb
jecxz
aam
in
or
mov
test
and
cli
lret
mov
sarl
in
jecxz
jae
out
cmp
stos
add
dec
inc
nop
cmp
int
stos
lahf
rcll
ja
lahf
jmp
push
xchg
in
and
sahf
das
lock
mov
cmp
pop
insl
mov
out
xchg
repz
mov
adcl
sub
jge
jbe
aam
jmp
jmp
mov
shl
mov
fadd
pop
cmpsl
pop
push
push
xor
outsb
add
or
and
and
jecxz
cmp
scas
fnstenv
je
xor
add
cmp
test
scas
and
sbb
cmp
pop
gs
jmp
pop
sahf
icebp
shl
fwait
aam
mov
imul
inc
loope
adc
lret
flds
xchg
inc
aad
and
je
pusha
hlt
pushf
lcall
data16
xor
lods
mov
pop
xchg
aaa
insl
imull
sbb
sub
inc
xorb
in
adc
xchg
lahf
sbb
jbe
fstp
movzbl
xor
iret
imul
sahf
fimull
fisttpll
jne
xor
in
ficoms
sub
les
push
lea
add
push
lcall
test
sub
leave
lret
lret
out
pop
lahf
negl
pop
sbb
out
add
jge
jnp
gs
jmp
or
scas
mov
sub
ja
pop
cmpsl
std
ret
lea
fisubs
mov
jne
push
push
push
cmp
jno
or
out
mov
cld
lock
sar
fnstenv
push
mov
aad
sub
cmpsb
mov
stos
mov
bound
test
xchg
xchg
xchg
push
sub
ja
dec
pop
dec
pop
pushl
jecxz
les
xchg
sar
dec
aam
xor
loop
sbb
xorl
and
call
in
and
repnz
js
sbb
shrl
inc
xchg
jb
rorb
add
xchg
jno
pop
push
mov
pop
sbb
testb
subl
xor
jle
mov
lds
cs
sbb
and
lret
addr16
scas
insb
ljmp
insb
jp
and
and
xchg
js
xorb
mov
jle
negl
push
xchg
pop
pop
repz
mov
leave
lock
shr
adc
inc
sub
enter
jmp
testl
out
int3
inc
push
pop
fsubrs
fs
add
jb
sbb
jno
and
into
mov
and
pop
or
lret
pop
cmp
inc
xor
push
scas
dec
call
dec
xchg
js
sub
in
mov
sti
push
hlt
les
movntps
fsincos
xor
sub
pop
sub
test
push
sub
ljmp
xlat
lahf
out
xchg
dec
and
add
dec
in
push
pop
or
sbb
cmc
xchg
fsub
xorb
cmc
cld
rol
aas
xchg
xchg
mov
fimuls
jp
adc
mov
push
jb
dec
adc
int
mov
jbe
imulb
or
iret
cmp
and
xor
lahf
xchg
loop
in
and
mov
icebp
dec
jl
sti
dec
jg
fwait
aas
inc
rol
or
daa
loopne
push
jae,pn
es
cmp
hlt
add
pop
pop
mov
scas
insl
push
xor
pop
inc
dec
aas
cmp
js
or
push
mov
inc
dec
fdivrs
cmp
inc
data16
mov
stos
pop
pop
push
add
sub
mov
or
and
out
enter
popa
push
or
dec
insb
mov
push
dec
je
pop
out
shrb
movsb
cmc
test
pop
add
cmp
cltd
je
out
cmpsl
fadds
dec
and
stos
xchg
cs
out
xchg
sahf
mov
add
out
dec
mov
cmpb
outsb
in
int
hlt
mov
loop
adc
mov
mov
lods
in
cmp
sub
mov
cmpsb
xor
pop
lret
les
jbe
and
sbbl
mov
inc
sbb
inc
jp
insl
pop
ret
outsl
in
inc
call
out
je
jl
in
movsl
lahf
pop
lret
pop
sub
leave
and
ret
pop
xlat
pushf
ficoml
jle
jnp
cmp
insl
xor
aas
lea
fs
xchg
push
push
sbb
mov
movsb
adc
sarb
adc
lcall
or
sub
lahf
sbb
xchg
sub
xchg
in
data16
cmp
sbb
and
mov
test
dec
sti
into
mov
push
imul
mov
test
inc
fs
mov
int
cli
gs
fcoms
cs
sub
push
std
rcl
pop
and
jle
or
jo
mov
jmp
sti
or
dec
out
mov
fists
out
pushf
inc
dec
repnz
divl
cmpsb
mov
xchg
jnp
mov
dec
mov
lret
repnz
js
lret
int
jns
dec
mov
sbb
cli
mov
mov
rcrb
dec
or
out
adc
push
lahf
outsb
xchg
out
lcall
ljmp
fisubs
fs
ror
cmp
cltd
pop
pushf
pushf
push
dec
movsb
mov
pop
je
mov
xor
cli
cmp
jno
mov
dec
loopne
mov
xchg
jmp
out
repnz
sbb
loope
mov
out
mov
stos
dec
lret
lods
sub
push
hlt
lods
in
mov
shll
in
push
movsb
mov
adc
das
jle
dec
sbb
fdivs
push
cwtl
or
add
push
cmp
pop
cli
imul
ret
mov
mov
pop
add
out
push
repz
mov
aam
pop
push
mov
loop
fs
jmp
dec
mov
adc
xor
inc
adc
jbe
sarl
dec
inc
push
imul
sbb
sbb
insl
jecxz
addr16
test
clc
leave
stos
lods
pop
loopne
mov
add
mov
adc
mov
pop
mov
les
inc
ficompl
inc
mov
add
jnp
decb
loope
mov
sub
and
out
pop
int3
jmp
outsl
cmc
adc
lea
mov
icebp
jns
sub
lea
mov
xor
popa
icebp
lods
jle
xlat
js
fs
sti
insl
sti
pop
jmp
and
popa
cmp
sbb
ficompl
fwait
or
mov
in
hlt
insb
and
testb
sbb
out
sub
jle
test
push
std
sub
rorb
cmp
and
out
adc
ss
inc
mov
jno
ret
xor
pushf
mov
dec
gs
or
lock
cld
dec
hlt
sti
sti
push
pop
loop
adc
push
lcall
cmpsb
xlat
or
dec
enter
sbbl
fadds
pop
fs
push
xor
xor
add
jnp
jns
xor
adc
cltd
mov
test
cmp
jg
push
pop
int3
and
fdiv
push
scas
and
mov
out
dec
push
pop
jo
dec
cmc
out
cmp
push
mov
push
push
xchg
push
insb
xor
lahf
add
jnp
fiadds
cmpsl
loop
adc
rcll
pop
sub
adcb
cli
aaa
pop
andl
fadd
das
and
stos
in
jge
cmp
dec
fwait
movsl
cmp
out
aas
test
in
popf
and
inc
lea
cmp
cld
orl
jge
lahf
hlt
ret
je
lahf
in
dec
xchg
std
add
ljmp
repz
ret
out
push
add
mov
xlat
leave
addr16
adc
adc
daa
std
xorb
into
cmp
jle
mov
shl
xchg
xchg
xchg
rclb
fldt
daa
push
mov
ret
lcall
mov
adc
jge
adc
orl
loop
dec
sub
mov
std
mov
mov
mov
mov
fidivs
es
movsb
stos
shl
sbb
sub
in
pushf
add
xchg
ss
or
cltd
mov
cltd
push
push
cmp
xchg
or
dec
pop
or
js
add
hlt
hlt
sub
repz
or
lret
repnz
push
sbb
xchg
gs
xchg
mov
pop
mov
adc
rcr
sub
pop
mov
mov
dec
add
adc
sbb
int
jmp
jecxz
mov
lods
roll
inc
mov
es
fldenv
aad
testl
cmp
dec
in
adc
mov
push
repz
call
pop
sbb
nop
cmp
stos
test
push
jl
or
cltd
fstpt
jg
push
imul
or
pop
mov
insb
sbb
sbb
scas
pop
and
out
adc
cmpsb
dec
mov
or
xlat
arpl
cmc
pop
repnz
test
jo
add
out
adc
dec
pop
ret
movsb
mov
mov
push
popa
iret
jb
xor
aaa
xchg
scas
push
mov
inc
fnstenv
jl
popf
mov
push
jecxz
cmpsb
lret
sub
pop
mov
sub
pop
dec
rcrb
xchg
pop
int
mov
leave
fs
rorl
inc
xchg
ljmp
jbe
insl
push
nopl
mov
aad
add
pop
outsl
push
cltd
mov
xor
mov
repz
inc
ja
ficomps
les
js,pn
mov
and
or
popa
mov
loope
cmpsl
xchg
gs
mov
push
fildl
xchg
mov
sbbb
mov
out
test
int3
cmp
cmp
lds
sub
cmp
cmc
cli
xchg
jmp
mov
lret
loopne
int
lock
adc
push
xor
andl
push
mov
ss
shlb
xlat
jb
in
mov
aad
push
aaa
mov
inc
sbb
cli
mov
iret
sar
into
fwait
out
test
out
lods
popf
les
push
dec
xor
inc
push
dec
mov
jae
xchg
cmp
cmpsb
jl
push
popa
addr16
push
ret
sbb
mov
fimuls
sub
xchg
into
mov
popa
or
inc
ds
ret
cld
jns
add
sub
pop
cli
arpl
jne
dec
cmp
and
xchg
stc
shll
lods
cmp
sub
out
ss
add
xor
scas
xchg
mov
and
or
push
leave
mov
push
fdivrs
cs
insb
aas
rcrl
out
xchg
adc
mov
push
jg
jg
rorb
cs
mov
enter
and
jne
mov
pushf
fs
shll
dec
or
add
mov
cld
js
pop
lcall
movsl
push
xor
mov
insb
fwait
aam
jg
xchg
out
or
xor
cs
out
lea
je
push
mov
push
loope
ret
jno
in
repnz
mov
pop
iret
jne
jmpw
cmc
bound
mov
xchg
xchg
in
sub
pop
setl
movsl
lea
js
fcmovnu
fisubl
jns
insb
shl
push
fdivrp
add
inc
adc
lods
mov
jmp
or
ret
testl
mov
cli
dec
and
fmull
mov
push
mov
jbe
cld
and
iret
cli
adc
aas
out
jnp
jo
dec
mov
stos
ficoms
adc
nop
clc
lret
mov
add
pop
push
mull
push
xor
mov
and
lock
cmpsl
jno
imulb
sub
xor
sbb
inc
sbb
stos
sub
xchg
rcrl
jl
in
push
adc
mov
stos
pusha
fldcw
xchg
inc
push
inc
gs
lahf
mov
and
or
sub
lcall
mov
dec
popa
jne
aaa
mov
lahf
loope
jmp
fcmove
inc
dec
push
xchg
ret
xchg
pop
lods
mov
cmp
dec
outsb
inc
pop
mov
push
cwtl
push
mov
xchg
mov
inc
daa
notb
aad
call
push
out
mov
fld
unpcklps
push
push
xor
lds
lock
int
and
addl
jnp
push
sbb
jo
sbb
jne
adc
mov
inc
pop
sti
jno
pop
adc
je
jmp
scas
in
xchg
pop
inc
out
xor
movsl
or
inc
data16
hlt
mov
mov
stos
sbb
xchg
addr16
cli
adc
pop
stos
leave
pop
xchg
test
ja
pop
push
xchg
sbbb
mov
lods
movsl
cmc
push
and
test
loope
xchg
pop
push
sti
scas
push
mov
adc
cld
popa
test
add
inc
sub
add
popf
lea
push
cmp
lock
mov
arpl
test
dec
cli
in
ret
xchg
add
xchg
adcb
jge
addl
movsl
add
ja
mov
mov
and
insl
mov
or
outsl
enter
mov
xchg
loop
int
adc
cmpb
faddl
loop
cmpsb
add
jp
fs
cwtl
mov
sbb
mov
push
cmp
int
dec
lcall
test
fs
dec
mov
mov
jae
push
rorb
stc
repnz
fbld
add
push
frstpm(287
pop
mov
add
imul
das
lods
hlt
adc
xchg
repz
dec
popa
mov
xor
mov
sbb
addr16
pop
test
jno
inc
xchg
cmpsl
fiadds
es
add
adc
in
fs
jbe
inc
jg
sub
movsl
loopne
rclb
adc
test
bound
scas
mov
fs
push
mov
xor
lea
in
subb
xlat
jo
pop
ret
xchg
pusha
push
cwtl
and
mov
aam
fcomi
lods
popf
lret
pop
rorb
sahf
jb
es
ret
pop
mov
fwait
scas
jb
cmpsb
rol
cmpsb
adc
add
aaa
pand
and
lcall
mov
mov
pop
xchg
jae
sbbb
test
popf
icebp
cmc
xor
dec
xorl
push
cmp
inc
dec
and
es
inc
sahf
lret
imul
aad
pop
xor
imul
std
imul
loopne
movsb
jno
sbb
dec
pextrw
sub
out
scas
jg
shlb
xchg
or
mov
xor
cmpb
cmp
xor
aas
loopne
or
in
jecxz
xchg
shll
popf
lock
dec
cmp
pushf
loopne
cld
ds
das
fdivrl
mov
cmp
pop
inc
push
js
cmp
orl
insl
pop
cltd
xor
sbb
xchg
loopne
inc
jg
pushf
fs
push
sbb
mov
push
add
fdivr
pop
add
push
jo
add
dec
mov
fdiv
fadds
sub
int
push
and
pop
dec
and
xchg
push
enter
test
cmpsb
loope
push
iret
inc
and
int
in
aam
jnp
xchg
sub
mov
jecxz
mov
cld
push
inc
das
ret
insl
or
dec
stos
jp
bound
xchg
and
int3
fldt
ljmp
add
dec
test
push
jecxz
mov
and
xchg
insl
adc
pop
mov
push
cmp
test
loope
cli
hlt
jle
jb
fwait
daa
les
ljmp
sub
jg
pop
push
fidivl
sbb
clc
imul
dec
inc
fldcw
or
fnstcw
and
sbb
test
daa
into
lret
fcoms
ljmp
fidivl
mov
fstps
ds
mov
aam
call
pop
sti
call
push
pop
push
jns
mov
jne
xorb
rorb
mov
in
xchg
jp
cmp
sub
inc
bound
aam
aaa
outsl
cmp
pop
mov
mov
data16
cmp
pop
lahf
mov
mov
outsl
shl
into
pop
rorb
adc
lret
pop
adc
negl
imul
arpl
mov
idivb
mov
dec
repnz
lahf
movsl
or
or
sti
mov
fcoms
mov
cmpb
lea
cmp
repz
sbb
fdivrl
push
or
je
sub
jo
outsl
and
push
fisubrl
jno
daa
xchg
or
mov
xchg
add
xchg
lahf
cmc
das
sub
mov
dec
in
sub
pop
jbe
mov
int
repnz
rcll
sub
loope
push
jmp
in
jb
pusha
cmc
rorl
jo
pop
sbb
jge
ret
mov
xorb
cmp
pop
lods
aas
inc
inc
insb
jnp
ret
push
push
hlt
push
pop
jecxz
jb
dec
fs
push
jmp
and
inc
stos
dec
cld
pop
cmc
jl
cmp
jmp
aas
ljmp
negl
xchg
lock
sub
xor
movsb
es
pop
gs
test
fistl
adc
inc
jae
cwtl
icebp
sub
lods
dec
and
push
pop
mov
push
stos
fwait
nop
adc
dec
test
cwtl
cmp
es
fs
stos
rcr
pop
xchg
sub
mov
addr16
or
pop
xchg
sti
adc
shrb
xchg
sbb
movsl
clc
inc
test
fstl
or
pop
ret
sbb
pop
lret
test
outsl
xchg
adc
cmp
pop
stos
push
xchg
push
sub
cmc
inc
pmulhw
into
fsubs
cmp
decb
push
lret
xor
push
or
or
mov
dec
in
mov
rorb
mov
jmp
movsl
jg
sbb
insb
test
js
add
pop
leave
inc
or
inc
xchg
xor
fisubrl
dec
xor
data16
sub
inc
fimuls
mov
mov
pop
mov
jns
jno
lret
sub
jl
xlat
mov
pop
imul
es
inc
sti
aaa
aaa
ficoml
insl
loop
mov
mov
pop
mov
jp
mov
shl
jecxz
call
cltd
jae
xor
pushf
mov
sarb
adc
mov
mov
stc
xchg
rol
sub
mov
push
mov
jo
ljmp
pop
mov
mov
into
sub
inc
or
sub
sbb
mov
jecxz
or
sub
fwait
mov
sbb
shlb
inc
mov
add
fisubl
gs
mov
mov
or
push
ficomps
aam
aas
or
xor
in
je
sahf
mov
insl
xchg
addr16
aam
les
aad
mov
pop
sbb
lock
pop
nop
mov
int3
sub
out
lret
sub
stc
push
mov
inc
in
sub
fidivrs
xor
push
in
adcl
call
cmp
cmp
int3
leave
stc
jmp
int
mov
orl
and
jne
dec
dec
or
sub
inc
mov
pop
hlt
inc
push
lret
rep
jns
push
add
outsb
jp
jle
dec
cltd
gs
gs
les
inc
andb
addl
aaa
jg
add
popl
push
fimull
lods
outsb
inc
lds
negl
push
xor
dec
hlt
fstpt
mov
inc
aaa
in
mov
or
jno
inc
leave
jp
mov
daa
sahf
add
not
in
bound
js
sbb
nop
lcall
sbb
mov
cs
dec
int3
out
lods
daa
mov
sub
ss
inc
add
mov
hlt
lods
push
popa
andb
nop
push
add
mov
jp
sbb
clc
sbb
mov
push
data16
out
icebp
pop
and
mov
fidivl
lods
pushf
sti
repz
fistl
and
xor
sbb
into
in
jg
frndint
mov
inc
fcomps
out
pop
loop
imul
ret
call
lret
icebp
inc
je
inc
inc
mov
pop
mov
pop
push
mov
push
sub
int
mov
mov
jmp
xlat
movsl
mov
or
popa
inc
dec
cmpsb
fidivrl
sbb
out
dec
push
xchg
mov
movsl
adc
mov
imul
pushf
test
and
sahf
out
inc
mov
scas
pop
out
jp
pop
mov
mov
aam
xchg
xchg
push
dec
push
ljmp
pop
jne
pop
fcoml
rorb
cwtl
and
push
test
inc
cld
mulb
push
lret
mov
pusha
mov
je
out
sub
sbb
sahf
das
shll
dec
jl
push
add
cmp
sahf
or
adc
lret
push
rorl
jne
add
jmp
jg,pn
and
js
rcl
pop
add
or
imull
mov
sbb
fsubp
mov
loope
pop
stos
inc
mov
xor
jp
jmp
ja
add
push
pusha
add
inc
stc
push
or
cmp
add
jo
sti
push
dec
pop
adc
adc
mov
pop
ror
lods
mov
fwait
jp
pop
sbb
push
pushl
cmp
pop
scas
cmpsl
fs
ljmp
mov
sbb
add
sbb
dec
ljmp
xchg
shrb
pop
add
test
rol
sub
jg
fidivs
inc
out
cld
cmpsb
mov
push
ret
movsb
push
pop
or
xor
aas
xchg
icebp
jecxz
pop
jae
xchg
push
pop
cmp
and
jp
fnsave
mov
fisubrl
push
into
push
mov
int3
in
cli
sub
push
sbb
jbe
adc
hlt
inc
and
fstl
mov
imul
or
hlt
adc
jo
adc
pushf
arpl
iret
clc
adc
and
test
aaa
mov
mov
add
push
push
or
push
push
mov
lcall
jg
cmp
mov
mov
jne
ljmp
insb
orb
and
mov
fwait
cltd
outsl
inc
test
sbb
add
sub
js
and
mov
pop
std
ds
fwait
mov
xchg
cmp
je
lock
sbb
or
aas
jno
cmp
mov
in
in
xor
or
jecxz
popf
pop
sbb
pop
das
insb
pop
adc
repz
movsl
push
fldenv
mov
fbld
dec
daa
enter
jmp
popf
sarb
or
test
int
mov
mov
andl
cmp
mov
mov
clc
xchg
rolb
or
jp
adc
gs
addb
lret
or
pop
jnp
out
leave
dec
or
push
fwait
mov
mov
jb
faddl
inc
mov
lret
inc
test
jne
test
dec
push
pop
xor
mov
cmp
pop
jl
stc
clc
repz
dec
fstpt
cmp
icebp
sbb
outsb
mov
sbb
push
pop
dec
inc
lret
mov
incb
add
jg
dec
push
andps
test
mov
imul
minss
and
lcall
outsl
jle
mov
dec
pop
out
pop
adc
aad
add
push
inc
nop
loope
in
mov
aad
or
imul
sub
mov
mov
bound
add
jne
or
and
sbb
mov
sbbb
inc
sbb
xchg
xor
adc
or
jp
aaa
and
lret
xchg
mov
cwtl
xor
clc
in
mov
pop
pop
cmpsb
pop
and
ret
enter
xor
mov
or
bound
or
push
daa
cmp
pop
ficoml
int3
cmpsl
push
push
int3
rorb
inc
dec
loopne
jae
pop
in
pop
add
dec
stos
scas
shrl
pop
data16
xlat
cs
stc
jo
cmp
jnp
xchg
divb
popa
push
jecxz
push
lret
mov
xchg
stos
push
test
dec
rcll
decb
test
sti
xor
xor
inc
jns
lock
loope
movsb
pop
negb
mov
cmpb
out
xor
lret
mov
repz
lock
sub
jns
mov
xchg
jae
adc
jl
std
in
ret
sarb
repz
sbb
hlt
outsb
mov
pop
and
add
stc
pop
push
ja
in
push
jg
dec
cmc
and
xchg
xchg
mov
dec
test
jb
add
shr
jle
int
pop
sbb
repnz
mov
and
clc
imul
and
out
lahf
aas
vdivsd
or
imul
ret
dec
adc
faddl
or
adc
in
cli
mov
ss
ja
push
hlt
rol
outsl
les
lahf
cmc
jle
js
jmp
into
mov
mov
gs
mov
dec
enter
shlb
cmp
fwait
cmpsl
lcall
lods
and
mov
adc
je
pop
rolb
cmc
pusha
jnp
xor
sarl
mov
mov
stos
cmc
pop
add
and
mov
dec
fistpl
push
jmp
fiadds
cmp
and
rcrl
adc
inc
lret
fisubrs
and
sbb
adc
jne
sbb
mov
adc
mov
int3
sti
xor
bound
mov
clc
sarl
mov
push
outsb
dec
xchg
mov
into
jl
std
lret
clc
es
mov
sbbl
outsb
mov
inc
out
repnz
dec
push
mov
daa
lods
mov
jne
mov
mov
es
hlt
fildll
or
push
or
sbb
out
icebp
dec
pop
iret
mov
dec
icebp
repnz
ss
lock
and
add
mulb
loopne
lock
rcll
or
cmp
stos
lds
mov
insb
inc
sbb
out
push
into
pop
jno
lret
movsb
fcmovbe
xchg
imul
pop
push
xchg
sub
leave
iret
mov
fucomip
xchg
dec
enter
sahf
push
arpl
xchg
mov
jecxz
xor
out
cltd
jmp
shrl
movsl
push
insl
jo
xchg
pop
lock
icebp
cmp
jb
fcompl
xor
test
add
js
shlb
cmp
std
dec
shl
js
das
sbb
lods
xor
pushf
mov
push
jbe
enter
mov
push
in
sbb
sbb
dec
fwait
lea
fists
push
es
stos
push
push
scas
out
mov
pop
imul
xchg
fstps
outsl
push
adc
jmp
or
popf
leave
inc
xchg
push
jnp
scas
inc
iret
fisttpll
les
dec
dec
movsb
arpl
leave
mov
xchg
mov
add
roll
sub
jae
dec
mov
pop
xor
dec
jns
idivb
shlb
fimull
lahf
divl
push
jns
cmp
inc
repz
xchg
sbb
mov
xchg
loopne
mov
xlat
cld
test
cmp
pop
cmp
mov
jo
sbb
and
loop
add
data16
insb
jecxz
loopne
es
sub
or
mov
jae
dec
fimuls
cmp
ljmp
mov
rorb
cmpsb
popa
cli
xchg
add
sub
repnz
and
jmp
rclb
hlt
imul
bound
adc
scas
jle
ljmp
jecxz
mov
pusha
pop
mov
pop
sbb
outsl
insb
addr16
mov
jnp
sub
rcl
in
xor
pop
or
sti
pop
in
pop
jmp
sbb
pop
popa
dec
xchg
popf
adc
leave
pop
hlt
mov
out
jne
aas
xchg
cltd
cwtl
inc
fs
pop
mov
fildl
push
sahf
inc
mov
ljmp
aam
mov
push
jp
sub
ret
adc
hlt
insb
sub
push
jle
mov
mov
lods
dec
test
mov
jle
mov
jmp
sub
mov
jne
jle
or
pop
xchg
fsubr
sarb
test
mov
jmp
pop
stos
dec
hlt
push
mov
adc
shl
paddd
into
rorl
mov
jge
cmpsb
pop
pop
test
stos
stos
cmp
cmp
jns
bound
xchg
sub
cmpsl
mov
mov
pop
jecxz
or
sub
jmp
adc
add
pop
call
fisubrl
xchg
mov
inc
insb
cltd
mov
dec
loop
add
inc
insl
stos
push
jo
mov
pop
imul
add
sarl
out
das
shl
aas
mov
cmp
das
inc
into
add
dec
mov
iret
inc
adc
xor
xor
mov
nop
dec
pushf
decl
xor
sub
add
inc
push
inc
daa
xchg
jns
ja
loop
insb
out
xor
inc
leave
lahf
cmp
fwait
adc
das
mov
daa
int
jns
xchg
test
leave
cmp
lods
dec
loopne
adc
dec
xor
adc
add
jg
xor
fcoms
loop
jae
inc
out
shrl
and
movsl
cmp
cs
cwtl
xor
int3
pop
in
or
call
cmpsb
sbb
sub
push
mov
std
xor
lea
scas
mov
pop
jmp
and
std
sbb
cmpsl
ret
adcl
sbb
movsl
aas
mov
in
adc
mov
cwtl
je
dec
inc
sub
jecxz
pusha
sub
xor
cmp
test
pop
cli
sbb
imul
xchg
adc
push
jns
sbbb
addr16
cmp
jl
lods
xchg
test
out
aad
int3
mov
mov
jge
pop
pmulhuw
scas
push
addr16
xchg
adc
or
add
mov
data16
push
xor
xor
mov
add
jg
in
sbb
fwait
sub
int
cmp
dec
jmp
push
fdivrs
or
push
incl
lea
or
into
xchg
shlb
pop
roll
jbe
iret
mov
add
inc
dec
scas
imul
jg
cmpsl
popa
dec
push
mov
mov
sbb
fldt
ret
sahf
mov
insb
mov
test
pusha
mov
shlb
cmp
pop
mov
sub
mov
in
and
inc
push
jmp
rcrb
out
sbb
cmc
xlat
test
loopne
mov
imul
out
fdivl
mov
dec
cmp
mov
andb
or
lcall
scas
and
dec
adc
aam
and
jns
std
ja
sbb
mov
jbe
movsl
inc
pushf
mov
sub
jbe
insb
repnz
xchg
mov
pop
dec
lcall
popw
inc
inc
test
pop
mov
xchg
jecxz
jbe
mulb
xchg
jo
jle
repnz
xlat
lahf
cmpb
jbe
in
test
dec
outsl
jbe
loope
cli
push
push
jbe
xorl
cmp
or
pop
sbb
repz
push
mov
dec
mov
cmp
sbb
out
sub
clc
pop
into
sub
jae
ss
dec
shrb
mov
xchg
lods
push
outsl
cmp
hlt
cld
push
pop
test
jnp
test
test
outsl
cmpb
pop
adc
xchg
lock
cmp
and
xor
fucomi
test
enter
ss
scas
mov
dec
sahf
lods
sub
pop
loope
push
scas
mov
mov
or
inc
out
xchg
popa
sbb
fwait
leave
pop
pusha
arpl
hlt
fs
sbbb
dec
pop
push
ret
jo
mov
es
cwtl
jl
and
lods
sahf
mov
notb
inc
adc
test
es
lock
fisttpl
sarl
icebp
bound
and
mov
ret
push
push
imul
sub
arpl
and
jmp
mov
jge
mov
repnz
into
test
out
dec
into
popa
rolb
cmp
xchg
and
stc
ret
in
ja
dec
daa
xchg
movsb
aaa
cmp
fstpl
jg
cmp
jecxz
ret
call
push
inc
xor
filds
mov
jecxz
inc
iret
or
push
push
xchg
jo
pop
add
xor
orl
jns
mov
hlt
dec
dec
arpl
and
sub
adc
or
repnz
xor
and
movsb
filds
mov
inc
insl
mov
stos
or
in
jbe
into
lcall
movsl
mov
pop
or
sbb
rclb
sbb
and
jne
enter
or
loope
nop
dec
test
aaa
mov
daa
add
js
mov
into
pop
mov
sub
lods
push
aad
cmpsl
scas
jl
sub
stc
stos
hlt
into
mov
jge
in
xor
adc
les
cmpsl
stc
clc
rcl
popa
pop
push
jge
mov
es
adc
xor
dec
or
stc
dec
mov
fdiv
xchg
mov
ljmp
adc
in
push
jo
daa
int3
stc
mov
popf
dec
inc
adc
lret
mov
lahf
popf
into
jl
iret
cmp
insl
test
push
jmp
pop
lret
pop
aam
add
sub
aam
adc
dec
sbb
loopne
iret
mov
test
mov
sub
xchg
xor
mov
movsb
mov
into
and
push
fs
into
cmp
into
and
pusha
outsb
cld
xchg
adc
nop
or
mov
insb
ljmp
xorb
adc
dec
or
shr
sar
int3
lods
fildl
mov
push
jmp
inc
xchg
push
popa
das
testb
out
lret
daa
outsl
leave
dec
jns
cmpsl
mov
cmp
out
ret
push
cltd
or
inc
push
mov
jns
sub
cmpsl
loop
imul
xor
or
cmp
sbb
std
fstp
ljmp
nop
jne
pusha
movsl
add
inc
cmpsl
inc
add
in
je
icebp
call
out
jnp
pop
xchg
cmp
or
lods
sahf
inc
add
fldcw
rclb
inc
dec
adc
pop
pop
into
jg
add
xlat
jns
jae
push
adc
int
or
jae
popa
sarl
pop
insb
adc
fidivrl
sbb
in
mov
xchg
xor
dec
ljmp
enter
dec
mov
push
out
inc
xchg
pop
popf
sbb
xchg
or
dec
subb
jmp
mov
sub
stos
pop
fnstenv
pop
inc
fwait
dec
adc
lcall
mov
divps
push
mov
pop
or
fsubs
shrl
mov
and
mov
cmpsl
adc
cwtl
push
lods
pushf
popa
mov
in
push
add
sti
mov
mov
jge
pop
stc
test
in
loopne
loopne
sub
cmp
cld
lret
mov
mov
cltd
mov
inc
cmpsb
out
enter
mov
pushf
push
sub
mov
sub
add
into
xchg
push
int3
ds
dec
std
lahf
popa
mov
aaa
leave
xor
testb
jns
jb
gs
push
inc
inc
mov
pop
fisttps
or
nop
pop
mov
ret
aad
sub
xchg
out
lods
divl
scas
stos
clc
leave
jo
pop
adc
scas
testb
xor
pushf
push
lahf
push
out
outsl
insb
xor
ret
cli
lea
imul
aam
lret
add
test
jo
daa
push
xorb
je
jecxz
xor
mov
pop
ret
dec
pop
hlt
jo
pusha
mov
sub
rcll
ljmp
dec
push
stc
cltd
mov
cld
push
das
ljmp
or
pop
mov
fcomp
jl
sarl
jge
push
lods
lahf
jb
outsb
ljmp
adc
lods
ss
mov
fimull
sub
out
inc
cld
pusha
movsb
push
jb
mov
aad
lcall
mov
imul
cltd
psubsb
loop
js
js
jge
mov
mov
fwait
stc
outsl
xchg
loop
xor
jo
mov
iret
pop
xchg
jne
test
decb
xor
mov
clc
je
cmpsl
call
xchg
cs
mov
cmp
push
and
scas
jg
aad
iret
clc
pusha
jle
cmp
nop
or
in
adc
mov
lods
jb
mov
xor
fs
xor
cmc
leave
mov
test
mov
cld
xchg
mov
inc
pop
and
icebp
das
lahf
lds
mov
xor
dec
fimull
into
xchg
dec
sbb
cmpsl
jo
push
or
test
push
lcall
mov
jbe
inc
cmp
clc
mov
sub
mov
addr16
push
jbe
push
aad
inc
and
sbb
xchg
jl
jl
cmpsl
push
iret
add
out
pop
cs
pop
cs
mov
divl
xor
rcl
test
ljmp
xlat
stos
push
jecxz
push
push
or
pop
int
xchg
popa
sbbb
dec
fadds
lods
mov
loop
imul
sbb
sub
or
imul
sub
dec
out
xchg
push
dec
mov
mov
int
inc
fsubrl
push
imul
pop
xor
mov
cmpsl
std
inc
pop
outsl
adc
sarl
xorl
push
outsb
cltd
push
std
sub
mov
lods
insl
mov
jle
hlt
test
imul
subb
push
repnz
sarb
dec
loopne
sbb
inc
out
mov
rorl
add
fstpl
add
cmpsl
mov
pushf
test
es
das
pop
mov
add
mov
fstl
jmp
or
mov
pop
pop
mov
icebp
mov
stc
fdivl
pop
sbb
adc
sahf
sub
sbb
stos
dec
fs
test
and
dec
dec
dec
push
mov
inc
pusha
adc
iret
stos
lock
int3
push
fxch
pop
jns
mov
lret
insl
mov
push
dec
mov
adc
push
and
sarb
aaa
negb
fs
adc
je
inc
or
jp
in
jo
inc
mov
mov
test
ja
ss
ret
addr16
inc
cs
mov
cmp
cmp
int3
ja
pop
sub
push
les
sub
and
test
add
mov
out
mov
jg
fldl
out
dec
jne
xor
filds
inc
mov
insb
dec
les
or
icebp
sub
sub
add
mov
add
pop
pop
jb
or
fcomi
mov
mov
stos
xor
mov
arpl
xor
in
shld
das
shrl
addr16
sbb
mov
jne
mov
fdivrl
cmpl
iret
lret
add
mov
jle
movsb
push
jo
xchg
jne
hlt
jnp
add
adc
fildl
lret
mov
loope
dec
dec
sub
mov
sub
mov
adc
insb
rolb
push
movb
stc
lods
pop
stos
enter
ror
sub
aas
cmp
scas
cwtl
test
addr16
push
stos
nop
int3
push
mov
aad
sub
cmc
mov
test
aad
shlb
push
or
lcall
pop
sbb
aam
sub
mov
cltd
out
sbb
push
xchg
push
lock
ds
movzbl
das
movl
dec
dec
stos
sub
repz
jns
inc
jb
fcmove
shlb
addb
pop
jmp
lret
loop
fs
js
xor
enter
or
mulb
add
pop
sti
xchg
dec
imul
jl
test
incb
xor
cmpsb
stos
mov
ret
dec
push
inc
adc
sub
testl
clc
jb
dec
fs
int
and
pop
loope
sub
jge
mov
ss
push
cltd
adc
mov
es
ss
int3
into
aam
lea
push
out
sti
cwtl
dec
incb
add
mov
xor
cmp
nop
push
or
mov
nop
adc
jno
aaa
dec
ret
rcr
dec
add
ret
stos
jg
xchg
mov
and
fiaddl
sub
and
ja
jp
je
push
popa
mov
sub
ret
push
rorb
and
cli
ret
sbb
mov
cld
xchg
jl
cmc
shrl
pop
dec
add
xchg
mov
inc
push
mov
test
jbe
pop
add
sbb
leave
sahf
mov
ret
cli
test
xchg
cmp
mov
outsb
mov
imul
lock
xor
push
jp
rorb
mov
out
ffreep
jo
dec
mov
dec
mov
adc
fs
mov
and
js
mov
add
insl
int
dec
js,pt
mov
sbb
push
sti
push
ret
xchg
dec
mov
sbb
inc
dec
sbb
in
sbb
fwait
aaa
mov
mov
jae
pop
lret
adc
sub
mov
lahf
sub
bound
push
sub
inc
sbb
push
xchg
mov
sti
out
int3
fidivrl
jns
icebp
sbb
sbb
fdivl
push
and
or
daa
add
xlat
sbb
iret
shll
jns
mov
popf
mov
gs
ds
sar
jle
or
out
jg
sti
inc
loope
in
fcomps
xchg
out
outsb
shll
fs
hlt
ret
in
pop
sti
or
into
out
mov
push
fld
ss
xor
inc
stc
mov
mov
lods
repz
pop
sub
or
mulb
adc
cli
imul
jo
pop
xrstor
mov
sbb
loopne
jecxz
mov
xor
inc
add
add
xor
dec
mov
cltd
popf
arpl
test
sahf
push
lds
fisubl
adc
push
or
lock
in
jno
inc
in
xlat
push
xor
push
jnp
jae
call
pop
mov
out
int
ret
push
push
cltd
rcrl
popf
xchg
xor
cmpsl
dec
pop
push
cmp
adc
flds
dec
lcall
popa
add
jl
mov
fmul
mov
repz
inc
lret
aam
pop
push
sbb
cmp
stc
sbb
aaa
jp
adc
and
cwtl
rcr
mov
cmpsl
rolb
xchg
jge
adcb
jp
push
inc
pop
pop
scas
jl
das
jb
sbb
mov
sub
loope
cmpl
dec
test
dec
imul
ficoms
push
sub
lock
iret
lret
pop
cmpsl
icebp
push
push
add
xor
xlat
inc
fs
ret
cwtl
sti
mov
push
or
mov
test
scas
stc
lods
insl
icebp
or
leave
imul
push
rep
xchg
jg
inc
loop
stc
fimull
push
in
and
dec
jbe
popa
jbe
jp
or
js
sahf
fmuls
std
lods
xor
jmp
or
or
dec
cmp
test
das
cwtl
lods
xor
int3
xchg
insb
inc
mov
insb
mov
push
out
jle
push
lea
ja
imul
in
lcall
mov
add
mov
or
shll
pop
xchg
mov
scas
dec
and
movb
sub
repz
gs
mov
fistl
push
fnsave
xchg
or
mov
aam
addr16
xchg
lahf
pop
sbb
dec
push
pusha
in
rolb
sbb
pop
mov
push
fisttps
outsb
repz
mov
jge
fidivrs
xlat
in
fistl
stos
in
test
fbstp
xor
insl
ret
call
rcr
mov
dec
insl
cltd
cmc
enter
inc
inc
sub
lret
js
std
jae
loope
pop
loopne
addl
mov
sbb
lret
pop
xchg
adc
inc
add
subb
mov
test
repnz
inc
dec
sahf
psubw
pop
mov
push
rclb
dec
sub
popa
fld1
arpl
dec
cld
aam
mov
mov
les
cmc
dec
in
and
scas
xchg
scas
js
adc
ss
add
lret
adc
addr16
mov
xlat
aas
push
sti
inc
loopne
fmull
lcall
mov
dec
jno
clc
add
jo
sub
or
les
dec
jge
clc
push
popf
push
ffreep
in
adc
insb
mov
jmp
cmp
mov
lock
push
mov
mov
stc
add
dec
ficomps
cmp
lods
inc
cwtl
rcrb
ds
sahf
and
dec
inc
mov
xor
mov
loop
jg
daa
pop
es
adc
enter
dec
and
or
sahf
repz
jg
icebp
lcall
out
loop
adc
jg
shrl
sti
mov
lret
xchg
jecxz,pn
test
into
dec
je
test
aaa
loop
adc
ja
test
insb
mov
mov
call
add
and
mov
pop
clc
push
jp
or
out
aam
cmpsb
inc
stc
lret
xchg
push
pop
xchg
das
pop
lret
inc
or
es
jg
data16
xor
xchg
in
mov
or
out
cmp
pop
outsl
sub
insl
add
mov
cmp
add
sub
cmp
ret
test
pop
popf
sarl
add
dec
gs
adc
and
sub
fs
or
popa
loop
xor
xchg
jg
int
lods
push
clc
dec
jnp
lea
ret
adc
mov
jmp
stos
mov
pop
pop
rcrb
xchg
in
add
sub
mov
aam
rolb
xor
fs
or
in
int3
mov
push
push
mov
insb
push
mov
add
or
int
daa
or
cli
fwait
out
rolb
cmp
popf
push
cmp
cmc
shlb
mov
lcall
push
fs
mov
int3
popf
mov
cmp
pop
push
xorb
aaa
mov
push
imul
lcall
loope
pop
loope
jmp
popf
ss
inc
adc
and
mov
inc
cmc
jns
sub
loop
dec
adc
sub
inc
xorb
repnz
daa
jge
bnd
dec
lds
mov
jno
push
adc
xor
fistpll
mov
arpl
xchg
mov
jbe
pop
lahf
mov
push
jnp
retw
dec
ret
push
mov
jg
inc
repnz
shlb
and
sbb
enter
pusha
adc
push
repnz
xor
dec
fdivrs
or
adc
jno
jl
sbb
iret
leave
mov
jecxz
es
popf
test
mov
push
negl
inc
push
into
in
jns
mov
cld
push
jle
gs
sti
loope
sbb
adc
sub
sbb
movsl
add
loop
mov
repz
movsl
pop
adc
cltd
mov
lea
jo
shr
mov
lods
xor
scas
ljmp
gs
cmc
fstl
jo
fildll
fisubrl
sbb
mov
mov
into
out
mov
pop
dec
int
inc
into
cmpsl
or
adc
adc
pushl
repz
dec
mov
cmpsl
inc
es
xchg
jns
test
mov
out
dec
inc
daa
xchg
pop
adcb
arpl
or
repnz
sbb
push
and
gs
xlat
jle
cwtl
add
xchg
jmp
pop
sbb
out
sbb
imull
xchg
int
dec
jb
nop
dec
fcmove
loop
cmp
test
and
xchg
insl
shl
mov
add
inc
fmuls
jno
push
mov
lret
push
ja
into
pop
inc
xchg
mov
and
mov
daa
movsb
cmp
in
push
pop
add
dec
outsb
aaa
leave
dec
mov
repz
inc
and
clc
adc
lret
inc
cmpl
int3
adc
bound
sbb
adc
roll
ja
dec
sub
ficomps
dec
pop
out
fmul
mov
shll
or
fstpl
leave
xchg
inc
pop
bound
stos
mov
push
nop
xchg
out
adc
cmp
ffree
aam
push
mov
cli
push
jmp
pop
inc
scas
fisttps
mov
icebp
je
mov
ss
dec
cmpb
mov
sbb
mov
push
push
xchg
xchg
rorb
gs
bndstx
dec
adc
out
adc
pop
and
pop
inc
push
push
aaa
lea
int3
scas
pop
mov
sbb
sbb
jecxz
mov
out
mov
xor
mov
sub
push
dec
les
add
cmpl
cltd
bound
gs
mov
adc
aas
lock
mov
fsubl
test
cmpsb
or
xor
iret
cmpb
cmp
or
into
fbld
nop
push
cltd
pop
pop
add
cli
push
pusha
jge
jb
cmp
xchg
push
popa
push
in
jnp
sbb
call
outsl
cmpsl
push
int
inc
lods
sarb
pusha
pop
inc
sub
movsl
adc
xor
jg
adc
repz
out
xchg
push
mov
and
mov
rorl
sub
pop
ffreep
xlat
outsl
inc
hlt
shll
add
cmp
icebp
sub
xchg
test
xor
inc
xor
loop
popf
pop
hlt
sbb
lock
lcall
test
mov
pusha
pop
scas
clc
insb
adc
and
fcomip
and
stc
cmp
and
movb
pushf
sti
std
xchg
aam
mov
and
mov
stos
cmpsl
cwtl
test
xlat
jp
push
ficompl
sbb
outsb
and
push
sbb
nop
inc
jns
or
movsb
inc
scas
jns
cltd
mov
pop
xor
daa
push
pop
cli
sbb
xor
adc
sub
jge
nop
je
leave
lds
popf
xchg
and
jl
loope
mov
pop
sub
shrb
ret
lret
mov
fstpl
out
mov
cmp
stos
fs
mov
mov
enter
push
je
into
into
pusha
mov
jl
imul
scas
mov
loopne
xor
xchg
inc
add
out
push
pop
add
or
int
std
cmp
xchg
fwait
pop
pushf
inc
pop
out
xchg
pop
mov
fnstsw
icebp
cwtl
fs
popf
push
ds
sbbb
fdivl
mov
mov
xchg
adc
mov
and
dec
and
aas
es
stos
repnz
mov
inc
and
cmp
jg
ja
cmpsl
lret
jae
sti
ret
and
and
or
dec
mov
push
aam
cmpsb
mov
push
ds
loop
inc
jae
daa
hlt
nop
andb
andl
push
icebp
jne
push
out
jo
xchg
jnp
bound
fisubrs
xchg
mov
popa
mov
inc
je
adc
cmpb
adc
mov
and
scas
rcrl
xchg
xor
iret
fisubrl
add
movsb
test
inc
and
sbb
jecxz
bound
nop
int3
insl
sub
mov
mov
fiaddl
rorl
sahf
add
xchg
mov
mov
pushf
roll
jns
add
imul
sbb
arpl
jecxz
mull
cmp
mov
sbb
xchg
sub
mov
and
aad
adc
dec
dec
inc
cwtl
dec
pop
mov
fidivrl
out
jle
out
dec
in
je
cmp
hlt
fsubs
pop
mov
pop
and
loopne
mov
adc
sbb
inc
pop
arpl
daa
sbb
dec
mov
cmp
adc
leave
imul
sbb
jge
dec
push
mov
xchg
or
lods
dec
iret
dec
jno
xchg
ds
in
push
fstp
pop
popf
sub
xor
push
js
and
add
jbe
push
ror
repz
cwtl
aas
xor
mov
xchg
and
add
inc
pop
sti
ss
or
jle
jecxz
cli
mov
hlt
mov
std
mov
jp
xor
xor
jbe
fdivrs
xchg
pop
xchg
gs
lods
cwtl
dec
dec
dec
push
dec
xchg
xlat
pop
fsubs
jecxz
popl
dec
out
rolb
call
pop
or
and
orb
sbb
addr16
mov
mov
xor
mov
and
ja
std
push
dec
repz
mov
push
sti
xchg
in
in
xlat
inc
mov
cmp
inc
adc
dec
xchg
xchg
sbb
test
in
and
mov
or
cmp
lods
mov
in
int
pop
and
adc
int3
je
jecxz
scas
rolb
xchg
aaa
mov
into
sbb
adc
roll
stos
es
xchg
mov
mov
adc
and
add
cmp
lods
add
in
fisubrs
jle
mov
inc
jl
dec
push
pusha
sub
out
or
xchg
mov
sbb
pop
repz
cmp
lds
mov
jmp
out
cmp
btc
jg
arpl
scas
in
or
std
ljmp
add
hlt
ret
mov
int3
outsb
ret
int3
sbb
cmp
push
jnp
into
aad
lods
rcrb
mov
cmp
mov
inc
cmpsl
cmp
hlt
call
mov
lea
cmc
mov
push
push
jmp
stos
xor
rdpmc
xor
fstl
jb
fidivrl
ds
das
ss
dec
add
xchg
out
ret
mov
dec
mov
or
in
mov
data16
fnstcw
lret
jae
fstps
mov
fnstcw
push
or
sub
in
dec
push
mov
test
scas
lea
cwtl
or
pop
mov
adc
dec
arpl
and
lds
ja
add
dec
repnz
test
mov
test
mov
jne
stc
mov
pop
gs
mov
outsb
sahf
ss
cld
aam
and
or
fsub
xchg
mov
daa
mov
adc
jle
nop
shll
jo
bound
shlb
xchg
jl
jp
add
mov
dec
pop
mov
ret
in
mov
pop
aaa
out
stos
cmpsb
in
in
xor
xchg
push
xchg
ja
jle
push
mov
add
jo
and
sahf
pop
test
cmp
rorl
or
mov
lock
dec
repnz
mov
sarb
mov
les
repz
adc
loopne
insl
pusha
mov
cmc
jbe
sti
leave
andb
lods
or
loop
pop
pop
addr16
push
push
gs
xchg
pusha
lret
sbb
jl
aaa
test
mov
push
dec
cmp
lods
mov
fs
adc
mov
jne
jmp
sub
shl
inc
mov
out
nop
repz
dec
fnstcw
out
xchg
outsb
mov
add
add
lock
sub
adc
xor
push
push
push
mov
mov
arpl
jnp
jns
popf
dec
push
inc
cmpsb
fisttpl
pop
lea
sbb
sbb
test
xchg
sub
inc
cmp
test
xor
jl
push
dec
jle
mov
ror
ficoml
and
cmpsl
test
adc
add
test
scas
popl
push
add
rorb
je
adcl
mov
in
jb
ljmp
sub
add
gs
inc
pop
int3
xchg
cmp
adc
jecxz
xchg
out
pop
mul
popa
jnp
nop
add
call
add
divb
pushf
aam
jo
cltd
loopne
or
fisubrl
or
dec
xor
xchg
outsl
mov
adc
and
mov
imul
popa
jmp
pop
ret
gs
incl
repz
icebp
les
jbe
cs
insl
xchg
sub
cltd
mov
int
call
mov
in
xor
cmp
aam
dec
ja
sub
insl
enter
rcll
xchg
ret
push
insl
xchg
jmp
test
fisubrs
cs
stc
mov
mov
xor
roll
inc
mov
shrb
pop
xchg
shl
xchg
fldenv
leave
jge
push
nop
divb
bound
mov
push
jle
jl
and
push
int3
data16
adc
sarl
and
or
mov
rcll
fwait
repnz
push
cld
lcall
jmp
shll
rorl
daa
lods
push
imul
leave
cmpsl
xor
std
sahf
xchg
jb
dec
out
iret
inc
and
ficoms
adc
andb
mov
sbb
push
mov
mov
xlat
cmp
add
lods
xor
sub
jl
test
jae
pushf
push
jne
adc
dec
hlt
xor
pop
loop
fmull
mov
or
xchg
sti
or
stc
dec
push
mov
scas
or
sub
ljmp
cmp
aam
ds
leave
adc
mov
cmp
repnz
mov
mov
pushf
rol
stos
add
pop
cmp
add
mov
aaa
mov
das
or
test
xchg
inc
pushf
data16
inc
jns
gs
push
movsb
data16
dec
lret
div
das
ficoms
in
cmpsl
push
imul
jae
sbb
lahf
out
loop
shlb
loop
lcall
xchg
mov
popf
daa
into
out
es
or
imul
je
sbb
sub
jp
scas
adc
hlt
and
push
pushf
leave
lret
scas
adc
inc
int3
nop
clc
ret
cmp
pop
popa
xor
popa
pop
popa
ljmp
lcall
aad
aam
les
roll
mov
xchg
mov
sbb
push
mov
test
jno
sub
mov
cltd
dec
mov
enter
ret
push
push
aaa
test
out
cmc
insl
or
jp
jno
pop
jle
scas
jmp
div
stos
pop
data16
adc
push
xchg
shrl
lea
mov
inc
ret
or
sbb
mov
fcom
cmp
fnsave
out
add
push
jno
xchg
lahf
cvtpi2ps
das
mov
data16
or
rcrl
insb
movsl
pop
adc
sbb
mov
popa
mov
jg
jae
rorb
jae
sub
inc
mov
jg
test
cld
cmp
fiaddl
imul
mov
pop
jns
add
std
push
test
adc
jecxz
xlat
aas
in
or
pusha
movsl
iret
mov
in
or
push
out
cmpsb
dec
cmc
dec
jno
fcomps
call
sub
xchg
mov
push
mov
sti
cmp
iret
mov
or
pop
insb
lods
push
inc
sbb
arpl
jp
jge
aad
pop
xchg
push
sti
push
jbe
aam
nop
jmp
mov
hlt
ljmp
mov
sub
rcll
xchg
popa
jge
or
xchg
iret
out
mov
inc
scas
or
mov
sub
sbbl
pusha
jle
xchg
push
daa
mov
mov
nop
or
lret
fists
xor
inc
and
cmp
pop
movb
aas
mov
or
or
mov
insb
roll
xor
mov
fwait
pop
xchg
mov
hlt
or
jge
adc
mov
jmp
jle
inc
mov
and
pop
gs
add
mov
cld
inc
icebp
inc
xchg
cld
pop
jne
push
dec
imul
cmp
and
and
mov
xlat
add
cmp
fstps
fildll
adc
fs
sbbl
in
cmp
jecxz
add
lret
inc
xchg
add
mov
stos
fbld
jno
cmp
lods
out
adc
imul
stos
inc
cmpsb
test
jb
int3
jno
pop
lods
jecxz
dec
jecxz
je
xor
in
daa
pop
jle
divb
push
decb
je
fistpll
shrl
mov
iret
jp
sti
hlt
cmc
inc
mov
push
pop
jae
or
enter
andl
cs
int3
imul
jbe
sbb
lcall
or
cmpsb
outsl
fmul
sbb
iret
test
repnz
loope
push
push
mov
gs
jp
mov
push
leave
movsl
decl
sbb
push
popa
push
aas
jbe
cmpsl
jl
push
lods
fs
push
jae
or
data16
adc
hlt
mov
xor
lret
test
fisubl
mov
pop
iret
pop
out
aam
addl
mov
inc
cmp
push
outsl
xor
xor
stos
sbb
jmp
in
jecxz
push
mov
sub
jl
pushaw
xchg
mov
ljmp
lret
jb
dec
or
mov
xchg
inc
fstl
inc
fucom
jne
dec
ds
xor
insl
shll
adc
loope
cmp
sbb
mov
jg
push
out
lock
add
nop
and
imul
rclb
push
repnz
cmp
sub
out
gs
lahf
and
out
cltd
aas
inc
pushf
dec
push
push
push
xchg
dec
pop
fildl
orl
mov
and
push
outsl
sarb
loope
xor
outsl
inc
sub
insl
mov
mov
adc
shlb
aad
and
mov
aam
int
sti
and
inc
add
push
jg
push
xchg
sub
mov
out
or
fistps
xor
mov
mov
movsb
mov
add
lock
sub
call
and
into
aaa
adc
lock
bound
and
icebp
mov
xchg
xchg
dec
rcrb
push
dec
in
add
xchg
movl
js
sbb
les
addr16
jns
jo
rclb
test
adc
dec
sbb
jnp
mov
setb
test
fnstcw
cli
lret
xor
jecxz
repz
cmc
imul
and
fstpt
rcll
repnz
shr
mov
push
flds
lret
cltd
inc
xchg
sarb
jl
add
in
pop
in
xlat
xor
sub
test
arpl
sub
mov
mov
in
pop
push
and
rcrl
es
pop
mov
cmp
mov
cmpl
jbe
jl
xchg
mov
sub
daa
out
pop
sarb
push
cwtl
pop
ds
lods
mov
in
mov
test
in
repz
popa
pushf
and
xchg
cs
insl
cmp
std
jae
mov
lea
adc
jp
lds
lock
cmp
jno
das
push
scas
mov
mov
xlat
loop
xor
ss
jg
sbb
cmp
cs
inc
sbb
das
cmp
cli
lods
daa
push
push
test
dec
lods
mov
sbbl
pop
add
pop
dec
sub
call
daa
je
add
pushf
mov
jnp
andb
iret
lock
sbbl
mov
jge
push
arpl
lahf
movsb
repnz
sbb
xchg
push
and
lea
adc
adc
fsts
rolb
repnz
outsl
push
cmpsl
mov
pop
xchg
mov
stos
popf
xlat
lods
bound
iret
sbb
dec
sahf
mov
pop
cmc
sub
int3
push
jecxz
daa
ds
nop
iret
fs
cmc
pop
jmp
pop
mov
out
fmuls
lock
out
inc
popa
or
mov
xchg
xchg
sub
push
jmp
rcr
pop
lods
dec
arpl
out
test
and
lcall
push
popa
sub
cmp
out
data16
sub
orl
mov
mov
cmpsl
test
in
jge
add
sub
aad
std
inc
cmpsl
jns
or
pop
leave
testb
cs
insl
jnp
arpl
dec
xor
and
insb
xor
dec
mov
adc
leave
sahf
sti
adc
hlt
gs
jg
xlat
sti
lods
pop
outsb
xchg
ret
cmp
fdivs
mov
sbb
cmp
aas
js
outsb
out
aaa
emms
dec
lods
xchg
rcrl
sahf
adc
nop
frstor
lea
dec
sbb
sbb
fistl
mov
daa
push
les
ljmp
xchg
and
pop
scas
into
sbb
dec
enter
mov
sub
and
ret
jno
cmp
insb
ds
imul
outsb
outsl
lods
pop
stos
xchg
cmp
jns
and
out
xchg
xchg
sarb
push
dec
add
mov
pop
xor
cmpl
xor
adc
or
ja
ds
insb
sub
and
push
movsl
xchg
mov
out
cs
into
mull
xchg
sub
fsubrl
jo
adc
inc
and
lcall
pop
sar
and
fwait
sbb
xor
addr16
out
pop
in
lret
nop
test
inc
adc
mov
scas
mov
jbe
aaa
frstor
mov
movsb
ljmp
rcl
add
inc
shr
daa
pop
divb
fisttps
out
leave
mov
sub
pop
loope
mov
cwtl
out
dec
adc
int
movsl
dec
or
pop
sbbl
pop
inc
xor
cmpsb
jle
pop
leave
sbb
cmp
xor
mov
mov
xorb
mov
pop
cwtl
mov
dec
je
nop
dec
push
xchg
or
ret
les
movsl
iret
lahf
adc
mov
orl
cmp
insb
outsb
pop
and
cmp
dec
mov
mulb
adc
pop
shll
lods
mov
insb
mov
sbb
mov
rol
xchg
push
dec
fwait
andl
stos
push
adc
cmp
movsb
xchg
mov
and
popf
push
cs
lock
ss
repz
mov
mov
sub
out
pop
aaa
ret
pop
adc
xchg
enter
shr
pusha
jbe
xor
cld
fdivs
rorb
and
mov
pushf
mov
loop
aas
and
mov
xor
mov
push
fisttpl
inc
jle
pop
cmp
sahf
sbb
or
jmp
pop
lock
insb
clc
repz
aas
pop
pushf
loopne
sub
lea
out
icebp
loope
add
jp
rcll
pop
xor
mov
pop
cmp
mov
jp
popf
xorb
es
push
mov
test
outsl
cs
lock
repz
cld
inc
dec
cmp
ret
jbe
push
sbb
jns
jle
mov
dec
jp
pop
or
dec
sub
dec
add
add
pop
mov
repz
pop
orb
repnz
mov
test
data16
in
jg
or
in
fsubs
mov
inc
ss
inc
les
xchg
loop
jg
push
lds
jbe
pop
es
js
jecxz
test
pop
mul
jns
xor
fs
sti
aad
push
add
sahf
insb
jns
hlt
dec
mov
stc
push
out
stc
pop
mov
sub
mov
pop
lret
xchg
sbb
repz
and
repnz
inc
hlt
in
mov
rcr
dec
rcrb
jmp
clc
pop
fwait
xor
out
xlat
aad
shr
cwtl
push
sub
loope
sbb
jmp
mov
clc
mov
jp
xorl
test
mov
outsb
mov
mov
cmp
sub
xor
sbb
xchg
sub
push
adc
nop
scas
cltd
pop
mov
dec
pop
inc
sub
dec
cmp
jg
mov
mov
pusha
sbb
add
pop
dec
xor
cmp
je
dec
fldenv
in
sbb
lods
xor
out
sub
dec
inc
ret
bound
sub
popl
mov
cld
and
jl
mov
cld
pop
adc
push
cmpl
fistl
push
or
sbb
mov
lret
jle
sub
fisubrl
push
dec
mov
adc
jnp
and
cli
subb
cltd
xor
rcrl
fbstp
fsubrl
stc
loope
lods
xchg
flds
cwtl
add
daa
mov
pop
xchg
aam
popl
mov
adc
mov
sahf
iret
imul
call
add
sub
mov
out
push
adc
push
cmp
xchg
jp
sub
fldcw
jp
sub
test
jecxz
mov
mov
movb
pusha
xchg
push
push
or
adc
jp
mov
mov
fistl
test
mov
cmpsb
gs
aas
aaa
xchg
fucom
mov
xchg
xchg
mov
jle
dec
pop
leave
inc
imul
pop
jp
cmpxchg
dec
sti
idivl
dec
fcmovu
inc
cmp
cmpsl
jo
push
adc
dec
fwait
js
pop
out
repz
and
ljmp
stos
out
loope
push
ret
call
nop
push
in
mov
ror
fs
les
fwait
sbb
fadds
mov
jb
sahf
mov
pop
push
jl
daa
cmpxchg
paddusb
xor
push
cmp
jge
jo
xor
or
mov
xor
stos
sub
sbb
icebp
mov
cmpsl
icebp
stos
fistl
xchg
rcr
bound
jecxz
sbb
int
daa
cmp
add
mov
mov
lahf
or
lret
stos
and
cmp
pushf
mov
js
push
sbb
pop
leave
ret
mov
in
lcall
mov
fisttpl
bound
pop
and
scas
add
jns
test
jmp
xor
mov
pushf
sbb
add
clc
xor
jae
fadd
test
pusha
fldenv
stc
jbe
loope
movb
push
dec
mov
cmpsb
std
test
xor
movsl
mov
jno
lahf
jle
jg
pop
xor
cmp
mov
outsl
jmp
xchg
push
in
ljmp
mov
into
push
ret
daa
dec
and
test
inc
fiaddl
syscall
fwait
fwait
mov
lea
das
add
shl
push
add
jecxz
jno
fs
jae
and
ss
insb
and
lret
mov
sub
add
aas
lds
push
inc
dec
lds
sbbb
xchg
mov
push
pop
leave
lret
sbb
jne
mov
pop
lods
jnp
rcrb
jns
cmp
jmp
lahf
and
jbe
nop
mov
sub
inc
or
out
mov
nop
imul
or
jbe
subl
stos
push
rol
dec
lea
mov
adc
mov
clc
loopne
xor
stos
out
ja
jmp
xor
rcr
cmp
push
mov
mov
mov
jbe
inc
out
lcall
leave
and
imul
mov
jle
jne
lcall
cmp
sub
cwtl
or
sub
or
enter
stc
inc
mov
jae
add
mov
aam
int
sub
xchg
sub
or
int
mov
outsl
repnz
pusha
xor
jne
lcall
dec
mov
fimull
add
shrb
int3
inc
sbb
aam
mov
adc
jg
jmp
or
sub
mov
std
push
mov
xor
out
mov
inc
dec
pop
sbbl
push
mov
repnz
shl
loope
xchg
mov
sahf
jecxz
mov
adcb
jno
mov
and
push
bound
insl
mov
popf
movsb
mov
push
rcrl
or
mov
inc
iret
lahf
aad
sbb
and
test
shlb
cmpsb
jge
add
mov
fildl
mov
bnd
cmp
or
ret
orl
into
mov
mov
and
xlat
push
xor
mov
arpl
in
xor
push
and
movsb
ds
mov
int3
jmp
jecxz
movsl
push
sahf
cmp
xchg
fldt
outsb
cmc
jmp
mov
icebp
or
fsubr
jb
jbe
mov
or
jp
xchg
xchg
pop
pusha
sbb
fcomi
es
dec
stos
test
mov
cmpsl
xchg
popf
xchg
leave
jae
in
sbb
mov
jecxz
dec
repz
pop
lcall
out
xor
push
stc
fs
clc
dec
cmp
in
les
leave
inc
push
enter
das
sar
dec
sub
inc
andb
aad
inc
in
in
imul
mov
pop
sub
inc
in
sahf
lock
imul
fs
cs
repnz
jl
jmp
sub
cli
rcrb
and
inc
insl
pop
sbb
ffree
les
mov
mov
pop
mov
imul
cmp
mov
in
mov
pop
push
adcl
sbb
sub
adc
lods
out
adc
shll
outsl
adcb
lret
call
xor
mov
out
mov
shlb
jnp
imul
mov
add
add
mov
repnz
in
jae
inc
cmpb
jge
mov
call
pop
loop
mov
pop
enter
ficomps
cmp
add
pushw
out
xchg
xchg
pushf
sti
iret
pop
xchg
push
xor
mov
mov
jno
sub
mov
jae
or
ret
cmp
jmp
loope
mov
mov
repnz
xchg
fstl
push
lret
inc
mov
fbstp
ss
aam
lods
add
cmp
dec
cmc
outsl
mov
or
fcos
lods
out
xchg
xor
js
mov
push
or
movsb
dec
pop
inc
jge
mov
inc
in
xchg
ss
cmp
ret
sbb
mov
shll
xchg
cmp
adc
js
add
out
lret
sarb
stc
jecxz
ja
cmc
jo
inc
orl
jns
add
loop
bsr
gs
mov
rorb
inc
jle
popa
adc
inc
nop
add
fbstp
xor
rol
popa
or
aad
push
inc
mov
out
dec
add
js
inc
mov
cmp
cmp
es
popf
enter
cmp
outsb
mov
mov
outsb
insl
push
inc
push
idivb
push
mov
jl
daa
mov
cwtl
andb
cli
call
test
inc
mov
in
add
jl
incb
dec
sub
mov
xlat
and
xchg
mov
dec
xor
lahf
jmp
fdivl
or
fprem1
ficompl
fmull
mov
test
sahf
adc
iret
or
cmc
out
xchg
ljmp
in
jmp
add
repnz
push
sbb
pop
rcll
cs
add
jns
mov
mov
int3
lock
push
push
popa
icebp
inc
inc
leave
jl
jno
fsubrp
icebp
sti
mov
inc
in
mov
pop
jb
es
xchg
add
jecxz
out
fs
test
jp
scas
sti
adc
pushf
push
sub
add
sub
dec
pop
lea
in
stos
xor
inc
inc
mov
xchg
cwtl
inc
orl
test
add
push
xor
int3
mov
ret
scas
pop
mov
movsl
dec
or
out
mov
adc
xor
or
or
std
pop
push
xchg
cld
push
push
mov
mov
daa
mov
or
dec
xorb
jb
aad
addr16
or
call
cltd
mov
adc
insl
in
in
mov
repz
or
jmp
mov
sub
jl
scas
xchg
out
inc
and
xchg
ds
add
mov
in
jno
out
fnstcw
mov
mov
inc
ss
pop
add
xchg
or
fisubs
xchg
scas
arpl
xor
in
cltd
fimuls
cwtl
dec
jno
das
cmp
cmc
jp
mov
lock
cli
roll
lret
cmp
hlt
sbb
lcall
cli
divl
mov
sub
movb
add
dec
imul
adc
scas
sub
sbbl
in
push
inc
inc
push
jo
mov
cwtl
cmpsb
arpl
rclb
cmpl
enter
test
lock
iret
jl
sub
ljmp
adc
nop
outsb
cli
add
cmpb
mov
iret
cmpsb
mov
and
dec
cmpsb
repnz
dec
jg
out
sub
fisttps
xchg
inc
lret
push
mov
mov
shrb
or
hlt
jl
lahf
pop
push
imul
pushf
pop
mov
mov
loopne
fdivrs
sbb
rcl
adc
or
test
or
mov
xor
and
mov
mov
xchg
adc
sbb
std
xorb
mov
sbb
enter
push
outsb
cli
sbb
adc
push
xor
cmpsb
jmp
cmp
cmp
adc
lret
test
mov
ss
test
sub
bound
mov
int3
xor
xorl
sub
bound
adc
es
jne
test
out
pop
xchg
es
pop
push
inc
adc
xor
push
ret
inc
in
or
cld
dec
push
jbe
xchg
mov
popf
jns
testb
jecxz
inc
hlt
pop
cmp
lret
movb
pop
dec
mov
int
adc
push
orb
sub
cld
mov
push
mov
pcmpgtb
mov
inc
inc
pop
push
enter
lods
pop
test
in
arpl
cmp
jmp
iret
aad
inc
ja
lea
notb
dec
lret
fldcw
mov
push
add
pop
frstor
jl
int3
push
add
pop
sub
cwtl
inc
mov
lds
aaa
testl
test
adc
clc
aaa
push
imul
add
pop
aad
dec
test
xlat
out
fadds
fisubrs
xlat
lock
ds
test
cmp
dec
push
ja
loopne
mov
xchg
lcall
shl
lret
lods
jb
inc
push
pop
mov
popa
mov
sub
nop
lods
jg
xor
push
jo
scas
xchg
decl
add
inc
or
adc
push
cmp
dec
sbb
push
xchg
ffreep
or
int3
xchg
cmp
ret
jnp
mov
test
test
orb
rcrl
fdivrl
in
xchg
ror
dec
push
rcll
in
jae
jbe
mov
mov
jb
inc
rolb
faddl
sub
jb
dec
xchg
es
cli
aaa
sub
jl
and
pop
loop
add
insl
mov
sbb
push
or
ds
xchg
fsubrs
sbbl
rcrb
or
dec
lret
mov
mov
jne
ss
add
outsl
pop
or
and
mov
ljmp
push
cltd
data16
testl
jmp
sti
imul
jbe
es
shr
test
adc
adc
dec
sbb
xor
outsl
fnsave
mov
push
pop
push
push
or
loop
push
add
pop
xchg
mov
xchg
or
jns
cmp
mov
sti
mov
loopne
aaa
les
push
aad
pop
inc
mov
addr16
xor
aad
sbb
loop
mov
movsl
jne
cmp
inc
std
push
aam
sub
inc
and
outsb
adc
sbb
daa
lock
dec
kmovw
pop
xchg
sti
xchg
fs
data16
mov
arpl
jb
add
push
movsl
and
in
pusha
sbb
test
bound
jb,pn
lcall
xchg
cwtl
out
xchg
or
inc
push
test
gs
out
packssdw
aad
cltd
inc
cltd
mov
push
mov
repnz
push
popf
call
mov
callw
cmc
push
addr16
sbb
inc
testb
insl
jnp
mov
xchg
and
xlat
das
cli
sub
enter
dec
mov
dec
xchg
lahf
push
enter
pushf
jns
ret
out
jae
and
jg
ljmp
in
lret
outsl
shrl
fidivrs
add
push
fcmovnu
jg
insb
or
pop
pop
push
cli
cld
ret
and
sub
pop
sbb
mov
fstps
push
and
inc
adc
inc
or
inc
adc
mov
aam
jle
nop
xchg
xor
mov
sbb
ret
ljmp
inc
mov
pop
cmp
adc
loop
scas
push
cmp
lret
mov
jge
pop
fsub
inc
dec
cmpsl
mov
loope
jge
mov
fistpl
sub
outsl
shl
mov
inc
test
fcoml
pop
out
int
xchg
push
les
mov
or
pop
jge
jne
adc
cmpsl
in
mov
lahf
into
mov
clc
push
mov
inc
jns
ds
inc
cmp
std
in
fisubrs
subb
cmp
and
mov
jae
mov
call
sub
in
add
push
test
mov
pushf
cmpsb
push
mov
loopne
cmpsb
addl
and
cli
sub
ja
js
stos
xor
ljmp
and
xor
mov
stos
pop
adc
hlt
and
pop
cmpsb
incl
lods
mov
in
push
sbb
adc
cltd
and
ljmp
fwait
mov
or
test
inc
jl
shrb
xor
jl
stos
lods
sub
popf
adc
mov
mov
lret
and
adc
scas
mov
inc
sub
enter
xor
loopne
xchg
xchg
leave
xchg
mov
xchg
add
mov
xchg
outsb
cltd
gs
or
xlat
orb
push
rcrb
std
mov
or
imul
jg
cli
jl
rorl
push
or
sbb
adc
push
cltd
cs
push
mov
ror
xor
xor
stos
out
pop
daa
call
jb
dec
sbb
fwait
mov
or
aad
adc
icebp
int3
adc
mov
and
ror
jle
rolb
clc
push
jl
jne
cwtl
mov
dec
xchg
ss
mov
call
jecxz
loope
loope
js
mov
aad
inc
stos
xor
dec
in
out
and
dec
gs
xchg
cmp
ficoml
and
in
mov
iret
and
mov
test
repnz
imul
mov
cmp
push
mov
cmp
scas
cmpsl
sbb
dec
shlb
jl
push
adc
mov
popf
inc
and
imul
xchg
xor
fs
xor
lods
in
or
popf
xchg
inc
push
add
and
xor
or
insb
pop
gs
in
mov
scas
fisubrl
push
push
pop
fcoms
mov
jg
ljmp
sbb
xchg
mul
movsb
push
nop
cmp
jno
mov
movsb
pusha
or
iret
sbb
dec
out
mov
lret
mov
xchg
adc
sub
jl
movsl
sbb
jge
xchg
divl
jns
or
popa
xchg
dec
gs
bound
aaa
jbe
or
cltd
js
mov
lods
mov
mov
xchg
cltd
inc
mov
pop
pop
inc
addr16
mov
scas
outsb
push
in
push
sarl
pop
fbstp
lods
scas
push
xor
push
lcall
mov
adc
pop
inc
loopne
fwait
rorl
orl
cmc
rorl
cmpsl
insb
lcall
popf
mov
dec
lret
sbb
sbb
lea
lahf
ror
jg
push
push
jle
dec
jo
xchg
mov
add
in
test
stos
leave
cmpl
pop
cmpb
repnz
bound
cmp
repnz
xor
jne
dec
mov
fisttps
punpckldq
cs
push
sbb
xor
test
push
push
pop
fs
aad
lret
jecxz
adc
jae
mov
mov
jns
sbb
adc
aas
and
lock
movsl
mov
sbb
lea
dec
in
xchg
addb
jb
in
cmpb
pop
cmp
outsl
mov
sub
adc
push
pop
fcomp
rcrl
mov
adc
xchg
decb
fwait
sarb
inc
pushf
lock
aad
lret
stos
outsl
cmp
aad
shrl
mov
loope
dec
dec
add
or
test
daa
add
jo
mov
scas
adc
movsb
leave
addb
add
pop
mov
push
pop
sub
addr16
loop
jbe
dec
outsl
scas
cmove
pop
cltd
and
loop
arpl
dec
sbb
pusha
loop
xor
add
into
lock
mov
shll
daa
and
mov
rcll
jecxz
adc
inc
popa
and
in
add
dec
cmp
repnz
sti
jne
jg
mov
jle
mov
add
and
lea
outsb
adc
mov
sarl
scas
loope
dec
or
cmp
cmp
enter
or
or
jp
sub
movsl
xlat
movsb
in
pop
and
loope
js
xchg
clc
jp
mov
enter
inc
dec
fwait
sahf
pushf
push
movsb
mov
iret
pushl
aam
or
xchg
sub
cmc
push
xor
push
das
pop
fbstp
sub
sub
xchg
pop
inc
xorl
popf
mov
xor
icebp
outsb
dec
mov
les
adc
nop
inc
adcb
adc
mov
std
rclb
or
add
out
test
lret
call
xchg
popa
pop
pop
daa
insb
fdivl
out
cmp
or
dec
sub
and
mov
mov
sbb
clc
mov
imulb
or
jne
push
cmp
dec
adc
pop
lds
mov
jle
and
xor
or
insl
sarl
in
pusha
mov
std
loopne
pop
lret
orl
imul
mov
push
in
sbb
add
push
sbb
call
enter
push
adcl
test
jg
pop
iret
and
insl
insl
ret
cmp
push
or
fldt
sahf
imul
push
and
add
divb
mov
jae
addr16
mov
xor
adc
lds
mov
pusha
cltd
les
mov
lahf
fcmove
sub
xor
sub
cmp
addps
nop
mov
xor
sub
fwait
mov
sub
ds
cs
shrb
jbe
pop
mov
and
out
cmpsl
adc
int3
or
adc
mov
sub
mov
mov
xor
arpl
inc
lret
lcall
jbe
lds
jecxz
test
std
mov
dec
in
sbb
push
xchg
imul
cmpsl
push
xor
jns
add
dec
daa
in
push
mov
andb
negl
inc
jbe
xor
pop
clc
test
cmp
pop
fdivl
sub
mov
loopne
out
sbb
clc
cltd
jp
mov
sub
mov
lret
les
jle
imul
fwait
cs
sub
lds
out
cmc
cmc
pop
or
sub
mov
push
cmp
xchg
pop
and
cld
popa
dec
notl
dec
into
dec
sbb
imul
jns
in
push
xchg
mov
mov
or
add
adc
lahf
je
out
push
dec
push
ret
movl
out
and
pop
mov
imul
or
arpl
lods
test
fadds
mov
mov
aad
jae
dec
xchg
sbbl
fcmovbe
enter
rorb
mov
sbb
pop
jnp
fldt
sti
push
dec
push
outsl
jae
rorb
mov
movsb
lods
or
mov
subb
stos
data16
sub
insl
mov
fmull
add
movsb
sub
xchg
pop
movsb
jp
mov
cmp
or
pop
and
hlt
ret
dec
push
lahf
out
arpl
fwait
push
je
jo
or
subl
xlat
jg
sub
rcl
lock
sti
leave
and
sahf
fildll
sub
aas
dec
pop
pushf
leave
fists
daa
cmp
add
aad
mov
shlb
mov
or
push
pop
and
aad
mov
movsb
nop
push
cmp
rclb
enter
cmc
gs
stos
mov
xchg
arpl
push
sbb
jg
test
scas
mov
lock
in
daa
out
cwtl
push
outsl
and
inc
mov
sbb
mov
scas
in
div
lcall
xchg
xor
or
fstps
sbb
and
or
mov
jle
shll
repz
repz
xor
or
xchg
jnp
mov
cli
icebp
mov
les
outsl
xchg
sub
icebp
adc
jg
pop
add
js
mov
test
js
iret
pop
pop
mov
adc
movsl
out
bound
mov
imul
dec
loopne
cltd
fcomps
ss
movsl
cmp
pavgw
test
sbb
add
dec
mov
mov
push
popf
std
scas
adc
daa
rorb
xchg
jge
stos
test
rorl
fwait
dec
cmc
add
ja
loope
add
enter
mov
jb
movsb
xor
into
outsl
inc
loopne
stos
icebp
add
scas
pop
jmp
pop
dec
xchg
les
push
adc
loop
xchg
fsubs
or
stos
and
jbe
push
xor
add
pushf
in
cmpsb
sbb
lret
jg
add
mov
mov
pop
push
call
xchg
lods
inc
mov
mov
push
ss
dec
insl
int3
divb
fwait
xchg
push
outsb
add
jle
outsb
pop
jo
cld
scas
pushf
xchg
fstp
fists
add
bound
lret
lret
fsubs
xchg
xor
dec
push
jns
push
cmp
mov
add
mov
cmp
fs
stc
jns
loop
or
jnp
out
movsl
push
mov
call
cld
das
xchg
xor
mov
and
sbb
pop
divb
lock
fs
repnz
xchg
leave
push
test
inc
mov
bound
cmp
sbb
or
ja
xor
or
or
and
mov
pop
insb
mov
sti
push
adcb
xchg
mov
mov
push
jg
jecxz
das
jmp
mov
add
or
fs
mov
test
mov
jnp
out
xor
xor
xchg
xor
or
mov
mov
xchg
sarl
lock
ret
xchg
xchg
cltd
cmp
mov
xor
rolb
fwait
or
pop
das
xchg
mov
and
sbb
das
repnz
imul
push
cmp
scas
and
into
and
fdivrl
inc
dec
arpl
push
insb
cmpsl
push
ret
cmp
fdivrs
js
push
stos
clc
mov
mov
ret
sbbl
push
sub
adc
rolb
add
sbbl
push
cmp
jbe
mov
arpl
and
shlb
out
mov
mov
add
loope
pop
int
sbb
inc
movsl
fidivrs
inc
jns
lea
aam
push
dec
in
mov
lods
pop
fwait
test
es
xor
xchg
fsubs
adc
mov
pop
cmp
lods
sbb
aaa
lea
lahf
mov
divb
lea
ja
push
sbb
xor
test
sbb
jg
sarb
and
lds
lock
in
push
xor
pop
sbb
sahf
mov
inc
js
xchg
loope
add
ror
movsl
imul
shlb
and
int
jnp
aaa
dec
xchg
test
pop
pop
mov
adc
fisttps
mov
data16
mov
outsl
mov
mov
mov
fdiv
inc
rorb
and
ret
pusha
daa
cmc
and
cmp
fmull
jo
push
fs
int
or
lea
rcrb
sbb
mov
xor
pop
xchg
sti
cmp
stos
cmpsl
mov
insl
lea
aas
push
cmpsb
scas
mov
icebp
dec
pop
jmp
jp
adc
push
fstpt
in
out
cmp
aas
add
mov
jle
sar
and
enter
pop
xchg
inc
mov
dec
loopne
or
xchg
dec
xchg
inc
je
jo
cmc
adc
xor
fadds
icebp
push
jns
inc
outsb
ja
mov
sub
mov
cmpb
fptan
in
idivb
mov
test
lock
in
fnstcw
jl
add
ja
pop
ljmp
or
test
jg
int3
xchg
adc
push
inc
imul
and
fildll
pop
mov
xchg
or
mov
sub
cmc
add
cmc
pop
pushf
jl
scas
jecxz
mov
out
sahf
mov
jecxz
imul
adc
cmc
into
aad
pop
jne
inc
mov
enter
clc
or
in
cmpsb
push
mov
repz
xchg
rorl
pop
inc
mov
or
test
push
mov
dec
sbb
adc
cmpsb
imul
test
inc
sbb
fcmovnb
test
mov
lret
and
bound
aas
and
mov
xchg
pop
gs
int3
js
adc
add
push
and
int3
pop
sbbb
pop
insb
sarl
pcmpeqw
js
xchg
clc
scas
je
pop
adc
mov
mov
sbb
jl
push
mov
out
jmp
adc
push
adc
lret
das
inc
popa
mov
gs
push
repz
repz
mov
or
xchg
lret
jl
mov
sub
mov
mov
arpl
xchg
roll
lret
dec
fucomip
push
or
mov
faddl
imul
pop
jg
pusha
push
sub
clc
sbb
mov
lcall
fidivs
call
ficompl
jl
icebp
add
sub
push
add
sqrtps
daa
xor
std
stc
add
add
adc
inc
das
xor
imul
fbld
or
or
pop
fimuls
out
push
mov
je
and
adc
jl
xor
push
xchg
ja
ret
sub
fcmovnbe
in
xchg
into
jns
jns
clc
mov
test
popf
mov
movsl
add
std
cmp
shll
jl
xchg
js
lret
xlat
pop
test
sbb
outsl
jne
je
lret
call
bound
jne
pop
nop
lods
aad
inc
sbb
sbb
xadd
outsl
and
jp
sub
dec
arpl
sbb
test
shrl
or
xor
adc
sbb
test
test
mov
clc
stos
daa
imul
xchg
test
sub
fcomp
xor
dec
xchg
stos
mov
rol
jecxz
int
cmp
call
push
in
xchg
inc
fwait
mov
sbb
outsl
mov
cmpsl
dec
xor
ss
aas
loopne
test
sbb
test
xorb
neg
add
jbe
test
jmp
cmpl
add
out
add
mov
repz
xchg
mov
jno
fwait
or
cmp
daa
fstpl
shll
fldenv
dec
mov
lods
aaa
dec
pop
mov
jp
loop
mov
mov
adc
ret
add
pop
xchg
jne
sub
rcrb
movb
imul
mov
fisubrl
rcr
shrl
ss
and
jns
push
scas
js
jmp
mov
adc
push
dec
jb
stos
mov
sbb
xlat
jns
xchg
rcr
xor
rclb
addr16
in
sub
fwait
inc
or
out
cwtl
int
es
pop
mov
out
adc
or
xchg
pop
rcll
push
jns
push
shl
sbb
sbb
add
mov
negl
pop
stos
mov
fildl
leave
mov
repnz
cmc
sbb
mov
insb
mov
pop
dec
aaa
stos
nop
and
stos
dec
bound
pop
xlat
pop
pushl
add
mov
mov
cmc
outsl
mov
push
xor
pop
or
vmovmskps
cmp
xchg
sti
push
cmp
ljmp
pop
lods
push
lds
xchg
ss
je
sbb
rolb
pop
push
cmp
fildll
sbb
cmc
pop
dec
mov
fucom
mov
add
shll
sub
fimull
sbb
loop
inc
inc
out
push
les
es
or
mov
fildl
add
ss
cmp
sub
popa
push
enter
lcall
mov
pop
mov
cmc
jg
xor
shll
xchg
call
adc
cmp
mov
push
pop
inc
lahf
pop
sahf
repnz
outsb
mov
xor
cmpsb
or
sbb
jmp
jl
mov
pop
push
arpl
adc
mov
push
sbb
mov
fs
cwtl
jno
test
lock
xor
jae
jbe
sti
xorl
lea
lods
sub
xor
sbb
dec
cmp
sub
cmc
jnp
out
jmp
and
push
push
cmpsb
pop
or
xchg
adc
sbb
or
loope
jmp
insl
test
adc
sbb
addl
mov
cmp
inc
hlt
insl
icebp
rcrl
gs
adc
stos
mov
pop
sbbl
mov
pop
subl
adc
in
fincstp
dec
aad
ljmp
mov
shl
or
xchg
jno
pop
fwait
not
cwtl
loop
out
pop
popa
aaa
lret
ret
addr16
in
movzwl
mov
xor
jmp
daa
cmpsb
push
push
lea
add
arpl
jns
cmp
xorl
pop
adc
hlt
lret
xchg
fwait
push
andl
push
pusha
xchg
std
jmp
jmp
popa
clc
mov
inc
cmp
int3
sbb
rorb
js
in
gs
test
aaa
add
mov
arpl
int
arpl
std
stc
inc
mov
and
jle
lcall
push
mov
addb
inc
aas
xchg
push
xor
jg
or
mov
outsl
sbb
xchg
stos
mov
push
inc
inc
xchg
jl
daa
inc
pop
nop
dec
mov
inc
test
aad
mov
cmc
lock
popa
or
push
mov
cld
inc
cli
shlb
mov
scas
pop
fidivrl
push
das
sarl
dec
arpl
xor
loopne
mov
mov
subl
lahf
and
mov
ret
cmp
lock
mov
loopne
push
rcrb
and
mov
rcl
aam
int
bound
invd
daa
fistpll
lea
jmp
lods
ret
xor
jbe
xor
mov
stos
mov
int
fildll
adc
add
sahf
add
mov
cli
pop
cmp
imul
cmpsb
mov
leave
xor
cmp
lahf
stos
clc
leave
aad
shll
lcall
sbb
fisubl
addr16
xchg
mov
push
xor
aas
ljmp
imul
cmp
and
push
mov
jmp
stc
scas
mov
faddl
dec
xchg
sbb
push
test
imul
int
push
movsl
fwait
mov
mov
ljmp
mov
inc
dec
rclb
repnz
rcll
sarb
xor
push
rclb
mov
and
jge
push
xlat
jge
sarb
dec
test
cmp
jg
add
adc
mov
je
popa
xor
pop
out
outsl
jbe
pop
dec
sahf
sti
imul
mov
popa
sbb
ret
iret
pusha
hlt
xchg
in
add
pop
out
mov
adc
or
aam
call
dec
lods
gs
or
sub
cmc
push
addr16
in
pop
xchg
mov
push
inc
add
jmp
mov
mov
gs
push
xchg
add
sbb
lahf
adc
insl
jbe
aaa
push
leave
and
out
or
mov
jp
mov
fdivrs
lods
xor
mov
sbb
js
pop
shr
test
cmp
les
mov
mov
aas
xor
in
lock
pop
mov
ficompl
xchg
popf
mov
sub
mov
inc
insl
pop
push
push
ret
add
jl
cmc
push
div
mov
insb
xlat
jg
adc
xchg
dec
dec
mov
lahf
pop
mov
jecxz
out
jg
inc
sti
in
ret
or
sbb
xor
push
mov
popa
xor
xchg
popf
xchg
xchg
fst
push
mov
insb
arpl
ljmp
xchg
mov
fisttpll
xchg
mov
dec
bound
inc
sbb
jle
popa
push
xor
nop
lods
jo
ret
mov
in
lret
out
loop
mov
inc
arpl
push
aas
scas
mov
hlt
clc
jge
sbb
add
dec
inc
xchg
clc
lret
xchg
mov
roll
leave
scas
fsts
push
dec
cwtl
in
mov
movsl
xchg
popa
jns
arpl
xorb
std
in
mov
ss
jns
pop
out
arpl
push
pop
mov
lock
xchg
add
lret
and
mov
and
subb
leave
and
movsb
mov
dec
dec
in
mov
push
nop
rorb
dec
aad
out
out
jl
nop
lods
xchg
clc
adcl
cmc
scas
jbe
repz
dec
fiaddl
inc
pop
in
or
movsb
jmp
pop
mov
iret
das
and
mov
jecxz
jno
adc
aaa
inc
xchg
ret
jno
add
aad
cli
adc
push
push
push
imul
inc
scas
movsl
or
dec
push
cmpl
jo
iret
sub
jne
mov
or
outsb
cmp
psadbw
cmp
popf
push
cmp
jp
pop
cmp
cmp
xchg
sti
mov
js
ret
xlat
xor
push
out
dec
dec
ja
mov
pop
mov
call
pop
mov
mov
pop
mov
cmpsl
adc
pop
sti
mov
push
clc
out
jo
inc
xchg
xchg
cltd
jecxz
mov
mov
adc
fistps
inc
rcll
ret
dec
or
in
pop
dec
dec
dec
lret
cmp
sti
jae
add
xor
mov
dec
test
inc
pusha
pop
jbe
or
ret
push
decl
test
in
in
popa
mov
sub
lock
push
mov
cmp
stc
mov
pop
ljmp
dec
mov
iret
lcall
inc
pop
pop
dec
xlat
shr
cmc
mov
xchg
pop
inc
nop
xlat
push
pop
int
les
pop
jnp
adc
aad
adc
lahf
adc
cmp
push
push
es
jg
fwait
out
dec
xchg
cltd
add
push
mov
jge
or
dec
dec
ljmp
fwait
mov
mov
mov
in
add
push
ror
push
int3
sub
cltd
test
cmp
mov
or
mov
push
mov
popf
movsb
fmuls
fs
fstpl
jl
imul
subb
scas
xor
rcrl
xchg
lods
or
inc
es
jmp
lea
in
fnstenv
das
aad
cmp
jo
pop
xor
cwtl
dec
cld
mov
adc
pop
xor
test
inc
cli
sbb
adc
repnz
adc
cmpsl
xchg
js
dec
mov
and
out
shll
insl
repnz
pusha
cmp
test
xor
mov
jnp
jmp
scas
mov
rclb
aad
scas
arpl
insb
and
fbstp
mov
xchg
roll
stc
lods
out
test
js
pop
imul
js
arpl
sarb
fdivs
gs
dec
fbld
in
cmc
sti
xor
jg
xor
jno
mov
cmp
add
jecxz
in
lahf
stos
mov
adc
je
mov
sbb
push
leave
fiadds
push
outsl
clc
inc
adc
ljmp
repnz
or
sub
lahf
dec
lods
in
jnp
js
insb
jmp
outsb
sbb
loope
inc
sub
xchg
stc
notb
jge
sbb
mov
sti
sahf
dec
fwait
adc
lods
xchg
mov
sub
push
lcall
xchg
ret
xchg
insl
or
push
mov
rorb
cmpsb
shlb
pusha
pop
fnstsw
adcl
add
out
test
jl
outsl
or
jp
cmp
test
inc
inc
sub
xchg
cmp
push
cmp
das
dec
pop
std
push
iret
adc
jno
sub
adc
inc
sub
repz
pop
andb
cmp
data16
and
mov
jne
cmp
jecxz
int3
mov
pusha
mov
test
dec
je
push
adc
and
in
fwait
into
or
test
ds
dec
or
outsl
or
stos
aaa
mov
enter
inc
cmp
les
lret
scas
cli
je
xor
jbe
add
adc
out
mov
xchg
clc
insl
sbb
push
lcall
jae
dec
cmpsl
addr16
mov
add
jb
adc
les
sub
lcall
push
lds
mov
xor
push
dec
enter
ret
clc
xor
arpl
xchg
scas
lret
lods
push
add
jbe
pop
mov
pop
and
or
cmp
aad
fisttpl
rclb
sub
dec
xchg
call
aaa
sar
jp
arpl
call
inc
or
es
icebp
adc
push
rolb
iret
mov
inc
fcomi
call
jae
cmpsb
aas
data16
push
movsl
arpl
pop
jbe
fimuls
in
fimuls
insl
or
movsl
call
add
mov
mov
stos
xchg
dec
jle
xor
fstp
jg
push
dec
jp
push
call
push
leave
push
cmp
movsb
or
int
mov
frstor
push
push
jbe
enter
out
js
out
adcb
cmc
sbb
fnstsw
push
mov
mov
sbb
cmp
stc
push
lret
insl
mov
xor
nop
jge
pop
xlat
sbb
xchg
leave
pop
mov
dec
sub
inc
fwait
and
scas
jle
out
stc
imul
inc
shl
arpl
pop
rcll
orb
das
in
mov
fld
sti
fidivrl
lret
fmuls
jns
push
lods
mov
insb
hlt
sub
add
btcl
fbstp
mov
daa
push
testb
aam
jno
inc
shl
les
jo
cmpsl
fistpl
mov
outsb
das
das
std
add
insl
popf
ds
pop
sbb
stc
inc
js
pop
jo
jo
sti
enter
cwtl
div
std
arpl
dec
jbe
xchg
jns
or
std
jnp
sub
add
mov
pop
adc
into
and
adc
mov
adc
jb
ret
and
popf
daa
add
mov
pop
movsb
sbb
add
cmpsb
and
cmp
lock
xor
idivb
push
mov
lds
xchg
pop
push
and
dec
mov
cmpsl
pop
xor
push
add
lret
mov
out
lock
adc
mov
loope
jbe
pop
js
movsb
inc
ljmp
popf
jne
mov
mov
mov
popf
mov
cmp
sbb
es
ret
and
rcrl
push
pushf
cmc
ja
mov
filds
out
and
pop
or
mov
lock
sub
xor
in
jmp
test
jne
ss
stos
or
mov
test
rolb
andl
repz
xchg
jne
call
or
loop
push
cmp
fildll
call
push
mov
scas
stos
add
jne
stos
test
xchg
mov
jmp
push
ljmp
cmp
sub
jg
into
or
xor
mov
inc
sub
in
nop
inc
mov
in
lods
inc
int3
or
repnz
xchg
addr16
rcrl
stc
insl
sbb
pop
or
aas
outsl
mov
mov
into
adc
add
mov
jmp
pop
or
test
or
xlat
sub
sub
ret
add
inc
push
pop
xchg
cwtl
push
aam
xchg
and
repz
in
icebp
xchg
mov
jb
mov
rolb
mov
push
xchg
mov
cmp
mov
xchg
lods
xchg
cmc
mov
xchg
and
or
push
shl
push
xor
cs
mov
jno
fidivl
ljmp
mov
push
leave
xor
xchg
push
dec
xchg
sub
dec
mov
xchg
out
mov
xchg
adc
xlat
cmp
sti
jns
and
mov
adc
jns
push
aad
pop
movsl
dec
mov
and
cwtl
dec
sahf
xchg
js
in
lcall
scas
lret
or
mov
lret
jl
mov
bound
mov
outsb
inc
push
and
xor
shll
mov
xor
mov
push
dec
dec
cmpsl
pop
pop
stos
mov
adc
mov
push
out
mov
xor
jno
xor
mov
lahf
xchg
mul
addl
dec
ja
pop
jmp
jbe
jno
cmc
stos
cwtl
push
in
push
push
test
es
out
jge
lcall
or
ja
xchg
jbe
pop
or
in
daa
mov
mov
xchg
xchg
adc
jp
adc
dec
pop
xchg
nop
jne
in
sahf
mov
and
int
sti
cld
xchg
lahf
aam
fcompl
ret
test
push
std
cmpsl
cltd
mov
add
das
push
data16
sbb
add
shl
or
lods
cmpl
xor
xorb
ss
fcomi
rcll
int
out
jne,pt
orb
frstor
lret
pop
arpl
shlb
movsb
pushf
xor
adc
ja
sub
frstor
push
push
cs
push
stos
cmpsl
adc
or
sbb
mov
test
mov
in
push
add
push
pusha
sbb
shrb
inc
mov
das
data16
ljmp
adc
fdivrl
scas
jl
sub
scas
lahf
and
sub
mov
mov
lods
outsl
or
mov
in
call
cmpl
hlt
lock
push
iret
xchg
out
or
jo
cmp
shrl
mov
add
mov
jle
push
push
mov
and
jno
or
xchg
push
push
pop
xchg
jne
pop
cmp
fists
not
sub
int
test
jmp
repnz
push
mov
adc
mov
pop
add
and
leave
sub
cltd
cmp
pop
mov
sbb
push
sub
cmp
sbb
dec
test
test
mov
jmpw
or
push
adc
or
push
xchg
movsb
sbb
out
add
adc
inc
pop
dec
and
stos
cmp
mov
imul
je
outsl
push
lret
xchg
or
add
adc
lods
adc
aam
addr16
popa
out
sbb
sub
insl
outsb
shrl
dec
or
inc
sub
cltd
inc
in
movsb
fistpll
movsl
pop
adc
sarb
sub
stos
rcrl
popa
cli
sbb
notb
aas
pop
cwtl
sub
jp
cli
push
jl
xchg
loop
loope
dec
adc
dec
inc
push
and
sti
sub
mov
lds
mov
popf
or
ss
outsl
or
jnp
adc
jne
ljmp
mov
jl
fdivrs
aam
ds
pop
dec
and
and
das
jb
loope
aam
xchg
push
out
rcl
pop
test
pop
inc
stos
cmpsl
push
lret
test
jns
fwait
cmpsb
xchg
bnd
jnp
push
loop
adc
out
jbe
and
mov
mov
mov
inc
push
jbe
pop
mov
clc
cmp
pop
leave
or
push
and
arpl
add
mov
in
xchg
test
lret
scas
data16
sub
inc
aam
filds
loop
pop
ror
ss
jo
mov
dec
inc
les
imul
add
stos
pop
xor
loope
fwait
js
scas
nop
xor
sub
jae
push
or
mov
imul
mov
adc
xor
inc
cmpsb
fcoml
out
inc
add
insb
mov
adc
sbb
int3
and
nop
fsubl
jno
fcoms
mov
into
inc
test
cmp
xor
aaa
xor
subl
lds
add
pop
scas
dec
or
adc
mov
shl
and
test
mov
ficoml
call
incl
mov
pop
int3
test
sbb
add
hlt
sub
outsl
lods
pop
outsl
out
pusha
filds
xchg
and
cmp
scas
cli
adc
xchg
mov
popa
add
jae
call
insb
mov
and
leave
cmovno
loope
shlb
sbb
adc
jle
mov
jo
into
lds
mov
roll
xlat
scas
and
xchg
popa
sub
sub
adc
push
sub
mov
cmpsb
mov
sbb
xchg
call
rcl
mov
shrl
adc
cwtl
lret
push
xor
sbb
push
loop
xchg
add
sub
sbb
scas
pusha
dec
into
mov
or
in
mov
fimull
or
addps
pop
xor
repnz
or
pop
jmp
push
nop
push
add
je
mov
fisubrs
dec
inc
fwait
sbbl
fistps
cli
and
mov
mov
jecxz
out
cmp
stc
dec
and
fdivl
and
cwtl
dec
test
dec
add
andb
xchg
dec
test
scas
pop
addl
loopne
xlat
pand
xchg
inc
sbb
repz
jbe
jecxz
cmp
inc
icebp
das
sub
test
je
and
add
loopne
xor
mov
sub
and
jg
xchg
or
ficoml
mov
inc
andb
jno
sub
popf
sbbl
fs
mov
ss
sub
fimuls
popf
addl
add
xor
or
fbld
xchg
jmp
push
sbb
cmp
cmp
xlat
shr
jg
xor
sbb
or
mov
fwait
pop
jns
imul
pop
out
clc
or
or
xchg
mov
int
mov
enter
mov
sahf
testb
sbb
adc
lret
hlt
mov
mov
inc
inc
or
shrl
sti
or
cld
repnz
pop
lock
or
fnstenv
lret
mov
push
ret
sti
jbe,pn
out
jge
dec
dec
aas
push
jbe
pushf
scas
xor
lods
mov
or
fidivrl
jne
pop
xor
xchg
cmp
lcall
mov
out
jnp
mov
in
in
rcl
pop
aad
pop
add
mov
or
jge
inc
jmp
fucomi
or
adc
test
add
lea
mov
fs
mov
data16
jbe
imul
aam
sbb
inc
dec
xchg
xchg
ffreep
mov
addb
into
push
pusha
pop
xchg
or
mov
lock
sbb
dec
lcall
lods
sahf
mov
sbb
add
add
push
incl
lret
std
mov
ret
jle
sub
push
push
popf
push
pop
addr16
jg
out
push
nop
mov
int
nop
ja
into
xor
inc
test
and
add
jl
push
or
popa
jge
dec
sti
imulb
in
push
dec
outsl
les
fldt
push
push
xor
sarb
stc
mov
xor
xor
and
sbbb
dec
xchg
mov
in
js
ljmp
add
inc
push
ljmp
test
pop
adc
rep
xchg
adc
xor
int
fnsave
shrl
sub
sub
loop
mov
fs
push
lods
mov
pop
imul
push
jo
outsl
and
jle
mov
lcall
out
lods
gs
test
mov
fnstenv
inc
ds
movb
inc
push
xlat
std
mov
data16
dec
mov
push
cmpsl
inc
jo
test
push
jp
jmp
mov
mov
fucomp
mov
sarb
mov
mov
divb
sbbb
enter
lods
shlb
pop
mov
int
fs
xchg
rol
mov
jg
mov
fimuls
fwait
xchg
fcmovnu
js
xchg
mov
dec
and
jbe
fwait
xchg
xchg
sbb
insb
adc
inc
sbb
and
les
cmc
popa
lods
xor
inc
inc
ret
std
gs
fsubs
push
rolb
aam
lea
add
loopne
pushl
ret
sbb
push
jecxz
sbb
mov
mov
cltd
int
cli
imul
sbb
jno
or
cmp
pop
or
test
pop
iret
xchg
xor
mov
repz
mov
stc
push
lahf
scas
pop
jmp
test
mov
mov
jbe
iret
stos
ret
inc
jnp
cmpsl
mov
ret
xor
jle
out
cld
pop
or
or
test
and
mov
mov
popf
mov
xchg
mov
jl
push
mov
sete
jno
fisubl
rclb
iret
adc
cs
stc
mov
pop
rol
test
aam
cmp
add
mov
in
mov
pusha
sbb
sub
push
adc
lret
js
inc
or
ss
test
sub
sahf
rcrl
or
aam
loopne
test
xchg
fisubl
paddb
js
sub
stc
cltd
sahf
dec
mov
in
adc
jl
hlt
xchg
and
test
jl
in
rorl
xor
mov
jl
jbe
sbb
xor
mov
push
dec
les
int
rol
arpl
outsl
lods
rcrl
in
pop
jbe
fstpl
adcl
push
mov
outsl
jo
pop
mov
in
inc
pop
dec
sub
sub
push
aas
and
jno
or
nop
iret
or
jnp
mov
pop
and
adc
icebp
mov
pop
fiaddl
xchg
test
call
xor
push
call
pop
in
fwait
jp
aaa
mov
and
adc
jae
aad
jns
mov
shl
sbb
in
xor
pushf
or
jae
imul
mov
call
mov
push
add
push
out
scas
mov
sub
mov
repz
sub
push
loope
mov
push
idivb
sub
fistl
mov
dec
dec
jnp
pop
xchg
adc
fbstp
call
jmp
adc
lock
rcrl
test
mov
insl
cmp
aaa
sahf
mov
data16
ret
xchg
scas
push
fiadds
push
int
movsb
loop
out
jmp
push
inc
dec
int3
das
dec
pop
pop
out
mov
dec
or
jle
addl
mov
subb
push
jg
es
fcomi
mov
inc
sarb
sub
jo
jbe
dec
push
lret
fimull
mov
push
push
pop
jecxz
mov
mov
dec
arpl
testb
dec
cmp
cwtl
cltd
or
popf
mov
popf
mov
push
jbe
jge
fstpt
sub
insl
inc
push
jne
push
add
dec
mov
or
or
fdiv
pop
push
out
mov
aad
mov
fisubrs
cmp
js
cltd
sbb
adc
daa
add
cmp
push
imul
in
jnp
xchg
mov
out
xor
pop
andb
rcll
pop
add
int3
les
outsl
fmulp
pop
aad
mov
cmp
cltd
xchg
or
add
iret
xor
jmp
mov
jmp
xchg
jae
jo
nop
in
cmp
jmp
xlat
xchg
adc
sbb
sub
sub
and
sarb
jge
addl
or
mov
add
sti
arpl
mov
sub
std
jmp
leave
into
cmp
lds
shl
pop
loope
cmpsb
gs
mov
sbb
cwtl
fcmovnu
sbb
sub
mov
sbb
lock
fbstp
daa
dec
xor
mov
inc
pop
cmpsb
nop
mov
mov
addr16
add
xchg
mov
scas
sub
xchg
bound
cmp
cld
outsb
adc
mov
cmp
mov
mov
pop
jns
inc
out
call
xor
push
jns
inc
dec
add
mov
mov
aad
xchg
jmp
mov
mov
cmp
lods
rorl
sub
fwait
bound
sar
fucomi
lea
and
sbbb
mov
shll
bound
push
clc
lods
es
std
lcall
inc
jnp
stos
adc
call
xor
or
rolb
clc
lret
push
test
adc
mov
fnstenv
scas
sbb
mov
mov
insb
stc
pop
and
cli
movsl
mov
test
pop
aaa
xor
mov
add
shlb
cmp
fwait
cmp
ja
out
lcall
mov
pop
sbb
les
sbb
xor
in
pop
int3
push
shrb
clc
fwait
pop
aad
ret
inc
cmpsb
xchg
add
jle
enter
out
cmp
inc
iret
aas
inc
pop
sub
push
cmp
out
rcrl
cli
xor
dec
xor
daa
push
ds
jb
fmull
hlt
fiaddl
popf
push
xchg
shll
xor
cmp
clc
cltd
lds
dec
loopne
mov
cs
mov
push
mov
mov
sub
ret
dec
and
andb
test
lcall
je
sbb
mov
clc
popf
push
xchg
mov
sub
mov
ds
xor
push
mov
mov
pop
pop
mov
shrl
leave
shll
rclb
push
pop
mov
pop
bound
lcall
js
aas
idiv
movsb
scas
dec
sbb
xor
insb
aaa
mov
repz
lcall
mov
jns
insl
sub
add
add
aad
inc
push
pop
and
push
pop
dec
add
aaa
fsubr
testb
cmp
out
js
lcall
pushf
stc
dec
xchg
pop
test
mov
xor
dec
sub
insl
repnz
in
mov
orl
mov
mov
push
xchg
xchg
mov
addr16
mov
fbstp
sbb
dec
dec
push
mov
jne
lea
xor
push
scas
cmc
inc
cmp
ljmp
lret
add
add
out
mov
js
push
lret
jb
hlt
adc
adc
test
push
xorb
sbb
pop
and
or
aas
jnp
mov
mov
inc
in
cmp
into
out
gs
xchg
out
or
lahf
lcall
xchg
cmpsl
sbb
cli
loop
jo
movsb
xor
xchg
orb
add
mov
mov
fwait
and
jecxz
test
pop
fstpt
lock
dec
sbbb
jae
mov
and
ljmp
or
imul
loop
sub
cs
xchg
or
pop
leave
les
mov
mov
inc
inc
test
scas
add
pop
lds
mov
into
nop
jp
inc
sub
fs
out
sub
pop
lret
pop
dec
pusha
xchg
and
xor
sbb
mov
xor
inc
jmp
inc
adc
dec
repz
les
mov
mov
out
hlt
jecxz
sahf
repz
decb
cmpsl
fisttpl
popf
jne
pop
push
repnz
loope
ret
push
xchg
mov
test
pop
insb
dec
fcomps
std
test
sbb
cmp
mov
xchg
ficomps
xlat
cmpsl
in
sbbl
fadd
test
das
pop
pop
jo
js
dec
out
ret
or
mov
out
mov
xor
cmpsb
scas
repnz
das
out
push
push
icebp
insl
sbb
sub
pushf
jecxz
stos
std
out
mov
mov
popa
mov
aam
and
adc
dec
aaa
jns
dec
xchg
and
jg
in
sbb
dec
dec
push
fidivrs
shr
loope
sahf
dec
nop
ret
int
pop
jns
mov
jns
sbb
mov
lcall
pusha
sbb
add
scas
rclb
pop
aad
lds
gs
les
insl
leave
cmp
dec
rcl
mov
addr16
mov
mov
mov
jp
std
or
iret
jo
xchg
add
cmc
aas
shll
add
mov
cli
dec
fisubs
pop
es
sahf
dec
enter
ds
pop
insb
pop
or
test
pop
out
xchg
inc
jl
cs
ja
sbb
cli
movsb
and
jge
orb
imul
push
ljmp
dec
adc
inc
pop
mov
cld
inc
fildl
push
inc
in
adc
cwtl
and
dec
nop
inc
jle
rcll
lret
test
out
and
adc
loope
add
xchg
pop
gs
jb
dec
aaa
shll
fmuls
insl
jo
cmp
adc
lods
mov
lea
lock
cmp
ja
out
and
cltd
subl
push
jmp
jne
ss
jl
push
icebp
mov
sbb
les
xchg
mov
jbe
mov
dec
andl
daa
pop
mov
push
add
or
nop
fidivrs
jns
nop
push
xchg
movsb
lcall
aaa
mov
jne
adc
pusha
insl
test
cld
das
and
mov
pop
aam
enter
out
inc
jg
adc
fmulp
pop
std
dec
mov
inc
pop
fdivs
scas
aad
cmc
jns
imul
subl
add
scas
sbb
and
pop
xchg
movsb
and
in
and
mov
cmp
aaa
movsb
outsb
adcb
adc
pop
add
notb
or
lcall
pop
xor
mov
mov
xchg
cmpsb
fsubl
fcomp
out
ror
cmp
or
aas
cltd
push
adc
loope
cmp
pop
push
iret
push
enter
fdivr
add
mov
mov
lods
xor
pop
cld
push
pop
sub
pop
sarl
icebp
dec
jmp
mov
stos
xlat
adc
mov
jae
cmp
xchg
andl
add
arpl
pop
adc
pmaxsw
pop
xchg
dec
xchg
int3
popf
pop
rcrb
lret
test
sub
mov
into
fstpl
jno
je
gs
jp
jb
or
adc
xchg
adc
dec
mov
fdivs
cmp
jnp
mov
test
push
lea
outsb
movsb
cmp
mov
scas
or
sbbl
inc
shl
fimull
pop
mov
pop
xor
jmp
cli
xor
mov
imul
iret
mov
scas
mov
mov
or
pop
xchg
clc
pusha
roll
xor
jbe
inc
fs
jmp
jno
in
mov
cmp
adc
xor
inc
lcall
add
test
lret
lods
pop
sbb
test
scas
xor
test
push
imul
inc
in
test
pop
sbb
mov
mov
rep
push
icebp
xchg
stos
mul
pushf
cmp
xor
iret
xchg
leave
add
sub
jp
pop
jae
jecxz
add
testb
xor
mov
fildl
sub
popa
cli
fisubrs
imul
and
sub
call
sub
rolb
cmpsb
addr16
mov
gs
mov
mov
loope
rorb
mov
enter
pusha
sahf
push
outsb
push
lret
and
pop
cmpsl
adc
das
gs
mov
aas
mov
in
bndldx
lret
and
inc
mov
jnp
test
lds
add
sti
jo
jbe
fidivrs
or
call
or
mov
xchg
imul
pop
stos
cmp
inc
pop
test
mov
shl
add
or
adc
sti
xlat
sbb
push
cmp
sub
call
or
dec
mov
aad
insl
idivl
les
test
sub
pop
adc
pop
test
das
outsb
xor
mov
xchg
das
roll
popf
add
jne
cwtl
jge
jecxz
leave
hlt
inc
pop
lret
je
or
mov
sbb
lods
bnd
push
jg
lcall
dec
stos
repz
mov
jp
rcrl
and
mov
fwait
mov
dec
insl
jb
xchg
jo
mov
rorb
ja
testb
adc
inc
fsubp
mov
jbe
pop
pop
leave
outsb
cmp
mov
fistps
jp
subl
cmc
mov
mov
add
orl
lock
mov
je
sub
pop
shlb
mov
test
dec
lock
das
pop
xchg
rcl
push
stos
dec
js
add
push
scas
push
jmp
imul
adc
inc
and
or
decb
fcmovu
push
jmp
xlat
jmp
xor
inc
pushf
lahf
incl
int3
cli
cmpsb
inc
push
scas
xor
pop
jl
sub
push
dec
out
push
out
sarl
adc
jno
sub
pop
xchg
int3
cltd
in
xor
cmpsl
sub
das
lret
sub
jle
xchg
leave
sbb
in
inc
add
jp
dec
xor
std
add
les
mov
mov
mov
orl
mov
enter
mov
in
leave
fwait
mov
testl
xchg
push
inc
call
sarl
inc
fmuls
adc
in
cmp
cmp
repnz
in
push
lret
mov
jp
push
fmul
cmpsb
out
lds
inc
mov
mov
inc
sbb
ret
jecxz
xor
jns
fbld
sub
sahf
inc
adc
aaa
ljmp
shl
test
cmpsl
loope
test
shll
insb
decb
fdivrl
push
lea
jl
pop
pop
push
cmp
out
pop
pop
inc
sahf
in
test
shr
loopne
xor
aaa
xchg
ljmp
push
and
stos
xorl
cmp
ljmp
xchg
mov
testl
dec
and
adc
push
sbb
xor
push
rcrl
pop
out
shl
fs
fs
inc
std
int
scas
sahf
mov
xchg
sub
lock
pop
stos
test
add
push
xchg
invd
cmc
adcb
jmp
stos
stc
adc
shll
test
and
mov
or
pop
rorb
popf
sbb
pop
push
lret
xor
aad
mov
mov
mov
push
sub
and
inc
movswl
xchg
mov
test
pop
shll
sahf
mov
xchg
mov
inc
xor
xchg
jbe
notl
jnp
icebp
fistpl
in
stc
pop
xchg
out
cmp
es
push
pop
cmp
adc
add
movsb
in
clc
movsb
lods
in
xchg
fiadds
hlt
fcompl
jp
icebp
mov
ret
test
jmp
or
lock
movsb
add
push
stos
mov
pop
sbb
int3
ret
imul
sub
jl
in
in
mov
insb
aad
lock
xchg
inc
mov
jmp
fisttpll
mov
xchg
push
jecxz
dec
in
subl
ja
movsb
mov
and
addb
out
dec
flds
mov
notb
add
mov
and
jae
add
sub
inc
sbb
sub
lock
negl
cmp
push
mov
bound
lods
adc
and
mov
mov
inc
sub
arpl
add
jp
adc
dec
adc
outsb
push
stos
adc
add
push
and
daa
pop
shr
aas
push
shrb
aaa
into
mov
pop
movsl
fcoms
dec
and
shll
cld
mov
push
mov
xor
orb
ficomps
jmp
notl
popa
bound
push
scas
test
repz
jge
aad
lcall
mov
loop
add
ficoml
jo
inc
adc
nop
sub
adc
rolb
dec
xchg
push
xchg
enter
push
jge
clc
testl
stos
lds
mov
cmp
daa
mov
and
dec
push
jmp
fcmovnu
push
mov
jge
sti
pop
insl
and
push
mov
test
sbb
pop
aam
pop
addl
and
daa
nop
out
lods
lahf
push
outsl
rorb
pushf
inc
push
sub
pop
jae
sub
mov
sbb
neg
pop
into
sub
jp
loope
ja
xor
sbb
push
sub
add
inc
sbb
cmp
mov
adc
inc
fs
or
scas
cmpsl
mov
jae
ficoms
in
stc
shll
xor
lahf
jecxz
int
sub
add
mov
pushf
push
xor
jge
and
cmp
sahf
shlb
rclb
pop
mov
dec
dec
shl
scas
imulb
add
push
icebp
inc
inc
dec
rorb
pop
orb
sbb
fneni(8087
jle
and
jp
lock
ficoml
jg
mov
repnz
popa
sbb
push
sub
pop
mov
fldl
enter
fstps
test
sub
cmp
cli
ret
call
push
or
mov
repz
push
adc
and
mov
jl
push
adc
das
test
push
insb
jmp
les
ds
lods
or
movsl
jl
pushf
es
dec
add
sbb
insb
pop
jb
pop
ljmp
outsl
push
lcall
jmp
dec
inc
and
dec
ficoms
push
insl
jmp
jb
jne
scas
sub
cmp
adc
inc
es
out
lea
push
mov
sbb
mov
push
jns
push
fidivl
ljmp
xchg
add
xchg
and
mov
cmp
and
hlt
movsl
push
fildl
adc
pop
scas
mov
jae
inc
pop
ret
ss
test
dec
out
push
mov
andb
sbb
addr16
fsubrs
rol
pop
mov
js,pt
mov
sub
sti
dec
push
out
mov
ds
add
jb
stos
push
int
push
stos
shll
test
lret
stc
out
cmp
xchg
cli
pop
mov
arpl
cmc
or
add
in
add
jle
sbb
add
xor
inc
add
shlb
push
cmp
iret
loope
cmpb
sbb
mov
test
leave
arpl
dec
js
mov
sbb
mov
add
shll
std
fucomp
test
ljmp
sbb
in
mov
loope
ja
sub
or
inc
xor
jl
adc
mov
or
cmpsl
push
inc
jo
jno
pop
adc
adc
enter
lret
or
and
sbb
mov
pop
negb
xor
neg
push
xacquire
outsb
fs
sub
adc
jno
cmc
vprotb
or
sbb
iret
push
xchg
pop
mov
cmpsl
sub
or
add
aas
adc
pop
mov
push
add
popf
xchg
push
mov
sub
rcrl
pop
scas
xor
inc
jno
pop
mov
cmp
hlt
sbb
pop
fucomi
test
out
push
dec
push
add
std
mov
mov
or
lahf
out
xchg
bndstx
push
popa
insl
adc
outsl
fistl
dec
fstpt
movsb
add
xchg
mov
jg
ja
arpl
stos
sbb
insl
lret
hlt
sub
lds
or
leave
xor
push
xlat
xor
jne
sbb
notl
sub
ret
xor
add
leave
insb
mov
and
mov
adc
fbstp
mull
loop
dec
testl
loopne
cli
adc
rorl
xchg
adcb
sub
push
lds
and
mov
mov
jno
sub
and
fnstenv
mov
mov
xchg
mov
loope
pop
mov
jns
and
and
inc
push
sub
adc
pop
enter
dec
jno
sub
rcll
mov
sub
dec
mov
or
out
ficompl
shr
pop
dec
mov
mov
mov
loopne
push
push
cwtl
or
lret
pop
mov
lcall
mov
xchg
or
mov
cmpsb
push
pusha
stos
mov
dec
jae
dec
xchg
into
inc
jecxz
mov
addr16
cltd
in
shll
dec
pop
xor
jg
and
push
xchg
push
pop
dec
jne
repnz
add
push
rcll
mov
mov
or
je
and
mov
jo
lret
mov
int
in
pop
inc
aas
jg
cmp
imul
mov
lret
clc
and
mov
pop
sbb
xchg
cltd
dec
adc
shl
scas
sbb
out
es
xchg
in
fcomi
push
bound
sub
scas
dec
and
mov
cwtl
fbstp
nop
xchg
add
jp
mov
pop
movsb
xchg
shlb
repnz
dec
dec
xchg
icebp
shrb
int3
adc
lods
inc
adc
mov
cmp
lods
jnp
xor
out
xchg
mov
xor
aas
mov
inc
jne
nop
mov
in
cs
mov
xor
dec
mov
xor
data16
lcall
scas
push
push
dec
stc
xchg
adc
fisubrs
xor
jle
dec
sahf
xchg
xor
inc
lods
and
aaa
imull
movsb
sub
or
rclb
sti
addl
cmp
arpl
fs
xchg
pop
jne
daa
sbb
xchg
adc
fstl
shrb
es
pop
xor
test
mov
shrl
xchg
sbb
dec
mov
and
lds
outsl
sahf
push
sub
fsubr
sbb
mov
jle
adc
popa
in
orl
sahf
jmp
or
hlt
dec
insb
jo
inc
sahf
or
dec
add
add
or
andl
jge
dec
subl
push
xlat
jno
mov
jno
adcb
xor
jl
jge
jnp
in
or
mov
pushf
incl
jbe
jp
jmp
enter
and
cwtl
push
call
fdivs
jp
xor
xor
dec
sarb
jno
push
sub
fldt
jne
enter
ffreep
sysret
outsb
loope
dec
mov
and
add
mov
xchg
push
in
outsb
out
jmp
sarb
push
or
cmp
sub
mov
aas
or
cmpl
mov
not
in
or
dec
pusha
imul
push
shlb
loope
add
stos
push
popf
lret
and
jbe
outsl
xchg
loope
or
push
in
jns
outsb
test
movb
lret
rcr
jg
sbb
jno
fsubrl
js
mov
in
inc
or
jp
int
dec
push
out
mov
adc
sub
dec
lds
adc
movsb
xchg
vpavgb
mov
stos
jne
lds
stos
arpl
xlat
js
std
mov
push
push
xor
xlat
mov
pop
ret
nop
fnstenv
fsubl
mov
push
adc
scas
es
mov
fs
lds
jecxz
loopne
out
fdivr
mov
adc
cmpsl
pop
xchg
nop
test
pop
mov
out
and
lcall
and
outsl
adc
dec
lret
inc
pop
mov
nop
movsl
inc
mov
push
es
testl
ja
nop
iret
clc
lds
movsb
mov
mov
push
lods
adc
pop
out
ficomps
push
pushf
mov
sub
dec
push
cmc
xor
mov
fldcw
es
xchg
imul
inc
pusha
lret
js
testl
fmull
pop
xor
mov
jl
mov
add
cmpsl
xchg
sub
add
ds
mov
out
int
notl
pop
insb
cmp
das
push
outsl
mov
out
lods
dec
cmp
mov
push
sbb
xchg
mov
stos
lods
movb
aas
mov
icebp
fiadds
cmpb
lret
cltd
std
xchg
insb
adc
and
xor
lret
mov
jnp
inc
or
dec
popf
movsl
ja
ds
mov
lock
adcl
push
and
push
daa
or
pop
test
jns
scas
jecxz
jne
jns
inc
loop
stos
test
int3
and
ss
pusha
fldt
adc
subb
jns
mov
sahf
add
sbb
fs
add
cmpsb
pushf
jnp
dec
push
push
sub
and
scas
cmp
mul
cmpl
aaa
rorl
xchg
push
push
bound
mov
insb
xlat
cmp
rcrl
mov
cmp
sti
mov
pusha
lret
inc
pop
push
mov
cmp
xchg
jbe
cmp
adcb
or
jle
stos
inc
mov
fstpl
icebp
outsl
aad
fidivrs
inc
shl
mov
sub
ret
push
ret
aaa
cmp
repnz
add
cmpsb
loopne
add
notb
push
sub
ffreep
arpl
popa
in
xchg
loop
imulb
jmp
ret
cli
xor
or
lretw
push
in
mull
ljmp
adcl
lcall
stos
or
iret
lahf
popf
adc
out
push
or
enter
mov
leave
jl
xorl
jl
jmp
pop
mov
push
sub
mov
shlb
nop
insb
mov
movsl
aas
mov
pop
push
fs
pop
loop
dec
fldcw
xor
dec
adc
jle
or
dec
xchg
add
pop
dec
ss
shrl
movl
arpl
je
mov
pop
pop
loope
stc
fsubrl
mov
xchg
pop
imul
ja
pop
out
jmp
hlt
xchg
mov
xor
sarl
orb
sbb
cltd
lret
lcall
adc
cmc
xor
xorb
inc
push
cmpsl
sbb
pop
sbb
nop
cmpsl
nop
fiaddl
or
dec
and
cmp
xor
mov
push
movsb
dec
cwtl
xor
ficompl
or
mov
sbb
imulb
cmpsb
jns
xchg
lock
push
int
mov
cmc
movsl
rcrb
push
aaa
scas
mov
ljmp
fsubrs
fsts
in
stc
inc
inc
test
ja
or
out
push
add
fcoms
sar
in
inc
mov
out
push
popf
sbb
jnp
scas
repz
cmp
in
mov
cmpsl
lds
sti
popf
imul
ljmp
push
cmp
jo
xor
and
fmulp
repz
sub
inc
mov
push
xor
cld
out
aas
and
sbb
fidivs
add
xchg
mov
sbb
ss
cmp
pop
pop
lods
pop
in
mov
cmpsb
mov
xchg
dec
xor
std
adc
push
movsb
mov
fwait
xor
pop
jg
dec
cld
addr16
xor
mov
rcrl
loop
rcrl
movsl
mov
cmc
push
sbb
jno
scas
jge
fmuls
popl
add
xchg
mov
mov
fdiv
outsl
icebp
pop
subl
ret
int
cmp
mov
and
out
or
push
ja
out
inc
mov
xchg
or
std
js
lahf
inc
dec
in
mov
mov
push
je
cmp
push
in
or
and
mov
cwtl
sub
xor
xchg
inc
jnp
aas
hlt
xchg
or
push
out
jecxz
leave
xor
jle
jns
cmpsb
sub
lock
and
xchg
mov
adc
jne
stos
leave
push
out
mov
jecxz
push
adc
mov
sub
sbb
inc
cld
add
rolb
inc
xchg
adc
rcr
sbb
cmp
mov
and
mov
sub
mov
in
xchg
inc
stos
xchg
movsb
push
pop
std
jge
push
dec
sti
jl
or
jo
or
adc
mov
ss
cmpsl
jg
andl
and
inc
or
jl
jb
xchg
popf
iret
and
iret
ljmp
mov
stos
out
and
loopne
mov
dec
or
in
arpl
inc
inc
inc
lea
mov
xchg
lret
pop
mov
adc
push
jle
inc
cmpsb
mov
lahf
pop
enter
cmp
stos
ds
imul
sub
lret
mov
and
and
mov
jmp
adc
adc
cli
cmp
jns
mov
fdivrs
push
dec
ret
mov
mov
adc
movsl
jnp
cmp
pop
mov
cmc
loop
mov
push
mov
or
es
cmc
cmp
rcrl
shl
js
jno
xor
lock
mov
sbb
xor
adc
outsb
jno
push
or
arpl
sbb
cwtl
xlat
add
stos
and
and
icebp
push
fistps
cmp
and
in
pop
cmp
loopne
adc
add
call
mov
mov
push
cli
jno
xor
pop
dec
test
scas
xor
outsl
jle
aad
out
in
lds
inc
push
pop
rcll
mov
jne
jecxz
test
in
push
hlt
roll
add
dec
mov
leave
cmp
inc
nop
cltd
pop
loopne
xchg
dec
dec
sub
lcall
rolb
mov
aam
pop
cmp
mov
pop
shll
and
mov
shlb
pop
jle,pn
or
imul
ds
ds
sub
insb
stos
ja
cmpl
jbe
repz
inc
pushf
and
lods
mov
or
rcrl
xlat
pop
or
or
mov
xor
cmp
mov
push
sub
imul
je
insb
lret
pop
adc
ret
push
sti
xchg
test
mov
in
cmp
cltd
arpl
out
das
lods
sub
scas
aad
push
out
jecxz
dec
mov
push
imull
jo
xor
jp
and
jnp
in
xchg
iret
push
cmp
sub
divl
or
mov
js
int
scas
mov
nop
adc
dec
pop
popa
clc
push
sub
imul
dec
lcall
push
loopne
lahf
sub
sbb
imul
jl
sahf
mov
mov
sbb
movl
pop
rclb
jb
adc
cmp
sub
mov
lret
push
loop
push
jecxz
or
mov
xor
add
add
test
sub
jg
imul
cld
out
and
mov
cmc
push
mov
mov
out
fistl
pop
sbb
sbbb
mov
xor
decb
dec
inc
sbb
orl
fadd
std
lods
cltd
fwait
sbb
push
cmp
xor
sub
pop
fcomp
daa
sub
cmpsb
das
xorb
cmp
enter
aam
jp
jne
adc
rorl
jns
mov
lods
sub
dec
aam
jmp
out
movsb
and
mov
xchg
test
mov
sub
or
jg
sub
aad
dec
fucompp
dec
fsubrs
xchg
in
mov
xchg
pop
pushf
xchg
lea
adc
and
out
mov
in
addl
mov
fsub
add
mov
addr16
shlb
dec
mov
leave
push
inc
stc
faddl
out
jns
cmovae
adc
push
or
je
stc
xor
inc
mov
ret
mull
popa
loope
inc
sub
xchg
mov
adc
fisttpl
data16
enter
jmp
cli
lcall
sbb
pop
loop
pop
out
dec
mov
clc
cmpsl
int3
fisubrs
outsb
fisttps
outsl
xor
pop
sub
push
stos
sub
pop
lock
popa
in
fnstsw
data16
adc
outsb
add
xor
xchg
sbb
sbb
imul
mov
adc
scas
stos
adc
dec
pop
inc
mov
sbb
pop
adc
mov
pop
cld
mov
lock
jmp
ret
cmp
inc
in
sub
cmc
popa
fimuls
cltd
in
cli
test
and
and
bound
lahf
xchg
push
push
sarb
outsl
mov
lea
fs
lea
sub
pop
mov
stos
pop
cli
insb
mov
js
lret
mov
add
ret
jl
fsubrl
adc
or
cmp
in
push
xchg
xchg
cltd
xchg
sub
sbb
pop
leave
mov
sub
xor
dec
xchg
leave
inc
and
iret
or
sub
ficoms
mov
loopne
or
std
cmp
add
movsl
add
xor
adc
mov
push
out
sub
jb
popa
inc
pop
xor
btc
shlb
movsl
xchg
adc
shlb
shll
movsl
lods
xor
fs
movsl
push
push
mov
imul
inc
jno
mov
add
fidivs
or
cmc
int
push
jns
ja
sahf
jne
pop
lods
push
and
in
and
push
pop
insb
aas
lock
push
mov
push
shl
dec
out
sbb
jae
ret
pop
pushf
imul
push
xor
pop
push
xor
mov
popf
jo
push
mov
loop
sti
mov
mov
ficompl
push
jns
jbe
les
cs
lods
add
lds
sarl
jge
icebp
sbb
adc
arpl
cmp
push
cmp
stc
loope
adc
lret
or
add
das
pop
jge
mov
jno
test
mov
pop
lret
jmp
mov
stos
jl
je
pop
inc
out
ja
adc
addr16
adc
loopne
jmp
in
xor
outsb
icebp
cmp
add
dec
add
aad
arpl
mov
scas
xor
movsb
aaa
aas
ret
add
mov
adc
aas
push
neg
sub
cli
fdiv
lcall
roll
loop
inc
faddl
out
leave
lret
call
xchg
inc
or
jne
jb
mov
into
jbe
push
ret
sub
imul
jmp
push
xchg
loop
or
idivl
and
and
push
insl
scas
fidivs
xchg
dec
or
mov
mov
les
jp
cld
sbbb
mov
sub
addl
sbb
cmp
fisttpll
mov
mov
and
mull
cwtl
xor
or
fstp
pop
pop
pop
inc
and
dec
out
insb
or
cmpl
mull
in
cs
cmc
imul
cs
iret
xchg
clc
inc
and
or
xlat
jmp
into
adc
icebp
loop
pushf
dec
js
lock
jg
in
cli
test
and
xlat
sub
jmp
mov
sar
mov
sahf
int
fmull
dec
mov
pop
dec
jmp
pop
add
inc
push
in
xchg
sbb
pop
sarl
sub
jno
inc
jmp
aad
adc
bswap
adc
mov
push
rcrb
dec
push
fimull
adc
filds
lahf
mov
xchg
mov
aam
xlat
sbb
inc
or
loope
std
mov
iret
gs
imul
cmpsb
pop
rcrb
xor
js
lret
arpl
sbb
push
lea
aaa
pushf
or
pop
mov
or
repz
je
lahf
lock
pop
dec
add
and
in
lock
mov
lcall
les
inc
ljmp
xchg
cmp
outsb
inc
push
ja
int3
negl
xchg
mov
rcl
xchg
cltd
sub
jecxz
lods
fsub
mov
rorb
movsb
xchg
in
cmp
cmpsb
hlt
and
test
pop
mov
out
js
cmp
ret
lods
in
sub
pop
xchg
jmp
out
outsb
out
sub
adc
in
or
dec
mov
sahf
mov
call
sub
xchg
fildl
add
add
arpl
mov
rcrl
std
sbb
fisubl
int
scas
cli
dec
pushf
leave
cs
fcmovu
clc
imul
pop
or
adc
push
sub
jg
icebp
cmp
mov
imull
mov
aam
inc
test
pop
mov
jl
adc
pop
cmp
add
cltd
es
sub
scas
fistl
jo
cmp
inc
dec
subl
gs
xlat
push
and
jnp
push
je
sbb
mov
xchg
push
pop
int3
push
daa
cwtl
testl
and
lcall
fldt
jle
ss
fmulp
jnp
icebp
mov
xor
sub
mov
jl
push
jae
cmp
adc
cmp
or
push
sub
pop
inc
jnp
imul
inc
cmp
mov
lcall
sbb
out
mov
push
push
add
jmp
and
push
stos
stos
outsl
jnp
ret
mov
dec
and
push
cs
xor
lods
mov
mov
push
push
push
or
mov
mov
mov
mov
xor
pop
sub
dec
xor
and
push
negb
test
test
outsb
add
test
movd
mov
jecxz
into
add
or
cmp
or
loop
test
das
add
sahf
push
push
cmp
mov
mov
pop
pop
cmc
mov
push
or
imul
xor
clc
jp
sahf
sti
in
outsb
or
xchg
xlat
mov
cmp
ljmp
popf
int3
xchg
jbe
outsb
filds
je
xorl
or
inc
repnz
orb
mov
inc
lea
orb
dec
fistps
inc
inc
sub
pop
pusha
in
ret
stc
jbe
xor
push
ret
sbb
enter
mov
aaa
cwtl
xchg
xor
pop
sub
mov
jno
fucompp
sbb
xchg
and
fisubs
jno
inc
ljmp
sahf
xor
out
hlt
loop
lret
aam
wrmsr
mov
in
popa
mov
ja
xlat
es
adc
lret
test
cmp
fdivr
mov
ud0
ret
loop,pn
rorl
mov
mov
stos
popaw
int3
pop
jns
inc
add
xlat
aaa
data16
dec
es
push
stos
leave
fdivl
cmp
subl
clc
push
jle
es
inc
jge
mov
adc
nop
push
dec
shrb
cltd
call
pop
lret
clc
ud2
push
stos
sub
cmp
aam
repz
mov
dec
aad
out
fstpl
movsb
push
test
in
adc
test
repz
mov
xchg
sti
or
jp
mov
xor
inc
or
xor
mov
xchg
push
inc
xchg
fwait
lods
iret
scas
je
and
movsb
cmp
cmp
adc
cmpb
pop
insl
jnp
add
imul
sarb
xorl
aas
mov
sub
lea
jecxz
cmp
push
movsl
or
sbb
andl
aam
sbb
nop
psubsb
push
mov
push
mov
mov
jg
imul
call
hlt
xor
rcrl
jge
icebp
pushf
push
dec
mov
jnp
mulb
out
cmp
mov
cmc
loop
cmc
inc
pop
dec
insl
jmp
sbb
inc
divl
mov
xor
dec
pop
xchg
mov
mov
push
movsb
mov
push
push
mov
inc
aas
test
lahf
dec
addl
sub
stos
mov
stos
lods
xor
adc
push
data16
jbe
sub
adc
in
xor
xor
and
jnp
xor
shrl
out
pop
sar
mov
or
les
sbb
pop
loop
out
sub
adc
in
dec
imul
dec
add
mov
lods
jae
add
pop
inc
xor
pop
stos
sub
adc
or
ret
fs
js
sub
mov
or
and
pop
movsb
xor
sti
jbe
adc
add
sbbb
adc
sub
daa
loopne
mov
lcall
enter
add
fwait
xchg
pop
and
add
xchg
lods
jno
std
clc
lods
in
hlt
xchg
dec
push
jb
lea
inc
test
push
loope
cmpsb
lock
imul
dec
mov
pop
and
push
shrl
mov
lods
fcomps
es
or
pushf
adc
adc
sbb
leave
in
insb
mov
sbb
dec
movsb
jae
jb
jg
and
bswap
sub
sub
xor
pop
in
pop
push
in
dec
add
jb
jnp
pop
add
pop
test
add
iret
rcrb
faddp
mov
test
pop
pop
sahf
mov
add
jge
sub
sahf
daa
pop
scas
enter
and
jb
ljmp
or
sbb
stos
daa
lods
adc
xchg
ljmp
insb
dec
fidivrs
jo
out
dec
xor
xchg
lock
loopne
and
xchg
push
jl
loope
xor
pop
dec
cmp
adc
fsubrp
mov
lea
adc
jecxz
push
mov
sahf
sbb
aam
addb
test
clc
call
les
mov
ss
xchg
stc
les
sub
les
popa
sub
jns
lods
mov
push
dec
push
repnz
dec
xor
pop
mov
lds
cmp
in
jmp
cmp
cmp
bound
das
mov
in
mov
mov
xchg
ljmp
jecxz
mov
push
fisttpl
sub
mov
outsl
mov
aad
xor
cmp
sbb
aad
cli
dec
push
xchg
mov
jno
jno
sub
ja
jecxz
wbinvd
adc
push
jg
jnp
sbb
ret
jns
jae
sbb
rcrb
or
push
nop
aad
jo
pop
xchg
jae
adc
push
push
and
push
call
mov
mov
sub
cmp
lcall
cwtl
into
mov
xchg
pop
cmp
scas
pop
inc
movsb
sub
clc
fstp
mov
test
xor
sub
xchg
out
mov
jne
es
or
fldcw
fs
push
push
mov
adc
loope
mov
jmp
fs
pop
incl
aas
and
pop
ficomps
cltd
sbb
mov
out
pop
adc
orb
sbb
xchg
lods
jmp
jns
sbb
aaa
cmc
mov
stc
in
daa
xchg
ficoms
adc
xchg
movsb
mov
inc
push
stc
push
jno
sub
cmc
ss
cmc
fs
dec
pop
cmpsl
mov
xor
hlt
mov
aaa
jmp
pop
into
sub
add
rclb
push
test
jp
iret
jg
mov
jo
jge
into
push
cltd
imul
xchg
cltd
stos
lret
frstor
out
sub
incb
xor
repz
sub
scas
shrl
adc
pop
into
lcall
or
mov
lock
pop
xlat
mov
scas
sbb
psadbw
add
inc
icebp
xor
inc
pop
sbb
mov
fmull
push
dec
mov
jle
dec
movlps
xor
lds
int
or
mov
js
cmc
gs
cmp
add
cmpsb
add
pop
hlt
sbb
leave
add
int
jle
mov
xor
cmp
scas
clc
mov
movsl
lret
pop
jae
inc
dec
cmp
adc
or
ret
xor
movsb
insl
xor
push
ret
push
mov
sbb
mov
push
lods
es
iret
je
ljmp
and
insl
insb
in
call
xor
or
cmp
not
idivb
sub
addb
add
enter
xchg
mov
lahf
xchg
jno
popa
test
fdivrs
cmp
adc
lahf
sub
popa
jno
jl
inc
add
pop
and
push
mov
mov
lea
jecxz,pn
adc
cmpsb
jge
pusha
xchg
jb
out
pusha
cmp
rcl
xchg
pop
aas
repz
insb
xor
inc
cli
div
lea
enter
insb
scas
pushf
jbe
cld
ror
shrl
sub
out
call
rol
mov
mov
movsl
push
adc
mov
jmp
inc
push
and
daa
xchg
insl
jno
scas
sahf
cmpb
add
cmp
push
repz
popl
sarb
jno
adc
rcrl
loope
or
and
pop
repz
ljmp
jnp
or
lock
es
push
pop
clc
jecxz
popf
aam
cmc
daa
out
sub
sbb
out
pop
out
sub
cmc
cld
lahf
push
push
scas
dec
inc
fdivrl
dec
stos
arpl
lret
aas
push
les
and
inc
je
jp
add
inc
push
outsl
pusha
ds
and
and
xor
push
push
lea
add
mov
dec
jecxz
sbb
stc
je
add
xchg
xchg
and
bound
push
in
scas
sub
lcall
dec
or
mov
sar
cmp
pop
fdivl
sub
je
cmpl
ret
iret
dec
call
inc
mov
divl
out
jge
cmp
jl
fwait
or
cmp
mov
xlat
pop
cmp
cs
ljmp
xchg
lcall
icebp
int
inc
mov
xlat
insl
xchg
cwtl
movsl
dec
xchg
xchg
sbb
cmp
enter
scas
or
fadd
ss
ljmp
mov
xor
xchg
mov
ljmp
gs
push
add
dec
aas
in
add
int3
in
or
mull
mov
sbb
and
fisubrl
in
insb
add
loope
and
nop
pop
lods
mov
lret
and
mov
xor
into
mov
mov
loopne
fs
js
movsl
inc
stos
push
js
jg
push
dec
xchg
aam
stos
or
ja
pop
jmp
rorl
xchg
pop
shll
cmp
in
leave
fiaddl
ds
fwait
cmp
xorb
out
mov
pop
loope
fcomi
or
repnz
inc
jno
dec
push
dec
pop
leave
lret
adc
jne
push
nop
rcrl
repnz
xlat
cmp
daa
sub
jno
shll
jnp
movsl
int
push
rorb
sub
sbb
mov
mov
ja
insb
aam
scas
pop
cs
lcall
ljmp
push
adc
enter
xchg
push
lahf
cmp
pop
mov
xchg
movsb
int
add
pop
ljmp
xor
movsl
jns
inc
call
mov
or
or
fiadds
xor
lcall
imul
xchg
arpl
aam
je
fcompl
mov
test
xchg
mov
ljmp
lcall
push
push
rclb
mov
loopne
push
pop
rcr
jl
push
negl
sbb
rcr
in
pusha
sti
pop
cmp
dec
pop
mov
and
mov
xor
sub
sbb
andb
mov
add
adc
loop
cli
lea
scas
repz
inc
xor
sbb
int
dec
pop
sbb
mov
in
push
outsb
push
xor
not
sbb
add
addl
adc
subps
xchg
dec
fidivl
aaa
adc
fisttpll
in
pop
cs
xchg
add
or
push
cs
push
adc
inc
adc
out
adc
cld
in
mov
dec
xchg
pop
inc
adc
mov
push
sbb
add
adc
imul
mov
mov
movsl
gs
mov
mov
shl
dec
repz
shll
stc
xchg
or
fsubr
inc
imulb
sbb
inc
fcomi
mov
in
orl
dec
dec
hlt
push
sbb
scas
loope
push
mov
dec
and
pop
xchg
sbb
in
stos
sti
xchg
insb
or
inc
and
mov
or
jle
mov
lahf
iret
sbb
sbb
adc
movsl
and
jge
cmp
or
lods
adc
inc
fcoml
leave
mov
ljmp
jbe
fs
imul
jns
adc
xchg
cmpsb
sub
cmp
fs
mov
rorb
sbb
pusha
dec
mov
rcrb
pop
jle
popf
decb
loop
cwtl
mulb
adcl
popf
cmp
les
fmulp
or
outsl
push
mov
outsl
addr16
cmp
jl
ljmp
jo
dec
mov
in
dec
xor
test
and
js
jp
shl
hlt
adc
lods
jmp
jecxz
dec
pop
dec
lahf
or
pop
nop
stos
mov
xor
push
daa
rorl
mov
jmp
divb
jb
push
cmp
sti
xchg
mov
mov
xchg
mov
aam
sbb
jmp
push
push
mov
ret
icebp
mov
lcall
inc
outsb
mov
pop
dec
push
lcall
vhsubps
daa
add
fcmovnbe
pusha
cmc
and
loop
out
jbe
jnp
fwait
bound
sti
into
inc
xchg
jg
movb
cmp
ret
inc
cmp
dec
insb
ljmp
push
fcmovbe
sub
lahf
dec
lret
jns
add
mov
rcrl
dec
adc
pop
mov
js
adc
movsl
jnp
mov
lret
lret
cmpsl
inc
xlat
in
push
and
aaa
push
cltd
fucomip
push
pop
jg
out
dec
testb
push
push
repnz
dec
sbbb
ljmp
fwait
mov
lret
dec
jb
orb
clc
les
lret
and
xchg
jo
push
insl
cwtl
push
enter
insb
mov
rcrb
loopne
or
xor
dec
lods
fisubrl
out
mov
sbb
leave
push
test
bnd
pop
sub
enter
xchg
xchg
xor
jne
movsl
xchg
sahf
and
push
outsl
jl
pop
pop
int3
andl
faddp
cmp
scas
pop
adc
cmc
or
and
cmpsb
push
mov
pop
xchg
jmp
adc
js
mov
xchg
aas
popf
cmpsb
test
int
rolb
lcall
out
jns
dec
xor
and
cmp
add
dec
mov
int
jg
cmc
jl
aad
les
and
imul
pop
or
scas
add
mov
scas
loope
repz
rolb
insb
stos
dec
dec
push
pop
pop
pusha
lock
daa
xor
sbb
sub
mov
cmpsb
jmp
jle
sub
and
jb
cli
or
mov
das
test
xchg
push
pop
push
je
mov
and
xchg
aam
loop
dec
cli
inc
jns
push
dec
xchg
inc
fldcw
inc
stos
shrb
jg
add
sbb
jmp
sub
lods
out
mov
fidivs
shrb
icebp
out
sahf
mov
push
js
jne
jle
outsb
push
repz
shll
decb
out
mov
pinsrw
test
mov
cmp
mov
jg
jl
lods
mov
icebp
stos
fidivrl
mov
sbb
mov
pop
and
push
shlb
inc
jno
inc
icebp
add
mov
lcall
sti
dec
dec
push
xchg
addr16
je
mov
mov
addr16
aam
jmp
xlat
mov
mov
xlat
pop
push
mov
movsl
movsb
pop
insl
in
cmc
lahf
or
fcmovnbe
test
stc
jl
cwtl
cmp
pop
popa
test
lods
cld
data16
xlat
adc
scas
ss
push
pop
mov
mov
stos
mov
xchg
inc
jecxz
jne
call
xor
add
cld
push
inc
and
jns
cmc
push
sbb
fisttps
nop
jnp
sbb
pop
test
sbb
xlat
sbb
and
lcall
cld
xchg
dec
or
roll
mov
dec
inc
mov
rorb
jmp
call
sbb
jb
loop
div
xorl
mov
cmp
mov
std
loope,pn
arpl
loope
xor
pop
jle
push
data16
scas
push
mov
call
data16
cmpsl
movsb
pop
addr16
in
fs
rcr
jae
mov
jnp
sbb
in
pop
xor
pop
aaa
ret
pop
mov
xchg
pop
pop
and
mov
pop
xchg
shrb
xchg
mov
pop
push
xchg
lock
sbb
bound
jp
and
jne
loop
inc
aad
or
xchg
and
cmp
adc
fwait
repnz
dec
movsl
jo
shl
cwtl
in
xchg
imul
jno
daa
mov
sub
enter
dec
pop
xchg
aad
mov
cmpsl
shrl
test
lret
ja
push
int
xchg
or
imul
gs
test
sbb
adc
rcrl
out
push
push
jle
jl
test
nop
xor
push
outsb
int
arpl
jo
sub
pop
out
mov
pop
jge
sarb
cmpsl
pop
and
mov
fwait
hlt
insb
aad
loope
call
icebp
jne
dec
in
movsl
dec
mov
data16
add
stos
xlat
or
lcall
push
ret
xchg
shrl
inc
pushf
cmp
in
xor
adc
jb
pop
aaa
adc
adcb
int3
call
xorl
std
and
jp
nop
fcomi
push
rcl
das
iret
scas
bsr
mov
stos
pop
insb
sbb
or
jnp
dec
test
inc
and
cmp
cmc
add
cmp
imul
popa
pop
dec
or
punpckldq
out
dec
sub
pusha
mov
push
mov
inc
adc
xchg
mov
mov
ret
shr
mov
scas
int
into
push
pop
or
pushf
stos
mov
mov
icebp
push
push
jle
xchg
push
xchg
xor
sarb
sbb
add
jl
mov
and
scas
addr16
lret
rcrl
aaa
sub
cmpsb
out
leave
ficomps
sbb
adc
inc
pop
jmp
mov
xchg
jle
rol
loope
inc
push
mov
rol
nop
test
movl
orb
sahf
mov
dec
scas
adc
test
sti
inc
jecxz
das
or
jle
aas
fabs
ffreep
aad
aam
and
pop
movsl
push
adcl
mov
sub
pop
addr16
push
mov
and
dec
pushf
inc
adc
inc
mov
push
mov
outsb
movsl
inc
xor
push
cmp
incl
or
mov
js
cwtl
and
ja
push
sub
pop
aam
and
rol
sub
popf
loop
inc
or
pop
cmc
rolb
popf
xor
add
lahf
xchg
jp
pop
outsl
inc
mov
xor
dec
addl
les
mov
call
xlat
in
daa
inc
int3
sub
xorl
adc
ds
mov
enter
ja
dec
jns
in
push
sarb
add
jb,pn
push
dec
call
shl
cmpsl
dec
test
push
pop
inc
fsubl
or
jnp
fnsave
cwtl
out
fsubrl
pop
add
adc
adc
mov
outsl
ss
sarl
inc
adc
out
sarl
push
stos
imul
enter
inc
pop
in
inc
hlt
xchg
testb
jbe
sarl
xor
and
xchg
ficomps
sub
cld
push
daa
lahf
jnp
or
sbb
dec
push
imul
out
mov
ss
cmpsb
push
test
mov
jmp
push
enter
xor
std
push
adc
lods
out
mov
das
jg
pop
insb
lea
push
imul
or
rolb
cmp
dec
scas
xor
cwtl
cmp
jmp
dec
mov
xor
xor
mov
outsb
aad
push
or
lea
loopne
in
pop
push
stos
push
aad
lss
mov
arpl
arpl
push
jl
jo
push
dec
xchg
sub
adc
std
movl
push
popa
imul
dec
fs
popa
lret
jne
push
cld
add
sbb
adc
jmp
adc
adc
bound
mov
aas
pop
jle
or
nop
bound
xchg
mov
or
icebp
int
test
pop
inc
loop
fisttps
imul
mov
mov
and
xlat
mov
jl
mov
lahf
mov
pop
daa
divl
cmp
mov
cmp
mov
push
loop
add
je
push
leave
mov
adc
call
adc
mov
mov
jmp
xor
repnz
cmp
movsb
mov
js
ja
push
add
dec
int
dec
jae
mov
xchg
adc
pop
aaa
and
das
pop
outsl
jecxz
lcall
sahf
or
jmp
in
stc
movsb
or
mov
sub
xchg
mov
lret
sbbl
dec
dec
les
mov
sahf
xor
rcr
loope
sbb
sbb
imul
add
push
push
xorl
icebp
dec
inc
loop
ja
sub
pop
fldcw
jne
sub
int
pop
add
or
mov
mov
cmp
xor
sahf
rorb
push
mov
scas
fmul
mov
xchg
dec
add
ds
mov
in
mov
inc
mov
xchg
mov
flds
and
and
mov
inc
mov
add
nop
pop
mov
cld
sbb
jno
mov
push
dec
sub
pop
test
fninit
cmc
push
iret
dec
icebp
pop
and
fistpll
mov
xchg
mov
leave
or
mov
sbb
loope
daa
out
inc
rolb
in
test
dec
rol
xor
shrl
jecxz
das
mov
dec
sbb
aas
inc
test
in
ret
sub
xchg
call
iret
xlat
xchg
fidivl
xchg
cmpsb
lods
inc
dec
push
cmpl
pop
ficoms
push
add
push
pop
fsubl
imul
es
cmc
movsl
neg
sbb
stos
je
test
sahf
cmp
test
dec
jle
mov
cld
adc
ljmp
insb
adc
lods
push
add
cld
popa
fwait
out
push
in
xchg
ret
arpl
mov
fcoms
add
pop
sbb
ss
popf
rorl
cmpsb
xorb
inc
cmp
jmp
jmp
push
hlt
add
jg
shll
addb
aad
adcl
jmp
xor
adc
into
jle
cld
mov
and
out
pop
stos
cld
mov
in
shll
daa
test
adc
sbb
inc
push
push
das
inc
add
jo
push
scas
cmp
out
sbb
lods
clc
mov
pop
or
aas
es
pushf
sub
mov
sub
dec
movsl
mov
adc
pop
sbb
mov
mov
bnd
int3
mov
sti
je
inc
data16
aam
xchg
insb
mov
cmpsl
ficomps
xor
push
add
xchg
out
add
xor
ficompl
sahf
nop
or
xchg
fucom
and
push
jle
pop
inc
in
daa
fsubl
int3
and
mov
adc
xor
loop
mov
mov
mov
mov
icebp
call
xchg
mov
inc
rcrb
xchg
sahf
xor
xorl
aad
fs
xchg
jo
and
in
push
out
cli
push
inc
popa
xchg
push
inc
insb
outsb
inc
mov
or
adc
fs
cwtl
mov
and
pop
or
pop
adc
push
mov
pop
sbb
push
out
iret
mov
inc
jb
pop
pop
mov
push
push
mov
and
adc
push
lock
xor
leave
fcmovb
pop
xchg
outsb
fdivl
test
fldenv
mov
adc
rcr
sbb
and
jno
ds
mov
mov
push
push
add
pop
cmc
cmp
repz
mov
fsubrs
push
test
movsb
lret
jae,pt
jge
je
inc
ds
inc
sbb
adc
clc
ret
jl
jno
and
adc
mov
mov
pop
aad
adc
sub
sub
and
or
lods
cmp
inc
sbb
xchg
lds
mov
pop
cmp
sbb
dec
loop
push
sub
gs
xor
xchg
arpl
imul
pusha
mov
int3
ss
add
iret
fwait
inc
adc
dec
or
inc
insb
bswap
jg
xor
fiadds
int3
mov
jbe
sti
lret
inc
jmp
mov
lidtl
inc
and
pushf
pop
and
mov
sbb
inc
arpl
imul
enter
arpl
or
xchg
fmul
sarl
loope
cmp
hlt
push
or
xor
cltd
movsb
and
xor
out
push
jb
cmpsl
rorl
add
sti
mov
test
into
mov
ja
call
sbb
push
lock
into
mov
and
jle
js
aad
repnz
je
mov
adc
or
xor
sbb
fidivrl
loope
cmp
lret
gs
rcrb
push
hlt
adc
repz
push
sub
pop
pusha
jo
call
das
pop
inc
addr16
ljmp
das
scas
mov
adcb
rol
push
push
mov
pop
test
jne
mov
cmp
cmp
cmpsl
dec
mov
or
cmp
outsb
pop
loop
std
or
stos
js
insl
add
aam
outsb
push
cmpl
xchg
mov
repz
clc
into
xchg
clc
enter
ss
xchg
sti
neg
in
jp
in
mov
sbbl
cli
arpl
push
sbb
mov
daa
out
ret
sbb
jae
pop
repnz
xor
jecxz
les
sub
jbe
fsts
in
sbb
xchg
pop
push
dec
testl
adc
dec
loope
cmp
or
dec
or
jp
and
add
dec
cwtl
lahf
sub
pop
add
sub
mov
insb
shlb
mov
push
fldenv
adc
sti
dec
mov
ss
sub
mov
push
sbb
adc
or
sbb
out
xor
popa
jno
test
push
xchg
sub
iret
lret
push
push
mov
and
push
xchg
sbbl
in
adc
fisubrs
lods
xor
dec
ficoms
adc
ficompl
or
cmp
xchg
jo
rcrl
je
xor
jg
hlt
ret
sarb
inc
jp
jp
call
gs
cwtl
xchg
xor
sub
push
rcl
push
and
inc
ljmp
or
ds
outsb
pop
jb
jb
add
add
mov
sbb
pop
pop
ja,pt
rcll
scas
adc
cmp
dec
add
push
lcall
push
mov
jecxz
xchg
push
add
les
adc
cltd
cld
mov
dec
test
pop
hlt
pop
in
inc
sub
lea
sub
das
mov
rcl
adc
test
jb
ss
jae
sbb
jnp
mov
mov
mov
out
fadd
mov
sbb
jmp
mul
mov
xor
fldenv
jge
aas
pop
int3
rcrl
dec
sub
jecxz
cs
mov
fidivrs
je
mov
imul
ljmp
xor
lret
aad
jae
hlt
je
leave
data16
out
add
pusha
pusha
nop
hlt
dec
decl
test
pop
lods
das
loopne
sarb
push
ja
outsb
xor
enter
fmull
xor
push
dec
stc
cmp
pop
inc
test
ja
mov
pop
cli
add
mov
mov
std
inc
and
test
sbb
sub
add
mov
cmpsb
mov
pop
mov
stos
ja
inc
cs
aas
arpl
outsb
std
ret
incb
sbb
mov
adc
data16
cmc
mov
dec
push
out
mov
add
stc
out
push
push
shrl
lcall
mov
ds
sub
jl
sbb
jno
js
cmp
aaa
xor
fwait
sbbb
cmp
adc
xchg
lret
lret
addl
ret
inc
lahf
jne
jns
insl
inc
sub
inc
pop
fnstenv
add
push
les
mov
cltd
pop
adc
pop
cmp
adc
dec
push
or
movsl
sbb
xor
inc
std
xchg
sub
cmp
xor
in
sbb
xor
jl
mov
add
and
mov
fldl
inc
out
movsb
mov
cmp
lret
addl
xlat
or
sub
jge
leave
outsb
mov
push
js
dec
pop
pop
aas
ja
fildl
in
push
ss
scas
sbb
jp
rclb
push
and
jnp
imul
imul
jno
sbb
mov
or
pushf
cs
sbb
sbb
inc
xchg
cmp
mov
cld
adc
dec
addr16
out
sbb
inc
pop
add
sub
nop
les
scas
fsubs
outsl
stc
outsl
and
std
fwait
pop
in
into
mov
mov
mov
jns
nop
or
mov
daa
ret
popa
lock
and
cltd
push
outsl
add
test
pop
xor
push
dec
sub
sbb
or
lods
jb
lahf
mov
dec
inc
xchg
xchg
push
popf
and
mov
xor
popa
inc
inc
jmp
push
jmp
call
jg
in
inc
sub
xchg
sub
inc
jo
test
daa
lahf
int3
xchg
out
or
ljmp
cmc
inc
xor
adcl
ret
out
dec
mov
adcb
mov
pop
pusha
rorl
lret
ret
lret
sti
mov
sub
xchg
rclb
test
mov
xchg
pop
pop
cmpsl
adc
dec
fnsave
dec
sbb
xor
xor
jno
hlt
fsubl
jmp
out
es
jmp
or
jp
lret
xchg
mov
sbb
pop
add
fimuls
push
add
shlb
in
outsl
adc
push
mov
jb
dec
rorb
cmp
pop
inc
mov
in
aaa
lock
aam
daa
xchg
sti
cli
xor
mov
cmp
addr16
pop
lret
daa
jbe
into
daa
dec
cwtl
xchg
sub
popf
addr16
sub
xor
jle
jge
push
outsl
enter
pop
aaa
in
adc
pop
mul
ret
ja
arpl
xchg
leave
jmp
ss
movl
dec
popa
jo
xchg
sbb
xchg
test
repz
test
hlt
jae
pop
leave
dec
lock
mov
xor
push
xor
jge
jecxz
mov
daa
incb
testb
movsb
fs
mov
je
inc
pop
cmp
leave
aam
cwtl
shll
cmpsb
adc
repz
sub
inc
sub
pop
inc
sub
xchg
sub
dec
stos
scas
jo
js
jle
mov
xchg
in
lods
push
and
adc
test
int3
sub
pop
cmp
cmp
cmp
subb
popa
imulb
ljmp
test
or
lods
cmp
cli
cltd
daa
fcmovu
stos
mov
xor
dec
pop
cli
sbb
jecxz
xchg
dec
jg
adc
add
mov
adc
adc
fadds
es
sub
loopne,pt
pop
jbe
cltd
mov
pop
pop
in
femms
xor
gs
xchg
mov
nop
xchg
inc
mov
pop
jecxz
sub
or
xor
jbe
ret
inc
sub
jno
pusha
into
dec
jp
outsb
or
pop
aas
aaa
cmp
fists
arpl
xor
and
jecxz
ja
mov
pop
dec
int
mov
adc
faddl
mov
xchg
sar
mov
lret
mov
jmp
jae
and
sub
fs
fdivrl
ret
and
loope
aad
pop
push
mov
mov
jno
pop
sarl
addr16
rolb
jl
dec
es
iret
sub
push
push
repnz
inc
jns
mov
pop
mov
mov
dec
jno
andl
mov
ljmp
cmp
test
imul
xor
sbb
cmp
daa
lds
mov
call
or
push
jl
ljmp
dec
movsl
adc
adc
fistpll
mov
mov
cwtl
sti
jg
inc
xchg
dec
scas
mov
std
sbb
sub
enter
int3
cli
enter
mov
movl
lahf
ret
int
es
adc
mov
jno
insb
mov
adc
pop
imul
cmp
repz
cmpb
in
xchg
xchg
inc
mov
imul
loopne
dec
or
jbe
pop
jbe
dec
inc
xchg
cmp
xor
xchg
cmpsl
add
push
sbb
adc
popl
mov
stos
adc
xlat
dec
sbb
mov
movsl
pusha
or
loopne
fwait
shlb
adc
xlat
pop
push
gs
inc
in
cmpsl
adc
cmp
mov
push
inc
jo
daa
fnstsw
test
fisubrs
or
shrb
and
cwtl
dec
das
hlt
les
push
sbb
testl
repnz
sub
mov
pop
mov
cli
jg
sbb
mov
mov
stos
mov
je
out
scas
dec
gs
cmp
clc
mov
jecxz
xchg
xorl
jae
out
ljmp
repz
sbb
dec
xor
jl
sub
pop
push
inc
pop
daa
mov
sbb
cmp
pop
xchg
jp
stos
shrb
jnp
js
shr
inc
inc
mov
out
or
cmpsl
push
ds
repz
sbb
les
call
cmpsl
sbb
cmc
out
shll
into
push
mov
add
pushf
xlat
push
cmp
cmpsl
or
cltd
pop
jno
jge
fmull
push
pop
sbb
mov
inc
fld
jnp
pop
movsb
repnz
cmp
mov
or
or
mov
inc
in
mov
aad
mov
inc
xchg
ret
lcall
inc
push
pusha
jbe
iret
push
jnp
flds
jb
testb
mov
and
cli
inc
test
das
stc
pop
bound
push
cmp
loop
int3
push
push
jecxz
cmp
stos
mov
xchg
xchg
cmpsb
jge
into
adc
ret
test
fsubs
ficompl
dec
pop
rep
dec
lock
loopne
add
ret
mov
sub
cmp
stc
sub
dec
ficompl
cmp
mov
into
dec
repz
mov
cmp
in
xor
sub
add
cwtl
lods
jle
rol
sbb
and
sub
bnd
testl
push
add
test
lods
cmp
repz
push
add
add
mov
in
adc
mov
jns
xor
jns
lods
shll
add
pop
enter
shlb
ds
cmpsl
sar
aad
cmp
dec
pop
jbe
mov
pusha
mov
jp
addr16
in
movsl
subb
imull
sbb
jle
js
shrl
aas
nop
sbb
jne
cmp
xchg
adc
orb
out
sti
jns
sbb
and
mov
outsb
push
iret
sub
mov
aam
inc
roll
add
mov
popa
das
pop
dec
test
outsb
jb
std
mov
cmp
push
mov
inc
push
sbb
shrb
push
sub
and
jle
push
inc
adc
loopne
das
lock
and
push
sub
imul
test
jbe
jp
jecxz
cmp
mov
jp
and
push
cwtl
adc
lret
mov
push
lea
push
mov
cmpsb
mov
mov
cmp
jnp
mov
xchg
rclb
push
int
sub
lods
clc
mov
sbb
or
mov
lds
lret
and
loop
repz
das
mov
mov
inc
mov
test
pushf
in
push
or
insb
jnp
sbb
shl
and
mov
inc
or
add
mov
pop
insb
test
lock
in
dec
fiaddl
or
cmpsl
test
pop
loope
xor
iret
xor
sbb
aad
sbbl
lahf
cmp
mov
out
push
pop
pop
push
sbb
jp
inc
test
mov
in
xlat
scas
xor
jo
fmuls
lods
xor
arpl
out
push
push
mul
push
out
ja
cld
or
mov
outsb
test
adc
aad
add
mov
ds
into
daa
lock
ja
mov
mov
enter
sbb
pop
push
or
xor
call
jle
call
outsb
pop
or
out
cwtl
roll
aas
sarb
int3
sub
popa
xchg
jl
or
cld
jnp
adc
mov
jmp
dec
pop
fiaddl
fstpl
inc
loop
xchg
dec
enter
push
les
iret
cmp
test
or
repnz
in
cmc
iret
int
cld
add
stos
lret
cwtl
call
mov
adc
mov
cwtl
fisttpll
mov
xchg
cld
fistps
movsb
mov
jge
xchg
xchg
jle
pop
fildll
and
fnsave
arpl
cmp
test
into
pop
jl
cmc
insl
in
je
shrb
in
into
adc
cmp
jb
fisubl
cs
cmc
mov
adc
das
push
dec
mov
cld
nop
ljmp
loope
dec
test
push
leave
mov
push
in
jo
in
and
adc
enter
cmp
push
aad
inc
pop
cwtl
insl
xorl
jbe
cmc
idivl
xchg
and
jns
ja
cmp
dec
or
stc
add
arpl
ficompl
or
sbb
add
inc
addr16
add
mov
shr
sahf
movsl
xor
mov
and
andb
pop
jb
lret
scas
push
add
mov
sub
scas
push
inc
xor
addr16
enter
ljmp
arpl
daa
sbb
sub
hlt
ja
das
jne
sub
shlb
ds
imulb
xor
dec
and
fdivrs
push
and
add
add
imulb
sub
and
add
lods
fldt
mov
mov
ljmp
fisubs
aad
fwait
cmpsb
lahf
sbb
imul
call
xor
cld
push
cli
jb
mov
push
and
cmpsl
mov
xchg
adc
adcb
jge
cli
pop
and
cmp
cld
and
xchg
inc
insb
or
mov
mov
je
stos
out
aam
in
bound
rol
data16
push
mov
sbb
pop
shll
into
sbb
inc
sbb
jl
pop
pop
clc
xchg
xchg
fbld
arpl
cs
xchg
dec
push
push
or
or
mov
pushf
mov
sti
sub
nop
mov
stos
stos
xlat
lds
aaa
lahf
push
daa
xor
dec
sbb
das
sub
or
dec
pop
repnz
fcomip
dec
inc
xchg
jno
adc
mov
jo
data16
out
cs
cli
jp
lcall
pusha
enter
sub
lahf
pop
pop
dec
xor
lret
jmp
xor
add
cmp
dec
sbb
jg
xchg
mov
ret
unpcklps
icebp
pop
xor
mov
roll
lods
dec
fs
data16
mov
jns
dec
sub
std
dec
mov
jle
or
nop
daa
repnz
fcoms
xor
and
adc
sbb
lds
cmp
or
push
ret
aaa
loopne
fwait
pop
adc
xor
test
adc
and
gs
xor
ret
lcall
imul
clc
loopne
movsl
push
sub
jmp
roll
sub
sbb
inc
dec
mov
xlat
push
sub
fnstsw
cmp
retw
sbb
mov
cs
lods
sbb
mov
push
mov
jecxz
jne
push
sahf
mov
dec
mov
jae
fistpl
inc
jl
push
out
in
leave
rcr
adc
sbb
sub
jmp
xchg
call
nop
xor
imul
in
ret
jae
pop
mov
inc
cmpb
mov
rolb
call
lods
cmp
sub
mov
cld
cmp
adc
loop
push
and
cwtl
std
push
mov
dec
es
ret
js
cmp
push
xchg
mov
fs
push
pop
pusha
pop
pop
cmpb
sub
outsb
into
es
sbb
mov
cmp
jle
dec
xor
mov
and
in
call
jp
ds
imul
cmpsl
nop
and
mov
cwtl
xchg
dec
or
adc
addr16
add
or
jnp
subb
dec
out
fucomip
adc
jg
xchg
mov
mov
sbb
or
or
cmp
popa
xlat
mov
xor
cld
xchg
jne
movsb
scas
mov
test
xor
aam
sub
sub
mov
stc
jp
imul
ret
pusha
cmp
pusha
into
jno
adc
mov
jae
dec
shlb
pop
pop
stc
test
out
cmp
ds
and
dec
outsb
dec
std
cmp
adc
cwtl
clc
in
ret
cmpsl
jge
adc
out
mov
mov
and
pop
jnp
push
and
outsb
andb
dec
lcall
mov
mov
mov
stos
sub
cmp
repz
xchg
jg
or
mov
adc
outsl
fwait
mov
push
pushf
cltd
stos
cmpsb
and
mov
jg
mov
pusha
mov
jb
ja
in
mov
sub
mov
fwait
lock
repz
jl
pop
mov
jae
movsl
pop
sbb
dec
lock
popf
aas
enter
push
lods
mov
mull
ret
in
xor
dec
add
mov
cwtl
imul
fisubrs
push
popf
fs
xchg
and
subb
lock
pop
paddsw
insl
cwtl
sub
orl
sbb
mov
repnz
pop
xchg
cmp
pop
subl
out
sub
in
lea
sbb
jmp
stos
addr16
cmc
xorb
jo
aas
nop
mov
daa
icebp
leave
aaa
xor
mov
out
mov
inc
xchg
nop
adc
push
icebp
movsl
sbb
iret
jbe
sti
or
out
pushf
mov
idivb
iret
test
push
arpl
sbb
les
jl
push
adc
jbe
int3
pop
add
adc
jp
in
adc
mov
outsl
push
mov
xor
jge
inc
cld
shll
inc
pop
adc
icebp
incl
xchg
dec
loope
flds
inc
ss
daa
fcompl
cmp
iret
leavew
inc
imul
adc
aas
and
add
mov
orb
sti
adc
sbb
pop
das
sub
roll
ret
cs
fcomps
inc
dec
fwait
xor
jb
push
cmpl
jo
mov
dec
aaa
xchg
fwait
and
jbe
icebp
ja
aaa
inc
dec
testb
lods
leave
int
jnp
out
xorb
sbb
push
mov
mov
inc
popf
pop
sub
push
idivl
add
in
dec
cltd
pop
cli
xchg
and
neg
cmp
jle
loop
loope
xor
dec
mov
jmp
testb
pop
nop
xor
into
mov
pop
cmc
cmp
cmp
mov
cld
loop
jnp
movsb
repz
cmp
or
pop
push
cwtl
cltd
addr16
stc
adcl
std
fadd
pusha
cmp
mov
dec
fisubl
push
jae
push
fdiv
cmc
sarb
movsb
pop
test
mov
xchg
mov
cmp
lret
sbb
mov
inc
inc
aaa
fucomi
xchg
sub
fbstp
jg
out
mov
stos
cmp
adc
ljmp
jno
shr
pusha
orl
jne
das
push
sbb
pop
cs
into
push
in
test
jb
imul
fucomi
repnz
fwait
vpor
ss
int3
into
out
add
jnp
push
in
dec
or
and
rorl
ret
sbbb
mov
js
push
mov
call
add
into
test
sub
sbb
mov
or
test
lock
add
cmp
leave
dec
jb
xchg
lds
mov
pop
jp
adc
sbb
dec
cli
nop
adc
mov
enter
xlat
push
dec
sbb
lea
xchg
xor
frstor
push
int
xchg
mov
out
stos
jecxz
inc
xor
jge
leave
inc
iret
mov
push
cld
sbb
cmp
stos
add
or
adc
int3
mov
mov
stos
addb
fldl
popf
sub
jb
subb
jmp
pop
or
mov
mov
mov
cmp
dec
inc
call
movsb
daa
mov
outsl
repnz
xchg
adc
push
rorl
jl
ss
out
push
mov
cli
jge
xchg
icebp
cltd
out
cld
dec
cli
lcall
lret
sbb
jecxz
xor
or
add
fdivl
inc
loop
inc
je
jp
hlt
cmpsl
sbb
in
inc
imul
out
stos
cmpsl
push
xchg
pop
lcall
jbe
cmp
jno
xchg
insl
add
insl
jmp
or
mov
push
lods
adc
loopne
fisubl
lods
outsb
aad
sub
sub
jl
push
mov
in
sbb
adc
enter
in
pushf
into
xchg
mov
pop
lcall
push
in
paddusw
adc
mov
shr
xor
adc
xchg
xor
ja
xlat
mov
clc
xor
ret
pop
xchg
addb
add
shll
and
adc
ja
mov
and
js
jae
pop
int3
or
xchg
inc
push
cli
lods
xchg
mov
pusha
imul
mov
lods
insl
cmpsb
cs
mov
jle
enter
mov
jbe
add
loope
mov
or
repz
imul
out
mov
jge
mov
testl
push
cmc
cwtl
sub
push
inc
inc
outsl
test
adc
jo
pop
push
aas
push
pcmpeqw
lret
movsl
add
rcr
out
push
sbb
inc
dec
mov
mov
repz
test
mov
ror
sub
and
sbb
jle
sub
popa
and
inc
outsl
shlb
mov
push
repnz
insl
sbb
je
push
adc
popa
mov
sti
dec
stos
xchg
pop
ret
inc
mul
cltd
out
in
jp
or
sbb
sub
enter
add
arpl
inc
push
push
ficoml
std
aaa
shll
int
dec
cmp
or
xor
add
ret
xchg
out
daa
pop
jae
inc
dec
ret
cmp
ljmp
sub
xor
testl
pop
lods
or
add
pop
mov
fsubs
enter
sbb
out
push
adc
movsl
adc
inc
push
lret
fsts
xchg
sbb
notb
enter
and
jb
xchg
shlb
out
fs
jmp
cmp
lock
int3
sbb
rorl
push
fdivrl
push
icebp
lcall
lods
cld
xchg
ljmp
pop
inc
pop
mov
mov
arpl
repnz
mov
subl
pop
xor
cs
rcr
adc
mov
and
lcall
jb
and
and
jnp
mov
ret
loope
js
stos
test
jle
in
pop
jb
xor
dec
mov
aas
add
outsl
sub
repnz
sahf
xor
or
movsl
adc
jg
fadds
mov
addb
cmp
mov
dec
push
and
ss
fisttps
repnz
filds
sub
lods
lods
mov
adc
mov
xchg
cwtl
xchg
dec
cmpsb
or
enter
mov
jnp
movsl
mov
stos
or
adcl
xor
movsb
cmp
ljmp
fsubrs
push
mov
mov
push
fsubrl
and
mov
or
inc
popa
xor
test
mov
negb
cmp
add
xor
leave
dec
push
in
add
pop
mov
or
mov
mov
loopne
repnz
mov
pop
inc
gs
sub
pop
mov
movsl
cwtl
fwait
stc
call
or
loope
shlb
add
packssdw
insl
fwait
stos
push
ds
rorb
xor
xchg
lret
sub
xor
aas
arpl
in
jno
sti
cmp
shrb
dec
repz
and
adc
les
cli
or
push
scas
jnp
lahf
cmc
xor
sbbb
xor
test
nop
out
mov
rcl
cmp
jae
pop
mov
or
cs
xor
jns
scas
stc
lcall
sub
stc
pop
pop
sub
loope
and
lret
jmpw
and
mov
sbb
or
in
mov
scas
inc
mov
sub
sub
leave
outsl
test
repnz
adc
push
pop
sahf
xor
jecxz
popf
popa
out
xchg
lcall
push
je
pop
loope
sub
iret
and
sbb
dec
lea
push
adc
subl
cld
es
push
in
adc
or
add
pusha
xchg
aas
cli
jae
mov
clc
sahf
mov
mov
outsl
and
add
cmp
add
adc
dec
jae
add
icebp
js
test
push
sbbl
add
cli
sbb
enter
out
fwait
cmp
fdivrl
dec
fcomip
push
mov
sbb
cld
ss
jl
dec
mov
in
inc
xor
xchg
mov
cmp
imul
mov
sbbb
cmpsb
notb
jle,pn
sub
jle
jecxz
and
xchg
testl
jbe
incb
pushf
ret
sbb
cld
bound
movsl
fbstp
xchg
cmp
mov
aam
cltd
lret
test
aaa
mov
mov
negb
in
adc
cli
and
outsl
fdivs
andl
xchg
addr16
pop
cmpsl
xor
add
jge
pop
pop
push
clc
cmp
fwait
push
cmp
jb
sbb
mov
lahf
cmp
outsb
repz
insl
push
stos
add
mov
adc
mov
lahf
pop
in
pop
jbe
push
jbe
xor
add
dec
int
add
xchg
cwtl
or
fldt
adc
and
stos
imul
movsl
cmpb
dec
push
adc
addb
jne
mov
loope
idivb
cmp
aam
push
push
insb
or
jp
lds
pushf
dec
pop
aas
pop
rcl
loop
insb
adc
rcr
push
lods
jmp
mov
pop
or
mov
or
xor
cmp
mov
movsl
mov
adc
fildll
lock
insl
pop
sbb
fnstsw
popa
mov
xchg
push
cmp
pop
arpl
sbb
push
or
iret
pop
shl
push
sub
cmp
ret
push
inc
pop
dec
and
ljmp
neg
sub
loopne
ljmp
xchg
lods
adc
jae
mov
mov
adc
inc
loop
jge
cltd
pop
jae
xor
pop
out
mov
xor
insb
xchg
icebp
pop
rcrl
pop
adc
fwait
jbe
js
mov
lcall
adc
out
and
jae
filds
mov
outsl
rorl
hlt
out
ss
repnz
lods
push
hlt
dec
cli
sbb
and
adc
lea
loopne
xor
and
xorb
mov
repnz
push
mov
push
jbe
sbb
out
loop
add
pop
cltd
sbb
dec
or
dec
jecxz
lcall
mov
jns
pop
pop
mov
cli
xchg
xor
pop
push
pop
add
xchg
cmp
mov
adc
push
push
xchg
addr16
imul
push
fwait
sbb
std
in
or
xchg
mov
cmp
int
adc
inc
mov
xlat
xchg
mov
cwtl
repnz
push
daa
push
outsb
sahf
jg
orl
test
lds
aad
dec
inc
sar
adc
dec
mov
push
int3
rolb
cmpsl
in
mov
sub
sub
jle
pop
push
jecxz
mov
int
cmp
imul
inc
gs
jbe
sub
mov
imul
imul
ljmp
and
xchg
xlat
xor
bound
jmp
icebp
inc
or
fisubs
jg
dec
cs
or
lret
mov
mov
add
jle
insl
lret
jno
add
xchg
and
je
outsl
push
arpl
mov
outsb
xor
dec
mov
movsl
push
nop
ret
mov
out
js
imul
mov
in
test
push
lcall
fistps
xchg
mov
leave
popa
xor
adc
push
imul
jb
cmp
outsl
repnz
xor
adc
and
mov
sub
push
pop
cld
dec
adc
scas
push
arpl
xlat
and
xchg
jle
ret
jne
adc
gs
push
das
mov
and
mov
mov
xor
cmp
add
je
leave
out
sarb
ds
je
pop
int
fcomps
cmp
add
jae
les
ja
jb
and
data16
jp
ficoml
or
cltd
imul
pop
xor
flds
mov
iret
fnstcw
inc
inc
xchg
out
push
sarb
mov
add
mov
aam
push
jb
dec
test
lret
xchg
fsubrs
mov
shll
pop
sbb
push
fnsave
sti
pop
outsb
inc
push
loop
imul
mov
mov
mov
fwait
adc
mov
or
ja
shll
inc
das
or
data16
loope
cltd
xchg
popa
add
je
jns
add
mov
call
loope
xchg
and
fldt
lods
push
popf
lods
sub
mov
or
cwtl
lods
push
and
pop
das
imul
and
push
xor
loop
sbb
jae
or
adc
int3
push
mov
fdivl
mov
push
jp
loopne
mov
lcall
pop
pop
add
comiss
addl
fadds
mov
sub
push
sbb
add
dec
out
in
in
inc
jnp
movsb
andb
cltd
sub
jmp
jle
fmull
push
cmp
lods
jnp
pop
lods
mov
jg
push
lock
mov
aam
mov
or
insl
jbe
lock
jno
push
cltd
out
pop
stos
popf
ret
sub
outsb
test
sbb
xchg
xchg
pusha
or
imul
cli
scas
jbe
inc
enter
xchg
jecxz
mov
shrl
inc
daa
lds
xor
cwtl
mov
out
out
pop
mov
sbbb
add
pop
int
jge
add
mov
lahf
int
bound
and
mov
push
adc
push
mov
fisttpl
xor
xlat
sbb
xchg
mov
lea
jmp
xchg
lcall
and
and
mov
adcl
mov
stc
cmp
xor
inc
push
out
std
popa
cwtl
lret
in
das
or
scas
xor
movsb
cmp
pop
and
sub
and
dec
push
subl
inc
lret
js
jmp
pop
in
xor
sub
in
sti
gs
fwait
and
xchg
lcall
or
movsl
test
mov
and
es
mov
aaa
sub
lods
aad
dec
roll
xor
sub
cwtl
imul
fcmovbe
in
jne
or
mov
loopne
cmp
mov
xor
pusha
fucomp
std
push
test
imul
inc
mov
fidivl
in
into
and
pop
out
out
pop
sub
int
sti
push
xchg
adc
mov
bound
mov
pop
cmp
in
add
aad
mov
movsl
inc
out
or
shr
gs
sbb
pop
ja
or
push
dec
or
rcrl
inc
out
cs
or
pop
je
imul
mov
clc
outsb
nop
and
or
mov
call
fs
pop
fbld
cmp
or
call
notl
jbe
push
adc
pop
add
stos
insl
mov
jns
and
jae
fdivp
popa
mov
lods
sub
sahf
mov
cld
mov
out
imul
xchg
ret
push
jp
mov
jecxz
loopne
sub
fstpl
sbb
ror
pop
xor
pushf
xor
xor
movsl
cli
jge
lret
ror
divb
aad
and
cli
fcompl
outsl
test
sub
scas
es
hlt
andl
pop
popf
enter
mov
sub
inc
xchg
add
mov
aas
insb
push
push
dec
and
sub
push
mov
add
and
inc
pop
sbb
fcomps
test
xor
popa
inc
test
mov
sub
sbb
push
mov
or
shrl
pop
mov
dec
sbb
dec
pop
xchg
cmp
mov
adc
test
sarb
add
push
orb
aam
and
fwait
scas
push
popf
je
fst
je
js
aas
popa
jnp
fidivl
leave
push
sbb
mov
dec
push
movsl
dec
or
lret
cmp
repz
mov
es
aaa
insb
mov
mov
ret
lods
jl
outsl
ja
repnz
aam
test
xor
sbb
sub
add
sub
push
dec
imul
or
or
repnz
mov
sbb
push
enter
mov
push
shrl
push
jb
and
mov
cmp
lock
adc
push
mov
sbb
mov
ljmp
push
jecxz
xor
add
daa
out
xor
loop
out
jmp
dec
jbe
cmp
jecxz
push
mov
jae
mulb
jbe
adc
stc
adc
push
aam
mov
mov
andb
cmp
mov
pushf
mov
pop
shlb
mov
push
daa
mov
ret
loope
rolb
pop
je
mov
jns
clc
add
xor
mov
adc
mov
pushf
push
adc
insl
and
xchg
je
aaa
mov
cmp
ficompl
cmp
data16
leave
jl
dec
dec
xchg
push
sahf
in
xor
mov
test
cs
stos
es
mov
pop
xchg
jns
cmp
jne
mov
shll
sub
mov
inc
imul
sbb
cmc
add
mov
lods
jmp
push
mov
rorb
add
sbbl
test
mov
sbb
cmp
cmpsw
wrmsr
adcl
mov
inc
xor
sbb
mov
movl
popf
lret
dec
mov
or
sub
push
push
xchg
repnz
lret
popa
mov
and
fwait
or
test
in
in
les
jle
inc
negb
divb
rol
lds
mov
or
stos
and
imul
push
cmp
sbb
xlat
cmp
and
loope
mov
and
cli
repnz
fwait
mov
ljmp
mov
jl
outsl
mov
mov
jecxz
hlt
rcrl
sub
pop
jge
stc
lret
jmp
sbb
in
imul
lock
cmp
jae
shlb
dec
mov
dec
push
push
les
in
dec
xor
loope
repz
out
movsl
pop
mov
and
stos
xor
repz
loope
fcomps
or
xchg
dec
cmp
sub
push
popa
or
ficompl
es
push
mul
xor
rcrb
push
test
or
xor
jne
cli
sub
jecxz
ja
lahf
and
movsl
movsb
out
mov
dec
imul
mov
lds
gs
mov
push
push
iret
je
test
jae
int3
or
out
inc
push
pop
xchg
test
mov
les
sbb
jae
test
mov
add
lret
mov
xor
out
scas
lea
push
mov
arpl
cltd
mov
mov
sub
ljmp
mov
dec
sub
fldenv
add
out
jge
dec
into
lods
in
jle
and
cmp
mov
popa
xor
push
jge
outsb
ljmp
dec
into
jns
or
test
movsb
cmc
xchg
cwtl
cmp
pushf
cmp
xchg
push
and
fcmovnb
addr16
shll
out
mov
mov
outsb
int3
or
push
mov
inc
fcomi
push
sub
inc
push
cmp
inc
mov
adcb
scas
cmp
lock
pop
test
push
xchg
idivb
test
add
and
dec
push
jecxz
icebp
rcrl
mov
mov
jecxz
sub
dec
pop
faddl
add
sbb
in
int3
jg
and
outsb
es
les
lcall
mov
lahf
shl
push
sbbb
mov
out
jle
xor
mov
mov
cmp
cltd
mov
rclb
push
pop
aad
popl
sbb
sub
xor
imulb
mov
js
mov
faddl
mov
push
mov
jae
dec
pop
xchg
dec
sbb
dec
xchg
in
fmul
out
or
mov
jmp
ret
pop
and
inc
mov
out
mov
sub
fs
cmp
sahf
mov
push
sbb
sbb
fcoml
add
inc
dec
mov
push
mov
or
inc
cltd
fsubrs
insl
addr16
sbb
lock
loope
add
inc
popf
scas
or
xor
xor
and
mov
add
push
es
push
jg
mov
cli
mov
test
imul
mov
imul
cmp
scas
movsl
das
das
push
fdivr
sahf
xchg
add
je
sbb
addb
cwtl
adc
sub
add
pop
xor
mov
aas
pop
sbb
and
add
pop
push
push
or
cltd
inc
fsubrl
dec
repnz
mov
dec
mov
add
sti
inc
notb
xor
call
inc
mov
mov
mov
pop
jbe
mull
aam
inc
dec
movsb
lea
xor
fnstenv
mov
mov
push
xchg
jne
xchg
out
cs
mov
mov
gs
pop
sub
push
ds
sub
push
neg
jb
enter
lea
test
sbb
pop
aam
cmpsl
mov
jne
push
ja
add
mov
mov
lcall
jecxz
adc
sbb
add
jp
mov
scas
xchg
je
cmp
mov
mov
mov
inc
loope
mov
out
xlat
loope
inc
fdivr
push
cld
loope,pt
jg
inc
arpl
jmp
jg
clc
stos
int
mov
pusha
xchg
movsl
in
mov
add
pushf
xor
lds
mov
and
adc
loopne
xchg
pop
sbb
mov
stc
sub
insl
xchg
push
fists
adc
and
pop
dec
cwtl
dec
xor
aaa
out
inc
test
int3
int3
mov
push
xor
sbb
addb
rcl
jge
or
jmp
call
js
push
inc
xchg
int3
sbb
test
imul
jno
mov
jno
popl
lock
cs
push
repz
lods
add
mov
push
mov
cld
inc
hlt
xor
mov
pushf
jmp
cli
dec
popf
inc
jns
mov
rorb
dec
mov
mov
pop
xchg
leave
stos
movsb
cmpsl
pushf
inc
xchg
test
pusha
mov
leave
je
xchg
mov
call
lahf
sub
in
scas
push
mov
xor
and
jl
ljmp
inc
jmp
dec
sub
enter
jmp
nop
push
testb
test
cmp
mov
cmc
fisubrl
sbb
loop
in
xchg
add
sub
loop
jge
adc
jp
cmc
fisubrl
ret
out
inc
cs
jb
sub
rorl
jecxz
je
jbe
movsl
xchg
mov
mov
cwtl
int3
dec
jns
push
in
pop
fistpll
mov
add
jge
test
dec
or
daa
es
jmp
or
lock
or
lods
or
mov
jno
adc
imul
test
sbb
jl
adc
lcall
nop
xor
xchg
mov
pop
xchg
xor
or
mov
xor
ja
pop
adc
arpl
dec
mov
loope
ja
pop
inc
or
cli
not
js
scas
pop
in
push
dec
adc
pusha
stos
outsl
ret
and
jne
and
add
int
repnz
sti
mov
jl
ret
outsb
jg
rcl
xor
adc
ja
push
inc
sbb
loop
call
xor
cmpsb
cmpsb
cmp
in
dec
or
mov
cmovp
jno
xchg
jns
scas
xor
jl
cmp
cwtl
dec
cmp
jl
xlat
lock
or
frstor
xchg
xchg
cmc
mov
lret
mov
inc
rorb
test
jmp
lock
push
cmpl
stos
loop
jo
mov
mov
shl
aas
push
xor
pop
int
add
xchg
jle
cmpsb
loope
pop
lret
jb
test
pop
sti
push
adc
cmp
push
xor
sbb
cmp
and
mov
scas
cli
sbb
pop
jge
sahf
aas
sub
pushf
sbb
or
jp
loop
mov
lcall
sub
ret
rcll
in
mov
cmp
cmp
pushf
clc
jmp
int3
jns
jl
cmp
movsl
nop
outsb
lcall
mov
pop
cbtw
mov
cmpsb
jge
lahf
add
sahf
gs
xor
mov
daa
dec
mov
lods
xchg
mov
xchg
cmp
mov
outsl
mov
daa
ret
je
gs
into
shrl
add
xchg
and
xchg
ret
push
cltd
div
outsb
iret
cmc
mov
or
lcall
mov
push
outsb
jae
pushf
pop
enter
aas
sti
outsb
lret
scas
xchg
dec
xor
out
xor
daa
xor
test
xchg
pusha
into
add
clc
or
sahf
mov
sbb
xchg
ret
mov
fs
or
jae
shll
xchg
jbe
scas
pop
mov
mov
popl
cmp
pop
imul
aas
scas
adc
pop
out
sbb
lods
inc
insb
jmp
push
movsb
jno
lret
repnz
pop
dec
mov
adc
lock
lods
idivl
sub
ret
rcll
out
xor
mov
xchg
inc
sub
dec
push
scas
scas
push
xchg
sbbl
or
aaa
rorb
pop
push
xchg
ffree
aad
jle
popa
enter
mov
sub
ljmp
in
fmul
xor
xchg
in
sub
inc
pushf
jne
mov
push
scas
int
addps
push
fldt
mov
sbbl
ds
lret
adc
push
pop
sbb
out
shlb
arpl
dec
or
mov
inc
inc
mov
mov
mov
ss
clc
sub
cs
inc
ja
aas
push
out
scas
push
mov
in
mov
aad
sbb
cmp
insl
out
inc
sub
sbb
pop
icebp
mov
sub
out
fistl
pop
fbstp
fs
push
call
adc
mov
lcall
lods
lods
stc
fmull
sbb
sahf
sbb
testb
cs
dec
xor
ret
xor
dec
jo
fnsave
and
es
push
icebp
push
sub
loope
andl
scas
sub
popa
loopne
outsl
int3
push
push
cwtl
pop
rol
aam
add
mov
dec
dec
bound
xchg
ficoml
add
orl
ss
outsl
and
sbb
xchg
sub
out
mov
cmpsl
cmp
mov
iret
movsl
pop
sbb
lods
and
inc
mov
or
sub
add
rolb
scas
or
int3
jg
and
outsl
cmp
jg
iret
sub
adc
mov
pop
mov
mov
lret
in
imul
jecxz
push
js
in
popf
xchg
xor
push
adc
pop
sub
or
sbb
dec
push
lods
mov
divb
fstps
and
andb
pop
mov
inc
jns
gs
xor
cmpsl
push
push
imul
leave
xchg
xor
fmuls
addr16
mov
ret
adc
lea
dec
cltd
mov
add
sub
movsl
roll
and
push
jl
xchg
aad
hlt
popa
lea
push
rcrb
sbb
aad
lret
push
aas
lock
mov
cmpsb
insb
inc
testl
loope
loop
or
xchg
xorl
fistl
mov
fwait
xchg
mov
outsl
xor
ljmp
sbb
pop
pop
dec
rcrl
mov
mov
mov
vunpckhpd
fstpl
and
les
jmp
xchg
mov
dec
mov
test
mov
sbb
imul
std
out
addr16
repnz
sti
xlat
cbtw
pop
dec
push
push
shlb
or
and
stos
sub
and
jmp
loope
mov
jl
sub
fwait
out
stos
stos
pushf
out
lahf
xor
arpl
mov
jb
arpl
pusha
loop
jecxz
fnstsw
lcall
add
sub
adc
inc
or
xlat
jl
and
sbb
mov
cmp
dec
cmp
ds
pop
sbbl
mov
fwait
rep
clc
mov
es
or
fs
in
pop
mov
shl
aaa
out
lds
in
hlt
fstpt
dec
sub
lret
daa
rolb
scas
scas
shll
add
stos
mov
rclb
push
xlat
aas
cs
xchg
insl
insl
dec
jns
scas
dec
mov
push
and
sub
pop
or
jbe
jb
int
stos
gs
clc
mov
dec
in
mov
pop
mov
xlat
out
or
aad
cmpb
out
sbb
outsb
mov
sub
fimull
push
aaa
lret
pop
cmp
imul
add
lret
add
add
pushw
dec
adcb
push
rcrb
push
xor
fidivrl
ljmp
xchg
das
sub
in
add
cmp
addr16
loop
xorl
mov
jns
test
push
adc
jmp
orb
dec
xchg
mov
sbbl
push
std
dec
clc
mov
xor
dec
sarb
test
std
add
cld
insl
vpmaxsw
mov
inc
sbb
mov
or
jbe
jl
and
dec
dec
jns
jne
xchg
sub
pushl
in
lahf
sarb
cmpsb
inc
nop
xlat
mov
in
sbb
aas
pop
fsubl
aad
int
fistps
sarb
inc
ja
push
xchg
mov
adc
jns
cmpsl
repz
movsb
je
inc
rcll
aas
mov
mov
hlt
xchg
push
push
cli
xchg
fadds
xchg
mov
test
cwtl
mull
andl
sub
xchg
push
sub
cmp
mov
inc
cmp
xor
popf
cmp
fiadds
xor
insl
xchg
aad
xchg
sub
adcl
or
or
sbb
pop
mov
je
paddusw
bound
jnp
xorl
add
hlt
je,pt
data16
sbbb
ret
mov
inc
out
jnp
inc
and
mov
or
cli
vshufps
popf
mov
insb
in
cmp
dec
jp
dec
rorl
dec
mov
inc
xlat
jecxz
fdivs
xor
cmp
pop
popf
pop
shrb
cltd
ret
jecxz
mov
pop
out
sub
cmp
sub
add
outsb
aam
sbb
das
fisttpl
mov
jg
outsb
sub
sbb
aad
les
nop
add
out
cmp
inc
movsl
pop
faddp
lcall
iret
sub
xchg
sub
push
xchg
xchg
cs
ss
ja
xchg
sub
fadds
sbb
das
stos
popf
test
inc
lods
aas
hlt
ja
ja
daa
movsb
repz
div
and
or
xchg
jmp
push
lahf
stos
dec
aaa
int3
clc
mov
or
rcrl
pop
lahf
add
sti
push
mov
cltd
sahf
stos
push
test
stos
push
dec
push
cmp
mov
sti
insl
mov
cmp
jl
jb
aaa
popl
dec
aad
movb
push
dec
jecxz
dec
inc
jo
js
cld
pop
xchg
xchg
sbb
sbb
sub
sub
in
sub
leave
xor
cmp
pushf
xor
popf
scas
pop
cmp
or
rol
popa
mov
mov
pop
iret
push
fcmovne
adc
dec
not
cmpsl
or
imul
adc
frstor
jp
fnstsw
popa
ret
jge
in
movsb
in
push
cwtl
sub
cmp
pushw
pop
enter
dec
jnp
mov
mov
cmp
push
adc
je
pop
cltd
xor
rorb
xor
sbb
or
inc
add
or
call
adc
pop
les
insl
dec
add
fsubr
fcoms
adc
fdivrl
ds
sbb
or
fs
sbb
dec
jmp
push
mov
push
test
xchg
and
sti
sub
push
scas
and
into
push
hlt
scas
insl
imul
pop
mov
ja
bound
mov
cwtl
jle
fs
shrl
mov
lods
aaa
mov
cmp
ja
sub
mov
lcall
dec
fbld
fs
popf
leave
cmp
cli
xor
lret
imull
into
cli
mov
imul
jp
push
pop
movl
out
xchg
aam
xchg
fldcw
or
mov
aas
jmp
add
das
mov
add
push
dec
arpl
inc
pop
xorb
jp
sub
pop
xchg
lock
jecxz
ret
jns
movsl
scas
pop
add
fistpll
jmp
push
xor
push
xchg
scas
subb
fsubs
inc
outsl
push
add
jmp
ss
ret
test
or
shll
into
cmpsl
sarb
sbb
pop
lret
fdivrp
out
and
sti
lds
aas
xor
and
notb
jge
push
dec
sub
inc
decb
sarb
cmp
stc
rcl
cltd
daa
int3
leave
pop
add
push
data16
fstpt
outsb
xorb
arpl
pushw
lods
stos
stc
testl
jae
fs
mov
mov
fs
mov
dec
sbbl
das
cmp
sar
pop
pusha
push
cmp
cmpl
mov
xor
adc
enter
push
jns
xor
iret
scas
cmovae
xchg
cltd
push
sub
dec
call
rclb
jle
xor
inc
or
mov
in
loope
lea
fidivs
in
jo
pop
lods
push
ja
fwait
inc
cmpl
jbe
lret
xchg
cmp
push
jecxz
mov
sbb
shr
cmp
cmp
jg
push
jo
adc
jo
sti
mov
imull
add
mov
mov
test
inc
xor
cmp
add
adc
cli
push
mov
jae
add
cmp
sub
mov
cltd
mov
mov
inc
or
inc
leave
stos
out
popf
push
jno
outsl
ljmp
dec
fisttps
in
cltd
shrb
xor
xchg
repnz
in
sti
pop
sahf
jne
push
xor
xor
dec
adc
mov
lock
jo
icebp
mov
jge
push
adc
mov
fsubs
dec
push
stos
pop
cmp
loope
clc
inc
outsb
mov
sbb
pop
jns
shlb
dec
jbe
pop
push
add
jo
fs
arpl
or
push
jnp
sbb
ds
cmp
pop
shlb
or
dec
jp
ret
mov
cltd
cltd
aad
cmc
xor
es
or
frstor
aas
shll
fdivrs
jp
rorl
sub
fucomi
aad
movsb
mov
jno
xchg
jg
pop
xchg
jge
or
cmp
filds
lret
mov
lods
outsl
dec
mov
inc
movsl
mov
push
cmc
xchg
lds
lret
lahf
sbb
lret
dec
xor
aaa
push
aad
xor
scas
in
xchg
cltd
lods
div
lcall
xchg
pop
pop
out
xchg
out
rcrb
mov
aam
sbb
ljmp
add
mov
xor
cld
xchg
dec
aaa
add
add
das
mov
mov
mov
dec
cwtl
jne
dec
nop
clc
sbb
sahf
pushf
xchg
aam
mov
pusha
xor
fcmovu
sbb
mov
pop
push
bound
xor
adc
out
pop
jmp
jnp
mov
add
cld
jge
mov
cmp
mov
push
xor
xor
mov
cs
mov
pop
mov
ds
xor
pop
mov
mov
lcall
pop
push
mov
jmp
cmc
aaa
fninit
pop
cs
stos
jle
and
imul
mov
jl
pop
sub
dec
jp
dec
xchg
pop
or
pushf
stos
adc
pop
ret
std
cmp
loope
push
shlb
sub
fucom
xchg
test
jmp
add
dec
icebp
xor
movb
mov
call
add
xor
sbb
lea
int
bound
fwait
pushf
and
mov
xchg
pop
clc
mov
pop
aaa
add
cli
je
inc
sbb
jnp
jae
std
sbb
in
mov
lock
rorb
xlat
mov
ja
sbb
mov
xlat
daa
popf
pusha
jb
xchg
pop
mov
xor
clc
ja
dec
cmpsl
sub
cmovo
nop
inc
pop
inc
inc
mov
and
jns
push
mov
js
push
out
repz
or
into
pop
aaa
shr
lcall
js,pt
movsl
xchg
out
xchg
js
in
cmp
test
mov
adc
sbb
jae
sbb
aaa
push
fstpl
pop
sub
pusha
dec
add
jle
adc
dec
pop
xchg
loope
jno
or
mov
adc
shll
xlat
mov
sti
pop
inc
inc
xor
xchg
ja
push
jge
sbb
mov
mov
mov
cli
sub
push
mov
cs
mov
mov
push
push
lcall
jns
inc
outsb
pop
aaa
xchg
adc
jp
shll
lock
dec
mov
add
rclb
push
cvttps2pi
sbb
stc
cmp
scas
paddusw
adc
pop
enter
addl
mov
lods
sbb
mov
cs
sub
shll
aaa
addr16
sahf
or
dec
lods
neg
inc
out
cmp
or
cltd
loopne
or
pop
mov
in
dec
sahf
rcr
inc
shrb
dec
divb
xchg
cmp
stos
cmp
sbb
adc
rol
pop
sbb
xchg
roll
mov
test
fstl
mov
mov
xlat
adc
clc
rclb
sub
mov
or
mov
jecxz
js
xchg
push
jb
imul
sub
inc
clc
loopne
sarl
xlat
mov
push
pop
cmc
scas
mov
push
fsubrs
push
adc
rcrl
in
cmp
aas
fsts
push
xchg
daa
mov
popf
es
cwtl
mov
ror
test
jne
xchg
nop
jl
ret
cmpb
cmpb
jb
dec
add
jno
xor
stos
xchg
int
and
dec
or
sbb
jns
mov
mov
pop
out
and
inc
pop
or
push
lds
dec
insl
hlt
mov
fadds
adc
mov
das
in
shll
lret
pop
cmp
aaa
insb
dec
subl
pop
xchg
xchg
or
sti
cwtl
outsb
les
movl
or
bound
add
ss
jmp
mov
mov
addr16
out
mov
pushf
inc
pushw
mov
and
push
in
xor
sbb
jp
inc
mov
inc
xchg
stos
xchg
ljmp
push
or
pop
inc
icebp
adc
dec
iret
sbb
xor
dec
clc
inc
jmp
in
nop
testb
inc
je
int
repz
and
ds
je
dec
popf
pop
test
scas
cmp
out
sub
bound
or
sbb
mov
xchg
inc
push
push
test
jno
mov
jl
push
int3
insb
aas
ror
push
cmpsb
leave
mov
into
dec
pushf
inc
pop
sbb
pop
shrl
dec
adc
sahf
shlb
cmpsl
movsl
leave
pop
jne
inc
aam
popa
or
mov
cmc
inc
inc
cli
mov
cmp
aaa
inc
test
dec
sbb
push
sbb
sbb
inc
mull
sha256msg2
imul
sti
lock
out
dec
xor
sbb
sbb
xchg
shlb
in
or
mov
fisubl
ds
nop
mov
cs
xchg
leave
fcom
sub
scas
jmp
inc
jge
aam
movsl
mov
dec
lahf
mov
aas
lea
adc
pop
or
outsl
dec
clc
repz
jne
nop
xor
imul
ds
cmp
mov
dec
xor
int
pop
or
pop
lret
filds
push
dec
xor
test
sahf
xchg
and
fistl
dec
ret
and
fcoms
jbe
popl
lds
lods
out
or
lods
mov
dec
les
js
stc
sub
lret
test
repnz
mov
pop
stos
add
int3
repnz
pop
notl
mov
mov
xchg
dec
ds
cmpsl
pop
insb
inc
push
jmp
out
imul
mov
inc
sbb
movq
and
jns
sbb
mov
mov
and
ss
mov
loop
hlt
cmp
xchg
inc
in
sarl
or
and
jae
inc
hlt
ljmp
outsb
cmpsb
push
cmp
jns
ds
popl
dec
jae
or
add
imul
aaa
jg
aam
mov
add
scas
cmpsl
cltd
xchg
fwait
xor
repz
mov
push
jl
cmp
cmp
push
imul
adc
movsl
aas
daa
dec
subb
nop
xchg
add
or
shrb
imul
inc
enter
jl
dec
pusha
decl
or
jg
adc
cld
aaa
lea
std
into
clc
decb
cmp
mov
std
or
add
out
xor
int3
mov
fwait
dec
aas
int3
mov
mov
mov
mov
jp
add
test
xchg
lock
outsb
fnstsw
ret
cltd
clc
aas
sub
bound
stos
sti
int3
inc
shll
sub
pop
push
addl
mov
or
push
inc
mov
movsl
aaa
dec
dec
pop
lods
hlt
xchg
movsb
xor
adc
mov
adc
ficoms
shll
xor
dec
jmp
cmp
cmpsl
and
jp
loop
ja
stos
jmp
bound
mov
mov
ret
popa
push
movl
insl
aam
jmp
inc
xchg
daa
push
iret
sbb
jns
jmp
pop
adc
adc
cmp
das
loop
sbb
mov
push
lcall
stos
push
clc
pop
scas
pop
fcmovne
imul
jo
and
data16
scas
lahf
jmp
call
mov
cmp
int
add
lea
jne
mov
movsb
je
xor
icebp
sti
iret
and
je
pop
in
push
xchg
inc
or
pushf
and
hlt
rcl
outsb
movl
adc
push
jle
xor
lds
jns
ljmp
imul
sub
inc
push
inc
mov
jp
ficoml
add
orl
mov
es
mov
js
jl
jle
push
ss
xor
xchg
insb
push
into
mov
lea
leave
mov
mov
add
lret
mov
pop
pop
lods
lds
fistpll
or
jae
jns
cmp
adc
mov
arpl
std
dec
xor
stos
mov
push
pop
je
faddl
add
jb
pop
pop
mov
inc
and
punpcklbw
push
mov
mov
jle
jns
negb
push
cmp
loope
loopne
xlat
jp
out
pop
adc
push
add
dec
subl
lret
sub
fs
sub
add
test
xor
or
movsb
es
sbb
sahf
rcrb
mov
out
xchg
ret
sbb
inc
pop
negb
lock
mov
mov
xlat
dec
mov
xchg
lret
mov
arpl
loop
or
sbb
int3
stos
stos
pushf
xlat
mov
cmpxchg
popa
js
loop
int
mov
test
sbb
and
sbb
call
inc
movsb
mov
and
xor
std
dec
push
add
fsubl
jo
scas
sub
jo
and
shrl
push
xchg
pop
jns
negl
outsb
mov
mov
lods
cmp
pusha
mov
dec
mov
add
push
inc
movsb
roll
mov
jg
jae
arpl
or
adc
add
mov
or
lret
and
sub
mov
mov
lahf
out
int3
or
stos
add
pop
out
adc
jno
mov
adc
cld
leave
xchg
mov
pop
and
inc
jmp
outsb
jae
inc
rcl
cmp
scas
jo
lods
inc
pushf
pop
cmp
sti
gs
clc
lods
xlat
bndldx
mov
adc
ja
and
in
and
mov
or
sub
aaa
int3
sub
push
mov
popa
dec
mov
stos
cmpsb
aam
pusha
sbb
cld
insl
sti
das
sti
insb
ud2
push
sar
fildl
in
dec
aad
xor
jmp
pop
xchg
adc
fs
dec
xchg
pop
repz
gs
test
fwait
movl
imul
sub
jbe
jmp
inc
stos
imul
mov
or
jo
test
mov
push
shll
lock
add
xchg
fimull
xor
scas
subb
ljmp
cwtl
icebp
fadds
or
scas
mov
lods
cs
out
mov
push
aam
xchg
and
or
out
enter
mull
cmp
nop
mov
or
stos
adc
or
cltd
pop
dec
popl
aaa
dec
push
jns
pop
int
add
test
pop
movsl
xlat
fists
rcrl
pop
mov
jl
xor
addr16
mov
lahf
mov
mov
mov
sbb
movsl
mov
imul
pop
push
cmp
push
dec
adc
mov
pop
lea
sbb
or
leave
mov
or
cs
push
call
popf
mov
daa
and
or
mov
clc
clc
scas
andb
jbe
out
ret
jae
pop
sbb
andl
subl
out
pop
push
adcb
in
hlt
cld
pop
add
jnp
or
loope
or
mov
push
ds
iret
mov
int3
aad
mov
xchg
insl
jmp
leave
sub
loopne
daa
ret
loope
mov
fs
add
and
mov
xchg
mov
sub
sub
je
inc
sbb
mov
mov
dec
add
xor
adc
xor
stos
movsl
ja
clc
sub
fwait
xor
movsb
lods
and
inc
dec
negl
pop
and
fldenv
rorl
gs
ljmp
inc
mov
scas
push
pop
pop
mov
cli
sub
in
mov
hlt
roll
insb
pop
mov
jae
push
in
cmp
add
sbb
push
into
pusha
or
pushf
mov
dec
sbb
stos
lock
test
and
ljmp
ret
inc
out
inc
xchg
and
test
jbe
pop
sbb
mov
jns
adc
or
sbb
add
mov
inc
push
xchg
pushf
incl
je
sahf
adc
dec
or
mov
xchg
jge
push
add
jnp
mov
insl
aas
push
les
mov
ljmp
push
mov
mov
mov
dec
imulb
xchg
sahf
mov
and
add
mov
mov
and
mov
adc
insl
repz
ljmp
lods
stos
aad
fwait
pop
jae
das
mov
xchg
or
jno
or
push
mov
in
mov
addr16
idivb
xor
aaa
je
movsb
pop
clc
cs
mov
jae
ss
roll
in
sub
push
sbbl
sub
sub
call
ljmp
popa
ret
fs
adc
ret
ljmp
repnz
push
xor
xlat
sub
pop
or
jg
dec
lock
xchg
pop
adc
in
sub
mov
cmc
std
in
jge
cs
cmc
xchg
add
subl
sbb
enter
push
jae
xchg
fnstcw
loope
pop
inc
aas
cmpsb
inc
pop
les
mov
jno
iret
mov
mov
mov
pop
stos
mov
mov
insb
pop
fmull
cmpsl
add
xchg
dec
or
rcll
mov
push
push
rcll
xor
icebp
arpl
je
xor
out
xchg
sbb
jp
mov
cmp
lods
and
jne
lea
inc
cli
sbb
dec
cwtl
xor
sub
adc
test
jle
popa
in
enter
dec
es
sbb
dec
cmp
xor
xchg
in
mov
sub
sbb
addr16
jb
xor
and
lcall
iret
fcoms
ret
or
fcompl
das
dec
inc
dec
cmp
je
out
or
mov
test
inc
and
fisttpl
fisubs
adc
leave
cmp
fstl
ret
inc
xor
xchg
sbb
aam
sub
sub
pop
and
fcompl
hlt
xchg
and
or
xchg
xchg
jecxz
loopne
push
and
xlat
sub
inc
scas
jae
dec
aaa
stos
sahf
mov
xchg
jecxz
movsl
je
enter
inc
das
add
mov
mov
jmp
xlat
adc
mov
dec
repnz
sub
loop
push
test
jno
ds
inc
inc
mov
inc
and
lcall
int
das
mov
and
xlat
or
dec
fsub
inc
sub
xor
and
idiv
sub
out
out
fidivl
mov
xlat
pushf
jecxz
test
dec
bound
xor
lds
imul
pushf
testl
sbb
adc
adc
xor
fnstcw
adc
fsubrl
mov
stc
mov
jo
and
loop
cmp
pusha
insb
fwait
push
orw
mov
int3
ret
mov
flds
int3
mov
push
sbbb
cs
sbb
adc
ljmp
cmpsl
jp
dec
mov
ljmp
aam
push
mov
ss
adc
gs
sub
add
pop
lahf
cwtl
pop
dec
mov
loop
icebp
pop
jne
mov
mul
jnp
in
push
push
in
mov
nop
jp
outsb
lods
cmp
andb
call
mov
sub
inc
les
js
add
iret
std
jo
in
andl
ficoms
fs
push
dec
xor
push
adc
cs
adc
adc
stos
rcll
jl
sub
xchg
jg
imul
adc
sub
push
mov
pop
xor
out
cmc
scas
test
push
cli
mov
leave
in
push
and
outsb
jns
outsl
daa
rcrl
fwait
addl
push
das
movsl
icebp
int
mov
test
sub
or
xor
lock
scas
testl
pop
in
sbb
mov
jo
cld
shlb
faddl
inc
pop
jbe
lods
into
cmp
std
addb
fsubl
movsl
inc
daa
mov
sahf
add
test
mov
push
fstl
adc
das
jns
pusha
insb
filds
dec
mov
sub
bound
or
or
ret
mov
xchg
push
and
insb
mov
test
push
push
lods
lret
movsl
sbb
adc
pop
ret
xchg
sbb
mov
push
imul
mov
lret
jno
cmp
push
and
lds
xchg
xor
les
mov
mov
jmp
mov
mov
test
mov
lock
mov
outsb
dec
scas
sub
sbb
mov
mov
push
adc
mov
push
loopne
shrl
mov
addr16
popf
xchg
das
xor
dec
push
sub
add
inc
dec
or
lret
imul
ja
adc
add
imul
push
xor
jmp
xchg
cmp
shrl
sbb
jle
f2xm1
push
or
push
stos
mov
data16
in
dec
dec
jo
xchg
push
std
jnp
and
fwait
mov
adc
push
test
cmc
jp
xchg
jge
or
sub
fs
pop
mov
call
fldt
ret
mov
inc
push
lcall
daa
fldcw
int
mov
movsl
pop
sahf
out
push
or
popa
bnd
ds
out
sbb
jle
ficomps
sub
lock
movsl
jp
ficomps
or
xchg
daa
scas
scas
ljmp
dec
sbb
adc
xchg
cmp
test
cld
daa
pop
or
push
push
hlt
loop
inc
gs
das
push
fwait
je
xor
cmp
leave
inc
jno
xor
push
push
cli
dec
inc
xor
inc
jp
or
xchg
clc
cld
dec
push
mov
mov
rep
mov
sub
lret
push
lds
test
inc
add
lret
in
mov
shll
arpl
enter
or
bound
negb
ja
pop
sub
std
jbe
or
xor
imul
and
jns
imull
out
jge
and
aas
pop
mov
int
inc
push
inc
push
mov
mov
adc
test
fdivrl
into
xchg
repz
pop
es
mov
call
leave
jp
pop
stos
mov
sbb
mov
push
sub
repz
xor
xor
pop
loop
mov
hlt
aad
sbb
xchg
test
jle
push
cld
xlat
adc
lret
jge
sahf
pusha
iret
jp
push
inc
rcr
pop
mov
aad
pusha
dec
jg
fldpi
xor
outsb
das
icebp
icebp
out
dec
jae
scas
dec
movsl
lcall
and
jne
gs
pop
mov
or
xchg
sbb
stos
in
mov
push
aam
xchg
mov
lds
mov
iret
out
negl
sti
add
out
test
ds
pop
jns
dec
inc
clc
shll
in
adc
cmpsb
sahf
mov
fiadds
loopne
mov
into
jo
mov
or
adc
dec
jne
jmp
adc
push
mov
pop
int
mov
push
dec
sub
inc
lea
add
mov
and
mov
jle
mov
adc
mov
cmc
and
mov
push
clc
dec
pop
inc
inc
leave
mov
mov
mov
pop
mov
xchg
adc
imul
or
out
gs
inc
je
or
mov
add
cli
mov
lods
push
inc
dec
jmp
fisubrs
ror
fwait
add
dec
pop
sbb
fnstcw
mov
cmpsb
xchg
into
cmp
je
icebp
ljmp
xchg
mov
inc
loop,pn
cmp
ret
and
pop
fdivl
rolb
aam
cmp
pusha
xor
mov
xor
addr16
insl
insb
jmp
lea
sub
xchg
mov
add
vmread
mov
sub
sbbb
add
jl
adc
mov
or
sub
mov
push
jmpw
pop
subl
mov
addr16
roll
in
repnz
dec
jno
shrb
arpl
ret
aad
sbb
jo
or
iret
mov
addb
or
add
insl
jae
xor
sub
and
ret
sbb
push
xchg
stc
push
xor
cmp
cmp
push
stos
lcall
pop
xor
jge
pop
jo
adc
cmp
inc
mov
lret
ret
mul
and
es
sbb
bound
jecxz
mov
push
rcr
push
xor
int3
sahf
push
loop
je
mov
xchg
mov
stos
dec
sarl
inc
xchg
mov
out
add
push
cmp
dec
jg
add
push
sbb
jmp
out
lret
dec
cli
sarb
popa
jecxz
inc
adcw
push
push
mov
sub
sbb
in
jbe
out
repnz
pcmpeqd
imull
mov
enter
in
add
and
ret
dec
rol
je
xchg
pop
insl
inc
add
push
les
jl
push
sbb
or
and
push
sub
jnp
and
mov
sbb
mov
mov
fsubl
mov
or
mov
push
cltd
inc
sbb
jo
jnp
mov
lods
adc
cmpsb
push
sub
test
mov
call
std
in
cltd
or
icebp
dec
cmp
adc
lds
insl
lock
xchg
movsl
push
outsb
adc
repz
sub
dec
sbb
orb
out
jo
xchg
mov
repz
test
xchg
jl
mov
lock
outsb
pusha
in
outsb
je
scas
adc
push
sti
out
insl
out
movl
stos
not
daa
jb
fucom
sub
lahf
jge
mov
dec
shrb
out
sbb
outsl
sbb
out
cmp
movsb
out
lcall
rcll
xchg
push
sbb
fidivl
or
mov
leave
sbbb
and
int3
cmpsb
fcoml
mov
cmp
addl
in
dec
int
loopne
fcoml
pop
cld
mov
in
or
cmpsl
cmpsl
add
out
xchg
stos
es
push
pop
push
mov
lock
andl
scas
push
add
cmp
lret
adc
and
iret
or
jne
dec
cmp
mov
aaa
jno
in
jecxz
and
icebp
mov
stc
adc
pushf
enter
lock
ja
dec
jae
fsqrt
xor
cmp
push
dec
cmpsb
jge
or
data16
push
push
scas
jmp
int
pop
xor
ret
cmp
out
jge
test
push
pop
orl
clc
mov
inc
xor
stos
loop
inc
pop
xchg
or
mov
popf
add
jle
clc
xchg
into
mov
xchg
add
or
inc
pop
and
sub
xlat
xor
out
jno
xchg
rol
sub
push
pop
rcrb
or
jne
lret
jns
mulb
cmpsl
push
sahf
icebp
pop
mov
jp
repz
mov
jecxz
pop
mov
push
loop
pop
push
cld
dec
test
test
out
test
fisubs
inc
push
push
jne
dec
js,pn
push
xor
scas
inc
cmpsb
arpl
in
mov
add
js
flds
cmp
mov
pop
ror
shrl
fstpt
push
xor
cmpsb
jnp
inc
pop
cmp
mov
push
aaa
fstps
jbe
mov
sub
pop
nop
inc
lods
fldenv
jb
pop
inc
shrl
and
shlb
fcomp
mov
ret
cli
pop
sbb
mov
fcmovbe
inc
scas
push
ja
mov
pop
es
xor
bnd
mov
push
hlt
lcall
push
test
dec
ret
rep
and
call
orb
push
std
add
jle
inc
aam
pop
push
mov
xor
pop
repnz
sub
inc
call
subb
inc
sbb
mov
jg
enter
sahf
ret
add
jmp
mov
insb
jns
push
cmp
xchg
xorl
shll
dec
std
xor
scas
fisttpll
test
cli
rcl
push
cs
mov
or
cld
inc
cli
or
xchg
repz
and
es
mov
mov
les
dec
jle
and
fadds
and
sbb
cmp
roll
adcl
ret
ret
sbb
arpl
xchg
gs
xor
rcll
jg
fistps
cmp
mov
pop
jmp
add
js
outsb
fildl
xchg
and
insb
or
aaa
lea
fsubs
pop
sbb
test
pop
int
xor
call
ret
test
dec
pop
dec
dec
jl
jmp
xor
ret
pop
mov
pop
ret
mov
lcall
int
in
movsl
dec
repz
mov
das
mov
bswap
hlt
sbb
mov
mov
dec
fimuls
insl
std
sub
scas
dec
dec
mov
int3
inc
imul
dec
cmp
test
dec
cmpsl
mov
jp
inc
jg
inc
cmp
or
push
fwait
pop
lret
mov
add
outsb
aam
imul
sub
adc
sbb
mov
fstpt
cmc
fisubs
testl
or
add
in
push
ret
pop
dec
ljmp
fdivr
sub
xchg
orl
ljmp
sahf
das
and
mov
ret
xchg
mov
xchg
fisttpl
in
cmp
leave
and
aam
mov
sub
mov
cmp
add
call
inc
pop
mov
loopne
push
lret
rcrb
sbb
hlt
jae
xor
add
test
add
jp
rorb
xor
xchg
inc
jno
sti
fs
jl
push
xlat
sbb
cmpsl
dec
xor
push
lahf
stos
cli
pop
fcompl
dec
mov
cmp
adc
cli
out
lret
push
add
scas
mov
mov
pop
sub
mov
cmpsb
jae
mov
adcb
shl
mov
data16
jnp
stos
mov
jnp
pcmpeqd
dec
stos
imul
pusha
shll
aaa
add
xor
je
and
sub
mov
lahf
inc
idivl
inc
test
add
rcl
dec
mov
mov
sbb
iret
out
cmpsb
push
lcall
test
test
mov
inc
lods
fidivrs
gs
add
arpl
add
pop
sbb
jl
jp
or
sub
test
addr16
repnz
push
mov
lea
or
or
inc
int3
dec
inc
loope
mov
fucomip
aaa
rcrl
mov
jns
popf
xchg
dec
xor
rcr
imulb
xorb
jmp
pop
jb
inc
or
inc
testb
push
int
cmp
call
ja
inc
xor
sub
lret
cltd
insl
push
fsubr
sub
inc
pop
addl
push
mov
aas
loopne
mov
push
call
add
les
pop
fidivrs
stos
es
dec
js
mov
rorb
int
xor
sub
movsl
movsl
push
mov
in
shll
mov
addl
jp
mov
in
xor
or
test
cmp
sub
outsl
fisttpll
aaa
mov
mov
test
mov
les
rorb
jp
lods
insl
lds
push
sbb
xchg
out
jo
aaa
fmul
pop
and
jne
xchg
cmc
or
jo
nop
ret
add
or
cli
negb
mov
dec
push
jnp
lret
cltd
scas
adc
addr16
repnz
push
xchg
icebp
test
pop
adc
xor
dec
test
jo
lock
movl
xor
add
xchg
mov
fstpl
jle
dec
inc
jecxz
dec
jo
fiadds
rorl
outsb
movl
mov
xchg
jmp
nop
lods
arpl
jle
mov
sub
or
add
pop
xchg
iret
xor
test
das
test
js
jb
mov
push
jne
jb
stos
dec
dec
mov
jle
jmp
ret
sahf
inc
dec
sarb
imul
adc
inc
ds
sub
push
test
subb
jle
nop
xchg
xorb
cmp
repnz
push
push
sbb
inc
push
pop
ja
push
add
shll
aas
jecxz
pop
sar
test
push
xchg
pop
stos
pop
dec
xor
lods
lds
int3
ret
lock
ret
add
push
cmp
jne
jecxz
js
test
addr16
mov
cmpsb
in
cld
sbb
pop
push
push
scas
push
cmp
push
adc
movsl
nop
jo
out
dec
lock
push
andl
aam
pusha
fs
mov
push
in
std
cmpsb
add
adc
jge
in
jg
xchg
mov
mov
arpl
shll
pop
sub
out
or
out
ficoms
test
jnp
fsubrl
add
imulb
lcall
mov
mov
push
lret
push
mov
test
outsl
push
cmc
rcl
cmpsl
cmpsb
mov
mov
push
test
dec
lret
mov
lret
push
inc
in
inc
xchg
icebp
mov
sub
cltd
movsl
and
add
cmp
and
add
add
cmp
xor
ret
call
pop
xchg
push
dec
cmp
mov
test
mov
xchg
out
push
lahf
pop
ret
ds
xchg
xor
xor
xor
dec
lret
pop
ret
pusha
js
pusha
shl
add
das
call
mov
orl
imul
ficoml
movsb
adc
sahf
stc
std
jp
lock
sub
in
ja
loopne
fs
mov
outsl
pop
mov
add
fwait
add
jg
pusha
je
cmp
pop
adcb
add
push
xor
xor
out
cs
cltd
inc
mov
lret
rolb
inc
lcall
scas
clc
int3
test
xchg
sub
or
int3
pop
mov
aam
bound
add
pop
jbe
cmpsb
xchg
inc
xchg
notb
xor
movsb
add
mov
xchg
int3
mov
loope
cmp
inc
bound
mov
jg
xchg
push
inc
mov
fcoms
mov
dec
mov
dec
dec
outsl
cmp
aad
xchg
sbb
pop
mov
xlat
mov
sti
pop
ljmp
dec
mov
jle
xchg
sub
xchg
test
xor
mov
adc
inc
pop
and
shrl
popa
dec
add
adc
out
xor
into
inc
repz
in
adc
and
mov
es
int3
xlat
movsl
sahf
ja
sbb
loopne
std
nop
add
mov
add
mov
sbb
fisubl
jg
out
inc
frstor
push
adcb
mov
imul
jg
inc
stc
test
inc
imul
movsl
and
push
sti
and
add
dec
aaa
xchg
jnp
imul
andl
popf
rcll
shrl
push
sahf
xor
jmp
out
subl
imul
stc
push
mov
gs
rolb
add
add
pop
cmp
or
cmp
jno
mov
add
iret
loop
out
out
repz
bound
movsl
pop
jp
xchg
in
dec
xor
or
adc
loope
out
jo
jle
and
sbb
jae
pop
or
pop
xor
xor
movsb
mov
pop
xor
inc
push
pop
movsl
xor
sar
mov
mov
aam
sub
jl
arpl
lods
int
cli
cltd
mov
aam
loopne
das
mov
les
test
or
arpl
roll
push
mov
cs
sub
es
sub
test
cmc
push
decb
cmpb
cltd
cmp
xchg
outsb
aas
push
push
sub
or
rorb
mov
outsl
mov
adc
and
mov
cli
dec
pop
cmc
int
xor
and
mov
cli
cwtl
lock
mov
call
inc
push
sbb
and
test
jmp
cmp
lahf
push
or
xor
stos
dec
push
inc
test
test
cmpb
jnp
pop
sbbl
mov
adc
aad
faddl
or
mov
stos
hlt
sti
dec
cmc
push
fdivrs
xor
dec
lahf
dec
jle
adc
add
aaa
pushf
stc
daa
adc
mov
adc
inc
popf
jge
outsl
dec
xor
mov
fldenv
sbb
sti
sti
xchg
and
cmp
and
repnz
fwait
mov
mov
xor
pop
mov
adc
lock
in
xchg
sub
aam
scas
std
lret
in
lods
pop
loop
push
lds
mov
movd
stc
int
je
cmp
and
scas
jae
xchg
repnz
cld
xor
cs
push
ss
add
sub
or
xchg
aaa
pop
xor
mov
jp
lea
enter
adc
iret
xchg
mov
add
xchg
lcall
call
xchg
jmp
movsb
inc
testb
mov
push
or
ds
lahf
xchg
xor
xchg
cld
cmp
push
stc
addr16
test
push
dec
and
out
inc
mov
xchg
loope
sti
loopne
gs
inc
ret
jne
sbb
popa
dec
cmp
and
das
fisubl
mov
fisubl
push
dec
push
jnp
pop
iret
adc
call
insl
ficomps
inc
push
sbb
jmp
sub
xchg
mov
cwtl
movsl
fld
pushf
jne
push
cld
xchg
push
sbb
movsl
jae
faddl
loop
and
mov
jno
cmp
clc
in
lds
loop
xchg
das
sbb
xor
cmpsl
int3
inc
ret
inc
mov
adc
mov
stos
dec
mov
pop
push
sub
pop
xchg
cld
jb
dec
inc
les
jl
insl
push
sub
jle
outsb
lahf
fmull
mov
jne
pop
jl
aam
insl
aam
xlat
xorb
mov
inc
lock
xchg
hlt
xor
cmp
je
inc
pushf
sbb
outsb
clc
nop
and
addr16
mov
add
lcall
shl
popf
in
mov
lcall
jmp
repnz
or
xor
jne
mov
pop
xlat
jmp
push
es
cmp
and
xor
fidivl
mov
flds
rcll
jg
sbb
loopne
divb
mov
int3
sub
dec
or
dec
adc
test
cmp
mov
lds
add
int3
mov
sbb
jl
xchg
rcr
inc
or
xchg
xor
push
sub
jge
cmp
xor
cltd
divb
mov
negb
daa
jl
in
pop
xor
cmpsl
imul
dec
push
cmp
adc
lcall
hlt
out
jbe
pop
jno
mov
or
and
mov
dec
imul
jp
cli
and
jp
mov
test
pop
or
leave
jge
ret
jg
push
adc
js
xor
shll
xchg
frstor
lock
out
lret
jb
inc
fisttpl
pop
mov
or
inc
iret
addr16
data16
mov
xchg
mul
rep
loope
popf
imul
int3
fisttps
cmp
loope
mov
adc
mov
push
adc
mov
rclb
int
fisubs
xor
jge
push
mov
and
add
leave
xchg
outsb
push
leave
outsb
pop
mov
add
test
sti
jae
popf
lret
cwtl
div
incl
pop
out
sbb
scas
pushf
jecxz
cs
rorl
dec
push
dec
data16
in
loope
push
test
ljmp
push
cmpsl
outsl
mov
popf
sbb
lods
push
nop
ss
fdivp
sub
jno
stos
decb
sub
js
push
mov
addr16
popa
xchg
sub
dec
cmp
mov
mov
pop
sti
jns
enter
iret
loope
dec
cwtl
test
mov
push
ljmp
in
inc
aaa
lock
lcall
arpl
lods
add
fs
lcall
imul
fs
cmp
mov
jnp
aas
xchg
mov
imul
pop
lods
add
mov
js
clc
and
pop
jp
lahf
jne
in
in
mov
xor
pop
aam
add
cmp
xor
in
pop
scas
push
in
mov
sub
cmp
adc
or
xchg
add
sbb
cwtl
dec
or
shlb
and
icebp
scas
test
or
add
add
mov
enter
and
add
outsb
cltd
or
xor
rorb
inc
test
inc
ds
int
sub
test
ficompl
adc
repnz
incl
and
push
mov
push
scas
adc
pop
test
fmuls
sub
popf
das
dec
mov
dec
xchg
mov
or
sub
lcall
mov
iret
dec
mov
ja
arpl
and
cmp
popa
das
lock
dec
push
or
gs
repnz
in
lcall
adc
push
test
and
jp
insb
xchg
adcl
adc
divb
inc
loop
loope
cmp
mov
sub
push
push
fcompl
jno
cltd
testl
ss
mov
lock
cmpb
int
sbb
test
cmp
std
pushf
scas
loop
leave
andl
out
jl
scas
add
loopne
mov
add
xchg
mov
push
sub
in
ret
jl
or
lret
xchg
lret
inc
lret
aas
out
stc
push
adc
cwtl
stos
bound
mov
loope
scas
mov
fisubl
adc
shlb
repz
fcoml
inc
into
aas
lock
jno
inc
jae
stos
dec
mov
sub
mov
in
or
adc
mov
and
lcall
mov
fnstcw
mov
mov
and
movsl
imul
out
inc
pop
out
ss
movsb
sbb
daa
jno
jecxz
pop
dec
out
or
dec
incl
xor
push
pushf
aad
leave
xchg
sub
dec
jg
mov
jg
jo
rorb
adc
sbb
fs
mov
out
lods
enter
rcr
push
inc
insl
int
xchg
push
or
jo
sbb
and
into
jl
arpl
jg
inc
test
push
add
loope
lods
fistpll
int3
divb
lods
mov
aam
xchg
pop
aam
inc
cmp
jl
adc
jns
sbb
mov
mov
leave
mov
ficompl
add
int3
imul
and
pop
stos
out
hlt
xchg
incb
mov
fxch
xchg
clc
push
dec
jbe
test
xor
push
test
sub
jne
iret
into
inc
lret
jge
cwtl
xchg
cmpsb
insb
jae,pn
push
test
sarb
rsqrtps
sub
dec
xchg
mov
and
dec
xchg
inc
inc
insl
xchg
xchg
pop
add
lds
lret
adc
scas
mov
addl
out
in
popf
push
xchg
mov
gs
movsl
mov
scas
mov
mov
lahf
inc
aad
rcll
dec
pop
xor
lret
scas
rcrl
mov
add
fnstsw
push
mov
addr16
inc
rcrb
mov
in
fldpi
mov
jb
mov
mov
xchg
inc
xlat
push
lea
xor
rorb
rcll
mov
in
sbb
add
and
mov
stos
dec
movsl
push
cmp
xchg
sub
sbbl
sahf
scas
outsb
mov
xor
sub
pop
sbb
or
xor
push
mov
jnp
sahf
dec
inc
ljmp
sub
cmc
lock
dec
jp
testl
and
rcrl
lea
pop
jmp
mov
fcmovu
stos
scas
xchg
cmp
adc
sub
mov
outsl
fcomip
into
dec
out
ja
es
mov
jo
fildll
es
ret
js
out
into
addr16
lcall
or
lds
shrb
mov
adc
testl
push
inc
outsb
pop
rol
loop
and
movsl
shl
push
fidivrs
inc
add
loope
push
lahf
push
fs
inc
test
mov
sub
xor
push
test
test
int3
and
dec
shrb
imulb
fists
pop
jno
mov
dec
pop
mov
push
sahf
stc
idivl
dec
test
xchg
jns
popf
in
out
jecxz
xchg
sub
sbb
adc
inc
out
pusha
push
imul
repz
in
lods
sbb
scas
pushf
ror
lahf
push
pop
xchg
xor
mov
orl
icebp
fidivrs
mov
scas
nop
cmp
sub
outsb
xor
sub
inc
inc
dec
jg,pt
lock
adc
insb
jae
cmp
leave
pop
cmp
andl
shlb
mov
dec
lods
sbbl
out
daa
mov
xchg
dec
repz
dec
inc
mov
mov
repnz
pop
cmp
push
out
inc
mov
and
out
ds
dec
pop
mov
adcl
stos
cmp
int
lods
lea
aas
push
xlat
insb
fcompl
out
pop
ror
test
rcrl
fstp
add
scas
nop
push
or
mov
cwtl
xor
movsb
loop
ljmp
nop
out
sub
xchg
xor
pop
mov
xchg
popf
insb
movsl
cmc
xchg
ret
xchg
sbb
gs
add
lods
cmp
dec
sbb
popa
add
out
out
daa
inc
mov
lods
sbb
mov
lods
fs
and
mov
mov
pop
cvttps2pi
pushf
mov
pop
inc
xor
repnz
push
aaa
jae
mov
test
mov
aad
icebp
out
mov
cwtl
arpl
or
stc
das
lret
xchg
out
es
rorl
xchg
sbb
add
loopne
jno
rorl
xor
or
mov
jb
loope
leave
shl
les
aad
pushf
test
shrl
rclb
sahf
test
mov
or
ficoml
or
mov
sbb
sbbl
mov
fwait
leave
adc
into
test
mov
mov
fldcw
shrl
ficoml
mov
xor
mov
cld
pop
cmp
jmp
mov
xchg
pop
data16
push
imul
push
and
ja
fstp
les
mov
cwtl
pop
mov
jl
lock
cmp
jns
inc
or
arpl
aad
push
sbb
cld
jge
sbb
divb
and
in
xchg
jmp
cmp
hlt
lcall
xor
lea
push
jbe
scas
xor
into
test
lret
int3
jp
xchg
push
add
pop
push
notl
lret
inc
inc
inc
cmp
test
cld
fimuls
and
test
dec
push
dec
adc
js
cmc
out
pusha
cld
push
xlat
adcb
dec
dec
sahf
enter
xchg
pop
aam
push
mov
cmp
mov
imul
mov
leave
mov
shrb
push
xchg
test
or
mov
dec
sahf
rolb
ss
mov
xor
enter
push
shll
ficomps
fstpt
in
arpl
icebp
pop
mov
mov
ret
jmp
dec
stos
xchg
mov
sarb
fcmove
pop
stos
clc
dec
cltd
mov
cld
out
fwait
push
push
or
aas
pop
stos
mov
sub
mov
inc
mov
stc
mov
aad
scas
xchg
and
push
or
nop
and
sub
inc
xor
test
sbb
rcrb
adc
lock
loope
inc
sub
mov
sub
inc
mov
push
jle
mull
push
std
out
inc
xchg
lods
mov
pop
repz
popf
test
jmp
movsl
xchg
cmpsl
add
fwait
push
mov
adc
xchg
sti
xor
mov
push
add
inc
inc
lret
addr16
mov
movsb
xchg
mov
dec
sbb
sbb
repz
jbe
mov
repz
fwait
mov
jl
pop
fnstcw
sar
mov
push
and
or
dec
nop
cmp
mov
jecxz
adc
push
sbb
in
inc
add
lods
mov
in
sarb
pshufw
stc
dec
loop
sahf
xchg
fidivs
mov
popa
xchg
mov
xchg
push
push
ret
xchg
cmp
test
std
call
imul
mov
or
xchg
cmp
call
enter
inc
add
and
pushf
inc
icebp
sbb
jge
fdivs
stc
cmpsb
sub
ret
in
test
out
cld
js
cmpsl
mov
push
sahf
sub
add
stos
xor
ret
in
movsb
rorb
sbb
add
mov
lods
push
sub
lcall
je
lret
adc
scas
insl
inc
jp
mov
adc
push
aas
pushf
jmp
sbb
cli
sahf
outsl
or
mov
mov
cs
dec
mov
cltd
mov
and
lods
mov
add
adc
mov
lahf
dec
mov
lcall
push
fmul
ret
movl
cmp
push
add
daa
test
bnd
mov
push
insl
add
mov
push
and
out
lret
mov
scas
mov
gs
jp
pop
push
test
add
nop
out
scas
fstps
aas
ja
dec
pop
mov
cmp
mov
mov
movsb
mov
and
mov
sub
and
pop
push
pop
outsl
enter
sbb
mov
mov
filds
adc
popa
movsl
rclb
or
outsl
subb
jl
jnp
dec
mov
sbb
and
lds
repnz
in
xor
mov
adc
mov
and
push
cmp
and
dec
outsb
sbb
sub
rcrb
inc
and
arpl
scas
jno
mov
or
jmp
stc
xchg
fmull
orl
sub
notb
dec
sbb
push
test
mov
ret
scas
mov
lods
sbb
imul
mov
mov
test
mov
data16
test
or
sub
fbld
aad
js
mov
aas
jg
cmpb
xchg
lahf
cmpsb
sbb
stc
xor
sub
stos
and
add
xor
jmp
int
loop
xor
jne
pop
mov
inc
cs
jmp
ret
out
cmp
test
icebp
mov
xchg
mov
dec
lahf
fwait
sti
mov
pop
je
wbinvd
or
stos
mov
js
das
insl
pop
sbb
rclb
mov
insl
push
inc
inc
adc
pusha
push
inc
pusha
es
inc
out
add
mov
jbe
jle
in
push
jle
arpl
out
daa
mov
jno
mov
mov
lods
clc
rorb
pop
xchg
addr16
test
aas
add
cmp
pop
pop
pop
push
je
push
dec
sbb
xchg
xchg
sbb
es
mov
sbb
mov
jg
push
jp
push
lea
pop
ljmp
lahf
dec
das
xor
xchg
xchg
insb
shrl
mov
cltd
xor
inc
xchg
cmp
jbe
fadds
out
jno
dec
ds
mov
les
lret
mov
movsb
mov
or
cmp
adc
lahf
aaa
sbb
xchg
cltd
sbb
fcmovu
repz
push
icebp
xchg
ret
mov
fwait
jbe
testl
lcall
add
aam
sub
xchg
jg
pushf
outsb
pop
fucomi
adc
movsb
cwtl
popl
add
pop
mov
pushl
or
add
jp
fwait
mov
inc
jnp
adc
lea
bound
jnp
dec
aaa
xchg
sub
enter
cld
stos
dec
sbb
lahf
outsb
fs
push
pop
imul
xor
rclb
movsb
mov
iret
ret
das
or
jbe
fucomi
jae
les
sub
scas
mov
ss
call
pop
dec
shll
lods
movsl
sbb
pop
hlt
loopne
mov
es
call
add
int3
pop
xchg
mov
pushf
fnsave
insb
add
jne
add
sti
xorl
pop
mov
pushf
fidivs
inc
push
aaa
jnp
orb
pop
lcall
adc
push
or
add
std
out
mov
push
pop
and
mov
icebp
testb
and
lret
dec
scas
testb
out
xchg
dec
mov
jnp
je
in
idivb
mov
sbb
cmp
sub
sbb
mov
mov
je
dec
cmp
movsb
mov
inc
in
loopne
shrb
and
fcmovnu
jb
sub
fistpl
dec
mov
je
lods
into
clc
and
dec
dec
sbb
or
push
aaa
int3
xchg
push
mov
fnsave
repz
lods
addr16
aaa
mov
add
mov
push
cmp
in
sub
inc
aad
xchg
iret
xchg
cmc
dec
mov
sahf
ret
js
xor
out
lods
notl
push
lret
or
fmull
cld
xchg
movb
push
mov
or
or
jg
lods
pop
xor
mov
cmp
or
jl
mov
jbe
iret
xor
rorb
push
mov
adc
inc
lock
fucomip
iret
adc
std
cmc
popf
movsb
pushf
dec
enter
in
pop
and
mov
mov
sub
push
push
or
push
inc
cmp
sahf
cmp
ja
or
pop
cs
mov
ror
mov
push
scas
and
mov
inc
mov
mulb
jp
mov
xchg
mul
add
rclb
rol
push
ss
pop
std
jb
push
jmp
test
jle
mov
push
mov
sbb
push
test
push
fiaddl
pop
ja
clc
add
cmp
add
sbb
inc
mov
cmp
ret
rorb
imull
rol
je
je
xlat
call
sub
xor
roll
aaa
jo
loope
push
insl
xor
or
lods
xchg
sub
add
xchg
push
xchg
mov
out
call
push
add
les
jp
fnstsw
inc
jle
push
xchg
sbbl
add
je
popa
lods
ds
jno
cmpsl
sub
data16
leave
xlat
sti
dec
fmul
test
dec
sbb
sbbl
aas
xor
xor
pop
mov
add
loop
xor
leave
sub
add
movsb
or
inc
stos
test
xchg
push
adc
push
xor
xchg
fwait
and
in
xchg
pushf
loop
imul
mov
push
xchg
jmp
into
and
xchg
xchg
mov
lret
ror
adc
mov
and
loope
pop
mov
in
mov
andb
sub
stos
lret
sbb
cwtl
cmp
add
repnz
fldt
les
outsb
stos
add
lods
int3
pop
sbb
ja
jno
sub
and
mov
push
xor
dec
stos
push
dec
inc
rorl
xchg
ret
loopne
mov
jecxz
fcompl
cmp
cmp
adc
mov
in
inc
cmp
sbb
clc
add
data16
mov
call
rorb
jae
cld
xor
insl
jo
aad
ja
or
xchg
mov
mov
pop
and
sbb
mov
daa
and
push
in
jne
add
fistps
jno
bound
aaa
add
push
cli
stos
movsb
arpl
add
scas
fs
inc
add
xchg
ds
sbb
outsl
sarl
mov
sbb
push
sahf
ljmp
xchg
push
lds
fsubrs
xor
xor
add
xchg
add
jbe
stos
jne
lea
pop
fucomp
mov
sbb
ret
and
push
arpl
out
jecxz
xor
aam
loope
xchg
cmpl
fcompl
insl
aas
jp
popa
inc
or
shlb
lret
xchg
pop
xlat
pop
adc
sub
aaa
negl
mov
jge
dec
ljmp
add
ror
jecxz
pop
in
lods
dec
cli
ret
lock
pop
push
add
cmp
scas
clc
mov
int3
or
lret
icebp
fnsave
and
imul
sub
pop
mov
roll
add
xchg
mov
add
mov
lcall
inc
dec
mov
les
push
mov
or
push
xchg
inc
negb
dec
push
pop
push
xchg
sub
mov
outsb
jl
inc
jp
mov
mov
mov
fisubrs
lret
mov
int
jl
dec
loop
xor
movlps
ficoml
clc
push
jb
dec
push
sbb
and
cmp
push
mov
lea
and
add
aad
cmp
popf
imul
in
pop
loope
adc
out
pop
jge
inc
call
fcoms
push
jnp
popf
test
mulb
pop
pop
cmc
or
pop
imul
lret
enter
stc
bound
testl
into
xchg
repz
pop
inc
dec
into
inc
sub
adc
popa
dec
mov
lahf
orb
pop
mov
shlb
into
cld
lcall
or
fs
mov
jo
pushf
out
movsl
add
call
push
test
or
aad
adc
adc
mov
jle
xor
lret
movsl
push
int3
jbe
out
push
popf
fbstp
mov
imul
xbegin
outsl
lret
push
movsl
mov
lds
mov
sub
stc
daa
aas
call
fsubrl
jle
jbe
mov
fstpt
fnstsw
mov
jns
sahf
ficomps
popf
lods
and
dec
fcoml
es
int3
mov
test
sub
stos
cmp
in
insl
loop
mov
in
jmp
ret
fnstenv
movsb
sbbb
fsubrs
mov
push
mov
cmpsb
dec
sarl
xchg
xchg
mov
es
idiv
inc
mov
push
and
mov
bnd
add
and
mov
cli
aad
or
push
mov
inc
fnstsw
ret
jmp
cmp
stos
mov
jbe
xchg
push
gs
pop
fwait
push
pop
dec
dec
or
xchg
ret
es
pusha
dec
ss
loop
cmpsl
ret
loopne
or
jmp
push
sbb
mov
addr16
add
xor
jb
les
cs
shlb
or
push
movsl
xchg
mov
sub
das
mov
jmp
xchg
cmp
push
or
pop
mov
lds
ja
outsb
add
sti
cmp
jns
jle
rcr
adc
test
repz
add
jae
mov
movsl
in
push
outsl
aad
shrb
push
test
sahf
out
xchg
sti
imul
ret
adc
fidivrs
xchg
clc
orl
sub
fdivrs
adcl
sub
mov
js
jns
fidivs
add
push
sbb
test
stos
lods
ret
jae
rorl
jmp
in
dec
cmp
mov
xor
hlt
push
mov
cs
xchg
adc
and
test
je
scas
shlb
insb
stos
loope
push
jno
mov
sbb
mov
mov
inc
mov
pop
add
fcoms
shlb
sub
and
inc
pop
scas
call
add
nop
lock
push
xchg
or
mov
jb
xor
inc
mov
insb
pusha
fld1
mov
repz
stc
and
or
lods
sbb
idivb
cmc
out
jbe
enter
jg
fdivs
jl
aas
leave
mov
push
and
and
cld
cmpsb
out
enter
or
push
or
cmp
push
into
mov
movsb
cmpsb
lock
mov
out
flds
or
adcl
inc
pop
mov
mov
out
and
fisttpll
ss
movsb
mov
je
push
mov
lcall
push
es
in
sbb
jbe
mov
add
dec
xchg
aas
xchg
add
gs
lret
jmp
push
and
cmpsl
js
add
jo
ret
and
jmp
xchg
pop
int
cld
jg
shlb
nop
stc
cmp
mov
mov
nop
fmulp
push
mov
mov
cmpsl
cmpsb
mov
adc
sbb
testb
dec
shrl
push
in
pop
loope
stc
test
dec
pop
lahf
sub
push
stos
cs
hlt
mov
repz
pushw
sbb
adcb
add
push
dec
cmc
ret
dec
mulb
cli
xchg
ss
cmp
test
sbb
mov
ldmxcsr
add
xchg
incb
sar
pop
inc
xor
out
cmpsl
dec
push
in
out
sarl
sbb
adc
imul
outsl
jo
dec
push
dec
stos
mov
inc
je
popa
lds
movsb
data16
fidivl
loop
shlb
cld
and
scas
fwait
add
test
xor
mov
daa
cltd
push
dec
adc
jmp
jbe
enter
adc
dec
scas
sub
jne
inc
sub
leave
dec
inc
mov
mov
imul
int3
mov
loop
mov
out
mov
fs
popl
or
pop
mov
imul
cltd
dec
or
mov
call
fcoms
mov
cmpsl
hlt
xchg
outsb
fdivrl
add
mov
jmp
icebp
sti
cmpb
sbb
dec
mov
lahf
fstp
sub
sub
xchg
xchg
or
bswap
arpl
cwtl
dec
xchg
or
scas
stc
jmp
arpl
out
andl
jl
lock
mov
imul
lods
hlt
push
movsl
andl
pusha
mov
or
or
out
cwtl
mov
lret
and
jge
ss
mov
xchg
lea
mov
popa
push
lret
mov
ljmp
nop
jmp
inc
aaa
push
jae
int3
ja
lahf
fs
pop
mov
loopne
sbb
jno
jae
stos
sub
fists
int3
add
inc
push
pop
or
or
xor
loopne
or
loopne
sub
ret
scas
pop
mov
jno
mov
or
clc
jg
aas
pop
aaa
int
divl
shll
or
or
aaa
mov
and
sarb
jns
inc
roll
jbe
xor
repnz
out
jl
dec
test
mov
and
mov
cmp
cmpl
popa
cs
leave
or
xchg
dec
ret
push
jle
jmp
insb
pushf
lea
bound
xchg
movnti
xor
repz
cmp
mov
mov
xor
sbb
xchg
ja
insl
mov
call
jns
std
fildll
pop
cmp
popa
cli
mov
adc
dec
push
ret
scas
leave
dec
mov
sbb
xchg
or
sbb
jbe
es
fwait
aaa
cmc
shlb
sub
fists
movl
pop
and
xchg
dec
pop
adc
and
movl
push
jge
jo
push
sbb
aas
sub
ret
cmc
jg
sbb
add
push
pushf
hlt
mov
push
in
mov
addr16
fldcw
xchg
mov
sub
stos
test
mov
cmpsb
sub
jecxz
pop
testb
aad
sub
aad
test
push
push
xor
fistpl
sbb
popf
sbb
mov
lret
mov
ljmp
sbb
pop
jnp
adc
std
popa
gs
aam
sbb
insl
je
pushf
pop
pandn
xchg
and
or
andb
dec
lahf
lock
rcrb
mov
lods
pop
fsub
pop
jns
gs
sub
inc
js
idivb
or
jg
xor
les
push
add
fildl
rcll
test
std
movsb
daa
ret
adc
dec
sbbb
jl
dec
filds
mov
xchg
loope
mov
sbb
adc
pop
ss
fsubs
mov
iret
jp
jnp
mov
mov
jo
sub
daa
shlb
lahf
jle
bound
in
fmuls
rorl
cmp
mov
lret
xchg
push
divl
mov
mov
jmp
dec
iret
fdivrl
les
or
fnstcw
movsb
inc
dec
mov
popa
jbe
cwtl
pop
push
scas
lret
or
je
mov
xor
jmp
sti
pusha
mov
dec
or
lret
rep
xor
cltd
or
ja
inc
repz
fcmovnbe
adc
and
push
mov
cltd
dec
sbb
xchg
cmp
lahf
stos
pusha
mov
xor
fs
movsl
pop
scas
ds
mov
add
cmp
fs
test
cmc
out
or
inc
orb
push
popa
fld
clc
pop
and
inc
or
test
and
call
sti
cmp
stos
loop
aad
movsb
shlb
addr16
test
mov
mov
mov
ret
loope
sub
cltd
pop
popf
xchg
mov
push
and
push
mov
or
push
clc
jo
js
sbb
cmp
popa
cmp
stos
sbb
rorb
xor
inc
sbb
movsb
lds
mov
push
in
in
repz
popa
bound
sub
loope
outsb
pop
jecxz
imul
push
push
in
xchg
mov
leave
out
inc
daa
lcall
pavgw
lea
mov
pop
dec
mov
fdivrl
push
lds
movsb
in
xchg
push
iret
loope
sbb
mov
ret
fst
leave
dec
add
mov
sahf
loop
push
mov
js
mov
leave
pop
outsl
push
in
clc
pop
andb
jle
dec
dec
add
daa
mov
xchg
sbb
push
addr16
into
testb
push
or
pop
ficoms
pop
mov
cmp
aaa
or
pop
inc
jae
ret
adc
pop
movsl
imul
mov
pop
sub
adc
negl
xchg
sbb
insb
or
xchg
jmp
pop
cmp
pop
adc
pushf
pop
xor
scas
xor
cltd
das
push
push
push
xor
mov
sbb
call
xchg
sbb
pusha
mov
lret
jmp
iret
push
and
mov
jge
cmp
dec
sub
scas
sbb
mov
out
stc
repz
jle
pop
jb
xorl
flds
mov
mov
or
mov
movsb
leave
lds
fimuls
or
pop
xlat
mov
pusha
xor
mov
fucomi
xor
mov
inc
xchg
and
lcall
lods
adc
cmpsb
pop
js
cmp
les
cwtl
mov
lds
jecxz
xor
cmpsl
out
and
pushf
insl
add
pop
push
in
pop
loope,pn
mov
in
mov
jg
fidivl
lahf
cmpsl
cld
sub
adc
sbbl
insb
push
inc
test
or
aam
mov
xchg
out
add
loope
les
gs
cmp
fmul
sbb
pop
mov
lods
sbb
adc
xchg
jne
cmp
jb
ja
mov
rol
cmp
or
sub
cltd
es
bound
inc
andb
cld
cmc
push
dec
mov
addr16
pop
xlat
sub
leave
add
inc
jmp
cltd
or
push
mov
fists
into
mov
roll
mov
aas
or
std
jne
inc
mov
in
mov
dec
jns
pop
clc
or
pop
mov
hlt
and
dec
scas
inc
and
or
das
push
mov
jecxz
mov
sbb
jns
xchg
pcmpgtw
pop
jge
cs
or
jp
cltd
push
and
scas
push
es
shlb
hlt
inc
xor
cmpsl
and
out
mov
mov
add
mov
sbb
xchg
movsb
in
pop
or
int
in
clc
fcomip
xchg
push
dec
push
stc
sub
fs
push
add
push
sub
shl
cmp
push
adc
xchg
jne
sub
iret
repnz
lock
cmp
xor
lods
pop
adc
mov
lret
aaa
or
fistl
add
cld
jno
loopne
pop
shrl
imulb
dec
lahf
xor
mov
push
inc
adc
cmp
lret
pop
stos
cmc
filds
inc
mov
cmp
cltd
mov
mov
outsl
imul
mov
sub
imul
in
fwait
mov
inc
or
mov
sub
sbb
into
jnp
or
push
sti
inc
in
xchg
mov
cs
xor
cmpsb
adc
adc
lret
dec
pop
repnz
and
out
dec
mov
sub
es
lahf
notb
out
xorb
or
jnp
mov
cs
and
sar
cltd
push
mov
inc
repz
negb
das
stos
inc
cld
or
das
mov
ret
sbb
inc
mov
rcrb
mov
mov
jge
pushf
jnp
sarl
jle
mov
mov
push
iret
stos
mov
imul
xor
adc
scas
xchg
sub
leave
push
incb
mov
add
std
cmp
dec
jbe
cmp
fmull
in
ja
shll
loop
sub
dec
mov
dec
sbb
mov
enter
or
xchg
sbb
ret
outsb
lock
jle
cmpl
jo
sbb
mov
cwtl
and
mov
or
dec
in
push
jge
or
stos
mov
push
push
jno
inc
xlat
mov
or
and
xchg
xchg
inc
and
xchg
pop
repz
aad
leave
lea
jg
xchg
int
std
outsl
sub
jl
inc
sbbl
xor
xchg
mov
xchg
movsbl
jl
outsb
loop
sbb
je
shr
mov
xchg
pop
imul
push
push
pop
sub
lds
mov
dec
cmp
mov
loop
or
adc
mov
lret
repz
sub
mov
imul
pop
cmpsl
imull
mov
jne
fcmovbe
cmp
pop
adc
loopne
out
pushf
mov
push
mov
in
and
sbb
xchg
lock
adc
in
movb
mov
lea
cmp
xor
pop
fldl
test
out
in
pop
jno
mov
mov
sub
out
jo
mov
jle
fnclex
mov
popl
dec
and
je
ja
and
inc
sbb
cli
in
mov
dec
ds
sub
and
mov
int3
testl
pop
cs
inc
xchg
lea
mov
outsb
loopne
inc
pop
loope
adc
cmpsl
mov
test
dec
push
add
or
adc
loop
ds
fldenv
out
push
movsl
or
outsb
push
ljmp
xlat
mov
fptan
sub
sub
mov
pop
outsl
push
lds
sub
lods
adc
aaa
dec
pop
clc
stos
or
pop
xchg
gs
push
test
jp
aaa
xor
cmpsb
scas
dec
test
pop
idiv
sub
ret
push
outsb
inc
pop
out
ds
outsl
jle
adc
push
dec
dec
pushf
int
pushf
data16
xor
sti
cltd
mov
adc
adc
out
dec
je,pn
add
adc
repz
loope
ret
cmp
sub
cltd
cli
mov
dec
fildl
inc
pop
add
dec
mov
sub
sar
ja
xchg
xor
add
lds
pop
sub
andl
xchg
push
pop
rclb
dec
push
movswl
jae
jno
ss
dec
and
aam
test
sbb
push
mov
roll
push
sarl
push
push
mov
sbb
fmull
xor
mov
shr
xor
movl
inc
test
rcl
lahf
push
and
mov
ret
cs
cmpsl
stos
push
in
xchg
dec
sub
in
cli
cmp
insl
jae
cld
xchg
xorl
jae
cli
add
push
mov
testl
sub
mov
subl
gs
inc
je
sbb
sahf
and
cmp
or
cli
and
pop
cli
cmp
loopne
negl
or
loope
push
sub
adc
sub
sbb
out
mov
lods
out
pop
sub
scas
xchg
mov
mov
and
add
push
hlt
jle
fldt
xor
add
sub
and
sub
icebp
pop
fsubp
add
sahf
cmp
sbb
ret
es
or
mov
data16
push
mov
mov
fcomps
faddp
cmpsb
repz
dec
push
ds
lahf
cmp
inc
or
push
rorb
lret
shll
or
sub
mull
mov
inc
adc
adc
mov
mov
mov
inc
out
cwtl
dec
lock
mull
bound
insb
add
and
sti
bound
push
xchg
push
lret
lods
xchg
mov
mov
sub
xchg
int3
enter
pop
movsl
sbb
imul
inc
xchg
into
jg
inc
ds
xchg
rcl
or
out
in
mov
sub
add
lds
push
dec
sub
negl
es
icebp
pop
fcmovu
mov
nop
sbb
inc
push
ds
and
or
xchg
mov
or
loope
xor
adc
add
xor
xor
ud1
jns
jne
mov
jae
mov
mov
fucom
xor
adc
js
rcrl
int
xlat
or
jns
ja
cld
fnstcw
cmpsl
outsb
mov
roll
mov
les
rcrb
ja
xchg
jbe
insb
inc
repz
or
mov
repnz
inc
cli
rcll
wrmsr
bound
mov
dec
fadds
jno
push
outsb
mov
out
popa
nop
cwtl
popa
fidivrs
insl
sbb
sbb
arpl
xchg
mov
xchg
push
shll
sub
lds
and
frstor
lods
or
add
in
jg
inc
shlb
inc
or
and
cltd
test
repz
test
gs
sbb
jecxz
inc
lret
lods
lret
xchg
sub
mov
mov
adc
pop
xor
test
fisttpll
jne
in
imul
mov
pop
sbb
jle
scas
inc
and
mov
pop
mov
shrl
push
xlat
iret
lret
jo
add
scas
aaa
pop
popf
xchg
ja
outsl
cld
cltd
mov
call
or
pushf
sub
xor
sbbl
push
out
sbb
iret
cli
dec
js
cld
and
repnz
and
popf
push
adc
dec
sar
inc
sub
lret
fcomi
xor
andb
mov
test
push
subl
mov
jnp
enter
je
pop
xchg
inc
fisubrl
cmp
dec
lret
cld
cmpsb
push
mov
inc
pop
jae
ss
push
sub
in
jne
pop
mov
jnp
jbe
xchg
dec
pop
outsb
xor
lea
shll
orl
cmp
lret
or
jecxz
inc
outsb
inc
push
roll
inc
mov
xchg
mov
into
popa
push
js
pop
adc
jbe
sub
sbb
sti
insl
sbb
cmc
add
pop
and
cmp
subb
mull
gs
mov
sbb
push
bound
jge
xorps
decb
add
pop
jo
insb
inc
lret
cld
jnp
std
stc
imul
aam
dec
sbb
pop
or
shl
and
jle
push
mov
imul
rolb
and
push
std
addr16
pop
jnp
rolb
sbb
out
std
mov
leave
dec
nop
test
les
mull
les
rcl
add
stc
or
mov
addr16
cmp
adc
adc
pop
addr16
icebp
xor
scas
add
fisubrs
and
out
into
roll
or
outsb
imul
or
xor
test
xchg
pop
push
adc
add
cltd
aaa
pop
xchg
jnp
not
xor
scas
mov
xchg
cwtl
scas
stos
in
pop
in
pop
movsb
cmp
inc
mov
outsb
fs
aaa
mov
ret
cmp
das
mov
and
movsb
adc
idiv
xchg
adc
sub
sub
or
inc
test
mov
hlt
enter
dec
sub
mov
rcl
ret
mov
and
imul
addr16
shlb
jb
pop
sbb
shr
rclb
imul
sub
rclb
pop
lcall
xchg
mov
rorb
cmpsb
stos
sub
pop
das
popf
std
xchg
cmc
dec
in
not
and
xchg
sub
ret
stos
inc
mov
daa
mov
loope
das
imul
pop
inc
lret
inc
jae
out
xchg
mov
adc
mov
xor
orl
cmpsl
mov
aas
add
xor
mov
adc
or
sti
cld
sbb
sub
sbb
dec
ja
jl
idivl
lods
xchg
rcrl
clc
cmp
and
xchg
aad
inc
inc
test
inc
adc
cmpsb
out
jne
clc
fwait
repnz
repz
add
fnstcw
xor
test
jp
mov
outsb
sbb
outsb
popa
inc
pop
in
outsb
jns
adc
addr16
xchg
movsb
mov
ret
pop
pop
mov
mov
loop
cltd
test
mov
in
or
jb
pop
out
pop
sbb
shlb
shll
cmp
xor
out
cld
mov
lds
dec
dec
xchg
aad
outsl
push
inc
add
out
test
popf
add
mov
sub
lcall
andl
fisubrl
xorb
cwtl
idivl
push
notb
fadds
outsl
icebp
push
iret
sbb
popf
cs
push
mov
jecxz
mov
pushf
add
inc
push
lds
rcrb
stos
cmp
fimull
mov
dec
mov
and
mov
mov
sub
movb
stc
lahf
jle
gs
xor
pop
mov
add
idivl
add
or
and
mov
add
mov
dec
sub
sbb
lret
rcl
cmpsl
dec
fs
adc
aas
sub
mov
in
jmp
add
fildll
xchg
sub
dec
fdivl
das
xlat
out
sub
sbb
aaa
pop
jge
xchg
leave
in
ret
sub
cmp
clc
jae
fistpll
ds
sub
cltd
lahf
adc
pop
cmp
shr
pop
fmuls
pop
repnz
mov
mov
add
sub
and
lods
add
inc
pop
xchg
push
addl
or
in
jno
jnp
adc
shlb
repz
dec
cmp
adc
mov
outsb
cmc
mov
ja
clc
lahf
aaa
ljmp
arpl
cmp
xlat
sti
mov
mov
orb
int3
inc
cwtl
lock
popf
push
push
jne
leave
mov
xchg
adc
pop
pop
dec
into
fisttps
mov
jne
sbb
jle
push
cmp
rclb
rclb
mov
mov
jmp
loop
dec
das
cwtl
and
fs
shll
in
es
loope
xchg
and
clc
popl
dec
test
inc
dec
cwtl
inc
jle
and
stc
fsubrs
shll
lret
sub
fadds
leave
xchg
jno
inc
dec
jns
xor
dec
shl
sti
lahf
xchg
xor
sti
iret
lcall
fcoml
cwtl
mov
mov
loopne
leave
jmp
jae
ret
ss
cmc
and
imul
daa
je
lds
lret
es
add
inc
inc
pop
rcr
or
add
sbbb
cwtl
mov
and
add
arpl
push
mov
mov
js
pop
sub
lods
add
jge
xchg
xchg
jmp
or
adc
push
sub
aad
cs
dec
add
cmpsl
and
dec
cltd
jl
arpl
addr16
test
outsb
inc
mov
push
in
push
das
mov
adc
fwait
mov
jg
and
lahf
andb
mov
cld
sbb
pop
and
popf
cmp
jbe
xchg
repz
mov
ss
pop
mov
adc
dec
shlb
mov
loope
sti
or
jne
cmp
loope
rolb
and
stos
fisttps
dec
mov
dec
aam
dec
shrl
push
imul
xor
pcmpgtw
scas
jp
mov
adc
sbb
adc
inc
popf
mov
mov
mov
sub
sbb
and
mov
or
push
lods
not
pop
dec
nop
loopne
nopl
mov
jne
loope
mov
fcoml
insb
daa
ret
mov
bound
jle
push
mov
push
scas
dec
mov
sbb
subb
dec
ret
insl
gs
push
pop
movsl
stos
xchg
xor
jp
incl
jno
add
outsb
pop
insb
jmp
jb
cld
out
cmp
add
sub
mov
arpl
cs
jo
inc
dec
loop
cmp
sbb
int3
stos
std
inc
rcll
pop
xor
ret
shrl
mov
pop
mov
xor
in
loopne
dec
pop
int3
mov
aaa
inc
js
roll
xchg
add
movsb
dec
ffreep
pop
cmpsl
shl
or
jnp
xchg
iret
inc
adc
jecxz
dec
xor
ficoml
mov
xor
push
pop
push
xor
call
test
pop
lea
adc
fstps
dec
sbb
cmc
mov
js
or
pop
sbbl
cmc
pop
jne
xchg
inc
lea
cmp
mov
adc
xor
or
mov
xor
insb
mul
movsl
fisttpll
call
cltd
and
mov
cltd
add
mov
popf
push
add
mov
mov
push
sbb
iret
int3
mov
pop
daa
arpl
mov
sbb
xor
lods
mov
mov
add
sub
mov
aad
repz
sub
mov
add
dec
sub
cld
test
loope
jnp
cld
ret
mov
test
hlt
jns
mov
mov
add
jno
xor
pop
test
push
imul
and
in
adc
inc
add
mov
and
sbb
mov
mov
mov
sbb
scas
mov
mov
movsl
xchg
lock
test
aam
sub
idivb
loopne
rcrl
push
in
ja
mov
imul
inc
fadds
cmpb
xchg
dec
ficompl
push
repz
add
push
adc
adc
std
or
xlat
push
movsl
lcall
call
inc
mov
inc
arpl
je
adc
jl
push
hlt
daa
aad
outsl
inc
cli
in
dec
icebp
push
lods
lock
les
mov
lock
inc
fstpt
movsb
sarb
jnp
push
pushf
adc
aam
ljmp
xchg
fnsave
in
js
push
sbb
and
xchg
aaa
push
xor
lret
movsb
sbb
mov
mov
sbbb
or
in
ficompl
push
sti
jb
insl
cmpsl
in
xor
jmp
mov
ret
lock
sbb
lret
scas
enter
iret
out
sbb
testb
inc
ja
jb
fistps
int
leave
sbb
in
xchg
cmp
adc
dec
jns
loope
jp
xor
push
pop
test
dec
jo
cmp
cmp
mov
xor
aas
cli
jo
mov
popa
jbe
adc
xchg
ret
mov
pusha
dec
cld
dec
adc
aad
rol
cltd
pop
jno
loope
stc
mov
cmp
sub
lahf
faddl
mov
pusha
pop
pop
test
jnp
or
lahf
sub
into
jmp
lret
adcb
jo
ss
mov
push
stos
jge
std
sbb
ss
mov
arpl
jbe
dec
push
xlat
mov
repnz
fidivrl
fisubrl
mov
scas
cmp
movsl
rorl
push
loope
mov
ret
mov
push
lds
push
cs
fwait
mov
idivl
in
sbb
sbb
push
das
rorl
mov
pop
lods
and
and
push
and
out
sub
sbb
imul
test
dec
pushf
or
adc
jg
mov
pop
imul
mov
mov
lock
mov
jge
lods
mov
repnz
add
incl
in
enter
icebp
push
imul
ss
imulb
push
jne
movsl
or
dec
push
cmp
arpl
jae
pop
js
aas
adc
cmc
jbe
jns
test
cwtl
rol
push
push
adc
in
in
xor
inc
lock
ljmp
les
sti
xor
jbe
mov
and
testb
movsl
dec
xchg
cmpsl
call
mov
faddp
icebp
jo
outsb
fsub
inc
test
xor
xchg
dec
jmp
push
scas
mov
das
xor
fwait
add
cmp
push
fiadds
add
repnz
push
scas
cmc
loop
test
rolb
cmp
push
pop
sub
data16
ds
mov
pop
dec
mov
sbb
cmp
pusha
femms
xor
cmc
jns
inc
mov
leave
or
mov
jle
jl
push
sbb
in
adc
clc
push
rol
js
sarb
imul
out
repnz
clc
adc
jae
cmpsb
push
xlat
test
popa
call
movsl
inc
xchg
add
popa
cltd
orl
mov
pop
test
push
add
mov
cmp
das
lods
popa
rclb
fidivs
dec
icebp
adc
jns
test
push
mov
insl
sarb
stos
addl
xchg
fsubrp
pop
jo
sub
clc
push
pop
pop
or
xor
in
dec
jmp
push
mov
jae
sbb
std
insl
jo
lcall
push
mov
sub
push
xchg
add
inc
sbb
inc
xlat
imul
cs
push
in
roll
shll
jp
rorb
and
cs
iret
in
jb
and
sbb
addl
or
dec
cmpsb
in
repnz
imul
fnstsw
cmc
cmpsb
adc
jecxz
push
lcall
negl
add
cmpsb
shll
insl
sbb
lock
jns
and
popa
paddb
xchg
cwtl
testl
call
ret
stc
test
addr16
push
jge
scas
out
pusha
jecxz
jae
inc
cmp
rcl
push
aam
sub
pop
xchg
mov
or
push
xchg
cltd
test
dec
jno
jbe
lret
lods
insl
mov
jge
js
fidivl
cltd
dec
jbe
lds
inc
gs
inc
jg
lret
jbe
mov
sbb
adc
loope
iret
or
push
sbb
dec
shrb
adc
sub
jo
lcall
and
sub
add
xorl
fdivs
dec
sub
dec
sarb
cmpsl
push
lahf
mov
inc
mov
test
mov
adc
cli
or
mov
aam
push
mov
test
sub
jge
cwtl
orl
bound
repnz
or
repz
roll
mov
fidivrs
lahf
stc
mov
mov
sub
out
pop
scas
lahf
inc
fldl
push
test
and
pop
mov
jmp
sahf
push
in
push
mov
push
leave
in
cmpsl
or
pop
pusha
int3
out
stos
shl
add
mov
inc
push
sub
addr16
sbb
cmp
xchg
out
jecxz
jns
dec
frstor
clc
inc
xchg
inc
sbb
fdivrp
lock
adc
sar
insb
in
add
dec
in
jecxz
idivb
ds
sbb
fmull
rolb
sbb
xchg
inc
push
pop
out
sbb
in
fistpll
jns
xchg
ret
adc
insl
cmpsb
lds
pop
and
popf
loop
fs
pop
mov
enter
xor
fisttpl
loopne
inc
jle
xor
add
xorb
mov
mov
arpl
push
sub
add
xor
jno
add
push
cmc
mov
shll
sti
call
imul
xor
xor
push
sbb
cmp
adc
inc
into
cmp
jb
sti
inc
and
ja
shlb
sahf
fcoms
push
sub
dec
push
ja
pop
aaa
mov
or
mov
ljmp
pusha
mov
and
hlt
fistpll
xchg
xor
in
cli
and
bound
fisubrs
iret
or
sub
mov
les
sbb
scas
jo
int3
mov
leave
sbb
outsb
mov
pop
jmp
nop
cmp
dec
adc
movsl
movsl
inc
icebp
adc
jp
rcll
xor
and
dec
pop
sbb
pop
mov
inc
xchg
push
dec
inc
mov
in
and
hlt
loope
outsl
fidivrs
fisttps
shll
inc
cmp
or
cmp
rorb
and
rolb
icebp
in
sub
mov
xchg
mov
mov
icebp
test
fwait
mov
mov
fcmovbe
jae
and
jmp
mov
ds
inc
push
dec
aas
mov
mov
or
sub
mov
stos
push
mov
push
jbe
mov
shrb
int3
loope
push
outsb
mov
inc
push
lahf
test
imul
insl
jp
movsb
aam
and
jecxz
xor
clc
imul
sub
pop
or
dec
or
in
push
data16
out
stos
xorl
shl
cmp
mov
cmp
xlat
outsb
nop
mov
jl
adc
loopne
call
rep
outsb
cli
lea
scas
pop
pop
mov
cmpsl
xchg
mov
loopne
lds
xchg
enter
loope
icebp
mulb
jnp
rolb
pop
in
xor
lret
mov
jno
push
leave
lahf
adcb
es
xchg
and
jo
faddl
dec
ret
sahf
jo
mov
negl
jnp
cmpsb
call
movsb
jne
ficoml
add
lock
ss
out
fnstsw
cltd
pop
inc
mov
fisubl
rolb
ret
loope
jns
movsb
cwtl
repnz
sub
mov
inc
repnz
sbb
xchg
test
pop
pusha
std
inc
cmpsl
mov
dec
icebp
lahf
ja
icebp
stos
xchg
sbb
jmp
cmp
out
mov
mov
insb
scas
cmp
cmpsb
xchg
mov
mov
push
lods
je
out
scas
mov
std
les
filds
xchg
push
add
cmp
fwait
xchg
mov
push
cwtl
lock
mov
addl
and
mov
mov
sbb
shll
mov
and
push
cmp
mov
or
testb
fcoml
or
cmp
pop
cmpsl
add
adc
mov
xabort
mov
int3
fadds
mov
xor
cld
mov
repnz
andl
pushf
xlat
sar
je
cmp
and
cmp
xchg
push
xchg
jp
push
in
xor
into
inc
mov
dec
xchg
adc
jo
sbb
xchg
inc
bswap
xchg
mov
daa
test
push
and
or
dec
sbb
jno
es
sub
incb
inc
or
loopne
lods
cmpsl
adc
pop
adc
ja
shlb
cmp
mov
pushf
es
fwait
fadds
lahf
cmp
mov
lea
cld
lret
xor
pop
in
sbb
push
cmpsl
add
xchg
add
inc
dec
call
gs
mov
lahf
push
jno
clc
cmpsb
jg
js
sub
negl
lret
fldcw
out
mov
push
xlat
outsb
mov
mov
and
and
fdivrs
dec
clc
int
sbb
inc
cmp
clc
push
mov
mov
xchg
pushl
sub
sbbb
mov
sub
lret
adc
idivb
loope
aas
inc
adc
xchg
loope
inc
dec
fidivrl
out
mov
or
mov
in
dec
shlb
test
das
pop
insb
or
dec
inc
or
insl
loope
xchg
sarl
push
cmpsl
sub
pop
cmp
xchg
sahf
leave
popa
cmpb
pop
push
sub
sbb
jmp
arpl
cmp
ss
popf
and
mov
rorl
enter
mov
jge
mov
in
pop
gs
pop
test
or
xor
mov
shrb
cmp
dec
xchg
sbb
enter
scas
and
mov
in
add
mov
push
imul
ja
dec
mov
daa
insb
or
mov
subl
add
fs
jmp
mov
out
dec
pop
cmpsl
pop
sub
mov
sbb
pop
testl
nop
popf
dec
inc
pop
xor
xor
filds
out
ficoml
jb
out
xchg
xchg
jecxz
jne
ljmp
mov
push
fs
sahf
xchg
jae
and
int
fstl
sar
push
push
pop
cld
sub
cmc
xor
ret
mov
push
push
sub
inc
out
out
bound
jge
mov
jmp
add
gs
cmpsb
pop
hlt
scas
and
push
dec
lods
fildll
mov
and
xchg
mov
mov
insb
sti
movsl
iret
repnz
cli
sub
mov
cwtl
inc
mov
out
pop
xor
dec
push
leave
push
mov
into
loope
test
cmp
std
fstl
std
sbb
dec
imul
add
stos
sbb
inc
into
js
test
and
cmp
mov
popl
loopne
and
or
cld
add
fldl
out
mov
add
push
jo
loop
mov
dec
cmpsb
sar
in
jp
in
jmp
popa
cmc
loop
shr
fs
dec
into
cwtl
and
cmp
loopne
in
xor
repz
stc
push
inc
scas
je
js
adc
mov
push
push
pop
shll
and
sbb
cmp
mov
mov
jmp
les
xchg
jno
fistl
insb
test
pusha
xchg
ret
inc
ja
xor
cwtl
jno
into
dec
mov
adc
cmp
into
orb
jae
nop
fsubrl
push
xchg
pop
negl
repnz
imul
les
fstps
lea
mov
repnz
mov
mov
call
inc
push
imul
js
das
push
add
ljmp
int3
sub
sbb
hlt
lret
aaa
mov
in
fwait
sarl
mov
xchg
jnp
xchg
or
adc
and
adc
insb
cmp
cmpsb
and
iret
in
cmc
les
jae
push
xor
sub
in
js
xlat
xchg
xor
cmc
jno
das
pushf
jecxz
insb
xchg
push
dec
adc
aad
xor
in
out
push
add
xchg
push
push
test
cs
pop
inc
int3
pop
cmp
sub
xchg
ds
ljmp
pop
cmp
hlt
jnp
xorl
test
mov
mov
repz
add
mov
push
cmp
insl
sbb
xor
inc
repnz
push
jne
outsb
pop
pusha
dec
lods
data16
jae
fs
dec
shr
popa
add
pop
dec
ljmp
mov
and
cmpsl
mov
sarl
out
push
cld
aad
cmp
xor
push
cmp
movsb
jb
jno
js
inc
and
aad
test
shll
or
xchg
xor
jecxz
xchg
jbe
mov
mov
aad
stc
pop
das
push
sbb
push
pop
sahf
scas
push
insb
dec
mov
or
test
and
sbb
pop
dec
call
mov
test
push
ret
jg
cwtl
mov
scas
cmpsl
subb
adc
add
jecxz
push
addr16
movaps
and
popa
sbb
repnz
cmc
subb
cmp
mov
mov
in
data16
jge
pop
dec
and
imul
ljmp
mov
mov
repz
add
xor
rcll
in
cmpsl
jle
xchg
dec
out
sbb
mov
mov
or
push
imul
out
adc
rol
test
mov
mul
push
mov
jno
out
ljmp
aas
sahf
xor
loopne
and
rorb
aam
gs
dec
sub
nop
aam
dec
pop
mov
jle
ja
scas
mov
mov
aaa
cwtl
sub
sbb
test
mov
xor
push
pop
les
pop
xchg
or
stos
rcr
imulb
sbb
movsb
inc
lods
mov
mov
test
mov
scas
shll
shl
push
xor
sub
xor
mov
jns
pop
jne
dec
fwait
xlat
insb
adc
or
cmp
inc
add
icebp
popf
and
outsl
outsl
test
mov
les
add
and
negl
inc
adc
dec
pusha
or
fnstsw
mov
or
inc
cwtl
dec
push
mov
cmpsb
mov
dec
xchg
jle
pop
rcll
xor
or
fucomip
inc
adc
cmp
shl
out
stos
movsb
dec
sti
rolb
sub
mov
ljmp
dec
jecxz
faddl
lock
aas
lahf
cld
loopne
rcl
loope
mov
mov
mov
idivl
gs
sub
jnp
pop
jp
push
xor
xchg
stos
jmp
xchg
jb
pop
mulb
jmp
and
push
xorb
xor
aam
in
xchg
jmp
pop
mov
xchg
xor
push
pop
pushf
hlt
sti
ss
pop
dec
cmp
jae
into
lret
jmp
btc
clc
sbb
mov
cmp
cmpsb
xor
dec
jge
cli
mov
outsb
sub
clc
movsl
in
pop
int
and
xchg
into
push
lret
push
cmp
jo
sbb
inc
pop
clc
jno
add
mov
dec
repz
sbb
mov
cli
stc
fcmovu
sbb
mov
adcb
fwait
dec
push
pop
mov
loop
nop
sbb
or
xchg
xchg
pop
pop
rcrl
mov
sub
aaa
pop
fcmovne
lds
js
mov
xchg
hlt
ret
cmp
aad
outsb
data16
or
jno
push
clc
mov
pusha
and
cmpsl
dec
jg
jg
popa
inc
pop
and
pushf
mov
jns
aam
lods
js
fistl
and
cmpsl
fwait
lock
inc
imul
jno
jle
int
push
ljmp
out
cmp
mov
and
scas
outsb
or
cmp
cmp
shlb
insl
sahf
jae
mov
lea
mov
add
adc
lods
mov
addb
fildl
aad
cwtl
mov
shlb
fisttpl
in
pop
push
fucomi
mov
sub
ss
dec
adc
jb
dec
aad
add
jle
dec
sbb
inc
notl
inc
aas
inc
loopne
jo
fwait
dec
xlat
xchg
adc
lock
mov
fistpll
sti
mov
sbb
rsqrtps
sbb
jae
iret
lock
ret
mov
faddl
loop
pop
pop
sbb
cld
aam
jmp
lcall
fstl
mov
lock
xor
inc
sarl
test
ret
imul
out
jbe
fadd
jp
call
adc
adc
imul
dec
or
int3
mov
mov
and
dec
stc
mov
into
and
pop
fsub
xchg
mov
and
outsl
mov
fwait
mov
leave
loope
push
in
mov
cmpsl
and
mov
mov
lds
inc
xchg
jp
pushl
ja
les
pop
fnstsw
fs
and
movsl
push
daa
sbb
lds
pop
aad
lods
lods
ss
dec
fcmovnbe
or
add
mov
inc
xor
daa
sub
into
or
mov
mov
mov
sbb
push
dec
dec
addb
scas
ljmp
inc
ficompl
or
push
push
pop
add
mov
cmp
not
fists
jno
cmpsb
xchg
ja
mov
in
mov
or
xor
insl
inc
mov
pop
fsts
xchg
mov
or
xchg
adc
mov
nop
call
inc
add
push
xchg
cld
pushf
fdivrs
xchg
jo
mov
sub
mov
mov
mov
add
shll
mov
pop
das
pusha
repnz
shrl
sbb
fcmovb
stos
add
pop
insl
stc
and
fs
popa
cwtl
jb
andl
mov
push
xor
xchg
insb
sub
or
mov
les
push
scas
outsb
inc
pusha
das
dec
dec
inc
jno
dec
inc
int
cmp
push
fcomp
mov
and
sub
stc
ret
jp
imul
aam
repnz
test
imul
add
into
inc
and
cs
clc
or
xchg
mov
push
cmp
insl
aas
pop
cltd
inc
xchg
cmp
movsl
lahf
adc
and
ret
sahf
fdivl
rcll
jns
js
mov
jl
sahf
lret
xor
pop
cmp
add
push
pop
dec
or
mov
xchg
popa
or
and
stos
das
pop
xchg
jle
add
dec
jae
leave
shrl
ja
pop
aam
mov
leave
iret
pushf
xor
sarb
lret
fnstsw
mov
push
mov
fidivrl
pop
cmpsl
mov
adc
push
adc
aam
adc
loopne
inc
push
pop
pop
sbb
cmpsb
sti
inc
adc
aaa
add
test
xlat
pushw
mov
sub
pop
adc
lods
fnstenv
jg
mov
inc
hlt
in
imulb
jge
xchg
cmp
addr16
sbb
pushf
mov
stos
sbb
jns
scas
in
jp
mov
xchg
neg
jbe
ss
sarb
shl
mull
in
mov
cmp
enter
jecxz
xlat
in
cmp
push
pop
mov
leave
test
add
neg
stc
int
xchg
inc
mov
mov
push
sub
push
test
lahf
mov
das
punpcklwd
mov
sub
mov
sub
mov
out
xor
jb
testb
fsubrl
mov
in
mov
scas
xor
pop
add
and
movsb
xchg
add
fstps
and
pop
inc
xor
mov
mov
shlb
jle
dec
popf
push
jp
pop
bnd
sbb
sub
jp
xchg
dec
pop
push
inc
push
icebp
dec
sub
cmc
or
push
daa
outsb
xorb
xchg
mov
test
mov
pop
mov
mov
clc
fimuls
ds
mulb
inc
mov
mov
mov
pop
dec
andb
push
lods
xor
and
ds
cmp
in
repz
enter
cwtl
or
pop
mov
cmpsl
cltd
imul
inc
mov
in
pop
cmp
mov
outsl
aad
mov
imul
mov
jle
cmp
xor
sahf
sub
jp
inc
es
and
enter
jno
hlt
js
test
and
outsl
outsb
data16
sub
xor
pusha
cmpsb
add
add
sbb
add
adc
je
adc
and
sbb
dec
mov
inc
rcr
dec
shrb
mov
and
jl
mov
pushf
sbb
inc
mov
popf
pop
xor
std
push
mov
lds
out
test
daa
repz
stos
fidivrs
add
xchg
outsb
add
sbb
orb
cli
incl
cmp
jo
jno
sahf
insl
in
push
repnz
pop
bound
rolb
mov
lds
sahf
add
stos
and
push
xor
fldcw
and
subl
shlb
les
or
jo
scas
mov
mov
push
je
pop
inc
jo
add
push
xchg
dec
jmp
add
mov
add
sbb
jecxz
pop
xchg
fimuls
hlt
cwtl
rol
mov
push
movsb
sarb
jb
pop
ljmp
xchg
inc
mov
mov
and
outsl
sub
or
fs
out
xchg
xor
inc
and
add
cmc
fildll
adc
test
int
or
mov
lcall
push
icebp
aad
notb
fs
mov
ja
sbbl
dec
lahf
pop
xor
imul
adc
cs
insb
xor
mov
repnz
jb
cmpsl
repnz
xor
out
sbb
sahf
mov
clc
cmpsl
add
sub
mov
testl
push
shrb
fnstsw
leave
cs
jp
out
lret
or
push
mov
ficoml
dec
push
mov
das
cmc
dec
adc
mov
inc
jae
adc
int
inc
movsb
loop
orl
jne
or
xor
icebp
xchg
jle
inc
rcrb
gs
cmc
clc
shll
mov
inc
jg
or
jmp
in
pop
sbb
addr16
pusha
fstpl
fisubrl
xor
mov
negl
jnp
xchg
pop
add
push
push
mov
pop
inc
insb
mov
inc
sbb
jp
mov
fisubrs
je
adc
push
mov
vmovshdup
mov
jb
fadd
or
mov
mov
out
ret
popa
xor
mov
sti
cmp
aaa
sarl
cld
icebp
jl
and
or
aas
push
jo
rcl
rolb
cmp
ljmp
stos
lea
sbb
xchg
push
nop
xor
aam
out
adc
jmp
out
pop
cld
push
push
jmp
and
je
add
sahf
dec
xorb
xchg
sahf
in
dec
sbbb
xchg
pop
lods
mov
enter
nop
xchg
in
lods
in
push
inc
jmp
sarb
lock
add
orl
fmuls
adc
dec
sbb
into
push
push
push
sub
or
lahf
adc
in
add
aas
pop
jno
mov
and
jl
push
int
imul
roll
ffreep
je
dec
jmp
gs
fidivrs
test
inc
iret
fcomp
cmp
negb
inc
movsl
shl
cmp
fstl
dec
fildll
cmp
cmpsl
add
push
call
fadds
shrb
lds
stos
popa
cwtl
popa
and
xchg
imul
xchg
mov
mov
sti
int
enter
sub
push
dec
lods
ret
dec
daa
xchg
ret
add
xchg
cmc
mov
xchg
mov
push
dec
rorb
imul
dec
or
lcall
xchg
xchg
arpl
std
cmp
mov
out
dec
int
push
fsts
mov
lahf
popf
xchg
loop
mov
adc
mov
test
jae
test
arpl
dec
jmp
jne
sbb
add
sahf
xchg
loopne
loop
pop
call
push
jno
lcall
outsb
fdivl
aad
adc
add
pop
call
insb
cs
push
lcall
sub
inc
push
xchg
adc
sbb
cwtl
test
aad
xchg
js
push
lods
sub
mov
dec
dec
dec
xor
push
mov
lcall
mov
iret
push
out
out
mov
lock
call
cs
sbb
xor
and
rolb
lret
pop
xor
jb
loope
addr16
inc
or
sti
jbe
or
sar
pusha
ror
xchg
test
cmc
mov
cmpsl
mov
pop
out
xor
fnstsw
push
mov
cli
add
push
pop
pop
out
xchg
ja
mov
out
dec
adc
jae
mov
aam
mov
int3
cmp
jecxz
cwtl
outsb
outsl
adc
jl
fistpll
push
dec
xchg
mov
nop
and
call
jmp
mov
cld
dec
jnp
xchg
cmp
inc
push
cmpsb
mov
outsb
stos
jbe
das
fcompl
insl
sarb
icebp
jp
out
mov
add
fs
pop
mov
test
repnz
test
push
loope
pop
lret
icebp
add
scas
and
mov
in
cmc
push
fstps
adc
push
dec
dec
and
fs
push
das
lds
repnz
pop
inc
jmp
imul
loope
mov
jae
movsb
dec
fwait
mov
fsubr
out
pop
push
aaa
inc
or
sti
jmp
xchg
or
mov
pusha
sbb
lea
ss
pop
cmp
sahf
push
loopne
iret
push
or
test
xchg
cwtl
ja
xor
jb
popa
ss
jg
inc
or
test
movsb
call
lahf
sbb
lfs
in
hlt
mov
push
arpl
mov
es
mov
sub
inc
push
xor
rclb
test
inc
lret
icebp
xor
cmp
inc
mov
dec
sub
lods
loopne
cmpsl
add
mov
gs
movsb
idivb
repnz
lret
mov
js
pop
nop
or
jl
xor
dec
jbe
orl
aaa
in
stos
popf
and
pushf
dec
inc
cld
xchg
or
xchg
pop
adc
movsb
loopne
cmp
aad
sahf
sub
in
jb
adc
xchg
into
mov
mov
inc
add
rclb
mov
test
in
aam
pop
xchg
mov
xor
cmp
pop
or
lahf
repz
cwtl
xchg
clc
mov
arpl
dec
rcrl
sbb
push
mov
lahf
sub
pop
mov
scas
mov
push
mov
push
les
mov
jg
call
movq
jl
xchg
jno
add
jle
mov
jae
jle
xchg
adc
pop
jmp
fistps
push
jl
push
or
lret
jmp
pusha
sub
pop
in
inc
loope
dec
add
mov
mov
adc
stos
dec
ja
mov
dec
mov
sub
xor
rorb
dec
inc
jge
rol
ds
add
mov
mov
inc
cmp
jmp
mov
stos
mov
cmp
xchg
loope
sbb
xor
xchg
mov
fsubs
lret
push
jbe
and
loopne
jecxz
jl
xchg
cmp
sub
push
ret
idiv
int3
dec
call
shlb
cmpsl
jge
insb
add
cwtl
rolb
sub
mov
lahf
cmp
and
sub
sub
sti
xor
xchg
sub
sbb
sbb
xor
sub
lcall
dec
pop
push
scas
xchg
lods
orb
jo
fwait
lea
lahf
push
adc
push
push
mov
xchg
adc
pop
pop
dec
shll
adc
sarl
jmp
lcall
xchg
sbb
outsl
push
mov
sbb
sbb
cmp
lcall
ja
out
inc
push
sbb
mov
insl
into
push
stc
fadds
jb
pop
mov
ret
aaa
push
sub
or
sub
test
xor
add
push
sub
push
call
pop
mov
sbb
imul
enter
sub
dec
fsubrl
in
push
clc
push
shrl
add
les
xchg
icebp
sub
das
inc
scas
inc
test
pop
jbe
pusha
pop
push
shlb
lds
xor
popa
jge
outsb
push
cmp
ljmp
cmp
insb
aaa
testl
out
add
movsl
sub
das
pop
ds
ret
add
xor
outsl
jo
maxps
and
jns
or
cmpsl
cmp
push
xor
jl
orl
adc
gs
repnz
jge
outsb
cld
sahf
and
push
jae
fidivl
negl
mov
imul
dec
repz
nop
mov
mov
xchg
sahf
fs
clc
push
in
cmp
push
xchg
cmp
push
dec
fwait
jo
out
outsb
mov
ror
pop
mov
out
xchg
test
fxch
cmpsb
rorb
aad
mov
inc
aam
outsb
mov
or
sbb
outsb
test
and
pop
insb
dec
sub
cmc
mov
es
je
inc
int3
fwait
mov
sbb
pop
push
test
shrl
push
data16
mov
sub
mov
repz
or
mov
mov
stc
ret
mov
lcall
das
push
xchg
lods
adc
js
xor
insb
rolb
push
repz
movsl
aaa
add
mov
stos
fstpt
out
fdivrs
test
and
sbb
mov
pop
mov
lcall
sti
popf
lcall
test
es
sub
or
cmp
add
sub
lock
jg
jo
popa
fpatan
adc
push
jbe
xor
lds
jb
loopne
sub
sub
or
push
fnstenv
xchg
mov
push
mov
pop
push
fistl
mov
push
insb
outsl
notl
fcoms
stos
xchg
outsl
adc
xchg
pop
jmp
loop
xchg
repz
pop
sahf
sbb
divl
lcall
mov
int
mov
jne
add
movsb
fdivs
ret
xchg
imul
mov
xor
fmul
xchg
icebp
call
lea
or
or
mov
es
jns
push
inc
insb
test
dec
adc
xlat
mov
or
and
mov
scas
adc
push
push
filds
ss
mov
enter
adc
es
scas
jns
repnz
pushf
mov
jne
fstpt
movups
jmp
mov
leave
jmp
push
mov
aas
fimull
push
jns
subl
ffreep
and
jl
jge
adc
mov
lret
and
stos
call
in
dec
lret
inc
and
push
mov
adc
push
xchg
aad
test
pop
mov
js
mov
loope
and
sbb
sahf
pushf
cld
adc
outsl
push
and
andb
pop
cmc
das
mov
test
cmpsl
push
push
mov
or
imul
sti
clc
daa
sahf
stos
arpl
or
sahf
pop
xchg
mov
mov
insb
push
aaa
pushf
push
xor
andl
outsb
ds
lret
inc
sbb
or
jb
pop
decl
or
cli
dec
pop
xor
outsl
es
adc
and
inc
inc
mov
mov
mov
sbb
punpckhbw
or
call
mov
cwtl
mov
jns
fbld
test
push
stos
push
shr
ds
cmp
xor
mov
popf
xor
popa
cmpsl
add
icebp
push
add
lock
jle
sub
push
add
jo
cmpl
pop
cmp
sbb
les
adc
xchg
dec
cmp
mov
repnz
jbe
sti
mov
mov
ljmp
sbb
lds
adc
jg
push
mov
test
loop
mov
xlat
sarb
adc
push
pop
aas
mov
fiadds
xchg
adc
push
push
sbb
test
cmpsb
ja
add
mov
jbe
or
cmp
dec
into
pop
mov
push
xlat
jmp
jnp
in
inc
dec
mov
leave
popf
lds
mov
mov
dec
leave
add
push
mov
pop
ret
les
xor
lret
jp
xchg
js
pushf
mov
dec
mov
aas
add
mov
or
insl
gs
mov
test
leave
lock
and
dec
outsb
sbb
xchg
enter
xchg
faddl
cmpsl
pop
sub
mov
lods
ret
insb
repz
lahf
cmp
xchg
cmp
icebp
js
data16
dec
push
sub
mov
mov
jns
stos
jns
push
ljmp
sbb
bound
push
mov
les
test
push
mov
dec
dec
loopne
pushl
xchg
ljmp
popa
xor
sahf
pop
cmp
xchg
fcmovnbe
fsubrs
cmc
xor
xchg
popa
adc
pop
jbe
jne
xor
fists
aam
or
pop
lret
in
xor
outsb
leave
adc
pop
cmp
mov
andl
out
aas
pop
cltd
dec
jo
mov
sbb
icebp
loop
cli
push
cmp
pop
movsl
cmc
insb
sahf
inc
es
vpsrld
shll
cltd
out
dec
cmp
xchg
push
jecxz
inc
in
int
dec
std
or
mov
stc
das
subl
jnp
and
mov
jb
xor
pop
arpl
xchg
iret
scas
dec
jnp
das
push
push
pop
lea
inc
xchg
and
int
js
inc
and
aad
stc
push
in
enter
and
lret
jmp
idivb
mov
mov
mov
sub
sub
test
dec
push
cmc
mov
xchg
and
sbbl
call
mov
into
xorl
cmpsb
or
mov
das
fldcw
lods
or
mov
fdivs
mov
iret
ljmp
dec
das
xor
out
lods
call
add
aad
cmpsb
lcall
mov
xchg
loop
lods
scas
lds
inc
dec
sti
mov
cmp
in
xor
jne
mov
xchg
push
lcall
and
jl
mov
dec
test
iret
imul
in
fidivl
lock
bound
popf
ffreep
in
mov
mov
inc
dec
jp
cmpsl
xchg
sahf
mov
inc
adc
bound
adc
dec
iret
mov
jge
xchg
test
addl
lcall
loop
inc
in
and
rclb
shlb
inc
jmp
mov
test
xor
bound
push
mov
mov
cmp
mov
cltd
dec
les
cmp
xchg
popf
mov
sarl
adc
mov
jg
mov
add
mov
xchg
mov
dec
adc
push
test
scas
mov
daa
imul
inc
or
insl
xchg
or
mov
test
and
test
popf
in
cmp
add
das
jbe
or
mov
mov
divb
push
push
mov
daa
dec
pop
add
sbb
push
xor
push
push
call
fisttps
add
cli
arpl
sahf
addr16
sub
cmp
lods
in
push
lock
push
sub
pop
aas
pop
pushf
mov
mov
test
mov
mov
sbb
imul
pop
jmp
outsb
in
or
xchg
adc
ret
jno
shll
nop
fs
xor
pop
gs
sahf
das
outsb
repz
or
mov
mov
jbe
test
in
adc
dec
test
test
and
dec
mov
stos
mov
mov
iret
xor
sub
sub
and
ljmp
push
push
xlat
int3
popa
insl
xlat
or
xchg
cmp
pop
cmc
in
jnp
movsb
sbb
int
fldt
loope
push
xor
stos
cmpsl
inc
mov
pop
jmp
sbb
mov
inc
or
clc
adc
in
lock
scas
aas
out
pop
pop
repz
add
lret
mov
out
push
mov
scas
nop
popf
pop
inc
mov
pop
and
out
or
adcb
scas
pop
aaa
jle
inc
push
and
sbb
js
in
jbe
add
xchg
inc
lret
xor
in
sbb
jle
push
outsb
popa
or
xlat
or
iret
stc
add
mov
jmp
jne
jae
push
outsl
and
stc
mov
adc
mov
ljmp
sbb
pop
pop
push
xor
mov
out
pop
xlat
addps
push
in
addr16
in
ds
aam
in
cltd
push
dec
jp
cmp
mov
cli
xorb
dec
les
out
int
daa
xor
sub
into
dec
inc
sahf
insl
push
test
xor
or
inc
sub
sbb
xchg
cltd
ja
push
jle
loop
and
cmp
cmp
mov
lea
stos
data16
clc
stos
pop
setb
cmpsb
jecxz
pop
das
test
lret
fldl
jnp
cwtl
pop
sub
andl
dec
icebp
mov
push
pop
xchg
in
mov
es
and
mov
lahf
sbb
lss
fimuls
xchg
daa
and
and
and
jl
ret
pop
mov
jbe
push
sub
pop
add
or
add
pop
mov
adc
imul
sti
enter
test
lret
inc
inc
daa
test
push
inc
roll
mov
jecxz
mov
in
ja
lahf
mov
cs
xor
rorb
jge
jecxz
adc
mov
fdivrs
pop
hlt
or
out
ffreep
stc
aaa
mov
xchg
repz
and
and
movsb
push
adc
xor
cmp
in
subb
mov
jge
xchg
cmpsb
sbb
lcall
cltd
or
dec
pop
out
pop
cmp
mov
mov
and
stos
addl
repnz
imulb
ljmp
sub
outsl
in
inc
sbb
filds
mov
mov
cmp
mov
sbb
sti
cwtl
sub
cltd
roll
jns
pop
insb
or
push
aas
pusha
ret
shll
jl
mul
stos
push
test
sbb
pop
mov
mov
jl
mov
xor
push
or
and
lea
xor
cmpsb
jl
ficomps
in
cmp
mov
sbb
movsb
fdivl
movsl
jge
in
sub
sbb
jo
je
icebp
inc
cs
clc
mov
iret
pop
push
pop
jecxz
movsb
push
pusha
pop
add
cmp
or
scas
insl
xlat
leave
or
ret
pop
pusha
dec
cmp
imul
test
push
int3
sub
fs
add
lcall
inc
inc
push
and
mov
mov
or
adc
xchg
movsb
sub
xchg
shrb
push
out
jbe
pop
ljmp
testl
and
inc
or
inc
push
test
mov
mov
pop
out
imulb
cmp
lahf
daa
out
mov
rolb
ss
imul
sbb
sub
addl
mov
sbb
push
dec
out
mov
cs
inc
cmp
xchg
push
cmp
fisubrs
xor
push
imul
pushf
addr16
sub
pop
sbb
add
xchg
int
test
shll
inc
rcrb
adc
fcompl
insl
andb
jns
loop
mov
test
and
das
jne
mov
in
push
dec
je
stos
out
popf
out
in
clc
ja
sub
jp
sub
rcl
sub
shrb
test
and
mov
lock
push
jae
adc
bound
push
or
push
enter
aas
push
add
fstl
sbb
jecxz
sti
inc
pop
rorb
cmp
dec
adc
lock
pop
mov
int3
mov
nop
push
loope
iret
and
fimull
cmpsb
popa
dec
in
shlb
sub
jge
cmp
mov
cmp
aas
std
cmp
arpl
and
add
jno
adc
cmp
aam
xchg
dec
in
idivb
jno
push
xor
aad
movsb
push
ja
inc
mov
ja
aaa
add
orb
sbb
adc
ret
loopne
adc
sub
popf
xchg
xor
pushf
loopne
push
mov
xor
rcr
mov
mov
into
stc
pop
pop
iret
sar
inc
mov
pop
jne
xorl
push
fiaddl
dec
call
dec
lahf
mov
sub
add
jecxz
dec
sahf
mov
xor
xor
test
or
nop
ja
out
ret
adc
xchg
dec
or
iret
adc
jl
mov
pop
lea
ds
xor
inc
push
fiaddl
push
push
adc
loop
mov
add
popf
outsl
add
jns
iret
add
mov
jge
decb
cmp
cmp
stos
pop
test
xor
imul
xlat
loopne
cmp
xorb
std
mov
inc
shlb
dec
int3
rorl
out
out
pusha
sbb
push
std
aad
mov
sbb
shrb
inc
xorl
pop
mov
clc
pop
stos
jns
test
int3
idivb
push
std
push
jge
push
lret
push
pusha
dec
inc
xchg
adc
addb
cltd
loope
mov
xchg
jp
sub
pop
xor
je
out
in
bound
xchg
dec
ret
insl
loopne
out
ja
xor
hlt
test
jmp
loop
push
mov
orb
sbb
jp
scas
cld
cwtl
push
int
ret
push
aas
xchg
add
mov
div
mov
lcall
in
jb
int3
sbb
ret
mov
pop
popf
data16
push
mov
subl
mov
jg
ret
fisubrs
push
jne
fwait
call
dec
outsl
mov
out
inc
sbbb
mov
mov
mov
out
jno
mov
jecxz
cld
inc
cmp
iret
std
push
inc
pop
ja
pusha
mov
mov
add
fs
xor
lds
dec
push
inc
adc
out
out
scas
xchg
push
cmp
or
mov
push
cmpsl
mov
inc
xchg
iret
enter
pop
int3
test
loope
jp
iret
insb
jo
cmc
mov
test
lret
outsl
xlat
sbb
adc
sub
cmc
out
xchg
into
mov
push
jnp
fidivl
mov
cs
sub
sbb
sub
dec
jecxz
sbb
mov
pop
push
adc
repz
add
imul
mov
stos
fcomp
mov
cmp
jb
lcall
pop
ret
mov
arpl
sub
cltd
mov
inc
pop
xor
sbb
repnz
insb
aaa
jge
mov
cmc
rcrb
bound
xlat
or
mov
and
aaa
or
adc
pop
cmp
mov
and
mov
out
sbb
mov
ja
mov
mov
push
mov
push
pop
fs
or
mov
add
shlb
fcoml
cmp
in
lods
fists
mov
mov
pop
inc
movsl
js
sbb
les
popa
icebp
imul
outsl
ds
jnp
jmp
push
test
movsb
out
mov
test
sahf
inc
jmp
cwtl
inc
jp
jl
xor
inc
rolb
add
cld
jge
adc
out
icebp
cmp
roll
push
sub
mov
sar
jl
popf
pop
cmpsl
jmp
addr16
into
mov
inc
loope
fldt
push
sub
ljmp
add
inc
bnd
or
push
ret
mov
xchg
enter
fmull
ja
mov
repnz
xchg
rclb
fbld
repz
lret
inc
lock
jecxz
jne,pn
insb
fwait
fwait
cld
jmp
sub
leave
stos
jbe
sub
add
insb
js
jae
sub
xchg
lahf
mov
jnp
or
sbb
fadd
push
or
jnp
or
imull
in
sub
cltd
and
fidivl
neg
mov
mov
js
push
mov
js,pn
push
ret
or
mov
adc
inc
pop
or
sub
mov
das
push
cmpl
jle
fistl
mov
hlt
rcrl
shrl
jl
xlat
enter
adcb
inc
push
mov
push
ja
push
pop
outsl
or
in
ffreep
stc
movsl
xorb
xchg
loop
dec
out
repz
push
or
sub
xor
ret
shl
pop
in
inc
push
je
dec
adc
xchg
mov
nop
addr16
shrl
shll
jge
movsb
movsl
cmp
out
jge
cmp
sti
xchg
lods
xor
push
mov
push
in
loop
jne
sbb
push
imul
arpl
xor
sbb
and
mov
mov
insl
scas
mov
push
jnp
scas
loop
orb
sub
xchg
ds
push
dec
inc
std
into
push
outsb
pop
in
lods
xchg
movsb
decb
cli
insb
out
rcrl
mov
std
push
ja
dec
popf
xor
push
out
ficompl
out
xor
or
xchg
ret
out
jecxz
bound
in
cmc
outsb
sub
mov
mov
sub
nop
rcrb
pop
mov
add
das
inc
nop
cwtl
call
dec
mov
dec
in
cmpsb
mov
ss
dec
dec
fwait
dec
mov
rcrl
les
mov
pop
movsl
lods
mov
add
mov
mov
pop
add
or
xor
pop
mov
jle
loope
test
sbb
in
int3
out
popf
icebp
jg
jmp
idivl
sub
adc
dec
imulb
xor
cld
pop
insb
xchg
scas
test
xor
pusha
add
ss
loopne
sub
pop
nop
repz
cltd
sbb
fildll
pmulhuw
sbb
mov
lcall
das
push
and
mov
adc
fsubs
pop
sbb
xchg
popa
popa
mov
cmp
scas
ret
je
movsb
aam
push
sub
push
mov
repnz
add
mov
test
pushf
sub
mov
imul
dec
pop
gs
mov
or
mov
popa
mov
mov
inc
rorb
fbld
or
popf
add
movsl
fcoml
xchg
movsl
jo
call
lods
cs
fildll
fidivs
je
xor
dec
pop
into
mov
iret
xchg
movsl
scas
incl
ja
std
nop
aas
fisttps
push
xor
scas
dec
mov
inc
dec
mov
popf
xor
adc
mov
out
adc
mov
mov
loopne
cmp
add
xchg
cwtl
xchg
jecxz
mov
lret
lods
jmp
int
inc
xor
xchg
pusha
insl
inc
cmp
xor
adc
pop
fcomp
mulb
jmp
or
gs
pop
pushf
mov
cld
inc
pusha
sbb
cltd
hlt
loope
xlat
lea
pop
popa
ret
xor
cld
dec
aad
jg
pop
in
push
mov
mov
daa
ljmp
jp
inc
mov
lahf
iret
pop
add
clc
dec
sbb
js
test
es
lcall
dec
imul
mov
stos
xchg
enter
xchg
and
insb
shrb
xchg
sti
cmp
pop
pop
jg
sub
xchg
jno
sbb
clc
and
mov
enter
push
xchg
sbb
bswap
pop
xchg
das
lret
ds
subb
insb
mov
sub
les
sti
arpl
movsb
adcl
aaa
loopne
sbb
pop
icebp
or
shl
mov
cltd
jmp
dec
push
jae
filds
lods
jmp
ret
xor
mov
adcb
je
je
idivl
dec
shlb
or
jmp
out
mov
push
or
aas
sub
cwtl
sbbb
xchg
xor
sti
stc
dec
cmp
imul
in
or
fcmovbe
fnstsw
mov
push
insb
push
in
into
sarb
rcrl
mov
icebp
insl
or
inc
leave
mov
dec
movsw
push
test
xor
leave
into
or
inc
and
ljmp
mov
mov
sub
lea
cmp
xchg
inc
je
ljmp
xor
push
mov
push
or
dec
xor
xchg
jbe
in
jbe
push
sub
cmc
mov
cmpsl
insl
dec
and
js
and
mov
fsubrl
nop
ret
cmp
pop
inc
pop
xorb
movsl
in
cltd
cltd
xchg
stc
pop
dec
test
icebp
cli
fwait
adc
bound
lret
xor
sub
and
movb
inc
mov
and
fisttpl
push
in
aad
imul
andl
in
jbe
dec
jl
pop
mov
xchg
cmp
push
push
pop
push
adcl
inc
arpl
or
mov
xchg
shll
loop
mov
mov
fdivp
enter
push
loopne
push
es
mov
lods
inc
add
mov
aad
push
ja
pushf
orl
andb
xchg
decb
lea
adc
jne
pushw
shrb
pusha
and
out
pop
mov
mov
xchg
test
imul
outsl
xor
shr
fcmovne
and
cmp
cmpsl
xchg
sub
loopne
push
mov
arpl
sahf
push
imul
data16
and
cmp
aad
sbb
fnsave
adc
and
pop
sub
out
lds
icebp
out
int
mov
loopne
and
movsl
sbb
jnp
shrl
mov
push
mov
add
push
loop
sub
dec
sub
idivl
fmuls
sub
mov
fwait
jno
call
add
jp
jbe
fiadds
scas
pop
mov
loopne
push
movsb
sbb
lret
xchg
xor
xor
dec
out
outsl
loope
in
cmp
out
aaa
adc
test
mov
xchg
fisttps
and
addr16
fdecstp
adcb
lcall
clc
sub
add
inc
int
testb
loopne
push
adc
pusha
push
ljmp
or
cmpsb
or
jmp
cwtl
cmpsl
pop
cmpsb
outsl
adc
sbb
loop
mov
lcall
mov
dec
lock
outsb
mov
movsb
enter
pop
jp
pop
add
icebp
fildll
fdecstp
lds
mov
jo
mov
movsl
mov
mov
outsl
add
sarb
shrb
sub
dec
imul
sub
push
xor
in
xchg
jmp
push
adc
pop
cmpsl
movsl
sub
js
clc
loope
sub
dec
push
inc
ret
xchg
iret
cld
xor
test
xor
xchg
pop
cmp
mov
mov
das
fldt
loopne
sub
adc
shlb
adc
jl
push
clc
mov
mov
mov
cmc
inc
inc
or
arpl
out
sub
aad
int3
add
loopne
testl
call
push
cwtl
shl
jp
jmp
adcl
adc
and
adc
ljmp
outsb
or
aad
insl
cltd
loope
ret
adc
inc
mov
pop
lds
mov
push
sbb
shl
jae
cmp
and
aas
ljmp
xchg
add
jnp
lret
cwtl
outsb
adcb
loope
mov
or
pusha
pushf
mov
divb
push
out
adc
in
dec
in
push
loope
pop
sub
dec
adc
or
or
and
jmp
sub
sti
test
arpl
sub
aam
arpl
xchg
add
cmp
inc
jne
adc
cld
mov
fwait
adc
leave
jns
xor
or
pop
fbstp
pop
sbb
and
mov
test
mov
and
push
jle
adc
mov
fcomps
frstor
inc
dec
xchg
sti
popa
shl
ja
jns
test
mov
mov
jnp
loop
call
add
sub
lock
pop
inc
or
popf
pop
push
rcl
cs
sub
ja
add
sub
adc
mov
aas
cmp
mov
shrb
inc
imul
dec
aad
addr16
imul
dec
pop
addl
insl
daa
daa
imul
aaa
adc
or
push
adc
aam
sti
jge
push
sub
movsl
stc
test
jo
in
pop
insl
fstps
ret
cwtl
je
nop
xchg
outsl
mov
int
inc
data16
stos
out
pushf
lods
hlt
jg
jg
nop
jnp
sub
lods
xor
cs
cmp
fs
inc
xchg
lods
mov
mov
sbb
sbbb
or
dec
lds
cli
out
movsb
push
loope
adc
jns
xor
movb
divb
lods
leave
mov
push
mov
loop
lret
orl
aaa
loopne
cmpsb
cli
add
aaa
ljmp
cmp
cli
insl
dec
mov
xor
stos
sub
notl
mov
insl
inc
adc
dec
lods
bound
mov
fcompp
mov
popa
stos
cmp
cmpsl
push
mov
push
cltd
inc
xor
sbb
cmp
stos
testb
sbb
les
mov
dec
int
push
lea
adc
loope
and
adc
popa
or
xor
jnp
or
sarl
repz
in
scas
scas
inc
inc
enter
stos
popf
xor
jnp
adc
jne
clc
cmp
xchg
pop
lds
andb
test
mov
add
inc
pop
push
sbbl
negl
mov
jle,pn
leave
xor
and
shrl
xor
out
push
test
mov
push
jae
loopne
fsubrl
roll
xchg
dec
lock
mov
add
pop
dec
sub
cli
into
push
push
mov
mov
cld
sub
mov
mov
pop
sbb
add
and
les
xchg
rcrl
push
notb
cs
jle
mov
sbb
mov
jno
cmpsl
mov
addl
and
test
loopne
lea
es
xchg
fsts
outsb
sbb
mov
mov
insl
push
or
sbb
push
stc
pop
cmpsb
por
vrsqrtps
mov
xchg
add
pop
xor
xchg
cwtl
rolb
nop
je
inc
vmwrite
jmp
adc
std
adc
add
dec
jne
outsl
xchg
hlt
dec
insb
cli
push
lock
nop
jns
xchg
addb
out
mov
popf
sbb
les
cs
xor
cmp
movsl
mov
pop
xor
mov
clc
xor
adc
flds
test
xor
xlat
arpl
and
cmp
cs
lcall
or
sub
test
mov
cmpsl
push
lea
leave
mov
and
loope
movsb
xchg
clc
daa
ds
dec
lret
pop
cmpsb
push
mov
add
lahf
jle
out
cmp
push
fmull
push
test
add
pop
das
adc
shlb
pop
inc
adc
cmpsl
popf
mov
movsb
sub
test
jnp
cmp
cmpsb
aaa
fnstsw
sub
mov
push
sub
cmp
pop
mov
xchg
jecxz
mov
push
scas
jp
arpl
xchg
cli
push
imul
and
fnsave
int3
xchg
fdivl
cmp
sbb
test
jecxz
jb
jl
fcoms
or
ficomps
adc
sbb
sahf
mov
and
imul
fistpl
or
mov
jnp
out
cmpsb
or
pop
mov
sbb
pop
repnz
loopne
mov
xchg
pop
mov
hlt
jbe
xor
lods
pop
loope
das
jle
test
cmpl
sahf
jg
jp
adc
cmp
pushf
push
test
jno
lock
shll
inc
push
pop
rcrl
jno
sbb
insb
inc
std
imul
xor
mov
and
inc
das
mov
push
outsb
addl
ss
loopne
lds
repz
and
mov
cld
cld
lods
es
mov
push
ja
xchg
pop
addb
cmpsl
sub
mov
xchg
lret
icebp
adc
xchg
inc
test
shl
shlb
leave
xor
sbbb
push
xlat
push
add
ficomps
push
fwait
and
cmp
shll
loope
in
adc
cmpsb
mov
pop
aad
inc
sub
pusha
jnp
and
or
xor
pop
push
lcall
xor
inc
das
cli
pop
mov
imul
cmovle
test
mov
jbe
sbb
scas
or
mov
in
dec
lret
jbe
ss
or
psubusw
mov
or
sub
es
test
mov
cmp
test
lods
jno
cmpsl
cltd
mov
bnd
push
jns
popf
pop
push
add
inc
xchg
add
pop
dec
jae
pop
adc
xor
push
sbb
jb
mov
ret
std
lret
mov
das
pop
inc
cmpsb
cwtl
test
adc
push
dec
cltd
movsl
cld
inc
inc
fsubs
pop
dec
xchg
out
fnstenv
repnz
iret
in
xor
mov
shl
jno
inc
popf
shrb
add
inc
leave
xor
imul
stos
cmp
mov
cmc
fisubrs
sbb
dec
and
xchg
mov
sub
mov
aaa
test
add
mov
jmp
out
cmp
sti
imul
cmpsl
mov
inc
aaa
stos
adc
loop
sub
int3
shlb
add
lods
add
addl
jp
or
pop
mov
push
jg
lret
push
pop
int
and
push
adc
push
daa
fisttpl
idivl
cmp
mov
xchg
inc
clc
lea
jb
jecxz
bound
in
pop
cmp
andl
decb
mov
mov
psubq
movsb
mov
enter
pop
loope
xor
aad
inc
std
xchg
ficompl
jae
mov
insb
mov
mov
mov
repnz
adc
lods
push
pusha
call
cs
adc
dec
push
idiv
mov
test
popl
or
jne
pmovmskb
xchg
sbb
cmpb
add
add
sarb
cmpb
sbb
or
aaa
lods
roll
inc
xchg
jmp
pop
cld
ret
dec
je
outsl
mov
push
hlt
push
iret
lods
sti
sub
sub
das
and
scas
in
adc
mull
add
in
jge
arpl
mov
mov
shll
stos
addb
inc
repnz
mov
sub
add
cmp
ss
arpl
mov
push
daa
sbb
leave
mov
out
sbb
scas
lods
fldenv
fiadds
and
pop
jo
xor
xchg
mov
les
mov
loop
movsl
or
mov
push
rcr
lods
xchg
inc
int
cmp
les
push
inc
testb
mov
pop
push
fidivs
push
out
pusha
dec
lea
mov
idiv
cmp
pop
xor
dec
mov
cmp
inc
sub
mov
enter
mov
xor
loop
int3
je
inc
mov
push
cs
jne
js
lcall
inc
sbb
pop
adc
stc
dec
lret
cmc
lea
mov
hlt
xor
pusha
add
popf
pusha
sbb
pop
or
insl
jns
cmpsl
mov
mov
sbbl
sub
cld
gs
or
cli
stc
inc
out
inc
js
adc
rorb
pop
and
mov
push
sbb
add
cmp
mov
lods
add
sti
rol
xor
shr
sub
mov
inc
cmp
nop
push
cwtl
jae
loope
dec
pop
sbb
cwtl
repz
jo
push
xor
ret
cwtl
mov
fistpll
fistpll
mov
addr16
movsl
cwtl
push
push
mov
cmp
and
cmp
add
in
mov
dec
fcomps
sbbl
loopne
push
and
cmp
sub
pushf
aaa
outsl
sub
mov
push
mov
xor
dec
jmp
ret
fmuls
ficoms
mov
mov
sub
sbb
outsb
or
jns,pt
enter
fucomi
fs
xchg
fdivrs
pop
jmp
inc
push
cli
cwtl
mov
jmp
scas
dec
sarb
in
jmp
imul
or
in
das
pop
jle
sbb
xor
cmp
push
fmuls
adc
mov
jns
test
roll
or
mov
xlat
sub
mov
pop
imul
incl
and
jp
mov
jle
mov
arpl
dec
ds
sbb
push
pushf
mov
mov
lret
movsb
cmp
lock
ss
xchg
sub
dec
sub
or
decl
adc
outsl
jbe
mov
fwait
sub
cmpsb
es
mov
or
rorb
push
out
inc
aas
sarl
insb
jno
and
sub
enter
insl
negl
cmp
stos
mov
iret
mov
sti
lods
xor
or
mov
insl
jne
xchg
xchg
cmp
in
out
bound
in
int
into
cmp
push
stos
movsl
rolb
lahf
mov
into
in
cmpsb
mov
ss
or
stos
push
push
mov
inc
jno
push
packuswb
cmpsl
fcom
dec
sub
shl
mov
faddp
mov
fcompl
js
je
mov
xchg
xor
jg
pop
push
pop
or
cmp
out
inc
and
xchg
push
flds
loope
mov
pop
mov
test
in
lret
push
int
mov
xchg
out
inc
mov
test
mov
movsl
xchg
add
jle
mov
jnp
nop
push
or
mov
push
movsb
xchg
rorl
insb
jecxz
jp
aad
xchg
xchg
xor
ret
ds
sar
mov
loope
adc
les
ss
stc
mov
pop
push
push
jno
fdivs
test
gs
mov
dec
out
repz
mov
rcl
fucomip
lea
and
jge
test
int
popa
sub
fdivs
clc
dec
mov
add
in
mov
ss
dec
jbe
sub
xchg
sbbl
mov
jae
stc
dec
inc
jl
push
shll
lods
or
into
cmpsl
push
pcmpeqb
xor
lds
int
rolb
idivb
inc
mulb
and
cmp
push
xchg
mov
fcmovnu
mov
and
lods
insb
adc
and
bound
lods
fisubs
dec
ror
pop
xor
mov
popa
xor
pop
outsb
aam
add
popf
mov
xchg
jbe
int
mov
sub
mov
mov
xor
push
test
pop
inc
xchg
cs
sub
mov
into
sub
cs
psrld
sbb
xchg
insl
mov
inc
daa
pusha
and
jge
cmpl
test
fst
imul
addr16
push
je
in
test
leave
movsl
jge
iret
push
mov
jne
call
shr
das
mov
pop
cmp
emms
andl
dec
push
or
lods
jge
repz
outsb
lret
decb
push
mov
roll
jnp
insl
pop
xchg
jl
std
in
jl
pop
insl
add
or
rcll
aaa
jl
mov
lea
xor
mov
xchg
rcll
xor
mov
add
mov
insb
xor
pop
in
push
add
leave
loopne
repz
dec
aas
dec
push
mov
jno
mov
mov
jmp
aaa
add
ja
stos
mov
sahf
or
sbb
outsl
cmp
rolb
mov
nop
push
mov
cmp
or
fdivr
push
mov
mov
nop
sbb
das
je
icebp
push
loope
stos
adc
mov
lret
push
orb
test
jb
test
or
popf
add
jp
addr16
mov
cvtps2pi
mov
sub
or
or
sub
and
mov
inc
js
pusha
adc
pop
test
xor
mov
and
mov
xchg
fs
mov
mov
aas
andb
cmc
dec
test
in
push
jne
dec
aad
push
xchg
pop
test
addl
roll
mov
push
push
fistps
test
push
add
test
or
or
ja
add
inc
scas
movsl
cmp
rclb
inc
xchg
cmp
mov
jg
inc
arpl
jge
cmp
mov
mov
xchg
rorl
sbb
rep
sub
mov
dec
pop
add
mov
dec
xchg
push
jns
sbb
cmp
bound
pop
mov
cmp
icebp
mov
int3
cmp
out
int
xor
cmp
addr16
cmpsb
cld
pop
jmp
scas
mov
pop
xchg
repz
repz
mov
icebp
in
clc
or
push
mov
enter
subl
aas
popf
mov
test
outsl
jp
jg
outsl
mov
pop
or
pusha
mov
test
xchg
dec
in
int3
pusha
jns
fistpll
arpl
enter
leave
mov
pop
fldt
mov
or
test
dec
clc
shll
popa
mov
dec
std
data16
data16
push
jl
cltd
movsb
rolb
or
aad
push
popf
push
lahf
mov
mov
mov
ss
cmp
jno
adc
mov
xor
push
daa
dec
sbb
push
adcl
outsl
adc
mov
jne
repnz
mov
cld
scas
push
push
lock
pop
ljmp
mov
addr16
idivl
aas
adc
shll
test
pop
fdivr
shrb
and
cmp
ljmp
int
adc
ljmp
fidivrl
filds
adc
cmp
repnz
mov
bnd
mov
push
mov
bnd
xchg
and
mov
push
push
dec
sub
adc
imulb
outsb
pop
jo
cmp
and
dec
jp
inc
xchg
sub
mov
lret
or
jno
adc
jae
xlat
idivl
or
cmc
into
aad
and
jecxz
mov
or
push
js
and
inc
ja
es
fisubrl
push
js,pt
icebp
pop
or
ljmp
or
mov
aam
jecxz
stc
mov
js
out
push
xor
sbb
cmp
xchg
xor
aam
data16
xchg
fstpl
xor
adc
xchg
ret
add
mov
and
jnp
xor
insl
pop
aaa
lret
jmp
stc
or
sbb
data16
pop
mov
sbb
push
movsb
mov
sub
je
out
ljmp
sub
pusha
mov
sbb
mov
push
stos
inc
pop
add
xchg
outsl
filds
mov
xchg
js
push
sti
xchg
movsl
fnstsw
in
adc
xchg
mov
cs
addr16
shl
ss
pop
ljmp
sti
pop
and
aas
out
jle
lcall
mov
cmp
mov
xor
cmc
push
and
fnsetpm(287
cmp
and
mov
mov
cmp
sub
jge
add
aas
lahf
push
mov
push
push
mov
addr16
and
sahf
das
sar
icebp
cld
dec
scas
mov
pushf
sarb
xchg
mov
jg
cltd
sub
lcall
mov
ret
sbb
adc
stos
mov
adc
mov
icebp
mov
insl
lods
cltd
push
fsubr
and
movsl
mov
adc
or
sete
cmc
out
and
dec
lods
xor
dec
xchg
xor
jbe
gs
popf
stos
std
sbb
sbbl
inc
mov
inc
sti
cmp
ficomps
sti
lods
push
icebp
aas
push
and
jecxz
dec
push
or
in
mov
xor
jnp
ds
push
repnz
aaa
add
and
shr
dec
fnstsw
ljmp
or
push
imul
jmp
arpl
cmp
pop
xor
cmp
mov
xchg
pop
cltd
jle
push
dec
decb
xchg
cmp
and
jae
hlt
mov
cmp
mov
loopne
mov
push
pushf
sub
mov
push
and
mov
sub
addl
push
mov
daa
test
adc
data16
mov
hlt
mov
mov
or
push
pop
js
inc
sti
mov
and
push
pop
sbb
test
fisttps
xchg
jo
pop
jb
sbb
call
mov
les
mov
dec
or
push
fwait
stos
xor
test
addr16
adc
fidivs
add
add
sub
fucom
cld
cmp
inc
xchg
rol
aam
sbb
sub
fadds
jno
sbb
aaa
sarb
daa
lahf
shll
shl
xor
data16
ret
adc
mov
out
pop
mov
or
jg
outsl
dec
mov
mov
or
inc
xorb
ret
or
fs
push
dec
add
je
rolb
ss
pop
iret
inc
loope
xchg
pop
push
push
add
push
addl
divl
stos
mov
mov
jl
aad
ficomps
lret
ret
and
pop
lea
cmp
mov
mov
mov
dec
mov
sahf
cmpl
pushf
pop
iret
sbb
jns
mov
inc
fs
or
popa
add
test
sub
lcall
outsl
enter
add
ljmp
jg
cmp
ss
pop
dec
jnp
popa
fstpl
es
cmpsb
int
jg
sub
std
aaa
shrl
inc
daa
inc
xchg
int
repnz
iret
sub
push
xor
xorb
jmp
fxch
loope
pop
ja
dec
xchg
xchg
icebp
xchg
loope
lock
es
les
adc
jae
popa
cmp
mov
jecxz
not
clc
mov
mov
out
pusha
or
mov
mov
mov
lods
pushf
les
pop
cltd
mov
mov
ret
adc
sbbl
mov
xchg
mov
ljmp
pop
cmp
push
push
jmp
cmp
jbe
gs
imul
sub
imul
pop
push
mov
inc
jle
insb
xchg
inc
inc
jmp
ljmp
lret
fcoms
add
inc
ljmp
pop
or
inc
mov
testb
bound
fs
out
fldt
outsl
mov
and
push
scas
outsl
jge
push
fstps
mov
cmpsb
cmp
out
nop
lds
push
outsl
mov
imul
dec
das
lahf
lcall
es
xor
pusha
test
in
repnz
mov
inc
mov
mov
jbe
sbb
repz
cmpsl
mov
push
fisttps
push
xchg
leave
es
cltd
mov
je
dec
jg
pusha
fidivs
orb
mov
jae
test
dec
xchg
ficomps
and
mov
popf
push
cmp
pop
cmc
popa
pop
inc
sbb
cmp
push
xor
jnp
loopne
lea
in
cs
sub
lret
or
push
lods
mov
loop
adc
flds
sbb
lods
mov
dec
les
test
cs
mov
xchg
dec
jmp
scas
adc
mov
jmp
mov
xchg
jno
loop
push
call
or
shl
mov
push
pop
repz
push
shl
ds
in
or
sbb
xor
mov
sti
mov
push
outsl
cmp
stos
mov
push
push
fdivrl
repnz
mov
cmp
out
pop
mov
push
imul
ljmp
xor
add
es
notb
jecxz
inc
mov
sub
jge
sbb
inc
jnp
mov
insl
xor
cmc
loop
push
mov
mov
rcrb
mov
add
inc
inc
jno
out
cwtl
repnz
sahf
push
dec
ret
rol
shrb
add
xchg
fwait
pop
mov
push
sub
cmpsb
ds
sub
dec
push
insl
dec
and
jbe
adc
in
call
mov
das
lods
mov
cmp
rcl
stos
ret
xlat
test
xor
add
in
and
inc
test
dec
ret
fisubs
and
jg
fnstenv
or
pushl
dec
inc
test
sub
push
decl
pusha
adc
jae
cmc
inc
mov
mov
lods
fldenv
cmp
jne
mov
sbb
and
les
push
xor
ja
and
mov
je
iret
loop
mov
xchg
sbb
cmpsl
sub
mov
and
xchg
pop
les
ljmp
mov
xchg
pop
dec
mov
sub
out
shrb
pop
mov
adc
outsl
test
test
incb
insb
sarb
push
shll
test
imul
mov
sbb
mov
xor
push
dec
scas
and
cmp
std
push
push
lds
or
iret
cli
dec
lea
mov
lea
je,pn
repnz
out
xchg
cmp
inc
pop
cmp
mov
xor
cld
xor
test
mov
data16
loopne
call
sbb
xor
pop
xor
andl
shrb
ja
les
loopne
fimull
mov
dec
push
test
or
sbb
repz
minps
nop
sbb
push
rcll
das
sbb
lods
dec
jge
daa
mov
add
ljmp
sbb
pop
pop
push
sbb
int
mov
aad
adc
dec
push
mov
popf
lea
ret
mov
test
popf
lods
cli
test
dec
mov
adc
adc
pop
jno
pop
pop
sub
inc
adc
inc
xchg
repz
shld
dec
pop
fidivs
out
pop
adc
mov
fwait
xor
and
into
xchg
xor
movsb
xchg
sbb
jl
dec
add
movsb
inc
jae
js
fisttpll
int
cmpsl
mov
jns
mov
sub
movl
rcrl
mov
xchg
push
mov
jne
sbbb
das
push
rorb
lock
mov
xor
xchg
xchg
pusha
pop
xchg
popa
add
cmp
dec
incl
hlt
lock
fimuls
js
add
test
and
and
jmp
dec
cmp
es
mov
fisubrs
push
jmp
push
xor
cld
inc
xchg
or
inc
pop
inc
clc
jle
xchg
mov
jb
cmpsl
push
dec
bound
or
pop
sbb
lahf
outsl
or
movsb
dec
jmp
pop
mov
mov
push
mov
pop
cmpsl
lret
mov
sbb
pop
push
jne
dec
arpl
in
sub
in
add
cmp
add
xor
push
jp
cltd
inc
push
cmp
lods
lret
mov
mov
dec
scas
enter
mov
fisttpl
add
jnp
jo
jge
or
leave
lcall
inc
fidivrs
out
sub
cs
dec
pop
lds
pop
popa
jb
subl
or
clc
into
insb
xchg
out
fcomps
jmp
mov
adc
mov
push
mov
nop
or
movsl
iret
jb
push
mov
mov
pop
mov
xor
mov
dec
outsb
lds
jno
int
inc
shll
movsb
fbstp
addr16
inc
cmp
mov
lcall
mov
mov
je
jbe
ja
mov
popa
mov
out
pop
test
inc
jno
sbb
pop
iret
and
add
icebp
mov
push
leave
shr
js
int3
dec
nop
mov
lea
and
mov
mov
fists
loop
mov
xor
inc
inc
movsb
loope
add
aaa
jl
sub
popa
jmp
adc
pop
ds
imul
jle
sub
sbb
adc
movsl
sbb
add
mov
or
mov
cmp
test
dec
dec
mov
xchg
cmpsb
xchg
stos
or
mov
lret
mov
insb
mov
pushf
rcrl
andb
jl
js
insb
getsec
and
test
loope
icebp
orb
repnz
out
inc
call
orl
in
cmp
rcrb
int
shl
pop
hlt
fwait
dec
fwait
cmpsl
jno
sti
pop
push
aad
sub
push
fisubs
xor
ret
imul
jne
add
add
loop
test
mov
lods
xor
cmpsb
push
imul
sbb
fs
call
sbb
fstps
inc
xchg
imul
jle
pop
and
imul
adc
add
and
call
jo
mov
jbe
add
dec
test
add
mov
repnz
push
and
sbb
inc
fdivr
inc
xchg
sarb
adcl
xchg
iret
outsl
cmc
test
aad
shlb
add
je
lock
into
inc
icebp
jo
shll
mov
into
mov
aad
outsl
add
loop
pop
ss
lods
mov
mov
in
scas
inc
jl
ficoms
scas
xor
adc
xchg
js
jns
xor
iret
addl
les
pop
imul
jp
loopne
test
iret
rolb
dec
cmp
lahf
js
mov
dec
mov
adc
das
enter
xchg
bound
inc
mov
icebp
pop
fmuls
mov
faddl
xlat
mov
adc
incb
in
and
xor
enter
fimull
pop
repnz
sub
shll
jp
outsb
push
mov
cmpsl
icebp
shll
push
or
sbb
sub
fdivrl
pop
aam
cmp
ret
out
mov
xchg
mov
mov
int
popl
mov
cwtl
add
cmp
in
push
stos
push
jge
in
mov
mulb
xor
sahf
jmp
das
jle
mov
push
cli
xchg
lock
sti
jmp
push
mov
stos
int
out
mov
and
in
mov
adc
loopne
dec
lods
xchg
push
cltd
shlb
movsb
addr16
test
shl
jg
sub
jmp
inc
out
arpl
stos
jle
lahf
and
jmp
pop
mov
fucomi
dec
mov
xlat
aam
sub
ficomps
ds
push
cmp
leave
sbb
xchg
xchg
xchg
repnz
clc
mov
cmp
jnp
lret
cmpsb
addr16
xchg
test
xchg
xchg
xchg
aas
and
subl
jl
outsl
jp
jle
and
div
inc
pop
or
sub
outsl
and
insb
out
cld
add
mov
jle
mov
jns
cli
lods
fstpl
sti
push
pushf
lods
xchg
test
loopne
jle
xchg
cmp
xchg
jae
pop
jne
add
add
push
pop
inc
mov
adc
push
out
adc
pop
jo
aam
cmc
jp
lahf
cmp
inc
dec
addr16
es
mov
jbe
inc
fistpll
sbb
sti
mov
sbbb
jnp
mov
mov
mov
and
dec
or
mov
jge
jne
push
xchg
dec
outsb
xchg
fistps
icebp
andl
in
outsb
adc
dec
hlt
aas
add
cmp
rcrb
inc
out
enter
fsubrs
fldenv
dec
out
test
lock
cmpsb
adc
and
testl
cmp
dec
inc
dec
adc
jmp
pop
push
and
rcll
push
xchg
add
movsl
fs
test
mov
xor
mov
stos
insb
fwait
jl
imul
cli
cli
sahf
fcoms
mov
out
jnp
js
jecxz
xlat
inc
inc
adc
test
cmp
dec
push
dec
cmp
jb
inc
std
imul
push
or
xor
cmpsb
test
mov
cli
xor
sub
add
sbb
clc
ret
xchg
outsl
cli
jnp
lahf
and
dec
orb
xlat
hlt
decl
sub
pop
sub
lds
adc
dec
ror
out
push
mov
fadd
mov
and
lods
adc
jmp
cs
out
imull
aam
cmc
inc
scas
pop
out
adcb
xchg
iret
dec
inc
in
dec
push
mov
fldl
roll
stc
pop
ds
and
xor
xchg
fimuls
jl
xchg
or
inc
push
test
int
cmp
and
addr16
mov
push
mov
loop
cmp
fistpl
cmp
dec
out
or
gs
mov
fisubl
negl
pop
or
test
mov
aaa
repz
inc
pop
pushf
xlat
mov
cli
sub
cmp
cmp
gs
insl
out
dec
pop
leave
scas
es
dec
push
sub
je
xchg
xor
xchg
push
loope
sbb
inc
sbb
adc
stc
and
jg
adc
data16
in
cmp
dec
jmp
arpl
cltd
in
xlat
adc
jnp
pop
cmp
outsl
enter
mov
jns
dec
sub
dec
lds
lock
jb
xchg
fidivs
pushf
clc
sbb
cmpsl
adc
sbb
adc
adc
inc
loope
push
cmp
cmp
xchg
loop
pop
or
orb
and
int3
cmp
xor
mov
jne
push
dec
faddl
movsb
loope
mov
push
mov
cmp
cs
push
pop
xor
lea
inc
push
and
mov
jmp
dec
adc
add
xor
jbe
ja
jbe
push
and
rcrl
mov
pop
xchg
outsl
mov
mov
call
dec
mull
cld
pop
iret
add
mov
cltd
jg
jns
adc
pop
xchg
ficompl
adc
lret
lods
inc
jmp
push
jle
or
scas
popaw
xchg
push
xchg
cmovb
shrl
lret
mov
loopw
test
js
cwtl
stos
aad
popl
imul
addr16
dec
mov
and
pop
inc
repz
mov
xlat
cld
fisubs
jo
xchg
fdivl
jge
adc
stos
add
ljmp
loop
and
enter
xchg
dec
dec
into
inc
lods
sub
repnz
mov
in
cwtl
fbstp
sub
dec
arpl
mov
sub
add
adc
ret
xchg
mov
push
mov
xlat
mov
testb
push
jns
mov
jge
dec
sub
mov
dec
inc
push
mov
adc
jp
pop
repnz
sbb
gs
movl
mov
inc
add
push
adc
dec
inc
adc
cmpl
mov
repz
inc
stos
into
aas
push
je
pop
out
je
push
xchg
gs
ljmp
jl
jmp
popa
into
mov
cmp
pop
sub
out
shlb
lea
sbb
cmp
test
movsb
fisttpll
iret
sbb
cwtl
sahf
insl
add
jle
add
adc
pop
in
cltd
negb
cld
xor
sbb
or
mov
dec
movsl
les
and
add
jge
jg
sub
cli
or
arpl
mov
shl
fildl
imul
int
sub
ret
inc
pop
add
test
dec
jns
adc
sti
sbb
pop
and
in
jnp
adc
aam
or
inc
stos
mov
or
lods
enter
add
adcb
test
pop
push
inc
sbb
cld
push
mov
fimull
adc
lds
cmp
xchg
sub
inc
arpl
push
out
xchg
popa
icebp
cmc
push
lods
and
dec
push
sbb
out
aad
insl
cmp
or
lret
aaa
mov
mov
scas
xor
push
jge
and
cmp
xchg
movsb
lds
mov
adc
xor
dec
inc
sub
decb
les
mov
cmp
mov
sub
test
jmp
fiadds
in
or
fmuls
shll
gs
push
jbe
xchg
shrb
mov
cmp
pushf
mov
popf
inc
out
cmp
cmpsb
fcoml
sub
aaa
in
jmp
lret
sub
jle
gs
outsl
mov
ror
mov
bound
mov
sub
xchg
adc
enter
icebp
sbb
movsb
mov
pop
fwait
cwtl
fistl
testl
das
out
push
div
sbb
es
mov
sub
imul
mov
jnp
pop
xor
adc
leave
sub
jns
sub
js
cmpl
push
pop
sarl
pop
and
xchg
insb
iret
js
gs
pop
lcallw
cmp
cmp
jae
loope
ret
push
mov
and
push
inc
repnz
mov
int
sbb
subl
mov
enter
xor
inc
addb
test
cli
lds
or
loope
mov
push
mov
sbb
int
mov
push
cs
add
adc
dec
pushf
les
cmp
xor
xchg
test
or
inc
fldenv
push
ret
loope
dec
dec
fs
shrl
jae
or
mov
pop
pop
sub
test
jb
dec
into
adc
xchg
in
fldenv
stc
mov
rcr
push
lds
movsl
add
iret
fwait
jmp
cmp
sbb
ss
jg
jbe
addb
insb
jl
in
scas
cmpsb
and
dec
fdivl
add
xor
cmpsb
and
in
mov
pushf
add
jno
adc
xchg
pop
ficoms
xchg
mov
das
or
popf
jo
test
push
es
pop
mov
or
js
int3
mov
outsl
inc
add
jnp
dec
sbb
in
mov
jno
cwtl
cmp
or
das
leave
fisubs
jae
sbbb
in
sbb
push
test
mov
sar
sahf
mov
cmp
lods
sbb
push
cmc
dec
pop
xor
mov
test
xor
push
dec
add
orl
stos
adc
fistl
adcb
dec
out
xor
jb
out
xchg
mov
rcll
add
sbb
jb
cmpl
push
mov
ja
mov
gs
out
and
call
inc
add
in
repnz
xchg
fwait
push
jmp
add
xchg
mov
cld
add
cmp
push
pop
push
mov
lods
xor
ucomiss
and
xor
lret
pop
nop
dec
sub
mov
adc
cmc
test
push
cwtl
push
inc
addr16
icebp
mov
lcall
push
enter
lret
mov
cwtl
ss
sbb
rol
imul
xlat
dec
and
push
inc
cmpsb
mov
popa
cmpb
outsl
mov
mov
mov
xor
mov
ret
rolb
gs
std
cmp
fldl
xchg
out
sub
aaa
cmc
scas
cs
addr16
sbb
loop
xor
fiadds
xor
imul
data16
mov
imul
movsb
and
mov
call
arpl
pop
gs
add
nop
aaa
pop
cli
inc
aas
fdiv
mov
xor
and
sbb
sarl
xor
jbe
xor
pop
js
pop
icebp
lea
ficoml
dec
add
sbb
inc
xor
ja,pn
cmpsb
xchg
mov
cld
sbb
and
xlat
aad
push
imul
pop
insl
iret
test
xor
test
push
mov
rolb
repnz
fadd
push
shlb
mov
cmc
sbb
testb
jg
inc
nop
inc
imul
and
push
cli
jne
cld
rcrb
mov
cli
jae
mov
scas
mov
xlat
sub
cli
xchg
xor
test
fdivs
fldcw
add
inc
push
fisttpl
dec
fwait
xor
mov
fidivs
movsbl
and
push
dec
dec
in
lock
mov
pusha
imull
fldcw
insb
ficomps
sbbl
shll
aam
add
mov
rcrb
cmc
test
pop
dec
push
push
sbb
in
insb
jmp
mov
popa
arpl
push
cltd
mov
adc
lods
arpl
in
xlat
addl
das
mov
stos
dec
jae
dec
fistpl
ffreep
sbb
mov
scas
adc
mov
ljmp
and
add
icebp
call
into
sub
movsb
adc
push
decb
mov
inc
cli
sbb
pop
loop
ss
dec
or
pop
scas
test
test
loopne
pop
or
in
pushf
and
das
outsb
int3
jle
aad
outsl
dec
loop
mov
scas
dec
push
lahf
fstl
lret
mov
cwtl
pop
xchg
xor
add
std
shlb
push
shlb
test
pop
jp
dec
stos
mov
sbb
clc
shll
scas
movsb
push
insl
sub
add
jae
mov
jb
stos
xchg
or
sub
jl
xchg
sub
mov
cmp
and
mov
push
dec
xorl
test
inc
add
in
insb
in
dec
push
xor
movsb
jbe
test
or
int3
cmpb
test
fcmovnu
stos
adc
sti
mov
adc
out
or
sub
fcmovb
mulb
add
call
icebp
pop
mov
stos
dec
rcll
in
cmp
stos
push
xor
int
inc
cmc
mov
int
push
enter
add
sbb
shll
subb
inc
les
sbb
lds
jl
mov
inc
mov
jmp
imul
dec
inc
test
mov
adc
push
aam
pop
in
je
rorl
xlat
or
fistpll
xchg
sub
lock
shll
cmp
shlb
leave
cmpsb
lds
xchg
in
xchg
imul
pop
hlt
push
lods
pop
das
mov
xor
push
push
lock
fcom
pop
fdivrl
add
data16
addb
repz
fildll
cmp
jb
gs
outsb
mov
pop
enter
aad
adc
outsl
out
imul
es
xchg
pop
mov
xlat
add
mov
and
add
int3
pop
cld
mov
popf
cmp
jae
lea
into
or
jle
daa
cmp
pusha
push
insb
sub
push
dec
test
inc
cmp
mov
xor
cmpsb
xor
jge
or
add
cmp
xchg
mov
js
inc
dec
sbb
out
push
in
fimuls
cmpsb
sbb
fisttpl
mov
xchg
gs
add
xchg
xchg
insl
sub
cs
fdivrl
aas
adc
xchg
dec
pop
adc
outsl
push
push
push
adc
es
inc
inc
popf
pop
sbb
call
ja
add
cmp
loopne
fisttpl
mov
and
mull
dec
icebp
movsl
mov
push
mov
shll
dec
js
add
arpl
popf
cli
mov
and
xchg
das
xabort
fnstenv
inc
test
sbb
jl
call
pop
pop
xor
sub
daa
push
je
push
movsb
adc
std
pop
movsl
loope
pop
in
pop
adc
test
adc
aas
sbb
divl
pop
jne
sub
arpl
jge
mov
fbld
mov
int
sbb
xor
jp
fmuls
shll
cvtps2pi
add
and
subb
and
xor
mov
push
jge
pop
xor
in
out
mov
div
lret
out
fistps
sti
add
scas
idivb
jae
pusha
push
and
ret
inc
repnz
or
mov
cmp
es
repnz
ficoms
sbb
imull
movsl
sbb
out
imul
add
fimuls
imull
mov
and
loop
push
int3
dec
out
mov
xor
dec
sarb
test
add
and
pop
adc
inc
lods
jge
les
xchg
inc
sbb
sbbb
sub
shr
test
scas
mov
xchg
or
push
xor
push
mov
int
xchg
scas
push
sub
enter
add
test
add
sbb
push
dec
mov
mov
jns
adc
es
testl
cmpsb
adc
sbb
and
imul
push
mov
popa
inc
aaa
imul
add
mov
pop
xchg
out
add
adc
sub
mov
pop
pop
mov
mov
mov
inc
xchg
andl
xorb
jp
sbb
popa
jp
loopne
je
pop
jb
stc
cmp
movsl
jns
mov
ljmp
cmp
adcb
push
ret
jmp
sahf
jecxz
fmulp
scas
data16
int
cmp
push
outsl
sbb
add
out
into
pop
mov
jge
mov
jp
sbb
jae
orb
and
rorb
push
repz
xor
test
adcl
pop
dec
mov
out
testb
es
mov
add
insl
imul
enter
adc
cli
lret
aaa
insb
xchg
out
frstor
push
cmp
dec
mov
mov
popa
or
dec
xchg
pusha
add
sbb
adc
test
xchg
push
adc
cltd
push
xorl
adcb
push
lds
je
scas
pop
lds
or
adc
and
jno
loopne
and
xchg
jmp
loopne
jbe
xchg
aad
sub
or
adc
mov
test
mov
std
pop
push
out
and
cmp
ret
jle
shlb
push
cs
gs
push
gs
js
pop
push
fsubp
jl
jo
add
mov
js
and
mov
inc
push
xor
push
lahf
fucomp
inc
aad
test
or
test
sbb
pop
fs
pop
loopne
cmp
pop
subb
loop
pusha
dec
jl
and
shr
jl
sub
jge
sbb
movsl
je
ds
or
mov
mov
sarl
pop
adc
jbe
and
test
gs
loop
scas
jbe
push
push
mov
addb
ja
inc
jle
movsl
outsb
int3
insl
jnp
mov
adc
inc
lock
xchg
lock
cmp
push
shrl
sub
orl
sub
add
inc
dec
adc
mov
mov
jg
loope
in
cmp
popa
mov
in
xchg
leave
cs
or
dec
scas
roll
xchg
dec
sub
add
push
nop
cld
adc
sarb
in
jnp
std
push
outsl
bound
push
lret
pop
or
loop
sbb
mov
int3
rcrb
cs
ret
cmc
mov
mov
mov
rcrb
cld
push
int3
dec
fwait
insb
jae
aad
push
lods
jno
cmp
cli
test
popa
adc
add
das
jbe
rcll
rcr
rcrb
and
pop
out
push
arpl
mov
int3
test
fsubrl
mov
push
push
push
test
push
pop
popl
shll
xor
hlt
and
imul
mov
je
adc
cwtl
shll
ss
xor
fldl
stc
dec
dec
arpl
xlat
icebp
lods
into
lahf
cmp
lret
mov
cmpsb
imul
cltd
sbb
jbe
arpl
push
jmp
pop
pop
fildl
scas
add
pop
mov
aam
test
xchg
mov
inc
mov
jmp
mov
cmp
push
jecxz
jp
xchg
or
mov
add
or
ss
pop
lods
mov
popf
icebp
inc
mov
and
jne
fnstcw
leave
lea
ds
xchg
push
and
push
xchg
xor
mov
pushf
cmpsl
decl
nop
mov
in
xchg
xchg
mov
mov
xor
or
adc
jnp
sub
daa
test
jb
fbstp
xchg
sbb
jnp
sub
es
into
int3
mov
imul
jb
xor
inc
adc
push
rcrb
mov
cwtl
fdivl
and
aas
imul
jle
rcr
push
inc
jl
inc
test
add
mov
cmp
sbb
loope
adc
jle
mov
int3
push
xor
imul
push
loopne
fistpll
mov
dec
fsubrp
adc
xor
nop
sub
das
pop
dec
imul
sbb
stos
xor
notl
test
adc
sarl
push
or
push
test
lahf
repnz
jle
out
popf
push
jmp
pop
or
cmpsb
sbb
iret
cwtl
add
into
data16
je
push
mov
icebp
add
fdivrl
dec
int3
pushf
fnstcw
xor
xchg
test
dec
fdivrs
gs
es
or
jge
je
sahf
insb
arpl
aam
push
lea
inc
into
out
data16
into
out
or
shll
shlb
lods
fbstp
stc
inc
jno
pop
cmp
ds
aam
xchg
cmp
xor
inc
inc
aam
jecxz
jl
notl
fdivp
add
or
inc
insb
lds
lcall
stos
xchg
aaa
test
mov
adc
arpl
outsb
out
mov
mov
test
insl
push
inc
add
cmp
repnz
xchg
test
sti
sub
scas
and
push
lock
pop
pop
inc
dec
lds
push
jle
or
or
lods
imul
lock
repz
out
mov
aam
testl
dec
mov
int3
cmpsb
in
iret
popf
cmp
clc
xchg
push
jge
out
inc
mov
ljmp
push
lcall
adc
testl
aam
adc
jg
xor
adc
push
repnz
add
adc
cmp
testl
lods
popa
cld
sti
mov
and
sbb
pop
fdivrp
xchg
cmpsl
sub
jge
popa
aas
push
mov
popf
push
bsr
inc
sub
cmp
inc
rcrl
outsb
fildll
icebp
inc
add
jp
faddp
push
sbb
sub
xchg
push
mov
movups
lret
out
inc
imul
cmp
sub
call
push
jp
daa
dec
std
jb
les
pushf
bound
bnd
sub
js
out
movsb
in
decb
cmpsb
aam
js
push
sbb
pop
jg
ret
jo
cmp
jnp
adcl
or
cmpsb
adc
cmpsl
jb
or
mov
and
outsb
je
dec
or
inc
mov
inc
loop
loop
push
ljmp
sbb
push
jb
cmpsl
xchg
insb
std
xchg
xchg
mov
jg
dec
pop
adc
nop
out
out
add
int3
sub
pop
ficompl
or
in
sbb
dec
push
xchg
in
popf
mov
xor
dec
sub
jno
xor
aam
add
sub
pop
sub
in
jmp
sbb
pop
pushf
out
xchg
pop
xor
scas
inc
out
xor
inc
xorb
inc
add
add
loopne
outsl
lahf
pop
popa
or
mov
adc
fs
push
and
cwtl
inc
mov
pop
push
and
dec
or
mov
andb
jmp
movsb
mov
lock
sbb
dec
shlb
push
mov
mov
cld
cmp
mov
push
xchg
popf
out
mov
cwtl
popa
scas
mov
movsb
arpl
clc
iret
pusha
stos
push
pop
fadds
cli
adc
mov
mov
ficomps
sbb
xchg
cltd
jmp
inc
mov
arpl
pop
repz
bound
cwtl
lahf
inc
push
das
in
add
hlt
gs
into
out
pop
cld
xchg
jge
repnz
sub
outsb
adc
je
andb
mov
jle
mov
in
push
pushf
imul
movsb
aaa
dec
mov
sti
adc
push
push
sbb
scas
fcom
cmpsb
aad
cmp
jns
jl
data16
dec
xchg
jp
xchg
outsb
mov
pop
sbb
push
rcl
or
sahf
cltd
add
jmp
mov
insl
inc
popa
dec
cmp
out
test
sub
fidivrs
enter
cmp
out
push
fnstsw
sbb
popf
dec
ljmp
xchg
push
mov
pop
popa
push
xor
inc
fs
inc
dec
fwait
cmp
cli
push
mov
or
mov
fstp
and
addl
dec
jecxz
subl
pop
mov
lret
mov
fiadds
xor
ret
bound
out
mov
push
xorl
lret
and
imul
je
fstpl
hlt
aam
sbb
push
xchg
pop
fadds
inc
std
xchg
jo
push
aam
je
mov
adc
aam
pop
addr16
rorb
jmp
adc
lods
xchg
pop
subl
cmpb
test
mov
xor
xor
js
insb
pop
xchg
pop
mov
push
jecxz
lcall
sub
or
out
jne
lea
mov
test
addl
xor
or
das
mov
hlt
push
or
sub
push
sbb
sbb
mov
adc
jne
mov
mov
mov
testb
cmp
sbb
cltd
push
sub
xor
mov
in
push
xor
les
dec
out
mov
shll
push
outsb
movsb
dec
add
inc
stos
mov
cmp
mov
inc
inc
mov
mov
mov
loope
pop
lcall
fbld
ret
in
add
and
neg
mov
fs
mov
dec
sbb
shlb
stc
xor
roll
sbb
jl
xchg
iret
jl
jns
out
es
lods
sbb
mov
xchg
movsl
mov
or
scas
adc
adc
and
lret
imul
mov
divl
scas
cmc
mov
aam
popa
inc
pop
divl
fcompl
fisubl
sbb
pop
xor
outsl
mov
jnp
push
inc
mov
aaa
adc
xchg
cld
sbbl
adc
cmp
outsb
out
mov
cmp
or
xor
shl
leave
pusha
lock
test
stos
ret
sub
je
xor
mov
xor
mov
inc
rolb
lcall
mov
movsb
daa
mov
add
and
pusha
dec
mov
xchg
push
adc
xchg
push
xchg
xchg
sbbb
sbb
in
sub
cmp
sub
add
pop
sub
push
inc
ficoms
movups
push
sbb
int
adc
push
push
clc
sub
test
ss
sub
je
hlt
sub
add
fcomp
fidivrl
jne
pop
in
shrl
sbb
cli
jg
sti
cmpsl
shlb
popf
dec
lock
test
cmp
pop
pop
mov
clc
es
or
sbb
data16
out
jo
push
and
pop
jg
enter
sub
inc
adc
aaa
sub
sahf
mov
jo
jp
or
je
push
nop
add
sub
in
ret
mov
cmpsl
js
cmp
inc
shlb
mov
mov
je
adc
aad
or
ret
loop
movb
ret
icebp
loope
scas
adc
xchg
rcrb
lods
xor
jns
sub
fsubrs
cmp
add
fs
push
xlat
mov
push
xchg
out
or
pop
sti
sub
test
ss
out
inc
push
in
dec
outsb
fcmovbe
test
xchg
adc
lret
adc
cmpsl
cmp
push
cmc
mov
lcall
sbb
movsl
mov
jne
subb
inc
les
cli
jno
adc
call
loop
jg
jl
fucomp
repnz
js
push
adc
sbb
adc
mov
addb
mov
mov
pop
shll
and
jmp
mov
sahf
add
adc
pop
bound
enter
dec
addb
fisubrl
gs
push
inc
adc
push
inc
scas
push
mov
xchg
cltd
xchg
pop
jne
adc
cmp
add
lahf
mov
dec
ret
jns
cmpsb
repz
mov
lahf
out
mov
dec
les
xlat
lock
leave
adc
adc
sbb
and
xchg
jns
cmpsb
aaa
mov
add
int3
fdivp
push
rol
sahf
mov
imulb
add
or
sub
inc
lods
adc
push
loope
pop
cmpsl
jno
es
scas
add
pop
xor
push
push
cs
lret
sub
jno
loope
adc
outsb
inc
subl
icebp
sahf
jmp
sbb
decl
or
aam
mov
leave
hlt
xchg
iret
jg
stos
push
xchg
outsb
xlat
mov
ljmp
fmull
popf
push
jbe
mov
out
fdiv
push
mov
or
mov
push
fsubrl
lods
or
jae
xlat
add
dec
pushf
mov
push
pop
hlt
cmp
mov
push
dec
and
cmp
neg
xchg
popa
ret
adc
xchg
insb
ss
es
dec
add
out
adc
ja
sbb
xchg
int3
pop
ja
leave
scas
clc
fs
roll
cltd
fstpt
ja
shl
dec
jle
into
inc
ja
sbb
mov
and
jge
lods
imul
fs
jae
mov
cltd
push
pop
fldl
or
xchg
jo
xor
xchg
pop
sahf
shl
lahf
jp
jecxz
les
sahf
pop
std
and
jns
lock
bound
jmp
fs
sbb
push
sbb
adc
push
xor
sbbb
popfw
nop
in
mov
jne
test
icebp
dec
push
mov
aad
adc
shlb
in
jno
xchg
and
add
push
mov
mov
mov
loope
sub
cmc
lea
adc
and
lods
cld
or
fcomps
lods
stos
mov
adc
loopne
jnp
cmc
jo
jl
add
mov
das
jg
sahf
shll
repz
mov
push
js
sbb
xlat
scas
jecxz
xchg
adc
repz
sahf
sub
mov
cmp
js
insb
and
lods
xor
mov
jmp
roll
fucomi
mov
jp
and
fsubr
xchg
cmpl
psubsw
inc
sbb
inc
popa
inc
mov
cmp
cwtl
scas
shll
imul
test
inc
aad
adcb
dec
jae
sbb
pusha
aas
rclb
xchg
jecxz,pt
sbb
pop
lods
xor
inc
pop
sbb
cmp
add
pushl
adc
mulb
mov
cmp
addl
add
mov
mov
push
ja
push
dec
cpuid
mov
dec
mov
pop
je
push
ja
aam
nop
sbb
xchg
outsb
sbb
mov
loope
aad
ljmp
fcoml
fnstsw
rolb
fwait
jecxz
dec
dec
lret
dec
aam
test
inc
jmp
sahf
stos
or
mov
or
jmp
xor
pop
ret
shll
aaa
test
inc
jne
dec
pop
mov
cwtl
scas
scas
adc
sarb
in
jb
dec
adc
daa
jb
cmpsb
aad
sub
aad
mov
call
int3
mov
dec
orl
mov
inc
ja
iret
adc
pop
mov
add
pop
mov
jl
mov
outsb
mov
push
call
mov
xchg
or
sub
stos
jb
push
pop
fldt
mov
jl
and
sbb
mov
cmp
lods
dec
or
mov
cmp
xor
cmc
cmpsl
rorb
cmpsb
push
icebp
mov
repnz
mov
add
int3
sti
adc
out
push
loope
cmp
shl
lea
in
loope
shr
mov
or
cmp
ret
cmp
mov
inc
lock
outsl
dec
cli
loopne
sub
mov
cmpsl
cwtl
ret
jae
adcb
inc
fbstp
jp
mov
xchg
add
mov
mov
adc
out
popa
ss
jl
push
dec
imul
shl
sub
lock
stos
roll
dec
rcll
xchg
out
sub
or
inc
mov
aas
sub
fwait
hlt
mov
fs
or
and
hlt
mov
mov
insl
pop
or
clc
push
popa
mov
loop
add
test
stos
ja
and
cmp
aam
xor
cmp
daa
in
sub
push
mov
out
popa
fldcw
add
mov
into
in
enter
xchg
mov
push
and
xor
bound
mov
jne
and
inc
daa
movsb
jmp
cmp
hlt
fisttps
mov
jmp
lret
int
cmc
sbb
or
jge
jl
mov
mov
flds
int3
mov
pop
decb
fidivrl
lods
lret
fdivs
sub
les
lret
mov
lock
xlat
cmp
fnstsw
jl
gs
imul
imul
outsl
push
repnz
inc
loope
xchg
pop
jp
push
lock
mov
sbb
mov
inc
cltd
cmp
aam
daa
stc
xchg
or
inc
xabort
inc
adcb
sub
jecxz
std
out
pop
and
mov
inc
or
pusha
in
cs
mov
push
orl
add
icebp
mov
mov
or
mov
jns
push
or
fwait
mov
sbb
mov
adc
sbb
xor
icebp
push
sahf
jmp
xchg
sbb
in
xchg
pop
das
aas
lret
jp
ja
das
jmp
and
outsl
int
fsub
sahf
ljmp
test
inc
mov
sarl
out
or
int3
mov
sbb
push
xorl
xor
shl
push
or
cmpsb
outsb
push
mov
addb
push
inc
popf
xor
addl
and
push
les
pop
push
stos
sub
xchg
in
xchg
ds
mov
adc
imul
cmp
ds
push
add
andl
xor
dec
jno
or
dec
inc
popf
xchg
sbbl
stos
mov
sbb
mov
and
add
xchg
fildl
xor
pop
jg
and
push
insb
mov
dec
rorl
popa
icebp
sub
ret
jns
int
mov
fildll
mov
adc
xchg
cwtl
insl
mov
inc
je
outsb
xor
scas
stc
xchg
out
jb
add
dec
icebp
xor
dec
add
jg
xor
jmp
and
in
cmp
orl
mov
cmp
aam
cmp
loopne
push
push
dec
rorb
and
std
or
aas
push
hlt
scas
lods
sbb
add
jl
lcall
dec
js
pop
adc
inc
js
cmp
cwtl
popf
fists
add
in
cli
movsl
jle
mov
fisubl
pop
test
loope,pt
loopne
inc
sub
and
aad
lds
mov
test
cmp
and
jmp
xchg
lods
leave
es
mov
lods
mov
pop
jmp
sub
cmpsb
xchg
push
je
jmp
aas
sbb
dec
dec
pop
fucom
or
xor
fwait
cmp
mov
or
js
cmp
jp
xchg
sbb
dec
jno
movsl
out
mov
popf
mov
mov
shrd
inc
xor
ficoml
push
and
add
push
popa
jge
and
push
outsl
cltd
sub
xchg
movsl
mov
cmpsb
pop
mov
and
sbb
cmp
mov
mov
cwtl
add
addr16
fcoms
es
out
std
pop
cmp
push
ret
or
or
ja
xchg
adc
sbb
inc
push
add
fs
jnp
insb
or
test
xchg
sbb
add
inc
jmp
add
jle
lret
sub
adc
or
dec
cmp
push
or
or
jno
xchg
pop
sbbb
int
imul
outsb
outsl
bnd
adc
pop
push
js
in
dec
xor
lods
sub
cmpl
xlat
mov
dec
cmc
xchg
loop
pusha
push
sbb
ja
insb
cmp
pop
std
les
dec
pop
push
dec
xlat
xchg
lret
rcrl
jg
sub
pop
inc
mov
jne
repz
or
cmp
out
xor
sbb
fwait
movsb
pusha
leave
push
loopne
mov
pop
adc
xlat
pop
stc
mov
inc
div
mov
bswap
sbb
test
sub
arpl
mov
ss
dec
dec
pop
in
cs
pop
push
dec
and
in
aad
jmp
sub
cmp
cld
dec
dec
stos
js
push
sub
sbb
xchg
int
loopne
push
cli
iret
sub
gs
push
add
add
out
mov
lods
lods
hlt
mov
add
mov
xchg
sbb
sbb
or
sbb
outsb
push
inc
inc
subb
fs
mov
mov
cmp
mov
mov
push
inc
fdivrl
dec
mov
je
sub
test
adc
je
push
ds
sahf
lahf
cli
iret
in
xor
xlat
out
inc
pop
xor
fldt
push
adcb
shr
push
or
mov
stc
jmp
adc
and
sub
jns
sub
push
inc
pusha
jmp
or
in
gs
pop
popfw
inc
outsb
jp
xchg
pop
inc
adc
adc
out
xchg
in
aas
mov
sub
das
cmpsb
adc
jl
in
jp
and
addr16
xchg
push
fists
pop
in
test
ljmp
call
cmp
les
xor
mov
les
push
or
jp
jbe
aad
subb
mov
adc
push
pop
scas
ret
push
xchg
mov
shl
mov
lock
dec
nop
ret
xor
lret
imul
xchg
leave
inc
aaa
push
inc
mov
sahf
in
pop
popa
loop
or
mov
sub
add
es
jae
jmp
orl
mov
pop
dec
daa
add
cmpsb
jle
mov
hlt
sahf
jnp
inc
cmp
out
and
pop
test
or
in
fdiv
sbb
push
aaa
pop
adc
dec
arpl
pop
pop
xor
hlt
sbb
lds
adc
mov
fimull
jp
mov
dec
inc
int3
pop
inc
icebp
lock
pop
inc
push
daa
lret
pushf
xchg
orb
stos
sub
add
test
adc
xchg
sbb
fwait
cltd
mov
mov
dec
leave
stc
ret
inc
cmc
push
inc
movsb
adc
scas
inc
xor
cmp
std
je
repnz
inc
lret
adc
adc
pop
adc
push
push
scas
fs
push
ljmp
les
push
int3
imul
push
mov
mov
in
jnp
fs
sbb
or
test
pushf
enter
repz
negl
lcall
rcr
pop
mov
int
push
mov
push
jo
lret
clc
mov
std
mov
lods
aaa
sub
xor
addr16
mov
jge
lea
in
push
rolb
adc
jno
into
test
jle
or
lcall
imul
pop
jae
jmp
adc
mov
jns
sbb
lods
lods
xchg
inc
jns
sarl
inc
cmc
ss
mov
jo
adc
scas
cmpl
dec
push
les
cmp
push
scas
sbb
jmp
stc
fsubrl
scas
mov
pusha
push
xchg
jl
out
sbb
sub
sub
xor
push
shl
xchg
sub
mov
and
inc
adc
int3
push
clc
ss
incb
mov
sbbl
mov
leave
fs
adc
cmp
add
shll
inc
dec
jge
push
pushf
push
jo
test
cli
leave
cmp
sub
loopne
inc
sub
add
js,pn
mov
cmp
push
dec
push
mov
cmp
adc
mov
inc
sub
mov
test
imul
stos
pushf
mov
inc
cmpsb
aaa
lret
nop
int3
xchg
sbb
inc
enter
testl
xchg
test
push
mov
dec
push
push
pop
cltd
mov
and
sub
js
lods
fnstsw
add
sbb
std
adc
hlt
push
sahf
cmp
mov
mov
cmc
cmpsl
cmp
leave
sti
scas
inc
xchg
mov
bnd
in
lds
mov
or
es
xchg
add
push
push
out
dec
scas
scas
inc
or
add
sarb
inc
aas
lock
fstps
xchg
jge
in
cmpsb
out
std
aas
mov
out
lods
clc
xchg
outsl
push
repnz
loopne
xchg
iret
bound
cwtl
mov
push
iret
pop
sbbb
sbb
fwait
pusha
out
push
iret
cmpsl
mov
cmp
data16
or
out
xchg
xor
add
out
dec
cli
add
imul
fbstp
sub
dec
jl
lretw
fsubl
push
dec
adc
insl
push
or
cltd
cmp
cmp
mov
test
movsl
and
push
add
pushf
dec
loop
push
push
pop
push
lret
into
mov
imul
mov
xchg
rol
cli
pop
insl
sbb
sbb
fildl
lea
bound
sbb
sbb
sub
ret
mov
cmpsb
pusha
outsb
bound
aaa
xor
mov
dec
insl
hlt
pusha
add
repz
and
in
add
daa
popf
cmp
clc
insl
mov
xor
idivl
push
stos
insl
cld
sahf
mov
pusha
adc
and
lahf
cmp
push
adc
test
enter
scas
xchg
cmc
mov
call
mov
cltd
iret
aas
or
mov
add
and
jmp
lock
add
in
or
sti
pop
cmpsl
add
cmc
fistpll
xchg
mov
in
in
sahf
inc
les
sub
stos
cmpsb
std
bound
rcll
es
and
pop
inc
loope
shrl
push
cmc
sbb
movsl
in
cmc
fwait
sahf
ficoms
pop
mov
push
inc
arpl
lret
pop
rolb
adc
xchg
cmp
repnz
pop
mov
jae
or
inc
sub
inc
mov
push
loop
icebp
cld
scas
mov
into
xchg
je
pop
int
sub
ss
jns
insl
lahf
lret
out
jne
dec
lahf
and
inc
fnstenv
js
cs
pop
sbb
and
mov
les
imul
shll
push
dec
fmuls
jl
sahf
add
movsl
dec
dec
in
jno
cmp
pop
je
jl
and
xchg
mov
xor
dec
xchg
js
int3
loop
mull
scas
and
mov
sahf
push
loop
nop
cmpsb
xlat
shrb
mov
or
mov
or
into
mov
test
jl
inc
push
push
sbb
lahf
push
mov
push
icebp
jmp
pusha
jmp
xchg
mov
fisttpll
adc
cmc
mov
or
xchg
cs
aas
xchg
dec
stos
push
iret
or
mov
mov
inc
cmpsl
cmp
mov
jns
mov
in
dec
xchg
jp
cmp
test
add
sbb
addb
js
aad
jecxz
xor
fisubl
jno
xchg
mov
sti
and
jle
lods
ja
jns
xchg
out
jne
adc
ret
push
into
mov
xor
movsb
mov
adc
xchg
ret
jns
data16
fiadds
lock
outsb
rolb
or
shl
out
cld
shlb
xor
cmpxchg
repz
dec
jecxz
inc
ret
je
int3
and
lock
insb
stos
ret
sti
inc
std
mov
insb
into
pop
or
jns
lret
cs
and
dec
mov
lock
xchg
xchg
mov
jp
push
nop
movsl
bound
out
cld
xor
leave
xchg
fisttpl
push
rclb
sti
inc
fbstp
sahf
fidivl
push
xor
or
sbb
mov
fisubl
jns
lea
stos
out
icebp
mov
or
sbb
test
dec
mov
or
jmp
lods
popf
ficoml
daa
or
fcomip
icebp
push
sbb
ss
clc
mov
or
mov
mov
push
adc
ret
push
imul
dec
ficoml
int
inc
sub
jmp
inc
jae
fs
cmp
and
clc
adc
call
mov
ljmp
arpl
insb
mov
push
or
cmp
or
jp
mov
mov
stos
lahf
adc
ja
lds
fcmovb
jle
movsb
jg
in
je
jns
imul
fwait
adc
inc
and
jmp
out
les
pop
lods
loopne
xchg
aas
imul
jecxz
add
mov
sbb
adc
divb
in
sbb
cmp
sbb
jg
jbe
dec
mov
adc
loopne
pop
pop
mov
dec
cld
add
lret
mov
adc
aad
mov
cmp
cs
add
leave
aaa
aam
aaa
nop
out
xor
sbb
lods
outsb
jbe
pusha
inc
jmp
movsl
pop
adc
icebp
test
and
iret
add
adc
lret
and
and
scas
icebp
pop
inc
inc
in
clc
xchg
scas
dec
cmp
test
js
jnp
mov
adc
shl
push
mov
mov
jo
out
out
jg
ja
adc
xchg
sub
scas
push
sub
cmp
sbb
push
ret
jecxz
cmp
aam
inc
cs
sbb
jg
in
jnp
adc
addr16
jns
fwait
and
flds
repz
and
sub
push
dec
push
aam
les
lods
adc
lret
dec
mov
mov
add
nop
mov
add
int
sti
lret
loopne
lea
out
xlat
sbb
add
jg
mov
in
sub
int
push
into
or
cmp
int3
incl
stos
mull
lahf
leave
adc
int3
and
push
mov
icebp
into
xchg
loope
mov
xor
inc
ds
in
sbb
and
mov
and
ljmp
sub
icebp
cs
adc
xchg
xor
xor
out
in
pop
in
test
sti
pop
dec
push
dec
je
cmpsl
xor
nop
xor
push
mov
rorl
dec
and
pop
xchg
dec
and
cmc
fsubl
movsb
sub
arpl
test
add
test
int
push
int
mov
mov
or
insb
pop
adc
xor
and
pop
xchg
jmp
push
dec
mul
inc
cli
test
push
dec
xchg
decb
xor
xchg
outsb
jp
fcoml
lock
jmp
shll
dec
cltd
sub
jge
pop
pop
cwtl
sbbb
xlat
outsl
pusha
shll
repz
stc
mov
outsl
enter
mov
test
popf
or
sub
jg
popa
push
outsl
dec
dec
xlat
arpl
rclb
add
xor
aaa
dec
jge
jle
mov
cmp
xchg
cmp
lcall
push
stc
cmp
pop
dec
lds
cli
cwtl
aam
les
call
inc
call
xorb
cmp
xchg
push
push
dec
jg
or
mov
mov
imul
shlb
add
xor
aaa
mov
sbb
sub
ljmp
jbe
mov
gs
data16
or
aas
fadd
xchg
xor
xchg
sub
mov
and
xor
outsl
fcmovnbe
adc
pushf
sub
insl
cmp
ret
xchg
lret
adc
jae
cmpsb
lock
call
inc
in
cmpsl
or
jl
jo
jle
push
in
and
mov
rcrb
sub
xor
cmp
xchg
fldlg2
mov
test
mov
xchg
ret
imul
xchg
shr
or
push
sbb
cmp
xor
cmp
push
push
sbb
mov
ljmp
ss
std
sbb
adc
ffreep
in
jno
pop
mov
scas
in
inc
mov
subb
add
mov
int
or
aas
aad
nop
ljmp
cmp
jp
testb
or
ljmp
sti
sub
lds
setb
sbb
lods
sub
xor
orl
test
add
scas
ucomiss
cmpsl
popf
enter
jecxz
mov
mov
xor
xchg
js
stos
mov
popa
or
mov
mov
psrad
and
and
cmpsb
add
mov
nop
xlat
mov
std
popl
sbb
push
pop
shl
repz
or
out
cmp
pusha
mov
xorl
adc
mov
aaa
push
mov
jmp
sub
cmp
ljmp
mov
pop
or
shrl
adc
lds
imul
sarb
lcall
xchg
jge
mov
jmp
xchg
push
push
jmp
push
std
jecxz
sub
out
sbb
inc
dec
push
push
mov
pushf
xchg
lods
push
xchg
cmp
mov
mov
dec
mov
dec
lret
sub
test
mov
les
clc
pop
pop
fistps
mov
add
inc
xor
mov
push
push
mov
mov
push
lcall
jb
xor
outsl
xchg
push
adc
scas
aaa
inc
mov
fnstcw
add
nop
fldcw
inc
call
aaa
je
sahf
push
rorb
ljmp
jns
stos
lock
push
subl
pop
leave
test
inc
gs
sbb
xchg
push
dec
adc
out
call
clc
inc
mov
push
jae
push
std
jle
mov
adc
outsl
push
fscale
jb
jnp
fiaddl
pop
cs
out
push
sub
fisttpl
insb
mov
stc
mov
or
dec
add
sbb
lcall
inc
mov
mov
push
dec
and
sbb
daa
mov
or
movswl
add
popa
pop
movntq
out
xor
arpl
pop
jnp
lock
arpl
ror
pop
jb
pop
in
popf
pusha
jg
ds
fdivrl
inc
outsb
xor
jle
jae
pushf
out
adc
movsl
pop
dec
mov
and
pop
into
lods
cmpb
bound
test
out
inc
mov
out
loop
ljmp
push
pusha
cld
dec
dec
stc
pushf
or
mov
push
jbe
fistpl
addl
mov
xchg
ljmp
mov
cmp
push
icebp
fstps
call
in
mov
out
popa
pop
dec
ljmp
fcomps
jle
push
ficoml
leave
bound
repnz
clc
push
xchg
rorb
mov
and
hlt
and
xor
daa
cli
call
xchg
dec
arpl
or
outsb
adc
ds
or
aam
fidivrl
pop
scas
out
cmp
jb
push
lock
shrl
pusha
cs
iret
jmp
lahf
jl
adc
jno
xchg
xchg
daa
movsl
test
inc
rclb
repnz
daa
xor
dec
sbb
enter
scas
pusha
xchg
adc
push
mov
imul
fistpll
xchg
fs
je
gs
mov
mov
mov
jns
adc
adc
fnsave
addr16
test
jbe
cltd
rcl
ljmp
in
mov
cld
daa
mov
xor
adc
cmpsl
loop
popf
or
adc
outsb
sub
movsb
sbb
lret
out
jb
mov
push
inc
add
cmc
xchg
and
mov
jae
xor
fmuls
arpl
cmp
jle
jae
pop
sbb
pop
jmp
iret
or
icebp
or
lcall
in
pop
mov
sbbl
into
insb
es
scas
add
lea
scas
dec
cmp
inc
inc
jp
mov
js
insl
sti
insb
jecxz
mov
mov
lods
pop
icebp
xor
sub
aas
popa
or
pop
mov
adc
xchg
and
lea
sub
pop
arpl
mov
and
mov
push
arpl
push
outsb
popa
and
negl
loope,pn
xor
xchg
ss
ja
dec
lahf
pop
lcall
xor
roll
ja
pop
jl
mov
sub
data16
test
xchg
sbb
push
sub
sbb
insl
dec
cwtl
out
lods
add
jo
fwait
inc
ret
or
lcall
mov
sub
cld
xchg
mov
cmpb
and
or
ret
stc
ltr
ss
flds
sub
ffree
push
insb
adc
mov
sub
cli
ljmp
inc
and
mov
mov
or
lret
insb
add
sarb
dec
xchg
outsb
notl
aam
les
das
adc
rcll
test
lret
xorl
push
cld
aas
int3
in
aaa
dec
int3
popf
dec
stc
dec
lcall
add
popf
pop
mov
sub
mov
stos
fidivs
movsb
movsl
sub
and
ret
inc
add
add
mov
pop
mov
fnstcw
push
sub
aas
push
xchg
sbb
or
push
pop
or
les
cmpsl
jno
sbb
sbb
lcall
mov
jae
mov
pop
sub
push
cmp
mov
push
xor
mov
mov
sub
sbb
and
or
cld
fbstp
mov
mov
and
mov
cmp
lds
mov
dec
cmpsl
call
inc
cmp
test
lods
shl
adc
aam
jecxz
push
and
jecxz
outsb
mov
jno
push
xlat
pop
ret
adc
jmp
xor
in
lock
inc
mov
cmp
and
andl
les
pop
aam
mov
mov
frstor
mov
cmp
xor
das
in
inc
hlt
lods
adc
mov
ffree
insl
les
xor
mov
sub
sahf
rorl
push
dec
mov
jb
mov
and
je
xchg
leave
cmp
sub
mov
and
arpl
sar
sti
lock
rcrb
and
test
imulb
dec
fsubl
adc
xchg
xlat
dec
into
mov
push
pop
jl
fcmovnb
out
test
mov
xchg
fsts
adc
repz
movsb
push
mov
sbb
int
es
mov
shlb
inc
cmp
fbstp
jo
test
sahf
xlat
pop
cs
ljmp
and
fimuls
inc
std
popa
push
ss
push
sbb
mov
rorb
ja
jge
and
loopne
mov
mov
mov
or
rorl
aad
inc
xchg
mov
lds
insl
add
js
lret
add
fimuls
lret
xor
lds
outsb
add
or
stos
pop
test
sbb
test
orb
scas
sbb
mov
lahf
jmp
or
cmc
sbb
js
add
subb
les
out
or
sbbb
jne
out
fistl
cmpxchg
inc
sub
adc
cmp
or
testb
scas
stos
fcmovnbe
pop
xchg
out
lret
out
cmp
ret
sub
or
outsl
pop
fistpll
inc
inc
xchg
jns
pusha
push
mov
xchg
mulb
cmc
imul
std
push
clc
das
lds
cmp
bnd
pushf
jecxz
rcr
fisttpll
xchg
cmp
adc
mov
sbb
test
out
std
jmp
fnstsw
xor
dec
ds
sbb
in
jnp
movsl
mov
add
jl
lret
xlat
fs
andb
jecxz
scas
xchg
test
inc
jecxz
jae
mov
pop
in
inc
adc
add
jge
sarl
es
das
jmp
mov
out
pop
insb
mov
aas
add
in
or
sub
test
add
mov
jmp
jb,pn
aam
or
dec
add
sbb
leave
insb
adc
add
cmc
xor
mov
xchg
push
repnz
jne
test
loop
xor
xchg
decl
pusha
adc
int
mov
shrl
int3
xchg
fwait
out
xor
stos
inc
pop
push
cmp
push
cmp
mov
add
daa
divb
inc
popf
xchg
testl
pusha
push
inc
xor
dec
cld
cld
ljmp
push
mov
aad
push
sub
mov
or
inc
mov
push
mov
add
or
mov
xchg
movsb
and
stc
push
fsub
mov
inc
scas
icebp
lea
mov
les
xchg
push
into
in
sbb
xchg
sarl
xchg
jno
rorl
fistps
mov
dec
push
cs
rcr
bound
cmp
cmp
and
mov
ja
mov
out
cmp
outsb
arpl
push
hlt
sbb
cmpsb
mov
push
jbe
jle
nop
mul
out
sbb
notb
xchg
or
mov
mov
jb
out
sbb
xchg
dec
mov
cmp
adc
pop
jp
mov
cmp
inc
mov
cmp
jg
xor
lods
or
cmp
lea
idivl
test
push
sbb
add
je
push
fmulp
iret
mov
mov
push
shlb
pop
mov
push
out
dec
cmp
enter
push
lods
lock
repnz
cld
test
jne
cld
ja
hlt
pushf
jge
mov
dec
pop
popa
jo
jns
je
mov
fistl
fwait
mov
gs
ljmp
ficompl
and
adc
mov
mov
jbe
pop
jg
cmpl
jno
fistpl
cld
aad
pop
push
lds
aas
aaa
psubw
addb
mov
nop
cmp
or
in
cwtl
mov
add
lret
loopne
fidivrl
loopne
pop
adc
scas
sub
test
hlt
add
sub
out
lock
scas
clc
push
mov
daa
mov
mov
sbb
pop
jnp
inc
and
roll
and
push
mov
jge
je
cmp
xor
dec
sbb
inc
mov
jle
xor
icebp
test
jno
insl
mov
test
roll
icebp
add
xor
repnz
dec
mov
mov
and
push
into
adc
fsubl
lods
in
cmpsb
rclb
mov
test
push
je
xchg
bound
popa
into
sub
sub
xchg
lret
jbe
jle
xchg
sbb
shl
dec
add
iret
pusha
gs
pop
out
push
cmc
cs
je
les
adcl
fstpt
fildl
aad
sahf
jg
and
mov
out
ss
ss
push
int
rorl
mov
sbb
shll
jg
xchg
pop
fisubrl
xor
pop
rol
test
daa
xchg
arpl
stc
popf
jnp
inc
inc
insb
popl
mov
scas
pop
cwtl
and
mov
xchg
and
inc
push
mov
lret
sub
add
push
adc
and
jbe
rolb
aaa
imul
or
fnsave
jno
sbb
bound
push
jge
sbbl
cmp
mov
mov
ret
in
outsb
call
fistpll
notl
or
loop
push
mov
pop
push
dec
jmp
cmp
outsb
ja
inc
lods
call
cmp
xor
xor
cli
push
jmp
push
jnp
xlat
pop
mov
pop
aad
fstps
cmp
xchg
mov
push
sarb
pop
adc
loop
das
in
xchg
jae
or
push
sbb
out
jmp
test
jecxz
push
or
fs
imul
orb
mov
xlat
imull
inc
and
outsl
pusha
int
data16
dec
imul
movsb
les
xor
repnz
movsl
mov
push
mov
jmp
inc
test
add
sbb
jnp
in
out
inc
pop
scas
imul
inc
jno
test
out
cmp
clc
jmp
inc
outsl
xchg
fnstenv
in
cmp
sub
cmp
dec
les
loope
andb
sbb
daa
cmp
or
add
mov
mov
jl
cmp
cmp
or
lock
fstps
lahf
inc
inc
enter
mov
add
add
pop
sbb
in
or
xor
stos
jbe
adc
sbb
sub
lret
mov
jno
and
jns
jmp
inc
je
or
data16
jmp
hlt
icebp
mov
vmovsd
pop
pop
sub
pop
sbb
arpl
out
push
ja
ljmp
stos
xchg
pusha
into
and
leave
jge
sahf
insb
mov
xchg
lock
mov
insb
sub
int
mov
mov
push
sub
xor
cmp
cs
psubw
pop
add
ss
xchg
adc
lahf
dec
push
adc
xchg
imul
and
sbb
inc
sub
das
adc
sbb
in
add
push
mov
andl
sub
sbb
xor
jae
test
test
pop
xchg
or
sub
inc
and
pop
movsb
movsl
mov
inc
ret
xchg
test
popa
pop
xlat
pop
add
aas
in
mov
and
test
push
mov
int
add
or
fnstsw
mov
mov
gs
cmp
rcl
pop
add
bound
adc
xchg
ds
ret
add
std
inc
mov
rolb
into
out
jg
and
and
mov
ret
xchg
fcomip
cmp
add
push
dec
and
add
pusha
loope
lea
dec
xchg
out
les
add
pushf
les
push
dec
cmpsb
mov
fwait
mov
jl
ds
sub
push
xchg
push
rcrl
ds
push
mov
pusha
outsl
sbb
fisubrs
xor
subb
inc
sub
cld
add
adc
or
adc
mov
push
in
dec
mov
les
cmc
dec
ss
bound
fxch
pop
and
orl
cs
mov
fsubrl
sti
out
sub
add
icebp
jg
sbb
jge
imul
ficompl
mov
jo
add
stos
lods
das
mov
mov
mov
or
repnz
cmc
xchg
jb
adc
cltd
adc
xor
and
push
jnp
retw
cli
sarl
les
jg
aam
arpl
mov
test
stc
sti
mov
adc
mov
out
dec
sbb
xchg
xlat
clc
sub
mov
add
push
and
loope
scas
cltd
and
inc
data16
sbb
jno
into
adc
sbb
mov
or
dec
in
mov
mov
jge
in
adc
loop
shrb
test
sti
movsb
sbb
lods
outsl
dec
inc
dec
in
leave
fst
aam
clc
xor
jp
scas
cmp
out
or
into
aam
mov
sbb
jmp
dec
mov
iret
sbb
dec
or
mov
jecxz
xchg
sbb
mov
out
aam
stc
mov
hlt
ds
enter
push
in
aaa
or
lds
push
or
fists
add
mov
sahf
mov
mov
sbb
dec
cli
ja
pop
insl
imul
adc
jnp
adc
xor
in
ror
push
mov
xor
push
jne
iret
sbb
imul
dec
sbb
mov
fs
loop
push
cli
insb
jnp
popf
xchg
idivl
xor
cli
jnp
jnp
les
cmp
push
inc
sahf
and
sub
lods
sbb
jae
fnstenv
in
jg
mov
iret
pop
stos
loopne
rorb
imul
fidivs
cmp
mov
fsubs
push
mov
push
test
and
push
arpl
das
mov
add
xchg
mov
adc
and
fsts
xor
and
andb
movb
inc
dec
cmp
out
mov
pop
clc
test
gs
jo
mov
push
cwtl
dec
fs
fiadds
xor
mov
cmp
push
lret
daa
decl
xor
test
lods
mov
xchg
incb
leave
iret
xchg
sahf
push
cli
jno
mov
dec
push
movsb
aam
xchg
push
mov
pusha
pop
repz
xchg
adc
insb
cmp
loop
mov
sti
adc
dec
cmp
stc
mov
cmpsl
sti
jo
in
adc
shlb
idiv
inc
sbb
test
call
pop
cld
jp
or
sarb
movsb
shll
sub
in
sbb
loop
popf
jno
mov
bound
xchg
mov
xchg
pusha
xchg
mov
shl
sahf
sub
in
xchg
imul
mov
inc
call
js
mov
sub
xor
mov
outsl
jb
sub
mov
mov
jmp
xchg
loope
addb
pop
jne
icebp
call
inc
outsb
mov
jle
cmp
insl
pusha
sahf
lods
lret
sbb
push
fchs
cmp
test
popa
push
dec
sbb
xchg
cmp
cmp
or
xchg
ret
das
ss
adcb
pop
sbbb
gs
pop
pop
fists
cmpsl
pop
hlt
adc
add
sahf
mov
test
lret
sub
and
mov
sarb
pop
fsubl
dec
xlat
adc
sahf
je
jbe
popw
sub
push
loopne
sub
jne
and
jnp
mov
xor
push
test
sbb
jnp
gs
mov
imul
out
push
add
shrb
stos
out
mov
or
gs
lcall
mov
ret
je
or
jl
xchg
adc
ret
addb
push
xchg
and
addb
iret
xchg
dec
out
sbb
and
cltd
rcll
cltd
xor
scas
add
cmp
subl
cli
mov
jb
fimull
ja
and
int
leave
dec
sbb
shrl
xchg
mov
xor
loopne
jg
sahf
fs
fs
pop
stos
test
sbb
xchg
fnstenv
test
sbb
sbb
pusha
xor
cld
xchg
dec
sub
movsl
or
and
pop
pusha
xor
sarb
pop
add
push
sbb
cs
jge
mov
mov
jns
sbb
xchg
outsl
movsb
sub
outsl
mov
xor
add
dec
gs
and
ss
xchg
cwtl
mov
andl
test
arpl
daa
into
mov
inc
je
cmc
mov
test
sahf
mov
loopne
pushl
or
pop
jae
push
xor
inc
lahf
pop
sub
inc
pop
pop
dec
sbb
gs
test
cltd
push
or
aad
mov
and
outsb
sahf
cli
and
out
or
add
enter
pop
sub
nop
sub
inc
bound
pop
xchg
and
add
push
test
sahf
jno
orl
mov
adc
inc
cli
mov
xchg
loopne
in
or
mov
sbb
mov
pushf
in
mov
mov
je
repnz
aam
mulb
adc
push
inc
xchg
clc
je
add
mov
data16
cwtl
dec
ljmp
pop
xchg
hlt
aas
rcrb
mov
das
adc
aad
out
lret
cmp
pop
mov
clc
jnp
stos
sub
mov
jno
xchg
dec
leave
push
mov
repnz
xor
ret
push
mov
push
mov
pop
sbb
ret
adc
mov
pusha
leave
jge
sbb
hlt
adc
testb
sahf
aas
aad
into
fdiv
imul
mov
pop
or
dec
adc
pop
mov
imul
cmc
loope
lds
xchg
ret
insl
inc
std
sub
faddl
add
icebp
add
pop
dec
in
das
add
cmp
jle
stos
dec
jno
xor
lock
pop
enter
repz
insl
dec
ds
push
popf
cltd
push
push
test
add
pop
pop
jecxz
adc
xchg
push
sbb
das
xor
jb
cmpsl
sahf
mov
cs
xor
inc
inc
lret
fs
ret
ds
dec
pop
lock
imul
xor
cmovae
and
xor
adc
sbb
sbb
nop
mov
aad
jnp,pn
cld
and
jne
jo
xchg
pop
mov
mov
rcrl
xchg
or
and
loope
out
cmp
loop
lret
int3
add
jbe
or
repz
adc
jle,pn
scas
decl
push
cmc
sti
and
sub
and
sub
dec
pop
mov
dec
adc
daa
shll
scas
call
rcr
mov
mov
lds
sahf
out
mov
push
jl
ja
mov
lahf
jmp
rolb
push
pop
popa
dec
jmp
xor
scas
cld
fs
or
aas
xchg
pushf
out
fcmove
push
sbb
inc
xchg
in
jae
pushf
inc
andl
imull
jno
fisttps
sub
adc
insb
rol
xchg
jmp
adc
arpl
enter
gs
pop
mov
iret
stos
test
fistps
ss
adc
outsb
inc
cmp
push
ljmp
insb
or
arpl
stos
inc
fs
out
push
mov
jne
dec
cld
mov
repz
inc
es
rcll
adc
xchg
jo
mov
aad
jb
push
std
xchg
hlt
lret
xor
in
clc
icebp
mov
sti
xchg
js
cmp
jp
push
cmp
in
jae
xchg
jle
jne
mov
leave
cmp
stos
cmpsl
add
out
popf
xchg
xchg
cld
test
jmp
icebp
pop
loop
lods
outsl
rorb
jmp
shlb
dec
and
icebp
pop
xchg
add
add
in
ret
sub
push
gs
iret
cmp
mov
lret
xchg
xor
gs
je
cld
js
mov
mov
mov
aad
xchg
cmc
aas
inc
mov
es
aam
mov
in
xlat
data16
cmp
or
sbb
sub
dec
jp
insb
roll
popf
out
outsl
add
cmp
mov
fiadds
inc
or
lret
sbb
mov
mov
lret
push
outsb
mov
fwait
cli
lcall
mov
mov
mov
adc
sub
movsl
mov
mov
sbb
lock
adc
cmp
arpl
inc
fs
jne
pop
mov
adc
arpl
out
sbb
xor
inc
push
sub
mov
dec
jo
gs
cwtl
orl
mov
lret
aam
stos
jmp
sbb
ret
sbb
inc
mov
mov
pop
dec
dec
sahf
and
or
mov
jb
fwait
and
pop
das
nop
push
sbb
inc
enter
jbe
or
rcrb
mov
pusha
ret
scas
jmp
loopne
or
jl
cmp
fmull
rcl
cli
call
andb
push
ret
lcall
lods
push
leave
loopne
jmp
outsb
bound
mov
push
imul
pop
dec
jno
jae
je
jb
cmp
push
inc
out
rolb
fistl
adc
pop
cmp
leave
jns
nop
add
je
in
mov
test
out
jecxz
test
adcl
and
in
pusha
xchg
test
mov
mov
push
mov
rcrb
xlat
xchg
cmpsb
out
add
movsb
adc
pop
inc
aad
jae
shll
push
cmpsl
in
dec
pop
xor
pop
push
xchg
pushf
or
inc
and
xor
inc
fsts
mov
fld
nop
xchg
popa
movsl
pop
ret
add
adc
cmp
dec
add
inc
mov
cwtl
out
cmc
mov
xor
lods
pushf
mov
jge
xor
xor
inc
mov
push
sub
mov
lret
dec
mulb
dec
iret
jbe
les
das
lret
mov
pop
push
lock
sub
add
mov
mov
shrl
pop
lea
popf
inc
inc
nop
add
xchg
in
inc
mov
in
out
sahf
pop
and
xchg
jle
orl
sbbl
repnz
mov
mov
jb
aas
mov
es
icebp
iret
and
or
sub
in
xor
jge
ja
movsb
fnstenv
and
xchg
cmc
cwtl
mov
inc
movl
pop
insl
mov
call
sti
adc
mov
fwait
ss
lahf
es
pop
xchg
adc
mov
mov
negb
xor
mov
cmp
inc
pop
mov
cltd
lods
test
sbb
jp
lds
mov
push
dec
fidivrs
or
mov
lret
call
jb
push
cmp
push
sub
xchg
into
xchg
test
data16
insb
dec
in
addb
movsl
mov
sbb
mov
push
sbb
sbb
test
jno
fistl
imul
popa
sbb
add
sti
rcll
jge
xchg
fwait
stos
addr16
lods
sbb
icebp
mov
nop
popa
mov
ljmp
pop
rcll
mov
pop
xchg
les
jmp
mov
lods
icebp
xchg
paddsw
shrl
je
jo
sbb
cmp
loopne
ss
jno
push
sahf
push
out
repz
cmp
divb
pop
or
mov
shr
mov
nop
pop
dec
cs
mov
loop
cmp
push
sub
fadds
es
scas
lds
cmp
xorl
cli
mov
sbb
rcll
sbb
orb
mov
outsl
cvtps2pd
mov
lahf
mov
shl
stc
inc
push
movsl
sub
pop
jns
dec
popf
out
push
push
dec
lret
and
sub
lea
adc
and
push
adc
jo
dec
lret
imul
adc
into
les
rol
mov
adc
inc
push
popa
xlat
or
clc
inc
mov
cmp
popa
inc
scas
sbb
cld
cmp
mull
mov
shrb
mov
xlat
test
subb
mov
push
mov
and
sbb
sahf
push
prefetch
sub
pop
mov
js
ret
loopne
sti
pop
sahf
bound
jp
add
loope
orl
push
cmp
pop
mov
imull
cs
adc
or
adc
pusha
cltd
push
cmp
enter
fsubrs
or
push
dec
fisttps
add
jb
adc
push
outsl
js
cmpsb
cmp
addl
or
outsl
out
mov
push
push
pop
xchg
gs
or
xlat
and
mov
dec
aam
mov
xor
inc
je
leave
mov
cmp
jo
js
nop
adc
popf
xor
jb
int
testl
mov
xchg
dec
imul
sbb
ret
and
dec
subl
mov
aaa
call
mov
test
xor
lcall
mov
push
scas
imul
inc
outsb
jg
cwtl
int3
nop
sbb
adc
data16
xor
add
pop
cmc
aas
hlt
fiaddl
xor
imul
dec
out
and
fnstsw
bound
jo
mov
add
xchg
dec
adc
adc
daa
dec
data16
xor
xchg
jne
test
in
or
pop
dec
out
mov
add
jl
or
shll
push
lcall
inc
xchg
fsubrs
and
adc
psubw
xchg
pushf
sti
rcrb
xchg
repz
pop
add
dec
push
xor
sbb
clc
jle
iret
fcmovnu
push
gs
push
pushf
stos
fs
inc
push
out
push
or
push
inc
or
test
xor
cmp
mov
mov
test
sub
fistpll
repnz
daa
pusha
sbb
dec
pop
cmpsb
and
adc
dec
arpl
dec
inc
cmp
loopne
jns
popa
lcall
push
dec
pop
sbb
push
test
test
mov
or
push
enter
ljmp
and
aam
iret
jb
lcall
js
cs
out
pop
test
sahf
sub
cltd
cmovs
scas
movaps
jne
sbb
xchg
sbb
shlb
and
pop
jmp
popa
pop
into
xchg
andl
lods
adc
fistpl
clc
jns
mov
lods
cmp
xchg
jns
or
mov
test
or
repnz
push
add
outsl
and
dec
out
sbb
rcrb
mov
xchg
hlt
es
je
jb
imul
pop
lcall
je
daa
int3
and
shl
repz
int
push
decb
sbb
mov
jb
or
enter
cmp
out
lods
test
adc
adc
lods
enter
mov
jle
mov
fnstenv
mov
in
xchg
xchg
jl
test
cmp
movsb
fsubrl
rcll
pop
push
xchg
push
insl
ss
sub
repz
or
lods
test
ljmp
xor
js
or
stos
fs
pop
pop
jecxz
and
mov
arpl
push
lret
in
xchg
je
mov
cmp
and
or
adc
fmuls
in
inc
out
cmp
mov
fsubrs
mov
dec
in
cwtl
jmp
mov
xor
push
shl
fbstp
rcrl
adc
lcall
sbb
fisttps
cltd
adc
push
lret
dec
lods
test
xor
loope
mov
dec
or
mov
cmpsl
jne
dec
cli
jecxz
sbb
pop
js
data16
clc
fisubs
push
loopne
cmp
pop
test
in
jnp
jg
fstps
mov
jnp
inc
mov
adc
rcl
sbb
bound
lcall
or
xchg
pop
repz
lret
adc
fisubrl
jne
in
sbb
shrb
mov
push
mov
daa
mov
jns
daa
xlat
xor
jbe
add
push
fmulp
xchg
lds
cmp
push
xchg
imul
push
sub
cwtl
inc
dec
inc
adc
movsb
lods
ljmp
sahf
mov
testl
mov
ds
repz
xlat
gs
dec
push
call
test
cld
adc
les
mov
mov
leave
sub
or
mov
jns
aad
leave
adc
repz
loop
xchg
movl
xchg
jmp
sti
inc
std
insb
xchg
and
test
sbbb
cmp
movsb
pop
xchg
sub
cmp
test
cmp
fistps
ror
setge
aaa
mov
or
add
xor
fisubl
xlat
jns
insb
sbb
mov
xor
shl
sti
xor
cmp
adc
mov
outsl
sahf
mov
les
lret
cmp
std
shlb
or
mov
fildl
es
and
add
pop
push
push
aad
jo
adc
hlt
xor
scas
jnp
out
push
dec
mov
push
mov
out
cmc
push
ljmp
enter
mov
jbe
push
pop
shlb
mov
lret
inc
cmp
movsb
dec
imul
movsl
stos
rorl
int3
mov
test
jnp
bound
dec
push
mov
and
adc
add
cmpsb
adc
jo
repz
stc
shll
inc
add
sbb
imul
aaa
adc
bound
movb
cmp
gs
aas
ficompl
out
es
mov
pop
push
adc
popf
nop
sti
jge
xor
add
fstpl
or
xor
test
inc
cmp
mov
in
outsb
mov
rcrl
sub
pop
insb
mov
and
xlat
mov
mov
loopne
adc
mov
out
subl
inc
xor
rcrb
icebp
mov
sarl
pushf
cld
sub
mov
pop
movsl
inc
sbbb
nop
leave
cs
sarb
and
aam
daa
mov
dec
mov
cmp
sahf
mov
rcll
and
ficoml
add
mov
pop
popf
sbbb
mov
ja
mov
sub
mov
xor
icebp
lcall
mov
push
popf
adc
adc
jbe
or
lahf
scas
xor
scas
cltd
roll
xchg
ds
xor
mov
adc
cmp
jmp
lahf
outsb
dec
stc
scas
dec
push
add
adc
mov
push
aas
or
dec
lret
mov
fdivr
adcl
in
and
jae
mov
or
sbb
call
jp
mov
adc
lret
push
roll
xor
jne
jno
jae
sti
xor
cli
jle
mov
mov
jbe
sbb
mov
stos
stos
add
add
ja
xor
xor
rclb
cmp
mov
and
imul
mov
cmp
pop
loopne
cs
mov
imul
add
xchg
je
xlat
insl
pop
push
fsubrp
sbb
dec
testl
xor
loop
mov
and
das
adc
rep
cmp
stos
cltd
outsl
mov
mov
not
xchg
shl
dec
adc
jg
sbb
in
loop
xchg
add
adc
mov
gs
dec
ret
sbb
aaa
outsb
das
lods
pusha
inc
push
fs
data16
sbb
leave
dec
leave
sub
xlat
popa
xchg
in
jo
or
sbbl
pop
int
dec
fildl
hlt
add
or
add
sbb
add
cmc
mov
out
pand
pop
adc
add
shl
fnstsw
lahf
push
and
shll
addr16
clc
out
and
lcall
jle
int
or
add
icebp
jp
leave
pop
dec
sar
es
add
sti
and
cmc
mov
scas
fldenv
mov
orb
imul
aam
pusha
and
outsb
inc
add
push
adc
iret
inc
outsb
daa
fnstcw
add
mov
notl
jecxz
bound
push
cmp
dec
dec
jo
icebp
mov
pop
pop
test
mov
cmc
or
out
jae
pop
les
or
add
dec
fstpl
cmp
ret
mov
jge
or
sbb
punpckhwd
mov
xlat
cmc
imul
adc
imul
sti
aaa
or
in
mov
cmp
repz
lock
mov
addb
pop
dec
mov
sbb
dec
cmp
movsb
sub
xlat
dec
mov
lds
jo
sub
bound
pop
outsl
ss
fstpl
lahf
lret
imul
popa
cmp
or
jl
xor
adcl
into
hlt
aam
xor
jno
cmpsl
stos
push
mov
rorl
mov
popa
mov
fistpll
cmp
push
fs
in
mov
inc
pushf
mov
adc
pushl
jg
dec
jp
xlat
sub
imul
adc
jge
out
mov
js
sbb
cwtl
pop
mov
jne
cmpsl
inc
mov
jg
scas
mov
int3
or
lret
dec
fsub
fwait
aaa
call
push
movsl
add
loope,pn
cmp
daa
push
stos
int
inc
sahf
xchg
dec
mov
fidivrs
inc
jle
ljmp
add
sub
push
or
leave
lea
mov
xorb
push
jb
and
jns
add
stos
nop
mov
jp
xchg
fistpl
pusha
dec
or
loope
mov
and
inc
push
movsl
adc
fdivrl
jo
test
sub
js
dec
cmp
cmp
pop
in
cmpl
lret
insb
ljmp
mov
leave
sbb
mov
jg
movsl
pop
pop
nop
jecxz
inc
repz
jge
inc
dec
xlat
addr16
mov
movsb
jle
inc
cmpl
int3
jg
dec
and
bound
xor
xchg
or
add
ljmp
dec
aad
mov
inc
xchg
mov
call
aad
adc
test
in
stos
xlat
enter
cmpsb
xorb
cmp
cmpsb
mov
cmp
push
std
sahf
xor
pop
mov
xor
insl
in
loop
dec
jno
push
sbb
mov
dec
repz
mov
xchg
roll
imul
cmp
pop
std
dec
pop
lods
imul
fldt
mov
aad
inc
icebp
sti
sbb
loopne
cld
ret
mov
push
and
popf
lahf
les
mov
in
stos
adc
les
add
inc
sub
jae
out
popf
sbb
inc
push
out
or
nop
in
std
push
pop
pop
cmp
inc
adc
test
pop
mov
les
dec
push
lret
shrb
xchg
push
ret
push
xchg
in
xor
mov
mov
call
push
mov
xor
data16
sbb
data16
sub
loope
adc
mov
dec
jge
lock
clc
lea
mov
add
sarl
and
xorl
pop
mov
outsb
push
mov
fcmove
insl
into
pushf
js
or
add
xchg
xor
pushf
adc
repz
jle
lods
or
adc
xchg
adcl
mov
add
mov
gs
icebp
xor
jns
inc
xor
leave
jbe
xchg
pop
orb
pushl
ret
lock
mov
movsl
jno
xor
xor
push
movsl
jp
rcrb
push
pop
jmp
movsb
data16
popf
mov
imul
sbb
mov
mov
popa
shlb
adc
test
xlat
nop
xlat
pushf
sbb
lret
mov
je
push
repz
inc
adc
xchg
test
lock
das
jge
cmp
pop
inc
fsubrs
add
test
push
fsts
aaa
xor
jb
and
out
jmp
jge
sub
xchg
push
push
fimull
pop
int
jmp
inc
push
dec
lock
out
inc
test
call
jno
and
in
push
aam
jle
mov
imul
cmc
xor
jmp
jp
adc
shr
xor
lret
sub
daa
pop
push
inc
add
fcmove
fpatan
mov
rclb
enter
mov
insl
fdivrl
pop
jle
out
pusha
xchg
fsubrl
or
pop
test
and
adc
inc
sbb
sub
jge
dec
pop
lcall
cld
cmp
das
jg
inc
or
stc
insl
sahf
jmp
pop
cli
mov
subb
jbe
notb
mov
lret
shrl
jno
jp
jge
cs
cmp
mov
cmp
ja
dec
insb
adc
out
outsl
idivl
sbb
mov
mov
mov
jno
xchg
add
push
mov
hlt
fiaddl
inc
dec
sbb
xor
std
dec
pop
in
int
xchg
in
adc
pop
cmp
mov
mov
cmp
ret
inc
rol
mov
idivl
push
push
or
cmp
shrl
shrb
xchg
mov
push
gs
cwtl
dec
out
dec
and
test
cmp
dec
xchg
pop
add
popf
inc
push
sbb
or
jle
scas
in
dec
pop
adc
negb
cmpsl
leave
aam
sbb
mov
push
aad
fdiv
xchg
sub
fistpl
push
lods
imul
mov
jne
test
mulb
or
adc
test
mov
repz
mov
shrl
fsts
cmpsb
test
xchg
or
movsl
sub
mov
cmpsb
push
jle
cli
je
add
shrb
repz
jecxz
add
imul
out
push
sbb
push
or
fmull
adcb
rcrl
jp
mov
jge
jge
mov
mov
jnp
dec
ljmp
mov
pop
vmovsldup
xor
jo
cmp
push
or
mov
bound
sbb
inc
lret
into
xchg
cmpsl
cwtl
jae
jmp
mov
movsl
mov
xchg
add
sub
decb
lea
mov
daa
xchg
sarb
jge
jns
xor
jp
dec
xchg
xor
adc
cmp
mov
xchg
imul
dec
pop
jb
ljmp
cmpb
cmp
mov
inc
xchg
push
jbe
pop
mov
mov
enter
enter
nop
outsb
jb
imulb
fwait
es
mov
lods
xchg
fstps
hlt
push
or
dec
hlt
addr16
int
cmp
mov
push
insb
pop
gs
imul
push
xchg
pop
jmp
imul
mov
mov
dec
pushf
leave
push
jbe
mov
popa
jb
mov
roll
cmp
test
aas
xchg
mov
into
ficoml
and
push
mul
sbb
imul
mov
sbb
in
outsb
pop
roll
fs
hlt
push
fwait
stos
pusha
adc
pushf
cltd
pop
cmpsl
mov
add
stos
insl
les
xor
daa
scas
xor
dec
fimuls
imul
and
je
pop
ret
loop
push
lret
jo
push
xor
out
or
xor
jns
sub
jno
sti
sbb
xchg
inc
in
int3
std
data16
daa
mov
cwtl
dec
lret
int
fdiv
push
mov
dec
jae
push
jo
enter
in
dec
loope
add
sub
push
jnp
pop
adc
mov
fistps
mov
int3
or
add
xchg
aad
xchg
testl
in
imul
insl
aaa
testb
xchg
fildl
outsb
js
lahf
cs
in
mov
jmp
inc
subb
push
out
mov
test
lds
push
mov
pop
pop
movsl
ljmp
cmp
cmpsb
mov
mov
fcomip
inc
jge
aad
cli
adc
xchg
jb
inc
adcl
jmp
and
inc
repnz
movsl
mov
sbb
xchg
mov
or
mov
loop
rorl
cmp
adc
mov
mov
cmc
mov
xor
sbb
dec
jecxz
shl
fwait
xchg
clc
add
lahf
jnp
dec
or
call
fistpll
fld
mov
rorb
cmc
into
fiaddl
jb
aam
jl
repnz
jne
mul
mov
lock
jns
dec
icebp
popl
mov
and
cmp
and
jg
daa
out
mov
xchg
sar
icebp
icebp
cmp
mov
insb
stos
out
sbb
cmpsb
cmpsb
cmp
ret
cld
repz
or
and
fisubl
outsb
pop
mov
stos
cli
xlat
dec
int
outsl
notb
popa
or
subb
repz
out
shrl
mov
addb
adc
mov
movsb
inc
orb
push
jmp
dec
sarl
xchg
xor
ss
dec
mov
jge
mov
ret
pop
or
push
add
js
jp
dec
mov
icebp
stos
cs
test
sbb
xchg
sbb
and
adc
pop
sbb
sbbl
mov
sbb
sub
in
xchg
in
pop
dec
xchg
lods
rcrl
sub
fnstenv
mov
jle
jp
push
scas
into
cmp
xchg
mov
movsb
roll
mov
mov
popa
fmul
ljmp
sbb
hlt
test
xor
mov
pop
cmpsb
ffreep
dec
fists
adc
inc
daa
stos
in
lcall
push
gs
mov
pusha
xlat
imul
push
push
sbb
xchg
loop
xchg
imul
repnz
jecxz
cli
sbb
neg
dec
test
pop
inc
jo
std
xchg
ljmp
cmp
bnd
mov
dec
cmp
push
push
jae
xchg
mov
lret
xlat
test
jg
sbb
mov
xchg
xor
pop
cmp
aas
dec
cld
sub
adc
xor
loop
xor
add
iret
and
mov
stos
or
shll
cltd
or
xor
or
push
jb
sub
roll
mov
cmp
jecxz
mov
mov
dec
mov
mov
es
pop
pop
push
inc
push
jo
sbb
xchg
jo
xor
enter
push
mov
dec
sti
pop
rorl
jae
dec
pop
clc
es
mov
cmp
pop
ret
xlat
in
cmp
das
lock
dec
jae
rclb
rorb
sahf
xchg
sahf
das
lahf
xchg
xor
cmpsl
insl
in
sub
mov
mov
push
add
mov
mov
or
xchg
sbb
aad
clc
pop
jo
fwait
push
popf
aas
mov
and
inc
arpl
test
inc
or
sub
out
cmpsb
inc
test
add
cmp
or
and
mov
cmp
sbb
in
pop
push
sub
mov
je
popa
out
maxps
roll
mov
adc
sub
les
mov
xchg
orb
ss
mov
es
movsl
daa
or
xor
xchg
jb
stc
and
ret
aas
movsl
jno
or
js
sub
mov
pop
into
sbbb
in
xchg
outsb
pop
sti
pop
cmp
and
in
push
sbb
stos
or
mov
out
jnp
dec
nop
out
pop
cmp
cmp
inc
jb
xchg
push
in
fsubrs
xchg
leave
enter
popf
fmull
in
jb
push
sub
jne
sub
mov
cmp
add
inc
scas
std
push
jo
bound
imul
movsb
fimull
dec
jp
fwait
jmp
imul
fidivrs
das
or
mov
pop
daa
mov
and
jo
xlat
dec
lea
jns
push
add
cmp
mov
xchg
jmp
call
int3
in
scas
cmp
push
lret
add
enter
call
movsb
or
lods
mov
bound
sub
jge
mov
cmpsl
mov
repz
std
mov
sbb
outsl
lea
jmp
sahf
jae
aad
inc
imul
push
pop
data16
add
jbe
std
and
sbb
xlat
push
cmp
mov
cmp
lahf
xchg
xchg
mov
jne
imulb
pop
mov
pop
xor
add
dec
leave
jo
push
dec
test
mov
mov
xor
push
ja
sbb
cmpsb
lahf
hlt
pushf
push
inc
mov
iret
pop
xor
aas
pop
pop
sbb
push
or
scas
adc
xchg
fwait
mov
push
and
in
jbe
mov
xchg
in
call
test
ret
jmp
inc
pop
ds
push
into
or
mov
xchg
pop
scas
test
lea
dec
push
lret
lcall
stos
sbb
mov
icebp
rcl
inc
mov
das
jmp
sti
inc
jne
sub
inc
ret
cmp
roll
int3
nop
jmp
add
test
xor
pop
inc
fs
out
cmpsl
insl
idiv
or
push
stos
jb
scas
test
xor
outsl
outsl
pop
xchg
rcrb
hlt
and
in
mov
fiadds
in
inc
popa
inc
inc
daa
adc
push
iret
adc
jnp
or
enter
addr16
jae
jnp
jmp
mov
sbbl
xchg
mov
adc
inc
cvtdq2ps
mov
xchg
fisubl
xchg
loope
scas
inc
dec
inc
flds
sub
popa
pop
int
fcompl
in
or
mov
out
jne
fistpll
jne
dec
decl
lods
add
inc
sbb
inc
push
mov
cmpsl
mov
or
inc
sub
add
call
cmpsb
dec
push
rorb
daa
mov
outsl
jmp
sbb
mov
aad
adc
insb
psrlw
shll
sub
xchg
testl
cmp
mov
and
pushf
xchg
pop
rclb
rcl
out
in
lahf
cli
sub
loopne
add
call
add
add
xchg
sub
outsb
movsl
jmp
jbe
fwait
push
fildl
in
imul
pop
imul
fistl
lcall
lar
cwtl
inc
ret
iret
cli
cmp
xor
repnz
int
cmp
cmc
aas
mov
dec
insb
sahf
mov
lods
pushf
mov
movsb
add
pop
in
out
es
mov
jp
das
scas
orl
cmp
cltd
sub
adc
jmp
jns
lret
or
jo
xchg
lock
stc
or
xchg
fldenv
insl
rcll
pmuludq
rcrb
push
jno
push
and
int
cmp
mov
scas
jb
jbe
dec
popa
push
rorl
cmc
prefetchwt1
rorb
or
scas
fsubrs
scas
test
sub
mov
movb
jge
imulb
mov
icebp
xchg
mov
loop
pop
jg
sahf
xchg
jae
cmp
lret
dec
icebp
rcll
repz
fnsave
jns
mov
xor
movl
xchg
xor
andl
insb
popf
in
xchg
jb
push
dec
xchg
leave
dec
xor
dec
add
add
jae
dec
not
xor
fidivl
or
sysexit
pusha
and
clc
lcall
lea
push
push
fs
mov
jne
xchg
inc
mov
jno
adc
ja
mov
pop
mov
std
call
in
and
fsub
repz
test
lods
addl
xchg
dec
dec
in
mov
fs
jg
out
mov
out
scas
sbb
leave
inc
xor
lahf
cli
mov
inc
jne
ljmp
sbb
pop
xorb
imul
push
sub
xchg
jae
shlb
xchg
ret
xor
adc
push
pop
mulb
inc
xchg
push
xor
js
ret
cmpl
repnz
negb
notb
mov
mov
mov
or
adc
or
lea
adc
mov
inc
cmp
jl
icebp
jg
imul
lock
sbb
iret
nop
out
movsl
or
shrb
ds
ljmpw
xchg
xchg
push
shrl
sub
dec
lret
sbb
xor
aam
and
mov
jg
leave
icebp
cmp
sub
dec
and
icebp
scas
mov
xchg
ss
mov
cmp
nop
jge
lods
int3
test
fistps
icebp
adc
aam
ds
mov
sub
inc
sbb
add
xchg
mov
repnz
arpl
xchg
loop
push
dec
adc
sbb
test
cmp
out
dec
fs
dec
cmp
add
in
mov
clc
rcr
jb
mov
sub
rcll
pop
fisubs
cmpsl
insl
inc
sbb
insl
adc
add
out
pusha
jmp
lods
or
push
fidivs
inc
cmp
sub
aaa
add
mov
jmp
cmc
cltd
push
mov
jmp
cmp
daa
and
pop
addr16
inc
fs
fbld
push
jg
jne
push
imul
inc
iret
cltd
dec
adc
add
fbld
push
loopne
add
cmp
nop
sahf
std
mov
mulb
daa
test
xchg
xchg
stc
mov
cmp
adc
bound
adc
xchg
cmp
nop
inc
cmc
mov
mov
sub
popf
xlat
fidivrl
or
xor
clc
iret
iret
sub
ror
adc
adc
xlat
sahf
mov
dec
jmp
sbb
or
sbb
into
shrl
scas
push
add
dec
jp
enter
test
es
jb
mov
mov
cmp
push
adc
push
cwtl
movsl
in
push
add
xchg
lahf
js
adcl
push
xchg
or
xor
aam
mov
xor
add
xor
sbb
mov
test
fidivl
jbe
arpl
shrl
sbb
fwait
xchg
cld
inc
mov
hlt
test
jnp
lret
adc
aaa
das
hlt
sbb
popl
outsb
or
in
pop
mov
lcall
dec
inc
orb
les
push
ret
loopne
test
cmp
inc
and
xchg
roll
cmp
push
out
cmp
addl
adc
mov
or
stc
roll
sub
mov
ret
mov
sarl
int
add
ljmp
or
dec
ds
aas
les
stos
mov
fsubrs
xchg
stc
and
pushf
and
push
xchg
cwtl
insb
push
dec
xor
in
inc
adcb
les
cwtl
cmpsb
into
mov
dec
subb
xlat
push
cwtl
fs
inc
and
lret
xchg
mov
cmpsb
std
sub
ret
xor
or
test
outsb
repz
les
lea
lcall
add
sbb
insb
inc
andb
fldcw
dec
hlt
mov
les
add
popf
dec
add
push
pop
stos
and
push
xchg
add
adc
jl
inc
es
mov
sbb
scas
popa
shlb
mov
mov
push
sub
xlat
mov
jae
and
repz
add
add
cmp
mov
mov
xor
mov
jbe
es
sbb
fdivl
sub
mov
mov
dec
push
mov
subl
add
lcall
ret
daa
mov
sub
jge
mov
sub
pop
xchg
iret
and
push
shlb
sti
ficoms
dec
mov
imul
loope
cli
sbb
add
inc
add
mov
and
xchg
sub
add
jecxz
rclb
inc
clc
mov
push
and
pop
or
pop
out
xor
adc
cmp
mov
mov
frstor
loop
mov
nop
jp
add
out
cmpsl
repz
rorb
xchg
cmovae
xor
loop
cmp
sbb
mov
mov
cmp
shl
loop
sub
push
mov
dec
rcl
mov
add
pop
aaa
cmp
icebp
jmp
mov
xchg
fwait
fwait
cmp
dec
lret
push
shrb
push
call
sbb
mov
lock
fildl
xchg
jbe
jmp
insb
out
in
lods
dec
xchg
inc
or
jb
jb
int3
dec
and
sub
outsl
cmp
push
sti
sub
cmp
addr16
sub
test
out
loop
mov
jae
mov
enter
mov
lods
push
cli
mov
add
pop
in
in
adc
inc
xchg
xchg
pop
int
idivl
xor
clc
cmc
test
inc
lds
imull
ficoml
mov
lcall
js
das
fmul
cld
lret
cmp
push
cmp
cmp
pop
push
inc
testl
jg
push
or
adc
scas
fildl
sbb
add
adc
and
outsb
adc
jbe
mov
pop
push
repz
fst
jmp
mov
adc
pop
out
popa
int3
fwait
adc
rolb
cmpsb
xor
testl
lods
shlb
mov
mov
add
push
xchg
ljmp
lods
cmpb
jg
inc
jmp
xchg
sbb
addr16
push
call
iret
xchg
iret
clc
lret
mov
iret
test
xor
jp
stos
lret
xor
mulb
xchg
xchg
inc
sti
mov
mov
movsl
adc
push
xchg
jle
jno
jb
dec
lcall
push
aam
jp
mov
inc
fisubl
or
xchg
je
fists
and
orb
xchg
or
xchg
pop
nop
xchg
dec
jp
pop
add
cltd
lds
iret
sbb
fdivr
clc
aaa
cli
or
stos
xchg
nop
int
rol
fsubp
dec
jne
test
js
divl
nop
dec
rcl
inc
dec
sub
cmp
pop
xchg
fwait
lods
scas
xchg
xchg
pop
cli
and
movsl
cwtl
adc
stc
call
cmp
jge
cmc
fistps
mov
aam
cmp
or
mov
inc
sbb
or
repz
inc
into
in
sub
addr16
xchg
fimuls
push
sub
int3
std
repz
clc
and
xchg
rorl
dec
or
cmpsl
xchg
mov
loopne
jle
dec
aaa
stos
sbbb
popa
jmp
in
xchg
push
mov
or
outsb
sub
sbbl
sbb
lret
jae
imulb
enter
nop
in
out
xor
dec
pop
xchg
cmp
xchg
adc
inc
rolb
addb
xchg
lods
sub
jns
rcr
jle
iret
call
mov
outsb
addl
push
sbb
mov
jecxz
jmp
pop
cmpsb
push
ret
xchg
pop
test
xchg
and
nop
jp
nop
int
movsl
outsb
add
push
test
pop
xchg
je
jbe
sub
mov
scas
inc
sti
sub
sbb
jp
fstl
scas
cwtl
add
pop
das
mov
scas
ret
pop
into
jbe
xlat
cmp
cmp
ds
add
cvtpi2ps
push
sbb
fcoms
push
dec
loope
inc
sbbb
test
icebp
ja
and
mov
clc
das
movsb
mov
cmp
mov
adc
add
mov
mov
mov
stc
mov
sarl
jecxz
loope
mov
movsb
ret
sti
ljmp
ret
arpl
pop
inc
xchg
scas
push
pushf
dec
sub
cmpsl
rol
xchg
mov
loope
sub
cmpxchg
scas
or
sub
fwait
insb
lds
pop
push
inc
push
popf
mov
scas
fdivr
ljmp
cmp
loopne,pt
dec
imul
test
lods
lret
adc
das
into
sbb
insl
jne
into
xchg
imul
aam
ljmp
dec
pop
aas
sti
push
push
iret
lods
dec
pop
in
ret
daa
add
jb
xor
jecxz
daa
ljmp
clc
mov
lea
xor
sub
dec
cmp
mov
iret
xchg
sbb
push
in
dec
sub
cmpl
adc
js
ret
out
mov
inc
pop
push
fisubs
mov
fcomps
lds
xchg
fildll
ret
jnp
mov
hlt
xor
ds
adc
repnz
push
sbb
jnp
mul
ror
pop
sub
jo
push
sahf
pusha
mov
lahf
sar
jp
mov
iret
mov
rclb
pop
lret
test
cmp
xor
add
mov
push
icebp
dec
push
aad
pop
push
push
push
cmpl
cmp
jmp
cmpsb
pop
js
bound
pop
out
cld
sub
jmp
movsl
dec
mov
dec
cmpsl
and
sub
push
test
cmp
xorb
xor
or
sahf
push
fs
jp
push
jge
loope
push
xor
loope
add
imul
adc
sbb
insb
dec
fsubr
mov
jo
add
enter
loope
dec
push
jo
lret
popf
cld
fsubrl
adc
imul
scas
or
cs
push
sbb
adc
iret
mulb
std
sub
pusha
pop
call
fcoms
mov
in
jge
loope
call
enter
jbe
lea
dec
mov
scas
and
ljmp
add
adc
cli
test
sub
jle
push
daa
inc
sahf
add
cmc
add
push
jns
mov
mov
push
fs
inc
jns
cs
jge
cmpb
cld
mov
rclb
add
adc
add
out
dec
gs
mov
or
dec
pop
pop
fsubp
out
mov
addr16
iret
in
cmc
and
fidivrs
inc
aad
pusha
dec
push
stos
add
icebp
std
cmpsl
cmp
lcall
cld
add
cmp
cld
cmp
loop
jecxz
mov
movsl
pop
or
jae
mov
jne
adcb
and
inc
test
fucomip
mov
and
push
movsb
out
xchg
aaa
shr
push
push
rcrb
sbb
or
aam
enter
or
jnp
enter
cmpsl
shl
pop
push
jns
icebp
and
pop
cmc
jl
inc
add
and
add
mov
orl
ficompl
mov
jmp
pusha
sbb
pop
fldenv
out
xor
xchg
mov
jg
mov
out
mov
xchg
jae
adc
out
movsl
xchg
lret
jmp
sti
sbb
cmc
mov
lock
inc
fldcw
dec
lcall
ja
test
popa
lods
leave
fidivrs
dec
dec
and
cltd
call
ljmp
aad
xor
sbb
outsb
and
andb
out
out
jl
and
jne
outsl
out
mov
mov
inc
bswap
adc
cmp
lea
insl
fcomps
sbb
pushf
addb
jge
xor
dec
inc
or
imul
jecxz
das
je
pop
cltd
mov
mov
mov
jl
fbstp
sbb
inc
stc
jmp
das
das
xchg
repnz
cld
sahf
ret
inc
cld
fiaddl
pop
scas
fs
push
addb
cmpsb
icebp
push
dec
adc
xchg
push
test
out
and
dec
inc
ljmp
adc
xchg
je
pop
pop
sub
jecxz
pushf
mov
sbb
popa
or
jecxz
lds
ret
stc
repnz
pop
enter
test
loop
jle
das
mov
lret
sbb
mov
pop
aam
xor
push
loope
sub
insl
xlat
mov
das
hlt
test
xchg
adc
or
aas
and
aaa
and
add
adc
push
sbb
in
add
xchg
xor
cmc
shlb
push
shl
cmp
jg
or
je
pop
mov
and
sbb
enter
popa
push
cmp
and
fbld
add
sbb
dec
jne
fcmovu
jae
push
sub
enter
sbb
and
cmp
jnp
hlt
xchg
fisttps
push
mov
ds
pop
test
nop
fwait
aam
sub
jmp
in
movsl
inc
idivl
add
and
in
in
pop
mov
add
push
shlb
cmp
pop
aam
lods
mov
sub
pop
shlb
adc
cmp
popf
xchg
xlat
xchg
cs
xor
pop
int
pop
scas
fwait
aam
cmpsl
or
adc
pop
and
sarl
incb
jno
jb
xor
rol
xchg
out
cmp
jmp
adc
jecxz
inc
fsts
mov
in
adc
pop
jmp
movsl
cmp
cmp
mov
mov
fnsave
jge
sub
sbb
xor
decb
add
cmp
call
mov
cmpsb
xor
mov
icebp
mov
dec
mov
outsl
movsl
xchg
mov
hlt
test
mov
arpl
xor
scas
dec
mov
add
dec
outsb
imul
mov
inc
mov
and
push
jge
mov
cli
das
sbb
andl
xchg
movsb
iret
daa
dec
in
cmp
adcb
mov
sub
sahf
jge
fdivl
dec
outsb
jmp
push
jp
mov
sbb
xor
adc
popf
jbe
gs
aad
shr
mov
pop
and
xchg
dec
loope
dec
cmp
aad
pop
icebp
inc
dec
adc
sar
scas
xor
out
pminub
into
in
test
in
fisttpll
test
fcmovu
rdtsc
mov
mov
jle
xchg
push
es
push
dec
xor
iret
gs
into
inc
testb
push
loopne
shlb
pop
xchg
clc
sbb
mov
mov
fbstp
push
mov
and
push
inc
mov
aas
xchg
cltd
inc
bound
jae
push
jge
je
dec
and
push
dec
sub
stos
jne
inc
adc
test
loop
lahf
jle
fmuls
jo
jge
gs
imul
mov
inc
out
loopne
mov
int3
mov
cmpl
xlat
push
xchg
nop
pop
sti
scas
ljmp
pop
mov
cli
adc
xchg
xor
test
add
jl
cld
loop
add
xchg
sub
push
pop
test
ds
sub
add
fdivrl
hlt
mov
or
test
pop
in
in
xor
xchg
cmc
fisttpl
pusha
mov
pop
lahf
ljmp
add
movsb
cmp
mov
jo
fdivrs
into
lods
jae
mov
adc
or
xor
pop
fistl
out
xor
push
pop
push
stos
add
and
repnz
imulb
sbb
jmp
js
iret
cmp
xor
jecxz
and
call
mov
xchg
jae
mov
pusha
push
dec
sbb
dec
push
jge
dec
xor
jmp
jge
jge
int
push
insb
or
mov
adcb
mov
jno
mov
jbe
sbb
ds
dec
push
push
sub
mov
lods
push
lret
imul
movsl
mov
shll
f2xm1
cmp
test
lods
aam
popl
faddl
shll
add
xchg
add
shrb
pop
inc
adc
pop
in
push
fldt
not
mov
popf
lea
cs
push
fldt
sbb
add
jp
ljmp
mov
int3
mov
dec
aas
outsb
into
outsb
movsb
cmp
imul
lret
ss
nop
push
inc
pop
xor
jne
push
inc
push
les
xlat
ret
dec
xchg
shlb
pop
sbb
mov
jno
pop
adc
cmpsl
ret
or
out
fdivrl
leave
ljmp
lahf
adc
aaa
lret
testb
mov
test
sub
mov
push
and
mov
inc
in
mov
pop
cs
lea
int3
sahf
add
shrl
cmc
fdivrl
lds
pop
sbb
out
cs
and
mov
stos
test
cmpsl
lahf
add
xor
jl
js
dec
inc
jmp
subl
dec
mov
aaa
xor
cli
mov
xor
lret
xchg
mov
cmp
xor
dec
mov
test
out
shrl
mov
sub
push
inc
aas
fidivrs
push
das
pop
arpl
mov
mov
dec
xchg
scas
cmp
push
int3
negl
jae
push
jne
into
dec
pop
hlt
cmc
mov
out
out
add
jge
push
je
negb
lret
jne
xor
jge
xor
daa
pop
sub
pop
push
adc
sbb
ret
push
mov
inc
pop
add
or
out
mov
jmp
das
into
or
int
mov
sbb
and
sbb
pop
fisttpl
dec
mov
setg
cmp
cld
lods
mov
add
cwtl
jmp
jmp
mov
jge
cmpsb
dec
jo
mov
cld
mov
cmc
nop
and
mov
repz
xchg
bound
pop
je
repz
adc
pusha
dec
mov
mov
cmp
stos
pop
int3
rorb
push
xchg
xchg
cli
lea
jmp
shlb
inc
loop
mov
imul
mull
cli
fidivs
stos
in
mov
push
jb
jecxz
inc
sub
dec
xor
mov
leave
xor
pop
rcl
popf
je
int
ja
enter
add
fwait
std
cwtl
mov
jae
pop
outsb
dec
arpl
out
dec
inc
imul
sbb
mov
shll
mov
popf
movsl
jns
pop
dec
out
and
popf
arpl
and
js
jmp
jge
fcoms
sub
nop
clc
cltd
pop
inc
leave
mov
les
dec
imul
pop
xor
incl
push
pop
out
xlat
shl
mov
and
loop
inc
inc
or
lods
fstpt
daa
lahf
mov
cmp
mov
dec
lds
mov
call
push
jge
pop
js
sub
mov
push
insl
aas
movsb
mov
jnp
sub
dec
jno
das
add
push
jp
inc
pushf
shlb
mov
subl
mov
jne
idivb
adc
push
mov
leave
ret
cmp
xor
rolb
repnz
sbb
stos
sbb
mov
mov
dec
std
adc
insl
dec
lds
ret
enter
xor
out
out
xchg
xchg
fmulp
jecxz
mov
movsl
fisttpl
stc
add
loop
out
sar
pop
ret
xchg
shll
gs
sbb
inc
addr16
mov
inc
hlt
std
mov
fsts
stos
dec
add
push
jecxz
into
sbb
cs
hlt
loopne
mov
pop
and
xchg
sbb
jbe
hlt
mov
inc
or
or
push
or
in
sub
adc
pop
jp
fstl
fistpl
ljmp
push
fnstenv
jne
mov
adc
xchg
xor
dec
mov
jl
lret
jbe
dec
dec
shll
add
imul
mov
cmp
mov
dec
cmc
jbe
dec
sub
jns
xchg
out
mov
lods
and
in
ljmp
inc
jp
jns
cmp
leave
cwtl
push
or
dec
jg
pop
lcall
jns
mov
push
pop
mov
bound
data16
in
test
jbe
faddl
lods
inc
mov
push
mov
fwait
loopne
inc
xchg
inc
in
push
out
popf
addr16
xor
pop
cli
es
mov
push
xor
imul
das
cmp
imull
add
loopne
xor
adc
xor
push
out
movsl
sub
mov
ret
pop
cs
or
push
sub
inc
adc
push
lods
fistps
pop
cmp
imul
cltd
lds
mov
les
pop
in
mov
test
sub
xchg
xor
add
jbe
setge
loop
xchg
leave
cmp
add
mov
push
sti
xorl
or
rcr
jmp
fnstenv
call
ja
movl
and
in
mov
lds
pop
mov
int3
xchg
dec
stos
rcl
and
iret
cmpsb
pop
sti
xchg
icebp
mov
in
xor
inc
cmpsb
adc
repz
lahf
insb
sub
push
hlt
jo
add
pop
push
in
arpl
dec
sub
movsl
insl
adc
pop
mov
pop
mov
loop
mov
sbb
gs
jns
imulb
arpl
pop
or
push
mov
jle
and
dec
lahf
sub
js
add
dec
mov
cli
mov
movsb
mov
inc
movsl
mov
movsl
dec
cmp
movsl
add
inc
mov
sbb
ljmp
dec
pop
jecxz
adc
dec
enter
lret
ja
pop
sub
decb
xchg
pop
or
dec
stc
iret
lods
cmp
cmpsl
xor
push
loop
insb
pop
mov
jmp
data16
or
and
out
out
xor
dec
mov
lret
dec
fmuls
inc
pop
xor
sub
fwait
pop
push
mov
outsb
mov
imul
testb
fucom
mov
xor
fwait
xchg
aam
mov
push
lods
std
pop
pop
add
cld
xlat
or
xor
lret
push
and
push
xchg
fsub
mov
sarb
pushf
aas
jb
pop
push
mov
jle
in
mov
and
bound
sbb
scas
xor
orb
lret
insb
pop
xor
cltd
jbe
jmp
psubusb
sbb
jo
xor
rolb
inc
xchg
stos
cld
aas
xor
jns
mov
not
mov
sbb
xchg
pop
xchg
or
push
pop
or
sarb
std
adc
out
xor
push
or
clts
bts
sub
inc
int
mov
stc
ja
idiv
aaa
jae
sbb
imulb
push
movb
adc
cmp
lods
mov
cmp
imul
pushf
cmpsb
scas
rcr
test
lahf
mov
add
push
and
sub
pop
aam
scas
sub
scas
mov
mov
cmp
push
sub
xchg
dec
sbbl
gs
shll
push
inc
jns
lock
scas
bound
shrb
lods
push
sarb
outsl
mov
pop
arpl
js
nop
pop
adc
insb
xchg
fs
test
xchg
outsb
out
sub
out
mov
sti
add
aam
es
ljmp
cmpsb
jbe
stc
cmp
xor
add
cltd
dec
push
sub
fistpll
scas
out
mov
dec
push
std
icebp
pop
das
pop
aaa
push
daa
je
sub
or
sbb
imul
and
sub
aam
push
mov
fwait
ds
mov
lret
addl
fs
mov
mov
cmpsl
mov
in
add
xchg
lds
inc
xorl
aam
jle
push
dec
xchg
adc
cmp
jp
push
cmpsl
rorl
jns
lods
push
adc
ret
sbb
add
mov
pop
inc
outsl
adc
out
and
ja
aad
inc
lret
fsubs
pop
push
mulb
fisubrl
add
mov
mov
adc
les
cmc
or
mov
mov
jp
int
mov
inc
shr
ret
dec
xchg
xchg
adc
xchg
sbb
push
idiv
mov
fucom
push
push
test
xchg
jecxz
cmp
insb
mov
lods
mov
jge
adc
or
lea
jbe
das
lods
mov
dec
jb
push
mov
cmp
xchg
xchg
cmp
add
push
pop
and
loop
cmp
add
jns
int3
scas
repz
jl
icebp
stos
jge
xchg
xor
cmc
dec
lds
rolb
jg
sbb
dec
jp
pop
loope
icebp
and
or
sub
or
and
rcrl
pop
push
mov
pop
mov
scas
imul
sub
and
int3
and
xor
fmuls
insb
fsub
cli
mov
push
int3
sahf
add
jo
inc
stc
stc
jl
addr16
mov
icebp
or
dec
lods
xor
push
in
cmpl
mov
ljmp
cltd
cmp
jge
mov
push
xchg
negb
enter
jae
cmp
sbb
adc
mov
push
scas
adc
mov
rcl
je
jnp
push
paddsw
cmc
inc
loopne
jge
pusha
push
in
adc
addb
loopne
mov
jp
mov
clc
lahf
or
fstl
jmp
xor
jns
or
or
and
fsubp
dec
std
fucompp
xor
cmp
fadds
jge
adc
add
fstpt
dec
leave
leave
mov
mov
icebp
cmp
popa
jne
mov
out
and
mov
test
pop
sub
mov
rcrb
and
xor
gs
add
push
call
pop
cmpsl
in
xor
stc
pop
lods
divps
es
xor
scas
mov
xchg
mov
adc
mov
jmp
int3
ret
sub
adc
out
fiaddl
pop
sbb
mov
mov
aad
and
stc
cs
xchg
sbb
sbb
loop
in
jnp
outsl
sbb
testl
xchg
or
and
sub
fistpl
ja
and
and
inc
inc
and
sbb
test
icebp
daa
push
sbb
insb
imul
lea
xchg
sbb
push
in
mov
adc
sbb
arpl
inc
std
mov
movsl
sub
movsl
or
sti
clc
xor
pop
pop
mov
jmp
jge
cmp
in
stc
xchg
dec
push
pop
inc
stc
test
mov
shrl
inc
jnp
pop
push
add
and
pop
pop
add
sub
je
mov
add
push
or
leave
cwtl
popa
mov
in
test
mov
sbbb
inc
loope
xchg
popf
jp
jo
daa
pop
xchg
in
mov
leave
xchg
test
int3
jecxz
jmp
loopne
push
hlt
inc
adc
pop
dec
cmp
cmp
ljmp
ret
repz
mov
dec
das
xor
xor
icebp
movsb
aad
push
pop
fcompl
out
into
add
xchg
jge
sbb
jo
adc
inc
adc
mov
and
push
scas
inc
push
lds
in
test
cld
mov
movsb
cli
dec
xchg
sub
jb
dec
adc
cmp
mov
jo
aaa
adc
enter
lret
inc
mov
rcll
jnp
xchg
mov
call
mov
aam
gs
xchg
or
adc
fisubrs
fisubrs
inc
jnp
gs
mov
orb
dec
mov
std
mov
pop
or
jb
push
mov
cltd
dec
out
cwtl
outsb
ret
lret
or
cmpsb
int
push
mov
xchg
std
fistl
js
mov
outsb
cld
or
jb
dec
loopne
xchg
outsl
outsl
xchg
clc
outsl
add
nop
pop
sub
add
nop
ret
mov
sub
jno
enter
dec
sbb
sub
sub
inc
out
dec
cmp
lret
pop
add
icebp
pop
mov
repz
adc
clc
add
orb
ret
mov
cmp
jae
pop
ljmp
shll
push
movsb
mov
mov
test
push
mov
mov
gs
sub
push
rclb
in
in
xchg
pop
jne
cs
add
fsub
lods
rcll
mov
inc
xchg
xor
in
fbstp
in
sahf
cli
enter
fdivrl
mov
mov
insb
xor
and
cmp
xor
leave
and
add
and
icebp
outsl
je
loopne
or
mov
push
add
push
sbb
cmc
cwtl
and
scas
nop
popf
imul
mov
mov
jo
xchg
movsl
divb
xchg
in
scas
lods
mov
std
rolb
xor
rclb
mov
into
imul
mov
ljmp
xchg
scas
jb
or
xchg
push
adc
sub
xchg
div
dec
cltd
aas
mov
jnp
fwait
jns
aas
jno
lahf
push
cld
flds
test
sub
mov
andl
loope
adc
mov
mov
cmpl
and
inc
mov
es
mov
push
or
xor
xchg
inc
and
movsl
aaa
ds
dec
sub
movsl
stos
cli
fs
stos
jno
mov
cmpsl
mov
rclb
dec
jns
mov
push
lcall
add
cltd
or
push
xchg
mov
pop
mov
in
lods
enter
decl
add
frstor
sbb
adc
loope
mov
and
adc
mov
dec
cmp
pop
mov
and
inc
ds
jno
dec
fisttps
jge
cli
inc
ret
enter
shll
mov
ljmp
mov
sub
add
add
jmp
test
in
lock
dec
xchg
adc
pop
cmp
adc
les
jmp
sub
inc
jnp
mov
aad
call
adc
out
mov
xchg
sarb
arpl
out
sarl
jecxz
sbb
mov
pop
cmpsb
cmc
and
sub
push
pop
and
insb
jle
lea
dec
aaa
or
sub
adc
mov
outsl
loopne
pcmpgtd
xor
pop
je
shll
or
inc
push
js
push
pop
icebp
cmpsl
mov
cmp
loopne
jge
call
lcall
jecxz
sbb
ljmp
cmp
icebp
leave
adc
lret
sub
daa
lcall
mov
sbb
je
push
push
xchg
push
sbb
jnp
jecxz
mov
jo
xchg
out
test
inc
outsl
add
iret
cmp
mov
jp
adc
push
add
insl
add
clc
sti
iret
ret
push
mov
and
lahf
inc
mov
jecxz
scas
pusha
pop
inc
push
or
cmp
dec
ret
lea
fs
xor
or
cs
add
fistpll
lret
cmp
jmp
adc
stc
fdivrl
mov
jbe
cmpsb
jno
xchg
mov
movsb
mov
mov
imul
and
jo
push
and
dec
mov
and
xchg
sub
inc
lret
ja
enter
jmp
xlat
mov
pop
mov
lods
rorl
mov
out
add
mov
imul
cmp
mov
fsubs
dec
inc
andb
pop
jmp
or
mov
push
not
jb
inc
or
aaa
and
mov
jecxz
mov
aaa
in
negb
xchg
mov
aas
inc
push
jecxz
aad
inc
xchg
sti
inc
out
ret
repnz
out
in
jg
mov
ljmp
xor
in
jmp
ljmp
push
sbb
pop
sti
ror
stc
pop
sbb
pop
fsts
jge
jmp
or
pop
fstpl
stos
add
lods
lods
gs
sahf
out
dec
inc
xchg
inc
push
movsl
xchg
push
shll
rol
icebp
pop
pop
stos
je
stos
lock
mov
loop
pop
pushf
cmp
sub
push
jns
out
sti
test
mov
xor
es
push
pop
xor
sbb
lods
jle
or
inc
cs
adc
lret
test
push
or
jb
ror
inc
in
mov
lret
mov
cs
cmpsb
push
sub
push
fimuls
insb
jae
mov
xor
cmp
cli
in
jge
mov
aas
jecxz
dec
add
jl,pn
xchg
xor
inc
push
xlat
in
stc
cmpsb
movsl
and
gs
xor
nop
repz
mov
cmp
cmc
popa
outsl
adc
clc
popa
mov
subl
or
sbb
orb
jmp
test
xchg
out
rolb
lds
incl
mov
mov
cmpsl
jb
mov
push
nop
sbb
xchg
xor
jae
sbbb
lock
add
fs
nop
inc
sub
jns
sarb
stc
addr16
mov
or
das
int3
adc
movsl
out
sub
sahf
xlat
mov
or
lock
jno
push
bound
and
mov
mov
jbe
orb
xlat
add
cmc
fwait
andl
dec
push
mov
mov
pop
inc
loopne
dec
std
pop
mov
sub
shl
bound
inc
xchg
pop
lret
outsl
cmp
sbb
test
shll
jmp
and
or
sub
lcall
sub
enter
sbb
jbe
or
jle
pop
clc
add
lahf
int3
adc
xor
movl
mov
cmp
sub
out
mull
cmc
push
jg
xchg
mov
xorl
in
lret
mov
xor
cmp
fwait
xchg
push
cmp
test
movsb
jbe
mov
bound
or
mov
push
test
dec
mov
xchg
cwtl
in
test
fs
cld
adc
or
sub
mov
cwtl
push
xchg
out
data16
ret
fst
in
mov
mov
adc
mov
adcl
mov
mov
xchg
rorl
addl
xchg
cltd
rcll
mov
out
pop
adc
mov
movsb
incl
inc
das
pop
lret
mov
mov
lods
push
leave
mov
xchg
dec
leave
sbb
push
fmuls
out
or
mov
int3
add
loope
and
push
in
and
rcrb
out
xor
jmp
xchg
lahf
xchg
lods
jp
pop
mov
mov
jno
jle
cmp
ja
bound
cmp
sbb
mov
outsb
movsb
cs
xchg
ret
lret
xchg
fcmovb
pop
imul
dec
dec
clc
mov
pop
mov
or
cwtl
es
orl
sbb
dec
jmp
jo
jno
int3
ret
jns
lcall
mov
push
xor
xchg
xchg
les
rcrl
lea
andb
repz
mov
repnz
dec
pusha
shrl
imul
daa
test
int3
scas
mov
add
push
push
or
xor
pop
fisttpll
lahf
sub
lods
imul
aaa
aad
imul
ficoms
lret
enter
add
and
ret
int
and
movb
mov
test
mov
in
scas
jmp
adc
jp
push
outsl
imul
leave
pop
dec
into
enter
dec
push
inc
rcr
xor
mov
push
push
popa
inc
into
or
cmp
cmp
jb
mov
shr
and
xlat
add
jnp
or
push
dec
ror
sub
mov
jno
mov
mov
leave
cmc
or
jmp
aam
pop
lret
cmp
mov
decb
arpl
ret
push
xor
push
ja
xchg
dec
out
xor
add
fwait
cs
mov
pop
inc
and
dec
dec
ficomps
ljmp
xor
addl
lcall
sbb
sub
mov
out
fnsave
cmp
inc
mov
out
leave
adc
xor
mov
mov
push
cmp
inc
sub
test
insb
cmp
lret
lcall
cmp
add
add
dec
in
fiadds
and
xlat
push
fs
sarb
mov
xchg
dec
movsl
dec
mov
push
and
jg
loop
sub
mov
das
sbb
movsl
add
imull
and
ret
cmp
sarl
out
sbb
out
sbb
inc
pop
jns
daa
push
or
inc
lahf
cmpsw
add
xor
fcmovne
lods
mov
icebp
mov
jmp
insb
lds
bound
xchg
jg
test
int3
and
orl
xchg
add
jmp
mov
or
testl
or
fisubl
push
sarb
ret
rorl
xchg
stc
call
jle
aas
mov
mov
and
dec
sub
popa
mov
mov
movb
rcrb
out
imul
sub
jo
xchg
mov
ret
les
cli
add
adc
inc
inc
aaa
roll
shl
mov
into
pusha
push
pop
popa
pushf
ret
jno
or
sbb
mov
pop
lods
xor
shrl
ror
push
mull
adc
outsl
xor
and
mov
mov
push
mov
repnz
iret
jbe
pop
int3
loopne
sbb
sub
ds
test
adc
jbe
sar
out
sub
roll
mov
pop
mov
add
mov
sahf
cmp
int3
pop
inc
das
imul
sahf
jl
xchg
pusha
adc
sbb
fmuls
push
popa
out
adc
mulb
adc
subl
push
pop
jl
imulb
push
scas
sbb
mov
cmp
lock
jle
xchg
pop
jp
sbb
pop
sbb
aaa
stc
pushf
vpextrw
lds
and
cli
jo
es
cmp
jmp
ret
in
cmp
jg
mov
and
sbb
stos
stc
dec
scas
xor
cltd
out
xlat
out
repz
outsb
mov
cs
inc
cmpsb
mov
pop
sahf
loopne
in
hlt
sti
sahf
xor
sub
mov
idivl
jnp
push
sbbl
out
fisubs
gs
fnstenv
pop
fsubl
mov
and
bound
movsl
call
add
push
ffreep
fcmovne
sbb
adc
aam
pop
rol
stos
fdivs
pop
loopne
add
sbb
mov
lahf
idivl
jne
and
es
scas
jl
and
aad
cmp
aaa
jnp
rorl
push
jo
addl
mov
sbb
aam
dec
stos
jge
mov
test
and
inc
outsb
pushf
push
inc
mov
divl
std
cltd
mov
jle
push
jp
ja
add
and
sahf
mov
ds
ret
imul
or
fwait
inc
ja
sbb
sbb
in
repz
fimull
loopne
bnd
dec
stos
pop
popf
ja
shll
xchg
pop
daa
and
xor
lods
jle
mov
enter
orb
popw
in
push
int3
enter
xchg
lock
sti
shlb
repz
shll
mov
fcoml
mov
cmpl
adc
lret
or
jg
jae
cltd
mov
lret
mov
test
sahf
test
cld
xor
mov
js
push
adc
loope
bound
lods
inc
or
ret
rcrl
rcl
sbb
push
sub
or
push
push
fisubrs
ficoml
mov
or
test
icebp
mov
sbb
test
push
jnp
shll
daa
lret
addps
jae
test
jecxz
jmp
std
cmpl
aas
push
and
mov
inc
call
add
outsb
xchg
fs
fcmovnb
dec
mov
cmp
mov
mov
sub
and
push
push
adc
xchg
movsb
mov
jns
jg
rclb
lahf
inc
inc
jp
cmc
push
cltd
clc
fildll
xor
sbb
dec
adc
aaa
in
sti
inc
sub
or
inc
rcrl
jg
mul
inc
push
ss
jae
lret
fdecstp
dec
pop
stc
jae
fildl
inc
out
sub
mov
out
and
add
jno
imul
pop
xchg
aaa
sbb
dec
sub
loope
gs
sar
stc
hlt
fwait
mov
fadd
test
and
fidivrs
or
jno
jl
xchg
std
dec
dec
pop
arpl
aaa
test
nop
and
and
pop
fists
into
adc
test
mov
jge
std
rcrb
dec
aas
call
or
sub
jmp
in
push
enter
pop
lret
inc
or
testb
xor
loopne
ret
xor
aam
sub
adc
aas
push
ljmp
cmp
xchg
sub
xor
gs
sub
jnp
rcr
mov
jbe
jae
xor
mov
mov
jns
les
xchg
pop
xor
shll
and
popf
out
adc
enter
stos
aam
push
pop
imul
mov
ss
xchg
push
cmpsl
mov
lods
pop
std
mov
repz
test
nop
or
lods
xchg
repz
scas
push
call
inc
xchg
stos
mov
dec
or
inc
dec
inc
jl
and
mov
or
sbb
push
rorb
xchg
xchg
sub
loopne
data16
inc
lcall
into
push
pop
out
daa
add
inc
imul
mov
sbb
mov
cmc
mov
add
dec
jge
mov
and
pop
cld
mov
daa
cltd
push
sub
je
sub
shll
push
cs
in
lods
xor
inc
sub
sbb
shl
sub
bound
fimuls
mov
inc
and
sbbb
pop
bound
push
mov
insb
dec
roll
sub
cmpsl
mov
pushf
cmp
sarb
jecxz
push
jmp
fwait
sahf
icebp
int3
cmp
xchg
adc
lods
dec
xlat
enter
jb
mov
mov
push
inc
lock
jnp
repnz
xor
pop
push
push
cmp
fstpt
aaa
dec
imul
test
int3
add
cmp
movsl
pop
sti
es
gs
add
test
stos
jle
mov
insb
popf
cltd
xor
outsb
xchg
fldt
je
pop
xor
lea
xor
lahf
pushf
test
cmp
mov
xor
inc
mov
add
push
clc
add
les
cmpsb
shrl
mov
aam
in
ljmp
xor
scas
mov
ds
adc
cltd
jmp
das
and
les
in
in
fcmovb
mov
scas
mov
andb
pop
xor
dec
loopne
sub
pusha
pop
jl
cmp
int
lock
dec
imul
data16
adc
jae
fwait
xchg
cmpl
sbb
mov
xchg
fildll
xlat
sarb
push
push
xchg
das
pusha
jmp
in
aam
mov
repnz
mov
test
adc
lock
pop
cmp
rolb
popa
adc
mov
xchg
xchg
movsl
dec
sub
adc
shlb
pop
fsubs
outsl
les
ret
cmp
mov
xchg
mov
jg
xchg
loopne
mov
je
inc
clc
mov
lea
lahf
pop
sub
jge
lods
ret
sahf
cld
nop
out
cwtl
push
pushf
mov
inc
pop
add
push
add
fimull
pop
jb
sub
add
adc
je
sub
cmp
xchg
cmc
add
fisubl
sbb
jl
bound
rcll
out
adc
push
mov
stc
out
push
pop
xor
outsb
es
stos
stos
leave
das
in
jecxz
mov
push
stc
inc
fistpll
cmpsl
roll
xchg
lret
inc
in
cmp
cmc
cli
pushf
inc
lods
iret
mov
out
xchg
inc
je
or
sub
add
cmp
inc
jo
stos
cmp
or
in
jns
outsb
sub
rorl
lock
mov
pop
jp
mov
es
jecxz
mov
push
ja
out
dec
fsts
insl
cmp
jle
lret
cmc
pop
scas
cmc
lcall
jp
fs
fadds
add
bound
sbb
shlb
loope
push
in
xor
inc
jp
xor
mov
jl
fcoml
jae
mov
xchg
push
cmp
ret
in
nop
shlb
aam
ljmp
and
andb
jbe
sub
repz
mov
or
dec
add
dec
dec
inc
out
push
xchg
xorl
adc
pop
add
or
or
mov
cwtl
out
loop
sub
mov
test
cmpsl
xorl
mov
adc
push
shll
pusha
mov
out
or
repnz
mov
xchg
push
push
push
xor
pushf
movsl
loopne
iret
ja
fs
shl
mov
mulps
and
mov
cli
jmp
sbb
push
xchg
cmp
mov
push
push
jmp
int3
je
mov
xlat
rolb
sbb
pop
sbb
insb
loopne
rcrl
push
mov
sub
das
je
inc
or
popf
test
inc
sbb
pop
mov
push
sbb
int
outsb
jg
inc
jae
pop
jo
sbb
jo
arpl
daa
dec
mov
movsl
cld
lock
test
cltd
loope
mov
mov
jns
push
mov
jp
mov
jle
or
lods
in
push
push
cmc
sarl
jmp
rolb
inc
and
and
dec
rorb
push
mov
pop
femms
sub
or
jp
or
push
xchg
stos
inc
out
dec
push
test
dec
sar
pop
pop
cmp
filds
push
in
mov
jne
cld
jmp
inc
pop
in
rcll
inc
fwait
in
sbb
dec
pop
gs
fs
in
xchg
adcb
inc
shlb
pop
imul
repz
shll
test
sub
dec
daa
inc
sbb
daa
lds
jp
mov
dec
shlb
dec
jo
bound
xchg
jno
inc
into
jl
jb
das
ret
test
add
sti
roll
adc
fs
dec
push
xchg
fbstp
lock
fisubrl
mov
fcomip
push
mov
mov
dec
add
dec
push
mov
aas
and
adc
jb
scas
lret
fsqrt
mov
sbb
leave
dec
push
lods
bound
mov
ljmp
mov
and
mov
jae
stos
test
hlt
daa
mov
pushf
mov
dec
adc
mov
xchg
mov
adc
cwtl
sbb
daa
add
dec
stos
sarl
push
repz
mov
or
shlb
hlt
sub
stc
mov
mov
ds
sbb
dec
sbb
pop
jbe
pop
dec
sahf
push
adcb
cs
decb
jmp
pop
scas
sbb
into
roll
popf
xchg
jecxz
cltd
bnd
sbb
and
cli
fiaddl
das
sbb
fwait
jo
mov
inc
daa
lcall
xchg
xchg
mov
sbb
rcrl
test
dec
inc
pop
inc
push
lcall
add
xchg
int
mov
jno
aaa
out
nop
cmp
mov
sbb
jl
xchg
jg
push
inc
xor
mov
jns
ljmp
adc
in
add
mov
push
or
outsb
mov
pop
adc
jbe
push
out
push
dec
cmpxchg
fnsave
fwait
jp
xchg
out
xchg
pop
frstor
sbb
rclb
xor
cmpsl
shl
inc
rcrl
mov
inc
ljmp
pop
push
sbb
fmul
sbb
sbb
inc
scas
cltd
push
push
push
xor
jne
and
movsb
and
into
aam
adc
and
fwait
call
pop
push
loop
xlat
or
jmp
inc
xor
jge
daa
ret
push
cmc
fwait
xchg
test
and
test
shlb
adc
pop
sbb
and
push
cmpsb
xor
mov
or
mov
adc
xchg
sub
pop
add
jb
fs
push
mov
mov
ret
mov
pushf
ret
or
test
and
jb
mov
sub
rcl
push
push
stos
aad
or
rclb
int3
jp
mov
mov
pop
inc
jmp
outsl
push
sub
sub
mov
adc
out
mov
jmp
fcompl
test
and
cmp
xor
xor
cmp
pop
pop
sub
dec
cmp
sbbl
xor
test
scas
imul
inc
dec
aaa
jb
popf
xchg
adc
jl
insl
call
jo
bound
test
add
cwtl
mov
push
inc
shl
stc
sbb
sbb
shll
repnz
and
outsl
repz
lods
mov
movsl
movsl
data16
loop
scas
ds
jne
leave
scas
aad
jge
jl
xchg
sbb
jp
cmp
aam
mov
and
mov
mov
sub
lock
fsts
mov
pushf
mov
test
mov
push
out
cwtl
notb
dec
ss
js
push
sbb
nop
dec
test
mov
in
add
mov
inc
push
pop
mov
shrb
lea
mov
push
jb
shlb
adc
sbb
or
jmp
mov
sbb
scas
add
out
in
jecxz
sbb
rorb
sub
js
nop
jecxz
pop
scas
push
ret
adc
adc
or
jb
dec
sarb
test
pop
neg
sbb
jecxz
enter
lea
xchg
arpl
fnstcw
or
sub
in
xchg
mov
adc
sbb
aas
or
xor
mov
mov
xchg
inc
pop
imulb
or
adc
adc
jp
cltd
test
pop
popf
xchg
and
sbb
mov
jb
adcl
mov
decb
pop
rcrl
mov
add
add
push
lret
int
in
fs
pop
or
xchg
xchg
add
int
cmp
hlt
lea
xchg
sbb
mov
test
xlat
fnsave
rcrb
repz
adc
push
xor
add
jae
inc
pop
mov
jmp
jne
sub
test
add
lahf
xor
pushf
inc
add
dec
push
mov
sub
scas
rolb
xor
xor
push
lock
or
outsl
sbb
fmull
data16
jmp
scas
push
insb
rcrl
sbb
lcall
sbb
out
jnp
inc
jge
mov
mov
inc
xor
lds
xchg
jne
into
and
xor
xor
inc
inc
pop
pop
push
ret
adc
jmp
scas
insb
dec
xor
loop
jg
mov
addr16
or
jns
rol
inc
mov
cmp
hlt
pop
mov
jne
inc
iret
cld
pop
mov
adc
int3
dec
in
stos
or
cwtl
test
and
test
add
mov
hlt
lods
xor
lods
cltd
sti
or
sahf
fcomps
rcll
imul
mov
sbb
xchg
cwtl
cmp
imul
inc
pop
cmp
lods
sub
add
pop
scas
inc
cmp
xchg
popf
iret
jmp
mov
in
hlt
aam
lea
aas
cwtl
cs
inc
pop
js
push
sub
push
xor
mov
mov
roll
lret
sbb
mov
int3
inc
inc
mov
push
push
adc
mov
out
jecxz
push
push
stos
jnp
insl
mov
cwtl
jmp
bound
jne
lfs
ret
mov
adc
aam
pop
mov
repz
mov
das
jg
xor
add
cmp
adcb
mov
gs
fnsetpm(287
jns
inc
jns
jg
fbstp
inc
cmpb
dec
pop
add
pop
clc
stc
jbe
xor
movl
int3
xchg
lods
mov
add
mov
fcomps
imul
ret
or
jb,pn
mov
xor
jbe
xlat
in
in
add
in
gs
imul
mov
rolb
xchg
push
add
fbstp
mov
sub
sbb
fidivs
mov
imul
dec
mov
movsb
and
mov
xor
mov
xor
xchg
aam
test
sbb
cmp
adc
mov
mov
sub
mov
inc
adc
icebp
mov
and
fldcw
fwait
dec
lea
push
and
or
aad
nop
outsb
hlt
xchg
push
ja
test
jns
fimull
adc
es
mov
push
pusha
aam
adc
aam
sbb
stos
rorl
jae
lret
adc
inc
inc
cmp
push
lahf
sub
cmp
das
sub
call
xor
jno
int3
sub
imul
int3
scas
aam
cmp
and
cmpsl
into
cmp
ret
pop
xchg
push
outsb
dec
jnp
loope
cmc
jns
jle
and
loop
adc
xlat
or
pop
cmp
rcll
popf
fsubrs
add
add
sub
dec
inc
dec
mov
shll
cli
cli
sarl
out
int3
jo
mov
cmpsb
mov
sub
sub
inc
pop
test
jle
data16
fdivrl
rorl
outsl
popf
inc
ljmp
inc
hlt
cmpsl
fistps
adc
add
call
stos
push
leave
inc
mov
add
fsubs
lea
das
pop
imul
push
and
movsl
cmp
int
dec
jmp
add
xor
aad
mov
je
sbb
push
inc
pop
or
loop
xchg
loop
rclb
imul
mov
jb
mov
push
js
push
cmp
mov
inc
jg
cmpsb
out
and
inc
sti
sbb
sbb
mov
daa
dec
in
pusha
or
pushf
xor
cmp
lods
lahf
xorb
testl
fnstcw
test
imul
jo
fsubrp
xchg
icebp
shll
xor
cmp
cwtd
shll
shrb
dec
inc
sbb
lret
js
leave
int3
enter
pop
mov
in
xchg
sub
pop
xor
push
jg
out
sbb
add
or
and
mov
adc
mov
stos
or
nop
mov
out
mov
pop
jecxz
push
inc
push
movsb
test
push
inc
fdiv
fldenv
pop
cmp
add
ljmp
jge
xchg
mov
inc
arpl
loopne
inc
iret
inc
aad
imul
sahf
xchg
test
or
insl
int
hlt
sbb
add
jge
cmp
jns
add
xchg
xlat
pop
test
cmp
jnp
das
nop
cmpsl
mov
pop
andl
xor
fs
push
mov
mov
mov
out
aas
ja
fsubr
test
dec
imul
lods
sub
loopne
xor
in
lods
xor
sbb
pop
inc
cmp
or
mov
loop
xor
jns
add
test
mov
pop
in
and
cmp
xchg
mov
mov
push
leave
sbb
movsb
out
int
into
jecxz
mov
stc
push
jne
add
mov
pop
repnz
inc
call
mov
mov
fimuls
sbb
loop
adc
add
popa
jns
repnz
call
test
pop
pusha
inc
scas
mov
add
jmp
adc
movsb
fsubrl
aam
mov
mov
shl
xchg
fbstp
sub
call
jmp
sub
out
insb
sub
aaa
adc
cmp
clc
or
data16
dec
inc
rcr
xchg
or
dec
and
mov
rcl
mov
fnstenv
dec
mov
sbb
jo,pt
mov
pop
adc
push
sbb
mov
and
adc
adc
add
imul
gs
test
add
loopne
pop
mov
cmpsl
sbb
fsubrs
fucomip
into
ljmp
sti
xlat
shr
inc
mov
xlat
stos
adc
inc
pop
stc
xchg
pop
xchg
lock
inc
fistl
popa
push
fisubrs
cmp
jne
out
ljmp
lret
mov
fnstenv
in
cmc
sbb
sub
imul
and
sbb
jne
dec
ret
je
push
or
out
out
push
lock
in
fiadds
mov
push
add
mov
movsl
mov
scas
lods
push
mov
jl
push
icebp
adc
sub
nop
data16
mov
roll
add
dec
mov
pop
sub
rcr
sbb
call
and
aaa
mov
mov
fcom
dec
push
popa
pushf
push
mov
push
in
int3
jb
pop
adc
ljmp
jg
les
or
js
pop
mov
mov
adc
cmp
ljmp
les
jno
sbb
cmpsl
inc
in
insb
loop
dec
ja
mov
aaa
mov
mov
ja
jge
test
pop
add
fistpl
out
std
xchg
pop
test
cmp
mov
sti
lea
pushf
cmp
fprem1
dec
add
pop
mov
adc
sarl
mov
mov
dec
mov
iret
clc
pop
int
cld
fsubrs
pop
jo
sub
push
hlt
aaa
pop
pop
stos
out
sbb
test
mov
bound
sbbb
imul
bound
sbb
ja
stos
imul
sbb
xchg
nop
scas
adc
jle
sub
in
out
inc
mov
pop
fstpl
sbb
mov
inc
mov
push
pop
outsb
and
push
mov
int3
cmp
add
je
or
jp
and
sahf
mov
stc
into
lock
pusha
mov
aaa
xchg
ja
clc
inc
in
or
out
enter
outsl
add
push
cmp
jmp
fsubs
adc
or
cmp
sub
pop
xlat
sbb
cmpsb
add
pop
jae
repz
jne
cmp
cmp
pop
cmp
pusha
das
mov
sub
lret
mov
lods
dec
lock
cld
in
xchg
xchg
mov
sar
add
int
xchg
fsubrl
je
dec
aaa
pop
aad
incb
push
xlat
out
test
mov
aam
cmpsb
inc
movsl
ja
and
pop
insb
insl
and
lds
dec
cwtl
test
test
pop
popl
adc
das
push
stos
push
ja
sub
mov
xor
mov
mov
in
iret
movsl
push
and
out
inc
lret
pusha
adc
mov
inc
jl
cmp
jns
out
add
mov
jg
sbb
jne
push
bound
or
inc
mov
mov
and
cmp
in
lock
fisttps
push
push
xchg
pop
dec
scas
inc
and
pusha
hlt
jge
xor
and
faddp
and
mov
mov
cld
cmc
lahf
pusha
enter
icebp
jmp
sub
sub
call
loopne
loopne
push
rorb
and
jno
testb
inc
cmp
mov
inc
mov
mov
popa
inc
js
sub
and
push
adc
cmp
xchg
fidivl
xor
scas
and
in
daa
adc
inc
test
and
fisubrl
lods
roll
cs
ficoms
cmp
cmp
dec
jbe
pop
fs
jecxz
imul
gs
sub
jmp
fdivr
inc
mov
shrl
cmp
mov
sbb
fsubl
daa
aas
mov
in
dec
scas
jecxz
push
insb
aaa
test
mov
sbb
nop
scas
or
shr
clc
mov
lahf
push
or
jb
lret
cli
mov
insb
loop
dec
xor
shr
clc
mov
addr16
leave
aad
pop
mov
aas
xorl
cs
pop
loop
inc
dec
sbb
add
xchg
ss
in
imul
xchg
iret
out
or
mov
or
adc
out
push
sub
lcall
dec
gs
add
fcomip
mov
inc
inc
xchg
or
jae
shl
jl
rorb
and
push
icebp
scas
push
cs
xchg
sbb
xor
mov
fcomps
imul
xchg
hlt
lea
mov
xor
fs
aad
fsubs
in
cmp
mov
push
iret
xchg
shrl
dec
push
pop
and
outsl
and
mov
sbb
mov
cmp
inc
xchg
test
shl
mov
sbb
pop
xor
in
pop
pop
sub
sbb
jge
fs
push
or
movq
fnstcw
mov
scas
outsl
add
add
lock
xchg
xor
mov
push
add
cmp
push
rclb
sbb
push
inc
enter
hlt
in
sub
sti
gs
lds
fcmovnu
xchg
sti
or
inc
sahf
mov
sub
stos
in
popa
push
mov
scas
ja
cmpsl
outsb
fidivrs
in
int3
push
lods
push
xchg
mov
aaa
mov
inc
cmpsl
popa
sub
dec
mov
popf
or
lock
and
lds
dec
push
repz
mov
outsl
popa
enter
dec
aad
cmp
les
in
mov
mov
shl
pop
fmul
push
adc
push
push
pop
movsb
outsl
xlat
jmp
push
sysret
stos
ljmp
pop
popf
inc
mov
hlt
lods
adc
mov
or
xor
ret
popf
adc
mov
bound
outsl
jl
into
sbb
cmpsl
push
fsubrp
add
mov
xchg
incb
fimull
cmpb
fnstsw
dec
es
sbb
pop
rol
out
aam
push
push
aaa
call
dec
push
test
ljmp
mov
in
mov
fwait
push
push
inc
and
data16
sub
insb
or
out
stos
daa
cs
jne
add
les
pop
test
orl
test
in
cmc
ficomps
je
outsl
jns
xchg
inc
jmp
stos
pop
and
inc
adc
and
xchg
push
dec
jg
movsl
aam
mov
push
loopne
addl
cmp
leave
rcll
lret
lds
repnz
int
testl
mov
stc
daa
mov
imul
adc
inc
dec
mov
xor
test
insl
in
xchg
in
pop
mov
pop
sbb
scas
hlt
sbb
inc
fcomps
sub
jbe
jmp
xor
xchg
aaa
jns
aaa
je
out
push
push
adc
pop
mov
ret
sbb
sub
out
cli
jmp
std
mov
das
cwtl
cmp
lea
sahf
sbb
sarl
test
lahf
test
lods
pop
push
mov
push
lds
pop
in
sub
push
push
pop
sub
mov
xor
cmp
insb
movsb
mov
xor
sar
sti
int3
or
stos
testb
dec
push
jmp
xchg
mov
mov
movsl
push
shll
fcomi
cli
pop
lods
mov
js
mov
aam
push
loop
and
or
fidivl
inc
fsubs
cmpsl
jl
das
bound
dec
jp
stos
sub
stc
fldenv
arpl
nop
dec
mov
repnz
mov
adc
inc
dec
add
cmp
push
cld
dec
xor
inc
lods
sbb
imul
pop
ror
ss
sub
mov
pop
icebp
negl
cmc
in
daa
mov
scas
ja
roll
sbb
clc
xchg
pop
pop
insb
xchg
icebp
xchg
andl
mov
sbb
repnz
or
inc
and
dec
lds
pop
arpl
mov
in
inc
add
mov
cmc
xchg
push
sti
cmp
pop
lahf
jo
hlt
test
repnz
mov
pop
jo
hlt
sbb
jnp
mov
fimuls
fldt
imul
xor
cld
xchg
jno
add
add
subb
fwait
sub
ds
add
ja,pn
aad
loope
cmp
imul
mov
pop
ficomps
jo
popa
fcomps
xlat
mov
outsb
mov
movsb
push
sub
cltd
loope
fldl
push
out
cmc
loop
lret
xor
sbb
add
ret
stos
int
int
push
aas
scas
cmp
dec
pop
movsl
xchg
push
mov
jg
dec
jecxz
push
sbb
inc
in
shl
inc
scas
cmpsl
inc
sub
test
adc
push
int
das
fcomps
adc
xlat
or
jp
lahf
sbb
mov
mov
stos
jae
mov
cwtl
mov
mov
outsb
cmp
dec
mov
leave
or
shld
loop
sub
sub
lods
mov
out
mov
jno
mov
add
sahf
jmp
adc
out
incb
jmp
pushf
jbe
adc
xor
push
mov
xchg
cmp
dec
jns
xchg
pop
test
mov
inc
cmpsb
subl
xor
test
push
adc
sub
lret
mov
push
jge
scas
aad
movsl
adc
push
mov
outsl
sahf
push
push
test
sub
or
cmp
pop
and
hlt
cmpsb
push
scas
ret
xchg
aaa
popa
and
mov
sbb
and
fisttpl
outsb
mov
test
or
loop
cmp
sbb
aaa
rol
aas
sbb
pop
dec
sbb
daa
adc
cmpl
push
push
jns
dec
xchg
adc
xchg
or
cmp
aad
iret
dec
xor
adc
rcr
incl
mov
fmuls
and
rcrb
mov
mov
out
popa
mov
jecxz
das
addr16
cmpsb
adcb
push
ss
xchg
add
mov
dec
or
shlb
push
mov
clc
mov
mov
sub
jg
fsubl
push
icebp
push
mov
fwait
or
shlb
pop
inc
pushf
icebp
xlat
or
adc
test
xchg
cs
inc
xlat
cmp
int
xorb
pop
xchg
push
sub
mov
loopne,pn
push
insb
gs
clc
scas
out
mov
int3
cmp
ds
outsl
inc
sbb
fwait
cld
adc
push
shr
enter
and
inc
cli
sub
int
aas
outsb
cmp
push
adc
or
in
fmuls
pop
push
les
jae
in
ljmp
jecxz
sub
mov
jb
das
scas
push
pop
sbb
or
xor
push
xchg
lret
or
movsb
jbe
orb
jp
jno
fists
mov
pop
dec
mov
mov
ja
jl
daa
flds
test
je
inc
xor
push
adc
fs
push
fnstsw
and
mov
push
popf
or
xchg
lods
ss
push
ret
scas
aas
ljmp
dec
test
cli
dec
mov
aam
aas
in
push
mov
xchg
outsl
dec
pop
inc
mov
xor
ret
pop
cmp
insl
push
in
clc
cmpsb
mov
fcompl
adc
hlt
adc
sets
dec
mov
add
jmp
shr
outsb
and
pop
mov
sub
push
jnp
in
sub
insb
std
je
lds
add
out
popa
mov
fstps
sbb
add
pop
sahf
add
push
nop
ror
loope
push
push
je
jecxz
lret
mov
into
sti
jns
mov
push
in
mov
subb
movsb
into
fistps
scas
xchg
lcall
aaa
dec
test
adc
pop
cmp
fildl
daa
ss
test
pop
inc
mov
push
lods
sahf
pop
cld
dec
popf
cmp
out
insb
add
xor
adc
inc
mov
ds
xchg
push
fstpt
inc
and
rcrl
cmp
dec
mov
aad
lahf
pusha
pop
dec
lods
lret
lea
hlt
mov
mov
shrb
ret
add
aad
mov
enter
lcall
jnp
xchg
mov
test
shll
iret
aam
lods
mov
imul
test
add
sarl
outsb
nop
fwait
das
and
lret
fs
cwtl
test
dec
add
scas
mov
add
sarl
jo
push
lret
add
and
loop
pop
adc
nop
push
push
fstps
dec
mov
sub
insl
out
fnstcw
imul
jno
lods
jp
jecxz
test
mov
and
bound
aam
push
hlt
push
add
incb
cmp
xchg
fsubl
jmp
lcall
jmp
dec
rorb
inc
scas
mov
push
arpl
xor
shr
push
js
pop
fbld
sbb
inc
fisttpll
fcomip
daa
mov
daa
dec
inc
and
xchg
jne
jg
into
adc
fs
xchg
sbb
adc
test
mov
jae
ljmp
pop
popa
lret
pop
testb
pusha
sarb
add
sbb
addr16
test
xor
cwtl
pop
loop
call
xor
mov
into
loope
testb
daa
mov
jmp
adc
notb
cld
in
leave
dec
jbe
jae
pop
and
mov
mov
push
inc
and
lahf
pushf
test
push
add
shlb
xchg
or
js
xor
cmp
mov
sub
add
or
mov
sub
insb
mov
jge
sete
or
or
mov
shr
out
leave
adc
and
scas
sbbl
popl
lods
xor
mov
in
ja
pop
sbb
sti
popa
sub
mov
add
enter
pop
and
in
push
cltd
add
push
cld
cwtl
mov
jmp
iret
sub
push
das
push
push
iret
dec
push
das
test
push
daa
add
sbb
mov
jl
dec
pop
pop
faddl
sbb
xor
jp
xchg
cwtl
stos
jno
and
pop
or
jg
add
fs
bound
cld
lock
mov
sbb
dec
les
mov
mov
or
cmp
dec
pop
or
movsb
rcrl
in
ds
mov
mov
mov
mov
mov
movsl
stos
and
jae
jbe
decl
push
data16
fcoms
inc
xchg
xchg
in
sub
repnz
add
outsb
push
scas
pop
adc
or
popl
or
lds
pop
fdivs
sbb
inc
pop
pop
orl
popf
or
push
and
sbb
pop
lods
mov
add
pop
nop
inc
push
mov
divl
or
in
rcll
mov
out
jne
test
gs
in
cmp
xor
dec
pop
mov
sbbl
dec
lock
cmp
cmp
loopne
jb
xor
xor
into
cmp
jo
sti
dec
sub
stc
dec
mov
mov
mov
mov
nop
out
jl
ret
xor
pop
mov
sbb
pop
inc
mov
ret
aam
pop
cmp
fcmovu
mov
xchg
inc
out
push
pop
lods
insl
or
jae
sbb
jg,pn
push
nop
push
aam
pop
lods
popf
jg
out
outsl
or
and
leave
repz
pop
push
nop
cmp
mov
pop
int3
xor
cmovb
push
xchg
mov
psllw
push
out
pop
lret
dec
xchg
sbb
sbb
cmp
je
ds
jmp
lret
mov
inc
lret
add
lret
jne
fnsave
jge
sub
xchg
int3
movsb
mov
cmp
mov
out
in
pushf
rcr
sub
pop
sahf
xchg
daa
mov
fcmovnu
inc
and
fwait
popa
xor
hlt
in
fwait
xor
inc
lods
movsb
mov
das
xchg
pusha
jb
fstps
pop
out
test
rol
xchg
cmp
adc
pop
out
push
ret
sub
sub
inc
test
jecxz
xor
sub
hlt
push
jp
icebp
inc
mov
dec
xchg
jns
lods
mov
or
cmp
sbb
popa
inc
cmp
mov
push
enter
xor
push
scas
jae
mov
fsubrp
xchg
mov
jbe
dec
mov
xchg
aas
mov
sti
pop
popf
mov
lcall
in
scas
cmpsl
sbb
sub
movq
lcall
cmp
insb
aam
xchg
sbb
mov
push
fcmove
or
out
sbb
imul
add
xchg
jge
test
pop
xor
fs
jle
mov
enter
inc
pop
out
clc
idivl
ljmp
mov
xchg
add
jno
cmp
cli
cmp
jae
jb
imul
add
sbb
ss
mov
in
in
out
bound
aaa
mov
mov
jmp
mov
ja
dec
mov
mov
and
stc
or
dec
xchg
adc
adc
lods
push
add
pop
test
stos
sbb
out
and
jmp
xchg
and
sub
flds
les
sub
dec
js
ja
sbb
inc
test
inc
dec
sbbb
adc
aam
in
or
cmc
sub
mov
pop
fcmove
dec
jecxz
pushf
jmp
jae
xor
es
es
push
xor
mov
es
xchg
inc
loopne
in
in
out
push
icebp
stos
andl
lea
add
ret
in
push
rol
inc
jns
xchg
pop
andl
add
in
xchg
adc
sarb
push
js
int3
loop
lds
cmp
jbe
inc
pop
ljmp
iret
pusha
flds
mov
loopne
les
punpckhbw
nop
jle
cmpb
out
pop
inc
int3
pop
nop
mov
out
jg
xor
jle
xor
sti
xchg
adc
cmpsl
movsl
or
dec
add
and
xor
mov
popf
and
mov
sti
jge
data16
leave
addr16
dec
aas
dec
push
mov
lahf
mov
or
sahf
adc
jnp
adc
out
fists
sbb
imul
jmp
loopne
cltd
jmp
aam
xchg
mov
data16
add
loopne
pause
bnd
sub
push
push
mov
repz
push
pop
scas
mov
cmp
orl
std
dec
and
sbb
xor
mov
lds
lods
cmpsb
jno
add
shrb
std
dec
cmp
imul
bound
mov
insl
inc
cmpb
inc
cmp
sbb
dec
mov
rclb
sti
aad
out
stc
mov
mov
add
pop
inc
push
repz
sbb
or
mov
xor
inc
imul
lds
mov
shll
test
pop
pop
pop
movsl
mov
adc
mov
scas
std
rol
jne
sub
and
xchg
mov
call
mov
test
lods
jns
aad
in
pmuludq
mov
xor
mov
rolb
sub
push
mov
push
mov
cmpsb
cmp
cmpl
popf
loopne
mov
dec
xor
fsubrp
ret
mov
push
test
test
aam
das
call
scas
fucom
dec
ds
xchg
adc
mov
fidivrl
inc
aad
ret
std
inc
into
ds
fbld
jo
jge
push
sub
gs
cmp
mov
jo
adc
rorb
into
add
imul
lret
gs
cltd
cmpb
jle
aad
test
ds
add
fstps
mov
push
push
xchg
inc
sbb
xor
test
imul
lock
sub
cmp
jne
mov
dec
and
ja
sub
ljmp
ficoms
movsl
cmp
fwait
cmp
pop
xor
push
aad
arpl
dec
scas
je
cmp
push
push
sub
cmpsl
mov
scas
pop
mov
call
repz
fisttpl
mov
loop
sub
cmp
rorl
lahf
inc
mov
orl
mov
loop
stos
jle
or
pop
inc
test
xchg
test
xchg
testl
mov
push
mov
and
movsl
and
jle
or
sti
in
jl
ss
js
push
int
scas
xor
imul
xor
jns
xchg
call
je
pusha
jle
lret
xchg
sub
stc
pushl
mov
loope
sub
mov
decb
mov
bound
push
jb
pop
repnz
mov
outsl
xor
xchg
mov
pusha
mov
and
lods
loop
jne
rcrb
test
jb
jbe
push
add
ja
pushf
mov
or
sahf
sub
shl
ss
dec
mov
pusha
ds
jo
inc
or
aad
repnz
sbb
pop
ss
repnz
ficoms
cmp
movsb
idivl
mov
xchg
test
insb
sub
sbbb
lods
xchg
dec
lahf
fidivl
out
inc
out
jb
pop
adc
cmc
pop
out
out
out
into
xchg
and
insb
push
ljmp
std
rolb
sbb
cwtl
outsb
jbe
sti
and
fisubs
xor
gs
push
in
add
fldenv
mov
in
stos
in
jns
daa
pop
icebp
jl
add
repnz
xor
sbb
cmp
cmp
scas
pop
js
mull
int3
je
daa
jnp
add
pop
fnstsw
push
imulb
mov
mov
jle
or
jae
push
loop
and
in
pusha
out
mov
call
mov
cmc
orb
test
pop
adcb
in
xchg
inc
test
das
sbb
aam
xchg
jnp
rol
pusha
dec
jo
add
mov
xchg
jle
cmp
pushf
push
outsb
test
gs
enter
push
sub
or
sbb
cmp
dec
dec
pop
cmp
lahf
fsqrt
xor
jg
push
jp
sub
icebp
xchg
sub
push
mov
add
push
popa
nop
fsub
arpl
scas
jmp
mov
pop
adcb
xor
add
push
mov
std
or
xorl
out
xchg
mov
mov
pop
mov
mov
fsubl
cmp
cmp
lret
push
pop
jecxz
jp
out
outsb
pop
cmc
lods
fdivl
xorb
test
gs
insb
xor
clc
aad
cmp
cmp
lods
sub
nop
sti
sbbb
fstps
mov
jns
popa
loope
jno
pusha
loope
push
dec
sub
mov
std
jno
in
pop
push
lret
test
loop
ja
stc
sti
data16
out
nop
xor
jmp
pop
xor
icebp
mov
cmp
loopne
mov
test
or
fiaddl
rcl
int
mov
and
into
aad
inc
ret
jmp
mov
mov
pop
push
data16
jmp
xchg
hlt
leave
mov
pushf
xor
fnstsw
rol
sbb
insb
addr16
gs
jmp
xor
lea
jbe
pop
shr
xchg
ss
dec
mov
mov
outsl
insb
inc
dec
aas
mov
out
cmp
mov
fcomps
push
mov
mov
jmp
aaa
fdiv
push
inc
fmull
sti
or
mov
pop
rcrb
pushf
out
pop
pop
mov
inc
rclb
mov
add
icebp
rolb
jno
add
dec
mov
and
out
ret
pop
push
or
mov
rorl
cmpsl
mov
push
dec
add
test
inc
stos
sub
adcb
jno
xchg
cli
jne
std
notb
mov
cmp
and
sub
pop
int
fcoml
ret
cmpsb
fsubl
aas
jno
call
mov
shll
lods
mov
out
sbb
cmc
or
jns
rclb
orl
add
ja
and
in
xlat
dec
jp
fnsave
xor
pushf
pop
sar
push
xchg
imul
imul
adc
cmp
inc
xor
jmp
lock
sub
or
mov
cmp
mov
fwait
test
aam
ficoms
cwtl
gs
std
cmp
test
sub
popf
inc
and
mov
lcall
cmp
push
cltd
icebp
inc
mov
rolb
fldt
repz
call
imul
ds
jmp
das
fsubrl
sbb
dec
and
lds
mov
inc
dec
jne
mov
mov
inc
push
mov
insl
mov
jb
jae
mov
popa
xor
sub
dec
icebp
and
insl
xor
jo
test
es
mov
mov
jecxz
or
cmc
push
insl
stos
shll
imul
dec
mov
push
adc
sub
arpl
insl
or
dec
xor
shlb
xorl
or
add
cltd
test
lcall
les
adc
inc
pop
mov
or
xor
or
inc
mov
cmp
in
leave
repnz
push
push
jo
jmp
xchg
fcoms
push
xchg
pop
cmovge
loop
lret
andl
pop
mov
lahf
pop
xchg
dec
loop
inc
jg
xchg
cmp
pop
jl
jg
clc
xchg
pop
lcall
test
and
xchg
sbb
inc
sti
add
lcall
cmc
dec
mov
and
cs
adc
mov
das
inc
jbe
sub
loop
jmp
inc
mov
arpl
xchg
leave
repnz
pop
sbb
aam
and
add
fsubrs
jl
cli
sbb
sub
xlat
xchg
in
loop
popf
dec
ret
mov
cmp
push
xor
dec
addr16
imul
std
jp
inc
sbb
inc
fstl
or
lea
sub
leave
es
pop
gs
mov
dec
fbstp
mov
mov
add
rcll
adc
add
push
aad
popf
mov
cmpsl
mov
into
sbb
dec
mov
clc
popa
imulb
daa
in
iret
mov
jnp
mov
sarb
sbb
ret
inc
mov
cmpl
add
lods
push
fcomps
inc
pop
cmp
cmp
pop
jl
inc
sub
ret
jg
inc
fcmovnu
mov
aam
and
addr16
pop
hlt
or
mov
jge
testb
sub
sub
out
lods
lods
into
ds
sub
jge
cmpsl
push
aaa
leave
lods
sub
lret
shrb
rcll
pusha
aaa
test
push
adc
out
rcrb
data16
mov
je
mov
imul
or
xchg
push
inc
dec
inc
cwtl
push
stos
push
adc
pop
sti
cmp
iret
call
jno
adc
fadds
cmpsl
cmpsl
ja
or
cltd
inc
push
in
call
out
cmp
xchg
push
xchg
loope
insb
cmp
sahf
les
aaa
mov
or
std
sub
and
leave
sbbb
xchg
mov
mov
jg
cwtl
sbb
sbb
cwtl
cmpsl
jecxz
in
xor
mov
in
aaa
add
ds
and
adc
jge
addb
pop
jns
dec
daa
inc
mov
pop
push
rcll
stos
and
imul
or
sub
inc
push
xchg
jne
jb
jns
jp
mov
aam
xor
test
popf
inc
mov
ljmp
sahf
push
outsl
jmp
shll
dec
dec
xor
ret
jns
add
leave
mov
ret
cmpl
xor
sahf
aam
repnz
and
fmuls
inc
xchg
push
sti
mov
stos
outsb
inc
pop
inc
jbe
test
sub
enter
sub
pop
ret
pop
mov
das
cmpsb
mov
cli
jge
aam
into
cwtl
in
mov
jg
cwtl
inc
push
xchg
and
xor
sub
int
int
cmpl
je
mov
addr16
dec
fcmovnbe
insb
into
mov
lds
leave
addl
rcrb
rcrb
cld
rclb
rorl
iret
dec
nop
adc
xorb
sbb
adc
iret
sub
ja
jle
add
or
ror
xchg
xchg
push
mov
dec
gs
mov
lret
mov
xlat
shrb
mov
arpl
mov
shrb
mov
lods
out
testb
mov
loopne
js
sbb
cmc
jns
add
scas
lds
in
notl
dec
mov
lds
xchg
push
and
sub
mov
xlat
pusha
and
or
fidivrs
stc
jne
pop
and
out
and
aam
shlb
push
mov
sahf
add
xor
cli
sbbb
or
pushf
sti
js
cmp
repnz
and
out
add
loope
xchg
jp
xor
int
nop
and
xor
dec
sbb
decl
lods
jbe
sbb
ficoms
scas
sub
mov
xor
sbb
sbb
sti
es
add
mov
sub
jl
xlat
jno
xchg
aad
cmpsb
pushw
mov
negl
adc
das
fisubs
dec
pop
add
ljmp
pop
popf
pop
scas
les
sub
push
rcrb
push
jl
pop
imul
rclb
or
push
xor
cs
lods
outsb
jg
or
inc
xor
and
insl
fldcw
int3
popa
les
arpl
lock
loop
dec
xchg
ret
ja
jge
addb
pmuludq
cwtl
rcrb
fstps
sbb
stc
cltd
stc
imul
repz
dec
pop
mov
pop
and
cmc
adc
xchg
movsl
or
stos
and
sbb
je
adc
mov
push
inc
div
mov
nop
int
sarl
mov
push
hlt
leave
gs
xchg
enter
add
push
sub
sahf
pushf
mov
andb
enter
mov
lds
sbb
mov
nop
inc
inc
ficompl
push
lret
popa
lea
mov
xor
jmp
imulb
into
xor
add
test
and
iret
push
cmp
pop
imul
popl
xor
mov
or
push
mov
sub
pop
loopne
enter
mov
mov
sahf
xchg
mov
jbe
aam
outsb
cli
pushf
add
mov
rcll
push
jnp
pop
sub
or
xlat
sti
inc
cli
add
xor
mov
or
es
xchg
mov
dec
xchg
push
shlb
cld
cmpsl
into
int3
sti
out
hlt
cmp
push
and
sub
adc
call
movsb
test
adc
aaa
inc
mov
mov
je
lods
sub
mov
aaa
jbe
and
mov
jnp
xlat
mov
sbb
push
add
out
mov
pop
dec
rclb
cmp
ficoms
xlat
sbb
scas
out
hlt
enter
xchg
popf
add
imul
stc
jge
lret
push
into
adc
cmc
test
mov
push
jno,pt
out
jno
lcall
ljmp
cmc
jmp
jbe
gs
pop
lahf
adc
pop
repnz
push
fstl
movsb
push
dec
pusha
dec
jl
xlat
popf
mov
adc
mov
out
loop
sti
lods
xorl
jmp
ss
jno
andl
mov
mov
push
push
mov
sub
sub
jmp
enter
or
inc
mov
es
subb
lods
int3
push
stos
cmp
xchg
fadd
jl
sub
addr16
mov
jge
jne
mov
stc
lods
and
adc
movsl
inc
in
push
and
ds
xchg
xchg
pushw
daa
sbb
xor
lea
add
mov
insl
sarb
popa
cmp
add
shrl
add
push
mov
movsb
clc
and
lret
push
repz
jecxz
add
cmp
lret
adc
push
into
mov
pop
addr16
dec
sbb
jnp
sbb
fsubrl
out
pop
rol
xlat
push
and
push
inc
jg
jnp
push
daa
jle
dec
inc
je
mov
andl
and
push
cs
pop
pushl
dec
std
aas
rorl
in
sbbb
adc
pop
sbb
xchg
gs
movsl
popf
out
adc
pop
insb
xchg
shll
xor
pop
mov
and
lock
dec
aas
addr16
mov
movsb
mov
jmp
and
sbb
jns
mov
pop
rcl
mov
hlt
mov
cltd
pmulhw
sub
cmp
mov
mov
lods
popa
push
xchg
ds
icebp
hlt
mov
dec
test
pop
or
lret
iret
lea
imul
in
xchg
xlat
js
dec
cld
mov
jae
ljmp
cmp
popf
in
xchg
push
fdivp
lea
inc
repz
jmp
push
and
mov
cltd
test
or
cltd
pop
jge
sub
adc
scas
dec
loopne
push
dec
cmp
cltd
lods
stc
mov
add
test
es
icebp
repz
stc
fdivrp
rolb
cmp
push
xor
cmpsl
xchg
adc
dec
mov
inc
negl
scas
fidivrs
repnz
jae
sub
pop
sbb
int
xchg
xchg
inc
icebp
adcb
adc
stos
jg
aaa
int
pushf
popa
and
stos
arpl
test
dec
in
sub
imul
and
xchg
ret
lret
cltd
cltd
frstor
push
leave
xchg
icebp
fdivr
out
adc
mov
sbb
mov
push
js
inc
clc
dec
inc
sbb
mov
call
das
shlb
ret
or
mov
lods
shrb
push
shl
ret
jp
lret
xor
sbb
iret
mov
add
pop
orl
call
out
dec
jp
cmc
mov
aam
inc
orl
xchg
andb
fdivrl
mov
dec
sbbl
cmp
hlt
aad
pop
xchg
addl
sbb
fsubl
jle
loopne
mov
pop
cmp
pop
mov
adc
adc
imul
push
das
and
outsl
pusha
cwtl
loope
popa
js
orl
aas
mov
cwtl
loope
fst
add
fs
dec
fadds
jns
test
sti
sbb
shlb
fdivrp
or
xor
sub
jge
cs
mov
dec
js
aam
loope
rorb
das
mov
mov
cmpsb
fnstsw
hlt
pop
idivb
adc
lahf
les
aas
mov
jns
and
push
jecxz
shrl
mov
dec
xor
int
and
int
int
out
mov
push
fmull
pop
mov
jl
daa
pop
dec
repz
repz
cwtl
call
dec
add
popf
arpl
lock
jl
les
repnz
mov
pop
lods
test
push
fcomp
cmp
sub
adc
fsub
dec
sub
sub
xchg
push
frstor
xchg
popa
push
mov
sub
lds
int3
lahf
repnz
iret
jo
hlt
hlt
sahf
pop
jge
aad
lahf
push
fmuls
xchg
aaa
nop
insl
cs
shrb
cmc
rorb
insl
dec
and
outsl
mov
shl
jb
push
daa
insb
aas
pop
sub
shll
xchg
xor
dec
cwtl
jno
js
outsl
sbb
cmp
jno
pop
out
stos
inc
xor
cmovp
sbb
out
and
push
or
mov
cmp
pop
mov
cmp
jecxz
inc
push
push
loope
xor
data16
pop
mov
push
xrelease
cld
dec
movsb
aaa
mov
idivl
shll
add
sbb
push
adc
cmp
cltd
cltd
cmpsl
xlat
sbb
ljmp
in
jne
or
test
inc
mov
js
pop
pop
jno
or
or
outsb
sub
mov
shlb
popl
cmpsb
pop
jmp
scas
inc
mov
adc
rorb
fs
dec
ds
sbb
sub
add
xlat
add
push
out
cwtl
nop
cmp
mov
in
mov
dec
push
popa
mov
sbb
mov
sahf
jge
testl
mov
xor
cmp
clc
outsl
mov
push
mov
std
daa
mov
cmp
cmpl
inc
ror
lods
cmpsb
ljmp
xorl
arpl
xor
sbb
pushl
xor
cmp
ja
daa
sub
mov
jmp
dec
mov
sbb
lret
pusha
fcompl
inc
je
sbb
loope
test
pop
adc
or
loope
sbb
sbb
lea
jle
mov
out
xchg
pop
out
mov
or
fs
jb
jae
xor
jbe
fstps
ror
mov
popa
mov
in
and
std
fwait
ja
test
adc
leave
sub
or
xorb
jmp
xchg
movsl
cmp
mov
iret
aad
jns
lret
adc
aam
mov
cmpsb
cmc
js
mov
inc
ret
sbb
cmp
aaa
and
inc
in
xor
dec
xor
sbb
and
repz
sti
or
or
or
adc
fs
mov
xchg
add
pop
movsb
popf
shll
enter
into
sbb
push
xchg
loope
add
jmp
pop
icebp
sbb
and
mov
or
push
aad
mov
pop
or
sub
and
fildll
outsl
je
mov
cmpl
and
ret
push
mov
fwait
or
push
jp
js
xor
cmp
outsl
fs
fwait
repz
dec
loope
loopne
lcall
xorb
mov
fs
inc
mov
lods
add
add
dec
pop
mov
sbb
xchg
jns
sbb
imul
pop
fidivrs
mov
add
pusha
push
frstor
xor
pop
aam
mulb
loop
inc
xchg
imul
cmc
push
jo
es
imul
call
jae
dec
adc
and
fldcw
lahf
mov
lock
aam
shrl
aad
add
sbbb
in
sbb
lods
outsb
repnz
repz
sbb
xlat
loopne
stos
pop
pop
dec
sti
pop
fldenv
pop
jns
and
mov
xlat
subb
inc
sbb
aas
movsl
orl
out
stos
xor
add
bound
sbb
dec
je
pop
enter
mov
sarb
and
in
test
mov
fcompl
lret
mov
fisubs
sub
mov
sub
js
push
mov
orb
mov
sub
ficoml
or
jmp
adc
imul
inc
xor
out
pop
add
mov
adc
dec
mov
jp
or
icebp
testb
rcl
sbb
rorb
std
sub
jnp
jg
pop
mov
ds
mov
pop
cli
mov
ds
xorl
or
mov
mov
repnz
test
das
and
enter
add
out
stc
cld
clc
test
mov
cs
pop
movsl
jmp
orl
xor
leave
int3
fldenv
test
push
xor
cvtps2pi
xchg
inc
jns
push
pusha
ud0
data16
push
mov
and
stos
mov
mov
mov
call
ret
xchg
dec
lea
ja
cli
adc
and
and
or
aam
scas
stos
in
sbb
sbb
push
jbe
jle
out
cmp
cmp
movl
fnsave
stos
out
jmp
ss
sub
push
test
cmpl
jns
movsl
icebp
or
push
int3
lods
mov
call
push
mov
or
ret
jb
cwtl
lcall
ret
mov
repnz
adcb
pop
and
popf
stos
inc
sahf
mov
sub
imul
lods
mov
lret
pop
sbb
xchg
dec
mov
outsb
fimuls
adc
or
roll
cmp
mov
fwait
gs
jb
cmp
lods
dec
mov
add
test
lcall
mov
notl
sub
movb
push
sbbl
adc
int
lret
xor
fisubrl
movl
pop
out
fdivrs
or
out
leave
pop
mov
xchg
arpl
or
sub
adc
mov
popa
pop
lds
mov
adc
sbb
fisubrl
or
xor
mov
arpl
xchg
add
jmp
mov
pavgw
in
sahf
dec
addr16
out
xor
aas
jecxz
jp
push
out
xor
fisubs
sub
repz
addr16
scas
pop
out
adc
sub
mov
or
jo
inc
mov
cmp
lcall
testl
fdivrl
aaa
mov
xchg
in
xchg
ret
xchg
push
cmp
and
sub
and
enter
cmpsl
out
repnz
int3
lcall
dec
mov
imul
hlt
sbb
nop
clc
sub
mov
add
daa
rcrb
mov
inc
xor
xlat
lcall
mov
shl
dec
jno
call
scas
movl
out
out
inc
adc
stos
inc
ja
push
dec
ljmp
call
mov
ss
add
int3
in
ficomps
nop
imul
jp
test
pop
xchg
sti
inc
xchg
adc
xor
loop
lea
add
sahf
xchg
or
addl
dec
mov
les
jge
test
lcall
ds
or
pop
lret
xchg
pop
cltd
call
push
in
mov
lods
mov
out
test
in
inc
inc
sub
in
xchg
xchg
sarl
iret
xorb
mov
cmp
lahf
aam
push
js
xor
dec
cli
and
inc
sub
pop
popf
cmpl
icebp
and
push
jge
pop
mov
xor
into
xchg
dec
sub
shr
repnz
setg
loopne
jb
js
lret
inc
cli
jp
rcll
ja
mov
cltd
jle
lock
push
js
xchg
cmp
jecxz
mov
add
push
jne
arpl
mov
clc
pop
arpl
fidivrs
mov
push
fs
ret
js
pop
je
outsl
cmp
xor
les
les
sbb
adc
outsl
cmp
sub
gs
addl
testl
fwait
push
mov
in
mov
pop
mov
mov
cmp
mov
push
loope
push
loop
dec
pusha
int3
cmp
push
adc
sbb
or
sub
mov
inc
outsl
cmp
movsb
int3
imul
xchg
and
pusha
or
dec
adcl
fisttps
data16
movsl
xor
jns
and
ss
rolb
xchg
jecxz
loope
stos
push
movl
or
pop
push
or
icebp
or
mov
imul
jecxz
and
imul
cwtl
mov
push
adc
sub
mov
xor
je
sub
leave
inc
adc
mov
cltd
icebp
push
out
pop
mov
push
popa
rol
jb
cwtl
bound
dec
scas
je
in
sbb
sub
lock
jne
inc
push
out
dec
imul
and
jle
xor
adc
jo
mov
jmp
pop
divl
xchg
sub
push
jae
cmp
pop
push
popa
lahf
movsl
cld
adc
repz
stos
icebp
and
subb
test
stc
jmp
adc
xchg
lcall
test
sub
jp
loopne
mov
mov
mov
inc
out
out
pop
push
pop
divb
aas
call
lcall
xor
inc
fsubr
and
mov
mov
push
jns
push
push
fwait
rcrl
and
inc
or
push
mov
cmp
out
roll
push
or
cmp
sub
and
call
pop
pop
sub
das
addb
dec
popa
mov
jae
xchg
and
mov
push
imul
jne
repz
cltd
rorb
mov
sbb
push
pop
pop
push
dec
cli
inc
lea
leave
adc
lahf
push
cmc
ficoml
jo
arpl
loopne
ljmp
jae
sbbl
mov
in
sbb
xchg
lcall
arpl
mov
pop
mov
jg
xor
mov
xchg
int
and
and
push
dec
int3
pushf
test
sahf
rorl
mov
iret
mov
mov
mov
aaa
jae
les
sahf
inc
or
jae
and
iret
inc
sbb
enter
rclb
stc
xchg
jp
fadd
aaa
pop
inc
pop
bound
jle
xor
jnp
push
mov
neg
jp
adc
mov
dec
fs
dec
pusha
xchg
shrl
loopne
push
dec
sbb
ljmp
aam
in
lea
pop
inc
push
pop
mov
mov
xor
dec
stos
loop
xchg
cwtl
xchg
add
push
mov
mov
adc
bnd
loop
cmp
mov
or
shrl
out
xor
aad
je
xorl
xorl
mov
das
loopne
jae
decl
pop
sahf
aas
out
jmp
lret
pop
in
scas
lods
push
arpl
mov
jns
lcall
scas
sar
jmp
cli
dec
mov
mov
lret
dec
cs
cmp
lds
inc
mov
stos
ds
popa
scas
mov
mov
aas
in
in
pop
and
leave
jge
cmp
mov
rcpps
cmc
jbe
lahf
sbb
sarl
adc
push
cmp
lcall
sub
lret
xchg
ss
mov
jnp
pop
pop
dec
xchg
in
daa
xor
fwait
insl
loope
mov
sub
shrl
fmulp
pop
sub
pushf
loope
xor
and
jl
or
xchg
cmp
test
adc
pop
icebp
xor
loopne
rorb
adc
sbb
idiv
and
rcll
mov
pop
cmp
xor
cmp
and
and
lea
in
test
xchg
ds
add
mov
mov
jae
lcall
add
mov
movsl
clc
pop
mov
arpl
jle
push
inc
lea
cs
adc
outsb
adc
fiadds
sbb
sbb
sbb
cld
fnsave
ja
gs
int3
push
pop
ret
jmp
loop
dec
jge
jbe
push
iret
pop
mov
inc
mov
sahf
pusha
xchg
inc
jae
xor
mov
mov
jno
ret
mov
filds
in
pop
cmp
lock
test
ret
leave
and
jno
ret
stos
push
add
cmp
jg
mov
adc
adc
je
lods
rorb
add
and
pop
mov
jnp
fsubrs
aas
lds
xchg
into
mov
dec
sti
or
cmp
mov
push
int
inc
ds
fwait
add
ficoms
mov
div
cmp
repz
push
jg
xor
pop
inc
xor
dec
aad
xchg
add
xorb
pusha
mov
push
cmp
xor
scas
pushf
je
mov
xchg
andb
mov
jecxz
pop
js
xchg
adc
adc
sub
mov
mov
xchg
push
mov
add
sub
push
mov
sub
jg
loope
mov
jno
jo
jns
jecxz
aaa
jmp
jne,pt
std
rcrb
stos
arpl
imul
lods
lcall
rclb
loopne
mov
mov
mov
cmp
cli
aas
mov
xchg
out
adc
adc
ret
and
dec
fsubrp
fsub
addb
das
xchg
jne
dec
test
fiaddl
sub
and
dec
sub
mov
cltd
fiadds
pop
push
lock
mov
mov
dec
cmp
pop
shl
cmp
jl
push
pop
js
js
cmp
jp
stc
xchg
rcrb
adc
ja
divb
jg
sbb
mov
mov
mov
mov
mov
cli
dec
imul
jno
dec
inc
or
stos
fdivs
mov
mov
lahf
loop
cmp
les
inc
stos
in
popf
movsb
popa
cmp
or
in
js
cwtl
fiadds
pushf
push
test
or
xor
or
out
fisttpl
xchg
inc
adc
into
mov
inc
push
movsb
lods
xor
jp
lock
lods
arpl
jmp
push
mov
loop
jmp
es
pop
out
sbb
mov
adc
mov
hlt
dec
movsl
mov
clc
es
in
popa
fisttpll
add
mov
testl
or
fdivr
pinsrw
sbb
dec
scas
int3
dec
inc
or
lock
mov
divb
cmp
cld
imul
jno
and
sbb
rolb
das
pop
leave
xchg
and
imul
cmp
mov
in
push
pusha
roll
repz
push
in
pop
push
add
inc
andb
insl
pop
pop
add
aaa
shlb
fcoms
pop
mov
cmpsb
and
pop
aas
xlat
test
dec
xor
lcall
fcmovu
hlt
enter
mov
and
lods
sub
or
dec
mov
xor
loope
jmp
mov
xchg
in
cmpsb
loope
mov
inc
int3
inc
int
jp
xchg
push
dec
lock
cli
sarl
dec
sbb
decb
sbbl
bound
sub
adc
xlat
lods
mov
xlat
push
addr16
sub
push
mov
fimuls
mov
cli
jp
jnp
movsl
jne
icebp
cmpsb
push
or
dec
movsl
adc
cld
inc
mov
sti
adc
sbb
push
mov
mov
xor
add
jne
into
pop
sub
dec
and
cld
iret
icebp
push
mov
out
test
popa
mov
mov
aam
test
fimull
or
cli
inc
movsb
and
out
xor
jne
jg,pn
pushf
imul
xchg
mov
ret
dec
jbe
sub
sti
add
loopne
inc
lcall
sbb
add
shll
fs
clc
mov
insl
pop
test
out
aad
or
gs
mov
and
fdivrp
inc
rclb
sub
xchg
repnz
movsl
adc
in
sub
mov
sub
fucom
lods
lock
js
in
fisubrs
cli
mov
lret
mov
jae
cmc
xor
adc
lods
pop
or
sub
scas
test
or
cmpsb
lods
push
jecxz
cmp
daa
push
mov
rcrl
sti
ret
ljmp
or
aam
or
fcom
fstpl
pop
mulb
out
outsb
mov
pop
sub
popa
stos
add
push
cs
gs
and
rorb
xor
clc
inc
cmpb
out
mov
jnp
clc
lret
dec
daa
dec
xchg
xchg
xchg
mov
loope
hlt
sub
push
loopne
out
arpl
lds
enter
pop
cmp
push
pop
ror
into
jmp
jp
inc
js
ss
cmp
jg
cmovne
cld
add
inc
sarl
add
mov
mov
adc
mov
sub
cmc
andl
sub
xor
lods
lahf
fwait
bound
and
push
jbe
adc
cmp
cmp
popf
xchg
mov
in
jl
rep
xor
addl
sbb
cltd
stc
pop
repnz
lcall
pop
xchg
cmp
int
jbe
aad
leave
xor
scas
ret
adc
lret
pop
movsb
dec
cmp
sarb
sub
insl
loope
xchg
or
bnd
insl
addb
cmp
mov
call
int3
adc
inc
mov
mov
enter
dec
inc
shl
mov
call
stc
pslld
test
scas
shll
jp
and
mov
jnp
xlat
outsb
and
push
pop
arpl
push
dec
pop
sbbb
lahf
cmpsl
ficoms
stos
pop
dec
fsubrp
mov
pop
int
jne
xchg
add
and
and
mov
mov
movsb
addr16
pop
fs
mov
xchg
mov
dec
sub
popf
pop
inc
fcmovbe
mov
daa
or
jmp
andnps
cmpsl
test
cmpsb
sbb
popa
xor
mov
adc
lock
mov
mov
mov
mov
cltd
sti
xchg
add
jl
jb
fwait
cmp
push
scas
adc
lret
in
cmp
mov
cltd
sub
mov
dec
ljmp
data16
andb
imul
mov
lahf
into
adc
mov
add
add
inc
push
sbb
nop
lock
das
push
mov
repnz
add
sub
sub
nop
sub
sti
fidivl
xor
jge
xor
inc
xchg
js
sub
stos
mov
mov
pop
add
cs
lds
push
lcall
mov
fsubs
push
stos
mov
scas
mov
lods
arpl
popf
mov
bound
or
testl
ljmp
inc
out
out
inc
or
fdivr
sub
dec
cmp
ret
inc
je
in
mov
pop
or
pop
arpl
xchg
adc
and
ret
mov
lcall
jp
dec
and
cli
pop
push
fcmovnbe
pop
mov
jl
mov
in
addr16
inc
mov
lahf
in
jno
mov
sti
jb
push
add
xchg
inc
in
lret
ljmp
fldenv
jmp
loop
push
addl
stos
mov
ljmp
movsb
lahf
pop
cmp
loop
fnstcw
sbb
scas
mov
leave
repz
aam
pop
adc
scas
sahf
notl
rorl
mov
xor
jge
add
sarl
ret
adc
xor
test
das
xor
cmpb
sbb
mov
adc
out
es
add
sub
fmul
test
sti
rorl
dec
xchg
cltd
pop
in
jecxz
pop
and
jo
mul
inc
xchg
cmp
push
mov
loop
and
xchg
jnp
imul
pop
idivb
imull
fsub
out
loop
mov
push
bswap
pop
cmc
aad
lods
xchg
loop
lahf
cmp
xchg
pop
sbb
push
jmp
pop
or
mov
es
jne
lar
push
jg
and
inc
xor
gs
jecxz
mov
pop
jmp
mov
sti
xor
cmp
cltd
mov
or
sub
fcoms
scas
jae
push
cli
pop
xchg
push
fmul
or
adc
sub
jb
mov
or
lret
jnp
ret
loopne
and
dec
push
push
jg
mov
int3
or
sub
inc
sub
xchg
movsl
leave
mov
push
loop
in
sub
pop
outsb
sub
mov
lods
dec
fwait
jp
outsl
out
bound
sub
repnz
push
add
loop
jbe
aas
repnz
inc
cmpsl
mov
inc
jne
rorl
or
xchg
mov
mov
sahf
inc
push
jp
dec
imul
pusha
imul
shll
jno
inc
test
adc
cmc
es
adc
int3
sbb
jle
lock
and
movb
out
pop
jb
mov
mov
xlat
pushf
push
push
ret
mov
push
lret
mov
sti
cmc
lahf
popa
dec
adc
and
insl
xor
fnstcw
lret
jno
enter
mov
sub
or
addr16
jo
in
shll
loop
sub
dec
xchg
dec
mov
in
or
sbb
xrelease
sub
add
cltd
insl
sbb
mov
lods
push
jmp
or
adc
cmpsl
adc
jns
add
nop
and
mov
lods
das
xlat
scas
adc
push
imull
push
scas
cltd
push
mov
jbe
fisubs
pop
cmpsb
and
dec
xor
in
inc
jmp
mov
pop
sbb
rcrl
add
or
lds
sbb
adc
push
sti
jnp
notl
aam
xchg
cmp
push
xchg
pushf
jecxz
fldt
mov
lret
mov
inc
rcrl
xlat
icebp
out
ja
pop
pop
jg
jmp
pop
xchg
or
nop
in
inc
inc
pusha
jno
pop
movsl
dec
test
dec
test
imul
push
and
and
clc
test
lahf
leave
cli
lods
repz
loopne
es
mov
push
mov
inc
mov
push
daa
pop
jno
xchg
repz
test
int
jae
cmpsb
sbb
pop
fildl
fdivs
add
mov
fildl
jmp
or
sahf
sub
sbb
mov
mov
stos
pop
aam
std
js
shll
mov
cmp
jns
imul
and
es
scas
mov
mov
mov
enter
ret
mov
leave
fisubl
pop
lahf
pop
jnp
xor
ret
clc
or
movsl
leave
aad
addl
int3
mov
inc
gs
int3
adc
cmp
insl
pop
fucomip
das
xchg
arpl
sbb
jo
xchg
cs
rcrl
mov
push
cmpsb
push
je
inc
sub
pop
cmp
rolb
iret
clc
adc
dec
les
ljmp
jle
sub
xchg
ret
dec
in
adcb
pop
loopne
adc
mov
mov
leave
add
inc
lea
enter
es
movsl
icebp
xchg
aaa
mov
shll
mov
inc
push
sahf
popf
cli
cmpsb
xorl
insb
push
lods
cmp
mov
sahf
dec
push
mov
loop
xor
pop
sub
inc
loope
push
std
dec
or
jecxz
jo
ss
aaa
lret
push
mov
adc
push
aad
push
imul
push
rcrb
sti
cltd
insb
in
xor
stc
adc
xchg
mov
in
xchg
jno
ss
adc
pusha
cmp
aam
sti
mov
xchg
cmp
lahf
js
and
pop
cld
sbb
fsubs
pushf
daa
in
in
out
add
sbb
dec
xchg
cmp
fsubl
scas
call
xor
cmp
jbe
imul
test
inc
xor
pushf
adc
and
shrb
cmp
mov
sub
imul
push
sub
and
mov
loop
nop
pushf
sbb
push
les
inc
add
cmp
dec
mov
ljmp
test
xor
ljmp
fsubrs
jmp
call
sub
push
mov
fs
adc
int
je
fwait
je
mov
sbb
adc
adc
dec
cmpsl
loopne
ljmp
add
pop
inc
in
addr16
adc
rorb
or
inc
out
xor
testb
fstpt
push
enter
js
xor
push
and
test
mov
nop
cmpsb
push
mov
mov
pop
jo
push
push
or
adc
lret
cmp
outsb
icebp
dec
push
out
sahf
lds
and
popf
data16
addr16
adc
xchg
pop
adc
push
xorb
enter
and
mov
and
jecxz
shll
push
aad
sbb
sbb
jmp
sar
jns
lock
imul
pop
imul
pop
mov
lahf
push
arpl
movsl
jle
pop
hlt
push
push
sub
roll
sahf
les
xor
adc
je
or
add
stc
adc
inc
pop
pop
cmp
mov
push
cld
cltd
or
or
or
lret
xor
jne
scas
sbb
repnz
push
xor
mov
je
cmp
sarl
pushf
mov
jb
aaa
insb
dec
xor
repz
mov
sar
or
repnz
pop
mov
in
ror
sub
fnstenv
enter
adc
jl
mov
fisubl
add
pop
popf
jl
xchg
mov
loopne
mov
mov
xor
popa
shrb
test
sarb
lret
or
mov
adc
test
xchg
cmpl
mov
je
scas
in
fs
test
icebp
adc
sarb
sbb
rcrl
xchg
insb
pop
sbb
pushf
dec
test
ja
aam
push
aas
jns
in
push
daa
fwait
lcall
push
shrb
jno
cmp
xchg
lods
int
into
stc
filds
aas
mov
pop
sbb
ficoms
pop
and
jbe
add
sbb
sarb
jl
or
gs
sub
test
rcr
repz
icebp
clc
repnz
jno
popa
cmp
push
and
push
aad
jae
in
movl
lahf
mov
inc
mov
pop
loope
lock
jb
mov
insl
sbb
mov
stc
into
in
mov
ds
mov
xchg
pop
jne
jmp
sub
lea
insl
mov
stos
jno
mov
push
jb
pusha
cmp
ljmp
pushw
or
pushf
aas
loope
inc
sbb
mov
out
push
aas
loop
sub
xor
push
fimull
in
std
push
ljmp
mov
scas
xchg
mov
movsl
in
adc
lods
test
xlat
popa
repnz
addr16
cmp
ds
pop
dec
and
sub
push
popa
test
add
inc
mov
es
xchg
mov
mov
ss
cmpsb
lea
mov
gs
inc
fsubrl
es
outsb
fmulp
mov
mov
mov
sahf
pop
lret
imul
pop
fcomps
jl
cmp
dec
into
add
es
fidivrl
mov
mov
hlt
mov
cmp
mov
and
sti
movhps
jecxz
cmp
mov
jnp
sbb
imul
sub
es
repnz
jbe
push
xchg
mov
jne
fstl
jae
xchg
lds
lahf
lods
loopne
sub
adc
jae
push
adc
lea
adc
rcll
fdiv
or
ds
das
sub
add
xchg
push
cltd
cltd
jae
xchg
mov
push
inc
pop
leave
xchg
dec
add
es
fs
data16
cmp
push
pop
mov
and
sahf
cmp
leave
scas
out
ss
jae
pop
push
sub
repnz
lds
push
mov
cmpsl
jae
xchg
sub
faddp
sub
adc
jae
pop
push
mov
movsb
mov
sub
pop
cld
or
paddq
rcrb
mov
enter
and
bswap
and
dec
pop
imul
dec
shlb
jecxz
ja
mov
dec
dec
int
dec
cmp
pop
aad
dec
fldcw
jl
mov
cwtl
movsb
add
mov
enter
sbb
orb
jne
inc
push
push
mov
cmp
mov
jo
pop
out
ret
outsl
pop
xor
clc
push
push
jl
xchg
cli
pop
pop
add
nop
lret
mov
orb
push
call
cmp
xor
pop
imul
push
xchg
push
xchg
int
out
inc
out
mull
movsb
cs
jle
jnp
pop
cmpsl
push
mov
int
and
test
push
xchg
mov
pop
out
les
xchg
add
jnp
arpl
sarl
comiss
mov
xchg
ds
pop
inc
ja
stos
adc
and
rcl
and
push
mov
test
mov
lret
ss
hlt
xor
ret
das
repz
clc
push
adc
mov
xchg
xchg
mov
dec
adc
cmp
ret
and
out
cmp
pop
lret
inc
mov
inc
cltd
clc
xor
add
jp
lods
sbb
or
bound
ds
test
mov
mov
mov
xchg
cld
xor
scas
daa
fisttpl
pop
add
mov
mov
cs
rcr
pop
dec
mov
cli
mov
push
cmpsb
push
rcll
in
and
mov
out
cmp
inc
inc
jl
and
adc
xchg
or
dec
jp
xor
xlat
inc
je
subb
add
outsl
cli
jo
ds
push
arpl
nop
aam
inc
dec
jmp
sbb
daa
adc
jbe
mov
clc
sbb
inc
lahf
and
cmp
popw
mov
and
sub
fdivrp
fildll
data16
add
adcb
loopne
jns
lods
sarb
ja
or
mov
enter
add
lret
fstl
adc
adc
mov
sarl
outsb
push
loopne
insl
mov
lcall
ljmp
pop
dec
rolb
mov
mov
dec
loope
sub
jg
ror
lret
mov
pop
rcr
or
jmp
mul
mov
push
mov
popa
xor
pop
clc
push
arpl
dec
dec
pusha
jp
push
call
sbb
pop
mov
pop
xchg
movsb
mov
mov
aam
push
loop
lods
divb
sbb
stos
bound
cmp
cmp
aad
push
addr16
jmp
cmc
scas
xchg
lahf
push
ja
push
pop
out
test
cmp
mov
mov
cwtl
call
sbb
mov
xchg
addr16
fidivs
cld
and
xchg
mov
ds
dec
mov
leave
xchg
cs
sbb
notb
sbb
scas
stc
cmc
jnp
ja
addb
cli
xchg
stc
jo
xchg
outsl
inc
sbbb
pop
scas
sub
sbb
div
jecxz
xor
pop
cwtl
in
cmpsl
mov
test
mov
cs
mov
iret
inc
shl
lock
mov
fadds
jbe
inc
lds
sbb
mov
lods
cmp
jl
lret
pop
mov
cld
dec
ret
jle
pop
inc
or
movsl
cmpsb
jne
sub
mov
mov
sahf
ds
dec
add
dec
jecxz
into
pop
aaa
pop
enter
mov
mov
pop
mov
fwait
mov
mov
cli
xchg
cmc
xor
mov
cmp
lock
xor
mov
lea
xchg
cld
mov
xor
jmp
repnz
mov
mov
repz
outsl
push
nop
and
cwtl
cli
leave
test
pop
cltd
sbb
mov
jl
add
adc
pop
lods
mov
icebp
mov
outsl
ss
not
loope
cmpsl
push
bound
sti
mov
mov
ja
ja
xchg
ljmp
jo
fs
mov
dec
cmpsl
mov
aad
ljmp
mov
mov
leave
push
fldt
xor
xchg
jbe
subb
popa
mov
outsl
cmpsb
xor
in
xchg
ffreep
mov
idiv
inc
jmp
ss
flds
mov
insb
dec
pop
sub
rep
mov
mov
push
in
jb
ljmp
fwait
sub
mov
lods
out
mov
mov
arpl
fstpl
addr16
add
jbe
adc
mov
scas
sarb
lea
push
mov
dec
adc
mov
inc
jmp
push
push
mov
inc
shrb
fdivs
and
or
mov
cmc
inc
out
into
and
inc
sbb
fxch
jnp
das
mov
sub
xchg
xor
inc
lods
fldt
push
lcall
insl
sub
xor
inc
outsl
mov
adc
insl
imul
andl
je
push
cwtl
jg
lret
into
jg
push
sbb
repz
fiadds
into
mov
out
and
dec
push
dec
mov
call
sub
xchg
jge
jbe
jl
jo
sub
xchg
mov
and
cmpsb
and
idivl
rcr
out
dec
push
push
mov
pop
lahf
mov
test
daa
cltd
lds
in
dec
popa
mov
sub
push
mov
push
dec
dec
cmp
hlt
mov
lret
xor
sar
lods
mov
subb
bound
jg
aad
inc
out
es
imul
jno
jbe
lods
jl
cld
add
pop
scas
push
inc
sub
push
pushf
add
dec
push
jb
mov
addb
push
xchg
faddl
pop
jb
jnp
sbb
scas
jbe
fidivl
iret
gs
dec
cld
mov
xchg
add
mov
in
and
add
in
movsb
jo
fistpll
dec
mov
and
sub
or
mov
lahf
xchg
insb
shll
jmp
and
sub
out
je
dec
fs
sbb
frstor
out
inc
cmp
adc
test
xor
test
dec
mov
gs
mov
in
ret
xor
loopne
mov
int3
xor
adc
mov
ret
call
sub
gs
jo
mov
lds
cmp
out
mov
push
vpaddusb
mulb
jno
repz
sbb
roll
outsl
pop
test
mov
dec
sbb
push
pop
imul
sub
cmp
mov
mov
vmovddup
add
scas
and
sbb
mov
lret
mov
sub
xchg
or
std
pop
test
mov
mov
push
add
or
dec
imul
lret
sub
adc
insb
scas
add
dec
push
popa
addb
jmp
push
rorl
mov
pop
and
lret
les
int3
call
add
cmp
mov
inc
hlt
outsb
andb
pop
lods
fcompl
jae
imul
popf
fstpt
scas
cmp
jo
pusha
insb
lcall
xorb
enter
mov
adc
in
pop
daa
push
fs
xorb
push
std
inc
xor
dec
daa
sbb
sub
jmp
outsl
jle
dec
jo
dec
jp
dec
xlat
jnp
pop
dec
test
nop
add
cmpb
mulb
scas
inc
fnstenv
out
loope
fucomip
pop
scas
nop
adc
sub
add
loope
ret
mov
enter
sahf
cmp
js
adc
pusha
dec
jle
stos
ficoms
rclb
stos
push
add
lcall
pusha
test
inc
inc
fists
push
mov
lods
scas
jg
pop
test
aas
mov
cwtl
inc
mov
stos
cwtl
mov
xchg
and
fisttpl
testb
sub
xchg
aam
and
dec
or
dec
push
stc
ds
je
iret
std
inc
cmpsb
xchg
call
test
mov
jbe
dec
pop
jl
xchg
insb
sub
je
mov
in
test
ss
out
pop
and
insb
add
lea
inc
xchg
icebp
movsl
lock
in
loop
pop
sbb
inc
shlb
xor
pushl
fucomi
mull
int
cmp
cmc
sub
inc
cmp
lret
test
adc
cwtl
xchg
or
mov
push
filds
push
sbb
push
repz
xchg
rorl
pmaxsw
cmpsl
pop
test
mov
add
scas
push
addr16
out
popf
jg
mov
sub
sub
jl
repnz
pop
xchg
inc
push
jo
xchg
mov
ja
fisttps
xor
jno
lret
cmp
loop
cmp
or
push
imul
jno
mov
inc
cmp
or
xor
add
mov
lahf
jp
xchg
inc
imul
iret
adc
fiadds
enter
out
xor
or
cmp
imul
mulb
fidivl
push
ret
es
jb
cmp
scas
in
das
call
fsts
scas
and
sub
add
sbb
push
scas
iret
aas
pop
int3
loopne
xchg
mov
and
fs
sbb
ret
cltd
cmp
cmp
inc
lea
int
dec
cmp
xor
jl
dec
or
test
roll
lea
ja
pmullw
sub
pop
out
sbb
or
pop
jne
stos
es
or
sub
or
jb
push
mov
add
xor
pop
in
stos
xchg
cs
rorl
pop
loope
mov
add
or
lods
std
arpl
frstor
xchg
sub
sbb
rorb
rcr
fstpl
ret
jne
cmp
sti
jge
sub
or
pop
in
push
sti
out
push
repnz
pop
or
xor
inc
test
push
in
dec
ss
pop
push
mov
fmull
and
stos
cmp
mov
pop
pop
out
movsb
and
push
call
notl
push
es
fcmove
stos
in
dec
fsqrt
sbb
bound
in
in
test
cli
std
loope
jne
mov
pop
mov
lock
loope
ret
inc
aam
lods
and
xor
dec
jl
jecxz
into
ds
loopne
scas
pop
fwait
out
out
mov
das
mov
sub
cltd
test
xor
shrl
cmpsl
incb
stos
mov
sub
aad
enter
andb
iret
xchg
rcr
xlat
daa
int3
rclb
sub
in
gs
clc
jle
dec
in
lods
clc
lahf
add
mov
fadds
jp
mov
jo
loopne
xor
insl
jnp
lock
addr16
pop
inc
adc
scas
cltd
sbb
into
lret
jg
loopne
add
ja
push
xchg
pop
ljmp
stos
pusha
lock
lret
adc
sbb
push
push
push
jmp
mov
js
cmc
jg
add
inc
ja
push
pop
xor
mov
jp
xor
movsb
in
pop
das
xor
ds
jae
rcl
and
aas
sub
push
pop
stos
cmp
faddl
push
mov
mov
stos
jne
icebp
mov
addl
stc
or
nop
out
mov
xchg
je
rorb
inc
mov
mov
dec
mov
in
lock
dec
sub
lret
or
pop
push
mov
jns
stos
in
addb
cwtl
popf
aaa
mov
cld
push
mov
lcall
jp
push
enter
cld
lea
ret
adc
rolb
or
adc
inc
mov
lret
xor
add
adc
pop
cli
push
loope
out
aad
pop
sub
and
sub
dec
inc
mov
push
cmc
bound
fcomps
mov
adc
aam
insb
loopne
mov
cmp
iret
xor
js
jns
into
jmp
push
push
jp
test
push
into
incb
sbb
mov
and
and
pop
call
jp
mov
stos
pop
repz
fildll
sub
cld
lea
cmpsl
out
mov
jge
addr16
stos
and
cld
aam
not
sbb
std
hlt
sbb
outsl
imul
mov
aam
push
decl
aad
push
icebp
inc
push
insb
ljmp
out
data16
xchg
inc
scas
push
cmp
jne
inc
pop
fdivl
mov
jb
inc
scas
mov
repz
cwtl
int
ret
dec
int
test
push
adc
inc
sahf
jmp
mov
cmp
push
std
lea
push
jecxz
loop
loope
out
imul
adc
stos
push
xchg
mov
inc
and
cmp
orb
out
push
or
cmpsb
pop
xorl
and
loope
cs
jle
xor
data16
jns
mov
insb
aas
test
mov
frstor
fwait
mov
repz
test
sbb
jno
sub
push
mov
rorb
or
sbb
jmp
mov
pop
mov
xchg
fcomps
leave
or
dec
out
adc
insl
mov
daa
xchg
adc
inc
mov
das
mov
mov
sub
fs
xor
pop
sub
xor
and
mov
sub
xchg
mov
sub
shr
arpl
cmp
mov
test
stos
cmp
mov
int
int
or
loopne
sbb
lods
in
sarb
insb
lds
sbb
roll
popa
stos
fbld
in
outsb
inc
orl
dec
xor
into
inc
ds
sub
jle
adc
cmc
cli
ficoml
jno
aaa
aaa
lods
and
jae
imul
cli
in
xor
xlat
push
dec
sub
das
pop
pop
pop
fs
inc
mov
push
push
xchg
push
out
in
xor
mov
sbb
xchg
dec
js
inc
movsb
movsl
or
lods
add
mov
lds
pop
mov
pusha
jb
ds
sarb
mov
mov
into
repz
loopne
jmp
out
pop
mov
sub
push
cmp
nop
sahf
adc
jmp
addr16
lahf
enter
fmuls
jnp
pop
inc
mov
cmpsb
jge
cmp
mov
movb
jno
sbb
into
rcr
push
cmp
xchg
inc
insl
mov
das
inc
mov
lahf
loopne
xchg
adc
mov
add
aaa
inc
or
adc
sub
outsb
dec
ja
sahf
and
xor
cmp
inc
push
sub
jnp
mov
ficomps
ja
ja
inc
mov
int
inc
mov
test
mov
xchg
insl
and
in
cmp
sti
jno
cli
and
fldt
mov
or
push
jns
sbb
sub
mov
xbegin
push
sbb
aad
in
outsb
jae
mov
mov
pop
test
jge
frstor
or
sar
or
cmp
push
pop
jg
fcoms
leave
push
shll
ja
js
fs
mov
and
xor
pop
ret
outsb
pop
jge
nop
mov
lods
xchg
xchg
les
mov
add
xchg
pop
xrelease
jne
mov
xor
xchg
int3
mov
or
adc
mov
mov
daa
cmpsl
adc
push
fnsave
mov
in
frstor
movsl
lcall
xor
push
adc
push
add
test
stos
cmpsl
leave
dec
lcall
inc
stc
adc
jmp
mov
pop
and
add
pop
mov
push
lea
xor
xchg
addr16
idivb
xor
mov
sti
in
and
push
enter
mov
dec
outsb
jb
lahf
push
mov
dec
jge
pop
inc
adc
pop
push
and
pusha
int3
pop
addr16
call
insb
mov
imul
mov
cltd
pop
rorb
inc
xor
jecxz,pt
sbb
pop
sub
arpl
ljmp
daa
hlt
out
mov
sub
and
or
test
pop
sbb
pop
subl
jecxz
mov
imul
xchg
and
dec
mov
jo
mov
subl
je
cmp
and
or
movsb
insl
ja
aad
rcrl
cmpsl
outsb
adc
push
sbb
aad
jmp
sub
lds
addr16
xlat
aad
inc
xchg
jp
push
arpl
fisubrs
insl
xor
or
ret
shr
gs
push
push
popa
cs
mov
es
out
clc
xlat
mov
sub
out
and
push
lahf
js
in
fdivrs
cli
testb
xor
test
mov
lods
bnd
in
leave
mov
or
int
cmp
out
bound
mov
xor
xor
xor
sub
fnstsw
pop
jbe
sahf
andl
sub
in
mov
sub
mov
stos
in
rorl
fiaddl
fwait
pusha
in
add
adc
jo
test
lret
push
push
mov
sub
or
push
xchg
push
jns
ret
pop
ret
sub
scas
mov
into
adc
push
push
int
ja
xchg
loop
mov
push
popa
int3
das
xchg
stc
push
filds
add
stos
inc
dec
jne
fcmovu
movsl
mov
lcall
xor
movsl
push
push
fadds
push
inc
jmp
stc
jae
insb
xor
or
in
mov
and
mov
lcall
jl
sbb
pop
add
add
leave
add
jg
mov
dec
test
pop
push
div
daa
and
pop
xor
mov
fs
shll
outsb
ljmp
sahf
xor
shll
or
cmpsb
ss
pop
iret
fistl
xor
mov
stos
out
cmp
nop
push
jp
or
and
popf
xorl
in
ror
or
push
sub
xchg
mov
insb
inc
push
movsw
sbb
ljmp
xor
in
or
adc
inc
scas
and
std
pusha
pop
pop
int
push
js
dec
shr
notl
lret
dec
mov
or
into
mov
test
mov
pop
mov
sbb
repz
cmp
mov
lcall
dec
cli
sub
sahf
mov
fs
lret
add
repnz
movsl
mov
lods
lea
in
sub
or
lock
lret
pop
aas
enter
dec
stc
test
cmp
popa
daa
rol
ret
jns
cmp
mov
push
aam
dec
pop
lods
pop
pop
ja
jb
outsl
rorl
cmp
mov
mov
xchg
or
hlt
cmp
jl
je
xor
xor
mov
sub
les
cld
inc
sbb
outsb
aas
test
mov
cwtl
daa
jmp
pop
daa
dec
cmpsb
xor
out
in
mov
daa
dec
push
pop
add
adc
js
sbb
jb
lds
test
pop
mov
lcall
jbe
mov
sahf
imul
lock
xchg
mov
pusha
in
aaa
sbb
data16
xchg
popf
xlat
cld
and
fdivs
decb
mov
inc
lret
xchg
mov
insl
xor
mov
xlat
adc
and
push
jg
or
cmp
repnz
adc
aas
fstpt
push
cmpsb
popa
sbb
mov
xor
cmpsb
or
jb
loop
and
push
xchg
or
out
and
aad
cs
mulb
test
imul
jnp
je
fdivrs
push
mov
jl
pop
aad
push
cld
cli
cmp
adc
and
and
cmp
hlt
jb
das
push
insl
inc
mov
mov
je
sti
lret
cmpsl
fstpt
jne
hlt
sbb
jmp
dec
scas
jmp
adc
outsl
xor
lahf
lods
sbb
movsl
in
push
fcmove
incb
mov
shrb
test
cmp
dec
lahf
push
lods
shr
inc
lret
fs
adc
adcl
fdivrs
pop
scas
in
jae
cltd
cs
gs
pop
jmp
loopne
or
mov
aam
mov
sbb
inc
aaa
sbb
test
dec
ja
ss
loop
mov
inc
jo
loope
mov
xchg
pop
pusha
popa
fadds
mov
cmpsl
jmp
or
int3
adc
arpl
cmp
lods
dec
and
and
ljmp
cmp
jno
xchg
sar
xchg
addr16
call
daa
aas
xchg
popa
or
pop
arpl
push
das
fcoml
ja
out
mov
push
pop
outsl
data16
mov
in
in
xor
mov
mov
mov
scas
mov
not
fdivrp
cmpsl
lret
icebp
jmp
into
pop
dec
jp
clc
mov
sub
fstpt
cmp
xchg
xchg
inc
movsl
push
cmp
pop
cmp
and
testl
pop
jle
ss
cs
cmp
dec
shl
push
sahf
and
dec
int
dec
lret
adcb
fwait
cmp
adc
fisttpl
inc
shlb
dec
lret
sub
jnp
bound
mov
jno
in
sahf
loop
sbb
ja
insb
repz
cwtl
xchg
xor
movsb
add
stc
jbe
mov
repnz
pop
xchg
adc
mov
pop
ja
and
sub
je
aad
jecxz
jle
out
adc
or
mov
mov
pusha
les
and
mov
sbb
ror
cwtl
das
daa
aaa
xlat
xchg
or
test
ret
pop
push
xchg
xchg
scas
popa
push
push
das
lahf
lahf
mov
imul
xchg
xchg
test
je
pusha
addr16
fdivp
mov
adc
in
xor
or
and
imul
push
pop
repz
out
cmpsl
test
test
mov
jle
sub
inc
inc
pushf
stc
or
inc
imulb
mov
mov
dec
xlat
jne
in
xlat
dec
dec
adc
test
jnp
xchg
or
std
cli
es
pop
idivb
gs
mov
shrb
and
mov
sub
push
dec
xchg
cmp
jp
sub
out
mov
sahf
cld
ret
jp
dec
test
pop
lea
xchg
fldenv
call
ds
fcoml
rcrl
or
sub
test
arpl
paddusw
and
mov
cli
xchg
push
out
insb
fistpl
mov
cwtl
out
out
outsb
test
not
pop
outsl
xchg
lock
mov
inc
stc
aas
jo
std
adc
xor
bound
adc
and
pop
loopne
cmp
jle
push
dec
pop
pushf
call
fdivp
dec
mov
sarb
jno
xchg
orl
mov
mov
stc
ljmp
mov
sbb
push
push
inc
sbb
or
jno
sub
cmp
dec
sbbb
data16
add
dec
and
xlat
iret
out
les
fstps
push
pop
jmp
pop
test
mov
int3
xchg
lods
mov
mov
cmp
cli
outsb
aad
loope
fs
push
imul
in
pop
mov
cltd
mov
cmp
cmpb
mov
or
or
mov
adc
aas
xor
inc
mov
or
insb
ret
jno
jle
insl
inc
out
xchg
aas
sarb
ffree
xchg
mov
sbb
shlb
mov
sti
insb
xchg
mov
and
jno
lcall
out
sbb
or
xchg
lret
and
fcomi
fisubrs
fnstenv
or
adc
ss
mov
cmp
aam
imul
test
rolb
pop
pop
sub
mov
inc
out
mov
sahf
xchg
jns
rcl
iret
mov
popf
das
test
movsb
xorb
mov
cld
inc
jo
cwtl
pop
sub
inc
jno
mov
cld
cmp
out
pop
inc
mov
and
ja
enter
sbb
push
popa
mov
jns
jge
push
push
mov
mov
cwtl
cmp
nop
repz
jns
mov
mov
jns
adc
jo
and
push
mov
sbb
xor
cmc
imul
cmp
loopne
inc
adc
jp
and
negb
in
cmp
ja
dec
lretw
cmp
filds
jl
cmp
fimuls
hlt
add
enter
sbb
ljmp
pushf
xor
sub
int
xchg
mov
ret
xchg
xchg
dec
add
gs
xchg
and
mov
fwait
jno
xchg
aam
jecxz
dec
ss
push
push
push
ljmp
outsl
sbb
outsb
push
gs
xchg
inc
xchg
test
in
out
data16
pop
push
inc
ljmp
outsl
je
leave
jne
xchg
fistl
mov
addr16
je
lock
pop
xor
mov
and
mov
shl
mov
mov
out
jns
je
sahf
stos
push
cmc
xor
inc
sahf
sbb
mov
sti
lea
cmp
dec
push
sub
cwtl
lea
and
scas
inc
leave
pop
inc
xchg
stos
aaa
movsl
pop
repnz
addl
or
inc
cmc
cmp
sbb
inc
bound
add
ds
aad
aas
pop
cmp
js
mov
jmp
in
xchg
cld
scas
loop
push
clc
pop
mov
jl
or
mov
jle
push
inc
ljmp
or
sahf
sarb
sti
adc
push
test
out
pop
jbe
xorb
adc
pushf
loope
pusha
movsl
adc
int3
xor
clc
dec
movsb
in
inc
sub
fs
lret
add
insl
adc
sbb
dec
movsl
in
in
iret
sbb
or
or
cmpsl
repz
adc
adcb
test
rcrb
into
sahf
loopne
push
add
push
int3
fldcw
fwait
movsb
mov
inc
rorl
inc
fisubrl
prefetch
sbbl
aad
sbb
stc
lret
xchg
movsl
jle
mov
mov
bound
adc
cld
dec
jb
adc
cli
or
roll
ss
jno
or
xor
sbb
cld
icebp
out
pop
sbb
mov
scas
sar
cmp
xchg
add
sub
shll
xor
push
fstps
test
cmpsb
cmc
adc
push
inc
call
ret
int
pop
ja
nop
cmp
adc
dec
pop
inc
mov
inc
rcrb
ficoml
out
push
inc
pop
cmp
sub
add
das
and
in
int3
mov
insl
jl
mov
repnz
push
add
xchg
jmp
push
xchg
adc
jns
movsl
mov
pushl
int
js
lret
jae
shl
push
mov
pop
and
cld
dec
push
mov
pop
push
dec
cmp
mov
fnstsw
and
into
mov
xor
jne
push
aad
jge
jge
add
imul
pushf
sbb
push
int3
and
sub
imul
xchg
cmp
mov
adc
inc
lds
andl
in
xchg
movsl
js
cmpsb
add
out
cld
jl
and
inc
iret
pop
inc
xor
xorl
xchg
or
std
ja
cmpl
inc
mov
and
jp
push
mov
xor
fcoms
in
aam
dec
mov
cmp
adc
add
iret
dec
sbb
lods
xor
js
test
fimull
cltd
cli
movsl
leave
sbb
mov
jle
rclb
js
in
sbb
push
sbb
ror
loop
mov
jle
cli
repz
cmp
fwait
or
scas
sub
dec
int
push
dec
mov
add
das
test
add
lret
lods
lret
pop
pushf
jo
aas
repz
in
and
icebp
pop
bound
cwtl
mov
je
mov
xor
xor
jno
dec
xor
cmp
sub
adc
mov
sbb
add
add
fistpl
push
mov
cmpsb
dec
xor
mov
dec
imul
mov
xchg
mulb
cmp
inc
scas
ja
cmpsl
pop
std
push
insl
enter
xchg
cli
stc
push
push
filds
ret
popa
mov
mov
pop
insb
movsb
movsb
test
pushf
lret
clc
js
roll
test
mov
rclb
push
ss
sub
push
inc
push
shl
in
pop
push
fmul
sbb
iret
sbb
repz
clc
bnd
movsb
dec
stos
and
icebp
lea
jb
xchg
sbb
push
pop
bound
pop
jge
inc
rol
push
jno
mov
push
repnz
les
stc
adc
loope
or
jmp
push
push
pop
out
das
les
jns
ja
test
sub
jecxz
das
aam
jmp
fbstp
sub
clc
enter
xor
ja
sbb
mov
inc
rcrl
mov
or
das
xor
cli
shlb
dec
fsubrl
mov
in
xlat
scas
jnp
mov
dec
lahf
popa
popf
popf
stc
sub
ret
jo
stos
mov
dec
cmc
mov
andl
aas
mov
mov
pop
mov
out
add
rcrl
decb
dec
rorl
cmc
inc
mov
gs
sbb
jp
mov
sub
jbe
mov
fldt
scas
outsl
jp
cmp
pop
cmc
fcomps
ret
out
xchg
aad
xor
imul
repnz
scas
push
sbb
data16
and
xlat
lcall
arpl
inc
push
push
mov
add
and
xchg
pop
cld
push
adc
dec
lret
push
mov
push
imul
cld
add
mov
add
test
pushf
adc
lea
sti
repz
fnstcw
inc
inc
jge
icebp
add
push
and
sbbl
push
xchg
sbb
std
movb
adc
imul
pushf
xchg
out
adc
cmc
xchg
sbb
push
out
jp
push
inc
cmp
mov
push
xchg
call
and
fisttps
ljmp
fbld
scas
hlt
mov
test
sub
rorb
mov
add
inc
mov
bound
mov
dec
push
pop
mov
int
insl
out
mov
add
mov
or
mov
sub
jecxz
lcall
xorl
gs
mov
lods
cmp
imul
xor
inc
arpl
scas
pop
inc
or
repnz
add
or
add
inc
xchg
and
xchg
push
iret
stos
fwait
je
mov
std
ss
repz
jo
lock
sbb
addl
lret
pop
inc
push
and
jns
adc
aam
mov
fidivl
mov
pop
mov
adc
shl
popf
xchg
pop
gs
nop
push
ss
sahf
jmp
lahf
mov
dec
inc
jmp
cmp
fwait
iret
mov
adc
xor
push
sub
les
out
shll
aas
filds
shll
out
xchg
mov
into
repnz
add
pop
pop
je
push
adc
xor
xchg
and
jnp
push
ret
adcb
dec
iret
jmp
sti
rcll
rcrb
cmpb
jae
mov
leave
out
cmpsl
popa
into
fs
and
sbbl
dec
xor
pop
fadds
js
mov
aas
mov
adc
rcll
push
mov
xchg
dec
dec
jne
jp
je,pn
inc
insl
xor
leave
xchg
nop
cmc
enter
notb
out
loop
dec
or
mov
push
sub
jbe
adc
inc
mov
rcl
dec
call
xchg
icebp
push
lahf
pop
push
pop
cmp
es
in
mov
into
repnz
mov
js
lods
mov
inc
clc
fwait
dec
push
into
mov
imulb
adcb
xchg
das
dec
mov
jne
mov
insl
add
cwtl
les
or
jmp
leave
jne
fisubrs
sbbl
dec
xorl
jle
loope
mov
ja
shrl
add
lea
std
gs
pop
test
push
and
push
pop
push
aam
dec
and
int
cmpsb
add
setne
cmp
xchg
outsl
test
cld
lret
stos
movsl
mov
jmp
pop
mov
enter
loope
into
aad
cmp
dec
push
mov
mov
out
mov
movl
jne
pop
xor
xor
rorb
push
add
in
jl
pop
inc
and
inc
adc
out
or
loopne
fnstsw
out
fsubrl
add
addr16
cs
mov
lea
das
add
shrb
dec
pop
xchg
push
lock
push
jns
les
push
popf
fsubr
adc
or
push
rcll
xor
xchg
leave
push
push
dec
ljmp
jns
mov
test
mov
pop
lds
push
loop
dec
xchg
sub
sub
es
push
loop
sbb
in
les
cmp
and
push
dec
in
xchg
mov
sub
ljmp
cmp
xchg
jae
push
xchg
sub
ljmp
addb
pushf
add
lcall
jo
adc
pop
scas
call
jne
push
in
mov
cmpsb
test
lods
dec
fisttps
mov
ja
out
jo
adc
in
cwtl
jo
adc
loop
xchg
in
cwtl
push
adc
mov
or
pop
mov
dec
nop
jg
pusha
dec
pop
in
lret
test
hlt
jge
je
enter
xchg
sub
sti
sbb
adc
cmp
jecxz
sub
add
xor
js
xor
popf
test
mov
inc
fisubs
or
mov
outsl
fwait
pop
sbb
adc
loope
divb
mov
dec
cmpl
in
mov
mov
ja
adc
add
repnz
cmpsl
incl
andb
mov
xor
je
aam
push
jge
push
jmp
cmpsl
aaa
pop
test
or
inc
shll
daa
push
push
sub
ret
and
xchg
dec
pop
int
shrb
sub
sub
and
imull
push
pushf
jge
or
mov
dec
sub
cwtl
cmp
andl
xchg
sbb
ffreep
inc
or
mov
sbb
adc
mov
and
jne
and
add
das
addr16
jnp
hlt
dec
fdivrs
and
cmpsb
insb
loopne
push
les
stos
in
cld
jno
lods
es
aad
jnp
dec
rcrl
in
movzwl
xor
cmp
dec
out
nop
lcall
jns
fbstp
mov
jno
sub
pusha
push
fs
adc
and
dec
negb
pop
pop
sub
aam
xchg
xchg
add
pushf
roll
xor
nop
pop
insl
xchg
dec
loop
sub
xchg
dec
daa
loope
sahf
das
jnp
mov
lods
nop
pandn
mov
ror
xor
mov
and
mov
dec
mov
or
insl
in
ds
mov
inc
dec
pusha
or
xchg
mov
xor
out
cmp
loop
pop
adc
inc
pop
jl
sahf
setle
cmc
daa
fs
popf
cmpsl
push
cmp
jo
popw
rep
fcomps
sub
jb
or
lods
sub
push
inc
jno
sbb
sbb
cmp
sbb
imul
in
aas
stos
mov
inc
scas
scas
in
es
or
pop
sub
rorl
cmp
mov
scas
pushf
les
xchg
push
mov
loopne
cmp
mov
lcall
pop
sbb
sub
movsl
sbb
popf
pop
mov
mov
jmp
xor
fdivrs
loop
mov
or
sbb
sub
cli
mov
mov
bound
dec
movsl
icebp
popa
cmp
js
sahf
mov
into
push
nop
scas
mov
ss
adc
push
jno
imul
dec
shll
fdivl
sbbb
cvtdq2ps
sub
jne
pop
ficomps
aad
scas
cmp
push
jae
jmp
sub
enter
dec
int
push
mov
push
loopne
lcall
cmp
aaa
dec
enter
iret
je
in
mov
cli
jg
int3
addb
out
push
cmp
insl
add
mov
aam
push
push
in
clc
js
jb
lcall
sti
cwtl
jo
inc
imul
mov
xchg
stos
dec
mov
leave
ja
rolb
nop
movsb
enter
push
or
mov
mov
scas
mov
sar
fcmove
test
and
in
lret
xor
lahf
xor
push
sub
sub
imul
push
mov
or
cmpsb
sbb
push
jae
pop
sarl
mov
fistpll
xchg
iret
out
jp
aam
scas
sbbl
and
xchg
mov
adcl
cld
fs
dec
rclb
scas
in
xor
adc
lock
movsl
cld
push
lods
cmp
cs
orl
adc
jp
cs
mov
mov
xchg
cmpsb
fmull
sbb
xor
or
loope
mov
inc
pusha
aas
sub
xchg
lcall
call
mov
ja
mov
mov
cmpsb
lret
movsb
lahf
sbb
push
orb
dec
or
xor
das
push
cmp
lock
cmc
jp
mov
cli
push
mov
int3
sub
icebp
shl
das
xchg
sub
mov
dec
push
jno
mov
push
cmp
jo,pt
aaa
out
bound
mov
cld
jns
xlat
and
test
inc
stc
out
int3
jbe
mov
int
jle
pop
fs
sbb
jmp
inc
inc
xchg
jl
xor
je
pop
cmp
daa
lds
imul
or
dec
fistpll
sub
dec
pop
cwtl
xchg
mov
push
lods
mul
and
sub
push
les
sbb
jmp
in
in
hlt
mov
xchg
jae
mov
repz
push
outsb
bound
test
aam
add
adc
das
test
das
adc
stc
push
hlt
or
xor
push
test
cld
out
dec
ret
add
push
stc
mov
lods
jb
insl
cmp
cs
mov
xchg
xchg
inc
cltd
sub
pop
add
push
pop
mov
imul
lods
mov
in
push
inc
sub
push
add
popf
inc
add
insb
mov
js
repz
push
insb
rorl
das
xor
jl
ljmp
add
loope
add
cmp
inc
jae
sti
inc
data16
pop
and
push
addr16
pop
rclb
sub
mov
aaa
dec
push
repz
sub
push
insl
scas
fnstcw
int
jae,pt
lds
jo
mov
xchg
jnp
and
lret
outsb
cmp
mov
sbb
in
movsl
ret
rolb
mov
xchg
and
jo
sbb
jp
xchg
push
inc
dec
xor
icebp
rcrl
xchg
cmpsb
mov
pusha
xor
or
and
aad
dec
stc
or
stc
in
aaa
push
or
sbb
icebp
stos
jbe
jl
push
faddl
or
pop
dec
mov
mov
or
or
push
xor
sarb
inc
shll
clc
dec
lcall
mov
or
pop
test
lret
cmp
loop
hlt
cmp
je
ficompl
inc
fxch
cmp
and
imul
aaa
repnz
pop
aaa
mov
jmp
repz
jae
jnp
fsubrp
mov
and
sub
clc
sbb
int3
ljmp
lret
inc
pop
lret
mov
sbb
jge
in
dec
scas
and
ficomps
inc
daa
call
ds
and
cld
jg
xchg
cwtl
sbb
mov
daa
cli
mov
cltd
lock
adc
out
shlb
out
push
fwait
clc
and
shr
xchg
ffreep
out
mov
push
jge
scas
stos
cwtl
pusha
push
jo
imul
push
xchg
mov
sbb
sub
loopne
ja
lcall
stc
clc
xor
mov
mov
mov
cmp
cs
push
push
hlt
test
js
out
out
aas
add
pop
cli
push
rsqrtps
push
popf
mov
mov
dec
je
jp
mov
push
mov
pop
and
mov
cltd
fs
mov
mov
xchg
adc
or
repnz
loopne
xchg
xor
sarl
xchg
fwait
outsb
stc
jne
xchg
es
or
cmc
mov
mov
icebp
mov
push
in
push
push
lods
adc
aam
pop
mov
inc
push
or
loopne
into
lds
ffree
stos
pop
ficoms
or
add
and
mov
pusha
test
fdivs
iret
or
push
jne
mov
xor
gs
or
stos
push
out
pop
push
pop
mov
add
gs
lret
mov
push
dec
test
and
adc
stos
dec
mov
sub
ljmp
adc
sbb
adc
mov
rcr
ljmp
cmp
xor
ljmp
push
popf
push
popf
pusha
add
cmc
xlat
testb
mov
mov
push
or
addr16
or
stos
xchg
fcmovnb
sbb
xchg
fisttps
mov
imul
out
rclb
out
bsf
test
dec
adc
and
movsb
test
push
push
mov
dec
ficompl
pop
shll
das
mov
mov
jge
int3
bound
mov
hlt
lcall
jns
lret
jmpw
adc
mov
out
and
mov
cmp
test
push
add
stos
rcrl
ret
adc
dec
jno
push
aad
mov
jp
jo
and
xor
cld
fnstsw
mov
loopne
adc
adc
dec
ret
jg
or
mov
push
fsubp
fdivr
pop
fimull
jns
xchg
push
sub
sub
addl
lcall
into
fldcw
adc
rcrl
aas
jecxz
mov
mov
repnz
orb
xor
push
repnz
jmp
xchg
aaa
cmp
add
scas
ret
adc
xchg
mov
loope
test
and
push
ljmp
jo
inc
push
xor
shl
in
movsl
sbb
jecxz
pop
fcmove
out
mov
inc
or
cmp
scas
ja
xor
jecxz
xchg
rolb
lds
or
adc
jmp
popa
mov
mov
pushf
mov
andl
fsts
dec
adc
jo
cs
mov
popf
and
pop
push
mov
stos
cs
jge
push
push
mov
repz
and
fstpl
add
and
sbb
das
sbb
cli
pop
fwait
rolb
xor
dec
outsl
pop
push
nop
inc
push
cmpsl
repnz
movb
lock
add
int3
adc
xchg
inc
sti
frstor
dec
xor
cmp
adc
sub
add
fdivp
pop
ss
outsb
mov
add
incb
pop
imul
fwait
xor
cmpsb
cmp
out
rol
in
das
pushf
add
bound
fistpl
push
cmp
lcall
and
iret
push
dec
xor
testb
out
hlt
add
push
jp
push
movsb
mov
stos
sti
outsl
mov
mov
add
cli
push
mov
lret
out
mov
or
js
cltd
out
daa
sbb
andb
roll
mov
ss
out
decb
jne
sub
rcrl
pop
jnp
pop
pop
sahf
mov
mov
or
cli
xchg
fs
out
jle
mov
inc
addr16
xchg
xor
outsl
iret
cli
out
call
shll
call
movsb
push
xor
xorl
dec
mov
adc
inc
mov
stc
fldcw
out
js
in
dec
add
pop
das
data16
mov
out
cld
inc
fwait
cmp
cs
loope
mov
ss
cmp
fwait
imul
loopne
xchg
mov
es
in
lock
jp,pn
cs
mov
xlat
dec
sub
sbb
cmp
adc
push
sub
mov
xor
fistl
push
lods
fwait
pop
and
or
aad
sub
cli
xor
rolb
pop
and
sarl
ljmp
scas
aas
jae
pushl
jl
mulb
jb
ret
gs
pop
stc
dec
sti
stc
xlat
dec
jbe
mov
mov
push
sub
addr16
loop
aas
cmp
cwtl
jmp
aas
and
cmp
xor
addb
nop
and
cwtl
xchg
sub
out
ret
loopne
aam
jmp
xchg
jge
xor
mov
jmp
and
pusha
les
ss
scas
jmp
and
out
jnp
jbe
jl
scas
add
imul
jbe
insb
sbb
jno
out
fsubl
dec
fwait
adc
test
aas
js
jno
arpl
movsl
dec
mov
sub
cmp
push
pop
ss
test
aad
clc
inc
call
push
insl
es
aas
rcll
lea
push
jns
mov
push
sti
and
dec
xor
and
mov
mov
call
rcr
scas
out
push
pop
lock
les
sub
jb
add
movsl
jl
pop
xor
lcall
push
imul
jno
daa
lahf
add
pop
pop
add
dec
adc
pop
lcall
sub
das
in
lret
dec
mov
dec
jmp
test
sub
stos
push
inc
filds
inc
je
jno
int
add
push
ds
adc
sbb
push
sti
inc
dec
adc
adc
lahf
sahf
or
cmp
insl
rorl
clc
xor
mov
and
loop
popf
xchg
mov
jle
push
jmp
mov
repz
aam
or
and
ja
nop
xlat
cmp
aam
push
push
pop
in
in
fwait
daa
xchg
add
test
pop
pop
in
lret
dec
or
jge
jno
adc
xchg
test
and
push
jae
push
inc
jg
lcall
cmp
and
mov
sbb
sub
push
lret
pop
cmp
leave
test
mov
aad
iret
std
pop
pop
fisubrl
jnp
and
daa
rol
sub
sbb
insl
int3
and
pop
cmp
sbb
push
inc
push
mov
dec
or
jnp
xlat
scas
mov
ja
lret
push
fisttps
push
mov
and
bound
xor
pusha
scas
xor
lret
xlat
dec
pusha
dec
dec
push
aad
leave
mov
jae
ret
inc
dec
pop
and
mov
cmp
xchg
outsl
ret
sbb
xor
movsl
faddl
mov
cmp
out
pop
xlat
andb
out
sar
jno
lds
fsubr
movb
ljmp
lahf
inc
rcll
adcl
es
adc
push
dec
daa
mov
xlat
fsubrs
jp
test
push
sub
fnstsw
lea
push
inc
jo
sub
call
add
das
enter
mov
adc
enter
xlat
jne
add
and
rcll
push
mov
or
or
lea
sbb
jge
sub
pcmpeqb
and
popa
fidivrl
es
cmp
lret
sti
dec
pop
movsb
push
mov
sarb
add
xor
fistps
in
and
repnz
inc
inc
lods
or
mov
fldcw
cmc
and
or
xor
inc
xchg
pop
adc
orb
jno
int
jo
xor
cmp
lahf
test
jb
ds
push
jmp
clc
repz
dec
sahf
popf
xor
xor
arpl
iret
gs
jle
fucom
dec
stc
ljmp
sbb
aam
lods
fwait
inc
sbb
push
ljmp
push
dec
sub
out
inc
cmp
pushf
mov
and
insb
mov
jl
mov
xor
ret
popf
shll
popa
vpsllq
rdpmc
adc
push
dec
inc
fnsave
cmp
inc
add
push
lahf
fisubl
mov
aam
pop
inc
lcall
sarl
sbb
in
pop
mov
lcall
adc
mov
jns
scas
jne
xor
pop
jne
mov
out
fistpll
xor
jmp
fnstsw
cmp
test
fisubrs
test
loope
xor
test
popf
lret
adc
scas
sub
into
mov
scas
fstps
jp
popa
xor
lret
sbb
rcl
jp
insw
jp
sub
xchg
jg
es
arpl
insl
mov
cmpsb
lods
mov
or
push
aaa
ffreep
cmp
pop
adc
xor
aad
rorb
inc
jne
cmc
test
mov
jbe
add
jg,pn
sub
nop
lea
mov
xor
sub
lret
add
std
xchg
fiaddl
xlat
enter
hlt
or
mov
insl
dec
out
nop
popa
pushl
shll
insl
fstps
pop
xchg
in
xor
loopne
jb
push
mov
or
ja
lret
hlt
cmp
pop
nop
push
lods
mov
fldcw
stos
shll
push
dec
pop
fisubrs
push
jo
mov
sub
mov
sbb
sbb
jl
dec
cwtl
stos
loope
test
repnz
cld
fldcw
rolb
mov
faddl
jge
scas
cmp
int
pop
push
sbb
lea
adc
mov
je
adc
dec
jle
dec
out
rdtsc
cmpsl
ret
mov
mulb
xchg
cmp
mov
adc
lcall
sub
cmp
push
mov
or
jnp
dec
jnp
shr
sbb
xchg
nop
sbb
xor
pushf
popf
cmp
movsb
enter
pop
scas
mov
and
loop
push
push
shlb
stos
in
pop
out
mov
push
jns
mov
lcall
push
pop
cmpb
jo
jmp
in
pushf
adc
sti
mov
xchg
out
sti
ficompl
fadds
pusha
pop
aad
pop
sub
pop
jmp
xor
nop
bound
inc
mov
dec
aaa
adc
nop
imul
adc
jae
pop
cmp
mov
pop
fxch
int3
into
adc
xchg
scas
nop
out
push
lea
jbe
pop
scas
cmp
lret
sub
cmpb
mov
inc
popf
mov
cmp
pop
pop
pop
adc
sub
movsb
xor
jns
mov
adc
xor
lods
xor
adc
hlt
adc
push
push
das
test
fwait
pop
sub
adc
addb
inc
add
mov
test
out
fs
insb
aad
inc
sub
loop
cmc
jnp
mov
mov
jge
mov
xor
lahf
pop
inc
push
andb
mov
cld
sbb
mov
in
adc
mov
mov
inc
jno
hlt
loop
and
jae
arpl
push
sbb
test
out
push
xchg
dec
jns
stc
add
mov
push
addr16
movsb
into
mov
mov
and
bound
int
test
stos
mov
dec
or
mov
or
sarb
clc
adc
out
aas
cmp
inc
loop
cmp
add
loopne
lea
sahf
icebp
sbb
aad
jg
movsl
pop
popf
add
aam
inc
mov
lods
pop
dec
jbe
push
mov
sub
dec
mov
sbb
xor
cmp
xchg
movsb
dec
fwait
sub
cmc
sti
icebp
rcrl
xor
loopne
push
jbe
inc
das
lock
jmp
sar
pop
mov
add
movsl
fcmovbe
aad
push
je
ljmp
movsb
mov
rcl
inc
inc
jle
sub
and
or
nop
dec
repz
push
imul
cmc
sub
cld
pop
or
or
in
pop
rcr
pop
inc
imul
push
inc
test
neg
cmp
add
push
xchg
test
int
or
aas
mov
cmc
loop
cmp
and
enter
mov
mov
mov
adc
mov
in
or
lcall
js
jo
shlb
mov
loop
aam
jb
ss
cld
lret
testl
cmc
subb
or
in
jl
sbb
push
nop
fistpll
rorl
lock
in
cmpsl
sbb
cmpsl
pop
ret
xchg
inc
push
ret
out
cmc
repz
mov
pop
mov
leave
xor
push
ljmp
out
sub
stos
popf
add
cmp
dec
sbb
in
fnsave
add
cmp
loopne
iret
xor
fimuls
arpl
or
jo
pop
adc
stos
xchg
push
rcr
push
pop
xchg
dec
inc
and
add
in
or
lods
push
or
popf
mov
sar
xchg
lea
push
repnz
mov
add
sbb
xchg
sbb
adc
imul
inc
fisttps
arpl
in
sahf
push
inc
jae
ja
pop
stc
push
add
movsl
xor
enter
addr16
roll
xorl
sahf
mov
pushf
inc
xor
test
push
pop
dec
jp
idivb
push
pop
ja
and
pop
sub
adc
mov
fsts
iret
test
inc
xor
roll
jbe
mov
cmp
fwait
lret
stos
ret
cmp
ja
ljmp
lret
andl
loop
inc
scas
xor
adc
and
in
sbb
jle
scas
aaa
and
adc
sbb
push
xor
dec
dec
fnstsw
mov
mov
xchg
dec
js
xor
mov
xchg
adc
cmp
sbb
jbe
dec
fnstcw
fildl
pushf
xor
mov
popl
pushf
aam
push
testl
and
orb
jne
jno
out
addr16
push
lock
aaa
lock
das
jp
sub
push
iret
sbb
clc
sbb
push
mov
fldln2
aas
fidivrs
int
into
cmpsb
cmp
lods
mov
hlt
pop
aas
sbb
add
daa
aaa
mov
lods
ret
cmp
sub
jmp
mov
inc
mov
or
push
je
in
pop
xchg
fsubl
stos
movb
cld
iret
jno
cwtl
xchg
clc
push
inc
ds
aas
inc
xlat
and
sub
and
add
imul
pop
push
sar
mov
xchg
mov
cmp
fdiv
adc
xchg
add
stos
jmp
test
pop
sbb
test
mov
negl
mov
mov
xor
inc
movsl
test
fs
dec
xchg
sbb
cwtl
hlt
jo
push
jne
ljmp
or
les
or
stos
in
jns
cmp
and
jns
cwtl
mull
push
stc
or
sti
adc
and
xchg
daa
nop
fmuls
pop
mov
ds
sbb
pop
into
lcall
push
aas
sbb
or
cli
push
sub
or
mov
jae
fdivl
sti
mov
pushf
or
xor
in
sbb
adc
sbb
scas
xchg
jno
pop
ja
push
add
nop
push
mov
popa
and
add
std
ss
mov
orl
adc
jl
bswap
sahf
mov
movsl
xchg
cmp
adc
push
je
in
out
xor
shll
ljmp
data16
push
cmp
mov
lock
cli
insl
mov
fldt
into
mov
scas
pop
cmpsb
mov
roll
sub
jbe
sub
push
adc
sbb
lods
adc
mov
add
jle
adc
dec
lods
insl
push
and
push
shlb
test
xor
gs
je
bound
add
subb
inc
fildll
mov
inc
out
lea
jae
mov
inc
popf
arpl
je
pop
lea
sbb
ficoms
mov
stc
mov
cmp
ret
jne
push
movsb
arpl
xchg
lea
stos
movsb
popa
jp
mov
inc
cmpsl
sti
jp
pop
cmp
and
loope
dec
cli
pop
jl
and
mov
push
dec
xchg
inc
fs
sbb
mov
push
in
fstps
sbb
jbe
sbb
mov
push
or
fst
scas
fwait
push
add
mov
test
cld
push
add
ffree
dec
subl
xor
xor
addr16
or
cmp
dec
mov
sahf
jns
xchg
cmp
adc
sbb
sbb
xor
iret
mov
xchg
dec
cmp
sti
pop
cmp
dec
and
ret
in
push
lds
sub
stos
js
jge
movsb
push
sti
cs
je
mov
bound
fidivl
int3
sbb
push
xchg
sbb
mov
fisubrs
inc
jns
aad
arpl
lds
rorl
adcl
jg
repnz
add
rclb
roll
xchg
ss
stos
rclb
jbe
cltd
xchg
adc
icebp
loopne
xchg
iret
sub
xchg
pop
push
lret
mov
mov
push
mov
pop
adc
ret
lea
test
inc
sti
push
jmp
sub
jp
sbb
mov
and
push
data16
sub
adc
pop
xchg
insb
mov
pusha
mov
in
xor
xchg
and
cmpsb
sub
fcompl
test
cmc
push
cmp
idiv
jmp
mov
and
pusha
repnz
repnz
pop
mov
icebp
push
jp
cmp
jp
imul
xor
data16
in
js
adc
pop
mov
cmp
stos
in
sub
outsb
jbe
mov
mov
sbbb
dec
ljmp
mov
cmp
mov
imul
sbb
push
call
inc
push
push
push
cmp
cmc
lahf
imul
out
jae
stos
ficoml
insb
lret
mov
popf
aas
mulb
stc
lods
fs
int3
fdivl
jge
inc
jns
sbb
arpl
xchg
fisttpl
mov
enter
add
enter
sbb
cmp
aaa
or
inc
mov
mov
xlat
in
sub
xor
dec
adc
jecxz
lds
push
xchg
lea
sbb
dec
jge
lret
mov
ret
inc
push
adc
xorl
aaa
sub
jno
mov
and
std
and
and
jb
adc
popa
cs
test
mov
cmp
or
lods
vunpcklps
inc
or
in
dec
scas
cmp
lcall
pop
sub
movsb
loop
dec
pop
pop
clc
rol
lcall
or
ljmp
leave
inc
lea
adc
mov
cmp
cld
sub
cli
mov
cmpb
rorb
js
pop
xchg
mov
adc
push
jbe
roll
xchg
pop
xor
push
mov
scas
lea
icebp
xchg
in
jnp
ret
cld
repnz
jle
and
mov
jmp
fadd
pusha
lds
aad
xor
xchg
test
inc
loopne
into
pop
daa
clc
aas
mov
xlat
pop
fisttpll
nop
xorl
cmc
rcll
dec
push
fcoms
mov
gs
pop
mov
pusha
mov
and
gs
sbb
dec
jmp
ret
pop
inc
pop
movsl
movsb
inc
jecxz
out
das
sahf
outsl
mov
sbb
iret
insb
mov
movb
insl
pushf
add
cmp
mov
lds
pop
outsb
xlat
mov
add
jmp
insb
adc
test
jl
loope
cltd
and
dec
mov
fldcw
cmp
insl
gs
cmp
adc
icebp
out
out
loope
or
sub
xchg
push
fistl
pusha
dec
dec
test
adc
movl
lea
lock
sub
scas
dec
mov
jne
mov
jb
add
push
cmpsb
scas
push
jae
jbe
sbb
inc
add
insl
or
mov
rcll
daa
cld
mov
push
arpl
mov
add
pop
push
lret
sub
sub
or
and
test
in
cltd
lods
push
rolb
stos
out
ds
mov
xchg
add
adc
faddp
and
int
xor
cmp
add
in
jl
mov
lahf
test
flds
cmp
loop
lahf
aad
and
cmp
stos
and
imul
xor
mov
cmpsl
cmp
movsb
jbe
mov
or
inc
sbb
sub
pop
sbb
add
lcall
inc
mov
push
xor
dec
fidivrl
clc
add
loopne
jno
push
pop
add
xchg
in
push
lret
pop
jge
in
shll
sahf
cmp
jbe
popa
mov
jae
into
sub
fwait
inc
mov
scas
jmp
pop
mov
repnz
sahf
mov
and
enter
imull
imul
sbb
xor
jp
xchg
hlt
stos
clc
notl
inc
fisttpl
jecxz
inc
in
jmp
lds
and
movsb
mov
outsb
mov
bound
ss
mov
inc
xor
or
jne
inc
shll
bnd
and
mov
inc
les
add
sbb
or
xor
movsb
mov
stos
outsl
dec
inc
push
ds
clc
jnp
cld
jl
and
jmp
cli
mov
mov
rcll
arpl
lds
add
sub
cmp
sub
mov
mov
es
cmp
sar
fcompl
in
int3
daa
pop
aam
mov
sti
ljmp
push
mov
mov
stos
dec
sub
jnp
sbb
sti
pop
jecxz
nop
gs
jno
cmp
scas
fcomps
mov
mov
rcl
insl
test
outsl
push
xlat
mov
fisttpll
shrb
aam
fwait
and
lods
sub
das
imul
ja
aad
pop
or
jne
negb
adc
lahf
fistpll
push
add
xor
ds
cltd
inc
mov
mov
sti
dec
aam
mov
das
and
cmp
dec
sbb
mov
loop
rcrl
mov
adc
mov
or
in
or
lahf
fistpll
add
or
mov
inc
stc
or
lcall
mov
stos
jnp
sub
lahf
insb
popa
jae
cmp
inc
js
push
xchg
sub
mov
adc
push
idiv
adc
push
lahf
fwait
aaa
adc
mov
pop
sbb
adc
decb
push
mov
cmp
int
jne
or
xor
xchg
fisubrl
dec
pop
aad
ss
rorl
imul
mov
lock
jns
iret
icebp
jo
jg
aam
add
adc
push
mov
sub
in
sub
or
scas
fcompl
ljmp
inc
jge
sahf
mov
push
enter
scas
jle
add
xor
pop
negl
pop
pop
add
out
or
add
subb
sub
outsb
mov
and
dec
into
das
pop
jp
inc
sub
push
cmp
int3
push
or
lret
shrl
jecxz
jle
lcall
mov
insb
fsubr
jl
jg
ret
pop
flds
push
jle
add
aam
push
sbb
push
rol
xor
mov
jp
out
stc
js
cmpl
push
mov
in
subl
cmpsb
xor
add
das
imul
imulb
movsl
mov
jno
in
inc
in
jno
and
jbe
xor
jno
addr16
fwait
jl
cmp
jg
mov
lea
aas
popf
xlat
xchg
push
in
inc
in
add
mov
pop
leave
or
mov
mov
xchg
std
jo
mov
push
lahf
int
mov
stc
cs
xchg
nop
out
stos
inc
add
cmp
andl
lahf
ret
mov
leave
imul
or
inc
push
jbe
add
mov
adc
sarl
xchg
adc
cmp
pushf
sub
test
xor
mov
sbb
and
adc
lret
outsb
xlat
push
mov
dec
xchg
mov
out
inc
and
dec
add
roll
dec
lods
arpl
xor
and
aad
ja
push
lret
jbe
adc
int3
in
sub
fsubs
mov
mov
sub
lret
lods
test
leave
push
jp
dec
jmp
and
inc
shrb
adcl
sbb
jns
outsb
xor
shl
gs
and
mov
loop
add
push
dec
sbb
pop
mov
out
movsl
pop
les
push
sub
pop
lahf
pop
mov
jl
loop
ret
xlat
call
test
cmp
jb
inc
stos
xor
push
movsl
xchg
js
fists
cmp
das
in
int
fwait
popf
outsl
fmuls
and
and
and
adc
in
mov
mov
mov
fisubl
xlat
orb
mov
sbb
mov
sub
push
fcompl
pop
cmp
mov
pop
scas
in
adc
jmp
inc
inc
sahf
jge
popa
jnp
push
push
pusha
lahf
pusha
pop
add
mov
add
mov
add
pop
mov
or
pusha
bound
in
fsub
in
mov
shll
pop
sbb
iret
add
add
outsl
mov
pop
mov
xlat
popf
rdtsc
mov
lahf
fidivl
addr16
leave
jg
push
imul
jne
dec
xlat
push
cmp
dec
dec
jge
jb
in
insb
pop
push
inc
lret
jne
xor
loopne
sbb
out
and
adc
test
inc
movsl
push
scas
pop
jg
fiadds
sub
mov
sub
mov
arpl
mov
out
add
and
or
inc
inc
pop
stos
in
pop
push
jle
pushf
mov
pusha
adc
xchg
outsb
mov
xchg
fsubl
lods
cmp
dec
xchg
leave
mov
arpl
in
mov
pop
pop
subb
cmp
mull
lahf
pop
jo
dec
xchg
stos
adc
jg
xor
sbb
add
aas
inc
fwait
jl
shlb
in
mov
add
adc
subl
dec
insb
xor
push
movsb
add
or
rclb
mov
mov
lock
xchg
xchg
lret
stos
popf
insl
inc
xchg
cmp
fimuls
sub
xchg
mov
stos
mov
xchg
stc
scas
mov
int
pop
xchg
cwtl
fsubl
mov
lds
push
pop
fldenv
sbb
xchg
repnz
push
adc
push
stos
mov
pop
push
jp
jecxz
ret
xchg
sbbb
enter
sbb
js,pn
sahf
loopne
add
clc
cmp
sti
inc
jge
shll
mov
push
imulb
and
or
sub
mov
add
push
fsubr
lock
push
and
jbe
push
icebp
mov
insb
mov
cmp
out
pushf
and
sub
xchg
jbe
mov
stc
nop
lods
xor
cmpsl
ds
adc
inc
movb
inc
fdivl
lock
fs
in
pop
daa
xor
pop
in
pop
lock
test
test
cmp
xchg
xor
pop
cmp
pop
xor
out
add
out
ret
sarb
mov
sbbl
std
xchg
push
add
add
lcall
mov
pushf
cmp
je
lret
mov
adc
lea
lds
push
fcomps
mov
jle
imul
jmp
pop
add
aaa
mov
stos
popf
mov
mov
fbstp
lea
push
push
jle
sbbl
jl
outsl
cmp
or
jmp
lret
clc
lret
xor
adc
scas
daa
fsubl
into
out
xchg
jae
xchg
pop
pop
jne
stc
repz
adc
cmp
push
fwait
shrb
mov
lcall
adc
cmc
mov
outsb
fs
jmp
pushf
rcrb
call
cmpsb
dec
lods
add
pop
cmp
mov
enter
xchg
mov
xor
sahf
jnp
ret
pop
pop
cmpsl
adc
xchg
jmp
add
sub
iret
out
xor
cmp
movsl
jle
inc
add
mov
test
hlt
mov
arpl
dec
nop
test
hlt
inc
xchg
in
jge
shlb
jmp
mov
stos
cmp
adc
or
rep
sbb
mov
std
imull
test
subb
ja
mov
sbb
pusha
adc
mov
inc
test
fs
repz
std
cli
jo
pop
cmpb
lock
xor
sbb
mov
fcomps
cs
pop
lcall
loopne
and
in
leave
push
pop
lods
mov
jo
xchg
mov
incb
push
fcomi
lock
lds
mov
lcall
hlt
jno
sub
in
rorb
fwait
out
mov
push
or
pop
adc
sub
mov
mov
add
sti
mov
push
jp
jbe
inc
mov
aad
mov
push
sub
jmp
movsb
pop
js
xor
cmp
out
adc
ljmp
or
bound
popa
sub
fnstcw
mov
rcrl
int
subl
arpl
cmc
dec
rclb
leave
jl
inc
push
sbb
add
push
and
jl
xchg
aam
icebp
stos
adcl
scas
ja
mov
mov
in
orl
lcall
cmpsl
pop
andb
or
mov
add
xor
jmp
loope
in
cli
inc
mov
mov
xor
mov
push
stc
rcll
dec
rorl
les
sbb
mov
movb
mov
pop
cmp
in
iret
pop
fnstcw
insl
adc
mov
or
ret
xor
push
inc
shrl
pop
jno
outsl
xchg
sbb
scas
sub
pusha
hlt
rcrl
aad
dec
inc
inc
mov
js
mov
and
imul
jecxz
js
push
sub
dec
ud1
sti
mov
lds
adc
mov
xor
xlat
out
sub
mov
mov
out
dec
xlat
xchg
xchg
imul
repnz
scas
addb
xchg
xchg
mov
push
mov
push
sbb
pop
outsl
dec
cmc
or
pop
mov
inc
dec
out
mov
fidivl
jno
mov
dec
push
pop
pop
mov
int
out
js
sub
testb
xor
fwait
scas
out
mov
xchg
jl
es
dec
or
fdivs
stos
jg
into
movsb
fdivl
push
mov
shrl
sub
lds
add
cmp
clc
out
loopne
bound
mov
sub
xchg
in
ds
dec
mov
xor
insb
xchg
jnp
push
stos
cs
notb
sti
loop
in
pushf
add
push
fwait
sarb
popa
aam
pop
gs
sub
lret
xchg
mov
dec
jg
imul
cltd
data16
out
add
call
insb
cmp
xor
outsb
into
dec
inc
pop
in
out
shl
lock
jmp
repz
adc
loope
sbb
adc
cmpl
mov
push
dec
les
test
or
popa
sbb
jg
sahf
inc
jno
jbe
mov
insb
dec
ja
adc
lods
mov
inc
sub
enter
mov
jns
nop
xchg
push
dec
pusha
xchg
jg
xor
jne
mov
xchg
or
pop
pop
call
negb
sub
xchg
ficomps
lods
and
and
push
leave
aam
or
xchg
jo
jmp
mov
dec
sbb
fidivs
lea
inc
sub
xchg
divl
push
ja
pop
cli
xchg
aaa
jns
push
out
iret
adc
jae
ror
cmpsl
dec
push
or
into
or
pusha
sub
xchg
outsb
test
je
pop
fdivl
push
jo
scas
into
in
jge
adc
fnsave
xchg
mov
int3
mov
sub
xchg
loope
or
repnz
mov
pop
scas
lods
push
or
cli
ljmp
and
dec
testb
cmp
mov
jbe
insl
sahf
sub
movsl
dec
mov
xchg
bound
push
inc
sub
test
push
test
fmul
pop
xor
ljmp
jnp
jae
mov
sub
ja
ljmp
jns
in
sbb
in
xchg
push
push
scas
xlat
push
jnp
sbbb
jle
inc
gs
mov
test
pushl
out
shr
sbb
sbb
stos
popf
sub
cmp
push
jecxz
ffree
jno
stc
mov
insl
xchg
scas
sbb
leave
and
cld
in
leave
loop
push
push
jne
xchg
or
enter
jbe
mov
mov
inc
push
push
adc
fsub
xchg
dec
sbb
lds
adc
pushf
sar
or
cli
out
lods
popf
call
push
sub
push
mov
movsb
mov
xchg
lahf
cmp
xchg
jbe
inc
jo
push
popf
out
add
sbbl
ret
mov
aas
jge
stc
test
pop
dec
mov
inc
out
mov
inc
sub
sbb
pop
daa
dec
push
xlat
ljmp
lea
xchg
sbb
mov
jno
test
fdivs
jg
ret
fisttpll
jge
out
repz
cmpsb
push
aas
scas
or
jmp
pop
mov
in
adc
pop
xchg
sbb
mov
xor
mov
insl
cmp
mov
sar
fimull
inc
mov
mov
shrl
add
sbb
push
les
cmp
in
jmp
sysexit
jle,pt
sbbl
mov
sbb
fcoml
std
imul
dec
push
or
fwait
mov
mov
fldt
cmp
cvtdq2ps
and
mov
mov
imul
cmpl
mov
cwtl
add
loopne
js
add
nop
mov
psraw
jae
xchg
out
ds
inc
fsubl
or
mov
mov
jns
clc
addr16
out
fisttpl
cs
int3
inc
jecxz
cmc
les
push
out
gs
sub
sbb
push
mov
fisttpl
jp
xchg
and
mov
out
rorl
call
ret
loop
push
dec
xchg
mov
iret
jge
or
push
jo
push
gs
shrb
das
mov
and
inc
aaa
or
push
sti
pushf
sbb
mov
andb
jo
cmpsl
aaa
and
mov
inc
add
icebp
mov
shll
xchg
adc
add
cmc
mov
mov
into
lcall
jecxz
jle
cmovs
insl
shrl
sbb
push
pop
out
mov
push
scas
nop
ja
dec
popa
sbb
fmul
daa
inc
push
mov
call
jge
add
mov
scas
test
call
das
and
int
sub
leave
push
insb
dec
or
xchg
xchg
outsl
xor
mov
je
test
loop
jo
rol
pop
push
push
xor
imul
jo
xlat
mov
fisttpl
out
mov
rcl
inc
cmc
dec
lret
push
mov
daa
stos
jns
fldl
pop
push
adc
add
add
or
xchg
cmp
repnz
xchg
fwait
pop
xor
sti
cmp
sarl
xor
mov
cwtl
mov
ret
jecxz
mov
bt
mov
les
jmp
lods
mov
inc
pop
lret
lret
out
jb
xor
aas
mov
pop
mov
mov
dec
out
inc
xlat
shl
rorl
xchg
lods
cmc
into
sbb
mov
repz
ss
imul
sti
icebp
dec
mov
out
movsb
lods
jle
movl
das
mov
stos
out
addl
arpl
fcoml
push
xchg
pop
jo
ret
aam
cs
mov
mov
xor
xchg
mov
or
xor
push
das
movsl
xor
mov
cmp
mov
and
ss
jmp
sbb
and
xor
push
movsl
pop
clc
or
dec
push
call
out
and
test
rorb
inc
aaa
mov
dec
popa
push
ret
nop
push
adc
xchg
push
cli
cmp
in
jp
icebp
repz
mov
int
jge
dec
imul
mov
lods
or
inc
cwtl
pop
clc
sub
cmp
sub
stc
xorb
jns
loope
icebp
out
jne
js
pop
xchg
sbbl
sbb
insl
adc
jne
mov
fadds
or
add
mov
js
sub
mov
es
and
ss
and
iret
inc
jnp
xor
scas
xor
or
push
or
pop
das
mov
jo
inc
addb
pop
adcb
lcall
cmp
xchg
dec
sub
nop
xor
cmpsl
or
ss
mov
inc
aad
mov
push
addb
aad
jp
xor
add
sub
jb
mov
filds
add
leave
push
adc
outsl
decb
out
iret
adc
push
mov
sub
sbb
daa
xor
xchg
test
sti
add
inc
xchg
push
stos
add
hlt
jns
xor
xchg
rorb
jns
int
arpl
dec
shrb
and
push
mov
repnz
cmpsb
inc
push
movsl
stc
or
sub
xchg
push
mov
fcoml
add
or
sbb
inc
xchg
push
xor
mov
sahf
cli
or
dec
adc
shll
rolb
sub
clc
jns
cmp
sub
push
imul
cmp
out
cmp
sub
add
pop
incb
mov
leave
mov
dec
or
shl
in
mov
icebp
and
cmc
lret
pusha
xor
push
or
jb
outsl
jno
inc
dec
pop
out
xchg
push
scas
sbb
shlb
arpl
xor
or
xor
adc
sbb
pop
sub
mov
dec
repnz
fiadds
mov
mov
sbb
inc
ss
xchg
js
pop
popf
ficoml
push
ret
xchg
clc
cmc
loope
jmp
jne
xchg
repnz
push
lcall
movsb
adc
xchg
int
inc
dec
in
into
stos
inc
mov
in
stos
push
fisttps
sub
adc
pop
push
dec
js
or
dec
dec
sub
dec
mov
xorb
fs
cld
pushf
loop
popf
test
xlat
jno
push
lods
scas
gs
popf
sbb
or
movaps
cmpsb
jnp
adc
mov
push
lea
movsb
inc
dec
jmp
push
btc
das
xor
cmp
outsl
jg
xchg
xchg
andl
fidivrl
aas
or
mov
jnp
and
std
inc
mov
push
ja
xchg
xchg
enter
pop
jne
aad
fisubs
add
mov
sub
mov
imul
xchg
adc
push
jnp
and
cmp
lds
das
aaa
xor
stos
in
add
add
inc
lret
inc
into
mov
sbb
std
movl
mov
mov
sub
dec
jmp
out
and
or
xlat
or
or
js
mov
lcall
cmp
cmp
sub
cmpsl
mov
decb
fwait
inc
jne
mov
repz
lahf
int3
hlt
push
aad
test
imul
sub
int
daa
ret
cltd
and
lret
popf
adc
jb
adc
sbb
xor
fsqrt
dec
lea
pop
movsb
xchg
insb
or
xor
outsb
mov
aaa
dec
mov
popa
push
ljmp
pop
dec
orl
aas
sub
inc
movl
xor
sbb
push
or
imul
iret
outsl
pushf
sub
xlat
xchg
fimull
dec
cmp
lods
mov
cmpsl
popf
adc
aad
mov
ror
mov
imul
or
int
fimull
adc
cmc
fcmovb
adc
mov
jmp
stos
xchg
int
out
sub
lcall
mov
xchg
adc
jne
dec
faddl
or
cmpsl
sub
rorl
stos
loopne
lods
rcrl
aaa
mov
jnp
cmpsb
fcmovb
cmpsb
mov
insl
mov
lar
sub
add
cmc
mov
xchg
aaa
cmp
xchg
sub
pop
xor
in
es
rcrl
mov
stos
mov
sbb
push
arpl
icebp
cmp
dec
data16
popa
inc
jns
or
mov
mov
in
fmuls
outsl
sbb
inc
cmpsl
push
pusha
fbstp
inc
ret
push
xchg
jnp
dec
xor
push
loope
aaa
mov
sti
adc
leave
das
dec
inc
xchg
fcoms
jp
mov
sbb
xlat
lods
mov
inc
and
pop
int3
stc
pop
movsb
outsl
pop
push
pushf
mov
mov
dec
lret
dec
fdivs
fmuls
inc
lods
scas
lock
in
outsb
in
pop
bound
dec
adc
sbbb
in
sub
dec
int
inc
mov
mov
and
or
dec
ret
cltd
mov
cs
iret
loop
adc
rcll
fcoms
dec
iret
pop
inc
jmp
shrb
pop
cwtl
lahf
sub
cmpsb
aaa
mov
mov
mov
rcrl
jge
hlt
inc
sbb
jmp
inc
aaa
mov
les
mov
sbb
in
int
mov
into
lock
cmp
pop
in
jns
sbb
fincstp
jno
movsl
stos
push
hlt
mov
int3
jg
ja
ret
jecxz
sub
sub
test
sbb
cmp
repz
shlb
push
sbb
pushf
xchg
add
dec
cmp
outsl
pop
mov
dec
les
shl
adc
cli
mov
int
ret
and
sub
cmp
test
dec
mov
aad
imul
cltd
xchg
and
sub
fwait
mov
je
les
cwtl
inc
cld
push
push
sub
clc
nop
xchg
jp
and
add
daa
and
and
inc
and
add
nop
xor
jb
hlt
and
scas
aaa
stos
sbb
ljmp
mov
mov
push
scas
or
mov
out
pop
cli
mov
pop
dec
xor
loopne
push
je
fs
popf
push
je
dec
aas
inc
lret
add
je
sbb
jo
dec
orl
lods
bound
inc
gs
xchg
fdivrs
mov
jecxz
mov
jg
pop
push
push
ret
mov
stc
mov
pop
or
ret
addr16
insb
and
loope
and
rcll
popa
or
pop
hlt
dec
pop
rcr
inc
into
insb
ljmp
xchg
jno
test
and
fnsave
add
lret
mov
or
push
loop
aaa
mov
pop
xor
mov
adc
adc
and
mov
lock
sti
xchg
shl
cmp
push
dec
mov
fidivl
repz
add
push
xor
jge
mov
cwtl
popa
jne
xorl
mov
insb
hlt
jb
dec
pop
push
xchg
add
jmp
fucomp
mulb
sub
or
cmp
fsts
xor
cmp
and
jno
jge
call
adc
sub
and
cli
dec
push
pop
jle
fnstcw
mov
dec
cmc
mov
mov
xor
add
jo
xchg
mov
test
sti
stos
jge
adc
repnz
and
repnz
icebp
fidivrl
and
sbbb
dec
cmp
ret
mov
inc
cmp
and
pop
sub
aas
in
js
imul
mov
insb
adc
xchg
and
cmc
clc
jecxz
xchg
stc
icebp
fisubs
ret
push
xor
push
xor
imul
int3
fs
test
dec
push
push
sbb
or
notb
gs
rsqrtps
cli
out
jae
cli
fstl
adc
add
rcll
test
sarl
pop
push
and
mov
push
add
pop
xlat
in
xlat
push
mov
jle
cmc
fnstenv
jb
jmp
fildll
adc
aas
jae
mov
popf
stc
or
jo
clc
clc
std
adc
push
cmp
movsb
fnstcw
test
lret
je
sub
push
xchg
pop
cmpsb
mov
mov
cmp
mov
lds
sbb
popf
adc
fmuls
in
mov
mov
cmp
adc
xor
shl
cmp
mov
cs
shll
cmp
dec
sub
and
pop
push
sub
out
jne
stos
fldt
and
fadds
out
push
mov
and
outsb
lods
insb
pushf
or
sub
sti
lret
in
dec
pusha
sub
loop
loope
por
xor
push
inc
loop
inc
xchg
mov
ss
mov
mov
lods
cmp
gs
imul
flds
stc
jge
xchg
xchg
push
mov
imul
mov
and
dec
xlat
jmp
sarl
xchg
mov
adc
jp
popf
mov
jne
rorb
sub
fidivrs
xchg
rorl
cmpsl
inc
jbe
sub
shlb
cld
push
in
clc
movsl
mov
adc
mov
mov
push
pop
jnp
cmp
xchg
mov
out
lds
mov
jge
aam
lods
scas
dec
mov
movsl
jne
lds
fiaddl
mov
lahf
cmp
push
inc
decl
fiaddl
xchg
cmpsb
shlb
les
test
ds
fucomp
aad
xchg
leave
xchg
cli
outsb
jp
leave
push
jge
push
scas
fs
push
icebp
and
mov
inc
xchg
mov
enter
shlb
adc
xchg
add
push
mov
popf
arpl
xchg
repz
imul
dec
divl
outsl
mov
add
outsl
jmp
sbb
push
push
enter
loopne
in
dec
jo
mov
fsubrl
push
adc
cmp
mov
ljmp
mov
dec
outsb
test
loope
int
inc
in
push
mov
testl
lods
adc
fstpl
mov
dec
adcb
push
jle
jl
mov
and
push
enter
adcb
mov
adc
in
outsb
stc
fmuls
pop
test
daa
cs
ss
cmp
ljmp
xchg
dec
mov
cs
ja
push
clc
add
xlat
and
jo
in
data16
push
fs
sub
or
push
push
xorl
mov
pop
fmul
dec
shr
in
das
xchg
xchg
push
pop
popf
scas
addr16
adc
cmc
fistps
and
inc
mov
fwait
xchg
inc
jne
xchg
jns
cli
dec
inc
popa
cmpsl
in
jge
sbb
out
or
mov
test
cmp
icebp
and
add
and
and
mov
xchg
das
repz
lret
aad
addr16
dec
xchg
js
xor
fldenv
ret
mov
outsb
sub
or
lea
test
xchg
cmp
lret
pop
fucomip
sub
sbb
and
addr16
ja
lret
sub
xor
sbb
xor
ret
jno
mov
xchg
out
pop
lods
clc
lea
push
in
pushf
into
sbb
cld
jnp
sbb
ret
ljmp
dec
dec
lods
cmp
xor
std
adc
inc
out
sbb
les
mov
js
ret
adc
or
adc
subb
jl
and
stc
inc
nopl
in
mov
std
adc
xchg
cmp
inc
scas
jmp
push
or
add
jo
add
test
adc
jns
je
aad
sti
sbb
daa
pop
stos
mov
xchg
push
addr16
cmc
or
or
inc
shll
push
xchg
jmp
mov
fcmovbe
cmp
dec
sbb
cmp
sbb
aaa
dec
jo
mov
vpshufb
inc
inc
jns
jg
sbb
mov
mov
or
xorb
push
stc
mov
mov
cmp
sbb
in
mov
pop
iret
or
xlat
pop
movsl
mull
mov
pop
mov
aam
ret
call
mov
mov
repnz
or
cltd
cwtl
int
arpl
pop
jge
sarb
pop
test
xchg
lahf
sub
mov
inc
cmp
clc
inc
inc
push
dec
outsb
mov
mov
mov
mov
in
jecxz
dec
daa
mov
jb
cli
cmp
jns
inc
pop
adc
pop
sbb
sbb
cmp
fldl
nop
leave
xchg
mov
cmp
shr
xlat
in
fsubrl
mov
jg
out
cmp
push
dec
cmc
add
inc
xlat
cld
xchg
out
jno
push
cmpsl
mov
enter
testb
sbb
out
push
push
sbb
pop
pop
inc
mov
xchg
outsb
inc
ficomps
loopne
cmp
pop
icebp
stos
ds
loopne
leave
ror
or
enter
inc
rorl
adc
mov
les
inc
out
ja
dec
xor
xor
adcl
jns
jae
leave
scas
push
mov
mov
roll
loop
movsl
xchg
in
xchg
bnd
cs
mov
call
das
or
cs
call
pop
sbb
imul
je
dec
push
adc
hlt
aam
repnz
cwtl
push
je
xlat
in
dec
rcll
cli
std
shrl
mov
arpl
mov
loope
movsb
shl
mov
mov
jbe
pop
dec
sahf
mov
cmp
fiaddl
xlat
cmp
fcoml
in
mov
andb
sub
faddl
adc
cmp
and
or
mov
aaa
icebp
out
js
dec
lds
in
ret
mov
aas
push
call
cmp
push
xchg
enter
sub
icebp
xor
and
dec
movsl
mov
test
insb
sbb
pop
mov
test
push
push
xchg
adc
sbb
push
inc
mov
mov
lds
ds
setb
pop
mov
sub
imulb
icebp
cmp
xchg
mov
sub
jp
mov
xchg
lods
nop
aaa
inc
in
stos
enter
nop
xchg
cmc
sub
andl
add
jbe
ja
shlb
and
out
stos
dec
push
add
cmpsb
icebp
in
push
mov
xchg
inc
push
imul
lock
jns
inc
push
push
jne
int
std
nop
into
cmp
je
out
rcrl
lods
stos
iret
mov
into
sbbb
cmp
lahf
outsb
sub
inc
jns
aas
and
push
and
dec
ja
cmp
dec
jg
cltd
dec
mov
stos
push
enter
inc
mov
jmp
ds
dec
add
inc
xchg
sub
jle
sarb
adc
pop
lea
ret
pusha
mov
pusha
xchg
mov
add
movsl
addb
mov
lds
adc
in
sbb
ret
cmp
mov
add
lret
push
mov
sarb
or
movsl
pop
sub
add
jae
push
ret
jge
sbb
mov
adc
mov
aad
xchg
add
or
clc
fcompl
xor
stc
test
cs
adc
mov
push
and
popa
xor
push
pop
test
cmpsl
jb
data16
xchg
inc
aaa
inc
cmpsb
sbb
outsl
xchg
scas
lcall
xchg
sub
xor
sbb
stos
bound
jmp
xchg
mov
hlt
add
pop
xchg
push
inc
mov
inc
push
int
sbb
in
into
push
out
sbb
mov
call
mov
mov
fwait
add
fiaddl
inc
inc
xor
xchg
and
push
pusha
and
leave
xor
fstpl
popf
loope
mov
das
into
sbb
mov
mov
xchg
xor
sbb
shlb
daa
push
or
cmpsl
push
jecxz
out
and
es
push
mov
cli
xor
mov
inc
sbb
jl
push
or
mov
push
xchg
xchg
push
stc
pop
divb
or
mov
jno
stos
dec
loop
mov
push
into
jp
outsb
std
sub
xchg
push
je
sbb
cmp
loope
sbb
cwtl
xor
add
push
cld
inc
jnp
xchg
fldl2t
sbb
mov
jl
packuswb
push
mov
pushf
sbb
sbb
out
push
xor
push
or
lret
lods
pop
sbb
mov
or
clc
fcmovne
push
jno
ret
cmp
aad
or
jae
es
jne
xchg
int3
lret
cmpsb
push
out
mov
or
ds
mov
lods
ds
xchg
xor
xor
mov
imul
int
fnstsw
js
inc
daa
xor
negl
iret
aas
mov
pop
imul
lods
xchg
mov
scas
cmp
movsl
xchg
adc
in
nop
scas
pop
mov
nop
xor
enter
sbb
cmc
mov
mov
cwtl
adc
aaa
test
mov
sbbb
and
push
jmp
push
push
mov
pop
fs
fstps
fstps
cmpsl
int
cmp
pushf
pop
xchg
dec
es
movsl
fsubl
loopne
sub
jno
or
jle
and
push
pop
repz
adc
mov
push
mov
xor
fisubrl
or
xchg
add
adc
sub
ljmp
cmpsl
lods
pop
lods
je
jns
xchg
ret
stc
or
mov
push
out
mov
cwtl
inc
push
xchg
icebp
lods
mov
mov
inc
mov
enter
xor
fmuls
push
popa
xor
rcrl
lods
addr16
xchg
push
inc
outsb
in
nop
aas
pop
testb
mov
shl
sbb
call
jl
jle
aas
in
inc
mov
sbb
scas
outsl
or
xlat
mov
clc
fs
ds
cli
push
jb
xchg
mov
in
lods
rolb
insb
faddl
enter
push
sbb
add
subl
stc
gs
and
pop
repnz
insl
adc
stos
fisttpll
cmc
cwtl
cmp
cmp
bound
dec
add
scas
inc
mov
xchg
fsts
dec
cmp
aad
or
adc
push
outsb
in
aaa
fwait
xchg
mov
mov
mov
sahf
lea
adc
xchg
mov
sbb
repnz
fbld
add
xorl
dec
aam
adc
mov
mov
ljmp
movsl
ljmp
adc
insb
inc
pop
shr
sub
pop
popf
push
jl
mov
jb
call
jae
add
push
mov
imul
out
or
fisubl
sub
lock
ret
ds
idivb
test
fcoml
loope
movzwl
aam
or
ja
push
fneni(8087
scas
pop
push
jns
pop
and
scas
sub
sub
mov
fbstp
dec
idivb
and
ficoms
and
inc
mov
rcl
pop
aaa
lock
pop
mov
lret
add
cmpb
mov
into
xchg
cmp
out
shll
sahf
push
inc
sub
inc
arpl
loopne
dec
sbb
dec
cli
push
add
pop
xor
bound
cli
mov
inc
push
lret
and
test
shrb
xor
insb
xor
cmpsb
notb
fcmovb
or
out
movsl
cld
mov
mov
js
jp
pop
adc
aam
jp
das
mov
mov
cli
sub
lahf
lcall
pop
sti
stos
repnz
lds
sbb
sbb
dec
mov
mov
sar
inc
mov
lods
out
add
adc
xchg
das
cmp
ja
cmp
mov
dec
or
add
inc
adc
push
mov
sbb
xchg
pop
inc
pop
xor
pop
push
fcom
add
or
or
jae
sbb
adc
push
call
popa
movsl
ud0
loopne
pop
or
xor
gs
lret
mov
lock
xchg
jns
js
push
ljmp
push
pushf
insb
cld
insl
jno
fcom
cltd
std
mov
and
rcl
sbb
mov
loope
mov
pop
dec
fmulp
pop
dec
std
inc
cmpl
dec
adc
std
mov
ss
sbb
stc
xor
inc
mov
imul
je
leave
and
cmp
sbb
movsb
cld
add
das
enter
xor
fistps
mov
jnp
jl
mov
push
ljmp
insl
mov
loope
jbe
cmp
or
enter
outsl
das
clc
xchg
mov
mov
lds
inc
jl
inc
and
adc
stos
pop
push
loopne
jl
js
xchg
enter
sub
ret
ret
lret
lock
sbb
rcr
out
mov
sbbb
loope
adc
jno
push
test
scas
scas
cmp
pop
pop
xchg
and
mov
fisubrs
cmp
push
dec
in
cld
sub
aas
adc
mov
dec
test
xor
mov
dec
add
movsl
call
push
mov
enter
push
pop
cmp
dec
xchg
mov
cmp
jbe
mov
sbb
cmp
cmp
and
jg
icebp
mov
shll
add
push
push
inc
movsl
shll
aaa
lcall
inc
mov
rorl
inc
mov
aaa
les
subl
adc
mov
push
pop
sbb
int3
lods
pop
jmp
mov
sub
or
lods
dec
dec
and
pop
xchg
aam
jmp
data16
jp
sbb
loopne
jmp
add
call
dec
movsl
sub
push
and
or
arpl
out
push
sub
fisubl
jp
nop
cmp
mov
xlat
xor
jbe
xchg
sub
mov
scas
daa
push
adc
imul
xchg
cli
cmp
pop
push
and
cwtl
fwait
jnp
cmp
add
or
and
xchg
aas
jb
cmpsb
xor
movsb
jp
loope
inc
arpl
lock
mov
ret
mov
mov
adc
int
xor
dec
ret
xchg
fwait
jl
je
stmxcsr
mov
arpl
add
aam
cmp
out
pushf
dec
jp
rolb
sbb
xor
mov
cmp
outsl
lock
test
ficompl
shrb
icebp
jno
dec
insl
scas
sbb
std
out
mov
lcall
and
cltd
mov
fsubl
cs
aam
out
stc
jg
loopne
pop
lds
add
stos
in
aas
loop
pop
imul
sbb
jnp
das
dec
push
cli
stc
sbb
xchg
shll
jnp
loopne
aaa
jo
fadds
mov
jo
test
add
inc
jge
adc
movsl
arpl
insl
cmp
and
mov
into
add
loopne
ljmp
push
es
lea
mov
in
in
scas
mov
movsl
or
sub
adc
lock
inc
repz
mov
loopne
pusha
pop
mov
sub
jmp
pop
mov
repz
pop
in
xchg
adc
inc
test
cmc
in
or
call
xchg
xorb
fs
ss
mov
mov
jge
bound
rorl
out
lods
jmp
popa
daa
cmc
adc
iret
dec
xchg
into
jb
xor
nop
cmpsb
add
ja
mov
inc
imul
fcomip
push
cwtl
pop
sbb
out
imul
mov
sarb
push
mov
add
jo
shl
fstl
cmp
fsts
es
mov
jp
push
dec
outsl
in
outsl
xor
pop
and
add
pushf
rep
sub
lret
repz
pop
pop
jp
add
fistpl
jo
mov
adc
nop
cmpl
jne
or
dec
cmp
and
scas
cs
cmp
dec
lret
loopne
inc
cmp
and
push
jle
jno
xchg
pop
cmp
jno
shlb
inc
pop
data16
sbb
mov
push
ja
cld
inc
push
xlat
int
test
stos
mov
cwtl
popa
lret
mov
jae
push
add
pushf
fstl
decl
cmp
mov
lcall
push
test
sbb
pop
or
fstl
rcr
sub
rcrl
sahf
hlt
sub
loopne
xchg
lahf
fwait
test
pop
xchg
test
cltd
imul
or
pop
std
insb
ss
sbb
inc
lea
test
sbb
xorb
repnz
mov
mov
cmp
in
mov
outsl
or
popf
js
mov
repz
out
pop
movsb
xchg
rcll
mov
sbb
and
and
cmpsb
in
inc
insl
add
pop
dec
in
data16
xchg
sbb
fcompl
sbb
scas
adc
or
sub
ret
mov
xchg
mov
sub
fidivs
lock
jnp
jnp
aas
in
xchg
lret
rcll
xlat
pop
or
out
loopne
mov
imul
mov
pop
popa
and
cmpsl
mov
xchg
in
pop
inc
sbb
out
fldl
dec
orb
dec
jne
mov
sbb
mov
adc
sub
jns
fistl
sub
xor
dec
mov
mov
dec
fistpl
sbbl
cmp
xor
ljmp
jb
es
xor
sub
movsb
add
test
jbe
mov
inc
mov
aam
test
loop
daa
mov
mov
imul
repz
data16
or
sub
push
and
jmp
inc
mov
cmp
aam
loopne
in
lahf
in
push
jbe
shlb
pusha
jl
sub
test
aam
jge
inc
inc
lahf
test
in
sub
stos
enter
xchg
fsubrs
jl
pop
adc
iret
push
lods
pop
jmp
hlt
xchg
pop
xchg
popf
fwait
sbb
mov
and
ret
adc
mov
jge
inc
out
sbbl
jmp
adc
fdivrp
push
mov
sbb
cmpsb
scas
dec
mov
js
fistpll
sbb
cmpsl
and
sub
lock
mov
lods
jbe
add
loop
sub
pop
inc
jecxz
lahf
mov
and
inc
sti
dec
test
lds
rcll
bound
mov
adc
xor
pop
pop
adcl
xchg
arpl
leave
int
push
test
jo
xchg
fsubrl
mov
push
push
mov
adc
and
mov
test
dec
stos
cmp
jecxz
mov
das
inc
mov
xchg
push
movsl
pop
mov
ret
out
sub
push
punpckhwd
xchg
mov
jno
sub
push
add
outsl
movsb
sub
xchg
cmp
cmpsb
stc
pop
or
mov
xchg
mov
push
sub
call
cmp
jle
push
and
in
leave
imul
pop
mov
lea
sub
loope
pop
push
jno
mov
jo
cmp
inc
and
cmpsl
inc
movsb
jecxz
xlat
inc
or
shlb
js
mov
popf
sub
movsb
push
cmc
mov
inc
mov
add
hlt
cmp
dec
sub
sti
pop
cmp
xchg
lock
mov
push
or
pop
adc
mov
ret
jge
mov
and
xchg
sarl
sbb
mov
add
mov
and
adc
mov
fcom
inc
inc
ret
xlat
test
fucomi
ret
xor
mov
xor
cltd
cmc
inc
and
aad
push
lahf
jecxz
and
ljmp
push
push
jmp
insb
push
add
sbb
movsl
cmp
lcall
or
jno
adc
sub
mov
xchg
icebp
mov
and
rcl
push
js
outsl
pop
lock
dec
adc
pop
sub
mov
sub
mov
mul
insl
call
mov
gs
mov
fadds
popa
xor
cs
jb
leave
shll
inc
add
cmpl
cmp
in
dec
movsl
stos
pop
pop
test
push
add
lret
add
pop
cltd
dec
je
jo
adc
mov
xor
jne
cltd
xchg
jo
inc
movsb
add
clc
sub
mov
rcr
arpl
push
lea
push
adc
push
xchg
mov
je
sub
andl
sbb
setbe
sbb
shlb
ficoms
sahf
ja
sbb
stos
aaa
mov
enter
and
ud2
lret
wrmsr
dec
iret
shrb
jbe
in
lea
pop
loope
aas
dec
dec
jecxz
push
add
mov
mov
and
pop
enter
js
je
fucomi
sbb
adc
fwait
xchg
leave
push
dec
cli
pop
jne
inc
xchg
xor
mov
and
adc
repnz
sub
jp
inc
xchg
mov
cmp
lds
ljmp
push
jl
xchg
ret
sub
sub
pop
ljmp
insl
adc
cmp
mov
div
sahf
mov
xchg
jb
subb
test
in
in
je
insl
scas
jo
mov
outsl
rol
and
sbb
sbb
sub
in
jns
pushf
aam
jno
lahf
in
jae
or
mov
rorw
lods
jp
inc
rol
and
ret
mov
incl
jl
mov
repnz
out
sbb
and
cmp
mov
mov
scas
inc
stos
in
mov
mov
mov
jge
fdivrl
popa
shlb
outsl
lea
cmpsl
xor
jne
and
mov
scas
jb
pop
lahf
and
sub
cmp
popa
and
cmp
mov
test
sbb
push
xchg
or
scas
inc
test
jno
mov
das
sub
notb
inc
or
xchg
cmp
dec
cmpsb
inc
jno
fstpl
lods
test
test
mov
cmp
jbe
lahf
cmp
addr16
xchg
clc
dec
mov
jmp
and
shrb
insb
lods
aaa
insb
fidivs
es
divl
inc
mov
sbb
pop
aam
add
push
or
sbb
xor
or
sub
xchg
and
mov
jae
pop
fpatan
movsb
pop
pop
fsqrt
js
inc
mov
dec
inc
and
movsb
outsl
pop
pop
and
jns
mov
sub
movsb
aas
jne
dec
adc
rcrl
js
int
nop
push
cmp
mov
and
mov
sub
test
add
das
adc
lea
inc
push
cmp
jbe
jae
sbb
and
aas
pop
cld
repz
mov
int
inc
imul
jecxz
push
cs
divb
test
or
xchg
xor
inc
cmp
dec
lock
jecxz
pop
xchg
mov
pop
fwait
push
scas
loopne
aaa
jo
sti
push
mov
pop
pop
and
inc
into
xor
mov
xor
mov
test
testb
ds
mov
and
icebp
fs
mov
mov
cmp
xchg
cmpsl
adc
inc
enter
inc
jl
ret
cmc
cld
sti
mov
push
rorl
jnp
cmp
test
jo
jbe
mov
mov
shr
das
les
jo
sti
cmp
setae
fnstsw
cmpsb
and
aam
push
add
aaa
mov
sahf
or
pop
xlat
dec
repz
pop
xor
sub
sbb
sbb
xor
push
xlat
push
cmpb
imul
rcrl
test
nop
pusha
lods
ljmp
and
ret
icebp
cli
xor
stos
add
mov
sub
push
or
icebp
sbb
hlt
out
mov
xchg
xchg
mul
pop
pop
ds
sbb
es
dec
sahf
inc
int
gs
movsb
mov
jno
fstps
loop
dec
insb
inc
push
sbb
mov
push
fcomi
fsubrs
add
or
aaa
loop
sbb
jo
ljmp
popa
jg
rorb
fmul
hlt
scas
insb
addr16
jne
mov
loop
test
leave
pop
add
insb
add
cmp
fwait
in
push
icebp
std
bound
inc
mov
xchg
test
lock
les
sub
movsl
jnp
insl
jns
mov
pop
pushf
lea
add
iret
ja
insl
scas
dec
sub
cmp
repnz
cmp
inc
jo
int
inc
sub
inc
scas
mov
and
roll
add
mov
push
jno
inc
push
xor
test
int
dec
sysret
pop
cmp
jae
dec
jmp
jle
orl
int
in
mov
jle
outsl
push
into
sub
popf
jp
out
pop
sub
insb
cmp
push
out
mov
sbb
addr16
shrl
daa
popf
xchg
stc
fcmovnb
nop
mov
call
fwait
jp
fisttpl
mov
repz
je
cmpsb
mov
xor
inc
add
mov
or
in
pop
add
jno
xor
sub
cmc
aad
mov
scas
decl
adc
push
xchg
pop
cmp
je
push
fs
sbb
fcompl
out
sbb
mov
stos
xor
in
jbe
sub
aad
jle
push
jge
setno
lahf
inc
mov
test
sahf
cmp
pop
lahf
mov
xchg
ds
inc
mov
push
push
aam
xor
push
jmp
imul
into
lock
sarl
pop
ja
jmp
or
pop
lock
insl
stos
jo
inc
in
imul
lret
add
xor
add
cmp
sub
xlat
hlt
ror
scas
movsl
adc
movsl
pop
les
incl
in
push
popf
push
pusha
call
dec
cmp
cs
ljmp
mov
into
dec
clc
mov
dec
adc
push
push
aam
lods
ficoml
or
pushf
data16
and
loop
lock
int3
iret
int
adc
push
les
sbb
inc
add
fdivs
xchg
stc
mov
mov
mov
pop
daa
or
add
mov
outsb
stc
mov
adc
jge
pop
aaa
lds
lods
repz
sub
inc
clc
jmp
sub
js
push
jle
gs
lods
scas
cmp
and
add
sarl
scas
or
sbb
sbb
push
push
scas
outsb
xchg
xchg
mov
ret
test
xor
cmp
out
cld
inc
xor
jge
dec
adc
es
int3
rcll
int
inc
mulps
lea
cmp
insb
sub
mov
out
fwait
mulb
js
xchg
daa
test
dec
lcall
pop
inc
xchg
cmp
mov
dec
in
mov
das
rorl
adc
out
je
xchg
mov
mov
sti
fucom
or
xor
lods
xor
pop
into
adc
jns
ss
fxam
ret
xor
gs
movsb
adc
rorl
add
shl
inc
ret
xchg
test
stos
cmp
jecxz
loop
xchg
mov
mov
mov
push
es
sbb
xor
push
cmp
mov
pushf
mov
cs
insl
shrb
test
and
adc
sub
int
pop
lahf
mov
mov
sub
sub
out
sub
sarl
inc
dec
xchg
into
or
push
int3
in
jmp
in
popf
inc
push
dec
mov
ljmp
mov
jne
fs
dec
pop
cld
js
dec
add
jae
mov
dec
cmp
add
and
int
jo
or
inc
push
cmp
pop
and
sahf
xlat
jno
loope
lods
pop
push
mov
jecxz,pt
mov
mov
hlt
jl
loop
fldcw
and
lock
dec
adc
out
push
jl
sbb
sub
les
outsb
pop
inc
enter
mov
cmp
inc
xor
repz
mov
popf
lods
add
sub
fwait
and
pop
or
cld
je
rclb
out
mov
scas
sti
movsb
jg
jbe
jns
push
mov
in
cltd
mov
pop
addb
pop
mov
mov
jmp
outsl
call
pop
dec
out
cwtl
xchg
mov
mov
stos
sub
mov
shlb
mov
enter
or
int
iret
arpl
and
sarb
add
sbb
jmp
dec
mov
pop
push
rcr
sub
lock
inc
pop
cwtl
cmp
adc
cwtl
pop
cli
cmp
ja
test
cmpsl
xor
cmpsl
jb
inc
mov
cmp
jne
xchg
das
add
iret
lea
mov
xor
outsb
cmp
loop
cmp
nop
push
push
mov
fcompp
cmpsl
or
xlat
pop
rolb
pop
xchg
sarl
cmp
sbb
mov
repz
mov
call
xor
xchg
lcall
inc
out
mov
in
dec
fnstsw
into
insl
rcl
xor
adc
adc
mov
inc
sub
fists
or
out
icebp
fs
mov
mov
scas
dec
mov
lods
dec
jne
mov
mov
call
and
rep
dec
mov
into
and
cmp
inc
enter
inc
or
je
pop
xchg
int3
test
aam
mov
insl
jp
stc
roll
or
push
mov
les
pop
pusha
sbb
push
stc
int3
mov
clc
fdivl
subl
mov
divb
jmp
cmp
jmp
outsl
sbb
les
fs
xor
fistl
lods
push
ja
jecxz
aaa
pop
iret
mov
mov
sbb
adc
out
cmp
mov
push
inc
fdivs
shll
cli
mov
movsb
sahf
fwait
mov
push
test
mov
add
in
loopne
mov
push
lods
pop
and
inc
arpl
push
xchg
iret
ret
and
test
loop
insl
xchg
fildl
mov
jecxz
lods
mov
pop
and
rcrb
dec
and
lahf
xor
cmpsb
cmp
add
aad
jne
loopne
push
gs
das
sahf
jle
das
sti
jne
or
out
pushf
inc
outsl
int3
adc
pop
pop
and
aad
or
es
add
dec
shrl
arpl
aad
dec
loope
jge
or
test
ret
sbb
sbb
cmpsl
stc
stc
out
and
test
jle
and
out
and
ret
lods
push
mov
and
inc
ss
gs
mov
std
cltd
das
mov
push
ret
cmp
push
mov
outsb
adc
dec
inc
out
pop
je
jp
cltd
sti
mov
cmpl
add
sub
sbb
dec
inc
adc
lret
mov
aad
lahf
mov
out
push
in
jle
rorl
inc
dec
lea
sbb
call
and
inc
or
mov
mov
imul
lahf
out
push
xchg
arpl
pop
xor
or
dec
ds
push
das
icebp
sbb
insl
cmp
pop
sahf
ss
jecxz
inc
fwait
mov
dec
inc
mov
pop
ljmp
or
sbb
xor
push
mov
cmp
sbb
std
push
mov
rcrb
ja
inc
popa
jb
xorl
xor
cmp
push
cmp
xchg
xor
jl
fcmovb
outsl
dec
out
push
mov
and
lahf
xchg
mov
mov
rcr
cmp
cmp
rcrb
aad
lahf
mov
dec
pop
dec
or
lahf
rorb
inc
das
int
mov
jmp
pop
and
mov
add
scas
and
inc
ja
scas
add
test
les
lods
xchg
or
sub
cmp
lds
add
jmp
into
jo
mov
adc
adc
jle
fsub
sbb
push
add
ds
ss
enter
or
add
xor
clc
inc
into
andl
movsb
mov
jnp
call
xchg
xor
xor
mov
enter
fsubrs
jne
xchg
adc
out
inc
inc
xor
imul
pusha
imul
in
mov
jp
clc
pop
mov
mov
cmpsl
adc
sub
cmpsb
sub
and
lods
inc
pop
xchg
or
or
xchg
pop
inc
loope
or
in
xor
inc
and
call
mov
fld
mov
lock
test
repnz
enter
mov
mov
ds
fnstenv
clc
or
test
inc
push
dec
loope
push
test
aaa
sub
into
sbb
imulb
sbb
push
jecxz
add
out
sar
test
push
fidivl
decb
pop
mov
mov
jmp
scas
fcomp
push
pop
data16
or
jne
sbb
jns
mov
xor
nop
loopne
xchg
fs
jo
inc
clc
adc
adc
icebp
and
fidivl
fbld
ja
outsb
pop
into
jl
int3
cmp
cmc
sahf
xor
dec
test
sub
incb
fildl
jne
push
sarb
cmp
cmpsl
pop
mov
or
ljmp
xor
out
movsl
scas
ret
mov
data16
es
clc
out
pop
mov
leave
xchg
es
pop
mov
into
aaa
fwait
xchg
cmp
and
mov
push
sbb
adc
scas
mov
out
push
jae
test
mov
xor
xor
fwait
xchg
dec
test
push
imul
in
iret
out
stos
sar
mov
stos
lods
and
movsl
fwait
inc
mov
inc
pop
dec
adc
dec
aaa
std
sar
mov
test
add
iret
in
call
std
clc
mov
loope
cmc
cld
hlt
push
imul
mov
xchg
and
ja
pop
xor
push
imull
test
or
inc
push
cmp
push
jle
shrb
sub
cwtl
cltd
mov
mov
scas
pushw
fnsave
orb
outsl
xchg
popa
fisttpll
test
fsubl
mov
ficoms
push
jmp
adc
ficompl
fstps
mov
push
fcmove
int3
pop
xor
mov
dec
jmp
in
lahf
out
xor
ja
cmp
into
das
mov
mov
and
iret
xchg
pop
or
arpl
mov
decb
sbb
aad
js
and
fmuls
leave
xchg
mov
aas
pop
xchg
and
dec
lds
repnz
dec
cmc
repnz
sti
movsl
and
mov
and
pop
jg
jp
and
pusha
xchg
loope
jne
push
out
stc
adc
es
inc
outsb
flds
adc
inc
sbbb
mov
dec
inc
xlat
xchg
add
lcall
jnp
cltd
dec
movsl
push
test
mov
jnp
mov
mov
mov
lds
faddl
cmp
jb
bound
and
mov
rorb
test
cli
test
jo
cwtl
jle
fsubl
mov
xchg
and
ja
ds
jg
jae
inc
jns
push
add
sbb
lds
std
adc
je
into
shrl
xchg
sub
adc
mov
jae
lods
test
or
lea
add
fldenv
jno
adc
cmp
inc
loope
adc
jmp
int
sub
rolb
dec
cmp
add
movsl
cltd
fwait
int
std
ret
or
imull
mov
sub
outsb
push
dec
mov
push
or
andl
cmp
je
sub
sti
sub
dec
xchg
aad
cmc
dec
gs
test
ss
push
jl
lahf
out
dec
push
fdivrs
insb
aad
xchg
rorb
xlat
push
add
cmp
sub
cmp
mov
mull
daa
aam
das
dec
or
sub
je
pop
pop
jg
and
imul
out
adc
rcll
cli
dec
loop
lahf
jno
or
mov
and
jns
cmp
cmp
xchg
test
xchg
xchg
out
inc
test
arpl
or
push
fsubrs
xor
xchg
xor
cld
adc
or
pop
pop
mov
pop
mov
vmovups
test
popf
leave
ljmp
cld
insl
imul
push
fdiv
les
dec
fs
add
xchg
out
push
bound
scas
mov
lret
xor
sub
sbb
cmp
jae
rcrb
lds
jno
aad
dec
inc
fdivs
gs
mov
and
imul
pop
or
lret
xor
fs
data16
cmp
test
fs
sbb
inc
xchg
ja
ss
into
cmpb
and
ret
int
adc
mov
dec
addl
fnstcw
push
pop
fs
cli
lret
aam
mov
ret
pop
adc
out
push
lock
mov
ret
insb
cmpsb
test
xchg
add
fstps
cwtl
outsl
pop
into
ja
iret
leave
xchg
sbb
or
das
std
xchg
jo
pusha
push
or
push
mov
ja
lds
jne
jg
fisttpl
pop
mov
lahf
outsl
or
sub
jl
out
outsl
mov
mov
pop
or
sbb
inc
xchg
dec
or
xchg
dec
aaa
cmpsl
js
stc
std
popa
lds
sbb
mov
push
adc
andl
and
aam
test
aaa
repnz
xchg
xchg
mov
fstp
jb
fs
add
popa
cli
xchg
lods
mov
sahf
jl
xchg
sbb
cmp
adc
jle
xlat
mov
out
add
add
jb
mov
xchg
mulb
es
mov
add
mov
add
push
mov
int
cs
cmp
adc
adc
insb
mov
jns
xchg
mov
xor
xor
xlat
pusha
ljmp
outsb
push
push
jbe
sub
into
inc
jp
scas
mov
push
ret
movsb
mov
and
test
int3
mov
inc
sub
pop
xchg
ja
mov
pop
mov
dec
mov
sti
enter
pop
push
mov
inc
outsb
xchg
xor
out
pop
inc
sub
push
ljmp
pusha
adc
mov
inc
or
data16
mov
xor
sub
adc
pop
pop
lds
pop
jle
or
aad
fsubl
je
inc
and
cmp
xchg
jno
call
inc
loope
mov
sbb
and
push
cmp
in
lret
mov
mov
jbe
sar
nop
pcmpgtd
fiaddl
sub
fistpll
mov
or
jo
icebp
fdivl
lods
in
in
mov
sub
mov
and
inc
fldenv
out
adc
out
cld
loopne
jb
ret
mov
xchg
cltd
dec
fucomip
push
aad
and
imul
fs
aad
les
mov
fsubrp
xchg
push
lret
pop
iret
loope
lret
lret
sub
xor
jnp
dec
scas
shlb
cmp
xchg
fwait
test
cmc
inc
mov
mov
xchg
mov
add
sbb
jne
jns
imul
cmpb
fadds
adc
jb
xlat
inc
and
xor
cmp
pop
notb
lahf
rcr
outsl
subb
and
cwtl
sub
sahf
clc
push
and
add
and
insb
xchg
shll
roll
xor
and
shll
mul
or
jg
sub
imul
add
and
insb
div
mov
xchg
ds
shrl
js
or
mov
outsb
add
push
pushf
and
pop
adc
mov
sub
aas
pop
push
out
cltd
mov
insb
scas
cmp
adc
fwait
dec
cmc
mov
es
adc
and
jge
scas
mov
push
xorl
mov
test
mov
cltd
dec
cmp
mov
popf
fidivrs
push
cmpsb
cmp
push
ljmp
shrb
jmp
add
les
iret
imulb
adc
in
cmp
cmp
int3
push
rcrb
jg
mov
sbb
mov
pop
push
test
rolb
out
fisubl
mov
add
stos
insl
xor
enter
pop
mov
in
arpl
push
dec
repnz
inc
jmp
mov
push
mov
jns
test
das
repz
jo
cmp
cld
add
xchg
sbb
and
adc
cmp
pop
adc
dec
jns
xchg
pop
mov
pop
xlat
sub
rclb
gs
imul
aad
repz
out
sub
xor
fcmovnbe
inc
dec
mov
stc
popa
xor
mov
mov
pop
aaa
fimull
jmp
xor
pop
inc
pop
xor
push
pop
mov
into
cmp
mov
icebp
movsb
aas
jb
push
stc
int
fdivs
dec
popa
pop
cmpsb
inc
sub
sahf
jno
div
cmp
iret
pop
add
and
cmp
push
outsb
xchg
mov
inc
iret
mov
ret
mov
test
stos
add
insb
jo
cmp
icebp
cltd
shrl
adc
inc
lods
inc
repnz
fisttps
aam
cld
or
or
mov
cmc
cmp
lahf
jg
pop
cld
or
fidivs
sbb
xor
ret
dec
sub
and
cld
jne
out
mov
int
jp
sub
inc
adc
ret
jnp
inc
outsl
movsl
or
push
cltd
js
push
addr16
sbb
in
push
in
mov
fisubs
dec
rcll
cmc
pop
sar
aas
pop
sub
mov
fbstp
inc
fs
in
sarl
cmp
mov
icebp
mov
std
adc
mov
aam
push
int
int
fld
add
icebp
fiaddl
add
mov
inc
xchg
fsubrl
jmp
cmc
mov
js
push
jmp
mov
cmp
cmpb
andl
sbb
addr16
lds
add
leave
testl
scas
out
or
outsb
cmpsb
leave
dec
xlat
xchg
pop
ja
add
jmp
or
pop
sahf
pop
add
scas
jle
outsl
jne
mov
repz
shrl
jg
cwtl
cltd
inc
or
cld
mov
fdivrp
inc
pop
xor
jb
mov
and
push
adc
addl
fldl
dec
test
mov
in
in
cmp
dec
mov
mov
cmpsb
adc
incl
jl
ljmp
fs
pop
jae
inc
add
xor
xchg
sbb
pop
add
sbb
imul
push
pushl
jle
fidivl
ret
jp
inc
xor
ret
ss
fadd
push
push
jbe
test
push
pop
jb
das
inc
fnsave
push
fistpl
sub
sti
mov
push
lcall
adc
sub
loope
adc
ret
rcl
add
lock
fidivs
sub
jne
stos
test
lahf
xchg
lahf
test
divl
dec
inc
aam
push
inc
ficomps
cmp
cmp
out
bound
xchg
gs
push
pushf
mov
cwtl
aas
inc
push
arpl
negl
add
movsl
adc
in
adc
ljmp
clc
lds
inc
pop
sbb
and
ja
imul
push
adc
fistpll
sub
icebp
fmulp
js
call
pusha
ret
icebp
fcompl
dec
dec
je
ja
js
in
jo
popa
imul
jbe
add
jbe
cmpsb
push
clc
add
mov
in
push
mov
lods
push
cmp
inc
dec
pop
add
inc
pushf
inc
jecxz
js
xchg
in
mov
push
mov
ror
pop
pop
inc
sub
cmc
fnstsw
mov
adc
jle
pop
xor
jmp
lcall
int
inc
fcom
fmul
and
dec
cmpsb
and
sbb
outsb
outsl
adc
lahf
push
cmp
pop
leave
cmpsl
maskmovq
testl
or
mov
iret
sbb
ja
jbe
xlat
jmp
popf
adc
not
pop
sbb
push
sarb
stos
cmp
ja
add
xorl
out
movsl
test
dec
pop
push
sub
cmp
sbb
jp
stos
add
outsl
faddp
or
shll
fsubl
pop
in
dec
aam
int3
std
addr16
lock
xchg
clc
dec
pop
fwait
sub
pop
out
push
pop
jge
fucom
movsb
xlat
jl
out
add
bound
dec
pop
cmpsb
scas
pushf
sbb
cli
in
mov
mov
fs
flds
push
mov
cmpsb
sahf
xorb
mov
fwait
ret
xor
repnz
test
out
hlt
arpl
jae
jne
inc
inc
mov
add
pop
cmc
push
ret
jo
xchg
out
into
xchg
shrl
dec
aad
pop
jns
mov
lods
repz
out
sbb
inc
imul
mov
mov
pop
push
lret
fwait
add
jno
inc
dec
mov
movsl
ret
scas
arpl
fdivr
je
cmpsb
and
sbb
movsb
xchg
in
sub
popf
shlb
mov
fwait
mov
pop
mov
and
mov
cmp
sti
add
filds
xchg
stos
push
fwait
mov
bound
stc
testl
addr16
sub
push
mov
jmp
push
out
jmp
orb
in
insl
xchg
cli
out
jmp
cmp
jmp
arpl
push
clc
fldt
mov
jnp
lahf
fstps
xorl
pop
out
test
inc
push
rcll
fs
push
and
dec
xor
es
inc
gs
or
xchg
rcll
aam
ret
jecxz
outsl
jne
pop
cmp
insb
jp
pushf
mov
or
jge
es
xchg
sbb
dec
mov
jg
cmovs
into
sbb
sbb
dec
xor
jl
push
andb
jge
jae
out
jo
cmp
movsl
aam
mov
into
xor
adc
jb
aas
push
or
mov
jo
test
in
dec
gs
aas
ljmp
pop
xchg
fidivl
movsl
xor
mov
and
rorb
push
xor
cmp
imul
or
arpl
sbb
jbe
andl
out
cmp
xchg
ds
int3
scas
xchg
mov
push
into
cmc
cwtl
out
and
mov
mov
add
jne
push
fisubs
push
ffree
mov
test
jecxz
shl
or
lret
jno
jo
shlb
test
in
nop
outsl
icebp
fwait
sbb
or
add
ret
rolb
iret
dec
or
add
inc
in
lods
fwait
jno
cwtl
add
test
sub
xor
mov
and
jp
fldt
cmpl
xchg
fstpt
adc
jae
out
pop
xchg
gs
xchg
stos
into
movl
lahf
push
stos
daa
into
test
pop
jne
mov
aad
cmc
sbb
inc
or
stc
imul
aad
cmpsb
jmp
mov
and
fistl
jno
and
cwtl
add
jmp
xorl
cmpsb
lods
aas
mov
sub
jmp
mov
cwtl
xor
pop
notl
in
jmp
lds
es
adc
ss
xlat
lret
mov
pop
lods
sub
xchg
mov
or
pop
mov
iret
xchg
sahf
test
xchg
push
comiss
test
mov
pop
inc
paddusw
mov
sub
cmp
aad
pop
inc
pandn
mov
lock
add
mov
xchg
mov
lods
insb
popf
cs
mov
aad
cmc
jge
call
jp
sub
sbb
aaa
addb
loop
scas
mov
filds
loope
mov
imul
and
xor
mov
mov
push
pop
imul
adc
dec
js
push
lods
push
inc
push
cwtl
or
push
test
daa
mov
daa
sbb
mov
aaa
loop
lods
ret
push
mov
bound
sub
mov
popl
fst
jle
push
out
stc
sbb
push
in
pop
mov
stos
data16
jg
push
cmp
mov
or
imul
sbb
frndint
outsb
pop
ja
jp
out
add
rcrb
jge
fbld
fldcw
push
ficoms
inc
icebp
and
cld
or
jp
add
leave
test
sub
add
sti
jne
adcb
mov
pop
rclb
add
fwait
sahf
jae
js
loopne
lahf
pop
es
adc
push
test
iret
out
aad
push
arpl
into
shrb
fsubr
mov
mov
sub
test
inc
jno
jg
and
in
nop
movsl
push
adc
bound
loope
ret
jecxz
pop
in
lods
mov
es
popf
jle
jecxz
mov
push
mov
mov
aas
addr16
ret
pop
fcom
xor
sub
xor
sbb
add
pop
xorb
add
imul
push
mov
mov
lds
insb
imul
es
arpl
xor
mov
fidivrl
pop
pop
loop
sub
add
bound
mov
mov
push
scas
repnz
sbb
inc
addr16
je
les
stos
pop
addr16
pop
mov
mov
dec
dec
and
push
pushf
aas
mov
out
inc
jp
call
sbb
pop
sub
aas
fldl2e
mov
dec
aam
bound
pop
ljmp
ret
xor
loop
or
push
pop
inc
lcall
in
cmc
ss
test
in
adc
jns
enter
mov
rclb
xchg
cli
and
xchg
push
or
bound
mov
jmp
push
mov
arpl
pop
in
adc
fisttpl
pop
push
in
mov
roll
out
fwait
out
outsb
test
cmp
jb
jg
call
jne
dec
sub
sub
jo
xor
adc
fnsave
add
pop
out
sub
dec
pop
popa
cmc
sbb
adc
jne
roll
mov
dec
mov
xor
mov
adc
mov
add
cmp
xchg
das
lods
fs
add
and
ret
les
xor
sarb
je
fcmovnbe
clc
sbb
jmp
les
pusha
inc
fdivrp
inc
dec
in
cli
sbb
cli
push
sbb
and
mov
mov
pop
lods
daa
pop
les
add
jg
xchg
mov
mov
dec
call
ret
xor
jnp
sbb
sub
icebp
adc
mov
loopne
imul
sub
pop
and
inc
adc
leave
pushf
and
mov
lcall
xor
mov
lock
fists
dec
jno
inc
mov
push
in
cmpsl
xchg
and
pop
jnp
cmp
inc
adc
daa
call
push
pop
xor
iret
lcall
into
nop
ljmp
sub
aad
bound
mov
loopne
push
xor
popa
pop
adc
lock
bound
inc
mov
pop
pop
test
mov
mov
loope
ret
xchg
jae
mov
or
xor
jle
rol
into
mov
and
out
lret
cwtl
jb
or
sub
test
mov
adcb
cmp
sbb
and
divl
movsl
inc
inc
inc
sbbl
loopne
aam
pushf
push
test
data16
out
insb
outsl
hlt
inc
das
jb
mov
out
aam
jmp
sbb
out
cmp
lods
psrld
dec
pop
and
push
mov
push
jge
dec
lock
xchg
popf
mov
add
aam
sarb
movsb
mov
adc
test
imul
dec
leave
movsb
mov
push
dec
mov
jecxz
jp
push
nop
adc
icebp
xor
jae
jb
frstor
push
mov
xor
push
cwtl
add
loope
flds
sarb
xor
or
or
fcoml
mov
in
sbb
shr
iret
mov
mov
lret
or
ss
pushf
mov
adcb
adc
in
cmp
int
xchg
js
mov
xor
repz
leave
xchg
lret
sub
push
pop
sub
and
sarl
add
repz
stc
in
or
fstps
loop
dec
pop
xlat
dec
or
stos
rcrl
xchg
je
adc
pop
and
mov
pusha
shlb
fbld
jge
xor
test
push
add
inc
sbb
lahf
testb
dec
fidivl
xchg
clc
ret
adc
jne
ljmp
jl
in
push
ret
push
adc
cli
dec
jno
inc
jo
fnstenv
mov
lods
outsb
pushf
and
iret
es
out
pusha
xor
mov
mov
mov
cmp
inc
sub
faddp
add
ret
in
ja
jbe
ficomps
adc
inc
push
into
es
cs
adc
rcl
nopl
cld
shrl
pop
jnp
std
fsubl
pusha
hlt
jle
cmp
mov
pop
xchg
lods
jb
xchg
andl
test
mov
sub
adc
popa
scas
xlat
or
or
lock
fstpl
adc
imul
lock
call
xchg
imul
mov
rcrb
lods
or
inc
and
shl
test
jmp
xor
repz
xchg
pop
fwait
and
clc
in
fidivrs
rcr
push
pop
scas
sahf
cwtl
test
stos
or
out
ss
mov
repnz
inc
ljmp
enter
dec
repnz
ds
sub
sahf
insb
addl
adc
jl
jo
mov
dec
outsb
mov
kmovb
cmpsb
imul
adc
scas
lea
rorl
xchg
test
repz
pushf
popf
xor
mov
sbb
addr16
add
adc
inc
mov
inc
mov
stos
cs
push
push
or
cld
add
js
push
sbb
xchg
clc
add
and
jge
aad
gs
xchg
adc
pop
iret
pushf
je
xchg
int
hlt
imul
cld
scas
dec
mov
mov
std
in
aam
dec
add
ja
or
psubw
loopne
dec
cmp
shlb
sbb
sbb
and
dec
stos
mov
inc
shll
inc
mov
std
dec
sti
rcll
lret
inc
inc
test
fwait
and
xor
dec
push
mov
fs
test
xchg
mov
out
scas
int
rclb
iret
sbb
sbbl
mov
mov
ret
test
and
test
push
lds
scas
push
mov
mov
xor
int3
jl
stos
inc
scas
das
lds
mov
pop
mov
rorb
adc
ret
jno
jns
adc
xor
xor
xchg
mov
push
cmc
dec
out
lods
repz
addb
pop
daa
nop
rorl
ljmp
out
rcll
adc
fnstsw
inc
xor
or
inc
push
xor
bound
xchg
mov
clc
jg
lods
inc
in
scas
push
xchg
xchg
jmp
add
insb
xor
ret
cmpsb
ds
and
test
dec
mov
ja
push
jecxz
xor
mov
or
jmp
jmp
mov
stos
int3
push
and
inc
int
xor
daa
pop
sbb
push
adc
lcall
adc
stos
jle
sub
into
adcl
xchg
cmp
outsl
mov
aas
sub
jmp
shlb
dec
insb
xor
nop
mov
movsb
ja
cmpsl
arpl
lock
add
mov
add
aam
and
imul
loopne
ficompl
jae
xchg
cmp
adc
out
scas
outsl
xchg
jns
mov
divb
es
cmp
not
pop
xchg
fbstp
movsl
cli
leave
push
repnz
mov
outsl
add
mov
adc
inc
cmpsl
pop
fmuls
jbe
insb
pop
cltd
xor
addb
mov
mov
and
cwtl
mov
or
cmp
pmovmskb
test
adc
xchg
imul
dec
movsl
test
or
les
out
xor
mov
xchg
sub
pop
mov
fiaddl
mov
mov
cmpsl
in
push
jg
jo
pushf
out
data16
pop
xchg
in
sbb
lret
mov
jnp
mov
dec
out
cmpsl
cmc
sub
test
xor
or
sarb
je
and
mov
mov
mov
loopne
paddb
or
mov
in
fldt
adc
int
aad
ja
inc
shrb
repz
dec
push
jecxz,pn
movl
iret
imul
outsb
add
daa
sbb
aas
das
cmpsb
sti
adc
bound
push
pop
jp
dec
mov
mov
pop
movl
imul
lret
xor
hlt
xchg
sub
pop
lcall
sub
sahf
inc
scas
jnp
adc
es
stos
inc
cmp
push
dec
sub
imul
dec
sar
mov
inc
dec
loop
pop
pop
dec
xchg
pop
in
dec
data16
jb
cmp
sub
in
fucomip
jnp
cmp
push
scas
hlt
jne
cltd
faddl
sub
lock
cmp
mov
and
subl
movb
loopne
outsl
mov
mov
cmpb
ret
fbstp
adc
test
and
mov
mov
push
popf
das
push
inc
mov
sti
ljmp
pop
xor
pop
mov
jmp
cmp
outsb
popa
out
pop
cld
repz
mov
mov
inc
movsl
mov
outsb
sbb
enter
leave
and
js
mov
pop
xor
popf
push
test
and
jno
adc
fidivrs
pop
jg
pop
in
ljmp
fs
dec
shlb
inc
dec
in
popa
sbb
sti
and
hlt
addr16
adc
lcall
mov
testl
stos
test
add
insl
icebp
notl
jmp
mov
mov
repz
and
cmp
mov
xor
stc
jno
jmp
fimuls
jno
cltd
mov
dec
pop
adc
adc
xlat
stos
out
lret
or
add
ss
add
loopne
adc
test
adc
xlat
sub
dec
pushf
movsb
dec
pop
pop
jp
imul
adc
add
int3
fsts
adc
jae
cmpsl
pop
iret
adc
push
jne
loopne
adc
or
mov
into
cs
adc
xor
xor
lret
sbb
adc
xchg
push
ja
mov
xor
notb
mov
or
sbb
popa
mov
pop
cmpb
push
fstps
jp
mov
cmp
cmp
and
gs
or
pop
pop
or
cs
mov
sbb
repz
inc
xadd
mov
inc
xor
xchg
jbe
pop
ljmp
std
jbe
idivl
sbb
jns
ja
fldenv
inc
sti
test
pop
sub
outsb
push
cmp
movsb
mov
lcall
pop
stos
out
push
imul
loopne
cmp
cmp
cmp
and
inc
icebp
mov
cmp
in
jle
mov
dec
pop
mov
shll
adc
fwait
or
push
xchg
jo
sbb
in
out
loopne
jl
cmpsl
mov
faddl
ja
xchg
lcall
push
dec
out
xor
clc
xchg
add
mov
cmp
ret
dec
mov
stc
fs
icebp
fldl
xor
rcrb
dec
lock
adc
pop
xchg
ds
and
add
test
mov
data16
and
and
add
jbe
sub
icebp
imul
lock
mov
and
lods
js
mov
pop
pop
ds
movsb
jno
shll
lds
pusha
jg
adc
out
cltd
in
xor
jg
popf
decl
sub
ret
aaa
cmc
cmp
pop
js
push
lea
mov
cltd
scas
fidivs
in
insl
adc
aas
mov
cmpsl
and
xchg
lea
inc
or
adc
pop
sub
sahf
fidivl
pop
lfs
and
cmp
mov
pushf
movsb
jb
out
pop
ljmp
push
jb
addr16
sbb
dec
lahf
stos
in
mov
outsb
cmpb
cmpsl
dec
adc
shlb
popa
pop
xor
ss
aam
dec
cs
icebp
enter
pop
jnp
mov
mov
imul
xchg
out
aas
jle
adc
fldt
adc
mov
fcmovnbe
inc
fimuls
sbb
sbb
fwait
xor
mov
sub
xor
push
inc
rcll
jnp
clc
cmp
cmpsb
lea
adc
loopne
lods
ret
pop
cmp
lret
shlb
mov
fdiv
adc
mov
enter
movsl
jge
gs
inc
leave
lcall
adc
popf
insb
out
out
push
mov
pushf
adc
testb
mov
mov
dec
mov
mov
or
in
push
xchg
ss
icebp
je
lcall
js
mov
imul
call
cltd
stos
aas
sbb
jbe
test
jne
push
cmpsb
push
icebp
sub
punpckldq
or
mov
pop
add
push
test
and
out
xchg
push
cltd
scas
cmc
cwtl
jne
addr16
mov
jne
inc
mov
push
test
scas
jge
fmul
push
sub
push
push
cmp
push
ret
mov
jge
test
sbb
xchg
mov
sahf
popf
arpl
cmp
dec
roll
sbb
sub
xor
sbb
jg
pop
pop
push
add
popa
xor
pop
xor
pop
testb
jecxz
inc
xor
dec
push
sbb
mov
lea
data16
xchg
sbb
dec
out
pop
aam
push
sub
dec
movsb
sbb
and
bound
jns
xchg
pop
lahf
insb
std
call
mov
aaa
loope
test
cmpsb
xchg
mov
jge
mov
pop
mov
lds
rol
mov
popa
sbb
iret
jl
out
rcll
xlat
or
xchg
lahf
xor
pusha
in
xor
mov
push
mov
mov
popf
jns
adc
mov
insb
xor
sbb
pop
sti
xchg
out
adc
mov
jbe
insb
aaa
incl
clc
jl
mov
add
xor
repz
jno
pop
dec
stc
mov
int
lds
cld
rcr
push
pop
push
sub
out
sahf
mov
adc
inc
mov
in
mov
repz
ret
in
cmp
ja
in
jo
scas
sbb
cmpsl
movsb
leave
pop
and
jg
mov
cmc
hlt
hlt
pop
pop
cmpsb
outsl
mov
mov
loopne
loop
dec
out
orb
test
or
loop
loope
dec
cmp
mov
pop
hlt
xchg
mov
dec
jb
xor
call
push
lds
adc
and
rcl
cmpsb
aad
jmp
sbb
mov
aam
sbbl
shll
cs
movsl
jge
jnp
out
insb
mov
xchg
aas
or
adc
insb
pop
cld
push
or
mov
ds
cmpsb
je
dec
ss
out
fisttps
aas
outsb
adc
add
aam
hlt
mov
and
pushf
fisubrl
lret
cmpsl
mov
sub
sbb
adc
loop
out
push
add
popa
sub
xchg
test
push
push
out
lods
stos
movsb
mov
stos
je
daa
jae
mov
jl
push
sub
xchg
imul
stos
movsl
and
or
stos
xor
shrb
inc
popf
mov
xor
jo
nop
fldcw
pop
and
and
xor
pop
mov
push
out
pop
and
and
mov
sub
jle
insl
enter
mov
dec
xor
js
jbe
mov
fldcw
mov
rcrl
mov
divl
clc
pushf
sub
push
sub
iret
push
adc
push
stos
xchg
mov
xchg
mov
pop
call
pop
jge
adc
insb
push
adc
lea
pop
push
and
mov
and
fldenv
dec
imul
lret
mov
cmp
jae
repz
pop
cmp
mov
test
scas
cmpsl
sahf
and
and
sbb
out
sahf
pop
enter
aad
les
daa
mov
inc
xchg
pop
movsl
mov
xchg
jmp
or
xor
xlat
dec
inc
sahf
sbb
lock
fstp
adc
int3
repnz
aaa
xor
daa
pop
mov
push
inc
jmp
in
inc
jns
and
repnz
into
add
push
add
loopne
insl
lret
rorl
adcb
mov
inc
sahf
adc
ss
or
fwait
adc
shrl
cmpsb
lret
sub
enter
int3
insl
in
test
mov
outsl
jnp
and
jmp
cmp
into
dec
push
and
adc
add
add
xchg
jle
cld
lea
adc
pop
arpl
ret
sbb
mov
rclb
xchg
xor
xchg
out
cltd
dec
push
inc
mov
sbb
les
lods
mov
out
and
mov
sbb
hlt
mov
shrb
mov
lss
xor
push
mov
dec
mov
scas
movsb
jne
xchg
xchg
scas
xchg
add
mov
inc
xchg
xor
inc
aam
sub
in
outsb
ljmp
fildl
sub
push
test
jecxz
add
aas
push
mov
movsb
lahf
shlb
cltd
jle
mulb
ret
js
out
and
and
add
jecxz
inc
sbb
add
sub
imul
dec
jo
inc
or
inc
adc
mov
insl
sbb
xchg
xchg
int3
lods
sub
mulb
jb
sbb
dec
mov
testl
imul
cwtl
and
cmp
dec
mov
push
xor
lods
stos
mov
gs
nop
push
ja
push
cmp
inc
jns
mov
push
shl
and
jmp
push
add
xchg
sarb
push
cltd
mov
sbb
add
add
and
xchg
rclb
lret
sbb
rcll
mov
mov
xor
roll
dec
rcr
sbb
inc
inc
mov
int3
imul
or
in
icebp
xor
xchg
xchg
adc
mov
in
push
dec
mov
sbb
repz
out
test
inc
orb
loope
cs
cld
xchg
rcrb
mov
je
cwtl
adc
stos
push
dec
xchg
fsubp
xor
push
sbb
sti
inc
sahf
xor
xlat
pop
cmc
test
and
sub
testl
jne
xchg
stc
mov
roll
es
mov
pop
jne
sbb
dec
rclb
loopne
fcomp
lahf
gs
or
mov
outsb
xor
ds
inc
nop
nop
xchg
mov
stos
loopne
incl
je
mov
mov
or
fidivl
mov
lds
push
jno
test
pop
xchg
lea
sbb
dec
pop
es
xchg
cmp
jmp
popf
add
add
xor
je
lret
adc
adc
lret
mov
jmp
fnstcw
or
or
or
pop
cs
ret
sbb
movsb
mov
popf
push
leave
stos
in
push
dec
gs
push
fnsave
fmull
jle
imul
fstpl
sub
out
movsl
test
push
mov
lahf
adcl
add
aaa
or
rolb
cltd
adc
xchg
sbb
out
xchg
xchg
xor
lods
mov
push
xorl
fdivrl
mov
cmpsb
adc
or
jne
dec
in
and
les
nop
push
out
shlb
stos
inc
in
lock
fistl
mov
push
jo
sbb
or
or
push
xchg
jp
mov
jno
mov
test
and
push
dec
outsb
and
in
outsl
add
dec
pop
add
cld
and
jns
pop
mov
fmul
aam
test
and
call
pop
mov
cmp
push
mov
cwtl
ficomps
mov
sarb
lds
or
ret
test
pop
mov
test
add
sub
xchg
inc
inc
cmp
pop
sbbl
fisubs
jecxz
push
and
push
out
fldt
or
std
pop
test
cmpsb
jmp
mov
call
rolb
fcompl
jl
std
mov
dec
sbb
add
lods
mov
fldt
rcrb
mov
loop
mov
mov
pop
dec
in
mov
rcr
sbb
mov
es
movsb
ror
rol
inc
loopne
and
imul
inc
cmp
push
and
xor
mov
pop
mov
xchg
scas
stc
pop
fisubrl
push
add
jmp
jle
xchg
les
xlat
mov
jnp
push
pop
xor
mov
push
test
sub
es
jo
bound
dec
mov
ds
addr16
and
ja
hlt
push
popa
adc
sub
cli
push
or
sbb
push
mov
sbb
and
pop
rcrb
popa
push
repz
push
das
cmp
jns
std
add
ret
addr16
inc
xor
imul
insb
gs
jns
pop
xchg
packsswb
or
popf
sub
stc
sahf
fdivl
stos
decb
popa
imul
xchg
lea
out
cmc
cltd
mov
daa
jo
sub
xor
pushf
cs
mov
xor
and
push
mov
push
xchg
mov
leave
icebp
sub
cmpsb
orl
daa
movsl
dec
aam
dec
or
imul
aad
aam
cmp
fwait
mov
mov
shll
mov
out
cli
sub
fs
push
movsb
xchg
ja
sti
pop
addb
jge
cltd
adc
cmp
movsb
addr16
shrl
lret
addr16
and
adc
fmull
or
fiaddl
enter
add
inc
jecxz
imul
pop
jmp
rcrb
pop
or
cld
mov
sbb
push
cmovle
and
inc
add
stos
test
jle
sbb
mov
mov
mov
pop
movsl
fadd
xchg
scas
out
and
das
loop
insb
pop
xchg
fcmovnu
push
add
fsubr
lock
jae
pusha
add
mov
or
lds
mov
jg
cmpl
mov
xor
mov
sub
lahf
adc
add
cmp
mov
sub
inc
xlat
pushf
add
shrl
xlat
aaa
sbb
cmp
pop
inc
arpl
add
ficompl
jl
sub
lahf
std
jp
dec
loop
scas
dec
and
loope,pt
jo
sbb
fimuls
nop
xor
test
and
cltd
pop
std
scas
xchg
mov
in
ss
xor
sub
adc
test
lea
subb
xor
xchg
lea
ret
cmp
int3
popf
lret
jmp
int3
stos
lahf
orb
cmp
sbb
in
test
pop
ljmp
adc
push
mov
addr16
or
sbb
xor
dec
fimull
cmp
pushf
add
and
lret
icebp
mov
mov
pusha
inc
and
mov
xor
mov
lcall
int3
jae
andb
push
fmull
and
or
imul
data16
out
mov
stos
cwtl
insl
stos
ffreep
add
jp
xor
cmp
inc
pop
loopne
push
movsl
xor
out
out
or
leave
sub
fildl
add
sbb
addr16
repz
fsubrl
mov
lds
jae
xchg
and
mov
shl
nop
add
push
imull
cmp
aas
mov
adcb
and
aad
mov
int3
ss
movsl
add
loopne
cmp
imul
fcoml
rcll
cmp
sbb
jge
movsl
cmpsb
mov
movsl
mov
xor
xor
jp
and
dec
stc
fdivl
adc
mov
test
flds
push
das
push
sbb
adc
daa
mov
lret
in
jns
stos
into
push
jmp
adc
popa
jg
sbb
jb
inc
int3
and
mov
push
cs
mov
and
bound
scas
and
into
mov
dec
sub
mov
aad
sub
jnp
sti
cmpsb
lea
mov
add
xchg
jmp
andb
or
xchg
or
xchg
or
lcall
jo
or
lahf
out
and
fs
das
lcall
pop
add
test
mov
push
adc
rcrl
fwait
pop
xchg
movsb
enter
fstpl
adc
cmp
or
push
xchg
inc
enter
adc
xchg
lcall
add
es
cli
call
and
movsl
ja
inc
cltd
push
fnsave
push
push
sub
ror
andb
insl
jns
sub
mov
inc
pop
stc
mov
fs
mov
arpl
shll
cmp
dec
ljmp
dec
subb
repnz
iret
stc
fdivrl
and
mov
insl
mulb
rcrb
ret
data16
dec
and
mov
insl
clc
mov
pop
pop
xchg
into
add
into
gs
mov
add
sub
xchg
mov
sbbl
scas
sbb
pusha
imul
cmpsl
jp
xor
pop
rorb
ror
lcall
out
push
sbb
imul
push
and
pop
cli
leave
cld
vpunpckldq
push
xchg
les
or
push
dec
push
imul
repz
jge
xor
test
jae
jb
jnp
loopne
andb
leave
push
cmp
cmpsb
push
xchg
and
out
mov
mov
xchg
mov
ds
cli
scas
scas
imul
push
xor
mov
inc
mov
int
pop
mov
pop
xchg
adc
push
mov
push
clc
lret
fiadds
lret
ficompl
addl
outsb
sbb
test
mov
js
sub
aaa
jmp
repnz
cs
fcoms
je
xchg
lock
fwait
cmp
mov
pop
sbb
xchg
jns
jg
pop
push
cmp
xchg
mov
or
aaa
add
mov
cmp
push
pop
into
adc
outsb
subb
pop
sub
cmp
mov
or
sub
xor
int3
inc
jno
clc
mov
sahf
scas
inc
xor
dec
imul
sti
sub
xchg
cmp
mov
cmpsb
ja
mov
mov
out
adc
mov
jmp
out
mov
addr16
adc
adc
xchg
or
mov
jbe
inc
test
mov
or
pop
popa
xchg
cmp
mov
adc
ljmp
aas
enter
jecxz
mov
xchg
mov
and
xor
test
clc
jg
je
sbb
test
hlt
bound
subl
dec
xchg
xor
jnp
inc
iret
sti
mov
out
mov
mov
imulb
addr16
sbb
bound
pusha
xchg
jb
cmp
add
stos
jns
mov
mov
fisubs
in
mov
ret
inc
mov
jns
inc
sar
mov
dec
sub
popa
cmp
dec
add
leave
jge
icebp
rcl
pop
xor
das
repnz
add
sbb
sbb
or
xchg
divl
mov
mov
bound
rolb
aaa
pusha
inc
and
or
into
push
inc
xchg
sub
xchg
mov
jns
imul
mov
and
test
pop
push
loope
imul
in
fisubl
cmpsl
aas
nop
lock
mov
out
cld
cmp
movsb
sub
add
mov
hlt
adc
nop
cmpsb
mov
fdivrp
insl
mov
jl
out
ret
cli
imul
push
je
pop
mov
mov
gs
cmp
jne
fildll
pop
lcall
mov
mov
popf
push
gs
addr16
mov
jge
loope
dec
jge
rcl
fistl
stos
andl
fildl
and
xor
cmp
jge
frstor
loop
mov
adc
repnz
imul
pop
inc
sub
loop
xchg
enter
pop
or
mov
inc
or
jmp
cld
mov
push
pop
mov
mov
fldenv
pop
stc
dec
pop
psrad
pop
push
sahf
rcrl
sti
jg
sbb
dec
test
je
int3
adc
cmp
in
mov
in
int
jecxz
and
scas
xchg
cmp
ds
lret
push
fsubrp
sbb
sub
ret
sub
fcoms
jns
mov
loope
out
adc
scas
and
mov
push
rorb
aaa
inc
xchg
sub
or
or
add
cmp
mov
and
kandw
cmp
xchg
pop
mov
std
add
xor
int3
sub
inc
testl
daa
outsb
mov
incl
addl
shl
out
pop
add
mull
mov
stos
xor
cli
jae
inc
adc
and
dec
int
popa
addr16
sarl
imul
cwtl
loop
test
ljmp
negl
pop
mov
rorb
xor
mov
cmpsl
sub
mov
dec
std
push
add
push
maxps
mov
lcall
loope
dec
test
jne
or
push
add
jb
cmp
clts
test
jbe
dec
bound
jmp
pop
arpl
dec
int3
push
xor
jns
dec
fdivs
repz
inc
sub
clc
fmulp
xlat
aam
nop/reserved
sbb
dec
fcomi
mov
cwtl
loope
movsl
jbe
and
and
lea
xor
adc
lds
xchg
dec
pop
mov
popf
sbb
xchg
outsl
imul
inc
push
daa
or
push
xchg
push
cmp
fisttps
mov
loopne
inc
outsb
mov
loope
inc
inc
test
mov
xlat
in
sub
dec
mul
dec
cld
sub
fwait
and
pop
es
out
inc
stos
inc
mov
or
decl
fldcw
add
cli
adc
pop
ss
push
test
lock
xor
les
lods
outsl
sbb
mov
jge
pushf
cwtl
jbe
je
inc
loop
jge
insl
mov
mov
cwtl
mov
jmp
xlat
push
mov
xchg
cld
xchg
sub
loope
mov
mov
cmpsb
mov
xor
cmp
pop
mov
clc
xor
fsubs
mov
adc
arpl
pop
es
or
fcmovnb
rclb
or
push
push
pop
xor
cmp
sbb
inc
rcll
mov
cwtl
adc
rcll
test
pop
rcrl
or
cmp
lea
shrl
push
dec
leave
push
in
into
jge
mov
lods
mov
iret
scas
mov
mov
xchg
xchg
inc
inc
fnstsw
imul
cmovne
addr16
test
ret
xchg
sub
scas
mov
push
and
jno
inc
daa
xor
cwtl
jae
xchg
xor
cmpsl
sub
xchg
xchg
ss
mov
inc
cmpsb
scas
push
and
cmc
leave
hlt
ret
add
mov
xor
lds
aas
dec
fsts
xchg
ds
jecxz
fstpl
ret
sarl
xchg
push
adcl
cmp
scas
aas
sbb
mov
cld
and
and
ljmp
cmp
das
pop
push
lods
outsl
and
mov
or
pop
sub
movsl
and
js
cltd
repz
jmp
xor
fsubs
les
xlat
int3
inc
or
dec
iret
xor
mov
clc
lods
xor
xor
out
out
ds
xor
cld
mov
lahf
push
xchg
add
cld
sbb
inc
inc
decb
ljmp
inc
sub
mov
push
in
mov
mov
lock
popa
pop
fcmovb
incl
sub
inc
add
xor
nop
int
dec
and
bound
sbb
or
adc
jecxz
inc
in
mov
stos
shll
cmpsb
test
bound
sbb
gs
push
inc
jmp
mov
lret
lods
add
xchg
nop
movsb
fisubl
and
jle
sbb
filds
push
fsubrl
pop
sub
insl
dec
xchg
pop
cld
jne
popa
push
pop
mov
pusha
and
shr
xchg
movsb
xchg
cmpsb
inc
std
mul
pusha
std
xchg
lcall
xorb
in
lret
arpl
push
inc
mov
mov
push
je
or
push
addr16
idivb
push
stc
cltd
lahf
aaa
or
mov
cmp
ds
in
and
jg
xlat
push
cmp
std
mov
cmp
cmc
lods
imul
mov
jge
add
adcb
ds
out
jmp
ror
or
push
pop
iret
out
cwtl
popa
xor
and
dec
push
loope
cmpsb
inc
frstor
push
dec
rep
clc
jae
mov
ja
push
push
sar
or
push
pop
aam
xorl
jle
jo
add
es
pop
pop
mov
xchg
fsts
es
mov
insb
out
mov
mov
add
sahf
inc
sarl
cmpl
aas
addr16
adc
mov
shlb
sub
mov
aas
pop
sar
or
fndisi(8087
loop
test
xchg
stos
lods
jb
dec
jb
xor
popa
test
shll
pop
mov
std
test
cmp
mov
sub
inc
loope
adc
push
stc
int
ljmp
test
jp
sbb
lidtl
and
inc
and
ret
fcmovnu
mul
lret
xlat
jbe
frstor
jle
fwait
ljmp
call
inc
pop
and
into
aaa
in
jg
aas
pop
lods
xchg
popf
jne
cmpb
mov
sti
and
mulb
pusha
sti
sbb
cmpsb
roll
cmp
dec
leave
aaa
push
mov
dec
push
popf
xlat
imul
aad
lds
lds
xorb
xlat
mov
and
pusha
std
int
cmp
pop
add
xlat
outsb
push
pop
leave
mov
mov
lods
pop
fsts
mov
call
decl
aad
sub
movsl
dec
pop
jns
sbb
jns
loopw
aaa
and
aaa
fsubrp
fsub
mull
dec
and
jle
dec
and
movsb
xchg
adc
out
sub
pop
xchg
add
jge
or
inc
cmpsb
out
adc
xchg
test
loop
mov
filds
xlat
cli
pop
stc
mov
retw
loop
mov
les
stos
jg
jno
push
xchg
ficomps
test
dec
bound
pushf
divb
loop
pop
dec
push
mov
dec
dec
ret
sbbb
test
fildl
cmp
in
xor
int3
mov
fwait
jge
pop
mov
cmp
imul
addr16
aam
push
add
ja
gs
iret
pop
xchg
loope
dec
jne
scas
dec
xchg
leave
pop
ret
lods
ja
or
divl
jbe
loope
cmp
in
imul
pushf
bound
adc
in
adc
add
xchg
nop
and
pop
or
pop
jo
std
sub
mov
xchg
ljmp
rclb
mov
mov
xchg
mov
push
enter
mov
lret
jle
and
ds
or
loope
fwait
lds
mov
clc
jne
xchg
jp
imul
mov
and
jmp
pop
and
in
pusha
repz
out
mov
xchg
test
stos
or
mov
cmp
out
outsl
sti
es
or
scas
div
data16
jp
push
unpckhps
cmp
aaa
jge
fsts
adc
cld
xchg
stc
sub
xchg
add
test
xlat
pop
insb
pop
lret
das
cltd
lret
sub
xchg
xchg
inc
push
lcall
sub
sub
pop
cli
adc
pop
mov
add
mov
pop
inc
push
mov
xchg
aas
ljmp
stos
pop
imul
les
scas
mov
mov
in
push
insb
pop
mov
push
movsb
cmc
ja
cwtl
push
xor
popf
inc
inc
xchg
in
popl
mov
test
cs
mov
std
rcr
imul
or
or
mov
and
sbb
hlt
fisubrl
lret
nop
jno
mov
inc
jecxz
xor
mov
or
icebp
movsb
jnp
rcll
imul
cld
add
cmc
aaa
push
jo
pop
mov
mov
jle
repnz
fcomps
sub
lret
cmp
aas
push
icebp
addr16
cmpsb
push
cmc
cs
dec
mov
loop
dec
repnz
or
popf
or
inc
ret
jg
mov
pop
fwait
das
loope
xor
imul
stc
xor
repnz
xchg
xor
add
xchg
nop
mov
mov
or
jbe
hlt
lods
mov
push
aad
or
mov
and
cmpsb
mov
ljmp
out
imul
stos
lret
or
mov
cmc
mov
add
pop
push
nop
ret
and
out
sar
xlat
fstl
adc
mov
pop
test
inc
das
xchg
cmc
sub
addr16
add
sbb
pop
dec
adc
in
and
nop
or
fucomp
repz
shlb
addr16
push
pop
adc
ljmp
mov
leave
push
jb
or
mov
clc
push
je
mov
inc
pop
scas
mov
in
sub
sarb
mov
and
mov
add
rolb
sbb
pop
loop
fsubl
mov
push
aad
movsl
test
cwtl
dec
iret
xor
add
pusha
enter
lods
lea
and
cld
xchg
nop
push
fstpl
outsl
xchg
insb
dec
iret
cld
loopne
pop
hlt
mov
pop
xchg
ds
movsb
push
lcall
scas
jecxz
adc
mov
pop
jecxz
test
aas
xchg
sti
daa
je
pop
mov
scas
test
js
sbb
test
aad
xchg
mov
in
pop
sbb
test
mov
insl
mov
mov
ja
mov
pop
adc
orl
add
iret
pop
daa
xchg
sbb
xchg
popa
pop
enter
aas
cmpb
mov
or
mov
push
ja
sub
ret
data16
cmpsb
mov
int
jmp
mov
mov
or
in
rcl
in
jp
dec
cmp
daa
in
sub
lcall
daa
cltd
xchg
roll
repnz
pop
mov
fwait
outsl
sti
enter
xchg
adc
inc
xchg
cmpsb
test
dec
xchg
mov
test
dec
or
movsb
xchg
movsl
cltd
xlat
mov
mov
inc
ja
sbb
xchg
cmpsb
mov
mov
bound
push
and
cmp
push
incl
xor
dec
decb
xor
and
lret
adc
adc
call
mov
push
stc
cmp
loope
and
popf
mov
aaa
push
in
repz
add
or
in
aaa
jne
ss
out
and
fimull
jmp
cwtl
inc
ljmp
shll
bound
sub
mov
inc
pusha
mov
stos
clc
dec
dec
mov
jge
sbb
add
aad
or
cmp
xchg
sub
sbb
negb
fildl
or
rorb
inc
sub
movsb
int
jl
dec
les
loop
mov
and
add
roll
adc
xchg
add
mov
gs
mov
and
and
sbb
or
sub
orb
jg
jl
stos
or
add
xchg
cmpsb
repz
stc
or
mov
or
andl
mov
daa
xchg
mov
test
jmp
xchg
lods
jmp
and
es
mov
mov
and
dec
mov
and
imul
and
jno
mov
out
cmp
or
in
lods
add
adc
xchg
shll
outsl
daa
dec
adcb
insb
gs
pop
mov
sub
jno
fcmovu
stc
mov
mov
lods
loop
and
out
in
pop
repz
add
push
nop
lea
in
pop
jle
xorl
pushf
test
add
stc
in
ljmp
sbb
dec
int
jnp
gs
pop
inc
jb
jno
stos
das
mov
rclb
cli
mov
xchg
inc
sub
popa
push
loopne
divb
adc
push
iret
vpcmpeqb
aad
xchg
dec
shll
add
cld
enter
inc
mov
mov
sub
cmp
dec
mov
adc
loope
imul
and
inc
shl
push
jmp
sub
idivb
jb
iret
push
inc
insl
dec
adc
xlat
mov
stc
mov
xchg
scas
pop
fldcw
push
lods
mov
xchg
xchg
adc
and
ds
pop
lahf
and
test
mov
out
ja
out
scas
ret
jp
and
mov
inc
shr
push
aas
fisubs
sub
push
adc
test
scas
pushf
cmpsl
lret
loop
sub
outsb
into
cmp
mov
testb
bound
xchg
sub
xchg
mov
jns
inc
nop
pop
pop
dec
filds
int3
sub
jns
pop
enter
js
mov
xor
mov
jmp
ror
es
lcall
push
and
cli
jg
pusha
rolb
iret
cmp
pop
fcom
mov
adc
mov
mov
cli
add
cli
movsl
std
cwtl
ljmp
push
mov
test
dec
pop
mov
push
fisttps
icebp
cltd
loope
in
sub
int3
add
sbb
mov
pop
cmpsb
imul
fiaddl
xchg
inc
loop
nop
fdivp
sbb
pop
insb
push
and
hlt
sub
mov
push
fcompl
jne
xchg
dec
std
pop
aad
jns
xor
jns
cwtl
dec
dec
aad
sub
sarb
fs
or
mov
lea
sahf
sub
jo
mov
lea
lods
mov
stos
fdivs
xchg
stc
sub
add
arpl
mov
jb
mov
push
xchg
in
bound
push
mov
jecxz
or
sti
cmp
jp
sbb
enter
pushf
insb
lods
add
jo
or
sbb
push
jmp
pop
jl
ds
dec
icebp
fsubs
fisubs
adc
enter
xchg
pop
xor
into
mov
cmp
xchg
sub
mov
addb
imul
inc
jmp
cwtl
ret
inc
fisttpl
loopne
iret
fiadds
jae
mov
mov
stos
decl
jp
imul
dec
mov
push
popf
rcrl
repnz
and
out
sbb
sub
fwait
lahf
xor
outsl
jne
push
add
cli
or
ljmp
cmp
test
mov
xlat
test
gs
aam
icebp
push
mov
jnp
fistpll
xchg
fimull
or
test
mov
test
sub
mov
stos
popa
sbb
pop
or
pushf
gs
push
mov
negl
imul
cmpsb
std
icebp
lods
lds
and
stos
aam
or
popf
jecxz
aaa
js
loope
push
mov
dec
mov
movl
repz
xchg
mov
aam
adcb
sbb
aas
xchg
sahf
divb
ja
jns
rcll
fwait
ret
sbb
mov
cmp
outsl
pop
sbb
repnz
adc
add
leave
cwtl
add
pushfw
add
jg
sahf
and
pop
imul
pop
jno
dec
xor
jl
and
mov
shrb
cli
insl
int
add
add
fildll
insl
sbb
test
pop
mov
xor
in
and
lds
or
pop
mov
jns
mov
rorl
jo
aad
push
mov
xchg
fcmovnb
xor
xchg
or
mov
xchg
enter
std
ja
mov
nop
xchg
pop
and
sti
and
cmpsl
filds
rorl
std
mov
mov
mov
adc
dec
repz
shll
call
cmp
out
fstpt
insb
ja
fadd
inc
mov
stos
or
movsl
adc
test
mov
popf
jp
mov
mov
or
lea
push
ror
inc
cld
sub
lds
pusha
hlt
mov
xor
sub
cmp
dec
inc
xor
mov
incb
stc
outsl
scas
dec
mov
sub
jno
mov
ret
popa
ret
cmpsb
ja
sarl
xchg
loop
and
jo
fsubrl
aam
mov
aam
jmp
cmp
mov
les
cwtl
sub
lds
std
rclb
xchg
xchg
sbb
icebp
sub
and
pop
or
jnp
mov
pop
and
mov
and
mov
xor
nop
loopne
pop
test
push
test
mov
lods
in
push
fildll
dec
int
ja
inc
mov
xchg
mov
cmpsb
lock
and
push
sarl
aad
fisubrs
popf
and
cld
inc
cmc
stos
cmp
xchg
repnz
mov
mov
out
pop
loope
inc
popf
das
sarl
cli
cmp
xchg
sar
insl
cmc
rorl
jno
mov
aas
push
sbb
in
jmp
or
lret
cltd
cwtl
inc
ljmp
cmp
out
imul
mov
mov
pop
inc
xchg
dec
ret
dec
dec
div
out
dec
dec
dec
sti
mov
lock
ja
xorl
add
mov
inc
sbb
jnp
mov
jmp
mov
jmp
movsl
xchg
inc
insb
push
or
sbb
xor
mov
les
and
enter
xchg
push
adc
xor
jb
popa
push
add
mov
fmull
dec
fbld
iret
rcrl
test
outsl
imul
cmpsb
jp
or
out
fisubl
roll
push
in
cwtl
jb
inc
xchg
push
insb
shll
sub
outsl
lock
fcoms
les
ds
xor
popf
lret
mov
sti
xchg
daa
les
pop
scas
es
mov
or
mov
adc
cmpsb
jge
push
mov
out
pop
xchg
dec
inc
adc
fs
adc
dec
scas
shl
stos
add
sub
and
fnsaves
pop
data16
cmc
cmovs
stc
pushf
jecxz
inc
push
sub
push
adc
cmp
push
add
or
and
pop
fwait
push
aam
data16
out
mov
cltd
fdivrs
pop
adc
aas
outsl
push
popa
or
clc
push
pop
add
jecxz
cmpsb
xor
or
jle
insl
popa
mov
cmp
in
imul
jne
or
jnp
rcll
sbb
and
sbb
inc
repz
sbbl
or
rorl
daa
jmp
rclb
add
push
ret
pop
rcrb
jg
int3
cmp
out
adc
into
aam
pushl
mov
push
dec
xor
xchg
int
mov
loop
into
xchg
arpl
cmp
cmc
pop
loop
loopne
push
pop
inc
inc
dec
sbb
mov
int
bound
mov
repnz
gs
xchg
cmp
jnp
cmpsl
mov
mov
cld
shlb
pop
rol
or
push
repnz
stc
dec
xchg
push
jle
pop
add
jnp
dec
and
sub
popa
or
clc
push
popa
mov
mov
test
mov
mov
jno
sbb
mov
loopne
sbb
out
lret
fiadds
das
sti
pop
in
jno
add
cwtl
xor
adc
sarl
xchg
cmpsl
dec
lcall
and
ljmp
adc
cmp
push
mov
orb
decb
sub
mov
ret
cmpb
or
mov
adc
in
sbb
les
dec
cmp
xchg
iret
mov
lahf
int3
mov
lods
pop
scas
inc
sti
scas
dec
cmpsb
scas
inc
loope
pop
jae
xor
adc
loopne
adc
xor
loop
stos
push
lahf
pop
inc
cli
jb
push
cmp
fsubr
jge
scas
sbbl
sti
sbb
sbb
das
cmpb
and
mov
insb
or
mov
lods
mov
mov
jle
mov
in
lock
xchg
int
xchg
or
imul
mov
jb
sbb
pop
dec
enter
push
mov
je
test
xchg
xor
testb
lret
add
lcall
pop
pop
stc
nop
dec
mov
mov
lcall
and
out
xorl
pop
push
adc
and
xchg
ret
mov
dec
jb
cmpsb
mov
in
xchg
pop
xchg
mov
in
shlb
xchg
adc
push
out
or
lea
iret
jecxz
push
addb
cs
inc
pop
jne
sub
add
sbb
test
mov
cld
psrlw
fwait
mov
mov
int3
lods
cltd
and
icebp
cmp
add
addl
sbb
dec
loope
adc
fs
int
insb
fisubl
mov
ret
insb
out
add
mov
jecxz
mov
dec
inc
sahf
jnp
int
mov
mov
xchg
cmp
shrl
xlat
mov
fisubrs
mov
xor
mov
or
cmp
jp
mov
in
mov
ja
add
imul
jbe
mov
jae
dec
out
popf
mov
fstpt
out
adc
addr16
sub
mov
fisubs
mov
dec
fisubs
mov
es
xchg
push
mov
or
imul
push
imulb
push
mov
jns
jae
iret
inc
add
add
add
test
pushf
pop
data16
push
jg
cmc
ljmp
cmp
lret
shl
out
stos
lock
jns
mov
cmp
mov
cltd
pop
jbe
test
popf
sbb
subl
lahf
out
sbb
cltd
pop
in
mov
test
into
mov
xchg
mov
dec
pop
pop
and
pop
adc
fs
xchg
lds
aaa
icebp
xor
push
jge
ss
adc
jle
push
inc
cltd
clc
push
dec
pop
push
cmp
in
cmp
shr
push
test
add
mov
mov
jp
int
cld
pop
push
or
and
rcl
jg
or
push
or
shl
das
push
gs
hlt
add
mov
sbb
aad
fcmovb
adc
popf
lret
mov
sahf
push
jae
and
aam
pop
in
dec
dec
xchg
hlt
mov
hlt
jns
lcall
pop
push
inc
fcmovnb
lret
stos
aaa
call
les
daa
or
xor
shlb
stos
sub
add
mov
rorb
ds
xor
adc
xlat
iret
and
insb
cmpsl
mov
sti
sbb
les
addr16
sahf
push
sub
xchg
push
xchg
pop
and
push
lods
addr16
cmpsl
xchg
imul
cltd
xor
push
out
push
or
mov
xchg
andb
test
into
mov
in
out
dec
cmp
mov
in
mov
popl
or
dec
and
fimull
adc
xchg
stc
jbe
jno
mov
inc
lock
lret
and
cmp
shlb
insl
adc
and
jnp
jb
mov
fistpll
lea
pop
mov
xchg
xorl
pop
cltd
in
mov
mov
stos
cmp
stos
cmpsl
gs
stos
insl
lods
mov
dec
adc
ret
in
inc
xor
or
outsl
ds
push
mov
mov
dec
rcrl
pop
scas
add
mov
xchg
or
je
cli
incl
adc
or
call
shll
xchg
cmp
cmpsb
sbb
lock
or
clc
iret
jle
sbb
test
dec
jl
cmp
dec
xor
sbb
inc
fimuls
mov
cmp
mov
sbbl
mov
aad
fimull
xlat
mov
push
push
or
test
cs
icebp
movsb
pop
mov
xor
dec
in
xchg
and
clc
outsb
rolb
dec
xchg
push
mov
movsl
jecxz
in
adc
aaa
outsl
fs
sub
insb
negb
arpl
and
outsb
hlt
mov
mov
push
cmp
mov
mov
mov
xlat
xchg
jmp
icebp
lret
test
push
add
jmp
xchg
sbb
jb
fiadds
popa
negl
mov
dec
dec
jne
addr16
dec
mov
js
add
mov
xchg
cmc
adc
inc
stc
jmp
in
xlat
fisubl
and
mov
mov
jmp
xchg
mov
call
clc
xor
sbb
cmp
xchg
mov
sbb
jne
std
mov
pop
fs
push
or
or
inc
dec
ja
and
das
xchg
aam
jmp
in
or
ljmp
out
dec
lcall
in
out
in
inc
inc
push
bswap
mov
mov
dec
jbe
movsl
xchg
test
add
adc
loopne
push
in
push
shrb
sbb
es
mov
sbb
cmpsl
push
gs
pop
jg
sbb
gs
stc
pop
xorl
mov
jo,pn
icebp
jl
mov
jb
xchg
push
test
add
loop
xor
and
hlt
xchg
or
cli
mov
loop
sbb
shrl
jne
push
push
gs
data16
and
mov
or
push
lcall
addr16
and
sbb
add
mov
mov
icebp
add
cli
loopne
jecxz
pop
push
xchg
mov
mov
jge
push
sbb
leave
or
mov
in
sub
sbb
popa
inc
cmp
xchg
add
sahf
adc
pop
mov
sti
sub
jl
mov
aam
das
dec
loope
shrl
cmp
rclb
xchg
sbb
lods
sahf
cs
pop
pusha
mov
mov
mov
jmp
in
pop
clc
sub
int3
mov
je
es
mov
inc
iret
xor
shl
aad
jecxz
xchg
fldcw
fcomps
cmp
or
mov
mov
xchg
lret
inc
push
sub
fildl
into
sub
jne
out
xor
clc
pop
xor
adc
fmul
pop
add
mov
lret
and
xchg
xchg
and
and
xchg
leave
add
subl
jp
enter
fstl
xor
push
xor
jmp
out
mov
xchg
xchg
mov
mov
mov
add
jno
aas
xchg
movsb
lret
lds
lret
sbb
popl
mov
push
imul
rorl
add
sahf
sbb
mov
int3
mov
sbb
cmc
pop
pop
cmp
sbb
decb
pop
add
fisttps
cmp
ret
pop
pop
stos
xchg
cmp
lcall
push
insb
adc
ja
adc
nop
cltd
dec
jo
xor
mov
idiv
fidivrs
adc
cmp
or
mov
rol
pop
es
movl
pop
mov
nopl
out
xlat
pop
sarb
icebp
xchg
mov
jnp
or
adc
repnz
test
adc
dec
fs
push
pusha
mov
shlb
andb
aaa
aam
ljmp
adc
inc
push
aad
jmp
lea
stos
and
gs
push
repz
leave
sub
mov
leave
sbb
stos
jno
int3
dec
or
andb
testl
in
repz
xlat
sbb
shll
cmc
sbb
jne
push
push
int
insl
test
repnz
lock
push
repz
jae
test
and
push
lahf
imul
sarb
mov
inc
xchg
pop
pop
push
les
push
icebp
sbb
out
pusha
cmp
lods
push
pop
repnz
mov
sbb
ds
cmp
andb
mov
pop
stos
pop
cmp
imul
xchg
cmp
push
pusha
sub
add
sbb
orb
lods
out
out
add
adc
sbbb
aaa
cmp
in
and
mov
cmpb
mov
pushf
cbtw
aas
out
sub
sub
inc
xchg
lds
add
hlt
ds
jg
xor
mov
insb
rorb
pop
test
insl
in
and
mov
cmp
mov
inc
push
mov
push
movsl
js
mov
adc
sub
jge
icebp
hlt
and
mov
sub
mov
jg
popf
push
fnsave
pop
insb
push
movsl
mov
inc
cld
dec
jne
std
cs
icebp
or
addr16
in
mov
ror
outsb
jecxz
mov
int
je
scas
cld
mov
jns
xor
adc
std
cmpsl
fldl
pop
out
jge
push
adc
xchg
lds
pop
xchg
inc
dec
adc
cmp
push
lret
mov
in
adc
dec
xchg
sahf
mov
pop
dec
fisttpll
fsubs
or
add
mov
ficoms
roll
pop
jns,pn
pop
fldcw
sub
dec
imul
add
and
push
cmc
xchg
xor
jecxz
dec
lahf
add
clc
mov
insb
test
les
js
sarl
lods
inc
xor
add
adc
xorl
sbb
gs
cs
clc
jb
popf
mov
dec
enter
repz
pop
xchg
xchg
jo
jp
xor
ror
jl
js
pushf
ret
and
push
into
mov
and
pop
cmp
fstl
xchg
xchg
mov
in
fbstp
sbb
popa
sub
mov
ficoms
mov
fldt
mov
xchg
je
add
sub
jb
mov
or
push
jecxz
pop
push
add
loopne
fcompl
mov
mov
xor
dec
push
add
and
or
ljmp
mov
cmp
cwtl
mov
sub
jae
xchg
mov
popw
imul
lcall
mov
jne
pop
bound
jl
xchg
ja
mov
push
mov
out
std
cmp
enter
push
fldt
ss
add
mov
std
mov
out
loopne
and
gs
cmp
xor
jns
aad
dec
popf
rcll
adc
mov
pop
adc
xchg
aaa
lds
add
mov
test
jne
fcmovnb
ja
insl
hlt
mov
xor
clc
mov
sub
cmp
orl
mov
xor
je
inc
fnsave
push
jo
rol
push
fnstsw
in
lcall
sbb
adc
pop
outsb
ds
icebp
jp
aaa
stc
mov
xchg
stos
push
lock
push
jno
push
mov
xchg
lahf
fdivs
jecxz
or
inc
push
xor
out
aad
inc
imul
cmc
mov
xor
inc
pusha
repnz
mov
mov
cmpsb
sbb
dec
das
push
adc
sbbl
push
mov
mov
mov
jne
xchg
jns
stos
inc
mov
rol
xor
pop
sti
sahf
stos
dec
leave
dec
out
out
push
or
inc
ljmp
push
stos
scas
add
repz
data16
xor
xor
dec
pushf
das
neg
cmp
pop
add
jne
xchg
xchg
lea
ss
fwait
das
cmc
or
test
and
aad
arpl
clc
cmp
cmc
xor
pushf
fildll
mov
adc
mov
mov
pop
mov
filds
inc
push
inc
sub
add
jbe
push
div
xor
xor
cmpsl
or
jg
stos
popa
call
cmc
dec
adc
in
cs
add
sbb
ja
pop
sahf
aaa
or
mov
cmp
notl
mov
xchg
mov
lahf
idivb
push
je
mov
and
enter
xor
adc
xchg
adc
xchg
and
cwtl
mov
cs
inc
test
add
lcall
pop
pop
xor
fmull
mov
and
setbe
sub
fwait
jbe
push
repnz
and
xor
stos
outsb
dec
cmp
xlat
push
jle
mov
xorb
push
orb
mov
pop
packuswb
into
and
cs
enter
xchg
in
dec
or
xchg
imul
mov
xchg
xor
add
dec
mov
loop
jns
inc
jg
lret
pop
shll
mov
mov
fimuls
aas
repz
sub
xor
sub
cmp
iret
scas
dec
cltd
inc
aas
data16
jo
aad
sti
jecxz
pop
push
in
cltd
popf
ficoml
jae
xchg
or
fdivl
mov
xchg
xor
xchg
into
loop
and
cld
jg
mov
inc
sbb
mov
adc
cmpsl
gs
out
hlt
cs
push
jle
out
dec
cmp
scas
dec
mov
push
mov
and
cmp
jae
or
lea
or
jb
jle
jp
mov
leave
adc
cmp
bound
sahf
xor
jl
mov
inc
repnz
pushf
or
mov
add
stc
push
mov
mulb
sbb
xor
out
out
adc
jb
and
cwtl
ljmp
inc
ljmp
sub
xor
add
jne
pop
xchg
cmp
adc
fucomp
pop
sbb
aam
outsl
repnz
and
inc
gs
outsb
test
sub
cmp
push
stos
daa
aad
mov
add
pop
dec
sarb
add
ret
iret
cmp
iret
lcall
lods
cmp
mov
add
repz
in
dec
jg
and
outsl
jl
lea
in
xchg
jno
xchg
push
jae
cltd
xor
and
xchg
fisttpl
pop
mov
fstps
and
es
lods
enter
add
sbb
addr16
sbb
inc
jnp
ss
insb
xor
push
pushf
fildll
or
mov
xorb
jg
push
mov
pop
push
imul
dec
dec
mov
in
mov
aaa
add
insb
mov
mov
inc
call
andl
sub
xor
aam
cmp
rorb
fs
mov
repnz
cli
jp
enter
lea
mov
mov
jg
aas
and
jle
mov
sub
ds
mov
shl
setp
mov
sub
xchg
mov
stos
mov
sti
popa
cmp
outsl
and
mov
movsb
or
and
mov
repnz
loope
ret
sub
xchg
or
stc
test
ja
pop
cmovg
cs
shrb
and
icebp
jecxz
rolb
sub
inc
enter
mov
push
je
pop
insl
fildl
pop
inc
xor
or
jmp
and
lret
cli
mov
sahf
enter
xor
fcomip
sub
fs
jg
mov
orl
fidivl
insb
pop
ja
and
lods
push
adcl
fisttpll
pop
dec
fwait
sub
sahf
popf
insb
mov
in
enter
ljmp
mov
jge
mov
std
rcll
pop
fsubrp
insb
add
js
sub
cs
push
dec
and
popa
cmpsb
pop
sti
rcll
jecxz
mov
nop
mov
fstps
add
mov
lret
mov
sub
xchg
pop
adc
mov
mov
daa
push
jae
push
inc
or
add
add
mov
aaa
or
es
pop
sbb
fwait
lahf
ffree
lds
cmp
loope
cmp
and
daa
pop
inc
sub
jl
mov
scas
pop
cmp
xchg
lret
jo
subl
pop
jb
push
lret
sbb
mov
insl
fs
and
aas
nop
sbb
xlat
in
mov
add
pop
or
adc
shrl
dec
adc
std
loopne
aam
in
inc
dec
cmp
or
rol
push
push
sub
or
xchg
stos
fs
test
mov
lods
lahf
lods
ret
out
mov
adc
adc
jne
ud1
jmp
sub
pop
mov
adcb
mov
mov
mov
push
pusha
pop
cmp
aaa
pop
cltd
push
test
dec
rclb
mov
hlt
and
pop
push
sub
or
movsb
pop
dec
xchg
sub
and
leave
loop
xchg
and
sub
lods
imul
push
mov
ds
fdivrp
xlat
test
mov
shll
and
bound
jmp
mov
push
mov
rol
sub
ljmp
inc
push
adc
push
and
jp
fs
dec
pop
ret
pop
cmp
adc
cmp
add
jmp
nop
sub
ret
jae
mov
sbb
add
xchg
imul
fmul
insl
and
roll
inc
js
dec
sub
in
hlt
fists
test
mov
or
adc
adc
inc
dec
pop
xchg
and
in
mov
adc
sub
pmulhw
jae
push
fwait
jne
xor
pop
in
pop
imul
insb
jnp
mov
mov
add
mov
jge
cmp
das
subb
dec
push
sbb
int3
jmp
jns
lods
cs
jecxz
mov
hlt
scas
mov
and
rol
out
add
outsl
or
cmp
ss
adc
inc
stos
jnp
repnz
fadds
xchg
inc
idivb
dec
sbb
jl
sub
dec
mov
sbb
gs
xchg
fwait
pop
adc
mov
lds
ficoml
cmpsl
inc
lret
mov
add
lret
or
or
aaa
sbb
insl
fnstcw
mov
jge
lods
int
aad
adc
cmc
movsl
sbb
fs
into
xchg
jns
rcr
pop
xchg
mov
pop
sarl
pusha
in
cltd
cmp
daa
and
xchg
sub
push
loop
cmp
les
push
frstor
inc
sbb
jl
mov
ja
jbe
je
rorb
gs
adc
das
inc
out
insb
shll
fcompl
dec
flds
xchg
jge
out
mov
int
fistl
pop
pushf
lcall
aaa
jmp
inc
adc
lock
sbb
imul
mov
lock
and
push
inc
and
jae
mov
out
fisubl
dec
xorl
pop
mov
insl
or
imul
or
into
push
test
movsb
sbb
pop
xchg
in
ja
jb
fisubrs
nop
pop
stc
and
mov
fisubl
adc
lods
jnp
pop
in
out
pop
and
xor
data16
ret
mov
out
pop
adc
cs
in
dec
mov
fdivrs
scas
sti
fwait
jp
cs
sub
xchg
add
pop
fwait
cmp
adc
sub
mov
adc
loopne
cmc
pop
pop
pop
imul
outsl
loop
sub
push
enter
rolb
cmc
lret
shl
lret
mov
xchg
adc
jecxz
lods
out
cld
ja
add
adc
daa
adc
push
or
movsb
stos
mov
jecxz
push
mov
sub
sub
fstpt
xor
adc
cmp
hlt
in
mov
mov
add
dec
push
data16
push
and
sbb
repnz
push
dec
fadds
imul
ret
add
inc
jmp
push
cmc
and
dec
pusha
stos
pop
cltd
dec
xchg
mov
shrl
pop
decl
outsb
inc
test
mov
dec
jp
lret
lahf
inc
test
outsb
dec
ret
sub
cmp
popf
sub
imul
lret
imul
inc
hlt
sbb
xchg
cld
xchg
push
inc
dec
jge
mov
lahf
adc
lods
jle
repnz
inc
inc
loope
imul
ret
ret
cmpl
mov
mov
dec
scas
and
push
leave
inc
and
dec
add
testl
in
fs
pop
ficomps
push
and
je
or
sbb
and
cs
sti
mov
cmpsl
dec
rol
dec
inc
inc
movl
pop
mov
sbb
mov
fsub
push
mov
cmpsb
or
mull
push
lds
cmpsb
ficomps
popa
or
or
sbb
sbb
loop
leave
ljmp
popf
aam
inc
mov
sti
push
pushf
mov
sub
rorb
lcall
fxch
jbe
int
sbb
pop
pop
das
stc
adcb
sahf
sbb
rolb
hlt
mov
hlt
and
inc
rol
nop
stos
mov
mov
imul
push
sbb
out
adc
addb
das
jbe
in
sbb
icebp
jno
mov
jmp
mov
jp
sbb
pop
push
mov
xchg
lcall
dec
jbe
xchg
fisubs
lods
data16
das
xorl
repz
iret
repz
cmpsl
sub
movsb
pusha
mov
mov
mov
mov
ret
or
mov
int
pop
pop
xor
mov
push
call
shrl
lea
mov
lret
jns
pop
loopne
test
jb
add
or
dec
loop
xlat
in
mov
add
push
stos
les
pop
dec
add
cwtl
filds
and
fs
jo
icebp
adc
call
popf
nop
push
call
adc
hlt
xor
xchg
xor
rolb
pop
and
testl
or
pushf
dec
xchg
shr
cwtl
pop
sub
lret
and
dec
loope
in
mov
mov
mov
test
test
dec
push
les
pop
xlat
popa
or
fildll
mov
push
test
add
lods
inc
mov
lahf
xchg
ficomps
fiaddl
adc
stos
mov
inc
sbb
push
mov
jmp
aas
insb
int
je
xchg
push
inc
jno
sub
mov
or
jns
in
inc
enter
imulb
mov
adc
mov
inc
lcall
add
adcl
push
movsb
pop
push
fnstsw
push
data16
jmp
adc
sbb
mov
test
add
push
mov
in
int
add
mov
outsl
divl
jge
or
js
mov
int3
xor
jo
sub
outsl
pop
cld
push
push
add
outsb
fwait
out
inc
xor
in
in
mov
popa
xchg
cli
call
pusha
psrad
push
cltd
loopne
ljmp
xor
popf
inc
cmp
jmp
ja
ret
dec
dec
stc
add
push
mov
adc
loope
fwait
leave
cmpsl
js
inc
mov
dec
dec
push
mov
test
fwait
insl
adc
int
mov
sbb
xor
mov
ds
mov
jne
icebp
add
ja
sbb
add
fsubs
iret
push
lds
inc
mov
push
int3
dec
pop
add
mov
jb
pushf
scas
mov
and
addr16
push
inc
lcall
jns
loopne
int3
test
stos
xchg
mov
push
cmp
dec
add
fs
pop
mov
jo
cmp
xor
pop
filds
aas
pop
inc
and
sbb
add
loop
out
mov
xchg
sbb
cmpsb
ret
cmpsl
fs
dec
cmp
das
sbb
sbb
stos
movsb
andb
dec
sub
inc
pop
daa
dec
orl
data16
jo
push
mov
push
rcl
insb
adc
mulb
mov
imul
fistpl
mov
repz
push
mov
push
stc
stos
shr
cwtl
repnz
jge
andb
xchg
push
mov
enter
push
shl
fimull
out
mov
int3
jae
cld
or
push
ja
adc
add
jo
rol
inc
in
adc
push
lret
ljmp
sub
shl
jae
add
sti
pop
repz
or
cwtl
jmp
aaa
movsb
lret
scas
inc
std
xchg
cwtl
neg
inc
arpl
adc
adc
sar
dec
movsl
mov
adc
in
sbb
or
arpl
xor
jb
mov
xor
cmc
sti
jae
jae
inc
jbe
dec
loopne
mov
jmp
gs
out
nop
or
sub
icebp
jp
popa
or
pop
shrb
cld
add
adcl
pop
fsubrl
std
cltd
and
add
adc
rolb
cld
mov
fbstp
imul
adc
mov
xchg
add
jmp
cmp
jmp
ss
adc
and
sub
into
popa
push
outsl
or
push
fstl
xor
cmp
mov
in
incb
pop
mulb
jmp
decl
hlt
inc
gs
xor
pop
adc
add
sbb
adc
or
or
popa
jmp
filds
pop
addr16
gs
or
fisttpl
push
and
mov
popf
loope
fstpl
fcmovb
pop
dec
fcomip
sahf
loopne
sub
leavew
ror
xchg
and
sub
push
jb
in
ret
xor
fs
push
xchg
pop
or
lret
aas
clc
arpl
insl
loop
xchg
jecxz
jp
hlt
stc
ret
or
scas
jmp
in
mull
in
aam
mov
mov
mov
mov
sbb
pop
jno
inc
push
imul
sub
sub
in
aad
inc
cltd
mov
std
jle
mov
xor
in
cmp
clc
out
les
cwtl
mov
into
push
lahf
add
ret
aam
jp
hlt
jmp
sub
mov
pop
push
dec
cld
pop
in
in
dec
cmp
imul
add
jge
insb
inc
shlb
call
pop
sbb
aaa
xor
cmp
add
ret
in
mov
mov
sub
add
mov
xor
push
cmp
jle
sarb
push
sti
mov
test
rcr
or
adc
sub
into
dec
movsl
sub
xchg
sbb
lahf
mov
aaa
int
inc
mov
push
add
mov
mov
push
xchg
or
fs
xor
mov
mov
xor
push
jnp
mov
xor
orb
and
xor
insb
mov
mov
pop
cmp
push
mov
cmp
test
push
shl
cs
push
push
pop
and
std
fisttpl
sub
and
jecxz
je
cmp
ljmp
fwait
testb
pop
mov
inc
pop
jns
cltd
push
inc
arpl
js
aas
jge
mov
cmp
xor
fcompl
pop
cmp
fcoml
xchg
fisttpl
int
xor
int
pop
sahf
dec
lea
pop
inc
idivl
add
cwtl
sub
jecxz
in
into
insb
fs
push
xorb
inc
lret
and
jo
push
insl
dec
jecxz
call
inc
int
and
cmc
mov
lods
nop
jmp
cwtl
testb
loopne
and
pop
sbb
pop
add
es
or
test
mov
cmp
in
push
mov
xor
xor
das
out
sar
jno
push
enter
int3
popa
scas
je
lret
push
mov
lcall
insb
mov
dec
sbb
test
push
mov
in
popf
leave
push
dec
mov
push
int3
fdivrs
aam
idivb
inc
and
xchg
cmc
mov
or
loop
sbb
push
mov
into
push
add
sub
cld
outsb
fcoml
and
fimuls
stos
aaa
push
nop
shll
popa
pop
addr16
xchg
repnz
mov
ja
mov
adcl
frndint
mov
out
in
cmp
shll
test
repz
add
test
pop
call
stos
int
out
movsb
and
sbb
sbb
test
out
pop
insw
mov
adc
add
sbb
inc
push
xchg
les
and
mov
dec
xor
pop
jp
ds
andb
and
add
and
adc
xor
ljmp
dec
inc
xchg
and
sbb
subb
cmpsl
fbld
pop
in
test
dec
rcrb
or
pushf
mov
adc
sarb
mov
or
icebp
daa
int
ss
fidivrl
mov
push
sets
icebp
mov
fsts
jnp
add
xchg
lock
dec
mov
xor
mov
xchg
and
push
inc
ljmp
mov
push
hlt
adc
repnz
pop
mov
cltd
das
jge
scas
push
in
sbb
dec
je
lcall
mov
not
and
xor
sub
cmp
push
push
or
ss
outsl
sahf
sub
lock
fsubrl
cmp
adc
mov
jbe
call
negl
jae
inc
jl
inc
fldenv
pusha
shlb
xchg
mov
dec
aaa
sbb
push
add
popf
push
dec
mov
adc
mov
inc
and
jbe
decl
mov
xchg
mov
adc
sub
cltd
fcmovnbe
xor
fcmovnb
cmc
push
pop
and
fildl
pusha
stos
push
shr
pushf
jecxz
xchg
lea
fsubs
sbbb
sbb
sub
rcrl
pop
icebp
jbe
xchg
push
lods
mov
lods
insl
sarl
in
decb
jb,pt
fidivrs
mov
push
sarl
lods
mov
pop
cs
xchg
xor
mov
jge
fucomp
jns
movsl
mov
fnstsw
add
fstpt
adc
cmp
xchg
jg
sbb
scas
cmpsb
lcall
mov
in
out
ljmp
lods
shrb
push
push
add
stc
jp
lret
lret
aaa
outsl
pop
lods
mov
xor
or
xor
add
dec
out
popa
ficoml
mov
sar
xchg
aam
mov
cmpsl
insb
xchg
cs
mov
mov
inc
adc
add
push
outsb
rorl
loope
sti
cmp
adc
and
sub
xchg
push
mov
outsb
lahf
push
mov
xor
xchg
in
pop
cmc
into
pop
cmpsl
lods
mov
mov
imul
stos
loope
ret
sbb
mov
aas
push
loopne
cmp
mov
aam
inc
stos
sbb
push
and
lret
dec
jp
pop
clc
imul
pop
push
out
loop
sub
pop
sbb
sub
cwtl
mov
mov
mov
xchg
lods
loopne
popa
and
sbb
inc
add
pusha
ficoml
push
sti
push
andl
in
sahf
or
push
int3
ss
cmp
jl
pop
pop
pop
mov
call
sahf
sub
or
push
cli
sbb
mov
scas
out
rorb
outsb
xor
roll
scas
mov
inc
and
dec
mov
cmp
jb
cltd
movsb
sub
aas
xor
es
cmc
rcll
pusha
mov
adc
add
cmp
mov
pop
iret
stos
xor
pop
and
fldt
std
inc
in
cmp
mov
in
sbb
imul
inc
loopne
test
in
int
test
dec
sbb
repz
adc
orb
lods
insb
insb
pop
ret
arpl
mov
call
rclb
mov
pop
mov
and
orl
dec
pop
push
xor
or
imul
fildl
dec
mov
add
add
nop
sub
xchg
and
inc
mov
adc
enter
rclb
pop
scas
sbb
and
inc
add
dec
lret
cmc
out
in
inc
or
mov
les
inc
stos
push
mov
das
mov
imul
cld
mov
test
shll
xchg
sub
mov
int3
sub
push
jl
popf
test
sub
push
sbb
mov
push
jb
ljmp
mov
mov
movb
jle
push
popf
imul
int3
ret
pop
je
int3
and
sub
lods
testb
popa
cmpsb
in
mov
lcall
aaa
xor
out
outsl
iret
jp
aas
test
pushf
shl
pop
aad
movb
out
push
xor
mov
dec
cld
adc
stos
out
stos
pop
mov
xor
repnz
ljmp
std
mov
cmp
pop
mov
clc
in
cmp
out
icebp
mov
xchg
aas
push
fnstsw
cvttps2pi
fwait
lock
mov
mov
jp
stos
stos
mov
cmp
loop
mov
inc
lods
hlt
ret
cmp
es
inc
sbb
inc
aaa
insb
jae
pop
add
add
loop
call
cmc
xchg
sbb
call
inc
cmp
cmp
inc
subb
dec
adc
sub
loopne
pushf
sarl
jne
sub
mov
adc
pusha
es
orl
out
lock
jbe
out
int
inc
ds
mov
fldenv
xchg
into
inc
test
ja
xchg
mov
imul
fiadds
jnp
das
jo
lods
xchg
arpl
and
jg
lret
mov
fsts
insb
adc
cmpl
ret
or
test
andb
out
inc
pop
jne
adc
mov
es
in
cmpsl
add
out
scas
inc
mov
mov
scas
outsb
les
sarb
mov
mov
jae
xor
push
push
jns
inc
ret
mov
and
clc
push
test
adc
scas
lret
test
rolb
popf
pop
nop
icebp
fwait
mov
mov
dec
sub
sarb
add
inc
fisubrs
fldt
or
adc
jno
add
xchg
push
mov
add
stc
cli
int3
xchg
lahf
rol
sbb
pop
jno
mov
jle
xchg
pop
or
xchg
push
dec
jl
mov
cs
inc
push
stc
push
mov
dec
nop
shll
scas
lds
insl
mov
jg
mov
ja
mov
and
add
cs
jbe
aaa
int3
test
cmc
inc
mov
xchg
mov
nop
ret
lahf
adc
cmp
mov
inc
ror
xchg
pop
and
xor
loopne
clc
pop
xor
push
aam
loope
rcrb
mov
cltd
orb
popa
jecxz
adc
in
in
arpl
stos
or
popf
popf
cmp
jg
or
jo
fcmovnu
sbb
test
mov
aam
push
push
iret
push
getsec
pushf
xor
ljmp
inc
mov
out
push
cmpsl
fwait
sbb
adcb
pop
adc
test
add
cmp
cmc
pop
cwtl
push
cld
dec
xor
add
cmp
stos
cmpsb
pop
and
in
and
enter
mov
mov
inc
sub
fildl
ds
push
mov
add
xor
js
mov
mov
pop
js
sbbl
add
mov
test
lods
xor
lret
mov
xchg
loopne
out
pushf
xor
push
mov
and
push
or
add
pushf
xchg
pop
sub
out
add
push
inc
mov
or
pop
rorb
incb
fmull
xor
add
imul
jge,pn
lods
in
cmp
aaa
aas
push
mov
sub
data16
jno
insb
push
mov
push
cmp
push
test
repnz
or
mov
das
add
scas
add
push
and
push
push
in
or
push
push
or
xchg
rclb
jmp
mov
shrb
data16
jg
mov
sub
mov
xchg
xchg
std
jmp
bound
shll
jbe
xorl
dec
mov
inc
test
dec
jb
test
and
add
xchg
shlb
das
stc
test
mov
pop
inc
fisttps
aaa
or
push
add
adc
sub
lods
nop
mov
push
push
xor
loope
mov
push
sub
xlat
insb
xor
lods
sub
cltd
inc
leave
sub
jbe
movb
fildll
arpl
xor
sbb
lret
xchg
pop
inc
movsl
outsb
mov
popf
mov
jmp
outsb
mov
test
int
push
mov
jle
add
repz
cltd
pop
cli
and
and
mov
lock
fnstcw
js
pop
sub
mov
and
ljmp
outsb
mov
push
pop
jge
or
add
aad
mul
ret
dec
pop
movsb
add
subl
pop
jns
adc
sbb
pop
cmp
sbb
into
fwait
and
or
pusha
out
inc
cmc
cmp
test
push
pop
mov
das
movsb
pusha
xchg
enter
cmpsl
add
inc
aam
mov
stos
pop
clc
adc
gs
inc
dec
xlat
jge
nop
movsl
ljmp
push
jmp
cld
inc
movsb
es
mov
pop
iret
xchg
cwtl
mov
jb
in
xor
rclb
stos
loopne
fwait
cli
add
arpl
loope
push
cwtl
sub
mov
pop
scas
jecxz
adc
lahf
lods
shll
sub
scas
mov
sbb
in
push
xchg
sub
jl
or
in
lcall
ss
out
in
les
inc
bound
or
pop
cmp
or
pop
jp
xchg
jnp
stos
iret
jbe
adc
call
and
add
mov
es
xor
cmp
mov
xchg
pop
fcoms
or
arpl
add
pusha
in
push
pop
xchg
test
in
andb
psrlq
push
outsb
movsb
add
xor
pusha
cmp
push
xchg
jbe
out
in
pop
in
lods
ja
adc
movsb
cmp
mov
cs
sahf
arpl
push
cmc
sub
das
add
mov
adc
shr
bound
pop
add
int
push
fsubr
and
pushf
dec
icebp
lods
cmp
jg
dec
scas
repz
popl
call
out
cmp
cld
cli
dec
stos
out
adc
rclb
mov
jl
mov
jecxz
movl
jp
aam
adc
pop
inc
popf
adcl
mov
leave
push
nop
jae
jns
and
pop
mov
std
xchg
int
adc
adc
jno
idiv
jb
int
add
lret
jne
sub
jmp
daa
outsb
je
leave
out
outsl
bound
or
fstp
jmp
mov
iret
shlb
mov
push
repnz
ficoml
out
mov
push
subl
sub
jb
adc
dec
es
scas
test
fcmove
out
int
movsl
and
push
cli
xchg
push
and
icebp
test
fildll
into
inc
inc
mov
decl
jl
dec
repnz
pop
inc
mov
pop
lods
cmp
sub
movsb
pop
scas
mov
insb
addr16
pop
dec
jns
es
lahf
outsl
int3
inc
iret
enter
cmp
cmp
leave
adc
and
into
cmpl
lods
or
cmp
pusha
xor
sub
wbinvd
and
fisttpl
data16
in
or
ljmp
inc
xchg
cs
das
ljmp
push
jmp
or
add
jge
insb
mov
inc
sub
test
and
fistpll
enter
jp
push
mov
es
icebp
push
into
xchg
lea
insl
ss
mov
outsb
mov
fwait
mov
jge
mov
and
adc
push
pop
andl
mov
scas
test
fwait
xor
inc
fiaddl
jb
push
xor
mov
mov
push
movsb
cmp
fdivrs
cli
xor
cmc
jl
shrl
xor
and
mov
adc
pop
push
sub
add
mov
pop
popf
push
aaa
cld
repz
ret
lcall
mov
mov
mov
or
add
sub
xchg
sahf
les
jbe
jmp
aas
jnp
lock
lea
dec
dec
xchg
in
xchg
xor
jl
xor
lods
loope
mov
rolb
or
lock
cmp
mov
pop
push
fimuls
clc
enter
ret
xchg
xlat
sub
or
out
mov
add
mov
arpl
lahf
shrb
dec
mov
jae
jbe
cld
sarb
add
hlt
ja
and
aad
xchg
loope
rorb
sub
inc
addr16
xchg
mov
movsl
iret
mov
pop
jg
dec
je
aam
stc
mov
addr16
fnclex
xor
cmp
mov
adcb
rcr
cltd
mov
sarb
mov
out
sarl
jmp
popa
jmp
adc
xlat
adc
add
inc
inc
sub
xor
jbe
js
repnz
aas
and
call
fnstsw
mov
push
lods
loopne
pop
fucompp
aas
pop
and
mov
cmp
jp
or
pushf
sti
inc
cmp
pop
adc
ja
mov
jnp
test
sub
and
lret
in
push
lds
adc
jnp
call
xor
sub
insl
pop
mov
mov
into
cmp
negl
mov
xor
xchg
imul
es
jno
in
and
xchg
adc
mov
lods
les
xchg
subl
insl
sub
jne
xchg
aam
jle
cltd
xchg
pop
xor
xchg
in
fidivl
scas
sbb
shll
cmc
out
pop
cmp
jns
pop
cmp
pop
xor
frstor
dec
cmp
adc
sub
inc
mov
sarl
mov
mov
sub
iret
test
in
inc
mov
mov
sub
xor
fwait
mov
movsb
loope
jbe
cs
mov
enter
iret
ss
in
dec
jp
ja
inc
inc
nop
popa
andb
aam
dec
or
ret
mov
push
shll
push
fdivrs
sub
jmp
mov
and
in
adc
out
clc
pop
outsl
repz
rcr
gs
adc
imul
dec
faddp
jl
xor
xor
fstl
test
sbb
icebp
mov
push
aad
std
loope
and
jmp
dec
lcall
jp
cmp
ja
mov
pop
insb
jns
imul
mov
jle
and
push
xchg
xor
adc
addr16
nop
pusha
inc
jle
and
es
jb
mov
ljmp
jle
fisubl
dec
xchg
in
sahf
xchg
into
mov
adc
jecxz
lret
sub
out
loope
jbe
xchg
mov
rclb
sub
mov
mov
into
testl
cmp
fisubrs
lahf
mov
addl
js
ret
insb
dec
jg
call
add
push
xor
xchg
dec
xchg
push
mov
add
mov
xorl
pop
mov
ret
in
sbbl
nopl
sub
lea
push
cmp
fbld
out
repz
push
dec
pop
test
call
addb
xor
sbb
fldenv
mov
dec
lret
xor
or
int
dec
jns
and
add
divl
jbe
ret
aaa
jb
add
xchg
sbb
fcomp
ja
mov
dec
mov
xor
lcallw
in
jnp
pop
mov
imul
adc
ret
outsl
test
adc
push
test
adc
fstp
call
das
inc
and
mov
test
enter
cld
iret
movsb
and
mov
fnstenv
xor
daa
rcl
repnz
hlt
mov
inc
mov
andb
les
cmp
scas
inc
xor
fcmovnb
pop
mov
or
or
flds
add
insb
lgs
sub
cmp
out
cmp
lret
add
rcrl
ss
int
fidivs
cli
mov
insl
aaa
mov
ljmp
add
xor
gs
mov
icebp
out
push
orb
cmp
sbb
add
cmp
aam
push
aad
or
jns
aad
orl
cmp
cmp
dec
out
adc
jg
inc
inc
dec
and
xorb
negl
sbb
push
dec
jl
add
in
cld
dec
arpl
mov
call
sub
repz
aam
pop
dec
fwait
cltd
ds
fisubrs
repz
ja
lea
mov
insb
cmp
add
test
mov
xor
inc
xor
daa
leave
mov
scas
pop
insb
nop
cmp
mov
into
add
test
sbb
pop
lods
mov
je
xchg
and
insl
in
loope
lcall
adc
mov
or
mov
jae
test
das
or
cmp
or
bound
sbb
xor
stos
mov
ja
lret
adc
vxorps
outsl
dec
cli
gs
adc
cmp
mov
cltd
scas
insb
es
push
inc
mov
pop
xor
jns
mov
inc
xchg
nop
testl
pop
fadd
aas
jae
pop
add
hlt
lods
mov
lds
push
add
dec
add
xchg
sub
inc
pop
jo
fmul
adc
je
sub
sbb
insl
insb
jnp
push
and
gs
xchg
rorl
mov
jno
dec
ret
add
daa
dec
or
sub
jae
and
call
sti
std
jg
sbb
repz
inc
sbb
and
push
loopne
sub
int3
xor
sti
lds
add
or
sbb
push
jmp
scas
push
inc
xor
push
sbb
xchg
jae
int3
fldenv
and
popa
mov
sbb
lea
pop
mov
cli
cli
add
scas
fdivrs
sbb
adc
xor
or
scas
and
pushl
clc
adc
lea
mov
into
rorl
cmpsl
sub
inc
mov
inc
xchg
mov
and
add
fadd
or
jp
ficompl
stc
iret
push
out
sbb
je
jbe
dec
sbb
sbb
xchg
push
push
pushf
mov
outsb
sub
ljmp
aas
stos
fbstp
mov
ja
cmpsl
test
frstor
movsb
add
fisttpll
rorl
stos
xchg
xor
add
pop
jne
xlat
imul
in
adc
xchg
push
and
pop
mov
dec
ror
lahf
fs
ja
cmp
pushf
dec
movsl
out
ja
sub
pop
icebp
sbb
lret
inc
pop
lods
jg
test
or
lret
push
lret
push
pop
gs
scas
outsl
ror
adc
jg
sahf
cmp
and
pop
mov
adc
adc
xchg
pop
imul
inc
lock
sbb
mov
xchg
adc
mov
and
orb
adcl
stc
pop
mov
aaa
cmpsw
mov
pxor
xchg
loopw
push
xor
js
ss
push
insb
lahf
arpl
movsb
add
sub
in
mov
test
lret
jp
jecxz
call
scas
mov
and
cld
and
push
fsubrs
jl
cwtl
mov
pushf
jbe
clc
imul
in
and
out
push
stos
mov
jno
mov
inc
pop
pop
outsb
inc
test
mov
lahf
xor
pusha
fdivrs
pop
repz
das
jecxz
and
loopne
lret
jecxz
cmpsl
stos
int
test
in
mov
pop
sbb
divl
jge
hlt
mov
mov
cs
cmp
lds
dec
scas
nop
mov
mov
mov
sarl
popa
cmp
pmaxub
mov
addr16
lds
popf
test
inc
lds
aad
sub
jge
aas
nop
push
jl
xchg
adc
dec
jbe
xorl
and
mov
and
imul
sahf
and
daa
shrb
cmp
dec
sbb
adc
nop
lock
mov
sbb
fadds
and
mov
ja
jbe
sub
jle
add
adc
mov
inc
sahf
or
xor
mov
lods
bound
dec
xlat
push
add
dec
or
je
mov
addr16
nop
add
in
cs
imull
xor
test
cltd
pop
clc
stos
lret
aas
fisttps
push
adc
jg
mov
gs
jb
sbb
lcall
pop
sbb
daa
jmp
add
xor
xchg
add
into
jl
pushl
ss
in
dec
repz
mov
dec
or
cs
jb
adc
lock
inc
or
cmp
aad
dec
je
and
movsl
repnz
cld
mov
dec
sti
jg
cwtl
mov
fidivrs
adc
fsts
in
push
adc
mov
dec
mov
or
fildll
sbb
scas
lcall
incb
adc
aad
lret
push
mov
aaa
into
xor
or
repz
add
dec
clc
dec
sub
ss
mov
xlat
arpl
jns
movsl
pop
pop
xchg
je
xor
fisttpll
xchg
dec
in
loope
pop
pop
xlat
push
mov
shrl
out
xor
xor
loope
xlat
and
test
test
add
jne
cmp
inc
popf
mov
popf
mov
sbb
mov
mov
dec
mov
test
test
stos
pop
add
je
cmp
sbb
push
mov
mov
jnp
mov
pop
push
insl
jo
adc
lods
mov
push
xchg
add
push
cmp
cmp
stos
mov
adcl
jb
sub
rcr
push
add
insb
out
repz
and
xor
daa
or
or
jo
ret
fcomps
jl
mov
lods
iret
imul
sbb
roll
adc
nop
cmpsl
sbb
cmp
jge
xchg
pop
jg
stc
jmp
mov
push
push
sbb
adc
xlat
roll
sbb
fmuls
pop
inc
xor
mov
add
inc
and
sarl
pop
cmp
dec
lds
lods
loope
fisttps
sub
pop
lods
sbb
adc
out
dec
gs
hlt
ds
jne
iret
enter
push
imul
add
imul
mov
sub
adc
push
inc
xchg
scas
lods
mov
jmp
inc
lods
loopne
les
lret
fldl
arpl
in
jmp
sub
insb
cmpsl
mov
add
cmp
fcomi
sbbl
ret
adc
mov
adc
nop
leave
jp
in
mov
sarb
aaa
xor
stos
cmp
push
test
test
cwtl
lcall
shr
adc
xchg
mov
pop
push
jl
decl
cmp
add
cmpsl
cmp
fxch
outsl
mov
lcall
xor
ds
mov
loopne
jecxz
fistpll
scas
fiaddl
rorb
stos
shll
xchg
sbb
jne
lds
cmc
cmpl
inc
mov
add
push
decl
xchg
rcr
jmp
push
mov
cwtl
pop
and
fsts
and
pop
pusha
scas
inc
and
lods
push
aas
push
ja
xor
mov
adc
mov
mov
and
sub
popf
push
fucomip
cmp
jmp
push
xor
pushl
inc
repnz
lock
sub
inc
pop
roll
pop
pop
scas
pop
lret
cmp
pop
lods
and
jo
orb
xor
pop
lcall
icebp
xorb
das
or
jb
sbb
daa
mov
mov
insl
cmc
testb
sub
push
les
outsb
xchg
jo
xor
mov
ja
orl
cmp
mov
icebp
lret
xorps
mov
xchg
int3
adc
popa
mov
lods
and
stos
jg
xchg
mov
mov
xchg
xlat
aam
inc
testb
popa
sbb
bound
sbb
sbb
xchg
pop
mov
or
mov
jb
xorb
cmpsb
addb
jmp
and
add
xor
loopne
add
testb
and
jmp
mov
dec
dec
push
gs
mov
ljmp
adc
fnstcw
fldenv
hlt
rcll
jbe
sahf
fcomp
mov
sub
or
inc
and
adc
sbb
ret
stos
fisubrl
jecxz
fistpl
addb
adc
mov
sti
insl
std
loope
xchg
imul
paddw
cld
rclb
in
das
mov
xorb
sahf
lock
leave
mov
push
ret
inc
jno
push
jle
imul
or
shl
adc
push
out
mov
inc
repz
inc
ret
rclb
push
mov
adc
in
scas
sub
push
loopne
jecxz
push
jns
jo
jecxz
add
popf
mov
bound
cmp
lret
cmpl
lods
cmp
sti
insb
jmp
xor
lret
ret
mov
or
scas
nop
push
fidivrl
iret
mov
xchg
inc
xor
pop
iret
mov
into
and
cmc
imul
xor
or
or
push
jbe
pop
ja
and
scas
xchg
call
iret
sub
add
imull
int
mov
test
mov
in
sub
add
aam
sarb
or
pop
fs
insl
fsubr
cltd
lahf
sub
lock
call
ja
pop
sub
in
dec
ss
push
push
push
bswap
rcr
jle
enter
sbb
cmpsl
jmp
or
out
pop
test
dec
push
add
push
mov
ljmp
mov
sbb
and
push
xchg
pop
push
icebp
jbe
xchg
push
pop
bound
jns
enter
aam
mov
inc
fs
cmc
scas
mov
les
add
fstp
push
test
aad
dec
push
jae
fwait
xor
icebp
adc
and
and
pop
push
popf
ficompl
jb
and
push
mov
test
inc
cmp
cmp
mov
data16
out
mov
mov
int3
add
dec
xor
aad
mov
mov
sbb
aam
sbb
fldenv
push
rcrb
mov
or
push
std
push
shll
push
nop
mov
xchg
incl
jno
cmpsb
push
shlb
ja
cmp
or
idiv
scas
int
adc
mov
out
pop
cmpsl
push
jmp
decl
out
lcall
gs
or
add
xor
bound
addr16
pop
shld
clc
or
sbb
and
and
aaa
loop
cmp
adc
mov
pop
push
int
out
out
imul
xor
xlat
sub
push
push
fwait
mov
iret
push
es
xchg
sbb
inc
imul
mov
dec
loopne
and
or
lret
mov
nop
fcoml
mov
cmpsl
inc
movsb
aaa
lds
mov
push
sub
xor
jnp
sti
xchg
std
jl
cmpsl
bound
mov
mov
add
or
cmp
jecxz
jle
xchg
lcall
xchg
dec
imul
add
subb
test
test
shrl
fstpl
loopne
inc
sub
iret
mov
lret
xchg
fwait
push
mov
insl
xor
jae
outsb
jnp
xchg
sbb
adc
cmp
ja
adc
cmp
das
mov
pop
jle
push
imul
rol
inc
sbb
xor
add
and
mov
xor
lcall
mov
rcll
into
xchg
call
pop
dec
inc
push
cmpsl
pop
movsb
iret
movsb
sahf
mov
jbe
inc
xchg
loope
stos
cs
in
std
mov
jae
pop
sbb
insb
jp
xchg
xlat
adc
mov
cmpsb
int
rcrl
and
sbb
mov
hlt
cmpsb
orb
pop
loope
cmpsb
nop
notl
jmp
dec
lods
pop
mov
movb
dec
incl
movsb
or
lret
das
loop
pop
movsl
jno
loop
mov
adc
push
jle
clc
pusha
cmc
addr16
mov
cld
pop
xlat
pop
xchg
mov
mov
adc
jbe
int3
sub
push
adc
inc
insl
sub
adcb
in
sbb
pop
divl
dec
push
xor
nop
mov
sub
adc
stos
inc
mov
sbb
mov
xchg
out
ficoml
cmp
mov
sub
sbb
rcrl
or
cmc
adc
cmpsb
pop
fld
leave
out
jne
mov
scas
push
sub
jl
lret
fxch
mov
jno
jge
ljmp
push
sub
mov
aad
xchg
incb
xchg
xchg
call
jg
in
sub
fldl
out
adc
add
sbb
hlt
fidivrs
mov
std
addl
pop
push
into
ss
fildll
and
adcb
fnstcw
js
lahf
adc
inc
jb
xchg
or
xchg
xor
adc
adc
call
cmp
lock
aam
das
push
loop
sbb
pop
pop
sub
mov
push
jnp
loope
aad
ret
les
inc
mov
adc
ljmp
sub
sub
sbb
jg
in
pop
test
int
inc
push
lds
sbb
in
pushf
cmp
sbb
mov
js
mov
enter
cltd
aam
xor
add
xchg
sarl
cld
movsb
sbb
push
add
push
clc
xchg
or
jne
or
jp
lock
lahf
cmp
push
sti
inc
iret
sub
add
and
jne
cli
scas
sub
adc
int
mov
inc
mov
mov
js
lods
jl
loopne
ljmp
mov
movsb
xacquire
sub
xor
lds
lret
add
jmp
orl
iret
sub
fs
lcall
ret
loop
xor
out
inc
inc
fstl
or
lea
mov
or
or
repnz
aas
in
push
xchg
cmpsb
rcrb
sbb
jp
xchg
movsb
repnz
ljmp
and
pushf
in
jns
mov
pop
xchg
mov
mov
sub
sbb
dec
adc
or
sbb
in
dec
xchg
pop
pop
inc
dec
ja
pop
int
int3
pop
jle
cmp
xor
push
lea
cltd
movsl
push
ds
aam
ss
ja
lds
sbbl
fdiv
pop
fwait
loop
cmp
xor
fstps
call
int
xor
and
ss
push
mov
mov
dec
push
shlb
movsl
out
scas
jg
jle
adc
arpl
sti
ret
lret
jge
adcl
jns
out
cmp
fstpl
xor
dec
leave
jo
inc
in
ret
mov
inc
stos
test
cli
xchg
mov
fists
xchg
adc
or
mul
adc
lahf
ja
jbe
sub
sub
in
mov
sbb
pop
movsl
mov
dec
icebp
pusha
das
xchg
dec
push
imull
mov
pop
clc
or
dec
mov
sahf
popf
sbb
jg
push
pop
popf
and
aad
cmpsb
and
mov
call
xchg
dec
fimull
pop
scas
data16
mov
lock
adc
ja
bound
popf
sub
adc
pop
loope
aad
mov
stos
xorb
push
dec
sub
inc
jb
and
xor
ret
test
movsb
mov
inc
xchg
in
inc
movl
sub
gs
inc
rclb
aaa
dec
adc
and
mov
jp
and
cmp
inc
mov
int
sbb
jb
sbb
loop
mov
mov
cmp
mov
pop
stos
into
adc
mov
dec
add
pusha
inc
xlat
mov
out
cltd
out
hlt
push
popf
rorb
mov
repnz
scas
sbb
test
loopne
je
lock
in
loope
in
shlb
sub
pop
xor
repz
mov
push
insb
and
add
and
cmc
inc
out
and
push
stc
xlat
mov
or
pop
out
add
aas
jb
jno
mov
ret
sub
ljmp
lret
das
std
push
out
or
jnp
push
sub
pop
add
pop
mov
ja
orl
jmp
pop
rolb
pushf
stc
push
and
shrb
testl
sti
testb
fwait
test
adcb
sbbl
push
lds
mov
ficoms
gs
pop
push
idivb
mov
mov
aam
push
xor
push
sub
inc
jle
push
repz
xchg
add
dec
inc
insb
pop
jl
lds
push
xor
push
pushf
icebp
sbb
pop
fdivrs
jbe
fisubs
inc
mov
pop
into
mov
inc
bound
hlt
scas
or
push
mov
imull
movhlps
out
add
pop
jne
mov
inc
rcr
out
mov
inc
adc
jo,pn
test
mov
insb
inc
push
pop
in
nop
cli
call
addr16
mov
jecxz
int3
addr16
jecxz
ficomps
xchg
inc
pop
pop
dec
adc
add
je
inc
inc
test
inc
mov
add
dec
mov
daa
pop
and
popa
dec
repnz
rcl
cmpsl
cli
sti
inc
xchg
cmpb
pop
stos
or
scas
xor
dec
fsubs
outsb
shrb
dec
xor
jnp
adc
cmp
and
out
inc
push
out
repz
mov
sub
push
push
push
mov
jae
mov
cld
mov
movsb
in
movsl
test
mov
faddl
and
fdivrp
cmc
add
stos
mov
sub
push
test
hlt
sbb
inc
mov
insl
xor
and
sbb
xchg
aaa
jno
jne
outsl
inc
and
mov
xor
out
and
sbb
imul
xchg
add
dec
bound
fdivs
inc
adc
mov
ss
addr16
cmc
and
repz
add
ret
add
xchg
or
push
jecxz
jecxz,pn
insl
cmp
sub
lods
xchg
pop
sub
or
xchg
cwtl
mov
clc
xchg
xor
pop
leave
jns
shl
test
sbb
enter
andb
and
test
jns
gs
or
lret
clc
and
test
dec
scas
cld
and
lods
scas
int
sar
or
bound
stos
sbb
sbb
icebp
mov
inc
cwtl
add
pop
daa
xchg
call
mov
imul
sbb
cs
push
adc
jp
dec
cmp
xchg
cwtl
mov
ljmp
idivb
loopne
mov
out
xchg
push
mov
mov
sbb
andb
addr16
cmp
aas
addr16
xchg
gs
in
mov
sub
mov
mov
cld
dec
mov
mov
ds
jge
test
xchg
push
inc
sbb
ficoms
insl
inc
dec
icebp
loope
ss
shlb
repz
pop
and
insb
xchg
pop
fstps
aaa
call
fnsave
fstpl
adc
sub
mov
pop
dec
inc
aas
or
mov
popl
and
aam
push
popf
data16
push
mov
ror
push
out
insb
pusha
xchg
push
std
adcb
movzwl
ss
fbstp
mov
sbb
jne
std
scas
in
jo
je
movsb
sbb
jnp
adcl
xchg
mov
int3
popa
mulb
push
int
xchg
inc
jmp
dec
jb
mov
mov
pop
fistps
adc
popf
mov
xchg
mov
test
mov
or
pop
sub
mov
sbb
mov
cmp
mov
sbb
sub
xor
and
inc
lret
push
jg
insb
jo,pn
adc
jp
jmp
pop
into
pop
push
lds
in
arpl
xchg
sub
fs
popa
mov
dec
sbb
push
hlt
arpl
pop
adc
in
stc
inc
ror
clc
push
and
aas
ret
adc
lea
jle
jo
mov
iret
xor
scas
repz
mov
adc
fidivrs
dec
pop
inc
mov
add
or
xor
int
dec
out
push
or
mov
js
test
fiaddl
sbb
jmp
sub
ds
mov
push
dec
clc
fwait
push
xchg
cmc
scas
in
lea
add
sbb
shll
jns
push
dec
dec
js
sbb
test
negw
repz
xlat
ja
imul
and
mov
cld
std
gs
sub
test
les
add
or
loop
mov
aam
xchg
xor
outsl
sbb
repz
ret
inc
in
jle
jo
jnp
mov
dec
lcall
pop
adc
imulw
mov
andb
mov
pop
sbbl
push
ss
and
add
dec
das
push
pop
mov
std
xchg
inc
jae
cmpsl
jno
scas
dec
vmread
aam
or
sahf
dec
mov
imul
mov
mov
mov
loopne
jmp
mov
or
out
stos
xchg
adc
xor
mov
aaa
mov
out
and
or
enter
hlt
arpl
mov
es
xchg
push
int3
jb
xchg
adc
lock
adc
pop
aaa
inc
nop
movsb
lret
gs
fiaddl
fucomp
and
call
mov
fdivl
dec
cmp
cmc
sub
dec
push
scas
mov
leave
jb,pn
cmpsl
in
rsqrtps
add
and
xchg
jp
inc
in
xrelease
shrb
outsl
sbb
mov
mov
dec
xchg
add
into
lods
pop
jns
nop
mov
xchg
jmp
shlb
cmp
es
fidivrl
adc
push
rorl
flds
xchg
ret
and
pop
mov
repz
rorb
sti
dec
les
inc
jecxz
cs
add
out
jne
jl
mov
xor
push
lods
push
xlat
pop
std
inc
xlat
aaa
in
jg
lods
push
orps
repnz
sarb
insl
cmp
sub
and
aas
jnp
push
xchg
inc
icebp
insb
stos
js
or
aas
mov
mov
mov
add
cmp
mov
cld
mov
xor
inc
push
xchg
sub
arpl
sbb
shlb
repnz
pop
sub
dec
mov
shlb
add
popf
aad
rorl
add
in
imul
loop
cmp
sbb
sti
push
pusha
inc
mov
xor
jns
dec
mov
lock
cld
adc
jbe
or
out
imul
hlt
mov
jp
mov
shll
loope
in
mov
fnsave
xor
and
xor
push
in
jnp
jle
lcall
out
rol
sbb
cli
lds
sbb
xchg
push
loop
leave
inc
add
shrb
shrd
enter
neg
cmpsb
std
int3
addr16
dec
sarl
or
test
insl
pusha
ja
test
sub
stos
mov
add
sub
cmpsl
add
sub
stc
and
xchg
fisttpll
ficompl
out
in
lea
aam
lea
orb
cmpsl
mov
pop
cli
lahf
mov
in
xchg
lds
into
add
std
stc
cs
les
ja
cmp
insl
fnsetpm(287
pop
sbb
or
xchg
lahf
ja
mov
and
icebp
xchg
inc
cmp
std
fstps
out
movsl
xor
addr16
pop
outsb
jmp
addl
andl
sub
pop
rcll
in
mov
push
je
mov
outsl
xor
add
add
and
push
xchg
mov
jg
inc
test
cmp
lret
negb
arpl
sub
cmp
xor
push
aam
outsl
loope
inc
push
inc
xchg
and
repz
lcall
pop
and
mov
xchg
loope
pop
shl
fiadds
fwait
push
xlat
pop
jb
popa
cli
aad
gs
mov
test
ljmp
jne
je
jno
mov
cmp
imul
pop
xor
stc
mov
inc
xchg
sub
mov
data16
in
inc
cmp
mov
fists
mov
inc
sbb
fldcw
mov
fwait
es
loopne
push
mov
sub
adc
push
cmp
lods
sbb
aaa
push
jle
xchg
popl
pusha
xorb
lret
xor
jnp
cmp
out
dec
notb
leave
jne
ret
aad
jb
push
mov
scas
or
and
push
outsb
insl
add
pop
cmp
pop
mov
fimull
aaa
inc
data16
add
popf
or
bound
sti
movsw
mov
inc
inc
inc
pop
push
ljmp
dec
dec
icebp
sub
insb
shrl
sbb
fwait
das
fistps
sub
pop
dec
fcmovnbe
test
cmp
mov
pop
out
cltd
push
ret
add
pop
xchg
movsl
push
xor
pushf
dec
mov
gs
cmp
jp
inc
icebp
jns
pop
jne
mov
push
movsl
fwait
cmp
call
dec
dec
pop
dec
mov
sub
sub
gs
sub
ljmp
ss
xchg
mov
rol
cld
or
push
pop
popf
cwtl
lret
fildl
dec
adc
in
cmpsl
sub
rcrb
adc
xchg
std
aam
cmp
adc
loopne
mov
mov
mov
jb
fwait
shlb
dec
xor
enter
jo
dec
or
lcall
jecxz
cmp
cli
sbb
add
in
push
scas
xchg
dec
inc
xchg
lret
jle
lods
mulb
mov
and
sub
popa
rclb
sbb
fmul
sahf
push
mov
and
in
movsb
outsl
out
push
adc
fldt
in
es
pop
add
add
jne
adc
stos
bound
or
popa
mov
stc
lret
add
xorl
push
dec
fidivrs
cmp
dec
fdivrl
push
andb
clc
pop
xchg
push
jmp
mov
ret
iret
pusha
test
das
mov
test
out
push
outsl
or
mov
pop
in
int
js
xchg
iret
sti
inc
ret
mov
cmpsl
movhps
iret
mov
sbb
jne
and
or
mov
push
push
aas
mov
in
dec
jnp
lds
rcrb
fsubrs
pop
gs
test
repnz
mov
pop
xlat
aaa
pop
les
mov
int3
and
jg
cmc
add
pop
mov
mov
out
xor
jl
inc
mov
test
lods
and
enter
daa
imul
adc
out
popa
add
add
jno
aas
push
sub
mov
rcrl
cmp
adc
or
loope
shrb
testb
push
mov
push
adc
add
out
ffree
mov
andb
sub
int
popf
idivb
mov
fsubrs
repnz
push
nop
inc
jp
mov
scas
stc
je
jo
mov
mov
je
jnp
pop
xchg
mov
mov
cltd
int3
xchg
cmpsb
cmp
jbe
ss
or
push
cli
lock
fs
dec
dec
xchg
dec
call
dec
int
xor
decl
jl
mov
in
xchg
push
pop
movl
pop
pusha
adc
cltd
or
outsb
call
add
sub
test
sbb
stos
or
add
imul
cmp
or
cmp
xchg
push
imul
jo
mov
jmp
insl
rol
jb
pop
test
test
rcrb
mov
into
jle
sbb
in
repnz
add
fdivrp
stos
into
sbb
rolb
push
sbb
sbb
pop
lret
lret
rcll
xor
mov
andb
arpl
mov
mov
push
stos
pop
shrl
frstor
int3
dec
cmp
sahf
pop
std
divl
cmp
mov
and
pop
aas
xor
sarl
push
cmp
pop
xlat
sbb
fldcw
call
push
lret
pushf
movsb
iret
out
and
add
pop
out
sti
lret
les
rorb
iret
push
xchg
ds
jl
ja
jae
repz
cltd
leave
cwtl
and
and
scas
fimuls
and
fstps
das
mov
mov
and
dec
lock
shll
add
ljmp
xchg
and
leave
xchg
fiaddl
jne
mov
xor
jmp
rcr
lahf
pop
aaa
jp
cld
push
or
icebp
cs
or
mov
push
sbb
icebp
js
or
and
cld
and
cwtl
push
mov
ret
cmc
cmpsb
out
pop
push
testb
sahf
pop
ja
push
pop
jge
mov
and
sbb
xor
jle
test
lahf
outsl
adc
ljmp
enter
pop
sub
sbb
dec
inc
stc
mov
pop
sub
cmpsb
loopne
or
adc
lahf
push
or
lock
cmc
mov
popa
cmpsb
inc
sub
mov
or
and
xor
xchg
xor
cmp
call
dec
mov
int3
inc
mov
lahf
push
xchg
cli
pop
push
push
leave
daa
mov
mov
es
cmp
jns
outsl
aad
test
cwtl
fs
outsb
cltd
mov
inc
add
das
dec
xor
loop
sbb
mov
pop
or
xchg
fcom
jnp
jecxz
pop
cmp
adc
mov
xlat
ss
jmp
mov
test
lret
popa
or
lock
lret
push
cmp
out
or
mov
mov
das
aad
fmul
lret
push
insl
hlt
sbb
int
inc
mov
sarl
out
movsl
pop
mov
nop
mov
sti
mov
leave
pushf
int3
inc
fs
hlt
xor
jmp
lahf
cmp
and
out
push
aas
inc
jp
dec
push
inc
lret
popf
xor
add
jae
cmp
push
scas
push
mov
data16
subb
shlb
lahf
inc
sub
hlt
jecxz
mov
mov
inc
ret
imul
jns
push
in
cmp
mov
xor
mov
fmuls
inc
sub
mov
adc
lods
jg
adc
sahf
mov
sarl
and
mov
mov
loope
push
roll
stos
cmc
cmp
xlat
stos
gs
ret
sub
ss
dec
js
insl
xchg
clc
add
xchg
cwtl
sbb
mov
xchg
cmp
in
pop
loopne
out
loopne
pop
adc
mov
cmpsl
dec
xchg
and
sub
in
mov
out
xchg
dec
push
inc
mov
mov
aaa
cmpsl
cmpsl
mov
ja
mov
shlb
jb
pop
lds
popf
aad
in
and
cmp
rcr
out
mov
cmp
cwtl
shl
xchg
lods
pop
int3
cli
ljmp
outsb
inc
test
sbb
out
dec
sbb
cltd
outsb
dec
loop
cmpl
mov
lret
cmp
ret
ljmp
xor
sbb
xor
sbb
movsl
pusha
popa
out
mov
repz
rol
cmpsl
lods
mov
popa
dec
lds
repz
das
dec
xor
std
and
ja
lcall
fs
out
and
loopne
rorb
cmp
push
lret
mov
in
xor
add
cmp
or
orl
adc
inc
bound
repz
mov
mov
shr
imulb
sub
testb
sub
xchg
sub
inc
fdivr
xor
mov
call
push
dec
iret
xlat
mov
jp
sub
dec
imul
jbe
cwtl
lret
mov
leave
pop
arpl
stos
push
push
jo
scas
addl
xchg
xor
scas
mov
mov
pusha
jae
test
jae
adc
mov
add
mov
arpl
std
mov
sub
arpl
jae
sub
xchg
mov
out
pop
dec
scas
xlat
inc
pop
or
xchg
das
syscall
pop
jmp
cmp
mov
repnz
mov
fldl
push
outsb
stos
dec
cld
out
jb
stc
rorb
xchg
lret
push
sti
ret
icebp
cltd
popa
adc
stos
jge
outsl
scas
cwtl
ret
push
inc
jg
or
mov
std
mov
out
shr
add
js
lock
test
mov
and
ja
add
loopne
mov
je
enter
jecxz
cmp
pushf
test
pop
rolb
out
pop
cmp
int3
pop
mov
int3
into
jne
pop
sub
mov
jns
push
mov
or
fldenv
push
pop
push
pop
outsl
sti
out
push
inc
push
repnz
xchg
and
aad
sbb
pop
outsb
cmpsb
push
or
std
sbb
insb
jns
pop
cs
pop
pop
add
outsb
push
inc
lea
push
pop
aas
int3
les
adc
les
loopne
mov
and
push
mov
jnp
cwtl
test
cwtl
mov
dec
sbb
arpl
adc
xor
mov
and
sbb
ficompl
fdivp
add
cmp
jnp
mov
or
or
divl
mov
fcmovu
mov
cmp
into
clc
scas
inc
out
jns
gs
fldt
fwait
cmp
push
or
es
std
test
add
lods
cmp
sub
roll
mov
xor
call
sbb
and
mov
fcoml
fnstsw
lods
add
mov
rorb
push
repnz
rcrb
jnp
mov
jmp
call
xchg
inc
dec
loopne
aam
push
add
insl
push
stos
mov
rcrl
sahf
out
mov
inc
xor
mov
and
jns
mov
test
add
sub
mov
insl
movsl
rorl
inc
insl
add
int3
int
loopne
outsb
popf
in
cmp
dec
insb
push
leave
cmpsb
sub
pop
stos
gs
loopne
cmp
xlat
adc
test
inc
gs
push
mov
popa
cmp
jecxz
les
xor
aad
xlat
aad
adc
xorb
lea
popf
jae
xchg
repz
lock
xor
mov
pxor
ja
pop
pop
in
fwait
push
imul
push
xchg
rclb
ds
out
and
inc
dec
popa
inc
cwtl
sti
push
daa
cmp
ja
rcrl
js
data16
out
adc
repnz
addb
mov
lods
incb
or
arpl
lcall
pop
lods
jmp
fmul
popa
dec
push
mov
inc
ss
divl
push
loope
cmp
mov
outsb
jno
data16
dec
xchg
adc
rorb
xchg
sub
enter
xor
enter
dec
jecxz
stos
or
das
push
lock
pop
bnd
mov
popl
push
push
out
gs
pop
xchg
popa
lods
sbb
adc
mov
enter
cmp
mov
fsub
cmp
mov
iret
sub
lahf
testb
sub
out
pushf
in
inc
scas
jns
or
movsb
jmp
jne
pop
insb
add
mov
pop
or
cltd
adc
mov
xchg
sbb
sbb
dec
sbb
rclb
jge
cmpsb
dec
pop
or
icebp
popf
in
pop
xor
mov
cld
inc
js
loop
mov
xor
loope
outsl
sub
lcall
fidivl
ret
xor
jp
repnz
mov
pop
jge
out
sarl
hlt
sub
mov
mov
xor
orl
add
pop
cmp
adc
pop
mov
icebp
ljmp
ljmp
imul
sarb
clc
jo
sub
sub
mov
xor
add
cmp
psubusw
lds
and
outsl
fistl
jle
jo
or
push
lret
add
jg
rol
mov
jns
pslld
addr16
mov
sbb
inc
jge
lcall
int3
ficompl
aam
test
je
dec
repnz
fcompl
stos
pop
mov
inc
aas
rolb
sbb
cmp
inc
pop
xchg
push
mov
dec
xchg
pop
lock
mov
jb
sub
test
test
dec
xchg
sub
fstpt
mov
cmp
daa
jp
pop
fsubrs
cmp
cmpsb
cmc
dec
adc
xor
aad
leave
add
inc
cwtl
iret
test
shrl
test
mov
test
inc
popa
lcallw
sub
and
xchg
lret
dec
outsb
mov
and
mov
into
xchg
lahf
xor
adc
mov
outsb
sub
push
inc
cli
xchg
cmp
cwtl
nop
add
out
pop
jns
pop
mov
add
or
rcl
aaa
lods
xor
jge
jb
jae
daa
call
mov
sbb
sbb
push
sbb
xchg
bsf
cli
sbb
dec
jecxz
jo
lods
pop
inc
or
stos
xor
mov
jl
mov
push
rol
mov
jle
insb
sub
jl
or
mov
lods
sbb
push
cmp
push
xchg
loopne
jmp
icebp
mov
sub
aam
add
clc
rorb
minps
pushf
cmc
mov
pop
cmp
mov
sub
mov
inc
ja
jp
pusha
enter
push
call
sub
imul
push
mov
jo
mov
insb
xlat
or
dec
cwtl
jno
rclb
mov
mov
sti
fsubr
lahf
cltd
dec
cmpsb
push
ret
cmp
mov
mov
fisttps
lea
add
test
outsl
adc
mov
les
es
mov
push
inc
add
pop
ss
push
jns
jmp
add
in
add
adcb
addr16
fcompl
ja
pushf
dec
fildll
jp
sub
sub
int
jl
aam
rclb
add
push
jns
ja
inc
ljmp
or
and
mov
test
fnstsw
sbb
jecxz
dec
lds
ss
ret
bound
add
ss
mov
test
cmc
bound
fwait
call
jns
mov
jb
cmc
or
xor
lods
or
mov
repz
push
pop
push
inc
out
pop
push
test
insb
pop
testl
ret
xchg
dec
xchg
out
mov
inc
xor
not
cmpsb
jle
nop
jae
cmp
inc
mov
and
jb
mov
scas
jle
testb
addr16
mov
stc
ja
and
mov
adc
and
push
xchg
cvtdq2ps
or
ret
sbb
jle
push
testb
and
imul
xor
daa
addr16
stc
push
pop
divl
jp
cmpsl
int
xchg
scas
fstpt
or
cmp
xchg
push
out
xchg
aam
xor
lahf
xchg
pusha
xchg
rclb
les
imul
insb
lock
iret
popf
pop
imul
out
adc
or
rclb
inc
es
dec
xchg
mov
jae
cmpsl
mov
mov
cmpsb
xor
lods
cmp
scas
icebp
dec
cmp
and
ret
mov
inc
mov
addl
fiadds
jno
jecxz
adc
std
into
and
test
mov
push
imul
scas
mov
pop
push
push
pop
int
notb
loop
push
es
mov
cmp
pop
mov
movsl
in
sbb
and
adc
xor
or
push
mov
cli
xor
xchg
xorb
sbbb
mov
push
lret
stc
inc
fxch
fdivrp
inc
sahf
cvtps2pi
int3
pop
fwait
lret
fs
shrl
jecxz
scas
paddb
stos
mov
int
sbb
int3
pop
xchg
push
mov
in
push
push
ret
loope
jb
jl
mov
dec
mov
adc
jp
cld
out
dec
or
aaa
inc
dec
push
xchg
lret
xor
or
dec
fs
cs
and
cmc
mov
cmp
push
call
pop
push
jb
adc
mov
xor
dec
neg
jle
fistps
repnz
in
jmp
imul
loopne
cli
inc
xchg
push
pop
push
fisubrl
adc
ljmp
loop
push
or
aam
rdtsc
or
add
inc
dec
dec
aam
dec
in
cmp
into
sahf
lcall
mov
loop
xor
adc
decb
xchg
lcall
imulb
sbb
loope
aam
or
pop
dec
jl
add
ss
push
jb
pop
lahf
xchg
es
pop
xchg
movsb
pop
add
cmp
xchg
cmp
stos
xchg
adc
cmpsb
les
or
je
dec
arpl
cmpsl
fimull
pop
ja
and
sub
dec
cs
mov
sbb
ljmp
bound
nop
inc
in
adc
nop
pop
jnp
cmpsb
cmpb
push
cmpl
lret
in
scas
add
jmp
or
cmp
fwait
pusha
int
cmpsb
xor
cmpb
cmpsb
push
das
xlat
movsl
mov
add
ljmp
pop
bound
push
in
andb
outsl
pop
and
sti
cs
pushf
mov
and
xor
lcall
mov
pop
xor
stc
pop
add
mov
xchg
pop
notb
dec
outsl
insl
cmpsb
cmp
mov
mov
mov
fidivl
fs
into
mov
mov
pop
pop
cmp
enter
and
fwait
pop
xchg
jno
hlt
sbb
or
dec
pop
outsl
fstps
cld
push
inc
repz
dec
xor
scas
andb
pop
xchg
pop
dec
imul
jne
fwait
loopne
sub
mov
xorl
sbb
stc
mov
push
fwait
test
cmpb
sub
jle
sbb
inc
xchg
sbb
push
sub
mov
dec
xor
dec
in
jae
pop
insb
ljmp
dec
fisttpll
outsb
cmp
cmp
or
mov
or
push
mov
aam
sbb
add
lcall
or
xchg
mov
int3
cmp
outsl
pop
ja
shll
aad
dec
push
pop
sti
shrb
divl
cmp
pop
mov
in
arpl
sub
jge
push
xor
add
ljmp
loop
lcall
dec
mov
cmp
xlat
lock
jno
call
lret
dec
push
sbb
push
lret
test
jg
or
in
mov
jnp
repnz
insl
lahf
sahf
enter
lods
xor
and
dec
fcomip
loopne
out
mov
mov
push
xchg
sar
test
rolb
push
dec
movsl
sub
dec
aas
ret
popf
aad
pop
xchg
pop
lret
xchg
cld
xchg
incb
shl
dec
push
shrb
and
jo
lea
fldl
sub
adc
sti
mov
sub
out
sub
add
ja
or
imul
aad
gs
pop
xchg
arpl
push
inc
pop
push
adc
mov
stos
or
or
loop
xchg
popf
leave
xchg
pop
fwait
jp
or
jne
mov
nop
add
dec
lea
stc
pop
pop
mov
sarb
mov
js
fld
cmp
or
ret
push
pop
pop
xchg
and
or
inc
inc
clc
mov
insb
inc
jo
mov
fisubrs
sub
push
iret
lods
adc
dec
cmp
mov
jns
pop
push
shld
out
cmp
scas
vpinsrw
mov
ret
jo
ljmp
jae
cmpsb
fwait
lcall
inc
ja
sahf
dec
fiadds
das
mov
push
nop
sbb
push
gs
mov
arpl
mov
stos
xchg
inc
shl
pop
in
lret
outsl
xor
or
movsb
dec
pop
scas
sub
int3
aad
and
mov
dec
call
dec
mov
lret
xchg
out
shrl
gs
sub
push
or
add
scas
cmp
clc
mov
stc
pop
push
cmp
pop
push
incl
mov
push
mov
jae
xchg
stos
dec
cli
sbb
xchg
sub
lods
pop
xchg
std
hlt
xchg
cmp
repz
dec
cmpsb
clc
popf
pop
loop
sti
lock
lds
jecxz
cld
sbb
in
and
arpl
shll
inc
repnz
sub
xchg
mov
jno
jmp
loope
adc
or
mov
cmpsb
push
mov
clc
sbb
lret
inc
ss
stos
xchg
ja
aam
xchg
push
jmp
cmpsb
and
cmp
fbstp
cmpsl
add
push
push
and
pop
jmp
dec
hlt
je
mov
inc
dec
cmp
clc
xchg
adc
int3
loope
adc
xor
repnz
dec
stos
mov
rcr
fiadds
sbb
lea
xchg
aaa
jle
mull
add
mov
jg
sbb
pop
aas
std
and
lods
lock
cmp
in
inc
or
adcl
jae
or
std
test
sbb
popa
jg
fnsave
push
mov
sub
lret
and
push
loope
cmpsb
add
or
jne
jbe
jns
rolb
movsl
fnstenv
fcompl
xchg
mov
shr
pop
scas
sbb
inc
scas
loope
mov
shlb
cmpsb
and
fdiv
add
jge
dec
notb
add
adc
test
pop
out
pop
mov
clc
stc
pop
mov
and
mov
int
iret
adc
push
pop
repz
push
test
fsub
test
in
in
cmpsl
mov
mov
sbb
cwtl
sbb
div
push
add
inc
jg
push
int
mov
inc
daa
dec
js
ret
into
mov
push
mov
mov
nop
lods
sub
xchg
test
rcl
loop
mov
xchg
fdiv
and
fisttpl
mov
inc
pop
testb
mov
cld
mov
or
fwait
mov
mov
add
cmp
cmp
lods
push
xchg
fdivs
aas
push
lds
dec
int3
xchg
std
ret
in
or
pop
jge
pushf
mov
xchg
push
adc
nop
int3
lret
push
pop
clc
repnz
pusha
mov
nop
adc
mov
movsl
jge
mov
inc
jmp
sub
insb
jbe
lock
andb
pop
rcl
sub
add
test
push
out
loop
fsubrs
jne
push
xchg
dec
xor
jo
les
mov
or
sub
xorb
pop
cmpsb
fiaddl
std
cmp
add
lea
pushl
inc
push
mov
into
push
js
inc
mov
sub
das
adc
mov
pop
roll
insl
sub
lods
fs
es
daa
imul
cmp
mov
inc
push
je,pt
int
adc
add
movsl
jecxz
mov
jl
jne
and
push
hlt
push
lcall
mov
mov
mov
lcall
mov
sbb
push
into
mov
mov
repz
push
enter
ds
xchg
dec
mov
jl
std
in
lods
pop
jp
inc
xor
imul
mov
jecxz
dec
sub
pop
cmpsb
mov
cmp
sub
inc
push
and
push
sbb
scas
jg
in
add
inc
daa
sbb
and
cli
mov
mov
cmpsb
mov
imul
stos
or
mov
test
dec
xchg
fadds
imull
sub
loopne
lcall
cmp
adc
test
insl
add
scas
or
daa
and
mov
push
lret
mov
push
loop
add
cld
cmpsl
sub
dec
fisubs
lods
test
or
jns
mov
fisttpl
fwait
loopne
pop
cmp
inc
call
push
es
rcll
push
es
stc
xchg
lcall
pop
js
ss
sarl
xor
xchg
pop
jmp
rcr
lock
or
mov
xchg
sbb
icebp
push
cmp
iret
addr16
push
cmp
cmp
fs
inc
xor
jmp
jge
and
pop
movsb
inc
pop
add
jg
or
lods
dec
jbe
jl
int
jmp
cli
pop
lcall
cmp
jecxz
push
dec
icebp
data16
push
adc
sbb
cmp
adcl
adc
js
hlt
pop
or
lock
adc
dec
cmp
dec
adc
fs
test
cmpsb
cmpsb
add
aas
into
and
ds
outsl
lods
or
fwait
xor
loopne
jae
popa
push
adc
add
pop
sbb
or
mov
dec
dec
in
push
xor
jecxz
adc
xchg
cltd
push
sti
ds
mov
dec
daa
imul
addr16
lds
and
mov
mov
popa
mov
jl
push
cmpsl
testl
mov
mov
mov
pop
xlat
and
stc
mov
loopne
push
popf
test
nop
int
stc
jmp
fld
jl
sub
cld
jmp
push
ss
cmp
cmpsl
jbe
lock
jns
pusha
push
icebp
push
cli
and
out
rcrl
dec
cmpl
repnz
pop
dec
ss
xchg
adc
testb
inc
int3
fiaddl
cmc
nop
scas
mov
lahf
jns
repz
mov
lods
mov
icebp
or
cwtl
or
in
enter
xor
jae
mov
int3
jle
aad
movsb
repnz
fucomp
and
scas
sbb
jecxz
cli
xchg
popf
imul
and
hlt
scas
xchg
pop
in
add
jo
sub
mov
aam
or
and
sub
or
xor
xchg
stos
das
dec
mov
cmp
sub
cmp
jge
scas
fstp
inc
mov
cmp
outsl
jecxz
mov
add
cmpsl
xchg
scas
in
repz
mov
nop
je
mov
aas
imul
mov
rolb
mov
and
clc
dec
mov
fnsave
jl
cli
outsb
cmp
or
or
xor
jne
ljmp
adcl
jo
or
xchg
pop
shlb
inc
js
add
andl
ror
imul
test
fst
add
push
mov
int3
lea
cmp
dec
sub
add
jb
mov
outsb
mov
mov
mov
or
or
push
jno
xor
fisubs
sbb
rclb
iret
mov
clc
std
add
xor
sbb
push
shl
insb
dec
pop
fbstp
jg
add
lds
cmc
push
adc
push
stos
mov
roll
or
int
push
and
cli
mov
adc
stos
push
push
sbb
insb
sti
jle
and
mov
out
and
xor
dec
fdivrs
mov
jae
js
xor
pop
jo
jno
mov
cmc
and
orl
jmp
and
movsb
push
loope
push
mov
adc
lock
dec
jecxz
jbe
es
hlt
scas
xlat
outsb
mov
mov
out
fsts
addb
aas
je
jg
lret
add
stc
cmp
movsl
lret
mov
push
lds
mov
aad
cmpsb
xor
sbb
jbe
call
gs
jae
sbb
stos
mov
dec
sahf
movsb
shlb
aam
jbe
cwtl
aad
dec
and
sub
insl
pop
jb
jecxz
sub
cli
popf
mov
inc
or
andl
imul
sahf
pop
mov
fwait
test
push
dec
push
out
popa
xchg
icebp
test
jmp
test
jge
ja
rolb
pop
mov
popa
sbb
cld
xor
out
xchg
pushf
mov
fwait
lret
or
in
out
xchg
fwait
out
das
add
pop
rcl
fsubl
xor
pop
xchg
aaa
xchg
inc
add
or
bound
cmp
xchg
stos
and
jmp
mov
add
insb
pop
mov
xor
out
dec
int
mov
dec
cli
xlat
rcll
fistps
rcll
dec
lcall
push
cmp
or
or
rorb
mov
pusha
daa
and
push
ja
or
sbb
mov
fistl
es
mov
pop
dec
lock
cmp
push
sub
pop
xor
mov
fs
jl
fwait
scas
jle
cmp
pop
imul
and
in
js
sar
jae
push
es
add
cli
adc
push
xchg
mov
fildl
in
ret
addr16
test
add
xor
hlt
out
push
and
push
or
inc
int3
add
mov
xchg
mov
test
cmp
xchg
xor
add
fcmovu
js
inc
mov
loop
and
es
sbb
and
pop
jle
imul
repz
icebp
inc
mov
aam
in
push
mov
lock
and
cs
mov
out
jmp
in
pop
xchg
cmp
dec
pop
into
je
in
cmp
cmp
xchg
jmp
sbb
xor
in
js
or
jnp
or
xchg
adc
jge
jp
or
or
push
mov
or
dec
aas
jle
es
push
xchg
fistl
mul
inc
fsts
pop
xchg
mov
adc
rcrl
mov
mov
pop
pusha
add
shlb
std
mov
jb
incb
mov
jne
stos
push
sub
add
divb
es
scas
xor
pop
and
adc
in
ret
sbb
stc
sbb
std
xchg
repz
sbb
mov
ret
or
imul
and
dec
mov
xor
mov
mov
dec
enter
in
sub
sub
std
pop
jecxz
lds
inc
lea
inc
xor
jg
sbb
jmp
sbb
jg
test
enter
and
and
add
out
and
cmc
mov
pop
addr16
lahf
lods
dec
add
lods
inc
mov
mov
aas
adc
call
xchg
adc
ja
pop
jnp
fdivl
xor
outsl
test
mov
ds
mov
jo
add
fstp
mov
mov
cld
out
testb
jle
xor
ds
repnz
dec
scas
or
adc
nop
int3
imul
lds
cmp
pop
rorb
jl
push
jb
out
ret
push
lock
call
out
cwtl
fists
out
xchg
sbbb
loop
out
js
test
jno
adc
movsb
fisttpl
testb
xor
stos
pop
xor
out
and
ljmp
pushl
leave
sbb
repz
movsb
lods
dec
or
add
sti
adc
jne
and
adc
cmove
fisubl
xlat
pop
out
lock
fs
test
ljmp
rcrb
movsb
cmp
and
popa
aam
mov
add
sbb
jb
or
enter
andb
es
shll
jmp
aam
push
push
daa
pusha
aaa
push
mov
cld
xlat
les
cli
repz
fwait
test
scas
cmpsl
lods
fcmovnb
or
pop
sahf
xchg
adc
sbb
mov
mov
ret
fs
xor
xchg
xlat
push
imul
add
mov
mov
andl
es
adc
mov
dec
hlt
dec
mov
add
mov
xor
and
add
mov
mov
sbb
push
mov
and
fisubl
push
stos
je
and
dec
bound
sub
movsb
loopne
sti
sti
xor
cltd
xchg
sub
xor
int
leave
imul
push
movd
and
std
mov
cltd
xor
js
inc
adc
lahf
into
es
outsb
sub
jo
decl
ficompl
nop
dec
fsubl
dec
imul
inc
loopne
inc
cvtpi2ps
rorb
lret
or
movsb
mov
jns
daa
aaa
jnp
pop
icebp
sbb
mov
inc
xlat
and
arpl
in
jl
mov
xchg
fldt
daa
mov
adc
shlb
rcrb
lcall
pop
arpl
jne
xor
xor
mov
xchg
cmp
sbb
inc
jne
sbb
stc
lock
jmp
mov
mov
push
sarb
mov
or
or
shr
enter
rcr
dec
das
cmp
sahf
jb
mov
and
mov
cwtl
or
outsb
imul
nop
sbb
fwait
popf
daa
movsb
iret
xchg
cmpsl
sbb
sbb
cmp
int
sub
push
push
cmp
ret
add
shr
ds
cmp
sub
sahf
repnz
into
jnp
xchg
xor
test
cmpsb
dec
scas
dec
in
cmp
outsl
repnz
cld
add
cmp
ret
bound
mov
sbb
and
into
pusha
mov
jmp
cs
sti
add
mov
fimull
rorb
les
xor
fs
cmp
sub
xchg
jo
movsl
outsl
push
addr16
mov
push
mov
lods
mov
clc
or
cwtl
add
test
mov
mov
lret
sbb
ficompl
cmp
mov
or
pop
in
ja
mov
leave
mov
inc
lcall
lods
rcr
inc
jmp
imul
fnsave
push
call
or
sub
add
hlt
sub
cld
je
stos
andb
orl
jb
test
repnz
or
fstl
in
cmp
icebp
inc
out
insl
mov
es
adc
cltd
fucomp
xor
mov
aas
clc
int
sub
mov
fs
fbstp
int
inc
imul
push
jns
testb
popf
in
insb
inc
shl
sbb
xchg
movsl
or
dec
fiadds
xchg
mov
xor
fmul
xchg
jo
leave
pusha
imul
mov
mov
lret
xorl
fadd
ds
clc
lret
inc
mull
jns
cmp
movsb
lret
andl
add
rorb
cltd
arpl
or
addb
sahf
xchg
lahf
inc
mov
movsb
pop
pop
or
cmp
dec
out
cltd
cltd
cmp
push
ljmp
ja
jge
mov
mov
inc
xchg
lret
lock
mov
aaa
lcall
jmp
and
adc
cmp
bound
js
lret
mov
mov
dec
jb
mov
xchg
test
fdivrl
les
clc
roll
pop
loopne
shll
sbb
in
pop
xchg
iret
ror
mov
lretw
push
fldcw
xlat
cmp
sti
ljmp
add
and
andl
scas
sub
repnz
ret
and
nop
pop
mov
test
das
and
jb,pt
inc
dec
cmp
test
sahf
inc
call
push
mov
cld
lcall
daa
inc
cld
push
data16
movsl
insb
data16
rcrl
out
call
iret
push
dec
incb
and
ret
clc
xor
das
xchg
andb
mov
repz
cli
lods
clc
insl
jecxz
mov
mov
ljmp
inc
pminub
arpl
mov
insl
xchg
push
clc
pop
lahf
cmp
mov
inc
sbb
aaa
mov
mov
fscale
gs
rclb
mov
test
mov
jl
sub
mov
in
shlb
mov
fmull
call
xlat
push
orb
cmc
jne
inc
xchg
add
jne
leave
scas
int
xchg
in
jp
jns
cmp
shll
das
lea
adc
add
and
mov
mov
inc
je
daa
jbe
fistpll
movsl
inc
mov
mov
pop
push
loop
es
jge
testl
lret
sbb
shrl
jecxz
xchg
lea
jne
aas
push
ss
mov
js
pushf
mov
sub
pusha
push
int
jbe
dec
mov
sub
leave
cmc
cmp
in
into
inc
sbb
add
adc
inc
stos
xor
inc
adc
test
add
dec
jo
nop
sbb
mov
pop
pop
pop
arpl
rclb
or
ret
adc
cwtl
lea
mov
push
scas
stos
mov
jmp
sub
cmpsb
mov
jl
cwtl
stos
sbb
dec
sub
in
mov
pop
push
pop
out
shl
add
push
pop
push
sub
cmp
pusha
inc
add
outsb
imul
hlt
mov
popa
push
outsb
mov
stos
lahf
pop
movsl
clc
pop
xchg
or
sbb
or
cmpsb
and
xchg
in
mov
xchg
dec
adc
push
fiaddl
dec
add
flds
mov
insl
jns
cmp
xor
jmp
movsb
mov
call
les
es
in
sbb
adc
scas
cmc
pop
movsb
sbb
ja
sub
insl
fcomp
push
inc
mov
jecxz
jp
ss
je,pt
lret
int3
repnz
test
ret
add
jmp
stos
push
enter
jge
pop
dec
xlat
sti
gs
lds
out
sub
mov
bound
std
mov
mov
rorb
fs
push
cmp
dec
push
aad
jle
sti
sahf
es
int3
mov
or
xchg
scas
sbb
add
sahf
cmp
mov
pushl
ja
pop
mov
out
jl
lds
jb
repnz
pop
out
pop
sbb
int
ds
pusha
lods
mov
pop
pop
ss
pushf
adc
repnz
sbb
inc
mov
fisttpl
pop
int3
in
xchg
or
inc
ffreep
popa
and
fcmovne
sar
mov
test
mov
xchg
dec
mov
in
rcl
jae
and
fstps
dec
mov
pop
test
testl
xor
aas
je
int
mov
mov
jb
aas
ja
pop
xchg
lret
mov
dec
mov
fs
pusha
inc
movsl
cltd
movsb
and
dec
popa
ret
idivb
push
adc
rorb
push
push
cmc
mov
jl
xchg
dec
sub
xor
pop
push
scas
add
cmpsl
cld
or
mov
out
inc
ss
das
imul
xchg
sahf
addb
outsl
xchg
sbb
jle
add
add
imul
xor
loope
outsb
stos
add
std
mov
jl
cltd
jno
mov
xor
in
jl
xchg
icebp
mov
pop
jmp
jge
xchg
or
ja
xor
xchg
mull
enter
fstl
inc
daa
out
loope
pop
inc
stos
rcrb
or
mov
popf
orb
xlat
and
shlb
in
sbb
lret
jo
inc
hlt
aaa
cwtl
pop
add
lcall
cmp
sbb
outsl
and
inc
imul
imul
push
mov
imul
mov
dec
sub
mov
clc
popf
cmc
jnp
jge
inc
cltd
mov
bound
push
cmp
sti
cmc
ret
fwait
inc
mov
mov
push
jno
in
fstpt
or
xchg
xlat
loopne
lds
cmpl
sub
daa
cmp
mov
xchg
fbld
xor
and
out
pop
cmp
les
pop
lock
cmp
jmp
inc
std
xchg
dec
xchg
sub
xor
xlat
fbld
mov
sti
insb
xchg
cltd
movsl
rolb
mov
push
mov
sbb
mov
ljmp
enter
fucomip
fidivs
xchg
mov
inc
mov
inc
lea
aas
clc
cmp
inc
add
mov
push
xchg
add
cli
fnstsw
jne
in
into
jo
and
sub
adc
pop
arpl
xchg
adc
cmpsl
xlat
cs
inc
arpl
inc
jae
pop
hlt
cmc
xchg
ret
out
in
jo
stos
push
aaa
lea
xchg
dec
iret
arpl
inc
divb
sub
mov
dec
sbb
je
jae
pop
and
loope
clc
push
fwait
adc
xor
ja
jo
sbbb
fcoml
jecxz
mov
mov
push
cli
jle
dec
adc
popa
pop
stc
dec
mov
lock
sbb
aaa
mov
mov
mov
gs
fmul
jle
leave
inc
in
fstps
adc
rcrb
cmc
pop
sti
add
xor
add
cmpsb
aam
pop
cmp
aaa
xor
test
push
outsl
and
rcll
sub
out
shrb
push
hlt
jl
iret
pop
lods
in
imul
stos
shl
sbb
jbe
mov
add
sbb
testl
ror
xchg
sbbb
fstpt
in
inc
enter
dec
cmp
mov
and
pop
xor
call
fs
bswap
jmp
add
xchg
pop
mov
add
clc
push
das
std
out
arpl
int
dec
pop
mov
outsl
daa
jne
cmpsb
push
fistl
ss
add
js
jmp
lock
xchg
dec
cmc
rorl
testl
and
and
test
imul
inc
fiadds
scas
das
jp
jmp
pop
outsb
xchg
dec
add
loopne
sbb
rclb
shll
mov
inc
lret
pop
sbb
iret
out
push
adc
test
sbb
bound
adc
xor
in
adc
mov
mov
mov
mov
in
outsb
mov
lahf
lods
xchg
inc
jp
jge
pop
push
sbb
pop
fisubs
es
jno
std
push
mov
mov
mov
orl
dec
mov
rcrl
jmp
push
lods
mov
push
or
and
add
stc
cli
in
push
lods
je
adc
out
mov
cmc
sub
mov
xor
mov
sbb
inc
pop
addb
cwtl
rcrl
push
xor
imul
insl
pop
ret
or
xchg
rclb
mov
mov
pop
loopne
add
fs
mov
cltd
mov
lret
dec
or
rcrl
test
nop
inc
dec
rcl
sub
jno
and
jnp
fisubrs
xchg
xor
xchg
inc
jg
adc
dec
cmp
mov
push
pop
or
sbb
ds
push
xchg
cmpsl
add
sbb
movsl
jge
int3
sti
pop
push
aad
es
shll
dec
push
adc
es
repz
pop
ljmp
pop
lahf
pop
mov
neg
adc
lea
sub
cmp
dec
sub
stos
push
and
mov
loope
mov
loopne
jbe
cs
and
outsb
loopne
dec
mov
imull
or
xor
pop
jp
jge
xor
sub
je
mov
push
scas
loopne
xor
fwait
jl
inc
adc
xchg
rcrb
imul
int
dec
xchg
lcall
sub
sub
mov
adc
pop
stc
movsl
jnp
add
shll
cmpsl
cmc
jb
bound
xor
lock
xor
or
pop
pop
ret
xchg
cld
ret
xchg
jnp
jle
sahf
pop
stc
adc
cmp
pop
cmp
lahf
xchg
in
inc
out
mov
inc
and
inc
mov
jns
cmp
dec
clc
fmul
or
add
and
push
aaa
jno
inc
fimull
inc
lods
mov
hlt
pop
push
push
outsl
jno
imull
imul
std
adc
pushf
sub
jg
call
sub
ljmp
jnp
push
std
xor
inc
and
insl
test
xor
dec
in
cld
aam
fiadds
in
pop
pusha
jns
ret
and
ficoms
cmp
dec
cmp
xor
mov
lods
insl
mov
into
cmp
jge
inc
sub
popa
arpl
or
mov
outsl
fucom
inc
pop
push
test
popa
fwait
in
in
es
out
mov
cltd
mov
bound
dec
call
dec
sbb
sarl
hlt
ret
outsb
in
dec
scas
cmp
in
into
out
or
sbbl
out
loope
out
sub
shl
insl
or
movsb
mov
lock
or
out
xlat
fstps
jmp
adc
jo
mov
pop
xchg
lcall
xor
mov
inc
push
imul
movsl
sbbb
enter
jg
dec
cld
and
mov
aam
sub
jnp
or
in
mov
fldcw
xchg
jle
sub
dec
adc
pushl
shlb
jge
xchg
mov
xor
mov
jmp
call
sub
add
xchg
es
mov
ret
sbb
fs
inc
shr
mov
sahf
mov
inc
test
pop
xchg
xchg
inc
sbb
jns
cmp
jmp
addr16
divl
cli
sarl
pushl
call
and
out
inc
xor
movsb
stos
sbb
inc
push
cmp
call
leave
mov
das
adc
std
lods
out
xor
inc
mov
xchg
pop
repnz
mov
mov
xor
repnz
and
lea
enter
inc
aaa
dec
xchg
push
pop
inc
std
jecxz
and
mov
in
mov
fiadds
mov
insl
pop
rol
stc
sti
mov
outsl
das
xor
sub
add
jo
or
mov
cmp
lods
lcall
mov
xchg
mov
or
or
xor
into
or
sub
sahf
mov
mov
inc
xchg
sub
push
incb
and
push
push
out
ja
andl
and
sub
pop
hlt
jecxz
and
orl
sbb
mov
mov
and
jp
jo
push
mov
lds
shrb
sbb
or
mov
inc
in
lcall
mov
into
mov
dec
ja
jno
inc
pop
add
subl
lods
add
jnp
push
out
jo
out
cltd
js
insb
fildl
mov
lds
add
pop
fnstenv
pushf
cs
xchg
sub
fistpl
inc
jmp
call
push
out
fs
aam
int3
push
nop
pop
push
push
rorl
lcall
add
xor
in
mov
call
mov
inc
leave
clc
xor
lea
and
lods
mov
test
sub
adc
testl
je
xorb
jp
push
insl
fiadds
les
push
les
andl
mov
adc
fcoml
addr16
sub
repnz
lea
mov
arpl
jae
fidivs
data16
fisttps
leave
and
inc
xchg
adc
mov
in
mov
loope
cmp
popf
aaa
jnp
int
jp
aas
loope
es
push
jb
loope
ds
shll
iret
ret
mov
pop
mov
imul
shl
pusha
sub
fwait
and
in
mov
sahf
cmp
sbb
das
aam
jo
lods
mov
inc
mov
aam
mov
mov
sbbb
xchg
fwait
out
popa
sub
repnz
jo
or
aam
ds
mov
mov
adc
push
pop
in
scas
arpl
addr16
outsb
movsl
subl
into
test
xchg
stos
negl
aam
xchg
lret
mov
lock
dec
push
add
frstor
ret
xchg
adc
add
mov
xchg
cmc
lock
cli
mov
movsl
aas
es
or
sarl
sub
mov
cwtl
xorb
jp
jmp
ds
jnp
ja
addb
dec
cmp
mov
outsb
jb
mov
xor
push
or
dec
sub
fists
xor
sbb
and
jb
push
sbbl
and
in
inc
xchg
iret
or
cmp
dec
test
push
mov
cmpsb
mov
rolb
popf
pop
roll
and
mov
or
sbb
sahf
lds
jbe
sbb
adc
in
test
mov
jb
cmpsl
repnz
aaa
stc
stos
repz
mov
push
ja
sarl
inc
add
push
xchg
xchg
daa
enter
pusha
int
mov
xchg
mov
fisubl
loop
jg
pop
icebp
bsf
iret
movb
inc
mov
loope
add
jmp
rorb
inc
cli
hlt
orb
cld
scas
and
mov
jmp
mov
ja
aam
xchg
jbe
push
loop
jae
add
and
pop
lahf
leave
dec
sti
mov
outsl
jnp
adc
addr16
out
mov
in
dec
mov
pushf
cltd
out
in
inc
push
pop
xlat
and
daa
dec
add
jg
repnz
push
leave
jno
sub
mov
mov
add
jg
mov
repnz
sub
xchg
dec
outsb
clc
in
decb
loop
dec
out
pop
xor
and
xorl
repz
repz
inc
or
mov
cmp
adc
out
leave
fbld
sub
les
add
loopnew
pop
cmpsb
jno
pop
push
jbe
push
cmp
ja
or
lret
cmc
xchg
push
iret
dec
xor
mov
push
cld
sub
sti
popa
mov
jmp
push
push
inc
sub
gs
fsubl
add
mov
dec
xchg
jmp
ficoms
mov
aas
adc
pop
ret
mov
fldenv
and
or
cmp
push
lods
xchg
adc
out
jmp
and
icebp
pop
lds
scas
jg
inc
and
push
lods
add
insb
lcall
pop
cmp
sbb
lcall
mov
outsb
rorl
xlat
adcl
and
inc
or
mov
in
fisttpll
enter
hlt
mov
mov
pop
xor
jo
orl
scas
ss
cmpsb
je
jae
sub
lods
jp
xchg
xchg
shrl
xor
stos
mov
movl
mov
and
repz
sbb
faddl
mov
mov
mov
stos
loop
and
mov
mov
push
loop
fimuls
stos
mov
out
out
jge
pop
xchg
test
dec
push
in
xor
adc
xor
dec
dec
sub
test
movsb
imul
cmp
xor
aam
fildl
mov
shrl
ss
inc
sti
cmp
mov
mov
dec
cmp
or
and
xchg
adc
repz
jle
adc
movsl
push
cmc
xchg
jecxz
dec
dec
push
jo
xchg
jns
pushl
orl
add
cs
xor
fcomps
push
in
je
inc
push
and
cmpsb
popf
mov
pop
sub
inc
jl
insl
inc
jp
loope
mov
fs
push
or
in
mov
and
pop
lods
ds
jl
xor
and
cmp
mov
mov
lahf
adc
dec
daa
sub
mov
nop
lahf
mov
sub
jo
mov
xchg
test
fs
cmp
pop
push
call
aam
sub
sub
stos
and
sub
xor
dec
mov
addb
hlt
jbe
push
inc
dec
mov
cwtl
daa
mov
or
mov
popa
lcall
ds
mov
ljmp
jne
xchg
push
das
clc
push
aas
jmp
xor
aam
mov
scas
and
jb
mov
push
sbb
in
stos
cmp
add
cmp
or
test
or
int
xchg
pop
dec
fwait
loope
das
test
xor
or
cmp
mov
lea
ret
lret
js
add
dec
cmpsb
popf
rorb
push
mov
fmulp
aaa
cmc
popf
orb
loope
xchg
cmp
xchg
jo
push
jb
or
xchg
sub
mov
lret
loop
push
pop
clc
push
push
pop
or
lds
jns
ror
fldcw
push
mov
pop
xorb
in
push
fwait
cmpsb
and
pop
inc
push
xchg
dec
incb
cmc
sti
dec
std
sbb
dec
push
push
cmp
lahf
cmp
xchg
call
enter
jmp
push
mov
cwtl
insl
movsl
dec
les
daa
sbb
sbb
dec
cmpsl
add
popf
das
or
pop
xchg
mov
ds
dec
testb
je
pop
icebp
lret
lcall
mull
add
sbb
or
jbe
add
mov
jmp
imul
pop
dec
and
mov
adc
sub
adc
jns
fiadds
shrb
into
lods
mov
lea
xchg
std
add
inc
push
cs
cli
pop
cmp
lods
fisubl
pop
iret
dec
adc
sarl
shr
sub
enter
shll
adc
movsb
pushf
mov
jno
mov
lea
es
scas
lcall
adc
outsb
jo
jecxz
insb
sub
fs
sub
jp
mov
xor
mov
mov
ret
not
fiaddl
push
je
int3
or
push
idiv
idiv
sub
dec
mov
mov
mov
sbb
iret
idivl
xchg
mov
std
insl
je
cwtl
data16
aas
mov
lods
cltd
dec
addr16
loopne
pop
push
inc
shll
xor
inc
leave
mov
dec
jo
sbb
xor
jg
mov
daa
xchg
in
aam
imul
out
adc
scas
xchg
arpl
fldt
mov
std
xor
int
addr16
jbe
into
mov
and
pop
leave
dec
xor
inc
and
insl
pop
jno
lret
xlat
les
je
jae
add
mov
or
jns
fistl
ljmp
icebp
or
xor
jmp
xlat
push
stc
jbe
mov
push
js
or
xor
pusha
test
jbe
in
test
jae
repz
push
dec
mov
mov
add
inc
xchg
icebp
mov
sub
movsl
xchg
rorb
cmp
pop
jl
push
or
pop
mov
push
mov
mov
jmp
jne
int
cli
xor
in
jae
push
mov
jno
mov
cmp
lret
sahf
pusha
inc
push
pop
div
test
xchg
and
pushf
imul
adc
fisttpl
jle
rorb
cwtl
enter
int3
mov
adc
test
pop
or
xchg
sub
lret
lret
lea
inc
jmp
push
push
xchg
je
inc
cmp
sub
pop
fwait
sarb
cs
inc
and
sbb
ss
xor
pop
sub
iret
pop
jnp
sbb
xor
or
pop
iret
adcl
imul
sbb
or
in
lret
push
test
out
subb
lcall
jmp
or
sub
sbb
call
mov
add
push
push
xorb
sbb
jle
rcrl
inc
or
dec
nop
add
mov
xchg
outsl
pop
dec
fsubp
mov
das
in
push
jne
jo
inc
jg
jg
subb
xor
addb
cwtl
popf
daa
pop
mov
ss
jnp
outsl
push
addr16
xor
scas
xchg
cmp
lea
jmp
xchg
addr16
lret
and
mov
scas
out
out
in
or
mov
les
or
jmp
fidivs
imul
mov
loopne
sti
shll
add
push
mov
lock
fnstenv
cli
jo
imul
in
mov
add
mov
ljmp
lods
or
lret
in
jns
movaps
sbb
frstor
jmp
adcl
loope
fildll
sub
scas
mov
fdivr
data16
jno,pn
inc
jle,pt
adc
pop
pusha
pop
mov
test
pop
inc
pop
imul
das
mov
stos
push
test
mov
and
push
jmp
push
ss
mov
rcrb
adc
inc
insl
mov
sbbb
sarl
shll
or
or
enter
ja
or
xor
jo
adc
les
pop
and
in
das
icebp
ffree
ret
mov
lds
hlt
fisttpll
jnp
mov
insb
mov
fdivrs
adc
je
sbb
pop
ja
sub
in
in
cmp
shrb
enter
push
out
loopne
idivb
out
je
or
loop
stos
mov
mov
adc
nop
imul
push
dec
test
cmp
cmp
stos
ret
sbb
orb
jl
dec
inc
or
jle
pop
ja
jb
dec
insb
jno
outsb
sub
scas
lret
pop
mov
aas
adc
fiadds
cmp
aas
fidivl
outsl
mov
add
idivb
daa
fadd
roll
in
adc
cmpsl
dec
clc
xchg
out
sbb
xchg
fstl
outsb
sbbl
push
and
pop
loopne
mov
in
outsb
addr16
jp
add
xor
lahf
stc
dec
shrb
cmp
in
jnp
movsl
jae
lret
mov
sbb
jmp
sbb
loopne
sbb
andb
push
sub
adc
push
sub
insl
jle
or
push
shll
mov
jecxz
pop
jns
repz
into
movsl
std
cmp
adc
scas
or
push
cmc
mov
dec
sub
cmc
dec
mov
jg
das
jge
cmp
repz
std
enter
jp
xchg
movsl
mov
rclb
push
push
ret
inc
add
sahf
aad
fdivr
add
inc
cli
mov
or
in
mov
stos
fwait
test
xchg
arpl
or
push
je
ret
push
stos
test
addb
in
or
sbb
and
and
cwtl
mov
in
fsubs
adc
lods
jbe
mov
mov
cmp
jne
jge
xor
cld
out
shlb
test
jns
adc
lcall
or
cltd
sahf
repz
add
out
sbb
popa
pop
sub
lcall
data16
cmpsb
xchg
mov
and
cmovb
or
or
mov
stc
mov
shr
loop
xchg
mov
jle
and
fstps
xor
roll
inc
movsl
xchg
mov
push
or
mov
adc
shr
loope
jle
lds
ret
add
sti
insl
inc
adc
xchg
lods
mov
call
mov
xor
js
add
rcr
cmpsl
inc
cltd
ret
adc
sub
inc
add
into
and
cmp
mov
or
xchg
movsb
mov
push
push
mov
cltd
push
cwtl
in
cltd
notb
cmp
sti
leave
xchg
dec
outsb
push
mov
inc
outsl
mov
xor
add
hlt
loope
xor
ret
mov
cwtl
ss
outsb
cmp
jbe
stos
insl
out
rcrb
jg
es
in
xor
adc
mov
imul
or
outsb
add
imul
xor
sbb
cmp
adc
mov
mov
inc
call
rol
lods
pop
mov
or
add
lcall
mov
mov
outsl
adc
aaa
inc
xchg
dec
ficoms
rolb
mov
or
mov
dec
xor
lret
pop
adc
or
fstps
jne
pop
stc
inc
mov
fistl
xor
scas
push
mov
dec
jb
cmp
lcall
dec
mov
jno
ret
stos
sbb
mov
das
sbb
cmp
xor
and
or
repnz
and
adc
xor
fwait
inc
pop
add
lods
ljmp
movsl
arpl
mov
push
xchg
xchg
mov
jmp
sub
int3
std
sbb
push
loope
push
mov
and
sahf
xchg
add
orb
lds
and
mov
in
aaa
dec
dec
xlat
std
mov
gs
push
push
js
inc
in
mov
es
xor
loop
shl
pop
cmp
aas
icebp
inc
lock
rorb
rorl
jae
mov
sbb
xchg
sbb
sbb
xchg
jnp
negb
out
enter
push
out
xor
sub
sbb
in
les
sbb
xor
popf
push
pop
inc
dec
jns
and
xor
add
jl
jb
int3
push
cltd
mov
jbe
fcomps
in
mov
clc
push
sti
pop
mov
sbbl
or
stc
and
repz
pop
int
repnz
mov
pop
push
mov
fstpl
xor
sar
xor
jae
mov
cwtl
cmp
icebp
xor
or
inc
sbb
or
inc
and
ret
ja
pop
cmc
in
mov
scas
sub
sbb
gs
xchg
jg
icebp
fildl
hlt
loopne
call
fs
fldlg2
mov
jp
xchg
or
sti
mov
aaa
adc
pop
idivl
sbbl
lods
fbstp
or
scas
out
or
add
dec
sub
pop
dec
push
jl
inc
xchg
notb
add
cmc
mov
add
push
call
push
scas
das
push
sbb
dec
pop
pushf
sub
xor
les
or
mov
mov
cmc
sbb
or
das
jne
cwtl
addr16
lock
mov
xor
bound
mov
pop
dec
or
xor
xor
add
sbb
mov
cmp
and
mov
inc
xchg
std
add
cmc
ret
xor
and
rcrl
loop
fucomp
jl
pop
adc
aaa
xchg
cmp
daa
sbbb
minps
popa
es
pop
stos
sbb
add
inc
lcall
outsl
jb
inc
mov
fldl
and
imul
mov
imul
add
fildll
or
push
scas
faddl
test
inc
imul
nop
jae
push
sbb
xlat
test
push
out
repnz
mov
push
dec
or
stos
xchg
test
imul
mov
adc
cltd
out
jmp
lret
loop
iret
xchg
inc
or
dec
pop
cmpsl
adc
xchg
call
or
pop
jle
xor
mov
insl
shrb
test
cmpsb
test
and
das
add
nop
test
push
test
mov
sub
lret
daa
sub
and
push
sbb
cmp
jg
test
cmp
test
mov
pop
inc
fidivrl
cwtl
adc
repz
push
jge
lods
xor
cld
jecxz
mov
mov
dec
mov
popf
das
or
ficoms
inc
mov
arpl
mov
cmp
bound
mov
push
lcall
aaa
mov
jae
jno
add
out
sbb
mov
stc
aas
movsb
imul
mov
xor
pop
pop
inc
cmpsb
jbe
inc
out
sbb
mov
arpl
dec
push
rclb
pusha
ds
loope
cmp
mov
mov
pop
xchg
sub
dec
inc
aas
mov
add
scas
in
mov
fidivrs
dec
push
int3
sti
repz
test
es
stos
ljmp
mov
shll
xor
f2xm1
ss
xor
pusha
cmp
mov
lahf
pop
mov
pushl
sbb
lods
imul
jmp
out
aas
push
std
dec
mov
fsubl
aas
dec
jle
test
jg
pop
inc
rol
loope
addl
mov
mov
add
push
add
cs
icebp
mov
pop
dec
repz
negl
pop
iret
sub
xchg
jnp
in
dec
shll
adc
xor
adc
stos
or
loope
leave
inc
sub
popa
mov
or
test
jne
jecxz
push
jns
adc
adc
aad
popa
leave
cmpsl
lret
cmpsb
out
std
xor
push
sbb
dec
adc
lcall
setnp
jle
pop
outsl
sti
add
sbb
adcl
inc
addb
mov
jp
xor
jnp
xor
and
inc
outsb
movsb
mov
adc
aaa
stc
arpl
popf
pop
inc
test
lahf
cmp
pusha
dec
xorl
cltd
movsb
mov
fdivrs
xchg
std
fwait
inc
inc
sub
mov
fdivrs
mov
pushf
cmp
sub
enter
jmp
jge
cwtl
adc
mov
mov
pushf
aas
push
out
push
aas
xchg
xchg
push
fisttpll
push
lock
lcall
and
fildl
cld
jo
dec
inc
push
nop
mov
push
mov
add
cmpsl
ror
inc
pop
ficompl
sub
insl
dec
sub
sub
jo
jnp
arpl
pushf
leave
nop
shrb
xchg
jno
xor
cmp
mov
and
mov
leave
jle
jecxz
jns
and
cmpsb
repnz
outsl
mov
into
addr16
push
jae
and
fldl
lea
xchg
pop
adc
pop
lret
pushf
adc
push
inc
xor
fidivrs
mov
je
add
jl
adc
and
mov
add
pop
fadd
mov
push
sub
lds
test
mov
xchg
std
mov
mov
mov
sbb
aad
sbb
int3
fs
mov
idivb
jno
leave
stc
jb
push
addb
es
xchg
in
aas
push
mov
stos
stos
adc
jns
dec
and
idiv
jne
aas
test
ret
xchg
jno
sahf
and
mulb
add
add
cmc
cmp
stc
xchg
adcl
int
jecxz
mov
adc
fdiv
aaa
into
jecxz
shlb
ljmp
lcall
sub
sub
insb
xchg
out
mov
or
test
mov
cmpsl
xchg
aaa
xchg
push
mov
pop
add
jo
mov
lock
cltd
push
repnz
mov
jo
aad
cmpsl
push
dec
addr16
jns
cmc
sbbl
mov
xchg
xor
sbb
pop
cmp
imul
clc
pop
aad
data16
repnz
and
aaa
and
jae
scas
lods
in
mov
dec
sbb
dec
add
mov
xchg
aas
sbb
popl
scas
cli
rcll
mov
pop
pop
cltd
inc
sub
scas
enter
or
scas
sub
mov
cmp
jecxz
mov
xor
cmp
sub
mov
lods
aaa
idivl
incb
out
jns
movsb
mov
nop
mov
cmp
dec
cmpl
pop
out
int3
sbb
ljmp
sub
push
xor
loop
das
xchg
xchg
outsl
mov
divl
xchg
xchg
mov
push
repnz
jl
cli
pop
jge
lock
test
decb
icebp
lahf
test
inc
test
cmpsl
jae
pop
clc
push
mov
pop
fwait
mov
sahf
dec
jl
loope
out
in
decb
mov
inc
mov
push
jp
shlb
dec
inc
pop
aaa
adc
insl
cmc
mov
lds
lea
lahf
jg
leave
fadd
rclb
and
gs
scas
mov
add
adc
not
or
mov
aam
fcomp
sub
test
inc
and
js
loop
in
push
fadd
stos
jmp
mov
mov
fidivrl
push
jg
sbb
sbbl
mov
into
mov
jb
cld
or
js
jecxz
mov
cmp
pusha
testb
enter
cmpsb
into
add
movb
lods
aaa
sub
sahf
adc
outsb
fidivs
and
fldl
lods
or
pushl
cmp
push
inc
mov
test
dec
cmp
push
movsb
push
call
sti
stos
pop
and
adc
dec
adc
nop
imul
sti
fsts
loopne
xchg
stos
xchg
inc
dec
out
les
inc
pop
adc
jae
jp
outsb
xchg
aaa
stos
mov
cmp
sub
shll
mov
pop
insl
fdivrs
inc
daa
cmp
sub
adc
adc
sbb
xchg
adc
pop
jle
xor
subb
in
push
dec
or
cmpsl
xchg
das
ds
lock
sub
das
inc
sub
jmp
push
mov
xchg
aas
xor
cli
jp
jmp
and
jo
sub
sbb
add
sub
fucompp
dec
sub
add
sub
jmp
jne
xchg
ret
cmp
mov
cmp
scas
mov
addr16
aaa
hlt
jecxz
inc
js
inc
or
cmp
lret
js
mov
leave
xor
mov
sbb
add
movl
mov
rorl
or
adc
or
mov
fdivrl
pmaxub
xlat
enter
push
scas
sub
gs
imul
mov
xchg
cmp
jmp
sub
xchg
fwait
jnp
xor
push
aam
test
or
mov
adc
cltd
aaa
sbb
mov
mov
inc
cmp
xor
xchg
dec
jp
into
fucomi
inc
and
ret
data16
pop
adc
push
call
movsb
call
lret
xchg
outsl
mov
xchg
pop
mov
add
sahf
pop
and
orb
cld
mov
insb
leave
add
repnz
cmp
jmp
outsl
sbb
sub
mov
lcall
dec
movsb
cld
sub
and
sbb
sub
lods
into
int
scas
mov
test
out
cmp
and
lret
test
push
mov
lea
sbb
stos
out
lock
pop
dec
jmp
loope
mov
jge
scas
popa
movb
imul
add
lcall
dec
inc
xor
rorb
call
sarl
fistl
not
sub
test
sub
or
jl
leave
sbb
std
jecxz
inc
sub
in
je
jb
loopne
inc
stos
js
ret
out
fdivs
jle
push
jmp
loop
push
sub
lock
out
mov
push
push
mov
out
js
xor
repnz
add
stos
jecxz
les
lods
push
fiadds
fbstp
shll
ror
out
lret
inc
dec
call
cmp
adc
jp
add
out
mov
cld
push
pop
pop
sbbb
negl
out
jb
test
and
scas
gs
popf
add
negl
xchg
xchg
push
pop
je
dec
xchg
mov
mov
jo
out
call
inc
cmp
push
int3
aas
imul
xchg
jg
popf
lods
sub
jmp
pop
data16
sarb
test
scas
add
mov
lcall
iret
jge
lahf
mov
fisttpll
fcmovbe
mov
sub
cmp
ret
mov
divl
xor
sbb
push
cs
and
test
out
arpl
xor
dec
jae
sub
mov
fs
mov
dec
in
outsl
mov
jg
fldt
cmp
or
fcoml
xchg
sub
cmc
mov
out
fmuls
es
daa
add
inc
int3
in
or
cmp
insb
adc
out
mov
in
push
mov
cmpsb
pop
loopne
lret
xchg
add
nop
mov
dec
pop
or
pushf
cmp
iretw
lds
lea
bound
xchg
hlt
sbb
xor
in
xlat
jmp
xchg
cld
pusha
mov
xchg
lret
ficompl
fs
test
fcomps
imul
jle
mov
out
repz
shlb
fsts
mov
xchg
ss
je
aaa
adc
in
mov
mov
sbb
pop
push
insb
rol
jecxz
pop
fwait
mov
sub
push
in
hlt
das
aaa
add
xchg
mov
mov
daa
push
enter
mov
in
fst
and
push
pop
je
mov
lret
in
mov
adc
out
xchg
xor
in
nop
xor
inc
bound
pop
cli
dec
or
icebp
xor
iret
ds
adc
cmpsl
call
jnp
pusha
call
popa
push
lock
pop
mov
test
into
mov
sbb
sub
rolb
lds
repz
cld
fs
out
adc
xchg
mov
mov
jl
sbb
test
jno
jno
mov
adc
ret
mov
lret
and
lret
fbld
mov
insb
sub
add
repnz
decl
imul
fcmovbe
stc
and
movsl
add
insl
cs
popa
and
mov
daa
inc
mov
cmpsb
cs
or
leave
stos
fcoml
jnp
or
jne
mov
outsb
data16
call
outsl
fst
cmp
int3
das
inc
sbb
stc
test
jno
push
mov
fldz
cwtl
xor
nop
negl
rcll
repnz
cmc
adc
orb
pop
lds
dec
jle
inc
insl
pop
xor
div
mov
in
out
frstor
cmp
int3
shlb
or
aaa
stos
jae
stos
lock
or
mov
xor
or
sbb
pop
or
imul
shlb
icebp
ret
mov
int3
or
xor
cmp
add
jne
imul
insl
jne
dec
testb
adc
loopne
in
aad
ffreep
ror
lods
mov
add
sub
sbb
push
ds
mov
add
jp
leave
add
cmp
scas
mov
adc
in
fsubrl
fldenv
pop
jno
nop
xor
sbb
dec
inc
sbb
lock
xchg
pop
stos
dec
pop
jl
adc
push
call
pop
mov
movsl
push
sbb
fadd
stos
les
ret
scas
add
inc
xchg
jne
xchg
rcr
jne
push
fistps
cli
int3
or
mov
test
jns
jno
outsb
or
setb
and
fwait
clc
jmp
in
adc
inc
cli
icebp
mov
dec
pop
pop
jo
out
dec
pushf
daa
fistpll
add
fcmovnu
push
repnz
pop
test
jge
jmp
pusha
sbb
add
pushf
jo
sahf
xchg
loopne
mov
cltd
clc
fisttpl
mov
cmp
mov
fidivs
addl
ret
pop
xor
push
lock
mov
dec
shl
out
ja
jne
ret
leave
mov
sub
mov
xor
xor
nop
jle
psubsw
pop
adc
in
lea
xchg
arpl
cmp
sub
imul
mov
pop
stos
xchg
ret
dec
inc
shrl
ret
mov
or
int3
pop
es
dec
rorb
or
jno
dec
jl
je
jns
rorb
jns
push
push
mov
rorl
in
sub
add
jb
daa
cmp
call
es
xchg
xchg
or
out
lret
jecxz
inc
ret
mov
inc
bound
ja
pusha
jbe
xlat
push
cmp
add
pop
ja
jecxz
mov
jmp
jns
dec
inc
jmp
push
xchg
lock
gs
and
sahf
sub
in
cmp
clc
add
or
cmpsl
mov
jb
mov
popa
jns
test
dec
add
lods
popf
inc
pop
cld
push
cmp
int3
pushf
cmp
cmp
fstps
sarb
iret
xchg
cmp
insb
in
std
pop
jle
jae
push
aad
outsl
push
fnstsw
jg
outsl
loope
push
add
fildl
aaa
sbb
test
loope
push
jo
xchg
call
push
daa
lock
push
subb
mov
adc
lock
stc
cmp
jp
icebp
mov
int3
fs
cmp
dec
xchg
ljmp
jmp
adc
jns
ja
lea
jno
pop
aaa
inc
aad
mov
movl
mov
cltd
xchg
mov
and
scas
xor
aas
mov
mov
push
mov
push
je
and
mov
inc
pop
insl
push
iret
lcall
out
xor
pop
das
jg
divl
xorb
jns
xchg
push
dec
mov
mov
loop
mov
lahf
lods
add
or
mov
adc
push
lea
push
xor
hlt
mov
lcall
adc
movsb
xor
lret
daa
fcoms
pusha
int3
sbbb
aam
fdiv
popa
std
sbb
xchg
mov
mov
dec
adc
ja
cmp
cmpsb
mov
pop
out
es
mov
lahf
inc
hlt
aas
jb
jle
add
gs
scas
mov
sti
mov
mov
imul
sub
mov
fldt
in
push
scas
cmp
sbb
push
inc
loope
hlt
add
push
jne
dec
sub
shll
adc
icebp
in
xor
sub
loopne
and
ja
push
sbb
pop
sbb
push
repz
adc
mov
ds
pushf
movd
push
stos
outsb
push
cmc
push
pop
inc
xchg
sar
cmp
mov
xor
les
dec
lret
jnp
pop
decb
rcrl
movsl
mov
and
mov
mov
arpl
push
add
push
xlat
pop
cmc
test
inc
sub
and
movsl
popa
or
lret
fst
xor
sbb
aas
mov
call
push
out
repz
fsubrl
push
pop
cld
shl
mov
orl
push
adc
movsb
add
invd
push
inc
cmp
out
xor
fs
push
fs
insl
dec
dec
adc
cs
aaa
into
mov
cmovns
shlb
enter
cltd
lcall
fists
adc
std
loop
notl
lock
mov
and
cmc
mov
clc
rcr
mov
stc
push
lds
fwait
fwait
ss
jb
ja
jno
sarb
repnz
mov
mov
gs
mov
push
sbb
in
sbb
daa
scas
cmp
in
mov
test
push
or
ljmp
cmpb
lret
xchg
jns
or
mov
cmp
lock
imul
xor
push
loop
mov
cmpsb
cmp
xorb
shll
icebp
inc
push
and
popf
add
inc
imul
jg
lea
sbb
std
xchg
add
icebp
fcomps
jle
sub
jne
fmuls
fcoml
xor
out
call
cmp
lods
or
push
movsb
or
decb
add
pop
cmp
movsl
cmp
mov
sub
dec
int
dec
dec
cmpsl
xor
xlat
dec
jbe
aam
fistps
mov
and
imul
pushf
push
xor
out
cmc
js
mov
sbb
jns
sbbl
ss
push
mov
mov
jns
fidivrs
jp
cld
sti
ljmp
std
sub
pop
aas
mov
push
inc
int3
or
gs
enter
test
dec
pushf
jmp
ljmp
jle
mov
mov
lods
adc
in
iret
cmpsl
push
insb
sub
fldcw
mov
sbb
sahf
nop
rorl
push
lods
or
decl
out
test
xchg
sbb
cmp
push
and
cmp
dec
push
loope
mov
pop
adc
mov
int
in
shl
cmc
dec
xor
sub
sahf
es
jp
sbb
add
mov
push
sub
loop
icebp
jbe
push
fwait
imul
cld
add
arpl
push
aam
jae
xchg
fmul
inc
and
jnp
insl
push
stc
sub
pop
jnp
add
adc
sahf
iret
int
push
sub
jmp
pop
into
fcom
xlat
test
bound
xchg
push
cmp
stc
and
mov
jno
shlb
and
mov
sub
in
loopne
xlat
insb
add
pop
dec
movsb
xor
cmpsb
xchg
cmp
rclb
test
add
pop
or
or
jg
jp
push
cmp
mov
mov
stc
add
fcomps
out
sbb
or
int3
inc
push
ja
popa
leave
inc
lcall
insb
inc
inc
cli
insl
out
xor
sub
jb
inc
into
adc
push
fists
pusha
in
xchg
add
sbb
dec
lahf
mov
inc
ss
cld
and
mov
pop
ds
mov
xchg
jbe
mov
fstps
xchg
mov
cmc
xor
add
and
sub
lea
sbb
mov
push
loop
cmpsb
mov
jb
mov
cmc
sub
inc
sbb
xor
adc
je
push
sbb
dec
pop
dec
stos
aad
or
adc
xor
xor
cmp
divl
ljmp
push
xchg
sbb
adc
data16
xorl
push
test
mov
addr16
andb
in
lods
mov
les
repnz
and
pop
popf
push
add
lret
mov
push
mov
movsl
jp
xchg
xor
cld
inc
pop
lahf
xchg
mov
cli
add
cmp
mov
jge
scas
movsb
and
jge
mov
loopne
popa
cmp
fnstcw
push
sbb
fnstcw
aam
testl
cmp
inc
out
icebp
es
push
pop
out
and
ja
pop
and
fs
popf
insb
fbld
mov
pop
scas
int
lock
mov
adc
nop
popf
pop
add
push
int
push
out
pop
and
jo
ret
loope
xchg
cwtl
stos
imul
push
fmuls
push
sahf
pop
lods
add
imul
pop
push
sahf
rcrb
add
cmp
fwait
mov
je
nop
adc
adc
movsl
roll
add
mov
out
pusha
int3
jae
int3
inc
lahf
data16
rcrb
sbb
or
push
mov
cwtl
iret
lcall
lock
push
jne
jne
ja
shlb
arpl
and
mov
stc
inc
jns
cltd
movl
out
push
push
scas
outsl
aaa
ds
pop
decl
inc
sub
push
repz
xchg
jne
ret
arpl
sub
pop
dec
gs
cmp
jnp
ret
xchg
in
dec
ja
dec
hlt
outsb
iret
sub
repz
or
mov
mov
sub
rcrl
push
sub
cmpsb
insl
cltd
jmp
or
mov
in
mov
cmc
inc
lods
push
adc
stc
and
mov
xor
cmp
jno
mov
ss
scas
stos
insl
xchg
cmp
popf
das
mov
fcomps
and
cmp
testl
shl
cwtl
lret
pmuludq
out
push
mov
pop
mov
cs
pop
pushf
push
inc
mov
or
mov
bound
inc
cmp
daa
pop
inc
sub
dec
add
daa
mov
mov
adc
sbb
dec
add
mov
icebp
jg
lods
arpl
insl
mov
clc
mov
xor
rcrl
and
stos
cmp
sub
out
dec
or
ret
adc
lcall
aas
add
dec
cmp
scas
in
xlat
stos
ss
scas
adc
push
jg
jmp
inc
pop
sbb
jae
mov
xorl
pushl
in
dec
cmp
sbb
xchg
fwait
ds
push
hlt
dec
mov
popf
in
dec
mov
pop
sbb
mov
out
out
cli
push
loope
das
and
cld
dec
pushf
and
ret
loope
jno
dec
xlat
stos
and
xchg
push
add
sub
movsl
fcomps
xchg
out
mov
into
xchg
xor
ret
inc
xchg
cli
xor
fcomp
fsubs
std
incl
jmp
adc
imul
pop
pop
out
mov
pop
dec
push
dec
shlb
daa
lock
mov
sti
sbb
jl
jae
lcall
inc
mov
xor
xchg
fisttpl
cltd
inc
inc
mov
imul
xor
add
mov
repz
push
or
jbe
mov
lods
int3
jge
and
sub
out
dec
std
push
dec
js
xor
pop
dec
out
or
in
or
lods
lret
and
lahf
jecxz
fs
dec
mov
les
lret
add
cmpsb
data16
dec
loope
xor
and
dec
xlat
insl
mov
xor
sub
lret
sub
in
sub
mov
lods
mov
cmpsb
insb
in
addl
sbb
aad
mov
aas
jle
sub
int3
ss
jae
dec
adc
push
loope
add
pop
incl
sahf
sbb
imul
xchg
leave
mov
popa
mov
mov
mov
xchg
shrb
cmp
in
jbe
sub
leave
popf
fnstsw
pop
cmp
mov
xchg
in
inc
test
sub
xchg
cmp
cmp
lahf
lea
inc
mov
sub
pop
ss
out
xor
cmp
xor
sbb
push
ds
insl
inc
ljmp
mov
and
pop
adc
push
cmp
xchg
push
mov
cmpsb
iret
test
mov
mov
adc
mov
mov
fnstsw
push
mov
pop
test
das
call
loop
dec
push
push
fsubrl
popa
cmpl
pusha
and
push
aas
adc
inc
dec
mov
sbb
jecxz
sbb
mov
iret
and
jmp
xor
mov
add
bound
xchg
insl
xchg
inc
mov
js
mov
xor
mov
xorb
mov
js
stos
call
les
scas
cmp
out
bound
cli
pop
adc
popf
sub
sbb
faddl
daa
outsb
jae
push
fsts
mov
aaa
pop
cmp
negb
inc
mov
pop
jbe
roll
ret
cli
sbb
mov
xor
sti
mov
lea
loopne
adc
pop
pop
addr16
xchg
outsb
mov
movsl
jle
mov
pop
imul
ss
fxch
pop
sbb
test
lret
xor
pop
mov
pop
jb
mov
dec
mov
insl
dec
pop
or
jle
pop
mov
xchg
out
iret
lcall
and
jbe
xor
aas
repnz
ds
imul
test
sub
push
insl
adc
je
outsb
pop
enter
iret
data16
mov
cmp
push
adc
imul
push
or
jl
pop
jge
fstps
xor
jp
sbb
imul
lods
pop
repnz
ljmp
fisubl
std
cmpsb
hlt
add
or
call
adc
xor
fs
xlat
hlt
cmpsb
repnz
xchg
inc
sub
aad
push
movsl
test
outsl
fsts
push
mov
into
mov
pop
pop
xor
lock
push
dec
ja
or
jae
jle
lods
add
xchg
jb
ljmp
hlt
mov
cmp
push
mov
movsb
dec
xchg
leave
aam
ljmp
push
xlat
rol
loop
shlb
outsl
cli
daa
mov
pop
add
mov
neg
jp
in
sahf
mov
out
cmp
fdivs
jg
mov
cmp
sub
mov
mov
pop
lods
mov
and
add
test
or
scas
xor
mov
sbb
xor
in
adc
scas
xor
in
in
and
aaa
jno
pop
fcmovnbe
imul
inc
jb
cmp
sarb
or
add
mov
mov
out
inc
mov
bound
or
call
lods
loope
arpl
push
add
jbe
mov
jge
jp
dec
sub
jmp
jno
fwait
mov
out
scas
adc
xorl
jmp
aad
cmp
mov
pop
daa
fisubrs
test
sub
sub
movsb
jne
cmp
lcall
push
into
inc
sub
push
stc
cmp
sbb
xor
addb
mov
mov
rcr
dec
xchg
pop
ja
test
push
or
lret
sub
xor
jle
inc
popa
mov
pop
jmp
add
andl
adc
push
or
dec
mov
sub
stos
push
rorl
xchg
push
frstor
or
dec
mov
sahf
je
cwtd
jne
jns
lret
iret
out
or
adc
cmc
in
es
and
dec
les
cwtl
pop
lret
adc
mov
stos
lods
ss
mov
adc
test
or
pop
std
loop
clc
arpl
scas
xchg
sbb
sti
repnz
xorb
addr16
repz
push
xchg
inc
fistl
dec
mov
and
add
cmp
lcall
loopne
and
pop
or
mov
movsb
inc
pop
push
and
push
gs
call
xlat
imul
aas
adcl
or
or
push
testl
mov
or
push
mov
enter
mov
lea
or
add
notl
push
mov
jle
mov
std
movsl
xchg
jo
push
inc
dec
jb
pop
cld
leave
lcall
inc
dec
mov
ja
lret
mov
cmp
rorb
clc
outsb
out
std
mov
out
pop
les
lret
xchg
imul
sub
jbe
cli
mov
mov
ret
stc
dec
and
orl
mov
adc
mov
mov
loopne
aas
add
pop
sbb
aaa
aam
pop
ss
pop
sub
add
imul
add
in
mov
cltd
push
imul
push
add
clc
jo
xchg
jecxz
pop
data16
sahf
xchg
adc
push
xchg
jecxz
in
xor
push
inc
mov
pop
scas
popf
dec
test
or
dec
mov
in
and
orb
jecxz
arpl
fnstcw
push
popf
lds
sarl
cld
insl
push
add
jb
jge
js
mov
xchg
or
jae
das
or
or
add
push
fidivrl
pop
cltd
lds
dec
mov
pop
inc
mov
cmc
jo
sub
xor
or
push
or
push
lods
test
adc
adc
adc
jg
cmpsb
xchg
leave
and
es
lds
mov
mov
push
divb
mull
data16
fnstsw
repz
sub
into
aad
imul
orl
lea
data16
loope
std
cmp
jbe
inc
cli
sbb
icebp
lods
mov
sub
js
push
imul
jae
stc
in
out
sbb
mov
cld
lea
jno
ficoml
stos
push
fsub
xchg
lea
fwait
dec
jecxz
ss
inc
lahf
pop
gs
mov
ss
pop
xor
mov
push
sti
sub
lods
enter
push
push
popa
out
fstpt
cli
mov
add
lds
out
js
inc
out
inc
pop
sarb
push
data16
sbb
pop
or
rolb
je
fiadds
adc
pop
fistl
xchg
shrl
xchg
sbb
lods
fisttps
div
loopne
mov
daa
aas
js
mov
xor
aaa
push
out
dec
cmpsb
dec
adc
pop
and
sub
and
cld
xchg
mov
sahf
add
sbb
jle
icebp
stos
jmp
mov
movsb
in
scas
sub
jl
negl
stos
mov
mov
xchg
out
add
push
mov
ja
inc
cmp
dec
rcrb
and
inc
ja
sub
stos
xor
dec
lret
addr16
push
popa
movsl
push
adc
js
enter
lds
jecxz
sub
icebp
mov
repz
and
push
sbb
add
imul
dec
cmp
daa
les
xchg
mov
push
sub
cld
pop
xchg
test
xor
mov
icebp
aaa
outsb
push
mov
xchg
push
mov
movsl
in
or
in
cmp
pop
or
pop
mov
push
jnp
loope
push
sub
adc
leave
jle
cmpsb
fisubl
ja
aam
sbb
push
xor
inc
jbe
inc
xchg
push
mov
cmp
int
frstpm(287
aaa
and
sbb
mov
insb
mov
jp
or
adc
imul
cmp
test
jae
adc
push
fcomps
stos
xchg
sbb
sbb
les
loop
stc
jle
out
lahf
pop
cmovs
cmpsl
inc
hlt
in
out
das
gs
mov
pop
cmp
push
sbb
jmp
cli
cwtl
lock
dec
jmp
movsl
mov
xchg
aam
neg
sbb
mov
in
jle
iret
ud0
or
iret
push
out
push
pop
addl
adc
pop
xor
jbe
scas
or
sbb
fsts
dec
sub
pushf
fdivrs
cmp
movsl
cmp
ja
push
shl
into
orb
mov
jmp
sti
insb
pop
loopne
test
xor
push
push
test
pop
push
iret
adc
xchg
jmp
dec
sub
xchg
fwait
sub
lock
aaa
sub
dec
inc
mov
pop
mov
or
enter
enter
cmc
lock
or
sub
arpl
sbb
insb
call
jg
fwait
cmp
mov
adc
xchg
sub
jno
loopne
hlt
fistpll
rcll
cwtl
insb
aas
add
pop
cltd
loopne
out
shl
adc
stc
cltd
push
xor
fldenv
xor
lcall
out
je
leave
das
scas
sbb
fucomi
jecxz
xchg
je
xchg
es
cwtl
sti
popf
ja
arpl
push
fdivrs
gs
push
arpl
rcrl
jae
shrl
xchg
sub
and
mov
and
shl
cmc
fs
push
pop
add
repz
xchg
dec
mov
pop
daa
imul
and
and
jns
arpl
int3
mov
mov
push
das
sbb
mov
cmpsl
and
jecxz
test
lds
imul
andb
jno
jp
inc
and
fldpi
cmpsb
imul
lods
insb
jno
push
jne
dec
and
push
fscale
repnz
sub
rcll
xor
rcrb
jnp
sub
add
lret
adc
jbe
dec
add
cli
or
dec
fcmovu
add
pop
nop
repz
aam
addr16
adc
sbb
adc
scas
mov
inc
shlb
dec
xor
ret
sbb
mov
cwtl
daa
jecxz
pop
lahf
ja
sub
or
xchg
add
nop
xchg
push
jmp
jo
jecxz
adc
push
lret
test
repnz
xchg
movsl
dec
mov
testb
adc
je
push
call
jno
mov
xlat
cmp
jecxz
or
adc
mov
gs
stc
pop
lahf
mov
pop
pmaddwd
das
repnz
cmp
ror
xchg
insl
inc
sbb
palignr
inc
cli
punpckhbw
aaa
adcl
fucomip
jecxz
into
clc
xlat
lret
and
add
fucomp
addb
cmp
add
ja
jnp
ret
mov
jbe
pop
iret
subl
sub
mov
adc
adc
push
mov
push
shl
cli
or
cmp
adc
lahf
stc
mov
mov
adc
jns
icebp
ds
mov
out
push
xchg
and
ret
dec
or
sub
inc
xchg
or
push
aaa
pop
rcll
adc
sub
mov
fwait
stos
cmp
adc
repnz
dec
or
jne
or
ficomps
push
mov
test
lods
es
jbe
pop
jo
xchg
jo
mov
jnp
das
mov
add
popf
clc
xor
fld
add
xorb
sti
int3
mov
loope
cmp
ljmp
inc
movsl
cmp
in
in
xchg
or
sub
aas
mov
dec
les
mov
add
sbb
mov
xchg
push
sahf
mov
mov
lods
xchg
cwtl
test
sti
in
in
xor
mov
ss
pop
dec
mov
cmp
insl
das
dec
xchg
adc
in
lock
xor
push
mov
cli
mov
cs
push
int
movsb
movsb
lcall
fcmovbe
cli
test
mov
jns
inc
push
setae
pop
pop
pushf
test
mov
sub
mov
int3
testb
inc
fdivl
pop
out
repz
sbb
adc
inc
mov
push
inc
sarb
push
sub
ds
test
dec
mov
leave
pop
xchg
jle
jb
mov
popf
aaa
cmp
scas
sub
mov
lods
popa
test
int
fwait
dec
xchg
jge
adc
pusha
cmp
xor
push
cmc
xor
pop
loop
xchg
xor
push
scas
movsb
mov
jae
jecxz
sahf
mov
mov
repz
test
leave
xchg
sbb
icebp
mov
arpl
pusha
cli
jge
aam
sbb
inc
cs
dec
dec
scas
or
xor
add
xchg
jne
aam
faddl
repz
testb
ja
inc
popa
adc
dec
scas
shl
xor
or
adc
aam
push
mov
and
rcl
cmp
jnp
out
pop
repnz
xchg
aad
jb
ss
dec
pop
sarl
imul
inc
aaa
inc
xchg
jl
out
inc
adc
cld
jl
enter
out
mov
mov
pop
mov
aas
xchg
loope
loope
ficoms
or
mov
jo
mov
adc
jne
push
lret
imul
clc
mov
hlt
cmp
ja
xor
lcall
outsl
adc
stos
inc
loopne
roll
and
stos
out
mov
ja
cli
add
push
sub
cmc
aas
sub
scas
jbe
xchg
hlt
mov
iret
test
bound
iret
xchg
shl
aad
movsl
jle
loope
inc
sbb
mov
cmp
dec
jge
pop
rclb
out
mov
inc
cltd
or
push
fidivs
add
test
and
in
push
add
xor
jecxz
push
xor
test
mov
sbb
sub
inc
fidivrs
xchg
scas
mov
pusha
subb
sbb
fwait
rol
loopne
mov
push
sbb
test
pop
add
lock
shrl
fcmovnb
outsb
mov
jmp
inc
pop
adc
movsb
push
lock
loopne
imul
test
cmp
aam
add
adc
in
sbbl
lods
xchg
pop
inc
mov
mov
dec
mov
cmc
sbbl
sbb
xchg
inc
sbb
idivb
add
cmp
dec
xor
jo
imul
rorb
sub
std
add
ss
test
lds
aad
sahf
stos
imul
jg
and
scas
or
xor
cmp
xor
add
je
jnp
lret
outsb
lds
nop
pop
imulb
and
xor
rcrl
xchg
xor
jbe
add
xchg
adc
mov
fwait
sbb
jmp
ds
orb
or
or
push
in
gs
or
add
je
mov
dec
loopne
jae
xor
mov
mov
out
lods
mov
mov
shl
push
wrmsr
pop
jle
or
inc
aad
and
lret
mov
push
ljmp
cmp
clc
pop
and
or
int3
dec
xor
mov
cmp
push
fs
push
stos
fists
fistpl
mov
mov
dec
out
test
inc
dec
cmp
out
loopne
push
add
inc
fadds
mov
inc
or
xor
bound
leave
mov
repnz
hlt
in
mov
xchg
dec
jmp
aad
mov
xlat
lds
ficomps
inc
adc
pop
fimuls
ja
mov
sbb
xchg
iret
fsubl
jp
js
adc
in
xor
in
sbb
cltd
insb
or
scas
dec
dec
popf
outsl
inc
outsl
xor
pop
rorl
in
shlb
fmull
push
push
outsb
mov
dec
mov
adc
out
adc
enter
mov
jg
pushw
pop
subb
dec
sub
pop
loop
sub
dec
push
jo
mov
cli
andb
lds
test
pop
sbb
xchg
dec
xor
xor
inc
sti
and
lock
dec
aas
fldt
dec
mov
sub
xchg
push
out
mov
push
mov
rol
cmp
sub
aad
enter
mov
xchg
push
aam
cmp
mov
jnp
lcall
xor
std
fwait
ljmp
inc
cmc
leave
pmuludq
and
lea
xchg
pop
mov
in
sahf
scas
aam
push
in
or
fld
faddl
jo
mov
fsubrl
sarb
add
addr16
lret
test
int3
aaa
movsl
push
ljmp
xchg
xchg
jno
xchg
in
out
dec
lret
bound
sarb
mov
pop
cmp
mov
sub
cmpsb
jl
dec
and
imul
jbe
cmp
cltd
lods
lcall
mov
data16
xchg
jne
mov
mov
mov
movsb
fildl
mov
mov
pop
and
cmc
imul
and
jecxz
lds
in
mov
fiaddl
pushf
xchg
stos
fst
mov
movsl
adcb
out
lods
cmpsb
pop
jecxz
shll
arpl
fistl
dec
mov
in
dec
mov
sub
xchg
int
in
sbb
push
ret
scas
dec
mov
repz
popl
je
addr16
call
jmp
dec
daa
out
dec
div
pop
cmc
jp
inc
insb
sbb
pop
sub
pop
mov
sbb
push
pop
test
fnstsw
sbb
push
mov
aad
sub
andb
in
inc
dec
pop
lea
pop
mov
add
dec
fidivs
je
ds
bound
inc
mov
fistpll
cmp
inc
int
cmc
dec
jo
mov
inc
pop
pop
leave
js
mov
adc
sub
xchg
stos
mov
pop
mov
sub
cmp
push
mov
sahf
pop
mov
pause
ljmp
push
jne
loope
xchg
adc
push
enter
dec
cmp
dec
loop
int
jb
stc
inc
pop
add
or
sub
push
jne
lods
inc
pushf
mov
dec
sub
insb
cmpsl
mov
nop
insb
cmc
test
mov
xor
dec
adc
rol
call
or
in
inc
icebp
ds
lods
push
rcr
mov
push
pushf
jb
pop
pushf
sbb
pop
test
test
test
hlt
mov
es
mov
push
adc
jmp
xlat
adc
mov
aam
loope
movsl
mov
divb
sbb
and
inc
lret
push
pop
pop
add
aas
or
push
cmp
inc
fs
in
out
sbb
adc
clc
subl
add
sub
dec
xchg
pop
mov
rcrb
mov
fimull
out
push
push
cmc
mov
lcall
imul
sub
push
or
rcrl
dec
pop
jmp
mov
xchg
stc
xchg
pop
lods
jae
clc
sbb
jge
adc
and
fisttpll
push
loope
in
cmp
jp
xor
sub
repnz
add
cmpsb
outsl
mov
dec
rclb
or
inc
mov
es
shll
cmp
insl
xchg
repz
jae
jg
pop
push
push
jl
sti
test
jmp
fldenv
out
fstpl
xchg
aad
es
dec
sbb
mov
imul
in
add
sub
mov
test
fisttps
cmp
xchg
les
xchg
lds
cmp
push
mov
jne
hlt
mov
jno
in
mov
ds
sbb
push
mov
inc
ret
test
push
add
roll
repnz
push
rcll
and
js
outsl
xor
sbb
fsubrs
dec
and
jb
movsl
xchg
sti
sbb
outsb
cs
xchg
push
pop
mov
pop
gs
mov
sti
sub
loopne
ret
jmp
xchg
test
xchg
roll
repnz
sub
or
aaa
cmpsl
xchg
jle
movsl
mov
dec
fists
mov
sub
loop
jno
gs
inc
negb
ret
cmp
xchg
cmp
popa
dec
sti
dec
popa
out
xchg
shl
imul
mov
add
push
imulb
cmpsb
pop
inc
out
or
fbld
adc
or
idivl
sbb
out
or
mov
and
fiaddl
rcrl
pop
mov
xor
inc
dec
in
ja
movsb
sbb
imul
xchg
mov
or
cli
xlat
hlt
push
pop
andl
jns
test
dec
js
aad
cmp
adc
sbb
stc
fsubr
xchg
mov
shll
inc
cltd
xchg
das
cltd
dec
cli
mov
xchg
arpl
imul
outsl
xchg
xor
sub
pushl
bound
sti
mov
jmp
xor
rcr
xor
xchg
jg
cmp
mov
das
pop
adc
notb
cwtl
pop
data16
rorb
outsb
cmp
xchg
out
cmp
aas
mov
imul
sub
jp
out
icebp
mov
test
adc
and
adc
outsl
mov
scas
sbb
mov
cmpsl
notl
cmp
add
stos
lret
pop
ret
push
repz
inc
mov
imul
push
arpl
inc
inc
sub
jo
xchg
out
jle
lods
sarl
xor
add
jle
push
sbb
xor
lods
int
imul
fistpl
fst
mov
out
out
popf
out
fistpl
cmp
icebp
add
mov
adc
inc
dec
lret
inc
add
out
sub
iret
jb
es
pusha
inc
mov
mov
js
mov
push
daa
xchg
jo
mov
hlt
in
jb
les
iret
jae
fstpt
data16
dec
imul
or
aaa
jg
movsl
add
and
flds
mov
ds
aad
ret
in
xchg
ret
push
sbb
insb
lret
sbb
xorb
and
push
aad
and
mov
cmp
jo
dec
pop
sub
push
loopne
mov
inc
dec
lods
push
xchg
stos
inc
cmpsb
add
mov
in
repnz
int3
arpl
inc
sub
xor
movsl
test
cld
in
xor
mov
and
fwait
sbb
cmp
cwtl
lds
sub
jae
jg
jl
inc
ljmp
push
loope
aad
pop
arpl
rcrl
imul
fcoms
and
push
xor
pusha
shl
inc
dec
jns
pop
adc
inc
arpl
xor
in
test
dec
sub
int3
mov
scas
xlat
shrb
pop
movsb
out
or
sbb
pop
daa
in
popf
loope
dec
mov
outsl
sahf
in
adc
sub
sbb
loopne
or
lds
sbb
int
out
mov
in
loop
jmp
sbb
jl
jp
aad
das
outsb
mov
mov
sub
mov
inc
inc
inc
aam
lods
cmpsb
push
div
in
mov
pop
movsl
out
cmp
xchg
xchg
push
jo
xchg
stos
fbstp
idivb
cmp
and
xchg
sbb
lret
cmp
cmp
cmp
mov
jp
add
or
jns
nop
outsb
xlat
mov
cs
push
lea
out
push
cmp
add
xor
mov
mov
loop
inc
push
mov
cwtl
mov
cmc
xchg
pop
inc
xor
enter
sbb
cmpsl
mov
adc
mov
mov
inc
add
mov
shl
cmc
push
or
cmp
push
xchg
hlt
loopne
test
sahf
fyl2x
sbb
dec
adc
stos
sub
lea
lret
cmp
rcll
std
lret
mov
xchg
xlat
inc
popf
cltd
inc
sbb
loope
xor
jmp
push
arpl
mov
cmpsl
stos
out
jmp
insb
xorb
xchg
push
std
mov
sbb
sub
xchg
fdivrs
add
orl
cmp
xchg
jg
xchg
pop
fdivrs
lea
das
jmp
jno
orb
fiaddl
fcompl
mov
jecxz
imul
mov
pushf
je
test
div
xchg
add
jbe
sbb
sbb
stos
add
jge
mov
pop
jl
mov
mov
lret
pop
in
and
movsl
push
xorl
inc
adc
filds
jl
xor
fsubs
cmpsl
xchg
push
push
inc
push
aas
xchg
mov
jmp
inc
das
cmp
xchg
icebp
jmp
cmc
xchg
jns
int3
test
cltd
jne
out
mov
dec
pop
sti
js
rcrl
adc
add
repz
xor
inc
sets
cmp
lods
push
push
sbbb
hlt
sbb
cmc
out
mov
mov
notl
iret
aam
ds
push
shr
xchg
lret
lea
or
lahf
pop
xor
imul
mov
fsubl
xorl
inc
jecxz
jae
mov
pop
xchg
hlt
sub
add
call
lock
cwtl
ret
dec
popf
ret
xchg
sti
mov
das
jae
xchg
loop
out
pop
fs
dec
ss
cmp
pop
adcl
or
xor
xor
push
sbb
cmp
ja
pop
dec
lods
and
stos
cld
sti
pop
sub
xchg
ss
mov
mov
dec
add
jb
bound
jp
iret
aad
movsl
xchg
cmp
lret
hlt
sbb
sahf
adc
and
call
nop
dec
or
test
adc
out
sub
push
dec
lods
stos
test
pop
ljmp
xor
clc
ret
sahf
test
inc
adc
push
push
aad
aad
into
pop
sub
jp
xor
addb
shlb
movsl
ja
pop
insl
scas
push
xchg
adc
cwtl
xor
ret
pop
sub
jne
xchg
fwait
cmpsl
stos
inc
pop
push
out
loop
add
ljmp
cltd
jo
and
jae
xorb
mov
stc
iret
mov
dec
movsl
jle
aaa
xlat
add
mov
decb
mov
arpl
daa
das
popf
shl
dec
jmp
push
repz
mov
mov
inc
cmp
mov
dec
pushf
mov
cmp
pop
mov
dec
push
push
mov
mov
outsb
mulb
xlat
sub
xor
or
push
imul
call
out
lds
add
and
aas
pushl
sarl
sub
lret
mov
repnz
mov
dec
mov
or
insb
mov
adc
and
imul
cmpsl
in
repnz
scas
int
leave
fsubrl
shr
das
movaps
fstpl
mov
sub
in
sti
xchg
int
sbb
shl
mov
fimuls
push
sbb
pop
push
push
or
rclb
xchg
bound
pop
inc
sub
leave
jb
inc
repz
mov
rorl
dec
mov
jmp
outsl
pusha
das
jecxz
mov
fnstcw
push
int
inc
jl
sarl
aad
dec
xor
pop
push
std
adc
mov
add
aaa
data16
inc
xor
pop
mov
fsubrp
call
xlat
mov
or
call
out
je
mov
push
mov
or
ljmp
mov
jne
in
xchg
pop
or
lods
out
lret
sbb
icebp
in
test
stc
or
lods
sub
in
das
add
xchg
xlat
mov
cli
jb
outsl
outsl
outsb
push
lods
ljmp
adc
sub
lea
xor
sub
add
daa
mov
push
sub
test
mov
sub
cmc
insb
dec
rep
mov
cmp
sub
mov
fadd
jl
aaa
lahf
pop
mov
pop
push
pop
sti
mov
mov
in
sti
pop
pop
andb
jp
jno
or
mov
fidivrs
scas
aaa
and
add
jmp
jae
cmp
mov
push
push
fcmovnb
pop
inc
ret
jbe
xchg
mov
push
test
mov
data16
bound
push
cs
inc
test
lock
repz
pop
lahf
leave
adc
add
or
pop
sub
shll
out
cmp
cmp
pop
les
adc
shl
sub
mov
sub
sbb
lock
inc
mov
add
fldenv
ja
clc
dec
cli
push
jb
lret
arpl
xchg
std
push
je
pop
lret
fstl
cld
xchg
inc
and
scas
sbb
out
mov
cmpb
sub
dec
movsl
rolb
loopne
shll
or
and
mov
sbb
loopne
jl
pop
outsb
add
push
test
sbb
std
lock
popf
das
push
add
int3
xchg
cli
and
jmp
les
movsb
fs
mov
sub
pop
lds
mov
cmc
mov
jg
pop
les
mov
sub
push
in
jmp
in
cmp
inc
shll
movsb
jae
lcall
insl
mov
jle
or
sbb
stc
mov
stos
dec
sbb
mov
add
mov
das
sbb
sbbl
mov
dec
out
inc
loopne
ja
mov
mov
lcall
mov
mov
hlt
insb
in
push
adc
jp
jbe
aaa
pop
jmp
out
mov
adc
mov
cmp
mov
daa
push
dec
inc
xchg
mov
hlt
cltd
inc
ret
sbb
mov
mov
xlat
jmp
cs
push
inc
add
xchg
arpl
aam
fwait
and
adc
sbb
xor
paddusw
dec
push
push
sti
scas
bound
push
addl
adc
sbb
loope
lcall
adc
aas
push
adc
sub
ja
xchg
inc
fdivs
fs
xchg
mov
bound
xor
loope
lcall
xchg
sub
dec
mov
jmp
loope
or
loop
pop
lods
aam
xchg
adc
push
push
addr16
mov
sub
sbb
nop
cs
rcr
or
add
xor
data16
xorl
into
repnz
es
int3
sbbb
cmp
and
add
test
ret
push
mov
jnp
test
adc
inc
scas
fisubrl
loopne
pop
popa
fimull
and
mov
mov
and
jnp
jbe
cmp
mov
sbb
mov
fcmovnb
stc
and
and
and
sbb
pop
jge
mov
aas
into
out
std
adc
adc
imul
mov
mov
jae
xchg
aam
push
sbb
xlat
sub
inc
sub
popf
pop
fsubl
aaa
mov
outsb
dec
insb
mov
ret
mov
lret
aas
jne
add
test
mov
mov
adcb
testl
mov
cmp
sti
adc
cmpsl
ret
imul
in
movsl
lret
jb
in
fcmovnb
lea
mov
dec
xchg
call
and
cmpsb
in
mov
pop
cmp
add
xor
pop
sahf
jb
mov
pop
pop
inc
pop
scas
or
out
loopne
mov
aam
push
aas
xchg
out
dec
bound
or
into
xchg
or
lea
jo
addr16
lcall
cmc
lret
arpl
fstl
std
pop
nop
popa
lea
pop
mov
jo
pop
add
inc
ja
inc
mov
mov
inc
push
pop
dec
insb
inc
int
adcl
mov
rcll
jl
xchg
test
sub
jg
stos
sbb
or
mov
xor
les
jp
xchg
lods
and
call
mov
cld
in
pop
repz
popa
je
pop
aaa
jns
mov
mov
clc
in
xor
mov
adc
sbb
lods
dec
loopne
add
sarb
jge
cmpsl
fnsetpm(287
jmp
out
sarb
divb
pop
and
test
clc
fwait
je
push
and
in
rorl
push
repnz
aad
mov
das
and
test
xchg
pop
stos
aaa
or
icebp
jle
leave
movsb
sub
pop
rclb
xchg
imul
mov
roll
mov
push
add
push
stc
mov
test
cmp
mov
mov
pop
push
fwait
push
sub
mov
fidivrl
rol
insb
sti
pushf
shlb
inc
addr16
or
jge
hlt
cld
out
dec
aas
gs
ffree
jmp
cmp
out
fisubs
adc
inc
leave
push
data16
lds
pop
sbb
mov
aas
sub
adc
pop
lret
stc
rcrb
call
xor
cwtl
cld
sbb
daa
dec
aam
leave
fmul
rcl
cmpsl
jge
push
lret
pop
sub
stos
dec
pop
jae
jbe
xor
shll
mov
cmc
out
daa
bound
mov
decl
leave
filds
fdivrl
xchg
sbb
out
and
arpl
outsb
pop
mov
aaa
mov
shrl
out
faddl
popf
fwait
push
mov
sub
cltd
dec
push
loopne
and
shlb
sar
push
and
hlt
jb
arpl
fnstenv
add
cmp
mov
mov
sub
gs
sub
sbb
jnp
push
xchg
xchg
int
repnz
xchg
fmull
addr16
test
mov
cld
jl
nop
mov
enter
out
pop
or
jne
xchg
mov
or
cs
xor
push
cmp
mov
mov
add
daa
jle
inc
insb
dec
and
jl
imul
sti
pop
xor
dec
fcmovnbe
cmp
xchg
xchg
fprem
daa
jp
nop
stos
gs
stos
mov
outsl
push
pop
ljmp
mov
or
push
inc
pop
popf
adc
pop
ficoms
mov
add
stos
adc
loop
mov
insl
in
xor
dec
adc
xchg
popf
aad
sbb
mov
int3
mov
cmp
xchg
lahf
stos
inc
cwtl
mov
lahf
mov
sub
ret
pop
lock
in
pop
shlb
inc
xchg
add
push
pushf
sbb
imul
imul
aas
adc
jne
inc
ljmp
sub
daa
dec
test
hlt
in
inc
sti
push
out
push
sub
int3
adc
adcl
dec
sbb
inc
dec
addl
int
je
int
dec
mov
sub
cmp
and
jl
add
add
mov
or
sarl
imul
call
or
mov
add
popa
jg
mov
mov
mov
js
sbb
outsl
loopne
es
enter
fiadds
out
imul
stos
mov
daa
dec
mov
adc
iret
imul
adc
add
loope
imul
mov
xlat
in
sub
xor
dec
loop
lds
hlt
inc
mov
push
lret
xchg
push
dec
or
ljmp
out
lods
xchg
mov
xlat
xor
push
into
jge
ret
es
and
and
xor
push
dec
shr
sbb
mov
cmp
sbb
inc
fistl
iret
movsl
ljmp
es
sub
cmp
data16
imul
call
cli
rcl
outsl
xchg
mov
ja
xorb
sub
mov
dec
xchg
aad
add
gs
xchg
sub
push
cmp
in
loop
scas
dec
jmp
dec
adc
inc
cld
in
ja
inc
or
cmp
cmp
pushf
inc
repz
inc
out
inc
sar
ds
inc
addb
fs
and
fimull
push
fildl
push
fnsave
push
test
ja
lds
das
outsl
lea
std
imul
mov
loop
fdivrs
mov
sti
mov
outsb
mov
aad
ljmp
adc
notb
nop
sbb
or
and
push
adc
xor
movsb
je
sub
dec
mov
jp
xchg
cmc
int
jp
out
jnp
andl
enter
dec
cmpsl
xor
jae
cmpb
inc
cli
push
repnz
sbb
in
ja
jg
movsb
loop
inc
mov
jb
bound
pushf
sbb
ret
add
pop
push
nop
insb
stos
imul
xor
out
mov
cli
mov
scas
mov
cmc
xor
mov
jge
jne
dec
loope
inc
fistl
in
push
or
xlat
inc
pusha
jno
cli
pop
daa
mov
push
movsb
xor
js
sub
les
xchg
jne
push
jge
js
xor
into
jmp
jle
dec
shll
mov
xorl
push
cmp
dec
in
push
call
xchg
lcall
aaa
fsubr
outsl
adc
sbb
pop
out
jb
int3
cmc
cmpsl
les
notb
pop
jns
mov
pop
inc
daa
mov
add
pop
test
or
in
mov
mov
out
fldl
ss
aad
jns
push
fs
sbb
in
cmp
outsl
jp
add
sbb
and
fsub
mov
lea
cmpsb
jb
mov
mov
test
in
arpl
nop
fsubrl
ja
xchg
in
mov
cmpsl
lahf
add
cmp
push
repz
cmp
dec
aam
pop
pushf
or
pop
push
jecxz
aad
mov
and
fbstp
cs
jmp
paddw
push
xor
push
sbb
push
pop
repnz
add
out
mov
jge
into
shrb
repz
add
xlat
mov
lcall
add
negb
fs
pop
clc
orb
dec
adc
adc
and
dec
mov
or
loop
aad
lcall
outsb
mov
in
loop
rcrl
mov
sub
dec
repnz
lret
ja
and
pop
jle
fcmovb
pop
lcall
push
ljmp
cli
nop
ss
out
mov
mov
shld
lret
xchg
aam
or
mov
pop
xor
sub
rclb
cli
repz
mov
shrl
in
mov
push
cs
adcl
xchg
lds
adc
js
mov
std
mov
xor
cmc
pusha
cmp
mov
lds
les
aaa
adc
dec
sbb
mov
add
pushf
mul
rorl
cmp
mov
mov
test
cmp
arpl
mov
shrb
or
cs
pop
mov
mov
out
jae
and
add
iret
cmc
and
add
mov
testl
xchg
mov
xchg
jg
shll
lods
shll
cli
xor
test
sbb
xchg
adc
xchg
arpl
inc
sti
inc
mov
in
push
cmc
insb
outsl
fnclex
out
inc
inc
mov
test
fmuls
jp
in
fiaddl
adc
mov
pop
insb
push
fistl
jg
pop
mulb
ss
push
les
cmpsb
jecxz
loop
jb
xorb
xchg
fwait
adc
sub
inc
int
push
pop
cmpsl
js
fisubs
adc
lahf
cwtl
sbb
jl
ss
push
loope
es
or
loopne
insl
sbb
stc
dec
divb
es
insb
lcall
les
jnp
cmp
cld
sahf
adc
leave
sbb
mov
adc
ja
adc
mov
loopne
jns
cld
mov
test
test
in
mov
lret
rorb
add
out
int3
mov
jb
or
push
movsb
pushf
inc
scas
fstp
adc
adc
subl
mov
scas
sub
jne
jg,pt
and
repz
fwait
cmp
test
add
pop
push
les
ficomps
rcl
movsb
pop
mov
push
sbb
push
call
sbb
xchg
adc
add
add
inc
fstpt
popa
and
hlt
sub
mov
jnp
lds
outsb
mov
faddp
lcall
cmp
pop
subl
adc
cmp
sbb
xor
mov
or
shll
iret
lret
push
fstpl
mov
loop
pop
in
cmp
inc
adc
pop
add
icebp
call
push
movsb
mov
mov
sbb
paddusb
adc
lods
push
lods
dec
fimuls
scas
jp
and
out
mov
cwtl
jbe
ja
dec
fldlg2
popa
lods
jg
sub
cs
aam
cmp
mov
addr16
movsb
mov
mov
lods
icebp
out
xchg
lret
movsl
xchg
fcmovnb
sub
pop
mov
sub
lods
roll
bound
rorl
pop
mov
adc
inc
push
std
xchg
xchg
mov
gs
stos
in
js
and
aad
int
push
lcall
cmpsb
mov
aas
dec
and
adc
mov
fldenv
dec
cmp
xchg
out
notl
and
xchg
push
into
add
lcall
jmp
cli
push
cltd
jp
fnsave
ss
test
and
in
cmpsb
inc
gs
dec
pop
adc
sub
jb
std
add
nop
js
sti
xchg
lds
jno
add
xlat
shrb
sub
jne
mov
cltd
sbb
mov
iret
mov
in
sahf
repz
pop
in
push
mov
arpl
dec
ja
jbe
jno
iret
mov
mov
out
insl
dec
jno
icebp
cmp
push
xchg
imul
ret
popa
push
adc
arpl
sbb
int3
and
inc
movsl
xor
stos
ljmp
jnp
xchg
push
iret
adc
push
jbe
in
inc
popf
mov
in
cwtl
inc
push
jp
sbb
mov
outsb
cmp
lock
cmp
pop
sbb
loop
leave
ror
shll
lret
xlat
pop
mov
xor
or
push
lret
mov
sub
repz
aaa
pop
test
ja
pushf
mov
scas
push
jbe
jmp
push
int3
or
out
cltd
xchg
pop
sub
ljmp
repz
adc
xchg
sbb
insb
or
sbb
pop
pop
pop
inc
and
lods
jmp
rolb
aad
pop
jo
pop
pop
sbb
icebp
jecxz
dec
sub
push
rorl
out
mov
lcall
ljmp
dec
jbe
cmpsl
aam
inc
loop
xchg
sub
mov
imul
lods
xchg
icebp
les
xor
mov
dec
fcomps
fisubl
test
iret
loop
jno
sbb
dec
push
dec
cltd
out
movsl
cmp
adc
adc
lret
fdivp
cmp
xor
jmpw
pop
movsb
hlt
and
shlb
xor
jg
xchg
dec
mov
jo
loopne
push
ss
cmp
adc
imul
dec
cmc
or
vcvttsd2si
imul
cli
call
cmp
mov
xor
fwait
xor
scas
cltd
mov
out
sti
mov
arpl
stos
cmpsl
sub
scas
rcll
das
cltd
fucomp
out
je
pop
lcall
inc
ljmp
pop
xchg
gs
jl
test
push
fcoms
ret
int
mov
adc
xlat
sbb
xchg
arpl
mov
jbe
sub
push
push
pop
or
pop
fchs
lcall
in
loop
fnsave
inc
shrb
ds
hlt
push
leave
or
push
cmp
arpl
std
and
adc
pop
jl
jb
out
or
cmpsl
das
aam
dec
xchg
ja
sub
shlb
add
xchg
call
mov
aas
jl
lret
rclb
and
shrl
mov
shlb
jno
das
adcb
int
dec
fwait
lds
out
mov
repz
data16
pop
repnz
jecxz
xchg
push
shl
or
in
aaa
jecxz
cmp
int
test
enter
push
jecxz
mov
push
js
lret
adc
lods
dec
test
jbe
jg
sub
cmp
stos
shll
mov
mov
dec
or
popf
add
adc
cld
jne
lods
adc
push
call
push
inc
sbb
dec
shr
shrl
or
push
adc
jg
rcl
fcomi
lock
xchg
loopne
out
mov
sub
or
sbb
es
movsb
or
mov
sarb
fwait
mov
hlt
push
ljmp
jnp
inc
jl
adcb
mov
push
xor
mov
adc
mov
push
and
xor
xchg
mov
ljmp
cmpsb
inc
mov
jle
inc
mov
dec
into
js
popl
outsb
mov
mov
add
cwtl
jae
inc
cmp
push
mov
rol
fisttpll
dec
or
push
dec
clc
ret
gs
test
movsb
add
pop
cltd
mov
aad
add
mov
lahf
rclb
fidivs
notl
sub
xlat
mov
pop
popa
xchg
stc
fisubrl
mov
je
mov
imul
orl
sbb
push
mov
push
inc
daa
aam
push
lret
popa
fnstenv
xor
pop
mov
lods
push
imul
ljmp
pop
cmc
les
std
pop
mov
out
sbb
addl
scas
popf
pop
jae
icebp
pop
dec
insl
fwait
dec
shll
push
out
lea
into
pop
test
adc
xor
lock
jmp
stc
mov
ljmp
iret
roll
dec
inc
fimuls
add
mov
pop
icebp
fimuls
adc
inc
mov
xchg
dec
ret
sub
push
sahf
sbb
lods
test
sub
out
pop
jns
fisubrs
mov
pusha
scas
sbb
jp
test
fldl
enter
push
push
into
pop
popf
cmp
fs
push
ja
aad
enter
out
cmp
nop
pop
sbb
dec
stc
ret
cmpsl
ftst
pop
js
mov
ret
hlt
cld
loop
ss
lock
not
mov
fsubl
pop
inc
lea
push
adc
adc
imul
or
dec
inc
stos
fisubs
stos
mov
lds
roll
sub
repz
int
daa
repz
and
or
push
sub
mov
push
jge
adc
mov
jecxz
mov
out
testb
lock
jns
test
or
sbb
mov
cmp
icebp
jmp
andb
in
mov
sbb
adc
shl
cmp
push
dec
and
sub
xor
ret
cmp
xor
test
sub
movsb
mov
jo,pn
loope
fldl
lahf
mov
leave
int3
test
inc
imul
into
fcmove
jbe
jbe
cmpsl
mov
xor
or
push
stos
lock
push
xchg
fsubr
std
mov
out
dec
mov
fcomp
fistpll
xchg
mov
sub
sub
pop
loopne
jecxz
je
outsb
jae
and
cmpsb
mov
dec
and
sbb
stc
push
jo
pop
dec
popa
sub
pop
pop
ficompl
jmp
in
cmpsb
jno
out
mov
lock
les
inc
lret
jne
repz
fnclex
sbb
sti
adc
cmp
mov
cwtl
pop
enter
fwait
xchg
std
adc
xorl
iret
mov
sub
outsl
sbb
xchg
je
xor
stos
push
and
jne
pop
clc
lock
jnp
jno
fcompl
mov
push
aaa
lret
sbb
ja
inc
out
bound
sbb
in
sbb
leave
sub
call
or
aaa
loop
sub
lahf
outsl
loop
icebp
mov
mov
jbe
inc
mov
sbb
mov
xorb
mov
sbb
cmp
dec
call
pop
scas
mov
inc
dec
jl
dec
lcall
push
test
rorl
mov
cmp
pop
ljmp
aam
mov
rorb
mov
shrb
ror
das
dec
mov
inc
inc
gs
xor
test
cmp
call
bound
sbb
lret
fmuls
mov
jno
and
adc
add
in
add
out
ret
push
pop
in
mov
adc
lock
mov
lret
or
addr16
je
out
pop
ds
rcl
push
inc
fbld
pushf
iret
ror
adc
inc
add
addl
inc
fimull
lds
dec
mov
inc
inc
jmp
fwait
pop
out
cltd
or
cmp
push
aad
shrb
ja
pop
fwait
xor
addl
mov
cwtl
pushf
cmp
mov
lods
lahf
mov
mov
clc
cli
fnstsw
jg
insb
nop
aaa
push
js
cmpsl
jle
nop
inc
sbb
sbb
out
push
aas
call
in
bound
movsl
lret
loop
leave
in
jb
jg
loopne
push
xchg
cmp
orl
sub
and
iret
push
dec
cmp
in
roll
fldenv
clc
ret
mov
mov
xchg
push
scas
xchg
outsl
fdivl
jae
inc
fs
fwait
cmp
xorl
leave
mov
jb
sti
scas
aad
cltd
jg
fcompl
and
lcall
jbe
mov
lds
mov
mov
inc
jae
add
sbb
mov
fsubrs
leave
sti
xor
push
daa
lods
mov
push
xchg
ss
push
cltd
int
jo
movsb
push
das
sarb
in
insl
ja
imulb
jge
popa
pop
cld
lcall
out
xorl
xlat
mov
mov
aas
inc
pop
mov
push
adc
cwtl
es
push
rolb
movsl
push
ss
adc
and
adc
addl
enter
sarb
dec
xor
lahf
adc
sbb
mov
add
hlt
ljmp
mov
push
xchg
loopne
rcll
sub
add
fimull
enter
lcall
int3
push
popa
cmp
push
out
bound
inc
jo
and
add
lods
pop
xorb
pop
sbb
data16
popa
inc
push
sub
jnp
pop
cwtl
hlt
popf
xchg
pop
xorl
cmp
push
test
xchg
pop
sbb
je
and
inc
pop
push
test
pop
push
inc
cli
adc
sbb
cmp
popa
test
push
xor
leave
outsl
cltd
jne
xchg
inc
and
xor
inc
jbe
or
lods
xorl
sbb
lret
aam
dec
xor
push
adc
lods
iret
or
mov
arpl
and
mov
nop
mov
sbb
adc
jg
cmp
push
push
rol
shll
gs
orl
dec
bound
loop
cltd
jae
mov
inc
enter
leave
mov
mov
xor
fisubs
jecxz
xor
dec
sbb
pop
sbb
arpl
inc
mov
bound
dec
xchg
fdiv
sub
sub
push
outsb
xor
fadds
add
ficoml
dec
sub
pop
cmp
outsb
insl
jl
mov
mov
xor
sbb
loopne
xor
negl
mov
loope
push
arpl
repz
stc
mov
and
push
fsubs
fsubr
fwait
adc
sub
mov
cmpsb
out
adc
mov
jne
hlt
andl
mov
pop
and
and
sbb
fmul
push
adc
fs
lahf
lods
mov
cltd
push
dec
cmpsl
mov
add
inc
dec
shl
jge
dec
xchg
push
inc
adc
sub
sub
jne
fidivrl
orb
hlt
xor
es
std
fldcw
cs
push
adc
cmp
imul
cmovge
pop
sbb
push
and
daa
xchg
jp
in
mov
adc
and
push
jp
dec
ficoml
inc
push
fcompl
push
fwait
leave
push
outsl
xor
push
aaa
mov
sbb
loopne
mov
dec
adc
sbb
mov
xor
ljmp
jne
sarb
leave
shrl
popa
fsts
loope
pop
psubq
add
ret
adc
fdivr
sub
ja
cwtl
call
jp
mov
imul
mov
mov
pop
mov
mov
popf
dec
xor
std
mov
shlb
repnz
push
jg
mov
out
insb
push
lock
jmp
lock
xchg
std
andl
add
cmpsb
push
sbb
sahf
xchg
mov
idivb
jo
scas
mul
sbb
mov
cmp
jno
inc
outsb
jmp
pop
insb
xchg
aaa
lods
cmpsl
mov
push
test
push
push
xchg
ret
mov
or
gs
jg
cmp
enter
xchg
pop
sbb
aad
into
shrl
xlat
cmp
not
sbb
cwtl
mov
incb
loope
pushf
stos
mov
lea
and
test
jno
adc
stc
std
push
sub
ss
cmp
xor
shrb
or
push
mov
popa
push
stos
shlb
sbbb
divb
mov
clc
push
jge
mov
ljmp
out
stos
xor
adc
xorl
sbb
jmp
jns
fistpl
lods
bound
dec
cltd
insl
mov
mov
push
mov
int
popl
jmp
add
es
scas
data16
dec
jnp
xorb
pop
cmc
das
js
xlat
jmp
xor
je
sbb
adc
or
mov
mov
or
in
xchg
frstor
adc
dec
sub
push
mov
mov
adc
mov
ss
sbb
jb
dec
mov
jns
call
out
imul
or
pop
dec
mov
dec
xchg
cli
aas
mov
outsl
mov
inc
xor
jne
je
fs
mov
fnstcw
arpl
into
cmp
aad
fwait
mov
bound
shrl
int
mov
mov
xchg
lahf
cmpsb
inc
cmp
js
das
lahf
xor
js
push
mov
in
sbb
lock
push
mov
jle
out
xchg
stos
out
jg
js
sbb
cs
shl
push
mov
add
push
scas
jmp
idivb
and
push
fs
js
dec
cmp
imul
js
or
hlt
sub
sbb
stos
in
imull
mov
push
insl
data16
cltd
add
fbld
popa
lret
xor
fs
mov
or
daa
push
aam
sub
jg
pop
fnstenv
mov
js
cld
xchg
add
rcrl
mov
jo
adc
lods
jle
jge
rolb
pop
and
push
scas
push
mov
push
and
sub
sub
stc
loop
mov
sub
sbbb
mov
dec
or
loopne
mov
xchg
pushf
mov
sub
xor
test
aas
fidivs
push
push
int
clc
out
stos
jmp
push
fucomp
mov
push
sar
dec
push
cmp
sub
out
and
fwait
dec
add
jo,pt
dec
mov
cmp
aad
sbb
push
sub
pop
sbb
mov
ret
bound
data16
jmp
inc
adc
sub
outsl
sbb
sti
in
fs
int3
and
cmc
andl
movsl
jno
jle
mov
push
daa
cmp
aas
adc
xchg
xchg
add
filds
cmpsl
les
adc
mov
fs
mov
mov
imul
cmp
fadds
pusha
mov
mov
enter
pop
sub
jbe
xchg
dec
data16
push
sub
add
xor
add
jl
mov
jne
scas
aad
ljmp
dec
in
mov
aas
add
cmpsl
xchg
add
add
lds
sbb
jb
ret
into
xor
cmpsb
push
and
addr16
imul
and
xchg
je
dec
ja
jl
cmp
std
test
dec
lret
adc
scas
mov
jge
shl
nop
push
notl
js
cmp
add
ret
loope
adc
xor
mov
pop
dec
or
dec
mov
mov
je
clc
out
icebp
mov
fidivrs
sbb
std
pop
pushf
or
mull
push
mov
inc
rcrl
jge
push
aad
xor
cmp
sbb
js
mov
cmpsb
lock
int3
add
outsb
push
dec
push
and
je
mov
mov
rcll
xchg
mov
mov
pop
inc
fs
aaa
adc
outsb
xor
cmp
sub
xchg
xor
cltd
in
lcall
dec
gs
pop
daa
add
push
adc
push
jl
stc
in
push
lea
insl
pop
scas
or
insb
mov
shll
fs
clc
jg
or
stos
xor
push
cwtl
push
adc
sahf
mov
clc
outsb
xor
jle
pop
or
jae
and
push
sub
jo
add
mov
ret
xchg
ljmp
pushf
mov
mov
out
add
or
ror
fsubrl
mov
test
pop
fs
lods
in
stos
jne
add
mov
movsb
xchg
inc
sahf
mov
popf
outsl
stos
shl
sub
cwtl
xchg
nop
lret
pusha
xchg
add
sub
pop
test
enter
or
fadd
cld
mov
stos
jl
shll
daa
push
lds
mov
vmread
mov
out
ret
xor
int3
fisubs
push
dec
adc
jmp
mull
in
sbb
adcl
fwait
adc
rolb
mov
data16
adc
dec
rcrb
sbbb
andl
lock
stc
div
pop
and
xor
pop
inc
ror
mov
imul
add
lret
mov
outsb
xchg
mov
jb
xchg
xor
outsl
arpl
sub
fwait
mov
test
push
push
push
stos
aaa
fsubr
pushf
pusha
jns
pop
xor
aaa
nop
xor
add
daa
loopne
and
mov
sarb
cmpsl
mov
jecxz
xor
pop
rclb
cmp
jmp
or
leave
inc
shlb
and
sub
bound
push
pusha
dec
dec
xchg
fisubrl
pop
sbb
mov
push
icebp
jo
scas
ds
lods
add
dec
out
jmp
xchg
dec
in
imul
pop
push
dec
mov
scas
dec
pop
mov
mov
adc
loop
iret
adc
xor
sbb
cli
stos
imul
in
mov
mov
mov
and
sub
sub
daa
mov
sub
ret
mov
aaa
xlat
dec
and
pop
mov
into
mov
cmp
mov
clc
lods
mov
sti
movsb
testl
pop
sub
mov
cld
cmp
addr16
add
int3
call
adc
daa
jecxz
mov
loop
jle
push
sub
mov
mov
fistpll
orl
loope
lds
ret
xlat
fnstsw
pop
pop
rcll
cmp
sbb
int
outsl
mov
push
xchg
push
mov
push
cmpsl
mov
xchg
mov
scas
sub
ret
insl
js
dec
mov
dec
repnz
jge
insb
gs
and
mov
inc
bndstx
or
inc
or
mov
adc
push
test
pop
dec
xor
xchg
jp
out
mov
das
push
dec
mov
and
sbb
sahf
fadds
push
push
mov
je
hlt
out
movsl
pop
aad
ret
push
and
cli
pusha
jb
lret
outsb
jb
mov
xor
pop
testb
push
scas
mov
dec
clc
ja
cmc
xchg
repz
dec
mov
sti
xchg
mov
inc
lcall
dec
mov
sbb
xor
lret
and
sbb
out
jno
mov
fstps
stos
fs
fmulp
cltd
test
jle
xchg
adc
stos
dec
push
shll
test
xor
xchg
stc
lock
inc
sbbl
pop
aas
jbe
fistpl
faddl
pop
mov
dec
add
jbe
xor
mov
pusha
inc
push
inc
sub
xor
js
pop
in
aad
adc
cmpsl
fiadds
dec
mov
cli
pop
add
lea
lock
and
fimull
je
dec
aad
mov
and
sub
xor
insb
jns
inc
mov
cmc
test
mov
js
cmp
or
jb
xchg
in
int3
sarl
push
mov
fistpll
push
popa
inc
push
or
movsl
fistpl
sbb
xor
and
sub
xchg
xchg
and
in
gs
mov
test
adc
xor
mov
in
fs
mov
xlat
sub
mov
fstpt
out
jo
xchg
sub
das
mov
lcall
lock
sbb
dec
test
jnp
out
jo
mov
jno
lds
scas
out
push
sub
ds
push
jmp
cld
xchg
pop
rolb
xor
mov
xor
sbb
bnd
jns
aaa
imul
inc
push
mov
bound
aaa
rolb
lea
shr
sub
adc
in
mov
out
ja
not
out
into
mov
add
pop
mov
jg
or
xor
imul
pop
clc
mov
in
inc
orl
pop
adcl
add
add
adc
addr16
sbb
add
xor
and
cmp
dec
xchg
xchg
lods
in
repnz
push
mov
jl
lea
mov
test
adc
jecxz
cwtl
insl
movsl
les
pop
xchg
jmp
or
pop
cwtl
cmp
cmp
rclb
mov
xchg
xor
mov
jb
bound
jo
fisttpl
in
push
adc
add
push
mov
inc
into
and
cmp
mov
aas
dec
sub
xchg
inc
xor
xchg
mov
outsb
cmp
mov
pop
or
xorl
sti
les
inc
and
ret
cmp
push
mov
in
jge
xlat
testb
xchg
fnstenv
scas
ret
neg
mov
push
mov
or
in
hlt
in
je
sbb
test
pushf
inc
inc
shl
shlb
loopne
pop
pop
movsb
negb
mov
push
push
jb
inc
bound
xchg
and
jle,pn
inc
cmp
out
mov
mov
pop
mov
mov
scas
xor
mov
push
sub
xchg
in
xor
clc
gs
loop
mov
pop
fcomps
and
ds
in
cmp
rolb
aam
jmp
push
mov
cmp
insb
jnp
fidivrl
sub
loopne
repz
jnp
aaa
jecxz
adc
aad
lret
mov
push
cmc
sahf
xchg
xor
mov
jo
jnp
push
push
test
ljmp
mov
adcl
mov
paddusw
icebp
std
pop
mov
ja
sbb
pushf
bound
stos
popf
push
mov
fistpl
jp
subl
ljmp
shrl
fwait
mov
aaa
push
les
xchg
pop
shll
fcmovu
stc
jecxz
leave
out
stos
loope
cmp
push
adc
and
pop
xchg
cmp
sbb
ds
shlb
out
xchg
mov
roll
adc
jle
lcall
push
jbe
push
inc
fbstp
stc
insl
lcall
mov
xor
mov
popf
sub
in
mov
gs
dec
fsubp
jne
es
lcall
and
inc
test
cmc
into
popl
jns
je
adc
mov
xchg
aam
or
mov
int
pop
and
dec
rclb
jb
in
jnp
je
orl
in
adc
scas
pop
lods
repz
rcrl
push
add
sbb
mov
movsb
jae
mov
ret
mov
xchg
pop
sbb
mov
movl
jge
lods
inc
ja
pop
mov
adc
hlt
sub
or
das
gs
insl
fwait
or
dec
jnp
mov
in
ret
aad
fstl
mov
sbb
fcoml
repnz
out
adc
jae
lds
mov
inc
fisubrs
shll
xchg
xor
xchg
sbb
adc
pop
jbe
daa
mov
lahf
cwtl
pop
pop
pop
pop
xchg
xchg
dec
cmp
sbb
dec
and
push
xchg
fcmovnbe
push
push
in
push
enter
outsl
sbb
popa
sub
sbb
idivl
rcrl
fsubrs
xchg
subb
fisttpl
cmp
mov
fildl
mov
pop
mov
sbb
jecxz
fcmovu
cmp
sbb
inc
mov
jge
ret
popa
insl
xor
popa
test
cmpsb
add
icebp
bnd
repnz
push
xchg
pop
hlt
xchg
arpl
das
lahf
mov
push
jge
or
xchg
xor
jl
adc
mov
movsl
scas
repz
test
je
mov
xchg
cld
ja
stos
test
jnp
add
insl
adc
div
popf
jp
stc
inc
jmp
cmp
mov
dec
lret
dec
daa
mov
jle
jp
mov
rorb
add
movsb
and
mov
add
and
xchg
repnz
sbb
pop
popf
push
pop
xchg
bnd
fdiv
shr
fildl
sbb
sbbb
mov
push
sbb
pop
jg
ljmp
notl
mov
fnsave
xchg
lods
mov
ds
pop
dec
mov
cmc
pop
cld
push
mov
ljmp
mov
xor
mov
shrb
dec
xchg
pop
fildl
push
in
mov
inc
jbe
jae
mov
pushl
adc
cwtl
test
stos
rolb
ss
cmpsl
out
or
mov
inc
xor
ret
aad
push
fnstcw
pop
xor
ficoml
mov
inc
popa
cld
add
pop
push
mov
mov
test
ficomps
xor
jo
push
lock
xor
add
jne
cmp
dec
or
sub
push
ficoms
shl
dec
rcrb
sar
cmp
mov
sub
jo
sbb
in
fists
push
in
in
fdivr
orl
cmp
pop
jnp
ss
adc
xchg
cmc
jp
mov
repz
rcrb
push
dec
dec
push
mov
inc
or
fsubrs
cs
push
hlt
mov
idivl
add
xor
insb
mov
jge
jo
out
in
gs
lea
cmp
sub
fmuls
mov
bound
movsb
aaa
lods
dec
push
pushf
cli
data16
dec
jg
jae
fimuls
sbb
in
xchg
sub
or
divb
inc
jg
dec
add
cmp
jne
pop
test
mov
test
pop
sbb
inc
jmp
adc
xchg
jo
push
jl
imul
aad
jbe
enter
scas
fs
and
pop
xchg
inc
btc
mov
sub
xor
insb
push
cld
sub
mov
dec
mov
hlt
dec
in
js
add
inc
pop
sbb
movb
sti
and
test
movb
movsl
lcall
cli
test
sub
pop
xchg
push
inc
mov
aam
xchg
adc
in
mov
mov
xor
popa
jge
loop
js
out
pop
pop
mov
adc
lret
xchg
out
clc
out
leave
leave
push
sub
daa
add
test
pop
jecxz
mov
xchg
js
push
push
sti
add
inc
imul
in
mov
int
int3
cmp
inc
sahf
mov
negl
jge
insb
inc
ffree
xor
inc
mull
lahf
push
test
lds
fistpl
cld
int
push
adc
push
movsl
xchg
roll
jo
mov
mov
lods
aad
lea
mov
in
inc
adc
xlat
pop
mov
sub
add
pop
adc
mov
mov
cld
int3
push
sbb
enter
in
es
or
push
mov
cld
cld
pop
inc
cs
mov
cmpsl
push
jnp
in
ja
jno
bound
push
in
popf
add
sub
es
adc
jne
cmpsl
cld
pop
jecxz
and
filds
pop
inc
es
fstpt
jmp
ret
call
jg
dec
fwait
sbb
out
je
stos
subb
dec
inc
div
mov
popf
cmp
sub
addr16
push
or
ror
add
mov
test
fidivrl
fidivrl
mov
fcomi
mov
add
es
sbb
mov
xchg
idivb
push
jmp
cld
add
and
stos
test
leave
ret
jno
and
gs
sbb
xor
xchg
xor
and
lea
int3
mov
cmpsb
leave
add
push
cmpb
add
std
test
sub
sub
flds
popa
cmp
inc
jecxz
hlt
push
aad
jmp
xlat
orb
xchg
push
ds
fisttpl
cli
cmc
sub
cmpsl
xor
fstpl
cmp
dec
pop
out
push
lods
jnp
push
loope
push
iret
in
imul
std
mov
mov
dec
in
andl
push
dec
xchg
xchg
testl
sbb
or
cmpsb
sbb
rorl
adc
pop
popa
xor
pop
lods
mov
xchg
lret
div
and
dec
lcall
mov
fdiv
into
adc
add
test
pop
adc
repz
cld
mov
push
int3
insl
cmc
addr16
xor
mov
arpl
repnz
mov
neg
mov
in
cmp
int
push
pushf
jno
jle
fisttps
mov
pop
aas
fnstenv
xchg
add
int
in
dec
inc
jl
incb
ja
pop
cmp
jbe
dec
inc
xchg
xchg
cmpl
inc
jge
outsb
adc
test
ret
cmp
jno
sti
test
jns
adc
or
push
test
loope
lret
pop
jle
outsl
subb
mov
mov
jno
mov
and
or
inc
pop
fiaddl
mov
xlat
mov
push
mov
jnp
cmpb
test
dec
out
cltd
pop
adc
dec
adcl
clc
popl
aaa
fstl
dec
xorb
out
cmpl
adc
xchg
lret
add
inc
pop
in
mov
xchg
lods
lods
push
fsubl
lret
bound
lods
pop
jne
pop
cmpsb
mov
push
fbld
mov
sbb
cli
xor
jp
mov
mov
pusha
mov
jne
js
aas
ljmp
out
cmpsl
adc
push
lods
xchg
xor
jno
mov
cmpsl
pop
pop
ret
cmp
mov
je
cld
or
push
inc
loopne,pt
sub
add
int3
sbb
mov
and
repnz
out
aaa
ficomps
aaa
out
jmp
test
out
jb
addb
mov
imul
aam
imul
movsl
add
lds
jp
rorb
adc
iret
dec
add
dec
sub
fwait
mul
pop
pop
push
and
push
imul
roll
mov
fucomi
mov
scas
sarl
je
mov
jae
sub
xchg
repz
or
dec
mov
inc
push
mov
push
adc
jno
push
jno
or
dec
cs
mov
fidivrs
dec
jo
sub
cwtl
push
dec
repz
cmp
icebp
push
push
imul
mov
ljmp
cli
sbb
push
mov
in
jle
test
insb
lods
sub
daa
push
sbbl
jecxz
and
xchg
lods
inc
and
dec
fs
sub
xchg
push
addb
popa
and
pop
xor
sti
call
stc
lret
and
mov
out
pushf
outsb
out
sbb
xchg
push
mov
es
add
mov
add
js
mov
mov
loope
dec
push
cmp
and
out
mov
in
pop
es
or
lahf
cmp
push
adc
xchg
cltd
cmp
xor
ret
cld
roll
xchg
jo
sub
sub
enter
pop
jmp
push
imull
mov
dec
in
pop
mov
cmpsl
das
lock
mov
push
mov
cwtl
testb
mov
cmpsl
pop
imul
jns
insl
dec
pop
pop
add
test
shll
mov
lcall
aas
lcall
pushf
sub
jmp
int3
mov
gs
or
ret
mov
insb
iret
pushf
lods
mov
cmp
mov
push
aaa
pushf
das
push
sub
sub
inc
xchg
or
pop
push
rcrl
mov
lods
movsb
sarl
and
or
sub
mulb
es
das
jle
xor
aaa
rolb
mov
cmpsb
mov
loop
and
push
or
fbld
fnstsw
fimuls
ja
mov
int
inc
jp
push
jno
mov
fcomp
fwait
dec
es
push
dec
xchg
and
outsb
daa
test
cmpsl
xchg
mov
push
dec
cmp
mov
xor
sbb
test
inc
cmp
push
movsb
dec
sub
jo
sahf
mov
fimull
xor
subb
xchg
rcll
push
xchg
in
jl
sbb
in
push
mov
rolb
fcomps
lea
jmp
mov
jl
or
lea
outsb
xor
mov
fstps
stos
adc
dec
push
test
inc
jne
sti
call
push
sbb
and
mov
jb
add
add
jne
ljmp
push
mov
addr16
mov
dec
mov
insb
push
clc
adc
jg
mov
pusha
cltd
dec
sbb
dec
lods
jecxz
push
jbe
cmp
push
loope
out
add
inc
pop
push
xchg
mov
cmpsb
jb
cli
div
mov
ja
mov
push
jns
mov
sbb
dec
mov
mov
push
lods
add
mov
jge
jecxz
mov
sub
push
push
fldenv
je
fwait
test
scas
xor
lcall
jns
and
push
loope
sub
loope
aas
jbe
mov
sbb
lds
jp
clc
sbb
xlat
mov
out
or
fcompl
mov
clc
pop
xchg
test
jmp
int
sub
or
push
mov
push
jne
movsb
cltd
inc
inc
in
out
mov
push
add
jne
call
sbb
arpl
addb
pop
sti
stc
jl
add
daa
psrld
mov
aas
stc
cmp
bound
sub
stos
mov
imul
movsl
into
jne
imul
out
dec
ds
cmp
adc
test
sbb
sub
push
fildll
lods
jae
sarl
adc
adc
adc
inc
inc
adc
xchg
mov
add
test
pushf
lods
test
sbb
mov
adc
push
cld
jb
mov
jl
daa
dec
cmp
sub
sti
jg
leave
in
mov
fdivs
std
xor
pushl
pop
jge
shrl
xlat
gs
jb
cmp
dec
std
jmp
movsb
mov
loopne
mov
in
push
mov
sub
fsub
cmp
add
sub
test
daa
ljmp
gs
dec
ret
or
sub
daa
xchg
iret
pop
lcall
test
sub
xchg
sub
cmp
mov
add
jmp
daa
imul
sbb
jl
popf
cmp
push
push
test
movsb
test
in
pop
mov
ja
frstor
xchg
idivb
sbb
loope
stos
into
mov
add
ja
and
pop
les
jo
add
imull
gs
fnstenv
fsubl
stos
sbb
pushf
or
cli
mov
addr16
ret
imul
mov
xchg
into
lock
mov
jg
dec
jnp
add
push
sub
lret
lret
ljmp
cwtl
stc
lds
push
cmp
in
fdivl
mov
das
jmp
pop
push
test
mov
xor
sbb
mov
cmp
mov
outsl
out
sbb
sbb
cmc
xor
fildll
daa
fprem
sub
mov
popf
loopne
test
ficomps
dec
int
pusha
lahf
xor
popa
shl
fcoml
in
xchg
add
adc
repz
jmp
push
xor
fwait
dec
jp
outsb
lret
or
adc
orb
jecxz
jmp
sbb
es
mov
or
notb
mov
push
add
mov
mov
in
movnti
stc
ja
lret
inc
lods
daa
in
fiaddl
std
pop
fstpt
jle
mov
mov
popf
jo
or
add
fdivp
adc
jmp
sub
js
ret
rcl
sbb
jnp
or
sbbl
cmp
cli
test
sub
jmp
and
pop
cmp
cli
dec
cmp
ret
cs
decb
pop
ljmp
inc
sar
ret
cld
fs
fnstcw
cwtl
add
clc
and
sub
inc
and
xor
std
rorb
inc
popa
sti
scas
jbe
xchg
sbb
iret
stc
adc
sub
loopne
mov
out
push
or
or
shrb
push
mov
int
in
outsb
and
out
pop
fbld
push
repz
iret
repz
mov
inc
fnstsw
hlt
inc
sar
mov
add
in
pop
es
xor
outsl
cmp
mov
cmpsl
dec
push
jb
scas
shrb
inc
lds
ret
dec
pop
lock
xchg
sbbb
push
mulb
mov
rorb
sbb
ret
enter
inc
mov
stos
ja
sahf
push
xor
pusha
adc
jae
dec
dec
xchg
dec
jl
mov
sti
repz
call
or
jae
push
cmp
pop
idiv
test
lcall
mov
mov
jp
push
jecxz
cmpsb
shlb
lods
mov
cmp
sbb
andb
es
movsl
out
pop
ret
inc
fmul
mov
fimull
iret
out
lret
ret
imul
popf
jns
lock
pusha
push
ffreep
fsubr
inc
adc
xchg
mov
or
decb
inc
mov
xor
xor
jb
fwait
das
pop
adc
cmp
adc
lahf
inc
and
jge
fimull
sbb
jle
sahf
mov
add
dec
lds
or
sbb
ja
sarb
jae
scas
add
ss
int
sub
add
xchg
pop
shll
stos
add
and
lods
loop
adc
push
mov
xchg
mov
xor
xchg
mov
data16
mov
dec
mov
adc
cmp
mov
ds
lods
loope
lods
sahf
sbb
dec
xchg
dec
pop
ss
lahf
mov
decb
and
xor
lock
je
push
cmp
dec
popf
notb
and
cld
outsb
sahf
sbb
ja
cmp
jg
das
imul
adc
js
js
push
add
mov
mov
lahf
out
loope
push
inc
test
push
test
mov
arpl
and
inc
jg
sbbl
pop
cld
sub
mul
jae
outsb
test
lcall
mov
js
inc
jl
adc
bound
xchg
jae
imull
cli
insb
push
iret
dec
mov
dec
or
xchg
sbb
icebp
adc
adc
add
add
xlat
jge
sub
out
sbb
pop
cmc
cmp
leave
pop
test
clc
mov
inc
into
xchg
fistpll
inc
mov
decb
cld
xchg
icebp
bnd
bound
mov
test
mov
adc
adc
popa
into
testl
pop
sbb
repnz
ret
xchg
arpl
dec
jne
dec
adc
enter
icebp
negb
into
cmp
push
adc
movsb
mov
or
cwtl
daa
adc
sub
jae
push
sbb
out
stos
loope
iret
stos
movl
das
push
sbb
push
jae
dec
int
mov
push
add
and
pop
push
xchg
aaa
or
jl
call
in
out
inc
push
push
out
into
sbb
int3
xor
mov
sbb
rcll
out
enter
and
dec
dec
adc
sarl
test
data16
fsubl
js
and
jo
repz
stc
mov
jg
sbb
lret
testl
pop
sub
insb
xchg
rcl
shll
fs
add
arpl
or
pop
loopne
or
in
inc
cs
or
ljmp
pushf
int3
push
test
xchg
pop
inc
rcrb
mov
jmp
ficompl
push
movsl
add
icebp
stos
push
out
pop
rorl
ret
pop
pusha
or
cwtl
shlb
mov
sub
lods
mov
lret
aam
jns
dec
pop
pop
arpl
jmp
scas
loop
xchg
mov
push
pop
rol
gs
clc
in
add
push
fwait
inc
mov
xchg
jg
lods
mov
and
lret
cmp
or
and
out
and
ret
repnz
pop
dec
fs
dec
xor
mov
fisttpl
pop
sbb
lret
shll
xchg
inc
sub
mov
ljmp
cmp
outsl
test
call
mov
fwait
xorl
test
pop
aam
fdivp
push
out
out
out
inc
fadds
mov
sbbl
jno
add
xchg
and
cmpsb
sar
mov
dec
repnz
pop
sbb
or
iret
outsb
fcoms
data16
cs
jle
ret
loopne
adc
mov
xchg
in
loope
fcompl
dec
sub
ja
test
inc
stc
mov
or
mov
adc
pop
in
lods
jne
mov
jbe
stos
mov
js
hlt
loop
jo
mov
cmp
iret
sbb
and
loope
adcb
lods
inc
cwtl
inc
clc
inc
add
or
dec
mov
push
test
pop
leave
sbb
fs
jb
aaa
push
mov
pop
jbe
gs
pushf
inc
lret
push
data16
jle
jo
ret
bound
xchg
inc
out
cmpsl
jnp
out
adc
mov
xor
or
push
loop
mov
ds
in
add
jge
pop
push
mull
jb
dec
mov
rcrl
sub
push
jl
orl
pop
fnstenv
divb
xchg
ret
movb
cmp
push
xchg
mov
xor
rolb
das
and
cmp
push
pop
mov
sahf
out
dec
pushf
xor
adc
jno
gs
add
dec
xchg
or
cmpsl
hlt
test
dec
mov
mov
jmp
aad
sub
ret
fdivs
sahf
push
xor
aam
rclb
insl
sub
or
call
jns
xor
in
xor
add
scas
and
cmp
repnz
xor
xchg
xor
xchg
push
and
fimull
adc
sbb
push
fcom
repnz
xchg
stos
jo
addr16
lods
pop
arpl
std
ficompl
adc
or
fs
and
leave
mov
jns
imul
js
cmp
mov
loop
pusha
enter
mov
sbb
cmp
jae
outsl
jno
pop
push
les
negb
adc
fidivrs
jno
sub
or
lfs
cwtl
mov
bound
sbb
in
mov
push
call
cmp
lods
mov
push
int3
inc
aam
push
pop
pshufw
jl
into
mov
sub
mov
gs
repnz
movsb
sbb
sub
into
bound
shl
or
cmp
cli
outsl
shlb
and
jge
cwtl
sub
add
inc
mov
jne
arpl
or
cs
mov
inc
and
push
adc
mov
push
stos
test
rcrl
mov
insl
lahf
pop
ss
add
int
stos
push
sub
decb
ja
xor
xorl
je
in
push
push
outsl
outsb
xchg
push
icebp
insb
pop
ljmp
cwtl
je
jae
sbb
decb
jle
out
andl
jmp
xchg
xchg
insl
sarb
dec
cld
out
sbb
xor
xor
push
pop
jecxz
imul
jmp
pop
add
mov
mov
popf
add
xor
in
ret
pushf
adc
cmp
mov
dec
shl
gs
inc
scas
jns,pt
xor
mov
lods
add
aaa
cmpsl
cli
jo
adc
hlt
adc
sub
gs
jmp
add
add
fstpl
enter
inc
stos
sbb
or
jmp
pusha
shl
out
push
add
scas
jae
fcmovu
xor
loop
xchg
jb
fsubl
sbb
cmp
xchg
std
add
pop
and
pop
mov
dec
cmp
cli
insl
fstps
sbb
and
insb
stc
xchg
mulb
out
test
pop
cmp
or
daa
add
mov
jl
sub
inc
enter
mov
inc
mov
enter
push
adc
ret
outsb
jmp
pop
fcoml
mov
mov
test
insl
mov
xor
popf
loopne
lret
inc
sbb
fs
pop
gs
and
mov
inc
or
lds
xlat
jbe
popa
push
es
mov
fstp
movb
and
std
pop
push
pop
mov
outsl
xchg
push
lds
int3
mov
mov
or
loopne
xchg
jp
jae
inc
in
stc
sbb
lds
mov
or
andl
pop
dec
jbe
and
lret
in
mov
fimull
jne
or
les
mov
stc
mov
pop
enter
roll
xchg
fwait
repnz
sub
clc
jp
xchg
xor
push
loope
scas
lds
push
cmp
int3
xchg
outsb
lcall
add
push
inc
out
pop
fwait
jl
mov
sbb
jl
stc
pusha
push
lret
or
xchg
lock
cli
into
or
xlat
sbb
repnz
adc
loop
xchg
je
dec
cmp
aad
dec
mov
sub
or
push
jnp
fucom
or
sbb
or
arpl
jnp
or
mov
fists
pusha
imul
sbb
ss
mov
in
fs
inc
adc
das
loopne
and
out
insb
inc
repnz
push
pusha
sbb
fldenv
pop
cwtl
inc
es
fstps
ja
or
pop
leave
movsl
mov
nop
xchg
lock
fstpt
pop
sub
or
xchg
cmp
pop
and
xor
pop
and
xlat
jo
in
leave
mov
leave
or
andb
xchg
push
lcall
std
fldt
xlat
out
sbb
or
sbb
mov
cmpsl
lcall
mov
adc
lret
pop
sub
sbb
or
test
jbe
mov
call
ja
mov
popf
xchg
xor
mov
repz
scas
mov
push
xchg
hlt
sub
aad
cli
in
jnp
mov
ss
lcall
cs
sti
sbb
push
test
dec
cmp
int
dec
mov
cmc
pop
arpl
bound
ret
or
outsl
cs
dec
xor
and
pop
cld
push
cltd
push
ss
jge
cmpsb
iret
sub
xchg
adc
test
adc
adc
mov
call
dec
push
ja
inc
pop
js
test
dec
jae
dec
sub
pushf
ds
js
xor
fprem
cmp
in
push
sub
outsl
punpckhbw
negl
inc
xor
cmp
add
jnp
std
pop
cmp
add
imulb
stos
inc
sbb
mov
in
scas
sahf
mulb
sbb
jno
and
sbb
loop
add
push
cmpsb
in
dec
add
test
mov
inc
lcall
rol
cmc
adc
rorl
lcall
pop
xorb
add
cmp
sbb
lret
filds
ljmp
mov
add
inc
pop
loopne
inc
pop
xchg
mov
jae
jp
jp
cmp
xchg
and
mov
pop
pushf
lock
cmpsb
inc
and
pop
scas
jns
ss
mov
cs
int3
fdivrl
inc
jp
inc
in
dec
inc
outsb
es
cltd
shr
pop
cmovno
cmp
push
aam
lret
adc
rclb
cld
push
bound
add
mov
xor
mov
orb
repz
test
jle
sti
xor
cli
pop
movsb
inc
sbb
cmpb
sbb
sbb
insb
and
and
nop
fwait
mov
add
or
pop
mov
movsb
mov
hlt
xchg
xchg
xor
cmpsl
imul
fmull
test
pop
push
shll
into
stc
mov
sbb
test
bound
cltd
push
push
push
lret
rorb
xor
mov
adc
scas
lahf
lahf
aad
pop
add
mov
push
das
mov
pop
mov
out
dec
sub
dec
cltd
outsb
addr16
sub
lods
jbe
mov
rsm
adc
xor
add
or
lahf
cmp
push
inc
in
arpl
int
push
cmp
mov
xor
or
pop
ss
js
outsb
inc
pop
add
div
popa
sub
jle
pop
int
movsb
xor
mov
mov
dec
fstl
cmp
dec
mov
push
push
adc
in
imul
pop
mov
cmp
outsb
pop
out
enter
stos
popf
push
nop
rcl
fildll
xor
bound
sahf
xchg
pop
iret
fisttpll
imul
lods
in
xchg
cmp
jle
cmpsl
adcl
sti
sbb
lret
in
loope
xlat
pop
shl
mov
jg
je
and
cmp
jl
in
test
sbb
push
movsb
xlat
jns
add
out
mov
xor
popf
pop
daa
orb
push
mov
sub
xchg
adc
or
icebp
das
test
bound
lcall
ds
sub
or
rol
sbb
xor
xor
fwait
add
lock
pop
in
pcmpgtw
fmull
icebp
ss
mov
ljmp
stos
pushf
sub
enter
jl
xchg
pop
stos
mov
add
aad
pusha
cmp
mov
inc
sbb
cmp
mov
add
test
inc
mov
mov
sub
es
add
mov
inc
lcall
mov
movsl
adc
jnp
mov
out
pop
outsl
pop
loope
xchg
mov
imul
add
inc
add
addr16
xor
js
aad
out
mov
xor
or
and
and
std
jp
jne
iret
mov
pop
pop
lock
add
lds
or
ds
dec
adc
jecxz
aas
insl
mov
dec
dec
and
mov
sarl
cmp
rcll
push
cmp
pop
data16
pop
sub
sbb
mov
call
inc
push
sbb
lods
push
and
testb
push
mov
std
inc
fcmovu
adc
adc
cltd
xchg
addr16
sub
xchg
lret
std
pop
sub
das
mov
push
dec
pop
dec
stos
mov
push
mov
repnz
inc
jecxz
adc
in
push
testb
fucomp
dec
cmc
cli
icebp
xchg
aas
pop
popa
int
xor
or
xchg
and
outsl
adc
out
add
rol
ja
jmp
fcomps
in
pop
fs
mov
and
lock
push
sbb
and
clc
pop
mov
imul
ret
movsl
push
xor
js
lret
inc
and
cmp
xchg
and
xorb
mov
jb
push
pushf
pop
xchg
pop
out
mov
pop
xchg
test
shr
push
push
pop
nop
pop
stos
mov
movsb
cld
fcompl
test
rcll
cmp
adc
jp
daa
fisubl
or
push
dec
call
adc
stc
inc
xchg
or
mov
les
dec
push
aaa
push
and
mov
or
mov
mov
jns
sub
dec
dec
movsb
loopne
in
jg
jne
shll
ds
dec
stos
iret
mov
sbb
xchg
cmp
add
lret
adc
or
xor
jo
push
or
cmp
xlat
out
dec
stos
ret
stc
mov
hlt
js
int3
loop
add
ds
pop
stos
jmp
sub
sbb
fdivrs
loop
jb
push
mov
fisttpl
fisubs
and
vmovss
push
test
mov
mov
in
mov
adc
pop
and
adc
into
lcall
ret
xchg
jg
push
subl
lock
push
sub
mov
je
lock
mov
insl
fsubr
test
mov
nop
enter
sti
inc
jnp
js
xchg
mov
lods
mov
in
movsb
fimuls
ja
jge
out
mov
and
inc
xchg
xor
jg
and
adc
orl
cmpsb
mov
jbe
adc
aad
mov
jge
sub
or
jg
in
pop
mov
push
stos
clc
stos
and
or
push
add
adc
mov
ljmp
jno
es
cmp
mov
cmp
mov
sub
xchg
cmp
inc
add
push
orb
push
xor
push
jmp
jp
imul
dec
push
andl
sub
pop
pushf
loopew
rolb
mov
xor
nop
in
in
pop
add
outsl
sub
in
sbb
sub
inc
and
adcl
push
imul
and
mov
lcall
int3
xor
and
mov
lahf
popa
in
sub
cmp
dec
shrb
fistpl
add
sahf
dec
daa
das
or
mov
shll
stos
pusha
xorl
dec
cmpsl
jle
fstpl
std
or
sbb
sbb
imul
insb
mov
adc
jne
popf
test
insl
enter
imul
fimuls
push
sbb
test
rcrb
fldcw
push
and
lods
nop
mov
mov
dec
or
repnz
fcmovbe
xchg
dec
sub
jb
test
pop
and
popa
xchg
xchg
push
movsb
fmul
in
jbe
movsl
jbe
xorl
stos
jo
jbe
inc
cmp
mov
or
movsb
lods
xor
in
rep
les
popf
push
or
in
in
orb
dec
out
mov
dec
mov
mov
imul
mov
adcb
das
outsl
xchg
imul
push
test
sbb
popa
stos
inc
sahf
jle
ljmp
stos
out
ret
loopne
cmp
adc
int
inc
inc
xchg
jmp
aam
int
pop
out
inc
popa
xchg
dec
fcmovne
push
mov
fisttpl
rcrl
pop
js
mov
gs
dec
push
js
mov
xchg
sbb
fstps
ljmp
test
mov
fadds
pop
cwtl
outsb
ds
cmpsb
add
xchg
xchg
or
mov
cld
pushf
lret
xchg
pop
into
sbb
mov
fiaddl
test
mov
call
sbb
pop
push
into
mov
add
pop
add
iret
fsts
or
sarb
test
fcmovbe
test
ficoms
daa
push
dec
xorl
or
sbb
inc
push
scas
add
sub
stos
push
frstor
mov
pushf
add
inc
xchg
jo
jmp
fwait
mov
jle
and
or
push
adc
dec
ret
rcll
shrb
inc
mov
addr16
mov
xor
mov
inc
sbb
fimull
xor
push
jnp
les
pop
arpl
orl
outsb
daa
prefetch
push
lcall
push
call
cltd
xor
jecxz
push
pop
cltd
mov
pop
jmp
cmp
mov
mov
inc
popa
arpl
cltd
popl
lcall
jns
shlb
jnp
hlt
pop
clc
add
in
mov
out
repz
jp
stos
push
shlb
das
xor
je
xchg
ficoml
inc
mov
aam
outsb
cwtl
cld
adc
aam
cmp
or
adc
rolb
adc
push
mov
fcoml
dec
mov
xor
movsb
pop
iret
xor
pop
popa
shrl
sti
test
jp
in
xor
test
xlat
in
or
cmp
xchg
mov
std
or
inc
aad
adc
pop
xchg
addb
int3
inc
mov
ret
and
enter
sbb
loope
call
xor
mov
movsl
pmaxsw
push
jae
insb
movsl
pop
enter
cmp
out
repnz
inc
pusha
or
scas
cmp
inc
xchg
fldcw
punpcklwd
lret
inc
test
popa
inc
sbb
sbb
out
mov
fcompl
testl
mov
cwtl
mov
mov
jge
fistpll
xchg
ret
push
imul
dec
xor
mov
cmp
xchg
push
lock
xchg
mov
sbb
sbb
fprem1
sub
xor
stos
lret
punpckhwd
jmp
out
lea
push
shrl
leave
mov
lea
in
jns
loope
or
sub
sbbb
and
ds
cmp
iret
pop
push
inc
cli
add
jno
insl
loopne
and
lahf
dec
and
mov
pop
clc
loopne
sub
cmpsl
shrb
pop
push
out
fidivrl
in
sub
mov
sub
outsl
dec
xor
push
testb
cmpl
int
add
dec
int3
sbb
or
mov
cmp
pop
cmp
mov
push
mov
ljmp
shrb
mov
xor
xchg
sarl
add
mov
iret
imul
cmpsb
push
jbe
jne
nop
fcoms
js
push
negb
test
fadds
imul
aam
mov
sub
sub
movsb
popa
shlb
int
dec
fdiv
push
sarl
and
popa
mov
ds
sub
shlb
or
stc
popa
adc
cli
mov
push
jmp
mov
ja
mov
lods
cwtl
imul
add
subl
mov
lods
mov
ret
adc
pop
inc
cld
or
das
jmp
sub
mov
mov
sarb
out
cltd
scas
test
vpsllq
inc
test
fisubl
pop
rcrb
dec
jae
and
sahf
jb
dec
mov
imul
lods
pop
push
or
inc
bound
mov
inc
repz
mov
cmp
pop
mov
mov
jmp
in
inc
xor
jg
lods
push
pop
inc
push
push
push
out
inc
jmp
pop
dec
das
sbb
nop
push
add
pop
shl
aas
or
in
aaa
cli
rclb
int
ss
sbb
push
sbb
fbld
adc
jne
inc
mov
sbb
repnz
rcl
out
xor
loope
fnstcw
fsubl
loop
cmp
pop
aas
add
movsb
push
jle
mov
mov
call
inc
imul
mov
outsb
jl
jbe
test
add
jp
jbe
fs
mov
outsb
lea
mov
sub
jb
adcl
outsl
jae
xchg
mov
jge
inc
ret
mov
sub
jmp
lds
enter
adc
scas
in
test
push
ja
mov
sbb
inc
outsb
mov
jmp
mov
pop
jl
sub
mov
pushf
or
stos
push
lods
sahf
scas
pop
or
lds
push
ret
outsb
jg
imul
mov
shll
cmp
xchg
sbb
pop
outsb
movsl
insl
lds
and
push
rcll
sarl
in
jno
test
int
jno
pop
pop
loopne
mov
adc
repnz
fnsave
and
iret
xchg
jle
shll
mov
xor
sbb
adc
cmp
push
and
pop
jae
loopne
xchg
loope
dec
es
xchg
lods
mov
pop
mov
std
decl
fmull
mov
daa
hlt
inc
icebp
push
and
push
mov
jge
pop
dec
mov
cmp
es
stos
push
xchg
stos
adc
test
testb
insb
les
insb
mov
push
jae
sbb
aaa
or
push
scas
rcrl
out
repz
push
mov
mov
dec
cmp
push
je
xor
xchg
push
pushf
gs
sub
mov
bound
mov
inc
push
mov
jo
ja
lret
push
and
cmp
dec
dec
arpl
or
inc
test
hlt
dec
push
ljmp
adc
lahf
es
adc
leave
js
sti
repz
sti
fildll
add
ja
scas
stc
fldcw
negl
lret
lods
cmp
test
adcb
lods
sub
out
push
xor
scas
pop
cltd
or
push
test
push
popf
loop
data16
and
jo
insl
add
int3
out
out
xor
pop
adc
push
jecxz
lcall
or
xchg
das
scas
xchg
dec
ljmp
mov
or
pop
bound
pop
push
jg
mov
fwait
inc
fcompl
cmp
fs
test
fildl
sbb
adc
in
dec
jle
dec
shll
es
push
add
add
mov
mov
add
cwtl
mov
xchg
add
and
loopne
xchg
sbb
dec
mov
mov
add
xchg
xor
fidivl
add
fs
mov
aam
mov
sahf
pop
ret
ret
jae
xor
cmp
fsubs
xchg
mov
and
imul
and
mov
stc
xchg
xor
or
pushf
cmp
mov
out
gs
jb
fstl
out
outsl
mov
insl
cmp
pushf
lds
cmpl
or
jmp
mov
aad
sub
add
dec
ds
mov
xor
filds
adc
gs
sub
sbb
sub
mov
arpl
jl
mov
jg
mov
xchg
popa
xchg
lods
dec
add
xchg
lock
in
lcall
jmp
bound
dec
dec
dec
or
int3
pop
lret
or
lods
sbb
mov
ds
pop
ds
test
das
bound
jnp
imul
lahf
outsl
jp
sub
rorl
fisubs
add
xchg
and
lea
pop
repz
out
js
cmp
sbb
aaa
pusha
sbb
shlb
or
pop
lret
fwait
jb
imul
daa
adc
or
xchg
out
adc
test
out
xchg
test
sub
inc
or
fiaddl
add
jmp
stc
mov
mov
and
cmp
sbb
cwtl
cmpl
lock
dec
mov
add
push
mov
mov
iret
loope
lods
std
jecxz
test
vpshufd
or
insb
dec
icebp
in
push
lods
cmp
movsl
data16
int3
aas
cmp
ja
add
shlb
into
mov
repz
cltd
dec
cmp
loopne
cwtl
inc
mov
mov
inc
push
and
fsubp
loope
mov
cmp
sbb
cmc
xor
cmp
mov
xchg
testb
stos
or
jge
je
pop
pop
hlt
fs
shr
divps
push
inc
mov
xlat
pushf
jle
pop
lret
adc
sub
sbb
fisttpl
sahf
push
js
test
add
out
push
js
xlat
pop
xchg
jp
push
cltd
fs
mov
cmpsl
add
dec
add
imul
int
add
push
shlb
and
mov
daa
jge
sub
sub
adc
adcb
stos
test
jo
js
enter
mov
xchg
cmp
cli
outsl
pushf
test
loop
mov
dec
mov
add
cmp
xchg
dec
mov
in
xor
push
out
mov
cmp
dec
push
mov
insb
test
jp
sub
sub
inc
popa
imul
xor
pop
std
xor
mov
cltd
pop
lret
lret
pop
or
aad
ret
enter
xchg
push
data16
mov
mov
pop
ljmp
out
es
outsb
mov
push
jmp
push
sbb
jg
or
dec
sbb
popf
sub
lea
jae
or
int
mov
popf
popf
dec
stc
xor
add
xor
arpl
push
mov
push
andl
shl
clc
outsb
push
out
in
pop
and
test
or
pop
dec
aaa
aad
lret
sub
inc
xchg
push
cwtl
loope
add
aam
neg
ret
mov
pop
xor
or
xor
dec
mul
jecxz
ss
scas
stc
test
adc
aam
push
ss
add
cmc
jno
pop
pop
push
movsl
mov
mov
xor
pop
imull
pop
sbb
in
pop
push
jmp
in
out
in
cld
loope
stos
sbb
cmp
inc
shr
cmp
adc
cli
or
inc
lret
in
xchg
lcall
pop
insb
dec
mov
in
sbb
push
mov
addr16
jmp
sti
cmc
aam
nop
outsl
xchg
repz
mov
movsb
pop
dec
jecxz
adc
out
push
xor
xor
aad
movsb
lret
xchg
xchg
pop
pop
in
xor
sbb
sahf
int3
jmp
sahf
jle
out
xchg
adc
fs
lea
adc
adc
jge
cmp
push
minps
dec
rcr
mov
xchg
xchg
adc
xchg
aaa
int
cli
sbb
and
xchg
mov
aas
std
cltd
xor
insb
inc
std
xchg
shrl
notb
add
cmp
sbb
loop
dec
imul
pop
mov
je
mov
addr16
lods
xchg
rep
dec
xor
jne
enter
movsb
repnz
aam
push
push
adcb
jmp
push
inc
ds
sub
ljmp
pop
ror
mov
jmp
scas
popf
adc
cmp
lret
xchg
icebp
or
xchg
inc
into
push
mov
ss
pop
adc
or
clc
lods
push
insl
cltd
dec
repz
lds
mov
inc
rcr
gs
and
es
test
xor
jmp
or
and
pop
sub
xor
cmp
xchg
arpl
mov
pop
movsl
pop
bound
mov
rcll
leave
mov
pop
sbbb
js
push
bound
push
movsb
lret
mov
jmp
jo
test
adc
xor
cmp
outsl
push
lcall
xchg
scas
xchg
fucomi
iret
jae
mov
adc
rorb
xor
imulb
fidivrl
sub
pop
or
mov
adcb
adc
iret
insb
clc
gs
push
sbb
dec
mov
pop
inc
push
sub
inc
mov
sbb
pop
int3
jno
pop
lds
fistpll
or
push
jne
xor
jg
std
sub
repnz
mov
pop
arpl
xchg
xor
test
inc
and
mov
int
leave
dec
adc
clc
sub
jbe
xor
mov
cmp
ljmp
jge
jnp
mov
loope
lods
cmpsl
fcomps
scas
out
popf
xor
xor
fists
jbe
sbb
dec
clc
xchg
mov
xchg
xor
iret
and
jae
cmp
jo
hlt
cmp
jl
out
ret
shlb
xchg
push
mov
std
jecxz
jbe
xchg
hlt
je
repz
jg
pop
pop
pushl
ret
xchg
push
enter
ret
push
or
out
push
mov
xor
add
cld
pop
int
mov
cld
adc
jmp
inc
jb
lret
fstpl
insl
mov
xchg
cmpb
addb
and
jmp
scas
push
xchg
mov
xor
fnstcw
cmp
and
out
push
stc
icebp
fst
dec
cmpsl
lahf
lods
jae
repz
sbb
dec
or
mov
pop
test
and
loop
int
dec
adcl
aam
sub
dec
and
stc
push
cmp
and
or
xor
cmpsb
mov
push
in
aad
adc
lahf
push
andl
and
xor
adc
cmpl
or
mov
sbb
dec
cmpsb
ljmp
sarl
test
cmp
arpl
pop
popa
loope
mov
loop
mov
in
and
pop
scas
push
mov
daa
ficomps
nop
jl
or
xchg
mov
es
jp
sbb
ret
sti
inc
xchg
jecxz
xchg
jne
jns
dec
mov
jle
popa
nop
inc
fidivrs
lock
or
mov
call
xchg
dec
lret
mov
mov
push
test
hlt
das
orb
sar
cmp
popa
cmp
lret
pop
js
inc
test
cmpsl
fildl
xchg
xchg
sbb
das
adc
sti
addl
fs
xor
jge
mov
mov
mov
bound
push
sbb
jecxz
push
mov
jecxz
enterw
out
sbb
out
filds
cmc
jns
lock
cmp
jbe
orb
je
jl
lods
mov
scas
in
cli
addr16
mov
outsl
clc
cmp
sub
pop
adc
or
push
lods
jns
or
in
push
dec
push
add
fdivs
jp
add
jbe
lods
mov
cmp
mov
sbb
fst
adc
inc
add
push
clc
add
addr16
fcoml
push
outsb
dec
idiv
lods
mov
mov
movsl
addr16
sub
pop
lcall
out
lods
fs
sbb
pop
push
in
cwtl
dec
lcall
hlt
or
addr16
or
gs
imul
shl
jb
out
mov
ja
test
inc
pop
push
pop
jb
sbb
mov
movsb
das
out
rol
add
ss
insb
sbb
xchg
cmpsl
rorb
in
sbb
repz
fldenv
outsb
sbb
call
lds
enter
mov
les
pop
cmc
test
sub
push
cwtl
mov
fstpt
lea
repnz
jmp
insb
imul
loopne
or
or
push
movsb
stc
sbb
mov
cmp
dec
xchg
in
adc
cmp
cmp
stos
pushf
and
xchg
fisttpll
mov
fdivs
in
daa
inc
and
push
cmp
pop
jbe
jae
or
hlt
jmp
test
imul
mov
mov
push
je
out
test
push
je
push
push
xor
pop
out
xor
stos
test
mov
fcmovne
push
shlb
in
sahf
fisubrs
dec
in
outsb
and
cld
shlb
loopne
mov
mov
jne
inc
ret
ds
sti
inc
push
jbe
pop
fidivs
mov
mov
jl
and
fimull
out
fld
test
xor
nop
adc
imul
mov
dec
adc
mov
jb
add
dec
mov
int3
cli
orl
jecxz
push
or
lods
and
sbb
sbb
ss
mov
xchg
sbb
int3
scas
pop
enterw
jnp
arpl
ja
lret
outsb
jmp
xlat
or
mov
jp
leave
pusha
mov
pop
dec
sti
insl
lea
mov
mov
xor
jb
rorb
inc
xchg
jns
inc
xchg
mov
cltd
leave
gs
or
subl
or
inc
aad
and
or
push
arpl
repnz
movsl
pop
sub
sti
xchg
incl
inc
test
sub
or
add
sub
rolb
mov
jne
cwtl
push
xor
or
pusha
or
decl
imul
and
mov
outsl
in
imul
loop
call
andl
pop
and
int3
and
in
sbb
mov
popa
fistl
stos
add
mov
aaa
xchg
lahf
lods
test
mov
mov
pop
orl
or
lea
jg
je
pushf
inc
lea
xchg
inc
popl
dec
arpl
test
push
ljmp
fdivs
xchg
push
xor
add
lea
mov
lds
cs
js
adc
out
pop
pop
or
and
mov
fnstenv
loopne
jmp
pop
aad
cltd
push
out
inc
xlat
push
ja
dec
loopne
inc
dec
cmp
test
dec
ret
or
cmpsb
dec
out
jbe
lds
or
dec
jle
pop
lock
inc
int
xchg
mov
lock
sub
xchg
aas
pop
inc
frstor
js
dec
add
mov
loopne
sbb
jge
xchg
sbb
fwait
aad
jbe
lcall
and
sub
jo
dec
imul
mov
iret
and
jb
xchg
xchg
mov
into
cld
fcoml
push
out
and
mov
xchg
out
mov
out
rcrb
inc
mov
inc
dec
insb
lods
dec
ret
into
cld
lret
test
mov
mov
aaa
dec
pop
in
in
cmp
adc
test
sahf
cmpsl
lea
lods
mov
mov
pop
repz
mov
lods
sub
repz
push
push
ds
syscall
fwait
ljmp
in
pop
sbb
mov
rclb
je
ljmp
out
sbb
xor
test
adc
mov
sahf
cmpsl
cmp
pop
sub
mov
cs
and
mov
cmp
rcr
fcom
mov
shlb
hlt
in
pusha
mov
daa
add
pop
mov
nop
outsb
insb
pop
jg
enter
dec
cltd
pop
bound
mov
sub
fmulp
sbb
inc
gs
sbb
outsl
cmp
jo
shld
push
mov
in
mov
or
xchg
mov
aas
pop
mov
stos
add
inc
pop
test
push
xor
xor
pop
daa
outsb
and
or
sahf
push
cwtl
push
pop
ret
xlat
mov
imul
cwtl
or
sbb
mov
push
jae
jmp
les
sub
add
xchg
mov
repz
sbb
lock
pop
jns
and
cmp
lcall
adc
and
mov
xor
push
dec
pop
push
lds
in
imul
lret
jle
insl
pushf
cmp
mov
inc
xor
ret
pop
adc
cld
int
insb
mov
pop
cld
xchg
adcb
cmp
push
ss
pop
dec
lds
fldcw
es
mov
adc
int
xor
imul
dec
sbb
les
imul
repz
mov
pusha
inc
sub
in
push
fldt
jecxz
ret
pop
cmpsb
jns
pop
stos
test
jo
test
movsl
test
sbb
dec
rorl
or
cli
iret
mov
cmp
adc
sbb
cwtl
or
pop
pop
xor
pushf
push
jb
arpl
test
sbb
adc
rorb
rcr
std
jle
push
insl
insl
xchg
movl
adc
and
mov
jp
fldt
rorb
xorb
lahf
push
add
jp
dec
test
shlb
sahf
sti
lahf
aaa
rolb
pushl
or
shrl
fimuls
push
sbb
xchg
ljmp
pop
and
sbb
idiv
mov
fdivr
cmp
dec
mov
arpl
out
mov
jns
xor
sahf
lock
repnz
xchg
or
sarb
sbb
push
lea
jl
mov
xchg
push
sub
sbb
fcoms
add
mov
lds
mov
ficompl
pop
leave
repz
mov
out
into
and
divb
pop
ficoms
or
jns
std
pop
sbb
or
int3
imul
jl
xchg
xor
addr16
inc
cmp
movsb
insl
or
repz
xor
sub
mov
mov
lret
jl
out
cmp
aaa
mov
sbb
dec
push
sub
fsubl
jo
imul
lds
xchg
outsb
sub
call
cld
fcoml
aas
pop
push
jnp
inc
and
inc
push
daa
adc
test
stc
sbb
or
push
push
xor
sbb
push
js
insb
sbb
je
pop
insl
std
cmpsl
xlat
cmc
lods
cmp
cmp
push
push
jle
hlt
loopne
repz
cmp
sbb
dec
stos
add
fsubl
xchg
icebp
or
push
clc
stc
xor
repz
cmpl
inc
xchg
push
mov
xchg
sbb
fdivs
lret
push
xlat
or
and
inc
pop
jg
test
sub
xchg
psubusb
cmp
movsb
push
push
das
jne
pop
fisubl
les
xchg
mov
inc
or
ja
decb
fidivs
lret
sub
inc
mov
and
xchg
cli
push
cmpsb
out
adc
add
or
jo
cmp
cmp
pop
push
ss
xchg
arpl
in
shrb
movsl
jns
sub
test
out
xchg
mov
mov
inc
push
xor
popa
mov
sub
stos
mov
out
jl
movsl
adc
sarl
popf
test
xchg
push
lds
jle
add
pop
xor
out
cld
fwait
pop
mov
dec
loopne
mov
popa
inc
push
inc
mov
test
jo
fstps
rclb
loop
jecxz
test
xchg
cmpsb
leave
xchg
mov
jno
xchg
adc
adcb
jp
jne
out
call
jl
popa
sahf
test
xor
sub
xor
inc
ljmp
addr16
pop
inc
jnp
and
dec
dec
mov
cmp
outsb
sub
int
enter
mov
fldenv
and
aaa
imul
mov
jecxz
fs
push
dec
xchg
pop
xor
sbb
push
call
movsl
push
push
loopne
sbb
ror
pop
inc
push
add
adc
leave
pop
mov
pop
arpl
movups
lods
xor
out
ret
pop
imul
xchg
adc
loope
repnz
and
sbb
xor
inc
arpl
jae
mov
sub
inc
cmp
dec
popa
in
add
jecxz
pop
fs
outsl
gs
repnz
and
pop
jne
rclb
aaa
xor
sbb
dec
xchg
lods
movsb
jne
push
out
dec
arpl
push
mov
jae
adc
shrb
mov
sub
or
stos
cs
pop
stc
mov
pop
pop
lock
in
gs
bound
cltd
push
mov
cmc
loope
fdivl
fs
sar
xor
fidivl
mov
bnd
or
jge
push
xor
pushf
cmp
je
adc
push
sbb
push
ja
sbb
fmulp
mov
in
inc
xchg
xor
lock
add
add
mov
cmp
lret
push
adc
cs
loop
sti
dec
lods
pop
adc
fwait
out
in
scas
mov
mov
and
or
pop
push
jl
push
push
mov
sub
mov
dec
cli
test
dec
test
sub
sub
ror
mov
or
push
push
jb
add
pop
adc
sarl
in
fs
pop
sub
xchg
sub
clc
jae
jo
mov
shlb
nop
pop
mov
add
push
pushw
lods
cmp
loopne
ss
pop
add
mov
loop
sbb
mov
mov
outsb
inc
and
inc
imul
movsb
mov
bound
std
leave
xchg
clc
sub
pop
xchg
xchg
les
fsts
jnp
fs
les
fistpll
scas
jg
push
adc
sbbb
xlat
pop
jg
push
shll
adc
dec
push
out
stos
js
mov
rclb
pop
into
pop
pop
add
push
inc
push
sbbb
inc
jnp
outsl
addb
inc
in
xchg
sub
out
test
mov
xor
shrb
push
lods
mov
iret
in
bound
add
js
outsl
or
push
mov
xor
ss
pop
daa
sub
in
pop
inc
outsl
and
fildll
sbb
and
xor
hlt
out
pop
ljmp
fucomp
mov
sbb
in
imul
dec
jmp
xlat
sub
call
xchg
ret
cmp
mov
cmpl
arpl
sbbl
mov
push
or
fadds
ret
cltd
lock
cld
cmp
xor
outsb
imul
cmp
xor
or
popa
movsb
and
mov
in
pop
push
xchg
sub
cmp
in
es
dec
into
sbb
lret
push
test
movsb
mov
pop
outsb
in
scas
notl
shl
int
pop
mov
sub
mov
mov
mov
icebp
jno
pop
fwait
inc
adc
mov
enter
js
push
scas
rcr
mov
in
jae
mulb
push
cld
mov
fs
pop
xchg
out
in
cmp
ja
push
or
std
arpl
xchg
ljmp
out
push
ret
cmp
mov
jno
inc
je
gs
lods
pusha
mov
inc
push
and
lods
sbb
sub
add
inc
dec
lea
dec
mov
adc
fsubp
cmp
int
imulb
mov
sbb
mov
scas
int3
adc
rcl
adc
push
sahf
aaa
pushf
push
dec
jg
inc
cmp
mov
pop
clc
addl
cmp
mov
push
add
shl
jp
cmpsb
inc
incl
mov
pop
les
xor
sbb
orb
cmp
test
push
and
or
push
bound
sbb
cmc
bnd
mov
roll
xchg
pop
leave
mov
iret
int3
adc
sub
in
push
xchg
mov
rorl
rorl
lret
jg
enter
inc
loopne
loope
mov
cmpsb
in
or
pop
dec
mov
inc
stos
lods
popf
push
jne
loopne
nop
aas
sbb
loopne
shll
movsl
add
das
cmc
inc
mov
stos
sub
sbb
clc
inc
scas
cmpsl
jne
mov
pop
adc
xorb
dec
pop
fiadds
movb
std
inc
lcall
fwait
into
leave
sub
shr
std
jbe
xor
jb
mov
test
lods
cli
mov
cli
test
jl
fcom
popa
and
sub
pop
push
mov
xchg
sbb
pop
push
pop
push
mov
sub
jb
jl
pusha
pmulhw
inc
mov
in
mov
inc
and
add
jl
jecxz
mov
cwtl
js
pop
inc
or
aam
repnz
dec
mov
fwait
cli
mov
xchg
push
sbb
outsl
hlt
bound
add
jns
es
sbb
add
xor
xchg
sub
inc
daa
and
mov
cmp
mov
icebp
movsb
sub
gs
sub
daa
enter
inc
cmp
es
xor
dec
loope
push
adc
sub
inc
jnp
push
stc
dec
lods
dec
mov
pushf
jecxz
popf
mov
cs
jne
push
orl
aaa
and
xchg
mov
loope
loope
inc
clc
sahf
mov
lret
push
in
push
jne
cmp
xor
lret
stos
jg
stos
push
into
mov
dec
push
ljmp
sti
in
mov
in
sub
dec
push
fldcw
xor
or
mov
sub
push
ljmp
push
xor
aam
push
and
dec
push
loopne
xchg
aad
movsl
rcrb
test
push
lahf
dec
mov
cmp
lock
inc
mov
push
pop
mov
fistl
add
fisubrs
div
dec
sub
sbb
add
iret
lcall
mov
xchg
in
push
lret
insb
mov
or
inc
cmp
dec
pop
cmp
cmpsb
outsl
mov
jmp
xchg
pop
call
cmpb
jbe
sub
fildl
inc
jo
lock
lea
jp
fdivl
mov
rolb
sub
or
pop
inc
lret
lods
jle
pop
frstor
xor
or
bound
sbb
and
in
ret
mov
popf
add
rorb
mov
dec
xor
out
mov
or
ds
inc
and
jnp
fs
jo
stos
mov
js
cmp
xorb
int
xchg
sub
scas
push
dec
push
inc
cmp
push
sbb
js
pop
out
cs
push
xchg
cld
jo
into
out
xchg
shrl
pop
mov
bound
popf
xchg
mov
add
stc
in
push
jge
in
pop
mov
dec
je
mov
xlat
dec
fnsave
hlt
enter
add
das
push
sbb
pop
cmp
in
dec
mov
int3
mov
mov
push
std
pusha
xor
mov
lcall
div
movsl
pop
call
mov
jp
push
sbb
push
stc
test
insl
push
aad
xchg
mov
test
xor
cwtl
mov
mov
aaa
pop
jmp
mov
mov
xor
jo
cmpsl
mov
aaa
xor
xchg
scas
inc
jns
loop
jl
in
outsb
fs
and
in
fwait
inc
xchg
test
dec
pop
imul
dec
sbbl
sti
ljmp
pushf
xor
out
xchg
jmp
inc
les
push
inc
popa
cmp
imul
lds
push
mov
pop
cmp
jp
cmp
add
shrb
push
fldl2e
xor
or
shl
add
clc
in
sub
addr16
leave
sub
inc
shrb
lods
adc
cltd
sarl
bound
lea
inc
sbb
or
sbb
mov
enter
inc
add
jno
mov
xor
movsb
nop
adc
imul
push
loop
pop
lahf
fcomp
out
and
or
sub
aas
mov
hlt
int
mov
jnp
pop
fbld
push
sbb
inc
or
sahf
mov
cmc
bound
add
and
cmp
push
mov
pop
rcrb
push
jmp
or
push
jbe
dec
adc
out
mov
pushf
loope
inc
lods
ss
mov
add
aas
jno
popa
jo
sbb
and
fs
shlb
adc
inc
cmpsl
or
cmp
scas
pop
mov
mov
push
hlt
pop
and
mov
jo
testb
loope
out
adc
out
ljmp
les
mov
cmp
test
adc
mov
and
and
scas
insl
sbb
sbb
lret
pop
jae
mov
rorb
mov
jmp
aas
fadd
and
push
repz
mov
jmp
mul
out
cmp
int3
fisubs
sbb
mov
frstor
cmpsl
cld
into
jae
in
or
sub
les
fidivs
push
bound
inc
xchg
test
adc
sbb
out
push
gs
fisttpll
add
outsb
jno
loop
fucomp
xchg
sbb
rolb
sub
jg
rcrb
daa
mov
in
push
xchg
add
xor
or
adc
shlb
insl
jnp
xlat
outsl
test
lcall
mov
lea
mov
sbb
mov
inc
cli
leave
mov
mov
les
pop
cmp
push
lcall
adc
pop
cmp
int3
pop
cs
movsl
cld
jg
sub
int3
insl
insb
jl
pop
roll
mov
movsb
ret
enter
push
pusha
add
pop
addr16
jo
dec
push
xchg
xchg
and
xchg
xor
jae
test
inc
push
pop
mov
pop
lret
mov
sbb
cwtl
mov
int
int3
mov
cmp
mov
pop
cltd
in
imul
aam
jp
push
ja
aas
dec
mov
mov
rclb
out
sub
add
cmpsb
push
xor
mov
in
xchg
cmpsb
sti
cwtl
lods
push
pop
xor
das
cmp
xor
ret
adc
mov
dec
bound
scas
xchg
repz
cmp
ret
sahf
add
and
jle
aam
sub
pop
decb
repz
cmpsl
enter
andb
test
mov
cmp
pop
sbb
mov
push
add
aaa
dec
js
sub
and
dec
popf
xor
inc
les
push
scas
jl
add
adc
cmc
pusha
icebp
call
cwtl
aam
ret
testb
sti
out
add
pop
push
mov
call
test
test
cmpsb
cmpsl
push
imul
jmp
je
mull
fcoml
leave
pop
bnd
xchg
fwait
xchg
sbb
dec
push
add
stos
cld
pop
dec
lods
je
push
js
pop
xor
test
sti
aad
and
int
rep
pushf
cwtl
mov
inc
call
mov
push
mov
dec
pushaw
movsb
sbb
mov
sub
cmpsb
out
sbb
cvtpi2ps
mov
lds
xor
mov
mov
dec
imul
cmp
mov
mov
inc
jns
leave
jb
gs
mov
stos
icebp
ret
add
xchg
pop
loopne
push
or
or
adc
mov
push
into
stos
adc
sbb
mov
shrl
fs
pop
aad
idiv
sub
fdiv
test
jns
cmp
mov
jl
xchg
out
imul
aas
xchg
inc
push
xchg
xor
pop
fcmovnu
mov
fs
ds
cmp
xor
lcall
jb
adc
add
std
stos
xchg
loop
scas
test
xor
rcr
cmpsb
jg
or
les
jb
roll
nop
movsl
push
int3
cmpsb
lods
and
push
popf
xchg
faddl
lock
mov
ret
jbe
xor
or
inc
aaa
jne
shrb
std
fisttpll
adc
xor
fwait
cs
sbbb
cmpsb
aas
dec
daa
es
arpl
dec
jecxz
mov
mov
hlt
dec
cld
sahf
lds
pop
push
loope
add
sti
movsl
pextrw
mov
and
icebp
cmp
inc
jmp
out
ds
push
cld
pop
lret
shll
cmp
insl
mov
mov
xchg
inc
mov
enter
and
xchg
cwtl
lret
filds
mov
orb
mov
xlat
adc
bswap
pop
fisubrl
pop
pushf
add
and
aaa
std
mov
fiaddl
cltd
repnz
arpl
gs
dec
sub
out
dec
mov
rcrl
dec
cld
add
xor
mov
inc
xchg
add
dec
xchg
icebp
setle
sti
es
adc
push
aad
push
pushf
mov
or
test
mov
outsl
gs
mov
mov
ja
or
mov
push
sub
mov
cmp
minps
enter
jecxz
mov
xchg
fimull
or
xchg
rclb
sbb
sub
hlt
icebp
mov
popf
in
ret
test
aas
mov
push
mov
adc
or
fidivl
push
imul
cld
outsl
cwtl
ret
repnz
add
dec
cli
fs
daa
lret
mov
inc
push
in
adc
popa
pop
pop
ja
push
pushf
je
or
mov
inc
sti
das
in
pusha
sub
cltd
jp
pop
sub
mov
mov
jmp
mov
sub
mov
sahf
int
shrl
mov
pop
js
jb
aaa
add
loopne
cvtps2pi
dec
or
out
push
call
jmp
mov
or
xor
orb
or
adc
mov
add
repz
out
lock
cmp
sbb
in
jbe
add
shlb
cmp
fiaddl
into
xor
cs
xchg
cmp
mov
fwait
aad
out
fs
dec
push
sbbl
and
insl
sbb
aas
xchg
adc
gs
out
js
pop
in
adc
pop
lahf
inc
cmpsb
push
pop
sub
jle
jmp
sahf
push
dec
adc
loope
inc
loopne
or
sarl
mov
sbb
cmp
test
or
push
xchg
lock
jmp
or
cmpsb
mov
xor
ss
mov
xlat
ficompl
xchg
in
sbb
jp
mov
arpl
int
sbb
push
pusha
inc
inc
shll
dec
stos
dec
and
bound
add
xor
or
mov
mov
push
int
pop
adcb
sti
stos
cmp
ja
repnz
push
xor
lret
out
inc
pop
lahf
push
ljmp
inc
or
aam
pop
hlt
loopne
add
sti
push
and
lcall
xchg
jmp
xchg
adc
add
dec
test
loop
clc
adc
shlb
ljmp
and
lahf
lock
xor
adc
ljmp
lcall
sub
rcll
jg
xorl
aas
sbb
ljmp
lret
xor
mov
insb
pop
aaa
in
in
dec
icebp
adc
jp
mov
xchg
sub
xor
ljmp
push
mov
xchg
jne
cli
push
xor
mov
sub
in
add
mov
inc
mov
xchg
cmp
and
inc
in
pop
mov
push
scas
daa
loopne
inc
pop
sarl
dec
xchg
loope
dec
xchg
adc
pusha
stos
add
and
mov
add
adc
inc
cmp
adc
dec
testb
cmpsl
mov
xchg
pop
xchg
ds
mov
stos
call
and
mov
xor
add
js
or
xor
xor
pop
stc
movsl
outsb
dec
fs
and
fimull
dec
mov
call
cmp
fsubrs
fistpl
ds
imul
xor
mov
xor
test
or
daa
sbb
mov
add
jle
inc
and
push
imul
mov
out
add
lods
arpl
and
sbb
and
imul
leave
and
or
lgs
lahf
and
loope
and
jecxz
mov
xor
dec
mov
mov
mov
loope
jb
aas
ja
les
sub
vcmpps
aam
jp
dec
pop
jle
fstps
ret
gs
or
adc
cld
int
insb
loop
and
add
jae
lret
sbbb
out
popf
test
jbe
andl
lods
ljmp
stc
or
out
shrb
into
out
lock
jmp
or
es
frstor
rorb
jle
dec
push
pop
mov
lea
out
popf
push
cltd
cmpsl
mov
xor
xor
cmp
and
mov
in
mov
clc
xchg
fxch
aam
jnp
cmp
fisttpl
fwait
test
push
cltd
dec
test
dec
addr16
lahf
inc
or
mov
jmp
stos
and
movsl
nop
mov
mov
scas
rcr
push
or
call
mov
andl
mov
add
inc
pop
loope
pop
xor
mov
add
dec
scas
leave
xor
xchg
xchg
imul
inc
addr16
pop
mulb
hlt
pop
sub
sub
cmp
data16
ss
std
neg
mov
lret
cltd
mov
ret
mov
push
cmp
and
adc
cmp
les
mov
std
out
cmc
sbb
ja
dec
mov
xchg
out
popa
or
push
xchg
jle
fstpl
inc
aam
or
cmp
orb
xchg
stos
les
push
push
pop
push
xchg
je,pn
cs
push
sub
xor
pop
cs
aad
sub
mov
sub
add
adc
fisttps
add
pop
iret
popa
es
loop
sti
bound
movsb
mov
jne
mov
jns
adc
mov
mov
cmp
clc
and
fisubrs
cmc
popf
jo
mov
fcomp
out
mov
xchg
cmpsb
xor
scas
std
int
pop
dec
pop
ficomps
in
push
mov
into
shlb
insl
or
sti
xchg
and
push
jle
add
js
ja
push
addr16
dec
int3
mov
sti
lds
xchg
jne
ds
inc
outsb
aaa
sub
push
repnz
jb
loope
xor
mov
push
pop
xchg
inc
inc
dec
std
in
mov
dec
enter
mov
mov
sub
ret
mov
sbb
xor
xchg
fldt
mov
pop
mov
or
jge
dec
jo
popa
or
push
jle
mov
dec
out
cmc
mov
jl
push
in
inc
pop
xor
or
ljmp
es
jl
sub
insl
mov
jnp
adc
rol
or
imulb
aaa
sahf
pop
pop
adcb
divl
mov
inc
call
dec
or
xor
mov
inc
xchg
sub
stos
push
xor
cmp
inc
push
pop
sub
repnz
cmp
shll
mov
mov
test
mov
icebp
mov
test
imul
call
cld
jns
call
jbe
out
test
pop
inc
js
mov
sahf
mov
js
inc
hlt
dec
xchg
loop
int
pavgw
xchg
push
das
sub
pop
fisubrl
mov
jl
lds
xorb
loopne
cmp
and
pop
sbb
popf
sarl
push
sub
jp
push
aaa
loope
clc
lcall
je
pop
mov
addr16
pop
jge
mov
out
add
push
cmp
mov
adc
das
pop
les
js
xchg
add
cld
into
sub
repz
ret
sub
aas
addr16
inc
int
notl
aaa
lods
iret
push
imul
pop
fs
idivl
push
rcrb
loope
insl
addr16
push
fldcw
insb
add
pop
add
insb
jecxz
cmp
ror
sbb
in
sub
push
add
sub
andb
shll
sbb
mov
jne
ret
inc
dec
xchg
push
jbe
jb
xor
in
jbe
mov
dec
push
sti
lods
je
cld
push
cltd
scas
inc
cmc
or
mov
out
jge
insl
mov
les
adc
rorl
jecxz,pn
cwtl
xchg
adc
dec
iret
adc
stc
lods
flds
and
push
ret
icebp
es
test
es
imul
inc
pop
pop
outsb
popf
lods
jge
mov
cmp
inc
xchg
mov
lret
mov
push
leave
mov
imul
daa
inc
movb
movsl
mov
or
jmp
pop
or
jmp
pop
and
lahf
mov
push
ljmp
subb
popa
es
insl
sub
stos
aad
xchg
sbb
stos
cmpl
int3
cwtl
adc
or
cmp
lret
lahf
ffreep
pop
rorl
enter
mov
lds
ret
es
jmp
test
add
clc
int3
push
sbb
jo
push
insb
test
mov
cld
push
push
mov
pop
rclb
xchg
in
inc
mov
es
sahf
mov
test
cmp
enter
sbb
and
xchg
je
popf
cwtl
addr16
and
mov
add
pop
cmp
xor
push
lock
mov
adc
and
and
repnz
addr16
sbb
rcl
cmp
xor
mov
icebp
mov
stos
dec
pusha
fnstsw
mov
pop
inc
inc
les
or
or
xchg
push
sbb
sbb
fcmovnbe
adc
jbe
ss
loope
lods
jecxz
cmp
mov
xor
sbb
gs
push
inc
inc
inc
inc
mov
cmp
pop
jg
xchg
loopne
sbb
jb
ja
mov
inc
data16
mov
dec
scas
add
stos
lcall
cmpsb
pop
imul
cld
std
les
mov
loopne
mov
mov
pop
cmp
dec
rorb
sub
popa
dec
push
sbb
and
mov
jmp
ficoms
scas
jnp
mov
add
inc
rcll
mov
inc
cmp
sbb
ss
fwait
dec
push
or
dec
mov
divl
mov
ret
push
mov
in
jle
mov
inc
inc
mov
dec
data16
sbb
lahf
inc
cld
add
push
xor
push
iret
test
popf
mov
mov
out
sti
repnz
sub
sbb
jno
jne
lods
out
mov
inc
into
int
mov
sti
stos
lret
or
insb
sub
push
jl
test
xorb
addr16
mov
out
das
ret
arpl
cld
sub
pop
loopne
sbb
xor
es
adc
cs
jae
fdivl
adc
test
mov
xchg
jle
inc
xchg
xchg
jl
mul
xchg
fstpt
hlt
in
mov
cmp
mov
cmp
inc
or
repz
lahf
loope
into
movsl
fsave
push
clc
mov
lcall
or
mov
xchg
dec
fmuls
jae
lds
sbb
jmp
xorl
pop
adc
add
loope
sub
sbb
rclb
dec
mov
jne
shrb
add
pushf
inc
aaa
and
shr
dec
adc
inc
xor
xchg
push
xchg
jns
push
aad
cld
pop
fdivs
sub
inc
xchg
lret
jecxz
loopne
in
push
dec
cwtl
lds
jmp
pop
mov
add
lds
test
clc
adc
faddl
out
adcl
clc
arpl
inc
adc
repnz
mov
fwait
js
add
push
enter
sub
shrl
addr16
jne
int3
aaa
ficoms
fisubl
mov
adc
mov
dec
ret
lock
or
add
sbb
lret
cmp
testl
test
mov
mov
rcrb
nop
icebp
cmp
rolb
leave
mov
fnstsw
push
mov
xchg
xor
negb
popf
jge
jno
fwait
sbb
mov
icebp
mov
mov
loop
out
inc
mov
and
mov
ja
aam
or
test
cltd
dec
mov
push
xor
xor
lock
int
pop
push
jle
data16
enter
sbb
lcall
inc
cmpsb
add
cmp
push
addb
inc
and
push
jp
add
daa
add
and
bound
in
fsubl
fwait
xor
dec
sahf
xchg
xor
lock
fistl
lods
or
add
outsl
inc
adc
icebp
adc
cltd
idivb
inc
lcall
out
and
mov
fimull
jnp
push
int3
mov
inc
out
xlat
lds
dec
sbb
cmp
dec
jge
mov
adc
mov
sbb
xor
lods
sbb
xchg
jl
dec
shlb
jo
addr16
aad
pop
or
push
mov
ficomps
leave
cmp
jp
mov
fildll
add
cs
insl
stos
inc
cmp
and
das
jo
imul
mov
int
xlat
lock
cmp
test
ss
dec
pop
sub
push
leave
mov
mov
push
cli
mov
lret
es
jge
inc
mov
sub
xchg
lret
test
fmul
dec
or
mov
mov
out
sub
imul
adc
pop
inc
xor
out
cmp
jmp
sub
inc
pop
pop
xor
mov
mov
mov
sbb
mov
inc
out
lret
movsl
mov
add
stos
mov
sub
int
xchg
int
mov
imul
push
and
idivb
xor
cmp
test
shl
cli
jae
mulb
dec
lds
lods
stos
jge
xlat
repnz
inc
adc
xchg
xor
mov
adc
push
inc
fwait
cmp
fcompl
jp
adc
xchg
push
adc
sbb
test
or
and
mov
jle
insb
xchg
aaa
mov
pop
fs
push
add
int
xchg
add
add
imul
sbb
sub
es
imul
jnp
call
test
mov
in
scas
lret
stc
cmpsl
inc
aas
cs
inc
iret
xor
jg
add
lahf
mov
or
outsb
mov
jb
inc
mov
rcl
pop
xor
imul
es
lret
inc
inc
bound
push
push
in
lret
add
fisubrs
cld
xor
ficomps
mov
and
je
dec
cmp
repnz
repnz
sbb
or
icebp
pop
jno
ret
aam
sub
and
mov
arpl
sub
sub
pop
mov
pop
scas
dec
pop
lods
repnz
into
call
inc
repz
dec
pop
jmp
dec
sbb
cli
leave
cs
add
repnz
adc
pop
cli
or
cs
subl
cmp
sbb
pop
mov
mov
cli
les
inc
or
insl
das
cld
std
lea
cmpl
fcompl
pop
and
ja
into
sbb
add
sbb
xchg
sub
sbbl
popf
sub
jmp
inc
jl
cmp
jmp
or
xchg
xchg
das
enter
dec
fwait
mov
lods
int3
sub
aad
std
mov
imul
mov
adc
mov
out
ljmp
loopne
xchg
xlat
cmpsl
xor
push
and
cltd
sub
fnstenv
jnp
fidivl
mov
push
aam
sbb
cltd
dec
add
lods
in
dec
push
loope
out
push
mov
pop
lods
add
lods
mov
adc
int3
or
adc
imul
mov
and
pop
and
mov
sub
jo
push
fimuls
jmp
icebp
fdivrs
add
popa
push
ret
push
push
jae
adc
adc
or
xchg
lahf
pop
xchg
bound
dec
scas
stc
and
push
sbb
mov
lret
les
push
adc
leave
loope
cld
cmp
or
sub
clc
lcall
dec
fmulp
add
shrl
lods
nop
sub
shlb
into
adc
jnp
sti
push
push
lds
test
push
fwait
push
leave
bswap
stos
rcrl
and
jnp
sti
lods
pop
sbb
mov
dec
sbb
cmc
bound
xchg
imul
xor
xor
inc
scas
mov
sub
xor
dec
orb
push
cmpsl
dec
in
js
enter
rcll
jne
pusha
cltd
stos
jns
leave
fisubl
fisttps
pushf
mov
dec
or
or
jo
movsb
sub
loopne
shlb
fildl
orb
jns
inc
fisttps
mov
out
and
xchg
roll
and
push
dec
cld
add
icebp
or
sti
adc
iret
add
xchg
pop
jnp
lea
movsl
push
loopne
lds
lods
xchg
call
ret
in
add
pop
and
lds
loop
xchg
daa
push
outsb
or
movsb
jp
int
push
xchg
add
push
outsl
mov
push
dec
in
push
pop
shlb
pushf
aam
push
cs
lret
lret
lret
test
fidivrl
aam
cmpsb
dec
fists
int3
lret
lcall
mov
lea
inc
cmpsl
inc
stos
xor
lock
push
sub
lret
repz
inc
stos
xorl
movsl
lods
sbb
dec
shlb
daa
sub
int3
pop
xlat
xchg
xor
test
mov
call
fcomi
mov
add
in
cmc
lcall
bnd
stc
int
ja
pop
aas
cwtl
hlt
daa
fwait
int
clc
and
pop
sub
loopne
and
inc
sbb
outsl
pop
xchg
cmpsl
std
lcall
test
inc
pop
pusha
xor
push
out
cltd
and
fstp
stos
mov
jb
mov
jmp
scas
sbb
shlb
jp
xor
ja
add
test
stos
movsb
movsl
cmp
aaa
aas
loopne
pop
sbb
and
pop
int
test
fists
pushf
inc
dec
out
mov
push
and
in
inc
loopne
push
loop
add
es
xor
dec
cmpsl
xor
test
push
aam
jle
sti
add
cmpsl
adc
aas
xchg
fbld
cmp
dec
sub
mov
test
dec
inc
lods
mov
xor
mov
add
sbb
push
dec
pop
xchg
mov
popf
inc
scas
adc
or
dec
orb
dec
mov
mov
movsl
sbb
pop
inc
cmp
aas
mov
ret
lcall
xchg
lret
jl
cmpsb
fldl
cmp
ljmp
inc
push
cltd
cmpl
insl
test
lea
std
add
mov
mov
xchg
xchg
std
mov
sbb
dec
jae
pop
lea
lods
leave
or
xchg
cmp
lds
sbb
ja
push
cmp
dec
ds
pop
fld
rorl
leave
fs
dec
lret
dec
nop
fdivrl
fisttpl
mov
jno
jno
xchg
aaa
push
es
xchg
push
les
cmpsb
mov
ret
pop
stc
rcll
je
jbe
sub
call
sub
leave
cmc
xchg
cmc
enter
jg
cmpsl
nop
cmp
dec
adc
pop
mov
test
push
inc
xchg
mov
popa
inc
icebp
clc
inc
das
adc
add
add
popf
add
dec
jmp
ror
jmp
mov
mov
movsb
sbb
dec
add
aam
push
xchg
and
dec
xchg
push
add
jg
jge
andb
arpl
sub
insl
and
sahf
lods
int
adc
sub
mov
push
sub
cwtl
insl
mov
mov
call
out
sbb
inc
out
outsb
lods
aas
pusha
data16
mov
xor
imul
outsb
and
jmp
lods
push
lret
and
dec
push
sar
mov
or
inc
push
scas
mov
dec
movsb
jbe
adc
sbb
leave
adc
scas
jno
adc
mov
jnp
add
cmpsb
fs
bound
jbe
sub
jne
shll
pop
stc
jge
xor
push
jl
cmpsl
shrl
enter
fsts
cmpb
xor
jo,pn
and
mov
jae
mov
fistl
and
xor
in
pop
mov
push
mov
in
and
mov
jmp
repz
jo
push
xor
sahf
xchg
outsl
jmp
cmp
cltd
xchg
loopne
into
xchg
clc
mov
dec
das
mov
fmul
sbb
lcall
movsl
jns
fcmovu
js
xlat
lea
enter
or
xchg
cmpsb
xor
sub
push
adc
pop
pop
into
mov
mov
mov
lcall
sar
xchg
fadds
imul
loopne
mov
sbb
repnz
fcom
dec
out
dec
xchg
cmp
jae
sarl
push
rorb
test
sbb
mov
mov
iret
pusha
aaa
fs
dec
xlat
jnp
and
push
pop
dec
mov
pop
enter
mov
inc
xor
lods
mov
mov
adc
inc
ret
dec
cwtl
pushf
and
jmp
dec
mov
mov
adc
xchg
cmp
sub
adc
pushf
das
enter
xchg
jmp
or
cltd
fmul
leave
sub
sbb
cmpsb
pop
dec
jle
repnz
sub
mov
jmp
cmp
clc
cmp
std
pop
enter
mov
mull
cmc
jmp
lock
add
mov
inc
cli
cmp
int
imul
lods
std
in
adc
lods
lcall
ja
xchg
mov
dec
mov
add
shll
int
stos
xor
xor
xor
icebp
push
mov
mov
leave
xchg
data16
repnz
xor
aas
sbb
cmp
fistpll
fisttpl
jmp
jnp
icebp
and
fiaddl
inc
cmp
popa
inc
movsl
ret
or
insl
sbb
lahf
data16
loopne
add
mov
sbb
mov
lret
inc
push
pop
rclb
xchg
fiadds
inc
xchg
cmc
test
inc
cmp
xor
jbe
fldcw
notb
aam
push
movsb
add
sbbb
pop
add
inc
sub
call
inc
popa
data16
daa
inc
scas
icebp
lds
pop
jne
cmp
jb
cli
pop
cmp
push
andb
scas
lcall
sub
cmp
nop
in
push
jo
jnp
je
repz
mov
jae
inc
fildll
in
sub
and
inc
xchg
adc
iret
sbb
xchg
mov
push
stos
repnz
adc
mov
rorb
aad
jns
and
inc
push
sbb
out
outsb
repz
jecxz
out
lcall
xchg
mov
fwait
iret
call
test
jbe
mov
or
mov
mov
pusha
mov
sub
xlat
popa
clc
mov
mov
or
inc
test
call
mov
xchg
inc
sahf
add
es
jp
stc
mov
cmp
adc
cmp
pop
add
sub
sub
or
enter
push
jo
mov
mov
mov
inc
data16
imul
inc
mov
mov
outsl
mov
add
cmc
nop
sbb
cmpsl
out
lret
lods
jl
shlb
push
les
popf
jbe
call
mov
and
adc
enter
lret
or
xor
rorb
cmpl
addl
xchg
mov
pop
sbb
in
jns
xchg
ficompl
js
repnz
dec
js
fstps
loope
xchg
cmp
addr16
sbb
dec
dec
pop
mov
mov
test
add
xor
jbe
sub
mov
pop
std
repz
mov
sub
xchg
repz
pop
in
and
jnp
sub
xor
push
push
popa
push
jnp
adc
lea
fsub
xor
lock
xchg
xor
pop
mov
aas
or
int3
shll
push
out
pop
xchg
inc
and
pop
jbe
sahf
lock
btr
or
cmp
and
sti
in
andl
inc
packuswb
fwait
mov
sbb
into
adc
sub
loop
dec
fdivrl
pop
adc
fidivrs
jmp
test
adc
mov
and
and
lods
or
repnz
xor
repnz
iret
sbb
hlt
aaa
sbb
enter
aas
fimull
test
or
or
aaa
inc
or
push
mov
fistl
sbb
aam
sahf
xlat
dec
loopne
mov
push
lds
bound
inc
pop
ljmp
jae
push
push
xor
add
inc
mov
or
rep
mov
pop
sbb
aas
jne
cmp
pop
scas
push
sub
loopne
fcoms
scas
ljmp
outsb
lahf
mov
lods
aaa
xor
stos
jne
add
xlat
test
je
pop
sub
add
add
jae
dec
orl
add
xchg
out
icebp
inc
aad
icebp
ja
sbb
jmp
sub
lea
nop
bound
daa
jnp
or
sub
jnp
fildll
mov
mov
mov
xchg
push
xor
cmp
scas
out
lcall
aad
xchg
outsl
mov
fwait
jnp
pop
dec
push
mov
repz
xchg
aad
cld
lret
push
imul
daa
test
test
xchg
jp
push
cli
pop
dec
push
fwait
lret
orb
adc
xlat
cmpb
andb
and
out
jecxz
mov
pop
int3
push
popa
mov
cmp
dec
imul
mov
lods
push
adc
xor
dec
lea
in
roll
out
js
test
sbb
adc
stos
mov
mov
out
mov
out
dec
repnz
sub
cwtl
push
iret
mov
mov
fisubs
cwtl
out
je
shl
loopne
lods
and
sbb
push
push
popa
cmp
jbe
andb
mov
jl
nop
cmp
fwait
or
repnz
dec
add
jns
gs
pop
mov
push
push
sub
inc
and
jae
mov
loopne
mov
insb
mov
inc
icebp
loop
inc
mov
pusha
dec
inc
es
jbe
mov
fstl
int
adc
pop
out
sub
fists
jg
or
jbe
mov
add
pop
inc
insl
ds
lret
pop
adc
jb
xchg
test
or
jl
fcoms
jae
inc
mov
pusha
mov
outsb
pop
cmpsb
fucomp
adc
push
fsts
or
imul
scas
inc
mov
jae
mov
pop
push
nop
in
bound
push
lret
cltd
scas
inc
dec
das
test
jmp
ficompl
fs
outsl
mov
es
lahf
arpl
or
loope
lea
popf
mov
jnp
mov
decl
mov
xchg
add
aaa
push
dec
into
lret
and
add
sbb
cld
xor
iret
fldt
adc
jns
pusha
scas
neg
push
jns
psrlq
lret
xchg
aad
pop
mov
cmpb
xor
and
cli
outsb
out
das
mov
lods
xor
sbb
lock
out
mov
adc
jl
js
add
and
sbb
out
adc
jnp
insl
popf
or
jp
push
gs
outsl
ss
xchg
push
mov
mov
call
sbb
out
and
enter
xchg
ficoms
sbb
insb
notb
jbe
or
jl
dec
int3
shrl
idivb
ss
lods
mov
inc
xchg
ljmp
fs
cli
add
xchg
jmp
shrl
das
push
inc
arpl
mov
and
lea
mov
jns
xchg
call
push
adcl
cmpsl
scas
fwait
shll
stos
jb
add
mov
jle
xor
push
pop
andl
test
daa
pop
rorl
xlat
push
inc
mov
repz
fimull
xchg
movsb
jns
sub
jge
mov
xchg
nop
lret
test
and
test
push
mov
adc
lods
js
inc
aad
push
sbb
lock
mov
xor
xchg
testl
mov
add
lods
clc
fiaddl
ljmp
mov
mov
out
test
sbb
shlb
mov
sbb
fildll
aaa
xchg
clc
nop
sbb
scas
jae
test
add
fwait
pop
and
cltd
jae
mov
xchg
add
and
mov
dec
insl
inc
aaa
jno
mov
mov
lods
jmp
push
adc
outsb
push
icebp
lea
add
cmpsl
cmp
push
hlt
xlat
ud2
fcmovnb
loope
sub
lahf
repnz
in
inc
orb
fcomi
es
adc
xor
fisubrl
jg
cmc
aad
pop
addb
or
loope
xlat
bound
inc
lods
lret
in
jl
addb
pop
pusha
xor
scas
cmc
les
testb
jecxz
pop
leave
jo
stc
call
test
sbb
cmp
fsubl
icebp
pushf
xchg
nop
push
add
or
xchg
out
int3
xor
pminub
dec
sub
mov
push
xlat
inc
mov
cmp
sbbl
fsubs
cmp
or
ret
sbb
xor
outsb
adc
xchg
jo
mov
fbstp
ljmp
pop
mov
sbb
lods
xor
or
out
jp
jecxz
loopne
call
stos
movsb
cmpsl
mov
dec
or
ret
fimull
clc
testb
les
repnz
dec
stos
sub
jb
dec
mov
orb
icebp
pop
aaa
repnz
cmc
jmp
jmp
push
fldt
jo
xchg
push
out
dec
adc
cltd
loope
lea
outsb
lea
ss
in
aam
push
scas
push
mov
and
adc
mov
test
mov
in
cmp
popf
and
shrb
pop
xchg
mov
adc
or
pop
dec
into
ret
cmpl
cmp
sbb
add
loopne
mov
xor
add
lret
adc
addb
add
fcomp
inc
fs
loopne
and
push
shlb
push
out
gs
jg
lock
lds
cs
or
push
popf
sub
inc
mov
mov
push
ljmp
repnz
rep
mov
push
stc
pop
jle
loopne
cltd
pusha
sbbb
ss
dec
test
movsl
imul
insl
int3
adc
jnp
jle
inc
addr16
xor
mov
push
push
mov
add
dec
or
imul
std
inc
in
push
jne
dec
add
push
in
pop
pop
setg
push
aad
fs
pop
addr16
and
xlat
cmp
je
inc
ss
mov
out
cwtl
das
sub
mov
pushl
pop
sub
out
lea
movsl
outsb
scas
nop
mov
or
stos
and
sbb
xchg
insl
sbb
aaa
rcrl
stos
cmc
lahf
int
pop
das
adc
mov
xor
mov
sbb
or
fwait
jg
mov
sub
mov
inc
xor
leave
add
mov
jg
in
lret
lcall
stos
test
dec
shr
mov
adc
inc
call
sub
xchg
fbstp
mov
xor
in
or
mov
int3
je
insb
mov
mov
pushf
and
adc
jb
jb
inc
pushf
mov
imull
cli
jb
lahf
xor
add
dec
or
or
and
or
sahf
out
repz
inc
test
jmp
loopne
mov
pushf
cwtl
cmpsb
inc
stos
and
pop
inc
lahf
iret
dec
loope
mov
addr16
fsts
or
into
lahf
push
xchg
push
push
aaa
sti
das
cmp
lea
aad
lret
stc
dec
mov
loop
cmp
pop
adc
jnp
adc
mov
popa
inc
stc
inc
dec
dec
test
pop
clc
mov
sub
xchg
push
inc
mov
pushf
lret
subb
mov
mov
loopne
mov
cmp
pop
jle
stos
gs
scas
push
cmp
xchg
outsb
cltd
xor
cwtl
xchg
sub
je
jns
pop
push
jle
clc
push
xchg
int
mov
inc
inc
mov
xor
mov
cmp
scas
cld
xchg
push
fdiv
and
mov
repz
enter
rorb
loope
rclb
pop
aaa
fcompl
insb
out
and
cmp
inc
mov
ror
xchg
lds
mov
jns
fwait
sbb
mov
inc
fldenv
clc
mov
jge
push
pop
std
dec
enter
xor
rcll
insl
ret
dec
jbe
push
rorl
mov
hlt
xor
jge
dec
push
ljmp
mov
or
jns
adc
xchg
add
daa
cmp
js
movsb
into
cmpsl
pushf
arpl
sub
pusha
inc
adc
jle
pushf
mov
shrb
nop
imulb
cmpsl
fbstp
pop
lahf
pusha
and
pop
gs
scas
shlb
jmp
lock
mov
dec
xor
and
stc
mov
xor
clc
shrb
inc
loop
dec
outsl
mov
cmpsb
jecxz
mov
and
mov
sub
sbb
lods
jno
hlt
ss
mov
rorl
mov
cmp
mov
fs
jns
mov
out
or
inc
mov
adc
pop
das
idiv
repnz
movb
out
jle
push
call
jno
push
add
mov
mov
int
js
dec
lret
ret
add
js
fstpl
scas
inc
fwait
addr16
cltd
loopne
add
lahf
cmp
inc
out
dec
orl
mov
mov
repz
in
jl
xchg
push
aaa
dec
or
push
std
push
mov
loope
andb
push
lods
mov
mov
adc
das
arpl
xor
jmp
adc
mov
arpl
insb
out
ficoml
ror
clc
out
subl
hlt
mov
inc
lcall
inc
push
inc
js,pt
sub
xor
test
push
xor
inc
mov
and
lret
shlb
pushw
hlt
adcb
xlat
call
mul
xchg
aad
pop
xorb
dec
incl
je
inc
repnz
mov
or
sub
pop
mov
jp
sbb
stos
lds
pop
fistps
sub
xor
mov
xchg
loope
lret
sbb
dec
lock
push
lcall
leave
notb
jae
sbb
scas
ja
dec
mov
dec
in
sub
loop
ljmp
push
daa
or
cmp
and
rol
xor
pop
test
movsb
mov
inc
repnz
incb
push
ret
outsb
xchg
lahf
fwait
decl
mov
je
push
sbb
adcb
pop
push
mov
clc
add
mov
push
pop
add
dec
mov
aas
insb
in
mov
cmpsb
add
push
stos
mov
js
cmp
dec
mov
mov
sti
test
adc
icebp
dec
push
add
adc
jge
mov
dec
aaa
in
enter
adc
sbb
cmp
push
mov
xchg
sbbb
xchg
pop
add
xchg
mov
in
ja
xchg
lahf
xor
mov
pop
or
sbbb
test
sbb
loopne
popa
sub
cvtdq2ps
mov
cltd
pushf
dec
repz
cs
mov
push
mov
clc
sub
push
xchg
aaa
sar
test
lods
mul
stos
unpcklps
mov
mov
inc
push
adc
inc
sub
pusha
repnz
mov
and
cmp
cmp
or
add
imul
sbb
sar
into
mov
addr16
out
or
test
jecxz
bound
jno
outsb
xor
lea
std
adc
sbb
xchg
daa
bound
push
inc
ret
cmpsl
add
sub
push
mov
roll
push
pop
pop
cmpsb
cmp
ds
and
pop
sbb
lods
xor
loopne
mov
push
aad
push
jo
add
mov
and
imul
dec
clc
fwait
std
lret
and
mov
mov
in
lods
push
in
fwait
aad
shrb
mov
jae
adc
mov
sub
inc
cli
shll
das
addr16
xor
ss
push
xchg
lods
lret
mov
in
push
bound
push
int
inc
icebp
add
pop
ret
ret
push
add
push
cmp
jl
imul
dec
mov
aas
add
push
movsb
fwait
jmp
push
jo
cs
sbb
aam
dec
dec
ljmp
xchg
pop
outsl
add
jmp
rcll
mov
std
repnz
test
cld
sbb
loopne
out
xor
mov
imul
orb
push
repnz
mov
inc
mov
daa
push
jg
inc
push
or
jp
dec
mov
and
ds
cmp
push
jne
xchg
mov
pop
mov
cwtl
jmp
sbb
cmp
mov
cmp
cmp
pusha
and
outsl
sub
pop
lret
lret
cmpsl
dec
mov
mov
xchg
addr16
push
or
and
iret
hlt
int3
mov
jl
add
inc
jmp
je
xchg
aam
jl
std
shrb
sbb
sub
sarb
cld
jge
sbb
xchg
jnp
rorb
adc
jle
sbb
and
xchg
hlt
ret
xchg
push
fwait
stc
jp
xor
mov
xor
in
ss
push
adcb
cmp
mov
adc
mov
std
adc
xchg
mov
push
cli
add
lods
inc
sub
dec
fistpl
out
dec
lret
loopne
xchg
mov
vhsubpd
sbb
sbb
mov
ret
sbb
cmp
jmp
mov
push
arpl
inc
lret
cmp
fwait
add
data16
fisubs
fsubp
cmpb
mov
push
sub
clc
sbb
fcoms
test
movsl
dec
adc
sarl
xchg
int
fwait
or
mov
pop
cmp
in
cs
int
testb
pop
testb
and
clc
mov
into
push
insb
sbb
scas
leave
dec
push
pushf
lcall
push
jae
pop
sbb
inc
repnz
into
leave
dec
sbb
lock
xor
punpcklwd
lret
insb
add
jg
mov
inc
cmpb
xchg
add
xor
jne
repnz
mov
rolb
andl
mov
push
movsb
out
pop
or
div
jl
xchg
lcall
ret
push
repz
lahf
dec
scas
fwait
imul
sub
pop
mov
adc
push
lods
in
inc
shrl
mov
repnz
cltd
and
stos
sub
test
mov
xchg
fiadds
mov
sbb
pop
out
fsubrs
sub
inc
dec
add
and
push
add
dec
mov
xchg
cmp
sbbl
and
loope
xchg
insl
ret
and
jp
xchg
inc
inc
inc
sbb
test
out
adc
push
dec
jecxz
test
push
je
addr16
imul
xor
iret
push
mov
aad
call
xor
jns
xor
mov
into
pop
fwait
xor
mov
fdivl
mov
aaa
xchg
push
popf
mov
push
aad
scas
imull
xchg
push
mov
and
adc
ljmp
pop
cmp
cmp
aaa
outsl
test
xchg
xchg
mov
mov
dec
ds
arpl
add
or
pusha
xor
inc
mov
enter
loopne
pop
push
mov
sbb
jnp
xchg
add
xchg
loopne
dec
jns
pop
push
sbbl
push
loop
int3
inc
mov
mov
mov
cmp
and
into
addr16
cmpsb
push
lahf
pusha
push
addl
jns
pop
stos
les
pop
pop
into
jecxz
das
adc
sbb
cltd
sbb
out
fnstcw
addr16
xchg
fbld
fidivl
xchg
lods
dec
je
rolb
cld
mov
imulb
rcl
mov
sarb
inc
rcrl
imul
hlt
mov
movsb
sub
inc
cmpsl
jb
dec
cmpsl
ret
mov
mov
xchg
push
mov
adc
pop
sarl
jmp
inc
mov
push
adc
or
sub
mov
ja
in
fidivrl
insl
add
out
cmp
or
jno
and
movsl
sub
xor
shrl
sub
add
cmpsb
xor
mov
mov
cmp
aas
arpl
mov
push
or
lret
aam
shl
xor
add
in
inc
sbb
inc
add
gs
sub
cmpsb
add
xor
pop
mov
pop
mov
out
icebp
test
mov
aad
test
sub
imul
add
jp
ja
bound
fs
adc
jmp
push
orl
or
ficomps
inc
std
mov
pop
test
scas
mov
jge
jle
xlat
mov
in
cmp
popl
stos
repz
es
pushf
ret
cmp
cmp
push
ret
out
gs
and
cmp
pop
xor
jmp
je
or
imul
pop
xchg
pop
test
jno
mov
sub
mov
jge
add
or
xchg
int
and
xchg
pop
add
es
jmp
jl
and
cmc
inc
push
inc
cmp
xchg
mull
adc
dec
js
mov
hlt
xchg
push
sahf
inc
rolb
outsl
rol
ficompl
scas
and
mov
loop
aad
mov
push
shlb
je
in
lods
ret
and
popf
jl
sbb
fidivs
scas
inc
movsb
je
jmp
mov
cmpsl
test
data16
fnstsw
pop
mov
in
xor
shll
adcl
jns
cs
mov
push
inc
gs
or
xor
pop
add
orb
pushf
jns
jge
push
cmpb
stos
jl
sub
scas
inc
or
or
frstor
sub
out
pop
sbb
push
mov
andb
xchg
adc
jo
cmp
in
ret
xchg
sbb
cli
cs
lods
mov
jl
outsl
pop
scas
add
and
mov
and
push
xlat
push
imul
sarl
js
mov
add
lcall
dec
push
test
mov
sbb
push
stos
sti
jle
push
or
aam
es
insl
daa
jne
inc
mov
mov
dec
cmc
mov
xchg
and
sub
adc
add
cmp
dec
or
jb
cmp
test
mov
cmp
test
mov
pop
repz
sbb
movsl
mov
jns
or
iret
push
aaa
or
hlt
push
fnstcw
sbb
cmp
ret
out
push
pop
enter
xor
cmp
fwait
mov
mov
cmp
inc
fld
test
cmpsb
in
or
jg
popa
cmp
mov
arpl
cltd
xchg
in
push
mov
bound
fsts
jl
mov
cmp
ffreep
hlt
push
or
lds
sbb
adc
jmp
stc
mov
push
mov
pushf
and
jmp
and
dec
mov
mov
aam
mov
cwtl
aam
adc
int
or
popl
jo
lret
aam
xchg
push
xchg
jecxz
jp
or
pop
loope
bound
adc
addr16
push
loop
xlat
daa
idivb
mov
call
pop
xchg
and
or
sbb
mov
into
pop
push
mov
adc
jo
into
dec
test
sub
cli
mov
inc
adc
mov
and
int3
cmpsl
cmpl
nop
lcall
inc
lret
sbb
sbb
sub
pop
movsb
hlt
push
je
movzbl
arpl
xor
lahf
jecxz
mov
sarl
pop
out
sahf
mov
mov
xchg
sbb
or
lock
xor
ss
sbb
xchg
inc
dec
leave
xchg
imulb
insl
loop
aam
xorb
push
xchg
push
aas
lock
fisttpl
lcall
or
sub
int3
add
ficompl
inc
mov
cli
sub
cmp
mov
add
out
and
xor
jecxz
lret
mov
add
adc
jg
mov
pop
aam
xchg
inc
jp
addl
add
sbb
incl
insb
xchg
xor
push
sbbl
push
leave
lea
pop
push
sbb
fwait
mov
ljmp
fcomps
cli
cli
xchg
jg
inc
je
jp
jns
mov
push
imul
cwtl
adc
mov
lret
xor
pop
dec
aam
jg
sub
xor
je
xlat
mov
pop
xchg
push
push
mov
movsl
pushf
mov
mov
push
jmp
out
gs
and
xchg
repnz
pop
lret
sbb
outsl
adc
cmp
in
add
lods
arpl
xchg
mov
aad
aad
lcall
cmp
pop
and
scas
or
push
mov
dec
subb
lret
xor
test
jp
clc
pop
mov
fcoml
inc
sbb
mov
data16
addr16
push
dec
push
mov
mov
sbb
mov
dec
xlat
repnz
std
dec
les
loope
adc
out
sub
jg
jae
das
dec
les
mov
aaa
cmpsb
lods
mov
ljmp
mov
imul
pop
out
inc
mov
movsb
mov
popf
lods
xchg
shr
mov
cltd
lock
cmpsb
add
sbb
je
mov
out
ret
adc
cmp
das
mov
cltd
sbb
cwtl
outsl
in
pop
popa
shrb
addl
fcmovb
clc
stc
sub
in
mov
lahf
je
scas
fisubrl
pop
jo
out
jbe
sti
addb
and
in
or
mov
push
cltd
decb
lods
orb
pushf
jb
shrb
outsb
adc
test
sti
push
scas
pop
nop
mov
push
jo
mov
fs
jns
jo
sub
lret
lahf
test
stc
jge
pop
pop
lods
out
test
pop
std
rcll
jae
int3
icebp
ss
in
aas
sti
pop
aad
jmp
pop
dec
es
dec
pop
jno
int
xor
adc
xchg
roll
and
add
add
shlb
fwait
xchg
sbb
lahf
imul
xchg
mov
stc
lret
iret
add
xchg
lcall
sahf
pop
leave
sbb
or
xor
sbb
cmp
mov
rcrl
leave
pop
enter
sbb
fcoms
cwtl
aam
sbb
push
xchg
les
lods
icebp
sbb
jns
mov
sahf
xchg
pop
aaa
dec
adc
adc
ljmp
lods
je
addr16
setns
or
ss
jno
repz
dec
and
sbb
in
loopne
sbb
inc
or
fldenv
insb
test
pop
leave
add
jns
and
aad
push
cwtl
es
or
mov
sbb
xchg
fisubs
and
push
sbb
jmp
mov
cmpsb
xor
mov
mov
pop
int3
arpl
push
outsl
inc
xor
mov
daa
ret
fsubp
repz
insb
cwtl
pop
xor
xor
loop
outsb
int3
xor
jmp
cmp
jecxz
add
repz
sub
out
sbb
hlt
adc
jno
xchg
cmp
cltd
xor
or
test
jle
aaa
xlat
mov
inc
push
push
and
pop
xchg
repnz
push
xchg
pop
and
mov
xor
mov
adc
mov
repnz
inc
das
shll
loop
lret
arpl
test
iret
push
mov
ljmp
cmp
loop
xor
mov
fstpt
out
pusha
test
xchg
aam
fs
add
movsl
repz
mov
testl
aam
dec
sub
push
inc
popf
fwait
or
aas
and
fisttpl
clc
inc
dec
sbb
fistpl
loop
mov
lahf
inc
lds
sbb
xchg
sbb
sbb
sub
lods
leave
xor
mov
cmp
mov
pop
cli
or
adc
movsl
pop
inc
mov
jle
pop
in
testb
and
and
jnp
addr16
icebp
sbbb
mov
mov
cld
add
fucomi
rorb
mov
sbb
icebp
xor
or
xor
lcall
imul
mov
clc
arpl
jle
add
inc
dec
xchg
shl
sub
sub
je
int3
je
cmc
rcll
pop
add
or
mov
sbb
ja
in
outsl
int
push
and
outsl
popf
in
xlat
loopne
jo
xchg
inc
push
adc
jmp
adc
scas
cmp
and
outsl
aam
cmp
andl
sub
cli
dec
push
in
and
pop
inc
dec
cmc
mov
mov
mov
mov
loope
mov
lahf
mov
xor
lea
popa
push
mov
out
movsl
scas
test
inc
sti
adc
daa
leave
mov
lahf
mov
and
popa
dec
or
mov
cmp
dec
lahf
xchg
mov
add
and
jno
mov
popf
inc
mov
scas
aaa
data16
dec
clc
add
and
negl
out
popa
aam
cmp
insb
inc
inc
jae
mov
dec
mov
jb
mov
inc
jecxz
jp
inc
inc
dec
jae
mov
dec
cld
aam
jge
jle
adc
test
add
mov
xchg
inc
rclb
push
movsb
pop
inc
repz
push
loopne
sub
xor
add
inc
popf
and
pusha
inc
lcall
leave
xchg
iret
jmp
lret
sbb
or
shlb
inc
jno
add
mov
sbbl
pushf
xor
or
pop
leave
push
ficoms
outsl
sub
aad
sub
fs
jns
cmp
add
lret
pusha
and
cmp
jne
or
or
sbb
push
xlat
mov
test
bound
out
pop
add
xchg
mov
xchg
lcall
enter
pop
lret
xchg
pop
aas
inc
jo
rcl
or
out
sti
hlt
push
test
flds
sub
ret
insl
xchg
iret
shlb
sub
or
or
xor
and
in
sarl
stc
mov
add
add
jns
cmp
push
rcl
sub
outsl
pop
mov
sbb
test
or
sti
into
lea
int3
hlt
or
adc
jnp
into
xchg
addr16
ds
sub
sub
lahf
loope
lea
lods
rcrl
roll
loopne
pop
rcrl
adc
inc
leave
fucomi
test
dec
sbb
push
xor
pusha
ret
sarl
dec
lock
cmp
adc
sbb
inc
aaa
adc
xor
push
out
cmp
fs
add
push
jno
xor
inc
bound
and
adc
push
leave
iret
push
rol
lahf
adc
movsl
out
add
or
stos
je
jg
or
cmp
pop
call
cwtl
mov
stc
ret
pop
fwait
bound
cmc
lret
xor
or
shlb
ficompl
test
inc
inc
mov
sub
fs
or
jl
lret
xchg
lret
icebp
inc
sbb
loopne
push
cmp
inc
dec
sbb
cmpl
sti
push
xchg
mov
jp
je
jns
incb
popf
xor
cltd
lods
jp
sbb
mov
adc
lock
loope
hlt
xchg
out
add
js
mov
sub
add
inc
or
aam
inc
lcall
test
or
mov
sahf
dec
jge
aad
dec
pop
jecxz
or
aaa
addr16
dec
pop
loope
inc
pop
js
pop
and
gs
fs
mov
xchg
movsb
cmpsb
jmp
jmp
cmpsl
push
aaa
push
adc
sub
pusha
xchg
aaa
xchg
xor
shr
pop
mov
mov
mov
mov
adc
stos
inc
fs
out
sub
cmp
add
mov
and
xor
xchg
adc
push
mov
jbe
movsl
enter
push
cwtl
aam
stos
fildl
ljmp
pop
push
cmp
sahf
cmc
outsl
repz
xchg
cmpsl
sub
push
and
cld
rolb
in
inc
fld1
cmp
push
pop
sub
clc
test
sbb
adc
hlt
pop
xchg
outsb
adc
push
mov
and
fistpl
xchg
sbb
sbb
pop
cs
int3
int
sbb
fsubs
jecxz
nop
xchg
repnz
shll
loope
sahf
shll
cmp
test
das
sub
icebp
or
or
pop
sub
add
jns
jge
js
pop
js
or
xchg
inc
enter
jge
mov
inc
call
sbb
pop
lods
sub
dec
loop
mov
adc
cmp
outsl
stos
inc
mov
pushf
cwtl
sub
jne
jmp
cltd
stos
subl
mov
xor
push
lea
imul
push
in
leave
jnp
mov
push
add
pop
sbb
leave
xor
imull
jl
inc
mov
xor
xchg
and
test
rclb
push
scas
fsub
cwtl
jg
sub
cmpsl
fcoml
jbe
bound
loopne
test
mov
jno
lret
sub
ret
mov
add
or
lret
insl
mov
notb
bound
dec
gs
pop
mov
lods
add
arpl
jp
xor
into
nop
loopne
aaa
outsl
cld
sub
cmpb
fdivl
scas
mov
into
or
push
pop
xchg
mov
xor
pusha
fisttpl
lock
cs
dec
jge
negl
outsb
dec
js
jae,pt
adc
adc
cmpsb
daa
jne
andb
inc
and
jns
jb
or
popf
jle
clc
push
dec
push
dec
fbld
jg
out
ficoms
jae
pop
xchg
rcr
dec
in
push
in
xchg
add
pop
jne
cmp
sub
inc
insl
jno
inc
mov
mov
in
sub
mov
cmpsb
dec
push
push
cmp
sti
test
or
gs
push
mov
inc
lods
jns
jno
scas
aas
and
rorl
aam
popf
cmp
mov
push
in
jne
in
xor
gs
push
fstl
loopne
fstpl
pop
shlb
pusha
jbe
fwait
pop
push
mov
in
or
mov
mov
mov
xchg
jnp
jo
sub
jl
les
jle
push
jno
loope,pt
push
or
es
push
sbb
xchg
rcl
fidivs
arpl
dec
subb
jne
add
popl
inc
inc
in
stos
add
sahf
inc
mov
or
ret
cmpsl
fwait
or
jl
jne
lods
add
push
jmp
ja
xchg
pop
pop
add
fmull
pop
call
lret
adc
je
mov
jne
mov
jmp
ss
js
inc
push
xor
test
lds
sub
fnstsw
sbb
cli
ljmp
push
cld
pop
inc
out
push
std
out
daa
xchg
loop
lea
pushf
xchg
sub
fld
jp
xchg
popa
lock
push
cmp
cmp
sbb
out
cmpsb
icebp
out
scas
stos
pushf
out
lret
add
mov
lahf
mov
xchg
mov
and
orb
leave
jb
pusha
adc
ljmp
lods
sbb
pushf
adc
cli
je
lods
sarl
in
add
bound
aad
add
push
bound
and
lret
mov
enter
out
push
movsl
testb
jmp
mov
sbb
cmp
sar
mov
cmp
addr16
imul
insb
fadd
cmc
orl
push
xchg
stc
inc
shlb
in
fwait
pop
pop
rolb
jmp
test
pushf
inc
addl
push
cmc
mov
push
pop
sti
jo
popf
in
pop
and
adc
das
pop
loope
out
mov
in
mov
xor
jle
cmp
imul
arpl
add
inc
pop
and
lock
mov
scas
fsubs
dec
mov
cmp
pop
cld
sub
scas
into
pop
jno
xchg
mov
pop
cmpsb
loopne
inc
aam
xchg
mov
or
pop
xchg
aas
je
push
ds
cld
sti
xchg
xor
cmp
fs
pop
in
mov
jne
mov
das
hlt
test
rcr
xchg
cmp
mov
movsb
pop
in
mov
aam
xchg
insb
dec
xchg
or
sti
stos
xchg
pop
enter
and
movsl
dec
push
xlat
js
repnz
call
outsb
outsb
pushf
sbb
sbb
test
fidivrl
sti
sbb
inc
mov
enter
mov
dec
pop
push
out
mov
popa
xchg
mov
sbb
xchg
lods
inc
or
jge
xor
push
imul
add
cmp
inc
imul
fucomi
sbb
inc
cs
jmp
insl
cli
std
inc
cmp
push
fldenv
lret
cmp
and
cli
push
lock
in
jo
cmp
stc
adc
mov
mov
xchg
cmp
aad
mov
dec
loopne
out
sbb
push
adc
xchg
fisubl
sub
and
subl
sub
repnz
sub
push
xchg
out
sbb
scas
cltd
mov
mov
cmp
dec
pushf
xchg
loop
outsb
add
push
xor
outsb
es
mov
int3
push
imul
push
cmpl
mov
dec
sub
inc
scas
bswap
pop
stc
mov
rcll
test
call
inc
repz
cli
mov
mov
pop
xchg
dec
stos
push
adc
xchg
mov
hlt
cmpsb
adc
xor
cmp
in
pop
ret
pcmpgtw
xor
jae
mov
and
int3
ljmp
sub
xchg
mov
mov
add
cmp
jo
int3
jo
mov
jmp
pop
lock
dec
mov
lahf
xor
and
pop
hlt
lcall
or
adc
mov
out
leave
and
adc
xchg
adc
aas
or
in
push
inc
push
mov
leave
cmpl
adc
or
or
cs
mov
jne
jg
inc
lret
inc
out
mov
test
bndldx
fiaddl
js
cld
jecxz
pop
ss
sub
pop
mov
arpl
test
fs
hlt
sub
loope
inc
aas
push
cli
hlt
sub
jecxz
sbb
adc
jle
or
in
inc
and
outsl
shll
inc
or
dec
pop
sub
in
into
stos
out
push
push
fistpl
out
fcmovbe
push
pop
fmuls
jg,pt
into
ret
sbb
loop
outsl
cltd
push
add
cmp
sbb
aaa
es
add
rcrb
fstps
xchg
adc
data16
icebp
pop
or
jp
insl
dec
mov
int3
mov
fadds
jae
and
lods
add
cmpsb
mov
imul
xchg
push
jge
push
xor
cmp
sbb
or
ja
and
xchg
xor
or
push
push
clc
mov
inc
js
sbb
mov
ud0
loopne
adc
aad
and
lods
push
in
lds
cmp
xlat
and
inc
das
ja
rol
cld
scas
fisubs
dec
mov
int3
ja
sbb
xchg
lds
xchg
stos
xor
add
cmp
ret
mov
lods
push
or
pusha
leave
pop
mov
mov
cmpsb
pop
mov
jl
mov
aas
shl
push
jb
scas
or
add
lret
push
push
mov
jne
cmpsl
out
inc
lret
sarb
xor
out
adc
adc
scas
out
add
jnp
jecxz
adc
mov
pop
cmp
fmulp
mov
imul
mov
or
popf
fwait
xorb
xor
lock
adcl
cmp
sbb
lret
cmpl
and
jp
jmp
push
gs
gs
dec
and
add
es
and
sbb
les
jmp
mov
mov
mov
jl
push
call
lea
dec
mov
test
lret
or
mov
into
jns
and
jmp
outsb
mov
jecxz
jb
sub
shrb
pop
xor
mov
push
add
dec
push
sbb
movsb
popa
push
push
out
jecxz
sbb
les
push
repnz
cmpsl
lret
arpl
mov
mov
mov
jbe
imul
push
in
in
sbb
jg
xchg
push
faddl
inc
in
imul
cli
cmpsb
push
out
push
cltd
or
add
and
shl
aam
stos
fcmovbe
mov
and
ja
test
bound
dec
pop
jno
mov
mul
les
subb
sub
andl
cwtl
andb
pop
lret
adc
xchg
add
cmp
mov
cmp
push
outsb
leave
jp
aas
int
shll
shll
ss
cmp
mov
cli
bound
insl
adc
data16
pop
repz
movsl
and
xor
fsts
sub
sub
cs
sub
pusha
and
add
ret
or
je
fdiv
xor
shll
pop
jle
and
fbstp
push
cmp
xchg
pop
cwtl
out
out
mov
test
pop
inc
cltd
push
mov
cmpl
imul
in
xor
push
les
dec
stos
dec
jno
rcrb
xchg
xor
push
jne
push
iret
jae
sarl
insb
jnp
in
ret
dec
jmp
cmp
mov
ret
in
or
lea
mov
dec
pop
sub
test
notl
inc
pop
iret
jge
xchg
aad
adc
adc
mov
ret
int3
mov
sub
and
loopne
cmp
lods
shlb
dec
cmp
jae
sub
lcall
cmpsb
xchg
sti
shlb
lea
repz
arpl
pusha
aaa
test
mov
mov
mov
add
xchg
je
andl
jg
into
lods
add
fists
push
xchg
cmp
xchg
lock
test
mov
sahf
stos
fcmovne
push
and
xchg
sub
mov
int
dec
roll
std
jne
mov
fsqrt
mov
mov
mov
xor
jne
push
sub
push
les
jne
mov
je
adc
add
repnz
test
in
in
xor
pop
insl
popf
pusha
es
movsl
sub
adc
gs
clc
cs
push
push
fstpt
mov
pushf
dec
adc
lea
inc
out
pop
fs
inc
mov
scas
popf
dec
inc
in
jae
add
push
lret
cltd
filds
add
shlb
mov
push
xchg
out
pop
dec
push
outsl
fwait
out
cld
lock
adc
sub
negb
mov
mov
mov
pusha
les
je
xchg
inc
mov
arpl
sbb
jge
and
mov
push
das
pop
cmp
scas
stos
xor
test
add
inc
sti
dec
lds
loopne
cmp
ret
jno
pminsw
fisttpll
mov
arpl
fsin
fimuls
sub
and
adc
ret
and
rcrl
test
loopne
xlat
sub
lds
xor
popa
das
ret
in
sub
sub
cwtl
mov
cmpsl
sbb
dec
ljmp
enter
inc
fistl
nop
cmp
add
jl
xchg
popf
mov
add
cmp
dec
aam
daa
aad
cld
jnp
mov
jo
mov
push
ss
sbb
je
mov
inc
mov
mov
jno
subb
push
iretw
cmp
enter
or
mov
adc
mov
test
sti
les
dec
ss
push
add
sbb
imul
sbb
xchg
inc
leave
xlat
mov
and
adc
loope
insl
jmp
les
sub
sbbb
testb
movsl
adc
fiadds
mul
rcl
cmc
leave
push
adc
test
adc
imul
sbb
add
mov
sub
add
push
cmp
dec
mov
sbb
mov
sub
fistpll
call
ljmp
mov
repz
xor
inc
inc
inc
rorb
cmp
orb
mov
xchg
xor
push
std
pop
cwtl
pop
lret
jb
movsb
lret
aaa
test
iret
test
cmpsb
sub
adc
lret
test
sahf
sbb
dec
dec
xor
stc
out
inc
cmpsl
xlat
pushf
aas
outsl
scas
lods
add
dec
jno
push
shlb
mov
shlb
jnp
fs
shlb
bound
repnz
inc
outsb
test
test
dec
out
push
repnz
sbb
push
test
mov
jecxz
mov
jno
iret
cli
fs
lret
ret
hlt
sub
mov
xchg
mov
inc
enter
fisttps
outsl
mov
hlt
add
mov
jecxz
pusha
popf
cmp
cmc
xor
imul
rcll
icebp
out
lea
shrl
test
push
in
icebp
or
dec
fwait
pop
add
xor
push
pop
ret
arpl
add
mov
test
out
and
iret
inc
fucomp
lds
add
ror
xchg
sbb
popf
inc
leave
jnp
or
out
movsb
dec
adc
add
push
jnp
mov
mov
inc
sub
les
int
mov
pop
cmpsb
jmp
xchg
fisubs
imul
pop
dec
add
fadds
sub
adc
add
insb
sub
push
repz
pushf
xchg
add
push
dec
je
inc
sub
dec
xchg
xchg
movsl
fadd
mov
and
or
jae
mov
leave
pop
sub
xor
out
mov
lcall
or
cmp
jecxz
push
pop
std
shrb
cmpl
aas
jb
xchg
or
loopne
dec
ffree
cmp
dec
sub
fdivl
test
adc
js
jmp
dec
jmp
shl
mov
rclb
xchg
lds
rcl
addl
mov
mov
or
lods
lds
push
repnz
mov
sbb
leave
fs
test
arpl
sbb
pop
mov
ss
and
jmp
sbb
ret
jno
fbstp
or
push
sbb
mov
push
aad
out
jle
cmp
bound
andl
outsb
lds
add
pop
repnz
ds
ret
in
cmp
add
rclb
xor
mov
fcmove
pop
fstp
mov
loope
addr16
ret
rcl
cmp
cmp
adc
sbb
shrb
int
sbb
loope
push
imul
mov
shr
into
sub
sti
enter
adc
popa
adc
stos
jb
mov
sub
adcl
scas
dec
xor
xchg
sbb
or
mov
in
nop
js
cmp
push
pop
aas
jnp
push
or
lea
mov
cltd
mov
dec
mov
mov
mov
add
dec
fcomp
call
mov
adc
popa
movsl
cld
es
pop
cmp
hlt
cmp
sbb
pop
outsl
lahf
or
popfw
sti
in
cmp
or
pushf
iret
xchg
stos
push
ja
dec
cmp
sbb
mov
sbb
mov
sbb
fs
enter
aaa
repnz
aaa
out
mov
cs
es
jne
mov
or
cmp
cmpsl
dec
in
cmp
xor
and
pop
notl
or
iret
push
lods
mov
ljmp
inc
aaa
mov
inc
cld
fistps
jp
xor
sub
push
test
in
xor
ret
inc
leave
cmp
mov
push
test
push
rolb
dec
ja
insl
aas
inc
inc
xchg
xchg
jp
out
cltd
pop
mov
dec
sub
stos
lret
incl
inc
sbb
neg
in
mov
adcb
js
sbb
mov
cmp
xorl
pop
std
sub
fnstenv
insb
and
pop
enter
imul
movsb
pop
sbb
lcall
xor
movsb
mov
clc
addr16
sub
mov
lret
push
iret
gs
mov
out
inc
popf
addl
mov
mull
push
xchg
push
pop
or
inc
ret
imul
rcrl
add
lcall
and
into
test
scas
cmp
enter
ret
lahf
cmp
cmp
in
mov
push
pop
fisubrl
xchg
sub
data16
out
sub
pop
xchg
sarb
xchg
call
cmp
pop
test
mov
cmp
jle
in
adc
mov
mov
fwait
push
sbb
dec
imul
pop
fcomip
xor
cmp
or
cmp
push
test
leave
sub
aad
pop
sub
and
movsb
bound
pop
loop
add
jecxz
shrl
sbb
or
sbb
lods
cli
repnz
loopne
pop
add
mov
aaa
test
adc
and
or
stc
sub
mov
rcll
popf
add
mov
ss
xchg
push
xchg
sbb
or
jnp
mov
sub
imul
sahf
insl
repnz
sbb
stc
repz
dec
lock
sbbb
fstpt
test
push
in
jne
push
push
push
xor
jge
mov
clc
jmp
mov
dec
lret
xor
adc
lret
jnp
pop
scas
xlat
cli
rcrb
inc
dec
mov
stos
es
sub
fs
sbb
inc
mov
mov
shlb
fldt
fimull
mov
push
jns
jo
adc
pop
mov
aaa
adcb
enter
mov
push
repnz
mov
xchg
scas
out
inc
sahf
mov
into
xchg
jnp
loope
jo
xchg
jmp
fcomp
rorl
pop
sbb
popa
pop
push
jecxz
mov
lods
cli
cmp
push
push
dec
fwait
shlb
adc
dec
pushf
aad
inc
jp
mov
xchg
mov
xor
sbb
push
aaa
add
aaa
fnstenv
int
fnstsw
scas
mov
jmp
sbb
mov
ljmp
jbe
aas
arpl
lcall
and
sub
jbe
sbb
lcall
mull
jmp
lods
aad
je
lret
pushf
xchg
add
out
pop
gs
movq
mov
xchg
enter
lea
subb
icebp
cmp
fidivrs
out
dec
cltd
dec
dec
fucom
test
fidivrs
push
mov
lret
push
sti
rcrl
dec
lds
inc
cltd
outsb
and
and
mov
jo
stc
jle
and
test
icebp
dec
xor
xor
aas
outsl
fldlg2
adc
fstps
jne
jle
daa
push
jo
mov
mov
imul
in
pop
sub
ficoml
pop
adc
sahf
cli
jp
adc
scas
scas
inc
push
rorb
ljmp
xor
pop
jbe
dec
add
lock
into
or
ficomps
out
dec
inc
and
push
aad
inc
xor
fsubrl
push
sbb
pop
inc
mov
jb
lods
jnp
xchg
fstpt
cli
dec
jo
push
xor
int3
aas
mov
jge
loopne
inc
cli
or
dec
xor
push
mov
rolb
or
push
cld
dec
out
fstps
xor
cmc
popf
add
int3
xchg
in
pop
repz
shll
mov
inc
loop
inc
cli
test
dec
inc
flds
out
mov
cwtl
pop
mov
jns
sub
cld
ret
xchg
pop
xchg
add
xchg
scas
inc
adc
cmpsb
fcmove
adc
aaa
testb
adc
aaa
test
pushf
mov
subb
pop
sub
pop
xlat
jg
mov
xchg
repnz
ds
jbe
fwait
enter
jg
and
ret
jbe
cwtl
je
je
insb
push
cmc
mov
jne
dec
popa
ret
xchg
arpl
sahf
daa
dec
mov
push
lcall
push
mov
stc
js
inc
lods
add
js
jmp
cltd
and
jno
adc
dec
adc
repz
add
out
icebp
test
popl
lret
xchg
js
stos
cmp
jns
jbe
jne
aam
movsb
mov
dec
push
lods
or
shll
rcrb
xor
lahf
dec
sub
mov
mov
add
dec
adc
ret
aas
das
and
cld
sub
and
cli
mov
pop
cmpsl
push
repz
dec
ljmp
mov
test
out
arpl
jg
add
pop
push
inc
mov
mov
mov
scas
or
xchg
add
in
mov
aas
jns
ja
push
mov
push
out
inc
into
loope
jns
rcl
cmc
ss
push
sub
pop
cltd
xchg
push
mov
lea
mov
sub
inc
push
pop
cld
jmp
fucomp
movsb
les
bound
ja
mov
icebp
mov
cli
cmc
repnz
mov
sub
adc
push
xor
or
xor
xor
cmp
mov
and
mov
out
cmpsb
sar
subl
dec
fcmovb
popf
mov
clc
or
adc
mov
pop
add
dec
lahf
mov
test
es
inc
ss
sti
lock
test
sub
int
inc
imul
jo
mov
sub
nop
std
sbb
mov
xchg
dec
pop
out
inc
sbb
jge
pop
pop
stc
inc
xor
rorb
add
mov
pop
mov
dec
test
pop
mov
fdivrs
adc
jbe
sbb
test
out
and
shll
jmp
hlt
das
aam
rcrl
mov
cmp
and
das
int3
dec
pop
xlat
loopne
in
insb
inc
push
mov
fsubl
sbb
sbb
adc
ja
sti
sub
inc
das
push
stos
pop
mov
cmp
test
inc
xchg
es
jae
pop
mov
xchg
inc
fimuls
popf
scas
adc
into
mov
fwait
pop
or
shl
repz
fdivl
mov
mov
jo
inc
mov
jo
lret
push
xchg
in
enter
rclb
push
ljmp
xor
add
pushf
xchg
add
sahf
test
call
push
and
sbb
iret
imul
push
scas
in
cwtl
int
test
push
mov
cmp
adc
lahf
xchg
leave
jo
gs
pop
sub
leave
insl
and
push
and
xorb
mov
or
lret
and
lcall
cli
xchg
rclb
stos
add
pop
out
rcl
daa
shlb
sarb
pop
sub
nop
outsl
xchg
je
lret
add
jmp
push
xchg
in
push
push
and
mov
jnp
in
pop
inc
popf
mov
and
lea
sbb
imul
gs
mov
lock
jns
adc
test
shrl
cmp
jecxz
jg
iret
aam
test
mov
add
outsb
gs
sbb
out
pop
testb
fsubl
int3
lods
mov
icebp
insb
add
mov
xor
cmp
lods
xchg
pop
in
sbb
in
push
xchg
mov
shlb
in
pop
adcl
aas
pop
mov
dec
cmpsb
mov
xor
push
cld
cmpsl
sbb
lcall
mov
ret
and
cmc
aad
xorb
icebp
loop
xchg
testb
cmp
aad
xchg
fisubrl
mov
dec
rcr
outsb
xchg
addr16
push
mov
adcb
movsb
sbb
add
cmc
or
out
sbb
mov
xchg
push
daa
rcrb
xor
in
pop
loopne
fidivl
push
cmp
push
push
push
repz
shll
and
repnz
dec
adc
out
es
pop
jmp
lcall
dec
push
rorb
add
adc
adc
push
int
outsl
dec
into
les
push
packssdw
stos
mov
lds
and
sahf
sbb
fmul
sub
cmp
mov
mov
in
aas
jne
arpl
mov
mov
xchg
pop
add
push
mulb
mov
mov
mov
sub
shll
pop
and
adc
in
and
push
mov
mov
mov
aas
dec
mov
lods
fwait
js
inc
cmp
jg
or
nop
loope
xchg
xchg
cwtl
push
jmp
xchg
rcrl
and
jae
out
dec
mov
inc
enter
push
daa
pop
iret
push
jne
in
rol
mov
lahf
inc
sti
adc
jp
ss
or
or
loop
test
ja
lahf
clc
adc
xchg
std
xor
cld
ret
xchg
jmp
shlb
scas
cmp
shrb
jbe
test
xchg
xchg
out
addr16
sub
or
shl
dec
std
jb
insl
inc
adc
or
in
inc
dec
cli
adc
xchg
aam
fsts
mov
ljmp
inc
jecxz
xchg
cs
add
xchg
jp
cwtl
jg
push
mov
cmp
aam
jne
cmp
or
sub
or
and
enter
mov
push
pop
or
xchg
lock
aad
xor
xchg
ss
and
mov
mov
adc
sahf
ss
sbb
sub
cmpsb
insl
pop
mov
call
mov
push
dec
dec
scas
lea
dec
insb
inc
hlt
sbb
test
dec
sub
sbb
repz
sbb
cmp
mov
pop
dec
adc
data16
xchg
sbb
sahf
sarb
leave
popf
adc
pop
outsl
cli
fisttpll
andl
aaa
pop
jge
cmp
into
mov
jl
aaa
dec
lcall
jns
fwait
and
iret
popf
in
mov
dec
or
mov
cld
sbb
lds
adc
imul
aas
jb
outsb
loopne
mov
repz
or
pop
pop
popa
mov
mov
lods
adc
stc
push
stc
lds
or
dec
loopne
lea
xchg
xor
lds
inc
add
in
and
add
xchg
sub
fwait
dec
sbbl
inc
mov
iret
mov
adc
mov
mov
sub
cmp
sub
or
ss
lea
nop
xor
inc
adc
xchg
push
jo
jbe
mov
mov
mov
sub
xchg
sub
or
in
data16
gs
sub
adc
dec
test
movups
inc
and
inc
jle
shll
sti
testb
in
xchg
sbb
sarl
cmc
xor
pop
push
adc
mov
jge
stos
data16
mov
cmp
or
cmpsl
and
dec
aaa
into
arpl
aaa
je
pop
rol
adc
jl
fbstp
fbld
jo
fsts
fcmovnbe
xchg
movsl
in
mov
fucompp
dec
mov
ret
pop
pop
mov
xor
jg
outsl
and
out
xchg
divl
enter
adc
and
bound
call
push
sbb
rcrb
jecxz
add
insb
sub
mov
fildll
jecxz
lock
ljmp
pop
sbb
and
or
cmp
je
cli
repz
xor
jno
or
cmp
pop
loope
push
cmp
fadd
xor
jns
std
insb
imulb
inc
mov
lret
aas
mov
decl
lea
push
lret
enter
adc
fadds
add
pop
pop
fdivrp
aam
xor
adc
dec
inc
mov
sub
test
dec
push
mov
xchg
dec
test
inc
repnz
xchg
mov
push
jae
adc
push
fwait
push
inc
mov
mov
into
scas
inc
lret
mov
mov
test
leave
jae
out
insb
addb
test
jo
inc
lret
aaa
mov
xchg
ljmp
pop
or
cmp
mov
push
cmp
and
ret
js
mov
xchg
in
stos
je
dec
xchg
xchg
sahf
add
std
sar
mov
stc
or
loope
je
xchg
or
cmc
in
jb
iret
mov
push
xor
xchg
inc
pop
aad
or
dec
test
mov
mov
jnp
xchg
xchg
or
aaa
rorb
fildl
in
ret
lea
inc
loop
lahf
mov
ret
inc
xor
aas
repnz
fxam
adc
push
jne
inc
cs
aam
out
loopne
clc
mov
inc
int3
push
cld
sub
cli
test
jl
imul
enter
imul
rcll
pop
lods
fscale
xor
rorb
cmp
mov
cmp
das
das
xchg
push
pop
add
push
xchg
xor
sbb
decb
das
lret
mov
adc
cli
mov
jbe
ljmp
js
and
fsubl
mov
lods
int3
cmp
pop
mov
jmp
cs
cwtl
cmpsl
add
out
lods
test
jl
fs
in
addr16
push
push
ss
lds
dec
jp
lods
or
gs
adc
inc
aam
insl
and
dec
ret
adc
jb
xchg
sub
jne
pop
xchg
aam
pop
iret
inc
in
mov
mov
mov
fs
push
aam
shr
shll
in
lcall
iret
mov
popf
jno
leave
cmp
xchg
push
push
lcall
in
jbe
fwait
sbb
push
sbb
sub
push
repz
fnsave
sub
dec
add
inc
or
dec
nop
jo
jle
data16
push
add
std
lea
sub
cmp
push
mov
aad
std
inc
mov
jecxz
inc
inc
hlt
jo
xor
faddp
ret
hlt
fistpl
pop
push
popa
mov
jns
mov
enter
lahf
shll
sub
xchg
mov
mov
push
sarl
sub
push
xchg
xchg
xchg
push
xchg
jmp
out
xor
push
and
lods
xchg
icebp
mov
lret
out
in
mov
lock
push
add
mov
clc
fnstcw
cltd
arpl
or
popf
nop
je
mov
pop
divl
xchg
sbb
into
sub
mov
push
mov
aad
scas
sahf
inc
mov
lea
fisubs
and
rorb
cmp
jmp
ret
in
std
jb
rdpmc
inc
sbb
sahf
stc
jne
and
popf
pop
sti
push
jo
pop
loop
sub
dec
adc
inc
es
lods
and
cli
fcompl
test
inc
mov
cmpsl
test
add
pop
xor
cmpsb
repz
xor
movsb
add
jmp
dec
fcoms
cmp
cmc
fidivrl
jnp
xchg
jno
ljmp
pop
pop
es
cmp
aam
std
jo
int
xchg
sub
mov
fmuls
jb
lods
gs
mov
ss
adc
push
fabs
xchg
ljmp
jecxz
mov
mov
mov
in
jno
cld
js
add
sbb
scas
cmp
xchg
pop
add
insl
ja
rorb
pop
cmc
push
sbb
andb
mov
add
xor
cmpl
cmpsb
icebp
mov
dec
fstps
add
outsb
stos
cmp
stc
push
mov
xor
pop
mov
into
inc
push
dec
sub
ss
popf
in
push
imul
xor
or
push
aad
inc
cmp
movsb
sbbb
and
rolb
scas
push
repnz
scas
aaa
jle
dec
adc
cmpsl
stos
shrl
sbb
lea
je
and
and
loop
inc
mov
xor
in
sub
iret
mov
xchg
push
and
pop
andl
loope
fdivp
mov
xor
ja
add
add
ja
dec
push
push
insb
lret
in
mov
in
addr16
stos
sub
push
in
inc
pop
stc
jp
pop
imul
dec
in
xor
inc
mov
jecxz
xchg
fistpll
scas
lret
outsl
push
jl
movsl
cmpsl
fs
dec
test
and
stos
shlb
jge
data16
and
dec
lret
pop
cmpsl
mov
xchg
jle
sub
lret
pop
int
aam
and
xchg
sbb
fucomi
aam
lock
lret
bound
push
ljmp
and
out
mov
outsb
cmp
out
sbb
es
sbb
loope
adc
sub
es
cli
pop
xor
add
bound
shlb
testl
mov
std
icebp
inc
in
jge
hlt
jge
sbb
or
inc
push
loopne
push
dec
xor
sahf
inc
mov
fimuls
push
mov
mov
scas
xchg
inc
push
pop
cmp
xor
push
leave
in
fs
lahf
xchg
push
cmp
dec
mov
mov
pop
mov
sub
out
mov
inc
adc
loope
xchg
mov
movsl
mov
mov
out
xchg
aad
push
hlt
pop
jle
jne
ret
dec
inc
sub
sub
dec
mov
and
mov
mov
and
pop
dec
mov
rorl
adc
test
adc
in
ror
fxch
adcl
imul
iret
push
or
push
xlat
scas
inc
and
mov
sub
mov
add
cmc
dec
and
mov
push
stos
cld
arpl
xor
shl
mov
add
idivl
dec
dec
add
dec
push
mov
mov
xor
inc
xchg
mov
sub
popf
in
stos
movl
sbb
mov
mov
cmp
add
jmp
sbb
mov
in
sbb
push
out
mov
sti
dec
ret
loope
jno
js
sub
into
pushf
sub
loop
mov
mov
jns
dec
pop
rcll
mov
pop
das
mov
adc
imul
push
xchg
leave
xlat
aad
pusha
mov
ljmp
xor
aaa
mov
scas
insb
and
add
adc
inc
fnstcw
adc
mulb
gs
inc
mov
jecxz
push
add
xchg
sub
lods
and
add
jns
sub
mov
cmpsl
outsl
add
pushf
pusha
ds
add
pop
repnz
orb
daa
mov
sub
popa
xchg
mov
mov
and
stos
lods
cli
dec
fstpt
inc
mov
mov
pop
mov
mov
dec
daa
jbe
nop
movsl
mov
int3
push
adc
sbb
repz
cmpsl
sub
xchg
cli
cld
mov
sahf
shlb
jns
dec
lock
push
imul
movsl
inc
incl
mov
imul
or
mov
adc
sahf
jbe
xchg
sbb
rcll
xchg
xchg
stc
div
mov
inc
enter
negl
cmpl
arpl
mov
mov
jno
sub
outsl
or
xchg
mov
ja
jl
push
lock
not
clc
fsubrl
sarl
je
fists
and
inc
add
xchg
push
lods
popa
mov
mov
cwtl
mov
dec
aam
pop
jecxz
and
mov
mov
pop
cmp
push
aas
sbbl
rcl
cltd
into
mov
fistpll
pop
mov
ret
xor
stc
ficoms
push
cs
sub
mov
cmp
dec
fmul
lea
lahf
fldl2t
pop
sub
add
jp
adc
sarl
stos
mov
mov
fsave
pop
pop
dec
jle
mov
sahf
cltd
mov
ljmp
out
or
jle
or
dec
xchg
jp
cmp
scas
lahf
push
mov
cmc
imul
daa
iret
sbb
mov
mov
ret
push
sub
add
push
or
rolb
pop
push
or
je
inc
xchg
aam
xchg
leave
add
loopne
addl
shll
mov
loop
mov
pop
aam
mov
fbld
jb
jns
andb
cwtl
jmp
das
sub
jae
std
sub
iret
je
sub
ja
ds
jno
or
adc
sbb
push
cli
mov
lods
dec
push
jbe
ljmp
stc
jno
xlat
shll
cs
or
sub
movsb
imul
xchg
pminsw
outsb
mov
mov
xchg
and
jns
fstps
test
aam
aad
out
mov
adc
std
lahf
xchg
popf
mov
mov
enter
lar
in
cmp
addr16
mov
in
cmp
add
mov
push
in
fld
mov
out
dec
adc
mov
push
xlat
lock
cmp
std
lods
and
pop
sahf
mov
inc
xchg
cmpsb
loopne
fs
shrl
cmp
movsb
mov
jp
enter
adc
jmp
add
lret
rcrb
mov
adc
or
jno
or
xor
fmuls
mov
test
aas
shll
pop
pop
testb
enter
push
shrb
loop
cmp
pushf
mov
call
xchg
ret
xor
and
ret
dec
cs
aas
es
divb
mov
sbb
adc
pop
clc
mov
int3
stos
mov
sbb
adc
push
mov
push
mov
pop
cmp
jge
lea
or
scas
dec
std
mov
or
adc
jb
dec
lret
and
inc
aam
rolb
test
pop
js
mov
notb
repnz
ficoml
or
cmp
jmp
jbe
out
sub
adc
ret
sahf
fstp
cmp
jmp
int3
cmp
iret
cmp
cmp
dec
insb
loopne
mov
loop
int3
push
sub
stos
lods
push
stos
xchg
fmuls
dec
daa
adc
lahf
dec
shl
or
sub
cli
pop
leave
dec
sub
insl
mov
and
rcll
mov
mov
pop
pop
xchg
addr16
inc
mov
or
nop
mov
cmp
jae
sbb
cltd
xchg
add
rcrl
imul
mov
std
hlt
clc
cmp
dec
lahf
test
jae
fiaddl
xchg
add
ljmp
xor
sub
mov
enter
loope
cmp
sahf
jecxz
aam
in
imul
cli
sarl
idivl
mov
cmpl
push
jp
or
leave
adc
jno
sub
xchg
leave
xor
fcompl
inc
mov
fs
xor
out
push
pop
movsl
jmp
sub
ror
xchg
sub
cmp
nop
sub
addb
psrad
dec
mov
ret
mov
or
mov
jae
stc
xor
lahf
scas
stos
dec
iret
leave
popf
and
loopne
push
push
ret
adcl
je
and
jb
stos
fmuls
int3
cmc
sbb
cmp
inc
sub
icebp
add
mov
or
push
cmpsb
loop
add
mov
sub
test
jl
lock
pop
rcl
and
cmp
dec
jnp
lret
jle
ret
sub
arpl
dec
inc
push
jecxz
mov
imulb
inc
mov
adc
fisubl
cmp
out
loop
sar
lahf
sub
hlt
es
mov
jno
cmp
jbe
xor
cmp
int3
stc
in
jmp
loopne
push
in
inc
inc
movsb
ljmp
fdivrp
adc
cmpsl
adc
in
scas
lods
daa
add
movsb
arpl
or
movsl
mov
pop
mov
jmp
iret
inc
inc
sbb
fnstsw
movl
cltd
stc
jge
and
fs
sbb
push
enter
int3
lahf
je
pop
out
ds
out
insb
xor
mov
push
inc
stos
mov
lret
pop
pop
std
xchg
das
cmp
mov
cmp
in
add
imul
jns
sub
loopne
in
adc
mov
dec
xor
adc
jo
sub
in
popa
cmp
test
call
jge
sub
inc
cmp
cmc
loope
jmp
mov
jp
adc
xor
fstps
xchg
bound
mov
and
aas
imul
movsl
xlat
or
jg
sbb
loop
cmpsb
sub
ret
inc
or
jmp
push
push
lret
out
sahf
lret
and
jmp
add
inc
and
lods
es
cmc
lahf
roll
push
shrb
adc
mov
mov
xor
enter
ret
bound
cmp
and
daa
rcrb
fstl
sub
sub
jbe
add
das
dec
jecxz
dec
popf
js
cmp
xchg
daa
aad
incl
std
sti
adc
mov
leave
jns
jg
stos
lret
rcll
inc
cmp
imull
sub
pop
hlt
mov
popf
ret
lret
jg
popa
mov
scas
adc
out
jg
out
pop
pop
movsb
scas
sbb
push
jp
adc
xchg
push
push
pop
xchg
movsb
das
movsl
push
and
push
test
iret
lret
in
aaa
ja
aad
iret
test
ret
cmp
dec
jno
and
inc
cmp
sbb
sahf
dec
push
jno
enter
xor
test
hlt
mov
jne
jmp
minps
es
mov
jbe
in
lods
cmpl
or
movsl
lods
mov
inc
mov
js
push
or
scas
iret
in
scas
or
mov
inc
fcoml
jmp
insb
or
jle
mov
adc
imul
jp
mov
ja
je
movsb
cli
aaa
int
loopne
daa
popf
xchg
cmp
nop
jbe
pop
out
in
xor
and
mov
jmp
cmp
jo
inc
adc
mov
push
add
mov
ret
mov
fldenv
mov
pushf
popa
xor
xlat
cmp
outsl
inc
fs
jb
pop
mov
fdivs
jae
xor
mov
jecxz
lahf
das
pop
leave
and
dec
xor
repz
test
pop
lcall
adc
add
sub
jg
xor
xchg
movsl
ss
pop
lods
push
ret
cwtl
nop
call
dec
cmp
or
and
add
cltd
sbb
andl
cwtl
outsl
cmp
cmpsl
lcall
clc
jge
cmpb
jmp
jmp
jge
cli
jb
das
cmp
scas
jns
pop
pop
push
push
cmp
aaa
aam
loopne
cmp
mov
push
test
aas
clc
push
push
test
in
lret
mov
mov
pushf
sub
cmp
mov
les
mulb
push
dec
mov
outsb
xchg
inc
in
dec
pop
sti
xor
arpl
dec
loope
enter
dec
sar
adc
shrb
mov
cwtl
scas
shl
dec
xlat
dec
dec
fsts
mov
pop
shlb
xchg
mov
stc
bound
or
test
clc
or
stc
jno
cwtl
in
pusha
icebp
jle
shrb
fiaddl
sub
push
mov
shlb
push
sti
jmp
cmpsl
mov
jp
dec
stos
or
mov
in
test
adc
movsb
pop
or
popa
pop
cwtl
rol
sub
xchg
test
xchg
sarl
cmpsl
mov
cltd
ret
fsubl
das
adc
or
add
es
mov
xchg
repnz
pushf
sub
jmp
and
mov
add
mov
jge
push
repz
mov
pop
jecxz
das
dec
lds
int3
xchg
ror
or
or
sub
mov
push
pop
mov
jae
jmp
mov
pop
ret
add
fprem
mov
into
test
ljmp
iret
mov
fsubrl
je
cli
and
pop
gs
add
insb
popa
call
pushf
bswap
daa
pop
addr16
aad
xchg
arpl
in
add
push
push
push
mov
add
jmp
loop
lret
cmpsb
mov
cmc
jo
std
jns
js
in
sbb
hlt
mov
in
arpl
push
loop
sub
out
jl
inc
add
icebp
adc
icebp
movsb
aas
adc
test
mov
cli
inc
mov
les
adc
xchg
add
xchg
pusha
arpl
dec
push
stos
adc
sub
cmp
in
mov
lcall
adc
inc
sahf
mov
sub
adc
and
sarb
movsb
leave
xor
into
or
jb
pusha
mov
test
push
lock
daa
cmp
adc
nop
push
and
jo
cmp
dec
bound
inc
sub
and
dec
into
icebp
xchg
test
filds
into
out
scas
fwait
sahf
addr16
cmp
pop
mov
push
lahf
mov
sbbl
ror
fistpll
scas
loopne
clc
inc
enter
mov
mov
mov
out
or
push
and
jns
pop
mov
imul
dec
jl
in
xor
xor
inc
aaa
or
and
jo
sti
loope
add
jmp
lahf
push
mov
xor
mov
lret
mov
push
and
ljmp
stos
jno
js
xchg
aad
nop
mov
popf
andb
lock
ljmp
xor
push
lcall
fmuls
es
scas
inc
adc
sub
cmp
shl
jbe
in
or
and
xor
dec
fistpl
cmc
fstps
out
in
iret
lods
scas
add
push
mov
pop
push
into
sbb
popf
shlb
ss
or
mov
mov
jecxz
divl
into
call
ret
and
dec
sub
push
push
cmp
inc
stos
gs
daa
in
in
sbbb
ret
cmp
mov
sub
mov
pop
mov
mov
out
repz
test
sub
in
shl
mov
mov
cmp
add
and
rclb
mov
jmp
in
cmp
mov
rclb
subb
push
call
lret
or
shll
fistpl
popf
out
pop
pop
mov
jecxz
cmp
xchg
push
into
icebp
jl
sbb
sbb
test
clc
aam
je
cmp
out
or
cmpsb
faddl
jns
xor
daa
cmpl
adcb
divb
jmp
sub
movsb
test
add
mov
cmp
add
mov
mov
jae
or
xchg
ljmp
push
out
test
cs
leave
faddl
pop
lret
sarb
jp
push
or
xchg
cmp
fisttpl
sbb
mov
loop
aas
dec
stos
lret
mov
adc
mov
insl
nop
mov
test
xor
cli
lret
mov
dec
jge
mov
int
mov
mov
sub
xor
ficomps
shl
mov
stos
jns
js
or
cli
adc
mov
and
cli
cli
sti
push
dec
movsl
add
sub
jae
les
push
sbbb
lret
stc
sub
add
testl
scas
cwtl
ja
jmp
mov
xchg
leave
adc
xor
mov
lcall
sbb
cwtl
rcrb
out
addr16
rorb
xor
adc
mov
stos
es
or
cmp
push
xchg
jl
fisubl
repz
adc
jnp
leave
test
out
push
add
mov
jns
gs
clc
call
jns
mov
wbinvd
fbld
xchg
mov
cli
negl
call
mov
mov
iret
mov
adc
fsubl
stc
jecxz
sbb
mov
fcoms
aaa
lds
jg
cmc
mov
dec
jbe
sbb
or
pop
adc
inc
scas
xor
jbe
mov
lea
test
inc
daa
mov
push
pop
push
rcll
sbb
mov
adc
in
mov
jl
push
imul
test
mov
cmc
ret
mov
mov
pop
add
jle
mov
add
in
clc
imul
add
scas
call
roll
xchg
mov
xchg
pushl
pop
subl
add
mov
xor
aas
add
xchg
or
and
adc
add
add
sbb
pop
ja
iret
jge
movsb
push
adc
or
adc
jo
xor
inc
cmp
xchg
or
ja
test
cltd
sti
xchg
loop
sub
push
shrb
sub
notl
push
sbb
cmp
lahf
addb
out
daa
and
xchg
les
arpl
jmp
ss
pop
jl
xorl
adc
cli
jp
aam
xor
sub
cltd
jmp
pop
or
mov
inc
popa
std
fldcw
cmp
lret
xlat
lcall
ret
fiaddl
and
jg
add
js
test
test
pusha
or
cmp
ret
inc
adc
mov
lret
push
xor
push
xor
dec
test
xchg
and
in
push
inc
jle
mov
cli
jno
xor
and
adc
popa
mov
inc
in
mov
adc
xchg
dec
aas
xorl
fsts
ficomps
insb
xor
or
fnstcw
sbb
xchg
les
popf
cmp
push
cmp
stos
fcoms
adc
dec
stos
test
xor
add
push
sub
jae
xchg
adc
jecxz
xchg
mov
dec
cs
lock
jns
jo
js
mov
sub
cwtl
mov
addr16
xor
mov
xchg
push
or
negl
inc
jmp
xchg
mov
xchg
push
frstor
mov
sub
leave
mov
ljmp
mov
and
movsl
jecxz
sbb
movaps
cli
xor
cmp
call
push
adc
adc
push
and
mov
dec
addb
roll
add
sbb
mov
scas
fstpl
loop,pt
mov
test
xor
aaa
and
inc
dec
mov
xor
stos
lods
in
xchg
cltd
ret
cmp
xor
push
cwtl
jecxz
sbbl
cmp
xchg
add
pusha
sub
outsb
repnz
xor
mov
notl
inc
add
and
or
shl
movsb
jnp
inc
ficoml
cmp
xor
popa
and
push
xchg
lds
add
sbb
push
shll
sar
ja
sbb
js
mov
pushf
aaa
xchg
mov
movsb
jmp
sbb
xchg
mov
nop
sbb
nop
jbe
cmpb
jae
fwait
dec
sbb
ror
dec
stc
sbb
adc
push
in
nop
sub
xor
sarb
cltd
scas
inc
xor
int
movsb
xor
test
sahf
insl
roll
sbb
pop
imul
and
xor
inc
fistl
stc
popa
addr16
mov
or
mov
imul
or
adc
daa
jg
xchg
push
push
ret
test
xchg
jg
shll
pusha
jl
repz
frstor
pop
lods
iret
cmp
mov
add
pop
into
cmc
xor
inc
hlt
ret
test
mov
adc
popa
fcoml
imull
stos
out
mov
add
mov
cmp
inc
loope
mov
outsb
cmpb
cld
test
sub
inc
xchg
aam
adc
mov
ret
adc
scas
mov
rcr
mov
pop
mov
into
jp
movsb
or
mov
mov
and
xchg
rcrb
and
mov
fwait
loope
out
or
addb
cmp
insl
xchg
add
adc
popf
add
mov
lods
lcall
add
push
jb
js
push
push
insb
test
push
aad
nop
leave
dec
repz
xlat
testb
lea
test
jns
push
lods
push
xchg
and
fs
jns
lcall
cmp
mov
and
xor
lahf
and
dec
test
push
lods
push
inc
sub
cmpsb
jnp
out
in
repnz
test
cmp
insl
cld
mov
mov
push
or
es
test
icebp
dec
mov
in
or
out
sub
gs
xor
add
ja
mov
fdivl
rcrl
fnstsw
add
nop
mov
mov
sbb
ret
sbb
pop
push
push
adcl
xor
test
clc
rcl
pop
popa
sub
imul
rcr
stos
mov
loopne
lcall
jl
dec
inc
or
sub
push
inc
inc
std
loopne
mov
jg
test
shrl
std
jb
pop
cltd
int3
movsl
xor
stc
movsb
mov
imul
das
inc
imul
add
sbb
add
sbb
cltd
dec
out
roll
das
jmp
xchg
mov
xchg
divb
movsb
cmpsb
call
jle
cmc
jl
std
mov
mov
add
xchg
pop
in
and
and
push
adc
mov
and
lods
xlat
test
inc
cmp
sar
test
pop
inc
inc
cmp
mov
mov
inc
dec
sbb
shll
ret
int
fcmovnbe
sbb
insb
dec
cltd
fstpl
xor
dec
mov
pop
adc
inc
aad
pop
sub
cmp
xor
loope
pushf
jp
add
push
pop
xlat
rcll
mov
mov
cmp
sbb
lahf
jae
push
imul
jb
inc
push
mov
test
push
jle
pop
cmp
rcrl
sub
xchg
mov
stos
cld
enter
mov
add
popf
loope
popf
lret
arpl
mov
stc
orb
mov
aam
ror
loope
sbb
pop
mov
pop
jns
jge
pop
cmp
mov
cmp
test
mov
pop
sbb
push
cwtl
jmp
addr16
pop
fimull
ficoms
pop
pop
aam
inc
enter
push
arpl
in
pop
or
sub
xchg
sbbb
inc
movsb
lock
into
mov
sbb
pop
sbb
es
mov
sbb
rep
cmpsl
pop
cmp
jno
jnp
fisubrl
imul
cmp
xor
sub
leave
js
pop
clc
xor
mov
int3
out
int3
inc
mov
xchg
ja
outsl
cmp
outsl
mov
ret
jg
or
notb
mov
mov
mov
dec
les
lcall
test
cmpsb
cmp
push
das
push
rcrl
aas
dec
aas
test
out
lret
dec
into
lea
lods
test
push
dec
and
xlat
in
push
push
cmp
sarb
shrl
pop
mov
lret
push
sti
sbb
xor
repnz
out
add
and
aam
gs
lock
mov
sbb
add
repz
xchg
loopne
or
push
add
push
insb
jo
cmpsb
jge
jl
pop
insb
jge
repz
lret
jns
pushf
cld
mov
imul
mov
sbbl
pop
mov
clc
sahf
aad
insb
paddusw
lret
mov
in
or
sbb
int3
imul
sbb
jle
jns
int
pop
push
jg
imul
in
pop
pop
or
test
xchg
test
lret
stc
or
cmp
hlt
push
jmp
arpl
subl
fs
arpl
leave
inc
xor
std
jne
mov
cltd
jge
loope
jno
xor
mov
cmp
and
ret
pop
add
and
mov
imul
divb
sar
push
loopne
test
sbb
add
sbb
xor
pop
mov
mov
lock
je
lahf
movsb
clc
push
push
sub
sbb
mov
inc
dec
inc
gs
rol
int3
sahf
and
add
cmp
hlt
mov
xor
rcrb
xor
stc
in
xchg
es
xor
fldt
cmp
js
xor
xchg
pop
xchg
and
test
xchg
mov
jl
sub
xchg
jnp
lods
jne
lret
or
dec
mov
and
shlb
lcall
inc
add
adc
add
push
sti
mov
test
test
ljmp
mov
lret
jge
fadds
and
loop
or
mov
cmp
add
je
jo
in
mov
shll
xchg
dec
fiadds
mov
or
negl
push
adc
cmp
fsubs
insb
dec
cmp
mov
pop
xor
addr16
jo
pop
add
and
mov
jmp
xor
dec
mov
push
das
inc
mov
in
xchg
cmpsb
add
mov
inc
repz
pop
mov
or
jle
sbb
push
cwtl
jle
iret
mov
fs
stos
jmp
inc
fcmovne
inc
jmp
clc
rcrl
sarl
idivl
cmp
jne
rcrl
inc
sub
frstor
rclb
adc
and
shrl
mov
pop
daa
inc
iret
leave
mov
test
cmp
in
out
outsl
inc
pop
cs
xchg
in
xorl
sbb
dec
or
call
xor
fs
xchg
xchg
enter
mov
jle
dec
sub
jle
leave
stc
adcl
shll
in
xchg
aad
in
cmp
sbb
mov
mov
mov
cmpsl
ret
xor
push
gs
fmuls
jnp
nopl
cmp
shl
pop
adc
rcl
dec
jbe
sahf
icebp
int
jl
adc
pop
js
faddl
mov
adc
cmp
push
stos
lds
adcb
rol
push
cmp
mov
test
aaa
stc
idivl
pop
fstps
pop
xchg
cmp
sub
subb
mov
adc
lret
int
add
jbe
in
add
movsb
sbb
decl
in
push
push
int3
pop
xchg
sbb
dec
pop
les
pop
and
rol
xchg
test
mov
mov
cwtl
das
testl
or
lahf
jg
jns
dec
shlb
xlat
fwait
mov
fnsave
jne
pop
push
sbb
sbb
inc
jns
cltd
mov
or
dec
dec
mov
mov
int3
xor
pop
mov
cmp
mov
rcrl
add
jo
mov
and
add
rcrl
cmc
loope
stos
jg
cmp
cmp
sbb
mov
and
xor
in
push
dec
lret
or
inc
pop
push
push
out
cltd
lods
test
and
pop
mov
pop
stos
cmpsl
cltd
xor
add
push
pusha
xorb
repnz
push
xlat
pop
adc
icebp
loop
leave
popa
add
fildll
jne
or
mov
mov
lcall
sahf
rclb
clc
out
std
pop
mov
cwtl
xchg
ds
mov
and
pop
add
mov
inc
and
enter
jg
in
out
popa
and
dec
add
pop
push
insl
jle
cmp
iret
icebp
in
insl
dec
into
sub
data16
xor
pusha
test
sbb
insb
dec
cmp
pop
add
pusha
mov
and
popa
std
push
stos
movsl
jle
in
mov
aam
hlt
ret
rcll
push
or
repz
ds
add
and
xchg
jae
data16
addr16
mov
push
adc
xchg
notb
insb
cmpsl
ds
js
fnsaves
inc
xor
mov
push
push
pop
aad
push
nop
dec
inc
inc
push
inc
dec
adc
mov
inc
out
scas
rcr
inc
popa
push
pop
mov
inc
or
sbbl
jp
ss
dec
push
sub
add
loopne
jae
jle
pop
mov
mov
inc
pop
push
mov
mov
cld
pop
nop
std
cmp
inc
pop
je
sub
mov
xchg
cltd
add
repz
xor
inc
in
mov
cmp
popf
push
gs
addr16
shl
xlat
les
or
popa
sbb
divl
sbb
mulb
inc
pop
mov
mov
popf
insl
je,pt
pusha
push
sar
mov
mov
add
enter
rol
add
out
xchg
sub
mov
xor
jge
jge
ss
repz
fldenv
mov
mov
mov
push
imul
pop
enter
add
es
sub
pushf
je
stos
popf
out
or
shlb
pop
mov
pusha
cmp
movsb
add
inc
or
xchg
inc
pop
iret
shl
mov
add
arpl
ds
add
jge
push
daa
adc
xor
xchg
sub
dec
push
ret
or
push
repnz
sti
xor
les
pop
icebp
in
sub
cli
sub
push
push
mov
aam
lcall
lods
dec
idivl
iret
xor
inc
mov
jbe
imul
mov
sbb
mov
xor
pop
push
mull
jae
mov
sub
popa
das
sahf
xor
mov
dec
push
sub
sbb
mov
repz
or
push
sahf
inc
adc
cs
rolb
sbb
inc
mov
sub
inc
fists
xlat
mov
cmp
mov
fildll
shll
stc
js
jecxz
cmp
test
data16
cltd
push
movsl
ds
sbb
xchg
fcoms
mov
outsb
mov
add
dec
in
ja
mov
ret
pushf
lea
inc
cld
add
js
cmpb
xchg
data16
inc
out
push
inc
xchg
mov
addl
imul
ret
mov
push
pop
outsl
ror
les
in
mov
jo,pn
pop
xor
aad
sarb
pop
call
xor
dec
pop
xchg
inc
xchg
ss
pop
mov
xor
pop
and
xor
push
hlt
and
mov
lods
mov
sar
aad
insb
fwait
dec
jns
dec
mov
xchg
add
jbe
push
sub
dec
xor
adc
jne
push
inc
lret
jae
test
lahf
xor
adc
cwtl
sbb
out
dec
imul
ja
mov
cwtl
lea
rclb
rcrl
movsl
not
or
dec
pop
insl
ja
rcrb
into
sti
sub
push
fucom
pop
pop
pop
sbb
fwait
pop
push
jae
fisubrl
sbb
shl
mov
insb
rorl
movsb
sahf
sbb
add
les
int
fistl
mov
xchg
hlt
mov
push
aam
sub
test
inc
bound
push
stos
into
ss
clc
sub
dec
jns
call
xorb
dec
mov
cmp
lret
xchg
or
fprem
rolb
out
push
fimull
repz
cmp
out
mov
aas
inc
xchg
loop
jp
loop
sbb
add
rolb
push
push
adc
push
jnp
decb
xor
int3
cmp
ss
mov
shr
mulb
imul
aas
test
loope
ljmp
sub
xor
in
nop
sahf
fstpl
adc
push
dec
mov
xchg
xlat
setno
roll
test
mov
ret
sbb
aam
fbld
sbb
lea
lret
lcall
leave
sahf
mov
ja
dec
sbb
aaa
leave
mov
and
inc
lods
pop
scas
xchg
insb
pop
rcrl
daa
cmp
inc
sbb
out
xlat
inc
lds
fisttpll
andl
push
repz
xchg
in
xsave
imul
or
and
pop
stos
xlat
dec
adc
mov
push
jns
mov
insb
out
fadd
shl
xor
clc
bound
mov
sub
iret
push
xor
cltd
scas
lods
ds
add
xlat
jo
push
fcomip
mov
outsb
xor
scas
cmpsb
cmp
fisubl
inc
or
out
imul
pop
pop
add
cli
xchg
sbb
andl
pop
mov
mov
cmpsb
aas
repz
out
lret
lret
jbe
xchg
xor
inc
inc
dec
mov
jb
xchg
data16
or
sub
jb
cmpsb
fs
testl
das
cmp
aam
imul
xchg
ret
xor
xor
push
jns
test
push
pop
mov
mov
lods
into
mov
popf
aad
add
or
sub
dec
insb
iret
cmp
inc
add
inc
jp
ficomps
repz
dec
xor
ret
dec
jo
repz
fdivr
aam
or
inc
jl
mov
repnz
add
mov
cmpsl
out
add
outsl
mov
mov
jb
pop
adc
mov
xchg
dec
add
pop
cmpsb
inc
push
and
pop
add
push
in
nop
jl
cwtl
inc
mov
xchg
into
pop
cwtl
push
std
mov
clc
mov
xchg
pop
sub
in
sbb
cmp
pusha
ficoms
jge
adc
mov
rclb
lock
jb
inc
mov
test
aad
test
push
ret
add
ja
cwtl
mov
push
popf
inc
pop
fildll
sbb
scas
fimull
std
and
sub
push
shrb
xchg
pop
pop
inc
cmp
sub
test
cmpsl
aad
cld
xchg
test
jns
jg
sahf
popa
xchg
xchg
out
push
mov
out
dec
cmp
sahf
enter
clc
inc
cltd
mov
add
xor
adc
push
out
sbb
mov
insb
push
lods
push
dec
fbstp
dec
test
ja
lock
add
inc
xchg
pop
daa
push
or
pop
and
sub
stos
sbb
push
insb
adc
xor
mov
dec
fs
lds
pop
push
test
loop
push
into
xchg
mov
in
insl
in
ror
push
popa
das
ja
xlat
and
cmp
push
mov
inc
cmp
dec
adc
icebp
movsb
xor
das
insb
push
xor
aad
cld
ret
push
sub
add
popa
cmp
sub
jne
mov
cmp
in
outsl
pusha
fstps
jo
clc
loope
mov
insl
add
cmpb
jbe
push
inc
pop
inc
cmpsb
push
sub
push
adc
mov
daa
dec
cwtl
inc
and
das
scas
lahf
push
stos
pop
cmp
ret
imul
cmp
mov
sub
sbb
insb
insb
dec
out
xchg
imul
dec
mov
push
mov
xor
jb
push
es
andb
or
dec
movsl
xchg
sbb
fstl
jne
push
mov
pusha
cmp
scas
out
out
aaa
adc
mov
push
mov
cmp
fmuls
pop
dec
jne
sbb
data16
cmp
or
mov
mov
repnz
jp
sbb
push
xchg
pop
mov
pop
jae
movsb
or
repz
pop
mov
cmpsl
mov
push
rcr
jp
sub
push
push
outsl
call
das
dec
adcl
sub
pop
pop
cwtl
lcall
insb
mov
and
adc
mov
add
mov
sti
dec
stos
cmp
sub
mov
mov
call
adc
enter
inc
sti
leave
jbe
mov
addr16
sti
sti
jp
daa
xchg
xchg
loope
mov
adc
mov
jnp
inc
fdivs
cmp
out
mov
mov
sub
testl
mov
inc
ss
lahf
and
or
stos
inc
testb
scas
and
cmp
sub
push
imul
xchg
and
push
in
jne
cmpsb
cmp
inc
or
dec
les
push
mov
into
mov
das
mov
lcall
add
or
aam
sti
rorl
sbb
sub
loope
js
adc
test
sbb
js
dec
lret
adc
fidivrl
cli
xchg
lods
pop
fsubrp
adc
andb
in
jno
cmp
mov
xor
je
stc
sub
push
inc
pop
int3
rcrl
sbb
iret
lret
jecxz
ficompl
lods
cmp
repnz
ljmp
je
xor
cs
je
cltd
inc
jb
adc
mov
mov
mov
push
push
insb
xchg
push
adc
ss
add
mov
ja
pusha
dec
mov
mov
mov
mov
lods
rcll
jnp
std
sub
rclb
or
js
pop
fldl
and
mov
xchg
pop
in
pop
aam
or
xchg
pop
nop
fisubl
push
shl
lcall
sub
cs
ljmp
mov
ds
sti
mov
lock
and
dec
xchg
stos
push
pop
adc
adc
pop
lret
fst
jp
mov
pop
sbb
arpl
clc
fdivr
aad
xchg
leave
inc
and
sarb
mov
out
sbb
mov
adc
dec
test
movsl
mov
into
cli
sub
mov
fcoms
and
cmp
les
fistps
fwait
ret
adc
stc
jp
pushf
lret
cmc
dec
shll
jbe
mov
pop
cmc
pop
push
loop
loop
ret
push
shlb
mov
jp
mov
gs
ret
test
outsb
rorb
ficoms
in
popf
jle
jae
ljmp
mov
sub
mov
fs
mov
clc
inc
mov
mov
inc
mov
xchg
dec
pop
xchg
sti
cli
js
cmpsb
and
inc
add
inc
movsb
call
loope
add
mov
or
inc
int3
inc
cmp
dec
call
mov
push
mov
add
das
ror
mov
cmc
fcmovu
out
add
sbb
or
arpl
push
ljmp
xor
ret
scas
xor
sub
repz
lods
adc
cmp
cmp
int3
mov
mov
cmp
xchg
imul
stos
and
shr
and
xor
mov
mov
ret
aas
fdivrl
ljmp
in
push
scas
pushl
jo
sub
mov
sub
stos
cli
cmpsb
push
ret
cwtl
jl
jns
xor
xchg
aam
outsb
stos
imul
mov
lock
aaa
pop
mov
mov
adc
rorb
out
daa
add
shlb
dec
mov
or
pop
sub
jmp
cmp
insb
stos
mov
int3
mov
and
es
mov
repnz
add
mov
pop
aas
and
pop
stc
ss
jno
les
rcrb
fisttps
and
orl
push
adcl
aad
out
add
addb
pop
fldenv
scas
je
cmp
outsb
popf
les
popa
xor
mov
add
imul
int3
push
dec
xor
jmp
imul
call
add
lret
outsl
adc
xchg
push
fidivs
xor
iret
scas
add
mov
in
ss
enter
cmpb
jb
es
add
and
and
gs
jle
push
std
cmp
dec
sti
lret
sub
push
sub
fisttpl
mov
repnz
push
mov
cmp
mov
jb
or
sub
repnz
stos
in
push
pop
scas
add
xchg
sbb
enter
inc
mov
or
adc
dec
data16
rcrb
push
jno
sbb
dec
mov
xor
int
nop
push
pop
leave
clc
in
addr16
fisttps
xchg
or
push
popa
and
or
and
and
das
sbb
cmp
xor
sbb
xchg
outsl
cmp
pop
ret
or
jo
and
cli
ja
or
jb
dec
xor
xchg
inc
cmpsb
dec
lret
mov
fcompl
xchg
repz
cmp
push
das
jo
nop
inc
imul
aas
lret
call
mov
fucom
inc
and
mov
pop
dec
inc
das
mov
pusha
push
aad
lods
loop
cli
xor
fstp
cmp
test
out
fs
mov
shlb
movsl
and
mov
mov
mov
std
xor
xchg
add
adc
mov
xor
das
mov
pusha
mov
adc
jo
decb
jmp
fcoms
fsubrs
or
dec
add
lds
shlb
pushf
shlb
popf
out
jmp
xchg
jl
push
mov
mov
xchg
and
mov
pop
dec
xchg
xor
inc
cmpsb
push
data16
sub
cmpb
jge
sub
jae
push
push
cmp
rolb
lods
sbb
cmp
push
sarl
out
xor
popf
mov
js
out
repnz
xchg
gs
jnp
mov
dec
incl
insb
xchg
dec
cs
sub
xchg
push
mov
lahf
out
into
add
fnstsw
jg
daa
mov
int3
inc
ljmp
ljmp
dec
das
pop
mov
int
adc
ds
loop
sub
xor
jb
dec
inc
add
aam
adc
inc
movsl
inc
and
roll
movsb
fs
or
loopne
gs
or
dec
je
test
dec
mov
or
pop
pop
bound
sub
and
push
xor
mov
pop
int
loope
mov
leave
cmp
fisubrl
mov
adc
add
int
ret
mov
lret
repz
adc
or
out
cmp
in
fcmovb
inc
clc
lods
pop
pop
incl
mov
xchg
andl
test
mov
pop
pop
mov
out
jg
test
stos
aam
jbe
mov
mov
and
push
fcomip
mov
mov
xor
add
jp
dec
dec
sar
aaa
sub
cmp
lds
push
push
and
xor
jns
push
dec
add
and
imul
fcoml
out
out
iret
lcall
orl
ds
add
mov
test
stos
inc
ljmp
cwtl
imul
popa
inc
and
imul
cmp
fs
add
ljmp
mov
sub
and
clc
orl
repnz
mov
xchg
mov
jno
clc
lock
mov
push
jmp
cmp
sub
leave
gs
pop
jge
fdivrs
lret
xchg
punpckldq
sub
xor
mov
in
or
xor
cli
inc
sbb
scas
inc
dec
jge
jg
es
out
arpl
mov
xlat
jne
lods
rcrb
insb
cmp
das
sub
ret
sbb
loope
cli
repnz
mov
pop
insl
pop
jmp
les
scas
mov
insl
clc
addr16
enter
push
push
das
std
pop
fnstcw
es
jns
lcall
rcrl
xchg
push
out
inc
or
gs
mov
xchg
movsl
jmp
ss
adc
lods
je
incl
cmp
jnp
adc
enter
jbe
scas
sbb
rol
fdivl
mov
cmp
lods
andb
div
cmp
into
movsl
popa
cli
cli
mov
sahf
sahf
sub
ret
jae
enter
rcll
mov
or
mov
cmp
add
inc
fistpl
leave
mov
jp
xor
ret
jge
mov
mov
dec
mov
std
dec
push
push
dec
test
lods
stos
outsl
xor
mov
lahf
std
call
and
je
test
outsb
dec
jno
mov
adc
pop
out
iret
ret
std
popl
clc
jl
movsl
in
int3
cmpsb
adc
xchg
xor
popf
ds
push
inc
mov
xchg
push
sti
lock
xchg
popf
mov
mov
popa
pop
bound
scas
cmp
sbb
mov
dec
push
jb
clc
mov
sbbl
push
xlat
pop
aas
jb
adc
mov
adc
jl
in
and
ret
or
insl
ret
cwtl
ficoml
lahf
fbld
mov
mov
pop
int
or
insb
psubd
dec
repnz
fldenv
or
in
cmpl
xlat
xor
inc
int
push
push
mov
cmp
xchg
push
xchg
lret
pusha
pop
and
adc
and
and
loop
mov
or
mov
out
sbb
test
xchg
jnp
daa
cld
decl
lods
sbb
mov
pusha
sbb
add
repnz
mov
daa
mov
sbb
enter
incb
inc
and
lahf
mov
in
inc
or
or
fs
pop
jnp
cmpb
loope
and
mov
lods
cli
out
sub
lods
jge
add
push
enter
mov
rcrl
xor
xor
or
je
fidivrl
cli
xlat
sub
loopne
push
xchg
mov
adc
test
loopne
stos
inc
ds
adcb
pop
jne
hlt
mov
pop
les
push
xchg
xor
nop
inc
mov
and
push
mov
lahf
cltd
jno
add
sti
xchg
in
jnp
aaa
shl
sbb
xchg
jno
sbb
dec
jo
jbe
mov
out
mov
or
daa
pusha
pop
pop
sub
add
fnstenv
ds
out
push
xchg
or
sbb
dec
mov
jb
xchg
or
test
push
mov
mov
xor
fwait
or
jp
cmpl
imul
rorb
xchg
jbe
inc
xorl
in
xor
ret
dec
jmp
push
pop
xlat
mov
lcall
ret
and
or
in
test
pusha
fistpll
aad
xor
push
mov
dec
add
test
mov
lds
dec
cmp
std
pop
jle
xlat
xor
dec
out
std
lods
adc
cmp
lret
xchg
fs
adc
stc
lods
aas
js
jne
outsb
or
call
scas
push
repz
sbb
dec
or
adc
xchg
ret
add
or
jb
pushf
incb
jp
fld
fwait
adc
shll
repnz
movsb
and
jg
sub
pop
adc
rorb
stos
adc
push
sbbl
push
lods
ret
adc
daa
sub
xchg
jbe
push
jp
dec
shrl
mov
inc
push
cld
cmp
or
xchg
ja
js
mov
inc
lods
xchg
mov
jge
mov
or
and
scas
test
movsb
jb
repnz
idivl
inc
and
lret
pop
dec
call
and
sub
xchg
sub
stos
push
mov
jb
dec
cmp
in
or
cmp
or
push
sub
test
mov
out
jnp
clc
push
cmpl
sbb
mov
lahf
test
adc
call
push
adc
fdivrp
push
mov
xor
or
dec
push
mov
test
in
cld
sbb
mov
and
mov
jo
push
mov
fsubrs
stos
iret
fisubrs
out
shrb
push
xchg
ret
daa
add
push
jge
inc
iret
scas
adc
out
adc
jne
sbb
or
sti
repz
mov
xchg
sub
loope
mov
xor
sub
aaa
jno
sub
xchg
out
and
cmp
add
ljmp
push
xchg
hlt
mov
cmp
mov
add
xor
dec
ljmp
cwtl
popf
adc
scas
lds
sbb
pusha
and
and
xlat
js
push
bswap
daa
pushf
add
fdivl
sbbl
mov
ds
pop
lock
aas
stos
stc
jno
inc
daa
cmp
jmp
dec
and
xor
mov
aam
aam
mov
int3
and
xlat
jmp
decb
pop
sub
pushf
data16
pop
dec
in
rorb
pushf
loope
repz
cs
mov
or
scas
xor
mov
scas
add
fnstcw
xchg
sbbl
mov
sub
rcrb
jo
mov
cld
mov
cmp
lds
pop
outsl
scas
pop
or
popa
dec
mov
mov
hlt
or
sti
sar
or
sub
jnp
or
movsb
loopne
adc
sbb
mov
xor
mov
bound
mov
rcrl
shlb
cmpsb
gs
hlt
adc
mov
sbbb
hlt
stos
mov
sarb
jecxz
or
jns
jns
sub
lret
add
mov
stos
bound
sub
jbe
rolb
ljmp
fiaddl
mov
rcl
jmp
jnp
movsb
in
aas
inc
into
xchg
out
icebp
ss
int
jmp
enter
and
cmpsb
pop
movsl
xor
fwait
lock
addr16
pop
ucomiss
int
pop
pop
shlb
xchg
addr16
pop
leave
mov
push
data16
les
mov
data16
pop
add
rclb
xchg
or
inc
ror
jo
xor
jl
aas
mov
jno
ret
push
movsl
push
jno
ret
out
es
mov
pop
std
jmp
jle
iret
les
cmc
jge
call
push
push
fs
lods
inc
cmp
mov
inc
aam
push
jecxz
movsb
xchg
dec
mov
rol
lods
dec
push
inc
mov
pop
movsl
mov
sarl
cmp
or
push
jnp
fidivs
stc
add
and
repz
jmp
pop
sub
fdivrp
scas
sub
mov
hlt
inc
test
pop
lret
rcrb
inc
mov
sahf
xlat
sub
or
push
dec
shr
loopne
outsb
scas
xor
hlt
repnz
jge
les
or
sub
call
dec
pop
mov
adc
jns
in
push
jg
mov
repz
or
loopne
insl
aam
add
inc
iret
lds
inc
int3
jle
ret
cmp
icebp
popf
or
jae
add
call
cltd
push
sbb
push
pop
stc
sti
push
xchg
sbb
movsl
pushf
imul
aas
lcall
sub
popa
out
jmp
test
repz
xchg
call
cmp
xchg
cmp
xchg
xlat
adc
xchg
xchg
int3
adc
xlat
stc
mov
mov
popf
mov
push
mov
sub
das
jb
cmpsb
jmp
ret
ss
adc
sub
jge
push
xor
jmp
jecxz
jae
xor
cmpsb
jg
into
and
add
xchg
movsl
mov
aam
outsl
test
xchg
call
jno
pop
dec
jb
cmp
cs
jbe
push
cmpsl
dec
sti
into
cmc
dec
out
notl
sub
jbe
jne
pushf
sub
xchg
cmp
loop
jno
pop
int
fwait
jbe
xor
cmp
jo
xor
aas
add
mov
mov
int
ret
outsb
dec
jle
hlt
outsl
sub
mov
inc
cwtl
leave
add
mov
jmp
cmp
das
xor
add
mov
jmp
mov
mov
out
jmp
dec
adc
mov
daa
mov
mov
push
fistps
xchg
dec
lock
std
ljmp
jnp
hlt
pop
mov
mov
rcll
mov
ret
push
jo
inc
cli
lods
pusha
or
pop
in
sahf
fs
jle
sti
add
xlat
imul
add
and
clc
sub
lock
sub
leave
dec
lret
pop
out
jnp
imul
loope
push
scas
test
xchg
add
sbb
push
fwait
sbb
xchg
test
mov
xchg
popl
inc
inc
sar
pop
jg
jl
iret
mov
sbb
push
ss
shlb
shrl
call
jns
fwait
adc
imul
pushf
lea
test
out
clc
mov
idivl
xchg
and
xor
ljmp
inc
sub
stos
mov
lcall
cld
fs
cmp
iret
sti
pop
outsl
push
int3
mov
scas
stos
repz
xchg
iret
hlt
sbb
mov
xchg
mov
inc
cmpsb
add
ret
sbb
mov
and
mov
gs
xchg
jmp
sub
mov
imul
loope
mov
push
inc
pop
std
popf
pop
sbb
int
add
pop
xchg
mov
fldenv
idiv
and
mov
pop
in
sbb
mov
push
mov
mov
push
add
jne
push
xor
push
mov
push
inc
add
inc
xor
sbb
add
lahf
adc
in
arpl
pushf
cwtl
dec
test
xor
push
mov
cmp
inc
push
xchg
push
popa
push
inc
lock
in
mov
int
scas
cmp
mov
repz
or
adc
addb
push
testl
insl
shrb
enter
or
push
add
in
imul
xchg
lcall
pop
push
daa
ds
movsb
int3
imul
mov
adc
xor
jl
movsl
dec
stc
push
lock
mov
rorl
mov
int
lea
aaa
xchg
cmpl
mov
dec
sbb
mov
push
mov
sti
push
es
jle
ret
adc
ficoms
test
cli
push
cmp
jl
or
fildll
sbb
mov
pushf
sub
push
jle
push
mov
into
cmpb
icebp
daa
cmpsl
pop
repnz
cmpsl
and
outsb
pop
and
div
out
cmpsb
cwtl
addb
inc
mov
pop
dec
out
inc
cmp
insl
and
or
aad
xlat
add
gs
mulb
pop
pushf
js
sbb
xchg
subb
adc
arpl
sbb
shlb
shrb
loop
or
mov
cmc
jb
sub
aad
aad
sub
push
lret
mov
add
mov
jne
cltd
adc
addr16
cmpxchg
jmp
sbb
imul
popa
nop
mov
push
subb
and
mov
mov
xchg
pop
dec
jnp
mov
test
jns
dec
jmp
ret
mov
pop
xchg
mov
fcomi
or
mov
mov
and
cmp
lahf
sti
sbbb
mov
aam
cmp
jae
sahf
dec
stc
pushf
loope
repnz
mov
inc
cmp
sbbb
mov
xchg
cld
nop
fistpl
jbe
push
movsb
jnp
mov
sub
rcrb
call
clc
lea
dec
push
xchg
cwtl
jb
mov
jnp
movsl
pop
les
js
jb
test
xor
xchg
pop
sub
stos
ss
mov
mov
pop
push
push
fimuls
cwtl
xor
jmp
fbstp
out
aas
aad
pop
out
sti
mov
jecxz
adc
pop
push
unpckhps
jne
int3
movsl
sbbl
mov
dec
jbe
cmp
xor
mov
and
cmp
or
mov
cmp
jo
in
cmp
fmull
and
mov
daa
pop
sub
lahf
jg
jb
push
adc
les
aam
jb
sbb
mov
dec
cmp
ds
cmp
ret
push
in
and
inc
pop
repz
pop
or
es
or
int
adc
imul
test
cld
pop
mov
pop
push
push
and
int
xchg
jb
pop
cli
outsb
and
stc
mov
leave
jae
jnp
push
xchg
outsb
imul
xchg
and
mov
mov
in
ret
and
test
and
clc
insb
stos
adc
sti
popa
xlat
add
xor
int
fdivrp
addr16
aad
orb
sahf
mov
ljmp
inc
shr
fsubl
lret
rcr
mov
movhps
xchg
decb
xchg
sub
xlat
icebp
arpl
frstor
jp
adc
stos
dec
sbb
xchg
stos
imul
lods
pop
lahf
jo
xchg
sbb
mov
or
xchg
dec
ret
xchg
add
daa
cmpsb
pop
jb
inc
fwait
inc
jne
jae
or
iret
testb
aaa
test
xchg
ret
call
push
push
faddp
pusha
mov
xor
hlt
sub
mov
rcr
inc
sub
out
aam
xor
fs
inc
lcall
subb
loopne
cmp
imul
ret
call
rclb
jns
mov
xchg
add
popf
rcrl
cmp
addb
pushf
push
negb
cmp
jg
std
xchg
int3
xchg
std
dec
fists
add
jmp
jmp
mov
imul
jae
into
aas
jbe
adc
or
pusha
rol
dec
or
xchg
pop
xchg
pop
mov
xchg
nop
out
notl
mov
jo,pn
inc
aad
push
test
aaa
push
out
je
jae
and
test
adc
call
mov
outsl
mov
lcall
jo
cmpsl
inc
xor
pop
fwait
clc
cmp
lcall
fdivl
jne
add
mov
pushf
popf
push
mov
mov
dec
adc
pop
cmp
jmp
jb
mov
inc
insb
add
fwait
negb
sub
test
arpl
imul
popf
push
jge
outsb
cltd
jp
jg
mov
jg
xchg
add
inc
lahf
arpl
push
clc
cmp
and
dec
icebp
mov
inc
int
pop
pushf
dec
pop
ss
and
dec
adc
or
cmp
xorl
data16
mov
fidivrl
pushf
mov
pop
addl
fadds
repz
sbb
add
sar
jecxz
cmpsl
xor
pop
mov
xchg
cmp
lods
out
imul
pop
xchg
out
sub
dec
leave
sbb
push
frstor
xchg
cli
mov
call
es
cmpsl
cli
subl
or
xchg
add
jbe
pop
loope
dec
jne
xchg
hlt
orl
ss
iret
push
cwtl
jo
arpl
jno
and
push
in
pushf
out
or
insb
movsl
sbb
mov
sbb
jbe
pminub
test
les
xlat
jb
dec
add
mov
daa
pop
lds
pop
pushf
mul
lock
mov
add
xor
hlt
sub
mov
sbb
decl
imul
lcall
in
sub
jg
or
sub
cmp
inc
inc
lods
movsb
ja
xchg
rep
jbe
push
xchg
insb
dec
mov
sub
mov
fbld
stc
and
jle
dec
and
inc
sbb
dec
cmp
and
das
lds
repz
mov
xchg
lahf
or
fstpl
inc
push
xor
push
mov
pop
imul
jae
cmpsb
xorl
mov
inc
jno
adc
dec
push
pop
repnz
mov
jl
push
stc
leave
push
push
gs
sub
iret
std
push
jecxz
and
cld
xor
dec
loope
outsb
cltd
dec
mov
adc
shll
mov
dec
push
sar
scas
faddl
pop
int
cmp
mov
nop
fidivs
scas
fnstenv
xor
pop
sbb
sub
pop
stos
push
mov
push
mov
imul
insl
arpl
pop
mov
fdiv
push
xor
ss
scas
mov
adc
pop
xor
fldt
push
lds
pop
pop
mov
roll
adc
cmp
xchg
in
mov
mov
xchg
mov
adc
sbb
in
pop
rcr
shl
and
cmc
test
fwait
rcrb
int
lea
gs
mov
dec
xor
pop
icebp
cmpsb
idivl
ret
inc
movsb
shlb
outsb
fdivl
adc
aaa
mov
in
adc
shlb
insl
fstpl
xor
dec
clc
je
cmp
push
in
int3
inc
sbb
add
jae
mov
dec
pusha
gs
lods
cmp
mov
or
pushw
les
out
fildl
fmul
cwtl
adc
popf
in
int3
ret
bound
repz
fs
mov
ja
icebp
sahf
xor
pop
cmc
jbe
stc
inc
pop
cmp
inc
lods
mov
sahf
inc
pop
xchg
push
imul
or
in
jecxz
test
jmp
mov
cmpb
mov
scas
mov
or
jbe
into
mov
dec
es
cmp
or
mov
inc
or
push
das
popf
rol
add
ret
push
inc
test
push
adc
int
sarl
jb
lock
or
mov
or
fcmovu
xchg
in
outsl
cmp
in
adc
outsl
inc
jnp
inc
jnp
inc
push
jl
or
push
cmp
cmp
fnsave
out
cmpsb
in
xor
and
jbe
idiv
js
dec
jne
mov
adc
cwtl
jge
sbb
sahf
and
xchg
jge
lret
in
xorl
jo
jb,pt
repz
test
pop
xchg
push
dec
insl
cmp
jl
lcall
and
rol
fnsave
cld
out
jne
push
or
mov
rclb
dec
fdivrp
orb
and
rol
or
push
js
lret
aam
mov
in
sti
pop
add
pop
jae
ds
jns
mov
xrelease
or
lret
das
shll
leave
push
test
fsub
xor
aaa
sbb
pop
fisttpl
pop
ror
push
sub
adc
push
jo
pop
push
pop
pop
cltd
aad
sbb
sub
dec
neg
int
cmp
movsl
push
and
xor
inc
hlt
mov
push
test
test
lods
xchg
mov
or
cli
cltd
pop
and
outsb
movsb
negl
rcrl
sub
fs
sarl
out
jno
xchg
mov
mov
es
aaa
inc
xor
jbe
data16
fnstcw
hlt
cmc
inc
jae
stos
xchg
pop
negl
fcompl
or
sahf
jmp
jae
ret
sub
mov
mov
jmp
clc
repz
nop
popa
divb
jmp
dec
jne
pop
repnz
mov
sbb
mov
adc
inc
outsl
xchg
pop
sub
in
lods
and
hlt
adc
push
xor
loopne
jmp
mov
repnz
scas
sbb
dec
xchg
or
repnz
xchg
xchg
idivb
sar
rclb
addl
int
mov
push
daa
cmc
lods
test
dec
int3
mov
sarb
pop
lea
add
fidivrl
nop
hlt
xlat
and
or
mov
dec
sub
movsl
out
jbe
repnz
xchg
stos
and
or
jnp
cli
and
mov
inc
xchg
jo
push
addr16
data16
and
popf
pop
aaa
mov
ljmp
xchg
xorb
xor
daa
fwait
les
int
icebp
sbb
push
pop
in
pusha
push
cmp
mov
jmp
in
ficoml
add
xchg
adc
xchg
andl
movsl
std
bound
cmp
insb
repz
je
cmpl
sub
push
xor
sarb
cmpsl
jmp
push
int3
mov
std
xchg
roll
popa
lret
inc
jns
pop
push
xchg
shll
mov
dec
push
test
ljmp
add
js
mov
bound
mov
pusha
loop
fisttpll
call
cltd
and
adc
xor
pop
adc
pop
dec
gs
daa
jmp
das
dec
out
loop
sub
in
add
cmp
cld
dec
cmp
repz
sbb
mov
dec
in
ret
push
rol
test
mov
add
mov
and
in
push
jnp
in
in
adc
adc
fs
fwait
mov
mov
out
jo
xchg
inc
adc
pop
jp
jmp
test
mov
pop
mul
mov
push
sbb
xchg
out
cmp
cli
push
jl
push
lods
repnz
mov
inc
sub
lock
stc
adc
xchg
mov
loope
fistpll
sbb
pushl
push
push
pop
adc
test
cmp
xor
push
lea
push
push
lock
sahf
mov
mov
or
ret
pop
xor
lds
push
shlb
sbb
or
or
popf
dec
les
push
decb
shll
push
dec
jo
out
mov
pop
std
in
mov
iret
orl
test
and
int3
xor
dec
ds
mov
sbb
ficoml
dec
inc
xor
cmp
je
cmp
xchg
inc
or
jne
push
push
loop
popf
lock
jae
das
cwtl
outsl
mov
adc
mov
aad
orl
jp
cwtl
inc
lcall
mov
mov
out
cmpb
xchg
mov
mov
jl
rcrb
lret
leave
rorl
pushf
ret
jb
push
cmp
gs
sbb
mov
mov
mov
test
jne
cmpb
inc
adc
std
sbb
adc
jo
subb
mov
rcrl
ret
and
inc
inc
pop
addl
xchg
pop
push
subl
sub
into
movq
out
jge
adc
jp
add
rclb
pop
or
sbb
mov
add
mov
insb
cmp
pop
mov
test
push
xchg
and
push
mov
sub
push
sub
and
mov
xchg
or
in
push
mov
into
movsb
cld
add
outsl
jecxz
sbb
in
or
inc
cli
fnsave
fistpl
lret
push
sbb
xchg
mov
repz
test
mov
push
mov
pop
divb
push
scas
mov
adc
jbe
inc
into
fwait
cmp
inc
push
subl
loop
dec
into
add
add
add
int
push
das
sbb
stc
xor
rolb
mov
lds
push
pop
rcrb
sbb
arpl
sbb
iret
cmc
movsb
add
jmp
test
clc
aam
adc
push
xor
sub
mov
push
or
and
xchg
dec
dec
aas
roll
or
pop
push
pusha
lods
inc
pop
pop
andb
stc
push
sahf
dec
xchg
sahf
inc
dec
sahf
adc
sbb
xor
das
sbb
fldl
scas
paddusb
mov
fwait
push
inc
mov
test
je
icebp
mov
js
add
and
outsl
into
pop
add
mov
pushf
lret
iret
pop
lahf
cmp
mov
or
std
icebp
hlt
lret
mov
fistpl
xchg
out
xor
sub
movsl
pop
filds
adc
dec
mov
xchg
push
jae
cwtl
ficoms
frstor
dec
xchg
cli
imul
arpl
jg
adc
in
mov
adc
pop
mov
jns
xor
pop
push
and
test
insb
push
cmp
sub
xor
add
cmp
xor
cwtl
jne
in
pop
push
xor
mov
inc
js
mov
mov
insl
mov
les
or
sar
lcall
les
dec
insl
into
and
enter
pop
mov
nop
sbb
dec
int
gs
loopne
int3
jae
hlt
test
push
mov
add
xor
inc
and
jae
inc
jbe
in
cmp
loope
pop
sbb
push
cltd
nop
jbe
xor
stos
jmp
dec
push
pop
xor
aas
xor
cmp
or
lock
sti
mov
dec
jecxz
stos
add
mov
or
push
movsl
push
mov
hlt
das
mov
inc
mov
test
repz
pop
inc
lret
cld
add
push
in
or
sbb
daa
dec
ret
xor
jp
push
xchg
sahf
push
loope
dec
testb
xchg
inc
cmpb
mov
pop
push
std
cmp
pop
xchg
mul
aas
stos
add
jns
cli
lods
std
xchg
jecxz
jne
push
js
js
pop
pop
bound
sub
jnp
faddl
ljmp
pop
jae
imul
jo
sub
sbb
repnz
pop
enter
sub
cmp
out
mov
ja
int3
or
cmp
hlt
fs
xchg
adc
cmp
out
cwtl
icebp
pop
js
adc
mov
movsl
shll
gs
ljmp
bound
push
dec
loopne
mov
iret
test
xchg
sbb
cmp
out
insl
or
fldl
in
lods
xlat
sub
push
add
mov
cmpb
imul
fwait
xlat
cmpsl
add
outsl
push
movsb
push
test
xchg
arpl
js
mov
push
push
inc
pop
push
jge
mov
dec
stc
pusha
fs
pop
mov
fs
inc
cmp
adc
aaa
cs
xchg
mov
adc
xor
sub
inc
iret
pop
hlt
js
subl
lcall
dec
inc
cmc
push
hlt
mov
std
repz
mov
pop
add
and
shl
icebp
loopne
xchg
aam
add
jb
int3
lods
sbb
std
and
cld
lret
dec
fstps
jg
cld
addr16
seta
mov
xchg
or
sub
aas
mov
aaa
scas
cmpsl
gs
les
jae
xchg
loope
mov
cmc
sub
xchg
mov
mov
mov
movsl
jae
mov
in
insb
push
mull
dec
out
fcoms
pop
push
lds
sbb
or
xlat
jg
sub
push
or
pusha
loopne
popf
rcrb
icebp
ret
out
xchg
cmp
pushf
mov
mov
jle
inc
xchg
push
imul
jecxz
iret
xchg
cmpl
daa
fsub
test
push
sub
fimuls
sbb
loope
es
adc
insl
sub
pop
scas
mov
popf
lret
cmp
frstor
push
out
aad
xchg
pop
jnp
sub
mov
jg
jns
xor
xor
push
scas
sbb
cmpsb
clc
dec
loopne
int3
in
adc
cwtl
pop
ret
pop
inc
mov
shrl
fistl
push
outsb
jns
in
gs
jmp
lods
lahf
mov
sahf
lods
add
and
out
movsl
outsb
mov
cmc
pop
jge
jle
sbbl
inc
xchg
jmp
mov
cmp
sbb
push
inc
movsb
sbb
lods
adc
mov
push
out
and
cmp
mov
xchg
add
lds
inc
jae
cmp
sub
pop
mov
mov
sbb
push
or
lea
lahf
add
fsubl
inc
push
adc
cmpsb
lods
test
xchg
jle
cld
stc
dec
xlat
fsub
mov
pop
sbb
fsts
cmp
add
rcl
fidivl
xchg
jl
lds
popa
cld
sub
xor
ror
jge
lret
and
and
add
sbbb
dec
xor
dec
push
outsb
int
ret
and
rorb
push
cmp
fidivs
fwait
adc
fisttps
or
aas
jmp
in
test
or
inc
add
jno
lcall
mov
in
xchg
cmp
or
pusha
cli
outsl
jecxz
mov
mov
sahf
dec
ret
add
jns
sub
push
aas
xor
lret
dec
jecxz
mov
pop
xlat
scas
jbe
mov
fnstsw
dec
cwtl
insl
ret
adc
xorl
aam
sub
mov
cs
out
pop
dec
outsl
and
pop
push
lret
popa
addr16
arpl
sub
popa
mov
mov
adc
push
andb
jp
rol
cmp
movsb
bound
push
and
nop
ss
stc
mov
mull
lcall
std
test
out
adc
clc
mov
pop
cmp
jl
jle
fists
and
popf
gs
xorb
sbb
jmp
addr16
cmp
gs
stos
push
cmp
sbb
arpl
jg
adc
int
xchg
adc
fdiv
jle
lret
orb
lret
xchg
push
mov
push
loopne
pop
aam
insb
push
pusha
xchg
testl
or
sub
add
fstpl
adc
lock
xor
xor
daa
xchg
mov
xor
imul
jecxz
ds
add
mov
mov
xchg
inc
adcl
lods
stos
data16
es
add
test
mov
dec
mov
mov
test
mov
ja
test
jnp
inc
in
lret
push
pop
mov
add
int
mov
jns
loope
in
jg
jle
movntps
loope
nop
xchg
mov
dec
cmpsb
mov
popf
mov
out
mov
pop
xchg
jne
jmp
mov
stc
int
dec
pop
xchg
movsb
cmc
popa
test
push
adc
xorb
sbb
xchg
mov
mov
fisubs
mov
es
dec
and
xchg
pop
mov
adc
sbb
ljmp
ds
jp
adc
jbe
mov
rclb
int
lcall
sub
in
ficoms
mov
jp
jp
rcrb
xor
push
insb
and
xchg
fwait
jb
pop
add
xchg
test
ljmp
sub
test
mov
mov
sub
fldcw
mov
mov
dec
mov
outsl
aad
push
pop
rcrb
mov
push
int3
aaa
add
add
adc
lock
jno
push
xchg
sti
mov
sbb
fidivs
popa
dec
cli
and
std
xlat
daa
loop
jl
xor
mov
and
jge
roll
dec
push
sub
sub
add
movsl
xor
lea
or
sub
dec
mov
insl
sub
xor
xchg
xchg
in
and
cmpsl
scas
adc
cld
insl
stc
repz
aaa
in
rcrl
shl
in
xchg
lret
int
adc
mov
fstl
xor
sbb
out
lret
loop
mov
xchg
lcall
es
pop
cltd
mov
and
adc
mov
fisubl
sbb
xchg
sbb
pushf
jnp
fiadds
inc
mov
ss
dec
inc
xrelease
and
out
cli
pop
push
add
clc
xchg
fisttpl
sbb
cs
mov
and
fsubl
test
movsl
dec
and
push
jae
xor
add
scas
aad
jge
sub
cmpsl
aaa
mov
add
push
loope
mov
mov
mov
shl
negb
imul
call
xlat
push
dec
mov
jnp
mov
test
push
inc
inc
in
scas
sti
pop
fs
int3
lret
dec
mov
lock
test
push
and
mov
jae
pop
movsl
mov
data16
xlat
pusha
into
sub
in
mov
ret
aam
push
insb
mov
adc
out
loope
movb
dec
iret
push
jae
adc
cld
and
shll
int3
mov
and
xorb
pop
push
pop
cli
jecxz
sbb
cmpl
pop
xchg
cltd
pop
mov
jg
shrb
jp
test
pop
js
mov
xor
push
clc
sub
dec
repnz
dec
out
dec
fildll
push
cltd
mov
lgs
add
or
scas
popa
test
rorb
nop
xor
xchg
sub
mov
stc
mov
cmp
das
imul
inc
stos
inc
and
repz
std
mov
clc
xor
mov
lcall
out
sbb
fistl
and
pop
dec
xchg
mov
ja
es
and
push
push
cld
xor
cmp
mov
and
adc
es
jo
out
mov
or
pusha
mov
out
aaa
mov
jmp
call
pop
aas
nop
or
cmp
bound
add
pushf
not
test
fsubr
xchg
push
inc
push
lret
sub
pop
dec
outsb
mov
aaa
sub
push
adc
out
int
jb
sub
add
inc
push
pop
pop
mov
xor
jmp
fsubrl
xchg
sub
test
mov
cmp
pop
xchg
in
xor
pop
mov
inc
imul
mov
xchg
or
sub
pusha
test
sub
adc
jae
jp
movsb
push
sbb
popa
iret
aam
daa
inc
xor
mov
mov
and
pop
or
or
into
imul
imul
jmp
inc
test
cs
sbb
pusha
sub
int
adc
mov
pop
pop
sub
outsl
lcall
sbb
mov
add
in
adc
hlt
mov
dec
adc
sbb
lock
outsb
xchg
mov
and
sbb
icebp
sarl
inc
xchg
adc
into
les
fldl2e
jno
mov
adc
lcall
adcb
cmp
or
cwtl
mov
push
aad
ds
and
push
leave
cmpl
jl
nop
mov
loope
movsb
into
dec
xchg
mov
pop
mov
mov
lods
pop
jl
adc
xchg
dec
dec
dec
push
cltd
mov
add
push
test
push
rcrl
sbb
rorl
jecxz
mov
cmpsb
jnp
ret
je
ret
adc
adc
push
sbb
fwait
decl
les
xchg
jb
cmc
adc
mov
jmp
inc
lcall
lahf
add
cmp
lret
cmp
hlt
push
enter
or
add
cmpsb
ja
pop
adc
fdivp
cmc
sub
inc
and
test
adc
sbb
enter
xchg
in
dec
call
in
push
pop
mov
inc
pop
push
inc
aad
xchg
lea
mov
dec
mov
jecxz
pop
push
push
movsb
nop
push
xchg
or
dec
inc
cli
add
jb
rcll
mov
dec
hlt
mov
and
scas
adc
mov
lcall
test
jg
hlt
cmp
mov
sub
cmc
mov
data16
and
cmp
and
push
lret
push
mov
xlat
mov
mov
sbb
push
outsl
jns
movsl
movb
xchg
sub
cwtl
mov
sub
inc
movb
imul
or
int3
in
stc
xchg
loope
mov
stc
mov
mov
sahf
mov
out
inc
xor
jae
mov
fsubs
mov
mov
xchg
sbb
shrl
or
movsb
mov
mov
cmc
orb
dec
rcrl
mov
push
inc
mov
test
sbb
shr
pusha
jnp
push
lahf
jp
dec
insl
mov
jecxz
int3
add
aad
incl
inc
fwait
sbb
add
lret
std
out
fisubl
out
pop
push
mov
adc
sub
ljmp
and
mov
lods
into
inc
in
call
fcoml
cmp
sbb
cmp
dec
xchg
clc
dec
sub
jp
mov
push
inc
fstpl
adc
pop
dec
rcrl
lcall
inc
jae
mov
mov
adc
sbb
mov
mov
es
cmpb
subl
mov
and
pop
ret
cmp
fistps
ficoml
ret
xchg
cmp
addr16
insl
subl
daa
push
popf
jle
or
lahf
xor
adc
xor
push
add
sub
out
lds
jnp
aas
cmpb
lcall
in
enter
ret
sub
jmp
sub
adc
mov
or
imul
xor
dec
push
cmp
lahf
push
add
pop
fistpll
cld
dec
mov
xor
mov
jge
movl
lock
pop
mov
cltd
mov
in
inc
outsl
xor
rcr
xchg
xor
jno
inc
sahf
mov
pop
pop
rol
mov
push
sbb
mov
jbe
ret
ss
out
jmp
push
fxch
imul
jno
stos
int3
imul
mov
mov
mov
dec
cmpsl
out
push
xlat
mov
mov
cmpl
stos
cmc
inc
add
outsl
in
and
pop
mov
mov
daa
adc
jns
push
push
pop
pop
pop
in
mov
loopne
sub
inc
ljmp
push
test
mov
or
cli
insl
dec
adc
xlat
fcompl
repz
jg
mov
pop
test
xchg
xlat
push
dec
or
mov
mov
repnz
out
fidivrs
pop
mov
sub
jmp
ret
mov
sbb
lret
ss
pop
or
xor
mov
xorl
stc
loopne
sbb
push
xchg
push
imul
arpl
icebp
xor
in
xor
imulb
mov
dec
cmpsl
and
pop
jl
or
outsl
dec
add
lcall
pop
das
xchg
mov
sbb
sub
push
and
mov
jge
adc
loopne
mov
xchg
jp
stos
pusha
mov
clc
dec
mov
fs
push
inc
jl
mov
and
jge
gs
in
out
sbb
sub
fsubrs
mov
lret
fildll
and
mov
inc
lds
fidivrs
push
and
push
xor
decl
inc
iret
push
or
popf
movsl
loop
dec
movsb
ljmp
xchg
xchg
imul
faddl
orl
test
add
dec
and
in
cmp
cmpsb
and
mov
pop
cmp
jns
push
out
divl
arpl
pusha
push
iret
cmpsb
mov
sahf
cwtl
xchg
insl
shlb
cmp
cmc
sti
ds
enter
scas
or
inc
or
fwait
sbb
or
xchg
jnp
je
push
fwait
jo
xchg
mov
xor
pop
in
scas
pushf
jo
ss
and
and
sub
in
sub
pop
mov
mov
aaa
mov
dec
pop
cli
cmpsl
mov
insb
ror
jne
popf
inc
jbe
popa
aad
out
adc
xor
jo
pop
enter
stc
stos
push
sti
into
inc
in
cmpsl
outsb
jae
cmpsl
lock
loopne
push
inc
test
stc
push
dec
cs
ds
mov
pushf
into
loopne
sub
pop
cld
add
add
sbb
xor
or
fmul
push
pop
sub
fistpll
ret
inc
mov
push
sahf
daa
mov
push
sub
and
or
repz
add
cmp
cwtl
sub
mov
jecxz
out
in
jns
fdivrs
sbb
fdivrp
js
push
sbb
fsts
xor
cli
cld
or
rorb
enter
loope
jge
jge
mov
rolb
mov
cltd
loope
mov
cmp
mov
mov
xchg
jb
pushf
add
leave
loope
fimull
push
xchg
or
ljmp
push
and
out
or
fld
jg
jne
stc
push
sbb
in
cmpsb
pushl
xchg
fs
sarb
orl
lret
xor
hlt
insl
call
rcrb
inc
jns
icebp
mov
inc
cld
dec
jb
sbb
mov
add
cmpsb
lret
shl
and
fnstsw
adc
push
imul
push
adc
int3
and
mov
push
lret
mov
or
sub
rorl
xchg
sarb
adc
xor
ss
imul
popa
stos
je
mov
ss
aam
mov
xchg
arpl
idiv
add
out
cli
xor
mov
pop
clc
out
mov
mov
aas
jge
es
loopne
xchg
test
lds
cmp
sbb
inc
movsl
fucomi
add
mov
push
lea
push
test
fcoml
xchg
jg
add
adc
ljmp
cmp
movsl
jns
cmp
push
or
pop
loop
mov
and
cmp
gs
add
xor
sbb
fs
movsb
ljmp
mov
or
jbe
xchg
or
pop
les
jno
and
mov
xchg
push
loopne
fbld
mov
mov
sub
rcl
clc
ficoml
cli
xlat
pop
inc
push
adc
or
sub
and
jno
addl
push
shll
jmp
inc
mov
movsb
sahf
xchg
pop
push
fcmovnb
add
pop
cmp
arpl
and
lds
add
jns
cmpsb
add
sub
xlat
and
mov
xor
addr16
add
adc
int
lahf
jns
in
imul
mov
pushf
inc
sub
and
inc
adc
cld
cmp
fiadds
loope
xor
mov
loopne
adc
mov
mov
sbb
xor
jns
ret
sbb
lahf
pop
sub
or
data16
and
sbb
adc
pop
pop
sbb
inc
sbb
jp
push
scas
adc
dec
cmpsb
pop
xor
fisubrl
inc
mov
mov
sahf
testl
jecxz
jl
imul
popa
sbb
xor
aad
push
push
sti
lret
inc
adc
je
lds
in
stc
push
mov
pop
sub
xor
or
scas
call
dec
scas
adc
push
mov
dec
popa
nop
push
push
mov
idivb
and
jbe
addb
dec
push
jl
inc
sub
inc
call
lahf
leave
lods
mov
aaa
rcrl
fisubl
push
dec
jecxz
dec
xchg
aas
ret
frstor
in
repz
ds
push
dec
xchg
jne
and
lahf
cmpsl
sbb
dec
add
stc
in
out
mov
xlat
fs
std
pop
mov
cs
fisttps
ds
int
fcmovne
call
inc
sub
outsl
sub
fwait
mov
das
dec
imul
call
test
push
add
jbe
xchg
aaa
add
imul
pop
mul
loopne
ljmp
int
aas
cmpsb
mov
stc
xchg
push
xchg
jae
push
xchg
pop
ret
jp
pop
mov
insl
mov
jmp
sbb
push
mov
push
xlat
pop
pop
divb
popf
inc
imul
std
and
sbb
mull
or
mov
lock
xchg
fnstenv
into
out
test
pop
dec
fsubl
mov
pop
cwtl
in
xchg
dec
xchg
xchg
sub
mov
stos
or
mov
dec
add
mov
add
inc
add
fwait
xor
sub
jecxz
out
sbb
shlb
inc
dec
sub
shrl
int
push
shll
dec
add
add
mov
mov
lcall
mov
inc
xor
push
lea
pop
int3
cmovs
dec
inc
mov
jecxz
ror
mov
ja
movsb
mov
cmp
pop
mov
or
out
cmpsb
sub
in
bound
xor
data16
cmp
mov
out
fistpl
xchg
sarb
or
loop
inc
dec
out
popa
add
movsb
leave
stos
mov
jle
dec
or
add
inc
popf
rcrl
daa
dec
aaa
sub
mov
std
enter
jg
dec
xor
popf
pusha
or
pusha
cmp
xchg
data16
mov
pop
cmp
pop
jge
and
jmp
lcall
mov
mov
test
les
sub
ds
cli
inc
sub
fimull
or
jge
scas
push
loope
aaa
jns
push
std
mov
sbb
test
sbb
inc
rcrl
mov
cld
or
or
adc
pop
les
sbb
out
mov
jnp
mov
data16
nop
sbb
fbstp
ficomps
mov
cmp
dec
adc
cmp
mov
and
ret
inc
je
pop
ds
mov
rorl
jne
mov
js
sti
pop
xchg
gs
das
mov
iret
ret
mov
loope
lea
and
icebp
loop
dec
outsl
xchg
shlb
inc
data16
lcall
add
cld
adc
fwait
sbb
jnp
pop
jl
stos
mov
and
das
mov
sub
hlt
xchg
sub
mov
mov
or
add
mov
aad
mov
int
jg
icebp
mov
mov
push
push
stos
xor
sub
xchg
sub
push
sbb
jb
sbb
out
arpl
cmpb
push
jg
sub
mov
call
enter
stos
mov
lret
scas
jp
repnz
out
ljmp
xor
jo
mov
movsl
out
jo
rcrl
jbe
push
sub
cmp
add
sbb
push
jp
stos
mov
sub
mov
mov
xlat
test
xchg
pusha
pusha
xor
out
dec
int3
push
inc
cwtl
sbb
roll
pop
mov
popa
mov
lock
mov
jae
movsb
adc
dec
das
adc
lods
pop
fsubl
insb
adc
daa
xlat
xchg
push
and
call
jl
andl
pop
aad
adc
or
mov
in
js
push
enter
adc
sub
mov
test
movsb
scas
mov
mov
aad
loopne
sbb
push
out
mov
daa
cmp
push
out
sbb
mov
sub
inc
sbb
nop
push
std
out
or
sahf
mov
mov
out
test
outsb
ret
out
aas
cmpsl
andl
aad
pop
mov
and
les
jmp
inc
pop
add
or
jmp
or
test
fnstenv
and
sbb
out
sub
inc
sbb
cmc
shll
iret
or
loopne
fimull
xchg
jae
lret
cs
test
and
add
lods
add
adc
pop
pushl
push
jge
sub
aam
movsl
add
jmp
mov
in
dec
mov
xor
inc
mov
mov
sarb
shrl
pusha
adc
mov
dec
in
ret
sti
mov
call
mov
push
xchg
popf
clc
into
sti
push
fimuls
mov
mov
pop
loop
ret
lods
inc
sahf
jle
mov
je
push
xchg
jl
push
cmpsb
ja
jge
xor
pop
pop
decl
sbb
scas
jo
stos
out
cmp
mov
pop
cli
mov
sbb
and
int3
jge
fsubrp
loope
ljmp
xchg
pop
sbb
adc
repz
mov
inc
jp
das
pop
jns
insl
mov
je
jae
xchg
icebp
arpl
mov
test
or
or
lds
in
xor
int
cld
scas
dec
insb
test
mov
shll
aas
sar
xchg
movsl
jmp
add
sub
jle
mov
les
sti
loope
inc
jnp
pushf
hlt
inc
hlt
inc
cmpl
ss
lret
jmp
jbe
shl
imul
lods
imul
push
mov
out
hlt
push
out
ds
sub
cmovns
inc
sub
out
xchg
mov
sbb
popa
les
sbb
stos
sbb
and
adc
lahf
popa
mov
cmp
sbb
imul
cmp
fbld
adc
mov
mov
xorl
test
lret
mov
aas
cmp
test
push
adc
xchg
lret
imul
fisubrl
or
cs
repnz
cmc
fnstsw
or
roll
mov
pop
inc
mov
stos
xchg
bswap
out
fcomps
mov
xor
leave
xor
mov
xor
pop
and
mov
jle
xor
fbld
push
push
cld
mov
fists
sbb
nop
inc
cmpsl
push
pusha
lea
dec
in
mov
and
dec
xchg
xor
mov
movsb
mov
insl
cmp
and
cwtl
mull
pop
int
cld
fsubr
notl
arpl
imul
or
shl
add
out
sub
sbbb
ljmp
outsl
push
push
pop
push
jne
jnp
ret
loopne
outsb
je
pop
lahf
inc
aam
andb
dec
loop
fmuls
movl
test
sbb
test
mov
mov
test
dec
divl
pushf
pop
mov
stc
mov
lods
push
push
push
pop
das
mov
pop
xchg
cmp
push
xchg
test
push
cmp
jno
outsl
jl
shr
iret
ljmp
adc
call
lods
outsl
loop
jbe
mov
xor
pop
add
aas
lahf
jle
es
cmp
out
subl
movb
cwtl
ret
test
sbb
mov
add
adc
into
fistpll
dec
cmp
faddp
scas
das
repnz
inc
test
jbe
xor
and
adc
setl
push
add
fwait
lahf
mov
adc
lcall
das
cmpsb
movsb
mov
sbb
jg
add
pushw
imulb
rolb
mov
mov
push
xor
mov
popa
out
jmp
xlat
cmp
mov
aad
lods
test
test
and
inc
mov
faddl
push
mov
xor
xor
push
pop
lcall
adc
jg
push
dec
sbbl
das
pushf
pop
mov
leave
cmp
andb
push
repz
fwait
aas
imul
mov
je
mov
ret
jns
out
mov
push
and
pushf
insb
int3
xor
inc
in
and
sbb
pop
sub
push
test
arpl
xchg
or
out
sbb
fists
data16
lcall
int3
cltd
add
mov
adc
je
or
cmpsl
cmpsb
ljmp
push
inc
and
aas
jo
inc
adc
mov
and
dec
test
cmp
and
push
ffreep
icebp
mov
cmpsb
push
cli
ret
lcall
ds
into
fadds
fmul
pop
iret
aad
nop
cmp
daa
aas
and
xchg
xlat
in
xchg
inc
test
hlt
std
stos
mov
jbe
pop
fldenv
jmp
das
push
daa
sbb
sti
imul
stos
and
mov
mov
cmp
sbb
gs
insl
mov
pop
stos
and
movsl
xchg
andb
lret
adc
js
fwait
jl
jns
daa
clc
dec
xchg
jbe
cmpsb
leave
or
loope
stc
outsb
pop
je
sti
je
call
out
pop
imul
mov
sbb
aas
fisubrs
sbb
pop
jmp
repnz
xchg
sbbl
inc
test
inc
nop
xchg
scas
in
loopne
cmpsl
pop
mov
es
jno
push
and
fistpll
add
icebp
pusha
in
loop
and
jo
dec
lea
stos
sbb
adc
sub
sbb
dec
fcmovbe
mov
and
adc
push
stc
or
mov
push
pop
fisubs
cmpsl
adc
mov
lret
dec
out
test
out
dec
arpl
mov
movsl
dec
jp
pusha
movsb
xor
mov
push
dec
lcall
stc
or
add
add
ja
pop
mov
fists
fadds
leave
adc
xor
call
sbb
mov
inc
movsb
cltd
dec
je
xchg
test
outsb
inc
cmp
mov
test
mov
pop
mov
imul
mov
adc
mov
sub
sbb
inc
ror
out
div
scas
mov
inc
or
jle
clc
adc
fcoms
clc
mov
push
xchg
push
cli
mov
pop
popa
lcall
mov
repnz
in
out
lea
xor
push
mov
mov
or
repz
mov
push
and
adc
and
mov
jns
add
sbb
jnp
shl
hlt
xchg
sub
aam
add
mov
out
sbb
lcall
mov
and
pop
pop
and
cld
into
pop
dec
mov
jl
inc
lret
add
lods
scas
xor
adc
lcall
or
pop
push
inc
sarl
adc
repnz
pop
jbe
fisubl
mov
ljmp
dec
dec
dec
nop
push
inc
jns
cmp
jmp
dec
or
dec
xor
sahf
mov
adc
out
and
pop
push
or
pop
push
ljmp
mov
out
mov
xor
pop
cmp
and
imul
insb
or
jmp
hlt
push
in
negb
clc
outsl
mov
ud0
outsb
push
stc
mov
icebp
repnz
das
scas
aad
sbb
and
mul
in
add
jno
popa
mov
cmp
dec
mov
loop
clc
mov
pusha
fstpl
jb
decl
jb
pop
cmpsl
testb
dec
pop
push
jmp
inc
jns
outsl
xchg
inc
dec
cmc
scas
mov
jns
inc
mov
mov
mov
inc
and
aas
clc
mov
jns
mov
jae
pop
sbbl
jge
scas
popa
xchg
aad
ja
shrb
stc
xchg
or
pop
iret
sbb
cmp
add
idivl
lahf
leave
push
shll
cmp
or
jl
rcrl
xchg
push
out
sti
mov
and
out
arpl
mov
lcall
cwtl
pop
ja
mov
push
lret
push
mov
test
jo
ds
add
shr
mov
and
push
xchg
mov
mov
iret
dec
pand
in
pushf
sub
mov
push
inc
pushf
inc
sahf
sbb
movsl
push
loope
sbb
insl
mov
fsubs
rcrb
mov
push
sbb
adc
lods
mov
dec
pop
push
loope
repz
rolb
push
xchg
cmc
mov
or
mov
into
enter
cmpsl
pushf
sbb
shlb
ss
lahf
test
push
jno
mov
mov
rclb
fs
outsl
arpl
pop
aam
test
inc
inc
xchg
xor
push
sti
sahf
orb
jmp
lahf
push
add
in
mov
dec
cmpsb
aaa
in
in
xchg
movsb
mov
test
adc
mov
popf
into
push
pusha
data16
fimull
and
sarb
jl
xor
mov
pop
mov
loope
rorl
cmpl
jmp
aad
ss
xchg
fucomi
in
jno
out
pop
push
leave
stos
sub
push
xchg
inc
jb
ja
push
cli
mov
mov
jg
aad
addl
popa
das
dec
in
pop
mov
push
and
fimull
xor
jo
and
and
sbb
pop
mov
add
jg
pop
outsl
mov
aam
and
sub
or
sbb
cmpb
sub
sbb
sub
push
xchg
rcl
dec
mov
aam
jmp
jp
in
sahf
mov
lock
xchg
repnz
outsb
mov
sub
loope
lea
ljmp
xchg
xchg
adc
fsubl
sub
push
scas
xor
add
das
bound
cmp
sub
daa
aaa
inc
sub
lahf
mov
test
aad
shrb
add
jb
mov
je
sbb
addr16
nop
dec
push
xchg
sub
test
cltd
mov
test
cmp
inc
mov
or
pop
sahf
or
lret
and
push
popa
dec
pop
pop
push
frstor
mov
gs
mov
es
push
add
gs
into
test
pop
ret
outsb
incl
mov
gs
adc
sub
hlt
xchg
test
data16
mov
das
jb
leave
push
fmul
stos
or
or
dec
push
inc
mov
popa
push
repz
adc
cmp
jle
inc
test
jge
pop
xchg
or
js
data16
or
jno
into
cmp
mov
imul
mov
pop
data16
inc
inc
sbb
jns
dec
sub
stos
icebp
pop
add
call
lret
and
sbb
xor
or
and
mov
loop
cmpsb
fnstenv
hlt
mov
shrb
hlt
mov
dec
cmpsl
cli
pop
and
jl
fwait
scas
mov
mov
es
adc
push
aam
jb
out
xor
lock
mov
daa
mov
pop
push
jne
lcall
pop
dec
sahf
mov
jg
pop
or
stos
xor
cltd
xor
out
dec
js
or
lret
dec
mov
sarb
lods
mov
jbe
mov
roll
shr
and
lcall
clc
sub
mov
out
sbb
jbe
ret
mov
mov
mov
out
or
das
call
sub
scas
cmp
pushf
mov
inc
inc
sub
cmpsl
shll
and
mov
into
adc
sarl
xchg
cwtl
inc
sti
mov
gs
cmc
pop
add
data16
mov
lods
lret
cmp
mov
std
xchg
mov
outsl
add
adc
jl
test
in
inc
mov
movsb
out
mov
ds
sub
jl
push
int3
xor
pop
call
cld
fcoms
cmp
popa
inc
mov
dec
pop
push
adc
addb
lcall
daa
xchg
pop
add
or
mov
in
push
mov
enter
es
or
cmp
ja
rolb
add
add
add
icebp
mov
repz
lret
insl
push
leave
out
outsl
pusha
inc
test
push
fucomip
jmp
pop
mov
dec
jg
mov
fwait
push
sbb
sub
ljmp
sahf
in
xchg
adc
sub
sbb
xor
jns
dec
or
stos
jns
push
pop
mov
xchg
insb
sbb
sub
jl
add
or
push
mov
pop
dec
and
push
sbb
jg
xor
xorb
mov
pop
and
mov
sub
popa
cmp
pop
mov
lret
gs
pop
push
mov
add
add
push
dec
or
imul
lret
test
sub
mov
xor
add
fs
add
roll
adc
xchg
pop
cmc
repnz
push
mov
mov
cmpsb
dec
push
shlb
xchg
dec
xchg
ljmp
imul
fwait
ucomiss
je
ret
mov
push
pop
cmp
rcrb
or
outsb
sbb
nop
push
imul
lahf
adc
sub
mov
mov
inc
stc
aaa
cltd
inc
add
aam
fistpll
lcall
orl
push
aam
aaa
sbb
dec
inc
ss
mov
ss
fisttps
jne
cmp
jge
out
push
loope
xor
cs
mov
fnsave
jne
xor
cli
dec
mov
fs
mov
out
stc
outsl
dec
xchg
push
lods
sub
cmp
xor
sarl
mulb
imul
or
pop
adc
adc
push
mov
cmp
imul
fs
push
mov
js
repnz
inc
popa
cwtl
lret
jg
adc
shrl
mov
push
repz
dec
dec
lahf
movsb
sbb
push
filds
arpl
es
fs
sub
aaa
stos
push
nop
mov
jmp
fldt
sahf
sub
stos
push
stos
aas
decb
xor
call
jns
shlb
jle
mov
cmp
lock
mov
orl
ja
xchg
push
pop
in
add
push
sbb
pop
jge
orb
sub
call
icebp
lret
dec
jmp
movl
mov
enter
pop
xchg
enter
popl
ljmp
and
xchg
in
outsb
in
loopne
mov
sbbl
loopne
subl
aas
testl
hlt
test
mov
les
add
xor
sub
movsb
pop
int
xor
les
cmp
fs
lcall
jp
lock
outsl
dec
das
jmp
in
nop
mov
push
lock
cmp
js
push
or
xor
and
mov
mov
movsb
bound
xchg
jb
je
stos
out
shlb
cmp
repz
dec
int3
inc
jnp
popa
icebp
bnd
xchg
mov
or
bnd
xchg
sub
lea
pop
sub
out
lods
aaa
sbb
popa
fisttpll
addr16
jp
insl
dec
push
or
xchg
mulb
or
mov
xchg
mov
mov
pop
outsb
sub
jge
sbbb
mov
push
cmp
lock
mov
pusha
sub
push
sub
enter
add
mov
lcall
jge
pushl
jb
push
xchg
sbb
sbb
mov
inc
jmp
mov
push
push
inc
seta
xor
mov
movsb
adc
jl
push
jecxz
jp
pop
inc
out
mov
cmp
adc
cmp
pusha
insb
adc
ret
out
out
pop
xchg
popf
fildl
icebp
std
lods
push
pop
aaa
push
hlt
std
inc
cmp
in
aas
push
pusha
sbb
dec
scas
cmpb
or
repz
fdivrs
outsl
pop
imul
dec
adc
enter
movsb
ss
mov
out
mov
mull
out
and
pop
mov
or
call
addr16
outsl
sub
pop
lahf
inc
popf
je
push
fmull
jp
add
dec
leave
mov
push
pusha
pop
sti
dec
call
outsl
test
mov
lods
test
cmp
mov
mov
mov
arpl
subl
push
insl
lods
jmp
mov
lret
bound
sub
add
in
pop
jns
loop
adc
xor
xchg
xchg
sub
mov
cmp
push
fistpll
call
fwait
jge
sbb
shl
adc
out
pop
nop
jo
dec
addr16
lea
cmp
pop
test
es
sub
bound
inc
or
and
sub
or
idivb
mov
in
jno
cmp
cmp
scas
ljmp
outsb
and
add
in
mov
mov
in
xchg
nop
cmp
into
push
jecxz
popa
and
movsb
cmpl
ss
xor
or
push
pushf
sbbb
adc
adc
imul
xchg
sub
ljmp
loopne
and
mov
or
stos
add
dec
pop
xor
rclb
mov
mov
ljmp
call
sbb
icebp
jmp
adc
stc
je
fisttps
jl
xchg
out
cmp
inc
sbb
mov
pop
cmp
outsb
incl
or
cmp
lds
mov
cmp
mov
mov
cmp
in
inc
popa
movl
inc
lods
in
cmpsb
jno
jge
fsubp
mov
mov
mov
movsl
pop
xchg
mov
stc
cmp
movsb
xchg
adc
pop
mov
and
push
inc
enter
sti
fcmovnu
push
out
cmp
ds
rcll
into
push
mov
call
inc
add
sub
stc
cli
call
mov
sub
and
push
aam
std
dec
push
push
mov
gs
movsb
mov
add
xchg
add
add
push
push
fldt
lahf
mov
dec
sahf
out
neg
outsb
inc
push
out
cltd
popa
ss
clc
test
int3
fldl
pop
jp
add
cmc
xchg
iret
mov
jl
inc
pop
inc
add
cwtl
dec
sbb
mov
mov
out
push
push
cmp
mov
cmp
fistl
les
xchg
cs
fstps
outsl
fldcw
or
mov
mov
cmc
or
and
mov
daa
in
into
xor
aas
mov
call
xor
es
popl
outsl
fiadds
mov
jmp
xchg
outsb
or
or
mov
lods
pop
daa
xor
add
sti
and
fbstp
cltd
xchg
jno
jmp
jno
stc
dec
jl
fimuls
xchg
mov
jne
in
jle
mov
or
gs
ja
cmp
pop
insb
pop
push
lahf
push
je
xlat
xor
test
adc
mov
pop
aam
shlb
sbb
xchg
and
xchg
jg
call
andl
data16
notl
ljmp
push
pop
pop
rcl
addl
xchg
adc
fstps
jo
cmp
xchg
sub
cmpl
mov
pusha
in
stos
inc
add
call
fisttpl
cwtl
pushf
jle
sub
xor
sbb
pop
lds
stc
subl
lcall
dec
sbb
push
jecxz
inc
and
mov
add
push
aam
lahf
jb
iret
shll
xor
dec
xor
stc
bound
xor
mov
insl
aaa
push
dec
test
ja
pushf
sbb
test
mov
mov
jmp
xor
jo
xor
das
jns
outsl
fnstenv
ss
jbe
inc
pop
cli
jno
sarl
clc
ficoml
xor
fnstcw
and
cs
jns
jmp
pop
adc
adc
inc
mov
sbb
push
xor
nop
mov
pop
jp
xchg
cmc
add
push
cld
sub
dec
inc
aad
std
imul
cltd
xchg
orb
pop
pop
loope
cvtps2pd
fwait
sub
mov
or
fstl
mov
insl
fistl
push
popf
push
mov
cmp
stos
and
xor
pop
lahf
sbb
xchg
mov
dec
outsb
pop
outsl
ja
jns
xchg
mov
cld
pop
testl
imul
aam
addr16
call
mov
hlt
cmp
les
insb
daa
inc
ljmp
push
lods
sbb
shlb
cmpsl
cmpsl
stos
and
sbb
dec
lret
test
add
push
mov
or
std
dec
inc
cmove
sbb
push
jnp
pop
shr
es
pop
icebp
ss
mov
xchg
push
adc
sbb
das
dec
lahf
fldcw
pop
xchg
or
iret
push
push
mov
pop
push
adc
pop
mov
adc
push
pop
mov
sbb
xor
adc
shl
xor
imul
inc
loop
add
mov
int
pop
out
fwait
or
xchg
cld
mov
sbb
mov
add
dec
jns
fnsave
mov
or
push
and
inc
push
sbb
jge
adc
or
pop
popa
mov
xchg
movsb
ds
dec
aaa
mov
sbb
xchg
xor
fidivrs
leave
jmp
inc
cmp
seta
push
add
cltd
push
movsw
xchg
out
sahf
push
pop
stos
neg
out
in
pop
stos
sub
fwait
push
pop
add
push
arpl
lcall
pop
notb
imul
push
aad
insl
adc
hlt
pop
mov
inc
inc
xchg
rcrb
icebp
lds
adc
adc
insl
shl
testb
jl
jl
ja
dec
sbb
dec
or
cmc
add
je
and
int
hlt
inc
addb
cld
movsb
fbstp
mov
jge
insl
push
mov
fxch
lcall
negl
dec
xor
xchg
shrb
sbb
or
jge
mov
cmp
outsl
aam
pop
mov
jmp
loopne
add
push
pushf
push
rolb
pushf
pop
mov
dec
pop
lds
sbb
imul
dec
mov
mov
gs
push
dec
cmp
adc
outsb
adc
xchg
addr16
rolb
das
out
inc
mov
inc
pop
repnz
mov
adc
rolb
ss
push
rorl
inc
inc
jp
enter
mov
or
mov
out
test
or
out
add
jge
xchg
ret
add
jbe
in
adc
or
jae
mov
cmp
sub
aad
loope
lods
xor
lret
jbe
lret
jge
push
xor
dec
and
pop
fistps
inc
ss
imul
call
or
pusha
jmp
inc
outsb
dec
mulb
fldcw
pop
cld
fstpl
repnz
pop
out
push
sbb
inc
in
out
sub
sahf
jne
jecxz
and
or
mov
adcb
js
ficomps
jb
sub
push
push
sbbb
mov
in
xchg
stc
fsub
out
repnz
pop
mov
sarb
repz
or
sar
sub
mov
div
mov
dec
sub
pusha
or
and
sti
pop
mov
xor
fwait
aam
push
cli
test
xlat
cli
push
jno
adc
push
push
sub
xchg
xlat
enter
stos
pop
push
je
repz
mov
push
mov
or
push
test
sub
adc
push
cmp
jo
add
iret
inc
fcmovbe
xchg
lock
pop
lret
fsubl
and
dec
testl
jecxz
mov
mov
or
push
jae
inc
adc
add
sub
outsl
cmc
movsl
out
out
test
cmp
mov
mov
dec
test
push
lahf
and
push
jne
lock
in
sbb
dec
clc
dec
jg
sbb
lret
and
jno
inc
scas
leave
movsb
clc
xlat
aaa
and
push
sbb
sbbb
pop
loop
mov
and
ja
pop
mov
adc
jmp
outsl
ret
inc
loop
and
cwtl
pop
js
int
push
adc
jle
lock
xchg
and
mov
in
out
sbb
dec
lods
scas
xlat
daa
jle
repnz
mov
and
push
lods
stos
ds
shlb
inc
cmpl
or
dec
sub
ret
sti
shlb
or
xor
cmp
in
sbb
add
adcl
or
mov
push
pop
lret
scas
jge
out
pusha
fst
mov
and
inc
xlat
mov
push
test
jge
push
ja
or
push
out
sub
in
pusha
dec
movsb
arpl
push
mov
pop
lds
pushf
fbld
adc
movsl
insb
inc
fimull
mov
pop
shlb
les
xor
scas
sbb
adc
jae
cmpsl
or
in
mov
int
mov
sub
aaa
adc
test
les
and
out
or
adc
push
sub
into
dec
je
add
xchg
or
inc
lea
dec
sbb
subl
cwtl
mov
fs
clc
cmp
and
push
mov
outsb
xchg
push
repz
mov
xchg
bound
dec
push
ljmp
sub
in
add
jle
movsb
sti
ret
shll
scas
cli
shll
orl
es
cwtl
std
pop
fildl
out
push
sub
cmp
test
in
or
rorb
pusha
add
pop
cli
jl
lcall
fadd
mov
fnstsw
inc
add
adc
push
lea
jg
repnz
sbb
inc
and
mov
push
mov
mov
ss
mov
add
xor
test
mov
mov
push
jp
cmc
loop
mov
icebp
mul
or
mov
add
adc
repnz
rcl
rcll
lcall
jnp
imul
loopne
sub
mov
je
mov
stos
arpl
in
movsl
or
popa
test
popf
or
xor
push
je
or
loope
call
pop
scas
push
xor
adc
sub
ret
push
cmp
imul
iret
in
call
xor
sahf
loope
xor
in
stos
mov
mov
jne
mov
aam
adc
xor
adc
inc
lock
cli
call
push
jecxz
and
pop
cld
imul
pop
lea
mov
inc
sahf
sbb
lret
mov
enter
sbb
mov
std
pop
in
xor
adc
sub
outsb
mov
dec
shlb
xor
xchg
shlb
adc
in
cmp
rorb
add
mov
xchg
jae
loope
xorl
pop
pop
dec
or
sarl
cmp
xlat
and
and
int
out
push
jmp
xor
pop
lcall
adc
or
mov
rcrb
icebp
imulb
movsb
pop
xor
ret
add
outsb
stc
das
ret
ret
cmp
and
mov
pusha
mov
mov
jns
and
lock
jp
aad
xchg
testl
int3
push
jge
je
cwtl
fldcw
mov
inc
and
fidivl
leave
lock
mov
dec
nop
pop
xchg
jbe
xor
cwtl
sub
bound
addr16
jnp
out
sbbb
iret
std
mov
lods
fwait
pop
cmp
mull
mov
mov
adc
idiv
xor
mov
push
mov
icebp
lret
cmpsl
popa
pop
jl
test
inc
les
xchg
movzbl
sar
mov
mov
in
inc
cmp
cmc
aas
stos
and
lods
daa
or
xchg
iret
mov
in
loopne
cli
rcll
adc
push
or
inc
cmpsb
fldl
lods
adc
repz
les
addr16
lea
dec
dec
test
sti
ljmp
fimuls
into
clc
mov
mov
jp
sbb
push
cmpsl
sbb
mov
xor
int
push
roll
sbb
xchg
test
cmp
pop
mov
push
mov
jae
pop
mov
addb
ljmp
pop
pop
pop
push
push
les
cmp
inc
je
cvtpi2ps
dec
sub
in
divl
test
push
lret
shr
fst
hlt
dec
cmp
mov
xor
adc
add
mov
jo
push
pop
fidivrs
xchg
or
hlt
and
pop
popa
mov
and
dec
lds
sahf
sti
das
jp
insl
lods
subb
jbe
lock
mov
xchg
dec
jne
dec
xor
aaa
jecxz
and
out
add
into
push
pop
or
mul
xchg
or
inc
xchg
mov
sub
imulb
and
nop
push
jne
jb
lret
add
lea
js
mov
push
aam
js
orb
mov
sub
fstl
and
shr
inc
jbe
sub
xor
sahf
cmp
not
outsl
jo
push
fwait
add
sahf
mov
inc
inc
addr16
mov
pop
aad
movsb
icebp
adc
sub
pop
jo
and
cmp
mov
insl
not
aaa
out
xchg
inc
outsl
pop
adc
xlat
pop
cmpl
pop
pop
popf
pop
ljmp
mov
call
idiv
push
jnp
dec
fcmovne
imul
mov
insb
ja
lcall
cmpsb
leave
testl
add
inc
mov
fucom
shr
dec
inc
jns
inc
cli
in
mull
adc
cmp
movsl
push
repnz
sbb
xchg
xchg
shr
push
jnp
add
sub
mov
rol
outsb
mov
arpl
cmp
jecxz
xchg
sbb
test
movsl
insl
fsts
inc
adc
shrb
jae
imul
add
add
inc
int3
cwtl
mov
std
enter
add
mov
bound
mov
sub
mov
pop
je
std
adc
push
push
xor
pop
mov
dec
dec
jp
sub
bound
lea
or
stc
pushl
adc
sub
xchg
mov
mov
mov
iret
nop
xor
lds
xor
push
frstor
adc
andb
into
pop
and
cmp
jmp
lea
cmpsb
pusha
xor
mov
enter
dec
mov
hlt
iretw
iret
out
or
push
mov
icebp
and
mov
pop
xor
icebp
and
sub
jecxz
xor
out
xchg
xor
nop
inc
fcompl
iret
push
repz
cmp
lret
dec
mov
sub
out
rcr
push
jge
mov
push
push
push
flds
push
mov
dec
js
aam
sub
xor
fcoml
push
sbb
xor
call
or
jns
push
stos
enter
cld
mov
cli
lods
lods
xchg
cmp
mov
ds
lret
cmpsl
jns
pop
jns
dec
pop
mov
pop
jecxz
sbb
mov
xchg
xchg
inc
dec
inc
cmp
push
repz
pop
test
jne
cltd
test
leave
leave
pop
fwait
mov
mov
sbbb
dec
xchg
push
cli
xor
loopne
stos
bound
add
pop
faddl
xchg
mov
adc
cmpsl
cmp
push
dec
out
cmp
call
push
aas
mov
outsl
dec
in
mov
dec
mov
lcall
or
sub
mov
das
scas
aad
dec
ljmp
or
sarb
ret
shlb
sbbl
xchg
fldl
add
test
mov
inc
shll
jp
rcll
push
testl
mov
inc
xchg
nop
lods
mov
mov
std
push
mov
push
loopne
xor
xor
mov
hlt
and
jnp
and
mov
cli
aam
add
xchg
and
xchg
adc
mov
loope
arpl
lcall
dec
js
push
mov
mov
mov
int3
add
insl
pop
daa
fsubrl
mov
ss
mov
mov
mov
lret
add
xchg
xchg
shrl
xor
decl
fidivs
xor
lahf
mov
xor
sahf
cmpsl
and
sub
test
xchg
cwtl
mov
xchg
repnz
jne
sbb
push
cwtl
dec
cwtl
std
fsubrs
and
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
call
xchg
clc
jno
pop
clc
or
call
cld
jl
sti
lcall
repz
clc
cmc
xchg
xor
shll
or
xchg
adc
into
mov
sbb
jmp
jmp
in
add
lods
cld
sti
push
sub
pop
and
fstl
clc
sub
or
insb
fbstp
cs
stos
dec
inc
nop
adc
sti
cwtl
inc
outsl
cmp
add
add
and
xchg
in
js
int
mov
mov
and
dec
icebp
subb
imul
out
push
test
filds
push
jbe
push
push
mov
jmp
dec
cmp
out
mov
bound
icebp
and
stos
dec
sahf
sub
fyl2x
xchg
push
rorl
or
xchg
mov
add
xor
aaa
dec
in
sbb
cltd
sbb
sbb
out
mov
xchg
mov
pop
movsl
inc
jne
insb
and
ret
test
out
dec
loop
out
movsl
gs
pop
jo
push
insb
xchg
movsb
pusha
loope
nop
in
jl
jmp
jge
add
xchg
sbb
xor
ja
push
pop
inc
out
cld
lock
and
pop
push
and
jbe
mov
push
or
jp
hlt
aad
in
sbb
flds
and
loope
pop
jns
mov
idivb
push
out
adc
dec
sbb
pop
out
into
sub
and
lods
sahf
leave
dec
push
pop
dec
jp
pop
gs
pushl
dec
pop
popa
xchg
cmpb
push
out
bound
into
mov
std
mov
jo
pop
adc
lea
jo
mov
or
lret
arpl
inc
mov
mov
xor
jle
daa
icebp
mov
out
or
lcall
out
insl
in
mov
inc
jp
pop
sbb
jecxz
sbb
mov
jns
adc
pop
xchg
in
add
push
mov
xchg
cmpsl
and
inc
push
jno
dec
pop
push
nop
xchg
cli
sahf
sbbb
push
pop
mov
or
iret
hlt
inc
mov
fs
scas
jle
adc
rol
cmp
mov
cmp
cmp
gs
test
mov
lcall
pop
adc
inc
add
adcl
bound
fwait
pop
pop
ret
mov
add
pusha
mov
lea
movl
push
mov
lea
xor
push
cmp
jne
inc
inc
push
push
push
add
push
push
push
add
push
push
movl
nop
nop
nop
push
push
push
push
sub
mov
movl
movb
mov
lea
mov
mov
movzbl
mov
shl
mov
dec
mov
movzbl
shl
dec
mov
mov
movzbl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movzbl
add
shl
lea
cmp
jae
mov
movw
add
loop
mov
xor
movl
mov
add
mov
xor
cmp
je
movzbl
shl
inc
inc
or
cmp
jle
mov
cmp
jae
mov
and
mov
mov
shl
mov
add
cmpl
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
movzbl
mov
mov
and
mov
shl
mov
sub
sar
add
imul
cmpl
lea
mov
jle
mov
sub
mov
movzbl
mov
shll
mov
lea
mov
and
cmpl
lea
mov
lea
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
cmpl
lea
mov
je
jmp
sub
sub
mov
lea
shr
sub
cmpl
mov
je
cmp
jle
jmp
cmp
jg
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
jmp
sub
sub
mov
lea
shr
sub
mov
jmp
mov
mov
mov
mov
mov
inc
cmpl
mov
jg
movl
jmp
cmpl
jg
subl
jmp
subl
jmp
mov
sub
mov
sub
mov
shr
sub
cmp
mov
mov
lea
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
mov
lea
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
setg
add
lea
mov
jmp
mov
sub
sub
mov
shr
mov
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
movl
mov
sar
lea
mov
mov
mov
mov
shl
add
cmp
lea
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
sub
sarl
mov
mov
cmpl
lea
mov
je
xor
cmpl
mov
mov
setg
lea
mov
mov
sub
mov
mov
mov
inc
mov
jmp
sub
sub
mov
shr
sub
mov
jmp
mov
sub
shr
mov
sub
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
mov
movzwl
imul
cmp
jae
mov
mov
sub
mov
sar
lea
mov
mov
jmp
mov
sub
sub
mov
shr
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
cmpl
mov
setg
add
lea
mov
cmp
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
jmp
sub
sub
mov
shr
sub
cmp
mov
ja
cmp
je
movzbl
shl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
shll
sar
movl
lea
mov
mov
lea
mov
movl
jmp
sub
sub
mov
mov
shr
movl
sub
movl
mov
add
mov
mov
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
lea
mov
dec
mov
jne
mov
mov
shl
sub
add
cmpl
mov
jg
addl
cmp
mov
jle
mov
mov
shl
movl
lea
mov
mov
lea
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
lea
mov
mov
dec
mov
jne
lea
cmp
mov
jle
mov
mov
sar
and
lea
or
cmp
mov
jg
mov
shl
add
mov
lea
sub
add
mov
jmp
lea
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
shrl
add
cmp
jb
sub
or
dec
jne
mov
shl
mov
add
movl
mov
movl
mov
mov
add
mov
add
cmpl
ja
cmp
je
shll
movzbl
shl
inc
or
mov
mov
shr
movzwl
imul
cmp
jae
mov
mov
sub
sar
lea
mov
mov
jmp
sub
sub
mov
shr
sub
mov
mov
mov
inc
or
mov
shll
dec
mov
jne
mov
inc
mov
je
mov
mov
add
cmp
ja
mov
mov
sub
add
lea
mov
inc
mov
mov
inc
incl
dec
je
mov
cmp
jb
jmp
mov
cmp
jb
cmpl
ja
cmp
mov
je
jmp
mov
jmp
inc
sub
xor
mov
mov
mov
mov
mov
add
pop
pop
pop
pop
add
add
xor
lea
mov
push
cmp
jne
mov
xor
pop
lea
mov
or
je
mov
lea
add
push
add
call
xchg
mov
inc
or
je
mov
jns
movzwl
inc
push
inc
mov
push
call
or
je
mov
add
jmp
call
add
lea
xor
mov
inc
or
je
cmp
ja
add
mov
xchg
rol
xchg
add
mov
jmp
and
shl
mov
add
jmp
mov
lea
mov
push
push
push
push
push
call
lea
andb
andb
pop
push
push
push
push
push
call
pop
popa
lea
push
cmp
jne
sub
jmp
add
add
sahf
insl
add
xor
